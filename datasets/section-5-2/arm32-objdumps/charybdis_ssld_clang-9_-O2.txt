
../repos/charybdis/ssld/.libs/ssld:     file format elf32-littlearm


Disassembly of section .init:

0001108c <.init>:
   1108c:	push	{r3, lr}
   11090:	bl	11400 <__errno_location@plt+0x48>
   11094:	pop	{r3, pc}

Disassembly of section .plt:

00011098 <open@plt-0x14>:
   11098:	push	{lr}		; (str lr, [sp, #-4]!)
   1109c:	ldr	lr, [pc, #4]	; 110a8 <open@plt-0x4>
   110a0:	add	lr, pc, lr
   110a4:	ldr	pc, [lr, #8]!
   110a8:	andeq	r2, r1, r8, asr pc

000110ac <open@plt>:
   110ac:	add	ip, pc, #0, 12
   110b0:	add	ip, ip, #73728	; 0x12000
   110b4:	ldr	pc, [ip, #3928]!	; 0xf58

000110b8 <sigemptyset@plt>:
   110b8:	add	ip, pc, #0, 12
   110bc:	add	ip, ip, #73728	; 0x12000
   110c0:	ldr	pc, [ip, #3920]!	; 0xf50

000110c4 <strerror@plt>:
   110c4:	add	ip, pc, #0, 12
   110c8:	add	ip, ip, #73728	; 0x12000
   110cc:	ldr	pc, [ip, #3912]!	; 0xf48

000110d0 <rb_get_type@plt>:
   110d0:	add	ip, pc, #0, 12
   110d4:	add	ip, ip, #73728	; 0x12000
   110d8:	ldr	pc, [ip, #3904]!	; 0xf40

000110dc <zError@plt>:
   110dc:	add	ip, pc, #0, 12
   110e0:	add	ip, ip, #73728	; 0x12000
   110e4:	ldr	pc, [ip, #3896]!	; 0xf38

000110e8 <abort@plt>:
   110e8:	add	ip, pc, #0, 12
   110ec:	add	ip, ip, #73728	; 0x12000
   110f0:	ldr	pc, [ip, #3888]!	; 0xf30

000110f4 <rb_event_addish@plt>:
   110f4:	add	ip, pc, #0, 12
   110f8:	add	ip, ip, #73728	; 0x12000
   110fc:	ldr	pc, [ip, #3880]!	; 0xf28

00011100 <rb_ignore_errno@plt>:
   11100:	add	ip, pc, #0, 12
   11104:	add	ip, ip, #73728	; 0x12000
   11108:	ldr	pc, [ip, #3872]!	; 0xf20

0001110c <rb_lib_version@plt>:
   1110c:	add	ip, pc, #0, 12
   11110:	add	ip, ip, #73728	; 0x12000
   11114:	ldr	pc, [ip, #3864]!	; 0xf18

00011118 <inflateEnd@plt>:
   11118:	add	ip, pc, #0, 12
   1111c:	add	ip, ip, #73728	; 0x12000
   11120:	ldr	pc, [ip, #3856]!	; 0xf10

00011124 <__libc_start_main@plt>:
   11124:	add	ip, pc, #0, 12
   11128:	add	ip, ip, #73728	; 0x12000
   1112c:	ldr	pc, [ip, #3848]!	; 0xf08

00011130 <rb_setselect@plt>:
   11130:	add	ip, pc, #0, 12
   11134:	add	ip, ip, #73728	; 0x12000
   11138:	ldr	pc, [ip, #3840]!	; 0xf00

0001113c <__gmon_start__@plt>:
   1113c:	add	ip, pc, #0, 12
   11140:	add	ip, ip, #73728	; 0x12000
   11144:	ldr	pc, [ip, #3832]!	; 0xef8

00011148 <rb_ssl_handshake_count@plt>:
   11148:	add	ip, pc, #0, 12
   1114c:	add	ip, ip, #73728	; 0x12000
   11150:	ldr	pc, [ip, #3824]!	; 0xef0

00011154 <rb_send_fd_buf@plt>:
   11154:	add	ip, pc, #0, 12
   11158:	add	ip, ip, #73728	; 0x12000
   1115c:	ldr	pc, [ip, #3816]!	; 0xee8

00011160 <vsnprintf@plt>:
   11160:	add	ip, pc, #0, 12
   11164:	add	ip, ip, #73728	; 0x12000
   11168:	ldr	pc, [ip, #3808]!	; 0xee0

0001116c <strncpy@plt>:
   1116c:	add	ip, pc, #0, 12
   11170:	add	ip, ip, #73728	; 0x12000
   11174:	ldr	pc, [ip, #3800]!	; 0xed8

00011178 <getenv@plt>:
   11178:	add	ip, pc, #0, 12
   1117c:	add	ip, ip, #73728	; 0x12000
   11180:	ldr	pc, [ip, #3792]!	; 0xed0

00011184 <deflate@plt>:
   11184:	add	ip, pc, #0, 12
   11188:	add	ip, ip, #73728	; 0x12000
   1118c:	ldr	pc, [ip, #3784]!	; 0xec8

00011190 <deflateInit_@plt>:
   11190:	add	ip, pc, #0, 12
   11194:	add	ip, ip, #73728	; 0x12000
   11198:	ldr	pc, [ip, #3776]!	; 0xec0

0001119c <calloc@plt>:
   1119c:	add	ip, pc, #0, 12
   111a0:	add	ip, ip, #73728	; 0x12000
   111a4:	ldr	pc, [ip, #3768]!	; 0xeb8

000111a8 <rb_set_nb@plt>:
   111a8:	add	ip, pc, #0, 12
   111ac:	add	ip, ip, #73728	; 0x12000
   111b0:	ldr	pc, [ip, #3760]!	; 0xeb0

000111b4 <memset@plt>:
   111b4:	add	ip, pc, #0, 12
   111b8:	add	ip, ip, #73728	; 0x12000
   111bc:	ldr	pc, [ip, #3752]!	; 0xea8

000111c0 <rb_strlcpy@plt>:
   111c0:	add	ip, pc, #0, 12
   111c4:	add	ip, ip, #73728	; 0x12000
   111c8:	ldr	pc, [ip, #3744]!	; 0xea0

000111cc <rb_get_ssl_certfp@plt>:
   111cc:	add	ip, pc, #0, 12
   111d0:	add	ip, ip, #73728	; 0x12000
   111d4:	ldr	pc, [ip, #3736]!	; 0xe98

000111d8 <inflate@plt>:
   111d8:	add	ip, pc, #0, 12
   111dc:	add	ip, ip, #73728	; 0x12000
   111e0:	ldr	pc, [ip, #3728]!	; 0xe90

000111e4 <rb_init_rawbuffers@plt>:
   111e4:	add	ip, pc, #0, 12
   111e8:	add	ip, ip, #73728	; 0x12000
   111ec:	ldr	pc, [ip, #3720]!	; 0xe88

000111f0 <free@plt>:
   111f0:	add	ip, pc, #0, 12
   111f4:	add	ip, ip, #73728	; 0x12000
   111f8:	ldr	pc, [ip, #3712]!	; 0xe80

000111fc <rb_lib_loop@plt>:
   111fc:	add	ip, pc, #0, 12
   11200:	add	ip, ip, #73728	; 0x12000
   11204:	ldr	pc, [ip, #3704]!	; 0xe78

00011208 <deflateEnd@plt>:
   11208:	add	ip, pc, #0, 12
   1120c:	add	ip, ip, #73728	; 0x12000
   11210:	ldr	pc, [ip, #3696]!	; 0xe70

00011214 <rb_read@plt>:
   11214:	add	ip, pc, #0, 12
   11218:	add	ip, ip, #73728	; 0x12000
   1121c:	ldr	pc, [ip, #3688]!	; 0xe68

00011220 <rb_set_type@plt>:
   11220:	add	ip, pc, #0, 12
   11224:	add	ip, ip, #73728	; 0x12000
   11228:	ldr	pc, [ip, #3680]!	; 0xe60

0001122c <strlen@plt>:
   1122c:	add	ip, pc, #0, 12
   11230:	add	ip, ip, #73728	; 0x12000
   11234:	ldr	pc, [ip, #3672]!	; 0xe58

00011238 <rb_ssl_get_cipher@plt>:
   11238:	add	ip, pc, #0, 12
   1123c:	add	ip, ip, #73728	; 0x12000
   11240:	ldr	pc, [ip, #3664]!	; 0xe50

00011244 <memcpy@plt>:
   11244:	add	ip, pc, #0, 12
   11248:	add	ip, ip, #73728	; 0x12000
   1124c:	ldr	pc, [ip, #3656]!	; 0xe48

00011250 <rb_close@plt>:
   11250:	add	ip, pc, #0, 12
   11254:	add	ip, ip, #73728	; 0x12000
   11258:	ldr	pc, [ip, #3648]!	; 0xe40

0001125c <strtol@plt>:
   1125c:	add	ip, pc, #0, 12
   11260:	add	ip, ip, #73728	; 0x12000
   11264:	ldr	pc, [ip, #3640]!	; 0xe38

00011268 <sigaddset@plt>:
   11268:	add	ip, pc, #0, 12
   1126c:	add	ip, ip, #73728	; 0x12000
   11270:	ldr	pc, [ip, #3632]!	; 0xe30

00011274 <strcpy@plt>:
   11274:	add	ip, pc, #0, 12
   11278:	add	ip, ip, #73728	; 0x12000
   1127c:	ldr	pc, [ip, #3624]!	; 0xe28

00011280 <rb_ssl_clear_handshake_count@plt>:
   11280:	add	ip, pc, #0, 12
   11284:	add	ip, ip, #73728	; 0x12000
   11288:	ldr	pc, [ip, #3616]!	; 0xe20

0001128c <rb_rawbuf_length@plt>:
   1128c:	add	ip, pc, #0, 12
   11290:	add	ip, ip, #73728	; 0x12000
   11294:	ldr	pc, [ip, #3608]!	; 0xe18

00011298 <rb_free_rawbuffer@plt>:
   11298:	add	ip, pc, #0, 12
   1129c:	add	ip, ip, #73728	; 0x12000
   112a0:	ldr	pc, [ip, #3600]!	; 0xe10

000112a4 <rb_get_ssl_strerror@plt>:
   112a4:	add	ip, pc, #0, 12
   112a8:	add	ip, ip, #73728	; 0x12000
   112ac:	ldr	pc, [ip, #3592]!	; 0xe08

000112b0 <close@plt>:
   112b0:	add	ip, pc, #0, 12
   112b4:	add	ip, ip, #73728	; 0x12000
   112b8:	ldr	pc, [ip, #3584]!	; 0xe00

000112bc <fwrite@plt>:
   112bc:	add	ip, pc, #0, 12
   112c0:	add	ip, ip, #73728	; 0x12000
   112c4:	ldr	pc, [ip, #3576]!	; 0xdf8

000112c8 <rb_init_prng@plt>:
   112c8:	add	ip, pc, #0, 12
   112cc:	add	ip, ip, #73728	; 0x12000
   112d0:	ldr	pc, [ip, #3568]!	; 0xdf0

000112d4 <rb_outofmemory@plt>:
   112d4:	add	ip, pc, #0, 12
   112d8:	add	ip, ip, #73728	; 0x12000
   112dc:	ldr	pc, [ip, #3560]!	; 0xde8

000112e0 <rb_supports_ssl@plt>:
   112e0:	add	ip, pc, #0, 12
   112e4:	add	ip, ip, #73728	; 0x12000
   112e8:	ldr	pc, [ip, #3552]!	; 0xde0

000112ec <sigaction@plt>:
   112ec:	add	ip, pc, #0, 12
   112f0:	add	ip, ip, #73728	; 0x12000
   112f4:	ldr	pc, [ip, #3544]!	; 0xdd8

000112f8 <rb_ssl_start_connected@plt>:
   112f8:	add	ip, pc, #0, 12
   112fc:	add	ip, ip, #73728	; 0x12000
   11300:	ldr	pc, [ip, #3536]!	; 0xdd0

00011304 <rb_lib_init@plt>:
   11304:	add	ip, pc, #0, 12
   11308:	add	ip, ip, #73728	; 0x12000
   1130c:	ldr	pc, [ip, #3528]!	; 0xdc8

00011310 <rb_new_rawbuffer@plt>:
   11310:	add	ip, pc, #0, 12
   11314:	add	ip, ip, #73728	; 0x12000
   11318:	ldr	pc, [ip, #3520]!	; 0xdc0

0001131c <rb_open@plt>:
   1131c:	add	ip, pc, #0, 12
   11320:	add	ip, ip, #73728	; 0x12000
   11324:	ldr	pc, [ip, #3512]!	; 0xdb8

00011328 <inflateInit_@plt>:
   11328:	add	ip, pc, #0, 12
   1132c:	add	ip, ip, #73728	; 0x12000
   11330:	ldr	pc, [ip, #3504]!	; 0xdb0

00011334 <rb_recv_fd_buf@plt>:
   11334:	add	ip, pc, #0, 12
   11338:	add	ip, ip, #73728	; 0x12000
   1133c:	ldr	pc, [ip, #3496]!	; 0xda8

00011340 <rb_ssl_start_accepted@plt>:
   11340:	add	ip, pc, #0, 12
   11344:	add	ip, ip, #73728	; 0x12000
   11348:	ldr	pc, [ip, #3488]!	; 0xda0

0001134c <dup2@plt>:
   1134c:	add	ip, pc, #0, 12
   11350:	add	ip, ip, #73728	; 0x12000
   11354:	ldr	pc, [ip, #3480]!	; 0xd98

00011358 <rb_event_add@plt>:
   11358:	add	ip, pc, #0, 12
   1135c:	add	ip, ip, #73728	; 0x12000
   11360:	ldr	pc, [ip, #3472]!	; 0xd90

00011364 <snprintf@plt>:
   11364:	add	ip, pc, #0, 12
   11368:	add	ip, ip, #73728	; 0x12000
   1136c:	ldr	pc, [ip, #3464]!	; 0xd88

00011370 <strncmp@plt>:
   11370:	add	ip, pc, #0, 12
   11374:	add	ip, ip, #73728	; 0x12000
   11378:	ldr	pc, [ip, #3456]!	; 0xd80

0001137c <getrlimit@plt>:
   1137c:	add	ip, pc, #0, 12
   11380:	add	ip, ip, #73728	; 0x12000
   11384:	ldr	pc, [ip, #3448]!	; 0xd78

00011388 <rb_rawbuf_append@plt>:
   11388:	add	ip, pc, #0, 12
   1138c:	add	ip, ip, #73728	; 0x12000
   11390:	ldr	pc, [ip, #3440]!	; 0xd70

00011394 <rb_rawbuf_flush@plt>:
   11394:	add	ip, pc, #0, 12
   11398:	add	ip, ip, #73728	; 0x12000
   1139c:	ldr	pc, [ip, #3432]!	; 0xd68

000113a0 <rb_setup_ssl_server@plt>:
   113a0:	add	ip, pc, #0, 12
   113a4:	add	ip, ip, #73728	; 0x12000
   113a8:	ldr	pc, [ip, #3424]!	; 0xd60

000113ac <exit@plt>:
   113ac:	add	ip, pc, #0, 12
   113b0:	add	ip, ip, #73728	; 0x12000
   113b4:	ldr	pc, [ip, #3416]!	; 0xd58

000113b8 <__errno_location@plt>:
   113b8:	add	ip, pc, #0, 12
   113bc:	add	ip, ip, #73728	; 0x12000
   113c0:	ldr	pc, [ip, #3408]!	; 0xd50

Disassembly of section .text:

000113c4 <.text>:
   113c4:	mov	fp, #0
   113c8:	mov	lr, #0
   113cc:	pop	{r1}		; (ldr r1, [sp], #4)
   113d0:	mov	r2, sp
   113d4:	push	{r2}		; (str r2, [sp, #-4]!)
   113d8:	push	{r0}		; (str r0, [sp, #-4]!)
   113dc:	ldr	ip, [pc, #16]	; 113f4 <__errno_location@plt+0x3c>
   113e0:	push	{ip}		; (str ip, [sp, #-4]!)
   113e4:	ldr	r0, [pc, #12]	; 113f8 <__errno_location@plt+0x40>
   113e8:	ldr	r3, [pc, #12]	; 113fc <__errno_location@plt+0x44>
   113ec:	bl	11124 <__libc_start_main@plt>
   113f0:	bl	110e8 <abort@plt>
   113f4:	muleq	r1, ip, r7
   113f8:			; <UNDEFINED> instruction: 0x000114b4
   113fc:	andeq	r3, r1, ip, lsr r7
   11400:	ldr	r3, [pc, #20]	; 1141c <__errno_location@plt+0x64>
   11404:	ldr	r2, [pc, #20]	; 11420 <__errno_location@plt+0x68>
   11408:	add	r3, pc, r3
   1140c:	ldr	r2, [r3, r2]
   11410:	cmp	r2, #0
   11414:	bxeq	lr
   11418:	b	1113c <__gmon_start__@plt>
   1141c:	strdeq	r2, [r1], -r0
   11420:	andeq	r0, r0, r4, lsl r1
   11424:	ldr	r0, [pc, #24]	; 11444 <__errno_location@plt+0x8c>
   11428:	ldr	r3, [pc, #24]	; 11448 <__errno_location@plt+0x90>
   1142c:	cmp	r3, r0
   11430:	bxeq	lr
   11434:	ldr	r3, [pc, #16]	; 1144c <__errno_location@plt+0x94>
   11438:	cmp	r3, #0
   1143c:	bxeq	lr
   11440:	bx	r3
   11444:	andeq	r4, r2, r4, lsr #2
   11448:	andeq	r4, r2, r4, lsr #2
   1144c:	andeq	r0, r0, r0
   11450:	ldr	r0, [pc, #36]	; 1147c <__errno_location@plt+0xc4>
   11454:	ldr	r1, [pc, #36]	; 11480 <__errno_location@plt+0xc8>
   11458:	sub	r1, r1, r0
   1145c:	asr	r1, r1, #2
   11460:	add	r1, r1, r1, lsr #31
   11464:	asrs	r1, r1, #1
   11468:	bxeq	lr
   1146c:	ldr	r3, [pc, #16]	; 11484 <__errno_location@plt+0xcc>
   11470:	cmp	r3, #0
   11474:	bxeq	lr
   11478:	bx	r3
   1147c:	andeq	r4, r2, r4, lsr #2
   11480:	andeq	r4, r2, r4, lsr #2
   11484:	andeq	r0, r0, r0
   11488:	push	{r4, lr}
   1148c:	ldr	r4, [pc, #24]	; 114ac <__errno_location@plt+0xf4>
   11490:	ldrb	r3, [r4]
   11494:	cmp	r3, #0
   11498:	popne	{r4, pc}
   1149c:	bl	11424 <__errno_location@plt+0x6c>
   114a0:	mov	r3, #1
   114a4:	strb	r3, [r4]
   114a8:	pop	{r4, pc}
   114ac:	andeq	r4, r2, r4, lsr #2
   114b0:	b	11450 <__errno_location@plt+0x98>
   114b4:	push	{r4, r5, fp, lr}
   114b8:	add	fp, sp, #8
   114bc:	sub	sp, sp, #16
   114c0:	sub	sp, sp, #16384	; 0x4000
   114c4:	add	r8, sp, #12
   114c8:	mov	r0, #7
   114cc:	mov	r1, r8
   114d0:	bl	1137c <getrlimit@plt>
   114d4:	ldr	r6, [sp, #12]
   114d8:	cmp	r0, #0
   114dc:	ldr	r0, [pc, #1028]	; 118e8 <__errno_location@plt+0x530>
   114e0:	movwne	r6, #65535	; 0xffff
   114e4:	add	r0, pc, r0
   114e8:	bl	11178 <getenv@plt>
   114ec:	mov	r5, r0
   114f0:	ldr	r0, [pc, #1012]	; 118ec <__errno_location@plt+0x534>
   114f4:	add	r0, pc, r0
   114f8:	bl	11178 <getenv@plt>
   114fc:	mov	r4, r0
   11500:	ldr	r0, [pc, #1000]	; 118f0 <__errno_location@plt+0x538>
   11504:	add	r0, pc, r0
   11508:	bl	11178 <getenv@plt>
   1150c:	cmp	r5, #0
   11510:	beq	11524 <__errno_location@plt+0x16c>
   11514:	cmp	r4, #0
   11518:	movne	r7, r0
   1151c:	cmpne	r0, #0
   11520:	bne	11564 <__errno_location@plt+0x1ac>
   11524:	ldr	r4, [pc, #1048]	; 11944 <__errno_location@plt+0x58c>
   11528:	mov	r1, #50	; 0x32
   1152c:	mov	r2, #1
   11530:	ldr	r4, [pc, r4]
   11534:	ldr	r3, [r4]
   11538:	ldr	r0, [pc, #1032]	; 11948 <__errno_location@plt+0x590>
   1153c:	add	r0, pc, r0
   11540:	bl	112bc <fwrite@plt>
   11544:	ldr	r3, [r4]
   11548:	ldr	r0, [pc, #1020]	; 1194c <__errno_location@plt+0x594>
   1154c:	mov	r1, #49	; 0x31
   11550:	mov	r2, #1
   11554:	add	r0, pc, r0
   11558:	bl	112bc <fwrite@plt>
   1155c:	mov	r0, #1
   11560:	bl	113ac <exit@plt>
   11564:	mov	r0, r5
   11568:	mov	r1, #0
   1156c:	mov	r2, #10
   11570:	bl	1125c <strtol@plt>
   11574:	mov	r5, r0
   11578:	mov	r0, r4
   1157c:	mov	r1, #0
   11580:	mov	r2, #10
   11584:	bl	1125c <strtol@plt>
   11588:	mov	r4, r0
   1158c:	mov	r0, r7
   11590:	mov	r1, #0
   11594:	mov	r2, #10
   11598:	bl	1125c <strtol@plt>
   1159c:	ldr	r1, [pc, #848]	; 118f4 <__errno_location@plt+0x53c>
   115a0:	cmp	r6, #4
   115a4:	add	r1, pc, r1
   115a8:	str	r0, [r1]
   115ac:	blt	115dc <__errno_location@plt+0x224>
   115b0:	mov	r7, #3
   115b4:	b	115c4 <__errno_location@plt+0x20c>
   115b8:	add	r7, r7, #1
   115bc:	cmp	r6, r7
   115c0:	beq	115dc <__errno_location@plt+0x224>
   115c4:	cmp	r5, r7
   115c8:	cmpne	r4, r7
   115cc:	beq	115b8 <__errno_location@plt+0x200>
   115d0:	mov	r0, r7
   115d4:	bl	112b0 <close@plt>
   115d8:	b	115b8 <__errno_location@plt+0x200>
   115dc:	ldr	r0, [pc, #788]	; 118f8 <__errno_location@plt+0x540>
   115e0:	mov	r1, #2
   115e4:	add	r0, pc, r0
   115e8:	bl	110ac <open@plt>
   115ec:	cmp	r0, #0
   115f0:	bmi	11644 <__errno_location@plt+0x28c>
   115f4:	cmp	r5, #0
   115f8:	mov	r7, r0
   115fc:	cmpne	r4, #0
   11600:	beq	11610 <__errno_location@plt+0x258>
   11604:	mov	r0, r7
   11608:	mov	r1, #0
   1160c:	bl	1134c <dup2@plt>
   11610:	cmp	r5, #1
   11614:	cmpne	r4, #1
   11618:	beq	11628 <__errno_location@plt+0x270>
   1161c:	mov	r0, r7
   11620:	mov	r1, #1
   11624:	bl	1134c <dup2@plt>
   11628:	cmp	r5, #2
   1162c:	cmpne	r4, #2
   11630:	bne	118cc <__errno_location@plt+0x514>
   11634:	cmp	r7, #3
   11638:	blt	11644 <__errno_location@plt+0x28c>
   1163c:	mov	r0, r7
   11640:	bl	112b0 <close@plt>
   11644:	mov	r0, #1
   11648:	add	r7, r8, #4
   1164c:	str	r0, [sp, #12]
   11650:	mov	r0, #0
   11654:	str	r0, [sp, #144]	; 0x90
   11658:	mov	r0, r7
   1165c:	bl	110b8 <sigemptyset@plt>
   11660:	mov	r0, r7
   11664:	mov	r1, #13
   11668:	bl	11268 <sigaddset@plt>
   1166c:	mov	r0, r7
   11670:	mov	r1, #14
   11674:	bl	11268 <sigaddset@plt>
   11678:	mov	r0, r7
   1167c:	mov	r1, #5
   11680:	bl	11268 <sigaddset@plt>
   11684:	mov	r0, r7
   11688:	mov	r1, #28
   1168c:	bl	11268 <sigaddset@plt>
   11690:	mov	r0, #28
   11694:	mov	r1, r8
   11698:	mov	r2, #0
   1169c:	bl	112ec <sigaction@plt>
   116a0:	mov	r0, #13
   116a4:	mov	r1, r8
   116a8:	mov	r2, #0
   116ac:	bl	112ec <sigaction@plt>
   116b0:	mov	r0, #5
   116b4:	mov	r1, r8
   116b8:	mov	r2, #0
   116bc:	bl	112ec <sigaction@plt>
   116c0:	ldr	r0, [pc, #564]	; 118fc <__errno_location@plt+0x544>
   116c4:	mov	r1, r8
   116c8:	mov	r2, #0
   116cc:	add	r0, pc, r0
   116d0:	str	r0, [sp, #12]
   116d4:	mov	r0, #14
   116d8:	bl	112ec <sigaction@plt>
   116dc:	mov	r0, #4096	; 0x1000
   116e0:	mov	r1, #1024	; 0x400
   116e4:	mov	r2, #0
   116e8:	mov	r3, #0
   116ec:	str	r6, [sp]
   116f0:	str	r1, [sp, #4]
   116f4:	str	r0, [sp, #8]
   116f8:	mov	r0, #0
   116fc:	mov	r1, #0
   11700:	bl	11304 <rb_lib_init@plt>
   11704:	mov	r0, #1024	; 0x400
   11708:	bl	111e4 <rb_init_rawbuffers@plt>
   1170c:	mov	r0, #0
   11710:	mov	r1, #1
   11714:	bl	112c8 <rb_init_prng@plt>
   11718:	bl	112e0 <rb_supports_ssl@plt>
   1171c:	ldr	r7, [pc, #476]	; 11900 <__errno_location@plt+0x548>
   11720:	cmp	r0, #0
   11724:	mov	r1, #48	; 0x30
   11728:	movwne	r0, #1
   1172c:	add	r7, pc, r7
   11730:	strb	r0, [r7]
   11734:	mov	r0, #1
   11738:	bl	1119c <calloc@plt>
   1173c:	cmp	r0, #0
   11740:	beq	118e4 <__errno_location@plt+0x52c>
   11744:	ldr	r1, [pc, #440]	; 11904 <__errno_location@plt+0x54c>
   11748:	add	r1, pc, r1
   1174c:	str	r0, [r1]
   11750:	mov	r0, r5
   11754:	mov	r1, #4
   11758:	ldr	r2, [pc, #424]	; 11908 <__errno_location@plt+0x550>
   1175c:	add	r2, pc, r2
   11760:	bl	1131c <rb_open@plt>
   11764:	ldr	r1, [pc, #416]	; 1190c <__errno_location@plt+0x554>
   11768:	ldr	r1, [pc, r1]
   1176c:	str	r0, [r1, #16]
   11770:	mov	r0, r4
   11774:	mov	r1, #8
   11778:	ldr	r2, [pc, #400]	; 11910 <__errno_location@plt+0x558>
   1177c:	add	r2, pc, r2
   11780:	bl	1131c <rb_open@plt>
   11784:	ldr	r1, [pc, #392]	; 11914 <__errno_location@plt+0x55c>
   11788:	ldr	r1, [pc, r1]
   1178c:	str	r0, [r1, #20]
   11790:	ldr	r0, [r1, #16]
   11794:	bl	111a8 <rb_set_nb@plt>
   11798:	ldr	r0, [pc, #376]	; 11918 <__errno_location@plt+0x560>
   1179c:	ldr	r0, [pc, r0]
   117a0:	ldr	r0, [r0, #20]
   117a4:	bl	111a8 <rb_set_nb@plt>
   117a8:	ldr	r0, [pc, #364]	; 1191c <__errno_location@plt+0x564>
   117ac:	ldr	r1, [pc, #364]	; 11920 <__errno_location@plt+0x568>
   117b0:	mov	r2, #0
   117b4:	mov	r3, #10
   117b8:	add	r0, pc, r0
   117bc:	add	r1, pc, r1
   117c0:	bl	110f4 <rb_event_addish@plt>
   117c4:	ldr	r0, [pc, #344]	; 11924 <__errno_location@plt+0x56c>
   117c8:	ldr	r1, [pc, #344]	; 11928 <__errno_location@plt+0x570>
   117cc:	mov	r2, #0
   117d0:	mov	r3, #10
   117d4:	add	r0, pc, r0
   117d8:	add	r1, pc, r1
   117dc:	bl	11358 <rb_event_add@plt>
   117e0:	ldr	r0, [pc, #324]	; 1192c <__errno_location@plt+0x574>
   117e4:	add	r4, sp, #12
   117e8:	ldr	r0, [pc, r0]
   117ec:	ldr	r5, [r0, #20]
   117f0:	mov	r0, r5
   117f4:	mov	r1, r4
   117f8:	mov	r2, #16384	; 0x4000
   117fc:	bl	11214 <rb_read@plt>
   11800:	cmp	r0, #0
   11804:	bgt	117f0 <__errno_location@plt+0x438>
   11808:	beq	11820 <__errno_location@plt+0x468>
   1180c:	bl	113b8 <__errno_location@plt>
   11810:	ldr	r0, [r0]
   11814:	bl	11100 <rb_ignore_errno@plt>
   11818:	cmp	r0, #0
   1181c:	bne	11828 <__errno_location@plt+0x470>
   11820:	mov	r0, #0
   11824:	bl	113ac <exit@plt>
   11828:	ldr	r2, [pc, #256]	; 11930 <__errno_location@plt+0x578>
   1182c:	mov	r0, r5
   11830:	mov	r1, #1
   11834:	mov	r3, #0
   11838:	add	r2, pc, r2
   1183c:	bl	11130 <rb_setselect@plt>
   11840:	ldr	r1, [pc, #236]	; 11934 <__errno_location@plt+0x57c>
   11844:	ldr	r1, [pc, r1]
   11848:	ldr	r0, [r1, #16]
   1184c:	bl	11af4 <__errno_location@plt+0x73c>
   11850:	ldr	r5, [pc, #224]	; 11938 <__errno_location@plt+0x580>
   11854:	add	r6, r4, #1
   11858:	mov	r1, #0
   1185c:	mov	r2, #255	; 0xff
   11860:	mov	r0, r6
   11864:	ldr	r5, [pc, r5]
   11868:	bl	111b4 <memset@plt>
   1186c:	mov	r0, #86	; 0x56
   11870:	strb	r0, [sp, #12]
   11874:	bl	1110c <rb_lib_version@plt>
   11878:	mov	r1, r0
   1187c:	mov	r0, r6
   11880:	mov	r2, #254	; 0xfe
   11884:	bl	1116c <strncpy@plt>
   11888:	mov	r0, r4
   1188c:	bl	1122c <strlen@plt>
   11890:	mov	r2, r0
   11894:	mov	r0, r5
   11898:	mov	r1, r4
   1189c:	bl	12ac8 <__errno_location@plt+0x1710>
   118a0:	ldrb	r0, [r7]
   118a4:	cmp	r0, #0
   118a8:	bne	118c4 <__errno_location@plt+0x50c>
   118ac:	ldr	r0, [pc, #136]	; 1193c <__errno_location@plt+0x584>
   118b0:	mov	r2, #1
   118b4:	ldr	r0, [pc, r0]
   118b8:	ldr	r1, [pc, #128]	; 11940 <__errno_location@plt+0x588>
   118bc:	add	r1, pc, r1
   118c0:	bl	12ac8 <__errno_location@plt+0x1710>
   118c4:	mov	r0, #0
   118c8:	bl	111fc <rb_lib_loop@plt>
   118cc:	mov	r0, r7
   118d0:	mov	r1, #2
   118d4:	bl	1134c <dup2@plt>
   118d8:	cmp	r7, #3
   118dc:	bge	1163c <__errno_location@plt+0x284>
   118e0:	b	11644 <__errno_location@plt+0x28c>
   118e4:	bl	112d4 <rb_outofmemory@plt>
   118e8:	andeq	r2, r0, r0, asr #5
   118ec:			; <UNDEFINED> instruction: 0x000022b7
   118f0:			; <UNDEFINED> instruction: 0x000022b0
   118f4:	andeq	r2, r1, ip, ror fp
   118f8:	andeq	r2, r0, lr, lsr r2
   118fc:	andeq	r2, r0, r4, rrx
   11900:	strdeq	r2, [r1], -r8
   11904:	andeq	r2, r1, r0, ror #19
   11908:	ldrdeq	r2, [r0], -r0
   1190c:	andeq	r2, r1, r0, asr #19
   11910:	andeq	r2, r0, r4, asr #1
   11914:	andeq	r2, r1, r0, lsr #19
   11918:	andeq	r2, r1, ip, lsl #19
   1191c:	muleq	r0, r2, r0
   11920:	andeq	r0, r0, ip, lsl #3
   11924:	andeq	r2, r0, r7, lsl #1
   11928:	andeq	r0, r0, r8, lsl #4
   1192c:	andeq	r2, r1, r0, asr #18
   11930:	andeq	r0, r0, r4, asr #4
   11934:	andeq	r2, r1, r4, ror #17
   11938:	andeq	r2, r1, r4, asr #17
   1193c:	andeq	r2, r1, r4, ror r8
   11940:	andeq	r2, r0, lr, ror #1
   11944:	andeq	r2, r1, r0, ror #23
   11948:	andeq	r2, r0, r1, lsl #5
   1194c:	muleq	r0, ip, r2
   11950:	push	{r4, r5, r6, sl, fp, lr}
   11954:	add	fp, sp, #16
   11958:	ldr	r6, [pc, #128]	; 119e0 <__errno_location@plt+0x628>
   1195c:	ldr	r6, [pc, r6]
   11960:	cmp	r6, #0
   11964:	bne	1197c <__errno_location@plt+0x5c4>
   11968:	b	119c8 <__errno_location@plt+0x610>
   1196c:	mov	r0, r4
   11970:	bl	111f0 <free@plt>
   11974:	cmp	r6, #0
   11978:	beq	119c8 <__errno_location@plt+0x610>
   1197c:	ldr	r4, [r6]
   11980:	ldr	r6, [r6, #8]
   11984:	ldr	r0, [r4, #16]
   11988:	bl	11298 <rb_free_rawbuffer@plt>
   1198c:	ldr	r0, [r4, #20]
   11990:	bl	11298 <rb_free_rawbuffer@plt>
   11994:	ldrb	r0, [r4, #72]	; 0x48
   11998:	tst	r0, #2
   1199c:	beq	1196c <__errno_location@plt+0x5b4>
   119a0:	ldr	r5, [r4, #76]	; 0x4c
   119a4:	mov	r0, r5
   119a8:	bl	11118 <inflateEnd@plt>
   119ac:	add	r0, r5, #56	; 0x38
   119b0:	bl	11208 <deflateEnd@plt>
   119b4:	cmp	r5, #0
   119b8:	beq	1196c <__errno_location@plt+0x5b4>
   119bc:	mov	r0, r5
   119c0:	bl	111f0 <free@plt>
   119c4:	b	1196c <__errno_location@plt+0x5b4>
   119c8:	ldr	r0, [pc, #20]	; 119e4 <__errno_location@plt+0x62c>
   119cc:	mov	r1, #0
   119d0:	add	r0, pc, r0
   119d4:	str	r1, [r0]
   119d8:	str	r1, [r0, #4]
   119dc:	pop	{r4, r5, r6, sl, fp, pc}
   119e0:	ldrdeq	r2, [r1], -r0
   119e4:	andeq	r2, r1, ip, asr r7
   119e8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   119ec:	add	fp, sp, #24
   119f0:	ldr	r8, [pc, #132]	; 11a7c <__errno_location@plt+0x6c4>
   119f4:	ldr	r4, [pc, #132]	; 11a80 <__errno_location@plt+0x6c8>
   119f8:	mov	r6, #0
   119fc:	add	r8, pc, r8
   11a00:	add	r4, pc, r4
   11a04:	b	11a14 <__errno_location@plt+0x65c>
   11a08:	add	r6, r6, #1
   11a0c:	cmp	r6, #2000	; 0x7d0
   11a10:	beq	11a78 <__errno_location@plt+0x6c0>
   11a14:	add	r0, r6, r6, lsl #1
   11a18:	ldr	r7, [r8, r0, lsl #2]
   11a1c:	cmp	r7, #0
   11a20:	bne	11a38 <__errno_location@plt+0x680>
   11a24:	b	11a08 <__errno_location@plt+0x650>
   11a28:	ldr	r0, [r5, #28]
   11a2c:	bl	11280 <rb_ssl_clear_handshake_count@plt>
   11a30:	cmp	r7, #0
   11a34:	beq	11a08 <__errno_location@plt+0x650>
   11a38:	ldr	r5, [r7]
   11a3c:	ldr	r7, [r7, #8]
   11a40:	ldrb	r0, [r5, #72]	; 0x48
   11a44:	tst	r0, #1
   11a48:	beq	11a30 <__errno_location@plt+0x678>
   11a4c:	ldr	r0, [r5, #28]
   11a50:	bl	11148 <rb_ssl_handshake_count@plt>
   11a54:	cmp	r0, #3
   11a58:	bcc	11a28 <__errno_location@plt+0x670>
   11a5c:	mov	r0, r5
   11a60:	mov	r1, #1
   11a64:	mov	r2, r4
   11a68:	bl	12804 <__errno_location@plt+0x144c>
   11a6c:	cmp	r7, #0
   11a70:	bne	11a38 <__errno_location@plt+0x680>
   11a74:	b	11a08 <__errno_location@plt+0x650>
   11a78:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   11a7c:	andeq	r2, r1, ip, lsr r7
   11a80:	andeq	r1, r0, r1, ror lr
   11a84:	push	{r4, r5, r6, r7, fp, lr}
   11a88:	add	fp, sp, #16
   11a8c:	sub	sp, sp, #16384	; 0x4000
   11a90:	mov	r4, r0
   11a94:	mov	r5, sp
   11a98:	mov	r0, r4
   11a9c:	mov	r1, r5
   11aa0:	mov	r2, #16384	; 0x4000
   11aa4:	bl	11214 <rb_read@plt>
   11aa8:	cmp	r0, #0
   11aac:	bgt	11a98 <__errno_location@plt+0x6e0>
   11ab0:	beq	11ae8 <__errno_location@plt+0x730>
   11ab4:	bl	113b8 <__errno_location@plt>
   11ab8:	ldr	r0, [r0]
   11abc:	bl	11100 <rb_ignore_errno@plt>
   11ac0:	cmp	r0, #0
   11ac4:	beq	11ae8 <__errno_location@plt+0x730>
   11ac8:	ldr	r2, [pc, #32]	; 11af0 <__errno_location@plt+0x738>
   11acc:	mov	r0, r4
   11ad0:	mov	r1, #1
   11ad4:	mov	r3, #0
   11ad8:	add	r2, pc, r2
   11adc:	bl	11130 <rb_setselect@plt>
   11ae0:	sub	sp, fp, #16
   11ae4:	pop	{r4, r5, r6, r7, fp, pc}
   11ae8:	mov	r0, #0
   11aec:	bl	113ac <exit@plt>
   11af0:			; <UNDEFINED> instruction: 0xffffffa4
   11af4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11af8:	add	fp, sp, #28
   11afc:	sub	sp, sp, #4
   11b00:	vpush	{d8-d9}
   11b04:	sub	sp, sp, #568	; 0x238
   11b08:	mov	r4, r1
   11b0c:	mov	r0, #1
   11b10:	mov	r1, #40	; 0x28
   11b14:	bl	1119c <calloc@plt>
   11b18:	cmp	r0, #0
   11b1c:	beq	12794 <__errno_location@plt+0x13dc>
   11b20:	mov	r5, r0
   11b24:	add	sl, r4, #24
   11b28:	mov	r8, #16384	; 0x4000
   11b2c:	mov	r7, #4
   11b30:	mov	r9, #0
   11b34:	b	11b58 <__errno_location@plt+0x7a0>
   11b38:	mov	r0, #0
   11b3c:	str	r0, [r5, #36]	; 0x24
   11b40:	mov	r0, #1
   11b44:	mov	r1, #40	; 0x28
   11b48:	bl	1119c <calloc@plt>
   11b4c:	mov	r5, r0
   11b50:	cmp	r0, #0
   11b54:	beq	12794 <__errno_location@plt+0x13dc>
   11b58:	mov	r0, #1
   11b5c:	mov	r1, #16384	; 0x4000
   11b60:	bl	1119c <calloc@plt>
   11b64:	cmp	r0, #0
   11b68:	beq	12794 <__errno_location@plt+0x13dc>
   11b6c:	str	r0, [r5, #12]
   11b70:	str	r8, [r5, #16]
   11b74:	mov	r1, r0
   11b78:	add	r3, r5, #20
   11b7c:	mov	r2, #16384	; 0x4000
   11b80:	ldr	r0, [r4, #16]
   11b84:	str	r7, [sp]
   11b88:	bl	11334 <rb_recv_fd_buf@plt>
   11b8c:	mov	r6, r0
   11b90:	cmp	r0, #0
   11b94:	ble	11c28 <__errno_location@plt+0x870>
   11b98:	str	r6, [r5, #16]
   11b9c:	ldr	r0, [r4, #28]
   11ba0:	str	r5, [r5]
   11ba4:	cmp	r0, #0
   11ba8:	stmib	r5, {r0, r9}
   11bac:	beq	11bbc <__errno_location@plt+0x804>
   11bb0:	add	r0, r0, #8
   11bb4:	str	r5, [r0]
   11bb8:	b	11bc8 <__errno_location@plt+0x810>
   11bbc:	ldr	r0, [sl]
   11bc0:	cmp	r0, #0
   11bc4:	beq	11c20 <__errno_location@plt+0x868>
   11bc8:	str	r5, [r4, #28]
   11bcc:	ldr	r0, [r4, #32]
   11bd0:	add	r0, r0, #1
   11bd4:	str	r0, [r4, #32]
   11bd8:	ldr	r0, [r5, #20]
   11bdc:	cmp	r0, #0
   11be0:	beq	11b38 <__errno_location@plt+0x780>
   11be4:	ldr	r0, [r5, #24]
   11be8:	cmp	r0, #0
   11bec:	beq	11c10 <__errno_location@plt+0x858>
   11bf0:	ldr	r0, [r5, #28]
   11bf4:	cmp	r0, #0
   11bf8:	beq	11c18 <__errno_location@plt+0x860>
   11bfc:	ldr	r0, [r5, #32]
   11c00:	cmp	r0, #0
   11c04:	mov	r0, #4
   11c08:	movweq	r0, #3
   11c0c:	b	11b3c <__errno_location@plt+0x784>
   11c10:	mov	r0, #1
   11c14:	b	11b3c <__errno_location@plt+0x784>
   11c18:	mov	r0, #2
   11c1c:	b	11b3c <__errno_location@plt+0x784>
   11c20:	mov	r0, sl
   11c24:	b	11bb4 <__errno_location@plt+0x7fc>
   11c28:	ldr	r0, [r5, #12]
   11c2c:	cmp	r0, #0
   11c30:	beq	11c38 <__errno_location@plt+0x880>
   11c34:	bl	111f0 <free@plt>
   11c38:	mov	r0, r5
   11c3c:	bl	111f0 <free@plt>
   11c40:	cmp	r6, #0
   11c44:	beq	12798 <__errno_location@plt+0x13e0>
   11c48:	bl	113b8 <__errno_location@plt>
   11c4c:	ldr	r0, [r0]
   11c50:	bl	11100 <rb_ignore_errno@plt>
   11c54:	cmp	r0, #0
   11c58:	beq	12798 <__errno_location@plt+0x13e0>
   11c5c:	ldr	r5, [sl]
   11c60:	cmp	r5, #0
   11c64:	beq	1276c <__errno_location@plt+0x13b4>
   11c68:	vmov.i32	q4, #0	; 0x00000000
   11c6c:	mov	r8, #0
   11c70:	str	sl, [sp, #44]	; 0x2c
   11c74:	ldr	r0, [r5, #8]
   11c78:	ldr	r9, [r5]
   11c7c:	str	r0, [sp, #48]	; 0x30
   11c80:	ldr	r0, [r9, #12]
   11c84:	ldrb	r1, [r0]
   11c88:	sub	r1, r1, #65	; 0x41
   11c8c:	cmp	r1, #25
   11c90:	bhi	12624 <__errno_location@plt+0x126c>
   11c94:	add	r2, pc, #4
   11c98:	ldr	r1, [r2, r1, lsl #2]
   11c9c:	add	pc, r2, r1
   11ca0:	andeq	r0, r0, r8, rrx
   11ca4:	andeq	r0, r0, r4, lsl #19
   11ca8:	andeq	r0, r0, r4, ror #4
   11cac:	andeq	r0, r0, r4, lsl #19
   11cb0:	andeq	r0, r0, r4, lsl #19
   11cb4:	andeq	r0, r0, r4, asr #2
   11cb8:	andeq	r0, r0, r4, lsl #19
   11cbc:	andeq	r0, r0, r4, lsl #19
   11cc0:	andeq	r0, r0, r4, lsl #19
   11cc4:	andeq	r0, r0, r4, lsl #19
   11cc8:	andeq	r0, r0, r4, lsr r3
   11ccc:	andeq	r0, r0, r4, lsl #19
   11cd0:	andeq	r0, r0, r4, lsl #19
   11cd4:	andeq	r0, r0, r4, lsl #19
   11cd8:	andeq	r0, r0, r4, lsl #19
   11cdc:	andeq	r0, r0, r4, lsl #19
   11ce0:	andeq	r0, r0, r4, lsl #19
   11ce4:	andeq	r0, r0, r4, lsl #19
   11ce8:	andeq	r0, r0, r0, ror #7
   11cec:	andeq	r0, r0, r4, lsl #19
   11cf0:	andeq	r0, r0, r4, lsl #19
   11cf4:	andeq	r0, r0, r4, lsl #19
   11cf8:	andeq	r0, r0, r4, lsl #19
   11cfc:	andeq	r0, r0, r4, lsl #19
   11d00:	andeq	r0, r0, r4, lsl #19
   11d04:	andeq	r0, r0, r4, ror #2
   11d08:	ldr	r0, [r9, #36]	; 0x24
   11d0c:	cmp	r0, #2
   11d10:	bne	121c4 <__errno_location@plt+0xe0c>
   11d14:	ldr	r0, [r9, #16]
   11d18:	cmp	r0, #5
   11d1c:	bne	121cc <__errno_location@plt+0xe14>
   11d20:	ldr	r8, [r9, #20]
   11d24:	ldr	r7, [r9, #24]
   11d28:	ldr	r0, [pc, #2672]	; 127a0 <__errno_location@plt+0x13e8>
   11d2c:	mov	r1, #80	; 0x50
   11d30:	add	r0, pc, r0
   11d34:	ldrb	r6, [r0]
   11d38:	mov	r0, #1
   11d3c:	bl	1119c <calloc@plt>
   11d40:	mov	sl, r0
   11d44:	cmp	r6, #0
   11d48:	beq	12510 <__errno_location@plt+0x1158>
   11d4c:	cmp	sl, #0
   11d50:	beq	12794 <__errno_location@plt+0x13dc>
   11d54:	str	r4, [sl, #12]
   11d58:	bl	11310 <rb_new_rawbuffer@plt>
   11d5c:	str	r0, [sl, #16]
   11d60:	bl	11310 <rb_new_rawbuffer@plt>
   11d64:	str	r0, [sl, #20]
   11d68:	mvn	r0, #0
   11d6c:	str	r0, [sl, #24]
   11d70:	mov	r0, r8
   11d74:	str	r8, [sl, #28]
   11d78:	str	r7, [sl, #32]
   11d7c:	bl	111a8 <rb_set_nb@plt>
   11d80:	mov	r0, r7
   11d84:	bl	111a8 <rb_set_nb@plt>
   11d88:	ldr	r0, [r9, #12]
   11d8c:	movw	r1, #19923	; 0x4dd3
   11d90:	mov	r3, #0
   11d94:	movt	r1, #4194	; 0x1062
   11d98:	ldr	r0, [r0, #1]
   11d9c:	umull	r1, r2, r0, r1
   11da0:	str	r0, [sl, #24]
   11da4:	ldr	r7, [pc, #2564]	; 127b0 <__errno_location@plt+0x13f8>
   11da8:	str	sl, [sl]
   11dac:	str	r3, [sl, #4]
   11db0:	lsr	r1, r2, #7
   11db4:	mov	r2, #2000	; 0x7d0
   11db8:	mls	r0, r1, r2, r0
   11dbc:	add	r7, pc, r7
   11dc0:	mov	r1, r7
   11dc4:	add	r0, r0, r0, lsl #1
   11dc8:	ldr	r2, [r1, r0, lsl #2]!
   11dcc:	cmp	r2, #0
   11dd0:	str	r2, [sl, #8]
   11dd4:	beq	12690 <__errno_location@plt+0x12d8>
   11dd8:	add	r2, r2, #4
   11ddc:	str	sl, [r2]
   11de0:	b	126a0 <__errno_location@plt+0x12e8>
   11de4:	ldr	r1, [r9, #16]
   11de8:	cmp	r1, #5
   11dec:	bne	12168 <__errno_location@plt+0xdb0>
   11df0:	ldr	r0, [r0, #1]
   11df4:	ldr	r1, [pc, #2508]	; 127c8 <__errno_location@plt+0x1410>
   11df8:	add	r1, pc, r1
   11dfc:	str	r0, [r1]
   11e00:	b	12624 <__errno_location@plt+0x126c>
   11e04:	ldr	r0, [r9, #36]	; 0x24
   11e08:	cmp	r0, #2
   11e0c:	bne	12198 <__errno_location@plt+0xde0>
   11e10:	ldr	r0, [r9, #16]
   11e14:	cmp	r0, #6
   11e18:	bcc	121a0 <__errno_location@plt+0xde8>
   11e1c:	ldr	r7, [r9, #20]
   11e20:	ldr	r8, [r9, #24]
   11e24:	mov	r0, #1
   11e28:	mov	r1, #80	; 0x50
   11e2c:	bl	1119c <calloc@plt>
   11e30:	cmp	r0, #0
   11e34:	beq	12794 <__errno_location@plt+0x13dc>
   11e38:	mov	r6, r0
   11e3c:	str	r4, [r0, #12]
   11e40:	bl	11310 <rb_new_rawbuffer@plt>
   11e44:	str	r0, [r6, #16]
   11e48:	bl	11310 <rb_new_rawbuffer@plt>
   11e4c:	str	r0, [r6, #20]
   11e50:	mvn	r0, #0
   11e54:	add	r1, r6, #24
   11e58:	stm	r1, {r0, r7, r8}
   11e5c:	mov	r0, r7
   11e60:	bl	111a8 <rb_set_nb@plt>
   11e64:	mov	r0, r8
   11e68:	bl	111a8 <rb_set_nb@plt>
   11e6c:	ldr	r0, [r6, #28]
   11e70:	bl	110d0 <rb_get_type@plt>
   11e74:	cmp	r0, #64	; 0x40
   11e78:	bne	11e8c <__errno_location@plt+0xad4>
   11e7c:	ldr	r0, [r6, #28]
   11e80:	mov	r1, #4
   11e84:	bl	11220 <rb_set_type@plt>
   11e88:	ldr	r8, [r6, #32]
   11e8c:	mov	r0, r8
   11e90:	bl	110d0 <rb_get_type@plt>
   11e94:	cmp	r0, #64	; 0x40
   11e98:	bne	11ea8 <__errno_location@plt+0xaf0>
   11e9c:	mov	r0, r8
   11ea0:	mov	r1, #4
   11ea4:	bl	11220 <rb_set_type@plt>
   11ea8:	ldr	ip, [r9, #12]
   11eac:	movw	r1, #19923	; 0x4dd3
   11eb0:	mov	r3, #0
   11eb4:	movt	r1, #4194	; 0x1062
   11eb8:	ldr	r0, [ip, #1]
   11ebc:	umull	r1, r2, r0, r1
   11ec0:	str	r0, [r6, #24]
   11ec4:	ldr	r7, [pc, #2332]	; 127e8 <__errno_location@plt+0x1430>
   11ec8:	str	r6, [r6]
   11ecc:	str	r3, [r6, #4]
   11ed0:	lsr	r1, r2, #7
   11ed4:	mov	r2, #2000	; 0x7d0
   11ed8:	mls	r0, r1, r2, r0
   11edc:	add	r7, pc, r7
   11ee0:	mov	r1, r7
   11ee4:	add	r0, r0, r0, lsl #1
   11ee8:	ldr	r2, [r1, r0, lsl #2]!
   11eec:	cmp	r2, #0
   11ef0:	str	r2, [r6, #8]
   11ef4:	beq	123f4 <__errno_location@plt+0x103c>
   11ef8:	add	r2, r2, #4
   11efc:	str	r6, [r2]
   11f00:	b	12404 <__errno_location@plt+0x104c>
   11f04:	ldr	r0, [r9, #16]
   11f08:	cmp	r0, #5
   11f0c:	bne	121f0 <__errno_location@plt+0xe38>
   11f10:	ldr	r8, [r9, #20]
   11f14:	ldr	sl, [r9, #24]
   11f18:	ldr	r0, [pc, #2200]	; 127b8 <__errno_location@plt+0x1400>
   11f1c:	mov	r1, #80	; 0x50
   11f20:	add	r0, pc, r0
   11f24:	ldrb	r6, [r0]
   11f28:	mov	r0, #1
   11f2c:	bl	1119c <calloc@plt>
   11f30:	mov	r7, r0
   11f34:	cmp	r6, #0
   11f38:	beq	122d4 <__errno_location@plt+0xf1c>
   11f3c:	cmp	r7, #0
   11f40:	beq	12794 <__errno_location@plt+0x13dc>
   11f44:	str	r4, [r7, #12]
   11f48:	bl	11310 <rb_new_rawbuffer@plt>
   11f4c:	str	r0, [r7, #16]
   11f50:	bl	11310 <rb_new_rawbuffer@plt>
   11f54:	str	r0, [r7, #20]
   11f58:	mvn	r0, #0
   11f5c:	add	r1, r7, #24
   11f60:	stm	r1, {r0, r8, sl}
   11f64:	mov	r0, r8
   11f68:	bl	111a8 <rb_set_nb@plt>
   11f6c:	mov	r0, sl
   11f70:	bl	111a8 <rb_set_nb@plt>
   11f74:	ldr	r0, [r9, #12]
   11f78:	movw	r1, #19923	; 0x4dd3
   11f7c:	mov	r3, #0
   11f80:	movt	r1, #4194	; 0x1062
   11f84:	ldr	r0, [r0, #1]
   11f88:	umull	r1, r2, r0, r1
   11f8c:	str	r0, [r7, #24]
   11f90:	ldr	r6, [pc, #2088]	; 127c0 <__errno_location@plt+0x1408>
   11f94:	str	r7, [r7]
   11f98:	str	r3, [r7, #4]
   11f9c:	lsr	r1, r2, #7
   11fa0:	mov	r2, #2000	; 0x7d0
   11fa4:	mls	r0, r1, r2, r0
   11fa8:	add	r6, pc, r6
   11fac:	mov	r1, r6
   11fb0:	add	r0, r0, r0, lsl #1
   11fb4:	ldr	r2, [r1, r0, lsl #2]!
   11fb8:	cmp	r2, #0
   11fbc:	str	r2, [r7, #8]
   11fc0:	beq	1236c <__errno_location@plt+0xfb4>
   11fc4:	ldr	sl, [sp, #44]	; 0x2c
   11fc8:	add	r2, r2, #4
   11fcc:	str	r7, [r2]
   11fd0:	b	12380 <__errno_location@plt+0xfc8>
   11fd4:	ldr	r1, [pc, #2032]	; 127cc <__errno_location@plt+0x1414>
   11fd8:	add	r1, pc, r1
   11fdc:	ldrb	r1, [r1]
   11fe0:	cmp	r1, #0
   11fe4:	beq	12220 <__errno_location@plt+0xe68>
   11fe8:	add	r6, r0, #2
   11fec:	mov	r0, r6
   11ff0:	str	r6, [sp, #40]	; 0x28
   11ff4:	bl	1122c <strlen@plt>
   11ff8:	add	r0, r0, r6
   11ffc:	add	r6, r0, #1
   12000:	mov	r0, r6
   12004:	bl	1122c <strlen@plt>
   12008:	add	r1, r0, r6
   1200c:	str	r0, [sp, #36]	; 0x24
   12010:	add	r7, r1, #1
   12014:	mov	r0, r7
   12018:	bl	1122c <strlen@plt>
   1201c:	mov	r8, r0
   12020:	add	r0, r0, r7
   12024:	add	sl, r0, #1
   12028:	mov	r0, sl
   1202c:	bl	1122c <strlen@plt>
   12030:	cmp	r0, #0
   12034:	moveq	sl, r0
   12038:	ldr	r0, [sp, #36]	; 0x24
   1203c:	cmp	r8, #0
   12040:	moveq	r7, r8
   12044:	mov	r3, sl
   12048:	ldr	sl, [sp, #44]	; 0x2c
   1204c:	mov	r8, #0
   12050:	mov	r2, r7
   12054:	cmp	r0, #0
   12058:	ldr	r0, [sp, #40]	; 0x28
   1205c:	moveq	r6, r0
   12060:	mov	r1, r6
   12064:	bl	113a0 <rb_setup_ssl_server@plt>
   12068:	cmp	r0, #0
   1206c:	bne	12624 <__errno_location@plt+0x126c>
   12070:	ldr	r1, [pc, #1892]	; 127dc <__errno_location@plt+0x1424>
   12074:	mov	r0, r4
   12078:	add	r1, pc, r1
   1207c:	b	1261c <__errno_location@plt+0x1264>
   12080:	ldr	r1, [r0, #1]
   12084:	movw	r2, #19923	; 0x4dd3
   12088:	movt	r2, #4194	; 0x1062
   1208c:	umull	r2, r3, r1, r2
   12090:	lsr	r2, r3, #7
   12094:	mov	r3, #2000	; 0x7d0
   12098:	mls	r2, r2, r3, r1
   1209c:	ldr	r3, [pc, #1852]	; 127e0 <__errno_location@plt+0x1428>
   120a0:	add	r2, r2, r2, lsl #1
   120a4:	add	r3, pc, r3
   120a8:	ldr	r2, [r3, r2, lsl #2]
   120ac:	cmp	r2, #0
   120b0:	bne	120c4 <__errno_location@plt+0xd0c>
   120b4:	b	12624 <__errno_location@plt+0x126c>
   120b8:	ldr	r2, [r2, #8]
   120bc:	cmp	r2, #0
   120c0:	beq	12624 <__errno_location@plt+0x126c>
   120c4:	ldr	r3, [r2]
   120c8:	ldr	r7, [r3, #24]
   120cc:	cmp	r7, r1
   120d0:	bne	120b8 <__errno_location@plt+0xd00>
   120d4:	ldrb	r7, [r3, #72]	; 0x48
   120d8:	tst	r7, #8
   120dc:	bne	120b8 <__errno_location@plt+0xd00>
   120e0:	add	r1, r3, #48	; 0x30
   120e4:	add	r6, r3, #40	; 0x28
   120e8:	add	r2, r3, #56	; 0x38
   120ec:	add	r3, r3, #64	; 0x40
   120f0:	ldm	r1, {r1, r7}
   120f4:	ldr	r8, [r3]
   120f8:	ldr	r3, [r3, #4]
   120fc:	ldm	r2, {r2, ip}
   12100:	ldr	sl, [r6, #4]
   12104:	ldr	lr, [r6]
   12108:	str	r7, [sp, #12]
   1210c:	add	r7, sp, #52	; 0x34
   12110:	str	r1, [sp, #8]
   12114:	add	r1, sp, #16
   12118:	str	r8, [sp]
   1211c:	str	r3, [sp, #4]
   12120:	add	r3, r0, #5
   12124:	mov	r0, r7
   12128:	mov	r8, #0
   1212c:	stm	r1, {r2, ip, lr}
   12130:	str	sl, [sp, #28]
   12134:	mov	r1, #512	; 0x200
   12138:	ldr	sl, [sp, #44]	; 0x2c
   1213c:	ldr	r2, [pc, #1696]	; 127e4 <__errno_location@plt+0x142c>
   12140:	add	r2, pc, r2
   12144:	bl	11364 <snprintf@plt>
   12148:	vst1.64	{d8-d9}, [r6]!
   1214c:	mov	r0, r7
   12150:	vst1.64	{d8-d9}, [r6]
   12154:	bl	1122c <strlen@plt>
   12158:	add	r2, r0, #1
   1215c:	mov	r0, r4
   12160:	mov	r1, r7
   12164:	b	12620 <__errno_location@plt+0x1268>
   12168:	ldr	r0, [r9, #36]	; 0x24
   1216c:	cmp	r0, #1
   12170:	blt	12624 <__errno_location@plt+0x126c>
   12174:	add	r6, r9, #20
   12178:	mov	r7, #0
   1217c:	ldr	r0, [r6, r7, lsl #2]
   12180:	bl	11250 <rb_close@plt>
   12184:	ldr	r0, [r9, #36]	; 0x24
   12188:	add	r7, r7, #1
   1218c:	cmp	r7, r0
   12190:	blt	1217c <__errno_location@plt+0xdc4>
   12194:	b	12624 <__errno_location@plt+0x126c>
   12198:	cmp	r0, #1
   1219c:	blt	12624 <__errno_location@plt+0x126c>
   121a0:	add	r6, r9, #20
   121a4:	mov	r7, #0
   121a8:	ldr	r0, [r6, r7, lsl #2]
   121ac:	bl	11250 <rb_close@plt>
   121b0:	ldr	r0, [r9, #36]	; 0x24
   121b4:	add	r7, r7, #1
   121b8:	cmp	r7, r0
   121bc:	blt	121a8 <__errno_location@plt+0xdf0>
   121c0:	b	12624 <__errno_location@plt+0x126c>
   121c4:	cmp	r0, #1
   121c8:	blt	12624 <__errno_location@plt+0x126c>
   121cc:	add	r6, r9, #20
   121d0:	mov	r7, #0
   121d4:	ldr	r0, [r6, r7, lsl #2]
   121d8:	bl	11250 <rb_close@plt>
   121dc:	ldr	r0, [r9, #36]	; 0x24
   121e0:	add	r7, r7, #1
   121e4:	cmp	r7, r0
   121e8:	blt	121d4 <__errno_location@plt+0xe1c>
   121ec:	b	12624 <__errno_location@plt+0x126c>
   121f0:	ldr	r0, [r9, #36]	; 0x24
   121f4:	cmp	r0, #1
   121f8:	blt	12624 <__errno_location@plt+0x126c>
   121fc:	add	r6, r9, #20
   12200:	mov	r7, #0
   12204:	ldr	r0, [r6, r7, lsl #2]
   12208:	bl	11250 <rb_close@plt>
   1220c:	ldr	r0, [r9, #36]	; 0x24
   12210:	add	r7, r7, #1
   12214:	cmp	r7, r0
   12218:	blt	12204 <__errno_location@plt+0xe4c>
   1221c:	b	12624 <__errno_location@plt+0x126c>
   12220:	cmp	r9, #0
   12224:	beq	12610 <__errno_location@plt+0x1258>
   12228:	ldr	r7, [r9, #20]
   1222c:	ldr	r8, [r9, #24]
   12230:	mov	r0, #1
   12234:	mov	r1, #80	; 0x50
   12238:	bl	1119c <calloc@plt>
   1223c:	cmp	r0, #0
   12240:	beq	12794 <__errno_location@plt+0x13dc>
   12244:	mov	r6, r0
   12248:	str	r4, [r0, #12]
   1224c:	bl	11310 <rb_new_rawbuffer@plt>
   12250:	str	r0, [r6, #16]
   12254:	bl	11310 <rb_new_rawbuffer@plt>
   12258:	str	r0, [r6, #20]
   1225c:	mvn	r0, #0
   12260:	add	r1, r6, #24
   12264:	stm	r1, {r0, r7, r8}
   12268:	mov	r0, r7
   1226c:	bl	111a8 <rb_set_nb@plt>
   12270:	mov	r0, r8
   12274:	bl	111a8 <rb_set_nb@plt>
   12278:	ldr	r0, [r9, #12]
   1227c:	movw	r1, #19923	; 0x4dd3
   12280:	mov	r8, #0
   12284:	movt	r1, #4194	; 0x1062
   12288:	ldr	r0, [r0, #1]
   1228c:	umull	r1, r2, r0, r1
   12290:	str	r0, [r6, #24]
   12294:	ldr	r7, [pc, #1332]	; 127d0 <__errno_location@plt+0x1418>
   12298:	str	r6, [r6]
   1229c:	str	r8, [r6, #4]
   122a0:	lsr	r1, r2, #7
   122a4:	mov	r2, #2000	; 0x7d0
   122a8:	mls	r0, r1, r2, r0
   122ac:	add	r7, pc, r7
   122b0:	mov	r1, r7
   122b4:	add	r0, r0, r0, lsl #1
   122b8:	ldr	r2, [r1, r0, lsl #2]!
   122bc:	cmp	r2, #0
   122c0:	str	r2, [r6, #8]
   122c4:	beq	125a8 <__errno_location@plt+0x11f0>
   122c8:	add	r2, r2, #4
   122cc:	str	r6, [r2]
   122d0:	b	125b8 <__errno_location@plt+0x1200>
   122d4:	cmp	r7, #0
   122d8:	beq	12794 <__errno_location@plt+0x13dc>
   122dc:	str	r4, [r7, #12]
   122e0:	bl	11310 <rb_new_rawbuffer@plt>
   122e4:	str	r0, [r7, #16]
   122e8:	bl	11310 <rb_new_rawbuffer@plt>
   122ec:	str	r0, [r7, #20]
   122f0:	mvn	r0, #0
   122f4:	add	r1, r7, #24
   122f8:	stm	r1, {r0, r8, sl}
   122fc:	mov	r0, r8
   12300:	bl	111a8 <rb_set_nb@plt>
   12304:	mov	r0, sl
   12308:	bl	111a8 <rb_set_nb@plt>
   1230c:	ldr	r0, [r9, #12]
   12310:	movw	r1, #19923	; 0x4dd3
   12314:	mov	r8, #0
   12318:	movt	r1, #4194	; 0x1062
   1231c:	ldr	r0, [r0, #1]
   12320:	umull	r1, r2, r0, r1
   12324:	str	r0, [r7, #24]
   12328:	ldr	r6, [pc, #1164]	; 127bc <__errno_location@plt+0x1404>
   1232c:	str	r7, [r7]
   12330:	str	r8, [r7, #4]
   12334:	lsr	r1, r2, #7
   12338:	mov	r2, #2000	; 0x7d0
   1233c:	mls	r0, r1, r2, r0
   12340:	add	r6, pc, r6
   12344:	mov	r1, r6
   12348:	add	r0, r0, r0, lsl #1
   1234c:	ldr	r2, [r1, r0, lsl #2]!
   12350:	cmp	r2, #0
   12354:	str	r2, [r7, #8]
   12358:	beq	125d4 <__errno_location@plt+0x121c>
   1235c:	ldr	sl, [sp, #44]	; 0x2c
   12360:	add	r2, r2, #4
   12364:	str	r7, [r2]
   12368:	b	125e8 <__errno_location@plt+0x1230>
   1236c:	add	r2, r6, r0, lsl #2
   12370:	ldr	sl, [sp, #44]	; 0x2c
   12374:	ldr	r3, [r2, #4]!
   12378:	cmp	r3, #0
   1237c:	streq	r7, [r2]
   12380:	add	r0, r6, r0, lsl #2
   12384:	str	r7, [r1]
   12388:	ldr	r1, [r0, #8]
   1238c:	add	r1, r1, #1
   12390:	str	r1, [r0, #8]
   12394:	mov	r0, #1
   12398:	strb	r0, [r7, #72]	; 0x48
   1239c:	mov	r0, r8
   123a0:	bl	110d0 <rb_get_type@plt>
   123a4:	cmp	r0, #64	; 0x40
   123a8:	bne	123b8 <__errno_location@plt+0x1000>
   123ac:	ldr	r0, [r7, #28]
   123b0:	mov	r1, #4
   123b4:	bl	11220 <rb_set_type@plt>
   123b8:	ldr	r0, [r7, #32]
   123bc:	bl	110d0 <rb_get_type@plt>
   123c0:	cmp	r0, #64	; 0x40
   123c4:	mov	r8, #0
   123c8:	bne	123d8 <__errno_location@plt+0x1020>
   123cc:	ldr	r0, [r7, #32]
   123d0:	mov	r1, #4
   123d4:	bl	11220 <rb_set_type@plt>
   123d8:	ldr	r0, [r9, #20]
   123dc:	ldr	r1, [pc, #992]	; 127c4 <__errno_location@plt+0x140c>
   123e0:	mov	r2, r7
   123e4:	mov	r3, #10
   123e8:	add	r1, pc, r1
   123ec:	bl	112f8 <rb_ssl_start_connected@plt>
   123f0:	b	12624 <__errno_location@plt+0x126c>
   123f4:	add	r2, r7, r0, lsl #2
   123f8:	ldr	r3, [r2, #4]!
   123fc:	cmp	r3, #0
   12400:	streq	r6, [r2]
   12404:	add	r0, r7, r0, lsl #2
   12408:	str	r6, [r1]
   1240c:	str	ip, [sp, #36]	; 0x24
   12410:	ldr	r1, [r0, #8]
   12414:	add	r1, r1, #1
   12418:	str	r1, [r0, #8]
   1241c:	ldrb	r0, [r6, #72]	; 0x48
   12420:	mov	r1, #112	; 0x70
   12424:	ldrb	r8, [ip, #5]
   12428:	ldr	sl, [r9, #16]
   1242c:	orr	r0, r0, #2
   12430:	strb	r0, [r6, #72]	; 0x48
   12434:	mov	r0, #1
   12438:	bl	1119c <calloc@plt>
   1243c:	cmp	r0, #0
   12440:	beq	12794 <__errno_location@plt+0x13dc>
   12444:	mov	r7, r0
   12448:	sub	r0, sl, #6
   1244c:	mov	r2, #56	; 0x38
   12450:	str	r0, [sp, #40]	; 0x28
   12454:	mov	r0, #1
   12458:	str	r7, [r6, #76]	; 0x4c
   1245c:	str	r0, [r7, #44]	; 0x2c
   12460:	ldr	r0, [pc, #900]	; 127ec <__errno_location@plt+0x1434>
   12464:	add	r0, pc, r0
   12468:	str	r0, [r7, #32]
   1246c:	mov	r0, r7
   12470:	ldr	sl, [pc, #888]	; 127f0 <__errno_location@plt+0x1438>
   12474:	add	sl, pc, sl
   12478:	str	sl, [r7, #36]	; 0x24
   1247c:	ldr	r1, [pc, #880]	; 127f4 <__errno_location@plt+0x143c>
   12480:	add	r1, pc, r1
   12484:	bl	11328 <inflateInit_@plt>
   12488:	mov	r0, #1
   1248c:	cmp	r8, #9
   12490:	mov	r3, #56	; 0x38
   12494:	str	r0, [r7, #100]	; 0x64
   12498:	movwhi	r8, #255	; 0xff
   1249c:	ldr	r0, [pc, #852]	; 127f8 <__errno_location@plt+0x1440>
   124a0:	mov	r1, r8
   124a4:	add	r0, pc, r0
   124a8:	str	r0, [r7, #88]	; 0x58
   124ac:	mov	r0, #0
   124b0:	str	sl, [r7, #92]	; 0x5c
   124b4:	str	r0, [r7, #76]	; 0x4c
   124b8:	str	r0, [r7, #64]	; 0x40
   124bc:	ldr	r0, [r6, #76]	; 0x4c
   124c0:	ldr	r2, [pc, #820]	; 127fc <__errno_location@plt+0x1444>
   124c4:	add	r0, r0, #56	; 0x38
   124c8:	add	r2, pc, r2
   124cc:	bl	11190 <deflateInit_@plt>
   124d0:	ldr	r2, [sp, #40]	; 0x28
   124d4:	cmp	r2, #0
   124d8:	beq	124ec <__errno_location@plt+0x1134>
   124dc:	ldr	r0, [sp, #36]	; 0x24
   124e0:	add	r1, r0, #6
   124e4:	mov	r0, r6
   124e8:	bl	133e0 <__errno_location@plt+0x2028>
   124ec:	ldr	r0, [r6, #28]
   124f0:	mov	r1, r6
   124f4:	bl	12e24 <__errno_location@plt+0x1a6c>
   124f8:	ldr	r0, [r6, #32]
   124fc:	mov	r1, r6
   12500:	bl	12ff8 <__errno_location@plt+0x1c40>
   12504:	ldr	sl, [sp, #44]	; 0x2c
   12508:	mov	r8, #0
   1250c:	b	12624 <__errno_location@plt+0x126c>
   12510:	cmp	sl, #0
   12514:	beq	12794 <__errno_location@plt+0x13dc>
   12518:	str	r4, [sl, #12]
   1251c:	bl	11310 <rb_new_rawbuffer@plt>
   12520:	str	r0, [sl, #16]
   12524:	bl	11310 <rb_new_rawbuffer@plt>
   12528:	str	r0, [sl, #20]
   1252c:	mvn	r0, #0
   12530:	str	r0, [sl, #24]
   12534:	mov	r0, r8
   12538:	str	r8, [sl, #28]
   1253c:	str	r7, [sl, #32]
   12540:	bl	111a8 <rb_set_nb@plt>
   12544:	mov	r0, r7
   12548:	bl	111a8 <rb_set_nb@plt>
   1254c:	ldr	r0, [r9, #12]
   12550:	movw	r1, #19923	; 0x4dd3
   12554:	mov	r8, #0
   12558:	movt	r1, #4194	; 0x1062
   1255c:	ldr	r0, [r0, #1]
   12560:	umull	r1, r2, r0, r1
   12564:	str	r0, [sl, #24]
   12568:	ldr	r7, [pc, #564]	; 127a4 <__errno_location@plt+0x13ec>
   1256c:	str	sl, [sl]
   12570:	str	r8, [sl, #4]
   12574:	lsr	r1, r2, #7
   12578:	mov	r2, #2000	; 0x7d0
   1257c:	mls	r0, r1, r2, r0
   12580:	add	r7, pc, r7
   12584:	mov	r1, r7
   12588:	add	r0, r0, r0, lsl #1
   1258c:	ldr	r2, [r1, r0, lsl #2]!
   12590:	cmp	r2, #0
   12594:	str	r2, [sl, #8]
   12598:	beq	12718 <__errno_location@plt+0x1360>
   1259c:	add	r2, r2, #4
   125a0:	str	sl, [r2]
   125a4:	b	12728 <__errno_location@plt+0x1370>
   125a8:	add	r2, r7, r0, lsl #2
   125ac:	ldr	r3, [r2, #4]!
   125b0:	cmp	r3, #0
   125b4:	streq	r6, [r2]
   125b8:	add	r0, r7, r0, lsl #2
   125bc:	str	r6, [r1]
   125c0:	ldr	r1, [r0, #8]
   125c4:	add	r1, r1, #1
   125c8:	str	r1, [r0, #8]
   125cc:	mov	r0, r6
   125d0:	b	12600 <__errno_location@plt+0x1248>
   125d4:	add	r2, r6, r0, lsl #2
   125d8:	ldr	sl, [sp, #44]	; 0x2c
   125dc:	ldr	r3, [r2, #4]!
   125e0:	cmp	r3, #0
   125e4:	streq	r7, [r2]
   125e8:	add	r0, r6, r0, lsl #2
   125ec:	str	r7, [r1]
   125f0:	ldr	r1, [r0, #8]
   125f4:	add	r1, r1, #1
   125f8:	str	r1, [r0, #8]
   125fc:	mov	r0, r7
   12600:	ldr	r2, [pc, #460]	; 127d4 <__errno_location@plt+0x141c>
   12604:	mov	r1, #1
   12608:	add	r2, pc, r2
   1260c:	bl	12804 <__errno_location@plt+0x144c>
   12610:	ldr	r1, [pc, #448]	; 127d8 <__errno_location@plt+0x1420>
   12614:	mov	r0, r4
   12618:	add	r1, pc, r1
   1261c:	mov	r2, #1
   12620:	bl	12ac8 <__errno_location@plt+0x1710>
   12624:	ldr	r0, [r5, #8]
   12628:	ldr	r1, [r5, #4]
   1262c:	cmp	r0, #0
   12630:	beq	12640 <__errno_location@plt+0x1288>
   12634:	str	r1, [r0, #4]
   12638:	ldr	r1, [r5, #4]
   1263c:	b	12644 <__errno_location@plt+0x128c>
   12640:	str	r1, [r4, #28]
   12644:	cmp	r1, #0
   12648:	mov	r2, sl
   1264c:	addne	r2, r1, #8
   12650:	str	r0, [r2]
   12654:	str	r8, [r5, #4]
   12658:	str	r8, [r5, #8]
   1265c:	ldr	r0, [r4, #32]
   12660:	sub	r0, r0, #1
   12664:	str	r0, [r4, #32]
   12668:	ldr	r0, [r9, #12]
   1266c:	cmp	r0, #0
   12670:	beq	12678 <__errno_location@plt+0x12c0>
   12674:	bl	111f0 <free@plt>
   12678:	mov	r0, r9
   1267c:	bl	111f0 <free@plt>
   12680:	ldr	r5, [sp, #48]	; 0x30
   12684:	cmp	r5, #0
   12688:	bne	11c74 <__errno_location@plt+0x8bc>
   1268c:	b	1276c <__errno_location@plt+0x13b4>
   12690:	add	r2, r7, r0, lsl #2
   12694:	ldr	r3, [r2, #4]!
   12698:	cmp	r3, #0
   1269c:	streq	sl, [r2]
   126a0:	add	r0, r7, r0, lsl #2
   126a4:	str	sl, [r1]
   126a8:	ldr	r1, [r0, #8]
   126ac:	add	r1, r1, #1
   126b0:	str	r1, [r0, #8]
   126b4:	mov	r0, #1
   126b8:	strb	r0, [sl, #72]	; 0x48
   126bc:	mov	r0, r8
   126c0:	bl	110d0 <rb_get_type@plt>
   126c4:	tst	r0, #64	; 0x40
   126c8:	beq	126d8 <__errno_location@plt+0x1320>
   126cc:	ldr	r0, [sl, #28]
   126d0:	mov	r1, #4
   126d4:	bl	11220 <rb_set_type@plt>
   126d8:	ldr	r0, [sl, #32]
   126dc:	bl	110d0 <rb_get_type@plt>
   126e0:	cmp	r0, #64	; 0x40
   126e4:	mov	r8, #0
   126e8:	bne	126f8 <__errno_location@plt+0x1340>
   126ec:	ldr	r0, [sl, #32]
   126f0:	mov	r1, #4
   126f4:	bl	11220 <rb_set_type@plt>
   126f8:	ldr	r0, [r9, #20]
   126fc:	ldr	r1, [pc, #176]	; 127b4 <__errno_location@plt+0x13fc>
   12700:	mov	r2, sl
   12704:	mov	r3, #10
   12708:	add	r1, pc, r1
   1270c:	bl	11340 <rb_ssl_start_accepted@plt>
   12710:	ldr	sl, [sp, #44]	; 0x2c
   12714:	b	12624 <__errno_location@plt+0x126c>
   12718:	add	r2, r7, r0, lsl #2
   1271c:	ldr	r3, [r2, #4]!
   12720:	cmp	r3, #0
   12724:	streq	sl, [r2]
   12728:	add	r0, r7, r0, lsl #2
   1272c:	str	sl, [r1]
   12730:	ldr	r1, [r0, #8]
   12734:	add	r1, r1, #1
   12738:	str	r1, [r0, #8]
   1273c:	mov	r0, sl
   12740:	mov	r1, #1
   12744:	ldr	r2, [pc, #92]	; 127a8 <__errno_location@plt+0x13f0>
   12748:	add	r2, pc, r2
   1274c:	bl	12804 <__errno_location@plt+0x144c>
   12750:	ldr	r1, [pc, #84]	; 127ac <__errno_location@plt+0x13f4>
   12754:	mov	r0, r4
   12758:	mov	r2, #1
   1275c:	add	r1, pc, r1
   12760:	bl	12ac8 <__errno_location@plt+0x1710>
   12764:	ldr	sl, [sp, #44]	; 0x2c
   12768:	b	12624 <__errno_location@plt+0x126c>
   1276c:	ldr	r0, [r4, #16]
   12770:	ldr	r2, [pc, #136]	; 12800 <__errno_location@plt+0x1448>
   12774:	mov	r1, #1
   12778:	mov	r3, r4
   1277c:	add	r2, pc, r2
   12780:	sub	sp, fp, #48	; 0x30
   12784:	vpop	{d8-d9}
   12788:	add	sp, sp, #4
   1278c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12790:	b	11130 <rb_setselect@plt>
   12794:	bl	112d4 <rb_outofmemory@plt>
   12798:	mov	r0, #0
   1279c:	bl	113ac <exit@plt>
   127a0:	strdeq	r2, [r1], -r4
   127a4:			; <UNDEFINED> instruction: 0x00011bb8
   127a8:	andeq	r1, r0, r4, ror #4
   127ac:	andeq	r1, r0, lr, asr #4
   127b0:	andeq	r2, r1, ip, ror r3
   127b4:			; <UNDEFINED> instruction: 0x000005bc
   127b8:	andeq	r2, r1, r4, lsl #4
   127bc:	strdeq	r1, [r1], -r8
   127c0:	muleq	r1, r0, r1
   127c4:	strdeq	r1, [r0], -r0
   127c8:	andeq	r8, r1, r0, lsl #2
   127cc:	andeq	r2, r1, ip, asr #2
   127d0:	andeq	r1, r1, ip, lsl #29
   127d4:	andeq	r1, r0, r4, lsr #7
   127d8:	muleq	r0, r2, r3
   127dc:	andeq	r1, r0, r0, lsl r9
   127e0:	muleq	r1, r4, r0
   127e4:	andeq	r1, r0, sl, asr #16
   127e8:	andeq	r2, r1, ip, asr r2
   127ec:	muleq	r0, ip, r2
   127f0:	andeq	r1, r0, ip, lsr #5
   127f4:	andeq	r1, r0, r3, lsr #10
   127f8:	andeq	r1, r0, ip, asr r2
   127fc:	ldrdeq	r1, [r0], -fp
   12800:			; <UNDEFINED> instruction: 0xfffff370
   12804:	sub	sp, sp, #4
   12808:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1280c:	add	fp, sp, #24
   12810:	sub	sp, sp, #388	; 0x184
   12814:	str	r3, [fp, #8]
   12818:	mov	r4, r0
   1281c:	ldrb	r0, [r0, #72]	; 0x48
   12820:	tst	r0, #8
   12824:	bne	129c8 <__errno_location@plt+0x1610>
   12828:	mov	r6, r1
   1282c:	ldr	r0, [r4, #16]
   12830:	ldr	r1, [r4, #28]
   12834:	mov	r7, r2
   12838:	bl	11394 <rb_rawbuf_flush@plt>
   1283c:	ldr	r0, [r4, #20]
   12840:	ldr	r1, [r4, #32]
   12844:	bl	11394 <rb_rawbuf_flush@plt>
   12848:	ldr	r0, [r4, #28]
   1284c:	bl	11250 <rb_close@plt>
   12850:	ldrb	r0, [r4, #72]	; 0x48
   12854:	orr	r1, r0, #8
   12858:	tst	r0, #64	; 0x40
   1285c:	strb	r1, [r4, #72]	; 0x48
   12860:	bne	128d8 <__errno_location@plt+0x1520>
   12864:	ldr	r2, [r4, #24]
   12868:	movw	r3, #19923	; 0x4dd3
   1286c:	ldr	r0, [r4, #8]
   12870:	ldr	r1, [r4, #4]
   12874:	movt	r3, #4194	; 0x1062
   12878:	umull	r3, r5, r2, r3
   1287c:	cmp	r0, #0
   12880:	lsr	r3, r5, #7
   12884:	mov	r5, #2000	; 0x7d0
   12888:	mls	r2, r3, r5, r2
   1288c:	ldr	r3, [pc, #324]	; 129d8 <__errno_location@plt+0x1620>
   12890:	add	r2, r2, r2, lsl #1
   12894:	add	r3, pc, r3
   12898:	add	r2, r3, r2, lsl #2
   1289c:	beq	128ac <__errno_location@plt+0x14f4>
   128a0:	str	r1, [r0, #4]
   128a4:	ldr	r1, [r4, #4]
   128a8:	b	128b0 <__errno_location@plt+0x14f8>
   128ac:	str	r1, [r2, #4]
   128b0:	cmp	r1, #0
   128b4:	mov	r3, r2
   128b8:	addne	r3, r1, #8
   128bc:	str	r0, [r3]
   128c0:	mov	r0, #0
   128c4:	str	r0, [r4, #4]
   128c8:	str	r0, [r4, #8]
   128cc:	ldr	r0, [r2, #8]
   128d0:	sub	r0, r0, #1
   128d4:	str	r0, [r2, #8]
   128d8:	ldr	r0, [r4, #32]
   128dc:	cmp	r6, #0
   128e0:	cmpne	r7, #0
   128e4:	bne	12920 <__errno_location@plt+0x1568>
   128e8:	bl	11250 <rb_close@plt>
   128ec:	mov	r0, #0
   128f0:	str	r0, [r4, #4]
   128f4:	str	r4, [r4]
   128f8:	ldr	r1, [pc, #220]	; 129dc <__errno_location@plt+0x1624>
   128fc:	ldr	r1, [pc, r1]
   12900:	str	r1, [r4, #8]
   12904:	cmp	r1, #0
   12908:	ldr	r0, [pc, #208]	; 129e0 <__errno_location@plt+0x1628>
   1290c:	add	r0, pc, r0
   12910:	beq	129a8 <__errno_location@plt+0x15f0>
   12914:	add	r1, r1, #4
   12918:	str	r4, [r1]
   1291c:	b	129b8 <__errno_location@plt+0x1600>
   12920:	ldr	r2, [pc, #188]	; 129e4 <__errno_location@plt+0x162c>
   12924:	mov	r1, #1
   12928:	mov	r3, r4
   1292c:	add	r2, pc, r2
   12930:	bl	11130 <rb_setselect@plt>
   12934:	ldr	r0, [r4, #32]
   12938:	mov	r1, #2
   1293c:	mov	r2, #0
   12940:	mov	r3, #0
   12944:	bl	11130 <rb_setselect@plt>
   12948:	sub	r6, fp, #156	; 0x9c
   1294c:	add	r3, fp, #8
   12950:	mov	r1, #128	; 0x80
   12954:	mov	r2, r7
   12958:	mov	r0, r6
   1295c:	str	r3, [fp, #-28]	; 0xffffffe4
   12960:	bl	11160 <vsnprintf@plt>
   12964:	mov	r0, #68	; 0x44
   12968:	mov	r5, sp
   1296c:	mov	r1, r6
   12970:	mov	r2, #251	; 0xfb
   12974:	strb	r0, [sp]
   12978:	ldr	r0, [r4, #24]
   1297c:	str	r0, [sp, #1]
   12980:	add	r0, r5, #5
   12984:	bl	111c0 <rb_strlcpy@plt>
   12988:	mov	r0, r6
   1298c:	bl	1122c <strlen@plt>
   12990:	ldr	r1, [r4, #12]
   12994:	add	r2, r0, #6
   12998:	mov	r0, r1
   1299c:	mov	r1, r5
   129a0:	bl	12ac8 <__errno_location@plt+0x1710>
   129a4:	b	129c8 <__errno_location@plt+0x1610>
   129a8:	mov	r1, r0
   129ac:	ldr	r2, [r1, #4]!
   129b0:	cmp	r2, #0
   129b4:	streq	r4, [r1]
   129b8:	str	r4, [r0]
   129bc:	ldr	r1, [r0, #8]
   129c0:	add	r1, r1, #1
   129c4:	str	r1, [r0, #8]
   129c8:	sub	sp, fp, #24
   129cc:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   129d0:	add	sp, sp, #4
   129d4:	bx	lr
   129d8:	andeq	r1, r1, r4, lsr #17
   129dc:	andeq	r1, r1, r0, lsr r8
   129e0:	andeq	r1, r1, r0, lsr #16
   129e4:	strheq	r0, [r0], -r4
   129e8:	push	{r4, r5, r6, r7, fp, lr}
   129ec:	add	fp, sp, #16
   129f0:	sub	sp, sp, #16384	; 0x4000
   129f4:	cmp	r1, #0
   129f8:	beq	12a50 <__errno_location@plt+0x1698>
   129fc:	mov	r4, r1
   12a00:	mov	r5, sp
   12a04:	ldr	r0, [r4, #32]
   12a08:	mov	r1, r5
   12a0c:	mov	r2, #16384	; 0x4000
   12a10:	bl	11214 <rb_read@plt>
   12a14:	cmp	r0, #0
   12a18:	beq	12a58 <__errno_location@plt+0x16a0>
   12a1c:	cmn	r0, #1
   12a20:	bgt	12a04 <__errno_location@plt+0x164c>
   12a24:	bl	113b8 <__errno_location@plt>
   12a28:	ldr	r0, [r0]
   12a2c:	bl	11100 <rb_ignore_errno@plt>
   12a30:	cmp	r0, #0
   12a34:	beq	12a58 <__errno_location@plt+0x16a0>
   12a38:	ldr	r0, [r4, #32]
   12a3c:	ldr	r2, [pc, #128]	; 12ac4 <__errno_location@plt+0x170c>
   12a40:	mov	r1, #1
   12a44:	mov	r3, r4
   12a48:	add	r2, pc, r2
   12a4c:	bl	11130 <rb_setselect@plt>
   12a50:	sub	sp, fp, #16
   12a54:	pop	{r4, r5, r6, r7, fp, pc}
   12a58:	ldr	r0, [r4, #32]
   12a5c:	bl	11250 <rb_close@plt>
   12a60:	mov	r0, #0
   12a64:	str	r0, [r4, #4]
   12a68:	str	r4, [r4]
   12a6c:	ldr	r1, [pc, #72]	; 12abc <__errno_location@plt+0x1704>
   12a70:	ldr	r1, [pc, r1]
   12a74:	str	r1, [r4, #8]
   12a78:	cmp	r1, #0
   12a7c:	ldr	r0, [pc, #60]	; 12ac0 <__errno_location@plt+0x1708>
   12a80:	add	r0, pc, r0
   12a84:	beq	12a94 <__errno_location@plt+0x16dc>
   12a88:	add	r1, r1, #4
   12a8c:	str	r4, [r1]
   12a90:	b	12aa4 <__errno_location@plt+0x16ec>
   12a94:	mov	r1, r0
   12a98:	ldr	r2, [r1, #4]!
   12a9c:	cmp	r2, #0
   12aa0:	streq	r4, [r1]
   12aa4:	str	r4, [r0]
   12aa8:	ldr	r1, [r0, #8]
   12aac:	add	r1, r1, #1
   12ab0:	str	r1, [r0, #8]
   12ab4:	sub	sp, fp, #16
   12ab8:	pop	{r4, r5, r6, r7, fp, pc}
   12abc:			; <UNDEFINED> instruction: 0x000116bc
   12ac0:	andeq	r1, r1, ip, lsr #13
   12ac4:			; <UNDEFINED> instruction: 0xffffff98
   12ac8:	push	{r4, r5, r6, r7, fp, lr}
   12acc:	add	fp, sp, #16
   12ad0:	mov	r7, r1
   12ad4:	mov	r4, r0
   12ad8:	mov	r0, #1
   12adc:	mov	r1, #40	; 0x28
   12ae0:	mov	r6, r2
   12ae4:	bl	1119c <calloc@plt>
   12ae8:	cmp	r0, #0
   12aec:	beq	12b6c <__errno_location@plt+0x17b4>
   12af0:	mov	r5, r0
   12af4:	mov	r0, #1
   12af8:	mov	r1, r6
   12afc:	bl	1119c <calloc@plt>
   12b00:	cmp	r0, #0
   12b04:	beq	12b6c <__errno_location@plt+0x17b4>
   12b08:	mov	r1, r7
   12b0c:	mov	r2, r6
   12b10:	str	r0, [r5, #12]
   12b14:	str	r6, [r5, #16]
   12b18:	bl	11244 <memcpy@plt>
   12b1c:	ldr	r0, [r4, #40]	; 0x28
   12b20:	str	r5, [r5]
   12b24:	cmp	r0, #0
   12b28:	str	r0, [r5, #4]
   12b2c:	beq	12b3c <__errno_location@plt+0x1784>
   12b30:	add	r0, r0, #8
   12b34:	str	r5, [r0]
   12b38:	b	12b4c <__errno_location@plt+0x1794>
   12b3c:	mov	r0, r4
   12b40:	ldr	r1, [r0, #36]!	; 0x24
   12b44:	cmp	r1, #0
   12b48:	streq	r5, [r0]
   12b4c:	str	r5, [r4, #40]	; 0x28
   12b50:	ldr	r1, [r4, #44]	; 0x2c
   12b54:	ldr	r0, [r4, #16]
   12b58:	add	r1, r1, #1
   12b5c:	str	r1, [r4, #44]	; 0x2c
   12b60:	mov	r1, r4
   12b64:	pop	{r4, r5, r6, r7, fp, lr}
   12b68:	b	12b70 <__errno_location@plt+0x17b8>
   12b6c:	bl	112d4 <rb_outofmemory@plt>
   12b70:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12b74:	add	fp, sp, #28
   12b78:	sub	sp, sp, #12
   12b7c:	mov	r8, r1
   12b80:	mov	sl, r1
   12b84:	ldr	r4, [r8, #36]!	; 0x24
   12b88:	cmp	r4, #0
   12b8c:	bne	12ba0 <__errno_location@plt+0x17e8>
   12b90:	b	12c90 <__errno_location@plt+0x18d8>
   12b94:	cmp	r9, #0
   12b98:	mov	r4, r9
   12b9c:	beq	12c90 <__errno_location@plt+0x18d8>
   12ba0:	ldr	r5, [r4]
   12ba4:	ldr	r0, [sl, #16]
   12ba8:	ldr	r9, [r4, #8]
   12bac:	ldr	r3, [r5, #12]
   12bb0:	ldr	r1, [r5, #16]
   12bb4:	ldr	r2, [r5, #36]	; 0x24
   12bb8:	ldr	r7, [pc, #260]	; 12cc4 <__errno_location@plt+0x190c>
   12bbc:	ldr	r7, [pc, r7]
   12bc0:	stm	sp, {r1, r7}
   12bc4:	add	r7, r5, #20
   12bc8:	mov	r1, r7
   12bcc:	bl	11154 <rb_send_fd_buf@plt>
   12bd0:	mov	r6, r0
   12bd4:	cmp	r0, #1
   12bd8:	blt	12c64 <__errno_location@plt+0x18ac>
   12bdc:	ldr	r0, [r4, #8]
   12be0:	ldr	r1, [r4, #4]
   12be4:	cmp	r0, #0
   12be8:	beq	12bf8 <__errno_location@plt+0x1840>
   12bec:	str	r1, [r0, #4]
   12bf0:	ldr	r1, [r4, #4]
   12bf4:	b	12bfc <__errno_location@plt+0x1844>
   12bf8:	str	r1, [sl, #40]	; 0x28
   12bfc:	cmp	r1, #0
   12c00:	mov	r2, r8
   12c04:	addne	r2, r1, #8
   12c08:	str	r0, [r2]
   12c0c:	mov	r0, #0
   12c10:	str	r0, [r4, #4]
   12c14:	str	r0, [r4, #8]
   12c18:	ldr	r0, [sl, #44]	; 0x2c
   12c1c:	sub	r0, r0, #1
   12c20:	str	r0, [sl, #44]	; 0x2c
   12c24:	ldr	r0, [r5, #36]	; 0x24
   12c28:	cmp	r0, #1
   12c2c:	blt	12c4c <__errno_location@plt+0x1894>
   12c30:	mov	r4, #0
   12c34:	ldr	r0, [r7, r4, lsl #2]
   12c38:	bl	11250 <rb_close@plt>
   12c3c:	ldr	r0, [r5, #36]	; 0x24
   12c40:	add	r4, r4, #1
   12c44:	cmp	r4, r0
   12c48:	blt	12c34 <__errno_location@plt+0x187c>
   12c4c:	ldr	r0, [r5, #12]
   12c50:	cmp	r0, #0
   12c54:	beq	12c5c <__errno_location@plt+0x18a4>
   12c58:	bl	111f0 <free@plt>
   12c5c:	mov	r0, r5
   12c60:	bl	111f0 <free@plt>
   12c64:	cmp	r6, #0
   12c68:	beq	12c88 <__errno_location@plt+0x18d0>
   12c6c:	cmn	r6, #1
   12c70:	bgt	12b94 <__errno_location@plt+0x17dc>
   12c74:	bl	113b8 <__errno_location@plt>
   12c78:	ldr	r0, [r0]
   12c7c:	bl	11100 <rb_ignore_errno@plt>
   12c80:	cmp	r0, #0
   12c84:	bne	12b94 <__errno_location@plt+0x17dc>
   12c88:	mov	r0, #0
   12c8c:	bl	113ac <exit@plt>
   12c90:	ldr	r0, [sl, #44]	; 0x2c
   12c94:	cmp	r0, #0
   12c98:	beq	12cbc <__errno_location@plt+0x1904>
   12c9c:	ldr	r0, [sl, #16]
   12ca0:	ldr	r2, [pc, #32]	; 12cc8 <__errno_location@plt+0x1910>
   12ca4:	mov	r1, #2
   12ca8:	mov	r3, sl
   12cac:	add	r2, pc, r2
   12cb0:	sub	sp, fp, #28
   12cb4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12cb8:	b	11130 <rb_setselect@plt>
   12cbc:	sub	sp, fp, #28
   12cc0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12cc4:	andeq	r1, r1, r4, ror #10
   12cc8:			; <UNDEFINED> instruction: 0xfffffebc
   12ccc:	push	{r4, sl, fp, lr}
   12cd0:	add	fp, sp, #8
   12cd4:	sub	sp, sp, #80	; 0x50
   12cd8:	ldr	r4, [fp, #8]
   12cdc:	cmp	r1, #0
   12ce0:	beq	12cfc <__errno_location@plt+0x1944>
   12ce4:	mov	r0, r4
   12ce8:	mov	r1, #0
   12cec:	mov	r2, #0
   12cf0:	sub	sp, fp, #8
   12cf4:	pop	{r4, sl, fp, lr}
   12cf8:	b	12804 <__errno_location@plt+0x144c>
   12cfc:	mov	r0, r4
   12d00:	bl	12da0 <__errno_location@plt+0x19e8>
   12d04:	ldr	r0, [r4, #28]
   12d08:	ldr	r2, [pc, #136]	; 12d98 <__errno_location@plt+0x19e0>
   12d0c:	add	r1, sp, #3
   12d10:	add	r1, r1, #13
   12d14:	ldr	r2, [pc, r2]
   12d18:	bl	111cc <rb_get_ssl_certfp@plt>
   12d1c:	cmp	r0, #0
   12d20:	beq	12d58 <__errno_location@plt+0x19a0>
   12d24:	mov	r1, #70	; 0x46
   12d28:	strb	r1, [sp, #3]
   12d2c:	ldr	r1, [r4, #24]
   12d30:	str	r0, [sp, #12]
   12d34:	ldr	r2, [pc, #96]	; 12d9c <__errno_location@plt+0x19e4>
   12d38:	ldr	r2, [pc, r2]
   12d3c:	str	r2, [sp, #8]
   12d40:	str	r1, [sp, #4]
   12d44:	add	r2, r0, #13
   12d48:	add	r1, sp, #3
   12d4c:	ldr	r3, [r4, #12]
   12d50:	mov	r0, r3
   12d54:	bl	12ac8 <__errno_location@plt+0x1710>
   12d58:	mov	r0, #79	; 0x4f
   12d5c:	add	r1, sp, #3
   12d60:	mov	r2, #5
   12d64:	strb	r0, [sp, #3]
   12d68:	ldr	r0, [r4, #24]
   12d6c:	str	r0, [sp, #4]
   12d70:	ldr	r0, [r4, #12]
   12d74:	bl	12ac8 <__errno_location@plt+0x1710>
   12d78:	ldr	r0, [r4, #28]
   12d7c:	mov	r1, r4
   12d80:	bl	12e24 <__errno_location@plt+0x1a6c>
   12d84:	ldr	r0, [r4, #32]
   12d88:	mov	r1, r4
   12d8c:	bl	12ff8 <__errno_location@plt+0x1c40>
   12d90:	sub	sp, fp, #8
   12d94:	pop	{r4, sl, fp, pc}
   12d98:	andeq	r7, r1, r4, ror #3
   12d9c:	andeq	r7, r1, r0, asr #3
   12da0:	push	{r4, r5, r6, sl, fp, lr}
   12da4:	add	fp, sp, #16
   12da8:	sub	sp, sp, #768	; 0x300
   12dac:	mov	r4, r0
   12db0:	ldrb	r0, [r0, #72]	; 0x48
   12db4:	tst	r0, #1
   12db8:	beq	12e1c <__errno_location@plt+0x1a64>
   12dbc:	ldr	r0, [r4, #28]
   12dc0:	bl	11238 <rb_ssl_get_cipher@plt>
   12dc4:	cmp	r0, #0
   12dc8:	beq	12e1c <__errno_location@plt+0x1a64>
   12dcc:	mov	r5, sp
   12dd0:	mov	r1, r0
   12dd4:	mov	r2, #256	; 0x100
   12dd8:	mov	r0, r5
   12ddc:	bl	111c0 <rb_strlcpy@plt>
   12de0:	mov	r0, #67	; 0x43
   12de4:	add	r6, sp, #256	; 0x100
   12de8:	mov	r1, r5
   12dec:	strb	r0, [sp, #256]	; 0x100
   12df0:	ldr	r0, [r4, #24]
   12df4:	str	r0, [sp, #257]	; 0x101
   12df8:	add	r0, r6, #5
   12dfc:	bl	11274 <strcpy@plt>
   12e00:	mov	r0, r5
   12e04:	bl	1122c <strlen@plt>
   12e08:	ldr	r1, [r4, #12]
   12e0c:	add	r2, r0, #6
   12e10:	mov	r0, r1
   12e14:	mov	r1, r6
   12e18:	bl	12ac8 <__errno_location@plt+0x1710>
   12e1c:	sub	sp, fp, #16
   12e20:	pop	{r4, r5, r6, sl, fp, pc}
   12e24:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12e28:	add	fp, sp, #24
   12e2c:	sub	sp, sp, #16384	; 0x4000
   12e30:	cmp	r1, #0
   12e34:	beq	12efc <__errno_location@plt+0x1b44>
   12e38:	ldrb	r0, [r1, #72]	; 0x48
   12e3c:	mov	r4, r1
   12e40:	tst	r0, #8
   12e44:	bne	12efc <__errno_location@plt+0x1b44>
   12e48:	tst	r0, #32
   12e4c:	beq	12e70 <__errno_location@plt+0x1ab8>
   12e50:	and	r0, r0, #223	; 0xdf
   12e54:	mov	r1, r4
   12e58:	strb	r0, [r4, #72]	; 0x48
   12e5c:	ldr	r0, [r4, #28]
   12e60:	bl	13140 <__errno_location@plt+0x1d88>
   12e64:	ldrb	r0, [r4, #72]	; 0x48
   12e68:	tst	r0, #8
   12e6c:	bne	12efc <__errno_location@plt+0x1b44>
   12e70:	tst	r0, #8
   12e74:	bne	12efc <__errno_location@plt+0x1b44>
   12e78:	add	r7, r4, #48	; 0x30
   12e7c:	mov	r5, sp
   12e80:	b	12ea0 <__errno_location@plt+0x1ae8>
   12e84:	mov	r0, r4
   12e88:	mov	r1, r5
   12e8c:	mov	r2, r6
   12e90:	bl	133e0 <__errno_location@plt+0x2028>
   12e94:	ldrb	r0, [r4, #72]	; 0x48
   12e98:	tst	r0, #8
   12e9c:	bne	12efc <__errno_location@plt+0x1b44>
   12ea0:	ldr	r0, [r4, #28]
   12ea4:	mov	r1, r5
   12ea8:	mov	r2, #16384	; 0x4000
   12eac:	bl	11214 <rb_read@plt>
   12eb0:	cmp	r0, #0
   12eb4:	beq	12f04 <__errno_location@plt+0x1b4c>
   12eb8:	mov	r6, r0
   12ebc:	cmn	r0, #1
   12ec0:	ble	12f18 <__errno_location@plt+0x1b60>
   12ec4:	ldrd	r0, [r7]
   12ec8:	adds	r0, r0, r6
   12ecc:	adc	r1, r1, r6, asr #31
   12ed0:	strd	r0, [r7]
   12ed4:	ldrb	r0, [r4, #72]	; 0x48
   12ed8:	tst	r0, #2
   12edc:	bne	12e84 <__errno_location@plt+0x1acc>
   12ee0:	tst	r0, #8
   12ee4:	bne	12e94 <__errno_location@plt+0x1adc>
   12ee8:	ldr	r0, [r4, #20]
   12eec:	mov	r1, r5
   12ef0:	mov	r2, r6
   12ef4:	bl	11388 <rb_rawbuf_append@plt>
   12ef8:	b	12e94 <__errno_location@plt+0x1adc>
   12efc:	sub	sp, fp, #24
   12f00:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   12f04:	ldr	r2, [pc, #228]	; 12ff0 <__errno_location@plt+0x1c38>
   12f08:	ldr	r3, [pc, #228]	; 12ff4 <__errno_location@plt+0x1c3c>
   12f0c:	add	r2, pc, r2
   12f10:	add	r3, pc, r3
   12f14:	b	12fd0 <__errno_location@plt+0x1c18>
   12f18:	bl	113b8 <__errno_location@plt>
   12f1c:	mov	r5, r0
   12f20:	ldr	r0, [r0]
   12f24:	bl	11100 <rb_ignore_errno@plt>
   12f28:	cmp	r0, #0
   12f2c:	beq	12f74 <__errno_location@plt+0x1bbc>
   12f30:	ldr	r0, [r4, #28]
   12f34:	cmn	r6, #4
   12f38:	bne	12f94 <__errno_location@plt+0x1bdc>
   12f3c:	mov	r1, #1
   12f40:	mov	r2, #0
   12f44:	mov	r3, #0
   12f48:	bl	11130 <rb_setselect@plt>
   12f4c:	ldr	r0, [r4, #28]
   12f50:	ldr	r2, [pc, #148]	; 12fec <__errno_location@plt+0x1c34>
   12f54:	mov	r1, #2
   12f58:	mov	r3, r4
   12f5c:	add	r2, pc, r2
   12f60:	bl	11130 <rb_setselect@plt>
   12f64:	ldrb	r0, [r4, #72]	; 0x48
   12f68:	orr	r0, r0, #32
   12f6c:	strb	r0, [r4, #72]	; 0x48
   12f70:	b	12fa8 <__errno_location@plt+0x1bf0>
   12f74:	cmn	r6, #2
   12f78:	bne	12fbc <__errno_location@plt+0x1c04>
   12f7c:	ldrb	r0, [r4, #72]	; 0x48
   12f80:	ands	r0, r0, #1
   12f84:	beq	12fbc <__errno_location@plt+0x1c04>
   12f88:	ldr	r0, [r4, #28]
   12f8c:	bl	112a4 <rb_get_ssl_strerror@plt>
   12f90:	b	12fc4 <__errno_location@plt+0x1c0c>
   12f94:	ldr	r2, [pc, #76]	; 12fe8 <__errno_location@plt+0x1c30>
   12f98:	mov	r1, #1
   12f9c:	mov	r3, r4
   12fa0:	add	r2, pc, r2
   12fa4:	bl	11130 <rb_setselect@plt>
   12fa8:	ldr	r0, [r4, #32]
   12fac:	mov	r1, r4
   12fb0:	bl	13310 <__errno_location@plt+0x1f58>
   12fb4:	sub	sp, fp, #24
   12fb8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   12fbc:	ldr	r0, [r5]
   12fc0:	bl	110c4 <strerror@plt>
   12fc4:	ldr	r2, [pc, #24]	; 12fe4 <__errno_location@plt+0x1c2c>
   12fc8:	mov	r3, r0
   12fcc:	add	r2, pc, r2
   12fd0:	mov	r0, r4
   12fd4:	mov	r1, #1
   12fd8:	bl	12804 <__errno_location@plt+0x144c>
   12fdc:	sub	sp, fp, #24
   12fe0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   12fe4:			; <UNDEFINED> instruction: 0x000008b8
   12fe8:			; <UNDEFINED> instruction: 0xfffffe7c
   12fec:			; <UNDEFINED> instruction: 0xfffffec0
   12ff0:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   12ff4:	muleq	r0, r3, r9
   12ff8:	push	{r4, r5, r6, sl, fp, lr}
   12ffc:	add	fp, sp, #16
   13000:	sub	sp, sp, #16384	; 0x4000
   13004:	cmp	r1, #0
   13008:	beq	13058 <__errno_location@plt+0x1ca0>
   1300c:	ldrb	r0, [r1, #72]	; 0x48
   13010:	mov	r4, r1
   13014:	tst	r0, #8
   13018:	bne	13058 <__errno_location@plt+0x1ca0>
   1301c:	ldr	r0, [r4, #16]
   13020:	bl	1128c <rb_rawbuf_length@plt>
   13024:	cmp	r0, #4096	; 0x1000
   13028:	blt	13060 <__errno_location@plt+0x1ca8>
   1302c:	ldrb	r0, [r4, #72]	; 0x48
   13030:	mov	r1, #1
   13034:	mov	r2, #0
   13038:	mov	r3, #0
   1303c:	orr	r0, r0, #4
   13040:	strb	r0, [r4, #72]	; 0x48
   13044:	ldr	r0, [r4, #32]
   13048:	bl	11130 <rb_setselect@plt>
   1304c:	ldr	r0, [r4, #28]
   13050:	mov	r1, r4
   13054:	bl	13140 <__errno_location@plt+0x1d88>
   13058:	sub	sp, fp, #16
   1305c:	pop	{r4, r5, r6, sl, fp, pc}
   13060:	add	r6, r4, #56	; 0x38
   13064:	mov	r5, sp
   13068:	ldrb	r0, [r4, #72]	; 0x48
   1306c:	tst	r0, #8
   13070:	bne	13058 <__errno_location@plt+0x1ca0>
   13074:	ldr	r0, [r4, #32]
   13078:	mov	r1, r5
   1307c:	mov	r2, #16384	; 0x4000
   13080:	bl	11214 <rb_read@plt>
   13084:	cmp	r0, #0
   13088:	beq	13124 <__errno_location@plt+0x1d6c>
   1308c:	mov	r2, r0
   13090:	cmn	r0, #1
   13094:	ble	130f8 <__errno_location@plt+0x1d40>
   13098:	ldrd	r0, [r6]
   1309c:	adds	r0, r0, r2
   130a0:	adc	r1, r1, r2, asr #31
   130a4:	strd	r0, [r6]
   130a8:	ldrb	r0, [r4, #72]	; 0x48
   130ac:	tst	r0, #2
   130b0:	bne	130cc <__errno_location@plt+0x1d14>
   130b4:	tst	r0, #8
   130b8:	bne	130d8 <__errno_location@plt+0x1d20>
   130bc:	ldr	r0, [r4, #16]
   130c0:	mov	r1, r5
   130c4:	bl	11388 <rb_rawbuf_append@plt>
   130c8:	b	130d8 <__errno_location@plt+0x1d20>
   130cc:	mov	r0, r4
   130d0:	mov	r1, r5
   130d4:	bl	1350c <__errno_location@plt+0x2154>
   130d8:	ldrb	r0, [r4, #72]	; 0x48
   130dc:	tst	r0, #8
   130e0:	bne	13058 <__errno_location@plt+0x1ca0>
   130e4:	ldr	r0, [r4, #16]
   130e8:	bl	1128c <rb_rawbuf_length@plt>
   130ec:	cmp	r0, #4096	; 0x1000
   130f0:	blt	13068 <__errno_location@plt+0x1cb0>
   130f4:	b	1302c <__errno_location@plt+0x1c74>
   130f8:	bl	113b8 <__errno_location@plt>
   130fc:	ldr	r0, [r0]
   13100:	bl	11100 <rb_ignore_errno@plt>
   13104:	cmp	r0, #0
   13108:	beq	13124 <__errno_location@plt+0x1d6c>
   1310c:	ldr	r0, [r4, #32]
   13110:	ldr	r2, [pc, #36]	; 1313c <__errno_location@plt+0x1d84>
   13114:	mov	r1, #1
   13118:	mov	r3, r4
   1311c:	add	r2, pc, r2
   13120:	b	13048 <__errno_location@plt+0x1c90>
   13124:	mov	r0, r4
   13128:	mov	r1, #0
   1312c:	mov	r2, #0
   13130:	bl	12804 <__errno_location@plt+0x144c>
   13134:	sub	sp, fp, #16
   13138:	pop	{r4, r5, r6, sl, fp, pc}
   1313c:			; <UNDEFINED> instruction: 0xfffffed4
   13140:	push	{r4, r5, r6, r7, fp, lr}
   13144:	add	fp, sp, #16
   13148:	mov	r5, r0
   1314c:	ldrb	r0, [r1, #72]	; 0x48
   13150:	tst	r0, #8
   13154:	bne	132e0 <__errno_location@plt+0x1f28>
   13158:	mov	r4, r1
   1315c:	tst	r0, #16
   13160:	beq	13184 <__errno_location@plt+0x1dcc>
   13164:	and	r0, r0, #239	; 0xef
   13168:	mov	r1, r4
   1316c:	strb	r0, [r4, #72]	; 0x48
   13170:	ldr	r0, [r4, #28]
   13174:	bl	12e24 <__errno_location@plt+0x1a6c>
   13178:	ldrb	r0, [r4, #72]	; 0x48
   1317c:	tst	r0, #8
   13180:	bne	132e0 <__errno_location@plt+0x1f28>
   13184:	ldr	r0, [r4, #16]
   13188:	mov	r1, r5
   1318c:	bl	11394 <rb_rawbuf_flush@plt>
   13190:	mov	r6, r0
   13194:	cmp	r0, #1
   13198:	blt	131c8 <__errno_location@plt+0x1e10>
   1319c:	add	r7, r4, #40	; 0x28
   131a0:	ldrd	r0, [r7]
   131a4:	adds	r0, r0, r6
   131a8:	adc	r1, r1, r6, asr #31
   131ac:	strd	r0, [r7]
   131b0:	mov	r1, r5
   131b4:	ldr	r0, [r4, #16]
   131b8:	bl	11394 <rb_rawbuf_flush@plt>
   131bc:	mov	r6, r0
   131c0:	cmp	r0, #0
   131c4:	bgt	131a0 <__errno_location@plt+0x1de8>
   131c8:	cmp	r6, #0
   131cc:	beq	1323c <__errno_location@plt+0x1e84>
   131d0:	bl	113b8 <__errno_location@plt>
   131d4:	mov	r5, r0
   131d8:	ldr	r0, [r0]
   131dc:	bl	11100 <rb_ignore_errno@plt>
   131e0:	cmp	r0, #0
   131e4:	beq	1326c <__errno_location@plt+0x1eb4>
   131e8:	ldr	r0, [r4, #16]
   131ec:	bl	1128c <rb_rawbuf_length@plt>
   131f0:	cmp	r0, #1
   131f4:	blt	132a4 <__errno_location@plt+0x1eec>
   131f8:	ldr	r0, [r4, #28]
   131fc:	ldr	r2, [pc, #264]	; 1330c <__errno_location@plt+0x1f54>
   13200:	cmn	r6, #3
   13204:	add	r2, pc, r2
   13208:	bne	132b8 <__errno_location@plt+0x1f00>
   1320c:	mov	r1, #1
   13210:	mov	r3, r4
   13214:	bl	11130 <rb_setselect@plt>
   13218:	ldr	r0, [r4, #28]
   1321c:	mov	r1, #2
   13220:	mov	r2, #0
   13224:	mov	r3, #0
   13228:	bl	11130 <rb_setselect@plt>
   1322c:	ldrb	r0, [r4, #72]	; 0x48
   13230:	orr	r0, r0, #16
   13234:	strb	r0, [r4, #72]	; 0x48
   13238:	b	132c4 <__errno_location@plt+0x1f0c>
   1323c:	ldr	r2, [pc, #188]	; 13300 <__errno_location@plt+0x1f48>
   13240:	ldr	r3, [pc, #188]	; 13304 <__errno_location@plt+0x1f4c>
   13244:	mov	r0, r4
   13248:	mov	r1, #1
   1324c:	add	r2, pc, r2
   13250:	add	r3, pc, r3
   13254:	bl	12804 <__errno_location@plt+0x144c>
   13258:	bl	113b8 <__errno_location@plt>
   1325c:	mov	r5, r0
   13260:	ldr	r0, [r5]
   13264:	bl	110c4 <strerror@plt>
   13268:	b	13288 <__errno_location@plt+0x1ed0>
   1326c:	cmn	r6, #2
   13270:	bne	13260 <__errno_location@plt+0x1ea8>
   13274:	ldrb	r0, [r4, #72]	; 0x48
   13278:	ands	r0, r0, #1
   1327c:	beq	13260 <__errno_location@plt+0x1ea8>
   13280:	ldr	r0, [r4, #28]
   13284:	bl	112a4 <rb_get_ssl_strerror@plt>
   13288:	ldr	r2, [pc, #120]	; 13308 <__errno_location@plt+0x1f50>
   1328c:	mov	r3, r0
   13290:	mov	r0, r4
   13294:	mov	r1, #1
   13298:	add	r2, pc, r2
   1329c:	pop	{r4, r5, r6, r7, fp, lr}
   132a0:	b	12804 <__errno_location@plt+0x144c>
   132a4:	ldr	r0, [r4, #28]
   132a8:	mov	r1, #2
   132ac:	mov	r2, #0
   132b0:	mov	r3, #0
   132b4:	b	132c0 <__errno_location@plt+0x1f08>
   132b8:	mov	r1, #2
   132bc:	mov	r3, r4
   132c0:	bl	11130 <rb_setselect@plt>
   132c4:	ldrb	r0, [r4, #72]	; 0x48
   132c8:	tst	r0, #4
   132cc:	popeq	{r4, r5, r6, r7, fp, pc}
   132d0:	ldr	r0, [r4, #16]
   132d4:	bl	1128c <rb_rawbuf_length@plt>
   132d8:	cmp	r0, #0
   132dc:	beq	132e4 <__errno_location@plt+0x1f2c>
   132e0:	pop	{r4, r5, r6, r7, fp, pc}
   132e4:	ldrb	r0, [r4, #72]	; 0x48
   132e8:	mov	r1, r4
   132ec:	and	r0, r0, #251	; 0xfb
   132f0:	strb	r0, [r4, #72]	; 0x48
   132f4:	ldr	r0, [r4, #32]
   132f8:	pop	{r4, r5, r6, r7, fp, lr}
   132fc:	b	12ff8 <__errno_location@plt+0x1c40>
   13300:			; <UNDEFINED> instruction: 0x000006bf
   13304:	andeq	r0, r0, r3, asr r6
   13308:	strdeq	r0, [r0], -fp
   1330c:			; <UNDEFINED> instruction: 0xffffff34
   13310:	push	{r4, r5, r6, sl, fp, lr}
   13314:	add	fp, sp, #16
   13318:	mov	r5, r0
   1331c:	ldrb	r0, [r1, #72]	; 0x48
   13320:	tst	r0, #8
   13324:	popne	{r4, r5, r6, sl, fp, pc}
   13328:	ldr	r0, [r1, #20]
   1332c:	mov	r4, r1
   13330:	mov	r1, r5
   13334:	bl	11394 <rb_rawbuf_flush@plt>
   13338:	cmp	r0, #1
   1333c:	blt	13368 <__errno_location@plt+0x1fb0>
   13340:	add	r6, r4, #64	; 0x40
   13344:	ldrd	r2, [r6]
   13348:	mov	r1, r5
   1334c:	adds	r2, r2, r0
   13350:	adc	r3, r3, r0, asr #31
   13354:	strd	r2, [r6]
   13358:	ldr	r0, [r4, #20]
   1335c:	bl	11394 <rb_rawbuf_flush@plt>
   13360:	cmp	r0, #0
   13364:	bgt	13344 <__errno_location@plt+0x1f8c>
   13368:	cmp	r0, #0
   1336c:	beq	133b4 <__errno_location@plt+0x1ffc>
   13370:	bl	113b8 <__errno_location@plt>
   13374:	ldr	r0, [r0]
   13378:	bl	11100 <rb_ignore_errno@plt>
   1337c:	cmp	r0, #0
   13380:	beq	133b4 <__errno_location@plt+0x1ffc>
   13384:	ldr	r0, [r4, #20]
   13388:	bl	1128c <rb_rawbuf_length@plt>
   1338c:	mov	r1, r0
   13390:	ldr	r0, [r4, #32]
   13394:	cmp	r1, #1
   13398:	blt	133c8 <__errno_location@plt+0x2010>
   1339c:	ldr	r2, [pc, #56]	; 133dc <__errno_location@plt+0x2024>
   133a0:	mov	r1, #2
   133a4:	mov	r3, r4
   133a8:	add	r2, pc, r2
   133ac:	pop	{r4, r5, r6, sl, fp, lr}
   133b0:	b	11130 <rb_setselect@plt>
   133b4:	mov	r0, r4
   133b8:	mov	r1, #0
   133bc:	mov	r2, #0
   133c0:	pop	{r4, r5, r6, sl, fp, lr}
   133c4:	b	12804 <__errno_location@plt+0x144c>
   133c8:	mov	r1, #2
   133cc:	mov	r2, #0
   133d0:	mov	r3, #0
   133d4:	pop	{r4, r5, r6, sl, fp, lr}
   133d8:	b	11130 <rb_setselect@plt>
   133dc:			; <UNDEFINED> instruction: 0xffffff60
   133e0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   133e4:	add	fp, sp, #24
   133e8:	sub	sp, sp, #16384	; 0x4000
   133ec:	mov	r4, r0
   133f0:	ldr	r0, [r0, #76]	; 0x4c
   133f4:	mov	r6, sp
   133f8:	mov	r5, #16384	; 0x4000
   133fc:	cmp	r2, #0
   13400:	str	r6, [r0, #12]
   13404:	str	r5, [r0, #16]
   13408:	stm	r0, {r1, r2}
   1340c:	beq	134dc <__errno_location@plt+0x2124>
   13410:	mov	r8, r1
   13414:	b	13428 <__errno_location@plt+0x2070>
   13418:	cmp	r1, #0
   1341c:	str	r6, [r0, #12]
   13420:	str	r5, [r0, #16]
   13424:	beq	134dc <__errno_location@plt+0x2124>
   13428:	mov	r1, #0
   1342c:	bl	111d8 <inflate@plt>
   13430:	cmp	r0, #0
   13434:	bne	13474 <__errno_location@plt+0x20bc>
   13438:	ldr	r0, [r4, #76]	; 0x4c
   1343c:	ldr	r2, [r0, #16]
   13440:	ldr	r1, [r0, #4]
   13444:	rsb	r2, r2, #16384	; 0x4000
   13448:	cmp	r1, #0
   1344c:	beq	134bc <__errno_location@plt+0x2104>
   13450:	ldrb	r3, [r4, #72]	; 0x48
   13454:	tst	r3, #8
   13458:	bne	13418 <__errno_location@plt+0x2060>
   1345c:	ldr	r0, [r4, #20]
   13460:	mov	r1, r6
   13464:	bl	11388 <rb_rawbuf_append@plt>
   13468:	ldr	r0, [r4, #76]	; 0x4c
   1346c:	ldr	r1, [r0, #4]
   13470:	b	13418 <__errno_location@plt+0x2060>
   13474:	mov	r7, r0
   13478:	ldr	r0, [pc, #128]	; 13500 <__errno_location@plt+0x2148>
   1347c:	mov	r1, r8
   13480:	mov	r2, #6
   13484:	add	r0, pc, r0
   13488:	bl	11370 <strncmp@plt>
   1348c:	cmp	r0, #0
   13490:	beq	134e4 <__errno_location@plt+0x212c>
   13494:	mov	r0, r7
   13498:	bl	110dc <zError@plt>
   1349c:	ldr	r2, [pc, #100]	; 13508 <__errno_location@plt+0x2150>
   134a0:	mov	r3, r0
   134a4:	mov	r0, r4
   134a8:	mov	r1, #1
   134ac:	add	r2, pc, r2
   134b0:	bl	12804 <__errno_location@plt+0x144c>
   134b4:	sub	sp, fp, #24
   134b8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   134bc:	cmp	r2, #0
   134c0:	beq	134dc <__errno_location@plt+0x2124>
   134c4:	ldrb	r0, [r4, #72]	; 0x48
   134c8:	tst	r0, #8
   134cc:	bne	134dc <__errno_location@plt+0x2124>
   134d0:	ldr	r0, [r4, #20]
   134d4:	mov	r1, sp
   134d8:	bl	11388 <rb_rawbuf_append@plt>
   134dc:	sub	sp, fp, #24
   134e0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   134e4:	ldr	r2, [pc, #24]	; 13504 <__errno_location@plt+0x214c>
   134e8:	mov	r0, r4
   134ec:	mov	r1, #1
   134f0:	add	r2, pc, r2
   134f4:	bl	12804 <__errno_location@plt+0x144c>
   134f8:	sub	sp, fp, #24
   134fc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13500:	andeq	r0, r0, r1, asr #8
   13504:	ldrdeq	r0, [r0], -ip
   13508:	andeq	r0, r0, ip, lsr r4
   1350c:	push	{r4, r5, r6, r7, fp, lr}
   13510:	add	fp, sp, #16
   13514:	sub	sp, sp, #16384	; 0x4000
   13518:	ldr	r5, [r0, #76]	; 0x4c
   1351c:	mov	r4, r0
   13520:	mov	r3, sp
   13524:	mov	r0, #16384	; 0x4000
   13528:	str	r3, [r5, #68]	; 0x44
   1352c:	str	r0, [r5, #72]	; 0x48
   13530:	mov	r0, r5
   13534:	str	r2, [r5, #60]	; 0x3c
   13538:	str	r1, [r0, #56]!	; 0x38
   1353c:	mov	r1, #2
   13540:	bl	11184 <deflate@plt>
   13544:	cmp	r0, #0
   13548:	beq	13570 <__errno_location@plt+0x21b8>
   1354c:	bl	110dc <zError@plt>
   13550:	ldr	r2, [pc, #124]	; 135d4 <__errno_location@plt+0x221c>
   13554:	mov	r3, r0
   13558:	mov	r0, r4
   1355c:	mov	r1, #1
   13560:	add	r2, pc, r2
   13564:	bl	12804 <__errno_location@plt+0x144c>
   13568:	sub	sp, fp, #16
   1356c:	pop	{r4, r5, r6, r7, fp, pc}
   13570:	ldr	r1, [r5, #72]	; 0x48
   13574:	cmp	r1, #0
   13578:	beq	13594 <__errno_location@plt+0x21dc>
   1357c:	ldr	r0, [r5, #60]	; 0x3c
   13580:	cmp	r0, #0
   13584:	beq	135b0 <__errno_location@plt+0x21f8>
   13588:	ldr	r2, [pc, #76]	; 135dc <__errno_location@plt+0x2224>
   1358c:	add	r2, pc, r2
   13590:	b	1359c <__errno_location@plt+0x21e4>
   13594:	ldr	r2, [pc, #60]	; 135d8 <__errno_location@plt+0x2220>
   13598:	add	r2, pc, r2
   1359c:	mov	r0, r4
   135a0:	mov	r1, #1
   135a4:	bl	12804 <__errno_location@plt+0x144c>
   135a8:	sub	sp, fp, #16
   135ac:	pop	{r4, r5, r6, r7, fp, pc}
   135b0:	ldrb	r0, [r4, #72]	; 0x48
   135b4:	tst	r0, #8
   135b8:	bne	135cc <__errno_location@plt+0x2214>
   135bc:	ldr	r0, [r4, #16]
   135c0:	rsb	r2, r1, #16384	; 0x4000
   135c4:	mov	r1, sp
   135c8:	bl	11388 <rb_rawbuf_append@plt>
   135cc:	sub	sp, fp, #16
   135d0:	pop	{r4, r5, r6, r7, fp, pc}
   135d4:	muleq	r0, fp, r3
   135d8:	andeq	r0, r0, r6, ror r3
   135dc:	andeq	r0, r0, r9, lsr #7
   135e0:	push	{r4, sl, fp, lr}
   135e4:	add	fp, sp, #8
   135e8:	sub	sp, sp, #80	; 0x50
   135ec:	mov	r4, r2
   135f0:	cmp	r1, #6
   135f4:	beq	136a4 <__errno_location@plt+0x22ec>
   135f8:	cmp	r1, #3
   135fc:	beq	136cc <__errno_location@plt+0x2314>
   13600:	cmp	r1, #0
   13604:	bne	136d8 <__errno_location@plt+0x2320>
   13608:	mov	r0, r4
   1360c:	bl	12da0 <__errno_location@plt+0x19e8>
   13610:	ldr	r0, [r4, #28]
   13614:	ldr	r2, [pc, #216]	; 136f4 <__errno_location@plt+0x233c>
   13618:	add	r1, sp, #3
   1361c:	add	r1, r1, #13
   13620:	ldr	r2, [pc, r2]
   13624:	bl	111cc <rb_get_ssl_certfp@plt>
   13628:	cmp	r0, #0
   1362c:	beq	13664 <__errno_location@plt+0x22ac>
   13630:	mov	r1, #70	; 0x46
   13634:	strb	r1, [sp, #3]
   13638:	ldr	r1, [r4, #24]
   1363c:	str	r0, [sp, #12]
   13640:	ldr	r2, [pc, #176]	; 136f8 <__errno_location@plt+0x2340>
   13644:	ldr	r2, [pc, r2]
   13648:	str	r2, [sp, #8]
   1364c:	str	r1, [sp, #4]
   13650:	add	r2, r0, #13
   13654:	add	r1, sp, #3
   13658:	ldr	r3, [r4, #12]
   1365c:	mov	r0, r3
   13660:	bl	12ac8 <__errno_location@plt+0x1710>
   13664:	mov	r0, #79	; 0x4f
   13668:	add	r1, sp, #3
   1366c:	mov	r2, #5
   13670:	strb	r0, [sp, #3]
   13674:	ldr	r0, [r4, #24]
   13678:	str	r0, [sp, #4]
   1367c:	ldr	r0, [r4, #12]
   13680:	bl	12ac8 <__errno_location@plt+0x1710>
   13684:	ldr	r0, [r4, #28]
   13688:	mov	r1, r4
   1368c:	bl	12e24 <__errno_location@plt+0x1a6c>
   13690:	ldr	r0, [r4, #32]
   13694:	mov	r1, r4
   13698:	bl	12ff8 <__errno_location@plt+0x1c40>
   1369c:	sub	sp, fp, #8
   136a0:	pop	{r4, sl, fp, pc}
   136a4:	ldr	r0, [r4, #28]
   136a8:	bl	112a4 <rb_get_ssl_strerror@plt>
   136ac:	ldr	r2, [pc, #76]	; 13700 <__errno_location@plt+0x2348>
   136b0:	mov	r3, r0
   136b4:	mov	r0, r4
   136b8:	mov	r1, #1
   136bc:	add	r2, pc, r2
   136c0:	sub	sp, fp, #8
   136c4:	pop	{r4, sl, fp, lr}
   136c8:	b	12804 <__errno_location@plt+0x144c>
   136cc:	ldr	r2, [pc, #40]	; 136fc <__errno_location@plt+0x2344>
   136d0:	add	r2, pc, r2
   136d4:	b	136e0 <__errno_location@plt+0x2328>
   136d8:	ldr	r2, [pc, #36]	; 13704 <__errno_location@plt+0x234c>
   136dc:	add	r2, pc, r2
   136e0:	mov	r0, r4
   136e4:	mov	r1, #1
   136e8:	sub	sp, fp, #8
   136ec:	pop	{r4, sl, fp, lr}
   136f0:	b	12804 <__errno_location@plt+0x144c>
   136f4:	ldrdeq	r6, [r1], -r8
   136f8:			; <UNDEFINED> instruction: 0x000168b4
   136fc:	andeq	r0, r0, fp, lsl #5
   13700:	andeq	r0, r0, pc, asr #4
   13704:	muleq	r0, r7, r2
   13708:	push	{fp, lr}
   1370c:	mov	fp, sp
   13710:	mul	r1, r2, r1
   13714:	mov	r0, #1
   13718:	bl	1119c <calloc@plt>
   1371c:	cmp	r0, #0
   13720:	popne	{fp, pc}
   13724:	bl	112d4 <rb_outofmemory@plt>
   13728:	cmp	r1, #0
   1372c:	bxeq	lr
   13730:	mov	r0, r1
   13734:	b	111f0 <free@plt>
   13738:	bx	lr
   1373c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13740:	mov	r7, r0
   13744:	ldr	r6, [pc, #72]	; 13794 <__errno_location@plt+0x23dc>
   13748:	ldr	r5, [pc, #72]	; 13798 <__errno_location@plt+0x23e0>
   1374c:	add	r6, pc, r6
   13750:	add	r5, pc, r5
   13754:	sub	r6, r6, r5
   13758:	mov	r8, r1
   1375c:	mov	r9, r2
   13760:	bl	1108c <open@plt-0x20>
   13764:	asrs	r6, r6, #2
   13768:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1376c:	mov	r4, #0
   13770:	add	r4, r4, #1
   13774:	ldr	r3, [r5], #4
   13778:	mov	r2, r9
   1377c:	mov	r1, r8
   13780:	mov	r0, r7
   13784:	blx	r3
   13788:	cmp	r6, r4
   1378c:	bne	13770 <__errno_location@plt+0x23b8>
   13790:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13794:	muleq	r1, r8, r7
   13798:	muleq	r1, r0, r7
   1379c:	bx	lr

Disassembly of section .fini:

000137a0 <.fini>:
   137a0:	push	{r3, lr}
   137a4:	pop	{r3, pc}
