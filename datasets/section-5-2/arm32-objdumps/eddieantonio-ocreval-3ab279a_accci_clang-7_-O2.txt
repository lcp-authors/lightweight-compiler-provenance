
../repos/eddieantonio-ocreval-3ab279a/accci/accci:     file format elf32-littlearm


Disassembly of section .init:

00010a2c <.init>:
   10a2c:	push	{r3, lr}
   10a30:	bl	10c14 <getc@plt+0x48>
   10a34:	pop	{r3, pc}

Disassembly of section .plt:

00010a38 <calloc@plt-0x14>:
   10a38:	push	{lr}		; (str lr, [sp, #-4]!)
   10a3c:	ldr	lr, [pc, #4]	; 10a48 <calloc@plt-0x4>
   10a40:	add	lr, pc, lr
   10a44:	ldr	pc, [lr, #8]!
   10a48:			; <UNDEFINED> instruction: 0x000145b8

00010a4c <calloc@plt>:
   10a4c:	add	ip, pc, #0, 12
   10a50:	add	ip, ip, #20, 20	; 0x14000
   10a54:	ldr	pc, [ip, #1464]!	; 0x5b8

00010a58 <strcmp@plt>:
   10a58:	add	ip, pc, #0, 12
   10a5c:	add	ip, ip, #20, 20	; 0x14000
   10a60:	ldr	pc, [ip, #1456]!	; 0x5b0

00010a64 <printf@plt>:
   10a64:	add	ip, pc, #0, 12
   10a68:	add	ip, ip, #20, 20	; 0x14000
   10a6c:	ldr	pc, [ip, #1448]!	; 0x5a8

00010a70 <fopen@plt>:
   10a70:	add	ip, pc, #0, 12
   10a74:	add	ip, ip, #20, 20	; 0x14000
   10a78:	ldr	pc, [ip, #1440]!	; 0x5a0

00010a7c <free@plt>:
   10a7c:	add	ip, pc, #0, 12
   10a80:	add	ip, ip, #20, 20	; 0x14000
   10a84:	ldr	pc, [ip, #1432]!	; 0x598

00010a88 <utf8proc_get_property@plt>:
   10a88:	add	ip, pc, #0, 12
   10a8c:	add	ip, ip, #20, 20	; 0x14000
   10a90:	ldr	pc, [ip, #1424]!	; 0x590

00010a94 <fgets@plt>:
   10a94:	add	ip, pc, #0, 12
   10a98:	add	ip, ip, #20, 20	; 0x14000
   10a9c:	ldr	pc, [ip, #1416]!	; 0x588

00010aa0 <utf8proc_encode_char@plt>:
   10aa0:	add	ip, pc, #0, 12
   10aa4:	add	ip, ip, #20, 20	; 0x14000
   10aa8:	ldr	pc, [ip, #1408]!	; 0x580

00010aac <strdup@plt>:
   10aac:	add	ip, pc, #0, 12
   10ab0:	add	ip, ip, #20, 20	; 0x14000
   10ab4:	ldr	pc, [ip, #1400]!	; 0x578

00010ab8 <rewind@plt>:
   10ab8:	add	ip, pc, #0, 12
   10abc:	add	ip, ip, #20, 20	; 0x14000
   10ac0:	ldr	pc, [ip, #1392]!	; 0x570

00010ac4 <unlink@plt>:
   10ac4:	add	ip, pc, #0, 12
   10ac8:	add	ip, ip, #20, 20	; 0x14000
   10acc:	ldr	pc, [ip, #1384]!	; 0x568

00010ad0 <utf8proc_tolower@plt>:
   10ad0:	add	ip, pc, #0, 12
   10ad4:	add	ip, ip, #20, 20	; 0x14000
   10ad8:	ldr	pc, [ip, #1376]!	; 0x560

00010adc <__xstat@plt>:
   10adc:	add	ip, pc, #0, 12
   10ae0:	add	ip, ip, #20, 20	; 0x14000
   10ae4:	ldr	pc, [ip, #1368]!	; 0x558

00010ae8 <fwrite@plt>:
   10ae8:	add	ip, pc, #0, 12
   10aec:	add	ip, ip, #20, 20	; 0x14000
   10af0:	ldr	pc, [ip, #1360]!	; 0x550

00010af4 <fread@plt>:
   10af4:	add	ip, pc, #0, 12
   10af8:	add	ip, ip, #20, 20	; 0x14000
   10afc:	ldr	pc, [ip, #1352]!	; 0x548

00010b00 <utf8proc_iterate@plt>:
   10b00:	add	ip, pc, #0, 12
   10b04:	add	ip, ip, #20, 20	; 0x14000
   10b08:	ldr	pc, [ip, #1344]!	; 0x540

00010b0c <__libc_start_main@plt>:
   10b0c:	add	ip, pc, #0, 12
   10b10:	add	ip, ip, #20, 20	; 0x14000
   10b14:	ldr	pc, [ip, #1336]!	; 0x538

00010b18 <__sysv_signal@plt>:
   10b18:	add	ip, pc, #0, 12
   10b1c:	add	ip, ip, #20, 20	; 0x14000
   10b20:	ldr	pc, [ip, #1328]!	; 0x530

00010b24 <__gmon_start__@plt>:
   10b24:	add	ip, pc, #0, 12
   10b28:	add	ip, ip, #20, 20	; 0x14000
   10b2c:	ldr	pc, [ip, #1320]!	; 0x528

00010b30 <getpid@plt>:
   10b30:	add	ip, pc, #0, 12
   10b34:	add	ip, ip, #20, 20	; 0x14000
   10b38:	ldr	pc, [ip, #1312]!	; 0x520

00010b3c <exit@plt>:
   10b3c:	add	ip, pc, #0, 12
   10b40:	add	ip, ip, #20, 20	; 0x14000
   10b44:	ldr	pc, [ip, #1304]!	; 0x518

00010b48 <utf8proc_category@plt>:
   10b48:	add	ip, pc, #0, 12
   10b4c:	add	ip, ip, #20, 20	; 0x14000
   10b50:	ldr	pc, [ip, #1296]!	; 0x510

00010b54 <strlen@plt>:
   10b54:	add	ip, pc, #0, 12
   10b58:	add	ip, ip, #20, 20	; 0x14000
   10b5c:	ldr	pc, [ip, #1288]!	; 0x508

00010b60 <fprintf@plt>:
   10b60:	add	ip, pc, #0, 12
   10b64:	add	ip, ip, #20, 20	; 0x14000
   10b68:	ldr	pc, [ip, #1280]!	; 0x500

00010b6c <sqrt@plt>:
   10b6c:	add	ip, pc, #0, 12
   10b70:	add	ip, ip, #20, 20	; 0x14000
   10b74:	ldr	pc, [ip, #1272]!	; 0x4f8

00010b78 <__isoc99_sscanf@plt>:
   10b78:	add	ip, pc, #0, 12
   10b7c:	add	ip, ip, #20, 20	; 0x14000
   10b80:	ldr	pc, [ip, #1264]!	; 0x4f0

00010b84 <fclose@plt>:
   10b84:	add	ip, pc, #0, 12
   10b88:	add	ip, ip, #20, 20	; 0x14000
   10b8c:	ldr	pc, [ip, #1256]!	; 0x4e8

00010b90 <sprintf@plt>:
   10b90:	add	ip, pc, #0, 12
   10b94:	add	ip, ip, #20, 20	; 0x14000
   10b98:	ldr	pc, [ip, #1248]!	; 0x4e0

00010b9c <utf8proc_errmsg@plt>:
   10b9c:	add	ip, pc, #0, 12
   10ba0:	add	ip, ip, #20, 20	; 0x14000
   10ba4:	ldr	pc, [ip, #1240]!	; 0x4d8

00010ba8 <fputs@plt>:
   10ba8:	add	ip, pc, #0, 12
   10bac:	add	ip, ip, #20, 20	; 0x14000
   10bb0:	ldr	pc, [ip, #1232]!	; 0x4d0

00010bb4 <strncmp@plt>:
   10bb4:	add	ip, pc, #0, 12
   10bb8:	add	ip, ip, #20, 20	; 0x14000
   10bbc:	ldr	pc, [ip, #1224]!	; 0x4c8

00010bc0 <abort@plt>:
   10bc0:	add	ip, pc, #0, 12
   10bc4:	add	ip, ip, #20, 20	; 0x14000
   10bc8:	ldr	pc, [ip, #1216]!	; 0x4c0

00010bcc <getc@plt>:
   10bcc:	add	ip, pc, #0, 12
   10bd0:	add	ip, ip, #20, 20	; 0x14000
   10bd4:	ldr	pc, [ip, #1208]!	; 0x4b8

Disassembly of section .text:

00010bd8 <error@@Base-0x205c>:
   10bd8:	mov	fp, #0
   10bdc:	mov	lr, #0
   10be0:	pop	{r1}		; (ldr r1, [sp], #4)
   10be4:	mov	r2, sp
   10be8:	push	{r2}		; (str r2, [sp, #-4]!)
   10bec:	push	{r0}		; (str r0, [sp, #-4]!)
   10bf0:	ldr	ip, [pc, #16]	; 10c08 <getc@plt+0x3c>
   10bf4:	push	{ip}		; (str ip, [sp, #-4]!)
   10bf8:	ldr	r0, [pc, #12]	; 10c0c <getc@plt+0x40>
   10bfc:	ldr	r3, [pc, #12]	; 10c10 <getc@plt+0x44>
   10c00:	bl	10b0c <__libc_start_main@plt>
   10c04:	bl	10bc0 <abort@plt>
   10c08:	andeq	r3, r1, r8, ror #15
   10c0c:	strdeq	r0, [r1], -r8
   10c10:	andeq	r3, r1, r8, lsl #15
   10c14:	ldr	r3, [pc, #20]	; 10c30 <getc@plt+0x64>
   10c18:	ldr	r2, [pc, #20]	; 10c34 <getc@plt+0x68>
   10c1c:	add	r3, pc, r3
   10c20:	ldr	r2, [r3, r2]
   10c24:	cmp	r2, #0
   10c28:	bxeq	lr
   10c2c:	b	10b24 <__gmon_start__@plt>
   10c30:	ldrdeq	r4, [r1], -ip
   10c34:	andeq	r0, r0, r0, lsr #1
   10c38:	ldr	r0, [pc, #24]	; 10c58 <getc@plt+0x8c>
   10c3c:	ldr	r3, [pc, #24]	; 10c5c <getc@plt+0x90>
   10c40:	cmp	r3, r0
   10c44:	bxeq	lr
   10c48:	ldr	r3, [pc, #16]	; 10c60 <getc@plt+0x94>
   10c4c:	cmp	r3, #0
   10c50:	bxeq	lr
   10c54:	bx	r3
   10c58:	ldrdeq	r5, [r2], -r0
   10c5c:	ldrdeq	r5, [r2], -r0
   10c60:	andeq	r0, r0, r0
   10c64:	ldr	r0, [pc, #36]	; 10c90 <getc@plt+0xc4>
   10c68:	ldr	r1, [pc, #36]	; 10c94 <getc@plt+0xc8>
   10c6c:	sub	r1, r1, r0
   10c70:	asr	r1, r1, #2
   10c74:	add	r1, r1, r1, lsr #31
   10c78:	asrs	r1, r1, #1
   10c7c:	bxeq	lr
   10c80:	ldr	r3, [pc, #16]	; 10c98 <getc@plt+0xcc>
   10c84:	cmp	r3, #0
   10c88:	bxeq	lr
   10c8c:	bx	r3
   10c90:	ldrdeq	r5, [r2], -r0
   10c94:	ldrdeq	r5, [r2], -r0
   10c98:	andeq	r0, r0, r0
   10c9c:	push	{r4, lr}
   10ca0:	ldr	r4, [pc, #24]	; 10cc0 <getc@plt+0xf4>
   10ca4:	ldrb	r3, [r4]
   10ca8:	cmp	r3, #0
   10cac:	popne	{r4, pc}
   10cb0:	bl	10c38 <getc@plt+0x6c>
   10cb4:	mov	r3, #1
   10cb8:	strb	r3, [r4]
   10cbc:	pop	{r4, pc}
   10cc0:	ldrdeq	r5, [r2], -r0
   10cc4:	b	10c64 <getc@plt+0x98>
   10cc8:	push	{r4, r5, r6, sl, fp, lr}
   10ccc:	add	fp, sp, #16
   10cd0:	ldr	r4, [pc, #44]	; 10d04 <getc@plt+0x138>
   10cd4:	mov	r1, r0
   10cd8:	ldr	r4, [pc, r4]
   10cdc:	ldm	r4, {r5, r6}
   10ce0:	mov	r0, r4
   10ce4:	bl	10f94 <getc@plt+0x3c8>
   10ce8:	ldm	r4, {r0, r2}
   10cec:	sub	r1, r0, r5
   10cf0:	ldr	r0, [pc, #16]	; 10d08 <getc@plt+0x13c>
   10cf4:	sub	r2, r2, r6
   10cf8:	ldr	r0, [pc, r0]
   10cfc:	pop	{r4, r5, r6, sl, fp, lr}
   10d00:	b	11f48 <getc@plt+0x137c>
   10d04:			; <UNDEFINED> instruction: 0x000143b4
   10d08:	andeq	r4, r1, r8, lsr #7
   10d0c:	nop	{0}
   10d10:	push	{r4, sl, fp, lr}
   10d14:	add	fp, sp, #8
   10d18:	sub	sp, sp, #32
   10d1c:	ldr	r4, [pc, #180]	; 10dd8 <getc@plt+0x20c>
   10d20:	sub	r1, fp, #16
   10d24:	add	r2, sp, #16
   10d28:	ldr	r4, [pc, r4]
   10d2c:	mov	r0, r4
   10d30:	bl	11f98 <getc@plt+0x13cc>
   10d34:	ldr	r1, [r4, #12]
   10d38:	ldr	r0, [pc, #156]	; 10ddc <getc@plt+0x210>
   10d3c:	add	r0, pc, r0
   10d40:	bl	10a64 <printf@plt>
   10d44:	ldr	r4, [pc, #148]	; 10de0 <getc@plt+0x214>
   10d48:	ldr	r4, [pc, r4]
   10d4c:	ldr	r1, [r4]
   10d50:	ldr	r0, [pc, #140]	; 10de4 <getc@plt+0x218>
   10d54:	add	r0, pc, r0
   10d58:	bl	10a64 <printf@plt>
   10d5c:	ldr	r1, [r4, #4]
   10d60:	ldr	r0, [pc, #128]	; 10de8 <getc@plt+0x21c>
   10d64:	add	r0, pc, r0
   10d68:	bl	10a64 <printf@plt>
   10d6c:	ldm	r4, {r0, r1}
   10d70:	vldr	d16, [pc, #88]	; 10dd0 <getc@plt+0x204>
   10d74:	sub	r1, r0, r1
   10d78:	vmov	s2, r0
   10d7c:	vmov	s0, r1
   10d80:	vcvt.f64.s32	d17, s0
   10d84:	vcvt.f64.s32	d18, s2
   10d88:	ldr	r0, [pc, #92]	; 10dec <getc@plt+0x220>
   10d8c:	vmul.f64	d16, d17, d16
   10d90:	vdiv.f64	d16, d16, d18
   10d94:	vmov	r2, r3, d16
   10d98:	add	r0, pc, r0
   10d9c:	bl	10a64 <printf@plt>
   10da0:	vldr	d16, [fp, #-16]
   10da4:	vldr	d17, [sp, #16]
   10da8:	ldr	r0, [pc, #64]	; 10df0 <getc@plt+0x224>
   10dac:	add	r0, pc, r0
   10db0:	vstr	d17, [sp]
   10db4:	vmov	r2, r3, d16
   10db8:	str	r0, [sp, #8]
   10dbc:	ldr	r0, [pc, #48]	; 10df4 <getc@plt+0x228>
   10dc0:	add	r0, pc, r0
   10dc4:	bl	10a64 <printf@plt>
   10dc8:	sub	sp, fp, #8
   10dcc:	pop	{r4, sl, fp, pc}
   10dd0:	andeq	r0, r0, r0
   10dd4:	subsmi	r0, r9, r0
   10dd8:	andeq	r4, r1, r8, ror r3
   10ddc:			; <UNDEFINED> instruction: 0x00002ab4
   10de0:	andeq	r4, r1, r4, asr #6
   10de4:			; <UNDEFINED> instruction: 0x00002ab2
   10de8:			; <UNDEFINED> instruction: 0x00002ab6
   10dec:	muleq	r0, r2, sl
   10df0:	andeq	r2, r0, r7, lsr #21
   10df4:	andeq	r2, r0, lr, ror sl
   10df8:	push	{fp, lr}
   10dfc:	mov	fp, sp
   10e00:	sub	sp, sp, #8
   10e04:	str	r0, [sp, #4]
   10e08:	add	r0, sp, #4
   10e0c:	mov	r3, #0
   10e10:	mov	r9, r1
   10e14:	mov	r7, #0
   10e18:	ldr	r2, [pc, #108]	; 10e8c <getc@plt+0x2c0>
   10e1c:	add	r2, pc, r2
   10e20:	bl	129ac <getc@plt+0x1de0>
   10e24:	ldr	r0, [sp, #4]
   10e28:	cmp	r0, #2
   10e2c:	blt	10e80 <getc@plt+0x2b4>
   10e30:	ldr	r5, [pc, #88]	; 10e90 <getc@plt+0x2c4>
   10e34:	ldr	r5, [pc, r5]
   10e38:	ldr	r8, [pc, #84]	; 10e94 <getc@plt+0x2c8>
   10e3c:	ldr	r8, [pc, r8]
   10e40:	ldr	r1, [r9, r7, lsl #2]
   10e44:	ldr	r6, [r5]
   10e48:	ldr	r4, [r5, #4]
   10e4c:	mov	r0, r5
   10e50:	bl	10f94 <getc@plt+0x3c8>
   10e54:	ldm	r5, {r0, r2}
   10e58:	sub	r1, r0, r6
   10e5c:	sub	r2, r2, r4
   10e60:	mov	r0, r8
   10e64:	bl	11f48 <getc@plt+0x137c>
   10e68:	ldr	r0, [sp, #4]
   10e6c:	add	r7, r7, #1
   10e70:	cmp	r7, r0
   10e74:	blt	10e40 <getc@plt+0x274>
   10e78:	bl	10d10 <getc@plt+0x144>
   10e7c:	bl	12bf0 <getc@plt+0x2024>
   10e80:	ldr	r0, [pc, #16]	; 10e98 <getc@plt+0x2cc>
   10e84:	add	r0, pc, r0
   10e88:	bl	12c34 <error@@Base>
   10e8c:	andeq	r2, r0, r8, ror #20
   10e90:	andeq	r4, r1, r8, asr r2
   10e94:	andeq	r4, r1, r4, ror #4
   10e98:	andeq	r2, r0, r2, lsr sl
   10e9c:	andeq	r0, r0, r0
   10ea0:	push	{r4, r5, r6, r7, fp, lr}
   10ea4:	add	fp, sp, #16
   10ea8:	mov	r7, r0
   10eac:	mov	r0, r1
   10eb0:	mov	r4, r3
   10eb4:	mov	r5, r2
   10eb8:	mov	r6, r1
   10ebc:	bl	12448 <getc@plt+0x187c>
   10ec0:	add	r0, r7, r0, lsl #3
   10ec4:	ldr	r1, [r0, #68]	; 0x44
   10ec8:	ldr	r2, [r0, #72]	; 0x48
   10ecc:	add	r1, r1, r5
   10ed0:	add	r2, r2, r4
   10ed4:	str	r1, [r0, #68]	; 0x44
   10ed8:	str	r2, [r0, #72]	; 0x48
   10edc:	ldr	r0, [r7, #2116]	; 0x844
   10ee0:	ldr	r1, [r7, #2120]	; 0x848
   10ee4:	add	r0, r0, r5
   10ee8:	add	r1, r1, r4
   10eec:	str	r0, [r7, #2116]	; 0x844
   10ef0:	str	r1, [r7, #2120]	; 0x848
   10ef4:	add	r0, r7, r6, lsl #3
   10ef8:	movw	r1, #10180	; 0x27c4
   10efc:	ldr	r1, [r0, r1]!
   10f00:	add	r1, r1, r5
   10f04:	str	r1, [r0]
   10f08:	ldr	r1, [r0, #4]
   10f0c:	add	r1, r1, r4
   10f10:	str	r1, [r0, #4]
   10f14:	pop	{r4, r5, r6, r7, fp, pc}
   10f18:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   10f1c:	add	fp, sp, #24
   10f20:	mov	r7, r1
   10f24:	movw	r1, #2124	; 0x84c
   10f28:	mov	r8, r3
   10f2c:	mov	r5, r2
   10f30:	add	r6, r0, r1
   10f34:	mov	r1, r7
   10f38:	mov	r0, r6
   10f3c:	bl	121bc <getc@plt+0x15f0>
   10f40:	cmp	r0, #0
   10f44:	beq	10f64 <getc@plt+0x398>
   10f48:	ldr	r1, [r0, #12]
   10f4c:	ldr	r2, [r0, #16]
   10f50:	add	r1, r1, r5
   10f54:	add	r2, r2, r8
   10f58:	str	r1, [r0, #12]
   10f5c:	str	r2, [r0, #16]
   10f60:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   10f64:	mov	r0, #1
   10f68:	mov	r1, #20
   10f6c:	bl	12774 <getc@plt+0x1ba8>
   10f70:	mov	r4, r0
   10f74:	mov	r0, r7
   10f78:	bl	10aac <strdup@plt>
   10f7c:	add	r1, r4, #8
   10f80:	stm	r1, {r0, r5, r8}
   10f84:	mov	r0, r6
   10f88:	mov	r1, r4
   10f8c:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   10f90:	b	1224c <getc@plt+0x1680>
   10f94:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10f98:	add	fp, sp, #28
   10f9c:	sub	sp, sp, #76	; 0x4c
   10fa0:	bfc	sp, #0, #4
   10fa4:	mov	r8, r1
   10fa8:	ldr	r1, [pc, #1664]	; 11630 <getc@plt+0xa64>
   10fac:	mov	r4, r0
   10fb0:	mov	r0, r8
   10fb4:	add	r1, pc, r1
   10fb8:	bl	12814 <getc@plt+0x1c48>
   10fbc:	mov	r7, r0
   10fc0:	ldr	r0, [pc, #1644]	; 11634 <getc@plt+0xa68>
   10fc4:	mov	r1, #99	; 0x63
   10fc8:	mov	r2, r7
   10fcc:	add	r0, pc, r0
   10fd0:	bl	10a94 <fgets@plt>
   10fd4:	cmp	r0, #0
   10fd8:	beq	11614 <getc@plt+0xa48>
   10fdc:	ldr	r0, [pc, #1620]	; 11638 <getc@plt+0xa6c>
   10fe0:	ldr	r1, [pc, #1620]	; 1163c <getc@plt+0xa70>
   10fe4:	mov	r2, #40	; 0x28
   10fe8:	add	r0, pc, r0
   10fec:	add	r1, pc, r1
   10ff0:	bl	10bb4 <strncmp@plt>
   10ff4:	cmp	r0, #0
   10ff8:	bne	11614 <getc@plt+0xa48>
   10ffc:	ldr	r0, [pc, #1596]	; 11640 <getc@plt+0xa74>
   11000:	mov	r1, #99	; 0x63
   11004:	mov	r2, r7
   11008:	add	r0, pc, r0
   1100c:	bl	10a94 <fgets@plt>
   11010:	cmp	r0, #0
   11014:	beq	11614 <getc@plt+0xa48>
   11018:	ldr	r0, [pc, #1572]	; 11644 <getc@plt+0xa78>
   1101c:	ldr	r1, [pc, #1572]	; 11648 <getc@plt+0xa7c>
   11020:	add	r0, pc, r0
   11024:	add	r1, pc, r1
   11028:	bl	10a58 <strcmp@plt>
   1102c:	cmp	r0, #0
   11030:	bne	11614 <getc@plt+0xa48>
   11034:	ldr	r0, [pc, #1552]	; 1164c <getc@plt+0xa80>
   11038:	mov	r1, #99	; 0x63
   1103c:	mov	r2, r7
   11040:	add	r0, pc, r0
   11044:	bl	10a94 <fgets@plt>
   11048:	cmp	r0, #0
   1104c:	beq	11614 <getc@plt+0xa48>
   11050:	ldr	r0, [pc, #1528]	; 11650 <getc@plt+0xa84>
   11054:	ldr	r1, [pc, #1528]	; 11654 <getc@plt+0xa88>
   11058:	add	r2, sp, #44	; 0x2c
   1105c:	add	r0, pc, r0
   11060:	add	r1, pc, r1
   11064:	bl	10b78 <__isoc99_sscanf@plt>
   11068:	cmp	r0, #1
   1106c:	bne	11614 <getc@plt+0xa48>
   11070:	ldr	r0, [r4]
   11074:	ldr	r1, [sp, #44]	; 0x2c
   11078:	mov	r2, r7
   1107c:	add	r0, r0, r1
   11080:	mov	r1, #99	; 0x63
   11084:	str	r0, [r4]
   11088:	ldr	r0, [pc, #1480]	; 11658 <getc@plt+0xa8c>
   1108c:	add	r0, pc, r0
   11090:	bl	10a94 <fgets@plt>
   11094:	cmp	r0, #0
   11098:	beq	11614 <getc@plt+0xa48>
   1109c:	ldr	r0, [pc, #1464]	; 1165c <getc@plt+0xa90>
   110a0:	ldr	r1, [pc, #1464]	; 11660 <getc@plt+0xa94>
   110a4:	add	r2, sp, #40	; 0x28
   110a8:	add	r0, pc, r0
   110ac:	add	r1, pc, r1
   110b0:	bl	10b78 <__isoc99_sscanf@plt>
   110b4:	cmp	r0, #1
   110b8:	bne	11614 <getc@plt+0xa48>
   110bc:	ldr	r0, [r4, #4]
   110c0:	ldr	r1, [sp, #40]	; 0x28
   110c4:	mov	r2, r7
   110c8:	add	r0, r0, r1
   110cc:	mov	r1, #99	; 0x63
   110d0:	str	r0, [r4, #4]
   110d4:	ldr	r0, [pc, #1416]	; 11664 <getc@plt+0xa98>
   110d8:	add	r0, pc, r0
   110dc:	bl	10a94 <fgets@plt>
   110e0:	cmp	r0, #0
   110e4:	beq	11614 <getc@plt+0xa48>
   110e8:	ldr	r0, [pc, #1400]	; 11668 <getc@plt+0xa9c>
   110ec:	mov	r1, #99	; 0x63
   110f0:	mov	r2, r7
   110f4:	add	r0, pc, r0
   110f8:	bl	10a94 <fgets@plt>
   110fc:	cmp	r0, #0
   11100:	beq	11614 <getc@plt+0xa48>
   11104:	ldr	r0, [pc, #1376]	; 1166c <getc@plt+0xaa0>
   11108:	mov	r1, #99	; 0x63
   1110c:	mov	r2, r7
   11110:	add	r0, pc, r0
   11114:	bl	10a94 <fgets@plt>
   11118:	cmp	r0, #0
   1111c:	beq	11614 <getc@plt+0xa48>
   11120:	ldr	r0, [pc, #1352]	; 11670 <getc@plt+0xaa4>
   11124:	ldr	r1, [pc, #1352]	; 11674 <getc@plt+0xaa8>
   11128:	add	r2, sp, #36	; 0x24
   1112c:	add	r0, pc, r0
   11130:	add	r1, pc, r1
   11134:	bl	10b78 <__isoc99_sscanf@plt>
   11138:	cmp	r0, #1
   1113c:	bne	11614 <getc@plt+0xa48>
   11140:	ldr	r0, [r4, #8]
   11144:	ldr	r1, [sp, #36]	; 0x24
   11148:	mov	r2, r7
   1114c:	add	r0, r0, r1
   11150:	mov	r1, #99	; 0x63
   11154:	str	r0, [r4, #8]
   11158:	ldr	r0, [pc, #1304]	; 11678 <getc@plt+0xaac>
   1115c:	add	r0, pc, r0
   11160:	bl	10a94 <fgets@plt>
   11164:	cmp	r0, #0
   11168:	beq	11614 <getc@plt+0xa48>
   1116c:	ldr	r0, [pc, #1288]	; 1167c <getc@plt+0xab0>
   11170:	ldr	r1, [pc, #1288]	; 11680 <getc@plt+0xab4>
   11174:	add	r2, sp, #36	; 0x24
   11178:	add	r0, pc, r0
   1117c:	add	r1, pc, r1
   11180:	bl	10b78 <__isoc99_sscanf@plt>
   11184:	cmp	r0, #1
   11188:	bne	11614 <getc@plt+0xa48>
   1118c:	ldr	r0, [r4, #12]
   11190:	ldr	r1, [sp, #36]	; 0x24
   11194:	mov	r2, r7
   11198:	add	r0, r0, r1
   1119c:	mov	r1, #99	; 0x63
   111a0:	str	r0, [r4, #12]
   111a4:	ldr	r0, [pc, #1240]	; 11684 <getc@plt+0xab8>
   111a8:	add	r0, pc, r0
   111ac:	bl	10a94 <fgets@plt>
   111b0:	cmp	r0, #0
   111b4:	beq	11614 <getc@plt+0xa48>
   111b8:	ldr	r0, [pc, #1224]	; 11688 <getc@plt+0xabc>
   111bc:	ldr	r1, [pc, #1224]	; 1168c <getc@plt+0xac0>
   111c0:	add	r2, sp, #36	; 0x24
   111c4:	add	r0, pc, r0
   111c8:	add	r1, pc, r1
   111cc:	bl	10b78 <__isoc99_sscanf@plt>
   111d0:	cmp	r0, #1
   111d4:	bne	11614 <getc@plt+0xa48>
   111d8:	ldr	r0, [r4, #16]
   111dc:	ldr	r1, [sp, #36]	; 0x24
   111e0:	mov	r2, r7
   111e4:	add	r0, r0, r1
   111e8:	mov	r1, #99	; 0x63
   111ec:	str	r0, [r4, #16]
   111f0:	ldr	r0, [pc, #1176]	; 11690 <getc@plt+0xac4>
   111f4:	add	r0, pc, r0
   111f8:	bl	10a94 <fgets@plt>
   111fc:	cmp	r0, #0
   11200:	beq	11614 <getc@plt+0xa48>
   11204:	ldr	r0, [pc, #1160]	; 11694 <getc@plt+0xac8>
   11208:	mov	r1, #99	; 0x63
   1120c:	mov	r2, r7
   11210:	add	r0, pc, r0
   11214:	bl	10a94 <fgets@plt>
   11218:	cmp	r0, #0
   1121c:	beq	11614 <getc@plt+0xa48>
   11220:	ldr	r0, [pc, #1136]	; 11698 <getc@plt+0xacc>
   11224:	mov	r1, #99	; 0x63
   11228:	mov	r2, r7
   1122c:	add	r0, pc, r0
   11230:	bl	10a94 <fgets@plt>
   11234:	cmp	r0, #0
   11238:	beq	11614 <getc@plt+0xa48>
   1123c:	ldr	r0, [pc, #1112]	; 1169c <getc@plt+0xad0>
   11240:	mov	r1, #99	; 0x63
   11244:	mov	r2, r7
   11248:	add	r0, pc, r0
   1124c:	bl	10a94 <fgets@plt>
   11250:	cmp	r0, #0
   11254:	beq	11614 <getc@plt+0xa48>
   11258:	ldr	r0, [pc, #1088]	; 116a0 <getc@plt+0xad4>
   1125c:	mov	r1, #99	; 0x63
   11260:	mov	r2, r7
   11264:	add	r0, pc, r0
   11268:	bl	10a94 <fgets@plt>
   1126c:	cmp	r0, #0
   11270:	beq	11614 <getc@plt+0xa48>
   11274:	add	r5, sp, #48	; 0x30
   11278:	orr	r9, r5, #12
   1127c:	orr	r6, r5, #8
   11280:	orr	sl, r5, #4
   11284:	mov	r2, r5
   11288:	stm	sp, {r6, r9}
   1128c:	mov	r3, sl
   11290:	ldr	r0, [pc, #1036]	; 116a4 <getc@plt+0xad8>
   11294:	ldr	r1, [pc, #1036]	; 116a8 <getc@plt+0xadc>
   11298:	add	r0, pc, r0
   1129c:	add	r1, pc, r1
   112a0:	bl	10b78 <__isoc99_sscanf@plt>
   112a4:	cmp	r0, #4
   112a8:	bne	11614 <getc@plt+0xa48>
   112ac:	add	r0, r4, #20
   112b0:	vld1.64	{d16-d17}, [r5 :128]
   112b4:	mov	r1, #99	; 0x63
   112b8:	mov	r2, r7
   112bc:	vld1.32	{d18-d19}, [r0]
   112c0:	vadd.i32	q8, q9, q8
   112c4:	vst1.32	{d16-d17}, [r0]
   112c8:	ldr	r0, [pc, #988]	; 116ac <getc@plt+0xae0>
   112cc:	add	r0, pc, r0
   112d0:	bl	10a94 <fgets@plt>
   112d4:	cmp	r0, #0
   112d8:	beq	11614 <getc@plt+0xa48>
   112dc:	stm	sp, {r6, r9}
   112e0:	mov	r2, r5
   112e4:	mov	r3, sl
   112e8:	ldr	r0, [pc, #960]	; 116b0 <getc@plt+0xae4>
   112ec:	ldr	r1, [pc, #960]	; 116b4 <getc@plt+0xae8>
   112f0:	add	r0, pc, r0
   112f4:	add	r1, pc, r1
   112f8:	bl	10b78 <__isoc99_sscanf@plt>
   112fc:	cmp	r0, #4
   11300:	bne	11614 <getc@plt+0xa48>
   11304:	add	r0, r4, #36	; 0x24
   11308:	vld1.64	{d16-d17}, [r5 :128]
   1130c:	mov	r1, #99	; 0x63
   11310:	mov	r2, r7
   11314:	vld1.32	{d18-d19}, [r0]
   11318:	vadd.i32	q8, q9, q8
   1131c:	vst1.32	{d16-d17}, [r0]
   11320:	ldr	r0, [pc, #912]	; 116b8 <getc@plt+0xaec>
   11324:	add	r0, pc, r0
   11328:	bl	10a94 <fgets@plt>
   1132c:	cmp	r0, #0
   11330:	beq	11614 <getc@plt+0xa48>
   11334:	stm	sp, {r6, r9}
   11338:	mov	r2, r5
   1133c:	mov	r3, sl
   11340:	ldr	r0, [pc, #884]	; 116bc <getc@plt+0xaf0>
   11344:	ldr	r1, [pc, #884]	; 116c0 <getc@plt+0xaf4>
   11348:	add	r0, pc, r0
   1134c:	add	r1, pc, r1
   11350:	bl	10b78 <__isoc99_sscanf@plt>
   11354:	cmp	r0, #4
   11358:	bne	11614 <getc@plt+0xa48>
   1135c:	add	r0, r4, #52	; 0x34
   11360:	vld1.64	{d16-d17}, [r5 :128]
   11364:	mov	r1, #99	; 0x63
   11368:	mov	r2, r7
   1136c:	vld1.32	{d18-d19}, [r0]
   11370:	vadd.i32	q8, q9, q8
   11374:	vst1.32	{d16-d17}, [r0]
   11378:	ldr	r6, [pc, #836]	; 116c4 <getc@plt+0xaf8>
   1137c:	add	r6, pc, r6
   11380:	mov	r0, r6
   11384:	bl	10a94 <fgets@plt>
   11388:	cmp	r0, #0
   1138c:	beq	11614 <getc@plt+0xa48>
   11390:	str	r4, [sp, #20]
   11394:	mov	r0, r6
   11398:	mov	r1, #99	; 0x63
   1139c:	mov	r2, r7
   113a0:	bl	10a94 <fgets@plt>
   113a4:	cmp	r0, #0
   113a8:	ldrbne	r0, [r6]
   113ac:	cmpne	r0, #10
   113b0:	bne	11394 <getc@plt+0x7c8>
   113b4:	ldr	r0, [sp, #40]	; 0x28
   113b8:	cmp	r0, #1
   113bc:	blt	114cc <getc@plt+0x900>
   113c0:	ldr	r0, [pc, #768]	; 116c8 <getc@plt+0xafc>
   113c4:	mov	r1, #99	; 0x63
   113c8:	mov	r2, r7
   113cc:	add	r0, pc, r0
   113d0:	bl	10a94 <fgets@plt>
   113d4:	cmp	r0, #0
   113d8:	beq	114cc <getc@plt+0x900>
   113dc:	ldr	r4, [pc, #744]	; 116cc <getc@plt+0xb00>
   113e0:	mov	r1, #99	; 0x63
   113e4:	mov	r2, r7
   113e8:	add	r4, pc, r4
   113ec:	mov	r0, r4
   113f0:	bl	10a94 <fgets@plt>
   113f4:	cmp	r0, #0
   113f8:	beq	114cc <getc@plt+0x900>
   113fc:	ldr	r1, [sp, #20]
   11400:	movw	r0, #2124	; 0x84c
   11404:	add	r8, sp, #36	; 0x24
   11408:	add	r0, r1, r0
   1140c:	str	r0, [sp, #28]
   11410:	add	r0, r4, #20
   11414:	ldr	r9, [pc, #692]	; 116d0 <getc@plt+0xb04>
   11418:	str	r0, [sp, #24]
   1141c:	ldr	r5, [sp, #24]
   11420:	add	r9, pc, r9
   11424:	mov	r0, r4
   11428:	mov	r1, r9
   1142c:	mov	r2, r8
   11430:	add	r3, sp, #48	; 0x30
   11434:	bl	10b78 <__isoc99_sscanf@plt>
   11438:	cmp	r0, #2
   1143c:	bne	114cc <getc@plt+0x900>
   11440:	ldr	r0, [sp, #28]
   11444:	ldr	sl, [sp, #48]	; 0x30
   11448:	ldr	r6, [sp, #36]	; 0x24
   1144c:	mov	r1, r5
   11450:	bl	121bc <getc@plt+0x15f0>
   11454:	cmp	r0, #0
   11458:	beq	11478 <getc@plt+0x8ac>
   1145c:	ldr	r1, [r0, #12]
   11460:	ldr	r2, [r0, #16]
   11464:	add	r1, r1, r6
   11468:	add	r2, r2, sl
   1146c:	str	r1, [r0, #12]
   11470:	str	r2, [r0, #16]
   11474:	b	114b4 <getc@plt+0x8e8>
   11478:	mov	r0, #1
   1147c:	mov	r1, #20
   11480:	bl	12774 <getc@plt+0x1ba8>
   11484:	mov	r4, r9
   11488:	mov	r9, r0
   1148c:	mov	r0, r5
   11490:	bl	10aac <strdup@plt>
   11494:	add	r1, r9, #8
   11498:	stm	r1, {r0, r6, sl}
   1149c:	mov	r1, r9
   114a0:	mov	r9, r4
   114a4:	ldr	r0, [sp, #28]
   114a8:	ldr	r4, [pc, #548]	; 116d4 <getc@plt+0xb08>
   114ac:	add	r4, pc, r4
   114b0:	bl	1224c <getc@plt+0x1680>
   114b4:	mov	r0, r4
   114b8:	mov	r1, #99	; 0x63
   114bc:	mov	r2, r7
   114c0:	bl	10a94 <fgets@plt>
   114c4:	cmp	r0, #0
   114c8:	bne	11424 <getc@plt+0x858>
   114cc:	ldr	r0, [sp, #44]	; 0x2c
   114d0:	ldr	r4, [sp, #20]
   114d4:	cmp	r0, #1
   114d8:	blt	11604 <getc@plt+0xa38>
   114dc:	ldr	r0, [pc, #500]	; 116d8 <getc@plt+0xb0c>
   114e0:	mov	r1, #99	; 0x63
   114e4:	mov	r2, r7
   114e8:	add	r0, pc, r0
   114ec:	bl	10a94 <fgets@plt>
   114f0:	cmp	r0, #0
   114f4:	beq	11604 <getc@plt+0xa38>
   114f8:	ldr	r6, [pc, #476]	; 116dc <getc@plt+0xb10>
   114fc:	mov	r1, #99	; 0x63
   11500:	mov	r2, r7
   11504:	add	r6, pc, r6
   11508:	mov	r0, r6
   1150c:	bl	10a94 <fgets@plt>
   11510:	cmp	r0, #0
   11514:	beq	11604 <getc@plt+0xa38>
   11518:	add	r5, sp, #48	; 0x30
   1151c:	add	r0, r6, #31
   11520:	str	r0, [sp, #28]
   11524:	ldr	r1, [pc, #436]	; 116e0 <getc@plt+0xb14>
   11528:	mov	r0, r6
   1152c:	add	r2, sp, #36	; 0x24
   11530:	mov	r3, r5
   11534:	add	r1, pc, r1
   11538:	bl	10b78 <__isoc99_sscanf@plt>
   1153c:	cmp	r0, #2
   11540:	bne	11604 <getc@plt+0xa38>
   11544:	ldrb	r0, [r6, #31]
   11548:	cmp	r0, #92	; 0x5c
   1154c:	beq	11564 <getc@plt+0x998>
   11550:	cmp	r0, #125	; 0x7d
   11554:	bne	11570 <getc@plt+0x9a4>
   11558:	ldrb	sl, [r6, #30]
   1155c:	str	sl, [sp, #32]
   11560:	b	11588 <getc@plt+0x9bc>
   11564:	mov	sl, #10
   11568:	str	sl, [sp, #32]
   1156c:	b	11588 <getc@plt+0x9bc>
   11570:	ldr	r0, [sp, #28]
   11574:	ldr	r1, [pc, #360]	; 116e4 <getc@plt+0xb18>
   11578:	add	r2, sp, #32
   1157c:	add	r1, pc, r1
   11580:	bl	10b78 <__isoc99_sscanf@plt>
   11584:	ldr	sl, [sp, #32]
   11588:	ldr	r8, [sp, #48]	; 0x30
   1158c:	ldr	r9, [sp, #36]	; 0x24
   11590:	mov	r0, sl
   11594:	bl	12448 <getc@plt+0x187c>
   11598:	add	r0, r4, r0, lsl #3
   1159c:	ldr	r1, [r0, #68]	; 0x44
   115a0:	ldr	r2, [r0, #72]	; 0x48
   115a4:	add	r1, r1, r9
   115a8:	add	r2, r2, r8
   115ac:	str	r1, [r0, #68]	; 0x44
   115b0:	str	r2, [r0, #72]	; 0x48
   115b4:	mov	r2, r7
   115b8:	ldr	r0, [r4, #2116]	; 0x844
   115bc:	ldr	r1, [r4, #2120]	; 0x848
   115c0:	add	r0, r0, r9
   115c4:	add	r1, r1, r8
   115c8:	str	r0, [r4, #2116]	; 0x844
   115cc:	str	r1, [r4, #2120]	; 0x848
   115d0:	add	r0, r4, sl, lsl #3
   115d4:	movw	r1, #10180	; 0x27c4
   115d8:	ldr	r1, [r0, r1]!
   115dc:	add	r1, r1, r9
   115e0:	str	r1, [r0]
   115e4:	ldr	r1, [r0, #4]
   115e8:	add	r1, r1, r8
   115ec:	str	r1, [r0, #4]
   115f0:	mov	r0, r6
   115f4:	mov	r1, #99	; 0x63
   115f8:	bl	10a94 <fgets@plt>
   115fc:	cmp	r0, #0
   11600:	bne	11524 <getc@plt+0x958>
   11604:	mov	r0, r7
   11608:	bl	1289c <getc@plt+0x1cd0>
   1160c:	sub	sp, fp, #28
   11610:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11614:	ldr	r1, [pc, #204]	; 116e8 <getc@plt+0xb1c>
   11618:	ldr	r0, [pc, #204]	; 116ec <getc@plt+0xb20>
   1161c:	cmp	r8, #0
   11620:	add	r1, pc, r1
   11624:	add	r0, pc, r0
   11628:	movne	r1, r8
   1162c:	bl	12c84 <error@@Base+0x50>
   11630:	andeq	r3, r0, r0, lsr r2
   11634:	strdeq	r4, [r1], -sp
   11638:	andeq	r4, r1, r1, ror #1
   1163c:	andeq	r2, r0, r1, ror #17
   11640:	andeq	r4, r1, r1, asr #1
   11644:	andeq	r4, r1, r9, lsr #1
   11648:	andeq	r3, r0, pc, ror r1
   1164c:	andeq	r4, r1, r9, lsl #1
   11650:	andeq	r4, r1, sp, rrx
   11654:	andeq	r2, r0, r1, asr #19
   11658:	andeq	r4, r1, sp, lsr r0
   1165c:	andeq	r4, r1, r1, lsr #32
   11660:	andeq	r2, r0, r5, ror r9
   11664:	strdeq	r3, [r1], -r1
   11668:	ldrdeq	r3, [r1], -r5
   1166c:			; <UNDEFINED> instruction: 0x00013fb9
   11670:	muleq	r1, sp, pc	; <UNPREDICTABLE>
   11674:	strdeq	r2, [r0], -r1
   11678:	andeq	r3, r1, sp, ror #30
   1167c:	andeq	r3, r1, r1, asr pc
   11680:	andeq	r2, r0, r5, lsr #17
   11684:	andeq	r3, r1, r1, lsr #30
   11688:	andeq	r3, r1, r5, lsl #30
   1168c:	andeq	r2, r0, r9, asr r8
   11690:	ldrdeq	r3, [r1], -r5
   11694:			; <UNDEFINED> instruction: 0x00013eb9
   11698:	muleq	r1, sp, lr
   1169c:	andeq	r3, r1, r1, lsl #29
   116a0:	andeq	r3, r1, r5, ror #28
   116a4:	andeq	r3, r1, r1, lsr lr
   116a8:	andeq	r2, r0, r9, ror r7
   116ac:	strdeq	r3, [r1], -sp
   116b0:	ldrdeq	r3, [r1], -r9
   116b4:	andeq	r2, r0, r1, lsr #14
   116b8:	andeq	r3, r1, r5, lsr #27
   116bc:	andeq	r3, r1, r1, lsl #27
   116c0:	andeq	r2, r0, r9, asr #13
   116c4:	andeq	r3, r1, sp, asr #26
   116c8:	strdeq	r3, [r1], -sp
   116cc:	andeq	r3, r1, r1, ror #25
   116d0:	strdeq	r2, [r0], -sp
   116d4:	andeq	r3, r1, sp, lsl ip
   116d8:	andeq	r3, r1, r1, ror #23
   116dc:	andeq	r3, r1, r5, asr #23
   116e0:	andeq	r2, r0, r9, ror #9
   116e4:	andeq	r2, r0, ip, ror r3
   116e8:	andeq	r2, r0, lr, ror #5
   116ec:	ldrdeq	r2, [r0], -r8
   116f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   116f4:	add	fp, sp, #28
   116f8:	sub	sp, sp, #4
   116fc:	vpush	{d8}
   11700:	sub	sp, sp, #24
   11704:	mov	r2, r1
   11708:	ldr	r1, [pc, #1512]	; 11cf8 <getc@plt+0x112c>
   1170c:	mov	sl, r0
   11710:	mov	r0, r2
   11714:	add	r1, pc, r1
   11718:	bl	12814 <getc@plt+0x1c48>
   1171c:	ldr	r1, [pc, #1496]	; 11cfc <getc@plt+0x1130>
   11720:	ldr	r2, [pc, #1496]	; 11d00 <getc@plt+0x1134>
   11724:	ldr	r3, [pc, #1496]	; 11d04 <getc@plt+0x1138>
   11728:	mov	r4, r0
   1172c:	add	r1, pc, r1
   11730:	add	r2, pc, r2
   11734:	add	r3, pc, r3
   11738:	bl	10b60 <fprintf@plt>
   1173c:	ldr	r2, [sl]
   11740:	ldr	r6, [pc, #1472]	; 11d08 <getc@plt+0x113c>
   11744:	ldr	r3, [pc, #1472]	; 11d0c <getc@plt+0x1140>
   11748:	mov	r0, r4
   1174c:	add	r6, pc, r6
   11750:	add	r3, pc, r3
   11754:	mov	r1, r6
   11758:	bl	10b60 <fprintf@plt>
   1175c:	ldr	r2, [sl, #4]
   11760:	ldr	r3, [pc, #1448]	; 11d10 <getc@plt+0x1144>
   11764:	mov	r0, r4
   11768:	mov	r1, r6
   1176c:	add	r3, pc, r3
   11770:	bl	10b60 <fprintf@plt>
   11774:	ldr	r0, [sl]
   11778:	cmp	r0, #0
   1177c:	beq	117bc <getc@plt+0xbf0>
   11780:	ldr	r1, [sl, #4]
   11784:	vldr	d16, [pc, #900]	; 11b10 <getc@plt+0xf44>
   11788:	vmov	s2, r0
   1178c:	sub	r1, r0, r1
   11790:	mov	r0, r4
   11794:	vmov	s0, r1
   11798:	vcvt.f64.s32	d17, s0
   1179c:	vcvt.f64.s32	d18, s2
   117a0:	ldr	r1, [pc, #1392]	; 11d18 <getc@plt+0x114c>
   117a4:	vmul.f64	d16, d17, d16
   117a8:	vdiv.f64	d16, d16, d18
   117ac:	vmov	r2, r3, d16
   117b0:	add	r1, pc, r1
   117b4:	bl	10b60 <fprintf@plt>
   117b8:	b	117d4 <getc@plt+0xc08>
   117bc:	ldr	r0, [pc, #1360]	; 11d14 <getc@plt+0x1148>
   117c0:	mov	r1, #8
   117c4:	mov	r2, #1
   117c8:	mov	r3, r4
   117cc:	add	r0, pc, r0
   117d0:	bl	10ae8 <fwrite@plt>
   117d4:	ldr	r1, [pc, #1344]	; 11d1c <getc@plt+0x1150>
   117d8:	mov	r0, r4
   117dc:	add	r1, pc, r1
   117e0:	bl	10b60 <fprintf@plt>
   117e4:	ldr	r2, [sl, #8]
   117e8:	ldr	r6, [pc, #1328]	; 11d20 <getc@plt+0x1154>
   117ec:	ldr	r3, [pc, #1328]	; 11d24 <getc@plt+0x1158>
   117f0:	mov	r0, r4
   117f4:	add	r6, pc, r6
   117f8:	add	r3, pc, r3
   117fc:	mov	r1, r6
   11800:	bl	10b60 <fprintf@plt>
   11804:	ldr	r2, [sl, #12]
   11808:	ldr	r3, [pc, #1304]	; 11d28 <getc@plt+0x115c>
   1180c:	mov	r0, r4
   11810:	mov	r1, r6
   11814:	add	r3, pc, r3
   11818:	bl	10b60 <fprintf@plt>
   1181c:	ldr	r2, [sl, #16]
   11820:	ldr	r3, [pc, #1284]	; 11d2c <getc@plt+0x1160>
   11824:	mov	r0, r4
   11828:	mov	r1, r6
   1182c:	add	r3, pc, r3
   11830:	bl	10b60 <fprintf@plt>
   11834:	ldr	r0, [sl]
   11838:	cmp	r0, #0
   1183c:	beq	11880 <getc@plt+0xcb4>
   11840:	ldr	r1, [sl, #8]
   11844:	ldr	r2, [sl, #12]
   11848:	vldr	d16, [pc, #704]	; 11b10 <getc@plt+0xf44>
   1184c:	vmov	s2, r0
   11850:	mov	r0, r4
   11854:	add	r1, r2, r1
   11858:	vmov	s0, r1
   1185c:	vcvt.f64.s32	d17, s0
   11860:	vcvt.f64.s32	d18, s2
   11864:	ldr	r1, [pc, #1224]	; 11d34 <getc@plt+0x1168>
   11868:	vmul.f64	d16, d17, d16
   1186c:	vdiv.f64	d16, d16, d18
   11870:	vmov	r2, r3, d16
   11874:	add	r1, pc, r1
   11878:	bl	10b60 <fprintf@plt>
   1187c:	b	11898 <getc@plt+0xccc>
   11880:	ldr	r0, [pc, #1192]	; 11d30 <getc@plt+0x1164>
   11884:	mov	r1, #8
   11888:	mov	r2, #1
   1188c:	mov	r3, r4
   11890:	add	r0, pc, r0
   11894:	bl	10ae8 <fwrite@plt>
   11898:	ldr	r1, [pc, #1176]	; 11d38 <getc@plt+0x116c>
   1189c:	mov	r0, r4
   118a0:	add	r1, pc, r1
   118a4:	bl	10b60 <fprintf@plt>
   118a8:	ldr	r0, [sl]
   118ac:	cmp	r0, #0
   118b0:	beq	118f0 <getc@plt+0xd24>
   118b4:	ldr	r1, [sl, #48]	; 0x30
   118b8:	vldr	d16, [pc, #592]	; 11b10 <getc@plt+0xf44>
   118bc:	vmov	s2, r0
   118c0:	sub	r1, r0, r1
   118c4:	mov	r0, r4
   118c8:	vmov	s0, r1
   118cc:	vcvt.f64.s32	d17, s0
   118d0:	vcvt.f64.s32	d18, s2
   118d4:	ldr	r1, [pc, #1124]	; 11d40 <getc@plt+0x1174>
   118d8:	vmul.f64	d16, d17, d16
   118dc:	vdiv.f64	d16, d16, d18
   118e0:	vmov	r2, r3, d16
   118e4:	add	r1, pc, r1
   118e8:	bl	10b60 <fprintf@plt>
   118ec:	b	11908 <getc@plt+0xd3c>
   118f0:	ldr	r0, [pc, #1092]	; 11d3c <getc@plt+0x1170>
   118f4:	mov	r1, #8
   118f8:	mov	r2, #1
   118fc:	mov	r3, r4
   11900:	add	r0, pc, r0
   11904:	bl	10ae8 <fwrite@plt>
   11908:	ldr	r1, [pc, #1076]	; 11d44 <getc@plt+0x1178>
   1190c:	mov	r0, r4
   11910:	add	r1, pc, r1
   11914:	bl	10b60 <fprintf@plt>
   11918:	ldr	r0, [pc, #1064]	; 11d48 <getc@plt+0x117c>
   1191c:	mov	r1, #37	; 0x25
   11920:	mov	r2, #1
   11924:	mov	r3, r4
   11928:	add	r0, pc, r0
   1192c:	bl	10ae8 <fwrite@plt>
   11930:	ldr	r2, [sl, #20]
   11934:	ldr	r3, [sl, #24]
   11938:	ldr	r0, [sl, #28]
   1193c:	ldr	r1, [sl, #32]
   11940:	ldr	r7, [pc, #1028]	; 11d4c <getc@plt+0x1180>
   11944:	add	r7, pc, r7
   11948:	stm	sp, {r0, r1, r7}
   1194c:	mov	r0, r4
   11950:	ldr	r6, [pc, #1016]	; 11d50 <getc@plt+0x1184>
   11954:	add	r6, pc, r6
   11958:	mov	r1, r6
   1195c:	bl	10b60 <fprintf@plt>
   11960:	ldr	r2, [sl, #36]	; 0x24
   11964:	ldr	r3, [sl, #40]	; 0x28
   11968:	ldr	r0, [sl, #44]	; 0x2c
   1196c:	ldr	r1, [sl, #48]	; 0x30
   11970:	ldr	r7, [pc, #988]	; 11d54 <getc@plt+0x1188>
   11974:	add	r7, pc, r7
   11978:	stm	sp, {r0, r1, r7}
   1197c:	mov	r0, r4
   11980:	mov	r1, r6
   11984:	bl	10b60 <fprintf@plt>
   11988:	ldr	r2, [sl, #52]	; 0x34
   1198c:	ldr	r3, [sl, #56]	; 0x38
   11990:	ldr	r0, [sl, #60]	; 0x3c
   11994:	ldr	r1, [sl, #64]	; 0x40
   11998:	ldr	r7, [pc, #952]	; 11d58 <getc@plt+0x118c>
   1199c:	add	r7, pc, r7
   119a0:	stm	sp, {r0, r1, r7}
   119a4:	mov	r0, r4
   119a8:	mov	r1, r6
   119ac:	bl	10b60 <fprintf@plt>
   119b0:	ldr	r1, [pc, #932]	; 11d5c <getc@plt+0x1190>
   119b4:	mov	r0, r4
   119b8:	add	r1, pc, r1
   119bc:	bl	10b60 <fprintf@plt>
   119c0:	ldr	r7, [pc, #920]	; 11d60 <getc@plt+0x1194>
   119c4:	vldr	d8, [pc, #804]	; 11cf0 <getc@plt+0x1124>
   119c8:	mov	r6, #0
   119cc:	add	r9, sp, #15
   119d0:	add	r7, pc, r7
   119d4:	add	r5, sl, r6, lsl #3
   119d8:	ldr	r0, [r5, #68]	; 0x44
   119dc:	cmp	r0, #1
   119e0:	blt	11aa8 <getc@plt+0xedc>
   119e4:	mov	r0, r6
   119e8:	bl	125d0 <getc@plt+0x1a04>
   119ec:	ldr	r2, [r5, #68]	; 0x44
   119f0:	ldr	r3, [r5, #72]	; 0x48
   119f4:	mov	r8, r0
   119f8:	mov	r0, r4
   119fc:	mov	r1, r7
   11a00:	bl	10b60 <fprintf@plt>
   11a04:	ldr	r0, [r5, #68]	; 0x44
   11a08:	cmp	r0, #0
   11a0c:	beq	11a60 <getc@plt+0xe94>
   11a10:	ldr	r1, [r5, #72]	; 0x48
   11a14:	vmov	s2, r0
   11a18:	sub	r1, r0, r1
   11a1c:	mov	r0, r4
   11a20:	vmov	s0, r1
   11a24:	vcvt.f64.s32	d16, s0
   11a28:	vcvt.f64.s32	d17, s2
   11a2c:	ldr	r1, [pc, #820]	; 11d68 <getc@plt+0x119c>
   11a30:	vmul.f64	d16, d16, d8
   11a34:	vdiv.f64	d16, d16, d17
   11a38:	vmov	r2, r3, d16
   11a3c:	add	r1, pc, r1
   11a40:	bl	10b60 <fprintf@plt>
   11a44:	cmp	r8, #0
   11a48:	beq	11a80 <getc@plt+0xeb4>
   11a4c:	ldr	r1, [pc, #792]	; 11d6c <getc@plt+0x11a0>
   11a50:	mov	r0, r4
   11a54:	mov	r2, r8
   11a58:	add	r1, pc, r1
   11a5c:	b	11aa4 <getc@plt+0xed8>
   11a60:	ldr	r0, [pc, #764]	; 11d64 <getc@plt+0x1198>
   11a64:	mov	r1, #8
   11a68:	mov	r2, #1
   11a6c:	mov	r3, r4
   11a70:	add	r0, pc, r0
   11a74:	bl	10ae8 <fwrite@plt>
   11a78:	cmp	r8, #0
   11a7c:	bne	11a4c <getc@plt+0xe80>
   11a80:	mov	r0, #0
   11a84:	mov	r1, #0
   11a88:	mov	r2, r9
   11a8c:	mov	r3, #1
   11a90:	bl	13248 <error@@Base+0x614>
   11a94:	ldr	r1, [pc, #724]	; 11d70 <getc@plt+0x11a4>
   11a98:	mov	r0, r4
   11a9c:	mov	r2, r9
   11aa0:	add	r1, pc, r1
   11aa4:	bl	10b60 <fprintf@plt>
   11aa8:	add	r6, r6, #1
   11aac:	cmp	r6, #256	; 0x100
   11ab0:	bne	119d4 <getc@plt+0xe08>
   11ab4:	ldr	r2, [sl, #2116]	; 0x844
   11ab8:	ldr	r3, [sl, #2120]	; 0x848
   11abc:	ldr	r1, [pc, #688]	; 11d74 <getc@plt+0x11a8>
   11ac0:	mov	r0, r4
   11ac4:	add	r1, pc, r1
   11ac8:	bl	10b60 <fprintf@plt>
   11acc:	ldr	r0, [sl, #2116]	; 0x844
   11ad0:	cmp	r0, #0
   11ad4:	beq	11b18 <getc@plt+0xf4c>
   11ad8:	ldr	r1, [sl, #2120]	; 0x848
   11adc:	vmov	s2, r0
   11ae0:	sub	r1, r0, r1
   11ae4:	mov	r0, r4
   11ae8:	vmov	s0, r1
   11aec:	vcvt.f64.s32	d16, s0
   11af0:	vcvt.f64.s32	d17, s2
   11af4:	ldr	r1, [pc, #640]	; 11d7c <getc@plt+0x11b0>
   11af8:	vmul.f64	d16, d16, d8
   11afc:	vdiv.f64	d16, d16, d17
   11b00:	vmov	r2, r3, d16
   11b04:	add	r1, pc, r1
   11b08:	bl	10b60 <fprintf@plt>
   11b0c:	b	11b30 <getc@plt+0xf64>
   11b10:	andeq	r0, r0, r0
   11b14:	subsmi	r0, r9, r0
   11b18:	ldr	r0, [pc, #600]	; 11d78 <getc@plt+0x11ac>
   11b1c:	mov	r1, #8
   11b20:	mov	r2, #1
   11b24:	mov	r3, r4
   11b28:	add	r0, pc, r0
   11b2c:	bl	10ae8 <fwrite@plt>
   11b30:	ldr	r1, [pc, #584]	; 11d80 <getc@plt+0x11b4>
   11b34:	ldr	r2, [pc, #584]	; 11d84 <getc@plt+0x11b8>
   11b38:	mov	r0, r4
   11b3c:	add	r1, pc, r1
   11b40:	add	r2, pc, r2
   11b44:	bl	10b60 <fprintf@plt>
   11b48:	ldr	r0, [sl, #4]
   11b4c:	cmp	r0, #1
   11b50:	blt	11be0 <getc@plt+0x1014>
   11b54:	movw	r0, #2124	; 0x84c
   11b58:	add	r0, sl, r0
   11b5c:	bl	1236c <getc@plt+0x17a0>
   11b60:	mov	r0, #10176	; 0x27c0
   11b64:	mov	r7, sl
   11b68:	ldr	r0, [r7, r0]!
   11b6c:	mov	r5, r7
   11b70:	ldr	r1, [r5, #-4]!
   11b74:	ldr	r2, [pc, #524]	; 11d88 <getc@plt+0x11bc>
   11b78:	add	r2, pc, r2
   11b7c:	bl	11ddc <getc@plt+0x1210>
   11b80:	ldr	r0, [pc, #516]	; 11d8c <getc@plt+0x11c0>
   11b84:	mov	r1, #39	; 0x27
   11b88:	mov	r2, #1
   11b8c:	mov	r3, r4
   11b90:	add	r0, pc, r0
   11b94:	bl	10ae8 <fwrite@plt>
   11b98:	ldr	r0, [r7]
   11b9c:	cmp	r0, #1
   11ba0:	blt	11be0 <getc@plt+0x1014>
   11ba4:	ldr	r8, [pc, #484]	; 11d90 <getc@plt+0x11c4>
   11ba8:	mov	r6, #0
   11bac:	add	r8, pc, r8
   11bb0:	ldr	r0, [r5]
   11bb4:	ldr	r0, [r0, r6, lsl #2]
   11bb8:	add	r3, r0, #8
   11bbc:	mov	r0, r4
   11bc0:	ldm	r3, {r1, r2, r3}
   11bc4:	str	r1, [sp]
   11bc8:	mov	r1, r8
   11bcc:	bl	10b60 <fprintf@plt>
   11bd0:	ldr	r0, [r7]
   11bd4:	add	r6, r6, #1
   11bd8:	cmp	r6, r0
   11bdc:	blt	11bb0 <getc@plt+0xfe4>
   11be0:	ldr	r0, [sl]
   11be4:	cmp	r0, #1
   11be8:	blt	11cd4 <getc@plt+0x1108>
   11bec:	ldr	r1, [pc, #416]	; 11d94 <getc@plt+0x11c8>
   11bf0:	mov	r0, r4
   11bf4:	add	r1, pc, r1
   11bf8:	bl	10b60 <fprintf@plt>
   11bfc:	ldr	r6, [pc, #404]	; 11d98 <getc@plt+0x11cc>
   11c00:	movw	r0, #10180	; 0x27c4
   11c04:	movw	r9, #65535	; 0xffff
   11c08:	mov	r5, #0
   11c0c:	add	r7, sp, #15
   11c10:	add	r8, sl, r0
   11c14:	movw	r0, #10184	; 0x27c8
   11c18:	movt	r9, #16
   11c1c:	add	sl, sl, r0
   11c20:	add	r6, pc, r6
   11c24:	ldr	r2, [r8, r5, lsl #3]
   11c28:	cmp	r2, #1
   11c2c:	blt	11cc8 <getc@plt+0x10fc>
   11c30:	ldr	r3, [sl, r5, lsl #3]
   11c34:	ldr	r1, [pc, #352]	; 11d9c <getc@plt+0x11d0>
   11c38:	mov	r0, r4
   11c3c:	add	r1, pc, r1
   11c40:	bl	10b60 <fprintf@plt>
   11c44:	ldr	r0, [r8, r5, lsl #3]
   11c48:	cmp	r0, #0
   11c4c:	beq	11c8c <getc@plt+0x10c0>
   11c50:	lsl	r1, r5, #1
   11c54:	vmov	s2, r0
   11c58:	ldr	r1, [sl, r1, lsl #2]
   11c5c:	sub	r1, r0, r1
   11c60:	mov	r0, r4
   11c64:	vmov	s0, r1
   11c68:	vcvt.f64.s32	d16, s0
   11c6c:	vcvt.f64.s32	d17, s2
   11c70:	ldr	r1, [pc, #300]	; 11da4 <getc@plt+0x11d8>
   11c74:	vmul.f64	d16, d16, d8
   11c78:	vdiv.f64	d16, d16, d17
   11c7c:	vmov	r2, r3, d16
   11c80:	add	r1, pc, r1
   11c84:	bl	10b60 <fprintf@plt>
   11c88:	b	11ca4 <getc@plt+0x10d8>
   11c8c:	ldr	r0, [pc, #268]	; 11da0 <getc@plt+0x11d4>
   11c90:	mov	r1, #8
   11c94:	mov	r2, #1
   11c98:	mov	r3, r4
   11c9c:	add	r0, pc, r0
   11ca0:	bl	10ae8 <fwrite@plt>
   11ca4:	mov	r0, #0
   11ca8:	mov	r1, r5
   11cac:	mov	r2, r7
   11cb0:	mov	r3, #1
   11cb4:	bl	13248 <error@@Base+0x614>
   11cb8:	mov	r0, r4
   11cbc:	mov	r1, r6
   11cc0:	mov	r2, r7
   11cc4:	bl	10b60 <fprintf@plt>
   11cc8:	add	r5, r5, #1
   11ccc:	cmp	r5, r9
   11cd0:	bne	11c24 <getc@plt+0x1058>
   11cd4:	mov	r0, r4
   11cd8:	bl	1289c <getc@plt+0x1cd0>
   11cdc:	sub	sp, fp, #40	; 0x28
   11ce0:	vpop	{d8}
   11ce4:	add	sp, sp, #4
   11ce8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11cec:	nop	{0}
   11cf0:	andeq	r0, r0, r0
   11cf4:	subsmi	r0, r9, r0
   11cf8:	andeq	r2, r0, r5, ror #10
   11cfc:	andeq	r2, r0, r8, ror #3
   11d00:	muleq	r0, sp, r1
   11d04:	andeq	r2, r0, pc, ror #20
   11d08:	strdeq	r2, [r0], -r7
   11d0c:	andeq	r2, r0, fp, lsl r4
   11d10:	andeq	r2, r0, sp, lsr #3
   11d14:	andeq	r2, r0, r9, asr r2
   11d18:	andeq	r2, r0, lr, ror r2
   11d1c:	andeq	r2, r0, r4, asr #2
   11d20:	andeq	r2, r0, pc, asr #4
   11d24:	andeq	r2, r0, r7, lsr r1
   11d28:	andeq	r2, r0, sp, lsr #2
   11d2c:	andeq	r2, r0, r5, lsr #2
   11d30:	muleq	r0, r5, r1
   11d34:			; <UNDEFINED> instruction: 0x000021ba
   11d38:	strheq	r2, [r0], -sp
   11d3c:	andeq	r2, r0, r5, lsr #2
   11d40:	andeq	r2, r0, sl, asr #2
   11d44:	andeq	r2, r0, r4, rrx
   11d48:	andeq	r2, r0, fp, rrx
   11d4c:	andeq	r2, r0, r5, ror r0
   11d50:	andeq	r2, r0, r0, ror #1
   11d54:	andeq	r2, r0, ip, asr #32
   11d58:	andeq	r2, r0, sp, lsr #32
   11d5c:	andeq	r2, r0, r7, lsl r0
   11d60:	andeq	r2, r0, lr, ror r0
   11d64:			; <UNDEFINED> instruction: 0x00001fb5
   11d68:	strdeq	r1, [r0], -r2
   11d6c:	andeq	r1, r0, pc, ror #31
   11d70:			; <UNDEFINED> instruction: 0x00001fb9
   11d74:	andeq	r1, r0, sl, lsl #31
   11d78:	strdeq	r1, [r0], -sp
   11d7c:	andeq	r1, r0, sl, lsr #30
   11d80:	andeq	r1, r0, fp, lsl #30
   11d84:	andeq	r1, r0, r9, lsl #29
   11d88:	andeq	r0, r0, r8, lsr #4
   11d8c:	andeq	r1, r0, sp, asr lr
   11d90:			; <UNDEFINED> instruction: 0x00001eb6
   11d94:	ldrdeq	r1, [r0], -fp
   11d98:	andeq	r1, r0, r9, lsr lr
   11d9c:	andeq	r1, r0, r2, lsl lr
   11da0:	andeq	r1, r0, r9, lsl #27
   11da4:	andeq	r1, r0, lr, lsr #27
   11da8:	ldr	r2, [r1, #12]
   11dac:	ldr	r3, [r0, #12]
   11db0:	cmp	r2, r3
   11db4:	bne	11dd4 <getc@plt+0x1208>
   11db8:	ldr	r2, [r1, #16]
   11dbc:	ldr	r3, [r0, #16]
   11dc0:	cmp	r2, r3
   11dc4:	bne	11dd4 <getc@plt+0x1208>
   11dc8:	ldr	r1, [r1, #8]
   11dcc:	ldr	r0, [r0, #8]
   11dd0:	b	12798 <getc@plt+0x1bcc>
   11dd4:	sub	r0, r2, r3
   11dd8:	bx	lr
   11ddc:	cmp	r0, #2
   11de0:	bxlt	lr
   11de4:	ldr	r3, [pc, #28]	; 11e08 <getc@plt+0x123c>
   11de8:	add	r3, pc, r3
   11dec:	str	r2, [r3]
   11df0:	ldr	r2, [pc, #20]	; 11e0c <getc@plt+0x1240>
   11df4:	add	r2, pc, r2
   11df8:	str	r1, [r2]
   11dfc:	sub	r1, r0, #1
   11e00:	mov	r0, #0
   11e04:	b	11e10 <getc@plt+0x1244>
   11e08:	andeq	r3, r1, ip, asr #6
   11e0c:	andeq	r3, r1, ip, lsr r3
   11e10:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   11e14:	add	fp, sp, #24
   11e18:	mov	r8, r1
   11e1c:	mov	r5, r0
   11e20:	b	11e44 <getc@plt+0x1278>
   11e24:	sub	r1, r4, #1
   11e28:	str	r6, [r0, r4, lsl #2]
   11e2c:	cmp	r1, r5
   11e30:	movgt	r0, r5
   11e34:	blgt	11e10 <getc@plt+0x1244>
   11e38:	add	r5, r7, #1
   11e3c:	cmp	r5, r8
   11e40:	popge	{r4, r5, r6, r7, r8, sl, fp, pc}
   11e44:	ldr	r0, [pc, #220]	; 11f28 <getc@plt+0x135c>
   11e48:	cmp	r5, r8
   11e4c:	mov	r4, r8
   11e50:	mov	r7, r5
   11e54:	ldr	r0, [pc, r0]
   11e58:	ldr	r6, [r0, r5, lsl #2]
   11e5c:	bge	11e24 <getc@plt+0x1258>
   11e60:	mov	r7, r5
   11e64:	mov	r4, r8
   11e68:	cmp	r7, r4
   11e6c:	blt	11e80 <getc@plt+0x12b4>
   11e70:	b	11ea4 <getc@plt+0x12d8>
   11e74:	sub	r4, r4, #1
   11e78:	cmp	r7, r4
   11e7c:	bge	11ea4 <getc@plt+0x12d8>
   11e80:	ldr	r0, [pc, #164]	; 11f2c <getc@plt+0x1360>
   11e84:	ldr	r0, [pc, r0]
   11e88:	ldr	r1, [r0, r4, lsl #2]
   11e8c:	ldr	r2, [pc, #156]	; 11f30 <getc@plt+0x1364>
   11e90:	mov	r0, r6
   11e94:	ldr	r2, [pc, r2]
   11e98:	blx	r2
   11e9c:	cmn	r0, #1
   11ea0:	ble	11e74 <getc@plt+0x12a8>
   11ea4:	cmp	r7, r4
   11ea8:	beq	11ec0 <getc@plt+0x12f4>
   11eac:	ldr	r0, [pc, #128]	; 11f34 <getc@plt+0x1368>
   11eb0:	ldr	r0, [pc, r0]
   11eb4:	ldr	r1, [r0, r4, lsl #2]
   11eb8:	str	r1, [r0, r7, lsl #2]
   11ebc:	add	r7, r7, #1
   11ec0:	cmp	r7, r4
   11ec4:	bge	11eec <getc@plt+0x1320>
   11ec8:	ldr	r0, [pc, #104]	; 11f38 <getc@plt+0x136c>
   11ecc:	ldr	r0, [pc, r0]
   11ed0:	ldr	r1, [r0, r7, lsl #2]
   11ed4:	ldr	r2, [pc, #96]	; 11f3c <getc@plt+0x1370>
   11ed8:	mov	r0, r6
   11edc:	ldr	r2, [pc, r2]
   11ee0:	blx	r2
   11ee4:	cmp	r0, #1
   11ee8:	bge	11ebc <getc@plt+0x12f0>
   11eec:	cmp	r7, r4
   11ef0:	bne	11f00 <getc@plt+0x1334>
   11ef4:	cmp	r7, r4
   11ef8:	blt	11e78 <getc@plt+0x12ac>
   11efc:	b	11f1c <getc@plt+0x1350>
   11f00:	ldr	r0, [pc, #56]	; 11f40 <getc@plt+0x1374>
   11f04:	ldr	r0, [pc, r0]
   11f08:	ldr	r1, [r0, r7, lsl #2]
   11f0c:	str	r1, [r0, r4, lsl #2]
   11f10:	sub	r4, r4, #1
   11f14:	cmp	r7, r4
   11f18:	blt	11e78 <getc@plt+0x12ac>
   11f1c:	ldr	r0, [pc, #32]	; 11f44 <getc@plt+0x1378>
   11f20:	ldr	r0, [pc, r0]
   11f24:	b	11e24 <getc@plt+0x1258>
   11f28:	ldrdeq	r3, [r1], -ip
   11f2c:	andeq	r3, r1, ip, lsr #5
   11f30:	andeq	r3, r1, r0, lsr #5
   11f34:	andeq	r3, r1, r0, lsl #5
   11f38:	andeq	r3, r1, r4, ror #4
   11f3c:	andeq	r3, r1, r8, asr r2
   11f40:	andeq	r3, r1, ip, lsr #4
   11f44:	andeq	r3, r1, r0, lsl r2
   11f48:	push	{r4, r5, r6, sl, fp, lr}
   11f4c:	add	fp, sp, #16
   11f50:	mov	r6, r1
   11f54:	mov	r4, r0
   11f58:	mov	r0, #1
   11f5c:	mov	r1, #32
   11f60:	mov	r5, r2
   11f64:	bl	12774 <getc@plt+0x1ba8>
   11f68:	mov	r1, r0
   11f6c:	str	r6, [r1, #8]
   11f70:	str	r5, [r1, #12]
   11f74:	ldr	r0, [r4, #24]
   11f78:	ldr	r3, [r4, #28]
   11f7c:	add	r2, r0, r6
   11f80:	add	r3, r3, r5
   11f84:	mov	r0, r4
   11f88:	strd	r2, [r4, #24]
   11f8c:	pop	{r4, r5, r6, sl, fp, lr}
   11f90:	b	13544 <error@@Base+0x910>
   11f94:	nop	{0}
   11f98:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   11f9c:	add	fp, sp, #24
   11fa0:	vpush	{d8}
   11fa4:	mov	r5, r0
   11fa8:	ldr	r0, [r0]
   11fac:	cmp	r0, #0
   11fb0:	beq	1215c <getc@plt+0x1590>
   11fb4:	mov	r8, r2
   11fb8:	mov	r9, r1
   11fbc:	mov	r1, #0
   11fc0:	mov	r2, r0
   11fc4:	ldr	r3, [r2, #4]
   11fc8:	ldr	r2, [r2, #8]
   11fcc:	cmp	r2, #0
   11fd0:	mov	r2, r3
   11fd4:	addgt	r1, r1, #1
   11fd8:	cmp	r3, #0
   11fdc:	bne	11fc4 <getc@plt+0x13f8>
   11fe0:	cmp	r1, #1
   11fe4:	bls	1215c <getc@plt+0x1590>
   11fe8:	ldrd	r2, [r5, #24]
   11fec:	ldr	r1, [r5, #12]
   11ff0:	vldr	d8, [pc, #368]	; 12168 <getc@plt+0x159c>
   11ff4:	vmov.i32	d19, #0	; 0x00000000
   11ff8:	sub	r4, r2, r3
   11ffc:	vmov	s2, r2
   12000:	vmov	s0, r4
   12004:	sub	r4, r1, #1
   12008:	vcvt.f64.s32	d16, s0
   1200c:	vmov	s0, r1
   12010:	vcvt.f64.s32	d17, s2
   12014:	mov	r1, r0
   12018:	vmul.f64	d18, d16, d8
   1201c:	vcvt.f64.s32	d16, s0
   12020:	vmov	s0, r4
   12024:	vdiv.f64	d20, d18, d17
   12028:	vcvt.f64.s32	d17, s0
   1202c:	vmul.f64	d18, d20, d16
   12030:	vstr	d20, [r5, #32]
   12034:	ldmib	r1, {r4, r7}
   12038:	ldr	r6, [r1, #12]
   1203c:	sub	r7, r2, r7
   12040:	sub	r6, r6, r3
   12044:	cmp	r4, #0
   12048:	add	r6, r6, r7
   1204c:	vmov	s2, r7
   12050:	vmov	s0, r6
   12054:	vcvt.f64.s32	d20, s0
   12058:	vcvt.f64.s32	d21, s2
   1205c:	vmul.f64	d20, d20, d8
   12060:	vdiv.f64	d20, d20, d21
   12064:	vmov.f64	d21, d18
   12068:	vmls.f64	d21, d20, d17
   1206c:	vstr	d20, [r1, #16]
   12070:	vadd.f64	d19, d19, d20
   12074:	vstr	d21, [r1, #24]
   12078:	mov	r1, r4
   1207c:	bne	12034 <getc@plt+0x1468>
   12080:	vmul.f64	d19, d19, d17
   12084:	vdiv.f64	d19, d19, d16
   12088:	vsub.f64	d19, d18, d19
   1208c:	vmov.i32	d18, #0	; 0x00000000
   12090:	vstr	d19, [r5, #40]	; 0x28
   12094:	vldr	d20, [r0, #24]
   12098:	ldr	r0, [r0, #4]
   1209c:	vsub.f64	d20, d20, d19
   120a0:	cmp	r0, #0
   120a4:	vmla.f64	d18, d20, d20
   120a8:	bne	12094 <getc@plt+0x14c8>
   120ac:	vdiv.f64	d17, d18, d17
   120b0:	vdiv.f64	d16, d17, d16
   120b4:	vsqrt.f64	d0, d16
   120b8:	vcmpe.f64	d0, d0
   120bc:	vmrs	APSR_nzcv, fpscr
   120c0:	bvc	120cc <getc@plt+0x1500>
   120c4:	vmov.f64	d0, d16
   120c8:	bl	10b6c <sqrt@plt>
   120cc:	vldr	d16, [pc, #156]	; 12170 <getc@plt+0x15a4>
   120d0:	vldr	d17, [r5, #40]	; 0x28
   120d4:	vmov.i32	d18, #0	; 0x00000000
   120d8:	vmov.f64	d20, d8
   120dc:	vmul.f64	d16, d0, d16
   120e0:	vsub.f64	d17, d17, d16
   120e4:	vcmpe.f64	d17, d8
   120e8:	vmrs	APSR_nzcv, fpscr
   120ec:	vcmpe.f64	d17, #0.0
   120f0:	vselgt.f64	d19, d8, d18
   120f4:	vmrs	APSR_nzcv, fpscr
   120f8:	vcmpe.f64	d17, d8
   120fc:	vmovmi.f64	d20, d19
   12100:	vmrs	APSR_nzcv, fpscr
   12104:	vcmpe.f64	d17, #0.0
   12108:	vselgt.f64	d19, d20, d17
   1210c:	vmrs	APSR_nzcv, fpscr
   12110:	vmovmi.f64	d19, d20
   12114:	vstr	d19, [r9]
   12118:	vldr	d17, [r5, #40]	; 0x28
   1211c:	vadd.f64	d16, d16, d17
   12120:	vcmpe.f64	d16, d8
   12124:	vmrs	APSR_nzcv, fpscr
   12128:	vcmpe.f64	d16, #0.0
   1212c:	vselgt.f64	d17, d8, d18
   12130:	vmrs	APSR_nzcv, fpscr
   12134:	vcmpe.f64	d16, d8
   12138:	vmovmi.f64	d8, d17
   1213c:	vmrs	APSR_nzcv, fpscr
   12140:	vcmpe.f64	d16, #0.0
   12144:	vselgt.f64	d17, d8, d16
   12148:	vmrs	APSR_nzcv, fpscr
   1214c:	vmovmi.f64	d17, d8
   12150:	vstr	d17, [r8]
   12154:	vpop	{d8}
   12158:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1215c:	ldr	r0, [pc, #20]	; 12178 <getc@plt+0x15ac>
   12160:	add	r0, pc, r0
   12164:	bl	12c34 <error@@Base>
   12168:	andeq	r0, r0, r0
   1216c:	subsmi	r0, r9, r0
   12170:			; <UNDEFINED> instruction: 0xf5c28f5c
   12174:	svccc	0x00ff5c28
   12178:	andeq	r1, r0, r1, lsl r9
   1217c:	push	{r4, r5, r6, sl, fp, lr}
   12180:	add	fp, sp, #16
   12184:	mov	r4, r0
   12188:	movw	r6, #503	; 0x1f7
   1218c:	mov	r5, r0
   12190:	mov	r0, r5
   12194:	bl	134e8 <error@@Base+0x8b4>
   12198:	subs	r6, r6, #1
   1219c:	add	r5, r5, #16
   121a0:	bne	12190 <getc@plt+0x15c4>
   121a4:	movw	r0, #8052	; 0x1f74
   121a8:	mov	r1, #0
   121ac:	str	r1, [r4, r0]
   121b0:	movw	r0, #8048	; 0x1f70
   121b4:	str	r1, [r4, r0]
   121b8:	pop	{r4, r5, r6, sl, fp, pc}
   121bc:	push	{r4, r5, r6, sl, fp, lr}
   121c0:	add	fp, sp, #16
   121c4:	mov	r5, r1
   121c8:	ldrb	r1, [r1]
   121cc:	mov	r4, #0
   121d0:	mov	r2, #0
   121d4:	cmp	r1, #0
   121d8:	beq	1220c <getc@plt+0x1640>
   121dc:	add	r3, r5, #1
   121e0:	mov	r2, #0
   121e4:	uxtab	r2, r2, r1
   121e8:	ldrb	r1, [r3], #1
   121ec:	cmp	r1, #0
   121f0:	bne	121e4 <getc@plt+0x1618>
   121f4:	movw	r1, #20065	; 0x4e61
   121f8:	movt	r1, #33354	; 0x824a
   121fc:	umull	r1, r3, r2, r1
   12200:	lsr	r1, r3, #8
   12204:	movw	r3, #503	; 0x1f7
   12208:	mls	r2, r1, r3, r2
   1220c:	ldr	r6, [r0, r2, lsl #4]
   12210:	cmp	r6, #0
   12214:	bne	1222c <getc@plt+0x1660>
   12218:	mov	r0, r4
   1221c:	pop	{r4, r5, r6, sl, fp, pc}
   12220:	ldr	r6, [r6, #4]
   12224:	cmp	r6, #0
   12228:	beq	12218 <getc@plt+0x164c>
   1222c:	ldr	r1, [r6, #8]
   12230:	mov	r0, r5
   12234:	bl	10a58 <strcmp@plt>
   12238:	cmp	r0, #0
   1223c:	bne	12220 <getc@plt+0x1654>
   12240:	mov	r4, r6
   12244:	mov	r0, r4
   12248:	pop	{r4, r5, r6, sl, fp, pc}
   1224c:	push	{r4, r5, fp, lr}
   12250:	add	fp, sp, #8
   12254:	mov	r4, r0
   12258:	ldr	r0, [r1, #8]
   1225c:	ldrb	r2, [r0]
   12260:	cmp	r2, #0
   12264:	beq	1229c <getc@plt+0x16d0>
   12268:	add	r3, r0, #1
   1226c:	mov	r0, #0
   12270:	uxtab	r0, r0, r2
   12274:	ldrb	r2, [r3], #1
   12278:	cmp	r2, #0
   1227c:	bne	12270 <getc@plt+0x16a4>
   12280:	movw	r2, #20065	; 0x4e61
   12284:	movt	r2, #33354	; 0x824a
   12288:	umull	r2, r3, r0, r2
   1228c:	lsr	r2, r3, #8
   12290:	movw	r3, #503	; 0x1f7
   12294:	mls	r0, r2, r3, r0
   12298:	b	122a0 <getc@plt+0x16d4>
   1229c:	mov	r0, #0
   122a0:	add	r0, r4, r0, lsl #4
   122a4:	bl	134f4 <error@@Base+0x8c0>
   122a8:	movw	r0, #8048	; 0x1f70
   122ac:	mov	r5, r4
   122b0:	ldr	r0, [r5, r0]!
   122b4:	cmp	r0, #0
   122b8:	beq	122c8 <getc@plt+0x16fc>
   122bc:	bl	10a7c <free@plt>
   122c0:	mov	r0, #0
   122c4:	str	r0, [r5]
   122c8:	movw	r0, #8052	; 0x1f74
   122cc:	ldr	r0, [r4, r0]!
   122d0:	add	r0, r0, #1
   122d4:	str	r0, [r4]
   122d8:	pop	{r4, r5, fp, pc}
   122dc:	push	{r4, r5, fp, lr}
   122e0:	add	fp, sp, #8
   122e4:	mov	r4, r0
   122e8:	ldr	r0, [r1, #8]
   122ec:	ldrb	r2, [r0]
   122f0:	cmp	r2, #0
   122f4:	beq	1232c <getc@plt+0x1760>
   122f8:	add	r3, r0, #1
   122fc:	mov	r0, #0
   12300:	uxtab	r0, r0, r2
   12304:	ldrb	r2, [r3], #1
   12308:	cmp	r2, #0
   1230c:	bne	12300 <getc@plt+0x1734>
   12310:	movw	r2, #20065	; 0x4e61
   12314:	movt	r2, #33354	; 0x824a
   12318:	umull	r2, r3, r0, r2
   1231c:	lsr	r2, r3, #8
   12320:	movw	r3, #503	; 0x1f7
   12324:	mls	r0, r2, r3, r0
   12328:	b	12330 <getc@plt+0x1764>
   1232c:	mov	r0, #0
   12330:	add	r0, r4, r0, lsl #4
   12334:	bl	1363c <error@@Base+0xa08>
   12338:	movw	r0, #8048	; 0x1f70
   1233c:	mov	r5, r4
   12340:	ldr	r0, [r5, r0]!
   12344:	cmp	r0, #0
   12348:	beq	12358 <getc@plt+0x178c>
   1234c:	bl	10a7c <free@plt>
   12350:	mov	r0, #0
   12354:	str	r0, [r5]
   12358:	movw	r0, #8052	; 0x1f74
   1235c:	ldr	r0, [r4, r0]!
   12360:	sub	r0, r0, #1
   12364:	str	r0, [r4]
   12368:	pop	{r4, r5, fp, pc}
   1236c:	push	{r4, r5, fp, lr}
   12370:	add	fp, sp, #8
   12374:	mov	r4, r0
   12378:	movw	r0, #8048	; 0x1f70
   1237c:	mov	r5, r4
   12380:	ldr	r0, [r5, r0]!
   12384:	cmp	r0, #0
   12388:	bne	123e4 <getc@plt+0x1818>
   1238c:	movw	r0, #8052	; 0x1f74
   12390:	ldr	r0, [r4, r0]
   12394:	cmp	r0, #0
   12398:	popeq	{r4, r5, fp, pc}
   1239c:	mov	r1, #4
   123a0:	bl	12774 <getc@plt+0x1ba8>
   123a4:	str	r0, [r5]
   123a8:	mov	r0, #0
   123ac:	movw	ip, #503	; 0x1f7
   123b0:	mov	r2, #0
   123b4:	ldr	r3, [r4, r2, lsl #4]
   123b8:	cmp	r3, #0
   123bc:	beq	123d8 <getc@plt+0x180c>
   123c0:	ldr	r1, [r5]
   123c4:	str	r3, [r1, r0, lsl #2]
   123c8:	add	r0, r0, #1
   123cc:	ldr	r3, [r3, #4]
   123d0:	cmp	r3, #0
   123d4:	bne	123c0 <getc@plt+0x17f4>
   123d8:	add	r2, r2, #1
   123dc:	cmp	r2, ip
   123e0:	bne	123b4 <getc@plt+0x17e8>
   123e4:	pop	{r4, r5, fp, pc}
   123e8:	push	{r4, r5, r6, r7, fp, lr}
   123ec:	add	fp, sp, #16
   123f0:	mov	r5, r1
   123f4:	mov	r4, r0
   123f8:	movw	r7, #503	; 0x1f7
   123fc:	mov	r6, r0
   12400:	mov	r0, r6
   12404:	mov	r1, r5
   12408:	bl	13708 <error@@Base+0xad4>
   1240c:	subs	r7, r7, #1
   12410:	add	r6, r6, #16
   12414:	bne	12400 <getc@plt+0x1834>
   12418:	movw	r0, #8048	; 0x1f70
   1241c:	mov	r5, r4
   12420:	ldr	r0, [r5, r0]!
   12424:	cmp	r0, #0
   12428:	beq	12438 <getc@plt+0x186c>
   1242c:	bl	10a7c <free@plt>
   12430:	mov	r0, #0
   12434:	str	r0, [r5]
   12438:	movw	r0, #8052	; 0x1f74
   1243c:	mov	r1, #0
   12440:	str	r1, [r4, r0]
   12444:	pop	{r4, r5, r6, r7, fp, pc}
   12448:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1244c:	add	fp, sp, #28
   12450:	push	{r0}		; (str r0, [sp, #-4]!)
   12454:	ldr	r0, [pc, #332]	; 125a8 <getc@plt+0x19dc>
   12458:	add	r0, pc, r0
   1245c:	ldrh	r0, [r0]
   12460:	cmp	r0, #0
   12464:	bne	12584 <getc@plt+0x19b8>
   12468:	ldr	r3, [pc, #316]	; 125ac <getc@plt+0x19e0>
   1246c:	ldr	r6, [pc, #316]	; 125b0 <getc@plt+0x19e4>
   12470:	mov	r4, #0
   12474:	mov	r7, #0
   12478:	mov	r8, #0
   1247c:	add	r3, pc, r3
   12480:	add	r6, pc, r6
   12484:	sxth	sl, r7
   12488:	cmp	sl, #1
   1248c:	blt	124fc <getc@plt+0x1930>
   12490:	ldr	r1, [pc, #284]	; 125b4 <getc@plt+0x19e8>
   12494:	add	r0, r8, r8, lsl #1
   12498:	add	r0, r3, r0, lsl #2
   1249c:	ldr	r5, [r0, #8]
   124a0:	ldr	r1, [pc, r1]
   124a4:	mov	r0, r5
   124a8:	bl	10a58 <strcmp@plt>
   124ac:	cmp	r0, #0
   124b0:	mov	r0, r4
   124b4:	mov	r9, #0
   124b8:	beq	12504 <getc@plt+0x1938>
   124bc:	ldr	r7, [pc, #244]	; 125b8 <getc@plt+0x19ec>
   124c0:	sxth	sl, r4
   124c4:	mov	r1, #1
   124c8:	add	r7, pc, r7
   124cc:	mov	r9, r1
   124d0:	cmp	r1, sl
   124d4:	bge	124f0 <getc@plt+0x1924>
   124d8:	ldr	r1, [r7, r9, lsl #2]
   124dc:	mov	r0, r5
   124e0:	bl	10a58 <strcmp@plt>
   124e4:	add	r1, r9, #1
   124e8:	cmp	r0, #0
   124ec:	bne	124cc <getc@plt+0x1900>
   124f0:	mov	r0, r4
   124f4:	mov	r7, r4
   124f8:	b	12504 <getc@plt+0x1938>
   124fc:	mov	r0, r7
   12500:	mov	r9, #0
   12504:	ldr	r3, [pc, #176]	; 125bc <getc@plt+0x19f0>
   12508:	cmp	r9, sl
   1250c:	add	r3, pc, r3
   12510:	bne	1254c <getc@plt+0x1980>
   12514:	uxth	r0, r7
   12518:	cmp	r0, #256	; 0x100
   1251c:	beq	1259c <getc@plt+0x19d0>
   12520:	ldr	r0, [pc, #152]	; 125c0 <getc@plt+0x19f4>
   12524:	add	r4, r7, #1
   12528:	add	r0, pc, r0
   1252c:	strh	r4, [r0]
   12530:	add	r0, r8, r8, lsl #1
   12534:	add	r0, r3, r0, lsl #2
   12538:	ldr	r1, [pc, #132]	; 125c4 <getc@plt+0x19f8>
   1253c:	ldr	r0, [r0, #8]
   12540:	add	r1, pc, r1
   12544:	str	r0, [r1, r9, lsl #2]
   12548:	mov	r0, r4
   1254c:	add	r1, r8, r8, lsl #1
   12550:	mov	r2, r3
   12554:	ldr	r1, [r2, r1, lsl #2]!
   12558:	ldr	r2, [r2, #4]
   1255c:	cmp	r1, r2
   12560:	bhi	12574 <getc@plt+0x19a8>
   12564:	strb	r9, [r6, r1]
   12568:	add	r1, r1, #1
   1256c:	cmp	r1, r2
   12570:	bls	12564 <getc@plt+0x1998>
   12574:	add	r8, r8, #1
   12578:	mov	r7, r0
   1257c:	cmp	r8, #91	; 0x5b
   12580:	bcc	12484 <getc@plt+0x18b8>
   12584:	ldr	r0, [pc, #60]	; 125c8 <getc@plt+0x19fc>
   12588:	ldr	r1, [sp]
   1258c:	add	r0, pc, r0
   12590:	ldrb	r0, [r0, r1]
   12594:	sub	sp, fp, #28
   12598:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1259c:	ldr	r0, [pc, #40]	; 125cc <getc@plt+0x1a00>
   125a0:	add	r0, pc, r0
   125a4:	bl	12c34 <error@@Base>
   125a8:	andeq	r2, r1, r0, ror #25
   125ac:	andeq	r2, r1, r8, lsr r6
   125b0:			; <UNDEFINED> instruction: 0x00012cba
   125b4:	mulseq	r2, ip, ip
   125b8:	andseq	r2, r2, r4, ror ip
   125bc:	andeq	r2, r1, r8, lsr #11
   125c0:	andeq	r2, r1, r0, lsl ip
   125c4:			; <UNDEFINED> instruction: 0x00122bfc
   125c8:	andeq	r2, r1, lr, lsr #23
   125cc:	andeq	r1, r0, r1, lsl #10
   125d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   125d4:	add	fp, sp, #28
   125d8:	push	{r0}		; (str r0, [sp, #-4]!)
   125dc:	ldr	r0, [pc, #356]	; 12748 <getc@plt+0x1b7c>
   125e0:	add	r0, pc, r0
   125e4:	ldrh	r6, [r0]
   125e8:	cmp	r6, #0
   125ec:	bne	1270c <getc@plt+0x1b40>
   125f0:	ldr	r3, [pc, #340]	; 1274c <getc@plt+0x1b80>
   125f4:	ldr	r4, [pc, #340]	; 12750 <getc@plt+0x1b84>
   125f8:	mov	r6, #0
   125fc:	mov	r7, #0
   12600:	mov	r8, #0
   12604:	add	r3, pc, r3
   12608:	add	r4, pc, r4
   1260c:	sxth	sl, r7
   12610:	cmp	sl, #1
   12614:	blt	12684 <getc@plt+0x1ab8>
   12618:	ldr	r1, [pc, #308]	; 12754 <getc@plt+0x1b88>
   1261c:	add	r0, r8, r8, lsl #1
   12620:	add	r0, r3, r0, lsl #2
   12624:	ldr	r5, [r0, #8]
   12628:	ldr	r1, [pc, r1]
   1262c:	mov	r0, r5
   12630:	bl	10a58 <strcmp@plt>
   12634:	cmp	r0, #0
   12638:	mov	r0, r6
   1263c:	mov	r9, #0
   12640:	beq	1268c <getc@plt+0x1ac0>
   12644:	ldr	r7, [pc, #268]	; 12758 <getc@plt+0x1b8c>
   12648:	sxth	sl, r6
   1264c:	mov	r1, #1
   12650:	add	r7, pc, r7
   12654:	mov	r9, r1
   12658:	cmp	r1, sl
   1265c:	bge	12678 <getc@plt+0x1aac>
   12660:	ldr	r1, [r7, r9, lsl #2]
   12664:	mov	r0, r5
   12668:	bl	10a58 <strcmp@plt>
   1266c:	add	r1, r9, #1
   12670:	cmp	r0, #0
   12674:	bne	12654 <getc@plt+0x1a88>
   12678:	mov	r0, r6
   1267c:	mov	r7, r6
   12680:	b	1268c <getc@plt+0x1ac0>
   12684:	mov	r0, r7
   12688:	mov	r9, #0
   1268c:	ldr	r3, [pc, #200]	; 1275c <getc@plt+0x1b90>
   12690:	cmp	r9, sl
   12694:	add	r3, pc, r3
   12698:	bne	126d4 <getc@plt+0x1b08>
   1269c:	uxth	r0, r7
   126a0:	cmp	r0, #256	; 0x100
   126a4:	beq	1273c <getc@plt+0x1b70>
   126a8:	ldr	r0, [pc, #176]	; 12760 <getc@plt+0x1b94>
   126ac:	add	r6, r7, #1
   126b0:	add	r0, pc, r0
   126b4:	strh	r6, [r0]
   126b8:	add	r0, r8, r8, lsl #1
   126bc:	add	r0, r3, r0, lsl #2
   126c0:	ldr	r1, [pc, #156]	; 12764 <getc@plt+0x1b98>
   126c4:	ldr	r0, [r0, #8]
   126c8:	add	r1, pc, r1
   126cc:	str	r0, [r1, r9, lsl #2]
   126d0:	mov	r0, r6
   126d4:	add	r1, r8, r8, lsl #1
   126d8:	mov	r2, r3
   126dc:	ldr	r1, [r2, r1, lsl #2]!
   126e0:	ldr	r2, [r2, #4]
   126e4:	cmp	r1, r2
   126e8:	bhi	126fc <getc@plt+0x1b30>
   126ec:	strb	r9, [r4, r1]
   126f0:	add	r1, r1, #1
   126f4:	cmp	r1, r2
   126f8:	bls	126ec <getc@plt+0x1b20>
   126fc:	add	r8, r8, #1
   12700:	mov	r7, r0
   12704:	cmp	r8, #91	; 0x5b
   12708:	bcc	1260c <getc@plt+0x1a40>
   1270c:	ldr	r0, [sp]
   12710:	sxth	r1, r6
   12714:	uxtb	r0, r0
   12718:	cmp	r0, r1
   1271c:	ldrlt	r1, [pc, #68]	; 12768 <getc@plt+0x1b9c>
   12720:	addlt	r1, pc, r1
   12724:	ldrlt	r0, [r1, r0, lsl #2]
   12728:	sublt	sp, fp, #28
   1272c:	poplt	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12730:	ldr	r0, [pc, #56]	; 12770 <getc@plt+0x1ba4>
   12734:	add	r0, pc, r0
   12738:	bl	12c34 <error@@Base>
   1273c:	ldr	r0, [pc, #40]	; 1276c <getc@plt+0x1ba0>
   12740:	add	r0, pc, r0
   12744:	bl	12c34 <error@@Base>
   12748:	andeq	r2, r1, r8, asr fp
   1274c:			; <UNDEFINED> instruction: 0x000124b0
   12750:	andeq	r2, r1, r2, lsr fp
   12754:	andseq	r2, r2, r4, lsl fp
   12758:	andseq	r2, r2, ip, ror #21
   1275c:	andeq	r2, r1, r0, lsr #8
   12760:	andeq	r2, r1, r8, lsl #21
   12764:	andseq	r2, r2, r4, ror sl
   12768:	andseq	r2, r2, ip, lsl sl
   1276c:	andeq	r1, r0, r1, ror #6
   12770:	andeq	r1, r0, r5, asr r3
   12774:	push	{fp, lr}
   12778:	mov	fp, sp
   1277c:	bl	10a4c <calloc@plt>
   12780:	cmp	r0, #0
   12784:	popne	{fp, pc}
   12788:	ldr	r0, [pc, #4]	; 12794 <getc@plt+0x1bc8>
   1278c:	add	r0, pc, r0
   12790:	bl	12c34 <error@@Base>
   12794:	andeq	r1, r0, r3, ror #17
   12798:	push	{r4, r5, r6, sl, fp, lr}
   1279c:	add	fp, sp, #16
   127a0:	ldrb	r3, [r0]
   127a4:	ldrb	ip, [r1]
   127a8:	mov	r2, r0
   127ac:	mov	r0, #0
   127b0:	cmp	r3, #0
   127b4:	beq	127ec <getc@plt+0x1c20>
   127b8:	add	r6, r2, #1
   127bc:	add	lr, r1, #1
   127c0:	mov	r2, #0
   127c4:	uxtb	r4, ip
   127c8:	uxtb	r5, r3
   127cc:	cmp	r5, r4
   127d0:	bne	127fc <getc@plt+0x1c30>
   127d4:	ldrb	r3, [r6, r2]
   127d8:	ldrb	ip, [lr, r2]
   127dc:	add	r2, r2, #1
   127e0:	cmp	r3, #0
   127e4:	bne	127c4 <getc@plt+0x1bf8>
   127e8:	b	127f0 <getc@plt+0x1c24>
   127ec:	mov	r2, #0
   127f0:	cmp	ip, #0
   127f4:	popeq	{r4, r5, r6, sl, fp, pc}
   127f8:	mov	r3, #0
   127fc:	ldrb	r1, [r1, r2]
   12800:	uxtb	r2, r3
   12804:	mov	r0, #1
   12808:	cmp	r2, r1
   1280c:	mvncc	r0, #0
   12810:	pop	{r4, r5, r6, sl, fp, pc}
   12814:	push	{r4, r5, fp, lr}
   12818:	add	fp, sp, #8
   1281c:	mov	r5, r1
   12820:	cmp	r0, #0
   12824:	beq	12858 <getc@plt+0x1c8c>
   12828:	mov	r1, r5
   1282c:	mov	r4, r0
   12830:	bl	10a70 <fopen@plt>
   12834:	cmp	r0, #0
   12838:	popne	{r4, r5, fp, pc}
   1283c:	ldrb	r0, [r5]
   12840:	cmp	r0, #119	; 0x77
   12844:	bne	1287c <getc@plt+0x1cb0>
   12848:	ldr	r0, [pc, #72]	; 12898 <getc@plt+0x1ccc>
   1284c:	mov	r1, r4
   12850:	add	r0, pc, r0
   12854:	bl	12c84 <error@@Base+0x50>
   12858:	ldrb	r0, [r5]
   1285c:	ldr	r1, [pc, #40]	; 1288c <getc@plt+0x1cc0>
   12860:	ldr	r1, [pc, r1]
   12864:	ldr	r2, [pc, #36]	; 12890 <getc@plt+0x1cc4>
   12868:	cmp	r0, #114	; 0x72
   1286c:	ldr	r2, [pc, r2]
   12870:	moveq	r2, r1
   12874:	ldr	r0, [r2]
   12878:	pop	{r4, r5, fp, pc}
   1287c:	ldr	r0, [pc, #16]	; 12894 <getc@plt+0x1cc8>
   12880:	mov	r1, r4
   12884:	add	r0, pc, r0
   12888:	bl	12c84 <error@@Base+0x50>
   1288c:	andeq	r2, r1, ip, asr #16
   12890:	andeq	r2, r1, r4, asr #16
   12894:	andeq	r1, r0, fp, lsl r8
   12898:	andeq	r1, r0, r9, lsr r8
   1289c:	ldr	r1, [pc, #32]	; 128c4 <getc@plt+0x1cf8>
   128a0:	ldr	r1, [pc, r1]
   128a4:	ldr	r1, [r1]
   128a8:	cmp	r1, r0
   128ac:	ldrne	r1, [pc, #20]	; 128c8 <getc@plt+0x1cfc>
   128b0:	ldrne	r1, [pc, r1]
   128b4:	ldrne	r1, [r1]
   128b8:	cmpne	r1, r0
   128bc:	bxeq	lr
   128c0:	b	10b84 <fclose@plt>
   128c4:	andeq	r2, r1, ip, lsl #16
   128c8:	andeq	r2, r1, r0, lsl #16
   128cc:	push	{fp, lr}
   128d0:	mov	fp, sp
   128d4:	sub	sp, sp, #88	; 0x58
   128d8:	mov	r1, r0
   128dc:	mov	r2, sp
   128e0:	mov	r0, #3
   128e4:	bl	10adc <__xstat@plt>
   128e8:	clz	r0, r0
   128ec:	lsr	r0, r0, #5
   128f0:	mov	sp, fp
   128f4:	pop	{fp, pc}
   128f8:	push	{r4, r5, fp, lr}
   128fc:	add	fp, sp, #8
   12900:	sub	sp, sp, #104	; 0x68
   12904:	ldr	r0, [pc, #92]	; 12968 <getc@plt+0x1d9c>
   12908:	add	r0, pc, r0
   1290c:	ldrh	r1, [r0]
   12910:	add	r5, r1, #1
   12914:	strh	r5, [r0]
   12918:	ldr	r0, [pc, #76]	; 1296c <getc@plt+0x1da0>
   1291c:	ldr	r0, [pc, r0]
   12920:	ldr	r4, [r0]
   12924:	bl	10b30 <getpid@plt>
   12928:	mov	r3, r0
   1292c:	sxth	r0, r5
   12930:	add	r5, sp, #4
   12934:	mov	r2, r4
   12938:	str	r0, [sp]
   1293c:	mov	r0, r5
   12940:	ldr	r1, [pc, #40]	; 12970 <getc@plt+0x1da4>
   12944:	add	r1, pc, r1
   12948:	bl	10b90 <sprintf@plt>
   1294c:	mov	r0, r5
   12950:	bl	10aac <strdup@plt>
   12954:	mov	r4, r0
   12958:	bl	10ac4 <unlink@plt>
   1295c:	mov	r0, r4
   12960:	sub	sp, fp, #8
   12964:	pop	{r4, r5, fp, pc}
   12968:	andseq	r2, r2, r4, lsr ip
   1296c:	andeq	r2, r1, r0, lsl #15
   12970:	andeq	r1, r0, r4, lsl #15
   12974:	push	{r4, sl, fp, lr}
   12978:	add	fp, sp, #8
   1297c:	mov	r4, r0
   12980:	bl	10b54 <strlen@plt>
   12984:	sub	r0, r0, #1
   12988:	sxth	r0, r0
   1298c:	cmp	r0, #0
   12990:	blt	129a0 <getc@plt+0x1dd4>
   12994:	ldrb	r1, [r4, r0]
   12998:	cmp	r1, #47	; 0x2f
   1299c:	bne	12984 <getc@plt+0x1db8>
   129a0:	add	r0, r4, r0
   129a4:	add	r0, r0, #1
   129a8:	pop	{r4, sl, fp, pc}
   129ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   129b0:	add	fp, sp, #28
   129b4:	sub	sp, sp, #12
   129b8:	str	r2, [sp]
   129bc:	stmib	sp, {r0, r1}
   129c0:	mov	r6, r3
   129c4:	ldr	r4, [r1]
   129c8:	mov	r0, r4
   129cc:	bl	10b54 <strlen@plt>
   129d0:	sub	r0, r0, #1
   129d4:	sxth	r0, r0
   129d8:	cmp	r0, #0
   129dc:	blt	129ec <getc@plt+0x1e20>
   129e0:	ldrb	r1, [r4, r0]
   129e4:	cmp	r1, #47	; 0x2f
   129e8:	bne	129d0 <getc@plt+0x1e04>
   129ec:	ldr	r1, [pc, #484]	; 12bd8 <getc@plt+0x200c>
   129f0:	add	r0, r4, r0
   129f4:	add	r0, r0, #1
   129f8:	ldr	r1, [pc, r1]
   129fc:	str	r0, [r1]
   12a00:	mov	r0, #2
   12a04:	ldr	r4, [pc, #464]	; 12bdc <getc@plt+0x2010>
   12a08:	add	r4, pc, r4
   12a0c:	mov	r1, r4
   12a10:	bl	10b18 <__sysv_signal@plt>
   12a14:	mov	r0, #15
   12a18:	mov	r1, r4
   12a1c:	bl	10b18 <__sysv_signal@plt>
   12a20:	ldr	r0, [sp, #4]
   12a24:	ldr	r5, [r0]
   12a28:	cmp	r5, #1
   12a2c:	bne	12a44 <getc@plt+0x1e78>
   12a30:	ldr	r0, [pc, #424]	; 12be0 <getc@plt+0x2014>
   12a34:	ldr	r0, [pc, r0]
   12a38:	ldrb	r0, [r0]
   12a3c:	cmp	r0, #0
   12a40:	bne	12bc0 <getc@plt+0x1ff4>
   12a44:	ldr	ip, [sp, #8]
   12a48:	mov	r8, #0
   12a4c:	cmp	r5, #2
   12a50:	blt	12b9c <getc@plt+0x1fd0>
   12a54:	mov	r8, #0
   12a58:	mov	r7, #1
   12a5c:	mov	r9, #1
   12a60:	ldr	r4, [ip, r7, lsl #2]
   12a64:	ldrb	r0, [r4]
   12a68:	cmp	r0, #45	; 0x2d
   12a6c:	bne	12b44 <getc@plt+0x1f78>
   12a70:	ldrb	sl, [r4, #1]
   12a74:	cmp	sl, #0
   12a78:	beq	12b44 <getc@plt+0x1f78>
   12a7c:	mov	r0, r4
   12a80:	bl	10b54 <strlen@plt>
   12a84:	mov	r2, r0
   12a88:	ldr	r0, [pc, #340]	; 12be4 <getc@plt+0x2018>
   12a8c:	mov	r1, r4
   12a90:	add	r0, pc, r0
   12a94:	bl	10bb4 <strncmp@plt>
   12a98:	cmp	r0, #0
   12a9c:	beq	12bc0 <getc@plt+0x1ff4>
   12aa0:	ldr	ip, [sp, #8]
   12aa4:	add	r1, r7, #1
   12aa8:	mov	r0, #0
   12aac:	cmp	r1, r5
   12ab0:	ldrlt	r0, [ip, r1, lsl #2]
   12ab4:	cmp	r6, #0
   12ab8:	ldrbne	r2, [r6]
   12abc:	cmpne	r2, #0
   12ac0:	beq	12bb0 <getc@plt+0x1fe4>
   12ac4:	mov	r1, #0
   12ac8:	cmp	sl, r2
   12acc:	beq	12af4 <getc@plt+0x1f28>
   12ad0:	mov	r2, #1
   12ad4:	sxth	r1, r2
   12ad8:	add	r3, r1, r1, lsl #1
   12adc:	ldrb	r3, [r6, r3, lsl #2]
   12ae0:	cmp	r3, #0
   12ae4:	beq	12bb0 <getc@plt+0x1fe4>
   12ae8:	add	r2, r2, #1
   12aec:	cmp	sl, r3
   12af0:	bne	12ad4 <getc@plt+0x1f08>
   12af4:	add	r1, r1, r1, lsl #1
   12af8:	add	r3, r6, r1, lsl #2
   12afc:	ldr	r1, [r3, #4]
   12b00:	cmp	r1, #0
   12b04:	beq	12b64 <getc@plt+0x1f98>
   12b08:	mov	r2, r4
   12b0c:	cmp	r0, #0
   12b10:	ldrb	r7, [r2, #2]!
   12b14:	cmpeq	r7, #0
   12b18:	beq	12b64 <getc@plt+0x1f98>
   12b1c:	ldr	r3, [r1]
   12b20:	cmp	r3, #0
   12b24:	bne	12bc8 <getc@plt+0x1ffc>
   12b28:	cmp	r7, #0
   12b2c:	movne	r0, r2
   12b30:	str	r0, [r1]
   12b34:	ldrb	r0, [r2]
   12b38:	cmp	r0, #0
   12b3c:	addeq	r9, r9, #1
   12b40:	b	12b50 <getc@plt+0x1f84>
   12b44:	sxth	r0, r8
   12b48:	add	r8, r8, #1
   12b4c:	str	r4, [ip, r0, lsl #2]
   12b50:	add	r9, r9, #1
   12b54:	sxth	r7, r9
   12b58:	cmp	r5, r7
   12b5c:	bgt	12a60 <getc@plt+0x1e94>
   12b60:	b	12b9c <getc@plt+0x1fd0>
   12b64:	ldr	r0, [r3, #8]
   12b68:	cmp	r0, #0
   12b6c:	beq	12bb0 <getc@plt+0x1fe4>
   12b70:	ldrb	r1, [r4, #2]
   12b74:	cmp	r1, #0
   12b78:	bne	12bb0 <getc@plt+0x1fe4>
   12b7c:	ldrb	r1, [r0]
   12b80:	cmp	r1, #0
   12b84:	bne	12bc8 <getc@plt+0x1ffc>
   12b88:	mov	r1, #1
   12b8c:	strb	r1, [r0]
   12b90:	ldr	r0, [sp, #4]
   12b94:	ldr	r5, [r0]
   12b98:	b	12b50 <getc@plt+0x1f84>
   12b9c:	ldr	r1, [sp, #4]
   12ba0:	sxth	r0, r8
   12ba4:	str	r0, [r1]
   12ba8:	sub	sp, fp, #28
   12bac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12bb0:	ldr	r0, [pc, #52]	; 12bec <getc@plt+0x2020>
   12bb4:	mov	r1, r4
   12bb8:	add	r0, pc, r0
   12bbc:	bl	12c84 <error@@Base+0x50>
   12bc0:	ldr	r0, [sp]
   12bc4:	bl	12d60 <error@@Base+0x12c>
   12bc8:	ldr	r0, [pc, #24]	; 12be8 <getc@plt+0x201c>
   12bcc:	mov	r1, r4
   12bd0:	add	r0, pc, r0
   12bd4:	bl	12c84 <error@@Base+0x50>
   12bd8:	andeq	r2, r1, r4, lsr #13
   12bdc:	andeq	r0, r0, r8, lsl r3
   12be0:	andeq	r2, r1, r4, asr r6
   12be4:	andeq	r1, r0, r5, asr r6
   12be8:	andeq	r1, r0, r9, lsr r5
   12bec:	andeq	r1, r0, r2, asr #10
   12bf0:	push	{fp, lr}
   12bf4:	mov	fp, sp
   12bf8:	mov	r0, #0
   12bfc:	bl	12c00 <getc@plt+0x2034>
   12c00:	push	{fp, lr}
   12c04:	mov	fp, sp
   12c08:	mov	r4, r0
   12c0c:	ldr	r0, [pc, #28]	; 12c30 <getc@plt+0x2064>
   12c10:	ldr	r0, [pc, r0]
   12c14:	ldr	r0, [r0]
   12c18:	cmp	r0, #0
   12c1c:	beq	12c24 <getc@plt+0x2058>
   12c20:	blx	r0
   12c24:	bl	12dc0 <error@@Base+0x18c>
   12c28:	mov	r0, r4
   12c2c:	bl	10b3c <exit@plt>
   12c30:	muleq	r1, r4, r4

00012c34 <error@@Base>:
   12c34:	push	{fp, lr}
   12c38:	mov	fp, sp
   12c3c:	mov	r3, r0
   12c40:	ldr	r0, [pc, #44]	; 12c74 <error@@Base+0x40>
   12c44:	ldr	r0, [pc, r0]
   12c48:	ldr	r2, [r0]
   12c4c:	ldr	r0, [pc, #36]	; 12c78 <error@@Base+0x44>
   12c50:	ldr	r0, [pc, r0]
   12c54:	ldr	r0, [r0]
   12c58:	ldr	r1, [pc, #28]	; 12c7c <error@@Base+0x48>
   12c5c:	add	r1, pc, r1
   12c60:	bl	10b60 <fprintf@plt>
   12c64:	ldr	r0, [pc, #20]	; 12c80 <error@@Base+0x4c>
   12c68:	ldr	r0, [pc, r0]
   12c6c:	ldr	r0, [r0]
   12c70:	bl	12c00 <getc@plt+0x2034>
   12c74:	andeq	r2, r1, r8, asr r4
   12c78:	andeq	r2, r1, r4, asr #8
   12c7c:	andeq	r1, r0, r7, asr r4
   12c80:	andeq	r2, r1, ip, asr #8
   12c84:	push	{fp, lr}
   12c88:	mov	fp, sp
   12c8c:	sub	sp, sp, #8
   12c90:	mov	r3, r0
   12c94:	ldr	r0, [pc, #48]	; 12ccc <error@@Base+0x98>
   12c98:	ldr	r0, [pc, r0]
   12c9c:	ldr	r2, [r0]
   12ca0:	ldr	r0, [pc, #40]	; 12cd0 <error@@Base+0x9c>
   12ca4:	ldr	r0, [pc, r0]
   12ca8:	str	r1, [sp]
   12cac:	ldr	r0, [r0]
   12cb0:	ldr	r1, [pc, #28]	; 12cd4 <error@@Base+0xa0>
   12cb4:	add	r1, pc, r1
   12cb8:	bl	10b60 <fprintf@plt>
   12cbc:	ldr	r0, [pc, #20]	; 12cd8 <error@@Base+0xa4>
   12cc0:	ldr	r0, [pc, r0]
   12cc4:	ldr	r0, [r0]
   12cc8:	bl	12c00 <getc@plt+0x2034>
   12ccc:	andeq	r2, r1, r4, lsl #8
   12cd0:	strdeq	r2, [r1], -r0
   12cd4:	andeq	r1, r0, r7, lsl #8
   12cd8:	strdeq	r2, [r1], -r4
   12cdc:	push	{fp, lr}
   12ce0:	mov	fp, sp
   12ce4:	sub	sp, sp, #8
   12ce8:	mov	r3, r0
   12cec:	ldr	r0, [pc, #40]	; 12d1c <error@@Base+0xe8>
   12cf0:	ldr	r0, [pc, r0]
   12cf4:	ldr	r2, [r0]
   12cf8:	ldr	r0, [pc, #32]	; 12d20 <error@@Base+0xec>
   12cfc:	ldr	r0, [pc, r0]
   12d00:	str	r1, [sp]
   12d04:	ldr	r0, [r0]
   12d08:	ldr	r1, [pc, #20]	; 12d24 <error@@Base+0xf0>
   12d0c:	add	r1, pc, r1
   12d10:	bl	10b60 <fprintf@plt>
   12d14:	mov	sp, fp
   12d18:	pop	{fp, pc}
   12d1c:	andeq	r2, r1, ip, lsr #7
   12d20:	muleq	r1, r8, r3
   12d24:	andeq	r1, r0, pc, lsr #7
   12d28:	ldr	r0, [pc, #40]	; 12d58 <error@@Base+0x124>
   12d2c:	add	r0, pc, r0
   12d30:	ldrb	r1, [r0]
   12d34:	cmp	r1, #1
   12d38:	bxeq	lr
   12d3c:	push	{fp, lr}
   12d40:	mov	fp, sp
   12d44:	mov	r1, #1
   12d48:	strb	r1, [r0]
   12d4c:	ldr	r0, [pc, #8]	; 12d5c <error@@Base+0x128>
   12d50:	add	r0, pc, r0
   12d54:	bl	12c34 <error@@Base>
   12d58:	andseq	r2, r2, r2, lsl r8
   12d5c:	andeq	r1, r0, r6, lsl #7
   12d60:	push	{fp, lr}
   12d64:	mov	fp, sp
   12d68:	mov	r3, r0
   12d6c:	ldr	r0, [pc, #60]	; 12db0 <error@@Base+0x17c>
   12d70:	ldr	r0, [pc, r0]
   12d74:	ldr	r0, [r0]
   12d78:	cmp	r0, #0
   12d7c:	bne	12da8 <error@@Base+0x174>
   12d80:	ldr	r0, [pc, #44]	; 12db4 <error@@Base+0x180>
   12d84:	ldr	r0, [pc, r0]
   12d88:	ldr	r2, [r0]
   12d8c:	ldr	r0, [pc, #36]	; 12db8 <error@@Base+0x184>
   12d90:	ldr	r0, [pc, r0]
   12d94:	ldr	r0, [r0]
   12d98:	ldr	r1, [pc, #28]	; 12dbc <error@@Base+0x188>
   12d9c:	add	r1, pc, r1
   12da0:	bl	10b60 <fprintf@plt>
   12da4:	bl	12bf0 <getc@plt+0x2024>
   12da8:	blx	r0
   12dac:	bl	12bf0 <getc@plt+0x2024>
   12db0:	andeq	r2, r1, r0, lsr #6
   12db4:	andeq	r2, r1, r8, lsl r3
   12db8:	andeq	r2, r1, r4, lsl #6
   12dbc:	andeq	r1, r0, pc, asr #6
   12dc0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12dc4:	add	fp, sp, #24
   12dc8:	sub	sp, sp, #104	; 0x68
   12dcc:	ldr	r8, [pc, #124]	; 12e50 <error@@Base+0x21c>
   12dd0:	add	r8, pc, r8
   12dd4:	ldrsh	r0, [r8]
   12dd8:	cmp	r0, #1
   12ddc:	blt	12e48 <error@@Base+0x214>
   12de0:	ldr	r9, [pc, #108]	; 12e54 <error@@Base+0x220>
   12de4:	mov	r7, #1
   12de8:	add	r4, sp, #4
   12dec:	ldr	r9, [pc, r9]
   12df0:	ldr	r5, [pc, #96]	; 12e58 <error@@Base+0x224>
   12df4:	add	r5, pc, r5
   12df8:	ldr	r6, [r9]
   12dfc:	bl	10b30 <getpid@plt>
   12e00:	mov	r3, r0
   12e04:	sxth	r0, r7
   12e08:	mov	r1, r5
   12e0c:	mov	r2, r6
   12e10:	str	r0, [sp]
   12e14:	mov	r0, r4
   12e18:	bl	10b90 <sprintf@plt>
   12e1c:	mov	r0, r4
   12e20:	bl	10aac <strdup@plt>
   12e24:	mov	r6, r0
   12e28:	bl	10ac4 <unlink@plt>
   12e2c:	mov	r0, r6
   12e30:	bl	10a7c <free@plt>
   12e34:	add	r0, r7, #1
   12e38:	sxth	r7, r0
   12e3c:	ldrsh	r0, [r8]
   12e40:	cmp	r7, r0
   12e44:	ble	12df8 <error@@Base+0x1c4>
   12e48:	sub	sp, fp, #24
   12e4c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   12e50:	andseq	r2, r2, ip, ror #14
   12e54:			; <UNDEFINED> instruction: 0x000122b0
   12e58:	ldrdeq	r1, [r0], -r4
   12e5c:	push	{r4, r5, r6, sl, fp, lr}
   12e60:	add	fp, sp, #16
   12e64:	mov	r5, r1
   12e68:	mov	r6, r0
   12e6c:	mov	r0, #1
   12e70:	mov	r1, #16
   12e74:	mov	r4, r2
   12e78:	bl	12774 <getc@plt+0x1ba8>
   12e7c:	strb	r5, [r0, #8]
   12e80:	mov	r1, r0
   12e84:	str	r4, [r0, #12]
   12e88:	mov	r0, r6
   12e8c:	pop	{r4, r5, r6, sl, fp, lr}
   12e90:	b	13544 <error@@Base+0x910>
   12e94:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12e98:	add	fp, sp, #28
   12e9c:	sub	sp, sp, #124	; 0x7c
   12ea0:	mov	r4, r2
   12ea4:	mov	r2, r1
   12ea8:	cmp	r1, #0
   12eac:	str	r0, [sp, #16]
   12eb0:	bne	12ec0 <error@@Base+0x28c>
   12eb4:	ldrb	r0, [r4]
   12eb8:	cmp	r0, #0
   12ebc:	bne	131ec <error@@Base+0x5b8>
   12ec0:	ldr	r0, [sp, #16]
   12ec4:	ldr	r0, [r0, #4]
   12ec8:	str	r0, [sp, #4]
   12ecc:	mov	r0, r2
   12ed0:	ldr	r1, [pc, #808]	; 13200 <error@@Base+0x5cc>
   12ed4:	add	r1, pc, r1
   12ed8:	bl	12814 <getc@plt+0x1c48>
   12edc:	mov	r6, r0
   12ee0:	ldrb	r0, [r4]
   12ee4:	cmp	r0, #0
   12ee8:	beq	12f30 <error@@Base+0x2fc>
   12eec:	add	r0, sp, #20
   12ef0:	mov	r1, #99	; 0x63
   12ef4:	mov	r2, r6
   12ef8:	bl	10a94 <fgets@plt>
   12efc:	cmp	r0, #0
   12f00:	beq	12f20 <error@@Base+0x2ec>
   12f04:	ldr	r1, [pc, #760]	; 13204 <error@@Base+0x5d0>
   12f08:	add	r0, sp, #20
   12f0c:	mov	r2, #51	; 0x33
   12f10:	add	r1, pc, r1
   12f14:	bl	10bb4 <strncmp@plt>
   12f18:	cmp	r0, #0
   12f1c:	beq	1317c <error@@Base+0x548>
   12f20:	mov	r0, r6
   12f24:	bl	10ab8 <rewind@plt>
   12f28:	mov	r5, #0
   12f2c:	strb	r5, [r4, #11]
   12f30:	ldr	r9, [r4, #4]
   12f34:	ldrb	r8, [r4, #1]
   12f38:	mov	r0, r6
   12f3c:	str	r4, [sp, #8]
   12f40:	cmp	r9, #0
   12f44:	movweq	r9, #94	; 0x5e
   12f48:	bl	10bcc <getc@plt>
   12f4c:	cmn	r0, #1
   12f50:	beq	13014 <error@@Base+0x3e0>
   12f54:	add	r1, sp, #20
   12f58:	mov	sl, #0
   12f5c:	sub	r4, fp, #32
   12f60:	add	r1, r1, #1
   12f64:	str	r1, [sp, #12]
   12f68:	ldr	r1, [pc, #668]	; 1320c <error@@Base+0x5d8>
   12f6c:	ldr	r1, [pc, r1]
   12f70:	add	r1, r1, r0
   12f74:	ldrsb	r5, [r1]
   12f78:	cmp	r5, #0
   12f7c:	ble	131cc <error@@Base+0x598>
   12f80:	cmp	r5, #1
   12f84:	strb	r0, [sp, #20]
   12f88:	beq	12fac <error@@Base+0x378>
   12f8c:	ldr	r0, [sp, #12]
   12f90:	sub	r7, r5, #1
   12f94:	mov	r1, #1
   12f98:	mov	r3, r6
   12f9c:	mov	r2, r7
   12fa0:	bl	10af4 <fread@plt>
   12fa4:	cmp	r0, r7
   12fa8:	bne	131e0 <error@@Base+0x5ac>
   12fac:	add	r0, sp, #20
   12fb0:	mov	r1, #4
   12fb4:	mov	r2, r4
   12fb8:	bl	10b00 <utf8proc_iterate@plt>
   12fbc:	cmp	r0, r5
   12fc0:	bne	131d8 <error@@Base+0x5a4>
   12fc4:	ldr	r5, [fp, #-32]	; 0xffffffe0
   12fc8:	cmp	r8, #0
   12fcc:	beq	12fdc <error@@Base+0x3a8>
   12fd0:	mov	r7, #1
   12fd4:	cmp	r5, r9
   12fd8:	beq	13000 <error@@Base+0x3cc>
   12fdc:	mov	r0, #1
   12fe0:	mov	r1, #16
   12fe4:	bl	12774 <getc@plt+0x1ba8>
   12fe8:	strb	sl, [r0, #8]
   12fec:	mov	r1, r0
   12ff0:	str	r5, [r0, #12]
   12ff4:	ldr	r0, [sp, #16]
   12ff8:	bl	13544 <error@@Base+0x910>
   12ffc:	mov	r7, #0
   13000:	mov	r0, r6
   13004:	bl	10bcc <getc@plt>
   13008:	cmn	r0, #1
   1300c:	mov	sl, r7
   13010:	bne	12f68 <error@@Base+0x334>
   13014:	mov	r0, r6
   13018:	bl	1289c <getc@plt+0x1cd0>
   1301c:	ldr	r8, [sp, #8]
   13020:	ldr	r9, [sp, #4]
   13024:	ldrb	r0, [r8, #9]
   13028:	cmp	r0, #0
   1302c:	beq	13138 <error@@Base+0x504>
   13030:	ldr	r0, [sp, #16]
   13034:	cmp	r9, #0
   13038:	addne	r0, r9, #4
   1303c:	ldr	r6, [r0]
   13040:	cmp	r6, #0
   13044:	beq	13138 <error@@Base+0x504>
   13048:	mov	r5, #32
   1304c:	mov	r7, r6
   13050:	ldr	r4, [r7, #12]
   13054:	mov	r0, r4
   13058:	bl	10a88 <utf8proc_get_property@plt>
   1305c:	cmp	r4, #10
   13060:	ble	1307c <error@@Base+0x448>
   13064:	sub	r1, r4, #11
   13068:	cmp	r1, #3
   1306c:	bcc	130a0 <error@@Base+0x46c>
   13070:	cmp	r4, #160	; 0xa0
   13074:	beq	130a0 <error@@Base+0x46c>
   13078:	b	1308c <error@@Base+0x458>
   1307c:	cmp	r4, #9
   13080:	beq	130a0 <error@@Base+0x46c>
   13084:	cmp	r4, #10
   13088:	beq	130a4 <error@@Base+0x470>
   1308c:	ldrsh	r0, [r0]
   13090:	sub	r0, r0, #23
   13094:	cmp	r0, #2
   13098:	strls	r5, [r7, #12]
   1309c:	b	130a4 <error@@Base+0x470>
   130a0:	str	r5, [r7, #12]
   130a4:	ldr	r7, [r7, #4]
   130a8:	cmp	r7, #0
   130ac:	bne	13050 <error@@Base+0x41c>
   130b0:	mov	r4, #0
   130b4:	ldr	r1, [r6, #12]
   130b8:	ldr	r5, [r6, #4]
   130bc:	cmp	r1, #32
   130c0:	bne	130fc <error@@Base+0x4c8>
   130c4:	tst	r4, #255	; 0xff
   130c8:	beq	13118 <error@@Base+0x4e4>
   130cc:	cmp	r5, #0
   130d0:	ldrne	r1, [r5, #12]
   130d4:	cmpne	r1, #10
   130d8:	beq	13118 <error@@Base+0x4e4>
   130dc:	mov	r0, #1
   130e0:	cmp	r1, #32
   130e4:	bne	13110 <error@@Base+0x4dc>
   130e8:	ldrb	r0, [r6, #8]
   130ec:	ldrb	r1, [r5, #8]
   130f0:	orr	r0, r1, r0
   130f4:	strb	r0, [r5, #8]
   130f8:	b	13118 <error@@Base+0x4e4>
   130fc:	subs	r0, r1, #10
   13100:	movwne	r0, #1
   13104:	tst	r4, #255	; 0xff
   13108:	cmpeq	r1, #10
   1310c:	beq	13118 <error@@Base+0x4e4>
   13110:	mov	r4, r0
   13114:	b	1312c <error@@Base+0x4f8>
   13118:	ldr	r0, [sp, #16]
   1311c:	mov	r1, r6
   13120:	bl	1363c <error@@Base+0xa08>
   13124:	mov	r0, r6
   13128:	bl	10a7c <free@plt>
   1312c:	cmp	r5, #0
   13130:	mov	r6, r5
   13134:	bne	130b4 <error@@Base+0x480>
   13138:	ldrb	r0, [r8, #10]
   1313c:	cmp	r0, #0
   13140:	beq	13174 <error@@Base+0x540>
   13144:	ldr	r0, [sp, #16]
   13148:	cmp	r9, #0
   1314c:	addne	r0, r9, #4
   13150:	ldr	r4, [r0]
   13154:	cmp	r4, #0
   13158:	beq	13174 <error@@Base+0x540>
   1315c:	ldr	r0, [r4, #12]
   13160:	bl	10ad0 <utf8proc_tolower@plt>
   13164:	str	r0, [r4, #12]
   13168:	ldr	r4, [r4, #4]
   1316c:	cmp	r4, #0
   13170:	bne	1315c <error@@Base+0x528>
   13174:	sub	sp, fp, #28
   13178:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1317c:	ldr	r8, [pc, #132]	; 13208 <error@@Base+0x5d4>
   13180:	mov	r7, #0
   13184:	add	r9, sp, #20
   13188:	mov	r5, #1
   1318c:	add	r8, pc, r8
   13190:	mov	r0, r9
   13194:	mov	r1, #99	; 0x63
   13198:	mov	r2, r6
   1319c:	bl	10a94 <fgets@plt>
   131a0:	cmp	r0, #0
   131a4:	beq	12f2c <error@@Base+0x2f8>
   131a8:	mov	r0, r9
   131ac:	mov	r1, r8
   131b0:	bl	10a58 <strcmp@plt>
   131b4:	cmp	r0, #0
   131b8:	addeq	r7, r7, #1
   131bc:	sxth	r7, r7
   131c0:	cmp	r7, #2
   131c4:	blt	13190 <error@@Base+0x55c>
   131c8:	b	12f2c <error@@Base+0x2f8>
   131cc:	ldr	r0, [pc, #68]	; 13218 <error@@Base+0x5e4>
   131d0:	add	r0, pc, r0
   131d4:	bl	12c34 <error@@Base>
   131d8:	bl	10b9c <utf8proc_errmsg@plt>
   131dc:	bl	12c34 <error@@Base>
   131e0:	ldr	r0, [pc, #52]	; 1321c <error@@Base+0x5e8>
   131e4:	add	r0, pc, r0
   131e8:	bl	12c34 <error@@Base>
   131ec:	ldr	r0, [pc, #28]	; 13210 <error@@Base+0x5dc>
   131f0:	ldr	r1, [pc, #28]	; 13214 <error@@Base+0x5e0>
   131f4:	add	r0, pc, r0
   131f8:	add	r1, pc, r1
   131fc:	bl	12c84 <error@@Base+0x50>
   13200:	andeq	r1, r0, r0, lsl r3
   13204:	andeq	r1, r0, lr, asr #4
   13208:	andeq	r1, r0, sl
   1320c:	andeq	r2, r1, ip, lsr r1
   13210:	andeq	r0, r0, r6, lsr #30
   13214:	andeq	r0, r0, r2, lsr pc
   13218:	strdeq	r0, [r0], -lr
   1321c:	andeq	r1, r0, r2
   13220:	push	{fp, lr}
   13224:	mov	fp, sp
   13228:	bl	10aa0 <utf8proc_encode_char@plt>
   1322c:	cmp	r0, #0
   13230:	sxtbgt	r0, r0
   13234:	popgt	{fp, pc}
   13238:	ldr	r0, [pc, #4]	; 13244 <error@@Base+0x610>
   1323c:	add	r0, pc, r0
   13240:	bl	12c34 <error@@Base>
   13244:	strdeq	r0, [r0], -r8
   13248:	push	{r4, r5, r6, r7, fp, lr}
   1324c:	add	fp, sp, #16
   13250:	mov	r6, r3
   13254:	mov	r4, r2
   13258:	mov	r5, r1
   1325c:	tst	r0, #255	; 0xff
   13260:	beq	132a8 <error@@Base+0x674>
   13264:	mov	r0, #94	; 0x5e
   13268:	mov	r1, r4
   1326c:	bl	10aa0 <utf8proc_encode_char@plt>
   13270:	cmp	r0, #0
   13274:	ble	13320 <error@@Base+0x6ec>
   13278:	sxtb	r7, r0
   1327c:	cmp	r5, #10
   13280:	bne	132b4 <error@@Base+0x680>
   13284:	ldr	r0, [pc, #224]	; 1336c <error@@Base+0x738>
   13288:	ldr	r1, [pc, #224]	; 13370 <error@@Base+0x73c>
   1328c:	tst	r6, #255	; 0xff
   13290:	add	r0, pc, r0
   13294:	add	r1, pc, r1
   13298:	moveq	r1, r0
   1329c:	add	r0, r4, r7
   132a0:	pop	{r4, r5, r6, r7, fp, lr}
   132a4:	b	10b90 <sprintf@plt>
   132a8:	mov	r7, #0
   132ac:	cmp	r5, #10
   132b0:	beq	13284 <error@@Base+0x650>
   132b4:	mov	r0, r5
   132b8:	bl	10a88 <utf8proc_get_property@plt>
   132bc:	cmp	r5, #32
   132c0:	beq	132d4 <error@@Base+0x6a0>
   132c4:	ldrsh	r0, [r0]
   132c8:	sub	r1, r0, #1
   132cc:	cmp	r1, #22
   132d0:	bcs	1332c <error@@Base+0x6f8>
   132d4:	mov	r0, r5
   132d8:	bl	10b48 <utf8proc_category@plt>
   132dc:	sub	r0, r0, #6
   132e0:	cmp	r0, #2
   132e4:	bhi	13300 <error@@Base+0x6cc>
   132e8:	add	r1, r4, r7
   132ec:	movw	r0, #9676	; 0x25cc
   132f0:	bl	10aa0 <utf8proc_encode_char@plt>
   132f4:	cmp	r0, #0
   132f8:	ble	13320 <error@@Base+0x6ec>
   132fc:	sxtab	r7, r7, r0
   13300:	add	r1, r4, r7
   13304:	mov	r0, r5
   13308:	bl	10aa0 <utf8proc_encode_char@plt>
   1330c:	cmp	r0, #0
   13310:	sxtabgt	r0, r7, r0
   13314:	movgt	r1, #0
   13318:	strbgt	r1, [r4, r0]
   1331c:	popgt	{r4, r5, r6, r7, fp, pc}
   13320:	ldr	r0, [pc, #64]	; 13368 <error@@Base+0x734>
   13324:	add	r0, pc, r0
   13328:	bl	12c34 <error@@Base>
   1332c:	cmp	r0, #29
   13330:	beq	132d4 <error@@Base+0x6a0>
   13334:	add	r0, r4, r7
   13338:	cmp	r5, #255	; 0xff
   1333c:	bhi	1334c <error@@Base+0x718>
   13340:	ldr	r1, [pc, #24]	; 13360 <error@@Base+0x72c>
   13344:	add	r1, pc, r1
   13348:	b	13354 <error@@Base+0x720>
   1334c:	ldr	r1, [pc, #16]	; 13364 <error@@Base+0x730>
   13350:	add	r1, pc, r1
   13354:	mov	r2, r5
   13358:	pop	{r4, r5, r6, r7, fp, lr}
   1335c:	b	10b90 <sprintf@plt>
   13360:	andeq	r0, r0, ip, lsl #28
   13364:	andeq	r0, r0, r7, lsl #28
   13368:	andeq	r0, r0, r0, lsl lr
   1336c:	muleq	r0, sp, r6
   13370:			; <UNDEFINED> instruction: 0x00000eb7
   13374:	push	{r4, r5, r6, r7, fp, lr}
   13378:	add	fp, sp, #16
   1337c:	sub	sp, sp, #16
   13380:	mov	r6, r2
   13384:	mov	r2, r1
   13388:	ldr	r1, [pc, #180]	; 13444 <error@@Base+0x810>
   1338c:	mov	r5, r0
   13390:	mov	r0, r2
   13394:	add	r1, pc, r1
   13398:	bl	12814 <getc@plt+0x1c48>
   1339c:	mov	r4, r0
   133a0:	cmp	r6, #0
   133a4:	beq	133f8 <error@@Base+0x7c4>
   133a8:	ldr	r0, [pc, #152]	; 13448 <error@@Base+0x814>
   133ac:	mov	r1, #55	; 0x37
   133b0:	mov	r2, #1
   133b4:	mov	r3, r4
   133b8:	add	r0, pc, r0
   133bc:	bl	10ae8 <fwrite@plt>
   133c0:	ldr	r7, [pc, #132]	; 1344c <error@@Base+0x818>
   133c4:	mov	r1, #55	; 0x37
   133c8:	mov	r2, #1
   133cc:	mov	r3, r4
   133d0:	add	r7, pc, r7
   133d4:	mov	r0, r7
   133d8:	bl	10ae8 <fwrite@plt>
   133dc:	mov	r0, r4
   133e0:	blx	r6
   133e4:	mov	r0, r7
   133e8:	mov	r1, #55	; 0x37
   133ec:	mov	r2, #1
   133f0:	mov	r3, r4
   133f4:	bl	10ae8 <fwrite@plt>
   133f8:	ldr	r6, [r5]
   133fc:	cmp	r6, #0
   13400:	beq	13434 <error@@Base+0x800>
   13404:	add	r5, sp, #7
   13408:	ldr	r1, [r6, #12]
   1340c:	ldrb	r0, [r6, #8]
   13410:	mov	r2, r5
   13414:	mov	r3, #0
   13418:	bl	13248 <error@@Base+0x614>
   1341c:	mov	r0, r5
   13420:	mov	r1, r4
   13424:	bl	10ba8 <fputs@plt>
   13428:	ldr	r6, [r6, #4]
   1342c:	cmp	r6, #0
   13430:	bne	13408 <error@@Base+0x7d4>
   13434:	mov	r0, r4
   13438:	bl	1289c <getc@plt+0x1cd0>
   1343c:	sub	sp, fp, #16
   13440:	pop	{r4, r5, r6, r7, fp, pc}
   13444:	andeq	r0, r0, r5, ror #17
   13448:	andeq	r0, r0, r6, lsr #27
   1344c:	andeq	r0, r0, r6, asr #27
   13450:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13454:	add	fp, sp, #28
   13458:	sub	sp, sp, #4
   1345c:	mov	r9, #0
   13460:	mov	sl, r0
   13464:	str	r9, [sp]
   13468:	ldrb	r0, [r1]
   1346c:	cmp	r0, #0
   13470:	beq	134d0 <error@@Base+0x89c>
   13474:	mov	r4, r1
   13478:	mov	r8, sp
   1347c:	mov	r7, #1
   13480:	mov	r0, r4
   13484:	mvn	r1, #0
   13488:	mov	r2, r8
   1348c:	bl	10b00 <utf8proc_iterate@plt>
   13490:	cmp	r0, #1
   13494:	blt	134d8 <error@@Base+0x8a4>
   13498:	ldr	r5, [sp]
   1349c:	mov	r6, r0
   134a0:	mov	r0, #1
   134a4:	mov	r1, #16
   134a8:	bl	12774 <getc@plt+0x1ba8>
   134ac:	strb	r9, [r0, #8]
   134b0:	mov	r1, r0
   134b4:	str	r5, [r0, #12]
   134b8:	mov	r0, sl
   134bc:	bl	13544 <error@@Base+0x910>
   134c0:	ldrb	r0, [r4, r6]!
   134c4:	cmp	r0, #0
   134c8:	bne	13480 <error@@Base+0x84c>
   134cc:	b	134dc <error@@Base+0x8a8>
   134d0:	mov	r7, #1
   134d4:	b	134dc <error@@Base+0x8a8>
   134d8:	mov	r7, #0
   134dc:	mov	r0, r7
   134e0:	sub	sp, fp, #28
   134e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   134e8:	vmov.i32	q8, #0	; 0x00000000
   134ec:	vst1.32	{d16-d17}, [r0]
   134f0:	bx	lr
   134f4:	push	{r4, r5, fp, lr}
   134f8:	add	fp, sp, #8
   134fc:	mov	r4, r0
   13500:	ldr	r0, [r0]
   13504:	mov	r5, #0
   13508:	str	r5, [r1]
   1350c:	cmp	r0, #0
   13510:	str	r0, [r1, #4]
   13514:	str	r1, [r4]
   13518:	addeq	r0, r4, #4
   1351c:	str	r1, [r0]
   13520:	ldr	r0, [r4, #8]
   13524:	cmp	r0, #0
   13528:	beq	13534 <error@@Base+0x900>
   1352c:	bl	10a7c <free@plt>
   13530:	str	r5, [r4, #8]
   13534:	ldr	r0, [r4, #12]
   13538:	add	r0, r0, #1
   1353c:	str	r0, [r4, #12]
   13540:	pop	{r4, r5, fp, pc}
   13544:	push	{r4, r5, fp, lr}
   13548:	add	fp, sp, #8
   1354c:	mov	r4, r0
   13550:	ldr	r0, [r0, #4]
   13554:	mov	r5, #0
   13558:	mov	r2, r4
   1355c:	cmp	r0, #0
   13560:	stm	r1, {r0, r5}
   13564:	addne	r2, r0, #4
   13568:	str	r1, [r2]
   1356c:	str	r1, [r4, #4]
   13570:	ldr	r0, [r4, #8]
   13574:	cmp	r0, #0
   13578:	beq	13584 <error@@Base+0x950>
   1357c:	bl	10a7c <free@plt>
   13580:	str	r5, [r4, #8]
   13584:	ldr	r0, [r4, #12]
   13588:	add	r0, r0, #1
   1358c:	str	r0, [r4, #12]
   13590:	pop	{r4, r5, fp, pc}
   13594:	push	{r4, sl, fp, lr}
   13598:	add	fp, sp, #8
   1359c:	mov	r4, r0
   135a0:	ldr	r0, [r2]
   135a4:	mov	r3, r4
   135a8:	cmp	r0, #0
   135ac:	stm	r1, {r0, r2}
   135b0:	addne	r3, r0, #4
   135b4:	str	r1, [r3]
   135b8:	str	r1, [r2]
   135bc:	ldr	r0, [r4, #8]
   135c0:	cmp	r0, #0
   135c4:	beq	135d4 <error@@Base+0x9a0>
   135c8:	bl	10a7c <free@plt>
   135cc:	mov	r0, #0
   135d0:	str	r0, [r4, #8]
   135d4:	ldr	r0, [r4, #12]
   135d8:	add	r0, r0, #1
   135dc:	str	r0, [r4, #12]
   135e0:	pop	{r4, sl, fp, pc}
   135e4:	push	{r4, sl, fp, lr}
   135e8:	add	fp, sp, #8
   135ec:	mov	r4, r0
   135f0:	mov	r0, r1
   135f4:	cmp	r1, #0
   135f8:	ldr	r3, [r0, #4]!
   135fc:	moveq	r0, r4
   13600:	cmp	r3, #0
   13604:	stm	r2, {r1, r3}
   13608:	addeq	r3, r4, #4
   1360c:	str	r2, [r0]
   13610:	str	r2, [r3]
   13614:	ldr	r0, [r4, #8]
   13618:	cmp	r0, #0
   1361c:	beq	1362c <error@@Base+0x9f8>
   13620:	bl	10a7c <free@plt>
   13624:	mov	r0, #0
   13628:	str	r0, [r4, #8]
   1362c:	ldr	r0, [r4, #12]
   13630:	add	r0, r0, #1
   13634:	str	r0, [r4, #12]
   13638:	pop	{r4, sl, fp, pc}
   1363c:	push	{r4, r5, fp, lr}
   13640:	add	fp, sp, #8
   13644:	mov	r4, r0
   13648:	ldm	r1, {r0, r2}
   1364c:	mov	r5, #0
   13650:	cmp	r0, #0
   13654:	streq	r2, [r4]
   13658:	strne	r2, [r0, #4]
   1365c:	ldrne	r2, [r1, #4]
   13660:	cmp	r2, #0
   13664:	addeq	r2, r4, #4
   13668:	str	r0, [r2]
   1366c:	str	r5, [r1]
   13670:	str	r5, [r1, #4]
   13674:	ldr	r0, [r4, #8]
   13678:	cmp	r0, #0
   1367c:	beq	13688 <error@@Base+0xa54>
   13680:	bl	10a7c <free@plt>
   13684:	str	r5, [r4, #8]
   13688:	ldr	r0, [r4, #12]
   1368c:	sub	r0, r0, #1
   13690:	str	r0, [r4, #12]
   13694:	pop	{r4, r5, fp, pc}
   13698:	push	{r4, sl, fp, lr}
   1369c:	add	fp, sp, #8
   136a0:	mov	r4, r0
   136a4:	ldr	r0, [r0, #8]
   136a8:	cmp	r0, #0
   136ac:	beq	136b4 <error@@Base+0xa80>
   136b0:	pop	{r4, sl, fp, pc}
   136b4:	ldr	r0, [r4, #12]
   136b8:	cmp	r0, #0
   136bc:	beq	136b0 <error@@Base+0xa7c>
   136c0:	mov	r1, #4
   136c4:	bl	12774 <getc@plt+0x1ba8>
   136c8:	str	r0, [r4, #8]
   136cc:	ldr	r1, [r4]
   136d0:	cmp	r1, #0
   136d4:	beq	136b0 <error@@Base+0xa7c>
   136d8:	str	r1, [r0]
   136dc:	ldr	r0, [r1, #4]
   136e0:	cmp	r0, #0
   136e4:	popeq	{r4, sl, fp, pc}
   136e8:	mov	r1, #4
   136ec:	ldr	r2, [r4, #8]
   136f0:	str	r0, [r2, r1]
   136f4:	add	r1, r1, #4
   136f8:	ldr	r0, [r0, #4]
   136fc:	cmp	r0, #0
   13700:	bne	136ec <error@@Base+0xab8>
   13704:	b	136b0 <error@@Base+0xa7c>
   13708:	push	{r4, r5, r6, r7, fp, lr}
   1370c:	add	fp, sp, #16
   13710:	ldr	r6, [r0]
   13714:	cmp	r6, #0
   13718:	popeq	{r4, r5, r6, r7, fp, pc}
   1371c:	mov	r4, r1
   13720:	mov	r5, r0
   13724:	mov	r7, #0
   13728:	ldm	r6, {r0, r1}
   1372c:	cmp	r0, #0
   13730:	streq	r1, [r5]
   13734:	strne	r1, [r0, #4]
   13738:	ldrne	r1, [r6, #4]
   1373c:	cmp	r1, #0
   13740:	addeq	r1, r5, #4
   13744:	str	r0, [r1]
   13748:	str	r7, [r6]
   1374c:	str	r7, [r6, #4]
   13750:	ldr	r0, [r5, #8]
   13754:	cmp	r0, #0
   13758:	beq	13764 <error@@Base+0xb30>
   1375c:	bl	10a7c <free@plt>
   13760:	str	r7, [r5, #8]
   13764:	ldr	r0, [r5, #12]
   13768:	sub	r0, r0, #1
   1376c:	str	r0, [r5, #12]
   13770:	mov	r0, r6
   13774:	blx	r4
   13778:	ldr	r6, [r5]
   1377c:	cmp	r6, #0
   13780:	bne	13728 <error@@Base+0xaf4>
   13784:	pop	{r4, r5, r6, r7, fp, pc}
   13788:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1378c:	mov	r7, r0
   13790:	ldr	r6, [pc, #72]	; 137e0 <error@@Base+0xbac>
   13794:	ldr	r5, [pc, #72]	; 137e4 <error@@Base+0xbb0>
   13798:	add	r6, pc, r6
   1379c:	add	r5, pc, r5
   137a0:	sub	r6, r6, r5
   137a4:	mov	r8, r1
   137a8:	mov	r9, r2
   137ac:	bl	10a2c <calloc@plt-0x20>
   137b0:	asrs	r6, r6, #2
   137b4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   137b8:	mov	r4, #0
   137bc:	add	r4, r4, #1
   137c0:	ldr	r3, [r5], #4
   137c4:	mov	r2, r9
   137c8:	mov	r1, r8
   137cc:	mov	r0, r7
   137d0:	blx	r3
   137d4:	cmp	r6, r4
   137d8:	bne	137bc <error@@Base+0xb88>
   137dc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   137e0:	andeq	r1, r1, r8, lsl r3
   137e4:	andeq	r1, r1, r0, lsl r3
   137e8:	bx	lr

Disassembly of section .fini:

000137ec <.fini>:
   137ec:	push	{r3, lr}
   137f0:	pop	{r3, pc}
