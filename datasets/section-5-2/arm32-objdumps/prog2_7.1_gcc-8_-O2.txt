
../repos/prog2/7.1:     file format elf32-littlearm


Disassembly of section .init:

00010ce8 <.init>:
   10ce8:	push	{r3, lr}
   10cec:	bl	11030 <_start@@Base+0x3c>
   10cf0:	pop	{r3, pc}

Disassembly of section .plt:

00010cf4 <strcmp@plt-0x14>:
   10cf4:	push	{lr}		; (str lr, [sp, #-4]!)
   10cf8:	ldr	lr, [pc, #4]	; 10d04 <strcmp@plt-0x4>
   10cfc:	add	lr, pc, lr
   10d00:	ldr	pc, [lr, #8]!
   10d04:	strdeq	r1, [r1], -ip

00010d08 <strcmp@plt>:
   10d08:	add	ip, pc, #0, 12
   10d0c:	add	ip, ip, #69632	; 0x11000
   10d10:	ldr	pc, [ip, #764]!	; 0x2fc

00010d14 <printf@plt>:
   10d14:	add	ip, pc, #0, 12
   10d18:	add	ip, ip, #69632	; 0x11000
   10d1c:	ldr	pc, [ip, #756]!	; 0x2f4

00010d20 <fopen@plt>:
   10d20:	add	ip, pc, #0, 12
   10d24:	add	ip, ip, #69632	; 0x11000
   10d28:	ldr	pc, [ip, #748]!	; 0x2ec

00010d2c <free@plt>:
   10d2c:	add	ip, pc, #0, 12
   10d30:	add	ip, ip, #69632	; 0x11000
   10d34:	ldr	pc, [ip, #740]!	; 0x2e4

00010d38 <fgets@plt>:
   10d38:	add	ip, pc, #0, 12
   10d3c:	add	ip, ip, #69632	; 0x11000
   10d40:	ldr	pc, [ip, #732]!	; 0x2dc

00010d44 <memcpy@plt>:
   10d44:	add	ip, pc, #0, 12
   10d48:	add	ip, ip, #69632	; 0x11000
   10d4c:	ldr	pc, [ip, #724]!	; 0x2d4

00010d50 <stpcpy@plt>:
   10d50:	add	ip, pc, #0, 12
   10d54:	add	ip, ip, #69632	; 0x11000
   10d58:	ldr	pc, [ip, #716]!	; 0x2cc

00010d5c <realloc@plt>:
   10d5c:	add	ip, pc, #0, 12
   10d60:	add	ip, ip, #69632	; 0x11000
   10d64:	ldr	pc, [ip, #708]!	; 0x2c4

00010d68 <strcpy@plt>:
   10d68:	add	ip, pc, #0, 12
   10d6c:	add	ip, ip, #69632	; 0x11000
   10d70:	ldr	pc, [ip, #700]!	; 0x2bc

00010d74 <puts@plt>:
   10d74:	add	ip, pc, #0, 12
   10d78:	add	ip, ip, #69632	; 0x11000
   10d7c:	ldr	pc, [ip, #692]!	; 0x2b4

00010d80 <malloc@plt>:
   10d80:	add	ip, pc, #0, 12
   10d84:	add	ip, ip, #69632	; 0x11000
   10d88:	ldr	pc, [ip, #684]!	; 0x2ac

00010d8c <__libc_start_main@plt>:
   10d8c:	add	ip, pc, #0, 12
   10d90:	add	ip, ip, #69632	; 0x11000
   10d94:	ldr	pc, [ip, #676]!	; 0x2a4

00010d98 <__gmon_start__@plt>:
   10d98:	add	ip, pc, #0, 12
   10d9c:	add	ip, ip, #69632	; 0x11000
   10da0:	ldr	pc, [ip, #668]!	; 0x29c

00010da4 <strlen@plt>:
   10da4:	add	ip, pc, #0, 12
   10da8:	add	ip, ip, #69632	; 0x11000
   10dac:	ldr	pc, [ip, #660]!	; 0x294

00010db0 <putchar@plt>:
   10db0:	add	ip, pc, #0, 12
   10db4:	add	ip, ip, #69632	; 0x11000
   10db8:	ldr	pc, [ip, #652]!	; 0x28c

00010dbc <fclose@plt>:
   10dbc:	add	ip, pc, #0, 12
   10dc0:	add	ip, ip, #69632	; 0x11000
   10dc4:	ldr	pc, [ip, #644]!	; 0x284

00010dc8 <strtok@plt>:
   10dc8:	add	ip, pc, #0, 12
   10dcc:	add	ip, ip, #69632	; 0x11000
   10dd0:	ldr	pc, [ip, #636]!	; 0x27c

00010dd4 <abort@plt>:
   10dd4:	add	ip, pc, #0, 12
   10dd8:	add	ip, ip, #69632	; 0x11000
   10ddc:	ldr	pc, [ip, #628]!	; 0x274

Disassembly of section .text:

00010de0 <main@@Base>:
   10de0:	ldr	r0, [pc, #472]	; 10fc0 <main@@Base+0x1e0>
   10de4:	strd	r4, [sp, #-24]!	; 0xffffffe8
   10de8:	strd	r6, [sp, #8]
   10dec:	str	r8, [sp, #16]
   10df0:	str	lr, [sp, #20]
   10df4:	sub	sp, sp, #144	; 0x90
   10df8:	add	r0, pc, r0
   10dfc:	mov	r7, sp
   10e00:	bl	10d74 <puts@plt>
   10e04:	ldr	ip, [pc, #440]	; 10fc4 <main@@Base+0x1e4>
   10e08:	add	r6, sp, #40	; 0x28
   10e0c:	add	ip, pc, ip
   10e10:	ldrd	r0, [ip]
   10e14:	ldrd	r2, [ip, #8]
   10e18:	ldrd	r4, [ip, #16]
   10e1c:	strd	r0, [sp, #4]
   10e20:	ldrd	r0, [ip, #24]
   10e24:	strd	r2, [sp, #12]
   10e28:	ldrd	r2, [ip, #32]
   10e2c:	strd	r4, [sp, #20]
   10e30:	strd	r0, [sp, #28]
   10e34:	strd	r2, [sp, #36]	; 0x24
   10e38:	bl	1187c <bst_nova@@Base>
   10e3c:	mov	r5, r0
   10e40:	ldr	r1, [r7, #4]!
   10e44:	mov	r0, r5
   10e48:	bl	11a84 <bst_insere@@Base>
   10e4c:	cmp	r6, r7
   10e50:	bne	10e40 <main@@Base+0x60>
   10e54:	ldr	r0, [r5]
   10e58:	add	r4, sp, #44	; 0x2c
   10e5c:	mov	r8, #0
   10e60:	bl	11ca8 <bst_altura@@Base>
   10e64:	mov	r1, r0
   10e68:	ldr	r0, [pc, #344]	; 10fc8 <main@@Base+0x1e8>
   10e6c:	add	r0, pc, r0
   10e70:	bl	10d14 <printf@plt>
   10e74:	mov	r0, r5
   10e78:	ldr	r5, [pc, #332]	; 10fcc <main@@Base+0x1ec>
   10e7c:	bl	11da0 <bst_imprime@@Base>
   10e80:	ldr	r0, [pc, #328]	; 10fd0 <main@@Base+0x1f0>
   10e84:	add	r5, pc, r5
   10e88:	add	r0, pc, r0
   10e8c:	bl	10d74 <puts@plt>
   10e90:	bl	110e4 <avl_nova@@Base>
   10e94:	mov	r6, r0
   10e98:	ldr	r1, [pc, #308]	; 10fd4 <main@@Base+0x1f4>
   10e9c:	ldr	r0, [pc, #308]	; 10fd8 <main@@Base+0x1f8>
   10ea0:	add	r1, pc, r1
   10ea4:	add	r0, pc, r0
   10ea8:	bl	10d20 <fopen@plt>
   10eac:	mov	r7, r0
   10eb0:	b	10ef8 <main@@Base+0x118>
   10eb4:	bl	10dc8 <strtok@plt>
   10eb8:	mov	r1, r0
   10ebc:	mov	r0, r4
   10ec0:	bl	10d68 <strcpy@plt>
   10ec4:	mov	r1, r5
   10ec8:	mov	r0, #0
   10ecc:	bl	10dc8 <strtok@plt>
   10ed0:	mov	r1, r0
   10ed4:	mov	r0, r4
   10ed8:	bl	10d50 <stpcpy@plt>
   10edc:	sub	r0, r0, r4
   10ee0:	add	r3, sp, #144	; 0x90
   10ee4:	add	r3, r3, r0
   10ee8:	mov	r1, r4
   10eec:	mov	r0, r6
   10ef0:	strb	r8, [r3, #-101]	; 0xffffff9b
   10ef4:	bl	11494 <avl_insere@@Base>
   10ef8:	mov	r1, #100	; 0x64
   10efc:	mov	r2, r7
   10f00:	mov	r0, r4
   10f04:	bl	10d38 <fgets@plt>
   10f08:	cmp	r0, #0
   10f0c:	mov	r1, r5
   10f10:	mov	r0, r4
   10f14:	bne	10eb4 <main@@Base+0xd4>
   10f18:	mov	r0, r7
   10f1c:	bl	10dbc <fclose@plt>
   10f20:	ldr	r1, [pc, #180]	; 10fdc <main@@Base+0x1fc>
   10f24:	mov	r0, r6
   10f28:	add	r1, pc, r1
   10f2c:	bl	1133c <avl_pesquisa@@Base>
   10f30:	subs	r3, r0, #0
   10f34:	beq	10f4c <main@@Base+0x16c>
   10f38:	ldr	r0, [pc, #160]	; 10fe0 <main@@Base+0x200>
   10f3c:	ldr	r1, [r3]
   10f40:	ldr	r2, [r3, #16]
   10f44:	add	r0, pc, r0
   10f48:	bl	10d14 <printf@plt>
   10f4c:	ldr	r1, [pc, #144]	; 10fe4 <main@@Base+0x204>
   10f50:	mov	r0, r6
   10f54:	add	r1, pc, r1
   10f58:	bl	1133c <avl_pesquisa@@Base>
   10f5c:	subs	r3, r0, #0
   10f60:	beq	10f78 <main@@Base+0x198>
   10f64:	ldr	r0, [pc, #124]	; 10fe8 <main@@Base+0x208>
   10f68:	ldr	r1, [r3]
   10f6c:	ldr	r2, [r3, #16]
   10f70:	add	r0, pc, r0
   10f74:	bl	10d14 <printf@plt>
   10f78:	ldr	r1, [pc, #108]	; 10fec <main@@Base+0x20c>
   10f7c:	mov	r0, r6
   10f80:	add	r1, pc, r1
   10f84:	bl	1133c <avl_pesquisa@@Base>
   10f88:	subs	r3, r0, #0
   10f8c:	beq	10fa4 <main@@Base+0x1c4>
   10f90:	ldr	r0, [pc, #88]	; 10ff0 <main@@Base+0x210>
   10f94:	ldr	r1, [r3]
   10f98:	ldr	r2, [r3, #16]
   10f9c:	add	r0, pc, r0
   10fa0:	bl	10d14 <printf@plt>
   10fa4:	mov	r0, #0
   10fa8:	add	sp, sp, #144	; 0x90
   10fac:	ldrd	r4, [sp]
   10fb0:	ldrd	r6, [sp, #8]
   10fb4:	ldr	r8, [sp, #16]
   10fb8:	add	sp, sp, #20
   10fbc:	pop	{pc}		; (ldr pc, [sp], #4)
   10fc0:	andeq	r1, r0, r8, asr r0
   10fc4:	andeq	r1, r1, ip, asr #4
   10fc8:	andeq	r0, r0, r8, ror #31
   10fcc:	strdeq	r0, [r0], -r8
   10fd0:	andeq	r0, r0, r0, ror #31
   10fd4:	andeq	r0, r0, ip, asr #31
   10fd8:	andeq	r0, r0, ip, asr #31
   10fdc:	andeq	r0, r0, r8, asr pc
   10fe0:	andeq	r0, r0, r8, asr #30
   10fe4:	andeq	r0, r0, r4, asr #30
   10fe8:	andeq	r0, r0, ip, lsl pc
   10fec:	andeq	r0, r0, r0, lsr #30
   10ff0:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>

00010ff4 <_start@@Base>:
   10ff4:	mov	fp, #0
   10ff8:	mov	lr, #0
   10ffc:	pop	{r1}		; (ldr r1, [sp], #4)
   11000:	mov	r2, sp
   11004:	push	{r2}		; (str r2, [sp, #-4]!)
   11008:	push	{r0}		; (str r0, [sp, #-4]!)
   1100c:	ldr	ip, [pc, #16]	; 11024 <_start@@Base+0x30>
   11010:	push	{ip}		; (str ip, [sp, #-4]!)
   11014:	ldr	r0, [pc, #12]	; 11028 <_start@@Base+0x34>
   11018:	ldr	r3, [pc, #12]	; 1102c <_start@@Base+0x38>
   1101c:	bl	10d8c <__libc_start_main@plt>
   11020:	bl	10dd4 <abort@plt>
   11024:	andeq	r1, r1, r8, asr #28
   11028:	andeq	r0, r1, r0, ror #27
   1102c:	andeq	r1, r1, r8, ror #27
   11030:	ldr	r3, [pc, #20]	; 1104c <_start@@Base+0x58>
   11034:	ldr	r2, [pc, #20]	; 11050 <_start@@Base+0x5c>
   11038:	add	r3, pc, r3
   1103c:	ldr	r2, [r3, r2]
   11040:	cmp	r2, #0
   11044:	bxeq	lr
   11048:	b	10d98 <__gmon_start__@plt>
   1104c:	andeq	r0, r1, r0, asr #31
   11050:	andeq	r0, r0, r4, asr r0
   11054:	ldr	r0, [pc, #24]	; 11074 <_start@@Base+0x80>
   11058:	ldr	r3, [pc, #24]	; 11078 <_start@@Base+0x84>
   1105c:	cmp	r3, r0
   11060:	bxeq	lr
   11064:	ldr	r3, [pc, #16]	; 1107c <_start@@Base+0x88>
   11068:	cmp	r3, #0
   1106c:	bxeq	lr
   11070:	bx	r3
   11074:	andeq	r2, r2, r8, lsl #1
   11078:	andeq	r2, r2, r8, lsl #1
   1107c:	andeq	r0, r0, r0
   11080:	ldr	r0, [pc, #36]	; 110ac <_start@@Base+0xb8>
   11084:	ldr	r1, [pc, #36]	; 110b0 <_start@@Base+0xbc>
   11088:	sub	r1, r1, r0
   1108c:	asr	r1, r1, #2
   11090:	add	r1, r1, r1, lsr #31
   11094:	asrs	r1, r1, #1
   11098:	bxeq	lr
   1109c:	ldr	r3, [pc, #16]	; 110b4 <_start@@Base+0xc0>
   110a0:	cmp	r3, #0
   110a4:	bxeq	lr
   110a8:	bx	r3
   110ac:	andeq	r2, r2, r8, lsl #1
   110b0:	andeq	r2, r2, r8, lsl #1
   110b4:	andeq	r0, r0, r0
   110b8:	push	{r4, lr}
   110bc:	ldr	r4, [pc, #24]	; 110dc <_start@@Base+0xe8>
   110c0:	ldrb	r3, [r4]
   110c4:	cmp	r3, #0
   110c8:	popne	{r4, pc}
   110cc:	bl	11054 <_start@@Base+0x60>
   110d0:	mov	r3, #1
   110d4:	strb	r3, [r4]
   110d8:	pop	{r4, pc}
   110dc:	andeq	r2, r2, r8, lsl #1
   110e0:	b	11080 <_start@@Base+0x8c>

000110e4 <avl_nova@@Base>:
   110e4:	mov	r0, #4
   110e8:	str	r4, [sp, #-8]!
   110ec:	str	lr, [sp, #4]
   110f0:	bl	10d80 <malloc@plt>
   110f4:	cmp	r0, #0
   110f8:	ldr	r4, [sp]
   110fc:	add	sp, sp, #4
   11100:	movne	r3, #0
   11104:	strne	r3, [r0]
   11108:	pop	{pc}		; (ldr pc, [sp], #4)

0001110c <avl_altura@@Base>:
   1110c:	cmp	r0, #0
   11110:	ldrne	r0, [r0, #12]
   11114:	mvneq	r0, #0
   11118:	bx	lr

0001111c <max@@Base>:
   1111c:	cmp	r1, r0
   11120:	movge	r0, r1
   11124:	bx	lr

00011128 <avl_novo_no@@Base>:
   11128:	strd	r4, [sp, #-16]!
   1112c:	mov	r5, r0
   11130:	mov	r0, #20
   11134:	str	r6, [sp, #8]
   11138:	str	lr, [sp, #12]
   1113c:	bl	10d80 <malloc@plt>
   11140:	mov	r4, r0
   11144:	mov	r0, r5
   11148:	bl	10da4 <strlen@plt>
   1114c:	add	r6, r0, #1
   11150:	mov	r0, r6
   11154:	bl	10d80 <malloc@plt>
   11158:	mov	r2, r6
   1115c:	mov	r1, r5
   11160:	str	r0, [r4]
   11164:	bl	10d44 <memcpy@plt>
   11168:	mov	r3, #0
   1116c:	mov	r2, #1
   11170:	ldr	r6, [sp, #8]
   11174:	mov	r0, r4
   11178:	str	r3, [r4, #4]
   1117c:	str	r3, [r4, #8]
   11180:	str	r3, [r4, #12]
   11184:	str	r2, [r4, #16]
   11188:	ldrd	r4, [sp]
   1118c:	add	sp, sp, #12
   11190:	pop	{pc}		; (ldr pc, [sp], #4)

00011194 <roda_direita@@Base>:
   11194:	strd	r4, [sp, #-16]!
   11198:	mov	r5, r0
   1119c:	ldr	r4, [r0, #4]
   111a0:	ldr	r3, [r4, #8]
   111a4:	str	r6, [sp, #8]
   111a8:	str	lr, [sp, #12]
   111ac:	str	r5, [r4, #8]
   111b0:	mov	r0, r3
   111b4:	str	r3, [r5, #4]
   111b8:	bl	1110c <avl_altura@@Base>
   111bc:	mov	r6, r0
   111c0:	ldr	r0, [r5, #8]
   111c4:	bl	1110c <avl_altura@@Base>
   111c8:	mov	r1, r0
   111cc:	mov	r0, r6
   111d0:	bl	1111c <max@@Base>
   111d4:	add	r3, r0, #1
   111d8:	ldr	r0, [r4, #4]
   111dc:	str	r3, [r5, #12]
   111e0:	bl	1110c <avl_altura@@Base>
   111e4:	mov	r5, r0
   111e8:	ldr	r0, [r4, #8]
   111ec:	bl	1110c <avl_altura@@Base>
   111f0:	mov	r1, r0
   111f4:	mov	r0, r5
   111f8:	bl	1111c <max@@Base>
   111fc:	add	r3, r0, #1
   11200:	mov	r0, r4
   11204:	ldr	r6, [sp, #8]
   11208:	str	r3, [r4, #12]
   1120c:	ldrd	r4, [sp]
   11210:	add	sp, sp, #12
   11214:	pop	{pc}		; (ldr pc, [sp], #4)

00011218 <roda_esquerda@@Base>:
   11218:	strd	r4, [sp, #-16]!
   1121c:	mov	r5, r0
   11220:	ldr	r4, [r0, #8]
   11224:	ldr	r3, [r4, #4]
   11228:	str	r6, [sp, #8]
   1122c:	str	lr, [sp, #12]
   11230:	str	r0, [r4, #4]
   11234:	str	r3, [r0, #8]
   11238:	ldr	r0, [r0, #4]
   1123c:	bl	1110c <avl_altura@@Base>
   11240:	mov	r6, r0
   11244:	ldr	r0, [r5, #8]
   11248:	bl	1110c <avl_altura@@Base>
   1124c:	mov	r1, r0
   11250:	mov	r0, r6
   11254:	bl	1111c <max@@Base>
   11258:	add	r3, r0, #1
   1125c:	ldr	r0, [r4, #4]
   11260:	str	r3, [r5, #12]
   11264:	bl	1110c <avl_altura@@Base>
   11268:	mov	r5, r0
   1126c:	ldr	r0, [r4, #8]
   11270:	bl	1110c <avl_altura@@Base>
   11274:	mov	r1, r0
   11278:	mov	r0, r5
   1127c:	bl	1111c <max@@Base>
   11280:	add	r3, r0, #1
   11284:	mov	r0, r4
   11288:	ldr	r6, [sp, #8]
   1128c:	str	r3, [r4, #12]
   11290:	ldrd	r4, [sp]
   11294:	add	sp, sp, #12
   11298:	pop	{pc}		; (ldr pc, [sp], #4)

0001129c <calc_balanceamento@@Base>:
   1129c:	strd	r4, [sp, #-16]!
   112a0:	subs	r4, r0, #0
   112a4:	moveq	r0, r4
   112a8:	str	r6, [sp, #8]
   112ac:	str	lr, [sp, #12]
   112b0:	beq	112cc <calc_balanceamento@@Base+0x30>
   112b4:	ldr	r0, [r4, #8]
   112b8:	bl	1110c <avl_altura@@Base>
   112bc:	mov	r5, r0
   112c0:	ldr	r0, [r4, #4]
   112c4:	bl	1110c <avl_altura@@Base>
   112c8:	sub	r0, r5, r0
   112cc:	ldrd	r4, [sp]
   112d0:	ldr	r6, [sp, #8]
   112d4:	add	sp, sp, #12
   112d8:	pop	{pc}		; (ldr pc, [sp], #4)

000112dc <avl_pesquisa_impl@@Base>:
   112dc:	strd	r4, [sp, #-16]!
   112e0:	subs	r4, r0, #0
   112e4:	movne	r5, r1
   112e8:	str	r6, [sp, #8]
   112ec:	str	lr, [sp, #12]
   112f0:	bne	11308 <avl_pesquisa_impl@@Base+0x2c>
   112f4:	b	11328 <avl_pesquisa_impl@@Base+0x4c>
   112f8:	beq	11328 <avl_pesquisa_impl@@Base+0x4c>
   112fc:	ldr	r4, [r4, #8]
   11300:	cmp	r4, #0
   11304:	beq	11328 <avl_pesquisa_impl@@Base+0x4c>
   11308:	mov	r0, r5
   1130c:	ldr	r1, [r4]
   11310:	bl	10d08 <strcmp@plt>
   11314:	cmp	r0, #0
   11318:	bge	112f8 <avl_pesquisa_impl@@Base+0x1c>
   1131c:	ldr	r4, [r4, #4]
   11320:	cmp	r4, #0
   11324:	bne	11308 <avl_pesquisa_impl@@Base+0x2c>
   11328:	mov	r0, r4
   1132c:	ldrd	r4, [sp]
   11330:	ldr	r6, [sp, #8]
   11334:	add	sp, sp, #12
   11338:	pop	{pc}		; (ldr pc, [sp], #4)

0001133c <avl_pesquisa@@Base>:
   1133c:	cmp	r1, #0
   11340:	cmpne	r0, #0
   11344:	beq	11350 <avl_pesquisa@@Base+0x14>
   11348:	ldr	r0, [r0]
   1134c:	b	112dc <avl_pesquisa_impl@@Base>
   11350:	mov	r0, #0
   11354:	bx	lr

00011358 <avl_insere_impl@@Base>:
   11358:	strd	r4, [sp, #-16]!
   1135c:	subs	r4, r0, #0
   11360:	str	r6, [sp, #8]
   11364:	str	lr, [sp, #12]
   11368:	beq	11448 <avl_insere_impl@@Base+0xf0>
   1136c:	mov	r0, r1
   11370:	mov	r5, r1
   11374:	ldr	r1, [r4]
   11378:	bl	10d08 <strcmp@plt>
   1137c:	cmp	r0, #0
   11380:	blt	11424 <avl_insere_impl@@Base+0xcc>
   11384:	beq	113ec <avl_insere_impl@@Base+0x94>
   11388:	mov	r1, r5
   1138c:	ldr	r0, [r4, #8]
   11390:	bl	11358 <avl_insere_impl@@Base>
   11394:	str	r0, [r4, #8]
   11398:	ldr	r0, [r4, #4]
   1139c:	bl	1110c <avl_altura@@Base>
   113a0:	mov	r5, r0
   113a4:	ldr	r0, [r4, #8]
   113a8:	bl	1110c <avl_altura@@Base>
   113ac:	mov	r1, r0
   113b0:	mov	r0, r5
   113b4:	bl	1111c <max@@Base>
   113b8:	add	r3, r0, #1
   113bc:	mov	r0, r4
   113c0:	str	r3, [r4, #12]
   113c4:	bl	1129c <calc_balanceamento@@Base>
   113c8:	cmp	r0, #1
   113cc:	bgt	113fc <avl_insere_impl@@Base+0xa4>
   113d0:	cmn	r0, #1
   113d4:	blt	11460 <avl_insere_impl@@Base+0x108>
   113d8:	mov	r0, r4
   113dc:	ldrd	r4, [sp]
   113e0:	ldr	r6, [sp, #8]
   113e4:	add	sp, sp, #12
   113e8:	pop	{pc}		; (ldr pc, [sp], #4)
   113ec:	ldr	r3, [r4, #16]
   113f0:	add	r3, r3, #1
   113f4:	str	r3, [r4, #16]
   113f8:	b	113d8 <avl_insere_impl@@Base+0x80>
   113fc:	ldr	r0, [r4, #8]
   11400:	bl	1129c <calc_balanceamento@@Base>
   11404:	cmp	r0, #0
   11408:	blt	11438 <avl_insere_impl@@Base+0xe0>
   1140c:	mov	r0, r4
   11410:	ldrd	r4, [sp]
   11414:	ldr	r6, [sp, #8]
   11418:	ldr	lr, [sp, #12]
   1141c:	add	sp, sp, #16
   11420:	b	11218 <roda_esquerda@@Base>
   11424:	mov	r1, r5
   11428:	ldr	r0, [r4, #4]
   1142c:	bl	11358 <avl_insere_impl@@Base>
   11430:	str	r0, [r4, #4]
   11434:	b	1139c <avl_insere_impl@@Base+0x44>
   11438:	ldr	r0, [r4, #8]
   1143c:	bl	11194 <roda_direita@@Base>
   11440:	str	r0, [r4, #8]
   11444:	b	1140c <avl_insere_impl@@Base+0xb4>
   11448:	mov	r0, r1
   1144c:	ldrd	r4, [sp]
   11450:	ldr	r6, [sp, #8]
   11454:	ldr	lr, [sp, #12]
   11458:	add	sp, sp, #16
   1145c:	b	11128 <avl_novo_no@@Base>
   11460:	ldr	r0, [r4, #4]
   11464:	bl	1129c <calc_balanceamento@@Base>
   11468:	cmp	r0, #0
   1146c:	ble	1147c <avl_insere_impl@@Base+0x124>
   11470:	ldr	r0, [r4, #4]
   11474:	bl	11218 <roda_esquerda@@Base>
   11478:	str	r0, [r4, #4]
   1147c:	mov	r0, r4
   11480:	ldrd	r4, [sp]
   11484:	ldr	r6, [sp, #8]
   11488:	ldr	lr, [sp, #12]
   1148c:	add	sp, sp, #16
   11490:	b	11194 <roda_direita@@Base>

00011494 <avl_insere@@Base>:
   11494:	clz	r3, r1
   11498:	cmp	r0, #0
   1149c:	strd	r4, [sp, #-16]!
   114a0:	lsr	r3, r3, #5
   114a4:	moveq	r4, #1
   114a8:	str	r6, [sp, #8]
   114ac:	str	lr, [sp, #12]
   114b0:	movne	r4, r3
   114b4:	cmp	r4, #0
   114b8:	bne	114e0 <avl_insere@@Base+0x4c>
   114bc:	mov	r5, r0
   114c0:	ldr	r0, [r0]
   114c4:	bl	11358 <avl_insere_impl@@Base>
   114c8:	str	r0, [r5]
   114cc:	mov	r0, r4
   114d0:	ldrd	r4, [sp]
   114d4:	ldr	r6, [sp, #8]
   114d8:	add	sp, sp, #12
   114dc:	pop	{pc}		; (ldr pc, [sp], #4)
   114e0:	mvn	r4, #0
   114e4:	b	114cc <avl_insere@@Base+0x38>

000114e8 <avl_no_valormin@@Base>:
   114e8:	b	114f0 <avl_no_valormin@@Base+0x8>
   114ec:	mov	r0, r3
   114f0:	ldr	r3, [r0, #4]
   114f4:	cmp	r3, #0
   114f8:	bne	114ec <avl_no_valormin@@Base+0x4>
   114fc:	bx	lr

00011500 <avl_min@@Base>:
   11500:	cmp	r0, #0
   11504:	bxeq	lr
   11508:	str	r4, [sp, #-8]!
   1150c:	ldr	r0, [r0]
   11510:	str	lr, [sp, #4]
   11514:	bl	114e8 <avl_no_valormin@@Base>
   11518:	ldr	r4, [sp]
   1151c:	add	sp, sp, #4
   11520:	ldr	r0, [r0]
   11524:	pop	{pc}		; (ldr pc, [sp], #4)

00011528 <avl_no_valormax@@Base>:
   11528:	b	11530 <avl_no_valormax@@Base+0x8>
   1152c:	mov	r0, r3
   11530:	ldr	r3, [r0, #8]
   11534:	cmp	r3, #0
   11538:	bne	1152c <avl_no_valormax@@Base+0x4>
   1153c:	bx	lr

00011540 <avl_max@@Base>:
   11540:	cmp	r0, #0
   11544:	bxeq	lr
   11548:	str	r4, [sp, #-8]!
   1154c:	ldr	r0, [r0]
   11550:	str	lr, [sp, #4]
   11554:	bl	11528 <avl_no_valormax@@Base>
   11558:	ldr	r4, [sp]
   1155c:	add	sp, sp, #4
   11560:	ldr	r0, [r0]
   11564:	pop	{pc}		; (ldr pc, [sp], #4)

00011568 <avl_remove_impl@@Base>:
   11568:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1156c:	subs	r4, r0, #0
   11570:	strd	r6, [sp, #8]
   11574:	str	r8, [sp, #16]
   11578:	str	lr, [sp, #20]
   1157c:	beq	1164c <avl_remove_impl@@Base+0xe4>
   11580:	ldr	r7, [r4]
   11584:	mov	r0, r1
   11588:	mov	r6, r1
   1158c:	mov	r1, r7
   11590:	bl	10d08 <strcmp@plt>
   11594:	cmp	r0, #0
   11598:	blt	11694 <avl_remove_impl@@Base+0x12c>
   1159c:	ldr	r5, [r4, #8]
   115a0:	bne	115fc <avl_remove_impl@@Base+0x94>
   115a4:	ldr	r6, [r4, #4]
   115a8:	cmp	r6, #0
   115ac:	beq	116fc <avl_remove_impl@@Base+0x194>
   115b0:	cmp	r5, #0
   115b4:	beq	116bc <avl_remove_impl@@Base+0x154>
   115b8:	mov	r0, r5
   115bc:	bl	114e8 <avl_no_valormin@@Base>
   115c0:	mov	r5, r0
   115c4:	ldr	r0, [r0]
   115c8:	bl	10da4 <strlen@plt>
   115cc:	add	r1, r0, #1
   115d0:	ldr	r0, [r4]
   115d4:	bl	10d5c <realloc@plt>
   115d8:	str	r0, [r4]
   115dc:	ldr	r1, [r5]
   115e0:	bl	10d68 <strcpy@plt>
   115e4:	ldr	r1, [r5]
   115e8:	ldr	r0, [r4, #8]
   115ec:	bl	11568 <avl_remove_impl@@Base>
   115f0:	str	r0, [r4, #8]
   115f4:	ldr	r0, [r4, #4]
   115f8:	b	11610 <avl_remove_impl@@Base+0xa8>
   115fc:	mov	r1, r6
   11600:	mov	r0, r5
   11604:	bl	11568 <avl_remove_impl@@Base>
   11608:	str	r0, [r4, #8]
   1160c:	ldr	r0, [r4, #4]
   11610:	bl	1110c <avl_altura@@Base>
   11614:	mov	r5, r0
   11618:	ldr	r0, [r4, #8]
   1161c:	bl	1110c <avl_altura@@Base>
   11620:	mov	r1, r0
   11624:	mov	r0, r5
   11628:	bl	1111c <max@@Base>
   1162c:	add	r3, r0, #1
   11630:	mov	r0, r4
   11634:	str	r3, [r4, #12]
   11638:	bl	1129c <calc_balanceamento@@Base>
   1163c:	cmp	r0, #1
   11640:	bgt	11668 <avl_remove_impl@@Base+0x100>
   11644:	cmn	r0, #1
   11648:	blt	11718 <avl_remove_impl@@Base+0x1b0>
   1164c:	mov	r5, r4
   11650:	mov	r0, r5
   11654:	ldrd	r4, [sp]
   11658:	ldrd	r6, [sp, #8]
   1165c:	ldr	r8, [sp, #16]
   11660:	add	sp, sp, #20
   11664:	pop	{pc}		; (ldr pc, [sp], #4)
   11668:	ldr	r0, [r4, #8]
   1166c:	bl	1129c <calc_balanceamento@@Base>
   11670:	cmp	r0, #0
   11674:	blt	116a8 <avl_remove_impl@@Base+0x140>
   11678:	mov	r0, r4
   1167c:	ldrd	r4, [sp]
   11680:	ldrd	r6, [sp, #8]
   11684:	ldr	r8, [sp, #16]
   11688:	ldr	lr, [sp, #20]
   1168c:	add	sp, sp, #24
   11690:	b	11218 <roda_esquerda@@Base>
   11694:	mov	r1, r6
   11698:	ldr	r0, [r4, #4]
   1169c:	bl	11568 <avl_remove_impl@@Base>
   116a0:	str	r0, [r4, #4]
   116a4:	b	11610 <avl_remove_impl@@Base+0xa8>
   116a8:	ldr	r0, [r4, #8]
   116ac:	bl	11194 <roda_direita@@Base>
   116b0:	str	r0, [r4, #8]
   116b4:	b	11678 <avl_remove_impl@@Base+0x110>
   116b8:	mov	r6, r5
   116bc:	ldr	r0, [r6]
   116c0:	bl	10da4 <strlen@plt>
   116c4:	add	r1, r0, #1
   116c8:	mov	r0, r7
   116cc:	bl	10d5c <realloc@plt>
   116d0:	str	r0, [r4]
   116d4:	ldr	r1, [r6]
   116d8:	bl	10d68 <strcpy@plt>
   116dc:	ldrd	r0, [r6]
   116e0:	ldrd	r2, [r6, #8]
   116e4:	stmib	r4, {r1, r2, r3}
   116e8:	bl	10d2c <free@plt>
   116ec:	mov	r0, r6
   116f0:	bl	10d2c <free@plt>
   116f4:	ldr	r0, [r4, #4]
   116f8:	b	11610 <avl_remove_impl@@Base+0xa8>
   116fc:	cmp	r5, #0
   11700:	bne	116b8 <avl_remove_impl@@Base+0x150>
   11704:	mov	r0, r7
   11708:	bl	10d2c <free@plt>
   1170c:	mov	r0, r4
   11710:	bl	10d2c <free@plt>
   11714:	b	11650 <avl_remove_impl@@Base+0xe8>
   11718:	ldr	r0, [r4, #4]
   1171c:	bl	1129c <calc_balanceamento@@Base>
   11720:	cmp	r0, #0
   11724:	ble	11734 <avl_remove_impl@@Base+0x1cc>
   11728:	ldr	r0, [r4, #4]
   1172c:	bl	11218 <roda_esquerda@@Base>
   11730:	str	r0, [r4, #4]
   11734:	mov	r0, r4
   11738:	ldrd	r4, [sp]
   1173c:	ldrd	r6, [sp, #8]
   11740:	ldr	r8, [sp, #16]
   11744:	ldr	lr, [sp, #20]
   11748:	add	sp, sp, #24
   1174c:	b	11194 <roda_direita@@Base>

00011750 <avl_apaga@@Base>:
   11750:	str	r4, [sp, #-8]!
   11754:	subs	r4, r0, #0
   11758:	str	lr, [sp, #4]
   1175c:	beq	1179c <avl_apaga@@Base+0x4c>
   11760:	ldr	r3, [r4]
   11764:	cmp	r3, #0
   11768:	beq	11788 <avl_apaga@@Base+0x38>
   1176c:	mov	r0, r3
   11770:	ldr	r1, [r3]
   11774:	bl	11568 <avl_remove_impl@@Base>
   11778:	cmp	r0, #0
   1177c:	mov	r3, r0
   11780:	str	r0, [r4]
   11784:	bne	1176c <avl_apaga@@Base+0x1c>
   11788:	mov	r0, r4
   1178c:	ldr	r4, [sp]
   11790:	ldr	lr, [sp, #4]
   11794:	add	sp, sp, #8
   11798:	b	10d2c <free@plt>
   1179c:	ldr	r4, [sp]
   117a0:	add	sp, sp, #4
   117a4:	pop	{pc}		; (ldr pc, [sp], #4)

000117a8 <avl_remove@@Base>:
   117a8:	clz	r3, r1
   117ac:	cmp	r0, #0
   117b0:	strd	r4, [sp, #-16]!
   117b4:	lsr	r3, r3, #5
   117b8:	moveq	r4, #1
   117bc:	str	r6, [sp, #8]
   117c0:	str	lr, [sp, #12]
   117c4:	movne	r4, r3
   117c8:	cmp	r4, #0
   117cc:	bne	117f4 <avl_remove@@Base+0x4c>
   117d0:	mov	r5, r0
   117d4:	ldr	r0, [r0]
   117d8:	bl	11568 <avl_remove_impl@@Base>
   117dc:	str	r0, [r5]
   117e0:	mov	r0, r4
   117e4:	ldrd	r4, [sp]
   117e8:	ldr	r6, [sp, #8]
   117ec:	add	sp, sp, #12
   117f0:	pop	{pc}		; (ldr pc, [sp], #4)
   117f4:	mvn	r4, #0
   117f8:	b	117e0 <avl_remove@@Base+0x38>

000117fc <avl_preordem_impl@@Base>:
   117fc:	strd	r4, [sp, #-16]!
   11800:	subs	r4, r0, #0
   11804:	str	r6, [sp, #8]
   11808:	str	lr, [sp, #12]
   1180c:	beq	1183c <avl_preordem_impl@@Base+0x40>
   11810:	ldr	r5, [pc, #52]	; 1184c <avl_preordem_impl@@Base+0x50>
   11814:	add	r5, pc, r5
   11818:	mov	r0, r5
   1181c:	ldr	r1, [r4]
   11820:	ldr	r2, [r4, #16]
   11824:	bl	10d14 <printf@plt>
   11828:	ldr	r0, [r4, #4]
   1182c:	bl	117fc <avl_preordem_impl@@Base>
   11830:	ldr	r4, [r4, #8]
   11834:	cmp	r4, #0
   11838:	bne	11818 <avl_preordem_impl@@Base+0x1c>
   1183c:	ldrd	r4, [sp]
   11840:	ldr	r6, [sp, #8]
   11844:	add	sp, sp, #12
   11848:	pop	{pc}		; (ldr pc, [sp], #4)
   1184c:			; <UNDEFINED> instruction: 0x000006bc

00011850 <avl_imprime@@Base>:
   11850:	cmp	r0, #0
   11854:	bxeq	lr
   11858:	str	r4, [sp, #-8]!
   1185c:	ldr	r0, [r0]
   11860:	str	lr, [sp, #4]
   11864:	bl	117fc <avl_preordem_impl@@Base>
   11868:	mov	r0, #10
   1186c:	ldr	r4, [sp]
   11870:	ldr	lr, [sp, #4]
   11874:	add	sp, sp, #8
   11878:	b	10db0 <putchar@plt>

0001187c <bst_nova@@Base>:
   1187c:	mov	r0, #4
   11880:	str	r4, [sp, #-8]!
   11884:	str	lr, [sp, #4]
   11888:	bl	10d80 <malloc@plt>
   1188c:	cmp	r0, #0
   11890:	ldr	r4, [sp]
   11894:	add	sp, sp, #4
   11898:	movne	r3, #0
   1189c:	strne	r3, [r0]
   118a0:	pop	{pc}		; (ldr pc, [sp], #4)

000118a4 <bst_novo_no@@Base>:
   118a4:	strd	r4, [sp, #-16]!
   118a8:	mov	r5, r0
   118ac:	mov	r0, #12
   118b0:	str	r6, [sp, #8]
   118b4:	str	lr, [sp, #12]
   118b8:	bl	10d80 <malloc@plt>
   118bc:	mov	r4, r0
   118c0:	mov	r0, r5
   118c4:	bl	10da4 <strlen@plt>
   118c8:	add	r6, r0, #1
   118cc:	mov	r0, r6
   118d0:	bl	10d80 <malloc@plt>
   118d4:	mov	r2, r6
   118d8:	mov	r1, r5
   118dc:	str	r0, [r4]
   118e0:	bl	10d44 <memcpy@plt>
   118e4:	mov	r3, #0
   118e8:	mov	r0, r4
   118ec:	ldr	r6, [sp, #8]
   118f0:	str	r3, [r4, #4]
   118f4:	str	r3, [r4, #8]
   118f8:	ldrd	r4, [sp]
   118fc:	add	sp, sp, #12
   11900:	pop	{pc}		; (ldr pc, [sp], #4)

00011904 <bst_no_valormin@@Base>:
   11904:	b	1190c <bst_no_valormin@@Base+0x8>
   11908:	mov	r0, r3
   1190c:	ldr	r3, [r0, #4]
   11910:	cmp	r3, #0
   11914:	bne	11908 <bst_no_valormin@@Base+0x4>
   11918:	bx	lr

0001191c <bst_min@@Base>:
   1191c:	cmp	r0, #0
   11920:	bxeq	lr
   11924:	str	r4, [sp, #-8]!
   11928:	ldr	r0, [r0]
   1192c:	str	lr, [sp, #4]
   11930:	bl	11904 <bst_no_valormin@@Base>
   11934:	ldr	r4, [sp]
   11938:	add	sp, sp, #4
   1193c:	ldr	r0, [r0]
   11940:	pop	{pc}		; (ldr pc, [sp], #4)

00011944 <bst_no_valormax@@Base>:
   11944:	b	1194c <bst_no_valormax@@Base+0x8>
   11948:	mov	r0, r3
   1194c:	ldr	r3, [r0, #8]
   11950:	cmp	r3, #0
   11954:	bne	11948 <bst_no_valormax@@Base+0x4>
   11958:	bx	lr

0001195c <bst_max@@Base>:
   1195c:	cmp	r0, #0
   11960:	bxeq	lr
   11964:	str	r4, [sp, #-8]!
   11968:	ldr	r0, [r0]
   1196c:	str	lr, [sp, #4]
   11970:	bl	11944 <bst_no_valormax@@Base>
   11974:	ldr	r4, [sp]
   11978:	add	sp, sp, #4
   1197c:	ldr	r0, [r0]
   11980:	pop	{pc}		; (ldr pc, [sp], #4)

00011984 <bst_pesquisa_impl@@Base>:
   11984:	strd	r4, [sp, #-16]!
   11988:	subs	r4, r0, #0
   1198c:	movne	r5, r1
   11990:	str	r6, [sp, #8]
   11994:	str	lr, [sp, #12]
   11998:	bne	119b0 <bst_pesquisa_impl@@Base+0x2c>
   1199c:	b	119d0 <bst_pesquisa_impl@@Base+0x4c>
   119a0:	beq	119d0 <bst_pesquisa_impl@@Base+0x4c>
   119a4:	ldr	r4, [r4, #8]
   119a8:	cmp	r4, #0
   119ac:	beq	119d0 <bst_pesquisa_impl@@Base+0x4c>
   119b0:	mov	r0, r5
   119b4:	ldr	r1, [r4]
   119b8:	bl	10d08 <strcmp@plt>
   119bc:	cmp	r0, #0
   119c0:	bge	119a0 <bst_pesquisa_impl@@Base+0x1c>
   119c4:	ldr	r4, [r4, #4]
   119c8:	cmp	r4, #0
   119cc:	bne	119b0 <bst_pesquisa_impl@@Base+0x2c>
   119d0:	mov	r0, r4
   119d4:	ldrd	r4, [sp]
   119d8:	ldr	r6, [sp, #8]
   119dc:	add	sp, sp, #12
   119e0:	pop	{pc}		; (ldr pc, [sp], #4)

000119e4 <bst_pesquisa@@Base>:
   119e4:	cmp	r1, #0
   119e8:	cmpne	r0, #0
   119ec:	beq	119f8 <bst_pesquisa@@Base+0x14>
   119f0:	ldr	r0, [r0]
   119f4:	b	11984 <bst_pesquisa_impl@@Base>
   119f8:	mov	r0, #0
   119fc:	bx	lr

00011a00 <bst_insere_impl@@Base>:
   11a00:	strd	r4, [sp, #-16]!
   11a04:	subs	r4, r0, #0
   11a08:	str	r6, [sp, #8]
   11a0c:	str	lr, [sp, #12]
   11a10:	beq	11a6c <bst_insere_impl@@Base+0x6c>
   11a14:	mov	r0, r1
   11a18:	mov	r5, r1
   11a1c:	ldr	r1, [r4]
   11a20:	bl	10d08 <strcmp@plt>
   11a24:	cmp	r0, #0
   11a28:	blt	11a58 <bst_insere_impl@@Base+0x58>
   11a2c:	bne	11a44 <bst_insere_impl@@Base+0x44>
   11a30:	mov	r0, r4
   11a34:	ldrd	r4, [sp]
   11a38:	ldr	r6, [sp, #8]
   11a3c:	add	sp, sp, #12
   11a40:	pop	{pc}		; (ldr pc, [sp], #4)
   11a44:	mov	r1, r5
   11a48:	ldr	r0, [r4, #8]
   11a4c:	bl	11a00 <bst_insere_impl@@Base>
   11a50:	str	r0, [r4, #8]
   11a54:	b	11a30 <bst_insere_impl@@Base+0x30>
   11a58:	mov	r1, r5
   11a5c:	ldr	r0, [r4, #4]
   11a60:	bl	11a00 <bst_insere_impl@@Base>
   11a64:	str	r0, [r4, #4]
   11a68:	b	11a30 <bst_insere_impl@@Base+0x30>
   11a6c:	mov	r0, r1
   11a70:	ldrd	r4, [sp]
   11a74:	ldr	r6, [sp, #8]
   11a78:	ldr	lr, [sp, #12]
   11a7c:	add	sp, sp, #16
   11a80:	b	118a4 <bst_novo_no@@Base>

00011a84 <bst_insere@@Base>:
   11a84:	clz	r3, r1
   11a88:	cmp	r0, #0
   11a8c:	strd	r4, [sp, #-16]!
   11a90:	lsr	r3, r3, #5
   11a94:	moveq	r4, #1
   11a98:	str	r6, [sp, #8]
   11a9c:	str	lr, [sp, #12]
   11aa0:	movne	r4, r3
   11aa4:	cmp	r4, #0
   11aa8:	bne	11ad0 <bst_insere@@Base+0x4c>
   11aac:	mov	r5, r0
   11ab0:	ldr	r0, [r0]
   11ab4:	bl	11a00 <bst_insere_impl@@Base>
   11ab8:	str	r0, [r5]
   11abc:	mov	r0, r4
   11ac0:	ldrd	r4, [sp]
   11ac4:	ldr	r6, [sp, #8]
   11ac8:	add	sp, sp, #12
   11acc:	pop	{pc}		; (ldr pc, [sp], #4)
   11ad0:	mvn	r4, #0
   11ad4:	b	11abc <bst_insere@@Base+0x38>

00011ad8 <bst_remove_impl@@Base>:
   11ad8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11adc:	subs	r4, r0, #0
   11ae0:	strd	r6, [sp, #8]
   11ae4:	str	r8, [sp, #16]
   11ae8:	str	lr, [sp, #20]
   11aec:	beq	11c04 <bst_remove_impl@@Base+0x12c>
   11af0:	ldr	r7, [r4]
   11af4:	mov	r0, r1
   11af8:	mov	r6, r1
   11afc:	mov	r1, r7
   11b00:	bl	10d08 <strcmp@plt>
   11b04:	cmp	r0, #0
   11b08:	blt	11b98 <bst_remove_impl@@Base+0xc0>
   11b0c:	ldr	r5, [r4, #8]
   11b10:	bne	11b6c <bst_remove_impl@@Base+0x94>
   11b14:	ldr	r6, [r4, #4]
   11b18:	cmp	r6, #0
   11b1c:	beq	11bb0 <bst_remove_impl@@Base+0xd8>
   11b20:	cmp	r5, #0
   11b24:	beq	11bbc <bst_remove_impl@@Base+0xe4>
   11b28:	mov	r0, r5
   11b2c:	mov	r5, r4
   11b30:	bl	11904 <bst_no_valormin@@Base>
   11b34:	mov	r6, r0
   11b38:	ldr	r0, [r0]
   11b3c:	bl	10da4 <strlen@plt>
   11b40:	add	r1, r0, #1
   11b44:	ldr	r0, [r4]
   11b48:	bl	10d5c <realloc@plt>
   11b4c:	str	r0, [r4]
   11b50:	ldr	r1, [r6]
   11b54:	bl	10d68 <strcpy@plt>
   11b58:	ldr	r1, [r6]
   11b5c:	ldr	r0, [r4, #8]
   11b60:	bl	11ad8 <bst_remove_impl@@Base>
   11b64:	str	r0, [r4, #8]
   11b68:	b	11b80 <bst_remove_impl@@Base+0xa8>
   11b6c:	mov	r0, r5
   11b70:	mov	r1, r6
   11b74:	mov	r5, r4
   11b78:	bl	11ad8 <bst_remove_impl@@Base>
   11b7c:	str	r0, [r4, #8]
   11b80:	mov	r0, r5
   11b84:	ldrd	r4, [sp]
   11b88:	ldrd	r6, [sp, #8]
   11b8c:	ldr	r8, [sp, #16]
   11b90:	add	sp, sp, #20
   11b94:	pop	{pc}		; (ldr pc, [sp], #4)
   11b98:	mov	r1, r6
   11b9c:	ldr	r0, [r4, #4]
   11ba0:	mov	r5, r4
   11ba4:	bl	11ad8 <bst_remove_impl@@Base>
   11ba8:	str	r0, [r4, #4]
   11bac:	b	11b80 <bst_remove_impl@@Base+0xa8>
   11bb0:	cmp	r5, #0
   11bb4:	beq	11bf0 <bst_remove_impl@@Base+0x118>
   11bb8:	mov	r6, r5
   11bbc:	ldr	r0, [r6]
   11bc0:	mov	r5, r4
   11bc4:	bl	10da4 <strlen@plt>
   11bc8:	add	r1, r0, #1
   11bcc:	mov	r0, r7
   11bd0:	bl	10d5c <realloc@plt>
   11bd4:	str	r0, [r4]
   11bd8:	ldr	r1, [r6]
   11bdc:	bl	10d68 <strcpy@plt>
   11be0:	ldr	r7, [r6]
   11be4:	ldrd	r2, [r6, #4]
   11be8:	strd	r2, [r4, #4]
   11bec:	mov	r4, r6
   11bf0:	mov	r0, r7
   11bf4:	bl	10d2c <free@plt>
   11bf8:	mov	r0, r4
   11bfc:	bl	10d2c <free@plt>
   11c00:	b	11b80 <bst_remove_impl@@Base+0xa8>
   11c04:	mov	r5, r4
   11c08:	b	11b80 <bst_remove_impl@@Base+0xa8>

00011c0c <bst_apaga@@Base>:
   11c0c:	ldr	r3, [r0]
   11c10:	str	r4, [sp, #-8]!
   11c14:	mov	r4, r0
   11c18:	str	lr, [sp, #4]
   11c1c:	cmp	r3, #0
   11c20:	beq	11c40 <bst_apaga@@Base+0x34>
   11c24:	mov	r0, r3
   11c28:	ldr	r1, [r3]
   11c2c:	bl	11ad8 <bst_remove_impl@@Base>
   11c30:	cmp	r0, #0
   11c34:	mov	r3, r0
   11c38:	str	r0, [r4]
   11c3c:	bne	11c24 <bst_apaga@@Base+0x18>
   11c40:	mov	r0, r4
   11c44:	ldr	r4, [sp]
   11c48:	ldr	lr, [sp, #4]
   11c4c:	add	sp, sp, #8
   11c50:	b	10d2c <free@plt>

00011c54 <bst_remove@@Base>:
   11c54:	clz	r3, r1
   11c58:	cmp	r0, #0
   11c5c:	strd	r4, [sp, #-16]!
   11c60:	lsr	r3, r3, #5
   11c64:	moveq	r4, #1
   11c68:	str	r6, [sp, #8]
   11c6c:	str	lr, [sp, #12]
   11c70:	movne	r4, r3
   11c74:	cmp	r4, #0
   11c78:	bne	11ca0 <bst_remove@@Base+0x4c>
   11c7c:	mov	r5, r0
   11c80:	ldr	r0, [r0]
   11c84:	bl	11ad8 <bst_remove_impl@@Base>
   11c88:	str	r0, [r5]
   11c8c:	mov	r0, r4
   11c90:	ldrd	r4, [sp]
   11c94:	ldr	r6, [sp, #8]
   11c98:	add	sp, sp, #12
   11c9c:	pop	{pc}		; (ldr pc, [sp], #4)
   11ca0:	mvn	r4, #0
   11ca4:	b	11c8c <bst_remove@@Base+0x38>

00011ca8 <bst_altura@@Base>:
   11ca8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11cac:	subs	r4, r0, #0
   11cb0:	strd	r6, [sp, #8]
   11cb4:	str	r8, [sp, #16]
   11cb8:	str	lr, [sp, #20]
   11cbc:	beq	11d48 <bst_altura@@Base+0xa0>
   11cc0:	mov	r5, #0
   11cc4:	ldmib	r4, {r4, r6}
   11cc8:	mov	r7, r5
   11ccc:	cmp	r6, #0
   11cd0:	mov	r0, r4
   11cd4:	beq	11cfc <bst_altura@@Base+0x54>
   11cd8:	bl	11ca8 <bst_altura@@Base>
   11cdc:	mov	r8, r0
   11ce0:	mov	r0, r6
   11ce4:	bl	11ca8 <bst_altura@@Base>
   11ce8:	cmp	r8, r0
   11cec:	bgt	11d38 <bst_altura@@Base+0x90>
   11cf0:	add	r5, r5, #1
   11cf4:	mov	r4, r6
   11cf8:	b	11cc4 <bst_altura@@Base+0x1c>
   11cfc:	cmp	r4, #0
   11d00:	beq	11d20 <bst_altura@@Base+0x78>
   11d04:	bl	11ca8 <bst_altura@@Base>
   11d08:	mov	r8, r0
   11d0c:	mov	r0, r6
   11d10:	bl	11ca8 <bst_altura@@Base>
   11d14:	cmp	r0, r8
   11d18:	add	r5, r5, #1
   11d1c:	blt	11cc4 <bst_altura@@Base+0x1c>
   11d20:	mov	r0, r7
   11d24:	ldrd	r4, [sp]
   11d28:	ldrd	r6, [sp, #8]
   11d2c:	ldr	r8, [sp, #16]
   11d30:	add	sp, sp, #20
   11d34:	pop	{pc}		; (ldr pc, [sp], #4)
   11d38:	cmp	r4, #0
   11d3c:	add	r5, r5, #1
   11d40:	bne	11cc4 <bst_altura@@Base+0x1c>
   11d44:	b	11d20 <bst_altura@@Base+0x78>
   11d48:	mvn	r7, #0
   11d4c:	b	11d20 <bst_altura@@Base+0x78>

00011d50 <bst_preordem_impl@@Base>:
   11d50:	strd	r4, [sp, #-16]!
   11d54:	subs	r4, r0, #0
   11d58:	str	r6, [sp, #8]
   11d5c:	str	lr, [sp, #12]
   11d60:	beq	11d8c <bst_preordem_impl@@Base+0x3c>
   11d64:	ldr	r5, [pc, #48]	; 11d9c <bst_preordem_impl@@Base+0x4c>
   11d68:	add	r5, pc, r5
   11d6c:	mov	r0, r5
   11d70:	ldr	r1, [r4]
   11d74:	bl	10d14 <printf@plt>
   11d78:	ldr	r0, [r4, #4]
   11d7c:	bl	11d50 <bst_preordem_impl@@Base>
   11d80:	ldr	r4, [r4, #8]
   11d84:	cmp	r4, #0
   11d88:	bne	11d6c <bst_preordem_impl@@Base+0x1c>
   11d8c:	ldrd	r4, [sp]
   11d90:	ldr	r6, [sp, #8]
   11d94:	add	sp, sp, #12
   11d98:	pop	{pc}		; (ldr pc, [sp], #4)
   11d9c:	andeq	r0, r0, r0, ror r1

00011da0 <bst_imprime@@Base>:
   11da0:	str	r4, [sp, #-8]!
   11da4:	subs	r4, r0, #0
   11da8:	str	lr, [sp, #4]
   11dac:	beq	11dd8 <bst_imprime@@Base+0x38>
   11db0:	ldr	r0, [pc, #44]	; 11de4 <bst_imprime@@Base+0x44>
   11db4:	add	r0, pc, r0
   11db8:	bl	10d14 <printf@plt>
   11dbc:	ldr	r0, [r4]
   11dc0:	bl	11d50 <bst_preordem_impl@@Base>
   11dc4:	mov	r0, #10
   11dc8:	ldr	r4, [sp]
   11dcc:	ldr	lr, [sp, #4]
   11dd0:	add	sp, sp, #8
   11dd4:	b	10db0 <putchar@plt>
   11dd8:	ldr	r4, [sp]
   11ddc:	add	sp, sp, #4
   11de0:	pop	{pc}		; (ldr pc, [sp], #4)
   11de4:	andeq	r0, r0, r8, lsr #2

00011de8 <__libc_csu_init@@Base>:
   11de8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11dec:	mov	r7, r0
   11df0:	ldr	r6, [pc, #72]	; 11e40 <__libc_csu_init@@Base+0x58>
   11df4:	ldr	r5, [pc, #72]	; 11e44 <__libc_csu_init@@Base+0x5c>
   11df8:	add	r6, pc, r6
   11dfc:	add	r5, pc, r5
   11e00:	sub	r6, r6, r5
   11e04:	mov	r8, r1
   11e08:	mov	r9, r2
   11e0c:	bl	10ce8 <strcmp@plt-0x20>
   11e10:	asrs	r6, r6, #2
   11e14:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11e18:	mov	r4, #0
   11e1c:	add	r4, r4, #1
   11e20:	ldr	r3, [r5], #4
   11e24:	mov	r2, r9
   11e28:	mov	r1, r8
   11e2c:	mov	r0, r7
   11e30:	blx	r3
   11e34:	cmp	r6, r4
   11e38:	bne	11e1c <__libc_csu_init@@Base+0x34>
   11e3c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11e40:	andeq	r0, r1, r4, lsl r1
   11e44:	andeq	r0, r1, ip, lsl #2

00011e48 <__libc_csu_fini@@Base>:
   11e48:	bx	lr

Disassembly of section .fini:

00011e4c <.fini>:
   11e4c:	push	{r3, lr}
   11e50:	pop	{r3, pc}
