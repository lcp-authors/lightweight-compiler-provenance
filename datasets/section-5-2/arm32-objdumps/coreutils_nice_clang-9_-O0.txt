
../repos/coreutils/src/nice:     file format elf32-littlearm


Disassembly of section .init:

00010d34 <.init>:
   10d34:	push	{r3, lr}
   10d38:	bl	10fdc <__assert_fail@plt+0x48>
   10d3c:	pop	{r3, pc}

Disassembly of section .plt:

00010d40 <calloc@plt-0x14>:
   10d40:	push	{lr}		; (str lr, [sp, #-4]!)
   10d44:	ldr	lr, [pc, #4]	; 10d50 <calloc@plt-0x4>
   10d48:	add	lr, pc, lr
   10d4c:	ldr	pc, [lr, #8]!
   10d50:			; <UNDEFINED> instruction: 0x0001c2b0

00010d54 <calloc@plt>:
   10d54:	add	ip, pc, #0, 12
   10d58:	add	ip, ip, #28, 20	; 0x1c000
   10d5c:	ldr	pc, [ip, #688]!	; 0x2b0

00010d60 <fputs_unlocked@plt>:
   10d60:	add	ip, pc, #0, 12
   10d64:	add	ip, ip, #28, 20	; 0x1c000
   10d68:	ldr	pc, [ip, #680]!	; 0x2a8

00010d6c <raise@plt>:
   10d6c:	add	ip, pc, #0, 12
   10d70:	add	ip, ip, #28, 20	; 0x1c000
   10d74:	ldr	pc, [ip, #672]!	; 0x2a0

00010d78 <strcmp@plt>:
   10d78:	add	ip, pc, #0, 12
   10d7c:	add	ip, ip, #28, 20	; 0x1c000
   10d80:	ldr	pc, [ip, #664]!	; 0x298

00010d84 <strtol@plt>:
   10d84:	add	ip, pc, #0, 12
   10d88:	add	ip, ip, #28, 20	; 0x1c000
   10d8c:	ldr	pc, [ip, #656]!	; 0x290

00010d90 <printf@plt>:
   10d90:	add	ip, pc, #0, 12
   10d94:	add	ip, ip, #28, 20	; 0x1c000
   10d98:	ldr	pc, [ip, #648]!	; 0x288

00010d9c <fflush@plt>:
   10d9c:	add	ip, pc, #0, 12
   10da0:	add	ip, ip, #28, 20	; 0x1c000
   10da4:	ldr	pc, [ip, #640]!	; 0x280

00010da8 <free@plt>:
   10da8:	add	ip, pc, #0, 12
   10dac:	add	ip, ip, #28, 20	; 0x1c000
   10db0:	ldr	pc, [ip, #632]!	; 0x278

00010db4 <_exit@plt>:
   10db4:	add	ip, pc, #0, 12
   10db8:	add	ip, ip, #28, 20	; 0x1c000
   10dbc:	ldr	pc, [ip, #624]!	; 0x270

00010dc0 <memcpy@plt>:
   10dc0:	add	ip, pc, #0, 12
   10dc4:	add	ip, ip, #28, 20	; 0x1c000
   10dc8:	ldr	pc, [ip, #616]!	; 0x268

00010dcc <execvp@plt>:
   10dcc:	add	ip, pc, #0, 12
   10dd0:	add	ip, ip, #28, 20	; 0x1c000
   10dd4:	ldr	pc, [ip, #608]!	; 0x260

00010dd8 <mbsinit@plt>:
   10dd8:	add	ip, pc, #0, 12
   10ddc:	add	ip, ip, #28, 20	; 0x1c000
   10de0:	ldr	pc, [ip, #600]!	; 0x258

00010de4 <memcmp@plt>:
   10de4:	add	ip, pc, #0, 12
   10de8:	add	ip, ip, #28, 20	; 0x1c000
   10dec:	ldr	pc, [ip, #592]!	; 0x250

00010df0 <realloc@plt>:
   10df0:	add	ip, pc, #0, 12
   10df4:	add	ip, ip, #28, 20	; 0x1c000
   10df8:	ldr	pc, [ip, #584]!	; 0x248

00010dfc <getpriority@plt>:
   10dfc:	add	ip, pc, #0, 12
   10e00:	add	ip, ip, #28, 20	; 0x1c000
   10e04:	ldr	pc, [ip, #576]!	; 0x240

00010e08 <textdomain@plt>:
   10e08:	add	ip, pc, #0, 12
   10e0c:	add	ip, ip, #28, 20	; 0x1c000
   10e10:	ldr	pc, [ip, #568]!	; 0x238

00010e14 <iswprint@plt>:
   10e14:	add	ip, pc, #0, 12
   10e18:	add	ip, ip, #28, 20	; 0x1c000
   10e1c:	ldr	pc, [ip, #560]!	; 0x230

00010e20 <lseek64@plt>:
   10e20:	add	ip, pc, #0, 12
   10e24:	add	ip, ip, #28, 20	; 0x1c000
   10e28:	ldr	pc, [ip, #552]!	; 0x228

00010e2c <__ctype_get_mb_cur_max@plt>:
   10e2c:	add	ip, pc, #0, 12
   10e30:	add	ip, ip, #28, 20	; 0x1c000
   10e34:	ldr	pc, [ip, #544]!	; 0x220

00010e38 <__fpending@plt>:
   10e38:	add	ip, pc, #0, 12
   10e3c:	add	ip, ip, #28, 20	; 0x1c000
   10e40:	ldr	pc, [ip, #536]!	; 0x218

00010e44 <ferror_unlocked@plt>:
   10e44:	add	ip, pc, #0, 12
   10e48:	add	ip, ip, #28, 20	; 0x1c000
   10e4c:	ldr	pc, [ip, #528]!	; 0x210

00010e50 <mbrtowc@plt>:
   10e50:	add	ip, pc, #0, 12
   10e54:	add	ip, ip, #28, 20	; 0x1c000
   10e58:	ldr	pc, [ip, #520]!	; 0x208

00010e5c <error@plt>:
   10e5c:	add	ip, pc, #0, 12
   10e60:	add	ip, ip, #28, 20	; 0x1c000
   10e64:	ldr	pc, [ip, #512]!	; 0x200

00010e68 <setpriority@plt>:
   10e68:	add	ip, pc, #0, 12
   10e6c:	add	ip, ip, #28, 20	; 0x1c000
   10e70:	ldr	pc, [ip, #504]!	; 0x1f8

00010e74 <malloc@plt>:
   10e74:	add	ip, pc, #0, 12
   10e78:	add	ip, ip, #28, 20	; 0x1c000
   10e7c:	ldr	pc, [ip, #496]!	; 0x1f0

00010e80 <__libc_start_main@plt>:
   10e80:	add	ip, pc, #0, 12
   10e84:	add	ip, ip, #28, 20	; 0x1c000
   10e88:	ldr	pc, [ip, #488]!	; 0x1e8

00010e8c <__freading@plt>:
   10e8c:	add	ip, pc, #0, 12
   10e90:	add	ip, ip, #28, 20	; 0x1c000
   10e94:	ldr	pc, [ip, #480]!	; 0x1e0

00010e98 <__gmon_start__@plt>:
   10e98:	add	ip, pc, #0, 12
   10e9c:	add	ip, ip, #28, 20	; 0x1c000
   10ea0:	ldr	pc, [ip, #472]!	; 0x1d8

00010ea4 <getopt_long@plt>:
   10ea4:	add	ip, pc, #0, 12
   10ea8:	add	ip, ip, #28, 20	; 0x1c000
   10eac:	ldr	pc, [ip, #464]!	; 0x1d0

00010eb0 <__ctype_b_loc@plt>:
   10eb0:	add	ip, pc, #0, 12
   10eb4:	add	ip, ip, #28, 20	; 0x1c000
   10eb8:	ldr	pc, [ip, #456]!	; 0x1c8

00010ebc <exit@plt>:
   10ebc:	add	ip, pc, #0, 12
   10ec0:	add	ip, ip, #28, 20	; 0x1c000
   10ec4:	ldr	pc, [ip, #448]!	; 0x1c0

00010ec8 <gettext@plt>:
   10ec8:	add	ip, pc, #0, 12
   10ecc:	add	ip, ip, #28, 20	; 0x1c000
   10ed0:	ldr	pc, [ip, #440]!	; 0x1b8

00010ed4 <strlen@plt>:
   10ed4:	add	ip, pc, #0, 12
   10ed8:	add	ip, ip, #28, 20	; 0x1c000
   10edc:	ldr	pc, [ip, #432]!	; 0x1b0

00010ee0 <strchr@plt>:
   10ee0:	add	ip, pc, #0, 12
   10ee4:	add	ip, ip, #28, 20	; 0x1c000
   10ee8:	ldr	pc, [ip, #424]!	; 0x1a8

00010eec <fprintf@plt>:
   10eec:	add	ip, pc, #0, 12
   10ef0:	add	ip, ip, #28, 20	; 0x1c000
   10ef4:	ldr	pc, [ip, #416]!	; 0x1a0

00010ef8 <__errno_location@plt>:
   10ef8:	add	ip, pc, #0, 12
   10efc:	add	ip, ip, #28, 20	; 0x1c000
   10f00:	ldr	pc, [ip, #408]!	; 0x198

00010f04 <__cxa_atexit@plt>:
   10f04:	add	ip, pc, #0, 12
   10f08:	add	ip, ip, #28, 20	; 0x1c000
   10f0c:	ldr	pc, [ip, #400]!	; 0x190

00010f10 <memset@plt>:
   10f10:	add	ip, pc, #0, 12
   10f14:	add	ip, ip, #28, 20	; 0x1c000
   10f18:	ldr	pc, [ip, #392]!	; 0x188

00010f1c <fileno@plt>:
   10f1c:	add	ip, pc, #0, 12
   10f20:	add	ip, ip, #28, 20	; 0x1c000
   10f24:	ldr	pc, [ip, #384]!	; 0x180

00010f28 <fclose@plt>:
   10f28:	add	ip, pc, #0, 12
   10f2c:	add	ip, ip, #28, 20	; 0x1c000
   10f30:	ldr	pc, [ip, #376]!	; 0x178

00010f34 <fseeko64@plt>:
   10f34:	add	ip, pc, #0, 12
   10f38:	add	ip, ip, #28, 20	; 0x1c000
   10f3c:	ldr	pc, [ip, #368]!	; 0x170

00010f40 <setlocale@plt>:
   10f40:	add	ip, pc, #0, 12
   10f44:	add	ip, ip, #28, 20	; 0x1c000
   10f48:	ldr	pc, [ip, #360]!	; 0x168

00010f4c <strrchr@plt>:
   10f4c:	add	ip, pc, #0, 12
   10f50:	add	ip, ip, #28, 20	; 0x1c000
   10f54:	ldr	pc, [ip, #352]!	; 0x160

00010f58 <nl_langinfo@plt>:
   10f58:	add	ip, pc, #0, 12
   10f5c:	add	ip, ip, #28, 20	; 0x1c000
   10f60:	ldr	pc, [ip, #344]!	; 0x158

00010f64 <bindtextdomain@plt>:
   10f64:	add	ip, pc, #0, 12
   10f68:	add	ip, ip, #28, 20	; 0x1c000
   10f6c:	ldr	pc, [ip, #336]!	; 0x150

00010f70 <fputs@plt>:
   10f70:	add	ip, pc, #0, 12
   10f74:	add	ip, ip, #28, 20	; 0x1c000
   10f78:	ldr	pc, [ip, #328]!	; 0x148

00010f7c <strncmp@plt>:
   10f7c:	add	ip, pc, #0, 12
   10f80:	add	ip, ip, #28, 20	; 0x1c000
   10f84:	ldr	pc, [ip, #320]!	; 0x140

00010f88 <abort@plt>:
   10f88:	add	ip, pc, #0, 12
   10f8c:	add	ip, ip, #28, 20	; 0x1c000
   10f90:	ldr	pc, [ip, #312]!	; 0x138

00010f94 <__assert_fail@plt>:
   10f94:	add	ip, pc, #0, 12
   10f98:	add	ip, ip, #28, 20	; 0x1c000
   10f9c:	ldr	pc, [ip, #304]!	; 0x130

Disassembly of section .text:

00010fa0 <.text>:
   10fa0:	mov	fp, #0
   10fa4:	mov	lr, #0
   10fa8:	pop	{r1}		; (ldr r1, [sp], #4)
   10fac:	mov	r2, sp
   10fb0:	push	{r2}		; (str r2, [sp, #-4]!)
   10fb4:	push	{r0}		; (str r0, [sp, #-4]!)
   10fb8:	ldr	ip, [pc, #16]	; 10fd0 <__assert_fail@plt+0x3c>
   10fbc:	push	{ip}		; (str ip, [sp, #-4]!)
   10fc0:	ldr	r0, [pc, #12]	; 10fd4 <__assert_fail@plt+0x40>
   10fc4:	ldr	r3, [pc, #12]	; 10fd8 <__assert_fail@plt+0x44>
   10fc8:	bl	10e80 <__libc_start_main@plt>
   10fcc:	bl	10f88 <abort@plt>
   10fd0:	strdeq	fp, [r1], -r8
   10fd4:	andeq	r1, r1, ip, lsr #7
   10fd8:	muleq	r1, r8, ip
   10fdc:	ldr	r3, [pc, #20]	; 10ff8 <__assert_fail@plt+0x64>
   10fe0:	ldr	r2, [pc, #20]	; 10ffc <__assert_fail@plt+0x68>
   10fe4:	add	r3, pc, r3
   10fe8:	ldr	r2, [r3, r2]
   10fec:	cmp	r2, #0
   10ff0:	bxeq	lr
   10ff4:	b	10e98 <__gmon_start__@plt>
   10ff8:	andeq	ip, r1, r4, lsl r0
   10ffc:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   11000:	ldr	r0, [pc, #24]	; 11020 <__assert_fail@plt+0x8c>
   11004:	ldr	r3, [pc, #24]	; 11024 <__assert_fail@plt+0x90>
   11008:	cmp	r3, r0
   1100c:	bxeq	lr
   11010:	ldr	r3, [pc, #16]	; 11028 <__assert_fail@plt+0x94>
   11014:	cmp	r3, #0
   11018:	bxeq	lr
   1101c:	bx	r3
   11020:	andeq	sp, r2, r4, lsr #2
   11024:	andeq	sp, r2, r4, lsr #2
   11028:	andeq	r0, r0, r0
   1102c:	ldr	r0, [pc, #36]	; 11058 <__assert_fail@plt+0xc4>
   11030:	ldr	r1, [pc, #36]	; 1105c <__assert_fail@plt+0xc8>
   11034:	sub	r1, r1, r0
   11038:	asr	r1, r1, #2
   1103c:	add	r1, r1, r1, lsr #31
   11040:	asrs	r1, r1, #1
   11044:	bxeq	lr
   11048:	ldr	r3, [pc, #16]	; 11060 <__assert_fail@plt+0xcc>
   1104c:	cmp	r3, #0
   11050:	bxeq	lr
   11054:	bx	r3
   11058:	andeq	sp, r2, r4, lsr #2
   1105c:	andeq	sp, r2, r4, lsr #2
   11060:	andeq	r0, r0, r0
   11064:	push	{r4, lr}
   11068:	ldr	r4, [pc, #24]	; 11088 <__assert_fail@plt+0xf4>
   1106c:	ldrb	r3, [r4]
   11070:	cmp	r3, #0
   11074:	popne	{r4, pc}
   11078:	bl	11000 <__assert_fail@plt+0x6c>
   1107c:	mov	r3, #1
   11080:	strb	r3, [r4]
   11084:	pop	{r4, pc}
   11088:	andeq	sp, r2, r4, asr #2
   1108c:	b	1102c <__assert_fail@plt+0x98>
   11090:	push	{fp, lr}
   11094:	mov	fp, sp
   11098:	sub	sp, sp, #40	; 0x28
   1109c:	str	r0, [fp, #-4]
   110a0:	ldr	r0, [fp, #-4]
   110a4:	cmp	r0, #0
   110a8:	beq	110f4 <__assert_fail@plt+0x160>
   110ac:	b	110b0 <__assert_fail@plt+0x11c>
   110b0:	movw	r0, #53560	; 0xd138
   110b4:	movt	r0, #2
   110b8:	ldr	r0, [r0]
   110bc:	movw	r1, #48416	; 0xbd20
   110c0:	movt	r1, #1
   110c4:	str	r0, [fp, #-8]
   110c8:	mov	r0, r1
   110cc:	bl	10ec8 <gettext@plt>
   110d0:	movw	r1, #53584	; 0xd150
   110d4:	movt	r1, #2
   110d8:	ldr	r2, [r1]
   110dc:	ldr	r1, [fp, #-8]
   110e0:	str	r0, [fp, #-12]
   110e4:	mov	r0, r1
   110e8:	ldr	r1, [fp, #-12]
   110ec:	bl	10eec <fprintf@plt>
   110f0:	b	111d0 <__assert_fail@plt+0x23c>
   110f4:	movw	r0, #48455	; 0xbd47
   110f8:	movt	r0, #1
   110fc:	bl	10ec8 <gettext@plt>
   11100:	movw	r1, #53584	; 0xd150
   11104:	movt	r1, #2
   11108:	ldr	r1, [r1]
   1110c:	bl	10d90 <printf@plt>
   11110:	movw	r1, #48494	; 0xbd6e
   11114:	movt	r1, #1
   11118:	str	r0, [fp, #-16]
   1111c:	mov	r0, r1
   11120:	bl	10ec8 <gettext@plt>
   11124:	mvn	r1, #19
   11128:	movw	r2, #19
   1112c:	bl	10d90 <printf@plt>
   11130:	str	r0, [sp, #20]
   11134:	bl	111d8 <__assert_fail@plt+0x244>
   11138:	movw	r0, #48716	; 0xbe4c
   1113c:	movt	r0, #1
   11140:	bl	10ec8 <gettext@plt>
   11144:	movw	r1, #53564	; 0xd13c
   11148:	movt	r1, #2
   1114c:	ldr	r1, [r1]
   11150:	bl	10d60 <fputs_unlocked@plt>
   11154:	movw	r1, #48783	; 0xbe8f
   11158:	movt	r1, #1
   1115c:	str	r0, [sp, #16]
   11160:	mov	r0, r1
   11164:	bl	10ec8 <gettext@plt>
   11168:	movw	r1, #53564	; 0xd13c
   1116c:	movt	r1, #2
   11170:	ldr	r1, [r1]
   11174:	bl	10d60 <fputs_unlocked@plt>
   11178:	movw	r1, #48828	; 0xbebc
   1117c:	movt	r1, #1
   11180:	str	r0, [sp, #12]
   11184:	mov	r0, r1
   11188:	bl	10ec8 <gettext@plt>
   1118c:	movw	r1, #53564	; 0xd13c
   11190:	movt	r1, #2
   11194:	ldr	r1, [r1]
   11198:	bl	10d60 <fputs_unlocked@plt>
   1119c:	movw	r1, #48882	; 0xbef2
   111a0:	movt	r1, #1
   111a4:	str	r0, [sp, #8]
   111a8:	mov	r0, r1
   111ac:	bl	10ec8 <gettext@plt>
   111b0:	movw	r1, #49073	; 0xbfb1
   111b4:	movt	r1, #1
   111b8:	bl	10d90 <printf@plt>
   111bc:	movw	r1, #49073	; 0xbfb1
   111c0:	movt	r1, #1
   111c4:	str	r0, [sp, #4]
   111c8:	mov	r0, r1
   111cc:	bl	11200 <__assert_fail@plt+0x26c>
   111d0:	ldr	r0, [fp, #-4]
   111d4:	bl	10ebc <exit@plt>
   111d8:	push	{fp, lr}
   111dc:	mov	fp, sp
   111e0:	movw	r0, #49245	; 0xc05d
   111e4:	movt	r0, #1
   111e8:	bl	10ec8 <gettext@plt>
   111ec:	movw	r1, #53564	; 0xd13c
   111f0:	movt	r1, #2
   111f4:	ldr	r1, [r1]
   111f8:	bl	10d60 <fputs_unlocked@plt>
   111fc:	pop	{fp, pc}
   11200:	push	{fp, lr}
   11204:	mov	fp, sp
   11208:	sub	sp, sp, #88	; 0x58
   1120c:	add	r1, sp, #28
   11210:	movw	r2, #49708	; 0xc22c
   11214:	movt	r2, #1
   11218:	str	r0, [fp, #-4]
   1121c:	mov	r0, r1
   11220:	str	r1, [sp, #12]
   11224:	mov	r1, r2
   11228:	movw	r2, #56	; 0x38
   1122c:	bl	10dc0 <memcpy@plt>
   11230:	ldr	r0, [fp, #-4]
   11234:	str	r0, [sp, #24]
   11238:	ldr	r0, [sp, #12]
   1123c:	str	r0, [sp, #20]
   11240:	ldr	r0, [sp, #20]
   11244:	ldr	r0, [r0]
   11248:	movw	r1, #0
   1124c:	cmp	r0, r1
   11250:	movw	r0, #0
   11254:	str	r0, [sp, #8]
   11258:	beq	11284 <__assert_fail@plt+0x2f0>
   1125c:	ldr	r0, [fp, #-4]
   11260:	ldr	r1, [sp, #20]
   11264:	ldr	r1, [r1]
   11268:	bl	10d78 <strcmp@plt>
   1126c:	cmp	r0, #0
   11270:	movw	r0, #0
   11274:	moveq	r0, #1
   11278:	mvn	r1, #0
   1127c:	eor	r0, r0, r1
   11280:	str	r0, [sp, #8]
   11284:	ldr	r0, [sp, #8]
   11288:	tst	r0, #1
   1128c:	beq	112a0 <__assert_fail@plt+0x30c>
   11290:	ldr	r0, [sp, #20]
   11294:	add	r0, r0, #8
   11298:	str	r0, [sp, #20]
   1129c:	b	11240 <__assert_fail@plt+0x2ac>
   112a0:	ldr	r0, [sp, #20]
   112a4:	ldr	r0, [r0, #4]
   112a8:	movw	r1, #0
   112ac:	cmp	r0, r1
   112b0:	beq	112c0 <__assert_fail@plt+0x32c>
   112b4:	ldr	r0, [sp, #20]
   112b8:	ldr	r0, [r0, #4]
   112bc:	str	r0, [sp, #24]
   112c0:	movw	r0, #49415	; 0xc107
   112c4:	movt	r0, #1
   112c8:	bl	10ec8 <gettext@plt>
   112cc:	movw	r1, #49106	; 0xbfd2
   112d0:	movt	r1, #1
   112d4:	movw	r2, #49438	; 0xc11e
   112d8:	movt	r2, #1
   112dc:	bl	10d90 <printf@plt>
   112e0:	movw	r1, #5
   112e4:	str	r0, [sp, #4]
   112e8:	mov	r0, r1
   112ec:	movw	r1, #0
   112f0:	bl	10f40 <setlocale@plt>
   112f4:	str	r0, [sp, #16]
   112f8:	ldr	r0, [sp, #16]
   112fc:	movw	r1, #0
   11300:	cmp	r0, r1
   11304:	beq	11340 <__assert_fail@plt+0x3ac>
   11308:	ldr	r0, [sp, #16]
   1130c:	movw	r1, #49478	; 0xc146
   11310:	movt	r1, #1
   11314:	movw	r2, #3
   11318:	bl	10f7c <strncmp@plt>
   1131c:	cmp	r0, #0
   11320:	beq	11340 <__assert_fail@plt+0x3ac>
   11324:	movw	r0, #49482	; 0xc14a
   11328:	movt	r0, #1
   1132c:	bl	10ec8 <gettext@plt>
   11330:	movw	r1, #53564	; 0xd13c
   11334:	movt	r1, #2
   11338:	ldr	r1, [r1]
   1133c:	bl	10d60 <fputs_unlocked@plt>
   11340:	movw	r0, #49553	; 0xc191
   11344:	movt	r0, #1
   11348:	bl	10ec8 <gettext@plt>
   1134c:	ldr	r2, [fp, #-4]
   11350:	movw	r1, #49438	; 0xc11e
   11354:	movt	r1, #1
   11358:	bl	10d90 <printf@plt>
   1135c:	movw	r1, #49580	; 0xc1ac
   11360:	movt	r1, #1
   11364:	str	r0, [sp]
   11368:	mov	r0, r1
   1136c:	bl	10ec8 <gettext@plt>
   11370:	ldr	r1, [sp, #24]
   11374:	ldr	r2, [sp, #24]
   11378:	ldr	r3, [fp, #-4]
   1137c:	cmp	r2, r3
   11380:	movw	r2, #0
   11384:	moveq	r2, #1
   11388:	tst	r2, #1
   1138c:	movw	r2, #49630	; 0xc1de
   11390:	movt	r2, #1
   11394:	movw	r3, #49348	; 0xc0c4
   11398:	movt	r3, #1
   1139c:	movne	r2, r3
   113a0:	bl	10d90 <printf@plt>
   113a4:	mov	sp, fp
   113a8:	pop	{fp, pc}
   113ac:	push	{fp, lr}
   113b0:	mov	fp, sp
   113b4:	sub	sp, sp, #168	; 0xa8
   113b8:	movw	r2, #0
   113bc:	str	r2, [fp, #-4]
   113c0:	str	r0, [fp, #-8]
   113c4:	str	r1, [fp, #-12]
   113c8:	movw	r0, #10
   113cc:	str	r0, [fp, #-20]	; 0xffffffec
   113d0:	str	r2, [fp, #-24]	; 0xffffffe8
   113d4:	ldr	r0, [fp, #-12]
   113d8:	ldr	r0, [r0]
   113dc:	bl	11b80 <__assert_fail@plt+0xbec>
   113e0:	movw	r0, #6
   113e4:	movw	r1, #49630	; 0xc1de
   113e8:	movt	r1, #1
   113ec:	bl	10f40 <setlocale@plt>
   113f0:	movw	r1, #49110	; 0xbfd6
   113f4:	movt	r1, #1
   113f8:	str	r0, [fp, #-60]	; 0xffffffc4
   113fc:	mov	r0, r1
   11400:	movw	r1, #49078	; 0xbfb6
   11404:	movt	r1, #1
   11408:	bl	10f64 <bindtextdomain@plt>
   1140c:	movw	r1, #49110	; 0xbfd6
   11410:	movt	r1, #1
   11414:	str	r0, [fp, #-64]	; 0xffffffc0
   11418:	mov	r0, r1
   1141c:	bl	10e08 <textdomain@plt>
   11420:	movw	r1, #125	; 0x7d
   11424:	str	r0, [fp, #-68]	; 0xffffffbc
   11428:	mov	r0, r1
   1142c:	bl	119ac <__assert_fail@plt+0xa18>
   11430:	movw	r0, #6752	; 0x1a60
   11434:	movt	r0, #1
   11438:	bl	1bcfc <__assert_fail@plt+0xad68>
   1143c:	movw	r1, #1
   11440:	str	r1, [fp, #-32]	; 0xffffffe0
   11444:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11448:	ldr	r1, [fp, #-8]
   1144c:	cmp	r0, r1
   11450:	bge	1165c <__assert_fail@plt+0x6c8>
   11454:	ldr	r0, [fp, #-12]
   11458:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1145c:	add	r0, r0, r1, lsl #2
   11460:	ldr	r0, [r0]
   11464:	str	r0, [fp, #-36]	; 0xffffffdc
   11468:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1146c:	ldrb	r0, [r0]
   11470:	cmp	r0, #45	; 0x2d
   11474:	bne	114f0 <__assert_fail@plt+0x55c>
   11478:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1147c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   11480:	ldrb	r1, [r1, #1]
   11484:	cmp	r1, #45	; 0x2d
   11488:	movw	r1, #1
   1148c:	str	r0, [fp, #-72]	; 0xffffffb8
   11490:	str	r1, [fp, #-76]	; 0xffffffb4
   11494:	beq	114b0 <__assert_fail@plt+0x51c>
   11498:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1149c:	ldrb	r0, [r0, #1]
   114a0:	cmp	r0, #43	; 0x2b
   114a4:	movw	r0, #0
   114a8:	moveq	r0, #1
   114ac:	str	r0, [fp, #-76]	; 0xffffffb4
   114b0:	ldr	r0, [fp, #-76]	; 0xffffffb4
   114b4:	and	r0, r0, #1
   114b8:	add	r0, r0, #1
   114bc:	ldr	r1, [fp, #-72]	; 0xffffffb8
   114c0:	add	r0, r1, r0
   114c4:	ldrb	r0, [r0]
   114c8:	sub	r0, r0, #48	; 0x30
   114cc:	cmp	r0, #9
   114d0:	bhi	114f0 <__assert_fail@plt+0x55c>
   114d4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   114d8:	add	r0, r0, #1
   114dc:	str	r0, [fp, #-24]	; 0xffffffe8
   114e0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   114e4:	add	r0, r0, #1
   114e8:	str	r0, [fp, #-32]	; 0xffffffe0
   114ec:	b	11658 <__assert_fail@plt+0x6c4>
   114f0:	ldr	r0, [fp, #-8]
   114f4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   114f8:	sub	r0, r0, r1
   114fc:	add	r0, r0, #1
   11500:	str	r0, [fp, #-44]	; 0xffffffd4
   11504:	ldr	r0, [fp, #-12]
   11508:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1150c:	add	r0, r0, r1, lsl #2
   11510:	sub	r0, r0, #4
   11514:	str	r0, [fp, #-48]	; 0xffffffd0
   11518:	ldr	r0, [fp, #-12]
   1151c:	ldr	r0, [r0]
   11520:	ldr	r1, [fp, #-48]	; 0xffffffd0
   11524:	str	r0, [r1]
   11528:	movw	r0, #53552	; 0xd130
   1152c:	movt	r0, #2
   11530:	mov	r1, #0
   11534:	str	r1, [r0]
   11538:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1153c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   11540:	mov	ip, sp
   11544:	str	r1, [ip]
   11548:	movw	r1, #49102	; 0xbfce
   1154c:	movt	r1, #1
   11550:	movw	ip, #49644	; 0xc1ec
   11554:	movt	ip, #1
   11558:	str	r0, [fp, #-80]	; 0xffffffb0
   1155c:	mov	r0, r2
   11560:	str	r1, [sp, #84]	; 0x54
   11564:	mov	r1, r3
   11568:	ldr	r2, [sp, #84]	; 0x54
   1156c:	mov	r3, ip
   11570:	bl	10ea4 <getopt_long@plt>
   11574:	str	r0, [fp, #-40]	; 0xffffffd8
   11578:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1157c:	ldr	r1, [r0]
   11580:	ldr	r2, [fp, #-32]	; 0xffffffe0
   11584:	add	r1, r1, r2
   11588:	sub	r1, r1, #1
   1158c:	str	r1, [fp, #-32]	; 0xffffffe0
   11590:	ldr	r1, [fp, #-40]	; 0xffffffd8
   11594:	cmn	r1, #3
   11598:	str	r1, [sp, #80]	; 0x50
   1159c:	beq	115f4 <__assert_fail@plt+0x660>
   115a0:	b	115a4 <__assert_fail@plt+0x610>
   115a4:	ldr	r0, [sp, #80]	; 0x50
   115a8:	cmn	r0, #2
   115ac:	beq	115ec <__assert_fail@plt+0x658>
   115b0:	b	115b4 <__assert_fail@plt+0x620>
   115b4:	ldr	r0, [sp, #80]	; 0x50
   115b8:	cmn	r0, #1
   115bc:	beq	115e8 <__assert_fail@plt+0x654>
   115c0:	b	115c4 <__assert_fail@plt+0x630>
   115c4:	ldr	r0, [sp, #80]	; 0x50
   115c8:	cmp	r0, #110	; 0x6e
   115cc:	bne	1163c <__assert_fail@plt+0x6a8>
   115d0:	b	115d4 <__assert_fail@plt+0x640>
   115d4:	movw	r0, #53568	; 0xd140
   115d8:	movt	r0, #2
   115dc:	ldr	r0, [r0]
   115e0:	str	r0, [fp, #-24]	; 0xffffffe8
   115e4:	b	11644 <__assert_fail@plt+0x6b0>
   115e8:	b	11644 <__assert_fail@plt+0x6b0>
   115ec:	movw	r0, #0
   115f0:	bl	11090 <__assert_fail@plt+0xfc>
   115f4:	movw	r0, #53564	; 0xd13c
   115f8:	movt	r0, #2
   115fc:	ldr	r0, [r0]
   11600:	movw	r1, #53468	; 0xd0dc
   11604:	movt	r1, #2
   11608:	ldr	r3, [r1]
   1160c:	movw	r1, #49073	; 0xbfb1
   11610:	movt	r1, #1
   11614:	movw	r2, #49106	; 0xbfd2
   11618:	movt	r2, #1
   1161c:	movw	ip, #49120	; 0xbfe0
   11620:	movt	ip, #1
   11624:	str	ip, [sp]
   11628:	movw	ip, #0
   1162c:	str	ip, [sp, #4]
   11630:	bl	14a58 <__assert_fail@plt+0x3ac4>
   11634:	movw	r0, #0
   11638:	bl	10ebc <exit@plt>
   1163c:	movw	r0, #125	; 0x7d
   11640:	bl	11090 <__assert_fail@plt+0xfc>
   11644:	ldr	r0, [fp, #-40]	; 0xffffffd8
   11648:	cmn	r0, #1
   1164c:	bne	11654 <__assert_fail@plt+0x6c0>
   11650:	b	1165c <__assert_fail@plt+0x6c8>
   11654:	b	11658 <__assert_fail@plt+0x6c4>
   11658:	b	11444 <__assert_fail@plt+0x4b0>
   1165c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11660:	movw	r1, #0
   11664:	cmp	r0, r1
   11668:	beq	11744 <__assert_fail@plt+0x7b0>
   1166c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11670:	movw	r1, #0
   11674:	movw	r2, #10
   11678:	sub	r3, fp, #52	; 0x34
   1167c:	movw	ip, #49630	; 0xc1de
   11680:	movt	ip, #1
   11684:	str	ip, [sp]
   11688:	bl	17968 <__assert_fail@plt+0x69d4>
   1168c:	movw	r1, #1
   11690:	cmp	r1, r0
   11694:	bcs	116d0 <__assert_fail@plt+0x73c>
   11698:	movw	r0, #49136	; 0xbff0
   1169c:	movt	r0, #1
   116a0:	bl	10ec8 <gettext@plt>
   116a4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   116a8:	str	r0, [sp, #76]	; 0x4c
   116ac:	mov	r0, r1
   116b0:	bl	141dc <__assert_fail@plt+0x3248>
   116b4:	movw	r1, #125	; 0x7d
   116b8:	str	r0, [sp, #72]	; 0x48
   116bc:	mov	r0, r1
   116c0:	movw	r1, #0
   116c4:	ldr	r2, [sp, #76]	; 0x4c
   116c8:	ldr	r3, [sp, #72]	; 0x48
   116cc:	bl	10e5c <error@plt>
   116d0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   116d4:	cmp	r0, #39	; 0x27
   116d8:	bge	116e8 <__assert_fail@plt+0x754>
   116dc:	ldr	r0, [fp, #-52]	; 0xffffffcc
   116e0:	str	r0, [sp, #68]	; 0x44
   116e4:	b	116f4 <__assert_fail@plt+0x760>
   116e8:	movw	r0, #39	; 0x27
   116ec:	str	r0, [sp, #68]	; 0x44
   116f0:	b	116f4 <__assert_fail@plt+0x760>
   116f4:	ldr	r0, [sp, #68]	; 0x44
   116f8:	mvn	r1, #38	; 0x26
   116fc:	cmp	r1, r0
   11700:	ble	11710 <__assert_fail@plt+0x77c>
   11704:	mvn	r0, #38	; 0x26
   11708:	str	r0, [sp, #64]	; 0x40
   1170c:	b	1173c <__assert_fail@plt+0x7a8>
   11710:	ldr	r0, [fp, #-52]	; 0xffffffcc
   11714:	cmp	r0, #39	; 0x27
   11718:	bge	11728 <__assert_fail@plt+0x794>
   1171c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   11720:	str	r0, [sp, #60]	; 0x3c
   11724:	b	11734 <__assert_fail@plt+0x7a0>
   11728:	movw	r0, #39	; 0x27
   1172c:	str	r0, [sp, #60]	; 0x3c
   11730:	b	11734 <__assert_fail@plt+0x7a0>
   11734:	ldr	r0, [sp, #60]	; 0x3c
   11738:	str	r0, [sp, #64]	; 0x40
   1173c:	ldr	r0, [sp, #64]	; 0x40
   11740:	str	r0, [fp, #-20]	; 0xffffffec
   11744:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11748:	ldr	r1, [fp, #-8]
   1174c:	cmp	r0, r1
   11750:	bne	1180c <__assert_fail@plt+0x878>
   11754:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11758:	movw	r1, #0
   1175c:	cmp	r0, r1
   11760:	beq	1178c <__assert_fail@plt+0x7f8>
   11764:	movw	r0, #49158	; 0xc006
   11768:	movt	r0, #1
   1176c:	bl	10ec8 <gettext@plt>
   11770:	movw	r1, #0
   11774:	str	r0, [sp, #56]	; 0x38
   11778:	mov	r0, r1
   1177c:	ldr	r2, [sp, #56]	; 0x38
   11780:	bl	10e5c <error@plt>
   11784:	movw	r0, #125	; 0x7d
   11788:	bl	11090 <__assert_fail@plt+0xfc>
   1178c:	bl	10ef8 <__errno_location@plt>
   11790:	movw	r1, #0
   11794:	str	r1, [r0]
   11798:	mov	r0, r1
   1179c:	bl	10dfc <getpriority@plt>
   117a0:	str	r0, [fp, #-16]
   117a4:	ldr	r0, [fp, #-16]
   117a8:	cmn	r0, #1
   117ac:	bne	117f0 <__assert_fail@plt+0x85c>
   117b0:	bl	10ef8 <__errno_location@plt>
   117b4:	ldr	r0, [r0]
   117b8:	cmp	r0, #0
   117bc:	beq	117f0 <__assert_fail@plt+0x85c>
   117c0:	bl	10ef8 <__errno_location@plt>
   117c4:	ldr	r1, [r0]
   117c8:	movw	r0, #49201	; 0xc031
   117cc:	movt	r0, #1
   117d0:	str	r1, [sp, #52]	; 0x34
   117d4:	bl	10ec8 <gettext@plt>
   117d8:	movw	r1, #125	; 0x7d
   117dc:	str	r0, [sp, #48]	; 0x30
   117e0:	mov	r0, r1
   117e4:	ldr	r1, [sp, #52]	; 0x34
   117e8:	ldr	r2, [sp, #48]	; 0x30
   117ec:	bl	10e5c <error@plt>
   117f0:	ldr	r1, [fp, #-16]
   117f4:	movw	r0, #49221	; 0xc045
   117f8:	movt	r0, #1
   117fc:	bl	10d90 <printf@plt>
   11800:	movw	r1, #0
   11804:	str	r1, [fp, #-4]
   11808:	b	119a0 <__assert_fail@plt+0xa0c>
   1180c:	bl	10ef8 <__errno_location@plt>
   11810:	movw	r1, #0
   11814:	str	r1, [r0]
   11818:	mov	r0, r1
   1181c:	bl	10dfc <getpriority@plt>
   11820:	str	r0, [fp, #-16]
   11824:	ldr	r0, [fp, #-16]
   11828:	cmn	r0, #1
   1182c:	bne	11870 <__assert_fail@plt+0x8dc>
   11830:	bl	10ef8 <__errno_location@plt>
   11834:	ldr	r0, [r0]
   11838:	cmp	r0, #0
   1183c:	beq	11870 <__assert_fail@plt+0x8dc>
   11840:	bl	10ef8 <__errno_location@plt>
   11844:	ldr	r1, [r0]
   11848:	movw	r0, #49201	; 0xc031
   1184c:	movt	r0, #1
   11850:	str	r1, [sp, #44]	; 0x2c
   11854:	bl	10ec8 <gettext@plt>
   11858:	movw	r1, #125	; 0x7d
   1185c:	str	r0, [sp, #40]	; 0x28
   11860:	mov	r0, r1
   11864:	ldr	r1, [sp, #44]	; 0x2c
   11868:	ldr	r2, [sp, #40]	; 0x28
   1186c:	bl	10e5c <error@plt>
   11870:	ldr	r0, [fp, #-16]
   11874:	ldr	r1, [fp, #-20]	; 0xffffffec
   11878:	add	r2, r0, r1
   1187c:	movw	r0, #0
   11880:	str	r0, [sp, #36]	; 0x24
   11884:	ldr	r1, [sp, #36]	; 0x24
   11888:	bl	10e68 <setpriority@plt>
   1188c:	cmp	r0, #0
   11890:	movw	r0, #0
   11894:	moveq	r0, #1
   11898:	and	r0, r0, #1
   1189c:	strb	r0, [fp, #-25]	; 0xffffffe7
   118a0:	ldrb	r0, [fp, #-25]	; 0xffffffe7
   118a4:	tst	r0, #1
   118a8:	bne	11920 <__assert_fail@plt+0x98c>
   118ac:	bl	10ef8 <__errno_location@plt>
   118b0:	ldr	r0, [r0]
   118b4:	bl	119d8 <__assert_fail@plt+0xa44>
   118b8:	tst	r0, #1
   118bc:	movw	r0, #0
   118c0:	moveq	r0, #125	; 0x7d
   118c4:	str	r0, [sp, #32]
   118c8:	bl	10ef8 <__errno_location@plt>
   118cc:	ldr	r1, [r0]
   118d0:	movw	r0, #49225	; 0xc049
   118d4:	movt	r0, #1
   118d8:	str	r1, [sp, #28]
   118dc:	bl	10ec8 <gettext@plt>
   118e0:	ldr	r1, [sp, #32]
   118e4:	str	r0, [sp, #24]
   118e8:	mov	r0, r1
   118ec:	ldr	r1, [sp, #28]
   118f0:	ldr	r2, [sp, #24]
   118f4:	bl	10e5c <error@plt>
   118f8:	movw	r0, #53560	; 0xd138
   118fc:	movt	r0, #2
   11900:	ldr	r0, [r0]
   11904:	bl	10e44 <ferror_unlocked@plt>
   11908:	cmp	r0, #0
   1190c:	beq	1191c <__assert_fail@plt+0x988>
   11910:	movw	r0, #125	; 0x7d
   11914:	str	r0, [fp, #-4]
   11918:	b	119a0 <__assert_fail@plt+0xa0c>
   1191c:	b	11920 <__assert_fail@plt+0x98c>
   11920:	ldr	r0, [fp, #-12]
   11924:	ldr	r1, [fp, #-32]	; 0xffffffe0
   11928:	ldr	r1, [r0, r1, lsl #2]!
   1192c:	str	r0, [sp, #20]
   11930:	mov	r0, r1
   11934:	ldr	r1, [sp, #20]
   11938:	bl	10dcc <execvp@plt>
   1193c:	str	r0, [sp, #16]
   11940:	bl	10ef8 <__errno_location@plt>
   11944:	ldr	r0, [r0]
   11948:	mov	r1, #126	; 0x7e
   1194c:	cmp	r0, #2
   11950:	movweq	r1, #127	; 0x7f
   11954:	str	r1, [fp, #-56]	; 0xffffffc8
   11958:	bl	10ef8 <__errno_location@plt>
   1195c:	ldr	r1, [r0]
   11960:	ldr	r0, [fp, #-12]
   11964:	ldr	r2, [fp, #-32]	; 0xffffffe0
   11968:	add	r0, r0, r2, lsl #2
   1196c:	ldr	r0, [r0]
   11970:	str	r1, [sp, #12]
   11974:	bl	141dc <__assert_fail@plt+0x3248>
   11978:	movw	r1, #0
   1197c:	str	r0, [sp, #8]
   11980:	mov	r0, r1
   11984:	ldr	r1, [sp, #12]
   11988:	movw	r2, #49795	; 0xc283
   1198c:	movt	r2, #1
   11990:	ldr	r3, [sp, #8]
   11994:	bl	10e5c <error@plt>
   11998:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1199c:	str	r0, [fp, #-4]
   119a0:	ldr	r0, [fp, #-4]
   119a4:	mov	sp, fp
   119a8:	pop	{fp, pc}
   119ac:	sub	sp, sp, #4
   119b0:	str	r0, [sp]
   119b4:	ldr	r0, [sp]
   119b8:	cmp	r0, #1
   119bc:	beq	119d0 <__assert_fail@plt+0xa3c>
   119c0:	ldr	r0, [sp]
   119c4:	movw	r1, #53472	; 0xd0e0
   119c8:	movt	r1, #2
   119cc:	str	r0, [r1]
   119d0:	add	sp, sp, #4
   119d4:	bx	lr
   119d8:	sub	sp, sp, #8
   119dc:	str	r0, [sp, #4]
   119e0:	ldr	r0, [sp, #4]
   119e4:	cmp	r0, #13
   119e8:	movw	r0, #1
   119ec:	str	r0, [sp]
   119f0:	beq	11a08 <__assert_fail@plt+0xa74>
   119f4:	ldr	r0, [sp, #4]
   119f8:	cmp	r0, #1
   119fc:	movw	r0, #0
   11a00:	moveq	r0, #1
   11a04:	str	r0, [sp]
   11a08:	ldr	r0, [sp]
   11a0c:	and	r0, r0, #1
   11a10:	add	sp, sp, #8
   11a14:	bx	lr
   11a18:	sub	sp, sp, #4
   11a1c:	str	r0, [sp]
   11a20:	ldr	r0, [sp]
   11a24:	movw	r1, #53576	; 0xd148
   11a28:	movt	r1, #2
   11a2c:	str	r0, [r1]
   11a30:	add	sp, sp, #4
   11a34:	bx	lr
   11a38:	sub	sp, sp, #4
   11a3c:	and	r0, r0, #1
   11a40:	strb	r0, [sp, #3]
   11a44:	ldrb	r0, [sp, #3]
   11a48:	and	r0, r0, #1
   11a4c:	movw	r1, #53580	; 0xd14c
   11a50:	movt	r1, #2
   11a54:	strb	r0, [r1]
   11a58:	add	sp, sp, #4
   11a5c:	bx	lr
   11a60:	push	{fp, lr}
   11a64:	mov	fp, sp
   11a68:	sub	sp, sp, #24
   11a6c:	movw	r0, #53564	; 0xd13c
   11a70:	movt	r0, #2
   11a74:	ldr	r0, [r0]
   11a78:	bl	19848 <__assert_fail@plt+0x88b4>
   11a7c:	cmp	r0, #0
   11a80:	beq	11b50 <__assert_fail@plt+0xbbc>
   11a84:	movw	r0, #53580	; 0xd14c
   11a88:	movt	r0, #2
   11a8c:	ldrb	r0, [r0]
   11a90:	tst	r0, #1
   11a94:	beq	11aa8 <__assert_fail@plt+0xb14>
   11a98:	bl	10ef8 <__errno_location@plt>
   11a9c:	ldr	r0, [r0]
   11aa0:	cmp	r0, #32
   11aa4:	beq	11b50 <__assert_fail@plt+0xbbc>
   11aa8:	movw	r0, #49779	; 0xc273
   11aac:	movt	r0, #1
   11ab0:	bl	10ec8 <gettext@plt>
   11ab4:	str	r0, [fp, #-4]
   11ab8:	movw	r0, #53576	; 0xd148
   11abc:	movt	r0, #2
   11ac0:	ldr	r0, [r0]
   11ac4:	movw	r1, #0
   11ac8:	cmp	r0, r1
   11acc:	beq	11b24 <__assert_fail@plt+0xb90>
   11ad0:	bl	10ef8 <__errno_location@plt>
   11ad4:	ldr	r1, [r0]
   11ad8:	movw	r0, #53576	; 0xd148
   11adc:	movt	r0, #2
   11ae0:	ldr	r0, [r0]
   11ae4:	str	r1, [fp, #-8]
   11ae8:	bl	13f40 <__assert_fail@plt+0x2fac>
   11aec:	ldr	r1, [fp, #-4]
   11af0:	movw	r2, #0
   11af4:	str	r0, [sp, #12]
   11af8:	mov	r0, r2
   11afc:	ldr	r2, [fp, #-8]
   11b00:	str	r1, [sp, #8]
   11b04:	mov	r1, r2
   11b08:	movw	r2, #49791	; 0xc27f
   11b0c:	movt	r2, #1
   11b10:	ldr	r3, [sp, #12]
   11b14:	ldr	ip, [sp, #8]
   11b18:	str	ip, [sp]
   11b1c:	bl	10e5c <error@plt>
   11b20:	b	11b40 <__assert_fail@plt+0xbac>
   11b24:	bl	10ef8 <__errno_location@plt>
   11b28:	ldr	r1, [r0]
   11b2c:	ldr	r3, [fp, #-4]
   11b30:	movw	r0, #0
   11b34:	movw	r2, #49795	; 0xc283
   11b38:	movt	r2, #1
   11b3c:	bl	10e5c <error@plt>
   11b40:	movw	r0, #53472	; 0xd0e0
   11b44:	movt	r0, #2
   11b48:	ldr	r0, [r0]
   11b4c:	bl	10db4 <_exit@plt>
   11b50:	movw	r0, #53560	; 0xd138
   11b54:	movt	r0, #2
   11b58:	ldr	r0, [r0]
   11b5c:	bl	19848 <__assert_fail@plt+0x88b4>
   11b60:	cmp	r0, #0
   11b64:	beq	11b78 <__assert_fail@plt+0xbe4>
   11b68:	movw	r0, #53472	; 0xd0e0
   11b6c:	movt	r0, #2
   11b70:	ldr	r0, [r0]
   11b74:	bl	10db4 <_exit@plt>
   11b78:	mov	sp, fp
   11b7c:	pop	{fp, pc}
   11b80:	push	{fp, lr}
   11b84:	mov	fp, sp
   11b88:	sub	sp, sp, #24
   11b8c:	str	r0, [fp, #-4]
   11b90:	ldr	r0, [fp, #-4]
   11b94:	movw	r1, #0
   11b98:	cmp	r0, r1
   11b9c:	bne	11bc0 <__assert_fail@plt+0xc2c>
   11ba0:	movw	r0, #53560	; 0xd138
   11ba4:	movt	r0, #2
   11ba8:	ldr	r1, [r0]
   11bac:	movw	r0, #49798	; 0xc286
   11bb0:	movt	r0, #1
   11bb4:	bl	10f70 <fputs@plt>
   11bb8:	str	r0, [sp, #8]
   11bbc:	bl	10f88 <abort@plt>
   11bc0:	ldr	r0, [fp, #-4]
   11bc4:	movw	r1, #47	; 0x2f
   11bc8:	bl	10f4c <strrchr@plt>
   11bcc:	str	r0, [fp, #-8]
   11bd0:	ldr	r0, [fp, #-8]
   11bd4:	movw	r1, #0
   11bd8:	cmp	r0, r1
   11bdc:	beq	11bf0 <__assert_fail@plt+0xc5c>
   11be0:	ldr	r0, [fp, #-8]
   11be4:	add	r0, r0, #1
   11be8:	str	r0, [sp, #4]
   11bec:	b	11bf8 <__assert_fail@plt+0xc64>
   11bf0:	ldr	r0, [fp, #-4]
   11bf4:	str	r0, [sp, #4]
   11bf8:	ldr	r0, [sp, #4]
   11bfc:	str	r0, [sp, #12]
   11c00:	ldr	r0, [sp, #12]
   11c04:	ldr	r1, [fp, #-4]
   11c08:	sub	r0, r0, r1
   11c0c:	cmp	r0, #7
   11c10:	blt	11c7c <__assert_fail@plt+0xce8>
   11c14:	ldr	r0, [sp, #12]
   11c18:	mvn	r1, #6
   11c1c:	add	r0, r0, r1
   11c20:	movw	r1, #49854	; 0xc2be
   11c24:	movt	r1, #1
   11c28:	movw	r2, #7
   11c2c:	bl	10f7c <strncmp@plt>
   11c30:	cmp	r0, #0
   11c34:	bne	11c7c <__assert_fail@plt+0xce8>
   11c38:	ldr	r0, [sp, #12]
   11c3c:	str	r0, [fp, #-4]
   11c40:	ldr	r0, [sp, #12]
   11c44:	movw	r1, #49862	; 0xc2c6
   11c48:	movt	r1, #1
   11c4c:	movw	r2, #3
   11c50:	bl	10f7c <strncmp@plt>
   11c54:	cmp	r0, #0
   11c58:	bne	11c78 <__assert_fail@plt+0xce4>
   11c5c:	ldr	r0, [sp, #12]
   11c60:	add	r0, r0, #3
   11c64:	str	r0, [fp, #-4]
   11c68:	ldr	r0, [fp, #-4]
   11c6c:	movw	r1, #53544	; 0xd128
   11c70:	movt	r1, #2
   11c74:	str	r0, [r1]
   11c78:	b	11c7c <__assert_fail@plt+0xce8>
   11c7c:	ldr	r0, [fp, #-4]
   11c80:	movw	r1, #53584	; 0xd150
   11c84:	movt	r1, #2
   11c88:	str	r0, [r1]
   11c8c:	ldr	r0, [fp, #-4]
   11c90:	movw	r1, #53548	; 0xd12c
   11c94:	movt	r1, #2
   11c98:	str	r0, [r1]
   11c9c:	mov	sp, fp
   11ca0:	pop	{fp, pc}
   11ca4:	push	{fp, lr}
   11ca8:	mov	fp, sp
   11cac:	sub	sp, sp, #24
   11cb0:	str	r0, [fp, #-4]
   11cb4:	bl	10ef8 <__errno_location@plt>
   11cb8:	ldr	r0, [r0]
   11cbc:	str	r0, [fp, #-8]
   11cc0:	ldr	r0, [fp, #-4]
   11cc4:	movw	r1, #0
   11cc8:	cmp	r0, r1
   11ccc:	beq	11cdc <__assert_fail@plt+0xd48>
   11cd0:	ldr	r0, [fp, #-4]
   11cd4:	str	r0, [sp, #8]
   11cd8:	b	11cec <__assert_fail@plt+0xd58>
   11cdc:	movw	r0, #53588	; 0xd154
   11ce0:	movt	r0, #2
   11ce4:	str	r0, [sp, #8]
   11ce8:	b	11cec <__assert_fail@plt+0xd58>
   11cec:	ldr	r0, [sp, #8]
   11cf0:	movw	r1, #48	; 0x30
   11cf4:	bl	17818 <__assert_fail@plt+0x6884>
   11cf8:	str	r0, [sp, #12]
   11cfc:	ldr	r0, [fp, #-8]
   11d00:	str	r0, [sp, #4]
   11d04:	bl	10ef8 <__errno_location@plt>
   11d08:	ldr	r1, [sp, #4]
   11d0c:	str	r1, [r0]
   11d10:	ldr	r0, [sp, #12]
   11d14:	mov	sp, fp
   11d18:	pop	{fp, pc}
   11d1c:	sub	sp, sp, #8
   11d20:	str	r0, [sp, #4]
   11d24:	ldr	r0, [sp, #4]
   11d28:	movw	r1, #0
   11d2c:	cmp	r0, r1
   11d30:	beq	11d40 <__assert_fail@plt+0xdac>
   11d34:	ldr	r0, [sp, #4]
   11d38:	str	r0, [sp]
   11d3c:	b	11d50 <__assert_fail@plt+0xdbc>
   11d40:	movw	r0, #53588	; 0xd154
   11d44:	movt	r0, #2
   11d48:	str	r0, [sp]
   11d4c:	b	11d50 <__assert_fail@plt+0xdbc>
   11d50:	ldr	r0, [sp]
   11d54:	ldr	r0, [r0]
   11d58:	add	sp, sp, #8
   11d5c:	bx	lr
   11d60:	sub	sp, sp, #16
   11d64:	str	r0, [sp, #12]
   11d68:	str	r1, [sp, #8]
   11d6c:	ldr	r0, [sp, #8]
   11d70:	ldr	r1, [sp, #12]
   11d74:	movw	r2, #0
   11d78:	cmp	r1, r2
   11d7c:	str	r0, [sp, #4]
   11d80:	beq	11d90 <__assert_fail@plt+0xdfc>
   11d84:	ldr	r0, [sp, #12]
   11d88:	str	r0, [sp]
   11d8c:	b	11da0 <__assert_fail@plt+0xe0c>
   11d90:	movw	r0, #53588	; 0xd154
   11d94:	movt	r0, #2
   11d98:	str	r0, [sp]
   11d9c:	b	11da0 <__assert_fail@plt+0xe0c>
   11da0:	ldr	r0, [sp]
   11da4:	ldr	r1, [sp, #4]
   11da8:	str	r1, [r0]
   11dac:	add	sp, sp, #16
   11db0:	bx	lr
   11db4:	sub	sp, sp, #32
   11db8:	str	r0, [sp, #28]
   11dbc:	strb	r1, [sp, #27]
   11dc0:	str	r2, [sp, #20]
   11dc4:	ldrb	r0, [sp, #27]
   11dc8:	strb	r0, [sp, #19]
   11dcc:	ldr	r0, [sp, #28]
   11dd0:	movw	r1, #0
   11dd4:	cmp	r0, r1
   11dd8:	beq	11de8 <__assert_fail@plt+0xe54>
   11ddc:	ldr	r0, [sp, #28]
   11de0:	str	r0, [sp]
   11de4:	b	11df8 <__assert_fail@plt+0xe64>
   11de8:	movw	r0, #53588	; 0xd154
   11dec:	movt	r0, #2
   11df0:	str	r0, [sp]
   11df4:	b	11df8 <__assert_fail@plt+0xe64>
   11df8:	ldr	r0, [sp]
   11dfc:	add	r0, r0, #8
   11e00:	ldrb	r1, [sp, #19]
   11e04:	lsr	r1, r1, #5
   11e08:	add	r0, r0, r1, lsl #2
   11e0c:	str	r0, [sp, #12]
   11e10:	ldrb	r0, [sp, #19]
   11e14:	and	r0, r0, #31
   11e18:	str	r0, [sp, #8]
   11e1c:	ldr	r0, [sp, #12]
   11e20:	ldr	r0, [r0]
   11e24:	ldr	r1, [sp, #8]
   11e28:	lsr	r0, r0, r1
   11e2c:	and	r0, r0, #1
   11e30:	str	r0, [sp, #4]
   11e34:	ldr	r0, [sp, #20]
   11e38:	and	r0, r0, #1
   11e3c:	ldr	r1, [sp, #4]
   11e40:	eor	r0, r0, r1
   11e44:	ldr	r1, [sp, #8]
   11e48:	lsl	r0, r0, r1
   11e4c:	ldr	r1, [sp, #12]
   11e50:	ldr	r2, [r1]
   11e54:	eor	r0, r2, r0
   11e58:	str	r0, [r1]
   11e5c:	ldr	r0, [sp, #4]
   11e60:	add	sp, sp, #32
   11e64:	bx	lr
   11e68:	sub	sp, sp, #12
   11e6c:	str	r0, [sp, #8]
   11e70:	str	r1, [sp, #4]
   11e74:	ldr	r0, [sp, #8]
   11e78:	movw	r1, #0
   11e7c:	cmp	r0, r1
   11e80:	bne	11e90 <__assert_fail@plt+0xefc>
   11e84:	movw	r0, #53588	; 0xd154
   11e88:	movt	r0, #2
   11e8c:	str	r0, [sp, #8]
   11e90:	ldr	r0, [sp, #8]
   11e94:	ldr	r0, [r0, #4]
   11e98:	str	r0, [sp]
   11e9c:	ldr	r0, [sp, #4]
   11ea0:	ldr	r1, [sp, #8]
   11ea4:	str	r0, [r1, #4]
   11ea8:	ldr	r0, [sp]
   11eac:	add	sp, sp, #12
   11eb0:	bx	lr
   11eb4:	push	{fp, lr}
   11eb8:	mov	fp, sp
   11ebc:	sub	sp, sp, #16
   11ec0:	str	r0, [fp, #-4]
   11ec4:	str	r1, [sp, #8]
   11ec8:	str	r2, [sp, #4]
   11ecc:	ldr	r0, [fp, #-4]
   11ed0:	movw	r1, #0
   11ed4:	cmp	r0, r1
   11ed8:	bne	11ee8 <__assert_fail@plt+0xf54>
   11edc:	movw	r0, #53588	; 0xd154
   11ee0:	movt	r0, #2
   11ee4:	str	r0, [fp, #-4]
   11ee8:	ldr	r0, [fp, #-4]
   11eec:	movw	r1, #10
   11ef0:	str	r1, [r0]
   11ef4:	ldr	r0, [sp, #8]
   11ef8:	movw	r1, #0
   11efc:	cmp	r0, r1
   11f00:	beq	11f14 <__assert_fail@plt+0xf80>
   11f04:	ldr	r0, [sp, #4]
   11f08:	movw	r1, #0
   11f0c:	cmp	r0, r1
   11f10:	bne	11f18 <__assert_fail@plt+0xf84>
   11f14:	bl	10f88 <abort@plt>
   11f18:	ldr	r0, [sp, #8]
   11f1c:	ldr	r1, [fp, #-4]
   11f20:	str	r0, [r1, #40]	; 0x28
   11f24:	ldr	r0, [sp, #4]
   11f28:	ldr	r1, [fp, #-4]
   11f2c:	str	r0, [r1, #44]	; 0x2c
   11f30:	mov	sp, fp
   11f34:	pop	{fp, pc}
   11f38:	push	{r4, r5, r6, sl, fp, lr}
   11f3c:	add	fp, sp, #16
   11f40:	sub	sp, sp, #56	; 0x38
   11f44:	ldr	ip, [fp, #8]
   11f48:	str	r0, [fp, #-20]	; 0xffffffec
   11f4c:	str	r1, [fp, #-24]	; 0xffffffe8
   11f50:	str	r2, [fp, #-28]	; 0xffffffe4
   11f54:	str	r3, [fp, #-32]	; 0xffffffe0
   11f58:	ldr	r0, [fp, #8]
   11f5c:	movw	r1, #0
   11f60:	cmp	r0, r1
   11f64:	beq	11f74 <__assert_fail@plt+0xfe0>
   11f68:	ldr	r0, [fp, #8]
   11f6c:	str	r0, [sp, #24]
   11f70:	b	11f84 <__assert_fail@plt+0xff0>
   11f74:	movw	r0, #53588	; 0xd154
   11f78:	movt	r0, #2
   11f7c:	str	r0, [sp, #24]
   11f80:	b	11f84 <__assert_fail@plt+0xff0>
   11f84:	ldr	r0, [sp, #24]
   11f88:	str	r0, [sp, #36]	; 0x24
   11f8c:	bl	10ef8 <__errno_location@plt>
   11f90:	ldr	r0, [r0]
   11f94:	str	r0, [sp, #32]
   11f98:	ldr	r0, [fp, #-20]	; 0xffffffec
   11f9c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   11fa0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   11fa4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11fa8:	ldr	ip, [sp, #36]	; 0x24
   11fac:	ldr	ip, [ip]
   11fb0:	ldr	lr, [sp, #36]	; 0x24
   11fb4:	ldr	lr, [lr, #4]
   11fb8:	ldr	r4, [sp, #36]	; 0x24
   11fbc:	add	r4, r4, #8
   11fc0:	ldr	r5, [sp, #36]	; 0x24
   11fc4:	ldr	r5, [r5, #40]	; 0x28
   11fc8:	ldr	r6, [sp, #36]	; 0x24
   11fcc:	ldr	r6, [r6, #44]	; 0x2c
   11fd0:	str	ip, [sp]
   11fd4:	str	lr, [sp, #4]
   11fd8:	str	r4, [sp, #8]
   11fdc:	str	r5, [sp, #12]
   11fe0:	str	r6, [sp, #16]
   11fe4:	bl	1200c <__assert_fail@plt+0x1078>
   11fe8:	str	r0, [sp, #28]
   11fec:	ldr	r0, [sp, #32]
   11ff0:	str	r0, [sp, #20]
   11ff4:	bl	10ef8 <__errno_location@plt>
   11ff8:	ldr	r1, [sp, #20]
   11ffc:	str	r1, [r0]
   12000:	ldr	r0, [sp, #28]
   12004:	sub	sp, fp, #16
   12008:	pop	{r4, r5, r6, sl, fp, pc}
   1200c:	push	{r4, r5, r6, sl, fp, lr}
   12010:	add	fp, sp, #16
   12014:	sub	sp, sp, #160	; 0xa0
   12018:	ldr	ip, [fp, #24]
   1201c:	ldr	lr, [fp, #20]
   12020:	ldr	r4, [fp, #16]
   12024:	ldr	r5, [fp, #12]
   12028:	ldr	r6, [fp, #8]
   1202c:	str	r0, [fp, #-24]	; 0xffffffe8
   12030:	str	r1, [fp, #-28]	; 0xffffffe4
   12034:	str	r2, [fp, #-32]	; 0xffffffe0
   12038:	str	r3, [fp, #-36]	; 0xffffffdc
   1203c:	movw	r0, #0
   12040:	str	r0, [fp, #-44]	; 0xffffffd4
   12044:	str	r0, [fp, #-48]	; 0xffffffd0
   12048:	str	r0, [fp, #-52]	; 0xffffffcc
   1204c:	str	r0, [fp, #-56]	; 0xffffffc8
   12050:	movw	r0, #0
   12054:	strb	r0, [fp, #-57]	; 0xffffffc7
   12058:	str	ip, [sp, #72]	; 0x48
   1205c:	str	lr, [sp, #68]	; 0x44
   12060:	str	r4, [sp, #64]	; 0x40
   12064:	str	r5, [sp, #60]	; 0x3c
   12068:	str	r6, [sp, #56]	; 0x38
   1206c:	bl	10e2c <__ctype_get_mb_cur_max@plt>
   12070:	cmp	r0, #1
   12074:	movw	r0, #0
   12078:	moveq	r0, #1
   1207c:	and	r0, r0, #1
   12080:	strb	r0, [fp, #-58]	; 0xffffffc6
   12084:	ldr	r0, [fp, #12]
   12088:	and	r0, r0, #2
   1208c:	cmp	r0, #0
   12090:	movw	r0, #0
   12094:	movne	r0, #1
   12098:	and	r0, r0, #1
   1209c:	strb	r0, [fp, #-59]	; 0xffffffc5
   120a0:	movw	r0, #0
   120a4:	strb	r0, [fp, #-60]	; 0xffffffc4
   120a8:	strb	r0, [fp, #-61]	; 0xffffffc3
   120ac:	movw	r0, #1
   120b0:	strb	r0, [fp, #-62]	; 0xffffffc2
   120b4:	ldr	r0, [fp, #8]
   120b8:	cmp	r0, #10
   120bc:	str	r0, [sp, #52]	; 0x34
   120c0:	bhi	122e8 <__assert_fail@plt+0x1354>
   120c4:	add	r0, pc, #8
   120c8:	ldr	r1, [sp, #52]	; 0x34
   120cc:	ldr	r0, [r0, r1, lsl #2]
   120d0:	mov	pc, r0
   120d4:	ldrdeq	r2, [r1], -ip
   120d8:	andeq	r2, r1, r8, asr r2
   120dc:	andeq	r2, r1, r8, ror r2
   120e0:	andeq	r2, r1, r0, asr r2
   120e4:	andeq	r2, r1, r0, ror #4
   120e8:	andeq	r2, r1, r0, lsl r1
   120ec:	andeq	r2, r1, r0, lsl #2
   120f0:	andeq	r2, r1, r4, ror r1
   120f4:	andeq	r2, r1, r8, lsl #3
   120f8:	andeq	r2, r1, r8, lsl #3
   120fc:	andeq	r2, r1, r8, lsl #3
   12100:	movw	r0, #5
   12104:	str	r0, [fp, #8]
   12108:	movw	r0, #1
   1210c:	strb	r0, [fp, #-59]	; 0xffffffc5
   12110:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   12114:	tst	r0, #1
   12118:	bne	12154 <__assert_fail@plt+0x11c0>
   1211c:	b	12120 <__assert_fail@plt+0x118c>
   12120:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12124:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12128:	cmp	r0, r1
   1212c:	bcs	12144 <__assert_fail@plt+0x11b0>
   12130:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12134:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12138:	add	r0, r0, r1
   1213c:	movw	r1, #34	; 0x22
   12140:	strb	r1, [r0]
   12144:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12148:	add	r0, r0, #1
   1214c:	str	r0, [fp, #-44]	; 0xffffffd4
   12150:	b	12154 <__assert_fail@plt+0x11c0>
   12154:	movw	r0, #1
   12158:	strb	r0, [fp, #-57]	; 0xffffffc7
   1215c:	movw	r0, #49942	; 0xc316
   12160:	movt	r0, #1
   12164:	str	r0, [fp, #-52]	; 0xffffffcc
   12168:	movw	r0, #1
   1216c:	str	r0, [fp, #-56]	; 0xffffffc8
   12170:	b	122ec <__assert_fail@plt+0x1358>
   12174:	movw	r0, #1
   12178:	strb	r0, [fp, #-57]	; 0xffffffc7
   1217c:	movw	r0, #0
   12180:	strb	r0, [fp, #-59]	; 0xffffffc5
   12184:	b	122ec <__assert_fail@plt+0x1358>
   12188:	ldr	r0, [fp, #8]
   1218c:	cmp	r0, #10
   12190:	beq	121bc <__assert_fail@plt+0x1228>
   12194:	ldr	r1, [fp, #8]
   12198:	movw	r0, #49944	; 0xc318
   1219c:	movt	r0, #1
   121a0:	bl	14200 <__assert_fail@plt+0x326c>
   121a4:	str	r0, [fp, #20]
   121a8:	ldr	r1, [fp, #8]
   121ac:	movw	r0, #49946	; 0xc31a
   121b0:	movt	r0, #1
   121b4:	bl	14200 <__assert_fail@plt+0x326c>
   121b8:	str	r0, [fp, #24]
   121bc:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   121c0:	tst	r0, #1
   121c4:	bne	12230 <__assert_fail@plt+0x129c>
   121c8:	ldr	r0, [fp, #20]
   121cc:	str	r0, [fp, #-52]	; 0xffffffcc
   121d0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   121d4:	ldrsb	r0, [r0]
   121d8:	cmp	r0, #0
   121dc:	beq	1222c <__assert_fail@plt+0x1298>
   121e0:	b	121e4 <__assert_fail@plt+0x1250>
   121e4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   121e8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   121ec:	cmp	r0, r1
   121f0:	bcs	1220c <__assert_fail@plt+0x1278>
   121f4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   121f8:	ldrb	r0, [r0]
   121fc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   12200:	ldr	r2, [fp, #-44]	; 0xffffffd4
   12204:	add	r1, r1, r2
   12208:	strb	r0, [r1]
   1220c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12210:	add	r0, r0, #1
   12214:	str	r0, [fp, #-44]	; 0xffffffd4
   12218:	b	1221c <__assert_fail@plt+0x1288>
   1221c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   12220:	add	r0, r0, #1
   12224:	str	r0, [fp, #-52]	; 0xffffffcc
   12228:	b	121d0 <__assert_fail@plt+0x123c>
   1222c:	b	12230 <__assert_fail@plt+0x129c>
   12230:	movw	r0, #1
   12234:	strb	r0, [fp, #-57]	; 0xffffffc7
   12238:	ldr	r0, [fp, #24]
   1223c:	str	r0, [fp, #-52]	; 0xffffffcc
   12240:	ldr	r0, [fp, #-52]	; 0xffffffcc
   12244:	bl	10ed4 <strlen@plt>
   12248:	str	r0, [fp, #-56]	; 0xffffffc8
   1224c:	b	122ec <__assert_fail@plt+0x1358>
   12250:	movw	r0, #1
   12254:	strb	r0, [fp, #-57]	; 0xffffffc7
   12258:	movw	r0, #1
   1225c:	strb	r0, [fp, #-59]	; 0xffffffc5
   12260:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   12264:	tst	r0, #1
   12268:	bne	12274 <__assert_fail@plt+0x12e0>
   1226c:	movw	r0, #1
   12270:	strb	r0, [fp, #-57]	; 0xffffffc7
   12274:	b	12278 <__assert_fail@plt+0x12e4>
   12278:	movw	r0, #2
   1227c:	str	r0, [fp, #8]
   12280:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   12284:	tst	r0, #1
   12288:	bne	122c4 <__assert_fail@plt+0x1330>
   1228c:	b	12290 <__assert_fail@plt+0x12fc>
   12290:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12294:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12298:	cmp	r0, r1
   1229c:	bcs	122b4 <__assert_fail@plt+0x1320>
   122a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   122a4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   122a8:	add	r0, r0, r1
   122ac:	movw	r1, #39	; 0x27
   122b0:	strb	r1, [r0]
   122b4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   122b8:	add	r0, r0, #1
   122bc:	str	r0, [fp, #-44]	; 0xffffffd4
   122c0:	b	122c4 <__assert_fail@plt+0x1330>
   122c4:	movw	r0, #49946	; 0xc31a
   122c8:	movt	r0, #1
   122cc:	str	r0, [fp, #-52]	; 0xffffffcc
   122d0:	movw	r0, #1
   122d4:	str	r0, [fp, #-56]	; 0xffffffc8
   122d8:	b	122ec <__assert_fail@plt+0x1358>
   122dc:	movw	r0, #0
   122e0:	strb	r0, [fp, #-59]	; 0xffffffc5
   122e4:	b	122ec <__assert_fail@plt+0x1358>
   122e8:	bl	10f88 <abort@plt>
   122ec:	movw	r0, #0
   122f0:	str	r0, [fp, #-40]	; 0xffffffd8
   122f4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   122f8:	cmn	r0, #1
   122fc:	bne	12328 <__assert_fail@plt+0x1394>
   12300:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12304:	ldr	r1, [fp, #-40]	; 0xffffffd8
   12308:	add	r0, r0, r1
   1230c:	ldrb	r0, [r0]
   12310:	cmp	r0, #0
   12314:	movw	r0, #0
   12318:	moveq	r0, #1
   1231c:	and	r0, r0, #1
   12320:	str	r0, [sp, #48]	; 0x30
   12324:	b	12344 <__assert_fail@plt+0x13b0>
   12328:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1232c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   12330:	cmp	r0, r1
   12334:	movw	r0, #0
   12338:	moveq	r0, #1
   1233c:	and	r0, r0, #1
   12340:	str	r0, [sp, #48]	; 0x30
   12344:	ldr	r0, [sp, #48]	; 0x30
   12348:	cmp	r0, #0
   1234c:	movw	r0, #0
   12350:	movne	r0, #1
   12354:	mvn	r1, #0
   12358:	eor	r0, r0, r1
   1235c:	tst	r0, #1
   12360:	beq	1354c <__assert_fail@plt+0x25b8>
   12364:	movw	r0, #0
   12368:	strb	r0, [fp, #-65]	; 0xffffffbf
   1236c:	strb	r0, [fp, #-66]	; 0xffffffbe
   12370:	strb	r0, [fp, #-67]	; 0xffffffbd
   12374:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   12378:	tst	r0, #1
   1237c:	beq	12428 <__assert_fail@plt+0x1494>
   12380:	ldr	r0, [fp, #8]
   12384:	cmp	r0, #2
   12388:	beq	12428 <__assert_fail@plt+0x1494>
   1238c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   12390:	cmp	r0, #0
   12394:	beq	12428 <__assert_fail@plt+0x1494>
   12398:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1239c:	ldr	r1, [fp, #-56]	; 0xffffffc8
   123a0:	add	r0, r0, r1
   123a4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   123a8:	cmn	r1, #1
   123ac:	str	r0, [sp, #44]	; 0x2c
   123b0:	bne	123d8 <__assert_fail@plt+0x1444>
   123b4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   123b8:	movw	r1, #1
   123bc:	cmp	r1, r0
   123c0:	bcs	123d8 <__assert_fail@plt+0x1444>
   123c4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   123c8:	bl	10ed4 <strlen@plt>
   123cc:	str	r0, [fp, #-36]	; 0xffffffdc
   123d0:	str	r0, [sp, #40]	; 0x28
   123d4:	b	123e0 <__assert_fail@plt+0x144c>
   123d8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   123dc:	str	r0, [sp, #40]	; 0x28
   123e0:	ldr	r0, [sp, #40]	; 0x28
   123e4:	ldr	r1, [sp, #44]	; 0x2c
   123e8:	cmp	r1, r0
   123ec:	bhi	12428 <__assert_fail@plt+0x1494>
   123f0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   123f4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   123f8:	add	r0, r0, r1
   123fc:	ldr	r1, [fp, #-52]	; 0xffffffcc
   12400:	ldr	r2, [fp, #-56]	; 0xffffffc8
   12404:	bl	10de4 <memcmp@plt>
   12408:	cmp	r0, #0
   1240c:	bne	12428 <__assert_fail@plt+0x1494>
   12410:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   12414:	tst	r0, #1
   12418:	beq	12420 <__assert_fail@plt+0x148c>
   1241c:	b	136cc <__assert_fail@plt+0x2738>
   12420:	movw	r0, #1
   12424:	strb	r0, [fp, #-65]	; 0xffffffbf
   12428:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1242c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   12430:	ldrb	r0, [r0, r1]
   12434:	strb	r0, [fp, #-63]	; 0xffffffc1
   12438:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   1243c:	mov	r1, r0
   12440:	cmp	r0, #126	; 0x7e
   12444:	str	r1, [sp, #36]	; 0x24
   12448:	bhi	12cb8 <__assert_fail@plt+0x1d24>
   1244c:	add	r0, pc, #8
   12450:	ldr	r1, [sp, #36]	; 0x24
   12454:	ldr	r0, [r0, r1, lsl #2]
   12458:	mov	pc, r0
   1245c:	andeq	r2, r1, r8, asr r6
   12460:			; <UNDEFINED> instruction: 0x00012cb8
   12464:			; <UNDEFINED> instruction: 0x00012cb8
   12468:			; <UNDEFINED> instruction: 0x00012cb8
   1246c:			; <UNDEFINED> instruction: 0x00012cb8
   12470:			; <UNDEFINED> instruction: 0x00012cb8
   12474:			; <UNDEFINED> instruction: 0x00012cb8
   12478:	andeq	r2, r1, r0, ror #20
   1247c:	andeq	r2, r1, ip, ror #20
   12480:	muleq	r1, ip, sl
   12484:	andeq	r2, r1, r4, lsl #21
   12488:	andeq	r2, r1, r8, lsr #21
   1248c:	andeq	r2, r1, r8, ror sl
   12490:	muleq	r1, r0, sl
   12494:			; <UNDEFINED> instruction: 0x00012cb8
   12498:			; <UNDEFINED> instruction: 0x00012cb8
   1249c:			; <UNDEFINED> instruction: 0x00012cb8
   124a0:			; <UNDEFINED> instruction: 0x00012cb8
   124a4:			; <UNDEFINED> instruction: 0x00012cb8
   124a8:			; <UNDEFINED> instruction: 0x00012cb8
   124ac:			; <UNDEFINED> instruction: 0x00012cb8
   124b0:			; <UNDEFINED> instruction: 0x00012cb8
   124b4:			; <UNDEFINED> instruction: 0x00012cb8
   124b8:			; <UNDEFINED> instruction: 0x00012cb8
   124bc:			; <UNDEFINED> instruction: 0x00012cb8
   124c0:			; <UNDEFINED> instruction: 0x00012cb8
   124c4:			; <UNDEFINED> instruction: 0x00012cb8
   124c8:			; <UNDEFINED> instruction: 0x00012cb8
   124cc:			; <UNDEFINED> instruction: 0x00012cb8
   124d0:			; <UNDEFINED> instruction: 0x00012cb8
   124d4:			; <UNDEFINED> instruction: 0x00012cb8
   124d8:			; <UNDEFINED> instruction: 0x00012cb8
   124dc:	andeq	r2, r1, ip, lsl #23
   124e0:	muleq	r1, r4, fp
   124e4:	muleq	r1, r4, fp
   124e8:	andeq	r2, r1, r8, ror fp
   124ec:	muleq	r1, r4, fp
   124f0:	andeq	r2, r1, ip, lsr #25
   124f4:	muleq	r1, r4, fp
   124f8:			; <UNDEFINED> instruction: 0x00012bb4
   124fc:	muleq	r1, r4, fp
   12500:	muleq	r1, r4, fp
   12504:	muleq	r1, r4, fp
   12508:	andeq	r2, r1, ip, lsr #25
   1250c:	andeq	r2, r1, ip, lsr #25
   12510:	andeq	r2, r1, ip, lsr #25
   12514:	andeq	r2, r1, ip, lsr #25
   12518:	andeq	r2, r1, ip, lsr #25
   1251c:	andeq	r2, r1, ip, lsr #25
   12520:	andeq	r2, r1, ip, lsr #25
   12524:	andeq	r2, r1, ip, lsr #25
   12528:	andeq	r2, r1, ip, lsr #25
   1252c:	andeq	r2, r1, ip, lsr #25
   12530:	andeq	r2, r1, ip, lsr #25
   12534:	andeq	r2, r1, ip, lsr #25
   12538:	andeq	r2, r1, ip, lsr #25
   1253c:	andeq	r2, r1, ip, lsr #25
   12540:	andeq	r2, r1, ip, lsr #25
   12544:	andeq	r2, r1, ip, lsr #25
   12548:	muleq	r1, r4, fp
   1254c:	muleq	r1, r4, fp
   12550:	muleq	r1, r4, fp
   12554:	muleq	r1, r4, fp
   12558:	andeq	r2, r1, r4, ror #16
   1255c:			; <UNDEFINED> instruction: 0x00012cb8
   12560:	andeq	r2, r1, ip, lsr #25
   12564:	andeq	r2, r1, ip, lsr #25
   12568:	andeq	r2, r1, ip, lsr #25
   1256c:	andeq	r2, r1, ip, lsr #25
   12570:	andeq	r2, r1, ip, lsr #25
   12574:	andeq	r2, r1, ip, lsr #25
   12578:	andeq	r2, r1, ip, lsr #25
   1257c:	andeq	r2, r1, ip, lsr #25
   12580:	andeq	r2, r1, ip, lsr #25
   12584:	andeq	r2, r1, ip, lsr #25
   12588:	andeq	r2, r1, ip, lsr #25
   1258c:	andeq	r2, r1, ip, lsr #25
   12590:	andeq	r2, r1, ip, lsr #25
   12594:	andeq	r2, r1, ip, lsr #25
   12598:	andeq	r2, r1, ip, lsr #25
   1259c:	andeq	r2, r1, ip, lsr #25
   125a0:	andeq	r2, r1, ip, lsr #25
   125a4:	andeq	r2, r1, ip, lsr #25
   125a8:	andeq	r2, r1, ip, lsr #25
   125ac:	andeq	r2, r1, ip, lsr #25
   125b0:	andeq	r2, r1, ip, lsr #25
   125b4:	andeq	r2, r1, ip, lsr #25
   125b8:	andeq	r2, r1, ip, lsr #25
   125bc:	andeq	r2, r1, ip, lsr #25
   125c0:	andeq	r2, r1, ip, lsr #25
   125c4:	andeq	r2, r1, ip, lsr #25
   125c8:	muleq	r1, r4, fp
   125cc:			; <UNDEFINED> instruction: 0x00012ab4
   125d0:	andeq	r2, r1, ip, lsr #25
   125d4:	muleq	r1, r4, fp
   125d8:	andeq	r2, r1, ip, lsr #25
   125dc:	muleq	r1, r4, fp
   125e0:	andeq	r2, r1, ip, lsr #25
   125e4:	andeq	r2, r1, ip, lsr #25
   125e8:	andeq	r2, r1, ip, lsr #25
   125ec:	andeq	r2, r1, ip, lsr #25
   125f0:	andeq	r2, r1, ip, lsr #25
   125f4:	andeq	r2, r1, ip, lsr #25
   125f8:	andeq	r2, r1, ip, lsr #25
   125fc:	andeq	r2, r1, ip, lsr #25
   12600:	andeq	r2, r1, ip, lsr #25
   12604:	andeq	r2, r1, ip, lsr #25
   12608:	andeq	r2, r1, ip, lsr #25
   1260c:	andeq	r2, r1, ip, lsr #25
   12610:	andeq	r2, r1, ip, lsr #25
   12614:	andeq	r2, r1, ip, lsr #25
   12618:	andeq	r2, r1, ip, lsr #25
   1261c:	andeq	r2, r1, ip, lsr #25
   12620:	andeq	r2, r1, ip, lsr #25
   12624:	andeq	r2, r1, ip, lsr #25
   12628:	andeq	r2, r1, ip, lsr #25
   1262c:	andeq	r2, r1, ip, lsr #25
   12630:	andeq	r2, r1, ip, lsr #25
   12634:	andeq	r2, r1, ip, lsr #25
   12638:	andeq	r2, r1, ip, lsr #25
   1263c:	andeq	r2, r1, ip, lsr #25
   12640:	andeq	r2, r1, ip, lsr #25
   12644:	andeq	r2, r1, ip, lsr #25
   12648:	andeq	r2, r1, r4, asr #22
   1264c:	muleq	r1, r4, fp
   12650:	andeq	r2, r1, r4, asr #22
   12654:	andeq	r2, r1, r8, ror fp
   12658:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   1265c:	tst	r0, #1
   12660:	beq	12848 <__assert_fail@plt+0x18b4>
   12664:	b	12668 <__assert_fail@plt+0x16d4>
   12668:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1266c:	tst	r0, #1
   12670:	beq	12678 <__assert_fail@plt+0x16e4>
   12674:	b	136cc <__assert_fail@plt+0x2738>
   12678:	movw	r0, #1
   1267c:	strb	r0, [fp, #-66]	; 0xffffffbe
   12680:	ldr	r0, [fp, #8]
   12684:	cmp	r0, #2
   12688:	bne	1273c <__assert_fail@plt+0x17a8>
   1268c:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   12690:	tst	r0, #1
   12694:	bne	1273c <__assert_fail@plt+0x17a8>
   12698:	b	1269c <__assert_fail@plt+0x1708>
   1269c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   126a0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   126a4:	cmp	r0, r1
   126a8:	bcs	126c0 <__assert_fail@plt+0x172c>
   126ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   126b0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   126b4:	add	r0, r0, r1
   126b8:	movw	r1, #39	; 0x27
   126bc:	strb	r1, [r0]
   126c0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   126c4:	add	r0, r0, #1
   126c8:	str	r0, [fp, #-44]	; 0xffffffd4
   126cc:	b	126d0 <__assert_fail@plt+0x173c>
   126d0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   126d4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   126d8:	cmp	r0, r1
   126dc:	bcs	126f4 <__assert_fail@plt+0x1760>
   126e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   126e4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   126e8:	add	r0, r0, r1
   126ec:	movw	r1, #36	; 0x24
   126f0:	strb	r1, [r0]
   126f4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   126f8:	add	r0, r0, #1
   126fc:	str	r0, [fp, #-44]	; 0xffffffd4
   12700:	b	12704 <__assert_fail@plt+0x1770>
   12704:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12708:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1270c:	cmp	r0, r1
   12710:	bcs	12728 <__assert_fail@plt+0x1794>
   12714:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12718:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1271c:	add	r0, r0, r1
   12720:	movw	r1, #39	; 0x27
   12724:	strb	r1, [r0]
   12728:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1272c:	add	r0, r0, #1
   12730:	str	r0, [fp, #-44]	; 0xffffffd4
   12734:	movw	r0, #1
   12738:	strb	r0, [fp, #-60]	; 0xffffffc4
   1273c:	b	12740 <__assert_fail@plt+0x17ac>
   12740:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12744:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12748:	cmp	r0, r1
   1274c:	bcs	12764 <__assert_fail@plt+0x17d0>
   12750:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12754:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12758:	add	r0, r0, r1
   1275c:	movw	r1, #92	; 0x5c
   12760:	strb	r1, [r0]
   12764:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12768:	add	r0, r0, #1
   1276c:	str	r0, [fp, #-44]	; 0xffffffd4
   12770:	b	12774 <__assert_fail@plt+0x17e0>
   12774:	ldr	r0, [fp, #8]
   12778:	cmp	r0, #2
   1277c:	beq	1283c <__assert_fail@plt+0x18a8>
   12780:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12784:	add	r0, r0, #1
   12788:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1278c:	cmp	r0, r1
   12790:	bcs	1283c <__assert_fail@plt+0x18a8>
   12794:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12798:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1279c:	add	r1, r1, #1
   127a0:	add	r0, r0, r1
   127a4:	ldrb	r0, [r0]
   127a8:	movw	r1, #48	; 0x30
   127ac:	cmp	r1, r0
   127b0:	bgt	1283c <__assert_fail@plt+0x18a8>
   127b4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   127b8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   127bc:	add	r1, r1, #1
   127c0:	add	r0, r0, r1
   127c4:	ldrb	r0, [r0]
   127c8:	cmp	r0, #57	; 0x39
   127cc:	bgt	1283c <__assert_fail@plt+0x18a8>
   127d0:	b	127d4 <__assert_fail@plt+0x1840>
   127d4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   127d8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   127dc:	cmp	r0, r1
   127e0:	bcs	127f8 <__assert_fail@plt+0x1864>
   127e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   127e8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   127ec:	add	r0, r0, r1
   127f0:	movw	r1, #48	; 0x30
   127f4:	strb	r1, [r0]
   127f8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   127fc:	add	r0, r0, #1
   12800:	str	r0, [fp, #-44]	; 0xffffffd4
   12804:	b	12808 <__assert_fail@plt+0x1874>
   12808:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1280c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12810:	cmp	r0, r1
   12814:	bcs	1282c <__assert_fail@plt+0x1898>
   12818:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1281c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12820:	add	r0, r0, r1
   12824:	movw	r1, #48	; 0x30
   12828:	strb	r1, [r0]
   1282c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12830:	add	r0, r0, #1
   12834:	str	r0, [fp, #-44]	; 0xffffffd4
   12838:	b	1283c <__assert_fail@plt+0x18a8>
   1283c:	movw	r0, #48	; 0x30
   12840:	strb	r0, [fp, #-63]	; 0xffffffc1
   12844:	b	12860 <__assert_fail@plt+0x18cc>
   12848:	ldr	r0, [fp, #12]
   1284c:	and	r0, r0, #1
   12850:	cmp	r0, #0
   12854:	beq	1285c <__assert_fail@plt+0x18c8>
   12858:	b	1353c <__assert_fail@plt+0x25a8>
   1285c:	b	12860 <__assert_fail@plt+0x18cc>
   12860:	b	132d8 <__assert_fail@plt+0x2344>
   12864:	ldr	r0, [fp, #8]
   12868:	cmp	r0, #2
   1286c:	str	r0, [sp, #32]
   12870:	beq	12888 <__assert_fail@plt+0x18f4>
   12874:	b	12878 <__assert_fail@plt+0x18e4>
   12878:	ldr	r0, [sp, #32]
   1287c:	cmp	r0, #5
   12880:	beq	1289c <__assert_fail@plt+0x1908>
   12884:	b	12a58 <__assert_fail@plt+0x1ac4>
   12888:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1288c:	tst	r0, #1
   12890:	beq	12898 <__assert_fail@plt+0x1904>
   12894:	b	136cc <__assert_fail@plt+0x2738>
   12898:	b	12a5c <__assert_fail@plt+0x1ac8>
   1289c:	ldr	r0, [fp, #12]
   128a0:	and	r0, r0, #4
   128a4:	cmp	r0, #0
   128a8:	beq	12a54 <__assert_fail@plt+0x1ac0>
   128ac:	ldr	r0, [fp, #-40]	; 0xffffffd8
   128b0:	add	r0, r0, #2
   128b4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   128b8:	cmp	r0, r1
   128bc:	bcs	12a54 <__assert_fail@plt+0x1ac0>
   128c0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   128c4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   128c8:	add	r1, r1, #1
   128cc:	add	r0, r0, r1
   128d0:	ldrb	r0, [r0]
   128d4:	cmp	r0, #63	; 0x3f
   128d8:	bne	12a54 <__assert_fail@plt+0x1ac0>
   128dc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   128e0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   128e4:	add	r0, r1, r0
   128e8:	ldrb	r0, [r0, #2]
   128ec:	mov	r1, r0
   128f0:	cmp	r0, #33	; 0x21
   128f4:	str	r1, [sp, #28]
   128f8:	beq	12948 <__assert_fail@plt+0x19b4>
   128fc:	b	12900 <__assert_fail@plt+0x196c>
   12900:	ldr	r0, [sp, #28]
   12904:	sub	r1, r0, #39	; 0x27
   12908:	cmp	r1, #3
   1290c:	bcc	12948 <__assert_fail@plt+0x19b4>
   12910:	b	12914 <__assert_fail@plt+0x1980>
   12914:	ldr	r0, [sp, #28]
   12918:	cmp	r0, #45	; 0x2d
   1291c:	beq	12948 <__assert_fail@plt+0x19b4>
   12920:	b	12924 <__assert_fail@plt+0x1990>
   12924:	ldr	r0, [sp, #28]
   12928:	cmp	r0, #47	; 0x2f
   1292c:	beq	12948 <__assert_fail@plt+0x19b4>
   12930:	b	12934 <__assert_fail@plt+0x19a0>
   12934:	ldr	r0, [sp, #28]
   12938:	sub	r1, r0, #60	; 0x3c
   1293c:	cmp	r1, #2
   12940:	bhi	12a4c <__assert_fail@plt+0x1ab8>
   12944:	b	12948 <__assert_fail@plt+0x19b4>
   12948:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1294c:	tst	r0, #1
   12950:	beq	12958 <__assert_fail@plt+0x19c4>
   12954:	b	136cc <__assert_fail@plt+0x2738>
   12958:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1295c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   12960:	add	r1, r1, #2
   12964:	add	r0, r0, r1
   12968:	ldrb	r0, [r0]
   1296c:	strb	r0, [fp, #-63]	; 0xffffffc1
   12970:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12974:	add	r0, r0, #2
   12978:	str	r0, [fp, #-40]	; 0xffffffd8
   1297c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12980:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12984:	cmp	r0, r1
   12988:	bcs	129a0 <__assert_fail@plt+0x1a0c>
   1298c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12990:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12994:	add	r0, r0, r1
   12998:	movw	r1, #63	; 0x3f
   1299c:	strb	r1, [r0]
   129a0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   129a4:	add	r0, r0, #1
   129a8:	str	r0, [fp, #-44]	; 0xffffffd4
   129ac:	b	129b0 <__assert_fail@plt+0x1a1c>
   129b0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   129b4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   129b8:	cmp	r0, r1
   129bc:	bcs	129d4 <__assert_fail@plt+0x1a40>
   129c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   129c4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   129c8:	add	r0, r0, r1
   129cc:	movw	r1, #34	; 0x22
   129d0:	strb	r1, [r0]
   129d4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   129d8:	add	r0, r0, #1
   129dc:	str	r0, [fp, #-44]	; 0xffffffd4
   129e0:	b	129e4 <__assert_fail@plt+0x1a50>
   129e4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   129e8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   129ec:	cmp	r0, r1
   129f0:	bcs	12a08 <__assert_fail@plt+0x1a74>
   129f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   129f8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   129fc:	add	r0, r0, r1
   12a00:	movw	r1, #34	; 0x22
   12a04:	strb	r1, [r0]
   12a08:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12a0c:	add	r0, r0, #1
   12a10:	str	r0, [fp, #-44]	; 0xffffffd4
   12a14:	b	12a18 <__assert_fail@plt+0x1a84>
   12a18:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12a1c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12a20:	cmp	r0, r1
   12a24:	bcs	12a3c <__assert_fail@plt+0x1aa8>
   12a28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12a2c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12a30:	add	r0, r0, r1
   12a34:	movw	r1, #63	; 0x3f
   12a38:	strb	r1, [r0]
   12a3c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12a40:	add	r0, r0, #1
   12a44:	str	r0, [fp, #-44]	; 0xffffffd4
   12a48:	b	12a50 <__assert_fail@plt+0x1abc>
   12a4c:	b	12a50 <__assert_fail@plt+0x1abc>
   12a50:	b	12a54 <__assert_fail@plt+0x1ac0>
   12a54:	b	12a5c <__assert_fail@plt+0x1ac8>
   12a58:	b	12a5c <__assert_fail@plt+0x1ac8>
   12a5c:	b	132d8 <__assert_fail@plt+0x2344>
   12a60:	movw	r0, #97	; 0x61
   12a64:	strb	r0, [fp, #-64]	; 0xffffffc0
   12a68:	b	12b28 <__assert_fail@plt+0x1b94>
   12a6c:	movw	r0, #98	; 0x62
   12a70:	strb	r0, [fp, #-64]	; 0xffffffc0
   12a74:	b	12b28 <__assert_fail@plt+0x1b94>
   12a78:	movw	r0, #102	; 0x66
   12a7c:	strb	r0, [fp, #-64]	; 0xffffffc0
   12a80:	b	12b28 <__assert_fail@plt+0x1b94>
   12a84:	movw	r0, #110	; 0x6e
   12a88:	strb	r0, [fp, #-64]	; 0xffffffc0
   12a8c:	b	12b08 <__assert_fail@plt+0x1b74>
   12a90:	movw	r0, #114	; 0x72
   12a94:	strb	r0, [fp, #-64]	; 0xffffffc0
   12a98:	b	12b08 <__assert_fail@plt+0x1b74>
   12a9c:	movw	r0, #116	; 0x74
   12aa0:	strb	r0, [fp, #-64]	; 0xffffffc0
   12aa4:	b	12b08 <__assert_fail@plt+0x1b74>
   12aa8:	movw	r0, #118	; 0x76
   12aac:	strb	r0, [fp, #-64]	; 0xffffffc0
   12ab0:	b	12b28 <__assert_fail@plt+0x1b94>
   12ab4:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   12ab8:	strb	r0, [fp, #-64]	; 0xffffffc0
   12abc:	ldr	r0, [fp, #8]
   12ac0:	cmp	r0, #2
   12ac4:	bne	12adc <__assert_fail@plt+0x1b48>
   12ac8:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   12acc:	tst	r0, #1
   12ad0:	beq	12ad8 <__assert_fail@plt+0x1b44>
   12ad4:	b	136cc <__assert_fail@plt+0x2738>
   12ad8:	b	13460 <__assert_fail@plt+0x24cc>
   12adc:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   12ae0:	tst	r0, #1
   12ae4:	beq	12b04 <__assert_fail@plt+0x1b70>
   12ae8:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   12aec:	tst	r0, #1
   12af0:	beq	12b04 <__assert_fail@plt+0x1b70>
   12af4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   12af8:	cmp	r0, #0
   12afc:	beq	12b04 <__assert_fail@plt+0x1b70>
   12b00:	b	13460 <__assert_fail@plt+0x24cc>
   12b04:	b	12b08 <__assert_fail@plt+0x1b74>
   12b08:	ldr	r0, [fp, #8]
   12b0c:	cmp	r0, #2
   12b10:	bne	12b24 <__assert_fail@plt+0x1b90>
   12b14:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   12b18:	tst	r0, #1
   12b1c:	beq	12b24 <__assert_fail@plt+0x1b90>
   12b20:	b	136cc <__assert_fail@plt+0x2738>
   12b24:	b	12b28 <__assert_fail@plt+0x1b94>
   12b28:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   12b2c:	tst	r0, #1
   12b30:	beq	12b40 <__assert_fail@plt+0x1bac>
   12b34:	ldrb	r0, [fp, #-64]	; 0xffffffc0
   12b38:	strb	r0, [fp, #-63]	; 0xffffffc1
   12b3c:	b	1334c <__assert_fail@plt+0x23b8>
   12b40:	b	132d8 <__assert_fail@plt+0x2344>
   12b44:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12b48:	cmn	r0, #1
   12b4c:	bne	12b64 <__assert_fail@plt+0x1bd0>
   12b50:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12b54:	ldrb	r0, [r0, #1]
   12b58:	cmp	r0, #0
   12b5c:	beq	12b74 <__assert_fail@plt+0x1be0>
   12b60:	b	12b70 <__assert_fail@plt+0x1bdc>
   12b64:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12b68:	cmp	r0, #1
   12b6c:	beq	12b74 <__assert_fail@plt+0x1be0>
   12b70:	b	132d8 <__assert_fail@plt+0x2344>
   12b74:	b	12b78 <__assert_fail@plt+0x1be4>
   12b78:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12b7c:	cmp	r0, #0
   12b80:	beq	12b88 <__assert_fail@plt+0x1bf4>
   12b84:	b	132d8 <__assert_fail@plt+0x2344>
   12b88:	b	12b8c <__assert_fail@plt+0x1bf8>
   12b8c:	movw	r0, #1
   12b90:	strb	r0, [fp, #-67]	; 0xffffffbd
   12b94:	ldr	r0, [fp, #8]
   12b98:	cmp	r0, #2
   12b9c:	bne	12bb0 <__assert_fail@plt+0x1c1c>
   12ba0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   12ba4:	tst	r0, #1
   12ba8:	beq	12bb0 <__assert_fail@plt+0x1c1c>
   12bac:	b	136cc <__assert_fail@plt+0x2738>
   12bb0:	b	132d8 <__assert_fail@plt+0x2344>
   12bb4:	movw	r0, #1
   12bb8:	strb	r0, [fp, #-61]	; 0xffffffc3
   12bbc:	strb	r0, [fp, #-67]	; 0xffffffbd
   12bc0:	ldr	r0, [fp, #8]
   12bc4:	cmp	r0, #2
   12bc8:	bne	12ca8 <__assert_fail@plt+0x1d14>
   12bcc:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   12bd0:	tst	r0, #1
   12bd4:	beq	12bdc <__assert_fail@plt+0x1c48>
   12bd8:	b	136cc <__assert_fail@plt+0x2738>
   12bdc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12be0:	cmp	r0, #0
   12be4:	beq	12c04 <__assert_fail@plt+0x1c70>
   12be8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   12bec:	cmp	r0, #0
   12bf0:	bne	12c04 <__assert_fail@plt+0x1c70>
   12bf4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12bf8:	str	r0, [fp, #-48]	; 0xffffffd0
   12bfc:	movw	r0, #0
   12c00:	str	r0, [fp, #-28]	; 0xffffffe4
   12c04:	b	12c08 <__assert_fail@plt+0x1c74>
   12c08:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12c0c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12c10:	cmp	r0, r1
   12c14:	bcs	12c2c <__assert_fail@plt+0x1c98>
   12c18:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12c1c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12c20:	add	r0, r0, r1
   12c24:	movw	r1, #39	; 0x27
   12c28:	strb	r1, [r0]
   12c2c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12c30:	add	r0, r0, #1
   12c34:	str	r0, [fp, #-44]	; 0xffffffd4
   12c38:	b	12c3c <__assert_fail@plt+0x1ca8>
   12c3c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12c40:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12c44:	cmp	r0, r1
   12c48:	bcs	12c60 <__assert_fail@plt+0x1ccc>
   12c4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12c50:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12c54:	add	r0, r0, r1
   12c58:	movw	r1, #92	; 0x5c
   12c5c:	strb	r1, [r0]
   12c60:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12c64:	add	r0, r0, #1
   12c68:	str	r0, [fp, #-44]	; 0xffffffd4
   12c6c:	b	12c70 <__assert_fail@plt+0x1cdc>
   12c70:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12c74:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12c78:	cmp	r0, r1
   12c7c:	bcs	12c94 <__assert_fail@plt+0x1d00>
   12c80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12c84:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12c88:	add	r0, r0, r1
   12c8c:	movw	r1, #39	; 0x27
   12c90:	strb	r1, [r0]
   12c94:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12c98:	add	r0, r0, #1
   12c9c:	str	r0, [fp, #-44]	; 0xffffffd4
   12ca0:	movw	r0, #0
   12ca4:	strb	r0, [fp, #-60]	; 0xffffffc4
   12ca8:	b	132d8 <__assert_fail@plt+0x2344>
   12cac:	movw	r0, #1
   12cb0:	strb	r0, [fp, #-67]	; 0xffffffbd
   12cb4:	b	132d8 <__assert_fail@plt+0x2344>
   12cb8:	ldrb	r0, [fp, #-58]	; 0xffffffc6
   12cbc:	tst	r0, #1
   12cc0:	beq	12d00 <__assert_fail@plt+0x1d6c>
   12cc4:	mov	r0, #1
   12cc8:	str	r0, [fp, #-72]	; 0xffffffb8
   12ccc:	bl	10eb0 <__ctype_b_loc@plt>
   12cd0:	ldr	r0, [r0]
   12cd4:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   12cd8:	mov	r2, r1
   12cdc:	add	r0, r0, r1, lsl #1
   12ce0:	ldrh	r0, [r0]
   12ce4:	and	r0, r0, #16384	; 0x4000
   12ce8:	cmp	r0, #0
   12cec:	movw	r0, #0
   12cf0:	movne	r0, #1
   12cf4:	and	r0, r0, #1
   12cf8:	strb	r0, [fp, #-73]	; 0xffffffb7
   12cfc:	b	12f8c <__assert_fail@plt+0x1ff8>
   12d00:	sub	r0, fp, #84	; 0x54
   12d04:	movw	r1, #0
   12d08:	and	r1, r1, #255	; 0xff
   12d0c:	movw	r2, #8
   12d10:	bl	10f10 <memset@plt>
   12d14:	movw	r0, #0
   12d18:	str	r0, [fp, #-72]	; 0xffffffb8
   12d1c:	movw	r0, #1
   12d20:	strb	r0, [fp, #-73]	; 0xffffffb7
   12d24:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12d28:	cmn	r0, #1
   12d2c:	bne	12d3c <__assert_fail@plt+0x1da8>
   12d30:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12d34:	bl	10ed4 <strlen@plt>
   12d38:	str	r0, [fp, #-36]	; 0xffffffdc
   12d3c:	b	12d40 <__assert_fail@plt+0x1dac>
   12d40:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12d44:	ldr	r1, [fp, #-40]	; 0xffffffd8
   12d48:	ldr	r2, [fp, #-72]	; 0xffffffb8
   12d4c:	add	r1, r1, r2
   12d50:	add	r1, r0, r1
   12d54:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12d58:	ldr	r2, [fp, #-40]	; 0xffffffd8
   12d5c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   12d60:	add	r2, r2, r3
   12d64:	sub	r2, r0, r2
   12d68:	add	r0, sp, #88	; 0x58
   12d6c:	sub	r3, fp, #84	; 0x54
   12d70:	bl	19e28 <__assert_fail@plt+0x8e94>
   12d74:	str	r0, [sp, #84]	; 0x54
   12d78:	ldr	r0, [sp, #84]	; 0x54
   12d7c:	cmp	r0, #0
   12d80:	bne	12d88 <__assert_fail@plt+0x1df4>
   12d84:	b	12f88 <__assert_fail@plt+0x1ff4>
   12d88:	ldr	r0, [sp, #84]	; 0x54
   12d8c:	cmn	r0, #1
   12d90:	bne	12da0 <__assert_fail@plt+0x1e0c>
   12d94:	movw	r0, #0
   12d98:	strb	r0, [fp, #-73]	; 0xffffffb7
   12d9c:	b	12f88 <__assert_fail@plt+0x1ff4>
   12da0:	ldr	r0, [sp, #84]	; 0x54
   12da4:	cmn	r0, #2
   12da8:	bne	12e1c <__assert_fail@plt+0x1e88>
   12dac:	movw	r0, #0
   12db0:	strb	r0, [fp, #-73]	; 0xffffffb7
   12db4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12db8:	ldr	r1, [fp, #-72]	; 0xffffffb8
   12dbc:	add	r0, r0, r1
   12dc0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   12dc4:	cmp	r0, r1
   12dc8:	movw	r0, #0
   12dcc:	str	r0, [sp, #24]
   12dd0:	bcs	12dfc <__assert_fail@plt+0x1e68>
   12dd4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12dd8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   12ddc:	ldr	r2, [fp, #-72]	; 0xffffffb8
   12de0:	add	r1, r1, r2
   12de4:	add	r0, r0, r1
   12de8:	ldrb	r0, [r0]
   12dec:	cmp	r0, #0
   12df0:	movw	r0, #0
   12df4:	movne	r0, #1
   12df8:	str	r0, [sp, #24]
   12dfc:	ldr	r0, [sp, #24]
   12e00:	tst	r0, #1
   12e04:	beq	12e18 <__assert_fail@plt+0x1e84>
   12e08:	ldr	r0, [fp, #-72]	; 0xffffffb8
   12e0c:	add	r0, r0, #1
   12e10:	str	r0, [fp, #-72]	; 0xffffffb8
   12e14:	b	12db4 <__assert_fail@plt+0x1e20>
   12e18:	b	12f88 <__assert_fail@plt+0x1ff4>
   12e1c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   12e20:	tst	r0, #1
   12e24:	beq	12f30 <__assert_fail@plt+0x1f9c>
   12e28:	ldr	r0, [fp, #8]
   12e2c:	cmp	r0, #2
   12e30:	bne	12f30 <__assert_fail@plt+0x1f9c>
   12e34:	movw	r0, #1
   12e38:	str	r0, [sp, #80]	; 0x50
   12e3c:	ldr	r0, [sp, #80]	; 0x50
   12e40:	ldr	r1, [sp, #84]	; 0x54
   12e44:	cmp	r0, r1
   12e48:	bcs	12f2c <__assert_fail@plt+0x1f98>
   12e4c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12e50:	ldr	r1, [fp, #-40]	; 0xffffffd8
   12e54:	ldr	r2, [fp, #-72]	; 0xffffffb8
   12e58:	add	r1, r1, r2
   12e5c:	ldr	r2, [sp, #80]	; 0x50
   12e60:	add	r1, r1, r2
   12e64:	ldrb	r0, [r0, r1]
   12e68:	sub	r0, r0, #91	; 0x5b
   12e6c:	cmp	r0, #33	; 0x21
   12e70:	str	r0, [sp, #20]
   12e74:	bhi	12f14 <__assert_fail@plt+0x1f80>
   12e78:	add	r0, pc, #8
   12e7c:	ldr	r1, [sp, #20]
   12e80:	ldr	r0, [r0, r1, lsl #2]
   12e84:	mov	pc, r0
   12e88:	andeq	r2, r1, r0, lsl pc
   12e8c:	andeq	r2, r1, r0, lsl pc
   12e90:	andeq	r2, r1, r4, lsl pc
   12e94:	andeq	r2, r1, r0, lsl pc
   12e98:	andeq	r2, r1, r4, lsl pc
   12e9c:	andeq	r2, r1, r0, lsl pc
   12ea0:	andeq	r2, r1, r4, lsl pc
   12ea4:	andeq	r2, r1, r4, lsl pc
   12ea8:	andeq	r2, r1, r4, lsl pc
   12eac:	andeq	r2, r1, r4, lsl pc
   12eb0:	andeq	r2, r1, r4, lsl pc
   12eb4:	andeq	r2, r1, r4, lsl pc
   12eb8:	andeq	r2, r1, r4, lsl pc
   12ebc:	andeq	r2, r1, r4, lsl pc
   12ec0:	andeq	r2, r1, r4, lsl pc
   12ec4:	andeq	r2, r1, r4, lsl pc
   12ec8:	andeq	r2, r1, r4, lsl pc
   12ecc:	andeq	r2, r1, r4, lsl pc
   12ed0:	andeq	r2, r1, r4, lsl pc
   12ed4:	andeq	r2, r1, r4, lsl pc
   12ed8:	andeq	r2, r1, r4, lsl pc
   12edc:	andeq	r2, r1, r4, lsl pc
   12ee0:	andeq	r2, r1, r4, lsl pc
   12ee4:	andeq	r2, r1, r4, lsl pc
   12ee8:	andeq	r2, r1, r4, lsl pc
   12eec:	andeq	r2, r1, r4, lsl pc
   12ef0:	andeq	r2, r1, r4, lsl pc
   12ef4:	andeq	r2, r1, r4, lsl pc
   12ef8:	andeq	r2, r1, r4, lsl pc
   12efc:	andeq	r2, r1, r4, lsl pc
   12f00:	andeq	r2, r1, r4, lsl pc
   12f04:	andeq	r2, r1, r4, lsl pc
   12f08:	andeq	r2, r1, r4, lsl pc
   12f0c:	andeq	r2, r1, r0, lsl pc
   12f10:	b	136cc <__assert_fail@plt+0x2738>
   12f14:	b	12f18 <__assert_fail@plt+0x1f84>
   12f18:	b	12f1c <__assert_fail@plt+0x1f88>
   12f1c:	ldr	r0, [sp, #80]	; 0x50
   12f20:	add	r0, r0, #1
   12f24:	str	r0, [sp, #80]	; 0x50
   12f28:	b	12e3c <__assert_fail@plt+0x1ea8>
   12f2c:	b	12f30 <__assert_fail@plt+0x1f9c>
   12f30:	ldr	r0, [sp, #88]	; 0x58
   12f34:	bl	10e14 <iswprint@plt>
   12f38:	cmp	r0, #0
   12f3c:	bne	12f48 <__assert_fail@plt+0x1fb4>
   12f40:	movw	r0, #0
   12f44:	strb	r0, [fp, #-73]	; 0xffffffb7
   12f48:	ldr	r0, [sp, #84]	; 0x54
   12f4c:	ldr	r1, [fp, #-72]	; 0xffffffb8
   12f50:	add	r0, r1, r0
   12f54:	str	r0, [fp, #-72]	; 0xffffffb8
   12f58:	b	12f5c <__assert_fail@plt+0x1fc8>
   12f5c:	b	12f60 <__assert_fail@plt+0x1fcc>
   12f60:	b	12f64 <__assert_fail@plt+0x1fd0>
   12f64:	sub	r0, fp, #84	; 0x54
   12f68:	bl	10dd8 <mbsinit@plt>
   12f6c:	cmp	r0, #0
   12f70:	movw	r0, #0
   12f74:	movne	r0, #1
   12f78:	mvn	r1, #0
   12f7c:	eor	r0, r0, r1
   12f80:	tst	r0, #1
   12f84:	bne	12d40 <__assert_fail@plt+0x1dac>
   12f88:	b	12f8c <__assert_fail@plt+0x1ff8>
   12f8c:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   12f90:	and	r0, r0, #1
   12f94:	strb	r0, [fp, #-67]	; 0xffffffbd
   12f98:	ldr	r0, [fp, #-72]	; 0xffffffb8
   12f9c:	movw	r1, #1
   12fa0:	cmp	r1, r0
   12fa4:	bcc	12fc0 <__assert_fail@plt+0x202c>
   12fa8:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   12fac:	tst	r0, #1
   12fb0:	beq	132d4 <__assert_fail@plt+0x2340>
   12fb4:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   12fb8:	tst	r0, #1
   12fbc:	bne	132d4 <__assert_fail@plt+0x2340>
   12fc0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12fc4:	ldr	r1, [fp, #-72]	; 0xffffffb8
   12fc8:	add	r0, r0, r1
   12fcc:	str	r0, [sp, #76]	; 0x4c
   12fd0:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   12fd4:	tst	r0, #1
   12fd8:	beq	13188 <__assert_fail@plt+0x21f4>
   12fdc:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   12fe0:	tst	r0, #1
   12fe4:	bne	13188 <__assert_fail@plt+0x21f4>
   12fe8:	b	12fec <__assert_fail@plt+0x2058>
   12fec:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   12ff0:	tst	r0, #1
   12ff4:	beq	12ffc <__assert_fail@plt+0x2068>
   12ff8:	b	136cc <__assert_fail@plt+0x2738>
   12ffc:	movw	r0, #1
   13000:	strb	r0, [fp, #-66]	; 0xffffffbe
   13004:	ldr	r0, [fp, #8]
   13008:	cmp	r0, #2
   1300c:	bne	130c0 <__assert_fail@plt+0x212c>
   13010:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   13014:	tst	r0, #1
   13018:	bne	130c0 <__assert_fail@plt+0x212c>
   1301c:	b	13020 <__assert_fail@plt+0x208c>
   13020:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13024:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13028:	cmp	r0, r1
   1302c:	bcs	13044 <__assert_fail@plt+0x20b0>
   13030:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13034:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13038:	add	r0, r0, r1
   1303c:	movw	r1, #39	; 0x27
   13040:	strb	r1, [r0]
   13044:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13048:	add	r0, r0, #1
   1304c:	str	r0, [fp, #-44]	; 0xffffffd4
   13050:	b	13054 <__assert_fail@plt+0x20c0>
   13054:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13058:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1305c:	cmp	r0, r1
   13060:	bcs	13078 <__assert_fail@plt+0x20e4>
   13064:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13068:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1306c:	add	r0, r0, r1
   13070:	movw	r1, #36	; 0x24
   13074:	strb	r1, [r0]
   13078:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1307c:	add	r0, r0, #1
   13080:	str	r0, [fp, #-44]	; 0xffffffd4
   13084:	b	13088 <__assert_fail@plt+0x20f4>
   13088:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1308c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13090:	cmp	r0, r1
   13094:	bcs	130ac <__assert_fail@plt+0x2118>
   13098:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1309c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   130a0:	add	r0, r0, r1
   130a4:	movw	r1, #39	; 0x27
   130a8:	strb	r1, [r0]
   130ac:	ldr	r0, [fp, #-44]	; 0xffffffd4
   130b0:	add	r0, r0, #1
   130b4:	str	r0, [fp, #-44]	; 0xffffffd4
   130b8:	movw	r0, #1
   130bc:	strb	r0, [fp, #-60]	; 0xffffffc4
   130c0:	b	130c4 <__assert_fail@plt+0x2130>
   130c4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   130c8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   130cc:	cmp	r0, r1
   130d0:	bcs	130e8 <__assert_fail@plt+0x2154>
   130d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   130d8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   130dc:	add	r0, r0, r1
   130e0:	movw	r1, #92	; 0x5c
   130e4:	strb	r1, [r0]
   130e8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   130ec:	add	r0, r0, #1
   130f0:	str	r0, [fp, #-44]	; 0xffffffd4
   130f4:	b	130f8 <__assert_fail@plt+0x2164>
   130f8:	b	130fc <__assert_fail@plt+0x2168>
   130fc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13100:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13104:	cmp	r0, r1
   13108:	bcs	13128 <__assert_fail@plt+0x2194>
   1310c:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   13110:	asr	r0, r0, #6
   13114:	add	r0, r0, #48	; 0x30
   13118:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1311c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   13120:	add	r1, r1, r2
   13124:	strb	r0, [r1]
   13128:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1312c:	add	r0, r0, #1
   13130:	str	r0, [fp, #-44]	; 0xffffffd4
   13134:	b	13138 <__assert_fail@plt+0x21a4>
   13138:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1313c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13140:	cmp	r0, r1
   13144:	bcs	13168 <__assert_fail@plt+0x21d4>
   13148:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   1314c:	asr	r0, r0, #3
   13150:	and	r0, r0, #7
   13154:	add	r0, r0, #48	; 0x30
   13158:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1315c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   13160:	add	r1, r1, r2
   13164:	strb	r0, [r1]
   13168:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1316c:	add	r0, r0, #1
   13170:	str	r0, [fp, #-44]	; 0xffffffd4
   13174:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   13178:	and	r0, r0, #7
   1317c:	add	r0, r0, #48	; 0x30
   13180:	strb	r0, [fp, #-63]	; 0xffffffc1
   13184:	b	131d4 <__assert_fail@plt+0x2240>
   13188:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   1318c:	tst	r0, #1
   13190:	beq	131d0 <__assert_fail@plt+0x223c>
   13194:	b	13198 <__assert_fail@plt+0x2204>
   13198:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1319c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   131a0:	cmp	r0, r1
   131a4:	bcs	131bc <__assert_fail@plt+0x2228>
   131a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   131ac:	ldr	r1, [fp, #-44]	; 0xffffffd4
   131b0:	add	r0, r0, r1
   131b4:	movw	r1, #92	; 0x5c
   131b8:	strb	r1, [r0]
   131bc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   131c0:	add	r0, r0, #1
   131c4:	str	r0, [fp, #-44]	; 0xffffffd4
   131c8:	movw	r0, #0
   131cc:	strb	r0, [fp, #-65]	; 0xffffffbf
   131d0:	b	131d4 <__assert_fail@plt+0x2240>
   131d4:	ldr	r0, [sp, #76]	; 0x4c
   131d8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   131dc:	add	r1, r1, #1
   131e0:	cmp	r0, r1
   131e4:	bhi	131ec <__assert_fail@plt+0x2258>
   131e8:	b	132d0 <__assert_fail@plt+0x233c>
   131ec:	b	131f0 <__assert_fail@plt+0x225c>
   131f0:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   131f4:	tst	r0, #1
   131f8:	beq	13278 <__assert_fail@plt+0x22e4>
   131fc:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   13200:	tst	r0, #1
   13204:	bne	13278 <__assert_fail@plt+0x22e4>
   13208:	b	1320c <__assert_fail@plt+0x2278>
   1320c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13210:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13214:	cmp	r0, r1
   13218:	bcs	13230 <__assert_fail@plt+0x229c>
   1321c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13220:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13224:	add	r0, r0, r1
   13228:	movw	r1, #39	; 0x27
   1322c:	strb	r1, [r0]
   13230:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13234:	add	r0, r0, #1
   13238:	str	r0, [fp, #-44]	; 0xffffffd4
   1323c:	b	13240 <__assert_fail@plt+0x22ac>
   13240:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13244:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13248:	cmp	r0, r1
   1324c:	bcs	13264 <__assert_fail@plt+0x22d0>
   13250:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13254:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13258:	add	r0, r0, r1
   1325c:	movw	r1, #39	; 0x27
   13260:	strb	r1, [r0]
   13264:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13268:	add	r0, r0, #1
   1326c:	str	r0, [fp, #-44]	; 0xffffffd4
   13270:	movw	r0, #0
   13274:	strb	r0, [fp, #-60]	; 0xffffffc4
   13278:	b	1327c <__assert_fail@plt+0x22e8>
   1327c:	b	13280 <__assert_fail@plt+0x22ec>
   13280:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13284:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13288:	cmp	r0, r1
   1328c:	bcs	132a4 <__assert_fail@plt+0x2310>
   13290:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   13294:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13298:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1329c:	add	r1, r1, r2
   132a0:	strb	r0, [r1]
   132a4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   132a8:	add	r0, r0, #1
   132ac:	str	r0, [fp, #-44]	; 0xffffffd4
   132b0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   132b4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   132b8:	add	r1, r1, #1
   132bc:	str	r1, [fp, #-40]	; 0xffffffd8
   132c0:	add	r0, r0, r1
   132c4:	ldrb	r0, [r0]
   132c8:	strb	r0, [fp, #-63]	; 0xffffffc1
   132cc:	b	12fd0 <__assert_fail@plt+0x203c>
   132d0:	b	13460 <__assert_fail@plt+0x24cc>
   132d4:	b	132d8 <__assert_fail@plt+0x2344>
   132d8:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   132dc:	tst	r0, #1
   132e0:	beq	132f0 <__assert_fail@plt+0x235c>
   132e4:	ldr	r0, [fp, #8]
   132e8:	cmp	r0, #2
   132ec:	bne	132fc <__assert_fail@plt+0x2368>
   132f0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   132f4:	tst	r0, #1
   132f8:	beq	13338 <__assert_fail@plt+0x23a4>
   132fc:	ldr	r0, [fp, #16]
   13300:	movw	r1, #0
   13304:	cmp	r0, r1
   13308:	beq	13338 <__assert_fail@plt+0x23a4>
   1330c:	ldr	r0, [fp, #16]
   13310:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   13314:	lsr	r1, r1, #5
   13318:	add	r0, r0, r1, lsl #2
   1331c:	ldr	r0, [r0]
   13320:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   13324:	and	r1, r1, #31
   13328:	lsr	r0, r0, r1
   1332c:	and	r0, r0, #1
   13330:	cmp	r0, #0
   13334:	bne	13348 <__assert_fail@plt+0x23b4>
   13338:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   1333c:	tst	r0, #1
   13340:	bne	13348 <__assert_fail@plt+0x23b4>
   13344:	b	13460 <__assert_fail@plt+0x24cc>
   13348:	b	1334c <__assert_fail@plt+0x23b8>
   1334c:	b	13350 <__assert_fail@plt+0x23bc>
   13350:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13354:	tst	r0, #1
   13358:	beq	13360 <__assert_fail@plt+0x23cc>
   1335c:	b	136cc <__assert_fail@plt+0x2738>
   13360:	movw	r0, #1
   13364:	strb	r0, [fp, #-66]	; 0xffffffbe
   13368:	ldr	r0, [fp, #8]
   1336c:	cmp	r0, #2
   13370:	bne	13424 <__assert_fail@plt+0x2490>
   13374:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   13378:	tst	r0, #1
   1337c:	bne	13424 <__assert_fail@plt+0x2490>
   13380:	b	13384 <__assert_fail@plt+0x23f0>
   13384:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13388:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1338c:	cmp	r0, r1
   13390:	bcs	133a8 <__assert_fail@plt+0x2414>
   13394:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13398:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1339c:	add	r0, r0, r1
   133a0:	movw	r1, #39	; 0x27
   133a4:	strb	r1, [r0]
   133a8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   133ac:	add	r0, r0, #1
   133b0:	str	r0, [fp, #-44]	; 0xffffffd4
   133b4:	b	133b8 <__assert_fail@plt+0x2424>
   133b8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   133bc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   133c0:	cmp	r0, r1
   133c4:	bcs	133dc <__assert_fail@plt+0x2448>
   133c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   133cc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   133d0:	add	r0, r0, r1
   133d4:	movw	r1, #36	; 0x24
   133d8:	strb	r1, [r0]
   133dc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   133e0:	add	r0, r0, #1
   133e4:	str	r0, [fp, #-44]	; 0xffffffd4
   133e8:	b	133ec <__assert_fail@plt+0x2458>
   133ec:	ldr	r0, [fp, #-44]	; 0xffffffd4
   133f0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   133f4:	cmp	r0, r1
   133f8:	bcs	13410 <__assert_fail@plt+0x247c>
   133fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13400:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13404:	add	r0, r0, r1
   13408:	movw	r1, #39	; 0x27
   1340c:	strb	r1, [r0]
   13410:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13414:	add	r0, r0, #1
   13418:	str	r0, [fp, #-44]	; 0xffffffd4
   1341c:	movw	r0, #1
   13420:	strb	r0, [fp, #-60]	; 0xffffffc4
   13424:	b	13428 <__assert_fail@plt+0x2494>
   13428:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1342c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13430:	cmp	r0, r1
   13434:	bcs	1344c <__assert_fail@plt+0x24b8>
   13438:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1343c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13440:	add	r0, r0, r1
   13444:	movw	r1, #92	; 0x5c
   13448:	strb	r1, [r0]
   1344c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13450:	add	r0, r0, #1
   13454:	str	r0, [fp, #-44]	; 0xffffffd4
   13458:	b	1345c <__assert_fail@plt+0x24c8>
   1345c:	b	13460 <__assert_fail@plt+0x24cc>
   13460:	b	13464 <__assert_fail@plt+0x24d0>
   13464:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   13468:	tst	r0, #1
   1346c:	beq	134ec <__assert_fail@plt+0x2558>
   13470:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   13474:	tst	r0, #1
   13478:	bne	134ec <__assert_fail@plt+0x2558>
   1347c:	b	13480 <__assert_fail@plt+0x24ec>
   13480:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13484:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13488:	cmp	r0, r1
   1348c:	bcs	134a4 <__assert_fail@plt+0x2510>
   13490:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13494:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13498:	add	r0, r0, r1
   1349c:	movw	r1, #39	; 0x27
   134a0:	strb	r1, [r0]
   134a4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   134a8:	add	r0, r0, #1
   134ac:	str	r0, [fp, #-44]	; 0xffffffd4
   134b0:	b	134b4 <__assert_fail@plt+0x2520>
   134b4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   134b8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   134bc:	cmp	r0, r1
   134c0:	bcs	134d8 <__assert_fail@plt+0x2544>
   134c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   134c8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   134cc:	add	r0, r0, r1
   134d0:	movw	r1, #39	; 0x27
   134d4:	strb	r1, [r0]
   134d8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   134dc:	add	r0, r0, #1
   134e0:	str	r0, [fp, #-44]	; 0xffffffd4
   134e4:	movw	r0, #0
   134e8:	strb	r0, [fp, #-60]	; 0xffffffc4
   134ec:	b	134f0 <__assert_fail@plt+0x255c>
   134f0:	b	134f4 <__assert_fail@plt+0x2560>
   134f4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   134f8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   134fc:	cmp	r0, r1
   13500:	bcs	13518 <__assert_fail@plt+0x2584>
   13504:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   13508:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1350c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   13510:	add	r1, r1, r2
   13514:	strb	r0, [r1]
   13518:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1351c:	add	r0, r0, #1
   13520:	str	r0, [fp, #-44]	; 0xffffffd4
   13524:	ldrb	r0, [fp, #-67]	; 0xffffffbd
   13528:	tst	r0, #1
   1352c:	bne	13538 <__assert_fail@plt+0x25a4>
   13530:	movw	r0, #0
   13534:	strb	r0, [fp, #-62]	; 0xffffffc2
   13538:	b	1353c <__assert_fail@plt+0x25a8>
   1353c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13540:	add	r0, r0, #1
   13544:	str	r0, [fp, #-40]	; 0xffffffd8
   13548:	b	122f4 <__assert_fail@plt+0x1360>
   1354c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13550:	cmp	r0, #0
   13554:	bne	13574 <__assert_fail@plt+0x25e0>
   13558:	ldr	r0, [fp, #8]
   1355c:	cmp	r0, #2
   13560:	bne	13574 <__assert_fail@plt+0x25e0>
   13564:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13568:	tst	r0, #1
   1356c:	beq	13574 <__assert_fail@plt+0x25e0>
   13570:	b	136cc <__assert_fail@plt+0x2738>
   13574:	ldr	r0, [fp, #8]
   13578:	cmp	r0, #2
   1357c:	bne	1361c <__assert_fail@plt+0x2688>
   13580:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13584:	tst	r0, #1
   13588:	bne	1361c <__assert_fail@plt+0x2688>
   1358c:	ldrb	r0, [fp, #-61]	; 0xffffffc3
   13590:	tst	r0, #1
   13594:	beq	1361c <__assert_fail@plt+0x2688>
   13598:	ldrb	r0, [fp, #-62]	; 0xffffffc2
   1359c:	tst	r0, #1
   135a0:	beq	135e8 <__assert_fail@plt+0x2654>
   135a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   135a8:	ldr	r1, [fp, #-48]	; 0xffffffd0
   135ac:	ldr	r2, [fp, #-32]	; 0xffffffe0
   135b0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   135b4:	ldr	ip, [fp, #12]
   135b8:	ldr	lr, [fp, #16]
   135bc:	ldr	r4, [fp, #20]
   135c0:	ldr	r5, [fp, #24]
   135c4:	movw	r6, #5
   135c8:	str	r6, [sp]
   135cc:	str	ip, [sp, #4]
   135d0:	str	lr, [sp, #8]
   135d4:	str	r4, [sp, #12]
   135d8:	str	r5, [sp, #16]
   135dc:	bl	1200c <__assert_fail@plt+0x1078>
   135e0:	str	r0, [fp, #-20]	; 0xffffffec
   135e4:	b	13734 <__assert_fail@plt+0x27a0>
   135e8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   135ec:	cmp	r0, #0
   135f0:	bne	13614 <__assert_fail@plt+0x2680>
   135f4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   135f8:	cmp	r0, #0
   135fc:	beq	13614 <__assert_fail@plt+0x2680>
   13600:	ldr	r0, [fp, #-48]	; 0xffffffd0
   13604:	str	r0, [fp, #-28]	; 0xffffffe4
   13608:	movw	r0, #0
   1360c:	str	r0, [fp, #-44]	; 0xffffffd4
   13610:	b	120b4 <__assert_fail@plt+0x1120>
   13614:	b	13618 <__assert_fail@plt+0x2684>
   13618:	b	1361c <__assert_fail@plt+0x2688>
   1361c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   13620:	movw	r1, #0
   13624:	cmp	r0, r1
   13628:	beq	1369c <__assert_fail@plt+0x2708>
   1362c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13630:	tst	r0, #1
   13634:	bne	1369c <__assert_fail@plt+0x2708>
   13638:	b	1363c <__assert_fail@plt+0x26a8>
   1363c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   13640:	ldrsb	r0, [r0]
   13644:	cmp	r0, #0
   13648:	beq	13698 <__assert_fail@plt+0x2704>
   1364c:	b	13650 <__assert_fail@plt+0x26bc>
   13650:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13654:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13658:	cmp	r0, r1
   1365c:	bcs	13678 <__assert_fail@plt+0x26e4>
   13660:	ldr	r0, [fp, #-52]	; 0xffffffcc
   13664:	ldrb	r0, [r0]
   13668:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1366c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   13670:	add	r1, r1, r2
   13674:	strb	r0, [r1]
   13678:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1367c:	add	r0, r0, #1
   13680:	str	r0, [fp, #-44]	; 0xffffffd4
   13684:	b	13688 <__assert_fail@plt+0x26f4>
   13688:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1368c:	add	r0, r0, #1
   13690:	str	r0, [fp, #-52]	; 0xffffffcc
   13694:	b	1363c <__assert_fail@plt+0x26a8>
   13698:	b	1369c <__assert_fail@plt+0x2708>
   1369c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   136a0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   136a4:	cmp	r0, r1
   136a8:	bcs	136c0 <__assert_fail@plt+0x272c>
   136ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   136b0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   136b4:	add	r0, r0, r1
   136b8:	movw	r1, #0
   136bc:	strb	r1, [r0]
   136c0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   136c4:	str	r0, [fp, #-20]	; 0xffffffec
   136c8:	b	13734 <__assert_fail@plt+0x27a0>
   136cc:	ldr	r0, [fp, #8]
   136d0:	cmp	r0, #2
   136d4:	bne	136ec <__assert_fail@plt+0x2758>
   136d8:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   136dc:	tst	r0, #1
   136e0:	beq	136ec <__assert_fail@plt+0x2758>
   136e4:	movw	r0, #4
   136e8:	str	r0, [fp, #8]
   136ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   136f0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   136f4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   136f8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   136fc:	ldr	ip, [fp, #8]
   13700:	ldr	lr, [fp, #12]
   13704:	mvn	r4, #2
   13708:	and	lr, lr, r4
   1370c:	ldr	r4, [fp, #20]
   13710:	ldr	r5, [fp, #24]
   13714:	str	ip, [sp]
   13718:	str	lr, [sp, #4]
   1371c:	movw	ip, #0
   13720:	str	ip, [sp, #8]
   13724:	str	r4, [sp, #12]
   13728:	str	r5, [sp, #16]
   1372c:	bl	1200c <__assert_fail@plt+0x1078>
   13730:	str	r0, [fp, #-20]	; 0xffffffec
   13734:	ldr	r0, [fp, #-20]	; 0xffffffec
   13738:	sub	sp, fp, #16
   1373c:	pop	{r4, r5, r6, sl, fp, pc}
   13740:	push	{fp, lr}
   13744:	mov	fp, sp
   13748:	sub	sp, sp, #16
   1374c:	str	r0, [fp, #-4]
   13750:	str	r1, [sp, #8]
   13754:	str	r2, [sp, #4]
   13758:	ldr	r0, [fp, #-4]
   1375c:	ldr	r1, [sp, #8]
   13760:	ldr	r3, [sp, #4]
   13764:	movw	r2, #0
   13768:	bl	13774 <__assert_fail@plt+0x27e0>
   1376c:	mov	sp, fp
   13770:	pop	{fp, pc}
   13774:	push	{r4, r5, r6, sl, fp, lr}
   13778:	add	fp, sp, #16
   1377c:	sub	sp, sp, #80	; 0x50
   13780:	str	r0, [fp, #-20]	; 0xffffffec
   13784:	str	r1, [fp, #-24]	; 0xffffffe8
   13788:	str	r2, [fp, #-28]	; 0xffffffe4
   1378c:	str	r3, [fp, #-32]	; 0xffffffe0
   13790:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13794:	movw	r1, #0
   13798:	cmp	r0, r1
   1379c:	beq	137ac <__assert_fail@plt+0x2818>
   137a0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   137a4:	str	r0, [sp, #40]	; 0x28
   137a8:	b	137bc <__assert_fail@plt+0x2828>
   137ac:	movw	r0, #53588	; 0xd154
   137b0:	movt	r0, #2
   137b4:	str	r0, [sp, #40]	; 0x28
   137b8:	b	137bc <__assert_fail@plt+0x2828>
   137bc:	ldr	r0, [sp, #40]	; 0x28
   137c0:	str	r0, [fp, #-36]	; 0xffffffdc
   137c4:	bl	10ef8 <__errno_location@plt>
   137c8:	ldr	r0, [r0]
   137cc:	str	r0, [fp, #-40]	; 0xffffffd8
   137d0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   137d4:	ldr	r0, [r0, #4]
   137d8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   137dc:	movw	r2, #0
   137e0:	cmp	r1, r2
   137e4:	movw	r1, #0
   137e8:	movne	r1, #1
   137ec:	tst	r1, #1
   137f0:	mov	r1, r2
   137f4:	moveq	r1, #1
   137f8:	orr	r0, r0, r1
   137fc:	str	r0, [fp, #-44]	; 0xffffffd4
   13800:	ldr	r0, [fp, #-20]	; 0xffffffec
   13804:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13808:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1380c:	ldr	r1, [r1]
   13810:	ldr	ip, [fp, #-44]	; 0xffffffd4
   13814:	ldr	lr, [fp, #-36]	; 0xffffffdc
   13818:	add	lr, lr, #8
   1381c:	ldr	r4, [fp, #-36]	; 0xffffffdc
   13820:	ldr	r4, [r4, #40]	; 0x28
   13824:	ldr	r5, [fp, #-36]	; 0xffffffdc
   13828:	ldr	r5, [r5, #44]	; 0x2c
   1382c:	str	r0, [sp, #36]	; 0x24
   13830:	mov	r0, r2
   13834:	str	r1, [sp, #32]
   13838:	mov	r1, r2
   1383c:	ldr	r2, [sp, #36]	; 0x24
   13840:	ldr	r6, [sp, #32]
   13844:	str	r6, [sp]
   13848:	str	ip, [sp, #4]
   1384c:	str	lr, [sp, #8]
   13850:	str	r4, [sp, #12]
   13854:	str	r5, [sp, #16]
   13858:	bl	1200c <__assert_fail@plt+0x1078>
   1385c:	add	r0, r0, #1
   13860:	str	r0, [sp, #48]	; 0x30
   13864:	ldr	r0, [sp, #48]	; 0x30
   13868:	bl	14c58 <__assert_fail@plt+0x3cc4>
   1386c:	str	r0, [sp, #44]	; 0x2c
   13870:	ldr	r0, [sp, #44]	; 0x2c
   13874:	ldr	r1, [sp, #48]	; 0x30
   13878:	ldr	r2, [fp, #-20]	; 0xffffffec
   1387c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13880:	ldr	ip, [fp, #-36]	; 0xffffffdc
   13884:	ldr	ip, [ip]
   13888:	ldr	lr, [fp, #-44]	; 0xffffffd4
   1388c:	ldr	r4, [fp, #-36]	; 0xffffffdc
   13890:	add	r4, r4, #8
   13894:	ldr	r5, [fp, #-36]	; 0xffffffdc
   13898:	ldr	r5, [r5, #40]	; 0x28
   1389c:	ldr	r6, [fp, #-36]	; 0xffffffdc
   138a0:	ldr	r6, [r6, #44]	; 0x2c
   138a4:	str	ip, [sp]
   138a8:	str	lr, [sp, #4]
   138ac:	str	r4, [sp, #8]
   138b0:	str	r5, [sp, #12]
   138b4:	str	r6, [sp, #16]
   138b8:	bl	1200c <__assert_fail@plt+0x1078>
   138bc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   138c0:	str	r0, [sp, #28]
   138c4:	str	r1, [sp, #24]
   138c8:	bl	10ef8 <__errno_location@plt>
   138cc:	ldr	r1, [sp, #24]
   138d0:	str	r1, [r0]
   138d4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   138d8:	movw	r2, #0
   138dc:	cmp	r0, r2
   138e0:	beq	138f4 <__assert_fail@plt+0x2960>
   138e4:	ldr	r0, [sp, #48]	; 0x30
   138e8:	sub	r0, r0, #1
   138ec:	ldr	r1, [fp, #-28]	; 0xffffffe4
   138f0:	str	r0, [r1]
   138f4:	ldr	r0, [sp, #44]	; 0x2c
   138f8:	sub	sp, fp, #16
   138fc:	pop	{r4, r5, r6, sl, fp, pc}
   13900:	push	{fp, lr}
   13904:	mov	fp, sp
   13908:	sub	sp, sp, #8
   1390c:	movw	r0, #53476	; 0xd0e4
   13910:	movt	r0, #2
   13914:	ldr	r0, [r0]
   13918:	str	r0, [sp, #4]
   1391c:	movw	r0, #1
   13920:	str	r0, [sp]
   13924:	ldr	r0, [sp]
   13928:	movw	r1, #53480	; 0xd0e8
   1392c:	movt	r1, #2
   13930:	ldr	r1, [r1]
   13934:	cmp	r0, r1
   13938:	bge	13960 <__assert_fail@plt+0x29cc>
   1393c:	ldr	r0, [sp, #4]
   13940:	ldr	r1, [sp]
   13944:	add	r0, r0, r1, lsl #3
   13948:	ldr	r0, [r0, #4]
   1394c:	bl	19ab0 <__assert_fail@plt+0x8b1c>
   13950:	ldr	r0, [sp]
   13954:	add	r0, r0, #1
   13958:	str	r0, [sp]
   1395c:	b	13924 <__assert_fail@plt+0x2990>
   13960:	ldr	r0, [sp, #4]
   13964:	ldr	r0, [r0, #4]
   13968:	movw	r1, #53636	; 0xd184
   1396c:	movt	r1, #2
   13970:	cmp	r0, r1
   13974:	beq	139a0 <__assert_fail@plt+0x2a0c>
   13978:	ldr	r0, [sp, #4]
   1397c:	ldr	r0, [r0, #4]
   13980:	bl	19ab0 <__assert_fail@plt+0x8b1c>
   13984:	movw	r0, #256	; 0x100
   13988:	movw	r1, #53484	; 0xd0ec
   1398c:	movt	r1, #2
   13990:	str	r0, [r1]
   13994:	movw	r0, #53636	; 0xd184
   13998:	movt	r0, #2
   1399c:	str	r0, [r1, #4]
   139a0:	ldr	r0, [sp, #4]
   139a4:	movw	r1, #53484	; 0xd0ec
   139a8:	movt	r1, #2
   139ac:	cmp	r0, r1
   139b0:	beq	139d0 <__assert_fail@plt+0x2a3c>
   139b4:	ldr	r0, [sp, #4]
   139b8:	bl	19ab0 <__assert_fail@plt+0x8b1c>
   139bc:	movw	r0, #53476	; 0xd0e4
   139c0:	movt	r0, #2
   139c4:	movw	r1, #53484	; 0xd0ec
   139c8:	movt	r1, #2
   139cc:	str	r1, [r0]
   139d0:	movw	r0, #53480	; 0xd0e8
   139d4:	movt	r0, #2
   139d8:	movw	r1, #1
   139dc:	str	r1, [r0]
   139e0:	mov	sp, fp
   139e4:	pop	{fp, pc}
   139e8:	push	{fp, lr}
   139ec:	mov	fp, sp
   139f0:	sub	sp, sp, #8
   139f4:	str	r0, [sp, #4]
   139f8:	str	r1, [sp]
   139fc:	ldr	r0, [sp, #4]
   13a00:	ldr	r1, [sp]
   13a04:	mvn	r2, #0
   13a08:	movw	r3, #53588	; 0xd154
   13a0c:	movt	r3, #2
   13a10:	bl	13a1c <__assert_fail@plt+0x2a88>
   13a14:	mov	sp, fp
   13a18:	pop	{fp, pc}
   13a1c:	push	{r4, r5, r6, sl, fp, lr}
   13a20:	add	fp, sp, #16
   13a24:	sub	sp, sp, #80	; 0x50
   13a28:	str	r0, [fp, #-20]	; 0xffffffec
   13a2c:	str	r1, [fp, #-24]	; 0xffffffe8
   13a30:	str	r2, [fp, #-28]	; 0xffffffe4
   13a34:	str	r3, [fp, #-32]	; 0xffffffe0
   13a38:	bl	10ef8 <__errno_location@plt>
   13a3c:	ldr	r1, [pc, #672]	; 13ce4 <__assert_fail@plt+0x2d50>
   13a40:	ldr	r0, [r0]
   13a44:	str	r0, [fp, #-36]	; 0xffffffdc
   13a48:	movw	r0, #53476	; 0xd0e4
   13a4c:	movt	r0, #2
   13a50:	ldr	r0, [r0]
   13a54:	str	r0, [fp, #-40]	; 0xffffffd8
   13a58:	str	r1, [fp, #-44]	; 0xffffffd4
   13a5c:	ldr	r0, [fp, #-20]	; 0xffffffec
   13a60:	movw	r1, #0
   13a64:	cmp	r1, r0
   13a68:	bgt	13a7c <__assert_fail@plt+0x2ae8>
   13a6c:	ldr	r0, [fp, #-20]	; 0xffffffec
   13a70:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13a74:	cmp	r0, r1
   13a78:	blt	13a80 <__assert_fail@plt+0x2aec>
   13a7c:	bl	10f88 <abort@plt>
   13a80:	movw	r0, #53480	; 0xd0e8
   13a84:	movt	r0, #2
   13a88:	ldr	r0, [r0]
   13a8c:	ldr	r1, [fp, #-20]	; 0xffffffec
   13a90:	cmp	r0, r1
   13a94:	bgt	13b8c <__assert_fail@plt+0x2bf8>
   13a98:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13a9c:	movw	r1, #53484	; 0xd0ec
   13aa0:	movt	r1, #2
   13aa4:	cmp	r0, r1
   13aa8:	movw	r0, #0
   13aac:	moveq	r0, #1
   13ab0:	and	r0, r0, #1
   13ab4:	strb	r0, [fp, #-45]	; 0xffffffd3
   13ab8:	movw	r0, #53480	; 0xd0e8
   13abc:	movt	r0, #2
   13ac0:	ldr	r0, [r0]
   13ac4:	str	r0, [sp, #44]	; 0x2c
   13ac8:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   13acc:	tst	r0, #1
   13ad0:	beq	13ae0 <__assert_fail@plt+0x2b4c>
   13ad4:	movw	r0, #0
   13ad8:	str	r0, [sp, #24]
   13adc:	b	13ae8 <__assert_fail@plt+0x2b54>
   13ae0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13ae4:	str	r0, [sp, #24]
   13ae8:	ldr	r0, [sp, #24]
   13aec:	ldr	r1, [fp, #-20]	; 0xffffffec
   13af0:	movw	r2, #53480	; 0xd0e8
   13af4:	movt	r2, #2
   13af8:	ldr	r2, [r2]
   13afc:	sub	r1, r1, r2
   13b00:	add	r2, r1, #1
   13b04:	ldr	r3, [fp, #-44]	; 0xffffffd4
   13b08:	add	r1, sp, #44	; 0x2c
   13b0c:	movw	ip, #8
   13b10:	str	ip, [sp]
   13b14:	bl	14e94 <__assert_fail@plt+0x3f00>
   13b18:	str	r0, [fp, #-40]	; 0xffffffd8
   13b1c:	movw	r1, #53476	; 0xd0e4
   13b20:	movt	r1, #2
   13b24:	str	r0, [r1]
   13b28:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   13b2c:	tst	r0, #1
   13b30:	beq	13b50 <__assert_fail@plt+0x2bbc>
   13b34:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13b38:	movw	r1, #53484	; 0xd0ec
   13b3c:	movt	r1, #2
   13b40:	ldr	r2, [r1]
   13b44:	str	r2, [r0]
   13b48:	ldr	r1, [r1, #4]
   13b4c:	str	r1, [r0, #4]
   13b50:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13b54:	movw	r1, #53480	; 0xd0e8
   13b58:	movt	r1, #2
   13b5c:	ldr	r1, [r1]
   13b60:	add	r0, r0, r1, lsl #3
   13b64:	ldr	r2, [sp, #44]	; 0x2c
   13b68:	sub	r1, r2, r1
   13b6c:	lsl	r2, r1, #3
   13b70:	movw	r1, #0
   13b74:	and	r1, r1, #255	; 0xff
   13b78:	bl	10f10 <memset@plt>
   13b7c:	ldr	r0, [sp, #44]	; 0x2c
   13b80:	movw	r1, #53480	; 0xd0e8
   13b84:	movt	r1, #2
   13b88:	str	r0, [r1]
   13b8c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13b90:	ldr	r1, [fp, #-20]	; 0xffffffec
   13b94:	ldr	r0, [r0, r1, lsl #3]
   13b98:	str	r0, [sp, #40]	; 0x28
   13b9c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13ba0:	ldr	r1, [fp, #-20]	; 0xffffffec
   13ba4:	add	r0, r0, r1, lsl #3
   13ba8:	ldr	r0, [r0, #4]
   13bac:	str	r0, [sp, #36]	; 0x24
   13bb0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13bb4:	ldr	r0, [r0, #4]
   13bb8:	orr	r0, r0, #1
   13bbc:	str	r0, [sp, #32]
   13bc0:	ldr	r0, [sp, #36]	; 0x24
   13bc4:	ldr	r1, [sp, #40]	; 0x28
   13bc8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13bcc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13bd0:	ldr	ip, [fp, #-32]	; 0xffffffe0
   13bd4:	ldr	ip, [ip]
   13bd8:	ldr	lr, [sp, #32]
   13bdc:	ldr	r4, [fp, #-32]	; 0xffffffe0
   13be0:	add	r4, r4, #8
   13be4:	ldr	r5, [fp, #-32]	; 0xffffffe0
   13be8:	ldr	r5, [r5, #40]	; 0x28
   13bec:	ldr	r6, [fp, #-32]	; 0xffffffe0
   13bf0:	ldr	r6, [r6, #44]	; 0x2c
   13bf4:	str	ip, [sp]
   13bf8:	str	lr, [sp, #4]
   13bfc:	str	r4, [sp, #8]
   13c00:	str	r5, [sp, #12]
   13c04:	str	r6, [sp, #16]
   13c08:	bl	1200c <__assert_fail@plt+0x1078>
   13c0c:	str	r0, [sp, #28]
   13c10:	ldr	r0, [sp, #40]	; 0x28
   13c14:	ldr	r1, [sp, #28]
   13c18:	cmp	r0, r1
   13c1c:	bhi	13cc4 <__assert_fail@plt+0x2d30>
   13c20:	ldr	r0, [sp, #28]
   13c24:	add	r0, r0, #1
   13c28:	str	r0, [sp, #40]	; 0x28
   13c2c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13c30:	ldr	r2, [fp, #-20]	; 0xffffffec
   13c34:	add	r1, r1, r2, lsl #3
   13c38:	str	r0, [r1]
   13c3c:	ldr	r0, [sp, #36]	; 0x24
   13c40:	movw	r1, #53636	; 0xd184
   13c44:	movt	r1, #2
   13c48:	cmp	r0, r1
   13c4c:	beq	13c58 <__assert_fail@plt+0x2cc4>
   13c50:	ldr	r0, [sp, #36]	; 0x24
   13c54:	bl	19ab0 <__assert_fail@plt+0x8b1c>
   13c58:	ldr	r0, [sp, #40]	; 0x28
   13c5c:	bl	14c58 <__assert_fail@plt+0x3cc4>
   13c60:	mov	r1, r0
   13c64:	str	r0, [sp, #36]	; 0x24
   13c68:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13c6c:	ldr	r2, [fp, #-20]	; 0xffffffec
   13c70:	add	r0, r0, r2, lsl #3
   13c74:	str	r1, [r0, #4]
   13c78:	ldr	r0, [sp, #36]	; 0x24
   13c7c:	ldr	r1, [sp, #40]	; 0x28
   13c80:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13c84:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13c88:	ldr	ip, [fp, #-32]	; 0xffffffe0
   13c8c:	ldr	ip, [ip]
   13c90:	ldr	lr, [sp, #32]
   13c94:	ldr	r4, [fp, #-32]	; 0xffffffe0
   13c98:	add	r4, r4, #8
   13c9c:	ldr	r5, [fp, #-32]	; 0xffffffe0
   13ca0:	ldr	r5, [r5, #40]	; 0x28
   13ca4:	ldr	r6, [fp, #-32]	; 0xffffffe0
   13ca8:	ldr	r6, [r6, #44]	; 0x2c
   13cac:	str	ip, [sp]
   13cb0:	str	lr, [sp, #4]
   13cb4:	str	r4, [sp, #8]
   13cb8:	str	r5, [sp, #12]
   13cbc:	str	r6, [sp, #16]
   13cc0:	bl	1200c <__assert_fail@plt+0x1078>
   13cc4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13cc8:	str	r0, [sp, #20]
   13ccc:	bl	10ef8 <__errno_location@plt>
   13cd0:	ldr	r1, [sp, #20]
   13cd4:	str	r1, [r0]
   13cd8:	ldr	r0, [sp, #36]	; 0x24
   13cdc:	sub	sp, fp, #16
   13ce0:	pop	{r4, r5, r6, sl, fp, pc}
   13ce4:	svcvc	0x00ffffff
   13ce8:	push	{fp, lr}
   13cec:	mov	fp, sp
   13cf0:	sub	sp, sp, #16
   13cf4:	str	r0, [fp, #-4]
   13cf8:	str	r1, [sp, #8]
   13cfc:	str	r2, [sp, #4]
   13d00:	ldr	r0, [fp, #-4]
   13d04:	ldr	r1, [sp, #8]
   13d08:	ldr	r2, [sp, #4]
   13d0c:	movw	r3, #53588	; 0xd154
   13d10:	movt	r3, #2
   13d14:	bl	13a1c <__assert_fail@plt+0x2a88>
   13d18:	mov	sp, fp
   13d1c:	pop	{fp, pc}
   13d20:	push	{fp, lr}
   13d24:	mov	fp, sp
   13d28:	sub	sp, sp, #8
   13d2c:	str	r0, [sp, #4]
   13d30:	ldr	r1, [sp, #4]
   13d34:	movw	r0, #0
   13d38:	bl	139e8 <__assert_fail@plt+0x2a54>
   13d3c:	mov	sp, fp
   13d40:	pop	{fp, pc}
   13d44:	push	{fp, lr}
   13d48:	mov	fp, sp
   13d4c:	sub	sp, sp, #8
   13d50:	str	r0, [sp, #4]
   13d54:	str	r1, [sp]
   13d58:	ldr	r1, [sp, #4]
   13d5c:	ldr	r2, [sp]
   13d60:	movw	r0, #0
   13d64:	bl	13ce8 <__assert_fail@plt+0x2d54>
   13d68:	mov	sp, fp
   13d6c:	pop	{fp, pc}
   13d70:	push	{fp, lr}
   13d74:	mov	fp, sp
   13d78:	sub	sp, sp, #64	; 0x40
   13d7c:	str	r0, [fp, #-4]
   13d80:	str	r1, [fp, #-8]
   13d84:	str	r2, [fp, #-12]
   13d88:	ldr	r1, [fp, #-8]
   13d8c:	add	r0, sp, #4
   13d90:	bl	13db0 <__assert_fail@plt+0x2e1c>
   13d94:	ldr	r0, [fp, #-4]
   13d98:	ldr	r1, [fp, #-12]
   13d9c:	mvn	r2, #0
   13da0:	add	r3, sp, #4
   13da4:	bl	13a1c <__assert_fail@plt+0x2a88>
   13da8:	mov	sp, fp
   13dac:	pop	{fp, pc}
   13db0:	push	{fp, lr}
   13db4:	mov	fp, sp
   13db8:	sub	sp, sp, #8
   13dbc:	str	r1, [sp, #4]
   13dc0:	mov	r1, r0
   13dc4:	str	r0, [sp]
   13dc8:	mov	r0, r1
   13dcc:	movw	r1, #0
   13dd0:	and	r1, r1, #255	; 0xff
   13dd4:	movw	r2, #48	; 0x30
   13dd8:	bl	10f10 <memset@plt>
   13ddc:	ldr	r0, [sp, #4]
   13de0:	cmp	r0, #10
   13de4:	bne	13dec <__assert_fail@plt+0x2e58>
   13de8:	bl	10f88 <abort@plt>
   13dec:	ldr	r0, [sp, #4]
   13df0:	ldr	r1, [sp]
   13df4:	str	r0, [r1]
   13df8:	mov	sp, fp
   13dfc:	pop	{fp, pc}
   13e00:	push	{fp, lr}
   13e04:	mov	fp, sp
   13e08:	sub	sp, sp, #64	; 0x40
   13e0c:	str	r0, [fp, #-4]
   13e10:	str	r1, [fp, #-8]
   13e14:	str	r2, [fp, #-12]
   13e18:	str	r3, [fp, #-16]
   13e1c:	ldr	r1, [fp, #-8]
   13e20:	mov	r0, sp
   13e24:	bl	13db0 <__assert_fail@plt+0x2e1c>
   13e28:	ldr	r0, [fp, #-4]
   13e2c:	ldr	r1, [fp, #-12]
   13e30:	ldr	r2, [fp, #-16]
   13e34:	mov	r3, sp
   13e38:	bl	13a1c <__assert_fail@plt+0x2a88>
   13e3c:	mov	sp, fp
   13e40:	pop	{fp, pc}
   13e44:	push	{fp, lr}
   13e48:	mov	fp, sp
   13e4c:	sub	sp, sp, #8
   13e50:	str	r0, [sp, #4]
   13e54:	str	r1, [sp]
   13e58:	ldr	r1, [sp, #4]
   13e5c:	ldr	r2, [sp]
   13e60:	movw	r0, #0
   13e64:	bl	13d70 <__assert_fail@plt+0x2ddc>
   13e68:	mov	sp, fp
   13e6c:	pop	{fp, pc}
   13e70:	push	{fp, lr}
   13e74:	mov	fp, sp
   13e78:	sub	sp, sp, #16
   13e7c:	str	r0, [fp, #-4]
   13e80:	str	r1, [sp, #8]
   13e84:	str	r2, [sp, #4]
   13e88:	ldr	r1, [fp, #-4]
   13e8c:	ldr	r2, [sp, #8]
   13e90:	ldr	r3, [sp, #4]
   13e94:	movw	r0, #0
   13e98:	bl	13e00 <__assert_fail@plt+0x2e6c>
   13e9c:	mov	sp, fp
   13ea0:	pop	{fp, pc}
   13ea4:	push	{fp, lr}
   13ea8:	mov	fp, sp
   13eac:	sub	sp, sp, #72	; 0x48
   13eb0:	movw	r3, #53588	; 0xd154
   13eb4:	movt	r3, #2
   13eb8:	str	r0, [fp, #-4]
   13ebc:	str	r1, [fp, #-8]
   13ec0:	strb	r2, [fp, #-9]
   13ec4:	add	r0, sp, #12
   13ec8:	mov	r1, r0
   13ecc:	str	r0, [sp, #8]
   13ed0:	mov	r0, r1
   13ed4:	mov	r1, r3
   13ed8:	movw	r2, #48	; 0x30
   13edc:	bl	10dc0 <memcpy@plt>
   13ee0:	ldr	r0, [sp, #8]
   13ee4:	ldrb	r1, [fp, #-9]
   13ee8:	movw	r2, #1
   13eec:	bl	11db4 <__assert_fail@plt+0xe20>
   13ef0:	ldr	r1, [fp, #-4]
   13ef4:	ldr	r2, [fp, #-8]
   13ef8:	movw	r3, #0
   13efc:	str	r0, [sp, #4]
   13f00:	mov	r0, r3
   13f04:	add	r3, sp, #12
   13f08:	bl	13a1c <__assert_fail@plt+0x2a88>
   13f0c:	mov	sp, fp
   13f10:	pop	{fp, pc}
   13f14:	push	{fp, lr}
   13f18:	mov	fp, sp
   13f1c:	sub	sp, sp, #8
   13f20:	str	r0, [sp, #4]
   13f24:	strb	r1, [sp, #3]
   13f28:	ldr	r0, [sp, #4]
   13f2c:	mvn	r1, #0
   13f30:	ldrb	r2, [sp, #3]
   13f34:	bl	13ea4 <__assert_fail@plt+0x2f10>
   13f38:	mov	sp, fp
   13f3c:	pop	{fp, pc}
   13f40:	push	{fp, lr}
   13f44:	mov	fp, sp
   13f48:	sub	sp, sp, #8
   13f4c:	str	r0, [sp, #4]
   13f50:	ldr	r0, [sp, #4]
   13f54:	movw	r1, #58	; 0x3a
   13f58:	and	r1, r1, #255	; 0xff
   13f5c:	bl	13f14 <__assert_fail@plt+0x2f80>
   13f60:	mov	sp, fp
   13f64:	pop	{fp, pc}
   13f68:	push	{fp, lr}
   13f6c:	mov	fp, sp
   13f70:	sub	sp, sp, #8
   13f74:	str	r0, [sp, #4]
   13f78:	str	r1, [sp]
   13f7c:	ldr	r0, [sp, #4]
   13f80:	ldr	r1, [sp]
   13f84:	movw	r2, #58	; 0x3a
   13f88:	and	r2, r2, #255	; 0xff
   13f8c:	bl	13ea4 <__assert_fail@plt+0x2f10>
   13f90:	mov	sp, fp
   13f94:	pop	{fp, pc}
   13f98:	push	{fp, lr}
   13f9c:	mov	fp, sp
   13fa0:	sub	sp, sp, #120	; 0x78
   13fa4:	str	r0, [fp, #-4]
   13fa8:	str	r1, [fp, #-8]
   13fac:	str	r2, [fp, #-12]
   13fb0:	ldr	r1, [fp, #-8]
   13fb4:	add	r0, sp, #12
   13fb8:	bl	13db0 <__assert_fail@plt+0x2e1c>
   13fbc:	add	r0, sp, #60	; 0x3c
   13fc0:	mov	r1, r0
   13fc4:	add	r2, sp, #12
   13fc8:	str	r0, [sp, #8]
   13fcc:	mov	r0, r1
   13fd0:	mov	r1, r2
   13fd4:	movw	r2, #48	; 0x30
   13fd8:	bl	10dc0 <memcpy@plt>
   13fdc:	ldr	r0, [sp, #8]
   13fe0:	movw	r1, #58	; 0x3a
   13fe4:	and	r1, r1, #255	; 0xff
   13fe8:	movw	r2, #1
   13fec:	bl	11db4 <__assert_fail@plt+0xe20>
   13ff0:	ldr	r1, [fp, #-4]
   13ff4:	ldr	r2, [fp, #-12]
   13ff8:	str	r0, [sp, #4]
   13ffc:	mov	r0, r1
   14000:	mov	r1, r2
   14004:	mvn	r2, #0
   14008:	add	r3, sp, #60	; 0x3c
   1400c:	bl	13a1c <__assert_fail@plt+0x2a88>
   14010:	mov	sp, fp
   14014:	pop	{fp, pc}
   14018:	push	{fp, lr}
   1401c:	mov	fp, sp
   14020:	sub	sp, sp, #24
   14024:	str	r0, [fp, #-4]
   14028:	str	r1, [fp, #-8]
   1402c:	str	r2, [sp, #12]
   14030:	str	r3, [sp, #8]
   14034:	ldr	r0, [fp, #-4]
   14038:	ldr	r1, [fp, #-8]
   1403c:	ldr	r2, [sp, #12]
   14040:	ldr	r3, [sp, #8]
   14044:	mvn	ip, #0
   14048:	str	ip, [sp]
   1404c:	bl	14058 <__assert_fail@plt+0x30c4>
   14050:	mov	sp, fp
   14054:	pop	{fp, pc}
   14058:	push	{fp, lr}
   1405c:	mov	fp, sp
   14060:	sub	sp, sp, #72	; 0x48
   14064:	ldr	ip, [fp, #8]
   14068:	movw	lr, #53588	; 0xd154
   1406c:	movt	lr, #2
   14070:	str	r0, [fp, #-4]
   14074:	str	r1, [fp, #-8]
   14078:	str	r2, [fp, #-12]
   1407c:	str	r3, [fp, #-16]
   14080:	add	r0, sp, #8
   14084:	mov	r1, r0
   14088:	str	r0, [sp, #4]
   1408c:	mov	r0, r1
   14090:	mov	r1, lr
   14094:	movw	r2, #48	; 0x30
   14098:	str	ip, [sp]
   1409c:	bl	10dc0 <memcpy@plt>
   140a0:	ldr	r1, [fp, #-8]
   140a4:	ldr	r2, [fp, #-12]
   140a8:	ldr	r0, [sp, #4]
   140ac:	bl	11eb4 <__assert_fail@plt+0xf20>
   140b0:	ldr	r0, [fp, #-4]
   140b4:	ldr	r1, [fp, #-16]
   140b8:	ldr	r2, [fp, #8]
   140bc:	add	r3, sp, #8
   140c0:	bl	13a1c <__assert_fail@plt+0x2a88>
   140c4:	mov	sp, fp
   140c8:	pop	{fp, pc}
   140cc:	push	{fp, lr}
   140d0:	mov	fp, sp
   140d4:	sub	sp, sp, #16
   140d8:	str	r0, [fp, #-4]
   140dc:	str	r1, [sp, #8]
   140e0:	str	r2, [sp, #4]
   140e4:	ldr	r1, [fp, #-4]
   140e8:	ldr	r2, [sp, #8]
   140ec:	ldr	r3, [sp, #4]
   140f0:	movw	r0, #0
   140f4:	bl	14018 <__assert_fail@plt+0x3084>
   140f8:	mov	sp, fp
   140fc:	pop	{fp, pc}
   14100:	push	{fp, lr}
   14104:	mov	fp, sp
   14108:	sub	sp, sp, #24
   1410c:	str	r0, [fp, #-4]
   14110:	str	r1, [fp, #-8]
   14114:	str	r2, [sp, #12]
   14118:	str	r3, [sp, #8]
   1411c:	ldr	r1, [fp, #-4]
   14120:	ldr	r2, [fp, #-8]
   14124:	ldr	r3, [sp, #12]
   14128:	ldr	r0, [sp, #8]
   1412c:	movw	ip, #0
   14130:	str	r0, [sp, #4]
   14134:	mov	r0, ip
   14138:	ldr	ip, [sp, #4]
   1413c:	str	ip, [sp]
   14140:	bl	14058 <__assert_fail@plt+0x30c4>
   14144:	mov	sp, fp
   14148:	pop	{fp, pc}
   1414c:	push	{fp, lr}
   14150:	mov	fp, sp
   14154:	sub	sp, sp, #16
   14158:	str	r0, [fp, #-4]
   1415c:	str	r1, [sp, #8]
   14160:	str	r2, [sp, #4]
   14164:	ldr	r0, [fp, #-4]
   14168:	ldr	r1, [sp, #8]
   1416c:	ldr	r2, [sp, #4]
   14170:	movw	r3, #53492	; 0xd0f4
   14174:	movt	r3, #2
   14178:	bl	13a1c <__assert_fail@plt+0x2a88>
   1417c:	mov	sp, fp
   14180:	pop	{fp, pc}
   14184:	push	{fp, lr}
   14188:	mov	fp, sp
   1418c:	sub	sp, sp, #8
   14190:	str	r0, [sp, #4]
   14194:	str	r1, [sp]
   14198:	ldr	r1, [sp, #4]
   1419c:	ldr	r2, [sp]
   141a0:	movw	r0, #0
   141a4:	bl	1414c <__assert_fail@plt+0x31b8>
   141a8:	mov	sp, fp
   141ac:	pop	{fp, pc}
   141b0:	push	{fp, lr}
   141b4:	mov	fp, sp
   141b8:	sub	sp, sp, #8
   141bc:	str	r0, [sp, #4]
   141c0:	str	r1, [sp]
   141c4:	ldr	r0, [sp, #4]
   141c8:	ldr	r1, [sp]
   141cc:	mvn	r2, #0
   141d0:	bl	1414c <__assert_fail@plt+0x31b8>
   141d4:	mov	sp, fp
   141d8:	pop	{fp, pc}
   141dc:	push	{fp, lr}
   141e0:	mov	fp, sp
   141e4:	sub	sp, sp, #8
   141e8:	str	r0, [sp, #4]
   141ec:	ldr	r1, [sp, #4]
   141f0:	movw	r0, #0
   141f4:	bl	141b0 <__assert_fail@plt+0x321c>
   141f8:	mov	sp, fp
   141fc:	pop	{fp, pc}
   14200:	push	{fp, lr}
   14204:	mov	fp, sp
   14208:	sub	sp, sp, #24
   1420c:	str	r0, [fp, #-8]
   14210:	str	r1, [sp, #12]
   14214:	ldr	r0, [fp, #-8]
   14218:	bl	10ec8 <gettext@plt>
   1421c:	str	r0, [sp, #8]
   14220:	ldr	r0, [sp, #8]
   14224:	ldr	r1, [fp, #-8]
   14228:	cmp	r0, r1
   1422c:	beq	1423c <__assert_fail@plt+0x32a8>
   14230:	ldr	r0, [sp, #8]
   14234:	str	r0, [fp, #-4]
   14238:	b	14308 <__assert_fail@plt+0x3374>
   1423c:	bl	19dcc <__assert_fail@plt+0x8e38>
   14240:	str	r0, [sp, #4]
   14244:	ldr	r0, [sp, #4]
   14248:	movw	r1, #49948	; 0xc31c
   1424c:	movt	r1, #1
   14250:	bl	19790 <__assert_fail@plt+0x87fc>
   14254:	cmp	r0, #0
   14258:	bne	14290 <__assert_fail@plt+0x32fc>
   1425c:	ldr	r0, [fp, #-8]
   14260:	ldrb	r0, [r0]
   14264:	cmp	r0, #96	; 0x60
   14268:	movw	r0, #0
   1426c:	moveq	r0, #1
   14270:	tst	r0, #1
   14274:	movw	r0, #49958	; 0xc326
   14278:	movt	r0, #1
   1427c:	movw	r1, #49954	; 0xc322
   14280:	movt	r1, #1
   14284:	movne	r0, r1
   14288:	str	r0, [fp, #-4]
   1428c:	b	14308 <__assert_fail@plt+0x3374>
   14290:	ldr	r0, [sp, #4]
   14294:	movw	r1, #49962	; 0xc32a
   14298:	movt	r1, #1
   1429c:	bl	19790 <__assert_fail@plt+0x87fc>
   142a0:	cmp	r0, #0
   142a4:	bne	142dc <__assert_fail@plt+0x3348>
   142a8:	ldr	r0, [fp, #-8]
   142ac:	ldrb	r0, [r0]
   142b0:	cmp	r0, #96	; 0x60
   142b4:	movw	r0, #0
   142b8:	moveq	r0, #1
   142bc:	tst	r0, #1
   142c0:	movw	r0, #49974	; 0xc336
   142c4:	movt	r0, #1
   142c8:	movw	r1, #49970	; 0xc332
   142cc:	movt	r1, #1
   142d0:	movne	r0, r1
   142d4:	str	r0, [fp, #-4]
   142d8:	b	14308 <__assert_fail@plt+0x3374>
   142dc:	ldr	r0, [sp, #12]
   142e0:	cmp	r0, #9
   142e4:	movw	r0, #0
   142e8:	moveq	r0, #1
   142ec:	tst	r0, #1
   142f0:	movw	r0, #49946	; 0xc31a
   142f4:	movt	r0, #1
   142f8:	movw	r1, #49942	; 0xc316
   142fc:	movt	r1, #1
   14300:	movne	r0, r1
   14304:	str	r0, [fp, #-4]
   14308:	ldr	r0, [fp, #-4]
   1430c:	mov	sp, fp
   14310:	pop	{fp, pc}
   14314:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14318:	add	fp, sp, #28
   1431c:	sub	sp, sp, #196	; 0xc4
   14320:	ldr	ip, [fp, #12]
   14324:	ldr	lr, [fp, #8]
   14328:	str	r0, [fp, #-32]	; 0xffffffe0
   1432c:	str	r1, [fp, #-36]	; 0xffffffdc
   14330:	str	r2, [fp, #-40]	; 0xffffffd8
   14334:	str	r3, [fp, #-44]	; 0xffffffd4
   14338:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1433c:	movw	r1, #0
   14340:	cmp	r0, r1
   14344:	beq	14378 <__assert_fail@plt+0x33e4>
   14348:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1434c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   14350:	ldr	r3, [fp, #-40]	; 0xffffffd8
   14354:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14358:	movw	ip, #50064	; 0xc390
   1435c:	movt	ip, #1
   14360:	str	r1, [fp, #-48]	; 0xffffffd0
   14364:	mov	r1, ip
   14368:	ldr	ip, [fp, #-48]	; 0xffffffd0
   1436c:	str	ip, [sp]
   14370:	bl	10eec <fprintf@plt>
   14374:	b	14390 <__assert_fail@plt+0x33fc>
   14378:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1437c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   14380:	ldr	r3, [fp, #-44]	; 0xffffffd4
   14384:	movw	r1, #50076	; 0xc39c
   14388:	movt	r1, #1
   1438c:	bl	10eec <fprintf@plt>
   14390:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14394:	movw	r1, #50083	; 0xc3a3
   14398:	movt	r1, #1
   1439c:	str	r0, [fp, #-52]	; 0xffffffcc
   143a0:	mov	r0, r1
   143a4:	bl	10ec8 <gettext@plt>
   143a8:	movw	r1, #50801	; 0xc671
   143ac:	movt	r1, #1
   143b0:	movw	r3, #2022	; 0x7e6
   143b4:	ldr	r2, [fp, #-52]	; 0xffffffcc
   143b8:	str	r0, [fp, #-56]	; 0xffffffc8
   143bc:	mov	r0, r2
   143c0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   143c4:	bl	10eec <fprintf@plt>
   143c8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   143cc:	movw	r2, #49629	; 0xc1dd
   143d0:	movt	r2, #1
   143d4:	str	r0, [fp, #-60]	; 0xffffffc4
   143d8:	mov	r0, r2
   143dc:	str	r2, [fp, #-64]	; 0xffffffc0
   143e0:	bl	10d60 <fputs_unlocked@plt>
   143e4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   143e8:	movw	r2, #50087	; 0xc3a7
   143ec:	movt	r2, #1
   143f0:	str	r0, [fp, #-68]	; 0xffffffbc
   143f4:	mov	r0, r2
   143f8:	str	r1, [fp, #-72]	; 0xffffffb8
   143fc:	bl	10ec8 <gettext@plt>
   14400:	movw	r2, #50258	; 0xc452
   14404:	movt	r2, #1
   14408:	ldr	r1, [fp, #-72]	; 0xffffffb8
   1440c:	str	r0, [fp, #-76]	; 0xffffffb4
   14410:	mov	r0, r1
   14414:	ldr	r1, [fp, #-76]	; 0xffffffb4
   14418:	bl	10eec <fprintf@plt>
   1441c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   14420:	ldr	r2, [fp, #-64]	; 0xffffffc0
   14424:	str	r0, [fp, #-80]	; 0xffffffb0
   14428:	mov	r0, r2
   1442c:	bl	10d60 <fputs_unlocked@plt>
   14430:	ldr	r1, [fp, #12]
   14434:	cmp	r1, #9
   14438:	str	r1, [fp, #-84]	; 0xffffffac
   1443c:	bhi	14858 <__assert_fail@plt+0x38c4>
   14440:	add	r0, pc, #8
   14444:	ldr	r1, [fp, #-84]	; 0xffffffac
   14448:	ldr	r0, [r0, r1, lsl #2]
   1444c:	mov	pc, r0
   14450:	andeq	r4, r1, r8, ror r4
   14454:	andeq	r4, r1, ip, ror r4
   14458:			; <UNDEFINED> instruction: 0x000144b4
   1445c:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14460:	andeq	r4, r1, ip, asr #10
   14464:			; <UNDEFINED> instruction: 0x000145b0
   14468:	andeq	r4, r1, r0, lsr #12
   1446c:	muleq	r1, ip, r6
   14470:	andeq	r4, r1, r4, lsr #14
   14474:			; <UNDEFINED> instruction: 0x000147b8
   14478:	b	148f4 <__assert_fail@plt+0x3960>
   1447c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14480:	movw	r1, #50292	; 0xc474
   14484:	movt	r1, #1
   14488:	str	r0, [fp, #-88]	; 0xffffffa8
   1448c:	mov	r0, r1
   14490:	bl	10ec8 <gettext@plt>
   14494:	ldr	r1, [fp, #8]
   14498:	ldr	r2, [r1]
   1449c:	ldr	r1, [fp, #-88]	; 0xffffffa8
   144a0:	str	r0, [fp, #-92]	; 0xffffffa4
   144a4:	mov	r0, r1
   144a8:	ldr	r1, [fp, #-92]	; 0xffffffa4
   144ac:	bl	10eec <fprintf@plt>
   144b0:	b	148f4 <__assert_fail@plt+0x3960>
   144b4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   144b8:	movw	r1, #50308	; 0xc484
   144bc:	movt	r1, #1
   144c0:	str	r0, [fp, #-96]	; 0xffffffa0
   144c4:	mov	r0, r1
   144c8:	bl	10ec8 <gettext@plt>
   144cc:	ldr	r1, [fp, #8]
   144d0:	ldr	r2, [r1]
   144d4:	ldr	r1, [fp, #8]
   144d8:	ldr	r3, [r1, #4]
   144dc:	ldr	r1, [fp, #-96]	; 0xffffffa0
   144e0:	str	r0, [fp, #-100]	; 0xffffff9c
   144e4:	mov	r0, r1
   144e8:	ldr	r1, [fp, #-100]	; 0xffffff9c
   144ec:	bl	10eec <fprintf@plt>
   144f0:	b	148f4 <__assert_fail@plt+0x3960>
   144f4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   144f8:	movw	r1, #50331	; 0xc49b
   144fc:	movt	r1, #1
   14500:	str	r0, [fp, #-104]	; 0xffffff98
   14504:	mov	r0, r1
   14508:	bl	10ec8 <gettext@plt>
   1450c:	ldr	r1, [fp, #8]
   14510:	ldr	r2, [r1]
   14514:	ldr	r1, [fp, #8]
   14518:	ldr	r3, [r1, #4]
   1451c:	ldr	r1, [fp, #8]
   14520:	ldr	r1, [r1, #8]
   14524:	ldr	ip, [fp, #-104]	; 0xffffff98
   14528:	str	r0, [fp, #-108]	; 0xffffff94
   1452c:	mov	r0, ip
   14530:	ldr	lr, [fp, #-108]	; 0xffffff94
   14534:	str	r1, [sp, #112]	; 0x70
   14538:	mov	r1, lr
   1453c:	ldr	r4, [sp, #112]	; 0x70
   14540:	str	r4, [sp]
   14544:	bl	10eec <fprintf@plt>
   14548:	b	148f4 <__assert_fail@plt+0x3960>
   1454c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14550:	movw	r1, #50359	; 0xc4b7
   14554:	movt	r1, #1
   14558:	str	r0, [sp, #108]	; 0x6c
   1455c:	mov	r0, r1
   14560:	bl	10ec8 <gettext@plt>
   14564:	ldr	r1, [fp, #8]
   14568:	ldr	r2, [r1]
   1456c:	ldr	r1, [fp, #8]
   14570:	ldr	r3, [r1, #4]
   14574:	ldr	r1, [fp, #8]
   14578:	ldr	r1, [r1, #8]
   1457c:	ldr	ip, [fp, #8]
   14580:	ldr	ip, [ip, #12]
   14584:	ldr	lr, [sp, #108]	; 0x6c
   14588:	str	r0, [sp, #104]	; 0x68
   1458c:	mov	r0, lr
   14590:	ldr	r4, [sp, #104]	; 0x68
   14594:	str	r1, [sp, #100]	; 0x64
   14598:	mov	r1, r4
   1459c:	ldr	r5, [sp, #100]	; 0x64
   145a0:	str	r5, [sp]
   145a4:	str	ip, [sp, #4]
   145a8:	bl	10eec <fprintf@plt>
   145ac:	b	148f4 <__assert_fail@plt+0x3960>
   145b0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   145b4:	movw	r1, #50391	; 0xc4d7
   145b8:	movt	r1, #1
   145bc:	str	r0, [sp, #96]	; 0x60
   145c0:	mov	r0, r1
   145c4:	bl	10ec8 <gettext@plt>
   145c8:	ldr	r1, [fp, #8]
   145cc:	ldr	r2, [r1]
   145d0:	ldr	r1, [fp, #8]
   145d4:	ldr	r3, [r1, #4]
   145d8:	ldr	r1, [fp, #8]
   145dc:	ldr	r1, [r1, #8]
   145e0:	ldr	ip, [fp, #8]
   145e4:	ldr	ip, [ip, #12]
   145e8:	ldr	lr, [fp, #8]
   145ec:	ldr	lr, [lr, #16]
   145f0:	ldr	r4, [sp, #96]	; 0x60
   145f4:	str	r0, [sp, #92]	; 0x5c
   145f8:	mov	r0, r4
   145fc:	ldr	r5, [sp, #92]	; 0x5c
   14600:	str	r1, [sp, #88]	; 0x58
   14604:	mov	r1, r5
   14608:	ldr	r6, [sp, #88]	; 0x58
   1460c:	str	r6, [sp]
   14610:	str	ip, [sp, #4]
   14614:	str	lr, [sp, #8]
   14618:	bl	10eec <fprintf@plt>
   1461c:	b	148f4 <__assert_fail@plt+0x3960>
   14620:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14624:	movw	r1, #50427	; 0xc4fb
   14628:	movt	r1, #1
   1462c:	str	r0, [sp, #84]	; 0x54
   14630:	mov	r0, r1
   14634:	bl	10ec8 <gettext@plt>
   14638:	ldr	r1, [fp, #8]
   1463c:	ldr	r2, [r1]
   14640:	ldr	r1, [fp, #8]
   14644:	ldr	r3, [r1, #4]
   14648:	ldr	r1, [fp, #8]
   1464c:	ldr	r1, [r1, #8]
   14650:	ldr	ip, [fp, #8]
   14654:	ldr	ip, [ip, #12]
   14658:	ldr	lr, [fp, #8]
   1465c:	ldr	lr, [lr, #16]
   14660:	ldr	r4, [fp, #8]
   14664:	ldr	r4, [r4, #20]
   14668:	ldr	r5, [sp, #84]	; 0x54
   1466c:	str	r0, [sp, #80]	; 0x50
   14670:	mov	r0, r5
   14674:	ldr	r6, [sp, #80]	; 0x50
   14678:	str	r1, [sp, #76]	; 0x4c
   1467c:	mov	r1, r6
   14680:	ldr	r7, [sp, #76]	; 0x4c
   14684:	str	r7, [sp]
   14688:	str	ip, [sp, #4]
   1468c:	str	lr, [sp, #8]
   14690:	str	r4, [sp, #12]
   14694:	bl	10eec <fprintf@plt>
   14698:	b	148f4 <__assert_fail@plt+0x3960>
   1469c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   146a0:	movw	r1, #50467	; 0xc523
   146a4:	movt	r1, #1
   146a8:	str	r0, [sp, #72]	; 0x48
   146ac:	mov	r0, r1
   146b0:	bl	10ec8 <gettext@plt>
   146b4:	ldr	r1, [fp, #8]
   146b8:	ldr	r2, [r1]
   146bc:	ldr	r1, [fp, #8]
   146c0:	ldr	r3, [r1, #4]
   146c4:	ldr	r1, [fp, #8]
   146c8:	ldr	r1, [r1, #8]
   146cc:	ldr	ip, [fp, #8]
   146d0:	ldr	ip, [ip, #12]
   146d4:	ldr	lr, [fp, #8]
   146d8:	ldr	lr, [lr, #16]
   146dc:	ldr	r4, [fp, #8]
   146e0:	ldr	r4, [r4, #20]
   146e4:	ldr	r5, [fp, #8]
   146e8:	ldr	r5, [r5, #24]
   146ec:	ldr	r6, [sp, #72]	; 0x48
   146f0:	str	r0, [sp, #68]	; 0x44
   146f4:	mov	r0, r6
   146f8:	ldr	r7, [sp, #68]	; 0x44
   146fc:	str	r1, [sp, #64]	; 0x40
   14700:	mov	r1, r7
   14704:	ldr	r8, [sp, #64]	; 0x40
   14708:	str	r8, [sp]
   1470c:	str	ip, [sp, #4]
   14710:	str	lr, [sp, #8]
   14714:	str	r4, [sp, #12]
   14718:	str	r5, [sp, #16]
   1471c:	bl	10eec <fprintf@plt>
   14720:	b	148f4 <__assert_fail@plt+0x3960>
   14724:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14728:	movw	r1, #50511	; 0xc54f
   1472c:	movt	r1, #1
   14730:	str	r0, [sp, #60]	; 0x3c
   14734:	mov	r0, r1
   14738:	bl	10ec8 <gettext@plt>
   1473c:	ldr	r1, [fp, #8]
   14740:	ldr	r2, [r1]
   14744:	ldr	r1, [fp, #8]
   14748:	ldr	r3, [r1, #4]
   1474c:	ldr	r1, [fp, #8]
   14750:	ldr	r1, [r1, #8]
   14754:	ldr	ip, [fp, #8]
   14758:	ldr	ip, [ip, #12]
   1475c:	ldr	lr, [fp, #8]
   14760:	ldr	lr, [lr, #16]
   14764:	ldr	r4, [fp, #8]
   14768:	ldr	r4, [r4, #20]
   1476c:	ldr	r5, [fp, #8]
   14770:	ldr	r5, [r5, #24]
   14774:	ldr	r6, [fp, #8]
   14778:	ldr	r6, [r6, #28]
   1477c:	ldr	r7, [sp, #60]	; 0x3c
   14780:	str	r0, [sp, #56]	; 0x38
   14784:	mov	r0, r7
   14788:	ldr	r8, [sp, #56]	; 0x38
   1478c:	str	r1, [sp, #52]	; 0x34
   14790:	mov	r1, r8
   14794:	ldr	r9, [sp, #52]	; 0x34
   14798:	str	r9, [sp]
   1479c:	str	ip, [sp, #4]
   147a0:	str	lr, [sp, #8]
   147a4:	str	r4, [sp, #12]
   147a8:	str	r5, [sp, #16]
   147ac:	str	r6, [sp, #20]
   147b0:	bl	10eec <fprintf@plt>
   147b4:	b	148f4 <__assert_fail@plt+0x3960>
   147b8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   147bc:	movw	r1, #50559	; 0xc57f
   147c0:	movt	r1, #1
   147c4:	str	r0, [sp, #48]	; 0x30
   147c8:	mov	r0, r1
   147cc:	bl	10ec8 <gettext@plt>
   147d0:	ldr	r1, [fp, #8]
   147d4:	ldr	r2, [r1]
   147d8:	ldr	r1, [fp, #8]
   147dc:	ldr	r3, [r1, #4]
   147e0:	ldr	r1, [fp, #8]
   147e4:	ldr	r1, [r1, #8]
   147e8:	ldr	ip, [fp, #8]
   147ec:	ldr	ip, [ip, #12]
   147f0:	ldr	lr, [fp, #8]
   147f4:	ldr	lr, [lr, #16]
   147f8:	ldr	r4, [fp, #8]
   147fc:	ldr	r4, [r4, #20]
   14800:	ldr	r5, [fp, #8]
   14804:	ldr	r5, [r5, #24]
   14808:	ldr	r6, [fp, #8]
   1480c:	ldr	r6, [r6, #28]
   14810:	ldr	r7, [fp, #8]
   14814:	ldr	r7, [r7, #32]
   14818:	ldr	r8, [sp, #48]	; 0x30
   1481c:	str	r0, [sp, #44]	; 0x2c
   14820:	mov	r0, r8
   14824:	ldr	r9, [sp, #44]	; 0x2c
   14828:	str	r1, [sp, #40]	; 0x28
   1482c:	mov	r1, r9
   14830:	ldr	sl, [sp, #40]	; 0x28
   14834:	str	sl, [sp]
   14838:	str	ip, [sp, #4]
   1483c:	str	lr, [sp, #8]
   14840:	str	r4, [sp, #12]
   14844:	str	r5, [sp, #16]
   14848:	str	r6, [sp, #20]
   1484c:	str	r7, [sp, #24]
   14850:	bl	10eec <fprintf@plt>
   14854:	b	148f4 <__assert_fail@plt+0x3960>
   14858:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1485c:	movw	r1, #50611	; 0xc5b3
   14860:	movt	r1, #1
   14864:	str	r0, [sp, #36]	; 0x24
   14868:	mov	r0, r1
   1486c:	bl	10ec8 <gettext@plt>
   14870:	ldr	r1, [fp, #8]
   14874:	ldr	r2, [r1]
   14878:	ldr	r1, [fp, #8]
   1487c:	ldr	r3, [r1, #4]
   14880:	ldr	r1, [fp, #8]
   14884:	ldr	r1, [r1, #8]
   14888:	ldr	ip, [fp, #8]
   1488c:	ldr	ip, [ip, #12]
   14890:	ldr	lr, [fp, #8]
   14894:	ldr	lr, [lr, #16]
   14898:	ldr	r4, [fp, #8]
   1489c:	ldr	r4, [r4, #20]
   148a0:	ldr	r5, [fp, #8]
   148a4:	ldr	r5, [r5, #24]
   148a8:	ldr	r6, [fp, #8]
   148ac:	ldr	r6, [r6, #28]
   148b0:	ldr	r7, [fp, #8]
   148b4:	ldr	r7, [r7, #32]
   148b8:	ldr	r8, [sp, #36]	; 0x24
   148bc:	str	r0, [sp, #32]
   148c0:	mov	r0, r8
   148c4:	ldr	r9, [sp, #32]
   148c8:	str	r1, [sp, #28]
   148cc:	mov	r1, r9
   148d0:	ldr	sl, [sp, #28]
   148d4:	str	sl, [sp]
   148d8:	str	ip, [sp, #4]
   148dc:	str	lr, [sp, #8]
   148e0:	str	r4, [sp, #12]
   148e4:	str	r5, [sp, #16]
   148e8:	str	r6, [sp, #20]
   148ec:	str	r7, [sp, #24]
   148f0:	bl	10eec <fprintf@plt>
   148f4:	sub	sp, fp, #28
   148f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   148fc:	push	{fp, lr}
   14900:	mov	fp, sp
   14904:	sub	sp, sp, #32
   14908:	ldr	ip, [fp, #8]
   1490c:	str	r0, [fp, #-4]
   14910:	str	r1, [fp, #-8]
   14914:	str	r2, [fp, #-12]
   14918:	str	r3, [sp, #16]
   1491c:	movw	r0, #0
   14920:	str	r0, [sp, #12]
   14924:	ldr	r0, [fp, #8]
   14928:	ldr	r1, [sp, #12]
   1492c:	add	r0, r0, r1, lsl #2
   14930:	ldr	r0, [r0]
   14934:	movw	r1, #0
   14938:	cmp	r0, r1
   1493c:	beq	14954 <__assert_fail@plt+0x39c0>
   14940:	b	14944 <__assert_fail@plt+0x39b0>
   14944:	ldr	r0, [sp, #12]
   14948:	add	r0, r0, #1
   1494c:	str	r0, [sp, #12]
   14950:	b	14924 <__assert_fail@plt+0x3990>
   14954:	ldr	r0, [fp, #-4]
   14958:	ldr	r1, [fp, #-8]
   1495c:	ldr	r2, [fp, #-12]
   14960:	ldr	r3, [sp, #16]
   14964:	ldr	ip, [fp, #8]
   14968:	ldr	lr, [sp, #12]
   1496c:	str	ip, [sp]
   14970:	str	lr, [sp, #4]
   14974:	bl	14314 <__assert_fail@plt+0x3380>
   14978:	mov	sp, fp
   1497c:	pop	{fp, pc}
   14980:	push	{fp, lr}
   14984:	mov	fp, sp
   14988:	sub	sp, sp, #80	; 0x50
   1498c:	ldr	ip, [fp, #8]
   14990:	str	ip, [fp, #-4]
   14994:	str	r0, [fp, #-8]
   14998:	str	r1, [fp, #-12]
   1499c:	str	r2, [fp, #-16]
   149a0:	str	r3, [fp, #-20]	; 0xffffffec
   149a4:	movw	r0, #0
   149a8:	str	r0, [fp, #-24]	; 0xffffffe8
   149ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   149b0:	cmp	r0, #10
   149b4:	movw	r0, #0
   149b8:	str	r0, [sp, #12]
   149bc:	bcs	149f4 <__assert_fail@plt+0x3a60>
   149c0:	ldr	r0, [fp, #-4]
   149c4:	add	r1, r0, #4
   149c8:	str	r1, [fp, #-4]
   149cc:	ldr	r0, [r0]
   149d0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   149d4:	add	r2, sp, #16
   149d8:	add	r1, r2, r1, lsl #2
   149dc:	str	r0, [r1]
   149e0:	movw	r1, #0
   149e4:	cmp	r0, r1
   149e8:	movw	r0, #0
   149ec:	movne	r0, #1
   149f0:	str	r0, [sp, #12]
   149f4:	ldr	r0, [sp, #12]
   149f8:	tst	r0, #1
   149fc:	beq	14a14 <__assert_fail@plt+0x3a80>
   14a00:	b	14a04 <__assert_fail@plt+0x3a70>
   14a04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14a08:	add	r0, r0, #1
   14a0c:	str	r0, [fp, #-24]	; 0xffffffe8
   14a10:	b	149ac <__assert_fail@plt+0x3a18>
   14a14:	add	r0, sp, #16
   14a18:	ldr	r1, [fp, #-8]
   14a1c:	ldr	r2, [fp, #-12]
   14a20:	ldr	r3, [fp, #-16]
   14a24:	ldr	ip, [fp, #-20]	; 0xffffffec
   14a28:	ldr	lr, [fp, #-24]	; 0xffffffe8
   14a2c:	str	r0, [sp, #8]
   14a30:	mov	r0, r1
   14a34:	mov	r1, r2
   14a38:	mov	r2, r3
   14a3c:	mov	r3, ip
   14a40:	ldr	ip, [sp, #8]
   14a44:	str	ip, [sp]
   14a48:	str	lr, [sp, #4]
   14a4c:	bl	14314 <__assert_fail@plt+0x3380>
   14a50:	mov	sp, fp
   14a54:	pop	{fp, pc}
   14a58:	push	{fp, lr}
   14a5c:	mov	fp, sp
   14a60:	sub	sp, sp, #24
   14a64:	str	r0, [fp, #-4]
   14a68:	str	r1, [fp, #-8]
   14a6c:	str	r2, [sp, #12]
   14a70:	str	r3, [sp, #8]
   14a74:	add	r0, fp, #8
   14a78:	str	r0, [sp, #4]
   14a7c:	ldr	r0, [fp, #-4]
   14a80:	ldr	r1, [fp, #-8]
   14a84:	ldr	r2, [sp, #12]
   14a88:	ldr	r3, [sp, #8]
   14a8c:	ldr	ip, [sp, #4]
   14a90:	mov	lr, sp
   14a94:	str	ip, [lr]
   14a98:	bl	14980 <__assert_fail@plt+0x39ec>
   14a9c:	add	r0, sp, #4
   14aa0:	mov	sp, fp
   14aa4:	pop	{fp, pc}
   14aa8:	push	{fp, lr}
   14aac:	mov	fp, sp
   14ab0:	sub	sp, sp, #16
   14ab4:	movw	r0, #53564	; 0xd13c
   14ab8:	movt	r0, #2
   14abc:	ldr	r1, [r0]
   14ac0:	movw	r0, #49629	; 0xc1dd
   14ac4:	movt	r0, #1
   14ac8:	bl	10d60 <fputs_unlocked@plt>
   14acc:	movw	r1, #50671	; 0xc5ef
   14ad0:	movt	r1, #1
   14ad4:	str	r0, [fp, #-4]
   14ad8:	mov	r0, r1
   14adc:	bl	10ec8 <gettext@plt>
   14ae0:	movw	r1, #50691	; 0xc603
   14ae4:	movt	r1, #1
   14ae8:	bl	10d90 <printf@plt>
   14aec:	movw	r1, #50713	; 0xc619
   14af0:	movt	r1, #1
   14af4:	str	r0, [sp, #8]
   14af8:	mov	r0, r1
   14afc:	bl	10ec8 <gettext@plt>
   14b00:	movw	r1, #49106	; 0xbfd2
   14b04:	movt	r1, #1
   14b08:	movw	r2, #49438	; 0xc11e
   14b0c:	movt	r2, #1
   14b10:	bl	10d90 <printf@plt>
   14b14:	movw	r1, #50733	; 0xc62d
   14b18:	movt	r1, #1
   14b1c:	str	r0, [sp, #4]
   14b20:	mov	r0, r1
   14b24:	bl	10ec8 <gettext@plt>
   14b28:	movw	r1, #50772	; 0xc654
   14b2c:	movt	r1, #1
   14b30:	bl	10d90 <printf@plt>
   14b34:	mov	sp, fp
   14b38:	pop	{fp, pc}
   14b3c:	push	{fp, lr}
   14b40:	mov	fp, sp
   14b44:	sub	sp, sp, #16
   14b48:	str	r0, [fp, #-4]
   14b4c:	str	r1, [sp, #8]
   14b50:	str	r2, [sp, #4]
   14b54:	ldr	r0, [fp, #-4]
   14b58:	ldr	r1, [sp, #8]
   14b5c:	ldr	r2, [sp, #4]
   14b60:	bl	14b6c <__assert_fail@plt+0x3bd8>
   14b64:	mov	sp, fp
   14b68:	pop	{fp, pc}
   14b6c:	push	{fp, lr}
   14b70:	mov	fp, sp
   14b74:	sub	sp, sp, #16
   14b78:	str	r0, [fp, #-4]
   14b7c:	str	r1, [sp, #8]
   14b80:	str	r2, [sp, #4]
   14b84:	ldr	r0, [fp, #-4]
   14b88:	ldr	r1, [sp, #8]
   14b8c:	ldr	r2, [sp, #4]
   14b90:	bl	19ed8 <__assert_fail@plt+0x8f44>
   14b94:	str	r0, [sp]
   14b98:	ldr	r0, [sp]
   14b9c:	movw	r1, #0
   14ba0:	cmp	r0, r1
   14ba4:	bne	14bd4 <__assert_fail@plt+0x3c40>
   14ba8:	ldr	r0, [fp, #-4]
   14bac:	movw	r1, #0
   14bb0:	cmp	r0, r1
   14bb4:	beq	14bd0 <__assert_fail@plt+0x3c3c>
   14bb8:	ldr	r0, [sp, #8]
   14bbc:	cmp	r0, #0
   14bc0:	beq	14bd4 <__assert_fail@plt+0x3c40>
   14bc4:	ldr	r0, [sp, #4]
   14bc8:	cmp	r0, #0
   14bcc:	beq	14bd4 <__assert_fail@plt+0x3c40>
   14bd0:	bl	17918 <__assert_fail@plt+0x6984>
   14bd4:	ldr	r0, [sp]
   14bd8:	mov	sp, fp
   14bdc:	pop	{fp, pc}
   14be0:	push	{fp, lr}
   14be4:	mov	fp, sp
   14be8:	sub	sp, sp, #8
   14bec:	str	r0, [sp, #4]
   14bf0:	ldr	r0, [sp, #4]
   14bf4:	bl	1967c <__assert_fail@plt+0x86e8>
   14bf8:	bl	14c04 <__assert_fail@plt+0x3c70>
   14bfc:	mov	sp, fp
   14c00:	pop	{fp, pc}
   14c04:	push	{fp, lr}
   14c08:	mov	fp, sp
   14c0c:	sub	sp, sp, #8
   14c10:	str	r0, [sp, #4]
   14c14:	ldr	r0, [sp, #4]
   14c18:	movw	r1, #0
   14c1c:	cmp	r0, r1
   14c20:	bne	14c28 <__assert_fail@plt+0x3c94>
   14c24:	bl	17918 <__assert_fail@plt+0x6984>
   14c28:	ldr	r0, [sp, #4]
   14c2c:	mov	sp, fp
   14c30:	pop	{fp, pc}
   14c34:	push	{fp, lr}
   14c38:	mov	fp, sp
   14c3c:	sub	sp, sp, #8
   14c40:	str	r0, [sp, #4]
   14c44:	ldr	r0, [sp, #4]
   14c48:	bl	19c14 <__assert_fail@plt+0x8c80>
   14c4c:	bl	14c04 <__assert_fail@plt+0x3c70>
   14c50:	mov	sp, fp
   14c54:	pop	{fp, pc}
   14c58:	push	{fp, lr}
   14c5c:	mov	fp, sp
   14c60:	sub	sp, sp, #8
   14c64:	str	r0, [sp, #4]
   14c68:	ldr	r0, [sp, #4]
   14c6c:	bl	14be0 <__assert_fail@plt+0x3c4c>
   14c70:	mov	sp, fp
   14c74:	pop	{fp, pc}
   14c78:	push	{fp, lr}
   14c7c:	mov	fp, sp
   14c80:	sub	sp, sp, #16
   14c84:	str	r0, [fp, #-4]
   14c88:	str	r1, [sp, #8]
   14c8c:	ldr	r0, [fp, #-4]
   14c90:	ldr	r1, [sp, #8]
   14c94:	bl	196ec <__assert_fail@plt+0x8758>
   14c98:	str	r0, [sp, #4]
   14c9c:	ldr	r0, [sp, #4]
   14ca0:	movw	r1, #0
   14ca4:	cmp	r0, r1
   14ca8:	bne	14ccc <__assert_fail@plt+0x3d38>
   14cac:	ldr	r0, [fp, #-4]
   14cb0:	movw	r1, #0
   14cb4:	cmp	r0, r1
   14cb8:	beq	14cc8 <__assert_fail@plt+0x3d34>
   14cbc:	ldr	r0, [sp, #8]
   14cc0:	cmp	r0, #0
   14cc4:	beq	14ccc <__assert_fail@plt+0x3d38>
   14cc8:	bl	17918 <__assert_fail@plt+0x6984>
   14ccc:	ldr	r0, [sp, #4]
   14cd0:	mov	sp, fp
   14cd4:	pop	{fp, pc}
   14cd8:	push	{fp, lr}
   14cdc:	mov	fp, sp
   14ce0:	sub	sp, sp, #8
   14ce4:	str	r0, [sp, #4]
   14ce8:	str	r1, [sp]
   14cec:	ldr	r0, [sp, #4]
   14cf0:	ldr	r1, [sp]
   14cf4:	bl	19c54 <__assert_fail@plt+0x8cc0>
   14cf8:	bl	14c04 <__assert_fail@plt+0x3c70>
   14cfc:	mov	sp, fp
   14d00:	pop	{fp, pc}
   14d04:	push	{fp, lr}
   14d08:	mov	fp, sp
   14d0c:	sub	sp, sp, #16
   14d10:	str	r0, [fp, #-4]
   14d14:	str	r1, [sp, #8]
   14d18:	str	r2, [sp, #4]
   14d1c:	ldr	r0, [fp, #-4]
   14d20:	ldr	r1, [sp, #8]
   14d24:	ldr	r2, [sp, #4]
   14d28:	bl	19d4c <__assert_fail@plt+0x8db8>
   14d2c:	bl	14c04 <__assert_fail@plt+0x3c70>
   14d30:	mov	sp, fp
   14d34:	pop	{fp, pc}
   14d38:	push	{fp, lr}
   14d3c:	mov	fp, sp
   14d40:	sub	sp, sp, #8
   14d44:	str	r0, [sp, #4]
   14d48:	str	r1, [sp]
   14d4c:	ldr	r1, [sp, #4]
   14d50:	ldr	r2, [sp]
   14d54:	movw	r0, #0
   14d58:	bl	14b6c <__assert_fail@plt+0x3bd8>
   14d5c:	mov	sp, fp
   14d60:	pop	{fp, pc}
   14d64:	push	{fp, lr}
   14d68:	mov	fp, sp
   14d6c:	sub	sp, sp, #8
   14d70:	str	r0, [sp, #4]
   14d74:	str	r1, [sp]
   14d78:	ldr	r1, [sp, #4]
   14d7c:	ldr	r2, [sp]
   14d80:	movw	r0, #0
   14d84:	bl	14d04 <__assert_fail@plt+0x3d70>
   14d88:	mov	sp, fp
   14d8c:	pop	{fp, pc}
   14d90:	push	{fp, lr}
   14d94:	mov	fp, sp
   14d98:	sub	sp, sp, #8
   14d9c:	str	r0, [sp, #4]
   14da0:	str	r1, [sp]
   14da4:	ldr	r0, [sp, #4]
   14da8:	ldr	r1, [sp]
   14dac:	movw	r2, #1
   14db0:	bl	14dbc <__assert_fail@plt+0x3e28>
   14db4:	mov	sp, fp
   14db8:	pop	{fp, pc}
   14dbc:	push	{fp, lr}
   14dc0:	mov	fp, sp
   14dc4:	sub	sp, sp, #16
   14dc8:	str	r0, [fp, #-4]
   14dcc:	str	r1, [sp, #8]
   14dd0:	str	r2, [sp, #4]
   14dd4:	ldr	r0, [sp, #8]
   14dd8:	ldr	r0, [r0]
   14ddc:	str	r0, [sp]
   14de0:	ldr	r0, [fp, #-4]
   14de4:	movw	r1, #0
   14de8:	cmp	r0, r1
   14dec:	bne	14e38 <__assert_fail@plt+0x3ea4>
   14df0:	ldr	r0, [sp]
   14df4:	cmp	r0, #0
   14df8:	bne	14e34 <__assert_fail@plt+0x3ea0>
   14dfc:	ldr	r0, [sp, #4]
   14e00:	movw	r1, #64	; 0x40
   14e04:	udiv	r0, r1, r0
   14e08:	str	r0, [sp]
   14e0c:	ldr	r0, [sp]
   14e10:	cmp	r0, #0
   14e14:	movw	r0, #0
   14e18:	movne	r0, #1
   14e1c:	mvn	r1, #0
   14e20:	eor	r0, r0, r1
   14e24:	and	r0, r0, #1
   14e28:	ldr	r1, [sp]
   14e2c:	add	r0, r1, r0
   14e30:	str	r0, [sp]
   14e34:	b	14e68 <__assert_fail@plt+0x3ed4>
   14e38:	ldr	r0, [sp]
   14e3c:	ldr	r1, [sp]
   14e40:	lsr	r1, r1, #1
   14e44:	add	r1, r1, #1
   14e48:	adds	r0, r0, r1
   14e4c:	mov	r1, #0
   14e50:	adc	r1, r1, #0
   14e54:	str	r0, [sp]
   14e58:	tst	r1, #1
   14e5c:	beq	14e64 <__assert_fail@plt+0x3ed0>
   14e60:	bl	17918 <__assert_fail@plt+0x6984>
   14e64:	b	14e68 <__assert_fail@plt+0x3ed4>
   14e68:	ldr	r0, [fp, #-4]
   14e6c:	ldr	r1, [sp]
   14e70:	ldr	r2, [sp, #4]
   14e74:	bl	14b6c <__assert_fail@plt+0x3bd8>
   14e78:	str	r0, [fp, #-4]
   14e7c:	ldr	r0, [sp]
   14e80:	ldr	r1, [sp, #8]
   14e84:	str	r0, [r1]
   14e88:	ldr	r0, [fp, #-4]
   14e8c:	mov	sp, fp
   14e90:	pop	{fp, pc}
   14e94:	push	{fp, lr}
   14e98:	mov	fp, sp
   14e9c:	sub	sp, sp, #216	; 0xd8
   14ea0:	ldr	ip, [fp, #8]
   14ea4:	str	r0, [fp, #-4]
   14ea8:	str	r1, [fp, #-8]
   14eac:	str	r2, [fp, #-12]
   14eb0:	str	r3, [fp, #-16]
   14eb4:	ldr	r0, [fp, #-8]
   14eb8:	ldr	r0, [r0]
   14ebc:	str	r0, [fp, #-20]	; 0xffffffec
   14ec0:	ldr	r0, [fp, #-20]	; 0xffffffec
   14ec4:	ldr	r1, [fp, #-20]	; 0xffffffec
   14ec8:	asr	r1, r1, #1
   14ecc:	add	r1, r0, r1
   14ed0:	mov	r2, #1
   14ed4:	cmp	r1, r0
   14ed8:	movwvc	r2, #0
   14edc:	str	r1, [fp, #-24]	; 0xffffffe8
   14ee0:	tst	r2, #1
   14ee4:	beq	14ef0 <__assert_fail@plt+0x3f5c>
   14ee8:	ldr	r0, [pc, #4036]	; 15eb4 <__assert_fail@plt+0x4f20>
   14eec:	str	r0, [fp, #-24]	; 0xffffffe8
   14ef0:	ldr	r0, [fp, #-16]
   14ef4:	movw	r1, #0
   14ef8:	cmp	r1, r0
   14efc:	bgt	14f18 <__assert_fail@plt+0x3f84>
   14f00:	ldr	r0, [fp, #-16]
   14f04:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14f08:	cmp	r0, r1
   14f0c:	bge	14f18 <__assert_fail@plt+0x3f84>
   14f10:	ldr	r0, [fp, #-16]
   14f14:	str	r0, [fp, #-24]	; 0xffffffe8
   14f18:	b	152f0 <__assert_fail@plt+0x435c>
   14f1c:	b	14f20 <__assert_fail@plt+0x3f8c>
   14f20:	ldr	r0, [fp, #8]
   14f24:	cmp	r0, #0
   14f28:	bge	1503c <__assert_fail@plt+0x40a8>
   14f2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14f30:	cmp	r0, #0
   14f34:	bge	14fc0 <__assert_fail@plt+0x402c>
   14f38:	b	14f3c <__assert_fail@plt+0x3fa8>
   14f3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14f40:	ldr	r1, [fp, #8]
   14f44:	movw	r2, #127	; 0x7f
   14f48:	sdiv	r1, r2, r1
   14f4c:	cmp	r0, r1
   14f50:	blt	150dc <__assert_fail@plt+0x4148>
   14f54:	b	150f4 <__assert_fail@plt+0x4160>
   14f58:	b	14f5c <__assert_fail@plt+0x3fc8>
   14f5c:	ldr	r0, [pc, #4084]	; 15f58 <__assert_fail@plt+0x4fc4>
   14f60:	ldr	r1, [fp, #8]
   14f64:	cmp	r1, r0
   14f68:	blt	14f80 <__assert_fail@plt+0x3fec>
   14f6c:	b	14f8c <__assert_fail@plt+0x3ff8>
   14f70:	ldr	r0, [fp, #8]
   14f74:	movw	r1, #0
   14f78:	cmp	r1, r0
   14f7c:	bge	14f8c <__assert_fail@plt+0x3ff8>
   14f80:	movw	r0, #0
   14f84:	str	r0, [fp, #-36]	; 0xffffffdc
   14f88:	b	14fa4 <__assert_fail@plt+0x4010>
   14f8c:	ldr	r0, [fp, #8]
   14f90:	movw	r1, #0
   14f94:	sub	r0, r1, r0
   14f98:	movw	r1, #127	; 0x7f
   14f9c:	sdiv	r0, r1, r0
   14fa0:	str	r0, [fp, #-36]	; 0xffffffdc
   14fa4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14fa8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14fac:	mvn	r2, #0
   14fb0:	sub	r1, r2, r1
   14fb4:	cmp	r0, r1
   14fb8:	ble	150dc <__assert_fail@plt+0x4148>
   14fbc:	b	150f4 <__assert_fail@plt+0x4160>
   14fc0:	b	14fc4 <__assert_fail@plt+0x4030>
   14fc4:	b	15020 <__assert_fail@plt+0x408c>
   14fc8:	b	15020 <__assert_fail@plt+0x408c>
   14fcc:	ldr	r0, [fp, #8]
   14fd0:	cmn	r0, #1
   14fd4:	bne	15020 <__assert_fail@plt+0x408c>
   14fd8:	b	14fdc <__assert_fail@plt+0x4048>
   14fdc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14fe0:	mvn	r1, #127	; 0x7f
   14fe4:	add	r0, r0, r1
   14fe8:	movw	r1, #0
   14fec:	cmp	r1, r0
   14ff0:	blt	150dc <__assert_fail@plt+0x4148>
   14ff4:	b	150f4 <__assert_fail@plt+0x4160>
   14ff8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14ffc:	movw	r1, #0
   15000:	cmp	r1, r0
   15004:	bge	150f4 <__assert_fail@plt+0x4160>
   15008:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1500c:	sub	r0, r0, #1
   15010:	movw	r1, #127	; 0x7f
   15014:	cmp	r1, r0
   15018:	blt	150dc <__assert_fail@plt+0x4148>
   1501c:	b	150f4 <__assert_fail@plt+0x4160>
   15020:	ldr	r0, [fp, #8]
   15024:	mvn	r1, #127	; 0x7f
   15028:	sdiv	r0, r1, r0
   1502c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15030:	cmp	r0, r1
   15034:	blt	150dc <__assert_fail@plt+0x4148>
   15038:	b	150f4 <__assert_fail@plt+0x4160>
   1503c:	ldr	r0, [fp, #8]
   15040:	cmp	r0, #0
   15044:	bne	1504c <__assert_fail@plt+0x40b8>
   15048:	b	150f4 <__assert_fail@plt+0x4160>
   1504c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15050:	cmp	r0, #0
   15054:	bge	150c4 <__assert_fail@plt+0x4130>
   15058:	b	1505c <__assert_fail@plt+0x40c8>
   1505c:	b	150a8 <__assert_fail@plt+0x4114>
   15060:	b	150a8 <__assert_fail@plt+0x4114>
   15064:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15068:	cmn	r0, #1
   1506c:	bne	150a8 <__assert_fail@plt+0x4114>
   15070:	b	15074 <__assert_fail@plt+0x40e0>
   15074:	ldr	r0, [fp, #8]
   15078:	mvn	r1, #127	; 0x7f
   1507c:	add	r0, r0, r1
   15080:	movw	r1, #0
   15084:	cmp	r1, r0
   15088:	blt	150dc <__assert_fail@plt+0x4148>
   1508c:	b	150f4 <__assert_fail@plt+0x4160>
   15090:	ldr	r0, [fp, #8]
   15094:	sub	r0, r0, #1
   15098:	movw	r1, #127	; 0x7f
   1509c:	cmp	r1, r0
   150a0:	blt	150dc <__assert_fail@plt+0x4148>
   150a4:	b	150f4 <__assert_fail@plt+0x4160>
   150a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   150ac:	mvn	r1, #127	; 0x7f
   150b0:	sdiv	r0, r1, r0
   150b4:	ldr	r1, [fp, #8]
   150b8:	cmp	r0, r1
   150bc:	blt	150dc <__assert_fail@plt+0x4148>
   150c0:	b	150f4 <__assert_fail@plt+0x4160>
   150c4:	ldr	r0, [fp, #8]
   150c8:	movw	r1, #127	; 0x7f
   150cc:	sdiv	r0, r1, r0
   150d0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   150d4:	cmp	r0, r1
   150d8:	bge	150f4 <__assert_fail@plt+0x4160>
   150dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   150e0:	ldr	r1, [fp, #8]
   150e4:	mul	r0, r0, r1
   150e8:	sxtb	r0, r0
   150ec:	str	r0, [fp, #-28]	; 0xffffffe4
   150f0:	b	162b8 <__assert_fail@plt+0x5324>
   150f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   150f8:	ldr	r1, [fp, #8]
   150fc:	mul	r0, r0, r1
   15100:	sxtb	r0, r0
   15104:	str	r0, [fp, #-28]	; 0xffffffe4
   15108:	b	162c4 <__assert_fail@plt+0x5330>
   1510c:	ldr	r0, [fp, #8]
   15110:	cmp	r0, #0
   15114:	bge	15224 <__assert_fail@plt+0x4290>
   15118:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1511c:	cmp	r0, #0
   15120:	bge	151ac <__assert_fail@plt+0x4218>
   15124:	b	15128 <__assert_fail@plt+0x4194>
   15128:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1512c:	ldr	r1, [fp, #8]
   15130:	movw	r2, #255	; 0xff
   15134:	sdiv	r1, r2, r1
   15138:	cmp	r0, r1
   1513c:	blt	152c0 <__assert_fail@plt+0x432c>
   15140:	b	152d8 <__assert_fail@plt+0x4344>
   15144:	b	15148 <__assert_fail@plt+0x41b4>
   15148:	ldr	r0, [pc, #3592]	; 15f58 <__assert_fail@plt+0x4fc4>
   1514c:	ldr	r1, [fp, #8]
   15150:	cmp	r1, r0
   15154:	blt	1516c <__assert_fail@plt+0x41d8>
   15158:	b	15178 <__assert_fail@plt+0x41e4>
   1515c:	ldr	r0, [fp, #8]
   15160:	movw	r1, #0
   15164:	cmp	r1, r0
   15168:	bge	15178 <__assert_fail@plt+0x41e4>
   1516c:	movw	r0, #0
   15170:	str	r0, [fp, #-40]	; 0xffffffd8
   15174:	b	15190 <__assert_fail@plt+0x41fc>
   15178:	ldr	r0, [fp, #8]
   1517c:	movw	r1, #0
   15180:	sub	r0, r1, r0
   15184:	movw	r1, #255	; 0xff
   15188:	sdiv	r0, r1, r0
   1518c:	str	r0, [fp, #-40]	; 0xffffffd8
   15190:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15194:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15198:	mvn	r2, #0
   1519c:	sub	r1, r2, r1
   151a0:	cmp	r0, r1
   151a4:	ble	152c0 <__assert_fail@plt+0x432c>
   151a8:	b	152d8 <__assert_fail@plt+0x4344>
   151ac:	b	151b0 <__assert_fail@plt+0x421c>
   151b0:	b	15208 <__assert_fail@plt+0x4274>
   151b4:	b	15208 <__assert_fail@plt+0x4274>
   151b8:	ldr	r0, [fp, #8]
   151bc:	cmn	r0, #1
   151c0:	bne	15208 <__assert_fail@plt+0x4274>
   151c4:	b	151c8 <__assert_fail@plt+0x4234>
   151c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   151cc:	add	r0, r0, #0
   151d0:	movw	r1, #0
   151d4:	cmp	r1, r0
   151d8:	blt	152c0 <__assert_fail@plt+0x432c>
   151dc:	b	152d8 <__assert_fail@plt+0x4344>
   151e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   151e4:	movw	r1, #0
   151e8:	cmp	r1, r0
   151ec:	bge	152d8 <__assert_fail@plt+0x4344>
   151f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   151f4:	sub	r0, r0, #1
   151f8:	mvn	r1, #0
   151fc:	cmp	r1, r0
   15200:	blt	152c0 <__assert_fail@plt+0x432c>
   15204:	b	152d8 <__assert_fail@plt+0x4344>
   15208:	ldr	r0, [fp, #8]
   1520c:	movw	r1, #0
   15210:	sdiv	r0, r1, r0
   15214:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15218:	cmp	r0, r1
   1521c:	blt	152c0 <__assert_fail@plt+0x432c>
   15220:	b	152d8 <__assert_fail@plt+0x4344>
   15224:	ldr	r0, [fp, #8]
   15228:	cmp	r0, #0
   1522c:	bne	15234 <__assert_fail@plt+0x42a0>
   15230:	b	152d8 <__assert_fail@plt+0x4344>
   15234:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15238:	cmp	r0, #0
   1523c:	bge	152a8 <__assert_fail@plt+0x4314>
   15240:	b	15244 <__assert_fail@plt+0x42b0>
   15244:	b	1528c <__assert_fail@plt+0x42f8>
   15248:	b	1528c <__assert_fail@plt+0x42f8>
   1524c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15250:	cmn	r0, #1
   15254:	bne	1528c <__assert_fail@plt+0x42f8>
   15258:	b	1525c <__assert_fail@plt+0x42c8>
   1525c:	ldr	r0, [fp, #8]
   15260:	add	r0, r0, #0
   15264:	movw	r1, #0
   15268:	cmp	r1, r0
   1526c:	blt	152c0 <__assert_fail@plt+0x432c>
   15270:	b	152d8 <__assert_fail@plt+0x4344>
   15274:	ldr	r0, [fp, #8]
   15278:	sub	r0, r0, #1
   1527c:	mvn	r1, #0
   15280:	cmp	r1, r0
   15284:	blt	152c0 <__assert_fail@plt+0x432c>
   15288:	b	152d8 <__assert_fail@plt+0x4344>
   1528c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15290:	movw	r1, #0
   15294:	sdiv	r0, r1, r0
   15298:	ldr	r1, [fp, #8]
   1529c:	cmp	r0, r1
   152a0:	blt	152c0 <__assert_fail@plt+0x432c>
   152a4:	b	152d8 <__assert_fail@plt+0x4344>
   152a8:	ldr	r0, [fp, #8]
   152ac:	movw	r1, #255	; 0xff
   152b0:	sdiv	r0, r1, r0
   152b4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   152b8:	cmp	r0, r1
   152bc:	bge	152d8 <__assert_fail@plt+0x4344>
   152c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   152c4:	ldr	r1, [fp, #8]
   152c8:	mul	r0, r0, r1
   152cc:	and	r0, r0, #255	; 0xff
   152d0:	str	r0, [fp, #-28]	; 0xffffffe4
   152d4:	b	162b8 <__assert_fail@plt+0x5324>
   152d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   152dc:	ldr	r1, [fp, #8]
   152e0:	mul	r0, r0, r1
   152e4:	and	r0, r0, #255	; 0xff
   152e8:	str	r0, [fp, #-28]	; 0xffffffe4
   152ec:	b	162c4 <__assert_fail@plt+0x5330>
   152f0:	b	156c8 <__assert_fail@plt+0x4734>
   152f4:	b	152f8 <__assert_fail@plt+0x4364>
   152f8:	ldr	r0, [fp, #8]
   152fc:	cmp	r0, #0
   15300:	bge	15414 <__assert_fail@plt+0x4480>
   15304:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15308:	cmp	r0, #0
   1530c:	bge	15398 <__assert_fail@plt+0x4404>
   15310:	b	15314 <__assert_fail@plt+0x4380>
   15314:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15318:	ldr	r1, [fp, #8]
   1531c:	movw	r2, #32767	; 0x7fff
   15320:	sdiv	r1, r2, r1
   15324:	cmp	r0, r1
   15328:	blt	154b4 <__assert_fail@plt+0x4520>
   1532c:	b	154cc <__assert_fail@plt+0x4538>
   15330:	b	15334 <__assert_fail@plt+0x43a0>
   15334:	ldr	r0, [pc, #3100]	; 15f58 <__assert_fail@plt+0x4fc4>
   15338:	ldr	r1, [fp, #8]
   1533c:	cmp	r1, r0
   15340:	blt	15358 <__assert_fail@plt+0x43c4>
   15344:	b	15364 <__assert_fail@plt+0x43d0>
   15348:	ldr	r0, [fp, #8]
   1534c:	movw	r1, #0
   15350:	cmp	r1, r0
   15354:	bge	15364 <__assert_fail@plt+0x43d0>
   15358:	movw	r0, #0
   1535c:	str	r0, [fp, #-44]	; 0xffffffd4
   15360:	b	1537c <__assert_fail@plt+0x43e8>
   15364:	ldr	r0, [fp, #8]
   15368:	movw	r1, #0
   1536c:	sub	r0, r1, r0
   15370:	movw	r1, #32767	; 0x7fff
   15374:	sdiv	r0, r1, r0
   15378:	str	r0, [fp, #-44]	; 0xffffffd4
   1537c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15380:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15384:	mvn	r2, #0
   15388:	sub	r1, r2, r1
   1538c:	cmp	r0, r1
   15390:	ble	154b4 <__assert_fail@plt+0x4520>
   15394:	b	154cc <__assert_fail@plt+0x4538>
   15398:	b	1539c <__assert_fail@plt+0x4408>
   1539c:	b	153f8 <__assert_fail@plt+0x4464>
   153a0:	b	153f8 <__assert_fail@plt+0x4464>
   153a4:	ldr	r0, [fp, #8]
   153a8:	cmn	r0, #1
   153ac:	bne	153f8 <__assert_fail@plt+0x4464>
   153b0:	b	153b4 <__assert_fail@plt+0x4420>
   153b4:	ldr	r0, [pc, #4068]	; 163a0 <__assert_fail@plt+0x540c>
   153b8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   153bc:	add	r0, r1, r0
   153c0:	movw	r1, #0
   153c4:	cmp	r1, r0
   153c8:	blt	154b4 <__assert_fail@plt+0x4520>
   153cc:	b	154cc <__assert_fail@plt+0x4538>
   153d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   153d4:	movw	r1, #0
   153d8:	cmp	r1, r0
   153dc:	bge	154cc <__assert_fail@plt+0x4538>
   153e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   153e4:	sub	r0, r0, #1
   153e8:	movw	r1, #32767	; 0x7fff
   153ec:	cmp	r1, r0
   153f0:	blt	154b4 <__assert_fail@plt+0x4520>
   153f4:	b	154cc <__assert_fail@plt+0x4538>
   153f8:	ldr	r0, [pc, #4000]	; 163a0 <__assert_fail@plt+0x540c>
   153fc:	ldr	r1, [fp, #8]
   15400:	sdiv	r0, r0, r1
   15404:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15408:	cmp	r0, r1
   1540c:	blt	154b4 <__assert_fail@plt+0x4520>
   15410:	b	154cc <__assert_fail@plt+0x4538>
   15414:	ldr	r0, [fp, #8]
   15418:	cmp	r0, #0
   1541c:	bne	15424 <__assert_fail@plt+0x4490>
   15420:	b	154cc <__assert_fail@plt+0x4538>
   15424:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15428:	cmp	r0, #0
   1542c:	bge	1549c <__assert_fail@plt+0x4508>
   15430:	b	15434 <__assert_fail@plt+0x44a0>
   15434:	b	15480 <__assert_fail@plt+0x44ec>
   15438:	b	15480 <__assert_fail@plt+0x44ec>
   1543c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15440:	cmn	r0, #1
   15444:	bne	15480 <__assert_fail@plt+0x44ec>
   15448:	b	1544c <__assert_fail@plt+0x44b8>
   1544c:	ldr	r0, [pc, #3916]	; 163a0 <__assert_fail@plt+0x540c>
   15450:	ldr	r1, [fp, #8]
   15454:	add	r0, r1, r0
   15458:	movw	r1, #0
   1545c:	cmp	r1, r0
   15460:	blt	154b4 <__assert_fail@plt+0x4520>
   15464:	b	154cc <__assert_fail@plt+0x4538>
   15468:	ldr	r0, [fp, #8]
   1546c:	sub	r0, r0, #1
   15470:	movw	r1, #32767	; 0x7fff
   15474:	cmp	r1, r0
   15478:	blt	154b4 <__assert_fail@plt+0x4520>
   1547c:	b	154cc <__assert_fail@plt+0x4538>
   15480:	ldr	r0, [pc, #3864]	; 163a0 <__assert_fail@plt+0x540c>
   15484:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15488:	sdiv	r0, r0, r1
   1548c:	ldr	r1, [fp, #8]
   15490:	cmp	r0, r1
   15494:	blt	154b4 <__assert_fail@plt+0x4520>
   15498:	b	154cc <__assert_fail@plt+0x4538>
   1549c:	ldr	r0, [fp, #8]
   154a0:	movw	r1, #32767	; 0x7fff
   154a4:	sdiv	r0, r1, r0
   154a8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   154ac:	cmp	r0, r1
   154b0:	bge	154cc <__assert_fail@plt+0x4538>
   154b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   154b8:	ldr	r1, [fp, #8]
   154bc:	mul	r0, r0, r1
   154c0:	sxth	r0, r0
   154c4:	str	r0, [fp, #-28]	; 0xffffffe4
   154c8:	b	162b8 <__assert_fail@plt+0x5324>
   154cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   154d0:	ldr	r1, [fp, #8]
   154d4:	mul	r0, r0, r1
   154d8:	sxth	r0, r0
   154dc:	str	r0, [fp, #-28]	; 0xffffffe4
   154e0:	b	162c4 <__assert_fail@plt+0x5330>
   154e4:	ldr	r0, [fp, #8]
   154e8:	cmp	r0, #0
   154ec:	bge	155fc <__assert_fail@plt+0x4668>
   154f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   154f4:	cmp	r0, #0
   154f8:	bge	15584 <__assert_fail@plt+0x45f0>
   154fc:	b	15500 <__assert_fail@plt+0x456c>
   15500:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15504:	ldr	r1, [fp, #8]
   15508:	movw	r2, #65535	; 0xffff
   1550c:	sdiv	r1, r2, r1
   15510:	cmp	r0, r1
   15514:	blt	15698 <__assert_fail@plt+0x4704>
   15518:	b	156b0 <__assert_fail@plt+0x471c>
   1551c:	b	15520 <__assert_fail@plt+0x458c>
   15520:	ldr	r0, [pc, #2608]	; 15f58 <__assert_fail@plt+0x4fc4>
   15524:	ldr	r1, [fp, #8]
   15528:	cmp	r1, r0
   1552c:	blt	15544 <__assert_fail@plt+0x45b0>
   15530:	b	15550 <__assert_fail@plt+0x45bc>
   15534:	ldr	r0, [fp, #8]
   15538:	movw	r1, #0
   1553c:	cmp	r1, r0
   15540:	bge	15550 <__assert_fail@plt+0x45bc>
   15544:	movw	r0, #0
   15548:	str	r0, [fp, #-48]	; 0xffffffd0
   1554c:	b	15568 <__assert_fail@plt+0x45d4>
   15550:	ldr	r0, [fp, #8]
   15554:	movw	r1, #0
   15558:	sub	r0, r1, r0
   1555c:	movw	r1, #65535	; 0xffff
   15560:	sdiv	r0, r1, r0
   15564:	str	r0, [fp, #-48]	; 0xffffffd0
   15568:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1556c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15570:	mvn	r2, #0
   15574:	sub	r1, r2, r1
   15578:	cmp	r0, r1
   1557c:	ble	15698 <__assert_fail@plt+0x4704>
   15580:	b	156b0 <__assert_fail@plt+0x471c>
   15584:	b	15588 <__assert_fail@plt+0x45f4>
   15588:	b	155e0 <__assert_fail@plt+0x464c>
   1558c:	b	155e0 <__assert_fail@plt+0x464c>
   15590:	ldr	r0, [fp, #8]
   15594:	cmn	r0, #1
   15598:	bne	155e0 <__assert_fail@plt+0x464c>
   1559c:	b	155a0 <__assert_fail@plt+0x460c>
   155a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   155a4:	add	r0, r0, #0
   155a8:	movw	r1, #0
   155ac:	cmp	r1, r0
   155b0:	blt	15698 <__assert_fail@plt+0x4704>
   155b4:	b	156b0 <__assert_fail@plt+0x471c>
   155b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   155bc:	movw	r1, #0
   155c0:	cmp	r1, r0
   155c4:	bge	156b0 <__assert_fail@plt+0x471c>
   155c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   155cc:	sub	r0, r0, #1
   155d0:	mvn	r1, #0
   155d4:	cmp	r1, r0
   155d8:	blt	15698 <__assert_fail@plt+0x4704>
   155dc:	b	156b0 <__assert_fail@plt+0x471c>
   155e0:	ldr	r0, [fp, #8]
   155e4:	movw	r1, #0
   155e8:	sdiv	r0, r1, r0
   155ec:	ldr	r1, [fp, #-24]	; 0xffffffe8
   155f0:	cmp	r0, r1
   155f4:	blt	15698 <__assert_fail@plt+0x4704>
   155f8:	b	156b0 <__assert_fail@plt+0x471c>
   155fc:	ldr	r0, [fp, #8]
   15600:	cmp	r0, #0
   15604:	bne	1560c <__assert_fail@plt+0x4678>
   15608:	b	156b0 <__assert_fail@plt+0x471c>
   1560c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15610:	cmp	r0, #0
   15614:	bge	15680 <__assert_fail@plt+0x46ec>
   15618:	b	1561c <__assert_fail@plt+0x4688>
   1561c:	b	15664 <__assert_fail@plt+0x46d0>
   15620:	b	15664 <__assert_fail@plt+0x46d0>
   15624:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15628:	cmn	r0, #1
   1562c:	bne	15664 <__assert_fail@plt+0x46d0>
   15630:	b	15634 <__assert_fail@plt+0x46a0>
   15634:	ldr	r0, [fp, #8]
   15638:	add	r0, r0, #0
   1563c:	movw	r1, #0
   15640:	cmp	r1, r0
   15644:	blt	15698 <__assert_fail@plt+0x4704>
   15648:	b	156b0 <__assert_fail@plt+0x471c>
   1564c:	ldr	r0, [fp, #8]
   15650:	sub	r0, r0, #1
   15654:	mvn	r1, #0
   15658:	cmp	r1, r0
   1565c:	blt	15698 <__assert_fail@plt+0x4704>
   15660:	b	156b0 <__assert_fail@plt+0x471c>
   15664:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15668:	movw	r1, #0
   1566c:	sdiv	r0, r1, r0
   15670:	ldr	r1, [fp, #8]
   15674:	cmp	r0, r1
   15678:	blt	15698 <__assert_fail@plt+0x4704>
   1567c:	b	156b0 <__assert_fail@plt+0x471c>
   15680:	ldr	r0, [fp, #8]
   15684:	movw	r1, #65535	; 0xffff
   15688:	sdiv	r0, r1, r0
   1568c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15690:	cmp	r0, r1
   15694:	bge	156b0 <__assert_fail@plt+0x471c>
   15698:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1569c:	ldr	r1, [fp, #8]
   156a0:	mul	r0, r0, r1
   156a4:	uxth	r0, r0
   156a8:	str	r0, [fp, #-28]	; 0xffffffe4
   156ac:	b	162b8 <__assert_fail@plt+0x5324>
   156b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   156b4:	ldr	r1, [fp, #8]
   156b8:	mul	r0, r0, r1
   156bc:	uxth	r0, r0
   156c0:	str	r0, [fp, #-28]	; 0xffffffe4
   156c4:	b	162c4 <__assert_fail@plt+0x5330>
   156c8:	b	156cc <__assert_fail@plt+0x4738>
   156cc:	b	156d0 <__assert_fail@plt+0x473c>
   156d0:	ldr	r0, [fp, #8]
   156d4:	cmp	r0, #0
   156d8:	bge	157dc <__assert_fail@plt+0x4848>
   156dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   156e0:	cmp	r0, #0
   156e4:	bge	15770 <__assert_fail@plt+0x47dc>
   156e8:	b	156ec <__assert_fail@plt+0x4758>
   156ec:	ldr	r0, [pc, #1984]	; 15eb4 <__assert_fail@plt+0x4f20>
   156f0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   156f4:	ldr	r2, [fp, #8]
   156f8:	sdiv	r0, r0, r2
   156fc:	cmp	r1, r0
   15700:	blt	1586c <__assert_fail@plt+0x48d8>
   15704:	b	15880 <__assert_fail@plt+0x48ec>
   15708:	b	1570c <__assert_fail@plt+0x4778>
   1570c:	ldr	r0, [pc, #2116]	; 15f58 <__assert_fail@plt+0x4fc4>
   15710:	ldr	r1, [fp, #8]
   15714:	cmp	r1, r0
   15718:	blt	15730 <__assert_fail@plt+0x479c>
   1571c:	b	1573c <__assert_fail@plt+0x47a8>
   15720:	ldr	r0, [fp, #8]
   15724:	movw	r1, #0
   15728:	cmp	r1, r0
   1572c:	bge	1573c <__assert_fail@plt+0x47a8>
   15730:	movw	r0, #0
   15734:	str	r0, [fp, #-52]	; 0xffffffcc
   15738:	b	15754 <__assert_fail@plt+0x47c0>
   1573c:	ldr	r0, [pc, #1904]	; 15eb4 <__assert_fail@plt+0x4f20>
   15740:	ldr	r1, [fp, #8]
   15744:	movw	r2, #0
   15748:	sub	r1, r2, r1
   1574c:	sdiv	r0, r0, r1
   15750:	str	r0, [fp, #-52]	; 0xffffffcc
   15754:	ldr	r0, [fp, #-52]	; 0xffffffcc
   15758:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1575c:	mvn	r2, #0
   15760:	sub	r1, r2, r1
   15764:	cmp	r0, r1
   15768:	ble	1586c <__assert_fail@plt+0x48d8>
   1576c:	b	15880 <__assert_fail@plt+0x48ec>
   15770:	ldr	r0, [fp, #8]
   15774:	cmn	r0, #1
   15778:	bne	157c0 <__assert_fail@plt+0x482c>
   1577c:	b	15780 <__assert_fail@plt+0x47ec>
   15780:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15784:	add	r0, r0, #-2147483648	; 0x80000000
   15788:	movw	r1, #0
   1578c:	cmp	r1, r0
   15790:	blt	1586c <__assert_fail@plt+0x48d8>
   15794:	b	15880 <__assert_fail@plt+0x48ec>
   15798:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1579c:	movw	r1, #0
   157a0:	cmp	r1, r0
   157a4:	bge	15880 <__assert_fail@plt+0x48ec>
   157a8:	ldr	r0, [pc, #1796]	; 15eb4 <__assert_fail@plt+0x4f20>
   157ac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   157b0:	sub	r1, r1, #1
   157b4:	cmp	r0, r1
   157b8:	blt	1586c <__assert_fail@plt+0x48d8>
   157bc:	b	15880 <__assert_fail@plt+0x48ec>
   157c0:	ldr	r0, [pc, #4080]	; 167b8 <__assert_fail@plt+0x5824>
   157c4:	ldr	r1, [fp, #8]
   157c8:	sdiv	r0, r0, r1
   157cc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   157d0:	cmp	r0, r1
   157d4:	blt	1586c <__assert_fail@plt+0x48d8>
   157d8:	b	15880 <__assert_fail@plt+0x48ec>
   157dc:	ldr	r0, [fp, #8]
   157e0:	cmp	r0, #0
   157e4:	bne	157ec <__assert_fail@plt+0x4858>
   157e8:	b	15880 <__assert_fail@plt+0x48ec>
   157ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   157f0:	cmp	r0, #0
   157f4:	bge	15854 <__assert_fail@plt+0x48c0>
   157f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   157fc:	cmn	r0, #1
   15800:	bne	15838 <__assert_fail@plt+0x48a4>
   15804:	b	15808 <__assert_fail@plt+0x4874>
   15808:	ldr	r0, [fp, #8]
   1580c:	add	r0, r0, #-2147483648	; 0x80000000
   15810:	movw	r1, #0
   15814:	cmp	r1, r0
   15818:	blt	1586c <__assert_fail@plt+0x48d8>
   1581c:	b	15880 <__assert_fail@plt+0x48ec>
   15820:	ldr	r0, [pc, #1676]	; 15eb4 <__assert_fail@plt+0x4f20>
   15824:	ldr	r1, [fp, #8]
   15828:	sub	r1, r1, #1
   1582c:	cmp	r0, r1
   15830:	blt	1586c <__assert_fail@plt+0x48d8>
   15834:	b	15880 <__assert_fail@plt+0x48ec>
   15838:	ldr	r0, [pc, #3960]	; 167b8 <__assert_fail@plt+0x5824>
   1583c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15840:	sdiv	r0, r0, r1
   15844:	ldr	r1, [fp, #8]
   15848:	cmp	r0, r1
   1584c:	blt	1586c <__assert_fail@plt+0x48d8>
   15850:	b	15880 <__assert_fail@plt+0x48ec>
   15854:	ldr	r0, [pc, #1624]	; 15eb4 <__assert_fail@plt+0x4f20>
   15858:	ldr	r1, [fp, #8]
   1585c:	sdiv	r0, r0, r1
   15860:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15864:	cmp	r0, r1
   15868:	bge	15880 <__assert_fail@plt+0x48ec>
   1586c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15870:	ldr	r1, [fp, #8]
   15874:	mul	r0, r0, r1
   15878:	str	r0, [fp, #-28]	; 0xffffffe4
   1587c:	b	162b8 <__assert_fail@plt+0x5324>
   15880:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15884:	ldr	r1, [fp, #8]
   15888:	mul	r0, r0, r1
   1588c:	str	r0, [fp, #-28]	; 0xffffffe4
   15890:	b	162c4 <__assert_fail@plt+0x5330>
   15894:	ldr	r0, [fp, #8]
   15898:	cmp	r0, #0
   1589c:	bge	159ac <__assert_fail@plt+0x4a18>
   158a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   158a4:	cmp	r0, #0
   158a8:	bge	15934 <__assert_fail@plt+0x49a0>
   158ac:	b	158cc <__assert_fail@plt+0x4938>
   158b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   158b4:	ldr	r1, [fp, #8]
   158b8:	mvn	r2, #0
   158bc:	udiv	r1, r2, r1
   158c0:	cmp	r0, r1
   158c4:	bcc	15a48 <__assert_fail@plt+0x4ab4>
   158c8:	b	15a5c <__assert_fail@plt+0x4ac8>
   158cc:	b	158d0 <__assert_fail@plt+0x493c>
   158d0:	ldr	r0, [pc, #1664]	; 15f58 <__assert_fail@plt+0x4fc4>
   158d4:	ldr	r1, [fp, #8]
   158d8:	cmp	r1, r0
   158dc:	blt	158f4 <__assert_fail@plt+0x4960>
   158e0:	b	15900 <__assert_fail@plt+0x496c>
   158e4:	ldr	r0, [fp, #8]
   158e8:	movw	r1, #0
   158ec:	cmp	r1, r0
   158f0:	bge	15900 <__assert_fail@plt+0x496c>
   158f4:	movw	r0, #1
   158f8:	str	r0, [fp, #-56]	; 0xffffffc8
   158fc:	b	15918 <__assert_fail@plt+0x4984>
   15900:	ldr	r0, [fp, #8]
   15904:	movw	r1, #0
   15908:	sub	r0, r1, r0
   1590c:	mvn	r1, #0
   15910:	udiv	r0, r1, r0
   15914:	str	r0, [fp, #-56]	; 0xffffffc8
   15918:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1591c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15920:	mvn	r2, #0
   15924:	sub	r1, r2, r1
   15928:	cmp	r0, r1
   1592c:	bls	15a48 <__assert_fail@plt+0x4ab4>
   15930:	b	15a5c <__assert_fail@plt+0x4ac8>
   15934:	b	15938 <__assert_fail@plt+0x49a4>
   15938:	b	15990 <__assert_fail@plt+0x49fc>
   1593c:	b	15990 <__assert_fail@plt+0x49fc>
   15940:	ldr	r0, [fp, #8]
   15944:	cmn	r0, #1
   15948:	bne	15990 <__assert_fail@plt+0x49fc>
   1594c:	b	15950 <__assert_fail@plt+0x49bc>
   15950:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15954:	add	r0, r0, #0
   15958:	movw	r1, #0
   1595c:	cmp	r1, r0
   15960:	blt	15a48 <__assert_fail@plt+0x4ab4>
   15964:	b	15a5c <__assert_fail@plt+0x4ac8>
   15968:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1596c:	movw	r1, #0
   15970:	cmp	r1, r0
   15974:	bge	15a5c <__assert_fail@plt+0x4ac8>
   15978:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1597c:	sub	r0, r0, #1
   15980:	mvn	r1, #0
   15984:	cmp	r1, r0
   15988:	blt	15a48 <__assert_fail@plt+0x4ab4>
   1598c:	b	15a5c <__assert_fail@plt+0x4ac8>
   15990:	ldr	r0, [fp, #8]
   15994:	movw	r1, #0
   15998:	sdiv	r0, r1, r0
   1599c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   159a0:	cmp	r0, r1
   159a4:	blt	15a48 <__assert_fail@plt+0x4ab4>
   159a8:	b	15a5c <__assert_fail@plt+0x4ac8>
   159ac:	ldr	r0, [fp, #8]
   159b0:	cmp	r0, #0
   159b4:	bne	159bc <__assert_fail@plt+0x4a28>
   159b8:	b	15a5c <__assert_fail@plt+0x4ac8>
   159bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   159c0:	cmp	r0, #0
   159c4:	bge	15a30 <__assert_fail@plt+0x4a9c>
   159c8:	b	159cc <__assert_fail@plt+0x4a38>
   159cc:	b	15a14 <__assert_fail@plt+0x4a80>
   159d0:	b	15a14 <__assert_fail@plt+0x4a80>
   159d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   159d8:	cmn	r0, #1
   159dc:	bne	15a14 <__assert_fail@plt+0x4a80>
   159e0:	b	159e4 <__assert_fail@plt+0x4a50>
   159e4:	ldr	r0, [fp, #8]
   159e8:	add	r0, r0, #0
   159ec:	movw	r1, #0
   159f0:	cmp	r1, r0
   159f4:	blt	15a48 <__assert_fail@plt+0x4ab4>
   159f8:	b	15a5c <__assert_fail@plt+0x4ac8>
   159fc:	ldr	r0, [fp, #8]
   15a00:	sub	r0, r0, #1
   15a04:	mvn	r1, #0
   15a08:	cmp	r1, r0
   15a0c:	blt	15a48 <__assert_fail@plt+0x4ab4>
   15a10:	b	15a5c <__assert_fail@plt+0x4ac8>
   15a14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15a18:	movw	r1, #0
   15a1c:	sdiv	r0, r1, r0
   15a20:	ldr	r1, [fp, #8]
   15a24:	cmp	r0, r1
   15a28:	blt	15a48 <__assert_fail@plt+0x4ab4>
   15a2c:	b	15a5c <__assert_fail@plt+0x4ac8>
   15a30:	ldr	r0, [fp, #8]
   15a34:	mvn	r1, #0
   15a38:	udiv	r0, r1, r0
   15a3c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15a40:	cmp	r0, r1
   15a44:	bcs	15a5c <__assert_fail@plt+0x4ac8>
   15a48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15a4c:	ldr	r1, [fp, #8]
   15a50:	mul	r0, r0, r1
   15a54:	str	r0, [fp, #-28]	; 0xffffffe4
   15a58:	b	162b8 <__assert_fail@plt+0x5324>
   15a5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15a60:	ldr	r1, [fp, #8]
   15a64:	mul	r0, r0, r1
   15a68:	str	r0, [fp, #-28]	; 0xffffffe4
   15a6c:	b	162c4 <__assert_fail@plt+0x5330>
   15a70:	b	15a74 <__assert_fail@plt+0x4ae0>
   15a74:	b	15a78 <__assert_fail@plt+0x4ae4>
   15a78:	ldr	r0, [fp, #8]
   15a7c:	cmp	r0, #0
   15a80:	bge	15b84 <__assert_fail@plt+0x4bf0>
   15a84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15a88:	cmp	r0, #0
   15a8c:	bge	15b18 <__assert_fail@plt+0x4b84>
   15a90:	b	15a94 <__assert_fail@plt+0x4b00>
   15a94:	ldr	r0, [pc, #1048]	; 15eb4 <__assert_fail@plt+0x4f20>
   15a98:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15a9c:	ldr	r2, [fp, #8]
   15aa0:	sdiv	r0, r0, r2
   15aa4:	cmp	r1, r0
   15aa8:	blt	15c14 <__assert_fail@plt+0x4c80>
   15aac:	b	15c28 <__assert_fail@plt+0x4c94>
   15ab0:	b	15ab4 <__assert_fail@plt+0x4b20>
   15ab4:	ldr	r0, [pc, #1180]	; 15f58 <__assert_fail@plt+0x4fc4>
   15ab8:	ldr	r1, [fp, #8]
   15abc:	cmp	r1, r0
   15ac0:	blt	15ad8 <__assert_fail@plt+0x4b44>
   15ac4:	b	15ae4 <__assert_fail@plt+0x4b50>
   15ac8:	ldr	r0, [fp, #8]
   15acc:	movw	r1, #0
   15ad0:	cmp	r1, r0
   15ad4:	bge	15ae4 <__assert_fail@plt+0x4b50>
   15ad8:	movw	r0, #0
   15adc:	str	r0, [fp, #-60]	; 0xffffffc4
   15ae0:	b	15afc <__assert_fail@plt+0x4b68>
   15ae4:	ldr	r0, [pc, #968]	; 15eb4 <__assert_fail@plt+0x4f20>
   15ae8:	ldr	r1, [fp, #8]
   15aec:	movw	r2, #0
   15af0:	sub	r1, r2, r1
   15af4:	sdiv	r0, r0, r1
   15af8:	str	r0, [fp, #-60]	; 0xffffffc4
   15afc:	ldr	r0, [fp, #-60]	; 0xffffffc4
   15b00:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15b04:	mvn	r2, #0
   15b08:	sub	r1, r2, r1
   15b0c:	cmp	r0, r1
   15b10:	ble	15c14 <__assert_fail@plt+0x4c80>
   15b14:	b	15c28 <__assert_fail@plt+0x4c94>
   15b18:	ldr	r0, [fp, #8]
   15b1c:	cmn	r0, #1
   15b20:	bne	15b68 <__assert_fail@plt+0x4bd4>
   15b24:	b	15b28 <__assert_fail@plt+0x4b94>
   15b28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15b2c:	add	r0, r0, #-2147483648	; 0x80000000
   15b30:	movw	r1, #0
   15b34:	cmp	r1, r0
   15b38:	blt	15c14 <__assert_fail@plt+0x4c80>
   15b3c:	b	15c28 <__assert_fail@plt+0x4c94>
   15b40:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15b44:	movw	r1, #0
   15b48:	cmp	r1, r0
   15b4c:	bge	15c28 <__assert_fail@plt+0x4c94>
   15b50:	ldr	r0, [pc, #860]	; 15eb4 <__assert_fail@plt+0x4f20>
   15b54:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15b58:	sub	r1, r1, #1
   15b5c:	cmp	r0, r1
   15b60:	blt	15c14 <__assert_fail@plt+0x4c80>
   15b64:	b	15c28 <__assert_fail@plt+0x4c94>
   15b68:	ldr	r0, [pc, #3144]	; 167b8 <__assert_fail@plt+0x5824>
   15b6c:	ldr	r1, [fp, #8]
   15b70:	sdiv	r0, r0, r1
   15b74:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15b78:	cmp	r0, r1
   15b7c:	blt	15c14 <__assert_fail@plt+0x4c80>
   15b80:	b	15c28 <__assert_fail@plt+0x4c94>
   15b84:	ldr	r0, [fp, #8]
   15b88:	cmp	r0, #0
   15b8c:	bne	15b94 <__assert_fail@plt+0x4c00>
   15b90:	b	15c28 <__assert_fail@plt+0x4c94>
   15b94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15b98:	cmp	r0, #0
   15b9c:	bge	15bfc <__assert_fail@plt+0x4c68>
   15ba0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15ba4:	cmn	r0, #1
   15ba8:	bne	15be0 <__assert_fail@plt+0x4c4c>
   15bac:	b	15bb0 <__assert_fail@plt+0x4c1c>
   15bb0:	ldr	r0, [fp, #8]
   15bb4:	add	r0, r0, #-2147483648	; 0x80000000
   15bb8:	movw	r1, #0
   15bbc:	cmp	r1, r0
   15bc0:	blt	15c14 <__assert_fail@plt+0x4c80>
   15bc4:	b	15c28 <__assert_fail@plt+0x4c94>
   15bc8:	ldr	r0, [pc, #740]	; 15eb4 <__assert_fail@plt+0x4f20>
   15bcc:	ldr	r1, [fp, #8]
   15bd0:	sub	r1, r1, #1
   15bd4:	cmp	r0, r1
   15bd8:	blt	15c14 <__assert_fail@plt+0x4c80>
   15bdc:	b	15c28 <__assert_fail@plt+0x4c94>
   15be0:	ldr	r0, [pc, #3024]	; 167b8 <__assert_fail@plt+0x5824>
   15be4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15be8:	sdiv	r0, r0, r1
   15bec:	ldr	r1, [fp, #8]
   15bf0:	cmp	r0, r1
   15bf4:	blt	15c14 <__assert_fail@plt+0x4c80>
   15bf8:	b	15c28 <__assert_fail@plt+0x4c94>
   15bfc:	ldr	r0, [pc, #688]	; 15eb4 <__assert_fail@plt+0x4f20>
   15c00:	ldr	r1, [fp, #8]
   15c04:	sdiv	r0, r0, r1
   15c08:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15c0c:	cmp	r0, r1
   15c10:	bge	15c28 <__assert_fail@plt+0x4c94>
   15c14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15c18:	ldr	r1, [fp, #8]
   15c1c:	mul	r0, r0, r1
   15c20:	str	r0, [fp, #-28]	; 0xffffffe4
   15c24:	b	162b8 <__assert_fail@plt+0x5324>
   15c28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15c2c:	ldr	r1, [fp, #8]
   15c30:	mul	r0, r0, r1
   15c34:	str	r0, [fp, #-28]	; 0xffffffe4
   15c38:	b	162c4 <__assert_fail@plt+0x5330>
   15c3c:	ldr	r0, [fp, #8]
   15c40:	cmp	r0, #0
   15c44:	bge	15d54 <__assert_fail@plt+0x4dc0>
   15c48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15c4c:	cmp	r0, #0
   15c50:	bge	15cdc <__assert_fail@plt+0x4d48>
   15c54:	b	15c74 <__assert_fail@plt+0x4ce0>
   15c58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15c5c:	ldr	r1, [fp, #8]
   15c60:	mvn	r2, #0
   15c64:	udiv	r1, r2, r1
   15c68:	cmp	r0, r1
   15c6c:	bcc	15df0 <__assert_fail@plt+0x4e5c>
   15c70:	b	15e04 <__assert_fail@plt+0x4e70>
   15c74:	b	15c78 <__assert_fail@plt+0x4ce4>
   15c78:	ldr	r0, [pc, #728]	; 15f58 <__assert_fail@plt+0x4fc4>
   15c7c:	ldr	r1, [fp, #8]
   15c80:	cmp	r1, r0
   15c84:	blt	15c9c <__assert_fail@plt+0x4d08>
   15c88:	b	15ca8 <__assert_fail@plt+0x4d14>
   15c8c:	ldr	r0, [fp, #8]
   15c90:	movw	r1, #0
   15c94:	cmp	r1, r0
   15c98:	bge	15ca8 <__assert_fail@plt+0x4d14>
   15c9c:	movw	r0, #1
   15ca0:	str	r0, [fp, #-64]	; 0xffffffc0
   15ca4:	b	15cc0 <__assert_fail@plt+0x4d2c>
   15ca8:	ldr	r0, [fp, #8]
   15cac:	movw	r1, #0
   15cb0:	sub	r0, r1, r0
   15cb4:	mvn	r1, #0
   15cb8:	udiv	r0, r1, r0
   15cbc:	str	r0, [fp, #-64]	; 0xffffffc0
   15cc0:	ldr	r0, [fp, #-64]	; 0xffffffc0
   15cc4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15cc8:	mvn	r2, #0
   15ccc:	sub	r1, r2, r1
   15cd0:	cmp	r0, r1
   15cd4:	bls	15df0 <__assert_fail@plt+0x4e5c>
   15cd8:	b	15e04 <__assert_fail@plt+0x4e70>
   15cdc:	b	15ce0 <__assert_fail@plt+0x4d4c>
   15ce0:	b	15d38 <__assert_fail@plt+0x4da4>
   15ce4:	b	15d38 <__assert_fail@plt+0x4da4>
   15ce8:	ldr	r0, [fp, #8]
   15cec:	cmn	r0, #1
   15cf0:	bne	15d38 <__assert_fail@plt+0x4da4>
   15cf4:	b	15cf8 <__assert_fail@plt+0x4d64>
   15cf8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15cfc:	add	r0, r0, #0
   15d00:	movw	r1, #0
   15d04:	cmp	r1, r0
   15d08:	blt	15df0 <__assert_fail@plt+0x4e5c>
   15d0c:	b	15e04 <__assert_fail@plt+0x4e70>
   15d10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15d14:	movw	r1, #0
   15d18:	cmp	r1, r0
   15d1c:	bge	15e04 <__assert_fail@plt+0x4e70>
   15d20:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15d24:	sub	r0, r0, #1
   15d28:	mvn	r1, #0
   15d2c:	cmp	r1, r0
   15d30:	blt	15df0 <__assert_fail@plt+0x4e5c>
   15d34:	b	15e04 <__assert_fail@plt+0x4e70>
   15d38:	ldr	r0, [fp, #8]
   15d3c:	movw	r1, #0
   15d40:	sdiv	r0, r1, r0
   15d44:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15d48:	cmp	r0, r1
   15d4c:	blt	15df0 <__assert_fail@plt+0x4e5c>
   15d50:	b	15e04 <__assert_fail@plt+0x4e70>
   15d54:	ldr	r0, [fp, #8]
   15d58:	cmp	r0, #0
   15d5c:	bne	15d64 <__assert_fail@plt+0x4dd0>
   15d60:	b	15e04 <__assert_fail@plt+0x4e70>
   15d64:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15d68:	cmp	r0, #0
   15d6c:	bge	15dd8 <__assert_fail@plt+0x4e44>
   15d70:	b	15d74 <__assert_fail@plt+0x4de0>
   15d74:	b	15dbc <__assert_fail@plt+0x4e28>
   15d78:	b	15dbc <__assert_fail@plt+0x4e28>
   15d7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15d80:	cmn	r0, #1
   15d84:	bne	15dbc <__assert_fail@plt+0x4e28>
   15d88:	b	15d8c <__assert_fail@plt+0x4df8>
   15d8c:	ldr	r0, [fp, #8]
   15d90:	add	r0, r0, #0
   15d94:	movw	r1, #0
   15d98:	cmp	r1, r0
   15d9c:	blt	15df0 <__assert_fail@plt+0x4e5c>
   15da0:	b	15e04 <__assert_fail@plt+0x4e70>
   15da4:	ldr	r0, [fp, #8]
   15da8:	sub	r0, r0, #1
   15dac:	mvn	r1, #0
   15db0:	cmp	r1, r0
   15db4:	blt	15df0 <__assert_fail@plt+0x4e5c>
   15db8:	b	15e04 <__assert_fail@plt+0x4e70>
   15dbc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15dc0:	movw	r1, #0
   15dc4:	sdiv	r0, r1, r0
   15dc8:	ldr	r1, [fp, #8]
   15dcc:	cmp	r0, r1
   15dd0:	blt	15df0 <__assert_fail@plt+0x4e5c>
   15dd4:	b	15e04 <__assert_fail@plt+0x4e70>
   15dd8:	ldr	r0, [fp, #8]
   15ddc:	mvn	r1, #0
   15de0:	udiv	r0, r1, r0
   15de4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15de8:	cmp	r0, r1
   15dec:	bcs	15e04 <__assert_fail@plt+0x4e70>
   15df0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15df4:	ldr	r1, [fp, #8]
   15df8:	mul	r0, r0, r1
   15dfc:	str	r0, [fp, #-28]	; 0xffffffe4
   15e00:	b	162b8 <__assert_fail@plt+0x5324>
   15e04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15e08:	ldr	r1, [fp, #8]
   15e0c:	mul	r0, r0, r1
   15e10:	str	r0, [fp, #-28]	; 0xffffffe4
   15e14:	b	162c4 <__assert_fail@plt+0x5330>
   15e18:	b	15e1c <__assert_fail@plt+0x4e88>
   15e1c:	ldr	r0, [fp, #8]
   15e20:	cmp	r0, #0
   15e24:	bge	15f94 <__assert_fail@plt+0x5000>
   15e28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15e2c:	cmp	r0, #0
   15e30:	bge	15f0c <__assert_fail@plt+0x4f78>
   15e34:	b	15e38 <__assert_fail@plt+0x4ea4>
   15e38:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15e3c:	ldr	r1, [fp, #8]
   15e40:	asr	r3, r1, #31
   15e44:	mvn	r2, #0
   15e48:	mvn	ip, #-2147483648	; 0x80000000
   15e4c:	str	r0, [fp, #-68]	; 0xffffffbc
   15e50:	mov	r0, r2
   15e54:	str	r1, [fp, #-72]	; 0xffffffb8
   15e58:	mov	r1, ip
   15e5c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   15e60:	bl	1ba50 <__assert_fail@plt+0xaabc>
   15e64:	ldr	r2, [fp, #-68]	; 0xffffffbc
   15e68:	subs	r0, r2, r0
   15e6c:	rscs	r1, r1, r2, asr #31
   15e70:	blt	1605c <__assert_fail@plt+0x50c8>
   15e74:	b	16070 <__assert_fail@plt+0x50dc>
   15e78:	b	15e7c <__assert_fail@plt+0x4ee8>
   15e7c:	ldr	r0, [pc, #212]	; 15f58 <__assert_fail@plt+0x4fc4>
   15e80:	ldr	r1, [fp, #8]
   15e84:	cmp	r1, r0
   15e88:	blt	15ea0 <__assert_fail@plt+0x4f0c>
   15e8c:	b	15eb8 <__assert_fail@plt+0x4f24>
   15e90:	ldr	r0, [fp, #8]
   15e94:	movw	r1, #0
   15e98:	cmp	r1, r0
   15e9c:	bge	15eb8 <__assert_fail@plt+0x4f24>
   15ea0:	mov	r0, #0
   15ea4:	mvn	r1, #0
   15ea8:	str	r1, [fp, #-76]	; 0xffffffb4
   15eac:	str	r0, [fp, #-80]	; 0xffffffb0
   15eb0:	b	15eec <__assert_fail@plt+0x4f58>
   15eb4:	svcvc	0x00ffffff
   15eb8:	ldr	r0, [fp, #8]
   15ebc:	rsb	r0, r0, #0
   15ec0:	asr	r3, r0, #31
   15ec4:	mvn	r1, #0
   15ec8:	mvn	r2, #-2147483648	; 0x80000000
   15ecc:	str	r0, [fp, #-84]	; 0xffffffac
   15ed0:	mov	r0, r1
   15ed4:	mov	r1, r2
   15ed8:	ldr	r2, [fp, #-84]	; 0xffffffac
   15edc:	bl	1ba50 <__assert_fail@plt+0xaabc>
   15ee0:	str	r0, [fp, #-76]	; 0xffffffb4
   15ee4:	str	r1, [fp, #-80]	; 0xffffffb0
   15ee8:	b	15eec <__assert_fail@plt+0x4f58>
   15eec:	ldr	r0, [fp, #-80]	; 0xffffffb0
   15ef0:	ldr	r1, [fp, #-76]	; 0xffffffb4
   15ef4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15ef8:	mvn	r2, r2
   15efc:	subs	r1, r2, r1
   15f00:	rscs	r0, r0, r2, asr #31
   15f04:	bge	1605c <__assert_fail@plt+0x50c8>
   15f08:	b	16070 <__assert_fail@plt+0x50dc>
   15f0c:	ldr	r0, [fp, #8]
   15f10:	cmn	r0, #1
   15f14:	bne	15f5c <__assert_fail@plt+0x4fc8>
   15f18:	b	15f1c <__assert_fail@plt+0x4f88>
   15f1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15f20:	mov	r1, #-2147483648	; 0x80000000
   15f24:	add	r1, r1, r0, asr #31
   15f28:	rsbs	r0, r0, #0
   15f2c:	rscs	r1, r1, #0
   15f30:	blt	1605c <__assert_fail@plt+0x50c8>
   15f34:	b	16070 <__assert_fail@plt+0x50dc>
   15f38:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15f3c:	movw	r1, #0
   15f40:	cmp	r1, r0
   15f44:	bge	16070 <__assert_fail@plt+0x50dc>
   15f48:	mov	r0, #0
   15f4c:	cmp	r0, #0
   15f50:	bne	1605c <__assert_fail@plt+0x50c8>
   15f54:	b	16070 <__assert_fail@plt+0x50dc>
   15f58:	andhi	r0, r0, r1
   15f5c:	ldr	r0, [fp, #8]
   15f60:	asr	r3, r0, #31
   15f64:	mov	r1, #0
   15f68:	mov	r2, #-2147483648	; 0x80000000
   15f6c:	str	r0, [fp, #-88]	; 0xffffffa8
   15f70:	mov	r0, r1
   15f74:	mov	r1, r2
   15f78:	ldr	r2, [fp, #-88]	; 0xffffffa8
   15f7c:	bl	1ba50 <__assert_fail@plt+0xaabc>
   15f80:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15f84:	subs	r0, r0, r2
   15f88:	sbcs	r1, r1, r2, asr #31
   15f8c:	blt	1605c <__assert_fail@plt+0x50c8>
   15f90:	b	16070 <__assert_fail@plt+0x50dc>
   15f94:	ldr	r0, [fp, #8]
   15f98:	cmp	r0, #0
   15f9c:	bne	15fa4 <__assert_fail@plt+0x5010>
   15fa0:	b	16070 <__assert_fail@plt+0x50dc>
   15fa4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15fa8:	cmp	r0, #0
   15fac:	bge	16024 <__assert_fail@plt+0x5090>
   15fb0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15fb4:	cmn	r0, #1
   15fb8:	bne	15fec <__assert_fail@plt+0x5058>
   15fbc:	b	15fc0 <__assert_fail@plt+0x502c>
   15fc0:	ldr	r0, [fp, #8]
   15fc4:	mov	r1, #-2147483648	; 0x80000000
   15fc8:	add	r1, r1, r0, asr #31
   15fcc:	rsbs	r0, r0, #0
   15fd0:	rscs	r1, r1, #0
   15fd4:	blt	1605c <__assert_fail@plt+0x50c8>
   15fd8:	b	16070 <__assert_fail@plt+0x50dc>
   15fdc:	mov	r0, #0
   15fe0:	cmp	r0, #0
   15fe4:	bne	1605c <__assert_fail@plt+0x50c8>
   15fe8:	b	16070 <__assert_fail@plt+0x50dc>
   15fec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15ff0:	asr	r3, r0, #31
   15ff4:	mov	r1, #0
   15ff8:	mov	r2, #-2147483648	; 0x80000000
   15ffc:	str	r0, [fp, #-92]	; 0xffffffa4
   16000:	mov	r0, r1
   16004:	mov	r1, r2
   16008:	ldr	r2, [fp, #-92]	; 0xffffffa4
   1600c:	bl	1ba50 <__assert_fail@plt+0xaabc>
   16010:	ldr	r2, [fp, #8]
   16014:	subs	r0, r0, r2
   16018:	sbcs	r1, r1, r2, asr #31
   1601c:	blt	1605c <__assert_fail@plt+0x50c8>
   16020:	b	16070 <__assert_fail@plt+0x50dc>
   16024:	ldr	r0, [fp, #8]
   16028:	asr	r3, r0, #31
   1602c:	mvn	r1, #0
   16030:	mvn	r2, #-2147483648	; 0x80000000
   16034:	str	r0, [fp, #-96]	; 0xffffffa0
   16038:	mov	r0, r1
   1603c:	mov	r1, r2
   16040:	ldr	r2, [fp, #-96]	; 0xffffffa0
   16044:	bl	1ba50 <__assert_fail@plt+0xaabc>
   16048:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1604c:	subs	r0, r0, r2
   16050:	sbcs	r1, r1, r2, asr #31
   16054:	bge	16070 <__assert_fail@plt+0x50dc>
   16058:	b	1605c <__assert_fail@plt+0x50c8>
   1605c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16060:	ldr	r1, [fp, #8]
   16064:	mul	r0, r0, r1
   16068:	str	r0, [fp, #-28]	; 0xffffffe4
   1606c:	b	162b8 <__assert_fail@plt+0x5324>
   16070:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16074:	ldr	r1, [fp, #8]
   16078:	mul	r0, r0, r1
   1607c:	str	r0, [fp, #-28]	; 0xffffffe4
   16080:	b	162c4 <__assert_fail@plt+0x5330>
   16084:	ldr	r0, [fp, #8]
   16088:	cmp	r0, #0
   1608c:	bge	161dc <__assert_fail@plt+0x5248>
   16090:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16094:	cmp	r0, #0
   16098:	bge	16164 <__assert_fail@plt+0x51d0>
   1609c:	b	160dc <__assert_fail@plt+0x5148>
   160a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   160a4:	ldr	r1, [fp, #8]
   160a8:	asr	r3, r1, #31
   160ac:	mvn	r2, #0
   160b0:	str	r0, [fp, #-100]	; 0xffffff9c
   160b4:	mov	r0, r2
   160b8:	str	r1, [fp, #-104]	; 0xffffff98
   160bc:	mov	r1, r2
   160c0:	ldr	r2, [fp, #-104]	; 0xffffff98
   160c4:	bl	1bb24 <__assert_fail@plt+0xab90>
   160c8:	ldr	r2, [fp, #-100]	; 0xffffff9c
   160cc:	subs	r0, r2, r0
   160d0:	rscs	r1, r1, r2, asr #31
   160d4:	bcc	16290 <__assert_fail@plt+0x52fc>
   160d8:	b	162a4 <__assert_fail@plt+0x5310>
   160dc:	b	160e0 <__assert_fail@plt+0x514c>
   160e0:	ldr	r0, [pc, #-400]	; 15f58 <__assert_fail@plt+0x4fc4>
   160e4:	ldr	r1, [fp, #8]
   160e8:	cmp	r1, r0
   160ec:	blt	16104 <__assert_fail@plt+0x5170>
   160f0:	b	16118 <__assert_fail@plt+0x5184>
   160f4:	ldr	r0, [fp, #8]
   160f8:	movw	r1, #0
   160fc:	cmp	r1, r0
   16100:	bge	16118 <__assert_fail@plt+0x5184>
   16104:	mov	r0, #1
   16108:	mvn	r1, #0
   1610c:	str	r1, [sp, #108]	; 0x6c
   16110:	str	r0, [sp, #104]	; 0x68
   16114:	b	16144 <__assert_fail@plt+0x51b0>
   16118:	ldr	r0, [fp, #8]
   1611c:	rsb	r0, r0, #0
   16120:	asr	r3, r0, #31
   16124:	mvn	r1, #0
   16128:	str	r0, [sp, #100]	; 0x64
   1612c:	mov	r0, r1
   16130:	ldr	r2, [sp, #100]	; 0x64
   16134:	bl	1bb24 <__assert_fail@plt+0xab90>
   16138:	str	r0, [sp, #108]	; 0x6c
   1613c:	str	r1, [sp, #104]	; 0x68
   16140:	b	16144 <__assert_fail@plt+0x51b0>
   16144:	ldr	r0, [sp, #104]	; 0x68
   16148:	ldr	r1, [sp, #108]	; 0x6c
   1614c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16150:	mvn	r2, r2
   16154:	subs	r1, r2, r1
   16158:	rscs	r0, r0, r2, asr #31
   1615c:	bcs	16290 <__assert_fail@plt+0x52fc>
   16160:	b	162a4 <__assert_fail@plt+0x5310>
   16164:	b	16168 <__assert_fail@plt+0x51d4>
   16168:	b	161c0 <__assert_fail@plt+0x522c>
   1616c:	b	161c0 <__assert_fail@plt+0x522c>
   16170:	ldr	r0, [fp, #8]
   16174:	cmn	r0, #1
   16178:	bne	161c0 <__assert_fail@plt+0x522c>
   1617c:	b	16180 <__assert_fail@plt+0x51ec>
   16180:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16184:	add	r0, r0, #0
   16188:	movw	r1, #0
   1618c:	cmp	r1, r0
   16190:	blt	16290 <__assert_fail@plt+0x52fc>
   16194:	b	162a4 <__assert_fail@plt+0x5310>
   16198:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1619c:	movw	r1, #0
   161a0:	cmp	r1, r0
   161a4:	bge	162a4 <__assert_fail@plt+0x5310>
   161a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   161ac:	sub	r0, r0, #1
   161b0:	mvn	r1, #0
   161b4:	cmp	r1, r0
   161b8:	blt	16290 <__assert_fail@plt+0x52fc>
   161bc:	b	162a4 <__assert_fail@plt+0x5310>
   161c0:	ldr	r0, [fp, #8]
   161c4:	movw	r1, #0
   161c8:	sdiv	r0, r1, r0
   161cc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   161d0:	cmp	r0, r1
   161d4:	blt	16290 <__assert_fail@plt+0x52fc>
   161d8:	b	162a4 <__assert_fail@plt+0x5310>
   161dc:	ldr	r0, [fp, #8]
   161e0:	cmp	r0, #0
   161e4:	bne	161ec <__assert_fail@plt+0x5258>
   161e8:	b	162a4 <__assert_fail@plt+0x5310>
   161ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   161f0:	cmp	r0, #0
   161f4:	bge	16260 <__assert_fail@plt+0x52cc>
   161f8:	b	161fc <__assert_fail@plt+0x5268>
   161fc:	b	16244 <__assert_fail@plt+0x52b0>
   16200:	b	16244 <__assert_fail@plt+0x52b0>
   16204:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16208:	cmn	r0, #1
   1620c:	bne	16244 <__assert_fail@plt+0x52b0>
   16210:	b	16214 <__assert_fail@plt+0x5280>
   16214:	ldr	r0, [fp, #8]
   16218:	add	r0, r0, #0
   1621c:	movw	r1, #0
   16220:	cmp	r1, r0
   16224:	blt	16290 <__assert_fail@plt+0x52fc>
   16228:	b	162a4 <__assert_fail@plt+0x5310>
   1622c:	ldr	r0, [fp, #8]
   16230:	sub	r0, r0, #1
   16234:	mvn	r1, #0
   16238:	cmp	r1, r0
   1623c:	blt	16290 <__assert_fail@plt+0x52fc>
   16240:	b	162a4 <__assert_fail@plt+0x5310>
   16244:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16248:	movw	r1, #0
   1624c:	sdiv	r0, r1, r0
   16250:	ldr	r1, [fp, #8]
   16254:	cmp	r0, r1
   16258:	blt	16290 <__assert_fail@plt+0x52fc>
   1625c:	b	162a4 <__assert_fail@plt+0x5310>
   16260:	ldr	r0, [fp, #8]
   16264:	asr	r3, r0, #31
   16268:	mvn	r1, #0
   1626c:	str	r0, [sp, #96]	; 0x60
   16270:	mov	r0, r1
   16274:	ldr	r2, [sp, #96]	; 0x60
   16278:	bl	1bb24 <__assert_fail@plt+0xab90>
   1627c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16280:	subs	r0, r0, r2
   16284:	sbcs	r1, r1, r2, asr #31
   16288:	bcs	162a4 <__assert_fail@plt+0x5310>
   1628c:	b	16290 <__assert_fail@plt+0x52fc>
   16290:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16294:	ldr	r1, [fp, #8]
   16298:	mul	r0, r0, r1
   1629c:	str	r0, [fp, #-28]	; 0xffffffe4
   162a0:	b	162b8 <__assert_fail@plt+0x5324>
   162a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   162a8:	ldr	r1, [fp, #8]
   162ac:	mul	r0, r0, r1
   162b0:	str	r0, [fp, #-28]	; 0xffffffe4
   162b4:	b	162c4 <__assert_fail@plt+0x5330>
   162b8:	ldr	r0, [pc, #-1036]	; 15eb4 <__assert_fail@plt+0x4f20>
   162bc:	str	r0, [sp, #92]	; 0x5c
   162c0:	b	162e4 <__assert_fail@plt+0x5350>
   162c4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   162c8:	cmp	r0, #64	; 0x40
   162cc:	movw	r0, #0
   162d0:	movlt	r0, #1
   162d4:	tst	r0, #1
   162d8:	movw	r0, #64	; 0x40
   162dc:	moveq	r0, #0
   162e0:	str	r0, [sp, #92]	; 0x5c
   162e4:	ldr	r0, [sp, #92]	; 0x5c
   162e8:	str	r0, [fp, #-32]	; 0xffffffe0
   162ec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   162f0:	cmp	r0, #0
   162f4:	beq	16324 <__assert_fail@plt+0x5390>
   162f8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   162fc:	ldr	r1, [fp, #8]
   16300:	sdiv	r0, r0, r1
   16304:	str	r0, [fp, #-24]	; 0xffffffe8
   16308:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1630c:	mov	r1, r0
   16310:	ldr	r2, [fp, #8]
   16314:	sdiv	r3, r0, r2
   16318:	mls	r0, r3, r2, r0
   1631c:	sub	r0, r1, r0
   16320:	str	r0, [fp, #-28]	; 0xffffffe4
   16324:	ldr	r0, [fp, #-4]
   16328:	movw	r1, #0
   1632c:	cmp	r0, r1
   16330:	bne	16340 <__assert_fail@plt+0x53ac>
   16334:	ldr	r0, [fp, #-8]
   16338:	movw	r1, #0
   1633c:	str	r1, [r0]
   16340:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16344:	ldr	r1, [fp, #-20]	; 0xffffffec
   16348:	sub	r0, r0, r1
   1634c:	ldr	r1, [fp, #-12]
   16350:	cmp	r0, r1
   16354:	bge	17740 <__assert_fail@plt+0x67ac>
   16358:	ldr	r0, [fp, #-20]	; 0xffffffec
   1635c:	ldr	r1, [fp, #-12]
   16360:	add	r1, r0, r1
   16364:	mov	r2, #1
   16368:	cmp	r1, r0
   1636c:	movwvc	r2, #0
   16370:	str	r1, [fp, #-24]	; 0xffffffe8
   16374:	tst	r2, #1
   16378:	bne	1773c <__assert_fail@plt+0x67a8>
   1637c:	ldr	r0, [fp, #-16]
   16380:	movw	r1, #0
   16384:	cmp	r1, r0
   16388:	bgt	1639c <__assert_fail@plt+0x5408>
   1638c:	ldr	r0, [fp, #-16]
   16390:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16394:	cmp	r0, r1
   16398:	blt	1773c <__assert_fail@plt+0x67a8>
   1639c:	b	16778 <__assert_fail@plt+0x57e4>
   163a0:			; <UNDEFINED> instruction: 0xffff8000
   163a4:	b	163a8 <__assert_fail@plt+0x5414>
   163a8:	ldr	r0, [fp, #8]
   163ac:	cmp	r0, #0
   163b0:	bge	164c4 <__assert_fail@plt+0x5530>
   163b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   163b8:	cmp	r0, #0
   163bc:	bge	16448 <__assert_fail@plt+0x54b4>
   163c0:	b	163c4 <__assert_fail@plt+0x5430>
   163c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   163c8:	ldr	r1, [fp, #8]
   163cc:	movw	r2, #127	; 0x7f
   163d0:	sdiv	r1, r2, r1
   163d4:	cmp	r0, r1
   163d8:	blt	16564 <__assert_fail@plt+0x55d0>
   163dc:	b	1657c <__assert_fail@plt+0x55e8>
   163e0:	b	163e4 <__assert_fail@plt+0x5450>
   163e4:	ldr	r0, [pc, #-1172]	; 15f58 <__assert_fail@plt+0x4fc4>
   163e8:	ldr	r1, [fp, #8]
   163ec:	cmp	r1, r0
   163f0:	blt	16408 <__assert_fail@plt+0x5474>
   163f4:	b	16414 <__assert_fail@plt+0x5480>
   163f8:	ldr	r0, [fp, #8]
   163fc:	movw	r1, #0
   16400:	cmp	r1, r0
   16404:	bge	16414 <__assert_fail@plt+0x5480>
   16408:	movw	r0, #0
   1640c:	str	r0, [sp, #88]	; 0x58
   16410:	b	1642c <__assert_fail@plt+0x5498>
   16414:	ldr	r0, [fp, #8]
   16418:	movw	r1, #0
   1641c:	sub	r0, r1, r0
   16420:	movw	r1, #127	; 0x7f
   16424:	sdiv	r0, r1, r0
   16428:	str	r0, [sp, #88]	; 0x58
   1642c:	ldr	r0, [sp, #88]	; 0x58
   16430:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16434:	mvn	r2, #0
   16438:	sub	r1, r2, r1
   1643c:	cmp	r0, r1
   16440:	ble	16564 <__assert_fail@plt+0x55d0>
   16444:	b	1657c <__assert_fail@plt+0x55e8>
   16448:	b	1644c <__assert_fail@plt+0x54b8>
   1644c:	b	164a8 <__assert_fail@plt+0x5514>
   16450:	b	164a8 <__assert_fail@plt+0x5514>
   16454:	ldr	r0, [fp, #8]
   16458:	cmn	r0, #1
   1645c:	bne	164a8 <__assert_fail@plt+0x5514>
   16460:	b	16464 <__assert_fail@plt+0x54d0>
   16464:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16468:	mvn	r1, #127	; 0x7f
   1646c:	add	r0, r0, r1
   16470:	movw	r1, #0
   16474:	cmp	r1, r0
   16478:	blt	16564 <__assert_fail@plt+0x55d0>
   1647c:	b	1657c <__assert_fail@plt+0x55e8>
   16480:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16484:	movw	r1, #0
   16488:	cmp	r1, r0
   1648c:	bge	1657c <__assert_fail@plt+0x55e8>
   16490:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16494:	sub	r0, r0, #1
   16498:	movw	r1, #127	; 0x7f
   1649c:	cmp	r1, r0
   164a0:	blt	16564 <__assert_fail@plt+0x55d0>
   164a4:	b	1657c <__assert_fail@plt+0x55e8>
   164a8:	ldr	r0, [fp, #8]
   164ac:	mvn	r1, #127	; 0x7f
   164b0:	sdiv	r0, r1, r0
   164b4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   164b8:	cmp	r0, r1
   164bc:	blt	16564 <__assert_fail@plt+0x55d0>
   164c0:	b	1657c <__assert_fail@plt+0x55e8>
   164c4:	ldr	r0, [fp, #8]
   164c8:	cmp	r0, #0
   164cc:	bne	164d4 <__assert_fail@plt+0x5540>
   164d0:	b	1657c <__assert_fail@plt+0x55e8>
   164d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   164d8:	cmp	r0, #0
   164dc:	bge	1654c <__assert_fail@plt+0x55b8>
   164e0:	b	164e4 <__assert_fail@plt+0x5550>
   164e4:	b	16530 <__assert_fail@plt+0x559c>
   164e8:	b	16530 <__assert_fail@plt+0x559c>
   164ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   164f0:	cmn	r0, #1
   164f4:	bne	16530 <__assert_fail@plt+0x559c>
   164f8:	b	164fc <__assert_fail@plt+0x5568>
   164fc:	ldr	r0, [fp, #8]
   16500:	mvn	r1, #127	; 0x7f
   16504:	add	r0, r0, r1
   16508:	movw	r1, #0
   1650c:	cmp	r1, r0
   16510:	blt	16564 <__assert_fail@plt+0x55d0>
   16514:	b	1657c <__assert_fail@plt+0x55e8>
   16518:	ldr	r0, [fp, #8]
   1651c:	sub	r0, r0, #1
   16520:	movw	r1, #127	; 0x7f
   16524:	cmp	r1, r0
   16528:	blt	16564 <__assert_fail@plt+0x55d0>
   1652c:	b	1657c <__assert_fail@plt+0x55e8>
   16530:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16534:	mvn	r1, #127	; 0x7f
   16538:	sdiv	r0, r1, r0
   1653c:	ldr	r1, [fp, #8]
   16540:	cmp	r0, r1
   16544:	blt	16564 <__assert_fail@plt+0x55d0>
   16548:	b	1657c <__assert_fail@plt+0x55e8>
   1654c:	ldr	r0, [fp, #8]
   16550:	movw	r1, #127	; 0x7f
   16554:	sdiv	r0, r1, r0
   16558:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1655c:	cmp	r0, r1
   16560:	bge	1657c <__assert_fail@plt+0x55e8>
   16564:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16568:	ldr	r1, [fp, #8]
   1656c:	mul	r0, r0, r1
   16570:	sxtb	r0, r0
   16574:	str	r0, [fp, #-28]	; 0xffffffe4
   16578:	b	1773c <__assert_fail@plt+0x67a8>
   1657c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16580:	ldr	r1, [fp, #8]
   16584:	mul	r0, r0, r1
   16588:	sxtb	r0, r0
   1658c:	str	r0, [fp, #-28]	; 0xffffffe4
   16590:	b	17740 <__assert_fail@plt+0x67ac>
   16594:	ldr	r0, [fp, #8]
   16598:	cmp	r0, #0
   1659c:	bge	166ac <__assert_fail@plt+0x5718>
   165a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   165a4:	cmp	r0, #0
   165a8:	bge	16634 <__assert_fail@plt+0x56a0>
   165ac:	b	165b0 <__assert_fail@plt+0x561c>
   165b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   165b4:	ldr	r1, [fp, #8]
   165b8:	movw	r2, #255	; 0xff
   165bc:	sdiv	r1, r2, r1
   165c0:	cmp	r0, r1
   165c4:	blt	16748 <__assert_fail@plt+0x57b4>
   165c8:	b	16760 <__assert_fail@plt+0x57cc>
   165cc:	b	165d0 <__assert_fail@plt+0x563c>
   165d0:	ldr	r0, [pc, #-1664]	; 15f58 <__assert_fail@plt+0x4fc4>
   165d4:	ldr	r1, [fp, #8]
   165d8:	cmp	r1, r0
   165dc:	blt	165f4 <__assert_fail@plt+0x5660>
   165e0:	b	16600 <__assert_fail@plt+0x566c>
   165e4:	ldr	r0, [fp, #8]
   165e8:	movw	r1, #0
   165ec:	cmp	r1, r0
   165f0:	bge	16600 <__assert_fail@plt+0x566c>
   165f4:	movw	r0, #0
   165f8:	str	r0, [sp, #84]	; 0x54
   165fc:	b	16618 <__assert_fail@plt+0x5684>
   16600:	ldr	r0, [fp, #8]
   16604:	movw	r1, #0
   16608:	sub	r0, r1, r0
   1660c:	movw	r1, #255	; 0xff
   16610:	sdiv	r0, r1, r0
   16614:	str	r0, [sp, #84]	; 0x54
   16618:	ldr	r0, [sp, #84]	; 0x54
   1661c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16620:	mvn	r2, #0
   16624:	sub	r1, r2, r1
   16628:	cmp	r0, r1
   1662c:	ble	16748 <__assert_fail@plt+0x57b4>
   16630:	b	16760 <__assert_fail@plt+0x57cc>
   16634:	b	16638 <__assert_fail@plt+0x56a4>
   16638:	b	16690 <__assert_fail@plt+0x56fc>
   1663c:	b	16690 <__assert_fail@plt+0x56fc>
   16640:	ldr	r0, [fp, #8]
   16644:	cmn	r0, #1
   16648:	bne	16690 <__assert_fail@plt+0x56fc>
   1664c:	b	16650 <__assert_fail@plt+0x56bc>
   16650:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16654:	add	r0, r0, #0
   16658:	movw	r1, #0
   1665c:	cmp	r1, r0
   16660:	blt	16748 <__assert_fail@plt+0x57b4>
   16664:	b	16760 <__assert_fail@plt+0x57cc>
   16668:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1666c:	movw	r1, #0
   16670:	cmp	r1, r0
   16674:	bge	16760 <__assert_fail@plt+0x57cc>
   16678:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1667c:	sub	r0, r0, #1
   16680:	mvn	r1, #0
   16684:	cmp	r1, r0
   16688:	blt	16748 <__assert_fail@plt+0x57b4>
   1668c:	b	16760 <__assert_fail@plt+0x57cc>
   16690:	ldr	r0, [fp, #8]
   16694:	movw	r1, #0
   16698:	sdiv	r0, r1, r0
   1669c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   166a0:	cmp	r0, r1
   166a4:	blt	16748 <__assert_fail@plt+0x57b4>
   166a8:	b	16760 <__assert_fail@plt+0x57cc>
   166ac:	ldr	r0, [fp, #8]
   166b0:	cmp	r0, #0
   166b4:	bne	166bc <__assert_fail@plt+0x5728>
   166b8:	b	16760 <__assert_fail@plt+0x57cc>
   166bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   166c0:	cmp	r0, #0
   166c4:	bge	16730 <__assert_fail@plt+0x579c>
   166c8:	b	166cc <__assert_fail@plt+0x5738>
   166cc:	b	16714 <__assert_fail@plt+0x5780>
   166d0:	b	16714 <__assert_fail@plt+0x5780>
   166d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   166d8:	cmn	r0, #1
   166dc:	bne	16714 <__assert_fail@plt+0x5780>
   166e0:	b	166e4 <__assert_fail@plt+0x5750>
   166e4:	ldr	r0, [fp, #8]
   166e8:	add	r0, r0, #0
   166ec:	movw	r1, #0
   166f0:	cmp	r1, r0
   166f4:	blt	16748 <__assert_fail@plt+0x57b4>
   166f8:	b	16760 <__assert_fail@plt+0x57cc>
   166fc:	ldr	r0, [fp, #8]
   16700:	sub	r0, r0, #1
   16704:	mvn	r1, #0
   16708:	cmp	r1, r0
   1670c:	blt	16748 <__assert_fail@plt+0x57b4>
   16710:	b	16760 <__assert_fail@plt+0x57cc>
   16714:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16718:	movw	r1, #0
   1671c:	sdiv	r0, r1, r0
   16720:	ldr	r1, [fp, #8]
   16724:	cmp	r0, r1
   16728:	blt	16748 <__assert_fail@plt+0x57b4>
   1672c:	b	16760 <__assert_fail@plt+0x57cc>
   16730:	ldr	r0, [fp, #8]
   16734:	movw	r1, #255	; 0xff
   16738:	sdiv	r0, r1, r0
   1673c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16740:	cmp	r0, r1
   16744:	bge	16760 <__assert_fail@plt+0x57cc>
   16748:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1674c:	ldr	r1, [fp, #8]
   16750:	mul	r0, r0, r1
   16754:	and	r0, r0, #255	; 0xff
   16758:	str	r0, [fp, #-28]	; 0xffffffe4
   1675c:	b	1773c <__assert_fail@plt+0x67a8>
   16760:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16764:	ldr	r1, [fp, #8]
   16768:	mul	r0, r0, r1
   1676c:	and	r0, r0, #255	; 0xff
   16770:	str	r0, [fp, #-28]	; 0xffffffe4
   16774:	b	17740 <__assert_fail@plt+0x67ac>
   16778:	b	16b54 <__assert_fail@plt+0x5bc0>
   1677c:	b	16780 <__assert_fail@plt+0x57ec>
   16780:	ldr	r0, [fp, #8]
   16784:	cmp	r0, #0
   16788:	bge	168a0 <__assert_fail@plt+0x590c>
   1678c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16790:	cmp	r0, #0
   16794:	bge	16824 <__assert_fail@plt+0x5890>
   16798:	b	1679c <__assert_fail@plt+0x5808>
   1679c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   167a0:	ldr	r1, [fp, #8]
   167a4:	movw	r2, #32767	; 0x7fff
   167a8:	sdiv	r1, r2, r1
   167ac:	cmp	r0, r1
   167b0:	blt	16940 <__assert_fail@plt+0x59ac>
   167b4:	b	16958 <__assert_fail@plt+0x59c4>
   167b8:	andhi	r0, r0, r0
   167bc:	b	167c0 <__assert_fail@plt+0x582c>
   167c0:	ldr	r0, [pc, #4004]	; 1776c <__assert_fail@plt+0x67d8>
   167c4:	ldr	r1, [fp, #8]
   167c8:	cmp	r1, r0
   167cc:	blt	167e4 <__assert_fail@plt+0x5850>
   167d0:	b	167f0 <__assert_fail@plt+0x585c>
   167d4:	ldr	r0, [fp, #8]
   167d8:	movw	r1, #0
   167dc:	cmp	r1, r0
   167e0:	bge	167f0 <__assert_fail@plt+0x585c>
   167e4:	movw	r0, #0
   167e8:	str	r0, [sp, #80]	; 0x50
   167ec:	b	16808 <__assert_fail@plt+0x5874>
   167f0:	ldr	r0, [fp, #8]
   167f4:	movw	r1, #0
   167f8:	sub	r0, r1, r0
   167fc:	movw	r1, #32767	; 0x7fff
   16800:	sdiv	r0, r1, r0
   16804:	str	r0, [sp, #80]	; 0x50
   16808:	ldr	r0, [sp, #80]	; 0x50
   1680c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16810:	mvn	r2, #0
   16814:	sub	r1, r2, r1
   16818:	cmp	r0, r1
   1681c:	ble	16940 <__assert_fail@plt+0x59ac>
   16820:	b	16958 <__assert_fail@plt+0x59c4>
   16824:	b	16828 <__assert_fail@plt+0x5894>
   16828:	b	16884 <__assert_fail@plt+0x58f0>
   1682c:	b	16884 <__assert_fail@plt+0x58f0>
   16830:	ldr	r0, [fp, #8]
   16834:	cmn	r0, #1
   16838:	bne	16884 <__assert_fail@plt+0x58f0>
   1683c:	b	16840 <__assert_fail@plt+0x58ac>
   16840:	ldr	r0, [pc, #3884]	; 17774 <__assert_fail@plt+0x67e0>
   16844:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16848:	add	r0, r1, r0
   1684c:	movw	r1, #0
   16850:	cmp	r1, r0
   16854:	blt	16940 <__assert_fail@plt+0x59ac>
   16858:	b	16958 <__assert_fail@plt+0x59c4>
   1685c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16860:	movw	r1, #0
   16864:	cmp	r1, r0
   16868:	bge	16958 <__assert_fail@plt+0x59c4>
   1686c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16870:	sub	r0, r0, #1
   16874:	movw	r1, #32767	; 0x7fff
   16878:	cmp	r1, r0
   1687c:	blt	16940 <__assert_fail@plt+0x59ac>
   16880:	b	16958 <__assert_fail@plt+0x59c4>
   16884:	ldr	r0, [pc, #3816]	; 17774 <__assert_fail@plt+0x67e0>
   16888:	ldr	r1, [fp, #8]
   1688c:	sdiv	r0, r0, r1
   16890:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16894:	cmp	r0, r1
   16898:	blt	16940 <__assert_fail@plt+0x59ac>
   1689c:	b	16958 <__assert_fail@plt+0x59c4>
   168a0:	ldr	r0, [fp, #8]
   168a4:	cmp	r0, #0
   168a8:	bne	168b0 <__assert_fail@plt+0x591c>
   168ac:	b	16958 <__assert_fail@plt+0x59c4>
   168b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   168b4:	cmp	r0, #0
   168b8:	bge	16928 <__assert_fail@plt+0x5994>
   168bc:	b	168c0 <__assert_fail@plt+0x592c>
   168c0:	b	1690c <__assert_fail@plt+0x5978>
   168c4:	b	1690c <__assert_fail@plt+0x5978>
   168c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   168cc:	cmn	r0, #1
   168d0:	bne	1690c <__assert_fail@plt+0x5978>
   168d4:	b	168d8 <__assert_fail@plt+0x5944>
   168d8:	ldr	r0, [pc, #3732]	; 17774 <__assert_fail@plt+0x67e0>
   168dc:	ldr	r1, [fp, #8]
   168e0:	add	r0, r1, r0
   168e4:	movw	r1, #0
   168e8:	cmp	r1, r0
   168ec:	blt	16940 <__assert_fail@plt+0x59ac>
   168f0:	b	16958 <__assert_fail@plt+0x59c4>
   168f4:	ldr	r0, [fp, #8]
   168f8:	sub	r0, r0, #1
   168fc:	movw	r1, #32767	; 0x7fff
   16900:	cmp	r1, r0
   16904:	blt	16940 <__assert_fail@plt+0x59ac>
   16908:	b	16958 <__assert_fail@plt+0x59c4>
   1690c:	ldr	r0, [pc, #3680]	; 17774 <__assert_fail@plt+0x67e0>
   16910:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16914:	sdiv	r0, r0, r1
   16918:	ldr	r1, [fp, #8]
   1691c:	cmp	r0, r1
   16920:	blt	16940 <__assert_fail@plt+0x59ac>
   16924:	b	16958 <__assert_fail@plt+0x59c4>
   16928:	ldr	r0, [fp, #8]
   1692c:	movw	r1, #32767	; 0x7fff
   16930:	sdiv	r0, r1, r0
   16934:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16938:	cmp	r0, r1
   1693c:	bge	16958 <__assert_fail@plt+0x59c4>
   16940:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16944:	ldr	r1, [fp, #8]
   16948:	mul	r0, r0, r1
   1694c:	sxth	r0, r0
   16950:	str	r0, [fp, #-28]	; 0xffffffe4
   16954:	b	1773c <__assert_fail@plt+0x67a8>
   16958:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1695c:	ldr	r1, [fp, #8]
   16960:	mul	r0, r0, r1
   16964:	sxth	r0, r0
   16968:	str	r0, [fp, #-28]	; 0xffffffe4
   1696c:	b	17740 <__assert_fail@plt+0x67ac>
   16970:	ldr	r0, [fp, #8]
   16974:	cmp	r0, #0
   16978:	bge	16a88 <__assert_fail@plt+0x5af4>
   1697c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16980:	cmp	r0, #0
   16984:	bge	16a10 <__assert_fail@plt+0x5a7c>
   16988:	b	1698c <__assert_fail@plt+0x59f8>
   1698c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16990:	ldr	r1, [fp, #8]
   16994:	movw	r2, #65535	; 0xffff
   16998:	sdiv	r1, r2, r1
   1699c:	cmp	r0, r1
   169a0:	blt	16b24 <__assert_fail@plt+0x5b90>
   169a4:	b	16b3c <__assert_fail@plt+0x5ba8>
   169a8:	b	169ac <__assert_fail@plt+0x5a18>
   169ac:	ldr	r0, [pc, #3512]	; 1776c <__assert_fail@plt+0x67d8>
   169b0:	ldr	r1, [fp, #8]
   169b4:	cmp	r1, r0
   169b8:	blt	169d0 <__assert_fail@plt+0x5a3c>
   169bc:	b	169dc <__assert_fail@plt+0x5a48>
   169c0:	ldr	r0, [fp, #8]
   169c4:	movw	r1, #0
   169c8:	cmp	r1, r0
   169cc:	bge	169dc <__assert_fail@plt+0x5a48>
   169d0:	movw	r0, #0
   169d4:	str	r0, [sp, #76]	; 0x4c
   169d8:	b	169f4 <__assert_fail@plt+0x5a60>
   169dc:	ldr	r0, [fp, #8]
   169e0:	movw	r1, #0
   169e4:	sub	r0, r1, r0
   169e8:	movw	r1, #65535	; 0xffff
   169ec:	sdiv	r0, r1, r0
   169f0:	str	r0, [sp, #76]	; 0x4c
   169f4:	ldr	r0, [sp, #76]	; 0x4c
   169f8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   169fc:	mvn	r2, #0
   16a00:	sub	r1, r2, r1
   16a04:	cmp	r0, r1
   16a08:	ble	16b24 <__assert_fail@plt+0x5b90>
   16a0c:	b	16b3c <__assert_fail@plt+0x5ba8>
   16a10:	b	16a14 <__assert_fail@plt+0x5a80>
   16a14:	b	16a6c <__assert_fail@plt+0x5ad8>
   16a18:	b	16a6c <__assert_fail@plt+0x5ad8>
   16a1c:	ldr	r0, [fp, #8]
   16a20:	cmn	r0, #1
   16a24:	bne	16a6c <__assert_fail@plt+0x5ad8>
   16a28:	b	16a2c <__assert_fail@plt+0x5a98>
   16a2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16a30:	add	r0, r0, #0
   16a34:	movw	r1, #0
   16a38:	cmp	r1, r0
   16a3c:	blt	16b24 <__assert_fail@plt+0x5b90>
   16a40:	b	16b3c <__assert_fail@plt+0x5ba8>
   16a44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16a48:	movw	r1, #0
   16a4c:	cmp	r1, r0
   16a50:	bge	16b3c <__assert_fail@plt+0x5ba8>
   16a54:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16a58:	sub	r0, r0, #1
   16a5c:	mvn	r1, #0
   16a60:	cmp	r1, r0
   16a64:	blt	16b24 <__assert_fail@plt+0x5b90>
   16a68:	b	16b3c <__assert_fail@plt+0x5ba8>
   16a6c:	ldr	r0, [fp, #8]
   16a70:	movw	r1, #0
   16a74:	sdiv	r0, r1, r0
   16a78:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16a7c:	cmp	r0, r1
   16a80:	blt	16b24 <__assert_fail@plt+0x5b90>
   16a84:	b	16b3c <__assert_fail@plt+0x5ba8>
   16a88:	ldr	r0, [fp, #8]
   16a8c:	cmp	r0, #0
   16a90:	bne	16a98 <__assert_fail@plt+0x5b04>
   16a94:	b	16b3c <__assert_fail@plt+0x5ba8>
   16a98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16a9c:	cmp	r0, #0
   16aa0:	bge	16b0c <__assert_fail@plt+0x5b78>
   16aa4:	b	16aa8 <__assert_fail@plt+0x5b14>
   16aa8:	b	16af0 <__assert_fail@plt+0x5b5c>
   16aac:	b	16af0 <__assert_fail@plt+0x5b5c>
   16ab0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16ab4:	cmn	r0, #1
   16ab8:	bne	16af0 <__assert_fail@plt+0x5b5c>
   16abc:	b	16ac0 <__assert_fail@plt+0x5b2c>
   16ac0:	ldr	r0, [fp, #8]
   16ac4:	add	r0, r0, #0
   16ac8:	movw	r1, #0
   16acc:	cmp	r1, r0
   16ad0:	blt	16b24 <__assert_fail@plt+0x5b90>
   16ad4:	b	16b3c <__assert_fail@plt+0x5ba8>
   16ad8:	ldr	r0, [fp, #8]
   16adc:	sub	r0, r0, #1
   16ae0:	mvn	r1, #0
   16ae4:	cmp	r1, r0
   16ae8:	blt	16b24 <__assert_fail@plt+0x5b90>
   16aec:	b	16b3c <__assert_fail@plt+0x5ba8>
   16af0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16af4:	movw	r1, #0
   16af8:	sdiv	r0, r1, r0
   16afc:	ldr	r1, [fp, #8]
   16b00:	cmp	r0, r1
   16b04:	blt	16b24 <__assert_fail@plt+0x5b90>
   16b08:	b	16b3c <__assert_fail@plt+0x5ba8>
   16b0c:	ldr	r0, [fp, #8]
   16b10:	movw	r1, #65535	; 0xffff
   16b14:	sdiv	r0, r1, r0
   16b18:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16b1c:	cmp	r0, r1
   16b20:	bge	16b3c <__assert_fail@plt+0x5ba8>
   16b24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16b28:	ldr	r1, [fp, #8]
   16b2c:	mul	r0, r0, r1
   16b30:	uxth	r0, r0
   16b34:	str	r0, [fp, #-28]	; 0xffffffe4
   16b38:	b	1773c <__assert_fail@plt+0x67a8>
   16b3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16b40:	ldr	r1, [fp, #8]
   16b44:	mul	r0, r0, r1
   16b48:	uxth	r0, r0
   16b4c:	str	r0, [fp, #-28]	; 0xffffffe4
   16b50:	b	17740 <__assert_fail@plt+0x67ac>
   16b54:	b	16b58 <__assert_fail@plt+0x5bc4>
   16b58:	b	16b5c <__assert_fail@plt+0x5bc8>
   16b5c:	ldr	r0, [fp, #8]
   16b60:	cmp	r0, #0
   16b64:	bge	16c68 <__assert_fail@plt+0x5cd4>
   16b68:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16b6c:	cmp	r0, #0
   16b70:	bge	16bfc <__assert_fail@plt+0x5c68>
   16b74:	b	16b78 <__assert_fail@plt+0x5be4>
   16b78:	ldr	r0, [pc, #3048]	; 17768 <__assert_fail@plt+0x67d4>
   16b7c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16b80:	ldr	r2, [fp, #8]
   16b84:	sdiv	r0, r0, r2
   16b88:	cmp	r1, r0
   16b8c:	blt	16cf8 <__assert_fail@plt+0x5d64>
   16b90:	b	16d0c <__assert_fail@plt+0x5d78>
   16b94:	b	16b98 <__assert_fail@plt+0x5c04>
   16b98:	ldr	r0, [pc, #3020]	; 1776c <__assert_fail@plt+0x67d8>
   16b9c:	ldr	r1, [fp, #8]
   16ba0:	cmp	r1, r0
   16ba4:	blt	16bbc <__assert_fail@plt+0x5c28>
   16ba8:	b	16bc8 <__assert_fail@plt+0x5c34>
   16bac:	ldr	r0, [fp, #8]
   16bb0:	movw	r1, #0
   16bb4:	cmp	r1, r0
   16bb8:	bge	16bc8 <__assert_fail@plt+0x5c34>
   16bbc:	movw	r0, #0
   16bc0:	str	r0, [sp, #72]	; 0x48
   16bc4:	b	16be0 <__assert_fail@plt+0x5c4c>
   16bc8:	ldr	r0, [pc, #2968]	; 17768 <__assert_fail@plt+0x67d4>
   16bcc:	ldr	r1, [fp, #8]
   16bd0:	movw	r2, #0
   16bd4:	sub	r1, r2, r1
   16bd8:	sdiv	r0, r0, r1
   16bdc:	str	r0, [sp, #72]	; 0x48
   16be0:	ldr	r0, [sp, #72]	; 0x48
   16be4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16be8:	mvn	r2, #0
   16bec:	sub	r1, r2, r1
   16bf0:	cmp	r0, r1
   16bf4:	ble	16cf8 <__assert_fail@plt+0x5d64>
   16bf8:	b	16d0c <__assert_fail@plt+0x5d78>
   16bfc:	ldr	r0, [fp, #8]
   16c00:	cmn	r0, #1
   16c04:	bne	16c4c <__assert_fail@plt+0x5cb8>
   16c08:	b	16c0c <__assert_fail@plt+0x5c78>
   16c0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16c10:	add	r0, r0, #-2147483648	; 0x80000000
   16c14:	movw	r1, #0
   16c18:	cmp	r1, r0
   16c1c:	blt	16cf8 <__assert_fail@plt+0x5d64>
   16c20:	b	16d0c <__assert_fail@plt+0x5d78>
   16c24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16c28:	movw	r1, #0
   16c2c:	cmp	r1, r0
   16c30:	bge	16d0c <__assert_fail@plt+0x5d78>
   16c34:	ldr	r0, [pc, #2860]	; 17768 <__assert_fail@plt+0x67d4>
   16c38:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16c3c:	sub	r1, r1, #1
   16c40:	cmp	r0, r1
   16c44:	blt	16cf8 <__assert_fail@plt+0x5d64>
   16c48:	b	16d0c <__assert_fail@plt+0x5d78>
   16c4c:	ldr	r0, [pc, #2844]	; 17770 <__assert_fail@plt+0x67dc>
   16c50:	ldr	r1, [fp, #8]
   16c54:	sdiv	r0, r0, r1
   16c58:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16c5c:	cmp	r0, r1
   16c60:	blt	16cf8 <__assert_fail@plt+0x5d64>
   16c64:	b	16d0c <__assert_fail@plt+0x5d78>
   16c68:	ldr	r0, [fp, #8]
   16c6c:	cmp	r0, #0
   16c70:	bne	16c78 <__assert_fail@plt+0x5ce4>
   16c74:	b	16d0c <__assert_fail@plt+0x5d78>
   16c78:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16c7c:	cmp	r0, #0
   16c80:	bge	16ce0 <__assert_fail@plt+0x5d4c>
   16c84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16c88:	cmn	r0, #1
   16c8c:	bne	16cc4 <__assert_fail@plt+0x5d30>
   16c90:	b	16c94 <__assert_fail@plt+0x5d00>
   16c94:	ldr	r0, [fp, #8]
   16c98:	add	r0, r0, #-2147483648	; 0x80000000
   16c9c:	movw	r1, #0
   16ca0:	cmp	r1, r0
   16ca4:	blt	16cf8 <__assert_fail@plt+0x5d64>
   16ca8:	b	16d0c <__assert_fail@plt+0x5d78>
   16cac:	ldr	r0, [pc, #2740]	; 17768 <__assert_fail@plt+0x67d4>
   16cb0:	ldr	r1, [fp, #8]
   16cb4:	sub	r1, r1, #1
   16cb8:	cmp	r0, r1
   16cbc:	blt	16cf8 <__assert_fail@plt+0x5d64>
   16cc0:	b	16d0c <__assert_fail@plt+0x5d78>
   16cc4:	ldr	r0, [pc, #2724]	; 17770 <__assert_fail@plt+0x67dc>
   16cc8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16ccc:	sdiv	r0, r0, r1
   16cd0:	ldr	r1, [fp, #8]
   16cd4:	cmp	r0, r1
   16cd8:	blt	16cf8 <__assert_fail@plt+0x5d64>
   16cdc:	b	16d0c <__assert_fail@plt+0x5d78>
   16ce0:	ldr	r0, [pc, #2688]	; 17768 <__assert_fail@plt+0x67d4>
   16ce4:	ldr	r1, [fp, #8]
   16ce8:	sdiv	r0, r0, r1
   16cec:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16cf0:	cmp	r0, r1
   16cf4:	bge	16d0c <__assert_fail@plt+0x5d78>
   16cf8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16cfc:	ldr	r1, [fp, #8]
   16d00:	mul	r0, r0, r1
   16d04:	str	r0, [fp, #-28]	; 0xffffffe4
   16d08:	b	1773c <__assert_fail@plt+0x67a8>
   16d0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16d10:	ldr	r1, [fp, #8]
   16d14:	mul	r0, r0, r1
   16d18:	str	r0, [fp, #-28]	; 0xffffffe4
   16d1c:	b	17740 <__assert_fail@plt+0x67ac>
   16d20:	ldr	r0, [fp, #8]
   16d24:	cmp	r0, #0
   16d28:	bge	16e38 <__assert_fail@plt+0x5ea4>
   16d2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16d30:	cmp	r0, #0
   16d34:	bge	16dc0 <__assert_fail@plt+0x5e2c>
   16d38:	b	16d58 <__assert_fail@plt+0x5dc4>
   16d3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16d40:	ldr	r1, [fp, #8]
   16d44:	mvn	r2, #0
   16d48:	udiv	r1, r2, r1
   16d4c:	cmp	r0, r1
   16d50:	bcc	16ed4 <__assert_fail@plt+0x5f40>
   16d54:	b	16ee8 <__assert_fail@plt+0x5f54>
   16d58:	b	16d5c <__assert_fail@plt+0x5dc8>
   16d5c:	ldr	r0, [pc, #2568]	; 1776c <__assert_fail@plt+0x67d8>
   16d60:	ldr	r1, [fp, #8]
   16d64:	cmp	r1, r0
   16d68:	blt	16d80 <__assert_fail@plt+0x5dec>
   16d6c:	b	16d8c <__assert_fail@plt+0x5df8>
   16d70:	ldr	r0, [fp, #8]
   16d74:	movw	r1, #0
   16d78:	cmp	r1, r0
   16d7c:	bge	16d8c <__assert_fail@plt+0x5df8>
   16d80:	movw	r0, #1
   16d84:	str	r0, [sp, #68]	; 0x44
   16d88:	b	16da4 <__assert_fail@plt+0x5e10>
   16d8c:	ldr	r0, [fp, #8]
   16d90:	movw	r1, #0
   16d94:	sub	r0, r1, r0
   16d98:	mvn	r1, #0
   16d9c:	udiv	r0, r1, r0
   16da0:	str	r0, [sp, #68]	; 0x44
   16da4:	ldr	r0, [sp, #68]	; 0x44
   16da8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16dac:	mvn	r2, #0
   16db0:	sub	r1, r2, r1
   16db4:	cmp	r0, r1
   16db8:	bls	16ed4 <__assert_fail@plt+0x5f40>
   16dbc:	b	16ee8 <__assert_fail@plt+0x5f54>
   16dc0:	b	16dc4 <__assert_fail@plt+0x5e30>
   16dc4:	b	16e1c <__assert_fail@plt+0x5e88>
   16dc8:	b	16e1c <__assert_fail@plt+0x5e88>
   16dcc:	ldr	r0, [fp, #8]
   16dd0:	cmn	r0, #1
   16dd4:	bne	16e1c <__assert_fail@plt+0x5e88>
   16dd8:	b	16ddc <__assert_fail@plt+0x5e48>
   16ddc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16de0:	add	r0, r0, #0
   16de4:	movw	r1, #0
   16de8:	cmp	r1, r0
   16dec:	blt	16ed4 <__assert_fail@plt+0x5f40>
   16df0:	b	16ee8 <__assert_fail@plt+0x5f54>
   16df4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16df8:	movw	r1, #0
   16dfc:	cmp	r1, r0
   16e00:	bge	16ee8 <__assert_fail@plt+0x5f54>
   16e04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16e08:	sub	r0, r0, #1
   16e0c:	mvn	r1, #0
   16e10:	cmp	r1, r0
   16e14:	blt	16ed4 <__assert_fail@plt+0x5f40>
   16e18:	b	16ee8 <__assert_fail@plt+0x5f54>
   16e1c:	ldr	r0, [fp, #8]
   16e20:	movw	r1, #0
   16e24:	sdiv	r0, r1, r0
   16e28:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16e2c:	cmp	r0, r1
   16e30:	blt	16ed4 <__assert_fail@plt+0x5f40>
   16e34:	b	16ee8 <__assert_fail@plt+0x5f54>
   16e38:	ldr	r0, [fp, #8]
   16e3c:	cmp	r0, #0
   16e40:	bne	16e48 <__assert_fail@plt+0x5eb4>
   16e44:	b	16ee8 <__assert_fail@plt+0x5f54>
   16e48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16e4c:	cmp	r0, #0
   16e50:	bge	16ebc <__assert_fail@plt+0x5f28>
   16e54:	b	16e58 <__assert_fail@plt+0x5ec4>
   16e58:	b	16ea0 <__assert_fail@plt+0x5f0c>
   16e5c:	b	16ea0 <__assert_fail@plt+0x5f0c>
   16e60:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16e64:	cmn	r0, #1
   16e68:	bne	16ea0 <__assert_fail@plt+0x5f0c>
   16e6c:	b	16e70 <__assert_fail@plt+0x5edc>
   16e70:	ldr	r0, [fp, #8]
   16e74:	add	r0, r0, #0
   16e78:	movw	r1, #0
   16e7c:	cmp	r1, r0
   16e80:	blt	16ed4 <__assert_fail@plt+0x5f40>
   16e84:	b	16ee8 <__assert_fail@plt+0x5f54>
   16e88:	ldr	r0, [fp, #8]
   16e8c:	sub	r0, r0, #1
   16e90:	mvn	r1, #0
   16e94:	cmp	r1, r0
   16e98:	blt	16ed4 <__assert_fail@plt+0x5f40>
   16e9c:	b	16ee8 <__assert_fail@plt+0x5f54>
   16ea0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16ea4:	movw	r1, #0
   16ea8:	sdiv	r0, r1, r0
   16eac:	ldr	r1, [fp, #8]
   16eb0:	cmp	r0, r1
   16eb4:	blt	16ed4 <__assert_fail@plt+0x5f40>
   16eb8:	b	16ee8 <__assert_fail@plt+0x5f54>
   16ebc:	ldr	r0, [fp, #8]
   16ec0:	mvn	r1, #0
   16ec4:	udiv	r0, r1, r0
   16ec8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16ecc:	cmp	r0, r1
   16ed0:	bcs	16ee8 <__assert_fail@plt+0x5f54>
   16ed4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16ed8:	ldr	r1, [fp, #8]
   16edc:	mul	r0, r0, r1
   16ee0:	str	r0, [fp, #-28]	; 0xffffffe4
   16ee4:	b	1773c <__assert_fail@plt+0x67a8>
   16ee8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16eec:	ldr	r1, [fp, #8]
   16ef0:	mul	r0, r0, r1
   16ef4:	str	r0, [fp, #-28]	; 0xffffffe4
   16ef8:	b	17740 <__assert_fail@plt+0x67ac>
   16efc:	b	16f00 <__assert_fail@plt+0x5f6c>
   16f00:	b	16f04 <__assert_fail@plt+0x5f70>
   16f04:	ldr	r0, [fp, #8]
   16f08:	cmp	r0, #0
   16f0c:	bge	17010 <__assert_fail@plt+0x607c>
   16f10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16f14:	cmp	r0, #0
   16f18:	bge	16fa4 <__assert_fail@plt+0x6010>
   16f1c:	b	16f20 <__assert_fail@plt+0x5f8c>
   16f20:	ldr	r0, [pc, #2112]	; 17768 <__assert_fail@plt+0x67d4>
   16f24:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16f28:	ldr	r2, [fp, #8]
   16f2c:	sdiv	r0, r0, r2
   16f30:	cmp	r1, r0
   16f34:	blt	170a0 <__assert_fail@plt+0x610c>
   16f38:	b	170b4 <__assert_fail@plt+0x6120>
   16f3c:	b	16f40 <__assert_fail@plt+0x5fac>
   16f40:	ldr	r0, [pc, #2084]	; 1776c <__assert_fail@plt+0x67d8>
   16f44:	ldr	r1, [fp, #8]
   16f48:	cmp	r1, r0
   16f4c:	blt	16f64 <__assert_fail@plt+0x5fd0>
   16f50:	b	16f70 <__assert_fail@plt+0x5fdc>
   16f54:	ldr	r0, [fp, #8]
   16f58:	movw	r1, #0
   16f5c:	cmp	r1, r0
   16f60:	bge	16f70 <__assert_fail@plt+0x5fdc>
   16f64:	movw	r0, #0
   16f68:	str	r0, [sp, #64]	; 0x40
   16f6c:	b	16f88 <__assert_fail@plt+0x5ff4>
   16f70:	ldr	r0, [pc, #2032]	; 17768 <__assert_fail@plt+0x67d4>
   16f74:	ldr	r1, [fp, #8]
   16f78:	movw	r2, #0
   16f7c:	sub	r1, r2, r1
   16f80:	sdiv	r0, r0, r1
   16f84:	str	r0, [sp, #64]	; 0x40
   16f88:	ldr	r0, [sp, #64]	; 0x40
   16f8c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16f90:	mvn	r2, #0
   16f94:	sub	r1, r2, r1
   16f98:	cmp	r0, r1
   16f9c:	ble	170a0 <__assert_fail@plt+0x610c>
   16fa0:	b	170b4 <__assert_fail@plt+0x6120>
   16fa4:	ldr	r0, [fp, #8]
   16fa8:	cmn	r0, #1
   16fac:	bne	16ff4 <__assert_fail@plt+0x6060>
   16fb0:	b	16fb4 <__assert_fail@plt+0x6020>
   16fb4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16fb8:	add	r0, r0, #-2147483648	; 0x80000000
   16fbc:	movw	r1, #0
   16fc0:	cmp	r1, r0
   16fc4:	blt	170a0 <__assert_fail@plt+0x610c>
   16fc8:	b	170b4 <__assert_fail@plt+0x6120>
   16fcc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16fd0:	movw	r1, #0
   16fd4:	cmp	r1, r0
   16fd8:	bge	170b4 <__assert_fail@plt+0x6120>
   16fdc:	ldr	r0, [pc, #1924]	; 17768 <__assert_fail@plt+0x67d4>
   16fe0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16fe4:	sub	r1, r1, #1
   16fe8:	cmp	r0, r1
   16fec:	blt	170a0 <__assert_fail@plt+0x610c>
   16ff0:	b	170b4 <__assert_fail@plt+0x6120>
   16ff4:	ldr	r0, [pc, #1908]	; 17770 <__assert_fail@plt+0x67dc>
   16ff8:	ldr	r1, [fp, #8]
   16ffc:	sdiv	r0, r0, r1
   17000:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17004:	cmp	r0, r1
   17008:	blt	170a0 <__assert_fail@plt+0x610c>
   1700c:	b	170b4 <__assert_fail@plt+0x6120>
   17010:	ldr	r0, [fp, #8]
   17014:	cmp	r0, #0
   17018:	bne	17020 <__assert_fail@plt+0x608c>
   1701c:	b	170b4 <__assert_fail@plt+0x6120>
   17020:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17024:	cmp	r0, #0
   17028:	bge	17088 <__assert_fail@plt+0x60f4>
   1702c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17030:	cmn	r0, #1
   17034:	bne	1706c <__assert_fail@plt+0x60d8>
   17038:	b	1703c <__assert_fail@plt+0x60a8>
   1703c:	ldr	r0, [fp, #8]
   17040:	add	r0, r0, #-2147483648	; 0x80000000
   17044:	movw	r1, #0
   17048:	cmp	r1, r0
   1704c:	blt	170a0 <__assert_fail@plt+0x610c>
   17050:	b	170b4 <__assert_fail@plt+0x6120>
   17054:	ldr	r0, [pc, #1804]	; 17768 <__assert_fail@plt+0x67d4>
   17058:	ldr	r1, [fp, #8]
   1705c:	sub	r1, r1, #1
   17060:	cmp	r0, r1
   17064:	blt	170a0 <__assert_fail@plt+0x610c>
   17068:	b	170b4 <__assert_fail@plt+0x6120>
   1706c:	ldr	r0, [pc, #1788]	; 17770 <__assert_fail@plt+0x67dc>
   17070:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17074:	sdiv	r0, r0, r1
   17078:	ldr	r1, [fp, #8]
   1707c:	cmp	r0, r1
   17080:	blt	170a0 <__assert_fail@plt+0x610c>
   17084:	b	170b4 <__assert_fail@plt+0x6120>
   17088:	ldr	r0, [pc, #1752]	; 17768 <__assert_fail@plt+0x67d4>
   1708c:	ldr	r1, [fp, #8]
   17090:	sdiv	r0, r0, r1
   17094:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17098:	cmp	r0, r1
   1709c:	bge	170b4 <__assert_fail@plt+0x6120>
   170a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   170a4:	ldr	r1, [fp, #8]
   170a8:	mul	r0, r0, r1
   170ac:	str	r0, [fp, #-28]	; 0xffffffe4
   170b0:	b	1773c <__assert_fail@plt+0x67a8>
   170b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   170b8:	ldr	r1, [fp, #8]
   170bc:	mul	r0, r0, r1
   170c0:	str	r0, [fp, #-28]	; 0xffffffe4
   170c4:	b	17740 <__assert_fail@plt+0x67ac>
   170c8:	ldr	r0, [fp, #8]
   170cc:	cmp	r0, #0
   170d0:	bge	171e0 <__assert_fail@plt+0x624c>
   170d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   170d8:	cmp	r0, #0
   170dc:	bge	17168 <__assert_fail@plt+0x61d4>
   170e0:	b	17100 <__assert_fail@plt+0x616c>
   170e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   170e8:	ldr	r1, [fp, #8]
   170ec:	mvn	r2, #0
   170f0:	udiv	r1, r2, r1
   170f4:	cmp	r0, r1
   170f8:	bcc	1727c <__assert_fail@plt+0x62e8>
   170fc:	b	17290 <__assert_fail@plt+0x62fc>
   17100:	b	17104 <__assert_fail@plt+0x6170>
   17104:	ldr	r0, [pc, #1632]	; 1776c <__assert_fail@plt+0x67d8>
   17108:	ldr	r1, [fp, #8]
   1710c:	cmp	r1, r0
   17110:	blt	17128 <__assert_fail@plt+0x6194>
   17114:	b	17134 <__assert_fail@plt+0x61a0>
   17118:	ldr	r0, [fp, #8]
   1711c:	movw	r1, #0
   17120:	cmp	r1, r0
   17124:	bge	17134 <__assert_fail@plt+0x61a0>
   17128:	movw	r0, #1
   1712c:	str	r0, [sp, #60]	; 0x3c
   17130:	b	1714c <__assert_fail@plt+0x61b8>
   17134:	ldr	r0, [fp, #8]
   17138:	movw	r1, #0
   1713c:	sub	r0, r1, r0
   17140:	mvn	r1, #0
   17144:	udiv	r0, r1, r0
   17148:	str	r0, [sp, #60]	; 0x3c
   1714c:	ldr	r0, [sp, #60]	; 0x3c
   17150:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17154:	mvn	r2, #0
   17158:	sub	r1, r2, r1
   1715c:	cmp	r0, r1
   17160:	bls	1727c <__assert_fail@plt+0x62e8>
   17164:	b	17290 <__assert_fail@plt+0x62fc>
   17168:	b	1716c <__assert_fail@plt+0x61d8>
   1716c:	b	171c4 <__assert_fail@plt+0x6230>
   17170:	b	171c4 <__assert_fail@plt+0x6230>
   17174:	ldr	r0, [fp, #8]
   17178:	cmn	r0, #1
   1717c:	bne	171c4 <__assert_fail@plt+0x6230>
   17180:	b	17184 <__assert_fail@plt+0x61f0>
   17184:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17188:	add	r0, r0, #0
   1718c:	movw	r1, #0
   17190:	cmp	r1, r0
   17194:	blt	1727c <__assert_fail@plt+0x62e8>
   17198:	b	17290 <__assert_fail@plt+0x62fc>
   1719c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   171a0:	movw	r1, #0
   171a4:	cmp	r1, r0
   171a8:	bge	17290 <__assert_fail@plt+0x62fc>
   171ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   171b0:	sub	r0, r0, #1
   171b4:	mvn	r1, #0
   171b8:	cmp	r1, r0
   171bc:	blt	1727c <__assert_fail@plt+0x62e8>
   171c0:	b	17290 <__assert_fail@plt+0x62fc>
   171c4:	ldr	r0, [fp, #8]
   171c8:	movw	r1, #0
   171cc:	sdiv	r0, r1, r0
   171d0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   171d4:	cmp	r0, r1
   171d8:	blt	1727c <__assert_fail@plt+0x62e8>
   171dc:	b	17290 <__assert_fail@plt+0x62fc>
   171e0:	ldr	r0, [fp, #8]
   171e4:	cmp	r0, #0
   171e8:	bne	171f0 <__assert_fail@plt+0x625c>
   171ec:	b	17290 <__assert_fail@plt+0x62fc>
   171f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   171f4:	cmp	r0, #0
   171f8:	bge	17264 <__assert_fail@plt+0x62d0>
   171fc:	b	17200 <__assert_fail@plt+0x626c>
   17200:	b	17248 <__assert_fail@plt+0x62b4>
   17204:	b	17248 <__assert_fail@plt+0x62b4>
   17208:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1720c:	cmn	r0, #1
   17210:	bne	17248 <__assert_fail@plt+0x62b4>
   17214:	b	17218 <__assert_fail@plt+0x6284>
   17218:	ldr	r0, [fp, #8]
   1721c:	add	r0, r0, #0
   17220:	movw	r1, #0
   17224:	cmp	r1, r0
   17228:	blt	1727c <__assert_fail@plt+0x62e8>
   1722c:	b	17290 <__assert_fail@plt+0x62fc>
   17230:	ldr	r0, [fp, #8]
   17234:	sub	r0, r0, #1
   17238:	mvn	r1, #0
   1723c:	cmp	r1, r0
   17240:	blt	1727c <__assert_fail@plt+0x62e8>
   17244:	b	17290 <__assert_fail@plt+0x62fc>
   17248:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1724c:	movw	r1, #0
   17250:	sdiv	r0, r1, r0
   17254:	ldr	r1, [fp, #8]
   17258:	cmp	r0, r1
   1725c:	blt	1727c <__assert_fail@plt+0x62e8>
   17260:	b	17290 <__assert_fail@plt+0x62fc>
   17264:	ldr	r0, [fp, #8]
   17268:	mvn	r1, #0
   1726c:	udiv	r0, r1, r0
   17270:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17274:	cmp	r0, r1
   17278:	bcs	17290 <__assert_fail@plt+0x62fc>
   1727c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17280:	ldr	r1, [fp, #8]
   17284:	mul	r0, r0, r1
   17288:	str	r0, [fp, #-28]	; 0xffffffe4
   1728c:	b	1773c <__assert_fail@plt+0x67a8>
   17290:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17294:	ldr	r1, [fp, #8]
   17298:	mul	r0, r0, r1
   1729c:	str	r0, [fp, #-28]	; 0xffffffe4
   172a0:	b	17740 <__assert_fail@plt+0x67ac>
   172a4:	b	172a8 <__assert_fail@plt+0x6314>
   172a8:	ldr	r0, [fp, #8]
   172ac:	cmp	r0, #0
   172b0:	bge	17418 <__assert_fail@plt+0x6484>
   172b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   172b8:	cmp	r0, #0
   172bc:	bge	17394 <__assert_fail@plt+0x6400>
   172c0:	b	172c4 <__assert_fail@plt+0x6330>
   172c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   172c8:	ldr	r1, [fp, #8]
   172cc:	asr	r3, r1, #31
   172d0:	mvn	r2, #0
   172d4:	mvn	ip, #-2147483648	; 0x80000000
   172d8:	str	r0, [sp, #56]	; 0x38
   172dc:	mov	r0, r2
   172e0:	str	r1, [sp, #52]	; 0x34
   172e4:	mov	r1, ip
   172e8:	ldr	r2, [sp, #52]	; 0x34
   172ec:	bl	1ba50 <__assert_fail@plt+0xaabc>
   172f0:	ldr	r2, [sp, #56]	; 0x38
   172f4:	subs	r0, r2, r0
   172f8:	rscs	r1, r1, r2, asr #31
   172fc:	blt	174e0 <__assert_fail@plt+0x654c>
   17300:	b	174f4 <__assert_fail@plt+0x6560>
   17304:	b	17308 <__assert_fail@plt+0x6374>
   17308:	ldr	r0, [pc, #1116]	; 1776c <__assert_fail@plt+0x67d8>
   1730c:	ldr	r1, [fp, #8]
   17310:	cmp	r1, r0
   17314:	blt	1732c <__assert_fail@plt+0x6398>
   17318:	b	17340 <__assert_fail@plt+0x63ac>
   1731c:	ldr	r0, [fp, #8]
   17320:	movw	r1, #0
   17324:	cmp	r1, r0
   17328:	bge	17340 <__assert_fail@plt+0x63ac>
   1732c:	mov	r0, #0
   17330:	mvn	r1, #0
   17334:	str	r1, [sp, #48]	; 0x30
   17338:	str	r0, [sp, #44]	; 0x2c
   1733c:	b	17374 <__assert_fail@plt+0x63e0>
   17340:	ldr	r0, [fp, #8]
   17344:	rsb	r0, r0, #0
   17348:	asr	r3, r0, #31
   1734c:	mvn	r1, #0
   17350:	mvn	r2, #-2147483648	; 0x80000000
   17354:	str	r0, [sp, #40]	; 0x28
   17358:	mov	r0, r1
   1735c:	mov	r1, r2
   17360:	ldr	r2, [sp, #40]	; 0x28
   17364:	bl	1ba50 <__assert_fail@plt+0xaabc>
   17368:	str	r0, [sp, #48]	; 0x30
   1736c:	str	r1, [sp, #44]	; 0x2c
   17370:	b	17374 <__assert_fail@plt+0x63e0>
   17374:	ldr	r0, [sp, #44]	; 0x2c
   17378:	ldr	r1, [sp, #48]	; 0x30
   1737c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17380:	mvn	r2, r2
   17384:	subs	r1, r2, r1
   17388:	rscs	r0, r0, r2, asr #31
   1738c:	bge	174e0 <__assert_fail@plt+0x654c>
   17390:	b	174f4 <__assert_fail@plt+0x6560>
   17394:	ldr	r0, [fp, #8]
   17398:	cmn	r0, #1
   1739c:	bne	173e0 <__assert_fail@plt+0x644c>
   173a0:	b	173a4 <__assert_fail@plt+0x6410>
   173a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   173a8:	mov	r1, #-2147483648	; 0x80000000
   173ac:	add	r1, r1, r0, asr #31
   173b0:	rsbs	r0, r0, #0
   173b4:	rscs	r1, r1, #0
   173b8:	blt	174e0 <__assert_fail@plt+0x654c>
   173bc:	b	174f4 <__assert_fail@plt+0x6560>
   173c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   173c4:	movw	r1, #0
   173c8:	cmp	r1, r0
   173cc:	bge	174f4 <__assert_fail@plt+0x6560>
   173d0:	mov	r0, #0
   173d4:	cmp	r0, #0
   173d8:	bne	174e0 <__assert_fail@plt+0x654c>
   173dc:	b	174f4 <__assert_fail@plt+0x6560>
   173e0:	ldr	r0, [fp, #8]
   173e4:	asr	r3, r0, #31
   173e8:	mov	r1, #0
   173ec:	mov	r2, #-2147483648	; 0x80000000
   173f0:	str	r0, [sp, #36]	; 0x24
   173f4:	mov	r0, r1
   173f8:	mov	r1, r2
   173fc:	ldr	r2, [sp, #36]	; 0x24
   17400:	bl	1ba50 <__assert_fail@plt+0xaabc>
   17404:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17408:	subs	r0, r0, r2
   1740c:	sbcs	r1, r1, r2, asr #31
   17410:	blt	174e0 <__assert_fail@plt+0x654c>
   17414:	b	174f4 <__assert_fail@plt+0x6560>
   17418:	ldr	r0, [fp, #8]
   1741c:	cmp	r0, #0
   17420:	bne	17428 <__assert_fail@plt+0x6494>
   17424:	b	174f4 <__assert_fail@plt+0x6560>
   17428:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1742c:	cmp	r0, #0
   17430:	bge	174a8 <__assert_fail@plt+0x6514>
   17434:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17438:	cmn	r0, #1
   1743c:	bne	17470 <__assert_fail@plt+0x64dc>
   17440:	b	17444 <__assert_fail@plt+0x64b0>
   17444:	ldr	r0, [fp, #8]
   17448:	mov	r1, #-2147483648	; 0x80000000
   1744c:	add	r1, r1, r0, asr #31
   17450:	rsbs	r0, r0, #0
   17454:	rscs	r1, r1, #0
   17458:	blt	174e0 <__assert_fail@plt+0x654c>
   1745c:	b	174f4 <__assert_fail@plt+0x6560>
   17460:	mov	r0, #0
   17464:	cmp	r0, #0
   17468:	bne	174e0 <__assert_fail@plt+0x654c>
   1746c:	b	174f4 <__assert_fail@plt+0x6560>
   17470:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17474:	asr	r3, r0, #31
   17478:	mov	r1, #0
   1747c:	mov	r2, #-2147483648	; 0x80000000
   17480:	str	r0, [sp, #32]
   17484:	mov	r0, r1
   17488:	mov	r1, r2
   1748c:	ldr	r2, [sp, #32]
   17490:	bl	1ba50 <__assert_fail@plt+0xaabc>
   17494:	ldr	r2, [fp, #8]
   17498:	subs	r0, r0, r2
   1749c:	sbcs	r1, r1, r2, asr #31
   174a0:	blt	174e0 <__assert_fail@plt+0x654c>
   174a4:	b	174f4 <__assert_fail@plt+0x6560>
   174a8:	ldr	r0, [fp, #8]
   174ac:	asr	r3, r0, #31
   174b0:	mvn	r1, #0
   174b4:	mvn	r2, #-2147483648	; 0x80000000
   174b8:	str	r0, [sp, #28]
   174bc:	mov	r0, r1
   174c0:	mov	r1, r2
   174c4:	ldr	r2, [sp, #28]
   174c8:	bl	1ba50 <__assert_fail@plt+0xaabc>
   174cc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   174d0:	subs	r0, r0, r2
   174d4:	sbcs	r1, r1, r2, asr #31
   174d8:	bge	174f4 <__assert_fail@plt+0x6560>
   174dc:	b	174e0 <__assert_fail@plt+0x654c>
   174e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   174e4:	ldr	r1, [fp, #8]
   174e8:	mul	r0, r0, r1
   174ec:	str	r0, [fp, #-28]	; 0xffffffe4
   174f0:	b	1773c <__assert_fail@plt+0x67a8>
   174f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   174f8:	ldr	r1, [fp, #8]
   174fc:	mul	r0, r0, r1
   17500:	str	r0, [fp, #-28]	; 0xffffffe4
   17504:	b	17740 <__assert_fail@plt+0x67ac>
   17508:	ldr	r0, [fp, #8]
   1750c:	cmp	r0, #0
   17510:	bge	17660 <__assert_fail@plt+0x66cc>
   17514:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17518:	cmp	r0, #0
   1751c:	bge	175e8 <__assert_fail@plt+0x6654>
   17520:	b	17560 <__assert_fail@plt+0x65cc>
   17524:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17528:	ldr	r1, [fp, #8]
   1752c:	asr	r3, r1, #31
   17530:	mvn	r2, #0
   17534:	str	r0, [sp, #24]
   17538:	mov	r0, r2
   1753c:	str	r1, [sp, #20]
   17540:	mov	r1, r2
   17544:	ldr	r2, [sp, #20]
   17548:	bl	1bb24 <__assert_fail@plt+0xab90>
   1754c:	ldr	r2, [sp, #24]
   17550:	subs	r0, r2, r0
   17554:	rscs	r1, r1, r2, asr #31
   17558:	bcc	17714 <__assert_fail@plt+0x6780>
   1755c:	b	17728 <__assert_fail@plt+0x6794>
   17560:	b	17564 <__assert_fail@plt+0x65d0>
   17564:	ldr	r0, [pc, #512]	; 1776c <__assert_fail@plt+0x67d8>
   17568:	ldr	r1, [fp, #8]
   1756c:	cmp	r1, r0
   17570:	blt	17588 <__assert_fail@plt+0x65f4>
   17574:	b	1759c <__assert_fail@plt+0x6608>
   17578:	ldr	r0, [fp, #8]
   1757c:	movw	r1, #0
   17580:	cmp	r1, r0
   17584:	bge	1759c <__assert_fail@plt+0x6608>
   17588:	mov	r0, #1
   1758c:	mvn	r1, #0
   17590:	str	r1, [sp, #16]
   17594:	str	r0, [sp, #12]
   17598:	b	175c8 <__assert_fail@plt+0x6634>
   1759c:	ldr	r0, [fp, #8]
   175a0:	rsb	r0, r0, #0
   175a4:	asr	r3, r0, #31
   175a8:	mvn	r1, #0
   175ac:	str	r0, [sp, #8]
   175b0:	mov	r0, r1
   175b4:	ldr	r2, [sp, #8]
   175b8:	bl	1bb24 <__assert_fail@plt+0xab90>
   175bc:	str	r0, [sp, #16]
   175c0:	str	r1, [sp, #12]
   175c4:	b	175c8 <__assert_fail@plt+0x6634>
   175c8:	ldr	r0, [sp, #12]
   175cc:	ldr	r1, [sp, #16]
   175d0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   175d4:	mvn	r2, r2
   175d8:	subs	r1, r2, r1
   175dc:	rscs	r0, r0, r2, asr #31
   175e0:	bcs	17714 <__assert_fail@plt+0x6780>
   175e4:	b	17728 <__assert_fail@plt+0x6794>
   175e8:	b	175ec <__assert_fail@plt+0x6658>
   175ec:	b	17644 <__assert_fail@plt+0x66b0>
   175f0:	b	17644 <__assert_fail@plt+0x66b0>
   175f4:	ldr	r0, [fp, #8]
   175f8:	cmn	r0, #1
   175fc:	bne	17644 <__assert_fail@plt+0x66b0>
   17600:	b	17604 <__assert_fail@plt+0x6670>
   17604:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17608:	add	r0, r0, #0
   1760c:	movw	r1, #0
   17610:	cmp	r1, r0
   17614:	blt	17714 <__assert_fail@plt+0x6780>
   17618:	b	17728 <__assert_fail@plt+0x6794>
   1761c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17620:	movw	r1, #0
   17624:	cmp	r1, r0
   17628:	bge	17728 <__assert_fail@plt+0x6794>
   1762c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17630:	sub	r0, r0, #1
   17634:	mvn	r1, #0
   17638:	cmp	r1, r0
   1763c:	blt	17714 <__assert_fail@plt+0x6780>
   17640:	b	17728 <__assert_fail@plt+0x6794>
   17644:	ldr	r0, [fp, #8]
   17648:	movw	r1, #0
   1764c:	sdiv	r0, r1, r0
   17650:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17654:	cmp	r0, r1
   17658:	blt	17714 <__assert_fail@plt+0x6780>
   1765c:	b	17728 <__assert_fail@plt+0x6794>
   17660:	ldr	r0, [fp, #8]
   17664:	cmp	r0, #0
   17668:	bne	17670 <__assert_fail@plt+0x66dc>
   1766c:	b	17728 <__assert_fail@plt+0x6794>
   17670:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17674:	cmp	r0, #0
   17678:	bge	176e4 <__assert_fail@plt+0x6750>
   1767c:	b	17680 <__assert_fail@plt+0x66ec>
   17680:	b	176c8 <__assert_fail@plt+0x6734>
   17684:	b	176c8 <__assert_fail@plt+0x6734>
   17688:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1768c:	cmn	r0, #1
   17690:	bne	176c8 <__assert_fail@plt+0x6734>
   17694:	b	17698 <__assert_fail@plt+0x6704>
   17698:	ldr	r0, [fp, #8]
   1769c:	add	r0, r0, #0
   176a0:	movw	r1, #0
   176a4:	cmp	r1, r0
   176a8:	blt	17714 <__assert_fail@plt+0x6780>
   176ac:	b	17728 <__assert_fail@plt+0x6794>
   176b0:	ldr	r0, [fp, #8]
   176b4:	sub	r0, r0, #1
   176b8:	mvn	r1, #0
   176bc:	cmp	r1, r0
   176c0:	blt	17714 <__assert_fail@plt+0x6780>
   176c4:	b	17728 <__assert_fail@plt+0x6794>
   176c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   176cc:	movw	r1, #0
   176d0:	sdiv	r0, r1, r0
   176d4:	ldr	r1, [fp, #8]
   176d8:	cmp	r0, r1
   176dc:	blt	17714 <__assert_fail@plt+0x6780>
   176e0:	b	17728 <__assert_fail@plt+0x6794>
   176e4:	ldr	r0, [fp, #8]
   176e8:	asr	r3, r0, #31
   176ec:	mvn	r1, #0
   176f0:	str	r0, [sp, #4]
   176f4:	mov	r0, r1
   176f8:	ldr	r2, [sp, #4]
   176fc:	bl	1bb24 <__assert_fail@plt+0xab90>
   17700:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17704:	subs	r0, r0, r2
   17708:	sbcs	r1, r1, r2, asr #31
   1770c:	bcs	17728 <__assert_fail@plt+0x6794>
   17710:	b	17714 <__assert_fail@plt+0x6780>
   17714:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17718:	ldr	r1, [fp, #8]
   1771c:	mul	r0, r0, r1
   17720:	str	r0, [fp, #-28]	; 0xffffffe4
   17724:	b	1773c <__assert_fail@plt+0x67a8>
   17728:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1772c:	ldr	r1, [fp, #8]
   17730:	mul	r0, r0, r1
   17734:	str	r0, [fp, #-28]	; 0xffffffe4
   17738:	b	17740 <__assert_fail@plt+0x67ac>
   1773c:	bl	17918 <__assert_fail@plt+0x6984>
   17740:	ldr	r0, [fp, #-4]
   17744:	ldr	r1, [fp, #-28]	; 0xffffffe4
   17748:	bl	14c78 <__assert_fail@plt+0x3ce4>
   1774c:	str	r0, [fp, #-4]
   17750:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17754:	ldr	r1, [fp, #-8]
   17758:	str	r0, [r1]
   1775c:	ldr	r0, [fp, #-4]
   17760:	mov	sp, fp
   17764:	pop	{fp, pc}
   17768:	svcvc	0x00ffffff
   1776c:	andhi	r0, r0, r1
   17770:	andhi	r0, r0, r0
   17774:			; <UNDEFINED> instruction: 0xffff8000
   17778:	push	{fp, lr}
   1777c:	mov	fp, sp
   17780:	sub	sp, sp, #8
   17784:	str	r0, [sp, #4]
   17788:	ldr	r0, [sp, #4]
   1778c:	movw	r1, #1
   17790:	bl	1779c <__assert_fail@plt+0x6808>
   17794:	mov	sp, fp
   17798:	pop	{fp, pc}
   1779c:	push	{fp, lr}
   177a0:	mov	fp, sp
   177a4:	sub	sp, sp, #8
   177a8:	str	r0, [sp, #4]
   177ac:	str	r1, [sp]
   177b0:	ldr	r0, [sp, #4]
   177b4:	ldr	r1, [sp]
   177b8:	bl	195e0 <__assert_fail@plt+0x864c>
   177bc:	bl	14c04 <__assert_fail@plt+0x3c70>
   177c0:	mov	sp, fp
   177c4:	pop	{fp, pc}
   177c8:	push	{fp, lr}
   177cc:	mov	fp, sp
   177d0:	sub	sp, sp, #8
   177d4:	str	r0, [sp, #4]
   177d8:	ldr	r0, [sp, #4]
   177dc:	movw	r1, #1
   177e0:	bl	177ec <__assert_fail@plt+0x6858>
   177e4:	mov	sp, fp
   177e8:	pop	{fp, pc}
   177ec:	push	{fp, lr}
   177f0:	mov	fp, sp
   177f4:	sub	sp, sp, #8
   177f8:	str	r0, [sp, #4]
   177fc:	str	r1, [sp]
   17800:	ldr	r0, [sp, #4]
   17804:	ldr	r1, [sp]
   17808:	bl	19cbc <__assert_fail@plt+0x8d28>
   1780c:	bl	14c04 <__assert_fail@plt+0x3c70>
   17810:	mov	sp, fp
   17814:	pop	{fp, pc}
   17818:	push	{fp, lr}
   1781c:	mov	fp, sp
   17820:	sub	sp, sp, #16
   17824:	str	r0, [fp, #-4]
   17828:	str	r1, [sp, #8]
   1782c:	ldr	r0, [sp, #8]
   17830:	bl	14be0 <__assert_fail@plt+0x3c4c>
   17834:	ldr	r1, [fp, #-4]
   17838:	ldr	r2, [sp, #8]
   1783c:	str	r0, [sp, #4]
   17840:	bl	10dc0 <memcpy@plt>
   17844:	ldr	r0, [sp, #4]
   17848:	mov	sp, fp
   1784c:	pop	{fp, pc}
   17850:	push	{fp, lr}
   17854:	mov	fp, sp
   17858:	sub	sp, sp, #16
   1785c:	str	r0, [fp, #-4]
   17860:	str	r1, [sp, #8]
   17864:	ldr	r0, [sp, #8]
   17868:	bl	14c34 <__assert_fail@plt+0x3ca0>
   1786c:	ldr	r1, [fp, #-4]
   17870:	ldr	r2, [sp, #8]
   17874:	str	r0, [sp, #4]
   17878:	bl	10dc0 <memcpy@plt>
   1787c:	ldr	r0, [sp, #4]
   17880:	mov	sp, fp
   17884:	pop	{fp, pc}
   17888:	push	{fp, lr}
   1788c:	mov	fp, sp
   17890:	sub	sp, sp, #16
   17894:	str	r0, [fp, #-4]
   17898:	str	r1, [sp, #8]
   1789c:	ldr	r0, [sp, #8]
   178a0:	add	r0, r0, #1
   178a4:	bl	14c34 <__assert_fail@plt+0x3ca0>
   178a8:	str	r0, [sp, #4]
   178ac:	ldr	r0, [sp, #4]
   178b0:	ldr	r1, [sp, #8]
   178b4:	add	r0, r0, r1
   178b8:	movw	r1, #0
   178bc:	strb	r1, [r0]
   178c0:	ldr	r0, [sp, #4]
   178c4:	ldr	r1, [fp, #-4]
   178c8:	ldr	r2, [sp, #8]
   178cc:	str	r0, [sp]
   178d0:	bl	10dc0 <memcpy@plt>
   178d4:	ldr	r0, [sp]
   178d8:	mov	sp, fp
   178dc:	pop	{fp, pc}
   178e0:	push	{fp, lr}
   178e4:	mov	fp, sp
   178e8:	sub	sp, sp, #8
   178ec:	str	r0, [sp, #4]
   178f0:	ldr	r0, [sp, #4]
   178f4:	ldr	r1, [sp, #4]
   178f8:	str	r0, [sp]
   178fc:	mov	r0, r1
   17900:	bl	10ed4 <strlen@plt>
   17904:	add	r1, r0, #1
   17908:	ldr	r0, [sp]
   1790c:	bl	17818 <__assert_fail@plt+0x6884>
   17910:	mov	sp, fp
   17914:	pop	{fp, pc}
   17918:	push	{fp, lr}
   1791c:	mov	fp, sp
   17920:	sub	sp, sp, #8
   17924:	movw	r0, #53472	; 0xd0e0
   17928:	movt	r0, #2
   1792c:	ldr	r0, [r0]
   17930:	movw	r1, #50848	; 0xc6a0
   17934:	movt	r1, #1
   17938:	str	r0, [sp, #4]
   1793c:	mov	r0, r1
   17940:	bl	10ec8 <gettext@plt>
   17944:	ldr	r1, [sp, #4]
   17948:	str	r0, [sp]
   1794c:	mov	r0, r1
   17950:	movw	r1, #0
   17954:	movw	r2, #49795	; 0xc283
   17958:	movt	r2, #1
   1795c:	ldr	r3, [sp]
   17960:	bl	10e5c <error@plt>
   17964:	bl	10f88 <abort@plt>
   17968:	push	{fp, lr}
   1796c:	mov	fp, sp
   17970:	sub	sp, sp, #64	; 0x40
   17974:	ldr	ip, [fp, #8]
   17978:	str	r0, [fp, #-8]
   1797c:	str	r1, [fp, #-12]
   17980:	str	r2, [fp, #-16]
   17984:	str	r3, [fp, #-20]	; 0xffffffec
   17988:	movw	r0, #0
   1798c:	str	r0, [sp, #28]
   17990:	ldr	r1, [fp, #-16]
   17994:	cmp	r0, r1
   17998:	bgt	179ac <__assert_fail@plt+0x6a18>
   1799c:	ldr	r0, [fp, #-16]
   179a0:	cmp	r0, #36	; 0x24
   179a4:	bgt	179ac <__assert_fail@plt+0x6a18>
   179a8:	b	179cc <__assert_fail@plt+0x6a38>
   179ac:	movw	r0, #50865	; 0xc6b1
   179b0:	movt	r0, #1
   179b4:	movw	r1, #50903	; 0xc6d7
   179b8:	movt	r1, #1
   179bc:	movw	r2, #85	; 0x55
   179c0:	movw	r3, #50917	; 0xc6e5
   179c4:	movt	r3, #1
   179c8:	bl	10f94 <__assert_fail@plt>
   179cc:	ldr	r0, [fp, #-12]
   179d0:	movw	r1, #0
   179d4:	cmp	r0, r1
   179d8:	beq	179e8 <__assert_fail@plt+0x6a54>
   179dc:	ldr	r0, [fp, #-12]
   179e0:	str	r0, [sp, #12]
   179e4:	b	179f4 <__assert_fail@plt+0x6a60>
   179e8:	sub	r0, fp, #24
   179ec:	str	r0, [sp, #12]
   179f0:	b	179f4 <__assert_fail@plt+0x6a60>
   179f4:	ldr	r0, [sp, #12]
   179f8:	str	r0, [fp, #-28]	; 0xffffffe4
   179fc:	bl	10ef8 <__errno_location@plt>
   17a00:	movw	r1, #0
   17a04:	str	r1, [r0]
   17a08:	ldr	r0, [fp, #-8]
   17a0c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   17a10:	ldr	r2, [fp, #-16]
   17a14:	bl	10d84 <strtol@plt>
   17a18:	str	r0, [sp, #32]
   17a1c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   17a20:	ldr	r0, [r0]
   17a24:	ldr	r1, [fp, #-8]
   17a28:	cmp	r0, r1
   17a2c:	bne	17a90 <__assert_fail@plt+0x6afc>
   17a30:	ldr	r0, [fp, #8]
   17a34:	movw	r1, #0
   17a38:	cmp	r0, r1
   17a3c:	beq	17a80 <__assert_fail@plt+0x6aec>
   17a40:	ldr	r0, [fp, #-28]	; 0xffffffe4
   17a44:	ldr	r0, [r0]
   17a48:	ldrb	r0, [r0]
   17a4c:	cmp	r0, #0
   17a50:	beq	17a80 <__assert_fail@plt+0x6aec>
   17a54:	ldr	r0, [fp, #8]
   17a58:	ldr	r1, [fp, #-28]	; 0xffffffe4
   17a5c:	ldr	r1, [r1]
   17a60:	ldrb	r1, [r1]
   17a64:	bl	10ee0 <strchr@plt>
   17a68:	movw	r1, #0
   17a6c:	cmp	r0, r1
   17a70:	beq	17a80 <__assert_fail@plt+0x6aec>
   17a74:	movw	r0, #1
   17a78:	str	r0, [sp, #32]
   17a7c:	b	17a8c <__assert_fail@plt+0x6af8>
   17a80:	movw	r0, #4
   17a84:	str	r0, [fp, #-4]
   17a88:	b	17f58 <__assert_fail@plt+0x6fc4>
   17a8c:	b	17ac8 <__assert_fail@plt+0x6b34>
   17a90:	bl	10ef8 <__errno_location@plt>
   17a94:	ldr	r0, [r0]
   17a98:	cmp	r0, #0
   17a9c:	beq	17ac4 <__assert_fail@plt+0x6b30>
   17aa0:	bl	10ef8 <__errno_location@plt>
   17aa4:	ldr	r0, [r0]
   17aa8:	cmp	r0, #34	; 0x22
   17aac:	beq	17abc <__assert_fail@plt+0x6b28>
   17ab0:	movw	r0, #4
   17ab4:	str	r0, [fp, #-4]
   17ab8:	b	17f58 <__assert_fail@plt+0x6fc4>
   17abc:	movw	r0, #1
   17ac0:	str	r0, [sp, #28]
   17ac4:	b	17ac8 <__assert_fail@plt+0x6b34>
   17ac8:	ldr	r0, [fp, #8]
   17acc:	movw	r1, #0
   17ad0:	cmp	r0, r1
   17ad4:	bne	17af0 <__assert_fail@plt+0x6b5c>
   17ad8:	ldr	r0, [sp, #32]
   17adc:	ldr	r1, [fp, #-20]	; 0xffffffec
   17ae0:	str	r0, [r1]
   17ae4:	ldr	r0, [sp, #28]
   17ae8:	str	r0, [fp, #-4]
   17aec:	b	17f58 <__assert_fail@plt+0x6fc4>
   17af0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   17af4:	ldr	r0, [r0]
   17af8:	ldrb	r0, [r0]
   17afc:	cmp	r0, #0
   17b00:	beq	17f44 <__assert_fail@plt+0x6fb0>
   17b04:	movw	r0, #1024	; 0x400
   17b08:	str	r0, [sp, #24]
   17b0c:	movw	r0, #1
   17b10:	str	r0, [sp, #20]
   17b14:	ldr	r0, [fp, #8]
   17b18:	ldr	r1, [fp, #-28]	; 0xffffffe4
   17b1c:	ldr	r1, [r1]
   17b20:	ldrb	r1, [r1]
   17b24:	bl	10ee0 <strchr@plt>
   17b28:	movw	r1, #0
   17b2c:	cmp	r0, r1
   17b30:	bne	17b50 <__assert_fail@plt+0x6bbc>
   17b34:	ldr	r0, [sp, #32]
   17b38:	ldr	r1, [fp, #-20]	; 0xffffffec
   17b3c:	str	r0, [r1]
   17b40:	ldr	r0, [sp, #28]
   17b44:	orr	r0, r0, #2
   17b48:	str	r0, [fp, #-4]
   17b4c:	b	17f58 <__assert_fail@plt+0x6fc4>
   17b50:	ldr	r0, [fp, #-28]	; 0xffffffe4
   17b54:	ldr	r0, [r0]
   17b58:	ldrb	r0, [r0]
   17b5c:	sub	r0, r0, #69	; 0x45
   17b60:	cmp	r0, #47	; 0x2f
   17b64:	str	r0, [sp, #8]
   17b68:	bhi	17cd4 <__assert_fail@plt+0x6d40>
   17b6c:	add	r0, pc, #8
   17b70:	ldr	r1, [sp, #8]
   17b74:	ldr	r0, [r0, r1, lsl #2]
   17b78:	mov	pc, r0
   17b7c:	andeq	r7, r1, ip, lsr ip
   17b80:	ldrdeq	r7, [r1], -r4
   17b84:	andeq	r7, r1, ip, lsr ip
   17b88:	ldrdeq	r7, [r1], -r4
   17b8c:	ldrdeq	r7, [r1], -r4
   17b90:	ldrdeq	r7, [r1], -r4
   17b94:	andeq	r7, r1, ip, lsr ip
   17b98:	ldrdeq	r7, [r1], -r4
   17b9c:	andeq	r7, r1, ip, lsr ip
   17ba0:	ldrdeq	r7, [r1], -r4
   17ba4:	ldrdeq	r7, [r1], -r4
   17ba8:	andeq	r7, r1, ip, lsr ip
   17bac:	ldrdeq	r7, [r1], -r4
   17bb0:	ldrdeq	r7, [r1], -r4
   17bb4:	ldrdeq	r7, [r1], -r4
   17bb8:	andeq	r7, r1, ip, lsr ip
   17bbc:	ldrdeq	r7, [r1], -r4
   17bc0:	ldrdeq	r7, [r1], -r4
   17bc4:	ldrdeq	r7, [r1], -r4
   17bc8:	ldrdeq	r7, [r1], -r4
   17bcc:	andeq	r7, r1, ip, lsr ip
   17bd0:	andeq	r7, r1, ip, lsr ip
   17bd4:	ldrdeq	r7, [r1], -r4
   17bd8:	ldrdeq	r7, [r1], -r4
   17bdc:	ldrdeq	r7, [r1], -r4
   17be0:	ldrdeq	r7, [r1], -r4
   17be4:	ldrdeq	r7, [r1], -r4
   17be8:	ldrdeq	r7, [r1], -r4
   17bec:	ldrdeq	r7, [r1], -r4
   17bf0:	ldrdeq	r7, [r1], -r4
   17bf4:	ldrdeq	r7, [r1], -r4
   17bf8:	ldrdeq	r7, [r1], -r4
   17bfc:	ldrdeq	r7, [r1], -r4
   17c00:	ldrdeq	r7, [r1], -r4
   17c04:	andeq	r7, r1, ip, lsr ip
   17c08:	ldrdeq	r7, [r1], -r4
   17c0c:	ldrdeq	r7, [r1], -r4
   17c10:	ldrdeq	r7, [r1], -r4
   17c14:	andeq	r7, r1, ip, lsr ip
   17c18:	ldrdeq	r7, [r1], -r4
   17c1c:	andeq	r7, r1, ip, lsr ip
   17c20:	ldrdeq	r7, [r1], -r4
   17c24:	ldrdeq	r7, [r1], -r4
   17c28:	ldrdeq	r7, [r1], -r4
   17c2c:	ldrdeq	r7, [r1], -r4
   17c30:	ldrdeq	r7, [r1], -r4
   17c34:	ldrdeq	r7, [r1], -r4
   17c38:	andeq	r7, r1, ip, lsr ip
   17c3c:	ldr	r0, [fp, #8]
   17c40:	movw	r1, #48	; 0x30
   17c44:	bl	10ee0 <strchr@plt>
   17c48:	movw	r1, #0
   17c4c:	cmp	r0, r1
   17c50:	beq	17cd0 <__assert_fail@plt+0x6d3c>
   17c54:	ldr	r0, [fp, #-28]	; 0xffffffe4
   17c58:	ldr	r0, [r0]
   17c5c:	ldrb	r0, [r0, #1]
   17c60:	mov	r1, r0
   17c64:	cmp	r0, #66	; 0x42
   17c68:	str	r1, [sp, #4]
   17c6c:	beq	17cb8 <__assert_fail@plt+0x6d24>
   17c70:	b	17c74 <__assert_fail@plt+0x6ce0>
   17c74:	ldr	r0, [sp, #4]
   17c78:	cmp	r0, #68	; 0x44
   17c7c:	beq	17cb8 <__assert_fail@plt+0x6d24>
   17c80:	b	17c84 <__assert_fail@plt+0x6cf0>
   17c84:	ldr	r0, [sp, #4]
   17c88:	cmp	r0, #105	; 0x69
   17c8c:	bne	17ccc <__assert_fail@plt+0x6d38>
   17c90:	b	17c94 <__assert_fail@plt+0x6d00>
   17c94:	ldr	r0, [fp, #-28]	; 0xffffffe4
   17c98:	ldr	r0, [r0]
   17c9c:	ldrb	r0, [r0, #2]
   17ca0:	cmp	r0, #66	; 0x42
   17ca4:	bne	17cb4 <__assert_fail@plt+0x6d20>
   17ca8:	ldr	r0, [sp, #20]
   17cac:	add	r0, r0, #2
   17cb0:	str	r0, [sp, #20]
   17cb4:	b	17ccc <__assert_fail@plt+0x6d38>
   17cb8:	movw	r0, #1000	; 0x3e8
   17cbc:	str	r0, [sp, #24]
   17cc0:	ldr	r0, [sp, #20]
   17cc4:	add	r0, r0, #1
   17cc8:	str	r0, [sp, #20]
   17ccc:	b	17cd0 <__assert_fail@plt+0x6d3c>
   17cd0:	b	17cd4 <__assert_fail@plt+0x6d40>
   17cd4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   17cd8:	ldr	r0, [r0]
   17cdc:	ldrb	r0, [r0]
   17ce0:	sub	r0, r0, #66	; 0x42
   17ce4:	cmp	r0, #53	; 0x35
   17ce8:	str	r0, [sp]
   17cec:	bhi	17ee0 <__assert_fail@plt+0x6f4c>
   17cf0:	add	r0, pc, #8
   17cf4:	ldr	r1, [sp]
   17cf8:	ldr	r0, [r0, r1, lsl #2]
   17cfc:	mov	pc, r0
   17d00:	andeq	r7, r1, ip, ror #27
   17d04:	andeq	r7, r1, r0, ror #29
   17d08:	andeq	r7, r1, r0, ror #29
   17d0c:	andeq	r7, r1, ip, lsl #28
   17d10:	andeq	r7, r1, r0, ror #29
   17d14:	andeq	r7, r1, r4, lsr #28
   17d18:	andeq	r7, r1, r0, ror #29
   17d1c:	andeq	r7, r1, r0, ror #29
   17d20:	andeq	r7, r1, r0, ror #29
   17d24:	andeq	r7, r1, ip, lsr lr
   17d28:	andeq	r7, r1, r0, ror #29
   17d2c:	andeq	r7, r1, r4, asr lr
   17d30:	andeq	r7, r1, r0, ror #29
   17d34:	andeq	r7, r1, r0, ror #29
   17d38:	andeq	r7, r1, ip, ror #28
   17d3c:	andeq	r7, r1, r0, ror #29
   17d40:	andeq	r7, r1, r0, ror #29
   17d44:	andeq	r7, r1, r0, ror #29
   17d48:	andeq	r7, r1, r4, lsl #29
   17d4c:	andeq	r7, r1, r0, ror #29
   17d50:	andeq	r7, r1, r0, ror #29
   17d54:	andeq	r7, r1, r0, ror #29
   17d58:	andeq	r7, r1, r0, ror #29
   17d5c:			; <UNDEFINED> instruction: 0x00017eb0
   17d60:	andeq	r7, r1, r8, asr #29
   17d64:	andeq	r7, r1, r0, ror #29
   17d68:	andeq	r7, r1, r0, ror #29
   17d6c:	andeq	r7, r1, r0, ror #29
   17d70:	andeq	r7, r1, r0, ror #29
   17d74:	andeq	r7, r1, r0, ror #29
   17d78:	andeq	r7, r1, r0, ror #29
   17d7c:	andeq	r7, r1, r0, ror #29
   17d80:	ldrdeq	r7, [r1], -r8
   17d84:	andeq	r7, r1, r0, lsl #28
   17d88:	andeq	r7, r1, r0, ror #29
   17d8c:	andeq	r7, r1, r0, ror #29
   17d90:	andeq	r7, r1, r0, ror #29
   17d94:	andeq	r7, r1, r4, lsr #28
   17d98:	andeq	r7, r1, r0, ror #29
   17d9c:	andeq	r7, r1, r0, ror #29
   17da0:	andeq	r7, r1, r0, ror #29
   17da4:	andeq	r7, r1, ip, lsr lr
   17da8:	andeq	r7, r1, r0, ror #29
   17dac:	andeq	r7, r1, r4, asr lr
   17db0:	andeq	r7, r1, r0, ror #29
   17db4:	andeq	r7, r1, r0, ror #29
   17db8:	andeq	r7, r1, r0, ror #29
   17dbc:	andeq	r7, r1, r0, ror #29
   17dc0:	andeq	r7, r1, r0, ror #29
   17dc4:	andeq	r7, r1, r0, ror #29
   17dc8:	andeq	r7, r1, r4, lsl #29
   17dcc:	andeq	r7, r1, r0, ror #29
   17dd0:	andeq	r7, r1, r0, ror #29
   17dd4:	muleq	r1, ip, lr
   17dd8:	add	r0, sp, #32
   17ddc:	movw	r1, #512	; 0x200
   17de0:	bl	17f64 <__assert_fail@plt+0x6fd0>
   17de4:	str	r0, [sp, #16]
   17de8:	b	17efc <__assert_fail@plt+0x6f68>
   17dec:	add	r0, sp, #32
   17df0:	movw	r1, #1024	; 0x400
   17df4:	bl	17f64 <__assert_fail@plt+0x6fd0>
   17df8:	str	r0, [sp, #16]
   17dfc:	b	17efc <__assert_fail@plt+0x6f68>
   17e00:	movw	r0, #0
   17e04:	str	r0, [sp, #16]
   17e08:	b	17efc <__assert_fail@plt+0x6f68>
   17e0c:	ldr	r1, [sp, #24]
   17e10:	add	r0, sp, #32
   17e14:	movw	r2, #6
   17e18:	bl	19580 <__assert_fail@plt+0x85ec>
   17e1c:	str	r0, [sp, #16]
   17e20:	b	17efc <__assert_fail@plt+0x6f68>
   17e24:	ldr	r1, [sp, #24]
   17e28:	add	r0, sp, #32
   17e2c:	movw	r2, #3
   17e30:	bl	19580 <__assert_fail@plt+0x85ec>
   17e34:	str	r0, [sp, #16]
   17e38:	b	17efc <__assert_fail@plt+0x6f68>
   17e3c:	ldr	r1, [sp, #24]
   17e40:	add	r0, sp, #32
   17e44:	movw	r2, #1
   17e48:	bl	19580 <__assert_fail@plt+0x85ec>
   17e4c:	str	r0, [sp, #16]
   17e50:	b	17efc <__assert_fail@plt+0x6f68>
   17e54:	ldr	r1, [sp, #24]
   17e58:	add	r0, sp, #32
   17e5c:	movw	r2, #2
   17e60:	bl	19580 <__assert_fail@plt+0x85ec>
   17e64:	str	r0, [sp, #16]
   17e68:	b	17efc <__assert_fail@plt+0x6f68>
   17e6c:	ldr	r1, [sp, #24]
   17e70:	add	r0, sp, #32
   17e74:	movw	r2, #5
   17e78:	bl	19580 <__assert_fail@plt+0x85ec>
   17e7c:	str	r0, [sp, #16]
   17e80:	b	17efc <__assert_fail@plt+0x6f68>
   17e84:	ldr	r1, [sp, #24]
   17e88:	add	r0, sp, #32
   17e8c:	movw	r2, #4
   17e90:	bl	19580 <__assert_fail@plt+0x85ec>
   17e94:	str	r0, [sp, #16]
   17e98:	b	17efc <__assert_fail@plt+0x6f68>
   17e9c:	add	r0, sp, #32
   17ea0:	movw	r1, #2
   17ea4:	bl	17f64 <__assert_fail@plt+0x6fd0>
   17ea8:	str	r0, [sp, #16]
   17eac:	b	17efc <__assert_fail@plt+0x6f68>
   17eb0:	ldr	r1, [sp, #24]
   17eb4:	add	r0, sp, #32
   17eb8:	movw	r2, #8
   17ebc:	bl	19580 <__assert_fail@plt+0x85ec>
   17ec0:	str	r0, [sp, #16]
   17ec4:	b	17efc <__assert_fail@plt+0x6f68>
   17ec8:	ldr	r1, [sp, #24]
   17ecc:	add	r0, sp, #32
   17ed0:	movw	r2, #7
   17ed4:	bl	19580 <__assert_fail@plt+0x85ec>
   17ed8:	str	r0, [sp, #16]
   17edc:	b	17efc <__assert_fail@plt+0x6f68>
   17ee0:	ldr	r0, [sp, #32]
   17ee4:	ldr	r1, [fp, #-20]	; 0xffffffec
   17ee8:	str	r0, [r1]
   17eec:	ldr	r0, [sp, #28]
   17ef0:	orr	r0, r0, #2
   17ef4:	str	r0, [fp, #-4]
   17ef8:	b	17f58 <__assert_fail@plt+0x6fc4>
   17efc:	ldr	r0, [sp, #16]
   17f00:	ldr	r1, [sp, #28]
   17f04:	orr	r0, r1, r0
   17f08:	str	r0, [sp, #28]
   17f0c:	ldr	r0, [sp, #20]
   17f10:	ldr	r1, [fp, #-28]	; 0xffffffe4
   17f14:	ldr	r2, [r1]
   17f18:	add	r0, r2, r0
   17f1c:	str	r0, [r1]
   17f20:	ldr	r0, [fp, #-28]	; 0xffffffe4
   17f24:	ldr	r0, [r0]
   17f28:	ldrsb	r0, [r0]
   17f2c:	cmp	r0, #0
   17f30:	beq	17f40 <__assert_fail@plt+0x6fac>
   17f34:	ldr	r0, [sp, #28]
   17f38:	orr	r0, r0, #2
   17f3c:	str	r0, [sp, #28]
   17f40:	b	17f44 <__assert_fail@plt+0x6fb0>
   17f44:	ldr	r0, [sp, #32]
   17f48:	ldr	r1, [fp, #-20]	; 0xffffffec
   17f4c:	str	r0, [r1]
   17f50:	ldr	r0, [sp, #28]
   17f54:	str	r0, [fp, #-4]
   17f58:	ldr	r0, [fp, #-4]
   17f5c:	mov	sp, fp
   17f60:	pop	{fp, pc}
   17f64:	push	{fp, lr}
   17f68:	mov	fp, sp
   17f6c:	sub	sp, sp, #104	; 0x68
   17f70:	str	r0, [fp, #-8]
   17f74:	str	r1, [fp, #-12]
   17f78:	b	183b8 <__assert_fail@plt+0x7424>
   17f7c:	b	17f80 <__assert_fail@plt+0x6fec>
   17f80:	ldr	r0, [fp, #-12]
   17f84:	cmp	r0, #0
   17f88:	bge	180b8 <__assert_fail@plt+0x7124>
   17f8c:	ldr	r0, [fp, #-8]
   17f90:	ldr	r0, [r0]
   17f94:	cmp	r0, #0
   17f98:	bge	1802c <__assert_fail@plt+0x7098>
   17f9c:	b	17fa0 <__assert_fail@plt+0x700c>
   17fa0:	ldr	r0, [fp, #-8]
   17fa4:	ldr	r0, [r0]
   17fa8:	ldr	r1, [fp, #-12]
   17fac:	movw	r2, #127	; 0x7f
   17fb0:	sdiv	r1, r2, r1
   17fb4:	cmp	r0, r1
   17fb8:	blt	18168 <__assert_fail@plt+0x71d4>
   17fbc:	b	18184 <__assert_fail@plt+0x71f0>
   17fc0:	b	17fc4 <__assert_fail@plt+0x7030>
   17fc4:	ldr	r0, [pc, #4064]	; 18fac <__assert_fail@plt+0x8018>
   17fc8:	ldr	r1, [fp, #-12]
   17fcc:	cmp	r1, r0
   17fd0:	blt	17fe8 <__assert_fail@plt+0x7054>
   17fd4:	b	17ff4 <__assert_fail@plt+0x7060>
   17fd8:	ldr	r0, [fp, #-12]
   17fdc:	movw	r1, #0
   17fe0:	cmp	r1, r0
   17fe4:	bge	17ff4 <__assert_fail@plt+0x7060>
   17fe8:	movw	r0, #0
   17fec:	str	r0, [fp, #-20]	; 0xffffffec
   17ff0:	b	1800c <__assert_fail@plt+0x7078>
   17ff4:	ldr	r0, [fp, #-12]
   17ff8:	movw	r1, #0
   17ffc:	sub	r0, r1, r0
   18000:	movw	r1, #127	; 0x7f
   18004:	sdiv	r0, r1, r0
   18008:	str	r0, [fp, #-20]	; 0xffffffec
   1800c:	ldr	r0, [fp, #-20]	; 0xffffffec
   18010:	ldr	r1, [fp, #-8]
   18014:	ldr	r1, [r1]
   18018:	mvn	r2, #0
   1801c:	sub	r1, r2, r1
   18020:	cmp	r0, r1
   18024:	ble	18168 <__assert_fail@plt+0x71d4>
   18028:	b	18184 <__assert_fail@plt+0x71f0>
   1802c:	b	18030 <__assert_fail@plt+0x709c>
   18030:	b	18098 <__assert_fail@plt+0x7104>
   18034:	b	18098 <__assert_fail@plt+0x7104>
   18038:	ldr	r0, [fp, #-12]
   1803c:	cmn	r0, #1
   18040:	bne	18098 <__assert_fail@plt+0x7104>
   18044:	b	18048 <__assert_fail@plt+0x70b4>
   18048:	ldr	r0, [fp, #-8]
   1804c:	ldr	r0, [r0]
   18050:	mvn	r1, #127	; 0x7f
   18054:	add	r0, r0, r1
   18058:	movw	r1, #0
   1805c:	cmp	r1, r0
   18060:	blt	18168 <__assert_fail@plt+0x71d4>
   18064:	b	18184 <__assert_fail@plt+0x71f0>
   18068:	ldr	r0, [fp, #-8]
   1806c:	ldr	r0, [r0]
   18070:	movw	r1, #0
   18074:	cmp	r1, r0
   18078:	bge	18184 <__assert_fail@plt+0x71f0>
   1807c:	ldr	r0, [fp, #-8]
   18080:	ldr	r0, [r0]
   18084:	sub	r0, r0, #1
   18088:	movw	r1, #127	; 0x7f
   1808c:	cmp	r1, r0
   18090:	blt	18168 <__assert_fail@plt+0x71d4>
   18094:	b	18184 <__assert_fail@plt+0x71f0>
   18098:	ldr	r0, [fp, #-12]
   1809c:	mvn	r1, #127	; 0x7f
   180a0:	sdiv	r0, r1, r0
   180a4:	ldr	r1, [fp, #-8]
   180a8:	ldr	r1, [r1]
   180ac:	cmp	r0, r1
   180b0:	blt	18168 <__assert_fail@plt+0x71d4>
   180b4:	b	18184 <__assert_fail@plt+0x71f0>
   180b8:	ldr	r0, [fp, #-12]
   180bc:	cmp	r0, #0
   180c0:	bne	180c8 <__assert_fail@plt+0x7134>
   180c4:	b	18184 <__assert_fail@plt+0x71f0>
   180c8:	ldr	r0, [fp, #-8]
   180cc:	ldr	r0, [r0]
   180d0:	cmp	r0, #0
   180d4:	bge	1814c <__assert_fail@plt+0x71b8>
   180d8:	b	180dc <__assert_fail@plt+0x7148>
   180dc:	b	1812c <__assert_fail@plt+0x7198>
   180e0:	b	1812c <__assert_fail@plt+0x7198>
   180e4:	ldr	r0, [fp, #-8]
   180e8:	ldr	r0, [r0]
   180ec:	cmn	r0, #1
   180f0:	bne	1812c <__assert_fail@plt+0x7198>
   180f4:	b	180f8 <__assert_fail@plt+0x7164>
   180f8:	ldr	r0, [fp, #-12]
   180fc:	mvn	r1, #127	; 0x7f
   18100:	add	r0, r0, r1
   18104:	movw	r1, #0
   18108:	cmp	r1, r0
   1810c:	blt	18168 <__assert_fail@plt+0x71d4>
   18110:	b	18184 <__assert_fail@plt+0x71f0>
   18114:	ldr	r0, [fp, #-12]
   18118:	sub	r0, r0, #1
   1811c:	movw	r1, #127	; 0x7f
   18120:	cmp	r1, r0
   18124:	blt	18168 <__assert_fail@plt+0x71d4>
   18128:	b	18184 <__assert_fail@plt+0x71f0>
   1812c:	ldr	r0, [fp, #-8]
   18130:	ldr	r0, [r0]
   18134:	mvn	r1, #127	; 0x7f
   18138:	sdiv	r0, r1, r0
   1813c:	ldr	r1, [fp, #-12]
   18140:	cmp	r0, r1
   18144:	blt	18168 <__assert_fail@plt+0x71d4>
   18148:	b	18184 <__assert_fail@plt+0x71f0>
   1814c:	ldr	r0, [fp, #-12]
   18150:	movw	r1, #127	; 0x7f
   18154:	sdiv	r0, r1, r0
   18158:	ldr	r1, [fp, #-8]
   1815c:	ldr	r1, [r1]
   18160:	cmp	r0, r1
   18164:	bge	18184 <__assert_fail@plt+0x71f0>
   18168:	ldr	r0, [fp, #-8]
   1816c:	ldr	r0, [r0]
   18170:	ldr	r1, [fp, #-12]
   18174:	mul	r0, r0, r1
   18178:	sxtb	r0, r0
   1817c:	str	r0, [fp, #-16]
   18180:	b	1951c <__assert_fail@plt+0x8588>
   18184:	ldr	r0, [fp, #-8]
   18188:	ldr	r0, [r0]
   1818c:	ldr	r1, [fp, #-12]
   18190:	mul	r0, r0, r1
   18194:	sxtb	r0, r0
   18198:	str	r0, [fp, #-16]
   1819c:	b	19554 <__assert_fail@plt+0x85c0>
   181a0:	ldr	r0, [fp, #-12]
   181a4:	cmp	r0, #0
   181a8:	bge	182d4 <__assert_fail@plt+0x7340>
   181ac:	ldr	r0, [fp, #-8]
   181b0:	ldr	r0, [r0]
   181b4:	cmp	r0, #0
   181b8:	bge	1824c <__assert_fail@plt+0x72b8>
   181bc:	b	181c0 <__assert_fail@plt+0x722c>
   181c0:	ldr	r0, [fp, #-8]
   181c4:	ldr	r0, [r0]
   181c8:	ldr	r1, [fp, #-12]
   181cc:	movw	r2, #255	; 0xff
   181d0:	sdiv	r1, r2, r1
   181d4:	cmp	r0, r1
   181d8:	blt	18380 <__assert_fail@plt+0x73ec>
   181dc:	b	1839c <__assert_fail@plt+0x7408>
   181e0:	b	181e4 <__assert_fail@plt+0x7250>
   181e4:	ldr	r0, [pc, #3520]	; 18fac <__assert_fail@plt+0x8018>
   181e8:	ldr	r1, [fp, #-12]
   181ec:	cmp	r1, r0
   181f0:	blt	18208 <__assert_fail@plt+0x7274>
   181f4:	b	18214 <__assert_fail@plt+0x7280>
   181f8:	ldr	r0, [fp, #-12]
   181fc:	movw	r1, #0
   18200:	cmp	r1, r0
   18204:	bge	18214 <__assert_fail@plt+0x7280>
   18208:	movw	r0, #0
   1820c:	str	r0, [fp, #-24]	; 0xffffffe8
   18210:	b	1822c <__assert_fail@plt+0x7298>
   18214:	ldr	r0, [fp, #-12]
   18218:	movw	r1, #0
   1821c:	sub	r0, r1, r0
   18220:	movw	r1, #255	; 0xff
   18224:	sdiv	r0, r1, r0
   18228:	str	r0, [fp, #-24]	; 0xffffffe8
   1822c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18230:	ldr	r1, [fp, #-8]
   18234:	ldr	r1, [r1]
   18238:	mvn	r2, #0
   1823c:	sub	r1, r2, r1
   18240:	cmp	r0, r1
   18244:	ble	18380 <__assert_fail@plt+0x73ec>
   18248:	b	1839c <__assert_fail@plt+0x7408>
   1824c:	b	18250 <__assert_fail@plt+0x72bc>
   18250:	b	182b4 <__assert_fail@plt+0x7320>
   18254:	b	182b4 <__assert_fail@plt+0x7320>
   18258:	ldr	r0, [fp, #-12]
   1825c:	cmn	r0, #1
   18260:	bne	182b4 <__assert_fail@plt+0x7320>
   18264:	b	18268 <__assert_fail@plt+0x72d4>
   18268:	ldr	r0, [fp, #-8]
   1826c:	ldr	r0, [r0]
   18270:	add	r0, r0, #0
   18274:	movw	r1, #0
   18278:	cmp	r1, r0
   1827c:	blt	18380 <__assert_fail@plt+0x73ec>
   18280:	b	1839c <__assert_fail@plt+0x7408>
   18284:	ldr	r0, [fp, #-8]
   18288:	ldr	r0, [r0]
   1828c:	movw	r1, #0
   18290:	cmp	r1, r0
   18294:	bge	1839c <__assert_fail@plt+0x7408>
   18298:	ldr	r0, [fp, #-8]
   1829c:	ldr	r0, [r0]
   182a0:	sub	r0, r0, #1
   182a4:	mvn	r1, #0
   182a8:	cmp	r1, r0
   182ac:	blt	18380 <__assert_fail@plt+0x73ec>
   182b0:	b	1839c <__assert_fail@plt+0x7408>
   182b4:	ldr	r0, [fp, #-12]
   182b8:	movw	r1, #0
   182bc:	sdiv	r0, r1, r0
   182c0:	ldr	r1, [fp, #-8]
   182c4:	ldr	r1, [r1]
   182c8:	cmp	r0, r1
   182cc:	blt	18380 <__assert_fail@plt+0x73ec>
   182d0:	b	1839c <__assert_fail@plt+0x7408>
   182d4:	ldr	r0, [fp, #-12]
   182d8:	cmp	r0, #0
   182dc:	bne	182e4 <__assert_fail@plt+0x7350>
   182e0:	b	1839c <__assert_fail@plt+0x7408>
   182e4:	ldr	r0, [fp, #-8]
   182e8:	ldr	r0, [r0]
   182ec:	cmp	r0, #0
   182f0:	bge	18364 <__assert_fail@plt+0x73d0>
   182f4:	b	182f8 <__assert_fail@plt+0x7364>
   182f8:	b	18344 <__assert_fail@plt+0x73b0>
   182fc:	b	18344 <__assert_fail@plt+0x73b0>
   18300:	ldr	r0, [fp, #-8]
   18304:	ldr	r0, [r0]
   18308:	cmn	r0, #1
   1830c:	bne	18344 <__assert_fail@plt+0x73b0>
   18310:	b	18314 <__assert_fail@plt+0x7380>
   18314:	ldr	r0, [fp, #-12]
   18318:	add	r0, r0, #0
   1831c:	movw	r1, #0
   18320:	cmp	r1, r0
   18324:	blt	18380 <__assert_fail@plt+0x73ec>
   18328:	b	1839c <__assert_fail@plt+0x7408>
   1832c:	ldr	r0, [fp, #-12]
   18330:	sub	r0, r0, #1
   18334:	mvn	r1, #0
   18338:	cmp	r1, r0
   1833c:	blt	18380 <__assert_fail@plt+0x73ec>
   18340:	b	1839c <__assert_fail@plt+0x7408>
   18344:	ldr	r0, [fp, #-8]
   18348:	ldr	r0, [r0]
   1834c:	movw	r1, #0
   18350:	sdiv	r0, r1, r0
   18354:	ldr	r1, [fp, #-12]
   18358:	cmp	r0, r1
   1835c:	blt	18380 <__assert_fail@plt+0x73ec>
   18360:	b	1839c <__assert_fail@plt+0x7408>
   18364:	ldr	r0, [fp, #-12]
   18368:	movw	r1, #255	; 0xff
   1836c:	sdiv	r0, r1, r0
   18370:	ldr	r1, [fp, #-8]
   18374:	ldr	r1, [r1]
   18378:	cmp	r0, r1
   1837c:	bge	1839c <__assert_fail@plt+0x7408>
   18380:	ldr	r0, [fp, #-8]
   18384:	ldr	r0, [r0]
   18388:	ldr	r1, [fp, #-12]
   1838c:	mul	r0, r0, r1
   18390:	and	r0, r0, #255	; 0xff
   18394:	str	r0, [fp, #-16]
   18398:	b	1951c <__assert_fail@plt+0x8588>
   1839c:	ldr	r0, [fp, #-8]
   183a0:	ldr	r0, [r0]
   183a4:	ldr	r1, [fp, #-12]
   183a8:	mul	r0, r0, r1
   183ac:	and	r0, r0, #255	; 0xff
   183b0:	str	r0, [fp, #-16]
   183b4:	b	19554 <__assert_fail@plt+0x85c0>
   183b8:	b	187f8 <__assert_fail@plt+0x7864>
   183bc:	b	183c0 <__assert_fail@plt+0x742c>
   183c0:	ldr	r0, [fp, #-12]
   183c4:	cmp	r0, #0
   183c8:	bge	184f8 <__assert_fail@plt+0x7564>
   183cc:	ldr	r0, [fp, #-8]
   183d0:	ldr	r0, [r0]
   183d4:	cmp	r0, #0
   183d8:	bge	1846c <__assert_fail@plt+0x74d8>
   183dc:	b	183e0 <__assert_fail@plt+0x744c>
   183e0:	ldr	r0, [fp, #-8]
   183e4:	ldr	r0, [r0]
   183e8:	ldr	r1, [fp, #-12]
   183ec:	movw	r2, #32767	; 0x7fff
   183f0:	sdiv	r1, r2, r1
   183f4:	cmp	r0, r1
   183f8:	blt	185a8 <__assert_fail@plt+0x7614>
   183fc:	b	185c4 <__assert_fail@plt+0x7630>
   18400:	b	18404 <__assert_fail@plt+0x7470>
   18404:	ldr	r0, [pc, #2976]	; 18fac <__assert_fail@plt+0x8018>
   18408:	ldr	r1, [fp, #-12]
   1840c:	cmp	r1, r0
   18410:	blt	18428 <__assert_fail@plt+0x7494>
   18414:	b	18434 <__assert_fail@plt+0x74a0>
   18418:	ldr	r0, [fp, #-12]
   1841c:	movw	r1, #0
   18420:	cmp	r1, r0
   18424:	bge	18434 <__assert_fail@plt+0x74a0>
   18428:	movw	r0, #0
   1842c:	str	r0, [fp, #-28]	; 0xffffffe4
   18430:	b	1844c <__assert_fail@plt+0x74b8>
   18434:	ldr	r0, [fp, #-12]
   18438:	movw	r1, #0
   1843c:	sub	r0, r1, r0
   18440:	movw	r1, #32767	; 0x7fff
   18444:	sdiv	r0, r1, r0
   18448:	str	r0, [fp, #-28]	; 0xffffffe4
   1844c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   18450:	ldr	r1, [fp, #-8]
   18454:	ldr	r1, [r1]
   18458:	mvn	r2, #0
   1845c:	sub	r1, r2, r1
   18460:	cmp	r0, r1
   18464:	ble	185a8 <__assert_fail@plt+0x7614>
   18468:	b	185c4 <__assert_fail@plt+0x7630>
   1846c:	b	18470 <__assert_fail@plt+0x74dc>
   18470:	b	184d8 <__assert_fail@plt+0x7544>
   18474:	b	184d8 <__assert_fail@plt+0x7544>
   18478:	ldr	r0, [fp, #-12]
   1847c:	cmn	r0, #1
   18480:	bne	184d8 <__assert_fail@plt+0x7544>
   18484:	b	18488 <__assert_fail@plt+0x74f4>
   18488:	ldr	r0, [pc, #4076]	; 1947c <__assert_fail@plt+0x84e8>
   1848c:	ldr	r1, [fp, #-8]
   18490:	ldr	r1, [r1]
   18494:	add	r0, r1, r0
   18498:	movw	r1, #0
   1849c:	cmp	r1, r0
   184a0:	blt	185a8 <__assert_fail@plt+0x7614>
   184a4:	b	185c4 <__assert_fail@plt+0x7630>
   184a8:	ldr	r0, [fp, #-8]
   184ac:	ldr	r0, [r0]
   184b0:	movw	r1, #0
   184b4:	cmp	r1, r0
   184b8:	bge	185c4 <__assert_fail@plt+0x7630>
   184bc:	ldr	r0, [fp, #-8]
   184c0:	ldr	r0, [r0]
   184c4:	sub	r0, r0, #1
   184c8:	movw	r1, #32767	; 0x7fff
   184cc:	cmp	r1, r0
   184d0:	blt	185a8 <__assert_fail@plt+0x7614>
   184d4:	b	185c4 <__assert_fail@plt+0x7630>
   184d8:	ldr	r0, [pc, #3996]	; 1947c <__assert_fail@plt+0x84e8>
   184dc:	ldr	r1, [fp, #-12]
   184e0:	sdiv	r0, r0, r1
   184e4:	ldr	r1, [fp, #-8]
   184e8:	ldr	r1, [r1]
   184ec:	cmp	r0, r1
   184f0:	blt	185a8 <__assert_fail@plt+0x7614>
   184f4:	b	185c4 <__assert_fail@plt+0x7630>
   184f8:	ldr	r0, [fp, #-12]
   184fc:	cmp	r0, #0
   18500:	bne	18508 <__assert_fail@plt+0x7574>
   18504:	b	185c4 <__assert_fail@plt+0x7630>
   18508:	ldr	r0, [fp, #-8]
   1850c:	ldr	r0, [r0]
   18510:	cmp	r0, #0
   18514:	bge	1858c <__assert_fail@plt+0x75f8>
   18518:	b	1851c <__assert_fail@plt+0x7588>
   1851c:	b	1856c <__assert_fail@plt+0x75d8>
   18520:	b	1856c <__assert_fail@plt+0x75d8>
   18524:	ldr	r0, [fp, #-8]
   18528:	ldr	r0, [r0]
   1852c:	cmn	r0, #1
   18530:	bne	1856c <__assert_fail@plt+0x75d8>
   18534:	b	18538 <__assert_fail@plt+0x75a4>
   18538:	ldr	r0, [pc, #3900]	; 1947c <__assert_fail@plt+0x84e8>
   1853c:	ldr	r1, [fp, #-12]
   18540:	add	r0, r1, r0
   18544:	movw	r1, #0
   18548:	cmp	r1, r0
   1854c:	blt	185a8 <__assert_fail@plt+0x7614>
   18550:	b	185c4 <__assert_fail@plt+0x7630>
   18554:	ldr	r0, [fp, #-12]
   18558:	sub	r0, r0, #1
   1855c:	movw	r1, #32767	; 0x7fff
   18560:	cmp	r1, r0
   18564:	blt	185a8 <__assert_fail@plt+0x7614>
   18568:	b	185c4 <__assert_fail@plt+0x7630>
   1856c:	ldr	r0, [pc, #3848]	; 1947c <__assert_fail@plt+0x84e8>
   18570:	ldr	r1, [fp, #-8]
   18574:	ldr	r1, [r1]
   18578:	sdiv	r0, r0, r1
   1857c:	ldr	r1, [fp, #-12]
   18580:	cmp	r0, r1
   18584:	blt	185a8 <__assert_fail@plt+0x7614>
   18588:	b	185c4 <__assert_fail@plt+0x7630>
   1858c:	ldr	r0, [fp, #-12]
   18590:	movw	r1, #32767	; 0x7fff
   18594:	sdiv	r0, r1, r0
   18598:	ldr	r1, [fp, #-8]
   1859c:	ldr	r1, [r1]
   185a0:	cmp	r0, r1
   185a4:	bge	185c4 <__assert_fail@plt+0x7630>
   185a8:	ldr	r0, [fp, #-8]
   185ac:	ldr	r0, [r0]
   185b0:	ldr	r1, [fp, #-12]
   185b4:	mul	r0, r0, r1
   185b8:	sxth	r0, r0
   185bc:	str	r0, [fp, #-16]
   185c0:	b	1951c <__assert_fail@plt+0x8588>
   185c4:	ldr	r0, [fp, #-8]
   185c8:	ldr	r0, [r0]
   185cc:	ldr	r1, [fp, #-12]
   185d0:	mul	r0, r0, r1
   185d4:	sxth	r0, r0
   185d8:	str	r0, [fp, #-16]
   185dc:	b	19554 <__assert_fail@plt+0x85c0>
   185e0:	ldr	r0, [fp, #-12]
   185e4:	cmp	r0, #0
   185e8:	bge	18714 <__assert_fail@plt+0x7780>
   185ec:	ldr	r0, [fp, #-8]
   185f0:	ldr	r0, [r0]
   185f4:	cmp	r0, #0
   185f8:	bge	1868c <__assert_fail@plt+0x76f8>
   185fc:	b	18600 <__assert_fail@plt+0x766c>
   18600:	ldr	r0, [fp, #-8]
   18604:	ldr	r0, [r0]
   18608:	ldr	r1, [fp, #-12]
   1860c:	movw	r2, #65535	; 0xffff
   18610:	sdiv	r1, r2, r1
   18614:	cmp	r0, r1
   18618:	blt	187c0 <__assert_fail@plt+0x782c>
   1861c:	b	187dc <__assert_fail@plt+0x7848>
   18620:	b	18624 <__assert_fail@plt+0x7690>
   18624:	ldr	r0, [pc, #3912]	; 19574 <__assert_fail@plt+0x85e0>
   18628:	ldr	r1, [fp, #-12]
   1862c:	cmp	r1, r0
   18630:	blt	18648 <__assert_fail@plt+0x76b4>
   18634:	b	18654 <__assert_fail@plt+0x76c0>
   18638:	ldr	r0, [fp, #-12]
   1863c:	movw	r1, #0
   18640:	cmp	r1, r0
   18644:	bge	18654 <__assert_fail@plt+0x76c0>
   18648:	movw	r0, #0
   1864c:	str	r0, [fp, #-32]	; 0xffffffe0
   18650:	b	1866c <__assert_fail@plt+0x76d8>
   18654:	ldr	r0, [fp, #-12]
   18658:	movw	r1, #0
   1865c:	sub	r0, r1, r0
   18660:	movw	r1, #65535	; 0xffff
   18664:	sdiv	r0, r1, r0
   18668:	str	r0, [fp, #-32]	; 0xffffffe0
   1866c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18670:	ldr	r1, [fp, #-8]
   18674:	ldr	r1, [r1]
   18678:	mvn	r2, #0
   1867c:	sub	r1, r2, r1
   18680:	cmp	r0, r1
   18684:	ble	187c0 <__assert_fail@plt+0x782c>
   18688:	b	187dc <__assert_fail@plt+0x7848>
   1868c:	b	18690 <__assert_fail@plt+0x76fc>
   18690:	b	186f4 <__assert_fail@plt+0x7760>
   18694:	b	186f4 <__assert_fail@plt+0x7760>
   18698:	ldr	r0, [fp, #-12]
   1869c:	cmn	r0, #1
   186a0:	bne	186f4 <__assert_fail@plt+0x7760>
   186a4:	b	186a8 <__assert_fail@plt+0x7714>
   186a8:	ldr	r0, [fp, #-8]
   186ac:	ldr	r0, [r0]
   186b0:	add	r0, r0, #0
   186b4:	movw	r1, #0
   186b8:	cmp	r1, r0
   186bc:	blt	187c0 <__assert_fail@plt+0x782c>
   186c0:	b	187dc <__assert_fail@plt+0x7848>
   186c4:	ldr	r0, [fp, #-8]
   186c8:	ldr	r0, [r0]
   186cc:	movw	r1, #0
   186d0:	cmp	r1, r0
   186d4:	bge	187dc <__assert_fail@plt+0x7848>
   186d8:	ldr	r0, [fp, #-8]
   186dc:	ldr	r0, [r0]
   186e0:	sub	r0, r0, #1
   186e4:	mvn	r1, #0
   186e8:	cmp	r1, r0
   186ec:	blt	187c0 <__assert_fail@plt+0x782c>
   186f0:	b	187dc <__assert_fail@plt+0x7848>
   186f4:	ldr	r0, [fp, #-12]
   186f8:	movw	r1, #0
   186fc:	sdiv	r0, r1, r0
   18700:	ldr	r1, [fp, #-8]
   18704:	ldr	r1, [r1]
   18708:	cmp	r0, r1
   1870c:	blt	187c0 <__assert_fail@plt+0x782c>
   18710:	b	187dc <__assert_fail@plt+0x7848>
   18714:	ldr	r0, [fp, #-12]
   18718:	cmp	r0, #0
   1871c:	bne	18724 <__assert_fail@plt+0x7790>
   18720:	b	187dc <__assert_fail@plt+0x7848>
   18724:	ldr	r0, [fp, #-8]
   18728:	ldr	r0, [r0]
   1872c:	cmp	r0, #0
   18730:	bge	187a4 <__assert_fail@plt+0x7810>
   18734:	b	18738 <__assert_fail@plt+0x77a4>
   18738:	b	18784 <__assert_fail@plt+0x77f0>
   1873c:	b	18784 <__assert_fail@plt+0x77f0>
   18740:	ldr	r0, [fp, #-8]
   18744:	ldr	r0, [r0]
   18748:	cmn	r0, #1
   1874c:	bne	18784 <__assert_fail@plt+0x77f0>
   18750:	b	18754 <__assert_fail@plt+0x77c0>
   18754:	ldr	r0, [fp, #-12]
   18758:	add	r0, r0, #0
   1875c:	movw	r1, #0
   18760:	cmp	r1, r0
   18764:	blt	187c0 <__assert_fail@plt+0x782c>
   18768:	b	187dc <__assert_fail@plt+0x7848>
   1876c:	ldr	r0, [fp, #-12]
   18770:	sub	r0, r0, #1
   18774:	mvn	r1, #0
   18778:	cmp	r1, r0
   1877c:	blt	187c0 <__assert_fail@plt+0x782c>
   18780:	b	187dc <__assert_fail@plt+0x7848>
   18784:	ldr	r0, [fp, #-8]
   18788:	ldr	r0, [r0]
   1878c:	movw	r1, #0
   18790:	sdiv	r0, r1, r0
   18794:	ldr	r1, [fp, #-12]
   18798:	cmp	r0, r1
   1879c:	blt	187c0 <__assert_fail@plt+0x782c>
   187a0:	b	187dc <__assert_fail@plt+0x7848>
   187a4:	ldr	r0, [fp, #-12]
   187a8:	movw	r1, #65535	; 0xffff
   187ac:	sdiv	r0, r1, r0
   187b0:	ldr	r1, [fp, #-8]
   187b4:	ldr	r1, [r1]
   187b8:	cmp	r0, r1
   187bc:	bge	187dc <__assert_fail@plt+0x7848>
   187c0:	ldr	r0, [fp, #-8]
   187c4:	ldr	r0, [r0]
   187c8:	ldr	r1, [fp, #-12]
   187cc:	mul	r0, r0, r1
   187d0:	uxth	r0, r0
   187d4:	str	r0, [fp, #-16]
   187d8:	b	1951c <__assert_fail@plt+0x8588>
   187dc:	ldr	r0, [fp, #-8]
   187e0:	ldr	r0, [r0]
   187e4:	ldr	r1, [fp, #-12]
   187e8:	mul	r0, r0, r1
   187ec:	uxth	r0, r0
   187f0:	str	r0, [fp, #-16]
   187f4:	b	19554 <__assert_fail@plt+0x85c0>
   187f8:	b	187fc <__assert_fail@plt+0x7868>
   187fc:	b	18800 <__assert_fail@plt+0x786c>
   18800:	ldr	r0, [fp, #-12]
   18804:	cmp	r0, #0
   18808:	bge	18928 <__assert_fail@plt+0x7994>
   1880c:	ldr	r0, [fp, #-8]
   18810:	ldr	r0, [r0]
   18814:	cmp	r0, #0
   18818:	bge	188ac <__assert_fail@plt+0x7918>
   1881c:	b	18820 <__assert_fail@plt+0x788c>
   18820:	ldr	r0, [pc, #3408]	; 19578 <__assert_fail@plt+0x85e4>
   18824:	ldr	r1, [fp, #-8]
   18828:	ldr	r1, [r1]
   1882c:	ldr	r2, [fp, #-12]
   18830:	sdiv	r0, r0, r2
   18834:	cmp	r1, r0
   18838:	blt	189c8 <__assert_fail@plt+0x7a34>
   1883c:	b	189e0 <__assert_fail@plt+0x7a4c>
   18840:	b	18844 <__assert_fail@plt+0x78b0>
   18844:	ldr	r0, [pc, #3368]	; 19574 <__assert_fail@plt+0x85e0>
   18848:	ldr	r1, [fp, #-12]
   1884c:	cmp	r1, r0
   18850:	blt	18868 <__assert_fail@plt+0x78d4>
   18854:	b	18874 <__assert_fail@plt+0x78e0>
   18858:	ldr	r0, [fp, #-12]
   1885c:	movw	r1, #0
   18860:	cmp	r1, r0
   18864:	bge	18874 <__assert_fail@plt+0x78e0>
   18868:	movw	r0, #0
   1886c:	str	r0, [fp, #-36]	; 0xffffffdc
   18870:	b	1888c <__assert_fail@plt+0x78f8>
   18874:	ldr	r0, [pc, #3324]	; 19578 <__assert_fail@plt+0x85e4>
   18878:	ldr	r1, [fp, #-12]
   1887c:	movw	r2, #0
   18880:	sub	r1, r2, r1
   18884:	sdiv	r0, r0, r1
   18888:	str	r0, [fp, #-36]	; 0xffffffdc
   1888c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   18890:	ldr	r1, [fp, #-8]
   18894:	ldr	r1, [r1]
   18898:	mvn	r2, #0
   1889c:	sub	r1, r2, r1
   188a0:	cmp	r0, r1
   188a4:	ble	189c8 <__assert_fail@plt+0x7a34>
   188a8:	b	189e0 <__assert_fail@plt+0x7a4c>
   188ac:	ldr	r0, [fp, #-12]
   188b0:	cmn	r0, #1
   188b4:	bne	18908 <__assert_fail@plt+0x7974>
   188b8:	b	188bc <__assert_fail@plt+0x7928>
   188bc:	ldr	r0, [fp, #-8]
   188c0:	ldr	r0, [r0]
   188c4:	add	r0, r0, #-2147483648	; 0x80000000
   188c8:	movw	r1, #0
   188cc:	cmp	r1, r0
   188d0:	blt	189c8 <__assert_fail@plt+0x7a34>
   188d4:	b	189e0 <__assert_fail@plt+0x7a4c>
   188d8:	ldr	r0, [fp, #-8]
   188dc:	ldr	r0, [r0]
   188e0:	movw	r1, #0
   188e4:	cmp	r1, r0
   188e8:	bge	189e0 <__assert_fail@plt+0x7a4c>
   188ec:	ldr	r0, [pc, #3204]	; 19578 <__assert_fail@plt+0x85e4>
   188f0:	ldr	r1, [fp, #-8]
   188f4:	ldr	r1, [r1]
   188f8:	sub	r1, r1, #1
   188fc:	cmp	r0, r1
   18900:	blt	189c8 <__assert_fail@plt+0x7a34>
   18904:	b	189e0 <__assert_fail@plt+0x7a4c>
   18908:	ldr	r0, [pc, #3180]	; 1957c <__assert_fail@plt+0x85e8>
   1890c:	ldr	r1, [fp, #-12]
   18910:	sdiv	r0, r0, r1
   18914:	ldr	r1, [fp, #-8]
   18918:	ldr	r1, [r1]
   1891c:	cmp	r0, r1
   18920:	blt	189c8 <__assert_fail@plt+0x7a34>
   18924:	b	189e0 <__assert_fail@plt+0x7a4c>
   18928:	ldr	r0, [fp, #-12]
   1892c:	cmp	r0, #0
   18930:	bne	18938 <__assert_fail@plt+0x79a4>
   18934:	b	189e0 <__assert_fail@plt+0x7a4c>
   18938:	ldr	r0, [fp, #-8]
   1893c:	ldr	r0, [r0]
   18940:	cmp	r0, #0
   18944:	bge	189ac <__assert_fail@plt+0x7a18>
   18948:	ldr	r0, [fp, #-8]
   1894c:	ldr	r0, [r0]
   18950:	cmn	r0, #1
   18954:	bne	1898c <__assert_fail@plt+0x79f8>
   18958:	b	1895c <__assert_fail@plt+0x79c8>
   1895c:	ldr	r0, [fp, #-12]
   18960:	add	r0, r0, #-2147483648	; 0x80000000
   18964:	movw	r1, #0
   18968:	cmp	r1, r0
   1896c:	blt	189c8 <__assert_fail@plt+0x7a34>
   18970:	b	189e0 <__assert_fail@plt+0x7a4c>
   18974:	ldr	r0, [pc, #3068]	; 19578 <__assert_fail@plt+0x85e4>
   18978:	ldr	r1, [fp, #-12]
   1897c:	sub	r1, r1, #1
   18980:	cmp	r0, r1
   18984:	blt	189c8 <__assert_fail@plt+0x7a34>
   18988:	b	189e0 <__assert_fail@plt+0x7a4c>
   1898c:	ldr	r0, [pc, #3048]	; 1957c <__assert_fail@plt+0x85e8>
   18990:	ldr	r1, [fp, #-8]
   18994:	ldr	r1, [r1]
   18998:	sdiv	r0, r0, r1
   1899c:	ldr	r1, [fp, #-12]
   189a0:	cmp	r0, r1
   189a4:	blt	189c8 <__assert_fail@plt+0x7a34>
   189a8:	b	189e0 <__assert_fail@plt+0x7a4c>
   189ac:	ldr	r0, [pc, #3012]	; 19578 <__assert_fail@plt+0x85e4>
   189b0:	ldr	r1, [fp, #-12]
   189b4:	sdiv	r0, r0, r1
   189b8:	ldr	r1, [fp, #-8]
   189bc:	ldr	r1, [r1]
   189c0:	cmp	r0, r1
   189c4:	bge	189e0 <__assert_fail@plt+0x7a4c>
   189c8:	ldr	r0, [fp, #-8]
   189cc:	ldr	r0, [r0]
   189d0:	ldr	r1, [fp, #-12]
   189d4:	mul	r0, r0, r1
   189d8:	str	r0, [fp, #-16]
   189dc:	b	1951c <__assert_fail@plt+0x8588>
   189e0:	ldr	r0, [fp, #-8]
   189e4:	ldr	r0, [r0]
   189e8:	ldr	r1, [fp, #-12]
   189ec:	mul	r0, r0, r1
   189f0:	str	r0, [fp, #-16]
   189f4:	b	19554 <__assert_fail@plt+0x85c0>
   189f8:	ldr	r0, [fp, #-12]
   189fc:	cmp	r0, #0
   18a00:	bge	18b2c <__assert_fail@plt+0x7b98>
   18a04:	ldr	r0, [fp, #-8]
   18a08:	ldr	r0, [r0]
   18a0c:	cmp	r0, #0
   18a10:	bge	18aa4 <__assert_fail@plt+0x7b10>
   18a14:	b	18a38 <__assert_fail@plt+0x7aa4>
   18a18:	ldr	r0, [fp, #-8]
   18a1c:	ldr	r0, [r0]
   18a20:	ldr	r1, [fp, #-12]
   18a24:	mvn	r2, #0
   18a28:	udiv	r1, r2, r1
   18a2c:	cmp	r0, r1
   18a30:	bcc	18bd8 <__assert_fail@plt+0x7c44>
   18a34:	b	18bf0 <__assert_fail@plt+0x7c5c>
   18a38:	b	18a3c <__assert_fail@plt+0x7aa8>
   18a3c:	ldr	r0, [pc, #2864]	; 19574 <__assert_fail@plt+0x85e0>
   18a40:	ldr	r1, [fp, #-12]
   18a44:	cmp	r1, r0
   18a48:	blt	18a60 <__assert_fail@plt+0x7acc>
   18a4c:	b	18a6c <__assert_fail@plt+0x7ad8>
   18a50:	ldr	r0, [fp, #-12]
   18a54:	movw	r1, #0
   18a58:	cmp	r1, r0
   18a5c:	bge	18a6c <__assert_fail@plt+0x7ad8>
   18a60:	movw	r0, #1
   18a64:	str	r0, [fp, #-40]	; 0xffffffd8
   18a68:	b	18a84 <__assert_fail@plt+0x7af0>
   18a6c:	ldr	r0, [fp, #-12]
   18a70:	movw	r1, #0
   18a74:	sub	r0, r1, r0
   18a78:	mvn	r1, #0
   18a7c:	udiv	r0, r1, r0
   18a80:	str	r0, [fp, #-40]	; 0xffffffd8
   18a84:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18a88:	ldr	r1, [fp, #-8]
   18a8c:	ldr	r1, [r1]
   18a90:	mvn	r2, #0
   18a94:	sub	r1, r2, r1
   18a98:	cmp	r0, r1
   18a9c:	bls	18bd8 <__assert_fail@plt+0x7c44>
   18aa0:	b	18bf0 <__assert_fail@plt+0x7c5c>
   18aa4:	b	18aa8 <__assert_fail@plt+0x7b14>
   18aa8:	b	18b0c <__assert_fail@plt+0x7b78>
   18aac:	b	18b0c <__assert_fail@plt+0x7b78>
   18ab0:	ldr	r0, [fp, #-12]
   18ab4:	cmn	r0, #1
   18ab8:	bne	18b0c <__assert_fail@plt+0x7b78>
   18abc:	b	18ac0 <__assert_fail@plt+0x7b2c>
   18ac0:	ldr	r0, [fp, #-8]
   18ac4:	ldr	r0, [r0]
   18ac8:	add	r0, r0, #0
   18acc:	movw	r1, #0
   18ad0:	cmp	r1, r0
   18ad4:	blt	18bd8 <__assert_fail@plt+0x7c44>
   18ad8:	b	18bf0 <__assert_fail@plt+0x7c5c>
   18adc:	ldr	r0, [fp, #-8]
   18ae0:	ldr	r0, [r0]
   18ae4:	movw	r1, #0
   18ae8:	cmp	r1, r0
   18aec:	bge	18bf0 <__assert_fail@plt+0x7c5c>
   18af0:	ldr	r0, [fp, #-8]
   18af4:	ldr	r0, [r0]
   18af8:	sub	r0, r0, #1
   18afc:	mvn	r1, #0
   18b00:	cmp	r1, r0
   18b04:	blt	18bd8 <__assert_fail@plt+0x7c44>
   18b08:	b	18bf0 <__assert_fail@plt+0x7c5c>
   18b0c:	ldr	r0, [fp, #-12]
   18b10:	movw	r1, #0
   18b14:	sdiv	r0, r1, r0
   18b18:	ldr	r1, [fp, #-8]
   18b1c:	ldr	r1, [r1]
   18b20:	cmp	r0, r1
   18b24:	blt	18bd8 <__assert_fail@plt+0x7c44>
   18b28:	b	18bf0 <__assert_fail@plt+0x7c5c>
   18b2c:	ldr	r0, [fp, #-12]
   18b30:	cmp	r0, #0
   18b34:	bne	18b3c <__assert_fail@plt+0x7ba8>
   18b38:	b	18bf0 <__assert_fail@plt+0x7c5c>
   18b3c:	ldr	r0, [fp, #-8]
   18b40:	ldr	r0, [r0]
   18b44:	cmp	r0, #0
   18b48:	bge	18bbc <__assert_fail@plt+0x7c28>
   18b4c:	b	18b50 <__assert_fail@plt+0x7bbc>
   18b50:	b	18b9c <__assert_fail@plt+0x7c08>
   18b54:	b	18b9c <__assert_fail@plt+0x7c08>
   18b58:	ldr	r0, [fp, #-8]
   18b5c:	ldr	r0, [r0]
   18b60:	cmn	r0, #1
   18b64:	bne	18b9c <__assert_fail@plt+0x7c08>
   18b68:	b	18b6c <__assert_fail@plt+0x7bd8>
   18b6c:	ldr	r0, [fp, #-12]
   18b70:	add	r0, r0, #0
   18b74:	movw	r1, #0
   18b78:	cmp	r1, r0
   18b7c:	blt	18bd8 <__assert_fail@plt+0x7c44>
   18b80:	b	18bf0 <__assert_fail@plt+0x7c5c>
   18b84:	ldr	r0, [fp, #-12]
   18b88:	sub	r0, r0, #1
   18b8c:	mvn	r1, #0
   18b90:	cmp	r1, r0
   18b94:	blt	18bd8 <__assert_fail@plt+0x7c44>
   18b98:	b	18bf0 <__assert_fail@plt+0x7c5c>
   18b9c:	ldr	r0, [fp, #-8]
   18ba0:	ldr	r0, [r0]
   18ba4:	movw	r1, #0
   18ba8:	sdiv	r0, r1, r0
   18bac:	ldr	r1, [fp, #-12]
   18bb0:	cmp	r0, r1
   18bb4:	blt	18bd8 <__assert_fail@plt+0x7c44>
   18bb8:	b	18bf0 <__assert_fail@plt+0x7c5c>
   18bbc:	ldr	r0, [fp, #-12]
   18bc0:	mvn	r1, #0
   18bc4:	udiv	r0, r1, r0
   18bc8:	ldr	r1, [fp, #-8]
   18bcc:	ldr	r1, [r1]
   18bd0:	cmp	r0, r1
   18bd4:	bcs	18bf0 <__assert_fail@plt+0x7c5c>
   18bd8:	ldr	r0, [fp, #-8]
   18bdc:	ldr	r0, [r0]
   18be0:	ldr	r1, [fp, #-12]
   18be4:	mul	r0, r0, r1
   18be8:	str	r0, [fp, #-16]
   18bec:	b	1951c <__assert_fail@plt+0x8588>
   18bf0:	ldr	r0, [fp, #-8]
   18bf4:	ldr	r0, [r0]
   18bf8:	ldr	r1, [fp, #-12]
   18bfc:	mul	r0, r0, r1
   18c00:	str	r0, [fp, #-16]
   18c04:	b	19554 <__assert_fail@plt+0x85c0>
   18c08:	b	18c0c <__assert_fail@plt+0x7c78>
   18c0c:	b	18c10 <__assert_fail@plt+0x7c7c>
   18c10:	ldr	r0, [fp, #-12]
   18c14:	cmp	r0, #0
   18c18:	bge	18d38 <__assert_fail@plt+0x7da4>
   18c1c:	ldr	r0, [fp, #-8]
   18c20:	ldr	r0, [r0]
   18c24:	cmp	r0, #0
   18c28:	bge	18cbc <__assert_fail@plt+0x7d28>
   18c2c:	b	18c30 <__assert_fail@plt+0x7c9c>
   18c30:	ldr	r0, [pc, #2368]	; 19578 <__assert_fail@plt+0x85e4>
   18c34:	ldr	r1, [fp, #-8]
   18c38:	ldr	r1, [r1]
   18c3c:	ldr	r2, [fp, #-12]
   18c40:	sdiv	r0, r0, r2
   18c44:	cmp	r1, r0
   18c48:	blt	18dd8 <__assert_fail@plt+0x7e44>
   18c4c:	b	18df0 <__assert_fail@plt+0x7e5c>
   18c50:	b	18c54 <__assert_fail@plt+0x7cc0>
   18c54:	ldr	r0, [pc, #2328]	; 19574 <__assert_fail@plt+0x85e0>
   18c58:	ldr	r1, [fp, #-12]
   18c5c:	cmp	r1, r0
   18c60:	blt	18c78 <__assert_fail@plt+0x7ce4>
   18c64:	b	18c84 <__assert_fail@plt+0x7cf0>
   18c68:	ldr	r0, [fp, #-12]
   18c6c:	movw	r1, #0
   18c70:	cmp	r1, r0
   18c74:	bge	18c84 <__assert_fail@plt+0x7cf0>
   18c78:	movw	r0, #0
   18c7c:	str	r0, [fp, #-44]	; 0xffffffd4
   18c80:	b	18c9c <__assert_fail@plt+0x7d08>
   18c84:	ldr	r0, [pc, #2284]	; 19578 <__assert_fail@plt+0x85e4>
   18c88:	ldr	r1, [fp, #-12]
   18c8c:	movw	r2, #0
   18c90:	sub	r1, r2, r1
   18c94:	sdiv	r0, r0, r1
   18c98:	str	r0, [fp, #-44]	; 0xffffffd4
   18c9c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18ca0:	ldr	r1, [fp, #-8]
   18ca4:	ldr	r1, [r1]
   18ca8:	mvn	r2, #0
   18cac:	sub	r1, r2, r1
   18cb0:	cmp	r0, r1
   18cb4:	ble	18dd8 <__assert_fail@plt+0x7e44>
   18cb8:	b	18df0 <__assert_fail@plt+0x7e5c>
   18cbc:	ldr	r0, [fp, #-12]
   18cc0:	cmn	r0, #1
   18cc4:	bne	18d18 <__assert_fail@plt+0x7d84>
   18cc8:	b	18ccc <__assert_fail@plt+0x7d38>
   18ccc:	ldr	r0, [fp, #-8]
   18cd0:	ldr	r0, [r0]
   18cd4:	add	r0, r0, #-2147483648	; 0x80000000
   18cd8:	movw	r1, #0
   18cdc:	cmp	r1, r0
   18ce0:	blt	18dd8 <__assert_fail@plt+0x7e44>
   18ce4:	b	18df0 <__assert_fail@plt+0x7e5c>
   18ce8:	ldr	r0, [fp, #-8]
   18cec:	ldr	r0, [r0]
   18cf0:	movw	r1, #0
   18cf4:	cmp	r1, r0
   18cf8:	bge	18df0 <__assert_fail@plt+0x7e5c>
   18cfc:	ldr	r0, [pc, #2164]	; 19578 <__assert_fail@plt+0x85e4>
   18d00:	ldr	r1, [fp, #-8]
   18d04:	ldr	r1, [r1]
   18d08:	sub	r1, r1, #1
   18d0c:	cmp	r0, r1
   18d10:	blt	18dd8 <__assert_fail@plt+0x7e44>
   18d14:	b	18df0 <__assert_fail@plt+0x7e5c>
   18d18:	ldr	r0, [pc, #2140]	; 1957c <__assert_fail@plt+0x85e8>
   18d1c:	ldr	r1, [fp, #-12]
   18d20:	sdiv	r0, r0, r1
   18d24:	ldr	r1, [fp, #-8]
   18d28:	ldr	r1, [r1]
   18d2c:	cmp	r0, r1
   18d30:	blt	18dd8 <__assert_fail@plt+0x7e44>
   18d34:	b	18df0 <__assert_fail@plt+0x7e5c>
   18d38:	ldr	r0, [fp, #-12]
   18d3c:	cmp	r0, #0
   18d40:	bne	18d48 <__assert_fail@plt+0x7db4>
   18d44:	b	18df0 <__assert_fail@plt+0x7e5c>
   18d48:	ldr	r0, [fp, #-8]
   18d4c:	ldr	r0, [r0]
   18d50:	cmp	r0, #0
   18d54:	bge	18dbc <__assert_fail@plt+0x7e28>
   18d58:	ldr	r0, [fp, #-8]
   18d5c:	ldr	r0, [r0]
   18d60:	cmn	r0, #1
   18d64:	bne	18d9c <__assert_fail@plt+0x7e08>
   18d68:	b	18d6c <__assert_fail@plt+0x7dd8>
   18d6c:	ldr	r0, [fp, #-12]
   18d70:	add	r0, r0, #-2147483648	; 0x80000000
   18d74:	movw	r1, #0
   18d78:	cmp	r1, r0
   18d7c:	blt	18dd8 <__assert_fail@plt+0x7e44>
   18d80:	b	18df0 <__assert_fail@plt+0x7e5c>
   18d84:	ldr	r0, [pc, #2028]	; 19578 <__assert_fail@plt+0x85e4>
   18d88:	ldr	r1, [fp, #-12]
   18d8c:	sub	r1, r1, #1
   18d90:	cmp	r0, r1
   18d94:	blt	18dd8 <__assert_fail@plt+0x7e44>
   18d98:	b	18df0 <__assert_fail@plt+0x7e5c>
   18d9c:	ldr	r0, [pc, #2008]	; 1957c <__assert_fail@plt+0x85e8>
   18da0:	ldr	r1, [fp, #-8]
   18da4:	ldr	r1, [r1]
   18da8:	sdiv	r0, r0, r1
   18dac:	ldr	r1, [fp, #-12]
   18db0:	cmp	r0, r1
   18db4:	blt	18dd8 <__assert_fail@plt+0x7e44>
   18db8:	b	18df0 <__assert_fail@plt+0x7e5c>
   18dbc:	ldr	r0, [pc, #1972]	; 19578 <__assert_fail@plt+0x85e4>
   18dc0:	ldr	r1, [fp, #-12]
   18dc4:	sdiv	r0, r0, r1
   18dc8:	ldr	r1, [fp, #-8]
   18dcc:	ldr	r1, [r1]
   18dd0:	cmp	r0, r1
   18dd4:	bge	18df0 <__assert_fail@plt+0x7e5c>
   18dd8:	ldr	r0, [fp, #-8]
   18ddc:	ldr	r0, [r0]
   18de0:	ldr	r1, [fp, #-12]
   18de4:	mul	r0, r0, r1
   18de8:	str	r0, [fp, #-16]
   18dec:	b	1951c <__assert_fail@plt+0x8588>
   18df0:	ldr	r0, [fp, #-8]
   18df4:	ldr	r0, [r0]
   18df8:	ldr	r1, [fp, #-12]
   18dfc:	mul	r0, r0, r1
   18e00:	str	r0, [fp, #-16]
   18e04:	b	19554 <__assert_fail@plt+0x85c0>
   18e08:	ldr	r0, [fp, #-12]
   18e0c:	cmp	r0, #0
   18e10:	bge	18f3c <__assert_fail@plt+0x7fa8>
   18e14:	ldr	r0, [fp, #-8]
   18e18:	ldr	r0, [r0]
   18e1c:	cmp	r0, #0
   18e20:	bge	18eb4 <__assert_fail@plt+0x7f20>
   18e24:	b	18e48 <__assert_fail@plt+0x7eb4>
   18e28:	ldr	r0, [fp, #-8]
   18e2c:	ldr	r0, [r0]
   18e30:	ldr	r1, [fp, #-12]
   18e34:	mvn	r2, #0
   18e38:	udiv	r1, r2, r1
   18e3c:	cmp	r0, r1
   18e40:	bcc	18fec <__assert_fail@plt+0x8058>
   18e44:	b	19004 <__assert_fail@plt+0x8070>
   18e48:	b	18e4c <__assert_fail@plt+0x7eb8>
   18e4c:	ldr	r0, [pc, #1824]	; 19574 <__assert_fail@plt+0x85e0>
   18e50:	ldr	r1, [fp, #-12]
   18e54:	cmp	r1, r0
   18e58:	blt	18e70 <__assert_fail@plt+0x7edc>
   18e5c:	b	18e7c <__assert_fail@plt+0x7ee8>
   18e60:	ldr	r0, [fp, #-12]
   18e64:	movw	r1, #0
   18e68:	cmp	r1, r0
   18e6c:	bge	18e7c <__assert_fail@plt+0x7ee8>
   18e70:	movw	r0, #1
   18e74:	str	r0, [fp, #-48]	; 0xffffffd0
   18e78:	b	18e94 <__assert_fail@plt+0x7f00>
   18e7c:	ldr	r0, [fp, #-12]
   18e80:	movw	r1, #0
   18e84:	sub	r0, r1, r0
   18e88:	mvn	r1, #0
   18e8c:	udiv	r0, r1, r0
   18e90:	str	r0, [fp, #-48]	; 0xffffffd0
   18e94:	ldr	r0, [fp, #-48]	; 0xffffffd0
   18e98:	ldr	r1, [fp, #-8]
   18e9c:	ldr	r1, [r1]
   18ea0:	mvn	r2, #0
   18ea4:	sub	r1, r2, r1
   18ea8:	cmp	r0, r1
   18eac:	bls	18fec <__assert_fail@plt+0x8058>
   18eb0:	b	19004 <__assert_fail@plt+0x8070>
   18eb4:	b	18eb8 <__assert_fail@plt+0x7f24>
   18eb8:	b	18f1c <__assert_fail@plt+0x7f88>
   18ebc:	b	18f1c <__assert_fail@plt+0x7f88>
   18ec0:	ldr	r0, [fp, #-12]
   18ec4:	cmn	r0, #1
   18ec8:	bne	18f1c <__assert_fail@plt+0x7f88>
   18ecc:	b	18ed0 <__assert_fail@plt+0x7f3c>
   18ed0:	ldr	r0, [fp, #-8]
   18ed4:	ldr	r0, [r0]
   18ed8:	add	r0, r0, #0
   18edc:	movw	r1, #0
   18ee0:	cmp	r1, r0
   18ee4:	blt	18fec <__assert_fail@plt+0x8058>
   18ee8:	b	19004 <__assert_fail@plt+0x8070>
   18eec:	ldr	r0, [fp, #-8]
   18ef0:	ldr	r0, [r0]
   18ef4:	movw	r1, #0
   18ef8:	cmp	r1, r0
   18efc:	bge	19004 <__assert_fail@plt+0x8070>
   18f00:	ldr	r0, [fp, #-8]
   18f04:	ldr	r0, [r0]
   18f08:	sub	r0, r0, #1
   18f0c:	mvn	r1, #0
   18f10:	cmp	r1, r0
   18f14:	blt	18fec <__assert_fail@plt+0x8058>
   18f18:	b	19004 <__assert_fail@plt+0x8070>
   18f1c:	ldr	r0, [fp, #-12]
   18f20:	movw	r1, #0
   18f24:	sdiv	r0, r1, r0
   18f28:	ldr	r1, [fp, #-8]
   18f2c:	ldr	r1, [r1]
   18f30:	cmp	r0, r1
   18f34:	blt	18fec <__assert_fail@plt+0x8058>
   18f38:	b	19004 <__assert_fail@plt+0x8070>
   18f3c:	ldr	r0, [fp, #-12]
   18f40:	cmp	r0, #0
   18f44:	bne	18f4c <__assert_fail@plt+0x7fb8>
   18f48:	b	19004 <__assert_fail@plt+0x8070>
   18f4c:	ldr	r0, [fp, #-8]
   18f50:	ldr	r0, [r0]
   18f54:	cmp	r0, #0
   18f58:	bge	18fd0 <__assert_fail@plt+0x803c>
   18f5c:	b	18f60 <__assert_fail@plt+0x7fcc>
   18f60:	b	18fb0 <__assert_fail@plt+0x801c>
   18f64:	b	18fb0 <__assert_fail@plt+0x801c>
   18f68:	ldr	r0, [fp, #-8]
   18f6c:	ldr	r0, [r0]
   18f70:	cmn	r0, #1
   18f74:	bne	18fb0 <__assert_fail@plt+0x801c>
   18f78:	b	18f7c <__assert_fail@plt+0x7fe8>
   18f7c:	ldr	r0, [fp, #-12]
   18f80:	add	r0, r0, #0
   18f84:	movw	r1, #0
   18f88:	cmp	r1, r0
   18f8c:	blt	18fec <__assert_fail@plt+0x8058>
   18f90:	b	19004 <__assert_fail@plt+0x8070>
   18f94:	ldr	r0, [fp, #-12]
   18f98:	sub	r0, r0, #1
   18f9c:	mvn	r1, #0
   18fa0:	cmp	r1, r0
   18fa4:	blt	18fec <__assert_fail@plt+0x8058>
   18fa8:	b	19004 <__assert_fail@plt+0x8070>
   18fac:	andhi	r0, r0, r1
   18fb0:	ldr	r0, [fp, #-8]
   18fb4:	ldr	r0, [r0]
   18fb8:	movw	r1, #0
   18fbc:	sdiv	r0, r1, r0
   18fc0:	ldr	r1, [fp, #-12]
   18fc4:	cmp	r0, r1
   18fc8:	blt	18fec <__assert_fail@plt+0x8058>
   18fcc:	b	19004 <__assert_fail@plt+0x8070>
   18fd0:	ldr	r0, [fp, #-12]
   18fd4:	mvn	r1, #0
   18fd8:	udiv	r0, r1, r0
   18fdc:	ldr	r1, [fp, #-8]
   18fe0:	ldr	r1, [r1]
   18fe4:	cmp	r0, r1
   18fe8:	bcs	19004 <__assert_fail@plt+0x8070>
   18fec:	ldr	r0, [fp, #-8]
   18ff0:	ldr	r0, [r0]
   18ff4:	ldr	r1, [fp, #-12]
   18ff8:	mul	r0, r0, r1
   18ffc:	str	r0, [fp, #-16]
   19000:	b	1951c <__assert_fail@plt+0x8588>
   19004:	ldr	r0, [fp, #-8]
   19008:	ldr	r0, [r0]
   1900c:	ldr	r1, [fp, #-12]
   19010:	mul	r0, r0, r1
   19014:	str	r0, [fp, #-16]
   19018:	b	19554 <__assert_fail@plt+0x85c0>
   1901c:	b	19020 <__assert_fail@plt+0x808c>
   19020:	ldr	r0, [fp, #-12]
   19024:	cmp	r0, #0
   19028:	bge	191a8 <__assert_fail@plt+0x8214>
   1902c:	ldr	r0, [fp, #-8]
   19030:	ldr	r0, [r0]
   19034:	cmp	r0, #0
   19038:	bge	19118 <__assert_fail@plt+0x8184>
   1903c:	b	19040 <__assert_fail@plt+0x80ac>
   19040:	ldr	r0, [fp, #-8]
   19044:	ldr	r0, [r0]
   19048:	ldr	r1, [fp, #-12]
   1904c:	asr	r3, r1, #31
   19050:	mvn	r2, #0
   19054:	mvn	ip, #-2147483648	; 0x80000000
   19058:	str	r0, [sp, #52]	; 0x34
   1905c:	mov	r0, r2
   19060:	str	r1, [sp, #48]	; 0x30
   19064:	mov	r1, ip
   19068:	ldr	r2, [sp, #48]	; 0x30
   1906c:	bl	1ba50 <__assert_fail@plt+0xaabc>
   19070:	ldr	r2, [sp, #52]	; 0x34
   19074:	subs	r0, r2, r0
   19078:	rscs	r1, r1, r2, asr #31
   1907c:	blt	19280 <__assert_fail@plt+0x82ec>
   19080:	b	19298 <__assert_fail@plt+0x8304>
   19084:	b	19088 <__assert_fail@plt+0x80f4>
   19088:	ldr	r0, [pc, #1252]	; 19574 <__assert_fail@plt+0x85e0>
   1908c:	ldr	r1, [fp, #-12]
   19090:	cmp	r1, r0
   19094:	blt	190ac <__assert_fail@plt+0x8118>
   19098:	b	190c0 <__assert_fail@plt+0x812c>
   1909c:	ldr	r0, [fp, #-12]
   190a0:	movw	r1, #0
   190a4:	cmp	r1, r0
   190a8:	bge	190c0 <__assert_fail@plt+0x812c>
   190ac:	mov	r0, #0
   190b0:	mvn	r1, #0
   190b4:	str	r1, [sp, #44]	; 0x2c
   190b8:	str	r0, [sp, #40]	; 0x28
   190bc:	b	190f4 <__assert_fail@plt+0x8160>
   190c0:	ldr	r0, [fp, #-12]
   190c4:	rsb	r0, r0, #0
   190c8:	asr	r3, r0, #31
   190cc:	mvn	r1, #0
   190d0:	mvn	r2, #-2147483648	; 0x80000000
   190d4:	str	r0, [sp, #36]	; 0x24
   190d8:	mov	r0, r1
   190dc:	mov	r1, r2
   190e0:	ldr	r2, [sp, #36]	; 0x24
   190e4:	bl	1ba50 <__assert_fail@plt+0xaabc>
   190e8:	str	r0, [sp, #44]	; 0x2c
   190ec:	str	r1, [sp, #40]	; 0x28
   190f0:	b	190f4 <__assert_fail@plt+0x8160>
   190f4:	ldr	r0, [sp, #40]	; 0x28
   190f8:	ldr	r1, [sp, #44]	; 0x2c
   190fc:	ldr	r2, [fp, #-8]
   19100:	ldr	r2, [r2]
   19104:	mvn	r2, r2
   19108:	subs	r1, r2, r1
   1910c:	rscs	r0, r0, r2, asr #31
   19110:	bge	19280 <__assert_fail@plt+0x82ec>
   19114:	b	19298 <__assert_fail@plt+0x8304>
   19118:	ldr	r0, [fp, #-12]
   1911c:	cmn	r0, #1
   19120:	bne	1916c <__assert_fail@plt+0x81d8>
   19124:	b	19128 <__assert_fail@plt+0x8194>
   19128:	ldr	r0, [fp, #-8]
   1912c:	ldr	r0, [r0]
   19130:	mov	r1, #-2147483648	; 0x80000000
   19134:	add	r1, r1, r0, asr #31
   19138:	rsbs	r0, r0, #0
   1913c:	rscs	r1, r1, #0
   19140:	blt	19280 <__assert_fail@plt+0x82ec>
   19144:	b	19298 <__assert_fail@plt+0x8304>
   19148:	ldr	r0, [fp, #-8]
   1914c:	ldr	r0, [r0]
   19150:	movw	r1, #0
   19154:	cmp	r1, r0
   19158:	bge	19298 <__assert_fail@plt+0x8304>
   1915c:	mov	r0, #0
   19160:	cmp	r0, #0
   19164:	bne	19280 <__assert_fail@plt+0x82ec>
   19168:	b	19298 <__assert_fail@plt+0x8304>
   1916c:	ldr	r0, [fp, #-12]
   19170:	asr	r3, r0, #31
   19174:	mov	r1, #0
   19178:	mov	r2, #-2147483648	; 0x80000000
   1917c:	str	r0, [sp, #32]
   19180:	mov	r0, r1
   19184:	mov	r1, r2
   19188:	ldr	r2, [sp, #32]
   1918c:	bl	1ba50 <__assert_fail@plt+0xaabc>
   19190:	ldr	r2, [fp, #-8]
   19194:	ldr	r2, [r2]
   19198:	subs	r0, r0, r2
   1919c:	sbcs	r1, r1, r2, asr #31
   191a0:	blt	19280 <__assert_fail@plt+0x82ec>
   191a4:	b	19298 <__assert_fail@plt+0x8304>
   191a8:	ldr	r0, [fp, #-12]
   191ac:	cmp	r0, #0
   191b0:	bne	191b8 <__assert_fail@plt+0x8224>
   191b4:	b	19298 <__assert_fail@plt+0x8304>
   191b8:	ldr	r0, [fp, #-8]
   191bc:	ldr	r0, [r0]
   191c0:	cmp	r0, #0
   191c4:	bge	19244 <__assert_fail@plt+0x82b0>
   191c8:	ldr	r0, [fp, #-8]
   191cc:	ldr	r0, [r0]
   191d0:	cmn	r0, #1
   191d4:	bne	19208 <__assert_fail@plt+0x8274>
   191d8:	b	191dc <__assert_fail@plt+0x8248>
   191dc:	ldr	r0, [fp, #-12]
   191e0:	mov	r1, #-2147483648	; 0x80000000
   191e4:	add	r1, r1, r0, asr #31
   191e8:	rsbs	r0, r0, #0
   191ec:	rscs	r1, r1, #0
   191f0:	blt	19280 <__assert_fail@plt+0x82ec>
   191f4:	b	19298 <__assert_fail@plt+0x8304>
   191f8:	mov	r0, #0
   191fc:	cmp	r0, #0
   19200:	bne	19280 <__assert_fail@plt+0x82ec>
   19204:	b	19298 <__assert_fail@plt+0x8304>
   19208:	ldr	r0, [fp, #-8]
   1920c:	ldr	r0, [r0]
   19210:	asr	r3, r0, #31
   19214:	mov	r1, #0
   19218:	mov	r2, #-2147483648	; 0x80000000
   1921c:	str	r0, [sp, #28]
   19220:	mov	r0, r1
   19224:	mov	r1, r2
   19228:	ldr	r2, [sp, #28]
   1922c:	bl	1ba50 <__assert_fail@plt+0xaabc>
   19230:	ldr	r2, [fp, #-12]
   19234:	subs	r0, r0, r2
   19238:	sbcs	r1, r1, r2, asr #31
   1923c:	blt	19280 <__assert_fail@plt+0x82ec>
   19240:	b	19298 <__assert_fail@plt+0x8304>
   19244:	ldr	r0, [fp, #-12]
   19248:	asr	r3, r0, #31
   1924c:	mvn	r1, #0
   19250:	mvn	r2, #-2147483648	; 0x80000000
   19254:	str	r0, [sp, #24]
   19258:	mov	r0, r1
   1925c:	mov	r1, r2
   19260:	ldr	r2, [sp, #24]
   19264:	bl	1ba50 <__assert_fail@plt+0xaabc>
   19268:	ldr	r2, [fp, #-8]
   1926c:	ldr	r2, [r2]
   19270:	subs	r0, r0, r2
   19274:	sbcs	r1, r1, r2, asr #31
   19278:	bge	19298 <__assert_fail@plt+0x8304>
   1927c:	b	19280 <__assert_fail@plt+0x82ec>
   19280:	ldr	r0, [fp, #-8]
   19284:	ldr	r0, [r0]
   19288:	ldr	r1, [fp, #-12]
   1928c:	mul	r0, r0, r1
   19290:	str	r0, [fp, #-16]
   19294:	b	1951c <__assert_fail@plt+0x8588>
   19298:	ldr	r0, [fp, #-8]
   1929c:	ldr	r0, [r0]
   192a0:	ldr	r1, [fp, #-12]
   192a4:	mul	r0, r0, r1
   192a8:	str	r0, [fp, #-16]
   192ac:	b	19554 <__assert_fail@plt+0x85c0>
   192b0:	ldr	r0, [fp, #-12]
   192b4:	cmp	r0, #0
   192b8:	bge	19424 <__assert_fail@plt+0x8490>
   192bc:	ldr	r0, [fp, #-8]
   192c0:	ldr	r0, [r0]
   192c4:	cmp	r0, #0
   192c8:	bge	1939c <__assert_fail@plt+0x8408>
   192cc:	b	19310 <__assert_fail@plt+0x837c>
   192d0:	ldr	r0, [fp, #-8]
   192d4:	ldr	r0, [r0]
   192d8:	ldr	r1, [fp, #-12]
   192dc:	asr	r3, r1, #31
   192e0:	mvn	r2, #0
   192e4:	str	r0, [sp, #20]
   192e8:	mov	r0, r2
   192ec:	str	r1, [sp, #16]
   192f0:	mov	r1, r2
   192f4:	ldr	r2, [sp, #16]
   192f8:	bl	1bb24 <__assert_fail@plt+0xab90>
   192fc:	ldr	r2, [sp, #20]
   19300:	subs	r0, r2, r0
   19304:	rscs	r1, r1, r2, asr #31
   19308:	bcc	194ec <__assert_fail@plt+0x8558>
   1930c:	b	19504 <__assert_fail@plt+0x8570>
   19310:	b	19314 <__assert_fail@plt+0x8380>
   19314:	ldr	r0, [pc, #600]	; 19574 <__assert_fail@plt+0x85e0>
   19318:	ldr	r1, [fp, #-12]
   1931c:	cmp	r1, r0
   19320:	blt	19338 <__assert_fail@plt+0x83a4>
   19324:	b	1934c <__assert_fail@plt+0x83b8>
   19328:	ldr	r0, [fp, #-12]
   1932c:	movw	r1, #0
   19330:	cmp	r1, r0
   19334:	bge	1934c <__assert_fail@plt+0x83b8>
   19338:	mov	r0, #1
   1933c:	mvn	r1, #0
   19340:	str	r1, [sp, #12]
   19344:	str	r0, [sp, #8]
   19348:	b	19378 <__assert_fail@plt+0x83e4>
   1934c:	ldr	r0, [fp, #-12]
   19350:	rsb	r0, r0, #0
   19354:	asr	r3, r0, #31
   19358:	mvn	r1, #0
   1935c:	str	r0, [sp, #4]
   19360:	mov	r0, r1
   19364:	ldr	r2, [sp, #4]
   19368:	bl	1bb24 <__assert_fail@plt+0xab90>
   1936c:	str	r0, [sp, #12]
   19370:	str	r1, [sp, #8]
   19374:	b	19378 <__assert_fail@plt+0x83e4>
   19378:	ldr	r0, [sp, #8]
   1937c:	ldr	r1, [sp, #12]
   19380:	ldr	r2, [fp, #-8]
   19384:	ldr	r2, [r2]
   19388:	mvn	r2, r2
   1938c:	subs	r1, r2, r1
   19390:	rscs	r0, r0, r2, asr #31
   19394:	bcs	194ec <__assert_fail@plt+0x8558>
   19398:	b	19504 <__assert_fail@plt+0x8570>
   1939c:	b	193a0 <__assert_fail@plt+0x840c>
   193a0:	b	19404 <__assert_fail@plt+0x8470>
   193a4:	b	19404 <__assert_fail@plt+0x8470>
   193a8:	ldr	r0, [fp, #-12]
   193ac:	cmn	r0, #1
   193b0:	bne	19404 <__assert_fail@plt+0x8470>
   193b4:	b	193b8 <__assert_fail@plt+0x8424>
   193b8:	ldr	r0, [fp, #-8]
   193bc:	ldr	r0, [r0]
   193c0:	add	r0, r0, #0
   193c4:	movw	r1, #0
   193c8:	cmp	r1, r0
   193cc:	blt	194ec <__assert_fail@plt+0x8558>
   193d0:	b	19504 <__assert_fail@plt+0x8570>
   193d4:	ldr	r0, [fp, #-8]
   193d8:	ldr	r0, [r0]
   193dc:	movw	r1, #0
   193e0:	cmp	r1, r0
   193e4:	bge	19504 <__assert_fail@plt+0x8570>
   193e8:	ldr	r0, [fp, #-8]
   193ec:	ldr	r0, [r0]
   193f0:	sub	r0, r0, #1
   193f4:	mvn	r1, #0
   193f8:	cmp	r1, r0
   193fc:	blt	194ec <__assert_fail@plt+0x8558>
   19400:	b	19504 <__assert_fail@plt+0x8570>
   19404:	ldr	r0, [fp, #-12]
   19408:	movw	r1, #0
   1940c:	sdiv	r0, r1, r0
   19410:	ldr	r1, [fp, #-8]
   19414:	ldr	r1, [r1]
   19418:	cmp	r0, r1
   1941c:	blt	194ec <__assert_fail@plt+0x8558>
   19420:	b	19504 <__assert_fail@plt+0x8570>
   19424:	ldr	r0, [fp, #-12]
   19428:	cmp	r0, #0
   1942c:	bne	19434 <__assert_fail@plt+0x84a0>
   19430:	b	19504 <__assert_fail@plt+0x8570>
   19434:	ldr	r0, [fp, #-8]
   19438:	ldr	r0, [r0]
   1943c:	cmp	r0, #0
   19440:	bge	194b8 <__assert_fail@plt+0x8524>
   19444:	b	19448 <__assert_fail@plt+0x84b4>
   19448:	b	19498 <__assert_fail@plt+0x8504>
   1944c:	b	19498 <__assert_fail@plt+0x8504>
   19450:	ldr	r0, [fp, #-8]
   19454:	ldr	r0, [r0]
   19458:	cmn	r0, #1
   1945c:	bne	19498 <__assert_fail@plt+0x8504>
   19460:	b	19464 <__assert_fail@plt+0x84d0>
   19464:	ldr	r0, [fp, #-12]
   19468:	add	r0, r0, #0
   1946c:	movw	r1, #0
   19470:	cmp	r1, r0
   19474:	blt	194ec <__assert_fail@plt+0x8558>
   19478:	b	19504 <__assert_fail@plt+0x8570>
   1947c:			; <UNDEFINED> instruction: 0xffff8000
   19480:	ldr	r0, [fp, #-12]
   19484:	sub	r0, r0, #1
   19488:	mvn	r1, #0
   1948c:	cmp	r1, r0
   19490:	blt	194ec <__assert_fail@plt+0x8558>
   19494:	b	19504 <__assert_fail@plt+0x8570>
   19498:	ldr	r0, [fp, #-8]
   1949c:	ldr	r0, [r0]
   194a0:	movw	r1, #0
   194a4:	sdiv	r0, r1, r0
   194a8:	ldr	r1, [fp, #-12]
   194ac:	cmp	r0, r1
   194b0:	blt	194ec <__assert_fail@plt+0x8558>
   194b4:	b	19504 <__assert_fail@plt+0x8570>
   194b8:	ldr	r0, [fp, #-12]
   194bc:	asr	r3, r0, #31
   194c0:	mvn	r1, #0
   194c4:	str	r0, [sp]
   194c8:	mov	r0, r1
   194cc:	ldr	r2, [sp]
   194d0:	bl	1bb24 <__assert_fail@plt+0xab90>
   194d4:	ldr	r2, [fp, #-8]
   194d8:	ldr	r2, [r2]
   194dc:	subs	r0, r0, r2
   194e0:	sbcs	r1, r1, r2, asr #31
   194e4:	bcs	19504 <__assert_fail@plt+0x8570>
   194e8:	b	194ec <__assert_fail@plt+0x8558>
   194ec:	ldr	r0, [fp, #-8]
   194f0:	ldr	r0, [r0]
   194f4:	ldr	r1, [fp, #-12]
   194f8:	mul	r0, r0, r1
   194fc:	str	r0, [fp, #-16]
   19500:	b	1951c <__assert_fail@plt+0x8588>
   19504:	ldr	r0, [fp, #-8]
   19508:	ldr	r0, [r0]
   1950c:	ldr	r1, [fp, #-12]
   19510:	mul	r0, r0, r1
   19514:	str	r0, [fp, #-16]
   19518:	b	19554 <__assert_fail@plt+0x85c0>
   1951c:	ldr	r0, [pc, #88]	; 1957c <__assert_fail@plt+0x85e8>
   19520:	ldr	r1, [pc, #80]	; 19578 <__assert_fail@plt+0x85e4>
   19524:	ldr	r2, [fp, #-8]
   19528:	ldr	r2, [r2]
   1952c:	cmp	r2, #0
   19530:	movw	r2, #0
   19534:	movlt	r2, #1
   19538:	tst	r2, #1
   1953c:	movne	r1, r0
   19540:	ldr	r0, [fp, #-8]
   19544:	str	r1, [r0]
   19548:	movw	r0, #1
   1954c:	str	r0, [fp, #-4]
   19550:	b	19568 <__assert_fail@plt+0x85d4>
   19554:	ldr	r0, [fp, #-16]
   19558:	ldr	r1, [fp, #-8]
   1955c:	str	r0, [r1]
   19560:	movw	r0, #0
   19564:	str	r0, [fp, #-4]
   19568:	ldr	r0, [fp, #-4]
   1956c:	mov	sp, fp
   19570:	pop	{fp, pc}
   19574:	andhi	r0, r0, r1
   19578:	svcvc	0x00ffffff
   1957c:	andhi	r0, r0, r0
   19580:	push	{fp, lr}
   19584:	mov	fp, sp
   19588:	sub	sp, sp, #16
   1958c:	str	r0, [fp, #-4]
   19590:	str	r1, [sp, #8]
   19594:	str	r2, [sp, #4]
   19598:	movw	r0, #0
   1959c:	str	r0, [sp]
   195a0:	ldr	r0, [sp, #4]
   195a4:	mvn	r1, #0
   195a8:	add	r1, r0, r1
   195ac:	str	r1, [sp, #4]
   195b0:	cmp	r0, #0
   195b4:	beq	195d4 <__assert_fail@plt+0x8640>
   195b8:	ldr	r0, [fp, #-4]
   195bc:	ldr	r1, [sp, #8]
   195c0:	bl	17f64 <__assert_fail@plt+0x6fd0>
   195c4:	ldr	r1, [sp]
   195c8:	orr	r0, r1, r0
   195cc:	str	r0, [sp]
   195d0:	b	195a0 <__assert_fail@plt+0x860c>
   195d4:	ldr	r0, [sp]
   195d8:	mov	sp, fp
   195dc:	pop	{fp, pc}
   195e0:	push	{fp, lr}
   195e4:	mov	fp, sp
   195e8:	sub	sp, sp, #16
   195ec:	str	r0, [sp, #8]
   195f0:	str	r1, [sp, #4]
   195f4:	ldr	r0, [sp, #8]
   195f8:	cmp	r0, #0
   195fc:	beq	1960c <__assert_fail@plt+0x8678>
   19600:	ldr	r0, [sp, #4]
   19604:	cmp	r0, #0
   19608:	bne	19618 <__assert_fail@plt+0x8684>
   1960c:	movw	r0, #1
   19610:	str	r0, [sp, #4]
   19614:	str	r0, [sp, #8]
   19618:	ldr	r0, [sp, #4]
   1961c:	cmp	r0, #0
   19620:	beq	19654 <__assert_fail@plt+0x86c0>
   19624:	ldr	r0, [pc, #76]	; 19678 <__assert_fail@plt+0x86e4>
   19628:	ldr	r1, [sp, #4]
   1962c:	udiv	r0, r0, r1
   19630:	ldr	r1, [sp, #8]
   19634:	cmp	r0, r1
   19638:	bcs	19654 <__assert_fail@plt+0x86c0>
   1963c:	bl	10ef8 <__errno_location@plt>
   19640:	movw	r1, #12
   19644:	str	r1, [r0]
   19648:	movw	r0, #0
   1964c:	str	r0, [fp, #-4]
   19650:	b	1966c <__assert_fail@plt+0x86d8>
   19654:	ldr	r0, [sp, #8]
   19658:	ldr	r1, [sp, #4]
   1965c:	bl	10d54 <calloc@plt>
   19660:	str	r0, [sp]
   19664:	ldr	r0, [sp]
   19668:	str	r0, [fp, #-4]
   1966c:	ldr	r0, [fp, #-4]
   19670:	mov	sp, fp
   19674:	pop	{fp, pc}
   19678:	svcvc	0x00ffffff
   1967c:	push	{fp, lr}
   19680:	mov	fp, sp
   19684:	sub	sp, sp, #16
   19688:	str	r0, [sp, #8]
   1968c:	ldr	r0, [sp, #8]
   19690:	cmp	r0, #0
   19694:	bne	196a0 <__assert_fail@plt+0x870c>
   19698:	movw	r0, #1
   1969c:	str	r0, [sp, #8]
   196a0:	ldr	r0, [pc, #64]	; 196e8 <__assert_fail@plt+0x8754>
   196a4:	ldr	r1, [sp, #8]
   196a8:	cmp	r0, r1
   196ac:	bcs	196c8 <__assert_fail@plt+0x8734>
   196b0:	bl	10ef8 <__errno_location@plt>
   196b4:	movw	r1, #12
   196b8:	str	r1, [r0]
   196bc:	movw	r0, #0
   196c0:	str	r0, [fp, #-4]
   196c4:	b	196dc <__assert_fail@plt+0x8748>
   196c8:	ldr	r0, [sp, #8]
   196cc:	bl	10e74 <malloc@plt>
   196d0:	str	r0, [sp, #4]
   196d4:	ldr	r0, [sp, #4]
   196d8:	str	r0, [fp, #-4]
   196dc:	ldr	r0, [fp, #-4]
   196e0:	mov	sp, fp
   196e4:	pop	{fp, pc}
   196e8:	svcvc	0x00ffffff
   196ec:	push	{fp, lr}
   196f0:	mov	fp, sp
   196f4:	sub	sp, sp, #16
   196f8:	str	r0, [sp, #8]
   196fc:	str	r1, [sp, #4]
   19700:	ldr	r0, [sp, #8]
   19704:	movw	r1, #0
   19708:	cmp	r0, r1
   1970c:	bne	19720 <__assert_fail@plt+0x878c>
   19710:	ldr	r0, [sp, #4]
   19714:	bl	1967c <__assert_fail@plt+0x86e8>
   19718:	str	r0, [fp, #-4]
   1971c:	b	19780 <__assert_fail@plt+0x87ec>
   19720:	ldr	r0, [sp, #4]
   19724:	cmp	r0, #0
   19728:	bne	19740 <__assert_fail@plt+0x87ac>
   1972c:	ldr	r0, [sp, #8]
   19730:	bl	19ab0 <__assert_fail@plt+0x8b1c>
   19734:	movw	r0, #0
   19738:	str	r0, [fp, #-4]
   1973c:	b	19780 <__assert_fail@plt+0x87ec>
   19740:	ldr	r0, [pc, #68]	; 1978c <__assert_fail@plt+0x87f8>
   19744:	ldr	r1, [sp, #4]
   19748:	cmp	r0, r1
   1974c:	bcs	19768 <__assert_fail@plt+0x87d4>
   19750:	bl	10ef8 <__errno_location@plt>
   19754:	movw	r1, #12
   19758:	str	r1, [r0]
   1975c:	movw	r0, #0
   19760:	str	r0, [fp, #-4]
   19764:	b	19780 <__assert_fail@plt+0x87ec>
   19768:	ldr	r0, [sp, #8]
   1976c:	ldr	r1, [sp, #4]
   19770:	bl	10df0 <realloc@plt>
   19774:	str	r0, [sp]
   19778:	ldr	r0, [sp]
   1977c:	str	r0, [fp, #-4]
   19780:	ldr	r0, [fp, #-4]
   19784:	mov	sp, fp
   19788:	pop	{fp, pc}
   1978c:	svcvc	0x00ffffff
   19790:	push	{fp, lr}
   19794:	mov	fp, sp
   19798:	sub	sp, sp, #24
   1979c:	str	r0, [fp, #-8]
   197a0:	str	r1, [sp, #12]
   197a4:	ldr	r0, [fp, #-8]
   197a8:	str	r0, [sp, #8]
   197ac:	ldr	r0, [sp, #12]
   197b0:	str	r0, [sp, #4]
   197b4:	ldr	r0, [sp, #8]
   197b8:	ldr	r1, [sp, #4]
   197bc:	cmp	r0, r1
   197c0:	bne	197d0 <__assert_fail@plt+0x883c>
   197c4:	movw	r0, #0
   197c8:	str	r0, [fp, #-4]
   197cc:	b	1983c <__assert_fail@plt+0x88a8>
   197d0:	b	197d4 <__assert_fail@plt+0x8840>
   197d4:	ldr	r0, [sp, #8]
   197d8:	ldrb	r0, [r0]
   197dc:	bl	1b7d0 <__assert_fail@plt+0xa83c>
   197e0:	strb	r0, [sp, #3]
   197e4:	ldr	r0, [sp, #4]
   197e8:	ldrb	r0, [r0]
   197ec:	bl	1b7d0 <__assert_fail@plt+0xa83c>
   197f0:	strb	r0, [sp, #2]
   197f4:	ldrb	r0, [sp, #3]
   197f8:	cmp	r0, #0
   197fc:	bne	19804 <__assert_fail@plt+0x8870>
   19800:	b	1982c <__assert_fail@plt+0x8898>
   19804:	ldr	r0, [sp, #8]
   19808:	add	r0, r0, #1
   1980c:	str	r0, [sp, #8]
   19810:	ldr	r0, [sp, #4]
   19814:	add	r0, r0, #1
   19818:	str	r0, [sp, #4]
   1981c:	ldrb	r0, [sp, #3]
   19820:	ldrb	r1, [sp, #2]
   19824:	cmp	r0, r1
   19828:	beq	197d4 <__assert_fail@plt+0x8840>
   1982c:	ldrb	r0, [sp, #3]
   19830:	ldrb	r1, [sp, #2]
   19834:	sub	r0, r0, r1
   19838:	str	r0, [fp, #-4]
   1983c:	ldr	r0, [fp, #-4]
   19840:	mov	sp, fp
   19844:	pop	{fp, pc}
   19848:	push	{fp, lr}
   1984c:	mov	fp, sp
   19850:	sub	sp, sp, #16
   19854:	str	r0, [sp, #8]
   19858:	ldr	r0, [sp, #8]
   1985c:	bl	10e38 <__fpending@plt>
   19860:	cmp	r0, #0
   19864:	movw	r0, #0
   19868:	movne	r0, #1
   1986c:	and	r0, r0, #1
   19870:	strb	r0, [sp, #7]
   19874:	ldr	r0, [sp, #8]
   19878:	bl	10e44 <ferror_unlocked@plt>
   1987c:	cmp	r0, #0
   19880:	movw	r0, #0
   19884:	movne	r0, #1
   19888:	and	r0, r0, #1
   1988c:	strb	r0, [sp, #6]
   19890:	ldr	r0, [sp, #8]
   19894:	bl	19918 <__assert_fail@plt+0x8984>
   19898:	cmp	r0, #0
   1989c:	movw	r0, #0
   198a0:	movne	r0, #1
   198a4:	and	r0, r0, #1
   198a8:	strb	r0, [sp, #5]
   198ac:	ldrb	r0, [sp, #6]
   198b0:	tst	r0, #1
   198b4:	bne	198e0 <__assert_fail@plt+0x894c>
   198b8:	ldrb	r0, [sp, #5]
   198bc:	tst	r0, #1
   198c0:	beq	19904 <__assert_fail@plt+0x8970>
   198c4:	ldrb	r0, [sp, #7]
   198c8:	tst	r0, #1
   198cc:	bne	198e0 <__assert_fail@plt+0x894c>
   198d0:	bl	10ef8 <__errno_location@plt>
   198d4:	ldr	r0, [r0]
   198d8:	cmp	r0, #9
   198dc:	beq	19904 <__assert_fail@plt+0x8970>
   198e0:	ldrb	r0, [sp, #5]
   198e4:	tst	r0, #1
   198e8:	bne	198f8 <__assert_fail@plt+0x8964>
   198ec:	bl	10ef8 <__errno_location@plt>
   198f0:	movw	r1, #0
   198f4:	str	r1, [r0]
   198f8:	mvn	r0, #0
   198fc:	str	r0, [fp, #-4]
   19900:	b	1990c <__assert_fail@plt+0x8978>
   19904:	movw	r0, #0
   19908:	str	r0, [fp, #-4]
   1990c:	ldr	r0, [fp, #-4]
   19910:	mov	sp, fp
   19914:	pop	{fp, pc}
   19918:	push	{fp, lr}
   1991c:	mov	fp, sp
   19920:	sub	sp, sp, #32
   19924:	str	r0, [fp, #-8]
   19928:	movw	r0, #0
   1992c:	str	r0, [fp, #-12]
   19930:	str	r0, [sp, #12]
   19934:	ldr	r0, [fp, #-8]
   19938:	bl	10f1c <fileno@plt>
   1993c:	str	r0, [sp, #16]
   19940:	ldr	r0, [sp, #16]
   19944:	cmp	r0, #0
   19948:	bge	1995c <__assert_fail@plt+0x89c8>
   1994c:	ldr	r0, [fp, #-8]
   19950:	bl	10f28 <fclose@plt>
   19954:	str	r0, [fp, #-4]
   19958:	b	199f8 <__assert_fail@plt+0x8a64>
   1995c:	ldr	r0, [fp, #-8]
   19960:	bl	10e8c <__freading@plt>
   19964:	cmp	r0, #0
   19968:	beq	199a0 <__assert_fail@plt+0x8a0c>
   1996c:	ldr	r0, [fp, #-8]
   19970:	bl	10f1c <fileno@plt>
   19974:	mov	r1, sp
   19978:	mov	r2, #1
   1997c:	str	r2, [r1]
   19980:	mov	r1, #0
   19984:	mov	r2, r1
   19988:	mov	r3, r1
   1998c:	bl	10e20 <lseek64@plt>
   19990:	and	r0, r0, r1
   19994:	cmn	r0, #1
   19998:	beq	199bc <__assert_fail@plt+0x8a28>
   1999c:	b	199a0 <__assert_fail@plt+0x8a0c>
   199a0:	ldr	r0, [fp, #-8]
   199a4:	bl	19a04 <__assert_fail@plt+0x8a70>
   199a8:	cmp	r0, #0
   199ac:	beq	199bc <__assert_fail@plt+0x8a28>
   199b0:	bl	10ef8 <__errno_location@plt>
   199b4:	ldr	r0, [r0]
   199b8:	str	r0, [fp, #-12]
   199bc:	ldr	r0, [fp, #-8]
   199c0:	bl	10f28 <fclose@plt>
   199c4:	str	r0, [sp, #12]
   199c8:	ldr	r0, [fp, #-12]
   199cc:	cmp	r0, #0
   199d0:	beq	199f0 <__assert_fail@plt+0x8a5c>
   199d4:	ldr	r0, [fp, #-12]
   199d8:	str	r0, [sp, #8]
   199dc:	bl	10ef8 <__errno_location@plt>
   199e0:	ldr	r1, [sp, #8]
   199e4:	str	r1, [r0]
   199e8:	mvn	r0, #0
   199ec:	str	r0, [sp, #12]
   199f0:	ldr	r0, [sp, #12]
   199f4:	str	r0, [fp, #-4]
   199f8:	ldr	r0, [fp, #-4]
   199fc:	mov	sp, fp
   19a00:	pop	{fp, pc}
   19a04:	push	{fp, lr}
   19a08:	mov	fp, sp
   19a0c:	sub	sp, sp, #8
   19a10:	str	r0, [sp]
   19a14:	ldr	r0, [sp]
   19a18:	movw	r1, #0
   19a1c:	cmp	r0, r1
   19a20:	beq	19a34 <__assert_fail@plt+0x8aa0>
   19a24:	ldr	r0, [sp]
   19a28:	bl	10e8c <__freading@plt>
   19a2c:	cmp	r0, #0
   19a30:	bne	19a44 <__assert_fail@plt+0x8ab0>
   19a34:	ldr	r0, [sp]
   19a38:	bl	10d9c <fflush@plt>
   19a3c:	str	r0, [sp, #4]
   19a40:	b	19a58 <__assert_fail@plt+0x8ac4>
   19a44:	ldr	r0, [sp]
   19a48:	bl	19a64 <__assert_fail@plt+0x8ad0>
   19a4c:	ldr	r0, [sp]
   19a50:	bl	10d9c <fflush@plt>
   19a54:	str	r0, [sp, #4]
   19a58:	ldr	r0, [sp, #4]
   19a5c:	mov	sp, fp
   19a60:	pop	{fp, pc}
   19a64:	push	{fp, lr}
   19a68:	mov	fp, sp
   19a6c:	sub	sp, sp, #8
   19a70:	str	r0, [sp, #4]
   19a74:	ldr	r0, [sp, #4]
   19a78:	ldr	r0, [r0]
   19a7c:	and	r0, r0, #256	; 0x100
   19a80:	cmp	r0, #0
   19a84:	beq	19aa8 <__assert_fail@plt+0x8b14>
   19a88:	ldr	r0, [sp, #4]
   19a8c:	mov	r1, sp
   19a90:	mov	r2, #1
   19a94:	str	r2, [r1]
   19a98:	mov	r1, #0
   19a9c:	mov	r2, r1
   19aa0:	mov	r3, r1
   19aa4:	bl	19af0 <__assert_fail@plt+0x8b5c>
   19aa8:	mov	sp, fp
   19aac:	pop	{fp, pc}
   19ab0:	push	{fp, lr}
   19ab4:	mov	fp, sp
   19ab8:	sub	sp, sp, #16
   19abc:	str	r0, [fp, #-4]
   19ac0:	bl	10ef8 <__errno_location@plt>
   19ac4:	ldr	r0, [r0]
   19ac8:	str	r0, [sp, #8]
   19acc:	ldr	r0, [fp, #-4]
   19ad0:	bl	10da8 <free@plt>
   19ad4:	ldr	r0, [sp, #8]
   19ad8:	str	r0, [sp, #4]
   19adc:	bl	10ef8 <__errno_location@plt>
   19ae0:	ldr	r1, [sp, #4]
   19ae4:	str	r1, [r0]
   19ae8:	mov	sp, fp
   19aec:	pop	{fp, pc}
   19af0:	push	{fp, lr}
   19af4:	mov	fp, sp
   19af8:	sub	sp, sp, #32
   19afc:	ldr	r1, [fp, #8]
   19b00:	str	r0, [fp, #-8]
   19b04:	str	r3, [sp, #20]
   19b08:	str	r2, [sp, #16]
   19b0c:	ldr	r0, [fp, #-8]
   19b10:	ldr	r0, [r0, #8]
   19b14:	ldr	r2, [fp, #-8]
   19b18:	ldr	r2, [r2, #4]
   19b1c:	cmp	r0, r2
   19b20:	bne	19bcc <__assert_fail@plt+0x8c38>
   19b24:	ldr	r0, [fp, #-8]
   19b28:	ldr	r0, [r0, #20]
   19b2c:	ldr	r1, [fp, #-8]
   19b30:	ldr	r1, [r1, #16]
   19b34:	cmp	r0, r1
   19b38:	bne	19bcc <__assert_fail@plt+0x8c38>
   19b3c:	ldr	r0, [fp, #-8]
   19b40:	ldr	r0, [r0, #36]	; 0x24
   19b44:	movw	r1, #0
   19b48:	cmp	r0, r1
   19b4c:	bne	19bcc <__assert_fail@plt+0x8c38>
   19b50:	ldr	r0, [fp, #-8]
   19b54:	bl	10f1c <fileno@plt>
   19b58:	ldr	r2, [sp, #16]
   19b5c:	ldr	r3, [sp, #20]
   19b60:	ldr	r1, [fp, #8]
   19b64:	mov	ip, sp
   19b68:	str	r1, [ip]
   19b6c:	bl	10e20 <lseek64@plt>
   19b70:	str	r1, [sp, #12]
   19b74:	str	r0, [sp, #8]
   19b78:	ldr	r0, [sp, #8]
   19b7c:	ldr	r1, [sp, #12]
   19b80:	and	r0, r0, r1
   19b84:	cmn	r0, #1
   19b88:	bne	19b9c <__assert_fail@plt+0x8c08>
   19b8c:	b	19b90 <__assert_fail@plt+0x8bfc>
   19b90:	mvn	r0, #0
   19b94:	str	r0, [fp, #-4]
   19b98:	b	19bec <__assert_fail@plt+0x8c58>
   19b9c:	ldr	r0, [fp, #-8]
   19ba0:	ldr	r1, [r0]
   19ba4:	bic	r1, r1, #16
   19ba8:	str	r1, [r0]
   19bac:	ldr	r0, [sp, #8]
   19bb0:	ldr	r1, [sp, #12]
   19bb4:	ldr	r2, [fp, #-8]
   19bb8:	str	r1, [r2, #84]	; 0x54
   19bbc:	str	r0, [r2, #80]	; 0x50
   19bc0:	movw	r0, #0
   19bc4:	str	r0, [fp, #-4]
   19bc8:	b	19bec <__assert_fail@plt+0x8c58>
   19bcc:	ldr	r0, [fp, #-8]
   19bd0:	ldr	r2, [sp, #16]
   19bd4:	ldr	r3, [sp, #20]
   19bd8:	ldr	r1, [fp, #8]
   19bdc:	mov	ip, sp
   19be0:	str	r1, [ip]
   19be4:	bl	10f34 <fseeko64@plt>
   19be8:	str	r0, [fp, #-4]
   19bec:	ldr	r0, [fp, #-4]
   19bf0:	mov	sp, fp
   19bf4:	pop	{fp, pc}
   19bf8:	push	{fp, lr}
   19bfc:	mov	fp, sp
   19c00:	bl	10ef8 <__errno_location@plt>
   19c04:	movw	r1, #12
   19c08:	str	r1, [r0]
   19c0c:	movw	r0, #0
   19c10:	pop	{fp, pc}
   19c14:	push	{fp, lr}
   19c18:	mov	fp, sp
   19c1c:	sub	sp, sp, #8
   19c20:	str	r0, [sp, #4]
   19c24:	ldr	r0, [sp, #4]
   19c28:	cmn	r0, #1
   19c2c:	bhi	19c40 <__assert_fail@plt+0x8cac>
   19c30:	ldr	r0, [sp, #4]
   19c34:	bl	1967c <__assert_fail@plt+0x86e8>
   19c38:	str	r0, [sp]
   19c3c:	b	19c48 <__assert_fail@plt+0x8cb4>
   19c40:	bl	19bf8 <__assert_fail@plt+0x8c64>
   19c44:	str	r0, [sp]
   19c48:	ldr	r0, [sp]
   19c4c:	mov	sp, fp
   19c50:	pop	{fp, pc}
   19c54:	push	{fp, lr}
   19c58:	mov	fp, sp
   19c5c:	sub	sp, sp, #16
   19c60:	str	r0, [fp, #-4]
   19c64:	str	r1, [sp, #8]
   19c68:	ldr	r0, [sp, #8]
   19c6c:	cmn	r0, #1
   19c70:	bhi	19ca8 <__assert_fail@plt+0x8d14>
   19c74:	ldr	r0, [fp, #-4]
   19c78:	ldr	r1, [sp, #8]
   19c7c:	ldr	r2, [sp, #8]
   19c80:	cmp	r2, #0
   19c84:	movw	r2, #0
   19c88:	movne	r2, #1
   19c8c:	mvn	r3, #0
   19c90:	eor	r2, r2, r3
   19c94:	and	r2, r2, #1
   19c98:	orr	r1, r1, r2
   19c9c:	bl	196ec <__assert_fail@plt+0x8758>
   19ca0:	str	r0, [sp, #4]
   19ca4:	b	19cb0 <__assert_fail@plt+0x8d1c>
   19ca8:	bl	19bf8 <__assert_fail@plt+0x8c64>
   19cac:	str	r0, [sp, #4]
   19cb0:	ldr	r0, [sp, #4]
   19cb4:	mov	sp, fp
   19cb8:	pop	{fp, pc}
   19cbc:	push	{fp, lr}
   19cc0:	mov	fp, sp
   19cc4:	sub	sp, sp, #16
   19cc8:	str	r0, [sp, #8]
   19ccc:	str	r1, [sp, #4]
   19cd0:	ldr	r0, [sp, #8]
   19cd4:	mvn	r1, #0
   19cd8:	cmp	r1, r0
   19cdc:	bcs	19d00 <__assert_fail@plt+0x8d6c>
   19ce0:	ldr	r0, [sp, #4]
   19ce4:	cmp	r0, #0
   19ce8:	beq	19cf8 <__assert_fail@plt+0x8d64>
   19cec:	bl	19bf8 <__assert_fail@plt+0x8c64>
   19cf0:	str	r0, [fp, #-4]
   19cf4:	b	19d40 <__assert_fail@plt+0x8dac>
   19cf8:	movw	r0, #0
   19cfc:	str	r0, [sp, #8]
   19d00:	ldr	r0, [sp, #4]
   19d04:	mvn	r1, #0
   19d08:	cmp	r1, r0
   19d0c:	bcs	19d30 <__assert_fail@plt+0x8d9c>
   19d10:	ldr	r0, [sp, #8]
   19d14:	cmp	r0, #0
   19d18:	beq	19d28 <__assert_fail@plt+0x8d94>
   19d1c:	bl	19bf8 <__assert_fail@plt+0x8c64>
   19d20:	str	r0, [fp, #-4]
   19d24:	b	19d40 <__assert_fail@plt+0x8dac>
   19d28:	movw	r0, #0
   19d2c:	str	r0, [sp, #4]
   19d30:	ldr	r0, [sp, #8]
   19d34:	ldr	r1, [sp, #4]
   19d38:	bl	195e0 <__assert_fail@plt+0x864c>
   19d3c:	str	r0, [fp, #-4]
   19d40:	ldr	r0, [fp, #-4]
   19d44:	mov	sp, fp
   19d48:	pop	{fp, pc}
   19d4c:	push	{fp, lr}
   19d50:	mov	fp, sp
   19d54:	sub	sp, sp, #16
   19d58:	str	r0, [fp, #-4]
   19d5c:	str	r1, [sp, #8]
   19d60:	str	r2, [sp, #4]
   19d64:	ldr	r0, [sp, #8]
   19d68:	cmp	r0, #0
   19d6c:	beq	19d7c <__assert_fail@plt+0x8de8>
   19d70:	ldr	r0, [sp, #4]
   19d74:	cmp	r0, #0
   19d78:	bne	19d88 <__assert_fail@plt+0x8df4>
   19d7c:	movw	r0, #1
   19d80:	str	r0, [sp, #4]
   19d84:	str	r0, [sp, #8]
   19d88:	ldr	r0, [sp, #8]
   19d8c:	cmn	r0, #1
   19d90:	bhi	19db8 <__assert_fail@plt+0x8e24>
   19d94:	ldr	r0, [sp, #4]
   19d98:	cmn	r0, #1
   19d9c:	bhi	19db8 <__assert_fail@plt+0x8e24>
   19da0:	ldr	r0, [fp, #-4]
   19da4:	ldr	r1, [sp, #8]
   19da8:	ldr	r2, [sp, #4]
   19dac:	bl	19ed8 <__assert_fail@plt+0x8f44>
   19db0:	str	r0, [sp]
   19db4:	b	19dc0 <__assert_fail@plt+0x8e2c>
   19db8:	bl	19bf8 <__assert_fail@plt+0x8c64>
   19dbc:	str	r0, [sp]
   19dc0:	ldr	r0, [sp]
   19dc4:	mov	sp, fp
   19dc8:	pop	{fp, pc}
   19dcc:	push	{fp, lr}
   19dd0:	mov	fp, sp
   19dd4:	sub	sp, sp, #8
   19dd8:	movw	r0, #14
   19ddc:	bl	10f58 <nl_langinfo@plt>
   19de0:	str	r0, [sp, #4]
   19de4:	ldr	r0, [sp, #4]
   19de8:	movw	r1, #0
   19dec:	cmp	r0, r1
   19df0:	bne	19e00 <__assert_fail@plt+0x8e6c>
   19df4:	movw	r0, #49630	; 0xc1de
   19df8:	movt	r0, #1
   19dfc:	str	r0, [sp, #4]
   19e00:	ldr	r0, [sp, #4]
   19e04:	ldrb	r0, [r0]
   19e08:	cmp	r0, #0
   19e0c:	bne	19e1c <__assert_fail@plt+0x8e88>
   19e10:	movw	r0, #50988	; 0xc72c
   19e14:	movt	r0, #1
   19e18:	str	r0, [sp, #4]
   19e1c:	ldr	r0, [sp, #4]
   19e20:	mov	sp, fp
   19e24:	pop	{fp, pc}
   19e28:	push	{fp, lr}
   19e2c:	mov	fp, sp
   19e30:	sub	sp, sp, #32
   19e34:	str	r0, [fp, #-8]
   19e38:	str	r1, [fp, #-12]
   19e3c:	str	r2, [sp, #16]
   19e40:	str	r3, [sp, #12]
   19e44:	ldr	r0, [fp, #-8]
   19e48:	movw	r1, #0
   19e4c:	cmp	r0, r1
   19e50:	bne	19e5c <__assert_fail@plt+0x8ec8>
   19e54:	add	r0, sp, #4
   19e58:	str	r0, [fp, #-8]
   19e5c:	ldr	r0, [fp, #-8]
   19e60:	ldr	r1, [fp, #-12]
   19e64:	ldr	r2, [sp, #16]
   19e68:	ldr	r3, [sp, #12]
   19e6c:	bl	10e50 <mbrtowc@plt>
   19e70:	str	r0, [sp, #8]
   19e74:	ldr	r0, [sp, #8]
   19e78:	mvn	r1, #1
   19e7c:	cmp	r1, r0
   19e80:	bhi	19ec4 <__assert_fail@plt+0x8f30>
   19e84:	ldr	r0, [sp, #16]
   19e88:	cmp	r0, #0
   19e8c:	beq	19ec4 <__assert_fail@plt+0x8f30>
   19e90:	movw	r0, #0
   19e94:	bl	1b858 <__assert_fail@plt+0xa8c4>
   19e98:	tst	r0, #1
   19e9c:	bne	19ec4 <__assert_fail@plt+0x8f30>
   19ea0:	ldr	r0, [fp, #-12]
   19ea4:	ldrb	r0, [r0]
   19ea8:	strb	r0, [sp, #3]
   19eac:	ldrb	r0, [sp, #3]
   19eb0:	ldr	r1, [fp, #-8]
   19eb4:	str	r0, [r1]
   19eb8:	movw	r0, #1
   19ebc:	str	r0, [fp, #-4]
   19ec0:	b	19ecc <__assert_fail@plt+0x8f38>
   19ec4:	ldr	r0, [sp, #8]
   19ec8:	str	r0, [fp, #-4]
   19ecc:	ldr	r0, [fp, #-4]
   19ed0:	mov	sp, fp
   19ed4:	pop	{fp, pc}
   19ed8:	push	{fp, lr}
   19edc:	mov	fp, sp
   19ee0:	sub	sp, sp, #96	; 0x60
   19ee4:	str	r0, [fp, #-8]
   19ee8:	str	r1, [fp, #-12]
   19eec:	str	r2, [fp, #-16]
   19ef0:	b	1a2a8 <__assert_fail@plt+0x9314>
   19ef4:	b	1a0c8 <__assert_fail@plt+0x9134>
   19ef8:	ldr	r0, [fp, #-16]
   19efc:	cmp	r0, #0
   19f00:	bcs	1a004 <__assert_fail@plt+0x9070>
   19f04:	ldr	r0, [fp, #-12]
   19f08:	cmp	r0, #0
   19f0c:	bcs	19f94 <__assert_fail@plt+0x9000>
   19f10:	b	19f30 <__assert_fail@plt+0x8f9c>
   19f14:	ldr	r0, [fp, #-12]
   19f18:	ldr	r1, [fp, #-16]
   19f1c:	movw	r2, #127	; 0x7f
   19f20:	udiv	r1, r2, r1
   19f24:	cmp	r0, r1
   19f28:	bcc	1a098 <__assert_fail@plt+0x9104>
   19f2c:	b	1a0b0 <__assert_fail@plt+0x911c>
   19f30:	b	19f44 <__assert_fail@plt+0x8fb0>
   19f34:	ldr	r0, [fp, #-16]
   19f38:	cmp	r0, #1
   19f3c:	bcc	19f54 <__assert_fail@plt+0x8fc0>
   19f40:	b	19f60 <__assert_fail@plt+0x8fcc>
   19f44:	ldr	r0, [fp, #-16]
   19f48:	movw	r1, #0
   19f4c:	cmp	r1, r0
   19f50:	bcs	19f60 <__assert_fail@plt+0x8fcc>
   19f54:	movw	r0, #0
   19f58:	str	r0, [fp, #-24]	; 0xffffffe8
   19f5c:	b	19f78 <__assert_fail@plt+0x8fe4>
   19f60:	ldr	r0, [fp, #-16]
   19f64:	movw	r1, #0
   19f68:	sub	r0, r1, r0
   19f6c:	movw	r1, #127	; 0x7f
   19f70:	udiv	r0, r1, r0
   19f74:	str	r0, [fp, #-24]	; 0xffffffe8
   19f78:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19f7c:	ldr	r1, [fp, #-12]
   19f80:	mvn	r2, #0
   19f84:	sub	r1, r2, r1
   19f88:	cmp	r0, r1
   19f8c:	bls	1a098 <__assert_fail@plt+0x9104>
   19f90:	b	1a0b0 <__assert_fail@plt+0x911c>
   19f94:	ldr	r0, [fp, #-16]
   19f98:	cmn	r0, #1
   19f9c:	bne	19fe8 <__assert_fail@plt+0x9054>
   19fa0:	b	19fc0 <__assert_fail@plt+0x902c>
   19fa4:	ldr	r0, [fp, #-12]
   19fa8:	mvn	r1, #127	; 0x7f
   19fac:	add	r0, r0, r1
   19fb0:	movw	r1, #0
   19fb4:	cmp	r1, r0
   19fb8:	bcc	1a098 <__assert_fail@plt+0x9104>
   19fbc:	b	1a0b0 <__assert_fail@plt+0x911c>
   19fc0:	ldr	r0, [fp, #-12]
   19fc4:	movw	r1, #0
   19fc8:	cmp	r1, r0
   19fcc:	bcs	1a0b0 <__assert_fail@plt+0x911c>
   19fd0:	ldr	r0, [fp, #-12]
   19fd4:	sub	r0, r0, #1
   19fd8:	movw	r1, #127	; 0x7f
   19fdc:	cmp	r1, r0
   19fe0:	bcc	1a098 <__assert_fail@plt+0x9104>
   19fe4:	b	1a0b0 <__assert_fail@plt+0x911c>
   19fe8:	ldr	r0, [fp, #-16]
   19fec:	mvn	r1, #127	; 0x7f
   19ff0:	udiv	r0, r1, r0
   19ff4:	ldr	r1, [fp, #-12]
   19ff8:	cmp	r0, r1
   19ffc:	bcc	1a098 <__assert_fail@plt+0x9104>
   1a000:	b	1a0b0 <__assert_fail@plt+0x911c>
   1a004:	ldr	r0, [fp, #-16]
   1a008:	cmp	r0, #0
   1a00c:	bne	1a014 <__assert_fail@plt+0x9080>
   1a010:	b	1a0b0 <__assert_fail@plt+0x911c>
   1a014:	ldr	r0, [fp, #-12]
   1a018:	cmp	r0, #0
   1a01c:	bcs	1a080 <__assert_fail@plt+0x90ec>
   1a020:	ldr	r0, [fp, #-12]
   1a024:	cmn	r0, #1
   1a028:	bne	1a064 <__assert_fail@plt+0x90d0>
   1a02c:	b	1a04c <__assert_fail@plt+0x90b8>
   1a030:	ldr	r0, [fp, #-16]
   1a034:	mvn	r1, #127	; 0x7f
   1a038:	add	r0, r0, r1
   1a03c:	movw	r1, #0
   1a040:	cmp	r1, r0
   1a044:	bcc	1a098 <__assert_fail@plt+0x9104>
   1a048:	b	1a0b0 <__assert_fail@plt+0x911c>
   1a04c:	ldr	r0, [fp, #-16]
   1a050:	sub	r0, r0, #1
   1a054:	movw	r1, #127	; 0x7f
   1a058:	cmp	r1, r0
   1a05c:	bcc	1a098 <__assert_fail@plt+0x9104>
   1a060:	b	1a0b0 <__assert_fail@plt+0x911c>
   1a064:	ldr	r0, [fp, #-12]
   1a068:	mvn	r1, #127	; 0x7f
   1a06c:	udiv	r0, r1, r0
   1a070:	ldr	r1, [fp, #-16]
   1a074:	cmp	r0, r1
   1a078:	bcc	1a098 <__assert_fail@plt+0x9104>
   1a07c:	b	1a0b0 <__assert_fail@plt+0x911c>
   1a080:	ldr	r0, [fp, #-16]
   1a084:	movw	r1, #127	; 0x7f
   1a088:	udiv	r0, r1, r0
   1a08c:	ldr	r1, [fp, #-12]
   1a090:	cmp	r0, r1
   1a094:	bcs	1a0b0 <__assert_fail@plt+0x911c>
   1a098:	ldr	r0, [fp, #-12]
   1a09c:	ldr	r1, [fp, #-16]
   1a0a0:	mul	r0, r0, r1
   1a0a4:	sxtb	r0, r0
   1a0a8:	str	r0, [fp, #-20]	; 0xffffffec
   1a0ac:	b	1b1d8 <__assert_fail@plt+0xa244>
   1a0b0:	ldr	r0, [fp, #-12]
   1a0b4:	ldr	r1, [fp, #-16]
   1a0b8:	mul	r0, r0, r1
   1a0bc:	sxtb	r0, r0
   1a0c0:	str	r0, [fp, #-20]	; 0xffffffec
   1a0c4:	b	1b1f0 <__assert_fail@plt+0xa25c>
   1a0c8:	ldr	r0, [fp, #-16]
   1a0cc:	cmp	r0, #0
   1a0d0:	bcs	1a1dc <__assert_fail@plt+0x9248>
   1a0d4:	ldr	r0, [fp, #-12]
   1a0d8:	cmp	r0, #0
   1a0dc:	bcs	1a164 <__assert_fail@plt+0x91d0>
   1a0e0:	b	1a100 <__assert_fail@plt+0x916c>
   1a0e4:	ldr	r0, [fp, #-12]
   1a0e8:	ldr	r1, [fp, #-16]
   1a0ec:	movw	r2, #255	; 0xff
   1a0f0:	udiv	r1, r2, r1
   1a0f4:	cmp	r0, r1
   1a0f8:	bcc	1a278 <__assert_fail@plt+0x92e4>
   1a0fc:	b	1a290 <__assert_fail@plt+0x92fc>
   1a100:	b	1a114 <__assert_fail@plt+0x9180>
   1a104:	ldr	r0, [fp, #-16]
   1a108:	cmp	r0, #1
   1a10c:	bcc	1a124 <__assert_fail@plt+0x9190>
   1a110:	b	1a130 <__assert_fail@plt+0x919c>
   1a114:	ldr	r0, [fp, #-16]
   1a118:	movw	r1, #0
   1a11c:	cmp	r1, r0
   1a120:	bcs	1a130 <__assert_fail@plt+0x919c>
   1a124:	movw	r0, #0
   1a128:	str	r0, [fp, #-28]	; 0xffffffe4
   1a12c:	b	1a148 <__assert_fail@plt+0x91b4>
   1a130:	ldr	r0, [fp, #-16]
   1a134:	movw	r1, #0
   1a138:	sub	r0, r1, r0
   1a13c:	movw	r1, #255	; 0xff
   1a140:	udiv	r0, r1, r0
   1a144:	str	r0, [fp, #-28]	; 0xffffffe4
   1a148:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1a14c:	ldr	r1, [fp, #-12]
   1a150:	mvn	r2, #0
   1a154:	sub	r1, r2, r1
   1a158:	cmp	r0, r1
   1a15c:	bls	1a278 <__assert_fail@plt+0x92e4>
   1a160:	b	1a290 <__assert_fail@plt+0x92fc>
   1a164:	b	1a16c <__assert_fail@plt+0x91d8>
   1a168:	b	1a170 <__assert_fail@plt+0x91dc>
   1a16c:	b	1a1c0 <__assert_fail@plt+0x922c>
   1a170:	ldr	r0, [fp, #-16]
   1a174:	cmn	r0, #1
   1a178:	bne	1a1c0 <__assert_fail@plt+0x922c>
   1a17c:	b	1a198 <__assert_fail@plt+0x9204>
   1a180:	ldr	r0, [fp, #-12]
   1a184:	add	r0, r0, #0
   1a188:	movw	r1, #0
   1a18c:	cmp	r1, r0
   1a190:	bcc	1a278 <__assert_fail@plt+0x92e4>
   1a194:	b	1a290 <__assert_fail@plt+0x92fc>
   1a198:	ldr	r0, [fp, #-12]
   1a19c:	movw	r1, #0
   1a1a0:	cmp	r1, r0
   1a1a4:	bcs	1a290 <__assert_fail@plt+0x92fc>
   1a1a8:	ldr	r0, [fp, #-12]
   1a1ac:	sub	r0, r0, #1
   1a1b0:	mvn	r1, #0
   1a1b4:	cmp	r1, r0
   1a1b8:	bcc	1a278 <__assert_fail@plt+0x92e4>
   1a1bc:	b	1a290 <__assert_fail@plt+0x92fc>
   1a1c0:	ldr	r0, [fp, #-16]
   1a1c4:	movw	r1, #0
   1a1c8:	udiv	r0, r1, r0
   1a1cc:	ldr	r1, [fp, #-12]
   1a1d0:	cmp	r0, r1
   1a1d4:	bcc	1a278 <__assert_fail@plt+0x92e4>
   1a1d8:	b	1a290 <__assert_fail@plt+0x92fc>
   1a1dc:	ldr	r0, [fp, #-16]
   1a1e0:	cmp	r0, #0
   1a1e4:	bne	1a1ec <__assert_fail@plt+0x9258>
   1a1e8:	b	1a290 <__assert_fail@plt+0x92fc>
   1a1ec:	ldr	r0, [fp, #-12]
   1a1f0:	cmp	r0, #0
   1a1f4:	bcs	1a260 <__assert_fail@plt+0x92cc>
   1a1f8:	b	1a200 <__assert_fail@plt+0x926c>
   1a1fc:	b	1a204 <__assert_fail@plt+0x9270>
   1a200:	b	1a244 <__assert_fail@plt+0x92b0>
   1a204:	ldr	r0, [fp, #-12]
   1a208:	cmn	r0, #1
   1a20c:	bne	1a244 <__assert_fail@plt+0x92b0>
   1a210:	b	1a22c <__assert_fail@plt+0x9298>
   1a214:	ldr	r0, [fp, #-16]
   1a218:	add	r0, r0, #0
   1a21c:	movw	r1, #0
   1a220:	cmp	r1, r0
   1a224:	bcc	1a278 <__assert_fail@plt+0x92e4>
   1a228:	b	1a290 <__assert_fail@plt+0x92fc>
   1a22c:	ldr	r0, [fp, #-16]
   1a230:	sub	r0, r0, #1
   1a234:	mvn	r1, #0
   1a238:	cmp	r1, r0
   1a23c:	bcc	1a278 <__assert_fail@plt+0x92e4>
   1a240:	b	1a290 <__assert_fail@plt+0x92fc>
   1a244:	ldr	r0, [fp, #-12]
   1a248:	movw	r1, #0
   1a24c:	udiv	r0, r1, r0
   1a250:	ldr	r1, [fp, #-16]
   1a254:	cmp	r0, r1
   1a258:	bcc	1a278 <__assert_fail@plt+0x92e4>
   1a25c:	b	1a290 <__assert_fail@plt+0x92fc>
   1a260:	ldr	r0, [fp, #-16]
   1a264:	movw	r1, #255	; 0xff
   1a268:	udiv	r0, r1, r0
   1a26c:	ldr	r1, [fp, #-12]
   1a270:	cmp	r0, r1
   1a274:	bcs	1a290 <__assert_fail@plt+0x92fc>
   1a278:	ldr	r0, [fp, #-12]
   1a27c:	ldr	r1, [fp, #-16]
   1a280:	mul	r0, r0, r1
   1a284:	and	r0, r0, #255	; 0xff
   1a288:	str	r0, [fp, #-20]	; 0xffffffec
   1a28c:	b	1b1d8 <__assert_fail@plt+0xa244>
   1a290:	ldr	r0, [fp, #-12]
   1a294:	ldr	r1, [fp, #-16]
   1a298:	mul	r0, r0, r1
   1a29c:	and	r0, r0, #255	; 0xff
   1a2a0:	str	r0, [fp, #-20]	; 0xffffffec
   1a2a4:	b	1b1f0 <__assert_fail@plt+0xa25c>
   1a2a8:	b	1a660 <__assert_fail@plt+0x96cc>
   1a2ac:	b	1a480 <__assert_fail@plt+0x94ec>
   1a2b0:	ldr	r0, [fp, #-16]
   1a2b4:	cmp	r0, #0
   1a2b8:	bcs	1a3bc <__assert_fail@plt+0x9428>
   1a2bc:	ldr	r0, [fp, #-12]
   1a2c0:	cmp	r0, #0
   1a2c4:	bcs	1a34c <__assert_fail@plt+0x93b8>
   1a2c8:	b	1a2e8 <__assert_fail@plt+0x9354>
   1a2cc:	ldr	r0, [fp, #-12]
   1a2d0:	ldr	r1, [fp, #-16]
   1a2d4:	movw	r2, #32767	; 0x7fff
   1a2d8:	udiv	r1, r2, r1
   1a2dc:	cmp	r0, r1
   1a2e0:	bcc	1a450 <__assert_fail@plt+0x94bc>
   1a2e4:	b	1a468 <__assert_fail@plt+0x94d4>
   1a2e8:	b	1a2fc <__assert_fail@plt+0x9368>
   1a2ec:	ldr	r0, [fp, #-16]
   1a2f0:	cmp	r0, #1
   1a2f4:	bcc	1a30c <__assert_fail@plt+0x9378>
   1a2f8:	b	1a318 <__assert_fail@plt+0x9384>
   1a2fc:	ldr	r0, [fp, #-16]
   1a300:	movw	r1, #0
   1a304:	cmp	r1, r0
   1a308:	bcs	1a318 <__assert_fail@plt+0x9384>
   1a30c:	movw	r0, #0
   1a310:	str	r0, [fp, #-32]	; 0xffffffe0
   1a314:	b	1a330 <__assert_fail@plt+0x939c>
   1a318:	ldr	r0, [fp, #-16]
   1a31c:	movw	r1, #0
   1a320:	sub	r0, r1, r0
   1a324:	movw	r1, #32767	; 0x7fff
   1a328:	udiv	r0, r1, r0
   1a32c:	str	r0, [fp, #-32]	; 0xffffffe0
   1a330:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a334:	ldr	r1, [fp, #-12]
   1a338:	mvn	r2, #0
   1a33c:	sub	r1, r2, r1
   1a340:	cmp	r0, r1
   1a344:	bls	1a450 <__assert_fail@plt+0x94bc>
   1a348:	b	1a468 <__assert_fail@plt+0x94d4>
   1a34c:	ldr	r0, [fp, #-16]
   1a350:	cmn	r0, #1
   1a354:	bne	1a3a0 <__assert_fail@plt+0x940c>
   1a358:	b	1a378 <__assert_fail@plt+0x93e4>
   1a35c:	ldr	r0, [pc, #3760]	; 1b214 <__assert_fail@plt+0xa280>
   1a360:	ldr	r1, [fp, #-12]
   1a364:	add	r0, r1, r0
   1a368:	movw	r1, #0
   1a36c:	cmp	r1, r0
   1a370:	bcc	1a450 <__assert_fail@plt+0x94bc>
   1a374:	b	1a468 <__assert_fail@plt+0x94d4>
   1a378:	ldr	r0, [fp, #-12]
   1a37c:	movw	r1, #0
   1a380:	cmp	r1, r0
   1a384:	bcs	1a468 <__assert_fail@plt+0x94d4>
   1a388:	ldr	r0, [fp, #-12]
   1a38c:	sub	r0, r0, #1
   1a390:	movw	r1, #32767	; 0x7fff
   1a394:	cmp	r1, r0
   1a398:	bcc	1a450 <__assert_fail@plt+0x94bc>
   1a39c:	b	1a468 <__assert_fail@plt+0x94d4>
   1a3a0:	ldr	r0, [pc, #3692]	; 1b214 <__assert_fail@plt+0xa280>
   1a3a4:	ldr	r1, [fp, #-16]
   1a3a8:	udiv	r0, r0, r1
   1a3ac:	ldr	r1, [fp, #-12]
   1a3b0:	cmp	r0, r1
   1a3b4:	bcc	1a450 <__assert_fail@plt+0x94bc>
   1a3b8:	b	1a468 <__assert_fail@plt+0x94d4>
   1a3bc:	ldr	r0, [fp, #-16]
   1a3c0:	cmp	r0, #0
   1a3c4:	bne	1a3cc <__assert_fail@plt+0x9438>
   1a3c8:	b	1a468 <__assert_fail@plt+0x94d4>
   1a3cc:	ldr	r0, [fp, #-12]
   1a3d0:	cmp	r0, #0
   1a3d4:	bcs	1a438 <__assert_fail@plt+0x94a4>
   1a3d8:	ldr	r0, [fp, #-12]
   1a3dc:	cmn	r0, #1
   1a3e0:	bne	1a41c <__assert_fail@plt+0x9488>
   1a3e4:	b	1a404 <__assert_fail@plt+0x9470>
   1a3e8:	ldr	r0, [pc, #3620]	; 1b214 <__assert_fail@plt+0xa280>
   1a3ec:	ldr	r1, [fp, #-16]
   1a3f0:	add	r0, r1, r0
   1a3f4:	movw	r1, #0
   1a3f8:	cmp	r1, r0
   1a3fc:	bcc	1a450 <__assert_fail@plt+0x94bc>
   1a400:	b	1a468 <__assert_fail@plt+0x94d4>
   1a404:	ldr	r0, [fp, #-16]
   1a408:	sub	r0, r0, #1
   1a40c:	movw	r1, #32767	; 0x7fff
   1a410:	cmp	r1, r0
   1a414:	bcc	1a450 <__assert_fail@plt+0x94bc>
   1a418:	b	1a468 <__assert_fail@plt+0x94d4>
   1a41c:	ldr	r0, [pc, #3568]	; 1b214 <__assert_fail@plt+0xa280>
   1a420:	ldr	r1, [fp, #-12]
   1a424:	udiv	r0, r0, r1
   1a428:	ldr	r1, [fp, #-16]
   1a42c:	cmp	r0, r1
   1a430:	bcc	1a450 <__assert_fail@plt+0x94bc>
   1a434:	b	1a468 <__assert_fail@plt+0x94d4>
   1a438:	ldr	r0, [fp, #-16]
   1a43c:	movw	r1, #32767	; 0x7fff
   1a440:	udiv	r0, r1, r0
   1a444:	ldr	r1, [fp, #-12]
   1a448:	cmp	r0, r1
   1a44c:	bcs	1a468 <__assert_fail@plt+0x94d4>
   1a450:	ldr	r0, [fp, #-12]
   1a454:	ldr	r1, [fp, #-16]
   1a458:	mul	r0, r0, r1
   1a45c:	sxth	r0, r0
   1a460:	str	r0, [fp, #-20]	; 0xffffffec
   1a464:	b	1b1d8 <__assert_fail@plt+0xa244>
   1a468:	ldr	r0, [fp, #-12]
   1a46c:	ldr	r1, [fp, #-16]
   1a470:	mul	r0, r0, r1
   1a474:	sxth	r0, r0
   1a478:	str	r0, [fp, #-20]	; 0xffffffec
   1a47c:	b	1b1f0 <__assert_fail@plt+0xa25c>
   1a480:	ldr	r0, [fp, #-16]
   1a484:	cmp	r0, #0
   1a488:	bcs	1a594 <__assert_fail@plt+0x9600>
   1a48c:	ldr	r0, [fp, #-12]
   1a490:	cmp	r0, #0
   1a494:	bcs	1a51c <__assert_fail@plt+0x9588>
   1a498:	b	1a4b8 <__assert_fail@plt+0x9524>
   1a49c:	ldr	r0, [fp, #-12]
   1a4a0:	ldr	r1, [fp, #-16]
   1a4a4:	movw	r2, #65535	; 0xffff
   1a4a8:	udiv	r1, r2, r1
   1a4ac:	cmp	r0, r1
   1a4b0:	bcc	1a630 <__assert_fail@plt+0x969c>
   1a4b4:	b	1a648 <__assert_fail@plt+0x96b4>
   1a4b8:	b	1a4cc <__assert_fail@plt+0x9538>
   1a4bc:	ldr	r0, [fp, #-16]
   1a4c0:	cmp	r0, #1
   1a4c4:	bcc	1a4dc <__assert_fail@plt+0x9548>
   1a4c8:	b	1a4e8 <__assert_fail@plt+0x9554>
   1a4cc:	ldr	r0, [fp, #-16]
   1a4d0:	movw	r1, #0
   1a4d4:	cmp	r1, r0
   1a4d8:	bcs	1a4e8 <__assert_fail@plt+0x9554>
   1a4dc:	movw	r0, #0
   1a4e0:	str	r0, [fp, #-36]	; 0xffffffdc
   1a4e4:	b	1a500 <__assert_fail@plt+0x956c>
   1a4e8:	ldr	r0, [fp, #-16]
   1a4ec:	movw	r1, #0
   1a4f0:	sub	r0, r1, r0
   1a4f4:	movw	r1, #65535	; 0xffff
   1a4f8:	udiv	r0, r1, r0
   1a4fc:	str	r0, [fp, #-36]	; 0xffffffdc
   1a500:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1a504:	ldr	r1, [fp, #-12]
   1a508:	mvn	r2, #0
   1a50c:	sub	r1, r2, r1
   1a510:	cmp	r0, r1
   1a514:	bls	1a630 <__assert_fail@plt+0x969c>
   1a518:	b	1a648 <__assert_fail@plt+0x96b4>
   1a51c:	b	1a524 <__assert_fail@plt+0x9590>
   1a520:	b	1a528 <__assert_fail@plt+0x9594>
   1a524:	b	1a578 <__assert_fail@plt+0x95e4>
   1a528:	ldr	r0, [fp, #-16]
   1a52c:	cmn	r0, #1
   1a530:	bne	1a578 <__assert_fail@plt+0x95e4>
   1a534:	b	1a550 <__assert_fail@plt+0x95bc>
   1a538:	ldr	r0, [fp, #-12]
   1a53c:	add	r0, r0, #0
   1a540:	movw	r1, #0
   1a544:	cmp	r1, r0
   1a548:	bcc	1a630 <__assert_fail@plt+0x969c>
   1a54c:	b	1a648 <__assert_fail@plt+0x96b4>
   1a550:	ldr	r0, [fp, #-12]
   1a554:	movw	r1, #0
   1a558:	cmp	r1, r0
   1a55c:	bcs	1a648 <__assert_fail@plt+0x96b4>
   1a560:	ldr	r0, [fp, #-12]
   1a564:	sub	r0, r0, #1
   1a568:	mvn	r1, #0
   1a56c:	cmp	r1, r0
   1a570:	bcc	1a630 <__assert_fail@plt+0x969c>
   1a574:	b	1a648 <__assert_fail@plt+0x96b4>
   1a578:	ldr	r0, [fp, #-16]
   1a57c:	movw	r1, #0
   1a580:	udiv	r0, r1, r0
   1a584:	ldr	r1, [fp, #-12]
   1a588:	cmp	r0, r1
   1a58c:	bcc	1a630 <__assert_fail@plt+0x969c>
   1a590:	b	1a648 <__assert_fail@plt+0x96b4>
   1a594:	ldr	r0, [fp, #-16]
   1a598:	cmp	r0, #0
   1a59c:	bne	1a5a4 <__assert_fail@plt+0x9610>
   1a5a0:	b	1a648 <__assert_fail@plt+0x96b4>
   1a5a4:	ldr	r0, [fp, #-12]
   1a5a8:	cmp	r0, #0
   1a5ac:	bcs	1a618 <__assert_fail@plt+0x9684>
   1a5b0:	b	1a5b8 <__assert_fail@plt+0x9624>
   1a5b4:	b	1a5bc <__assert_fail@plt+0x9628>
   1a5b8:	b	1a5fc <__assert_fail@plt+0x9668>
   1a5bc:	ldr	r0, [fp, #-12]
   1a5c0:	cmn	r0, #1
   1a5c4:	bne	1a5fc <__assert_fail@plt+0x9668>
   1a5c8:	b	1a5e4 <__assert_fail@plt+0x9650>
   1a5cc:	ldr	r0, [fp, #-16]
   1a5d0:	add	r0, r0, #0
   1a5d4:	movw	r1, #0
   1a5d8:	cmp	r1, r0
   1a5dc:	bcc	1a630 <__assert_fail@plt+0x969c>
   1a5e0:	b	1a648 <__assert_fail@plt+0x96b4>
   1a5e4:	ldr	r0, [fp, #-16]
   1a5e8:	sub	r0, r0, #1
   1a5ec:	mvn	r1, #0
   1a5f0:	cmp	r1, r0
   1a5f4:	bcc	1a630 <__assert_fail@plt+0x969c>
   1a5f8:	b	1a648 <__assert_fail@plt+0x96b4>
   1a5fc:	ldr	r0, [fp, #-12]
   1a600:	movw	r1, #0
   1a604:	udiv	r0, r1, r0
   1a608:	ldr	r1, [fp, #-16]
   1a60c:	cmp	r0, r1
   1a610:	bcc	1a630 <__assert_fail@plt+0x969c>
   1a614:	b	1a648 <__assert_fail@plt+0x96b4>
   1a618:	ldr	r0, [fp, #-16]
   1a61c:	movw	r1, #65535	; 0xffff
   1a620:	udiv	r0, r1, r0
   1a624:	ldr	r1, [fp, #-12]
   1a628:	cmp	r0, r1
   1a62c:	bcs	1a648 <__assert_fail@plt+0x96b4>
   1a630:	ldr	r0, [fp, #-12]
   1a634:	ldr	r1, [fp, #-16]
   1a638:	mul	r0, r0, r1
   1a63c:	uxth	r0, r0
   1a640:	str	r0, [fp, #-20]	; 0xffffffec
   1a644:	b	1b1d8 <__assert_fail@plt+0xa244>
   1a648:	ldr	r0, [fp, #-12]
   1a64c:	ldr	r1, [fp, #-16]
   1a650:	mul	r0, r0, r1
   1a654:	uxth	r0, r0
   1a658:	str	r0, [fp, #-20]	; 0xffffffec
   1a65c:	b	1b1f0 <__assert_fail@plt+0xa25c>
   1a660:	b	1a664 <__assert_fail@plt+0x96d0>
   1a664:	b	1a828 <__assert_fail@plt+0x9894>
   1a668:	ldr	r0, [fp, #-16]
   1a66c:	cmp	r0, #0
   1a670:	bcs	1a770 <__assert_fail@plt+0x97dc>
   1a674:	ldr	r0, [fp, #-12]
   1a678:	cmp	r0, #0
   1a67c:	bcs	1a704 <__assert_fail@plt+0x9770>
   1a680:	b	1a6a0 <__assert_fail@plt+0x970c>
   1a684:	ldr	r0, [pc, #2944]	; 1b20c <__assert_fail@plt+0xa278>
   1a688:	ldr	r1, [fp, #-12]
   1a68c:	ldr	r2, [fp, #-16]
   1a690:	udiv	r0, r0, r2
   1a694:	cmp	r1, r0
   1a698:	bcc	1a800 <__assert_fail@plt+0x986c>
   1a69c:	b	1a814 <__assert_fail@plt+0x9880>
   1a6a0:	b	1a6b4 <__assert_fail@plt+0x9720>
   1a6a4:	ldr	r0, [fp, #-16]
   1a6a8:	cmp	r0, #1
   1a6ac:	bcc	1a6c4 <__assert_fail@plt+0x9730>
   1a6b0:	b	1a6d0 <__assert_fail@plt+0x973c>
   1a6b4:	ldr	r0, [fp, #-16]
   1a6b8:	movw	r1, #0
   1a6bc:	cmp	r1, r0
   1a6c0:	bcs	1a6d0 <__assert_fail@plt+0x973c>
   1a6c4:	movw	r0, #0
   1a6c8:	str	r0, [fp, #-40]	; 0xffffffd8
   1a6cc:	b	1a6e8 <__assert_fail@plt+0x9754>
   1a6d0:	ldr	r0, [pc, #2868]	; 1b20c <__assert_fail@plt+0xa278>
   1a6d4:	ldr	r1, [fp, #-16]
   1a6d8:	movw	r2, #0
   1a6dc:	sub	r1, r2, r1
   1a6e0:	udiv	r0, r0, r1
   1a6e4:	str	r0, [fp, #-40]	; 0xffffffd8
   1a6e8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a6ec:	ldr	r1, [fp, #-12]
   1a6f0:	mvn	r2, #0
   1a6f4:	sub	r1, r2, r1
   1a6f8:	cmp	r0, r1
   1a6fc:	bls	1a800 <__assert_fail@plt+0x986c>
   1a700:	b	1a814 <__assert_fail@plt+0x9880>
   1a704:	ldr	r0, [fp, #-16]
   1a708:	cmn	r0, #1
   1a70c:	bne	1a754 <__assert_fail@plt+0x97c0>
   1a710:	b	1a72c <__assert_fail@plt+0x9798>
   1a714:	ldr	r0, [fp, #-12]
   1a718:	add	r0, r0, #-2147483648	; 0x80000000
   1a71c:	movw	r1, #0
   1a720:	cmp	r1, r0
   1a724:	bcc	1a800 <__assert_fail@plt+0x986c>
   1a728:	b	1a814 <__assert_fail@plt+0x9880>
   1a72c:	ldr	r0, [fp, #-12]
   1a730:	movw	r1, #0
   1a734:	cmp	r1, r0
   1a738:	bcs	1a814 <__assert_fail@plt+0x9880>
   1a73c:	ldr	r0, [pc, #2760]	; 1b20c <__assert_fail@plt+0xa278>
   1a740:	ldr	r1, [fp, #-12]
   1a744:	sub	r1, r1, #1
   1a748:	cmp	r0, r1
   1a74c:	bcc	1a800 <__assert_fail@plt+0x986c>
   1a750:	b	1a814 <__assert_fail@plt+0x9880>
   1a754:	ldr	r0, [pc, #2740]	; 1b210 <__assert_fail@plt+0xa27c>
   1a758:	ldr	r1, [fp, #-16]
   1a75c:	udiv	r0, r0, r1
   1a760:	ldr	r1, [fp, #-12]
   1a764:	cmp	r0, r1
   1a768:	bcc	1a800 <__assert_fail@plt+0x986c>
   1a76c:	b	1a814 <__assert_fail@plt+0x9880>
   1a770:	ldr	r0, [fp, #-16]
   1a774:	cmp	r0, #0
   1a778:	bne	1a780 <__assert_fail@plt+0x97ec>
   1a77c:	b	1a814 <__assert_fail@plt+0x9880>
   1a780:	ldr	r0, [fp, #-12]
   1a784:	cmp	r0, #0
   1a788:	bcs	1a7e8 <__assert_fail@plt+0x9854>
   1a78c:	ldr	r0, [fp, #-12]
   1a790:	cmn	r0, #1
   1a794:	bne	1a7cc <__assert_fail@plt+0x9838>
   1a798:	b	1a7b4 <__assert_fail@plt+0x9820>
   1a79c:	ldr	r0, [fp, #-16]
   1a7a0:	add	r0, r0, #-2147483648	; 0x80000000
   1a7a4:	movw	r1, #0
   1a7a8:	cmp	r1, r0
   1a7ac:	bcc	1a800 <__assert_fail@plt+0x986c>
   1a7b0:	b	1a814 <__assert_fail@plt+0x9880>
   1a7b4:	ldr	r0, [pc, #2640]	; 1b20c <__assert_fail@plt+0xa278>
   1a7b8:	ldr	r1, [fp, #-16]
   1a7bc:	sub	r1, r1, #1
   1a7c0:	cmp	r0, r1
   1a7c4:	bcc	1a800 <__assert_fail@plt+0x986c>
   1a7c8:	b	1a814 <__assert_fail@plt+0x9880>
   1a7cc:	ldr	r0, [pc, #2620]	; 1b210 <__assert_fail@plt+0xa27c>
   1a7d0:	ldr	r1, [fp, #-12]
   1a7d4:	udiv	r0, r0, r1
   1a7d8:	ldr	r1, [fp, #-16]
   1a7dc:	cmp	r0, r1
   1a7e0:	bcc	1a800 <__assert_fail@plt+0x986c>
   1a7e4:	b	1a814 <__assert_fail@plt+0x9880>
   1a7e8:	ldr	r0, [pc, #2588]	; 1b20c <__assert_fail@plt+0xa278>
   1a7ec:	ldr	r1, [fp, #-16]
   1a7f0:	udiv	r0, r0, r1
   1a7f4:	ldr	r1, [fp, #-12]
   1a7f8:	cmp	r0, r1
   1a7fc:	bcs	1a814 <__assert_fail@plt+0x9880>
   1a800:	ldr	r0, [fp, #-12]
   1a804:	ldr	r1, [fp, #-16]
   1a808:	mul	r0, r0, r1
   1a80c:	str	r0, [fp, #-20]	; 0xffffffec
   1a810:	b	1b1d8 <__assert_fail@plt+0xa244>
   1a814:	ldr	r0, [fp, #-12]
   1a818:	ldr	r1, [fp, #-16]
   1a81c:	mul	r0, r0, r1
   1a820:	str	r0, [fp, #-20]	; 0xffffffec
   1a824:	b	1b1f0 <__assert_fail@plt+0xa25c>
   1a828:	ldr	r0, [fp, #-16]
   1a82c:	cmp	r0, #0
   1a830:	bcs	1a93c <__assert_fail@plt+0x99a8>
   1a834:	ldr	r0, [fp, #-12]
   1a838:	cmp	r0, #0
   1a83c:	bcs	1a8c4 <__assert_fail@plt+0x9930>
   1a840:	b	1a860 <__assert_fail@plt+0x98cc>
   1a844:	ldr	r0, [fp, #-12]
   1a848:	ldr	r1, [fp, #-16]
   1a84c:	mvn	r2, #0
   1a850:	udiv	r1, r2, r1
   1a854:	cmp	r0, r1
   1a858:	bcc	1a9d8 <__assert_fail@plt+0x9a44>
   1a85c:	b	1a9ec <__assert_fail@plt+0x9a58>
   1a860:	b	1a874 <__assert_fail@plt+0x98e0>
   1a864:	ldr	r0, [fp, #-16]
   1a868:	cmp	r0, #1
   1a86c:	bcc	1a884 <__assert_fail@plt+0x98f0>
   1a870:	b	1a890 <__assert_fail@plt+0x98fc>
   1a874:	ldr	r0, [fp, #-16]
   1a878:	movw	r1, #0
   1a87c:	cmp	r1, r0
   1a880:	bcs	1a890 <__assert_fail@plt+0x98fc>
   1a884:	movw	r0, #1
   1a888:	str	r0, [fp, #-44]	; 0xffffffd4
   1a88c:	b	1a8a8 <__assert_fail@plt+0x9914>
   1a890:	ldr	r0, [fp, #-16]
   1a894:	movw	r1, #0
   1a898:	sub	r0, r1, r0
   1a89c:	mvn	r1, #0
   1a8a0:	udiv	r0, r1, r0
   1a8a4:	str	r0, [fp, #-44]	; 0xffffffd4
   1a8a8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a8ac:	ldr	r1, [fp, #-12]
   1a8b0:	mvn	r2, #0
   1a8b4:	sub	r1, r2, r1
   1a8b8:	cmp	r0, r1
   1a8bc:	bls	1a9d8 <__assert_fail@plt+0x9a44>
   1a8c0:	b	1a9ec <__assert_fail@plt+0x9a58>
   1a8c4:	b	1a8cc <__assert_fail@plt+0x9938>
   1a8c8:	b	1a8d0 <__assert_fail@plt+0x993c>
   1a8cc:	b	1a920 <__assert_fail@plt+0x998c>
   1a8d0:	ldr	r0, [fp, #-16]
   1a8d4:	cmn	r0, #1
   1a8d8:	bne	1a920 <__assert_fail@plt+0x998c>
   1a8dc:	b	1a8f8 <__assert_fail@plt+0x9964>
   1a8e0:	ldr	r0, [fp, #-12]
   1a8e4:	add	r0, r0, #0
   1a8e8:	movw	r1, #0
   1a8ec:	cmp	r1, r0
   1a8f0:	bcc	1a9d8 <__assert_fail@plt+0x9a44>
   1a8f4:	b	1a9ec <__assert_fail@plt+0x9a58>
   1a8f8:	ldr	r0, [fp, #-12]
   1a8fc:	movw	r1, #0
   1a900:	cmp	r1, r0
   1a904:	bcs	1a9ec <__assert_fail@plt+0x9a58>
   1a908:	ldr	r0, [fp, #-12]
   1a90c:	sub	r0, r0, #1
   1a910:	mvn	r1, #0
   1a914:	cmp	r1, r0
   1a918:	bcc	1a9d8 <__assert_fail@plt+0x9a44>
   1a91c:	b	1a9ec <__assert_fail@plt+0x9a58>
   1a920:	ldr	r0, [fp, #-16]
   1a924:	movw	r1, #0
   1a928:	udiv	r0, r1, r0
   1a92c:	ldr	r1, [fp, #-12]
   1a930:	cmp	r0, r1
   1a934:	bcc	1a9d8 <__assert_fail@plt+0x9a44>
   1a938:	b	1a9ec <__assert_fail@plt+0x9a58>
   1a93c:	ldr	r0, [fp, #-16]
   1a940:	cmp	r0, #0
   1a944:	bne	1a94c <__assert_fail@plt+0x99b8>
   1a948:	b	1a9ec <__assert_fail@plt+0x9a58>
   1a94c:	ldr	r0, [fp, #-12]
   1a950:	cmp	r0, #0
   1a954:	bcs	1a9c0 <__assert_fail@plt+0x9a2c>
   1a958:	b	1a960 <__assert_fail@plt+0x99cc>
   1a95c:	b	1a964 <__assert_fail@plt+0x99d0>
   1a960:	b	1a9a4 <__assert_fail@plt+0x9a10>
   1a964:	ldr	r0, [fp, #-12]
   1a968:	cmn	r0, #1
   1a96c:	bne	1a9a4 <__assert_fail@plt+0x9a10>
   1a970:	b	1a98c <__assert_fail@plt+0x99f8>
   1a974:	ldr	r0, [fp, #-16]
   1a978:	add	r0, r0, #0
   1a97c:	movw	r1, #0
   1a980:	cmp	r1, r0
   1a984:	bcc	1a9d8 <__assert_fail@plt+0x9a44>
   1a988:	b	1a9ec <__assert_fail@plt+0x9a58>
   1a98c:	ldr	r0, [fp, #-16]
   1a990:	sub	r0, r0, #1
   1a994:	mvn	r1, #0
   1a998:	cmp	r1, r0
   1a99c:	bcc	1a9d8 <__assert_fail@plt+0x9a44>
   1a9a0:	b	1a9ec <__assert_fail@plt+0x9a58>
   1a9a4:	ldr	r0, [fp, #-12]
   1a9a8:	movw	r1, #0
   1a9ac:	udiv	r0, r1, r0
   1a9b0:	ldr	r1, [fp, #-16]
   1a9b4:	cmp	r0, r1
   1a9b8:	bcc	1a9d8 <__assert_fail@plt+0x9a44>
   1a9bc:	b	1a9ec <__assert_fail@plt+0x9a58>
   1a9c0:	ldr	r0, [fp, #-16]
   1a9c4:	mvn	r1, #0
   1a9c8:	udiv	r0, r1, r0
   1a9cc:	ldr	r1, [fp, #-12]
   1a9d0:	cmp	r0, r1
   1a9d4:	bcs	1a9ec <__assert_fail@plt+0x9a58>
   1a9d8:	ldr	r0, [fp, #-12]
   1a9dc:	ldr	r1, [fp, #-16]
   1a9e0:	mul	r0, r0, r1
   1a9e4:	str	r0, [fp, #-20]	; 0xffffffec
   1a9e8:	b	1b1d8 <__assert_fail@plt+0xa244>
   1a9ec:	ldr	r0, [fp, #-12]
   1a9f0:	ldr	r1, [fp, #-16]
   1a9f4:	mul	r0, r0, r1
   1a9f8:	str	r0, [fp, #-20]	; 0xffffffec
   1a9fc:	b	1b1f0 <__assert_fail@plt+0xa25c>
   1aa00:	b	1aa04 <__assert_fail@plt+0x9a70>
   1aa04:	b	1abc8 <__assert_fail@plt+0x9c34>
   1aa08:	ldr	r0, [fp, #-16]
   1aa0c:	cmp	r0, #0
   1aa10:	bcs	1ab10 <__assert_fail@plt+0x9b7c>
   1aa14:	ldr	r0, [fp, #-12]
   1aa18:	cmp	r0, #0
   1aa1c:	bcs	1aaa4 <__assert_fail@plt+0x9b10>
   1aa20:	b	1aa40 <__assert_fail@plt+0x9aac>
   1aa24:	ldr	r0, [pc, #2016]	; 1b20c <__assert_fail@plt+0xa278>
   1aa28:	ldr	r1, [fp, #-12]
   1aa2c:	ldr	r2, [fp, #-16]
   1aa30:	udiv	r0, r0, r2
   1aa34:	cmp	r1, r0
   1aa38:	bcc	1aba0 <__assert_fail@plt+0x9c0c>
   1aa3c:	b	1abb4 <__assert_fail@plt+0x9c20>
   1aa40:	b	1aa54 <__assert_fail@plt+0x9ac0>
   1aa44:	ldr	r0, [fp, #-16]
   1aa48:	cmp	r0, #1
   1aa4c:	bcc	1aa64 <__assert_fail@plt+0x9ad0>
   1aa50:	b	1aa70 <__assert_fail@plt+0x9adc>
   1aa54:	ldr	r0, [fp, #-16]
   1aa58:	movw	r1, #0
   1aa5c:	cmp	r1, r0
   1aa60:	bcs	1aa70 <__assert_fail@plt+0x9adc>
   1aa64:	movw	r0, #0
   1aa68:	str	r0, [sp, #48]	; 0x30
   1aa6c:	b	1aa88 <__assert_fail@plt+0x9af4>
   1aa70:	ldr	r0, [pc, #1940]	; 1b20c <__assert_fail@plt+0xa278>
   1aa74:	ldr	r1, [fp, #-16]
   1aa78:	movw	r2, #0
   1aa7c:	sub	r1, r2, r1
   1aa80:	udiv	r0, r0, r1
   1aa84:	str	r0, [sp, #48]	; 0x30
   1aa88:	ldr	r0, [sp, #48]	; 0x30
   1aa8c:	ldr	r1, [fp, #-12]
   1aa90:	mvn	r2, #0
   1aa94:	sub	r1, r2, r1
   1aa98:	cmp	r0, r1
   1aa9c:	bls	1aba0 <__assert_fail@plt+0x9c0c>
   1aaa0:	b	1abb4 <__assert_fail@plt+0x9c20>
   1aaa4:	ldr	r0, [fp, #-16]
   1aaa8:	cmn	r0, #1
   1aaac:	bne	1aaf4 <__assert_fail@plt+0x9b60>
   1aab0:	b	1aacc <__assert_fail@plt+0x9b38>
   1aab4:	ldr	r0, [fp, #-12]
   1aab8:	add	r0, r0, #-2147483648	; 0x80000000
   1aabc:	movw	r1, #0
   1aac0:	cmp	r1, r0
   1aac4:	bcc	1aba0 <__assert_fail@plt+0x9c0c>
   1aac8:	b	1abb4 <__assert_fail@plt+0x9c20>
   1aacc:	ldr	r0, [fp, #-12]
   1aad0:	movw	r1, #0
   1aad4:	cmp	r1, r0
   1aad8:	bcs	1abb4 <__assert_fail@plt+0x9c20>
   1aadc:	ldr	r0, [pc, #1832]	; 1b20c <__assert_fail@plt+0xa278>
   1aae0:	ldr	r1, [fp, #-12]
   1aae4:	sub	r1, r1, #1
   1aae8:	cmp	r0, r1
   1aaec:	bcc	1aba0 <__assert_fail@plt+0x9c0c>
   1aaf0:	b	1abb4 <__assert_fail@plt+0x9c20>
   1aaf4:	ldr	r0, [pc, #1812]	; 1b210 <__assert_fail@plt+0xa27c>
   1aaf8:	ldr	r1, [fp, #-16]
   1aafc:	udiv	r0, r0, r1
   1ab00:	ldr	r1, [fp, #-12]
   1ab04:	cmp	r0, r1
   1ab08:	bcc	1aba0 <__assert_fail@plt+0x9c0c>
   1ab0c:	b	1abb4 <__assert_fail@plt+0x9c20>
   1ab10:	ldr	r0, [fp, #-16]
   1ab14:	cmp	r0, #0
   1ab18:	bne	1ab20 <__assert_fail@plt+0x9b8c>
   1ab1c:	b	1abb4 <__assert_fail@plt+0x9c20>
   1ab20:	ldr	r0, [fp, #-12]
   1ab24:	cmp	r0, #0
   1ab28:	bcs	1ab88 <__assert_fail@plt+0x9bf4>
   1ab2c:	ldr	r0, [fp, #-12]
   1ab30:	cmn	r0, #1
   1ab34:	bne	1ab6c <__assert_fail@plt+0x9bd8>
   1ab38:	b	1ab54 <__assert_fail@plt+0x9bc0>
   1ab3c:	ldr	r0, [fp, #-16]
   1ab40:	add	r0, r0, #-2147483648	; 0x80000000
   1ab44:	movw	r1, #0
   1ab48:	cmp	r1, r0
   1ab4c:	bcc	1aba0 <__assert_fail@plt+0x9c0c>
   1ab50:	b	1abb4 <__assert_fail@plt+0x9c20>
   1ab54:	ldr	r0, [pc, #1712]	; 1b20c <__assert_fail@plt+0xa278>
   1ab58:	ldr	r1, [fp, #-16]
   1ab5c:	sub	r1, r1, #1
   1ab60:	cmp	r0, r1
   1ab64:	bcc	1aba0 <__assert_fail@plt+0x9c0c>
   1ab68:	b	1abb4 <__assert_fail@plt+0x9c20>
   1ab6c:	ldr	r0, [pc, #1692]	; 1b210 <__assert_fail@plt+0xa27c>
   1ab70:	ldr	r1, [fp, #-12]
   1ab74:	udiv	r0, r0, r1
   1ab78:	ldr	r1, [fp, #-16]
   1ab7c:	cmp	r0, r1
   1ab80:	bcc	1aba0 <__assert_fail@plt+0x9c0c>
   1ab84:	b	1abb4 <__assert_fail@plt+0x9c20>
   1ab88:	ldr	r0, [pc, #1660]	; 1b20c <__assert_fail@plt+0xa278>
   1ab8c:	ldr	r1, [fp, #-16]
   1ab90:	udiv	r0, r0, r1
   1ab94:	ldr	r1, [fp, #-12]
   1ab98:	cmp	r0, r1
   1ab9c:	bcs	1abb4 <__assert_fail@plt+0x9c20>
   1aba0:	ldr	r0, [fp, #-12]
   1aba4:	ldr	r1, [fp, #-16]
   1aba8:	mul	r0, r0, r1
   1abac:	str	r0, [fp, #-20]	; 0xffffffec
   1abb0:	b	1b1d8 <__assert_fail@plt+0xa244>
   1abb4:	ldr	r0, [fp, #-12]
   1abb8:	ldr	r1, [fp, #-16]
   1abbc:	mul	r0, r0, r1
   1abc0:	str	r0, [fp, #-20]	; 0xffffffec
   1abc4:	b	1b1f0 <__assert_fail@plt+0xa25c>
   1abc8:	ldr	r0, [fp, #-16]
   1abcc:	cmp	r0, #0
   1abd0:	bcs	1acdc <__assert_fail@plt+0x9d48>
   1abd4:	ldr	r0, [fp, #-12]
   1abd8:	cmp	r0, #0
   1abdc:	bcs	1ac64 <__assert_fail@plt+0x9cd0>
   1abe0:	b	1ac00 <__assert_fail@plt+0x9c6c>
   1abe4:	ldr	r0, [fp, #-12]
   1abe8:	ldr	r1, [fp, #-16]
   1abec:	mvn	r2, #0
   1abf0:	udiv	r1, r2, r1
   1abf4:	cmp	r0, r1
   1abf8:	bcc	1ad78 <__assert_fail@plt+0x9de4>
   1abfc:	b	1ad8c <__assert_fail@plt+0x9df8>
   1ac00:	b	1ac14 <__assert_fail@plt+0x9c80>
   1ac04:	ldr	r0, [fp, #-16]
   1ac08:	cmp	r0, #1
   1ac0c:	bcc	1ac24 <__assert_fail@plt+0x9c90>
   1ac10:	b	1ac30 <__assert_fail@plt+0x9c9c>
   1ac14:	ldr	r0, [fp, #-16]
   1ac18:	movw	r1, #0
   1ac1c:	cmp	r1, r0
   1ac20:	bcs	1ac30 <__assert_fail@plt+0x9c9c>
   1ac24:	movw	r0, #1
   1ac28:	str	r0, [sp, #44]	; 0x2c
   1ac2c:	b	1ac48 <__assert_fail@plt+0x9cb4>
   1ac30:	ldr	r0, [fp, #-16]
   1ac34:	movw	r1, #0
   1ac38:	sub	r0, r1, r0
   1ac3c:	mvn	r1, #0
   1ac40:	udiv	r0, r1, r0
   1ac44:	str	r0, [sp, #44]	; 0x2c
   1ac48:	ldr	r0, [sp, #44]	; 0x2c
   1ac4c:	ldr	r1, [fp, #-12]
   1ac50:	mvn	r2, #0
   1ac54:	sub	r1, r2, r1
   1ac58:	cmp	r0, r1
   1ac5c:	bls	1ad78 <__assert_fail@plt+0x9de4>
   1ac60:	b	1ad8c <__assert_fail@plt+0x9df8>
   1ac64:	b	1ac6c <__assert_fail@plt+0x9cd8>
   1ac68:	b	1ac70 <__assert_fail@plt+0x9cdc>
   1ac6c:	b	1acc0 <__assert_fail@plt+0x9d2c>
   1ac70:	ldr	r0, [fp, #-16]
   1ac74:	cmn	r0, #1
   1ac78:	bne	1acc0 <__assert_fail@plt+0x9d2c>
   1ac7c:	b	1ac98 <__assert_fail@plt+0x9d04>
   1ac80:	ldr	r0, [fp, #-12]
   1ac84:	add	r0, r0, #0
   1ac88:	movw	r1, #0
   1ac8c:	cmp	r1, r0
   1ac90:	bcc	1ad78 <__assert_fail@plt+0x9de4>
   1ac94:	b	1ad8c <__assert_fail@plt+0x9df8>
   1ac98:	ldr	r0, [fp, #-12]
   1ac9c:	movw	r1, #0
   1aca0:	cmp	r1, r0
   1aca4:	bcs	1ad8c <__assert_fail@plt+0x9df8>
   1aca8:	ldr	r0, [fp, #-12]
   1acac:	sub	r0, r0, #1
   1acb0:	mvn	r1, #0
   1acb4:	cmp	r1, r0
   1acb8:	bcc	1ad78 <__assert_fail@plt+0x9de4>
   1acbc:	b	1ad8c <__assert_fail@plt+0x9df8>
   1acc0:	ldr	r0, [fp, #-16]
   1acc4:	movw	r1, #0
   1acc8:	udiv	r0, r1, r0
   1accc:	ldr	r1, [fp, #-12]
   1acd0:	cmp	r0, r1
   1acd4:	bcc	1ad78 <__assert_fail@plt+0x9de4>
   1acd8:	b	1ad8c <__assert_fail@plt+0x9df8>
   1acdc:	ldr	r0, [fp, #-16]
   1ace0:	cmp	r0, #0
   1ace4:	bne	1acec <__assert_fail@plt+0x9d58>
   1ace8:	b	1ad8c <__assert_fail@plt+0x9df8>
   1acec:	ldr	r0, [fp, #-12]
   1acf0:	cmp	r0, #0
   1acf4:	bcs	1ad60 <__assert_fail@plt+0x9dcc>
   1acf8:	b	1ad00 <__assert_fail@plt+0x9d6c>
   1acfc:	b	1ad04 <__assert_fail@plt+0x9d70>
   1ad00:	b	1ad44 <__assert_fail@plt+0x9db0>
   1ad04:	ldr	r0, [fp, #-12]
   1ad08:	cmn	r0, #1
   1ad0c:	bne	1ad44 <__assert_fail@plt+0x9db0>
   1ad10:	b	1ad2c <__assert_fail@plt+0x9d98>
   1ad14:	ldr	r0, [fp, #-16]
   1ad18:	add	r0, r0, #0
   1ad1c:	movw	r1, #0
   1ad20:	cmp	r1, r0
   1ad24:	bcc	1ad78 <__assert_fail@plt+0x9de4>
   1ad28:	b	1ad8c <__assert_fail@plt+0x9df8>
   1ad2c:	ldr	r0, [fp, #-16]
   1ad30:	sub	r0, r0, #1
   1ad34:	mvn	r1, #0
   1ad38:	cmp	r1, r0
   1ad3c:	bcc	1ad78 <__assert_fail@plt+0x9de4>
   1ad40:	b	1ad8c <__assert_fail@plt+0x9df8>
   1ad44:	ldr	r0, [fp, #-12]
   1ad48:	movw	r1, #0
   1ad4c:	udiv	r0, r1, r0
   1ad50:	ldr	r1, [fp, #-16]
   1ad54:	cmp	r0, r1
   1ad58:	bcc	1ad78 <__assert_fail@plt+0x9de4>
   1ad5c:	b	1ad8c <__assert_fail@plt+0x9df8>
   1ad60:	ldr	r0, [fp, #-16]
   1ad64:	mvn	r1, #0
   1ad68:	udiv	r0, r1, r0
   1ad6c:	ldr	r1, [fp, #-12]
   1ad70:	cmp	r0, r1
   1ad74:	bcs	1ad8c <__assert_fail@plt+0x9df8>
   1ad78:	ldr	r0, [fp, #-12]
   1ad7c:	ldr	r1, [fp, #-16]
   1ad80:	mul	r0, r0, r1
   1ad84:	str	r0, [fp, #-20]	; 0xffffffec
   1ad88:	b	1b1d8 <__assert_fail@plt+0xa244>
   1ad8c:	ldr	r0, [fp, #-12]
   1ad90:	ldr	r1, [fp, #-16]
   1ad94:	mul	r0, r0, r1
   1ad98:	str	r0, [fp, #-20]	; 0xffffffec
   1ad9c:	b	1b1f0 <__assert_fail@plt+0xa25c>
   1ada0:	b	1afbc <__assert_fail@plt+0xa028>
   1ada4:	ldr	r0, [fp, #-16]
   1ada8:	cmp	r0, #0
   1adac:	bcs	1aeec <__assert_fail@plt+0x9f58>
   1adb0:	ldr	r0, [fp, #-12]
   1adb4:	cmp	r0, #0
   1adb8:	bcs	1ae78 <__assert_fail@plt+0x9ee4>
   1adbc:	b	1adc0 <__assert_fail@plt+0x9e2c>
   1adc0:	ldr	r0, [fp, #-12]
   1adc4:	ldr	r2, [fp, #-16]
   1adc8:	mvn	r1, #0
   1adcc:	mvn	r3, #-2147483648	; 0x80000000
   1add0:	mov	ip, #0
   1add4:	str	r0, [sp, #40]	; 0x28
   1add8:	mov	r0, r1
   1addc:	mov	r1, r3
   1ade0:	mov	r3, ip
   1ade4:	bl	1bb24 <__assert_fail@plt+0xab90>
   1ade8:	ldr	r2, [sp, #40]	; 0x28
   1adec:	subs	r0, r2, r0
   1adf0:	rscs	r1, r1, #0
   1adf4:	blt	1af94 <__assert_fail@plt+0xa000>
   1adf8:	b	1afa8 <__assert_fail@plt+0xa014>
   1adfc:	b	1ae10 <__assert_fail@plt+0x9e7c>
   1ae00:	ldr	r0, [fp, #-16]
   1ae04:	cmp	r0, #1
   1ae08:	bcc	1ae20 <__assert_fail@plt+0x9e8c>
   1ae0c:	b	1ae34 <__assert_fail@plt+0x9ea0>
   1ae10:	ldr	r0, [fp, #-16]
   1ae14:	movw	r1, #0
   1ae18:	cmp	r1, r0
   1ae1c:	bcs	1ae34 <__assert_fail@plt+0x9ea0>
   1ae20:	mov	r0, #0
   1ae24:	mvn	r1, #0
   1ae28:	str	r1, [sp, #36]	; 0x24
   1ae2c:	str	r0, [sp, #32]
   1ae30:	b	1ae58 <__assert_fail@plt+0x9ec4>
   1ae34:	ldr	r0, [fp, #-16]
   1ae38:	rsb	r2, r0, #0
   1ae3c:	mvn	r0, #0
   1ae40:	mvn	r1, #-2147483648	; 0x80000000
   1ae44:	mov	r3, #0
   1ae48:	bl	1bb24 <__assert_fail@plt+0xab90>
   1ae4c:	str	r0, [sp, #36]	; 0x24
   1ae50:	str	r1, [sp, #32]
   1ae54:	b	1ae58 <__assert_fail@plt+0x9ec4>
   1ae58:	ldr	r0, [sp, #32]
   1ae5c:	ldr	r1, [sp, #36]	; 0x24
   1ae60:	ldr	r2, [fp, #-12]
   1ae64:	mvn	r2, r2
   1ae68:	subs	r1, r2, r1
   1ae6c:	rscs	r0, r0, #0
   1ae70:	bge	1af94 <__assert_fail@plt+0xa000>
   1ae74:	b	1afa8 <__assert_fail@plt+0xa014>
   1ae78:	ldr	r0, [fp, #-16]
   1ae7c:	cmn	r0, #1
   1ae80:	bne	1aec0 <__assert_fail@plt+0x9f2c>
   1ae84:	b	1aea0 <__assert_fail@plt+0x9f0c>
   1ae88:	ldr	r0, [fp, #-12]
   1ae8c:	rsbs	r0, r0, #0
   1ae90:	mov	r1, #0
   1ae94:	sbcs	r1, r1, #-2147483648	; 0x80000000
   1ae98:	blt	1af94 <__assert_fail@plt+0xa000>
   1ae9c:	b	1afa8 <__assert_fail@plt+0xa014>
   1aea0:	ldr	r0, [fp, #-12]
   1aea4:	movw	r1, #0
   1aea8:	cmp	r1, r0
   1aeac:	bcs	1afa8 <__assert_fail@plt+0xa014>
   1aeb0:	mov	r0, #0
   1aeb4:	cmp	r0, #0
   1aeb8:	bne	1af94 <__assert_fail@plt+0xa000>
   1aebc:	b	1afa8 <__assert_fail@plt+0xa014>
   1aec0:	ldr	r2, [fp, #-16]
   1aec4:	mov	r1, #-2147483648	; 0x80000000
   1aec8:	mov	r0, #0
   1aecc:	str	r0, [sp, #28]
   1aed0:	ldr	r3, [sp, #28]
   1aed4:	bl	1ba50 <__assert_fail@plt+0xaabc>
   1aed8:	ldr	r2, [fp, #-12]
   1aedc:	subs	r0, r0, r2
   1aee0:	sbcs	r1, r1, #0
   1aee4:	blt	1af94 <__assert_fail@plt+0xa000>
   1aee8:	b	1afa8 <__assert_fail@plt+0xa014>
   1aeec:	ldr	r0, [fp, #-16]
   1aef0:	cmp	r0, #0
   1aef4:	bne	1aefc <__assert_fail@plt+0x9f68>
   1aef8:	b	1afa8 <__assert_fail@plt+0xa014>
   1aefc:	ldr	r0, [fp, #-12]
   1af00:	cmp	r0, #0
   1af04:	bcs	1af6c <__assert_fail@plt+0x9fd8>
   1af08:	ldr	r0, [fp, #-12]
   1af0c:	cmn	r0, #1
   1af10:	bne	1af40 <__assert_fail@plt+0x9fac>
   1af14:	b	1af30 <__assert_fail@plt+0x9f9c>
   1af18:	ldr	r0, [fp, #-16]
   1af1c:	rsbs	r0, r0, #0
   1af20:	mov	r1, #0
   1af24:	sbcs	r1, r1, #-2147483648	; 0x80000000
   1af28:	blt	1af94 <__assert_fail@plt+0xa000>
   1af2c:	b	1afa8 <__assert_fail@plt+0xa014>
   1af30:	mov	r0, #0
   1af34:	cmp	r0, #0
   1af38:	bne	1af94 <__assert_fail@plt+0xa000>
   1af3c:	b	1afa8 <__assert_fail@plt+0xa014>
   1af40:	ldr	r2, [fp, #-12]
   1af44:	mov	r1, #-2147483648	; 0x80000000
   1af48:	mov	r0, #0
   1af4c:	str	r0, [sp, #24]
   1af50:	ldr	r3, [sp, #24]
   1af54:	bl	1ba50 <__assert_fail@plt+0xaabc>
   1af58:	ldr	r2, [fp, #-16]
   1af5c:	subs	r0, r0, r2
   1af60:	sbcs	r1, r1, #0
   1af64:	blt	1af94 <__assert_fail@plt+0xa000>
   1af68:	b	1afa8 <__assert_fail@plt+0xa014>
   1af6c:	ldr	r2, [fp, #-16]
   1af70:	mvn	r0, #0
   1af74:	mvn	r1, #-2147483648	; 0x80000000
   1af78:	mov	r3, #0
   1af7c:	bl	1bb24 <__assert_fail@plt+0xab90>
   1af80:	ldr	r2, [fp, #-12]
   1af84:	subs	r0, r0, r2
   1af88:	sbcs	r1, r1, #0
   1af8c:	bge	1afa8 <__assert_fail@plt+0xa014>
   1af90:	b	1af94 <__assert_fail@plt+0xa000>
   1af94:	ldr	r0, [fp, #-12]
   1af98:	ldr	r1, [fp, #-16]
   1af9c:	mul	r0, r0, r1
   1afa0:	str	r0, [fp, #-20]	; 0xffffffec
   1afa4:	b	1b1d8 <__assert_fail@plt+0xa244>
   1afa8:	ldr	r0, [fp, #-12]
   1afac:	ldr	r1, [fp, #-16]
   1afb0:	mul	r0, r0, r1
   1afb4:	str	r0, [fp, #-20]	; 0xffffffec
   1afb8:	b	1b1f0 <__assert_fail@plt+0xa25c>
   1afbc:	ldr	r0, [fp, #-16]
   1afc0:	cmp	r0, #0
   1afc4:	bcs	1b100 <__assert_fail@plt+0xa16c>
   1afc8:	ldr	r0, [fp, #-12]
   1afcc:	cmp	r0, #0
   1afd0:	bcs	1b088 <__assert_fail@plt+0xa0f4>
   1afd4:	b	1b008 <__assert_fail@plt+0xa074>
   1afd8:	ldr	r0, [fp, #-12]
   1afdc:	ldr	r2, [fp, #-16]
   1afe0:	mvn	r1, #0
   1afe4:	mov	r3, #0
   1afe8:	str	r0, [sp, #20]
   1afec:	mov	r0, r1
   1aff0:	bl	1bb24 <__assert_fail@plt+0xab90>
   1aff4:	ldr	r2, [sp, #20]
   1aff8:	subs	r0, r2, r0
   1affc:	rscs	r1, r1, #0
   1b000:	bcc	1b1b0 <__assert_fail@plt+0xa21c>
   1b004:	b	1b1c4 <__assert_fail@plt+0xa230>
   1b008:	b	1b01c <__assert_fail@plt+0xa088>
   1b00c:	ldr	r0, [fp, #-16]
   1b010:	cmp	r0, #1
   1b014:	bcc	1b02c <__assert_fail@plt+0xa098>
   1b018:	b	1b040 <__assert_fail@plt+0xa0ac>
   1b01c:	ldr	r0, [fp, #-16]
   1b020:	movw	r1, #0
   1b024:	cmp	r1, r0
   1b028:	bcs	1b040 <__assert_fail@plt+0xa0ac>
   1b02c:	mov	r0, #1
   1b030:	mvn	r1, #0
   1b034:	str	r1, [sp, #16]
   1b038:	str	r0, [sp, #12]
   1b03c:	b	1b068 <__assert_fail@plt+0xa0d4>
   1b040:	ldr	r0, [fp, #-16]
   1b044:	rsb	r2, r0, #0
   1b048:	mvn	r0, #0
   1b04c:	mov	r3, #0
   1b050:	str	r0, [sp, #8]
   1b054:	ldr	r1, [sp, #8]
   1b058:	bl	1bb24 <__assert_fail@plt+0xab90>
   1b05c:	str	r0, [sp, #16]
   1b060:	str	r1, [sp, #12]
   1b064:	b	1b068 <__assert_fail@plt+0xa0d4>
   1b068:	ldr	r0, [sp, #12]
   1b06c:	ldr	r1, [sp, #16]
   1b070:	ldr	r2, [fp, #-12]
   1b074:	mvn	r2, r2
   1b078:	subs	r1, r2, r1
   1b07c:	rscs	r0, r0, #0
   1b080:	bcs	1b1b0 <__assert_fail@plt+0xa21c>
   1b084:	b	1b1c4 <__assert_fail@plt+0xa230>
   1b088:	b	1b090 <__assert_fail@plt+0xa0fc>
   1b08c:	b	1b094 <__assert_fail@plt+0xa100>
   1b090:	b	1b0e4 <__assert_fail@plt+0xa150>
   1b094:	ldr	r0, [fp, #-16]
   1b098:	cmn	r0, #1
   1b09c:	bne	1b0e4 <__assert_fail@plt+0xa150>
   1b0a0:	b	1b0bc <__assert_fail@plt+0xa128>
   1b0a4:	ldr	r0, [fp, #-12]
   1b0a8:	add	r0, r0, #0
   1b0ac:	movw	r1, #0
   1b0b0:	cmp	r1, r0
   1b0b4:	bcc	1b1b0 <__assert_fail@plt+0xa21c>
   1b0b8:	b	1b1c4 <__assert_fail@plt+0xa230>
   1b0bc:	ldr	r0, [fp, #-12]
   1b0c0:	movw	r1, #0
   1b0c4:	cmp	r1, r0
   1b0c8:	bcs	1b1c4 <__assert_fail@plt+0xa230>
   1b0cc:	ldr	r0, [fp, #-12]
   1b0d0:	sub	r0, r0, #1
   1b0d4:	mvn	r1, #0
   1b0d8:	cmp	r1, r0
   1b0dc:	bcc	1b1b0 <__assert_fail@plt+0xa21c>
   1b0e0:	b	1b1c4 <__assert_fail@plt+0xa230>
   1b0e4:	ldr	r0, [fp, #-16]
   1b0e8:	movw	r1, #0
   1b0ec:	udiv	r0, r1, r0
   1b0f0:	ldr	r1, [fp, #-12]
   1b0f4:	cmp	r0, r1
   1b0f8:	bcc	1b1b0 <__assert_fail@plt+0xa21c>
   1b0fc:	b	1b1c4 <__assert_fail@plt+0xa230>
   1b100:	ldr	r0, [fp, #-16]
   1b104:	cmp	r0, #0
   1b108:	bne	1b110 <__assert_fail@plt+0xa17c>
   1b10c:	b	1b1c4 <__assert_fail@plt+0xa230>
   1b110:	ldr	r0, [fp, #-12]
   1b114:	cmp	r0, #0
   1b118:	bcs	1b184 <__assert_fail@plt+0xa1f0>
   1b11c:	b	1b124 <__assert_fail@plt+0xa190>
   1b120:	b	1b128 <__assert_fail@plt+0xa194>
   1b124:	b	1b168 <__assert_fail@plt+0xa1d4>
   1b128:	ldr	r0, [fp, #-12]
   1b12c:	cmn	r0, #1
   1b130:	bne	1b168 <__assert_fail@plt+0xa1d4>
   1b134:	b	1b150 <__assert_fail@plt+0xa1bc>
   1b138:	ldr	r0, [fp, #-16]
   1b13c:	add	r0, r0, #0
   1b140:	movw	r1, #0
   1b144:	cmp	r1, r0
   1b148:	bcc	1b1b0 <__assert_fail@plt+0xa21c>
   1b14c:	b	1b1c4 <__assert_fail@plt+0xa230>
   1b150:	ldr	r0, [fp, #-16]
   1b154:	sub	r0, r0, #1
   1b158:	mvn	r1, #0
   1b15c:	cmp	r1, r0
   1b160:	bcc	1b1b0 <__assert_fail@plt+0xa21c>
   1b164:	b	1b1c4 <__assert_fail@plt+0xa230>
   1b168:	ldr	r0, [fp, #-12]
   1b16c:	movw	r1, #0
   1b170:	udiv	r0, r1, r0
   1b174:	ldr	r1, [fp, #-16]
   1b178:	cmp	r0, r1
   1b17c:	bcc	1b1b0 <__assert_fail@plt+0xa21c>
   1b180:	b	1b1c4 <__assert_fail@plt+0xa230>
   1b184:	ldr	r2, [fp, #-16]
   1b188:	mvn	r0, #0
   1b18c:	mov	r3, #0
   1b190:	str	r0, [sp, #4]
   1b194:	ldr	r1, [sp, #4]
   1b198:	bl	1bb24 <__assert_fail@plt+0xab90>
   1b19c:	ldr	r2, [fp, #-12]
   1b1a0:	subs	r0, r0, r2
   1b1a4:	sbcs	r1, r1, #0
   1b1a8:	bcs	1b1c4 <__assert_fail@plt+0xa230>
   1b1ac:	b	1b1b0 <__assert_fail@plt+0xa21c>
   1b1b0:	ldr	r0, [fp, #-12]
   1b1b4:	ldr	r1, [fp, #-16]
   1b1b8:	mul	r0, r0, r1
   1b1bc:	str	r0, [fp, #-20]	; 0xffffffec
   1b1c0:	b	1b1d8 <__assert_fail@plt+0xa244>
   1b1c4:	ldr	r0, [fp, #-12]
   1b1c8:	ldr	r1, [fp, #-16]
   1b1cc:	mul	r0, r0, r1
   1b1d0:	str	r0, [fp, #-20]	; 0xffffffec
   1b1d4:	b	1b1f0 <__assert_fail@plt+0xa25c>
   1b1d8:	bl	10ef8 <__errno_location@plt>
   1b1dc:	movw	r1, #12
   1b1e0:	str	r1, [r0]
   1b1e4:	movw	r0, #0
   1b1e8:	str	r0, [fp, #-4]
   1b1ec:	b	1b200 <__assert_fail@plt+0xa26c>
   1b1f0:	ldr	r0, [fp, #-8]
   1b1f4:	ldr	r1, [fp, #-20]	; 0xffffffec
   1b1f8:	bl	196ec <__assert_fail@plt+0x8758>
   1b1fc:	str	r0, [fp, #-4]
   1b200:	ldr	r0, [fp, #-4]
   1b204:	mov	sp, fp
   1b208:	pop	{fp, pc}
   1b20c:	svcvc	0x00ffffff
   1b210:	andhi	r0, r0, r0
   1b214:			; <UNDEFINED> instruction: 0xffff8000
   1b218:	sub	sp, sp, #12
   1b21c:	str	r0, [sp, #4]
   1b220:	ldr	r0, [sp, #4]
   1b224:	sub	r1, r0, #48	; 0x30
   1b228:	cmp	r1, #10
   1b22c:	str	r0, [sp]
   1b230:	bcc	1b260 <__assert_fail@plt+0xa2cc>
   1b234:	b	1b238 <__assert_fail@plt+0xa2a4>
   1b238:	ldr	r0, [sp]
   1b23c:	sub	r1, r0, #65	; 0x41
   1b240:	cmp	r1, #26
   1b244:	bcc	1b260 <__assert_fail@plt+0xa2cc>
   1b248:	b	1b24c <__assert_fail@plt+0xa2b8>
   1b24c:	ldr	r0, [sp]
   1b250:	sub	r1, r0, #97	; 0x61
   1b254:	cmp	r1, #25
   1b258:	bhi	1b270 <__assert_fail@plt+0xa2dc>
   1b25c:	b	1b260 <__assert_fail@plt+0xa2cc>
   1b260:	movw	r0, #1
   1b264:	and	r0, r0, #1
   1b268:	strb	r0, [sp, #11]
   1b26c:	b	1b27c <__assert_fail@plt+0xa2e8>
   1b270:	movw	r0, #0
   1b274:	and	r0, r0, #1
   1b278:	strb	r0, [sp, #11]
   1b27c:	ldrb	r0, [sp, #11]
   1b280:	and	r0, r0, #1
   1b284:	add	sp, sp, #12
   1b288:	bx	lr
   1b28c:	sub	sp, sp, #12
   1b290:	str	r0, [sp, #4]
   1b294:	ldr	r0, [sp, #4]
   1b298:	sub	r1, r0, #65	; 0x41
   1b29c:	cmp	r1, #26
   1b2a0:	str	r0, [sp]
   1b2a4:	bcc	1b2c0 <__assert_fail@plt+0xa32c>
   1b2a8:	b	1b2ac <__assert_fail@plt+0xa318>
   1b2ac:	ldr	r0, [sp]
   1b2b0:	sub	r1, r0, #97	; 0x61
   1b2b4:	cmp	r1, #25
   1b2b8:	bhi	1b2d0 <__assert_fail@plt+0xa33c>
   1b2bc:	b	1b2c0 <__assert_fail@plt+0xa32c>
   1b2c0:	movw	r0, #1
   1b2c4:	and	r0, r0, #1
   1b2c8:	strb	r0, [sp, #11]
   1b2cc:	b	1b2dc <__assert_fail@plt+0xa348>
   1b2d0:	movw	r0, #0
   1b2d4:	and	r0, r0, #1
   1b2d8:	strb	r0, [sp, #11]
   1b2dc:	ldrb	r0, [sp, #11]
   1b2e0:	and	r0, r0, #1
   1b2e4:	add	sp, sp, #12
   1b2e8:	bx	lr
   1b2ec:	sub	sp, sp, #8
   1b2f0:	str	r0, [sp]
   1b2f4:	ldr	r0, [sp]
   1b2f8:	cmp	r0, #127	; 0x7f
   1b2fc:	bhi	1b314 <__assert_fail@plt+0xa380>
   1b300:	b	1b304 <__assert_fail@plt+0xa370>
   1b304:	movw	r0, #1
   1b308:	and	r0, r0, #1
   1b30c:	strb	r0, [sp, #7]
   1b310:	b	1b320 <__assert_fail@plt+0xa38c>
   1b314:	movw	r0, #0
   1b318:	and	r0, r0, #1
   1b31c:	strb	r0, [sp, #7]
   1b320:	ldrb	r0, [sp, #7]
   1b324:	and	r0, r0, #1
   1b328:	add	sp, sp, #8
   1b32c:	bx	lr
   1b330:	sub	sp, sp, #8
   1b334:	str	r0, [sp, #4]
   1b338:	ldr	r0, [sp, #4]
   1b33c:	cmp	r0, #32
   1b340:	movw	r0, #1
   1b344:	str	r0, [sp]
   1b348:	beq	1b360 <__assert_fail@plt+0xa3cc>
   1b34c:	ldr	r0, [sp, #4]
   1b350:	cmp	r0, #9
   1b354:	movw	r0, #0
   1b358:	moveq	r0, #1
   1b35c:	str	r0, [sp]
   1b360:	ldr	r0, [sp]
   1b364:	and	r0, r0, #1
   1b368:	add	sp, sp, #8
   1b36c:	bx	lr
   1b370:	sub	sp, sp, #12
   1b374:	str	r0, [sp, #4]
   1b378:	ldr	r0, [sp, #4]
   1b37c:	cmp	r0, #32
   1b380:	str	r0, [sp]
   1b384:	bcc	1b39c <__assert_fail@plt+0xa408>
   1b388:	b	1b38c <__assert_fail@plt+0xa3f8>
   1b38c:	ldr	r0, [sp]
   1b390:	cmp	r0, #127	; 0x7f
   1b394:	bne	1b3ac <__assert_fail@plt+0xa418>
   1b398:	b	1b39c <__assert_fail@plt+0xa408>
   1b39c:	movw	r0, #1
   1b3a0:	and	r0, r0, #1
   1b3a4:	strb	r0, [sp, #11]
   1b3a8:	b	1b3b8 <__assert_fail@plt+0xa424>
   1b3ac:	movw	r0, #0
   1b3b0:	and	r0, r0, #1
   1b3b4:	strb	r0, [sp, #11]
   1b3b8:	ldrb	r0, [sp, #11]
   1b3bc:	and	r0, r0, #1
   1b3c0:	add	sp, sp, #12
   1b3c4:	bx	lr
   1b3c8:	sub	sp, sp, #8
   1b3cc:	str	r0, [sp]
   1b3d0:	ldr	r0, [sp]
   1b3d4:	sub	r0, r0, #48	; 0x30
   1b3d8:	cmp	r0, #9
   1b3dc:	bhi	1b3f4 <__assert_fail@plt+0xa460>
   1b3e0:	b	1b3e4 <__assert_fail@plt+0xa450>
   1b3e4:	movw	r0, #1
   1b3e8:	and	r0, r0, #1
   1b3ec:	strb	r0, [sp, #7]
   1b3f0:	b	1b400 <__assert_fail@plt+0xa46c>
   1b3f4:	movw	r0, #0
   1b3f8:	and	r0, r0, #1
   1b3fc:	strb	r0, [sp, #7]
   1b400:	ldrb	r0, [sp, #7]
   1b404:	and	r0, r0, #1
   1b408:	add	sp, sp, #8
   1b40c:	bx	lr
   1b410:	sub	sp, sp, #8
   1b414:	str	r0, [sp]
   1b418:	ldr	r0, [sp]
   1b41c:	sub	r0, r0, #33	; 0x21
   1b420:	cmp	r0, #93	; 0x5d
   1b424:	bhi	1b43c <__assert_fail@plt+0xa4a8>
   1b428:	b	1b42c <__assert_fail@plt+0xa498>
   1b42c:	movw	r0, #1
   1b430:	and	r0, r0, #1
   1b434:	strb	r0, [sp, #7]
   1b438:	b	1b448 <__assert_fail@plt+0xa4b4>
   1b43c:	movw	r0, #0
   1b440:	and	r0, r0, #1
   1b444:	strb	r0, [sp, #7]
   1b448:	ldrb	r0, [sp, #7]
   1b44c:	and	r0, r0, #1
   1b450:	add	sp, sp, #8
   1b454:	bx	lr
   1b458:	sub	sp, sp, #8
   1b45c:	str	r0, [sp]
   1b460:	ldr	r0, [sp]
   1b464:	sub	r0, r0, #97	; 0x61
   1b468:	cmp	r0, #25
   1b46c:	bhi	1b484 <__assert_fail@plt+0xa4f0>
   1b470:	b	1b474 <__assert_fail@plt+0xa4e0>
   1b474:	movw	r0, #1
   1b478:	and	r0, r0, #1
   1b47c:	strb	r0, [sp, #7]
   1b480:	b	1b490 <__assert_fail@plt+0xa4fc>
   1b484:	movw	r0, #0
   1b488:	and	r0, r0, #1
   1b48c:	strb	r0, [sp, #7]
   1b490:	ldrb	r0, [sp, #7]
   1b494:	and	r0, r0, #1
   1b498:	add	sp, sp, #8
   1b49c:	bx	lr
   1b4a0:	sub	sp, sp, #8
   1b4a4:	str	r0, [sp]
   1b4a8:	ldr	r0, [sp]
   1b4ac:	sub	r0, r0, #32
   1b4b0:	cmp	r0, #94	; 0x5e
   1b4b4:	bhi	1b4cc <__assert_fail@plt+0xa538>
   1b4b8:	b	1b4bc <__assert_fail@plt+0xa528>
   1b4bc:	movw	r0, #1
   1b4c0:	and	r0, r0, #1
   1b4c4:	strb	r0, [sp, #7]
   1b4c8:	b	1b4d8 <__assert_fail@plt+0xa544>
   1b4cc:	movw	r0, #0
   1b4d0:	and	r0, r0, #1
   1b4d4:	strb	r0, [sp, #7]
   1b4d8:	ldrb	r0, [sp, #7]
   1b4dc:	and	r0, r0, #1
   1b4e0:	add	sp, sp, #8
   1b4e4:	bx	lr
   1b4e8:	sub	sp, sp, #12
   1b4ec:	str	r0, [sp, #4]
   1b4f0:	ldr	r0, [sp, #4]
   1b4f4:	sub	r0, r0, #33	; 0x21
   1b4f8:	cmp	r0, #93	; 0x5d
   1b4fc:	str	r0, [sp]
   1b500:	bhi	1b69c <__assert_fail@plt+0xa708>
   1b504:	add	r0, pc, #8
   1b508:	ldr	r1, [sp]
   1b50c:	ldr	r0, [r0, r1, lsl #2]
   1b510:	mov	pc, r0
   1b514:	andeq	fp, r1, ip, lsl #13
   1b518:	andeq	fp, r1, ip, lsl #13
   1b51c:	andeq	fp, r1, ip, lsl #13
   1b520:	andeq	fp, r1, ip, lsl #13
   1b524:	andeq	fp, r1, ip, lsl #13
   1b528:	andeq	fp, r1, ip, lsl #13
   1b52c:	andeq	fp, r1, ip, lsl #13
   1b530:	andeq	fp, r1, ip, lsl #13
   1b534:	andeq	fp, r1, ip, lsl #13
   1b538:	andeq	fp, r1, ip, lsl #13
   1b53c:	andeq	fp, r1, ip, lsl #13
   1b540:	andeq	fp, r1, ip, lsl #13
   1b544:	andeq	fp, r1, ip, lsl #13
   1b548:	andeq	fp, r1, ip, lsl #13
   1b54c:	andeq	fp, r1, ip, lsl #13
   1b550:	muleq	r1, ip, r6
   1b554:	muleq	r1, ip, r6
   1b558:	muleq	r1, ip, r6
   1b55c:	muleq	r1, ip, r6
   1b560:	muleq	r1, ip, r6
   1b564:	muleq	r1, ip, r6
   1b568:	muleq	r1, ip, r6
   1b56c:	muleq	r1, ip, r6
   1b570:	muleq	r1, ip, r6
   1b574:	muleq	r1, ip, r6
   1b578:	andeq	fp, r1, ip, lsl #13
   1b57c:	andeq	fp, r1, ip, lsl #13
   1b580:	andeq	fp, r1, ip, lsl #13
   1b584:	andeq	fp, r1, ip, lsl #13
   1b588:	andeq	fp, r1, ip, lsl #13
   1b58c:	andeq	fp, r1, ip, lsl #13
   1b590:	andeq	fp, r1, ip, lsl #13
   1b594:	muleq	r1, ip, r6
   1b598:	muleq	r1, ip, r6
   1b59c:	muleq	r1, ip, r6
   1b5a0:	muleq	r1, ip, r6
   1b5a4:	muleq	r1, ip, r6
   1b5a8:	muleq	r1, ip, r6
   1b5ac:	muleq	r1, ip, r6
   1b5b0:	muleq	r1, ip, r6
   1b5b4:	muleq	r1, ip, r6
   1b5b8:	muleq	r1, ip, r6
   1b5bc:	muleq	r1, ip, r6
   1b5c0:	muleq	r1, ip, r6
   1b5c4:	muleq	r1, ip, r6
   1b5c8:	muleq	r1, ip, r6
   1b5cc:	muleq	r1, ip, r6
   1b5d0:	muleq	r1, ip, r6
   1b5d4:	muleq	r1, ip, r6
   1b5d8:	muleq	r1, ip, r6
   1b5dc:	muleq	r1, ip, r6
   1b5e0:	muleq	r1, ip, r6
   1b5e4:	muleq	r1, ip, r6
   1b5e8:	muleq	r1, ip, r6
   1b5ec:	muleq	r1, ip, r6
   1b5f0:	muleq	r1, ip, r6
   1b5f4:	muleq	r1, ip, r6
   1b5f8:	muleq	r1, ip, r6
   1b5fc:	andeq	fp, r1, ip, lsl #13
   1b600:	andeq	fp, r1, ip, lsl #13
   1b604:	andeq	fp, r1, ip, lsl #13
   1b608:	andeq	fp, r1, ip, lsl #13
   1b60c:	andeq	fp, r1, ip, lsl #13
   1b610:	andeq	fp, r1, ip, lsl #13
   1b614:	muleq	r1, ip, r6
   1b618:	muleq	r1, ip, r6
   1b61c:	muleq	r1, ip, r6
   1b620:	muleq	r1, ip, r6
   1b624:	muleq	r1, ip, r6
   1b628:	muleq	r1, ip, r6
   1b62c:	muleq	r1, ip, r6
   1b630:	muleq	r1, ip, r6
   1b634:	muleq	r1, ip, r6
   1b638:	muleq	r1, ip, r6
   1b63c:	muleq	r1, ip, r6
   1b640:	muleq	r1, ip, r6
   1b644:	muleq	r1, ip, r6
   1b648:	muleq	r1, ip, r6
   1b64c:	muleq	r1, ip, r6
   1b650:	muleq	r1, ip, r6
   1b654:	muleq	r1, ip, r6
   1b658:	muleq	r1, ip, r6
   1b65c:	muleq	r1, ip, r6
   1b660:	muleq	r1, ip, r6
   1b664:	muleq	r1, ip, r6
   1b668:	muleq	r1, ip, r6
   1b66c:	muleq	r1, ip, r6
   1b670:	muleq	r1, ip, r6
   1b674:	muleq	r1, ip, r6
   1b678:	muleq	r1, ip, r6
   1b67c:	andeq	fp, r1, ip, lsl #13
   1b680:	andeq	fp, r1, ip, lsl #13
   1b684:	andeq	fp, r1, ip, lsl #13
   1b688:	andeq	fp, r1, ip, lsl #13
   1b68c:	movw	r0, #1
   1b690:	and	r0, r0, #1
   1b694:	strb	r0, [sp, #11]
   1b698:	b	1b6a8 <__assert_fail@plt+0xa714>
   1b69c:	movw	r0, #0
   1b6a0:	and	r0, r0, #1
   1b6a4:	strb	r0, [sp, #11]
   1b6a8:	ldrb	r0, [sp, #11]
   1b6ac:	and	r0, r0, #1
   1b6b0:	add	sp, sp, #12
   1b6b4:	bx	lr
   1b6b8:	sub	sp, sp, #12
   1b6bc:	str	r0, [sp, #4]
   1b6c0:	ldr	r0, [sp, #4]
   1b6c4:	sub	r1, r0, #9
   1b6c8:	cmp	r1, #5
   1b6cc:	str	r0, [sp]
   1b6d0:	bcc	1b6e8 <__assert_fail@plt+0xa754>
   1b6d4:	b	1b6d8 <__assert_fail@plt+0xa744>
   1b6d8:	ldr	r0, [sp]
   1b6dc:	cmp	r0, #32
   1b6e0:	bne	1b6f8 <__assert_fail@plt+0xa764>
   1b6e4:	b	1b6e8 <__assert_fail@plt+0xa754>
   1b6e8:	movw	r0, #1
   1b6ec:	and	r0, r0, #1
   1b6f0:	strb	r0, [sp, #11]
   1b6f4:	b	1b704 <__assert_fail@plt+0xa770>
   1b6f8:	movw	r0, #0
   1b6fc:	and	r0, r0, #1
   1b700:	strb	r0, [sp, #11]
   1b704:	ldrb	r0, [sp, #11]
   1b708:	and	r0, r0, #1
   1b70c:	add	sp, sp, #12
   1b710:	bx	lr
   1b714:	sub	sp, sp, #8
   1b718:	str	r0, [sp]
   1b71c:	ldr	r0, [sp]
   1b720:	sub	r0, r0, #65	; 0x41
   1b724:	cmp	r0, #25
   1b728:	bhi	1b740 <__assert_fail@plt+0xa7ac>
   1b72c:	b	1b730 <__assert_fail@plt+0xa79c>
   1b730:	movw	r0, #1
   1b734:	and	r0, r0, #1
   1b738:	strb	r0, [sp, #7]
   1b73c:	b	1b74c <__assert_fail@plt+0xa7b8>
   1b740:	movw	r0, #0
   1b744:	and	r0, r0, #1
   1b748:	strb	r0, [sp, #7]
   1b74c:	ldrb	r0, [sp, #7]
   1b750:	and	r0, r0, #1
   1b754:	add	sp, sp, #8
   1b758:	bx	lr
   1b75c:	sub	sp, sp, #12
   1b760:	str	r0, [sp, #4]
   1b764:	ldr	r0, [sp, #4]
   1b768:	sub	r1, r0, #48	; 0x30
   1b76c:	cmp	r1, #10
   1b770:	str	r0, [sp]
   1b774:	bcc	1b7a4 <__assert_fail@plt+0xa810>
   1b778:	b	1b77c <__assert_fail@plt+0xa7e8>
   1b77c:	ldr	r0, [sp]
   1b780:	sub	r1, r0, #65	; 0x41
   1b784:	cmp	r1, #6
   1b788:	bcc	1b7a4 <__assert_fail@plt+0xa810>
   1b78c:	b	1b790 <__assert_fail@plt+0xa7fc>
   1b790:	ldr	r0, [sp]
   1b794:	sub	r1, r0, #97	; 0x61
   1b798:	cmp	r1, #5
   1b79c:	bhi	1b7b4 <__assert_fail@plt+0xa820>
   1b7a0:	b	1b7a4 <__assert_fail@plt+0xa810>
   1b7a4:	movw	r0, #1
   1b7a8:	and	r0, r0, #1
   1b7ac:	strb	r0, [sp, #11]
   1b7b0:	b	1b7c0 <__assert_fail@plt+0xa82c>
   1b7b4:	movw	r0, #0
   1b7b8:	and	r0, r0, #1
   1b7bc:	strb	r0, [sp, #11]
   1b7c0:	ldrb	r0, [sp, #11]
   1b7c4:	and	r0, r0, #1
   1b7c8:	add	sp, sp, #12
   1b7cc:	bx	lr
   1b7d0:	sub	sp, sp, #8
   1b7d4:	str	r0, [sp]
   1b7d8:	ldr	r0, [sp]
   1b7dc:	sub	r0, r0, #65	; 0x41
   1b7e0:	cmp	r0, #25
   1b7e4:	bhi	1b800 <__assert_fail@plt+0xa86c>
   1b7e8:	b	1b7ec <__assert_fail@plt+0xa858>
   1b7ec:	ldr	r0, [sp]
   1b7f0:	sub	r0, r0, #65	; 0x41
   1b7f4:	add	r0, r0, #97	; 0x61
   1b7f8:	str	r0, [sp, #4]
   1b7fc:	b	1b808 <__assert_fail@plt+0xa874>
   1b800:	ldr	r0, [sp]
   1b804:	str	r0, [sp, #4]
   1b808:	ldr	r0, [sp, #4]
   1b80c:	add	sp, sp, #8
   1b810:	bx	lr
   1b814:	sub	sp, sp, #8
   1b818:	str	r0, [sp]
   1b81c:	ldr	r0, [sp]
   1b820:	sub	r0, r0, #97	; 0x61
   1b824:	cmp	r0, #25
   1b828:	bhi	1b844 <__assert_fail@plt+0xa8b0>
   1b82c:	b	1b830 <__assert_fail@plt+0xa89c>
   1b830:	ldr	r0, [sp]
   1b834:	sub	r0, r0, #97	; 0x61
   1b838:	add	r0, r0, #65	; 0x41
   1b83c:	str	r0, [sp, #4]
   1b840:	b	1b84c <__assert_fail@plt+0xa8b8>
   1b844:	ldr	r0, [sp]
   1b848:	str	r0, [sp, #4]
   1b84c:	ldr	r0, [sp, #4]
   1b850:	add	sp, sp, #8
   1b854:	bx	lr
   1b858:	push	{r4, r5, fp, lr}
   1b85c:	add	fp, sp, #8
   1b860:	sub	sp, sp, #272	; 0x110
   1b864:	add	r1, sp, #7
   1b868:	str	r0, [fp, #-16]
   1b86c:	ldr	r0, [fp, #-16]
   1b870:	movw	r2, #257	; 0x101
   1b874:	bl	1b8f4 <__assert_fail@plt+0xa960>
   1b878:	cmp	r0, #0
   1b87c:	beq	1b890 <__assert_fail@plt+0xa8fc>
   1b880:	movw	r0, #0
   1b884:	and	r0, r0, #1
   1b888:	strb	r0, [fp, #-9]
   1b88c:	b	1b8e4 <__assert_fail@plt+0xa950>
   1b890:	add	r0, sp, #7
   1b894:	movw	r1, #50994	; 0xc732
   1b898:	movt	r1, #1
   1b89c:	bl	10d78 <strcmp@plt>
   1b8a0:	cmp	r0, #0
   1b8a4:	movw	r0, #1
   1b8a8:	str	r0, [sp]
   1b8ac:	beq	1b8d0 <__assert_fail@plt+0xa93c>
   1b8b0:	add	r0, sp, #7
   1b8b4:	movw	r1, #50996	; 0xc734
   1b8b8:	movt	r1, #1
   1b8bc:	bl	10d78 <strcmp@plt>
   1b8c0:	cmp	r0, #0
   1b8c4:	movw	r0, #0
   1b8c8:	moveq	r0, #1
   1b8cc:	str	r0, [sp]
   1b8d0:	ldr	r0, [sp]
   1b8d4:	mvn	r1, #0
   1b8d8:	eor	r0, r0, r1
   1b8dc:	and	r0, r0, #1
   1b8e0:	strb	r0, [fp, #-9]
   1b8e4:	ldrb	r0, [fp, #-9]
   1b8e8:	and	r0, r0, #1
   1b8ec:	sub	sp, fp, #8
   1b8f0:	pop	{r4, r5, fp, pc}
   1b8f4:	push	{fp, lr}
   1b8f8:	mov	fp, sp
   1b8fc:	sub	sp, sp, #16
   1b900:	str	r0, [fp, #-4]
   1b904:	str	r1, [sp, #8]
   1b908:	str	r2, [sp, #4]
   1b90c:	ldr	r0, [fp, #-4]
   1b910:	ldr	r1, [sp, #8]
   1b914:	ldr	r2, [sp, #4]
   1b918:	bl	1b924 <__assert_fail@plt+0xa990>
   1b91c:	mov	sp, fp
   1b920:	pop	{fp, pc}
   1b924:	push	{fp, lr}
   1b928:	mov	fp, sp
   1b92c:	sub	sp, sp, #24
   1b930:	str	r0, [fp, #-8]
   1b934:	str	r1, [sp, #12]
   1b938:	str	r2, [sp, #8]
   1b93c:	ldr	r0, [fp, #-8]
   1b940:	bl	1ba24 <__assert_fail@plt+0xaa90>
   1b944:	str	r0, [sp, #4]
   1b948:	ldr	r0, [sp, #4]
   1b94c:	movw	r1, #0
   1b950:	cmp	r0, r1
   1b954:	bne	1b97c <__assert_fail@plt+0xa9e8>
   1b958:	ldr	r0, [sp, #8]
   1b95c:	cmp	r0, #0
   1b960:	bls	1b970 <__assert_fail@plt+0xa9dc>
   1b964:	ldr	r0, [sp, #12]
   1b968:	movw	r1, #0
   1b96c:	strb	r1, [r0]
   1b970:	movw	r0, #22
   1b974:	str	r0, [fp, #-4]
   1b978:	b	1b9f8 <__assert_fail@plt+0xaa64>
   1b97c:	ldr	r0, [sp, #4]
   1b980:	bl	10ed4 <strlen@plt>
   1b984:	str	r0, [sp]
   1b988:	ldr	r0, [sp]
   1b98c:	ldr	r1, [sp, #8]
   1b990:	cmp	r0, r1
   1b994:	bcs	1b9b8 <__assert_fail@plt+0xaa24>
   1b998:	ldr	r0, [sp, #12]
   1b99c:	ldr	r1, [sp, #4]
   1b9a0:	ldr	r2, [sp]
   1b9a4:	add	r2, r2, #1
   1b9a8:	bl	10dc0 <memcpy@plt>
   1b9ac:	movw	r0, #0
   1b9b0:	str	r0, [fp, #-4]
   1b9b4:	b	1b9f8 <__assert_fail@plt+0xaa64>
   1b9b8:	ldr	r0, [sp, #8]
   1b9bc:	cmp	r0, #0
   1b9c0:	bls	1b9f0 <__assert_fail@plt+0xaa5c>
   1b9c4:	ldr	r0, [sp, #12]
   1b9c8:	ldr	r1, [sp, #4]
   1b9cc:	ldr	r2, [sp, #8]
   1b9d0:	sub	r2, r2, #1
   1b9d4:	bl	10dc0 <memcpy@plt>
   1b9d8:	ldr	r0, [sp, #12]
   1b9dc:	ldr	r1, [sp, #8]
   1b9e0:	sub	r1, r1, #1
   1b9e4:	add	r0, r0, r1
   1b9e8:	movw	r1, #0
   1b9ec:	strb	r1, [r0]
   1b9f0:	movw	r0, #34	; 0x22
   1b9f4:	str	r0, [fp, #-4]
   1b9f8:	ldr	r0, [fp, #-4]
   1b9fc:	mov	sp, fp
   1ba00:	pop	{fp, pc}
   1ba04:	push	{fp, lr}
   1ba08:	mov	fp, sp
   1ba0c:	sub	sp, sp, #8
   1ba10:	str	r0, [sp, #4]
   1ba14:	ldr	r0, [sp, #4]
   1ba18:	bl	1ba24 <__assert_fail@plt+0xaa90>
   1ba1c:	mov	sp, fp
   1ba20:	pop	{fp, pc}
   1ba24:	push	{fp, lr}
   1ba28:	mov	fp, sp
   1ba2c:	sub	sp, sp, #8
   1ba30:	str	r0, [sp, #4]
   1ba34:	ldr	r0, [sp, #4]
   1ba38:	movw	r1, #0
   1ba3c:	bl	10f40 <setlocale@plt>
   1ba40:	str	r0, [sp]
   1ba44:	ldr	r0, [sp]
   1ba48:	mov	sp, fp
   1ba4c:	pop	{fp, pc}
   1ba50:	cmp	r3, #0
   1ba54:	cmpeq	r2, #0
   1ba58:	bne	1ba7c <__assert_fail@plt+0xaae8>
   1ba5c:	cmp	r1, #0
   1ba60:	movlt	r1, #-2147483648	; 0x80000000
   1ba64:	movlt	r0, #0
   1ba68:	blt	1ba78 <__assert_fail@plt+0xaae4>
   1ba6c:	cmpeq	r0, #0
   1ba70:	mvnne	r1, #-2147483648	; 0x80000000
   1ba74:	mvnne	r0, #0
   1ba78:	b	1bb60 <__assert_fail@plt+0xabcc>
   1ba7c:	sub	sp, sp, #8
   1ba80:	push	{sp, lr}
   1ba84:	cmp	r1, #0
   1ba88:	blt	1baa8 <__assert_fail@plt+0xab14>
   1ba8c:	cmp	r3, #0
   1ba90:	blt	1badc <__assert_fail@plt+0xab48>
   1ba94:	bl	1bb70 <__assert_fail@plt+0xabdc>
   1ba98:	ldr	lr, [sp, #4]
   1ba9c:	add	sp, sp, #8
   1baa0:	pop	{r2, r3}
   1baa4:	bx	lr
   1baa8:	rsbs	r0, r0, #0
   1baac:	sbc	r1, r1, r1, lsl #1
   1bab0:	cmp	r3, #0
   1bab4:	blt	1bb00 <__assert_fail@plt+0xab6c>
   1bab8:	bl	1bb70 <__assert_fail@plt+0xabdc>
   1babc:	ldr	lr, [sp, #4]
   1bac0:	add	sp, sp, #8
   1bac4:	pop	{r2, r3}
   1bac8:	rsbs	r0, r0, #0
   1bacc:	sbc	r1, r1, r1, lsl #1
   1bad0:	rsbs	r2, r2, #0
   1bad4:	sbc	r3, r3, r3, lsl #1
   1bad8:	bx	lr
   1badc:	rsbs	r2, r2, #0
   1bae0:	sbc	r3, r3, r3, lsl #1
   1bae4:	bl	1bb70 <__assert_fail@plt+0xabdc>
   1bae8:	ldr	lr, [sp, #4]
   1baec:	add	sp, sp, #8
   1baf0:	pop	{r2, r3}
   1baf4:	rsbs	r0, r0, #0
   1baf8:	sbc	r1, r1, r1, lsl #1
   1bafc:	bx	lr
   1bb00:	rsbs	r2, r2, #0
   1bb04:	sbc	r3, r3, r3, lsl #1
   1bb08:	bl	1bb70 <__assert_fail@plt+0xabdc>
   1bb0c:	ldr	lr, [sp, #4]
   1bb10:	add	sp, sp, #8
   1bb14:	pop	{r2, r3}
   1bb18:	rsbs	r2, r2, #0
   1bb1c:	sbc	r3, r3, r3, lsl #1
   1bb20:	bx	lr
   1bb24:	cmp	r3, #0
   1bb28:	cmpeq	r2, #0
   1bb2c:	bne	1bb44 <__assert_fail@plt+0xabb0>
   1bb30:	cmp	r1, #0
   1bb34:	cmpeq	r0, #0
   1bb38:	mvnne	r1, #0
   1bb3c:	mvnne	r0, #0
   1bb40:	b	1bb60 <__assert_fail@plt+0xabcc>
   1bb44:	sub	sp, sp, #8
   1bb48:	push	{sp, lr}
   1bb4c:	bl	1bb70 <__assert_fail@plt+0xabdc>
   1bb50:	ldr	lr, [sp, #4]
   1bb54:	add	sp, sp, #8
   1bb58:	pop	{r2, r3}
   1bb5c:	bx	lr
   1bb60:	push	{r1, lr}
   1bb64:	mov	r0, #8
   1bb68:	bl	10d6c <raise@plt>
   1bb6c:	pop	{r1, pc}
   1bb70:	cmp	r1, r3
   1bb74:	cmpeq	r0, r2
   1bb78:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1bb7c:	mov	r4, r0
   1bb80:	movcc	r0, #0
   1bb84:	mov	r5, r1
   1bb88:	ldr	lr, [sp, #36]	; 0x24
   1bb8c:	movcc	r1, r0
   1bb90:	bcc	1bc8c <__assert_fail@plt+0xacf8>
   1bb94:	cmp	r3, #0
   1bb98:	clzeq	ip, r2
   1bb9c:	clzne	ip, r3
   1bba0:	addeq	ip, ip, #32
   1bba4:	cmp	r5, #0
   1bba8:	clzeq	r1, r4
   1bbac:	addeq	r1, r1, #32
   1bbb0:	clzne	r1, r5
   1bbb4:	sub	ip, ip, r1
   1bbb8:	sub	sl, ip, #32
   1bbbc:	lsl	r9, r3, ip
   1bbc0:	rsb	fp, ip, #32
   1bbc4:	orr	r9, r9, r2, lsl sl
   1bbc8:	orr	r9, r9, r2, lsr fp
   1bbcc:	lsl	r8, r2, ip
   1bbd0:	cmp	r5, r9
   1bbd4:	cmpeq	r4, r8
   1bbd8:	movcc	r0, #0
   1bbdc:	movcc	r1, r0
   1bbe0:	bcc	1bbfc <__assert_fail@plt+0xac68>
   1bbe4:	mov	r0, #1
   1bbe8:	subs	r4, r4, r8
   1bbec:	lsl	r1, r0, sl
   1bbf0:	orr	r1, r1, r0, lsr fp
   1bbf4:	lsl	r0, r0, ip
   1bbf8:	sbc	r5, r5, r9
   1bbfc:	cmp	ip, #0
   1bc00:	beq	1bc8c <__assert_fail@plt+0xacf8>
   1bc04:	lsr	r6, r8, #1
   1bc08:	orr	r6, r6, r9, lsl #31
   1bc0c:	lsr	r7, r9, #1
   1bc10:	mov	r2, ip
   1bc14:	b	1bc38 <__assert_fail@plt+0xaca4>
   1bc18:	subs	r3, r4, r6
   1bc1c:	sbc	r8, r5, r7
   1bc20:	adds	r3, r3, r3
   1bc24:	adc	r8, r8, r8
   1bc28:	adds	r4, r3, #1
   1bc2c:	adc	r5, r8, #0
   1bc30:	subs	r2, r2, #1
   1bc34:	beq	1bc54 <__assert_fail@plt+0xacc0>
   1bc38:	cmp	r5, r7
   1bc3c:	cmpeq	r4, r6
   1bc40:	bcs	1bc18 <__assert_fail@plt+0xac84>
   1bc44:	adds	r4, r4, r4
   1bc48:	adc	r5, r5, r5
   1bc4c:	subs	r2, r2, #1
   1bc50:	bne	1bc38 <__assert_fail@plt+0xaca4>
   1bc54:	lsr	r3, r4, ip
   1bc58:	orr	r3, r3, r5, lsl fp
   1bc5c:	lsr	r2, r5, ip
   1bc60:	orr	r3, r3, r5, lsr sl
   1bc64:	adds	r0, r0, r4
   1bc68:	mov	r4, r3
   1bc6c:	lsl	r3, r2, ip
   1bc70:	orr	r3, r3, r4, lsl sl
   1bc74:	lsl	ip, r4, ip
   1bc78:	orr	r3, r3, r4, lsr fp
   1bc7c:	adc	r1, r1, r5
   1bc80:	subs	r0, r0, ip
   1bc84:	mov	r5, r2
   1bc88:	sbc	r1, r1, r3
   1bc8c:	cmp	lr, #0
   1bc90:	strdne	r4, [lr]
   1bc94:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bc98:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1bc9c:	mov	r7, r0
   1bca0:	ldr	r6, [pc, #72]	; 1bcf0 <__assert_fail@plt+0xad5c>
   1bca4:	ldr	r5, [pc, #72]	; 1bcf4 <__assert_fail@plt+0xad60>
   1bca8:	add	r6, pc, r6
   1bcac:	add	r5, pc, r5
   1bcb0:	sub	r6, r6, r5
   1bcb4:	mov	r8, r1
   1bcb8:	mov	r9, r2
   1bcbc:	bl	10d34 <calloc@plt-0x20>
   1bcc0:	asrs	r6, r6, #2
   1bcc4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1bcc8:	mov	r4, #0
   1bccc:	add	r4, r4, #1
   1bcd0:	ldr	r3, [r5], #4
   1bcd4:	mov	r2, r9
   1bcd8:	mov	r1, r8
   1bcdc:	mov	r0, r7
   1bce0:	blx	r3
   1bce4:	cmp	r6, r4
   1bce8:	bne	1bccc <__assert_fail@plt+0xad38>
   1bcec:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1bcf0:	andeq	r1, r1, ip, asr r2
   1bcf4:	andeq	r1, r1, r4, asr r2
   1bcf8:	bx	lr
   1bcfc:	ldr	r3, [pc, #12]	; 1bd10 <__assert_fail@plt+0xad7c>
   1bd00:	mov	r1, #0
   1bd04:	add	r3, pc, r3
   1bd08:	ldr	r2, [r3]
   1bd0c:	b	10f04 <__cxa_atexit@plt>
   1bd10:	andeq	r1, r1, ip, asr #7

Disassembly of section .fini:

0001bd14 <.fini>:
   1bd14:	push	{r3, lr}
   1bd18:	pop	{r3, pc}
