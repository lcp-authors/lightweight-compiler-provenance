
../repos/coreutils/src/tr:     file format elf32-littlearm


Disassembly of section .init:

00010e04 <.init>:
   10e04:	push	{r3, lr}
   10e08:	bl	110e8 <__assert_fail@plt+0x48>
   10e0c:	pop	{r3, pc}

Disassembly of section .plt:

00010e10 <calloc@plt-0x14>:
   10e10:	push	{lr}		; (str lr, [sp, #-4]!)
   10e14:	ldr	lr, [pc, #4]	; 10e20 <calloc@plt-0x4>
   10e18:	add	lr, pc, lr
   10e1c:	ldr	pc, [lr, #8]!
   10e20:	andeq	r1, r2, r0, ror #3

00010e24 <calloc@plt>:
   10e24:	add	ip, pc, #0, 12
   10e28:	add	ip, ip, #135168	; 0x21000
   10e2c:	ldr	pc, [ip, #480]!	; 0x1e0

00010e30 <fputs_unlocked@plt>:
   10e30:	add	ip, pc, #0, 12
   10e34:	add	ip, ip, #135168	; 0x21000
   10e38:	ldr	pc, [ip, #472]!	; 0x1d8

00010e3c <raise@plt>:
   10e3c:	add	ip, pc, #0, 12
   10e40:	add	ip, ip, #135168	; 0x21000
   10e44:	ldr	pc, [ip, #464]!	; 0x1d0

00010e48 <strcmp@plt>:
   10e48:	add	ip, pc, #0, 12
   10e4c:	add	ip, ip, #135168	; 0x21000
   10e50:	ldr	pc, [ip, #456]!	; 0x1c8

00010e54 <posix_fadvise64@plt>:
   10e54:	add	ip, pc, #0, 12
   10e58:	add	ip, ip, #135168	; 0x21000
   10e5c:	ldr	pc, [ip, #448]!	; 0x1c0

00010e60 <printf@plt>:
   10e60:	add	ip, pc, #0, 12
   10e64:	add	ip, ip, #135168	; 0x21000
   10e68:	ldr	pc, [ip, #440]!	; 0x1b8

00010e6c <read@plt>:
   10e6c:	add	ip, pc, #0, 12
   10e70:	add	ip, ip, #135168	; 0x21000
   10e74:	ldr	pc, [ip, #432]!	; 0x1b0

00010e78 <fflush@plt>:
   10e78:	add	ip, pc, #0, 12
   10e7c:	add	ip, ip, #135168	; 0x21000
   10e80:	ldr	pc, [ip, #424]!	; 0x1a8

00010e84 <free@plt>:
   10e84:	add	ip, pc, #0, 12
   10e88:	add	ip, ip, #135168	; 0x21000
   10e8c:	ldr	pc, [ip, #416]!	; 0x1a0

00010e90 <_exit@plt>:
   10e90:	add	ip, pc, #0, 12
   10e94:	add	ip, ip, #135168	; 0x21000
   10e98:	ldr	pc, [ip, #408]!	; 0x198

00010e9c <memcpy@plt>:
   10e9c:	add	ip, pc, #0, 12
   10ea0:	add	ip, ip, #135168	; 0x21000
   10ea4:	ldr	pc, [ip, #400]!	; 0x190

00010ea8 <tolower@plt>:
   10ea8:	add	ip, pc, #0, 12
   10eac:	add	ip, ip, #135168	; 0x21000
   10eb0:	ldr	pc, [ip, #392]!	; 0x188

00010eb4 <mbsinit@plt>:
   10eb4:	add	ip, pc, #0, 12
   10eb8:	add	ip, ip, #135168	; 0x21000
   10ebc:	ldr	pc, [ip, #384]!	; 0x180

00010ec0 <fwrite_unlocked@plt>:
   10ec0:	add	ip, pc, #0, 12
   10ec4:	add	ip, ip, #135168	; 0x21000
   10ec8:	ldr	pc, [ip, #376]!	; 0x178

00010ecc <memcmp@plt>:
   10ecc:	add	ip, pc, #0, 12
   10ed0:	add	ip, ip, #135168	; 0x21000
   10ed4:	ldr	pc, [ip, #368]!	; 0x170

00010ed8 <stpcpy@plt>:
   10ed8:	add	ip, pc, #0, 12
   10edc:	add	ip, ip, #135168	; 0x21000
   10ee0:	ldr	pc, [ip, #360]!	; 0x168

00010ee4 <realloc@plt>:
   10ee4:	add	ip, pc, #0, 12
   10ee8:	add	ip, ip, #135168	; 0x21000
   10eec:	ldr	pc, [ip, #352]!	; 0x160

00010ef0 <textdomain@plt>:
   10ef0:	add	ip, pc, #0, 12
   10ef4:	add	ip, ip, #135168	; 0x21000
   10ef8:	ldr	pc, [ip, #344]!	; 0x158

00010efc <iswprint@plt>:
   10efc:	add	ip, pc, #0, 12
   10f00:	add	ip, ip, #135168	; 0x21000
   10f04:	ldr	pc, [ip, #336]!	; 0x150

00010f08 <lseek64@plt>:
   10f08:	add	ip, pc, #0, 12
   10f0c:	add	ip, ip, #135168	; 0x21000
   10f10:	ldr	pc, [ip, #328]!	; 0x148

00010f14 <__ctype_get_mb_cur_max@plt>:
   10f14:	add	ip, pc, #0, 12
   10f18:	add	ip, ip, #135168	; 0x21000
   10f1c:	ldr	pc, [ip, #320]!	; 0x140

00010f20 <__fpending@plt>:
   10f20:	add	ip, pc, #0, 12
   10f24:	add	ip, ip, #135168	; 0x21000
   10f28:	ldr	pc, [ip, #312]!	; 0x138

00010f2c <ferror_unlocked@plt>:
   10f2c:	add	ip, pc, #0, 12
   10f30:	add	ip, ip, #135168	; 0x21000
   10f34:	ldr	pc, [ip, #304]!	; 0x130

00010f38 <mbrtowc@plt>:
   10f38:	add	ip, pc, #0, 12
   10f3c:	add	ip, ip, #135168	; 0x21000
   10f40:	ldr	pc, [ip, #296]!	; 0x128

00010f44 <error@plt>:
   10f44:	add	ip, pc, #0, 12
   10f48:	add	ip, ip, #135168	; 0x21000
   10f4c:	ldr	pc, [ip, #288]!	; 0x120

00010f50 <malloc@plt>:
   10f50:	add	ip, pc, #0, 12
   10f54:	add	ip, ip, #135168	; 0x21000
   10f58:	ldr	pc, [ip, #280]!	; 0x118

00010f5c <__libc_start_main@plt>:
   10f5c:	add	ip, pc, #0, 12
   10f60:	add	ip, ip, #135168	; 0x21000
   10f64:	ldr	pc, [ip, #272]!	; 0x110

00010f68 <__freading@plt>:
   10f68:	add	ip, pc, #0, 12
   10f6c:	add	ip, ip, #135168	; 0x21000
   10f70:	ldr	pc, [ip, #264]!	; 0x108

00010f74 <__gmon_start__@plt>:
   10f74:	add	ip, pc, #0, 12
   10f78:	add	ip, ip, #135168	; 0x21000
   10f7c:	ldr	pc, [ip, #256]!	; 0x100

00010f80 <getopt_long@plt>:
   10f80:	add	ip, pc, #0, 12
   10f84:	add	ip, ip, #135168	; 0x21000
   10f88:	ldr	pc, [ip, #248]!	; 0xf8

00010f8c <__ctype_b_loc@plt>:
   10f8c:	add	ip, pc, #0, 12
   10f90:	add	ip, ip, #135168	; 0x21000
   10f94:	ldr	pc, [ip, #240]!	; 0xf0

00010f98 <exit@plt>:
   10f98:	add	ip, pc, #0, 12
   10f9c:	add	ip, ip, #135168	; 0x21000
   10fa0:	ldr	pc, [ip, #232]!	; 0xe8

00010fa4 <gettext@plt>:
   10fa4:	add	ip, pc, #0, 12
   10fa8:	add	ip, ip, #135168	; 0x21000
   10fac:	ldr	pc, [ip, #224]!	; 0xe0

00010fb0 <strlen@plt>:
   10fb0:	add	ip, pc, #0, 12
   10fb4:	add	ip, ip, #135168	; 0x21000
   10fb8:	ldr	pc, [ip, #216]!	; 0xd8

00010fbc <strchr@plt>:
   10fbc:	add	ip, pc, #0, 12
   10fc0:	add	ip, ip, #135168	; 0x21000
   10fc4:	ldr	pc, [ip, #208]!	; 0xd0

00010fc8 <fprintf@plt>:
   10fc8:	add	ip, pc, #0, 12
   10fcc:	add	ip, ip, #135168	; 0x21000
   10fd0:	ldr	pc, [ip, #200]!	; 0xc8

00010fd4 <__errno_location@plt>:
   10fd4:	add	ip, pc, #0, 12
   10fd8:	add	ip, ip, #135168	; 0x21000
   10fdc:	ldr	pc, [ip, #192]!	; 0xc0

00010fe0 <__cxa_atexit@plt>:
   10fe0:	add	ip, pc, #0, 12
   10fe4:	add	ip, ip, #135168	; 0x21000
   10fe8:	ldr	pc, [ip, #184]!	; 0xb8

00010fec <memset@plt>:
   10fec:	add	ip, pc, #0, 12
   10ff0:	add	ip, ip, #135168	; 0x21000
   10ff4:	ldr	pc, [ip, #176]!	; 0xb0

00010ff8 <fileno@plt>:
   10ff8:	add	ip, pc, #0, 12
   10ffc:	add	ip, ip, #135168	; 0x21000
   11000:	ldr	pc, [ip, #168]!	; 0xa8

00011004 <strtoumax@plt>:
   11004:	add	ip, pc, #0, 12
   11008:	add	ip, ip, #135168	; 0x21000
   1100c:	ldr	pc, [ip, #160]!	; 0xa0

00011010 <fclose@plt>:
   11010:	add	ip, pc, #0, 12
   11014:	add	ip, ip, #135168	; 0x21000
   11018:	ldr	pc, [ip, #152]!	; 0x98

0001101c <fseeko64@plt>:
   1101c:	add	ip, pc, #0, 12
   11020:	add	ip, ip, #135168	; 0x21000
   11024:	ldr	pc, [ip, #144]!	; 0x90

00011028 <setlocale@plt>:
   11028:	add	ip, pc, #0, 12
   1102c:	add	ip, ip, #135168	; 0x21000
   11030:	ldr	pc, [ip, #136]!	; 0x88

00011034 <toupper@plt>:
   11034:	add	ip, pc, #0, 12
   11038:	add	ip, ip, #135168	; 0x21000
   1103c:	ldr	pc, [ip, #128]!	; 0x80

00011040 <strrchr@plt>:
   11040:	add	ip, pc, #0, 12
   11044:	add	ip, ip, #135168	; 0x21000
   11048:	ldr	pc, [ip, #120]!	; 0x78

0001104c <nl_langinfo@plt>:
   1104c:	add	ip, pc, #0, 12
   11050:	add	ip, ip, #135168	; 0x21000
   11054:	ldr	pc, [ip, #112]!	; 0x70

00011058 <sprintf@plt>:
   11058:	add	ip, pc, #0, 12
   1105c:	add	ip, ip, #135168	; 0x21000
   11060:	ldr	pc, [ip, #104]!	; 0x68

00011064 <bindtextdomain@plt>:
   11064:	add	ip, pc, #0, 12
   11068:	add	ip, ip, #135168	; 0x21000
   1106c:	ldr	pc, [ip, #96]!	; 0x60

00011070 <fputs@plt>:
   11070:	add	ip, pc, #0, 12
   11074:	add	ip, ip, #135168	; 0x21000
   11078:	ldr	pc, [ip, #88]!	; 0x58

0001107c <strncmp@plt>:
   1107c:	add	ip, pc, #0, 12
   11080:	add	ip, ip, #135168	; 0x21000
   11084:	ldr	pc, [ip, #80]!	; 0x50

00011088 <abort@plt>:
   11088:	add	ip, pc, #0, 12
   1108c:	add	ip, ip, #135168	; 0x21000
   11090:	ldr	pc, [ip, #72]!	; 0x48

00011094 <close@plt>:
   11094:	add	ip, pc, #0, 12
   11098:	add	ip, ip, #135168	; 0x21000
   1109c:	ldr	pc, [ip, #64]!	; 0x40

000110a0 <__assert_fail@plt>:
   110a0:	add	ip, pc, #0, 12
   110a4:	add	ip, ip, #135168	; 0x21000
   110a8:	ldr	pc, [ip, #56]!	; 0x38

Disassembly of section .text:

000110ac <.text>:
   110ac:	mov	fp, #0
   110b0:	mov	lr, #0
   110b4:	pop	{r1}		; (ldr r1, [sp], #4)
   110b8:	mov	r2, sp
   110bc:	push	{r2}		; (str r2, [sp, #-4]!)
   110c0:	push	{r0}		; (str r0, [sp, #-4]!)
   110c4:	ldr	ip, [pc, #16]	; 110dc <__assert_fail@plt+0x3c>
   110c8:	push	{ip}		; (str ip, [sp, #-4]!)
   110cc:	ldr	r0, [pc, #12]	; 110e0 <__assert_fail@plt+0x40>
   110d0:	ldr	r3, [pc, #12]	; 110e4 <__assert_fail@plt+0x44>
   110d4:	bl	10f5c <__libc_start_main@plt>
   110d8:	bl	11088 <abort@plt>
   110dc:	andeq	pc, r1, r0, lsr #29
   110e0:	andeq	r1, r1, ip, ror #9
   110e4:	andeq	pc, r1, r0, asr #28
   110e8:	ldr	r3, [pc, #20]	; 11104 <__assert_fail@plt+0x64>
   110ec:	ldr	r2, [pc, #20]	; 11108 <__assert_fail@plt+0x68>
   110f0:	add	r3, pc, r3
   110f4:	ldr	r2, [r3, r2]
   110f8:	cmp	r2, #0
   110fc:	bxeq	lr
   11100:	b	10f74 <__gmon_start__@plt>
   11104:	andeq	r0, r2, r8, lsl #30
   11108:	andeq	r0, r0, r4, ror #1
   1110c:	ldr	r0, [pc, #24]	; 1112c <__assert_fail@plt+0x8c>
   11110:	ldr	r3, [pc, #24]	; 11130 <__assert_fail@plt+0x90>
   11114:	cmp	r3, r0
   11118:	bxeq	lr
   1111c:	ldr	r3, [pc, #16]	; 11134 <__assert_fail@plt+0x94>
   11120:	cmp	r3, #0
   11124:	bxeq	lr
   11128:	bx	r3
   1112c:	andeq	r2, r3, r8, lsr r1
   11130:	andeq	r2, r3, r8, lsr r1
   11134:	andeq	r0, r0, r0
   11138:	ldr	r0, [pc, #36]	; 11164 <__assert_fail@plt+0xc4>
   1113c:	ldr	r1, [pc, #36]	; 11168 <__assert_fail@plt+0xc8>
   11140:	sub	r1, r1, r0
   11144:	asr	r1, r1, #2
   11148:	add	r1, r1, r1, lsr #31
   1114c:	asrs	r1, r1, #1
   11150:	bxeq	lr
   11154:	ldr	r3, [pc, #16]	; 1116c <__assert_fail@plt+0xcc>
   11158:	cmp	r3, #0
   1115c:	bxeq	lr
   11160:	bx	r3
   11164:	andeq	r2, r3, r8, lsr r1
   11168:	andeq	r2, r3, r8, lsr r1
   1116c:	andeq	r0, r0, r0
   11170:	push	{r4, lr}
   11174:	ldr	r4, [pc, #24]	; 11194 <__assert_fail@plt+0xf4>
   11178:	ldrb	r3, [r4]
   1117c:	cmp	r3, #0
   11180:	popne	{r4, pc}
   11184:	bl	1110c <__assert_fail@plt+0x6c>
   11188:	mov	r3, #1
   1118c:	strb	r3, [r4]
   11190:	pop	{r4, pc}
   11194:	andeq	r2, r3, r8, asr r1
   11198:	b	11138 <__assert_fail@plt+0x98>
   1119c:	push	{fp, lr}
   111a0:	mov	fp, sp
   111a4:	sub	sp, sp, #48	; 0x30
   111a8:	str	r0, [fp, #-4]
   111ac:	ldr	r0, [fp, #-4]
   111b0:	cmp	r0, #0
   111b4:	beq	11204 <__assert_fail@plt+0x164>
   111b8:	b	111bc <__assert_fail@plt+0x11c>
   111bc:	movw	r0, #8520	; 0x2148
   111c0:	movt	r0, #3
   111c4:	ldr	r0, [r0]
   111c8:	movw	r1, #65224	; 0xfec8
   111cc:	movt	r1, #1
   111d0:	str	r0, [fp, #-8]
   111d4:	mov	r0, r1
   111d8:	bl	10fa4 <gettext@plt>
   111dc:	movw	r1, #17512	; 0x4468
   111e0:	movt	r1, #3
   111e4:	ldr	r2, [r1]
   111e8:	ldr	r1, [fp, #-8]
   111ec:	str	r0, [fp, #-12]
   111f0:	mov	r0, r1
   111f4:	ldr	r1, [fp, #-12]
   111f8:	bl	10fc8 <fprintf@plt>
   111fc:	str	r0, [fp, #-16]
   11200:	b	11330 <__assert_fail@plt+0x290>
   11204:	movw	r0, #65263	; 0xfeef
   11208:	movt	r0, #1
   1120c:	bl	10fa4 <gettext@plt>
   11210:	movw	lr, #17512	; 0x4468
   11214:	movt	lr, #3
   11218:	ldr	r1, [lr]
   1121c:	bl	10e60 <printf@plt>
   11220:	movw	r1, #65298	; 0xff12
   11224:	movt	r1, #1
   11228:	str	r0, [fp, #-20]	; 0xffffffec
   1122c:	mov	r0, r1
   11230:	bl	10fa4 <gettext@plt>
   11234:	movw	r1, #8532	; 0x2154
   11238:	movt	r1, #3
   1123c:	ldr	r1, [r1]
   11240:	bl	10e30 <fputs_unlocked@plt>
   11244:	movw	r1, #258	; 0x102
   11248:	movt	r1, #2
   1124c:	str	r0, [sp, #24]
   11250:	mov	r0, r1
   11254:	bl	10fa4 <gettext@plt>
   11258:	movw	r1, #8532	; 0x2154
   1125c:	movt	r1, #3
   11260:	ldr	r1, [r1]
   11264:	bl	10e30 <fputs_unlocked@plt>
   11268:	movw	r1, #303	; 0x12f
   1126c:	movt	r1, #2
   11270:	str	r0, [sp, #20]
   11274:	mov	r0, r1
   11278:	bl	10fa4 <gettext@plt>
   1127c:	movw	r1, #8532	; 0x2154
   11280:	movt	r1, #3
   11284:	ldr	r1, [r1]
   11288:	bl	10e30 <fputs_unlocked@plt>
   1128c:	movw	r1, #357	; 0x165
   11290:	movt	r1, #2
   11294:	str	r0, [sp, #16]
   11298:	mov	r0, r1
   1129c:	bl	10fa4 <gettext@plt>
   112a0:	movw	r1, #8532	; 0x2154
   112a4:	movt	r1, #3
   112a8:	ldr	r1, [r1]
   112ac:	bl	10e30 <fputs_unlocked@plt>
   112b0:	movw	r1, #730	; 0x2da
   112b4:	movt	r1, #2
   112b8:	str	r0, [sp, #12]
   112bc:	mov	r0, r1
   112c0:	bl	10fa4 <gettext@plt>
   112c4:	movw	r1, #8532	; 0x2154
   112c8:	movt	r1, #3
   112cc:	ldr	r1, [r1]
   112d0:	bl	10e30 <fputs_unlocked@plt>
   112d4:	movw	r1, #1155	; 0x483
   112d8:	movt	r1, #2
   112dc:	str	r0, [sp, #8]
   112e0:	mov	r0, r1
   112e4:	bl	10fa4 <gettext@plt>
   112e8:	movw	r1, #8532	; 0x2154
   112ec:	movt	r1, #3
   112f0:	ldr	r1, [r1]
   112f4:	bl	10e30 <fputs_unlocked@plt>
   112f8:	movw	r1, #1566	; 0x61e
   112fc:	movt	r1, #2
   11300:	str	r0, [sp, #4]
   11304:	mov	r0, r1
   11308:	bl	10fa4 <gettext@plt>
   1130c:	movw	r1, #8532	; 0x2154
   11310:	movt	r1, #3
   11314:	ldr	r1, [r1]
   11318:	bl	10e30 <fputs_unlocked@plt>
   1131c:	movw	r1, #2038	; 0x7f6
   11320:	movt	r1, #2
   11324:	str	r0, [sp]
   11328:	mov	r0, r1
   1132c:	bl	11338 <__assert_fail@plt+0x298>
   11330:	ldr	r0, [fp, #-4]
   11334:	bl	10f98 <exit@plt>
   11338:	push	{fp, lr}
   1133c:	mov	fp, sp
   11340:	sub	sp, sp, #96	; 0x60
   11344:	add	r1, sp, #36	; 0x24
   11348:	movw	r2, #5036	; 0x13ac
   1134c:	movt	r2, #2
   11350:	str	r0, [fp, #-4]
   11354:	mov	r0, r1
   11358:	str	r1, [sp, #20]
   1135c:	mov	r1, r2
   11360:	movw	r2, #56	; 0x38
   11364:	bl	10e9c <memcpy@plt>
   11368:	ldr	r0, [fp, #-4]
   1136c:	str	r0, [sp, #32]
   11370:	ldr	r0, [sp, #20]
   11374:	str	r0, [sp, #28]
   11378:	ldr	r0, [sp, #28]
   1137c:	ldr	r0, [r0]
   11380:	movw	r1, #0
   11384:	cmp	r0, r1
   11388:	movw	r0, #0
   1138c:	str	r0, [sp, #16]
   11390:	beq	113bc <__assert_fail@plt+0x31c>
   11394:	ldr	r0, [fp, #-4]
   11398:	ldr	r1, [sp, #28]
   1139c:	ldr	r1, [r1]
   113a0:	bl	10e48 <strcmp@plt>
   113a4:	cmp	r0, #0
   113a8:	movw	r0, #0
   113ac:	moveq	r0, #1
   113b0:	mvn	r1, #0
   113b4:	eor	r0, r0, r1
   113b8:	str	r0, [sp, #16]
   113bc:	ldr	r0, [sp, #16]
   113c0:	tst	r0, #1
   113c4:	beq	113d8 <__assert_fail@plt+0x338>
   113c8:	ldr	r0, [sp, #28]
   113cc:	add	r0, r0, #8
   113d0:	str	r0, [sp, #28]
   113d4:	b	11378 <__assert_fail@plt+0x2d8>
   113d8:	ldr	r0, [sp, #28]
   113dc:	ldr	r0, [r0, #4]
   113e0:	movw	r1, #0
   113e4:	cmp	r0, r1
   113e8:	beq	113f8 <__assert_fail@plt+0x358>
   113ec:	ldr	r0, [sp, #28]
   113f0:	ldr	r0, [r0, #4]
   113f4:	str	r0, [sp, #32]
   113f8:	movw	r0, #2548	; 0x9f4
   113fc:	movt	r0, #2
   11400:	bl	10fa4 <gettext@plt>
   11404:	movw	r1, #2075	; 0x81b
   11408:	movt	r1, #2
   1140c:	movw	r2, #2571	; 0xa0b
   11410:	movt	r2, #2
   11414:	bl	10e60 <printf@plt>
   11418:	movw	r1, #5
   1141c:	str	r0, [sp, #12]
   11420:	mov	r0, r1
   11424:	movw	r1, #0
   11428:	bl	11028 <setlocale@plt>
   1142c:	str	r0, [sp, #24]
   11430:	ldr	r0, [sp, #24]
   11434:	movw	r1, #0
   11438:	cmp	r0, r1
   1143c:	beq	1147c <__assert_fail@plt+0x3dc>
   11440:	ldr	r0, [sp, #24]
   11444:	movw	r1, #2611	; 0xa33
   11448:	movt	r1, #2
   1144c:	movw	r2, #3
   11450:	bl	1107c <strncmp@plt>
   11454:	cmp	r0, #0
   11458:	beq	1147c <__assert_fail@plt+0x3dc>
   1145c:	movw	r0, #2615	; 0xa37
   11460:	movt	r0, #2
   11464:	bl	10fa4 <gettext@plt>
   11468:	movw	lr, #8532	; 0x2154
   1146c:	movt	lr, #3
   11470:	ldr	r1, [lr]
   11474:	bl	10e30 <fputs_unlocked@plt>
   11478:	str	r0, [sp, #8]
   1147c:	movw	r0, #2686	; 0xa7e
   11480:	movt	r0, #2
   11484:	bl	10fa4 <gettext@plt>
   11488:	ldr	r2, [fp, #-4]
   1148c:	movw	r1, #2571	; 0xa0b
   11490:	movt	r1, #2
   11494:	bl	10e60 <printf@plt>
   11498:	movw	r1, #2713	; 0xa99
   1149c:	movt	r1, #2
   114a0:	str	r0, [sp, #4]
   114a4:	mov	r0, r1
   114a8:	bl	10fa4 <gettext@plt>
   114ac:	ldr	r1, [sp, #32]
   114b0:	ldr	r2, [sp, #32]
   114b4:	ldr	lr, [fp, #-4]
   114b8:	cmp	r2, lr
   114bc:	movw	r2, #0
   114c0:	moveq	r2, #1
   114c4:	tst	r2, #1
   114c8:	movw	r2, #2763	; 0xacb
   114cc:	movt	r2, #2
   114d0:	movw	lr, #2481	; 0x9b1
   114d4:	movt	lr, #2
   114d8:	movne	r2, lr
   114dc:	bl	10e60 <printf@plt>
   114e0:	str	r0, [sp]
   114e4:	mov	sp, fp
   114e8:	pop	{fp, pc}
   114ec:	push	{r4, r5, fp, lr}
   114f0:	add	fp, sp, #8
   114f4:	sub	sp, sp, #288	; 0x120
   114f8:	movw	r2, #0
   114fc:	str	r2, [fp, #-12]
   11500:	str	r0, [fp, #-16]
   11504:	str	r1, [fp, #-20]	; 0xffffffec
   11508:	sub	r0, fp, #80	; 0x50
   1150c:	str	r0, [fp, #-124]	; 0xffffff84
   11510:	sub	r0, fp, #120	; 0x78
   11514:	str	r0, [fp, #-128]	; 0xffffff80
   11518:	ldr	r0, [fp, #-20]	; 0xffffffec
   1151c:	ldr	r0, [r0]
   11520:	bl	15574 <__assert_fail@plt+0x44d4>
   11524:	movw	r0, #6
   11528:	movw	r1, #2763	; 0xacb
   1152c:	movt	r1, #2
   11530:	bl	11028 <setlocale@plt>
   11534:	movw	r1, #2079	; 0x81f
   11538:	movt	r1, #2
   1153c:	str	r0, [sp, #112]	; 0x70
   11540:	mov	r0, r1
   11544:	movw	r1, #2041	; 0x7f9
   11548:	movt	r1, #2
   1154c:	bl	11064 <bindtextdomain@plt>
   11550:	movw	r1, #2079	; 0x81f
   11554:	movt	r1, #2
   11558:	str	r0, [sp, #108]	; 0x6c
   1155c:	mov	r0, r1
   11560:	bl	10ef0 <textdomain@plt>
   11564:	movw	r1, #21332	; 0x5354
   11568:	movt	r1, #1
   1156c:	str	r0, [sp, #104]	; 0x68
   11570:	mov	r0, r1
   11574:	bl	1fea4 <__assert_fail@plt+0xee04>
   11578:	str	r0, [sp, #100]	; 0x64
   1157c:	ldr	r0, [fp, #-16]
   11580:	ldr	r1, [fp, #-20]	; 0xffffffec
   11584:	movw	r2, #2065	; 0x811
   11588:	movt	r2, #2
   1158c:	movw	r3, #4924	; 0x133c
   11590:	movt	r3, #2
   11594:	movw	ip, #0
   11598:	str	ip, [sp]
   1159c:	bl	10f80 <getopt_long@plt>
   115a0:	str	r0, [fp, #-24]	; 0xffffffe8
   115a4:	cmn	r0, #1
   115a8:	beq	1170c <__assert_fail@plt+0x66c>
   115ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   115b0:	cmn	r0, #3
   115b4:	str	r0, [sp, #96]	; 0x60
   115b8:	beq	116b8 <__assert_fail@plt+0x618>
   115bc:	b	115c0 <__assert_fail@plt+0x520>
   115c0:	ldr	r0, [sp, #96]	; 0x60
   115c4:	cmn	r0, #2
   115c8:	beq	116b0 <__assert_fail@plt+0x610>
   115cc:	b	115d0 <__assert_fail@plt+0x530>
   115d0:	ldr	r0, [sp, #96]	; 0x60
   115d4:	cmp	r0, #65	; 0x41
   115d8:	beq	11630 <__assert_fail@plt+0x590>
   115dc:	b	115e0 <__assert_fail@plt+0x540>
   115e0:	ldr	r0, [sp, #96]	; 0x60
   115e4:	cmp	r0, #67	; 0x43
   115e8:	beq	11660 <__assert_fail@plt+0x5c0>
   115ec:	b	115f0 <__assert_fail@plt+0x550>
   115f0:	ldr	r0, [sp, #96]	; 0x60
   115f4:	cmp	r0, #99	; 0x63
   115f8:	beq	11660 <__assert_fail@plt+0x5c0>
   115fc:	b	11600 <__assert_fail@plt+0x560>
   11600:	ldr	r0, [sp, #96]	; 0x60
   11604:	cmp	r0, #100	; 0x64
   11608:	beq	11674 <__assert_fail@plt+0x5d4>
   1160c:	b	11610 <__assert_fail@plt+0x570>
   11610:	ldr	r0, [sp, #96]	; 0x60
   11614:	cmp	r0, #115	; 0x73
   11618:	beq	11688 <__assert_fail@plt+0x5e8>
   1161c:	b	11620 <__assert_fail@plt+0x580>
   11620:	ldr	r0, [sp, #96]	; 0x60
   11624:	cmp	r0, #116	; 0x74
   11628:	beq	1169c <__assert_fail@plt+0x5fc>
   1162c:	b	11700 <__assert_fail@plt+0x660>
   11630:	movw	r0, #3
   11634:	movw	r1, #2073	; 0x819
   11638:	movt	r1, #2
   1163c:	bl	11028 <setlocale@plt>
   11640:	movw	r1, #0
   11644:	str	r0, [sp, #92]	; 0x5c
   11648:	mov	r0, r1
   1164c:	movw	r1, #2073	; 0x819
   11650:	movt	r1, #2
   11654:	bl	11028 <setlocale@plt>
   11658:	str	r0, [sp, #88]	; 0x58
   1165c:	b	11708 <__assert_fail@plt+0x668>
   11660:	movw	r0, #8537	; 0x2159
   11664:	movt	r0, #3
   11668:	movw	r1, #1
   1166c:	strb	r1, [r0]
   11670:	b	11708 <__assert_fail@plt+0x668>
   11674:	movw	r0, #8538	; 0x215a
   11678:	movt	r0, #3
   1167c:	movw	r1, #1
   11680:	strb	r1, [r0]
   11684:	b	11708 <__assert_fail@plt+0x668>
   11688:	movw	r0, #8539	; 0x215b
   1168c:	movt	r0, #3
   11690:	movw	r1, #1
   11694:	strb	r1, [r0]
   11698:	b	11708 <__assert_fail@plt+0x668>
   1169c:	movw	r0, #8540	; 0x215c
   116a0:	movt	r0, #3
   116a4:	movw	r1, #1
   116a8:	strb	r1, [r0]
   116ac:	b	11708 <__assert_fail@plt+0x668>
   116b0:	movw	r0, #0
   116b4:	bl	1119c <__assert_fail@plt+0xfc>
   116b8:	movw	r0, #8532	; 0x2154
   116bc:	movt	r0, #3
   116c0:	ldr	r0, [r0]
   116c4:	movw	r1, #8432	; 0x20f0
   116c8:	movt	r1, #3
   116cc:	ldr	r3, [r1]
   116d0:	movw	r1, #2038	; 0x7f6
   116d4:	movt	r1, #2
   116d8:	movw	r2, #2075	; 0x81b
   116dc:	movt	r2, #2
   116e0:	movw	ip, #2089	; 0x829
   116e4:	movt	ip, #2
   116e8:	str	ip, [sp]
   116ec:	movw	ip, #0
   116f0:	str	ip, [sp, #4]
   116f4:	bl	1853c <__assert_fail@plt+0x749c>
   116f8:	movw	r0, #0
   116fc:	bl	10f98 <exit@plt>
   11700:	movw	r0, #1
   11704:	bl	1119c <__assert_fail@plt+0xfc>
   11708:	b	1157c <__assert_fail@plt+0x4dc>
   1170c:	ldr	r0, [fp, #-16]
   11710:	movw	r1, #8512	; 0x2140
   11714:	movt	r1, #3
   11718:	ldr	r1, [r1]
   1171c:	sub	r0, r0, r1
   11720:	str	r0, [fp, #-28]	; 0xffffffe4
   11724:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11728:	cmp	r0, #2
   1172c:	movw	r0, #0
   11730:	str	r0, [sp, #84]	; 0x54
   11734:	bne	11750 <__assert_fail@plt+0x6b0>
   11738:	movw	r0, #8538	; 0x215a
   1173c:	movt	r0, #3
   11740:	ldrb	r0, [r0]
   11744:	mvn	r1, #0
   11748:	eor	r0, r0, r1
   1174c:	str	r0, [sp, #84]	; 0x54
   11750:	ldr	r0, [sp, #84]	; 0x54
   11754:	and	r0, r0, #1
   11758:	movw	r1, #8541	; 0x215d
   1175c:	movt	r1, #3
   11760:	strb	r0, [r1]
   11764:	movw	r0, #8538	; 0x215a
   11768:	movt	r0, #3
   1176c:	ldrb	r1, [r0]
   11770:	and	r1, r1, #1
   11774:	movw	r2, #8539	; 0x215b
   11778:	movt	r2, #3
   1177c:	ldrb	r3, [r2]
   11780:	and	r3, r3, #1
   11784:	cmp	r1, r3
   11788:	movw	r1, #0
   1178c:	moveq	r1, #1
   11790:	and	r1, r1, #1
   11794:	add	r1, r1, #1
   11798:	str	r1, [fp, #-32]	; 0xffffffe0
   1179c:	ldrb	r0, [r0]
   117a0:	and	r0, r0, #1
   117a4:	ldrb	r1, [r2]
   117a8:	and	r1, r1, #1
   117ac:	cmp	r0, r1
   117b0:	movw	r0, #0
   117b4:	movle	r0, #1
   117b8:	and	r0, r0, #1
   117bc:	add	r0, r0, #1
   117c0:	str	r0, [fp, #-36]	; 0xffffffdc
   117c4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   117c8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   117cc:	cmp	r0, r1
   117d0:	bge	118b0 <__assert_fail@plt+0x810>
   117d4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   117d8:	cmp	r0, #0
   117dc:	bne	11808 <__assert_fail@plt+0x768>
   117e0:	movw	r0, #2102	; 0x836
   117e4:	movt	r0, #2
   117e8:	bl	10fa4 <gettext@plt>
   117ec:	movw	lr, #0
   117f0:	str	r0, [sp, #80]	; 0x50
   117f4:	mov	r0, lr
   117f8:	mov	r1, lr
   117fc:	ldr	r2, [sp, #80]	; 0x50
   11800:	bl	10f44 <error@plt>
   11804:	b	118a8 <__assert_fail@plt+0x808>
   11808:	movw	r0, #2118	; 0x846
   1180c:	movt	r0, #2
   11810:	bl	10fa4 <gettext@plt>
   11814:	ldr	lr, [fp, #-20]	; 0xffffffec
   11818:	ldr	r1, [fp, #-16]
   1181c:	sub	r1, r1, #1
   11820:	add	r1, lr, r1, lsl #2
   11824:	ldr	r1, [r1]
   11828:	str	r0, [sp, #76]	; 0x4c
   1182c:	mov	r0, r1
   11830:	bl	17bd0 <__assert_fail@plt+0x6b30>
   11834:	movw	r1, #0
   11838:	str	r0, [sp, #72]	; 0x48
   1183c:	mov	r0, r1
   11840:	ldr	r2, [sp, #76]	; 0x4c
   11844:	ldr	r3, [sp, #72]	; 0x48
   11848:	bl	10f44 <error@plt>
   1184c:	movw	r0, #8520	; 0x2148
   11850:	movt	r0, #3
   11854:	ldr	r0, [r0]
   11858:	movw	r1, #8539	; 0x215b
   1185c:	movt	r1, #3
   11860:	ldrb	r1, [r1]
   11864:	tst	r1, #1
   11868:	movw	r1, #2211	; 0x8a3
   1186c:	movt	r1, #2
   11870:	movw	r2, #2143	; 0x85f
   11874:	movt	r2, #2
   11878:	movne	r1, r2
   1187c:	str	r0, [sp, #68]	; 0x44
   11880:	mov	r0, r1
   11884:	bl	10fa4 <gettext@plt>
   11888:	ldr	r1, [sp, #68]	; 0x44
   1188c:	str	r0, [sp, #64]	; 0x40
   11890:	mov	r0, r1
   11894:	movw	r1, #5432	; 0x1538
   11898:	movt	r1, #2
   1189c:	ldr	r2, [sp, #64]	; 0x40
   118a0:	bl	10fc8 <fprintf@plt>
   118a4:	str	r0, [sp, #60]	; 0x3c
   118a8:	movw	r0, #1
   118ac:	bl	1119c <__assert_fail@plt+0xfc>
   118b0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   118b4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   118b8:	cmp	r0, r1
   118bc:	bge	11964 <__assert_fail@plt+0x8c4>
   118c0:	movw	r0, #2255	; 0x8cf
   118c4:	movt	r0, #2
   118c8:	bl	10fa4 <gettext@plt>
   118cc:	ldr	lr, [fp, #-20]	; 0xffffffec
   118d0:	movw	r1, #8512	; 0x2140
   118d4:	movt	r1, #3
   118d8:	ldr	r1, [r1]
   118dc:	ldr	r2, [fp, #-36]	; 0xffffffdc
   118e0:	add	r1, r1, r2
   118e4:	add	r1, lr, r1, lsl #2
   118e8:	ldr	r1, [r1]
   118ec:	str	r0, [sp, #56]	; 0x38
   118f0:	mov	r0, r1
   118f4:	bl	17bd0 <__assert_fail@plt+0x6b30>
   118f8:	movw	r1, #0
   118fc:	str	r0, [sp, #52]	; 0x34
   11900:	mov	r0, r1
   11904:	ldr	r2, [sp, #56]	; 0x38
   11908:	ldr	r3, [sp, #52]	; 0x34
   1190c:	bl	10f44 <error@plt>
   11910:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11914:	cmp	r0, #2
   11918:	bne	1195c <__assert_fail@plt+0x8bc>
   1191c:	movw	r0, #8520	; 0x2148
   11920:	movt	r0, #3
   11924:	ldr	r0, [r0]
   11928:	movw	r1, #2272	; 0x8e0
   1192c:	movt	r1, #2
   11930:	str	r0, [sp, #48]	; 0x30
   11934:	mov	r0, r1
   11938:	bl	10fa4 <gettext@plt>
   1193c:	ldr	r1, [sp, #48]	; 0x30
   11940:	str	r0, [sp, #44]	; 0x2c
   11944:	mov	r0, r1
   11948:	movw	r1, #5432	; 0x1538
   1194c:	movt	r1, #2
   11950:	ldr	r2, [sp, #44]	; 0x2c
   11954:	bl	10fc8 <fprintf@plt>
   11958:	str	r0, [sp, #40]	; 0x28
   1195c:	movw	r0, #1
   11960:	bl	1119c <__assert_fail@plt+0xfc>
   11964:	ldr	r0, [fp, #-124]	; 0xffffff84
   11968:	bl	12088 <__assert_fail@plt+0xfe8>
   1196c:	ldr	r0, [fp, #-20]	; 0xffffffec
   11970:	movw	lr, #8512	; 0x2140
   11974:	movt	lr, #3
   11978:	ldr	lr, [lr]
   1197c:	add	r0, r0, lr, lsl #2
   11980:	ldr	r0, [r0]
   11984:	ldr	r1, [fp, #-124]	; 0xffffff84
   11988:	bl	120d0 <__assert_fail@plt+0x1030>
   1198c:	tst	r0, #1
   11990:	bne	119a0 <__assert_fail@plt+0x900>
   11994:	movw	r0, #1
   11998:	str	r0, [fp, #-12]
   1199c:	b	1207c <__assert_fail@plt+0xfdc>
   119a0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   119a4:	cmp	r0, #2
   119a8:	bne	119f0 <__assert_fail@plt+0x950>
   119ac:	ldr	r0, [fp, #-128]	; 0xffffff80
   119b0:	bl	12088 <__assert_fail@plt+0xfe8>
   119b4:	ldr	r0, [fp, #-20]	; 0xffffffec
   119b8:	movw	lr, #8512	; 0x2140
   119bc:	movt	lr, #3
   119c0:	ldr	lr, [lr]
   119c4:	add	lr, lr, #1
   119c8:	add	r0, r0, lr, lsl #2
   119cc:	ldr	r0, [r0]
   119d0:	ldr	r1, [fp, #-128]	; 0xffffff80
   119d4:	bl	120d0 <__assert_fail@plt+0x1030>
   119d8:	tst	r0, #1
   119dc:	bne	119ec <__assert_fail@plt+0x94c>
   119e0:	movw	r0, #1
   119e4:	str	r0, [fp, #-12]
   119e8:	b	1207c <__assert_fail@plt+0xfdc>
   119ec:	b	119f8 <__assert_fail@plt+0x958>
   119f0:	movw	r0, #0
   119f4:	str	r0, [fp, #-128]	; 0xffffff80
   119f8:	ldr	r0, [fp, #-124]	; 0xffffff84
   119fc:	ldr	r1, [fp, #-128]	; 0xffffff80
   11a00:	bl	12134 <__assert_fail@plt+0x1094>
   11a04:	movw	r0, #0
   11a08:	str	r0, [sp, #36]	; 0x24
   11a0c:	ldr	r1, [sp, #36]	; 0x24
   11a10:	bl	1b4fc <__assert_fail@plt+0xa45c>
   11a14:	movw	r0, #1
   11a18:	movw	r1, #0
   11a1c:	bl	1b4fc <__assert_fail@plt+0xa45c>
   11a20:	movw	r0, #8528	; 0x2150
   11a24:	movt	r0, #3
   11a28:	ldr	r0, [r0]
   11a2c:	movw	r1, #2
   11a30:	bl	154dc <__assert_fail@plt+0x443c>
   11a34:	movw	r0, #8539	; 0x215b
   11a38:	movt	r0, #3
   11a3c:	ldrb	r0, [r0]
   11a40:	tst	r0, #1
   11a44:	beq	11a90 <__assert_fail@plt+0x9f0>
   11a48:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11a4c:	cmp	r0, #1
   11a50:	bne	11a90 <__assert_fail@plt+0x9f0>
   11a54:	ldr	r0, [fp, #-124]	; 0xffffff84
   11a58:	movw	r1, #8537	; 0x2159
   11a5c:	movt	r1, #3
   11a60:	ldrb	r1, [r1]
   11a64:	and	r1, r1, #1
   11a68:	movw	r2, #8542	; 0x215e
   11a6c:	movt	r2, #3
   11a70:	bl	123c8 <__assert_fail@plt+0x1328>
   11a74:	movw	r0, #8798	; 0x225e
   11a78:	movt	r0, #3
   11a7c:	movw	r1, #8192	; 0x2000
   11a80:	movw	r2, #10120	; 0x2788
   11a84:	movt	r2, #1
   11a88:	bl	12490 <__assert_fail@plt+0x13f0>
   11a8c:	b	12034 <__assert_fail@plt+0xf94>
   11a90:	movw	r0, #8538	; 0x215a
   11a94:	movt	r0, #3
   11a98:	ldrb	r0, [r0]
   11a9c:	tst	r0, #1
   11aa0:	beq	11b58 <__assert_fail@plt+0xab8>
   11aa4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11aa8:	cmp	r0, #1
   11aac:	bne	11b58 <__assert_fail@plt+0xab8>
   11ab0:	ldr	r0, [fp, #-124]	; 0xffffff84
   11ab4:	movw	r1, #8537	; 0x2159
   11ab8:	movt	r1, #3
   11abc:	ldrb	r1, [r1]
   11ac0:	and	r1, r1, #1
   11ac4:	movw	r2, #16990	; 0x425e
   11ac8:	movt	r2, #3
   11acc:	bl	123c8 <__assert_fail@plt+0x1328>
   11ad0:	movw	r0, #8798	; 0x225e
   11ad4:	movt	r0, #3
   11ad8:	movw	r1, #8192	; 0x2000
   11adc:	bl	127f8 <__assert_fail@plt+0x1758>
   11ae0:	str	r0, [fp, #-132]	; 0xffffff7c
   11ae4:	ldr	r0, [fp, #-132]	; 0xffffff7c
   11ae8:	cmp	r0, #0
   11aec:	bne	11af4 <__assert_fail@plt+0xa54>
   11af0:	b	11b54 <__assert_fail@plt+0xab4>
   11af4:	ldr	r2, [fp, #-132]	; 0xffffff7c
   11af8:	movw	r0, #8532	; 0x2154
   11afc:	movt	r0, #3
   11b00:	ldr	r3, [r0]
   11b04:	movw	r0, #8798	; 0x225e
   11b08:	movt	r0, #3
   11b0c:	movw	r1, #1
   11b10:	bl	10ec0 <fwrite_unlocked@plt>
   11b14:	ldr	r1, [fp, #-132]	; 0xffffff7c
   11b18:	cmp	r0, r1
   11b1c:	beq	11b50 <__assert_fail@plt+0xab0>
   11b20:	bl	10fd4 <__errno_location@plt>
   11b24:	ldr	r1, [r0]
   11b28:	movw	r0, #2342	; 0x926
   11b2c:	movt	r0, #2
   11b30:	str	r1, [sp, #32]
   11b34:	bl	10fa4 <gettext@plt>
   11b38:	movw	r1, #1
   11b3c:	str	r0, [sp, #28]
   11b40:	mov	r0, r1
   11b44:	ldr	r1, [sp, #32]
   11b48:	ldr	r2, [sp, #28]
   11b4c:	bl	10f44 <error@plt>
   11b50:	b	11ad0 <__assert_fail@plt+0xa30>
   11b54:	b	12030 <__assert_fail@plt+0xf90>
   11b58:	movw	r0, #8539	; 0x215b
   11b5c:	movt	r0, #3
   11b60:	ldrb	r0, [r0]
   11b64:	tst	r0, #1
   11b68:	beq	11be0 <__assert_fail@plt+0xb40>
   11b6c:	movw	r0, #8538	; 0x215a
   11b70:	movt	r0, #3
   11b74:	ldrb	r0, [r0]
   11b78:	tst	r0, #1
   11b7c:	beq	11be0 <__assert_fail@plt+0xb40>
   11b80:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11b84:	cmp	r0, #2
   11b88:	bne	11be0 <__assert_fail@plt+0xb40>
   11b8c:	ldr	r0, [fp, #-124]	; 0xffffff84
   11b90:	movw	r1, #8537	; 0x2159
   11b94:	movt	r1, #3
   11b98:	ldrb	r1, [r1]
   11b9c:	and	r1, r1, #1
   11ba0:	movw	r2, #16990	; 0x425e
   11ba4:	movt	r2, #3
   11ba8:	bl	123c8 <__assert_fail@plt+0x1328>
   11bac:	ldr	r0, [fp, #-128]	; 0xffffff80
   11bb0:	movw	r1, #0
   11bb4:	and	r1, r1, #1
   11bb8:	movw	r2, #8542	; 0x215e
   11bbc:	movt	r2, #3
   11bc0:	bl	123c8 <__assert_fail@plt+0x1328>
   11bc4:	movw	r0, #8798	; 0x225e
   11bc8:	movt	r0, #3
   11bcc:	movw	r1, #8192	; 0x2000
   11bd0:	movw	r2, #10232	; 0x27f8
   11bd4:	movt	r2, #1
   11bd8:	bl	12490 <__assert_fail@plt+0x13f0>
   11bdc:	b	1202c <__assert_fail@plt+0xf8c>
   11be0:	movw	r0, #8541	; 0x215d
   11be4:	movt	r0, #3
   11be8:	ldrb	r0, [r0]
   11bec:	tst	r0, #1
   11bf0:	beq	12028 <__assert_fail@plt+0xf88>
   11bf4:	movw	r0, #8537	; 0x2159
   11bf8:	movt	r0, #3
   11bfc:	ldrb	r0, [r0]
   11c00:	tst	r0, #1
   11c04:	beq	11d34 <__assert_fail@plt+0xc94>
   11c08:	movw	r0, #16990	; 0x425e
   11c0c:	movt	r0, #3
   11c10:	str	r0, [fp, #-136]	; 0xffffff78
   11c14:	ldr	r0, [fp, #-124]	; 0xffffff84
   11c18:	ldr	r2, [fp, #-136]	; 0xffffff78
   11c1c:	mov	r1, #0
   11c20:	bl	123c8 <__assert_fail@plt+0x1328>
   11c24:	ldr	r0, [fp, #-128]	; 0xffffff80
   11c28:	mvn	r1, #0
   11c2c:	str	r1, [r0, #12]
   11c30:	mvn	r1, #1
   11c34:	str	r1, [r0, #8]
   11c38:	movw	r0, #0
   11c3c:	str	r0, [fp, #-140]	; 0xffffff74
   11c40:	ldr	r0, [fp, #-140]	; 0xffffff74
   11c44:	cmp	r0, #256	; 0x100
   11c48:	bge	11c74 <__assert_fail@plt+0xbd4>
   11c4c:	ldr	r0, [fp, #-140]	; 0xffffff74
   11c50:	ldr	r1, [fp, #-140]	; 0xffffff74
   11c54:	movw	r2, #17246	; 0x435e
   11c58:	movt	r2, #3
   11c5c:	add	r1, r2, r1
   11c60:	strb	r0, [r1]
   11c64:	ldr	r0, [fp, #-140]	; 0xffffff74
   11c68:	add	r0, r0, #1
   11c6c:	str	r0, [fp, #-140]	; 0xffffff74
   11c70:	b	11c40 <__assert_fail@plt+0xba0>
   11c74:	movw	r0, #0
   11c78:	str	r0, [fp, #-144]	; 0xffffff70
   11c7c:	ldr	r0, [fp, #-144]	; 0xffffff70
   11c80:	cmp	r0, #256	; 0x100
   11c84:	bge	11d30 <__assert_fail@plt+0xc90>
   11c88:	ldr	r0, [fp, #-136]	; 0xffffff78
   11c8c:	ldr	r1, [fp, #-144]	; 0xffffff70
   11c90:	add	r0, r0, r1
   11c94:	ldrb	r0, [r0]
   11c98:	tst	r0, #1
   11c9c:	bne	11d1c <__assert_fail@plt+0xc7c>
   11ca0:	ldr	r0, [fp, #-128]	; 0xffffff80
   11ca4:	movw	r1, #0
   11ca8:	bl	1295c <__assert_fail@plt+0x18bc>
   11cac:	str	r0, [sp, #148]	; 0x94
   11cb0:	ldr	r0, [sp, #148]	; 0x94
   11cb4:	cmn	r0, #1
   11cb8:	bne	11cd0 <__assert_fail@plt+0xc30>
   11cbc:	movw	r0, #8540	; 0x215c
   11cc0:	movt	r0, #3
   11cc4:	ldrb	r0, [r0]
   11cc8:	tst	r0, #1
   11ccc:	beq	11cd4 <__assert_fail@plt+0xc34>
   11cd0:	b	11cf4 <__assert_fail@plt+0xc54>
   11cd4:	movw	r0, #2354	; 0x932
   11cd8:	movt	r0, #2
   11cdc:	movw	r1, #2380	; 0x94c
   11ce0:	movt	r1, #2
   11ce4:	movw	r2, #1840	; 0x730
   11ce8:	movw	r3, #2389	; 0x955
   11cec:	movt	r3, #2
   11cf0:	bl	110a0 <__assert_fail@plt>
   11cf4:	ldr	r0, [sp, #148]	; 0x94
   11cf8:	cmn	r0, #1
   11cfc:	bne	11d04 <__assert_fail@plt+0xc64>
   11d00:	b	11d30 <__assert_fail@plt+0xc90>
   11d04:	ldr	r0, [sp, #148]	; 0x94
   11d08:	ldr	r1, [fp, #-144]	; 0xffffff70
   11d0c:	movw	r2, #17246	; 0x435e
   11d10:	movt	r2, #3
   11d14:	add	r1, r2, r1
   11d18:	strb	r0, [r1]
   11d1c:	b	11d20 <__assert_fail@plt+0xc80>
   11d20:	ldr	r0, [fp, #-144]	; 0xffffff70
   11d24:	add	r0, r0, #1
   11d28:	str	r0, [fp, #-144]	; 0xffffff70
   11d2c:	b	11c7c <__assert_fail@plt+0xbdc>
   11d30:	b	11f50 <__assert_fail@plt+0xeb0>
   11d34:	movw	r0, #0
   11d38:	str	r0, [sp, #128]	; 0x80
   11d3c:	ldr	r0, [sp, #128]	; 0x80
   11d40:	cmp	r0, #256	; 0x100
   11d44:	bge	11d70 <__assert_fail@plt+0xcd0>
   11d48:	ldr	r0, [sp, #128]	; 0x80
   11d4c:	ldr	r1, [sp, #128]	; 0x80
   11d50:	movw	r2, #17246	; 0x435e
   11d54:	movt	r2, #3
   11d58:	add	r1, r2, r1
   11d5c:	strb	r0, [r1]
   11d60:	ldr	r0, [sp, #128]	; 0x80
   11d64:	add	r0, r0, #1
   11d68:	str	r0, [sp, #128]	; 0x80
   11d6c:	b	11d3c <__assert_fail@plt+0xc9c>
   11d70:	ldr	r0, [fp, #-124]	; 0xffffff84
   11d74:	mvn	r1, #0
   11d78:	str	r1, [r0, #12]
   11d7c:	mvn	r2, #1
   11d80:	str	r2, [r0, #8]
   11d84:	ldr	r0, [fp, #-128]	; 0xffffff80
   11d88:	str	r1, [r0, #12]
   11d8c:	str	r2, [r0, #8]
   11d90:	ldr	r0, [fp, #-124]	; 0xffffff84
   11d94:	add	r1, sp, #136	; 0x88
   11d98:	bl	1295c <__assert_fail@plt+0x18bc>
   11d9c:	str	r0, [sp, #144]	; 0x90
   11da0:	ldr	r0, [fp, #-128]	; 0xffffff80
   11da4:	add	r1, sp, #132	; 0x84
   11da8:	bl	1295c <__assert_fail@plt+0x18bc>
   11dac:	str	r0, [sp, #140]	; 0x8c
   11db0:	ldr	r0, [sp, #136]	; 0x88
   11db4:	cmp	r0, #0
   11db8:	bne	11e30 <__assert_fail@plt+0xd90>
   11dbc:	ldr	r0, [sp, #132]	; 0x84
   11dc0:	cmp	r0, #1
   11dc4:	bne	11e30 <__assert_fail@plt+0xd90>
   11dc8:	movw	r0, #0
   11dcc:	str	r0, [sp, #124]	; 0x7c
   11dd0:	ldr	r0, [sp, #124]	; 0x7c
   11dd4:	cmp	r0, #256	; 0x100
   11dd8:	bge	11e2c <__assert_fail@plt+0xd8c>
   11ddc:	bl	10f8c <__ctype_b_loc@plt>
   11de0:	ldr	r0, [r0]
   11de4:	ldr	lr, [sp, #124]	; 0x7c
   11de8:	add	r0, r0, lr, lsl #1
   11dec:	ldrh	r0, [r0]
   11df0:	and	r0, r0, #512	; 0x200
   11df4:	cmp	r0, #0
   11df8:	beq	11e18 <__assert_fail@plt+0xd78>
   11dfc:	ldr	r0, [sp, #124]	; 0x7c
   11e00:	bl	11034 <toupper@plt>
   11e04:	ldr	lr, [sp, #124]	; 0x7c
   11e08:	movw	r1, #17246	; 0x435e
   11e0c:	movt	r1, #3
   11e10:	add	r1, r1, lr
   11e14:	strb	r0, [r1]
   11e18:	b	11e1c <__assert_fail@plt+0xd7c>
   11e1c:	ldr	r0, [sp, #124]	; 0x7c
   11e20:	add	r0, r0, #1
   11e24:	str	r0, [sp, #124]	; 0x7c
   11e28:	b	11dd0 <__assert_fail@plt+0xd30>
   11e2c:	b	11ee8 <__assert_fail@plt+0xe48>
   11e30:	ldr	r0, [sp, #136]	; 0x88
   11e34:	cmp	r0, #1
   11e38:	bne	11eb0 <__assert_fail@plt+0xe10>
   11e3c:	ldr	r0, [sp, #132]	; 0x84
   11e40:	cmp	r0, #0
   11e44:	bne	11eb0 <__assert_fail@plt+0xe10>
   11e48:	movw	r0, #0
   11e4c:	str	r0, [sp, #120]	; 0x78
   11e50:	ldr	r0, [sp, #120]	; 0x78
   11e54:	cmp	r0, #256	; 0x100
   11e58:	bge	11eac <__assert_fail@plt+0xe0c>
   11e5c:	bl	10f8c <__ctype_b_loc@plt>
   11e60:	ldr	r0, [r0]
   11e64:	ldr	lr, [sp, #120]	; 0x78
   11e68:	add	r0, r0, lr, lsl #1
   11e6c:	ldrh	r0, [r0]
   11e70:	and	r0, r0, #256	; 0x100
   11e74:	cmp	r0, #0
   11e78:	beq	11e98 <__assert_fail@plt+0xdf8>
   11e7c:	ldr	r0, [sp, #120]	; 0x78
   11e80:	bl	10ea8 <tolower@plt>
   11e84:	ldr	lr, [sp, #120]	; 0x78
   11e88:	movw	r1, #17246	; 0x435e
   11e8c:	movt	r1, #3
   11e90:	add	r1, r1, lr
   11e94:	strb	r0, [r1]
   11e98:	b	11e9c <__assert_fail@plt+0xdfc>
   11e9c:	ldr	r0, [sp, #120]	; 0x78
   11ea0:	add	r0, r0, #1
   11ea4:	str	r0, [sp, #120]	; 0x78
   11ea8:	b	11e50 <__assert_fail@plt+0xdb0>
   11eac:	b	11ee4 <__assert_fail@plt+0xe44>
   11eb0:	ldr	r0, [sp, #144]	; 0x90
   11eb4:	cmn	r0, #1
   11eb8:	beq	11ec8 <__assert_fail@plt+0xe28>
   11ebc:	ldr	r0, [sp, #140]	; 0x8c
   11ec0:	cmn	r0, #1
   11ec4:	bne	11ecc <__assert_fail@plt+0xe2c>
   11ec8:	b	11f08 <__assert_fail@plt+0xe68>
   11ecc:	ldr	r0, [sp, #140]	; 0x8c
   11ed0:	ldr	r1, [sp, #144]	; 0x90
   11ed4:	movw	r2, #17246	; 0x435e
   11ed8:	movt	r2, #3
   11edc:	add	r1, r2, r1
   11ee0:	strb	r0, [r1]
   11ee4:	b	11ee8 <__assert_fail@plt+0xe48>
   11ee8:	ldr	r0, [sp, #132]	; 0x84
   11eec:	cmp	r0, #2
   11ef0:	beq	11f04 <__assert_fail@plt+0xe64>
   11ef4:	ldr	r0, [fp, #-124]	; 0xffffff84
   11ef8:	bl	12e44 <__assert_fail@plt+0x1da4>
   11efc:	ldr	r0, [fp, #-128]	; 0xffffff80
   11f00:	bl	12e44 <__assert_fail@plt+0x1da4>
   11f04:	b	11d90 <__assert_fail@plt+0xcf0>
   11f08:	ldr	r0, [sp, #144]	; 0x90
   11f0c:	cmn	r0, #1
   11f10:	beq	11f28 <__assert_fail@plt+0xe88>
   11f14:	movw	r0, #8540	; 0x215c
   11f18:	movt	r0, #3
   11f1c:	ldrb	r0, [r0]
   11f20:	tst	r0, #1
   11f24:	beq	11f2c <__assert_fail@plt+0xe8c>
   11f28:	b	11f4c <__assert_fail@plt+0xeac>
   11f2c:	movw	r0, #2412	; 0x96c
   11f30:	movt	r0, #2
   11f34:	movw	r1, #2380	; 0x94c
   11f38:	movt	r1, #2
   11f3c:	movw	r2, #1893	; 0x765
   11f40:	movw	r3, #2389	; 0x955
   11f44:	movt	r3, #2
   11f48:	bl	110a0 <__assert_fail@plt>
   11f4c:	b	11f50 <__assert_fail@plt+0xeb0>
   11f50:	movw	r0, #8539	; 0x215b
   11f54:	movt	r0, #3
   11f58:	ldrb	r0, [r0]
   11f5c:	tst	r0, #1
   11f60:	beq	11f98 <__assert_fail@plt+0xef8>
   11f64:	ldr	r0, [fp, #-128]	; 0xffffff80
   11f68:	movw	r1, #0
   11f6c:	and	r1, r1, #1
   11f70:	movw	r2, #8542	; 0x215e
   11f74:	movt	r2, #3
   11f78:	bl	123c8 <__assert_fail@plt+0x1328>
   11f7c:	movw	r0, #8798	; 0x225e
   11f80:	movt	r0, #3
   11f84:	movw	r1, #8192	; 0x2000
   11f88:	movw	r2, #11892	; 0x2e74
   11f8c:	movt	r2, #1
   11f90:	bl	12490 <__assert_fail@plt+0x13f0>
   11f94:	b	12024 <__assert_fail@plt+0xf84>
   11f98:	b	11f9c <__assert_fail@plt+0xefc>
   11f9c:	movw	r0, #8798	; 0x225e
   11fa0:	movt	r0, #3
   11fa4:	movw	r1, #8192	; 0x2000
   11fa8:	bl	12e74 <__assert_fail@plt+0x1dd4>
   11fac:	str	r0, [sp, #116]	; 0x74
   11fb0:	ldr	r0, [sp, #116]	; 0x74
   11fb4:	cmp	r0, #0
   11fb8:	bne	11fc0 <__assert_fail@plt+0xf20>
   11fbc:	b	12020 <__assert_fail@plt+0xf80>
   11fc0:	ldr	r2, [sp, #116]	; 0x74
   11fc4:	movw	r0, #8532	; 0x2154
   11fc8:	movt	r0, #3
   11fcc:	ldr	r3, [r0]
   11fd0:	movw	r0, #8798	; 0x225e
   11fd4:	movt	r0, #3
   11fd8:	movw	r1, #1
   11fdc:	bl	10ec0 <fwrite_unlocked@plt>
   11fe0:	ldr	r1, [sp, #116]	; 0x74
   11fe4:	cmp	r0, r1
   11fe8:	beq	1201c <__assert_fail@plt+0xf7c>
   11fec:	bl	10fd4 <__errno_location@plt>
   11ff0:	ldr	r1, [r0]
   11ff4:	movw	r0, #2342	; 0x926
   11ff8:	movt	r0, #2
   11ffc:	str	r1, [sp, #24]
   12000:	bl	10fa4 <gettext@plt>
   12004:	movw	r1, #1
   12008:	str	r0, [sp, #20]
   1200c:	mov	r0, r1
   12010:	ldr	r1, [sp, #24]
   12014:	ldr	r2, [sp, #20]
   12018:	bl	10f44 <error@plt>
   1201c:	b	11f9c <__assert_fail@plt+0xefc>
   12020:	b	12024 <__assert_fail@plt+0xf84>
   12024:	b	12028 <__assert_fail@plt+0xf88>
   12028:	b	1202c <__assert_fail@plt+0xf8c>
   1202c:	b	12030 <__assert_fail@plt+0xf90>
   12030:	b	12034 <__assert_fail@plt+0xf94>
   12034:	movw	r0, #0
   12038:	bl	11094 <close@plt>
   1203c:	cmp	r0, #0
   12040:	beq	12074 <__assert_fail@plt+0xfd4>
   12044:	bl	10fd4 <__errno_location@plt>
   12048:	ldr	r1, [r0]
   1204c:	movw	r0, #2438	; 0x986
   12050:	movt	r0, #2
   12054:	str	r1, [sp, #16]
   12058:	bl	10fa4 <gettext@plt>
   1205c:	movw	r1, #1
   12060:	str	r0, [sp, #12]
   12064:	mov	r0, r1
   12068:	ldr	r1, [sp, #16]
   1206c:	ldr	r2, [sp, #12]
   12070:	bl	10f44 <error@plt>
   12074:	movw	r0, #0
   12078:	str	r0, [fp, #-12]
   1207c:	ldr	r0, [fp, #-12]
   12080:	sub	sp, fp, #8
   12084:	pop	{r4, r5, fp, pc}
   12088:	push	{fp, lr}
   1208c:	mov	fp, sp
   12090:	sub	sp, sp, #8
   12094:	str	r0, [sp, #4]
   12098:	movw	r0, #24
   1209c:	bl	186cc <__assert_fail@plt+0x762c>
   120a0:	str	r0, [sp]
   120a4:	ldr	r0, [sp]
   120a8:	ldr	lr, [sp, #4]
   120ac:	str	r0, [lr, #4]
   120b0:	ldr	lr, [sp, #4]
   120b4:	str	r0, [lr]
   120b8:	ldr	r0, [sp, #4]
   120bc:	ldr	r0, [r0]
   120c0:	movw	lr, #0
   120c4:	str	lr, [r0, #4]
   120c8:	mov	sp, fp
   120cc:	pop	{fp, pc}
   120d0:	push	{fp, lr}
   120d4:	mov	fp, sp
   120d8:	sub	sp, sp, #32
   120dc:	str	r0, [fp, #-4]
   120e0:	str	r1, [fp, #-8]
   120e4:	ldr	r0, [fp, #-4]
   120e8:	add	r1, sp, #12
   120ec:	bl	12f04 <__assert_fail@plt+0x1e64>
   120f0:	tst	r0, #1
   120f4:	movw	r0, #0
   120f8:	str	r0, [sp, #4]
   120fc:	beq	12110 <__assert_fail@plt+0x1070>
   12100:	ldr	r1, [fp, #-8]
   12104:	add	r0, sp, #12
   12108:	bl	134c8 <__assert_fail@plt+0x2428>
   1210c:	str	r0, [sp, #4]
   12110:	ldr	r0, [sp, #4]
   12114:	and	r0, r0, #1
   12118:	strb	r0, [sp, #11]
   1211c:	add	r0, sp, #12
   12120:	bl	13930 <__assert_fail@plt+0x2890>
   12124:	ldrb	r0, [sp, #11]
   12128:	and	r0, r0, #1
   1212c:	mov	sp, fp
   12130:	pop	{fp, pc}
   12134:	push	{fp, lr}
   12138:	mov	fp, sp
   1213c:	sub	sp, sp, #48	; 0x30
   12140:	str	r0, [fp, #-4]
   12144:	str	r1, [fp, #-8]
   12148:	ldr	r0, [fp, #-4]
   1214c:	bl	145a8 <__assert_fail@plt+0x3508>
   12150:	ldr	r0, [fp, #-4]
   12154:	ldr	r0, [r0, #24]
   12158:	cmp	r0, #0
   1215c:	bls	12184 <__assert_fail@plt+0x10e4>
   12160:	movw	r0, #3818	; 0xeea
   12164:	movt	r0, #2
   12168:	bl	10fa4 <gettext@plt>
   1216c:	movw	lr, #1
   12170:	str	r0, [fp, #-12]
   12174:	mov	r0, lr
   12178:	movw	r1, #0
   1217c:	ldr	r2, [fp, #-12]
   12180:	bl	10f44 <error@plt>
   12184:	ldr	r0, [fp, #-8]
   12188:	movw	r1, #0
   1218c:	cmp	r0, r1
   12190:	beq	123c0 <__assert_fail@plt+0x1320>
   12194:	ldr	r0, [fp, #-8]
   12198:	ldr	r1, [fp, #-4]
   1219c:	ldr	r2, [r1, #16]
   121a0:	ldr	r3, [r1, #20]
   121a4:	bl	145f4 <__assert_fail@plt+0x3554>
   121a8:	ldr	r0, [fp, #-8]
   121ac:	ldr	r0, [r0, #24]
   121b0:	cmp	r0, #1
   121b4:	bls	121dc <__assert_fail@plt+0x113c>
   121b8:	movw	r0, #3870	; 0xf1e
   121bc:	movt	r0, #2
   121c0:	bl	10fa4 <gettext@plt>
   121c4:	movw	lr, #1
   121c8:	str	r0, [fp, #-16]
   121cc:	mov	r0, lr
   121d0:	movw	r1, #0
   121d4:	ldr	r2, [fp, #-16]
   121d8:	bl	10f44 <error@plt>
   121dc:	movw	r0, #8541	; 0x215d
   121e0:	movt	r0, #3
   121e4:	ldrb	r0, [r0]
   121e8:	tst	r0, #1
   121ec:	beq	12384 <__assert_fail@plt+0x12e4>
   121f0:	ldr	r0, [fp, #-8]
   121f4:	ldrb	r0, [r0, #32]
   121f8:	tst	r0, #1
   121fc:	beq	12224 <__assert_fail@plt+0x1184>
   12200:	movw	r0, #3923	; 0xf53
   12204:	movt	r0, #2
   12208:	bl	10fa4 <gettext@plt>
   1220c:	movw	lr, #1
   12210:	str	r0, [fp, #-20]	; 0xffffffec
   12214:	mov	r0, lr
   12218:	movw	r1, #0
   1221c:	ldr	r2, [fp, #-20]	; 0xffffffec
   12220:	bl	10f44 <error@plt>
   12224:	ldr	r0, [fp, #-8]
   12228:	ldrb	r0, [r0, #34]	; 0x22
   1222c:	tst	r0, #1
   12230:	beq	12258 <__assert_fail@plt+0x11b8>
   12234:	movw	r0, #3984	; 0xf90
   12238:	movt	r0, #2
   1223c:	bl	10fa4 <gettext@plt>
   12240:	movw	lr, #1
   12244:	str	r0, [sp, #24]
   12248:	mov	r0, lr
   1224c:	movw	r1, #0
   12250:	ldr	r2, [sp, #24]
   12254:	bl	10f44 <error@plt>
   12258:	ldr	r0, [fp, #-4]
   1225c:	ldr	r1, [fp, #-8]
   12260:	bl	14694 <__assert_fail@plt+0x35f4>
   12264:	ldr	r0, [fp, #-4]
   12268:	ldr	r1, [r0, #16]
   1226c:	ldr	r0, [r0, #20]
   12270:	ldr	lr, [fp, #-8]
   12274:	ldr	r2, [lr, #16]
   12278:	ldr	lr, [lr, #20]
   1227c:	subs	r1, r2, r1
   12280:	sbcs	r0, lr, r0
   12284:	str	r1, [sp, #20]
   12288:	str	r0, [sp, #16]
   1228c:	bcs	122f8 <__assert_fail@plt+0x1258>
   12290:	b	12294 <__assert_fail@plt+0x11f4>
   12294:	movw	r0, #8540	; 0x215c
   12298:	movt	r0, #3
   1229c:	ldrb	r0, [r0]
   122a0:	tst	r0, #1
   122a4:	bne	122f4 <__assert_fail@plt+0x1254>
   122a8:	ldr	r0, [fp, #-8]
   122ac:	ldr	r1, [r0, #16]
   122b0:	ldr	r0, [r0, #20]
   122b4:	orr	r0, r1, r0
   122b8:	cmp	r0, #0
   122bc:	bne	122e8 <__assert_fail@plt+0x1248>
   122c0:	b	122c4 <__assert_fail@plt+0x1224>
   122c4:	movw	r0, #4080	; 0xff0
   122c8:	movt	r0, #2
   122cc:	bl	10fa4 <gettext@plt>
   122d0:	movw	lr, #1
   122d4:	str	r0, [sp, #12]
   122d8:	mov	r0, lr
   122dc:	movw	r1, #0
   122e0:	ldr	r2, [sp, #12]
   122e4:	bl	10f44 <error@plt>
   122e8:	ldr	r0, [fp, #-4]
   122ec:	ldr	r1, [fp, #-8]
   122f0:	bl	14a00 <__assert_fail@plt+0x3960>
   122f4:	b	122f8 <__assert_fail@plt+0x1258>
   122f8:	movw	r0, #8537	; 0x2159
   122fc:	movt	r0, #3
   12300:	ldrb	r0, [r0]
   12304:	tst	r0, #1
   12308:	beq	12380 <__assert_fail@plt+0x12e0>
   1230c:	ldr	r0, [fp, #-4]
   12310:	ldrb	r0, [r0, #33]	; 0x21
   12314:	tst	r0, #1
   12318:	beq	12380 <__assert_fail@plt+0x12e0>
   1231c:	ldr	r0, [fp, #-8]
   12320:	ldr	r1, [r0, #16]
   12324:	ldr	r0, [r0, #20]
   12328:	ldr	r2, [fp, #-4]
   1232c:	ldr	r3, [r2, #16]
   12330:	ldr	r2, [r2, #20]
   12334:	eor	r0, r0, r2
   12338:	eor	r1, r1, r3
   1233c:	orr	r0, r1, r0
   12340:	cmp	r0, #0
   12344:	bne	1235c <__assert_fail@plt+0x12bc>
   12348:	b	1234c <__assert_fail@plt+0x12ac>
   1234c:	ldr	r0, [fp, #-8]
   12350:	bl	14bd4 <__assert_fail@plt+0x3b34>
   12354:	tst	r0, #1
   12358:	bne	12380 <__assert_fail@plt+0x12e0>
   1235c:	movw	r0, #4132	; 0x1024
   12360:	movt	r0, #2
   12364:	bl	10fa4 <gettext@plt>
   12368:	movw	lr, #1
   1236c:	str	r0, [sp, #8]
   12370:	mov	r0, lr
   12374:	movw	r1, #0
   12378:	ldr	r2, [sp, #8]
   1237c:	bl	10f44 <error@plt>
   12380:	b	123bc <__assert_fail@plt+0x131c>
   12384:	ldr	r0, [fp, #-8]
   12388:	ldr	r0, [r0, #24]
   1238c:	cmp	r0, #0
   12390:	bls	123b8 <__assert_fail@plt+0x1318>
   12394:	movw	r0, #4239	; 0x108f
   12398:	movt	r0, #2
   1239c:	bl	10fa4 <gettext@plt>
   123a0:	movw	lr, #1
   123a4:	str	r0, [sp, #4]
   123a8:	mov	r0, lr
   123ac:	movw	r1, #0
   123b0:	ldr	r2, [sp, #4]
   123b4:	bl	10f44 <error@plt>
   123b8:	b	123bc <__assert_fail@plt+0x131c>
   123bc:	b	123c0 <__assert_fail@plt+0x1320>
   123c0:	mov	sp, fp
   123c4:	pop	{fp, pc}
   123c8:	push	{fp, lr}
   123cc:	mov	fp, sp
   123d0:	sub	sp, sp, #24
   123d4:	str	r0, [fp, #-4]
   123d8:	and	r0, r1, #1
   123dc:	strb	r0, [fp, #-5]
   123e0:	str	r2, [sp, #12]
   123e4:	ldr	r0, [fp, #-4]
   123e8:	mvn	r1, #0
   123ec:	str	r1, [r0, #12]
   123f0:	mvn	r1, #1
   123f4:	str	r1, [r0, #8]
   123f8:	ldr	r0, [fp, #-4]
   123fc:	movw	r1, #0
   12400:	bl	1295c <__assert_fail@plt+0x18bc>
   12404:	str	r0, [sp, #8]
   12408:	cmn	r0, #1
   1240c:	beq	12428 <__assert_fail@plt+0x1388>
   12410:	ldr	r0, [sp, #12]
   12414:	ldr	r1, [sp, #8]
   12418:	add	r0, r0, r1
   1241c:	movw	r1, #1
   12420:	strb	r1, [r0]
   12424:	b	123f8 <__assert_fail@plt+0x1358>
   12428:	ldrb	r0, [fp, #-5]
   1242c:	tst	r0, #1
   12430:	beq	12488 <__assert_fail@plt+0x13e8>
   12434:	movw	r0, #0
   12438:	str	r0, [sp, #4]
   1243c:	ldr	r0, [sp, #4]
   12440:	cmp	r0, #256	; 0x100
   12444:	bcs	12484 <__assert_fail@plt+0x13e4>
   12448:	ldr	r0, [sp, #12]
   1244c:	ldr	r1, [sp, #4]
   12450:	add	r0, r0, r1
   12454:	ldrb	r0, [r0]
   12458:	mvn	r1, #0
   1245c:	eor	r0, r0, r1
   12460:	ldr	r1, [sp, #12]
   12464:	ldr	r2, [sp, #4]
   12468:	add	r1, r1, r2
   1246c:	and	r0, r0, #1
   12470:	strb	r0, [r1]
   12474:	ldr	r0, [sp, #4]
   12478:	add	r0, r0, #1
   1247c:	str	r0, [sp, #4]
   12480:	b	1243c <__assert_fail@plt+0x139c>
   12484:	b	12488 <__assert_fail@plt+0x13e8>
   12488:	mov	sp, fp
   1248c:	pop	{fp, pc}
   12490:	push	{fp, lr}
   12494:	mov	fp, sp
   12498:	sub	sp, sp, #56	; 0x38
   1249c:	ldr	r3, [pc, #736]	; 12784 <__assert_fail@plt+0x16e4>
   124a0:	str	r0, [fp, #-4]
   124a4:	str	r1, [fp, #-8]
   124a8:	str	r2, [fp, #-12]
   124ac:	str	r3, [fp, #-16]
   124b0:	str	r3, [fp, #-20]	; 0xffffffec
   124b4:	movw	r0, #0
   124b8:	str	r0, [fp, #-24]	; 0xffffffe8
   124bc:	str	r0, [sp, #28]
   124c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   124c4:	ldr	r1, [sp, #28]
   124c8:	cmp	r0, r1
   124cc:	bcc	1250c <__assert_fail@plt+0x146c>
   124d0:	ldr	r0, [fp, #-12]
   124d4:	ldr	r1, [fp, #-4]
   124d8:	ldr	r2, [fp, #-8]
   124dc:	str	r0, [sp, #16]
   124e0:	mov	r0, r1
   124e4:	mov	r1, r2
   124e8:	ldr	r2, [sp, #16]
   124ec:	blx	r2
   124f0:	str	r0, [sp, #28]
   124f4:	ldr	r0, [sp, #28]
   124f8:	cmp	r0, #0
   124fc:	bne	12504 <__assert_fail@plt+0x1464>
   12500:	b	1277c <__assert_fail@plt+0x16dc>
   12504:	movw	r0, #0
   12508:	str	r0, [fp, #-24]	; 0xffffffe8
   1250c:	ldr	r0, [pc, #624]	; 12784 <__assert_fail@plt+0x16e4>
   12510:	ldr	r1, [fp, #-24]	; 0xffffffe8
   12514:	str	r1, [sp, #24]
   12518:	ldr	r1, [fp, #-20]	; 0xffffffec
   1251c:	cmp	r1, r0
   12520:	bne	126ec <__assert_fail@plt+0x164c>
   12524:	b	12528 <__assert_fail@plt+0x1488>
   12528:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1252c:	ldr	r1, [sp, #28]
   12530:	cmp	r0, r1
   12534:	movw	r0, #0
   12538:	str	r0, [sp, #12]
   1253c:	bcs	12574 <__assert_fail@plt+0x14d4>
   12540:	ldr	r0, [fp, #-4]
   12544:	ldr	r1, [fp, #-24]	; 0xffffffe8
   12548:	add	r0, r0, r1
   1254c:	ldrb	r0, [r0]
   12550:	bl	14510 <__assert_fail@plt+0x3470>
   12554:	and	r0, r0, #255	; 0xff
   12558:	movw	r1, #8542	; 0x215e
   1255c:	movt	r1, #3
   12560:	add	r0, r1, r0
   12564:	ldrb	r0, [r0]
   12568:	mvn	r1, #0
   1256c:	eor	r0, r0, r1
   12570:	str	r0, [sp, #12]
   12574:	ldr	r0, [sp, #12]
   12578:	tst	r0, #1
   1257c:	beq	12594 <__assert_fail@plt+0x14f4>
   12580:	b	12584 <__assert_fail@plt+0x14e4>
   12584:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12588:	add	r0, r0, #2
   1258c:	str	r0, [fp, #-24]	; 0xffffffe8
   12590:	b	12528 <__assert_fail@plt+0x1488>
   12594:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12598:	ldr	r1, [sp, #28]
   1259c:	cmp	r0, r1
   125a0:	bne	125e8 <__assert_fail@plt+0x1548>
   125a4:	ldr	r0, [fp, #-4]
   125a8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   125ac:	sub	r1, r1, #1
   125b0:	add	r0, r0, r1
   125b4:	ldrb	r0, [r0]
   125b8:	bl	14510 <__assert_fail@plt+0x3470>
   125bc:	and	r0, r0, #255	; 0xff
   125c0:	movw	r1, #8542	; 0x215e
   125c4:	movt	r1, #3
   125c8:	add	r0, r1, r0
   125cc:	ldrb	r0, [r0]
   125d0:	tst	r0, #1
   125d4:	beq	125e8 <__assert_fail@plt+0x1548>
   125d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   125dc:	mvn	r1, #0
   125e0:	add	r0, r0, r1
   125e4:	str	r0, [fp, #-24]	; 0xffffffe8
   125e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   125ec:	ldr	r1, [sp, #28]
   125f0:	cmp	r0, r1
   125f4:	bcc	1260c <__assert_fail@plt+0x156c>
   125f8:	ldr	r0, [sp, #28]
   125fc:	ldr	r1, [sp, #24]
   12600:	sub	r0, r0, r1
   12604:	str	r0, [sp, #20]
   12608:	b	1267c <__assert_fail@plt+0x15dc>
   1260c:	ldr	r0, [fp, #-4]
   12610:	ldr	r1, [fp, #-24]	; 0xffffffe8
   12614:	add	r0, r0, r1
   12618:	ldrb	r0, [r0]
   1261c:	str	r0, [fp, #-20]	; 0xffffffec
   12620:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12624:	ldr	r1, [sp, #24]
   12628:	sub	r0, r0, r1
   1262c:	add	r0, r0, #1
   12630:	str	r0, [sp, #20]
   12634:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12638:	cmp	r0, #0
   1263c:	bls	12670 <__assert_fail@plt+0x15d0>
   12640:	ldr	r0, [fp, #-4]
   12644:	ldr	r1, [fp, #-24]	; 0xffffffe8
   12648:	sub	r1, r1, #1
   1264c:	add	r0, r0, r1
   12650:	ldrb	r0, [r0]
   12654:	ldr	r1, [fp, #-20]	; 0xffffffec
   12658:	cmp	r0, r1
   1265c:	bne	12670 <__assert_fail@plt+0x15d0>
   12660:	ldr	r0, [sp, #20]
   12664:	mvn	r1, #0
   12668:	add	r0, r0, r1
   1266c:	str	r0, [sp, #20]
   12670:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12674:	add	r0, r0, #1
   12678:	str	r0, [fp, #-24]	; 0xffffffe8
   1267c:	ldr	r0, [sp, #20]
   12680:	cmp	r0, #0
   12684:	bls	126e8 <__assert_fail@plt+0x1648>
   12688:	ldr	r0, [fp, #-4]
   1268c:	ldr	r1, [sp, #24]
   12690:	add	r0, r0, r1
   12694:	ldr	r2, [sp, #20]
   12698:	movw	r1, #8532	; 0x2154
   1269c:	movt	r1, #3
   126a0:	ldr	r3, [r1]
   126a4:	movw	r1, #1
   126a8:	bl	10ec0 <fwrite_unlocked@plt>
   126ac:	ldr	r1, [sp, #20]
   126b0:	cmp	r0, r1
   126b4:	beq	126e8 <__assert_fail@plt+0x1648>
   126b8:	bl	10fd4 <__errno_location@plt>
   126bc:	ldr	r1, [r0]
   126c0:	movw	r0, #2342	; 0x926
   126c4:	movt	r0, #2
   126c8:	str	r1, [sp, #8]
   126cc:	bl	10fa4 <gettext@plt>
   126d0:	movw	r1, #1
   126d4:	str	r0, [sp, #4]
   126d8:	mov	r0, r1
   126dc:	ldr	r1, [sp, #8]
   126e0:	ldr	r2, [sp, #4]
   126e4:	bl	10f44 <error@plt>
   126e8:	b	126ec <__assert_fail@plt+0x164c>
   126ec:	ldr	r0, [pc, #144]	; 12784 <__assert_fail@plt+0x16e4>
   126f0:	ldr	r1, [fp, #-20]	; 0xffffffec
   126f4:	cmp	r1, r0
   126f8:	beq	12778 <__assert_fail@plt+0x16d8>
   126fc:	b	12700 <__assert_fail@plt+0x1660>
   12700:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12704:	ldr	r1, [sp, #28]
   12708:	cmp	r0, r1
   1270c:	movw	r0, #0
   12710:	str	r0, [sp]
   12714:	bcs	1273c <__assert_fail@plt+0x169c>
   12718:	ldr	r0, [fp, #-4]
   1271c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   12720:	add	r0, r0, r1
   12724:	ldrb	r0, [r0]
   12728:	ldr	r1, [fp, #-20]	; 0xffffffec
   1272c:	cmp	r0, r1
   12730:	movw	r0, #0
   12734:	moveq	r0, #1
   12738:	str	r0, [sp]
   1273c:	ldr	r0, [sp]
   12740:	tst	r0, #1
   12744:	beq	1275c <__assert_fail@plt+0x16bc>
   12748:	b	1274c <__assert_fail@plt+0x16ac>
   1274c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12750:	add	r0, r0, #1
   12754:	str	r0, [fp, #-24]	; 0xffffffe8
   12758:	b	12700 <__assert_fail@plt+0x1660>
   1275c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12760:	ldr	r1, [sp, #28]
   12764:	cmp	r0, r1
   12768:	bcs	12774 <__assert_fail@plt+0x16d4>
   1276c:	ldr	r0, [pc, #16]	; 12784 <__assert_fail@plt+0x16e4>
   12770:	str	r0, [fp, #-20]	; 0xffffffec
   12774:	b	12778 <__assert_fail@plt+0x16d8>
   12778:	b	124c0 <__assert_fail@plt+0x1420>
   1277c:	mov	sp, fp
   12780:	pop	{fp, pc}
   12784:	svcvc	0x00ffffff
   12788:	push	{fp, lr}
   1278c:	mov	fp, sp
   12790:	sub	sp, sp, #24
   12794:	str	r0, [fp, #-4]
   12798:	str	r1, [fp, #-8]
   1279c:	ldr	r1, [fp, #-4]
   127a0:	ldr	r2, [fp, #-8]
   127a4:	movw	r0, #0
   127a8:	bl	17d08 <__assert_fail@plt+0x6c68>
   127ac:	str	r0, [sp, #12]
   127b0:	ldr	r0, [sp, #12]
   127b4:	cmn	r0, #1
   127b8:	bne	127ec <__assert_fail@plt+0x174c>
   127bc:	bl	10fd4 <__errno_location@plt>
   127c0:	ldr	r1, [r0]
   127c4:	movw	r0, #4793	; 0x12b9
   127c8:	movt	r0, #2
   127cc:	str	r1, [sp, #8]
   127d0:	bl	10fa4 <gettext@plt>
   127d4:	movw	r1, #1
   127d8:	str	r0, [sp, #4]
   127dc:	mov	r0, r1
   127e0:	ldr	r1, [sp, #8]
   127e4:	ldr	r2, [sp, #4]
   127e8:	bl	10f44 <error@plt>
   127ec:	ldr	r0, [sp, #12]
   127f0:	mov	sp, fp
   127f4:	pop	{fp, pc}
   127f8:	push	{fp, lr}
   127fc:	mov	fp, sp
   12800:	sub	sp, sp, #32
   12804:	str	r0, [fp, #-8]
   12808:	str	r1, [fp, #-12]
   1280c:	ldr	r0, [fp, #-8]
   12810:	ldr	r1, [fp, #-12]
   12814:	bl	12788 <__assert_fail@plt+0x16e8>
   12818:	str	r0, [sp, #12]
   1281c:	ldr	r0, [sp, #12]
   12820:	cmp	r0, #0
   12824:	bne	12834 <__assert_fail@plt+0x1794>
   12828:	movw	r0, #0
   1282c:	str	r0, [fp, #-4]
   12830:	b	12950 <__assert_fail@plt+0x18b0>
   12834:	movw	r0, #0
   12838:	str	r0, [sp, #8]
   1283c:	ldr	r0, [sp, #8]
   12840:	ldr	r1, [sp, #12]
   12844:	cmp	r0, r1
   12848:	movw	r0, #0
   1284c:	str	r0, [sp, #4]
   12850:	bcs	12888 <__assert_fail@plt+0x17e8>
   12854:	ldr	r0, [fp, #-8]
   12858:	ldr	r1, [sp, #8]
   1285c:	add	r0, r0, r1
   12860:	ldrb	r0, [r0]
   12864:	bl	14510 <__assert_fail@plt+0x3470>
   12868:	and	r0, r0, #255	; 0xff
   1286c:	movw	r1, #16990	; 0x425e
   12870:	movt	r1, #3
   12874:	add	r0, r1, r0
   12878:	ldrb	r0, [r0]
   1287c:	mvn	r1, #0
   12880:	eor	r0, r0, r1
   12884:	str	r0, [sp, #4]
   12888:	ldr	r0, [sp, #4]
   1288c:	tst	r0, #1
   12890:	beq	128a8 <__assert_fail@plt+0x1808>
   12894:	b	12898 <__assert_fail@plt+0x17f8>
   12898:	ldr	r0, [sp, #8]
   1289c:	add	r0, r0, #1
   128a0:	str	r0, [sp, #8]
   128a4:	b	1283c <__assert_fail@plt+0x179c>
   128a8:	ldr	r0, [sp, #8]
   128ac:	str	r0, [sp, #16]
   128b0:	ldr	r0, [sp, #8]
   128b4:	add	r0, r0, #1
   128b8:	str	r0, [sp, #8]
   128bc:	ldr	r0, [sp, #8]
   128c0:	ldr	r1, [sp, #12]
   128c4:	cmp	r0, r1
   128c8:	bcs	12938 <__assert_fail@plt+0x1898>
   128cc:	ldr	r0, [fp, #-8]
   128d0:	ldr	r1, [sp, #8]
   128d4:	add	r0, r0, r1
   128d8:	ldrb	r0, [r0]
   128dc:	bl	14510 <__assert_fail@plt+0x3470>
   128e0:	and	r0, r0, #255	; 0xff
   128e4:	movw	r1, #16990	; 0x425e
   128e8:	movt	r1, #3
   128ec:	add	r0, r1, r0
   128f0:	ldrb	r0, [r0]
   128f4:	tst	r0, #1
   128f8:	bne	12924 <__assert_fail@plt+0x1884>
   128fc:	ldr	r0, [fp, #-8]
   12900:	ldr	r1, [sp, #8]
   12904:	add	r0, r0, r1
   12908:	ldrb	r0, [r0]
   1290c:	ldr	r1, [fp, #-8]
   12910:	ldr	r2, [sp, #16]
   12914:	add	r3, r2, #1
   12918:	str	r3, [sp, #16]
   1291c:	add	r1, r1, r2
   12920:	strb	r0, [r1]
   12924:	b	12928 <__assert_fail@plt+0x1888>
   12928:	ldr	r0, [sp, #8]
   1292c:	add	r0, r0, #1
   12930:	str	r0, [sp, #8]
   12934:	b	128bc <__assert_fail@plt+0x181c>
   12938:	b	1293c <__assert_fail@plt+0x189c>
   1293c:	ldr	r0, [sp, #16]
   12940:	cmp	r0, #0
   12944:	beq	1280c <__assert_fail@plt+0x176c>
   12948:	ldr	r0, [sp, #16]
   1294c:	str	r0, [fp, #-4]
   12950:	ldr	r0, [fp, #-4]
   12954:	mov	sp, fp
   12958:	pop	{fp, pc}
   1295c:	push	{fp, lr}
   12960:	mov	fp, sp
   12964:	sub	sp, sp, #32
   12968:	str	r0, [fp, #-8]
   1296c:	str	r1, [fp, #-12]
   12970:	ldr	r0, [fp, #-12]
   12974:	movw	r1, #0
   12978:	cmp	r0, r1
   1297c:	beq	1298c <__assert_fail@plt+0x18ec>
   12980:	ldr	r0, [fp, #-12]
   12984:	movw	r1, #2
   12988:	str	r1, [r0]
   1298c:	ldr	r0, [fp, #-8]
   12990:	ldr	r1, [r0, #8]
   12994:	ldr	r0, [r0, #12]
   12998:	mvn	r2, #1
   1299c:	eor	r1, r1, r2
   129a0:	mvn	r0, r0
   129a4:	orr	r0, r1, r0
   129a8:	cmp	r0, #0
   129ac:	bne	129d4 <__assert_fail@plt+0x1934>
   129b0:	b	129b4 <__assert_fail@plt+0x1914>
   129b4:	ldr	r0, [fp, #-8]
   129b8:	ldr	r1, [r0]
   129bc:	ldr	r1, [r1, #4]
   129c0:	str	r1, [r0, #4]
   129c4:	ldr	r0, [fp, #-8]
   129c8:	mvn	r1, #0
   129cc:	str	r1, [r0, #12]
   129d0:	str	r1, [r0, #8]
   129d4:	ldr	r0, [fp, #-8]
   129d8:	ldr	r0, [r0, #4]
   129dc:	str	r0, [sp, #16]
   129e0:	ldr	r0, [sp, #16]
   129e4:	movw	r1, #0
   129e8:	cmp	r0, r1
   129ec:	bne	129fc <__assert_fail@plt+0x195c>
   129f0:	mvn	r0, #0
   129f4:	str	r0, [fp, #-4]
   129f8:	b	12e38 <__assert_fail@plt+0x1d98>
   129fc:	ldr	r0, [sp, #16]
   12a00:	ldr	r0, [r0]
   12a04:	cmp	r0, #4
   12a08:	str	r0, [sp, #4]
   12a0c:	bhi	12e2c <__assert_fail@plt+0x1d8c>
   12a10:	add	r0, pc, #8
   12a14:	ldr	r1, [sp, #4]
   12a18:	ldr	r0, [r0, r1, lsl #2]
   12a1c:	mov	pc, r0
   12a20:	andeq	r2, r1, r4, lsr sl
   12a24:	andeq	r2, r1, r4, ror #20
   12a28:	andeq	r2, r1, r0, lsl fp
   12a2c:	andeq	r2, r1, r0, lsl #26
   12a30:	andeq	r2, r1, r0, lsr sp
   12a34:	ldr	r0, [sp, #16]
   12a38:	ldrb	r0, [r0, #8]
   12a3c:	str	r0, [sp, #12]
   12a40:	ldr	r0, [fp, #-8]
   12a44:	mvn	r1, #0
   12a48:	str	r1, [r0, #12]
   12a4c:	str	r1, [r0, #8]
   12a50:	ldr	r0, [sp, #16]
   12a54:	ldr	r0, [r0, #4]
   12a58:	ldr	r1, [fp, #-8]
   12a5c:	str	r0, [r1, #4]
   12a60:	b	12e30 <__assert_fail@plt+0x1d90>
   12a64:	ldr	r0, [fp, #-8]
   12a68:	ldr	r1, [r0, #8]
   12a6c:	ldr	r0, [r0, #12]
   12a70:	and	r0, r1, r0
   12a74:	cmn	r0, #1
   12a78:	bne	12a9c <__assert_fail@plt+0x19fc>
   12a7c:	b	12a80 <__assert_fail@plt+0x19e0>
   12a80:	ldr	r0, [sp, #16]
   12a84:	ldrb	r0, [r0, #8]
   12a88:	ldr	r1, [fp, #-8]
   12a8c:	mov	r2, #0
   12a90:	str	r2, [r1, #12]
   12a94:	str	r0, [r1, #8]
   12a98:	b	12ab8 <__assert_fail@plt+0x1a18>
   12a9c:	ldr	r0, [fp, #-8]
   12aa0:	ldr	r1, [r0, #8]
   12aa4:	ldr	r2, [r0, #12]
   12aa8:	adds	r1, r1, #1
   12aac:	adc	r2, r2, #0
   12ab0:	str	r1, [r0, #8]
   12ab4:	str	r2, [r0, #12]
   12ab8:	ldr	r0, [fp, #-8]
   12abc:	ldr	r0, [r0, #8]
   12ac0:	str	r0, [sp, #12]
   12ac4:	ldr	r0, [fp, #-8]
   12ac8:	ldr	r1, [r0, #8]
   12acc:	ldr	r0, [r0, #12]
   12ad0:	ldr	r2, [sp, #16]
   12ad4:	ldrb	r2, [r2, #9]
   12ad8:	eor	r1, r1, r2
   12adc:	orr	r0, r1, r0
   12ae0:	cmp	r0, #0
   12ae4:	bne	12b0c <__assert_fail@plt+0x1a6c>
   12ae8:	b	12aec <__assert_fail@plt+0x1a4c>
   12aec:	ldr	r0, [sp, #16]
   12af0:	ldr	r0, [r0, #4]
   12af4:	ldr	r1, [fp, #-8]
   12af8:	str	r0, [r1, #4]
   12afc:	ldr	r0, [fp, #-8]
   12b00:	mvn	r1, #0
   12b04:	str	r1, [r0, #12]
   12b08:	str	r1, [r0, #8]
   12b0c:	b	12e30 <__assert_fail@plt+0x1d90>
   12b10:	ldr	r0, [fp, #-12]
   12b14:	movw	r1, #0
   12b18:	cmp	r0, r1
   12b1c:	beq	12b70 <__assert_fail@plt+0x1ad0>
   12b20:	ldr	r0, [sp, #16]
   12b24:	ldr	r0, [r0, #8]
   12b28:	cmp	r0, #6
   12b2c:	str	r0, [sp]
   12b30:	beq	12b48 <__assert_fail@plt+0x1aa8>
   12b34:	b	12b38 <__assert_fail@plt+0x1a98>
   12b38:	ldr	r0, [sp]
   12b3c:	cmp	r0, #10
   12b40:	beq	12b58 <__assert_fail@plt+0x1ab8>
   12b44:	b	12b68 <__assert_fail@plt+0x1ac8>
   12b48:	ldr	r0, [fp, #-12]
   12b4c:	movw	r1, #0
   12b50:	str	r1, [r0]
   12b54:	b	12b6c <__assert_fail@plt+0x1acc>
   12b58:	ldr	r0, [fp, #-12]
   12b5c:	movw	r1, #1
   12b60:	str	r1, [r0]
   12b64:	b	12b6c <__assert_fail@plt+0x1acc>
   12b68:	b	12b6c <__assert_fail@plt+0x1acc>
   12b6c:	b	12b70 <__assert_fail@plt+0x1ad0>
   12b70:	ldr	r0, [fp, #-8]
   12b74:	ldr	r1, [r0, #8]
   12b78:	ldr	r0, [r0, #12]
   12b7c:	and	r0, r1, r0
   12b80:	cmn	r0, #1
   12b84:	bne	12c18 <__assert_fail@plt+0x1b78>
   12b88:	b	12b8c <__assert_fail@plt+0x1aec>
   12b8c:	movw	r0, #0
   12b90:	str	r0, [sp, #8]
   12b94:	ldr	r0, [sp, #8]
   12b98:	cmp	r0, #256	; 0x100
   12b9c:	bge	12bd4 <__assert_fail@plt+0x1b34>
   12ba0:	ldr	r0, [sp, #16]
   12ba4:	ldr	r0, [r0, #8]
   12ba8:	ldr	r1, [sp, #8]
   12bac:	and	r1, r1, #255	; 0xff
   12bb0:	bl	15070 <__assert_fail@plt+0x3fd0>
   12bb4:	tst	r0, #1
   12bb8:	beq	12bc0 <__assert_fail@plt+0x1b20>
   12bbc:	b	12bd4 <__assert_fail@plt+0x1b34>
   12bc0:	b	12bc4 <__assert_fail@plt+0x1b24>
   12bc4:	ldr	r0, [sp, #8]
   12bc8:	add	r0, r0, #1
   12bcc:	str	r0, [sp, #8]
   12bd0:	b	12b94 <__assert_fail@plt+0x1af4>
   12bd4:	ldr	r0, [sp, #8]
   12bd8:	cmp	r0, #256	; 0x100
   12bdc:	bge	12be4 <__assert_fail@plt+0x1b44>
   12be0:	b	12c04 <__assert_fail@plt+0x1b64>
   12be4:	movw	r0, #4804	; 0x12c4
   12be8:	movt	r0, #2
   12bec:	movw	r1, #2380	; 0x94c
   12bf0:	movt	r1, #2
   12bf4:	movw	r2, #1079	; 0x437
   12bf8:	movw	r3, #4816	; 0x12d0
   12bfc:	movt	r3, #2
   12c00:	bl	110a0 <__assert_fail@plt>
   12c04:	ldr	r0, [sp, #8]
   12c08:	asr	r1, r0, #31
   12c0c:	ldr	r2, [fp, #-8]
   12c10:	str	r0, [r2, #8]
   12c14:	str	r1, [r2, #12]
   12c18:	ldr	r0, [sp, #16]
   12c1c:	ldr	r0, [r0, #8]
   12c20:	ldr	r1, [fp, #-8]
   12c24:	ldrb	r1, [r1, #8]
   12c28:	and	r1, r1, #255	; 0xff
   12c2c:	bl	15070 <__assert_fail@plt+0x3fd0>
   12c30:	tst	r0, #1
   12c34:	beq	12c3c <__assert_fail@plt+0x1b9c>
   12c38:	b	12c5c <__assert_fail@plt+0x1bbc>
   12c3c:	movw	r0, #4875	; 0x130b
   12c40:	movt	r0, #2
   12c44:	movw	r1, #2380	; 0x94c
   12c48:	movt	r1, #2
   12c4c:	movw	r2, #1082	; 0x43a
   12c50:	movw	r3, #4816	; 0x12d0
   12c54:	movt	r3, #2
   12c58:	bl	110a0 <__assert_fail@plt>
   12c5c:	ldr	r0, [fp, #-8]
   12c60:	ldr	r0, [r0, #8]
   12c64:	str	r0, [sp, #12]
   12c68:	ldr	r0, [fp, #-8]
   12c6c:	ldr	r0, [r0, #8]
   12c70:	add	r0, r0, #1
   12c74:	str	r0, [sp, #8]
   12c78:	ldr	r0, [sp, #8]
   12c7c:	cmp	r0, #256	; 0x100
   12c80:	bge	12cb8 <__assert_fail@plt+0x1c18>
   12c84:	ldr	r0, [sp, #16]
   12c88:	ldr	r0, [r0, #8]
   12c8c:	ldr	r1, [sp, #8]
   12c90:	and	r1, r1, #255	; 0xff
   12c94:	bl	15070 <__assert_fail@plt+0x3fd0>
   12c98:	tst	r0, #1
   12c9c:	beq	12ca4 <__assert_fail@plt+0x1c04>
   12ca0:	b	12cb8 <__assert_fail@plt+0x1c18>
   12ca4:	b	12ca8 <__assert_fail@plt+0x1c08>
   12ca8:	ldr	r0, [sp, #8]
   12cac:	add	r0, r0, #1
   12cb0:	str	r0, [sp, #8]
   12cb4:	b	12c78 <__assert_fail@plt+0x1bd8>
   12cb8:	ldr	r0, [sp, #8]
   12cbc:	cmp	r0, #256	; 0x100
   12cc0:	bge	12cdc <__assert_fail@plt+0x1c3c>
   12cc4:	ldr	r0, [sp, #8]
   12cc8:	asr	r1, r0, #31
   12ccc:	ldr	r2, [fp, #-8]
   12cd0:	str	r0, [r2, #8]
   12cd4:	str	r1, [r2, #12]
   12cd8:	b	12cfc <__assert_fail@plt+0x1c5c>
   12cdc:	ldr	r0, [sp, #16]
   12ce0:	ldr	r0, [r0, #4]
   12ce4:	ldr	r1, [fp, #-8]
   12ce8:	str	r0, [r1, #4]
   12cec:	ldr	r0, [fp, #-8]
   12cf0:	mvn	r1, #0
   12cf4:	str	r1, [r0, #12]
   12cf8:	str	r1, [r0, #8]
   12cfc:	b	12e30 <__assert_fail@plt+0x1d90>
   12d00:	ldr	r0, [sp, #16]
   12d04:	ldrb	r0, [r0, #8]
   12d08:	str	r0, [sp, #12]
   12d0c:	ldr	r0, [fp, #-8]
   12d10:	mvn	r1, #0
   12d14:	str	r1, [r0, #12]
   12d18:	str	r1, [r0, #8]
   12d1c:	ldr	r0, [sp, #16]
   12d20:	ldr	r0, [r0, #4]
   12d24:	ldr	r1, [fp, #-8]
   12d28:	str	r0, [r1, #4]
   12d2c:	b	12e30 <__assert_fail@plt+0x1d90>
   12d30:	ldr	r0, [sp, #16]
   12d34:	ldr	r1, [r0, #16]
   12d38:	ldr	r0, [r0, #20]
   12d3c:	orr	r0, r1, r0
   12d40:	cmp	r0, #0
   12d44:	bne	12d80 <__assert_fail@plt+0x1ce0>
   12d48:	b	12d4c <__assert_fail@plt+0x1cac>
   12d4c:	ldr	r0, [sp, #16]
   12d50:	ldr	r0, [r0, #4]
   12d54:	ldr	r1, [fp, #-8]
   12d58:	str	r0, [r1, #4]
   12d5c:	ldr	r0, [fp, #-8]
   12d60:	mvn	r1, #0
   12d64:	str	r1, [r0, #12]
   12d68:	str	r1, [r0, #8]
   12d6c:	ldr	r0, [fp, #-8]
   12d70:	ldr	r1, [fp, #-12]
   12d74:	bl	1295c <__assert_fail@plt+0x18bc>
   12d78:	str	r0, [sp, #12]
   12d7c:	b	12e28 <__assert_fail@plt+0x1d88>
   12d80:	ldr	r0, [fp, #-8]
   12d84:	ldr	r1, [r0, #8]
   12d88:	ldr	r0, [r0, #12]
   12d8c:	and	r0, r1, r0
   12d90:	cmn	r0, #1
   12d94:	bne	12dac <__assert_fail@plt+0x1d0c>
   12d98:	b	12d9c <__assert_fail@plt+0x1cfc>
   12d9c:	ldr	r0, [fp, #-8]
   12da0:	mov	r1, #0
   12da4:	str	r1, [r0, #12]
   12da8:	str	r1, [r0, #8]
   12dac:	ldr	r0, [fp, #-8]
   12db0:	ldr	r1, [r0, #8]
   12db4:	ldr	r2, [r0, #12]
   12db8:	adds	r1, r1, #1
   12dbc:	adc	r2, r2, #0
   12dc0:	str	r1, [r0, #8]
   12dc4:	str	r2, [r0, #12]
   12dc8:	ldr	r0, [sp, #16]
   12dcc:	ldrb	r0, [r0, #8]
   12dd0:	str	r0, [sp, #12]
   12dd4:	ldr	r0, [fp, #-8]
   12dd8:	ldr	r1, [r0, #8]
   12ddc:	ldr	r0, [r0, #12]
   12de0:	ldr	r2, [sp, #16]
   12de4:	ldr	r3, [r2, #16]
   12de8:	ldr	r2, [r2, #20]
   12dec:	eor	r0, r0, r2
   12df0:	eor	r1, r1, r3
   12df4:	orr	r0, r1, r0
   12df8:	cmp	r0, #0
   12dfc:	bne	12e24 <__assert_fail@plt+0x1d84>
   12e00:	b	12e04 <__assert_fail@plt+0x1d64>
   12e04:	ldr	r0, [sp, #16]
   12e08:	ldr	r0, [r0, #4]
   12e0c:	ldr	r1, [fp, #-8]
   12e10:	str	r0, [r1, #4]
   12e14:	ldr	r0, [fp, #-8]
   12e18:	mvn	r1, #0
   12e1c:	str	r1, [r0, #12]
   12e20:	str	r1, [r0, #8]
   12e24:	b	12e28 <__assert_fail@plt+0x1d88>
   12e28:	b	12e30 <__assert_fail@plt+0x1d90>
   12e2c:	bl	11088 <abort@plt>
   12e30:	ldr	r0, [sp, #12]
   12e34:	str	r0, [fp, #-4]
   12e38:	ldr	r0, [fp, #-4]
   12e3c:	mov	sp, fp
   12e40:	pop	{fp, pc}
   12e44:	sub	sp, sp, #4
   12e48:	str	r0, [sp]
   12e4c:	ldr	r0, [sp]
   12e50:	ldr	r1, [r0, #4]
   12e54:	ldr	r1, [r1, #4]
   12e58:	str	r1, [r0, #4]
   12e5c:	ldr	r0, [sp]
   12e60:	mvn	r1, #0
   12e64:	str	r1, [r0, #12]
   12e68:	str	r1, [r0, #8]
   12e6c:	add	sp, sp, #4
   12e70:	bx	lr
   12e74:	push	{fp, lr}
   12e78:	mov	fp, sp
   12e7c:	sub	sp, sp, #16
   12e80:	str	r0, [fp, #-4]
   12e84:	str	r1, [sp, #8]
   12e88:	ldr	r0, [fp, #-4]
   12e8c:	ldr	r1, [sp, #8]
   12e90:	bl	12788 <__assert_fail@plt+0x16e8>
   12e94:	str	r0, [sp, #4]
   12e98:	movw	r0, #0
   12e9c:	str	r0, [sp]
   12ea0:	ldr	r0, [sp]
   12ea4:	ldr	r1, [sp, #4]
   12ea8:	cmp	r0, r1
   12eac:	bcs	12ef8 <__assert_fail@plt+0x1e58>
   12eb0:	ldr	r0, [fp, #-4]
   12eb4:	ldr	r1, [sp]
   12eb8:	add	r0, r0, r1
   12ebc:	ldrb	r0, [r0]
   12ec0:	bl	14510 <__assert_fail@plt+0x3470>
   12ec4:	and	r0, r0, #255	; 0xff
   12ec8:	movw	r1, #17246	; 0x435e
   12ecc:	movt	r1, #3
   12ed0:	add	r0, r1, r0
   12ed4:	ldrb	r0, [r0]
   12ed8:	ldr	r1, [fp, #-4]
   12edc:	ldr	lr, [sp]
   12ee0:	add	r1, r1, lr
   12ee4:	strb	r0, [r1]
   12ee8:	ldr	r0, [sp]
   12eec:	add	r0, r0, #1
   12ef0:	str	r0, [sp]
   12ef4:	b	12ea0 <__assert_fail@plt+0x1e00>
   12ef8:	ldr	r0, [sp, #4]
   12efc:	mov	sp, fp
   12f00:	pop	{fp, pc}
   12f04:	push	{r4, r5, r6, r7, fp, lr}
   12f08:	add	fp, sp, #16
   12f0c:	sub	sp, sp, #80	; 0x50
   12f10:	str	r0, [fp, #-20]	; 0xffffffec
   12f14:	str	r1, [fp, #-24]	; 0xffffffe8
   12f18:	ldr	r0, [fp, #-20]	; 0xffffffec
   12f1c:	bl	10fb0 <strlen@plt>
   12f20:	str	r0, [fp, #-28]	; 0xffffffe4
   12f24:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12f28:	bl	186cc <__assert_fail@plt+0x762c>
   12f2c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   12f30:	str	r0, [r1]
   12f34:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12f38:	movw	r1, #1
   12f3c:	bl	1b32c <__assert_fail@plt+0xa28c>
   12f40:	ldr	r1, [fp, #-24]	; 0xffffffe8
   12f44:	str	r0, [r1, #4]
   12f48:	movw	r0, #0
   12f4c:	str	r0, [fp, #-32]	; 0xffffffe0
   12f50:	str	r0, [fp, #-36]	; 0xffffffdc
   12f54:	ldr	r0, [fp, #-20]	; 0xffffffec
   12f58:	ldr	r1, [fp, #-36]	; 0xffffffdc
   12f5c:	add	r0, r0, r1
   12f60:	ldrsb	r0, [r0]
   12f64:	cmp	r0, #0
   12f68:	beq	134ac <__assert_fail@plt+0x240c>
   12f6c:	ldr	r0, [fp, #-20]	; 0xffffffec
   12f70:	ldr	r1, [fp, #-36]	; 0xffffffdc
   12f74:	ldrb	r0, [r0, r1]
   12f78:	cmp	r0, #92	; 0x5c
   12f7c:	bne	1346c <__assert_fail@plt+0x23cc>
   12f80:	b	12f84 <__assert_fail@plt+0x1ee4>
   12f84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12f88:	ldr	r0, [r0, #4]
   12f8c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   12f90:	mov	r2, #1
   12f94:	strb	r2, [r0, r1]
   12f98:	ldr	r0, [fp, #-20]	; 0xffffffec
   12f9c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   12fa0:	add	r0, r0, r1
   12fa4:	ldrb	r0, [r0, #1]
   12fa8:	mov	r1, r0
   12fac:	cmp	r0, #118	; 0x76
   12fb0:	str	r1, [sp, #48]	; 0x30
   12fb4:	bhi	13424 <__assert_fail@plt+0x2384>
   12fb8:	add	r0, pc, #8
   12fbc:	ldr	r1, [sp, #48]	; 0x30
   12fc0:	ldr	r0, [r0, r1, lsl #2]
   12fc4:	mov	pc, r0
   12fc8:	andeq	r3, r1, ip, asr #7
   12fcc:	andeq	r3, r1, r4, lsr #8
   12fd0:	andeq	r3, r1, r4, lsr #8
   12fd4:	andeq	r3, r1, r4, lsr #8
   12fd8:	andeq	r3, r1, r4, lsr #8
   12fdc:	andeq	r3, r1, r4, lsr #8
   12fe0:	andeq	r3, r1, r4, lsr #8
   12fe4:	andeq	r3, r1, r4, lsr #8
   12fe8:	andeq	r3, r1, r4, lsr #8
   12fec:	andeq	r3, r1, r4, lsr #8
   12ff0:	andeq	r3, r1, r4, lsr #8
   12ff4:	andeq	r3, r1, r4, lsr #8
   12ff8:	andeq	r3, r1, r4, lsr #8
   12ffc:	andeq	r3, r1, r4, lsr #8
   13000:	andeq	r3, r1, r4, lsr #8
   13004:	andeq	r3, r1, r4, lsr #8
   13008:	andeq	r3, r1, r4, lsr #8
   1300c:	andeq	r3, r1, r4, lsr #8
   13010:	andeq	r3, r1, r4, lsr #8
   13014:	andeq	r3, r1, r4, lsr #8
   13018:	andeq	r3, r1, r4, lsr #8
   1301c:	andeq	r3, r1, r4, lsr #8
   13020:	andeq	r3, r1, r4, lsr #8
   13024:	andeq	r3, r1, r4, lsr #8
   13028:	andeq	r3, r1, r4, lsr #8
   1302c:	andeq	r3, r1, r4, lsr #8
   13030:	andeq	r3, r1, r4, lsr #8
   13034:	andeq	r3, r1, r4, lsr #8
   13038:	andeq	r3, r1, r4, lsr #8
   1303c:	andeq	r3, r1, r4, lsr #8
   13040:	andeq	r3, r1, r4, lsr #8
   13044:	andeq	r3, r1, r4, lsr #8
   13048:	andeq	r3, r1, r4, lsr #8
   1304c:	andeq	r3, r1, r4, lsr #8
   13050:	andeq	r3, r1, r4, lsr #8
   13054:	andeq	r3, r1, r4, lsr #8
   13058:	andeq	r3, r1, r4, lsr #8
   1305c:	andeq	r3, r1, r4, lsr #8
   13060:	andeq	r3, r1, r4, lsr #8
   13064:	andeq	r3, r1, r4, lsr #8
   13068:	andeq	r3, r1, r4, lsr #8
   1306c:	andeq	r3, r1, r4, lsr #8
   13070:	andeq	r3, r1, r4, lsr #8
   13074:	andeq	r3, r1, r4, lsr #8
   13078:	andeq	r3, r1, r4, lsr #8
   1307c:	andeq	r3, r1, r4, lsr #8
   13080:	andeq	r3, r1, r4, lsr #8
   13084:	andeq	r3, r1, r4, lsr #8
   13088:	andeq	r3, r1, r4, lsl #4
   1308c:	andeq	r3, r1, r4, lsl #4
   13090:	andeq	r3, r1, r4, lsl #4
   13094:	andeq	r3, r1, r4, lsl #4
   13098:	andeq	r3, r1, r4, lsl #4
   1309c:	andeq	r3, r1, r4, lsl #4
   130a0:	andeq	r3, r1, r4, lsl #4
   130a4:	andeq	r3, r1, r4, lsl #4
   130a8:	andeq	r3, r1, r4, lsr #8
   130ac:	andeq	r3, r1, r4, lsr #8
   130b0:	andeq	r3, r1, r4, lsr #8
   130b4:	andeq	r3, r1, r4, lsr #8
   130b8:	andeq	r3, r1, r4, lsr #8
   130bc:	andeq	r3, r1, r4, lsr #8
   130c0:	andeq	r3, r1, r4, lsr #8
   130c4:	andeq	r3, r1, r4, lsr #8
   130c8:	andeq	r3, r1, r4, lsr #8
   130cc:	andeq	r3, r1, r4, lsr #8
   130d0:	andeq	r3, r1, r4, lsr #8
   130d4:	andeq	r3, r1, r4, lsr #8
   130d8:	andeq	r3, r1, r4, lsr #8
   130dc:	andeq	r3, r1, r4, lsr #8
   130e0:	andeq	r3, r1, r4, lsr #8
   130e4:	andeq	r3, r1, r4, lsr #8
   130e8:	andeq	r3, r1, r4, lsr #8
   130ec:	andeq	r3, r1, r4, lsr #8
   130f0:	andeq	r3, r1, r4, lsr #8
   130f4:	andeq	r3, r1, r4, lsr #8
   130f8:	andeq	r3, r1, r4, lsr #8
   130fc:	andeq	r3, r1, r4, lsr #8
   13100:	andeq	r3, r1, r4, lsr #8
   13104:	andeq	r3, r1, r4, lsr #8
   13108:	andeq	r3, r1, r4, lsr #8
   1310c:	andeq	r3, r1, r4, lsr #8
   13110:	andeq	r3, r1, r4, lsr #8
   13114:	andeq	r3, r1, r4, lsr #8
   13118:	andeq	r3, r1, r4, lsr #8
   1311c:	andeq	r3, r1, r4, lsr #8
   13120:	andeq	r3, r1, r4, lsr #8
   13124:	andeq	r3, r1, r4, lsr #8
   13128:	andeq	r3, r1, r4, lsr #8
   1312c:	andeq	r3, r1, r4, lsr #8
   13130:	andeq	r3, r1, r4, lsr #8
   13134:	andeq	r3, r1, r4, lsr #8
   13138:	andeq	r3, r1, r4, lsr #3
   1313c:	andeq	r3, r1, r4, lsr #8
   13140:	andeq	r3, r1, r4, lsr #8
   13144:	andeq	r3, r1, r4, lsr #8
   13148:	andeq	r3, r1, r4, lsr #8
   1314c:			; <UNDEFINED> instruction: 0x000131b0
   13150:			; <UNDEFINED> instruction: 0x000131bc
   13154:	andeq	r3, r1, r4, lsr #8
   13158:	andeq	r3, r1, r4, lsr #8
   1315c:	andeq	r3, r1, r4, lsr #8
   13160:	andeq	r3, r1, r8, asr #3
   13164:	andeq	r3, r1, r4, lsr #8
   13168:	andeq	r3, r1, r4, lsr #8
   1316c:	andeq	r3, r1, r4, lsr #8
   13170:	andeq	r3, r1, r4, lsr #8
   13174:	andeq	r3, r1, r4, lsr #8
   13178:	andeq	r3, r1, r4, lsr #8
   1317c:	andeq	r3, r1, r4, lsr #8
   13180:	ldrdeq	r3, [r1], -r4
   13184:	andeq	r3, r1, r4, lsr #8
   13188:	andeq	r3, r1, r4, lsr #8
   1318c:	andeq	r3, r1, r4, lsr #8
   13190:	andeq	r3, r1, r0, ror #3
   13194:	andeq	r3, r1, r4, lsr #8
   13198:	andeq	r3, r1, ip, ror #3
   1319c:	andeq	r3, r1, r4, lsr #8
   131a0:	strdeq	r3, [r1], -r8
   131a4:	movw	r0, #92	; 0x5c
   131a8:	strb	r0, [fp, #-37]	; 0xffffffdb
   131ac:	b	1343c <__assert_fail@plt+0x239c>
   131b0:	movw	r0, #7
   131b4:	strb	r0, [fp, #-37]	; 0xffffffdb
   131b8:	b	1343c <__assert_fail@plt+0x239c>
   131bc:	movw	r0, #8
   131c0:	strb	r0, [fp, #-37]	; 0xffffffdb
   131c4:	b	1343c <__assert_fail@plt+0x239c>
   131c8:	movw	r0, #12
   131cc:	strb	r0, [fp, #-37]	; 0xffffffdb
   131d0:	b	1343c <__assert_fail@plt+0x239c>
   131d4:	movw	r0, #10
   131d8:	strb	r0, [fp, #-37]	; 0xffffffdb
   131dc:	b	1343c <__assert_fail@plt+0x239c>
   131e0:	movw	r0, #13
   131e4:	strb	r0, [fp, #-37]	; 0xffffffdb
   131e8:	b	1343c <__assert_fail@plt+0x239c>
   131ec:	movw	r0, #9
   131f0:	strb	r0, [fp, #-37]	; 0xffffffdb
   131f4:	b	1343c <__assert_fail@plt+0x239c>
   131f8:	movw	r0, #11
   131fc:	strb	r0, [fp, #-37]	; 0xffffffdb
   13200:	b	1343c <__assert_fail@plt+0x239c>
   13204:	ldr	r0, [fp, #-20]	; 0xffffffec
   13208:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1320c:	add	r1, r1, #1
   13210:	add	r0, r0, r1
   13214:	ldrb	r0, [r0]
   13218:	sub	r0, r0, #48	; 0x30
   1321c:	strb	r0, [fp, #-37]	; 0xffffffdb
   13220:	ldr	r0, [fp, #-20]	; 0xffffffec
   13224:	ldr	r1, [fp, #-36]	; 0xffffffdc
   13228:	add	r1, r1, #2
   1322c:	add	r0, r0, r1
   13230:	ldrb	r0, [r0]
   13234:	sub	r0, r0, #48	; 0x30
   13238:	str	r0, [fp, #-44]	; 0xffffffd4
   1323c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13240:	movw	r1, #0
   13244:	cmp	r1, r0
   13248:	bgt	133c8 <__assert_fail@plt+0x2328>
   1324c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13250:	cmp	r0, #7
   13254:	bgt	133c8 <__assert_fail@plt+0x2328>
   13258:	ldrb	r0, [fp, #-37]	; 0xffffffdb
   1325c:	mov	r1, r0
   13260:	lsl	r0, r0, #3
   13264:	ldr	r2, [fp, #-44]	; 0xffffffd4
   13268:	add	r0, r0, r2
   1326c:	strb	r0, [fp, #-37]	; 0xffffffdb
   13270:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13274:	add	r0, r0, #1
   13278:	str	r0, [fp, #-36]	; 0xffffffdc
   1327c:	ldr	r0, [fp, #-20]	; 0xffffffec
   13280:	ldr	r2, [fp, #-36]	; 0xffffffdc
   13284:	add	r2, r2, #2
   13288:	add	r0, r0, r2
   1328c:	ldrb	r0, [r0]
   13290:	sub	r0, r0, #48	; 0x30
   13294:	str	r0, [fp, #-44]	; 0xffffffd4
   13298:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1329c:	movw	r2, #0
   132a0:	cmp	r2, r0
   132a4:	str	r1, [sp, #44]	; 0x2c
   132a8:	bgt	133c4 <__assert_fail@plt+0x2324>
   132ac:	ldr	r0, [fp, #-44]	; 0xffffffd4
   132b0:	cmp	r0, #7
   132b4:	bgt	133c4 <__assert_fail@plt+0x2324>
   132b8:	ldrb	r0, [fp, #-37]	; 0xffffffdb
   132bc:	mov	r1, r0
   132c0:	lsl	r0, r0, #3
   132c4:	ldr	r2, [fp, #-44]	; 0xffffffd4
   132c8:	add	r0, r0, r2
   132cc:	cmp	r0, #256	; 0x100
   132d0:	str	r1, [sp, #40]	; 0x28
   132d4:	bge	13304 <__assert_fail@plt+0x2264>
   132d8:	ldrb	r0, [fp, #-37]	; 0xffffffdb
   132dc:	mov	r1, r0
   132e0:	lsl	r0, r0, #3
   132e4:	ldr	r2, [fp, #-44]	; 0xffffffd4
   132e8:	add	r0, r0, r2
   132ec:	strb	r0, [fp, #-37]	; 0xffffffdb
   132f0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   132f4:	add	r0, r0, #1
   132f8:	str	r0, [fp, #-36]	; 0xffffffdc
   132fc:	str	r1, [sp, #36]	; 0x24
   13300:	b	133c0 <__assert_fail@plt+0x2320>
   13304:	movw	r0, #2825	; 0xb09
   13308:	movt	r0, #2
   1330c:	bl	10fa4 <gettext@plt>
   13310:	ldr	lr, [fp, #-20]	; 0xffffffec
   13314:	ldr	r1, [fp, #-36]	; 0xffffffdc
   13318:	add	r1, lr, r1
   1331c:	ldrb	r3, [r1]
   13320:	ldr	r1, [fp, #-20]	; 0xffffffec
   13324:	ldr	lr, [fp, #-36]	; 0xffffffdc
   13328:	add	lr, lr, #1
   1332c:	add	r1, r1, lr
   13330:	ldrb	r1, [r1]
   13334:	ldr	lr, [fp, #-20]	; 0xffffffec
   13338:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1333c:	add	r2, r2, #2
   13340:	add	r2, lr, r2
   13344:	ldrb	r2, [r2]
   13348:	ldr	lr, [fp, #-20]	; 0xffffffec
   1334c:	ldr	ip, [fp, #-36]	; 0xffffffdc
   13350:	add	ip, lr, ip
   13354:	ldrb	ip, [ip]
   13358:	ldr	lr, [fp, #-20]	; 0xffffffec
   1335c:	ldr	r4, [fp, #-36]	; 0xffffffdc
   13360:	add	r4, r4, #1
   13364:	add	lr, lr, r4
   13368:	ldrb	lr, [lr]
   1336c:	ldr	r4, [fp, #-20]	; 0xffffffec
   13370:	ldr	r5, [fp, #-36]	; 0xffffffdc
   13374:	add	r5, r5, #2
   13378:	add	r4, r4, r5
   1337c:	ldrb	r4, [r4]
   13380:	movw	r5, #0
   13384:	str	r0, [sp, #32]
   13388:	mov	r0, r5
   1338c:	str	r1, [sp, #28]
   13390:	mov	r1, r5
   13394:	ldr	r5, [sp, #32]
   13398:	str	r2, [sp, #24]
   1339c:	mov	r2, r5
   133a0:	ldr	r6, [sp, #28]
   133a4:	str	r6, [sp]
   133a8:	ldr	r7, [sp, #24]
   133ac:	str	r7, [sp, #4]
   133b0:	str	ip, [sp, #8]
   133b4:	str	lr, [sp, #12]
   133b8:	str	r4, [sp, #16]
   133bc:	bl	10f44 <error@plt>
   133c0:	b	133c4 <__assert_fail@plt+0x2324>
   133c4:	b	133c8 <__assert_fail@plt+0x2328>
   133c8:	b	1343c <__assert_fail@plt+0x239c>
   133cc:	movw	r0, #2925	; 0xb6d
   133d0:	movt	r0, #2
   133d4:	bl	10fa4 <gettext@plt>
   133d8:	movw	lr, #0
   133dc:	str	r0, [sp, #20]
   133e0:	mov	r0, lr
   133e4:	mov	r1, lr
   133e8:	ldr	r2, [sp, #20]
   133ec:	bl	10f44 <error@plt>
   133f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   133f4:	ldr	r0, [r0, #4]
   133f8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   133fc:	add	r0, r0, r1
   13400:	movw	r1, #0
   13404:	strb	r1, [r0]
   13408:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1340c:	mvn	r1, #0
   13410:	add	r0, r0, r1
   13414:	str	r0, [fp, #-36]	; 0xffffffdc
   13418:	movw	r0, #92	; 0x5c
   1341c:	strb	r0, [fp, #-37]	; 0xffffffdb
   13420:	b	1343c <__assert_fail@plt+0x239c>
   13424:	ldr	r0, [fp, #-20]	; 0xffffffec
   13428:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1342c:	add	r1, r1, #1
   13430:	add	r0, r0, r1
   13434:	ldrb	r0, [r0]
   13438:	strb	r0, [fp, #-37]	; 0xffffffdb
   1343c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13440:	add	r0, r0, #1
   13444:	str	r0, [fp, #-36]	; 0xffffffdc
   13448:	ldrb	r0, [fp, #-37]	; 0xffffffdb
   1344c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13450:	ldr	r1, [r1]
   13454:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13458:	add	r3, r2, #1
   1345c:	str	r3, [fp, #-32]	; 0xffffffe0
   13460:	add	r1, r1, r2
   13464:	strb	r0, [r1]
   13468:	b	13498 <__assert_fail@plt+0x23f8>
   1346c:	ldr	r0, [fp, #-20]	; 0xffffffec
   13470:	ldr	r1, [fp, #-36]	; 0xffffffdc
   13474:	add	r0, r0, r1
   13478:	ldrb	r0, [r0]
   1347c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13480:	ldr	r1, [r1]
   13484:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13488:	add	r3, r2, #1
   1348c:	str	r3, [fp, #-32]	; 0xffffffe0
   13490:	add	r1, r1, r2
   13494:	strb	r0, [r1]
   13498:	b	1349c <__assert_fail@plt+0x23fc>
   1349c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   134a0:	add	r0, r0, #1
   134a4:	str	r0, [fp, #-36]	; 0xffffffdc
   134a8:	b	12f54 <__assert_fail@plt+0x1eb4>
   134ac:	ldr	r0, [fp, #-32]	; 0xffffffe0
   134b0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   134b4:	str	r0, [r1, #8]
   134b8:	movw	r0, #1
   134bc:	and	r0, r0, #1
   134c0:	sub	sp, fp, #16
   134c4:	pop	{r4, r5, r6, r7, fp, pc}
   134c8:	push	{fp, lr}
   134cc:	mov	fp, sp
   134d0:	sub	sp, sp, #88	; 0x58
   134d4:	str	r0, [fp, #-8]
   134d8:	str	r1, [fp, #-12]
   134dc:	ldr	r0, [fp, #-8]
   134e0:	ldr	r0, [r0]
   134e4:	str	r0, [fp, #-16]
   134e8:	movw	r0, #0
   134ec:	str	r0, [fp, #-20]	; 0xffffffec
   134f0:	ldr	r0, [fp, #-20]	; 0xffffffec
   134f4:	add	r0, r0, #2
   134f8:	ldr	r1, [fp, #-8]
   134fc:	ldr	r1, [r1, #8]
   13500:	cmp	r0, r1
   13504:	bcs	138d4 <__assert_fail@plt+0x2834>
   13508:	ldr	r0, [fp, #-8]
   1350c:	ldr	r1, [fp, #-20]	; 0xffffffec
   13510:	movw	r2, #91	; 0x5b
   13514:	and	r2, r2, #255	; 0xff
   13518:	bl	13960 <__assert_fail@plt+0x28c0>
   1351c:	tst	r0, #1
   13520:	beq	13834 <__assert_fail@plt+0x2794>
   13524:	movw	r0, #1
   13528:	strb	r0, [fp, #-21]	; 0xffffffeb
   1352c:	ldr	r0, [fp, #-8]
   13530:	ldr	r1, [fp, #-20]	; 0xffffffec
   13534:	add	r1, r1, #1
   13538:	movw	r2, #58	; 0x3a
   1353c:	and	r2, r2, #255	; 0xff
   13540:	bl	13960 <__assert_fail@plt+0x28c0>
   13544:	tst	r0, #1
   13548:	bne	1356c <__assert_fail@plt+0x24cc>
   1354c:	ldr	r0, [fp, #-8]
   13550:	ldr	r1, [fp, #-20]	; 0xffffffec
   13554:	add	r1, r1, #1
   13558:	movw	r2, #61	; 0x3d
   1355c:	and	r2, r2, #255	; 0xff
   13560:	bl	13960 <__assert_fail@plt+0x28c0>
   13564:	tst	r0, #1
   13568:	beq	13798 <__assert_fail@plt+0x26f8>
   1356c:	ldr	r0, [fp, #-8]
   13570:	ldr	r1, [fp, #-20]	; 0xffffffec
   13574:	add	r1, r1, #2
   13578:	ldr	r2, [fp, #-16]
   1357c:	ldr	r3, [fp, #-20]	; 0xffffffec
   13580:	add	r3, r3, #1
   13584:	add	r2, r2, r3
   13588:	ldrb	r2, [r2]
   1358c:	add	r3, sp, #40	; 0x28
   13590:	bl	139c8 <__assert_fail@plt+0x2928>
   13594:	tst	r0, #1
   13598:	beq	13794 <__assert_fail@plt+0x26f4>
   1359c:	ldr	r0, [sp, #40]	; 0x28
   135a0:	sub	r0, r0, #1
   135a4:	ldr	r1, [fp, #-20]	; 0xffffffec
   135a8:	add	r1, r1, #2
   135ac:	sub	r0, r0, r1
   135b0:	add	r0, r0, #1
   135b4:	str	r0, [sp, #36]	; 0x24
   135b8:	ldr	r0, [fp, #-16]
   135bc:	ldr	r1, [fp, #-20]	; 0xffffffec
   135c0:	add	r0, r0, r1
   135c4:	add	r0, r0, #2
   135c8:	str	r0, [sp, #32]
   135cc:	ldr	r0, [sp, #36]	; 0x24
   135d0:	cmp	r0, #0
   135d4:	bne	13650 <__assert_fail@plt+0x25b0>
   135d8:	ldr	r0, [fp, #-16]
   135dc:	ldr	r1, [fp, #-20]	; 0xffffffec
   135e0:	add	r1, r1, #1
   135e4:	add	r0, r0, r1
   135e8:	ldrb	r0, [r0]
   135ec:	cmp	r0, #58	; 0x3a
   135f0:	bne	1361c <__assert_fail@plt+0x257c>
   135f4:	movw	r0, #2990	; 0xbae
   135f8:	movt	r0, #2
   135fc:	bl	10fa4 <gettext@plt>
   13600:	movw	lr, #0
   13604:	str	r0, [sp, #20]
   13608:	mov	r0, lr
   1360c:	mov	r1, lr
   13610:	ldr	r2, [sp, #20]
   13614:	bl	10f44 <error@plt>
   13618:	b	13640 <__assert_fail@plt+0x25a0>
   1361c:	movw	r0, #3026	; 0xbd2
   13620:	movt	r0, #2
   13624:	bl	10fa4 <gettext@plt>
   13628:	movw	lr, #0
   1362c:	str	r0, [sp, #16]
   13630:	mov	r0, lr
   13634:	mov	r1, lr
   13638:	ldr	r2, [sp, #16]
   1363c:	bl	10f44 <error@plt>
   13640:	movw	r0, #0
   13644:	and	r0, r0, #1
   13648:	strb	r0, [fp, #-1]
   1364c:	b	13920 <__assert_fail@plt+0x2880>
   13650:	ldr	r0, [fp, #-16]
   13654:	ldr	r1, [fp, #-20]	; 0xffffffec
   13658:	add	r1, r1, #1
   1365c:	add	r0, r0, r1
   13660:	ldrb	r0, [r0]
   13664:	cmp	r0, #58	; 0x3a
   13668:	bne	13700 <__assert_fail@plt+0x2660>
   1366c:	ldr	r0, [fp, #-12]
   13670:	ldr	r1, [sp, #32]
   13674:	ldr	r2, [sp, #36]	; 0x24
   13678:	bl	13ac4 <__assert_fail@plt+0x2a24>
   1367c:	tst	r0, #1
   13680:	bne	136fc <__assert_fail@plt+0x265c>
   13684:	ldr	r0, [fp, #-8]
   13688:	ldr	r1, [fp, #-20]	; 0xffffffec
   1368c:	add	r1, r1, #2
   13690:	bl	13ba8 <__assert_fail@plt+0x2b08>
   13694:	tst	r0, #1
   13698:	beq	136a0 <__assert_fail@plt+0x2600>
   1369c:	b	1379c <__assert_fail@plt+0x26fc>
   136a0:	ldr	r0, [sp, #32]
   136a4:	ldr	r1, [sp, #36]	; 0x24
   136a8:	bl	13c9c <__assert_fail@plt+0x2bfc>
   136ac:	str	r0, [sp, #28]
   136b0:	movw	r0, #3069	; 0xbfd
   136b4:	movt	r0, #2
   136b8:	bl	10fa4 <gettext@plt>
   136bc:	ldr	r1, [sp, #28]
   136c0:	str	r0, [sp, #12]
   136c4:	mov	r0, r1
   136c8:	bl	17bd0 <__assert_fail@plt+0x6b30>
   136cc:	movw	r1, #0
   136d0:	str	r0, [sp, #8]
   136d4:	mov	r0, r1
   136d8:	ldr	r2, [sp, #12]
   136dc:	ldr	r3, [sp, #8]
   136e0:	bl	10f44 <error@plt>
   136e4:	ldr	r0, [sp, #28]
   136e8:	bl	15534 <__assert_fail@plt+0x4494>
   136ec:	movw	r0, #0
   136f0:	and	r0, r0, #1
   136f4:	strb	r0, [fp, #-1]
   136f8:	b	13920 <__assert_fail@plt+0x2880>
   136fc:	b	13784 <__assert_fail@plt+0x26e4>
   13700:	ldr	r0, [fp, #-12]
   13704:	ldr	r1, [sp, #32]
   13708:	ldr	r2, [sp, #36]	; 0x24
   1370c:	bl	13e8c <__assert_fail@plt+0x2dec>
   13710:	tst	r0, #1
   13714:	bne	13780 <__assert_fail@plt+0x26e0>
   13718:	ldr	r0, [fp, #-8]
   1371c:	ldr	r1, [fp, #-20]	; 0xffffffec
   13720:	add	r1, r1, #2
   13724:	bl	13ba8 <__assert_fail@plt+0x2b08>
   13728:	tst	r0, #1
   1372c:	beq	13734 <__assert_fail@plt+0x2694>
   13730:	b	1379c <__assert_fail@plt+0x26fc>
   13734:	ldr	r0, [sp, #32]
   13738:	ldr	r1, [sp, #36]	; 0x24
   1373c:	bl	13c9c <__assert_fail@plt+0x2bfc>
   13740:	str	r0, [sp, #24]
   13744:	movw	r0, #3096	; 0xc18
   13748:	movt	r0, #2
   1374c:	bl	10fa4 <gettext@plt>
   13750:	ldr	r3, [sp, #24]
   13754:	movw	r1, #0
   13758:	str	r0, [sp, #4]
   1375c:	mov	r0, r1
   13760:	ldr	r2, [sp, #4]
   13764:	bl	10f44 <error@plt>
   13768:	ldr	r0, [sp, #24]
   1376c:	bl	15534 <__assert_fail@plt+0x4494>
   13770:	movw	r0, #0
   13774:	and	r0, r0, #1
   13778:	strb	r0, [fp, #-1]
   1377c:	b	13920 <__assert_fail@plt+0x2880>
   13780:	b	13784 <__assert_fail@plt+0x26e4>
   13784:	ldr	r0, [sp, #40]	; 0x28
   13788:	add	r0, r0, #2
   1378c:	str	r0, [fp, #-20]	; 0xffffffec
   13790:	b	134f0 <__assert_fail@plt+0x2450>
   13794:	b	13798 <__assert_fail@plt+0x26f8>
   13798:	b	1379c <__assert_fail@plt+0x26fc>
   1379c:	ldr	r0, [fp, #-8]
   137a0:	ldr	r1, [fp, #-20]	; 0xffffffec
   137a4:	add	r1, r1, #1
   137a8:	sub	r2, fp, #29
   137ac:	sub	r3, fp, #40	; 0x28
   137b0:	sub	ip, fp, #28
   137b4:	str	ip, [sp]
   137b8:	bl	13f60 <__assert_fail@plt+0x2ec0>
   137bc:	str	r0, [sp, #44]	; 0x2c
   137c0:	ldr	r0, [sp, #44]	; 0x2c
   137c4:	cmp	r0, #0
   137c8:	bne	137f4 <__assert_fail@plt+0x2754>
   137cc:	ldr	r0, [fp, #-12]
   137d0:	ldrb	r1, [fp, #-29]	; 0xffffffe3
   137d4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   137d8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   137dc:	uxtb	r1, r1
   137e0:	bl	141e0 <__assert_fail@plt+0x3140>
   137e4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   137e8:	add	r0, r0, #1
   137ec:	str	r0, [fp, #-20]	; 0xffffffec
   137f0:	b	13820 <__assert_fail@plt+0x2780>
   137f4:	ldr	r0, [sp, #44]	; 0x2c
   137f8:	cmn	r0, #1
   137fc:	bne	1380c <__assert_fail@plt+0x276c>
   13800:	movw	r0, #0
   13804:	strb	r0, [fp, #-21]	; 0xffffffeb
   13808:	b	1381c <__assert_fail@plt+0x277c>
   1380c:	movw	r0, #0
   13810:	and	r0, r0, #1
   13814:	strb	r0, [fp, #-1]
   13818:	b	13920 <__assert_fail@plt+0x2880>
   1381c:	b	13820 <__assert_fail@plt+0x2780>
   13820:	ldrb	r0, [fp, #-21]	; 0xffffffeb
   13824:	tst	r0, #1
   13828:	beq	13830 <__assert_fail@plt+0x2790>
   1382c:	b	134f0 <__assert_fail@plt+0x2450>
   13830:	b	13834 <__assert_fail@plt+0x2794>
   13834:	ldr	r0, [fp, #-8]
   13838:	ldr	r1, [fp, #-20]	; 0xffffffec
   1383c:	add	r1, r1, #1
   13840:	movw	r2, #45	; 0x2d
   13844:	and	r2, r2, #255	; 0xff
   13848:	bl	13960 <__assert_fail@plt+0x28c0>
   1384c:	tst	r0, #1
   13850:	beq	138ac <__assert_fail@plt+0x280c>
   13854:	ldr	r0, [fp, #-12]
   13858:	ldr	r1, [fp, #-16]
   1385c:	ldr	r2, [fp, #-20]	; 0xffffffec
   13860:	add	r1, r1, r2
   13864:	ldrb	r1, [r1]
   13868:	ldr	r2, [fp, #-16]
   1386c:	ldr	r3, [fp, #-20]	; 0xffffffec
   13870:	add	r3, r3, #2
   13874:	add	r2, r2, r3
   13878:	and	r1, r1, #255	; 0xff
   1387c:	ldrb	r2, [r2]
   13880:	bl	1429c <__assert_fail@plt+0x31fc>
   13884:	tst	r0, #1
   13888:	bne	1389c <__assert_fail@plt+0x27fc>
   1388c:	movw	r0, #0
   13890:	and	r0, r0, #1
   13894:	strb	r0, [fp, #-1]
   13898:	b	13920 <__assert_fail@plt+0x2880>
   1389c:	ldr	r0, [fp, #-20]	; 0xffffffec
   138a0:	add	r0, r0, #3
   138a4:	str	r0, [fp, #-20]	; 0xffffffec
   138a8:	b	138d0 <__assert_fail@plt+0x2830>
   138ac:	ldr	r0, [fp, #-12]
   138b0:	ldr	r1, [fp, #-16]
   138b4:	ldr	r2, [fp, #-20]	; 0xffffffec
   138b8:	add	r1, r1, r2
   138bc:	ldrb	r1, [r1]
   138c0:	bl	143d0 <__assert_fail@plt+0x3330>
   138c4:	ldr	r0, [fp, #-20]	; 0xffffffec
   138c8:	add	r0, r0, #1
   138cc:	str	r0, [fp, #-20]	; 0xffffffec
   138d0:	b	134f0 <__assert_fail@plt+0x2450>
   138d4:	b	138d8 <__assert_fail@plt+0x2838>
   138d8:	ldr	r0, [fp, #-20]	; 0xffffffec
   138dc:	ldr	r1, [fp, #-8]
   138e0:	ldr	r1, [r1, #8]
   138e4:	cmp	r0, r1
   138e8:	bcs	13914 <__assert_fail@plt+0x2874>
   138ec:	ldr	r0, [fp, #-12]
   138f0:	ldr	r1, [fp, #-16]
   138f4:	ldr	r2, [fp, #-20]	; 0xffffffec
   138f8:	add	r1, r1, r2
   138fc:	ldrb	r1, [r1]
   13900:	bl	143d0 <__assert_fail@plt+0x3330>
   13904:	ldr	r0, [fp, #-20]	; 0xffffffec
   13908:	add	r0, r0, #1
   1390c:	str	r0, [fp, #-20]	; 0xffffffec
   13910:	b	138d8 <__assert_fail@plt+0x2838>
   13914:	movw	r0, #1
   13918:	and	r0, r0, #1
   1391c:	strb	r0, [fp, #-1]
   13920:	ldrb	r0, [fp, #-1]
   13924:	and	r0, r0, #1
   13928:	mov	sp, fp
   1392c:	pop	{fp, pc}
   13930:	push	{fp, lr}
   13934:	mov	fp, sp
   13938:	sub	sp, sp, #8
   1393c:	str	r0, [sp, #4]
   13940:	ldr	r0, [sp, #4]
   13944:	ldr	r0, [r0]
   13948:	bl	15534 <__assert_fail@plt+0x4494>
   1394c:	ldr	r0, [sp, #4]
   13950:	ldr	r0, [r0, #4]
   13954:	bl	15534 <__assert_fail@plt+0x4494>
   13958:	mov	sp, fp
   1395c:	pop	{fp, pc}
   13960:	sub	sp, sp, #16
   13964:	str	r0, [sp, #12]
   13968:	str	r1, [sp, #8]
   1396c:	strb	r2, [sp, #7]
   13970:	ldr	r0, [sp, #12]
   13974:	ldr	r0, [r0]
   13978:	ldr	r1, [sp, #8]
   1397c:	add	r0, r0, r1
   13980:	ldrb	r0, [r0]
   13984:	ldrb	r1, [sp, #7]
   13988:	cmp	r0, r1
   1398c:	movw	r0, #0
   13990:	str	r0, [sp]
   13994:	bne	139b8 <__assert_fail@plt+0x2918>
   13998:	ldr	r0, [sp, #12]
   1399c:	ldr	r0, [r0, #4]
   139a0:	ldr	r1, [sp, #8]
   139a4:	add	r0, r0, r1
   139a8:	ldrb	r0, [r0]
   139ac:	mvn	r1, #0
   139b0:	eor	r0, r0, r1
   139b4:	str	r0, [sp]
   139b8:	ldr	r0, [sp]
   139bc:	and	r0, r0, #1
   139c0:	add	sp, sp, #16
   139c4:	bx	lr
   139c8:	sub	sp, sp, #24
   139cc:	str	r0, [sp, #16]
   139d0:	str	r1, [sp, #12]
   139d4:	strb	r2, [sp, #11]
   139d8:	str	r3, [sp, #4]
   139dc:	ldr	r0, [sp, #12]
   139e0:	str	r0, [sp]
   139e4:	ldr	r0, [sp]
   139e8:	ldr	r1, [sp, #16]
   139ec:	ldr	r1, [r1, #8]
   139f0:	sub	r1, r1, #1
   139f4:	cmp	r0, r1
   139f8:	bcs	13aa8 <__assert_fail@plt+0x2a08>
   139fc:	ldr	r0, [sp, #16]
   13a00:	ldr	r0, [r0]
   13a04:	ldr	r1, [sp]
   13a08:	add	r0, r0, r1
   13a0c:	ldrb	r0, [r0]
   13a10:	ldrb	r1, [sp, #11]
   13a14:	cmp	r0, r1
   13a18:	bne	13a94 <__assert_fail@plt+0x29f4>
   13a1c:	ldr	r0, [sp, #16]
   13a20:	ldr	r0, [r0]
   13a24:	ldr	r1, [sp]
   13a28:	add	r1, r1, #1
   13a2c:	add	r0, r0, r1
   13a30:	ldrb	r0, [r0]
   13a34:	cmp	r0, #93	; 0x5d
   13a38:	bne	13a94 <__assert_fail@plt+0x29f4>
   13a3c:	ldr	r0, [sp, #16]
   13a40:	ldr	r0, [r0, #4]
   13a44:	ldr	r1, [sp]
   13a48:	add	r0, r0, r1
   13a4c:	ldrb	r0, [r0]
   13a50:	tst	r0, #1
   13a54:	bne	13a94 <__assert_fail@plt+0x29f4>
   13a58:	ldr	r0, [sp, #16]
   13a5c:	ldr	r0, [r0, #4]
   13a60:	ldr	r1, [sp]
   13a64:	add	r1, r1, #1
   13a68:	add	r0, r0, r1
   13a6c:	ldrb	r0, [r0]
   13a70:	tst	r0, #1
   13a74:	bne	13a94 <__assert_fail@plt+0x29f4>
   13a78:	ldr	r0, [sp]
   13a7c:	ldr	r1, [sp, #4]
   13a80:	str	r0, [r1]
   13a84:	movw	r0, #1
   13a88:	and	r0, r0, #1
   13a8c:	strb	r0, [sp, #23]
   13a90:	b	13ab4 <__assert_fail@plt+0x2a14>
   13a94:	b	13a98 <__assert_fail@plt+0x29f8>
   13a98:	ldr	r0, [sp]
   13a9c:	add	r0, r0, #1
   13aa0:	str	r0, [sp]
   13aa4:	b	139e4 <__assert_fail@plt+0x2944>
   13aa8:	movw	r0, #0
   13aac:	and	r0, r0, #1
   13ab0:	strb	r0, [sp, #23]
   13ab4:	ldrb	r0, [sp, #23]
   13ab8:	and	r0, r0, #1
   13abc:	add	sp, sp, #24
   13ac0:	bx	lr
   13ac4:	push	{fp, lr}
   13ac8:	mov	fp, sp
   13acc:	sub	sp, sp, #24
   13ad0:	str	r0, [fp, #-8]
   13ad4:	str	r1, [sp, #12]
   13ad8:	str	r2, [sp, #8]
   13adc:	ldr	r0, [sp, #12]
   13ae0:	ldr	r1, [sp, #8]
   13ae4:	bl	14468 <__assert_fail@plt+0x33c8>
   13ae8:	str	r0, [sp, #4]
   13aec:	ldr	r0, [sp, #4]
   13af0:	movw	r1, #9999	; 0x270f
   13af4:	cmp	r0, r1
   13af8:	bne	13b0c <__assert_fail@plt+0x2a6c>
   13afc:	movw	r0, #0
   13b00:	and	r0, r0, #1
   13b04:	strb	r0, [fp, #-1]
   13b08:	b	13b98 <__assert_fail@plt+0x2af8>
   13b0c:	movw	r0, #24
   13b10:	bl	186cc <__assert_fail@plt+0x762c>
   13b14:	str	r0, [sp]
   13b18:	ldr	r0, [sp]
   13b1c:	movw	lr, #0
   13b20:	str	lr, [r0, #4]
   13b24:	ldr	r0, [sp]
   13b28:	movw	r1, #2
   13b2c:	str	r1, [r0]
   13b30:	ldr	r0, [sp, #4]
   13b34:	ldr	r1, [sp]
   13b38:	str	r0, [r1, #8]
   13b3c:	ldr	r0, [fp, #-8]
   13b40:	ldr	r0, [r0, #4]
   13b44:	cmp	r0, lr
   13b48:	beq	13b50 <__assert_fail@plt+0x2ab0>
   13b4c:	b	13b70 <__assert_fail@plt+0x2ad0>
   13b50:	movw	r0, #3153	; 0xc51
   13b54:	movt	r0, #2
   13b58:	movw	r1, #2380	; 0x94c
   13b5c:	movt	r1, #2
   13b60:	movw	r2, #701	; 0x2bd
   13b64:	movw	r3, #3164	; 0xc5c
   13b68:	movt	r3, #2
   13b6c:	bl	110a0 <__assert_fail@plt>
   13b70:	ldr	r0, [sp]
   13b74:	ldr	r1, [fp, #-8]
   13b78:	ldr	r1, [r1, #4]
   13b7c:	str	r0, [r1, #4]
   13b80:	ldr	r0, [sp]
   13b84:	ldr	r1, [fp, #-8]
   13b88:	str	r0, [r1, #4]
   13b8c:	movw	r0, #1
   13b90:	and	r0, r0, #1
   13b94:	strb	r0, [fp, #-1]
   13b98:	ldrb	r0, [fp, #-1]
   13b9c:	and	r0, r0, #1
   13ba0:	mov	sp, fp
   13ba4:	pop	{fp, pc}
   13ba8:	push	{fp, lr}
   13bac:	mov	fp, sp
   13bb0:	sub	sp, sp, #16
   13bb4:	str	r0, [sp, #8]
   13bb8:	str	r1, [sp, #4]
   13bbc:	ldr	r0, [sp, #8]
   13bc0:	ldr	r1, [sp, #4]
   13bc4:	movw	r2, #42	; 0x2a
   13bc8:	and	r2, r2, #255	; 0xff
   13bcc:	bl	13960 <__assert_fail@plt+0x28c0>
   13bd0:	tst	r0, #1
   13bd4:	bne	13be8 <__assert_fail@plt+0x2b48>
   13bd8:	movw	r0, #0
   13bdc:	and	r0, r0, #1
   13be0:	strb	r0, [fp, #-1]
   13be4:	b	13c8c <__assert_fail@plt+0x2bec>
   13be8:	ldr	r0, [sp, #4]
   13bec:	add	r0, r0, #1
   13bf0:	str	r0, [sp]
   13bf4:	ldr	r0, [sp]
   13bf8:	ldr	r1, [sp, #8]
   13bfc:	ldr	r1, [r1, #8]
   13c00:	cmp	r0, r1
   13c04:	bcs	13c80 <__assert_fail@plt+0x2be0>
   13c08:	ldr	r0, [sp, #8]
   13c0c:	ldr	r0, [r0]
   13c10:	ldr	r1, [sp]
   13c14:	add	r0, r0, r1
   13c18:	ldrb	r0, [r0]
   13c1c:	bl	14510 <__assert_fail@plt+0x3470>
   13c20:	and	r0, r0, #255	; 0xff
   13c24:	sub	r0, r0, #48	; 0x30
   13c28:	cmp	r0, #9
   13c2c:	bhi	13c4c <__assert_fail@plt+0x2bac>
   13c30:	ldr	r0, [sp, #8]
   13c34:	ldr	r0, [r0, #4]
   13c38:	ldr	r1, [sp]
   13c3c:	add	r0, r0, r1
   13c40:	ldrb	r0, [r0]
   13c44:	tst	r0, #1
   13c48:	beq	13c6c <__assert_fail@plt+0x2bcc>
   13c4c:	ldr	r0, [sp, #8]
   13c50:	ldr	r1, [sp]
   13c54:	movw	r2, #93	; 0x5d
   13c58:	and	r2, r2, #255	; 0xff
   13c5c:	bl	13960 <__assert_fail@plt+0x28c0>
   13c60:	and	r0, r0, #1
   13c64:	strb	r0, [fp, #-1]
   13c68:	b	13c8c <__assert_fail@plt+0x2bec>
   13c6c:	b	13c70 <__assert_fail@plt+0x2bd0>
   13c70:	ldr	r0, [sp]
   13c74:	add	r0, r0, #1
   13c78:	str	r0, [sp]
   13c7c:	b	13bf4 <__assert_fail@plt+0x2b54>
   13c80:	movw	r0, #0
   13c84:	and	r0, r0, #1
   13c88:	strb	r0, [fp, #-1]
   13c8c:	ldrb	r0, [fp, #-1]
   13c90:	and	r0, r0, #1
   13c94:	mov	sp, fp
   13c98:	pop	{fp, pc}
   13c9c:	push	{fp, lr}
   13ca0:	mov	fp, sp
   13ca4:	sub	sp, sp, #48	; 0x30
   13ca8:	str	r0, [fp, #-4]
   13cac:	str	r1, [fp, #-8]
   13cb0:	ldr	r0, [fp, #-8]
   13cb4:	add	r0, r0, #1
   13cb8:	movw	r1, #4
   13cbc:	bl	18824 <__assert_fail@plt+0x7784>
   13cc0:	str	r0, [fp, #-12]
   13cc4:	ldr	r0, [fp, #-12]
   13cc8:	str	r0, [fp, #-16]
   13ccc:	movw	r0, #0
   13cd0:	str	r0, [fp, #-20]	; 0xffffffec
   13cd4:	ldr	r0, [fp, #-20]	; 0xffffffec
   13cd8:	ldr	r1, [fp, #-8]
   13cdc:	cmp	r0, r1
   13ce0:	bcs	13e80 <__assert_fail@plt+0x2de0>
   13ce4:	mov	r0, #0
   13ce8:	str	r0, [sp, #16]
   13cec:	ldr	r0, [fp, #-4]
   13cf0:	ldr	r1, [fp, #-20]	; 0xffffffec
   13cf4:	ldrb	r0, [r0, r1]
   13cf8:	strb	r0, [sp, #15]
   13cfc:	ldrb	r0, [sp, #15]
   13d00:	mov	r1, r0
   13d04:	cmp	r0, #7
   13d08:	str	r1, [sp, #8]
   13d0c:	beq	13d94 <__assert_fail@plt+0x2cf4>
   13d10:	b	13d14 <__assert_fail@plt+0x2c74>
   13d14:	ldr	r0, [sp, #8]
   13d18:	cmp	r0, #8
   13d1c:	beq	13da4 <__assert_fail@plt+0x2d04>
   13d20:	b	13d24 <__assert_fail@plt+0x2c84>
   13d24:	ldr	r0, [sp, #8]
   13d28:	cmp	r0, #9
   13d2c:	beq	13de4 <__assert_fail@plt+0x2d44>
   13d30:	b	13d34 <__assert_fail@plt+0x2c94>
   13d34:	ldr	r0, [sp, #8]
   13d38:	cmp	r0, #10
   13d3c:	beq	13dc4 <__assert_fail@plt+0x2d24>
   13d40:	b	13d44 <__assert_fail@plt+0x2ca4>
   13d44:	ldr	r0, [sp, #8]
   13d48:	cmp	r0, #11
   13d4c:	beq	13df4 <__assert_fail@plt+0x2d54>
   13d50:	b	13d54 <__assert_fail@plt+0x2cb4>
   13d54:	ldr	r0, [sp, #8]
   13d58:	cmp	r0, #12
   13d5c:	beq	13db4 <__assert_fail@plt+0x2d14>
   13d60:	b	13d64 <__assert_fail@plt+0x2cc4>
   13d64:	ldr	r0, [sp, #8]
   13d68:	cmp	r0, #13
   13d6c:	beq	13dd4 <__assert_fail@plt+0x2d34>
   13d70:	b	13d74 <__assert_fail@plt+0x2cd4>
   13d74:	ldr	r0, [sp, #8]
   13d78:	cmp	r0, #92	; 0x5c
   13d7c:	bne	13e04 <__assert_fail@plt+0x2d64>
   13d80:	b	13d84 <__assert_fail@plt+0x2ce4>
   13d84:	movw	r0, #3297	; 0xce1
   13d88:	movt	r0, #2
   13d8c:	str	r0, [sp, #16]
   13d90:	b	13e60 <__assert_fail@plt+0x2dc0>
   13d94:	movw	r0, #3299	; 0xce3
   13d98:	movt	r0, #2
   13d9c:	str	r0, [sp, #16]
   13da0:	b	13e60 <__assert_fail@plt+0x2dc0>
   13da4:	movw	r0, #3302	; 0xce6
   13da8:	movt	r0, #2
   13dac:	str	r0, [sp, #16]
   13db0:	b	13e60 <__assert_fail@plt+0x2dc0>
   13db4:	movw	r0, #3305	; 0xce9
   13db8:	movt	r0, #2
   13dbc:	str	r0, [sp, #16]
   13dc0:	b	13e60 <__assert_fail@plt+0x2dc0>
   13dc4:	movw	r0, #3308	; 0xcec
   13dc8:	movt	r0, #2
   13dcc:	str	r0, [sp, #16]
   13dd0:	b	13e60 <__assert_fail@plt+0x2dc0>
   13dd4:	movw	r0, #3311	; 0xcef
   13dd8:	movt	r0, #2
   13ddc:	str	r0, [sp, #16]
   13de0:	b	13e60 <__assert_fail@plt+0x2dc0>
   13de4:	movw	r0, #3314	; 0xcf2
   13de8:	movt	r0, #2
   13dec:	str	r0, [sp, #16]
   13df0:	b	13e60 <__assert_fail@plt+0x2dc0>
   13df4:	movw	r0, #3317	; 0xcf5
   13df8:	movt	r0, #2
   13dfc:	str	r0, [sp, #16]
   13e00:	b	13e60 <__assert_fail@plt+0x2dc0>
   13e04:	bl	10f8c <__ctype_b_loc@plt>
   13e08:	ldr	r0, [r0]
   13e0c:	ldrb	lr, [sp, #15]
   13e10:	mov	r1, lr
   13e14:	add	r0, r0, lr, lsl #1
   13e18:	ldrh	r0, [r0]
   13e1c:	and	r0, r0, #16384	; 0x4000
   13e20:	cmp	r0, #0
   13e24:	str	r1, [sp, #4]
   13e28:	beq	13e40 <__assert_fail@plt+0x2da0>
   13e2c:	ldrb	r0, [sp, #15]
   13e30:	strb	r0, [sp, #23]
   13e34:	movw	r0, #0
   13e38:	strb	r0, [sp, #24]
   13e3c:	b	13e58 <__assert_fail@plt+0x2db8>
   13e40:	add	r0, sp, #23
   13e44:	ldrb	r2, [sp, #15]
   13e48:	movw	r1, #3320	; 0xcf8
   13e4c:	movt	r1, #2
   13e50:	bl	11058 <sprintf@plt>
   13e54:	str	r0, [sp]
   13e58:	add	r0, sp, #23
   13e5c:	str	r0, [sp, #16]
   13e60:	ldr	r0, [fp, #-16]
   13e64:	ldr	r1, [sp, #16]
   13e68:	bl	10ed8 <stpcpy@plt>
   13e6c:	str	r0, [fp, #-16]
   13e70:	ldr	r0, [fp, #-20]	; 0xffffffec
   13e74:	add	r0, r0, #1
   13e78:	str	r0, [fp, #-20]	; 0xffffffec
   13e7c:	b	13cd4 <__assert_fail@plt+0x2c34>
   13e80:	ldr	r0, [fp, #-12]
   13e84:	mov	sp, fp
   13e88:	pop	{fp, pc}
   13e8c:	push	{fp, lr}
   13e90:	mov	fp, sp
   13e94:	sub	sp, sp, #24
   13e98:	str	r0, [fp, #-8]
   13e9c:	str	r1, [sp, #12]
   13ea0:	str	r2, [sp, #8]
   13ea4:	ldr	r0, [sp, #8]
   13ea8:	cmp	r0, #1
   13eac:	beq	13ec0 <__assert_fail@plt+0x2e20>
   13eb0:	movw	r0, #0
   13eb4:	and	r0, r0, #1
   13eb8:	strb	r0, [fp, #-1]
   13ebc:	b	13f50 <__assert_fail@plt+0x2eb0>
   13ec0:	movw	r0, #24
   13ec4:	bl	186cc <__assert_fail@plt+0x762c>
   13ec8:	str	r0, [sp, #4]
   13ecc:	ldr	r0, [sp, #4]
   13ed0:	movw	lr, #0
   13ed4:	str	lr, [r0, #4]
   13ed8:	ldr	r0, [sp, #4]
   13edc:	movw	r1, #3
   13ee0:	str	r1, [r0]
   13ee4:	ldr	r0, [sp, #12]
   13ee8:	ldrb	r0, [r0]
   13eec:	ldr	r1, [sp, #4]
   13ef0:	strb	r0, [r1, #8]
   13ef4:	ldr	r0, [fp, #-8]
   13ef8:	ldr	r0, [r0, #4]
   13efc:	cmp	r0, lr
   13f00:	beq	13f08 <__assert_fail@plt+0x2e68>
   13f04:	b	13f28 <__assert_fail@plt+0x2e88>
   13f08:	movw	r0, #3153	; 0xc51
   13f0c:	movt	r0, #2
   13f10:	movw	r1, #2380	; 0x94c
   13f14:	movt	r1, #2
   13f18:	movw	r2, #743	; 0x2e7
   13f1c:	movw	r3, #3326	; 0xcfe
   13f20:	movt	r3, #2
   13f24:	bl	110a0 <__assert_fail@plt>
   13f28:	ldr	r0, [sp, #4]
   13f2c:	ldr	r1, [fp, #-8]
   13f30:	ldr	r1, [r1, #4]
   13f34:	str	r0, [r1, #4]
   13f38:	ldr	r0, [sp, #4]
   13f3c:	ldr	r1, [fp, #-8]
   13f40:	str	r0, [r1, #4]
   13f44:	movw	r0, #1
   13f48:	and	r0, r0, #1
   13f4c:	strb	r0, [fp, #-1]
   13f50:	ldrb	r0, [fp, #-1]
   13f54:	and	r0, r0, #1
   13f58:	mov	sp, fp
   13f5c:	pop	{fp, pc}
   13f60:	push	{fp, lr}
   13f64:	mov	fp, sp
   13f68:	sub	sp, sp, #64	; 0x40
   13f6c:	ldr	ip, [fp, #8]
   13f70:	str	r0, [fp, #-8]
   13f74:	str	r1, [fp, #-12]
   13f78:	str	r2, [fp, #-16]
   13f7c:	str	r3, [fp, #-20]	; 0xffffffec
   13f80:	ldr	r0, [fp, #-12]
   13f84:	add	r0, r0, #1
   13f88:	ldr	r1, [fp, #-8]
   13f8c:	ldr	r1, [r1, #8]
   13f90:	cmp	r0, r1
   13f94:	str	ip, [sp, #20]
   13f98:	bcs	13fa0 <__assert_fail@plt+0x2f00>
   13f9c:	b	13fc0 <__assert_fail@plt+0x2f20>
   13fa0:	movw	r0, #3393	; 0xd41
   13fa4:	movt	r0, #2
   13fa8:	movw	r1, #2380	; 0x94c
   13fac:	movt	r1, #2
   13fb0:	movw	r2, #784	; 0x310
   13fb4:	movw	r3, #3417	; 0xd59
   13fb8:	movt	r3, #2
   13fbc:	bl	110a0 <__assert_fail@plt>
   13fc0:	ldr	r0, [fp, #-8]
   13fc4:	ldr	r1, [fp, #-12]
   13fc8:	add	r1, r1, #1
   13fcc:	movw	r2, #42	; 0x2a
   13fd0:	and	r2, r2, #255	; 0xff
   13fd4:	bl	13960 <__assert_fail@plt+0x28c0>
   13fd8:	tst	r0, #1
   13fdc:	bne	13fec <__assert_fail@plt+0x2f4c>
   13fe0:	mvn	r0, #0
   13fe4:	str	r0, [fp, #-4]
   13fe8:	b	141d4 <__assert_fail@plt+0x3134>
   13fec:	ldr	r0, [fp, #-12]
   13ff0:	add	r0, r0, #2
   13ff4:	str	r0, [fp, #-24]	; 0xffffffe8
   13ff8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13ffc:	ldr	r1, [fp, #-8]
   14000:	ldr	r1, [r1, #8]
   14004:	cmp	r0, r1
   14008:	movw	r0, #0
   1400c:	str	r0, [sp, #16]
   14010:	bcs	14034 <__assert_fail@plt+0x2f94>
   14014:	ldr	r0, [fp, #-8]
   14018:	ldr	r0, [r0, #4]
   1401c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14020:	add	r0, r0, r1
   14024:	ldrb	r0, [r0]
   14028:	mvn	r1, #0
   1402c:	eor	r0, r0, r1
   14030:	str	r0, [sp, #16]
   14034:	ldr	r0, [sp, #16]
   14038:	tst	r0, #1
   1403c:	beq	141cc <__assert_fail@plt+0x312c>
   14040:	ldr	r0, [fp, #-8]
   14044:	ldr	r0, [r0]
   14048:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1404c:	add	r0, r0, r1
   14050:	ldrb	r0, [r0]
   14054:	cmp	r0, #93	; 0x5d
   14058:	bne	141b8 <__assert_fail@plt+0x3118>
   1405c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14060:	ldr	r1, [fp, #-12]
   14064:	sub	r0, r0, r1
   14068:	sub	r0, r0, #2
   1406c:	str	r0, [fp, #-28]	; 0xffffffe4
   14070:	ldr	r0, [fp, #-8]
   14074:	ldr	r0, [r0]
   14078:	ldr	r1, [fp, #-12]
   1407c:	add	r0, r0, r1
   14080:	ldrb	r0, [r0]
   14084:	ldr	r1, [fp, #-16]
   14088:	strb	r0, [r1]
   1408c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   14090:	cmp	r0, #0
   14094:	bne	140ac <__assert_fail@plt+0x300c>
   14098:	ldr	r0, [fp, #-20]	; 0xffffffec
   1409c:	mov	r1, #0
   140a0:	str	r1, [r0, #4]
   140a4:	str	r1, [r0]
   140a8:	b	141a0 <__assert_fail@plt+0x3100>
   140ac:	ldr	r0, [fp, #-8]
   140b0:	ldr	r0, [r0]
   140b4:	ldr	r1, [fp, #-12]
   140b8:	add	r1, r1, #2
   140bc:	add	r0, r0, r1
   140c0:	str	r0, [sp, #32]
   140c4:	ldr	r0, [sp, #32]
   140c8:	ldr	r1, [sp, #32]
   140cc:	ldrb	r1, [r1]
   140d0:	cmp	r1, #48	; 0x30
   140d4:	movw	r1, #0
   140d8:	moveq	r1, #1
   140dc:	tst	r1, #1
   140e0:	movw	r1, #8
   140e4:	moveq	r1, #10
   140e8:	ldr	r3, [fp, #-20]	; 0xffffffec
   140ec:	add	r2, sp, #28
   140f0:	str	r1, [sp, #12]
   140f4:	mov	r1, r2
   140f8:	ldr	r2, [sp, #12]
   140fc:	movw	ip, #0
   14100:	str	ip, [sp]
   14104:	bl	1b530 <__assert_fail@plt+0xa490>
   14108:	cmp	r0, #0
   1410c:	bne	14144 <__assert_fail@plt+0x30a4>
   14110:	ldr	r0, [fp, #-20]	; 0xffffffec
   14114:	ldr	r1, [r0]
   14118:	ldr	r0, [r0, #4]
   1411c:	and	r0, r1, r0
   14120:	cmn	r0, #1
   14124:	beq	14144 <__assert_fail@plt+0x30a4>
   14128:	b	1412c <__assert_fail@plt+0x308c>
   1412c:	ldr	r0, [sp, #32]
   14130:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14134:	add	r0, r0, r1
   14138:	ldr	r1, [sp, #28]
   1413c:	cmp	r0, r1
   14140:	beq	1419c <__assert_fail@plt+0x30fc>
   14144:	ldr	r0, [sp, #32]
   14148:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1414c:	bl	13c9c <__assert_fail@plt+0x2bfc>
   14150:	str	r0, [sp, #24]
   14154:	movw	r0, #3512	; 0xdb8
   14158:	movt	r0, #2
   1415c:	bl	10fa4 <gettext@plt>
   14160:	ldr	r1, [sp, #24]
   14164:	str	r0, [sp, #8]
   14168:	mov	r0, r1
   1416c:	bl	17bd0 <__assert_fail@plt+0x6b30>
   14170:	movw	r1, #0
   14174:	str	r0, [sp, #4]
   14178:	mov	r0, r1
   1417c:	ldr	r2, [sp, #8]
   14180:	ldr	r3, [sp, #4]
   14184:	bl	10f44 <error@plt>
   14188:	ldr	r0, [sp, #24]
   1418c:	bl	15534 <__assert_fail@plt+0x4494>
   14190:	mvn	r0, #1
   14194:	str	r0, [fp, #-4]
   14198:	b	141d4 <__assert_fail@plt+0x3134>
   1419c:	b	141a0 <__assert_fail@plt+0x3100>
   141a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   141a4:	ldr	r1, [fp, #8]
   141a8:	str	r0, [r1]
   141ac:	movw	r0, #0
   141b0:	str	r0, [fp, #-4]
   141b4:	b	141d4 <__assert_fail@plt+0x3134>
   141b8:	b	141bc <__assert_fail@plt+0x311c>
   141bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   141c0:	add	r0, r0, #1
   141c4:	str	r0, [fp, #-24]	; 0xffffffe8
   141c8:	b	13ff8 <__assert_fail@plt+0x2f58>
   141cc:	mvn	r0, #0
   141d0:	str	r0, [fp, #-4]
   141d4:	ldr	r0, [fp, #-4]
   141d8:	mov	sp, fp
   141dc:	pop	{fp, pc}
   141e0:	push	{fp, lr}
   141e4:	mov	fp, sp
   141e8:	sub	sp, sp, #24
   141ec:	str	r0, [fp, #-4]
   141f0:	strb	r1, [fp, #-5]
   141f4:	str	r3, [sp, #12]
   141f8:	str	r2, [sp, #8]
   141fc:	mov	r0, #24
   14200:	bl	186cc <__assert_fail@plt+0x762c>
   14204:	str	r0, [sp, #4]
   14208:	ldr	r0, [sp, #4]
   1420c:	mov	r1, #0
   14210:	str	r1, [r0, #4]
   14214:	ldr	r0, [sp, #4]
   14218:	mov	r1, #4
   1421c:	str	r1, [r0]
   14220:	ldrb	r0, [fp, #-5]
   14224:	ldr	r1, [sp, #4]
   14228:	strb	r0, [r1, #8]
   1422c:	ldr	r0, [sp, #8]
   14230:	ldr	r1, [sp, #12]
   14234:	ldr	r2, [sp, #4]
   14238:	str	r1, [r2, #20]
   1423c:	str	r0, [r2, #16]
   14240:	ldr	r0, [fp, #-4]
   14244:	ldr	r0, [r0, #4]
   14248:	movw	r1, #0
   1424c:	cmp	r0, r1
   14250:	beq	14258 <__assert_fail@plt+0x31b8>
   14254:	b	14278 <__assert_fail@plt+0x31d8>
   14258:	movw	r0, #3153	; 0xc51
   1425c:	movt	r0, #2
   14260:	movw	r1, #2380	; 0x94c
   14264:	movt	r1, #2
   14268:	movw	r2, #721	; 0x2d1
   1426c:	movw	r3, #3555	; 0xde3
   14270:	movt	r3, #2
   14274:	bl	110a0 <__assert_fail@plt>
   14278:	ldr	r0, [sp, #4]
   1427c:	ldr	r1, [fp, #-4]
   14280:	ldr	r1, [r1, #4]
   14284:	str	r0, [r1, #4]
   14288:	ldr	r0, [sp, #4]
   1428c:	ldr	r1, [fp, #-4]
   14290:	str	r0, [r1, #4]
   14294:	mov	sp, fp
   14298:	pop	{fp, pc}
   1429c:	push	{fp, lr}
   142a0:	mov	fp, sp
   142a4:	sub	sp, sp, #32
   142a8:	str	r0, [fp, #-8]
   142ac:	strb	r1, [fp, #-9]
   142b0:	strb	r2, [fp, #-10]
   142b4:	ldrb	r0, [fp, #-10]
   142b8:	ldrb	r1, [fp, #-9]
   142bc:	cmp	r0, r1
   142c0:	bge	14328 <__assert_fail@plt+0x3288>
   142c4:	ldrb	r0, [fp, #-9]
   142c8:	bl	14524 <__assert_fail@plt+0x3484>
   142cc:	str	r0, [sp, #16]
   142d0:	ldrb	r0, [fp, #-10]
   142d4:	bl	14524 <__assert_fail@plt+0x3484>
   142d8:	str	r0, [sp, #12]
   142dc:	movw	r0, #3623	; 0xe27
   142e0:	movt	r0, #2
   142e4:	bl	10fa4 <gettext@plt>
   142e8:	ldr	r3, [sp, #16]
   142ec:	ldr	lr, [sp, #12]
   142f0:	movw	r1, #0
   142f4:	str	r0, [sp, #4]
   142f8:	mov	r0, r1
   142fc:	ldr	r2, [sp, #4]
   14300:	str	lr, [sp]
   14304:	bl	10f44 <error@plt>
   14308:	ldr	r0, [sp, #16]
   1430c:	bl	15534 <__assert_fail@plt+0x4494>
   14310:	ldr	r0, [sp, #12]
   14314:	bl	15534 <__assert_fail@plt+0x4494>
   14318:	movw	r0, #0
   1431c:	and	r0, r0, #1
   14320:	strb	r0, [fp, #-1]
   14324:	b	143c0 <__assert_fail@plt+0x3320>
   14328:	movw	r0, #24
   1432c:	bl	186cc <__assert_fail@plt+0x762c>
   14330:	str	r0, [sp, #8]
   14334:	ldr	r0, [sp, #8]
   14338:	movw	lr, #0
   1433c:	str	lr, [r0, #4]
   14340:	ldr	r0, [sp, #8]
   14344:	movw	r1, #1
   14348:	str	r1, [r0]
   1434c:	ldrb	r0, [fp, #-9]
   14350:	ldr	r1, [sp, #8]
   14354:	strb	r0, [r1, #8]
   14358:	ldrb	r0, [fp, #-10]
   1435c:	ldr	r1, [sp, #8]
   14360:	strb	r0, [r1, #9]
   14364:	ldr	r0, [fp, #-8]
   14368:	ldr	r0, [r0, #4]
   1436c:	cmp	r0, lr
   14370:	beq	14378 <__assert_fail@plt+0x32d8>
   14374:	b	14398 <__assert_fail@plt+0x32f8>
   14378:	movw	r0, #3153	; 0xc51
   1437c:	movt	r0, #2
   14380:	movw	r1, #2380	; 0x94c
   14384:	movt	r1, #2
   14388:	movw	r2, #679	; 0x2a7
   1438c:	movw	r3, #3690	; 0xe6a
   14390:	movt	r3, #2
   14394:	bl	110a0 <__assert_fail@plt>
   14398:	ldr	r0, [sp, #8]
   1439c:	ldr	r1, [fp, #-8]
   143a0:	ldr	r1, [r1, #4]
   143a4:	str	r0, [r1, #4]
   143a8:	ldr	r0, [sp, #8]
   143ac:	ldr	r1, [fp, #-8]
   143b0:	str	r0, [r1, #4]
   143b4:	movw	r0, #1
   143b8:	and	r0, r0, #1
   143bc:	strb	r0, [fp, #-1]
   143c0:	ldrb	r0, [fp, #-1]
   143c4:	and	r0, r0, #1
   143c8:	mov	sp, fp
   143cc:	pop	{fp, pc}
   143d0:	push	{fp, lr}
   143d4:	mov	fp, sp
   143d8:	sub	sp, sp, #16
   143dc:	str	r0, [fp, #-4]
   143e0:	strb	r1, [fp, #-5]
   143e4:	movw	r0, #24
   143e8:	bl	186cc <__assert_fail@plt+0x762c>
   143ec:	str	r0, [sp, #4]
   143f0:	ldr	r0, [sp, #4]
   143f4:	movw	r1, #0
   143f8:	str	r1, [r0, #4]
   143fc:	ldr	r0, [sp, #4]
   14400:	str	r1, [r0]
   14404:	ldrb	r0, [fp, #-5]
   14408:	ldr	lr, [sp, #4]
   1440c:	strb	r0, [lr, #8]
   14410:	ldr	r0, [fp, #-4]
   14414:	ldr	r0, [r0, #4]
   14418:	cmp	r0, r1
   1441c:	beq	14424 <__assert_fail@plt+0x3384>
   14420:	b	14444 <__assert_fail@plt+0x33a4>
   14424:	movw	r0, #3153	; 0xc51
   14428:	movt	r0, #2
   1442c:	movw	r1, #2380	; 0x94c
   14430:	movt	r1, #2
   14434:	movw	r2, #649	; 0x289
   14438:	movw	r3, #3759	; 0xeaf
   1443c:	movt	r3, #2
   14440:	bl	110a0 <__assert_fail@plt>
   14444:	ldr	r0, [sp, #4]
   14448:	ldr	r1, [fp, #-4]
   1444c:	ldr	r1, [r1, #4]
   14450:	str	r0, [r1, #4]
   14454:	ldr	r0, [sp, #4]
   14458:	ldr	r1, [fp, #-4]
   1445c:	str	r0, [r1, #4]
   14460:	mov	sp, fp
   14464:	pop	{fp, pc}
   14468:	push	{fp, lr}
   1446c:	mov	fp, sp
   14470:	sub	sp, sp, #16
   14474:	str	r0, [sp, #8]
   14478:	str	r1, [sp, #4]
   1447c:	movw	r0, #0
   14480:	str	r0, [sp]
   14484:	ldr	r0, [sp]
   14488:	cmp	r0, #12
   1448c:	bcs	144fc <__assert_fail@plt+0x345c>
   14490:	ldr	r0, [sp, #8]
   14494:	ldr	r1, [sp]
   14498:	movw	r2, #5092	; 0x13e4
   1449c:	movt	r2, #2
   144a0:	add	r1, r2, r1, lsl #2
   144a4:	ldr	r1, [r1]
   144a8:	ldr	r2, [sp, #4]
   144ac:	bl	1107c <strncmp@plt>
   144b0:	cmp	r0, #0
   144b4:	bne	144e8 <__assert_fail@plt+0x3448>
   144b8:	ldr	r0, [sp]
   144bc:	movw	r1, #5092	; 0x13e4
   144c0:	movt	r1, #2
   144c4:	add	r0, r1, r0, lsl #2
   144c8:	ldr	r0, [r0]
   144cc:	bl	10fb0 <strlen@plt>
   144d0:	ldr	r1, [sp, #4]
   144d4:	cmp	r0, r1
   144d8:	bne	144e8 <__assert_fail@plt+0x3448>
   144dc:	ldr	r0, [sp]
   144e0:	str	r0, [fp, #-4]
   144e4:	b	14504 <__assert_fail@plt+0x3464>
   144e8:	b	144ec <__assert_fail@plt+0x344c>
   144ec:	ldr	r0, [sp]
   144f0:	add	r0, r0, #1
   144f4:	str	r0, [sp]
   144f8:	b	14484 <__assert_fail@plt+0x33e4>
   144fc:	movw	r0, #9999	; 0x270f
   14500:	str	r0, [fp, #-4]
   14504:	ldr	r0, [fp, #-4]
   14508:	mov	sp, fp
   1450c:	pop	{fp, pc}
   14510:	sub	sp, sp, #4
   14514:	strb	r0, [sp, #3]
   14518:	ldrb	r0, [sp, #3]
   1451c:	add	sp, sp, #4
   14520:	bx	lr
   14524:	push	{fp, lr}
   14528:	mov	fp, sp
   1452c:	sub	sp, sp, #16
   14530:	strb	r0, [fp, #-1]
   14534:	mov	r0, #5
   14538:	bl	186cc <__assert_fail@plt+0x762c>
   1453c:	str	r0, [sp, #8]
   14540:	bl	10f8c <__ctype_b_loc@plt>
   14544:	ldr	r0, [r0]
   14548:	ldrb	lr, [fp, #-1]
   1454c:	mov	r1, lr
   14550:	add	r0, r0, lr, lsl #1
   14554:	ldrh	r0, [r0]
   14558:	and	r0, r0, #16384	; 0x4000
   1455c:	cmp	r0, #0
   14560:	str	r1, [sp, #4]
   14564:	beq	14584 <__assert_fail@plt+0x34e4>
   14568:	ldrb	r0, [fp, #-1]
   1456c:	ldr	r1, [sp, #8]
   14570:	strb	r0, [r1]
   14574:	ldr	r0, [sp, #8]
   14578:	movw	r1, #0
   1457c:	strb	r1, [r0, #1]
   14580:	b	1459c <__assert_fail@plt+0x34fc>
   14584:	ldr	r0, [sp, #8]
   14588:	ldrb	r2, [fp, #-1]
   1458c:	movw	r1, #3320	; 0xcf8
   14590:	movt	r1, #2
   14594:	bl	11058 <sprintf@plt>
   14598:	str	r0, [sp]
   1459c:	ldr	r0, [sp, #8]
   145a0:	mov	sp, fp
   145a4:	pop	{fp, pc}
   145a8:	push	{fp, lr}
   145ac:	mov	fp, sp
   145b0:	sub	sp, sp, #8
   145b4:	str	r0, [sp, #4]
   145b8:	ldr	r0, [sp, #4]
   145bc:	bl	14c7c <__assert_fail@plt+0x3bdc>
   145c0:	movw	r0, #8537	; 0x2159
   145c4:	movt	r0, #3
   145c8:	ldrb	r0, [r0]
   145cc:	tst	r0, #1
   145d0:	beq	145ec <__assert_fail@plt+0x354c>
   145d4:	ldr	r0, [sp, #4]
   145d8:	bl	14fc4 <__assert_fail@plt+0x3f24>
   145dc:	asr	lr, r0, #31
   145e0:	ldr	r1, [sp, #4]
   145e4:	str	lr, [r1, #20]
   145e8:	str	r0, [r1, #16]
   145ec:	mov	sp, fp
   145f0:	pop	{fp, pc}
   145f4:	push	{fp, lr}
   145f8:	mov	fp, sp
   145fc:	sub	sp, sp, #24
   14600:	str	r0, [fp, #-4]
   14604:	str	r3, [sp, #12]
   14608:	str	r2, [sp, #8]
   1460c:	ldr	r0, [fp, #-4]
   14610:	bl	14c7c <__assert_fail@plt+0x3bdc>
   14614:	ldr	r0, [sp, #8]
   14618:	ldr	r2, [sp, #12]
   1461c:	ldr	r3, [fp, #-4]
   14620:	ldr	lr, [r3, #16]
   14624:	ldr	r3, [r3, #20]
   14628:	subs	r0, r0, lr
   1462c:	sbcs	r2, r2, r3
   14630:	str	r0, [sp, #4]
   14634:	str	r2, [sp]
   14638:	bcc	1468c <__assert_fail@plt+0x35ec>
   1463c:	b	14640 <__assert_fail@plt+0x35a0>
   14640:	ldr	r0, [fp, #-4]
   14644:	ldr	r0, [r0, #24]
   14648:	cmp	r0, #1
   1464c:	bne	1468c <__assert_fail@plt+0x35ec>
   14650:	ldr	r0, [sp, #8]
   14654:	ldr	r1, [sp, #12]
   14658:	ldr	r2, [fp, #-4]
   1465c:	ldr	r3, [r2, #16]
   14660:	ldr	ip, [r2, #20]
   14664:	ldr	r2, [r2, #28]
   14668:	subs	r0, r0, r3
   1466c:	sbc	r1, r1, ip
   14670:	str	r0, [r2, #16]
   14674:	str	r1, [r2, #20]
   14678:	ldr	r0, [sp, #8]
   1467c:	ldr	r1, [sp, #12]
   14680:	ldr	r2, [fp, #-4]
   14684:	str	r1, [r2, #20]
   14688:	str	r0, [r2, #16]
   1468c:	mov	sp, fp
   14690:	pop	{fp, pc}
   14694:	push	{fp, lr}
   14698:	mov	fp, sp
   1469c:	sub	sp, sp, #96	; 0x60
   146a0:	str	r0, [fp, #-4]
   146a4:	str	r1, [fp, #-8]
   146a8:	mov	r0, #0
   146ac:	str	r0, [fp, #-12]
   146b0:	str	r0, [fp, #-16]
   146b4:	str	r0, [fp, #-20]	; 0xffffffec
   146b8:	str	r0, [fp, #-24]	; 0xffffffe8
   146bc:	ldr	r0, [fp, #-4]
   146c0:	ldr	r1, [r0, #16]
   146c4:	ldr	r0, [r0, #20]
   146c8:	str	r0, [fp, #-28]	; 0xffffffe4
   146cc:	str	r1, [fp, #-32]	; 0xffffffe0
   146d0:	ldr	r0, [fp, #-8]
   146d4:	ldr	r1, [r0, #16]
   146d8:	ldr	r0, [r0, #20]
   146dc:	str	r0, [fp, #-36]	; 0xffffffdc
   146e0:	str	r1, [fp, #-40]	; 0xffffffd8
   146e4:	ldr	r0, [fp, #-4]
   146e8:	ldr	r0, [r0, #4]
   146ec:	str	r0, [fp, #-44]	; 0xffffffd4
   146f0:	ldr	r0, [fp, #-8]
   146f4:	ldr	r0, [r0, #4]
   146f8:	str	r0, [sp, #48]	; 0x30
   146fc:	movw	r0, #1
   14700:	strb	r0, [sp, #47]	; 0x2f
   14704:	strb	r0, [sp, #46]	; 0x2e
   14708:	movw	r0, #8537	; 0x2159
   1470c:	movt	r0, #3
   14710:	ldrb	r0, [r0]
   14714:	tst	r0, #1
   14718:	bne	1472c <__assert_fail@plt+0x368c>
   1471c:	ldr	r0, [fp, #-8]
   14720:	ldrb	r0, [r0, #33]	; 0x21
   14724:	tst	r0, #1
   14728:	bne	14730 <__assert_fail@plt+0x3690>
   1472c:	b	149f8 <__assert_fail@plt+0x3958>
   14730:	movw	r0, #0
   14734:	str	r0, [sp, #40]	; 0x28
   14738:	ldr	r0, [sp, #40]	; 0x28
   1473c:	cmp	r0, #256	; 0x100
   14740:	bge	147b0 <__assert_fail@plt+0x3710>
   14744:	bl	10f8c <__ctype_b_loc@plt>
   14748:	ldr	r0, [r0]
   1474c:	ldr	lr, [sp, #40]	; 0x28
   14750:	add	r0, r0, lr, lsl #1
   14754:	ldrh	r0, [r0]
   14758:	and	r0, r0, #256	; 0x100
   1475c:	cmp	r0, #0
   14760:	beq	14770 <__assert_fail@plt+0x36d0>
   14764:	ldr	r0, [fp, #-12]
   14768:	add	r0, r0, #1
   1476c:	str	r0, [fp, #-12]
   14770:	bl	10f8c <__ctype_b_loc@plt>
   14774:	ldr	r0, [r0]
   14778:	ldr	lr, [sp, #40]	; 0x28
   1477c:	add	r0, r0, lr, lsl #1
   14780:	ldrh	r0, [r0]
   14784:	and	r0, r0, #512	; 0x200
   14788:	cmp	r0, #0
   1478c:	beq	1479c <__assert_fail@plt+0x36fc>
   14790:	ldr	r0, [fp, #-16]
   14794:	add	r0, r0, #1
   14798:	str	r0, [fp, #-16]
   1479c:	b	147a0 <__assert_fail@plt+0x3700>
   147a0:	ldr	r0, [sp, #40]	; 0x28
   147a4:	add	r0, r0, #1
   147a8:	str	r0, [sp, #40]	; 0x28
   147ac:	b	14738 <__assert_fail@plt+0x3698>
   147b0:	ldr	r0, [fp, #-4]
   147b4:	mvn	r1, #0
   147b8:	str	r1, [r0, #12]
   147bc:	mvn	r2, #1
   147c0:	str	r2, [r0, #8]
   147c4:	ldr	r0, [fp, #-8]
   147c8:	str	r1, [r0, #12]
   147cc:	str	r2, [r0, #8]
   147d0:	ldr	r0, [fp, #-20]	; 0xffffffec
   147d4:	cmn	r0, #1
   147d8:	movw	r0, #0
   147dc:	str	r0, [sp, #28]
   147e0:	beq	147f8 <__assert_fail@plt+0x3758>
   147e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   147e8:	cmn	r0, #1
   147ec:	movw	r0, #0
   147f0:	movne	r0, #1
   147f4:	str	r0, [sp, #28]
   147f8:	ldr	r0, [sp, #28]
   147fc:	tst	r0, #1
   14800:	beq	14964 <__assert_fail@plt+0x38c4>
   14804:	ldr	r0, [fp, #-4]
   14808:	add	r1, sp, #36	; 0x24
   1480c:	bl	1295c <__assert_fail@plt+0x18bc>
   14810:	str	r0, [fp, #-20]	; 0xffffffec
   14814:	ldr	r0, [fp, #-8]
   14818:	add	r1, sp, #32
   1481c:	bl	1295c <__assert_fail@plt+0x18bc>
   14820:	str	r0, [fp, #-24]	; 0xffffffe8
   14824:	ldrb	r0, [sp, #46]	; 0x2e
   14828:	tst	r0, #1
   1482c:	beq	14878 <__assert_fail@plt+0x37d8>
   14830:	ldr	r0, [sp, #32]
   14834:	cmp	r0, #2
   14838:	beq	14878 <__assert_fail@plt+0x37d8>
   1483c:	ldrb	r0, [sp, #47]	; 0x2f
   14840:	tst	r0, #1
   14844:	beq	14854 <__assert_fail@plt+0x37b4>
   14848:	ldr	r0, [sp, #36]	; 0x24
   1484c:	cmp	r0, #2
   14850:	bne	14878 <__assert_fail@plt+0x37d8>
   14854:	movw	r0, #4415	; 0x113f
   14858:	movt	r0, #2
   1485c:	bl	10fa4 <gettext@plt>
   14860:	movw	lr, #1
   14864:	str	r0, [sp, #24]
   14868:	mov	r0, lr
   1486c:	movw	r1, #0
   14870:	ldr	r2, [sp, #24]
   14874:	bl	10f44 <error@plt>
   14878:	ldr	r0, [sp, #32]
   1487c:	cmp	r0, #2
   14880:	beq	1491c <__assert_fail@plt+0x387c>
   14884:	ldr	r0, [fp, #-4]
   14888:	bl	12e44 <__assert_fail@plt+0x1da4>
   1488c:	ldr	r0, [fp, #-8]
   14890:	bl	12e44 <__assert_fail@plt+0x1da4>
   14894:	ldr	r0, [sp, #36]	; 0x24
   14898:	cmp	r0, #1
   1489c:	bne	148ac <__assert_fail@plt+0x380c>
   148a0:	ldr	r0, [fp, #-12]
   148a4:	str	r0, [sp, #20]
   148a8:	b	148b4 <__assert_fail@plt+0x3814>
   148ac:	ldr	r0, [fp, #-16]
   148b0:	str	r0, [sp, #20]
   148b4:	ldr	r0, [sp, #20]
   148b8:	sub	r0, r0, #1
   148bc:	ldr	r1, [fp, #-4]
   148c0:	ldr	r2, [r1, #16]
   148c4:	ldr	r3, [r1, #20]
   148c8:	subs	r0, r2, r0
   148cc:	sbc	r2, r3, #0
   148d0:	str	r0, [r1, #16]
   148d4:	str	r2, [r1, #20]
   148d8:	ldr	r0, [sp, #32]
   148dc:	cmp	r0, #1
   148e0:	bne	148f0 <__assert_fail@plt+0x3850>
   148e4:	ldr	r0, [fp, #-12]
   148e8:	str	r0, [sp, #16]
   148ec:	b	148f8 <__assert_fail@plt+0x3858>
   148f0:	ldr	r0, [fp, #-16]
   148f4:	str	r0, [sp, #16]
   148f8:	ldr	r0, [sp, #16]
   148fc:	sub	r0, r0, #1
   14900:	ldr	r1, [fp, #-8]
   14904:	ldr	r2, [r1, #16]
   14908:	ldr	r3, [r1, #20]
   1490c:	subs	r0, r2, r0
   14910:	sbc	r2, r3, #0
   14914:	str	r0, [r1, #16]
   14918:	str	r2, [r1, #20]
   1491c:	ldr	r0, [fp, #-4]
   14920:	ldr	r1, [r0, #8]
   14924:	ldr	r0, [r0, #12]
   14928:	and	r0, r1, r0
   1492c:	add	r0, r0, #1
   14930:	clz	r0, r0
   14934:	lsr	r0, r0, #5
   14938:	strb	r0, [sp, #47]	; 0x2f
   1493c:	ldr	r0, [fp, #-8]
   14940:	ldr	r1, [r0, #8]
   14944:	ldr	r0, [r0, #12]
   14948:	and	r0, r1, r0
   1494c:	add	r0, r0, #1
   14950:	clz	r0, r0
   14954:	lsr	r0, r0, #5
   14958:	and	r0, r0, #1
   1495c:	strb	r0, [sp, #46]	; 0x2e
   14960:	b	147d0 <__assert_fail@plt+0x3730>
   14964:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14968:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1496c:	ldr	r2, [fp, #-4]
   14970:	ldr	r3, [r2, #16]
   14974:	ldr	r2, [r2, #20]
   14978:	subs	r0, r0, r3
   1497c:	sbcs	r1, r1, r2
   14980:	str	r0, [sp, #12]
   14984:	str	r1, [sp, #8]
   14988:	bcc	149c0 <__assert_fail@plt+0x3920>
   1498c:	b	14990 <__assert_fail@plt+0x38f0>
   14990:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14994:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14998:	ldr	r2, [fp, #-8]
   1499c:	ldr	r3, [r2, #16]
   149a0:	ldr	r2, [r2, #20]
   149a4:	subs	r0, r0, r3
   149a8:	sbcs	r1, r1, r2
   149ac:	str	r0, [sp, #4]
   149b0:	str	r1, [sp]
   149b4:	bcc	149c0 <__assert_fail@plt+0x3920>
   149b8:	b	149bc <__assert_fail@plt+0x391c>
   149bc:	b	149e0 <__assert_fail@plt+0x3940>
   149c0:	movw	r0, #4463	; 0x116f
   149c4:	movt	r0, #2
   149c8:	movw	r1, #2380	; 0x94c
   149cc:	movt	r1, #2
   149d0:	movw	r2, #1224	; 0x4c8
   149d4:	movw	r3, #4516	; 0x11a4
   149d8:	movt	r3, #2
   149dc:	bl	110a0 <__assert_fail@plt>
   149e0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   149e4:	ldr	r1, [fp, #-4]
   149e8:	str	r0, [r1, #4]
   149ec:	ldr	r0, [sp, #48]	; 0x30
   149f0:	ldr	r1, [fp, #-8]
   149f4:	str	r0, [r1, #4]
   149f8:	mov	sp, fp
   149fc:	pop	{fp, pc}
   14a00:	push	{fp, lr}
   14a04:	mov	fp, sp
   14a08:	sub	sp, sp, #40	; 0x28
   14a0c:	str	r0, [fp, #-4]
   14a10:	str	r1, [fp, #-8]
   14a14:	movw	r0, #8541	; 0x215d
   14a18:	movt	r0, #3
   14a1c:	ldrb	r0, [r0]
   14a20:	tst	r0, #1
   14a24:	beq	14a2c <__assert_fail@plt+0x398c>
   14a28:	b	14a4c <__assert_fail@plt+0x39ac>
   14a2c:	movw	r0, #3972	; 0xf84
   14a30:	movt	r0, #2
   14a34:	movw	r1, #2380	; 0x94c
   14a38:	movt	r1, #2
   14a3c:	movw	r2, #1377	; 0x561
   14a40:	movw	r3, #4583	; 0x11e7
   14a44:	movt	r3, #2
   14a48:	bl	110a0 <__assert_fail@plt>
   14a4c:	ldr	r0, [fp, #-4]
   14a50:	ldr	r1, [r0, #16]
   14a54:	ldr	r0, [r0, #20]
   14a58:	ldr	r2, [fp, #-8]
   14a5c:	ldr	r3, [r2, #16]
   14a60:	ldr	r2, [r2, #20]
   14a64:	subs	r1, r3, r1
   14a68:	sbcs	r0, r2, r0
   14a6c:	str	r1, [sp, #20]
   14a70:	str	r0, [sp, #16]
   14a74:	bcs	14a80 <__assert_fail@plt+0x39e0>
   14a78:	b	14a7c <__assert_fail@plt+0x39dc>
   14a7c:	b	14aa0 <__assert_fail@plt+0x3a00>
   14a80:	movw	r0, #4649	; 0x1229
   14a84:	movt	r0, #2
   14a88:	movw	r1, #2380	; 0x94c
   14a8c:	movt	r1, #2
   14a90:	movw	r2, #1378	; 0x562
   14a94:	movw	r3, #4583	; 0x11e7
   14a98:	movt	r3, #2
   14a9c:	bl	110a0 <__assert_fail@plt>
   14aa0:	ldr	r0, [fp, #-8]
   14aa4:	ldr	r1, [r0, #16]
   14aa8:	ldr	r0, [r0, #20]
   14aac:	orr	r0, r1, r0
   14ab0:	cmp	r0, #0
   14ab4:	beq	14ac0 <__assert_fail@plt+0x3a20>
   14ab8:	b	14abc <__assert_fail@plt+0x3a1c>
   14abc:	b	14ae0 <__assert_fail@plt+0x3a40>
   14ac0:	movw	r0, #4673	; 0x1241
   14ac4:	movt	r0, #2
   14ac8:	movw	r1, #2380	; 0x94c
   14acc:	movt	r1, #2
   14ad0:	movw	r2, #1379	; 0x563
   14ad4:	movw	r3, #4583	; 0x11e7
   14ad8:	movt	r3, #2
   14adc:	bl	110a0 <__assert_fail@plt>
   14ae0:	ldr	r0, [fp, #-8]
   14ae4:	ldr	r0, [r0, #4]
   14ae8:	str	r0, [fp, #-12]
   14aec:	ldr	r0, [fp, #-12]
   14af0:	ldr	r0, [r0]
   14af4:	cmp	r0, #4
   14af8:	str	r0, [sp, #12]
   14afc:	bhi	14b7c <__assert_fail@plt+0x3adc>
   14b00:	add	r0, pc, #8
   14b04:	ldr	r1, [sp, #12]
   14b08:	ldr	r0, [r0, r1, lsl #2]
   14b0c:	mov	pc, r0
   14b10:	andeq	r4, r1, r4, lsr #22
   14b14:	andeq	r4, r1, r4, lsr fp
   14b18:	andeq	r4, r1, r4, asr #22
   14b1c:	andeq	r4, r1, r8, ror fp
   14b20:	andeq	r4, r1, r8, ror #22
   14b24:	ldr	r0, [fp, #-12]
   14b28:	ldrb	r0, [r0, #8]
   14b2c:	strb	r0, [fp, #-13]
   14b30:	b	14b80 <__assert_fail@plt+0x3ae0>
   14b34:	ldr	r0, [fp, #-12]
   14b38:	ldrb	r0, [r0, #9]
   14b3c:	strb	r0, [fp, #-13]
   14b40:	b	14b80 <__assert_fail@plt+0x3ae0>
   14b44:	movw	r0, #4688	; 0x1250
   14b48:	movt	r0, #2
   14b4c:	bl	10fa4 <gettext@plt>
   14b50:	movw	lr, #1
   14b54:	str	r0, [sp, #8]
   14b58:	mov	r0, lr
   14b5c:	movw	r1, #0
   14b60:	ldr	r2, [sp, #8]
   14b64:	bl	10f44 <error@plt>
   14b68:	ldr	r0, [fp, #-12]
   14b6c:	ldrb	r0, [r0, #8]
   14b70:	strb	r0, [fp, #-13]
   14b74:	b	14b80 <__assert_fail@plt+0x3ae0>
   14b78:	bl	11088 <abort@plt>
   14b7c:	bl	11088 <abort@plt>
   14b80:	ldr	r0, [fp, #-8]
   14b84:	ldrb	r1, [fp, #-13]
   14b88:	ldr	r2, [fp, #-4]
   14b8c:	ldr	r3, [r2, #16]
   14b90:	ldr	r2, [r2, #20]
   14b94:	ldr	ip, [r0, #16]
   14b98:	ldr	lr, [r0, #20]
   14b9c:	subs	r3, r3, ip
   14ba0:	sbc	r2, r2, lr
   14ba4:	str	r2, [sp, #4]
   14ba8:	mov	r2, r3
   14bac:	ldr	r3, [sp, #4]
   14bb0:	bl	141e0 <__assert_fail@plt+0x3140>
   14bb4:	ldr	r0, [fp, #-4]
   14bb8:	ldr	r1, [r0, #16]
   14bbc:	ldr	r0, [r0, #20]
   14bc0:	ldr	r2, [fp, #-8]
   14bc4:	str	r0, [r2, #20]
   14bc8:	str	r1, [r2, #16]
   14bcc:	mov	sp, fp
   14bd0:	pop	{fp, pc}
   14bd4:	push	{fp, lr}
   14bd8:	mov	fp, sp
   14bdc:	sub	sp, sp, #16
   14be0:	str	r0, [sp, #8]
   14be4:	ldr	r0, [sp, #8]
   14be8:	mvn	r1, #0
   14bec:	str	r1, [r0, #12]
   14bf0:	mvn	r1, #1
   14bf4:	str	r1, [r0, #8]
   14bf8:	ldr	r0, [sp, #8]
   14bfc:	movw	r1, #0
   14c00:	bl	1295c <__assert_fail@plt+0x18bc>
   14c04:	str	r0, [sp, #4]
   14c08:	cmn	r0, #1
   14c0c:	bne	14c20 <__assert_fail@plt+0x3b80>
   14c10:	movw	r0, #0
   14c14:	and	r0, r0, #1
   14c18:	strb	r0, [fp, #-1]
   14c1c:	b	14c6c <__assert_fail@plt+0x3bcc>
   14c20:	b	14c24 <__assert_fail@plt+0x3b84>
   14c24:	ldr	r0, [sp, #8]
   14c28:	movw	r1, #0
   14c2c:	bl	1295c <__assert_fail@plt+0x18bc>
   14c30:	str	r0, [sp]
   14c34:	cmn	r0, #1
   14c38:	beq	14c60 <__assert_fail@plt+0x3bc0>
   14c3c:	ldr	r0, [sp]
   14c40:	ldr	r1, [sp, #4]
   14c44:	cmp	r0, r1
   14c48:	beq	14c5c <__assert_fail@plt+0x3bbc>
   14c4c:	movw	r0, #0
   14c50:	and	r0, r0, #1
   14c54:	strb	r0, [fp, #-1]
   14c58:	b	14c6c <__assert_fail@plt+0x3bcc>
   14c5c:	b	14c24 <__assert_fail@plt+0x3b84>
   14c60:	movw	r0, #1
   14c64:	and	r0, r0, #1
   14c68:	strb	r0, [fp, #-1]
   14c6c:	ldrb	r0, [fp, #-1]
   14c70:	and	r0, r0, #1
   14c74:	mov	sp, fp
   14c78:	pop	{fp, pc}
   14c7c:	push	{fp, lr}
   14c80:	mov	fp, sp
   14c84:	sub	sp, sp, #64	; 0x40
   14c88:	str	r0, [fp, #-4]
   14c8c:	mov	r0, #0
   14c90:	str	r0, [fp, #-12]
   14c94:	str	r0, [fp, #-16]
   14c98:	ldr	r0, [fp, #-4]
   14c9c:	movw	r1, #0
   14ca0:	str	r1, [r0, #24]
   14ca4:	ldr	r0, [fp, #-4]
   14ca8:	movw	r1, #0
   14cac:	strb	r1, [r0, #32]
   14cb0:	ldr	r0, [fp, #-4]
   14cb4:	strb	r1, [r0, #34]	; 0x22
   14cb8:	ldr	r0, [fp, #-4]
   14cbc:	strb	r1, [r0, #33]	; 0x21
   14cc0:	ldr	r0, [fp, #-4]
   14cc4:	ldr	r0, [r0]
   14cc8:	ldr	r0, [r0, #4]
   14ccc:	str	r0, [fp, #-8]
   14cd0:	ldr	r0, [fp, #-8]
   14cd4:	movw	r1, #0
   14cd8:	cmp	r0, r1
   14cdc:	beq	14fa8 <__assert_fail@plt+0x3f08>
   14ce0:	mov	r0, #0
   14ce4:	str	r0, [fp, #-20]	; 0xffffffec
   14ce8:	str	r0, [fp, #-24]	; 0xffffffe8
   14cec:	ldr	r0, [fp, #-8]
   14cf0:	ldr	r0, [r0]
   14cf4:	cmp	r0, #4
   14cf8:	str	r0, [sp, #20]
   14cfc:	bhi	14f00 <__assert_fail@plt+0x3e60>
   14d00:	add	r0, pc, #8
   14d04:	ldr	r1, [sp, #20]
   14d08:	ldr	r0, [r0, r1, lsl #2]
   14d0c:	mov	pc, r0
   14d10:	andeq	r4, r1, r4, lsr #26
   14d14:	andeq	r4, r1, r8, lsr sp
   14d18:	muleq	r1, r8, sp
   14d1c:	andeq	r4, r1, ip, lsr lr
   14d20:	andeq	r4, r1, ip, lsr #29
   14d24:	mov	r0, #0
   14d28:	str	r0, [fp, #-20]	; 0xffffffec
   14d2c:	mov	r0, #1
   14d30:	str	r0, [fp, #-24]	; 0xffffffe8
   14d34:	b	14f04 <__assert_fail@plt+0x3e64>
   14d38:	ldr	r0, [fp, #-8]
   14d3c:	ldrb	r0, [r0, #9]
   14d40:	ldr	r1, [fp, #-8]
   14d44:	ldrb	r1, [r1, #8]
   14d48:	cmp	r0, r1
   14d4c:	blt	14d54 <__assert_fail@plt+0x3cb4>
   14d50:	b	14d74 <__assert_fail@plt+0x3cd4>
   14d54:	movw	r0, #4302	; 0x10ce
   14d58:	movt	r0, #2
   14d5c:	movw	r1, #2380	; 0x94c
   14d60:	movt	r1, #2
   14d64:	movw	r2, #1265	; 0x4f1
   14d68:	movw	r3, #4348	; 0x10fc
   14d6c:	movt	r3, #2
   14d70:	bl	110a0 <__assert_fail@plt>
   14d74:	ldr	r0, [fp, #-8]
   14d78:	ldrb	r1, [r0, #8]
   14d7c:	ldrb	r0, [r0, #9]
   14d80:	sub	r0, r0, r1
   14d84:	add	r0, r0, #1
   14d88:	asr	r1, r0, #31
   14d8c:	str	r0, [fp, #-24]	; 0xffffffe8
   14d90:	str	r1, [fp, #-20]	; 0xffffffec
   14d94:	b	14f04 <__assert_fail@plt+0x3e64>
   14d98:	ldr	r0, [fp, #-4]
   14d9c:	movw	r1, #1
   14da0:	strb	r1, [r0, #33]	; 0x21
   14da4:	movw	r0, #0
   14da8:	str	r0, [sp, #28]
   14dac:	ldr	r0, [sp, #28]
   14db0:	cmp	r0, #256	; 0x100
   14db4:	bge	14e00 <__assert_fail@plt+0x3d60>
   14db8:	ldr	r0, [fp, #-8]
   14dbc:	ldr	r0, [r0, #8]
   14dc0:	ldr	r1, [sp, #28]
   14dc4:	and	r1, r1, #255	; 0xff
   14dc8:	bl	15070 <__assert_fail@plt+0x3fd0>
   14dcc:	tst	r0, #1
   14dd0:	beq	14dec <__assert_fail@plt+0x3d4c>
   14dd4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14dd8:	ldr	r1, [fp, #-20]	; 0xffffffec
   14ddc:	adds	r0, r0, #1
   14de0:	adc	r1, r1, #0
   14de4:	str	r0, [fp, #-24]	; 0xffffffe8
   14de8:	str	r1, [fp, #-20]	; 0xffffffec
   14dec:	b	14df0 <__assert_fail@plt+0x3d50>
   14df0:	ldr	r0, [sp, #28]
   14df4:	add	r0, r0, #1
   14df8:	str	r0, [sp, #28]
   14dfc:	b	14dac <__assert_fail@plt+0x3d0c>
   14e00:	ldr	r0, [fp, #-8]
   14e04:	ldr	r0, [r0, #8]
   14e08:	cmp	r0, #6
   14e0c:	str	r0, [sp, #16]
   14e10:	beq	14e28 <__assert_fail@plt+0x3d88>
   14e14:	b	14e18 <__assert_fail@plt+0x3d78>
   14e18:	ldr	r0, [sp, #16]
   14e1c:	cmp	r0, #10
   14e20:	bne	14e2c <__assert_fail@plt+0x3d8c>
   14e24:	b	14e28 <__assert_fail@plt+0x3d88>
   14e28:	b	14e38 <__assert_fail@plt+0x3d98>
   14e2c:	ldr	r0, [fp, #-4]
   14e30:	movw	r1, #1
   14e34:	strb	r1, [r0, #34]	; 0x22
   14e38:	b	14f04 <__assert_fail@plt+0x3e64>
   14e3c:	movw	r0, #0
   14e40:	str	r0, [sp, #24]
   14e44:	ldr	r0, [sp, #24]
   14e48:	cmp	r0, #256	; 0x100
   14e4c:	bge	14e9c <__assert_fail@plt+0x3dfc>
   14e50:	ldr	r0, [fp, #-8]
   14e54:	ldrb	r0, [r0, #8]
   14e58:	ldr	r1, [sp, #24]
   14e5c:	and	r0, r0, #255	; 0xff
   14e60:	and	r1, r1, #255	; 0xff
   14e64:	bl	152e0 <__assert_fail@plt+0x4240>
   14e68:	tst	r0, #1
   14e6c:	beq	14e88 <__assert_fail@plt+0x3de8>
   14e70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14e74:	ldr	r1, [fp, #-20]	; 0xffffffec
   14e78:	adds	r0, r0, #1
   14e7c:	adc	r1, r1, #0
   14e80:	str	r0, [fp, #-24]	; 0xffffffe8
   14e84:	str	r1, [fp, #-20]	; 0xffffffec
   14e88:	b	14e8c <__assert_fail@plt+0x3dec>
   14e8c:	ldr	r0, [sp, #24]
   14e90:	add	r0, r0, #1
   14e94:	str	r0, [sp, #24]
   14e98:	b	14e44 <__assert_fail@plt+0x3da4>
   14e9c:	ldr	r0, [fp, #-4]
   14ea0:	movw	r1, #1
   14ea4:	strb	r1, [r0, #32]
   14ea8:	b	14f04 <__assert_fail@plt+0x3e64>
   14eac:	ldr	r0, [fp, #-8]
   14eb0:	ldr	r1, [r0, #16]
   14eb4:	ldr	r0, [r0, #20]
   14eb8:	orr	r0, r1, r0
   14ebc:	cmp	r0, #0
   14ec0:	beq	14ee0 <__assert_fail@plt+0x3e40>
   14ec4:	b	14ec8 <__assert_fail@plt+0x3e28>
   14ec8:	ldr	r0, [fp, #-8]
   14ecc:	ldr	r1, [r0, #16]
   14ed0:	ldr	r0, [r0, #20]
   14ed4:	str	r0, [fp, #-20]	; 0xffffffec
   14ed8:	str	r1, [fp, #-24]	; 0xffffffe8
   14edc:	b	14efc <__assert_fail@plt+0x3e5c>
   14ee0:	ldr	r0, [fp, #-8]
   14ee4:	ldr	r1, [fp, #-4]
   14ee8:	str	r0, [r1, #28]
   14eec:	ldr	r0, [fp, #-4]
   14ef0:	ldr	r1, [r0, #24]
   14ef4:	add	r1, r1, #1
   14ef8:	str	r1, [r0, #24]
   14efc:	b	14f04 <__assert_fail@plt+0x3e64>
   14f00:	bl	11088 <abort@plt>
   14f04:	ldr	r0, [fp, #-16]
   14f08:	ldr	r1, [fp, #-12]
   14f0c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14f10:	ldr	r3, [fp, #-20]	; 0xffffffec
   14f14:	adds	r0, r0, r2
   14f18:	adc	r1, r1, r3
   14f1c:	str	r0, [sp, #32]
   14f20:	str	r1, [sp, #36]	; 0x24
   14f24:	ldr	r0, [fp, #-16]
   14f28:	ldr	r1, [fp, #-12]
   14f2c:	ldr	r2, [sp, #32]
   14f30:	ldr	r3, [sp, #36]	; 0x24
   14f34:	subs	r0, r2, r0
   14f38:	sbcs	r1, r3, r1
   14f3c:	str	r0, [sp, #12]
   14f40:	str	r1, [sp, #8]
   14f44:	bcc	14f64 <__assert_fail@plt+0x3ec4>
   14f48:	b	14f4c <__assert_fail@plt+0x3eac>
   14f4c:	ldr	r0, [sp, #32]
   14f50:	ldr	r1, [sp, #36]	; 0x24
   14f54:	and	r0, r0, r1
   14f58:	cmn	r0, #1
   14f5c:	bne	14f88 <__assert_fail@plt+0x3ee8>
   14f60:	b	14f64 <__assert_fail@plt+0x3ec4>
   14f64:	movw	r0, #4388	; 0x1124
   14f68:	movt	r0, #2
   14f6c:	bl	10fa4 <gettext@plt>
   14f70:	movw	lr, #1
   14f74:	str	r0, [sp, #4]
   14f78:	mov	r0, lr
   14f7c:	movw	r1, #0
   14f80:	ldr	r2, [sp, #4]
   14f84:	bl	10f44 <error@plt>
   14f88:	ldr	r0, [sp, #32]
   14f8c:	ldr	r1, [sp, #36]	; 0x24
   14f90:	str	r1, [fp, #-12]
   14f94:	str	r0, [fp, #-16]
   14f98:	ldr	r0, [fp, #-8]
   14f9c:	ldr	r0, [r0, #4]
   14fa0:	str	r0, [fp, #-8]
   14fa4:	b	14cd0 <__assert_fail@plt+0x3c30>
   14fa8:	ldr	r0, [fp, #-16]
   14fac:	ldr	r1, [fp, #-12]
   14fb0:	ldr	r2, [fp, #-4]
   14fb4:	str	r1, [r2, #20]
   14fb8:	str	r0, [r2, #16]
   14fbc:	mov	sp, fp
   14fc0:	pop	{fp, pc}
   14fc4:	push	{r4, r5, fp, lr}
   14fc8:	add	fp, sp, #8
   14fcc:	sub	sp, sp, #280	; 0x118
   14fd0:	str	r0, [fp, #-12]
   14fd4:	mov	r0, #256	; 0x100
   14fd8:	str	r0, [fp, #-20]	; 0xffffffec
   14fdc:	add	r1, sp, #12
   14fe0:	mov	r2, #0
   14fe4:	str	r0, [sp, #8]
   14fe8:	mov	r0, r1
   14fec:	mov	r1, r2
   14ff0:	ldr	r2, [sp, #8]
   14ff4:	bl	10fec <memset@plt>
   14ff8:	ldr	r1, [fp, #-12]
   14ffc:	mvn	r2, #0
   15000:	str	r2, [r1, #12]
   15004:	mvn	r2, #1
   15008:	str	r2, [r1, #8]
   1500c:	str	r0, [sp, #4]
   15010:	ldr	r0, [fp, #-12]
   15014:	movw	r1, #0
   15018:	bl	1295c <__assert_fail@plt+0x18bc>
   1501c:	str	r0, [fp, #-16]
   15020:	cmn	r0, #1
   15024:	beq	15064 <__assert_fail@plt+0x3fc4>
   15028:	ldr	r0, [fp, #-16]
   1502c:	add	r1, sp, #12
   15030:	add	r0, r1, r0
   15034:	ldrb	r0, [r0]
   15038:	mvn	r2, #0
   1503c:	eor	r0, r0, r2
   15040:	and	r0, r0, #1
   15044:	ldr	r2, [fp, #-20]	; 0xffffffec
   15048:	sub	r0, r2, r0
   1504c:	str	r0, [fp, #-20]	; 0xffffffec
   15050:	ldr	r0, [fp, #-16]
   15054:	add	r0, r1, r0
   15058:	movw	r1, #1
   1505c:	strb	r1, [r0]
   15060:	b	15010 <__assert_fail@plt+0x3f70>
   15064:	ldr	r0, [fp, #-20]	; 0xffffffec
   15068:	sub	sp, fp, #8
   1506c:	pop	{r4, r5, fp, pc}
   15070:	push	{fp, lr}
   15074:	mov	fp, sp
   15078:	sub	sp, sp, #64	; 0x40
   1507c:	str	r0, [fp, #-4]
   15080:	strb	r1, [fp, #-5]
   15084:	ldr	r0, [fp, #-4]
   15088:	cmp	r0, #11
   1508c:	str	r0, [fp, #-16]
   15090:	bhi	152b4 <__assert_fail@plt+0x4214>
   15094:	add	r0, pc, #8
   15098:	ldr	r1, [fp, #-16]
   1509c:	ldr	r0, [r0, r1, lsl #2]
   150a0:	mov	pc, r0
   150a4:	ldrdeq	r5, [r1], -r4
   150a8:	strdeq	r5, [r1], -ip
   150ac:	andeq	r5, r1, r4, lsr #2
   150b0:	andeq	r5, r1, ip, asr #2
   150b4:	andeq	r5, r1, r4, ror r1
   150b8:	muleq	r1, ip, r1
   150bc:	andeq	r5, r1, r4, asr #3
   150c0:	andeq	r5, r1, ip, ror #3
   150c4:	andeq	r5, r1, r4, lsl r2
   150c8:	andeq	r5, r1, ip, lsr r2
   150cc:	andeq	r5, r1, r4, ror #4
   150d0:	andeq	r5, r1, ip, lsl #5
   150d4:	bl	10f8c <__ctype_b_loc@plt>
   150d8:	ldr	r0, [r0]
   150dc:	ldrb	lr, [fp, #-5]
   150e0:	mov	r1, lr
   150e4:	add	r0, r0, lr, lsl #1
   150e8:	ldrh	r0, [r0]
   150ec:	and	r0, r0, #8
   150f0:	str	r0, [fp, #-12]
   150f4:	str	r1, [fp, #-20]	; 0xffffffec
   150f8:	b	152b8 <__assert_fail@plt+0x4218>
   150fc:	bl	10f8c <__ctype_b_loc@plt>
   15100:	ldr	r0, [r0]
   15104:	ldrb	lr, [fp, #-5]
   15108:	mov	r1, lr
   1510c:	add	r0, r0, lr, lsl #1
   15110:	ldrh	r0, [r0]
   15114:	and	r0, r0, #1024	; 0x400
   15118:	str	r0, [fp, #-12]
   1511c:	str	r1, [fp, #-24]	; 0xffffffe8
   15120:	b	152b8 <__assert_fail@plt+0x4218>
   15124:	bl	10f8c <__ctype_b_loc@plt>
   15128:	ldr	r0, [r0]
   1512c:	ldrb	lr, [fp, #-5]
   15130:	mov	r1, lr
   15134:	add	r0, r0, lr, lsl #1
   15138:	ldrh	r0, [r0]
   1513c:	and	r0, r0, #1
   15140:	str	r0, [fp, #-12]
   15144:	str	r1, [fp, #-28]	; 0xffffffe4
   15148:	b	152b8 <__assert_fail@plt+0x4218>
   1514c:	bl	10f8c <__ctype_b_loc@plt>
   15150:	ldr	r0, [r0]
   15154:	ldrb	lr, [fp, #-5]
   15158:	mov	r1, lr
   1515c:	add	r0, r0, lr, lsl #1
   15160:	ldrh	r0, [r0]
   15164:	and	r0, r0, #2
   15168:	str	r0, [fp, #-12]
   1516c:	str	r1, [sp, #32]
   15170:	b	152b8 <__assert_fail@plt+0x4218>
   15174:	bl	10f8c <__ctype_b_loc@plt>
   15178:	ldr	r0, [r0]
   1517c:	ldrb	lr, [fp, #-5]
   15180:	mov	r1, lr
   15184:	add	r0, r0, lr, lsl #1
   15188:	ldrh	r0, [r0]
   1518c:	and	r0, r0, #2048	; 0x800
   15190:	str	r0, [fp, #-12]
   15194:	str	r1, [sp, #28]
   15198:	b	152b8 <__assert_fail@plt+0x4218>
   1519c:	bl	10f8c <__ctype_b_loc@plt>
   151a0:	ldr	r0, [r0]
   151a4:	ldrb	lr, [fp, #-5]
   151a8:	mov	r1, lr
   151ac:	add	r0, r0, lr, lsl #1
   151b0:	ldrh	r0, [r0]
   151b4:	and	r0, r0, #32768	; 0x8000
   151b8:	str	r0, [fp, #-12]
   151bc:	str	r1, [sp, #24]
   151c0:	b	152b8 <__assert_fail@plt+0x4218>
   151c4:	bl	10f8c <__ctype_b_loc@plt>
   151c8:	ldr	r0, [r0]
   151cc:	ldrb	lr, [fp, #-5]
   151d0:	mov	r1, lr
   151d4:	add	r0, r0, lr, lsl #1
   151d8:	ldrh	r0, [r0]
   151dc:	and	r0, r0, #512	; 0x200
   151e0:	str	r0, [fp, #-12]
   151e4:	str	r1, [sp, #20]
   151e8:	b	152b8 <__assert_fail@plt+0x4218>
   151ec:	bl	10f8c <__ctype_b_loc@plt>
   151f0:	ldr	r0, [r0]
   151f4:	ldrb	lr, [fp, #-5]
   151f8:	mov	r1, lr
   151fc:	add	r0, r0, lr, lsl #1
   15200:	ldrh	r0, [r0]
   15204:	and	r0, r0, #16384	; 0x4000
   15208:	str	r0, [fp, #-12]
   1520c:	str	r1, [sp, #16]
   15210:	b	152b8 <__assert_fail@plt+0x4218>
   15214:	bl	10f8c <__ctype_b_loc@plt>
   15218:	ldr	r0, [r0]
   1521c:	ldrb	lr, [fp, #-5]
   15220:	mov	r1, lr
   15224:	add	r0, r0, lr, lsl #1
   15228:	ldrh	r0, [r0]
   1522c:	and	r0, r0, #4
   15230:	str	r0, [fp, #-12]
   15234:	str	r1, [sp, #12]
   15238:	b	152b8 <__assert_fail@plt+0x4218>
   1523c:	bl	10f8c <__ctype_b_loc@plt>
   15240:	ldr	r0, [r0]
   15244:	ldrb	lr, [fp, #-5]
   15248:	mov	r1, lr
   1524c:	add	r0, r0, lr, lsl #1
   15250:	ldrh	r0, [r0]
   15254:	and	r0, r0, #8192	; 0x2000
   15258:	str	r0, [fp, #-12]
   1525c:	str	r1, [sp, #8]
   15260:	b	152b8 <__assert_fail@plt+0x4218>
   15264:	bl	10f8c <__ctype_b_loc@plt>
   15268:	ldr	r0, [r0]
   1526c:	ldrb	lr, [fp, #-5]
   15270:	mov	r1, lr
   15274:	add	r0, r0, lr, lsl #1
   15278:	ldrh	r0, [r0]
   1527c:	and	r0, r0, #256	; 0x100
   15280:	str	r0, [fp, #-12]
   15284:	str	r1, [sp, #4]
   15288:	b	152b8 <__assert_fail@plt+0x4218>
   1528c:	bl	10f8c <__ctype_b_loc@plt>
   15290:	ldr	r0, [r0]
   15294:	ldrb	lr, [fp, #-5]
   15298:	mov	r1, lr
   1529c:	add	r0, r0, lr, lsl #1
   152a0:	ldrh	r0, [r0]
   152a4:	and	r0, r0, #4096	; 0x1000
   152a8:	str	r0, [fp, #-12]
   152ac:	str	r1, [sp]
   152b0:	b	152b8 <__assert_fail@plt+0x4218>
   152b4:	bl	11088 <abort@plt>
   152b8:	ldr	r0, [fp, #-12]
   152bc:	cmp	r0, #0
   152c0:	movw	r0, #0
   152c4:	movne	r0, #1
   152c8:	mvn	r1, #0
   152cc:	eor	r0, r0, r1
   152d0:	eor	r0, r0, r1
   152d4:	and	r0, r0, #1
   152d8:	mov	sp, fp
   152dc:	pop	{fp, pc}
   152e0:	sub	sp, sp, #4
   152e4:	strb	r0, [sp, #3]
   152e8:	strb	r1, [sp, #2]
   152ec:	ldrb	r0, [sp, #3]
   152f0:	ldrb	r1, [sp, #2]
   152f4:	cmp	r0, r1
   152f8:	movw	r0, #0
   152fc:	moveq	r0, #1
   15300:	and	r0, r0, #1
   15304:	add	sp, sp, #4
   15308:	bx	lr
   1530c:	sub	sp, sp, #4
   15310:	str	r0, [sp]
   15314:	ldr	r0, [sp]
   15318:	movw	r1, #17504	; 0x4460
   1531c:	movt	r1, #3
   15320:	str	r0, [r1]
   15324:	add	sp, sp, #4
   15328:	bx	lr
   1532c:	sub	sp, sp, #4
   15330:	and	r0, r0, #1
   15334:	strb	r0, [sp, #3]
   15338:	ldrb	r0, [sp, #3]
   1533c:	and	r0, r0, #1
   15340:	movw	r1, #17508	; 0x4464
   15344:	movt	r1, #3
   15348:	strb	r0, [r1]
   1534c:	add	sp, sp, #4
   15350:	bx	lr
   15354:	push	{fp, lr}
   15358:	mov	fp, sp
   1535c:	sub	sp, sp, #24
   15360:	movw	r0, #8532	; 0x2154
   15364:	movt	r0, #3
   15368:	ldr	r0, [r0]
   1536c:	bl	1d9d8 <__assert_fail@plt+0xc938>
   15370:	cmp	r0, #0
   15374:	beq	15444 <__assert_fail@plt+0x43a4>
   15378:	movw	r0, #17508	; 0x4464
   1537c:	movt	r0, #3
   15380:	ldrb	r0, [r0]
   15384:	tst	r0, #1
   15388:	beq	1539c <__assert_fail@plt+0x42fc>
   1538c:	bl	10fd4 <__errno_location@plt>
   15390:	ldr	r0, [r0]
   15394:	cmp	r0, #32
   15398:	beq	15444 <__assert_fail@plt+0x43a4>
   1539c:	movw	r0, #2342	; 0x926
   153a0:	movt	r0, #2
   153a4:	bl	10fa4 <gettext@plt>
   153a8:	str	r0, [fp, #-4]
   153ac:	movw	r0, #17504	; 0x4460
   153b0:	movt	r0, #3
   153b4:	ldr	r0, [r0]
   153b8:	movw	lr, #0
   153bc:	cmp	r0, lr
   153c0:	beq	15418 <__assert_fail@plt+0x4378>
   153c4:	bl	10fd4 <__errno_location@plt>
   153c8:	ldr	r1, [r0]
   153cc:	movw	r0, #17504	; 0x4460
   153d0:	movt	r0, #3
   153d4:	ldr	r0, [r0]
   153d8:	str	r1, [fp, #-8]
   153dc:	bl	17934 <__assert_fail@plt+0x6894>
   153e0:	ldr	r1, [fp, #-4]
   153e4:	movw	lr, #0
   153e8:	str	r0, [sp, #12]
   153ec:	mov	r0, lr
   153f0:	ldr	lr, [fp, #-8]
   153f4:	str	r1, [sp, #8]
   153f8:	mov	r1, lr
   153fc:	movw	r2, #5155	; 0x1423
   15400:	movt	r2, #2
   15404:	ldr	r3, [sp, #12]
   15408:	ldr	ip, [sp, #8]
   1540c:	str	ip, [sp]
   15410:	bl	10f44 <error@plt>
   15414:	b	15434 <__assert_fail@plt+0x4394>
   15418:	bl	10fd4 <__errno_location@plt>
   1541c:	ldr	r1, [r0]
   15420:	ldr	r3, [fp, #-4]
   15424:	movw	r0, #0
   15428:	movw	r2, #5159	; 0x1427
   1542c:	movt	r2, #2
   15430:	bl	10f44 <error@plt>
   15434:	movw	r0, #8436	; 0x20f4
   15438:	movt	r0, #3
   1543c:	ldr	r0, [r0]
   15440:	bl	10e90 <_exit@plt>
   15444:	movw	r0, #8520	; 0x2148
   15448:	movt	r0, #3
   1544c:	ldr	r0, [r0]
   15450:	bl	1d9d8 <__assert_fail@plt+0xc938>
   15454:	cmp	r0, #0
   15458:	beq	1546c <__assert_fail@plt+0x43cc>
   1545c:	movw	r0, #8436	; 0x20f4
   15460:	movt	r0, #3
   15464:	ldr	r0, [r0]
   15468:	bl	10e90 <_exit@plt>
   1546c:	mov	sp, fp
   15470:	pop	{fp, pc}
   15474:	push	{r4, r5, fp, lr}
   15478:	add	fp, sp, #8
   1547c:	sub	sp, sp, #48	; 0x30
   15480:	ldr	r1, [fp, #12]
   15484:	ldr	ip, [fp, #8]
   15488:	ldr	lr, [fp, #16]
   1548c:	str	r0, [fp, #-12]
   15490:	str	r3, [fp, #-20]	; 0xffffffec
   15494:	str	r2, [fp, #-24]	; 0xffffffe8
   15498:	str	r1, [sp, #28]
   1549c:	str	ip, [sp, #24]
   154a0:	ldr	r0, [fp, #-12]
   154a4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   154a8:	ldr	r3, [fp, #-20]	; 0xffffffec
   154ac:	ldr	r1, [sp, #24]
   154b0:	ldr	ip, [sp, #28]
   154b4:	ldr	r4, [fp, #16]
   154b8:	mov	r5, sp
   154bc:	str	r4, [r5, #8]
   154c0:	str	ip, [r5, #4]
   154c4:	str	r1, [r5]
   154c8:	str	lr, [sp, #20]
   154cc:	bl	10e54 <posix_fadvise64@plt>
   154d0:	str	r0, [sp, #16]
   154d4:	sub	sp, fp, #8
   154d8:	pop	{r4, r5, fp, pc}
   154dc:	push	{fp, lr}
   154e0:	mov	fp, sp
   154e4:	sub	sp, sp, #24
   154e8:	str	r0, [fp, #-4]
   154ec:	str	r1, [fp, #-8]
   154f0:	ldr	r0, [fp, #-4]
   154f4:	movw	r1, #0
   154f8:	cmp	r0, r1
   154fc:	beq	1552c <__assert_fail@plt+0x448c>
   15500:	ldr	r0, [fp, #-4]
   15504:	bl	10ff8 <fileno@plt>
   15508:	ldr	lr, [fp, #-8]
   1550c:	mov	r1, sp
   15510:	str	lr, [r1, #8]
   15514:	mov	lr, #0
   15518:	str	lr, [r1, #4]
   1551c:	str	lr, [r1]
   15520:	mov	r2, lr
   15524:	mov	r3, lr
   15528:	bl	15474 <__assert_fail@plt+0x43d4>
   1552c:	mov	sp, fp
   15530:	pop	{fp, pc}
   15534:	push	{fp, lr}
   15538:	mov	fp, sp
   1553c:	sub	sp, sp, #16
   15540:	str	r0, [fp, #-4]
   15544:	bl	10fd4 <__errno_location@plt>
   15548:	ldr	r0, [r0]
   1554c:	str	r0, [sp, #8]
   15550:	ldr	r0, [fp, #-4]
   15554:	bl	10e84 <free@plt>
   15558:	ldr	r0, [sp, #8]
   1555c:	str	r0, [sp, #4]
   15560:	bl	10fd4 <__errno_location@plt>
   15564:	ldr	lr, [sp, #4]
   15568:	str	lr, [r0]
   1556c:	mov	sp, fp
   15570:	pop	{fp, pc}
   15574:	push	{fp, lr}
   15578:	mov	fp, sp
   1557c:	sub	sp, sp, #24
   15580:	str	r0, [fp, #-4]
   15584:	ldr	r0, [fp, #-4]
   15588:	movw	r1, #0
   1558c:	cmp	r0, r1
   15590:	bne	155b4 <__assert_fail@plt+0x4514>
   15594:	movw	r0, #8520	; 0x2148
   15598:	movt	r0, #3
   1559c:	ldr	r1, [r0]
   155a0:	movw	r0, #5162	; 0x142a
   155a4:	movt	r0, #2
   155a8:	bl	11070 <fputs@plt>
   155ac:	str	r0, [sp, #8]
   155b0:	bl	11088 <abort@plt>
   155b4:	ldr	r0, [fp, #-4]
   155b8:	movw	r1, #47	; 0x2f
   155bc:	bl	11040 <strrchr@plt>
   155c0:	str	r0, [fp, #-8]
   155c4:	ldr	r0, [fp, #-8]
   155c8:	movw	r1, #0
   155cc:	cmp	r0, r1
   155d0:	beq	155e4 <__assert_fail@plt+0x4544>
   155d4:	ldr	r0, [fp, #-8]
   155d8:	add	r0, r0, #1
   155dc:	str	r0, [sp, #4]
   155e0:	b	155ec <__assert_fail@plt+0x454c>
   155e4:	ldr	r0, [fp, #-4]
   155e8:	str	r0, [sp, #4]
   155ec:	ldr	r0, [sp, #4]
   155f0:	str	r0, [sp, #12]
   155f4:	ldr	r0, [sp, #12]
   155f8:	ldr	r1, [fp, #-4]
   155fc:	sub	r0, r0, r1
   15600:	cmp	r0, #7
   15604:	blt	15670 <__assert_fail@plt+0x45d0>
   15608:	ldr	r0, [sp, #12]
   1560c:	mvn	r1, #6
   15610:	add	r0, r0, r1
   15614:	movw	r1, #5218	; 0x1462
   15618:	movt	r1, #2
   1561c:	movw	r2, #7
   15620:	bl	1107c <strncmp@plt>
   15624:	cmp	r0, #0
   15628:	bne	15670 <__assert_fail@plt+0x45d0>
   1562c:	ldr	r0, [sp, #12]
   15630:	str	r0, [fp, #-4]
   15634:	ldr	r0, [sp, #12]
   15638:	movw	r1, #5226	; 0x146a
   1563c:	movt	r1, #2
   15640:	movw	r2, #3
   15644:	bl	1107c <strncmp@plt>
   15648:	cmp	r0, #0
   1564c:	bne	1566c <__assert_fail@plt+0x45cc>
   15650:	ldr	r0, [sp, #12]
   15654:	add	r0, r0, #3
   15658:	str	r0, [fp, #-4]
   1565c:	ldr	r0, [fp, #-4]
   15660:	movw	r1, #8504	; 0x2138
   15664:	movt	r1, #3
   15668:	str	r0, [r1]
   1566c:	b	15670 <__assert_fail@plt+0x45d0>
   15670:	ldr	r0, [fp, #-4]
   15674:	movw	r1, #17512	; 0x4468
   15678:	movt	r1, #3
   1567c:	str	r0, [r1]
   15680:	ldr	r0, [fp, #-4]
   15684:	movw	r1, #8508	; 0x213c
   15688:	movt	r1, #3
   1568c:	str	r0, [r1]
   15690:	mov	sp, fp
   15694:	pop	{fp, pc}
   15698:	push	{fp, lr}
   1569c:	mov	fp, sp
   156a0:	sub	sp, sp, #24
   156a4:	str	r0, [fp, #-4]
   156a8:	bl	10fd4 <__errno_location@plt>
   156ac:	ldr	r0, [r0]
   156b0:	str	r0, [fp, #-8]
   156b4:	ldr	r0, [fp, #-4]
   156b8:	movw	lr, #0
   156bc:	cmp	r0, lr
   156c0:	beq	156d0 <__assert_fail@plt+0x4630>
   156c4:	ldr	r0, [fp, #-4]
   156c8:	str	r0, [sp, #8]
   156cc:	b	156e0 <__assert_fail@plt+0x4640>
   156d0:	movw	r0, #17516	; 0x446c
   156d4:	movt	r0, #3
   156d8:	str	r0, [sp, #8]
   156dc:	b	156e0 <__assert_fail@plt+0x4640>
   156e0:	ldr	r0, [sp, #8]
   156e4:	movw	r1, #48	; 0x30
   156e8:	bl	1b3a8 <__assert_fail@plt+0xa308>
   156ec:	str	r0, [sp, #12]
   156f0:	ldr	r0, [fp, #-8]
   156f4:	str	r0, [sp, #4]
   156f8:	bl	10fd4 <__errno_location@plt>
   156fc:	ldr	r1, [sp, #4]
   15700:	str	r1, [r0]
   15704:	ldr	r0, [sp, #12]
   15708:	mov	sp, fp
   1570c:	pop	{fp, pc}
   15710:	sub	sp, sp, #8
   15714:	str	r0, [sp, #4]
   15718:	ldr	r0, [sp, #4]
   1571c:	movw	r1, #0
   15720:	cmp	r0, r1
   15724:	beq	15734 <__assert_fail@plt+0x4694>
   15728:	ldr	r0, [sp, #4]
   1572c:	str	r0, [sp]
   15730:	b	15744 <__assert_fail@plt+0x46a4>
   15734:	movw	r0, #17516	; 0x446c
   15738:	movt	r0, #3
   1573c:	str	r0, [sp]
   15740:	b	15744 <__assert_fail@plt+0x46a4>
   15744:	ldr	r0, [sp]
   15748:	ldr	r0, [r0]
   1574c:	add	sp, sp, #8
   15750:	bx	lr
   15754:	sub	sp, sp, #16
   15758:	str	r0, [sp, #12]
   1575c:	str	r1, [sp, #8]
   15760:	ldr	r0, [sp, #8]
   15764:	ldr	r1, [sp, #12]
   15768:	movw	r2, #0
   1576c:	cmp	r1, r2
   15770:	str	r0, [sp, #4]
   15774:	beq	15784 <__assert_fail@plt+0x46e4>
   15778:	ldr	r0, [sp, #12]
   1577c:	str	r0, [sp]
   15780:	b	15794 <__assert_fail@plt+0x46f4>
   15784:	movw	r0, #17516	; 0x446c
   15788:	movt	r0, #3
   1578c:	str	r0, [sp]
   15790:	b	15794 <__assert_fail@plt+0x46f4>
   15794:	ldr	r0, [sp]
   15798:	ldr	r1, [sp, #4]
   1579c:	str	r1, [r0]
   157a0:	add	sp, sp, #16
   157a4:	bx	lr
   157a8:	sub	sp, sp, #32
   157ac:	str	r0, [sp, #28]
   157b0:	strb	r1, [sp, #27]
   157b4:	str	r2, [sp, #20]
   157b8:	ldrb	r0, [sp, #27]
   157bc:	strb	r0, [sp, #19]
   157c0:	ldr	r0, [sp, #28]
   157c4:	movw	r1, #0
   157c8:	cmp	r0, r1
   157cc:	beq	157dc <__assert_fail@plt+0x473c>
   157d0:	ldr	r0, [sp, #28]
   157d4:	str	r0, [sp]
   157d8:	b	157ec <__assert_fail@plt+0x474c>
   157dc:	movw	r0, #17516	; 0x446c
   157e0:	movt	r0, #3
   157e4:	str	r0, [sp]
   157e8:	b	157ec <__assert_fail@plt+0x474c>
   157ec:	ldr	r0, [sp]
   157f0:	add	r0, r0, #8
   157f4:	ldrb	r1, [sp, #19]
   157f8:	lsr	r1, r1, #5
   157fc:	add	r0, r0, r1, lsl #2
   15800:	str	r0, [sp, #12]
   15804:	ldrb	r0, [sp, #19]
   15808:	and	r0, r0, #31
   1580c:	str	r0, [sp, #8]
   15810:	ldr	r0, [sp, #12]
   15814:	ldr	r0, [r0]
   15818:	ldr	r1, [sp, #8]
   1581c:	lsr	r0, r0, r1
   15820:	and	r0, r0, #1
   15824:	str	r0, [sp, #4]
   15828:	ldr	r0, [sp, #20]
   1582c:	and	r0, r0, #1
   15830:	ldr	r1, [sp, #4]
   15834:	eor	r0, r0, r1
   15838:	ldr	r1, [sp, #8]
   1583c:	lsl	r0, r0, r1
   15840:	ldr	r1, [sp, #12]
   15844:	ldr	r2, [r1]
   15848:	eor	r0, r2, r0
   1584c:	str	r0, [r1]
   15850:	ldr	r0, [sp, #4]
   15854:	add	sp, sp, #32
   15858:	bx	lr
   1585c:	sub	sp, sp, #12
   15860:	str	r0, [sp, #8]
   15864:	str	r1, [sp, #4]
   15868:	ldr	r0, [sp, #8]
   1586c:	movw	r1, #0
   15870:	cmp	r0, r1
   15874:	bne	15884 <__assert_fail@plt+0x47e4>
   15878:	movw	r0, #17516	; 0x446c
   1587c:	movt	r0, #3
   15880:	str	r0, [sp, #8]
   15884:	ldr	r0, [sp, #8]
   15888:	ldr	r0, [r0, #4]
   1588c:	str	r0, [sp]
   15890:	ldr	r0, [sp, #4]
   15894:	ldr	r1, [sp, #8]
   15898:	str	r0, [r1, #4]
   1589c:	ldr	r0, [sp]
   158a0:	add	sp, sp, #12
   158a4:	bx	lr
   158a8:	push	{fp, lr}
   158ac:	mov	fp, sp
   158b0:	sub	sp, sp, #16
   158b4:	str	r0, [fp, #-4]
   158b8:	str	r1, [sp, #8]
   158bc:	str	r2, [sp, #4]
   158c0:	ldr	r0, [fp, #-4]
   158c4:	movw	r1, #0
   158c8:	cmp	r0, r1
   158cc:	bne	158dc <__assert_fail@plt+0x483c>
   158d0:	movw	r0, #17516	; 0x446c
   158d4:	movt	r0, #3
   158d8:	str	r0, [fp, #-4]
   158dc:	ldr	r0, [fp, #-4]
   158e0:	movw	r1, #10
   158e4:	str	r1, [r0]
   158e8:	ldr	r0, [sp, #8]
   158ec:	movw	r1, #0
   158f0:	cmp	r0, r1
   158f4:	beq	15908 <__assert_fail@plt+0x4868>
   158f8:	ldr	r0, [sp, #4]
   158fc:	movw	r1, #0
   15900:	cmp	r0, r1
   15904:	bne	1590c <__assert_fail@plt+0x486c>
   15908:	bl	11088 <abort@plt>
   1590c:	ldr	r0, [sp, #8]
   15910:	ldr	r1, [fp, #-4]
   15914:	str	r0, [r1, #40]	; 0x28
   15918:	ldr	r0, [sp, #4]
   1591c:	ldr	r1, [fp, #-4]
   15920:	str	r0, [r1, #44]	; 0x2c
   15924:	mov	sp, fp
   15928:	pop	{fp, pc}
   1592c:	push	{r4, r5, r6, sl, fp, lr}
   15930:	add	fp, sp, #16
   15934:	sub	sp, sp, #64	; 0x40
   15938:	ldr	ip, [fp, #8]
   1593c:	str	r0, [fp, #-20]	; 0xffffffec
   15940:	str	r1, [fp, #-24]	; 0xffffffe8
   15944:	str	r2, [fp, #-28]	; 0xffffffe4
   15948:	str	r3, [fp, #-32]	; 0xffffffe0
   1594c:	ldr	r0, [fp, #8]
   15950:	movw	r1, #0
   15954:	cmp	r0, r1
   15958:	str	ip, [sp, #32]
   1595c:	beq	1596c <__assert_fail@plt+0x48cc>
   15960:	ldr	r0, [fp, #8]
   15964:	str	r0, [sp, #28]
   15968:	b	1597c <__assert_fail@plt+0x48dc>
   1596c:	movw	r0, #17516	; 0x446c
   15970:	movt	r0, #3
   15974:	str	r0, [sp, #28]
   15978:	b	1597c <__assert_fail@plt+0x48dc>
   1597c:	ldr	r0, [sp, #28]
   15980:	str	r0, [fp, #-36]	; 0xffffffdc
   15984:	bl	10fd4 <__errno_location@plt>
   15988:	ldr	r0, [r0]
   1598c:	str	r0, [sp, #40]	; 0x28
   15990:	ldr	r0, [fp, #-20]	; 0xffffffec
   15994:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15998:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1599c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   159a0:	ldr	lr, [fp, #-36]	; 0xffffffdc
   159a4:	ldr	lr, [lr]
   159a8:	ldr	ip, [fp, #-36]	; 0xffffffdc
   159ac:	ldr	ip, [ip, #4]
   159b0:	ldr	r4, [fp, #-36]	; 0xffffffdc
   159b4:	add	r4, r4, #8
   159b8:	ldr	r5, [fp, #-36]	; 0xffffffdc
   159bc:	ldr	r5, [r5, #40]	; 0x28
   159c0:	ldr	r6, [fp, #-36]	; 0xffffffdc
   159c4:	ldr	r6, [r6, #44]	; 0x2c
   159c8:	str	lr, [sp]
   159cc:	str	ip, [sp, #4]
   159d0:	str	r4, [sp, #8]
   159d4:	str	r5, [sp, #12]
   159d8:	str	r6, [sp, #16]
   159dc:	bl	15a04 <__assert_fail@plt+0x4964>
   159e0:	str	r0, [sp, #36]	; 0x24
   159e4:	ldr	r0, [sp, #40]	; 0x28
   159e8:	str	r0, [sp, #24]
   159ec:	bl	10fd4 <__errno_location@plt>
   159f0:	ldr	r1, [sp, #24]
   159f4:	str	r1, [r0]
   159f8:	ldr	r0, [sp, #36]	; 0x24
   159fc:	sub	sp, fp, #16
   15a00:	pop	{r4, r5, r6, sl, fp, pc}
   15a04:	push	{r4, r5, r6, sl, fp, lr}
   15a08:	add	fp, sp, #16
   15a0c:	sub	sp, sp, #168	; 0xa8
   15a10:	ldr	ip, [fp, #24]
   15a14:	ldr	lr, [fp, #20]
   15a18:	ldr	r4, [fp, #16]
   15a1c:	ldr	r5, [fp, #12]
   15a20:	ldr	r6, [fp, #8]
   15a24:	str	r0, [fp, #-24]	; 0xffffffe8
   15a28:	str	r1, [fp, #-28]	; 0xffffffe4
   15a2c:	str	r2, [fp, #-32]	; 0xffffffe0
   15a30:	str	r3, [fp, #-36]	; 0xffffffdc
   15a34:	movw	r0, #0
   15a38:	str	r0, [fp, #-44]	; 0xffffffd4
   15a3c:	str	r0, [fp, #-48]	; 0xffffffd0
   15a40:	str	r0, [fp, #-52]	; 0xffffffcc
   15a44:	str	r0, [fp, #-56]	; 0xffffffc8
   15a48:	movw	r0, #0
   15a4c:	strb	r0, [fp, #-57]	; 0xffffffc7
   15a50:	str	r6, [sp, #80]	; 0x50
   15a54:	str	lr, [sp, #76]	; 0x4c
   15a58:	str	r4, [sp, #72]	; 0x48
   15a5c:	str	r5, [sp, #68]	; 0x44
   15a60:	str	ip, [sp, #64]	; 0x40
   15a64:	bl	10f14 <__ctype_get_mb_cur_max@plt>
   15a68:	cmp	r0, #1
   15a6c:	movw	r0, #0
   15a70:	moveq	r0, #1
   15a74:	and	r0, r0, #1
   15a78:	strb	r0, [fp, #-58]	; 0xffffffc6
   15a7c:	ldr	r0, [fp, #12]
   15a80:	and	r0, r0, #2
   15a84:	cmp	r0, #0
   15a88:	movw	r0, #0
   15a8c:	movne	r0, #1
   15a90:	and	r0, r0, #1
   15a94:	strb	r0, [fp, #-59]	; 0xffffffc5
   15a98:	movw	r0, #0
   15a9c:	strb	r0, [fp, #-60]	; 0xffffffc4
   15aa0:	strb	r0, [fp, #-61]	; 0xffffffc3
   15aa4:	movw	r0, #1
   15aa8:	strb	r0, [fp, #-62]	; 0xffffffc2
   15aac:	ldr	r0, [fp, #8]
   15ab0:	cmp	r0, #10
   15ab4:	str	r0, [sp, #60]	; 0x3c
   15ab8:	bhi	15ce0 <__assert_fail@plt+0x4c40>
   15abc:	add	r0, pc, #8
   15ac0:	ldr	r1, [sp, #60]	; 0x3c
   15ac4:	ldr	r0, [r0, r1, lsl #2]
   15ac8:	mov	pc, r0
   15acc:	ldrdeq	r5, [r1], -r4
   15ad0:	andeq	r5, r1, r0, asr ip
   15ad4:	andeq	r5, r1, r0, ror ip
   15ad8:	andeq	r5, r1, r8, asr #24
   15adc:	andeq	r5, r1, r8, asr ip
   15ae0:	andeq	r5, r1, r8, lsl #22
   15ae4:	strdeq	r5, [r1], -r8
   15ae8:	andeq	r5, r1, ip, ror #22
   15aec:	andeq	r5, r1, r0, lsl #23
   15af0:	andeq	r5, r1, r0, lsl #23
   15af4:	andeq	r5, r1, r0, lsl #23
   15af8:	movw	r0, #5
   15afc:	str	r0, [fp, #8]
   15b00:	movw	r0, #1
   15b04:	strb	r0, [fp, #-59]	; 0xffffffc5
   15b08:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15b0c:	tst	r0, #1
   15b10:	bne	15b4c <__assert_fail@plt+0x4aac>
   15b14:	b	15b18 <__assert_fail@plt+0x4a78>
   15b18:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15b1c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15b20:	cmp	r0, r1
   15b24:	bcs	15b3c <__assert_fail@plt+0x4a9c>
   15b28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15b2c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15b30:	add	r0, r0, r1
   15b34:	movw	r1, #34	; 0x22
   15b38:	strb	r1, [r0]
   15b3c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15b40:	add	r0, r0, #1
   15b44:	str	r0, [fp, #-44]	; 0xffffffd4
   15b48:	b	15b4c <__assert_fail@plt+0x4aac>
   15b4c:	movw	r0, #1
   15b50:	strb	r0, [fp, #-57]	; 0xffffffc7
   15b54:	movw	r0, #5306	; 0x14ba
   15b58:	movt	r0, #2
   15b5c:	str	r0, [fp, #-52]	; 0xffffffcc
   15b60:	movw	r0, #1
   15b64:	str	r0, [fp, #-56]	; 0xffffffc8
   15b68:	b	15ce4 <__assert_fail@plt+0x4c44>
   15b6c:	movw	r0, #1
   15b70:	strb	r0, [fp, #-57]	; 0xffffffc7
   15b74:	movw	r0, #0
   15b78:	strb	r0, [fp, #-59]	; 0xffffffc5
   15b7c:	b	15ce4 <__assert_fail@plt+0x4c44>
   15b80:	ldr	r0, [fp, #8]
   15b84:	cmp	r0, #10
   15b88:	beq	15bb4 <__assert_fail@plt+0x4b14>
   15b8c:	ldr	r1, [fp, #8]
   15b90:	movw	r0, #5308	; 0x14bc
   15b94:	movt	r0, #2
   15b98:	bl	17bf4 <__assert_fail@plt+0x6b54>
   15b9c:	str	r0, [fp, #20]
   15ba0:	ldr	r1, [fp, #8]
   15ba4:	movw	r0, #3024	; 0xbd0
   15ba8:	movt	r0, #2
   15bac:	bl	17bf4 <__assert_fail@plt+0x6b54>
   15bb0:	str	r0, [fp, #24]
   15bb4:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15bb8:	tst	r0, #1
   15bbc:	bne	15c28 <__assert_fail@plt+0x4b88>
   15bc0:	ldr	r0, [fp, #20]
   15bc4:	str	r0, [fp, #-52]	; 0xffffffcc
   15bc8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   15bcc:	ldrsb	r0, [r0]
   15bd0:	cmp	r0, #0
   15bd4:	beq	15c24 <__assert_fail@plt+0x4b84>
   15bd8:	b	15bdc <__assert_fail@plt+0x4b3c>
   15bdc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15be0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15be4:	cmp	r0, r1
   15be8:	bcs	15c04 <__assert_fail@plt+0x4b64>
   15bec:	ldr	r0, [fp, #-52]	; 0xffffffcc
   15bf0:	ldrb	r0, [r0]
   15bf4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15bf8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   15bfc:	add	r1, r1, r2
   15c00:	strb	r0, [r1]
   15c04:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15c08:	add	r0, r0, #1
   15c0c:	str	r0, [fp, #-44]	; 0xffffffd4
   15c10:	b	15c14 <__assert_fail@plt+0x4b74>
   15c14:	ldr	r0, [fp, #-52]	; 0xffffffcc
   15c18:	add	r0, r0, #1
   15c1c:	str	r0, [fp, #-52]	; 0xffffffcc
   15c20:	b	15bc8 <__assert_fail@plt+0x4b28>
   15c24:	b	15c28 <__assert_fail@plt+0x4b88>
   15c28:	movw	r0, #1
   15c2c:	strb	r0, [fp, #-57]	; 0xffffffc7
   15c30:	ldr	r0, [fp, #24]
   15c34:	str	r0, [fp, #-52]	; 0xffffffcc
   15c38:	ldr	r0, [fp, #-52]	; 0xffffffcc
   15c3c:	bl	10fb0 <strlen@plt>
   15c40:	str	r0, [fp, #-56]	; 0xffffffc8
   15c44:	b	15ce4 <__assert_fail@plt+0x4c44>
   15c48:	movw	r0, #1
   15c4c:	strb	r0, [fp, #-57]	; 0xffffffc7
   15c50:	movw	r0, #1
   15c54:	strb	r0, [fp, #-59]	; 0xffffffc5
   15c58:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15c5c:	tst	r0, #1
   15c60:	bne	15c6c <__assert_fail@plt+0x4bcc>
   15c64:	movw	r0, #1
   15c68:	strb	r0, [fp, #-57]	; 0xffffffc7
   15c6c:	b	15c70 <__assert_fail@plt+0x4bd0>
   15c70:	movw	r0, #2
   15c74:	str	r0, [fp, #8]
   15c78:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15c7c:	tst	r0, #1
   15c80:	bne	15cbc <__assert_fail@plt+0x4c1c>
   15c84:	b	15c88 <__assert_fail@plt+0x4be8>
   15c88:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15c8c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15c90:	cmp	r0, r1
   15c94:	bcs	15cac <__assert_fail@plt+0x4c0c>
   15c98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15c9c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15ca0:	add	r0, r0, r1
   15ca4:	movw	r1, #39	; 0x27
   15ca8:	strb	r1, [r0]
   15cac:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15cb0:	add	r0, r0, #1
   15cb4:	str	r0, [fp, #-44]	; 0xffffffd4
   15cb8:	b	15cbc <__assert_fail@plt+0x4c1c>
   15cbc:	movw	r0, #3024	; 0xbd0
   15cc0:	movt	r0, #2
   15cc4:	str	r0, [fp, #-52]	; 0xffffffcc
   15cc8:	movw	r0, #1
   15ccc:	str	r0, [fp, #-56]	; 0xffffffc8
   15cd0:	b	15ce4 <__assert_fail@plt+0x4c44>
   15cd4:	movw	r0, #0
   15cd8:	strb	r0, [fp, #-59]	; 0xffffffc5
   15cdc:	b	15ce4 <__assert_fail@plt+0x4c44>
   15ce0:	bl	11088 <abort@plt>
   15ce4:	movw	r0, #0
   15ce8:	str	r0, [fp, #-40]	; 0xffffffd8
   15cec:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15cf0:	cmn	r0, #1
   15cf4:	bne	15d20 <__assert_fail@plt+0x4c80>
   15cf8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15cfc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   15d00:	add	r0, r0, r1
   15d04:	ldrb	r0, [r0]
   15d08:	cmp	r0, #0
   15d0c:	movw	r0, #0
   15d10:	moveq	r0, #1
   15d14:	and	r0, r0, #1
   15d18:	str	r0, [sp, #56]	; 0x38
   15d1c:	b	15d3c <__assert_fail@plt+0x4c9c>
   15d20:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15d24:	ldr	r1, [fp, #-36]	; 0xffffffdc
   15d28:	cmp	r0, r1
   15d2c:	movw	r0, #0
   15d30:	moveq	r0, #1
   15d34:	and	r0, r0, #1
   15d38:	str	r0, [sp, #56]	; 0x38
   15d3c:	ldr	r0, [sp, #56]	; 0x38
   15d40:	cmp	r0, #0
   15d44:	movw	r0, #0
   15d48:	movne	r0, #1
   15d4c:	mvn	r1, #0
   15d50:	eor	r0, r0, r1
   15d54:	tst	r0, #1
   15d58:	beq	16f48 <__assert_fail@plt+0x5ea8>
   15d5c:	movw	r0, #0
   15d60:	strb	r0, [fp, #-65]	; 0xffffffbf
   15d64:	strb	r0, [fp, #-66]	; 0xffffffbe
   15d68:	strb	r0, [fp, #-67]	; 0xffffffbd
   15d6c:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   15d70:	tst	r0, #1
   15d74:	beq	15e20 <__assert_fail@plt+0x4d80>
   15d78:	ldr	r0, [fp, #8]
   15d7c:	cmp	r0, #2
   15d80:	beq	15e20 <__assert_fail@plt+0x4d80>
   15d84:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15d88:	cmp	r0, #0
   15d8c:	beq	15e20 <__assert_fail@plt+0x4d80>
   15d90:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15d94:	ldr	r1, [fp, #-56]	; 0xffffffc8
   15d98:	add	r0, r0, r1
   15d9c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   15da0:	cmn	r1, #1
   15da4:	str	r0, [sp, #52]	; 0x34
   15da8:	bne	15dd0 <__assert_fail@plt+0x4d30>
   15dac:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15db0:	movw	r1, #1
   15db4:	cmp	r1, r0
   15db8:	bcs	15dd0 <__assert_fail@plt+0x4d30>
   15dbc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15dc0:	bl	10fb0 <strlen@plt>
   15dc4:	str	r0, [fp, #-36]	; 0xffffffdc
   15dc8:	str	r0, [sp, #48]	; 0x30
   15dcc:	b	15dd8 <__assert_fail@plt+0x4d38>
   15dd0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15dd4:	str	r0, [sp, #48]	; 0x30
   15dd8:	ldr	r0, [sp, #48]	; 0x30
   15ddc:	ldr	r1, [sp, #52]	; 0x34
   15de0:	cmp	r1, r0
   15de4:	bhi	15e20 <__assert_fail@plt+0x4d80>
   15de8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15dec:	ldr	r1, [fp, #-40]	; 0xffffffd8
   15df0:	add	r0, r0, r1
   15df4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   15df8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   15dfc:	bl	10ecc <memcmp@plt>
   15e00:	cmp	r0, #0
   15e04:	bne	15e20 <__assert_fail@plt+0x4d80>
   15e08:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15e0c:	tst	r0, #1
   15e10:	beq	15e18 <__assert_fail@plt+0x4d78>
   15e14:	b	170c8 <__assert_fail@plt+0x6028>
   15e18:	movw	r0, #1
   15e1c:	strb	r0, [fp, #-65]	; 0xffffffbf
   15e20:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15e24:	ldr	r1, [fp, #-40]	; 0xffffffd8
   15e28:	ldrb	r0, [r0, r1]
   15e2c:	strb	r0, [fp, #-63]	; 0xffffffc1
   15e30:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   15e34:	mov	r1, r0
   15e38:	cmp	r0, #126	; 0x7e
   15e3c:	str	r1, [sp, #44]	; 0x2c
   15e40:	bhi	166b0 <__assert_fail@plt+0x5610>
   15e44:	add	r0, pc, #8
   15e48:	ldr	r1, [sp, #44]	; 0x2c
   15e4c:	ldr	r0, [r0, r1, lsl #2]
   15e50:	mov	pc, r0
   15e54:	andeq	r6, r1, r0, asr r0
   15e58:			; <UNDEFINED> instruction: 0x000166b0
   15e5c:			; <UNDEFINED> instruction: 0x000166b0
   15e60:			; <UNDEFINED> instruction: 0x000166b0
   15e64:			; <UNDEFINED> instruction: 0x000166b0
   15e68:			; <UNDEFINED> instruction: 0x000166b0
   15e6c:			; <UNDEFINED> instruction: 0x000166b0
   15e70:	andeq	r6, r1, r8, asr r4
   15e74:	andeq	r6, r1, r4, ror #8
   15e78:	muleq	r1, r4, r4
   15e7c:	andeq	r6, r1, ip, ror r4
   15e80:	andeq	r6, r1, r0, lsr #9
   15e84:	andeq	r6, r1, r0, ror r4
   15e88:	andeq	r6, r1, r8, lsl #9
   15e8c:			; <UNDEFINED> instruction: 0x000166b0
   15e90:			; <UNDEFINED> instruction: 0x000166b0
   15e94:			; <UNDEFINED> instruction: 0x000166b0
   15e98:			; <UNDEFINED> instruction: 0x000166b0
   15e9c:			; <UNDEFINED> instruction: 0x000166b0
   15ea0:			; <UNDEFINED> instruction: 0x000166b0
   15ea4:			; <UNDEFINED> instruction: 0x000166b0
   15ea8:			; <UNDEFINED> instruction: 0x000166b0
   15eac:			; <UNDEFINED> instruction: 0x000166b0
   15eb0:			; <UNDEFINED> instruction: 0x000166b0
   15eb4:			; <UNDEFINED> instruction: 0x000166b0
   15eb8:			; <UNDEFINED> instruction: 0x000166b0
   15ebc:			; <UNDEFINED> instruction: 0x000166b0
   15ec0:			; <UNDEFINED> instruction: 0x000166b0
   15ec4:			; <UNDEFINED> instruction: 0x000166b0
   15ec8:			; <UNDEFINED> instruction: 0x000166b0
   15ecc:			; <UNDEFINED> instruction: 0x000166b0
   15ed0:			; <UNDEFINED> instruction: 0x000166b0
   15ed4:	andeq	r6, r1, r4, lsl #11
   15ed8:	andeq	r6, r1, ip, lsl #11
   15edc:	andeq	r6, r1, ip, lsl #11
   15ee0:	andeq	r6, r1, r0, ror r5
   15ee4:	andeq	r6, r1, ip, lsl #11
   15ee8:	andeq	r6, r1, r4, lsr #13
   15eec:	andeq	r6, r1, ip, lsl #11
   15ef0:	andeq	r6, r1, ip, lsr #11
   15ef4:	andeq	r6, r1, ip, lsl #11
   15ef8:	andeq	r6, r1, ip, lsl #11
   15efc:	andeq	r6, r1, ip, lsl #11
   15f00:	andeq	r6, r1, r4, lsr #13
   15f04:	andeq	r6, r1, r4, lsr #13
   15f08:	andeq	r6, r1, r4, lsr #13
   15f0c:	andeq	r6, r1, r4, lsr #13
   15f10:	andeq	r6, r1, r4, lsr #13
   15f14:	andeq	r6, r1, r4, lsr #13
   15f18:	andeq	r6, r1, r4, lsr #13
   15f1c:	andeq	r6, r1, r4, lsr #13
   15f20:	andeq	r6, r1, r4, lsr #13
   15f24:	andeq	r6, r1, r4, lsr #13
   15f28:	andeq	r6, r1, r4, lsr #13
   15f2c:	andeq	r6, r1, r4, lsr #13
   15f30:	andeq	r6, r1, r4, lsr #13
   15f34:	andeq	r6, r1, r4, lsr #13
   15f38:	andeq	r6, r1, r4, lsr #13
   15f3c:	andeq	r6, r1, r4, lsr #13
   15f40:	andeq	r6, r1, ip, lsl #11
   15f44:	andeq	r6, r1, ip, lsl #11
   15f48:	andeq	r6, r1, ip, lsl #11
   15f4c:	andeq	r6, r1, ip, lsl #11
   15f50:	andeq	r6, r1, ip, asr r2
   15f54:			; <UNDEFINED> instruction: 0x000166b0
   15f58:	andeq	r6, r1, r4, lsr #13
   15f5c:	andeq	r6, r1, r4, lsr #13
   15f60:	andeq	r6, r1, r4, lsr #13
   15f64:	andeq	r6, r1, r4, lsr #13
   15f68:	andeq	r6, r1, r4, lsr #13
   15f6c:	andeq	r6, r1, r4, lsr #13
   15f70:	andeq	r6, r1, r4, lsr #13
   15f74:	andeq	r6, r1, r4, lsr #13
   15f78:	andeq	r6, r1, r4, lsr #13
   15f7c:	andeq	r6, r1, r4, lsr #13
   15f80:	andeq	r6, r1, r4, lsr #13
   15f84:	andeq	r6, r1, r4, lsr #13
   15f88:	andeq	r6, r1, r4, lsr #13
   15f8c:	andeq	r6, r1, r4, lsr #13
   15f90:	andeq	r6, r1, r4, lsr #13
   15f94:	andeq	r6, r1, r4, lsr #13
   15f98:	andeq	r6, r1, r4, lsr #13
   15f9c:	andeq	r6, r1, r4, lsr #13
   15fa0:	andeq	r6, r1, r4, lsr #13
   15fa4:	andeq	r6, r1, r4, lsr #13
   15fa8:	andeq	r6, r1, r4, lsr #13
   15fac:	andeq	r6, r1, r4, lsr #13
   15fb0:	andeq	r6, r1, r4, lsr #13
   15fb4:	andeq	r6, r1, r4, lsr #13
   15fb8:	andeq	r6, r1, r4, lsr #13
   15fbc:	andeq	r6, r1, r4, lsr #13
   15fc0:	andeq	r6, r1, ip, lsl #11
   15fc4:	andeq	r6, r1, ip, lsr #9
   15fc8:	andeq	r6, r1, r4, lsr #13
   15fcc:	andeq	r6, r1, ip, lsl #11
   15fd0:	andeq	r6, r1, r4, lsr #13
   15fd4:	andeq	r6, r1, ip, lsl #11
   15fd8:	andeq	r6, r1, r4, lsr #13
   15fdc:	andeq	r6, r1, r4, lsr #13
   15fe0:	andeq	r6, r1, r4, lsr #13
   15fe4:	andeq	r6, r1, r4, lsr #13
   15fe8:	andeq	r6, r1, r4, lsr #13
   15fec:	andeq	r6, r1, r4, lsr #13
   15ff0:	andeq	r6, r1, r4, lsr #13
   15ff4:	andeq	r6, r1, r4, lsr #13
   15ff8:	andeq	r6, r1, r4, lsr #13
   15ffc:	andeq	r6, r1, r4, lsr #13
   16000:	andeq	r6, r1, r4, lsr #13
   16004:	andeq	r6, r1, r4, lsr #13
   16008:	andeq	r6, r1, r4, lsr #13
   1600c:	andeq	r6, r1, r4, lsr #13
   16010:	andeq	r6, r1, r4, lsr #13
   16014:	andeq	r6, r1, r4, lsr #13
   16018:	andeq	r6, r1, r4, lsr #13
   1601c:	andeq	r6, r1, r4, lsr #13
   16020:	andeq	r6, r1, r4, lsr #13
   16024:	andeq	r6, r1, r4, lsr #13
   16028:	andeq	r6, r1, r4, lsr #13
   1602c:	andeq	r6, r1, r4, lsr #13
   16030:	andeq	r6, r1, r4, lsr #13
   16034:	andeq	r6, r1, r4, lsr #13
   16038:	andeq	r6, r1, r4, lsr #13
   1603c:	andeq	r6, r1, r4, lsr #13
   16040:	andeq	r6, r1, ip, lsr r5
   16044:	andeq	r6, r1, ip, lsl #11
   16048:	andeq	r6, r1, ip, lsr r5
   1604c:	andeq	r6, r1, r0, ror r5
   16050:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   16054:	tst	r0, #1
   16058:	beq	16240 <__assert_fail@plt+0x51a0>
   1605c:	b	16060 <__assert_fail@plt+0x4fc0>
   16060:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   16064:	tst	r0, #1
   16068:	beq	16070 <__assert_fail@plt+0x4fd0>
   1606c:	b	170c8 <__assert_fail@plt+0x6028>
   16070:	movw	r0, #1
   16074:	strb	r0, [fp, #-66]	; 0xffffffbe
   16078:	ldr	r0, [fp, #8]
   1607c:	cmp	r0, #2
   16080:	bne	16134 <__assert_fail@plt+0x5094>
   16084:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   16088:	tst	r0, #1
   1608c:	bne	16134 <__assert_fail@plt+0x5094>
   16090:	b	16094 <__assert_fail@plt+0x4ff4>
   16094:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16098:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1609c:	cmp	r0, r1
   160a0:	bcs	160b8 <__assert_fail@plt+0x5018>
   160a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   160a8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   160ac:	add	r0, r0, r1
   160b0:	movw	r1, #39	; 0x27
   160b4:	strb	r1, [r0]
   160b8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   160bc:	add	r0, r0, #1
   160c0:	str	r0, [fp, #-44]	; 0xffffffd4
   160c4:	b	160c8 <__assert_fail@plt+0x5028>
   160c8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   160cc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   160d0:	cmp	r0, r1
   160d4:	bcs	160ec <__assert_fail@plt+0x504c>
   160d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   160dc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   160e0:	add	r0, r0, r1
   160e4:	movw	r1, #36	; 0x24
   160e8:	strb	r1, [r0]
   160ec:	ldr	r0, [fp, #-44]	; 0xffffffd4
   160f0:	add	r0, r0, #1
   160f4:	str	r0, [fp, #-44]	; 0xffffffd4
   160f8:	b	160fc <__assert_fail@plt+0x505c>
   160fc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16100:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16104:	cmp	r0, r1
   16108:	bcs	16120 <__assert_fail@plt+0x5080>
   1610c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16110:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16114:	add	r0, r0, r1
   16118:	movw	r1, #39	; 0x27
   1611c:	strb	r1, [r0]
   16120:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16124:	add	r0, r0, #1
   16128:	str	r0, [fp, #-44]	; 0xffffffd4
   1612c:	movw	r0, #1
   16130:	strb	r0, [fp, #-60]	; 0xffffffc4
   16134:	b	16138 <__assert_fail@plt+0x5098>
   16138:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1613c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16140:	cmp	r0, r1
   16144:	bcs	1615c <__assert_fail@plt+0x50bc>
   16148:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1614c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16150:	add	r0, r0, r1
   16154:	movw	r1, #92	; 0x5c
   16158:	strb	r1, [r0]
   1615c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16160:	add	r0, r0, #1
   16164:	str	r0, [fp, #-44]	; 0xffffffd4
   16168:	b	1616c <__assert_fail@plt+0x50cc>
   1616c:	ldr	r0, [fp, #8]
   16170:	cmp	r0, #2
   16174:	beq	16234 <__assert_fail@plt+0x5194>
   16178:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1617c:	add	r0, r0, #1
   16180:	ldr	r1, [fp, #-36]	; 0xffffffdc
   16184:	cmp	r0, r1
   16188:	bcs	16234 <__assert_fail@plt+0x5194>
   1618c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16190:	ldr	r1, [fp, #-40]	; 0xffffffd8
   16194:	add	r1, r1, #1
   16198:	add	r0, r0, r1
   1619c:	ldrb	r0, [r0]
   161a0:	movw	r1, #48	; 0x30
   161a4:	cmp	r1, r0
   161a8:	bgt	16234 <__assert_fail@plt+0x5194>
   161ac:	ldr	r0, [fp, #-32]	; 0xffffffe0
   161b0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   161b4:	add	r1, r1, #1
   161b8:	add	r0, r0, r1
   161bc:	ldrb	r0, [r0]
   161c0:	cmp	r0, #57	; 0x39
   161c4:	bgt	16234 <__assert_fail@plt+0x5194>
   161c8:	b	161cc <__assert_fail@plt+0x512c>
   161cc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   161d0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   161d4:	cmp	r0, r1
   161d8:	bcs	161f0 <__assert_fail@plt+0x5150>
   161dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   161e0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   161e4:	add	r0, r0, r1
   161e8:	movw	r1, #48	; 0x30
   161ec:	strb	r1, [r0]
   161f0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   161f4:	add	r0, r0, #1
   161f8:	str	r0, [fp, #-44]	; 0xffffffd4
   161fc:	b	16200 <__assert_fail@plt+0x5160>
   16200:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16204:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16208:	cmp	r0, r1
   1620c:	bcs	16224 <__assert_fail@plt+0x5184>
   16210:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16214:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16218:	add	r0, r0, r1
   1621c:	movw	r1, #48	; 0x30
   16220:	strb	r1, [r0]
   16224:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16228:	add	r0, r0, #1
   1622c:	str	r0, [fp, #-44]	; 0xffffffd4
   16230:	b	16234 <__assert_fail@plt+0x5194>
   16234:	movw	r0, #48	; 0x30
   16238:	strb	r0, [fp, #-63]	; 0xffffffc1
   1623c:	b	16258 <__assert_fail@plt+0x51b8>
   16240:	ldr	r0, [fp, #12]
   16244:	and	r0, r0, #1
   16248:	cmp	r0, #0
   1624c:	beq	16254 <__assert_fail@plt+0x51b4>
   16250:	b	16f38 <__assert_fail@plt+0x5e98>
   16254:	b	16258 <__assert_fail@plt+0x51b8>
   16258:	b	16cd4 <__assert_fail@plt+0x5c34>
   1625c:	ldr	r0, [fp, #8]
   16260:	cmp	r0, #2
   16264:	str	r0, [sp, #40]	; 0x28
   16268:	beq	16280 <__assert_fail@plt+0x51e0>
   1626c:	b	16270 <__assert_fail@plt+0x51d0>
   16270:	ldr	r0, [sp, #40]	; 0x28
   16274:	cmp	r0, #5
   16278:	beq	16294 <__assert_fail@plt+0x51f4>
   1627c:	b	16450 <__assert_fail@plt+0x53b0>
   16280:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   16284:	tst	r0, #1
   16288:	beq	16290 <__assert_fail@plt+0x51f0>
   1628c:	b	170c8 <__assert_fail@plt+0x6028>
   16290:	b	16454 <__assert_fail@plt+0x53b4>
   16294:	ldr	r0, [fp, #12]
   16298:	and	r0, r0, #4
   1629c:	cmp	r0, #0
   162a0:	beq	1644c <__assert_fail@plt+0x53ac>
   162a4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   162a8:	add	r0, r0, #2
   162ac:	ldr	r1, [fp, #-36]	; 0xffffffdc
   162b0:	cmp	r0, r1
   162b4:	bcs	1644c <__assert_fail@plt+0x53ac>
   162b8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   162bc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   162c0:	add	r1, r1, #1
   162c4:	add	r0, r0, r1
   162c8:	ldrb	r0, [r0]
   162cc:	cmp	r0, #63	; 0x3f
   162d0:	bne	1644c <__assert_fail@plt+0x53ac>
   162d4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   162d8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   162dc:	add	r0, r0, r1
   162e0:	ldrb	r0, [r0, #2]
   162e4:	mov	r1, r0
   162e8:	cmp	r0, #33	; 0x21
   162ec:	str	r1, [sp, #36]	; 0x24
   162f0:	beq	16340 <__assert_fail@plt+0x52a0>
   162f4:	b	162f8 <__assert_fail@plt+0x5258>
   162f8:	ldr	r0, [sp, #36]	; 0x24
   162fc:	sub	r1, r0, #39	; 0x27
   16300:	cmp	r1, #3
   16304:	bcc	16340 <__assert_fail@plt+0x52a0>
   16308:	b	1630c <__assert_fail@plt+0x526c>
   1630c:	ldr	r0, [sp, #36]	; 0x24
   16310:	cmp	r0, #45	; 0x2d
   16314:	beq	16340 <__assert_fail@plt+0x52a0>
   16318:	b	1631c <__assert_fail@plt+0x527c>
   1631c:	ldr	r0, [sp, #36]	; 0x24
   16320:	cmp	r0, #47	; 0x2f
   16324:	beq	16340 <__assert_fail@plt+0x52a0>
   16328:	b	1632c <__assert_fail@plt+0x528c>
   1632c:	ldr	r0, [sp, #36]	; 0x24
   16330:	sub	r1, r0, #60	; 0x3c
   16334:	cmp	r1, #2
   16338:	bhi	16444 <__assert_fail@plt+0x53a4>
   1633c:	b	16340 <__assert_fail@plt+0x52a0>
   16340:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   16344:	tst	r0, #1
   16348:	beq	16350 <__assert_fail@plt+0x52b0>
   1634c:	b	170c8 <__assert_fail@plt+0x6028>
   16350:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16354:	ldr	r1, [fp, #-40]	; 0xffffffd8
   16358:	add	r1, r1, #2
   1635c:	add	r0, r0, r1
   16360:	ldrb	r0, [r0]
   16364:	strb	r0, [fp, #-63]	; 0xffffffc1
   16368:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1636c:	add	r0, r0, #2
   16370:	str	r0, [fp, #-40]	; 0xffffffd8
   16374:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16378:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1637c:	cmp	r0, r1
   16380:	bcs	16398 <__assert_fail@plt+0x52f8>
   16384:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16388:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1638c:	add	r0, r0, r1
   16390:	movw	r1, #63	; 0x3f
   16394:	strb	r1, [r0]
   16398:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1639c:	add	r0, r0, #1
   163a0:	str	r0, [fp, #-44]	; 0xffffffd4
   163a4:	b	163a8 <__assert_fail@plt+0x5308>
   163a8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   163ac:	ldr	r1, [fp, #-28]	; 0xffffffe4
   163b0:	cmp	r0, r1
   163b4:	bcs	163cc <__assert_fail@plt+0x532c>
   163b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   163bc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   163c0:	add	r0, r0, r1
   163c4:	movw	r1, #34	; 0x22
   163c8:	strb	r1, [r0]
   163cc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   163d0:	add	r0, r0, #1
   163d4:	str	r0, [fp, #-44]	; 0xffffffd4
   163d8:	b	163dc <__assert_fail@plt+0x533c>
   163dc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   163e0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   163e4:	cmp	r0, r1
   163e8:	bcs	16400 <__assert_fail@plt+0x5360>
   163ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   163f0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   163f4:	add	r0, r0, r1
   163f8:	movw	r1, #34	; 0x22
   163fc:	strb	r1, [r0]
   16400:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16404:	add	r0, r0, #1
   16408:	str	r0, [fp, #-44]	; 0xffffffd4
   1640c:	b	16410 <__assert_fail@plt+0x5370>
   16410:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16414:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16418:	cmp	r0, r1
   1641c:	bcs	16434 <__assert_fail@plt+0x5394>
   16420:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16424:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16428:	add	r0, r0, r1
   1642c:	movw	r1, #63	; 0x3f
   16430:	strb	r1, [r0]
   16434:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16438:	add	r0, r0, #1
   1643c:	str	r0, [fp, #-44]	; 0xffffffd4
   16440:	b	16448 <__assert_fail@plt+0x53a8>
   16444:	b	16448 <__assert_fail@plt+0x53a8>
   16448:	b	1644c <__assert_fail@plt+0x53ac>
   1644c:	b	16454 <__assert_fail@plt+0x53b4>
   16450:	b	16454 <__assert_fail@plt+0x53b4>
   16454:	b	16cd4 <__assert_fail@plt+0x5c34>
   16458:	movw	r0, #97	; 0x61
   1645c:	strb	r0, [fp, #-64]	; 0xffffffc0
   16460:	b	16520 <__assert_fail@plt+0x5480>
   16464:	movw	r0, #98	; 0x62
   16468:	strb	r0, [fp, #-64]	; 0xffffffc0
   1646c:	b	16520 <__assert_fail@plt+0x5480>
   16470:	movw	r0, #102	; 0x66
   16474:	strb	r0, [fp, #-64]	; 0xffffffc0
   16478:	b	16520 <__assert_fail@plt+0x5480>
   1647c:	movw	r0, #110	; 0x6e
   16480:	strb	r0, [fp, #-64]	; 0xffffffc0
   16484:	b	16500 <__assert_fail@plt+0x5460>
   16488:	movw	r0, #114	; 0x72
   1648c:	strb	r0, [fp, #-64]	; 0xffffffc0
   16490:	b	16500 <__assert_fail@plt+0x5460>
   16494:	movw	r0, #116	; 0x74
   16498:	strb	r0, [fp, #-64]	; 0xffffffc0
   1649c:	b	16500 <__assert_fail@plt+0x5460>
   164a0:	movw	r0, #118	; 0x76
   164a4:	strb	r0, [fp, #-64]	; 0xffffffc0
   164a8:	b	16520 <__assert_fail@plt+0x5480>
   164ac:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   164b0:	strb	r0, [fp, #-64]	; 0xffffffc0
   164b4:	ldr	r0, [fp, #8]
   164b8:	cmp	r0, #2
   164bc:	bne	164d4 <__assert_fail@plt+0x5434>
   164c0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   164c4:	tst	r0, #1
   164c8:	beq	164d0 <__assert_fail@plt+0x5430>
   164cc:	b	170c8 <__assert_fail@plt+0x6028>
   164d0:	b	16e5c <__assert_fail@plt+0x5dbc>
   164d4:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   164d8:	tst	r0, #1
   164dc:	beq	164fc <__assert_fail@plt+0x545c>
   164e0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   164e4:	tst	r0, #1
   164e8:	beq	164fc <__assert_fail@plt+0x545c>
   164ec:	ldr	r0, [fp, #-56]	; 0xffffffc8
   164f0:	cmp	r0, #0
   164f4:	beq	164fc <__assert_fail@plt+0x545c>
   164f8:	b	16e5c <__assert_fail@plt+0x5dbc>
   164fc:	b	16500 <__assert_fail@plt+0x5460>
   16500:	ldr	r0, [fp, #8]
   16504:	cmp	r0, #2
   16508:	bne	1651c <__assert_fail@plt+0x547c>
   1650c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   16510:	tst	r0, #1
   16514:	beq	1651c <__assert_fail@plt+0x547c>
   16518:	b	170c8 <__assert_fail@plt+0x6028>
   1651c:	b	16520 <__assert_fail@plt+0x5480>
   16520:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   16524:	tst	r0, #1
   16528:	beq	16538 <__assert_fail@plt+0x5498>
   1652c:	ldrb	r0, [fp, #-64]	; 0xffffffc0
   16530:	strb	r0, [fp, #-63]	; 0xffffffc1
   16534:	b	16d48 <__assert_fail@plt+0x5ca8>
   16538:	b	16cd4 <__assert_fail@plt+0x5c34>
   1653c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   16540:	cmn	r0, #1
   16544:	bne	1655c <__assert_fail@plt+0x54bc>
   16548:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1654c:	ldrb	r0, [r0, #1]
   16550:	cmp	r0, #0
   16554:	beq	1656c <__assert_fail@plt+0x54cc>
   16558:	b	16568 <__assert_fail@plt+0x54c8>
   1655c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   16560:	cmp	r0, #1
   16564:	beq	1656c <__assert_fail@plt+0x54cc>
   16568:	b	16cd4 <__assert_fail@plt+0x5c34>
   1656c:	b	16570 <__assert_fail@plt+0x54d0>
   16570:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16574:	cmp	r0, #0
   16578:	beq	16580 <__assert_fail@plt+0x54e0>
   1657c:	b	16cd4 <__assert_fail@plt+0x5c34>
   16580:	b	16584 <__assert_fail@plt+0x54e4>
   16584:	movw	r0, #1
   16588:	strb	r0, [fp, #-67]	; 0xffffffbd
   1658c:	ldr	r0, [fp, #8]
   16590:	cmp	r0, #2
   16594:	bne	165a8 <__assert_fail@plt+0x5508>
   16598:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1659c:	tst	r0, #1
   165a0:	beq	165a8 <__assert_fail@plt+0x5508>
   165a4:	b	170c8 <__assert_fail@plt+0x6028>
   165a8:	b	16cd4 <__assert_fail@plt+0x5c34>
   165ac:	movw	r0, #1
   165b0:	strb	r0, [fp, #-61]	; 0xffffffc3
   165b4:	strb	r0, [fp, #-67]	; 0xffffffbd
   165b8:	ldr	r0, [fp, #8]
   165bc:	cmp	r0, #2
   165c0:	bne	166a0 <__assert_fail@plt+0x5600>
   165c4:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   165c8:	tst	r0, #1
   165cc:	beq	165d4 <__assert_fail@plt+0x5534>
   165d0:	b	170c8 <__assert_fail@plt+0x6028>
   165d4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   165d8:	cmp	r0, #0
   165dc:	beq	165fc <__assert_fail@plt+0x555c>
   165e0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   165e4:	cmp	r0, #0
   165e8:	bne	165fc <__assert_fail@plt+0x555c>
   165ec:	ldr	r0, [fp, #-28]	; 0xffffffe4
   165f0:	str	r0, [fp, #-48]	; 0xffffffd0
   165f4:	movw	r0, #0
   165f8:	str	r0, [fp, #-28]	; 0xffffffe4
   165fc:	b	16600 <__assert_fail@plt+0x5560>
   16600:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16604:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16608:	cmp	r0, r1
   1660c:	bcs	16624 <__assert_fail@plt+0x5584>
   16610:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16614:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16618:	add	r0, r0, r1
   1661c:	movw	r1, #39	; 0x27
   16620:	strb	r1, [r0]
   16624:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16628:	add	r0, r0, #1
   1662c:	str	r0, [fp, #-44]	; 0xffffffd4
   16630:	b	16634 <__assert_fail@plt+0x5594>
   16634:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16638:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1663c:	cmp	r0, r1
   16640:	bcs	16658 <__assert_fail@plt+0x55b8>
   16644:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16648:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1664c:	add	r0, r0, r1
   16650:	movw	r1, #92	; 0x5c
   16654:	strb	r1, [r0]
   16658:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1665c:	add	r0, r0, #1
   16660:	str	r0, [fp, #-44]	; 0xffffffd4
   16664:	b	16668 <__assert_fail@plt+0x55c8>
   16668:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1666c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16670:	cmp	r0, r1
   16674:	bcs	1668c <__assert_fail@plt+0x55ec>
   16678:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1667c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16680:	add	r0, r0, r1
   16684:	movw	r1, #39	; 0x27
   16688:	strb	r1, [r0]
   1668c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16690:	add	r0, r0, #1
   16694:	str	r0, [fp, #-44]	; 0xffffffd4
   16698:	movw	r0, #0
   1669c:	strb	r0, [fp, #-60]	; 0xffffffc4
   166a0:	b	16cd4 <__assert_fail@plt+0x5c34>
   166a4:	movw	r0, #1
   166a8:	strb	r0, [fp, #-67]	; 0xffffffbd
   166ac:	b	16cd4 <__assert_fail@plt+0x5c34>
   166b0:	ldrb	r0, [fp, #-58]	; 0xffffffc6
   166b4:	tst	r0, #1
   166b8:	beq	166fc <__assert_fail@plt+0x565c>
   166bc:	mov	r0, #1
   166c0:	str	r0, [fp, #-72]	; 0xffffffb8
   166c4:	bl	10f8c <__ctype_b_loc@plt>
   166c8:	ldr	r0, [r0]
   166cc:	ldrb	lr, [fp, #-63]	; 0xffffffc1
   166d0:	mov	r1, lr
   166d4:	add	r0, r0, lr, lsl #1
   166d8:	ldrh	r0, [r0]
   166dc:	and	r0, r0, #16384	; 0x4000
   166e0:	cmp	r0, #0
   166e4:	movw	r0, #0
   166e8:	movne	r0, #1
   166ec:	and	r0, r0, #1
   166f0:	strb	r0, [fp, #-73]	; 0xffffffb7
   166f4:	str	r1, [sp, #32]
   166f8:	b	16988 <__assert_fail@plt+0x58e8>
   166fc:	sub	r0, fp, #84	; 0x54
   16700:	movw	r1, #0
   16704:	and	r1, r1, #255	; 0xff
   16708:	movw	r2, #8
   1670c:	bl	10fec <memset@plt>
   16710:	movw	r0, #0
   16714:	str	r0, [fp, #-72]	; 0xffffffb8
   16718:	movw	r0, #1
   1671c:	strb	r0, [fp, #-73]	; 0xffffffb7
   16720:	ldr	r0, [fp, #-36]	; 0xffffffdc
   16724:	cmn	r0, #1
   16728:	bne	16738 <__assert_fail@plt+0x5698>
   1672c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16730:	bl	10fb0 <strlen@plt>
   16734:	str	r0, [fp, #-36]	; 0xffffffdc
   16738:	b	1673c <__assert_fail@plt+0x569c>
   1673c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16740:	ldr	r1, [fp, #-40]	; 0xffffffd8
   16744:	ldr	r2, [fp, #-72]	; 0xffffffb8
   16748:	add	r1, r1, r2
   1674c:	add	r1, r0, r1
   16750:	ldr	r0, [fp, #-36]	; 0xffffffdc
   16754:	ldr	r2, [fp, #-40]	; 0xffffffd8
   16758:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1675c:	add	r2, r2, r3
   16760:	sub	r2, r0, r2
   16764:	sub	r0, fp, #88	; 0x58
   16768:	sub	r3, fp, #84	; 0x54
   1676c:	bl	1df80 <__assert_fail@plt+0xcee0>
   16770:	str	r0, [sp, #92]	; 0x5c
   16774:	ldr	r0, [sp, #92]	; 0x5c
   16778:	cmp	r0, #0
   1677c:	bne	16784 <__assert_fail@plt+0x56e4>
   16780:	b	16984 <__assert_fail@plt+0x58e4>
   16784:	ldr	r0, [sp, #92]	; 0x5c
   16788:	cmn	r0, #1
   1678c:	bne	1679c <__assert_fail@plt+0x56fc>
   16790:	movw	r0, #0
   16794:	strb	r0, [fp, #-73]	; 0xffffffb7
   16798:	b	16984 <__assert_fail@plt+0x58e4>
   1679c:	ldr	r0, [sp, #92]	; 0x5c
   167a0:	cmn	r0, #2
   167a4:	bne	16818 <__assert_fail@plt+0x5778>
   167a8:	movw	r0, #0
   167ac:	strb	r0, [fp, #-73]	; 0xffffffb7
   167b0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   167b4:	ldr	r1, [fp, #-72]	; 0xffffffb8
   167b8:	add	r0, r0, r1
   167bc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   167c0:	cmp	r0, r1
   167c4:	movw	r0, #0
   167c8:	str	r0, [sp, #28]
   167cc:	bcs	167f8 <__assert_fail@plt+0x5758>
   167d0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   167d4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   167d8:	ldr	r2, [fp, #-72]	; 0xffffffb8
   167dc:	add	r1, r1, r2
   167e0:	add	r0, r0, r1
   167e4:	ldrb	r0, [r0]
   167e8:	cmp	r0, #0
   167ec:	movw	r0, #0
   167f0:	movne	r0, #1
   167f4:	str	r0, [sp, #28]
   167f8:	ldr	r0, [sp, #28]
   167fc:	tst	r0, #1
   16800:	beq	16814 <__assert_fail@plt+0x5774>
   16804:	ldr	r0, [fp, #-72]	; 0xffffffb8
   16808:	add	r0, r0, #1
   1680c:	str	r0, [fp, #-72]	; 0xffffffb8
   16810:	b	167b0 <__assert_fail@plt+0x5710>
   16814:	b	16984 <__assert_fail@plt+0x58e4>
   16818:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1681c:	tst	r0, #1
   16820:	beq	1692c <__assert_fail@plt+0x588c>
   16824:	ldr	r0, [fp, #8]
   16828:	cmp	r0, #2
   1682c:	bne	1692c <__assert_fail@plt+0x588c>
   16830:	movw	r0, #1
   16834:	str	r0, [sp, #88]	; 0x58
   16838:	ldr	r0, [sp, #88]	; 0x58
   1683c:	ldr	r1, [sp, #92]	; 0x5c
   16840:	cmp	r0, r1
   16844:	bcs	16928 <__assert_fail@plt+0x5888>
   16848:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1684c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   16850:	ldr	r2, [fp, #-72]	; 0xffffffb8
   16854:	add	r1, r1, r2
   16858:	ldr	r2, [sp, #88]	; 0x58
   1685c:	add	r1, r1, r2
   16860:	ldrb	r0, [r0, r1]
   16864:	sub	r0, r0, #91	; 0x5b
   16868:	cmp	r0, #33	; 0x21
   1686c:	str	r0, [sp, #24]
   16870:	bhi	16910 <__assert_fail@plt+0x5870>
   16874:	add	r0, pc, #8
   16878:	ldr	r1, [sp, #24]
   1687c:	ldr	r0, [r0, r1, lsl #2]
   16880:	mov	pc, r0
   16884:	andeq	r6, r1, ip, lsl #18
   16888:	andeq	r6, r1, ip, lsl #18
   1688c:	andeq	r6, r1, r0, lsl r9
   16890:	andeq	r6, r1, ip, lsl #18
   16894:	andeq	r6, r1, r0, lsl r9
   16898:	andeq	r6, r1, ip, lsl #18
   1689c:	andeq	r6, r1, r0, lsl r9
   168a0:	andeq	r6, r1, r0, lsl r9
   168a4:	andeq	r6, r1, r0, lsl r9
   168a8:	andeq	r6, r1, r0, lsl r9
   168ac:	andeq	r6, r1, r0, lsl r9
   168b0:	andeq	r6, r1, r0, lsl r9
   168b4:	andeq	r6, r1, r0, lsl r9
   168b8:	andeq	r6, r1, r0, lsl r9
   168bc:	andeq	r6, r1, r0, lsl r9
   168c0:	andeq	r6, r1, r0, lsl r9
   168c4:	andeq	r6, r1, r0, lsl r9
   168c8:	andeq	r6, r1, r0, lsl r9
   168cc:	andeq	r6, r1, r0, lsl r9
   168d0:	andeq	r6, r1, r0, lsl r9
   168d4:	andeq	r6, r1, r0, lsl r9
   168d8:	andeq	r6, r1, r0, lsl r9
   168dc:	andeq	r6, r1, r0, lsl r9
   168e0:	andeq	r6, r1, r0, lsl r9
   168e4:	andeq	r6, r1, r0, lsl r9
   168e8:	andeq	r6, r1, r0, lsl r9
   168ec:	andeq	r6, r1, r0, lsl r9
   168f0:	andeq	r6, r1, r0, lsl r9
   168f4:	andeq	r6, r1, r0, lsl r9
   168f8:	andeq	r6, r1, r0, lsl r9
   168fc:	andeq	r6, r1, r0, lsl r9
   16900:	andeq	r6, r1, r0, lsl r9
   16904:	andeq	r6, r1, r0, lsl r9
   16908:	andeq	r6, r1, ip, lsl #18
   1690c:	b	170c8 <__assert_fail@plt+0x6028>
   16910:	b	16914 <__assert_fail@plt+0x5874>
   16914:	b	16918 <__assert_fail@plt+0x5878>
   16918:	ldr	r0, [sp, #88]	; 0x58
   1691c:	add	r0, r0, #1
   16920:	str	r0, [sp, #88]	; 0x58
   16924:	b	16838 <__assert_fail@plt+0x5798>
   16928:	b	1692c <__assert_fail@plt+0x588c>
   1692c:	ldr	r0, [fp, #-88]	; 0xffffffa8
   16930:	bl	10efc <iswprint@plt>
   16934:	cmp	r0, #0
   16938:	bne	16944 <__assert_fail@plt+0x58a4>
   1693c:	movw	r0, #0
   16940:	strb	r0, [fp, #-73]	; 0xffffffb7
   16944:	ldr	r0, [sp, #92]	; 0x5c
   16948:	ldr	r1, [fp, #-72]	; 0xffffffb8
   1694c:	add	r0, r1, r0
   16950:	str	r0, [fp, #-72]	; 0xffffffb8
   16954:	b	16958 <__assert_fail@plt+0x58b8>
   16958:	b	1695c <__assert_fail@plt+0x58bc>
   1695c:	b	16960 <__assert_fail@plt+0x58c0>
   16960:	sub	r0, fp, #84	; 0x54
   16964:	bl	10eb4 <mbsinit@plt>
   16968:	cmp	r0, #0
   1696c:	movw	r0, #0
   16970:	movne	r0, #1
   16974:	mvn	lr, #0
   16978:	eor	r0, r0, lr
   1697c:	tst	r0, #1
   16980:	bne	1673c <__assert_fail@plt+0x569c>
   16984:	b	16988 <__assert_fail@plt+0x58e8>
   16988:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   1698c:	and	r0, r0, #1
   16990:	strb	r0, [fp, #-67]	; 0xffffffbd
   16994:	ldr	r0, [fp, #-72]	; 0xffffffb8
   16998:	movw	r1, #1
   1699c:	cmp	r1, r0
   169a0:	bcc	169bc <__assert_fail@plt+0x591c>
   169a4:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   169a8:	tst	r0, #1
   169ac:	beq	16cd0 <__assert_fail@plt+0x5c30>
   169b0:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   169b4:	tst	r0, #1
   169b8:	bne	16cd0 <__assert_fail@plt+0x5c30>
   169bc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   169c0:	ldr	r1, [fp, #-72]	; 0xffffffb8
   169c4:	add	r0, r0, r1
   169c8:	str	r0, [sp, #84]	; 0x54
   169cc:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   169d0:	tst	r0, #1
   169d4:	beq	16b84 <__assert_fail@plt+0x5ae4>
   169d8:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   169dc:	tst	r0, #1
   169e0:	bne	16b84 <__assert_fail@plt+0x5ae4>
   169e4:	b	169e8 <__assert_fail@plt+0x5948>
   169e8:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   169ec:	tst	r0, #1
   169f0:	beq	169f8 <__assert_fail@plt+0x5958>
   169f4:	b	170c8 <__assert_fail@plt+0x6028>
   169f8:	movw	r0, #1
   169fc:	strb	r0, [fp, #-66]	; 0xffffffbe
   16a00:	ldr	r0, [fp, #8]
   16a04:	cmp	r0, #2
   16a08:	bne	16abc <__assert_fail@plt+0x5a1c>
   16a0c:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   16a10:	tst	r0, #1
   16a14:	bne	16abc <__assert_fail@plt+0x5a1c>
   16a18:	b	16a1c <__assert_fail@plt+0x597c>
   16a1c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16a20:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16a24:	cmp	r0, r1
   16a28:	bcs	16a40 <__assert_fail@plt+0x59a0>
   16a2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16a30:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16a34:	add	r0, r0, r1
   16a38:	movw	r1, #39	; 0x27
   16a3c:	strb	r1, [r0]
   16a40:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16a44:	add	r0, r0, #1
   16a48:	str	r0, [fp, #-44]	; 0xffffffd4
   16a4c:	b	16a50 <__assert_fail@plt+0x59b0>
   16a50:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16a54:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16a58:	cmp	r0, r1
   16a5c:	bcs	16a74 <__assert_fail@plt+0x59d4>
   16a60:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16a64:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16a68:	add	r0, r0, r1
   16a6c:	movw	r1, #36	; 0x24
   16a70:	strb	r1, [r0]
   16a74:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16a78:	add	r0, r0, #1
   16a7c:	str	r0, [fp, #-44]	; 0xffffffd4
   16a80:	b	16a84 <__assert_fail@plt+0x59e4>
   16a84:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16a88:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16a8c:	cmp	r0, r1
   16a90:	bcs	16aa8 <__assert_fail@plt+0x5a08>
   16a94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16a98:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16a9c:	add	r0, r0, r1
   16aa0:	movw	r1, #39	; 0x27
   16aa4:	strb	r1, [r0]
   16aa8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16aac:	add	r0, r0, #1
   16ab0:	str	r0, [fp, #-44]	; 0xffffffd4
   16ab4:	movw	r0, #1
   16ab8:	strb	r0, [fp, #-60]	; 0xffffffc4
   16abc:	b	16ac0 <__assert_fail@plt+0x5a20>
   16ac0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16ac4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16ac8:	cmp	r0, r1
   16acc:	bcs	16ae4 <__assert_fail@plt+0x5a44>
   16ad0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16ad4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16ad8:	add	r0, r0, r1
   16adc:	movw	r1, #92	; 0x5c
   16ae0:	strb	r1, [r0]
   16ae4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16ae8:	add	r0, r0, #1
   16aec:	str	r0, [fp, #-44]	; 0xffffffd4
   16af0:	b	16af4 <__assert_fail@plt+0x5a54>
   16af4:	b	16af8 <__assert_fail@plt+0x5a58>
   16af8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16afc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16b00:	cmp	r0, r1
   16b04:	bcs	16b24 <__assert_fail@plt+0x5a84>
   16b08:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   16b0c:	asr	r0, r0, #6
   16b10:	add	r0, r0, #48	; 0x30
   16b14:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16b18:	ldr	r2, [fp, #-44]	; 0xffffffd4
   16b1c:	add	r1, r1, r2
   16b20:	strb	r0, [r1]
   16b24:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16b28:	add	r0, r0, #1
   16b2c:	str	r0, [fp, #-44]	; 0xffffffd4
   16b30:	b	16b34 <__assert_fail@plt+0x5a94>
   16b34:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16b38:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16b3c:	cmp	r0, r1
   16b40:	bcs	16b64 <__assert_fail@plt+0x5ac4>
   16b44:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   16b48:	asr	r0, r0, #3
   16b4c:	and	r0, r0, #7
   16b50:	add	r0, r0, #48	; 0x30
   16b54:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16b58:	ldr	r2, [fp, #-44]	; 0xffffffd4
   16b5c:	add	r1, r1, r2
   16b60:	strb	r0, [r1]
   16b64:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16b68:	add	r0, r0, #1
   16b6c:	str	r0, [fp, #-44]	; 0xffffffd4
   16b70:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   16b74:	and	r0, r0, #7
   16b78:	add	r0, r0, #48	; 0x30
   16b7c:	strb	r0, [fp, #-63]	; 0xffffffc1
   16b80:	b	16bd0 <__assert_fail@plt+0x5b30>
   16b84:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   16b88:	tst	r0, #1
   16b8c:	beq	16bcc <__assert_fail@plt+0x5b2c>
   16b90:	b	16b94 <__assert_fail@plt+0x5af4>
   16b94:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16b98:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16b9c:	cmp	r0, r1
   16ba0:	bcs	16bb8 <__assert_fail@plt+0x5b18>
   16ba4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16ba8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16bac:	add	r0, r0, r1
   16bb0:	movw	r1, #92	; 0x5c
   16bb4:	strb	r1, [r0]
   16bb8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16bbc:	add	r0, r0, #1
   16bc0:	str	r0, [fp, #-44]	; 0xffffffd4
   16bc4:	movw	r0, #0
   16bc8:	strb	r0, [fp, #-65]	; 0xffffffbf
   16bcc:	b	16bd0 <__assert_fail@plt+0x5b30>
   16bd0:	ldr	r0, [sp, #84]	; 0x54
   16bd4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   16bd8:	add	r1, r1, #1
   16bdc:	cmp	r0, r1
   16be0:	bhi	16be8 <__assert_fail@plt+0x5b48>
   16be4:	b	16ccc <__assert_fail@plt+0x5c2c>
   16be8:	b	16bec <__assert_fail@plt+0x5b4c>
   16bec:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   16bf0:	tst	r0, #1
   16bf4:	beq	16c74 <__assert_fail@plt+0x5bd4>
   16bf8:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   16bfc:	tst	r0, #1
   16c00:	bne	16c74 <__assert_fail@plt+0x5bd4>
   16c04:	b	16c08 <__assert_fail@plt+0x5b68>
   16c08:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16c0c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16c10:	cmp	r0, r1
   16c14:	bcs	16c2c <__assert_fail@plt+0x5b8c>
   16c18:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16c1c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16c20:	add	r0, r0, r1
   16c24:	movw	r1, #39	; 0x27
   16c28:	strb	r1, [r0]
   16c2c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16c30:	add	r0, r0, #1
   16c34:	str	r0, [fp, #-44]	; 0xffffffd4
   16c38:	b	16c3c <__assert_fail@plt+0x5b9c>
   16c3c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16c40:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16c44:	cmp	r0, r1
   16c48:	bcs	16c60 <__assert_fail@plt+0x5bc0>
   16c4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16c50:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16c54:	add	r0, r0, r1
   16c58:	movw	r1, #39	; 0x27
   16c5c:	strb	r1, [r0]
   16c60:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16c64:	add	r0, r0, #1
   16c68:	str	r0, [fp, #-44]	; 0xffffffd4
   16c6c:	movw	r0, #0
   16c70:	strb	r0, [fp, #-60]	; 0xffffffc4
   16c74:	b	16c78 <__assert_fail@plt+0x5bd8>
   16c78:	b	16c7c <__assert_fail@plt+0x5bdc>
   16c7c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16c80:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16c84:	cmp	r0, r1
   16c88:	bcs	16ca0 <__assert_fail@plt+0x5c00>
   16c8c:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   16c90:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16c94:	ldr	r2, [fp, #-44]	; 0xffffffd4
   16c98:	add	r1, r1, r2
   16c9c:	strb	r0, [r1]
   16ca0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16ca4:	add	r0, r0, #1
   16ca8:	str	r0, [fp, #-44]	; 0xffffffd4
   16cac:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16cb0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   16cb4:	add	r1, r1, #1
   16cb8:	str	r1, [fp, #-40]	; 0xffffffd8
   16cbc:	add	r0, r0, r1
   16cc0:	ldrb	r0, [r0]
   16cc4:	strb	r0, [fp, #-63]	; 0xffffffc1
   16cc8:	b	169cc <__assert_fail@plt+0x592c>
   16ccc:	b	16e5c <__assert_fail@plt+0x5dbc>
   16cd0:	b	16cd4 <__assert_fail@plt+0x5c34>
   16cd4:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   16cd8:	tst	r0, #1
   16cdc:	beq	16cec <__assert_fail@plt+0x5c4c>
   16ce0:	ldr	r0, [fp, #8]
   16ce4:	cmp	r0, #2
   16ce8:	bne	16cf8 <__assert_fail@plt+0x5c58>
   16cec:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   16cf0:	tst	r0, #1
   16cf4:	beq	16d34 <__assert_fail@plt+0x5c94>
   16cf8:	ldr	r0, [fp, #16]
   16cfc:	movw	r1, #0
   16d00:	cmp	r0, r1
   16d04:	beq	16d34 <__assert_fail@plt+0x5c94>
   16d08:	ldr	r0, [fp, #16]
   16d0c:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   16d10:	lsr	r1, r1, #5
   16d14:	add	r0, r0, r1, lsl #2
   16d18:	ldr	r0, [r0]
   16d1c:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   16d20:	and	r1, r1, #31
   16d24:	lsr	r0, r0, r1
   16d28:	and	r0, r0, #1
   16d2c:	cmp	r0, #0
   16d30:	bne	16d44 <__assert_fail@plt+0x5ca4>
   16d34:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   16d38:	tst	r0, #1
   16d3c:	bne	16d44 <__assert_fail@plt+0x5ca4>
   16d40:	b	16e5c <__assert_fail@plt+0x5dbc>
   16d44:	b	16d48 <__assert_fail@plt+0x5ca8>
   16d48:	b	16d4c <__assert_fail@plt+0x5cac>
   16d4c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   16d50:	tst	r0, #1
   16d54:	beq	16d5c <__assert_fail@plt+0x5cbc>
   16d58:	b	170c8 <__assert_fail@plt+0x6028>
   16d5c:	movw	r0, #1
   16d60:	strb	r0, [fp, #-66]	; 0xffffffbe
   16d64:	ldr	r0, [fp, #8]
   16d68:	cmp	r0, #2
   16d6c:	bne	16e20 <__assert_fail@plt+0x5d80>
   16d70:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   16d74:	tst	r0, #1
   16d78:	bne	16e20 <__assert_fail@plt+0x5d80>
   16d7c:	b	16d80 <__assert_fail@plt+0x5ce0>
   16d80:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16d84:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16d88:	cmp	r0, r1
   16d8c:	bcs	16da4 <__assert_fail@plt+0x5d04>
   16d90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16d94:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16d98:	add	r0, r0, r1
   16d9c:	movw	r1, #39	; 0x27
   16da0:	strb	r1, [r0]
   16da4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16da8:	add	r0, r0, #1
   16dac:	str	r0, [fp, #-44]	; 0xffffffd4
   16db0:	b	16db4 <__assert_fail@plt+0x5d14>
   16db4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16db8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16dbc:	cmp	r0, r1
   16dc0:	bcs	16dd8 <__assert_fail@plt+0x5d38>
   16dc4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16dc8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16dcc:	add	r0, r0, r1
   16dd0:	movw	r1, #36	; 0x24
   16dd4:	strb	r1, [r0]
   16dd8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16ddc:	add	r0, r0, #1
   16de0:	str	r0, [fp, #-44]	; 0xffffffd4
   16de4:	b	16de8 <__assert_fail@plt+0x5d48>
   16de8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16dec:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16df0:	cmp	r0, r1
   16df4:	bcs	16e0c <__assert_fail@plt+0x5d6c>
   16df8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16dfc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16e00:	add	r0, r0, r1
   16e04:	movw	r1, #39	; 0x27
   16e08:	strb	r1, [r0]
   16e0c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16e10:	add	r0, r0, #1
   16e14:	str	r0, [fp, #-44]	; 0xffffffd4
   16e18:	movw	r0, #1
   16e1c:	strb	r0, [fp, #-60]	; 0xffffffc4
   16e20:	b	16e24 <__assert_fail@plt+0x5d84>
   16e24:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16e28:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16e2c:	cmp	r0, r1
   16e30:	bcs	16e48 <__assert_fail@plt+0x5da8>
   16e34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16e38:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16e3c:	add	r0, r0, r1
   16e40:	movw	r1, #92	; 0x5c
   16e44:	strb	r1, [r0]
   16e48:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16e4c:	add	r0, r0, #1
   16e50:	str	r0, [fp, #-44]	; 0xffffffd4
   16e54:	b	16e58 <__assert_fail@plt+0x5db8>
   16e58:	b	16e5c <__assert_fail@plt+0x5dbc>
   16e5c:	b	16e60 <__assert_fail@plt+0x5dc0>
   16e60:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   16e64:	tst	r0, #1
   16e68:	beq	16ee8 <__assert_fail@plt+0x5e48>
   16e6c:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   16e70:	tst	r0, #1
   16e74:	bne	16ee8 <__assert_fail@plt+0x5e48>
   16e78:	b	16e7c <__assert_fail@plt+0x5ddc>
   16e7c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16e80:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16e84:	cmp	r0, r1
   16e88:	bcs	16ea0 <__assert_fail@plt+0x5e00>
   16e8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16e90:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16e94:	add	r0, r0, r1
   16e98:	movw	r1, #39	; 0x27
   16e9c:	strb	r1, [r0]
   16ea0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16ea4:	add	r0, r0, #1
   16ea8:	str	r0, [fp, #-44]	; 0xffffffd4
   16eac:	b	16eb0 <__assert_fail@plt+0x5e10>
   16eb0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16eb4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16eb8:	cmp	r0, r1
   16ebc:	bcs	16ed4 <__assert_fail@plt+0x5e34>
   16ec0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16ec4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16ec8:	add	r0, r0, r1
   16ecc:	movw	r1, #39	; 0x27
   16ed0:	strb	r1, [r0]
   16ed4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16ed8:	add	r0, r0, #1
   16edc:	str	r0, [fp, #-44]	; 0xffffffd4
   16ee0:	movw	r0, #0
   16ee4:	strb	r0, [fp, #-60]	; 0xffffffc4
   16ee8:	b	16eec <__assert_fail@plt+0x5e4c>
   16eec:	b	16ef0 <__assert_fail@plt+0x5e50>
   16ef0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16ef4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16ef8:	cmp	r0, r1
   16efc:	bcs	16f14 <__assert_fail@plt+0x5e74>
   16f00:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   16f04:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16f08:	ldr	r2, [fp, #-44]	; 0xffffffd4
   16f0c:	add	r1, r1, r2
   16f10:	strb	r0, [r1]
   16f14:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16f18:	add	r0, r0, #1
   16f1c:	str	r0, [fp, #-44]	; 0xffffffd4
   16f20:	ldrb	r0, [fp, #-67]	; 0xffffffbd
   16f24:	tst	r0, #1
   16f28:	bne	16f34 <__assert_fail@plt+0x5e94>
   16f2c:	movw	r0, #0
   16f30:	strb	r0, [fp, #-62]	; 0xffffffc2
   16f34:	b	16f38 <__assert_fail@plt+0x5e98>
   16f38:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16f3c:	add	r0, r0, #1
   16f40:	str	r0, [fp, #-40]	; 0xffffffd8
   16f44:	b	15cec <__assert_fail@plt+0x4c4c>
   16f48:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16f4c:	cmp	r0, #0
   16f50:	bne	16f70 <__assert_fail@plt+0x5ed0>
   16f54:	ldr	r0, [fp, #8]
   16f58:	cmp	r0, #2
   16f5c:	bne	16f70 <__assert_fail@plt+0x5ed0>
   16f60:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   16f64:	tst	r0, #1
   16f68:	beq	16f70 <__assert_fail@plt+0x5ed0>
   16f6c:	b	170c8 <__assert_fail@plt+0x6028>
   16f70:	ldr	r0, [fp, #8]
   16f74:	cmp	r0, #2
   16f78:	bne	17018 <__assert_fail@plt+0x5f78>
   16f7c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   16f80:	tst	r0, #1
   16f84:	bne	17018 <__assert_fail@plt+0x5f78>
   16f88:	ldrb	r0, [fp, #-61]	; 0xffffffc3
   16f8c:	tst	r0, #1
   16f90:	beq	17018 <__assert_fail@plt+0x5f78>
   16f94:	ldrb	r0, [fp, #-62]	; 0xffffffc2
   16f98:	tst	r0, #1
   16f9c:	beq	16fe4 <__assert_fail@plt+0x5f44>
   16fa0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16fa4:	ldr	r1, [fp, #-48]	; 0xffffffd0
   16fa8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   16fac:	ldr	r3, [fp, #-36]	; 0xffffffdc
   16fb0:	ldr	ip, [fp, #12]
   16fb4:	ldr	lr, [fp, #16]
   16fb8:	ldr	r4, [fp, #20]
   16fbc:	ldr	r5, [fp, #24]
   16fc0:	movw	r6, #5
   16fc4:	str	r6, [sp]
   16fc8:	str	ip, [sp, #4]
   16fcc:	str	lr, [sp, #8]
   16fd0:	str	r4, [sp, #12]
   16fd4:	str	r5, [sp, #16]
   16fd8:	bl	15a04 <__assert_fail@plt+0x4964>
   16fdc:	str	r0, [fp, #-20]	; 0xffffffec
   16fe0:	b	17130 <__assert_fail@plt+0x6090>
   16fe4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   16fe8:	cmp	r0, #0
   16fec:	bne	17010 <__assert_fail@plt+0x5f70>
   16ff0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16ff4:	cmp	r0, #0
   16ff8:	beq	17010 <__assert_fail@plt+0x5f70>
   16ffc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   17000:	str	r0, [fp, #-28]	; 0xffffffe4
   17004:	movw	r0, #0
   17008:	str	r0, [fp, #-44]	; 0xffffffd4
   1700c:	b	15aac <__assert_fail@plt+0x4a0c>
   17010:	b	17014 <__assert_fail@plt+0x5f74>
   17014:	b	17018 <__assert_fail@plt+0x5f78>
   17018:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1701c:	movw	r1, #0
   17020:	cmp	r0, r1
   17024:	beq	17098 <__assert_fail@plt+0x5ff8>
   17028:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1702c:	tst	r0, #1
   17030:	bne	17098 <__assert_fail@plt+0x5ff8>
   17034:	b	17038 <__assert_fail@plt+0x5f98>
   17038:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1703c:	ldrsb	r0, [r0]
   17040:	cmp	r0, #0
   17044:	beq	17094 <__assert_fail@plt+0x5ff4>
   17048:	b	1704c <__assert_fail@plt+0x5fac>
   1704c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17050:	ldr	r1, [fp, #-28]	; 0xffffffe4
   17054:	cmp	r0, r1
   17058:	bcs	17074 <__assert_fail@plt+0x5fd4>
   1705c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   17060:	ldrb	r0, [r0]
   17064:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17068:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1706c:	add	r1, r1, r2
   17070:	strb	r0, [r1]
   17074:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17078:	add	r0, r0, #1
   1707c:	str	r0, [fp, #-44]	; 0xffffffd4
   17080:	b	17084 <__assert_fail@plt+0x5fe4>
   17084:	ldr	r0, [fp, #-52]	; 0xffffffcc
   17088:	add	r0, r0, #1
   1708c:	str	r0, [fp, #-52]	; 0xffffffcc
   17090:	b	17038 <__assert_fail@plt+0x5f98>
   17094:	b	17098 <__assert_fail@plt+0x5ff8>
   17098:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1709c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   170a0:	cmp	r0, r1
   170a4:	bcs	170bc <__assert_fail@plt+0x601c>
   170a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   170ac:	ldr	r1, [fp, #-44]	; 0xffffffd4
   170b0:	add	r0, r0, r1
   170b4:	movw	r1, #0
   170b8:	strb	r1, [r0]
   170bc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   170c0:	str	r0, [fp, #-20]	; 0xffffffec
   170c4:	b	17130 <__assert_fail@plt+0x6090>
   170c8:	ldr	r0, [fp, #8]
   170cc:	cmp	r0, #2
   170d0:	bne	170e8 <__assert_fail@plt+0x6048>
   170d4:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   170d8:	tst	r0, #1
   170dc:	beq	170e8 <__assert_fail@plt+0x6048>
   170e0:	movw	r0, #4
   170e4:	str	r0, [fp, #8]
   170e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   170ec:	ldr	r1, [fp, #-28]	; 0xffffffe4
   170f0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   170f4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   170f8:	ldr	ip, [fp, #8]
   170fc:	ldr	lr, [fp, #12]
   17100:	mvn	r4, #2
   17104:	and	lr, lr, r4
   17108:	ldr	r4, [fp, #20]
   1710c:	ldr	r5, [fp, #24]
   17110:	str	ip, [sp]
   17114:	str	lr, [sp, #4]
   17118:	movw	ip, #0
   1711c:	str	ip, [sp, #8]
   17120:	str	r4, [sp, #12]
   17124:	str	r5, [sp, #16]
   17128:	bl	15a04 <__assert_fail@plt+0x4964>
   1712c:	str	r0, [fp, #-20]	; 0xffffffec
   17130:	ldr	r0, [fp, #-20]	; 0xffffffec
   17134:	sub	sp, fp, #16
   17138:	pop	{r4, r5, r6, sl, fp, pc}
   1713c:	push	{fp, lr}
   17140:	mov	fp, sp
   17144:	sub	sp, sp, #16
   17148:	str	r0, [fp, #-4]
   1714c:	str	r1, [sp, #8]
   17150:	str	r2, [sp, #4]
   17154:	ldr	r0, [fp, #-4]
   17158:	ldr	r1, [sp, #8]
   1715c:	ldr	r3, [sp, #4]
   17160:	movw	r2, #0
   17164:	bl	17170 <__assert_fail@plt+0x60d0>
   17168:	mov	sp, fp
   1716c:	pop	{fp, pc}
   17170:	push	{r4, r5, r6, sl, fp, lr}
   17174:	add	fp, sp, #16
   17178:	sub	sp, sp, #72	; 0x48
   1717c:	str	r0, [fp, #-20]	; 0xffffffec
   17180:	str	r1, [fp, #-24]	; 0xffffffe8
   17184:	str	r2, [fp, #-28]	; 0xffffffe4
   17188:	str	r3, [fp, #-32]	; 0xffffffe0
   1718c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17190:	movw	r1, #0
   17194:	cmp	r0, r1
   17198:	beq	171a8 <__assert_fail@plt+0x6108>
   1719c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   171a0:	str	r0, [sp, #32]
   171a4:	b	171b8 <__assert_fail@plt+0x6118>
   171a8:	movw	r0, #17516	; 0x446c
   171ac:	movt	r0, #3
   171b0:	str	r0, [sp, #32]
   171b4:	b	171b8 <__assert_fail@plt+0x6118>
   171b8:	ldr	r0, [sp, #32]
   171bc:	str	r0, [fp, #-36]	; 0xffffffdc
   171c0:	bl	10fd4 <__errno_location@plt>
   171c4:	ldr	r0, [r0]
   171c8:	str	r0, [fp, #-40]	; 0xffffffd8
   171cc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   171d0:	ldr	r0, [r0, #4]
   171d4:	ldr	lr, [fp, #-28]	; 0xffffffe4
   171d8:	movw	r1, #0
   171dc:	cmp	lr, r1
   171e0:	movw	lr, #0
   171e4:	movne	lr, #1
   171e8:	tst	lr, #1
   171ec:	mov	lr, r1
   171f0:	moveq	lr, #1
   171f4:	orr	r0, r0, lr
   171f8:	str	r0, [sp, #44]	; 0x2c
   171fc:	ldr	r2, [fp, #-20]	; 0xffffffec
   17200:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17204:	ldr	r0, [fp, #-36]	; 0xffffffdc
   17208:	ldr	r0, [r0]
   1720c:	ldr	lr, [sp, #44]	; 0x2c
   17210:	ldr	ip, [fp, #-36]	; 0xffffffdc
   17214:	add	ip, ip, #8
   17218:	ldr	r4, [fp, #-36]	; 0xffffffdc
   1721c:	ldr	r4, [r4, #40]	; 0x28
   17220:	ldr	r5, [fp, #-36]	; 0xffffffdc
   17224:	ldr	r5, [r5, #44]	; 0x2c
   17228:	str	r0, [sp, #28]
   1722c:	mov	r0, r1
   17230:	ldr	r6, [sp, #28]
   17234:	str	r6, [sp]
   17238:	str	lr, [sp, #4]
   1723c:	str	ip, [sp, #8]
   17240:	str	r4, [sp, #12]
   17244:	str	r5, [sp, #16]
   17248:	bl	15a04 <__assert_fail@plt+0x4964>
   1724c:	add	r0, r0, #1
   17250:	str	r0, [sp, #40]	; 0x28
   17254:	ldr	r0, [sp, #40]	; 0x28
   17258:	bl	18744 <__assert_fail@plt+0x76a4>
   1725c:	str	r0, [sp, #36]	; 0x24
   17260:	ldr	r0, [sp, #36]	; 0x24
   17264:	ldr	r1, [sp, #40]	; 0x28
   17268:	ldr	r2, [fp, #-20]	; 0xffffffec
   1726c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17270:	ldr	ip, [fp, #-36]	; 0xffffffdc
   17274:	ldr	ip, [ip]
   17278:	ldr	lr, [sp, #44]	; 0x2c
   1727c:	ldr	r4, [fp, #-36]	; 0xffffffdc
   17280:	add	r4, r4, #8
   17284:	ldr	r5, [fp, #-36]	; 0xffffffdc
   17288:	ldr	r5, [r5, #40]	; 0x28
   1728c:	ldr	r6, [fp, #-36]	; 0xffffffdc
   17290:	ldr	r6, [r6, #44]	; 0x2c
   17294:	str	ip, [sp]
   17298:	str	lr, [sp, #4]
   1729c:	str	r4, [sp, #8]
   172a0:	str	r5, [sp, #12]
   172a4:	str	r6, [sp, #16]
   172a8:	bl	15a04 <__assert_fail@plt+0x4964>
   172ac:	ldr	r1, [fp, #-40]	; 0xffffffd8
   172b0:	str	r0, [sp, #24]
   172b4:	str	r1, [sp, #20]
   172b8:	bl	10fd4 <__errno_location@plt>
   172bc:	ldr	r1, [sp, #20]
   172c0:	str	r1, [r0]
   172c4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   172c8:	movw	r2, #0
   172cc:	cmp	r0, r2
   172d0:	beq	172e4 <__assert_fail@plt+0x6244>
   172d4:	ldr	r0, [sp, #40]	; 0x28
   172d8:	sub	r0, r0, #1
   172dc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   172e0:	str	r0, [r1]
   172e4:	ldr	r0, [sp, #36]	; 0x24
   172e8:	sub	sp, fp, #16
   172ec:	pop	{r4, r5, r6, sl, fp, pc}
   172f0:	push	{fp, lr}
   172f4:	mov	fp, sp
   172f8:	sub	sp, sp, #8
   172fc:	movw	r0, #8440	; 0x20f8
   17300:	movt	r0, #3
   17304:	ldr	r0, [r0]
   17308:	str	r0, [sp, #4]
   1730c:	movw	r0, #1
   17310:	str	r0, [sp]
   17314:	ldr	r0, [sp]
   17318:	movw	r1, #8444	; 0x20fc
   1731c:	movt	r1, #3
   17320:	ldr	r1, [r1]
   17324:	cmp	r0, r1
   17328:	bge	17350 <__assert_fail@plt+0x62b0>
   1732c:	ldr	r0, [sp, #4]
   17330:	ldr	r1, [sp]
   17334:	add	r0, r0, r1, lsl #3
   17338:	ldr	r0, [r0, #4]
   1733c:	bl	15534 <__assert_fail@plt+0x4494>
   17340:	ldr	r0, [sp]
   17344:	add	r0, r0, #1
   17348:	str	r0, [sp]
   1734c:	b	17314 <__assert_fail@plt+0x6274>
   17350:	ldr	r0, [sp, #4]
   17354:	ldr	r0, [r0, #4]
   17358:	movw	r1, #17564	; 0x449c
   1735c:	movt	r1, #3
   17360:	cmp	r0, r1
   17364:	beq	17390 <__assert_fail@plt+0x62f0>
   17368:	ldr	r0, [sp, #4]
   1736c:	ldr	r0, [r0, #4]
   17370:	bl	15534 <__assert_fail@plt+0x4494>
   17374:	movw	r0, #256	; 0x100
   17378:	movw	lr, #8448	; 0x2100
   1737c:	movt	lr, #3
   17380:	str	r0, [lr]
   17384:	movw	r0, #17564	; 0x449c
   17388:	movt	r0, #3
   1738c:	str	r0, [lr, #4]
   17390:	ldr	r0, [sp, #4]
   17394:	movw	r1, #8448	; 0x2100
   17398:	movt	r1, #3
   1739c:	cmp	r0, r1
   173a0:	beq	173c0 <__assert_fail@plt+0x6320>
   173a4:	ldr	r0, [sp, #4]
   173a8:	bl	15534 <__assert_fail@plt+0x4494>
   173ac:	movw	r0, #8440	; 0x20f8
   173b0:	movt	r0, #3
   173b4:	movw	lr, #8448	; 0x2100
   173b8:	movt	lr, #3
   173bc:	str	lr, [r0]
   173c0:	movw	r0, #8444	; 0x20fc
   173c4:	movt	r0, #3
   173c8:	movw	r1, #1
   173cc:	str	r1, [r0]
   173d0:	mov	sp, fp
   173d4:	pop	{fp, pc}
   173d8:	push	{fp, lr}
   173dc:	mov	fp, sp
   173e0:	sub	sp, sp, #8
   173e4:	str	r0, [sp, #4]
   173e8:	str	r1, [sp]
   173ec:	ldr	r0, [sp, #4]
   173f0:	ldr	r1, [sp]
   173f4:	mvn	r2, #0
   173f8:	movw	r3, #17516	; 0x446c
   173fc:	movt	r3, #3
   17400:	bl	1740c <__assert_fail@plt+0x636c>
   17404:	mov	sp, fp
   17408:	pop	{fp, pc}
   1740c:	push	{r4, r5, r6, sl, fp, lr}
   17410:	add	fp, sp, #16
   17414:	sub	sp, sp, #88	; 0x58
   17418:	str	r0, [fp, #-20]	; 0xffffffec
   1741c:	str	r1, [fp, #-24]	; 0xffffffe8
   17420:	str	r2, [fp, #-28]	; 0xffffffe4
   17424:	str	r3, [fp, #-32]	; 0xffffffe0
   17428:	bl	10fd4 <__errno_location@plt>
   1742c:	ldr	r1, [pc, #676]	; 176d8 <__assert_fail@plt+0x6638>
   17430:	ldr	r0, [r0]
   17434:	str	r0, [fp, #-36]	; 0xffffffdc
   17438:	movw	r0, #8440	; 0x20f8
   1743c:	movt	r0, #3
   17440:	ldr	r0, [r0]
   17444:	str	r0, [fp, #-40]	; 0xffffffd8
   17448:	str	r1, [fp, #-44]	; 0xffffffd4
   1744c:	ldr	r0, [fp, #-20]	; 0xffffffec
   17450:	movw	r1, #0
   17454:	cmp	r1, r0
   17458:	bgt	1746c <__assert_fail@plt+0x63cc>
   1745c:	ldr	r0, [fp, #-20]	; 0xffffffec
   17460:	ldr	r1, [fp, #-44]	; 0xffffffd4
   17464:	cmp	r0, r1
   17468:	blt	17470 <__assert_fail@plt+0x63d0>
   1746c:	bl	11088 <abort@plt>
   17470:	movw	r0, #8444	; 0x20fc
   17474:	movt	r0, #3
   17478:	ldr	r0, [r0]
   1747c:	ldr	r1, [fp, #-20]	; 0xffffffec
   17480:	cmp	r0, r1
   17484:	bgt	1757c <__assert_fail@plt+0x64dc>
   17488:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1748c:	movw	r1, #8448	; 0x2100
   17490:	movt	r1, #3
   17494:	cmp	r0, r1
   17498:	movw	r0, #0
   1749c:	moveq	r0, #1
   174a0:	and	r0, r0, #1
   174a4:	strb	r0, [fp, #-45]	; 0xffffffd3
   174a8:	movw	r0, #8444	; 0x20fc
   174ac:	movt	r0, #3
   174b0:	ldr	r0, [r0]
   174b4:	str	r0, [sp, #52]	; 0x34
   174b8:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   174bc:	tst	r0, #1
   174c0:	beq	174d0 <__assert_fail@plt+0x6430>
   174c4:	movw	r0, #0
   174c8:	str	r0, [sp, #32]
   174cc:	b	174d8 <__assert_fail@plt+0x6438>
   174d0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   174d4:	str	r0, [sp, #32]
   174d8:	ldr	r0, [sp, #32]
   174dc:	ldr	r1, [fp, #-20]	; 0xffffffec
   174e0:	movw	r2, #8444	; 0x20fc
   174e4:	movt	r2, #3
   174e8:	ldr	r2, [r2]
   174ec:	sub	r1, r1, r2
   174f0:	add	r2, r1, #1
   174f4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   174f8:	add	r1, sp, #52	; 0x34
   174fc:	movw	ip, #8
   17500:	str	ip, [sp]
   17504:	bl	18980 <__assert_fail@plt+0x78e0>
   17508:	str	r0, [fp, #-40]	; 0xffffffd8
   1750c:	movw	r1, #8440	; 0x20f8
   17510:	movt	r1, #3
   17514:	str	r0, [r1]
   17518:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   1751c:	tst	r0, #1
   17520:	beq	17540 <__assert_fail@plt+0x64a0>
   17524:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17528:	movw	r1, #8448	; 0x2100
   1752c:	movt	r1, #3
   17530:	ldr	r2, [r1]
   17534:	str	r2, [r0]
   17538:	ldr	r1, [r1, #4]
   1753c:	str	r1, [r0, #4]
   17540:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17544:	movw	r1, #8444	; 0x20fc
   17548:	movt	r1, #3
   1754c:	ldr	r1, [r1]
   17550:	add	r0, r0, r1, lsl #3
   17554:	ldr	r2, [sp, #52]	; 0x34
   17558:	sub	r1, r2, r1
   1755c:	lsl	r2, r1, #3
   17560:	movw	r1, #0
   17564:	and	r1, r1, #255	; 0xff
   17568:	bl	10fec <memset@plt>
   1756c:	ldr	r0, [sp, #52]	; 0x34
   17570:	movw	r1, #8444	; 0x20fc
   17574:	movt	r1, #3
   17578:	str	r0, [r1]
   1757c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17580:	ldr	r1, [fp, #-20]	; 0xffffffec
   17584:	ldr	r0, [r0, r1, lsl #3]
   17588:	str	r0, [sp, #48]	; 0x30
   1758c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17590:	ldr	r1, [fp, #-20]	; 0xffffffec
   17594:	add	r0, r0, r1, lsl #3
   17598:	ldr	r0, [r0, #4]
   1759c:	str	r0, [sp, #44]	; 0x2c
   175a0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   175a4:	ldr	r0, [r0, #4]
   175a8:	orr	r0, r0, #1
   175ac:	str	r0, [sp, #40]	; 0x28
   175b0:	ldr	r0, [sp, #44]	; 0x2c
   175b4:	ldr	r1, [sp, #48]	; 0x30
   175b8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   175bc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   175c0:	ldr	ip, [fp, #-32]	; 0xffffffe0
   175c4:	ldr	ip, [ip]
   175c8:	ldr	lr, [sp, #40]	; 0x28
   175cc:	ldr	r4, [fp, #-32]	; 0xffffffe0
   175d0:	add	r4, r4, #8
   175d4:	ldr	r5, [fp, #-32]	; 0xffffffe0
   175d8:	ldr	r5, [r5, #40]	; 0x28
   175dc:	ldr	r6, [fp, #-32]	; 0xffffffe0
   175e0:	ldr	r6, [r6, #44]	; 0x2c
   175e4:	str	ip, [sp]
   175e8:	str	lr, [sp, #4]
   175ec:	str	r4, [sp, #8]
   175f0:	str	r5, [sp, #12]
   175f4:	str	r6, [sp, #16]
   175f8:	bl	15a04 <__assert_fail@plt+0x4964>
   175fc:	str	r0, [sp, #36]	; 0x24
   17600:	ldr	r0, [sp, #48]	; 0x30
   17604:	ldr	r1, [sp, #36]	; 0x24
   17608:	cmp	r0, r1
   1760c:	bhi	176b8 <__assert_fail@plt+0x6618>
   17610:	ldr	r0, [sp, #36]	; 0x24
   17614:	add	r0, r0, #1
   17618:	str	r0, [sp, #48]	; 0x30
   1761c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   17620:	ldr	r2, [fp, #-20]	; 0xffffffec
   17624:	add	r1, r1, r2, lsl #3
   17628:	str	r0, [r1]
   1762c:	ldr	r0, [sp, #44]	; 0x2c
   17630:	movw	r1, #17564	; 0x449c
   17634:	movt	r1, #3
   17638:	cmp	r0, r1
   1763c:	beq	17648 <__assert_fail@plt+0x65a8>
   17640:	ldr	r0, [sp, #44]	; 0x2c
   17644:	bl	15534 <__assert_fail@plt+0x4494>
   17648:	ldr	r0, [sp, #48]	; 0x30
   1764c:	bl	18744 <__assert_fail@plt+0x76a4>
   17650:	mov	lr, r0
   17654:	str	r0, [sp, #44]	; 0x2c
   17658:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1765c:	ldr	r1, [fp, #-20]	; 0xffffffec
   17660:	add	r0, r0, r1, lsl #3
   17664:	str	lr, [r0, #4]
   17668:	ldr	r0, [sp, #44]	; 0x2c
   1766c:	ldr	r1, [sp, #48]	; 0x30
   17670:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17674:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17678:	ldr	lr, [fp, #-32]	; 0xffffffe0
   1767c:	ldr	lr, [lr]
   17680:	ldr	ip, [sp, #40]	; 0x28
   17684:	ldr	r4, [fp, #-32]	; 0xffffffe0
   17688:	add	r4, r4, #8
   1768c:	ldr	r5, [fp, #-32]	; 0xffffffe0
   17690:	ldr	r5, [r5, #40]	; 0x28
   17694:	ldr	r6, [fp, #-32]	; 0xffffffe0
   17698:	ldr	r6, [r6, #44]	; 0x2c
   1769c:	str	lr, [sp]
   176a0:	str	ip, [sp, #4]
   176a4:	str	r4, [sp, #8]
   176a8:	str	r5, [sp, #12]
   176ac:	str	r6, [sp, #16]
   176b0:	bl	15a04 <__assert_fail@plt+0x4964>
   176b4:	str	r0, [sp, #28]
   176b8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   176bc:	str	r0, [sp, #24]
   176c0:	bl	10fd4 <__errno_location@plt>
   176c4:	ldr	lr, [sp, #24]
   176c8:	str	lr, [r0]
   176cc:	ldr	r0, [sp, #44]	; 0x2c
   176d0:	sub	sp, fp, #16
   176d4:	pop	{r4, r5, r6, sl, fp, pc}
   176d8:	svcvc	0x00ffffff
   176dc:	push	{fp, lr}
   176e0:	mov	fp, sp
   176e4:	sub	sp, sp, #16
   176e8:	str	r0, [fp, #-4]
   176ec:	str	r1, [sp, #8]
   176f0:	str	r2, [sp, #4]
   176f4:	ldr	r0, [fp, #-4]
   176f8:	ldr	r1, [sp, #8]
   176fc:	ldr	r2, [sp, #4]
   17700:	movw	r3, #17516	; 0x446c
   17704:	movt	r3, #3
   17708:	bl	1740c <__assert_fail@plt+0x636c>
   1770c:	mov	sp, fp
   17710:	pop	{fp, pc}
   17714:	push	{fp, lr}
   17718:	mov	fp, sp
   1771c:	sub	sp, sp, #8
   17720:	str	r0, [sp, #4]
   17724:	ldr	r1, [sp, #4]
   17728:	movw	r0, #0
   1772c:	bl	173d8 <__assert_fail@plt+0x6338>
   17730:	mov	sp, fp
   17734:	pop	{fp, pc}
   17738:	push	{fp, lr}
   1773c:	mov	fp, sp
   17740:	sub	sp, sp, #8
   17744:	str	r0, [sp, #4]
   17748:	str	r1, [sp]
   1774c:	ldr	r1, [sp, #4]
   17750:	ldr	r2, [sp]
   17754:	movw	r0, #0
   17758:	bl	176dc <__assert_fail@plt+0x663c>
   1775c:	mov	sp, fp
   17760:	pop	{fp, pc}
   17764:	push	{fp, lr}
   17768:	mov	fp, sp
   1776c:	sub	sp, sp, #64	; 0x40
   17770:	str	r0, [fp, #-4]
   17774:	str	r1, [fp, #-8]
   17778:	str	r2, [fp, #-12]
   1777c:	ldr	r1, [fp, #-8]
   17780:	add	r0, sp, #4
   17784:	bl	177a4 <__assert_fail@plt+0x6704>
   17788:	ldr	r0, [fp, #-4]
   1778c:	ldr	r1, [fp, #-12]
   17790:	mvn	r2, #0
   17794:	add	r3, sp, #4
   17798:	bl	1740c <__assert_fail@plt+0x636c>
   1779c:	mov	sp, fp
   177a0:	pop	{fp, pc}
   177a4:	push	{fp, lr}
   177a8:	mov	fp, sp
   177ac:	sub	sp, sp, #8
   177b0:	str	r1, [sp, #4]
   177b4:	mov	r1, r0
   177b8:	str	r0, [sp]
   177bc:	mov	r0, r1
   177c0:	movw	r1, #0
   177c4:	and	r1, r1, #255	; 0xff
   177c8:	movw	r2, #48	; 0x30
   177cc:	bl	10fec <memset@plt>
   177d0:	ldr	r0, [sp, #4]
   177d4:	cmp	r0, #10
   177d8:	bne	177e0 <__assert_fail@plt+0x6740>
   177dc:	bl	11088 <abort@plt>
   177e0:	ldr	r0, [sp, #4]
   177e4:	ldr	r1, [sp]
   177e8:	str	r0, [r1]
   177ec:	mov	sp, fp
   177f0:	pop	{fp, pc}
   177f4:	push	{fp, lr}
   177f8:	mov	fp, sp
   177fc:	sub	sp, sp, #64	; 0x40
   17800:	str	r0, [fp, #-4]
   17804:	str	r1, [fp, #-8]
   17808:	str	r2, [fp, #-12]
   1780c:	str	r3, [fp, #-16]
   17810:	ldr	r1, [fp, #-8]
   17814:	mov	r0, sp
   17818:	bl	177a4 <__assert_fail@plt+0x6704>
   1781c:	ldr	r0, [fp, #-4]
   17820:	ldr	r1, [fp, #-12]
   17824:	ldr	r2, [fp, #-16]
   17828:	mov	r3, sp
   1782c:	bl	1740c <__assert_fail@plt+0x636c>
   17830:	mov	sp, fp
   17834:	pop	{fp, pc}
   17838:	push	{fp, lr}
   1783c:	mov	fp, sp
   17840:	sub	sp, sp, #8
   17844:	str	r0, [sp, #4]
   17848:	str	r1, [sp]
   1784c:	ldr	r1, [sp, #4]
   17850:	ldr	r2, [sp]
   17854:	movw	r0, #0
   17858:	bl	17764 <__assert_fail@plt+0x66c4>
   1785c:	mov	sp, fp
   17860:	pop	{fp, pc}
   17864:	push	{fp, lr}
   17868:	mov	fp, sp
   1786c:	sub	sp, sp, #16
   17870:	str	r0, [fp, #-4]
   17874:	str	r1, [sp, #8]
   17878:	str	r2, [sp, #4]
   1787c:	ldr	r1, [fp, #-4]
   17880:	ldr	r2, [sp, #8]
   17884:	ldr	r3, [sp, #4]
   17888:	movw	r0, #0
   1788c:	bl	177f4 <__assert_fail@plt+0x6754>
   17890:	mov	sp, fp
   17894:	pop	{fp, pc}
   17898:	push	{fp, lr}
   1789c:	mov	fp, sp
   178a0:	sub	sp, sp, #72	; 0x48
   178a4:	movw	r3, #17516	; 0x446c
   178a8:	movt	r3, #3
   178ac:	str	r0, [fp, #-4]
   178b0:	str	r1, [fp, #-8]
   178b4:	strb	r2, [fp, #-9]
   178b8:	add	r0, sp, #12
   178bc:	mov	r1, r0
   178c0:	str	r0, [sp, #8]
   178c4:	mov	r0, r1
   178c8:	mov	r1, r3
   178cc:	movw	r2, #48	; 0x30
   178d0:	bl	10e9c <memcpy@plt>
   178d4:	ldr	r0, [sp, #8]
   178d8:	ldrb	r1, [fp, #-9]
   178dc:	movw	r2, #1
   178e0:	bl	157a8 <__assert_fail@plt+0x4708>
   178e4:	ldr	r1, [fp, #-4]
   178e8:	ldr	r2, [fp, #-8]
   178ec:	movw	r3, #0
   178f0:	str	r0, [sp, #4]
   178f4:	mov	r0, r3
   178f8:	add	r3, sp, #12
   178fc:	bl	1740c <__assert_fail@plt+0x636c>
   17900:	mov	sp, fp
   17904:	pop	{fp, pc}
   17908:	push	{fp, lr}
   1790c:	mov	fp, sp
   17910:	sub	sp, sp, #8
   17914:	str	r0, [sp, #4]
   17918:	strb	r1, [sp, #3]
   1791c:	ldr	r0, [sp, #4]
   17920:	mvn	r1, #0
   17924:	ldrb	r2, [sp, #3]
   17928:	bl	17898 <__assert_fail@plt+0x67f8>
   1792c:	mov	sp, fp
   17930:	pop	{fp, pc}
   17934:	push	{fp, lr}
   17938:	mov	fp, sp
   1793c:	sub	sp, sp, #8
   17940:	str	r0, [sp, #4]
   17944:	ldr	r0, [sp, #4]
   17948:	movw	r1, #58	; 0x3a
   1794c:	and	r1, r1, #255	; 0xff
   17950:	bl	17908 <__assert_fail@plt+0x6868>
   17954:	mov	sp, fp
   17958:	pop	{fp, pc}
   1795c:	push	{fp, lr}
   17960:	mov	fp, sp
   17964:	sub	sp, sp, #8
   17968:	str	r0, [sp, #4]
   1796c:	str	r1, [sp]
   17970:	ldr	r0, [sp, #4]
   17974:	ldr	r1, [sp]
   17978:	movw	r2, #58	; 0x3a
   1797c:	and	r2, r2, #255	; 0xff
   17980:	bl	17898 <__assert_fail@plt+0x67f8>
   17984:	mov	sp, fp
   17988:	pop	{fp, pc}
   1798c:	push	{fp, lr}
   17990:	mov	fp, sp
   17994:	sub	sp, sp, #120	; 0x78
   17998:	str	r0, [fp, #-4]
   1799c:	str	r1, [fp, #-8]
   179a0:	str	r2, [fp, #-12]
   179a4:	ldr	r1, [fp, #-8]
   179a8:	add	r0, sp, #12
   179ac:	bl	177a4 <__assert_fail@plt+0x6704>
   179b0:	add	r0, sp, #60	; 0x3c
   179b4:	mov	r1, r0
   179b8:	add	r2, sp, #12
   179bc:	str	r0, [sp, #8]
   179c0:	mov	r0, r1
   179c4:	mov	r1, r2
   179c8:	movw	r2, #48	; 0x30
   179cc:	bl	10e9c <memcpy@plt>
   179d0:	ldr	r0, [sp, #8]
   179d4:	movw	r1, #58	; 0x3a
   179d8:	and	r1, r1, #255	; 0xff
   179dc:	movw	r2, #1
   179e0:	bl	157a8 <__assert_fail@plt+0x4708>
   179e4:	ldr	r1, [fp, #-4]
   179e8:	ldr	r2, [fp, #-12]
   179ec:	str	r0, [sp, #4]
   179f0:	mov	r0, r1
   179f4:	mov	r1, r2
   179f8:	mvn	r2, #0
   179fc:	add	r3, sp, #60	; 0x3c
   17a00:	bl	1740c <__assert_fail@plt+0x636c>
   17a04:	mov	sp, fp
   17a08:	pop	{fp, pc}
   17a0c:	push	{fp, lr}
   17a10:	mov	fp, sp
   17a14:	sub	sp, sp, #24
   17a18:	str	r0, [fp, #-4]
   17a1c:	str	r1, [fp, #-8]
   17a20:	str	r2, [sp, #12]
   17a24:	str	r3, [sp, #8]
   17a28:	ldr	r0, [fp, #-4]
   17a2c:	ldr	r1, [fp, #-8]
   17a30:	ldr	r2, [sp, #12]
   17a34:	ldr	r3, [sp, #8]
   17a38:	mvn	ip, #0
   17a3c:	str	ip, [sp]
   17a40:	bl	17a4c <__assert_fail@plt+0x69ac>
   17a44:	mov	sp, fp
   17a48:	pop	{fp, pc}
   17a4c:	push	{fp, lr}
   17a50:	mov	fp, sp
   17a54:	sub	sp, sp, #72	; 0x48
   17a58:	ldr	ip, [fp, #8]
   17a5c:	movw	lr, #17516	; 0x446c
   17a60:	movt	lr, #3
   17a64:	str	r0, [fp, #-4]
   17a68:	str	r1, [fp, #-8]
   17a6c:	str	r2, [fp, #-12]
   17a70:	str	r3, [fp, #-16]
   17a74:	add	r0, sp, #8
   17a78:	mov	r1, r0
   17a7c:	str	r0, [sp, #4]
   17a80:	mov	r0, r1
   17a84:	mov	r1, lr
   17a88:	movw	r2, #48	; 0x30
   17a8c:	str	ip, [sp]
   17a90:	bl	10e9c <memcpy@plt>
   17a94:	ldr	r1, [fp, #-8]
   17a98:	ldr	r2, [fp, #-12]
   17a9c:	ldr	r0, [sp, #4]
   17aa0:	bl	158a8 <__assert_fail@plt+0x4808>
   17aa4:	ldr	r0, [fp, #-4]
   17aa8:	ldr	r1, [fp, #-16]
   17aac:	ldr	r2, [fp, #8]
   17ab0:	add	r3, sp, #8
   17ab4:	bl	1740c <__assert_fail@plt+0x636c>
   17ab8:	mov	sp, fp
   17abc:	pop	{fp, pc}
   17ac0:	push	{fp, lr}
   17ac4:	mov	fp, sp
   17ac8:	sub	sp, sp, #16
   17acc:	str	r0, [fp, #-4]
   17ad0:	str	r1, [sp, #8]
   17ad4:	str	r2, [sp, #4]
   17ad8:	ldr	r1, [fp, #-4]
   17adc:	ldr	r2, [sp, #8]
   17ae0:	ldr	r3, [sp, #4]
   17ae4:	movw	r0, #0
   17ae8:	bl	17a0c <__assert_fail@plt+0x696c>
   17aec:	mov	sp, fp
   17af0:	pop	{fp, pc}
   17af4:	push	{fp, lr}
   17af8:	mov	fp, sp
   17afc:	sub	sp, sp, #24
   17b00:	str	r0, [fp, #-4]
   17b04:	str	r1, [fp, #-8]
   17b08:	str	r2, [sp, #12]
   17b0c:	str	r3, [sp, #8]
   17b10:	ldr	r1, [fp, #-4]
   17b14:	ldr	r2, [fp, #-8]
   17b18:	ldr	r3, [sp, #12]
   17b1c:	ldr	r0, [sp, #8]
   17b20:	movw	ip, #0
   17b24:	str	r0, [sp, #4]
   17b28:	mov	r0, ip
   17b2c:	ldr	ip, [sp, #4]
   17b30:	str	ip, [sp]
   17b34:	bl	17a4c <__assert_fail@plt+0x69ac>
   17b38:	mov	sp, fp
   17b3c:	pop	{fp, pc}
   17b40:	push	{fp, lr}
   17b44:	mov	fp, sp
   17b48:	sub	sp, sp, #16
   17b4c:	str	r0, [fp, #-4]
   17b50:	str	r1, [sp, #8]
   17b54:	str	r2, [sp, #4]
   17b58:	ldr	r0, [fp, #-4]
   17b5c:	ldr	r1, [sp, #8]
   17b60:	ldr	r2, [sp, #4]
   17b64:	movw	r3, #8456	; 0x2108
   17b68:	movt	r3, #3
   17b6c:	bl	1740c <__assert_fail@plt+0x636c>
   17b70:	mov	sp, fp
   17b74:	pop	{fp, pc}
   17b78:	push	{fp, lr}
   17b7c:	mov	fp, sp
   17b80:	sub	sp, sp, #8
   17b84:	str	r0, [sp, #4]
   17b88:	str	r1, [sp]
   17b8c:	ldr	r1, [sp, #4]
   17b90:	ldr	r2, [sp]
   17b94:	movw	r0, #0
   17b98:	bl	17b40 <__assert_fail@plt+0x6aa0>
   17b9c:	mov	sp, fp
   17ba0:	pop	{fp, pc}
   17ba4:	push	{fp, lr}
   17ba8:	mov	fp, sp
   17bac:	sub	sp, sp, #8
   17bb0:	str	r0, [sp, #4]
   17bb4:	str	r1, [sp]
   17bb8:	ldr	r0, [sp, #4]
   17bbc:	ldr	r1, [sp]
   17bc0:	mvn	r2, #0
   17bc4:	bl	17b40 <__assert_fail@plt+0x6aa0>
   17bc8:	mov	sp, fp
   17bcc:	pop	{fp, pc}
   17bd0:	push	{fp, lr}
   17bd4:	mov	fp, sp
   17bd8:	sub	sp, sp, #8
   17bdc:	str	r0, [sp, #4]
   17be0:	ldr	r1, [sp, #4]
   17be4:	movw	r0, #0
   17be8:	bl	17ba4 <__assert_fail@plt+0x6b04>
   17bec:	mov	sp, fp
   17bf0:	pop	{fp, pc}
   17bf4:	push	{fp, lr}
   17bf8:	mov	fp, sp
   17bfc:	sub	sp, sp, #24
   17c00:	str	r0, [fp, #-8]
   17c04:	str	r1, [sp, #12]
   17c08:	ldr	r0, [fp, #-8]
   17c0c:	bl	10fa4 <gettext@plt>
   17c10:	str	r0, [sp, #8]
   17c14:	ldr	r0, [sp, #8]
   17c18:	ldr	r1, [fp, #-8]
   17c1c:	cmp	r0, r1
   17c20:	beq	17c30 <__assert_fail@plt+0x6b90>
   17c24:	ldr	r0, [sp, #8]
   17c28:	str	r0, [fp, #-4]
   17c2c:	b	17cfc <__assert_fail@plt+0x6c5c>
   17c30:	bl	1df24 <__assert_fail@plt+0xce84>
   17c34:	str	r0, [sp, #4]
   17c38:	ldr	r0, [sp, #4]
   17c3c:	movw	r1, #5310	; 0x14be
   17c40:	movt	r1, #2
   17c44:	bl	1d920 <__assert_fail@plt+0xc880>
   17c48:	cmp	r0, #0
   17c4c:	bne	17c84 <__assert_fail@plt+0x6be4>
   17c50:	ldr	r0, [fp, #-8]
   17c54:	ldrb	r0, [r0]
   17c58:	cmp	r0, #96	; 0x60
   17c5c:	movw	r0, #0
   17c60:	moveq	r0, #1
   17c64:	tst	r0, #1
   17c68:	movw	r0, #5320	; 0x14c8
   17c6c:	movt	r0, #2
   17c70:	movw	r1, #5316	; 0x14c4
   17c74:	movt	r1, #2
   17c78:	movne	r0, r1
   17c7c:	str	r0, [fp, #-4]
   17c80:	b	17cfc <__assert_fail@plt+0x6c5c>
   17c84:	ldr	r0, [sp, #4]
   17c88:	movw	r1, #5324	; 0x14cc
   17c8c:	movt	r1, #2
   17c90:	bl	1d920 <__assert_fail@plt+0xc880>
   17c94:	cmp	r0, #0
   17c98:	bne	17cd0 <__assert_fail@plt+0x6c30>
   17c9c:	ldr	r0, [fp, #-8]
   17ca0:	ldrb	r0, [r0]
   17ca4:	cmp	r0, #96	; 0x60
   17ca8:	movw	r0, #0
   17cac:	moveq	r0, #1
   17cb0:	tst	r0, #1
   17cb4:	movw	r0, #5336	; 0x14d8
   17cb8:	movt	r0, #2
   17cbc:	movw	r1, #5332	; 0x14d4
   17cc0:	movt	r1, #2
   17cc4:	movne	r0, r1
   17cc8:	str	r0, [fp, #-4]
   17ccc:	b	17cfc <__assert_fail@plt+0x6c5c>
   17cd0:	ldr	r0, [sp, #12]
   17cd4:	cmp	r0, #9
   17cd8:	movw	r0, #0
   17cdc:	moveq	r0, #1
   17ce0:	tst	r0, #1
   17ce4:	movw	r0, #3024	; 0xbd0
   17ce8:	movt	r0, #2
   17cec:	movw	r1, #5306	; 0x14ba
   17cf0:	movt	r1, #2
   17cf4:	movne	r0, r1
   17cf8:	str	r0, [fp, #-4]
   17cfc:	ldr	r0, [fp, #-4]
   17d00:	mov	sp, fp
   17d04:	pop	{fp, pc}
   17d08:	push	{fp, lr}
   17d0c:	mov	fp, sp
   17d10:	sub	sp, sp, #24
   17d14:	str	r0, [fp, #-8]
   17d18:	str	r1, [sp, #12]
   17d1c:	str	r2, [sp, #8]
   17d20:	ldr	r0, [fp, #-8]
   17d24:	ldr	r1, [sp, #12]
   17d28:	ldr	r2, [sp, #8]
   17d2c:	bl	10e6c <read@plt>
   17d30:	str	r0, [sp, #4]
   17d34:	ldr	r0, [sp, #4]
   17d38:	movw	r1, #0
   17d3c:	cmp	r1, r0
   17d40:	bgt	17d50 <__assert_fail@plt+0x6cb0>
   17d44:	ldr	r0, [sp, #4]
   17d48:	str	r0, [fp, #-4]
   17d4c:	b	17da8 <__assert_fail@plt+0x6d08>
   17d50:	bl	10fd4 <__errno_location@plt>
   17d54:	ldr	r0, [r0]
   17d58:	cmp	r0, #4
   17d5c:	bne	17d64 <__assert_fail@plt+0x6cc4>
   17d60:	b	17d20 <__assert_fail@plt+0x6c80>
   17d64:	bl	10fd4 <__errno_location@plt>
   17d68:	ldr	r0, [r0]
   17d6c:	cmp	r0, #22
   17d70:	bne	17d90 <__assert_fail@plt+0x6cf0>
   17d74:	ldr	r0, [pc, #56]	; 17db4 <__assert_fail@plt+0x6d14>
   17d78:	ldr	r1, [sp, #8]
   17d7c:	cmp	r0, r1
   17d80:	bcs	17d90 <__assert_fail@plt+0x6cf0>
   17d84:	ldr	r0, [pc, #40]	; 17db4 <__assert_fail@plt+0x6d14>
   17d88:	str	r0, [sp, #8]
   17d8c:	b	17d9c <__assert_fail@plt+0x6cfc>
   17d90:	ldr	r0, [sp, #4]
   17d94:	str	r0, [fp, #-4]
   17d98:	b	17da8 <__assert_fail@plt+0x6d08>
   17d9c:	b	17da0 <__assert_fail@plt+0x6d00>
   17da0:	b	17da4 <__assert_fail@plt+0x6d04>
   17da4:	b	17d20 <__assert_fail@plt+0x6c80>
   17da8:	ldr	r0, [fp, #-4]
   17dac:	mov	sp, fp
   17db0:	pop	{fp, pc}
   17db4:	svcvc	0x00f00000	; IMB
   17db8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17dbc:	add	fp, sp, #28
   17dc0:	sub	sp, sp, #260	; 0x104
   17dc4:	ldr	ip, [fp, #12]
   17dc8:	ldr	lr, [fp, #8]
   17dcc:	str	r0, [fp, #-32]	; 0xffffffe0
   17dd0:	str	r1, [fp, #-36]	; 0xffffffdc
   17dd4:	str	r2, [fp, #-40]	; 0xffffffd8
   17dd8:	str	r3, [fp, #-44]	; 0xffffffd4
   17ddc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   17de0:	movw	r1, #0
   17de4:	cmp	r0, r1
   17de8:	str	lr, [fp, #-48]	; 0xffffffd0
   17dec:	str	ip, [fp, #-52]	; 0xffffffcc
   17df0:	beq	17e28 <__assert_fail@plt+0x6d88>
   17df4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17df8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   17dfc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   17e00:	ldr	r1, [fp, #-44]	; 0xffffffd4
   17e04:	movw	ip, #5424	; 0x1530
   17e08:	movt	ip, #2
   17e0c:	str	r1, [fp, #-56]	; 0xffffffc8
   17e10:	mov	r1, ip
   17e14:	ldr	ip, [fp, #-56]	; 0xffffffc8
   17e18:	str	ip, [sp]
   17e1c:	bl	10fc8 <fprintf@plt>
   17e20:	str	r0, [fp, #-60]	; 0xffffffc4
   17e24:	b	17e44 <__assert_fail@plt+0x6da4>
   17e28:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17e2c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   17e30:	ldr	r3, [fp, #-44]	; 0xffffffd4
   17e34:	movw	r1, #5436	; 0x153c
   17e38:	movt	r1, #2
   17e3c:	bl	10fc8 <fprintf@plt>
   17e40:	str	r0, [fp, #-64]	; 0xffffffc0
   17e44:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17e48:	movw	r1, #5443	; 0x1543
   17e4c:	movt	r1, #2
   17e50:	str	r0, [fp, #-68]	; 0xffffffbc
   17e54:	mov	r0, r1
   17e58:	bl	10fa4 <gettext@plt>
   17e5c:	movw	r1, #6161	; 0x1811
   17e60:	movt	r1, #2
   17e64:	movw	r3, #2022	; 0x7e6
   17e68:	ldr	lr, [fp, #-68]	; 0xffffffbc
   17e6c:	str	r0, [fp, #-72]	; 0xffffffb8
   17e70:	mov	r0, lr
   17e74:	ldr	r2, [fp, #-72]	; 0xffffffb8
   17e78:	bl	10fc8 <fprintf@plt>
   17e7c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   17e80:	movw	r2, #2762	; 0xaca
   17e84:	movt	r2, #2
   17e88:	str	r0, [fp, #-76]	; 0xffffffb4
   17e8c:	mov	r0, r2
   17e90:	str	r2, [fp, #-80]	; 0xffffffb0
   17e94:	bl	10e30 <fputs_unlocked@plt>
   17e98:	ldr	r1, [fp, #-32]	; 0xffffffe0
   17e9c:	movw	r2, #5447	; 0x1547
   17ea0:	movt	r2, #2
   17ea4:	str	r0, [fp, #-84]	; 0xffffffac
   17ea8:	mov	r0, r2
   17eac:	str	r1, [fp, #-88]	; 0xffffffa8
   17eb0:	bl	10fa4 <gettext@plt>
   17eb4:	movw	r2, #5618	; 0x15f2
   17eb8:	movt	r2, #2
   17ebc:	ldr	r1, [fp, #-88]	; 0xffffffa8
   17ec0:	str	r0, [fp, #-92]	; 0xffffffa4
   17ec4:	mov	r0, r1
   17ec8:	ldr	r1, [fp, #-92]	; 0xffffffa4
   17ecc:	bl	10fc8 <fprintf@plt>
   17ed0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   17ed4:	ldr	r2, [fp, #-80]	; 0xffffffb0
   17ed8:	str	r0, [fp, #-96]	; 0xffffffa0
   17edc:	mov	r0, r2
   17ee0:	bl	10e30 <fputs_unlocked@plt>
   17ee4:	ldr	r1, [fp, #12]
   17ee8:	cmp	r1, #9
   17eec:	str	r0, [fp, #-100]	; 0xffffff9c
   17ef0:	str	r1, [fp, #-104]	; 0xffffff98
   17ef4:	bhi	18334 <__assert_fail@plt+0x7294>
   17ef8:	add	r0, pc, #8
   17efc:	ldr	r1, [fp, #-104]	; 0xffffff98
   17f00:	ldr	r0, [r0, r1, lsl #2]
   17f04:	mov	pc, r0
   17f08:	andeq	r7, r1, r0, lsr pc
   17f0c:	andeq	r7, r1, r4, lsr pc
   17f10:	andeq	r7, r1, r0, ror pc
   17f14:			; <UNDEFINED> instruction: 0x00017fb4
   17f18:	andeq	r8, r1, r0, lsl r0
   17f1c:	andeq	r8, r1, r8, ror r0
   17f20:	andeq	r8, r1, ip, ror #1
   17f24:	andeq	r8, r1, ip, ror #2
   17f28:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   17f2c:	muleq	r1, r0, r2
   17f30:	b	183d4 <__assert_fail@plt+0x7334>
   17f34:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17f38:	movw	r1, #5652	; 0x1614
   17f3c:	movt	r1, #2
   17f40:	str	r0, [fp, #-108]	; 0xffffff94
   17f44:	mov	r0, r1
   17f48:	bl	10fa4 <gettext@plt>
   17f4c:	ldr	r1, [fp, #8]
   17f50:	ldr	r2, [r1]
   17f54:	ldr	r1, [fp, #-108]	; 0xffffff94
   17f58:	str	r0, [fp, #-112]	; 0xffffff90
   17f5c:	mov	r0, r1
   17f60:	ldr	r1, [fp, #-112]	; 0xffffff90
   17f64:	bl	10fc8 <fprintf@plt>
   17f68:	str	r0, [fp, #-116]	; 0xffffff8c
   17f6c:	b	183d4 <__assert_fail@plt+0x7334>
   17f70:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17f74:	movw	r1, #5668	; 0x1624
   17f78:	movt	r1, #2
   17f7c:	str	r0, [fp, #-120]	; 0xffffff88
   17f80:	mov	r0, r1
   17f84:	bl	10fa4 <gettext@plt>
   17f88:	ldr	r1, [fp, #8]
   17f8c:	ldr	r2, [r1]
   17f90:	ldr	r1, [fp, #8]
   17f94:	ldr	r3, [r1, #4]
   17f98:	ldr	r1, [fp, #-120]	; 0xffffff88
   17f9c:	str	r0, [fp, #-124]	; 0xffffff84
   17fa0:	mov	r0, r1
   17fa4:	ldr	r1, [fp, #-124]	; 0xffffff84
   17fa8:	bl	10fc8 <fprintf@plt>
   17fac:	str	r0, [fp, #-128]	; 0xffffff80
   17fb0:	b	183d4 <__assert_fail@plt+0x7334>
   17fb4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17fb8:	movw	r1, #5691	; 0x163b
   17fbc:	movt	r1, #2
   17fc0:	str	r0, [fp, #-132]	; 0xffffff7c
   17fc4:	mov	r0, r1
   17fc8:	bl	10fa4 <gettext@plt>
   17fcc:	ldr	r1, [fp, #8]
   17fd0:	ldr	r2, [r1]
   17fd4:	ldr	r1, [fp, #8]
   17fd8:	ldr	r3, [r1, #4]
   17fdc:	ldr	r1, [fp, #8]
   17fe0:	ldr	r1, [r1, #8]
   17fe4:	ldr	lr, [fp, #-132]	; 0xffffff7c
   17fe8:	str	r0, [fp, #-136]	; 0xffffff78
   17fec:	mov	r0, lr
   17ff0:	ldr	ip, [fp, #-136]	; 0xffffff78
   17ff4:	str	r1, [fp, #-140]	; 0xffffff74
   17ff8:	mov	r1, ip
   17ffc:	ldr	r4, [fp, #-140]	; 0xffffff74
   18000:	str	r4, [sp]
   18004:	bl	10fc8 <fprintf@plt>
   18008:	str	r0, [sp, #144]	; 0x90
   1800c:	b	183d4 <__assert_fail@plt+0x7334>
   18010:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18014:	movw	r1, #5719	; 0x1657
   18018:	movt	r1, #2
   1801c:	str	r0, [sp, #140]	; 0x8c
   18020:	mov	r0, r1
   18024:	bl	10fa4 <gettext@plt>
   18028:	ldr	r1, [fp, #8]
   1802c:	ldr	r2, [r1]
   18030:	ldr	r1, [fp, #8]
   18034:	ldr	r3, [r1, #4]
   18038:	ldr	r1, [fp, #8]
   1803c:	ldr	r1, [r1, #8]
   18040:	ldr	lr, [fp, #8]
   18044:	ldr	lr, [lr, #12]
   18048:	ldr	ip, [sp, #140]	; 0x8c
   1804c:	str	r0, [sp, #136]	; 0x88
   18050:	mov	r0, ip
   18054:	ldr	r4, [sp, #136]	; 0x88
   18058:	str	r1, [sp, #132]	; 0x84
   1805c:	mov	r1, r4
   18060:	ldr	r5, [sp, #132]	; 0x84
   18064:	str	r5, [sp]
   18068:	str	lr, [sp, #4]
   1806c:	bl	10fc8 <fprintf@plt>
   18070:	str	r0, [sp, #128]	; 0x80
   18074:	b	183d4 <__assert_fail@plt+0x7334>
   18078:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1807c:	movw	r1, #5751	; 0x1677
   18080:	movt	r1, #2
   18084:	str	r0, [sp, #124]	; 0x7c
   18088:	mov	r0, r1
   1808c:	bl	10fa4 <gettext@plt>
   18090:	ldr	r1, [fp, #8]
   18094:	ldr	r2, [r1]
   18098:	ldr	r1, [fp, #8]
   1809c:	ldr	r3, [r1, #4]
   180a0:	ldr	r1, [fp, #8]
   180a4:	ldr	r1, [r1, #8]
   180a8:	ldr	lr, [fp, #8]
   180ac:	ldr	lr, [lr, #12]
   180b0:	ldr	ip, [fp, #8]
   180b4:	ldr	ip, [ip, #16]
   180b8:	ldr	r4, [sp, #124]	; 0x7c
   180bc:	str	r0, [sp, #120]	; 0x78
   180c0:	mov	r0, r4
   180c4:	ldr	r5, [sp, #120]	; 0x78
   180c8:	str	r1, [sp, #116]	; 0x74
   180cc:	mov	r1, r5
   180d0:	ldr	r6, [sp, #116]	; 0x74
   180d4:	str	r6, [sp]
   180d8:	str	lr, [sp, #4]
   180dc:	str	ip, [sp, #8]
   180e0:	bl	10fc8 <fprintf@plt>
   180e4:	str	r0, [sp, #112]	; 0x70
   180e8:	b	183d4 <__assert_fail@plt+0x7334>
   180ec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   180f0:	movw	r1, #5787	; 0x169b
   180f4:	movt	r1, #2
   180f8:	str	r0, [sp, #108]	; 0x6c
   180fc:	mov	r0, r1
   18100:	bl	10fa4 <gettext@plt>
   18104:	ldr	r1, [fp, #8]
   18108:	ldr	r2, [r1]
   1810c:	ldr	r1, [fp, #8]
   18110:	ldr	r3, [r1, #4]
   18114:	ldr	r1, [fp, #8]
   18118:	ldr	r1, [r1, #8]
   1811c:	ldr	lr, [fp, #8]
   18120:	ldr	lr, [lr, #12]
   18124:	ldr	ip, [fp, #8]
   18128:	ldr	ip, [ip, #16]
   1812c:	ldr	r4, [fp, #8]
   18130:	ldr	r4, [r4, #20]
   18134:	ldr	r5, [sp, #108]	; 0x6c
   18138:	str	r0, [sp, #104]	; 0x68
   1813c:	mov	r0, r5
   18140:	ldr	r6, [sp, #104]	; 0x68
   18144:	str	r1, [sp, #100]	; 0x64
   18148:	mov	r1, r6
   1814c:	ldr	r7, [sp, #100]	; 0x64
   18150:	str	r7, [sp]
   18154:	str	lr, [sp, #4]
   18158:	str	ip, [sp, #8]
   1815c:	str	r4, [sp, #12]
   18160:	bl	10fc8 <fprintf@plt>
   18164:	str	r0, [sp, #96]	; 0x60
   18168:	b	183d4 <__assert_fail@plt+0x7334>
   1816c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18170:	movw	r1, #5827	; 0x16c3
   18174:	movt	r1, #2
   18178:	str	r0, [sp, #92]	; 0x5c
   1817c:	mov	r0, r1
   18180:	bl	10fa4 <gettext@plt>
   18184:	ldr	r1, [fp, #8]
   18188:	ldr	r2, [r1]
   1818c:	ldr	r1, [fp, #8]
   18190:	ldr	r3, [r1, #4]
   18194:	ldr	r1, [fp, #8]
   18198:	ldr	r1, [r1, #8]
   1819c:	ldr	lr, [fp, #8]
   181a0:	ldr	lr, [lr, #12]
   181a4:	ldr	ip, [fp, #8]
   181a8:	ldr	ip, [ip, #16]
   181ac:	ldr	r4, [fp, #8]
   181b0:	ldr	r4, [r4, #20]
   181b4:	ldr	r5, [fp, #8]
   181b8:	ldr	r5, [r5, #24]
   181bc:	ldr	r6, [sp, #92]	; 0x5c
   181c0:	str	r0, [sp, #88]	; 0x58
   181c4:	mov	r0, r6
   181c8:	ldr	r7, [sp, #88]	; 0x58
   181cc:	str	r1, [sp, #84]	; 0x54
   181d0:	mov	r1, r7
   181d4:	ldr	r8, [sp, #84]	; 0x54
   181d8:	str	r8, [sp]
   181dc:	str	lr, [sp, #4]
   181e0:	str	ip, [sp, #8]
   181e4:	str	r4, [sp, #12]
   181e8:	str	r5, [sp, #16]
   181ec:	bl	10fc8 <fprintf@plt>
   181f0:	str	r0, [sp, #80]	; 0x50
   181f4:	b	183d4 <__assert_fail@plt+0x7334>
   181f8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   181fc:	movw	r1, #5871	; 0x16ef
   18200:	movt	r1, #2
   18204:	str	r0, [sp, #76]	; 0x4c
   18208:	mov	r0, r1
   1820c:	bl	10fa4 <gettext@plt>
   18210:	ldr	r1, [fp, #8]
   18214:	ldr	r2, [r1]
   18218:	ldr	r1, [fp, #8]
   1821c:	ldr	r3, [r1, #4]
   18220:	ldr	r1, [fp, #8]
   18224:	ldr	r1, [r1, #8]
   18228:	ldr	lr, [fp, #8]
   1822c:	ldr	lr, [lr, #12]
   18230:	ldr	ip, [fp, #8]
   18234:	ldr	ip, [ip, #16]
   18238:	ldr	r4, [fp, #8]
   1823c:	ldr	r4, [r4, #20]
   18240:	ldr	r5, [fp, #8]
   18244:	ldr	r5, [r5, #24]
   18248:	ldr	r6, [fp, #8]
   1824c:	ldr	r6, [r6, #28]
   18250:	ldr	r7, [sp, #76]	; 0x4c
   18254:	str	r0, [sp, #72]	; 0x48
   18258:	mov	r0, r7
   1825c:	ldr	r8, [sp, #72]	; 0x48
   18260:	str	r1, [sp, #68]	; 0x44
   18264:	mov	r1, r8
   18268:	ldr	r9, [sp, #68]	; 0x44
   1826c:	str	r9, [sp]
   18270:	str	lr, [sp, #4]
   18274:	str	ip, [sp, #8]
   18278:	str	r4, [sp, #12]
   1827c:	str	r5, [sp, #16]
   18280:	str	r6, [sp, #20]
   18284:	bl	10fc8 <fprintf@plt>
   18288:	str	r0, [sp, #64]	; 0x40
   1828c:	b	183d4 <__assert_fail@plt+0x7334>
   18290:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18294:	movw	r1, #5919	; 0x171f
   18298:	movt	r1, #2
   1829c:	str	r0, [sp, #60]	; 0x3c
   182a0:	mov	r0, r1
   182a4:	bl	10fa4 <gettext@plt>
   182a8:	ldr	r1, [fp, #8]
   182ac:	ldr	r2, [r1]
   182b0:	ldr	r1, [fp, #8]
   182b4:	ldr	r3, [r1, #4]
   182b8:	ldr	r1, [fp, #8]
   182bc:	ldr	r1, [r1, #8]
   182c0:	ldr	lr, [fp, #8]
   182c4:	ldr	lr, [lr, #12]
   182c8:	ldr	ip, [fp, #8]
   182cc:	ldr	ip, [ip, #16]
   182d0:	ldr	r4, [fp, #8]
   182d4:	ldr	r4, [r4, #20]
   182d8:	ldr	r5, [fp, #8]
   182dc:	ldr	r5, [r5, #24]
   182e0:	ldr	r6, [fp, #8]
   182e4:	ldr	r6, [r6, #28]
   182e8:	ldr	r7, [fp, #8]
   182ec:	ldr	r7, [r7, #32]
   182f0:	ldr	r8, [sp, #60]	; 0x3c
   182f4:	str	r0, [sp, #56]	; 0x38
   182f8:	mov	r0, r8
   182fc:	ldr	r9, [sp, #56]	; 0x38
   18300:	str	r1, [sp, #52]	; 0x34
   18304:	mov	r1, r9
   18308:	ldr	sl, [sp, #52]	; 0x34
   1830c:	str	sl, [sp]
   18310:	str	lr, [sp, #4]
   18314:	str	ip, [sp, #8]
   18318:	str	r4, [sp, #12]
   1831c:	str	r5, [sp, #16]
   18320:	str	r6, [sp, #20]
   18324:	str	r7, [sp, #24]
   18328:	bl	10fc8 <fprintf@plt>
   1832c:	str	r0, [sp, #48]	; 0x30
   18330:	b	183d4 <__assert_fail@plt+0x7334>
   18334:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18338:	movw	r1, #5971	; 0x1753
   1833c:	movt	r1, #2
   18340:	str	r0, [sp, #44]	; 0x2c
   18344:	mov	r0, r1
   18348:	bl	10fa4 <gettext@plt>
   1834c:	ldr	r1, [fp, #8]
   18350:	ldr	r2, [r1]
   18354:	ldr	r1, [fp, #8]
   18358:	ldr	r3, [r1, #4]
   1835c:	ldr	r1, [fp, #8]
   18360:	ldr	r1, [r1, #8]
   18364:	ldr	lr, [fp, #8]
   18368:	ldr	lr, [lr, #12]
   1836c:	ldr	ip, [fp, #8]
   18370:	ldr	ip, [ip, #16]
   18374:	ldr	r4, [fp, #8]
   18378:	ldr	r4, [r4, #20]
   1837c:	ldr	r5, [fp, #8]
   18380:	ldr	r5, [r5, #24]
   18384:	ldr	r6, [fp, #8]
   18388:	ldr	r6, [r6, #28]
   1838c:	ldr	r7, [fp, #8]
   18390:	ldr	r7, [r7, #32]
   18394:	ldr	r8, [sp, #44]	; 0x2c
   18398:	str	r0, [sp, #40]	; 0x28
   1839c:	mov	r0, r8
   183a0:	ldr	r9, [sp, #40]	; 0x28
   183a4:	str	r1, [sp, #36]	; 0x24
   183a8:	mov	r1, r9
   183ac:	ldr	sl, [sp, #36]	; 0x24
   183b0:	str	sl, [sp]
   183b4:	str	lr, [sp, #4]
   183b8:	str	ip, [sp, #8]
   183bc:	str	r4, [sp, #12]
   183c0:	str	r5, [sp, #16]
   183c4:	str	r6, [sp, #20]
   183c8:	str	r7, [sp, #24]
   183cc:	bl	10fc8 <fprintf@plt>
   183d0:	str	r0, [sp, #32]
   183d4:	sub	sp, fp, #28
   183d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   183dc:	push	{fp, lr}
   183e0:	mov	fp, sp
   183e4:	sub	sp, sp, #32
   183e8:	ldr	ip, [fp, #8]
   183ec:	str	r0, [fp, #-4]
   183f0:	str	r1, [fp, #-8]
   183f4:	str	r2, [fp, #-12]
   183f8:	str	r3, [sp, #16]
   183fc:	movw	r0, #0
   18400:	str	r0, [sp, #12]
   18404:	str	ip, [sp, #8]
   18408:	ldr	r0, [fp, #8]
   1840c:	ldr	r1, [sp, #12]
   18410:	add	r0, r0, r1, lsl #2
   18414:	ldr	r0, [r0]
   18418:	movw	r1, #0
   1841c:	cmp	r0, r1
   18420:	beq	18438 <__assert_fail@plt+0x7398>
   18424:	b	18428 <__assert_fail@plt+0x7388>
   18428:	ldr	r0, [sp, #12]
   1842c:	add	r0, r0, #1
   18430:	str	r0, [sp, #12]
   18434:	b	18408 <__assert_fail@plt+0x7368>
   18438:	ldr	r0, [fp, #-4]
   1843c:	ldr	r1, [fp, #-8]
   18440:	ldr	r2, [fp, #-12]
   18444:	ldr	r3, [sp, #16]
   18448:	ldr	ip, [fp, #8]
   1844c:	ldr	lr, [sp, #12]
   18450:	str	ip, [sp]
   18454:	str	lr, [sp, #4]
   18458:	bl	17db8 <__assert_fail@plt+0x6d18>
   1845c:	mov	sp, fp
   18460:	pop	{fp, pc}
   18464:	push	{fp, lr}
   18468:	mov	fp, sp
   1846c:	sub	sp, sp, #80	; 0x50
   18470:	ldr	ip, [fp, #8]
   18474:	str	ip, [fp, #-4]
   18478:	str	r0, [fp, #-8]
   1847c:	str	r1, [fp, #-12]
   18480:	str	r2, [fp, #-16]
   18484:	str	r3, [fp, #-20]	; 0xffffffec
   18488:	movw	r0, #0
   1848c:	str	r0, [fp, #-24]	; 0xffffffe8
   18490:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18494:	cmp	r0, #10
   18498:	movw	r0, #0
   1849c:	str	r0, [sp, #12]
   184a0:	bcs	184d8 <__assert_fail@plt+0x7438>
   184a4:	ldr	r0, [fp, #-4]
   184a8:	add	r1, r0, #4
   184ac:	str	r1, [fp, #-4]
   184b0:	ldr	r0, [r0]
   184b4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   184b8:	add	r2, sp, #16
   184bc:	add	r1, r2, r1, lsl #2
   184c0:	str	r0, [r1]
   184c4:	movw	r1, #0
   184c8:	cmp	r0, r1
   184cc:	movw	r0, #0
   184d0:	movne	r0, #1
   184d4:	str	r0, [sp, #12]
   184d8:	ldr	r0, [sp, #12]
   184dc:	tst	r0, #1
   184e0:	beq	184f8 <__assert_fail@plt+0x7458>
   184e4:	b	184e8 <__assert_fail@plt+0x7448>
   184e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   184ec:	add	r0, r0, #1
   184f0:	str	r0, [fp, #-24]	; 0xffffffe8
   184f4:	b	18490 <__assert_fail@plt+0x73f0>
   184f8:	add	r0, sp, #16
   184fc:	ldr	r1, [fp, #-8]
   18500:	ldr	r2, [fp, #-12]
   18504:	ldr	r3, [fp, #-16]
   18508:	ldr	ip, [fp, #-20]	; 0xffffffec
   1850c:	ldr	lr, [fp, #-24]	; 0xffffffe8
   18510:	str	r0, [sp, #8]
   18514:	mov	r0, r1
   18518:	mov	r1, r2
   1851c:	mov	r2, r3
   18520:	mov	r3, ip
   18524:	ldr	ip, [sp, #8]
   18528:	str	ip, [sp]
   1852c:	str	lr, [sp, #4]
   18530:	bl	17db8 <__assert_fail@plt+0x6d18>
   18534:	mov	sp, fp
   18538:	pop	{fp, pc}
   1853c:	push	{fp, lr}
   18540:	mov	fp, sp
   18544:	sub	sp, sp, #32
   18548:	str	r0, [fp, #-4]
   1854c:	str	r1, [fp, #-8]
   18550:	str	r2, [fp, #-12]
   18554:	str	r3, [sp, #16]
   18558:	add	r0, fp, #8
   1855c:	str	r0, [sp, #12]
   18560:	ldr	r0, [fp, #-4]
   18564:	ldr	r1, [fp, #-8]
   18568:	ldr	r2, [fp, #-12]
   1856c:	ldr	r3, [sp, #16]
   18570:	ldr	ip, [sp, #12]
   18574:	mov	lr, sp
   18578:	str	ip, [lr]
   1857c:	bl	18464 <__assert_fail@plt+0x73c4>
   18580:	add	r0, sp, #12
   18584:	str	r0, [sp, #8]
   18588:	mov	sp, fp
   1858c:	pop	{fp, pc}
   18590:	push	{fp, lr}
   18594:	mov	fp, sp
   18598:	sub	sp, sp, #16
   1859c:	movw	r0, #8532	; 0x2154
   185a0:	movt	r0, #3
   185a4:	ldr	r1, [r0]
   185a8:	movw	r0, #2762	; 0xaca
   185ac:	movt	r0, #2
   185b0:	bl	10e30 <fputs_unlocked@plt>
   185b4:	movw	r1, #6031	; 0x178f
   185b8:	movt	r1, #2
   185bc:	str	r0, [fp, #-4]
   185c0:	mov	r0, r1
   185c4:	bl	10fa4 <gettext@plt>
   185c8:	movw	r1, #6051	; 0x17a3
   185cc:	movt	r1, #2
   185d0:	bl	10e60 <printf@plt>
   185d4:	movw	r1, #6073	; 0x17b9
   185d8:	movt	r1, #2
   185dc:	str	r0, [sp, #8]
   185e0:	mov	r0, r1
   185e4:	bl	10fa4 <gettext@plt>
   185e8:	movw	r1, #2075	; 0x81b
   185ec:	movt	r1, #2
   185f0:	movw	r2, #2571	; 0xa0b
   185f4:	movt	r2, #2
   185f8:	bl	10e60 <printf@plt>
   185fc:	movw	r1, #6093	; 0x17cd
   18600:	movt	r1, #2
   18604:	str	r0, [sp, #4]
   18608:	mov	r0, r1
   1860c:	bl	10fa4 <gettext@plt>
   18610:	movw	r1, #6132	; 0x17f4
   18614:	movt	r1, #2
   18618:	bl	10e60 <printf@plt>
   1861c:	str	r0, [sp]
   18620:	mov	sp, fp
   18624:	pop	{fp, pc}
   18628:	push	{fp, lr}
   1862c:	mov	fp, sp
   18630:	sub	sp, sp, #16
   18634:	str	r0, [fp, #-4]
   18638:	str	r1, [sp, #8]
   1863c:	str	r2, [sp, #4]
   18640:	ldr	r0, [fp, #-4]
   18644:	ldr	r1, [sp, #8]
   18648:	ldr	r2, [sp, #4]
   1864c:	bl	18658 <__assert_fail@plt+0x75b8>
   18650:	mov	sp, fp
   18654:	pop	{fp, pc}
   18658:	push	{fp, lr}
   1865c:	mov	fp, sp
   18660:	sub	sp, sp, #16
   18664:	str	r0, [fp, #-4]
   18668:	str	r1, [sp, #8]
   1866c:	str	r2, [sp, #4]
   18670:	ldr	r0, [fp, #-4]
   18674:	ldr	r1, [sp, #8]
   18678:	ldr	r2, [sp, #4]
   1867c:	bl	1e030 <__assert_fail@plt+0xcf90>
   18680:	str	r0, [sp]
   18684:	ldr	r0, [sp]
   18688:	movw	r1, #0
   1868c:	cmp	r0, r1
   18690:	bne	186c0 <__assert_fail@plt+0x7620>
   18694:	ldr	r0, [fp, #-4]
   18698:	movw	r1, #0
   1869c:	cmp	r0, r1
   186a0:	beq	186bc <__assert_fail@plt+0x761c>
   186a4:	ldr	r0, [sp, #8]
   186a8:	cmp	r0, #0
   186ac:	beq	186c0 <__assert_fail@plt+0x7620>
   186b0:	ldr	r0, [sp, #4]
   186b4:	cmp	r0, #0
   186b8:	beq	186c0 <__assert_fail@plt+0x7620>
   186bc:	bl	1b4a8 <__assert_fail@plt+0xa408>
   186c0:	ldr	r0, [sp]
   186c4:	mov	sp, fp
   186c8:	pop	{fp, pc}
   186cc:	push	{fp, lr}
   186d0:	mov	fp, sp
   186d4:	sub	sp, sp, #8
   186d8:	str	r0, [sp, #4]
   186dc:	ldr	r0, [sp, #4]
   186e0:	bl	1d7cc <__assert_fail@plt+0xc72c>
   186e4:	bl	186f0 <__assert_fail@plt+0x7650>
   186e8:	mov	sp, fp
   186ec:	pop	{fp, pc}
   186f0:	push	{fp, lr}
   186f4:	mov	fp, sp
   186f8:	sub	sp, sp, #8
   186fc:	str	r0, [sp, #4]
   18700:	ldr	r0, [sp, #4]
   18704:	movw	r1, #0
   18708:	cmp	r0, r1
   1870c:	bne	18714 <__assert_fail@plt+0x7674>
   18710:	bl	1b4a8 <__assert_fail@plt+0xa408>
   18714:	ldr	r0, [sp, #4]
   18718:	mov	sp, fp
   1871c:	pop	{fp, pc}
   18720:	push	{fp, lr}
   18724:	mov	fp, sp
   18728:	sub	sp, sp, #8
   1872c:	str	r0, [sp, #4]
   18730:	ldr	r0, [sp, #4]
   18734:	bl	1dd6c <__assert_fail@plt+0xcccc>
   18738:	bl	186f0 <__assert_fail@plt+0x7650>
   1873c:	mov	sp, fp
   18740:	pop	{fp, pc}
   18744:	push	{fp, lr}
   18748:	mov	fp, sp
   1874c:	sub	sp, sp, #8
   18750:	str	r0, [sp, #4]
   18754:	ldr	r0, [sp, #4]
   18758:	bl	186cc <__assert_fail@plt+0x762c>
   1875c:	mov	sp, fp
   18760:	pop	{fp, pc}
   18764:	push	{fp, lr}
   18768:	mov	fp, sp
   1876c:	sub	sp, sp, #16
   18770:	str	r0, [fp, #-4]
   18774:	str	r1, [sp, #8]
   18778:	ldr	r0, [fp, #-4]
   1877c:	ldr	r1, [sp, #8]
   18780:	bl	1d83c <__assert_fail@plt+0xc79c>
   18784:	str	r0, [sp, #4]
   18788:	ldr	r0, [sp, #4]
   1878c:	movw	r1, #0
   18790:	cmp	r0, r1
   18794:	bne	187b8 <__assert_fail@plt+0x7718>
   18798:	ldr	r0, [fp, #-4]
   1879c:	movw	r1, #0
   187a0:	cmp	r0, r1
   187a4:	beq	187b4 <__assert_fail@plt+0x7714>
   187a8:	ldr	r0, [sp, #8]
   187ac:	cmp	r0, #0
   187b0:	beq	187b8 <__assert_fail@plt+0x7718>
   187b4:	bl	1b4a8 <__assert_fail@plt+0xa408>
   187b8:	ldr	r0, [sp, #4]
   187bc:	mov	sp, fp
   187c0:	pop	{fp, pc}
   187c4:	push	{fp, lr}
   187c8:	mov	fp, sp
   187cc:	sub	sp, sp, #8
   187d0:	str	r0, [sp, #4]
   187d4:	str	r1, [sp]
   187d8:	ldr	r0, [sp, #4]
   187dc:	ldr	r1, [sp]
   187e0:	bl	1ddac <__assert_fail@plt+0xcd0c>
   187e4:	bl	186f0 <__assert_fail@plt+0x7650>
   187e8:	mov	sp, fp
   187ec:	pop	{fp, pc}
   187f0:	push	{fp, lr}
   187f4:	mov	fp, sp
   187f8:	sub	sp, sp, #16
   187fc:	str	r0, [fp, #-4]
   18800:	str	r1, [sp, #8]
   18804:	str	r2, [sp, #4]
   18808:	ldr	r0, [fp, #-4]
   1880c:	ldr	r1, [sp, #8]
   18810:	ldr	r2, [sp, #4]
   18814:	bl	1dea4 <__assert_fail@plt+0xce04>
   18818:	bl	186f0 <__assert_fail@plt+0x7650>
   1881c:	mov	sp, fp
   18820:	pop	{fp, pc}
   18824:	push	{fp, lr}
   18828:	mov	fp, sp
   1882c:	sub	sp, sp, #8
   18830:	str	r0, [sp, #4]
   18834:	str	r1, [sp]
   18838:	ldr	r1, [sp, #4]
   1883c:	ldr	r2, [sp]
   18840:	movw	r0, #0
   18844:	bl	18658 <__assert_fail@plt+0x75b8>
   18848:	mov	sp, fp
   1884c:	pop	{fp, pc}
   18850:	push	{fp, lr}
   18854:	mov	fp, sp
   18858:	sub	sp, sp, #8
   1885c:	str	r0, [sp, #4]
   18860:	str	r1, [sp]
   18864:	ldr	r1, [sp, #4]
   18868:	ldr	r2, [sp]
   1886c:	movw	r0, #0
   18870:	bl	187f0 <__assert_fail@plt+0x7750>
   18874:	mov	sp, fp
   18878:	pop	{fp, pc}
   1887c:	push	{fp, lr}
   18880:	mov	fp, sp
   18884:	sub	sp, sp, #8
   18888:	str	r0, [sp, #4]
   1888c:	str	r1, [sp]
   18890:	ldr	r0, [sp, #4]
   18894:	ldr	r1, [sp]
   18898:	movw	r2, #1
   1889c:	bl	188a8 <__assert_fail@plt+0x7808>
   188a0:	mov	sp, fp
   188a4:	pop	{fp, pc}
   188a8:	push	{fp, lr}
   188ac:	mov	fp, sp
   188b0:	sub	sp, sp, #16
   188b4:	str	r0, [fp, #-4]
   188b8:	str	r1, [sp, #8]
   188bc:	str	r2, [sp, #4]
   188c0:	ldr	r0, [sp, #8]
   188c4:	ldr	r0, [r0]
   188c8:	str	r0, [sp]
   188cc:	ldr	r0, [fp, #-4]
   188d0:	movw	r1, #0
   188d4:	cmp	r0, r1
   188d8:	bne	18924 <__assert_fail@plt+0x7884>
   188dc:	ldr	r0, [sp]
   188e0:	cmp	r0, #0
   188e4:	bne	18920 <__assert_fail@plt+0x7880>
   188e8:	ldr	r0, [sp, #4]
   188ec:	movw	r1, #64	; 0x40
   188f0:	udiv	r0, r1, r0
   188f4:	str	r0, [sp]
   188f8:	ldr	r0, [sp]
   188fc:	cmp	r0, #0
   18900:	movw	r0, #0
   18904:	movne	r0, #1
   18908:	mvn	r1, #0
   1890c:	eor	r0, r0, r1
   18910:	and	r0, r0, #1
   18914:	ldr	r1, [sp]
   18918:	add	r0, r1, r0
   1891c:	str	r0, [sp]
   18920:	b	18954 <__assert_fail@plt+0x78b4>
   18924:	ldr	r0, [sp]
   18928:	ldr	r1, [sp]
   1892c:	lsr	r1, r1, #1
   18930:	add	r1, r1, #1
   18934:	adds	r0, r0, r1
   18938:	mov	r1, #0
   1893c:	adc	r1, r1, #0
   18940:	str	r0, [sp]
   18944:	tst	r1, #1
   18948:	beq	18950 <__assert_fail@plt+0x78b0>
   1894c:	bl	1b4a8 <__assert_fail@plt+0xa408>
   18950:	b	18954 <__assert_fail@plt+0x78b4>
   18954:	ldr	r0, [fp, #-4]
   18958:	ldr	r1, [sp]
   1895c:	ldr	r2, [sp, #4]
   18960:	bl	18658 <__assert_fail@plt+0x75b8>
   18964:	str	r0, [fp, #-4]
   18968:	ldr	r0, [sp]
   1896c:	ldr	r1, [sp, #8]
   18970:	str	r0, [r1]
   18974:	ldr	r0, [fp, #-4]
   18978:	mov	sp, fp
   1897c:	pop	{fp, pc}
   18980:	push	{fp, lr}
   18984:	mov	fp, sp
   18988:	sub	sp, sp, #376	; 0x178
   1898c:	ldr	ip, [fp, #8]
   18990:	str	r0, [fp, #-4]
   18994:	str	r1, [fp, #-8]
   18998:	str	r2, [fp, #-12]
   1899c:	str	r3, [fp, #-16]
   189a0:	ldr	r0, [fp, #-8]
   189a4:	ldr	r0, [r0]
   189a8:	str	r0, [fp, #-20]	; 0xffffffec
   189ac:	ldr	r0, [fp, #-20]	; 0xffffffec
   189b0:	ldr	r1, [fp, #-20]	; 0xffffffec
   189b4:	asr	r1, r1, #1
   189b8:	add	r1, r0, r1
   189bc:	mov	r2, #1
   189c0:	cmp	r1, r0
   189c4:	movwvc	r2, #0
   189c8:	str	r1, [fp, #-24]	; 0xffffffe8
   189cc:	tst	r2, #1
   189d0:	str	ip, [fp, #-36]	; 0xffffffdc
   189d4:	beq	189e0 <__assert_fail@plt+0x7940>
   189d8:	ldr	r0, [pc, #4044]	; 199ac <__assert_fail@plt+0x890c>
   189dc:	str	r0, [fp, #-24]	; 0xffffffe8
   189e0:	ldr	r0, [fp, #-16]
   189e4:	movw	r1, #0
   189e8:	cmp	r1, r0
   189ec:	bgt	18a08 <__assert_fail@plt+0x7968>
   189f0:	ldr	r0, [fp, #-16]
   189f4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   189f8:	cmp	r0, r1
   189fc:	bge	18a08 <__assert_fail@plt+0x7968>
   18a00:	ldr	r0, [fp, #-16]
   18a04:	str	r0, [fp, #-24]	; 0xffffffe8
   18a08:	b	18de0 <__assert_fail@plt+0x7d40>
   18a0c:	b	18a10 <__assert_fail@plt+0x7970>
   18a10:	ldr	r0, [fp, #8]
   18a14:	cmp	r0, #0
   18a18:	bge	18b2c <__assert_fail@plt+0x7a8c>
   18a1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18a20:	cmp	r0, #0
   18a24:	bge	18ab0 <__assert_fail@plt+0x7a10>
   18a28:	b	18a2c <__assert_fail@plt+0x798c>
   18a2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18a30:	ldr	r1, [fp, #8]
   18a34:	movw	r2, #127	; 0x7f
   18a38:	sdiv	r1, r2, r1
   18a3c:	cmp	r0, r1
   18a40:	blt	18bcc <__assert_fail@plt+0x7b2c>
   18a44:	b	18be4 <__assert_fail@plt+0x7b44>
   18a48:	b	18a4c <__assert_fail@plt+0x79ac>
   18a4c:	ldr	r0, [pc, #4076]	; 19a40 <__assert_fail@plt+0x89a0>
   18a50:	ldr	r1, [fp, #8]
   18a54:	cmp	r1, r0
   18a58:	blt	18a70 <__assert_fail@plt+0x79d0>
   18a5c:	b	18a7c <__assert_fail@plt+0x79dc>
   18a60:	ldr	r0, [fp, #8]
   18a64:	movw	r1, #0
   18a68:	cmp	r1, r0
   18a6c:	bge	18a7c <__assert_fail@plt+0x79dc>
   18a70:	movw	r0, #0
   18a74:	str	r0, [fp, #-40]	; 0xffffffd8
   18a78:	b	18a94 <__assert_fail@plt+0x79f4>
   18a7c:	ldr	r0, [fp, #8]
   18a80:	movw	r1, #0
   18a84:	sub	r0, r1, r0
   18a88:	movw	r1, #127	; 0x7f
   18a8c:	sdiv	r0, r1, r0
   18a90:	str	r0, [fp, #-40]	; 0xffffffd8
   18a94:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18a98:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18a9c:	mvn	r2, #0
   18aa0:	sub	r1, r2, r1
   18aa4:	cmp	r0, r1
   18aa8:	ble	18bcc <__assert_fail@plt+0x7b2c>
   18aac:	b	18be4 <__assert_fail@plt+0x7b44>
   18ab0:	b	18ab4 <__assert_fail@plt+0x7a14>
   18ab4:	b	18b10 <__assert_fail@plt+0x7a70>
   18ab8:	b	18b10 <__assert_fail@plt+0x7a70>
   18abc:	ldr	r0, [fp, #8]
   18ac0:	cmn	r0, #1
   18ac4:	bne	18b10 <__assert_fail@plt+0x7a70>
   18ac8:	b	18acc <__assert_fail@plt+0x7a2c>
   18acc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18ad0:	mvn	r1, #127	; 0x7f
   18ad4:	add	r0, r0, r1
   18ad8:	movw	r1, #0
   18adc:	cmp	r1, r0
   18ae0:	blt	18bcc <__assert_fail@plt+0x7b2c>
   18ae4:	b	18be4 <__assert_fail@plt+0x7b44>
   18ae8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18aec:	movw	r1, #0
   18af0:	cmp	r1, r0
   18af4:	bge	18be4 <__assert_fail@plt+0x7b44>
   18af8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18afc:	sub	r0, r0, #1
   18b00:	movw	r1, #127	; 0x7f
   18b04:	cmp	r1, r0
   18b08:	blt	18bcc <__assert_fail@plt+0x7b2c>
   18b0c:	b	18be4 <__assert_fail@plt+0x7b44>
   18b10:	ldr	r0, [fp, #8]
   18b14:	mvn	r1, #127	; 0x7f
   18b18:	sdiv	r0, r1, r0
   18b1c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18b20:	cmp	r0, r1
   18b24:	blt	18bcc <__assert_fail@plt+0x7b2c>
   18b28:	b	18be4 <__assert_fail@plt+0x7b44>
   18b2c:	ldr	r0, [fp, #8]
   18b30:	cmp	r0, #0
   18b34:	bne	18b3c <__assert_fail@plt+0x7a9c>
   18b38:	b	18be4 <__assert_fail@plt+0x7b44>
   18b3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18b40:	cmp	r0, #0
   18b44:	bge	18bb4 <__assert_fail@plt+0x7b14>
   18b48:	b	18b4c <__assert_fail@plt+0x7aac>
   18b4c:	b	18b98 <__assert_fail@plt+0x7af8>
   18b50:	b	18b98 <__assert_fail@plt+0x7af8>
   18b54:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18b58:	cmn	r0, #1
   18b5c:	bne	18b98 <__assert_fail@plt+0x7af8>
   18b60:	b	18b64 <__assert_fail@plt+0x7ac4>
   18b64:	ldr	r0, [fp, #8]
   18b68:	mvn	r1, #127	; 0x7f
   18b6c:	add	r0, r0, r1
   18b70:	movw	r1, #0
   18b74:	cmp	r1, r0
   18b78:	blt	18bcc <__assert_fail@plt+0x7b2c>
   18b7c:	b	18be4 <__assert_fail@plt+0x7b44>
   18b80:	ldr	r0, [fp, #8]
   18b84:	sub	r0, r0, #1
   18b88:	movw	r1, #127	; 0x7f
   18b8c:	cmp	r1, r0
   18b90:	blt	18bcc <__assert_fail@plt+0x7b2c>
   18b94:	b	18be4 <__assert_fail@plt+0x7b44>
   18b98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18b9c:	mvn	r1, #127	; 0x7f
   18ba0:	sdiv	r0, r1, r0
   18ba4:	ldr	r1, [fp, #8]
   18ba8:	cmp	r0, r1
   18bac:	blt	18bcc <__assert_fail@plt+0x7b2c>
   18bb0:	b	18be4 <__assert_fail@plt+0x7b44>
   18bb4:	ldr	r0, [fp, #8]
   18bb8:	movw	r1, #127	; 0x7f
   18bbc:	sdiv	r0, r1, r0
   18bc0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18bc4:	cmp	r0, r1
   18bc8:	bge	18be4 <__assert_fail@plt+0x7b44>
   18bcc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18bd0:	ldr	r1, [fp, #8]
   18bd4:	mul	r0, r0, r1
   18bd8:	sxtb	r0, r0
   18bdc:	str	r0, [fp, #-28]	; 0xffffffe4
   18be0:	b	19df8 <__assert_fail@plt+0x8d58>
   18be4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18be8:	ldr	r1, [fp, #8]
   18bec:	mul	r0, r0, r1
   18bf0:	sxtb	r0, r0
   18bf4:	str	r0, [fp, #-28]	; 0xffffffe4
   18bf8:	b	19e08 <__assert_fail@plt+0x8d68>
   18bfc:	ldr	r0, [fp, #8]
   18c00:	cmp	r0, #0
   18c04:	bge	18d14 <__assert_fail@plt+0x7c74>
   18c08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18c0c:	cmp	r0, #0
   18c10:	bge	18c9c <__assert_fail@plt+0x7bfc>
   18c14:	b	18c18 <__assert_fail@plt+0x7b78>
   18c18:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18c1c:	ldr	r1, [fp, #8]
   18c20:	movw	r2, #255	; 0xff
   18c24:	sdiv	r1, r2, r1
   18c28:	cmp	r0, r1
   18c2c:	blt	18db0 <__assert_fail@plt+0x7d10>
   18c30:	b	18dc8 <__assert_fail@plt+0x7d28>
   18c34:	b	18c38 <__assert_fail@plt+0x7b98>
   18c38:	ldr	r0, [pc, #3584]	; 19a40 <__assert_fail@plt+0x89a0>
   18c3c:	ldr	r1, [fp, #8]
   18c40:	cmp	r1, r0
   18c44:	blt	18c5c <__assert_fail@plt+0x7bbc>
   18c48:	b	18c68 <__assert_fail@plt+0x7bc8>
   18c4c:	ldr	r0, [fp, #8]
   18c50:	movw	r1, #0
   18c54:	cmp	r1, r0
   18c58:	bge	18c68 <__assert_fail@plt+0x7bc8>
   18c5c:	movw	r0, #0
   18c60:	str	r0, [fp, #-44]	; 0xffffffd4
   18c64:	b	18c80 <__assert_fail@plt+0x7be0>
   18c68:	ldr	r0, [fp, #8]
   18c6c:	movw	r1, #0
   18c70:	sub	r0, r1, r0
   18c74:	movw	r1, #255	; 0xff
   18c78:	sdiv	r0, r1, r0
   18c7c:	str	r0, [fp, #-44]	; 0xffffffd4
   18c80:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18c84:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18c88:	mvn	r2, #0
   18c8c:	sub	r1, r2, r1
   18c90:	cmp	r0, r1
   18c94:	ble	18db0 <__assert_fail@plt+0x7d10>
   18c98:	b	18dc8 <__assert_fail@plt+0x7d28>
   18c9c:	b	18ca0 <__assert_fail@plt+0x7c00>
   18ca0:	b	18cf8 <__assert_fail@plt+0x7c58>
   18ca4:	b	18cf8 <__assert_fail@plt+0x7c58>
   18ca8:	ldr	r0, [fp, #8]
   18cac:	cmn	r0, #1
   18cb0:	bne	18cf8 <__assert_fail@plt+0x7c58>
   18cb4:	b	18cb8 <__assert_fail@plt+0x7c18>
   18cb8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18cbc:	add	r0, r0, #0
   18cc0:	movw	r1, #0
   18cc4:	cmp	r1, r0
   18cc8:	blt	18db0 <__assert_fail@plt+0x7d10>
   18ccc:	b	18dc8 <__assert_fail@plt+0x7d28>
   18cd0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18cd4:	movw	r1, #0
   18cd8:	cmp	r1, r0
   18cdc:	bge	18dc8 <__assert_fail@plt+0x7d28>
   18ce0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18ce4:	sub	r0, r0, #1
   18ce8:	mvn	r1, #0
   18cec:	cmp	r1, r0
   18cf0:	blt	18db0 <__assert_fail@plt+0x7d10>
   18cf4:	b	18dc8 <__assert_fail@plt+0x7d28>
   18cf8:	ldr	r0, [fp, #8]
   18cfc:	movw	r1, #0
   18d00:	sdiv	r0, r1, r0
   18d04:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18d08:	cmp	r0, r1
   18d0c:	blt	18db0 <__assert_fail@plt+0x7d10>
   18d10:	b	18dc8 <__assert_fail@plt+0x7d28>
   18d14:	ldr	r0, [fp, #8]
   18d18:	cmp	r0, #0
   18d1c:	bne	18d24 <__assert_fail@plt+0x7c84>
   18d20:	b	18dc8 <__assert_fail@plt+0x7d28>
   18d24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18d28:	cmp	r0, #0
   18d2c:	bge	18d98 <__assert_fail@plt+0x7cf8>
   18d30:	b	18d34 <__assert_fail@plt+0x7c94>
   18d34:	b	18d7c <__assert_fail@plt+0x7cdc>
   18d38:	b	18d7c <__assert_fail@plt+0x7cdc>
   18d3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18d40:	cmn	r0, #1
   18d44:	bne	18d7c <__assert_fail@plt+0x7cdc>
   18d48:	b	18d4c <__assert_fail@plt+0x7cac>
   18d4c:	ldr	r0, [fp, #8]
   18d50:	add	r0, r0, #0
   18d54:	movw	r1, #0
   18d58:	cmp	r1, r0
   18d5c:	blt	18db0 <__assert_fail@plt+0x7d10>
   18d60:	b	18dc8 <__assert_fail@plt+0x7d28>
   18d64:	ldr	r0, [fp, #8]
   18d68:	sub	r0, r0, #1
   18d6c:	mvn	r1, #0
   18d70:	cmp	r1, r0
   18d74:	blt	18db0 <__assert_fail@plt+0x7d10>
   18d78:	b	18dc8 <__assert_fail@plt+0x7d28>
   18d7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18d80:	movw	r1, #0
   18d84:	sdiv	r0, r1, r0
   18d88:	ldr	r1, [fp, #8]
   18d8c:	cmp	r0, r1
   18d90:	blt	18db0 <__assert_fail@plt+0x7d10>
   18d94:	b	18dc8 <__assert_fail@plt+0x7d28>
   18d98:	ldr	r0, [fp, #8]
   18d9c:	movw	r1, #255	; 0xff
   18da0:	sdiv	r0, r1, r0
   18da4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18da8:	cmp	r0, r1
   18dac:	bge	18dc8 <__assert_fail@plt+0x7d28>
   18db0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18db4:	ldr	r1, [fp, #8]
   18db8:	mul	r0, r0, r1
   18dbc:	and	r0, r0, #255	; 0xff
   18dc0:	str	r0, [fp, #-28]	; 0xffffffe4
   18dc4:	b	19df8 <__assert_fail@plt+0x8d58>
   18dc8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18dcc:	ldr	r1, [fp, #8]
   18dd0:	mul	r0, r0, r1
   18dd4:	and	r0, r0, #255	; 0xff
   18dd8:	str	r0, [fp, #-28]	; 0xffffffe4
   18ddc:	b	19e08 <__assert_fail@plt+0x8d68>
   18de0:	b	191b8 <__assert_fail@plt+0x8118>
   18de4:	b	18de8 <__assert_fail@plt+0x7d48>
   18de8:	ldr	r0, [fp, #8]
   18dec:	cmp	r0, #0
   18df0:	bge	18f04 <__assert_fail@plt+0x7e64>
   18df4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18df8:	cmp	r0, #0
   18dfc:	bge	18e88 <__assert_fail@plt+0x7de8>
   18e00:	b	18e04 <__assert_fail@plt+0x7d64>
   18e04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18e08:	ldr	r1, [fp, #8]
   18e0c:	movw	r2, #32767	; 0x7fff
   18e10:	sdiv	r1, r2, r1
   18e14:	cmp	r0, r1
   18e18:	blt	18fa4 <__assert_fail@plt+0x7f04>
   18e1c:	b	18fbc <__assert_fail@plt+0x7f1c>
   18e20:	b	18e24 <__assert_fail@plt+0x7d84>
   18e24:	ldr	r0, [pc, #3092]	; 19a40 <__assert_fail@plt+0x89a0>
   18e28:	ldr	r1, [fp, #8]
   18e2c:	cmp	r1, r0
   18e30:	blt	18e48 <__assert_fail@plt+0x7da8>
   18e34:	b	18e54 <__assert_fail@plt+0x7db4>
   18e38:	ldr	r0, [fp, #8]
   18e3c:	movw	r1, #0
   18e40:	cmp	r1, r0
   18e44:	bge	18e54 <__assert_fail@plt+0x7db4>
   18e48:	movw	r0, #0
   18e4c:	str	r0, [fp, #-48]	; 0xffffffd0
   18e50:	b	18e6c <__assert_fail@plt+0x7dcc>
   18e54:	ldr	r0, [fp, #8]
   18e58:	movw	r1, #0
   18e5c:	sub	r0, r1, r0
   18e60:	movw	r1, #32767	; 0x7fff
   18e64:	sdiv	r0, r1, r0
   18e68:	str	r0, [fp, #-48]	; 0xffffffd0
   18e6c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   18e70:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18e74:	mvn	r2, #0
   18e78:	sub	r1, r2, r1
   18e7c:	cmp	r0, r1
   18e80:	ble	18fa4 <__assert_fail@plt+0x7f04>
   18e84:	b	18fbc <__assert_fail@plt+0x7f1c>
   18e88:	b	18e8c <__assert_fail@plt+0x7dec>
   18e8c:	b	18ee8 <__assert_fail@plt+0x7e48>
   18e90:	b	18ee8 <__assert_fail@plt+0x7e48>
   18e94:	ldr	r0, [fp, #8]
   18e98:	cmn	r0, #1
   18e9c:	bne	18ee8 <__assert_fail@plt+0x7e48>
   18ea0:	b	18ea4 <__assert_fail@plt+0x7e04>
   18ea4:	ldr	r0, [pc, #3928]	; 19e04 <__assert_fail@plt+0x8d64>
   18ea8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18eac:	add	r0, r1, r0
   18eb0:	movw	r1, #0
   18eb4:	cmp	r1, r0
   18eb8:	blt	18fa4 <__assert_fail@plt+0x7f04>
   18ebc:	b	18fbc <__assert_fail@plt+0x7f1c>
   18ec0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18ec4:	movw	r1, #0
   18ec8:	cmp	r1, r0
   18ecc:	bge	18fbc <__assert_fail@plt+0x7f1c>
   18ed0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18ed4:	sub	r0, r0, #1
   18ed8:	movw	r1, #32767	; 0x7fff
   18edc:	cmp	r1, r0
   18ee0:	blt	18fa4 <__assert_fail@plt+0x7f04>
   18ee4:	b	18fbc <__assert_fail@plt+0x7f1c>
   18ee8:	ldr	r0, [pc, #3860]	; 19e04 <__assert_fail@plt+0x8d64>
   18eec:	ldr	r1, [fp, #8]
   18ef0:	sdiv	r0, r0, r1
   18ef4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18ef8:	cmp	r0, r1
   18efc:	blt	18fa4 <__assert_fail@plt+0x7f04>
   18f00:	b	18fbc <__assert_fail@plt+0x7f1c>
   18f04:	ldr	r0, [fp, #8]
   18f08:	cmp	r0, #0
   18f0c:	bne	18f14 <__assert_fail@plt+0x7e74>
   18f10:	b	18fbc <__assert_fail@plt+0x7f1c>
   18f14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18f18:	cmp	r0, #0
   18f1c:	bge	18f8c <__assert_fail@plt+0x7eec>
   18f20:	b	18f24 <__assert_fail@plt+0x7e84>
   18f24:	b	18f70 <__assert_fail@plt+0x7ed0>
   18f28:	b	18f70 <__assert_fail@plt+0x7ed0>
   18f2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18f30:	cmn	r0, #1
   18f34:	bne	18f70 <__assert_fail@plt+0x7ed0>
   18f38:	b	18f3c <__assert_fail@plt+0x7e9c>
   18f3c:	ldr	r0, [pc, #3776]	; 19e04 <__assert_fail@plt+0x8d64>
   18f40:	ldr	r1, [fp, #8]
   18f44:	add	r0, r1, r0
   18f48:	movw	r1, #0
   18f4c:	cmp	r1, r0
   18f50:	blt	18fa4 <__assert_fail@plt+0x7f04>
   18f54:	b	18fbc <__assert_fail@plt+0x7f1c>
   18f58:	ldr	r0, [fp, #8]
   18f5c:	sub	r0, r0, #1
   18f60:	movw	r1, #32767	; 0x7fff
   18f64:	cmp	r1, r0
   18f68:	blt	18fa4 <__assert_fail@plt+0x7f04>
   18f6c:	b	18fbc <__assert_fail@plt+0x7f1c>
   18f70:	ldr	r0, [pc, #3724]	; 19e04 <__assert_fail@plt+0x8d64>
   18f74:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18f78:	sdiv	r0, r0, r1
   18f7c:	ldr	r1, [fp, #8]
   18f80:	cmp	r0, r1
   18f84:	blt	18fa4 <__assert_fail@plt+0x7f04>
   18f88:	b	18fbc <__assert_fail@plt+0x7f1c>
   18f8c:	ldr	r0, [fp, #8]
   18f90:	movw	r1, #32767	; 0x7fff
   18f94:	sdiv	r0, r1, r0
   18f98:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18f9c:	cmp	r0, r1
   18fa0:	bge	18fbc <__assert_fail@plt+0x7f1c>
   18fa4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18fa8:	ldr	r1, [fp, #8]
   18fac:	mul	r0, r0, r1
   18fb0:	sxth	r0, r0
   18fb4:	str	r0, [fp, #-28]	; 0xffffffe4
   18fb8:	b	19df8 <__assert_fail@plt+0x8d58>
   18fbc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18fc0:	ldr	r1, [fp, #8]
   18fc4:	mul	r0, r0, r1
   18fc8:	sxth	r0, r0
   18fcc:	str	r0, [fp, #-28]	; 0xffffffe4
   18fd0:	b	19e08 <__assert_fail@plt+0x8d68>
   18fd4:	ldr	r0, [fp, #8]
   18fd8:	cmp	r0, #0
   18fdc:	bge	190ec <__assert_fail@plt+0x804c>
   18fe0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18fe4:	cmp	r0, #0
   18fe8:	bge	19074 <__assert_fail@plt+0x7fd4>
   18fec:	b	18ff0 <__assert_fail@plt+0x7f50>
   18ff0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18ff4:	ldr	r1, [fp, #8]
   18ff8:	movw	r2, #65535	; 0xffff
   18ffc:	sdiv	r1, r2, r1
   19000:	cmp	r0, r1
   19004:	blt	19188 <__assert_fail@plt+0x80e8>
   19008:	b	191a0 <__assert_fail@plt+0x8100>
   1900c:	b	19010 <__assert_fail@plt+0x7f70>
   19010:	ldr	r0, [pc, #2600]	; 19a40 <__assert_fail@plt+0x89a0>
   19014:	ldr	r1, [fp, #8]
   19018:	cmp	r1, r0
   1901c:	blt	19034 <__assert_fail@plt+0x7f94>
   19020:	b	19040 <__assert_fail@plt+0x7fa0>
   19024:	ldr	r0, [fp, #8]
   19028:	movw	r1, #0
   1902c:	cmp	r1, r0
   19030:	bge	19040 <__assert_fail@plt+0x7fa0>
   19034:	movw	r0, #0
   19038:	str	r0, [fp, #-52]	; 0xffffffcc
   1903c:	b	19058 <__assert_fail@plt+0x7fb8>
   19040:	ldr	r0, [fp, #8]
   19044:	movw	r1, #0
   19048:	sub	r0, r1, r0
   1904c:	movw	r1, #65535	; 0xffff
   19050:	sdiv	r0, r1, r0
   19054:	str	r0, [fp, #-52]	; 0xffffffcc
   19058:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1905c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19060:	mvn	r2, #0
   19064:	sub	r1, r2, r1
   19068:	cmp	r0, r1
   1906c:	ble	19188 <__assert_fail@plt+0x80e8>
   19070:	b	191a0 <__assert_fail@plt+0x8100>
   19074:	b	19078 <__assert_fail@plt+0x7fd8>
   19078:	b	190d0 <__assert_fail@plt+0x8030>
   1907c:	b	190d0 <__assert_fail@plt+0x8030>
   19080:	ldr	r0, [fp, #8]
   19084:	cmn	r0, #1
   19088:	bne	190d0 <__assert_fail@plt+0x8030>
   1908c:	b	19090 <__assert_fail@plt+0x7ff0>
   19090:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19094:	add	r0, r0, #0
   19098:	movw	r1, #0
   1909c:	cmp	r1, r0
   190a0:	blt	19188 <__assert_fail@plt+0x80e8>
   190a4:	b	191a0 <__assert_fail@plt+0x8100>
   190a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   190ac:	movw	r1, #0
   190b0:	cmp	r1, r0
   190b4:	bge	191a0 <__assert_fail@plt+0x8100>
   190b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   190bc:	sub	r0, r0, #1
   190c0:	mvn	r1, #0
   190c4:	cmp	r1, r0
   190c8:	blt	19188 <__assert_fail@plt+0x80e8>
   190cc:	b	191a0 <__assert_fail@plt+0x8100>
   190d0:	ldr	r0, [fp, #8]
   190d4:	movw	r1, #0
   190d8:	sdiv	r0, r1, r0
   190dc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   190e0:	cmp	r0, r1
   190e4:	blt	19188 <__assert_fail@plt+0x80e8>
   190e8:	b	191a0 <__assert_fail@plt+0x8100>
   190ec:	ldr	r0, [fp, #8]
   190f0:	cmp	r0, #0
   190f4:	bne	190fc <__assert_fail@plt+0x805c>
   190f8:	b	191a0 <__assert_fail@plt+0x8100>
   190fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19100:	cmp	r0, #0
   19104:	bge	19170 <__assert_fail@plt+0x80d0>
   19108:	b	1910c <__assert_fail@plt+0x806c>
   1910c:	b	19154 <__assert_fail@plt+0x80b4>
   19110:	b	19154 <__assert_fail@plt+0x80b4>
   19114:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19118:	cmn	r0, #1
   1911c:	bne	19154 <__assert_fail@plt+0x80b4>
   19120:	b	19124 <__assert_fail@plt+0x8084>
   19124:	ldr	r0, [fp, #8]
   19128:	add	r0, r0, #0
   1912c:	movw	r1, #0
   19130:	cmp	r1, r0
   19134:	blt	19188 <__assert_fail@plt+0x80e8>
   19138:	b	191a0 <__assert_fail@plt+0x8100>
   1913c:	ldr	r0, [fp, #8]
   19140:	sub	r0, r0, #1
   19144:	mvn	r1, #0
   19148:	cmp	r1, r0
   1914c:	blt	19188 <__assert_fail@plt+0x80e8>
   19150:	b	191a0 <__assert_fail@plt+0x8100>
   19154:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19158:	movw	r1, #0
   1915c:	sdiv	r0, r1, r0
   19160:	ldr	r1, [fp, #8]
   19164:	cmp	r0, r1
   19168:	blt	19188 <__assert_fail@plt+0x80e8>
   1916c:	b	191a0 <__assert_fail@plt+0x8100>
   19170:	ldr	r0, [fp, #8]
   19174:	movw	r1, #65535	; 0xffff
   19178:	sdiv	r0, r1, r0
   1917c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19180:	cmp	r0, r1
   19184:	bge	191a0 <__assert_fail@plt+0x8100>
   19188:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1918c:	ldr	r1, [fp, #8]
   19190:	mul	r0, r0, r1
   19194:	uxth	r0, r0
   19198:	str	r0, [fp, #-28]	; 0xffffffe4
   1919c:	b	19df8 <__assert_fail@plt+0x8d58>
   191a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   191a4:	ldr	r1, [fp, #8]
   191a8:	mul	r0, r0, r1
   191ac:	uxth	r0, r0
   191b0:	str	r0, [fp, #-28]	; 0xffffffe4
   191b4:	b	19e08 <__assert_fail@plt+0x8d68>
   191b8:	b	191bc <__assert_fail@plt+0x811c>
   191bc:	b	191c0 <__assert_fail@plt+0x8120>
   191c0:	ldr	r0, [fp, #8]
   191c4:	cmp	r0, #0
   191c8:	bge	192cc <__assert_fail@plt+0x822c>
   191cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   191d0:	cmp	r0, #0
   191d4:	bge	19260 <__assert_fail@plt+0x81c0>
   191d8:	b	191dc <__assert_fail@plt+0x813c>
   191dc:	ldr	r0, [pc, #1992]	; 199ac <__assert_fail@plt+0x890c>
   191e0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   191e4:	ldr	r2, [fp, #8]
   191e8:	sdiv	r0, r0, r2
   191ec:	cmp	r1, r0
   191f0:	blt	1935c <__assert_fail@plt+0x82bc>
   191f4:	b	19370 <__assert_fail@plt+0x82d0>
   191f8:	b	191fc <__assert_fail@plt+0x815c>
   191fc:	ldr	r0, [pc, #2108]	; 19a40 <__assert_fail@plt+0x89a0>
   19200:	ldr	r1, [fp, #8]
   19204:	cmp	r1, r0
   19208:	blt	19220 <__assert_fail@plt+0x8180>
   1920c:	b	1922c <__assert_fail@plt+0x818c>
   19210:	ldr	r0, [fp, #8]
   19214:	movw	r1, #0
   19218:	cmp	r1, r0
   1921c:	bge	1922c <__assert_fail@plt+0x818c>
   19220:	movw	r0, #0
   19224:	str	r0, [fp, #-56]	; 0xffffffc8
   19228:	b	19244 <__assert_fail@plt+0x81a4>
   1922c:	ldr	r0, [pc, #1912]	; 199ac <__assert_fail@plt+0x890c>
   19230:	ldr	r1, [fp, #8]
   19234:	movw	r2, #0
   19238:	sub	r1, r2, r1
   1923c:	sdiv	r0, r0, r1
   19240:	str	r0, [fp, #-56]	; 0xffffffc8
   19244:	ldr	r0, [fp, #-56]	; 0xffffffc8
   19248:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1924c:	mvn	r2, #0
   19250:	sub	r1, r2, r1
   19254:	cmp	r0, r1
   19258:	ble	1935c <__assert_fail@plt+0x82bc>
   1925c:	b	19370 <__assert_fail@plt+0x82d0>
   19260:	ldr	r0, [fp, #8]
   19264:	cmn	r0, #1
   19268:	bne	192b0 <__assert_fail@plt+0x8210>
   1926c:	b	19270 <__assert_fail@plt+0x81d0>
   19270:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19274:	add	r0, r0, #-2147483648	; 0x80000000
   19278:	movw	r1, #0
   1927c:	cmp	r1, r0
   19280:	blt	1935c <__assert_fail@plt+0x82bc>
   19284:	b	19370 <__assert_fail@plt+0x82d0>
   19288:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1928c:	movw	r1, #0
   19290:	cmp	r1, r0
   19294:	bge	19370 <__assert_fail@plt+0x82d0>
   19298:	ldr	r0, [pc, #1804]	; 199ac <__assert_fail@plt+0x890c>
   1929c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   192a0:	sub	r1, r1, #1
   192a4:	cmp	r0, r1
   192a8:	blt	1935c <__assert_fail@plt+0x82bc>
   192ac:	b	19370 <__assert_fail@plt+0x82d0>
   192b0:	ldr	r0, [pc, #4072]	; 1a2a0 <__assert_fail@plt+0x9200>
   192b4:	ldr	r1, [fp, #8]
   192b8:	sdiv	r0, r0, r1
   192bc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   192c0:	cmp	r0, r1
   192c4:	blt	1935c <__assert_fail@plt+0x82bc>
   192c8:	b	19370 <__assert_fail@plt+0x82d0>
   192cc:	ldr	r0, [fp, #8]
   192d0:	cmp	r0, #0
   192d4:	bne	192dc <__assert_fail@plt+0x823c>
   192d8:	b	19370 <__assert_fail@plt+0x82d0>
   192dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   192e0:	cmp	r0, #0
   192e4:	bge	19344 <__assert_fail@plt+0x82a4>
   192e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   192ec:	cmn	r0, #1
   192f0:	bne	19328 <__assert_fail@plt+0x8288>
   192f4:	b	192f8 <__assert_fail@plt+0x8258>
   192f8:	ldr	r0, [fp, #8]
   192fc:	add	r0, r0, #-2147483648	; 0x80000000
   19300:	movw	r1, #0
   19304:	cmp	r1, r0
   19308:	blt	1935c <__assert_fail@plt+0x82bc>
   1930c:	b	19370 <__assert_fail@plt+0x82d0>
   19310:	ldr	r0, [pc, #1684]	; 199ac <__assert_fail@plt+0x890c>
   19314:	ldr	r1, [fp, #8]
   19318:	sub	r1, r1, #1
   1931c:	cmp	r0, r1
   19320:	blt	1935c <__assert_fail@plt+0x82bc>
   19324:	b	19370 <__assert_fail@plt+0x82d0>
   19328:	ldr	r0, [pc, #3952]	; 1a2a0 <__assert_fail@plt+0x9200>
   1932c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19330:	sdiv	r0, r0, r1
   19334:	ldr	r1, [fp, #8]
   19338:	cmp	r0, r1
   1933c:	blt	1935c <__assert_fail@plt+0x82bc>
   19340:	b	19370 <__assert_fail@plt+0x82d0>
   19344:	ldr	r0, [pc, #1632]	; 199ac <__assert_fail@plt+0x890c>
   19348:	ldr	r1, [fp, #8]
   1934c:	sdiv	r0, r0, r1
   19350:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19354:	cmp	r0, r1
   19358:	bge	19370 <__assert_fail@plt+0x82d0>
   1935c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19360:	ldr	r1, [fp, #8]
   19364:	mul	r0, r0, r1
   19368:	str	r0, [fp, #-28]	; 0xffffffe4
   1936c:	b	19df8 <__assert_fail@plt+0x8d58>
   19370:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19374:	ldr	r1, [fp, #8]
   19378:	mul	r0, r0, r1
   1937c:	str	r0, [fp, #-28]	; 0xffffffe4
   19380:	b	19e08 <__assert_fail@plt+0x8d68>
   19384:	ldr	r0, [fp, #8]
   19388:	cmp	r0, #0
   1938c:	bge	1949c <__assert_fail@plt+0x83fc>
   19390:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19394:	cmp	r0, #0
   19398:	bge	19424 <__assert_fail@plt+0x8384>
   1939c:	b	193bc <__assert_fail@plt+0x831c>
   193a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   193a4:	ldr	r1, [fp, #8]
   193a8:	mvn	r2, #0
   193ac:	udiv	r1, r2, r1
   193b0:	cmp	r0, r1
   193b4:	bcc	19538 <__assert_fail@plt+0x8498>
   193b8:	b	1954c <__assert_fail@plt+0x84ac>
   193bc:	b	193c0 <__assert_fail@plt+0x8320>
   193c0:	ldr	r0, [pc, #1656]	; 19a40 <__assert_fail@plt+0x89a0>
   193c4:	ldr	r1, [fp, #8]
   193c8:	cmp	r1, r0
   193cc:	blt	193e4 <__assert_fail@plt+0x8344>
   193d0:	b	193f0 <__assert_fail@plt+0x8350>
   193d4:	ldr	r0, [fp, #8]
   193d8:	movw	r1, #0
   193dc:	cmp	r1, r0
   193e0:	bge	193f0 <__assert_fail@plt+0x8350>
   193e4:	movw	r0, #1
   193e8:	str	r0, [fp, #-60]	; 0xffffffc4
   193ec:	b	19408 <__assert_fail@plt+0x8368>
   193f0:	ldr	r0, [fp, #8]
   193f4:	movw	r1, #0
   193f8:	sub	r0, r1, r0
   193fc:	mvn	r1, #0
   19400:	udiv	r0, r1, r0
   19404:	str	r0, [fp, #-60]	; 0xffffffc4
   19408:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1940c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19410:	mvn	r2, #0
   19414:	sub	r1, r2, r1
   19418:	cmp	r0, r1
   1941c:	bls	19538 <__assert_fail@plt+0x8498>
   19420:	b	1954c <__assert_fail@plt+0x84ac>
   19424:	b	19428 <__assert_fail@plt+0x8388>
   19428:	b	19480 <__assert_fail@plt+0x83e0>
   1942c:	b	19480 <__assert_fail@plt+0x83e0>
   19430:	ldr	r0, [fp, #8]
   19434:	cmn	r0, #1
   19438:	bne	19480 <__assert_fail@plt+0x83e0>
   1943c:	b	19440 <__assert_fail@plt+0x83a0>
   19440:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19444:	add	r0, r0, #0
   19448:	movw	r1, #0
   1944c:	cmp	r1, r0
   19450:	blt	19538 <__assert_fail@plt+0x8498>
   19454:	b	1954c <__assert_fail@plt+0x84ac>
   19458:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1945c:	movw	r1, #0
   19460:	cmp	r1, r0
   19464:	bge	1954c <__assert_fail@plt+0x84ac>
   19468:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1946c:	sub	r0, r0, #1
   19470:	mvn	r1, #0
   19474:	cmp	r1, r0
   19478:	blt	19538 <__assert_fail@plt+0x8498>
   1947c:	b	1954c <__assert_fail@plt+0x84ac>
   19480:	ldr	r0, [fp, #8]
   19484:	movw	r1, #0
   19488:	sdiv	r0, r1, r0
   1948c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19490:	cmp	r0, r1
   19494:	blt	19538 <__assert_fail@plt+0x8498>
   19498:	b	1954c <__assert_fail@plt+0x84ac>
   1949c:	ldr	r0, [fp, #8]
   194a0:	cmp	r0, #0
   194a4:	bne	194ac <__assert_fail@plt+0x840c>
   194a8:	b	1954c <__assert_fail@plt+0x84ac>
   194ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   194b0:	cmp	r0, #0
   194b4:	bge	19520 <__assert_fail@plt+0x8480>
   194b8:	b	194bc <__assert_fail@plt+0x841c>
   194bc:	b	19504 <__assert_fail@plt+0x8464>
   194c0:	b	19504 <__assert_fail@plt+0x8464>
   194c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   194c8:	cmn	r0, #1
   194cc:	bne	19504 <__assert_fail@plt+0x8464>
   194d0:	b	194d4 <__assert_fail@plt+0x8434>
   194d4:	ldr	r0, [fp, #8]
   194d8:	add	r0, r0, #0
   194dc:	movw	r1, #0
   194e0:	cmp	r1, r0
   194e4:	blt	19538 <__assert_fail@plt+0x8498>
   194e8:	b	1954c <__assert_fail@plt+0x84ac>
   194ec:	ldr	r0, [fp, #8]
   194f0:	sub	r0, r0, #1
   194f4:	mvn	r1, #0
   194f8:	cmp	r1, r0
   194fc:	blt	19538 <__assert_fail@plt+0x8498>
   19500:	b	1954c <__assert_fail@plt+0x84ac>
   19504:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19508:	movw	r1, #0
   1950c:	sdiv	r0, r1, r0
   19510:	ldr	r1, [fp, #8]
   19514:	cmp	r0, r1
   19518:	blt	19538 <__assert_fail@plt+0x8498>
   1951c:	b	1954c <__assert_fail@plt+0x84ac>
   19520:	ldr	r0, [fp, #8]
   19524:	mvn	r1, #0
   19528:	udiv	r0, r1, r0
   1952c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19530:	cmp	r0, r1
   19534:	bcs	1954c <__assert_fail@plt+0x84ac>
   19538:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1953c:	ldr	r1, [fp, #8]
   19540:	mul	r0, r0, r1
   19544:	str	r0, [fp, #-28]	; 0xffffffe4
   19548:	b	19df8 <__assert_fail@plt+0x8d58>
   1954c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19550:	ldr	r1, [fp, #8]
   19554:	mul	r0, r0, r1
   19558:	str	r0, [fp, #-28]	; 0xffffffe4
   1955c:	b	19e08 <__assert_fail@plt+0x8d68>
   19560:	b	19564 <__assert_fail@plt+0x84c4>
   19564:	b	19568 <__assert_fail@plt+0x84c8>
   19568:	ldr	r0, [fp, #8]
   1956c:	cmp	r0, #0
   19570:	bge	19674 <__assert_fail@plt+0x85d4>
   19574:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19578:	cmp	r0, #0
   1957c:	bge	19608 <__assert_fail@plt+0x8568>
   19580:	b	19584 <__assert_fail@plt+0x84e4>
   19584:	ldr	r0, [pc, #1056]	; 199ac <__assert_fail@plt+0x890c>
   19588:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1958c:	ldr	r2, [fp, #8]
   19590:	sdiv	r0, r0, r2
   19594:	cmp	r1, r0
   19598:	blt	19704 <__assert_fail@plt+0x8664>
   1959c:	b	19718 <__assert_fail@plt+0x8678>
   195a0:	b	195a4 <__assert_fail@plt+0x8504>
   195a4:	ldr	r0, [pc, #1172]	; 19a40 <__assert_fail@plt+0x89a0>
   195a8:	ldr	r1, [fp, #8]
   195ac:	cmp	r1, r0
   195b0:	blt	195c8 <__assert_fail@plt+0x8528>
   195b4:	b	195d4 <__assert_fail@plt+0x8534>
   195b8:	ldr	r0, [fp, #8]
   195bc:	movw	r1, #0
   195c0:	cmp	r1, r0
   195c4:	bge	195d4 <__assert_fail@plt+0x8534>
   195c8:	movw	r0, #0
   195cc:	str	r0, [fp, #-64]	; 0xffffffc0
   195d0:	b	195ec <__assert_fail@plt+0x854c>
   195d4:	ldr	r0, [pc, #976]	; 199ac <__assert_fail@plt+0x890c>
   195d8:	ldr	r1, [fp, #8]
   195dc:	movw	r2, #0
   195e0:	sub	r1, r2, r1
   195e4:	sdiv	r0, r0, r1
   195e8:	str	r0, [fp, #-64]	; 0xffffffc0
   195ec:	ldr	r0, [fp, #-64]	; 0xffffffc0
   195f0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   195f4:	mvn	r2, #0
   195f8:	sub	r1, r2, r1
   195fc:	cmp	r0, r1
   19600:	ble	19704 <__assert_fail@plt+0x8664>
   19604:	b	19718 <__assert_fail@plt+0x8678>
   19608:	ldr	r0, [fp, #8]
   1960c:	cmn	r0, #1
   19610:	bne	19658 <__assert_fail@plt+0x85b8>
   19614:	b	19618 <__assert_fail@plt+0x8578>
   19618:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1961c:	add	r0, r0, #-2147483648	; 0x80000000
   19620:	movw	r1, #0
   19624:	cmp	r1, r0
   19628:	blt	19704 <__assert_fail@plt+0x8664>
   1962c:	b	19718 <__assert_fail@plt+0x8678>
   19630:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19634:	movw	r1, #0
   19638:	cmp	r1, r0
   1963c:	bge	19718 <__assert_fail@plt+0x8678>
   19640:	ldr	r0, [pc, #868]	; 199ac <__assert_fail@plt+0x890c>
   19644:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19648:	sub	r1, r1, #1
   1964c:	cmp	r0, r1
   19650:	blt	19704 <__assert_fail@plt+0x8664>
   19654:	b	19718 <__assert_fail@plt+0x8678>
   19658:	ldr	r0, [pc, #3136]	; 1a2a0 <__assert_fail@plt+0x9200>
   1965c:	ldr	r1, [fp, #8]
   19660:	sdiv	r0, r0, r1
   19664:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19668:	cmp	r0, r1
   1966c:	blt	19704 <__assert_fail@plt+0x8664>
   19670:	b	19718 <__assert_fail@plt+0x8678>
   19674:	ldr	r0, [fp, #8]
   19678:	cmp	r0, #0
   1967c:	bne	19684 <__assert_fail@plt+0x85e4>
   19680:	b	19718 <__assert_fail@plt+0x8678>
   19684:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19688:	cmp	r0, #0
   1968c:	bge	196ec <__assert_fail@plt+0x864c>
   19690:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19694:	cmn	r0, #1
   19698:	bne	196d0 <__assert_fail@plt+0x8630>
   1969c:	b	196a0 <__assert_fail@plt+0x8600>
   196a0:	ldr	r0, [fp, #8]
   196a4:	add	r0, r0, #-2147483648	; 0x80000000
   196a8:	movw	r1, #0
   196ac:	cmp	r1, r0
   196b0:	blt	19704 <__assert_fail@plt+0x8664>
   196b4:	b	19718 <__assert_fail@plt+0x8678>
   196b8:	ldr	r0, [pc, #748]	; 199ac <__assert_fail@plt+0x890c>
   196bc:	ldr	r1, [fp, #8]
   196c0:	sub	r1, r1, #1
   196c4:	cmp	r0, r1
   196c8:	blt	19704 <__assert_fail@plt+0x8664>
   196cc:	b	19718 <__assert_fail@plt+0x8678>
   196d0:	ldr	r0, [pc, #3016]	; 1a2a0 <__assert_fail@plt+0x9200>
   196d4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   196d8:	sdiv	r0, r0, r1
   196dc:	ldr	r1, [fp, #8]
   196e0:	cmp	r0, r1
   196e4:	blt	19704 <__assert_fail@plt+0x8664>
   196e8:	b	19718 <__assert_fail@plt+0x8678>
   196ec:	ldr	r0, [pc, #696]	; 199ac <__assert_fail@plt+0x890c>
   196f0:	ldr	r1, [fp, #8]
   196f4:	sdiv	r0, r0, r1
   196f8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   196fc:	cmp	r0, r1
   19700:	bge	19718 <__assert_fail@plt+0x8678>
   19704:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19708:	ldr	r1, [fp, #8]
   1970c:	mul	r0, r0, r1
   19710:	str	r0, [fp, #-28]	; 0xffffffe4
   19714:	b	19df8 <__assert_fail@plt+0x8d58>
   19718:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1971c:	ldr	r1, [fp, #8]
   19720:	mul	r0, r0, r1
   19724:	str	r0, [fp, #-28]	; 0xffffffe4
   19728:	b	19e08 <__assert_fail@plt+0x8d68>
   1972c:	ldr	r0, [fp, #8]
   19730:	cmp	r0, #0
   19734:	bge	19844 <__assert_fail@plt+0x87a4>
   19738:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1973c:	cmp	r0, #0
   19740:	bge	197cc <__assert_fail@plt+0x872c>
   19744:	b	19764 <__assert_fail@plt+0x86c4>
   19748:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1974c:	ldr	r1, [fp, #8]
   19750:	mvn	r2, #0
   19754:	udiv	r1, r2, r1
   19758:	cmp	r0, r1
   1975c:	bcc	198e0 <__assert_fail@plt+0x8840>
   19760:	b	198f4 <__assert_fail@plt+0x8854>
   19764:	b	19768 <__assert_fail@plt+0x86c8>
   19768:	ldr	r0, [pc, #720]	; 19a40 <__assert_fail@plt+0x89a0>
   1976c:	ldr	r1, [fp, #8]
   19770:	cmp	r1, r0
   19774:	blt	1978c <__assert_fail@plt+0x86ec>
   19778:	b	19798 <__assert_fail@plt+0x86f8>
   1977c:	ldr	r0, [fp, #8]
   19780:	movw	r1, #0
   19784:	cmp	r1, r0
   19788:	bge	19798 <__assert_fail@plt+0x86f8>
   1978c:	movw	r0, #1
   19790:	str	r0, [fp, #-68]	; 0xffffffbc
   19794:	b	197b0 <__assert_fail@plt+0x8710>
   19798:	ldr	r0, [fp, #8]
   1979c:	movw	r1, #0
   197a0:	sub	r0, r1, r0
   197a4:	mvn	r1, #0
   197a8:	udiv	r0, r1, r0
   197ac:	str	r0, [fp, #-68]	; 0xffffffbc
   197b0:	ldr	r0, [fp, #-68]	; 0xffffffbc
   197b4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   197b8:	mvn	r2, #0
   197bc:	sub	r1, r2, r1
   197c0:	cmp	r0, r1
   197c4:	bls	198e0 <__assert_fail@plt+0x8840>
   197c8:	b	198f4 <__assert_fail@plt+0x8854>
   197cc:	b	197d0 <__assert_fail@plt+0x8730>
   197d0:	b	19828 <__assert_fail@plt+0x8788>
   197d4:	b	19828 <__assert_fail@plt+0x8788>
   197d8:	ldr	r0, [fp, #8]
   197dc:	cmn	r0, #1
   197e0:	bne	19828 <__assert_fail@plt+0x8788>
   197e4:	b	197e8 <__assert_fail@plt+0x8748>
   197e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   197ec:	add	r0, r0, #0
   197f0:	movw	r1, #0
   197f4:	cmp	r1, r0
   197f8:	blt	198e0 <__assert_fail@plt+0x8840>
   197fc:	b	198f4 <__assert_fail@plt+0x8854>
   19800:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19804:	movw	r1, #0
   19808:	cmp	r1, r0
   1980c:	bge	198f4 <__assert_fail@plt+0x8854>
   19810:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19814:	sub	r0, r0, #1
   19818:	mvn	r1, #0
   1981c:	cmp	r1, r0
   19820:	blt	198e0 <__assert_fail@plt+0x8840>
   19824:	b	198f4 <__assert_fail@plt+0x8854>
   19828:	ldr	r0, [fp, #8]
   1982c:	movw	r1, #0
   19830:	sdiv	r0, r1, r0
   19834:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19838:	cmp	r0, r1
   1983c:	blt	198e0 <__assert_fail@plt+0x8840>
   19840:	b	198f4 <__assert_fail@plt+0x8854>
   19844:	ldr	r0, [fp, #8]
   19848:	cmp	r0, #0
   1984c:	bne	19854 <__assert_fail@plt+0x87b4>
   19850:	b	198f4 <__assert_fail@plt+0x8854>
   19854:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19858:	cmp	r0, #0
   1985c:	bge	198c8 <__assert_fail@plt+0x8828>
   19860:	b	19864 <__assert_fail@plt+0x87c4>
   19864:	b	198ac <__assert_fail@plt+0x880c>
   19868:	b	198ac <__assert_fail@plt+0x880c>
   1986c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19870:	cmn	r0, #1
   19874:	bne	198ac <__assert_fail@plt+0x880c>
   19878:	b	1987c <__assert_fail@plt+0x87dc>
   1987c:	ldr	r0, [fp, #8]
   19880:	add	r0, r0, #0
   19884:	movw	r1, #0
   19888:	cmp	r1, r0
   1988c:	blt	198e0 <__assert_fail@plt+0x8840>
   19890:	b	198f4 <__assert_fail@plt+0x8854>
   19894:	ldr	r0, [fp, #8]
   19898:	sub	r0, r0, #1
   1989c:	mvn	r1, #0
   198a0:	cmp	r1, r0
   198a4:	blt	198e0 <__assert_fail@plt+0x8840>
   198a8:	b	198f4 <__assert_fail@plt+0x8854>
   198ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   198b0:	movw	r1, #0
   198b4:	sdiv	r0, r1, r0
   198b8:	ldr	r1, [fp, #8]
   198bc:	cmp	r0, r1
   198c0:	blt	198e0 <__assert_fail@plt+0x8840>
   198c4:	b	198f4 <__assert_fail@plt+0x8854>
   198c8:	ldr	r0, [fp, #8]
   198cc:	mvn	r1, #0
   198d0:	udiv	r0, r1, r0
   198d4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   198d8:	cmp	r0, r1
   198dc:	bcs	198f4 <__assert_fail@plt+0x8854>
   198e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   198e4:	ldr	r1, [fp, #8]
   198e8:	mul	r0, r0, r1
   198ec:	str	r0, [fp, #-28]	; 0xffffffe4
   198f0:	b	19df8 <__assert_fail@plt+0x8d58>
   198f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   198f8:	ldr	r1, [fp, #8]
   198fc:	mul	r0, r0, r1
   19900:	str	r0, [fp, #-28]	; 0xffffffe4
   19904:	b	19e08 <__assert_fail@plt+0x8d68>
   19908:	b	1990c <__assert_fail@plt+0x886c>
   1990c:	ldr	r0, [fp, #8]
   19910:	cmp	r0, #0
   19914:	bge	19aa4 <__assert_fail@plt+0x8a04>
   19918:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1991c:	cmp	r0, #0
   19920:	bge	19a0c <__assert_fail@plt+0x896c>
   19924:	b	19928 <__assert_fail@plt+0x8888>
   19928:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1992c:	ldr	r1, [fp, #8]
   19930:	asr	r3, r1, #31
   19934:	mvn	r2, #0
   19938:	mvn	ip, #-2147483648	; 0x80000000
   1993c:	str	r0, [fp, #-72]	; 0xffffffb8
   19940:	mov	r0, r2
   19944:	str	r1, [fp, #-76]	; 0xffffffb4
   19948:	mov	r1, ip
   1994c:	ldr	r2, [fp, #-76]	; 0xffffffb4
   19950:	bl	1fbf8 <__assert_fail@plt+0xeb58>
   19954:	ldr	r2, [fp, #-72]	; 0xffffffb8
   19958:	subs	r0, r2, r0
   1995c:	rscs	r1, r1, r2, asr #31
   19960:	str	r0, [fp, #-80]	; 0xffffffb0
   19964:	str	r1, [fp, #-84]	; 0xffffffac
   19968:	blt	19b84 <__assert_fail@plt+0x8ae4>
   1996c:	b	19b98 <__assert_fail@plt+0x8af8>
   19970:	b	19974 <__assert_fail@plt+0x88d4>
   19974:	ldr	r0, [pc, #196]	; 19a40 <__assert_fail@plt+0x89a0>
   19978:	ldr	r1, [fp, #8]
   1997c:	cmp	r1, r0
   19980:	blt	19998 <__assert_fail@plt+0x88f8>
   19984:	b	199b0 <__assert_fail@plt+0x8910>
   19988:	ldr	r0, [fp, #8]
   1998c:	movw	r1, #0
   19990:	cmp	r1, r0
   19994:	bge	199b0 <__assert_fail@plt+0x8910>
   19998:	mov	r0, #0
   1999c:	mvn	r1, #0
   199a0:	str	r1, [fp, #-88]	; 0xffffffa8
   199a4:	str	r0, [fp, #-92]	; 0xffffffa4
   199a8:	b	199e4 <__assert_fail@plt+0x8944>
   199ac:	svcvc	0x00ffffff
   199b0:	ldr	r0, [fp, #8]
   199b4:	rsb	r0, r0, #0
   199b8:	asr	r3, r0, #31
   199bc:	mvn	r1, #0
   199c0:	mvn	r2, #-2147483648	; 0x80000000
   199c4:	str	r0, [fp, #-96]	; 0xffffffa0
   199c8:	mov	r0, r1
   199cc:	mov	r1, r2
   199d0:	ldr	r2, [fp, #-96]	; 0xffffffa0
   199d4:	bl	1fbf8 <__assert_fail@plt+0xeb58>
   199d8:	str	r0, [fp, #-88]	; 0xffffffa8
   199dc:	str	r1, [fp, #-92]	; 0xffffffa4
   199e0:	b	199e4 <__assert_fail@plt+0x8944>
   199e4:	ldr	r0, [fp, #-92]	; 0xffffffa4
   199e8:	ldr	r1, [fp, #-88]	; 0xffffffa8
   199ec:	ldr	r2, [fp, #-24]	; 0xffffffe8
   199f0:	mvn	r2, r2
   199f4:	subs	r1, r2, r1
   199f8:	rscs	r0, r0, r2, asr #31
   199fc:	str	r1, [fp, #-100]	; 0xffffff9c
   19a00:	str	r0, [fp, #-104]	; 0xffffff98
   19a04:	bge	19b84 <__assert_fail@plt+0x8ae4>
   19a08:	b	19b98 <__assert_fail@plt+0x8af8>
   19a0c:	ldr	r0, [fp, #8]
   19a10:	cmn	r0, #1
   19a14:	bne	19a64 <__assert_fail@plt+0x89c4>
   19a18:	b	19a1c <__assert_fail@plt+0x897c>
   19a1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19a20:	mov	r1, #-2147483648	; 0x80000000
   19a24:	add	r1, r1, r0, asr #31
   19a28:	rsbs	r0, r0, #0
   19a2c:	rscs	r1, r1, #0
   19a30:	str	r0, [fp, #-108]	; 0xffffff94
   19a34:	str	r1, [fp, #-112]	; 0xffffff90
   19a38:	blt	19b84 <__assert_fail@plt+0x8ae4>
   19a3c:	b	19b98 <__assert_fail@plt+0x8af8>
   19a40:	andhi	r0, r0, r1
   19a44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19a48:	movw	r1, #0
   19a4c:	cmp	r1, r0
   19a50:	bge	19b98 <__assert_fail@plt+0x8af8>
   19a54:	mov	r0, #0
   19a58:	cmp	r0, #0
   19a5c:	bne	19b84 <__assert_fail@plt+0x8ae4>
   19a60:	b	19b98 <__assert_fail@plt+0x8af8>
   19a64:	ldr	r0, [fp, #8]
   19a68:	asr	r3, r0, #31
   19a6c:	mov	r1, #0
   19a70:	mov	r2, #-2147483648	; 0x80000000
   19a74:	str	r0, [fp, #-116]	; 0xffffff8c
   19a78:	mov	r0, r1
   19a7c:	mov	r1, r2
   19a80:	ldr	r2, [fp, #-116]	; 0xffffff8c
   19a84:	bl	1fbf8 <__assert_fail@plt+0xeb58>
   19a88:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19a8c:	subs	r0, r0, r2
   19a90:	sbcs	r1, r1, r2, asr #31
   19a94:	str	r0, [fp, #-120]	; 0xffffff88
   19a98:	str	r1, [fp, #-124]	; 0xffffff84
   19a9c:	blt	19b84 <__assert_fail@plt+0x8ae4>
   19aa0:	b	19b98 <__assert_fail@plt+0x8af8>
   19aa4:	ldr	r0, [fp, #8]
   19aa8:	cmp	r0, #0
   19aac:	bne	19ab4 <__assert_fail@plt+0x8a14>
   19ab0:	b	19b98 <__assert_fail@plt+0x8af8>
   19ab4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19ab8:	cmp	r0, #0
   19abc:	bge	19b44 <__assert_fail@plt+0x8aa4>
   19ac0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19ac4:	cmn	r0, #1
   19ac8:	bne	19b04 <__assert_fail@plt+0x8a64>
   19acc:	b	19ad0 <__assert_fail@plt+0x8a30>
   19ad0:	ldr	r0, [fp, #8]
   19ad4:	mov	r1, #-2147483648	; 0x80000000
   19ad8:	add	r1, r1, r0, asr #31
   19adc:	rsbs	r0, r0, #0
   19ae0:	rscs	r1, r1, #0
   19ae4:	str	r0, [fp, #-128]	; 0xffffff80
   19ae8:	str	r1, [fp, #-132]	; 0xffffff7c
   19aec:	blt	19b84 <__assert_fail@plt+0x8ae4>
   19af0:	b	19b98 <__assert_fail@plt+0x8af8>
   19af4:	mov	r0, #0
   19af8:	cmp	r0, #0
   19afc:	bne	19b84 <__assert_fail@plt+0x8ae4>
   19b00:	b	19b98 <__assert_fail@plt+0x8af8>
   19b04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19b08:	asr	r3, r0, #31
   19b0c:	mov	r1, #0
   19b10:	mov	r2, #-2147483648	; 0x80000000
   19b14:	str	r0, [fp, #-136]	; 0xffffff78
   19b18:	mov	r0, r1
   19b1c:	mov	r1, r2
   19b20:	ldr	r2, [fp, #-136]	; 0xffffff78
   19b24:	bl	1fbf8 <__assert_fail@plt+0xeb58>
   19b28:	ldr	r2, [fp, #8]
   19b2c:	subs	r0, r0, r2
   19b30:	sbcs	r1, r1, r2, asr #31
   19b34:	str	r0, [fp, #-140]	; 0xffffff74
   19b38:	str	r1, [fp, #-144]	; 0xffffff70
   19b3c:	blt	19b84 <__assert_fail@plt+0x8ae4>
   19b40:	b	19b98 <__assert_fail@plt+0x8af8>
   19b44:	ldr	r0, [fp, #8]
   19b48:	asr	r3, r0, #31
   19b4c:	mvn	r1, #0
   19b50:	mvn	r2, #-2147483648	; 0x80000000
   19b54:	str	r0, [fp, #-148]	; 0xffffff6c
   19b58:	mov	r0, r1
   19b5c:	mov	r1, r2
   19b60:	ldr	r2, [fp, #-148]	; 0xffffff6c
   19b64:	bl	1fbf8 <__assert_fail@plt+0xeb58>
   19b68:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19b6c:	subs	r0, r0, r2
   19b70:	sbcs	r1, r1, r2, asr #31
   19b74:	str	r0, [fp, #-152]	; 0xffffff68
   19b78:	str	r1, [fp, #-156]	; 0xffffff64
   19b7c:	bge	19b98 <__assert_fail@plt+0x8af8>
   19b80:	b	19b84 <__assert_fail@plt+0x8ae4>
   19b84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19b88:	ldr	r1, [fp, #8]
   19b8c:	mul	r0, r0, r1
   19b90:	str	r0, [fp, #-28]	; 0xffffffe4
   19b94:	b	19df8 <__assert_fail@plt+0x8d58>
   19b98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19b9c:	ldr	r1, [fp, #8]
   19ba0:	mul	r0, r0, r1
   19ba4:	str	r0, [fp, #-28]	; 0xffffffe4
   19ba8:	b	19e08 <__assert_fail@plt+0x8d68>
   19bac:	ldr	r0, [fp, #8]
   19bb0:	cmp	r0, #0
   19bb4:	bge	19d14 <__assert_fail@plt+0x8c74>
   19bb8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19bbc:	cmp	r0, #0
   19bc0:	bge	19c9c <__assert_fail@plt+0x8bfc>
   19bc4:	b	19c0c <__assert_fail@plt+0x8b6c>
   19bc8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19bcc:	ldr	r1, [fp, #8]
   19bd0:	asr	r3, r1, #31
   19bd4:	mvn	r2, #0
   19bd8:	str	r0, [fp, #-160]	; 0xffffff60
   19bdc:	mov	r0, r2
   19be0:	str	r1, [fp, #-164]	; 0xffffff5c
   19be4:	mov	r1, r2
   19be8:	ldr	r2, [fp, #-164]	; 0xffffff5c
   19bec:	bl	1fccc <__assert_fail@plt+0xec2c>
   19bf0:	ldr	r2, [fp, #-160]	; 0xffffff60
   19bf4:	subs	r0, r2, r0
   19bf8:	rscs	r1, r1, r2, asr #31
   19bfc:	str	r0, [fp, #-168]	; 0xffffff58
   19c00:	str	r1, [fp, #-172]	; 0xffffff54
   19c04:	bcc	19dd0 <__assert_fail@plt+0x8d30>
   19c08:	b	19de4 <__assert_fail@plt+0x8d44>
   19c0c:	b	19c10 <__assert_fail@plt+0x8b70>
   19c10:	ldr	r0, [pc, #-472]	; 19a40 <__assert_fail@plt+0x89a0>
   19c14:	ldr	r1, [fp, #8]
   19c18:	cmp	r1, r0
   19c1c:	blt	19c34 <__assert_fail@plt+0x8b94>
   19c20:	b	19c48 <__assert_fail@plt+0x8ba8>
   19c24:	ldr	r0, [fp, #8]
   19c28:	movw	r1, #0
   19c2c:	cmp	r1, r0
   19c30:	bge	19c48 <__assert_fail@plt+0x8ba8>
   19c34:	mov	r0, #1
   19c38:	mvn	r1, #0
   19c3c:	str	r1, [fp, #-176]	; 0xffffff50
   19c40:	str	r0, [fp, #-180]	; 0xffffff4c
   19c44:	b	19c74 <__assert_fail@plt+0x8bd4>
   19c48:	ldr	r0, [fp, #8]
   19c4c:	rsb	r0, r0, #0
   19c50:	asr	r3, r0, #31
   19c54:	mvn	r1, #0
   19c58:	str	r0, [fp, #-184]	; 0xffffff48
   19c5c:	mov	r0, r1
   19c60:	ldr	r2, [fp, #-184]	; 0xffffff48
   19c64:	bl	1fccc <__assert_fail@plt+0xec2c>
   19c68:	str	r0, [fp, #-176]	; 0xffffff50
   19c6c:	str	r1, [fp, #-180]	; 0xffffff4c
   19c70:	b	19c74 <__assert_fail@plt+0x8bd4>
   19c74:	ldr	r0, [fp, #-180]	; 0xffffff4c
   19c78:	ldr	r1, [fp, #-176]	; 0xffffff50
   19c7c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19c80:	mvn	r2, r2
   19c84:	subs	r1, r2, r1
   19c88:	rscs	r0, r0, r2, asr #31
   19c8c:	str	r1, [sp, #188]	; 0xbc
   19c90:	str	r0, [sp, #184]	; 0xb8
   19c94:	bcs	19dd0 <__assert_fail@plt+0x8d30>
   19c98:	b	19de4 <__assert_fail@plt+0x8d44>
   19c9c:	b	19ca0 <__assert_fail@plt+0x8c00>
   19ca0:	b	19cf8 <__assert_fail@plt+0x8c58>
   19ca4:	b	19cf8 <__assert_fail@plt+0x8c58>
   19ca8:	ldr	r0, [fp, #8]
   19cac:	cmn	r0, #1
   19cb0:	bne	19cf8 <__assert_fail@plt+0x8c58>
   19cb4:	b	19cb8 <__assert_fail@plt+0x8c18>
   19cb8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19cbc:	add	r0, r0, #0
   19cc0:	movw	r1, #0
   19cc4:	cmp	r1, r0
   19cc8:	blt	19dd0 <__assert_fail@plt+0x8d30>
   19ccc:	b	19de4 <__assert_fail@plt+0x8d44>
   19cd0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19cd4:	movw	r1, #0
   19cd8:	cmp	r1, r0
   19cdc:	bge	19de4 <__assert_fail@plt+0x8d44>
   19ce0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19ce4:	sub	r0, r0, #1
   19ce8:	mvn	r1, #0
   19cec:	cmp	r1, r0
   19cf0:	blt	19dd0 <__assert_fail@plt+0x8d30>
   19cf4:	b	19de4 <__assert_fail@plt+0x8d44>
   19cf8:	ldr	r0, [fp, #8]
   19cfc:	movw	r1, #0
   19d00:	sdiv	r0, r1, r0
   19d04:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19d08:	cmp	r0, r1
   19d0c:	blt	19dd0 <__assert_fail@plt+0x8d30>
   19d10:	b	19de4 <__assert_fail@plt+0x8d44>
   19d14:	ldr	r0, [fp, #8]
   19d18:	cmp	r0, #0
   19d1c:	bne	19d24 <__assert_fail@plt+0x8c84>
   19d20:	b	19de4 <__assert_fail@plt+0x8d44>
   19d24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19d28:	cmp	r0, #0
   19d2c:	bge	19d98 <__assert_fail@plt+0x8cf8>
   19d30:	b	19d34 <__assert_fail@plt+0x8c94>
   19d34:	b	19d7c <__assert_fail@plt+0x8cdc>
   19d38:	b	19d7c <__assert_fail@plt+0x8cdc>
   19d3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19d40:	cmn	r0, #1
   19d44:	bne	19d7c <__assert_fail@plt+0x8cdc>
   19d48:	b	19d4c <__assert_fail@plt+0x8cac>
   19d4c:	ldr	r0, [fp, #8]
   19d50:	add	r0, r0, #0
   19d54:	movw	r1, #0
   19d58:	cmp	r1, r0
   19d5c:	blt	19dd0 <__assert_fail@plt+0x8d30>
   19d60:	b	19de4 <__assert_fail@plt+0x8d44>
   19d64:	ldr	r0, [fp, #8]
   19d68:	sub	r0, r0, #1
   19d6c:	mvn	r1, #0
   19d70:	cmp	r1, r0
   19d74:	blt	19dd0 <__assert_fail@plt+0x8d30>
   19d78:	b	19de4 <__assert_fail@plt+0x8d44>
   19d7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19d80:	movw	r1, #0
   19d84:	sdiv	r0, r1, r0
   19d88:	ldr	r1, [fp, #8]
   19d8c:	cmp	r0, r1
   19d90:	blt	19dd0 <__assert_fail@plt+0x8d30>
   19d94:	b	19de4 <__assert_fail@plt+0x8d44>
   19d98:	ldr	r0, [fp, #8]
   19d9c:	asr	r3, r0, #31
   19da0:	mvn	r1, #0
   19da4:	str	r0, [sp, #180]	; 0xb4
   19da8:	mov	r0, r1
   19dac:	ldr	r2, [sp, #180]	; 0xb4
   19db0:	bl	1fccc <__assert_fail@plt+0xec2c>
   19db4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19db8:	subs	r0, r0, r2
   19dbc:	sbcs	r1, r1, r2, asr #31
   19dc0:	str	r0, [sp, #176]	; 0xb0
   19dc4:	str	r1, [sp, #172]	; 0xac
   19dc8:	bcs	19de4 <__assert_fail@plt+0x8d44>
   19dcc:	b	19dd0 <__assert_fail@plt+0x8d30>
   19dd0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19dd4:	ldr	r1, [fp, #8]
   19dd8:	mul	r0, r0, r1
   19ddc:	str	r0, [fp, #-28]	; 0xffffffe4
   19de0:	b	19df8 <__assert_fail@plt+0x8d58>
   19de4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19de8:	ldr	r1, [fp, #8]
   19dec:	mul	r0, r0, r1
   19df0:	str	r0, [fp, #-28]	; 0xffffffe4
   19df4:	b	19e08 <__assert_fail@plt+0x8d68>
   19df8:	ldr	r0, [pc, #-1108]	; 199ac <__assert_fail@plt+0x890c>
   19dfc:	str	r0, [sp, #168]	; 0xa8
   19e00:	b	19e28 <__assert_fail@plt+0x8d88>
   19e04:			; <UNDEFINED> instruction: 0xffff8000
   19e08:	ldr	r0, [fp, #-28]	; 0xffffffe4
   19e0c:	cmp	r0, #64	; 0x40
   19e10:	movw	r0, #0
   19e14:	movlt	r0, #1
   19e18:	tst	r0, #1
   19e1c:	movw	r0, #64	; 0x40
   19e20:	moveq	r0, #0
   19e24:	str	r0, [sp, #168]	; 0xa8
   19e28:	ldr	r0, [sp, #168]	; 0xa8
   19e2c:	str	r0, [fp, #-32]	; 0xffffffe0
   19e30:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19e34:	cmp	r0, #0
   19e38:	beq	19e68 <__assert_fail@plt+0x8dc8>
   19e3c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19e40:	ldr	r1, [fp, #8]
   19e44:	sdiv	r0, r0, r1
   19e48:	str	r0, [fp, #-24]	; 0xffffffe8
   19e4c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19e50:	mov	r1, r0
   19e54:	ldr	r2, [fp, #8]
   19e58:	sdiv	r3, r0, r2
   19e5c:	mls	r0, r3, r2, r0
   19e60:	sub	r0, r1, r0
   19e64:	str	r0, [fp, #-28]	; 0xffffffe4
   19e68:	ldr	r0, [fp, #-4]
   19e6c:	movw	r1, #0
   19e70:	cmp	r0, r1
   19e74:	bne	19e84 <__assert_fail@plt+0x8de4>
   19e78:	ldr	r0, [fp, #-8]
   19e7c:	movw	r1, #0
   19e80:	str	r1, [r0]
   19e84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19e88:	ldr	r1, [fp, #-20]	; 0xffffffec
   19e8c:	sub	r0, r0, r1
   19e90:	ldr	r1, [fp, #-12]
   19e94:	cmp	r0, r1
   19e98:	bge	1b2d0 <__assert_fail@plt+0xa230>
   19e9c:	ldr	r0, [fp, #-20]	; 0xffffffec
   19ea0:	ldr	r1, [fp, #-12]
   19ea4:	add	r1, r0, r1
   19ea8:	mov	r2, #1
   19eac:	cmp	r1, r0
   19eb0:	movwvc	r2, #0
   19eb4:	str	r1, [fp, #-24]	; 0xffffffe8
   19eb8:	tst	r2, #1
   19ebc:	bne	1b2cc <__assert_fail@plt+0xa22c>
   19ec0:	ldr	r0, [fp, #-16]
   19ec4:	movw	r1, #0
   19ec8:	cmp	r1, r0
   19ecc:	bgt	19ee0 <__assert_fail@plt+0x8e40>
   19ed0:	ldr	r0, [fp, #-16]
   19ed4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19ed8:	cmp	r0, r1
   19edc:	blt	1b2cc <__assert_fail@plt+0xa22c>
   19ee0:	b	1a2bc <__assert_fail@plt+0x921c>
   19ee4:	b	19ee8 <__assert_fail@plt+0x8e48>
   19ee8:	ldr	r0, [fp, #8]
   19eec:	cmp	r0, #0
   19ef0:	bge	1a004 <__assert_fail@plt+0x8f64>
   19ef4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19ef8:	cmp	r0, #0
   19efc:	bge	19f88 <__assert_fail@plt+0x8ee8>
   19f00:	b	19f04 <__assert_fail@plt+0x8e64>
   19f04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19f08:	ldr	r1, [fp, #8]
   19f0c:	movw	r2, #127	; 0x7f
   19f10:	sdiv	r1, r2, r1
   19f14:	cmp	r0, r1
   19f18:	blt	1a0a4 <__assert_fail@plt+0x9004>
   19f1c:	b	1a0bc <__assert_fail@plt+0x901c>
   19f20:	b	19f24 <__assert_fail@plt+0x8e84>
   19f24:	ldr	r0, [pc, #-1260]	; 19a40 <__assert_fail@plt+0x89a0>
   19f28:	ldr	r1, [fp, #8]
   19f2c:	cmp	r1, r0
   19f30:	blt	19f48 <__assert_fail@plt+0x8ea8>
   19f34:	b	19f54 <__assert_fail@plt+0x8eb4>
   19f38:	ldr	r0, [fp, #8]
   19f3c:	movw	r1, #0
   19f40:	cmp	r1, r0
   19f44:	bge	19f54 <__assert_fail@plt+0x8eb4>
   19f48:	movw	r0, #0
   19f4c:	str	r0, [sp, #164]	; 0xa4
   19f50:	b	19f6c <__assert_fail@plt+0x8ecc>
   19f54:	ldr	r0, [fp, #8]
   19f58:	movw	r1, #0
   19f5c:	sub	r0, r1, r0
   19f60:	movw	r1, #127	; 0x7f
   19f64:	sdiv	r0, r1, r0
   19f68:	str	r0, [sp, #164]	; 0xa4
   19f6c:	ldr	r0, [sp, #164]	; 0xa4
   19f70:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19f74:	mvn	r2, #0
   19f78:	sub	r1, r2, r1
   19f7c:	cmp	r0, r1
   19f80:	ble	1a0a4 <__assert_fail@plt+0x9004>
   19f84:	b	1a0bc <__assert_fail@plt+0x901c>
   19f88:	b	19f8c <__assert_fail@plt+0x8eec>
   19f8c:	b	19fe8 <__assert_fail@plt+0x8f48>
   19f90:	b	19fe8 <__assert_fail@plt+0x8f48>
   19f94:	ldr	r0, [fp, #8]
   19f98:	cmn	r0, #1
   19f9c:	bne	19fe8 <__assert_fail@plt+0x8f48>
   19fa0:	b	19fa4 <__assert_fail@plt+0x8f04>
   19fa4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19fa8:	mvn	r1, #127	; 0x7f
   19fac:	add	r0, r0, r1
   19fb0:	movw	r1, #0
   19fb4:	cmp	r1, r0
   19fb8:	blt	1a0a4 <__assert_fail@plt+0x9004>
   19fbc:	b	1a0bc <__assert_fail@plt+0x901c>
   19fc0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19fc4:	movw	r1, #0
   19fc8:	cmp	r1, r0
   19fcc:	bge	1a0bc <__assert_fail@plt+0x901c>
   19fd0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19fd4:	sub	r0, r0, #1
   19fd8:	movw	r1, #127	; 0x7f
   19fdc:	cmp	r1, r0
   19fe0:	blt	1a0a4 <__assert_fail@plt+0x9004>
   19fe4:	b	1a0bc <__assert_fail@plt+0x901c>
   19fe8:	ldr	r0, [fp, #8]
   19fec:	mvn	r1, #127	; 0x7f
   19ff0:	sdiv	r0, r1, r0
   19ff4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19ff8:	cmp	r0, r1
   19ffc:	blt	1a0a4 <__assert_fail@plt+0x9004>
   1a000:	b	1a0bc <__assert_fail@plt+0x901c>
   1a004:	ldr	r0, [fp, #8]
   1a008:	cmp	r0, #0
   1a00c:	bne	1a014 <__assert_fail@plt+0x8f74>
   1a010:	b	1a0bc <__assert_fail@plt+0x901c>
   1a014:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a018:	cmp	r0, #0
   1a01c:	bge	1a08c <__assert_fail@plt+0x8fec>
   1a020:	b	1a024 <__assert_fail@plt+0x8f84>
   1a024:	b	1a070 <__assert_fail@plt+0x8fd0>
   1a028:	b	1a070 <__assert_fail@plt+0x8fd0>
   1a02c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a030:	cmn	r0, #1
   1a034:	bne	1a070 <__assert_fail@plt+0x8fd0>
   1a038:	b	1a03c <__assert_fail@plt+0x8f9c>
   1a03c:	ldr	r0, [fp, #8]
   1a040:	mvn	r1, #127	; 0x7f
   1a044:	add	r0, r0, r1
   1a048:	movw	r1, #0
   1a04c:	cmp	r1, r0
   1a050:	blt	1a0a4 <__assert_fail@plt+0x9004>
   1a054:	b	1a0bc <__assert_fail@plt+0x901c>
   1a058:	ldr	r0, [fp, #8]
   1a05c:	sub	r0, r0, #1
   1a060:	movw	r1, #127	; 0x7f
   1a064:	cmp	r1, r0
   1a068:	blt	1a0a4 <__assert_fail@plt+0x9004>
   1a06c:	b	1a0bc <__assert_fail@plt+0x901c>
   1a070:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a074:	mvn	r1, #127	; 0x7f
   1a078:	sdiv	r0, r1, r0
   1a07c:	ldr	r1, [fp, #8]
   1a080:	cmp	r0, r1
   1a084:	blt	1a0a4 <__assert_fail@plt+0x9004>
   1a088:	b	1a0bc <__assert_fail@plt+0x901c>
   1a08c:	ldr	r0, [fp, #8]
   1a090:	movw	r1, #127	; 0x7f
   1a094:	sdiv	r0, r1, r0
   1a098:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a09c:	cmp	r0, r1
   1a0a0:	bge	1a0bc <__assert_fail@plt+0x901c>
   1a0a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a0a8:	ldr	r1, [fp, #8]
   1a0ac:	mul	r0, r0, r1
   1a0b0:	sxtb	r0, r0
   1a0b4:	str	r0, [fp, #-28]	; 0xffffffe4
   1a0b8:	b	1b2cc <__assert_fail@plt+0xa22c>
   1a0bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a0c0:	ldr	r1, [fp, #8]
   1a0c4:	mul	r0, r0, r1
   1a0c8:	sxtb	r0, r0
   1a0cc:	str	r0, [fp, #-28]	; 0xffffffe4
   1a0d0:	b	1b2d0 <__assert_fail@plt+0xa230>
   1a0d4:	ldr	r0, [fp, #8]
   1a0d8:	cmp	r0, #0
   1a0dc:	bge	1a1ec <__assert_fail@plt+0x914c>
   1a0e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a0e4:	cmp	r0, #0
   1a0e8:	bge	1a174 <__assert_fail@plt+0x90d4>
   1a0ec:	b	1a0f0 <__assert_fail@plt+0x9050>
   1a0f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a0f4:	ldr	r1, [fp, #8]
   1a0f8:	movw	r2, #255	; 0xff
   1a0fc:	sdiv	r1, r2, r1
   1a100:	cmp	r0, r1
   1a104:	blt	1a288 <__assert_fail@plt+0x91e8>
   1a108:	b	1a2a4 <__assert_fail@plt+0x9204>
   1a10c:	b	1a110 <__assert_fail@plt+0x9070>
   1a110:	ldr	r0, [pc, #-1752]	; 19a40 <__assert_fail@plt+0x89a0>
   1a114:	ldr	r1, [fp, #8]
   1a118:	cmp	r1, r0
   1a11c:	blt	1a134 <__assert_fail@plt+0x9094>
   1a120:	b	1a140 <__assert_fail@plt+0x90a0>
   1a124:	ldr	r0, [fp, #8]
   1a128:	movw	r1, #0
   1a12c:	cmp	r1, r0
   1a130:	bge	1a140 <__assert_fail@plt+0x90a0>
   1a134:	movw	r0, #0
   1a138:	str	r0, [sp, #160]	; 0xa0
   1a13c:	b	1a158 <__assert_fail@plt+0x90b8>
   1a140:	ldr	r0, [fp, #8]
   1a144:	movw	r1, #0
   1a148:	sub	r0, r1, r0
   1a14c:	movw	r1, #255	; 0xff
   1a150:	sdiv	r0, r1, r0
   1a154:	str	r0, [sp, #160]	; 0xa0
   1a158:	ldr	r0, [sp, #160]	; 0xa0
   1a15c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a160:	mvn	r2, #0
   1a164:	sub	r1, r2, r1
   1a168:	cmp	r0, r1
   1a16c:	ble	1a288 <__assert_fail@plt+0x91e8>
   1a170:	b	1a2a4 <__assert_fail@plt+0x9204>
   1a174:	b	1a178 <__assert_fail@plt+0x90d8>
   1a178:	b	1a1d0 <__assert_fail@plt+0x9130>
   1a17c:	b	1a1d0 <__assert_fail@plt+0x9130>
   1a180:	ldr	r0, [fp, #8]
   1a184:	cmn	r0, #1
   1a188:	bne	1a1d0 <__assert_fail@plt+0x9130>
   1a18c:	b	1a190 <__assert_fail@plt+0x90f0>
   1a190:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a194:	add	r0, r0, #0
   1a198:	movw	r1, #0
   1a19c:	cmp	r1, r0
   1a1a0:	blt	1a288 <__assert_fail@plt+0x91e8>
   1a1a4:	b	1a2a4 <__assert_fail@plt+0x9204>
   1a1a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a1ac:	movw	r1, #0
   1a1b0:	cmp	r1, r0
   1a1b4:	bge	1a2a4 <__assert_fail@plt+0x9204>
   1a1b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a1bc:	sub	r0, r0, #1
   1a1c0:	mvn	r1, #0
   1a1c4:	cmp	r1, r0
   1a1c8:	blt	1a288 <__assert_fail@plt+0x91e8>
   1a1cc:	b	1a2a4 <__assert_fail@plt+0x9204>
   1a1d0:	ldr	r0, [fp, #8]
   1a1d4:	movw	r1, #0
   1a1d8:	sdiv	r0, r1, r0
   1a1dc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a1e0:	cmp	r0, r1
   1a1e4:	blt	1a288 <__assert_fail@plt+0x91e8>
   1a1e8:	b	1a2a4 <__assert_fail@plt+0x9204>
   1a1ec:	ldr	r0, [fp, #8]
   1a1f0:	cmp	r0, #0
   1a1f4:	bne	1a1fc <__assert_fail@plt+0x915c>
   1a1f8:	b	1a2a4 <__assert_fail@plt+0x9204>
   1a1fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a200:	cmp	r0, #0
   1a204:	bge	1a270 <__assert_fail@plt+0x91d0>
   1a208:	b	1a20c <__assert_fail@plt+0x916c>
   1a20c:	b	1a254 <__assert_fail@plt+0x91b4>
   1a210:	b	1a254 <__assert_fail@plt+0x91b4>
   1a214:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a218:	cmn	r0, #1
   1a21c:	bne	1a254 <__assert_fail@plt+0x91b4>
   1a220:	b	1a224 <__assert_fail@plt+0x9184>
   1a224:	ldr	r0, [fp, #8]
   1a228:	add	r0, r0, #0
   1a22c:	movw	r1, #0
   1a230:	cmp	r1, r0
   1a234:	blt	1a288 <__assert_fail@plt+0x91e8>
   1a238:	b	1a2a4 <__assert_fail@plt+0x9204>
   1a23c:	ldr	r0, [fp, #8]
   1a240:	sub	r0, r0, #1
   1a244:	mvn	r1, #0
   1a248:	cmp	r1, r0
   1a24c:	blt	1a288 <__assert_fail@plt+0x91e8>
   1a250:	b	1a2a4 <__assert_fail@plt+0x9204>
   1a254:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a258:	movw	r1, #0
   1a25c:	sdiv	r0, r1, r0
   1a260:	ldr	r1, [fp, #8]
   1a264:	cmp	r0, r1
   1a268:	blt	1a288 <__assert_fail@plt+0x91e8>
   1a26c:	b	1a2a4 <__assert_fail@plt+0x9204>
   1a270:	ldr	r0, [fp, #8]
   1a274:	movw	r1, #255	; 0xff
   1a278:	sdiv	r0, r1, r0
   1a27c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a280:	cmp	r0, r1
   1a284:	bge	1a2a4 <__assert_fail@plt+0x9204>
   1a288:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a28c:	ldr	r1, [fp, #8]
   1a290:	mul	r0, r0, r1
   1a294:	and	r0, r0, #255	; 0xff
   1a298:	str	r0, [fp, #-28]	; 0xffffffe4
   1a29c:	b	1b2cc <__assert_fail@plt+0xa22c>
   1a2a0:	andhi	r0, r0, r0
   1a2a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a2a8:	ldr	r1, [fp, #8]
   1a2ac:	mul	r0, r0, r1
   1a2b0:	and	r0, r0, #255	; 0xff
   1a2b4:	str	r0, [fp, #-28]	; 0xffffffe4
   1a2b8:	b	1b2d0 <__assert_fail@plt+0xa230>
   1a2bc:	b	1a694 <__assert_fail@plt+0x95f4>
   1a2c0:	b	1a2c4 <__assert_fail@plt+0x9224>
   1a2c4:	ldr	r0, [fp, #8]
   1a2c8:	cmp	r0, #0
   1a2cc:	bge	1a3e0 <__assert_fail@plt+0x9340>
   1a2d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a2d4:	cmp	r0, #0
   1a2d8:	bge	1a364 <__assert_fail@plt+0x92c4>
   1a2dc:	b	1a2e0 <__assert_fail@plt+0x9240>
   1a2e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a2e4:	ldr	r1, [fp, #8]
   1a2e8:	movw	r2, #32767	; 0x7fff
   1a2ec:	sdiv	r1, r2, r1
   1a2f0:	cmp	r0, r1
   1a2f4:	blt	1a480 <__assert_fail@plt+0x93e0>
   1a2f8:	b	1a498 <__assert_fail@plt+0x93f8>
   1a2fc:	b	1a300 <__assert_fail@plt+0x9260>
   1a300:	ldr	r0, [pc, #4084]	; 1b2fc <__assert_fail@plt+0xa25c>
   1a304:	ldr	r1, [fp, #8]
   1a308:	cmp	r1, r0
   1a30c:	blt	1a324 <__assert_fail@plt+0x9284>
   1a310:	b	1a330 <__assert_fail@plt+0x9290>
   1a314:	ldr	r0, [fp, #8]
   1a318:	movw	r1, #0
   1a31c:	cmp	r1, r0
   1a320:	bge	1a330 <__assert_fail@plt+0x9290>
   1a324:	movw	r0, #0
   1a328:	str	r0, [sp, #156]	; 0x9c
   1a32c:	b	1a348 <__assert_fail@plt+0x92a8>
   1a330:	ldr	r0, [fp, #8]
   1a334:	movw	r1, #0
   1a338:	sub	r0, r1, r0
   1a33c:	movw	r1, #32767	; 0x7fff
   1a340:	sdiv	r0, r1, r0
   1a344:	str	r0, [sp, #156]	; 0x9c
   1a348:	ldr	r0, [sp, #156]	; 0x9c
   1a34c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a350:	mvn	r2, #0
   1a354:	sub	r1, r2, r1
   1a358:	cmp	r0, r1
   1a35c:	ble	1a480 <__assert_fail@plt+0x93e0>
   1a360:	b	1a498 <__assert_fail@plt+0x93f8>
   1a364:	b	1a368 <__assert_fail@plt+0x92c8>
   1a368:	b	1a3c4 <__assert_fail@plt+0x9324>
   1a36c:	b	1a3c4 <__assert_fail@plt+0x9324>
   1a370:	ldr	r0, [fp, #8]
   1a374:	cmn	r0, #1
   1a378:	bne	1a3c4 <__assert_fail@plt+0x9324>
   1a37c:	b	1a380 <__assert_fail@plt+0x92e0>
   1a380:	ldr	r0, [pc, #3964]	; 1b304 <__assert_fail@plt+0xa264>
   1a384:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a388:	add	r0, r1, r0
   1a38c:	movw	r1, #0
   1a390:	cmp	r1, r0
   1a394:	blt	1a480 <__assert_fail@plt+0x93e0>
   1a398:	b	1a498 <__assert_fail@plt+0x93f8>
   1a39c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a3a0:	movw	r1, #0
   1a3a4:	cmp	r1, r0
   1a3a8:	bge	1a498 <__assert_fail@plt+0x93f8>
   1a3ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a3b0:	sub	r0, r0, #1
   1a3b4:	movw	r1, #32767	; 0x7fff
   1a3b8:	cmp	r1, r0
   1a3bc:	blt	1a480 <__assert_fail@plt+0x93e0>
   1a3c0:	b	1a498 <__assert_fail@plt+0x93f8>
   1a3c4:	ldr	r0, [pc, #3896]	; 1b304 <__assert_fail@plt+0xa264>
   1a3c8:	ldr	r1, [fp, #8]
   1a3cc:	sdiv	r0, r0, r1
   1a3d0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a3d4:	cmp	r0, r1
   1a3d8:	blt	1a480 <__assert_fail@plt+0x93e0>
   1a3dc:	b	1a498 <__assert_fail@plt+0x93f8>
   1a3e0:	ldr	r0, [fp, #8]
   1a3e4:	cmp	r0, #0
   1a3e8:	bne	1a3f0 <__assert_fail@plt+0x9350>
   1a3ec:	b	1a498 <__assert_fail@plt+0x93f8>
   1a3f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a3f4:	cmp	r0, #0
   1a3f8:	bge	1a468 <__assert_fail@plt+0x93c8>
   1a3fc:	b	1a400 <__assert_fail@plt+0x9360>
   1a400:	b	1a44c <__assert_fail@plt+0x93ac>
   1a404:	b	1a44c <__assert_fail@plt+0x93ac>
   1a408:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a40c:	cmn	r0, #1
   1a410:	bne	1a44c <__assert_fail@plt+0x93ac>
   1a414:	b	1a418 <__assert_fail@plt+0x9378>
   1a418:	ldr	r0, [pc, #3812]	; 1b304 <__assert_fail@plt+0xa264>
   1a41c:	ldr	r1, [fp, #8]
   1a420:	add	r0, r1, r0
   1a424:	movw	r1, #0
   1a428:	cmp	r1, r0
   1a42c:	blt	1a480 <__assert_fail@plt+0x93e0>
   1a430:	b	1a498 <__assert_fail@plt+0x93f8>
   1a434:	ldr	r0, [fp, #8]
   1a438:	sub	r0, r0, #1
   1a43c:	movw	r1, #32767	; 0x7fff
   1a440:	cmp	r1, r0
   1a444:	blt	1a480 <__assert_fail@plt+0x93e0>
   1a448:	b	1a498 <__assert_fail@plt+0x93f8>
   1a44c:	ldr	r0, [pc, #3760]	; 1b304 <__assert_fail@plt+0xa264>
   1a450:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a454:	sdiv	r0, r0, r1
   1a458:	ldr	r1, [fp, #8]
   1a45c:	cmp	r0, r1
   1a460:	blt	1a480 <__assert_fail@plt+0x93e0>
   1a464:	b	1a498 <__assert_fail@plt+0x93f8>
   1a468:	ldr	r0, [fp, #8]
   1a46c:	movw	r1, #32767	; 0x7fff
   1a470:	sdiv	r0, r1, r0
   1a474:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a478:	cmp	r0, r1
   1a47c:	bge	1a498 <__assert_fail@plt+0x93f8>
   1a480:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a484:	ldr	r1, [fp, #8]
   1a488:	mul	r0, r0, r1
   1a48c:	sxth	r0, r0
   1a490:	str	r0, [fp, #-28]	; 0xffffffe4
   1a494:	b	1b2cc <__assert_fail@plt+0xa22c>
   1a498:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a49c:	ldr	r1, [fp, #8]
   1a4a0:	mul	r0, r0, r1
   1a4a4:	sxth	r0, r0
   1a4a8:	str	r0, [fp, #-28]	; 0xffffffe4
   1a4ac:	b	1b2d0 <__assert_fail@plt+0xa230>
   1a4b0:	ldr	r0, [fp, #8]
   1a4b4:	cmp	r0, #0
   1a4b8:	bge	1a5c8 <__assert_fail@plt+0x9528>
   1a4bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a4c0:	cmp	r0, #0
   1a4c4:	bge	1a550 <__assert_fail@plt+0x94b0>
   1a4c8:	b	1a4cc <__assert_fail@plt+0x942c>
   1a4cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a4d0:	ldr	r1, [fp, #8]
   1a4d4:	movw	r2, #65535	; 0xffff
   1a4d8:	sdiv	r1, r2, r1
   1a4dc:	cmp	r0, r1
   1a4e0:	blt	1a664 <__assert_fail@plt+0x95c4>
   1a4e4:	b	1a67c <__assert_fail@plt+0x95dc>
   1a4e8:	b	1a4ec <__assert_fail@plt+0x944c>
   1a4ec:	ldr	r0, [pc, #3592]	; 1b2fc <__assert_fail@plt+0xa25c>
   1a4f0:	ldr	r1, [fp, #8]
   1a4f4:	cmp	r1, r0
   1a4f8:	blt	1a510 <__assert_fail@plt+0x9470>
   1a4fc:	b	1a51c <__assert_fail@plt+0x947c>
   1a500:	ldr	r0, [fp, #8]
   1a504:	movw	r1, #0
   1a508:	cmp	r1, r0
   1a50c:	bge	1a51c <__assert_fail@plt+0x947c>
   1a510:	movw	r0, #0
   1a514:	str	r0, [sp, #152]	; 0x98
   1a518:	b	1a534 <__assert_fail@plt+0x9494>
   1a51c:	ldr	r0, [fp, #8]
   1a520:	movw	r1, #0
   1a524:	sub	r0, r1, r0
   1a528:	movw	r1, #65535	; 0xffff
   1a52c:	sdiv	r0, r1, r0
   1a530:	str	r0, [sp, #152]	; 0x98
   1a534:	ldr	r0, [sp, #152]	; 0x98
   1a538:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a53c:	mvn	r2, #0
   1a540:	sub	r1, r2, r1
   1a544:	cmp	r0, r1
   1a548:	ble	1a664 <__assert_fail@plt+0x95c4>
   1a54c:	b	1a67c <__assert_fail@plt+0x95dc>
   1a550:	b	1a554 <__assert_fail@plt+0x94b4>
   1a554:	b	1a5ac <__assert_fail@plt+0x950c>
   1a558:	b	1a5ac <__assert_fail@plt+0x950c>
   1a55c:	ldr	r0, [fp, #8]
   1a560:	cmn	r0, #1
   1a564:	bne	1a5ac <__assert_fail@plt+0x950c>
   1a568:	b	1a56c <__assert_fail@plt+0x94cc>
   1a56c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a570:	add	r0, r0, #0
   1a574:	movw	r1, #0
   1a578:	cmp	r1, r0
   1a57c:	blt	1a664 <__assert_fail@plt+0x95c4>
   1a580:	b	1a67c <__assert_fail@plt+0x95dc>
   1a584:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a588:	movw	r1, #0
   1a58c:	cmp	r1, r0
   1a590:	bge	1a67c <__assert_fail@plt+0x95dc>
   1a594:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a598:	sub	r0, r0, #1
   1a59c:	mvn	r1, #0
   1a5a0:	cmp	r1, r0
   1a5a4:	blt	1a664 <__assert_fail@plt+0x95c4>
   1a5a8:	b	1a67c <__assert_fail@plt+0x95dc>
   1a5ac:	ldr	r0, [fp, #8]
   1a5b0:	movw	r1, #0
   1a5b4:	sdiv	r0, r1, r0
   1a5b8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a5bc:	cmp	r0, r1
   1a5c0:	blt	1a664 <__assert_fail@plt+0x95c4>
   1a5c4:	b	1a67c <__assert_fail@plt+0x95dc>
   1a5c8:	ldr	r0, [fp, #8]
   1a5cc:	cmp	r0, #0
   1a5d0:	bne	1a5d8 <__assert_fail@plt+0x9538>
   1a5d4:	b	1a67c <__assert_fail@plt+0x95dc>
   1a5d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a5dc:	cmp	r0, #0
   1a5e0:	bge	1a64c <__assert_fail@plt+0x95ac>
   1a5e4:	b	1a5e8 <__assert_fail@plt+0x9548>
   1a5e8:	b	1a630 <__assert_fail@plt+0x9590>
   1a5ec:	b	1a630 <__assert_fail@plt+0x9590>
   1a5f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a5f4:	cmn	r0, #1
   1a5f8:	bne	1a630 <__assert_fail@plt+0x9590>
   1a5fc:	b	1a600 <__assert_fail@plt+0x9560>
   1a600:	ldr	r0, [fp, #8]
   1a604:	add	r0, r0, #0
   1a608:	movw	r1, #0
   1a60c:	cmp	r1, r0
   1a610:	blt	1a664 <__assert_fail@plt+0x95c4>
   1a614:	b	1a67c <__assert_fail@plt+0x95dc>
   1a618:	ldr	r0, [fp, #8]
   1a61c:	sub	r0, r0, #1
   1a620:	mvn	r1, #0
   1a624:	cmp	r1, r0
   1a628:	blt	1a664 <__assert_fail@plt+0x95c4>
   1a62c:	b	1a67c <__assert_fail@plt+0x95dc>
   1a630:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a634:	movw	r1, #0
   1a638:	sdiv	r0, r1, r0
   1a63c:	ldr	r1, [fp, #8]
   1a640:	cmp	r0, r1
   1a644:	blt	1a664 <__assert_fail@plt+0x95c4>
   1a648:	b	1a67c <__assert_fail@plt+0x95dc>
   1a64c:	ldr	r0, [fp, #8]
   1a650:	movw	r1, #65535	; 0xffff
   1a654:	sdiv	r0, r1, r0
   1a658:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a65c:	cmp	r0, r1
   1a660:	bge	1a67c <__assert_fail@plt+0x95dc>
   1a664:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a668:	ldr	r1, [fp, #8]
   1a66c:	mul	r0, r0, r1
   1a670:	uxth	r0, r0
   1a674:	str	r0, [fp, #-28]	; 0xffffffe4
   1a678:	b	1b2cc <__assert_fail@plt+0xa22c>
   1a67c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a680:	ldr	r1, [fp, #8]
   1a684:	mul	r0, r0, r1
   1a688:	uxth	r0, r0
   1a68c:	str	r0, [fp, #-28]	; 0xffffffe4
   1a690:	b	1b2d0 <__assert_fail@plt+0xa230>
   1a694:	b	1a698 <__assert_fail@plt+0x95f8>
   1a698:	b	1a69c <__assert_fail@plt+0x95fc>
   1a69c:	ldr	r0, [fp, #8]
   1a6a0:	cmp	r0, #0
   1a6a4:	bge	1a7a8 <__assert_fail@plt+0x9708>
   1a6a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a6ac:	cmp	r0, #0
   1a6b0:	bge	1a73c <__assert_fail@plt+0x969c>
   1a6b4:	b	1a6b8 <__assert_fail@plt+0x9618>
   1a6b8:	ldr	r0, [pc, #3128]	; 1b2f8 <__assert_fail@plt+0xa258>
   1a6bc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a6c0:	ldr	r2, [fp, #8]
   1a6c4:	sdiv	r0, r0, r2
   1a6c8:	cmp	r1, r0
   1a6cc:	blt	1a838 <__assert_fail@plt+0x9798>
   1a6d0:	b	1a84c <__assert_fail@plt+0x97ac>
   1a6d4:	b	1a6d8 <__assert_fail@plt+0x9638>
   1a6d8:	ldr	r0, [pc, #3100]	; 1b2fc <__assert_fail@plt+0xa25c>
   1a6dc:	ldr	r1, [fp, #8]
   1a6e0:	cmp	r1, r0
   1a6e4:	blt	1a6fc <__assert_fail@plt+0x965c>
   1a6e8:	b	1a708 <__assert_fail@plt+0x9668>
   1a6ec:	ldr	r0, [fp, #8]
   1a6f0:	movw	r1, #0
   1a6f4:	cmp	r1, r0
   1a6f8:	bge	1a708 <__assert_fail@plt+0x9668>
   1a6fc:	movw	r0, #0
   1a700:	str	r0, [sp, #148]	; 0x94
   1a704:	b	1a720 <__assert_fail@plt+0x9680>
   1a708:	ldr	r0, [pc, #3048]	; 1b2f8 <__assert_fail@plt+0xa258>
   1a70c:	ldr	r1, [fp, #8]
   1a710:	movw	r2, #0
   1a714:	sub	r1, r2, r1
   1a718:	sdiv	r0, r0, r1
   1a71c:	str	r0, [sp, #148]	; 0x94
   1a720:	ldr	r0, [sp, #148]	; 0x94
   1a724:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a728:	mvn	r2, #0
   1a72c:	sub	r1, r2, r1
   1a730:	cmp	r0, r1
   1a734:	ble	1a838 <__assert_fail@plt+0x9798>
   1a738:	b	1a84c <__assert_fail@plt+0x97ac>
   1a73c:	ldr	r0, [fp, #8]
   1a740:	cmn	r0, #1
   1a744:	bne	1a78c <__assert_fail@plt+0x96ec>
   1a748:	b	1a74c <__assert_fail@plt+0x96ac>
   1a74c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a750:	add	r0, r0, #-2147483648	; 0x80000000
   1a754:	movw	r1, #0
   1a758:	cmp	r1, r0
   1a75c:	blt	1a838 <__assert_fail@plt+0x9798>
   1a760:	b	1a84c <__assert_fail@plt+0x97ac>
   1a764:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a768:	movw	r1, #0
   1a76c:	cmp	r1, r0
   1a770:	bge	1a84c <__assert_fail@plt+0x97ac>
   1a774:	ldr	r0, [pc, #2940]	; 1b2f8 <__assert_fail@plt+0xa258>
   1a778:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a77c:	sub	r1, r1, #1
   1a780:	cmp	r0, r1
   1a784:	blt	1a838 <__assert_fail@plt+0x9798>
   1a788:	b	1a84c <__assert_fail@plt+0x97ac>
   1a78c:	ldr	r0, [pc, #2924]	; 1b300 <__assert_fail@plt+0xa260>
   1a790:	ldr	r1, [fp, #8]
   1a794:	sdiv	r0, r0, r1
   1a798:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a79c:	cmp	r0, r1
   1a7a0:	blt	1a838 <__assert_fail@plt+0x9798>
   1a7a4:	b	1a84c <__assert_fail@plt+0x97ac>
   1a7a8:	ldr	r0, [fp, #8]
   1a7ac:	cmp	r0, #0
   1a7b0:	bne	1a7b8 <__assert_fail@plt+0x9718>
   1a7b4:	b	1a84c <__assert_fail@plt+0x97ac>
   1a7b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a7bc:	cmp	r0, #0
   1a7c0:	bge	1a820 <__assert_fail@plt+0x9780>
   1a7c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a7c8:	cmn	r0, #1
   1a7cc:	bne	1a804 <__assert_fail@plt+0x9764>
   1a7d0:	b	1a7d4 <__assert_fail@plt+0x9734>
   1a7d4:	ldr	r0, [fp, #8]
   1a7d8:	add	r0, r0, #-2147483648	; 0x80000000
   1a7dc:	movw	r1, #0
   1a7e0:	cmp	r1, r0
   1a7e4:	blt	1a838 <__assert_fail@plt+0x9798>
   1a7e8:	b	1a84c <__assert_fail@plt+0x97ac>
   1a7ec:	ldr	r0, [pc, #2820]	; 1b2f8 <__assert_fail@plt+0xa258>
   1a7f0:	ldr	r1, [fp, #8]
   1a7f4:	sub	r1, r1, #1
   1a7f8:	cmp	r0, r1
   1a7fc:	blt	1a838 <__assert_fail@plt+0x9798>
   1a800:	b	1a84c <__assert_fail@plt+0x97ac>
   1a804:	ldr	r0, [pc, #2804]	; 1b300 <__assert_fail@plt+0xa260>
   1a808:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a80c:	sdiv	r0, r0, r1
   1a810:	ldr	r1, [fp, #8]
   1a814:	cmp	r0, r1
   1a818:	blt	1a838 <__assert_fail@plt+0x9798>
   1a81c:	b	1a84c <__assert_fail@plt+0x97ac>
   1a820:	ldr	r0, [pc, #2768]	; 1b2f8 <__assert_fail@plt+0xa258>
   1a824:	ldr	r1, [fp, #8]
   1a828:	sdiv	r0, r0, r1
   1a82c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a830:	cmp	r0, r1
   1a834:	bge	1a84c <__assert_fail@plt+0x97ac>
   1a838:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a83c:	ldr	r1, [fp, #8]
   1a840:	mul	r0, r0, r1
   1a844:	str	r0, [fp, #-28]	; 0xffffffe4
   1a848:	b	1b2cc <__assert_fail@plt+0xa22c>
   1a84c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a850:	ldr	r1, [fp, #8]
   1a854:	mul	r0, r0, r1
   1a858:	str	r0, [fp, #-28]	; 0xffffffe4
   1a85c:	b	1b2d0 <__assert_fail@plt+0xa230>
   1a860:	ldr	r0, [fp, #8]
   1a864:	cmp	r0, #0
   1a868:	bge	1a978 <__assert_fail@plt+0x98d8>
   1a86c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a870:	cmp	r0, #0
   1a874:	bge	1a900 <__assert_fail@plt+0x9860>
   1a878:	b	1a898 <__assert_fail@plt+0x97f8>
   1a87c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a880:	ldr	r1, [fp, #8]
   1a884:	mvn	r2, #0
   1a888:	udiv	r1, r2, r1
   1a88c:	cmp	r0, r1
   1a890:	bcc	1aa14 <__assert_fail@plt+0x9974>
   1a894:	b	1aa28 <__assert_fail@plt+0x9988>
   1a898:	b	1a89c <__assert_fail@plt+0x97fc>
   1a89c:	ldr	r0, [pc, #2648]	; 1b2fc <__assert_fail@plt+0xa25c>
   1a8a0:	ldr	r1, [fp, #8]
   1a8a4:	cmp	r1, r0
   1a8a8:	blt	1a8c0 <__assert_fail@plt+0x9820>
   1a8ac:	b	1a8cc <__assert_fail@plt+0x982c>
   1a8b0:	ldr	r0, [fp, #8]
   1a8b4:	movw	r1, #0
   1a8b8:	cmp	r1, r0
   1a8bc:	bge	1a8cc <__assert_fail@plt+0x982c>
   1a8c0:	movw	r0, #1
   1a8c4:	str	r0, [sp, #144]	; 0x90
   1a8c8:	b	1a8e4 <__assert_fail@plt+0x9844>
   1a8cc:	ldr	r0, [fp, #8]
   1a8d0:	movw	r1, #0
   1a8d4:	sub	r0, r1, r0
   1a8d8:	mvn	r1, #0
   1a8dc:	udiv	r0, r1, r0
   1a8e0:	str	r0, [sp, #144]	; 0x90
   1a8e4:	ldr	r0, [sp, #144]	; 0x90
   1a8e8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a8ec:	mvn	r2, #0
   1a8f0:	sub	r1, r2, r1
   1a8f4:	cmp	r0, r1
   1a8f8:	bls	1aa14 <__assert_fail@plt+0x9974>
   1a8fc:	b	1aa28 <__assert_fail@plt+0x9988>
   1a900:	b	1a904 <__assert_fail@plt+0x9864>
   1a904:	b	1a95c <__assert_fail@plt+0x98bc>
   1a908:	b	1a95c <__assert_fail@plt+0x98bc>
   1a90c:	ldr	r0, [fp, #8]
   1a910:	cmn	r0, #1
   1a914:	bne	1a95c <__assert_fail@plt+0x98bc>
   1a918:	b	1a91c <__assert_fail@plt+0x987c>
   1a91c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a920:	add	r0, r0, #0
   1a924:	movw	r1, #0
   1a928:	cmp	r1, r0
   1a92c:	blt	1aa14 <__assert_fail@plt+0x9974>
   1a930:	b	1aa28 <__assert_fail@plt+0x9988>
   1a934:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a938:	movw	r1, #0
   1a93c:	cmp	r1, r0
   1a940:	bge	1aa28 <__assert_fail@plt+0x9988>
   1a944:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a948:	sub	r0, r0, #1
   1a94c:	mvn	r1, #0
   1a950:	cmp	r1, r0
   1a954:	blt	1aa14 <__assert_fail@plt+0x9974>
   1a958:	b	1aa28 <__assert_fail@plt+0x9988>
   1a95c:	ldr	r0, [fp, #8]
   1a960:	movw	r1, #0
   1a964:	sdiv	r0, r1, r0
   1a968:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a96c:	cmp	r0, r1
   1a970:	blt	1aa14 <__assert_fail@plt+0x9974>
   1a974:	b	1aa28 <__assert_fail@plt+0x9988>
   1a978:	ldr	r0, [fp, #8]
   1a97c:	cmp	r0, #0
   1a980:	bne	1a988 <__assert_fail@plt+0x98e8>
   1a984:	b	1aa28 <__assert_fail@plt+0x9988>
   1a988:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a98c:	cmp	r0, #0
   1a990:	bge	1a9fc <__assert_fail@plt+0x995c>
   1a994:	b	1a998 <__assert_fail@plt+0x98f8>
   1a998:	b	1a9e0 <__assert_fail@plt+0x9940>
   1a99c:	b	1a9e0 <__assert_fail@plt+0x9940>
   1a9a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a9a4:	cmn	r0, #1
   1a9a8:	bne	1a9e0 <__assert_fail@plt+0x9940>
   1a9ac:	b	1a9b0 <__assert_fail@plt+0x9910>
   1a9b0:	ldr	r0, [fp, #8]
   1a9b4:	add	r0, r0, #0
   1a9b8:	movw	r1, #0
   1a9bc:	cmp	r1, r0
   1a9c0:	blt	1aa14 <__assert_fail@plt+0x9974>
   1a9c4:	b	1aa28 <__assert_fail@plt+0x9988>
   1a9c8:	ldr	r0, [fp, #8]
   1a9cc:	sub	r0, r0, #1
   1a9d0:	mvn	r1, #0
   1a9d4:	cmp	r1, r0
   1a9d8:	blt	1aa14 <__assert_fail@plt+0x9974>
   1a9dc:	b	1aa28 <__assert_fail@plt+0x9988>
   1a9e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a9e4:	movw	r1, #0
   1a9e8:	sdiv	r0, r1, r0
   1a9ec:	ldr	r1, [fp, #8]
   1a9f0:	cmp	r0, r1
   1a9f4:	blt	1aa14 <__assert_fail@plt+0x9974>
   1a9f8:	b	1aa28 <__assert_fail@plt+0x9988>
   1a9fc:	ldr	r0, [fp, #8]
   1aa00:	mvn	r1, #0
   1aa04:	udiv	r0, r1, r0
   1aa08:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1aa0c:	cmp	r0, r1
   1aa10:	bcs	1aa28 <__assert_fail@plt+0x9988>
   1aa14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1aa18:	ldr	r1, [fp, #8]
   1aa1c:	mul	r0, r0, r1
   1aa20:	str	r0, [fp, #-28]	; 0xffffffe4
   1aa24:	b	1b2cc <__assert_fail@plt+0xa22c>
   1aa28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1aa2c:	ldr	r1, [fp, #8]
   1aa30:	mul	r0, r0, r1
   1aa34:	str	r0, [fp, #-28]	; 0xffffffe4
   1aa38:	b	1b2d0 <__assert_fail@plt+0xa230>
   1aa3c:	b	1aa40 <__assert_fail@plt+0x99a0>
   1aa40:	b	1aa44 <__assert_fail@plt+0x99a4>
   1aa44:	ldr	r0, [fp, #8]
   1aa48:	cmp	r0, #0
   1aa4c:	bge	1ab50 <__assert_fail@plt+0x9ab0>
   1aa50:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1aa54:	cmp	r0, #0
   1aa58:	bge	1aae4 <__assert_fail@plt+0x9a44>
   1aa5c:	b	1aa60 <__assert_fail@plt+0x99c0>
   1aa60:	ldr	r0, [pc, #2192]	; 1b2f8 <__assert_fail@plt+0xa258>
   1aa64:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1aa68:	ldr	r2, [fp, #8]
   1aa6c:	sdiv	r0, r0, r2
   1aa70:	cmp	r1, r0
   1aa74:	blt	1abe0 <__assert_fail@plt+0x9b40>
   1aa78:	b	1abf4 <__assert_fail@plt+0x9b54>
   1aa7c:	b	1aa80 <__assert_fail@plt+0x99e0>
   1aa80:	ldr	r0, [pc, #2164]	; 1b2fc <__assert_fail@plt+0xa25c>
   1aa84:	ldr	r1, [fp, #8]
   1aa88:	cmp	r1, r0
   1aa8c:	blt	1aaa4 <__assert_fail@plt+0x9a04>
   1aa90:	b	1aab0 <__assert_fail@plt+0x9a10>
   1aa94:	ldr	r0, [fp, #8]
   1aa98:	movw	r1, #0
   1aa9c:	cmp	r1, r0
   1aaa0:	bge	1aab0 <__assert_fail@plt+0x9a10>
   1aaa4:	movw	r0, #0
   1aaa8:	str	r0, [sp, #140]	; 0x8c
   1aaac:	b	1aac8 <__assert_fail@plt+0x9a28>
   1aab0:	ldr	r0, [pc, #2112]	; 1b2f8 <__assert_fail@plt+0xa258>
   1aab4:	ldr	r1, [fp, #8]
   1aab8:	movw	r2, #0
   1aabc:	sub	r1, r2, r1
   1aac0:	sdiv	r0, r0, r1
   1aac4:	str	r0, [sp, #140]	; 0x8c
   1aac8:	ldr	r0, [sp, #140]	; 0x8c
   1aacc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1aad0:	mvn	r2, #0
   1aad4:	sub	r1, r2, r1
   1aad8:	cmp	r0, r1
   1aadc:	ble	1abe0 <__assert_fail@plt+0x9b40>
   1aae0:	b	1abf4 <__assert_fail@plt+0x9b54>
   1aae4:	ldr	r0, [fp, #8]
   1aae8:	cmn	r0, #1
   1aaec:	bne	1ab34 <__assert_fail@plt+0x9a94>
   1aaf0:	b	1aaf4 <__assert_fail@plt+0x9a54>
   1aaf4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1aaf8:	add	r0, r0, #-2147483648	; 0x80000000
   1aafc:	movw	r1, #0
   1ab00:	cmp	r1, r0
   1ab04:	blt	1abe0 <__assert_fail@plt+0x9b40>
   1ab08:	b	1abf4 <__assert_fail@plt+0x9b54>
   1ab0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ab10:	movw	r1, #0
   1ab14:	cmp	r1, r0
   1ab18:	bge	1abf4 <__assert_fail@plt+0x9b54>
   1ab1c:	ldr	r0, [pc, #2004]	; 1b2f8 <__assert_fail@plt+0xa258>
   1ab20:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ab24:	sub	r1, r1, #1
   1ab28:	cmp	r0, r1
   1ab2c:	blt	1abe0 <__assert_fail@plt+0x9b40>
   1ab30:	b	1abf4 <__assert_fail@plt+0x9b54>
   1ab34:	ldr	r0, [pc, #1988]	; 1b300 <__assert_fail@plt+0xa260>
   1ab38:	ldr	r1, [fp, #8]
   1ab3c:	sdiv	r0, r0, r1
   1ab40:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ab44:	cmp	r0, r1
   1ab48:	blt	1abe0 <__assert_fail@plt+0x9b40>
   1ab4c:	b	1abf4 <__assert_fail@plt+0x9b54>
   1ab50:	ldr	r0, [fp, #8]
   1ab54:	cmp	r0, #0
   1ab58:	bne	1ab60 <__assert_fail@plt+0x9ac0>
   1ab5c:	b	1abf4 <__assert_fail@plt+0x9b54>
   1ab60:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ab64:	cmp	r0, #0
   1ab68:	bge	1abc8 <__assert_fail@plt+0x9b28>
   1ab6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ab70:	cmn	r0, #1
   1ab74:	bne	1abac <__assert_fail@plt+0x9b0c>
   1ab78:	b	1ab7c <__assert_fail@plt+0x9adc>
   1ab7c:	ldr	r0, [fp, #8]
   1ab80:	add	r0, r0, #-2147483648	; 0x80000000
   1ab84:	movw	r1, #0
   1ab88:	cmp	r1, r0
   1ab8c:	blt	1abe0 <__assert_fail@plt+0x9b40>
   1ab90:	b	1abf4 <__assert_fail@plt+0x9b54>
   1ab94:	ldr	r0, [pc, #1884]	; 1b2f8 <__assert_fail@plt+0xa258>
   1ab98:	ldr	r1, [fp, #8]
   1ab9c:	sub	r1, r1, #1
   1aba0:	cmp	r0, r1
   1aba4:	blt	1abe0 <__assert_fail@plt+0x9b40>
   1aba8:	b	1abf4 <__assert_fail@plt+0x9b54>
   1abac:	ldr	r0, [pc, #1868]	; 1b300 <__assert_fail@plt+0xa260>
   1abb0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1abb4:	sdiv	r0, r0, r1
   1abb8:	ldr	r1, [fp, #8]
   1abbc:	cmp	r0, r1
   1abc0:	blt	1abe0 <__assert_fail@plt+0x9b40>
   1abc4:	b	1abf4 <__assert_fail@plt+0x9b54>
   1abc8:	ldr	r0, [pc, #1832]	; 1b2f8 <__assert_fail@plt+0xa258>
   1abcc:	ldr	r1, [fp, #8]
   1abd0:	sdiv	r0, r0, r1
   1abd4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1abd8:	cmp	r0, r1
   1abdc:	bge	1abf4 <__assert_fail@plt+0x9b54>
   1abe0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1abe4:	ldr	r1, [fp, #8]
   1abe8:	mul	r0, r0, r1
   1abec:	str	r0, [fp, #-28]	; 0xffffffe4
   1abf0:	b	1b2cc <__assert_fail@plt+0xa22c>
   1abf4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1abf8:	ldr	r1, [fp, #8]
   1abfc:	mul	r0, r0, r1
   1ac00:	str	r0, [fp, #-28]	; 0xffffffe4
   1ac04:	b	1b2d0 <__assert_fail@plt+0xa230>
   1ac08:	ldr	r0, [fp, #8]
   1ac0c:	cmp	r0, #0
   1ac10:	bge	1ad20 <__assert_fail@plt+0x9c80>
   1ac14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ac18:	cmp	r0, #0
   1ac1c:	bge	1aca8 <__assert_fail@plt+0x9c08>
   1ac20:	b	1ac40 <__assert_fail@plt+0x9ba0>
   1ac24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ac28:	ldr	r1, [fp, #8]
   1ac2c:	mvn	r2, #0
   1ac30:	udiv	r1, r2, r1
   1ac34:	cmp	r0, r1
   1ac38:	bcc	1adbc <__assert_fail@plt+0x9d1c>
   1ac3c:	b	1add0 <__assert_fail@plt+0x9d30>
   1ac40:	b	1ac44 <__assert_fail@plt+0x9ba4>
   1ac44:	ldr	r0, [pc, #1712]	; 1b2fc <__assert_fail@plt+0xa25c>
   1ac48:	ldr	r1, [fp, #8]
   1ac4c:	cmp	r1, r0
   1ac50:	blt	1ac68 <__assert_fail@plt+0x9bc8>
   1ac54:	b	1ac74 <__assert_fail@plt+0x9bd4>
   1ac58:	ldr	r0, [fp, #8]
   1ac5c:	movw	r1, #0
   1ac60:	cmp	r1, r0
   1ac64:	bge	1ac74 <__assert_fail@plt+0x9bd4>
   1ac68:	movw	r0, #1
   1ac6c:	str	r0, [sp, #136]	; 0x88
   1ac70:	b	1ac8c <__assert_fail@plt+0x9bec>
   1ac74:	ldr	r0, [fp, #8]
   1ac78:	movw	r1, #0
   1ac7c:	sub	r0, r1, r0
   1ac80:	mvn	r1, #0
   1ac84:	udiv	r0, r1, r0
   1ac88:	str	r0, [sp, #136]	; 0x88
   1ac8c:	ldr	r0, [sp, #136]	; 0x88
   1ac90:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ac94:	mvn	r2, #0
   1ac98:	sub	r1, r2, r1
   1ac9c:	cmp	r0, r1
   1aca0:	bls	1adbc <__assert_fail@plt+0x9d1c>
   1aca4:	b	1add0 <__assert_fail@plt+0x9d30>
   1aca8:	b	1acac <__assert_fail@plt+0x9c0c>
   1acac:	b	1ad04 <__assert_fail@plt+0x9c64>
   1acb0:	b	1ad04 <__assert_fail@plt+0x9c64>
   1acb4:	ldr	r0, [fp, #8]
   1acb8:	cmn	r0, #1
   1acbc:	bne	1ad04 <__assert_fail@plt+0x9c64>
   1acc0:	b	1acc4 <__assert_fail@plt+0x9c24>
   1acc4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1acc8:	add	r0, r0, #0
   1accc:	movw	r1, #0
   1acd0:	cmp	r1, r0
   1acd4:	blt	1adbc <__assert_fail@plt+0x9d1c>
   1acd8:	b	1add0 <__assert_fail@plt+0x9d30>
   1acdc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ace0:	movw	r1, #0
   1ace4:	cmp	r1, r0
   1ace8:	bge	1add0 <__assert_fail@plt+0x9d30>
   1acec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1acf0:	sub	r0, r0, #1
   1acf4:	mvn	r1, #0
   1acf8:	cmp	r1, r0
   1acfc:	blt	1adbc <__assert_fail@plt+0x9d1c>
   1ad00:	b	1add0 <__assert_fail@plt+0x9d30>
   1ad04:	ldr	r0, [fp, #8]
   1ad08:	movw	r1, #0
   1ad0c:	sdiv	r0, r1, r0
   1ad10:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ad14:	cmp	r0, r1
   1ad18:	blt	1adbc <__assert_fail@plt+0x9d1c>
   1ad1c:	b	1add0 <__assert_fail@plt+0x9d30>
   1ad20:	ldr	r0, [fp, #8]
   1ad24:	cmp	r0, #0
   1ad28:	bne	1ad30 <__assert_fail@plt+0x9c90>
   1ad2c:	b	1add0 <__assert_fail@plt+0x9d30>
   1ad30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ad34:	cmp	r0, #0
   1ad38:	bge	1ada4 <__assert_fail@plt+0x9d04>
   1ad3c:	b	1ad40 <__assert_fail@plt+0x9ca0>
   1ad40:	b	1ad88 <__assert_fail@plt+0x9ce8>
   1ad44:	b	1ad88 <__assert_fail@plt+0x9ce8>
   1ad48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ad4c:	cmn	r0, #1
   1ad50:	bne	1ad88 <__assert_fail@plt+0x9ce8>
   1ad54:	b	1ad58 <__assert_fail@plt+0x9cb8>
   1ad58:	ldr	r0, [fp, #8]
   1ad5c:	add	r0, r0, #0
   1ad60:	movw	r1, #0
   1ad64:	cmp	r1, r0
   1ad68:	blt	1adbc <__assert_fail@plt+0x9d1c>
   1ad6c:	b	1add0 <__assert_fail@plt+0x9d30>
   1ad70:	ldr	r0, [fp, #8]
   1ad74:	sub	r0, r0, #1
   1ad78:	mvn	r1, #0
   1ad7c:	cmp	r1, r0
   1ad80:	blt	1adbc <__assert_fail@plt+0x9d1c>
   1ad84:	b	1add0 <__assert_fail@plt+0x9d30>
   1ad88:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ad8c:	movw	r1, #0
   1ad90:	sdiv	r0, r1, r0
   1ad94:	ldr	r1, [fp, #8]
   1ad98:	cmp	r0, r1
   1ad9c:	blt	1adbc <__assert_fail@plt+0x9d1c>
   1ada0:	b	1add0 <__assert_fail@plt+0x9d30>
   1ada4:	ldr	r0, [fp, #8]
   1ada8:	mvn	r1, #0
   1adac:	udiv	r0, r1, r0
   1adb0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1adb4:	cmp	r0, r1
   1adb8:	bcs	1add0 <__assert_fail@plt+0x9d30>
   1adbc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1adc0:	ldr	r1, [fp, #8]
   1adc4:	mul	r0, r0, r1
   1adc8:	str	r0, [fp, #-28]	; 0xffffffe4
   1adcc:	b	1b2cc <__assert_fail@plt+0xa22c>
   1add0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1add4:	ldr	r1, [fp, #8]
   1add8:	mul	r0, r0, r1
   1addc:	str	r0, [fp, #-28]	; 0xffffffe4
   1ade0:	b	1b2d0 <__assert_fail@plt+0xa230>
   1ade4:	b	1ade8 <__assert_fail@plt+0x9d48>
   1ade8:	ldr	r0, [fp, #8]
   1adec:	cmp	r0, #0
   1adf0:	bge	1af78 <__assert_fail@plt+0x9ed8>
   1adf4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1adf8:	cmp	r0, #0
   1adfc:	bge	1aee4 <__assert_fail@plt+0x9e44>
   1ae00:	b	1ae04 <__assert_fail@plt+0x9d64>
   1ae04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ae08:	ldr	r1, [fp, #8]
   1ae0c:	asr	r3, r1, #31
   1ae10:	mvn	r2, #0
   1ae14:	mvn	ip, #-2147483648	; 0x80000000
   1ae18:	str	r0, [sp, #132]	; 0x84
   1ae1c:	mov	r0, r2
   1ae20:	str	r1, [sp, #128]	; 0x80
   1ae24:	mov	r1, ip
   1ae28:	ldr	r2, [sp, #128]	; 0x80
   1ae2c:	bl	1fbf8 <__assert_fail@plt+0xeb58>
   1ae30:	ldr	r2, [sp, #132]	; 0x84
   1ae34:	subs	r0, r2, r0
   1ae38:	rscs	r1, r1, r2, asr #31
   1ae3c:	str	r0, [sp, #124]	; 0x7c
   1ae40:	str	r1, [sp, #120]	; 0x78
   1ae44:	blt	1b058 <__assert_fail@plt+0x9fb8>
   1ae48:	b	1b06c <__assert_fail@plt+0x9fcc>
   1ae4c:	b	1ae50 <__assert_fail@plt+0x9db0>
   1ae50:	ldr	r0, [pc, #1188]	; 1b2fc <__assert_fail@plt+0xa25c>
   1ae54:	ldr	r1, [fp, #8]
   1ae58:	cmp	r1, r0
   1ae5c:	blt	1ae74 <__assert_fail@plt+0x9dd4>
   1ae60:	b	1ae88 <__assert_fail@plt+0x9de8>
   1ae64:	ldr	r0, [fp, #8]
   1ae68:	movw	r1, #0
   1ae6c:	cmp	r1, r0
   1ae70:	bge	1ae88 <__assert_fail@plt+0x9de8>
   1ae74:	mov	r0, #0
   1ae78:	mvn	r1, #0
   1ae7c:	str	r1, [sp, #116]	; 0x74
   1ae80:	str	r0, [sp, #112]	; 0x70
   1ae84:	b	1aebc <__assert_fail@plt+0x9e1c>
   1ae88:	ldr	r0, [fp, #8]
   1ae8c:	rsb	r0, r0, #0
   1ae90:	asr	r3, r0, #31
   1ae94:	mvn	r1, #0
   1ae98:	mvn	r2, #-2147483648	; 0x80000000
   1ae9c:	str	r0, [sp, #108]	; 0x6c
   1aea0:	mov	r0, r1
   1aea4:	mov	r1, r2
   1aea8:	ldr	r2, [sp, #108]	; 0x6c
   1aeac:	bl	1fbf8 <__assert_fail@plt+0xeb58>
   1aeb0:	str	r0, [sp, #116]	; 0x74
   1aeb4:	str	r1, [sp, #112]	; 0x70
   1aeb8:	b	1aebc <__assert_fail@plt+0x9e1c>
   1aebc:	ldr	r0, [sp, #112]	; 0x70
   1aec0:	ldr	r1, [sp, #116]	; 0x74
   1aec4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1aec8:	mvn	r2, r2
   1aecc:	subs	r1, r2, r1
   1aed0:	rscs	r0, r0, r2, asr #31
   1aed4:	str	r1, [sp, #104]	; 0x68
   1aed8:	str	r0, [sp, #100]	; 0x64
   1aedc:	bge	1b058 <__assert_fail@plt+0x9fb8>
   1aee0:	b	1b06c <__assert_fail@plt+0x9fcc>
   1aee4:	ldr	r0, [fp, #8]
   1aee8:	cmn	r0, #1
   1aeec:	bne	1af38 <__assert_fail@plt+0x9e98>
   1aef0:	b	1aef4 <__assert_fail@plt+0x9e54>
   1aef4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1aef8:	mov	r1, #-2147483648	; 0x80000000
   1aefc:	add	r1, r1, r0, asr #31
   1af00:	rsbs	r0, r0, #0
   1af04:	rscs	r1, r1, #0
   1af08:	str	r0, [sp, #96]	; 0x60
   1af0c:	str	r1, [sp, #92]	; 0x5c
   1af10:	blt	1b058 <__assert_fail@plt+0x9fb8>
   1af14:	b	1b06c <__assert_fail@plt+0x9fcc>
   1af18:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1af1c:	movw	r1, #0
   1af20:	cmp	r1, r0
   1af24:	bge	1b06c <__assert_fail@plt+0x9fcc>
   1af28:	mov	r0, #0
   1af2c:	cmp	r0, #0
   1af30:	bne	1b058 <__assert_fail@plt+0x9fb8>
   1af34:	b	1b06c <__assert_fail@plt+0x9fcc>
   1af38:	ldr	r0, [fp, #8]
   1af3c:	asr	r3, r0, #31
   1af40:	mov	r1, #0
   1af44:	mov	r2, #-2147483648	; 0x80000000
   1af48:	str	r0, [sp, #88]	; 0x58
   1af4c:	mov	r0, r1
   1af50:	mov	r1, r2
   1af54:	ldr	r2, [sp, #88]	; 0x58
   1af58:	bl	1fbf8 <__assert_fail@plt+0xeb58>
   1af5c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1af60:	subs	r0, r0, r2
   1af64:	sbcs	r1, r1, r2, asr #31
   1af68:	str	r0, [sp, #84]	; 0x54
   1af6c:	str	r1, [sp, #80]	; 0x50
   1af70:	blt	1b058 <__assert_fail@plt+0x9fb8>
   1af74:	b	1b06c <__assert_fail@plt+0x9fcc>
   1af78:	ldr	r0, [fp, #8]
   1af7c:	cmp	r0, #0
   1af80:	bne	1af88 <__assert_fail@plt+0x9ee8>
   1af84:	b	1b06c <__assert_fail@plt+0x9fcc>
   1af88:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1af8c:	cmp	r0, #0
   1af90:	bge	1b018 <__assert_fail@plt+0x9f78>
   1af94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1af98:	cmn	r0, #1
   1af9c:	bne	1afd8 <__assert_fail@plt+0x9f38>
   1afa0:	b	1afa4 <__assert_fail@plt+0x9f04>
   1afa4:	ldr	r0, [fp, #8]
   1afa8:	mov	r1, #-2147483648	; 0x80000000
   1afac:	add	r1, r1, r0, asr #31
   1afb0:	rsbs	r0, r0, #0
   1afb4:	rscs	r1, r1, #0
   1afb8:	str	r0, [sp, #76]	; 0x4c
   1afbc:	str	r1, [sp, #72]	; 0x48
   1afc0:	blt	1b058 <__assert_fail@plt+0x9fb8>
   1afc4:	b	1b06c <__assert_fail@plt+0x9fcc>
   1afc8:	mov	r0, #0
   1afcc:	cmp	r0, #0
   1afd0:	bne	1b058 <__assert_fail@plt+0x9fb8>
   1afd4:	b	1b06c <__assert_fail@plt+0x9fcc>
   1afd8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1afdc:	asr	r3, r0, #31
   1afe0:	mov	r1, #0
   1afe4:	mov	r2, #-2147483648	; 0x80000000
   1afe8:	str	r0, [sp, #68]	; 0x44
   1afec:	mov	r0, r1
   1aff0:	mov	r1, r2
   1aff4:	ldr	r2, [sp, #68]	; 0x44
   1aff8:	bl	1fbf8 <__assert_fail@plt+0xeb58>
   1affc:	ldr	r2, [fp, #8]
   1b000:	subs	r0, r0, r2
   1b004:	sbcs	r1, r1, r2, asr #31
   1b008:	str	r0, [sp, #64]	; 0x40
   1b00c:	str	r1, [sp, #60]	; 0x3c
   1b010:	blt	1b058 <__assert_fail@plt+0x9fb8>
   1b014:	b	1b06c <__assert_fail@plt+0x9fcc>
   1b018:	ldr	r0, [fp, #8]
   1b01c:	asr	r3, r0, #31
   1b020:	mvn	r1, #0
   1b024:	mvn	r2, #-2147483648	; 0x80000000
   1b028:	str	r0, [sp, #56]	; 0x38
   1b02c:	mov	r0, r1
   1b030:	mov	r1, r2
   1b034:	ldr	r2, [sp, #56]	; 0x38
   1b038:	bl	1fbf8 <__assert_fail@plt+0xeb58>
   1b03c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1b040:	subs	r0, r0, r2
   1b044:	sbcs	r1, r1, r2, asr #31
   1b048:	str	r0, [sp, #52]	; 0x34
   1b04c:	str	r1, [sp, #48]	; 0x30
   1b050:	bge	1b06c <__assert_fail@plt+0x9fcc>
   1b054:	b	1b058 <__assert_fail@plt+0x9fb8>
   1b058:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b05c:	ldr	r1, [fp, #8]
   1b060:	mul	r0, r0, r1
   1b064:	str	r0, [fp, #-28]	; 0xffffffe4
   1b068:	b	1b2cc <__assert_fail@plt+0xa22c>
   1b06c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b070:	ldr	r1, [fp, #8]
   1b074:	mul	r0, r0, r1
   1b078:	str	r0, [fp, #-28]	; 0xffffffe4
   1b07c:	b	1b2d0 <__assert_fail@plt+0xa230>
   1b080:	ldr	r0, [fp, #8]
   1b084:	cmp	r0, #0
   1b088:	bge	1b1e8 <__assert_fail@plt+0xa148>
   1b08c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b090:	cmp	r0, #0
   1b094:	bge	1b170 <__assert_fail@plt+0xa0d0>
   1b098:	b	1b0e0 <__assert_fail@plt+0xa040>
   1b09c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b0a0:	ldr	r1, [fp, #8]
   1b0a4:	asr	r3, r1, #31
   1b0a8:	mvn	r2, #0
   1b0ac:	str	r0, [sp, #44]	; 0x2c
   1b0b0:	mov	r0, r2
   1b0b4:	str	r1, [sp, #40]	; 0x28
   1b0b8:	mov	r1, r2
   1b0bc:	ldr	r2, [sp, #40]	; 0x28
   1b0c0:	bl	1fccc <__assert_fail@plt+0xec2c>
   1b0c4:	ldr	r2, [sp, #44]	; 0x2c
   1b0c8:	subs	r0, r2, r0
   1b0cc:	rscs	r1, r1, r2, asr #31
   1b0d0:	str	r0, [sp, #36]	; 0x24
   1b0d4:	str	r1, [sp, #32]
   1b0d8:	bcc	1b2a4 <__assert_fail@plt+0xa204>
   1b0dc:	b	1b2b8 <__assert_fail@plt+0xa218>
   1b0e0:	b	1b0e4 <__assert_fail@plt+0xa044>
   1b0e4:	ldr	r0, [pc, #528]	; 1b2fc <__assert_fail@plt+0xa25c>
   1b0e8:	ldr	r1, [fp, #8]
   1b0ec:	cmp	r1, r0
   1b0f0:	blt	1b108 <__assert_fail@plt+0xa068>
   1b0f4:	b	1b11c <__assert_fail@plt+0xa07c>
   1b0f8:	ldr	r0, [fp, #8]
   1b0fc:	movw	r1, #0
   1b100:	cmp	r1, r0
   1b104:	bge	1b11c <__assert_fail@plt+0xa07c>
   1b108:	mov	r0, #1
   1b10c:	mvn	r1, #0
   1b110:	str	r1, [sp, #28]
   1b114:	str	r0, [sp, #24]
   1b118:	b	1b148 <__assert_fail@plt+0xa0a8>
   1b11c:	ldr	r0, [fp, #8]
   1b120:	rsb	r0, r0, #0
   1b124:	asr	r3, r0, #31
   1b128:	mvn	r1, #0
   1b12c:	str	r0, [sp, #20]
   1b130:	mov	r0, r1
   1b134:	ldr	r2, [sp, #20]
   1b138:	bl	1fccc <__assert_fail@plt+0xec2c>
   1b13c:	str	r0, [sp, #28]
   1b140:	str	r1, [sp, #24]
   1b144:	b	1b148 <__assert_fail@plt+0xa0a8>
   1b148:	ldr	r0, [sp, #24]
   1b14c:	ldr	r1, [sp, #28]
   1b150:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1b154:	mvn	r2, r2
   1b158:	subs	r1, r2, r1
   1b15c:	rscs	r0, r0, r2, asr #31
   1b160:	str	r1, [sp, #16]
   1b164:	str	r0, [sp, #12]
   1b168:	bcs	1b2a4 <__assert_fail@plt+0xa204>
   1b16c:	b	1b2b8 <__assert_fail@plt+0xa218>
   1b170:	b	1b174 <__assert_fail@plt+0xa0d4>
   1b174:	b	1b1cc <__assert_fail@plt+0xa12c>
   1b178:	b	1b1cc <__assert_fail@plt+0xa12c>
   1b17c:	ldr	r0, [fp, #8]
   1b180:	cmn	r0, #1
   1b184:	bne	1b1cc <__assert_fail@plt+0xa12c>
   1b188:	b	1b18c <__assert_fail@plt+0xa0ec>
   1b18c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b190:	add	r0, r0, #0
   1b194:	movw	r1, #0
   1b198:	cmp	r1, r0
   1b19c:	blt	1b2a4 <__assert_fail@plt+0xa204>
   1b1a0:	b	1b2b8 <__assert_fail@plt+0xa218>
   1b1a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b1a8:	movw	r1, #0
   1b1ac:	cmp	r1, r0
   1b1b0:	bge	1b2b8 <__assert_fail@plt+0xa218>
   1b1b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b1b8:	sub	r0, r0, #1
   1b1bc:	mvn	r1, #0
   1b1c0:	cmp	r1, r0
   1b1c4:	blt	1b2a4 <__assert_fail@plt+0xa204>
   1b1c8:	b	1b2b8 <__assert_fail@plt+0xa218>
   1b1cc:	ldr	r0, [fp, #8]
   1b1d0:	movw	r1, #0
   1b1d4:	sdiv	r0, r1, r0
   1b1d8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1b1dc:	cmp	r0, r1
   1b1e0:	blt	1b2a4 <__assert_fail@plt+0xa204>
   1b1e4:	b	1b2b8 <__assert_fail@plt+0xa218>
   1b1e8:	ldr	r0, [fp, #8]
   1b1ec:	cmp	r0, #0
   1b1f0:	bne	1b1f8 <__assert_fail@plt+0xa158>
   1b1f4:	b	1b2b8 <__assert_fail@plt+0xa218>
   1b1f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b1fc:	cmp	r0, #0
   1b200:	bge	1b26c <__assert_fail@plt+0xa1cc>
   1b204:	b	1b208 <__assert_fail@plt+0xa168>
   1b208:	b	1b250 <__assert_fail@plt+0xa1b0>
   1b20c:	b	1b250 <__assert_fail@plt+0xa1b0>
   1b210:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b214:	cmn	r0, #1
   1b218:	bne	1b250 <__assert_fail@plt+0xa1b0>
   1b21c:	b	1b220 <__assert_fail@plt+0xa180>
   1b220:	ldr	r0, [fp, #8]
   1b224:	add	r0, r0, #0
   1b228:	movw	r1, #0
   1b22c:	cmp	r1, r0
   1b230:	blt	1b2a4 <__assert_fail@plt+0xa204>
   1b234:	b	1b2b8 <__assert_fail@plt+0xa218>
   1b238:	ldr	r0, [fp, #8]
   1b23c:	sub	r0, r0, #1
   1b240:	mvn	r1, #0
   1b244:	cmp	r1, r0
   1b248:	blt	1b2a4 <__assert_fail@plt+0xa204>
   1b24c:	b	1b2b8 <__assert_fail@plt+0xa218>
   1b250:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b254:	movw	r1, #0
   1b258:	sdiv	r0, r1, r0
   1b25c:	ldr	r1, [fp, #8]
   1b260:	cmp	r0, r1
   1b264:	blt	1b2a4 <__assert_fail@plt+0xa204>
   1b268:	b	1b2b8 <__assert_fail@plt+0xa218>
   1b26c:	ldr	r0, [fp, #8]
   1b270:	asr	r3, r0, #31
   1b274:	mvn	r1, #0
   1b278:	str	r0, [sp, #8]
   1b27c:	mov	r0, r1
   1b280:	ldr	r2, [sp, #8]
   1b284:	bl	1fccc <__assert_fail@plt+0xec2c>
   1b288:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1b28c:	subs	r0, r0, r2
   1b290:	sbcs	r1, r1, r2, asr #31
   1b294:	str	r0, [sp, #4]
   1b298:	str	r1, [sp]
   1b29c:	bcs	1b2b8 <__assert_fail@plt+0xa218>
   1b2a0:	b	1b2a4 <__assert_fail@plt+0xa204>
   1b2a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b2a8:	ldr	r1, [fp, #8]
   1b2ac:	mul	r0, r0, r1
   1b2b0:	str	r0, [fp, #-28]	; 0xffffffe4
   1b2b4:	b	1b2cc <__assert_fail@plt+0xa22c>
   1b2b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b2bc:	ldr	r1, [fp, #8]
   1b2c0:	mul	r0, r0, r1
   1b2c4:	str	r0, [fp, #-28]	; 0xffffffe4
   1b2c8:	b	1b2d0 <__assert_fail@plt+0xa230>
   1b2cc:	bl	1b4a8 <__assert_fail@plt+0xa408>
   1b2d0:	ldr	r0, [fp, #-4]
   1b2d4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1b2d8:	bl	18764 <__assert_fail@plt+0x76c4>
   1b2dc:	str	r0, [fp, #-4]
   1b2e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b2e4:	ldr	r1, [fp, #-8]
   1b2e8:	str	r0, [r1]
   1b2ec:	ldr	r0, [fp, #-4]
   1b2f0:	mov	sp, fp
   1b2f4:	pop	{fp, pc}
   1b2f8:	svcvc	0x00ffffff
   1b2fc:	andhi	r0, r0, r1
   1b300:	andhi	r0, r0, r0
   1b304:			; <UNDEFINED> instruction: 0xffff8000
   1b308:	push	{fp, lr}
   1b30c:	mov	fp, sp
   1b310:	sub	sp, sp, #8
   1b314:	str	r0, [sp, #4]
   1b318:	ldr	r0, [sp, #4]
   1b31c:	movw	r1, #1
   1b320:	bl	1b32c <__assert_fail@plt+0xa28c>
   1b324:	mov	sp, fp
   1b328:	pop	{fp, pc}
   1b32c:	push	{fp, lr}
   1b330:	mov	fp, sp
   1b334:	sub	sp, sp, #8
   1b338:	str	r0, [sp, #4]
   1b33c:	str	r1, [sp]
   1b340:	ldr	r0, [sp, #4]
   1b344:	ldr	r1, [sp]
   1b348:	bl	1d730 <__assert_fail@plt+0xc690>
   1b34c:	bl	186f0 <__assert_fail@plt+0x7650>
   1b350:	mov	sp, fp
   1b354:	pop	{fp, pc}
   1b358:	push	{fp, lr}
   1b35c:	mov	fp, sp
   1b360:	sub	sp, sp, #8
   1b364:	str	r0, [sp, #4]
   1b368:	ldr	r0, [sp, #4]
   1b36c:	movw	r1, #1
   1b370:	bl	1b37c <__assert_fail@plt+0xa2dc>
   1b374:	mov	sp, fp
   1b378:	pop	{fp, pc}
   1b37c:	push	{fp, lr}
   1b380:	mov	fp, sp
   1b384:	sub	sp, sp, #8
   1b388:	str	r0, [sp, #4]
   1b38c:	str	r1, [sp]
   1b390:	ldr	r0, [sp, #4]
   1b394:	ldr	r1, [sp]
   1b398:	bl	1de14 <__assert_fail@plt+0xcd74>
   1b39c:	bl	186f0 <__assert_fail@plt+0x7650>
   1b3a0:	mov	sp, fp
   1b3a4:	pop	{fp, pc}
   1b3a8:	push	{fp, lr}
   1b3ac:	mov	fp, sp
   1b3b0:	sub	sp, sp, #16
   1b3b4:	str	r0, [fp, #-4]
   1b3b8:	str	r1, [sp, #8]
   1b3bc:	ldr	r0, [sp, #8]
   1b3c0:	bl	186cc <__assert_fail@plt+0x762c>
   1b3c4:	ldr	r1, [fp, #-4]
   1b3c8:	ldr	r2, [sp, #8]
   1b3cc:	str	r0, [sp, #4]
   1b3d0:	bl	10e9c <memcpy@plt>
   1b3d4:	ldr	r0, [sp, #4]
   1b3d8:	mov	sp, fp
   1b3dc:	pop	{fp, pc}
   1b3e0:	push	{fp, lr}
   1b3e4:	mov	fp, sp
   1b3e8:	sub	sp, sp, #16
   1b3ec:	str	r0, [fp, #-4]
   1b3f0:	str	r1, [sp, #8]
   1b3f4:	ldr	r0, [sp, #8]
   1b3f8:	bl	18720 <__assert_fail@plt+0x7680>
   1b3fc:	ldr	r1, [fp, #-4]
   1b400:	ldr	r2, [sp, #8]
   1b404:	str	r0, [sp, #4]
   1b408:	bl	10e9c <memcpy@plt>
   1b40c:	ldr	r0, [sp, #4]
   1b410:	mov	sp, fp
   1b414:	pop	{fp, pc}
   1b418:	push	{fp, lr}
   1b41c:	mov	fp, sp
   1b420:	sub	sp, sp, #16
   1b424:	str	r0, [fp, #-4]
   1b428:	str	r1, [sp, #8]
   1b42c:	ldr	r0, [sp, #8]
   1b430:	add	r0, r0, #1
   1b434:	bl	18720 <__assert_fail@plt+0x7680>
   1b438:	str	r0, [sp, #4]
   1b43c:	ldr	r0, [sp, #4]
   1b440:	ldr	r1, [sp, #8]
   1b444:	add	r0, r0, r1
   1b448:	movw	r1, #0
   1b44c:	strb	r1, [r0]
   1b450:	ldr	r0, [sp, #4]
   1b454:	ldr	r1, [fp, #-4]
   1b458:	ldr	r2, [sp, #8]
   1b45c:	str	r0, [sp]
   1b460:	bl	10e9c <memcpy@plt>
   1b464:	ldr	r0, [sp]
   1b468:	mov	sp, fp
   1b46c:	pop	{fp, pc}
   1b470:	push	{fp, lr}
   1b474:	mov	fp, sp
   1b478:	sub	sp, sp, #8
   1b47c:	str	r0, [sp, #4]
   1b480:	ldr	r0, [sp, #4]
   1b484:	ldr	r1, [sp, #4]
   1b488:	str	r0, [sp]
   1b48c:	mov	r0, r1
   1b490:	bl	10fb0 <strlen@plt>
   1b494:	add	r1, r0, #1
   1b498:	ldr	r0, [sp]
   1b49c:	bl	1b3a8 <__assert_fail@plt+0xa308>
   1b4a0:	mov	sp, fp
   1b4a4:	pop	{fp, pc}
   1b4a8:	push	{fp, lr}
   1b4ac:	mov	fp, sp
   1b4b0:	sub	sp, sp, #8
   1b4b4:	movw	r0, #8436	; 0x20f4
   1b4b8:	movt	r0, #3
   1b4bc:	ldr	r0, [r0]
   1b4c0:	movw	r1, #6208	; 0x1840
   1b4c4:	movt	r1, #2
   1b4c8:	str	r0, [sp, #4]
   1b4cc:	mov	r0, r1
   1b4d0:	bl	10fa4 <gettext@plt>
   1b4d4:	ldr	r1, [sp, #4]
   1b4d8:	str	r0, [sp]
   1b4dc:	mov	r0, r1
   1b4e0:	movw	r1, #0
   1b4e4:	movw	r2, #5159	; 0x1427
   1b4e8:	movt	r2, #2
   1b4ec:	ldr	r3, [sp]
   1b4f0:	bl	10f44 <error@plt>
   1b4f4:	bl	11088 <abort@plt>
   1b4f8:	bx	lr
   1b4fc:	push	{fp, lr}
   1b500:	mov	fp, sp
   1b504:	sub	sp, sp, #8
   1b508:	str	r0, [sp, #4]
   1b50c:	str	r1, [sp]
   1b510:	ldr	r0, [sp, #4]
   1b514:	ldr	r1, [sp]
   1b518:	bl	1d8f8 <__assert_fail@plt+0xc858>
   1b51c:	cmp	r0, #0
   1b520:	bge	1b528 <__assert_fail@plt+0xa488>
   1b524:	bl	1b4f8 <__assert_fail@plt+0xa458>
   1b528:	mov	sp, fp
   1b52c:	pop	{fp, pc}
   1b530:	push	{fp, lr}
   1b534:	mov	fp, sp
   1b538:	sub	sp, sp, #88	; 0x58
   1b53c:	ldr	ip, [fp, #8]
   1b540:	str	r0, [fp, #-8]
   1b544:	str	r1, [fp, #-12]
   1b548:	str	r2, [fp, #-16]
   1b54c:	str	r3, [fp, #-20]	; 0xffffffec
   1b550:	movw	r0, #0
   1b554:	str	r0, [sp, #44]	; 0x2c
   1b558:	ldr	r1, [fp, #-16]
   1b55c:	cmp	r0, r1
   1b560:	str	ip, [sp, #20]
   1b564:	bgt	1b578 <__assert_fail@plt+0xa4d8>
   1b568:	ldr	r0, [fp, #-16]
   1b56c:	cmp	r0, #36	; 0x24
   1b570:	bgt	1b578 <__assert_fail@plt+0xa4d8>
   1b574:	b	1b598 <__assert_fail@plt+0xa4f8>
   1b578:	movw	r0, #6225	; 0x1851
   1b57c:	movt	r0, #2
   1b580:	movw	r1, #6263	; 0x1877
   1b584:	movt	r1, #2
   1b588:	movw	r2, #85	; 0x55
   1b58c:	movw	r3, #6279	; 0x1887
   1b590:	movt	r3, #2
   1b594:	bl	110a0 <__assert_fail@plt>
   1b598:	ldr	r0, [fp, #-12]
   1b59c:	movw	r1, #0
   1b5a0:	cmp	r0, r1
   1b5a4:	beq	1b5b4 <__assert_fail@plt+0xa514>
   1b5a8:	ldr	r0, [fp, #-12]
   1b5ac:	str	r0, [sp, #16]
   1b5b0:	b	1b5c0 <__assert_fail@plt+0xa520>
   1b5b4:	sub	r0, fp, #24
   1b5b8:	str	r0, [sp, #16]
   1b5bc:	b	1b5c0 <__assert_fail@plt+0xa520>
   1b5c0:	ldr	r0, [sp, #16]
   1b5c4:	str	r0, [fp, #-28]	; 0xffffffe4
   1b5c8:	bl	10fd4 <__errno_location@plt>
   1b5cc:	movw	lr, #0
   1b5d0:	str	lr, [r0]
   1b5d4:	ldr	r0, [fp, #-8]
   1b5d8:	str	r0, [sp, #40]	; 0x28
   1b5dc:	ldr	r0, [sp, #40]	; 0x28
   1b5e0:	ldrb	r0, [r0]
   1b5e4:	strb	r0, [sp, #39]	; 0x27
   1b5e8:	bl	10f8c <__ctype_b_loc@plt>
   1b5ec:	ldr	r0, [r0]
   1b5f0:	ldrb	lr, [sp, #39]	; 0x27
   1b5f4:	mov	r1, lr
   1b5f8:	add	r0, r0, lr, lsl #1
   1b5fc:	ldrh	r0, [r0]
   1b600:	and	r0, r0, #8192	; 0x2000
   1b604:	cmp	r0, #0
   1b608:	str	r1, [sp, #12]
   1b60c:	beq	1b628 <__assert_fail@plt+0xa588>
   1b610:	ldr	r0, [sp, #40]	; 0x28
   1b614:	add	r1, r0, #1
   1b618:	str	r1, [sp, #40]	; 0x28
   1b61c:	ldrb	r0, [r0, #1]
   1b620:	strb	r0, [sp, #39]	; 0x27
   1b624:	b	1b5e8 <__assert_fail@plt+0xa548>
   1b628:	ldrb	r0, [sp, #39]	; 0x27
   1b62c:	cmp	r0, #45	; 0x2d
   1b630:	bne	1b640 <__assert_fail@plt+0xa5a0>
   1b634:	movw	r0, #4
   1b638:	str	r0, [fp, #-4]
   1b63c:	b	1bbbc <__assert_fail@plt+0xab1c>
   1b640:	ldr	r0, [fp, #-8]
   1b644:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1b648:	ldr	r2, [fp, #-16]
   1b64c:	bl	11004 <strtoumax@plt>
   1b650:	str	r1, [fp, #-36]	; 0xffffffdc
   1b654:	str	r0, [fp, #-40]	; 0xffffffd8
   1b658:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1b65c:	ldr	r0, [r0]
   1b660:	ldr	r1, [fp, #-8]
   1b664:	cmp	r0, r1
   1b668:	bne	1b6d4 <__assert_fail@plt+0xa634>
   1b66c:	ldr	r0, [fp, #8]
   1b670:	movw	r1, #0
   1b674:	cmp	r0, r1
   1b678:	beq	1b6c4 <__assert_fail@plt+0xa624>
   1b67c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1b680:	ldr	r0, [r0]
   1b684:	ldrb	r0, [r0]
   1b688:	cmp	r0, #0
   1b68c:	beq	1b6c4 <__assert_fail@plt+0xa624>
   1b690:	ldr	r0, [fp, #8]
   1b694:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1b698:	ldr	r1, [r1]
   1b69c:	ldrb	r1, [r1]
   1b6a0:	bl	10fbc <strchr@plt>
   1b6a4:	movw	r1, #0
   1b6a8:	cmp	r0, r1
   1b6ac:	beq	1b6c4 <__assert_fail@plt+0xa624>
   1b6b0:	mov	r0, #0
   1b6b4:	str	r0, [fp, #-36]	; 0xffffffdc
   1b6b8:	mov	r0, #1
   1b6bc:	str	r0, [fp, #-40]	; 0xffffffd8
   1b6c0:	b	1b6d0 <__assert_fail@plt+0xa630>
   1b6c4:	movw	r0, #4
   1b6c8:	str	r0, [fp, #-4]
   1b6cc:	b	1bbbc <__assert_fail@plt+0xab1c>
   1b6d0:	b	1b70c <__assert_fail@plt+0xa66c>
   1b6d4:	bl	10fd4 <__errno_location@plt>
   1b6d8:	ldr	r0, [r0]
   1b6dc:	cmp	r0, #0
   1b6e0:	beq	1b708 <__assert_fail@plt+0xa668>
   1b6e4:	bl	10fd4 <__errno_location@plt>
   1b6e8:	ldr	r0, [r0]
   1b6ec:	cmp	r0, #34	; 0x22
   1b6f0:	beq	1b700 <__assert_fail@plt+0xa660>
   1b6f4:	movw	r0, #4
   1b6f8:	str	r0, [fp, #-4]
   1b6fc:	b	1bbbc <__assert_fail@plt+0xab1c>
   1b700:	movw	r0, #1
   1b704:	str	r0, [sp, #44]	; 0x2c
   1b708:	b	1b70c <__assert_fail@plt+0xa66c>
   1b70c:	ldr	r0, [fp, #8]
   1b710:	movw	r1, #0
   1b714:	cmp	r0, r1
   1b718:	bne	1b73c <__assert_fail@plt+0xa69c>
   1b71c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1b720:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1b724:	ldr	r2, [fp, #-20]	; 0xffffffec
   1b728:	str	r1, [r2, #4]
   1b72c:	str	r0, [r2]
   1b730:	ldr	r0, [sp, #44]	; 0x2c
   1b734:	str	r0, [fp, #-4]
   1b738:	b	1bbbc <__assert_fail@plt+0xab1c>
   1b73c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1b740:	ldr	r0, [r0]
   1b744:	ldrb	r0, [r0]
   1b748:	cmp	r0, #0
   1b74c:	beq	1bba0 <__assert_fail@plt+0xab00>
   1b750:	movw	r0, #1024	; 0x400
   1b754:	str	r0, [sp, #32]
   1b758:	movw	r0, #1
   1b75c:	str	r0, [sp, #28]
   1b760:	ldr	r0, [fp, #8]
   1b764:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1b768:	ldr	r1, [r1]
   1b76c:	ldrb	r1, [r1]
   1b770:	bl	10fbc <strchr@plt>
   1b774:	movw	r1, #0
   1b778:	cmp	r0, r1
   1b77c:	bne	1b7a4 <__assert_fail@plt+0xa704>
   1b780:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1b784:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1b788:	ldr	r2, [fp, #-20]	; 0xffffffec
   1b78c:	str	r1, [r2, #4]
   1b790:	str	r0, [r2]
   1b794:	ldr	r0, [sp, #44]	; 0x2c
   1b798:	orr	r0, r0, #2
   1b79c:	str	r0, [fp, #-4]
   1b7a0:	b	1bbbc <__assert_fail@plt+0xab1c>
   1b7a4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1b7a8:	ldr	r0, [r0]
   1b7ac:	ldrb	r0, [r0]
   1b7b0:	sub	r0, r0, #69	; 0x45
   1b7b4:	cmp	r0, #47	; 0x2f
   1b7b8:	str	r0, [sp, #8]
   1b7bc:	bhi	1b928 <__assert_fail@plt+0xa888>
   1b7c0:	add	r0, pc, #8
   1b7c4:	ldr	r1, [sp, #8]
   1b7c8:	ldr	r0, [r0, r1, lsl #2]
   1b7cc:	mov	pc, r0
   1b7d0:	muleq	r1, r0, r8
   1b7d4:	andeq	fp, r1, r8, lsr #18
   1b7d8:	muleq	r1, r0, r8
   1b7dc:	andeq	fp, r1, r8, lsr #18
   1b7e0:	andeq	fp, r1, r8, lsr #18
   1b7e4:	andeq	fp, r1, r8, lsr #18
   1b7e8:	muleq	r1, r0, r8
   1b7ec:	andeq	fp, r1, r8, lsr #18
   1b7f0:	muleq	r1, r0, r8
   1b7f4:	andeq	fp, r1, r8, lsr #18
   1b7f8:	andeq	fp, r1, r8, lsr #18
   1b7fc:	muleq	r1, r0, r8
   1b800:	andeq	fp, r1, r8, lsr #18
   1b804:	andeq	fp, r1, r8, lsr #18
   1b808:	andeq	fp, r1, r8, lsr #18
   1b80c:	muleq	r1, r0, r8
   1b810:	andeq	fp, r1, r8, lsr #18
   1b814:	andeq	fp, r1, r8, lsr #18
   1b818:	andeq	fp, r1, r8, lsr #18
   1b81c:	andeq	fp, r1, r8, lsr #18
   1b820:	muleq	r1, r0, r8
   1b824:	muleq	r1, r0, r8
   1b828:	andeq	fp, r1, r8, lsr #18
   1b82c:	andeq	fp, r1, r8, lsr #18
   1b830:	andeq	fp, r1, r8, lsr #18
   1b834:	andeq	fp, r1, r8, lsr #18
   1b838:	andeq	fp, r1, r8, lsr #18
   1b83c:	andeq	fp, r1, r8, lsr #18
   1b840:	andeq	fp, r1, r8, lsr #18
   1b844:	andeq	fp, r1, r8, lsr #18
   1b848:	andeq	fp, r1, r8, lsr #18
   1b84c:	andeq	fp, r1, r8, lsr #18
   1b850:	andeq	fp, r1, r8, lsr #18
   1b854:	andeq	fp, r1, r8, lsr #18
   1b858:	muleq	r1, r0, r8
   1b85c:	andeq	fp, r1, r8, lsr #18
   1b860:	andeq	fp, r1, r8, lsr #18
   1b864:	andeq	fp, r1, r8, lsr #18
   1b868:	muleq	r1, r0, r8
   1b86c:	andeq	fp, r1, r8, lsr #18
   1b870:	muleq	r1, r0, r8
   1b874:	andeq	fp, r1, r8, lsr #18
   1b878:	andeq	fp, r1, r8, lsr #18
   1b87c:	andeq	fp, r1, r8, lsr #18
   1b880:	andeq	fp, r1, r8, lsr #18
   1b884:	andeq	fp, r1, r8, lsr #18
   1b888:	andeq	fp, r1, r8, lsr #18
   1b88c:	muleq	r1, r0, r8
   1b890:	ldr	r0, [fp, #8]
   1b894:	movw	r1, #48	; 0x30
   1b898:	bl	10fbc <strchr@plt>
   1b89c:	movw	r1, #0
   1b8a0:	cmp	r0, r1
   1b8a4:	beq	1b924 <__assert_fail@plt+0xa884>
   1b8a8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1b8ac:	ldr	r0, [r0]
   1b8b0:	ldrb	r0, [r0, #1]
   1b8b4:	mov	r1, r0
   1b8b8:	cmp	r0, #66	; 0x42
   1b8bc:	str	r1, [sp, #4]
   1b8c0:	beq	1b90c <__assert_fail@plt+0xa86c>
   1b8c4:	b	1b8c8 <__assert_fail@plt+0xa828>
   1b8c8:	ldr	r0, [sp, #4]
   1b8cc:	cmp	r0, #68	; 0x44
   1b8d0:	beq	1b90c <__assert_fail@plt+0xa86c>
   1b8d4:	b	1b8d8 <__assert_fail@plt+0xa838>
   1b8d8:	ldr	r0, [sp, #4]
   1b8dc:	cmp	r0, #105	; 0x69
   1b8e0:	bne	1b920 <__assert_fail@plt+0xa880>
   1b8e4:	b	1b8e8 <__assert_fail@plt+0xa848>
   1b8e8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1b8ec:	ldr	r0, [r0]
   1b8f0:	ldrb	r0, [r0, #2]
   1b8f4:	cmp	r0, #66	; 0x42
   1b8f8:	bne	1b908 <__assert_fail@plt+0xa868>
   1b8fc:	ldr	r0, [sp, #28]
   1b900:	add	r0, r0, #2
   1b904:	str	r0, [sp, #28]
   1b908:	b	1b920 <__assert_fail@plt+0xa880>
   1b90c:	movw	r0, #1000	; 0x3e8
   1b910:	str	r0, [sp, #32]
   1b914:	ldr	r0, [sp, #28]
   1b918:	add	r0, r0, #1
   1b91c:	str	r0, [sp, #28]
   1b920:	b	1b924 <__assert_fail@plt+0xa884>
   1b924:	b	1b928 <__assert_fail@plt+0xa888>
   1b928:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1b92c:	ldr	r0, [r0]
   1b930:	ldrb	r0, [r0]
   1b934:	sub	r0, r0, #66	; 0x42
   1b938:	cmp	r0, #53	; 0x35
   1b93c:	str	r0, [sp]
   1b940:	bhi	1bb34 <__assert_fail@plt+0xaa94>
   1b944:	add	r0, pc, #8
   1b948:	ldr	r1, [sp]
   1b94c:	ldr	r0, [r0, r1, lsl #2]
   1b950:	mov	pc, r0
   1b954:	andeq	fp, r1, r0, asr #20
   1b958:	andeq	fp, r1, r4, lsr fp
   1b95c:	andeq	fp, r1, r4, lsr fp
   1b960:	andeq	fp, r1, r0, ror #20
   1b964:	andeq	fp, r1, r4, lsr fp
   1b968:	andeq	fp, r1, r8, ror sl
   1b96c:	andeq	fp, r1, r4, lsr fp
   1b970:	andeq	fp, r1, r4, lsr fp
   1b974:	andeq	fp, r1, r4, lsr fp
   1b978:	muleq	r1, r0, sl
   1b97c:	andeq	fp, r1, r4, lsr fp
   1b980:	andeq	fp, r1, r8, lsr #21
   1b984:	andeq	fp, r1, r4, lsr fp
   1b988:	andeq	fp, r1, r4, lsr fp
   1b98c:	andeq	fp, r1, r0, asr #21
   1b990:	andeq	fp, r1, r4, lsr fp
   1b994:	andeq	fp, r1, r4, lsr fp
   1b998:	andeq	fp, r1, r4, lsr fp
   1b99c:	ldrdeq	fp, [r1], -r8
   1b9a0:	andeq	fp, r1, r4, lsr fp
   1b9a4:	andeq	fp, r1, r4, lsr fp
   1b9a8:	andeq	fp, r1, r4, lsr fp
   1b9ac:	andeq	fp, r1, r4, lsr fp
   1b9b0:	andeq	fp, r1, r4, lsl #22
   1b9b4:	andeq	fp, r1, ip, lsl fp
   1b9b8:	andeq	fp, r1, r4, lsr fp
   1b9bc:	andeq	fp, r1, r4, lsr fp
   1b9c0:	andeq	fp, r1, r4, lsr fp
   1b9c4:	andeq	fp, r1, r4, lsr fp
   1b9c8:	andeq	fp, r1, r4, lsr fp
   1b9cc:	andeq	fp, r1, r4, lsr fp
   1b9d0:	andeq	fp, r1, r4, lsr fp
   1b9d4:	andeq	fp, r1, ip, lsr #20
   1b9d8:	andeq	fp, r1, r4, asr sl
   1b9dc:	andeq	fp, r1, r4, lsr fp
   1b9e0:	andeq	fp, r1, r4, lsr fp
   1b9e4:	andeq	fp, r1, r4, lsr fp
   1b9e8:	andeq	fp, r1, r8, ror sl
   1b9ec:	andeq	fp, r1, r4, lsr fp
   1b9f0:	andeq	fp, r1, r4, lsr fp
   1b9f4:	andeq	fp, r1, r4, lsr fp
   1b9f8:	muleq	r1, r0, sl
   1b9fc:	andeq	fp, r1, r4, lsr fp
   1ba00:	andeq	fp, r1, r8, lsr #21
   1ba04:	andeq	fp, r1, r4, lsr fp
   1ba08:	andeq	fp, r1, r4, lsr fp
   1ba0c:	andeq	fp, r1, r4, lsr fp
   1ba10:	andeq	fp, r1, r4, lsr fp
   1ba14:	andeq	fp, r1, r4, lsr fp
   1ba18:	andeq	fp, r1, r4, lsr fp
   1ba1c:	ldrdeq	fp, [r1], -r8
   1ba20:	andeq	fp, r1, r4, lsr fp
   1ba24:	andeq	fp, r1, r4, lsr fp
   1ba28:	strdeq	fp, [r1], -r0
   1ba2c:	sub	r0, fp, #40	; 0x28
   1ba30:	movw	r1, #512	; 0x200
   1ba34:	bl	1bbc8 <__assert_fail@plt+0xab28>
   1ba38:	str	r0, [sp, #24]
   1ba3c:	b	1bb58 <__assert_fail@plt+0xaab8>
   1ba40:	sub	r0, fp, #40	; 0x28
   1ba44:	movw	r1, #1024	; 0x400
   1ba48:	bl	1bbc8 <__assert_fail@plt+0xab28>
   1ba4c:	str	r0, [sp, #24]
   1ba50:	b	1bb58 <__assert_fail@plt+0xaab8>
   1ba54:	movw	r0, #0
   1ba58:	str	r0, [sp, #24]
   1ba5c:	b	1bb58 <__assert_fail@plt+0xaab8>
   1ba60:	ldr	r1, [sp, #32]
   1ba64:	sub	r0, fp, #40	; 0x28
   1ba68:	movw	r2, #6
   1ba6c:	bl	1d6d0 <__assert_fail@plt+0xc630>
   1ba70:	str	r0, [sp, #24]
   1ba74:	b	1bb58 <__assert_fail@plt+0xaab8>
   1ba78:	ldr	r1, [sp, #32]
   1ba7c:	sub	r0, fp, #40	; 0x28
   1ba80:	movw	r2, #3
   1ba84:	bl	1d6d0 <__assert_fail@plt+0xc630>
   1ba88:	str	r0, [sp, #24]
   1ba8c:	b	1bb58 <__assert_fail@plt+0xaab8>
   1ba90:	ldr	r1, [sp, #32]
   1ba94:	sub	r0, fp, #40	; 0x28
   1ba98:	movw	r2, #1
   1ba9c:	bl	1d6d0 <__assert_fail@plt+0xc630>
   1baa0:	str	r0, [sp, #24]
   1baa4:	b	1bb58 <__assert_fail@plt+0xaab8>
   1baa8:	ldr	r1, [sp, #32]
   1baac:	sub	r0, fp, #40	; 0x28
   1bab0:	movw	r2, #2
   1bab4:	bl	1d6d0 <__assert_fail@plt+0xc630>
   1bab8:	str	r0, [sp, #24]
   1babc:	b	1bb58 <__assert_fail@plt+0xaab8>
   1bac0:	ldr	r1, [sp, #32]
   1bac4:	sub	r0, fp, #40	; 0x28
   1bac8:	movw	r2, #5
   1bacc:	bl	1d6d0 <__assert_fail@plt+0xc630>
   1bad0:	str	r0, [sp, #24]
   1bad4:	b	1bb58 <__assert_fail@plt+0xaab8>
   1bad8:	ldr	r1, [sp, #32]
   1badc:	sub	r0, fp, #40	; 0x28
   1bae0:	movw	r2, #4
   1bae4:	bl	1d6d0 <__assert_fail@plt+0xc630>
   1bae8:	str	r0, [sp, #24]
   1baec:	b	1bb58 <__assert_fail@plt+0xaab8>
   1baf0:	sub	r0, fp, #40	; 0x28
   1baf4:	movw	r1, #2
   1baf8:	bl	1bbc8 <__assert_fail@plt+0xab28>
   1bafc:	str	r0, [sp, #24]
   1bb00:	b	1bb58 <__assert_fail@plt+0xaab8>
   1bb04:	ldr	r1, [sp, #32]
   1bb08:	sub	r0, fp, #40	; 0x28
   1bb0c:	movw	r2, #8
   1bb10:	bl	1d6d0 <__assert_fail@plt+0xc630>
   1bb14:	str	r0, [sp, #24]
   1bb18:	b	1bb58 <__assert_fail@plt+0xaab8>
   1bb1c:	ldr	r1, [sp, #32]
   1bb20:	sub	r0, fp, #40	; 0x28
   1bb24:	movw	r2, #7
   1bb28:	bl	1d6d0 <__assert_fail@plt+0xc630>
   1bb2c:	str	r0, [sp, #24]
   1bb30:	b	1bb58 <__assert_fail@plt+0xaab8>
   1bb34:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1bb38:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1bb3c:	ldr	r2, [fp, #-20]	; 0xffffffec
   1bb40:	str	r1, [r2, #4]
   1bb44:	str	r0, [r2]
   1bb48:	ldr	r0, [sp, #44]	; 0x2c
   1bb4c:	orr	r0, r0, #2
   1bb50:	str	r0, [fp, #-4]
   1bb54:	b	1bbbc <__assert_fail@plt+0xab1c>
   1bb58:	ldr	r0, [sp, #24]
   1bb5c:	ldr	r1, [sp, #44]	; 0x2c
   1bb60:	orr	r0, r1, r0
   1bb64:	str	r0, [sp, #44]	; 0x2c
   1bb68:	ldr	r0, [sp, #28]
   1bb6c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1bb70:	ldr	r2, [r1]
   1bb74:	add	r0, r2, r0
   1bb78:	str	r0, [r1]
   1bb7c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1bb80:	ldr	r0, [r0]
   1bb84:	ldrsb	r0, [r0]
   1bb88:	cmp	r0, #0
   1bb8c:	beq	1bb9c <__assert_fail@plt+0xaafc>
   1bb90:	ldr	r0, [sp, #44]	; 0x2c
   1bb94:	orr	r0, r0, #2
   1bb98:	str	r0, [sp, #44]	; 0x2c
   1bb9c:	b	1bba0 <__assert_fail@plt+0xab00>
   1bba0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1bba4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1bba8:	ldr	r2, [fp, #-20]	; 0xffffffec
   1bbac:	str	r1, [r2, #4]
   1bbb0:	str	r0, [r2]
   1bbb4:	ldr	r0, [sp, #44]	; 0x2c
   1bbb8:	str	r0, [fp, #-4]
   1bbbc:	ldr	r0, [fp, #-4]
   1bbc0:	mov	sp, fp
   1bbc4:	pop	{fp, pc}
   1bbc8:	push	{fp, lr}
   1bbcc:	mov	fp, sp
   1bbd0:	sub	sp, sp, #568	; 0x238
   1bbd4:	str	r0, [fp, #-8]
   1bbd8:	str	r1, [fp, #-12]
   1bbdc:	b	1c110 <__assert_fail@plt+0xb070>
   1bbe0:	b	1be84 <__assert_fail@plt+0xade4>
   1bbe4:	ldr	r0, [fp, #-12]
   1bbe8:	cmp	r0, #0
   1bbec:	bge	1bd64 <__assert_fail@plt+0xacc4>
   1bbf0:	mov	r0, #1
   1bbf4:	cmp	r0, #0
   1bbf8:	bne	1bcb0 <__assert_fail@plt+0xac10>
   1bbfc:	b	1bc00 <__assert_fail@plt+0xab60>
   1bc00:	b	1bc04 <__assert_fail@plt+0xab64>
   1bc04:	ldr	r0, [fp, #-8]
   1bc08:	ldr	r1, [r0]
   1bc0c:	ldr	r0, [r0, #4]
   1bc10:	ldr	r2, [fp, #-12]
   1bc14:	mov	r3, #127	; 0x7f
   1bc18:	sdiv	r2, r3, r2
   1bc1c:	subs	r1, r1, r2
   1bc20:	sbcs	r0, r0, r2, asr #31
   1bc24:	str	r1, [fp, #-28]	; 0xffffffe4
   1bc28:	str	r0, [fp, #-32]	; 0xffffffe0
   1bc2c:	bcc	1be3c <__assert_fail@plt+0xad9c>
   1bc30:	b	1be60 <__assert_fail@plt+0xadc0>
   1bc34:	b	1bc38 <__assert_fail@plt+0xab98>
   1bc38:	ldr	r0, [pc, #4088]	; 1cc38 <__assert_fail@plt+0xbb98>
   1bc3c:	ldr	r1, [fp, #-12]
   1bc40:	cmp	r1, r0
   1bc44:	blt	1bc5c <__assert_fail@plt+0xabbc>
   1bc48:	b	1bc68 <__assert_fail@plt+0xabc8>
   1bc4c:	ldr	r0, [fp, #-12]
   1bc50:	movw	r1, #0
   1bc54:	cmp	r1, r0
   1bc58:	bge	1bc68 <__assert_fail@plt+0xabc8>
   1bc5c:	movw	r0, #0
   1bc60:	str	r0, [fp, #-36]	; 0xffffffdc
   1bc64:	b	1bc80 <__assert_fail@plt+0xabe0>
   1bc68:	ldr	r0, [fp, #-12]
   1bc6c:	movw	r1, #0
   1bc70:	sub	r0, r1, r0
   1bc74:	movw	r1, #127	; 0x7f
   1bc78:	sdiv	r0, r1, r0
   1bc7c:	str	r0, [fp, #-36]	; 0xffffffdc
   1bc80:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1bc84:	ldr	r1, [fp, #-8]
   1bc88:	ldr	r2, [r1]
   1bc8c:	ldr	r1, [r1, #4]
   1bc90:	mvn	r1, r1
   1bc94:	mvn	r2, r2
   1bc98:	subs	r2, r2, r0
   1bc9c:	sbcs	r0, r1, r0, asr #31
   1bca0:	str	r2, [fp, #-40]	; 0xffffffd8
   1bca4:	str	r0, [fp, #-44]	; 0xffffffd4
   1bca8:	bcs	1be3c <__assert_fail@plt+0xad9c>
   1bcac:	b	1be60 <__assert_fail@plt+0xadc0>
   1bcb0:	b	1bcb4 <__assert_fail@plt+0xac14>
   1bcb4:	b	1bd34 <__assert_fail@plt+0xac94>
   1bcb8:	b	1bd34 <__assert_fail@plt+0xac94>
   1bcbc:	ldr	r0, [fp, #-12]
   1bcc0:	cmn	r0, #1
   1bcc4:	bne	1bd34 <__assert_fail@plt+0xac94>
   1bcc8:	b	1bcec <__assert_fail@plt+0xac4c>
   1bccc:	ldr	r0, [fp, #-8]
   1bcd0:	ldr	r1, [r0]
   1bcd4:	ldr	r0, [r0, #4]
   1bcd8:	eor	r1, r1, #128	; 0x80
   1bcdc:	orr	r0, r1, r0
   1bce0:	cmp	r0, #0
   1bce4:	bne	1be3c <__assert_fail@plt+0xad9c>
   1bce8:	b	1be60 <__assert_fail@plt+0xadc0>
   1bcec:	ldr	r0, [fp, #-8]
   1bcf0:	ldr	r1, [r0]
   1bcf4:	ldr	r0, [r0, #4]
   1bcf8:	orr	r0, r1, r0
   1bcfc:	cmp	r0, #0
   1bd00:	beq	1be60 <__assert_fail@plt+0xadc0>
   1bd04:	b	1bd08 <__assert_fail@plt+0xac68>
   1bd08:	ldr	r0, [fp, #-8]
   1bd0c:	ldr	r1, [r0]
   1bd10:	ldr	r0, [r0, #4]
   1bd14:	subs	r1, r1, #1
   1bd18:	sbc	r0, r0, #0
   1bd1c:	rsbs	r1, r1, #127	; 0x7f
   1bd20:	rscs	r0, r0, #0
   1bd24:	str	r1, [fp, #-48]	; 0xffffffd0
   1bd28:	str	r0, [fp, #-52]	; 0xffffffcc
   1bd2c:	bcc	1be3c <__assert_fail@plt+0xad9c>
   1bd30:	b	1be60 <__assert_fail@plt+0xadc0>
   1bd34:	ldr	r0, [fp, #-12]
   1bd38:	mvn	r1, #127	; 0x7f
   1bd3c:	sdiv	r0, r1, r0
   1bd40:	ldr	r1, [fp, #-8]
   1bd44:	ldr	r2, [r1]
   1bd48:	ldr	r1, [r1, #4]
   1bd4c:	subs	r2, r0, r2
   1bd50:	rscs	r0, r1, r0, asr #31
   1bd54:	str	r2, [fp, #-56]	; 0xffffffc8
   1bd58:	str	r0, [fp, #-60]	; 0xffffffc4
   1bd5c:	bcc	1be3c <__assert_fail@plt+0xad9c>
   1bd60:	b	1be60 <__assert_fail@plt+0xadc0>
   1bd64:	ldr	r0, [fp, #-12]
   1bd68:	cmp	r0, #0
   1bd6c:	bne	1bd74 <__assert_fail@plt+0xacd4>
   1bd70:	b	1be60 <__assert_fail@plt+0xadc0>
   1bd74:	mov	r0, #1
   1bd78:	cmp	r0, #0
   1bd7c:	bne	1be0c <__assert_fail@plt+0xad6c>
   1bd80:	b	1bd84 <__assert_fail@plt+0xace4>
   1bd84:	ldr	r0, [fp, #-8]
   1bd88:	ldr	r1, [r0]
   1bd8c:	ldr	r0, [r0, #4]
   1bd90:	and	r0, r1, r0
   1bd94:	cmn	r0, #1
   1bd98:	bne	1bdd8 <__assert_fail@plt+0xad38>
   1bd9c:	b	1bda0 <__assert_fail@plt+0xad00>
   1bda0:	b	1bda4 <__assert_fail@plt+0xad04>
   1bda4:	ldr	r0, [fp, #-12]
   1bda8:	mvn	r1, #127	; 0x7f
   1bdac:	add	r0, r0, r1
   1bdb0:	movw	r1, #0
   1bdb4:	cmp	r1, r0
   1bdb8:	blt	1be3c <__assert_fail@plt+0xad9c>
   1bdbc:	b	1be60 <__assert_fail@plt+0xadc0>
   1bdc0:	ldr	r0, [fp, #-12]
   1bdc4:	sub	r0, r0, #1
   1bdc8:	movw	r1, #127	; 0x7f
   1bdcc:	cmp	r1, r0
   1bdd0:	blt	1be3c <__assert_fail@plt+0xad9c>
   1bdd4:	b	1be60 <__assert_fail@plt+0xadc0>
   1bdd8:	ldr	r0, [fp, #-8]
   1bddc:	ldr	r2, [r0]
   1bde0:	ldr	r3, [r0, #4]
   1bde4:	mvn	r0, #127	; 0x7f
   1bde8:	mvn	r1, #0
   1bdec:	bl	1fccc <__assert_fail@plt+0xec2c>
   1bdf0:	ldr	r2, [fp, #-12]
   1bdf4:	subs	r0, r0, r2
   1bdf8:	sbcs	r1, r1, r2, asr #31
   1bdfc:	str	r0, [fp, #-64]	; 0xffffffc0
   1be00:	str	r1, [fp, #-68]	; 0xffffffbc
   1be04:	bcc	1be3c <__assert_fail@plt+0xad9c>
   1be08:	b	1be60 <__assert_fail@plt+0xadc0>
   1be0c:	ldr	r0, [fp, #-12]
   1be10:	mov	r1, #127	; 0x7f
   1be14:	sdiv	r0, r1, r0
   1be18:	ldr	r1, [fp, #-8]
   1be1c:	ldr	r2, [r1]
   1be20:	ldr	r1, [r1, #4]
   1be24:	subs	r2, r0, r2
   1be28:	rscs	r0, r1, r0, asr #31
   1be2c:	str	r2, [fp, #-72]	; 0xffffffb8
   1be30:	str	r0, [fp, #-76]	; 0xffffffb4
   1be34:	bcs	1be60 <__assert_fail@plt+0xadc0>
   1be38:	b	1be3c <__assert_fail@plt+0xad9c>
   1be3c:	ldr	r0, [fp, #-8]
   1be40:	ldr	r0, [r0]
   1be44:	ldr	r1, [fp, #-12]
   1be48:	mul	r0, r0, r1
   1be4c:	sxtb	r0, r0
   1be50:	asr	r1, r0, #31
   1be54:	str	r0, [fp, #-24]	; 0xffffffe8
   1be58:	str	r1, [fp, #-20]	; 0xffffffec
   1be5c:	b	1d684 <__assert_fail@plt+0xc5e4>
   1be60:	ldr	r0, [fp, #-8]
   1be64:	ldr	r0, [r0]
   1be68:	ldr	r1, [fp, #-12]
   1be6c:	mul	r0, r0, r1
   1be70:	sxtb	r0, r0
   1be74:	asr	r1, r0, #31
   1be78:	str	r0, [fp, #-24]	; 0xffffffe8
   1be7c:	str	r1, [fp, #-20]	; 0xffffffec
   1be80:	b	1d6a0 <__assert_fail@plt+0xc600>
   1be84:	ldr	r0, [fp, #-12]
   1be88:	cmp	r0, #0
   1be8c:	bge	1bfe4 <__assert_fail@plt+0xaf44>
   1be90:	mov	r0, #1
   1be94:	cmp	r0, #0
   1be98:	bne	1bf50 <__assert_fail@plt+0xaeb0>
   1be9c:	b	1bea0 <__assert_fail@plt+0xae00>
   1bea0:	b	1bea4 <__assert_fail@plt+0xae04>
   1bea4:	ldr	r0, [fp, #-8]
   1bea8:	ldr	r1, [r0]
   1beac:	ldr	r0, [r0, #4]
   1beb0:	ldr	r2, [fp, #-12]
   1beb4:	mov	r3, #255	; 0xff
   1beb8:	sdiv	r2, r3, r2
   1bebc:	subs	r1, r1, r2
   1bec0:	sbcs	r0, r0, r2, asr #31
   1bec4:	str	r1, [fp, #-80]	; 0xffffffb0
   1bec8:	str	r0, [fp, #-84]	; 0xffffffac
   1becc:	bcc	1c0c8 <__assert_fail@plt+0xb028>
   1bed0:	b	1c0ec <__assert_fail@plt+0xb04c>
   1bed4:	b	1bed8 <__assert_fail@plt+0xae38>
   1bed8:	ldr	r0, [pc, #3416]	; 1cc38 <__assert_fail@plt+0xbb98>
   1bedc:	ldr	r1, [fp, #-12]
   1bee0:	cmp	r1, r0
   1bee4:	blt	1befc <__assert_fail@plt+0xae5c>
   1bee8:	b	1bf08 <__assert_fail@plt+0xae68>
   1beec:	ldr	r0, [fp, #-12]
   1bef0:	movw	r1, #0
   1bef4:	cmp	r1, r0
   1bef8:	bge	1bf08 <__assert_fail@plt+0xae68>
   1befc:	movw	r0, #0
   1bf00:	str	r0, [fp, #-88]	; 0xffffffa8
   1bf04:	b	1bf20 <__assert_fail@plt+0xae80>
   1bf08:	ldr	r0, [fp, #-12]
   1bf0c:	movw	r1, #0
   1bf10:	sub	r0, r1, r0
   1bf14:	movw	r1, #255	; 0xff
   1bf18:	sdiv	r0, r1, r0
   1bf1c:	str	r0, [fp, #-88]	; 0xffffffa8
   1bf20:	ldr	r0, [fp, #-88]	; 0xffffffa8
   1bf24:	ldr	r1, [fp, #-8]
   1bf28:	ldr	r2, [r1]
   1bf2c:	ldr	r1, [r1, #4]
   1bf30:	mvn	r1, r1
   1bf34:	mvn	r2, r2
   1bf38:	subs	r2, r2, r0
   1bf3c:	sbcs	r0, r1, r0, asr #31
   1bf40:	str	r2, [fp, #-92]	; 0xffffffa4
   1bf44:	str	r0, [fp, #-96]	; 0xffffffa0
   1bf48:	bcs	1c0c8 <__assert_fail@plt+0xb028>
   1bf4c:	b	1c0ec <__assert_fail@plt+0xb04c>
   1bf50:	b	1bf54 <__assert_fail@plt+0xaeb4>
   1bf54:	b	1bfb4 <__assert_fail@plt+0xaf14>
   1bf58:	b	1bfb4 <__assert_fail@plt+0xaf14>
   1bf5c:	ldr	r0, [fp, #-12]
   1bf60:	cmn	r0, #1
   1bf64:	bne	1bfb4 <__assert_fail@plt+0xaf14>
   1bf68:	b	1bf88 <__assert_fail@plt+0xaee8>
   1bf6c:	ldr	r0, [fp, #-8]
   1bf70:	ldr	r1, [r0]
   1bf74:	ldr	r0, [r0, #4]
   1bf78:	orr	r0, r1, r0
   1bf7c:	cmp	r0, #0
   1bf80:	bne	1c0c8 <__assert_fail@plt+0xb028>
   1bf84:	b	1c0ec <__assert_fail@plt+0xb04c>
   1bf88:	ldr	r0, [fp, #-8]
   1bf8c:	ldr	r1, [r0]
   1bf90:	ldr	r0, [r0, #4]
   1bf94:	orr	r0, r1, r0
   1bf98:	cmp	r0, #0
   1bf9c:	beq	1c0ec <__assert_fail@plt+0xb04c>
   1bfa0:	b	1bfa4 <__assert_fail@plt+0xaf04>
   1bfa4:	mov	r0, #0
   1bfa8:	cmp	r0, #0
   1bfac:	bne	1c0c8 <__assert_fail@plt+0xb028>
   1bfb0:	b	1c0ec <__assert_fail@plt+0xb04c>
   1bfb4:	ldr	r0, [fp, #-12]
   1bfb8:	mov	r1, #0
   1bfbc:	sdiv	r0, r1, r0
   1bfc0:	ldr	r1, [fp, #-8]
   1bfc4:	ldr	r2, [r1]
   1bfc8:	ldr	r1, [r1, #4]
   1bfcc:	subs	r2, r0, r2
   1bfd0:	rscs	r0, r1, r0, asr #31
   1bfd4:	str	r2, [fp, #-100]	; 0xffffff9c
   1bfd8:	str	r0, [fp, #-104]	; 0xffffff98
   1bfdc:	bcc	1c0c8 <__assert_fail@plt+0xb028>
   1bfe0:	b	1c0ec <__assert_fail@plt+0xb04c>
   1bfe4:	ldr	r0, [fp, #-12]
   1bfe8:	cmp	r0, #0
   1bfec:	bne	1bff4 <__assert_fail@plt+0xaf54>
   1bff0:	b	1c0ec <__assert_fail@plt+0xb04c>
   1bff4:	mov	r0, #1
   1bff8:	cmp	r0, #0
   1bffc:	bne	1c098 <__assert_fail@plt+0xaff8>
   1c000:	b	1c004 <__assert_fail@plt+0xaf64>
   1c004:	b	1c00c <__assert_fail@plt+0xaf6c>
   1c008:	b	1c010 <__assert_fail@plt+0xaf70>
   1c00c:	b	1c060 <__assert_fail@plt+0xafc0>
   1c010:	ldr	r0, [fp, #-8]
   1c014:	ldr	r1, [r0]
   1c018:	ldr	r0, [r0, #4]
   1c01c:	and	r0, r1, r0
   1c020:	cmn	r0, #1
   1c024:	bne	1c060 <__assert_fail@plt+0xafc0>
   1c028:	b	1c02c <__assert_fail@plt+0xaf8c>
   1c02c:	b	1c030 <__assert_fail@plt+0xaf90>
   1c030:	ldr	r0, [fp, #-12]
   1c034:	add	r0, r0, #0
   1c038:	movw	r1, #0
   1c03c:	cmp	r1, r0
   1c040:	blt	1c0c8 <__assert_fail@plt+0xb028>
   1c044:	b	1c0ec <__assert_fail@plt+0xb04c>
   1c048:	ldr	r0, [fp, #-12]
   1c04c:	sub	r0, r0, #1
   1c050:	mvn	r1, #0
   1c054:	cmp	r1, r0
   1c058:	blt	1c0c8 <__assert_fail@plt+0xb028>
   1c05c:	b	1c0ec <__assert_fail@plt+0xb04c>
   1c060:	ldr	r0, [fp, #-8]
   1c064:	ldr	r2, [r0]
   1c068:	ldr	r3, [r0, #4]
   1c06c:	mov	r0, #0
   1c070:	str	r0, [fp, #-108]	; 0xffffff94
   1c074:	ldr	r1, [fp, #-108]	; 0xffffff94
   1c078:	bl	1fccc <__assert_fail@plt+0xec2c>
   1c07c:	ldr	r2, [fp, #-12]
   1c080:	subs	r0, r0, r2
   1c084:	sbcs	r1, r1, r2, asr #31
   1c088:	str	r0, [fp, #-112]	; 0xffffff90
   1c08c:	str	r1, [fp, #-116]	; 0xffffff8c
   1c090:	bcc	1c0c8 <__assert_fail@plt+0xb028>
   1c094:	b	1c0ec <__assert_fail@plt+0xb04c>
   1c098:	ldr	r0, [fp, #-12]
   1c09c:	mov	r1, #255	; 0xff
   1c0a0:	sdiv	r0, r1, r0
   1c0a4:	ldr	r1, [fp, #-8]
   1c0a8:	ldr	r2, [r1]
   1c0ac:	ldr	r1, [r1, #4]
   1c0b0:	subs	r2, r0, r2
   1c0b4:	rscs	r0, r1, r0, asr #31
   1c0b8:	str	r2, [fp, #-120]	; 0xffffff88
   1c0bc:	str	r0, [fp, #-124]	; 0xffffff84
   1c0c0:	bcs	1c0ec <__assert_fail@plt+0xb04c>
   1c0c4:	b	1c0c8 <__assert_fail@plt+0xb028>
   1c0c8:	ldr	r0, [fp, #-8]
   1c0cc:	ldr	r0, [r0]
   1c0d0:	ldr	r1, [fp, #-12]
   1c0d4:	mul	r0, r0, r1
   1c0d8:	uxtb	r0, r0
   1c0dc:	mov	r1, #0
   1c0e0:	str	r1, [fp, #-20]	; 0xffffffec
   1c0e4:	str	r0, [fp, #-24]	; 0xffffffe8
   1c0e8:	b	1d684 <__assert_fail@plt+0xc5e4>
   1c0ec:	ldr	r0, [fp, #-8]
   1c0f0:	ldr	r0, [r0]
   1c0f4:	ldr	r1, [fp, #-12]
   1c0f8:	mul	r0, r0, r1
   1c0fc:	uxtb	r0, r0
   1c100:	mov	r1, #0
   1c104:	str	r1, [fp, #-20]	; 0xffffffec
   1c108:	str	r0, [fp, #-24]	; 0xffffffe8
   1c10c:	b	1d6a0 <__assert_fail@plt+0xc600>
   1c110:	b	1c64c <__assert_fail@plt+0xb5ac>
   1c114:	b	1c3c0 <__assert_fail@plt+0xb320>
   1c118:	ldr	r0, [fp, #-12]
   1c11c:	cmp	r0, #0
   1c120:	bge	1c29c <__assert_fail@plt+0xb1fc>
   1c124:	mov	r0, #1
   1c128:	cmp	r0, #0
   1c12c:	bne	1c1e4 <__assert_fail@plt+0xb144>
   1c130:	b	1c134 <__assert_fail@plt+0xb094>
   1c134:	b	1c138 <__assert_fail@plt+0xb098>
   1c138:	ldr	r0, [fp, #-8]
   1c13c:	ldr	r1, [r0]
   1c140:	ldr	r0, [r0, #4]
   1c144:	ldr	r2, [fp, #-12]
   1c148:	movw	r3, #32767	; 0x7fff
   1c14c:	sdiv	r2, r3, r2
   1c150:	subs	r1, r1, r2
   1c154:	sbcs	r0, r0, r2, asr #31
   1c158:	str	r1, [fp, #-128]	; 0xffffff80
   1c15c:	str	r0, [fp, #-132]	; 0xffffff7c
   1c160:	bcc	1c378 <__assert_fail@plt+0xb2d8>
   1c164:	b	1c39c <__assert_fail@plt+0xb2fc>
   1c168:	b	1c16c <__assert_fail@plt+0xb0cc>
   1c16c:	ldr	r0, [pc, #2756]	; 1cc38 <__assert_fail@plt+0xbb98>
   1c170:	ldr	r1, [fp, #-12]
   1c174:	cmp	r1, r0
   1c178:	blt	1c190 <__assert_fail@plt+0xb0f0>
   1c17c:	b	1c19c <__assert_fail@plt+0xb0fc>
   1c180:	ldr	r0, [fp, #-12]
   1c184:	movw	r1, #0
   1c188:	cmp	r1, r0
   1c18c:	bge	1c19c <__assert_fail@plt+0xb0fc>
   1c190:	movw	r0, #0
   1c194:	str	r0, [fp, #-136]	; 0xffffff78
   1c198:	b	1c1b4 <__assert_fail@plt+0xb114>
   1c19c:	ldr	r0, [fp, #-12]
   1c1a0:	movw	r1, #0
   1c1a4:	sub	r0, r1, r0
   1c1a8:	movw	r1, #32767	; 0x7fff
   1c1ac:	sdiv	r0, r1, r0
   1c1b0:	str	r0, [fp, #-136]	; 0xffffff78
   1c1b4:	ldr	r0, [fp, #-136]	; 0xffffff78
   1c1b8:	ldr	r1, [fp, #-8]
   1c1bc:	ldr	r2, [r1]
   1c1c0:	ldr	r1, [r1, #4]
   1c1c4:	mvn	r1, r1
   1c1c8:	mvn	r2, r2
   1c1cc:	subs	r2, r2, r0
   1c1d0:	sbcs	r0, r1, r0, asr #31
   1c1d4:	str	r2, [fp, #-140]	; 0xffffff74
   1c1d8:	str	r0, [fp, #-144]	; 0xffffff70
   1c1dc:	bcs	1c378 <__assert_fail@plt+0xb2d8>
   1c1e0:	b	1c39c <__assert_fail@plt+0xb2fc>
   1c1e4:	b	1c1e8 <__assert_fail@plt+0xb148>
   1c1e8:	b	1c268 <__assert_fail@plt+0xb1c8>
   1c1ec:	b	1c268 <__assert_fail@plt+0xb1c8>
   1c1f0:	ldr	r0, [fp, #-12]
   1c1f4:	cmn	r0, #1
   1c1f8:	bne	1c268 <__assert_fail@plt+0xb1c8>
   1c1fc:	b	1c220 <__assert_fail@plt+0xb180>
   1c200:	ldr	r0, [fp, #-8]
   1c204:	ldr	r1, [r0]
   1c208:	ldr	r0, [r0, #4]
   1c20c:	eor	r1, r1, #32768	; 0x8000
   1c210:	orr	r0, r1, r0
   1c214:	cmp	r0, #0
   1c218:	bne	1c378 <__assert_fail@plt+0xb2d8>
   1c21c:	b	1c39c <__assert_fail@plt+0xb2fc>
   1c220:	ldr	r0, [fp, #-8]
   1c224:	ldr	r1, [r0]
   1c228:	ldr	r0, [r0, #4]
   1c22c:	orr	r0, r1, r0
   1c230:	cmp	r0, #0
   1c234:	beq	1c39c <__assert_fail@plt+0xb2fc>
   1c238:	b	1c23c <__assert_fail@plt+0xb19c>
   1c23c:	ldr	r0, [fp, #-8]
   1c240:	ldr	r1, [r0]
   1c244:	ldr	r0, [r0, #4]
   1c248:	subs	r1, r1, #1
   1c24c:	sbc	r0, r0, #0
   1c250:	lsr	r1, r1, #15
   1c254:	orr	r1, r1, r0, lsl #17
   1c258:	orr	r0, r1, r0, lsr #15
   1c25c:	cmp	r0, #0
   1c260:	bne	1c378 <__assert_fail@plt+0xb2d8>
   1c264:	b	1c39c <__assert_fail@plt+0xb2fc>
   1c268:	ldr	r0, [fp, #-12]
   1c26c:	movw	r1, #32768	; 0x8000
   1c270:	movt	r1, #65535	; 0xffff
   1c274:	sdiv	r0, r1, r0
   1c278:	ldr	r1, [fp, #-8]
   1c27c:	ldr	r2, [r1]
   1c280:	ldr	r1, [r1, #4]
   1c284:	subs	r2, r0, r2
   1c288:	rscs	r0, r1, r0, asr #31
   1c28c:	str	r2, [fp, #-148]	; 0xffffff6c
   1c290:	str	r0, [fp, #-152]	; 0xffffff68
   1c294:	bcc	1c378 <__assert_fail@plt+0xb2d8>
   1c298:	b	1c39c <__assert_fail@plt+0xb2fc>
   1c29c:	ldr	r0, [fp, #-12]
   1c2a0:	cmp	r0, #0
   1c2a4:	bne	1c2ac <__assert_fail@plt+0xb20c>
   1c2a8:	b	1c39c <__assert_fail@plt+0xb2fc>
   1c2ac:	mov	r0, #1
   1c2b0:	cmp	r0, #0
   1c2b4:	bne	1c348 <__assert_fail@plt+0xb2a8>
   1c2b8:	b	1c2bc <__assert_fail@plt+0xb21c>
   1c2bc:	ldr	r0, [fp, #-8]
   1c2c0:	ldr	r1, [r0]
   1c2c4:	ldr	r0, [r0, #4]
   1c2c8:	and	r0, r1, r0
   1c2cc:	cmn	r0, #1
   1c2d0:	bne	1c310 <__assert_fail@plt+0xb270>
   1c2d4:	b	1c2d8 <__assert_fail@plt+0xb238>
   1c2d8:	b	1c2dc <__assert_fail@plt+0xb23c>
   1c2dc:	ldr	r0, [pc, #4064]	; 1d2c4 <__assert_fail@plt+0xc224>
   1c2e0:	ldr	r1, [fp, #-12]
   1c2e4:	add	r0, r1, r0
   1c2e8:	movw	r1, #0
   1c2ec:	cmp	r1, r0
   1c2f0:	blt	1c378 <__assert_fail@plt+0xb2d8>
   1c2f4:	b	1c39c <__assert_fail@plt+0xb2fc>
   1c2f8:	ldr	r0, [fp, #-12]
   1c2fc:	sub	r0, r0, #1
   1c300:	movw	r1, #32767	; 0x7fff
   1c304:	cmp	r1, r0
   1c308:	blt	1c378 <__assert_fail@plt+0xb2d8>
   1c30c:	b	1c39c <__assert_fail@plt+0xb2fc>
   1c310:	ldr	r0, [fp, #-8]
   1c314:	ldr	r2, [r0]
   1c318:	ldr	r3, [r0, #4]
   1c31c:	movw	r0, #32768	; 0x8000
   1c320:	movt	r0, #65535	; 0xffff
   1c324:	mvn	r1, #0
   1c328:	bl	1fccc <__assert_fail@plt+0xec2c>
   1c32c:	ldr	r2, [fp, #-12]
   1c330:	subs	r0, r0, r2
   1c334:	sbcs	r1, r1, r2, asr #31
   1c338:	str	r0, [fp, #-156]	; 0xffffff64
   1c33c:	str	r1, [fp, #-160]	; 0xffffff60
   1c340:	bcc	1c378 <__assert_fail@plt+0xb2d8>
   1c344:	b	1c39c <__assert_fail@plt+0xb2fc>
   1c348:	ldr	r0, [fp, #-12]
   1c34c:	movw	r1, #32767	; 0x7fff
   1c350:	sdiv	r0, r1, r0
   1c354:	ldr	r1, [fp, #-8]
   1c358:	ldr	r2, [r1]
   1c35c:	ldr	r1, [r1, #4]
   1c360:	subs	r2, r0, r2
   1c364:	rscs	r0, r1, r0, asr #31
   1c368:	str	r2, [fp, #-164]	; 0xffffff5c
   1c36c:	str	r0, [fp, #-168]	; 0xffffff58
   1c370:	bcs	1c39c <__assert_fail@plt+0xb2fc>
   1c374:	b	1c378 <__assert_fail@plt+0xb2d8>
   1c378:	ldr	r0, [fp, #-8]
   1c37c:	ldr	r0, [r0]
   1c380:	ldr	r1, [fp, #-12]
   1c384:	mul	r0, r0, r1
   1c388:	sxth	r0, r0
   1c38c:	asr	r1, r0, #31
   1c390:	str	r0, [fp, #-24]	; 0xffffffe8
   1c394:	str	r1, [fp, #-20]	; 0xffffffec
   1c398:	b	1d684 <__assert_fail@plt+0xc5e4>
   1c39c:	ldr	r0, [fp, #-8]
   1c3a0:	ldr	r0, [r0]
   1c3a4:	ldr	r1, [fp, #-12]
   1c3a8:	mul	r0, r0, r1
   1c3ac:	sxth	r0, r0
   1c3b0:	asr	r1, r0, #31
   1c3b4:	str	r0, [fp, #-24]	; 0xffffffe8
   1c3b8:	str	r1, [fp, #-20]	; 0xffffffec
   1c3bc:	b	1d6a0 <__assert_fail@plt+0xc600>
   1c3c0:	ldr	r0, [fp, #-12]
   1c3c4:	cmp	r0, #0
   1c3c8:	bge	1c520 <__assert_fail@plt+0xb480>
   1c3cc:	mov	r0, #1
   1c3d0:	cmp	r0, #0
   1c3d4:	bne	1c48c <__assert_fail@plt+0xb3ec>
   1c3d8:	b	1c3dc <__assert_fail@plt+0xb33c>
   1c3dc:	b	1c3e0 <__assert_fail@plt+0xb340>
   1c3e0:	ldr	r0, [fp, #-8]
   1c3e4:	ldr	r1, [r0]
   1c3e8:	ldr	r0, [r0, #4]
   1c3ec:	ldr	r2, [fp, #-12]
   1c3f0:	movw	r3, #65535	; 0xffff
   1c3f4:	sdiv	r2, r3, r2
   1c3f8:	subs	r1, r1, r2
   1c3fc:	sbcs	r0, r0, r2, asr #31
   1c400:	str	r1, [fp, #-172]	; 0xffffff54
   1c404:	str	r0, [fp, #-176]	; 0xffffff50
   1c408:	bcc	1c604 <__assert_fail@plt+0xb564>
   1c40c:	b	1c628 <__assert_fail@plt+0xb588>
   1c410:	b	1c414 <__assert_fail@plt+0xb374>
   1c414:	ldr	r0, [pc, #2076]	; 1cc38 <__assert_fail@plt+0xbb98>
   1c418:	ldr	r1, [fp, #-12]
   1c41c:	cmp	r1, r0
   1c420:	blt	1c438 <__assert_fail@plt+0xb398>
   1c424:	b	1c444 <__assert_fail@plt+0xb3a4>
   1c428:	ldr	r0, [fp, #-12]
   1c42c:	movw	r1, #0
   1c430:	cmp	r1, r0
   1c434:	bge	1c444 <__assert_fail@plt+0xb3a4>
   1c438:	movw	r0, #0
   1c43c:	str	r0, [fp, #-180]	; 0xffffff4c
   1c440:	b	1c45c <__assert_fail@plt+0xb3bc>
   1c444:	ldr	r0, [fp, #-12]
   1c448:	movw	r1, #0
   1c44c:	sub	r0, r1, r0
   1c450:	movw	r1, #65535	; 0xffff
   1c454:	sdiv	r0, r1, r0
   1c458:	str	r0, [fp, #-180]	; 0xffffff4c
   1c45c:	ldr	r0, [fp, #-180]	; 0xffffff4c
   1c460:	ldr	r1, [fp, #-8]
   1c464:	ldr	r2, [r1]
   1c468:	ldr	r1, [r1, #4]
   1c46c:	mvn	r1, r1
   1c470:	mvn	r2, r2
   1c474:	subs	r2, r2, r0
   1c478:	sbcs	r0, r1, r0, asr #31
   1c47c:	str	r2, [fp, #-184]	; 0xffffff48
   1c480:	str	r0, [fp, #-188]	; 0xffffff44
   1c484:	bcs	1c604 <__assert_fail@plt+0xb564>
   1c488:	b	1c628 <__assert_fail@plt+0xb588>
   1c48c:	b	1c490 <__assert_fail@plt+0xb3f0>
   1c490:	b	1c4f0 <__assert_fail@plt+0xb450>
   1c494:	b	1c4f0 <__assert_fail@plt+0xb450>
   1c498:	ldr	r0, [fp, #-12]
   1c49c:	cmn	r0, #1
   1c4a0:	bne	1c4f0 <__assert_fail@plt+0xb450>
   1c4a4:	b	1c4c4 <__assert_fail@plt+0xb424>
   1c4a8:	ldr	r0, [fp, #-8]
   1c4ac:	ldr	r1, [r0]
   1c4b0:	ldr	r0, [r0, #4]
   1c4b4:	orr	r0, r1, r0
   1c4b8:	cmp	r0, #0
   1c4bc:	bne	1c604 <__assert_fail@plt+0xb564>
   1c4c0:	b	1c628 <__assert_fail@plt+0xb588>
   1c4c4:	ldr	r0, [fp, #-8]
   1c4c8:	ldr	r1, [r0]
   1c4cc:	ldr	r0, [r0, #4]
   1c4d0:	orr	r0, r1, r0
   1c4d4:	cmp	r0, #0
   1c4d8:	beq	1c628 <__assert_fail@plt+0xb588>
   1c4dc:	b	1c4e0 <__assert_fail@plt+0xb440>
   1c4e0:	mov	r0, #0
   1c4e4:	cmp	r0, #0
   1c4e8:	bne	1c604 <__assert_fail@plt+0xb564>
   1c4ec:	b	1c628 <__assert_fail@plt+0xb588>
   1c4f0:	ldr	r0, [fp, #-12]
   1c4f4:	mov	r1, #0
   1c4f8:	sdiv	r0, r1, r0
   1c4fc:	ldr	r1, [fp, #-8]
   1c500:	ldr	r2, [r1]
   1c504:	ldr	r1, [r1, #4]
   1c508:	subs	r2, r0, r2
   1c50c:	rscs	r0, r1, r0, asr #31
   1c510:	str	r2, [fp, #-192]	; 0xffffff40
   1c514:	str	r0, [fp, #-196]	; 0xffffff3c
   1c518:	bcc	1c604 <__assert_fail@plt+0xb564>
   1c51c:	b	1c628 <__assert_fail@plt+0xb588>
   1c520:	ldr	r0, [fp, #-12]
   1c524:	cmp	r0, #0
   1c528:	bne	1c530 <__assert_fail@plt+0xb490>
   1c52c:	b	1c628 <__assert_fail@plt+0xb588>
   1c530:	mov	r0, #1
   1c534:	cmp	r0, #0
   1c538:	bne	1c5d4 <__assert_fail@plt+0xb534>
   1c53c:	b	1c540 <__assert_fail@plt+0xb4a0>
   1c540:	b	1c548 <__assert_fail@plt+0xb4a8>
   1c544:	b	1c54c <__assert_fail@plt+0xb4ac>
   1c548:	b	1c59c <__assert_fail@plt+0xb4fc>
   1c54c:	ldr	r0, [fp, #-8]
   1c550:	ldr	r1, [r0]
   1c554:	ldr	r0, [r0, #4]
   1c558:	and	r0, r1, r0
   1c55c:	cmn	r0, #1
   1c560:	bne	1c59c <__assert_fail@plt+0xb4fc>
   1c564:	b	1c568 <__assert_fail@plt+0xb4c8>
   1c568:	b	1c56c <__assert_fail@plt+0xb4cc>
   1c56c:	ldr	r0, [fp, #-12]
   1c570:	add	r0, r0, #0
   1c574:	movw	r1, #0
   1c578:	cmp	r1, r0
   1c57c:	blt	1c604 <__assert_fail@plt+0xb564>
   1c580:	b	1c628 <__assert_fail@plt+0xb588>
   1c584:	ldr	r0, [fp, #-12]
   1c588:	sub	r0, r0, #1
   1c58c:	mvn	r1, #0
   1c590:	cmp	r1, r0
   1c594:	blt	1c604 <__assert_fail@plt+0xb564>
   1c598:	b	1c628 <__assert_fail@plt+0xb588>
   1c59c:	ldr	r0, [fp, #-8]
   1c5a0:	ldr	r2, [r0]
   1c5a4:	ldr	r3, [r0, #4]
   1c5a8:	mov	r0, #0
   1c5ac:	str	r0, [fp, #-200]	; 0xffffff38
   1c5b0:	ldr	r1, [fp, #-200]	; 0xffffff38
   1c5b4:	bl	1fccc <__assert_fail@plt+0xec2c>
   1c5b8:	ldr	r2, [fp, #-12]
   1c5bc:	subs	r0, r0, r2
   1c5c0:	sbcs	r1, r1, r2, asr #31
   1c5c4:	str	r0, [fp, #-204]	; 0xffffff34
   1c5c8:	str	r1, [fp, #-208]	; 0xffffff30
   1c5cc:	bcc	1c604 <__assert_fail@plt+0xb564>
   1c5d0:	b	1c628 <__assert_fail@plt+0xb588>
   1c5d4:	ldr	r0, [fp, #-12]
   1c5d8:	movw	r1, #65535	; 0xffff
   1c5dc:	sdiv	r0, r1, r0
   1c5e0:	ldr	r1, [fp, #-8]
   1c5e4:	ldr	r2, [r1]
   1c5e8:	ldr	r1, [r1, #4]
   1c5ec:	subs	r2, r0, r2
   1c5f0:	rscs	r0, r1, r0, asr #31
   1c5f4:	str	r2, [fp, #-212]	; 0xffffff2c
   1c5f8:	str	r0, [fp, #-216]	; 0xffffff28
   1c5fc:	bcs	1c628 <__assert_fail@plt+0xb588>
   1c600:	b	1c604 <__assert_fail@plt+0xb564>
   1c604:	ldr	r0, [fp, #-8]
   1c608:	ldr	r0, [r0]
   1c60c:	ldr	r1, [fp, #-12]
   1c610:	mul	r0, r0, r1
   1c614:	uxth	r0, r0
   1c618:	mov	r1, #0
   1c61c:	str	r1, [fp, #-20]	; 0xffffffec
   1c620:	str	r0, [fp, #-24]	; 0xffffffe8
   1c624:	b	1d684 <__assert_fail@plt+0xc5e4>
   1c628:	ldr	r0, [fp, #-8]
   1c62c:	ldr	r0, [r0]
   1c630:	ldr	r1, [fp, #-12]
   1c634:	mul	r0, r0, r1
   1c638:	uxth	r0, r0
   1c63c:	mov	r1, #0
   1c640:	str	r1, [fp, #-20]	; 0xffffffec
   1c644:	str	r0, [fp, #-24]	; 0xffffffe8
   1c648:	b	1d6a0 <__assert_fail@plt+0xc600>
   1c64c:	b	1cb64 <__assert_fail@plt+0xbac4>
   1c650:	b	1c8e0 <__assert_fail@plt+0xb840>
   1c654:	ldr	r0, [fp, #-12]
   1c658:	cmp	r0, #0
   1c65c:	bge	1c7cc <__assert_fail@plt+0xb72c>
   1c660:	mov	r0, #1
   1c664:	cmp	r0, #0
   1c668:	bne	1c720 <__assert_fail@plt+0xb680>
   1c66c:	b	1c670 <__assert_fail@plt+0xb5d0>
   1c670:	b	1c674 <__assert_fail@plt+0xb5d4>
   1c674:	ldr	r0, [fp, #-8]
   1c678:	ldr	r1, [r0]
   1c67c:	ldr	r0, [r0, #4]
   1c680:	ldr	r2, [fp, #-12]
   1c684:	mvn	r3, #-2147483648	; 0x80000000
   1c688:	sdiv	r2, r3, r2
   1c68c:	subs	r1, r1, r2
   1c690:	sbcs	r0, r0, r2, asr #31
   1c694:	str	r1, [fp, #-220]	; 0xffffff24
   1c698:	str	r0, [fp, #-224]	; 0xffffff20
   1c69c:	bcc	1c8a0 <__assert_fail@plt+0xb800>
   1c6a0:	b	1c8c0 <__assert_fail@plt+0xb820>
   1c6a4:	b	1c6a8 <__assert_fail@plt+0xb608>
   1c6a8:	ldr	r0, [pc, #1416]	; 1cc38 <__assert_fail@plt+0xbb98>
   1c6ac:	ldr	r1, [fp, #-12]
   1c6b0:	cmp	r1, r0
   1c6b4:	blt	1c6cc <__assert_fail@plt+0xb62c>
   1c6b8:	b	1c6d8 <__assert_fail@plt+0xb638>
   1c6bc:	ldr	r0, [fp, #-12]
   1c6c0:	movw	r1, #0
   1c6c4:	cmp	r1, r0
   1c6c8:	bge	1c6d8 <__assert_fail@plt+0xb638>
   1c6cc:	movw	r0, #0
   1c6d0:	str	r0, [fp, #-228]	; 0xffffff1c
   1c6d4:	b	1c6f0 <__assert_fail@plt+0xb650>
   1c6d8:	ldr	r0, [pc, #4076]	; 1d6cc <__assert_fail@plt+0xc62c>
   1c6dc:	ldr	r1, [fp, #-12]
   1c6e0:	movw	r2, #0
   1c6e4:	sub	r1, r2, r1
   1c6e8:	sdiv	r0, r0, r1
   1c6ec:	str	r0, [fp, #-228]	; 0xffffff1c
   1c6f0:	ldr	r0, [fp, #-228]	; 0xffffff1c
   1c6f4:	ldr	r1, [fp, #-8]
   1c6f8:	ldr	r2, [r1]
   1c6fc:	ldr	r1, [r1, #4]
   1c700:	mvn	r1, r1
   1c704:	mvn	r2, r2
   1c708:	subs	r2, r2, r0
   1c70c:	sbcs	r0, r1, r0, asr #31
   1c710:	str	r2, [fp, #-232]	; 0xffffff18
   1c714:	str	r0, [fp, #-236]	; 0xffffff14
   1c718:	bcs	1c8a0 <__assert_fail@plt+0xb800>
   1c71c:	b	1c8c0 <__assert_fail@plt+0xb820>
   1c720:	ldr	r0, [fp, #-12]
   1c724:	cmn	r0, #1
   1c728:	bne	1c79c <__assert_fail@plt+0xb6fc>
   1c72c:	b	1c750 <__assert_fail@plt+0xb6b0>
   1c730:	ldr	r0, [fp, #-8]
   1c734:	ldr	r1, [r0]
   1c738:	ldr	r0, [r0, #4]
   1c73c:	eor	r1, r1, #-2147483648	; 0x80000000
   1c740:	orr	r0, r1, r0
   1c744:	cmp	r0, #0
   1c748:	bne	1c8a0 <__assert_fail@plt+0xb800>
   1c74c:	b	1c8c0 <__assert_fail@plt+0xb820>
   1c750:	ldr	r0, [fp, #-8]
   1c754:	ldr	r1, [r0]
   1c758:	ldr	r0, [r0, #4]
   1c75c:	orr	r0, r1, r0
   1c760:	cmp	r0, #0
   1c764:	beq	1c8c0 <__assert_fail@plt+0xb820>
   1c768:	b	1c76c <__assert_fail@plt+0xb6cc>
   1c76c:	ldr	r0, [fp, #-8]
   1c770:	ldr	r1, [r0]
   1c774:	ldr	r0, [r0, #4]
   1c778:	subs	r1, r1, #1
   1c77c:	sbc	r0, r0, #0
   1c780:	mvn	r2, #-2147483648	; 0x80000000
   1c784:	subs	r1, r2, r1
   1c788:	rscs	r0, r0, #0
   1c78c:	str	r1, [fp, #-240]	; 0xffffff10
   1c790:	str	r0, [fp, #-244]	; 0xffffff0c
   1c794:	bcc	1c8a0 <__assert_fail@plt+0xb800>
   1c798:	b	1c8c0 <__assert_fail@plt+0xb820>
   1c79c:	ldr	r0, [fp, #-12]
   1c7a0:	mov	r1, #-2147483648	; 0x80000000
   1c7a4:	sdiv	r0, r1, r0
   1c7a8:	ldr	r1, [fp, #-8]
   1c7ac:	ldr	r2, [r1]
   1c7b0:	ldr	r1, [r1, #4]
   1c7b4:	subs	r2, r0, r2
   1c7b8:	rscs	r0, r1, r0, asr #31
   1c7bc:	str	r2, [fp, #-248]	; 0xffffff08
   1c7c0:	str	r0, [fp, #-252]	; 0xffffff04
   1c7c4:	bcc	1c8a0 <__assert_fail@plt+0xb800>
   1c7c8:	b	1c8c0 <__assert_fail@plt+0xb820>
   1c7cc:	ldr	r0, [fp, #-12]
   1c7d0:	cmp	r0, #0
   1c7d4:	bne	1c7dc <__assert_fail@plt+0xb73c>
   1c7d8:	b	1c8c0 <__assert_fail@plt+0xb820>
   1c7dc:	mov	r0, #1
   1c7e0:	cmp	r0, #0
   1c7e4:	bne	1c870 <__assert_fail@plt+0xb7d0>
   1c7e8:	b	1c7ec <__assert_fail@plt+0xb74c>
   1c7ec:	ldr	r0, [fp, #-8]
   1c7f0:	ldr	r1, [r0]
   1c7f4:	ldr	r0, [r0, #4]
   1c7f8:	and	r0, r1, r0
   1c7fc:	cmn	r0, #1
   1c800:	bne	1c83c <__assert_fail@plt+0xb79c>
   1c804:	b	1c808 <__assert_fail@plt+0xb768>
   1c808:	b	1c80c <__assert_fail@plt+0xb76c>
   1c80c:	ldr	r0, [fp, #-12]
   1c810:	add	r0, r0, #-2147483648	; 0x80000000
   1c814:	movw	r1, #0
   1c818:	cmp	r1, r0
   1c81c:	blt	1c8a0 <__assert_fail@plt+0xb800>
   1c820:	b	1c8c0 <__assert_fail@plt+0xb820>
   1c824:	ldr	r0, [pc, #3744]	; 1d6cc <__assert_fail@plt+0xc62c>
   1c828:	ldr	r1, [fp, #-12]
   1c82c:	sub	r1, r1, #1
   1c830:	cmp	r0, r1
   1c834:	blt	1c8a0 <__assert_fail@plt+0xb800>
   1c838:	b	1c8c0 <__assert_fail@plt+0xb820>
   1c83c:	ldr	r0, [fp, #-8]
   1c840:	ldr	r2, [r0]
   1c844:	ldr	r3, [r0, #4]
   1c848:	mov	r0, #-2147483648	; 0x80000000
   1c84c:	mvn	r1, #0
   1c850:	bl	1fccc <__assert_fail@plt+0xec2c>
   1c854:	ldr	r2, [fp, #-12]
   1c858:	subs	r0, r0, r2
   1c85c:	sbcs	r1, r1, r2, asr #31
   1c860:	str	r0, [fp, #-256]	; 0xffffff00
   1c864:	str	r1, [fp, #-260]	; 0xfffffefc
   1c868:	bcc	1c8a0 <__assert_fail@plt+0xb800>
   1c86c:	b	1c8c0 <__assert_fail@plt+0xb820>
   1c870:	ldr	r0, [fp, #-12]
   1c874:	mvn	r1, #-2147483648	; 0x80000000
   1c878:	sdiv	r0, r1, r0
   1c87c:	ldr	r1, [fp, #-8]
   1c880:	ldr	r2, [r1]
   1c884:	ldr	r1, [r1, #4]
   1c888:	subs	r2, r0, r2
   1c88c:	rscs	r0, r1, r0, asr #31
   1c890:	str	r2, [fp, #-264]	; 0xfffffef8
   1c894:	str	r0, [fp, #-268]	; 0xfffffef4
   1c898:	bcs	1c8c0 <__assert_fail@plt+0xb820>
   1c89c:	b	1c8a0 <__assert_fail@plt+0xb800>
   1c8a0:	ldr	r0, [fp, #-8]
   1c8a4:	ldr	r0, [r0]
   1c8a8:	ldr	r1, [fp, #-12]
   1c8ac:	mul	r0, r0, r1
   1c8b0:	asr	r1, r0, #31
   1c8b4:	str	r0, [fp, #-24]	; 0xffffffe8
   1c8b8:	str	r1, [fp, #-20]	; 0xffffffec
   1c8bc:	b	1d684 <__assert_fail@plt+0xc5e4>
   1c8c0:	ldr	r0, [fp, #-8]
   1c8c4:	ldr	r0, [r0]
   1c8c8:	ldr	r1, [fp, #-12]
   1c8cc:	mul	r0, r0, r1
   1c8d0:	asr	r1, r0, #31
   1c8d4:	str	r0, [fp, #-24]	; 0xffffffe8
   1c8d8:	str	r1, [fp, #-20]	; 0xffffffec
   1c8dc:	b	1d6a0 <__assert_fail@plt+0xc600>
   1c8e0:	ldr	r0, [fp, #-12]
   1c8e4:	cmp	r0, #0
   1c8e8:	bge	1ca40 <__assert_fail@plt+0xb9a0>
   1c8ec:	mov	r0, #1
   1c8f0:	cmp	r0, #0
   1c8f4:	bne	1c9ac <__assert_fail@plt+0xb90c>
   1c8f8:	b	1c8fc <__assert_fail@plt+0xb85c>
   1c8fc:	b	1c930 <__assert_fail@plt+0xb890>
   1c900:	ldr	r0, [fp, #-8]
   1c904:	ldr	r1, [r0]
   1c908:	ldr	r0, [r0, #4]
   1c90c:	ldr	r2, [fp, #-12]
   1c910:	mvn	r3, #0
   1c914:	udiv	r2, r3, r2
   1c918:	subs	r1, r1, r2
   1c91c:	sbcs	r0, r0, #0
   1c920:	str	r1, [fp, #-272]	; 0xfffffef0
   1c924:	str	r0, [fp, #-276]	; 0xfffffeec
   1c928:	bcc	1cb24 <__assert_fail@plt+0xba84>
   1c92c:	b	1cb44 <__assert_fail@plt+0xbaa4>
   1c930:	b	1c934 <__assert_fail@plt+0xb894>
   1c934:	ldr	r0, [pc, #3468]	; 1d6c8 <__assert_fail@plt+0xc628>
   1c938:	ldr	r1, [fp, #-12]
   1c93c:	cmp	r1, r0
   1c940:	blt	1c958 <__assert_fail@plt+0xb8b8>
   1c944:	b	1c964 <__assert_fail@plt+0xb8c4>
   1c948:	ldr	r0, [fp, #-12]
   1c94c:	movw	r1, #0
   1c950:	cmp	r1, r0
   1c954:	bge	1c964 <__assert_fail@plt+0xb8c4>
   1c958:	movw	r0, #1
   1c95c:	str	r0, [fp, #-280]	; 0xfffffee8
   1c960:	b	1c97c <__assert_fail@plt+0xb8dc>
   1c964:	ldr	r0, [fp, #-12]
   1c968:	movw	r1, #0
   1c96c:	sub	r0, r1, r0
   1c970:	mvn	r1, #0
   1c974:	udiv	r0, r1, r0
   1c978:	str	r0, [fp, #-280]	; 0xfffffee8
   1c97c:	ldr	r0, [fp, #-280]	; 0xfffffee8
   1c980:	ldr	r1, [fp, #-8]
   1c984:	ldr	r2, [r1]
   1c988:	ldr	r1, [r1, #4]
   1c98c:	mvn	r1, r1
   1c990:	mvn	r2, r2
   1c994:	subs	r0, r2, r0
   1c998:	sbcs	r1, r1, #0
   1c99c:	str	r0, [sp, #284]	; 0x11c
   1c9a0:	str	r1, [sp, #280]	; 0x118
   1c9a4:	bcs	1cb24 <__assert_fail@plt+0xba84>
   1c9a8:	b	1cb44 <__assert_fail@plt+0xbaa4>
   1c9ac:	b	1c9b0 <__assert_fail@plt+0xb910>
   1c9b0:	b	1ca10 <__assert_fail@plt+0xb970>
   1c9b4:	b	1ca10 <__assert_fail@plt+0xb970>
   1c9b8:	ldr	r0, [fp, #-12]
   1c9bc:	cmn	r0, #1
   1c9c0:	bne	1ca10 <__assert_fail@plt+0xb970>
   1c9c4:	b	1c9e4 <__assert_fail@plt+0xb944>
   1c9c8:	ldr	r0, [fp, #-8]
   1c9cc:	ldr	r1, [r0]
   1c9d0:	ldr	r0, [r0, #4]
   1c9d4:	orr	r0, r1, r0
   1c9d8:	cmp	r0, #0
   1c9dc:	bne	1cb24 <__assert_fail@plt+0xba84>
   1c9e0:	b	1cb44 <__assert_fail@plt+0xbaa4>
   1c9e4:	ldr	r0, [fp, #-8]
   1c9e8:	ldr	r1, [r0]
   1c9ec:	ldr	r0, [r0, #4]
   1c9f0:	orr	r0, r1, r0
   1c9f4:	cmp	r0, #0
   1c9f8:	beq	1cb44 <__assert_fail@plt+0xbaa4>
   1c9fc:	b	1ca00 <__assert_fail@plt+0xb960>
   1ca00:	mov	r0, #0
   1ca04:	cmp	r0, #0
   1ca08:	bne	1cb24 <__assert_fail@plt+0xba84>
   1ca0c:	b	1cb44 <__assert_fail@plt+0xbaa4>
   1ca10:	ldr	r0, [fp, #-12]
   1ca14:	mov	r1, #0
   1ca18:	sdiv	r0, r1, r0
   1ca1c:	ldr	r1, [fp, #-8]
   1ca20:	ldr	r2, [r1]
   1ca24:	ldr	r1, [r1, #4]
   1ca28:	subs	r2, r0, r2
   1ca2c:	rscs	r0, r1, r0, asr #31
   1ca30:	str	r2, [sp, #276]	; 0x114
   1ca34:	str	r0, [sp, #272]	; 0x110
   1ca38:	bcc	1cb24 <__assert_fail@plt+0xba84>
   1ca3c:	b	1cb44 <__assert_fail@plt+0xbaa4>
   1ca40:	ldr	r0, [fp, #-12]
   1ca44:	cmp	r0, #0
   1ca48:	bne	1ca50 <__assert_fail@plt+0xb9b0>
   1ca4c:	b	1cb44 <__assert_fail@plt+0xbaa4>
   1ca50:	mov	r0, #1
   1ca54:	cmp	r0, #0
   1ca58:	bne	1caf4 <__assert_fail@plt+0xba54>
   1ca5c:	b	1ca60 <__assert_fail@plt+0xb9c0>
   1ca60:	b	1ca68 <__assert_fail@plt+0xb9c8>
   1ca64:	b	1ca6c <__assert_fail@plt+0xb9cc>
   1ca68:	b	1cabc <__assert_fail@plt+0xba1c>
   1ca6c:	ldr	r0, [fp, #-8]
   1ca70:	ldr	r1, [r0]
   1ca74:	ldr	r0, [r0, #4]
   1ca78:	and	r0, r1, r0
   1ca7c:	cmn	r0, #1
   1ca80:	bne	1cabc <__assert_fail@plt+0xba1c>
   1ca84:	b	1ca88 <__assert_fail@plt+0xb9e8>
   1ca88:	b	1ca8c <__assert_fail@plt+0xb9ec>
   1ca8c:	ldr	r0, [fp, #-12]
   1ca90:	add	r0, r0, #0
   1ca94:	movw	r1, #0
   1ca98:	cmp	r1, r0
   1ca9c:	blt	1cb24 <__assert_fail@plt+0xba84>
   1caa0:	b	1cb44 <__assert_fail@plt+0xbaa4>
   1caa4:	ldr	r0, [fp, #-12]
   1caa8:	sub	r0, r0, #1
   1caac:	mvn	r1, #0
   1cab0:	cmp	r1, r0
   1cab4:	blt	1cb24 <__assert_fail@plt+0xba84>
   1cab8:	b	1cb44 <__assert_fail@plt+0xbaa4>
   1cabc:	ldr	r0, [fp, #-8]
   1cac0:	ldr	r2, [r0]
   1cac4:	ldr	r3, [r0, #4]
   1cac8:	mov	r0, #0
   1cacc:	str	r0, [sp, #268]	; 0x10c
   1cad0:	ldr	r1, [sp, #268]	; 0x10c
   1cad4:	bl	1fccc <__assert_fail@plt+0xec2c>
   1cad8:	ldr	r2, [fp, #-12]
   1cadc:	subs	r0, r0, r2
   1cae0:	sbcs	r1, r1, r2, asr #31
   1cae4:	str	r0, [sp, #264]	; 0x108
   1cae8:	str	r1, [sp, #260]	; 0x104
   1caec:	bcc	1cb24 <__assert_fail@plt+0xba84>
   1caf0:	b	1cb44 <__assert_fail@plt+0xbaa4>
   1caf4:	ldr	r0, [fp, #-12]
   1caf8:	mvn	r1, #0
   1cafc:	udiv	r0, r1, r0
   1cb00:	ldr	r1, [fp, #-8]
   1cb04:	ldr	r2, [r1]
   1cb08:	ldr	r1, [r1, #4]
   1cb0c:	subs	r0, r0, r2
   1cb10:	rscs	r1, r1, #0
   1cb14:	str	r0, [sp, #256]	; 0x100
   1cb18:	str	r1, [sp, #252]	; 0xfc
   1cb1c:	bcs	1cb44 <__assert_fail@plt+0xbaa4>
   1cb20:	b	1cb24 <__assert_fail@plt+0xba84>
   1cb24:	ldr	r0, [fp, #-8]
   1cb28:	ldr	r0, [r0]
   1cb2c:	ldr	r1, [fp, #-12]
   1cb30:	mul	r0, r0, r1
   1cb34:	mov	r1, #0
   1cb38:	str	r1, [fp, #-20]	; 0xffffffec
   1cb3c:	str	r0, [fp, #-24]	; 0xffffffe8
   1cb40:	b	1d684 <__assert_fail@plt+0xc5e4>
   1cb44:	ldr	r0, [fp, #-8]
   1cb48:	ldr	r0, [r0]
   1cb4c:	ldr	r1, [fp, #-12]
   1cb50:	mul	r0, r0, r1
   1cb54:	mov	r1, #0
   1cb58:	str	r1, [fp, #-20]	; 0xffffffec
   1cb5c:	str	r0, [fp, #-24]	; 0xffffffe8
   1cb60:	b	1d6a0 <__assert_fail@plt+0xc600>
   1cb64:	b	1d080 <__assert_fail@plt+0xbfe0>
   1cb68:	b	1cdfc <__assert_fail@plt+0xbd5c>
   1cb6c:	ldr	r0, [fp, #-12]
   1cb70:	cmp	r0, #0
   1cb74:	bge	1cce8 <__assert_fail@plt+0xbc48>
   1cb78:	mov	r0, #1
   1cb7c:	cmp	r0, #0
   1cb80:	bne	1cc3c <__assert_fail@plt+0xbb9c>
   1cb84:	b	1cb88 <__assert_fail@plt+0xbae8>
   1cb88:	b	1cb8c <__assert_fail@plt+0xbaec>
   1cb8c:	ldr	r0, [fp, #-8]
   1cb90:	ldr	r1, [r0]
   1cb94:	ldr	r0, [r0, #4]
   1cb98:	ldr	r2, [fp, #-12]
   1cb9c:	mvn	r3, #-2147483648	; 0x80000000
   1cba0:	sdiv	r2, r3, r2
   1cba4:	subs	r1, r1, r2
   1cba8:	sbcs	r0, r0, r2, asr #31
   1cbac:	str	r1, [sp, #248]	; 0xf8
   1cbb0:	str	r0, [sp, #244]	; 0xf4
   1cbb4:	bcc	1cdbc <__assert_fail@plt+0xbd1c>
   1cbb8:	b	1cddc <__assert_fail@plt+0xbd3c>
   1cbbc:	b	1cbc0 <__assert_fail@plt+0xbb20>
   1cbc0:	ldr	r0, [pc, #2816]	; 1d6c8 <__assert_fail@plt+0xc628>
   1cbc4:	ldr	r1, [fp, #-12]
   1cbc8:	cmp	r1, r0
   1cbcc:	blt	1cbe4 <__assert_fail@plt+0xbb44>
   1cbd0:	b	1cbf0 <__assert_fail@plt+0xbb50>
   1cbd4:	ldr	r0, [fp, #-12]
   1cbd8:	movw	r1, #0
   1cbdc:	cmp	r1, r0
   1cbe0:	bge	1cbf0 <__assert_fail@plt+0xbb50>
   1cbe4:	movw	r0, #0
   1cbe8:	str	r0, [sp, #240]	; 0xf0
   1cbec:	b	1cc08 <__assert_fail@plt+0xbb68>
   1cbf0:	ldr	r0, [pc, #2772]	; 1d6cc <__assert_fail@plt+0xc62c>
   1cbf4:	ldr	r1, [fp, #-12]
   1cbf8:	movw	r2, #0
   1cbfc:	sub	r1, r2, r1
   1cc00:	sdiv	r0, r0, r1
   1cc04:	str	r0, [sp, #240]	; 0xf0
   1cc08:	ldr	r0, [sp, #240]	; 0xf0
   1cc0c:	ldr	r1, [fp, #-8]
   1cc10:	ldr	r2, [r1]
   1cc14:	ldr	r1, [r1, #4]
   1cc18:	mvn	r1, r1
   1cc1c:	mvn	r2, r2
   1cc20:	subs	r2, r2, r0
   1cc24:	sbcs	r0, r1, r0, asr #31
   1cc28:	str	r2, [sp, #236]	; 0xec
   1cc2c:	str	r0, [sp, #232]	; 0xe8
   1cc30:	bcs	1cdbc <__assert_fail@plt+0xbd1c>
   1cc34:	b	1cddc <__assert_fail@plt+0xbd3c>
   1cc38:	andhi	r0, r0, r1
   1cc3c:	ldr	r0, [fp, #-12]
   1cc40:	cmn	r0, #1
   1cc44:	bne	1ccb8 <__assert_fail@plt+0xbc18>
   1cc48:	b	1cc6c <__assert_fail@plt+0xbbcc>
   1cc4c:	ldr	r0, [fp, #-8]
   1cc50:	ldr	r1, [r0]
   1cc54:	ldr	r0, [r0, #4]
   1cc58:	eor	r1, r1, #-2147483648	; 0x80000000
   1cc5c:	orr	r0, r1, r0
   1cc60:	cmp	r0, #0
   1cc64:	bne	1cdbc <__assert_fail@plt+0xbd1c>
   1cc68:	b	1cddc <__assert_fail@plt+0xbd3c>
   1cc6c:	ldr	r0, [fp, #-8]
   1cc70:	ldr	r1, [r0]
   1cc74:	ldr	r0, [r0, #4]
   1cc78:	orr	r0, r1, r0
   1cc7c:	cmp	r0, #0
   1cc80:	beq	1cddc <__assert_fail@plt+0xbd3c>
   1cc84:	b	1cc88 <__assert_fail@plt+0xbbe8>
   1cc88:	ldr	r0, [fp, #-8]
   1cc8c:	ldr	r1, [r0]
   1cc90:	ldr	r0, [r0, #4]
   1cc94:	subs	r1, r1, #1
   1cc98:	sbc	r0, r0, #0
   1cc9c:	mvn	r2, #-2147483648	; 0x80000000
   1cca0:	subs	r1, r2, r1
   1cca4:	rscs	r0, r0, #0
   1cca8:	str	r1, [sp, #228]	; 0xe4
   1ccac:	str	r0, [sp, #224]	; 0xe0
   1ccb0:	bcc	1cdbc <__assert_fail@plt+0xbd1c>
   1ccb4:	b	1cddc <__assert_fail@plt+0xbd3c>
   1ccb8:	ldr	r0, [fp, #-12]
   1ccbc:	mov	r1, #-2147483648	; 0x80000000
   1ccc0:	sdiv	r0, r1, r0
   1ccc4:	ldr	r1, [fp, #-8]
   1ccc8:	ldr	r2, [r1]
   1cccc:	ldr	r1, [r1, #4]
   1ccd0:	subs	r2, r0, r2
   1ccd4:	rscs	r0, r1, r0, asr #31
   1ccd8:	str	r2, [sp, #220]	; 0xdc
   1ccdc:	str	r0, [sp, #216]	; 0xd8
   1cce0:	bcc	1cdbc <__assert_fail@plt+0xbd1c>
   1cce4:	b	1cddc <__assert_fail@plt+0xbd3c>
   1cce8:	ldr	r0, [fp, #-12]
   1ccec:	cmp	r0, #0
   1ccf0:	bne	1ccf8 <__assert_fail@plt+0xbc58>
   1ccf4:	b	1cddc <__assert_fail@plt+0xbd3c>
   1ccf8:	mov	r0, #1
   1ccfc:	cmp	r0, #0
   1cd00:	bne	1cd8c <__assert_fail@plt+0xbcec>
   1cd04:	b	1cd08 <__assert_fail@plt+0xbc68>
   1cd08:	ldr	r0, [fp, #-8]
   1cd0c:	ldr	r1, [r0]
   1cd10:	ldr	r0, [r0, #4]
   1cd14:	and	r0, r1, r0
   1cd18:	cmn	r0, #1
   1cd1c:	bne	1cd58 <__assert_fail@plt+0xbcb8>
   1cd20:	b	1cd24 <__assert_fail@plt+0xbc84>
   1cd24:	b	1cd28 <__assert_fail@plt+0xbc88>
   1cd28:	ldr	r0, [fp, #-12]
   1cd2c:	add	r0, r0, #-2147483648	; 0x80000000
   1cd30:	movw	r1, #0
   1cd34:	cmp	r1, r0
   1cd38:	blt	1cdbc <__assert_fail@plt+0xbd1c>
   1cd3c:	b	1cddc <__assert_fail@plt+0xbd3c>
   1cd40:	ldr	r0, [pc, #2436]	; 1d6cc <__assert_fail@plt+0xc62c>
   1cd44:	ldr	r1, [fp, #-12]
   1cd48:	sub	r1, r1, #1
   1cd4c:	cmp	r0, r1
   1cd50:	blt	1cdbc <__assert_fail@plt+0xbd1c>
   1cd54:	b	1cddc <__assert_fail@plt+0xbd3c>
   1cd58:	ldr	r0, [fp, #-8]
   1cd5c:	ldr	r2, [r0]
   1cd60:	ldr	r3, [r0, #4]
   1cd64:	mov	r0, #-2147483648	; 0x80000000
   1cd68:	mvn	r1, #0
   1cd6c:	bl	1fccc <__assert_fail@plt+0xec2c>
   1cd70:	ldr	r2, [fp, #-12]
   1cd74:	subs	r0, r0, r2
   1cd78:	sbcs	r1, r1, r2, asr #31
   1cd7c:	str	r0, [sp, #212]	; 0xd4
   1cd80:	str	r1, [sp, #208]	; 0xd0
   1cd84:	bcc	1cdbc <__assert_fail@plt+0xbd1c>
   1cd88:	b	1cddc <__assert_fail@plt+0xbd3c>
   1cd8c:	ldr	r0, [fp, #-12]
   1cd90:	mvn	r1, #-2147483648	; 0x80000000
   1cd94:	sdiv	r0, r1, r0
   1cd98:	ldr	r1, [fp, #-8]
   1cd9c:	ldr	r2, [r1]
   1cda0:	ldr	r1, [r1, #4]
   1cda4:	subs	r2, r0, r2
   1cda8:	rscs	r0, r1, r0, asr #31
   1cdac:	str	r2, [sp, #204]	; 0xcc
   1cdb0:	str	r0, [sp, #200]	; 0xc8
   1cdb4:	bcs	1cddc <__assert_fail@plt+0xbd3c>
   1cdb8:	b	1cdbc <__assert_fail@plt+0xbd1c>
   1cdbc:	ldr	r0, [fp, #-8]
   1cdc0:	ldr	r0, [r0]
   1cdc4:	ldr	r1, [fp, #-12]
   1cdc8:	mul	r0, r0, r1
   1cdcc:	asr	r1, r0, #31
   1cdd0:	str	r0, [fp, #-24]	; 0xffffffe8
   1cdd4:	str	r1, [fp, #-20]	; 0xffffffec
   1cdd8:	b	1d684 <__assert_fail@plt+0xc5e4>
   1cddc:	ldr	r0, [fp, #-8]
   1cde0:	ldr	r0, [r0]
   1cde4:	ldr	r1, [fp, #-12]
   1cde8:	mul	r0, r0, r1
   1cdec:	asr	r1, r0, #31
   1cdf0:	str	r0, [fp, #-24]	; 0xffffffe8
   1cdf4:	str	r1, [fp, #-20]	; 0xffffffec
   1cdf8:	b	1d6a0 <__assert_fail@plt+0xc600>
   1cdfc:	ldr	r0, [fp, #-12]
   1ce00:	cmp	r0, #0
   1ce04:	bge	1cf5c <__assert_fail@plt+0xbebc>
   1ce08:	mov	r0, #1
   1ce0c:	cmp	r0, #0
   1ce10:	bne	1cec8 <__assert_fail@plt+0xbe28>
   1ce14:	b	1ce18 <__assert_fail@plt+0xbd78>
   1ce18:	b	1ce4c <__assert_fail@plt+0xbdac>
   1ce1c:	ldr	r0, [fp, #-8]
   1ce20:	ldr	r1, [r0]
   1ce24:	ldr	r0, [r0, #4]
   1ce28:	ldr	r2, [fp, #-12]
   1ce2c:	mvn	r3, #0
   1ce30:	udiv	r2, r3, r2
   1ce34:	subs	r1, r1, r2
   1ce38:	sbcs	r0, r0, #0
   1ce3c:	str	r1, [sp, #196]	; 0xc4
   1ce40:	str	r0, [sp, #192]	; 0xc0
   1ce44:	bcc	1d040 <__assert_fail@plt+0xbfa0>
   1ce48:	b	1d060 <__assert_fail@plt+0xbfc0>
   1ce4c:	b	1ce50 <__assert_fail@plt+0xbdb0>
   1ce50:	ldr	r0, [pc, #2160]	; 1d6c8 <__assert_fail@plt+0xc628>
   1ce54:	ldr	r1, [fp, #-12]
   1ce58:	cmp	r1, r0
   1ce5c:	blt	1ce74 <__assert_fail@plt+0xbdd4>
   1ce60:	b	1ce80 <__assert_fail@plt+0xbde0>
   1ce64:	ldr	r0, [fp, #-12]
   1ce68:	movw	r1, #0
   1ce6c:	cmp	r1, r0
   1ce70:	bge	1ce80 <__assert_fail@plt+0xbde0>
   1ce74:	movw	r0, #1
   1ce78:	str	r0, [sp, #188]	; 0xbc
   1ce7c:	b	1ce98 <__assert_fail@plt+0xbdf8>
   1ce80:	ldr	r0, [fp, #-12]
   1ce84:	movw	r1, #0
   1ce88:	sub	r0, r1, r0
   1ce8c:	mvn	r1, #0
   1ce90:	udiv	r0, r1, r0
   1ce94:	str	r0, [sp, #188]	; 0xbc
   1ce98:	ldr	r0, [sp, #188]	; 0xbc
   1ce9c:	ldr	r1, [fp, #-8]
   1cea0:	ldr	r2, [r1]
   1cea4:	ldr	r1, [r1, #4]
   1cea8:	mvn	r1, r1
   1ceac:	mvn	r2, r2
   1ceb0:	subs	r0, r2, r0
   1ceb4:	sbcs	r1, r1, #0
   1ceb8:	str	r0, [sp, #184]	; 0xb8
   1cebc:	str	r1, [sp, #180]	; 0xb4
   1cec0:	bcs	1d040 <__assert_fail@plt+0xbfa0>
   1cec4:	b	1d060 <__assert_fail@plt+0xbfc0>
   1cec8:	b	1cecc <__assert_fail@plt+0xbe2c>
   1cecc:	b	1cf2c <__assert_fail@plt+0xbe8c>
   1ced0:	b	1cf2c <__assert_fail@plt+0xbe8c>
   1ced4:	ldr	r0, [fp, #-12]
   1ced8:	cmn	r0, #1
   1cedc:	bne	1cf2c <__assert_fail@plt+0xbe8c>
   1cee0:	b	1cf00 <__assert_fail@plt+0xbe60>
   1cee4:	ldr	r0, [fp, #-8]
   1cee8:	ldr	r1, [r0]
   1ceec:	ldr	r0, [r0, #4]
   1cef0:	orr	r0, r1, r0
   1cef4:	cmp	r0, #0
   1cef8:	bne	1d040 <__assert_fail@plt+0xbfa0>
   1cefc:	b	1d060 <__assert_fail@plt+0xbfc0>
   1cf00:	ldr	r0, [fp, #-8]
   1cf04:	ldr	r1, [r0]
   1cf08:	ldr	r0, [r0, #4]
   1cf0c:	orr	r0, r1, r0
   1cf10:	cmp	r0, #0
   1cf14:	beq	1d060 <__assert_fail@plt+0xbfc0>
   1cf18:	b	1cf1c <__assert_fail@plt+0xbe7c>
   1cf1c:	mov	r0, #0
   1cf20:	cmp	r0, #0
   1cf24:	bne	1d040 <__assert_fail@plt+0xbfa0>
   1cf28:	b	1d060 <__assert_fail@plt+0xbfc0>
   1cf2c:	ldr	r0, [fp, #-12]
   1cf30:	mov	r1, #0
   1cf34:	sdiv	r0, r1, r0
   1cf38:	ldr	r1, [fp, #-8]
   1cf3c:	ldr	r2, [r1]
   1cf40:	ldr	r1, [r1, #4]
   1cf44:	subs	r2, r0, r2
   1cf48:	rscs	r0, r1, r0, asr #31
   1cf4c:	str	r2, [sp, #176]	; 0xb0
   1cf50:	str	r0, [sp, #172]	; 0xac
   1cf54:	bcc	1d040 <__assert_fail@plt+0xbfa0>
   1cf58:	b	1d060 <__assert_fail@plt+0xbfc0>
   1cf5c:	ldr	r0, [fp, #-12]
   1cf60:	cmp	r0, #0
   1cf64:	bne	1cf6c <__assert_fail@plt+0xbecc>
   1cf68:	b	1d060 <__assert_fail@plt+0xbfc0>
   1cf6c:	mov	r0, #1
   1cf70:	cmp	r0, #0
   1cf74:	bne	1d010 <__assert_fail@plt+0xbf70>
   1cf78:	b	1cf7c <__assert_fail@plt+0xbedc>
   1cf7c:	b	1cf84 <__assert_fail@plt+0xbee4>
   1cf80:	b	1cf88 <__assert_fail@plt+0xbee8>
   1cf84:	b	1cfd8 <__assert_fail@plt+0xbf38>
   1cf88:	ldr	r0, [fp, #-8]
   1cf8c:	ldr	r1, [r0]
   1cf90:	ldr	r0, [r0, #4]
   1cf94:	and	r0, r1, r0
   1cf98:	cmn	r0, #1
   1cf9c:	bne	1cfd8 <__assert_fail@plt+0xbf38>
   1cfa0:	b	1cfa4 <__assert_fail@plt+0xbf04>
   1cfa4:	b	1cfa8 <__assert_fail@plt+0xbf08>
   1cfa8:	ldr	r0, [fp, #-12]
   1cfac:	add	r0, r0, #0
   1cfb0:	movw	r1, #0
   1cfb4:	cmp	r1, r0
   1cfb8:	blt	1d040 <__assert_fail@plt+0xbfa0>
   1cfbc:	b	1d060 <__assert_fail@plt+0xbfc0>
   1cfc0:	ldr	r0, [fp, #-12]
   1cfc4:	sub	r0, r0, #1
   1cfc8:	mvn	r1, #0
   1cfcc:	cmp	r1, r0
   1cfd0:	blt	1d040 <__assert_fail@plt+0xbfa0>
   1cfd4:	b	1d060 <__assert_fail@plt+0xbfc0>
   1cfd8:	ldr	r0, [fp, #-8]
   1cfdc:	ldr	r2, [r0]
   1cfe0:	ldr	r3, [r0, #4]
   1cfe4:	mov	r0, #0
   1cfe8:	str	r0, [sp, #168]	; 0xa8
   1cfec:	ldr	r1, [sp, #168]	; 0xa8
   1cff0:	bl	1fccc <__assert_fail@plt+0xec2c>
   1cff4:	ldr	r2, [fp, #-12]
   1cff8:	subs	r0, r0, r2
   1cffc:	sbcs	r1, r1, r2, asr #31
   1d000:	str	r0, [sp, #164]	; 0xa4
   1d004:	str	r1, [sp, #160]	; 0xa0
   1d008:	bcc	1d040 <__assert_fail@plt+0xbfa0>
   1d00c:	b	1d060 <__assert_fail@plt+0xbfc0>
   1d010:	ldr	r0, [fp, #-12]
   1d014:	mvn	r1, #0
   1d018:	udiv	r0, r1, r0
   1d01c:	ldr	r1, [fp, #-8]
   1d020:	ldr	r2, [r1]
   1d024:	ldr	r1, [r1, #4]
   1d028:	subs	r0, r0, r2
   1d02c:	rscs	r1, r1, #0
   1d030:	str	r0, [sp, #156]	; 0x9c
   1d034:	str	r1, [sp, #152]	; 0x98
   1d038:	bcs	1d060 <__assert_fail@plt+0xbfc0>
   1d03c:	b	1d040 <__assert_fail@plt+0xbfa0>
   1d040:	ldr	r0, [fp, #-8]
   1d044:	ldr	r0, [r0]
   1d048:	ldr	r1, [fp, #-12]
   1d04c:	mul	r0, r0, r1
   1d050:	mov	r1, #0
   1d054:	str	r1, [fp, #-20]	; 0xffffffec
   1d058:	str	r0, [fp, #-24]	; 0xffffffe8
   1d05c:	b	1d684 <__assert_fail@plt+0xc5e4>
   1d060:	ldr	r0, [fp, #-8]
   1d064:	ldr	r0, [r0]
   1d068:	ldr	r1, [fp, #-12]
   1d06c:	mul	r0, r0, r1
   1d070:	mov	r1, #0
   1d074:	str	r1, [fp, #-20]	; 0xffffffec
   1d078:	str	r0, [fp, #-24]	; 0xffffffe8
   1d07c:	b	1d6a0 <__assert_fail@plt+0xc600>
   1d080:	b	1d39c <__assert_fail@plt+0xc2fc>
   1d084:	ldr	r0, [fp, #-12]
   1d088:	cmp	r0, #0
   1d08c:	bge	1d250 <__assert_fail@plt+0xc1b0>
   1d090:	mov	r0, #1
   1d094:	cmp	r0, #0
   1d098:	bne	1d198 <__assert_fail@plt+0xc0f8>
   1d09c:	b	1d0a0 <__assert_fail@plt+0xc000>
   1d0a0:	b	1d0a4 <__assert_fail@plt+0xc004>
   1d0a4:	ldr	r0, [fp, #-8]
   1d0a8:	ldr	r1, [r0]
   1d0ac:	ldr	r0, [r0, #4]
   1d0b0:	ldr	r2, [fp, #-12]
   1d0b4:	asr	r3, r2, #31
   1d0b8:	mvn	ip, #0
   1d0bc:	mvn	lr, #-2147483648	; 0x80000000
   1d0c0:	str	r0, [sp, #148]	; 0x94
   1d0c4:	mov	r0, ip
   1d0c8:	str	r1, [sp, #144]	; 0x90
   1d0cc:	mov	r1, lr
   1d0d0:	bl	1fbf8 <__assert_fail@plt+0xeb58>
   1d0d4:	ldr	r2, [sp, #144]	; 0x90
   1d0d8:	subs	r0, r2, r0
   1d0dc:	ldr	r2, [sp, #148]	; 0x94
   1d0e0:	sbcs	r1, r2, r1
   1d0e4:	str	r0, [sp, #140]	; 0x8c
   1d0e8:	str	r1, [sp, #136]	; 0x88
   1d0ec:	bcc	1d344 <__assert_fail@plt+0xc2a4>
   1d0f0:	b	1d370 <__assert_fail@plt+0xc2d0>
   1d0f4:	b	1d0f8 <__assert_fail@plt+0xc058>
   1d0f8:	ldr	r0, [pc, #1480]	; 1d6c8 <__assert_fail@plt+0xc628>
   1d0fc:	ldr	r1, [fp, #-12]
   1d100:	cmp	r1, r0
   1d104:	blt	1d11c <__assert_fail@plt+0xc07c>
   1d108:	b	1d130 <__assert_fail@plt+0xc090>
   1d10c:	ldr	r0, [fp, #-12]
   1d110:	movw	r1, #0
   1d114:	cmp	r1, r0
   1d118:	bge	1d130 <__assert_fail@plt+0xc090>
   1d11c:	mov	r0, #0
   1d120:	mvn	r1, #0
   1d124:	str	r1, [sp, #132]	; 0x84
   1d128:	str	r0, [sp, #128]	; 0x80
   1d12c:	b	1d164 <__assert_fail@plt+0xc0c4>
   1d130:	ldr	r0, [fp, #-12]
   1d134:	rsb	r0, r0, #0
   1d138:	asr	r3, r0, #31
   1d13c:	mvn	r1, #0
   1d140:	mvn	r2, #-2147483648	; 0x80000000
   1d144:	str	r0, [sp, #124]	; 0x7c
   1d148:	mov	r0, r1
   1d14c:	mov	r1, r2
   1d150:	ldr	r2, [sp, #124]	; 0x7c
   1d154:	bl	1fbf8 <__assert_fail@plt+0xeb58>
   1d158:	str	r0, [sp, #132]	; 0x84
   1d15c:	str	r1, [sp, #128]	; 0x80
   1d160:	b	1d164 <__assert_fail@plt+0xc0c4>
   1d164:	ldr	r0, [sp, #128]	; 0x80
   1d168:	ldr	r1, [sp, #132]	; 0x84
   1d16c:	ldr	r2, [fp, #-8]
   1d170:	ldr	r3, [r2]
   1d174:	ldr	r2, [r2, #4]
   1d178:	mvn	r2, r2
   1d17c:	mvn	r3, r3
   1d180:	subs	r1, r3, r1
   1d184:	sbcs	r0, r2, r0
   1d188:	str	r1, [sp, #120]	; 0x78
   1d18c:	str	r0, [sp, #116]	; 0x74
   1d190:	bcs	1d344 <__assert_fail@plt+0xc2a4>
   1d194:	b	1d370 <__assert_fail@plt+0xc2d0>
   1d198:	ldr	r0, [fp, #-12]
   1d19c:	cmn	r0, #1
   1d1a0:	bne	1d208 <__assert_fail@plt+0xc168>
   1d1a4:	b	1d1c8 <__assert_fail@plt+0xc128>
   1d1a8:	ldr	r0, [fp, #-8]
   1d1ac:	ldr	r1, [r0]
   1d1b0:	ldr	r0, [r0, #4]
   1d1b4:	eor	r0, r0, #-2147483648	; 0x80000000
   1d1b8:	orr	r0, r1, r0
   1d1bc:	cmp	r0, #0
   1d1c0:	bne	1d344 <__assert_fail@plt+0xc2a4>
   1d1c4:	b	1d370 <__assert_fail@plt+0xc2d0>
   1d1c8:	ldr	r0, [fp, #-8]
   1d1cc:	ldr	r1, [r0]
   1d1d0:	ldr	r0, [r0, #4]
   1d1d4:	orr	r0, r1, r0
   1d1d8:	cmp	r0, #0
   1d1dc:	beq	1d370 <__assert_fail@plt+0xc2d0>
   1d1e0:	b	1d1e4 <__assert_fail@plt+0xc144>
   1d1e4:	ldr	r0, [fp, #-8]
   1d1e8:	ldr	r1, [r0]
   1d1ec:	ldr	r0, [r0, #4]
   1d1f0:	subs	r1, r1, #1
   1d1f4:	sbc	r0, r0, #0
   1d1f8:	cmp	r0, #0
   1d1fc:	str	r1, [sp, #112]	; 0x70
   1d200:	blt	1d344 <__assert_fail@plt+0xc2a4>
   1d204:	b	1d370 <__assert_fail@plt+0xc2d0>
   1d208:	ldr	r0, [fp, #-12]
   1d20c:	asr	r3, r0, #31
   1d210:	mov	r1, #0
   1d214:	mov	r2, #-2147483648	; 0x80000000
   1d218:	str	r0, [sp, #108]	; 0x6c
   1d21c:	mov	r0, r1
   1d220:	mov	r1, r2
   1d224:	ldr	r2, [sp, #108]	; 0x6c
   1d228:	bl	1fbf8 <__assert_fail@plt+0xeb58>
   1d22c:	ldr	r2, [fp, #-8]
   1d230:	ldr	r3, [r2]
   1d234:	ldr	r2, [r2, #4]
   1d238:	subs	r0, r0, r3
   1d23c:	sbcs	r1, r1, r2
   1d240:	str	r0, [sp, #104]	; 0x68
   1d244:	str	r1, [sp, #100]	; 0x64
   1d248:	bcc	1d344 <__assert_fail@plt+0xc2a4>
   1d24c:	b	1d370 <__assert_fail@plt+0xc2d0>
   1d250:	ldr	r0, [fp, #-12]
   1d254:	cmp	r0, #0
   1d258:	bne	1d260 <__assert_fail@plt+0xc1c0>
   1d25c:	b	1d370 <__assert_fail@plt+0xc2d0>
   1d260:	mov	r0, #1
   1d264:	cmp	r0, #0
   1d268:	bne	1d2fc <__assert_fail@plt+0xc25c>
   1d26c:	b	1d270 <__assert_fail@plt+0xc1d0>
   1d270:	ldr	r0, [fp, #-8]
   1d274:	ldr	r1, [r0]
   1d278:	ldr	r0, [r0, #4]
   1d27c:	and	r0, r1, r0
   1d280:	cmn	r0, #1
   1d284:	bne	1d2c8 <__assert_fail@plt+0xc228>
   1d288:	b	1d28c <__assert_fail@plt+0xc1ec>
   1d28c:	b	1d290 <__assert_fail@plt+0xc1f0>
   1d290:	ldr	r0, [fp, #-12]
   1d294:	mov	r1, #-2147483648	; 0x80000000
   1d298:	add	r1, r1, r0, asr #31
   1d29c:	rsbs	r0, r0, #0
   1d2a0:	rscs	r1, r1, #0
   1d2a4:	str	r0, [sp, #96]	; 0x60
   1d2a8:	str	r1, [sp, #92]	; 0x5c
   1d2ac:	blt	1d344 <__assert_fail@plt+0xc2a4>
   1d2b0:	b	1d370 <__assert_fail@plt+0xc2d0>
   1d2b4:	mov	r0, #0
   1d2b8:	cmp	r0, #0
   1d2bc:	bne	1d344 <__assert_fail@plt+0xc2a4>
   1d2c0:	b	1d370 <__assert_fail@plt+0xc2d0>
   1d2c4:			; <UNDEFINED> instruction: 0xffff8000
   1d2c8:	ldr	r0, [fp, #-8]
   1d2cc:	ldr	r2, [r0]
   1d2d0:	ldr	r3, [r0, #4]
   1d2d4:	mov	r0, #0
   1d2d8:	mov	r1, #-2147483648	; 0x80000000
   1d2dc:	bl	1fccc <__assert_fail@plt+0xec2c>
   1d2e0:	ldr	r2, [fp, #-12]
   1d2e4:	subs	r0, r0, r2
   1d2e8:	sbcs	r1, r1, r2, asr #31
   1d2ec:	str	r0, [sp, #88]	; 0x58
   1d2f0:	str	r1, [sp, #84]	; 0x54
   1d2f4:	bcc	1d344 <__assert_fail@plt+0xc2a4>
   1d2f8:	b	1d370 <__assert_fail@plt+0xc2d0>
   1d2fc:	ldr	r0, [fp, #-12]
   1d300:	asr	r3, r0, #31
   1d304:	mvn	r1, #0
   1d308:	mvn	r2, #-2147483648	; 0x80000000
   1d30c:	str	r0, [sp, #80]	; 0x50
   1d310:	mov	r0, r1
   1d314:	mov	r1, r2
   1d318:	ldr	r2, [sp, #80]	; 0x50
   1d31c:	bl	1fbf8 <__assert_fail@plt+0xeb58>
   1d320:	ldr	r2, [fp, #-8]
   1d324:	ldr	r3, [r2]
   1d328:	ldr	r2, [r2, #4]
   1d32c:	subs	r0, r0, r3
   1d330:	sbcs	r1, r1, r2
   1d334:	str	r0, [sp, #76]	; 0x4c
   1d338:	str	r1, [sp, #72]	; 0x48
   1d33c:	bcs	1d370 <__assert_fail@plt+0xc2d0>
   1d340:	b	1d344 <__assert_fail@plt+0xc2a4>
   1d344:	ldr	r0, [fp, #-8]
   1d348:	ldr	r1, [r0]
   1d34c:	ldr	r0, [r0, #4]
   1d350:	ldr	r2, [fp, #-12]
   1d354:	asr	r3, r2, #31
   1d358:	umull	ip, lr, r1, r2
   1d35c:	mla	r1, r1, r3, lr
   1d360:	mla	r0, r0, r2, r1
   1d364:	str	ip, [fp, #-24]	; 0xffffffe8
   1d368:	str	r0, [fp, #-20]	; 0xffffffec
   1d36c:	b	1d684 <__assert_fail@plt+0xc5e4>
   1d370:	ldr	r0, [fp, #-8]
   1d374:	ldr	r1, [r0]
   1d378:	ldr	r0, [r0, #4]
   1d37c:	ldr	r2, [fp, #-12]
   1d380:	asr	r3, r2, #31
   1d384:	umull	ip, lr, r1, r2
   1d388:	mla	r1, r1, r3, lr
   1d38c:	mla	r0, r0, r2, r1
   1d390:	str	ip, [fp, #-24]	; 0xffffffe8
   1d394:	str	r0, [fp, #-20]	; 0xffffffec
   1d398:	b	1d6a0 <__assert_fail@plt+0xc600>
   1d39c:	ldr	r0, [fp, #-12]
   1d3a0:	cmp	r0, #0
   1d3a4:	bge	1d538 <__assert_fail@plt+0xc498>
   1d3a8:	mov	r0, #1
   1d3ac:	cmp	r0, #0
   1d3b0:	bne	1d4a4 <__assert_fail@plt+0xc404>
   1d3b4:	b	1d3b8 <__assert_fail@plt+0xc318>
   1d3b8:	b	1d408 <__assert_fail@plt+0xc368>
   1d3bc:	ldr	r0, [fp, #-8]
   1d3c0:	ldr	r1, [r0]
   1d3c4:	ldr	r0, [r0, #4]
   1d3c8:	ldr	r2, [fp, #-12]
   1d3cc:	asr	r3, r2, #31
   1d3d0:	mvn	ip, #0
   1d3d4:	str	r0, [sp, #68]	; 0x44
   1d3d8:	mov	r0, ip
   1d3dc:	str	r1, [sp, #64]	; 0x40
   1d3e0:	mov	r1, ip
   1d3e4:	bl	1fccc <__assert_fail@plt+0xec2c>
   1d3e8:	ldr	r2, [sp, #64]	; 0x40
   1d3ec:	subs	r0, r2, r0
   1d3f0:	ldr	r2, [sp, #68]	; 0x44
   1d3f4:	sbcs	r1, r2, r1
   1d3f8:	str	r0, [sp, #60]	; 0x3c
   1d3fc:	str	r1, [sp, #56]	; 0x38
   1d400:	bcc	1d62c <__assert_fail@plt+0xc58c>
   1d404:	b	1d658 <__assert_fail@plt+0xc5b8>
   1d408:	b	1d40c <__assert_fail@plt+0xc36c>
   1d40c:	ldr	r0, [pc, #692]	; 1d6c8 <__assert_fail@plt+0xc628>
   1d410:	ldr	r1, [fp, #-12]
   1d414:	cmp	r1, r0
   1d418:	blt	1d430 <__assert_fail@plt+0xc390>
   1d41c:	b	1d444 <__assert_fail@plt+0xc3a4>
   1d420:	ldr	r0, [fp, #-12]
   1d424:	movw	r1, #0
   1d428:	cmp	r1, r0
   1d42c:	bge	1d444 <__assert_fail@plt+0xc3a4>
   1d430:	mov	r0, #1
   1d434:	mvn	r1, #0
   1d438:	str	r1, [sp, #52]	; 0x34
   1d43c:	str	r0, [sp, #48]	; 0x30
   1d440:	b	1d470 <__assert_fail@plt+0xc3d0>
   1d444:	ldr	r0, [fp, #-12]
   1d448:	rsb	r0, r0, #0
   1d44c:	asr	r3, r0, #31
   1d450:	mvn	r1, #0
   1d454:	str	r0, [sp, #44]	; 0x2c
   1d458:	mov	r0, r1
   1d45c:	ldr	r2, [sp, #44]	; 0x2c
   1d460:	bl	1fccc <__assert_fail@plt+0xec2c>
   1d464:	str	r0, [sp, #52]	; 0x34
   1d468:	str	r1, [sp, #48]	; 0x30
   1d46c:	b	1d470 <__assert_fail@plt+0xc3d0>
   1d470:	ldr	r0, [sp, #48]	; 0x30
   1d474:	ldr	r1, [sp, #52]	; 0x34
   1d478:	ldr	r2, [fp, #-8]
   1d47c:	ldr	r3, [r2]
   1d480:	ldr	r2, [r2, #4]
   1d484:	mvn	r2, r2
   1d488:	mvn	r3, r3
   1d48c:	subs	r1, r3, r1
   1d490:	sbcs	r0, r2, r0
   1d494:	str	r1, [sp, #40]	; 0x28
   1d498:	str	r0, [sp, #36]	; 0x24
   1d49c:	bcs	1d62c <__assert_fail@plt+0xc58c>
   1d4a0:	b	1d658 <__assert_fail@plt+0xc5b8>
   1d4a4:	b	1d4a8 <__assert_fail@plt+0xc408>
   1d4a8:	b	1d508 <__assert_fail@plt+0xc468>
   1d4ac:	b	1d508 <__assert_fail@plt+0xc468>
   1d4b0:	ldr	r0, [fp, #-12]
   1d4b4:	cmn	r0, #1
   1d4b8:	bne	1d508 <__assert_fail@plt+0xc468>
   1d4bc:	b	1d4dc <__assert_fail@plt+0xc43c>
   1d4c0:	ldr	r0, [fp, #-8]
   1d4c4:	ldr	r1, [r0]
   1d4c8:	ldr	r0, [r0, #4]
   1d4cc:	orr	r0, r1, r0
   1d4d0:	cmp	r0, #0
   1d4d4:	bne	1d62c <__assert_fail@plt+0xc58c>
   1d4d8:	b	1d658 <__assert_fail@plt+0xc5b8>
   1d4dc:	ldr	r0, [fp, #-8]
   1d4e0:	ldr	r1, [r0]
   1d4e4:	ldr	r0, [r0, #4]
   1d4e8:	orr	r0, r1, r0
   1d4ec:	cmp	r0, #0
   1d4f0:	beq	1d658 <__assert_fail@plt+0xc5b8>
   1d4f4:	b	1d4f8 <__assert_fail@plt+0xc458>
   1d4f8:	mov	r0, #0
   1d4fc:	cmp	r0, #0
   1d500:	bne	1d62c <__assert_fail@plt+0xc58c>
   1d504:	b	1d658 <__assert_fail@plt+0xc5b8>
   1d508:	ldr	r0, [fp, #-12]
   1d50c:	mov	r1, #0
   1d510:	sdiv	r0, r1, r0
   1d514:	ldr	r1, [fp, #-8]
   1d518:	ldr	r2, [r1]
   1d51c:	ldr	r1, [r1, #4]
   1d520:	subs	r2, r0, r2
   1d524:	rscs	r0, r1, r0, asr #31
   1d528:	str	r2, [sp, #32]
   1d52c:	str	r0, [sp, #28]
   1d530:	bcc	1d62c <__assert_fail@plt+0xc58c>
   1d534:	b	1d658 <__assert_fail@plt+0xc5b8>
   1d538:	ldr	r0, [fp, #-12]
   1d53c:	cmp	r0, #0
   1d540:	bne	1d548 <__assert_fail@plt+0xc4a8>
   1d544:	b	1d658 <__assert_fail@plt+0xc5b8>
   1d548:	mov	r0, #1
   1d54c:	cmp	r0, #0
   1d550:	bne	1d5ec <__assert_fail@plt+0xc54c>
   1d554:	b	1d558 <__assert_fail@plt+0xc4b8>
   1d558:	b	1d560 <__assert_fail@plt+0xc4c0>
   1d55c:	b	1d564 <__assert_fail@plt+0xc4c4>
   1d560:	b	1d5b4 <__assert_fail@plt+0xc514>
   1d564:	ldr	r0, [fp, #-8]
   1d568:	ldr	r1, [r0]
   1d56c:	ldr	r0, [r0, #4]
   1d570:	and	r0, r1, r0
   1d574:	cmn	r0, #1
   1d578:	bne	1d5b4 <__assert_fail@plt+0xc514>
   1d57c:	b	1d580 <__assert_fail@plt+0xc4e0>
   1d580:	b	1d584 <__assert_fail@plt+0xc4e4>
   1d584:	ldr	r0, [fp, #-12]
   1d588:	add	r0, r0, #0
   1d58c:	movw	r1, #0
   1d590:	cmp	r1, r0
   1d594:	blt	1d62c <__assert_fail@plt+0xc58c>
   1d598:	b	1d658 <__assert_fail@plt+0xc5b8>
   1d59c:	ldr	r0, [fp, #-12]
   1d5a0:	sub	r0, r0, #1
   1d5a4:	mvn	r1, #0
   1d5a8:	cmp	r1, r0
   1d5ac:	blt	1d62c <__assert_fail@plt+0xc58c>
   1d5b0:	b	1d658 <__assert_fail@plt+0xc5b8>
   1d5b4:	ldr	r0, [fp, #-8]
   1d5b8:	ldr	r2, [r0]
   1d5bc:	ldr	r3, [r0, #4]
   1d5c0:	mov	r0, #0
   1d5c4:	str	r0, [sp, #24]
   1d5c8:	ldr	r1, [sp, #24]
   1d5cc:	bl	1fccc <__assert_fail@plt+0xec2c>
   1d5d0:	ldr	r2, [fp, #-12]
   1d5d4:	subs	r0, r0, r2
   1d5d8:	sbcs	r1, r1, r2, asr #31
   1d5dc:	str	r0, [sp, #20]
   1d5e0:	str	r1, [sp, #16]
   1d5e4:	bcc	1d62c <__assert_fail@plt+0xc58c>
   1d5e8:	b	1d658 <__assert_fail@plt+0xc5b8>
   1d5ec:	ldr	r0, [fp, #-12]
   1d5f0:	asr	r3, r0, #31
   1d5f4:	mvn	r1, #0
   1d5f8:	str	r0, [sp, #12]
   1d5fc:	mov	r0, r1
   1d600:	ldr	r2, [sp, #12]
   1d604:	bl	1fccc <__assert_fail@plt+0xec2c>
   1d608:	ldr	r2, [fp, #-8]
   1d60c:	ldr	r3, [r2]
   1d610:	ldr	r2, [r2, #4]
   1d614:	subs	r0, r0, r3
   1d618:	sbcs	r1, r1, r2
   1d61c:	str	r0, [sp, #8]
   1d620:	str	r1, [sp, #4]
   1d624:	bcs	1d658 <__assert_fail@plt+0xc5b8>
   1d628:	b	1d62c <__assert_fail@plt+0xc58c>
   1d62c:	ldr	r0, [fp, #-8]
   1d630:	ldr	r1, [r0]
   1d634:	ldr	r0, [r0, #4]
   1d638:	ldr	r2, [fp, #-12]
   1d63c:	asr	r3, r2, #31
   1d640:	umull	ip, lr, r1, r2
   1d644:	mla	r1, r1, r3, lr
   1d648:	mla	r0, r0, r2, r1
   1d64c:	str	ip, [fp, #-24]	; 0xffffffe8
   1d650:	str	r0, [fp, #-20]	; 0xffffffec
   1d654:	b	1d684 <__assert_fail@plt+0xc5e4>
   1d658:	ldr	r0, [fp, #-8]
   1d65c:	ldr	r1, [r0]
   1d660:	ldr	r0, [r0, #4]
   1d664:	ldr	r2, [fp, #-12]
   1d668:	asr	r3, r2, #31
   1d66c:	umull	ip, lr, r1, r2
   1d670:	mla	r1, r1, r3, lr
   1d674:	mla	r0, r0, r2, r1
   1d678:	str	ip, [fp, #-24]	; 0xffffffe8
   1d67c:	str	r0, [fp, #-20]	; 0xffffffec
   1d680:	b	1d6a0 <__assert_fail@plt+0xc600>
   1d684:	ldr	r0, [fp, #-8]
   1d688:	mvn	r1, #0
   1d68c:	str	r1, [r0, #4]
   1d690:	str	r1, [r0]
   1d694:	movw	r0, #1
   1d698:	str	r0, [fp, #-4]
   1d69c:	b	1d6bc <__assert_fail@plt+0xc61c>
   1d6a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d6a4:	ldr	r1, [fp, #-20]	; 0xffffffec
   1d6a8:	ldr	r2, [fp, #-8]
   1d6ac:	str	r1, [r2, #4]
   1d6b0:	str	r0, [r2]
   1d6b4:	movw	r0, #0
   1d6b8:	str	r0, [fp, #-4]
   1d6bc:	ldr	r0, [fp, #-4]
   1d6c0:	mov	sp, fp
   1d6c4:	pop	{fp, pc}
   1d6c8:	andhi	r0, r0, r1
   1d6cc:	svcvc	0x00ffffff
   1d6d0:	push	{fp, lr}
   1d6d4:	mov	fp, sp
   1d6d8:	sub	sp, sp, #16
   1d6dc:	str	r0, [fp, #-4]
   1d6e0:	str	r1, [sp, #8]
   1d6e4:	str	r2, [sp, #4]
   1d6e8:	movw	r0, #0
   1d6ec:	str	r0, [sp]
   1d6f0:	ldr	r0, [sp, #4]
   1d6f4:	mvn	r1, #0
   1d6f8:	add	r1, r0, r1
   1d6fc:	str	r1, [sp, #4]
   1d700:	cmp	r0, #0
   1d704:	beq	1d724 <__assert_fail@plt+0xc684>
   1d708:	ldr	r0, [fp, #-4]
   1d70c:	ldr	r1, [sp, #8]
   1d710:	bl	1bbc8 <__assert_fail@plt+0xab28>
   1d714:	ldr	r1, [sp]
   1d718:	orr	r0, r1, r0
   1d71c:	str	r0, [sp]
   1d720:	b	1d6f0 <__assert_fail@plt+0xc650>
   1d724:	ldr	r0, [sp]
   1d728:	mov	sp, fp
   1d72c:	pop	{fp, pc}
   1d730:	push	{fp, lr}
   1d734:	mov	fp, sp
   1d738:	sub	sp, sp, #16
   1d73c:	str	r0, [sp, #8]
   1d740:	str	r1, [sp, #4]
   1d744:	ldr	r0, [sp, #8]
   1d748:	cmp	r0, #0
   1d74c:	beq	1d75c <__assert_fail@plt+0xc6bc>
   1d750:	ldr	r0, [sp, #4]
   1d754:	cmp	r0, #0
   1d758:	bne	1d768 <__assert_fail@plt+0xc6c8>
   1d75c:	movw	r0, #1
   1d760:	str	r0, [sp, #4]
   1d764:	str	r0, [sp, #8]
   1d768:	ldr	r0, [sp, #4]
   1d76c:	cmp	r0, #0
   1d770:	beq	1d7a4 <__assert_fail@plt+0xc704>
   1d774:	ldr	r0, [pc, #76]	; 1d7c8 <__assert_fail@plt+0xc728>
   1d778:	ldr	r1, [sp, #4]
   1d77c:	udiv	r0, r0, r1
   1d780:	ldr	r1, [sp, #8]
   1d784:	cmp	r0, r1
   1d788:	bcs	1d7a4 <__assert_fail@plt+0xc704>
   1d78c:	bl	10fd4 <__errno_location@plt>
   1d790:	movw	lr, #12
   1d794:	str	lr, [r0]
   1d798:	movw	r0, #0
   1d79c:	str	r0, [fp, #-4]
   1d7a0:	b	1d7bc <__assert_fail@plt+0xc71c>
   1d7a4:	ldr	r0, [sp, #8]
   1d7a8:	ldr	r1, [sp, #4]
   1d7ac:	bl	10e24 <calloc@plt>
   1d7b0:	str	r0, [sp]
   1d7b4:	ldr	r0, [sp]
   1d7b8:	str	r0, [fp, #-4]
   1d7bc:	ldr	r0, [fp, #-4]
   1d7c0:	mov	sp, fp
   1d7c4:	pop	{fp, pc}
   1d7c8:	svcvc	0x00ffffff
   1d7cc:	push	{fp, lr}
   1d7d0:	mov	fp, sp
   1d7d4:	sub	sp, sp, #16
   1d7d8:	str	r0, [sp, #8]
   1d7dc:	ldr	r0, [sp, #8]
   1d7e0:	cmp	r0, #0
   1d7e4:	bne	1d7f0 <__assert_fail@plt+0xc750>
   1d7e8:	movw	r0, #1
   1d7ec:	str	r0, [sp, #8]
   1d7f0:	ldr	r0, [pc, #64]	; 1d838 <__assert_fail@plt+0xc798>
   1d7f4:	ldr	r1, [sp, #8]
   1d7f8:	cmp	r0, r1
   1d7fc:	bcs	1d818 <__assert_fail@plt+0xc778>
   1d800:	bl	10fd4 <__errno_location@plt>
   1d804:	movw	lr, #12
   1d808:	str	lr, [r0]
   1d80c:	movw	r0, #0
   1d810:	str	r0, [fp, #-4]
   1d814:	b	1d82c <__assert_fail@plt+0xc78c>
   1d818:	ldr	r0, [sp, #8]
   1d81c:	bl	10f50 <malloc@plt>
   1d820:	str	r0, [sp, #4]
   1d824:	ldr	r0, [sp, #4]
   1d828:	str	r0, [fp, #-4]
   1d82c:	ldr	r0, [fp, #-4]
   1d830:	mov	sp, fp
   1d834:	pop	{fp, pc}
   1d838:	svcvc	0x00ffffff
   1d83c:	push	{fp, lr}
   1d840:	mov	fp, sp
   1d844:	sub	sp, sp, #16
   1d848:	str	r0, [sp, #8]
   1d84c:	str	r1, [sp, #4]
   1d850:	ldr	r0, [sp, #8]
   1d854:	movw	r1, #0
   1d858:	cmp	r0, r1
   1d85c:	bne	1d870 <__assert_fail@plt+0xc7d0>
   1d860:	ldr	r0, [sp, #4]
   1d864:	bl	1d7cc <__assert_fail@plt+0xc72c>
   1d868:	str	r0, [fp, #-4]
   1d86c:	b	1d8d0 <__assert_fail@plt+0xc830>
   1d870:	ldr	r0, [sp, #4]
   1d874:	cmp	r0, #0
   1d878:	bne	1d890 <__assert_fail@plt+0xc7f0>
   1d87c:	ldr	r0, [sp, #8]
   1d880:	bl	15534 <__assert_fail@plt+0x4494>
   1d884:	movw	r0, #0
   1d888:	str	r0, [fp, #-4]
   1d88c:	b	1d8d0 <__assert_fail@plt+0xc830>
   1d890:	ldr	r0, [pc, #68]	; 1d8dc <__assert_fail@plt+0xc83c>
   1d894:	ldr	r1, [sp, #4]
   1d898:	cmp	r0, r1
   1d89c:	bcs	1d8b8 <__assert_fail@plt+0xc818>
   1d8a0:	bl	10fd4 <__errno_location@plt>
   1d8a4:	movw	lr, #12
   1d8a8:	str	lr, [r0]
   1d8ac:	movw	r0, #0
   1d8b0:	str	r0, [fp, #-4]
   1d8b4:	b	1d8d0 <__assert_fail@plt+0xc830>
   1d8b8:	ldr	r0, [sp, #8]
   1d8bc:	ldr	r1, [sp, #4]
   1d8c0:	bl	10ee4 <realloc@plt>
   1d8c4:	str	r0, [sp]
   1d8c8:	ldr	r0, [sp]
   1d8cc:	str	r0, [fp, #-4]
   1d8d0:	ldr	r0, [fp, #-4]
   1d8d4:	mov	sp, fp
   1d8d8:	pop	{fp, pc}
   1d8dc:	svcvc	0x00ffffff
   1d8e0:	sub	sp, sp, #8
   1d8e4:	str	r0, [sp, #4]
   1d8e8:	str	r1, [sp]
   1d8ec:	movw	r0, #0
   1d8f0:	add	sp, sp, #8
   1d8f4:	bx	lr
   1d8f8:	push	{fp, lr}
   1d8fc:	mov	fp, sp
   1d900:	sub	sp, sp, #8
   1d904:	str	r0, [sp, #4]
   1d908:	str	r1, [sp]
   1d90c:	ldr	r0, [sp, #4]
   1d910:	ldr	r1, [sp]
   1d914:	bl	1d8e0 <__assert_fail@plt+0xc840>
   1d918:	mov	sp, fp
   1d91c:	pop	{fp, pc}
   1d920:	push	{fp, lr}
   1d924:	mov	fp, sp
   1d928:	sub	sp, sp, #24
   1d92c:	str	r0, [fp, #-8]
   1d930:	str	r1, [sp, #12]
   1d934:	ldr	r0, [fp, #-8]
   1d938:	str	r0, [sp, #8]
   1d93c:	ldr	r0, [sp, #12]
   1d940:	str	r0, [sp, #4]
   1d944:	ldr	r0, [sp, #8]
   1d948:	ldr	r1, [sp, #4]
   1d94c:	cmp	r0, r1
   1d950:	bne	1d960 <__assert_fail@plt+0xc8c0>
   1d954:	movw	r0, #0
   1d958:	str	r0, [fp, #-4]
   1d95c:	b	1d9cc <__assert_fail@plt+0xc92c>
   1d960:	b	1d964 <__assert_fail@plt+0xc8c4>
   1d964:	ldr	r0, [sp, #8]
   1d968:	ldrb	r0, [r0]
   1d96c:	bl	1f978 <__assert_fail@plt+0xe8d8>
   1d970:	strb	r0, [sp, #3]
   1d974:	ldr	r0, [sp, #4]
   1d978:	ldrb	r0, [r0]
   1d97c:	bl	1f978 <__assert_fail@plt+0xe8d8>
   1d980:	strb	r0, [sp, #2]
   1d984:	ldrb	r0, [sp, #3]
   1d988:	cmp	r0, #0
   1d98c:	bne	1d994 <__assert_fail@plt+0xc8f4>
   1d990:	b	1d9bc <__assert_fail@plt+0xc91c>
   1d994:	ldr	r0, [sp, #8]
   1d998:	add	r0, r0, #1
   1d99c:	str	r0, [sp, #8]
   1d9a0:	ldr	r0, [sp, #4]
   1d9a4:	add	r0, r0, #1
   1d9a8:	str	r0, [sp, #4]
   1d9ac:	ldrb	r0, [sp, #3]
   1d9b0:	ldrb	r1, [sp, #2]
   1d9b4:	cmp	r0, r1
   1d9b8:	beq	1d964 <__assert_fail@plt+0xc8c4>
   1d9bc:	ldrb	r0, [sp, #3]
   1d9c0:	ldrb	r1, [sp, #2]
   1d9c4:	sub	r0, r0, r1
   1d9c8:	str	r0, [fp, #-4]
   1d9cc:	ldr	r0, [fp, #-4]
   1d9d0:	mov	sp, fp
   1d9d4:	pop	{fp, pc}
   1d9d8:	push	{fp, lr}
   1d9dc:	mov	fp, sp
   1d9e0:	sub	sp, sp, #16
   1d9e4:	str	r0, [sp, #8]
   1d9e8:	ldr	r0, [sp, #8]
   1d9ec:	bl	10f20 <__fpending@plt>
   1d9f0:	cmp	r0, #0
   1d9f4:	movw	r0, #0
   1d9f8:	movne	r0, #1
   1d9fc:	and	r0, r0, #1
   1da00:	strb	r0, [sp, #7]
   1da04:	ldr	r0, [sp, #8]
   1da08:	bl	10f2c <ferror_unlocked@plt>
   1da0c:	cmp	r0, #0
   1da10:	movw	r0, #0
   1da14:	movne	r0, #1
   1da18:	and	r0, r0, #1
   1da1c:	strb	r0, [sp, #6]
   1da20:	ldr	r0, [sp, #8]
   1da24:	bl	1daa8 <__assert_fail@plt+0xca08>
   1da28:	cmp	r0, #0
   1da2c:	movw	r0, #0
   1da30:	movne	r0, #1
   1da34:	and	r0, r0, #1
   1da38:	strb	r0, [sp, #5]
   1da3c:	ldrb	r0, [sp, #6]
   1da40:	tst	r0, #1
   1da44:	bne	1da70 <__assert_fail@plt+0xc9d0>
   1da48:	ldrb	r0, [sp, #5]
   1da4c:	tst	r0, #1
   1da50:	beq	1da94 <__assert_fail@plt+0xc9f4>
   1da54:	ldrb	r0, [sp, #7]
   1da58:	tst	r0, #1
   1da5c:	bne	1da70 <__assert_fail@plt+0xc9d0>
   1da60:	bl	10fd4 <__errno_location@plt>
   1da64:	ldr	r0, [r0]
   1da68:	cmp	r0, #9
   1da6c:	beq	1da94 <__assert_fail@plt+0xc9f4>
   1da70:	ldrb	r0, [sp, #5]
   1da74:	tst	r0, #1
   1da78:	bne	1da88 <__assert_fail@plt+0xc9e8>
   1da7c:	bl	10fd4 <__errno_location@plt>
   1da80:	movw	lr, #0
   1da84:	str	lr, [r0]
   1da88:	mvn	r0, #0
   1da8c:	str	r0, [fp, #-4]
   1da90:	b	1da9c <__assert_fail@plt+0xc9fc>
   1da94:	movw	r0, #0
   1da98:	str	r0, [fp, #-4]
   1da9c:	ldr	r0, [fp, #-4]
   1daa0:	mov	sp, fp
   1daa4:	pop	{fp, pc}
   1daa8:	push	{fp, lr}
   1daac:	mov	fp, sp
   1dab0:	sub	sp, sp, #32
   1dab4:	str	r0, [fp, #-8]
   1dab8:	movw	r0, #0
   1dabc:	str	r0, [fp, #-12]
   1dac0:	str	r0, [sp, #12]
   1dac4:	ldr	r0, [fp, #-8]
   1dac8:	bl	10ff8 <fileno@plt>
   1dacc:	str	r0, [sp, #16]
   1dad0:	ldr	r0, [sp, #16]
   1dad4:	cmp	r0, #0
   1dad8:	bge	1daec <__assert_fail@plt+0xca4c>
   1dadc:	ldr	r0, [fp, #-8]
   1dae0:	bl	11010 <fclose@plt>
   1dae4:	str	r0, [fp, #-4]
   1dae8:	b	1db88 <__assert_fail@plt+0xcae8>
   1daec:	ldr	r0, [fp, #-8]
   1daf0:	bl	10f68 <__freading@plt>
   1daf4:	cmp	r0, #0
   1daf8:	beq	1db30 <__assert_fail@plt+0xca90>
   1dafc:	ldr	r0, [fp, #-8]
   1db00:	bl	10ff8 <fileno@plt>
   1db04:	mov	lr, sp
   1db08:	mov	r1, #1
   1db0c:	str	r1, [lr]
   1db10:	mov	r1, #0
   1db14:	mov	r2, r1
   1db18:	mov	r3, r1
   1db1c:	bl	10f08 <lseek64@plt>
   1db20:	and	r0, r0, r1
   1db24:	cmn	r0, #1
   1db28:	beq	1db4c <__assert_fail@plt+0xcaac>
   1db2c:	b	1db30 <__assert_fail@plt+0xca90>
   1db30:	ldr	r0, [fp, #-8]
   1db34:	bl	1db94 <__assert_fail@plt+0xcaf4>
   1db38:	cmp	r0, #0
   1db3c:	beq	1db4c <__assert_fail@plt+0xcaac>
   1db40:	bl	10fd4 <__errno_location@plt>
   1db44:	ldr	r0, [r0]
   1db48:	str	r0, [fp, #-12]
   1db4c:	ldr	r0, [fp, #-8]
   1db50:	bl	11010 <fclose@plt>
   1db54:	str	r0, [sp, #12]
   1db58:	ldr	r0, [fp, #-12]
   1db5c:	cmp	r0, #0
   1db60:	beq	1db80 <__assert_fail@plt+0xcae0>
   1db64:	ldr	r0, [fp, #-12]
   1db68:	str	r0, [sp, #8]
   1db6c:	bl	10fd4 <__errno_location@plt>
   1db70:	ldr	lr, [sp, #8]
   1db74:	str	lr, [r0]
   1db78:	mvn	r0, #0
   1db7c:	str	r0, [sp, #12]
   1db80:	ldr	r0, [sp, #12]
   1db84:	str	r0, [fp, #-4]
   1db88:	ldr	r0, [fp, #-4]
   1db8c:	mov	sp, fp
   1db90:	pop	{fp, pc}
   1db94:	push	{fp, lr}
   1db98:	mov	fp, sp
   1db9c:	sub	sp, sp, #8
   1dba0:	str	r0, [sp]
   1dba4:	ldr	r0, [sp]
   1dba8:	movw	r1, #0
   1dbac:	cmp	r0, r1
   1dbb0:	beq	1dbc4 <__assert_fail@plt+0xcb24>
   1dbb4:	ldr	r0, [sp]
   1dbb8:	bl	10f68 <__freading@plt>
   1dbbc:	cmp	r0, #0
   1dbc0:	bne	1dbd4 <__assert_fail@plt+0xcb34>
   1dbc4:	ldr	r0, [sp]
   1dbc8:	bl	10e78 <fflush@plt>
   1dbcc:	str	r0, [sp, #4]
   1dbd0:	b	1dbe8 <__assert_fail@plt+0xcb48>
   1dbd4:	ldr	r0, [sp]
   1dbd8:	bl	1dbf4 <__assert_fail@plt+0xcb54>
   1dbdc:	ldr	r0, [sp]
   1dbe0:	bl	10e78 <fflush@plt>
   1dbe4:	str	r0, [sp, #4]
   1dbe8:	ldr	r0, [sp, #4]
   1dbec:	mov	sp, fp
   1dbf0:	pop	{fp, pc}
   1dbf4:	push	{fp, lr}
   1dbf8:	mov	fp, sp
   1dbfc:	sub	sp, sp, #16
   1dc00:	str	r0, [fp, #-4]
   1dc04:	ldr	r0, [fp, #-4]
   1dc08:	ldr	r0, [r0]
   1dc0c:	and	r0, r0, #256	; 0x100
   1dc10:	cmp	r0, #0
   1dc14:	beq	1dc3c <__assert_fail@plt+0xcb9c>
   1dc18:	ldr	r0, [fp, #-4]
   1dc1c:	mov	r1, sp
   1dc20:	mov	r2, #1
   1dc24:	str	r2, [r1]
   1dc28:	mov	r1, #0
   1dc2c:	mov	r2, r1
   1dc30:	mov	r3, r1
   1dc34:	bl	1dc44 <__assert_fail@plt+0xcba4>
   1dc38:	str	r0, [sp, #8]
   1dc3c:	mov	sp, fp
   1dc40:	pop	{fp, pc}
   1dc44:	push	{fp, lr}
   1dc48:	mov	fp, sp
   1dc4c:	sub	sp, sp, #32
   1dc50:	ldr	r1, [fp, #8]
   1dc54:	str	r0, [fp, #-8]
   1dc58:	str	r3, [sp, #20]
   1dc5c:	str	r2, [sp, #16]
   1dc60:	ldr	r0, [fp, #-8]
   1dc64:	ldr	r0, [r0, #8]
   1dc68:	ldr	r2, [fp, #-8]
   1dc6c:	ldr	r2, [r2, #4]
   1dc70:	cmp	r0, r2
   1dc74:	str	r1, [sp, #4]
   1dc78:	bne	1dd24 <__assert_fail@plt+0xcc84>
   1dc7c:	ldr	r0, [fp, #-8]
   1dc80:	ldr	r0, [r0, #20]
   1dc84:	ldr	r1, [fp, #-8]
   1dc88:	ldr	r1, [r1, #16]
   1dc8c:	cmp	r0, r1
   1dc90:	bne	1dd24 <__assert_fail@plt+0xcc84>
   1dc94:	ldr	r0, [fp, #-8]
   1dc98:	ldr	r0, [r0, #36]	; 0x24
   1dc9c:	movw	r1, #0
   1dca0:	cmp	r0, r1
   1dca4:	bne	1dd24 <__assert_fail@plt+0xcc84>
   1dca8:	ldr	r0, [fp, #-8]
   1dcac:	bl	10ff8 <fileno@plt>
   1dcb0:	ldr	r2, [sp, #16]
   1dcb4:	ldr	r3, [sp, #20]
   1dcb8:	ldr	lr, [fp, #8]
   1dcbc:	mov	r1, sp
   1dcc0:	str	lr, [r1]
   1dcc4:	bl	10f08 <lseek64@plt>
   1dcc8:	str	r1, [sp, #12]
   1dccc:	str	r0, [sp, #8]
   1dcd0:	ldr	r0, [sp, #8]
   1dcd4:	ldr	r1, [sp, #12]
   1dcd8:	and	r0, r0, r1
   1dcdc:	cmn	r0, #1
   1dce0:	bne	1dcf4 <__assert_fail@plt+0xcc54>
   1dce4:	b	1dce8 <__assert_fail@plt+0xcc48>
   1dce8:	mvn	r0, #0
   1dcec:	str	r0, [fp, #-4]
   1dcf0:	b	1dd44 <__assert_fail@plt+0xcca4>
   1dcf4:	ldr	r0, [fp, #-8]
   1dcf8:	ldr	r1, [r0]
   1dcfc:	bic	r1, r1, #16
   1dd00:	str	r1, [r0]
   1dd04:	ldr	r0, [sp, #8]
   1dd08:	ldr	r1, [sp, #12]
   1dd0c:	ldr	r2, [fp, #-8]
   1dd10:	str	r1, [r2, #84]	; 0x54
   1dd14:	str	r0, [r2, #80]	; 0x50
   1dd18:	movw	r0, #0
   1dd1c:	str	r0, [fp, #-4]
   1dd20:	b	1dd44 <__assert_fail@plt+0xcca4>
   1dd24:	ldr	r0, [fp, #-8]
   1dd28:	ldr	r2, [sp, #16]
   1dd2c:	ldr	r3, [sp, #20]
   1dd30:	ldr	r1, [fp, #8]
   1dd34:	mov	ip, sp
   1dd38:	str	r1, [ip]
   1dd3c:	bl	1101c <fseeko64@plt>
   1dd40:	str	r0, [fp, #-4]
   1dd44:	ldr	r0, [fp, #-4]
   1dd48:	mov	sp, fp
   1dd4c:	pop	{fp, pc}
   1dd50:	push	{fp, lr}
   1dd54:	mov	fp, sp
   1dd58:	bl	10fd4 <__errno_location@plt>
   1dd5c:	movw	lr, #12
   1dd60:	str	lr, [r0]
   1dd64:	movw	r0, #0
   1dd68:	pop	{fp, pc}
   1dd6c:	push	{fp, lr}
   1dd70:	mov	fp, sp
   1dd74:	sub	sp, sp, #8
   1dd78:	str	r0, [sp, #4]
   1dd7c:	ldr	r0, [sp, #4]
   1dd80:	cmn	r0, #1
   1dd84:	bhi	1dd98 <__assert_fail@plt+0xccf8>
   1dd88:	ldr	r0, [sp, #4]
   1dd8c:	bl	1d7cc <__assert_fail@plt+0xc72c>
   1dd90:	str	r0, [sp]
   1dd94:	b	1dda0 <__assert_fail@plt+0xcd00>
   1dd98:	bl	1dd50 <__assert_fail@plt+0xccb0>
   1dd9c:	str	r0, [sp]
   1dda0:	ldr	r0, [sp]
   1dda4:	mov	sp, fp
   1dda8:	pop	{fp, pc}
   1ddac:	push	{fp, lr}
   1ddb0:	mov	fp, sp
   1ddb4:	sub	sp, sp, #16
   1ddb8:	str	r0, [fp, #-4]
   1ddbc:	str	r1, [sp, #8]
   1ddc0:	ldr	r0, [sp, #8]
   1ddc4:	cmn	r0, #1
   1ddc8:	bhi	1de00 <__assert_fail@plt+0xcd60>
   1ddcc:	ldr	r0, [fp, #-4]
   1ddd0:	ldr	r1, [sp, #8]
   1ddd4:	ldr	r2, [sp, #8]
   1ddd8:	cmp	r2, #0
   1dddc:	movw	r2, #0
   1dde0:	movne	r2, #1
   1dde4:	mvn	r3, #0
   1dde8:	eor	r2, r2, r3
   1ddec:	and	r2, r2, #1
   1ddf0:	orr	r1, r1, r2
   1ddf4:	bl	1d83c <__assert_fail@plt+0xc79c>
   1ddf8:	str	r0, [sp, #4]
   1ddfc:	b	1de08 <__assert_fail@plt+0xcd68>
   1de00:	bl	1dd50 <__assert_fail@plt+0xccb0>
   1de04:	str	r0, [sp, #4]
   1de08:	ldr	r0, [sp, #4]
   1de0c:	mov	sp, fp
   1de10:	pop	{fp, pc}
   1de14:	push	{fp, lr}
   1de18:	mov	fp, sp
   1de1c:	sub	sp, sp, #16
   1de20:	str	r0, [sp, #8]
   1de24:	str	r1, [sp, #4]
   1de28:	ldr	r0, [sp, #8]
   1de2c:	mvn	r1, #0
   1de30:	cmp	r1, r0
   1de34:	bcs	1de58 <__assert_fail@plt+0xcdb8>
   1de38:	ldr	r0, [sp, #4]
   1de3c:	cmp	r0, #0
   1de40:	beq	1de50 <__assert_fail@plt+0xcdb0>
   1de44:	bl	1dd50 <__assert_fail@plt+0xccb0>
   1de48:	str	r0, [fp, #-4]
   1de4c:	b	1de98 <__assert_fail@plt+0xcdf8>
   1de50:	movw	r0, #0
   1de54:	str	r0, [sp, #8]
   1de58:	ldr	r0, [sp, #4]
   1de5c:	mvn	r1, #0
   1de60:	cmp	r1, r0
   1de64:	bcs	1de88 <__assert_fail@plt+0xcde8>
   1de68:	ldr	r0, [sp, #8]
   1de6c:	cmp	r0, #0
   1de70:	beq	1de80 <__assert_fail@plt+0xcde0>
   1de74:	bl	1dd50 <__assert_fail@plt+0xccb0>
   1de78:	str	r0, [fp, #-4]
   1de7c:	b	1de98 <__assert_fail@plt+0xcdf8>
   1de80:	movw	r0, #0
   1de84:	str	r0, [sp, #4]
   1de88:	ldr	r0, [sp, #8]
   1de8c:	ldr	r1, [sp, #4]
   1de90:	bl	1d730 <__assert_fail@plt+0xc690>
   1de94:	str	r0, [fp, #-4]
   1de98:	ldr	r0, [fp, #-4]
   1de9c:	mov	sp, fp
   1dea0:	pop	{fp, pc}
   1dea4:	push	{fp, lr}
   1dea8:	mov	fp, sp
   1deac:	sub	sp, sp, #16
   1deb0:	str	r0, [fp, #-4]
   1deb4:	str	r1, [sp, #8]
   1deb8:	str	r2, [sp, #4]
   1debc:	ldr	r0, [sp, #8]
   1dec0:	cmp	r0, #0
   1dec4:	beq	1ded4 <__assert_fail@plt+0xce34>
   1dec8:	ldr	r0, [sp, #4]
   1decc:	cmp	r0, #0
   1ded0:	bne	1dee0 <__assert_fail@plt+0xce40>
   1ded4:	movw	r0, #1
   1ded8:	str	r0, [sp, #4]
   1dedc:	str	r0, [sp, #8]
   1dee0:	ldr	r0, [sp, #8]
   1dee4:	cmn	r0, #1
   1dee8:	bhi	1df10 <__assert_fail@plt+0xce70>
   1deec:	ldr	r0, [sp, #4]
   1def0:	cmn	r0, #1
   1def4:	bhi	1df10 <__assert_fail@plt+0xce70>
   1def8:	ldr	r0, [fp, #-4]
   1defc:	ldr	r1, [sp, #8]
   1df00:	ldr	r2, [sp, #4]
   1df04:	bl	1e030 <__assert_fail@plt+0xcf90>
   1df08:	str	r0, [sp]
   1df0c:	b	1df18 <__assert_fail@plt+0xce78>
   1df10:	bl	1dd50 <__assert_fail@plt+0xccb0>
   1df14:	str	r0, [sp]
   1df18:	ldr	r0, [sp]
   1df1c:	mov	sp, fp
   1df20:	pop	{fp, pc}
   1df24:	push	{fp, lr}
   1df28:	mov	fp, sp
   1df2c:	sub	sp, sp, #8
   1df30:	movw	r0, #14
   1df34:	bl	1104c <nl_langinfo@plt>
   1df38:	str	r0, [sp, #4]
   1df3c:	ldr	r0, [sp, #4]
   1df40:	movw	lr, #0
   1df44:	cmp	r0, lr
   1df48:	bne	1df58 <__assert_fail@plt+0xceb8>
   1df4c:	movw	r0, #2763	; 0xacb
   1df50:	movt	r0, #2
   1df54:	str	r0, [sp, #4]
   1df58:	ldr	r0, [sp, #4]
   1df5c:	ldrb	r0, [r0]
   1df60:	cmp	r0, #0
   1df64:	bne	1df74 <__assert_fail@plt+0xced4>
   1df68:	movw	r0, #6358	; 0x18d6
   1df6c:	movt	r0, #2
   1df70:	str	r0, [sp, #4]
   1df74:	ldr	r0, [sp, #4]
   1df78:	mov	sp, fp
   1df7c:	pop	{fp, pc}
   1df80:	push	{fp, lr}
   1df84:	mov	fp, sp
   1df88:	sub	sp, sp, #32
   1df8c:	str	r0, [fp, #-8]
   1df90:	str	r1, [fp, #-12]
   1df94:	str	r2, [sp, #16]
   1df98:	str	r3, [sp, #12]
   1df9c:	ldr	r0, [fp, #-8]
   1dfa0:	movw	r1, #0
   1dfa4:	cmp	r0, r1
   1dfa8:	bne	1dfb4 <__assert_fail@plt+0xcf14>
   1dfac:	add	r0, sp, #4
   1dfb0:	str	r0, [fp, #-8]
   1dfb4:	ldr	r0, [fp, #-8]
   1dfb8:	ldr	r1, [fp, #-12]
   1dfbc:	ldr	r2, [sp, #16]
   1dfc0:	ldr	r3, [sp, #12]
   1dfc4:	bl	10f38 <mbrtowc@plt>
   1dfc8:	str	r0, [sp, #8]
   1dfcc:	ldr	r0, [sp, #8]
   1dfd0:	mvn	r1, #1
   1dfd4:	cmp	r1, r0
   1dfd8:	bhi	1e01c <__assert_fail@plt+0xcf7c>
   1dfdc:	ldr	r0, [sp, #16]
   1dfe0:	cmp	r0, #0
   1dfe4:	beq	1e01c <__assert_fail@plt+0xcf7c>
   1dfe8:	movw	r0, #0
   1dfec:	bl	1fa00 <__assert_fail@plt+0xe960>
   1dff0:	tst	r0, #1
   1dff4:	bne	1e01c <__assert_fail@plt+0xcf7c>
   1dff8:	ldr	r0, [fp, #-12]
   1dffc:	ldrb	r0, [r0]
   1e000:	strb	r0, [sp, #3]
   1e004:	ldrb	r0, [sp, #3]
   1e008:	ldr	r1, [fp, #-8]
   1e00c:	str	r0, [r1]
   1e010:	movw	r0, #1
   1e014:	str	r0, [fp, #-4]
   1e018:	b	1e024 <__assert_fail@plt+0xcf84>
   1e01c:	ldr	r0, [sp, #8]
   1e020:	str	r0, [fp, #-4]
   1e024:	ldr	r0, [fp, #-4]
   1e028:	mov	sp, fp
   1e02c:	pop	{fp, pc}
   1e030:	push	{fp, lr}
   1e034:	mov	fp, sp
   1e038:	sub	sp, sp, #176	; 0xb0
   1e03c:	str	r0, [fp, #-8]
   1e040:	str	r1, [fp, #-12]
   1e044:	str	r2, [fp, #-16]
   1e048:	b	1e400 <__assert_fail@plt+0xd360>
   1e04c:	b	1e220 <__assert_fail@plt+0xd180>
   1e050:	ldr	r0, [fp, #-16]
   1e054:	cmp	r0, #0
   1e058:	bcs	1e15c <__assert_fail@plt+0xd0bc>
   1e05c:	ldr	r0, [fp, #-12]
   1e060:	cmp	r0, #0
   1e064:	bcs	1e0ec <__assert_fail@plt+0xd04c>
   1e068:	b	1e088 <__assert_fail@plt+0xcfe8>
   1e06c:	ldr	r0, [fp, #-12]
   1e070:	ldr	r1, [fp, #-16]
   1e074:	movw	r2, #127	; 0x7f
   1e078:	udiv	r1, r2, r1
   1e07c:	cmp	r0, r1
   1e080:	bcc	1e1f0 <__assert_fail@plt+0xd150>
   1e084:	b	1e208 <__assert_fail@plt+0xd168>
   1e088:	b	1e09c <__assert_fail@plt+0xcffc>
   1e08c:	ldr	r0, [fp, #-16]
   1e090:	cmp	r0, #1
   1e094:	bcc	1e0ac <__assert_fail@plt+0xd00c>
   1e098:	b	1e0b8 <__assert_fail@plt+0xd018>
   1e09c:	ldr	r0, [fp, #-16]
   1e0a0:	movw	r1, #0
   1e0a4:	cmp	r1, r0
   1e0a8:	bcs	1e0b8 <__assert_fail@plt+0xd018>
   1e0ac:	movw	r0, #0
   1e0b0:	str	r0, [fp, #-24]	; 0xffffffe8
   1e0b4:	b	1e0d0 <__assert_fail@plt+0xd030>
   1e0b8:	ldr	r0, [fp, #-16]
   1e0bc:	movw	r1, #0
   1e0c0:	sub	r0, r1, r0
   1e0c4:	movw	r1, #127	; 0x7f
   1e0c8:	udiv	r0, r1, r0
   1e0cc:	str	r0, [fp, #-24]	; 0xffffffe8
   1e0d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e0d4:	ldr	r1, [fp, #-12]
   1e0d8:	mvn	r2, #0
   1e0dc:	sub	r1, r2, r1
   1e0e0:	cmp	r0, r1
   1e0e4:	bls	1e1f0 <__assert_fail@plt+0xd150>
   1e0e8:	b	1e208 <__assert_fail@plt+0xd168>
   1e0ec:	ldr	r0, [fp, #-16]
   1e0f0:	cmn	r0, #1
   1e0f4:	bne	1e140 <__assert_fail@plt+0xd0a0>
   1e0f8:	b	1e118 <__assert_fail@plt+0xd078>
   1e0fc:	ldr	r0, [fp, #-12]
   1e100:	mvn	r1, #127	; 0x7f
   1e104:	add	r0, r0, r1
   1e108:	movw	r1, #0
   1e10c:	cmp	r1, r0
   1e110:	bcc	1e1f0 <__assert_fail@plt+0xd150>
   1e114:	b	1e208 <__assert_fail@plt+0xd168>
   1e118:	ldr	r0, [fp, #-12]
   1e11c:	movw	r1, #0
   1e120:	cmp	r1, r0
   1e124:	bcs	1e208 <__assert_fail@plt+0xd168>
   1e128:	ldr	r0, [fp, #-12]
   1e12c:	sub	r0, r0, #1
   1e130:	movw	r1, #127	; 0x7f
   1e134:	cmp	r1, r0
   1e138:	bcc	1e1f0 <__assert_fail@plt+0xd150>
   1e13c:	b	1e208 <__assert_fail@plt+0xd168>
   1e140:	ldr	r0, [fp, #-16]
   1e144:	mvn	r1, #127	; 0x7f
   1e148:	udiv	r0, r1, r0
   1e14c:	ldr	r1, [fp, #-12]
   1e150:	cmp	r0, r1
   1e154:	bcc	1e1f0 <__assert_fail@plt+0xd150>
   1e158:	b	1e208 <__assert_fail@plt+0xd168>
   1e15c:	ldr	r0, [fp, #-16]
   1e160:	cmp	r0, #0
   1e164:	bne	1e16c <__assert_fail@plt+0xd0cc>
   1e168:	b	1e208 <__assert_fail@plt+0xd168>
   1e16c:	ldr	r0, [fp, #-12]
   1e170:	cmp	r0, #0
   1e174:	bcs	1e1d8 <__assert_fail@plt+0xd138>
   1e178:	ldr	r0, [fp, #-12]
   1e17c:	cmn	r0, #1
   1e180:	bne	1e1bc <__assert_fail@plt+0xd11c>
   1e184:	b	1e1a4 <__assert_fail@plt+0xd104>
   1e188:	ldr	r0, [fp, #-16]
   1e18c:	mvn	r1, #127	; 0x7f
   1e190:	add	r0, r0, r1
   1e194:	movw	r1, #0
   1e198:	cmp	r1, r0
   1e19c:	bcc	1e1f0 <__assert_fail@plt+0xd150>
   1e1a0:	b	1e208 <__assert_fail@plt+0xd168>
   1e1a4:	ldr	r0, [fp, #-16]
   1e1a8:	sub	r0, r0, #1
   1e1ac:	movw	r1, #127	; 0x7f
   1e1b0:	cmp	r1, r0
   1e1b4:	bcc	1e1f0 <__assert_fail@plt+0xd150>
   1e1b8:	b	1e208 <__assert_fail@plt+0xd168>
   1e1bc:	ldr	r0, [fp, #-12]
   1e1c0:	mvn	r1, #127	; 0x7f
   1e1c4:	udiv	r0, r1, r0
   1e1c8:	ldr	r1, [fp, #-16]
   1e1cc:	cmp	r0, r1
   1e1d0:	bcc	1e1f0 <__assert_fail@plt+0xd150>
   1e1d4:	b	1e208 <__assert_fail@plt+0xd168>
   1e1d8:	ldr	r0, [fp, #-16]
   1e1dc:	movw	r1, #127	; 0x7f
   1e1e0:	udiv	r0, r1, r0
   1e1e4:	ldr	r1, [fp, #-12]
   1e1e8:	cmp	r0, r1
   1e1ec:	bcs	1e208 <__assert_fail@plt+0xd168>
   1e1f0:	ldr	r0, [fp, #-12]
   1e1f4:	ldr	r1, [fp, #-16]
   1e1f8:	mul	r0, r0, r1
   1e1fc:	sxtb	r0, r0
   1e200:	str	r0, [fp, #-20]	; 0xffffffec
   1e204:	b	1f380 <__assert_fail@plt+0xe2e0>
   1e208:	ldr	r0, [fp, #-12]
   1e20c:	ldr	r1, [fp, #-16]
   1e210:	mul	r0, r0, r1
   1e214:	sxtb	r0, r0
   1e218:	str	r0, [fp, #-20]	; 0xffffffec
   1e21c:	b	1f398 <__assert_fail@plt+0xe2f8>
   1e220:	ldr	r0, [fp, #-16]
   1e224:	cmp	r0, #0
   1e228:	bcs	1e334 <__assert_fail@plt+0xd294>
   1e22c:	ldr	r0, [fp, #-12]
   1e230:	cmp	r0, #0
   1e234:	bcs	1e2bc <__assert_fail@plt+0xd21c>
   1e238:	b	1e258 <__assert_fail@plt+0xd1b8>
   1e23c:	ldr	r0, [fp, #-12]
   1e240:	ldr	r1, [fp, #-16]
   1e244:	movw	r2, #255	; 0xff
   1e248:	udiv	r1, r2, r1
   1e24c:	cmp	r0, r1
   1e250:	bcc	1e3d0 <__assert_fail@plt+0xd330>
   1e254:	b	1e3e8 <__assert_fail@plt+0xd348>
   1e258:	b	1e26c <__assert_fail@plt+0xd1cc>
   1e25c:	ldr	r0, [fp, #-16]
   1e260:	cmp	r0, #1
   1e264:	bcc	1e27c <__assert_fail@plt+0xd1dc>
   1e268:	b	1e288 <__assert_fail@plt+0xd1e8>
   1e26c:	ldr	r0, [fp, #-16]
   1e270:	movw	r1, #0
   1e274:	cmp	r1, r0
   1e278:	bcs	1e288 <__assert_fail@plt+0xd1e8>
   1e27c:	movw	r0, #0
   1e280:	str	r0, [fp, #-28]	; 0xffffffe4
   1e284:	b	1e2a0 <__assert_fail@plt+0xd200>
   1e288:	ldr	r0, [fp, #-16]
   1e28c:	movw	r1, #0
   1e290:	sub	r0, r1, r0
   1e294:	movw	r1, #255	; 0xff
   1e298:	udiv	r0, r1, r0
   1e29c:	str	r0, [fp, #-28]	; 0xffffffe4
   1e2a0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1e2a4:	ldr	r1, [fp, #-12]
   1e2a8:	mvn	r2, #0
   1e2ac:	sub	r1, r2, r1
   1e2b0:	cmp	r0, r1
   1e2b4:	bls	1e3d0 <__assert_fail@plt+0xd330>
   1e2b8:	b	1e3e8 <__assert_fail@plt+0xd348>
   1e2bc:	b	1e2c4 <__assert_fail@plt+0xd224>
   1e2c0:	b	1e2c8 <__assert_fail@plt+0xd228>
   1e2c4:	b	1e318 <__assert_fail@plt+0xd278>
   1e2c8:	ldr	r0, [fp, #-16]
   1e2cc:	cmn	r0, #1
   1e2d0:	bne	1e318 <__assert_fail@plt+0xd278>
   1e2d4:	b	1e2f0 <__assert_fail@plt+0xd250>
   1e2d8:	ldr	r0, [fp, #-12]
   1e2dc:	add	r0, r0, #0
   1e2e0:	movw	r1, #0
   1e2e4:	cmp	r1, r0
   1e2e8:	bcc	1e3d0 <__assert_fail@plt+0xd330>
   1e2ec:	b	1e3e8 <__assert_fail@plt+0xd348>
   1e2f0:	ldr	r0, [fp, #-12]
   1e2f4:	movw	r1, #0
   1e2f8:	cmp	r1, r0
   1e2fc:	bcs	1e3e8 <__assert_fail@plt+0xd348>
   1e300:	ldr	r0, [fp, #-12]
   1e304:	sub	r0, r0, #1
   1e308:	mvn	r1, #0
   1e30c:	cmp	r1, r0
   1e310:	bcc	1e3d0 <__assert_fail@plt+0xd330>
   1e314:	b	1e3e8 <__assert_fail@plt+0xd348>
   1e318:	ldr	r0, [fp, #-16]
   1e31c:	movw	r1, #0
   1e320:	udiv	r0, r1, r0
   1e324:	ldr	r1, [fp, #-12]
   1e328:	cmp	r0, r1
   1e32c:	bcc	1e3d0 <__assert_fail@plt+0xd330>
   1e330:	b	1e3e8 <__assert_fail@plt+0xd348>
   1e334:	ldr	r0, [fp, #-16]
   1e338:	cmp	r0, #0
   1e33c:	bne	1e344 <__assert_fail@plt+0xd2a4>
   1e340:	b	1e3e8 <__assert_fail@plt+0xd348>
   1e344:	ldr	r0, [fp, #-12]
   1e348:	cmp	r0, #0
   1e34c:	bcs	1e3b8 <__assert_fail@plt+0xd318>
   1e350:	b	1e358 <__assert_fail@plt+0xd2b8>
   1e354:	b	1e35c <__assert_fail@plt+0xd2bc>
   1e358:	b	1e39c <__assert_fail@plt+0xd2fc>
   1e35c:	ldr	r0, [fp, #-12]
   1e360:	cmn	r0, #1
   1e364:	bne	1e39c <__assert_fail@plt+0xd2fc>
   1e368:	b	1e384 <__assert_fail@plt+0xd2e4>
   1e36c:	ldr	r0, [fp, #-16]
   1e370:	add	r0, r0, #0
   1e374:	movw	r1, #0
   1e378:	cmp	r1, r0
   1e37c:	bcc	1e3d0 <__assert_fail@plt+0xd330>
   1e380:	b	1e3e8 <__assert_fail@plt+0xd348>
   1e384:	ldr	r0, [fp, #-16]
   1e388:	sub	r0, r0, #1
   1e38c:	mvn	r1, #0
   1e390:	cmp	r1, r0
   1e394:	bcc	1e3d0 <__assert_fail@plt+0xd330>
   1e398:	b	1e3e8 <__assert_fail@plt+0xd348>
   1e39c:	ldr	r0, [fp, #-12]
   1e3a0:	movw	r1, #0
   1e3a4:	udiv	r0, r1, r0
   1e3a8:	ldr	r1, [fp, #-16]
   1e3ac:	cmp	r0, r1
   1e3b0:	bcc	1e3d0 <__assert_fail@plt+0xd330>
   1e3b4:	b	1e3e8 <__assert_fail@plt+0xd348>
   1e3b8:	ldr	r0, [fp, #-16]
   1e3bc:	movw	r1, #255	; 0xff
   1e3c0:	udiv	r0, r1, r0
   1e3c4:	ldr	r1, [fp, #-12]
   1e3c8:	cmp	r0, r1
   1e3cc:	bcs	1e3e8 <__assert_fail@plt+0xd348>
   1e3d0:	ldr	r0, [fp, #-12]
   1e3d4:	ldr	r1, [fp, #-16]
   1e3d8:	mul	r0, r0, r1
   1e3dc:	and	r0, r0, #255	; 0xff
   1e3e0:	str	r0, [fp, #-20]	; 0xffffffec
   1e3e4:	b	1f380 <__assert_fail@plt+0xe2e0>
   1e3e8:	ldr	r0, [fp, #-12]
   1e3ec:	ldr	r1, [fp, #-16]
   1e3f0:	mul	r0, r0, r1
   1e3f4:	and	r0, r0, #255	; 0xff
   1e3f8:	str	r0, [fp, #-20]	; 0xffffffec
   1e3fc:	b	1f398 <__assert_fail@plt+0xe2f8>
   1e400:	b	1e7b8 <__assert_fail@plt+0xd718>
   1e404:	b	1e5d8 <__assert_fail@plt+0xd538>
   1e408:	ldr	r0, [fp, #-16]
   1e40c:	cmp	r0, #0
   1e410:	bcs	1e514 <__assert_fail@plt+0xd474>
   1e414:	ldr	r0, [fp, #-12]
   1e418:	cmp	r0, #0
   1e41c:	bcs	1e4a4 <__assert_fail@plt+0xd404>
   1e420:	b	1e440 <__assert_fail@plt+0xd3a0>
   1e424:	ldr	r0, [fp, #-12]
   1e428:	ldr	r1, [fp, #-16]
   1e42c:	movw	r2, #32767	; 0x7fff
   1e430:	udiv	r1, r2, r1
   1e434:	cmp	r0, r1
   1e438:	bcc	1e5a8 <__assert_fail@plt+0xd508>
   1e43c:	b	1e5c0 <__assert_fail@plt+0xd520>
   1e440:	b	1e454 <__assert_fail@plt+0xd3b4>
   1e444:	ldr	r0, [fp, #-16]
   1e448:	cmp	r0, #1
   1e44c:	bcc	1e464 <__assert_fail@plt+0xd3c4>
   1e450:	b	1e470 <__assert_fail@plt+0xd3d0>
   1e454:	ldr	r0, [fp, #-16]
   1e458:	movw	r1, #0
   1e45c:	cmp	r1, r0
   1e460:	bcs	1e470 <__assert_fail@plt+0xd3d0>
   1e464:	movw	r0, #0
   1e468:	str	r0, [fp, #-32]	; 0xffffffe0
   1e46c:	b	1e488 <__assert_fail@plt+0xd3e8>
   1e470:	ldr	r0, [fp, #-16]
   1e474:	movw	r1, #0
   1e478:	sub	r0, r1, r0
   1e47c:	movw	r1, #32767	; 0x7fff
   1e480:	udiv	r0, r1, r0
   1e484:	str	r0, [fp, #-32]	; 0xffffffe0
   1e488:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e48c:	ldr	r1, [fp, #-12]
   1e490:	mvn	r2, #0
   1e494:	sub	r1, r2, r1
   1e498:	cmp	r0, r1
   1e49c:	bls	1e5a8 <__assert_fail@plt+0xd508>
   1e4a0:	b	1e5c0 <__assert_fail@plt+0xd520>
   1e4a4:	ldr	r0, [fp, #-16]
   1e4a8:	cmn	r0, #1
   1e4ac:	bne	1e4f8 <__assert_fail@plt+0xd458>
   1e4b0:	b	1e4d0 <__assert_fail@plt+0xd430>
   1e4b4:	ldr	r0, [pc, #3840]	; 1f3bc <__assert_fail@plt+0xe31c>
   1e4b8:	ldr	r1, [fp, #-12]
   1e4bc:	add	r0, r1, r0
   1e4c0:	movw	r1, #0
   1e4c4:	cmp	r1, r0
   1e4c8:	bcc	1e5a8 <__assert_fail@plt+0xd508>
   1e4cc:	b	1e5c0 <__assert_fail@plt+0xd520>
   1e4d0:	ldr	r0, [fp, #-12]
   1e4d4:	movw	r1, #0
   1e4d8:	cmp	r1, r0
   1e4dc:	bcs	1e5c0 <__assert_fail@plt+0xd520>
   1e4e0:	ldr	r0, [fp, #-12]
   1e4e4:	sub	r0, r0, #1
   1e4e8:	movw	r1, #32767	; 0x7fff
   1e4ec:	cmp	r1, r0
   1e4f0:	bcc	1e5a8 <__assert_fail@plt+0xd508>
   1e4f4:	b	1e5c0 <__assert_fail@plt+0xd520>
   1e4f8:	ldr	r0, [pc, #3772]	; 1f3bc <__assert_fail@plt+0xe31c>
   1e4fc:	ldr	r1, [fp, #-16]
   1e500:	udiv	r0, r0, r1
   1e504:	ldr	r1, [fp, #-12]
   1e508:	cmp	r0, r1
   1e50c:	bcc	1e5a8 <__assert_fail@plt+0xd508>
   1e510:	b	1e5c0 <__assert_fail@plt+0xd520>
   1e514:	ldr	r0, [fp, #-16]
   1e518:	cmp	r0, #0
   1e51c:	bne	1e524 <__assert_fail@plt+0xd484>
   1e520:	b	1e5c0 <__assert_fail@plt+0xd520>
   1e524:	ldr	r0, [fp, #-12]
   1e528:	cmp	r0, #0
   1e52c:	bcs	1e590 <__assert_fail@plt+0xd4f0>
   1e530:	ldr	r0, [fp, #-12]
   1e534:	cmn	r0, #1
   1e538:	bne	1e574 <__assert_fail@plt+0xd4d4>
   1e53c:	b	1e55c <__assert_fail@plt+0xd4bc>
   1e540:	ldr	r0, [pc, #3700]	; 1f3bc <__assert_fail@plt+0xe31c>
   1e544:	ldr	r1, [fp, #-16]
   1e548:	add	r0, r1, r0
   1e54c:	movw	r1, #0
   1e550:	cmp	r1, r0
   1e554:	bcc	1e5a8 <__assert_fail@plt+0xd508>
   1e558:	b	1e5c0 <__assert_fail@plt+0xd520>
   1e55c:	ldr	r0, [fp, #-16]
   1e560:	sub	r0, r0, #1
   1e564:	movw	r1, #32767	; 0x7fff
   1e568:	cmp	r1, r0
   1e56c:	bcc	1e5a8 <__assert_fail@plt+0xd508>
   1e570:	b	1e5c0 <__assert_fail@plt+0xd520>
   1e574:	ldr	r0, [pc, #3648]	; 1f3bc <__assert_fail@plt+0xe31c>
   1e578:	ldr	r1, [fp, #-12]
   1e57c:	udiv	r0, r0, r1
   1e580:	ldr	r1, [fp, #-16]
   1e584:	cmp	r0, r1
   1e588:	bcc	1e5a8 <__assert_fail@plt+0xd508>
   1e58c:	b	1e5c0 <__assert_fail@plt+0xd520>
   1e590:	ldr	r0, [fp, #-16]
   1e594:	movw	r1, #32767	; 0x7fff
   1e598:	udiv	r0, r1, r0
   1e59c:	ldr	r1, [fp, #-12]
   1e5a0:	cmp	r0, r1
   1e5a4:	bcs	1e5c0 <__assert_fail@plt+0xd520>
   1e5a8:	ldr	r0, [fp, #-12]
   1e5ac:	ldr	r1, [fp, #-16]
   1e5b0:	mul	r0, r0, r1
   1e5b4:	sxth	r0, r0
   1e5b8:	str	r0, [fp, #-20]	; 0xffffffec
   1e5bc:	b	1f380 <__assert_fail@plt+0xe2e0>
   1e5c0:	ldr	r0, [fp, #-12]
   1e5c4:	ldr	r1, [fp, #-16]
   1e5c8:	mul	r0, r0, r1
   1e5cc:	sxth	r0, r0
   1e5d0:	str	r0, [fp, #-20]	; 0xffffffec
   1e5d4:	b	1f398 <__assert_fail@plt+0xe2f8>
   1e5d8:	ldr	r0, [fp, #-16]
   1e5dc:	cmp	r0, #0
   1e5e0:	bcs	1e6ec <__assert_fail@plt+0xd64c>
   1e5e4:	ldr	r0, [fp, #-12]
   1e5e8:	cmp	r0, #0
   1e5ec:	bcs	1e674 <__assert_fail@plt+0xd5d4>
   1e5f0:	b	1e610 <__assert_fail@plt+0xd570>
   1e5f4:	ldr	r0, [fp, #-12]
   1e5f8:	ldr	r1, [fp, #-16]
   1e5fc:	movw	r2, #65535	; 0xffff
   1e600:	udiv	r1, r2, r1
   1e604:	cmp	r0, r1
   1e608:	bcc	1e788 <__assert_fail@plt+0xd6e8>
   1e60c:	b	1e7a0 <__assert_fail@plt+0xd700>
   1e610:	b	1e624 <__assert_fail@plt+0xd584>
   1e614:	ldr	r0, [fp, #-16]
   1e618:	cmp	r0, #1
   1e61c:	bcc	1e634 <__assert_fail@plt+0xd594>
   1e620:	b	1e640 <__assert_fail@plt+0xd5a0>
   1e624:	ldr	r0, [fp, #-16]
   1e628:	movw	r1, #0
   1e62c:	cmp	r1, r0
   1e630:	bcs	1e640 <__assert_fail@plt+0xd5a0>
   1e634:	movw	r0, #0
   1e638:	str	r0, [fp, #-36]	; 0xffffffdc
   1e63c:	b	1e658 <__assert_fail@plt+0xd5b8>
   1e640:	ldr	r0, [fp, #-16]
   1e644:	movw	r1, #0
   1e648:	sub	r0, r1, r0
   1e64c:	movw	r1, #65535	; 0xffff
   1e650:	udiv	r0, r1, r0
   1e654:	str	r0, [fp, #-36]	; 0xffffffdc
   1e658:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1e65c:	ldr	r1, [fp, #-12]
   1e660:	mvn	r2, #0
   1e664:	sub	r1, r2, r1
   1e668:	cmp	r0, r1
   1e66c:	bls	1e788 <__assert_fail@plt+0xd6e8>
   1e670:	b	1e7a0 <__assert_fail@plt+0xd700>
   1e674:	b	1e67c <__assert_fail@plt+0xd5dc>
   1e678:	b	1e680 <__assert_fail@plt+0xd5e0>
   1e67c:	b	1e6d0 <__assert_fail@plt+0xd630>
   1e680:	ldr	r0, [fp, #-16]
   1e684:	cmn	r0, #1
   1e688:	bne	1e6d0 <__assert_fail@plt+0xd630>
   1e68c:	b	1e6a8 <__assert_fail@plt+0xd608>
   1e690:	ldr	r0, [fp, #-12]
   1e694:	add	r0, r0, #0
   1e698:	movw	r1, #0
   1e69c:	cmp	r1, r0
   1e6a0:	bcc	1e788 <__assert_fail@plt+0xd6e8>
   1e6a4:	b	1e7a0 <__assert_fail@plt+0xd700>
   1e6a8:	ldr	r0, [fp, #-12]
   1e6ac:	movw	r1, #0
   1e6b0:	cmp	r1, r0
   1e6b4:	bcs	1e7a0 <__assert_fail@plt+0xd700>
   1e6b8:	ldr	r0, [fp, #-12]
   1e6bc:	sub	r0, r0, #1
   1e6c0:	mvn	r1, #0
   1e6c4:	cmp	r1, r0
   1e6c8:	bcc	1e788 <__assert_fail@plt+0xd6e8>
   1e6cc:	b	1e7a0 <__assert_fail@plt+0xd700>
   1e6d0:	ldr	r0, [fp, #-16]
   1e6d4:	movw	r1, #0
   1e6d8:	udiv	r0, r1, r0
   1e6dc:	ldr	r1, [fp, #-12]
   1e6e0:	cmp	r0, r1
   1e6e4:	bcc	1e788 <__assert_fail@plt+0xd6e8>
   1e6e8:	b	1e7a0 <__assert_fail@plt+0xd700>
   1e6ec:	ldr	r0, [fp, #-16]
   1e6f0:	cmp	r0, #0
   1e6f4:	bne	1e6fc <__assert_fail@plt+0xd65c>
   1e6f8:	b	1e7a0 <__assert_fail@plt+0xd700>
   1e6fc:	ldr	r0, [fp, #-12]
   1e700:	cmp	r0, #0
   1e704:	bcs	1e770 <__assert_fail@plt+0xd6d0>
   1e708:	b	1e710 <__assert_fail@plt+0xd670>
   1e70c:	b	1e714 <__assert_fail@plt+0xd674>
   1e710:	b	1e754 <__assert_fail@plt+0xd6b4>
   1e714:	ldr	r0, [fp, #-12]
   1e718:	cmn	r0, #1
   1e71c:	bne	1e754 <__assert_fail@plt+0xd6b4>
   1e720:	b	1e73c <__assert_fail@plt+0xd69c>
   1e724:	ldr	r0, [fp, #-16]
   1e728:	add	r0, r0, #0
   1e72c:	movw	r1, #0
   1e730:	cmp	r1, r0
   1e734:	bcc	1e788 <__assert_fail@plt+0xd6e8>
   1e738:	b	1e7a0 <__assert_fail@plt+0xd700>
   1e73c:	ldr	r0, [fp, #-16]
   1e740:	sub	r0, r0, #1
   1e744:	mvn	r1, #0
   1e748:	cmp	r1, r0
   1e74c:	bcc	1e788 <__assert_fail@plt+0xd6e8>
   1e750:	b	1e7a0 <__assert_fail@plt+0xd700>
   1e754:	ldr	r0, [fp, #-12]
   1e758:	movw	r1, #0
   1e75c:	udiv	r0, r1, r0
   1e760:	ldr	r1, [fp, #-16]
   1e764:	cmp	r0, r1
   1e768:	bcc	1e788 <__assert_fail@plt+0xd6e8>
   1e76c:	b	1e7a0 <__assert_fail@plt+0xd700>
   1e770:	ldr	r0, [fp, #-16]
   1e774:	movw	r1, #65535	; 0xffff
   1e778:	udiv	r0, r1, r0
   1e77c:	ldr	r1, [fp, #-12]
   1e780:	cmp	r0, r1
   1e784:	bcs	1e7a0 <__assert_fail@plt+0xd700>
   1e788:	ldr	r0, [fp, #-12]
   1e78c:	ldr	r1, [fp, #-16]
   1e790:	mul	r0, r0, r1
   1e794:	uxth	r0, r0
   1e798:	str	r0, [fp, #-20]	; 0xffffffec
   1e79c:	b	1f380 <__assert_fail@plt+0xe2e0>
   1e7a0:	ldr	r0, [fp, #-12]
   1e7a4:	ldr	r1, [fp, #-16]
   1e7a8:	mul	r0, r0, r1
   1e7ac:	uxth	r0, r0
   1e7b0:	str	r0, [fp, #-20]	; 0xffffffec
   1e7b4:	b	1f398 <__assert_fail@plt+0xe2f8>
   1e7b8:	b	1e7bc <__assert_fail@plt+0xd71c>
   1e7bc:	b	1e980 <__assert_fail@plt+0xd8e0>
   1e7c0:	ldr	r0, [fp, #-16]
   1e7c4:	cmp	r0, #0
   1e7c8:	bcs	1e8c8 <__assert_fail@plt+0xd828>
   1e7cc:	ldr	r0, [fp, #-12]
   1e7d0:	cmp	r0, #0
   1e7d4:	bcs	1e85c <__assert_fail@plt+0xd7bc>
   1e7d8:	b	1e7f8 <__assert_fail@plt+0xd758>
   1e7dc:	ldr	r0, [pc, #3024]	; 1f3b4 <__assert_fail@plt+0xe314>
   1e7e0:	ldr	r1, [fp, #-12]
   1e7e4:	ldr	r2, [fp, #-16]
   1e7e8:	udiv	r0, r0, r2
   1e7ec:	cmp	r1, r0
   1e7f0:	bcc	1e958 <__assert_fail@plt+0xd8b8>
   1e7f4:	b	1e96c <__assert_fail@plt+0xd8cc>
   1e7f8:	b	1e80c <__assert_fail@plt+0xd76c>
   1e7fc:	ldr	r0, [fp, #-16]
   1e800:	cmp	r0, #1
   1e804:	bcc	1e81c <__assert_fail@plt+0xd77c>
   1e808:	b	1e828 <__assert_fail@plt+0xd788>
   1e80c:	ldr	r0, [fp, #-16]
   1e810:	movw	r1, #0
   1e814:	cmp	r1, r0
   1e818:	bcs	1e828 <__assert_fail@plt+0xd788>
   1e81c:	movw	r0, #0
   1e820:	str	r0, [fp, #-40]	; 0xffffffd8
   1e824:	b	1e840 <__assert_fail@plt+0xd7a0>
   1e828:	ldr	r0, [pc, #2948]	; 1f3b4 <__assert_fail@plt+0xe314>
   1e82c:	ldr	r1, [fp, #-16]
   1e830:	movw	r2, #0
   1e834:	sub	r1, r2, r1
   1e838:	udiv	r0, r0, r1
   1e83c:	str	r0, [fp, #-40]	; 0xffffffd8
   1e840:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1e844:	ldr	r1, [fp, #-12]
   1e848:	mvn	r2, #0
   1e84c:	sub	r1, r2, r1
   1e850:	cmp	r0, r1
   1e854:	bls	1e958 <__assert_fail@plt+0xd8b8>
   1e858:	b	1e96c <__assert_fail@plt+0xd8cc>
   1e85c:	ldr	r0, [fp, #-16]
   1e860:	cmn	r0, #1
   1e864:	bne	1e8ac <__assert_fail@plt+0xd80c>
   1e868:	b	1e884 <__assert_fail@plt+0xd7e4>
   1e86c:	ldr	r0, [fp, #-12]
   1e870:	add	r0, r0, #-2147483648	; 0x80000000
   1e874:	movw	r1, #0
   1e878:	cmp	r1, r0
   1e87c:	bcc	1e958 <__assert_fail@plt+0xd8b8>
   1e880:	b	1e96c <__assert_fail@plt+0xd8cc>
   1e884:	ldr	r0, [fp, #-12]
   1e888:	movw	r1, #0
   1e88c:	cmp	r1, r0
   1e890:	bcs	1e96c <__assert_fail@plt+0xd8cc>
   1e894:	ldr	r0, [pc, #2840]	; 1f3b4 <__assert_fail@plt+0xe314>
   1e898:	ldr	r1, [fp, #-12]
   1e89c:	sub	r1, r1, #1
   1e8a0:	cmp	r0, r1
   1e8a4:	bcc	1e958 <__assert_fail@plt+0xd8b8>
   1e8a8:	b	1e96c <__assert_fail@plt+0xd8cc>
   1e8ac:	ldr	r0, [pc, #2820]	; 1f3b8 <__assert_fail@plt+0xe318>
   1e8b0:	ldr	r1, [fp, #-16]
   1e8b4:	udiv	r0, r0, r1
   1e8b8:	ldr	r1, [fp, #-12]
   1e8bc:	cmp	r0, r1
   1e8c0:	bcc	1e958 <__assert_fail@plt+0xd8b8>
   1e8c4:	b	1e96c <__assert_fail@plt+0xd8cc>
   1e8c8:	ldr	r0, [fp, #-16]
   1e8cc:	cmp	r0, #0
   1e8d0:	bne	1e8d8 <__assert_fail@plt+0xd838>
   1e8d4:	b	1e96c <__assert_fail@plt+0xd8cc>
   1e8d8:	ldr	r0, [fp, #-12]
   1e8dc:	cmp	r0, #0
   1e8e0:	bcs	1e940 <__assert_fail@plt+0xd8a0>
   1e8e4:	ldr	r0, [fp, #-12]
   1e8e8:	cmn	r0, #1
   1e8ec:	bne	1e924 <__assert_fail@plt+0xd884>
   1e8f0:	b	1e90c <__assert_fail@plt+0xd86c>
   1e8f4:	ldr	r0, [fp, #-16]
   1e8f8:	add	r0, r0, #-2147483648	; 0x80000000
   1e8fc:	movw	r1, #0
   1e900:	cmp	r1, r0
   1e904:	bcc	1e958 <__assert_fail@plt+0xd8b8>
   1e908:	b	1e96c <__assert_fail@plt+0xd8cc>
   1e90c:	ldr	r0, [pc, #2720]	; 1f3b4 <__assert_fail@plt+0xe314>
   1e910:	ldr	r1, [fp, #-16]
   1e914:	sub	r1, r1, #1
   1e918:	cmp	r0, r1
   1e91c:	bcc	1e958 <__assert_fail@plt+0xd8b8>
   1e920:	b	1e96c <__assert_fail@plt+0xd8cc>
   1e924:	ldr	r0, [pc, #2700]	; 1f3b8 <__assert_fail@plt+0xe318>
   1e928:	ldr	r1, [fp, #-12]
   1e92c:	udiv	r0, r0, r1
   1e930:	ldr	r1, [fp, #-16]
   1e934:	cmp	r0, r1
   1e938:	bcc	1e958 <__assert_fail@plt+0xd8b8>
   1e93c:	b	1e96c <__assert_fail@plt+0xd8cc>
   1e940:	ldr	r0, [pc, #2668]	; 1f3b4 <__assert_fail@plt+0xe314>
   1e944:	ldr	r1, [fp, #-16]
   1e948:	udiv	r0, r0, r1
   1e94c:	ldr	r1, [fp, #-12]
   1e950:	cmp	r0, r1
   1e954:	bcs	1e96c <__assert_fail@plt+0xd8cc>
   1e958:	ldr	r0, [fp, #-12]
   1e95c:	ldr	r1, [fp, #-16]
   1e960:	mul	r0, r0, r1
   1e964:	str	r0, [fp, #-20]	; 0xffffffec
   1e968:	b	1f380 <__assert_fail@plt+0xe2e0>
   1e96c:	ldr	r0, [fp, #-12]
   1e970:	ldr	r1, [fp, #-16]
   1e974:	mul	r0, r0, r1
   1e978:	str	r0, [fp, #-20]	; 0xffffffec
   1e97c:	b	1f398 <__assert_fail@plt+0xe2f8>
   1e980:	ldr	r0, [fp, #-16]
   1e984:	cmp	r0, #0
   1e988:	bcs	1ea94 <__assert_fail@plt+0xd9f4>
   1e98c:	ldr	r0, [fp, #-12]
   1e990:	cmp	r0, #0
   1e994:	bcs	1ea1c <__assert_fail@plt+0xd97c>
   1e998:	b	1e9b8 <__assert_fail@plt+0xd918>
   1e99c:	ldr	r0, [fp, #-12]
   1e9a0:	ldr	r1, [fp, #-16]
   1e9a4:	mvn	r2, #0
   1e9a8:	udiv	r1, r2, r1
   1e9ac:	cmp	r0, r1
   1e9b0:	bcc	1eb30 <__assert_fail@plt+0xda90>
   1e9b4:	b	1eb44 <__assert_fail@plt+0xdaa4>
   1e9b8:	b	1e9cc <__assert_fail@plt+0xd92c>
   1e9bc:	ldr	r0, [fp, #-16]
   1e9c0:	cmp	r0, #1
   1e9c4:	bcc	1e9dc <__assert_fail@plt+0xd93c>
   1e9c8:	b	1e9e8 <__assert_fail@plt+0xd948>
   1e9cc:	ldr	r0, [fp, #-16]
   1e9d0:	movw	r1, #0
   1e9d4:	cmp	r1, r0
   1e9d8:	bcs	1e9e8 <__assert_fail@plt+0xd948>
   1e9dc:	movw	r0, #1
   1e9e0:	str	r0, [fp, #-44]	; 0xffffffd4
   1e9e4:	b	1ea00 <__assert_fail@plt+0xd960>
   1e9e8:	ldr	r0, [fp, #-16]
   1e9ec:	movw	r1, #0
   1e9f0:	sub	r0, r1, r0
   1e9f4:	mvn	r1, #0
   1e9f8:	udiv	r0, r1, r0
   1e9fc:	str	r0, [fp, #-44]	; 0xffffffd4
   1ea00:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1ea04:	ldr	r1, [fp, #-12]
   1ea08:	mvn	r2, #0
   1ea0c:	sub	r1, r2, r1
   1ea10:	cmp	r0, r1
   1ea14:	bls	1eb30 <__assert_fail@plt+0xda90>
   1ea18:	b	1eb44 <__assert_fail@plt+0xdaa4>
   1ea1c:	b	1ea24 <__assert_fail@plt+0xd984>
   1ea20:	b	1ea28 <__assert_fail@plt+0xd988>
   1ea24:	b	1ea78 <__assert_fail@plt+0xd9d8>
   1ea28:	ldr	r0, [fp, #-16]
   1ea2c:	cmn	r0, #1
   1ea30:	bne	1ea78 <__assert_fail@plt+0xd9d8>
   1ea34:	b	1ea50 <__assert_fail@plt+0xd9b0>
   1ea38:	ldr	r0, [fp, #-12]
   1ea3c:	add	r0, r0, #0
   1ea40:	movw	r1, #0
   1ea44:	cmp	r1, r0
   1ea48:	bcc	1eb30 <__assert_fail@plt+0xda90>
   1ea4c:	b	1eb44 <__assert_fail@plt+0xdaa4>
   1ea50:	ldr	r0, [fp, #-12]
   1ea54:	movw	r1, #0
   1ea58:	cmp	r1, r0
   1ea5c:	bcs	1eb44 <__assert_fail@plt+0xdaa4>
   1ea60:	ldr	r0, [fp, #-12]
   1ea64:	sub	r0, r0, #1
   1ea68:	mvn	r1, #0
   1ea6c:	cmp	r1, r0
   1ea70:	bcc	1eb30 <__assert_fail@plt+0xda90>
   1ea74:	b	1eb44 <__assert_fail@plt+0xdaa4>
   1ea78:	ldr	r0, [fp, #-16]
   1ea7c:	movw	r1, #0
   1ea80:	udiv	r0, r1, r0
   1ea84:	ldr	r1, [fp, #-12]
   1ea88:	cmp	r0, r1
   1ea8c:	bcc	1eb30 <__assert_fail@plt+0xda90>
   1ea90:	b	1eb44 <__assert_fail@plt+0xdaa4>
   1ea94:	ldr	r0, [fp, #-16]
   1ea98:	cmp	r0, #0
   1ea9c:	bne	1eaa4 <__assert_fail@plt+0xda04>
   1eaa0:	b	1eb44 <__assert_fail@plt+0xdaa4>
   1eaa4:	ldr	r0, [fp, #-12]
   1eaa8:	cmp	r0, #0
   1eaac:	bcs	1eb18 <__assert_fail@plt+0xda78>
   1eab0:	b	1eab8 <__assert_fail@plt+0xda18>
   1eab4:	b	1eabc <__assert_fail@plt+0xda1c>
   1eab8:	b	1eafc <__assert_fail@plt+0xda5c>
   1eabc:	ldr	r0, [fp, #-12]
   1eac0:	cmn	r0, #1
   1eac4:	bne	1eafc <__assert_fail@plt+0xda5c>
   1eac8:	b	1eae4 <__assert_fail@plt+0xda44>
   1eacc:	ldr	r0, [fp, #-16]
   1ead0:	add	r0, r0, #0
   1ead4:	movw	r1, #0
   1ead8:	cmp	r1, r0
   1eadc:	bcc	1eb30 <__assert_fail@plt+0xda90>
   1eae0:	b	1eb44 <__assert_fail@plt+0xdaa4>
   1eae4:	ldr	r0, [fp, #-16]
   1eae8:	sub	r0, r0, #1
   1eaec:	mvn	r1, #0
   1eaf0:	cmp	r1, r0
   1eaf4:	bcc	1eb30 <__assert_fail@plt+0xda90>
   1eaf8:	b	1eb44 <__assert_fail@plt+0xdaa4>
   1eafc:	ldr	r0, [fp, #-12]
   1eb00:	movw	r1, #0
   1eb04:	udiv	r0, r1, r0
   1eb08:	ldr	r1, [fp, #-16]
   1eb0c:	cmp	r0, r1
   1eb10:	bcc	1eb30 <__assert_fail@plt+0xda90>
   1eb14:	b	1eb44 <__assert_fail@plt+0xdaa4>
   1eb18:	ldr	r0, [fp, #-16]
   1eb1c:	mvn	r1, #0
   1eb20:	udiv	r0, r1, r0
   1eb24:	ldr	r1, [fp, #-12]
   1eb28:	cmp	r0, r1
   1eb2c:	bcs	1eb44 <__assert_fail@plt+0xdaa4>
   1eb30:	ldr	r0, [fp, #-12]
   1eb34:	ldr	r1, [fp, #-16]
   1eb38:	mul	r0, r0, r1
   1eb3c:	str	r0, [fp, #-20]	; 0xffffffec
   1eb40:	b	1f380 <__assert_fail@plt+0xe2e0>
   1eb44:	ldr	r0, [fp, #-12]
   1eb48:	ldr	r1, [fp, #-16]
   1eb4c:	mul	r0, r0, r1
   1eb50:	str	r0, [fp, #-20]	; 0xffffffec
   1eb54:	b	1f398 <__assert_fail@plt+0xe2f8>
   1eb58:	b	1eb5c <__assert_fail@plt+0xdabc>
   1eb5c:	b	1ed20 <__assert_fail@plt+0xdc80>
   1eb60:	ldr	r0, [fp, #-16]
   1eb64:	cmp	r0, #0
   1eb68:	bcs	1ec68 <__assert_fail@plt+0xdbc8>
   1eb6c:	ldr	r0, [fp, #-12]
   1eb70:	cmp	r0, #0
   1eb74:	bcs	1ebfc <__assert_fail@plt+0xdb5c>
   1eb78:	b	1eb98 <__assert_fail@plt+0xdaf8>
   1eb7c:	ldr	r0, [pc, #2096]	; 1f3b4 <__assert_fail@plt+0xe314>
   1eb80:	ldr	r1, [fp, #-12]
   1eb84:	ldr	r2, [fp, #-16]
   1eb88:	udiv	r0, r0, r2
   1eb8c:	cmp	r1, r0
   1eb90:	bcc	1ecf8 <__assert_fail@plt+0xdc58>
   1eb94:	b	1ed0c <__assert_fail@plt+0xdc6c>
   1eb98:	b	1ebac <__assert_fail@plt+0xdb0c>
   1eb9c:	ldr	r0, [fp, #-16]
   1eba0:	cmp	r0, #1
   1eba4:	bcc	1ebbc <__assert_fail@plt+0xdb1c>
   1eba8:	b	1ebc8 <__assert_fail@plt+0xdb28>
   1ebac:	ldr	r0, [fp, #-16]
   1ebb0:	movw	r1, #0
   1ebb4:	cmp	r1, r0
   1ebb8:	bcs	1ebc8 <__assert_fail@plt+0xdb28>
   1ebbc:	movw	r0, #0
   1ebc0:	str	r0, [fp, #-48]	; 0xffffffd0
   1ebc4:	b	1ebe0 <__assert_fail@plt+0xdb40>
   1ebc8:	ldr	r0, [pc, #2020]	; 1f3b4 <__assert_fail@plt+0xe314>
   1ebcc:	ldr	r1, [fp, #-16]
   1ebd0:	movw	r2, #0
   1ebd4:	sub	r1, r2, r1
   1ebd8:	udiv	r0, r0, r1
   1ebdc:	str	r0, [fp, #-48]	; 0xffffffd0
   1ebe0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1ebe4:	ldr	r1, [fp, #-12]
   1ebe8:	mvn	r2, #0
   1ebec:	sub	r1, r2, r1
   1ebf0:	cmp	r0, r1
   1ebf4:	bls	1ecf8 <__assert_fail@plt+0xdc58>
   1ebf8:	b	1ed0c <__assert_fail@plt+0xdc6c>
   1ebfc:	ldr	r0, [fp, #-16]
   1ec00:	cmn	r0, #1
   1ec04:	bne	1ec4c <__assert_fail@plt+0xdbac>
   1ec08:	b	1ec24 <__assert_fail@plt+0xdb84>
   1ec0c:	ldr	r0, [fp, #-12]
   1ec10:	add	r0, r0, #-2147483648	; 0x80000000
   1ec14:	movw	r1, #0
   1ec18:	cmp	r1, r0
   1ec1c:	bcc	1ecf8 <__assert_fail@plt+0xdc58>
   1ec20:	b	1ed0c <__assert_fail@plt+0xdc6c>
   1ec24:	ldr	r0, [fp, #-12]
   1ec28:	movw	r1, #0
   1ec2c:	cmp	r1, r0
   1ec30:	bcs	1ed0c <__assert_fail@plt+0xdc6c>
   1ec34:	ldr	r0, [pc, #1912]	; 1f3b4 <__assert_fail@plt+0xe314>
   1ec38:	ldr	r1, [fp, #-12]
   1ec3c:	sub	r1, r1, #1
   1ec40:	cmp	r0, r1
   1ec44:	bcc	1ecf8 <__assert_fail@plt+0xdc58>
   1ec48:	b	1ed0c <__assert_fail@plt+0xdc6c>
   1ec4c:	ldr	r0, [pc, #1892]	; 1f3b8 <__assert_fail@plt+0xe318>
   1ec50:	ldr	r1, [fp, #-16]
   1ec54:	udiv	r0, r0, r1
   1ec58:	ldr	r1, [fp, #-12]
   1ec5c:	cmp	r0, r1
   1ec60:	bcc	1ecf8 <__assert_fail@plt+0xdc58>
   1ec64:	b	1ed0c <__assert_fail@plt+0xdc6c>
   1ec68:	ldr	r0, [fp, #-16]
   1ec6c:	cmp	r0, #0
   1ec70:	bne	1ec78 <__assert_fail@plt+0xdbd8>
   1ec74:	b	1ed0c <__assert_fail@plt+0xdc6c>
   1ec78:	ldr	r0, [fp, #-12]
   1ec7c:	cmp	r0, #0
   1ec80:	bcs	1ece0 <__assert_fail@plt+0xdc40>
   1ec84:	ldr	r0, [fp, #-12]
   1ec88:	cmn	r0, #1
   1ec8c:	bne	1ecc4 <__assert_fail@plt+0xdc24>
   1ec90:	b	1ecac <__assert_fail@plt+0xdc0c>
   1ec94:	ldr	r0, [fp, #-16]
   1ec98:	add	r0, r0, #-2147483648	; 0x80000000
   1ec9c:	movw	r1, #0
   1eca0:	cmp	r1, r0
   1eca4:	bcc	1ecf8 <__assert_fail@plt+0xdc58>
   1eca8:	b	1ed0c <__assert_fail@plt+0xdc6c>
   1ecac:	ldr	r0, [pc, #1792]	; 1f3b4 <__assert_fail@plt+0xe314>
   1ecb0:	ldr	r1, [fp, #-16]
   1ecb4:	sub	r1, r1, #1
   1ecb8:	cmp	r0, r1
   1ecbc:	bcc	1ecf8 <__assert_fail@plt+0xdc58>
   1ecc0:	b	1ed0c <__assert_fail@plt+0xdc6c>
   1ecc4:	ldr	r0, [pc, #1772]	; 1f3b8 <__assert_fail@plt+0xe318>
   1ecc8:	ldr	r1, [fp, #-12]
   1eccc:	udiv	r0, r0, r1
   1ecd0:	ldr	r1, [fp, #-16]
   1ecd4:	cmp	r0, r1
   1ecd8:	bcc	1ecf8 <__assert_fail@plt+0xdc58>
   1ecdc:	b	1ed0c <__assert_fail@plt+0xdc6c>
   1ece0:	ldr	r0, [pc, #1740]	; 1f3b4 <__assert_fail@plt+0xe314>
   1ece4:	ldr	r1, [fp, #-16]
   1ece8:	udiv	r0, r0, r1
   1ecec:	ldr	r1, [fp, #-12]
   1ecf0:	cmp	r0, r1
   1ecf4:	bcs	1ed0c <__assert_fail@plt+0xdc6c>
   1ecf8:	ldr	r0, [fp, #-12]
   1ecfc:	ldr	r1, [fp, #-16]
   1ed00:	mul	r0, r0, r1
   1ed04:	str	r0, [fp, #-20]	; 0xffffffec
   1ed08:	b	1f380 <__assert_fail@plt+0xe2e0>
   1ed0c:	ldr	r0, [fp, #-12]
   1ed10:	ldr	r1, [fp, #-16]
   1ed14:	mul	r0, r0, r1
   1ed18:	str	r0, [fp, #-20]	; 0xffffffec
   1ed1c:	b	1f398 <__assert_fail@plt+0xe2f8>
   1ed20:	ldr	r0, [fp, #-16]
   1ed24:	cmp	r0, #0
   1ed28:	bcs	1ee34 <__assert_fail@plt+0xdd94>
   1ed2c:	ldr	r0, [fp, #-12]
   1ed30:	cmp	r0, #0
   1ed34:	bcs	1edbc <__assert_fail@plt+0xdd1c>
   1ed38:	b	1ed58 <__assert_fail@plt+0xdcb8>
   1ed3c:	ldr	r0, [fp, #-12]
   1ed40:	ldr	r1, [fp, #-16]
   1ed44:	mvn	r2, #0
   1ed48:	udiv	r1, r2, r1
   1ed4c:	cmp	r0, r1
   1ed50:	bcc	1eed0 <__assert_fail@plt+0xde30>
   1ed54:	b	1eee4 <__assert_fail@plt+0xde44>
   1ed58:	b	1ed6c <__assert_fail@plt+0xdccc>
   1ed5c:	ldr	r0, [fp, #-16]
   1ed60:	cmp	r0, #1
   1ed64:	bcc	1ed7c <__assert_fail@plt+0xdcdc>
   1ed68:	b	1ed88 <__assert_fail@plt+0xdce8>
   1ed6c:	ldr	r0, [fp, #-16]
   1ed70:	movw	r1, #0
   1ed74:	cmp	r1, r0
   1ed78:	bcs	1ed88 <__assert_fail@plt+0xdce8>
   1ed7c:	movw	r0, #1
   1ed80:	str	r0, [fp, #-52]	; 0xffffffcc
   1ed84:	b	1eda0 <__assert_fail@plt+0xdd00>
   1ed88:	ldr	r0, [fp, #-16]
   1ed8c:	movw	r1, #0
   1ed90:	sub	r0, r1, r0
   1ed94:	mvn	r1, #0
   1ed98:	udiv	r0, r1, r0
   1ed9c:	str	r0, [fp, #-52]	; 0xffffffcc
   1eda0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1eda4:	ldr	r1, [fp, #-12]
   1eda8:	mvn	r2, #0
   1edac:	sub	r1, r2, r1
   1edb0:	cmp	r0, r1
   1edb4:	bls	1eed0 <__assert_fail@plt+0xde30>
   1edb8:	b	1eee4 <__assert_fail@plt+0xde44>
   1edbc:	b	1edc4 <__assert_fail@plt+0xdd24>
   1edc0:	b	1edc8 <__assert_fail@plt+0xdd28>
   1edc4:	b	1ee18 <__assert_fail@plt+0xdd78>
   1edc8:	ldr	r0, [fp, #-16]
   1edcc:	cmn	r0, #1
   1edd0:	bne	1ee18 <__assert_fail@plt+0xdd78>
   1edd4:	b	1edf0 <__assert_fail@plt+0xdd50>
   1edd8:	ldr	r0, [fp, #-12]
   1eddc:	add	r0, r0, #0
   1ede0:	movw	r1, #0
   1ede4:	cmp	r1, r0
   1ede8:	bcc	1eed0 <__assert_fail@plt+0xde30>
   1edec:	b	1eee4 <__assert_fail@plt+0xde44>
   1edf0:	ldr	r0, [fp, #-12]
   1edf4:	movw	r1, #0
   1edf8:	cmp	r1, r0
   1edfc:	bcs	1eee4 <__assert_fail@plt+0xde44>
   1ee00:	ldr	r0, [fp, #-12]
   1ee04:	sub	r0, r0, #1
   1ee08:	mvn	r1, #0
   1ee0c:	cmp	r1, r0
   1ee10:	bcc	1eed0 <__assert_fail@plt+0xde30>
   1ee14:	b	1eee4 <__assert_fail@plt+0xde44>
   1ee18:	ldr	r0, [fp, #-16]
   1ee1c:	movw	r1, #0
   1ee20:	udiv	r0, r1, r0
   1ee24:	ldr	r1, [fp, #-12]
   1ee28:	cmp	r0, r1
   1ee2c:	bcc	1eed0 <__assert_fail@plt+0xde30>
   1ee30:	b	1eee4 <__assert_fail@plt+0xde44>
   1ee34:	ldr	r0, [fp, #-16]
   1ee38:	cmp	r0, #0
   1ee3c:	bne	1ee44 <__assert_fail@plt+0xdda4>
   1ee40:	b	1eee4 <__assert_fail@plt+0xde44>
   1ee44:	ldr	r0, [fp, #-12]
   1ee48:	cmp	r0, #0
   1ee4c:	bcs	1eeb8 <__assert_fail@plt+0xde18>
   1ee50:	b	1ee58 <__assert_fail@plt+0xddb8>
   1ee54:	b	1ee5c <__assert_fail@plt+0xddbc>
   1ee58:	b	1ee9c <__assert_fail@plt+0xddfc>
   1ee5c:	ldr	r0, [fp, #-12]
   1ee60:	cmn	r0, #1
   1ee64:	bne	1ee9c <__assert_fail@plt+0xddfc>
   1ee68:	b	1ee84 <__assert_fail@plt+0xdde4>
   1ee6c:	ldr	r0, [fp, #-16]
   1ee70:	add	r0, r0, #0
   1ee74:	movw	r1, #0
   1ee78:	cmp	r1, r0
   1ee7c:	bcc	1eed0 <__assert_fail@plt+0xde30>
   1ee80:	b	1eee4 <__assert_fail@plt+0xde44>
   1ee84:	ldr	r0, [fp, #-16]
   1ee88:	sub	r0, r0, #1
   1ee8c:	mvn	r1, #0
   1ee90:	cmp	r1, r0
   1ee94:	bcc	1eed0 <__assert_fail@plt+0xde30>
   1ee98:	b	1eee4 <__assert_fail@plt+0xde44>
   1ee9c:	ldr	r0, [fp, #-12]
   1eea0:	movw	r1, #0
   1eea4:	udiv	r0, r1, r0
   1eea8:	ldr	r1, [fp, #-16]
   1eeac:	cmp	r0, r1
   1eeb0:	bcc	1eed0 <__assert_fail@plt+0xde30>
   1eeb4:	b	1eee4 <__assert_fail@plt+0xde44>
   1eeb8:	ldr	r0, [fp, #-16]
   1eebc:	mvn	r1, #0
   1eec0:	udiv	r0, r1, r0
   1eec4:	ldr	r1, [fp, #-12]
   1eec8:	cmp	r0, r1
   1eecc:	bcs	1eee4 <__assert_fail@plt+0xde44>
   1eed0:	ldr	r0, [fp, #-12]
   1eed4:	ldr	r1, [fp, #-16]
   1eed8:	mul	r0, r0, r1
   1eedc:	str	r0, [fp, #-20]	; 0xffffffec
   1eee0:	b	1f380 <__assert_fail@plt+0xe2e0>
   1eee4:	ldr	r0, [fp, #-12]
   1eee8:	ldr	r1, [fp, #-16]
   1eeec:	mul	r0, r0, r1
   1eef0:	str	r0, [fp, #-20]	; 0xffffffec
   1eef4:	b	1f398 <__assert_fail@plt+0xe2f8>
   1eef8:	b	1f14c <__assert_fail@plt+0xe0ac>
   1eefc:	ldr	r0, [fp, #-16]
   1ef00:	cmp	r0, #0
   1ef04:	bcs	1f064 <__assert_fail@plt+0xdfc4>
   1ef08:	ldr	r0, [fp, #-12]
   1ef0c:	cmp	r0, #0
   1ef10:	bcs	1efe0 <__assert_fail@plt+0xdf40>
   1ef14:	b	1ef18 <__assert_fail@plt+0xde78>
   1ef18:	ldr	r0, [fp, #-12]
   1ef1c:	ldr	r2, [fp, #-16]
   1ef20:	mvn	r1, #0
   1ef24:	mvn	r3, #-2147483648	; 0x80000000
   1ef28:	mov	ip, #0
   1ef2c:	str	r0, [fp, #-56]	; 0xffffffc8
   1ef30:	mov	r0, r1
   1ef34:	mov	r1, r3
   1ef38:	mov	r3, ip
   1ef3c:	bl	1fccc <__assert_fail@plt+0xec2c>
   1ef40:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1ef44:	subs	r0, r2, r0
   1ef48:	rscs	r1, r1, #0
   1ef4c:	str	r0, [fp, #-60]	; 0xffffffc4
   1ef50:	str	r1, [fp, #-64]	; 0xffffffc0
   1ef54:	blt	1f124 <__assert_fail@plt+0xe084>
   1ef58:	b	1f138 <__assert_fail@plt+0xe098>
   1ef5c:	b	1ef70 <__assert_fail@plt+0xded0>
   1ef60:	ldr	r0, [fp, #-16]
   1ef64:	cmp	r0, #1
   1ef68:	bcc	1ef80 <__assert_fail@plt+0xdee0>
   1ef6c:	b	1ef94 <__assert_fail@plt+0xdef4>
   1ef70:	ldr	r0, [fp, #-16]
   1ef74:	movw	r1, #0
   1ef78:	cmp	r1, r0
   1ef7c:	bcs	1ef94 <__assert_fail@plt+0xdef4>
   1ef80:	mov	r0, #0
   1ef84:	mvn	r1, #0
   1ef88:	str	r1, [fp, #-68]	; 0xffffffbc
   1ef8c:	str	r0, [fp, #-72]	; 0xffffffb8
   1ef90:	b	1efb8 <__assert_fail@plt+0xdf18>
   1ef94:	ldr	r0, [fp, #-16]
   1ef98:	rsb	r2, r0, #0
   1ef9c:	mvn	r0, #0
   1efa0:	mvn	r1, #-2147483648	; 0x80000000
   1efa4:	mov	r3, #0
   1efa8:	bl	1fccc <__assert_fail@plt+0xec2c>
   1efac:	str	r0, [fp, #-68]	; 0xffffffbc
   1efb0:	str	r1, [fp, #-72]	; 0xffffffb8
   1efb4:	b	1efb8 <__assert_fail@plt+0xdf18>
   1efb8:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1efbc:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1efc0:	ldr	r2, [fp, #-12]
   1efc4:	mvn	r2, r2
   1efc8:	subs	r1, r2, r1
   1efcc:	rscs	r0, r0, #0
   1efd0:	str	r1, [fp, #-76]	; 0xffffffb4
   1efd4:	str	r0, [fp, #-80]	; 0xffffffb0
   1efd8:	bge	1f124 <__assert_fail@plt+0xe084>
   1efdc:	b	1f138 <__assert_fail@plt+0xe098>
   1efe0:	ldr	r0, [fp, #-16]
   1efe4:	cmn	r0, #1
   1efe8:	bne	1f030 <__assert_fail@plt+0xdf90>
   1efec:	b	1f010 <__assert_fail@plt+0xdf70>
   1eff0:	ldr	r0, [fp, #-12]
   1eff4:	rsbs	r0, r0, #0
   1eff8:	mov	r1, #0
   1effc:	sbcs	r1, r1, #-2147483648	; 0x80000000
   1f000:	str	r0, [fp, #-84]	; 0xffffffac
   1f004:	str	r1, [sp, #88]	; 0x58
   1f008:	blt	1f124 <__assert_fail@plt+0xe084>
   1f00c:	b	1f138 <__assert_fail@plt+0xe098>
   1f010:	ldr	r0, [fp, #-12]
   1f014:	movw	r1, #0
   1f018:	cmp	r1, r0
   1f01c:	bcs	1f138 <__assert_fail@plt+0xe098>
   1f020:	mov	r0, #0
   1f024:	cmp	r0, #0
   1f028:	bne	1f124 <__assert_fail@plt+0xe084>
   1f02c:	b	1f138 <__assert_fail@plt+0xe098>
   1f030:	ldr	r2, [fp, #-16]
   1f034:	mov	r1, #-2147483648	; 0x80000000
   1f038:	mov	r0, #0
   1f03c:	str	r0, [sp, #84]	; 0x54
   1f040:	ldr	r3, [sp, #84]	; 0x54
   1f044:	bl	1fbf8 <__assert_fail@plt+0xeb58>
   1f048:	ldr	r2, [fp, #-12]
   1f04c:	subs	r0, r0, r2
   1f050:	sbcs	r1, r1, #0
   1f054:	str	r0, [sp, #80]	; 0x50
   1f058:	str	r1, [sp, #76]	; 0x4c
   1f05c:	blt	1f124 <__assert_fail@plt+0xe084>
   1f060:	b	1f138 <__assert_fail@plt+0xe098>
   1f064:	ldr	r0, [fp, #-16]
   1f068:	cmp	r0, #0
   1f06c:	bne	1f074 <__assert_fail@plt+0xdfd4>
   1f070:	b	1f138 <__assert_fail@plt+0xe098>
   1f074:	ldr	r0, [fp, #-12]
   1f078:	cmp	r0, #0
   1f07c:	bcs	1f0f4 <__assert_fail@plt+0xe054>
   1f080:	ldr	r0, [fp, #-12]
   1f084:	cmn	r0, #1
   1f088:	bne	1f0c0 <__assert_fail@plt+0xe020>
   1f08c:	b	1f0b0 <__assert_fail@plt+0xe010>
   1f090:	ldr	r0, [fp, #-16]
   1f094:	rsbs	r0, r0, #0
   1f098:	mov	r1, #0
   1f09c:	sbcs	r1, r1, #-2147483648	; 0x80000000
   1f0a0:	str	r0, [sp, #72]	; 0x48
   1f0a4:	str	r1, [sp, #68]	; 0x44
   1f0a8:	blt	1f124 <__assert_fail@plt+0xe084>
   1f0ac:	b	1f138 <__assert_fail@plt+0xe098>
   1f0b0:	mov	r0, #0
   1f0b4:	cmp	r0, #0
   1f0b8:	bne	1f124 <__assert_fail@plt+0xe084>
   1f0bc:	b	1f138 <__assert_fail@plt+0xe098>
   1f0c0:	ldr	r2, [fp, #-12]
   1f0c4:	mov	r1, #-2147483648	; 0x80000000
   1f0c8:	mov	r0, #0
   1f0cc:	str	r0, [sp, #64]	; 0x40
   1f0d0:	ldr	r3, [sp, #64]	; 0x40
   1f0d4:	bl	1fbf8 <__assert_fail@plt+0xeb58>
   1f0d8:	ldr	r2, [fp, #-16]
   1f0dc:	subs	r0, r0, r2
   1f0e0:	sbcs	r1, r1, #0
   1f0e4:	str	r0, [sp, #60]	; 0x3c
   1f0e8:	str	r1, [sp, #56]	; 0x38
   1f0ec:	blt	1f124 <__assert_fail@plt+0xe084>
   1f0f0:	b	1f138 <__assert_fail@plt+0xe098>
   1f0f4:	ldr	r2, [fp, #-16]
   1f0f8:	mvn	r0, #0
   1f0fc:	mvn	r1, #-2147483648	; 0x80000000
   1f100:	mov	r3, #0
   1f104:	bl	1fccc <__assert_fail@plt+0xec2c>
   1f108:	ldr	r2, [fp, #-12]
   1f10c:	subs	r0, r0, r2
   1f110:	sbcs	r1, r1, #0
   1f114:	str	r0, [sp, #52]	; 0x34
   1f118:	str	r1, [sp, #48]	; 0x30
   1f11c:	bge	1f138 <__assert_fail@plt+0xe098>
   1f120:	b	1f124 <__assert_fail@plt+0xe084>
   1f124:	ldr	r0, [fp, #-12]
   1f128:	ldr	r1, [fp, #-16]
   1f12c:	mul	r0, r0, r1
   1f130:	str	r0, [fp, #-20]	; 0xffffffec
   1f134:	b	1f380 <__assert_fail@plt+0xe2e0>
   1f138:	ldr	r0, [fp, #-12]
   1f13c:	ldr	r1, [fp, #-16]
   1f140:	mul	r0, r0, r1
   1f144:	str	r0, [fp, #-20]	; 0xffffffec
   1f148:	b	1f398 <__assert_fail@plt+0xe2f8>
   1f14c:	ldr	r0, [fp, #-16]
   1f150:	cmp	r0, #0
   1f154:	bcs	1f2a0 <__assert_fail@plt+0xe200>
   1f158:	ldr	r0, [fp, #-12]
   1f15c:	cmp	r0, #0
   1f160:	bcs	1f228 <__assert_fail@plt+0xe188>
   1f164:	b	1f1a0 <__assert_fail@plt+0xe100>
   1f168:	ldr	r0, [fp, #-12]
   1f16c:	ldr	r2, [fp, #-16]
   1f170:	mvn	r1, #0
   1f174:	mov	r3, #0
   1f178:	str	r0, [sp, #44]	; 0x2c
   1f17c:	mov	r0, r1
   1f180:	bl	1fccc <__assert_fail@plt+0xec2c>
   1f184:	ldr	r2, [sp, #44]	; 0x2c
   1f188:	subs	r0, r2, r0
   1f18c:	rscs	r1, r1, #0
   1f190:	str	r0, [sp, #40]	; 0x28
   1f194:	str	r1, [sp, #36]	; 0x24
   1f198:	bcc	1f358 <__assert_fail@plt+0xe2b8>
   1f19c:	b	1f36c <__assert_fail@plt+0xe2cc>
   1f1a0:	b	1f1b4 <__assert_fail@plt+0xe114>
   1f1a4:	ldr	r0, [fp, #-16]
   1f1a8:	cmp	r0, #1
   1f1ac:	bcc	1f1c4 <__assert_fail@plt+0xe124>
   1f1b0:	b	1f1d8 <__assert_fail@plt+0xe138>
   1f1b4:	ldr	r0, [fp, #-16]
   1f1b8:	movw	r1, #0
   1f1bc:	cmp	r1, r0
   1f1c0:	bcs	1f1d8 <__assert_fail@plt+0xe138>
   1f1c4:	mov	r0, #1
   1f1c8:	mvn	r1, #0
   1f1cc:	str	r1, [sp, #32]
   1f1d0:	str	r0, [sp, #28]
   1f1d4:	b	1f200 <__assert_fail@plt+0xe160>
   1f1d8:	ldr	r0, [fp, #-16]
   1f1dc:	rsb	r2, r0, #0
   1f1e0:	mvn	r0, #0
   1f1e4:	mov	r3, #0
   1f1e8:	str	r0, [sp, #24]
   1f1ec:	ldr	r1, [sp, #24]
   1f1f0:	bl	1fccc <__assert_fail@plt+0xec2c>
   1f1f4:	str	r0, [sp, #32]
   1f1f8:	str	r1, [sp, #28]
   1f1fc:	b	1f200 <__assert_fail@plt+0xe160>
   1f200:	ldr	r0, [sp, #28]
   1f204:	ldr	r1, [sp, #32]
   1f208:	ldr	r2, [fp, #-12]
   1f20c:	mvn	r2, r2
   1f210:	subs	r1, r2, r1
   1f214:	rscs	r0, r0, #0
   1f218:	str	r1, [sp, #20]
   1f21c:	str	r0, [sp, #16]
   1f220:	bcs	1f358 <__assert_fail@plt+0xe2b8>
   1f224:	b	1f36c <__assert_fail@plt+0xe2cc>
   1f228:	b	1f230 <__assert_fail@plt+0xe190>
   1f22c:	b	1f234 <__assert_fail@plt+0xe194>
   1f230:	b	1f284 <__assert_fail@plt+0xe1e4>
   1f234:	ldr	r0, [fp, #-16]
   1f238:	cmn	r0, #1
   1f23c:	bne	1f284 <__assert_fail@plt+0xe1e4>
   1f240:	b	1f25c <__assert_fail@plt+0xe1bc>
   1f244:	ldr	r0, [fp, #-12]
   1f248:	add	r0, r0, #0
   1f24c:	movw	r1, #0
   1f250:	cmp	r1, r0
   1f254:	bcc	1f358 <__assert_fail@plt+0xe2b8>
   1f258:	b	1f36c <__assert_fail@plt+0xe2cc>
   1f25c:	ldr	r0, [fp, #-12]
   1f260:	movw	r1, #0
   1f264:	cmp	r1, r0
   1f268:	bcs	1f36c <__assert_fail@plt+0xe2cc>
   1f26c:	ldr	r0, [fp, #-12]
   1f270:	sub	r0, r0, #1
   1f274:	mvn	r1, #0
   1f278:	cmp	r1, r0
   1f27c:	bcc	1f358 <__assert_fail@plt+0xe2b8>
   1f280:	b	1f36c <__assert_fail@plt+0xe2cc>
   1f284:	ldr	r0, [fp, #-16]
   1f288:	movw	r1, #0
   1f28c:	udiv	r0, r1, r0
   1f290:	ldr	r1, [fp, #-12]
   1f294:	cmp	r0, r1
   1f298:	bcc	1f358 <__assert_fail@plt+0xe2b8>
   1f29c:	b	1f36c <__assert_fail@plt+0xe2cc>
   1f2a0:	ldr	r0, [fp, #-16]
   1f2a4:	cmp	r0, #0
   1f2a8:	bne	1f2b0 <__assert_fail@plt+0xe210>
   1f2ac:	b	1f36c <__assert_fail@plt+0xe2cc>
   1f2b0:	ldr	r0, [fp, #-12]
   1f2b4:	cmp	r0, #0
   1f2b8:	bcs	1f324 <__assert_fail@plt+0xe284>
   1f2bc:	b	1f2c4 <__assert_fail@plt+0xe224>
   1f2c0:	b	1f2c8 <__assert_fail@plt+0xe228>
   1f2c4:	b	1f308 <__assert_fail@plt+0xe268>
   1f2c8:	ldr	r0, [fp, #-12]
   1f2cc:	cmn	r0, #1
   1f2d0:	bne	1f308 <__assert_fail@plt+0xe268>
   1f2d4:	b	1f2f0 <__assert_fail@plt+0xe250>
   1f2d8:	ldr	r0, [fp, #-16]
   1f2dc:	add	r0, r0, #0
   1f2e0:	movw	r1, #0
   1f2e4:	cmp	r1, r0
   1f2e8:	bcc	1f358 <__assert_fail@plt+0xe2b8>
   1f2ec:	b	1f36c <__assert_fail@plt+0xe2cc>
   1f2f0:	ldr	r0, [fp, #-16]
   1f2f4:	sub	r0, r0, #1
   1f2f8:	mvn	r1, #0
   1f2fc:	cmp	r1, r0
   1f300:	bcc	1f358 <__assert_fail@plt+0xe2b8>
   1f304:	b	1f36c <__assert_fail@plt+0xe2cc>
   1f308:	ldr	r0, [fp, #-12]
   1f30c:	movw	r1, #0
   1f310:	udiv	r0, r1, r0
   1f314:	ldr	r1, [fp, #-16]
   1f318:	cmp	r0, r1
   1f31c:	bcc	1f358 <__assert_fail@plt+0xe2b8>
   1f320:	b	1f36c <__assert_fail@plt+0xe2cc>
   1f324:	ldr	r2, [fp, #-16]
   1f328:	mvn	r0, #0
   1f32c:	mov	r3, #0
   1f330:	str	r0, [sp, #12]
   1f334:	ldr	r1, [sp, #12]
   1f338:	bl	1fccc <__assert_fail@plt+0xec2c>
   1f33c:	ldr	r2, [fp, #-12]
   1f340:	subs	r0, r0, r2
   1f344:	sbcs	r1, r1, #0
   1f348:	str	r0, [sp, #8]
   1f34c:	str	r1, [sp, #4]
   1f350:	bcs	1f36c <__assert_fail@plt+0xe2cc>
   1f354:	b	1f358 <__assert_fail@plt+0xe2b8>
   1f358:	ldr	r0, [fp, #-12]
   1f35c:	ldr	r1, [fp, #-16]
   1f360:	mul	r0, r0, r1
   1f364:	str	r0, [fp, #-20]	; 0xffffffec
   1f368:	b	1f380 <__assert_fail@plt+0xe2e0>
   1f36c:	ldr	r0, [fp, #-12]
   1f370:	ldr	r1, [fp, #-16]
   1f374:	mul	r0, r0, r1
   1f378:	str	r0, [fp, #-20]	; 0xffffffec
   1f37c:	b	1f398 <__assert_fail@plt+0xe2f8>
   1f380:	bl	10fd4 <__errno_location@plt>
   1f384:	movw	lr, #12
   1f388:	str	lr, [r0]
   1f38c:	movw	r0, #0
   1f390:	str	r0, [fp, #-4]
   1f394:	b	1f3a8 <__assert_fail@plt+0xe308>
   1f398:	ldr	r0, [fp, #-8]
   1f39c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1f3a0:	bl	1d83c <__assert_fail@plt+0xc79c>
   1f3a4:	str	r0, [fp, #-4]
   1f3a8:	ldr	r0, [fp, #-4]
   1f3ac:	mov	sp, fp
   1f3b0:	pop	{fp, pc}
   1f3b4:	svcvc	0x00ffffff
   1f3b8:	andhi	r0, r0, r0
   1f3bc:			; <UNDEFINED> instruction: 0xffff8000
   1f3c0:	sub	sp, sp, #12
   1f3c4:	str	r0, [sp, #4]
   1f3c8:	ldr	r0, [sp, #4]
   1f3cc:	sub	r1, r0, #48	; 0x30
   1f3d0:	cmp	r1, #10
   1f3d4:	str	r0, [sp]
   1f3d8:	bcc	1f408 <__assert_fail@plt+0xe368>
   1f3dc:	b	1f3e0 <__assert_fail@plt+0xe340>
   1f3e0:	ldr	r0, [sp]
   1f3e4:	sub	r1, r0, #65	; 0x41
   1f3e8:	cmp	r1, #26
   1f3ec:	bcc	1f408 <__assert_fail@plt+0xe368>
   1f3f0:	b	1f3f4 <__assert_fail@plt+0xe354>
   1f3f4:	ldr	r0, [sp]
   1f3f8:	sub	r1, r0, #97	; 0x61
   1f3fc:	cmp	r1, #25
   1f400:	bhi	1f418 <__assert_fail@plt+0xe378>
   1f404:	b	1f408 <__assert_fail@plt+0xe368>
   1f408:	movw	r0, #1
   1f40c:	and	r0, r0, #1
   1f410:	strb	r0, [sp, #11]
   1f414:	b	1f424 <__assert_fail@plt+0xe384>
   1f418:	movw	r0, #0
   1f41c:	and	r0, r0, #1
   1f420:	strb	r0, [sp, #11]
   1f424:	ldrb	r0, [sp, #11]
   1f428:	and	r0, r0, #1
   1f42c:	add	sp, sp, #12
   1f430:	bx	lr
   1f434:	sub	sp, sp, #12
   1f438:	str	r0, [sp, #4]
   1f43c:	ldr	r0, [sp, #4]
   1f440:	sub	r1, r0, #65	; 0x41
   1f444:	cmp	r1, #26
   1f448:	str	r0, [sp]
   1f44c:	bcc	1f468 <__assert_fail@plt+0xe3c8>
   1f450:	b	1f454 <__assert_fail@plt+0xe3b4>
   1f454:	ldr	r0, [sp]
   1f458:	sub	r1, r0, #97	; 0x61
   1f45c:	cmp	r1, #25
   1f460:	bhi	1f478 <__assert_fail@plt+0xe3d8>
   1f464:	b	1f468 <__assert_fail@plt+0xe3c8>
   1f468:	movw	r0, #1
   1f46c:	and	r0, r0, #1
   1f470:	strb	r0, [sp, #11]
   1f474:	b	1f484 <__assert_fail@plt+0xe3e4>
   1f478:	movw	r0, #0
   1f47c:	and	r0, r0, #1
   1f480:	strb	r0, [sp, #11]
   1f484:	ldrb	r0, [sp, #11]
   1f488:	and	r0, r0, #1
   1f48c:	add	sp, sp, #12
   1f490:	bx	lr
   1f494:	sub	sp, sp, #8
   1f498:	str	r0, [sp]
   1f49c:	ldr	r0, [sp]
   1f4a0:	cmp	r0, #127	; 0x7f
   1f4a4:	bhi	1f4bc <__assert_fail@plt+0xe41c>
   1f4a8:	b	1f4ac <__assert_fail@plt+0xe40c>
   1f4ac:	movw	r0, #1
   1f4b0:	and	r0, r0, #1
   1f4b4:	strb	r0, [sp, #7]
   1f4b8:	b	1f4c8 <__assert_fail@plt+0xe428>
   1f4bc:	movw	r0, #0
   1f4c0:	and	r0, r0, #1
   1f4c4:	strb	r0, [sp, #7]
   1f4c8:	ldrb	r0, [sp, #7]
   1f4cc:	and	r0, r0, #1
   1f4d0:	add	sp, sp, #8
   1f4d4:	bx	lr
   1f4d8:	sub	sp, sp, #8
   1f4dc:	str	r0, [sp, #4]
   1f4e0:	ldr	r0, [sp, #4]
   1f4e4:	cmp	r0, #32
   1f4e8:	movw	r0, #1
   1f4ec:	str	r0, [sp]
   1f4f0:	beq	1f508 <__assert_fail@plt+0xe468>
   1f4f4:	ldr	r0, [sp, #4]
   1f4f8:	cmp	r0, #9
   1f4fc:	movw	r0, #0
   1f500:	moveq	r0, #1
   1f504:	str	r0, [sp]
   1f508:	ldr	r0, [sp]
   1f50c:	and	r0, r0, #1
   1f510:	add	sp, sp, #8
   1f514:	bx	lr
   1f518:	sub	sp, sp, #12
   1f51c:	str	r0, [sp, #4]
   1f520:	ldr	r0, [sp, #4]
   1f524:	cmp	r0, #32
   1f528:	str	r0, [sp]
   1f52c:	bcc	1f544 <__assert_fail@plt+0xe4a4>
   1f530:	b	1f534 <__assert_fail@plt+0xe494>
   1f534:	ldr	r0, [sp]
   1f538:	cmp	r0, #127	; 0x7f
   1f53c:	bne	1f554 <__assert_fail@plt+0xe4b4>
   1f540:	b	1f544 <__assert_fail@plt+0xe4a4>
   1f544:	movw	r0, #1
   1f548:	and	r0, r0, #1
   1f54c:	strb	r0, [sp, #11]
   1f550:	b	1f560 <__assert_fail@plt+0xe4c0>
   1f554:	movw	r0, #0
   1f558:	and	r0, r0, #1
   1f55c:	strb	r0, [sp, #11]
   1f560:	ldrb	r0, [sp, #11]
   1f564:	and	r0, r0, #1
   1f568:	add	sp, sp, #12
   1f56c:	bx	lr
   1f570:	sub	sp, sp, #8
   1f574:	str	r0, [sp]
   1f578:	ldr	r0, [sp]
   1f57c:	sub	r0, r0, #48	; 0x30
   1f580:	cmp	r0, #9
   1f584:	bhi	1f59c <__assert_fail@plt+0xe4fc>
   1f588:	b	1f58c <__assert_fail@plt+0xe4ec>
   1f58c:	movw	r0, #1
   1f590:	and	r0, r0, #1
   1f594:	strb	r0, [sp, #7]
   1f598:	b	1f5a8 <__assert_fail@plt+0xe508>
   1f59c:	movw	r0, #0
   1f5a0:	and	r0, r0, #1
   1f5a4:	strb	r0, [sp, #7]
   1f5a8:	ldrb	r0, [sp, #7]
   1f5ac:	and	r0, r0, #1
   1f5b0:	add	sp, sp, #8
   1f5b4:	bx	lr
   1f5b8:	sub	sp, sp, #8
   1f5bc:	str	r0, [sp]
   1f5c0:	ldr	r0, [sp]
   1f5c4:	sub	r0, r0, #33	; 0x21
   1f5c8:	cmp	r0, #93	; 0x5d
   1f5cc:	bhi	1f5e4 <__assert_fail@plt+0xe544>
   1f5d0:	b	1f5d4 <__assert_fail@plt+0xe534>
   1f5d4:	movw	r0, #1
   1f5d8:	and	r0, r0, #1
   1f5dc:	strb	r0, [sp, #7]
   1f5e0:	b	1f5f0 <__assert_fail@plt+0xe550>
   1f5e4:	movw	r0, #0
   1f5e8:	and	r0, r0, #1
   1f5ec:	strb	r0, [sp, #7]
   1f5f0:	ldrb	r0, [sp, #7]
   1f5f4:	and	r0, r0, #1
   1f5f8:	add	sp, sp, #8
   1f5fc:	bx	lr
   1f600:	sub	sp, sp, #8
   1f604:	str	r0, [sp]
   1f608:	ldr	r0, [sp]
   1f60c:	sub	r0, r0, #97	; 0x61
   1f610:	cmp	r0, #25
   1f614:	bhi	1f62c <__assert_fail@plt+0xe58c>
   1f618:	b	1f61c <__assert_fail@plt+0xe57c>
   1f61c:	movw	r0, #1
   1f620:	and	r0, r0, #1
   1f624:	strb	r0, [sp, #7]
   1f628:	b	1f638 <__assert_fail@plt+0xe598>
   1f62c:	movw	r0, #0
   1f630:	and	r0, r0, #1
   1f634:	strb	r0, [sp, #7]
   1f638:	ldrb	r0, [sp, #7]
   1f63c:	and	r0, r0, #1
   1f640:	add	sp, sp, #8
   1f644:	bx	lr
   1f648:	sub	sp, sp, #8
   1f64c:	str	r0, [sp]
   1f650:	ldr	r0, [sp]
   1f654:	sub	r0, r0, #32
   1f658:	cmp	r0, #94	; 0x5e
   1f65c:	bhi	1f674 <__assert_fail@plt+0xe5d4>
   1f660:	b	1f664 <__assert_fail@plt+0xe5c4>
   1f664:	movw	r0, #1
   1f668:	and	r0, r0, #1
   1f66c:	strb	r0, [sp, #7]
   1f670:	b	1f680 <__assert_fail@plt+0xe5e0>
   1f674:	movw	r0, #0
   1f678:	and	r0, r0, #1
   1f67c:	strb	r0, [sp, #7]
   1f680:	ldrb	r0, [sp, #7]
   1f684:	and	r0, r0, #1
   1f688:	add	sp, sp, #8
   1f68c:	bx	lr
   1f690:	sub	sp, sp, #12
   1f694:	str	r0, [sp, #4]
   1f698:	ldr	r0, [sp, #4]
   1f69c:	sub	r0, r0, #33	; 0x21
   1f6a0:	cmp	r0, #93	; 0x5d
   1f6a4:	str	r0, [sp]
   1f6a8:	bhi	1f844 <__assert_fail@plt+0xe7a4>
   1f6ac:	add	r0, pc, #8
   1f6b0:	ldr	r1, [sp]
   1f6b4:	ldr	r0, [r0, r1, lsl #2]
   1f6b8:	mov	pc, r0
   1f6bc:	andeq	pc, r1, r4, lsr r8	; <UNPREDICTABLE>
   1f6c0:	andeq	pc, r1, r4, lsr r8	; <UNPREDICTABLE>
   1f6c4:	andeq	pc, r1, r4, lsr r8	; <UNPREDICTABLE>
   1f6c8:	andeq	pc, r1, r4, lsr r8	; <UNPREDICTABLE>
   1f6cc:	andeq	pc, r1, r4, lsr r8	; <UNPREDICTABLE>
   1f6d0:	andeq	pc, r1, r4, lsr r8	; <UNPREDICTABLE>
   1f6d4:	andeq	pc, r1, r4, lsr r8	; <UNPREDICTABLE>
   1f6d8:	andeq	pc, r1, r4, lsr r8	; <UNPREDICTABLE>
   1f6dc:	andeq	pc, r1, r4, lsr r8	; <UNPREDICTABLE>
   1f6e0:	andeq	pc, r1, r4, lsr r8	; <UNPREDICTABLE>
   1f6e4:	andeq	pc, r1, r4, lsr r8	; <UNPREDICTABLE>
   1f6e8:	andeq	pc, r1, r4, lsr r8	; <UNPREDICTABLE>
   1f6ec:	andeq	pc, r1, r4, lsr r8	; <UNPREDICTABLE>
   1f6f0:	andeq	pc, r1, r4, lsr r8	; <UNPREDICTABLE>
   1f6f4:	andeq	pc, r1, r4, lsr r8	; <UNPREDICTABLE>
   1f6f8:	andeq	pc, r1, r4, asr #16
   1f6fc:	andeq	pc, r1, r4, asr #16
   1f700:	andeq	pc, r1, r4, asr #16
   1f704:	andeq	pc, r1, r4, asr #16
   1f708:	andeq	pc, r1, r4, asr #16
   1f70c:	andeq	pc, r1, r4, asr #16
   1f710:	andeq	pc, r1, r4, asr #16
   1f714:	andeq	pc, r1, r4, asr #16
   1f718:	andeq	pc, r1, r4, asr #16
   1f71c:	andeq	pc, r1, r4, asr #16
   1f720:	andeq	pc, r1, r4, lsr r8	; <UNPREDICTABLE>
   1f724:	andeq	pc, r1, r4, lsr r8	; <UNPREDICTABLE>
   1f728:	andeq	pc, r1, r4, lsr r8	; <UNPREDICTABLE>
   1f72c:	andeq	pc, r1, r4, lsr r8	; <UNPREDICTABLE>
   1f730:	andeq	pc, r1, r4, lsr r8	; <UNPREDICTABLE>
   1f734:	andeq	pc, r1, r4, lsr r8	; <UNPREDICTABLE>
   1f738:	andeq	pc, r1, r4, lsr r8	; <UNPREDICTABLE>
   1f73c:	andeq	pc, r1, r4, asr #16
   1f740:	andeq	pc, r1, r4, asr #16
   1f744:	andeq	pc, r1, r4, asr #16
   1f748:	andeq	pc, r1, r4, asr #16
   1f74c:	andeq	pc, r1, r4, asr #16
   1f750:	andeq	pc, r1, r4, asr #16
   1f754:	andeq	pc, r1, r4, asr #16
   1f758:	andeq	pc, r1, r4, asr #16
   1f75c:	andeq	pc, r1, r4, asr #16
   1f760:	andeq	pc, r1, r4, asr #16
   1f764:	andeq	pc, r1, r4, asr #16
   1f768:	andeq	pc, r1, r4, asr #16
   1f76c:	andeq	pc, r1, r4, asr #16
   1f770:	andeq	pc, r1, r4, asr #16
   1f774:	andeq	pc, r1, r4, asr #16
   1f778:	andeq	pc, r1, r4, asr #16
   1f77c:	andeq	pc, r1, r4, asr #16
   1f780:	andeq	pc, r1, r4, asr #16
   1f784:	andeq	pc, r1, r4, asr #16
   1f788:	andeq	pc, r1, r4, asr #16
   1f78c:	andeq	pc, r1, r4, asr #16
   1f790:	andeq	pc, r1, r4, asr #16
   1f794:	andeq	pc, r1, r4, asr #16
   1f798:	andeq	pc, r1, r4, asr #16
   1f79c:	andeq	pc, r1, r4, asr #16
   1f7a0:	andeq	pc, r1, r4, asr #16
   1f7a4:	andeq	pc, r1, r4, lsr r8	; <UNPREDICTABLE>
   1f7a8:	andeq	pc, r1, r4, lsr r8	; <UNPREDICTABLE>
   1f7ac:	andeq	pc, r1, r4, lsr r8	; <UNPREDICTABLE>
   1f7b0:	andeq	pc, r1, r4, lsr r8	; <UNPREDICTABLE>
   1f7b4:	andeq	pc, r1, r4, lsr r8	; <UNPREDICTABLE>
   1f7b8:	andeq	pc, r1, r4, lsr r8	; <UNPREDICTABLE>
   1f7bc:	andeq	pc, r1, r4, asr #16
   1f7c0:	andeq	pc, r1, r4, asr #16
   1f7c4:	andeq	pc, r1, r4, asr #16
   1f7c8:	andeq	pc, r1, r4, asr #16
   1f7cc:	andeq	pc, r1, r4, asr #16
   1f7d0:	andeq	pc, r1, r4, asr #16
   1f7d4:	andeq	pc, r1, r4, asr #16
   1f7d8:	andeq	pc, r1, r4, asr #16
   1f7dc:	andeq	pc, r1, r4, asr #16
   1f7e0:	andeq	pc, r1, r4, asr #16
   1f7e4:	andeq	pc, r1, r4, asr #16
   1f7e8:	andeq	pc, r1, r4, asr #16
   1f7ec:	andeq	pc, r1, r4, asr #16
   1f7f0:	andeq	pc, r1, r4, asr #16
   1f7f4:	andeq	pc, r1, r4, asr #16
   1f7f8:	andeq	pc, r1, r4, asr #16
   1f7fc:	andeq	pc, r1, r4, asr #16
   1f800:	andeq	pc, r1, r4, asr #16
   1f804:	andeq	pc, r1, r4, asr #16
   1f808:	andeq	pc, r1, r4, asr #16
   1f80c:	andeq	pc, r1, r4, asr #16
   1f810:	andeq	pc, r1, r4, asr #16
   1f814:	andeq	pc, r1, r4, asr #16
   1f818:	andeq	pc, r1, r4, asr #16
   1f81c:	andeq	pc, r1, r4, asr #16
   1f820:	andeq	pc, r1, r4, asr #16
   1f824:	andeq	pc, r1, r4, lsr r8	; <UNPREDICTABLE>
   1f828:	andeq	pc, r1, r4, lsr r8	; <UNPREDICTABLE>
   1f82c:	andeq	pc, r1, r4, lsr r8	; <UNPREDICTABLE>
   1f830:	andeq	pc, r1, r4, lsr r8	; <UNPREDICTABLE>
   1f834:	movw	r0, #1
   1f838:	and	r0, r0, #1
   1f83c:	strb	r0, [sp, #11]
   1f840:	b	1f850 <__assert_fail@plt+0xe7b0>
   1f844:	movw	r0, #0
   1f848:	and	r0, r0, #1
   1f84c:	strb	r0, [sp, #11]
   1f850:	ldrb	r0, [sp, #11]
   1f854:	and	r0, r0, #1
   1f858:	add	sp, sp, #12
   1f85c:	bx	lr
   1f860:	sub	sp, sp, #12
   1f864:	str	r0, [sp, #4]
   1f868:	ldr	r0, [sp, #4]
   1f86c:	sub	r1, r0, #9
   1f870:	cmp	r1, #5
   1f874:	str	r0, [sp]
   1f878:	bcc	1f890 <__assert_fail@plt+0xe7f0>
   1f87c:	b	1f880 <__assert_fail@plt+0xe7e0>
   1f880:	ldr	r0, [sp]
   1f884:	cmp	r0, #32
   1f888:	bne	1f8a0 <__assert_fail@plt+0xe800>
   1f88c:	b	1f890 <__assert_fail@plt+0xe7f0>
   1f890:	movw	r0, #1
   1f894:	and	r0, r0, #1
   1f898:	strb	r0, [sp, #11]
   1f89c:	b	1f8ac <__assert_fail@plt+0xe80c>
   1f8a0:	movw	r0, #0
   1f8a4:	and	r0, r0, #1
   1f8a8:	strb	r0, [sp, #11]
   1f8ac:	ldrb	r0, [sp, #11]
   1f8b0:	and	r0, r0, #1
   1f8b4:	add	sp, sp, #12
   1f8b8:	bx	lr
   1f8bc:	sub	sp, sp, #8
   1f8c0:	str	r0, [sp]
   1f8c4:	ldr	r0, [sp]
   1f8c8:	sub	r0, r0, #65	; 0x41
   1f8cc:	cmp	r0, #25
   1f8d0:	bhi	1f8e8 <__assert_fail@plt+0xe848>
   1f8d4:	b	1f8d8 <__assert_fail@plt+0xe838>
   1f8d8:	movw	r0, #1
   1f8dc:	and	r0, r0, #1
   1f8e0:	strb	r0, [sp, #7]
   1f8e4:	b	1f8f4 <__assert_fail@plt+0xe854>
   1f8e8:	movw	r0, #0
   1f8ec:	and	r0, r0, #1
   1f8f0:	strb	r0, [sp, #7]
   1f8f4:	ldrb	r0, [sp, #7]
   1f8f8:	and	r0, r0, #1
   1f8fc:	add	sp, sp, #8
   1f900:	bx	lr
   1f904:	sub	sp, sp, #12
   1f908:	str	r0, [sp, #4]
   1f90c:	ldr	r0, [sp, #4]
   1f910:	sub	r1, r0, #48	; 0x30
   1f914:	cmp	r1, #10
   1f918:	str	r0, [sp]
   1f91c:	bcc	1f94c <__assert_fail@plt+0xe8ac>
   1f920:	b	1f924 <__assert_fail@plt+0xe884>
   1f924:	ldr	r0, [sp]
   1f928:	sub	r1, r0, #65	; 0x41
   1f92c:	cmp	r1, #6
   1f930:	bcc	1f94c <__assert_fail@plt+0xe8ac>
   1f934:	b	1f938 <__assert_fail@plt+0xe898>
   1f938:	ldr	r0, [sp]
   1f93c:	sub	r1, r0, #97	; 0x61
   1f940:	cmp	r1, #5
   1f944:	bhi	1f95c <__assert_fail@plt+0xe8bc>
   1f948:	b	1f94c <__assert_fail@plt+0xe8ac>
   1f94c:	movw	r0, #1
   1f950:	and	r0, r0, #1
   1f954:	strb	r0, [sp, #11]
   1f958:	b	1f968 <__assert_fail@plt+0xe8c8>
   1f95c:	movw	r0, #0
   1f960:	and	r0, r0, #1
   1f964:	strb	r0, [sp, #11]
   1f968:	ldrb	r0, [sp, #11]
   1f96c:	and	r0, r0, #1
   1f970:	add	sp, sp, #12
   1f974:	bx	lr
   1f978:	sub	sp, sp, #8
   1f97c:	str	r0, [sp]
   1f980:	ldr	r0, [sp]
   1f984:	sub	r0, r0, #65	; 0x41
   1f988:	cmp	r0, #25
   1f98c:	bhi	1f9a8 <__assert_fail@plt+0xe908>
   1f990:	b	1f994 <__assert_fail@plt+0xe8f4>
   1f994:	ldr	r0, [sp]
   1f998:	sub	r0, r0, #65	; 0x41
   1f99c:	add	r0, r0, #97	; 0x61
   1f9a0:	str	r0, [sp, #4]
   1f9a4:	b	1f9b0 <__assert_fail@plt+0xe910>
   1f9a8:	ldr	r0, [sp]
   1f9ac:	str	r0, [sp, #4]
   1f9b0:	ldr	r0, [sp, #4]
   1f9b4:	add	sp, sp, #8
   1f9b8:	bx	lr
   1f9bc:	sub	sp, sp, #8
   1f9c0:	str	r0, [sp]
   1f9c4:	ldr	r0, [sp]
   1f9c8:	sub	r0, r0, #97	; 0x61
   1f9cc:	cmp	r0, #25
   1f9d0:	bhi	1f9ec <__assert_fail@plt+0xe94c>
   1f9d4:	b	1f9d8 <__assert_fail@plt+0xe938>
   1f9d8:	ldr	r0, [sp]
   1f9dc:	sub	r0, r0, #97	; 0x61
   1f9e0:	add	r0, r0, #65	; 0x41
   1f9e4:	str	r0, [sp, #4]
   1f9e8:	b	1f9f4 <__assert_fail@plt+0xe954>
   1f9ec:	ldr	r0, [sp]
   1f9f0:	str	r0, [sp, #4]
   1f9f4:	ldr	r0, [sp, #4]
   1f9f8:	add	sp, sp, #8
   1f9fc:	bx	lr
   1fa00:	push	{r4, r5, fp, lr}
   1fa04:	add	fp, sp, #8
   1fa08:	sub	sp, sp, #272	; 0x110
   1fa0c:	add	r1, sp, #7
   1fa10:	str	r0, [fp, #-16]
   1fa14:	ldr	r0, [fp, #-16]
   1fa18:	movw	r2, #257	; 0x101
   1fa1c:	bl	1fa9c <__assert_fail@plt+0xe9fc>
   1fa20:	cmp	r0, #0
   1fa24:	beq	1fa38 <__assert_fail@plt+0xe998>
   1fa28:	movw	r0, #0
   1fa2c:	and	r0, r0, #1
   1fa30:	strb	r0, [fp, #-9]
   1fa34:	b	1fa8c <__assert_fail@plt+0xe9ec>
   1fa38:	add	r0, sp, #7
   1fa3c:	movw	r1, #2073	; 0x819
   1fa40:	movt	r1, #2
   1fa44:	bl	10e48 <strcmp@plt>
   1fa48:	cmp	r0, #0
   1fa4c:	movw	r0, #1
   1fa50:	str	r0, [sp]
   1fa54:	beq	1fa78 <__assert_fail@plt+0xe9d8>
   1fa58:	add	r0, sp, #7
   1fa5c:	movw	r1, #6364	; 0x18dc
   1fa60:	movt	r1, #2
   1fa64:	bl	10e48 <strcmp@plt>
   1fa68:	cmp	r0, #0
   1fa6c:	movw	r0, #0
   1fa70:	moveq	r0, #1
   1fa74:	str	r0, [sp]
   1fa78:	ldr	r0, [sp]
   1fa7c:	mvn	r1, #0
   1fa80:	eor	r0, r0, r1
   1fa84:	and	r0, r0, #1
   1fa88:	strb	r0, [fp, #-9]
   1fa8c:	ldrb	r0, [fp, #-9]
   1fa90:	and	r0, r0, #1
   1fa94:	sub	sp, fp, #8
   1fa98:	pop	{r4, r5, fp, pc}
   1fa9c:	push	{fp, lr}
   1faa0:	mov	fp, sp
   1faa4:	sub	sp, sp, #16
   1faa8:	str	r0, [fp, #-4]
   1faac:	str	r1, [sp, #8]
   1fab0:	str	r2, [sp, #4]
   1fab4:	ldr	r0, [fp, #-4]
   1fab8:	ldr	r1, [sp, #8]
   1fabc:	ldr	r2, [sp, #4]
   1fac0:	bl	1facc <__assert_fail@plt+0xea2c>
   1fac4:	mov	sp, fp
   1fac8:	pop	{fp, pc}
   1facc:	push	{fp, lr}
   1fad0:	mov	fp, sp
   1fad4:	sub	sp, sp, #24
   1fad8:	str	r0, [fp, #-8]
   1fadc:	str	r1, [sp, #12]
   1fae0:	str	r2, [sp, #8]
   1fae4:	ldr	r0, [fp, #-8]
   1fae8:	bl	1fbcc <__assert_fail@plt+0xeb2c>
   1faec:	str	r0, [sp, #4]
   1faf0:	ldr	r0, [sp, #4]
   1faf4:	movw	r1, #0
   1faf8:	cmp	r0, r1
   1fafc:	bne	1fb24 <__assert_fail@plt+0xea84>
   1fb00:	ldr	r0, [sp, #8]
   1fb04:	cmp	r0, #0
   1fb08:	bls	1fb18 <__assert_fail@plt+0xea78>
   1fb0c:	ldr	r0, [sp, #12]
   1fb10:	movw	r1, #0
   1fb14:	strb	r1, [r0]
   1fb18:	movw	r0, #22
   1fb1c:	str	r0, [fp, #-4]
   1fb20:	b	1fba0 <__assert_fail@plt+0xeb00>
   1fb24:	ldr	r0, [sp, #4]
   1fb28:	bl	10fb0 <strlen@plt>
   1fb2c:	str	r0, [sp]
   1fb30:	ldr	r0, [sp]
   1fb34:	ldr	lr, [sp, #8]
   1fb38:	cmp	r0, lr
   1fb3c:	bcs	1fb60 <__assert_fail@plt+0xeac0>
   1fb40:	ldr	r0, [sp, #12]
   1fb44:	ldr	r1, [sp, #4]
   1fb48:	ldr	r2, [sp]
   1fb4c:	add	r2, r2, #1
   1fb50:	bl	10e9c <memcpy@plt>
   1fb54:	movw	r0, #0
   1fb58:	str	r0, [fp, #-4]
   1fb5c:	b	1fba0 <__assert_fail@plt+0xeb00>
   1fb60:	ldr	r0, [sp, #8]
   1fb64:	cmp	r0, #0
   1fb68:	bls	1fb98 <__assert_fail@plt+0xeaf8>
   1fb6c:	ldr	r0, [sp, #12]
   1fb70:	ldr	r1, [sp, #4]
   1fb74:	ldr	r2, [sp, #8]
   1fb78:	sub	r2, r2, #1
   1fb7c:	bl	10e9c <memcpy@plt>
   1fb80:	ldr	r0, [sp, #12]
   1fb84:	ldr	r1, [sp, #8]
   1fb88:	sub	r1, r1, #1
   1fb8c:	add	r0, r0, r1
   1fb90:	movw	r1, #0
   1fb94:	strb	r1, [r0]
   1fb98:	movw	r0, #34	; 0x22
   1fb9c:	str	r0, [fp, #-4]
   1fba0:	ldr	r0, [fp, #-4]
   1fba4:	mov	sp, fp
   1fba8:	pop	{fp, pc}
   1fbac:	push	{fp, lr}
   1fbb0:	mov	fp, sp
   1fbb4:	sub	sp, sp, #8
   1fbb8:	str	r0, [sp, #4]
   1fbbc:	ldr	r0, [sp, #4]
   1fbc0:	bl	1fbcc <__assert_fail@plt+0xeb2c>
   1fbc4:	mov	sp, fp
   1fbc8:	pop	{fp, pc}
   1fbcc:	push	{fp, lr}
   1fbd0:	mov	fp, sp
   1fbd4:	sub	sp, sp, #8
   1fbd8:	str	r0, [sp, #4]
   1fbdc:	ldr	r0, [sp, #4]
   1fbe0:	movw	r1, #0
   1fbe4:	bl	11028 <setlocale@plt>
   1fbe8:	str	r0, [sp]
   1fbec:	ldr	r0, [sp]
   1fbf0:	mov	sp, fp
   1fbf4:	pop	{fp, pc}
   1fbf8:	cmp	r3, #0
   1fbfc:	cmpeq	r2, #0
   1fc00:	bne	1fc24 <__assert_fail@plt+0xeb84>
   1fc04:	cmp	r1, #0
   1fc08:	movlt	r1, #-2147483648	; 0x80000000
   1fc0c:	movlt	r0, #0
   1fc10:	blt	1fc20 <__assert_fail@plt+0xeb80>
   1fc14:	cmpeq	r0, #0
   1fc18:	mvnne	r1, #-2147483648	; 0x80000000
   1fc1c:	mvnne	r0, #0
   1fc20:	b	1fd08 <__assert_fail@plt+0xec68>
   1fc24:	sub	sp, sp, #8
   1fc28:	push	{sp, lr}
   1fc2c:	cmp	r1, #0
   1fc30:	blt	1fc50 <__assert_fail@plt+0xebb0>
   1fc34:	cmp	r3, #0
   1fc38:	blt	1fc84 <__assert_fail@plt+0xebe4>
   1fc3c:	bl	1fd18 <__assert_fail@plt+0xec78>
   1fc40:	ldr	lr, [sp, #4]
   1fc44:	add	sp, sp, #8
   1fc48:	pop	{r2, r3}
   1fc4c:	bx	lr
   1fc50:	rsbs	r0, r0, #0
   1fc54:	sbc	r1, r1, r1, lsl #1
   1fc58:	cmp	r3, #0
   1fc5c:	blt	1fca8 <__assert_fail@plt+0xec08>
   1fc60:	bl	1fd18 <__assert_fail@plt+0xec78>
   1fc64:	ldr	lr, [sp, #4]
   1fc68:	add	sp, sp, #8
   1fc6c:	pop	{r2, r3}
   1fc70:	rsbs	r0, r0, #0
   1fc74:	sbc	r1, r1, r1, lsl #1
   1fc78:	rsbs	r2, r2, #0
   1fc7c:	sbc	r3, r3, r3, lsl #1
   1fc80:	bx	lr
   1fc84:	rsbs	r2, r2, #0
   1fc88:	sbc	r3, r3, r3, lsl #1
   1fc8c:	bl	1fd18 <__assert_fail@plt+0xec78>
   1fc90:	ldr	lr, [sp, #4]
   1fc94:	add	sp, sp, #8
   1fc98:	pop	{r2, r3}
   1fc9c:	rsbs	r0, r0, #0
   1fca0:	sbc	r1, r1, r1, lsl #1
   1fca4:	bx	lr
   1fca8:	rsbs	r2, r2, #0
   1fcac:	sbc	r3, r3, r3, lsl #1
   1fcb0:	bl	1fd18 <__assert_fail@plt+0xec78>
   1fcb4:	ldr	lr, [sp, #4]
   1fcb8:	add	sp, sp, #8
   1fcbc:	pop	{r2, r3}
   1fcc0:	rsbs	r2, r2, #0
   1fcc4:	sbc	r3, r3, r3, lsl #1
   1fcc8:	bx	lr
   1fccc:	cmp	r3, #0
   1fcd0:	cmpeq	r2, #0
   1fcd4:	bne	1fcec <__assert_fail@plt+0xec4c>
   1fcd8:	cmp	r1, #0
   1fcdc:	cmpeq	r0, #0
   1fce0:	mvnne	r1, #0
   1fce4:	mvnne	r0, #0
   1fce8:	b	1fd08 <__assert_fail@plt+0xec68>
   1fcec:	sub	sp, sp, #8
   1fcf0:	push	{sp, lr}
   1fcf4:	bl	1fd18 <__assert_fail@plt+0xec78>
   1fcf8:	ldr	lr, [sp, #4]
   1fcfc:	add	sp, sp, #8
   1fd00:	pop	{r2, r3}
   1fd04:	bx	lr
   1fd08:	push	{r1, lr}
   1fd0c:	mov	r0, #8
   1fd10:	bl	10e3c <raise@plt>
   1fd14:	pop	{r1, pc}
   1fd18:	cmp	r1, r3
   1fd1c:	cmpeq	r0, r2
   1fd20:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1fd24:	mov	r4, r0
   1fd28:	movcc	r0, #0
   1fd2c:	mov	r5, r1
   1fd30:	ldr	lr, [sp, #36]	; 0x24
   1fd34:	movcc	r1, r0
   1fd38:	bcc	1fe34 <__assert_fail@plt+0xed94>
   1fd3c:	cmp	r3, #0
   1fd40:	clzeq	ip, r2
   1fd44:	clzne	ip, r3
   1fd48:	addeq	ip, ip, #32
   1fd4c:	cmp	r5, #0
   1fd50:	clzeq	r1, r4
   1fd54:	addeq	r1, r1, #32
   1fd58:	clzne	r1, r5
   1fd5c:	sub	ip, ip, r1
   1fd60:	sub	sl, ip, #32
   1fd64:	lsl	r9, r3, ip
   1fd68:	rsb	fp, ip, #32
   1fd6c:	orr	r9, r9, r2, lsl sl
   1fd70:	orr	r9, r9, r2, lsr fp
   1fd74:	lsl	r8, r2, ip
   1fd78:	cmp	r5, r9
   1fd7c:	cmpeq	r4, r8
   1fd80:	movcc	r0, #0
   1fd84:	movcc	r1, r0
   1fd88:	bcc	1fda4 <__assert_fail@plt+0xed04>
   1fd8c:	mov	r0, #1
   1fd90:	subs	r4, r4, r8
   1fd94:	lsl	r1, r0, sl
   1fd98:	orr	r1, r1, r0, lsr fp
   1fd9c:	lsl	r0, r0, ip
   1fda0:	sbc	r5, r5, r9
   1fda4:	cmp	ip, #0
   1fda8:	beq	1fe34 <__assert_fail@plt+0xed94>
   1fdac:	lsr	r6, r8, #1
   1fdb0:	orr	r6, r6, r9, lsl #31
   1fdb4:	lsr	r7, r9, #1
   1fdb8:	mov	r2, ip
   1fdbc:	b	1fde0 <__assert_fail@plt+0xed40>
   1fdc0:	subs	r3, r4, r6
   1fdc4:	sbc	r8, r5, r7
   1fdc8:	adds	r3, r3, r3
   1fdcc:	adc	r8, r8, r8
   1fdd0:	adds	r4, r3, #1
   1fdd4:	adc	r5, r8, #0
   1fdd8:	subs	r2, r2, #1
   1fddc:	beq	1fdfc <__assert_fail@plt+0xed5c>
   1fde0:	cmp	r5, r7
   1fde4:	cmpeq	r4, r6
   1fde8:	bcs	1fdc0 <__assert_fail@plt+0xed20>
   1fdec:	adds	r4, r4, r4
   1fdf0:	adc	r5, r5, r5
   1fdf4:	subs	r2, r2, #1
   1fdf8:	bne	1fde0 <__assert_fail@plt+0xed40>
   1fdfc:	lsr	r3, r4, ip
   1fe00:	orr	r3, r3, r5, lsl fp
   1fe04:	lsr	r2, r5, ip
   1fe08:	orr	r3, r3, r5, lsr sl
   1fe0c:	adds	r0, r0, r4
   1fe10:	mov	r4, r3
   1fe14:	lsl	r3, r2, ip
   1fe18:	orr	r3, r3, r4, lsl sl
   1fe1c:	lsl	ip, r4, ip
   1fe20:	orr	r3, r3, r4, lsr fp
   1fe24:	adc	r1, r1, r5
   1fe28:	subs	r0, r0, ip
   1fe2c:	mov	r5, r2
   1fe30:	sbc	r1, r1, r3
   1fe34:	cmp	lr, #0
   1fe38:	strdne	r4, [lr]
   1fe3c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1fe40:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1fe44:	mov	r7, r0
   1fe48:	ldr	r6, [pc, #72]	; 1fe98 <__assert_fail@plt+0xedf8>
   1fe4c:	ldr	r5, [pc, #72]	; 1fe9c <__assert_fail@plt+0xedfc>
   1fe50:	add	r6, pc, r6
   1fe54:	add	r5, pc, r5
   1fe58:	sub	r6, r6, r5
   1fe5c:	mov	r8, r1
   1fe60:	mov	r9, r2
   1fe64:	bl	10e04 <calloc@plt-0x20>
   1fe68:	asrs	r6, r6, #2
   1fe6c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1fe70:	mov	r4, #0
   1fe74:	add	r4, r4, #1
   1fe78:	ldr	r3, [r5], #4
   1fe7c:	mov	r2, r9
   1fe80:	mov	r1, r8
   1fe84:	mov	r0, r7
   1fe88:	blx	r3
   1fe8c:	cmp	r6, r4
   1fe90:	bne	1fe74 <__assert_fail@plt+0xedd4>
   1fe94:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1fe98:	strheq	r2, [r1], -r4
   1fe9c:	andeq	r2, r1, ip, lsr #1
   1fea0:	bx	lr
   1fea4:	ldr	r3, [pc, #12]	; 1feb8 <__assert_fail@plt+0xee18>
   1fea8:	mov	r1, #0
   1feac:	add	r3, pc, r3
   1feb0:	ldr	r2, [r3]
   1feb4:	b	10fe0 <__cxa_atexit@plt>
   1feb8:	andeq	r2, r1, r8, lsr r2

Disassembly of section .fini:

0001febc <.fini>:
   1febc:	push	{r3, lr}
   1fec0:	pop	{r3, pc}
