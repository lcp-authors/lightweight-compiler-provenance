
../repos/prog2/3.2:     file format elf32-littlearm


Disassembly of section .init:

0001075c <.init>:
   1075c:	push	{r3, lr}
   10760:	bl	1080c <_start@@Base+0x3c>
   10764:	pop	{r3, pc}

Disassembly of section .plt:

00010768 <printf@plt-0x14>:
   10768:	push	{lr}		; (str lr, [sp, #-4]!)
   1076c:	ldr	lr, [pc, #4]	; 10778 <printf@plt-0x4>
   10770:	add	lr, pc, lr
   10774:	ldr	pc, [lr, #8]!
   10778:	andeq	r1, r1, r8, lsl #17

0001077c <printf@plt>:
   1077c:	add	ip, pc, #0, 12
   10780:	add	ip, ip, #69632	; 0x11000
   10784:	ldr	pc, [ip, #2184]!	; 0x888

00010788 <puts@plt>:
   10788:	add	ip, pc, #0, 12
   1078c:	add	ip, ip, #69632	; 0x11000
   10790:	ldr	pc, [ip, #2176]!	; 0x880

00010794 <__libc_start_main@plt>:
   10794:	add	ip, pc, #0, 12
   10798:	add	ip, ip, #69632	; 0x11000
   1079c:	ldr	pc, [ip, #2168]!	; 0x878

000107a0 <__gmon_start__@plt>:
   107a0:	add	ip, pc, #0, 12
   107a4:	add	ip, ip, #69632	; 0x11000
   107a8:	ldr	pc, [ip, #2160]!	; 0x870

000107ac <strlen@plt>:
   107ac:	add	ip, pc, #0, 12
   107b0:	add	ip, ip, #69632	; 0x11000
   107b4:	ldr	pc, [ip, #2152]!	; 0x868

000107b8 <putchar@plt>:
   107b8:	add	ip, pc, #0, 12
   107bc:	add	ip, ip, #69632	; 0x11000
   107c0:	ldr	pc, [ip, #2144]!	; 0x860

000107c4 <abort@plt>:
   107c4:	add	ip, pc, #0, 12
   107c8:	add	ip, ip, #69632	; 0x11000
   107cc:	ldr	pc, [ip, #2136]!	; 0x858

Disassembly of section .text:

000107d0 <_start@@Base>:
   107d0:	mov	fp, #0
   107d4:	mov	lr, #0
   107d8:	pop	{r1}		; (ldr r1, [sp], #4)
   107dc:	mov	r2, sp
   107e0:	push	{r2}		; (str r2, [sp, #-4]!)
   107e4:	push	{r0}		; (str r0, [sp, #-4]!)
   107e8:	ldr	ip, [pc, #16]	; 10800 <_start@@Base+0x30>
   107ec:	push	{ip}		; (str ip, [sp, #-4]!)
   107f0:	ldr	r0, [pc, #12]	; 10804 <_start@@Base+0x34>
   107f4:	ldr	r3, [pc, #12]	; 10808 <_start@@Base+0x38>
   107f8:	bl	10794 <__libc_start_main@plt>
   107fc:	bl	107c4 <abort@plt>
   10800:	andeq	r1, r1, ip, asr r0
   10804:	andeq	r0, r1, ip, lsl #23
   10808:	strdeq	r0, [r1], -ip
   1080c:	ldr	r3, [pc, #20]	; 10828 <_start@@Base+0x58>
   10810:	ldr	r2, [pc, #20]	; 1082c <_start@@Base+0x5c>
   10814:	add	r3, pc, r3
   10818:	ldr	r2, [r3, r2]
   1081c:	cmp	r2, #0
   10820:	bxeq	lr
   10824:	b	107a0 <__gmon_start__@plt>
   10828:	andeq	r1, r1, r4, ror #15
   1082c:	andeq	r0, r0, r8, lsr #32
   10830:	ldr	r0, [pc, #24]	; 10850 <_start@@Base+0x80>
   10834:	ldr	r3, [pc, #24]	; 10854 <_start@@Base+0x84>
   10838:	cmp	r3, r0
   1083c:	bxeq	lr
   10840:	ldr	r3, [pc, #16]	; 10858 <_start@@Base+0x88>
   10844:	cmp	r3, #0
   10848:	bxeq	lr
   1084c:	bx	r3
   10850:	andeq	r2, r2, r4, lsr r0
   10854:	andeq	r2, r2, r4, lsr r0
   10858:	andeq	r0, r0, r0
   1085c:	ldr	r0, [pc, #36]	; 10888 <_start@@Base+0xb8>
   10860:	ldr	r1, [pc, #36]	; 1088c <_start@@Base+0xbc>
   10864:	sub	r1, r1, r0
   10868:	asr	r1, r1, #2
   1086c:	add	r1, r1, r1, lsr #31
   10870:	asrs	r1, r1, #1
   10874:	bxeq	lr
   10878:	ldr	r3, [pc, #16]	; 10890 <_start@@Base+0xc0>
   1087c:	cmp	r3, #0
   10880:	bxeq	lr
   10884:	bx	r3
   10888:	andeq	r2, r2, r4, lsr r0
   1088c:	andeq	r2, r2, r4, lsr r0
   10890:	andeq	r0, r0, r0
   10894:	push	{r4, lr}
   10898:	ldr	r4, [pc, #24]	; 108b8 <_start@@Base+0xe8>
   1089c:	ldrb	r3, [r4]
   108a0:	cmp	r3, #0
   108a4:	popne	{r4, pc}
   108a8:	bl	10830 <_start@@Base+0x60>
   108ac:	mov	r3, #1
   108b0:	strb	r3, [r4]
   108b4:	pop	{r4, pc}
   108b8:	andeq	r2, r2, r4, lsr r0
   108bc:	b	1085c <_start@@Base+0x8c>

000108c0 <comp_int_asc@@Base>:
   108c0:	ldr	r2, [r0]
   108c4:	ldr	r1, [r1]
   108c8:	mov	r0, #0
   108cc:	cmp	r2, r1
   108d0:	movwgt	r0, #1
   108d4:	cmp	r1, r2
   108d8:	mvngt	r0, #0
   108dc:	bx	lr

000108e0 <get_elem@@Base>:
   108e0:	mla	r0, r2, r1, r0
   108e4:	bx	lr

000108e8 <swap@@Base>:
   108e8:	cmp	r2, #1
   108ec:	bxlt	lr
   108f0:	ldrb	ip, [r0]
   108f4:	ldrb	r3, [r1]
   108f8:	subs	r2, r2, #1
   108fc:	strb	r3, [r0], #1
   10900:	strb	ip, [r1], #1
   10904:	bne	108f0 <swap@@Base+0x8>
   10908:	bx	lr

0001090c <sort@@Base>:
   1090c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10910:	add	fp, sp, #28
   10914:	sub	sp, sp, #20
   10918:	cmp	r1, #1
   1091c:	str	r0, [sp, #8]
   10920:	blt	109c8 <sort@@Base+0xbc>
   10924:	ldr	r9, [sp, #8]
   10928:	mov	r4, r3
   1092c:	mov	r5, r2
   10930:	sub	sl, r1, #1
   10934:	str	r1, [sp, #4]
   10938:	add	r6, r9, r2
   1093c:	mov	r2, #0
   10940:	ldr	r0, [sp, #8]
   10944:	str	r6, [sp, #16]
   10948:	mla	r7, r2, r5, r0
   1094c:	add	r2, r2, #1
   10950:	cmp	r2, r1
   10954:	str	r2, [sp, #12]
   10958:	bge	10980 <sort@@Base+0x74>
   1095c:	mov	r8, sl
   10960:	mov	r0, r6
   10964:	mov	r1, r7
   10968:	blx	r4
   1096c:	cmp	r0, #0
   10970:	movmi	r7, r6
   10974:	add	r6, r6, r5
   10978:	subs	r8, r8, #1
   1097c:	bne	10960 <sort@@Base+0x54>
   10980:	cmp	r5, #1
   10984:	blt	109a8 <sort@@Base+0x9c>
   10988:	mov	r0, r9
   1098c:	mov	r1, r5
   10990:	ldrb	r2, [r7]
   10994:	ldrb	r3, [r0]
   10998:	subs	r1, r1, #1
   1099c:	strb	r3, [r7], #1
   109a0:	strb	r2, [r0], #1
   109a4:	bne	10990 <sort@@Base+0x84>
   109a8:	ldr	r6, [sp, #16]
   109ac:	ldr	r1, [sp, #4]
   109b0:	ldr	r2, [sp, #12]
   109b4:	add	r9, r9, r5
   109b8:	sub	sl, sl, #1
   109bc:	add	r6, r6, r5
   109c0:	cmp	r2, r1
   109c4:	bne	10940 <sort@@Base+0x34>
   109c8:	sub	sp, fp, #28
   109cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000109d0 <linear_search@@Base>:
   109d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   109d4:	add	fp, sp, #28
   109d8:	sub	sp, sp, #4
   109dc:	mov	r4, r0
   109e0:	mov	r0, #0
   109e4:	cmp	r2, #1
   109e8:	blt	10a34 <linear_search@@Base+0x64>
   109ec:	ldr	r9, [fp, #8]
   109f0:	mov	sl, r3
   109f4:	mov	r8, r2
   109f8:	mov	r7, r1
   109fc:	mov	r6, r2
   10a00:	mov	r5, r1
   10a04:	mov	r0, r7
   10a08:	mov	r1, r4
   10a0c:	blx	r9
   10a10:	cmp	r0, #0
   10a14:	beq	10a30 <linear_search@@Base+0x60>
   10a18:	add	r7, r7, r8
   10a1c:	add	r5, r5, sl
   10a20:	subs	r6, r6, #1
   10a24:	bne	10a04 <linear_search@@Base+0x34>
   10a28:	mov	r0, #0
   10a2c:	b	10a34 <linear_search@@Base+0x64>
   10a30:	mov	r0, r5
   10a34:	sub	sp, fp, #28
   10a38:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00010a3c <binary_search@@Base>:
   10a3c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10a40:	add	fp, sp, #28
   10a44:	push	{r3}		; (str r3, [sp, #-4]!)
   10a48:	cmp	r2, #1
   10a4c:	blt	10aac <binary_search@@Base+0x70>
   10a50:	ldr	r9, [fp, #8]
   10a54:	mov	sl, r1
   10a58:	mov	r6, r0
   10a5c:	sub	r4, r2, #1
   10a60:	mov	r5, #0
   10a64:	add	r0, r4, r5
   10a68:	add	r0, r0, r0, lsr #31
   10a6c:	asr	r8, r0, #1
   10a70:	ldr	r0, [sp]
   10a74:	mla	r7, r8, r0, sl
   10a78:	mov	r0, r6
   10a7c:	mov	r1, r7
   10a80:	blx	r9
   10a84:	cmp	r0, #0
   10a88:	bne	10ab0 <binary_search@@Base+0x74>
   10a8c:	mov	r0, r6
   10a90:	mov	r1, r7
   10a94:	blx	r9
   10a98:	cmn	r0, #1
   10a9c:	subeq	r4, r8, #1
   10aa0:	addne	r5, r8, #1
   10aa4:	cmp	r5, r4
   10aa8:	ble	10a64 <binary_search@@Base+0x28>
   10aac:	mov	r7, #0
   10ab0:	mov	r0, r7
   10ab4:	sub	sp, fp, #28
   10ab8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00010abc <insertion_sort@@Base>:
   10abc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10ac0:	add	fp, sp, #28
   10ac4:	sub	sp, sp, #12
   10ac8:	cmp	r1, #2
   10acc:	str	r3, [sp, #8]
   10ad0:	str	r1, [sp]
   10ad4:	blt	10b68 <insertion_sort@@Base+0xac>
   10ad8:	mov	r5, r2
   10adc:	mov	r7, r0
   10ae0:	rsb	r6, r2, #0
   10ae4:	mov	r9, #1
   10ae8:	mov	sl, r0
   10aec:	mov	r8, #0
   10af0:	mov	r4, r9
   10af4:	str	sl, [sp, #4]
   10af8:	mla	r0, r4, r5, r7
   10afc:	sub	r4, r4, #1
   10b00:	ldr	r2, [sp, #8]
   10b04:	mla	r1, r4, r5, r7
   10b08:	blx	r2
   10b0c:	cmn	r0, #1
   10b10:	bne	10b50 <insertion_sort@@Base+0x94>
   10b14:	cmp	r5, #1
   10b18:	blt	10b40 <insertion_sort@@Base+0x84>
   10b1c:	add	r0, sl, r5
   10b20:	mov	r1, #0
   10b24:	ldrb	r2, [r0, r1]
   10b28:	ldrb	r3, [sl, r1]
   10b2c:	strb	r3, [r0, r1]
   10b30:	strb	r2, [sl, r1]
   10b34:	add	r1, r1, #1
   10b38:	cmp	r5, r1
   10b3c:	bne	10b24 <insertion_sort@@Base+0x68>
   10b40:	add	r8, r8, #1
   10b44:	add	sl, sl, r6
   10b48:	cmp	r8, r9
   10b4c:	bne	10af8 <insertion_sort@@Base+0x3c>
   10b50:	ldr	sl, [sp, #4]
   10b54:	ldr	r0, [sp]
   10b58:	add	r9, r9, #1
   10b5c:	add	sl, sl, r5
   10b60:	cmp	r9, r0
   10b64:	bne	10aec <insertion_sort@@Base+0x30>
   10b68:	sub	sp, fp, #28
   10b6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00010b70 <comp_char_desc@@Base>:
   10b70:	ldrb	r2, [r0]
   10b74:	ldrb	r1, [r1]
   10b78:	mov	r0, #0
   10b7c:	cmp	r2, r1
   10b80:	mvnhi	r0, #0
   10b84:	movwcc	r0, #1
   10b88:	bx	lr

00010b8c <main@@Base>:
   10b8c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   10b90:	add	fp, sp, #24
   10b94:	vpush	{d8-d10}
   10b98:	sub	sp, sp, #32
   10b9c:	movw	r0, #4208	; 0x1070
   10ba0:	add	r8, sp, #8
   10ba4:	movt	r0, #1
   10ba8:	vld1.64	{d8-d9}, [r0]!
   10bac:	vldr	d10, [r0]
   10bb0:	mov	r0, r8
   10bb4:	vst1.64	{d8-d9}, [r0]!
   10bb8:	vstr	d10, [r0]
   10bbc:	movw	r0, #4232	; 0x1088
   10bc0:	movt	r0, #1
   10bc4:	bl	10788 <puts@plt>
   10bc8:	movw	r0, #4246	; 0x1096
   10bcc:	movt	r0, #1
   10bd0:	bl	1077c <printf@plt>
   10bd4:	movw	r4, #4253	; 0x109d
   10bd8:	mov	r6, #0
   10bdc:	movt	r4, #1
   10be0:	ldr	r1, [r8, -r6, lsl #2]
   10be4:	mov	r0, r4
   10be8:	bl	1077c <printf@plt>
   10bec:	sub	r6, r6, #1
   10bf0:	cmn	r6, #6
   10bf4:	bne	10be0 <main@@Base+0x54>
   10bf8:	mov	r0, #10
   10bfc:	bl	107b8 <putchar@plt>
   10c00:	orr	lr, r8, #4
   10c04:	mov	ip, #0
   10c08:	mov	r6, #5
   10c0c:	mov	r3, r8
   10c10:	add	r4, r8, ip, lsl #2
   10c14:	add	ip, ip, #1
   10c18:	cmp	ip, #5
   10c1c:	bhi	10c48 <main@@Base+0xbc>
   10c20:	mov	r2, r6
   10c24:	mov	r0, lr
   10c28:	mov	r7, lr
   10c2c:	ldr	r1, [r7], #4
   10c30:	ldr	r5, [r4]
   10c34:	cmp	r5, r1
   10c38:	movgt	r4, r0
   10c3c:	subs	r2, r2, #1
   10c40:	mov	r0, r7
   10c44:	bne	10c2c <main@@Base+0xa0>
   10c48:	mov	r0, #0
   10c4c:	ldrb	r1, [r4, r0]
   10c50:	ldrb	r2, [r3, r0]
   10c54:	strb	r2, [r4, r0]
   10c58:	strb	r1, [r3, r0]
   10c5c:	add	r0, r0, #1
   10c60:	cmp	r0, #4
   10c64:	bne	10c4c <main@@Base+0xc0>
   10c68:	add	r3, r3, #4
   10c6c:	sub	r6, r6, #1
   10c70:	add	lr, lr, #4
   10c74:	cmp	ip, #6
   10c78:	bne	10c10 <main@@Base+0x84>
   10c7c:	movw	r0, #4257	; 0x10a1
   10c80:	movt	r0, #1
   10c84:	bl	1077c <printf@plt>
   10c88:	movw	r4, #4253	; 0x109d
   10c8c:	mov	r6, #0
   10c90:	add	r5, sp, #8
   10c94:	movt	r4, #1
   10c98:	ldr	r1, [r5, -r6, lsl #2]
   10c9c:	mov	r0, r4
   10ca0:	bl	1077c <printf@plt>
   10ca4:	sub	r6, r6, #1
   10ca8:	cmn	r6, #6
   10cac:	bne	10c98 <main@@Base+0x10c>
   10cb0:	mov	r0, #10
   10cb4:	bl	107b8 <putchar@plt>
   10cb8:	mov	r0, r5
   10cbc:	vst1.64	{d8-d9}, [r0]!
   10cc0:	vstr	d10, [r0]
   10cc4:	movw	r0, #4265	; 0x10a9
   10cc8:	movt	r0, #1
   10ccc:	bl	10788 <puts@plt>
   10cd0:	mov	r2, #0
   10cd4:	ldr	r0, [r5]
   10cd8:	cmp	r0, #4
   10cdc:	beq	10d04 <main@@Base+0x178>
   10ce0:	add	r2, r2, #1
   10ce4:	add	r5, r5, #6
   10ce8:	cmp	r2, #6
   10cec:	bne	10cd4 <main@@Base+0x148>
   10cf0:	movw	r0, #4320	; 0x10e0
   10cf4:	mov	r1, #4
   10cf8:	movt	r0, #1
   10cfc:	bl	1077c <printf@plt>
   10d00:	b	10d14 <main@@Base+0x188>
   10d04:	movw	r0, #4275	; 0x10b3
   10d08:	mov	r1, #4
   10d0c:	movt	r0, #1
   10d10:	bl	1077c <printf@plt>
   10d14:	add	ip, sp, #8
   10d18:	mov	lr, #0
   10d1c:	mov	r6, #5
   10d20:	mov	r0, ip
   10d24:	orr	r8, ip, #4
   10d28:	vst1.64	{d8-d9}, [r0]!
   10d2c:	vstr	d10, [r0]
   10d30:	mov	r0, ip
   10d34:	add	r4, ip, lr, lsl #2
   10d38:	add	lr, lr, #1
   10d3c:	cmp	lr, #5
   10d40:	bhi	10d6c <main@@Base+0x1e0>
   10d44:	mov	r3, r6
   10d48:	mov	r1, r8
   10d4c:	mov	r7, r8
   10d50:	ldr	r2, [r7], #4
   10d54:	ldr	r5, [r4]
   10d58:	cmp	r5, r2
   10d5c:	movgt	r4, r1
   10d60:	subs	r3, r3, #1
   10d64:	mov	r1, r7
   10d68:	bne	10d50 <main@@Base+0x1c4>
   10d6c:	mov	r1, #0
   10d70:	ldrb	r2, [r4, r1]
   10d74:	ldrb	r3, [r0, r1]
   10d78:	strb	r3, [r4, r1]
   10d7c:	strb	r2, [r0, r1]
   10d80:	add	r1, r1, #1
   10d84:	cmp	r1, #4
   10d88:	bne	10d70 <main@@Base+0x1e4>
   10d8c:	add	r0, r0, #4
   10d90:	sub	r6, r6, #1
   10d94:	add	r8, r8, #4
   10d98:	cmp	lr, #6
   10d9c:	bne	10d34 <main@@Base+0x1a8>
   10da0:	movw	r0, #4354	; 0x1102
   10da4:	movt	r0, #1
   10da8:	bl	10788 <puts@plt>
   10dac:	mov	r0, #0
   10db0:	mov	r1, #5
   10db4:	add	r8, sp, #8
   10db8:	add	r2, r0, r1
   10dbc:	mov	r7, #0
   10dc0:	mov	r6, #0
   10dc4:	add	r2, r2, r2, lsr #31
   10dc8:	asr	r2, r2, #1
   10dcc:	ldr	r3, [r8, r2, lsl #2]
   10dd0:	cmp	r3, #3
   10dd4:	movwgt	r7, #1
   10dd8:	cmp	r3, #4
   10ddc:	movwgt	r6, #1
   10de0:	cmp	r6, r7
   10de4:	beq	10e10 <main@@Base+0x284>
   10de8:	cmp	r3, #4
   10dec:	subgt	r1, r2, #1
   10df0:	addle	r0, r2, #1
   10df4:	cmp	r0, r1
   10df8:	ble	10db8 <main@@Base+0x22c>
   10dfc:	movw	r0, #4320	; 0x10e0
   10e00:	mov	r1, #4
   10e04:	movt	r0, #1
   10e08:	bl	1077c <printf@plt>
   10e0c:	b	10e24 <main@@Base+0x298>
   10e10:	movw	r0, #4275	; 0x10b3
   10e14:	sbfx	r2, r2, #0, #30
   10e18:	mov	r1, #4
   10e1c:	movt	r0, #1
   10e20:	bl	1077c <printf@plt>
   10e24:	mov	r0, r8
   10e28:	vst1.64	{d8-d9}, [r0]!
   10e2c:	vstr	d10, [r0]
   10e30:	movw	r0, #4364	; 0x110c
   10e34:	movt	r0, #1
   10e38:	bl	10788 <puts@plt>
   10e3c:	movw	r0, #4246	; 0x1096
   10e40:	movt	r0, #1
   10e44:	bl	1077c <printf@plt>
   10e48:	movw	r4, #4253	; 0x109d
   10e4c:	mov	r6, #0
   10e50:	movt	r4, #1
   10e54:	ldr	r1, [r8, -r6, lsl #2]
   10e58:	mov	r0, r4
   10e5c:	bl	1077c <printf@plt>
   10e60:	sub	r6, r6, #1
   10e64:	cmn	r6, #6
   10e68:	bne	10e54 <main@@Base+0x2c8>
   10e6c:	mov	r0, #10
   10e70:	bl	107b8 <putchar@plt>
   10e74:	mov	r0, #1
   10e78:	mov	ip, r8
   10e7c:	mov	r2, #0
   10e80:	mov	r3, ip
   10e84:	mov	r4, r0
   10e88:	sub	r7, r4, #1
   10e8c:	ldr	r6, [r8, r4, lsl #2]
   10e90:	ldr	r1, [r8, r7, lsl #2]
   10e94:	cmp	r1, r6
   10e98:	ble	10edc <main@@Base+0x350>
   10e9c:	strb	r1, [r8, r4, lsl #2]
   10ea0:	strb	r6, [r8, r7, lsl #2]
   10ea4:	mov	r6, #0
   10ea8:	add	r1, r3, r6
   10eac:	add	r6, r6, #1
   10eb0:	ldrb	r4, [r1, #1]
   10eb4:	ldrb	r5, [r1, #5]
   10eb8:	cmp	r6, #3
   10ebc:	strb	r4, [r1, #5]
   10ec0:	strb	r5, [r1, #1]
   10ec4:	bne	10ea8 <main@@Base+0x31c>
   10ec8:	add	r2, r2, #1
   10ecc:	sub	r3, r3, #4
   10ed0:	mov	r4, r7
   10ed4:	cmp	r2, r0
   10ed8:	bne	10e88 <main@@Base+0x2fc>
   10edc:	add	r0, r0, #1
   10ee0:	add	ip, ip, #4
   10ee4:	cmp	r0, #6
   10ee8:	bne	10e7c <main@@Base+0x2f0>
   10eec:	movw	r0, #4257	; 0x10a1
   10ef0:	movt	r0, #1
   10ef4:	bl	1077c <printf@plt>
   10ef8:	movw	r4, #4253	; 0x109d
   10efc:	mov	r5, #0
   10f00:	add	r6, sp, #8
   10f04:	movt	r4, #1
   10f08:	ldr	r1, [r6, -r5, lsl #2]
   10f0c:	mov	r0, r4
   10f10:	bl	1077c <printf@plt>
   10f14:	sub	r5, r5, #1
   10f18:	cmn	r5, #6
   10f1c:	bne	10f08 <main@@Base+0x37c>
   10f20:	mov	r0, #10
   10f24:	bl	107b8 <putchar@plt>
   10f28:	movw	r0, #4374	; 0x1116
   10f2c:	movt	r0, #1
   10f30:	bl	10788 <puts@plt>
   10f34:	movw	r0, #25153	; 0x6241
   10f38:	mov	r9, #0
   10f3c:	movt	r0, #24922	; 0x615a
   10f40:	strb	r9, [sp, #4]
   10f44:	str	r0, [sp]
   10f48:	movw	r0, #4246	; 0x1096
   10f4c:	movt	r0, #1
   10f50:	bl	1077c <printf@plt>
   10f54:	mov	r8, sp
   10f58:	mov	r0, r8
   10f5c:	bl	10788 <puts@plt>
   10f60:	mov	r0, r8
   10f64:	bl	107ac <strlen@plt>
   10f68:	cmp	r0, #1
   10f6c:	blt	10fd8 <main@@Base+0x44c>
   10f70:	sub	lr, r0, #1
   10f74:	orr	r5, r8, #1
   10f78:	add	ip, r8, r9
   10f7c:	add	r9, r9, #1
   10f80:	cmp	r9, r0
   10f84:	mov	r3, ip
   10f88:	bge	10fb8 <main@@Base+0x42c>
   10f8c:	mov	r1, lr
   10f90:	mov	r2, r5
   10f94:	mov	r3, ip
   10f98:	mov	r7, r5
   10f9c:	ldrb	r4, [r3]
   10fa0:	ldrb	r6, [r7], #1
   10fa4:	cmp	r6, r4
   10fa8:	movhi	r3, r2
   10fac:	subs	r1, r1, #1
   10fb0:	mov	r2, r7
   10fb4:	bne	10f9c <main@@Base+0x410>
   10fb8:	ldrb	r1, [r3]
   10fbc:	ldrb	r2, [ip]
   10fc0:	sub	lr, lr, #1
   10fc4:	add	r5, r5, #1
   10fc8:	cmp	r9, r0
   10fcc:	strb	r2, [r3]
   10fd0:	strb	r1, [ip]
   10fd4:	bne	10f78 <main@@Base+0x3ec>
   10fd8:	movw	r0, #4257	; 0x10a1
   10fdc:	movt	r0, #1
   10fe0:	bl	1077c <printf@plt>
   10fe4:	mov	r0, sp
   10fe8:	bl	10788 <puts@plt>
   10fec:	mov	r0, #0
   10ff0:	sub	sp, fp, #48	; 0x30
   10ff4:	vpop	{d8-d10}
   10ff8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00010ffc <__libc_csu_init@@Base>:
   10ffc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11000:	mov	r7, r0
   11004:	ldr	r6, [pc, #72]	; 11054 <__libc_csu_init@@Base+0x58>
   11008:	ldr	r5, [pc, #72]	; 11058 <__libc_csu_init@@Base+0x5c>
   1100c:	add	r6, pc, r6
   11010:	add	r5, pc, r5
   11014:	sub	r6, r6, r5
   11018:	mov	r8, r1
   1101c:	mov	r9, r2
   11020:	bl	1075c <printf@plt-0x20>
   11024:	asrs	r6, r6, #2
   11028:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1102c:	mov	r4, #0
   11030:	add	r4, r4, #1
   11034:	ldr	r3, [r5], #4
   11038:	mov	r2, r9
   1103c:	mov	r1, r8
   11040:	mov	r0, r7
   11044:	blx	r3
   11048:	cmp	r6, r4
   1104c:	bne	11030 <__libc_csu_init@@Base+0x34>
   11050:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11054:	strdeq	r0, [r1], -r8
   11058:	strdeq	r0, [r1], -r0	; <UNPREDICTABLE>

0001105c <__libc_csu_fini@@Base>:
   1105c:	bx	lr

Disassembly of section .fini:

00011060 <.fini>:
   11060:	push	{r3, lr}
   11064:	pop	{r3, pc}
