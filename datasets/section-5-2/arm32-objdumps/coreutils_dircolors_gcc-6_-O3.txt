
../repos/coreutils/src/dircolors:     file format elf32-littlearm


Disassembly of section .init:

00010d3c <.init>:
   10d3c:	push	{r3, lr}
   10d40:	bl	114bc <close@plt+0x4fc>
   10d44:	pop	{r3, pc}

Disassembly of section .plt:

00010d48 <calloc@plt-0x14>:
   10d48:	push	{lr}		; (str lr, [sp, #-4]!)
   10d4c:	ldr	lr, [pc, #4]	; 10d58 <calloc@plt-0x4>
   10d50:	add	lr, pc, lr
   10d54:	ldr	pc, [lr, #8]!
   10d58:	andeq	sl, r1, r8, lsr #5

00010d5c <calloc@plt>:
   10d5c:	add	ip, pc, #0, 12
   10d60:	add	ip, ip, #106496	; 0x1a000
   10d64:	ldr	pc, [ip, #680]!	; 0x2a8

00010d68 <fputs_unlocked@plt>:
   10d68:	add	ip, pc, #0, 12
   10d6c:	add	ip, ip, #106496	; 0x1a000
   10d70:	ldr	pc, [ip, #672]!	; 0x2a0

00010d74 <raise@plt>:
   10d74:	add	ip, pc, #0, 12
   10d78:	add	ip, ip, #106496	; 0x1a000
   10d7c:	ldr	pc, [ip, #664]!	; 0x298

00010d80 <__getdelim@plt>:
   10d80:	add	ip, pc, #0, 12
   10d84:	add	ip, ip, #106496	; 0x1a000
   10d88:	ldr	pc, [ip, #656]!	; 0x290

00010d8c <strcmp@plt>:
   10d8c:	add	ip, pc, #0, 12
   10d90:	add	ip, ip, #106496	; 0x1a000
   10d94:	ldr	pc, [ip, #648]!	; 0x288

00010d98 <fflush@plt>:
   10d98:	add	ip, pc, #0, 12
   10d9c:	add	ip, ip, #106496	; 0x1a000
   10da0:	ldr	pc, [ip, #640]!	; 0x280

00010da4 <free@plt>:
   10da4:	add	ip, pc, #0, 12
   10da8:	add	ip, ip, #106496	; 0x1a000
   10dac:	ldr	pc, [ip, #632]!	; 0x278

00010db0 <_exit@plt>:
   10db0:	add	ip, pc, #0, 12
   10db4:	add	ip, ip, #106496	; 0x1a000
   10db8:	ldr	pc, [ip, #624]!	; 0x270

00010dbc <memcpy@plt>:
   10dbc:	add	ip, pc, #0, 12
   10dc0:	add	ip, ip, #106496	; 0x1a000
   10dc4:	ldr	pc, [ip, #616]!	; 0x268

00010dc8 <mbsinit@plt>:
   10dc8:	add	ip, pc, #0, 12
   10dcc:	add	ip, ip, #106496	; 0x1a000
   10dd0:	ldr	pc, [ip, #608]!	; 0x260

00010dd4 <fwrite_unlocked@plt>:
   10dd4:	add	ip, pc, #0, 12
   10dd8:	add	ip, ip, #106496	; 0x1a000
   10ddc:	ldr	pc, [ip, #600]!	; 0x258

00010de0 <memcmp@plt>:
   10de0:	add	ip, pc, #0, 12
   10de4:	add	ip, ip, #106496	; 0x1a000
   10de8:	ldr	pc, [ip, #592]!	; 0x250

00010dec <fputc_unlocked@plt>:
   10dec:	add	ip, pc, #0, 12
   10df0:	add	ip, ip, #106496	; 0x1a000
   10df4:	ldr	pc, [ip, #584]!	; 0x248

00010df8 <dcgettext@plt>:
   10df8:	add	ip, pc, #0, 12
   10dfc:	add	ip, ip, #106496	; 0x1a000
   10e00:	ldr	pc, [ip, #576]!	; 0x240

00010e04 <dup2@plt>:
   10e04:	add	ip, pc, #0, 12
   10e08:	add	ip, ip, #106496	; 0x1a000
   10e0c:	ldr	pc, [ip, #568]!	; 0x238

00010e10 <realloc@plt>:
   10e10:	add	ip, pc, #0, 12
   10e14:	add	ip, ip, #106496	; 0x1a000
   10e18:	ldr	pc, [ip, #560]!	; 0x230

00010e1c <textdomain@plt>:
   10e1c:	add	ip, pc, #0, 12
   10e20:	add	ip, ip, #106496	; 0x1a000
   10e24:	ldr	pc, [ip, #552]!	; 0x228

00010e28 <iswprint@plt>:
   10e28:	add	ip, pc, #0, 12
   10e2c:	add	ip, ip, #106496	; 0x1a000
   10e30:	ldr	pc, [ip, #544]!	; 0x220

00010e34 <fwrite@plt>:
   10e34:	add	ip, pc, #0, 12
   10e38:	add	ip, ip, #106496	; 0x1a000
   10e3c:	ldr	pc, [ip, #536]!	; 0x218

00010e40 <lseek64@plt>:
   10e40:	add	ip, pc, #0, 12
   10e44:	add	ip, ip, #106496	; 0x1a000
   10e48:	ldr	pc, [ip, #528]!	; 0x210

00010e4c <__ctype_get_mb_cur_max@plt>:
   10e4c:	add	ip, pc, #0, 12
   10e50:	add	ip, ip, #106496	; 0x1a000
   10e54:	ldr	pc, [ip, #520]!	; 0x208

00010e58 <__fpending@plt>:
   10e58:	add	ip, pc, #0, 12
   10e5c:	add	ip, ip, #106496	; 0x1a000
   10e60:	ldr	pc, [ip, #512]!	; 0x200

00010e64 <mbrtowc@plt>:
   10e64:	add	ip, pc, #0, 12
   10e68:	add	ip, ip, #106496	; 0x1a000
   10e6c:	ldr	pc, [ip, #504]!	; 0x1f8

00010e70 <error@plt>:
   10e70:	add	ip, pc, #0, 12
   10e74:	add	ip, ip, #106496	; 0x1a000
   10e78:	ldr	pc, [ip, #496]!	; 0x1f0

00010e7c <fnmatch@plt>:
   10e7c:	add	ip, pc, #0, 12
   10e80:	add	ip, ip, #106496	; 0x1a000
   10e84:	ldr	pc, [ip, #488]!	; 0x1e8

00010e88 <open64@plt>:
   10e88:	add	ip, pc, #0, 12
   10e8c:	add	ip, ip, #106496	; 0x1a000
   10e90:	ldr	pc, [ip, #480]!	; 0x1e0

00010e94 <getenv@plt>:
   10e94:	add	ip, pc, #0, 12
   10e98:	add	ip, ip, #106496	; 0x1a000
   10e9c:	ldr	pc, [ip, #472]!	; 0x1d8

00010ea0 <puts@plt>:
   10ea0:	add	ip, pc, #0, 12
   10ea4:	add	ip, ip, #106496	; 0x1a000
   10ea8:	ldr	pc, [ip, #464]!	; 0x1d0

00010eac <malloc@plt>:
   10eac:	add	ip, pc, #0, 12
   10eb0:	add	ip, ip, #106496	; 0x1a000
   10eb4:	ldr	pc, [ip, #456]!	; 0x1c8

00010eb8 <__libc_start_main@plt>:
   10eb8:	add	ip, pc, #0, 12
   10ebc:	add	ip, ip, #106496	; 0x1a000
   10ec0:	ldr	pc, [ip, #448]!	; 0x1c0

00010ec4 <__freading@plt>:
   10ec4:	add	ip, pc, #0, 12
   10ec8:	add	ip, ip, #106496	; 0x1a000
   10ecc:	ldr	pc, [ip, #440]!	; 0x1b8

00010ed0 <__gmon_start__@plt>:
   10ed0:	add	ip, pc, #0, 12
   10ed4:	add	ip, ip, #106496	; 0x1a000
   10ed8:	ldr	pc, [ip, #432]!	; 0x1b0

00010edc <freopen64@plt>:
   10edc:	add	ip, pc, #0, 12
   10ee0:	add	ip, ip, #106496	; 0x1a000
   10ee4:	ldr	pc, [ip, #424]!	; 0x1a8

00010ee8 <getopt_long@plt>:
   10ee8:	add	ip, pc, #0, 12
   10eec:	add	ip, ip, #106496	; 0x1a000
   10ef0:	ldr	pc, [ip, #416]!	; 0x1a0

00010ef4 <__ctype_b_loc@plt>:
   10ef4:	add	ip, pc, #0, 12
   10ef8:	add	ip, ip, #106496	; 0x1a000
   10efc:	ldr	pc, [ip, #408]!	; 0x198

00010f00 <exit@plt>:
   10f00:	add	ip, pc, #0, 12
   10f04:	add	ip, ip, #106496	; 0x1a000
   10f08:	ldr	pc, [ip, #400]!	; 0x190

00010f0c <strlen@plt>:
   10f0c:	add	ip, pc, #0, 12
   10f10:	add	ip, ip, #106496	; 0x1a000
   10f14:	ldr	pc, [ip, #392]!	; 0x188

00010f18 <__errno_location@plt>:
   10f18:	add	ip, pc, #0, 12
   10f1c:	add	ip, ip, #106496	; 0x1a000
   10f20:	ldr	pc, [ip, #384]!	; 0x180

00010f24 <__cxa_atexit@plt>:
   10f24:	add	ip, pc, #0, 12
   10f28:	add	ip, ip, #106496	; 0x1a000
   10f2c:	ldr	pc, [ip, #376]!	; 0x178

00010f30 <memset@plt>:
   10f30:	add	ip, pc, #0, 12
   10f34:	add	ip, ip, #106496	; 0x1a000
   10f38:	ldr	pc, [ip, #368]!	; 0x170

00010f3c <__printf_chk@plt>:
   10f3c:	add	ip, pc, #0, 12
   10f40:	add	ip, ip, #106496	; 0x1a000
   10f44:	ldr	pc, [ip, #360]!	; 0x168

00010f48 <fileno@plt>:
   10f48:	add	ip, pc, #0, 12
   10f4c:	add	ip, ip, #106496	; 0x1a000
   10f50:	ldr	pc, [ip, #352]!	; 0x160

00010f54 <__fprintf_chk@plt>:
   10f54:	add	ip, pc, #0, 12
   10f58:	add	ip, ip, #106496	; 0x1a000
   10f5c:	ldr	pc, [ip, #344]!	; 0x158

00010f60 <fclose@plt>:
   10f60:	add	ip, pc, #0, 12
   10f64:	add	ip, ip, #106496	; 0x1a000
   10f68:	ldr	pc, [ip, #336]!	; 0x150

00010f6c <fseeko64@plt>:
   10f6c:	add	ip, pc, #0, 12
   10f70:	add	ip, ip, #106496	; 0x1a000
   10f74:	ldr	pc, [ip, #328]!	; 0x148

00010f78 <setlocale@plt>:
   10f78:	add	ip, pc, #0, 12
   10f7c:	add	ip, ip, #106496	; 0x1a000
   10f80:	ldr	pc, [ip, #320]!	; 0x140

00010f84 <strrchr@plt>:
   10f84:	add	ip, pc, #0, 12
   10f88:	add	ip, ip, #106496	; 0x1a000
   10f8c:	ldr	pc, [ip, #312]!	; 0x138

00010f90 <nl_langinfo@plt>:
   10f90:	add	ip, pc, #0, 12
   10f94:	add	ip, ip, #106496	; 0x1a000
   10f98:	ldr	pc, [ip, #304]!	; 0x130

00010f9c <bindtextdomain@plt>:
   10f9c:	add	ip, pc, #0, 12
   10fa0:	add	ip, ip, #106496	; 0x1a000
   10fa4:	ldr	pc, [ip, #296]!	; 0x128

00010fa8 <strncmp@plt>:
   10fa8:	add	ip, pc, #0, 12
   10fac:	add	ip, ip, #106496	; 0x1a000
   10fb0:	ldr	pc, [ip, #288]!	; 0x120

00010fb4 <abort@plt>:
   10fb4:	add	ip, pc, #0, 12
   10fb8:	add	ip, ip, #106496	; 0x1a000
   10fbc:	ldr	pc, [ip, #280]!	; 0x118

00010fc0 <close@plt>:
   10fc0:	add	ip, pc, #0, 12
   10fc4:	add	ip, ip, #106496	; 0x1a000
   10fc8:	ldr	pc, [ip, #272]!	; 0x110

Disassembly of section .text:

00010fcc <_obstack_begin@@Base-0x169c>:
   10fcc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10fd0:	mov	r6, r0
   10fd4:	sub	sp, sp, #12
   10fd8:	ldr	r0, [r1]
   10fdc:	mov	r4, r1
   10fe0:	bl	12a58 <_obstack_memory_used@@Base+0x34>
   10fe4:	ldr	r1, [pc, #1036]	; 113f8 <close@plt+0x438>
   10fe8:	mov	r0, #6
   10fec:	bl	10f78 <setlocale@plt>
   10ff0:	ldr	r1, [pc, #1028]	; 113fc <close@plt+0x43c>
   10ff4:	ldr	r0, [pc, #1028]	; 11400 <close@plt+0x440>
   10ff8:	bl	10f9c <bindtextdomain@plt>
   10ffc:	ldr	r0, [pc, #1020]	; 11400 <close@plt+0x440>
   11000:	bl	10e1c <textdomain@plt>
   11004:	ldr	r0, [pc, #1016]	; 11404 <close@plt+0x444>
   11008:	bl	1833c <_obstack_memory_used@@Base+0x5918>
   1100c:	mov	r9, #0
   11010:	ldr	r8, [pc, #1008]	; 11408 <close@plt+0x448>
   11014:	ldr	r7, [pc, #1008]	; 1140c <close@plt+0x44c>
   11018:	mov	r5, r9
   1101c:	mov	sl, #2
   11020:	mov	fp, #1
   11024:	str	r5, [sp]
   11028:	mov	r3, r8
   1102c:	mov	r2, r7
   11030:	mov	r1, r4
   11034:	mov	r0, r6
   11038:	bl	10ee8 <getopt_long@plt>
   1103c:	cmn	r0, #1
   11040:	beq	11100 <close@plt+0x140>
   11044:	cmp	r0, #98	; 0x62
   11048:	beq	110f8 <close@plt+0x138>
   1104c:	bgt	11068 <close@plt+0xa8>
   11050:	cmn	r0, #3
   11054:	beq	11080 <close@plt+0xc0>
   11058:	cmn	r0, #2
   1105c:	bne	110f0 <close@plt+0x130>
   11060:	mov	r0, #0
   11064:	bl	11d20 <close@plt+0xd60>
   11068:	cmp	r0, #99	; 0x63
   1106c:	beq	110b0 <close@plt+0xf0>
   11070:	cmp	r0, #112	; 0x70
   11074:	bne	110f0 <close@plt+0x130>
   11078:	mov	r9, fp
   1107c:	b	11024 <close@plt+0x64>
   11080:	ldr	r1, [pc, #904]	; 11410 <close@plt+0x450>
   11084:	ldr	r3, [pc, #904]	; 11414 <close@plt+0x454>
   11088:	ldr	r2, [pc, #904]	; 11418 <close@plt+0x458>
   1108c:	str	r5, [sp, #4]
   11090:	ldr	r0, [r1]
   11094:	ldr	r3, [r3]
   11098:	ldr	r1, [pc, #892]	; 1141c <close@plt+0x45c>
   1109c:	str	r2, [sp]
   110a0:	ldr	r2, [pc, #888]	; 11420 <close@plt+0x460>
   110a4:	bl	172f8 <_obstack_memory_used@@Base+0x48d4>
   110a8:	mov	r0, #0
   110ac:	bl	10f00 <exit@plt>
   110b0:	mov	sl, fp
   110b4:	b	11024 <close@plt+0x64>
   110b8:	mov	r2, #5
   110bc:	ldr	r1, [pc, #864]	; 11424 <close@plt+0x464>
   110c0:	mov	r0, r8
   110c4:	bl	10df8 <dcgettext@plt>
   110c8:	cmp	r9, #0
   110cc:	mov	r5, r0
   110d0:	bne	113ac <close@plt+0x3ec>
   110d4:	ldr	r0, [fp, #4]
   110d8:	bl	16924 <_obstack_memory_used@@Base+0x3f00>
   110dc:	mov	r2, r5
   110e0:	mov	r1, r9
   110e4:	mov	r3, r0
   110e8:	mov	r0, r9
   110ec:	bl	10e70 <error@plt>
   110f0:	mov	r0, #1
   110f4:	bl	11d20 <close@plt+0xd60>
   110f8:	mov	sl, r5
   110fc:	b	11024 <close@plt+0x64>
   11100:	ldr	r3, [pc, #800]	; 11428 <close@plt+0x468>
   11104:	cmp	sl, #2
   11108:	moveq	r8, #0
   1110c:	andne	r8, r9, #1
   11110:	cmp	r8, #0
   11114:	ldr	r7, [r3]
   11118:	sub	r6, r6, r7
   1111c:	add	fp, r4, r7, lsl #2
   11120:	bne	11388 <close@plt+0x3c8>
   11124:	eor	r5, r9, #1
   11128:	uxtb	r3, r5
   1112c:	cmp	r6, r3
   11130:	bgt	110b8 <close@plt+0xf8>
   11134:	cmp	r9, #0
   11138:	beq	1117c <close@plt+0x1bc>
   1113c:	ldr	r6, [pc, #744]	; 1142c <close@plt+0x46c>
   11140:	ldr	r7, [pc, #744]	; 11430 <close@plt+0x470>
   11144:	mov	r4, r6
   11148:	b	11164 <close@plt+0x1a4>
   1114c:	mov	r0, r4
   11150:	bl	10ea0 <puts@plt>
   11154:	mov	r0, r4
   11158:	bl	10f0c <strlen@plt>
   1115c:	add	r0, r0, #1
   11160:	add	r4, r4, r0
   11164:	sub	r3, r4, r6
   11168:	cmp	r3, r7
   1116c:	bls	1114c <close@plt+0x18c>
   11170:	uxtb	r0, r5
   11174:	add	sp, sp, #12
   11178:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1117c:	cmp	sl, #2
   11180:	beq	112e8 <close@plt+0x328>
   11184:	ldr	r3, [pc, #680]	; 11434 <close@plt+0x474>
   11188:	mov	r2, #0
   1118c:	str	r3, [sp]
   11190:	mov	r1, r2
   11194:	ldr	r3, [pc, #668]	; 11438 <close@plt+0x478>
   11198:	ldr	r0, [pc, #668]	; 1143c <close@plt+0x47c>
   1119c:	bl	12668 <_obstack_begin@@Base>
   111a0:	cmp	r6, #0
   111a4:	bne	11264 <close@plt+0x2a4>
   111a8:	mov	r1, r6
   111ac:	mov	r0, r6
   111b0:	bl	11738 <close@plt+0x778>
   111b4:	mov	r9, r0
   111b8:	cmp	r9, #0
   111bc:	moveq	r5, #1
   111c0:	beq	11170 <close@plt+0x1b0>
   111c4:	ldr	r3, [pc, #624]	; 1143c <close@plt+0x47c>
   111c8:	ldr	r6, [pc, #576]	; 11410 <close@plt+0x450>
   111cc:	ldr	r7, [pc, #620]	; 11440 <close@plt+0x480>
   111d0:	ldr	r1, [r3, #12]
   111d4:	ldr	r4, [r3, #8]
   111d8:	ldr	ip, [r3, #16]
   111dc:	cmp	r1, r4
   111e0:	ldr	r0, [r3, #4]
   111e4:	ldrbeq	r2, [r3, #40]	; 0x28
   111e8:	sub	r5, r1, r4
   111ec:	orreq	r2, r2, #2
   111f0:	strbeq	r2, [r3, #40]	; 0x28
   111f4:	ldr	r2, [r3, #24]
   111f8:	add	r1, r1, r2
   111fc:	bic	r1, r1, r2
   11200:	sub	r2, r1, r0
   11204:	sub	r0, ip, r0
   11208:	str	r1, [r3, #12]
   1120c:	cmp	r2, r0
   11210:	ldr	r1, [pc, #556]	; 11444 <close@plt+0x484>
   11214:	strhi	ip, [r3, #12]
   11218:	cmp	sl, #0
   1121c:	ldr	ip, [pc, #548]	; 11448 <close@plt+0x488>
   11220:	ldr	r2, [r3, #12]
   11224:	ldr	r0, [pc, #544]	; 1144c <close@plt+0x48c>
   11228:	movne	r0, r1
   1122c:	ldr	r1, [r6]
   11230:	movne	r7, ip
   11234:	str	r2, [r3, #8]
   11238:	bl	10d68 <fputs_unlocked@plt>
   1123c:	mov	r2, r5
   11240:	ldr	r3, [r6]
   11244:	mov	r1, #1
   11248:	mov	r0, r4
   1124c:	bl	10dd4 <fwrite_unlocked@plt>
   11250:	mov	r0, r7
   11254:	ldr	r1, [r6]
   11258:	bl	10d68 <fputs_unlocked@plt>
   1125c:	eor	r5, r9, #1
   11260:	b	11170 <close@plt+0x1b0>
   11264:	ldr	r4, [r4, r7, lsl #2]
   11268:	ldr	r1, [pc, #480]	; 11450 <close@plt+0x490>
   1126c:	mov	r0, r4
   11270:	bl	10d8c <strcmp@plt>
   11274:	ldr	r6, [pc, #472]	; 11454 <close@plt+0x494>
   11278:	cmp	r0, #0
   1127c:	beq	11298 <close@plt+0x2d8>
   11280:	ldr	r1, [pc, #464]	; 11458 <close@plt+0x498>
   11284:	mov	r0, r4
   11288:	ldr	r2, [r6]
   1128c:	bl	12368 <close@plt+0x13a8>
   11290:	subs	r7, r0, #0
   11294:	beq	11358 <close@plt+0x398>
   11298:	mov	r1, r4
   1129c:	ldr	r0, [r6]
   112a0:	bl	11738 <close@plt+0x778>
   112a4:	mov	r9, r0
   112a8:	ldr	r0, [r6]
   112ac:	bl	12210 <close@plt+0x1250>
   112b0:	cmp	r0, #0
   112b4:	beq	111b8 <close@plt+0x1f8>
   112b8:	bl	10f18 <__errno_location@plt>
   112bc:	mov	r2, r4
   112c0:	mov	r1, #3
   112c4:	ldr	r4, [r0]
   112c8:	mov	r0, #0
   112cc:	bl	15a30 <_obstack_memory_used@@Base+0x300c>
   112d0:	mov	r1, r4
   112d4:	ldr	r2, [pc, #384]	; 1145c <close@plt+0x49c>
   112d8:	mov	r3, r0
   112dc:	mov	r0, #0
   112e0:	bl	10e70 <error@plt>
   112e4:	b	11170 <close@plt+0x1b0>
   112e8:	ldr	r0, [pc, #368]	; 11460 <close@plt+0x4a0>
   112ec:	bl	10e94 <getenv@plt>
   112f0:	subs	r3, r0, #0
   112f4:	beq	11304 <close@plt+0x344>
   112f8:	ldrb	r3, [r3]
   112fc:	cmp	r3, #0
   11300:	bne	11324 <close@plt+0x364>
   11304:	mov	r2, #5
   11308:	ldr	r1, [pc, #340]	; 11464 <close@plt+0x4a4>
   1130c:	mov	r0, #0
   11310:	bl	10df8 <dcgettext@plt>
   11314:	mov	r1, #0
   11318:	mov	r2, r0
   1131c:	mov	r0, #1
   11320:	bl	10e70 <error@plt>
   11324:	bl	12004 <close@plt+0x1044>
   11328:	ldr	r1, [pc, #312]	; 11468 <close@plt+0x4a8>
   1132c:	mov	r8, r0
   11330:	bl	10d8c <strcmp@plt>
   11334:	cmp	r0, #0
   11338:	moveq	sl, #1
   1133c:	beq	11184 <close@plt+0x1c4>
   11340:	mov	r0, r8
   11344:	ldr	r1, [pc, #288]	; 1146c <close@plt+0x4ac>
   11348:	bl	10d8c <strcmp@plt>
   1134c:	clz	sl, r0
   11350:	lsr	sl, sl, #5
   11354:	b	11184 <close@plt+0x1c4>
   11358:	bl	10f18 <__errno_location@plt>
   1135c:	mov	r2, r4
   11360:	mov	r1, #3
   11364:	ldr	r4, [r0]
   11368:	mov	r0, r7
   1136c:	bl	15a30 <_obstack_memory_used@@Base+0x300c>
   11370:	mov	r1, r4
   11374:	ldr	r2, [pc, #224]	; 1145c <close@plt+0x49c>
   11378:	mov	r3, r0
   1137c:	mov	r0, r7
   11380:	bl	10e70 <error@plt>
   11384:	b	11170 <close@plt+0x1b0>
   11388:	mov	r2, #5
   1138c:	ldr	r1, [pc, #220]	; 11470 <close@plt+0x4b0>
   11390:	mov	r0, #0
   11394:	bl	10df8 <dcgettext@plt>
   11398:	mov	r1, #0
   1139c:	mov	r2, r0
   113a0:	mov	r0, r1
   113a4:	bl	10e70 <error@plt>
   113a8:	b	110f0 <close@plt+0x130>
   113ac:	ldr	r0, [r4, r7, lsl #2]
   113b0:	bl	16924 <_obstack_memory_used@@Base+0x3f00>
   113b4:	mov	r2, r5
   113b8:	mov	r1, r8
   113bc:	mov	r3, r0
   113c0:	mov	r0, r8
   113c4:	bl	10e70 <error@plt>
   113c8:	ldr	r3, [pc, #164]	; 11474 <close@plt+0x4b4>
   113cc:	mov	r0, r8
   113d0:	mov	r2, #5
   113d4:	ldr	r1, [pc, #156]	; 11478 <close@plt+0x4b8>
   113d8:	ldr	r4, [r3]
   113dc:	bl	10df8 <dcgettext@plt>
   113e0:	ldr	r2, [pc, #148]	; 1147c <close@plt+0x4bc>
   113e4:	mov	r1, #1
   113e8:	mov	r3, r0
   113ec:	mov	r0, r4
   113f0:	bl	10f54 <__fprintf_chk@plt>
   113f4:	b	110f0 <close@plt+0x130>
   113f8:	andeq	r9, r1, ip, asr sl
   113fc:	andeq	r9, r1, r0, lsl #21
   11400:	andeq	r9, r1, r0, lsr #19
   11404:	andeq	r2, r1, ip, lsr #2
   11408:	andeq	r9, r1, r0, lsr #11
   1140c:	andeq	r9, r1, r8, lsr #21
   11410:	andeq	fp, r2, r4, asr r1
   11414:	andeq	fp, r2, r8, ror #1
   11418:	muleq	r1, r8, sl
   1141c:	andeq	r9, r1, ip, lsr #13
   11420:	muleq	r1, ip, r9
   11424:	andeq	r9, r1, r4, lsl fp
   11428:	andeq	fp, r2, r0, asr #2
   1142c:	andeq	r8, r1, r0, ror #6
   11430:	ldrdeq	r1, [r0], -r5
   11434:	andeq	r2, r1, r0, lsl r3
   11438:			; <UNDEFINED> instruction: 0x00017bb0
   1143c:	andeq	fp, r2, ip, asr r1
   11440:	andeq	r9, r1, r8, asr #20
   11444:	andeq	r9, r1, ip, ror #20
   11448:	andeq	r9, r1, r4, asr #20
   1144c:	andeq	r9, r1, r0, ror #20
   11450:	andeq	r9, r1, ip, lsr fp
   11454:	andeq	fp, r2, r0, asr r1
   11458:	andeq	r9, r1, r0, asr #22
   1145c:	andeq	r9, r1, ip, lsl lr
   11460:	andeq	r9, r1, r8, lsr #22
   11464:	andeq	r9, r1, r0, lsl #23
   11468:	andeq	r9, r1, r0, lsr fp
   1146c:	andeq	r9, r1, r4, lsr fp
   11470:	andeq	r9, r1, ip, lsr #21
   11474:	andeq	fp, r2, r8, asr #2
   11478:	andeq	r9, r1, r4, asr #22
   1147c:	andeq	r9, r1, r4, ror #30
   11480:	mov	fp, #0
   11484:	mov	lr, #0
   11488:	pop	{r1}		; (ldr r1, [sp], #4)
   1148c:	mov	r2, sp
   11490:	push	{r2}		; (str r2, [sp, #-4]!)
   11494:	push	{r0}		; (str r0, [sp, #-4]!)
   11498:	ldr	ip, [pc, #16]	; 114b0 <close@plt+0x4f0>
   1149c:	push	{ip}		; (str ip, [sp, #-4]!)
   114a0:	ldr	r0, [pc, #12]	; 114b4 <close@plt+0x4f4>
   114a4:	ldr	r3, [pc, #12]	; 114b8 <close@plt+0x4f8>
   114a8:	bl	10eb8 <__libc_start_main@plt>
   114ac:	bl	10fb4 <abort@plt>
   114b0:	andeq	r8, r1, r8, lsr r3
   114b4:	andeq	r0, r1, ip, asr #31
   114b8:	ldrdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   114bc:	ldr	r3, [pc, #20]	; 114d8 <close@plt+0x518>
   114c0:	ldr	r2, [pc, #20]	; 114dc <close@plt+0x51c>
   114c4:	add	r3, pc, r3
   114c8:	ldr	r2, [r3, r2]
   114cc:	cmp	r2, #0
   114d0:	bxeq	lr
   114d4:	b	10ed0 <__gmon_start__@plt>
   114d8:	andeq	r9, r1, r4, lsr fp
   114dc:	ldrdeq	r0, [r0], -ip
   114e0:	ldr	r3, [pc, #28]	; 11504 <close@plt+0x544>
   114e4:	ldr	r0, [pc, #28]	; 11508 <close@plt+0x548>
   114e8:	sub	r3, r3, r0
   114ec:	cmp	r3, #6
   114f0:	bxls	lr
   114f4:	ldr	r3, [pc, #16]	; 1150c <close@plt+0x54c>
   114f8:	cmp	r3, #0
   114fc:	bxeq	lr
   11500:	bx	r3
   11504:	andeq	fp, r2, r7, lsr r1
   11508:	andeq	fp, r2, r4, lsr r1
   1150c:	andeq	r0, r0, r0
   11510:	ldr	r1, [pc, #36]	; 1153c <close@plt+0x57c>
   11514:	ldr	r0, [pc, #36]	; 11540 <close@plt+0x580>
   11518:	sub	r1, r1, r0
   1151c:	asr	r1, r1, #2
   11520:	add	r1, r1, r1, lsr #31
   11524:	asrs	r1, r1, #1
   11528:	bxeq	lr
   1152c:	ldr	r3, [pc, #16]	; 11544 <close@plt+0x584>
   11530:	cmp	r3, #0
   11534:	bxeq	lr
   11538:	bx	r3
   1153c:	andeq	fp, r2, r4, lsr r1
   11540:	andeq	fp, r2, r4, lsr r1
   11544:	andeq	r0, r0, r0
   11548:	push	{r4, lr}
   1154c:	ldr	r4, [pc, #24]	; 1156c <close@plt+0x5ac>
   11550:	ldrb	r3, [r4]
   11554:	cmp	r3, #0
   11558:	popne	{r4, pc}
   1155c:	bl	114e0 <close@plt+0x520>
   11560:	mov	r3, #1
   11564:	strb	r3, [r4]
   11568:	pop	{r4, pc}
   1156c:	andeq	fp, r2, r8, asr r1
   11570:	ldr	r0, [pc, #40]	; 115a0 <close@plt+0x5e0>
   11574:	ldr	r3, [r0]
   11578:	cmp	r3, #0
   1157c:	bne	11584 <close@plt+0x5c4>
   11580:	b	11510 <close@plt+0x550>
   11584:	ldr	r3, [pc, #24]	; 115a4 <close@plt+0x5e4>
   11588:	cmp	r3, #0
   1158c:	beq	11580 <close@plt+0x5c0>
   11590:	push	{r4, lr}
   11594:	blx	r3
   11598:	pop	{r4, lr}
   1159c:	b	11510 <close@plt+0x550>
   115a0:	andeq	sl, r2, r4, lsl pc
   115a4:	andeq	r0, r0, r0
   115a8:	ldrb	r3, [r0]
   115ac:	cmp	r3, #0
   115b0:	bxeq	lr
   115b4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   115b8:	mov	r6, #1
   115bc:	ldr	r4, [pc, #368]	; 11734 <close@plt+0x774>
   115c0:	mov	r5, r0
   115c4:	mov	r8, r4
   115c8:	mov	r9, r6
   115cc:	mov	r7, #92	; 0x5c
   115d0:	mov	sl, #39	; 0x27
   115d4:	b	11638 <close@plt+0x678>
   115d8:	cmp	r3, #39	; 0x27
   115dc:	beq	11684 <close@plt+0x6c4>
   115e0:	cmp	r3, #58	; 0x3a
   115e4:	bne	1167c <close@plt+0x6bc>
   115e8:	cmp	r6, #0
   115ec:	beq	1167c <close@plt+0x6bc>
   115f0:	ldr	r3, [r4, #12]
   115f4:	ldr	r2, [r4, #16]
   115f8:	cmp	r2, r3
   115fc:	beq	11720 <close@plt+0x760>
   11600:	add	r2, r3, #1
   11604:	str	r2, [r4, #12]
   11608:	strb	r7, [r3]
   1160c:	ldr	r3, [r4, #12]
   11610:	ldr	r2, [r4, #16]
   11614:	cmp	r2, r3
   11618:	beq	11668 <close@plt+0x6a8>
   1161c:	add	r2, r3, #1
   11620:	str	r2, [r4, #12]
   11624:	ldrb	r2, [r5]
   11628:	strb	r2, [r3]
   1162c:	ldrb	r3, [r5, #1]!
   11630:	cmp	r3, #0
   11634:	beq	116e0 <close@plt+0x720>
   11638:	cmp	r3, #61	; 0x3d
   1163c:	beq	115e8 <close@plt+0x628>
   11640:	bls	115d8 <close@plt+0x618>
   11644:	cmp	r3, #92	; 0x5c
   11648:	beq	11654 <close@plt+0x694>
   1164c:	cmp	r3, #94	; 0x5e
   11650:	bne	1167c <close@plt+0x6bc>
   11654:	ldr	r3, [r4, #12]
   11658:	ldr	r2, [r4, #16]
   1165c:	eor	r6, r6, #1
   11660:	cmp	r2, r3
   11664:	bne	1161c <close@plt+0x65c>
   11668:	mov	r1, r9
   1166c:	mov	r0, r8
   11670:	bl	127fc <_obstack_newchunk@@Base>
   11674:	ldr	r3, [r4, #12]
   11678:	b	1161c <close@plt+0x65c>
   1167c:	mov	r6, r9
   11680:	b	1160c <close@plt+0x64c>
   11684:	ldr	r3, [r4, #12]
   11688:	ldr	r2, [r4, #16]
   1168c:	cmp	r2, r3
   11690:	beq	116e4 <close@plt+0x724>
   11694:	add	r2, r3, #1
   11698:	str	r2, [r4, #12]
   1169c:	strb	sl, [r3]
   116a0:	ldr	r3, [r4, #12]
   116a4:	ldr	r2, [r4, #16]
   116a8:	cmp	r2, r3
   116ac:	beq	1170c <close@plt+0x74c>
   116b0:	add	r2, r3, #1
   116b4:	str	r2, [r4, #12]
   116b8:	strb	r7, [r3]
   116bc:	ldr	r3, [r4, #12]
   116c0:	ldr	r2, [r4, #16]
   116c4:	cmp	r2, r3
   116c8:	beq	116f8 <close@plt+0x738>
   116cc:	add	r2, r3, #1
   116d0:	str	r2, [r4, #12]
   116d4:	mov	r6, r9
   116d8:	strb	sl, [r3]
   116dc:	b	1160c <close@plt+0x64c>
   116e0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   116e4:	mov	r1, r9
   116e8:	mov	r0, r8
   116ec:	bl	127fc <_obstack_newchunk@@Base>
   116f0:	ldr	r3, [r4, #12]
   116f4:	b	11694 <close@plt+0x6d4>
   116f8:	mov	r1, r9
   116fc:	mov	r0, r8
   11700:	bl	127fc <_obstack_newchunk@@Base>
   11704:	ldr	r3, [r4, #12]
   11708:	b	116cc <close@plt+0x70c>
   1170c:	mov	r1, r9
   11710:	mov	r0, r8
   11714:	bl	127fc <_obstack_newchunk@@Base>
   11718:	ldr	r3, [r4, #12]
   1171c:	b	116b0 <close@plt+0x6f0>
   11720:	mov	r1, r9
   11724:	mov	r0, r8
   11728:	bl	127fc <_obstack_newchunk@@Base>
   1172c:	ldr	r3, [r4, #12]
   11730:	b	11600 <close@plt+0x640>
   11734:	andeq	fp, r2, ip, asr r1
   11738:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1173c:	sub	sp, sp, #44	; 0x2c
   11740:	mov	r3, #0
   11744:	mov	r7, r0
   11748:	ldr	r0, [pc, #1436]	; 11cec <close@plt+0xd2c>
   1174c:	str	r3, [sp, #32]
   11750:	str	r3, [sp, #36]	; 0x24
   11754:	str	r1, [sp, #24]
   11758:	bl	10e94 <getenv@plt>
   1175c:	subs	r3, r0, #0
   11760:	beq	11ca0 <close@plt+0xce0>
   11764:	ldrb	r2, [r3]
   11768:	mov	r1, r3
   1176c:	ldr	r3, [pc, #1404]	; 11cf0 <close@plt+0xd30>
   11770:	cmp	r2, #0
   11774:	moveq	r1, r3
   11778:	str	r1, [sp, #20]
   1177c:	ldr	fp, [pc, #1392]	; 11cf4 <close@plt+0xd34>
   11780:	mov	r8, #3
   11784:	add	r3, fp, #4288	; 0x10c0
   11788:	add	r3, r3, #22
   1178c:	mov	r6, #0
   11790:	str	r3, [sp, #12]
   11794:	mov	r3, #1
   11798:	str	r3, [sp, #16]
   1179c:	cmp	r7, #0
   117a0:	add	r6, r6, #1
   117a4:	beq	11a94 <close@plt+0xad4>
   117a8:	mov	r3, r7
   117ac:	mov	r2, #10
   117b0:	add	r1, sp, #36	; 0x24
   117b4:	add	r0, sp, #32
   117b8:	bl	10d80 <__getdelim@plt>
   117bc:	cmp	r0, #0
   117c0:	ble	11b50 <close@plt+0xb90>
   117c4:	ldr	r5, [sp, #32]
   117c8:	bl	10ef4 <__ctype_b_loc@plt>
   117cc:	ldr	r1, [r0]
   117d0:	mov	r4, r0
   117d4:	mov	r3, r5
   117d8:	ldrb	r2, [r3], #1
   117dc:	lsl	r0, r2, #1
   117e0:	ldrh	r0, [r1, r0]
   117e4:	tst	r0, #8192	; 0x2000
   117e8:	bne	118c0 <close@plt+0x900>
   117ec:	cmp	r2, #35	; 0x23
   117f0:	cmpne	r2, #0
   117f4:	beq	1179c <close@plt+0x7dc>
   117f8:	mov	r9, r5
   117fc:	ldrb	r3, [r9, #1]!
   11800:	lsl	r2, r3, #1
   11804:	ldrh	sl, [r1, r2]
   11808:	lsr	sl, sl, #13
   1180c:	eor	sl, sl, #1
   11810:	cmp	r3, #0
   11814:	moveq	sl, #0
   11818:	andne	sl, sl, #1
   1181c:	cmp	sl, #0
   11820:	bne	117fc <close@plt+0x83c>
   11824:	sub	r1, r9, r5
   11828:	mov	r0, r5
   1182c:	bl	17ab4 <_obstack_memory_used@@Base+0x5090>
   11830:	ldrb	r3, [r9]
   11834:	cmp	r3, #0
   11838:	mov	r5, r0
   1183c:	ldrne	r0, [r4]
   11840:	beq	11ae8 <close@plt+0xb28>
   11844:	ldrb	r3, [r9, #1]!
   11848:	lsl	r2, r3, #1
   1184c:	ldrh	r2, [r0, r2]
   11850:	tst	r2, #8192	; 0x2000
   11854:	bne	11844 <close@plt+0x884>
   11858:	cmp	r3, #35	; 0x23
   1185c:	cmpne	r3, #0
   11860:	movne	r3, r9
   11864:	bne	11870 <close@plt+0x8b0>
   11868:	b	11ae8 <close@plt+0xb28>
   1186c:	mov	r3, r1
   11870:	ldrb	r4, [r3, #1]
   11874:	add	r1, r3, #1
   11878:	cmp	r4, #0
   1187c:	cmpne	r4, #35	; 0x23
   11880:	movne	r4, #1
   11884:	moveq	r4, #0
   11888:	bne	1186c <close@plt+0x8ac>
   1188c:	ldrb	r2, [r1, #-1]
   11890:	lsl	r2, r2, #1
   11894:	ldrh	r2, [r0, r2]
   11898:	tst	r2, #8192	; 0x2000
   1189c:	beq	118c8 <close@plt+0x908>
   118a0:	ldrb	r2, [r3, #-1]
   118a4:	sub	r1, r3, #1
   118a8:	lsl	r2, r2, #1
   118ac:	ldrh	r2, [r0, r2]
   118b0:	tst	r2, #8192	; 0x2000
   118b4:	beq	11b3c <close@plt+0xb7c>
   118b8:	mov	r3, r1
   118bc:	b	118a0 <close@plt+0x8e0>
   118c0:	mov	r5, r3
   118c4:	b	117d4 <close@plt+0x814>
   118c8:	sub	r1, r1, r9
   118cc:	mov	r0, r9
   118d0:	bl	17ab4 <_obstack_memory_used@@Base+0x5090>
   118d4:	mov	sl, r0
   118d8:	ldr	r1, [pc, #1036]	; 11cec <close@plt+0xd2c>
   118dc:	mov	r0, r5
   118e0:	bl	120b0 <close@plt+0x10f0>
   118e4:	subs	r2, r0, #0
   118e8:	beq	11ab8 <close@plt+0xaf8>
   118ec:	cmp	r8, #2
   118f0:	beq	11b34 <close@plt+0xb74>
   118f4:	cmp	r8, #0
   118f8:	beq	11a78 <close@plt+0xab8>
   118fc:	ldrb	r3, [r5]
   11900:	cmp	r3, #46	; 0x2e
   11904:	beq	11a04 <close@plt+0xa44>
   11908:	cmp	r3, #42	; 0x2a
   1190c:	beq	11b64 <close@plt+0xba4>
   11910:	ldr	r1, [pc, #992]	; 11cf8 <close@plt+0xd38>
   11914:	mov	r0, r5
   11918:	bl	120b0 <close@plt+0x10f0>
   1191c:	cmp	r0, #0
   11920:	beq	11a78 <close@plt+0xab8>
   11924:	ldr	r1, [pc, #976]	; 11cfc <close@plt+0xd3c>
   11928:	mov	r0, r5
   1192c:	bl	120b0 <close@plt+0x10f0>
   11930:	cmp	r0, #0
   11934:	beq	11a78 <close@plt+0xab8>
   11938:	ldr	r1, [pc, #960]	; 11d00 <close@plt+0xd40>
   1193c:	mov	r0, r5
   11940:	bl	120b0 <close@plt+0x10f0>
   11944:	cmp	r0, #0
   11948:	beq	11a78 <close@plt+0xab8>
   1194c:	ldr	r3, [pc, #944]	; 11d04 <close@plt+0xd44>
   11950:	str	r4, [sp, #28]
   11954:	mov	r2, r3
   11958:	ldr	r3, [pc, #936]	; 11d08 <close@plt+0xd48>
   1195c:	mov	r9, #0
   11960:	mov	r1, r3
   11964:	mov	r4, r2
   11968:	b	1197c <close@plt+0x9bc>
   1196c:	ldr	r1, [r4, #4]!
   11970:	add	r9, r9, #1
   11974:	cmp	r1, #0
   11978:	beq	11c10 <close@plt+0xc50>
   1197c:	mov	r0, r5
   11980:	bl	120b0 <close@plt+0x10f0>
   11984:	cmp	r0, #0
   11988:	bne	1196c <close@plt+0x9ac>
   1198c:	ldr	r4, [pc, #888]	; 11d0c <close@plt+0xd4c>
   11990:	ldr	r2, [r4, #16]
   11994:	ldr	r3, [r4, #12]
   11998:	cmp	r2, r3
   1199c:	beq	11cdc <close@plt+0xd1c>
   119a0:	ldr	r3, [pc, #872]	; 11d10 <close@plt+0xd50>
   119a4:	ldr	r2, [r4, #12]
   119a8:	add	r9, r3, r9, lsl #2
   119ac:	add	r3, r2, #1
   119b0:	ldr	r9, [r9, #-3720]	; 0xfffff178
   119b4:	str	r3, [r4, #12]
   119b8:	ldrb	r3, [r9]
   119bc:	strb	r3, [r2]
   119c0:	ldr	r2, [r4, #16]
   119c4:	ldr	r3, [r4, #12]
   119c8:	cmp	r2, r3
   119cc:	beq	11ccc <close@plt+0xd0c>
   119d0:	ldr	r3, [r4, #12]
   119d4:	add	r2, r3, #1
   119d8:	str	r2, [r4, #12]
   119dc:	ldrb	r2, [r9, #1]
   119e0:	strb	r2, [r3]
   119e4:	ldr	r2, [r4, #16]
   119e8:	ldr	r3, [r4, #12]
   119ec:	cmp	r2, r3
   119f0:	bne	11b80 <close@plt+0xbc0>
   119f4:	mov	r1, #1
   119f8:	ldr	r0, [pc, #780]	; 11d0c <close@plt+0xd4c>
   119fc:	bl	127fc <_obstack_newchunk@@Base>
   11a00:	b	11b80 <close@plt+0xbc0>
   11a04:	ldr	r4, [pc, #768]	; 11d0c <close@plt+0xd4c>
   11a08:	ldr	r3, [r4, #12]
   11a0c:	ldr	r2, [r4, #16]
   11a10:	cmp	r2, r3
   11a14:	beq	11bfc <close@plt+0xc3c>
   11a18:	add	r1, r3, #1
   11a1c:	mov	r2, #42	; 0x2a
   11a20:	str	r1, [r4, #12]
   11a24:	mov	r0, r5
   11a28:	strb	r2, [r3]
   11a2c:	bl	115a8 <close@plt+0x5e8>
   11a30:	ldr	r3, [r4, #12]
   11a34:	ldr	r2, [r4, #16]
   11a38:	cmp	r2, r3
   11a3c:	beq	11be8 <close@plt+0xc28>
   11a40:	add	r1, r3, #1
   11a44:	mov	r2, #61	; 0x3d
   11a48:	str	r1, [r4, #12]
   11a4c:	mov	r0, sl
   11a50:	strb	r2, [r3]
   11a54:	bl	115a8 <close@plt+0x5e8>
   11a58:	ldr	r3, [r4, #12]
   11a5c:	ldr	r2, [r4, #16]
   11a60:	cmp	r2, r3
   11a64:	beq	11bd4 <close@plt+0xc14>
   11a68:	add	r1, r3, #1
   11a6c:	mov	r2, #58	; 0x3a
   11a70:	str	r1, [r4, #12]
   11a74:	strb	r2, [r3]
   11a78:	mov	r0, r5
   11a7c:	bl	12310 <close@plt+0x1350>
   11a80:	mov	r0, sl
   11a84:	bl	12310 <close@plt+0x1350>
   11a88:	cmp	r7, #0
   11a8c:	add	r6, r6, #1
   11a90:	bne	117a8 <close@plt+0x7e8>
   11a94:	ldr	r3, [sp, #12]
   11a98:	cmp	fp, r3
   11a9c:	beq	11b58 <close@plt+0xb98>
   11aa0:	mov	r0, fp
   11aa4:	bl	10f0c <strlen@plt>
   11aa8:	mov	r5, fp
   11aac:	add	r0, r0, #1
   11ab0:	add	fp, fp, r0
   11ab4:	b	117c8 <close@plt+0x808>
   11ab8:	ldr	r1, [sp, #20]
   11abc:	mov	r0, sl
   11ac0:	bl	10e7c <fnmatch@plt>
   11ac4:	cmp	r0, #0
   11ac8:	cmpne	r8, #2
   11acc:	mov	r0, r5
   11ad0:	movne	r8, #0
   11ad4:	moveq	r8, #2
   11ad8:	bl	12310 <close@plt+0x1350>
   11adc:	mov	r0, sl
   11ae0:	bl	12310 <close@plt+0x1350>
   11ae4:	b	11a88 <close@plt+0xac8>
   11ae8:	mov	r2, #5
   11aec:	ldr	r1, [pc, #544]	; 11d14 <close@plt+0xd54>
   11af0:	mov	r0, #0
   11af4:	bl	10df8 <dcgettext@plt>
   11af8:	ldr	r2, [sp, #24]
   11afc:	mov	r1, #3
   11b00:	mov	r4, r0
   11b04:	mov	r0, #0
   11b08:	bl	15a30 <_obstack_memory_used@@Base+0x300c>
   11b0c:	mov	r1, #0
   11b10:	mov	r2, r4
   11b14:	str	r6, [sp]
   11b18:	str	sl, [sp, #16]
   11b1c:	mov	r3, r0
   11b20:	mov	r0, r1
   11b24:	bl	10e70 <error@plt>
   11b28:	mov	r0, r5
   11b2c:	bl	12310 <close@plt+0x1350>
   11b30:	b	1179c <close@plt+0x7dc>
   11b34:	mov	r8, #1
   11b38:	b	118fc <close@plt+0x93c>
   11b3c:	sub	r1, r3, r9
   11b40:	mov	r0, r9
   11b44:	bl	17ab4 <_obstack_memory_used@@Base+0x5090>
   11b48:	mov	sl, r0
   11b4c:	b	118d8 <close@plt+0x918>
   11b50:	ldr	r0, [sp, #32]
   11b54:	bl	12310 <close@plt+0x1350>
   11b58:	ldr	r0, [sp, #16]
   11b5c:	add	sp, sp, #44	; 0x2c
   11b60:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11b64:	ldr	r4, [pc, #416]	; 11d0c <close@plt+0xd4c>
   11b68:	mov	r0, r5
   11b6c:	bl	115a8 <close@plt+0x5e8>
   11b70:	ldr	r2, [r4, #16]
   11b74:	ldr	r3, [r4, #12]
   11b78:	cmp	r2, r3
   11b7c:	beq	11cbc <close@plt+0xcfc>
   11b80:	ldr	r3, [r4, #12]
   11b84:	mov	r2, #61	; 0x3d
   11b88:	add	r1, r3, #1
   11b8c:	str	r1, [r4, #12]
   11b90:	mov	r0, sl
   11b94:	strb	r2, [r3]
   11b98:	bl	115a8 <close@plt+0x5e8>
   11b9c:	ldr	r2, [r4, #16]
   11ba0:	ldr	r3, [r4, #12]
   11ba4:	cmp	r2, r3
   11ba8:	beq	11cac <close@plt+0xcec>
   11bac:	ldr	r3, [r4, #12]
   11bb0:	mov	r2, #58	; 0x3a
   11bb4:	add	r1, r3, #1
   11bb8:	str	r1, [r4, #12]
   11bbc:	mov	r0, r5
   11bc0:	strb	r2, [r3]
   11bc4:	bl	12310 <close@plt+0x1350>
   11bc8:	mov	r0, sl
   11bcc:	bl	12310 <close@plt+0x1350>
   11bd0:	b	11a88 <close@plt+0xac8>
   11bd4:	mov	r1, #1
   11bd8:	ldr	r0, [pc, #300]	; 11d0c <close@plt+0xd4c>
   11bdc:	bl	127fc <_obstack_newchunk@@Base>
   11be0:	ldr	r3, [r4, #12]
   11be4:	b	11a68 <close@plt+0xaa8>
   11be8:	mov	r1, #1
   11bec:	ldr	r0, [pc, #280]	; 11d0c <close@plt+0xd4c>
   11bf0:	bl	127fc <_obstack_newchunk@@Base>
   11bf4:	ldr	r3, [r4, #12]
   11bf8:	b	11a40 <close@plt+0xa80>
   11bfc:	mov	r1, #1
   11c00:	mov	r0, r4
   11c04:	bl	127fc <_obstack_newchunk@@Base>
   11c08:	ldr	r3, [r4, #12]
   11c0c:	b	11a18 <close@plt+0xa58>
   11c10:	cmp	r8, #3
   11c14:	mov	r3, r1
   11c18:	ldr	r4, [sp, #28]
   11c1c:	beq	11a78 <close@plt+0xab8>
   11c20:	mov	r2, #5
   11c24:	ldr	r1, [pc, #236]	; 11d18 <close@plt+0xd58>
   11c28:	mov	r0, r3
   11c2c:	str	r3, [sp, #16]
   11c30:	bl	10df8 <dcgettext@plt>
   11c34:	ldr	r2, [sp, #24]
   11c38:	cmp	r2, #0
   11c3c:	mov	r9, r0
   11c40:	beq	11c88 <close@plt+0xcc8>
   11c44:	ldr	r3, [sp, #16]
   11c48:	mov	r1, #3
   11c4c:	mov	r0, r3
   11c50:	bl	15a30 <_obstack_memory_used@@Base+0x300c>
   11c54:	mov	r3, r0
   11c58:	mov	r1, #0
   11c5c:	mov	r0, r1
   11c60:	mov	r2, r9
   11c64:	str	r5, [sp, #4]
   11c68:	str	r6, [sp]
   11c6c:	bl	10e70 <error@plt>
   11c70:	mov	r0, r5
   11c74:	str	r4, [sp, #16]
   11c78:	bl	12310 <close@plt+0x1350>
   11c7c:	mov	r0, sl
   11c80:	bl	12310 <close@plt+0x1350>
   11c84:	b	11a88 <close@plt+0xac8>
   11c88:	mov	r2, #5
   11c8c:	ldr	r1, [pc, #136]	; 11d1c <close@plt+0xd5c>
   11c90:	ldr	r0, [sp, #24]
   11c94:	bl	10df8 <dcgettext@plt>
   11c98:	mov	r3, r0
   11c9c:	b	11c58 <close@plt+0xc98>
   11ca0:	ldr	r3, [pc, #72]	; 11cf0 <close@plt+0xd30>
   11ca4:	str	r3, [sp, #20]
   11ca8:	b	1177c <close@plt+0x7bc>
   11cac:	mov	r1, #1
   11cb0:	ldr	r0, [pc, #84]	; 11d0c <close@plt+0xd4c>
   11cb4:	bl	127fc <_obstack_newchunk@@Base>
   11cb8:	b	11bac <close@plt+0xbec>
   11cbc:	mov	r1, #1
   11cc0:	mov	r0, r4
   11cc4:	bl	127fc <_obstack_newchunk@@Base>
   11cc8:	b	11b80 <close@plt+0xbc0>
   11ccc:	mov	r1, #1
   11cd0:	ldr	r0, [pc, #52]	; 11d0c <close@plt+0xd4c>
   11cd4:	bl	127fc <_obstack_newchunk@@Base>
   11cd8:	b	119d0 <close@plt+0xa10>
   11cdc:	mov	r1, #1
   11ce0:	mov	r0, r4
   11ce4:	bl	127fc <_obstack_newchunk@@Base>
   11ce8:	b	119a0 <close@plt+0x9e0>
   11cec:	andeq	r9, r1, r0, lsr r6
   11cf0:	andeq	r9, r1, r0, lsr #12
   11cf4:	andeq	r8, r1, r0, ror #6
   11cf8:	andeq	r9, r1, r4, ror #12
   11cfc:	andeq	r9, r1, ip, ror #12
   11d00:	andeq	r9, r1, r4, ror r6
   11d04:	andeq	r9, r1, r8, lsr r4
   11d08:	andeq	r9, r1, r8, lsr #12
   11d0c:	andeq	fp, r2, ip, asr r1
   11d10:	andeq	sl, r1, r8, asr r3
   11d14:	andeq	r9, r1, r8, lsr r6
   11d18:	andeq	r9, r1, r0, lsl #13
   11d1c:	andeq	r9, r1, r0, lsr #13
   11d20:	subs	r6, r0, #0
   11d24:	push	{r7, lr}
   11d28:	sub	sp, sp, #56	; 0x38
   11d2c:	beq	11d68 <close@plt+0xda8>
   11d30:	ldr	r3, [pc, #636]	; 11fb4 <close@plt+0xff4>
   11d34:	mov	r2, #5
   11d38:	ldr	r1, [pc, #632]	; 11fb8 <close@plt+0xff8>
   11d3c:	mov	r0, #0
   11d40:	ldr	r4, [r3]
   11d44:	bl	10df8 <dcgettext@plt>
   11d48:	ldr	r3, [pc, #620]	; 11fbc <close@plt+0xffc>
   11d4c:	mov	r1, #1
   11d50:	ldr	r3, [r3]
   11d54:	mov	r2, r0
   11d58:	mov	r0, r4
   11d5c:	bl	10f54 <__fprintf_chk@plt>
   11d60:	mov	r0, r6
   11d64:	bl	10f00 <exit@plt>
   11d68:	mov	r2, #5
   11d6c:	ldr	r1, [pc, #588]	; 11fc0 <close@plt+0x1000>
   11d70:	bl	10df8 <dcgettext@plt>
   11d74:	ldr	r3, [pc, #576]	; 11fbc <close@plt+0xffc>
   11d78:	ldr	r7, [pc, #580]	; 11fc4 <close@plt+0x1004>
   11d7c:	ldr	r4, [pc, #580]	; 11fc8 <close@plt+0x1008>
   11d80:	ldr	r2, [r3]
   11d84:	mov	r1, r0
   11d88:	mov	r0, #1
   11d8c:	bl	10f3c <__printf_chk@plt>
   11d90:	mov	r2, #5
   11d94:	ldr	r1, [pc, #560]	; 11fcc <close@plt+0x100c>
   11d98:	mov	r0, r6
   11d9c:	bl	10df8 <dcgettext@plt>
   11da0:	ldr	r1, [r7]
   11da4:	bl	10d68 <fputs_unlocked@plt>
   11da8:	mov	r2, #5
   11dac:	ldr	r1, [pc, #540]	; 11fd0 <close@plt+0x1010>
   11db0:	mov	r0, r6
   11db4:	bl	10df8 <dcgettext@plt>
   11db8:	ldr	r1, [r7]
   11dbc:	bl	10d68 <fputs_unlocked@plt>
   11dc0:	mov	r2, #5
   11dc4:	ldr	r1, [pc, #520]	; 11fd4 <close@plt+0x1014>
   11dc8:	mov	r0, r6
   11dcc:	bl	10df8 <dcgettext@plt>
   11dd0:	ldr	r1, [r7]
   11dd4:	bl	10d68 <fputs_unlocked@plt>
   11dd8:	mov	r2, #5
   11ddc:	ldr	r1, [pc, #500]	; 11fd8 <close@plt+0x1018>
   11de0:	mov	r0, r6
   11de4:	bl	10df8 <dcgettext@plt>
   11de8:	ldr	r1, [r7]
   11dec:	bl	10d68 <fputs_unlocked@plt>
   11df0:	ldm	r4!, {r0, r1, r2, r3}
   11df4:	mov	lr, sp
   11df8:	stmia	lr!, {r0, r1, r2, r3}
   11dfc:	ldm	r4!, {r0, r1, r2, r3}
   11e00:	ldr	ip, [sp]
   11e04:	stmia	lr!, {r0, r1, r2, r3}
   11e08:	cmp	ip, #0
   11e0c:	ldm	r4!, {r0, r1, r2, r3}
   11e10:	stmia	lr!, {r0, r1, r2, r3}
   11e14:	ldm	r4, {r0, r1}
   11e18:	moveq	r4, sp
   11e1c:	stm	lr, {r0, r1}
   11e20:	beq	11e50 <close@plt+0xe90>
   11e24:	ldr	r5, [pc, #432]	; 11fdc <close@plt+0x101c>
   11e28:	mov	r4, sp
   11e2c:	b	11e3c <close@plt+0xe7c>
   11e30:	ldr	ip, [r4, #8]!
   11e34:	cmp	ip, #0
   11e38:	beq	11e50 <close@plt+0xe90>
   11e3c:	mov	r1, ip
   11e40:	mov	r0, r5
   11e44:	bl	10d8c <strcmp@plt>
   11e48:	cmp	r0, #0
   11e4c:	bne	11e30 <close@plt+0xe70>
   11e50:	ldr	r4, [r4, #4]
   11e54:	mov	r2, #5
   11e58:	cmp	r4, #0
   11e5c:	ldr	r1, [pc, #380]	; 11fe0 <close@plt+0x1020>
   11e60:	beq	11f08 <close@plt+0xf48>
   11e64:	mov	r0, #0
   11e68:	bl	10df8 <dcgettext@plt>
   11e6c:	ldr	r3, [pc, #368]	; 11fe4 <close@plt+0x1024>
   11e70:	ldr	r2, [pc, #368]	; 11fe8 <close@plt+0x1028>
   11e74:	mov	r1, r0
   11e78:	mov	r0, #1
   11e7c:	bl	10f3c <__printf_chk@plt>
   11e80:	mov	r1, #0
   11e84:	mov	r0, #5
   11e88:	bl	10f78 <setlocale@plt>
   11e8c:	cmp	r0, #0
   11e90:	ldreq	r5, [pc, #324]	; 11fdc <close@plt+0x101c>
   11e94:	beq	11eb0 <close@plt+0xef0>
   11e98:	mov	r2, #3
   11e9c:	ldr	r1, [pc, #328]	; 11fec <close@plt+0x102c>
   11ea0:	bl	10fa8 <strncmp@plt>
   11ea4:	ldr	r5, [pc, #304]	; 11fdc <close@plt+0x101c>
   11ea8:	cmp	r0, #0
   11eac:	bne	11f98 <close@plt+0xfd8>
   11eb0:	mov	r2, #5
   11eb4:	ldr	r1, [pc, #308]	; 11ff0 <close@plt+0x1030>
   11eb8:	mov	r0, #0
   11ebc:	bl	10df8 <dcgettext@plt>
   11ec0:	ldr	r3, [pc, #276]	; 11fdc <close@plt+0x101c>
   11ec4:	ldr	r2, [pc, #280]	; 11fe4 <close@plt+0x1024>
   11ec8:	mov	r1, r0
   11ecc:	mov	r0, #1
   11ed0:	bl	10f3c <__printf_chk@plt>
   11ed4:	mov	r2, #5
   11ed8:	ldr	r1, [pc, #276]	; 11ff4 <close@plt+0x1034>
   11edc:	mov	r0, #0
   11ee0:	bl	10df8 <dcgettext@plt>
   11ee4:	ldr	r2, [pc, #268]	; 11ff8 <close@plt+0x1038>
   11ee8:	cmp	r4, r5
   11eec:	ldr	r3, [pc, #264]	; 11ffc <close@plt+0x103c>
   11ef0:	movne	r3, r2
   11ef4:	mov	r1, r0
   11ef8:	mov	r2, r4
   11efc:	mov	r0, #1
   11f00:	bl	10f3c <__printf_chk@plt>
   11f04:	b	11d60 <close@plt+0xda0>
   11f08:	mov	r0, r4
   11f0c:	bl	10df8 <dcgettext@plt>
   11f10:	ldr	r3, [pc, #204]	; 11fe4 <close@plt+0x1024>
   11f14:	ldr	r2, [pc, #204]	; 11fe8 <close@plt+0x1028>
   11f18:	mov	r1, r0
   11f1c:	mov	r0, #1
   11f20:	bl	10f3c <__printf_chk@plt>
   11f24:	mov	r1, r4
   11f28:	mov	r0, #5
   11f2c:	bl	10f78 <setlocale@plt>
   11f30:	cmp	r0, #0
   11f34:	beq	11f4c <close@plt+0xf8c>
   11f38:	mov	r2, #3
   11f3c:	ldr	r1, [pc, #168]	; 11fec <close@plt+0x102c>
   11f40:	bl	10fa8 <strncmp@plt>
   11f44:	cmp	r0, #0
   11f48:	bne	11f90 <close@plt+0xfd0>
   11f4c:	mov	r2, #5
   11f50:	ldr	r1, [pc, #152]	; 11ff0 <close@plt+0x1030>
   11f54:	mov	r0, #0
   11f58:	bl	10df8 <dcgettext@plt>
   11f5c:	ldr	r3, [pc, #120]	; 11fdc <close@plt+0x101c>
   11f60:	ldr	r2, [pc, #124]	; 11fe4 <close@plt+0x1024>
   11f64:	mov	r4, r3
   11f68:	mov	r1, r0
   11f6c:	mov	r0, #1
   11f70:	bl	10f3c <__printf_chk@plt>
   11f74:	ldr	r1, [pc, #120]	; 11ff4 <close@plt+0x1034>
   11f78:	mov	r2, #5
   11f7c:	mov	r0, #0
   11f80:	bl	10df8 <dcgettext@plt>
   11f84:	ldr	r3, [pc, #112]	; 11ffc <close@plt+0x103c>
   11f88:	mov	r1, r0
   11f8c:	b	11ef8 <close@plt+0xf38>
   11f90:	ldr	r5, [pc, #68]	; 11fdc <close@plt+0x101c>
   11f94:	mov	r4, r5
   11f98:	mov	r2, #5
   11f9c:	ldr	r1, [pc, #92]	; 12000 <close@plt+0x1040>
   11fa0:	mov	r0, #0
   11fa4:	bl	10df8 <dcgettext@plt>
   11fa8:	ldr	r1, [r7]
   11fac:	bl	10d68 <fputs_unlocked@plt>
   11fb0:	b	11eb0 <close@plt+0xef0>
   11fb4:	andeq	fp, r2, r8, asr #2
   11fb8:			; <UNDEFINED> instruction: 0x000196b8
   11fbc:	muleq	r2, r0, r1
   11fc0:	andeq	r9, r1, r0, ror #13
   11fc4:	andeq	fp, r2, r4, asr r1
   11fc8:	andeq	r9, r1, r8, ror #10
   11fcc:	andeq	r9, r1, r0, lsl #14
   11fd0:	andeq	r9, r1, r4, lsl r8
   11fd4:	andeq	r9, r1, r4, asr #16
   11fd8:	andeq	r9, r1, ip, ror r8
   11fdc:	andeq	r9, r1, ip, lsr #13
   11fe0:	andeq	r9, r1, ip, asr r9
   11fe4:	andeq	r9, r1, r4, ror r9
   11fe8:	muleq	r1, ip, r9
   11fec:	andeq	r9, r1, ip, lsr #19
   11ff0:	strdeq	r9, [r1], -r8
   11ff4:	andeq	r9, r1, r4, lsl sl
   11ff8:	andeq	r9, r1, ip, asr sl
   11ffc:	andeq	r9, r1, r8, asr #23
   12000:			; <UNDEFINED> instruction: 0x000199b0
   12004:	ldrb	r3, [r0]
   12008:	cmp	r3, #47	; 0x2f
   1200c:	bne	1201c <close@plt+0x105c>
   12010:	ldrb	r3, [r0, #1]!
   12014:	cmp	r3, #47	; 0x2f
   12018:	beq	12010 <close@plt+0x1050>
   1201c:	cmp	r3, #0
   12020:	bxeq	lr
   12024:	mov	r2, #0
   12028:	push	{lr}		; (str lr, [sp, #-4]!)
   1202c:	mov	ip, r2
   12030:	mov	r1, r0
   12034:	mov	lr, #1
   12038:	cmp	r3, #47	; 0x2f
   1203c:	moveq	r2, lr
   12040:	beq	12050 <close@plt+0x1090>
   12044:	cmp	r2, #0
   12048:	movne	r0, r1
   1204c:	movne	r2, ip
   12050:	ldrb	r3, [r1, #1]!
   12054:	cmp	r3, #0
   12058:	bne	12038 <close@plt+0x1078>
   1205c:	pop	{pc}		; (ldr pc, [sp], #4)
   12060:	push	{r4, lr}
   12064:	mov	r4, r0
   12068:	bl	10f0c <strlen@plt>
   1206c:	cmp	r0, #1
   12070:	popls	{r4, pc}
   12074:	sub	r3, r0, #1
   12078:	add	r2, r4, r3
   1207c:	ldrb	r1, [r4, r3]
   12080:	cmp	r1, #47	; 0x2f
   12084:	popne	{r4, pc}
   12088:	cmp	r3, #1
   1208c:	beq	120a0 <close@plt+0x10e0>
   12090:	ldrb	r1, [r2, #-1]!
   12094:	sub	r0, r3, #1
   12098:	cmp	r1, #47	; 0x2f
   1209c:	beq	120a8 <close@plt+0x10e8>
   120a0:	mov	r0, r3
   120a4:	pop	{r4, pc}
   120a8:	mov	r3, r0
   120ac:	b	12088 <close@plt+0x10c8>
   120b0:	cmp	r0, r1
   120b4:	beq	12104 <close@plt+0x1144>
   120b8:	sub	r2, r0, #1
   120bc:	sub	r1, r1, #1
   120c0:	b	120cc <close@plt+0x110c>
   120c4:	cmp	r0, r3
   120c8:	bne	120fc <close@plt+0x113c>
   120cc:	ldrb	r0, [r2, #1]!
   120d0:	sub	r3, r0, #65	; 0x41
   120d4:	cmp	r3, #25
   120d8:	ldrb	r3, [r1, #1]!
   120dc:	addls	r0, r0, #32
   120e0:	sub	ip, r3, #65	; 0x41
   120e4:	cmp	ip, #25
   120e8:	addls	r3, r3, #32
   120ec:	uxtb	r0, r0
   120f0:	cmp	r0, #0
   120f4:	uxtb	r3, r3
   120f8:	bne	120c4 <close@plt+0x1104>
   120fc:	sub	r0, r0, r3
   12100:	bx	lr
   12104:	mov	r0, #0
   12108:	bx	lr
   1210c:	ldr	r3, [pc, #4]	; 12118 <close@plt+0x1158>
   12110:	str	r0, [r3]
   12114:	bx	lr
   12118:	andeq	fp, r2, r8, lsl #3
   1211c:	ldr	r3, [pc, #4]	; 12128 <close@plt+0x1168>
   12120:	strb	r0, [r3, #4]
   12124:	bx	lr
   12128:	andeq	fp, r2, r8, lsl #3
   1212c:	ldr	r3, [pc, #192]	; 121f4 <close@plt+0x1234>
   12130:	push	{r4, r5, r6, lr}
   12134:	sub	sp, sp, #8
   12138:	ldr	r0, [r3]
   1213c:	bl	17c38 <_obstack_memory_used@@Base+0x5214>
   12140:	cmp	r0, #0
   12144:	beq	12168 <close@plt+0x11a8>
   12148:	ldr	r4, [pc, #168]	; 121f8 <close@plt+0x1238>
   1214c:	ldrb	r3, [r4, #4]
   12150:	cmp	r3, #0
   12154:	beq	12184 <close@plt+0x11c4>
   12158:	bl	10f18 <__errno_location@plt>
   1215c:	ldr	r3, [r0]
   12160:	cmp	r3, #32
   12164:	bne	12184 <close@plt+0x11c4>
   12168:	ldr	r3, [pc, #140]	; 121fc <close@plt+0x123c>
   1216c:	ldr	r0, [r3]
   12170:	bl	17c38 <_obstack_memory_used@@Base+0x5214>
   12174:	cmp	r0, #0
   12178:	bne	121cc <close@plt+0x120c>
   1217c:	add	sp, sp, #8
   12180:	pop	{r4, r5, r6, pc}
   12184:	mov	r2, #5
   12188:	ldr	r1, [pc, #112]	; 12200 <close@plt+0x1240>
   1218c:	mov	r0, #0
   12190:	bl	10df8 <dcgettext@plt>
   12194:	ldr	r4, [r4]
   12198:	cmp	r4, #0
   1219c:	mov	r5, r0
   121a0:	beq	121d8 <close@plt+0x1218>
   121a4:	bl	10f18 <__errno_location@plt>
   121a8:	ldr	r6, [r0]
   121ac:	mov	r0, r4
   121b0:	bl	156c4 <_obstack_memory_used@@Base+0x2ca0>
   121b4:	mov	r1, r6
   121b8:	str	r5, [sp]
   121bc:	ldr	r2, [pc, #64]	; 12204 <close@plt+0x1244>
   121c0:	mov	r3, r0
   121c4:	mov	r0, #0
   121c8:	bl	10e70 <error@plt>
   121cc:	ldr	r3, [pc, #52]	; 12208 <close@plt+0x1248>
   121d0:	ldr	r0, [r3]
   121d4:	bl	10db0 <_exit@plt>
   121d8:	bl	10f18 <__errno_location@plt>
   121dc:	mov	r3, r5
   121e0:	ldr	r2, [pc, #36]	; 1220c <close@plt+0x124c>
   121e4:	ldr	r1, [r0]
   121e8:	mov	r0, r4
   121ec:	bl	10e70 <error@plt>
   121f0:	b	121cc <close@plt+0x120c>
   121f4:	andeq	fp, r2, r4, asr r1
   121f8:	andeq	fp, r2, r8, lsl #3
   121fc:	andeq	fp, r2, r8, asr #2
   12200:	andeq	r9, r1, ip, lsl #28
   12204:	andeq	r9, r1, r8, lsl lr
   12208:	andeq	fp, r2, ip, ror #1
   1220c:	andeq	r9, r1, ip, lsl lr
   12210:	push	{r4, r5, lr}
   12214:	sub	sp, sp, #12
   12218:	mov	r4, r0
   1221c:	bl	10f48 <fileno@plt>
   12220:	cmp	r0, #0
   12224:	mov	r0, r4
   12228:	blt	122a4 <close@plt+0x12e4>
   1222c:	bl	10ec4 <__freading@plt>
   12230:	cmp	r0, #0
   12234:	bne	12270 <close@plt+0x12b0>
   12238:	mov	r0, r4
   1223c:	bl	122b0 <close@plt+0x12f0>
   12240:	cmp	r0, #0
   12244:	beq	122a0 <close@plt+0x12e0>
   12248:	bl	10f18 <__errno_location@plt>
   1224c:	mov	r5, r0
   12250:	mov	r0, r4
   12254:	ldr	r4, [r5]
   12258:	bl	10f60 <fclose@plt>
   1225c:	cmp	r4, #0
   12260:	mvnne	r0, #0
   12264:	strne	r4, [r5]
   12268:	add	sp, sp, #12
   1226c:	pop	{r4, r5, pc}
   12270:	mov	r0, r4
   12274:	bl	10f48 <fileno@plt>
   12278:	mov	r3, #1
   1227c:	str	r3, [sp]
   12280:	mov	r2, #0
   12284:	mov	r3, #0
   12288:	bl	10e40 <lseek64@plt>
   1228c:	mvn	r3, #0
   12290:	mvn	r2, #0
   12294:	cmp	r1, r3
   12298:	cmpeq	r0, r2
   1229c:	bne	12238 <close@plt+0x1278>
   122a0:	mov	r0, r4
   122a4:	add	sp, sp, #12
   122a8:	pop	{r4, r5, lr}
   122ac:	b	10f60 <fclose@plt>
   122b0:	push	{r4, lr}
   122b4:	subs	r4, r0, #0
   122b8:	sub	sp, sp, #8
   122bc:	beq	122d8 <close@plt+0x1318>
   122c0:	bl	10ec4 <__freading@plt>
   122c4:	cmp	r0, #0
   122c8:	beq	122d8 <close@plt+0x1318>
   122cc:	ldr	r3, [r4]
   122d0:	tst	r3, #256	; 0x100
   122d4:	bne	122e8 <close@plt+0x1328>
   122d8:	mov	r0, r4
   122dc:	add	sp, sp, #8
   122e0:	pop	{r4, lr}
   122e4:	b	10d98 <fflush@plt>
   122e8:	mov	r3, #1
   122ec:	str	r3, [sp]
   122f0:	mov	r2, #0
   122f4:	mov	r3, #0
   122f8:	mov	r0, r4
   122fc:	bl	1257c <close@plt+0x15bc>
   12300:	mov	r0, r4
   12304:	add	sp, sp, #8
   12308:	pop	{r4, lr}
   1230c:	b	10d98 <fflush@plt>
   12310:	push	{r4, r5, lr}
   12314:	sub	sp, sp, #12
   12318:	mov	r5, r0
   1231c:	bl	10f18 <__errno_location@plt>
   12320:	mov	r2, #0
   12324:	mov	r4, r0
   12328:	ldr	r3, [r0]
   1232c:	str	r2, [r4]
   12330:	mov	r0, r5
   12334:	str	r3, [sp]
   12338:	str	r3, [sp, #4]
   1233c:	bl	10da4 <free@plt>
   12340:	ldr	r3, [r4]
   12344:	add	r2, sp, #8
   12348:	cmp	r3, #0
   1234c:	moveq	r3, #4
   12350:	movne	r3, #0
   12354:	add	r3, r2, r3
   12358:	ldr	r3, [r3, #-8]
   1235c:	str	r3, [r4]
   12360:	add	sp, sp, #12
   12364:	pop	{r4, r5, pc}
   12368:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1236c:	mov	r6, r0
   12370:	mov	r0, r2
   12374:	mov	r5, r2
   12378:	mov	r7, r1
   1237c:	bl	10f48 <fileno@plt>
   12380:	cmp	r0, #1
   12384:	beq	12510 <close@plt+0x1550>
   12388:	cmp	r0, #2
   1238c:	beq	12508 <close@plt+0x1548>
   12390:	cmp	r0, #0
   12394:	beq	12410 <close@plt+0x1450>
   12398:	mov	r1, #2
   1239c:	mov	r0, r1
   123a0:	bl	10e04 <dup2@plt>
   123a4:	subs	r4, r0, #2
   123a8:	movne	r4, #1
   123ac:	mov	r1, #1
   123b0:	mov	r0, r1
   123b4:	bl	10e04 <dup2@plt>
   123b8:	mov	r1, #0
   123bc:	subs	r9, r0, #1
   123c0:	mov	r0, r1
   123c4:	movne	r9, #1
   123c8:	bl	10e04 <dup2@plt>
   123cc:	subs	r8, r0, #0
   123d0:	beq	12464 <close@plt+0x14a4>
   123d4:	mov	r1, #0
   123d8:	ldr	r0, [pc, #408]	; 12578 <close@plt+0x15b8>
   123dc:	bl	10e88 <open64@plt>
   123e0:	cmp	r0, #0
   123e4:	moveq	r8, #1
   123e8:	beq	12464 <close@plt+0x14a4>
   123ec:	blt	12538 <close@plt+0x1578>
   123f0:	bl	10fc0 <close@plt>
   123f4:	bl	10f18 <__errno_location@plt>
   123f8:	mov	r7, #9
   123fc:	mov	r8, #1
   12400:	mov	r5, #0
   12404:	mov	r6, r0
   12408:	str	r7, [r0]
   1240c:	b	1243c <close@plt+0x147c>
   12410:	mov	r4, r0
   12414:	mov	r9, r0
   12418:	mov	r8, r0
   1241c:	mov	r2, r5
   12420:	mov	r1, r7
   12424:	mov	r0, r6
   12428:	bl	10edc <freopen64@plt>
   1242c:	mov	r5, r0
   12430:	bl	10f18 <__errno_location@plt>
   12434:	ldr	r7, [r0]
   12438:	mov	r6, r0
   1243c:	cmp	r4, #0
   12440:	bne	124a8 <close@plt+0x14e8>
   12444:	cmp	r9, #0
   12448:	bne	124fc <close@plt+0x153c>
   1244c:	cmp	r8, #0
   12450:	bne	124b4 <close@plt+0x14f4>
   12454:	cmp	r5, #0
   12458:	streq	r7, [r6]
   1245c:	mov	r0, r5
   12460:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12464:	cmp	r9, #0
   12468:	bne	124c0 <close@plt+0x1500>
   1246c:	cmp	r4, #0
   12470:	beq	1241c <close@plt+0x145c>
   12474:	mov	r1, #0
   12478:	ldr	r0, [pc, #248]	; 12578 <close@plt+0x15b8>
   1247c:	bl	10e88 <open64@plt>
   12480:	cmp	r0, #2
   12484:	beq	1241c <close@plt+0x145c>
   12488:	cmp	r0, #0
   1248c:	blt	12560 <close@plt+0x15a0>
   12490:	bl	10fc0 <close@plt>
   12494:	bl	10f18 <__errno_location@plt>
   12498:	mov	r7, #9
   1249c:	mov	r6, r0
   124a0:	str	r7, [r0]
   124a4:	mov	r5, #0
   124a8:	mov	r0, #2
   124ac:	bl	10fc0 <close@plt>
   124b0:	b	12444 <close@plt+0x1484>
   124b4:	mov	r0, #0
   124b8:	bl	10fc0 <close@plt>
   124bc:	b	12454 <close@plt+0x1494>
   124c0:	mov	r1, #0
   124c4:	ldr	r0, [pc, #172]	; 12578 <close@plt+0x15b8>
   124c8:	bl	10e88 <open64@plt>
   124cc:	cmp	r0, #1
   124d0:	beq	1246c <close@plt+0x14ac>
   124d4:	cmp	r0, #0
   124d8:	blt	12550 <close@plt+0x1590>
   124dc:	bl	10fc0 <close@plt>
   124e0:	bl	10f18 <__errno_location@plt>
   124e4:	mov	r7, #9
   124e8:	mov	r6, r0
   124ec:	str	r7, [r0]
   124f0:	cmp	r4, #0
   124f4:	bne	12570 <close@plt+0x15b0>
   124f8:	mov	r5, r4
   124fc:	mov	r0, #1
   12500:	bl	10fc0 <close@plt>
   12504:	b	1244c <close@plt+0x148c>
   12508:	mov	r4, #0
   1250c:	b	123ac <close@plt+0x13ec>
   12510:	mov	r1, #0
   12514:	mov	r0, r1
   12518:	bl	10e04 <dup2@plt>
   1251c:	subs	r4, r0, #0
   12520:	moveq	r9, r4
   12524:	moveq	r8, r4
   12528:	beq	1241c <close@plt+0x145c>
   1252c:	mov	r4, #0
   12530:	mov	r9, r4
   12534:	b	123d4 <close@plt+0x1414>
   12538:	bl	10f18 <__errno_location@plt>
   1253c:	mov	r8, #1
   12540:	mov	r5, #0
   12544:	mov	r6, r0
   12548:	ldr	r7, [r0]
   1254c:	b	1243c <close@plt+0x147c>
   12550:	bl	10f18 <__errno_location@plt>
   12554:	mov	r6, r0
   12558:	ldr	r7, [r0]
   1255c:	b	124f0 <close@plt+0x1530>
   12560:	bl	10f18 <__errno_location@plt>
   12564:	mov	r6, r0
   12568:	ldr	r7, [r0]
   1256c:	b	124a4 <close@plt+0x14e4>
   12570:	mov	r9, r4
   12574:	b	124a4 <close@plt+0x14e4>
   12578:	andeq	r9, r1, r0, lsr #28
   1257c:	push	{r4, r5, r6, r7, r8, lr}
   12580:	sub	sp, sp, #8
   12584:	ldmib	r0, {ip, lr}
   12588:	mov	r4, r0
   1258c:	ldr	r5, [sp, #32]
   12590:	cmp	lr, ip
   12594:	beq	125ac <close@plt+0x15ec>
   12598:	str	r5, [sp, #32]
   1259c:	mov	r0, r4
   125a0:	add	sp, sp, #8
   125a4:	pop	{r4, r5, r6, r7, r8, lr}
   125a8:	b	10f6c <fseeko64@plt>
   125ac:	ldr	lr, [r0, #20]
   125b0:	ldr	ip, [r0, #16]
   125b4:	cmp	lr, ip
   125b8:	bne	12598 <close@plt+0x15d8>
   125bc:	ldr	r8, [r0, #36]	; 0x24
   125c0:	cmp	r8, #0
   125c4:	bne	12598 <close@plt+0x15d8>
   125c8:	mov	r6, r2
   125cc:	mov	r7, r3
   125d0:	bl	10f48 <fileno@plt>
   125d4:	mov	r2, r6
   125d8:	mov	r3, r7
   125dc:	str	r5, [sp]
   125e0:	bl	10e40 <lseek64@plt>
   125e4:	mvn	r3, #0
   125e8:	mvn	r2, #0
   125ec:	cmp	r1, r3
   125f0:	cmpeq	r0, r2
   125f4:	beq	12614 <close@plt+0x1654>
   125f8:	ldr	r3, [r4]
   125fc:	strd	r0, [r4, #80]	; 0x50
   12600:	mov	r0, r8
   12604:	bic	r3, r3, #16
   12608:	str	r3, [r4]
   1260c:	add	sp, sp, #8
   12610:	pop	{r4, r5, r6, r7, r8, pc}
   12614:	mvn	r0, #0
   12618:	b	1260c <close@plt+0x164c>
   1261c:	ldr	r3, [pc, #52]	; 12658 <close@plt+0x1698>
   12620:	push	{r4, lr}
   12624:	mov	r2, #5
   12628:	ldr	r1, [pc, #44]	; 1265c <close@plt+0x169c>
   1262c:	mov	r0, #0
   12630:	ldr	r4, [r3]
   12634:	bl	10df8 <dcgettext@plt>
   12638:	ldr	r2, [pc, #32]	; 12660 <close@plt+0x16a0>
   1263c:	mov	r1, #1
   12640:	mov	r3, r0
   12644:	mov	r0, r4
   12648:	bl	10f54 <__fprintf_chk@plt>
   1264c:	ldr	r3, [pc, #16]	; 12664 <close@plt+0x16a4>
   12650:	ldr	r0, [r3]
   12654:	bl	10f00 <exit@plt>
   12658:	andeq	fp, r2, r8, asr #2
   1265c:	andeq	r9, r1, ip, lsr #28
   12660:	andeq	r9, r1, r4, ror #30
   12664:	andeq	fp, r2, ip, ror #1

00012668 <_obstack_begin@@Base>:
   12668:	push	{r4, r5, r6, lr}
   1266c:	mov	r4, r0
   12670:	ldrb	r0, [r0, #40]	; 0x28
   12674:	subs	r5, r2, #0
   12678:	subne	r6, r5, #1
   1267c:	bic	r0, r0, #1
   12680:	strb	r0, [r4, #40]	; 0x28
   12684:	ldrb	r2, [r4, #40]	; 0x28
   12688:	ldr	r0, [pc, #152]	; 12728 <_obstack_begin@@Base+0xc0>
   1268c:	moveq	r6, #7
   12690:	ldr	ip, [sp, #16]
   12694:	moveq	r5, #8
   12698:	cmp	r1, #0
   1269c:	moveq	r1, r0
   126a0:	tst	r2, #1
   126a4:	str	r3, [r4, #28]
   126a8:	str	ip, [r4, #32]
   126ac:	str	r6, [r4, #24]
   126b0:	str	r1, [r4]
   126b4:	bne	12710 <_obstack_begin@@Base+0xa8>
   126b8:	mov	r0, r1
   126bc:	blx	r3
   126c0:	cmp	r0, #0
   126c4:	str	r0, [r4, #4]
   126c8:	beq	1271c <_obstack_begin@@Base+0xb4>
   126cc:	ldr	r3, [r4]
   126d0:	add	r2, r0, #8
   126d4:	rsb	r5, r5, #0
   126d8:	add	r2, r2, r6
   126dc:	add	r3, r0, r3
   126e0:	and	r2, r2, r5
   126e4:	mov	r1, #0
   126e8:	str	r2, [r4, #8]
   126ec:	str	r2, [r4, #12]
   126f0:	str	r3, [r0]
   126f4:	str	r3, [r4, #16]
   126f8:	str	r1, [r0, #4]
   126fc:	ldrb	r3, [r4, #40]	; 0x28
   12700:	mov	r0, #1
   12704:	and	r3, r3, #249	; 0xf9
   12708:	strb	r3, [r4, #40]	; 0x28
   1270c:	pop	{r4, r5, r6, pc}
   12710:	ldr	r0, [r4, #36]	; 0x24
   12714:	blx	r3
   12718:	b	126c0 <_obstack_begin@@Base+0x58>
   1271c:	ldr	r3, [pc, #8]	; 1272c <_obstack_begin@@Base+0xc4>
   12720:	ldr	r3, [r3]
   12724:	blx	r3
   12728:	andeq	r0, r0, r8, ror #31
   1272c:	strdeq	fp, [r2], -r0

00012730 <_obstack_begin_1@@Base>:
   12730:	ldrb	ip, [r0, #40]	; 0x28
   12734:	push	{r4, r5, r6, lr}
   12738:	mov	r4, r0
   1273c:	orr	ip, ip, #1
   12740:	subs	r5, r2, #0
   12744:	strb	ip, [r4, #40]	; 0x28
   12748:	ldrb	r2, [r4, #40]	; 0x28
   1274c:	ldr	ip, [pc, #160]	; 127f4 <_obstack_begin_1@@Base+0xc4>
   12750:	subne	r6, r5, #1
   12754:	moveq	r6, #7
   12758:	ldr	lr, [sp, #16]
   1275c:	ldr	r0, [sp, #20]
   12760:	moveq	r5, #8
   12764:	cmp	r1, #0
   12768:	moveq	r1, ip
   1276c:	tst	r2, #1
   12770:	str	r3, [r4, #28]
   12774:	str	lr, [r4, #32]
   12778:	str	r0, [r4, #36]	; 0x24
   1277c:	str	r6, [r4, #24]
   12780:	str	r1, [r4]
   12784:	bne	127e0 <_obstack_begin_1@@Base+0xb0>
   12788:	mov	r0, r1
   1278c:	blx	r3
   12790:	cmp	r0, #0
   12794:	str	r0, [r4, #4]
   12798:	beq	127e8 <_obstack_begin_1@@Base+0xb8>
   1279c:	ldr	r3, [r4]
   127a0:	add	r2, r0, #8
   127a4:	rsb	r5, r5, #0
   127a8:	add	r2, r2, r6
   127ac:	add	r3, r0, r3
   127b0:	and	r2, r2, r5
   127b4:	mov	r1, #0
   127b8:	str	r2, [r4, #8]
   127bc:	str	r2, [r4, #12]
   127c0:	str	r3, [r0]
   127c4:	str	r3, [r4, #16]
   127c8:	str	r1, [r0, #4]
   127cc:	ldrb	r3, [r4, #40]	; 0x28
   127d0:	mov	r0, #1
   127d4:	and	r3, r3, #249	; 0xf9
   127d8:	strb	r3, [r4, #40]	; 0x28
   127dc:	pop	{r4, r5, r6, pc}
   127e0:	blx	r3
   127e4:	b	12790 <_obstack_begin_1@@Base+0x60>
   127e8:	ldr	r3, [pc, #8]	; 127f8 <_obstack_begin_1@@Base+0xc8>
   127ec:	ldr	r3, [r3]
   127f0:	blx	r3
   127f4:	andeq	r0, r0, r8, ror #31
   127f8:	strdeq	fp, [r2], -r0

000127fc <_obstack_newchunk@@Base>:
   127fc:	ldr	r2, [r0, #8]
   12800:	push	{r4, r5, r6, r7, r8, lr}
   12804:	ldr	r6, [r0, #12]
   12808:	ldr	r3, [r0, #24]
   1280c:	sub	r6, r6, r2
   12810:	add	r1, r6, r1
   12814:	adds	r3, r1, r3
   12818:	movcc	r2, #1
   1281c:	movcs	r2, #0
   12820:	cmp	r6, r1
   12824:	movhi	r1, #0
   12828:	andls	r1, r2, #1
   1282c:	cmp	r1, #0
   12830:	bne	12840 <_obstack_newchunk@@Base+0x44>
   12834:	ldr	r3, [pc, #272]	; 1294c <_obstack_newchunk@@Base+0x150>
   12838:	ldr	r3, [r3]
   1283c:	blx	r3
   12840:	ldr	r5, [r0]
   12844:	add	r1, r3, r6, lsr #3
   12848:	cmp	r3, r5
   1284c:	ldrb	r2, [r0, #40]	; 0x28
   12850:	movcc	r3, r5
   12854:	add	r1, r1, #100	; 0x64
   12858:	cmp	r3, r1
   1285c:	movcs	r5, r3
   12860:	movcc	r5, r1
   12864:	tst	r2, #1
   12868:	mov	r4, r0
   1286c:	ldr	r7, [r0, #4]
   12870:	ldr	r3, [r0, #28]
   12874:	bne	12904 <_obstack_newchunk@@Base+0x108>
   12878:	mov	r0, r5
   1287c:	blx	r3
   12880:	mov	r8, r0
   12884:	cmp	r8, #0
   12888:	beq	12834 <_obstack_newchunk@@Base+0x38>
   1288c:	ldr	r2, [r4, #24]
   12890:	mov	r3, r8
   12894:	add	r1, r8, r5
   12898:	str	r8, [r4, #4]
   1289c:	str	r7, [r8, #4]
   128a0:	str	r1, [r4, #16]
   128a4:	str	r1, [r3], #8
   128a8:	add	r3, r3, r2
   128ac:	bic	r5, r3, r2
   128b0:	mov	r0, r5
   128b4:	mov	r2, r6
   128b8:	ldr	r1, [r4, #8]
   128bc:	bl	10dbc <memcpy@plt>
   128c0:	ldrb	r2, [r4, #40]	; 0x28
   128c4:	tst	r2, #2
   128c8:	bne	128e8 <_obstack_newchunk@@Base+0xec>
   128cc:	ldr	r1, [r4, #24]
   128d0:	add	r3, r7, #8
   128d4:	add	r3, r3, r1
   128d8:	ldr	r0, [r4, #8]
   128dc:	bic	r3, r3, r1
   128e0:	cmp	r0, r3
   128e4:	beq	12918 <_obstack_newchunk@@Base+0x11c>
   128e8:	ldrb	r3, [r4, #40]	; 0x28
   128ec:	add	r2, r5, r6
   128f0:	str	r2, [r4, #12]
   128f4:	bic	r3, r3, #2
   128f8:	str	r5, [r4, #8]
   128fc:	strb	r3, [r4, #40]	; 0x28
   12900:	pop	{r4, r5, r6, r7, r8, pc}
   12904:	mov	r1, r5
   12908:	ldr	r0, [r0, #36]	; 0x24
   1290c:	blx	r3
   12910:	mov	r8, r0
   12914:	b	12884 <_obstack_newchunk@@Base+0x88>
   12918:	ldr	r3, [r7, #4]
   1291c:	tst	r2, #1
   12920:	str	r3, [r8, #4]
   12924:	bne	12938 <_obstack_newchunk@@Base+0x13c>
   12928:	mov	r0, r7
   1292c:	ldr	r3, [r4, #32]
   12930:	blx	r3
   12934:	b	128e8 <_obstack_newchunk@@Base+0xec>
   12938:	mov	r1, r7
   1293c:	ldr	r3, [r4, #32]
   12940:	ldr	r0, [r4, #36]	; 0x24
   12944:	blx	r3
   12948:	b	128e8 <_obstack_newchunk@@Base+0xec>
   1294c:	strdeq	fp, [r2], -r0

00012950 <_obstack_allocated_p@@Base>:
   12950:	ldr	r0, [r0, #4]
   12954:	cmp	r0, #0
   12958:	bne	1296c <_obstack_allocated_p@@Base+0x1c>
   1295c:	b	12988 <_obstack_allocated_p@@Base+0x38>
   12960:	ldr	r0, [r0, #4]
   12964:	cmp	r0, #0
   12968:	bxeq	lr
   1296c:	cmp	r1, r0
   12970:	bls	12960 <_obstack_allocated_p@@Base+0x10>
   12974:	ldr	r3, [r0]
   12978:	cmp	r1, r3
   1297c:	bhi	12960 <_obstack_allocated_p@@Base+0x10>
   12980:	mov	r0, #1
   12984:	bx	lr
   12988:	bx	lr

0001298c <_obstack_free@@Base>:
   1298c:	push	{r4, r5, r6, lr}
   12990:	mov	r4, r0
   12994:	ldr	r0, [r0, #4]
   12998:	mov	r6, r1
   1299c:	cmp	r0, #0
   129a0:	bne	129c8 <_obstack_free@@Base+0x3c>
   129a4:	b	12a14 <_obstack_free@@Base+0x88>
   129a8:	ldr	r3, [r4, #32]
   129ac:	blx	r3
   129b0:	ldrb	r3, [r4, #40]	; 0x28
   129b4:	cmp	r5, #0
   129b8:	orr	r3, r3, #2
   129bc:	strb	r3, [r4, #40]	; 0x28
   129c0:	beq	12a14 <_obstack_free@@Base+0x88>
   129c4:	mov	r0, r5
   129c8:	cmp	r6, r0
   129cc:	bls	129dc <_obstack_free@@Base+0x50>
   129d0:	ldr	r3, [r0]
   129d4:	cmp	r6, r3
   129d8:	bls	12a00 <_obstack_free@@Base+0x74>
   129dc:	ldrb	r3, [r4, #40]	; 0x28
   129e0:	ldr	r5, [r0, #4]
   129e4:	tst	r3, #1
   129e8:	beq	129a8 <_obstack_free@@Base+0x1c>
   129ec:	mov	r1, r0
   129f0:	ldr	r3, [r4, #32]
   129f4:	ldr	r0, [r4, #36]	; 0x24
   129f8:	blx	r3
   129fc:	b	129b0 <_obstack_free@@Base+0x24>
   12a00:	str	r6, [r4, #12]
   12a04:	str	r6, [r4, #8]
   12a08:	str	r3, [r4, #16]
   12a0c:	str	r0, [r4, #4]
   12a10:	pop	{r4, r5, r6, pc}
   12a14:	cmp	r6, #0
   12a18:	bne	12a20 <_obstack_free@@Base+0x94>
   12a1c:	pop	{r4, r5, r6, pc}
   12a20:	bl	10fb4 <abort@plt>

00012a24 <_obstack_memory_used@@Base>:
   12a24:	ldr	r3, [r0, #4]
   12a28:	cmp	r3, #0
   12a2c:	beq	12a50 <_obstack_memory_used@@Base+0x2c>
   12a30:	mov	r0, #0
   12a34:	ldr	r2, [r3]
   12a38:	sub	r2, r2, r3
   12a3c:	ldr	r3, [r3, #4]
   12a40:	add	r0, r0, r2
   12a44:	cmp	r3, #0
   12a48:	bne	12a34 <_obstack_memory_used@@Base+0x10>
   12a4c:	bx	lr
   12a50:	mov	r0, r3
   12a54:	bx	lr
   12a58:	push	{r4, r5, r6, lr}
   12a5c:	subs	r4, r0, #0
   12a60:	beq	12ad4 <_obstack_memory_used@@Base+0xb0>
   12a64:	mov	r1, #47	; 0x2f
   12a68:	bl	10f84 <strrchr@plt>
   12a6c:	subs	r5, r0, #0
   12a70:	beq	12ac0 <_obstack_memory_used@@Base+0x9c>
   12a74:	add	r6, r5, #1
   12a78:	sub	r3, r6, r4
   12a7c:	cmp	r3, #6
   12a80:	ble	12ac0 <_obstack_memory_used@@Base+0x9c>
   12a84:	mov	r2, #7
   12a88:	ldr	r1, [pc, #96]	; 12af0 <_obstack_memory_used@@Base+0xcc>
   12a8c:	sub	r0, r5, #6
   12a90:	bl	10fa8 <strncmp@plt>
   12a94:	cmp	r0, #0
   12a98:	bne	12ac0 <_obstack_memory_used@@Base+0x9c>
   12a9c:	mov	r2, #3
   12aa0:	ldr	r1, [pc, #76]	; 12af4 <_obstack_memory_used@@Base+0xd0>
   12aa4:	mov	r0, r6
   12aa8:	bl	10fa8 <strncmp@plt>
   12aac:	cmp	r0, #0
   12ab0:	movne	r4, r6
   12ab4:	ldreq	r3, [pc, #60]	; 12af8 <_obstack_memory_used@@Base+0xd4>
   12ab8:	addeq	r4, r5, #4
   12abc:	streq	r4, [r3]
   12ac0:	ldr	r2, [pc, #52]	; 12afc <_obstack_memory_used@@Base+0xd8>
   12ac4:	ldr	r3, [pc, #52]	; 12b00 <_obstack_memory_used@@Base+0xdc>
   12ac8:	str	r4, [r2]
   12acc:	str	r4, [r3]
   12ad0:	pop	{r4, r5, r6, pc}
   12ad4:	ldr	r3, [pc, #40]	; 12b04 <_obstack_memory_used@@Base+0xe0>
   12ad8:	mov	r2, #55	; 0x37
   12adc:	mov	r1, #1
   12ae0:	ldr	r3, [r3]
   12ae4:	ldr	r0, [pc, #28]	; 12b08 <_obstack_memory_used@@Base+0xe4>
   12ae8:	bl	10e34 <fwrite@plt>
   12aec:	bl	10fb4 <abort@plt>
   12af0:	andeq	r9, r1, r8, ror lr
   12af4:	andeq	r9, r1, r0, lsl #29
   12af8:	andeq	fp, r2, r8, lsr r1
   12afc:	muleq	r2, r0, r1
   12b00:	andeq	fp, r2, ip, lsr r1
   12b04:	andeq	fp, r2, r8, asr #2
   12b08:	andeq	r9, r1, r0, asr #28
   12b0c:	push	{r4, r5, r6, lr}
   12b10:	mov	r4, r0
   12b14:	mov	r5, r1
   12b18:	bl	17cb4 <_obstack_memory_used@@Base+0x5290>
   12b1c:	ldrb	r3, [r0]
   12b20:	bic	r3, r3, #32
   12b24:	cmp	r3, #85	; 0x55
   12b28:	bne	12b88 <_obstack_memory_used@@Base+0x164>
   12b2c:	ldrb	r3, [r0, #1]
   12b30:	bic	r3, r3, #32
   12b34:	cmp	r3, #84	; 0x54
   12b38:	bne	12bc4 <_obstack_memory_used@@Base+0x1a0>
   12b3c:	ldrb	r3, [r0, #2]
   12b40:	bic	r3, r3, #32
   12b44:	cmp	r3, #70	; 0x46
   12b48:	bne	12bc4 <_obstack_memory_used@@Base+0x1a0>
   12b4c:	ldrb	r3, [r0, #3]
   12b50:	cmp	r3, #45	; 0x2d
   12b54:	bne	12bc4 <_obstack_memory_used@@Base+0x1a0>
   12b58:	ldrb	r3, [r0, #4]
   12b5c:	cmp	r3, #56	; 0x38
   12b60:	bne	12bc4 <_obstack_memory_used@@Base+0x1a0>
   12b64:	ldrb	r3, [r0, #5]
   12b68:	cmp	r3, #0
   12b6c:	bne	12bc4 <_obstack_memory_used@@Base+0x1a0>
   12b70:	ldrb	r2, [r4]
   12b74:	ldr	r3, [pc, #152]	; 12c14 <_obstack_memory_used@@Base+0x1f0>
   12b78:	ldr	r0, [pc, #152]	; 12c18 <_obstack_memory_used@@Base+0x1f4>
   12b7c:	cmp	r2, #96	; 0x60
   12b80:	movne	r0, r3
   12b84:	pop	{r4, r5, r6, pc}
   12b88:	cmp	r3, #71	; 0x47
   12b8c:	bne	12bc4 <_obstack_memory_used@@Base+0x1a0>
   12b90:	ldrb	r3, [r0, #1]
   12b94:	bic	r3, r3, #32
   12b98:	cmp	r3, #66	; 0x42
   12b9c:	bne	12bc4 <_obstack_memory_used@@Base+0x1a0>
   12ba0:	ldrb	r3, [r0, #2]
   12ba4:	cmp	r3, #49	; 0x31
   12ba8:	bne	12bc4 <_obstack_memory_used@@Base+0x1a0>
   12bac:	ldrb	r3, [r0, #3]
   12bb0:	cmp	r3, #56	; 0x38
   12bb4:	bne	12bc4 <_obstack_memory_used@@Base+0x1a0>
   12bb8:	ldrb	r3, [r0, #4]
   12bbc:	cmp	r3, #48	; 0x30
   12bc0:	beq	12bd8 <_obstack_memory_used@@Base+0x1b4>
   12bc4:	ldr	r3, [pc, #80]	; 12c1c <_obstack_memory_used@@Base+0x1f8>
   12bc8:	cmp	r5, #9
   12bcc:	ldr	r0, [pc, #76]	; 12c20 <_obstack_memory_used@@Base+0x1fc>
   12bd0:	movne	r0, r3
   12bd4:	pop	{r4, r5, r6, pc}
   12bd8:	ldrb	r3, [r0, #5]
   12bdc:	cmp	r3, #51	; 0x33
   12be0:	bne	12bc4 <_obstack_memory_used@@Base+0x1a0>
   12be4:	ldrb	r3, [r0, #6]
   12be8:	cmp	r3, #48	; 0x30
   12bec:	bne	12bc4 <_obstack_memory_used@@Base+0x1a0>
   12bf0:	ldrb	r3, [r0, #7]
   12bf4:	cmp	r3, #0
   12bf8:	bne	12bc4 <_obstack_memory_used@@Base+0x1a0>
   12bfc:	ldrb	r2, [r4]
   12c00:	ldr	r3, [pc, #28]	; 12c24 <_obstack_memory_used@@Base+0x200>
   12c04:	ldr	r0, [pc, #28]	; 12c28 <_obstack_memory_used@@Base+0x204>
   12c08:	cmp	r2, #96	; 0x60
   12c0c:	movne	r0, r3
   12c10:	pop	{r4, r5, r6, pc}
   12c14:	ldrdeq	r9, [r1], -ip
   12c18:	ldrdeq	r9, [r1], -r8
   12c1c:	andeq	r9, r1, ip, ror #29
   12c20:	andeq	r9, r1, r8, ror #29
   12c24:	andeq	r9, r1, r4, ror #29
   12c28:	andeq	r9, r1, r0, ror #29
   12c2c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12c30:	sub	sp, sp, #140	; 0x8c
   12c34:	mov	r9, r1
   12c38:	str	r3, [sp, #24]
   12c3c:	mov	r3, #1
   12c40:	mov	sl, r0
   12c44:	str	r2, [sp, #44]	; 0x2c
   12c48:	str	r3, [sp, #28]
   12c4c:	bl	10e4c <__ctype_get_mb_cur_max@plt>
   12c50:	ldr	r3, [sp, #180]	; 0xb4
   12c54:	mov	fp, r9
   12c58:	mov	r9, sl
   12c5c:	lsr	r3, r3, #1
   12c60:	and	r3, r3, #1
   12c64:	str	r3, [sp, #40]	; 0x28
   12c68:	ldr	r3, [sp, #180]	; 0xb4
   12c6c:	mov	r2, #0
   12c70:	and	r3, r3, #4
   12c74:	str	r3, [sp, #100]	; 0x64
   12c78:	ldr	r3, [sp, #180]	; 0xb4
   12c7c:	str	r2, [sp, #76]	; 0x4c
   12c80:	and	r3, r3, #1
   12c84:	str	r3, [sp, #96]	; 0x60
   12c88:	str	r2, [sp, #36]	; 0x24
   12c8c:	str	r2, [sp, #56]	; 0x38
   12c90:	str	r2, [sp, #68]	; 0x44
   12c94:	str	r2, [sp, #72]	; 0x48
   12c98:	str	r2, [sp, #84]	; 0x54
   12c9c:	str	r0, [sp, #80]	; 0x50
   12ca0:	ldr	r3, [sp, #176]	; 0xb0
   12ca4:	cmp	r3, #10
   12ca8:	ldrls	pc, [pc, r3, lsl #2]
   12cac:	b	13e84 <_obstack_memory_used@@Base+0x1460>
   12cb0:	ldrdeq	r2, [r1], -ip
   12cb4:	strdeq	r2, [r1], -ip
   12cb8:	andeq	r3, r1, r4, asr r1
   12cbc:	andeq	r3, r1, r0, lsr r0
   12cc0:	andeq	r3, r1, r8, lsr #3
   12cc4:	andeq	r3, r1, r8, lsl #3
   12cc8:	andeq	r3, r1, r0, asr r0
   12ccc:	andeq	r3, r1, r4, ror r0
   12cd0:	muleq	r1, ip, r0
   12cd4:	muleq	r1, ip, r0
   12cd8:	muleq	r1, ip, r0
   12cdc:	mov	r3, #0
   12ce0:	ldr	r1, [sp, #56]	; 0x38
   12ce4:	ldr	r2, [sp, #176]	; 0xb0
   12ce8:	ldr	lr, [sp, #176]	; 0xb0
   12cec:	mov	r8, r3
   12cf0:	mov	ip, r3
   12cf4:	str	r3, [sp, #40]	; 0x28
   12cf8:	mov	r3, r1
   12cfc:	cmp	r2, #2
   12d00:	moveq	r3, #0
   12d04:	andne	r3, r3, #1
   12d08:	mov	r0, r3
   12d0c:	str	r3, [sp, #92]	; 0x5c
   12d10:	ldr	r3, [sp, #68]	; 0x44
   12d14:	sub	lr, lr, #2
   12d18:	adds	r2, r3, #0
   12d1c:	movne	r2, #1
   12d20:	and	r3, r1, ip
   12d24:	and	r3, r2, r3
   12d28:	clz	lr, lr
   12d2c:	str	r3, [sp, #88]	; 0x58
   12d30:	lsr	lr, lr, #5
   12d34:	mov	r3, ip
   12d38:	and	r3, r3, lr
   12d3c:	mov	sl, #0
   12d40:	and	r0, r2, r0
   12d44:	str	r3, [sp, #64]	; 0x40
   12d48:	eor	r3, r1, #1
   12d4c:	str	lr, [sp, #52]	; 0x34
   12d50:	str	r0, [sp, #48]	; 0x30
   12d54:	str	r3, [sp, #60]	; 0x3c
   12d58:	ldr	r3, [sp, #24]
   12d5c:	cmn	r3, #1
   12d60:	beq	13290 <_obstack_memory_used@@Base+0x86c>
   12d64:	subs	r7, r3, sl
   12d68:	movne	r7, #1
   12d6c:	cmp	r7, #0
   12d70:	beq	132a8 <_obstack_memory_used@@Base+0x884>
   12d74:	ldr	r3, [sp, #48]	; 0x30
   12d78:	cmp	r3, #0
   12d7c:	beq	13614 <_obstack_memory_used@@Base+0xbf0>
   12d80:	ldr	r2, [sp, #68]	; 0x44
   12d84:	ldr	r1, [sp, #24]
   12d88:	cmp	r2, #1
   12d8c:	mov	r3, r2
   12d90:	movls	r3, #0
   12d94:	movhi	r3, #1
   12d98:	cmn	r1, #1
   12d9c:	movne	r3, #0
   12da0:	cmp	r3, #0
   12da4:	add	r4, sl, r2
   12da8:	beq	12db8 <_obstack_memory_used@@Base+0x394>
   12dac:	ldr	r0, [sp, #44]	; 0x2c
   12db0:	bl	10f0c <strlen@plt>
   12db4:	str	r0, [sp, #24]
   12db8:	ldr	r3, [sp, #24]
   12dbc:	cmp	r3, r4
   12dc0:	ldr	r3, [sp, #44]	; 0x2c
   12dc4:	add	r5, r3, sl
   12dc8:	bcc	1361c <_obstack_memory_used@@Base+0xbf8>
   12dcc:	mov	r0, r5
   12dd0:	ldr	r2, [sp, #68]	; 0x44
   12dd4:	ldr	r1, [sp, #72]	; 0x48
   12dd8:	bl	10de0 <memcmp@plt>
   12ddc:	cmp	r0, #0
   12de0:	bne	1361c <_obstack_memory_used@@Base+0xbf8>
   12de4:	ldr	r3, [sp, #40]	; 0x28
   12de8:	cmp	r3, #0
   12dec:	bne	13fd8 <_obstack_memory_used@@Base+0x15b4>
   12df0:	ldrb	r4, [r5]
   12df4:	cmp	r4, #126	; 0x7e
   12df8:	ldrls	pc, [pc, r4, lsl #2]
   12dfc:	b	13f14 <_obstack_memory_used@@Base+0x14f0>
   12e00:	ldrdeq	r3, [r1], -r4
   12e04:	andeq	r3, r1, r4, lsl pc
   12e08:	andeq	r3, r1, r4, lsl pc
   12e0c:	andeq	r3, r1, r4, lsl pc
   12e10:	andeq	r3, r1, r4, lsl pc
   12e14:	andeq	r3, r1, r4, lsl pc
   12e18:	andeq	r3, r1, r4, lsl pc
   12e1c:	andeq	r3, r1, r0, asr #9
   12e20:	andeq	r3, r1, ip, lsr #9
   12e24:	andeq	r3, r1, r8, lsl #9
   12e28:	andeq	r3, r1, r8, ror #8
   12e2c:	muleq	r1, r8, r4
   12e30:	ldrdeq	r3, [r1], -r0
   12e34:	andeq	r3, r1, r4, lsl #12
   12e38:	andeq	r3, r1, r4, lsl pc
   12e3c:	andeq	r3, r1, r4, lsl pc
   12e40:	andeq	r3, r1, r4, lsl pc
   12e44:	andeq	r3, r1, r4, lsl pc
   12e48:	andeq	r3, r1, r4, lsl pc
   12e4c:	andeq	r3, r1, r4, lsl pc
   12e50:	andeq	r3, r1, r4, lsl pc
   12e54:	andeq	r3, r1, r4, lsl pc
   12e58:	andeq	r3, r1, r4, lsl pc
   12e5c:	andeq	r3, r1, r4, lsl pc
   12e60:	andeq	r3, r1, r4, lsl pc
   12e64:	andeq	r3, r1, r4, lsl pc
   12e68:	andeq	r3, r1, r4, lsl pc
   12e6c:	andeq	r3, r1, r4, lsl pc
   12e70:	andeq	r3, r1, r4, lsl pc
   12e74:	andeq	r3, r1, r4, lsl pc
   12e78:	andeq	r3, r1, r4, lsl pc
   12e7c:	andeq	r3, r1, r4, lsl pc
   12e80:	strdeq	r3, [r1], -r4
   12e84:	ldrdeq	r3, [r1], -r4
   12e88:	ldrdeq	r3, [r1], -r4
   12e8c:			; <UNDEFINED> instruction: 0x000135b4
   12e90:	ldrdeq	r3, [r1], -r4
   12e94:	andeq	r3, r1, r0, asr #7
   12e98:	ldrdeq	r3, [r1], -r4
   12e9c:	muleq	r1, ip, r3
   12ea0:	ldrdeq	r3, [r1], -r4
   12ea4:	ldrdeq	r3, [r1], -r4
   12ea8:	ldrdeq	r3, [r1], -r4
   12eac:	andeq	r3, r1, r0, asr #7
   12eb0:	andeq	r3, r1, r0, asr #7
   12eb4:	andeq	r3, r1, r0, asr #7
   12eb8:	andeq	r3, r1, r0, asr #7
   12ebc:	andeq	r3, r1, r0, asr #7
   12ec0:	andeq	r3, r1, r0, asr #7
   12ec4:	andeq	r3, r1, r0, asr #7
   12ec8:	andeq	r3, r1, r0, asr #7
   12ecc:	andeq	r3, r1, r0, asr #7
   12ed0:	andeq	r3, r1, r0, asr #7
   12ed4:	andeq	r3, r1, r0, asr #7
   12ed8:	andeq	r3, r1, r0, asr #7
   12edc:	andeq	r3, r1, r0, asr #7
   12ee0:	andeq	r3, r1, r0, asr #7
   12ee4:	andeq	r3, r1, r0, asr #7
   12ee8:	andeq	r3, r1, r0, asr #7
   12eec:	ldrdeq	r3, [r1], -r4
   12ef0:	ldrdeq	r3, [r1], -r4
   12ef4:	ldrdeq	r3, [r1], -r4
   12ef8:	ldrdeq	r3, [r1], -r4
   12efc:	andeq	r3, r1, ip, asr #6
   12f00:	andeq	r3, r1, r4, lsl pc
   12f04:	andeq	r3, r1, r0, asr #7
   12f08:	andeq	r3, r1, r0, asr #7
   12f0c:	andeq	r3, r1, r0, asr #7
   12f10:	andeq	r3, r1, r0, asr #7
   12f14:	andeq	r3, r1, r0, asr #7
   12f18:	andeq	r3, r1, r0, asr #7
   12f1c:	andeq	r3, r1, r0, asr #7
   12f20:	andeq	r3, r1, r0, asr #7
   12f24:	andeq	r3, r1, r0, asr #7
   12f28:	andeq	r3, r1, r0, asr #7
   12f2c:	andeq	r3, r1, r0, asr #7
   12f30:	andeq	r3, r1, r0, asr #7
   12f34:	andeq	r3, r1, r0, asr #7
   12f38:	andeq	r3, r1, r0, asr #7
   12f3c:	andeq	r3, r1, r0, asr #7
   12f40:	andeq	r3, r1, r0, asr #7
   12f44:	andeq	r3, r1, r0, asr #7
   12f48:	andeq	r3, r1, r0, asr #7
   12f4c:	andeq	r3, r1, r0, asr #7
   12f50:	andeq	r3, r1, r0, asr #7
   12f54:	andeq	r3, r1, r0, asr #7
   12f58:	andeq	r3, r1, r0, asr #7
   12f5c:	andeq	r3, r1, r0, asr #7
   12f60:	andeq	r3, r1, r0, asr #7
   12f64:	andeq	r3, r1, r0, asr #7
   12f68:	andeq	r3, r1, r0, asr #7
   12f6c:	ldrdeq	r3, [r1], -r4
   12f70:	andeq	r3, r1, r8, lsl r3
   12f74:	andeq	r3, r1, r0, asr #7
   12f78:	ldrdeq	r3, [r1], -r4
   12f7c:	andeq	r3, r1, r0, asr #7
   12f80:	ldrdeq	r3, [r1], -r4
   12f84:	andeq	r3, r1, r0, asr #7
   12f88:	andeq	r3, r1, r0, asr #7
   12f8c:	andeq	r3, r1, r0, asr #7
   12f90:	andeq	r3, r1, r0, asr #7
   12f94:	andeq	r3, r1, r0, asr #7
   12f98:	andeq	r3, r1, r0, asr #7
   12f9c:	andeq	r3, r1, r0, asr #7
   12fa0:	andeq	r3, r1, r0, asr #7
   12fa4:	andeq	r3, r1, r0, asr #7
   12fa8:	andeq	r3, r1, r0, asr #7
   12fac:	andeq	r3, r1, r0, asr #7
   12fb0:	andeq	r3, r1, r0, asr #7
   12fb4:	andeq	r3, r1, r0, asr #7
   12fb8:	andeq	r3, r1, r0, asr #7
   12fbc:	andeq	r3, r1, r0, asr #7
   12fc0:	andeq	r3, r1, r0, asr #7
   12fc4:	andeq	r3, r1, r0, asr #7
   12fc8:	andeq	r3, r1, r0, asr #7
   12fcc:	andeq	r3, r1, r0, asr #7
   12fd0:	andeq	r3, r1, r0, asr #7
   12fd4:	andeq	r3, r1, r0, asr #7
   12fd8:	andeq	r3, r1, r0, asr #7
   12fdc:	andeq	r3, r1, r0, asr #7
   12fe0:	andeq	r3, r1, r0, asr #7
   12fe4:	andeq	r3, r1, r0, asr #7
   12fe8:	andeq	r3, r1, r0, asr #7
   12fec:	ldrdeq	r3, [r1], -r0
   12ff0:	ldrdeq	r3, [r1], -r4
   12ff4:	ldrdeq	r3, [r1], -r0
   12ff8:			; <UNDEFINED> instruction: 0x000135b4
   12ffc:	mov	r3, #1
   13000:	str	r3, [sp, #40]	; 0x28
   13004:	str	r3, [sp, #68]	; 0x44
   13008:	mov	r8, #0
   1300c:	ldr	r3, [pc, #4056]	; 13fec <_obstack_memory_used@@Base+0x15c8>
   13010:	str	r3, [sp, #72]	; 0x48
   13014:	mov	r3, #2
   13018:	str	r3, [sp, #176]	; 0xb0
   1301c:	ldr	r1, [sp, #56]	; 0x38
   13020:	mov	r2, r3
   13024:	ldr	ip, [sp, #40]	; 0x28
   13028:	mov	lr, r3
   1302c:	b	12cf8 <_obstack_memory_used@@Base+0x2d4>
   13030:	mov	r3, #1
   13034:	str	r3, [sp, #56]	; 0x38
   13038:	str	r3, [sp, #68]	; 0x44
   1303c:	str	r3, [sp, #40]	; 0x28
   13040:	ldr	r3, [pc, #4004]	; 13fec <_obstack_memory_used@@Base+0x15c8>
   13044:	mov	r8, #0
   13048:	str	r3, [sp, #72]	; 0x48
   1304c:	b	13014 <_obstack_memory_used@@Base+0x5f0>
   13050:	mov	r3, #1
   13054:	str	r3, [sp, #56]	; 0x38
   13058:	str	r3, [sp, #68]	; 0x44
   1305c:	str	r3, [sp, #40]	; 0x28
   13060:	ldr	r3, [pc, #3976]	; 13ff0 <_obstack_memory_used@@Base+0x15cc>
   13064:	mov	r8, #0
   13068:	str	r3, [sp, #72]	; 0x48
   1306c:	mov	r3, #5
   13070:	b	13018 <_obstack_memory_used@@Base+0x5f4>
   13074:	mov	r3, #0
   13078:	str	r3, [sp, #40]	; 0x28
   1307c:	mov	r3, #1
   13080:	str	r3, [sp, #56]	; 0x38
   13084:	mov	r8, #0
   13088:	mov	r1, r3
   1308c:	ldr	r2, [sp, #176]	; 0xb0
   13090:	ldr	ip, [sp, #40]	; 0x28
   13094:	ldr	lr, [sp, #176]	; 0xb0
   13098:	b	12cf8 <_obstack_memory_used@@Base+0x2d4>
   1309c:	ldr	r3, [sp, #176]	; 0xb0
   130a0:	cmp	r3, #10
   130a4:	beq	130e8 <_obstack_memory_used@@Base+0x6c4>
   130a8:	mov	r2, #5
   130ac:	ldr	r1, [pc, #3904]	; 13ff4 <_obstack_memory_used@@Base+0x15d0>
   130b0:	mov	r0, #0
   130b4:	bl	10df8 <dcgettext@plt>
   130b8:	ldr	r2, [pc, #3892]	; 13ff4 <_obstack_memory_used@@Base+0x15d0>
   130bc:	cmp	r0, r2
   130c0:	str	r0, [sp, #188]	; 0xbc
   130c4:	beq	14180 <_obstack_memory_used@@Base+0x175c>
   130c8:	mov	r2, #5
   130cc:	ldr	r1, [pc, #3864]	; 13fec <_obstack_memory_used@@Base+0x15c8>
   130d0:	mov	r0, #0
   130d4:	bl	10df8 <dcgettext@plt>
   130d8:	ldr	r2, [pc, #3852]	; 13fec <_obstack_memory_used@@Base+0x15c8>
   130dc:	cmp	r0, r2
   130e0:	str	r0, [sp, #192]	; 0xc0
   130e4:	beq	14170 <_obstack_memory_used@@Base+0x174c>
   130e8:	ldr	r8, [sp, #40]	; 0x28
   130ec:	cmp	r8, #0
   130f0:	movne	r8, #0
   130f4:	bne	13124 <_obstack_memory_used@@Base+0x700>
   130f8:	ldr	r3, [sp, #188]	; 0xbc
   130fc:	ldrb	r3, [r3]
   13100:	cmp	r3, #0
   13104:	beq	13124 <_obstack_memory_used@@Base+0x700>
   13108:	ldr	r2, [sp, #188]	; 0xbc
   1310c:	cmp	fp, r8
   13110:	strbhi	r3, [r9, r8]
   13114:	ldrb	r3, [r2, #1]!
   13118:	add	r8, r8, #1
   1311c:	cmp	r3, #0
   13120:	bne	1310c <_obstack_memory_used@@Base+0x6e8>
   13124:	ldr	r0, [sp, #192]	; 0xc0
   13128:	bl	10f0c <strlen@plt>
   1312c:	ldr	r3, [sp, #192]	; 0xc0
   13130:	ldr	r2, [sp, #176]	; 0xb0
   13134:	str	r3, [sp, #72]	; 0x48
   13138:	mov	r3, #1
   1313c:	str	r3, [sp, #56]	; 0x38
   13140:	mov	r1, r3
   13144:	ldr	ip, [sp, #40]	; 0x28
   13148:	ldr	lr, [sp, #176]	; 0xb0
   1314c:	str	r0, [sp, #68]	; 0x44
   13150:	b	12cf8 <_obstack_memory_used@@Base+0x2d4>
   13154:	ldr	r3, [sp, #40]	; 0x28
   13158:	cmp	r3, #0
   1315c:	beq	13e04 <_obstack_memory_used@@Base+0x13e0>
   13160:	mov	r3, #1
   13164:	str	r3, [sp, #68]	; 0x44
   13168:	ldr	r3, [pc, #3708]	; 13fec <_obstack_memory_used@@Base+0x15c8>
   1316c:	str	r3, [sp, #72]	; 0x48
   13170:	mov	r8, #0
   13174:	ldr	r1, [sp, #56]	; 0x38
   13178:	ldr	r2, [sp, #176]	; 0xb0
   1317c:	ldr	ip, [sp, #40]	; 0x28
   13180:	ldr	lr, [sp, #176]	; 0xb0
   13184:	b	12cf8 <_obstack_memory_used@@Base+0x2d4>
   13188:	ldr	r3, [sp, #40]	; 0x28
   1318c:	cmp	r3, #0
   13190:	beq	13e88 <_obstack_memory_used@@Base+0x1464>
   13194:	str	r3, [sp, #56]	; 0x38
   13198:	mov	r3, #1
   1319c:	str	r3, [sp, #68]	; 0x44
   131a0:	ldr	r3, [pc, #3656]	; 13ff0 <_obstack_memory_used@@Base+0x15cc>
   131a4:	b	1316c <_obstack_memory_used@@Base+0x748>
   131a8:	ldr	r3, [sp, #40]	; 0x28
   131ac:	cmp	r3, #0
   131b0:	mov	r3, #1
   131b4:	streq	r3, [sp, #56]	; 0x38
   131b8:	beq	13e04 <_obstack_memory_used@@Base+0x13e0>
   131bc:	str	r3, [sp, #68]	; 0x44
   131c0:	ldr	r3, [pc, #3620]	; 13fec <_obstack_memory_used@@Base+0x15c8>
   131c4:	mov	r8, #0
   131c8:	str	r3, [sp, #72]	; 0x48
   131cc:	b	13014 <_obstack_memory_used@@Base+0x5f0>
   131d0:	ldr	r3, [sp, #24]
   131d4:	ldr	r6, [sp, #48]	; 0x30
   131d8:	cmn	r3, #1
   131dc:	beq	13838 <_obstack_memory_used@@Base+0xe14>
   131e0:	subs	r3, r3, #1
   131e4:	movne	r3, #1
   131e8:	cmp	r3, #0
   131ec:	beq	135b8 <_obstack_memory_used@@Base+0xb94>
   131f0:	ldr	r1, [sp, #52]	; 0x34
   131f4:	mov	r7, r3
   131f8:	mov	r3, #0
   131fc:	str	r3, [sp, #32]
   13200:	ldr	r3, [sp, #60]	; 0x3c
   13204:	orr	r2, r1, r3
   13208:	ldr	r3, [sp, #40]	; 0x28
   1320c:	eor	r2, r2, #1
   13210:	orr	r2, r3, r2
   13214:	tst	r2, #255	; 0xff
   13218:	bne	13b3c <_obstack_memory_used@@Base+0x1118>
   1321c:	cmp	r6, #0
   13220:	bne	133fc <_obstack_memory_used@@Base+0x9d8>
   13224:	ldr	r3, [sp, #36]	; 0x24
   13228:	add	sl, sl, #1
   1322c:	and	r3, r3, r7
   13230:	uxtb	r6, r3
   13234:	cmp	r6, #0
   13238:	beq	13264 <_obstack_memory_used@@Base+0x840>
   1323c:	cmp	fp, r8
   13240:	movhi	r3, #39	; 0x27
   13244:	strbhi	r3, [r9, r8]
   13248:	add	r3, r8, #1
   1324c:	cmp	fp, r3
   13250:	movhi	r2, #39	; 0x27
   13254:	add	r8, r8, #2
   13258:	strbhi	r2, [r9, r3]
   1325c:	mov	r3, #0
   13260:	str	r3, [sp, #36]	; 0x24
   13264:	ldr	r2, [sp, #32]
   13268:	cmp	r8, fp
   1326c:	ldr	r3, [sp, #28]
   13270:	strbcc	r4, [r9, r8]
   13274:	cmp	r2, #0
   13278:	moveq	r3, #0
   1327c:	str	r3, [sp, #28]
   13280:	ldr	r3, [sp, #24]
   13284:	add	r8, r8, #1
   13288:	cmn	r3, #1
   1328c:	bne	12d64 <_obstack_memory_used@@Base+0x340>
   13290:	ldr	r3, [sp, #44]	; 0x2c
   13294:	ldrb	r3, [r3, sl]
   13298:	adds	r7, r3, #0
   1329c:	movne	r7, #1
   132a0:	cmp	r7, #0
   132a4:	bne	12d74 <_obstack_memory_used@@Base+0x350>
   132a8:	ldr	r3, [sp, #64]	; 0x40
   132ac:	cmp	r8, #0
   132b0:	movne	r3, #0
   132b4:	andeq	r3, r3, #1
   132b8:	cmp	r3, #0
   132bc:	str	r3, [sp, #64]	; 0x40
   132c0:	bne	13d64 <_obstack_memory_used@@Base+0x1340>
   132c4:	ldr	r3, [sp, #40]	; 0x28
   132c8:	ldr	r2, [sp, #52]	; 0x34
   132cc:	eor	r3, r3, #1
   132d0:	ands	r2, r2, r3
   132d4:	beq	14190 <_obstack_memory_used@@Base+0x176c>
   132d8:	ldr	r3, [sp, #76]	; 0x4c
   132dc:	cmp	r3, #0
   132e0:	beq	14160 <_obstack_memory_used@@Base+0x173c>
   132e4:	ldr	r3, [sp, #28]
   132e8:	cmp	r3, #0
   132ec:	bne	1411c <_obstack_memory_used@@Base+0x16f8>
   132f0:	ldr	r2, [sp, #84]	; 0x54
   132f4:	clz	r3, fp
   132f8:	cmp	r2, #0
   132fc:	lsr	r3, r3, #5
   13300:	moveq	r3, #0
   13304:	cmp	r3, #0
   13308:	beq	140bc <_obstack_memory_used@@Base+0x1698>
   1330c:	mov	fp, r2
   13310:	str	r3, [sp, #76]	; 0x4c
   13314:	b	12ca0 <_obstack_memory_used@@Base+0x27c>
   13318:	ldr	r3, [sp, #176]	; 0xb0
   1331c:	ldr	r6, [sp, #48]	; 0x30
   13320:	cmp	r3, #2
   13324:	beq	1385c <_obstack_memory_used@@Base+0xe38>
   13328:	ldr	r3, [sp, #88]	; 0x58
   1332c:	cmp	r3, #0
   13330:	beq	13de0 <_obstack_memory_used@@Base+0x13bc>
   13334:	mov	r3, #0
   13338:	add	sl, sl, #1
   1333c:	ldr	r6, [sp, #36]	; 0x24
   13340:	str	r3, [sp, #32]
   13344:	mov	r4, #92	; 0x5c
   13348:	b	13234 <_obstack_memory_used@@Base+0x810>
   1334c:	ldr	r3, [sp, #176]	; 0xb0
   13350:	ldr	r6, [sp, #48]	; 0x30
   13354:	cmp	r3, #2
   13358:	beq	1388c <_obstack_memory_used@@Base+0xe68>
   1335c:	cmp	r3, #5
   13360:	bne	13df0 <_obstack_memory_used@@Base+0x13cc>
   13364:	ldr	r3, [sp, #100]	; 0x64
   13368:	cmp	r3, #0
   1336c:	beq	13e54 <_obstack_memory_used@@Base+0x1430>
   13370:	ldr	r2, [sp, #24]
   13374:	add	r3, sl, #2
   13378:	cmp	r2, r3
   1337c:	bls	1338c <_obstack_memory_used@@Base+0x968>
   13380:	ldrb	r4, [r5, #1]
   13384:	cmp	r4, #63	; 0x3f
   13388:	beq	13ffc <_obstack_memory_used@@Base+0x15d8>
   1338c:	mov	r1, #0
   13390:	str	r1, [sp, #32]
   13394:	mov	r4, #63	; 0x3f
   13398:	b	13200 <_obstack_memory_used@@Base+0x7dc>
   1339c:	ldr	r3, [sp, #176]	; 0xb0
   133a0:	ldr	r6, [sp, #48]	; 0x30
   133a4:	cmp	r3, #2
   133a8:	beq	138b8 <_obstack_memory_used@@Base+0xe94>
   133ac:	str	r7, [sp, #32]
   133b0:	str	r7, [sp, #76]	; 0x4c
   133b4:	mov	r1, #0
   133b8:	mov	r4, #39	; 0x27
   133bc:	b	13200 <_obstack_memory_used@@Base+0x7dc>
   133c0:	ldr	r6, [sp, #48]	; 0x30
   133c4:	ldr	r1, [sp, #52]	; 0x34
   133c8:	str	r7, [sp, #32]
   133cc:	b	13200 <_obstack_memory_used@@Base+0x7dc>
   133d0:	ldr	r6, [sp, #48]	; 0x30
   133d4:	ldr	r1, [sp, #52]	; 0x34
   133d8:	mov	r4, #12
   133dc:	mov	r3, #102	; 0x66
   133e0:	ldr	r2, [sp, #56]	; 0x38
   133e4:	cmp	r2, #0
   133e8:	streq	r2, [sp, #32]
   133ec:	beq	13200 <_obstack_memory_used@@Base+0x7dc>
   133f0:	mov	r4, r3
   133f4:	mov	r3, #0
   133f8:	str	r3, [sp, #32]
   133fc:	ldr	r3, [sp, #40]	; 0x28
   13400:	cmp	r3, #0
   13404:	bne	13b74 <_obstack_memory_used@@Base+0x1150>
   13408:	ldr	r3, [sp, #36]	; 0x24
   1340c:	eor	r3, r3, #1
   13410:	and	r3, r3, r1
   13414:	ands	r3, r3, #255	; 0xff
   13418:	beq	13450 <_obstack_memory_used@@Base+0xa2c>
   1341c:	cmp	fp, r8
   13420:	movhi	r2, #39	; 0x27
   13424:	strbhi	r2, [r9, r8]
   13428:	add	r2, r8, #1
   1342c:	cmp	fp, r2
   13430:	movhi	r1, #36	; 0x24
   13434:	strbhi	r1, [r9, r2]
   13438:	add	r2, r8, #2
   1343c:	cmp	fp, r2
   13440:	add	r8, r8, #3
   13444:	movhi	r1, #39	; 0x27
   13448:	strbhi	r1, [r9, r2]
   1344c:	str	r3, [sp, #36]	; 0x24
   13450:	cmp	fp, r8
   13454:	movhi	r3, #92	; 0x5c
   13458:	strbhi	r3, [r9, r8]
   1345c:	add	sl, sl, #1
   13460:	add	r8, r8, #1
   13464:	b	13264 <_obstack_memory_used@@Base+0x840>
   13468:	ldr	r6, [sp, #48]	; 0x30
   1346c:	mov	r4, #10
   13470:	mov	r3, #110	; 0x6e
   13474:	ldr	r2, [sp, #64]	; 0x40
   13478:	cmp	r2, #0
   1347c:	bne	13efc <_obstack_memory_used@@Base+0x14d8>
   13480:	ldr	r1, [sp, #52]	; 0x34
   13484:	b	133e0 <_obstack_memory_used@@Base+0x9bc>
   13488:	ldr	r6, [sp, #48]	; 0x30
   1348c:	ldr	r1, [sp, #52]	; 0x34
   13490:	mov	r3, #116	; 0x74
   13494:	b	133e0 <_obstack_memory_used@@Base+0x9bc>
   13498:	ldr	r6, [sp, #48]	; 0x30
   1349c:	ldr	r1, [sp, #52]	; 0x34
   134a0:	mov	r4, #11
   134a4:	mov	r3, #118	; 0x76
   134a8:	b	133e0 <_obstack_memory_used@@Base+0x9bc>
   134ac:	ldr	r6, [sp, #48]	; 0x30
   134b0:	ldr	r1, [sp, #52]	; 0x34
   134b4:	mov	r4, #8
   134b8:	mov	r3, #98	; 0x62
   134bc:	b	133e0 <_obstack_memory_used@@Base+0x9bc>
   134c0:	ldr	r6, [sp, #48]	; 0x30
   134c4:	ldr	r1, [sp, #52]	; 0x34
   134c8:	mov	r4, #7
   134cc:	mov	r3, #97	; 0x61
   134d0:	b	133e0 <_obstack_memory_used@@Base+0x9bc>
   134d4:	ldr	r3, [sp, #56]	; 0x38
   134d8:	ldr	r6, [sp, #48]	; 0x30
   134dc:	cmp	r3, #0
   134e0:	beq	139a4 <_obstack_memory_used@@Base+0xf80>
   134e4:	ldr	r3, [sp, #40]	; 0x28
   134e8:	cmp	r3, #0
   134ec:	bne	13fd8 <_obstack_memory_used@@Base+0x15b4>
   134f0:	ldr	r3, [sp, #36]	; 0x24
   134f4:	ldr	r2, [sp, #52]	; 0x34
   134f8:	eor	r3, r3, #1
   134fc:	ands	r3, r2, r3
   13500:	moveq	r2, r8
   13504:	beq	1353c <_obstack_memory_used@@Base+0xb18>
   13508:	cmp	fp, r8
   1350c:	movhi	r2, #39	; 0x27
   13510:	strbhi	r2, [r9, r8]
   13514:	add	r2, r8, #1
   13518:	cmp	fp, r2
   1351c:	movhi	r1, #36	; 0x24
   13520:	strbhi	r1, [r9, r2]
   13524:	add	r2, r8, #2
   13528:	cmp	fp, r2
   1352c:	movhi	r1, #39	; 0x27
   13530:	strbhi	r1, [r9, r2]
   13534:	add	r2, r8, #3
   13538:	str	r3, [sp, #36]	; 0x24
   1353c:	cmp	fp, r2
   13540:	movhi	r3, #92	; 0x5c
   13544:	strbhi	r3, [r9, r2]
   13548:	ldr	r3, [sp, #92]	; 0x5c
   1354c:	add	r8, r2, #1
   13550:	cmp	r3, #0
   13554:	beq	13ed8 <_obstack_memory_used@@Base+0x14b4>
   13558:	ldr	r1, [sp, #24]
   1355c:	add	r3, sl, #1
   13560:	cmp	r1, r3
   13564:	bls	1359c <_obstack_memory_used@@Base+0xb78>
   13568:	ldr	r1, [sp, #44]	; 0x2c
   1356c:	ldrb	r3, [r1, r3]
   13570:	sub	r3, r3, #48	; 0x30
   13574:	cmp	r3, #9
   13578:	bhi	1359c <_obstack_memory_used@@Base+0xb78>
   1357c:	cmp	fp, r8
   13580:	movhi	r3, #48	; 0x30
   13584:	strbhi	r3, [r9, r8]
   13588:	add	r3, r2, #2
   1358c:	cmp	fp, r3
   13590:	add	r8, r2, #3
   13594:	movhi	r1, #48	; 0x30
   13598:	strbhi	r1, [r9, r3]
   1359c:	ldr	r3, [sp, #40]	; 0x28
   135a0:	ldr	r1, [sp, #52]	; 0x34
   135a4:	mov	r7, r3
   135a8:	str	r3, [sp, #32]
   135ac:	mov	r4, #48	; 0x30
   135b0:	b	13200 <_obstack_memory_used@@Base+0x7dc>
   135b4:	ldr	r6, [sp, #48]	; 0x30
   135b8:	cmp	sl, #0
   135bc:	streq	r7, [sp, #32]
   135c0:	beq	135e0 <_obstack_memory_used@@Base+0xbbc>
   135c4:	mov	r3, #0
   135c8:	ldr	r1, [sp, #52]	; 0x34
   135cc:	str	r3, [sp, #32]
   135d0:	b	13200 <_obstack_memory_used@@Base+0x7dc>
   135d4:	ldr	r6, [sp, #48]	; 0x30
   135d8:	mov	r3, #0
   135dc:	str	r3, [sp, #32]
   135e0:	ldr	r3, [sp, #64]	; 0x40
   135e4:	cmp	r3, #0
   135e8:	bne	13d64 <_obstack_memory_used@@Base+0x1340>
   135ec:	ldr	r1, [sp, #52]	; 0x34
   135f0:	b	13200 <_obstack_memory_used@@Base+0x7dc>
   135f4:	ldr	r3, [sp, #48]	; 0x30
   135f8:	mov	r6, r3
   135fc:	str	r3, [sp, #32]
   13600:	b	135e0 <_obstack_memory_used@@Base+0xbbc>
   13604:	ldr	r6, [sp, #48]	; 0x30
   13608:	mov	r4, #13
   1360c:	mov	r3, #114	; 0x72
   13610:	b	13474 <_obstack_memory_used@@Base+0xa50>
   13614:	ldr	r3, [sp, #44]	; 0x2c
   13618:	add	r5, r3, sl
   1361c:	ldrb	r4, [r5]
   13620:	cmp	r4, #126	; 0x7e
   13624:	ldrls	pc, [pc, r4, lsl #2]
   13628:	b	139c4 <_obstack_memory_used@@Base+0xfa0>
   1362c:	muleq	r1, r4, r9
   13630:	andeq	r3, r1, r4, asr #19
   13634:	andeq	r3, r1, r4, asr #19
   13638:	andeq	r3, r1, r4, asr #19
   1363c:	andeq	r3, r1, r4, asr #19
   13640:	andeq	r3, r1, r4, asr #19
   13644:	andeq	r3, r1, r4, asr #19
   13648:	andeq	r3, r1, ip, lsl #19
   1364c:	andeq	r3, r1, r4, lsl #19
   13650:	andeq	r3, r1, r8, ror r9
   13654:	andeq	r3, r1, r0, ror r9
   13658:	andeq	r3, r1, r8, ror #18
   1365c:	andeq	r3, r1, r0, ror #18
   13660:	andeq	r3, r1, r8, asr r9
   13664:	andeq	r3, r1, r4, asr #19
   13668:	andeq	r3, r1, r4, asr #19
   1366c:	andeq	r3, r1, r4, asr #19
   13670:	andeq	r3, r1, r4, asr #19
   13674:	andeq	r3, r1, r4, asr #19
   13678:	andeq	r3, r1, r4, asr #19
   1367c:	andeq	r3, r1, r4, asr #19
   13680:	andeq	r3, r1, r4, asr #19
   13684:	andeq	r3, r1, r4, asr #19
   13688:	andeq	r3, r1, r4, asr #19
   1368c:	andeq	r3, r1, r4, asr #19
   13690:	andeq	r3, r1, r4, asr #19
   13694:	andeq	r3, r1, r4, asr #19
   13698:	andeq	r3, r1, r4, asr #19
   1369c:	andeq	r3, r1, r4, asr #19
   136a0:	andeq	r3, r1, r4, asr #19
   136a4:	andeq	r3, r1, r4, asr #19
   136a8:	andeq	r3, r1, r4, asr #19
   136ac:	andeq	r3, r1, ip, asr #18
   136b0:	andeq	r3, r1, r4, asr #18
   136b4:	andeq	r3, r1, r4, asr #18
   136b8:	andeq	r3, r1, ip, lsr r9
   136bc:	andeq	r3, r1, r4, asr #18
   136c0:	andeq	r3, r1, r4, lsr r9
   136c4:	andeq	r3, r1, r4, asr #18
   136c8:	andeq	r3, r1, r8, lsr #17
   136cc:	andeq	r3, r1, r4, asr #18
   136d0:	andeq	r3, r1, r4, asr #18
   136d4:	andeq	r3, r1, r4, asr #18
   136d8:	andeq	r3, r1, r4, lsr r9
   136dc:	andeq	r3, r1, r4, lsr r9
   136e0:	andeq	r3, r1, r4, lsr r9
   136e4:	andeq	r3, r1, r4, lsr r9
   136e8:	andeq	r3, r1, r4, lsr r9
   136ec:	andeq	r3, r1, r4, lsr r9
   136f0:	andeq	r3, r1, r4, lsr r9
   136f4:	andeq	r3, r1, r4, lsr r9
   136f8:	andeq	r3, r1, r4, lsr r9
   136fc:	andeq	r3, r1, r4, lsr r9
   13700:	andeq	r3, r1, r4, lsr r9
   13704:	andeq	r3, r1, r4, lsr r9
   13708:	andeq	r3, r1, r4, lsr r9
   1370c:	andeq	r3, r1, r4, lsr r9
   13710:	andeq	r3, r1, r4, lsr r9
   13714:	andeq	r3, r1, r4, lsr r9
   13718:	andeq	r3, r1, r4, asr #18
   1371c:	andeq	r3, r1, r4, asr #18
   13720:	andeq	r3, r1, r4, asr #18
   13724:	andeq	r3, r1, r4, asr #18
   13728:	andeq	r3, r1, ip, ror r8
   1372c:	andeq	r3, r1, r4, asr #19
   13730:	andeq	r3, r1, r4, lsr r9
   13734:	andeq	r3, r1, r4, lsr r9
   13738:	andeq	r3, r1, r4, lsr r9
   1373c:	andeq	r3, r1, r4, lsr r9
   13740:	andeq	r3, r1, r4, lsr r9
   13744:	andeq	r3, r1, r4, lsr r9
   13748:	andeq	r3, r1, r4, lsr r9
   1374c:	andeq	r3, r1, r4, lsr r9
   13750:	andeq	r3, r1, r4, lsr r9
   13754:	andeq	r3, r1, r4, lsr r9
   13758:	andeq	r3, r1, r4, lsr r9
   1375c:	andeq	r3, r1, r4, lsr r9
   13760:	andeq	r3, r1, r4, lsr r9
   13764:	andeq	r3, r1, r4, lsr r9
   13768:	andeq	r3, r1, r4, lsr r9
   1376c:	andeq	r3, r1, r4, lsr r9
   13770:	andeq	r3, r1, r4, lsr r9
   13774:	andeq	r3, r1, r4, lsr r9
   13778:	andeq	r3, r1, r4, lsr r9
   1377c:	andeq	r3, r1, r4, lsr r9
   13780:	andeq	r3, r1, r4, lsr r9
   13784:	andeq	r3, r1, r4, lsr r9
   13788:	andeq	r3, r1, r4, lsr r9
   1378c:	andeq	r3, r1, r4, lsr r9
   13790:	andeq	r3, r1, r4, lsr r9
   13794:	andeq	r3, r1, r4, lsr r9
   13798:	andeq	r3, r1, r4, asr #18
   1379c:	andeq	r3, r1, ip, asr #16
   137a0:	andeq	r3, r1, r4, lsr r9
   137a4:	andeq	r3, r1, r4, asr #18
   137a8:	andeq	r3, r1, r4, lsr r9
   137ac:	andeq	r3, r1, r4, asr #18
   137b0:	andeq	r3, r1, r4, lsr r9
   137b4:	andeq	r3, r1, r4, lsr r9
   137b8:	andeq	r3, r1, r4, lsr r9
   137bc:	andeq	r3, r1, r4, lsr r9
   137c0:	andeq	r3, r1, r4, lsr r9
   137c4:	andeq	r3, r1, r4, lsr r9
   137c8:	andeq	r3, r1, r4, lsr r9
   137cc:	andeq	r3, r1, r4, lsr r9
   137d0:	andeq	r3, r1, r4, lsr r9
   137d4:	andeq	r3, r1, r4, lsr r9
   137d8:	andeq	r3, r1, r4, lsr r9
   137dc:	andeq	r3, r1, r4, lsr r9
   137e0:	andeq	r3, r1, r4, lsr r9
   137e4:	andeq	r3, r1, r4, lsr r9
   137e8:	andeq	r3, r1, r4, lsr r9
   137ec:	andeq	r3, r1, r4, lsr r9
   137f0:	andeq	r3, r1, r4, lsr r9
   137f4:	andeq	r3, r1, r4, lsr r9
   137f8:	andeq	r3, r1, r4, lsr r9
   137fc:	andeq	r3, r1, r4, lsr r9
   13800:	andeq	r3, r1, r4, lsr r9
   13804:	andeq	r3, r1, r4, lsr r9
   13808:	andeq	r3, r1, r4, lsr r9
   1380c:	andeq	r3, r1, r4, lsr r9
   13810:	andeq	r3, r1, r4, lsr r9
   13814:	andeq	r3, r1, r4, lsr r9
   13818:	andeq	r3, r1, r8, lsr #16
   1381c:	andeq	r3, r1, r4, asr #18
   13820:	andeq	r3, r1, r8, lsr #16
   13824:	andeq	r3, r1, ip, lsr r9
   13828:	ldr	r3, [sp, #24]
   1382c:	mov	r6, #0
   13830:	cmn	r3, #1
   13834:	bne	131e0 <_obstack_memory_used@@Base+0x7bc>
   13838:	ldr	r3, [sp, #44]	; 0x2c
   1383c:	ldrb	r3, [r3, #1]
   13840:	adds	r3, r3, #0
   13844:	movne	r3, #1
   13848:	b	131e8 <_obstack_memory_used@@Base+0x7c4>
   1384c:	ldr	r3, [sp, #176]	; 0xb0
   13850:	mov	r6, #0
   13854:	cmp	r3, #2
   13858:	bne	13328 <_obstack_memory_used@@Base+0x904>
   1385c:	ldr	r3, [sp, #64]	; 0x40
   13860:	cmp	r3, #0
   13864:	bne	1409c <_obstack_memory_used@@Base+0x1678>
   13868:	add	sl, sl, #1
   1386c:	ldr	r6, [sp, #36]	; 0x24
   13870:	str	r3, [sp, #32]
   13874:	mov	r4, #92	; 0x5c
   13878:	b	13234 <_obstack_memory_used@@Base+0x810>
   1387c:	ldr	r3, [sp, #176]	; 0xb0
   13880:	mov	r6, #0
   13884:	cmp	r3, #2
   13888:	bne	1335c <_obstack_memory_used@@Base+0x938>
   1388c:	ldr	r3, [sp, #40]	; 0x28
   13890:	cmp	r3, #0
   13894:	bne	13b78 <_obstack_memory_used@@Base+0x1154>
   13898:	mov	r1, r7
   1389c:	str	r3, [sp, #32]
   138a0:	mov	r4, #63	; 0x3f
   138a4:	b	13200 <_obstack_memory_used@@Base+0x7dc>
   138a8:	ldr	r3, [sp, #176]	; 0xb0
   138ac:	mov	r6, #0
   138b0:	cmp	r3, #2
   138b4:	bne	133ac <_obstack_memory_used@@Base+0x988>
   138b8:	ldr	r3, [sp, #64]	; 0x40
   138bc:	cmp	r3, #0
   138c0:	bne	1409c <_obstack_memory_used@@Base+0x1678>
   138c4:	ldr	r2, [sp, #84]	; 0x54
   138c8:	adds	r3, fp, #0
   138cc:	movne	r3, #1
   138d0:	cmp	r2, #0
   138d4:	movne	r3, #0
   138d8:	cmp	r3, #0
   138dc:	strne	fp, [sp, #84]	; 0x54
   138e0:	movne	fp, #0
   138e4:	bne	13914 <_obstack_memory_used@@Base+0xef0>
   138e8:	cmp	fp, r8
   138ec:	movhi	r3, #39	; 0x27
   138f0:	strbhi	r3, [r9, r8]
   138f4:	add	r3, r8, #1
   138f8:	cmp	fp, r3
   138fc:	movhi	r2, #92	; 0x5c
   13900:	strbhi	r2, [r9, r3]
   13904:	add	r3, r8, #2
   13908:	cmp	fp, r3
   1390c:	movhi	r2, #39	; 0x27
   13910:	strbhi	r2, [r9, r3]
   13914:	ldr	r3, [sp, #64]	; 0x40
   13918:	add	r8, r8, #3
   1391c:	mov	r1, r7
   13920:	str	r7, [sp, #32]
   13924:	str	r7, [sp, #76]	; 0x4c
   13928:	str	r3, [sp, #36]	; 0x24
   1392c:	mov	r4, #39	; 0x27
   13930:	b	13200 <_obstack_memory_used@@Base+0x7dc>
   13934:	mov	r6, #0
   13938:	b	133c4 <_obstack_memory_used@@Base+0x9a0>
   1393c:	mov	r6, #0
   13940:	b	135b8 <_obstack_memory_used@@Base+0xb94>
   13944:	mov	r6, #0
   13948:	b	135d8 <_obstack_memory_used@@Base+0xbb4>
   1394c:	str	r7, [sp, #32]
   13950:	mov	r6, #0
   13954:	b	135e0 <_obstack_memory_used@@Base+0xbbc>
   13958:	mov	r6, #0
   1395c:	b	13608 <_obstack_memory_used@@Base+0xbe4>
   13960:	mov	r6, #0
   13964:	b	133d4 <_obstack_memory_used@@Base+0x9b0>
   13968:	mov	r6, #0
   1396c:	b	1349c <_obstack_memory_used@@Base+0xa78>
   13970:	mov	r6, #0
   13974:	b	1346c <_obstack_memory_used@@Base+0xa48>
   13978:	mov	r6, #0
   1397c:	mov	r3, #116	; 0x74
   13980:	b	13474 <_obstack_memory_used@@Base+0xa50>
   13984:	mov	r6, #0
   13988:	b	134b0 <_obstack_memory_used@@Base+0xa8c>
   1398c:	mov	r6, #0
   13990:	b	134c4 <_obstack_memory_used@@Base+0xaa0>
   13994:	ldr	r3, [sp, #56]	; 0x38
   13998:	mov	r6, #0
   1399c:	cmp	r3, #0
   139a0:	bne	134e4 <_obstack_memory_used@@Base+0xac0>
   139a4:	ldr	r3, [sp, #96]	; 0x60
   139a8:	cmp	r3, #0
   139ac:	addne	sl, sl, #1
   139b0:	bne	12d58 <_obstack_memory_used@@Base+0x334>
   139b4:	ldr	r1, [sp, #52]	; 0x34
   139b8:	str	r3, [sp, #32]
   139bc:	mov	r4, r3
   139c0:	b	13200 <_obstack_memory_used@@Base+0x7dc>
   139c4:	mov	r6, #0
   139c8:	ldr	r3, [sp, #80]	; 0x50
   139cc:	cmp	r3, #1
   139d0:	bne	13bc0 <_obstack_memory_used@@Base+0x119c>
   139d4:	bl	10ef4 <__ctype_b_loc@plt>
   139d8:	ldr	r2, [sp, #80]	; 0x50
   139dc:	sxth	r3, r4
   139e0:	mov	r1, r2
   139e4:	lsl	r3, r3, #1
   139e8:	ldr	r2, [r0]
   139ec:	ldrh	r3, [r2, r3]
   139f0:	and	r3, r3, #16384	; 0x4000
   139f4:	cmp	r3, #0
   139f8:	movne	r3, #1
   139fc:	moveq	r3, #0
   13a00:	str	r3, [sp, #32]
   13a04:	moveq	r3, #1
   13a08:	movne	r3, #0
   13a0c:	ldr	r2, [sp, #56]	; 0x38
   13a10:	and	r3, r3, r2
   13a14:	ands	r3, r3, #255	; 0xff
   13a18:	beq	135ec <_obstack_memory_used@@Base+0xbc8>
   13a1c:	add	r1, sl, r1
   13a20:	mov	r0, #0
   13a24:	ldr	r7, [sp, #40]	; 0x28
   13a28:	ldr	r2, [sp, #36]	; 0x24
   13a2c:	ldr	lr, [sp, #52]	; 0x34
   13a30:	b	13ae0 <_obstack_memory_used@@Base+0x10bc>
   13a34:	cmp	r7, #0
   13a38:	bne	13e34 <_obstack_memory_used@@Base+0x1410>
   13a3c:	eor	r0, r2, #1
   13a40:	ands	r0, lr, r0
   13a44:	beq	13a7c <_obstack_memory_used@@Base+0x1058>
   13a48:	cmp	fp, r8
   13a4c:	movhi	r2, #39	; 0x27
   13a50:	strbhi	r2, [r9, r8]
   13a54:	add	r2, r8, #1
   13a58:	cmp	fp, r2
   13a5c:	movhi	ip, #36	; 0x24
   13a60:	strbhi	ip, [r9, r2]
   13a64:	add	r2, r8, #2
   13a68:	cmp	fp, r2
   13a6c:	movhi	ip, #39	; 0x27
   13a70:	strbhi	ip, [r9, r2]
   13a74:	add	r8, r8, #3
   13a78:	mov	r2, r0
   13a7c:	cmp	fp, r8
   13a80:	movhi	r0, #92	; 0x5c
   13a84:	strbhi	r0, [r9, r8]
   13a88:	add	r0, r8, #1
   13a8c:	cmp	fp, r0
   13a90:	lsrhi	ip, r4, #6
   13a94:	addhi	ip, ip, #48	; 0x30
   13a98:	strbhi	ip, [r9, r0]
   13a9c:	add	ip, r8, #2
   13aa0:	cmp	fp, ip
   13aa4:	lsrhi	r0, r4, #3
   13aa8:	andhi	r0, r0, #7
   13aac:	addhi	r0, r0, #48	; 0x30
   13ab0:	add	sl, sl, #1
   13ab4:	strbhi	r0, [r9, ip]
   13ab8:	and	r4, r4, #7
   13abc:	cmp	sl, r1
   13ac0:	add	r4, r4, #48	; 0x30
   13ac4:	add	r8, r8, #3
   13ac8:	bcs	13e4c <_obstack_memory_used@@Base+0x1428>
   13acc:	mov	r0, r3
   13ad0:	cmp	fp, r8
   13ad4:	strbhi	r4, [r9, r8]
   13ad8:	ldrb	r4, [r5, #1]!
   13adc:	add	r8, r8, #1
   13ae0:	cmp	r3, #0
   13ae4:	bne	13a34 <_obstack_memory_used@@Base+0x1010>
   13ae8:	cmp	r6, #0
   13aec:	bne	13b90 <_obstack_memory_used@@Base+0x116c>
   13af0:	eor	r6, r0, #1
   13af4:	and	r6, r6, r2
   13af8:	add	sl, sl, #1
   13afc:	cmp	r1, sl
   13b00:	uxtb	r6, r6
   13b04:	bls	13bb8 <_obstack_memory_used@@Base+0x1194>
   13b08:	cmp	r6, #0
   13b0c:	beq	13ad0 <_obstack_memory_used@@Base+0x10ac>
   13b10:	cmp	fp, r8
   13b14:	movhi	r2, #39	; 0x27
   13b18:	strbhi	r2, [r9, r8]
   13b1c:	add	r2, r8, #1
   13b20:	cmp	fp, r2
   13b24:	movhi	ip, #39	; 0x27
   13b28:	strbhi	ip, [r9, r2]
   13b2c:	add	r8, r8, #2
   13b30:	mov	r6, r3
   13b34:	mov	r2, r3
   13b38:	b	13ad0 <_obstack_memory_used@@Base+0x10ac>
   13b3c:	ldr	r3, [sp, #184]	; 0xb8
   13b40:	cmp	r3, #0
   13b44:	beq	1321c <_obstack_memory_used@@Base+0x7f8>
   13b48:	lsr	r2, r4, #5
   13b4c:	mov	r0, r3
   13b50:	uxtb	r2, r2
   13b54:	and	r3, r4, #31
   13b58:	ldr	r2, [r0, r2, lsl #2]
   13b5c:	lsr	r3, r2, r3
   13b60:	tst	r3, #1
   13b64:	beq	1321c <_obstack_memory_used@@Base+0x7f8>
   13b68:	ldr	r3, [sp, #40]	; 0x28
   13b6c:	cmp	r3, #0
   13b70:	beq	13408 <_obstack_memory_used@@Base+0x9e4>
   13b74:	mov	r3, r1
   13b78:	str	r3, [sp, #64]	; 0x40
   13b7c:	mov	sl, r9
   13b80:	ldr	r3, [sp, #56]	; 0x38
   13b84:	mov	r9, fp
   13b88:	ldr	r2, [sp, #64]	; 0x40
   13b8c:	b	13d7c <_obstack_memory_used@@Base+0x1358>
   13b90:	cmp	fp, r8
   13b94:	eor	r6, r0, #1
   13b98:	movhi	ip, #92	; 0x5c
   13b9c:	and	r6, r6, r2
   13ba0:	add	sl, sl, #1
   13ba4:	strbhi	ip, [r9, r8]
   13ba8:	cmp	r1, sl
   13bac:	add	r8, r8, #1
   13bb0:	uxtb	r6, r6
   13bb4:	bhi	13b08 <_obstack_memory_used@@Base+0x10e4>
   13bb8:	str	r2, [sp, #36]	; 0x24
   13bbc:	b	13234 <_obstack_memory_used@@Base+0x810>
   13bc0:	ldr	r3, [sp, #24]
   13bc4:	cmn	r3, #1
   13bc8:	mov	r3, #0
   13bcc:	str	r3, [sp, #128]	; 0x80
   13bd0:	str	r3, [sp, #132]	; 0x84
   13bd4:	beq	13ec8 <_obstack_memory_used@@Base+0x14a4>
   13bd8:	mov	r2, r7
   13bdc:	mov	r3, #0
   13be0:	str	r7, [sp, #104]	; 0x68
   13be4:	str	r5, [sp, #116]	; 0x74
   13be8:	mov	r7, r3
   13bec:	mov	r5, r2
   13bf0:	str	r4, [sp, #32]
   13bf4:	str	r6, [sp, #108]	; 0x6c
   13bf8:	str	r8, [sp, #112]	; 0x70
   13bfc:	ldr	r3, [sp, #44]	; 0x2c
   13c00:	add	r6, sl, r7
   13c04:	add	r4, r3, r6
   13c08:	ldr	r3, [sp, #24]
   13c0c:	mov	r1, r4
   13c10:	sub	r2, r3, r6
   13c14:	add	r0, sp, #124	; 0x7c
   13c18:	add	r3, sp, #128	; 0x80
   13c1c:	bl	17ce8 <_obstack_memory_used@@Base+0x52c4>
   13c20:	subs	r8, r0, #0
   13c24:	beq	13fac <_obstack_memory_used@@Base+0x1588>
   13c28:	cmn	r8, #1
   13c2c:	beq	13f84 <_obstack_memory_used@@Base+0x1560>
   13c30:	cmn	r8, #2
   13c34:	beq	13f1c <_obstack_memory_used@@Base+0x14f8>
   13c38:	ldr	r3, [sp, #64]	; 0x40
   13c3c:	cmp	r3, #0
   13c40:	beq	13d00 <_obstack_memory_used@@Base+0x12dc>
   13c44:	cmp	r8, #1
   13c48:	beq	13d00 <_obstack_memory_used@@Base+0x12dc>
   13c4c:	sub	r3, r8, #1
   13c50:	add	r6, r3, r6
   13c54:	ldr	r3, [sp, #44]	; 0x2c
   13c58:	add	r6, r3, r6
   13c5c:	ldrb	r3, [r4, #1]!
   13c60:	sub	r3, r3, #91	; 0x5b
   13c64:	cmp	r3, #33	; 0x21
   13c68:	ldrls	pc, [pc, r3, lsl #2]
   13c6c:	b	13cf8 <_obstack_memory_used@@Base+0x12d4>
   13c70:	andeq	r3, r1, r4, ror #26
   13c74:	andeq	r3, r1, r4, ror #26
   13c78:	strdeq	r3, [r1], -r8
   13c7c:	andeq	r3, r1, r4, ror #26
   13c80:	strdeq	r3, [r1], -r8
   13c84:	andeq	r3, r1, r4, ror #26
   13c88:	strdeq	r3, [r1], -r8
   13c8c:	strdeq	r3, [r1], -r8
   13c90:	strdeq	r3, [r1], -r8
   13c94:	strdeq	r3, [r1], -r8
   13c98:	strdeq	r3, [r1], -r8
   13c9c:	strdeq	r3, [r1], -r8
   13ca0:	strdeq	r3, [r1], -r8
   13ca4:	strdeq	r3, [r1], -r8
   13ca8:	strdeq	r3, [r1], -r8
   13cac:	strdeq	r3, [r1], -r8
   13cb0:	strdeq	r3, [r1], -r8
   13cb4:	strdeq	r3, [r1], -r8
   13cb8:	strdeq	r3, [r1], -r8
   13cbc:	strdeq	r3, [r1], -r8
   13cc0:	strdeq	r3, [r1], -r8
   13cc4:	strdeq	r3, [r1], -r8
   13cc8:	strdeq	r3, [r1], -r8
   13ccc:	strdeq	r3, [r1], -r8
   13cd0:	strdeq	r3, [r1], -r8
   13cd4:	strdeq	r3, [r1], -r8
   13cd8:	strdeq	r3, [r1], -r8
   13cdc:	strdeq	r3, [r1], -r8
   13ce0:	strdeq	r3, [r1], -r8
   13ce4:	strdeq	r3, [r1], -r8
   13ce8:	strdeq	r3, [r1], -r8
   13cec:	strdeq	r3, [r1], -r8
   13cf0:	strdeq	r3, [r1], -r8
   13cf4:	andeq	r3, r1, r4, ror #26
   13cf8:	cmp	r6, r4
   13cfc:	bne	13c5c <_obstack_memory_used@@Base+0x1238>
   13d00:	ldr	r0, [sp, #124]	; 0x7c
   13d04:	bl	10e28 <iswprint@plt>
   13d08:	add	r7, r7, r8
   13d0c:	cmp	r0, #0
   13d10:	add	r0, sp, #128	; 0x80
   13d14:	moveq	r5, #0
   13d18:	bl	10dc8 <mbsinit@plt>
   13d1c:	cmp	r0, #0
   13d20:	beq	13bfc <_obstack_memory_used@@Base+0x11d8>
   13d24:	ldr	r4, [sp, #32]
   13d28:	str	r5, [sp, #32]
   13d2c:	ldr	r3, [sp, #32]
   13d30:	mov	r1, r7
   13d34:	eor	r3, r3, #1
   13d38:	ldr	r7, [sp, #104]	; 0x68
   13d3c:	ldr	r6, [sp, #108]	; 0x6c
   13d40:	ldr	r8, [sp, #112]	; 0x70
   13d44:	ldr	r5, [sp, #116]	; 0x74
   13d48:	uxtb	r3, r3
   13d4c:	cmp	r1, #1
   13d50:	bls	13a0c <_obstack_memory_used@@Base+0xfe8>
   13d54:	ldr	r2, [sp, #56]	; 0x38
   13d58:	and	r3, r3, r2
   13d5c:	uxtb	r3, r3
   13d60:	b	13a1c <_obstack_memory_used@@Base+0xff8>
   13d64:	mov	r3, #2
   13d68:	str	r3, [sp, #176]	; 0xb0
   13d6c:	ldr	r2, [sp, #64]	; 0x40
   13d70:	ldr	r3, [sp, #56]	; 0x38
   13d74:	mov	sl, r9
   13d78:	mov	r9, fp
   13d7c:	and	r3, r3, r2
   13d80:	tst	r3, #255	; 0xff
   13d84:	ldr	r3, [sp, #176]	; 0xb0
   13d88:	movne	r3, #4
   13d8c:	str	r3, [sp, #176]	; 0xb0
   13d90:	ldr	r3, [sp, #180]	; 0xb4
   13d94:	mov	ip, #0
   13d98:	bic	r3, r3, #2
   13d9c:	str	r3, [sp, #4]
   13da0:	ldr	r3, [sp, #192]	; 0xc0
   13da4:	ldr	r2, [sp, #44]	; 0x2c
   13da8:	str	r3, [sp, #16]
   13dac:	ldr	r3, [sp, #188]	; 0xbc
   13db0:	mov	r1, r9
   13db4:	str	r3, [sp, #12]
   13db8:	ldr	r3, [sp, #176]	; 0xb0
   13dbc:	mov	r0, sl
   13dc0:	str	r3, [sp]
   13dc4:	str	ip, [sp, #8]
   13dc8:	ldr	r3, [sp, #24]
   13dcc:	bl	12c2c <_obstack_memory_used@@Base+0x208>
   13dd0:	mov	fp, r0
   13dd4:	mov	r0, fp
   13dd8:	add	sp, sp, #140	; 0x8c
   13ddc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13de0:	mov	r4, #92	; 0x5c
   13de4:	mov	r1, #0
   13de8:	mov	r3, r4
   13dec:	b	133e0 <_obstack_memory_used@@Base+0x9bc>
   13df0:	mov	r3, #0
   13df4:	ldr	r1, [sp, #52]	; 0x34
   13df8:	str	r3, [sp, #32]
   13dfc:	mov	r4, #63	; 0x3f
   13e00:	b	13200 <_obstack_memory_used@@Base+0x7dc>
   13e04:	cmp	fp, #0
   13e08:	beq	13e64 <_obstack_memory_used@@Base+0x1440>
   13e0c:	mov	r3, #39	; 0x27
   13e10:	strb	r3, [r9]
   13e14:	mov	r3, #0
   13e18:	str	r3, [sp, #40]	; 0x28
   13e1c:	mov	r3, #1
   13e20:	str	r3, [sp, #68]	; 0x44
   13e24:	ldr	r3, [pc, #448]	; 13fec <_obstack_memory_used@@Base+0x15c8>
   13e28:	mov	r8, #1
   13e2c:	str	r3, [sp, #72]	; 0x48
   13e30:	b	13014 <_obstack_memory_used@@Base+0x5f0>
   13e34:	ldr	r3, [sp, #40]	; 0x28
   13e38:	mov	sl, r9
   13e3c:	str	r3, [sp, #56]	; 0x38
   13e40:	mov	r9, fp
   13e44:	ldr	r2, [sp, #64]	; 0x40
   13e48:	b	13d7c <_obstack_memory_used@@Base+0x1358>
   13e4c:	str	r2, [sp, #36]	; 0x24
   13e50:	b	13264 <_obstack_memory_used@@Base+0x840>
   13e54:	mov	r1, #0
   13e58:	str	r3, [sp, #32]
   13e5c:	mov	r4, #63	; 0x3f
   13e60:	b	13200 <_obstack_memory_used@@Base+0x7dc>
   13e64:	ldr	r3, [pc, #384]	; 13fec <_obstack_memory_used@@Base+0x15c8>
   13e68:	str	r3, [sp, #72]	; 0x48
   13e6c:	mov	r3, #0
   13e70:	str	r3, [sp, #40]	; 0x28
   13e74:	mov	r3, #1
   13e78:	str	r3, [sp, #68]	; 0x44
   13e7c:	mov	r8, r3
   13e80:	b	13014 <_obstack_memory_used@@Base+0x5f0>
   13e84:	bl	10fb4 <abort@plt>
   13e88:	cmp	fp, #0
   13e8c:	beq	13eec <_obstack_memory_used@@Base+0x14c8>
   13e90:	mov	r2, #1
   13e94:	mov	r3, #34	; 0x22
   13e98:	strb	r3, [r9]
   13e9c:	mov	r8, r2
   13ea0:	mov	r3, r2
   13ea4:	str	r2, [sp, #68]	; 0x44
   13ea8:	str	r3, [sp, #56]	; 0x38
   13eac:	ldr	r3, [pc, #316]	; 13ff0 <_obstack_memory_used@@Base+0x15cc>
   13eb0:	ldr	r1, [sp, #56]	; 0x38
   13eb4:	str	r3, [sp, #72]	; 0x48
   13eb8:	ldr	r2, [sp, #176]	; 0xb0
   13ebc:	ldr	ip, [sp, #40]	; 0x28
   13ec0:	ldr	lr, [sp, #176]	; 0xb0
   13ec4:	b	12cf8 <_obstack_memory_used@@Base+0x2d4>
   13ec8:	ldr	r0, [sp, #44]	; 0x2c
   13ecc:	bl	10f0c <strlen@plt>
   13ed0:	str	r0, [sp, #24]
   13ed4:	b	13bd8 <_obstack_memory_used@@Base+0x11b4>
   13ed8:	mov	r7, #0
   13edc:	ldr	r1, [sp, #52]	; 0x34
   13ee0:	str	r3, [sp, #32]
   13ee4:	mov	r4, #48	; 0x30
   13ee8:	b	13200 <_obstack_memory_used@@Base+0x7dc>
   13eec:	mov	r3, #1
   13ef0:	str	r3, [sp, #68]	; 0x44
   13ef4:	mov	r8, r3
   13ef8:	b	13ea8 <_obstack_memory_used@@Base+0x1484>
   13efc:	mov	r3, #2
   13f00:	mov	sl, r9
   13f04:	str	r3, [sp, #176]	; 0xb0
   13f08:	mov	r9, fp
   13f0c:	ldr	r3, [sp, #56]	; 0x38
   13f10:	b	13d7c <_obstack_memory_used@@Base+0x1358>
   13f14:	ldr	r6, [sp, #48]	; 0x30
   13f18:	b	139c8 <_obstack_memory_used@@Base+0xfa4>
   13f1c:	ldr	r0, [sp, #24]
   13f20:	mov	ip, r6
   13f24:	cmp	r0, ip
   13f28:	mov	r1, r7
   13f2c:	mov	r2, r4
   13f30:	ldr	r7, [sp, #104]	; 0x68
   13f34:	ldr	r4, [sp, #32]
   13f38:	ldr	r6, [sp, #108]	; 0x6c
   13f3c:	ldr	r8, [sp, #112]	; 0x70
   13f40:	ldr	r5, [sp, #116]	; 0x74
   13f44:	bls	13f74 <_obstack_memory_used@@Base+0x1550>
   13f48:	ldrb	r3, [r2]
   13f4c:	cmp	r3, #0
   13f50:	bne	13f64 <_obstack_memory_used@@Base+0x1540>
   13f54:	b	14084 <_obstack_memory_used@@Base+0x1660>
   13f58:	ldrb	r3, [r2, #1]!
   13f5c:	cmp	r3, #0
   13f60:	beq	14084 <_obstack_memory_used@@Base+0x1660>
   13f64:	add	r1, r1, #1
   13f68:	add	r3, sl, r1
   13f6c:	cmp	r0, r3
   13f70:	bhi	13f58 <_obstack_memory_used@@Base+0x1534>
   13f74:	mov	r2, #0
   13f78:	mov	r3, r7
   13f7c:	str	r2, [sp, #32]
   13f80:	b	13d4c <_obstack_memory_used@@Base+0x1328>
   13f84:	mov	r1, r7
   13f88:	ldr	r7, [sp, #104]	; 0x68
   13f8c:	mov	r2, #0
   13f90:	ldr	r4, [sp, #32]
   13f94:	ldr	r6, [sp, #108]	; 0x6c
   13f98:	ldr	r8, [sp, #112]	; 0x70
   13f9c:	ldr	r5, [sp, #116]	; 0x74
   13fa0:	mov	r3, r7
   13fa4:	str	r2, [sp, #32]
   13fa8:	b	13d4c <_obstack_memory_used@@Base+0x1328>
   13fac:	mov	r3, r5
   13fb0:	eor	r3, r3, #1
   13fb4:	ldr	r4, [sp, #32]
   13fb8:	mov	r1, r7
   13fbc:	str	r5, [sp, #32]
   13fc0:	ldr	r7, [sp, #104]	; 0x68
   13fc4:	ldr	r6, [sp, #108]	; 0x6c
   13fc8:	ldr	r8, [sp, #112]	; 0x70
   13fcc:	ldr	r5, [sp, #116]	; 0x74
   13fd0:	uxtb	r3, r3
   13fd4:	b	13d4c <_obstack_memory_used@@Base+0x1328>
   13fd8:	mov	sl, r9
   13fdc:	str	r3, [sp, #56]	; 0x38
   13fe0:	mov	r9, fp
   13fe4:	ldr	r2, [sp, #64]	; 0x40
   13fe8:	b	13d7c <_obstack_memory_used@@Base+0x1358>
   13fec:	andeq	r9, r1, ip, ror #29
   13ff0:	andeq	r9, r1, r8, ror #29
   13ff4:	strdeq	r9, [r1], -r0
   13ff8:	stmdacc	r0, {r0, r6, r7, r8, ip, lr}
   13ffc:	ldr	r2, [sp, #44]	; 0x2c
   14000:	ldrb	r1, [r2, r3]
   14004:	sub	r2, r1, #33	; 0x21
   14008:	uxtb	r2, r2
   1400c:	cmp	r2, #29
   14010:	bhi	14090 <_obstack_memory_used@@Base+0x166c>
   14014:	ldr	r0, [pc, #-36]	; 13ff8 <_obstack_memory_used@@Base+0x15d4>
   14018:	mov	ip, #1
   1401c:	ands	r2, r0, ip, lsl r2
   14020:	beq	140b0 <_obstack_memory_used@@Base+0x168c>
   14024:	ldr	r2, [sp, #40]	; 0x28
   14028:	cmp	r2, #0
   1402c:	bne	141a4 <_obstack_memory_used@@Base+0x1780>
   14030:	add	r2, r8, #1
   14034:	cmp	fp, r8
   14038:	strbhi	r4, [r9, r8]
   1403c:	cmp	fp, r2
   14040:	movhi	r0, #34	; 0x22
   14044:	strbhi	r0, [r9, r2]
   14048:	add	r2, r8, #2
   1404c:	cmp	fp, r2
   14050:	movhi	r0, #34	; 0x22
   14054:	strbhi	r0, [r9, r2]
   14058:	add	r2, r8, #3
   1405c:	cmp	fp, r2
   14060:	mov	sl, r3
   14064:	ldr	r3, [sp, #40]	; 0x28
   14068:	movhi	r0, #63	; 0x3f
   1406c:	mov	r4, r1
   14070:	strbhi	r0, [r9, r2]
   14074:	add	r8, r8, #4
   14078:	mov	r1, r3
   1407c:	str	r3, [sp, #32]
   14080:	b	13200 <_obstack_memory_used@@Base+0x7dc>
   14084:	str	r3, [sp, #32]
   14088:	mov	r3, r7
   1408c:	b	13d4c <_obstack_memory_used@@Base+0x1328>
   14090:	mov	r1, #0
   14094:	str	r1, [sp, #32]
   14098:	b	13200 <_obstack_memory_used@@Base+0x7dc>
   1409c:	mov	sl, r9
   140a0:	ldr	r3, [sp, #56]	; 0x38
   140a4:	mov	r9, fp
   140a8:	ldr	r2, [sp, #64]	; 0x40
   140ac:	b	13d7c <_obstack_memory_used@@Base+0x1358>
   140b0:	str	r2, [sp, #32]
   140b4:	mov	r1, #0
   140b8:	b	13200 <_obstack_memory_used@@Base+0x7dc>
   140bc:	ldr	r2, [sp, #76]	; 0x4c
   140c0:	mov	sl, r9
   140c4:	mov	r9, fp
   140c8:	mov	fp, r8
   140cc:	ldr	r1, [sp, #72]	; 0x48
   140d0:	cmp	r1, #0
   140d4:	moveq	r3, #0
   140d8:	andne	r3, r2, #1
   140dc:	cmp	r3, #0
   140e0:	beq	1410c <_obstack_memory_used@@Base+0x16e8>
   140e4:	ldrb	r3, [r1]
   140e8:	cmp	r3, #0
   140ec:	beq	1410c <_obstack_memory_used@@Base+0x16e8>
   140f0:	mov	r2, r1
   140f4:	cmp	r9, fp
   140f8:	strbhi	r3, [sl, fp]
   140fc:	ldrb	r3, [r2, #1]!
   14100:	add	fp, fp, #1
   14104:	cmp	r3, #0
   14108:	bne	140f4 <_obstack_memory_used@@Base+0x16d0>
   1410c:	cmp	r9, fp
   14110:	movhi	r3, #0
   14114:	strbhi	r3, [sl, fp]
   14118:	b	13dd4 <_obstack_memory_used@@Base+0x13b0>
   1411c:	ldr	r3, [sp, #192]	; 0xc0
   14120:	mov	ip, #5
   14124:	str	r3, [sp, #16]
   14128:	ldr	r3, [sp, #188]	; 0xbc
   1412c:	ldr	r2, [sp, #44]	; 0x2c
   14130:	str	r3, [sp, #12]
   14134:	ldr	r3, [sp, #184]	; 0xb8
   14138:	ldr	r1, [sp, #84]	; 0x54
   1413c:	str	r3, [sp, #8]
   14140:	ldr	r3, [sp, #180]	; 0xb4
   14144:	mov	r0, r9
   14148:	str	r3, [sp, #4]
   1414c:	str	ip, [sp]
   14150:	ldr	r3, [sp, #24]
   14154:	bl	12c2c <_obstack_memory_used@@Base+0x208>
   14158:	mov	fp, r0
   1415c:	b	13dd4 <_obstack_memory_used@@Base+0x13b0>
   14160:	mov	sl, r9
   14164:	mov	r9, fp
   14168:	mov	fp, r8
   1416c:	b	140cc <_obstack_memory_used@@Base+0x16a8>
   14170:	ldr	r1, [sp, #176]	; 0xb0
   14174:	bl	12b0c <_obstack_memory_used@@Base+0xe8>
   14178:	str	r0, [sp, #192]	; 0xc0
   1417c:	b	130e8 <_obstack_memory_used@@Base+0x6c4>
   14180:	ldr	r1, [sp, #176]	; 0xb0
   14184:	bl	12b0c <_obstack_memory_used@@Base+0xe8>
   14188:	str	r0, [sp, #188]	; 0xbc
   1418c:	b	130c8 <_obstack_memory_used@@Base+0x6a4>
   14190:	mov	sl, r9
   14194:	mov	r2, r3
   14198:	mov	r9, fp
   1419c:	mov	fp, r8
   141a0:	b	140cc <_obstack_memory_used@@Base+0x16a8>
   141a4:	mov	sl, r9
   141a8:	mov	r9, fp
   141ac:	b	13d90 <_obstack_memory_used@@Base+0x136c>
   141b0:	push	{r4, r5, r6, lr}
   141b4:	mov	r5, r0
   141b8:	bl	10f18 <__errno_location@plt>
   141bc:	cmp	r5, #0
   141c0:	mov	r1, #48	; 0x30
   141c4:	mov	r4, r0
   141c8:	ldr	r0, [pc, #16]	; 141e0 <_obstack_memory_used@@Base+0x17bc>
   141cc:	ldr	r6, [r4]
   141d0:	movne	r0, r5
   141d4:	bl	17a4c <_obstack_memory_used@@Base+0x5028>
   141d8:	str	r6, [r4]
   141dc:	pop	{r4, r5, r6, pc}
   141e0:	muleq	r2, r4, r1
   141e4:	ldr	r3, [pc, #12]	; 141f8 <_obstack_memory_used@@Base+0x17d4>
   141e8:	cmp	r0, #0
   141ec:	moveq	r0, r3
   141f0:	ldr	r0, [r0]
   141f4:	bx	lr
   141f8:	muleq	r2, r4, r1
   141fc:	ldr	r3, [pc, #12]	; 14210 <_obstack_memory_used@@Base+0x17ec>
   14200:	cmp	r0, #0
   14204:	moveq	r0, r3
   14208:	str	r1, [r0]
   1420c:	bx	lr
   14210:	muleq	r2, r4, r1
   14214:	ldr	r3, [pc, #52]	; 14250 <_obstack_memory_used@@Base+0x182c>
   14218:	cmp	r0, #0
   1421c:	moveq	r0, r3
   14220:	add	r3, r0, #8
   14224:	push	{lr}		; (str lr, [sp, #-4]!)
   14228:	lsr	lr, r1, #5
   1422c:	and	r1, r1, #31
   14230:	ldr	ip, [r3, lr, lsl #2]
   14234:	lsr	r0, ip, r1
   14238:	eor	r2, r2, r0
   1423c:	and	r2, r2, #1
   14240:	and	r0, r0, #1
   14244:	eor	r1, ip, r2, lsl r1
   14248:	str	r1, [r3, lr, lsl #2]
   1424c:	pop	{pc}		; (ldr pc, [sp], #4)
   14250:	muleq	r2, r4, r1
   14254:	ldr	r3, [pc, #16]	; 1426c <_obstack_memory_used@@Base+0x1848>
   14258:	cmp	r0, #0
   1425c:	movne	r3, r0
   14260:	ldr	r0, [r3, #4]
   14264:	str	r1, [r3, #4]
   14268:	bx	lr
   1426c:	muleq	r2, r4, r1
   14270:	ldr	r3, [pc, #44]	; 142a4 <_obstack_memory_used@@Base+0x1880>
   14274:	cmp	r0, #0
   14278:	moveq	r0, r3
   1427c:	mov	ip, #10
   14280:	cmp	r2, #0
   14284:	cmpne	r1, #0
   14288:	str	ip, [r0]
   1428c:	beq	1429c <_obstack_memory_used@@Base+0x1878>
   14290:	str	r1, [r0, #40]	; 0x28
   14294:	str	r2, [r0, #44]	; 0x2c
   14298:	bx	lr
   1429c:	push	{r4, lr}
   142a0:	bl	10fb4 <abort@plt>
   142a4:	muleq	r2, r4, r1
   142a8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   142ac:	sub	sp, sp, #24
   142b0:	ldr	ip, [pc, #108]	; 14324 <_obstack_memory_used@@Base+0x1900>
   142b4:	ldr	r4, [sp, #56]	; 0x38
   142b8:	mov	r9, r2
   142bc:	cmp	r4, #0
   142c0:	moveq	r4, ip
   142c4:	mov	sl, r3
   142c8:	mov	r7, r0
   142cc:	mov	r8, r1
   142d0:	bl	10f18 <__errno_location@plt>
   142d4:	ldr	r3, [r4, #44]	; 0x2c
   142d8:	mov	r1, r8
   142dc:	ldr	r6, [r0]
   142e0:	str	r3, [sp, #16]
   142e4:	ldr	r2, [r4, #40]	; 0x28
   142e8:	add	r3, r4, #8
   142ec:	str	r3, [sp, #8]
   142f0:	str	r2, [sp, #12]
   142f4:	ldr	r2, [r4, #4]
   142f8:	mov	r5, r0
   142fc:	str	r2, [sp, #4]
   14300:	ldr	ip, [r4]
   14304:	mov	r3, sl
   14308:	mov	r2, r9
   1430c:	mov	r0, r7
   14310:	str	ip, [sp]
   14314:	bl	12c2c <_obstack_memory_used@@Base+0x208>
   14318:	str	r6, [r5]
   1431c:	add	sp, sp, #24
   14320:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14324:	muleq	r2, r4, r1
   14328:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1432c:	cmp	r2, #0
   14330:	sub	sp, sp, #36	; 0x24
   14334:	ldr	r4, [pc, #164]	; 143e0 <_obstack_memory_used@@Base+0x19bc>
   14338:	mov	r8, r1
   1433c:	movne	r4, r2
   14340:	mov	r7, r0
   14344:	bl	10f18 <__errno_location@plt>
   14348:	ldr	r3, [r4, #44]	; 0x2c
   1434c:	ldr	r5, [r4, #4]
   14350:	add	r9, r4, #8
   14354:	orr	r5, r5, #1
   14358:	mov	r1, #0
   1435c:	mov	r2, r7
   14360:	ldr	fp, [r0]
   14364:	str	r3, [sp, #16]
   14368:	ldr	r3, [r4, #40]	; 0x28
   1436c:	stmib	sp, {r5, r9}
   14370:	str	r3, [sp, #12]
   14374:	ldr	r3, [r4]
   14378:	mov	r6, r0
   1437c:	str	r3, [sp]
   14380:	mov	r0, r1
   14384:	mov	r3, r8
   14388:	bl	12c2c <_obstack_memory_used@@Base+0x208>
   1438c:	add	r1, r0, #1
   14390:	mov	r0, r1
   14394:	str	r1, [sp, #28]
   14398:	bl	17508 <_obstack_memory_used@@Base+0x4ae4>
   1439c:	ldr	r3, [r4, #44]	; 0x2c
   143a0:	ldr	r1, [sp, #28]
   143a4:	str	r3, [sp, #16]
   143a8:	ldr	r3, [r4, #40]	; 0x28
   143ac:	str	r5, [sp, #4]
   143b0:	str	r3, [sp, #12]
   143b4:	str	r9, [sp, #8]
   143b8:	ldr	ip, [r4]
   143bc:	mov	r3, r8
   143c0:	mov	r2, r7
   143c4:	str	ip, [sp]
   143c8:	mov	sl, r0
   143cc:	bl	12c2c <_obstack_memory_used@@Base+0x208>
   143d0:	mov	r0, sl
   143d4:	str	fp, [r6]
   143d8:	add	sp, sp, #36	; 0x24
   143dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   143e0:	muleq	r2, r4, r1
   143e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   143e8:	cmp	r3, #0
   143ec:	sub	sp, sp, #44	; 0x2c
   143f0:	ldr	r4, [pc, #192]	; 144b8 <_obstack_memory_used@@Base+0x1a94>
   143f4:	mov	r6, r2
   143f8:	movne	r4, r3
   143fc:	mov	r9, r1
   14400:	mov	r8, r0
   14404:	bl	10f18 <__errno_location@plt>
   14408:	ldr	r3, [r4, #44]	; 0x2c
   1440c:	ldr	r5, [r4, #4]
   14410:	add	sl, r4, #8
   14414:	cmp	r6, #0
   14418:	orreq	r5, r5, #1
   1441c:	mov	r1, #0
   14420:	ldr	r2, [r0]
   14424:	str	r3, [sp, #16]
   14428:	ldr	r3, [r4, #40]	; 0x28
   1442c:	stmib	sp, {r5, sl}
   14430:	str	r3, [sp, #12]
   14434:	ldr	r3, [r4]
   14438:	mov	r7, r0
   1443c:	str	r2, [sp, #28]
   14440:	str	r3, [sp]
   14444:	mov	r2, r8
   14448:	mov	r3, r9
   1444c:	mov	r0, r1
   14450:	bl	12c2c <_obstack_memory_used@@Base+0x208>
   14454:	add	r1, r0, #1
   14458:	mov	fp, r0
   1445c:	mov	r0, r1
   14460:	str	r1, [sp, #36]	; 0x24
   14464:	bl	17508 <_obstack_memory_used@@Base+0x4ae4>
   14468:	ldr	r3, [r4, #44]	; 0x2c
   1446c:	mov	r2, r8
   14470:	str	r3, [sp, #16]
   14474:	ldr	r3, [r4, #40]	; 0x28
   14478:	str	r5, [sp, #4]
   1447c:	str	r3, [sp, #12]
   14480:	str	sl, [sp, #8]
   14484:	ldr	ip, [r4]
   14488:	ldr	r1, [sp, #36]	; 0x24
   1448c:	mov	r3, r9
   14490:	str	ip, [sp]
   14494:	str	r0, [sp, #32]
   14498:	bl	12c2c <_obstack_memory_used@@Base+0x208>
   1449c:	ldr	r2, [sp, #28]
   144a0:	cmp	r6, #0
   144a4:	str	r2, [r7]
   144a8:	ldr	r0, [sp, #32]
   144ac:	strne	fp, [r6]
   144b0:	add	sp, sp, #44	; 0x2c
   144b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   144b8:	muleq	r2, r4, r1
   144bc:	push	{r4, r5, r6, r7, r8, lr}
   144c0:	ldr	r6, [pc, #116]	; 1453c <_obstack_memory_used@@Base+0x1b18>
   144c4:	ldr	r3, [r6, #4]
   144c8:	ldr	r7, [r6]
   144cc:	cmp	r3, #1
   144d0:	movgt	r5, r7
   144d4:	movgt	r4, #1
   144d8:	ble	144f8 <_obstack_memory_used@@Base+0x1ad4>
   144dc:	ldr	r0, [r5, #12]
   144e0:	bl	12310 <close@plt+0x1350>
   144e4:	ldr	r3, [r6, #4]
   144e8:	add	r4, r4, #1
   144ec:	cmp	r3, r4
   144f0:	add	r5, r5, #8
   144f4:	bgt	144dc <_obstack_memory_used@@Base+0x1ab8>
   144f8:	ldr	r0, [r7, #4]
   144fc:	ldr	r4, [pc, #60]	; 14540 <_obstack_memory_used@@Base+0x1b1c>
   14500:	cmp	r0, r4
   14504:	beq	14518 <_obstack_memory_used@@Base+0x1af4>
   14508:	bl	12310 <close@plt+0x1350>
   1450c:	mov	r3, #256	; 0x100
   14510:	str	r4, [r6, #12]
   14514:	str	r3, [r6, #8]
   14518:	ldr	r4, [pc, #36]	; 14544 <_obstack_memory_used@@Base+0x1b20>
   1451c:	cmp	r7, r4
   14520:	beq	14530 <_obstack_memory_used@@Base+0x1b0c>
   14524:	mov	r0, r7
   14528:	bl	12310 <close@plt+0x1350>
   1452c:	str	r4, [r6]
   14530:	mov	r3, #1
   14534:	str	r3, [r6, #4]
   14538:	pop	{r4, r5, r6, r7, r8, pc}
   1453c:	strdeq	fp, [r2], -r4
   14540:	andeq	fp, r2, r4, asr #3
   14544:	strdeq	fp, [r2], -ip
   14548:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1454c:	sub	sp, sp, #44	; 0x2c
   14550:	mov	r5, r0
   14554:	mov	sl, r1
   14558:	bl	10f18 <__errno_location@plt>
   1455c:	ldr	r4, [pc, #400]	; 146f4 <_obstack_memory_used@@Base+0x1cd0>
   14560:	cmn	r5, #-2147483647	; 0x80000001
   14564:	ldr	r6, [r4]
   14568:	mov	r8, r0
   1456c:	movne	r0, #0
   14570:	moveq	r0, #1
   14574:	ldr	r3, [r8]
   14578:	orrs	r0, r0, r5, lsr #31
   1457c:	str	r3, [sp, #24]
   14580:	bne	146f0 <_obstack_memory_used@@Base+0x1ccc>
   14584:	ldr	r2, [r4, #4]
   14588:	cmp	r5, r2
   1458c:	blt	145ec <_obstack_memory_used@@Base+0x1bc8>
   14590:	add	r7, r4, #8
   14594:	cmp	r6, r7
   14598:	str	r2, [sp, #36]	; 0x24
   1459c:	beq	146c0 <_obstack_memory_used@@Base+0x1c9c>
   145a0:	mov	r3, #8
   145a4:	sub	r2, r5, r2
   145a8:	mov	r0, r6
   145ac:	str	r3, [sp]
   145b0:	add	r2, r2, #1
   145b4:	mvn	r3, #-2147483648	; 0x80000000
   145b8:	add	r1, sp, #36	; 0x24
   145bc:	bl	17724 <_obstack_memory_used@@Base+0x4d00>
   145c0:	mov	r6, r0
   145c4:	str	r0, [r4]
   145c8:	ldr	r0, [r4, #4]
   145cc:	ldr	r2, [sp, #36]	; 0x24
   145d0:	mov	r1, #0
   145d4:	sub	r2, r2, r0
   145d8:	add	r0, r6, r0, lsl #3
   145dc:	lsl	r2, r2, #3
   145e0:	bl	10f30 <memset@plt>
   145e4:	ldr	r3, [sp, #36]	; 0x24
   145e8:	str	r3, [r4, #4]
   145ec:	ldr	r4, [pc, #260]	; 146f8 <_obstack_memory_used@@Base+0x1cd4>
   145f0:	add	fp, r6, r5, lsl #3
   145f4:	ldr	r9, [r6, r5, lsl #3]
   145f8:	ldr	r0, [r4, #4]
   145fc:	ldr	r3, [r4]
   14600:	ldr	r7, [fp, #4]
   14604:	ldr	r1, [r4, #44]	; 0x2c
   14608:	ldr	r2, [r4, #40]	; 0x28
   1460c:	orr	r0, r0, #1
   14610:	str	r3, [sp]
   14614:	add	r3, r4, #8
   14618:	str	r0, [sp, #28]
   1461c:	str	r0, [sp, #4]
   14620:	str	r1, [sp, #16]
   14624:	str	r2, [sp, #12]
   14628:	str	r3, [sp, #8]
   1462c:	mov	r0, r7
   14630:	mov	r1, r9
   14634:	mvn	r3, #0
   14638:	mov	r2, sl
   1463c:	bl	12c2c <_obstack_memory_used@@Base+0x208>
   14640:	cmp	r9, r0
   14644:	bhi	146ac <_obstack_memory_used@@Base+0x1c88>
   14648:	add	r3, r4, #48	; 0x30
   1464c:	add	r9, r0, #1
   14650:	cmp	r7, r3
   14654:	str	r9, [r6, r5, lsl #3]
   14658:	beq	14664 <_obstack_memory_used@@Base+0x1c40>
   1465c:	mov	r0, r7
   14660:	bl	12310 <close@plt+0x1350>
   14664:	mov	r0, r9
   14668:	bl	17508 <_obstack_memory_used@@Base+0x4ae4>
   1466c:	ldr	ip, [r4, #44]	; 0x2c
   14670:	ldr	r3, [r4]
   14674:	ldr	lr, [r4, #40]	; 0x28
   14678:	ldr	r4, [pc, #124]	; 146fc <_obstack_memory_used@@Base+0x1cd8>
   1467c:	mov	r2, sl
   14680:	mov	r1, r9
   14684:	str	r0, [fp, #4]
   14688:	str	r4, [sp, #8]
   1468c:	ldr	r4, [sp, #28]
   14690:	str	r3, [sp]
   14694:	str	r4, [sp, #4]
   14698:	str	ip, [sp, #16]
   1469c:	str	lr, [sp, #12]
   146a0:	mvn	r3, #0
   146a4:	mov	r7, r0
   146a8:	bl	12c2c <_obstack_memory_used@@Base+0x208>
   146ac:	ldr	r3, [sp, #24]
   146b0:	mov	r0, r7
   146b4:	str	r3, [r8]
   146b8:	add	sp, sp, #44	; 0x2c
   146bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   146c0:	mov	r3, #8
   146c4:	sub	r2, r5, r2
   146c8:	str	r3, [sp]
   146cc:	add	r1, sp, #36	; 0x24
   146d0:	add	r2, r2, #1
   146d4:	mvn	r3, #-2147483648	; 0x80000000
   146d8:	bl	17724 <_obstack_memory_used@@Base+0x4d00>
   146dc:	mov	r6, r0
   146e0:	ldm	r7, {r0, r1}
   146e4:	str	r6, [r4]
   146e8:	stm	r6, {r0, r1}
   146ec:	b	145c8 <_obstack_memory_used@@Base+0x1ba4>
   146f0:	bl	10fb4 <abort@plt>
   146f4:	strdeq	fp, [r2], -r4
   146f8:	muleq	r2, r4, r1
   146fc:	muleq	r2, ip, r1
   14700:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14704:	sub	sp, sp, #52	; 0x34
   14708:	mov	r5, r0
   1470c:	mov	sl, r1
   14710:	mov	fp, r2
   14714:	bl	10f18 <__errno_location@plt>
   14718:	ldr	r4, [pc, #408]	; 148b8 <_obstack_memory_used@@Base+0x1e94>
   1471c:	cmn	r5, #-2147483647	; 0x80000001
   14720:	ldr	r6, [r4]
   14724:	mov	r8, r0
   14728:	movne	r0, #0
   1472c:	moveq	r0, #1
   14730:	ldr	r3, [r8]
   14734:	orrs	r0, r0, r5, lsr #31
   14738:	str	r3, [sp, #28]
   1473c:	bne	148b4 <_obstack_memory_used@@Base+0x1e90>
   14740:	ldr	r2, [r4, #4]
   14744:	cmp	r5, r2
   14748:	blt	147a8 <_obstack_memory_used@@Base+0x1d84>
   1474c:	add	r7, r4, #8
   14750:	cmp	r6, r7
   14754:	str	r2, [sp, #44]	; 0x2c
   14758:	beq	14884 <_obstack_memory_used@@Base+0x1e60>
   1475c:	mov	r3, #8
   14760:	sub	r2, r5, r2
   14764:	mov	r0, r6
   14768:	str	r3, [sp]
   1476c:	add	r2, r2, #1
   14770:	mvn	r3, #-2147483648	; 0x80000000
   14774:	add	r1, sp, #44	; 0x2c
   14778:	bl	17724 <_obstack_memory_used@@Base+0x4d00>
   1477c:	mov	r6, r0
   14780:	str	r0, [r4]
   14784:	ldr	r0, [r4, #4]
   14788:	ldr	r2, [sp, #44]	; 0x2c
   1478c:	mov	r1, #0
   14790:	sub	r2, r2, r0
   14794:	add	r0, r6, r0, lsl #3
   14798:	lsl	r2, r2, #3
   1479c:	bl	10f30 <memset@plt>
   147a0:	ldr	r3, [sp, #44]	; 0x2c
   147a4:	str	r3, [r4, #4]
   147a8:	ldr	r4, [pc, #268]	; 148bc <_obstack_memory_used@@Base+0x1e98>
   147ac:	add	r3, r6, r5, lsl #3
   147b0:	str	r3, [sp, #32]
   147b4:	ldr	r7, [r3, #4]
   147b8:	ldr	r0, [r4, #4]
   147bc:	ldr	r3, [r4]
   147c0:	ldr	r9, [r6, r5, lsl #3]
   147c4:	ldr	r1, [r4, #44]	; 0x2c
   147c8:	ldr	r2, [r4, #40]	; 0x28
   147cc:	orr	r0, r0, #1
   147d0:	str	r3, [sp]
   147d4:	add	r3, r4, #8
   147d8:	str	r0, [sp, #36]	; 0x24
   147dc:	str	r0, [sp, #4]
   147e0:	str	r1, [sp, #16]
   147e4:	str	r2, [sp, #12]
   147e8:	str	r3, [sp, #8]
   147ec:	mov	r0, r7
   147f0:	mov	r1, r9
   147f4:	mov	r3, fp
   147f8:	mov	r2, sl
   147fc:	bl	12c2c <_obstack_memory_used@@Base+0x208>
   14800:	cmp	r9, r0
   14804:	bhi	14870 <_obstack_memory_used@@Base+0x1e4c>
   14808:	add	r3, r4, #48	; 0x30
   1480c:	add	r9, r0, #1
   14810:	cmp	r7, r3
   14814:	str	r9, [r6, r5, lsl #3]
   14818:	beq	14824 <_obstack_memory_used@@Base+0x1e00>
   1481c:	mov	r0, r7
   14820:	bl	12310 <close@plt+0x1350>
   14824:	mov	r0, r9
   14828:	bl	17508 <_obstack_memory_used@@Base+0x4ae4>
   1482c:	ldr	ip, [sp, #32]
   14830:	ldr	lr, [r4, #44]	; 0x2c
   14834:	ldr	r5, [r4, #40]	; 0x28
   14838:	mov	r3, fp
   1483c:	mov	r2, sl
   14840:	mov	r1, r9
   14844:	str	r0, [ip, #4]
   14848:	ldr	ip, [r4]
   1484c:	ldr	r4, [pc, #108]	; 148c0 <_obstack_memory_used@@Base+0x1e9c>
   14850:	str	lr, [sp, #16]
   14854:	str	r4, [sp, #8]
   14858:	ldr	r4, [sp, #36]	; 0x24
   1485c:	str	r5, [sp, #12]
   14860:	str	r4, [sp, #4]
   14864:	str	ip, [sp]
   14868:	mov	r7, r0
   1486c:	bl	12c2c <_obstack_memory_used@@Base+0x208>
   14870:	ldr	r3, [sp, #28]
   14874:	mov	r0, r7
   14878:	str	r3, [r8]
   1487c:	add	sp, sp, #52	; 0x34
   14880:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14884:	mov	r3, #8
   14888:	sub	r2, r5, r2
   1488c:	str	r3, [sp]
   14890:	add	r1, sp, #44	; 0x2c
   14894:	add	r2, r2, #1
   14898:	mvn	r3, #-2147483648	; 0x80000000
   1489c:	bl	17724 <_obstack_memory_used@@Base+0x4d00>
   148a0:	mov	r6, r0
   148a4:	ldm	r7, {r0, r1}
   148a8:	str	r6, [r4]
   148ac:	stm	r6, {r0, r1}
   148b0:	b	14784 <_obstack_memory_used@@Base+0x1d60>
   148b4:	bl	10fb4 <abort@plt>
   148b8:	strdeq	fp, [r2], -r4
   148bc:	muleq	r2, r4, r1
   148c0:	muleq	r2, ip, r1
   148c4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   148c8:	sub	sp, sp, #44	; 0x2c
   148cc:	mov	sl, r0
   148d0:	bl	10f18 <__errno_location@plt>
   148d4:	ldr	r4, [pc, #352]	; 14a3c <_obstack_memory_used@@Base+0x2018>
   148d8:	ldr	r2, [r4, #4]
   148dc:	ldr	r5, [r4]
   148e0:	cmp	r2, #0
   148e4:	ldr	r3, [r0]
   148e8:	mov	r8, r0
   148ec:	str	r3, [sp, #28]
   148f0:	bgt	1494c <_obstack_memory_used@@Base+0x1f28>
   148f4:	add	r6, r4, #8
   148f8:	cmp	r5, r6
   148fc:	str	r2, [sp, #36]	; 0x24
   14900:	beq	14a0c <_obstack_memory_used@@Base+0x1fe8>
   14904:	mov	r3, #8
   14908:	mov	r0, r5
   1490c:	str	r3, [sp]
   14910:	rsb	r2, r2, #1
   14914:	mvn	r3, #-2147483648	; 0x80000000
   14918:	add	r1, sp, #36	; 0x24
   1491c:	bl	17724 <_obstack_memory_used@@Base+0x4d00>
   14920:	mov	r5, r0
   14924:	str	r0, [r4]
   14928:	ldr	r0, [r4, #4]
   1492c:	ldr	r2, [sp, #36]	; 0x24
   14930:	mov	r1, #0
   14934:	sub	r2, r2, r0
   14938:	add	r0, r5, r0, lsl #3
   1493c:	lsl	r2, r2, #3
   14940:	bl	10f30 <memset@plt>
   14944:	ldr	r3, [sp, #36]	; 0x24
   14948:	str	r3, [r4, #4]
   1494c:	ldr	r4, [pc, #236]	; 14a40 <_obstack_memory_used@@Base+0x201c>
   14950:	ldr	r9, [r5]
   14954:	ldr	r6, [r5, #4]
   14958:	ldr	r7, [r4, #4]
   1495c:	ldr	r1, [r4, #44]	; 0x2c
   14960:	ldr	r2, [r4, #40]	; 0x28
   14964:	ldr	r3, [r4]
   14968:	orr	r7, r7, #1
   1496c:	add	fp, r4, #8
   14970:	str	r1, [sp, #16]
   14974:	str	r2, [sp, #12]
   14978:	str	r3, [sp]
   1497c:	str	r7, [sp, #4]
   14980:	str	fp, [sp, #8]
   14984:	mov	r1, r9
   14988:	mov	r0, r6
   1498c:	mvn	r3, #0
   14990:	mov	r2, sl
   14994:	bl	12c2c <_obstack_memory_used@@Base+0x208>
   14998:	cmp	r9, r0
   1499c:	bhi	149f8 <_obstack_memory_used@@Base+0x1fd4>
   149a0:	add	r3, r4, #48	; 0x30
   149a4:	add	r9, r0, #1
   149a8:	cmp	r6, r3
   149ac:	str	r9, [r5]
   149b0:	beq	149bc <_obstack_memory_used@@Base+0x1f98>
   149b4:	mov	r0, r6
   149b8:	bl	12310 <close@plt+0x1350>
   149bc:	mov	r0, r9
   149c0:	bl	17508 <_obstack_memory_used@@Base+0x4ae4>
   149c4:	ldr	ip, [r4, #44]	; 0x2c
   149c8:	ldr	r3, [r4]
   149cc:	ldr	lr, [r4, #40]	; 0x28
   149d0:	mov	r2, sl
   149d4:	mov	r1, r9
   149d8:	str	r0, [r5, #4]
   149dc:	str	r3, [sp]
   149e0:	stmib	sp, {r7, fp}
   149e4:	str	ip, [sp, #16]
   149e8:	str	lr, [sp, #12]
   149ec:	mvn	r3, #0
   149f0:	mov	r6, r0
   149f4:	bl	12c2c <_obstack_memory_used@@Base+0x208>
   149f8:	ldr	r3, [sp, #28]
   149fc:	mov	r0, r6
   14a00:	str	r3, [r8]
   14a04:	add	sp, sp, #44	; 0x2c
   14a08:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14a0c:	mov	r3, #8
   14a10:	str	r3, [sp]
   14a14:	add	r1, sp, #36	; 0x24
   14a18:	rsb	r2, r2, #1
   14a1c:	mvn	r3, #-2147483648	; 0x80000000
   14a20:	mov	r0, #0
   14a24:	bl	17724 <_obstack_memory_used@@Base+0x4d00>
   14a28:	mov	r5, r0
   14a2c:	ldm	r6, {r0, r1}
   14a30:	str	r5, [r4]
   14a34:	stm	r5, {r0, r1}
   14a38:	b	14928 <_obstack_memory_used@@Base+0x1f04>
   14a3c:	strdeq	fp, [r2], -r4
   14a40:	muleq	r2, r4, r1
   14a44:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14a48:	sub	sp, sp, #44	; 0x2c
   14a4c:	mov	r9, r0
   14a50:	mov	sl, r1
   14a54:	bl	10f18 <__errno_location@plt>
   14a58:	ldr	r4, [pc, #364]	; 14bcc <_obstack_memory_used@@Base+0x21a8>
   14a5c:	ldr	r2, [r4, #4]
   14a60:	ldr	r5, [r4]
   14a64:	cmp	r2, #0
   14a68:	ldr	r3, [r0]
   14a6c:	mov	r7, r0
   14a70:	str	r3, [sp, #24]
   14a74:	bgt	14ad0 <_obstack_memory_used@@Base+0x20ac>
   14a78:	add	r6, r4, #8
   14a7c:	cmp	r5, r6
   14a80:	str	r2, [sp, #36]	; 0x24
   14a84:	beq	14b9c <_obstack_memory_used@@Base+0x2178>
   14a88:	mov	r3, #8
   14a8c:	mov	r0, r5
   14a90:	str	r3, [sp]
   14a94:	rsb	r2, r2, #1
   14a98:	mvn	r3, #-2147483648	; 0x80000000
   14a9c:	add	r1, sp, #36	; 0x24
   14aa0:	bl	17724 <_obstack_memory_used@@Base+0x4d00>
   14aa4:	mov	r5, r0
   14aa8:	str	r0, [r4]
   14aac:	ldr	r0, [r4, #4]
   14ab0:	ldr	r2, [sp, #36]	; 0x24
   14ab4:	mov	r1, #0
   14ab8:	sub	r2, r2, r0
   14abc:	add	r0, r5, r0, lsl #3
   14ac0:	lsl	r2, r2, #3
   14ac4:	bl	10f30 <memset@plt>
   14ac8:	ldr	r3, [sp, #36]	; 0x24
   14acc:	str	r3, [r4, #4]
   14ad0:	ldr	r4, [pc, #248]	; 14bd0 <_obstack_memory_used@@Base+0x21ac>
   14ad4:	ldr	r8, [r5]
   14ad8:	ldr	r6, [r5, #4]
   14adc:	ldr	r0, [r4, #4]
   14ae0:	ldr	r1, [r4, #44]	; 0x2c
   14ae4:	ldr	r2, [r4, #40]	; 0x28
   14ae8:	ldr	r3, [r4]
   14aec:	orr	r0, r0, #1
   14af0:	add	fp, r4, #8
   14af4:	str	r0, [sp, #28]
   14af8:	str	r0, [sp, #4]
   14afc:	str	r1, [sp, #16]
   14b00:	str	r2, [sp, #12]
   14b04:	str	r3, [sp]
   14b08:	str	fp, [sp, #8]
   14b0c:	mov	r1, r8
   14b10:	mov	r0, r6
   14b14:	mov	r3, sl
   14b18:	mov	r2, r9
   14b1c:	bl	12c2c <_obstack_memory_used@@Base+0x208>
   14b20:	cmp	r8, r0
   14b24:	bhi	14b88 <_obstack_memory_used@@Base+0x2164>
   14b28:	add	r3, r4, #48	; 0x30
   14b2c:	add	r8, r0, #1
   14b30:	cmp	r6, r3
   14b34:	str	r8, [r5]
   14b38:	beq	14b44 <_obstack_memory_used@@Base+0x2120>
   14b3c:	mov	r0, r6
   14b40:	bl	12310 <close@plt+0x1350>
   14b44:	mov	r0, r8
   14b48:	bl	17508 <_obstack_memory_used@@Base+0x4ae4>
   14b4c:	ldr	lr, [r4, #44]	; 0x2c
   14b50:	ldr	ip, [r4]
   14b54:	mov	r3, sl
   14b58:	mov	r2, r9
   14b5c:	mov	r1, r8
   14b60:	str	r0, [r5, #4]
   14b64:	ldr	r5, [r4, #40]	; 0x28
   14b68:	ldr	r4, [sp, #28]
   14b6c:	str	fp, [sp, #8]
   14b70:	str	r4, [sp, #4]
   14b74:	str	lr, [sp, #16]
   14b78:	str	r5, [sp, #12]
   14b7c:	str	ip, [sp]
   14b80:	mov	r6, r0
   14b84:	bl	12c2c <_obstack_memory_used@@Base+0x208>
   14b88:	ldr	r3, [sp, #24]
   14b8c:	mov	r0, r6
   14b90:	str	r3, [r7]
   14b94:	add	sp, sp, #44	; 0x2c
   14b98:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14b9c:	mov	r3, #8
   14ba0:	str	r3, [sp]
   14ba4:	add	r1, sp, #36	; 0x24
   14ba8:	rsb	r2, r2, #1
   14bac:	mvn	r3, #-2147483648	; 0x80000000
   14bb0:	mov	r0, #0
   14bb4:	bl	17724 <_obstack_memory_used@@Base+0x4d00>
   14bb8:	mov	r5, r0
   14bbc:	ldm	r6, {r0, r1}
   14bc0:	str	r5, [r4]
   14bc4:	stm	r5, {r0, r1}
   14bc8:	b	14aac <_obstack_memory_used@@Base+0x2088>
   14bcc:	strdeq	fp, [r2], -r4
   14bd0:	muleq	r2, r4, r1
   14bd4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14bd8:	sub	sp, sp, #132	; 0x84
   14bdc:	mov	r5, r1
   14be0:	mov	r4, r0
   14be4:	mov	r9, r2
   14be8:	add	r0, sp, #80	; 0x50
   14bec:	mov	r2, #48	; 0x30
   14bf0:	mov	r1, #0
   14bf4:	bl	10f30 <memset@plt>
   14bf8:	cmp	r5, #10
   14bfc:	beq	14db4 <_obstack_memory_used@@Base+0x2390>
   14c00:	add	lr, sp, #80	; 0x50
   14c04:	str	r5, [sp, #80]	; 0x50
   14c08:	ldm	lr!, {r0, r1, r2, r3}
   14c0c:	add	ip, sp, #32
   14c10:	ldr	r6, [pc, #416]	; 14db8 <_obstack_memory_used@@Base+0x2394>
   14c14:	stmia	ip!, {r0, r1, r2, r3}
   14c18:	ldm	lr!, {r0, r1, r2, r3}
   14c1c:	stmia	ip!, {r0, r1, r2, r3}
   14c20:	ldm	lr, {r0, r1, r2, r3}
   14c24:	stm	ip, {r0, r1, r2, r3}
   14c28:	bl	10f18 <__errno_location@plt>
   14c2c:	cmn	r4, #-2147483647	; 0x80000001
   14c30:	ldr	r5, [r6]
   14c34:	mov	r7, r0
   14c38:	movne	r0, #0
   14c3c:	moveq	r0, #1
   14c40:	ldr	r3, [r7]
   14c44:	orrs	r0, r0, r4, lsr #31
   14c48:	str	r3, [sp, #24]
   14c4c:	bne	14db4 <_obstack_memory_used@@Base+0x2390>
   14c50:	ldr	r2, [r6, #4]
   14c54:	cmp	r4, r2
   14c58:	blt	14cb8 <_obstack_memory_used@@Base+0x2294>
   14c5c:	add	r8, r6, #8
   14c60:	cmp	r5, r8
   14c64:	str	r2, [sp, #80]	; 0x50
   14c68:	beq	14d84 <_obstack_memory_used@@Base+0x2360>
   14c6c:	mov	r3, #8
   14c70:	sub	r2, r4, r2
   14c74:	mov	r0, r5
   14c78:	str	r3, [sp]
   14c7c:	add	r2, r2, #1
   14c80:	add	r1, sp, #80	; 0x50
   14c84:	mvn	r3, #-2147483648	; 0x80000000
   14c88:	bl	17724 <_obstack_memory_used@@Base+0x4d00>
   14c8c:	mov	r5, r0
   14c90:	str	r0, [r6]
   14c94:	ldr	r0, [r6, #4]
   14c98:	ldr	r2, [sp, #80]	; 0x50
   14c9c:	mov	r1, #0
   14ca0:	sub	r2, r2, r0
   14ca4:	add	r0, r5, r0, lsl #3
   14ca8:	lsl	r2, r2, #3
   14cac:	bl	10f30 <memset@plt>
   14cb0:	ldr	r3, [sp, #80]	; 0x50
   14cb4:	str	r3, [r6, #4]
   14cb8:	add	fp, r5, r4, lsl #3
   14cbc:	ldr	r1, [sp, #36]	; 0x24
   14cc0:	ldr	r8, [r5, r4, lsl #3]
   14cc4:	ldr	r6, [fp, #4]
   14cc8:	ldr	r2, [sp, #72]	; 0x48
   14ccc:	ldr	r3, [sp, #32]
   14cd0:	ldr	ip, [sp, #76]	; 0x4c
   14cd4:	orr	r1, r1, #1
   14cd8:	add	sl, sp, #40	; 0x28
   14cdc:	str	r1, [sp, #28]
   14ce0:	str	r1, [sp, #4]
   14ce4:	str	r2, [sp, #12]
   14ce8:	str	r3, [sp]
   14cec:	mov	r0, r6
   14cf0:	mov	r1, r8
   14cf4:	str	ip, [sp, #16]
   14cf8:	str	sl, [sp, #8]
   14cfc:	mvn	r3, #0
   14d00:	mov	r2, r9
   14d04:	bl	12c2c <_obstack_memory_used@@Base+0x208>
   14d08:	cmp	r8, r0
   14d0c:	bhi	14d70 <_obstack_memory_used@@Base+0x234c>
   14d10:	ldr	r3, [pc, #164]	; 14dbc <_obstack_memory_used@@Base+0x2398>
   14d14:	add	r8, r0, #1
   14d18:	cmp	r6, r3
   14d1c:	str	r8, [r5, r4, lsl #3]
   14d20:	beq	14d2c <_obstack_memory_used@@Base+0x2308>
   14d24:	mov	r0, r6
   14d28:	bl	12310 <close@plt+0x1350>
   14d2c:	mov	r0, r8
   14d30:	bl	17508 <_obstack_memory_used@@Base+0x4ae4>
   14d34:	ldr	lr, [sp, #76]	; 0x4c
   14d38:	ldr	r3, [sp, #32]
   14d3c:	ldr	ip, [sp, #72]	; 0x48
   14d40:	ldr	r4, [sp, #28]
   14d44:	mov	r2, r9
   14d48:	mov	r1, r8
   14d4c:	str	r0, [fp, #4]
   14d50:	str	r3, [sp]
   14d54:	str	sl, [sp, #8]
   14d58:	str	r4, [sp, #4]
   14d5c:	str	lr, [sp, #16]
   14d60:	str	ip, [sp, #12]
   14d64:	mvn	r3, #0
   14d68:	mov	r6, r0
   14d6c:	bl	12c2c <_obstack_memory_used@@Base+0x208>
   14d70:	ldr	r3, [sp, #24]
   14d74:	mov	r0, r6
   14d78:	str	r3, [r7]
   14d7c:	add	sp, sp, #132	; 0x84
   14d80:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14d84:	mov	r3, #8
   14d88:	sub	r2, r4, r2
   14d8c:	add	r1, sp, #80	; 0x50
   14d90:	str	r3, [sp]
   14d94:	add	r2, r2, #1
   14d98:	mvn	r3, #-2147483648	; 0x80000000
   14d9c:	bl	17724 <_obstack_memory_used@@Base+0x4d00>
   14da0:	mov	r5, r0
   14da4:	ldm	r8, {r0, r1}
   14da8:	str	r5, [r6]
   14dac:	stm	r5, {r0, r1}
   14db0:	b	14c94 <_obstack_memory_used@@Base+0x2270>
   14db4:	bl	10fb4 <abort@plt>
   14db8:	strdeq	fp, [r2], -r4
   14dbc:	andeq	fp, r2, r4, asr #3
   14dc0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14dc4:	sub	sp, sp, #132	; 0x84
   14dc8:	mov	r5, r1
   14dcc:	mov	r4, r0
   14dd0:	mov	r9, r2
   14dd4:	add	r0, sp, #80	; 0x50
   14dd8:	mov	r2, #48	; 0x30
   14ddc:	mov	r1, #0
   14de0:	mov	sl, r3
   14de4:	bl	10f30 <memset@plt>
   14de8:	cmp	r5, #10
   14dec:	beq	14fa8 <_obstack_memory_used@@Base+0x2584>
   14df0:	add	lr, sp, #80	; 0x50
   14df4:	str	r5, [sp, #80]	; 0x50
   14df8:	ldm	lr!, {r0, r1, r2, r3}
   14dfc:	add	ip, sp, #32
   14e00:	ldr	r6, [pc, #420]	; 14fac <_obstack_memory_used@@Base+0x2588>
   14e04:	stmia	ip!, {r0, r1, r2, r3}
   14e08:	ldm	lr!, {r0, r1, r2, r3}
   14e0c:	stmia	ip!, {r0, r1, r2, r3}
   14e10:	ldm	lr, {r0, r1, r2, r3}
   14e14:	stm	ip, {r0, r1, r2, r3}
   14e18:	bl	10f18 <__errno_location@plt>
   14e1c:	cmn	r4, #-2147483647	; 0x80000001
   14e20:	ldr	r5, [r6]
   14e24:	mov	r7, r0
   14e28:	movne	r0, #0
   14e2c:	moveq	r0, #1
   14e30:	ldr	r3, [r7]
   14e34:	orrs	r0, r0, r4, lsr #31
   14e38:	str	r3, [sp, #24]
   14e3c:	bne	14fa8 <_obstack_memory_used@@Base+0x2584>
   14e40:	ldr	r2, [r6, #4]
   14e44:	cmp	r4, r2
   14e48:	blt	14ea8 <_obstack_memory_used@@Base+0x2484>
   14e4c:	add	r8, r6, #8
   14e50:	cmp	r5, r8
   14e54:	str	r2, [sp, #80]	; 0x50
   14e58:	beq	14f78 <_obstack_memory_used@@Base+0x2554>
   14e5c:	mov	r3, #8
   14e60:	sub	r2, r4, r2
   14e64:	mov	r0, r5
   14e68:	str	r3, [sp]
   14e6c:	add	r2, r2, #1
   14e70:	add	r1, sp, #80	; 0x50
   14e74:	mvn	r3, #-2147483648	; 0x80000000
   14e78:	bl	17724 <_obstack_memory_used@@Base+0x4d00>
   14e7c:	mov	r5, r0
   14e80:	str	r0, [r6]
   14e84:	ldr	r0, [r6, #4]
   14e88:	ldr	r2, [sp, #80]	; 0x50
   14e8c:	mov	r1, #0
   14e90:	sub	r2, r2, r0
   14e94:	add	r0, r5, r0, lsl #3
   14e98:	lsl	r2, r2, #3
   14e9c:	bl	10f30 <memset@plt>
   14ea0:	ldr	r3, [sp, #80]	; 0x50
   14ea4:	str	r3, [r6, #4]
   14ea8:	add	fp, r5, r4, lsl #3
   14eac:	ldr	r3, [sp, #32]
   14eb0:	ldr	r1, [sp, #36]	; 0x24
   14eb4:	ldr	r8, [r5, r4, lsl #3]
   14eb8:	ldr	r6, [fp, #4]
   14ebc:	ldr	r2, [sp, #72]	; 0x48
   14ec0:	ldr	ip, [sp, #76]	; 0x4c
   14ec4:	orr	r1, r1, #1
   14ec8:	str	r3, [sp]
   14ecc:	add	r3, sp, #40	; 0x28
   14ed0:	str	r1, [sp, #28]
   14ed4:	str	r1, [sp, #4]
   14ed8:	str	r2, [sp, #12]
   14edc:	str	r3, [sp, #8]
   14ee0:	mov	r0, r6
   14ee4:	mov	r1, r8
   14ee8:	str	ip, [sp, #16]
   14eec:	mov	r3, sl
   14ef0:	mov	r2, r9
   14ef4:	bl	12c2c <_obstack_memory_used@@Base+0x208>
   14ef8:	cmp	r8, r0
   14efc:	bhi	14f64 <_obstack_memory_used@@Base+0x2540>
   14f00:	ldr	r3, [pc, #168]	; 14fb0 <_obstack_memory_used@@Base+0x258c>
   14f04:	add	r8, r0, #1
   14f08:	cmp	r6, r3
   14f0c:	str	r8, [r5, r4, lsl #3]
   14f10:	beq	14f1c <_obstack_memory_used@@Base+0x24f8>
   14f14:	mov	r0, r6
   14f18:	bl	12310 <close@plt+0x1350>
   14f1c:	mov	r0, r8
   14f20:	bl	17508 <_obstack_memory_used@@Base+0x4ae4>
   14f24:	add	lr, sp, #40	; 0x28
   14f28:	ldr	ip, [sp, #76]	; 0x4c
   14f2c:	ldr	r4, [sp, #72]	; 0x48
   14f30:	ldr	r5, [sp, #28]
   14f34:	mov	r3, sl
   14f38:	mov	r2, r9
   14f3c:	mov	r1, r8
   14f40:	str	r0, [fp, #4]
   14f44:	str	lr, [sp, #8]
   14f48:	ldr	lr, [sp, #32]
   14f4c:	str	r5, [sp, #4]
   14f50:	str	ip, [sp, #16]
   14f54:	str	r4, [sp, #12]
   14f58:	str	lr, [sp]
   14f5c:	mov	r6, r0
   14f60:	bl	12c2c <_obstack_memory_used@@Base+0x208>
   14f64:	ldr	r3, [sp, #24]
   14f68:	mov	r0, r6
   14f6c:	str	r3, [r7]
   14f70:	add	sp, sp, #132	; 0x84
   14f74:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14f78:	mov	r3, #8
   14f7c:	sub	r2, r4, r2
   14f80:	add	r1, sp, #80	; 0x50
   14f84:	str	r3, [sp]
   14f88:	add	r2, r2, #1
   14f8c:	mvn	r3, #-2147483648	; 0x80000000
   14f90:	bl	17724 <_obstack_memory_used@@Base+0x4d00>
   14f94:	mov	r5, r0
   14f98:	ldm	r8, {r0, r1}
   14f9c:	str	r5, [r6]
   14fa0:	stm	r5, {r0, r1}
   14fa4:	b	14e84 <_obstack_memory_used@@Base+0x2460>
   14fa8:	bl	10fb4 <abort@plt>
   14fac:	strdeq	fp, [r2], -r4
   14fb0:	andeq	fp, r2, r4, asr #3
   14fb4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14fb8:	sub	sp, sp, #124	; 0x7c
   14fbc:	mov	r4, r0
   14fc0:	mov	r9, r1
   14fc4:	add	r0, sp, #72	; 0x48
   14fc8:	mov	r2, #48	; 0x30
   14fcc:	mov	r1, #0
   14fd0:	bl	10f30 <memset@plt>
   14fd4:	cmp	r4, #10
   14fd8:	beq	15164 <_obstack_memory_used@@Base+0x2740>
   14fdc:	add	lr, sp, #72	; 0x48
   14fe0:	str	r4, [sp, #72]	; 0x48
   14fe4:	ldm	lr!, {r0, r1, r2, r3}
   14fe8:	add	ip, sp, #24
   14fec:	ldr	r5, [pc, #372]	; 15168 <_obstack_memory_used@@Base+0x2744>
   14ff0:	stmia	ip!, {r0, r1, r2, r3}
   14ff4:	ldm	lr!, {r0, r1, r2, r3}
   14ff8:	stmia	ip!, {r0, r1, r2, r3}
   14ffc:	ldm	lr, {r0, r1, r2, r3}
   15000:	stm	ip, {r0, r1, r2, r3}
   15004:	bl	10f18 <__errno_location@plt>
   15008:	ldr	r2, [r5, #4]
   1500c:	ldr	r4, [r5]
   15010:	cmp	r2, #0
   15014:	mov	r7, r0
   15018:	ldr	fp, [r0]
   1501c:	bgt	15078 <_obstack_memory_used@@Base+0x2654>
   15020:	add	r6, r5, #8
   15024:	cmp	r4, r6
   15028:	str	r2, [sp, #72]	; 0x48
   1502c:	beq	15134 <_obstack_memory_used@@Base+0x2710>
   15030:	mov	r3, #8
   15034:	mov	r0, r4
   15038:	str	r3, [sp]
   1503c:	rsb	r2, r2, #1
   15040:	add	r1, sp, #72	; 0x48
   15044:	mvn	r3, #-2147483648	; 0x80000000
   15048:	bl	17724 <_obstack_memory_used@@Base+0x4d00>
   1504c:	mov	r4, r0
   15050:	str	r0, [r5]
   15054:	ldr	r0, [r5, #4]
   15058:	ldr	r2, [sp, #72]	; 0x48
   1505c:	mov	r1, #0
   15060:	sub	r2, r2, r0
   15064:	add	r0, r4, r0, lsl #3
   15068:	lsl	r2, r2, #3
   1506c:	bl	10f30 <memset@plt>
   15070:	ldr	r3, [sp, #72]	; 0x48
   15074:	str	r3, [r5, #4]
   15078:	ldr	r6, [sp, #28]
   1507c:	ldr	r8, [r4]
   15080:	ldr	r5, [r4, #4]
   15084:	ldr	r2, [sp, #64]	; 0x40
   15088:	ldr	r3, [sp, #24]
   1508c:	ldr	ip, [sp, #68]	; 0x44
   15090:	orr	r6, r6, #1
   15094:	add	sl, sp, #32
   15098:	str	r2, [sp, #12]
   1509c:	str	r3, [sp]
   150a0:	str	r6, [sp, #4]
   150a4:	mov	r1, r8
   150a8:	mov	r0, r5
   150ac:	str	ip, [sp, #16]
   150b0:	str	sl, [sp, #8]
   150b4:	mvn	r3, #0
   150b8:	mov	r2, r9
   150bc:	bl	12c2c <_obstack_memory_used@@Base+0x208>
   150c0:	cmp	r8, r0
   150c4:	bhi	15124 <_obstack_memory_used@@Base+0x2700>
   150c8:	ldr	r3, [pc, #156]	; 1516c <_obstack_memory_used@@Base+0x2748>
   150cc:	add	r8, r0, #1
   150d0:	cmp	r5, r3
   150d4:	str	r8, [r4]
   150d8:	beq	150e4 <_obstack_memory_used@@Base+0x26c0>
   150dc:	mov	r0, r5
   150e0:	bl	12310 <close@plt+0x1350>
   150e4:	mov	r0, r8
   150e8:	bl	17508 <_obstack_memory_used@@Base+0x4ae4>
   150ec:	ldr	lr, [sp, #68]	; 0x44
   150f0:	ldr	r3, [sp, #24]
   150f4:	ldr	ip, [sp, #64]	; 0x40
   150f8:	mov	r2, r9
   150fc:	mov	r1, r8
   15100:	str	r0, [r4, #4]
   15104:	str	r3, [sp]
   15108:	str	sl, [sp, #8]
   1510c:	str	r6, [sp, #4]
   15110:	str	lr, [sp, #16]
   15114:	str	ip, [sp, #12]
   15118:	mvn	r3, #0
   1511c:	mov	r5, r0
   15120:	bl	12c2c <_obstack_memory_used@@Base+0x208>
   15124:	mov	r0, r5
   15128:	str	fp, [r7]
   1512c:	add	sp, sp, #124	; 0x7c
   15130:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15134:	mov	r3, #8
   15138:	add	r1, sp, #72	; 0x48
   1513c:	str	r3, [sp]
   15140:	rsb	r2, r2, #1
   15144:	mvn	r3, #-2147483648	; 0x80000000
   15148:	mov	r0, #0
   1514c:	bl	17724 <_obstack_memory_used@@Base+0x4d00>
   15150:	mov	r4, r0
   15154:	ldm	r6, {r0, r1}
   15158:	str	r4, [r5]
   1515c:	stm	r4, {r0, r1}
   15160:	b	15054 <_obstack_memory_used@@Base+0x2630>
   15164:	bl	10fb4 <abort@plt>
   15168:	strdeq	fp, [r2], -r4
   1516c:	andeq	fp, r2, r4, asr #3
   15170:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15174:	sub	sp, sp, #132	; 0x84
   15178:	mov	r4, r0
   1517c:	mov	r9, r1
   15180:	mov	sl, r2
   15184:	add	r0, sp, #80	; 0x50
   15188:	mov	r2, #48	; 0x30
   1518c:	mov	r1, #0
   15190:	bl	10f30 <memset@plt>
   15194:	cmp	r4, #10
   15198:	beq	1532c <_obstack_memory_used@@Base+0x2908>
   1519c:	add	lr, sp, #80	; 0x50
   151a0:	str	r4, [sp, #80]	; 0x50
   151a4:	ldm	lr!, {r0, r1, r2, r3}
   151a8:	add	ip, sp, #32
   151ac:	ldr	r5, [pc, #380]	; 15330 <_obstack_memory_used@@Base+0x290c>
   151b0:	stmia	ip!, {r0, r1, r2, r3}
   151b4:	ldm	lr!, {r0, r1, r2, r3}
   151b8:	stmia	ip!, {r0, r1, r2, r3}
   151bc:	ldm	lr, {r0, r1, r2, r3}
   151c0:	stm	ip, {r0, r1, r2, r3}
   151c4:	bl	10f18 <__errno_location@plt>
   151c8:	ldr	r2, [r5, #4]
   151cc:	ldr	r4, [r5]
   151d0:	cmp	r2, #0
   151d4:	ldr	r3, [r0]
   151d8:	mov	r7, r0
   151dc:	str	r3, [sp, #28]
   151e0:	bgt	1523c <_obstack_memory_used@@Base+0x2818>
   151e4:	add	r6, r5, #8
   151e8:	cmp	r4, r6
   151ec:	str	r2, [sp, #80]	; 0x50
   151f0:	beq	152fc <_obstack_memory_used@@Base+0x28d8>
   151f4:	mov	r3, #8
   151f8:	mov	r0, r4
   151fc:	str	r3, [sp]
   15200:	rsb	r2, r2, #1
   15204:	add	r1, sp, #80	; 0x50
   15208:	mvn	r3, #-2147483648	; 0x80000000
   1520c:	bl	17724 <_obstack_memory_used@@Base+0x4d00>
   15210:	mov	r4, r0
   15214:	str	r0, [r5]
   15218:	ldr	r0, [r5, #4]
   1521c:	ldr	r2, [sp, #80]	; 0x50
   15220:	mov	r1, #0
   15224:	sub	r2, r2, r0
   15228:	add	r0, r4, r0, lsl #3
   1522c:	lsl	r2, r2, #3
   15230:	bl	10f30 <memset@plt>
   15234:	ldr	r3, [sp, #80]	; 0x50
   15238:	str	r3, [r5, #4]
   1523c:	ldr	r6, [sp, #36]	; 0x24
   15240:	ldr	r8, [r4]
   15244:	ldr	r5, [r4, #4]
   15248:	ldr	r2, [sp, #72]	; 0x48
   1524c:	ldr	r3, [sp, #32]
   15250:	ldr	ip, [sp, #76]	; 0x4c
   15254:	orr	r6, r6, #1
   15258:	add	fp, sp, #40	; 0x28
   1525c:	str	r2, [sp, #12]
   15260:	str	r3, [sp]
   15264:	str	r6, [sp, #4]
   15268:	mov	r1, r8
   1526c:	mov	r0, r5
   15270:	str	ip, [sp, #16]
   15274:	str	fp, [sp, #8]
   15278:	mov	r3, sl
   1527c:	mov	r2, r9
   15280:	bl	12c2c <_obstack_memory_used@@Base+0x208>
   15284:	cmp	r8, r0
   15288:	bhi	152e8 <_obstack_memory_used@@Base+0x28c4>
   1528c:	ldr	r3, [pc, #160]	; 15334 <_obstack_memory_used@@Base+0x2910>
   15290:	add	r8, r0, #1
   15294:	cmp	r5, r3
   15298:	str	r8, [r4]
   1529c:	beq	152a8 <_obstack_memory_used@@Base+0x2884>
   152a0:	mov	r0, r5
   152a4:	bl	12310 <close@plt+0x1350>
   152a8:	mov	r0, r8
   152ac:	bl	17508 <_obstack_memory_used@@Base+0x4ae4>
   152b0:	ldr	ip, [sp, #76]	; 0x4c
   152b4:	ldr	lr, [sp, #32]
   152b8:	mov	r3, sl
   152bc:	mov	r2, r9
   152c0:	mov	r1, r8
   152c4:	str	r0, [r4, #4]
   152c8:	ldr	r4, [sp, #72]	; 0x48
   152cc:	str	fp, [sp, #8]
   152d0:	str	r6, [sp, #4]
   152d4:	str	ip, [sp, #16]
   152d8:	str	r4, [sp, #12]
   152dc:	str	lr, [sp]
   152e0:	mov	r5, r0
   152e4:	bl	12c2c <_obstack_memory_used@@Base+0x208>
   152e8:	ldr	r3, [sp, #28]
   152ec:	mov	r0, r5
   152f0:	str	r3, [r7]
   152f4:	add	sp, sp, #132	; 0x84
   152f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   152fc:	mov	r3, #8
   15300:	add	r1, sp, #80	; 0x50
   15304:	str	r3, [sp]
   15308:	rsb	r2, r2, #1
   1530c:	mvn	r3, #-2147483648	; 0x80000000
   15310:	mov	r0, #0
   15314:	bl	17724 <_obstack_memory_used@@Base+0x4d00>
   15318:	mov	r4, r0
   1531c:	ldm	r6, {r0, r1}
   15320:	str	r4, [r5]
   15324:	stm	r4, {r0, r1}
   15328:	b	15218 <_obstack_memory_used@@Base+0x27f4>
   1532c:	bl	10fb4 <abort@plt>
   15330:	strdeq	fp, [r2], -r4
   15334:	andeq	fp, r2, r4, asr #3
   15338:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1533c:	mov	r4, r2
   15340:	ldr	lr, [pc, #432]	; 154f8 <_obstack_memory_used@@Base+0x2ad4>
   15344:	mov	sl, r0
   15348:	mov	fp, r1
   1534c:	ldm	lr!, {r0, r1, r2, r3}
   15350:	sub	sp, sp, #92	; 0x5c
   15354:	add	ip, sp, #40	; 0x28
   15358:	lsr	r7, r4, #5
   1535c:	stmia	ip!, {r0, r1, r2, r3}
   15360:	add	r6, sp, #48	; 0x30
   15364:	ldm	lr!, {r0, r1, r2, r3}
   15368:	and	r4, r4, #31
   1536c:	ldr	r5, [pc, #392]	; 154fc <_obstack_memory_used@@Base+0x2ad8>
   15370:	stmia	ip!, {r0, r1, r2, r3}
   15374:	ldm	lr, {r0, r1, r2, r3}
   15378:	stm	ip, {r0, r1, r2, r3}
   1537c:	ldr	r2, [r6, r7, lsl #2]
   15380:	lsr	r3, r2, r4
   15384:	eor	r3, r3, #1
   15388:	and	r3, r3, #1
   1538c:	eor	r4, r2, r3, lsl r4
   15390:	str	r4, [r6, r7, lsl #2]
   15394:	bl	10f18 <__errno_location@plt>
   15398:	ldr	r2, [r5, #4]
   1539c:	ldr	r4, [r5]
   153a0:	cmp	r2, #0
   153a4:	ldr	r3, [r0]
   153a8:	mov	r8, r0
   153ac:	str	r3, [sp, #28]
   153b0:	bgt	1540c <_obstack_memory_used@@Base+0x29e8>
   153b4:	add	r7, r5, #8
   153b8:	cmp	r4, r7
   153bc:	str	r2, [sp, #36]	; 0x24
   153c0:	beq	154c8 <_obstack_memory_used@@Base+0x2aa4>
   153c4:	mov	r3, #8
   153c8:	mov	r0, r4
   153cc:	str	r3, [sp]
   153d0:	rsb	r2, r2, #1
   153d4:	mvn	r3, #-2147483648	; 0x80000000
   153d8:	add	r1, sp, #36	; 0x24
   153dc:	bl	17724 <_obstack_memory_used@@Base+0x4d00>
   153e0:	mov	r4, r0
   153e4:	str	r0, [r5]
   153e8:	ldr	r0, [r5, #4]
   153ec:	ldr	r2, [sp, #36]	; 0x24
   153f0:	mov	r1, #0
   153f4:	sub	r2, r2, r0
   153f8:	add	r0, r4, r0, lsl #3
   153fc:	lsl	r2, r2, #3
   15400:	bl	10f30 <memset@plt>
   15404:	ldr	r3, [sp, #36]	; 0x24
   15408:	str	r3, [r5, #4]
   1540c:	ldr	r7, [sp, #44]	; 0x2c
   15410:	ldr	r9, [r4]
   15414:	ldr	r5, [r4, #4]
   15418:	ldr	r2, [sp, #80]	; 0x50
   1541c:	ldr	r3, [sp, #40]	; 0x28
   15420:	ldr	ip, [sp, #84]	; 0x54
   15424:	orr	r7, r7, #1
   15428:	str	r2, [sp, #12]
   1542c:	str	r3, [sp]
   15430:	str	r7, [sp, #4]
   15434:	str	r6, [sp, #8]
   15438:	mov	r1, r9
   1543c:	mov	r0, r5
   15440:	str	ip, [sp, #16]
   15444:	mov	r3, fp
   15448:	mov	r2, sl
   1544c:	bl	12c2c <_obstack_memory_used@@Base+0x208>
   15450:	cmp	r9, r0
   15454:	bhi	154b4 <_obstack_memory_used@@Base+0x2a90>
   15458:	ldr	r3, [pc, #160]	; 15500 <_obstack_memory_used@@Base+0x2adc>
   1545c:	add	r9, r0, #1
   15460:	cmp	r5, r3
   15464:	str	r9, [r4]
   15468:	beq	15474 <_obstack_memory_used@@Base+0x2a50>
   1546c:	mov	r0, r5
   15470:	bl	12310 <close@plt+0x1350>
   15474:	mov	r0, r9
   15478:	bl	17508 <_obstack_memory_used@@Base+0x4ae4>
   1547c:	ldr	ip, [sp, #84]	; 0x54
   15480:	ldr	lr, [sp, #40]	; 0x28
   15484:	mov	r3, fp
   15488:	mov	r2, sl
   1548c:	mov	r1, r9
   15490:	str	r0, [r4, #4]
   15494:	ldr	r4, [sp, #80]	; 0x50
   15498:	str	r6, [sp, #8]
   1549c:	str	r7, [sp, #4]
   154a0:	str	ip, [sp, #16]
   154a4:	str	r4, [sp, #12]
   154a8:	str	lr, [sp]
   154ac:	mov	r5, r0
   154b0:	bl	12c2c <_obstack_memory_used@@Base+0x208>
   154b4:	ldr	r3, [sp, #28]
   154b8:	mov	r0, r5
   154bc:	str	r3, [r8]
   154c0:	add	sp, sp, #92	; 0x5c
   154c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   154c8:	mov	r3, #8
   154cc:	str	r3, [sp]
   154d0:	add	r1, sp, #36	; 0x24
   154d4:	rsb	r2, r2, #1
   154d8:	mvn	r3, #-2147483648	; 0x80000000
   154dc:	mov	r0, #0
   154e0:	bl	17724 <_obstack_memory_used@@Base+0x4d00>
   154e4:	mov	r4, r0
   154e8:	ldm	r7, {r0, r1}
   154ec:	str	r4, [r5]
   154f0:	stm	r4, {r0, r1}
   154f4:	b	153e8 <_obstack_memory_used@@Base+0x29c4>
   154f8:	muleq	r2, r4, r1
   154fc:	strdeq	fp, [r2], -r4
   15500:	andeq	fp, r2, r4, asr #3
   15504:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15508:	mov	r4, r1
   1550c:	ldr	lr, [pc, #420]	; 156b8 <_obstack_memory_used@@Base+0x2c94>
   15510:	mov	r6, r0
   15514:	sub	sp, sp, #84	; 0x54
   15518:	ldm	lr!, {r0, r1, r2, r3}
   1551c:	add	ip, sp, #32
   15520:	lsr	r8, r4, #5
   15524:	add	r5, sp, #40	; 0x28
   15528:	stmia	ip!, {r0, r1, r2, r3}
   1552c:	and	r4, r4, #31
   15530:	ldm	lr!, {r0, r1, r2, r3}
   15534:	ldr	r7, [pc, #384]	; 156bc <_obstack_memory_used@@Base+0x2c98>
   15538:	stmia	ip!, {r0, r1, r2, r3}
   1553c:	ldm	lr, {r0, r1, r2, r3}
   15540:	stm	ip, {r0, r1, r2, r3}
   15544:	ldr	r2, [r5, r8, lsl #2]
   15548:	lsr	r3, r2, r4
   1554c:	eor	r3, r3, #1
   15550:	and	r3, r3, #1
   15554:	eor	r4, r2, r3, lsl r4
   15558:	str	r4, [r5, r8, lsl #2]
   1555c:	bl	10f18 <__errno_location@plt>
   15560:	ldr	r2, [r7, #4]
   15564:	ldr	r4, [r7]
   15568:	cmp	r2, #0
   1556c:	mov	r9, r0
   15570:	ldr	sl, [r0]
   15574:	bgt	155d0 <_obstack_memory_used@@Base+0x2bac>
   15578:	add	r8, r7, #8
   1557c:	cmp	r4, r8
   15580:	str	r2, [sp, #28]
   15584:	beq	15688 <_obstack_memory_used@@Base+0x2c64>
   15588:	mov	r3, #8
   1558c:	mov	r0, r4
   15590:	str	r3, [sp]
   15594:	rsb	r2, r2, #1
   15598:	mvn	r3, #-2147483648	; 0x80000000
   1559c:	add	r1, sp, #28
   155a0:	bl	17724 <_obstack_memory_used@@Base+0x4d00>
   155a4:	mov	r4, r0
   155a8:	str	r0, [r7]
   155ac:	ldr	r0, [r7, #4]
   155b0:	ldr	r2, [sp, #28]
   155b4:	mov	r1, #0
   155b8:	sub	r2, r2, r0
   155bc:	add	r0, r4, r0, lsl #3
   155c0:	lsl	r2, r2, #3
   155c4:	bl	10f30 <memset@plt>
   155c8:	ldr	r3, [sp, #28]
   155cc:	str	r3, [r7, #4]
   155d0:	ldr	r8, [sp, #36]	; 0x24
   155d4:	ldr	fp, [r4]
   155d8:	ldr	r7, [r4, #4]
   155dc:	ldr	r2, [sp, #72]	; 0x48
   155e0:	ldr	r3, [sp, #32]
   155e4:	ldr	ip, [sp, #76]	; 0x4c
   155e8:	orr	r8, r8, #1
   155ec:	str	r2, [sp, #12]
   155f0:	str	r3, [sp]
   155f4:	str	r8, [sp, #4]
   155f8:	str	r5, [sp, #8]
   155fc:	mov	r1, fp
   15600:	mov	r0, r7
   15604:	str	ip, [sp, #16]
   15608:	mvn	r3, #0
   1560c:	mov	r2, r6
   15610:	bl	12c2c <_obstack_memory_used@@Base+0x208>
   15614:	cmp	fp, r0
   15618:	bhi	15678 <_obstack_memory_used@@Base+0x2c54>
   1561c:	ldr	r3, [pc, #156]	; 156c0 <_obstack_memory_used@@Base+0x2c9c>
   15620:	add	fp, r0, #1
   15624:	cmp	r7, r3
   15628:	str	fp, [r4]
   1562c:	beq	15638 <_obstack_memory_used@@Base+0x2c14>
   15630:	mov	r0, r7
   15634:	bl	12310 <close@plt+0x1350>
   15638:	mov	r0, fp
   1563c:	bl	17508 <_obstack_memory_used@@Base+0x4ae4>
   15640:	ldr	lr, [sp, #76]	; 0x4c
   15644:	ldr	r3, [sp, #32]
   15648:	ldr	ip, [sp, #72]	; 0x48
   1564c:	mov	r2, r6
   15650:	mov	r1, fp
   15654:	str	r0, [r4, #4]
   15658:	str	r3, [sp]
   1565c:	str	r5, [sp, #8]
   15660:	str	r8, [sp, #4]
   15664:	str	lr, [sp, #16]
   15668:	str	ip, [sp, #12]
   1566c:	mvn	r3, #0
   15670:	mov	r7, r0
   15674:	bl	12c2c <_obstack_memory_used@@Base+0x208>
   15678:	mov	r0, r7
   1567c:	str	sl, [r9]
   15680:	add	sp, sp, #84	; 0x54
   15684:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15688:	mov	r3, #8
   1568c:	str	r3, [sp]
   15690:	add	r1, sp, #28
   15694:	rsb	r2, r2, #1
   15698:	mvn	r3, #-2147483648	; 0x80000000
   1569c:	mov	r0, #0
   156a0:	bl	17724 <_obstack_memory_used@@Base+0x4d00>
   156a4:	mov	r4, r0
   156a8:	ldm	r8, {r0, r1}
   156ac:	str	r4, [r7]
   156b0:	stm	r4, {r0, r1}
   156b4:	b	155ac <_obstack_memory_used@@Base+0x2b88>
   156b8:	muleq	r2, r4, r1
   156bc:	strdeq	fp, [r2], -r4
   156c0:	andeq	fp, r2, r4, asr #3
   156c4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   156c8:	mov	r6, r0
   156cc:	ldr	lr, [pc, #404]	; 15868 <_obstack_memory_used@@Base+0x2e44>
   156d0:	sub	sp, sp, #84	; 0x54
   156d4:	add	ip, sp, #32
   156d8:	ldm	lr!, {r0, r1, r2, r3}
   156dc:	ldr	r5, [pc, #392]	; 1586c <_obstack_memory_used@@Base+0x2e48>
   156e0:	stmia	ip!, {r0, r1, r2, r3}
   156e4:	ldm	lr!, {r0, r1, r2, r3}
   156e8:	ldr	r4, [sp, #44]	; 0x2c
   156ec:	stmia	ip!, {r0, r1, r2, r3}
   156f0:	ldm	lr, {r0, r1, r2, r3}
   156f4:	mvn	lr, r4
   156f8:	and	lr, lr, #67108864	; 0x4000000
   156fc:	eor	lr, lr, r4
   15700:	stm	ip, {r0, r1, r2, r3}
   15704:	str	lr, [sp, #44]	; 0x2c
   15708:	bl	10f18 <__errno_location@plt>
   1570c:	ldr	r2, [r5, #4]
   15710:	ldr	r4, [r5]
   15714:	cmp	r2, #0
   15718:	mov	r8, r0
   1571c:	ldr	sl, [r0]
   15720:	bgt	1577c <_obstack_memory_used@@Base+0x2d58>
   15724:	add	r7, r5, #8
   15728:	cmp	r4, r7
   1572c:	str	r2, [sp, #28]
   15730:	beq	15838 <_obstack_memory_used@@Base+0x2e14>
   15734:	mov	r3, #8
   15738:	mov	r0, r4
   1573c:	str	r3, [sp]
   15740:	rsb	r2, r2, #1
   15744:	mvn	r3, #-2147483648	; 0x80000000
   15748:	add	r1, sp, #28
   1574c:	bl	17724 <_obstack_memory_used@@Base+0x4d00>
   15750:	mov	r4, r0
   15754:	str	r0, [r5]
   15758:	ldr	r0, [r5, #4]
   1575c:	ldr	r2, [sp, #28]
   15760:	mov	r1, #0
   15764:	sub	r2, r2, r0
   15768:	add	r0, r4, r0, lsl #3
   1576c:	lsl	r2, r2, #3
   15770:	bl	10f30 <memset@plt>
   15774:	ldr	r3, [sp, #28]
   15778:	str	r3, [r5, #4]
   1577c:	ldr	r7, [sp, #36]	; 0x24
   15780:	ldr	r9, [r4]
   15784:	ldr	r5, [r4, #4]
   15788:	ldr	r2, [sp, #72]	; 0x48
   1578c:	ldr	r3, [sp, #32]
   15790:	ldr	ip, [sp, #76]	; 0x4c
   15794:	orr	r7, r7, #1
   15798:	add	fp, sp, #40	; 0x28
   1579c:	str	r2, [sp, #12]
   157a0:	str	r3, [sp]
   157a4:	str	r7, [sp, #4]
   157a8:	mov	r1, r9
   157ac:	mov	r0, r5
   157b0:	str	ip, [sp, #16]
   157b4:	str	fp, [sp, #8]
   157b8:	mvn	r3, #0
   157bc:	mov	r2, r6
   157c0:	bl	12c2c <_obstack_memory_used@@Base+0x208>
   157c4:	cmp	r9, r0
   157c8:	bhi	15828 <_obstack_memory_used@@Base+0x2e04>
   157cc:	ldr	r3, [pc, #156]	; 15870 <_obstack_memory_used@@Base+0x2e4c>
   157d0:	add	r9, r0, #1
   157d4:	cmp	r5, r3
   157d8:	str	r9, [r4]
   157dc:	beq	157e8 <_obstack_memory_used@@Base+0x2dc4>
   157e0:	mov	r0, r5
   157e4:	bl	12310 <close@plt+0x1350>
   157e8:	mov	r0, r9
   157ec:	bl	17508 <_obstack_memory_used@@Base+0x4ae4>
   157f0:	ldr	lr, [sp, #76]	; 0x4c
   157f4:	ldr	r3, [sp, #32]
   157f8:	ldr	ip, [sp, #72]	; 0x48
   157fc:	mov	r2, r6
   15800:	mov	r1, r9
   15804:	str	r0, [r4, #4]
   15808:	str	r3, [sp]
   1580c:	str	fp, [sp, #8]
   15810:	str	r7, [sp, #4]
   15814:	str	lr, [sp, #16]
   15818:	str	ip, [sp, #12]
   1581c:	mvn	r3, #0
   15820:	mov	r5, r0
   15824:	bl	12c2c <_obstack_memory_used@@Base+0x208>
   15828:	mov	r0, r5
   1582c:	str	sl, [r8]
   15830:	add	sp, sp, #84	; 0x54
   15834:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15838:	mov	r3, #8
   1583c:	str	r3, [sp]
   15840:	add	r1, sp, #28
   15844:	rsb	r2, r2, #1
   15848:	mvn	r3, #-2147483648	; 0x80000000
   1584c:	mov	r0, #0
   15850:	bl	17724 <_obstack_memory_used@@Base+0x4d00>
   15854:	mov	r4, r0
   15858:	ldm	r7, {r0, r1}
   1585c:	str	r4, [r5]
   15860:	stm	r4, {r0, r1}
   15864:	b	15758 <_obstack_memory_used@@Base+0x2d34>
   15868:	muleq	r2, r4, r1
   1586c:	strdeq	fp, [r2], -r4
   15870:	andeq	fp, r2, r4, asr #3
   15874:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15878:	mov	r9, r0
   1587c:	ldr	lr, [pc, #416]	; 15a24 <_obstack_memory_used@@Base+0x3000>
   15880:	mov	sl, r1
   15884:	sub	sp, sp, #92	; 0x5c
   15888:	ldm	lr!, {r0, r1, r2, r3}
   1588c:	add	ip, sp, #40	; 0x28
   15890:	ldr	r5, [pc, #400]	; 15a28 <_obstack_memory_used@@Base+0x3004>
   15894:	stmia	ip!, {r0, r1, r2, r3}
   15898:	ldm	lr!, {r0, r1, r2, r3}
   1589c:	ldr	r4, [sp, #52]	; 0x34
   158a0:	stmia	ip!, {r0, r1, r2, r3}
   158a4:	ldm	lr, {r0, r1, r2, r3}
   158a8:	mvn	lr, r4
   158ac:	and	lr, lr, #67108864	; 0x4000000
   158b0:	eor	lr, lr, r4
   158b4:	stm	ip, {r0, r1, r2, r3}
   158b8:	str	lr, [sp, #52]	; 0x34
   158bc:	bl	10f18 <__errno_location@plt>
   158c0:	ldr	r2, [r5, #4]
   158c4:	ldr	r4, [r5]
   158c8:	cmp	r2, #0
   158cc:	ldr	r3, [r0]
   158d0:	mov	r7, r0
   158d4:	str	r3, [sp, #28]
   158d8:	bgt	15934 <_obstack_memory_used@@Base+0x2f10>
   158dc:	add	r6, r5, #8
   158e0:	cmp	r4, r6
   158e4:	str	r2, [sp, #36]	; 0x24
   158e8:	beq	159f4 <_obstack_memory_used@@Base+0x2fd0>
   158ec:	mov	r3, #8
   158f0:	mov	r0, r4
   158f4:	str	r3, [sp]
   158f8:	rsb	r2, r2, #1
   158fc:	mvn	r3, #-2147483648	; 0x80000000
   15900:	add	r1, sp, #36	; 0x24
   15904:	bl	17724 <_obstack_memory_used@@Base+0x4d00>
   15908:	mov	r4, r0
   1590c:	str	r0, [r5]
   15910:	ldr	r0, [r5, #4]
   15914:	ldr	r2, [sp, #36]	; 0x24
   15918:	mov	r1, #0
   1591c:	sub	r2, r2, r0
   15920:	add	r0, r4, r0, lsl #3
   15924:	lsl	r2, r2, #3
   15928:	bl	10f30 <memset@plt>
   1592c:	ldr	r3, [sp, #36]	; 0x24
   15930:	str	r3, [r5, #4]
   15934:	ldr	r6, [sp, #44]	; 0x2c
   15938:	ldr	r8, [r4]
   1593c:	ldr	r5, [r4, #4]
   15940:	ldr	r2, [sp, #80]	; 0x50
   15944:	ldr	r3, [sp, #40]	; 0x28
   15948:	ldr	ip, [sp, #84]	; 0x54
   1594c:	orr	r6, r6, #1
   15950:	add	fp, sp, #48	; 0x30
   15954:	str	r2, [sp, #12]
   15958:	str	r3, [sp]
   1595c:	str	r6, [sp, #4]
   15960:	mov	r1, r8
   15964:	mov	r0, r5
   15968:	str	ip, [sp, #16]
   1596c:	str	fp, [sp, #8]
   15970:	mov	r3, sl
   15974:	mov	r2, r9
   15978:	bl	12c2c <_obstack_memory_used@@Base+0x208>
   1597c:	cmp	r8, r0
   15980:	bhi	159e0 <_obstack_memory_used@@Base+0x2fbc>
   15984:	ldr	r3, [pc, #160]	; 15a2c <_obstack_memory_used@@Base+0x3008>
   15988:	add	r8, r0, #1
   1598c:	cmp	r5, r3
   15990:	str	r8, [r4]
   15994:	beq	159a0 <_obstack_memory_used@@Base+0x2f7c>
   15998:	mov	r0, r5
   1599c:	bl	12310 <close@plt+0x1350>
   159a0:	mov	r0, r8
   159a4:	bl	17508 <_obstack_memory_used@@Base+0x4ae4>
   159a8:	ldr	ip, [sp, #84]	; 0x54
   159ac:	ldr	lr, [sp, #40]	; 0x28
   159b0:	mov	r3, sl
   159b4:	mov	r2, r9
   159b8:	mov	r1, r8
   159bc:	str	r0, [r4, #4]
   159c0:	ldr	r4, [sp, #80]	; 0x50
   159c4:	str	fp, [sp, #8]
   159c8:	str	r6, [sp, #4]
   159cc:	str	ip, [sp, #16]
   159d0:	str	r4, [sp, #12]
   159d4:	str	lr, [sp]
   159d8:	mov	r5, r0
   159dc:	bl	12c2c <_obstack_memory_used@@Base+0x208>
   159e0:	ldr	r3, [sp, #28]
   159e4:	mov	r0, r5
   159e8:	str	r3, [r7]
   159ec:	add	sp, sp, #92	; 0x5c
   159f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   159f4:	mov	r3, #8
   159f8:	str	r3, [sp]
   159fc:	add	r1, sp, #36	; 0x24
   15a00:	rsb	r2, r2, #1
   15a04:	mvn	r3, #-2147483648	; 0x80000000
   15a08:	mov	r0, #0
   15a0c:	bl	17724 <_obstack_memory_used@@Base+0x4d00>
   15a10:	mov	r4, r0
   15a14:	ldm	r6, {r0, r1}
   15a18:	str	r4, [r5]
   15a1c:	stm	r4, {r0, r1}
   15a20:	b	15910 <_obstack_memory_used@@Base+0x2eec>
   15a24:	muleq	r2, r4, r1
   15a28:	strdeq	fp, [r2], -r4
   15a2c:	andeq	fp, r2, r4, asr #3
   15a30:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15a34:	sub	sp, sp, #180	; 0xb4
   15a38:	mov	r6, r1
   15a3c:	mov	r4, r0
   15a40:	mov	r9, r2
   15a44:	add	r0, sp, #80	; 0x50
   15a48:	mov	r2, #48	; 0x30
   15a4c:	mov	r1, #0
   15a50:	bl	10f30 <memset@plt>
   15a54:	cmp	r6, #10
   15a58:	beq	15c38 <_obstack_memory_used@@Base+0x3214>
   15a5c:	add	r5, sp, #80	; 0x50
   15a60:	str	r6, [sp, #80]	; 0x50
   15a64:	ldm	r5!, {r0, r1, r2, r3}
   15a68:	add	ip, sp, #128	; 0x80
   15a6c:	mov	r7, ip
   15a70:	add	lr, sp, #32
   15a74:	stmia	ip!, {r0, r1, r2, r3}
   15a78:	mov	r8, #67108864	; 0x4000000
   15a7c:	ldm	r5!, {r0, r1, r2, r3}
   15a80:	ldr	r6, [pc, #436]	; 15c3c <_obstack_memory_used@@Base+0x3218>
   15a84:	stmia	ip!, {r0, r1, r2, r3}
   15a88:	ldm	r5, {r0, r1, r2, r3}
   15a8c:	stm	ip, {r0, r1, r2, r3}
   15a90:	ldm	r7!, {r0, r1, r2, r3}
   15a94:	stmia	lr!, {r0, r1, r2, r3}
   15a98:	ldm	r7!, {r0, r1, r2, r3}
   15a9c:	str	r8, [sp, #44]	; 0x2c
   15aa0:	stmia	lr!, {r0, r1, r2, r3}
   15aa4:	ldm	ip, {r0, r1, r2, r3}
   15aa8:	stm	lr, {r0, r1, r2, r3}
   15aac:	bl	10f18 <__errno_location@plt>
   15ab0:	cmn	r4, #-2147483647	; 0x80000001
   15ab4:	ldr	r5, [r6]
   15ab8:	mov	r7, r0
   15abc:	movne	r0, #0
   15ac0:	moveq	r0, #1
   15ac4:	ldr	r3, [r7]
   15ac8:	orrs	r0, r0, r4, lsr #31
   15acc:	str	r3, [sp, #24]
   15ad0:	bne	15c38 <_obstack_memory_used@@Base+0x3214>
   15ad4:	ldr	r2, [r6, #4]
   15ad8:	cmp	r4, r2
   15adc:	blt	15b3c <_obstack_memory_used@@Base+0x3118>
   15ae0:	add	r8, r6, #8
   15ae4:	cmp	r5, r8
   15ae8:	str	r2, [sp, #80]	; 0x50
   15aec:	beq	15c08 <_obstack_memory_used@@Base+0x31e4>
   15af0:	mov	r3, #8
   15af4:	sub	r2, r4, r2
   15af8:	mov	r0, r5
   15afc:	str	r3, [sp]
   15b00:	add	r2, r2, #1
   15b04:	add	r1, sp, #80	; 0x50
   15b08:	mvn	r3, #-2147483648	; 0x80000000
   15b0c:	bl	17724 <_obstack_memory_used@@Base+0x4d00>
   15b10:	mov	r5, r0
   15b14:	str	r0, [r6]
   15b18:	ldr	r0, [r6, #4]
   15b1c:	ldr	r2, [sp, #80]	; 0x50
   15b20:	mov	r1, #0
   15b24:	sub	r2, r2, r0
   15b28:	add	r0, r5, r0, lsl #3
   15b2c:	lsl	r2, r2, #3
   15b30:	bl	10f30 <memset@plt>
   15b34:	ldr	r3, [sp, #80]	; 0x50
   15b38:	str	r3, [r6, #4]
   15b3c:	add	fp, r5, r4, lsl #3
   15b40:	ldr	r1, [sp, #36]	; 0x24
   15b44:	ldr	r8, [r5, r4, lsl #3]
   15b48:	ldr	r6, [fp, #4]
   15b4c:	ldr	r2, [sp, #72]	; 0x48
   15b50:	ldr	r3, [sp, #32]
   15b54:	ldr	ip, [sp, #76]	; 0x4c
   15b58:	orr	r1, r1, #1
   15b5c:	add	sl, sp, #40	; 0x28
   15b60:	str	r1, [sp, #28]
   15b64:	str	r1, [sp, #4]
   15b68:	str	r2, [sp, #12]
   15b6c:	str	r3, [sp]
   15b70:	mov	r0, r6
   15b74:	mov	r1, r8
   15b78:	str	ip, [sp, #16]
   15b7c:	str	sl, [sp, #8]
   15b80:	mvn	r3, #0
   15b84:	mov	r2, r9
   15b88:	bl	12c2c <_obstack_memory_used@@Base+0x208>
   15b8c:	cmp	r8, r0
   15b90:	bhi	15bf4 <_obstack_memory_used@@Base+0x31d0>
   15b94:	ldr	r3, [pc, #164]	; 15c40 <_obstack_memory_used@@Base+0x321c>
   15b98:	add	r8, r0, #1
   15b9c:	cmp	r6, r3
   15ba0:	str	r8, [r5, r4, lsl #3]
   15ba4:	beq	15bb0 <_obstack_memory_used@@Base+0x318c>
   15ba8:	mov	r0, r6
   15bac:	bl	12310 <close@plt+0x1350>
   15bb0:	mov	r0, r8
   15bb4:	bl	17508 <_obstack_memory_used@@Base+0x4ae4>
   15bb8:	ldr	lr, [sp, #76]	; 0x4c
   15bbc:	ldr	r3, [sp, #32]
   15bc0:	ldr	ip, [sp, #72]	; 0x48
   15bc4:	ldr	r4, [sp, #28]
   15bc8:	mov	r2, r9
   15bcc:	mov	r1, r8
   15bd0:	str	r0, [fp, #4]
   15bd4:	str	r3, [sp]
   15bd8:	str	sl, [sp, #8]
   15bdc:	str	r4, [sp, #4]
   15be0:	str	lr, [sp, #16]
   15be4:	str	ip, [sp, #12]
   15be8:	mvn	r3, #0
   15bec:	mov	r6, r0
   15bf0:	bl	12c2c <_obstack_memory_used@@Base+0x208>
   15bf4:	ldr	r3, [sp, #24]
   15bf8:	mov	r0, r6
   15bfc:	str	r3, [r7]
   15c00:	add	sp, sp, #180	; 0xb4
   15c04:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15c08:	mov	r3, #8
   15c0c:	sub	r2, r4, r2
   15c10:	add	r1, sp, #80	; 0x50
   15c14:	str	r3, [sp]
   15c18:	add	r2, r2, #1
   15c1c:	mvn	r3, #-2147483648	; 0x80000000
   15c20:	bl	17724 <_obstack_memory_used@@Base+0x4d00>
   15c24:	mov	r5, r0
   15c28:	ldm	r8, {r0, r1}
   15c2c:	str	r5, [r6]
   15c30:	stm	r5, {r0, r1}
   15c34:	b	15b18 <_obstack_memory_used@@Base+0x30f4>
   15c38:	bl	10fb4 <abort@plt>
   15c3c:	strdeq	fp, [r2], -r4
   15c40:	andeq	fp, r2, r4, asr #3
   15c44:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15c48:	mov	r7, r1
   15c4c:	ldr	lr, [pc, #492]	; 15e40 <_obstack_memory_used@@Base+0x341c>
   15c50:	mov	r8, r2
   15c54:	mov	r4, r0
   15c58:	mov	fp, r3
   15c5c:	ldm	lr!, {r0, r1, r2, r3}
   15c60:	sub	sp, sp, #100	; 0x64
   15c64:	add	ip, sp, #48	; 0x30
   15c68:	mov	sl, #10
   15c6c:	stmia	ip!, {r0, r1, r2, r3}
   15c70:	cmp	r8, #0
   15c74:	cmpne	r7, #0
   15c78:	ldm	lr!, {r0, r1, r2, r3}
   15c7c:	str	sl, [sp, #48]	; 0x30
   15c80:	stmia	ip!, {r0, r1, r2, r3}
   15c84:	ldm	lr, {r0, r1, r2, r3}
   15c88:	stm	ip, {r0, r1, r2, r3}
   15c8c:	beq	15e3c <_obstack_memory_used@@Base+0x3418>
   15c90:	str	r7, [sp, #88]	; 0x58
   15c94:	str	r8, [sp, #92]	; 0x5c
   15c98:	bl	10f18 <__errno_location@plt>
   15c9c:	ldr	r6, [pc, #416]	; 15e44 <_obstack_memory_used@@Base+0x3420>
   15ca0:	cmn	r4, #-2147483647	; 0x80000001
   15ca4:	ldr	r5, [r6]
   15ca8:	mov	r9, r0
   15cac:	movne	r0, #0
   15cb0:	moveq	r0, #1
   15cb4:	ldr	r3, [r9]
   15cb8:	orrs	r0, r0, r4, lsr #31
   15cbc:	str	r3, [sp, #28]
   15cc0:	bne	15e3c <_obstack_memory_used@@Base+0x3418>
   15cc4:	ldr	r2, [r6, #4]
   15cc8:	cmp	r4, r2
   15ccc:	movlt	r3, sl
   15cd0:	blt	15d3c <_obstack_memory_used@@Base+0x3318>
   15cd4:	add	r7, r6, #8
   15cd8:	cmp	r5, r7
   15cdc:	str	r2, [sp, #44]	; 0x2c
   15ce0:	beq	15e0c <_obstack_memory_used@@Base+0x33e8>
   15ce4:	mov	r3, #8
   15ce8:	sub	r2, r4, r2
   15cec:	mov	r0, r5
   15cf0:	str	r3, [sp]
   15cf4:	add	r2, r2, #1
   15cf8:	mvn	r3, #-2147483648	; 0x80000000
   15cfc:	add	r1, sp, #44	; 0x2c
   15d00:	bl	17724 <_obstack_memory_used@@Base+0x4d00>
   15d04:	mov	r5, r0
   15d08:	str	r0, [r6]
   15d0c:	ldr	r0, [r6, #4]
   15d10:	ldr	r2, [sp, #44]	; 0x2c
   15d14:	mov	r1, #0
   15d18:	sub	r2, r2, r0
   15d1c:	add	r0, r5, r0, lsl #3
   15d20:	lsl	r2, r2, #3
   15d24:	bl	10f30 <memset@plt>
   15d28:	ldr	r3, [sp, #48]	; 0x30
   15d2c:	ldr	r7, [sp, #88]	; 0x58
   15d30:	ldr	r8, [sp, #92]	; 0x5c
   15d34:	ldr	r2, [sp, #44]	; 0x2c
   15d38:	str	r2, [r6, #4]
   15d3c:	add	r2, r5, r4, lsl #3
   15d40:	mov	r1, r2
   15d44:	str	r2, [sp, #32]
   15d48:	ldr	r2, [sp, #52]	; 0x34
   15d4c:	ldr	r6, [r1, #4]
   15d50:	ldr	sl, [r5, r4, lsl #3]
   15d54:	orr	r2, r2, #1
   15d58:	str	r3, [sp]
   15d5c:	add	r3, sp, #56	; 0x38
   15d60:	str	r2, [sp, #36]	; 0x24
   15d64:	str	r2, [sp, #4]
   15d68:	str	r3, [sp, #8]
   15d6c:	mov	r0, r6
   15d70:	str	r8, [sp, #16]
   15d74:	str	r7, [sp, #12]
   15d78:	mov	r1, sl
   15d7c:	mvn	r3, #0
   15d80:	mov	r2, fp
   15d84:	bl	12c2c <_obstack_memory_used@@Base+0x208>
   15d88:	cmp	sl, r0
   15d8c:	bhi	15df8 <_obstack_memory_used@@Base+0x33d4>
   15d90:	ldr	r3, [pc, #176]	; 15e48 <_obstack_memory_used@@Base+0x3424>
   15d94:	add	r7, r0, #1
   15d98:	cmp	r6, r3
   15d9c:	str	r7, [r5, r4, lsl #3]
   15da0:	beq	15dac <_obstack_memory_used@@Base+0x3388>
   15da4:	mov	r0, r6
   15da8:	bl	12310 <close@plt+0x1350>
   15dac:	mov	r0, r7
   15db0:	bl	17508 <_obstack_memory_used@@Base+0x4ae4>
   15db4:	ldr	r3, [sp, #32]
   15db8:	ldr	lr, [sp, #92]	; 0x5c
   15dbc:	ldr	ip, [sp, #88]	; 0x58
   15dc0:	ldr	r4, [sp, #36]	; 0x24
   15dc4:	mov	r2, fp
   15dc8:	mov	r1, r7
   15dcc:	str	r0, [r3, #4]
   15dd0:	add	r3, sp, #56	; 0x38
   15dd4:	str	r3, [sp, #8]
   15dd8:	ldr	r3, [sp, #48]	; 0x30
   15ddc:	str	r4, [sp, #4]
   15de0:	str	r3, [sp]
   15de4:	str	lr, [sp, #16]
   15de8:	str	ip, [sp, #12]
   15dec:	mvn	r3, #0
   15df0:	mov	r6, r0
   15df4:	bl	12c2c <_obstack_memory_used@@Base+0x208>
   15df8:	ldr	r3, [sp, #28]
   15dfc:	mov	r0, r6
   15e00:	str	r3, [r9]
   15e04:	add	sp, sp, #100	; 0x64
   15e08:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15e0c:	mov	r3, #8
   15e10:	sub	r2, r4, r2
   15e14:	str	r3, [sp]
   15e18:	add	r1, sp, #44	; 0x2c
   15e1c:	add	r2, r2, #1
   15e20:	mvn	r3, #-2147483648	; 0x80000000
   15e24:	bl	17724 <_obstack_memory_used@@Base+0x4d00>
   15e28:	mov	r5, r0
   15e2c:	ldm	r7, {r0, r1}
   15e30:	str	r5, [r6]
   15e34:	stm	r5, {r0, r1}
   15e38:	b	15d0c <_obstack_memory_used@@Base+0x32e8>
   15e3c:	bl	10fb4 <abort@plt>
   15e40:	muleq	r2, r4, r1
   15e44:	strdeq	fp, [r2], -r4
   15e48:	andeq	fp, r2, r4, asr #3
   15e4c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15e50:	mov	r7, r1
   15e54:	ldr	lr, [pc, #492]	; 16048 <_obstack_memory_used@@Base+0x3624>
   15e58:	mov	r8, r2
   15e5c:	mov	r4, r0
   15e60:	mov	fp, r3
   15e64:	ldm	lr!, {r0, r1, r2, r3}
   15e68:	sub	sp, sp, #100	; 0x64
   15e6c:	add	ip, sp, #48	; 0x30
   15e70:	mov	sl, #10
   15e74:	stmia	ip!, {r0, r1, r2, r3}
   15e78:	cmp	r8, #0
   15e7c:	cmpne	r7, #0
   15e80:	ldm	lr!, {r0, r1, r2, r3}
   15e84:	str	sl, [sp, #48]	; 0x30
   15e88:	stmia	ip!, {r0, r1, r2, r3}
   15e8c:	ldm	lr, {r0, r1, r2, r3}
   15e90:	stm	ip, {r0, r1, r2, r3}
   15e94:	beq	16044 <_obstack_memory_used@@Base+0x3620>
   15e98:	str	r7, [sp, #88]	; 0x58
   15e9c:	str	r8, [sp, #92]	; 0x5c
   15ea0:	bl	10f18 <__errno_location@plt>
   15ea4:	ldr	r6, [pc, #416]	; 1604c <_obstack_memory_used@@Base+0x3628>
   15ea8:	cmn	r4, #-2147483647	; 0x80000001
   15eac:	ldr	r5, [r6]
   15eb0:	mov	r9, r0
   15eb4:	movne	r0, #0
   15eb8:	moveq	r0, #1
   15ebc:	ldr	r3, [r9]
   15ec0:	orrs	r0, r0, r4, lsr #31
   15ec4:	str	r3, [sp, #28]
   15ec8:	bne	16044 <_obstack_memory_used@@Base+0x3620>
   15ecc:	ldr	r2, [r6, #4]
   15ed0:	cmp	r4, r2
   15ed4:	movlt	r3, sl
   15ed8:	blt	15f44 <_obstack_memory_used@@Base+0x3520>
   15edc:	add	r7, r6, #8
   15ee0:	cmp	r5, r7
   15ee4:	str	r2, [sp, #44]	; 0x2c
   15ee8:	beq	16014 <_obstack_memory_used@@Base+0x35f0>
   15eec:	mov	r3, #8
   15ef0:	sub	r2, r4, r2
   15ef4:	mov	r0, r5
   15ef8:	str	r3, [sp]
   15efc:	add	r2, r2, #1
   15f00:	mvn	r3, #-2147483648	; 0x80000000
   15f04:	add	r1, sp, #44	; 0x2c
   15f08:	bl	17724 <_obstack_memory_used@@Base+0x4d00>
   15f0c:	mov	r5, r0
   15f10:	str	r0, [r6]
   15f14:	ldr	r0, [r6, #4]
   15f18:	ldr	r2, [sp, #44]	; 0x2c
   15f1c:	mov	r1, #0
   15f20:	sub	r2, r2, r0
   15f24:	add	r0, r5, r0, lsl #3
   15f28:	lsl	r2, r2, #3
   15f2c:	bl	10f30 <memset@plt>
   15f30:	ldr	r3, [sp, #48]	; 0x30
   15f34:	ldr	r7, [sp, #88]	; 0x58
   15f38:	ldr	r8, [sp, #92]	; 0x5c
   15f3c:	ldr	r2, [sp, #44]	; 0x2c
   15f40:	str	r2, [r6, #4]
   15f44:	add	r2, r5, r4, lsl #3
   15f48:	mov	r1, r2
   15f4c:	str	r2, [sp, #32]
   15f50:	ldr	r2, [sp, #52]	; 0x34
   15f54:	ldr	r6, [r1, #4]
   15f58:	ldr	sl, [r5, r4, lsl #3]
   15f5c:	orr	r2, r2, #1
   15f60:	str	r3, [sp]
   15f64:	add	r3, sp, #56	; 0x38
   15f68:	str	r2, [sp, #36]	; 0x24
   15f6c:	str	r2, [sp, #4]
   15f70:	str	r3, [sp, #8]
   15f74:	mov	r0, r6
   15f78:	str	r8, [sp, #16]
   15f7c:	str	r7, [sp, #12]
   15f80:	mov	r1, sl
   15f84:	ldr	r3, [sp, #136]	; 0x88
   15f88:	mov	r2, fp
   15f8c:	bl	12c2c <_obstack_memory_used@@Base+0x208>
   15f90:	cmp	sl, r0
   15f94:	bhi	16000 <_obstack_memory_used@@Base+0x35dc>
   15f98:	ldr	r3, [pc, #176]	; 16050 <_obstack_memory_used@@Base+0x362c>
   15f9c:	add	r7, r0, #1
   15fa0:	cmp	r6, r3
   15fa4:	str	r7, [r5, r4, lsl #3]
   15fa8:	beq	15fb4 <_obstack_memory_used@@Base+0x3590>
   15fac:	mov	r0, r6
   15fb0:	bl	12310 <close@plt+0x1350>
   15fb4:	mov	r0, r7
   15fb8:	bl	17508 <_obstack_memory_used@@Base+0x4ae4>
   15fbc:	ldr	r3, [sp, #32]
   15fc0:	ldr	lr, [sp, #92]	; 0x5c
   15fc4:	ldr	ip, [sp, #88]	; 0x58
   15fc8:	ldr	r4, [sp, #36]	; 0x24
   15fcc:	mov	r2, fp
   15fd0:	mov	r1, r7
   15fd4:	str	r0, [r3, #4]
   15fd8:	add	r3, sp, #56	; 0x38
   15fdc:	str	r3, [sp, #8]
   15fe0:	ldr	r3, [sp, #48]	; 0x30
   15fe4:	str	r4, [sp, #4]
   15fe8:	str	r3, [sp]
   15fec:	str	lr, [sp, #16]
   15ff0:	str	ip, [sp, #12]
   15ff4:	ldr	r3, [sp, #136]	; 0x88
   15ff8:	mov	r6, r0
   15ffc:	bl	12c2c <_obstack_memory_used@@Base+0x208>
   16000:	ldr	r3, [sp, #28]
   16004:	mov	r0, r6
   16008:	str	r3, [r9]
   1600c:	add	sp, sp, #100	; 0x64
   16010:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16014:	mov	r3, #8
   16018:	sub	r2, r4, r2
   1601c:	str	r3, [sp]
   16020:	add	r1, sp, #44	; 0x2c
   16024:	add	r2, r2, #1
   16028:	mvn	r3, #-2147483648	; 0x80000000
   1602c:	bl	17724 <_obstack_memory_used@@Base+0x4d00>
   16030:	mov	r5, r0
   16034:	ldm	r7, {r0, r1}
   16038:	str	r5, [r6]
   1603c:	stm	r5, {r0, r1}
   16040:	b	15f14 <_obstack_memory_used@@Base+0x34f0>
   16044:	bl	10fb4 <abort@plt>
   16048:	muleq	r2, r4, r1
   1604c:	strdeq	fp, [r2], -r4
   16050:	andeq	fp, r2, r4, asr #3
   16054:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16058:	mov	r5, r0
   1605c:	ldr	lr, [pc, #452]	; 16228 <_obstack_memory_used@@Base+0x3804>
   16060:	mov	r6, r1
   16064:	mov	sl, r2
   16068:	ldm	lr!, {r0, r1, r2, r3}
   1606c:	sub	sp, sp, #92	; 0x5c
   16070:	add	ip, sp, #40	; 0x28
   16074:	cmp	r6, #0
   16078:	cmpne	r5, #0
   1607c:	stmia	ip!, {r0, r1, r2, r3}
   16080:	mov	r9, #10
   16084:	ldm	lr!, {r0, r1, r2, r3}
   16088:	moveq	fp, #1
   1608c:	movne	fp, #0
   16090:	str	r9, [sp, #40]	; 0x28
   16094:	stmia	ip!, {r0, r1, r2, r3}
   16098:	ldm	lr, {r0, r1, r2, r3}
   1609c:	stm	ip, {r0, r1, r2, r3}
   160a0:	beq	16224 <_obstack_memory_used@@Base+0x3800>
   160a4:	str	r5, [sp, #80]	; 0x50
   160a8:	str	r6, [sp, #84]	; 0x54
   160ac:	bl	10f18 <__errno_location@plt>
   160b0:	ldr	r7, [pc, #372]	; 1622c <_obstack_memory_used@@Base+0x3808>
   160b4:	ldr	r2, [r7, #4]
   160b8:	ldr	r4, [r7]
   160bc:	cmp	r2, #0
   160c0:	ldr	r3, [r0]
   160c4:	mov	r8, r0
   160c8:	str	r3, [sp, #24]
   160cc:	movgt	r3, r9
   160d0:	bgt	16138 <_obstack_memory_used@@Base+0x3714>
   160d4:	add	r5, r7, #8
   160d8:	cmp	r4, r5
   160dc:	str	r2, [sp, #36]	; 0x24
   160e0:	beq	161f4 <_obstack_memory_used@@Base+0x37d0>
   160e4:	mov	r3, #8
   160e8:	mov	r0, r4
   160ec:	str	r3, [sp]
   160f0:	rsb	r2, r2, #1
   160f4:	mvn	r3, #-2147483648	; 0x80000000
   160f8:	add	r1, sp, #36	; 0x24
   160fc:	bl	17724 <_obstack_memory_used@@Base+0x4d00>
   16100:	mov	r4, r0
   16104:	str	r0, [r7]
   16108:	ldr	r0, [r7, #4]
   1610c:	ldr	r2, [sp, #36]	; 0x24
   16110:	mov	r1, #0
   16114:	sub	r2, r2, r0
   16118:	add	r0, r4, r0, lsl #3
   1611c:	lsl	r2, r2, #3
   16120:	bl	10f30 <memset@plt>
   16124:	ldr	r3, [sp, #40]	; 0x28
   16128:	ldr	r5, [sp, #80]	; 0x50
   1612c:	ldr	r6, [sp, #84]	; 0x54
   16130:	ldr	r2, [sp, #36]	; 0x24
   16134:	str	r2, [r7, #4]
   16138:	ldr	r2, [sp, #44]	; 0x2c
   1613c:	ldr	r9, [r4]
   16140:	ldr	r7, [r4, #4]
   16144:	orr	r2, r2, #1
   16148:	add	fp, sp, #48	; 0x30
   1614c:	str	r2, [sp, #28]
   16150:	str	r2, [sp, #4]
   16154:	str	r3, [sp]
   16158:	str	r6, [sp, #16]
   1615c:	str	r5, [sp, #12]
   16160:	mov	r1, r9
   16164:	mov	r0, r7
   16168:	str	fp, [sp, #8]
   1616c:	mvn	r3, #0
   16170:	mov	r2, sl
   16174:	bl	12c2c <_obstack_memory_used@@Base+0x208>
   16178:	cmp	r9, r0
   1617c:	bhi	161e0 <_obstack_memory_used@@Base+0x37bc>
   16180:	ldr	r3, [pc, #168]	; 16230 <_obstack_memory_used@@Base+0x380c>
   16184:	add	r5, r0, #1
   16188:	cmp	r7, r3
   1618c:	str	r5, [r4]
   16190:	beq	1619c <_obstack_memory_used@@Base+0x3778>
   16194:	mov	r0, r7
   16198:	bl	12310 <close@plt+0x1350>
   1619c:	mov	r0, r5
   161a0:	bl	17508 <_obstack_memory_used@@Base+0x4ae4>
   161a4:	ldr	lr, [sp, #84]	; 0x54
   161a8:	ldr	r3, [sp, #40]	; 0x28
   161ac:	ldr	ip, [sp, #80]	; 0x50
   161b0:	mov	r2, sl
   161b4:	mov	r1, r5
   161b8:	str	r0, [r4, #4]
   161bc:	ldr	r4, [sp, #28]
   161c0:	str	r3, [sp]
   161c4:	str	fp, [sp, #8]
   161c8:	str	r4, [sp, #4]
   161cc:	str	lr, [sp, #16]
   161d0:	str	ip, [sp, #12]
   161d4:	mvn	r3, #0
   161d8:	mov	r7, r0
   161dc:	bl	12c2c <_obstack_memory_used@@Base+0x208>
   161e0:	ldr	r3, [sp, #24]
   161e4:	mov	r0, r7
   161e8:	str	r3, [r8]
   161ec:	add	sp, sp, #92	; 0x5c
   161f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   161f4:	mov	r3, #8
   161f8:	str	r3, [sp]
   161fc:	add	r1, sp, #36	; 0x24
   16200:	rsb	r2, r2, #1
   16204:	mov	r0, fp
   16208:	mvn	r3, #-2147483648	; 0x80000000
   1620c:	bl	17724 <_obstack_memory_used@@Base+0x4d00>
   16210:	mov	r4, r0
   16214:	ldm	r5, {r0, r1}
   16218:	str	r4, [r7]
   1621c:	stm	r4, {r0, r1}
   16220:	b	16108 <_obstack_memory_used@@Base+0x36e4>
   16224:	bl	10fb4 <abort@plt>
   16228:	muleq	r2, r4, r1
   1622c:	strdeq	fp, [r2], -r4
   16230:	andeq	fp, r2, r4, asr #3
   16234:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16238:	mov	r5, r0
   1623c:	ldr	lr, [pc, #464]	; 16414 <_obstack_memory_used@@Base+0x39f0>
   16240:	mov	r6, r1
   16244:	mov	sl, r2
   16248:	mov	fp, r3
   1624c:	ldm	lr!, {r0, r1, r2, r3}
   16250:	sub	sp, sp, #92	; 0x5c
   16254:	add	ip, sp, #40	; 0x28
   16258:	cmp	r6, #0
   1625c:	cmpne	r5, #0
   16260:	stmia	ip!, {r0, r1, r2, r3}
   16264:	moveq	r4, #1
   16268:	ldm	lr!, {r0, r1, r2, r3}
   1626c:	movne	r4, #0
   16270:	mov	r9, #10
   16274:	str	r4, [sp, #28]
   16278:	stmia	ip!, {r0, r1, r2, r3}
   1627c:	ldm	lr, {r0, r1, r2, r3}
   16280:	str	r9, [sp, #40]	; 0x28
   16284:	stm	ip, {r0, r1, r2, r3}
   16288:	beq	16410 <_obstack_memory_used@@Base+0x39ec>
   1628c:	str	r5, [sp, #80]	; 0x50
   16290:	str	r6, [sp, #84]	; 0x54
   16294:	bl	10f18 <__errno_location@plt>
   16298:	ldr	r7, [pc, #376]	; 16418 <_obstack_memory_used@@Base+0x39f4>
   1629c:	ldr	r2, [r7, #4]
   162a0:	ldr	r4, [r7]
   162a4:	cmp	r2, #0
   162a8:	ldr	r3, [r0]
   162ac:	mov	r8, r0
   162b0:	str	r3, [sp, #24]
   162b4:	movgt	r3, r9
   162b8:	bgt	16320 <_obstack_memory_used@@Base+0x38fc>
   162bc:	add	r5, r7, #8
   162c0:	cmp	r4, r5
   162c4:	str	r2, [sp, #36]	; 0x24
   162c8:	beq	163e0 <_obstack_memory_used@@Base+0x39bc>
   162cc:	mov	r3, #8
   162d0:	mov	r0, r4
   162d4:	str	r3, [sp]
   162d8:	rsb	r2, r2, #1
   162dc:	mvn	r3, #-2147483648	; 0x80000000
   162e0:	add	r1, sp, #36	; 0x24
   162e4:	bl	17724 <_obstack_memory_used@@Base+0x4d00>
   162e8:	mov	r4, r0
   162ec:	str	r0, [r7]
   162f0:	ldr	r0, [r7, #4]
   162f4:	ldr	r2, [sp, #36]	; 0x24
   162f8:	mov	r1, #0
   162fc:	sub	r2, r2, r0
   16300:	add	r0, r4, r0, lsl #3
   16304:	lsl	r2, r2, #3
   16308:	bl	10f30 <memset@plt>
   1630c:	ldr	r3, [sp, #40]	; 0x28
   16310:	ldr	r5, [sp, #80]	; 0x50
   16314:	ldr	r6, [sp, #84]	; 0x54
   16318:	ldr	r2, [sp, #36]	; 0x24
   1631c:	str	r2, [r7, #4]
   16320:	ldr	r2, [sp, #44]	; 0x2c
   16324:	ldr	r9, [r4]
   16328:	ldr	r7, [r4, #4]
   1632c:	orr	r2, r2, #1
   16330:	str	r3, [sp]
   16334:	add	r3, sp, #48	; 0x30
   16338:	str	r2, [sp, #28]
   1633c:	str	r2, [sp, #4]
   16340:	str	r3, [sp, #8]
   16344:	str	r6, [sp, #16]
   16348:	str	r5, [sp, #12]
   1634c:	mov	r1, r9
   16350:	mov	r0, r7
   16354:	mov	r3, fp
   16358:	mov	r2, sl
   1635c:	bl	12c2c <_obstack_memory_used@@Base+0x208>
   16360:	cmp	r9, r0
   16364:	bhi	163cc <_obstack_memory_used@@Base+0x39a8>
   16368:	ldr	r3, [pc, #172]	; 1641c <_obstack_memory_used@@Base+0x39f8>
   1636c:	add	r5, r0, #1
   16370:	cmp	r7, r3
   16374:	str	r5, [r4]
   16378:	beq	16384 <_obstack_memory_used@@Base+0x3960>
   1637c:	mov	r0, r7
   16380:	bl	12310 <close@plt+0x1350>
   16384:	mov	r0, r5
   16388:	bl	17508 <_obstack_memory_used@@Base+0x4ae4>
   1638c:	add	lr, sp, #48	; 0x30
   16390:	ldr	ip, [sp, #84]	; 0x54
   16394:	mov	r1, r5
   16398:	ldr	r5, [sp, #28]
   1639c:	mov	r3, fp
   163a0:	mov	r2, sl
   163a4:	str	r0, [r4, #4]
   163a8:	ldr	r4, [sp, #80]	; 0x50
   163ac:	str	lr, [sp, #8]
   163b0:	ldr	lr, [sp, #40]	; 0x28
   163b4:	str	r5, [sp, #4]
   163b8:	str	ip, [sp, #16]
   163bc:	str	r4, [sp, #12]
   163c0:	str	lr, [sp]
   163c4:	mov	r7, r0
   163c8:	bl	12c2c <_obstack_memory_used@@Base+0x208>
   163cc:	ldr	r3, [sp, #24]
   163d0:	mov	r0, r7
   163d4:	str	r3, [r8]
   163d8:	add	sp, sp, #92	; 0x5c
   163dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   163e0:	mov	r3, #8
   163e4:	str	r3, [sp]
   163e8:	add	r1, sp, #36	; 0x24
   163ec:	rsb	r2, r2, #1
   163f0:	ldr	r0, [sp, #28]
   163f4:	mvn	r3, #-2147483648	; 0x80000000
   163f8:	bl	17724 <_obstack_memory_used@@Base+0x4d00>
   163fc:	mov	r4, r0
   16400:	ldm	r5, {r0, r1}
   16404:	str	r4, [r7]
   16408:	stm	r4, {r0, r1}
   1640c:	b	162f0 <_obstack_memory_used@@Base+0x38cc>
   16410:	bl	10fb4 <abort@plt>
   16414:	muleq	r2, r4, r1
   16418:	strdeq	fp, [r2], -r4
   1641c:	andeq	fp, r2, r4, asr #3
   16420:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16424:	sub	sp, sp, #52	; 0x34
   16428:	mov	r5, r0
   1642c:	mov	sl, r1
   16430:	mov	fp, r2
   16434:	bl	10f18 <__errno_location@plt>
   16438:	ldr	r4, [pc, #404]	; 165d4 <_obstack_memory_used@@Base+0x3bb0>
   1643c:	cmn	r5, #-2147483647	; 0x80000001
   16440:	ldr	r6, [r4]
   16444:	mov	r8, r0
   16448:	movne	r0, #0
   1644c:	moveq	r0, #1
   16450:	ldr	r3, [r8]
   16454:	orrs	r0, r0, r5, lsr #31
   16458:	str	r3, [sp, #28]
   1645c:	bne	165d0 <_obstack_memory_used@@Base+0x3bac>
   16460:	ldr	r2, [r4, #4]
   16464:	cmp	r5, r2
   16468:	blt	164c8 <_obstack_memory_used@@Base+0x3aa4>
   1646c:	add	r7, r4, #8
   16470:	cmp	r6, r7
   16474:	str	r2, [sp, #44]	; 0x2c
   16478:	beq	165a0 <_obstack_memory_used@@Base+0x3b7c>
   1647c:	mov	r3, #8
   16480:	sub	r2, r5, r2
   16484:	mov	r0, r6
   16488:	str	r3, [sp]
   1648c:	add	r2, r2, #1
   16490:	mvn	r3, #-2147483648	; 0x80000000
   16494:	add	r1, sp, #44	; 0x2c
   16498:	bl	17724 <_obstack_memory_used@@Base+0x4d00>
   1649c:	mov	r6, r0
   164a0:	str	r0, [r4]
   164a4:	ldr	r0, [r4, #4]
   164a8:	ldr	r2, [sp, #44]	; 0x2c
   164ac:	mov	r1, #0
   164b0:	sub	r2, r2, r0
   164b4:	add	r0, r6, r0, lsl #3
   164b8:	lsl	r2, r2, #3
   164bc:	bl	10f30 <memset@plt>
   164c0:	ldr	r3, [sp, #44]	; 0x2c
   164c4:	str	r3, [r4, #4]
   164c8:	ldr	r2, [r4, #56]	; 0x38
   164cc:	add	r3, r6, r5, lsl #3
   164d0:	ldr	r1, [r4, #20]
   164d4:	ldr	r7, [r3, #4]
   164d8:	ldr	r9, [r6, r5, lsl #3]
   164dc:	ldr	ip, [r4, #60]	; 0x3c
   164e0:	str	r3, [sp, #32]
   164e4:	ldr	r3, [r4, #16]
   164e8:	str	r2, [sp, #12]
   164ec:	ldr	r2, [pc, #228]	; 165d8 <_obstack_memory_used@@Base+0x3bb4>
   164f0:	orr	r1, r1, #1
   164f4:	str	r1, [sp, #36]	; 0x24
   164f8:	str	r1, [sp, #4]
   164fc:	str	r2, [sp, #8]
   16500:	str	r3, [sp]
   16504:	mov	r0, r7
   16508:	mov	r1, r9
   1650c:	str	ip, [sp, #16]
   16510:	mov	r3, fp
   16514:	mov	r2, sl
   16518:	bl	12c2c <_obstack_memory_used@@Base+0x208>
   1651c:	cmp	r9, r0
   16520:	bhi	1658c <_obstack_memory_used@@Base+0x3b68>
   16524:	ldr	r3, [pc, #176]	; 165dc <_obstack_memory_used@@Base+0x3bb8>
   16528:	add	r9, r0, #1
   1652c:	cmp	r7, r3
   16530:	str	r9, [r6, r5, lsl #3]
   16534:	beq	16540 <_obstack_memory_used@@Base+0x3b1c>
   16538:	mov	r0, r7
   1653c:	bl	12310 <close@plt+0x1350>
   16540:	mov	r0, r9
   16544:	bl	17508 <_obstack_memory_used@@Base+0x4ae4>
   16548:	ldr	ip, [sp, #32]
   1654c:	ldr	lr, [r4, #60]	; 0x3c
   16550:	ldr	r5, [r4, #56]	; 0x38
   16554:	mov	r3, fp
   16558:	mov	r2, sl
   1655c:	mov	r1, r9
   16560:	str	r0, [ip, #4]
   16564:	ldr	ip, [r4, #16]
   16568:	ldr	r4, [pc, #104]	; 165d8 <_obstack_memory_used@@Base+0x3bb4>
   1656c:	str	lr, [sp, #16]
   16570:	str	r4, [sp, #8]
   16574:	ldr	r4, [sp, #36]	; 0x24
   16578:	str	r5, [sp, #12]
   1657c:	str	r4, [sp, #4]
   16580:	str	ip, [sp]
   16584:	mov	r7, r0
   16588:	bl	12c2c <_obstack_memory_used@@Base+0x208>
   1658c:	ldr	r3, [sp, #28]
   16590:	mov	r0, r7
   16594:	str	r3, [r8]
   16598:	add	sp, sp, #52	; 0x34
   1659c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   165a0:	mov	r3, #8
   165a4:	sub	r2, r5, r2
   165a8:	str	r3, [sp]
   165ac:	add	r1, sp, #44	; 0x2c
   165b0:	add	r2, r2, #1
   165b4:	mvn	r3, #-2147483648	; 0x80000000
   165b8:	bl	17724 <_obstack_memory_used@@Base+0x4d00>
   165bc:	mov	r6, r0
   165c0:	ldm	r7, {r0, r1}
   165c4:	str	r6, [r4]
   165c8:	stm	r6, {r0, r1}
   165cc:	b	164a4 <_obstack_memory_used@@Base+0x3a80>
   165d0:	bl	10fb4 <abort@plt>
   165d4:	strdeq	fp, [r2], -r4
   165d8:	andeq	fp, r2, ip, lsl #2
   165dc:	andeq	fp, r2, r4, asr #3
   165e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   165e4:	sub	sp, sp, #44	; 0x2c
   165e8:	mov	r9, r0
   165ec:	mov	sl, r1
   165f0:	bl	10f18 <__errno_location@plt>
   165f4:	ldr	r4, [pc, #360]	; 16764 <_obstack_memory_used@@Base+0x3d40>
   165f8:	ldr	r2, [r4, #4]
   165fc:	ldr	r5, [r4]
   16600:	cmp	r2, #0
   16604:	ldr	r3, [r0]
   16608:	mov	r7, r0
   1660c:	str	r3, [sp, #24]
   16610:	bgt	1666c <_obstack_memory_used@@Base+0x3c48>
   16614:	add	r6, r4, #8
   16618:	cmp	r5, r6
   1661c:	str	r2, [sp, #36]	; 0x24
   16620:	beq	16734 <_obstack_memory_used@@Base+0x3d10>
   16624:	mov	r3, #8
   16628:	mov	r0, r5
   1662c:	str	r3, [sp]
   16630:	rsb	r2, r2, #1
   16634:	mvn	r3, #-2147483648	; 0x80000000
   16638:	add	r1, sp, #36	; 0x24
   1663c:	bl	17724 <_obstack_memory_used@@Base+0x4d00>
   16640:	mov	r5, r0
   16644:	str	r0, [r4]
   16648:	ldr	r0, [r4, #4]
   1664c:	ldr	r2, [sp, #36]	; 0x24
   16650:	mov	r1, #0
   16654:	sub	r2, r2, r0
   16658:	add	r0, r5, r0, lsl #3
   1665c:	lsl	r2, r2, #3
   16660:	bl	10f30 <memset@plt>
   16664:	ldr	r3, [sp, #36]	; 0x24
   16668:	str	r3, [r4, #4]
   1666c:	ldr	r1, [r4, #20]
   16670:	ldr	r8, [r5]
   16674:	ldr	r6, [r5, #4]
   16678:	ldr	r2, [r4, #56]	; 0x38
   1667c:	ldr	r3, [r4, #16]
   16680:	ldr	ip, [r4, #60]	; 0x3c
   16684:	ldr	fp, [pc, #220]	; 16768 <_obstack_memory_used@@Base+0x3d44>
   16688:	orr	r1, r1, #1
   1668c:	str	r1, [sp, #28]
   16690:	str	r1, [sp, #4]
   16694:	str	r2, [sp, #12]
   16698:	str	r3, [sp]
   1669c:	mov	r1, r8
   166a0:	mov	r0, r6
   166a4:	str	ip, [sp, #16]
   166a8:	str	fp, [sp, #8]
   166ac:	mov	r3, sl
   166b0:	mov	r2, r9
   166b4:	bl	12c2c <_obstack_memory_used@@Base+0x208>
   166b8:	cmp	r8, r0
   166bc:	bhi	16720 <_obstack_memory_used@@Base+0x3cfc>
   166c0:	ldr	r3, [pc, #164]	; 1676c <_obstack_memory_used@@Base+0x3d48>
   166c4:	add	r8, r0, #1
   166c8:	cmp	r6, r3
   166cc:	str	r8, [r5]
   166d0:	beq	166dc <_obstack_memory_used@@Base+0x3cb8>
   166d4:	mov	r0, r6
   166d8:	bl	12310 <close@plt+0x1350>
   166dc:	mov	r0, r8
   166e0:	bl	17508 <_obstack_memory_used@@Base+0x4ae4>
   166e4:	ldr	lr, [r4, #60]	; 0x3c
   166e8:	ldr	ip, [r4, #16]
   166ec:	mov	r3, sl
   166f0:	mov	r2, r9
   166f4:	mov	r1, r8
   166f8:	str	r0, [r5, #4]
   166fc:	ldr	r5, [r4, #56]	; 0x38
   16700:	ldr	r4, [sp, #28]
   16704:	str	fp, [sp, #8]
   16708:	str	r4, [sp, #4]
   1670c:	str	lr, [sp, #16]
   16710:	str	r5, [sp, #12]
   16714:	str	ip, [sp]
   16718:	mov	r6, r0
   1671c:	bl	12c2c <_obstack_memory_used@@Base+0x208>
   16720:	ldr	r3, [sp, #24]
   16724:	mov	r0, r6
   16728:	str	r3, [r7]
   1672c:	add	sp, sp, #44	; 0x2c
   16730:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16734:	mov	r3, #8
   16738:	str	r3, [sp]
   1673c:	add	r1, sp, #36	; 0x24
   16740:	rsb	r2, r2, #1
   16744:	mvn	r3, #-2147483648	; 0x80000000
   16748:	mov	r0, #0
   1674c:	bl	17724 <_obstack_memory_used@@Base+0x4d00>
   16750:	mov	r5, r0
   16754:	ldm	r6, {r0, r1}
   16758:	str	r5, [r4]
   1675c:	stm	r5, {r0, r1}
   16760:	b	16648 <_obstack_memory_used@@Base+0x3c24>
   16764:	strdeq	fp, [r2], -r4
   16768:	andeq	fp, r2, ip, lsl #2
   1676c:	andeq	fp, r2, r4, asr #3
   16770:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16774:	sub	sp, sp, #44	; 0x2c
   16778:	mov	r5, r0
   1677c:	mov	sl, r1
   16780:	bl	10f18 <__errno_location@plt>
   16784:	ldr	r4, [pc, #396]	; 16918 <_obstack_memory_used@@Base+0x3ef4>
   16788:	cmn	r5, #-2147483647	; 0x80000001
   1678c:	ldr	r6, [r4]
   16790:	mov	r8, r0
   16794:	movne	r0, #0
   16798:	moveq	r0, #1
   1679c:	ldr	r3, [r8]
   167a0:	orrs	r0, r0, r5, lsr #31
   167a4:	str	r3, [sp, #24]
   167a8:	bne	16914 <_obstack_memory_used@@Base+0x3ef0>
   167ac:	ldr	r2, [r4, #4]
   167b0:	cmp	r5, r2
   167b4:	blt	16814 <_obstack_memory_used@@Base+0x3df0>
   167b8:	add	r7, r4, #8
   167bc:	cmp	r6, r7
   167c0:	str	r2, [sp, #36]	; 0x24
   167c4:	beq	168e4 <_obstack_memory_used@@Base+0x3ec0>
   167c8:	mov	r3, #8
   167cc:	sub	r2, r5, r2
   167d0:	mov	r0, r6
   167d4:	str	r3, [sp]
   167d8:	add	r2, r2, #1
   167dc:	mvn	r3, #-2147483648	; 0x80000000
   167e0:	add	r1, sp, #36	; 0x24
   167e4:	bl	17724 <_obstack_memory_used@@Base+0x4d00>
   167e8:	mov	r6, r0
   167ec:	str	r0, [r4]
   167f0:	ldr	r0, [r4, #4]
   167f4:	ldr	r2, [sp, #36]	; 0x24
   167f8:	mov	r1, #0
   167fc:	sub	r2, r2, r0
   16800:	add	r0, r6, r0, lsl #3
   16804:	lsl	r2, r2, #3
   16808:	bl	10f30 <memset@plt>
   1680c:	ldr	r3, [sp, #36]	; 0x24
   16810:	str	r3, [r4, #4]
   16814:	ldr	r2, [r4, #56]	; 0x38
   16818:	add	fp, r6, r5, lsl #3
   1681c:	ldr	r1, [r4, #20]
   16820:	ldr	r9, [r6, r5, lsl #3]
   16824:	ldr	r7, [fp, #4]
   16828:	ldr	r3, [r4, #16]
   1682c:	ldr	ip, [r4, #60]	; 0x3c
   16830:	str	r2, [sp, #12]
   16834:	ldr	r2, [pc, #224]	; 1691c <_obstack_memory_used@@Base+0x3ef8>
   16838:	orr	r1, r1, #1
   1683c:	str	r1, [sp, #28]
   16840:	str	r1, [sp, #4]
   16844:	str	r2, [sp, #8]
   16848:	str	r3, [sp]
   1684c:	mov	r0, r7
   16850:	mov	r1, r9
   16854:	str	ip, [sp, #16]
   16858:	mvn	r3, #0
   1685c:	mov	r2, sl
   16860:	bl	12c2c <_obstack_memory_used@@Base+0x208>
   16864:	cmp	r9, r0
   16868:	bhi	168d0 <_obstack_memory_used@@Base+0x3eac>
   1686c:	ldr	r3, [pc, #172]	; 16920 <_obstack_memory_used@@Base+0x3efc>
   16870:	add	r9, r0, #1
   16874:	cmp	r7, r3
   16878:	str	r9, [r6, r5, lsl #3]
   1687c:	beq	16888 <_obstack_memory_used@@Base+0x3e64>
   16880:	mov	r0, r7
   16884:	bl	12310 <close@plt+0x1350>
   16888:	mov	r0, r9
   1688c:	bl	17508 <_obstack_memory_used@@Base+0x4ae4>
   16890:	ldr	ip, [r4, #60]	; 0x3c
   16894:	ldr	r3, [r4, #16]
   16898:	ldr	lr, [r4, #56]	; 0x38
   1689c:	ldr	r4, [pc, #120]	; 1691c <_obstack_memory_used@@Base+0x3ef8>
   168a0:	mov	r2, sl
   168a4:	mov	r1, r9
   168a8:	str	r0, [fp, #4]
   168ac:	str	r4, [sp, #8]
   168b0:	ldr	r4, [sp, #28]
   168b4:	str	r3, [sp]
   168b8:	str	r4, [sp, #4]
   168bc:	str	ip, [sp, #16]
   168c0:	str	lr, [sp, #12]
   168c4:	mvn	r3, #0
   168c8:	mov	r7, r0
   168cc:	bl	12c2c <_obstack_memory_used@@Base+0x208>
   168d0:	ldr	r3, [sp, #24]
   168d4:	mov	r0, r7
   168d8:	str	r3, [r8]
   168dc:	add	sp, sp, #44	; 0x2c
   168e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   168e4:	mov	r3, #8
   168e8:	sub	r2, r5, r2
   168ec:	str	r3, [sp]
   168f0:	add	r1, sp, #36	; 0x24
   168f4:	add	r2, r2, #1
   168f8:	mvn	r3, #-2147483648	; 0x80000000
   168fc:	bl	17724 <_obstack_memory_used@@Base+0x4d00>
   16900:	mov	r6, r0
   16904:	ldm	r7, {r0, r1}
   16908:	str	r6, [r4]
   1690c:	stm	r6, {r0, r1}
   16910:	b	167f0 <_obstack_memory_used@@Base+0x3dcc>
   16914:	bl	10fb4 <abort@plt>
   16918:	strdeq	fp, [r2], -r4
   1691c:	andeq	fp, r2, ip, lsl #2
   16920:	andeq	fp, r2, r4, asr #3
   16924:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16928:	sub	sp, sp, #44	; 0x2c
   1692c:	mov	sl, r0
   16930:	bl	10f18 <__errno_location@plt>
   16934:	ldr	r4, [pc, #348]	; 16a98 <_obstack_memory_used@@Base+0x4074>
   16938:	ldr	r2, [r4, #4]
   1693c:	ldr	r5, [r4]
   16940:	cmp	r2, #0
   16944:	ldr	r3, [r0]
   16948:	mov	r8, r0
   1694c:	str	r3, [sp, #28]
   16950:	bgt	169ac <_obstack_memory_used@@Base+0x3f88>
   16954:	add	r6, r4, #8
   16958:	cmp	r5, r6
   1695c:	str	r2, [sp, #36]	; 0x24
   16960:	beq	16a68 <_obstack_memory_used@@Base+0x4044>
   16964:	mov	r3, #8
   16968:	mov	r0, r5
   1696c:	str	r3, [sp]
   16970:	rsb	r2, r2, #1
   16974:	mvn	r3, #-2147483648	; 0x80000000
   16978:	add	r1, sp, #36	; 0x24
   1697c:	bl	17724 <_obstack_memory_used@@Base+0x4d00>
   16980:	mov	r5, r0
   16984:	str	r0, [r4]
   16988:	ldr	r0, [r4, #4]
   1698c:	ldr	r2, [sp, #36]	; 0x24
   16990:	mov	r1, #0
   16994:	sub	r2, r2, r0
   16998:	add	r0, r5, r0, lsl #3
   1699c:	lsl	r2, r2, #3
   169a0:	bl	10f30 <memset@plt>
   169a4:	ldr	r3, [sp, #36]	; 0x24
   169a8:	str	r3, [r4, #4]
   169ac:	ldr	r7, [r4, #20]
   169b0:	ldr	r9, [r5]
   169b4:	ldr	r6, [r5, #4]
   169b8:	ldr	r2, [r4, #56]	; 0x38
   169bc:	ldr	r3, [r4, #16]
   169c0:	ldr	ip, [r4, #60]	; 0x3c
   169c4:	ldr	fp, [pc, #208]	; 16a9c <_obstack_memory_used@@Base+0x4078>
   169c8:	orr	r7, r7, #1
   169cc:	str	r2, [sp, #12]
   169d0:	str	r3, [sp]
   169d4:	str	r7, [sp, #4]
   169d8:	mov	r1, r9
   169dc:	mov	r0, r6
   169e0:	str	ip, [sp, #16]
   169e4:	str	fp, [sp, #8]
   169e8:	mvn	r3, #0
   169ec:	mov	r2, sl
   169f0:	bl	12c2c <_obstack_memory_used@@Base+0x208>
   169f4:	cmp	r9, r0
   169f8:	bhi	16a54 <_obstack_memory_used@@Base+0x4030>
   169fc:	ldr	r3, [pc, #156]	; 16aa0 <_obstack_memory_used@@Base+0x407c>
   16a00:	add	r9, r0, #1
   16a04:	cmp	r6, r3
   16a08:	str	r9, [r5]
   16a0c:	beq	16a18 <_obstack_memory_used@@Base+0x3ff4>
   16a10:	mov	r0, r6
   16a14:	bl	12310 <close@plt+0x1350>
   16a18:	mov	r0, r9
   16a1c:	bl	17508 <_obstack_memory_used@@Base+0x4ae4>
   16a20:	ldr	ip, [r4, #60]	; 0x3c
   16a24:	ldr	r3, [r4, #16]
   16a28:	ldr	lr, [r4, #56]	; 0x38
   16a2c:	mov	r2, sl
   16a30:	mov	r1, r9
   16a34:	str	r0, [r5, #4]
   16a38:	str	r3, [sp]
   16a3c:	stmib	sp, {r7, fp}
   16a40:	str	ip, [sp, #16]
   16a44:	str	lr, [sp, #12]
   16a48:	mvn	r3, #0
   16a4c:	mov	r6, r0
   16a50:	bl	12c2c <_obstack_memory_used@@Base+0x208>
   16a54:	ldr	r3, [sp, #28]
   16a58:	mov	r0, r6
   16a5c:	str	r3, [r8]
   16a60:	add	sp, sp, #44	; 0x2c
   16a64:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16a68:	mov	r3, #8
   16a6c:	str	r3, [sp]
   16a70:	add	r1, sp, #36	; 0x24
   16a74:	rsb	r2, r2, #1
   16a78:	mvn	r3, #-2147483648	; 0x80000000
   16a7c:	mov	r0, #0
   16a80:	bl	17724 <_obstack_memory_used@@Base+0x4d00>
   16a84:	mov	r5, r0
   16a88:	ldm	r6, {r0, r1}
   16a8c:	str	r5, [r4]
   16a90:	stm	r5, {r0, r1}
   16a94:	b	16988 <_obstack_memory_used@@Base+0x3f64>
   16a98:	strdeq	fp, [r2], -r4
   16a9c:	andeq	fp, r2, ip, lsl #2
   16aa0:	andeq	fp, r2, r4, asr #3
   16aa4:	push	{r4, r5, r6, lr}
   16aa8:	sub	sp, sp, #32
   16aac:	cmp	r1, #0
   16ab0:	mov	r4, r0
   16ab4:	ldr	r5, [sp, #48]	; 0x30
   16ab8:	ldr	r6, [sp, #52]	; 0x34
   16abc:	beq	16dd4 <_obstack_memory_used@@Base+0x43b0>
   16ac0:	stm	sp, {r2, r3}
   16ac4:	mov	r3, r1
   16ac8:	ldr	r2, [pc, #808]	; 16df8 <_obstack_memory_used@@Base+0x43d4>
   16acc:	mov	r1, #1
   16ad0:	bl	10f54 <__fprintf_chk@plt>
   16ad4:	mov	r2, #5
   16ad8:	ldr	r1, [pc, #796]	; 16dfc <_obstack_memory_used@@Base+0x43d8>
   16adc:	mov	r0, #0
   16ae0:	bl	10df8 <dcgettext@plt>
   16ae4:	ldr	r3, [pc, #788]	; 16e00 <_obstack_memory_used@@Base+0x43dc>
   16ae8:	ldr	r2, [pc, #788]	; 16e04 <_obstack_memory_used@@Base+0x43e0>
   16aec:	str	r3, [sp]
   16af0:	mov	r1, #1
   16af4:	mov	r3, r0
   16af8:	mov	r0, r4
   16afc:	bl	10f54 <__fprintf_chk@plt>
   16b00:	mov	r1, r4
   16b04:	mov	r0, #10
   16b08:	bl	10dec <fputc_unlocked@plt>
   16b0c:	mov	r2, #5
   16b10:	ldr	r1, [pc, #752]	; 16e08 <_obstack_memory_used@@Base+0x43e4>
   16b14:	mov	r0, #0
   16b18:	bl	10df8 <dcgettext@plt>
   16b1c:	mov	r1, #1
   16b20:	ldr	r3, [pc, #740]	; 16e0c <_obstack_memory_used@@Base+0x43e8>
   16b24:	mov	r2, r0
   16b28:	mov	r0, r4
   16b2c:	bl	10f54 <__fprintf_chk@plt>
   16b30:	mov	r1, r4
   16b34:	mov	r0, #10
   16b38:	bl	10dec <fputc_unlocked@plt>
   16b3c:	cmp	r6, #9
   16b40:	ldrls	pc, [pc, r6, lsl #2]
   16b44:	b	16dec <_obstack_memory_used@@Base+0x43c8>
   16b48:	andeq	r6, r1, ip, asr #23
   16b4c:	ldrdeq	r6, [r1], -r4
   16b50:	andeq	r6, r1, r0, lsl #24
   16b54:	andeq	r6, r1, r4, lsr ip
   16b58:	andeq	r6, r1, r0, ror ip
   16b5c:	andeq	r6, r1, ip, lsr #25
   16b60:	andeq	r6, r1, r8, ror #25
   16b64:	andeq	r6, r1, ip, lsr #26
   16b68:	andeq	r6, r1, ip, ror sp
   16b6c:	andeq	r6, r1, r0, ror fp
   16b70:	ldr	r1, [pc, #664]	; 16e10 <_obstack_memory_used@@Base+0x43ec>
   16b74:	mov	r2, #5
   16b78:	mov	r0, #0
   16b7c:	bl	10df8 <dcgettext@plt>
   16b80:	ldr	ip, [r5, #32]
   16b84:	ldr	r1, [r5, #28]
   16b88:	ldr	r2, [r5, #24]
   16b8c:	ldr	r3, [r5]
   16b90:	ldr	r6, [r5, #20]
   16b94:	str	ip, [sp, #28]
   16b98:	ldr	lr, [r5, #16]
   16b9c:	str	r1, [sp, #24]
   16ba0:	ldr	ip, [r5, #12]
   16ba4:	str	r2, [sp, #20]
   16ba8:	ldr	r1, [r5, #8]
   16bac:	ldr	r2, [r5, #4]
   16bb0:	str	r6, [sp, #16]
   16bb4:	stmib	sp, {r1, ip, lr}
   16bb8:	mov	r1, #1
   16bbc:	str	r2, [sp]
   16bc0:	mov	r2, r0
   16bc4:	mov	r0, r4
   16bc8:	bl	10f54 <__fprintf_chk@plt>
   16bcc:	add	sp, sp, #32
   16bd0:	pop	{r4, r5, r6, pc}
   16bd4:	mov	r2, #5
   16bd8:	ldr	r1, [pc, #564]	; 16e14 <_obstack_memory_used@@Base+0x43f0>
   16bdc:	mov	r0, #0
   16be0:	bl	10df8 <dcgettext@plt>
   16be4:	ldr	r3, [r5]
   16be8:	mov	r1, #1
   16bec:	mov	r2, r0
   16bf0:	mov	r0, r4
   16bf4:	add	sp, sp, #32
   16bf8:	pop	{r4, r5, r6, lr}
   16bfc:	b	10f54 <__fprintf_chk@plt>
   16c00:	mov	r2, #5
   16c04:	ldr	r1, [pc, #524]	; 16e18 <_obstack_memory_used@@Base+0x43f4>
   16c08:	mov	r0, #0
   16c0c:	bl	10df8 <dcgettext@plt>
   16c10:	ldr	r2, [r5, #4]
   16c14:	ldr	r3, [r5]
   16c18:	mov	r1, #1
   16c1c:	str	r2, [sp, #48]	; 0x30
   16c20:	mov	r2, r0
   16c24:	mov	r0, r4
   16c28:	add	sp, sp, #32
   16c2c:	pop	{r4, r5, r6, lr}
   16c30:	b	10f54 <__fprintf_chk@plt>
   16c34:	mov	r2, #5
   16c38:	ldr	r1, [pc, #476]	; 16e1c <_obstack_memory_used@@Base+0x43f8>
   16c3c:	mov	r0, #0
   16c40:	bl	10df8 <dcgettext@plt>
   16c44:	ldr	r1, [r5, #8]
   16c48:	ldr	r2, [r5, #4]
   16c4c:	ldr	r3, [r5]
   16c50:	str	r1, [sp, #52]	; 0x34
   16c54:	str	r2, [sp, #48]	; 0x30
   16c58:	mov	r1, #1
   16c5c:	mov	r2, r0
   16c60:	mov	r0, r4
   16c64:	add	sp, sp, #32
   16c68:	pop	{r4, r5, r6, lr}
   16c6c:	b	10f54 <__fprintf_chk@plt>
   16c70:	mov	r2, #5
   16c74:	ldr	r1, [pc, #420]	; 16e20 <_obstack_memory_used@@Base+0x43fc>
   16c78:	mov	r0, #0
   16c7c:	bl	10df8 <dcgettext@plt>
   16c80:	ldr	r1, [r5, #8]
   16c84:	ldr	ip, [r5, #12]
   16c88:	ldr	r2, [r5, #4]
   16c8c:	ldr	r3, [r5]
   16c90:	stmib	sp, {r1, ip}
   16c94:	str	r2, [sp]
   16c98:	mov	r1, #1
   16c9c:	mov	r2, r0
   16ca0:	mov	r0, r4
   16ca4:	bl	10f54 <__fprintf_chk@plt>
   16ca8:	b	16bcc <_obstack_memory_used@@Base+0x41a8>
   16cac:	mov	r2, #5
   16cb0:	ldr	r1, [pc, #364]	; 16e24 <_obstack_memory_used@@Base+0x4400>
   16cb4:	mov	r0, #0
   16cb8:	bl	10df8 <dcgettext@plt>
   16cbc:	add	r1, r5, #8
   16cc0:	ldr	r2, [r5, #4]
   16cc4:	ldm	r1, {r1, ip, lr}
   16cc8:	ldr	r3, [r5]
   16ccc:	str	r2, [sp]
   16cd0:	stmib	sp, {r1, ip, lr}
   16cd4:	mov	r1, #1
   16cd8:	mov	r2, r0
   16cdc:	mov	r0, r4
   16ce0:	bl	10f54 <__fprintf_chk@plt>
   16ce4:	b	16bcc <_obstack_memory_used@@Base+0x41a8>
   16ce8:	mov	r2, #5
   16cec:	ldr	r1, [pc, #308]	; 16e28 <_obstack_memory_used@@Base+0x4404>
   16cf0:	mov	r0, #0
   16cf4:	bl	10df8 <dcgettext@plt>
   16cf8:	add	r1, r5, #8
   16cfc:	ldr	r2, [r5, #4]
   16d00:	ldm	r1, {r1, ip, lr}
   16d04:	ldr	r6, [r5, #20]
   16d08:	ldr	r3, [r5]
   16d0c:	stmib	sp, {r1, ip, lr}
   16d10:	mov	r1, #1
   16d14:	str	r2, [sp]
   16d18:	str	r6, [sp, #16]
   16d1c:	mov	r2, r0
   16d20:	mov	r0, r4
   16d24:	bl	10f54 <__fprintf_chk@plt>
   16d28:	b	16bcc <_obstack_memory_used@@Base+0x41a8>
   16d2c:	mov	r2, #5
   16d30:	ldr	r1, [pc, #244]	; 16e2c <_obstack_memory_used@@Base+0x4408>
   16d34:	mov	r0, #0
   16d38:	bl	10df8 <dcgettext@plt>
   16d3c:	ldr	r2, [r5, #24]
   16d40:	ldr	r3, [r5]
   16d44:	ldr	r6, [r5, #20]
   16d48:	ldr	lr, [r5, #16]
   16d4c:	ldr	ip, [r5, #12]
   16d50:	str	r2, [sp, #20]
   16d54:	ldr	r1, [r5, #8]
   16d58:	ldr	r2, [r5, #4]
   16d5c:	str	r6, [sp, #16]
   16d60:	stmib	sp, {r1, ip, lr}
   16d64:	mov	r1, #1
   16d68:	str	r2, [sp]
   16d6c:	mov	r2, r0
   16d70:	mov	r0, r4
   16d74:	bl	10f54 <__fprintf_chk@plt>
   16d78:	b	16bcc <_obstack_memory_used@@Base+0x41a8>
   16d7c:	mov	r2, #5
   16d80:	ldr	r1, [pc, #168]	; 16e30 <_obstack_memory_used@@Base+0x440c>
   16d84:	mov	r0, #0
   16d88:	bl	10df8 <dcgettext@plt>
   16d8c:	ldr	r1, [r5, #28]
   16d90:	ldr	r2, [r5, #24]
   16d94:	ldr	r3, [r5]
   16d98:	ldr	r6, [r5, #20]
   16d9c:	ldr	lr, [r5, #16]
   16da0:	str	r1, [sp, #24]
   16da4:	ldr	ip, [r5, #12]
   16da8:	str	r2, [sp, #20]
   16dac:	ldr	r1, [r5, #8]
   16db0:	ldr	r2, [r5, #4]
   16db4:	str	r6, [sp, #16]
   16db8:	stmib	sp, {r1, ip, lr}
   16dbc:	mov	r1, #1
   16dc0:	str	r2, [sp]
   16dc4:	mov	r2, r0
   16dc8:	mov	r0, r4
   16dcc:	bl	10f54 <__fprintf_chk@plt>
   16dd0:	b	16bcc <_obstack_memory_used@@Base+0x41a8>
   16dd4:	str	r3, [sp]
   16dd8:	mov	r1, #1
   16ddc:	mov	r3, r2
   16de0:	ldr	r2, [pc, #76]	; 16e34 <_obstack_memory_used@@Base+0x4410>
   16de4:	bl	10f54 <__fprintf_chk@plt>
   16de8:	b	16ad4 <_obstack_memory_used@@Base+0x40b0>
   16dec:	mov	r2, #5
   16df0:	ldr	r1, [pc, #64]	; 16e38 <_obstack_memory_used@@Base+0x4414>
   16df4:	b	16b78 <_obstack_memory_used@@Base+0x4154>
   16df8:	andeq	r9, r1, ip, asr pc
   16dfc:	andeq	r9, r1, r0, ror pc
   16e00:	andeq	r0, r0, r6, ror #15
   16e04:	andeq	sl, r1, r8, asr #4
   16e08:	andeq	r9, r1, r4, ror pc
   16e0c:	andeq	sl, r1, r0, lsr #32
   16e10:	andeq	sl, r1, r0, asr r1
   16e14:	andeq	sl, r1, r4, asr #32
   16e18:	andeq	sl, r1, r4, asr r0
   16e1c:	andeq	sl, r1, ip, rrx
   16e20:	andeq	sl, r1, r8, lsl #1
   16e24:	andeq	sl, r1, r8, lsr #1
   16e28:	andeq	sl, r1, ip, asr #1
   16e2c:	strdeq	sl, [r1], -r4
   16e30:	andeq	sl, r1, r0, lsr #2
   16e34:	andeq	r9, r1, r8, ror #30
   16e38:	andeq	sl, r1, r4, lsl #3
   16e3c:	push	{r4, r5, lr}
   16e40:	sub	sp, sp, #12
   16e44:	ldr	r5, [sp, #24]
   16e48:	ldr	ip, [r5]
   16e4c:	cmp	ip, #0
   16e50:	beq	16e6c <_obstack_memory_used@@Base+0x4448>
   16e54:	mov	lr, r5
   16e58:	mov	ip, #0
   16e5c:	ldr	r4, [lr, #4]!
   16e60:	add	ip, ip, #1
   16e64:	cmp	r4, #0
   16e68:	bne	16e5c <_obstack_memory_used@@Base+0x4438>
   16e6c:	stm	sp, {r5, ip}
   16e70:	bl	16aa4 <_obstack_memory_used@@Base+0x4080>
   16e74:	add	sp, sp, #12
   16e78:	pop	{r4, r5, pc}
   16e7c:	push	{r4, r5, lr}
   16e80:	sub	sp, sp, #76	; 0x4c
   16e84:	mov	r5, r0
   16e88:	ldr	ip, [sp, #88]	; 0x58
   16e8c:	ldr	r0, [ip]
   16e90:	cmp	r0, #0
   16e94:	str	r0, [sp, #32]
   16e98:	beq	1726c <_obstack_memory_used@@Base+0x4848>
   16e9c:	ldr	r0, [ip, #4]
   16ea0:	cmp	r0, #0
   16ea4:	str	r0, [sp, #36]	; 0x24
   16ea8:	beq	17274 <_obstack_memory_used@@Base+0x4850>
   16eac:	ldr	r0, [ip, #8]
   16eb0:	cmp	r0, #0
   16eb4:	str	r0, [sp, #40]	; 0x28
   16eb8:	beq	1727c <_obstack_memory_used@@Base+0x4858>
   16ebc:	ldr	r0, [ip, #12]
   16ec0:	cmp	r0, #0
   16ec4:	str	r0, [sp, #44]	; 0x2c
   16ec8:	beq	17284 <_obstack_memory_used@@Base+0x4860>
   16ecc:	ldr	r0, [ip, #16]
   16ed0:	cmp	r0, #0
   16ed4:	str	r0, [sp, #48]	; 0x30
   16ed8:	beq	1728c <_obstack_memory_used@@Base+0x4868>
   16edc:	ldr	r0, [ip, #20]
   16ee0:	cmp	r0, #0
   16ee4:	str	r0, [sp, #52]	; 0x34
   16ee8:	beq	17294 <_obstack_memory_used@@Base+0x4870>
   16eec:	ldr	r0, [ip, #24]
   16ef0:	cmp	r0, #0
   16ef4:	str	r0, [sp, #56]	; 0x38
   16ef8:	beq	1729c <_obstack_memory_used@@Base+0x4878>
   16efc:	ldr	r0, [ip, #28]
   16f00:	cmp	r0, #0
   16f04:	str	r0, [sp, #60]	; 0x3c
   16f08:	beq	172a4 <_obstack_memory_used@@Base+0x4880>
   16f0c:	ldr	r0, [ip, #32]
   16f10:	cmp	r0, #0
   16f14:	str	r0, [sp, #64]	; 0x40
   16f18:	beq	172ac <_obstack_memory_used@@Base+0x4888>
   16f1c:	ldr	r0, [ip, #36]	; 0x24
   16f20:	cmp	r0, #0
   16f24:	movne	r4, #10
   16f28:	moveq	r4, #9
   16f2c:	cmp	r1, #0
   16f30:	beq	17244 <_obstack_memory_used@@Base+0x4820>
   16f34:	stm	sp, {r2, r3}
   16f38:	mov	r0, r5
   16f3c:	mov	r3, r1
   16f40:	ldr	r2, [pc, #876]	; 172b4 <_obstack_memory_used@@Base+0x4890>
   16f44:	mov	r1, #1
   16f48:	bl	10f54 <__fprintf_chk@plt>
   16f4c:	mov	r2, #5
   16f50:	ldr	r1, [pc, #864]	; 172b8 <_obstack_memory_used@@Base+0x4894>
   16f54:	mov	r0, #0
   16f58:	bl	10df8 <dcgettext@plt>
   16f5c:	ldr	r3, [pc, #856]	; 172bc <_obstack_memory_used@@Base+0x4898>
   16f60:	ldr	r2, [pc, #856]	; 172c0 <_obstack_memory_used@@Base+0x489c>
   16f64:	str	r3, [sp]
   16f68:	mov	r1, #1
   16f6c:	mov	r3, r0
   16f70:	mov	r0, r5
   16f74:	bl	10f54 <__fprintf_chk@plt>
   16f78:	mov	r1, r5
   16f7c:	mov	r0, #10
   16f80:	bl	10dec <fputc_unlocked@plt>
   16f84:	mov	r2, #5
   16f88:	ldr	r1, [pc, #820]	; 172c4 <_obstack_memory_used@@Base+0x48a0>
   16f8c:	mov	r0, #0
   16f90:	bl	10df8 <dcgettext@plt>
   16f94:	mov	r1, #1
   16f98:	ldr	r3, [pc, #808]	; 172c8 <_obstack_memory_used@@Base+0x48a4>
   16f9c:	mov	r2, r0
   16fa0:	mov	r0, r5
   16fa4:	bl	10f54 <__fprintf_chk@plt>
   16fa8:	mov	r1, r5
   16fac:	mov	r0, #10
   16fb0:	bl	10dec <fputc_unlocked@plt>
   16fb4:	cmp	r4, #9
   16fb8:	ldrls	pc, [pc, r4, lsl #2]
   16fbc:	b	17260 <_obstack_memory_used@@Base+0x483c>
   16fc0:	andeq	r7, r1, r4, asr #32
   16fc4:	andeq	r7, r1, ip, asr #32
   16fc8:	andeq	r7, r1, r8, ror r0
   16fcc:	andeq	r7, r1, ip, lsr #1
   16fd0:	andeq	r7, r1, r4, ror #1
   16fd4:	andeq	r7, r1, r0, lsr #2
   16fd8:	andeq	r7, r1, ip, asr r1
   16fdc:	andeq	r7, r1, r0, lsr #3
   16fe0:	andeq	r7, r1, ip, ror #3
   16fe4:	andeq	r6, r1, r8, ror #31
   16fe8:	ldr	r1, [pc, #732]	; 172cc <_obstack_memory_used@@Base+0x48a8>
   16fec:	mov	r2, #5
   16ff0:	mov	r0, #0
   16ff4:	bl	10df8 <dcgettext@plt>
   16ff8:	ldr	ip, [sp, #64]	; 0x40
   16ffc:	ldr	r1, [sp, #60]	; 0x3c
   17000:	ldr	r2, [sp, #56]	; 0x38
   17004:	ldr	lr, [sp, #48]	; 0x30
   17008:	str	ip, [sp, #28]
   1700c:	str	r1, [sp, #24]
   17010:	ldr	ip, [sp, #44]	; 0x2c
   17014:	ldr	r1, [sp, #40]	; 0x28
   17018:	ldr	r4, [sp, #52]	; 0x34
   1701c:	str	r2, [sp, #20]
   17020:	ldr	r2, [sp, #36]	; 0x24
   17024:	stmib	sp, {r1, ip, lr}
   17028:	mov	r1, #1
   1702c:	str	r2, [sp]
   17030:	ldr	r3, [sp, #32]
   17034:	str	r4, [sp, #16]
   17038:	mov	r2, r0
   1703c:	mov	r0, r5
   17040:	bl	10f54 <__fprintf_chk@plt>
   17044:	add	sp, sp, #76	; 0x4c
   17048:	pop	{r4, r5, pc}
   1704c:	mov	r2, #5
   17050:	ldr	r1, [pc, #632]	; 172d0 <_obstack_memory_used@@Base+0x48ac>
   17054:	mov	r0, #0
   17058:	bl	10df8 <dcgettext@plt>
   1705c:	ldr	r3, [sp, #32]
   17060:	mov	r1, #1
   17064:	mov	r2, r0
   17068:	mov	r0, r5
   1706c:	add	sp, sp, #76	; 0x4c
   17070:	pop	{r4, r5, lr}
   17074:	b	10f54 <__fprintf_chk@plt>
   17078:	mov	r2, #5
   1707c:	ldr	r1, [pc, #592]	; 172d4 <_obstack_memory_used@@Base+0x48b0>
   17080:	mov	r0, #0
   17084:	bl	10df8 <dcgettext@plt>
   17088:	ldr	r2, [sp, #36]	; 0x24
   1708c:	ldr	r3, [sp, #32]
   17090:	str	r2, [sp, #88]	; 0x58
   17094:	mov	r1, #1
   17098:	mov	r2, r0
   1709c:	mov	r0, r5
   170a0:	add	sp, sp, #76	; 0x4c
   170a4:	pop	{r4, r5, lr}
   170a8:	b	10f54 <__fprintf_chk@plt>
   170ac:	mov	r2, #5
   170b0:	ldr	r1, [pc, #544]	; 172d8 <_obstack_memory_used@@Base+0x48b4>
   170b4:	mov	r0, #0
   170b8:	bl	10df8 <dcgettext@plt>
   170bc:	ldr	r1, [sp, #40]	; 0x28
   170c0:	ldr	r2, [sp, #36]	; 0x24
   170c4:	str	r1, [sp, #4]
   170c8:	str	r2, [sp]
   170cc:	ldr	r3, [sp, #32]
   170d0:	mov	r1, #1
   170d4:	mov	r2, r0
   170d8:	mov	r0, r5
   170dc:	bl	10f54 <__fprintf_chk@plt>
   170e0:	b	17044 <_obstack_memory_used@@Base+0x4620>
   170e4:	mov	r2, #5
   170e8:	ldr	r1, [pc, #492]	; 172dc <_obstack_memory_used@@Base+0x48b8>
   170ec:	mov	r0, #0
   170f0:	bl	10df8 <dcgettext@plt>
   170f4:	ldr	r1, [sp, #40]	; 0x28
   170f8:	ldr	ip, [sp, #44]	; 0x2c
   170fc:	ldr	r2, [sp, #36]	; 0x24
   17100:	ldr	r3, [sp, #32]
   17104:	stmib	sp, {r1, ip}
   17108:	str	r2, [sp]
   1710c:	mov	r1, #1
   17110:	mov	r2, r0
   17114:	mov	r0, r5
   17118:	bl	10f54 <__fprintf_chk@plt>
   1711c:	b	17044 <_obstack_memory_used@@Base+0x4620>
   17120:	mov	r2, #5
   17124:	ldr	r1, [pc, #436]	; 172e0 <_obstack_memory_used@@Base+0x48bc>
   17128:	mov	r0, #0
   1712c:	bl	10df8 <dcgettext@plt>
   17130:	add	r1, sp, #40	; 0x28
   17134:	ldr	r2, [sp, #36]	; 0x24
   17138:	ldm	r1, {r1, ip, lr}
   1713c:	ldr	r3, [sp, #32]
   17140:	str	r2, [sp]
   17144:	stmib	sp, {r1, ip, lr}
   17148:	mov	r1, #1
   1714c:	mov	r2, r0
   17150:	mov	r0, r5
   17154:	bl	10f54 <__fprintf_chk@plt>
   17158:	b	17044 <_obstack_memory_used@@Base+0x4620>
   1715c:	mov	r2, #5
   17160:	ldr	r1, [pc, #380]	; 172e4 <_obstack_memory_used@@Base+0x48c0>
   17164:	mov	r0, #0
   17168:	bl	10df8 <dcgettext@plt>
   1716c:	add	r1, sp, #40	; 0x28
   17170:	ldr	r2, [sp, #36]	; 0x24
   17174:	ldm	r1, {r1, ip, lr}
   17178:	ldr	r4, [sp, #52]	; 0x34
   1717c:	str	r2, [sp]
   17180:	stmib	sp, {r1, ip, lr}
   17184:	mov	r1, #1
   17188:	ldr	r3, [sp, #32]
   1718c:	str	r4, [sp, #16]
   17190:	mov	r2, r0
   17194:	mov	r0, r5
   17198:	bl	10f54 <__fprintf_chk@plt>
   1719c:	b	17044 <_obstack_memory_used@@Base+0x4620>
   171a0:	mov	r2, #5
   171a4:	ldr	r1, [pc, #316]	; 172e8 <_obstack_memory_used@@Base+0x48c4>
   171a8:	mov	r0, #0
   171ac:	bl	10df8 <dcgettext@plt>
   171b0:	add	r1, sp, #40	; 0x28
   171b4:	ldr	r2, [sp, #56]	; 0x38
   171b8:	ldm	r1, {r1, ip, lr}
   171bc:	ldr	r4, [sp, #52]	; 0x34
   171c0:	str	r2, [sp, #20]
   171c4:	ldr	r2, [sp, #36]	; 0x24
   171c8:	stmib	sp, {r1, ip, lr}
   171cc:	mov	r1, #1
   171d0:	str	r2, [sp]
   171d4:	ldr	r3, [sp, #32]
   171d8:	str	r4, [sp, #16]
   171dc:	mov	r2, r0
   171e0:	mov	r0, r5
   171e4:	bl	10f54 <__fprintf_chk@plt>
   171e8:	b	17044 <_obstack_memory_used@@Base+0x4620>
   171ec:	mov	r2, #5
   171f0:	ldr	r1, [pc, #244]	; 172ec <_obstack_memory_used@@Base+0x48c8>
   171f4:	mov	r0, #0
   171f8:	bl	10df8 <dcgettext@plt>
   171fc:	ldr	r1, [sp, #60]	; 0x3c
   17200:	ldr	r2, [sp, #56]	; 0x38
   17204:	ldr	lr, [sp, #48]	; 0x30
   17208:	ldr	ip, [sp, #44]	; 0x2c
   1720c:	str	r1, [sp, #24]
   17210:	ldr	r1, [sp, #40]	; 0x28
   17214:	ldr	r4, [sp, #52]	; 0x34
   17218:	str	r2, [sp, #20]
   1721c:	ldr	r2, [sp, #36]	; 0x24
   17220:	stmib	sp, {r1, ip, lr}
   17224:	mov	r1, #1
   17228:	str	r2, [sp]
   1722c:	ldr	r3, [sp, #32]
   17230:	str	r4, [sp, #16]
   17234:	mov	r2, r0
   17238:	mov	r0, r5
   1723c:	bl	10f54 <__fprintf_chk@plt>
   17240:	b	17044 <_obstack_memory_used@@Base+0x4620>
   17244:	str	r3, [sp]
   17248:	mov	r1, #1
   1724c:	mov	r3, r2
   17250:	mov	r0, r5
   17254:	ldr	r2, [pc, #148]	; 172f0 <_obstack_memory_used@@Base+0x48cc>
   17258:	bl	10f54 <__fprintf_chk@plt>
   1725c:	b	16f4c <_obstack_memory_used@@Base+0x4528>
   17260:	mov	r2, #5
   17264:	ldr	r1, [pc, #136]	; 172f4 <_obstack_memory_used@@Base+0x48d0>
   17268:	b	16ff0 <_obstack_memory_used@@Base+0x45cc>
   1726c:	mov	r4, r0
   17270:	b	16f2c <_obstack_memory_used@@Base+0x4508>
   17274:	mov	r4, #1
   17278:	b	16f2c <_obstack_memory_used@@Base+0x4508>
   1727c:	mov	r4, #2
   17280:	b	16f2c <_obstack_memory_used@@Base+0x4508>
   17284:	mov	r4, #3
   17288:	b	16f2c <_obstack_memory_used@@Base+0x4508>
   1728c:	mov	r4, #4
   17290:	b	16f2c <_obstack_memory_used@@Base+0x4508>
   17294:	mov	r4, #5
   17298:	b	16f2c <_obstack_memory_used@@Base+0x4508>
   1729c:	mov	r4, #6
   172a0:	b	16f2c <_obstack_memory_used@@Base+0x4508>
   172a4:	mov	r4, #7
   172a8:	b	16f2c <_obstack_memory_used@@Base+0x4508>
   172ac:	mov	r4, #8
   172b0:	b	16f2c <_obstack_memory_used@@Base+0x4508>
   172b4:	andeq	r9, r1, ip, asr pc
   172b8:	andeq	r9, r1, r0, ror pc
   172bc:	andeq	r0, r0, r6, ror #15
   172c0:	andeq	sl, r1, r8, asr #4
   172c4:	andeq	r9, r1, r4, ror pc
   172c8:	andeq	sl, r1, r0, lsr #32
   172cc:	andeq	sl, r1, r0, asr r1
   172d0:	andeq	sl, r1, r4, asr #32
   172d4:	andeq	sl, r1, r4, asr r0
   172d8:	andeq	sl, r1, ip, rrx
   172dc:	andeq	sl, r1, r8, lsl #1
   172e0:	andeq	sl, r1, r8, lsr #1
   172e4:	andeq	sl, r1, ip, asr #1
   172e8:	strdeq	sl, [r1], -r4
   172ec:	andeq	sl, r1, r0, lsr #2
   172f0:	andeq	r9, r1, r8, ror #30
   172f4:	andeq	sl, r1, r4, lsl #3
   172f8:	push	{r3}		; (str r3, [sp, #-4]!)
   172fc:	push	{lr}		; (str lr, [sp, #-4]!)
   17300:	sub	sp, sp, #56	; 0x38
   17304:	add	r3, sp, #64	; 0x40
   17308:	ldr	ip, [sp, #64]	; 0x40
   1730c:	str	r3, [sp, #12]
   17310:	cmp	ip, #0
   17314:	str	ip, [sp, #16]
   17318:	beq	173b0 <_obstack_memory_used@@Base+0x498c>
   1731c:	ldr	ip, [sp, #68]	; 0x44
   17320:	cmp	ip, #0
   17324:	str	ip, [sp, #20]
   17328:	beq	173d0 <_obstack_memory_used@@Base+0x49ac>
   1732c:	ldr	ip, [sp, #72]	; 0x48
   17330:	cmp	ip, #0
   17334:	str	ip, [sp, #24]
   17338:	beq	173d8 <_obstack_memory_used@@Base+0x49b4>
   1733c:	ldr	ip, [sp, #76]	; 0x4c
   17340:	cmp	ip, #0
   17344:	str	ip, [sp, #28]
   17348:	beq	173e0 <_obstack_memory_used@@Base+0x49bc>
   1734c:	ldr	ip, [sp, #80]	; 0x50
   17350:	cmp	ip, #0
   17354:	str	ip, [sp, #32]
   17358:	beq	173e8 <_obstack_memory_used@@Base+0x49c4>
   1735c:	ldr	ip, [sp, #84]	; 0x54
   17360:	cmp	ip, #0
   17364:	str	ip, [sp, #36]	; 0x24
   17368:	beq	173f0 <_obstack_memory_used@@Base+0x49cc>
   1736c:	ldr	ip, [sp, #88]	; 0x58
   17370:	cmp	ip, #0
   17374:	str	ip, [sp, #40]	; 0x28
   17378:	beq	173f8 <_obstack_memory_used@@Base+0x49d4>
   1737c:	ldr	ip, [sp, #92]	; 0x5c
   17380:	cmp	ip, #0
   17384:	str	ip, [sp, #44]	; 0x2c
   17388:	beq	17400 <_obstack_memory_used@@Base+0x49dc>
   1738c:	ldr	ip, [sp, #96]	; 0x60
   17390:	cmp	ip, #0
   17394:	str	ip, [sp, #48]	; 0x30
   17398:	beq	17408 <_obstack_memory_used@@Base+0x49e4>
   1739c:	ldr	ip, [sp, #100]	; 0x64
   173a0:	cmp	ip, #0
   173a4:	str	ip, [sp, #52]	; 0x34
   173a8:	movne	ip, #10
   173ac:	moveq	ip, #9
   173b0:	add	r3, sp, #16
   173b4:	stm	sp, {r3, ip}
   173b8:	ldr	r3, [sp, #60]	; 0x3c
   173bc:	bl	16aa4 <_obstack_memory_used@@Base+0x4080>
   173c0:	add	sp, sp, #56	; 0x38
   173c4:	pop	{lr}		; (ldr lr, [sp], #4)
   173c8:	add	sp, sp, #4
   173cc:	bx	lr
   173d0:	mov	ip, #1
   173d4:	b	173b0 <_obstack_memory_used@@Base+0x498c>
   173d8:	mov	ip, #2
   173dc:	b	173b0 <_obstack_memory_used@@Base+0x498c>
   173e0:	mov	ip, #3
   173e4:	b	173b0 <_obstack_memory_used@@Base+0x498c>
   173e8:	mov	ip, #4
   173ec:	b	173b0 <_obstack_memory_used@@Base+0x498c>
   173f0:	mov	ip, #5
   173f4:	b	173b0 <_obstack_memory_used@@Base+0x498c>
   173f8:	mov	ip, #6
   173fc:	b	173b0 <_obstack_memory_used@@Base+0x498c>
   17400:	mov	ip, #7
   17404:	b	173b0 <_obstack_memory_used@@Base+0x498c>
   17408:	mov	ip, #8
   1740c:	b	173b0 <_obstack_memory_used@@Base+0x498c>
   17410:	ldr	r3, [pc, #116]	; 1748c <_obstack_memory_used@@Base+0x4a68>
   17414:	push	{r4, lr}
   17418:	mov	r0, #10
   1741c:	ldr	r1, [r3]
   17420:	bl	10dec <fputc_unlocked@plt>
   17424:	mov	r2, #5
   17428:	ldr	r1, [pc, #96]	; 17490 <_obstack_memory_used@@Base+0x4a6c>
   1742c:	mov	r0, #0
   17430:	bl	10df8 <dcgettext@plt>
   17434:	ldr	r2, [pc, #88]	; 17494 <_obstack_memory_used@@Base+0x4a70>
   17438:	mov	r1, r0
   1743c:	mov	r0, #1
   17440:	bl	10f3c <__printf_chk@plt>
   17444:	mov	r2, #5
   17448:	ldr	r1, [pc, #72]	; 17498 <_obstack_memory_used@@Base+0x4a74>
   1744c:	mov	r0, #0
   17450:	bl	10df8 <dcgettext@plt>
   17454:	ldr	r3, [pc, #64]	; 1749c <_obstack_memory_used@@Base+0x4a78>
   17458:	ldr	r2, [pc, #64]	; 174a0 <_obstack_memory_used@@Base+0x4a7c>
   1745c:	mov	r1, r0
   17460:	mov	r0, #1
   17464:	bl	10f3c <__printf_chk@plt>
   17468:	mov	r2, #5
   1746c:	ldr	r1, [pc, #48]	; 174a4 <_obstack_memory_used@@Base+0x4a80>
   17470:	mov	r0, #0
   17474:	bl	10df8 <dcgettext@plt>
   17478:	ldr	r2, [pc, #40]	; 174a8 <_obstack_memory_used@@Base+0x4a84>
   1747c:	pop	{r4, lr}
   17480:	mov	r1, r0
   17484:	mov	r0, #1
   17488:	b	10f3c <__printf_chk@plt>
   1748c:	andeq	fp, r2, r4, asr r1
   17490:	andeq	sl, r1, r0, asr #3
   17494:	ldrdeq	sl, [r1], -r4
   17498:	andeq	sl, r1, ip, ror #3
   1749c:	andeq	r9, r1, r4, ror r9
   174a0:	muleq	r1, ip, r9
   174a4:	andeq	sl, r1, r0, lsl #4
   174a8:	andeq	sl, r1, r8, lsr #4
   174ac:	push	{r4, r5, r6, lr}
   174b0:	mov	r6, r0
   174b4:	mov	r5, r1
   174b8:	mov	r4, r2
   174bc:	bl	17d3c <_obstack_memory_used@@Base+0x5318>
   174c0:	cmp	r0, #0
   174c4:	popne	{r4, r5, r6, pc}
   174c8:	cmp	r6, #0
   174cc:	beq	174dc <_obstack_memory_used@@Base+0x4ab8>
   174d0:	cmp	r5, #0
   174d4:	cmpne	r4, #0
   174d8:	popeq	{r4, r5, r6, pc}
   174dc:	bl	17b28 <_obstack_memory_used@@Base+0x5104>
   174e0:	push	{r4, lr}
   174e4:	bl	17bb0 <_obstack_memory_used@@Base+0x518c>
   174e8:	cmp	r0, #0
   174ec:	popne	{r4, pc}
   174f0:	bl	17b28 <_obstack_memory_used@@Base+0x5104>
   174f4:	push	{r4, lr}
   174f8:	bl	17bb0 <_obstack_memory_used@@Base+0x518c>
   174fc:	cmp	r0, #0
   17500:	popne	{r4, pc}
   17504:	bl	17b28 <_obstack_memory_used@@Base+0x5104>
   17508:	push	{r4, lr}
   1750c:	bl	17bb0 <_obstack_memory_used@@Base+0x518c>
   17510:	cmp	r0, #0
   17514:	popne	{r4, pc}
   17518:	bl	17b28 <_obstack_memory_used@@Base+0x5104>
   1751c:	push	{r4, r5, r6, lr}
   17520:	mov	r5, r0
   17524:	mov	r4, r1
   17528:	bl	17bdc <_obstack_memory_used@@Base+0x51b8>
   1752c:	cmp	r0, #0
   17530:	popne	{r4, r5, r6, pc}
   17534:	adds	r4, r4, #0
   17538:	movne	r4, #1
   1753c:	cmp	r5, #0
   17540:	orreq	r4, r4, #1
   17544:	cmp	r4, #0
   17548:	popeq	{r4, r5, r6, pc}
   1754c:	bl	17b28 <_obstack_memory_used@@Base+0x5104>
   17550:	push	{r4, lr}
   17554:	cmp	r1, #0
   17558:	orreq	r1, r1, #1
   1755c:	bl	17bdc <_obstack_memory_used@@Base+0x51b8>
   17560:	cmp	r0, #0
   17564:	popne	{r4, pc}
   17568:	bl	17b28 <_obstack_memory_used@@Base+0x5104>
   1756c:	push	{r4, r5, r6, lr}
   17570:	mov	r6, r0
   17574:	mov	r5, r1
   17578:	mov	r4, r2
   1757c:	bl	17d3c <_obstack_memory_used@@Base+0x5318>
   17580:	cmp	r0, #0
   17584:	popne	{r4, r5, r6, pc}
   17588:	cmp	r6, #0
   1758c:	beq	1759c <_obstack_memory_used@@Base+0x4b78>
   17590:	cmp	r5, #0
   17594:	cmpne	r4, #0
   17598:	popeq	{r4, r5, r6, pc}
   1759c:	bl	17b28 <_obstack_memory_used@@Base+0x5104>
   175a0:	cmp	r2, #0
   175a4:	cmpne	r1, #0
   175a8:	moveq	r2, #1
   175ac:	moveq	r1, r2
   175b0:	push	{r4, lr}
   175b4:	bl	17d3c <_obstack_memory_used@@Base+0x5318>
   175b8:	cmp	r0, #0
   175bc:	popne	{r4, pc}
   175c0:	bl	17b28 <_obstack_memory_used@@Base+0x5104>
   175c4:	push	{r4, lr}
   175c8:	mov	r2, r1
   175cc:	mov	r1, r0
   175d0:	mov	r0, #0
   175d4:	bl	17d3c <_obstack_memory_used@@Base+0x5318>
   175d8:	cmp	r0, #0
   175dc:	popne	{r4, pc}
   175e0:	bl	17b28 <_obstack_memory_used@@Base+0x5104>
   175e4:	cmp	r1, #0
   175e8:	cmpne	r0, #0
   175ec:	moveq	r2, #1
   175f0:	movne	r2, r1
   175f4:	moveq	r1, r2
   175f8:	movne	r1, r0
   175fc:	push	{r4, lr}
   17600:	mov	r0, #0
   17604:	bl	17d3c <_obstack_memory_used@@Base+0x5318>
   17608:	cmp	r0, #0
   1760c:	popne	{r4, pc}
   17610:	bl	17b28 <_obstack_memory_used@@Base+0x5104>
   17614:	cmp	r0, #0
   17618:	push	{r4, r5, r6, lr}
   1761c:	mov	r5, r1
   17620:	ldr	r4, [r1]
   17624:	beq	17660 <_obstack_memory_used@@Base+0x4c3c>
   17628:	lsr	r2, r4, #1
   1762c:	add	r3, r2, #1
   17630:	mvn	r3, r3
   17634:	cmp	r4, r3
   17638:	bhi	1767c <_obstack_memory_used@@Base+0x4c58>
   1763c:	add	r4, r4, #1
   17640:	add	r4, r4, r2
   17644:	mov	r1, r4
   17648:	mov	r2, #1
   1764c:	bl	17d3c <_obstack_memory_used@@Base+0x5318>
   17650:	cmp	r0, #0
   17654:	beq	17680 <_obstack_memory_used@@Base+0x4c5c>
   17658:	str	r4, [r5]
   1765c:	pop	{r4, r5, r6, pc}
   17660:	cmp	r4, #0
   17664:	moveq	r4, #64	; 0x40
   17668:	mov	r1, r4
   1766c:	mov	r2, #1
   17670:	bl	17d3c <_obstack_memory_used@@Base+0x5318>
   17674:	cmp	r0, #0
   17678:	bne	17658 <_obstack_memory_used@@Base+0x4c34>
   1767c:	bl	17b28 <_obstack_memory_used@@Base+0x5104>
   17680:	cmp	r4, #0
   17684:	bne	1767c <_obstack_memory_used@@Base+0x4c58>
   17688:	str	r4, [r5]
   1768c:	pop	{r4, r5, r6, pc}
   17690:	cmp	r0, #0
   17694:	push	{r4, r5, r6, lr}
   17698:	mov	r5, r1
   1769c:	ldr	r4, [r1]
   176a0:	mov	r6, r2
   176a4:	beq	176e8 <_obstack_memory_used@@Base+0x4cc4>
   176a8:	lsr	r1, r4, #1
   176ac:	add	r3, r1, #1
   176b0:	mvn	r3, r3
   176b4:	cmp	r4, r3
   176b8:	bhi	17720 <_obstack_memory_used@@Base+0x4cfc>
   176bc:	add	r4, r4, #1
   176c0:	add	r4, r4, r1
   176c4:	mov	r1, r4
   176c8:	bl	17d3c <_obstack_memory_used@@Base+0x5318>
   176cc:	cmp	r0, #0
   176d0:	bne	176e0 <_obstack_memory_used@@Base+0x4cbc>
   176d4:	cmp	r4, #0
   176d8:	cmpne	r6, #0
   176dc:	bne	17720 <_obstack_memory_used@@Base+0x4cfc>
   176e0:	str	r4, [r5]
   176e4:	pop	{r4, r5, r6, pc}
   176e8:	cmp	r4, #0
   176ec:	bne	17708 <_obstack_memory_used@@Base+0x4ce4>
   176f0:	mov	r1, r2
   176f4:	mov	r0, #64	; 0x40
   176f8:	bl	17e7c <_obstack_memory_used@@Base+0x5458>
   176fc:	cmp	r0, #0
   17700:	movne	r4, r0
   17704:	addeq	r4, r0, #1
   17708:	mov	r2, r6
   1770c:	mov	r1, r4
   17710:	mov	r0, #0
   17714:	bl	17d3c <_obstack_memory_used@@Base+0x5318>
   17718:	cmp	r0, #0
   1771c:	bne	176e0 <_obstack_memory_used@@Base+0x4cbc>
   17720:	bl	17b28 <_obstack_memory_used@@Base+0x5104>
   17724:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17728:	sub	sp, sp, #12
   1772c:	ldr	r6, [r1]
   17730:	mov	r8, r1
   17734:	mov	r9, r0
   17738:	asrs	r4, r6, #1
   1773c:	mov	sl, r2
   17740:	mov	fp, r3
   17744:	ldr	r7, [sp, #48]	; 0x30
   17748:	bmi	178c4 <_obstack_memory_used@@Base+0x4ea0>
   1774c:	mvn	r1, #-2147483648	; 0x80000000
   17750:	sub	r1, r1, r4
   17754:	cmp	r6, r1
   17758:	movle	r1, #0
   1775c:	movgt	r1, #1
   17760:	mvn	r3, fp
   17764:	cmp	r1, #0
   17768:	addeq	r4, r4, r6
   1776c:	mvnne	r4, #-2147483648	; 0x80000000
   17770:	lsr	r3, r3, #31
   17774:	cmp	fp, r4
   17778:	movge	r2, #0
   1777c:	andlt	r2, r3, #1
   17780:	cmp	r2, #0
   17784:	beq	17874 <_obstack_memory_used@@Base+0x4e50>
   17788:	cmp	r7, #0
   1778c:	blt	1795c <_obstack_memory_used@@Base+0x4f38>
   17790:	bne	17954 <_obstack_memory_used@@Base+0x4f30>
   17794:	mov	r5, #64	; 0x40
   17798:	mov	r1, r7
   1779c:	mov	r0, r5
   177a0:	str	r3, [sp, #4]
   177a4:	bl	18088 <_obstack_memory_used@@Base+0x5664>
   177a8:	mov	r1, r7
   177ac:	mov	r4, r0
   177b0:	mov	r0, r5
   177b4:	bl	182a8 <_obstack_memory_used@@Base+0x5884>
   177b8:	ldr	r3, [sp, #4]
   177bc:	sub	r5, r5, r1
   177c0:	cmp	r9, #0
   177c4:	sub	r2, r4, r6
   177c8:	streq	r9, [r8]
   177cc:	cmp	r2, sl
   177d0:	bge	17854 <_obstack_memory_used@@Base+0x4e30>
   177d4:	cmp	sl, #0
   177d8:	blt	178f4 <_obstack_memory_used@@Base+0x4ed0>
   177dc:	cmp	r6, #0
   177e0:	blt	17800 <_obstack_memory_used@@Base+0x4ddc>
   177e4:	mvn	r2, #-2147483648	; 0x80000000
   177e8:	sub	r2, r2, sl
   177ec:	cmp	r6, r2
   177f0:	movle	r2, #0
   177f4:	movgt	r2, #1
   177f8:	cmp	r2, #0
   177fc:	bne	178f0 <_obstack_memory_used@@Base+0x4ecc>
   17800:	add	r6, r6, sl
   17804:	cmp	fp, r6
   17808:	movge	r3, #0
   1780c:	andlt	r3, r3, #1
   17810:	cmp	r3, #0
   17814:	mov	r4, r6
   17818:	bne	178f0 <_obstack_memory_used@@Base+0x4ecc>
   1781c:	cmp	r7, #0
   17820:	blt	17908 <_obstack_memory_used@@Base+0x4ee4>
   17824:	beq	17850 <_obstack_memory_used@@Base+0x4e2c>
   17828:	cmp	r6, #0
   1782c:	blt	179ac <_obstack_memory_used@@Base+0x4f88>
   17830:	mov	r1, r7
   17834:	mvn	r0, #-2147483648	; 0x80000000
   17838:	bl	18088 <_obstack_memory_used@@Base+0x5664>
   1783c:	cmp	r6, r0
   17840:	movle	r0, #0
   17844:	movgt	r0, #1
   17848:	cmp	r0, #0
   1784c:	bne	178f0 <_obstack_memory_used@@Base+0x4ecc>
   17850:	mul	r5, r6, r7
   17854:	mov	r1, r5
   17858:	mov	r0, r9
   1785c:	bl	17bdc <_obstack_memory_used@@Base+0x51b8>
   17860:	cmp	r0, #0
   17864:	beq	178d8 <_obstack_memory_used@@Base+0x4eb4>
   17868:	str	r4, [r8]
   1786c:	add	sp, sp, #12
   17870:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17874:	cmp	r7, #0
   17878:	blt	17934 <_obstack_memory_used@@Base+0x4f10>
   1787c:	beq	17794 <_obstack_memory_used@@Base+0x4d70>
   17880:	cmp	r4, #0
   17884:	blt	17964 <_obstack_memory_used@@Base+0x4f40>
   17888:	mov	r1, r7
   1788c:	mvn	r0, #-2147483648	; 0x80000000
   17890:	str	r3, [sp, #4]
   17894:	bl	18088 <_obstack_memory_used@@Base+0x5664>
   17898:	ldr	r3, [sp, #4]
   1789c:	cmp	r0, r4
   178a0:	movge	r0, #0
   178a4:	movlt	r0, #1
   178a8:	cmp	r0, #0
   178ac:	mvnne	r5, #-2147483648	; 0x80000000
   178b0:	bne	17798 <_obstack_memory_used@@Base+0x4d74>
   178b4:	mul	r5, r7, r4
   178b8:	cmp	r5, #63	; 0x3f
   178bc:	bgt	177c0 <_obstack_memory_used@@Base+0x4d9c>
   178c0:	b	17794 <_obstack_memory_used@@Base+0x4d70>
   178c4:	rsb	r1, r4, #-2147483648	; 0x80000000
   178c8:	cmp	r6, r1
   178cc:	movge	r1, #0
   178d0:	movlt	r1, #1
   178d4:	b	17760 <_obstack_memory_used@@Base+0x4d3c>
   178d8:	adds	r5, r5, #0
   178dc:	movne	r5, #1
   178e0:	cmp	r9, #0
   178e4:	orreq	r5, r5, #1
   178e8:	cmp	r5, #0
   178ec:	beq	17868 <_obstack_memory_used@@Base+0x4e44>
   178f0:	bl	17b28 <_obstack_memory_used@@Base+0x5104>
   178f4:	rsb	r2, sl, #-2147483648	; 0x80000000
   178f8:	cmp	r6, r2
   178fc:	movge	r2, #0
   17900:	movlt	r2, #1
   17904:	b	177f8 <_obstack_memory_used@@Base+0x4dd4>
   17908:	cmp	r6, #0
   1790c:	blt	17990 <_obstack_memory_used@@Base+0x4f6c>
   17910:	cmn	r7, #1
   17914:	beq	17850 <_obstack_memory_used@@Base+0x4e2c>
   17918:	mov	r1, r7
   1791c:	mov	r0, #-2147483648	; 0x80000000
   17920:	bl	18088 <_obstack_memory_used@@Base+0x5664>
   17924:	cmp	r6, r0
   17928:	movle	r0, #0
   1792c:	movgt	r0, #1
   17930:	b	17848 <_obstack_memory_used@@Base+0x4e24>
   17934:	cmp	r4, #0
   17938:	blt	179d0 <_obstack_memory_used@@Base+0x4fac>
   1793c:	cmn	r7, #1
   17940:	beq	178b4 <_obstack_memory_used@@Base+0x4e90>
   17944:	str	r3, [sp, #4]
   17948:	mov	r1, r7
   1794c:	mov	r0, #-2147483648	; 0x80000000
   17950:	b	17894 <_obstack_memory_used@@Base+0x4e70>
   17954:	mov	r4, fp
   17958:	b	17888 <_obstack_memory_used@@Base+0x4e64>
   1795c:	mov	r4, fp
   17960:	b	1793c <_obstack_memory_used@@Base+0x4f18>
   17964:	cmn	r4, #1
   17968:	beq	178b4 <_obstack_memory_used@@Base+0x4e90>
   1796c:	mov	r1, r4
   17970:	mov	r0, #-2147483648	; 0x80000000
   17974:	str	r3, [sp, #4]
   17978:	bl	18088 <_obstack_memory_used@@Base+0x5664>
   1797c:	ldr	r3, [sp, #4]
   17980:	cmp	r7, r0
   17984:	movle	r0, #0
   17988:	movgt	r0, #1
   1798c:	b	178a8 <_obstack_memory_used@@Base+0x4e84>
   17990:	mov	r1, r7
   17994:	mvn	r0, #-2147483648	; 0x80000000
   17998:	bl	18088 <_obstack_memory_used@@Base+0x5664>
   1799c:	cmp	r6, r0
   179a0:	movge	r0, #0
   179a4:	movlt	r0, #1
   179a8:	b	17848 <_obstack_memory_used@@Base+0x4e24>
   179ac:	cmn	r6, #1
   179b0:	beq	17850 <_obstack_memory_used@@Base+0x4e2c>
   179b4:	mov	r1, r6
   179b8:	mov	r0, #-2147483648	; 0x80000000
   179bc:	bl	18088 <_obstack_memory_used@@Base+0x5664>
   179c0:	cmp	r7, r0
   179c4:	movle	r0, #0
   179c8:	movgt	r0, #1
   179cc:	b	17848 <_obstack_memory_used@@Base+0x4e24>
   179d0:	mov	r1, r7
   179d4:	mvn	r0, #-2147483648	; 0x80000000
   179d8:	str	r3, [sp, #4]
   179dc:	bl	18088 <_obstack_memory_used@@Base+0x5664>
   179e0:	ldr	r3, [sp, #4]
   179e4:	cmp	r0, r4
   179e8:	movle	r0, #0
   179ec:	movgt	r0, #1
   179f0:	b	178a8 <_obstack_memory_used@@Base+0x4e84>
   179f4:	push	{r4, lr}
   179f8:	mov	r1, #1
   179fc:	bl	17b68 <_obstack_memory_used@@Base+0x5144>
   17a00:	cmp	r0, #0
   17a04:	popne	{r4, pc}
   17a08:	bl	17b28 <_obstack_memory_used@@Base+0x5104>
   17a0c:	push	{r4, lr}
   17a10:	mov	r1, #1
   17a14:	bl	17b68 <_obstack_memory_used@@Base+0x5144>
   17a18:	cmp	r0, #0
   17a1c:	popne	{r4, pc}
   17a20:	bl	17b28 <_obstack_memory_used@@Base+0x5104>
   17a24:	push	{r4, lr}
   17a28:	bl	17b68 <_obstack_memory_used@@Base+0x5144>
   17a2c:	cmp	r0, #0
   17a30:	popne	{r4, pc}
   17a34:	bl	17b28 <_obstack_memory_used@@Base+0x5104>
   17a38:	push	{r4, lr}
   17a3c:	bl	17b68 <_obstack_memory_used@@Base+0x5144>
   17a40:	cmp	r0, #0
   17a44:	popne	{r4, pc}
   17a48:	bl	17b28 <_obstack_memory_used@@Base+0x5104>
   17a4c:	push	{r4, r5, r6, lr}
   17a50:	mov	r6, r0
   17a54:	mov	r0, r1
   17a58:	mov	r4, r1
   17a5c:	bl	17bb0 <_obstack_memory_used@@Base+0x518c>
   17a60:	subs	r5, r0, #0
   17a64:	beq	17a7c <_obstack_memory_used@@Base+0x5058>
   17a68:	mov	r2, r4
   17a6c:	mov	r1, r6
   17a70:	bl	10dbc <memcpy@plt>
   17a74:	mov	r0, r5
   17a78:	pop	{r4, r5, r6, pc}
   17a7c:	bl	17b28 <_obstack_memory_used@@Base+0x5104>
   17a80:	push	{r4, r5, r6, lr}
   17a84:	mov	r6, r0
   17a88:	mov	r0, r1
   17a8c:	mov	r4, r1
   17a90:	bl	17bb0 <_obstack_memory_used@@Base+0x518c>
   17a94:	subs	r5, r0, #0
   17a98:	beq	17ab0 <_obstack_memory_used@@Base+0x508c>
   17a9c:	mov	r2, r4
   17aa0:	mov	r1, r6
   17aa4:	bl	10dbc <memcpy@plt>
   17aa8:	mov	r0, r5
   17aac:	pop	{r4, r5, r6, pc}
   17ab0:	bl	17b28 <_obstack_memory_used@@Base+0x5104>
   17ab4:	push	{r4, r5, r6, lr}
   17ab8:	mov	r6, r0
   17abc:	add	r0, r1, #1
   17ac0:	mov	r4, r1
   17ac4:	bl	17bb0 <_obstack_memory_used@@Base+0x518c>
   17ac8:	subs	r5, r0, #0
   17acc:	beq	17aec <_obstack_memory_used@@Base+0x50c8>
   17ad0:	mov	r3, #0
   17ad4:	mov	r1, r6
   17ad8:	strb	r3, [r5, r4]
   17adc:	mov	r2, r4
   17ae0:	bl	10dbc <memcpy@plt>
   17ae4:	mov	r0, r5
   17ae8:	pop	{r4, r5, r6, pc}
   17aec:	bl	17b28 <_obstack_memory_used@@Base+0x5104>
   17af0:	push	{r4, r5, r6, lr}
   17af4:	mov	r6, r0
   17af8:	bl	10f0c <strlen@plt>
   17afc:	add	r4, r0, #1
   17b00:	mov	r0, r4
   17b04:	bl	17bb0 <_obstack_memory_used@@Base+0x518c>
   17b08:	subs	r5, r0, #0
   17b0c:	beq	17b24 <_obstack_memory_used@@Base+0x5100>
   17b10:	mov	r2, r4
   17b14:	mov	r1, r6
   17b18:	bl	10dbc <memcpy@plt>
   17b1c:	mov	r0, r5
   17b20:	pop	{r4, r5, r6, pc}
   17b24:	bl	17b28 <_obstack_memory_used@@Base+0x5104>
   17b28:	ldr	r3, [pc, #44]	; 17b5c <_obstack_memory_used@@Base+0x5138>
   17b2c:	push	{r4, lr}
   17b30:	mov	r2, #5
   17b34:	ldr	r1, [pc, #36]	; 17b60 <_obstack_memory_used@@Base+0x513c>
   17b38:	mov	r0, #0
   17b3c:	ldr	r4, [r3]
   17b40:	bl	10df8 <dcgettext@plt>
   17b44:	ldr	r2, [pc, #24]	; 17b64 <_obstack_memory_used@@Base+0x5140>
   17b48:	mov	r1, #0
   17b4c:	mov	r3, r0
   17b50:	mov	r0, r4
   17b54:	bl	10e70 <error@plt>
   17b58:	bl	10fb4 <abort@plt>
   17b5c:	andeq	fp, r2, ip, ror #1
   17b60:	andeq	r9, r1, ip, lsr #28
   17b64:	andeq	r9, r1, ip, lsl lr
   17b68:	cmp	r1, #0
   17b6c:	cmpne	r0, #0
   17b70:	moveq	r1, #1
   17b74:	moveq	r0, r1
   17b78:	umull	r2, r3, r0, r1
   17b7c:	adds	r3, r3, #0
   17b80:	movne	r3, #1
   17b84:	cmp	r2, #0
   17b88:	blt	17b98 <_obstack_memory_used@@Base+0x5174>
   17b8c:	cmp	r3, #0
   17b90:	bne	17b98 <_obstack_memory_used@@Base+0x5174>
   17b94:	b	10d5c <calloc@plt>
   17b98:	push	{r4, lr}
   17b9c:	bl	10f18 <__errno_location@plt>
   17ba0:	mov	r3, #12
   17ba4:	str	r3, [r0]
   17ba8:	mov	r0, #0
   17bac:	pop	{r4, pc}
   17bb0:	cmp	r0, #0
   17bb4:	moveq	r0, #1
   17bb8:	cmp	r0, #0
   17bbc:	blt	17bc4 <_obstack_memory_used@@Base+0x51a0>
   17bc0:	b	10eac <malloc@plt>
   17bc4:	push	{r4, lr}
   17bc8:	bl	10f18 <__errno_location@plt>
   17bcc:	mov	r3, #12
   17bd0:	str	r3, [r0]
   17bd4:	mov	r0, #0
   17bd8:	pop	{r4, pc}
   17bdc:	cmp	r0, #0
   17be0:	beq	17c04 <_obstack_memory_used@@Base+0x51e0>
   17be4:	cmp	r1, #0
   17be8:	push	{lr}		; (str lr, [sp, #-4]!)
   17bec:	sub	sp, sp, #12
   17bf0:	beq	17c0c <_obstack_memory_used@@Base+0x51e8>
   17bf4:	blt	17c24 <_obstack_memory_used@@Base+0x5200>
   17bf8:	add	sp, sp, #12
   17bfc:	pop	{lr}		; (ldr lr, [sp], #4)
   17c00:	b	10e10 <realloc@plt>
   17c04:	mov	r0, r1
   17c08:	b	17bb0 <_obstack_memory_used@@Base+0x518c>
   17c0c:	str	r1, [sp, #4]
   17c10:	bl	12310 <close@plt+0x1350>
   17c14:	ldr	r3, [sp, #4]
   17c18:	mov	r0, r3
   17c1c:	add	sp, sp, #12
   17c20:	pop	{pc}		; (ldr pc, [sp], #4)
   17c24:	bl	10f18 <__errno_location@plt>
   17c28:	mov	r2, #12
   17c2c:	mov	r3, #0
   17c30:	str	r2, [r0]
   17c34:	b	17c18 <_obstack_memory_used@@Base+0x51f4>
   17c38:	push	{r4, r5, r6, lr}
   17c3c:	mov	r4, r0
   17c40:	bl	10e58 <__fpending@plt>
   17c44:	ldr	r5, [r4]
   17c48:	and	r5, r5, #32
   17c4c:	mov	r6, r0
   17c50:	mov	r0, r4
   17c54:	bl	12210 <close@plt+0x1250>
   17c58:	cmp	r5, #0
   17c5c:	mov	r4, r0
   17c60:	bne	17c80 <_obstack_memory_used@@Base+0x525c>
   17c64:	cmp	r0, #0
   17c68:	beq	17c78 <_obstack_memory_used@@Base+0x5254>
   17c6c:	cmp	r6, #0
   17c70:	beq	17c9c <_obstack_memory_used@@Base+0x5278>
   17c74:	mvn	r4, #0
   17c78:	mov	r0, r4
   17c7c:	pop	{r4, r5, r6, pc}
   17c80:	cmp	r0, #0
   17c84:	bne	17c74 <_obstack_memory_used@@Base+0x5250>
   17c88:	bl	10f18 <__errno_location@plt>
   17c8c:	str	r4, [r0]
   17c90:	mvn	r4, #0
   17c94:	mov	r0, r4
   17c98:	pop	{r4, r5, r6, pc}
   17c9c:	bl	10f18 <__errno_location@plt>
   17ca0:	ldr	r4, [r0]
   17ca4:	subs	r4, r4, #9
   17ca8:	mvnne	r4, #0
   17cac:	mov	r0, r4
   17cb0:	pop	{r4, r5, r6, pc}
   17cb4:	push	{r4, lr}
   17cb8:	mov	r0, #14
   17cbc:	bl	10f90 <nl_langinfo@plt>
   17cc0:	cmp	r0, #0
   17cc4:	beq	17cdc <_obstack_memory_used@@Base+0x52b8>
   17cc8:	ldrb	r2, [r0]
   17ccc:	ldr	r3, [pc, #16]	; 17ce4 <_obstack_memory_used@@Base+0x52c0>
   17cd0:	cmp	r2, #0
   17cd4:	moveq	r0, r3
   17cd8:	pop	{r4, pc}
   17cdc:	ldr	r0, [pc]	; 17ce4 <_obstack_memory_used@@Base+0x52c0>
   17ce0:	pop	{r4, pc}
   17ce4:	andeq	sl, r1, r8, ror r2
   17ce8:	push	{r4, r5, r6, r7, lr}
   17cec:	subs	r6, r0, #0
   17cf0:	sub	sp, sp, #12
   17cf4:	addeq	r6, sp, #4
   17cf8:	mov	r0, r6
   17cfc:	mov	r5, r2
   17d00:	mov	r7, r1
   17d04:	bl	10e64 <mbrtowc@plt>
   17d08:	cmp	r5, #0
   17d0c:	cmnne	r0, #3
   17d10:	mov	r4, r0
   17d14:	bls	17d30 <_obstack_memory_used@@Base+0x530c>
   17d18:	mov	r0, #0
   17d1c:	bl	17d88 <_obstack_memory_used@@Base+0x5364>
   17d20:	cmp	r0, #0
   17d24:	moveq	r4, #1
   17d28:	ldrbeq	r3, [r7]
   17d2c:	streq	r3, [r6]
   17d30:	mov	r0, r4
   17d34:	add	sp, sp, #12
   17d38:	pop	{r4, r5, r6, r7, pc}
   17d3c:	push	{r4, r5, r6, lr}
   17d40:	subs	r4, r2, #0
   17d44:	mov	r6, r0
   17d48:	mov	r5, r1
   17d4c:	beq	17d78 <_obstack_memory_used@@Base+0x5354>
   17d50:	mov	r1, r4
   17d54:	mvn	r0, #0
   17d58:	bl	17e7c <_obstack_memory_used@@Base+0x5458>
   17d5c:	cmp	r0, r5
   17d60:	bcs	17d78 <_obstack_memory_used@@Base+0x5354>
   17d64:	bl	10f18 <__errno_location@plt>
   17d68:	mov	r3, #12
   17d6c:	str	r3, [r0]
   17d70:	mov	r0, #0
   17d74:	pop	{r4, r5, r6, pc}
   17d78:	mul	r1, r5, r4
   17d7c:	mov	r0, r6
   17d80:	pop	{r4, r5, r6, lr}
   17d84:	b	17bdc <_obstack_memory_used@@Base+0x51b8>
   17d88:	push	{lr}		; (str lr, [sp, #-4]!)
   17d8c:	sub	sp, sp, #268	; 0x10c
   17d90:	add	r1, sp, #4
   17d94:	ldr	r2, [pc, #60]	; 17dd8 <_obstack_memory_used@@Base+0x53b4>
   17d98:	bl	17de4 <_obstack_memory_used@@Base+0x53c0>
   17d9c:	cmp	r0, #0
   17da0:	movne	r0, #0
   17da4:	bne	17dd0 <_obstack_memory_used@@Base+0x53ac>
   17da8:	ldr	r1, [pc, #44]	; 17ddc <_obstack_memory_used@@Base+0x53b8>
   17dac:	add	r0, sp, #4
   17db0:	bl	10d8c <strcmp@plt>
   17db4:	cmp	r0, #0
   17db8:	beq	17dd0 <_obstack_memory_used@@Base+0x53ac>
   17dbc:	add	r0, sp, #4
   17dc0:	ldr	r1, [pc, #24]	; 17de0 <_obstack_memory_used@@Base+0x53bc>
   17dc4:	bl	10d8c <strcmp@plt>
   17dc8:	adds	r0, r0, #0
   17dcc:	movne	r0, #1
   17dd0:	add	sp, sp, #268	; 0x10c
   17dd4:	pop	{pc}		; (ldr pc, [sp], #4)
   17dd8:	andeq	r0, r0, r1, lsl #2
   17ddc:	andeq	sl, r1, r0, lsl #5
   17de0:	andeq	sl, r1, r4, lsl #5
   17de4:	push	{r4, r5, r6, lr}
   17de8:	mov	r5, r1
   17dec:	mov	r1, #0
   17df0:	mov	r4, r2
   17df4:	bl	10f78 <setlocale@plt>
   17df8:	subs	r6, r0, #0
   17dfc:	beq	17e58 <_obstack_memory_used@@Base+0x5434>
   17e00:	bl	10f0c <strlen@plt>
   17e04:	cmp	r4, r0
   17e08:	bhi	17e40 <_obstack_memory_used@@Base+0x541c>
   17e0c:	cmp	r4, #0
   17e10:	bne	17e1c <_obstack_memory_used@@Base+0x53f8>
   17e14:	mov	r0, #34	; 0x22
   17e18:	pop	{r4, r5, r6, pc}
   17e1c:	sub	r4, r4, #1
   17e20:	mov	r1, r6
   17e24:	mov	r2, r4
   17e28:	mov	r0, r5
   17e2c:	bl	10dbc <memcpy@plt>
   17e30:	mov	r3, #0
   17e34:	strb	r3, [r5, r4]
   17e38:	mov	r0, #34	; 0x22
   17e3c:	pop	{r4, r5, r6, pc}
   17e40:	add	r2, r0, #1
   17e44:	mov	r1, r6
   17e48:	mov	r0, r5
   17e4c:	bl	10dbc <memcpy@plt>
   17e50:	mov	r0, #0
   17e54:	pop	{r4, r5, r6, pc}
   17e58:	cmp	r4, #0
   17e5c:	beq	17e6c <_obstack_memory_used@@Base+0x5448>
   17e60:	strb	r6, [r5]
   17e64:	mov	r0, #22
   17e68:	pop	{r4, r5, r6, pc}
   17e6c:	mov	r0, #22
   17e70:	pop	{r4, r5, r6, pc}
   17e74:	mov	r1, #0
   17e78:	b	10f78 <setlocale@plt>
   17e7c:	subs	r2, r1, #1
   17e80:	bxeq	lr
   17e84:	bcc	1805c <_obstack_memory_used@@Base+0x5638>
   17e88:	cmp	r0, r1
   17e8c:	bls	18040 <_obstack_memory_used@@Base+0x561c>
   17e90:	tst	r1, r2
   17e94:	beq	1804c <_obstack_memory_used@@Base+0x5628>
   17e98:	clz	r3, r0
   17e9c:	clz	r2, r1
   17ea0:	sub	r3, r2, r3
   17ea4:	rsbs	r3, r3, #31
   17ea8:	addne	r3, r3, r3, lsl #1
   17eac:	mov	r2, #0
   17eb0:	addne	pc, pc, r3, lsl #2
   17eb4:	nop			; (mov r0, r0)
   17eb8:	cmp	r0, r1, lsl #31
   17ebc:	adc	r2, r2, r2
   17ec0:	subcs	r0, r0, r1, lsl #31
   17ec4:	cmp	r0, r1, lsl #30
   17ec8:	adc	r2, r2, r2
   17ecc:	subcs	r0, r0, r1, lsl #30
   17ed0:	cmp	r0, r1, lsl #29
   17ed4:	adc	r2, r2, r2
   17ed8:	subcs	r0, r0, r1, lsl #29
   17edc:	cmp	r0, r1, lsl #28
   17ee0:	adc	r2, r2, r2
   17ee4:	subcs	r0, r0, r1, lsl #28
   17ee8:	cmp	r0, r1, lsl #27
   17eec:	adc	r2, r2, r2
   17ef0:	subcs	r0, r0, r1, lsl #27
   17ef4:	cmp	r0, r1, lsl #26
   17ef8:	adc	r2, r2, r2
   17efc:	subcs	r0, r0, r1, lsl #26
   17f00:	cmp	r0, r1, lsl #25
   17f04:	adc	r2, r2, r2
   17f08:	subcs	r0, r0, r1, lsl #25
   17f0c:	cmp	r0, r1, lsl #24
   17f10:	adc	r2, r2, r2
   17f14:	subcs	r0, r0, r1, lsl #24
   17f18:	cmp	r0, r1, lsl #23
   17f1c:	adc	r2, r2, r2
   17f20:	subcs	r0, r0, r1, lsl #23
   17f24:	cmp	r0, r1, lsl #22
   17f28:	adc	r2, r2, r2
   17f2c:	subcs	r0, r0, r1, lsl #22
   17f30:	cmp	r0, r1, lsl #21
   17f34:	adc	r2, r2, r2
   17f38:	subcs	r0, r0, r1, lsl #21
   17f3c:	cmp	r0, r1, lsl #20
   17f40:	adc	r2, r2, r2
   17f44:	subcs	r0, r0, r1, lsl #20
   17f48:	cmp	r0, r1, lsl #19
   17f4c:	adc	r2, r2, r2
   17f50:	subcs	r0, r0, r1, lsl #19
   17f54:	cmp	r0, r1, lsl #18
   17f58:	adc	r2, r2, r2
   17f5c:	subcs	r0, r0, r1, lsl #18
   17f60:	cmp	r0, r1, lsl #17
   17f64:	adc	r2, r2, r2
   17f68:	subcs	r0, r0, r1, lsl #17
   17f6c:	cmp	r0, r1, lsl #16
   17f70:	adc	r2, r2, r2
   17f74:	subcs	r0, r0, r1, lsl #16
   17f78:	cmp	r0, r1, lsl #15
   17f7c:	adc	r2, r2, r2
   17f80:	subcs	r0, r0, r1, lsl #15
   17f84:	cmp	r0, r1, lsl #14
   17f88:	adc	r2, r2, r2
   17f8c:	subcs	r0, r0, r1, lsl #14
   17f90:	cmp	r0, r1, lsl #13
   17f94:	adc	r2, r2, r2
   17f98:	subcs	r0, r0, r1, lsl #13
   17f9c:	cmp	r0, r1, lsl #12
   17fa0:	adc	r2, r2, r2
   17fa4:	subcs	r0, r0, r1, lsl #12
   17fa8:	cmp	r0, r1, lsl #11
   17fac:	adc	r2, r2, r2
   17fb0:	subcs	r0, r0, r1, lsl #11
   17fb4:	cmp	r0, r1, lsl #10
   17fb8:	adc	r2, r2, r2
   17fbc:	subcs	r0, r0, r1, lsl #10
   17fc0:	cmp	r0, r1, lsl #9
   17fc4:	adc	r2, r2, r2
   17fc8:	subcs	r0, r0, r1, lsl #9
   17fcc:	cmp	r0, r1, lsl #8
   17fd0:	adc	r2, r2, r2
   17fd4:	subcs	r0, r0, r1, lsl #8
   17fd8:	cmp	r0, r1, lsl #7
   17fdc:	adc	r2, r2, r2
   17fe0:	subcs	r0, r0, r1, lsl #7
   17fe4:	cmp	r0, r1, lsl #6
   17fe8:	adc	r2, r2, r2
   17fec:	subcs	r0, r0, r1, lsl #6
   17ff0:	cmp	r0, r1, lsl #5
   17ff4:	adc	r2, r2, r2
   17ff8:	subcs	r0, r0, r1, lsl #5
   17ffc:	cmp	r0, r1, lsl #4
   18000:	adc	r2, r2, r2
   18004:	subcs	r0, r0, r1, lsl #4
   18008:	cmp	r0, r1, lsl #3
   1800c:	adc	r2, r2, r2
   18010:	subcs	r0, r0, r1, lsl #3
   18014:	cmp	r0, r1, lsl #2
   18018:	adc	r2, r2, r2
   1801c:	subcs	r0, r0, r1, lsl #2
   18020:	cmp	r0, r1, lsl #1
   18024:	adc	r2, r2, r2
   18028:	subcs	r0, r0, r1, lsl #1
   1802c:	cmp	r0, r1
   18030:	adc	r2, r2, r2
   18034:	subcs	r0, r0, r1
   18038:	mov	r0, r2
   1803c:	bx	lr
   18040:	moveq	r0, #1
   18044:	movne	r0, #0
   18048:	bx	lr
   1804c:	clz	r2, r1
   18050:	rsb	r2, r2, #31
   18054:	lsr	r0, r0, r2
   18058:	bx	lr
   1805c:	cmp	r0, #0
   18060:	mvnne	r0, #0
   18064:	b	182c8 <_obstack_memory_used@@Base+0x58a4>
   18068:	cmp	r1, #0
   1806c:	beq	1805c <_obstack_memory_used@@Base+0x5638>
   18070:	push	{r0, r1, lr}
   18074:	bl	17e7c <_obstack_memory_used@@Base+0x5458>
   18078:	pop	{r1, r2, lr}
   1807c:	mul	r3, r2, r0
   18080:	sub	r1, r1, r3
   18084:	bx	lr
   18088:	cmp	r1, #0
   1808c:	beq	18298 <_obstack_memory_used@@Base+0x5874>
   18090:	eor	ip, r0, r1
   18094:	rsbmi	r1, r1, #0
   18098:	subs	r2, r1, #1
   1809c:	beq	18264 <_obstack_memory_used@@Base+0x5840>
   180a0:	movs	r3, r0
   180a4:	rsbmi	r3, r0, #0
   180a8:	cmp	r3, r1
   180ac:	bls	18270 <_obstack_memory_used@@Base+0x584c>
   180b0:	tst	r1, r2
   180b4:	beq	18280 <_obstack_memory_used@@Base+0x585c>
   180b8:	clz	r2, r3
   180bc:	clz	r0, r1
   180c0:	sub	r2, r0, r2
   180c4:	rsbs	r2, r2, #31
   180c8:	addne	r2, r2, r2, lsl #1
   180cc:	mov	r0, #0
   180d0:	addne	pc, pc, r2, lsl #2
   180d4:	nop			; (mov r0, r0)
   180d8:	cmp	r3, r1, lsl #31
   180dc:	adc	r0, r0, r0
   180e0:	subcs	r3, r3, r1, lsl #31
   180e4:	cmp	r3, r1, lsl #30
   180e8:	adc	r0, r0, r0
   180ec:	subcs	r3, r3, r1, lsl #30
   180f0:	cmp	r3, r1, lsl #29
   180f4:	adc	r0, r0, r0
   180f8:	subcs	r3, r3, r1, lsl #29
   180fc:	cmp	r3, r1, lsl #28
   18100:	adc	r0, r0, r0
   18104:	subcs	r3, r3, r1, lsl #28
   18108:	cmp	r3, r1, lsl #27
   1810c:	adc	r0, r0, r0
   18110:	subcs	r3, r3, r1, lsl #27
   18114:	cmp	r3, r1, lsl #26
   18118:	adc	r0, r0, r0
   1811c:	subcs	r3, r3, r1, lsl #26
   18120:	cmp	r3, r1, lsl #25
   18124:	adc	r0, r0, r0
   18128:	subcs	r3, r3, r1, lsl #25
   1812c:	cmp	r3, r1, lsl #24
   18130:	adc	r0, r0, r0
   18134:	subcs	r3, r3, r1, lsl #24
   18138:	cmp	r3, r1, lsl #23
   1813c:	adc	r0, r0, r0
   18140:	subcs	r3, r3, r1, lsl #23
   18144:	cmp	r3, r1, lsl #22
   18148:	adc	r0, r0, r0
   1814c:	subcs	r3, r3, r1, lsl #22
   18150:	cmp	r3, r1, lsl #21
   18154:	adc	r0, r0, r0
   18158:	subcs	r3, r3, r1, lsl #21
   1815c:	cmp	r3, r1, lsl #20
   18160:	adc	r0, r0, r0
   18164:	subcs	r3, r3, r1, lsl #20
   18168:	cmp	r3, r1, lsl #19
   1816c:	adc	r0, r0, r0
   18170:	subcs	r3, r3, r1, lsl #19
   18174:	cmp	r3, r1, lsl #18
   18178:	adc	r0, r0, r0
   1817c:	subcs	r3, r3, r1, lsl #18
   18180:	cmp	r3, r1, lsl #17
   18184:	adc	r0, r0, r0
   18188:	subcs	r3, r3, r1, lsl #17
   1818c:	cmp	r3, r1, lsl #16
   18190:	adc	r0, r0, r0
   18194:	subcs	r3, r3, r1, lsl #16
   18198:	cmp	r3, r1, lsl #15
   1819c:	adc	r0, r0, r0
   181a0:	subcs	r3, r3, r1, lsl #15
   181a4:	cmp	r3, r1, lsl #14
   181a8:	adc	r0, r0, r0
   181ac:	subcs	r3, r3, r1, lsl #14
   181b0:	cmp	r3, r1, lsl #13
   181b4:	adc	r0, r0, r0
   181b8:	subcs	r3, r3, r1, lsl #13
   181bc:	cmp	r3, r1, lsl #12
   181c0:	adc	r0, r0, r0
   181c4:	subcs	r3, r3, r1, lsl #12
   181c8:	cmp	r3, r1, lsl #11
   181cc:	adc	r0, r0, r0
   181d0:	subcs	r3, r3, r1, lsl #11
   181d4:	cmp	r3, r1, lsl #10
   181d8:	adc	r0, r0, r0
   181dc:	subcs	r3, r3, r1, lsl #10
   181e0:	cmp	r3, r1, lsl #9
   181e4:	adc	r0, r0, r0
   181e8:	subcs	r3, r3, r1, lsl #9
   181ec:	cmp	r3, r1, lsl #8
   181f0:	adc	r0, r0, r0
   181f4:	subcs	r3, r3, r1, lsl #8
   181f8:	cmp	r3, r1, lsl #7
   181fc:	adc	r0, r0, r0
   18200:	subcs	r3, r3, r1, lsl #7
   18204:	cmp	r3, r1, lsl #6
   18208:	adc	r0, r0, r0
   1820c:	subcs	r3, r3, r1, lsl #6
   18210:	cmp	r3, r1, lsl #5
   18214:	adc	r0, r0, r0
   18218:	subcs	r3, r3, r1, lsl #5
   1821c:	cmp	r3, r1, lsl #4
   18220:	adc	r0, r0, r0
   18224:	subcs	r3, r3, r1, lsl #4
   18228:	cmp	r3, r1, lsl #3
   1822c:	adc	r0, r0, r0
   18230:	subcs	r3, r3, r1, lsl #3
   18234:	cmp	r3, r1, lsl #2
   18238:	adc	r0, r0, r0
   1823c:	subcs	r3, r3, r1, lsl #2
   18240:	cmp	r3, r1, lsl #1
   18244:	adc	r0, r0, r0
   18248:	subcs	r3, r3, r1, lsl #1
   1824c:	cmp	r3, r1
   18250:	adc	r0, r0, r0
   18254:	subcs	r3, r3, r1
   18258:	cmp	ip, #0
   1825c:	rsbmi	r0, r0, #0
   18260:	bx	lr
   18264:	teq	ip, r0
   18268:	rsbmi	r0, r0, #0
   1826c:	bx	lr
   18270:	movcc	r0, #0
   18274:	asreq	r0, ip, #31
   18278:	orreq	r0, r0, #1
   1827c:	bx	lr
   18280:	clz	r2, r1
   18284:	rsb	r2, r2, #31
   18288:	cmp	ip, #0
   1828c:	lsr	r0, r3, r2
   18290:	rsbmi	r0, r0, #0
   18294:	bx	lr
   18298:	cmp	r0, #0
   1829c:	mvngt	r0, #-2147483648	; 0x80000000
   182a0:	movlt	r0, #-2147483648	; 0x80000000
   182a4:	b	182c8 <_obstack_memory_used@@Base+0x58a4>
   182a8:	cmp	r1, #0
   182ac:	beq	18298 <_obstack_memory_used@@Base+0x5874>
   182b0:	push	{r0, r1, lr}
   182b4:	bl	18090 <_obstack_memory_used@@Base+0x566c>
   182b8:	pop	{r1, r2, lr}
   182bc:	mul	r3, r2, r0
   182c0:	sub	r1, r1, r3
   182c4:	bx	lr
   182c8:	push	{r1, lr}
   182cc:	mov	r0, #8
   182d0:	bl	10d74 <raise@plt>
   182d4:	pop	{r1, pc}
   182d8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   182dc:	mov	r7, r0
   182e0:	ldr	r6, [pc, #72]	; 18330 <_obstack_memory_used@@Base+0x590c>
   182e4:	ldr	r5, [pc, #72]	; 18334 <_obstack_memory_used@@Base+0x5910>
   182e8:	add	r6, pc, r6
   182ec:	add	r5, pc, r5
   182f0:	sub	r6, r6, r5
   182f4:	mov	r8, r1
   182f8:	mov	r9, r2
   182fc:	bl	10d3c <calloc@plt-0x20>
   18300:	asrs	r6, r6, #2
   18304:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   18308:	mov	r4, #0
   1830c:	add	r4, r4, #1
   18310:	ldr	r3, [r5], #4
   18314:	mov	r2, r9
   18318:	mov	r1, r8
   1831c:	mov	r0, r7
   18320:	blx	r3
   18324:	cmp	r6, r4
   18328:	bne	1830c <_obstack_memory_used@@Base+0x58e8>
   1832c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   18330:	andeq	r2, r1, r0, lsr #24
   18334:	andeq	r2, r1, r8, lsl ip
   18338:	bx	lr
   1833c:	ldr	r3, [pc, #12]	; 18350 <_obstack_memory_used@@Base+0x592c>
   18340:	mov	r1, #0
   18344:	add	r3, pc, r3
   18348:	ldr	r2, [r3]
   1834c:	b	10f24 <__cxa_atexit@plt>
   18350:	muleq	r1, r8, sp

Disassembly of section .fini:

00018354 <.fini>:
   18354:	push	{r3, lr}
   18358:	pop	{r3, pc}
