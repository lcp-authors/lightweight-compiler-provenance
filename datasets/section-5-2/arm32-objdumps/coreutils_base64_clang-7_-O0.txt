
../repos/coreutils/src/base64:     file format elf32-littlearm


Disassembly of section .init:

00010e4c <.init>:
   10e4c:	push	{r3, lr}
   10e50:	bl	11130 <__assert_fail@plt+0x48>
   10e54:	pop	{r3, pc}

Disassembly of section .plt:

00010e58 <calloc@plt-0x14>:
   10e58:	push	{lr}		; (str lr, [sp, #-4]!)
   10e5c:	ldr	lr, [pc, #4]	; 10e68 <calloc@plt-0x4>
   10e60:	add	lr, pc, lr
   10e64:	ldr	pc, [lr, #8]!
   10e68:	muleq	r1, r8, r1

00010e6c <calloc@plt>:
   10e6c:	add	ip, pc, #0, 12
   10e70:	add	ip, ip, #126976	; 0x1f000
   10e74:	ldr	pc, [ip, #408]!	; 0x198

00010e78 <fputs_unlocked@plt>:
   10e78:	add	ip, pc, #0, 12
   10e7c:	add	ip, ip, #126976	; 0x1f000
   10e80:	ldr	pc, [ip, #400]!	; 0x190

00010e84 <raise@plt>:
   10e84:	add	ip, pc, #0, 12
   10e88:	add	ip, ip, #126976	; 0x1f000
   10e8c:	ldr	pc, [ip, #392]!	; 0x188

00010e90 <strcmp@plt>:
   10e90:	add	ip, pc, #0, 12
   10e94:	add	ip, ip, #126976	; 0x1f000
   10e98:	ldr	pc, [ip, #384]!	; 0x180

00010e9c <posix_fadvise64@plt>:
   10e9c:	add	ip, pc, #0, 12
   10ea0:	add	ip, ip, #126976	; 0x1f000
   10ea4:	ldr	pc, [ip, #376]!	; 0x178

00010ea8 <printf@plt>:
   10ea8:	add	ip, pc, #0, 12
   10eac:	add	ip, ip, #126976	; 0x1f000
   10eb0:	ldr	pc, [ip, #368]!	; 0x170

00010eb4 <fflush@plt>:
   10eb4:	add	ip, pc, #0, 12
   10eb8:	add	ip, ip, #126976	; 0x1f000
   10ebc:	ldr	pc, [ip, #360]!	; 0x168

00010ec0 <memmove@plt>:
   10ec0:	add	ip, pc, #0, 12
   10ec4:	add	ip, ip, #126976	; 0x1f000
   10ec8:	ldr	pc, [ip, #352]!	; 0x160

00010ecc <free@plt>:
   10ecc:	add	ip, pc, #0, 12
   10ed0:	add	ip, ip, #126976	; 0x1f000
   10ed4:	ldr	pc, [ip, #344]!	; 0x158

00010ed8 <_exit@plt>:
   10ed8:	add	ip, pc, #0, 12
   10edc:	add	ip, ip, #126976	; 0x1f000
   10ee0:	ldr	pc, [ip, #336]!	; 0x150

00010ee4 <memcpy@plt>:
   10ee4:	add	ip, pc, #0, 12
   10ee8:	add	ip, ip, #126976	; 0x1f000
   10eec:	ldr	pc, [ip, #328]!	; 0x148

00010ef0 <mbsinit@plt>:
   10ef0:	add	ip, pc, #0, 12
   10ef4:	add	ip, ip, #126976	; 0x1f000
   10ef8:	ldr	pc, [ip, #320]!	; 0x140

00010efc <fwrite_unlocked@plt>:
   10efc:	add	ip, pc, #0, 12
   10f00:	add	ip, ip, #126976	; 0x1f000
   10f04:	ldr	pc, [ip, #312]!	; 0x138

00010f08 <memcmp@plt>:
   10f08:	add	ip, pc, #0, 12
   10f0c:	add	ip, ip, #126976	; 0x1f000
   10f10:	ldr	pc, [ip, #304]!	; 0x130

00010f14 <fputc_unlocked@plt>:
   10f14:	add	ip, pc, #0, 12
   10f18:	add	ip, ip, #126976	; 0x1f000
   10f1c:	ldr	pc, [ip, #296]!	; 0x128

00010f20 <realloc@plt>:
   10f20:	add	ip, pc, #0, 12
   10f24:	add	ip, ip, #126976	; 0x1f000
   10f28:	ldr	pc, [ip, #288]!	; 0x120

00010f2c <textdomain@plt>:
   10f2c:	add	ip, pc, #0, 12
   10f30:	add	ip, ip, #126976	; 0x1f000
   10f34:	ldr	pc, [ip, #280]!	; 0x118

00010f38 <iswprint@plt>:
   10f38:	add	ip, pc, #0, 12
   10f3c:	add	ip, ip, #126976	; 0x1f000
   10f40:	ldr	pc, [ip, #272]!	; 0x110

00010f44 <lseek64@plt>:
   10f44:	add	ip, pc, #0, 12
   10f48:	add	ip, ip, #126976	; 0x1f000
   10f4c:	ldr	pc, [ip, #264]!	; 0x108

00010f50 <__ctype_get_mb_cur_max@plt>:
   10f50:	add	ip, pc, #0, 12
   10f54:	add	ip, ip, #126976	; 0x1f000
   10f58:	ldr	pc, [ip, #256]!	; 0x100

00010f5c <__fpending@plt>:
   10f5c:	add	ip, pc, #0, 12
   10f60:	add	ip, ip, #126976	; 0x1f000
   10f64:	ldr	pc, [ip, #248]!	; 0xf8

00010f68 <ferror_unlocked@plt>:
   10f68:	add	ip, pc, #0, 12
   10f6c:	add	ip, ip, #126976	; 0x1f000
   10f70:	ldr	pc, [ip, #240]!	; 0xf0

00010f74 <mbrtowc@plt>:
   10f74:	add	ip, pc, #0, 12
   10f78:	add	ip, ip, #126976	; 0x1f000
   10f7c:	ldr	pc, [ip, #232]!	; 0xe8

00010f80 <error@plt>:
   10f80:	add	ip, pc, #0, 12
   10f84:	add	ip, ip, #126976	; 0x1f000
   10f88:	ldr	pc, [ip, #224]!	; 0xe0

00010f8c <malloc@plt>:
   10f8c:	add	ip, pc, #0, 12
   10f90:	add	ip, ip, #126976	; 0x1f000
   10f94:	ldr	pc, [ip, #216]!	; 0xd8

00010f98 <__libc_start_main@plt>:
   10f98:	add	ip, pc, #0, 12
   10f9c:	add	ip, ip, #126976	; 0x1f000
   10fa0:	ldr	pc, [ip, #208]!	; 0xd0

00010fa4 <__freading@plt>:
   10fa4:	add	ip, pc, #0, 12
   10fa8:	add	ip, ip, #126976	; 0x1f000
   10fac:	ldr	pc, [ip, #200]!	; 0xc8

00010fb0 <__gmon_start__@plt>:
   10fb0:	add	ip, pc, #0, 12
   10fb4:	add	ip, ip, #126976	; 0x1f000
   10fb8:	ldr	pc, [ip, #192]!	; 0xc0

00010fbc <getopt_long@plt>:
   10fbc:	add	ip, pc, #0, 12
   10fc0:	add	ip, ip, #126976	; 0x1f000
   10fc4:	ldr	pc, [ip, #184]!	; 0xb8

00010fc8 <__ctype_b_loc@plt>:
   10fc8:	add	ip, pc, #0, 12
   10fcc:	add	ip, ip, #126976	; 0x1f000
   10fd0:	ldr	pc, [ip, #176]!	; 0xb0

00010fd4 <exit@plt>:
   10fd4:	add	ip, pc, #0, 12
   10fd8:	add	ip, ip, #126976	; 0x1f000
   10fdc:	ldr	pc, [ip, #168]!	; 0xa8

00010fe0 <gettext@plt>:
   10fe0:	add	ip, pc, #0, 12
   10fe4:	add	ip, ip, #126976	; 0x1f000
   10fe8:	ldr	pc, [ip, #160]!	; 0xa0

00010fec <strlen@plt>:
   10fec:	add	ip, pc, #0, 12
   10ff0:	add	ip, ip, #126976	; 0x1f000
   10ff4:	ldr	pc, [ip, #152]!	; 0x98

00010ff8 <strchr@plt>:
   10ff8:	add	ip, pc, #0, 12
   10ffc:	add	ip, ip, #126976	; 0x1f000
   11000:	ldr	pc, [ip, #144]!	; 0x90

00011004 <fprintf@plt>:
   11004:	add	ip, pc, #0, 12
   11008:	add	ip, ip, #126976	; 0x1f000
   1100c:	ldr	pc, [ip, #136]!	; 0x88

00011010 <__errno_location@plt>:
   11010:	add	ip, pc, #0, 12
   11014:	add	ip, ip, #126976	; 0x1f000
   11018:	ldr	pc, [ip, #128]!	; 0x80

0001101c <__cxa_atexit@plt>:
   1101c:	add	ip, pc, #0, 12
   11020:	add	ip, ip, #126976	; 0x1f000
   11024:	ldr	pc, [ip, #120]!	; 0x78

00011028 <memset@plt>:
   11028:	add	ip, pc, #0, 12
   1102c:	add	ip, ip, #126976	; 0x1f000
   11030:	ldr	pc, [ip, #112]!	; 0x70

00011034 <fileno@plt>:
   11034:	add	ip, pc, #0, 12
   11038:	add	ip, ip, #126976	; 0x1f000
   1103c:	ldr	pc, [ip, #104]!	; 0x68

00011040 <memchr@plt>:
   11040:	add	ip, pc, #0, 12
   11044:	add	ip, ip, #126976	; 0x1f000
   11048:	ldr	pc, [ip, #96]!	; 0x60

0001104c <strtoimax@plt>:
   1104c:	add	ip, pc, #0, 12
   11050:	add	ip, ip, #126976	; 0x1f000
   11054:	ldr	pc, [ip, #88]!	; 0x58

00011058 <fclose@plt>:
   11058:	add	ip, pc, #0, 12
   1105c:	add	ip, ip, #126976	; 0x1f000
   11060:	ldr	pc, [ip, #80]!	; 0x50

00011064 <fseeko64@plt>:
   11064:	add	ip, pc, #0, 12
   11068:	add	ip, ip, #126976	; 0x1f000
   1106c:	ldr	pc, [ip, #72]!	; 0x48

00011070 <setlocale@plt>:
   11070:	add	ip, pc, #0, 12
   11074:	add	ip, ip, #126976	; 0x1f000
   11078:	ldr	pc, [ip, #64]!	; 0x40

0001107c <strrchr@plt>:
   1107c:	add	ip, pc, #0, 12
   11080:	add	ip, ip, #126976	; 0x1f000
   11084:	ldr	pc, [ip, #56]!	; 0x38

00011088 <nl_langinfo@plt>:
   11088:	add	ip, pc, #0, 12
   1108c:	add	ip, ip, #126976	; 0x1f000
   11090:	ldr	pc, [ip, #48]!	; 0x30

00011094 <fopen64@plt>:
   11094:	add	ip, pc, #0, 12
   11098:	add	ip, ip, #126976	; 0x1f000
   1109c:	ldr	pc, [ip, #40]!	; 0x28

000110a0 <bindtextdomain@plt>:
   110a0:	add	ip, pc, #0, 12
   110a4:	add	ip, ip, #126976	; 0x1f000
   110a8:	ldr	pc, [ip, #32]!

000110ac <fread_unlocked@plt>:
   110ac:	add	ip, pc, #0, 12
   110b0:	add	ip, ip, #126976	; 0x1f000
   110b4:	ldr	pc, [ip, #24]!

000110b8 <fputs@plt>:
   110b8:	add	ip, pc, #0, 12
   110bc:	add	ip, ip, #126976	; 0x1f000
   110c0:	ldr	pc, [ip, #16]!

000110c4 <strncmp@plt>:
   110c4:	add	ip, pc, #0, 12
   110c8:	add	ip, ip, #126976	; 0x1f000
   110cc:	ldr	pc, [ip, #8]!

000110d0 <abort@plt>:
   110d0:	add	ip, pc, #0, 12
   110d4:	add	ip, ip, #126976	; 0x1f000
   110d8:	ldr	pc, [ip, #0]!

000110dc <feof_unlocked@plt>:
   110dc:	add	ip, pc, #0, 12
   110e0:	add	ip, ip, #122880	; 0x1e000
   110e4:	ldr	pc, [ip, #4088]!	; 0xff8

000110e8 <__assert_fail@plt>:
   110e8:	add	ip, pc, #0, 12
   110ec:	add	ip, ip, #122880	; 0x1e000
   110f0:	ldr	pc, [ip, #4080]!	; 0xff0

Disassembly of section .text:

000110f4 <.text>:
   110f4:	mov	fp, #0
   110f8:	mov	lr, #0
   110fc:	pop	{r1}		; (ldr r1, [sp], #4)
   11100:	mov	r2, sp
   11104:	push	{r2}		; (str r2, [sp, #-4]!)
   11108:	push	{r0}		; (str r0, [sp, #-4]!)
   1110c:	ldr	ip, [pc, #16]	; 11124 <__assert_fail@plt+0x3c>
   11110:	push	{ip}		; (str ip, [sp, #-4]!)
   11114:	ldr	r0, [pc, #12]	; 11128 <__assert_fail@plt+0x40>
   11118:	ldr	r3, [pc, #12]	; 1112c <__assert_fail@plt+0x44>
   1111c:	bl	10f98 <__libc_start_main@plt>
   11120:	bl	110d0 <abort@plt>
   11124:	andeq	lr, r1, r4, asr #17
   11128:	andeq	r1, r1, r4, asr r5
   1112c:	andeq	lr, r1, r4, ror #16
   11130:	ldr	r3, [pc, #20]	; 1114c <__assert_fail@plt+0x64>
   11134:	ldr	r2, [pc, #20]	; 11150 <__assert_fail@plt+0x68>
   11138:	add	r3, pc, r3
   1113c:	ldr	r2, [r3, r2]
   11140:	cmp	r2, #0
   11144:	bxeq	lr
   11148:	b	10fb0 <__gmon_start__@plt>
   1114c:	andeq	lr, r1, r0, asr #29
   11150:	andeq	r0, r0, r4, ror #1
   11154:	ldr	r0, [pc, #24]	; 11174 <__assert_fail@plt+0x8c>
   11158:	ldr	r3, [pc, #24]	; 11178 <__assert_fail@plt+0x90>
   1115c:	cmp	r3, r0
   11160:	bxeq	lr
   11164:	ldr	r3, [pc, #16]	; 1117c <__assert_fail@plt+0x94>
   11168:	cmp	r3, #0
   1116c:	bxeq	lr
   11170:	bx	r3
   11174:	andeq	r0, r3, r8, lsr r1
   11178:	andeq	r0, r3, r8, lsr r1
   1117c:	andeq	r0, r0, r0
   11180:	ldr	r0, [pc, #36]	; 111ac <__assert_fail@plt+0xc4>
   11184:	ldr	r1, [pc, #36]	; 111b0 <__assert_fail@plt+0xc8>
   11188:	sub	r1, r1, r0
   1118c:	asr	r1, r1, #2
   11190:	add	r1, r1, r1, lsr #31
   11194:	asrs	r1, r1, #1
   11198:	bxeq	lr
   1119c:	ldr	r3, [pc, #16]	; 111b4 <__assert_fail@plt+0xcc>
   111a0:	cmp	r3, #0
   111a4:	bxeq	lr
   111a8:	bx	r3
   111ac:	andeq	r0, r3, r8, lsr r1
   111b0:	andeq	r0, r3, r8, lsr r1
   111b4:	andeq	r0, r0, r0
   111b8:	push	{r4, lr}
   111bc:	ldr	r4, [pc, #24]	; 111dc <__assert_fail@plt+0xf4>
   111c0:	ldrb	r3, [r4]
   111c4:	cmp	r3, #0
   111c8:	popne	{r4, pc}
   111cc:	bl	11154 <__assert_fail@plt+0x6c>
   111d0:	mov	r3, #1
   111d4:	strb	r3, [r4]
   111d8:	pop	{r4, pc}
   111dc:	andeq	r0, r3, ip, asr r1
   111e0:	b	11180 <__assert_fail@plt+0x98>
   111e4:	push	{fp, lr}
   111e8:	mov	fp, sp
   111ec:	sub	sp, sp, #48	; 0x30
   111f0:	str	r0, [fp, #-4]
   111f4:	ldr	r0, [fp, #-4]
   111f8:	cmp	r0, #0
   111fc:	beq	1124c <__assert_fail@plt+0x164>
   11200:	b	11204 <__assert_fail@plt+0x11c>
   11204:	movw	r0, #328	; 0x148
   11208:	movt	r0, #3
   1120c:	ldr	r0, [r0]
   11210:	movw	r1, #59628	; 0xe8ec
   11214:	movt	r1, #1
   11218:	str	r0, [fp, #-8]
   1121c:	mov	r0, r1
   11220:	bl	10fe0 <gettext@plt>
   11224:	movw	r1, #360	; 0x168
   11228:	movt	r1, #3
   1122c:	ldr	r2, [r1]
   11230:	ldr	r1, [fp, #-8]
   11234:	str	r0, [fp, #-12]
   11238:	mov	r0, r1
   1123c:	ldr	r1, [fp, #-12]
   11240:	bl	11004 <fprintf@plt>
   11244:	str	r0, [fp, #-16]
   11248:	b	11330 <__assert_fail@plt+0x248>
   1124c:	movw	r0, #59667	; 0xe913
   11250:	movt	r0, #1
   11254:	bl	10fe0 <gettext@plt>
   11258:	movw	lr, #360	; 0x168
   1125c:	movt	lr, #3
   11260:	ldr	r1, [lr]
   11264:	bl	10ea8 <printf@plt>
   11268:	movw	r1, #59697	; 0xe931
   1126c:	movt	r1, #1
   11270:	str	r0, [fp, #-20]	; 0xffffffec
   11274:	mov	r0, r1
   11278:	bl	10fe0 <gettext@plt>
   1127c:	movw	r1, #64	; 0x40
   11280:	bl	10ea8 <printf@plt>
   11284:	str	r0, [sp, #24]
   11288:	bl	11338 <__assert_fail@plt+0x250>
   1128c:	bl	1136c <__assert_fail@plt+0x284>
   11290:	movw	r0, #59767	; 0xe977
   11294:	movt	r0, #1
   11298:	bl	10fe0 <gettext@plt>
   1129c:	movw	r1, #340	; 0x154
   112a0:	movt	r1, #3
   112a4:	ldr	r1, [r1]
   112a8:	bl	10e78 <fputs_unlocked@plt>
   112ac:	movw	r1, #60009	; 0xea69
   112b0:	movt	r1, #1
   112b4:	str	r0, [sp, #20]
   112b8:	mov	r0, r1
   112bc:	bl	10fe0 <gettext@plt>
   112c0:	movw	r1, #340	; 0x154
   112c4:	movt	r1, #3
   112c8:	ldr	r1, [r1]
   112cc:	bl	10e78 <fputs_unlocked@plt>
   112d0:	movw	r1, #60054	; 0xea96
   112d4:	movt	r1, #1
   112d8:	str	r0, [sp, #16]
   112dc:	mov	r0, r1
   112e0:	bl	10fe0 <gettext@plt>
   112e4:	movw	r1, #340	; 0x154
   112e8:	movt	r1, #3
   112ec:	ldr	r1, [r1]
   112f0:	bl	10e78 <fputs_unlocked@plt>
   112f4:	movw	r1, #60108	; 0xeacc
   112f8:	movt	r1, #1
   112fc:	str	r0, [sp, #12]
   11300:	mov	r0, r1
   11304:	bl	10fe0 <gettext@plt>
   11308:	movw	r1, #60376	; 0xebd8
   1130c:	movt	r1, #1
   11310:	str	r1, [sp, #8]
   11314:	ldr	r2, [sp, #8]
   11318:	bl	10ea8 <printf@plt>
   1131c:	movw	r1, #60376	; 0xebd8
   11320:	movt	r1, #1
   11324:	str	r0, [sp, #4]
   11328:	mov	r0, r1
   1132c:	bl	113a0 <__assert_fail@plt+0x2b8>
   11330:	ldr	r0, [fp, #-4]
   11334:	bl	10fd4 <exit@plt>
   11338:	push	{fp, lr}
   1133c:	mov	fp, sp
   11340:	sub	sp, sp, #8
   11344:	movw	r0, #60487	; 0xec47
   11348:	movt	r0, #1
   1134c:	bl	10fe0 <gettext@plt>
   11350:	movw	lr, #340	; 0x154
   11354:	movt	lr, #3
   11358:	ldr	r1, [lr]
   1135c:	bl	10e78 <fputs_unlocked@plt>
   11360:	str	r0, [sp, #4]
   11364:	mov	sp, fp
   11368:	pop	{fp, pc}
   1136c:	push	{fp, lr}
   11370:	mov	fp, sp
   11374:	sub	sp, sp, #8
   11378:	movw	r0, #60543	; 0xec7f
   1137c:	movt	r0, #1
   11380:	bl	10fe0 <gettext@plt>
   11384:	movw	lr, #340	; 0x154
   11388:	movt	lr, #3
   1138c:	ldr	r1, [lr]
   11390:	bl	10e78 <fputs_unlocked@plt>
   11394:	str	r0, [sp, #4]
   11398:	mov	sp, fp
   1139c:	pop	{fp, pc}
   113a0:	push	{fp, lr}
   113a4:	mov	fp, sp
   113a8:	sub	sp, sp, #96	; 0x60
   113ac:	add	r1, sp, #36	; 0x24
   113b0:	movw	r2, #61128	; 0xeec8
   113b4:	movt	r2, #1
   113b8:	str	r0, [fp, #-4]
   113bc:	mov	r0, r1
   113c0:	str	r1, [sp, #20]
   113c4:	mov	r1, r2
   113c8:	movw	r2, #56	; 0x38
   113cc:	bl	10ee4 <memcpy@plt>
   113d0:	ldr	r0, [fp, #-4]
   113d4:	str	r0, [sp, #32]
   113d8:	ldr	r0, [sp, #20]
   113dc:	str	r0, [sp, #28]
   113e0:	ldr	r0, [sp, #28]
   113e4:	ldr	r0, [r0]
   113e8:	movw	r1, #0
   113ec:	cmp	r0, r1
   113f0:	movw	r0, #0
   113f4:	str	r0, [sp, #16]
   113f8:	beq	11424 <__assert_fail@plt+0x33c>
   113fc:	ldr	r0, [fp, #-4]
   11400:	ldr	r1, [sp, #28]
   11404:	ldr	r1, [r1]
   11408:	bl	10e90 <strcmp@plt>
   1140c:	cmp	r0, #0
   11410:	movw	r0, #0
   11414:	moveq	r0, #1
   11418:	mvn	r1, #0
   1141c:	eor	r0, r0, r1
   11420:	str	r0, [sp, #16]
   11424:	ldr	r0, [sp, #16]
   11428:	tst	r0, #1
   1142c:	beq	11440 <__assert_fail@plt+0x358>
   11430:	ldr	r0, [sp, #28]
   11434:	add	r0, r0, #8
   11438:	str	r0, [sp, #28]
   1143c:	b	113e0 <__assert_fail@plt+0x2f8>
   11440:	ldr	r0, [sp, #28]
   11444:	ldr	r0, [r0, #4]
   11448:	movw	r1, #0
   1144c:	cmp	r0, r1
   11450:	beq	11460 <__assert_fail@plt+0x378>
   11454:	ldr	r0, [sp, #28]
   11458:	ldr	r0, [r0, #4]
   1145c:	str	r0, [sp, #32]
   11460:	movw	r0, #60713	; 0xed29
   11464:	movt	r0, #1
   11468:	bl	10fe0 <gettext@plt>
   1146c:	movw	r1, #60437	; 0xec15
   11470:	movt	r1, #1
   11474:	movw	r2, #60736	; 0xed40
   11478:	movt	r2, #1
   1147c:	bl	10ea8 <printf@plt>
   11480:	movw	r1, #5
   11484:	str	r0, [sp, #12]
   11488:	mov	r0, r1
   1148c:	movw	r1, #0
   11490:	bl	11070 <setlocale@plt>
   11494:	str	r0, [sp, #24]
   11498:	ldr	r0, [sp, #24]
   1149c:	movw	r1, #0
   114a0:	cmp	r0, r1
   114a4:	beq	114e4 <__assert_fail@plt+0x3fc>
   114a8:	ldr	r0, [sp, #24]
   114ac:	movw	r1, #60776	; 0xed68
   114b0:	movt	r1, #1
   114b4:	movw	r2, #3
   114b8:	bl	110c4 <strncmp@plt>
   114bc:	cmp	r0, #0
   114c0:	beq	114e4 <__assert_fail@plt+0x3fc>
   114c4:	movw	r0, #60780	; 0xed6c
   114c8:	movt	r0, #1
   114cc:	bl	10fe0 <gettext@plt>
   114d0:	movw	lr, #340	; 0x154
   114d4:	movt	lr, #3
   114d8:	ldr	r1, [lr]
   114dc:	bl	10e78 <fputs_unlocked@plt>
   114e0:	str	r0, [sp, #8]
   114e4:	movw	r0, #60851	; 0xedb3
   114e8:	movt	r0, #1
   114ec:	bl	10fe0 <gettext@plt>
   114f0:	ldr	r2, [fp, #-4]
   114f4:	movw	r1, #60736	; 0xed40
   114f8:	movt	r1, #1
   114fc:	bl	10ea8 <printf@plt>
   11500:	movw	r1, #60878	; 0xedce
   11504:	movt	r1, #1
   11508:	str	r0, [sp, #4]
   1150c:	mov	r0, r1
   11510:	bl	10fe0 <gettext@plt>
   11514:	ldr	r1, [sp, #32]
   11518:	ldr	r2, [sp, #32]
   1151c:	ldr	lr, [fp, #-4]
   11520:	cmp	r2, lr
   11524:	movw	r2, #0
   11528:	moveq	r2, #1
   1152c:	tst	r2, #1
   11530:	movw	r2, #60928	; 0xee00
   11534:	movt	r2, #1
   11538:	movw	lr, #60646	; 0xece6
   1153c:	movt	lr, #1
   11540:	movne	r2, lr
   11544:	bl	10ea8 <printf@plt>
   11548:	str	r0, [sp]
   1154c:	mov	sp, fp
   11550:	pop	{fp, pc}
   11554:	push	{fp, lr}
   11558:	mov	fp, sp
   1155c:	sub	sp, sp, #120	; 0x78
   11560:	movw	r2, #0
   11564:	str	r2, [fp, #-4]
   11568:	str	r0, [fp, #-8]
   1156c:	str	r1, [fp, #-12]
   11570:	movw	r0, #0
   11574:	strb	r0, [fp, #-25]	; 0xffffffe7
   11578:	strb	r0, [fp, #-26]	; 0xffffffe6
   1157c:	movw	r0, #76	; 0x4c
   11580:	str	r0, [fp, #-32]	; 0xffffffe0
   11584:	ldr	r0, [fp, #-12]
   11588:	ldr	r0, [r0]
   1158c:	bl	14390 <__assert_fail@plt+0x32a8>
   11590:	movw	r0, #6
   11594:	movw	r1, #60928	; 0xee00
   11598:	movt	r1, #1
   1159c:	bl	11070 <setlocale@plt>
   115a0:	movw	r1, #60441	; 0xec19
   115a4:	movt	r1, #1
   115a8:	str	r0, [fp, #-48]	; 0xffffffd0
   115ac:	mov	r0, r1
   115b0:	movw	r1, #60383	; 0xebdf
   115b4:	movt	r1, #1
   115b8:	bl	110a0 <bindtextdomain@plt>
   115bc:	movw	r1, #60441	; 0xec19
   115c0:	movt	r1, #1
   115c4:	str	r0, [fp, #-52]	; 0xffffffcc
   115c8:	mov	r0, r1
   115cc:	bl	10f2c <textdomain@plt>
   115d0:	movw	r1, #15604	; 0x3cf4
   115d4:	movt	r1, #1
   115d8:	str	r0, [fp, #-56]	; 0xffffffc8
   115dc:	mov	r0, r1
   115e0:	bl	1e8c8 <__assert_fail@plt+0xd7e0>
   115e4:	str	r0, [sp, #60]	; 0x3c
   115e8:	ldr	r0, [fp, #-8]
   115ec:	ldr	r1, [fp, #-12]
   115f0:	movw	r2, #60407	; 0xebf7
   115f4:	movt	r2, #1
   115f8:	movw	r3, #61032	; 0xee68
   115fc:	movt	r3, #1
   11600:	movw	ip, #0
   11604:	str	ip, [sp]
   11608:	bl	10fbc <getopt_long@plt>
   1160c:	str	r0, [fp, #-16]
   11610:	cmn	r0, #1
   11614:	beq	117e0 <__assert_fail@plt+0x6f8>
   11618:	ldr	r0, [fp, #-16]
   1161c:	cmn	r0, #3
   11620:	str	r0, [sp, #56]	; 0x38
   11624:	beq	1178c <__assert_fail@plt+0x6a4>
   11628:	b	1162c <__assert_fail@plt+0x544>
   1162c:	ldr	r0, [sp, #56]	; 0x38
   11630:	cmn	r0, #2
   11634:	beq	11784 <__assert_fail@plt+0x69c>
   11638:	b	1163c <__assert_fail@plt+0x554>
   1163c:	ldr	r0, [sp, #56]	; 0x38
   11640:	cmp	r0, #100	; 0x64
   11644:	beq	1166c <__assert_fail@plt+0x584>
   11648:	b	1164c <__assert_fail@plt+0x564>
   1164c:	ldr	r0, [sp, #56]	; 0x38
   11650:	cmp	r0, #105	; 0x69
   11654:	beq	11778 <__assert_fail@plt+0x690>
   11658:	b	1165c <__assert_fail@plt+0x574>
   1165c:	ldr	r0, [sp, #56]	; 0x38
   11660:	cmp	r0, #119	; 0x77
   11664:	beq	11678 <__assert_fail@plt+0x590>
   11668:	b	117d4 <__assert_fail@plt+0x6ec>
   1166c:	movw	r0, #1
   11670:	strb	r0, [fp, #-25]	; 0xffffffe7
   11674:	b	117dc <__assert_fail@plt+0x6f4>
   11678:	movw	r0, #344	; 0x158
   1167c:	movt	r0, #3
   11680:	ldr	r0, [r0]
   11684:	movw	r1, #0
   11688:	movw	r2, #10
   1168c:	sub	r3, fp, #40	; 0x28
   11690:	movw	ip, #60928	; 0xee00
   11694:	movt	ip, #1
   11698:	str	ip, [sp]
   1169c:	bl	1b62c <__assert_fail@plt+0xa544>
   116a0:	str	r0, [fp, #-44]	; 0xffffffd4
   116a4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   116a8:	movw	r1, #1
   116ac:	cmp	r1, r0
   116b0:	bcc	116c4 <__assert_fail@plt+0x5dc>
   116b4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   116b8:	cmn	r0, #1
   116bc:	bgt	11710 <__assert_fail@plt+0x628>
   116c0:	b	116c4 <__assert_fail@plt+0x5dc>
   116c4:	movw	r0, #60419	; 0xec03
   116c8:	movt	r0, #1
   116cc:	bl	10fe0 <gettext@plt>
   116d0:	movw	lr, #344	; 0x158
   116d4:	movt	lr, #3
   116d8:	ldr	lr, [lr]
   116dc:	str	r0, [sp, #52]	; 0x34
   116e0:	mov	r0, lr
   116e4:	bl	169ec <__assert_fail@plt+0x5904>
   116e8:	movw	lr, #1
   116ec:	str	r0, [sp, #48]	; 0x30
   116f0:	mov	r0, lr
   116f4:	movw	r1, #0
   116f8:	movw	r2, #60412	; 0xebfc
   116fc:	movt	r2, #1
   11700:	ldr	r3, [sp, #52]	; 0x34
   11704:	ldr	lr, [sp, #48]	; 0x30
   11708:	str	lr, [sp]
   1170c:	bl	10f80 <error@plt>
   11710:	ldr	r0, [fp, #-44]	; 0xffffffd4
   11714:	cmp	r0, #1
   11718:	beq	1173c <__assert_fail@plt+0x654>
   1171c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   11720:	ldr	r1, [fp, #-36]	; 0xffffffdc
   11724:	subs	r0, r0, #-2147483648	; 0x80000000
   11728:	sbcs	r1, r1, #0
   1172c:	str	r0, [sp, #44]	; 0x2c
   11730:	str	r1, [sp, #40]	; 0x28
   11734:	blt	11750 <__assert_fail@plt+0x668>
   11738:	b	1173c <__assert_fail@plt+0x654>
   1173c:	mov	r0, #0
   11740:	mov	r1, r0
   11744:	str	r1, [sp, #36]	; 0x24
   11748:	str	r0, [sp, #32]
   1174c:	b	11764 <__assert_fail@plt+0x67c>
   11750:	ldr	r0, [fp, #-40]	; 0xffffffd8
   11754:	ldr	r1, [fp, #-36]	; 0xffffffdc
   11758:	str	r0, [sp, #36]	; 0x24
   1175c:	str	r1, [sp, #32]
   11760:	b	11764 <__assert_fail@plt+0x67c>
   11764:	ldr	r0, [sp, #32]
   11768:	ldr	r1, [sp, #36]	; 0x24
   1176c:	str	r1, [fp, #-32]	; 0xffffffe0
   11770:	str	r0, [sp, #28]
   11774:	b	117dc <__assert_fail@plt+0x6f4>
   11778:	movw	r0, #1
   1177c:	strb	r0, [fp, #-26]	; 0xffffffe6
   11780:	b	117dc <__assert_fail@plt+0x6f4>
   11784:	movw	r0, #0
   11788:	bl	111e4 <__assert_fail@plt+0xfc>
   1178c:	movw	r0, #340	; 0x154
   11790:	movt	r0, #3
   11794:	ldr	r0, [r0]
   11798:	movw	r1, #240	; 0xf0
   1179c:	movt	r1, #3
   117a0:	ldr	r3, [r1]
   117a4:	movw	r1, #60376	; 0xebd8
   117a8:	movt	r1, #1
   117ac:	movw	r2, #60437	; 0xec15
   117b0:	movt	r2, #1
   117b4:	movw	ip, #60451	; 0xec23
   117b8:	movt	ip, #1
   117bc:	str	ip, [sp]
   117c0:	movw	ip, #0
   117c4:	str	ip, [sp, #4]
   117c8:	bl	18638 <__assert_fail@plt+0x7550>
   117cc:	movw	r0, #0
   117d0:	bl	10fd4 <exit@plt>
   117d4:	movw	r0, #1
   117d8:	bl	111e4 <__assert_fail@plt+0xfc>
   117dc:	b	115e8 <__assert_fail@plt+0x500>
   117e0:	ldr	r0, [fp, #-8]
   117e4:	movw	r1, #320	; 0x140
   117e8:	movt	r1, #3
   117ec:	ldr	r1, [r1]
   117f0:	sub	r0, r0, r1
   117f4:	cmp	r0, #1
   117f8:	ble	11850 <__assert_fail@plt+0x768>
   117fc:	movw	r0, #60467	; 0xec33
   11800:	movt	r0, #1
   11804:	bl	10fe0 <gettext@plt>
   11808:	ldr	lr, [fp, #-12]
   1180c:	movw	r1, #320	; 0x140
   11810:	movt	r1, #3
   11814:	ldr	r1, [r1]
   11818:	add	r1, r1, #1
   1181c:	add	r1, lr, r1, lsl #2
   11820:	ldr	r1, [r1]
   11824:	str	r0, [sp, #24]
   11828:	mov	r0, r1
   1182c:	bl	169ec <__assert_fail@plt+0x5904>
   11830:	movw	r1, #0
   11834:	str	r0, [sp, #20]
   11838:	mov	r0, r1
   1183c:	ldr	r2, [sp, #24]
   11840:	ldr	r3, [sp, #20]
   11844:	bl	10f80 <error@plt>
   11848:	movw	r0, #1
   1184c:	bl	111e4 <__assert_fail@plt+0xfc>
   11850:	movw	r0, #320	; 0x140
   11854:	movt	r0, #3
   11858:	ldr	r0, [r0]
   1185c:	ldr	r1, [fp, #-8]
   11860:	cmp	r0, r1
   11864:	bge	11888 <__assert_fail@plt+0x7a0>
   11868:	ldr	r0, [fp, #-12]
   1186c:	movw	r1, #320	; 0x140
   11870:	movt	r1, #3
   11874:	ldr	r1, [r1]
   11878:	add	r0, r0, r1, lsl #2
   1187c:	ldr	r0, [r0]
   11880:	str	r0, [fp, #-24]	; 0xffffffe8
   11884:	b	11894 <__assert_fail@plt+0x7ac>
   11888:	movw	r0, #61585	; 0xf091
   1188c:	movt	r0, #1
   11890:	str	r0, [fp, #-24]	; 0xffffffe8
   11894:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11898:	movw	r1, #61585	; 0xf091
   1189c:	movt	r1, #1
   118a0:	bl	10e90 <strcmp@plt>
   118a4:	cmp	r0, #0
   118a8:	bne	118d0 <__assert_fail@plt+0x7e8>
   118ac:	movw	r0, #0
   118b0:	str	r0, [sp, #16]
   118b4:	ldr	r1, [sp, #16]
   118b8:	bl	1b5f8 <__assert_fail@plt+0xa510>
   118bc:	movw	r0, #336	; 0x150
   118c0:	movt	r0, #3
   118c4:	ldr	r0, [r0]
   118c8:	str	r0, [fp, #-20]	; 0xffffffec
   118cc:	b	11938 <__assert_fail@plt+0x850>
   118d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   118d4:	movw	r1, #60484	; 0xec44
   118d8:	movt	r1, #1
   118dc:	bl	11094 <fopen64@plt>
   118e0:	str	r0, [fp, #-20]	; 0xffffffec
   118e4:	ldr	r0, [fp, #-20]	; 0xffffffec
   118e8:	movw	r1, #0
   118ec:	cmp	r0, r1
   118f0:	bne	11934 <__assert_fail@plt+0x84c>
   118f4:	bl	11010 <__errno_location@plt>
   118f8:	ldr	r1, [r0]
   118fc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   11900:	movw	r0, #0
   11904:	movw	lr, #3
   11908:	str	r1, [sp, #12]
   1190c:	mov	r1, lr
   11910:	bl	167a8 <__assert_fail@plt+0x56c0>
   11914:	movw	r1, #1
   11918:	str	r0, [sp, #8]
   1191c:	mov	r0, r1
   11920:	ldr	r1, [sp, #12]
   11924:	movw	r2, #60416	; 0xec00
   11928:	movt	r2, #1
   1192c:	ldr	r3, [sp, #8]
   11930:	bl	10f80 <error@plt>
   11934:	b	11938 <__assert_fail@plt+0x850>
   11938:	ldr	r0, [fp, #-20]	; 0xffffffec
   1193c:	movw	r1, #2
   11940:	bl	13e7c <__assert_fail@plt+0x2d94>
   11944:	ldrb	r0, [fp, #-25]	; 0xffffffe7
   11948:	tst	r0, #1
   1194c:	beq	11974 <__assert_fail@plt+0x88c>
   11950:	ldr	r0, [fp, #-20]	; 0xffffffec
   11954:	ldr	r1, [fp, #-24]	; 0xffffffe8
   11958:	movw	r2, #340	; 0x154
   1195c:	movt	r2, #3
   11960:	ldr	r2, [r2]
   11964:	ldrb	r3, [fp, #-26]	; 0xffffffe6
   11968:	and	r3, r3, #1
   1196c:	bl	1199c <__assert_fail@plt+0x8b4>
   11970:	b	11990 <__assert_fail@plt+0x8a8>
   11974:	ldr	r0, [fp, #-20]	; 0xffffffec
   11978:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1197c:	movw	r2, #340	; 0x154
   11980:	movt	r2, #3
   11984:	ldr	r2, [r2]
   11988:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1198c:	bl	11d28 <__assert_fail@plt+0xc40>
   11990:	ldr	r0, [fp, #-4]
   11994:	mov	sp, fp
   11998:	pop	{fp, pc}
   1199c:	push	{fp, lr}
   119a0:	mov	fp, sp
   119a4:	sub	sp, sp, #104	; 0x68
   119a8:	str	r0, [fp, #-4]
   119ac:	str	r1, [fp, #-8]
   119b0:	str	r2, [fp, #-12]
   119b4:	and	r0, r3, #1
   119b8:	strb	r0, [fp, #-13]
   119bc:	movw	r0, #4096	; 0x1000
   119c0:	bl	187c8 <__assert_fail@plt+0x76e0>
   119c4:	str	r0, [fp, #-20]	; 0xffffffec
   119c8:	movw	r0, #3072	; 0xc00
   119cc:	bl	187c8 <__assert_fail@plt+0x76e0>
   119d0:	str	r0, [fp, #-24]	; 0xffffffe8
   119d4:	sub	r0, fp, #36	; 0x24
   119d8:	bl	13408 <__assert_fail@plt+0x2320>
   119dc:	movw	r0, #0
   119e0:	str	r0, [fp, #-28]	; 0xffffffe4
   119e4:	ldr	r0, [fp, #-20]	; 0xffffffec
   119e8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   119ec:	add	r0, r0, r1
   119f0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   119f4:	movw	r2, #4096	; 0x1000
   119f8:	sub	r2, r2, r1
   119fc:	ldr	r3, [fp, #-4]
   11a00:	movw	r1, #1
   11a04:	bl	110ac <fread_unlocked@plt>
   11a08:	str	r0, [fp, #-44]	; 0xffffffd4
   11a0c:	ldrb	r0, [fp, #-13]
   11a10:	tst	r0, #1
   11a14:	beq	11afc <__assert_fail@plt+0xa14>
   11a18:	movw	r0, #0
   11a1c:	str	r0, [fp, #-48]	; 0xffffffd0
   11a20:	ldr	r0, [fp, #-44]	; 0xffffffd4
   11a24:	cmp	r0, #0
   11a28:	movw	r0, #0
   11a2c:	str	r0, [sp, #44]	; 0x2c
   11a30:	ble	11a4c <__assert_fail@plt+0x964>
   11a34:	ldr	r0, [fp, #-48]	; 0xffffffd0
   11a38:	ldr	r1, [fp, #-44]	; 0xffffffd4
   11a3c:	cmp	r0, r1
   11a40:	movw	r0, #0
   11a44:	movlt	r0, #1
   11a48:	str	r0, [sp, #44]	; 0x2c
   11a4c:	ldr	r0, [sp, #44]	; 0x2c
   11a50:	tst	r0, #1
   11a54:	beq	11af8 <__assert_fail@plt+0xa10>
   11a58:	ldr	r0, [fp, #-20]	; 0xffffffec
   11a5c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   11a60:	ldr	r2, [fp, #-48]	; 0xffffffd0
   11a64:	add	r1, r1, r2
   11a68:	add	r0, r0, r1
   11a6c:	ldrb	r0, [r0]
   11a70:	bl	133c0 <__assert_fail@plt+0x22d8>
   11a74:	tst	r0, #1
   11a78:	bne	11a9c <__assert_fail@plt+0x9b4>
   11a7c:	ldr	r0, [fp, #-20]	; 0xffffffec
   11a80:	ldr	r1, [fp, #-28]	; 0xffffffe4
   11a84:	ldr	r2, [fp, #-48]	; 0xffffffd0
   11a88:	add	r1, r1, r2
   11a8c:	add	r0, r0, r1
   11a90:	ldrb	r0, [r0]
   11a94:	cmp	r0, #61	; 0x3d
   11a98:	bne	11aac <__assert_fail@plt+0x9c4>
   11a9c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   11aa0:	add	r0, r0, #1
   11aa4:	str	r0, [fp, #-48]	; 0xffffffd0
   11aa8:	b	11af4 <__assert_fail@plt+0xa0c>
   11aac:	ldr	r0, [fp, #-20]	; 0xffffffec
   11ab0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   11ab4:	add	r0, r0, r1
   11ab8:	ldr	r1, [fp, #-48]	; 0xffffffd0
   11abc:	add	r0, r0, r1
   11ac0:	ldr	r1, [fp, #-20]	; 0xffffffec
   11ac4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   11ac8:	add	r1, r1, r2
   11acc:	ldr	r2, [fp, #-48]	; 0xffffffd0
   11ad0:	add	r1, r1, r2
   11ad4:	add	r1, r1, #1
   11ad8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   11adc:	mvn	r3, #0
   11ae0:	add	r2, r2, r3
   11ae4:	str	r2, [fp, #-44]	; 0xffffffd4
   11ae8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   11aec:	sub	r2, r2, r3
   11af0:	bl	10ec0 <memmove@plt>
   11af4:	b	11a20 <__assert_fail@plt+0x938>
   11af8:	b	11afc <__assert_fail@plt+0xa14>
   11afc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   11b00:	ldr	r1, [fp, #-28]	; 0xffffffe4
   11b04:	add	r0, r1, r0
   11b08:	str	r0, [fp, #-28]	; 0xffffffe4
   11b0c:	ldr	r0, [fp, #-4]
   11b10:	bl	10f68 <ferror_unlocked@plt>
   11b14:	cmp	r0, #0
   11b18:	beq	11b4c <__assert_fail@plt+0xa64>
   11b1c:	bl	11010 <__errno_location@plt>
   11b20:	ldr	r1, [r0]
   11b24:	movw	r0, #60969	; 0xee29
   11b28:	movt	r0, #1
   11b2c:	str	r1, [sp, #40]	; 0x28
   11b30:	bl	10fe0 <gettext@plt>
   11b34:	movw	r1, #1
   11b38:	str	r0, [sp, #36]	; 0x24
   11b3c:	mov	r0, r1
   11b40:	ldr	r1, [sp, #40]	; 0x28
   11b44:	ldr	r2, [sp, #36]	; 0x24
   11b48:	bl	10f80 <error@plt>
   11b4c:	b	11b50 <__assert_fail@plt+0xa68>
   11b50:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11b54:	cmp	r0, #4096	; 0x1000
   11b58:	movw	r0, #0
   11b5c:	str	r0, [sp, #32]
   11b60:	bge	11b84 <__assert_fail@plt+0xa9c>
   11b64:	ldr	r0, [fp, #-4]
   11b68:	bl	110dc <feof_unlocked@plt>
   11b6c:	cmp	r0, #0
   11b70:	movw	r0, #0
   11b74:	movne	r0, #1
   11b78:	mvn	lr, #0
   11b7c:	eor	r0, r0, lr
   11b80:	str	r0, [sp, #32]
   11b84:	ldr	r0, [sp, #32]
   11b88:	tst	r0, #1
   11b8c:	bne	119e4 <__assert_fail@plt+0x8fc>
   11b90:	movw	r0, #0
   11b94:	str	r0, [sp, #52]	; 0x34
   11b98:	ldr	r0, [sp, #52]	; 0x34
   11b9c:	ldr	r1, [fp, #-4]
   11ba0:	str	r0, [sp, #28]
   11ba4:	mov	r0, r1
   11ba8:	bl	110dc <feof_unlocked@plt>
   11bac:	cmp	r0, #0
   11bb0:	movw	r0, #0
   11bb4:	movne	r0, #1
   11bb8:	mvn	r1, #0
   11bbc:	eor	r0, r0, r1
   11bc0:	eor	r0, r0, r1
   11bc4:	and	r0, r0, #1
   11bc8:	add	r0, r0, #1
   11bcc:	ldr	r1, [sp, #28]
   11bd0:	cmp	r1, r0
   11bd4:	bge	11cec <__assert_fail@plt+0xc04>
   11bd8:	ldr	r0, [sp, #52]	; 0x34
   11bdc:	cmp	r0, #1
   11be0:	bne	11bf4 <__assert_fail@plt+0xb0c>
   11be4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   11be8:	cmp	r0, #0
   11bec:	bne	11bf4 <__assert_fail@plt+0xb0c>
   11bf0:	b	11cec <__assert_fail@plt+0xc04>
   11bf4:	movw	r0, #3072	; 0xc00
   11bf8:	str	r0, [sp, #48]	; 0x30
   11bfc:	ldr	r1, [fp, #-20]	; 0xffffffec
   11c00:	ldr	r0, [sp, #52]	; 0x34
   11c04:	cmp	r0, #0
   11c08:	str	r1, [sp, #24]
   11c0c:	bne	11c1c <__assert_fail@plt+0xb34>
   11c10:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11c14:	str	r0, [sp, #20]
   11c18:	b	11c28 <__assert_fail@plt+0xb40>
   11c1c:	movw	r0, #0
   11c20:	str	r0, [sp, #20]
   11c24:	b	11c28 <__assert_fail@plt+0xb40>
   11c28:	ldr	r0, [sp, #20]
   11c2c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11c30:	sub	r1, fp, #36	; 0x24
   11c34:	str	r0, [sp, #16]
   11c38:	mov	r0, r1
   11c3c:	ldr	r1, [sp, #24]
   11c40:	ldr	r2, [sp, #16]
   11c44:	add	ip, sp, #48	; 0x30
   11c48:	str	ip, [sp]
   11c4c:	bl	13424 <__assert_fail@plt+0x233c>
   11c50:	and	r0, r0, #1
   11c54:	strb	r0, [fp, #-37]	; 0xffffffdb
   11c58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11c5c:	ldr	r2, [sp, #48]	; 0x30
   11c60:	ldr	r3, [fp, #-12]
   11c64:	movw	r1, #1
   11c68:	bl	10efc <fwrite_unlocked@plt>
   11c6c:	ldr	r1, [sp, #48]	; 0x30
   11c70:	cmp	r0, r1
   11c74:	bcs	11ca8 <__assert_fail@plt+0xbc0>
   11c78:	bl	11010 <__errno_location@plt>
   11c7c:	ldr	r1, [r0]
   11c80:	movw	r0, #60980	; 0xee34
   11c84:	movt	r0, #1
   11c88:	str	r1, [sp, #12]
   11c8c:	bl	10fe0 <gettext@plt>
   11c90:	movw	r1, #1
   11c94:	str	r0, [sp, #8]
   11c98:	mov	r0, r1
   11c9c:	ldr	r1, [sp, #12]
   11ca0:	ldr	r2, [sp, #8]
   11ca4:	bl	10f80 <error@plt>
   11ca8:	ldrb	r0, [fp, #-37]	; 0xffffffdb
   11cac:	tst	r0, #1
   11cb0:	bne	11cd8 <__assert_fail@plt+0xbf0>
   11cb4:	movw	r0, #60992	; 0xee40
   11cb8:	movt	r0, #1
   11cbc:	bl	10fe0 <gettext@plt>
   11cc0:	movw	lr, #1
   11cc4:	str	r0, [sp, #4]
   11cc8:	mov	r0, lr
   11ccc:	movw	r1, #0
   11cd0:	ldr	r2, [sp, #4]
   11cd4:	bl	10f80 <error@plt>
   11cd8:	b	11cdc <__assert_fail@plt+0xbf4>
   11cdc:	ldr	r0, [sp, #52]	; 0x34
   11ce0:	add	r0, r0, #1
   11ce4:	str	r0, [sp, #52]	; 0x34
   11ce8:	b	11b98 <__assert_fail@plt+0xab0>
   11cec:	b	11cf0 <__assert_fail@plt+0xc08>
   11cf0:	ldr	r0, [fp, #-4]
   11cf4:	bl	110dc <feof_unlocked@plt>
   11cf8:	cmp	r0, #0
   11cfc:	movw	r0, #0
   11d00:	movne	r0, #1
   11d04:	mvn	lr, #0
   11d08:	eor	r0, r0, lr
   11d0c:	tst	r0, #1
   11d10:	bne	119dc <__assert_fail@plt+0x8f4>
   11d14:	ldr	r0, [fp, #-4]
   11d18:	ldr	r1, [fp, #-8]
   11d1c:	bl	11f6c <__assert_fail@plt+0xe84>
   11d20:	mov	sp, fp
   11d24:	pop	{fp, pc}
   11d28:	push	{fp, lr}
   11d2c:	mov	fp, sp
   11d30:	sub	sp, sp, #72	; 0x48
   11d34:	str	r0, [fp, #-4]
   11d38:	str	r1, [fp, #-8]
   11d3c:	str	r2, [fp, #-12]
   11d40:	str	r3, [fp, #-16]
   11d44:	movw	r0, #0
   11d48:	str	r0, [fp, #-20]	; 0xffffffec
   11d4c:	movw	r0, #30720	; 0x7800
   11d50:	bl	187c8 <__assert_fail@plt+0x76e0>
   11d54:	str	r0, [fp, #-24]	; 0xffffffe8
   11d58:	movw	r0, #40960	; 0xa000
   11d5c:	bl	187c8 <__assert_fail@plt+0x76e0>
   11d60:	str	r0, [fp, #-28]	; 0xffffffe4
   11d64:	movw	r0, #0
   11d68:	str	r0, [fp, #-32]	; 0xffffffe0
   11d6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11d70:	ldr	r1, [fp, #-32]	; 0xffffffe0
   11d74:	add	r0, r0, r1
   11d78:	ldr	r1, [fp, #-32]	; 0xffffffe0
   11d7c:	movw	r2, #30720	; 0x7800
   11d80:	sub	r2, r2, r1
   11d84:	ldr	r3, [fp, #-4]
   11d88:	movw	r1, #1
   11d8c:	bl	110ac <fread_unlocked@plt>
   11d90:	str	r0, [sp, #36]	; 0x24
   11d94:	ldr	r0, [sp, #36]	; 0x24
   11d98:	ldr	r1, [fp, #-32]	; 0xffffffe0
   11d9c:	add	r0, r1, r0
   11da0:	str	r0, [fp, #-32]	; 0xffffffe0
   11da4:	ldr	r0, [fp, #-4]
   11da8:	bl	110dc <feof_unlocked@plt>
   11dac:	cmp	r0, #0
   11db0:	movw	r0, #0
   11db4:	str	r0, [sp, #32]
   11db8:	bne	11de8 <__assert_fail@plt+0xd00>
   11dbc:	ldr	r0, [fp, #-4]
   11dc0:	bl	10f68 <ferror_unlocked@plt>
   11dc4:	cmp	r0, #0
   11dc8:	movw	r0, #0
   11dcc:	str	r0, [sp, #32]
   11dd0:	bne	11de8 <__assert_fail@plt+0xd00>
   11dd4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11dd8:	cmp	r0, #30720	; 0x7800
   11ddc:	movw	r0, #0
   11de0:	movlt	r0, #1
   11de4:	str	r0, [sp, #32]
   11de8:	ldr	r0, [sp, #32]
   11dec:	tst	r0, #1
   11df0:	bne	11d6c <__assert_fail@plt+0xc84>
   11df4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11df8:	cmp	r0, #0
   11dfc:	ble	11e68 <__assert_fail@plt+0xd80>
   11e00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11e04:	ldr	r1, [fp, #-32]	; 0xffffffe0
   11e08:	ldr	r2, [fp, #-28]	; 0xffffffe4
   11e0c:	add	r3, r1, #2
   11e10:	movw	ip, #21846	; 0x5556
   11e14:	movt	ip, #21845	; 0x5555
   11e18:	smmul	r3, r3, ip
   11e1c:	add	r3, r3, r3, lsr #31
   11e20:	lsl	r3, r3, #2
   11e24:	str	ip, [sp, #28]
   11e28:	bl	1220c <__assert_fail@plt+0x1124>
   11e2c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11e30:	ldr	r1, [fp, #-32]	; 0xffffffe0
   11e34:	add	r1, r1, #2
   11e38:	ldr	r2, [sp, #28]
   11e3c:	smmul	r1, r1, r2
   11e40:	add	r1, r1, r1, lsr #31
   11e44:	lsl	r1, r1, #2
   11e48:	ldr	r2, [fp, #-16]
   11e4c:	ldr	r3, [fp, #-12]
   11e50:	sub	ip, fp, #20
   11e54:	str	r3, [sp, #24]
   11e58:	mov	r3, ip
   11e5c:	ldr	ip, [sp, #24]
   11e60:	str	ip, [sp]
   11e64:	bl	12020 <__assert_fail@plt+0xf38>
   11e68:	b	11e6c <__assert_fail@plt+0xd84>
   11e6c:	ldr	r0, [fp, #-4]
   11e70:	bl	110dc <feof_unlocked@plt>
   11e74:	cmp	r0, #0
   11e78:	movw	r0, #0
   11e7c:	str	r0, [sp, #20]
   11e80:	bne	11eb0 <__assert_fail@plt+0xdc8>
   11e84:	ldr	r0, [fp, #-4]
   11e88:	bl	10f68 <ferror_unlocked@plt>
   11e8c:	cmp	r0, #0
   11e90:	movw	r0, #0
   11e94:	str	r0, [sp, #20]
   11e98:	bne	11eb0 <__assert_fail@plt+0xdc8>
   11e9c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11ea0:	cmp	r0, #30720	; 0x7800
   11ea4:	movw	r0, #0
   11ea8:	moveq	r0, #1
   11eac:	str	r0, [sp, #20]
   11eb0:	ldr	r0, [sp, #20]
   11eb4:	tst	r0, #1
   11eb8:	bne	11d64 <__assert_fail@plt+0xc7c>
   11ebc:	ldr	r0, [fp, #-16]
   11ec0:	cmp	r0, #0
   11ec4:	beq	11f18 <__assert_fail@plt+0xe30>
   11ec8:	ldr	r0, [fp, #-20]	; 0xffffffec
   11ecc:	cmp	r0, #0
   11ed0:	ble	11f18 <__assert_fail@plt+0xe30>
   11ed4:	ldr	r1, [fp, #-12]
   11ed8:	movw	r0, #10
   11edc:	bl	10f14 <fputc_unlocked@plt>
   11ee0:	cmn	r0, #1
   11ee4:	bne	11f18 <__assert_fail@plt+0xe30>
   11ee8:	bl	11010 <__errno_location@plt>
   11eec:	ldr	r1, [r0]
   11ef0:	movw	r0, #60980	; 0xee34
   11ef4:	movt	r0, #1
   11ef8:	str	r1, [sp, #16]
   11efc:	bl	10fe0 <gettext@plt>
   11f00:	movw	r1, #1
   11f04:	str	r0, [sp, #12]
   11f08:	mov	r0, r1
   11f0c:	ldr	r1, [sp, #16]
   11f10:	ldr	r2, [sp, #12]
   11f14:	bl	10f80 <error@plt>
   11f18:	ldr	r0, [fp, #-4]
   11f1c:	bl	10f68 <ferror_unlocked@plt>
   11f20:	cmp	r0, #0
   11f24:	beq	11f58 <__assert_fail@plt+0xe70>
   11f28:	bl	11010 <__errno_location@plt>
   11f2c:	ldr	r1, [r0]
   11f30:	movw	r0, #60969	; 0xee29
   11f34:	movt	r0, #1
   11f38:	str	r1, [sp, #8]
   11f3c:	bl	10fe0 <gettext@plt>
   11f40:	movw	r1, #1
   11f44:	str	r0, [sp, #4]
   11f48:	mov	r0, r1
   11f4c:	ldr	r1, [sp, #8]
   11f50:	ldr	r2, [sp, #4]
   11f54:	bl	10f80 <error@plt>
   11f58:	ldr	r0, [fp, #-4]
   11f5c:	ldr	r1, [fp, #-8]
   11f60:	bl	11f6c <__assert_fail@plt+0xe84>
   11f64:	mov	sp, fp
   11f68:	pop	{fp, pc}
   11f6c:	push	{fp, lr}
   11f70:	mov	fp, sp
   11f74:	sub	sp, sp, #24
   11f78:	str	r0, [fp, #-4]
   11f7c:	str	r1, [fp, #-8]
   11f80:	ldr	r0, [fp, #-4]
   11f84:	bl	13ed4 <__assert_fail@plt+0x2dec>
   11f88:	cmp	r0, #0
   11f8c:	beq	12018 <__assert_fail@plt+0xf30>
   11f90:	ldr	r0, [fp, #-8]
   11f94:	movw	r1, #61585	; 0xf091
   11f98:	movt	r1, #1
   11f9c:	bl	10e90 <strcmp@plt>
   11fa0:	cmp	r0, #0
   11fa4:	bne	11fd8 <__assert_fail@plt+0xef0>
   11fa8:	bl	11010 <__errno_location@plt>
   11fac:	ldr	r1, [r0]
   11fb0:	movw	r0, #61006	; 0xee4e
   11fb4:	movt	r0, #1
   11fb8:	str	r1, [sp, #12]
   11fbc:	bl	10fe0 <gettext@plt>
   11fc0:	movw	r1, #1
   11fc4:	str	r0, [sp, #8]
   11fc8:	mov	r0, r1
   11fcc:	ldr	r1, [sp, #12]
   11fd0:	ldr	r2, [sp, #8]
   11fd4:	bl	10f80 <error@plt>
   11fd8:	bl	11010 <__errno_location@plt>
   11fdc:	ldr	r1, [r0]
   11fe0:	ldr	r2, [fp, #-8]
   11fe4:	movw	r0, #0
   11fe8:	movw	lr, #3
   11fec:	str	r1, [sp, #4]
   11ff0:	mov	r1, lr
   11ff4:	bl	167a8 <__assert_fail@plt+0x56c0>
   11ff8:	movw	r1, #1
   11ffc:	str	r0, [sp]
   12000:	mov	r0, r1
   12004:	ldr	r1, [sp, #4]
   12008:	movw	r2, #60416	; 0xec00
   1200c:	movt	r2, #1
   12010:	ldr	r3, [sp]
   12014:	bl	10f80 <error@plt>
   12018:	movw	r0, #0
   1201c:	bl	10fd4 <exit@plt>
   12020:	push	{fp, lr}
   12024:	mov	fp, sp
   12028:	sub	sp, sp, #56	; 0x38
   1202c:	ldr	ip, [fp, #8]
   12030:	str	r0, [fp, #-4]
   12034:	str	r1, [fp, #-8]
   12038:	str	r2, [fp, #-12]
   1203c:	str	r3, [fp, #-16]
   12040:	ldr	r0, [fp, #-12]
   12044:	cmp	r0, #0
   12048:	str	ip, [sp, #28]
   1204c:	bne	120ac <__assert_fail@plt+0xfc4>
   12050:	ldr	r0, [fp, #-4]
   12054:	ldr	r2, [fp, #-8]
   12058:	movw	r1, #340	; 0x154
   1205c:	movt	r1, #3
   12060:	ldr	r3, [r1]
   12064:	movw	r1, #1
   12068:	bl	10efc <fwrite_unlocked@plt>
   1206c:	ldr	r1, [fp, #-8]
   12070:	cmp	r0, r1
   12074:	bcs	120a8 <__assert_fail@plt+0xfc0>
   12078:	bl	11010 <__errno_location@plt>
   1207c:	ldr	r1, [r0]
   12080:	movw	r0, #60980	; 0xee34
   12084:	movt	r0, #1
   12088:	str	r1, [sp, #24]
   1208c:	bl	10fe0 <gettext@plt>
   12090:	movw	r1, #1
   12094:	str	r0, [sp, #20]
   12098:	mov	r0, r1
   1209c:	ldr	r1, [sp, #24]
   120a0:	ldr	r2, [sp, #20]
   120a4:	bl	10f80 <error@plt>
   120a8:	b	12204 <__assert_fail@plt+0x111c>
   120ac:	movw	r0, #0
   120b0:	str	r0, [fp, #-20]	; 0xffffffec
   120b4:	ldr	r0, [fp, #-20]	; 0xffffffec
   120b8:	ldr	r1, [fp, #-8]
   120bc:	cmp	r0, r1
   120c0:	bge	12200 <__assert_fail@plt+0x1118>
   120c4:	ldr	r0, [fp, #-12]
   120c8:	ldr	r1, [fp, #-16]
   120cc:	ldr	r1, [r1]
   120d0:	sub	r0, r0, r1
   120d4:	ldr	r1, [fp, #-8]
   120d8:	ldr	r2, [fp, #-20]	; 0xffffffec
   120dc:	sub	r1, r1, r2
   120e0:	cmp	r0, r1
   120e4:	bge	12100 <__assert_fail@plt+0x1018>
   120e8:	ldr	r0, [fp, #-12]
   120ec:	ldr	r1, [fp, #-16]
   120f0:	ldr	r1, [r1]
   120f4:	sub	r0, r0, r1
   120f8:	str	r0, [sp, #16]
   120fc:	b	12110 <__assert_fail@plt+0x1028>
   12100:	ldr	r0, [fp, #-8]
   12104:	ldr	r1, [fp, #-20]	; 0xffffffec
   12108:	sub	r0, r0, r1
   1210c:	str	r0, [sp, #16]
   12110:	ldr	r0, [sp, #16]
   12114:	str	r0, [fp, #-24]	; 0xffffffe8
   12118:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1211c:	cmp	r0, #0
   12120:	bne	12178 <__assert_fail@plt+0x1090>
   12124:	ldr	r1, [fp, #8]
   12128:	movw	r0, #10
   1212c:	bl	10f14 <fputc_unlocked@plt>
   12130:	cmn	r0, #1
   12134:	bne	12168 <__assert_fail@plt+0x1080>
   12138:	bl	11010 <__errno_location@plt>
   1213c:	ldr	r1, [r0]
   12140:	movw	r0, #60980	; 0xee34
   12144:	movt	r0, #1
   12148:	str	r1, [sp, #12]
   1214c:	bl	10fe0 <gettext@plt>
   12150:	movw	r1, #1
   12154:	str	r0, [sp, #8]
   12158:	mov	r0, r1
   1215c:	ldr	r1, [sp, #12]
   12160:	ldr	r2, [sp, #8]
   12164:	bl	10f80 <error@plt>
   12168:	ldr	r0, [fp, #-16]
   1216c:	movw	r1, #0
   12170:	str	r1, [r0]
   12174:	b	121fc <__assert_fail@plt+0x1114>
   12178:	ldr	r0, [fp, #-4]
   1217c:	ldr	r1, [fp, #-20]	; 0xffffffec
   12180:	add	r0, r0, r1
   12184:	ldr	r2, [fp, #-24]	; 0xffffffe8
   12188:	movw	r1, #340	; 0x154
   1218c:	movt	r1, #3
   12190:	ldr	r3, [r1]
   12194:	movw	r1, #1
   12198:	bl	10efc <fwrite_unlocked@plt>
   1219c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   121a0:	cmp	r0, r1
   121a4:	bcs	121d8 <__assert_fail@plt+0x10f0>
   121a8:	bl	11010 <__errno_location@plt>
   121ac:	ldr	r1, [r0]
   121b0:	movw	r0, #60980	; 0xee34
   121b4:	movt	r0, #1
   121b8:	str	r1, [sp, #4]
   121bc:	bl	10fe0 <gettext@plt>
   121c0:	movw	r1, #1
   121c4:	str	r0, [sp]
   121c8:	mov	r0, r1
   121cc:	ldr	r1, [sp, #4]
   121d0:	ldr	r2, [sp]
   121d4:	bl	10f80 <error@plt>
   121d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   121dc:	ldr	r1, [fp, #-16]
   121e0:	ldr	r2, [r1]
   121e4:	add	r0, r2, r0
   121e8:	str	r0, [r1]
   121ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   121f0:	ldr	r1, [fp, #-20]	; 0xffffffec
   121f4:	add	r0, r1, r0
   121f8:	str	r0, [fp, #-20]	; 0xffffffec
   121fc:	b	120b4 <__assert_fail@plt+0xfcc>
   12200:	b	12204 <__assert_fail@plt+0x111c>
   12204:	mov	sp, fp
   12208:	pop	{fp, pc}
   1220c:	push	{fp, lr}
   12210:	mov	fp, sp
   12214:	sub	sp, sp, #48	; 0x30
   12218:	str	r0, [fp, #-4]
   1221c:	str	r1, [fp, #-8]
   12220:	str	r2, [fp, #-12]
   12224:	str	r3, [fp, #-16]
   12228:	ldr	r0, [fp, #-16]
   1222c:	asr	r1, r0, #31
   12230:	add	r1, r0, r1, lsr #30
   12234:	bic	r1, r1, #3
   12238:	sub	r0, r0, r1
   1223c:	cmp	r0, #0
   12240:	bne	12274 <__assert_fail@plt+0x118c>
   12244:	ldr	r0, [fp, #-8]
   12248:	ldr	r1, [fp, #-16]
   1224c:	asr	r1, r1, #2
   12250:	movw	r2, #3
   12254:	mul	r1, r1, r2
   12258:	cmp	r0, r1
   1225c:	bne	12274 <__assert_fail@plt+0x118c>
   12260:	ldr	r0, [fp, #-4]
   12264:	ldr	r1, [fp, #-8]
   12268:	ldr	r2, [fp, #-12]
   1226c:	bl	12538 <__assert_fail@plt+0x1450>
   12270:	b	12530 <__assert_fail@plt+0x1448>
   12274:	b	12278 <__assert_fail@plt+0x1190>
   12278:	ldr	r0, [fp, #-8]
   1227c:	cmp	r0, #0
   12280:	movw	r0, #0
   12284:	str	r0, [fp, #-20]	; 0xffffffec
   12288:	beq	122a0 <__assert_fail@plt+0x11b8>
   1228c:	ldr	r0, [fp, #-16]
   12290:	cmp	r0, #0
   12294:	movw	r0, #0
   12298:	movne	r0, #1
   1229c:	str	r0, [fp, #-20]	; 0xffffffec
   122a0:	ldr	r0, [fp, #-20]	; 0xffffffec
   122a4:	tst	r0, #1
   122a8:	beq	12518 <__assert_fail@plt+0x1430>
   122ac:	ldr	r0, [fp, #-4]
   122b0:	ldrb	r0, [r0]
   122b4:	bl	126a4 <__assert_fail@plt+0x15bc>
   122b8:	and	r0, r0, #255	; 0xff
   122bc:	asr	r0, r0, #2
   122c0:	and	r0, r0, #63	; 0x3f
   122c4:	movw	lr, #61199	; 0xef0f
   122c8:	movt	lr, #1
   122cc:	add	r0, lr, r0
   122d0:	ldrb	r0, [r0]
   122d4:	ldr	lr, [fp, #-12]
   122d8:	add	r1, lr, #1
   122dc:	str	r1, [fp, #-12]
   122e0:	strb	r0, [lr]
   122e4:	ldr	r0, [fp, #-16]
   122e8:	mvn	r1, #0
   122ec:	add	r0, r0, r1
   122f0:	str	r0, [fp, #-16]
   122f4:	cmp	r0, #0
   122f8:	bne	12300 <__assert_fail@plt+0x1218>
   122fc:	b	12518 <__assert_fail@plt+0x1430>
   12300:	ldr	r0, [fp, #-4]
   12304:	ldrb	r0, [r0]
   12308:	bl	126a4 <__assert_fail@plt+0x15bc>
   1230c:	and	r0, r0, #255	; 0xff
   12310:	lsl	r0, r0, #4
   12314:	ldr	lr, [fp, #-8]
   12318:	mvn	r1, #0
   1231c:	add	r1, lr, r1
   12320:	str	r1, [fp, #-8]
   12324:	cmp	r1, #0
   12328:	str	r0, [sp, #24]
   1232c:	beq	1234c <__assert_fail@plt+0x1264>
   12330:	ldr	r0, [fp, #-4]
   12334:	ldrb	r0, [r0, #1]
   12338:	bl	126a4 <__assert_fail@plt+0x15bc>
   1233c:	and	r0, r0, #255	; 0xff
   12340:	asr	r0, r0, #4
   12344:	str	r0, [sp, #20]
   12348:	b	12358 <__assert_fail@plt+0x1270>
   1234c:	movw	r0, #0
   12350:	str	r0, [sp, #20]
   12354:	b	12358 <__assert_fail@plt+0x1270>
   12358:	ldr	r0, [sp, #20]
   1235c:	ldr	r1, [sp, #24]
   12360:	add	r0, r1, r0
   12364:	and	r0, r0, #63	; 0x3f
   12368:	movw	r2, #61199	; 0xef0f
   1236c:	movt	r2, #1
   12370:	add	r0, r2, r0
   12374:	ldrb	r0, [r0]
   12378:	ldr	r2, [fp, #-12]
   1237c:	add	r3, r2, #1
   12380:	str	r3, [fp, #-12]
   12384:	strb	r0, [r2]
   12388:	ldr	r0, [fp, #-16]
   1238c:	mvn	r2, #0
   12390:	add	r0, r0, r2
   12394:	str	r0, [fp, #-16]
   12398:	cmp	r0, #0
   1239c:	bne	123a4 <__assert_fail@plt+0x12bc>
   123a0:	b	12518 <__assert_fail@plt+0x1430>
   123a4:	ldr	r0, [fp, #-8]
   123a8:	cmp	r0, #0
   123ac:	beq	12430 <__assert_fail@plt+0x1348>
   123b0:	ldr	r0, [fp, #-4]
   123b4:	ldrb	r0, [r0, #1]
   123b8:	bl	126a4 <__assert_fail@plt+0x15bc>
   123bc:	and	r0, r0, #255	; 0xff
   123c0:	lsl	r0, r0, #2
   123c4:	ldr	lr, [fp, #-8]
   123c8:	mvn	r1, #0
   123cc:	add	r1, lr, r1
   123d0:	str	r1, [fp, #-8]
   123d4:	cmp	r1, #0
   123d8:	str	r0, [sp, #16]
   123dc:	beq	123fc <__assert_fail@plt+0x1314>
   123e0:	ldr	r0, [fp, #-4]
   123e4:	ldrb	r0, [r0, #2]
   123e8:	bl	126a4 <__assert_fail@plt+0x15bc>
   123ec:	and	r0, r0, #255	; 0xff
   123f0:	asr	r0, r0, #6
   123f4:	str	r0, [sp, #12]
   123f8:	b	12408 <__assert_fail@plt+0x1320>
   123fc:	movw	r0, #0
   12400:	str	r0, [sp, #12]
   12404:	b	12408 <__assert_fail@plt+0x1320>
   12408:	ldr	r0, [sp, #12]
   1240c:	ldr	r1, [sp, #16]
   12410:	add	r0, r1, r0
   12414:	and	r0, r0, #63	; 0x3f
   12418:	movw	r2, #61199	; 0xef0f
   1241c:	movt	r2, #1
   12420:	add	r0, r2, r0
   12424:	ldrb	r0, [r0]
   12428:	str	r0, [sp, #8]
   1242c:	b	1243c <__assert_fail@plt+0x1354>
   12430:	movw	r0, #61	; 0x3d
   12434:	str	r0, [sp, #8]
   12438:	b	1243c <__assert_fail@plt+0x1354>
   1243c:	ldr	r0, [sp, #8]
   12440:	ldr	r1, [fp, #-12]
   12444:	add	r2, r1, #1
   12448:	str	r2, [fp, #-12]
   1244c:	strb	r0, [r1]
   12450:	ldr	r0, [fp, #-16]
   12454:	mvn	r1, #0
   12458:	add	r0, r0, r1
   1245c:	str	r0, [fp, #-16]
   12460:	cmp	r0, #0
   12464:	bne	1246c <__assert_fail@plt+0x1384>
   12468:	b	12518 <__assert_fail@plt+0x1430>
   1246c:	ldr	r0, [fp, #-8]
   12470:	cmp	r0, #0
   12474:	beq	124a4 <__assert_fail@plt+0x13bc>
   12478:	ldr	r0, [fp, #-4]
   1247c:	ldrb	r0, [r0, #2]
   12480:	bl	126a4 <__assert_fail@plt+0x15bc>
   12484:	and	r0, r0, #255	; 0xff
   12488:	and	r0, r0, #63	; 0x3f
   1248c:	movw	lr, #61199	; 0xef0f
   12490:	movt	lr, #1
   12494:	add	r0, lr, r0
   12498:	ldrb	r0, [r0]
   1249c:	str	r0, [sp, #4]
   124a0:	b	124b0 <__assert_fail@plt+0x13c8>
   124a4:	movw	r0, #61	; 0x3d
   124a8:	str	r0, [sp, #4]
   124ac:	b	124b0 <__assert_fail@plt+0x13c8>
   124b0:	ldr	r0, [sp, #4]
   124b4:	ldr	r1, [fp, #-12]
   124b8:	add	r2, r1, #1
   124bc:	str	r2, [fp, #-12]
   124c0:	strb	r0, [r1]
   124c4:	ldr	r0, [fp, #-16]
   124c8:	mvn	r1, #0
   124cc:	add	r0, r0, r1
   124d0:	str	r0, [fp, #-16]
   124d4:	cmp	r0, #0
   124d8:	bne	124e0 <__assert_fail@plt+0x13f8>
   124dc:	b	12518 <__assert_fail@plt+0x1430>
   124e0:	ldr	r0, [fp, #-8]
   124e4:	cmp	r0, #0
   124e8:	beq	124fc <__assert_fail@plt+0x1414>
   124ec:	ldr	r0, [fp, #-8]
   124f0:	mvn	r1, #0
   124f4:	add	r0, r0, r1
   124f8:	str	r0, [fp, #-8]
   124fc:	ldr	r0, [fp, #-8]
   12500:	cmp	r0, #0
   12504:	beq	12514 <__assert_fail@plt+0x142c>
   12508:	ldr	r0, [fp, #-4]
   1250c:	add	r0, r0, #3
   12510:	str	r0, [fp, #-4]
   12514:	b	12278 <__assert_fail@plt+0x1190>
   12518:	ldr	r0, [fp, #-16]
   1251c:	cmp	r0, #0
   12520:	beq	12530 <__assert_fail@plt+0x1448>
   12524:	ldr	r0, [fp, #-12]
   12528:	movw	r1, #0
   1252c:	strb	r1, [r0]
   12530:	mov	sp, fp
   12534:	pop	{fp, pc}
   12538:	push	{fp, lr}
   1253c:	mov	fp, sp
   12540:	sub	sp, sp, #24
   12544:	str	r0, [fp, #-4]
   12548:	str	r1, [fp, #-8]
   1254c:	str	r2, [sp, #12]
   12550:	ldr	r0, [fp, #-8]
   12554:	cmp	r0, #0
   12558:	beq	1269c <__assert_fail@plt+0x15b4>
   1255c:	ldr	r0, [fp, #-4]
   12560:	ldrb	r0, [r0]
   12564:	bl	126a4 <__assert_fail@plt+0x15bc>
   12568:	and	r0, r0, #255	; 0xff
   1256c:	asr	r0, r0, #2
   12570:	and	r0, r0, #63	; 0x3f
   12574:	movw	lr, #61199	; 0xef0f
   12578:	movt	lr, #1
   1257c:	add	r0, lr, r0
   12580:	ldrb	r0, [r0]
   12584:	ldr	lr, [sp, #12]
   12588:	add	r1, lr, #1
   1258c:	str	r1, [sp, #12]
   12590:	strb	r0, [lr]
   12594:	ldr	r0, [fp, #-4]
   12598:	ldrb	r0, [r0]
   1259c:	bl	126a4 <__assert_fail@plt+0x15bc>
   125a0:	and	r0, r0, #255	; 0xff
   125a4:	lsl	r0, r0, #4
   125a8:	ldr	r1, [fp, #-4]
   125ac:	ldrb	r1, [r1, #1]
   125b0:	str	r0, [sp, #8]
   125b4:	mov	r0, r1
   125b8:	bl	126a4 <__assert_fail@plt+0x15bc>
   125bc:	and	r0, r0, #255	; 0xff
   125c0:	asr	r0, r0, #4
   125c4:	ldr	r1, [sp, #8]
   125c8:	add	r0, r1, r0
   125cc:	and	r0, r0, #63	; 0x3f
   125d0:	movw	r1, #61199	; 0xef0f
   125d4:	movt	r1, #1
   125d8:	add	r0, r1, r0
   125dc:	ldrb	r0, [r0]
   125e0:	ldr	r1, [sp, #12]
   125e4:	add	lr, r1, #1
   125e8:	str	lr, [sp, #12]
   125ec:	strb	r0, [r1]
   125f0:	ldr	r0, [fp, #-4]
   125f4:	ldrb	r0, [r0, #1]
   125f8:	bl	126a4 <__assert_fail@plt+0x15bc>
   125fc:	and	r0, r0, #255	; 0xff
   12600:	lsl	r0, r0, #2
   12604:	ldr	r1, [fp, #-4]
   12608:	ldrb	r1, [r1, #2]
   1260c:	str	r0, [sp, #4]
   12610:	mov	r0, r1
   12614:	bl	126a4 <__assert_fail@plt+0x15bc>
   12618:	and	r0, r0, #255	; 0xff
   1261c:	asr	r0, r0, #6
   12620:	ldr	r1, [sp, #4]
   12624:	add	r0, r1, r0
   12628:	and	r0, r0, #63	; 0x3f
   1262c:	movw	r1, #61199	; 0xef0f
   12630:	movt	r1, #1
   12634:	add	r0, r1, r0
   12638:	ldrb	r0, [r0]
   1263c:	ldr	r1, [sp, #12]
   12640:	add	lr, r1, #1
   12644:	str	lr, [sp, #12]
   12648:	strb	r0, [r1]
   1264c:	ldr	r0, [fp, #-4]
   12650:	ldrb	r0, [r0, #2]
   12654:	bl	126a4 <__assert_fail@plt+0x15bc>
   12658:	and	r0, r0, #255	; 0xff
   1265c:	and	r0, r0, #63	; 0x3f
   12660:	movw	r1, #61199	; 0xef0f
   12664:	movt	r1, #1
   12668:	add	r0, r1, r0
   1266c:	ldrb	r0, [r0]
   12670:	ldr	r1, [sp, #12]
   12674:	add	lr, r1, #1
   12678:	str	lr, [sp, #12]
   1267c:	strb	r0, [r1]
   12680:	ldr	r0, [fp, #-8]
   12684:	sub	r0, r0, #3
   12688:	str	r0, [fp, #-8]
   1268c:	ldr	r0, [fp, #-4]
   12690:	add	r0, r0, #3
   12694:	str	r0, [fp, #-4]
   12698:	b	12550 <__assert_fail@plt+0x1468>
   1269c:	mov	sp, fp
   126a0:	pop	{fp, pc}
   126a4:	sub	sp, sp, #4
   126a8:	strb	r0, [sp, #3]
   126ac:	ldrb	r0, [sp, #3]
   126b0:	add	sp, sp, #4
   126b4:	bx	lr
   126b8:	push	{fp, lr}
   126bc:	mov	fp, sp
   126c0:	sub	sp, sp, #80	; 0x50
   126c4:	str	r0, [fp, #-8]
   126c8:	str	r1, [fp, #-12]
   126cc:	str	r2, [fp, #-16]
   126d0:	ldr	r0, [fp, #-12]
   126d4:	movw	r1, #21846	; 0x5556
   126d8:	movt	r1, #21845	; 0x5555
   126dc:	smmul	r1, r0, r1
   126e0:	add	r1, r1, r1, lsr #31
   126e4:	add	r2, r1, r1, lsl #1
   126e8:	sub	r0, r0, r2
   126ec:	cmp	r0, #0
   126f0:	movw	r0, #0
   126f4:	movne	r0, #1
   126f8:	and	r0, r0, #1
   126fc:	add	r0, r1, r0
   12700:	str	r0, [fp, #-20]	; 0xffffffec
   12704:	b	12970 <__assert_fail@plt+0x1888>
   12708:	b	1270c <__assert_fail@plt+0x1624>
   1270c:	b	127b8 <__assert_fail@plt+0x16d0>
   12710:	ldr	r0, [fp, #-20]	; 0xffffffec
   12714:	cmp	r0, #0
   12718:	bge	1274c <__assert_fail@plt+0x1664>
   1271c:	b	12720 <__assert_fail@plt+0x1638>
   12720:	ldr	r0, [fp, #-20]	; 0xffffffec
   12724:	cmp	r0, #31
   12728:	blt	12818 <__assert_fail@plt+0x1730>
   1272c:	b	1282c <__assert_fail@plt+0x1744>
   12730:	ldr	r0, [fp, #-20]	; 0xffffffec
   12734:	mvn	r1, #0
   12738:	sub	r0, r1, r0
   1273c:	mvn	r1, #30
   12740:	cmp	r1, r0
   12744:	ble	12818 <__assert_fail@plt+0x1730>
   12748:	b	1282c <__assert_fail@plt+0x1744>
   1274c:	b	12750 <__assert_fail@plt+0x1668>
   12750:	b	127a4 <__assert_fail@plt+0x16bc>
   12754:	b	127a4 <__assert_fail@plt+0x16bc>
   12758:	b	127a4 <__assert_fail@plt+0x16bc>
   1275c:	b	12760 <__assert_fail@plt+0x1678>
   12760:	ldr	r0, [fp, #-20]	; 0xffffffec
   12764:	mvn	r1, #127	; 0x7f
   12768:	add	r0, r0, r1
   1276c:	movw	r1, #0
   12770:	cmp	r1, r0
   12774:	blt	12818 <__assert_fail@plt+0x1730>
   12778:	b	1282c <__assert_fail@plt+0x1744>
   1277c:	ldr	r0, [fp, #-20]	; 0xffffffec
   12780:	movw	r1, #0
   12784:	cmp	r1, r0
   12788:	bge	1282c <__assert_fail@plt+0x1744>
   1278c:	ldr	r0, [fp, #-20]	; 0xffffffec
   12790:	sub	r0, r0, #1
   12794:	movw	r1, #127	; 0x7f
   12798:	cmp	r1, r0
   1279c:	blt	12818 <__assert_fail@plt+0x1730>
   127a0:	b	1282c <__assert_fail@plt+0x1744>
   127a4:	ldr	r0, [fp, #-20]	; 0xffffffec
   127a8:	mvn	r1, #31
   127ac:	cmp	r1, r0
   127b0:	blt	12818 <__assert_fail@plt+0x1730>
   127b4:	b	1282c <__assert_fail@plt+0x1744>
   127b8:	b	127c0 <__assert_fail@plt+0x16d8>
   127bc:	b	1282c <__assert_fail@plt+0x1744>
   127c0:	ldr	r0, [fp, #-20]	; 0xffffffec
   127c4:	cmp	r0, #0
   127c8:	bge	12808 <__assert_fail@plt+0x1720>
   127cc:	b	127d0 <__assert_fail@plt+0x16e8>
   127d0:	b	127f0 <__assert_fail@plt+0x1708>
   127d4:	b	127f0 <__assert_fail@plt+0x1708>
   127d8:	ldr	r0, [fp, #-20]	; 0xffffffec
   127dc:	cmn	r0, #1
   127e0:	bne	127f0 <__assert_fail@plt+0x1708>
   127e4:	b	127e8 <__assert_fail@plt+0x1700>
   127e8:	b	1282c <__assert_fail@plt+0x1744>
   127ec:	b	1282c <__assert_fail@plt+0x1744>
   127f0:	ldr	r0, [fp, #-20]	; 0xffffffec
   127f4:	mvn	r1, #127	; 0x7f
   127f8:	sdiv	r0, r1, r0
   127fc:	cmp	r0, #4
   12800:	blt	12818 <__assert_fail@plt+0x1730>
   12804:	b	1282c <__assert_fail@plt+0x1744>
   12808:	ldr	r0, [fp, #-20]	; 0xffffffec
   1280c:	movw	r1, #31
   12810:	cmp	r1, r0
   12814:	bge	1282c <__assert_fail@plt+0x1744>
   12818:	ldr	r0, [fp, #-20]	; 0xffffffec
   1281c:	lsl	r0, r0, #2
   12820:	sxtb	r0, r0
   12824:	str	r0, [fp, #-24]	; 0xffffffe8
   12828:	b	13318 <__assert_fail@plt+0x2230>
   1282c:	ldr	r0, [fp, #-20]	; 0xffffffec
   12830:	lsl	r0, r0, #2
   12834:	sxtb	r0, r0
   12838:	str	r0, [fp, #-24]	; 0xffffffe8
   1283c:	b	1330c <__assert_fail@plt+0x2224>
   12840:	b	128e8 <__assert_fail@plt+0x1800>
   12844:	ldr	r0, [fp, #-20]	; 0xffffffec
   12848:	cmp	r0, #0
   1284c:	bge	12880 <__assert_fail@plt+0x1798>
   12850:	b	12854 <__assert_fail@plt+0x176c>
   12854:	ldr	r0, [fp, #-20]	; 0xffffffec
   12858:	cmp	r0, #63	; 0x3f
   1285c:	blt	12948 <__assert_fail@plt+0x1860>
   12860:	b	1295c <__assert_fail@plt+0x1874>
   12864:	ldr	r0, [fp, #-20]	; 0xffffffec
   12868:	mvn	r1, #0
   1286c:	sub	r0, r1, r0
   12870:	mvn	r1, #62	; 0x3e
   12874:	cmp	r1, r0
   12878:	ble	12948 <__assert_fail@plt+0x1860>
   1287c:	b	1295c <__assert_fail@plt+0x1874>
   12880:	b	12884 <__assert_fail@plt+0x179c>
   12884:	b	128d4 <__assert_fail@plt+0x17ec>
   12888:	b	128d4 <__assert_fail@plt+0x17ec>
   1288c:	b	128d4 <__assert_fail@plt+0x17ec>
   12890:	b	12894 <__assert_fail@plt+0x17ac>
   12894:	ldr	r0, [fp, #-20]	; 0xffffffec
   12898:	add	r0, r0, #0
   1289c:	movw	r1, #0
   128a0:	cmp	r1, r0
   128a4:	blt	12948 <__assert_fail@plt+0x1860>
   128a8:	b	1295c <__assert_fail@plt+0x1874>
   128ac:	ldr	r0, [fp, #-20]	; 0xffffffec
   128b0:	movw	r1, #0
   128b4:	cmp	r1, r0
   128b8:	bge	1295c <__assert_fail@plt+0x1874>
   128bc:	ldr	r0, [fp, #-20]	; 0xffffffec
   128c0:	sub	r0, r0, #1
   128c4:	mvn	r1, #0
   128c8:	cmp	r1, r0
   128cc:	blt	12948 <__assert_fail@plt+0x1860>
   128d0:	b	1295c <__assert_fail@plt+0x1874>
   128d4:	ldr	r0, [fp, #-20]	; 0xffffffec
   128d8:	movw	r1, #0
   128dc:	cmp	r1, r0
   128e0:	blt	12948 <__assert_fail@plt+0x1860>
   128e4:	b	1295c <__assert_fail@plt+0x1874>
   128e8:	b	128f0 <__assert_fail@plt+0x1808>
   128ec:	b	1295c <__assert_fail@plt+0x1874>
   128f0:	ldr	r0, [fp, #-20]	; 0xffffffec
   128f4:	cmp	r0, #0
   128f8:	bge	12938 <__assert_fail@plt+0x1850>
   128fc:	b	12900 <__assert_fail@plt+0x1818>
   12900:	b	12920 <__assert_fail@plt+0x1838>
   12904:	b	12920 <__assert_fail@plt+0x1838>
   12908:	ldr	r0, [fp, #-20]	; 0xffffffec
   1290c:	cmn	r0, #1
   12910:	bne	12920 <__assert_fail@plt+0x1838>
   12914:	b	12918 <__assert_fail@plt+0x1830>
   12918:	b	12948 <__assert_fail@plt+0x1860>
   1291c:	b	12948 <__assert_fail@plt+0x1860>
   12920:	ldr	r0, [fp, #-20]	; 0xffffffec
   12924:	movw	r1, #0
   12928:	sdiv	r0, r1, r0
   1292c:	cmp	r0, #4
   12930:	blt	12948 <__assert_fail@plt+0x1860>
   12934:	b	1295c <__assert_fail@plt+0x1874>
   12938:	ldr	r0, [fp, #-20]	; 0xffffffec
   1293c:	movw	r1, #63	; 0x3f
   12940:	cmp	r1, r0
   12944:	bge	1295c <__assert_fail@plt+0x1874>
   12948:	ldr	r0, [fp, #-20]	; 0xffffffec
   1294c:	lsl	r0, r0, #2
   12950:	and	r0, r0, #255	; 0xff
   12954:	str	r0, [fp, #-24]	; 0xffffffe8
   12958:	b	13318 <__assert_fail@plt+0x2230>
   1295c:	ldr	r0, [fp, #-20]	; 0xffffffec
   12960:	lsl	r0, r0, #2
   12964:	and	r0, r0, #255	; 0xff
   12968:	str	r0, [fp, #-24]	; 0xffffffe8
   1296c:	b	1330c <__assert_fail@plt+0x2224>
   12970:	b	12be4 <__assert_fail@plt+0x1afc>
   12974:	b	12978 <__assert_fail@plt+0x1890>
   12978:	b	12a28 <__assert_fail@plt+0x1940>
   1297c:	ldr	r0, [fp, #-20]	; 0xffffffec
   12980:	cmp	r0, #0
   12984:	bge	129bc <__assert_fail@plt+0x18d4>
   12988:	b	1298c <__assert_fail@plt+0x18a4>
   1298c:	ldr	r0, [fp, #-20]	; 0xffffffec
   12990:	movw	r1, #8191	; 0x1fff
   12994:	cmp	r0, r1
   12998:	blt	12a88 <__assert_fail@plt+0x19a0>
   1299c:	b	12a9c <__assert_fail@plt+0x19b4>
   129a0:	ldr	r0, [pc, #2576]	; 133b8 <__assert_fail@plt+0x22d0>
   129a4:	ldr	r1, [fp, #-20]	; 0xffffffec
   129a8:	mvn	r2, #0
   129ac:	sub	r1, r2, r1
   129b0:	cmp	r0, r1
   129b4:	ble	12a88 <__assert_fail@plt+0x19a0>
   129b8:	b	12a9c <__assert_fail@plt+0x19b4>
   129bc:	b	129c0 <__assert_fail@plt+0x18d8>
   129c0:	b	12a14 <__assert_fail@plt+0x192c>
   129c4:	b	12a14 <__assert_fail@plt+0x192c>
   129c8:	b	12a14 <__assert_fail@plt+0x192c>
   129cc:	b	129d0 <__assert_fail@plt+0x18e8>
   129d0:	ldr	r0, [pc, #2520]	; 133b0 <__assert_fail@plt+0x22c8>
   129d4:	ldr	r1, [fp, #-20]	; 0xffffffec
   129d8:	add	r0, r1, r0
   129dc:	movw	r1, #0
   129e0:	cmp	r1, r0
   129e4:	blt	12a88 <__assert_fail@plt+0x19a0>
   129e8:	b	12a9c <__assert_fail@plt+0x19b4>
   129ec:	ldr	r0, [fp, #-20]	; 0xffffffec
   129f0:	movw	r1, #0
   129f4:	cmp	r1, r0
   129f8:	bge	12a9c <__assert_fail@plt+0x19b4>
   129fc:	ldr	r0, [fp, #-20]	; 0xffffffec
   12a00:	sub	r0, r0, #1
   12a04:	movw	r1, #32767	; 0x7fff
   12a08:	cmp	r1, r0
   12a0c:	blt	12a88 <__assert_fail@plt+0x19a0>
   12a10:	b	12a9c <__assert_fail@plt+0x19b4>
   12a14:	ldr	r0, [pc, #2456]	; 133b4 <__assert_fail@plt+0x22cc>
   12a18:	ldr	r1, [fp, #-20]	; 0xffffffec
   12a1c:	cmp	r0, r1
   12a20:	blt	12a88 <__assert_fail@plt+0x19a0>
   12a24:	b	12a9c <__assert_fail@plt+0x19b4>
   12a28:	b	12a30 <__assert_fail@plt+0x1948>
   12a2c:	b	12a9c <__assert_fail@plt+0x19b4>
   12a30:	ldr	r0, [fp, #-20]	; 0xffffffec
   12a34:	cmp	r0, #0
   12a38:	bge	12a78 <__assert_fail@plt+0x1990>
   12a3c:	b	12a40 <__assert_fail@plt+0x1958>
   12a40:	b	12a60 <__assert_fail@plt+0x1978>
   12a44:	b	12a60 <__assert_fail@plt+0x1978>
   12a48:	ldr	r0, [fp, #-20]	; 0xffffffec
   12a4c:	cmn	r0, #1
   12a50:	bne	12a60 <__assert_fail@plt+0x1978>
   12a54:	b	12a58 <__assert_fail@plt+0x1970>
   12a58:	b	12a9c <__assert_fail@plt+0x19b4>
   12a5c:	b	12a9c <__assert_fail@plt+0x19b4>
   12a60:	ldr	r0, [pc, #2376]	; 133b0 <__assert_fail@plt+0x22c8>
   12a64:	ldr	r1, [fp, #-20]	; 0xffffffec
   12a68:	sdiv	r0, r0, r1
   12a6c:	cmp	r0, #4
   12a70:	blt	12a88 <__assert_fail@plt+0x19a0>
   12a74:	b	12a9c <__assert_fail@plt+0x19b4>
   12a78:	ldr	r0, [fp, #-20]	; 0xffffffec
   12a7c:	movw	r1, #8191	; 0x1fff
   12a80:	cmp	r1, r0
   12a84:	bge	12a9c <__assert_fail@plt+0x19b4>
   12a88:	ldr	r0, [fp, #-20]	; 0xffffffec
   12a8c:	lsl	r0, r0, #2
   12a90:	sxth	r0, r0
   12a94:	str	r0, [fp, #-24]	; 0xffffffe8
   12a98:	b	13318 <__assert_fail@plt+0x2230>
   12a9c:	ldr	r0, [fp, #-20]	; 0xffffffec
   12aa0:	lsl	r0, r0, #2
   12aa4:	sxth	r0, r0
   12aa8:	str	r0, [fp, #-24]	; 0xffffffe8
   12aac:	b	1330c <__assert_fail@plt+0x2224>
   12ab0:	b	12b5c <__assert_fail@plt+0x1a74>
   12ab4:	ldr	r0, [fp, #-20]	; 0xffffffec
   12ab8:	cmp	r0, #0
   12abc:	bge	12af4 <__assert_fail@plt+0x1a0c>
   12ac0:	b	12ac4 <__assert_fail@plt+0x19dc>
   12ac4:	ldr	r0, [fp, #-20]	; 0xffffffec
   12ac8:	movw	r1, #16383	; 0x3fff
   12acc:	cmp	r0, r1
   12ad0:	blt	12bbc <__assert_fail@plt+0x1ad4>
   12ad4:	b	12bd0 <__assert_fail@plt+0x1ae8>
   12ad8:	ldr	r0, [pc, #2268]	; 133bc <__assert_fail@plt+0x22d4>
   12adc:	ldr	r1, [fp, #-20]	; 0xffffffec
   12ae0:	mvn	r2, #0
   12ae4:	sub	r1, r2, r1
   12ae8:	cmp	r0, r1
   12aec:	ble	12bbc <__assert_fail@plt+0x1ad4>
   12af0:	b	12bd0 <__assert_fail@plt+0x1ae8>
   12af4:	b	12af8 <__assert_fail@plt+0x1a10>
   12af8:	b	12b48 <__assert_fail@plt+0x1a60>
   12afc:	b	12b48 <__assert_fail@plt+0x1a60>
   12b00:	b	12b48 <__assert_fail@plt+0x1a60>
   12b04:	b	12b08 <__assert_fail@plt+0x1a20>
   12b08:	ldr	r0, [fp, #-20]	; 0xffffffec
   12b0c:	add	r0, r0, #0
   12b10:	movw	r1, #0
   12b14:	cmp	r1, r0
   12b18:	blt	12bbc <__assert_fail@plt+0x1ad4>
   12b1c:	b	12bd0 <__assert_fail@plt+0x1ae8>
   12b20:	ldr	r0, [fp, #-20]	; 0xffffffec
   12b24:	movw	r1, #0
   12b28:	cmp	r1, r0
   12b2c:	bge	12bd0 <__assert_fail@plt+0x1ae8>
   12b30:	ldr	r0, [fp, #-20]	; 0xffffffec
   12b34:	sub	r0, r0, #1
   12b38:	mvn	r1, #0
   12b3c:	cmp	r1, r0
   12b40:	blt	12bbc <__assert_fail@plt+0x1ad4>
   12b44:	b	12bd0 <__assert_fail@plt+0x1ae8>
   12b48:	ldr	r0, [fp, #-20]	; 0xffffffec
   12b4c:	movw	r1, #0
   12b50:	cmp	r1, r0
   12b54:	blt	12bbc <__assert_fail@plt+0x1ad4>
   12b58:	b	12bd0 <__assert_fail@plt+0x1ae8>
   12b5c:	b	12b64 <__assert_fail@plt+0x1a7c>
   12b60:	b	12bd0 <__assert_fail@plt+0x1ae8>
   12b64:	ldr	r0, [fp, #-20]	; 0xffffffec
   12b68:	cmp	r0, #0
   12b6c:	bge	12bac <__assert_fail@plt+0x1ac4>
   12b70:	b	12b74 <__assert_fail@plt+0x1a8c>
   12b74:	b	12b94 <__assert_fail@plt+0x1aac>
   12b78:	b	12b94 <__assert_fail@plt+0x1aac>
   12b7c:	ldr	r0, [fp, #-20]	; 0xffffffec
   12b80:	cmn	r0, #1
   12b84:	bne	12b94 <__assert_fail@plt+0x1aac>
   12b88:	b	12b8c <__assert_fail@plt+0x1aa4>
   12b8c:	b	12bbc <__assert_fail@plt+0x1ad4>
   12b90:	b	12bbc <__assert_fail@plt+0x1ad4>
   12b94:	ldr	r0, [fp, #-20]	; 0xffffffec
   12b98:	movw	r1, #0
   12b9c:	sdiv	r0, r1, r0
   12ba0:	cmp	r0, #4
   12ba4:	blt	12bbc <__assert_fail@plt+0x1ad4>
   12ba8:	b	12bd0 <__assert_fail@plt+0x1ae8>
   12bac:	ldr	r0, [fp, #-20]	; 0xffffffec
   12bb0:	movw	r1, #16383	; 0x3fff
   12bb4:	cmp	r1, r0
   12bb8:	bge	12bd0 <__assert_fail@plt+0x1ae8>
   12bbc:	ldr	r0, [fp, #-20]	; 0xffffffec
   12bc0:	lsl	r0, r0, #2
   12bc4:	uxth	r0, r0
   12bc8:	str	r0, [fp, #-24]	; 0xffffffe8
   12bcc:	b	13318 <__assert_fail@plt+0x2230>
   12bd0:	ldr	r0, [fp, #-20]	; 0xffffffec
   12bd4:	lsl	r0, r0, #2
   12bd8:	uxth	r0, r0
   12bdc:	str	r0, [fp, #-24]	; 0xffffffe8
   12be0:	b	1330c <__assert_fail@plt+0x2224>
   12be4:	b	12be8 <__assert_fail@plt+0x1b00>
   12be8:	b	12bec <__assert_fail@plt+0x1b04>
   12bec:	b	12c8c <__assert_fail@plt+0x1ba4>
   12bf0:	ldr	r0, [fp, #-20]	; 0xffffffec
   12bf4:	cmp	r0, #0
   12bf8:	bge	12c30 <__assert_fail@plt+0x1b48>
   12bfc:	b	12c00 <__assert_fail@plt+0x1b18>
   12c00:	ldr	r0, [pc, #1940]	; 1339c <__assert_fail@plt+0x22b4>
   12c04:	ldr	r1, [fp, #-20]	; 0xffffffec
   12c08:	cmp	r1, r0
   12c0c:	blt	12ce0 <__assert_fail@plt+0x1bf8>
   12c10:	b	12cf0 <__assert_fail@plt+0x1c08>
   12c14:	ldr	r0, [pc, #1936]	; 133ac <__assert_fail@plt+0x22c4>
   12c18:	ldr	r1, [fp, #-20]	; 0xffffffec
   12c1c:	mvn	r2, #0
   12c20:	sub	r1, r2, r1
   12c24:	cmp	r0, r1
   12c28:	ble	12ce0 <__assert_fail@plt+0x1bf8>
   12c2c:	b	12cf0 <__assert_fail@plt+0x1c08>
   12c30:	b	12c78 <__assert_fail@plt+0x1b90>
   12c34:	b	12c38 <__assert_fail@plt+0x1b50>
   12c38:	ldr	r0, [fp, #-20]	; 0xffffffec
   12c3c:	add	r0, r0, #-2147483648	; 0x80000000
   12c40:	movw	r1, #0
   12c44:	cmp	r1, r0
   12c48:	blt	12ce0 <__assert_fail@plt+0x1bf8>
   12c4c:	b	12cf0 <__assert_fail@plt+0x1c08>
   12c50:	ldr	r0, [fp, #-20]	; 0xffffffec
   12c54:	movw	r1, #0
   12c58:	cmp	r1, r0
   12c5c:	bge	12cf0 <__assert_fail@plt+0x1c08>
   12c60:	ldr	r0, [pc, #1856]	; 133a8 <__assert_fail@plt+0x22c0>
   12c64:	ldr	r1, [fp, #-20]	; 0xffffffec
   12c68:	sub	r1, r1, #1
   12c6c:	cmp	r0, r1
   12c70:	blt	12ce0 <__assert_fail@plt+0x1bf8>
   12c74:	b	12cf0 <__assert_fail@plt+0x1c08>
   12c78:	ldr	r0, [pc, #1828]	; 133a4 <__assert_fail@plt+0x22bc>
   12c7c:	ldr	r1, [fp, #-20]	; 0xffffffec
   12c80:	cmp	r0, r1
   12c84:	blt	12ce0 <__assert_fail@plt+0x1bf8>
   12c88:	b	12cf0 <__assert_fail@plt+0x1c08>
   12c8c:	b	12c94 <__assert_fail@plt+0x1bac>
   12c90:	b	12cf0 <__assert_fail@plt+0x1c08>
   12c94:	ldr	r0, [fp, #-20]	; 0xffffffec
   12c98:	cmp	r0, #0
   12c9c:	bge	12cd0 <__assert_fail@plt+0x1be8>
   12ca0:	ldr	r0, [fp, #-20]	; 0xffffffec
   12ca4:	cmn	r0, #1
   12ca8:	bne	12cb8 <__assert_fail@plt+0x1bd0>
   12cac:	b	12cb0 <__assert_fail@plt+0x1bc8>
   12cb0:	b	12cf0 <__assert_fail@plt+0x1c08>
   12cb4:	b	12cf0 <__assert_fail@plt+0x1c08>
   12cb8:	ldr	r0, [pc, #1760]	; 133a0 <__assert_fail@plt+0x22b8>
   12cbc:	ldr	r1, [fp, #-20]	; 0xffffffec
   12cc0:	sdiv	r0, r0, r1
   12cc4:	cmp	r0, #4
   12cc8:	blt	12ce0 <__assert_fail@plt+0x1bf8>
   12ccc:	b	12cf0 <__assert_fail@plt+0x1c08>
   12cd0:	ldr	r0, [pc, #1732]	; 1339c <__assert_fail@plt+0x22b4>
   12cd4:	ldr	r1, [fp, #-20]	; 0xffffffec
   12cd8:	cmp	r0, r1
   12cdc:	bge	12cf0 <__assert_fail@plt+0x1c08>
   12ce0:	ldr	r0, [fp, #-20]	; 0xffffffec
   12ce4:	lsl	r0, r0, #2
   12ce8:	str	r0, [fp, #-24]	; 0xffffffe8
   12cec:	b	13318 <__assert_fail@plt+0x2230>
   12cf0:	ldr	r0, [fp, #-20]	; 0xffffffec
   12cf4:	lsl	r0, r0, #2
   12cf8:	str	r0, [fp, #-24]	; 0xffffffe8
   12cfc:	b	1330c <__assert_fail@plt+0x2224>
   12d00:	b	12dac <__assert_fail@plt+0x1cc4>
   12d04:	ldr	r0, [fp, #-20]	; 0xffffffec
   12d08:	cmp	r0, #0
   12d0c:	bge	12d44 <__assert_fail@plt+0x1c5c>
   12d10:	b	12d28 <__assert_fail@plt+0x1c40>
   12d14:	ldr	r0, [pc, #1660]	; 13398 <__assert_fail@plt+0x22b0>
   12d18:	ldr	r1, [fp, #-20]	; 0xffffffec
   12d1c:	cmp	r1, r0
   12d20:	bcc	12e0c <__assert_fail@plt+0x1d24>
   12d24:	b	12e1c <__assert_fail@plt+0x1d34>
   12d28:	ldr	r0, [fp, #-20]	; 0xffffffec
   12d2c:	mvn	r1, #0
   12d30:	sub	r0, r1, r0
   12d34:	movw	r1, #1
   12d38:	cmp	r1, r0
   12d3c:	bls	12e0c <__assert_fail@plt+0x1d24>
   12d40:	b	12e1c <__assert_fail@plt+0x1d34>
   12d44:	b	12d48 <__assert_fail@plt+0x1c60>
   12d48:	b	12d98 <__assert_fail@plt+0x1cb0>
   12d4c:	b	12d98 <__assert_fail@plt+0x1cb0>
   12d50:	b	12d98 <__assert_fail@plt+0x1cb0>
   12d54:	b	12d58 <__assert_fail@plt+0x1c70>
   12d58:	ldr	r0, [fp, #-20]	; 0xffffffec
   12d5c:	add	r0, r0, #0
   12d60:	movw	r1, #0
   12d64:	cmp	r1, r0
   12d68:	blt	12e0c <__assert_fail@plt+0x1d24>
   12d6c:	b	12e1c <__assert_fail@plt+0x1d34>
   12d70:	ldr	r0, [fp, #-20]	; 0xffffffec
   12d74:	movw	r1, #0
   12d78:	cmp	r1, r0
   12d7c:	bge	12e1c <__assert_fail@plt+0x1d34>
   12d80:	ldr	r0, [fp, #-20]	; 0xffffffec
   12d84:	sub	r0, r0, #1
   12d88:	mvn	r1, #0
   12d8c:	cmp	r1, r0
   12d90:	blt	12e0c <__assert_fail@plt+0x1d24>
   12d94:	b	12e1c <__assert_fail@plt+0x1d34>
   12d98:	ldr	r0, [fp, #-20]	; 0xffffffec
   12d9c:	movw	r1, #0
   12da0:	cmp	r1, r0
   12da4:	blt	12e0c <__assert_fail@plt+0x1d24>
   12da8:	b	12e1c <__assert_fail@plt+0x1d34>
   12dac:	b	12db4 <__assert_fail@plt+0x1ccc>
   12db0:	b	12e1c <__assert_fail@plt+0x1d34>
   12db4:	ldr	r0, [fp, #-20]	; 0xffffffec
   12db8:	cmp	r0, #0
   12dbc:	bge	12dfc <__assert_fail@plt+0x1d14>
   12dc0:	b	12dc4 <__assert_fail@plt+0x1cdc>
   12dc4:	b	12de4 <__assert_fail@plt+0x1cfc>
   12dc8:	b	12de4 <__assert_fail@plt+0x1cfc>
   12dcc:	ldr	r0, [fp, #-20]	; 0xffffffec
   12dd0:	cmn	r0, #1
   12dd4:	bne	12de4 <__assert_fail@plt+0x1cfc>
   12dd8:	b	12ddc <__assert_fail@plt+0x1cf4>
   12ddc:	b	12e0c <__assert_fail@plt+0x1d24>
   12de0:	b	12e0c <__assert_fail@plt+0x1d24>
   12de4:	ldr	r0, [fp, #-20]	; 0xffffffec
   12de8:	movw	r1, #0
   12dec:	sdiv	r0, r1, r0
   12df0:	cmp	r0, #4
   12df4:	blt	12e0c <__assert_fail@plt+0x1d24>
   12df8:	b	12e1c <__assert_fail@plt+0x1d34>
   12dfc:	ldr	r0, [pc, #1428]	; 13398 <__assert_fail@plt+0x22b0>
   12e00:	ldr	r1, [fp, #-20]	; 0xffffffec
   12e04:	cmp	r0, r1
   12e08:	bcs	12e1c <__assert_fail@plt+0x1d34>
   12e0c:	ldr	r0, [fp, #-20]	; 0xffffffec
   12e10:	lsl	r0, r0, #2
   12e14:	str	r0, [fp, #-24]	; 0xffffffe8
   12e18:	b	13318 <__assert_fail@plt+0x2230>
   12e1c:	ldr	r0, [fp, #-20]	; 0xffffffec
   12e20:	lsl	r0, r0, #2
   12e24:	str	r0, [fp, #-24]	; 0xffffffe8
   12e28:	b	1330c <__assert_fail@plt+0x2224>
   12e2c:	b	12e30 <__assert_fail@plt+0x1d48>
   12e30:	b	12e34 <__assert_fail@plt+0x1d4c>
   12e34:	b	12ed4 <__assert_fail@plt+0x1dec>
   12e38:	ldr	r0, [fp, #-20]	; 0xffffffec
   12e3c:	cmp	r0, #0
   12e40:	bge	12e78 <__assert_fail@plt+0x1d90>
   12e44:	b	12e48 <__assert_fail@plt+0x1d60>
   12e48:	ldr	r0, [pc, #1356]	; 1339c <__assert_fail@plt+0x22b4>
   12e4c:	ldr	r1, [fp, #-20]	; 0xffffffec
   12e50:	cmp	r1, r0
   12e54:	blt	12f28 <__assert_fail@plt+0x1e40>
   12e58:	b	12f38 <__assert_fail@plt+0x1e50>
   12e5c:	ldr	r0, [pc, #1352]	; 133ac <__assert_fail@plt+0x22c4>
   12e60:	ldr	r1, [fp, #-20]	; 0xffffffec
   12e64:	mvn	r2, #0
   12e68:	sub	r1, r2, r1
   12e6c:	cmp	r0, r1
   12e70:	ble	12f28 <__assert_fail@plt+0x1e40>
   12e74:	b	12f38 <__assert_fail@plt+0x1e50>
   12e78:	b	12ec0 <__assert_fail@plt+0x1dd8>
   12e7c:	b	12e80 <__assert_fail@plt+0x1d98>
   12e80:	ldr	r0, [fp, #-20]	; 0xffffffec
   12e84:	add	r0, r0, #-2147483648	; 0x80000000
   12e88:	movw	r1, #0
   12e8c:	cmp	r1, r0
   12e90:	blt	12f28 <__assert_fail@plt+0x1e40>
   12e94:	b	12f38 <__assert_fail@plt+0x1e50>
   12e98:	ldr	r0, [fp, #-20]	; 0xffffffec
   12e9c:	movw	r1, #0
   12ea0:	cmp	r1, r0
   12ea4:	bge	12f38 <__assert_fail@plt+0x1e50>
   12ea8:	ldr	r0, [pc, #1272]	; 133a8 <__assert_fail@plt+0x22c0>
   12eac:	ldr	r1, [fp, #-20]	; 0xffffffec
   12eb0:	sub	r1, r1, #1
   12eb4:	cmp	r0, r1
   12eb8:	blt	12f28 <__assert_fail@plt+0x1e40>
   12ebc:	b	12f38 <__assert_fail@plt+0x1e50>
   12ec0:	ldr	r0, [pc, #1244]	; 133a4 <__assert_fail@plt+0x22bc>
   12ec4:	ldr	r1, [fp, #-20]	; 0xffffffec
   12ec8:	cmp	r0, r1
   12ecc:	blt	12f28 <__assert_fail@plt+0x1e40>
   12ed0:	b	12f38 <__assert_fail@plt+0x1e50>
   12ed4:	b	12edc <__assert_fail@plt+0x1df4>
   12ed8:	b	12f38 <__assert_fail@plt+0x1e50>
   12edc:	ldr	r0, [fp, #-20]	; 0xffffffec
   12ee0:	cmp	r0, #0
   12ee4:	bge	12f18 <__assert_fail@plt+0x1e30>
   12ee8:	ldr	r0, [fp, #-20]	; 0xffffffec
   12eec:	cmn	r0, #1
   12ef0:	bne	12f00 <__assert_fail@plt+0x1e18>
   12ef4:	b	12ef8 <__assert_fail@plt+0x1e10>
   12ef8:	b	12f38 <__assert_fail@plt+0x1e50>
   12efc:	b	12f38 <__assert_fail@plt+0x1e50>
   12f00:	ldr	r0, [pc, #1176]	; 133a0 <__assert_fail@plt+0x22b8>
   12f04:	ldr	r1, [fp, #-20]	; 0xffffffec
   12f08:	sdiv	r0, r0, r1
   12f0c:	cmp	r0, #4
   12f10:	blt	12f28 <__assert_fail@plt+0x1e40>
   12f14:	b	12f38 <__assert_fail@plt+0x1e50>
   12f18:	ldr	r0, [pc, #1148]	; 1339c <__assert_fail@plt+0x22b4>
   12f1c:	ldr	r1, [fp, #-20]	; 0xffffffec
   12f20:	cmp	r0, r1
   12f24:	bge	12f38 <__assert_fail@plt+0x1e50>
   12f28:	ldr	r0, [fp, #-20]	; 0xffffffec
   12f2c:	lsl	r0, r0, #2
   12f30:	str	r0, [fp, #-24]	; 0xffffffe8
   12f34:	b	13318 <__assert_fail@plt+0x2230>
   12f38:	ldr	r0, [fp, #-20]	; 0xffffffec
   12f3c:	lsl	r0, r0, #2
   12f40:	str	r0, [fp, #-24]	; 0xffffffe8
   12f44:	b	1330c <__assert_fail@plt+0x2224>
   12f48:	b	12ff4 <__assert_fail@plt+0x1f0c>
   12f4c:	ldr	r0, [fp, #-20]	; 0xffffffec
   12f50:	cmp	r0, #0
   12f54:	bge	12f8c <__assert_fail@plt+0x1ea4>
   12f58:	b	12f70 <__assert_fail@plt+0x1e88>
   12f5c:	ldr	r0, [pc, #1076]	; 13398 <__assert_fail@plt+0x22b0>
   12f60:	ldr	r1, [fp, #-20]	; 0xffffffec
   12f64:	cmp	r1, r0
   12f68:	bcc	13054 <__assert_fail@plt+0x1f6c>
   12f6c:	b	13064 <__assert_fail@plt+0x1f7c>
   12f70:	ldr	r0, [fp, #-20]	; 0xffffffec
   12f74:	mvn	r1, #0
   12f78:	sub	r0, r1, r0
   12f7c:	movw	r1, #1
   12f80:	cmp	r1, r0
   12f84:	bls	13054 <__assert_fail@plt+0x1f6c>
   12f88:	b	13064 <__assert_fail@plt+0x1f7c>
   12f8c:	b	12f90 <__assert_fail@plt+0x1ea8>
   12f90:	b	12fe0 <__assert_fail@plt+0x1ef8>
   12f94:	b	12fe0 <__assert_fail@plt+0x1ef8>
   12f98:	b	12fe0 <__assert_fail@plt+0x1ef8>
   12f9c:	b	12fa0 <__assert_fail@plt+0x1eb8>
   12fa0:	ldr	r0, [fp, #-20]	; 0xffffffec
   12fa4:	add	r0, r0, #0
   12fa8:	movw	r1, #0
   12fac:	cmp	r1, r0
   12fb0:	blt	13054 <__assert_fail@plt+0x1f6c>
   12fb4:	b	13064 <__assert_fail@plt+0x1f7c>
   12fb8:	ldr	r0, [fp, #-20]	; 0xffffffec
   12fbc:	movw	r1, #0
   12fc0:	cmp	r1, r0
   12fc4:	bge	13064 <__assert_fail@plt+0x1f7c>
   12fc8:	ldr	r0, [fp, #-20]	; 0xffffffec
   12fcc:	sub	r0, r0, #1
   12fd0:	mvn	r1, #0
   12fd4:	cmp	r1, r0
   12fd8:	blt	13054 <__assert_fail@plt+0x1f6c>
   12fdc:	b	13064 <__assert_fail@plt+0x1f7c>
   12fe0:	ldr	r0, [fp, #-20]	; 0xffffffec
   12fe4:	movw	r1, #0
   12fe8:	cmp	r1, r0
   12fec:	blt	13054 <__assert_fail@plt+0x1f6c>
   12ff0:	b	13064 <__assert_fail@plt+0x1f7c>
   12ff4:	b	12ffc <__assert_fail@plt+0x1f14>
   12ff8:	b	13064 <__assert_fail@plt+0x1f7c>
   12ffc:	ldr	r0, [fp, #-20]	; 0xffffffec
   13000:	cmp	r0, #0
   13004:	bge	13044 <__assert_fail@plt+0x1f5c>
   13008:	b	1300c <__assert_fail@plt+0x1f24>
   1300c:	b	1302c <__assert_fail@plt+0x1f44>
   13010:	b	1302c <__assert_fail@plt+0x1f44>
   13014:	ldr	r0, [fp, #-20]	; 0xffffffec
   13018:	cmn	r0, #1
   1301c:	bne	1302c <__assert_fail@plt+0x1f44>
   13020:	b	13024 <__assert_fail@plt+0x1f3c>
   13024:	b	13054 <__assert_fail@plt+0x1f6c>
   13028:	b	13054 <__assert_fail@plt+0x1f6c>
   1302c:	ldr	r0, [fp, #-20]	; 0xffffffec
   13030:	movw	r1, #0
   13034:	sdiv	r0, r1, r0
   13038:	cmp	r0, #4
   1303c:	blt	13054 <__assert_fail@plt+0x1f6c>
   13040:	b	13064 <__assert_fail@plt+0x1f7c>
   13044:	ldr	r0, [pc, #844]	; 13398 <__assert_fail@plt+0x22b0>
   13048:	ldr	r1, [fp, #-20]	; 0xffffffec
   1304c:	cmp	r0, r1
   13050:	bcs	13064 <__assert_fail@plt+0x1f7c>
   13054:	ldr	r0, [fp, #-20]	; 0xffffffec
   13058:	lsl	r0, r0, #2
   1305c:	str	r0, [fp, #-24]	; 0xffffffe8
   13060:	b	13318 <__assert_fail@plt+0x2230>
   13064:	ldr	r0, [fp, #-20]	; 0xffffffec
   13068:	lsl	r0, r0, #2
   1306c:	str	r0, [fp, #-24]	; 0xffffffe8
   13070:	b	1330c <__assert_fail@plt+0x2224>
   13074:	b	13078 <__assert_fail@plt+0x1f90>
   13078:	b	13140 <__assert_fail@plt+0x2058>
   1307c:	ldr	r0, [fp, #-20]	; 0xffffffec
   13080:	cmp	r0, #0
   13084:	bge	130d4 <__assert_fail@plt+0x1fec>
   13088:	b	1308c <__assert_fail@plt+0x1fa4>
   1308c:	ldr	r0, [fp, #-20]	; 0xffffffec
   13090:	mvn	r1, #0
   13094:	subs	r1, r0, r1
   13098:	mvn	r2, #-536870912	; 0xe0000000
   1309c:	rscs	r0, r2, r0, asr #31
   130a0:	str	r1, [fp, #-28]	; 0xffffffe4
   130a4:	str	r0, [fp, #-32]	; 0xffffffe0
   130a8:	blt	131bc <__assert_fail@plt+0x20d4>
   130ac:	b	131cc <__assert_fail@plt+0x20e4>
   130b0:	ldr	r0, [fp, #-20]	; 0xffffffec
   130b4:	mvn	r0, r0
   130b8:	rsbs	r1, r0, #0
   130bc:	mov	r2, #-536870912	; 0xe0000000
   130c0:	sbcs	r0, r2, r0, asr #31
   130c4:	str	r1, [fp, #-36]	; 0xffffffdc
   130c8:	str	r0, [sp, #40]	; 0x28
   130cc:	blt	131bc <__assert_fail@plt+0x20d4>
   130d0:	b	131cc <__assert_fail@plt+0x20e4>
   130d4:	b	13120 <__assert_fail@plt+0x2038>
   130d8:	b	130dc <__assert_fail@plt+0x1ff4>
   130dc:	ldr	r0, [fp, #-20]	; 0xffffffec
   130e0:	mov	r1, #-2147483648	; 0x80000000
   130e4:	add	r1, r1, r0, asr #31
   130e8:	rsbs	r0, r0, #0
   130ec:	rscs	r1, r1, #0
   130f0:	str	r0, [sp, #36]	; 0x24
   130f4:	str	r1, [sp, #32]
   130f8:	blt	131bc <__assert_fail@plt+0x20d4>
   130fc:	b	131cc <__assert_fail@plt+0x20e4>
   13100:	ldr	r0, [fp, #-20]	; 0xffffffec
   13104:	movw	r1, #0
   13108:	cmp	r1, r0
   1310c:	bge	131cc <__assert_fail@plt+0x20e4>
   13110:	mov	r0, #0
   13114:	cmp	r0, #0
   13118:	bne	131bc <__assert_fail@plt+0x20d4>
   1311c:	b	131cc <__assert_fail@plt+0x20e4>
   13120:	ldr	r0, [fp, #-20]	; 0xffffffec
   13124:	rsbs	r1, r0, #0
   13128:	mov	r2, #-536870912	; 0xe0000000
   1312c:	sbcs	r0, r2, r0, asr #31
   13130:	str	r1, [sp, #28]
   13134:	str	r0, [sp, #24]
   13138:	blt	131bc <__assert_fail@plt+0x20d4>
   1313c:	b	131cc <__assert_fail@plt+0x20e4>
   13140:	b	13148 <__assert_fail@plt+0x2060>
   13144:	b	131cc <__assert_fail@plt+0x20e4>
   13148:	ldr	r0, [fp, #-20]	; 0xffffffec
   1314c:	cmp	r0, #0
   13150:	bge	131a8 <__assert_fail@plt+0x20c0>
   13154:	ldr	r0, [fp, #-20]	; 0xffffffec
   13158:	cmn	r0, #1
   1315c:	bne	1316c <__assert_fail@plt+0x2084>
   13160:	b	13164 <__assert_fail@plt+0x207c>
   13164:	b	131cc <__assert_fail@plt+0x20e4>
   13168:	b	131cc <__assert_fail@plt+0x20e4>
   1316c:	ldr	r0, [fp, #-20]	; 0xffffffec
   13170:	asr	r3, r0, #31
   13174:	mov	r1, #0
   13178:	mov	r2, #-2147483648	; 0x80000000
   1317c:	str	r0, [sp, #20]
   13180:	mov	r0, r1
   13184:	mov	r1, r2
   13188:	ldr	r2, [sp, #20]
   1318c:	bl	1e61c <__assert_fail@plt+0xd534>
   13190:	subs	r0, r0, #4
   13194:	sbcs	r1, r1, #0
   13198:	str	r0, [sp, #16]
   1319c:	str	r1, [sp, #12]
   131a0:	blt	131bc <__assert_fail@plt+0x20d4>
   131a4:	b	131cc <__assert_fail@plt+0x20e4>
   131a8:	ldr	r0, [fp, #-20]	; 0xffffffec
   131ac:	asr	r0, r0, #31
   131b0:	cmp	r0, #536870912	; 0x20000000
   131b4:	blt	131cc <__assert_fail@plt+0x20e4>
   131b8:	b	131bc <__assert_fail@plt+0x20d4>
   131bc:	ldr	r0, [fp, #-20]	; 0xffffffec
   131c0:	lsl	r0, r0, #2
   131c4:	str	r0, [fp, #-24]	; 0xffffffe8
   131c8:	b	13318 <__assert_fail@plt+0x2230>
   131cc:	ldr	r0, [fp, #-20]	; 0xffffffec
   131d0:	lsl	r0, r0, #2
   131d4:	str	r0, [fp, #-24]	; 0xffffffe8
   131d8:	b	1330c <__assert_fail@plt+0x2224>
   131dc:	b	1328c <__assert_fail@plt+0x21a4>
   131e0:	ldr	r0, [fp, #-20]	; 0xffffffec
   131e4:	cmp	r0, #0
   131e8:	bge	13224 <__assert_fail@plt+0x213c>
   131ec:	b	13214 <__assert_fail@plt+0x212c>
   131f0:	ldr	r0, [fp, #-20]	; 0xffffffec
   131f4:	mvn	r1, #0
   131f8:	subs	r1, r0, r1
   131fc:	mvn	r2, #-1073741824	; 0xc0000000
   13200:	rscs	r0, r2, r0, asr #31
   13204:	str	r1, [sp, #8]
   13208:	str	r0, [sp, #4]
   1320c:	bcc	132f0 <__assert_fail@plt+0x2208>
   13210:	b	13300 <__assert_fail@plt+0x2218>
   13214:	ldr	r0, [fp, #-20]	; 0xffffffec
   13218:	cmn	r0, #1
   1321c:	bne	132f0 <__assert_fail@plt+0x2208>
   13220:	b	13300 <__assert_fail@plt+0x2218>
   13224:	b	13228 <__assert_fail@plt+0x2140>
   13228:	b	13278 <__assert_fail@plt+0x2190>
   1322c:	b	13278 <__assert_fail@plt+0x2190>
   13230:	b	13278 <__assert_fail@plt+0x2190>
   13234:	b	13238 <__assert_fail@plt+0x2150>
   13238:	ldr	r0, [fp, #-20]	; 0xffffffec
   1323c:	add	r0, r0, #0
   13240:	movw	r1, #0
   13244:	cmp	r1, r0
   13248:	blt	132f0 <__assert_fail@plt+0x2208>
   1324c:	b	13300 <__assert_fail@plt+0x2218>
   13250:	ldr	r0, [fp, #-20]	; 0xffffffec
   13254:	movw	r1, #0
   13258:	cmp	r1, r0
   1325c:	bge	13300 <__assert_fail@plt+0x2218>
   13260:	ldr	r0, [fp, #-20]	; 0xffffffec
   13264:	sub	r0, r0, #1
   13268:	mvn	r1, #0
   1326c:	cmp	r1, r0
   13270:	blt	132f0 <__assert_fail@plt+0x2208>
   13274:	b	13300 <__assert_fail@plt+0x2218>
   13278:	ldr	r0, [fp, #-20]	; 0xffffffec
   1327c:	movw	r1, #0
   13280:	cmp	r1, r0
   13284:	blt	132f0 <__assert_fail@plt+0x2208>
   13288:	b	13300 <__assert_fail@plt+0x2218>
   1328c:	b	13294 <__assert_fail@plt+0x21ac>
   13290:	b	13300 <__assert_fail@plt+0x2218>
   13294:	ldr	r0, [fp, #-20]	; 0xffffffec
   13298:	cmp	r0, #0
   1329c:	bge	132dc <__assert_fail@plt+0x21f4>
   132a0:	b	132a4 <__assert_fail@plt+0x21bc>
   132a4:	b	132c4 <__assert_fail@plt+0x21dc>
   132a8:	b	132c4 <__assert_fail@plt+0x21dc>
   132ac:	ldr	r0, [fp, #-20]	; 0xffffffec
   132b0:	cmn	r0, #1
   132b4:	bne	132c4 <__assert_fail@plt+0x21dc>
   132b8:	b	132bc <__assert_fail@plt+0x21d4>
   132bc:	b	132f0 <__assert_fail@plt+0x2208>
   132c0:	b	132f0 <__assert_fail@plt+0x2208>
   132c4:	ldr	r0, [fp, #-20]	; 0xffffffec
   132c8:	movw	r1, #0
   132cc:	sdiv	r0, r1, r0
   132d0:	cmp	r0, #4
   132d4:	blt	132f0 <__assert_fail@plt+0x2208>
   132d8:	b	13300 <__assert_fail@plt+0x2218>
   132dc:	ldr	r0, [fp, #-20]	; 0xffffffec
   132e0:	asr	r0, r0, #31
   132e4:	cmp	r0, #1073741824	; 0x40000000
   132e8:	bcc	13300 <__assert_fail@plt+0x2218>
   132ec:	b	132f0 <__assert_fail@plt+0x2208>
   132f0:	ldr	r0, [fp, #-20]	; 0xffffffec
   132f4:	lsl	r0, r0, #2
   132f8:	str	r0, [fp, #-24]	; 0xffffffe8
   132fc:	b	13318 <__assert_fail@plt+0x2230>
   13300:	ldr	r0, [fp, #-20]	; 0xffffffec
   13304:	lsl	r0, r0, #2
   13308:	str	r0, [fp, #-24]	; 0xffffffe8
   1330c:	ldr	r0, [fp, #-12]
   13310:	cmp	r0, #0
   13314:	bge	1332c <__assert_fail@plt+0x2244>
   13318:	ldr	r0, [fp, #-16]
   1331c:	movw	r1, #0
   13320:	str	r1, [r0]
   13324:	str	r1, [fp, #-4]
   13328:	b	1338c <__assert_fail@plt+0x22a4>
   1332c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13330:	add	r0, r0, #1
   13334:	str	r0, [fp, #-24]	; 0xffffffe8
   13338:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1333c:	bl	141d8 <__assert_fail@plt+0x30f0>
   13340:	ldr	lr, [fp, #-16]
   13344:	str	r0, [lr]
   13348:	ldr	r0, [fp, #-16]
   1334c:	ldr	r0, [r0]
   13350:	movw	lr, #0
   13354:	cmp	r0, lr
   13358:	bne	13368 <__assert_fail@plt+0x2280>
   1335c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13360:	str	r0, [fp, #-4]
   13364:	b	1338c <__assert_fail@plt+0x22a4>
   13368:	ldr	r0, [fp, #-8]
   1336c:	ldr	r1, [fp, #-12]
   13370:	ldr	r2, [fp, #-16]
   13374:	ldr	r2, [r2]
   13378:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1337c:	bl	1220c <__assert_fail@plt+0x1124>
   13380:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13384:	sub	r0, r0, #1
   13388:	str	r0, [fp, #-4]
   1338c:	ldr	r0, [fp, #-4]
   13390:	mov	sp, fp
   13394:	pop	{fp, pc}
   13398:	svccc	0x00ffffff
   1339c:	svcne	0x00ffffff
   133a0:	andhi	r0, r0, r0
   133a4:	and	r0, r0, r0
   133a8:	svcvc	0x00ffffff
   133ac:	and	r0, r0, r1
   133b0:			; <UNDEFINED> instruction: 0xffff8000
   133b4:			; <UNDEFINED> instruction: 0xffffe000
   133b8:			; <UNDEFINED> instruction: 0xffffe001
   133bc:			; <UNDEFINED> instruction: 0xffffc001
   133c0:	push	{fp, lr}
   133c4:	mov	fp, sp
   133c8:	sub	sp, sp, #8
   133cc:	strb	r0, [fp, #-1]
   133d0:	ldrb	r0, [fp, #-1]
   133d4:	bl	126a4 <__assert_fail@plt+0x15bc>
   133d8:	and	r0, r0, #255	; 0xff
   133dc:	movw	lr, #61263	; 0xef4f
   133e0:	movt	lr, #1
   133e4:	add	r0, lr, r0
   133e8:	ldrsb	r0, [r0]
   133ec:	movw	lr, #0
   133f0:	cmp	lr, r0
   133f4:	movw	r0, #0
   133f8:	movle	r0, #1
   133fc:	and	r0, r0, #1
   13400:	mov	sp, fp
   13404:	pop	{fp, pc}
   13408:	sub	sp, sp, #4
   1340c:	str	r0, [sp]
   13410:	ldr	r0, [sp]
   13414:	movw	r1, #0
   13418:	str	r1, [r0]
   1341c:	add	sp, sp, #4
   13420:	bx	lr
   13424:	push	{fp, lr}
   13428:	mov	fp, sp
   1342c:	sub	sp, sp, #48	; 0x30
   13430:	ldr	ip, [fp, #8]
   13434:	str	r0, [fp, #-4]
   13438:	str	r1, [fp, #-8]
   1343c:	str	r2, [fp, #-12]
   13440:	str	r3, [fp, #-16]
   13444:	ldr	r0, [fp, #8]
   13448:	ldr	r0, [r0]
   1344c:	str	r0, [fp, #-20]	; 0xffffffec
   13450:	ldr	r0, [fp, #-4]
   13454:	movw	r1, #0
   13458:	cmp	r0, r1
   1345c:	movw	r0, #0
   13460:	movne	r0, #1
   13464:	and	r0, r0, #1
   13468:	strb	r0, [fp, #-21]	; 0xffffffeb
   1346c:	movw	r0, #0
   13470:	strb	r0, [fp, #-22]	; 0xffffffea
   13474:	str	r1, [sp, #20]
   13478:	ldrb	r0, [fp, #-21]	; 0xffffffeb
   1347c:	tst	r0, #1
   13480:	str	ip, [sp, #4]
   13484:	beq	134ac <__assert_fail@plt+0x23c4>
   13488:	ldr	r0, [fp, #-4]
   1348c:	ldr	r0, [r0]
   13490:	str	r0, [sp, #20]
   13494:	ldr	r0, [fp, #-12]
   13498:	cmp	r0, #0
   1349c:	movw	r0, #0
   134a0:	moveq	r0, #1
   134a4:	and	r0, r0, #1
   134a8:	strb	r0, [fp, #-22]	; 0xffffffea
   134ac:	b	134b0 <__assert_fail@plt+0x23c8>
   134b0:	ldr	r0, [fp, #-20]	; 0xffffffec
   134b4:	str	r0, [sp, #16]
   134b8:	ldr	r0, [sp, #20]
   134bc:	cmp	r0, #0
   134c0:	bne	1351c <__assert_fail@plt+0x2434>
   134c4:	ldrb	r0, [fp, #-22]	; 0xffffffea
   134c8:	tst	r0, #1
   134cc:	bne	1351c <__assert_fail@plt+0x2434>
   134d0:	b	134d4 <__assert_fail@plt+0x23ec>
   134d4:	ldr	r0, [fp, #-20]	; 0xffffffec
   134d8:	str	r0, [sp, #16]
   134dc:	ldr	r0, [fp, #-8]
   134e0:	ldr	r1, [fp, #-12]
   134e4:	sub	r2, fp, #16
   134e8:	sub	r3, fp, #20
   134ec:	bl	13688 <__assert_fail@plt+0x25a0>
   134f0:	tst	r0, #1
   134f4:	bne	134fc <__assert_fail@plt+0x2414>
   134f8:	b	13518 <__assert_fail@plt+0x2430>
   134fc:	ldr	r0, [fp, #-8]
   13500:	add	r0, r0, #4
   13504:	str	r0, [fp, #-8]
   13508:	ldr	r0, [fp, #-12]
   1350c:	sub	r0, r0, #4
   13510:	str	r0, [fp, #-12]
   13514:	b	134d4 <__assert_fail@plt+0x23ec>
   13518:	b	1351c <__assert_fail@plt+0x2434>
   1351c:	ldr	r0, [fp, #-12]
   13520:	cmp	r0, #0
   13524:	bne	13538 <__assert_fail@plt+0x2450>
   13528:	ldrb	r0, [fp, #-22]	; 0xffffffea
   1352c:	tst	r0, #1
   13530:	bne	13538 <__assert_fail@plt+0x2450>
   13534:	b	13658 <__assert_fail@plt+0x2570>
   13538:	ldr	r0, [fp, #-12]
   1353c:	cmp	r0, #0
   13540:	beq	13580 <__assert_fail@plt+0x2498>
   13544:	ldr	r0, [fp, #-8]
   13548:	ldrb	r0, [r0]
   1354c:	cmp	r0, #10
   13550:	bne	13580 <__assert_fail@plt+0x2498>
   13554:	ldrb	r0, [fp, #-21]	; 0xffffffeb
   13558:	tst	r0, #1
   1355c:	beq	13580 <__assert_fail@plt+0x2498>
   13560:	ldr	r0, [fp, #-8]
   13564:	add	r0, r0, #1
   13568:	str	r0, [fp, #-8]
   1356c:	ldr	r0, [fp, #-12]
   13570:	mvn	r1, #0
   13574:	add	r0, r0, r1
   13578:	str	r0, [fp, #-12]
   1357c:	b	134b0 <__assert_fail@plt+0x23c8>
   13580:	ldr	r0, [sp, #16]
   13584:	ldr	r1, [fp, #-20]	; 0xffffffec
   13588:	sub	r0, r0, r1
   1358c:	ldr	r1, [fp, #-16]
   13590:	movw	r2, #0
   13594:	sub	r0, r2, r0
   13598:	add	r0, r1, r0
   1359c:	str	r0, [fp, #-16]
   135a0:	ldr	r0, [sp, #16]
   135a4:	str	r0, [fp, #-20]	; 0xffffffec
   135a8:	ldr	r0, [fp, #-8]
   135ac:	ldr	r1, [fp, #-12]
   135b0:	add	r0, r0, r1
   135b4:	str	r0, [sp, #12]
   135b8:	ldrb	r0, [fp, #-21]	; 0xffffffeb
   135bc:	tst	r0, #1
   135c0:	beq	135e0 <__assert_fail@plt+0x24f8>
   135c4:	ldr	r0, [fp, #-4]
   135c8:	ldr	r2, [sp, #12]
   135cc:	sub	r1, fp, #8
   135d0:	sub	r3, fp, #12
   135d4:	bl	13a4c <__assert_fail@plt+0x2964>
   135d8:	str	r0, [sp, #8]
   135dc:	b	135e8 <__assert_fail@plt+0x2500>
   135e0:	ldr	r0, [fp, #-8]
   135e4:	str	r0, [sp, #8]
   135e8:	ldr	r0, [fp, #-12]
   135ec:	cmp	r0, #0
   135f0:	beq	13618 <__assert_fail@plt+0x2530>
   135f4:	ldr	r0, [fp, #-12]
   135f8:	cmp	r0, #4
   135fc:	bge	13624 <__assert_fail@plt+0x253c>
   13600:	ldrb	r0, [fp, #-22]	; 0xffffffea
   13604:	tst	r0, #1
   13608:	bne	13624 <__assert_fail@plt+0x253c>
   1360c:	ldrb	r0, [fp, #-21]	; 0xffffffeb
   13610:	tst	r0, #1
   13614:	beq	13624 <__assert_fail@plt+0x253c>
   13618:	movw	r0, #0
   1361c:	str	r0, [fp, #-12]
   13620:	b	13658 <__assert_fail@plt+0x2570>
   13624:	ldr	r0, [sp, #8]
   13628:	ldr	r1, [fp, #-12]
   1362c:	sub	r2, fp, #16
   13630:	sub	r3, fp, #20
   13634:	bl	13688 <__assert_fail@plt+0x25a0>
   13638:	tst	r0, #1
   1363c:	bne	13644 <__assert_fail@plt+0x255c>
   13640:	b	13658 <__assert_fail@plt+0x2570>
   13644:	ldr	r0, [sp, #12]
   13648:	ldr	r1, [fp, #-8]
   1364c:	sub	r0, r0, r1
   13650:	str	r0, [fp, #-12]
   13654:	b	134b0 <__assert_fail@plt+0x23c8>
   13658:	ldr	r0, [fp, #-20]	; 0xffffffec
   1365c:	ldr	r1, [fp, #8]
   13660:	ldr	r2, [r1]
   13664:	sub	r0, r2, r0
   13668:	str	r0, [r1]
   1366c:	ldr	r0, [fp, #-12]
   13670:	cmp	r0, #0
   13674:	movw	r0, #0
   13678:	moveq	r0, #1
   1367c:	and	r0, r0, #1
   13680:	mov	sp, fp
   13684:	pop	{fp, pc}
   13688:	push	{fp, lr}
   1368c:	mov	fp, sp
   13690:	sub	sp, sp, #40	; 0x28
   13694:	str	r0, [fp, #-8]
   13698:	str	r1, [fp, #-12]
   1369c:	str	r2, [fp, #-16]
   136a0:	str	r3, [sp, #20]
   136a4:	ldr	r0, [fp, #-16]
   136a8:	ldr	r0, [r0]
   136ac:	str	r0, [sp, #16]
   136b0:	ldr	r0, [fp, #-12]
   136b4:	cmp	r0, #2
   136b8:	bge	136cc <__assert_fail@plt+0x25e4>
   136bc:	movw	r0, #0
   136c0:	and	r0, r0, #1
   136c4:	strb	r0, [fp, #-1]
   136c8:	b	13a3c <__assert_fail@plt+0x2954>
   136cc:	ldr	r0, [fp, #-8]
   136d0:	ldrb	r0, [r0]
   136d4:	bl	133c0 <__assert_fail@plt+0x22d8>
   136d8:	tst	r0, #1
   136dc:	beq	136f4 <__assert_fail@plt+0x260c>
   136e0:	ldr	r0, [fp, #-8]
   136e4:	ldrb	r0, [r0, #1]
   136e8:	bl	133c0 <__assert_fail@plt+0x22d8>
   136ec:	tst	r0, #1
   136f0:	bne	13704 <__assert_fail@plt+0x261c>
   136f4:	movw	r0, #0
   136f8:	and	r0, r0, #1
   136fc:	strb	r0, [fp, #-1]
   13700:	b	13a3c <__assert_fail@plt+0x2954>
   13704:	ldr	r0, [sp, #20]
   13708:	ldr	r0, [r0]
   1370c:	cmp	r0, #0
   13710:	beq	13790 <__assert_fail@plt+0x26a8>
   13714:	ldr	r0, [fp, #-8]
   13718:	ldrb	r0, [r0]
   1371c:	bl	126a4 <__assert_fail@plt+0x15bc>
   13720:	and	r0, r0, #255	; 0xff
   13724:	movw	lr, #61263	; 0xef4f
   13728:	movt	lr, #1
   1372c:	add	r0, lr, r0
   13730:	ldrsb	r0, [r0]
   13734:	lsl	r0, r0, #2
   13738:	ldr	lr, [fp, #-8]
   1373c:	ldrb	lr, [lr, #1]
   13740:	str	r0, [sp, #12]
   13744:	mov	r0, lr
   13748:	bl	126a4 <__assert_fail@plt+0x15bc>
   1374c:	and	r0, r0, #255	; 0xff
   13750:	movw	lr, #61263	; 0xef4f
   13754:	movt	lr, #1
   13758:	add	r0, lr, r0
   1375c:	ldrsb	r0, [r0]
   13760:	asr	r0, r0, #4
   13764:	ldr	lr, [sp, #12]
   13768:	orr	r0, lr, r0
   1376c:	ldr	lr, [sp, #16]
   13770:	add	r1, lr, #1
   13774:	str	r1, [sp, #16]
   13778:	strb	r0, [lr]
   1377c:	ldr	r0, [sp, #20]
   13780:	ldr	r1, [r0]
   13784:	mvn	lr, #0
   13788:	add	r1, r1, lr
   1378c:	str	r1, [r0]
   13790:	ldr	r0, [fp, #-12]
   13794:	cmp	r0, #2
   13798:	bne	137bc <__assert_fail@plt+0x26d4>
   1379c:	b	137a0 <__assert_fail@plt+0x26b8>
   137a0:	ldr	r0, [sp, #16]
   137a4:	ldr	r1, [fp, #-16]
   137a8:	str	r0, [r1]
   137ac:	movw	r0, #0
   137b0:	and	r0, r0, #1
   137b4:	strb	r0, [fp, #-1]
   137b8:	b	13a3c <__assert_fail@plt+0x2954>
   137bc:	ldr	r0, [fp, #-8]
   137c0:	ldrb	r0, [r0, #2]
   137c4:	cmp	r0, #61	; 0x3d
   137c8:	bne	1382c <__assert_fail@plt+0x2744>
   137cc:	ldr	r0, [fp, #-12]
   137d0:	cmp	r0, #4
   137d4:	beq	137f8 <__assert_fail@plt+0x2710>
   137d8:	b	137dc <__assert_fail@plt+0x26f4>
   137dc:	ldr	r0, [sp, #16]
   137e0:	ldr	r1, [fp, #-16]
   137e4:	str	r0, [r1]
   137e8:	movw	r0, #0
   137ec:	and	r0, r0, #1
   137f0:	strb	r0, [fp, #-1]
   137f4:	b	13a3c <__assert_fail@plt+0x2954>
   137f8:	ldr	r0, [fp, #-8]
   137fc:	ldrb	r0, [r0, #3]
   13800:	cmp	r0, #61	; 0x3d
   13804:	beq	13828 <__assert_fail@plt+0x2740>
   13808:	b	1380c <__assert_fail@plt+0x2724>
   1380c:	ldr	r0, [sp, #16]
   13810:	ldr	r1, [fp, #-16]
   13814:	str	r0, [r1]
   13818:	movw	r0, #0
   1381c:	and	r0, r0, #1
   13820:	strb	r0, [fp, #-1]
   13824:	b	13a3c <__assert_fail@plt+0x2954>
   13828:	b	13a24 <__assert_fail@plt+0x293c>
   1382c:	ldr	r0, [fp, #-8]
   13830:	ldrb	r0, [r0, #2]
   13834:	bl	133c0 <__assert_fail@plt+0x22d8>
   13838:	tst	r0, #1
   1383c:	bne	13860 <__assert_fail@plt+0x2778>
   13840:	b	13844 <__assert_fail@plt+0x275c>
   13844:	ldr	r0, [sp, #16]
   13848:	ldr	r1, [fp, #-16]
   1384c:	str	r0, [r1]
   13850:	movw	r0, #0
   13854:	and	r0, r0, #1
   13858:	strb	r0, [fp, #-1]
   1385c:	b	13a3c <__assert_fail@plt+0x2954>
   13860:	ldr	r0, [sp, #20]
   13864:	ldr	r0, [r0]
   13868:	cmp	r0, #0
   1386c:	beq	138f0 <__assert_fail@plt+0x2808>
   13870:	ldr	r0, [fp, #-8]
   13874:	ldrb	r0, [r0, #1]
   13878:	bl	126a4 <__assert_fail@plt+0x15bc>
   1387c:	and	r0, r0, #255	; 0xff
   13880:	movw	lr, #61263	; 0xef4f
   13884:	movt	lr, #1
   13888:	add	r0, lr, r0
   1388c:	ldrsb	r0, [r0]
   13890:	lsl	r0, r0, #4
   13894:	and	r0, r0, #240	; 0xf0
   13898:	ldr	lr, [fp, #-8]
   1389c:	ldrb	lr, [lr, #2]
   138a0:	str	r0, [sp, #8]
   138a4:	mov	r0, lr
   138a8:	bl	126a4 <__assert_fail@plt+0x15bc>
   138ac:	and	r0, r0, #255	; 0xff
   138b0:	movw	lr, #61263	; 0xef4f
   138b4:	movt	lr, #1
   138b8:	add	r0, lr, r0
   138bc:	ldrsb	r0, [r0]
   138c0:	asr	r0, r0, #2
   138c4:	ldr	lr, [sp, #8]
   138c8:	orr	r0, lr, r0
   138cc:	ldr	lr, [sp, #16]
   138d0:	add	r1, lr, #1
   138d4:	str	r1, [sp, #16]
   138d8:	strb	r0, [lr]
   138dc:	ldr	r0, [sp, #20]
   138e0:	ldr	r1, [r0]
   138e4:	mvn	lr, #0
   138e8:	add	r1, r1, lr
   138ec:	str	r1, [r0]
   138f0:	ldr	r0, [fp, #-12]
   138f4:	cmp	r0, #3
   138f8:	bne	1391c <__assert_fail@plt+0x2834>
   138fc:	b	13900 <__assert_fail@plt+0x2818>
   13900:	ldr	r0, [sp, #16]
   13904:	ldr	r1, [fp, #-16]
   13908:	str	r0, [r1]
   1390c:	movw	r0, #0
   13910:	and	r0, r0, #1
   13914:	strb	r0, [fp, #-1]
   13918:	b	13a3c <__assert_fail@plt+0x2954>
   1391c:	ldr	r0, [fp, #-8]
   13920:	ldrb	r0, [r0, #3]
   13924:	cmp	r0, #61	; 0x3d
   13928:	bne	1395c <__assert_fail@plt+0x2874>
   1392c:	ldr	r0, [fp, #-12]
   13930:	cmp	r0, #4
   13934:	beq	13958 <__assert_fail@plt+0x2870>
   13938:	b	1393c <__assert_fail@plt+0x2854>
   1393c:	ldr	r0, [sp, #16]
   13940:	ldr	r1, [fp, #-16]
   13944:	str	r0, [r1]
   13948:	movw	r0, #0
   1394c:	and	r0, r0, #1
   13950:	strb	r0, [fp, #-1]
   13954:	b	13a3c <__assert_fail@plt+0x2954>
   13958:	b	13a20 <__assert_fail@plt+0x2938>
   1395c:	ldr	r0, [fp, #-8]
   13960:	ldrb	r0, [r0, #3]
   13964:	bl	133c0 <__assert_fail@plt+0x22d8>
   13968:	tst	r0, #1
   1396c:	bne	13990 <__assert_fail@plt+0x28a8>
   13970:	b	13974 <__assert_fail@plt+0x288c>
   13974:	ldr	r0, [sp, #16]
   13978:	ldr	r1, [fp, #-16]
   1397c:	str	r0, [r1]
   13980:	movw	r0, #0
   13984:	and	r0, r0, #1
   13988:	strb	r0, [fp, #-1]
   1398c:	b	13a3c <__assert_fail@plt+0x2954>
   13990:	ldr	r0, [sp, #20]
   13994:	ldr	r0, [r0]
   13998:	cmp	r0, #0
   1399c:	beq	13a1c <__assert_fail@plt+0x2934>
   139a0:	ldr	r0, [fp, #-8]
   139a4:	ldrb	r0, [r0, #2]
   139a8:	bl	126a4 <__assert_fail@plt+0x15bc>
   139ac:	and	r0, r0, #255	; 0xff
   139b0:	movw	lr, #61263	; 0xef4f
   139b4:	movt	lr, #1
   139b8:	add	r0, lr, r0
   139bc:	ldrsb	r0, [r0]
   139c0:	lsl	r0, r0, #6
   139c4:	and	r0, r0, #192	; 0xc0
   139c8:	ldr	lr, [fp, #-8]
   139cc:	ldrb	lr, [lr, #3]
   139d0:	str	r0, [sp, #4]
   139d4:	mov	r0, lr
   139d8:	bl	126a4 <__assert_fail@plt+0x15bc>
   139dc:	and	r0, r0, #255	; 0xff
   139e0:	movw	lr, #61263	; 0xef4f
   139e4:	movt	lr, #1
   139e8:	add	r0, lr, r0
   139ec:	ldrsb	r0, [r0]
   139f0:	ldr	lr, [sp, #4]
   139f4:	orr	r0, lr, r0
   139f8:	ldr	lr, [sp, #16]
   139fc:	add	r1, lr, #1
   13a00:	str	r1, [sp, #16]
   13a04:	strb	r0, [lr]
   13a08:	ldr	r0, [sp, #20]
   13a0c:	ldr	r1, [r0]
   13a10:	mvn	lr, #0
   13a14:	add	r1, r1, lr
   13a18:	str	r1, [r0]
   13a1c:	b	13a20 <__assert_fail@plt+0x2938>
   13a20:	b	13a24 <__assert_fail@plt+0x293c>
   13a24:	ldr	r0, [sp, #16]
   13a28:	ldr	r1, [fp, #-16]
   13a2c:	str	r0, [r1]
   13a30:	movw	r0, #1
   13a34:	and	r0, r0, #1
   13a38:	strb	r0, [fp, #-1]
   13a3c:	ldrb	r0, [fp, #-1]
   13a40:	and	r0, r0, #1
   13a44:	mov	sp, fp
   13a48:	pop	{fp, pc}
   13a4c:	push	{fp, lr}
   13a50:	mov	fp, sp
   13a54:	sub	sp, sp, #32
   13a58:	str	r0, [fp, #-8]
   13a5c:	str	r1, [fp, #-12]
   13a60:	str	r2, [sp, #16]
   13a64:	str	r3, [sp, #12]
   13a68:	ldr	r0, [fp, #-8]
   13a6c:	ldr	r0, [r0]
   13a70:	cmp	r0, #4
   13a74:	bne	13a84 <__assert_fail@plt+0x299c>
   13a78:	ldr	r0, [fp, #-8]
   13a7c:	movw	r1, #0
   13a80:	str	r1, [r0]
   13a84:	ldr	r0, [fp, #-8]
   13a88:	ldr	r0, [r0]
   13a8c:	cmp	r0, #0
   13a90:	bne	13b04 <__assert_fail@plt+0x2a1c>
   13a94:	ldr	r0, [fp, #-12]
   13a98:	ldr	r0, [r0]
   13a9c:	str	r0, [sp, #8]
   13aa0:	ldr	r0, [sp, #16]
   13aa4:	ldr	r1, [fp, #-12]
   13aa8:	ldr	r1, [r1]
   13aac:	sub	r0, r0, r1
   13ab0:	movw	r1, #4
   13ab4:	cmp	r1, r0
   13ab8:	bgt	13b00 <__assert_fail@plt+0x2a18>
   13abc:	ldr	r0, [sp, #8]
   13ac0:	mov	r1, #10
   13ac4:	mov	r2, #4
   13ac8:	bl	11040 <memchr@plt>
   13acc:	movw	r1, #0
   13ad0:	cmp	r0, r1
   13ad4:	bne	13b00 <__assert_fail@plt+0x2a18>
   13ad8:	ldr	r0, [fp, #-12]
   13adc:	ldr	r1, [r0]
   13ae0:	add	r1, r1, #4
   13ae4:	str	r1, [r0]
   13ae8:	ldr	r0, [sp, #12]
   13aec:	movw	r1, #4
   13af0:	str	r1, [r0]
   13af4:	ldr	r0, [sp, #8]
   13af8:	str	r0, [fp, #-4]
   13afc:	b	13ba8 <__assert_fail@plt+0x2ac0>
   13b00:	b	13b04 <__assert_fail@plt+0x2a1c>
   13b04:	ldr	r0, [fp, #-12]
   13b08:	ldr	r0, [r0]
   13b0c:	str	r0, [sp, #4]
   13b10:	ldr	r0, [sp, #4]
   13b14:	ldr	r1, [sp, #16]
   13b18:	cmp	r0, r1
   13b1c:	bcs	13b80 <__assert_fail@plt+0x2a98>
   13b20:	ldr	r0, [sp, #4]
   13b24:	add	r1, r0, #1
   13b28:	str	r1, [sp, #4]
   13b2c:	ldrb	r0, [r0]
   13b30:	strb	r0, [sp, #3]
   13b34:	ldrb	r0, [sp, #3]
   13b38:	cmp	r0, #10
   13b3c:	beq	13b7c <__assert_fail@plt+0x2a94>
   13b40:	ldrb	r0, [sp, #3]
   13b44:	ldr	r1, [fp, #-8]
   13b48:	add	r1, r1, #4
   13b4c:	ldr	r2, [fp, #-8]
   13b50:	ldr	r3, [r2]
   13b54:	add	ip, r3, #1
   13b58:	str	ip, [r2]
   13b5c:	add	r1, r1, r3
   13b60:	strb	r0, [r1]
   13b64:	ldr	r0, [fp, #-8]
   13b68:	ldr	r0, [r0]
   13b6c:	cmp	r0, #4
   13b70:	bne	13b78 <__assert_fail@plt+0x2a90>
   13b74:	b	13b80 <__assert_fail@plt+0x2a98>
   13b78:	b	13b7c <__assert_fail@plt+0x2a94>
   13b7c:	b	13b10 <__assert_fail@plt+0x2a28>
   13b80:	ldr	r0, [sp, #4]
   13b84:	ldr	r1, [fp, #-12]
   13b88:	str	r0, [r1]
   13b8c:	ldr	r0, [fp, #-8]
   13b90:	ldr	r0, [r0]
   13b94:	ldr	r1, [sp, #12]
   13b98:	str	r0, [r1]
   13b9c:	ldr	r0, [fp, #-8]
   13ba0:	add	r0, r0, #4
   13ba4:	str	r0, [fp, #-4]
   13ba8:	ldr	r0, [fp, #-4]
   13bac:	mov	sp, fp
   13bb0:	pop	{fp, pc}
   13bb4:	push	{fp, lr}
   13bb8:	mov	fp, sp
   13bbc:	sub	sp, sp, #32
   13bc0:	ldr	ip, [fp, #8]
   13bc4:	str	r0, [fp, #-8]
   13bc8:	str	r1, [fp, #-12]
   13bcc:	str	r2, [sp, #16]
   13bd0:	str	r3, [sp, #12]
   13bd4:	ldr	r0, [sp, #16]
   13bd8:	asr	r0, r0, #2
   13bdc:	add	r0, r0, #1
   13be0:	movw	r1, #3
   13be4:	mul	r0, r0, r1
   13be8:	str	r0, [sp, #8]
   13bec:	ldr	r0, [sp, #8]
   13bf0:	str	ip, [sp, #4]
   13bf4:	bl	141d8 <__assert_fail@plt+0x30f0>
   13bf8:	ldr	r1, [sp, #12]
   13bfc:	str	r0, [r1]
   13c00:	ldr	r0, [sp, #12]
   13c04:	ldr	r0, [r0]
   13c08:	movw	r1, #0
   13c0c:	cmp	r0, r1
   13c10:	bne	13c24 <__assert_fail@plt+0x2b3c>
   13c14:	movw	r0, #1
   13c18:	and	r0, r0, #1
   13c1c:	strb	r0, [fp, #-1]
   13c20:	b	13c9c <__assert_fail@plt+0x2bb4>
   13c24:	ldr	r0, [fp, #-8]
   13c28:	ldr	r1, [fp, #-12]
   13c2c:	ldr	r2, [sp, #16]
   13c30:	ldr	r3, [sp, #12]
   13c34:	ldr	r3, [r3]
   13c38:	add	ip, sp, #8
   13c3c:	str	ip, [sp]
   13c40:	bl	13424 <__assert_fail@plt+0x233c>
   13c44:	tst	r0, #1
   13c48:	bne	13c74 <__assert_fail@plt+0x2b8c>
   13c4c:	ldr	r0, [sp, #12]
   13c50:	ldr	r0, [r0]
   13c54:	bl	14070 <__assert_fail@plt+0x2f88>
   13c58:	ldr	r0, [sp, #12]
   13c5c:	movw	lr, #0
   13c60:	str	lr, [r0]
   13c64:	movw	r0, #0
   13c68:	and	r0, r0, #1
   13c6c:	strb	r0, [fp, #-1]
   13c70:	b	13c9c <__assert_fail@plt+0x2bb4>
   13c74:	ldr	r0, [fp, #8]
   13c78:	movw	r1, #0
   13c7c:	cmp	r0, r1
   13c80:	beq	13c90 <__assert_fail@plt+0x2ba8>
   13c84:	ldr	r0, [sp, #8]
   13c88:	ldr	r1, [fp, #8]
   13c8c:	str	r0, [r1]
   13c90:	movw	r0, #1
   13c94:	and	r0, r0, #1
   13c98:	strb	r0, [fp, #-1]
   13c9c:	ldrb	r0, [fp, #-1]
   13ca0:	and	r0, r0, #1
   13ca4:	mov	sp, fp
   13ca8:	pop	{fp, pc}
   13cac:	sub	sp, sp, #4
   13cb0:	str	r0, [sp]
   13cb4:	ldr	r0, [sp]
   13cb8:	movw	r1, #352	; 0x160
   13cbc:	movt	r1, #3
   13cc0:	str	r0, [r1]
   13cc4:	add	sp, sp, #4
   13cc8:	bx	lr
   13ccc:	sub	sp, sp, #4
   13cd0:	and	r0, r0, #1
   13cd4:	strb	r0, [sp, #3]
   13cd8:	ldrb	r0, [sp, #3]
   13cdc:	and	r0, r0, #1
   13ce0:	movw	r1, #356	; 0x164
   13ce4:	movt	r1, #3
   13ce8:	strb	r0, [r1]
   13cec:	add	sp, sp, #4
   13cf0:	bx	lr
   13cf4:	push	{fp, lr}
   13cf8:	mov	fp, sp
   13cfc:	sub	sp, sp, #24
   13d00:	movw	r0, #340	; 0x154
   13d04:	movt	r0, #3
   13d08:	ldr	r0, [r0]
   13d0c:	bl	1dc08 <__assert_fail@plt+0xcb20>
   13d10:	cmp	r0, #0
   13d14:	beq	13de4 <__assert_fail@plt+0x2cfc>
   13d18:	movw	r0, #356	; 0x164
   13d1c:	movt	r0, #3
   13d20:	ldrb	r0, [r0]
   13d24:	tst	r0, #1
   13d28:	beq	13d3c <__assert_fail@plt+0x2c54>
   13d2c:	bl	11010 <__errno_location@plt>
   13d30:	ldr	r0, [r0]
   13d34:	cmp	r0, #32
   13d38:	beq	13de4 <__assert_fail@plt+0x2cfc>
   13d3c:	movw	r0, #60980	; 0xee34
   13d40:	movt	r0, #1
   13d44:	bl	10fe0 <gettext@plt>
   13d48:	str	r0, [fp, #-4]
   13d4c:	movw	r0, #352	; 0x160
   13d50:	movt	r0, #3
   13d54:	ldr	r0, [r0]
   13d58:	movw	lr, #0
   13d5c:	cmp	r0, lr
   13d60:	beq	13db8 <__assert_fail@plt+0x2cd0>
   13d64:	bl	11010 <__errno_location@plt>
   13d68:	ldr	r1, [r0]
   13d6c:	movw	r0, #352	; 0x160
   13d70:	movt	r0, #3
   13d74:	ldr	r0, [r0]
   13d78:	str	r1, [fp, #-8]
   13d7c:	bl	16750 <__assert_fail@plt+0x5668>
   13d80:	ldr	r1, [fp, #-4]
   13d84:	movw	lr, #0
   13d88:	str	r0, [sp, #12]
   13d8c:	mov	r0, lr
   13d90:	ldr	lr, [fp, #-8]
   13d94:	str	r1, [sp, #8]
   13d98:	mov	r1, lr
   13d9c:	movw	r2, #60412	; 0xebfc
   13da0:	movt	r2, #1
   13da4:	ldr	r3, [sp, #12]
   13da8:	ldr	ip, [sp, #8]
   13dac:	str	ip, [sp]
   13db0:	bl	10f80 <error@plt>
   13db4:	b	13dd4 <__assert_fail@plt+0x2cec>
   13db8:	bl	11010 <__errno_location@plt>
   13dbc:	ldr	r1, [r0]
   13dc0:	ldr	r3, [fp, #-4]
   13dc4:	movw	r0, #0
   13dc8:	movw	r2, #60416	; 0xec00
   13dcc:	movt	r2, #1
   13dd0:	bl	10f80 <error@plt>
   13dd4:	movw	r0, #244	; 0xf4
   13dd8:	movt	r0, #3
   13ddc:	ldr	r0, [r0]
   13de0:	bl	10ed8 <_exit@plt>
   13de4:	movw	r0, #328	; 0x148
   13de8:	movt	r0, #3
   13dec:	ldr	r0, [r0]
   13df0:	bl	1dc08 <__assert_fail@plt+0xcb20>
   13df4:	cmp	r0, #0
   13df8:	beq	13e0c <__assert_fail@plt+0x2d24>
   13dfc:	movw	r0, #244	; 0xf4
   13e00:	movt	r0, #3
   13e04:	ldr	r0, [r0]
   13e08:	bl	10ed8 <_exit@plt>
   13e0c:	mov	sp, fp
   13e10:	pop	{fp, pc}
   13e14:	push	{r4, r5, fp, lr}
   13e18:	add	fp, sp, #8
   13e1c:	sub	sp, sp, #48	; 0x30
   13e20:	ldr	r1, [fp, #12]
   13e24:	ldr	ip, [fp, #8]
   13e28:	ldr	lr, [fp, #16]
   13e2c:	str	r0, [fp, #-12]
   13e30:	str	r3, [fp, #-20]	; 0xffffffec
   13e34:	str	r2, [fp, #-24]	; 0xffffffe8
   13e38:	str	r1, [sp, #28]
   13e3c:	str	ip, [sp, #24]
   13e40:	ldr	r0, [fp, #-12]
   13e44:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13e48:	ldr	r3, [fp, #-20]	; 0xffffffec
   13e4c:	ldr	r1, [sp, #24]
   13e50:	ldr	ip, [sp, #28]
   13e54:	ldr	r4, [fp, #16]
   13e58:	mov	r5, sp
   13e5c:	str	r4, [r5, #8]
   13e60:	str	ip, [r5, #4]
   13e64:	str	r1, [r5]
   13e68:	str	lr, [sp, #20]
   13e6c:	bl	10e9c <posix_fadvise64@plt>
   13e70:	str	r0, [sp, #16]
   13e74:	sub	sp, fp, #8
   13e78:	pop	{r4, r5, fp, pc}
   13e7c:	push	{fp, lr}
   13e80:	mov	fp, sp
   13e84:	sub	sp, sp, #24
   13e88:	str	r0, [fp, #-4]
   13e8c:	str	r1, [fp, #-8]
   13e90:	ldr	r0, [fp, #-4]
   13e94:	movw	r1, #0
   13e98:	cmp	r0, r1
   13e9c:	beq	13ecc <__assert_fail@plt+0x2de4>
   13ea0:	ldr	r0, [fp, #-4]
   13ea4:	bl	11034 <fileno@plt>
   13ea8:	ldr	lr, [fp, #-8]
   13eac:	mov	r1, sp
   13eb0:	str	lr, [r1, #8]
   13eb4:	mov	lr, #0
   13eb8:	str	lr, [r1, #4]
   13ebc:	str	lr, [r1]
   13ec0:	mov	r2, lr
   13ec4:	mov	r3, lr
   13ec8:	bl	13e14 <__assert_fail@plt+0x2d2c>
   13ecc:	mov	sp, fp
   13ed0:	pop	{fp, pc}
   13ed4:	push	{fp, lr}
   13ed8:	mov	fp, sp
   13edc:	sub	sp, sp, #32
   13ee0:	str	r0, [fp, #-8]
   13ee4:	movw	r0, #0
   13ee8:	str	r0, [fp, #-12]
   13eec:	str	r0, [sp, #12]
   13ef0:	ldr	r0, [fp, #-8]
   13ef4:	bl	11034 <fileno@plt>
   13ef8:	str	r0, [sp, #16]
   13efc:	ldr	r0, [sp, #16]
   13f00:	cmp	r0, #0
   13f04:	bge	13f18 <__assert_fail@plt+0x2e30>
   13f08:	ldr	r0, [fp, #-8]
   13f0c:	bl	11058 <fclose@plt>
   13f10:	str	r0, [fp, #-4]
   13f14:	b	13fb4 <__assert_fail@plt+0x2ecc>
   13f18:	ldr	r0, [fp, #-8]
   13f1c:	bl	10fa4 <__freading@plt>
   13f20:	cmp	r0, #0
   13f24:	beq	13f5c <__assert_fail@plt+0x2e74>
   13f28:	ldr	r0, [fp, #-8]
   13f2c:	bl	11034 <fileno@plt>
   13f30:	mov	lr, sp
   13f34:	mov	r1, #1
   13f38:	str	r1, [lr]
   13f3c:	mov	r1, #0
   13f40:	mov	r2, r1
   13f44:	mov	r3, r1
   13f48:	bl	10f44 <lseek64@plt>
   13f4c:	and	r0, r0, r1
   13f50:	cmn	r0, #1
   13f54:	beq	13f78 <__assert_fail@plt+0x2e90>
   13f58:	b	13f5c <__assert_fail@plt+0x2e74>
   13f5c:	ldr	r0, [fp, #-8]
   13f60:	bl	13fc0 <__assert_fail@plt+0x2ed8>
   13f64:	cmp	r0, #0
   13f68:	beq	13f78 <__assert_fail@plt+0x2e90>
   13f6c:	bl	11010 <__errno_location@plt>
   13f70:	ldr	r0, [r0]
   13f74:	str	r0, [fp, #-12]
   13f78:	ldr	r0, [fp, #-8]
   13f7c:	bl	11058 <fclose@plt>
   13f80:	str	r0, [sp, #12]
   13f84:	ldr	r0, [fp, #-12]
   13f88:	cmp	r0, #0
   13f8c:	beq	13fac <__assert_fail@plt+0x2ec4>
   13f90:	ldr	r0, [fp, #-12]
   13f94:	str	r0, [sp, #8]
   13f98:	bl	11010 <__errno_location@plt>
   13f9c:	ldr	lr, [sp, #8]
   13fa0:	str	lr, [r0]
   13fa4:	mvn	r0, #0
   13fa8:	str	r0, [sp, #12]
   13fac:	ldr	r0, [sp, #12]
   13fb0:	str	r0, [fp, #-4]
   13fb4:	ldr	r0, [fp, #-4]
   13fb8:	mov	sp, fp
   13fbc:	pop	{fp, pc}
   13fc0:	push	{fp, lr}
   13fc4:	mov	fp, sp
   13fc8:	sub	sp, sp, #8
   13fcc:	str	r0, [sp]
   13fd0:	ldr	r0, [sp]
   13fd4:	movw	r1, #0
   13fd8:	cmp	r0, r1
   13fdc:	beq	13ff0 <__assert_fail@plt+0x2f08>
   13fe0:	ldr	r0, [sp]
   13fe4:	bl	10fa4 <__freading@plt>
   13fe8:	cmp	r0, #0
   13fec:	bne	14000 <__assert_fail@plt+0x2f18>
   13ff0:	ldr	r0, [sp]
   13ff4:	bl	10eb4 <fflush@plt>
   13ff8:	str	r0, [sp, #4]
   13ffc:	b	14014 <__assert_fail@plt+0x2f2c>
   14000:	ldr	r0, [sp]
   14004:	bl	14020 <__assert_fail@plt+0x2f38>
   14008:	ldr	r0, [sp]
   1400c:	bl	10eb4 <fflush@plt>
   14010:	str	r0, [sp, #4]
   14014:	ldr	r0, [sp, #4]
   14018:	mov	sp, fp
   1401c:	pop	{fp, pc}
   14020:	push	{fp, lr}
   14024:	mov	fp, sp
   14028:	sub	sp, sp, #16
   1402c:	str	r0, [fp, #-4]
   14030:	ldr	r0, [fp, #-4]
   14034:	ldr	r0, [r0]
   14038:	and	r0, r0, #256	; 0x100
   1403c:	cmp	r0, #0
   14040:	beq	14068 <__assert_fail@plt+0x2f80>
   14044:	ldr	r0, [fp, #-4]
   14048:	mov	r1, sp
   1404c:	mov	r2, #1
   14050:	str	r2, [r1]
   14054:	mov	r1, #0
   14058:	mov	r2, r1
   1405c:	mov	r3, r1
   14060:	bl	140b0 <__assert_fail@plt+0x2fc8>
   14064:	str	r0, [sp, #8]
   14068:	mov	sp, fp
   1406c:	pop	{fp, pc}
   14070:	push	{fp, lr}
   14074:	mov	fp, sp
   14078:	sub	sp, sp, #16
   1407c:	str	r0, [fp, #-4]
   14080:	bl	11010 <__errno_location@plt>
   14084:	ldr	r0, [r0]
   14088:	str	r0, [sp, #8]
   1408c:	ldr	r0, [fp, #-4]
   14090:	bl	10ecc <free@plt>
   14094:	ldr	r0, [sp, #8]
   14098:	str	r0, [sp, #4]
   1409c:	bl	11010 <__errno_location@plt>
   140a0:	ldr	lr, [sp, #4]
   140a4:	str	lr, [r0]
   140a8:	mov	sp, fp
   140ac:	pop	{fp, pc}
   140b0:	push	{fp, lr}
   140b4:	mov	fp, sp
   140b8:	sub	sp, sp, #32
   140bc:	ldr	r1, [fp, #8]
   140c0:	str	r0, [fp, #-8]
   140c4:	str	r3, [sp, #20]
   140c8:	str	r2, [sp, #16]
   140cc:	ldr	r0, [fp, #-8]
   140d0:	ldr	r0, [r0, #8]
   140d4:	ldr	r2, [fp, #-8]
   140d8:	ldr	r2, [r2, #4]
   140dc:	cmp	r0, r2
   140e0:	str	r1, [sp, #4]
   140e4:	bne	14190 <__assert_fail@plt+0x30a8>
   140e8:	ldr	r0, [fp, #-8]
   140ec:	ldr	r0, [r0, #20]
   140f0:	ldr	r1, [fp, #-8]
   140f4:	ldr	r1, [r1, #16]
   140f8:	cmp	r0, r1
   140fc:	bne	14190 <__assert_fail@plt+0x30a8>
   14100:	ldr	r0, [fp, #-8]
   14104:	ldr	r0, [r0, #36]	; 0x24
   14108:	movw	r1, #0
   1410c:	cmp	r0, r1
   14110:	bne	14190 <__assert_fail@plt+0x30a8>
   14114:	ldr	r0, [fp, #-8]
   14118:	bl	11034 <fileno@plt>
   1411c:	ldr	r2, [sp, #16]
   14120:	ldr	r3, [sp, #20]
   14124:	ldr	lr, [fp, #8]
   14128:	mov	r1, sp
   1412c:	str	lr, [r1]
   14130:	bl	10f44 <lseek64@plt>
   14134:	str	r1, [sp, #12]
   14138:	str	r0, [sp, #8]
   1413c:	ldr	r0, [sp, #8]
   14140:	ldr	r1, [sp, #12]
   14144:	and	r0, r0, r1
   14148:	cmn	r0, #1
   1414c:	bne	14160 <__assert_fail@plt+0x3078>
   14150:	b	14154 <__assert_fail@plt+0x306c>
   14154:	mvn	r0, #0
   14158:	str	r0, [fp, #-4]
   1415c:	b	141b0 <__assert_fail@plt+0x30c8>
   14160:	ldr	r0, [fp, #-8]
   14164:	ldr	r1, [r0]
   14168:	bic	r1, r1, #16
   1416c:	str	r1, [r0]
   14170:	ldr	r0, [sp, #8]
   14174:	ldr	r1, [sp, #12]
   14178:	ldr	r2, [fp, #-8]
   1417c:	str	r1, [r2, #84]	; 0x54
   14180:	str	r0, [r2, #80]	; 0x50
   14184:	movw	r0, #0
   14188:	str	r0, [fp, #-4]
   1418c:	b	141b0 <__assert_fail@plt+0x30c8>
   14190:	ldr	r0, [fp, #-8]
   14194:	ldr	r2, [sp, #16]
   14198:	ldr	r3, [sp, #20]
   1419c:	ldr	r1, [fp, #8]
   141a0:	mov	ip, sp
   141a4:	str	r1, [ip]
   141a8:	bl	11064 <fseeko64@plt>
   141ac:	str	r0, [fp, #-4]
   141b0:	ldr	r0, [fp, #-4]
   141b4:	mov	sp, fp
   141b8:	pop	{fp, pc}
   141bc:	push	{fp, lr}
   141c0:	mov	fp, sp
   141c4:	bl	11010 <__errno_location@plt>
   141c8:	movw	lr, #12
   141cc:	str	lr, [r0]
   141d0:	movw	r0, #0
   141d4:	pop	{fp, pc}
   141d8:	push	{fp, lr}
   141dc:	mov	fp, sp
   141e0:	sub	sp, sp, #8
   141e4:	str	r0, [sp, #4]
   141e8:	ldr	r0, [sp, #4]
   141ec:	cmn	r0, #1
   141f0:	bhi	14204 <__assert_fail@plt+0x311c>
   141f4:	ldr	r0, [sp, #4]
   141f8:	bl	1d9fc <__assert_fail@plt+0xc914>
   141fc:	str	r0, [sp]
   14200:	b	1420c <__assert_fail@plt+0x3124>
   14204:	bl	141bc <__assert_fail@plt+0x30d4>
   14208:	str	r0, [sp]
   1420c:	ldr	r0, [sp]
   14210:	mov	sp, fp
   14214:	pop	{fp, pc}
   14218:	push	{fp, lr}
   1421c:	mov	fp, sp
   14220:	sub	sp, sp, #16
   14224:	str	r0, [fp, #-4]
   14228:	str	r1, [sp, #8]
   1422c:	ldr	r0, [sp, #8]
   14230:	cmn	r0, #1
   14234:	bhi	1426c <__assert_fail@plt+0x3184>
   14238:	ldr	r0, [fp, #-4]
   1423c:	ldr	r1, [sp, #8]
   14240:	ldr	r2, [sp, #8]
   14244:	cmp	r2, #0
   14248:	movw	r2, #0
   1424c:	movne	r2, #1
   14250:	mvn	r3, #0
   14254:	eor	r2, r2, r3
   14258:	and	r2, r2, #1
   1425c:	orr	r1, r1, r2
   14260:	bl	1da6c <__assert_fail@plt+0xc984>
   14264:	str	r0, [sp, #4]
   14268:	b	14274 <__assert_fail@plt+0x318c>
   1426c:	bl	141bc <__assert_fail@plt+0x30d4>
   14270:	str	r0, [sp, #4]
   14274:	ldr	r0, [sp, #4]
   14278:	mov	sp, fp
   1427c:	pop	{fp, pc}
   14280:	push	{fp, lr}
   14284:	mov	fp, sp
   14288:	sub	sp, sp, #16
   1428c:	str	r0, [sp, #8]
   14290:	str	r1, [sp, #4]
   14294:	ldr	r0, [sp, #8]
   14298:	mvn	r1, #0
   1429c:	cmp	r1, r0
   142a0:	bcs	142c4 <__assert_fail@plt+0x31dc>
   142a4:	ldr	r0, [sp, #4]
   142a8:	cmp	r0, #0
   142ac:	beq	142bc <__assert_fail@plt+0x31d4>
   142b0:	bl	141bc <__assert_fail@plt+0x30d4>
   142b4:	str	r0, [fp, #-4]
   142b8:	b	14304 <__assert_fail@plt+0x321c>
   142bc:	movw	r0, #0
   142c0:	str	r0, [sp, #8]
   142c4:	ldr	r0, [sp, #4]
   142c8:	mvn	r1, #0
   142cc:	cmp	r1, r0
   142d0:	bcs	142f4 <__assert_fail@plt+0x320c>
   142d4:	ldr	r0, [sp, #8]
   142d8:	cmp	r0, #0
   142dc:	beq	142ec <__assert_fail@plt+0x3204>
   142e0:	bl	141bc <__assert_fail@plt+0x30d4>
   142e4:	str	r0, [fp, #-4]
   142e8:	b	14304 <__assert_fail@plt+0x321c>
   142ec:	movw	r0, #0
   142f0:	str	r0, [sp, #4]
   142f4:	ldr	r0, [sp, #8]
   142f8:	ldr	r1, [sp, #4]
   142fc:	bl	1d960 <__assert_fail@plt+0xc878>
   14300:	str	r0, [fp, #-4]
   14304:	ldr	r0, [fp, #-4]
   14308:	mov	sp, fp
   1430c:	pop	{fp, pc}
   14310:	push	{fp, lr}
   14314:	mov	fp, sp
   14318:	sub	sp, sp, #16
   1431c:	str	r0, [fp, #-4]
   14320:	str	r1, [sp, #8]
   14324:	str	r2, [sp, #4]
   14328:	ldr	r0, [sp, #8]
   1432c:	cmp	r0, #0
   14330:	beq	14340 <__assert_fail@plt+0x3258>
   14334:	ldr	r0, [sp, #4]
   14338:	cmp	r0, #0
   1433c:	bne	1434c <__assert_fail@plt+0x3264>
   14340:	movw	r0, #1
   14344:	str	r0, [sp, #4]
   14348:	str	r0, [sp, #8]
   1434c:	ldr	r0, [sp, #8]
   14350:	cmn	r0, #1
   14354:	bhi	1437c <__assert_fail@plt+0x3294>
   14358:	ldr	r0, [sp, #4]
   1435c:	cmn	r0, #1
   14360:	bhi	1437c <__assert_fail@plt+0x3294>
   14364:	ldr	r0, [fp, #-4]
   14368:	ldr	r1, [sp, #8]
   1436c:	ldr	r2, [sp, #4]
   14370:	bl	16b24 <__assert_fail@plt+0x5a3c>
   14374:	str	r0, [sp]
   14378:	b	14384 <__assert_fail@plt+0x329c>
   1437c:	bl	141bc <__assert_fail@plt+0x30d4>
   14380:	str	r0, [sp]
   14384:	ldr	r0, [sp]
   14388:	mov	sp, fp
   1438c:	pop	{fp, pc}
   14390:	push	{fp, lr}
   14394:	mov	fp, sp
   14398:	sub	sp, sp, #24
   1439c:	str	r0, [fp, #-4]
   143a0:	ldr	r0, [fp, #-4]
   143a4:	movw	r1, #0
   143a8:	cmp	r0, r1
   143ac:	bne	143d0 <__assert_fail@plt+0x32e8>
   143b0:	movw	r0, #328	; 0x148
   143b4:	movt	r0, #3
   143b8:	ldr	r1, [r0]
   143bc:	movw	r0, #61519	; 0xf04f
   143c0:	movt	r0, #1
   143c4:	bl	110b8 <fputs@plt>
   143c8:	str	r0, [sp, #8]
   143cc:	bl	110d0 <abort@plt>
   143d0:	ldr	r0, [fp, #-4]
   143d4:	movw	r1, #47	; 0x2f
   143d8:	bl	1107c <strrchr@plt>
   143dc:	str	r0, [fp, #-8]
   143e0:	ldr	r0, [fp, #-8]
   143e4:	movw	r1, #0
   143e8:	cmp	r0, r1
   143ec:	beq	14400 <__assert_fail@plt+0x3318>
   143f0:	ldr	r0, [fp, #-8]
   143f4:	add	r0, r0, #1
   143f8:	str	r0, [sp, #4]
   143fc:	b	14408 <__assert_fail@plt+0x3320>
   14400:	ldr	r0, [fp, #-4]
   14404:	str	r0, [sp, #4]
   14408:	ldr	r0, [sp, #4]
   1440c:	str	r0, [sp, #12]
   14410:	ldr	r0, [sp, #12]
   14414:	ldr	r1, [fp, #-4]
   14418:	sub	r0, r0, r1
   1441c:	cmp	r0, #7
   14420:	blt	1448c <__assert_fail@plt+0x33a4>
   14424:	ldr	r0, [sp, #12]
   14428:	mvn	r1, #6
   1442c:	add	r0, r0, r1
   14430:	movw	r1, #61575	; 0xf087
   14434:	movt	r1, #1
   14438:	movw	r2, #7
   1443c:	bl	110c4 <strncmp@plt>
   14440:	cmp	r0, #0
   14444:	bne	1448c <__assert_fail@plt+0x33a4>
   14448:	ldr	r0, [sp, #12]
   1444c:	str	r0, [fp, #-4]
   14450:	ldr	r0, [sp, #12]
   14454:	movw	r1, #61583	; 0xf08f
   14458:	movt	r1, #1
   1445c:	movw	r2, #3
   14460:	bl	110c4 <strncmp@plt>
   14464:	cmp	r0, #0
   14468:	bne	14488 <__assert_fail@plt+0x33a0>
   1446c:	ldr	r0, [sp, #12]
   14470:	add	r0, r0, #3
   14474:	str	r0, [fp, #-4]
   14478:	ldr	r0, [fp, #-4]
   1447c:	movw	r1, #312	; 0x138
   14480:	movt	r1, #3
   14484:	str	r0, [r1]
   14488:	b	1448c <__assert_fail@plt+0x33a4>
   1448c:	ldr	r0, [fp, #-4]
   14490:	movw	r1, #360	; 0x168
   14494:	movt	r1, #3
   14498:	str	r0, [r1]
   1449c:	ldr	r0, [fp, #-4]
   144a0:	movw	r1, #316	; 0x13c
   144a4:	movt	r1, #3
   144a8:	str	r0, [r1]
   144ac:	mov	sp, fp
   144b0:	pop	{fp, pc}
   144b4:	push	{fp, lr}
   144b8:	mov	fp, sp
   144bc:	sub	sp, sp, #24
   144c0:	str	r0, [fp, #-4]
   144c4:	bl	11010 <__errno_location@plt>
   144c8:	ldr	r0, [r0]
   144cc:	str	r0, [fp, #-8]
   144d0:	ldr	r0, [fp, #-4]
   144d4:	movw	lr, #0
   144d8:	cmp	r0, lr
   144dc:	beq	144ec <__assert_fail@plt+0x3404>
   144e0:	ldr	r0, [fp, #-4]
   144e4:	str	r0, [sp, #8]
   144e8:	b	144fc <__assert_fail@plt+0x3414>
   144ec:	movw	r0, #364	; 0x16c
   144f0:	movt	r0, #3
   144f4:	str	r0, [sp, #8]
   144f8:	b	144fc <__assert_fail@plt+0x3414>
   144fc:	ldr	r0, [sp, #8]
   14500:	movw	r1, #48	; 0x30
   14504:	bl	1b4a4 <__assert_fail@plt+0xa3bc>
   14508:	str	r0, [sp, #12]
   1450c:	ldr	r0, [fp, #-8]
   14510:	str	r0, [sp, #4]
   14514:	bl	11010 <__errno_location@plt>
   14518:	ldr	r1, [sp, #4]
   1451c:	str	r1, [r0]
   14520:	ldr	r0, [sp, #12]
   14524:	mov	sp, fp
   14528:	pop	{fp, pc}
   1452c:	sub	sp, sp, #8
   14530:	str	r0, [sp, #4]
   14534:	ldr	r0, [sp, #4]
   14538:	movw	r1, #0
   1453c:	cmp	r0, r1
   14540:	beq	14550 <__assert_fail@plt+0x3468>
   14544:	ldr	r0, [sp, #4]
   14548:	str	r0, [sp]
   1454c:	b	14560 <__assert_fail@plt+0x3478>
   14550:	movw	r0, #364	; 0x16c
   14554:	movt	r0, #3
   14558:	str	r0, [sp]
   1455c:	b	14560 <__assert_fail@plt+0x3478>
   14560:	ldr	r0, [sp]
   14564:	ldr	r0, [r0]
   14568:	add	sp, sp, #8
   1456c:	bx	lr
   14570:	sub	sp, sp, #16
   14574:	str	r0, [sp, #12]
   14578:	str	r1, [sp, #8]
   1457c:	ldr	r0, [sp, #8]
   14580:	ldr	r1, [sp, #12]
   14584:	movw	r2, #0
   14588:	cmp	r1, r2
   1458c:	str	r0, [sp, #4]
   14590:	beq	145a0 <__assert_fail@plt+0x34b8>
   14594:	ldr	r0, [sp, #12]
   14598:	str	r0, [sp]
   1459c:	b	145b0 <__assert_fail@plt+0x34c8>
   145a0:	movw	r0, #364	; 0x16c
   145a4:	movt	r0, #3
   145a8:	str	r0, [sp]
   145ac:	b	145b0 <__assert_fail@plt+0x34c8>
   145b0:	ldr	r0, [sp]
   145b4:	ldr	r1, [sp, #4]
   145b8:	str	r1, [r0]
   145bc:	add	sp, sp, #16
   145c0:	bx	lr
   145c4:	sub	sp, sp, #32
   145c8:	str	r0, [sp, #28]
   145cc:	strb	r1, [sp, #27]
   145d0:	str	r2, [sp, #20]
   145d4:	ldrb	r0, [sp, #27]
   145d8:	strb	r0, [sp, #19]
   145dc:	ldr	r0, [sp, #28]
   145e0:	movw	r1, #0
   145e4:	cmp	r0, r1
   145e8:	beq	145f8 <__assert_fail@plt+0x3510>
   145ec:	ldr	r0, [sp, #28]
   145f0:	str	r0, [sp]
   145f4:	b	14608 <__assert_fail@plt+0x3520>
   145f8:	movw	r0, #364	; 0x16c
   145fc:	movt	r0, #3
   14600:	str	r0, [sp]
   14604:	b	14608 <__assert_fail@plt+0x3520>
   14608:	ldr	r0, [sp]
   1460c:	add	r0, r0, #8
   14610:	ldrb	r1, [sp, #19]
   14614:	lsr	r1, r1, #5
   14618:	add	r0, r0, r1, lsl #2
   1461c:	str	r0, [sp, #12]
   14620:	ldrb	r0, [sp, #19]
   14624:	and	r0, r0, #31
   14628:	str	r0, [sp, #8]
   1462c:	ldr	r0, [sp, #12]
   14630:	ldr	r0, [r0]
   14634:	ldr	r1, [sp, #8]
   14638:	lsr	r0, r0, r1
   1463c:	and	r0, r0, #1
   14640:	str	r0, [sp, #4]
   14644:	ldr	r0, [sp, #20]
   14648:	and	r0, r0, #1
   1464c:	ldr	r1, [sp, #4]
   14650:	eor	r0, r0, r1
   14654:	ldr	r1, [sp, #8]
   14658:	lsl	r0, r0, r1
   1465c:	ldr	r1, [sp, #12]
   14660:	ldr	r2, [r1]
   14664:	eor	r0, r2, r0
   14668:	str	r0, [r1]
   1466c:	ldr	r0, [sp, #4]
   14670:	add	sp, sp, #32
   14674:	bx	lr
   14678:	sub	sp, sp, #12
   1467c:	str	r0, [sp, #8]
   14680:	str	r1, [sp, #4]
   14684:	ldr	r0, [sp, #8]
   14688:	movw	r1, #0
   1468c:	cmp	r0, r1
   14690:	bne	146a0 <__assert_fail@plt+0x35b8>
   14694:	movw	r0, #364	; 0x16c
   14698:	movt	r0, #3
   1469c:	str	r0, [sp, #8]
   146a0:	ldr	r0, [sp, #8]
   146a4:	ldr	r0, [r0, #4]
   146a8:	str	r0, [sp]
   146ac:	ldr	r0, [sp, #4]
   146b0:	ldr	r1, [sp, #8]
   146b4:	str	r0, [r1, #4]
   146b8:	ldr	r0, [sp]
   146bc:	add	sp, sp, #12
   146c0:	bx	lr
   146c4:	push	{fp, lr}
   146c8:	mov	fp, sp
   146cc:	sub	sp, sp, #16
   146d0:	str	r0, [fp, #-4]
   146d4:	str	r1, [sp, #8]
   146d8:	str	r2, [sp, #4]
   146dc:	ldr	r0, [fp, #-4]
   146e0:	movw	r1, #0
   146e4:	cmp	r0, r1
   146e8:	bne	146f8 <__assert_fail@plt+0x3610>
   146ec:	movw	r0, #364	; 0x16c
   146f0:	movt	r0, #3
   146f4:	str	r0, [fp, #-4]
   146f8:	ldr	r0, [fp, #-4]
   146fc:	movw	r1, #10
   14700:	str	r1, [r0]
   14704:	ldr	r0, [sp, #8]
   14708:	movw	r1, #0
   1470c:	cmp	r0, r1
   14710:	beq	14724 <__assert_fail@plt+0x363c>
   14714:	ldr	r0, [sp, #4]
   14718:	movw	r1, #0
   1471c:	cmp	r0, r1
   14720:	bne	14728 <__assert_fail@plt+0x3640>
   14724:	bl	110d0 <abort@plt>
   14728:	ldr	r0, [sp, #8]
   1472c:	ldr	r1, [fp, #-4]
   14730:	str	r0, [r1, #40]	; 0x28
   14734:	ldr	r0, [sp, #4]
   14738:	ldr	r1, [fp, #-4]
   1473c:	str	r0, [r1, #44]	; 0x2c
   14740:	mov	sp, fp
   14744:	pop	{fp, pc}
   14748:	push	{r4, r5, r6, sl, fp, lr}
   1474c:	add	fp, sp, #16
   14750:	sub	sp, sp, #64	; 0x40
   14754:	ldr	ip, [fp, #8]
   14758:	str	r0, [fp, #-20]	; 0xffffffec
   1475c:	str	r1, [fp, #-24]	; 0xffffffe8
   14760:	str	r2, [fp, #-28]	; 0xffffffe4
   14764:	str	r3, [fp, #-32]	; 0xffffffe0
   14768:	ldr	r0, [fp, #8]
   1476c:	movw	r1, #0
   14770:	cmp	r0, r1
   14774:	str	ip, [sp, #32]
   14778:	beq	14788 <__assert_fail@plt+0x36a0>
   1477c:	ldr	r0, [fp, #8]
   14780:	str	r0, [sp, #28]
   14784:	b	14798 <__assert_fail@plt+0x36b0>
   14788:	movw	r0, #364	; 0x16c
   1478c:	movt	r0, #3
   14790:	str	r0, [sp, #28]
   14794:	b	14798 <__assert_fail@plt+0x36b0>
   14798:	ldr	r0, [sp, #28]
   1479c:	str	r0, [fp, #-36]	; 0xffffffdc
   147a0:	bl	11010 <__errno_location@plt>
   147a4:	ldr	r0, [r0]
   147a8:	str	r0, [sp, #40]	; 0x28
   147ac:	ldr	r0, [fp, #-20]	; 0xffffffec
   147b0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   147b4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   147b8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   147bc:	ldr	lr, [fp, #-36]	; 0xffffffdc
   147c0:	ldr	lr, [lr]
   147c4:	ldr	ip, [fp, #-36]	; 0xffffffdc
   147c8:	ldr	ip, [ip, #4]
   147cc:	ldr	r4, [fp, #-36]	; 0xffffffdc
   147d0:	add	r4, r4, #8
   147d4:	ldr	r5, [fp, #-36]	; 0xffffffdc
   147d8:	ldr	r5, [r5, #40]	; 0x28
   147dc:	ldr	r6, [fp, #-36]	; 0xffffffdc
   147e0:	ldr	r6, [r6, #44]	; 0x2c
   147e4:	str	lr, [sp]
   147e8:	str	ip, [sp, #4]
   147ec:	str	r4, [sp, #8]
   147f0:	str	r5, [sp, #12]
   147f4:	str	r6, [sp, #16]
   147f8:	bl	14820 <__assert_fail@plt+0x3738>
   147fc:	str	r0, [sp, #36]	; 0x24
   14800:	ldr	r0, [sp, #40]	; 0x28
   14804:	str	r0, [sp, #24]
   14808:	bl	11010 <__errno_location@plt>
   1480c:	ldr	r1, [sp, #24]
   14810:	str	r1, [r0]
   14814:	ldr	r0, [sp, #36]	; 0x24
   14818:	sub	sp, fp, #16
   1481c:	pop	{r4, r5, r6, sl, fp, pc}
   14820:	push	{r4, r5, r6, sl, fp, lr}
   14824:	add	fp, sp, #16
   14828:	sub	sp, sp, #168	; 0xa8
   1482c:	ldr	ip, [fp, #24]
   14830:	ldr	lr, [fp, #20]
   14834:	ldr	r4, [fp, #16]
   14838:	ldr	r5, [fp, #12]
   1483c:	ldr	r6, [fp, #8]
   14840:	str	r0, [fp, #-24]	; 0xffffffe8
   14844:	str	r1, [fp, #-28]	; 0xffffffe4
   14848:	str	r2, [fp, #-32]	; 0xffffffe0
   1484c:	str	r3, [fp, #-36]	; 0xffffffdc
   14850:	movw	r0, #0
   14854:	str	r0, [fp, #-44]	; 0xffffffd4
   14858:	str	r0, [fp, #-48]	; 0xffffffd0
   1485c:	str	r0, [fp, #-52]	; 0xffffffcc
   14860:	str	r0, [fp, #-56]	; 0xffffffc8
   14864:	movw	r0, #0
   14868:	strb	r0, [fp, #-57]	; 0xffffffc7
   1486c:	str	r6, [sp, #80]	; 0x50
   14870:	str	lr, [sp, #76]	; 0x4c
   14874:	str	r4, [sp, #72]	; 0x48
   14878:	str	r5, [sp, #68]	; 0x44
   1487c:	str	ip, [sp, #64]	; 0x40
   14880:	bl	10f50 <__ctype_get_mb_cur_max@plt>
   14884:	cmp	r0, #1
   14888:	movw	r0, #0
   1488c:	moveq	r0, #1
   14890:	and	r0, r0, #1
   14894:	strb	r0, [fp, #-58]	; 0xffffffc6
   14898:	ldr	r0, [fp, #12]
   1489c:	and	r0, r0, #2
   148a0:	cmp	r0, #0
   148a4:	movw	r0, #0
   148a8:	movne	r0, #1
   148ac:	and	r0, r0, #1
   148b0:	strb	r0, [fp, #-59]	; 0xffffffc5
   148b4:	movw	r0, #0
   148b8:	strb	r0, [fp, #-60]	; 0xffffffc4
   148bc:	strb	r0, [fp, #-61]	; 0xffffffc3
   148c0:	movw	r0, #1
   148c4:	strb	r0, [fp, #-62]	; 0xffffffc2
   148c8:	ldr	r0, [fp, #8]
   148cc:	cmp	r0, #10
   148d0:	str	r0, [sp, #60]	; 0x3c
   148d4:	bhi	14afc <__assert_fail@plt+0x3a14>
   148d8:	add	r0, pc, #8
   148dc:	ldr	r1, [sp, #60]	; 0x3c
   148e0:	ldr	r0, [r0, r1, lsl #2]
   148e4:	mov	pc, r0
   148e8:	strdeq	r4, [r1], -r0
   148ec:	andeq	r4, r1, ip, ror #20
   148f0:	andeq	r4, r1, ip, lsl #21
   148f4:	andeq	r4, r1, r4, ror #20
   148f8:	andeq	r4, r1, r4, ror sl
   148fc:	andeq	r4, r1, r4, lsr #18
   14900:	andeq	r4, r1, r4, lsl r9
   14904:	andeq	r4, r1, r8, lsl #19
   14908:	muleq	r1, ip, r9
   1490c:	muleq	r1, ip, r9
   14910:	muleq	r1, ip, r9
   14914:	movw	r0, #5
   14918:	str	r0, [fp, #8]
   1491c:	movw	r0, #1
   14920:	strb	r0, [fp, #-59]	; 0xffffffc5
   14924:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14928:	tst	r0, #1
   1492c:	bne	14968 <__assert_fail@plt+0x3880>
   14930:	b	14934 <__assert_fail@plt+0x384c>
   14934:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14938:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1493c:	cmp	r0, r1
   14940:	bcs	14958 <__assert_fail@plt+0x3870>
   14944:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14948:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1494c:	add	r0, r0, r1
   14950:	movw	r1, #34	; 0x22
   14954:	strb	r1, [r0]
   14958:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1495c:	add	r0, r0, #1
   14960:	str	r0, [fp, #-44]	; 0xffffffd4
   14964:	b	14968 <__assert_fail@plt+0x3880>
   14968:	movw	r0, #1
   1496c:	strb	r0, [fp, #-57]	; 0xffffffc7
   14970:	movw	r0, #61663	; 0xf0df
   14974:	movt	r0, #1
   14978:	str	r0, [fp, #-52]	; 0xffffffcc
   1497c:	movw	r0, #1
   14980:	str	r0, [fp, #-56]	; 0xffffffc8
   14984:	b	14b00 <__assert_fail@plt+0x3a18>
   14988:	movw	r0, #1
   1498c:	strb	r0, [fp, #-57]	; 0xffffffc7
   14990:	movw	r0, #0
   14994:	strb	r0, [fp, #-59]	; 0xffffffc5
   14998:	b	14b00 <__assert_fail@plt+0x3a18>
   1499c:	ldr	r0, [fp, #8]
   149a0:	cmp	r0, #10
   149a4:	beq	149d0 <__assert_fail@plt+0x38e8>
   149a8:	ldr	r1, [fp, #8]
   149ac:	movw	r0, #61665	; 0xf0e1
   149b0:	movt	r0, #1
   149b4:	bl	16a10 <__assert_fail@plt+0x5928>
   149b8:	str	r0, [fp, #20]
   149bc:	ldr	r1, [fp, #8]
   149c0:	movw	r0, #61667	; 0xf0e3
   149c4:	movt	r0, #1
   149c8:	bl	16a10 <__assert_fail@plt+0x5928>
   149cc:	str	r0, [fp, #24]
   149d0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   149d4:	tst	r0, #1
   149d8:	bne	14a44 <__assert_fail@plt+0x395c>
   149dc:	ldr	r0, [fp, #20]
   149e0:	str	r0, [fp, #-52]	; 0xffffffcc
   149e4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   149e8:	ldrsb	r0, [r0]
   149ec:	cmp	r0, #0
   149f0:	beq	14a40 <__assert_fail@plt+0x3958>
   149f4:	b	149f8 <__assert_fail@plt+0x3910>
   149f8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   149fc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14a00:	cmp	r0, r1
   14a04:	bcs	14a20 <__assert_fail@plt+0x3938>
   14a08:	ldr	r0, [fp, #-52]	; 0xffffffcc
   14a0c:	ldrb	r0, [r0]
   14a10:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14a14:	ldr	r2, [fp, #-44]	; 0xffffffd4
   14a18:	add	r1, r1, r2
   14a1c:	strb	r0, [r1]
   14a20:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14a24:	add	r0, r0, #1
   14a28:	str	r0, [fp, #-44]	; 0xffffffd4
   14a2c:	b	14a30 <__assert_fail@plt+0x3948>
   14a30:	ldr	r0, [fp, #-52]	; 0xffffffcc
   14a34:	add	r0, r0, #1
   14a38:	str	r0, [fp, #-52]	; 0xffffffcc
   14a3c:	b	149e4 <__assert_fail@plt+0x38fc>
   14a40:	b	14a44 <__assert_fail@plt+0x395c>
   14a44:	movw	r0, #1
   14a48:	strb	r0, [fp, #-57]	; 0xffffffc7
   14a4c:	ldr	r0, [fp, #24]
   14a50:	str	r0, [fp, #-52]	; 0xffffffcc
   14a54:	ldr	r0, [fp, #-52]	; 0xffffffcc
   14a58:	bl	10fec <strlen@plt>
   14a5c:	str	r0, [fp, #-56]	; 0xffffffc8
   14a60:	b	14b00 <__assert_fail@plt+0x3a18>
   14a64:	movw	r0, #1
   14a68:	strb	r0, [fp, #-57]	; 0xffffffc7
   14a6c:	movw	r0, #1
   14a70:	strb	r0, [fp, #-59]	; 0xffffffc5
   14a74:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14a78:	tst	r0, #1
   14a7c:	bne	14a88 <__assert_fail@plt+0x39a0>
   14a80:	movw	r0, #1
   14a84:	strb	r0, [fp, #-57]	; 0xffffffc7
   14a88:	b	14a8c <__assert_fail@plt+0x39a4>
   14a8c:	movw	r0, #2
   14a90:	str	r0, [fp, #8]
   14a94:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14a98:	tst	r0, #1
   14a9c:	bne	14ad8 <__assert_fail@plt+0x39f0>
   14aa0:	b	14aa4 <__assert_fail@plt+0x39bc>
   14aa4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14aa8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14aac:	cmp	r0, r1
   14ab0:	bcs	14ac8 <__assert_fail@plt+0x39e0>
   14ab4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14ab8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14abc:	add	r0, r0, r1
   14ac0:	movw	r1, #39	; 0x27
   14ac4:	strb	r1, [r0]
   14ac8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14acc:	add	r0, r0, #1
   14ad0:	str	r0, [fp, #-44]	; 0xffffffd4
   14ad4:	b	14ad8 <__assert_fail@plt+0x39f0>
   14ad8:	movw	r0, #61667	; 0xf0e3
   14adc:	movt	r0, #1
   14ae0:	str	r0, [fp, #-52]	; 0xffffffcc
   14ae4:	movw	r0, #1
   14ae8:	str	r0, [fp, #-56]	; 0xffffffc8
   14aec:	b	14b00 <__assert_fail@plt+0x3a18>
   14af0:	movw	r0, #0
   14af4:	strb	r0, [fp, #-59]	; 0xffffffc5
   14af8:	b	14b00 <__assert_fail@plt+0x3a18>
   14afc:	bl	110d0 <abort@plt>
   14b00:	movw	r0, #0
   14b04:	str	r0, [fp, #-40]	; 0xffffffd8
   14b08:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14b0c:	cmn	r0, #1
   14b10:	bne	14b3c <__assert_fail@plt+0x3a54>
   14b14:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14b18:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14b1c:	add	r0, r0, r1
   14b20:	ldrb	r0, [r0]
   14b24:	cmp	r0, #0
   14b28:	movw	r0, #0
   14b2c:	moveq	r0, #1
   14b30:	and	r0, r0, #1
   14b34:	str	r0, [sp, #56]	; 0x38
   14b38:	b	14b58 <__assert_fail@plt+0x3a70>
   14b3c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14b40:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14b44:	cmp	r0, r1
   14b48:	movw	r0, #0
   14b4c:	moveq	r0, #1
   14b50:	and	r0, r0, #1
   14b54:	str	r0, [sp, #56]	; 0x38
   14b58:	ldr	r0, [sp, #56]	; 0x38
   14b5c:	cmp	r0, #0
   14b60:	movw	r0, #0
   14b64:	movne	r0, #1
   14b68:	mvn	r1, #0
   14b6c:	eor	r0, r0, r1
   14b70:	tst	r0, #1
   14b74:	beq	15d64 <__assert_fail@plt+0x4c7c>
   14b78:	movw	r0, #0
   14b7c:	strb	r0, [fp, #-65]	; 0xffffffbf
   14b80:	strb	r0, [fp, #-66]	; 0xffffffbe
   14b84:	strb	r0, [fp, #-67]	; 0xffffffbd
   14b88:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   14b8c:	tst	r0, #1
   14b90:	beq	14c3c <__assert_fail@plt+0x3b54>
   14b94:	ldr	r0, [fp, #8]
   14b98:	cmp	r0, #2
   14b9c:	beq	14c3c <__assert_fail@plt+0x3b54>
   14ba0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   14ba4:	cmp	r0, #0
   14ba8:	beq	14c3c <__assert_fail@plt+0x3b54>
   14bac:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14bb0:	ldr	r1, [fp, #-56]	; 0xffffffc8
   14bb4:	add	r0, r0, r1
   14bb8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14bbc:	cmn	r1, #1
   14bc0:	str	r0, [sp, #52]	; 0x34
   14bc4:	bne	14bec <__assert_fail@plt+0x3b04>
   14bc8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   14bcc:	movw	r1, #1
   14bd0:	cmp	r1, r0
   14bd4:	bcs	14bec <__assert_fail@plt+0x3b04>
   14bd8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14bdc:	bl	10fec <strlen@plt>
   14be0:	str	r0, [fp, #-36]	; 0xffffffdc
   14be4:	str	r0, [sp, #48]	; 0x30
   14be8:	b	14bf4 <__assert_fail@plt+0x3b0c>
   14bec:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14bf0:	str	r0, [sp, #48]	; 0x30
   14bf4:	ldr	r0, [sp, #48]	; 0x30
   14bf8:	ldr	r1, [sp, #52]	; 0x34
   14bfc:	cmp	r1, r0
   14c00:	bhi	14c3c <__assert_fail@plt+0x3b54>
   14c04:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14c08:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14c0c:	add	r0, r0, r1
   14c10:	ldr	r1, [fp, #-52]	; 0xffffffcc
   14c14:	ldr	r2, [fp, #-56]	; 0xffffffc8
   14c18:	bl	10f08 <memcmp@plt>
   14c1c:	cmp	r0, #0
   14c20:	bne	14c3c <__assert_fail@plt+0x3b54>
   14c24:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14c28:	tst	r0, #1
   14c2c:	beq	14c34 <__assert_fail@plt+0x3b4c>
   14c30:	b	15ee4 <__assert_fail@plt+0x4dfc>
   14c34:	movw	r0, #1
   14c38:	strb	r0, [fp, #-65]	; 0xffffffbf
   14c3c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14c40:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14c44:	ldrb	r0, [r0, r1]
   14c48:	strb	r0, [fp, #-63]	; 0xffffffc1
   14c4c:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   14c50:	mov	r1, r0
   14c54:	cmp	r0, #126	; 0x7e
   14c58:	str	r1, [sp, #44]	; 0x2c
   14c5c:	bhi	154cc <__assert_fail@plt+0x43e4>
   14c60:	add	r0, pc, #8
   14c64:	ldr	r1, [sp, #44]	; 0x2c
   14c68:	ldr	r0, [r0, r1, lsl #2]
   14c6c:	mov	pc, r0
   14c70:	andeq	r4, r1, ip, ror #28
   14c74:	andeq	r5, r1, ip, asr #9
   14c78:	andeq	r5, r1, ip, asr #9
   14c7c:	andeq	r5, r1, ip, asr #9
   14c80:	andeq	r5, r1, ip, asr #9
   14c84:	andeq	r5, r1, ip, asr #9
   14c88:	andeq	r5, r1, ip, asr #9
   14c8c:	andeq	r5, r1, r4, ror r2
   14c90:	andeq	r5, r1, r0, lsl #5
   14c94:			; <UNDEFINED> instruction: 0x000152b0
   14c98:	muleq	r1, r8, r2
   14c9c:			; <UNDEFINED> instruction: 0x000152bc
   14ca0:	andeq	r5, r1, ip, lsl #5
   14ca4:	andeq	r5, r1, r4, lsr #5
   14ca8:	andeq	r5, r1, ip, asr #9
   14cac:	andeq	r5, r1, ip, asr #9
   14cb0:	andeq	r5, r1, ip, asr #9
   14cb4:	andeq	r5, r1, ip, asr #9
   14cb8:	andeq	r5, r1, ip, asr #9
   14cbc:	andeq	r5, r1, ip, asr #9
   14cc0:	andeq	r5, r1, ip, asr #9
   14cc4:	andeq	r5, r1, ip, asr #9
   14cc8:	andeq	r5, r1, ip, asr #9
   14ccc:	andeq	r5, r1, ip, asr #9
   14cd0:	andeq	r5, r1, ip, asr #9
   14cd4:	andeq	r5, r1, ip, asr #9
   14cd8:	andeq	r5, r1, ip, asr #9
   14cdc:	andeq	r5, r1, ip, asr #9
   14ce0:	andeq	r5, r1, ip, asr #9
   14ce4:	andeq	r5, r1, ip, asr #9
   14ce8:	andeq	r5, r1, ip, asr #9
   14cec:	andeq	r5, r1, ip, asr #9
   14cf0:	andeq	r5, r1, r0, lsr #7
   14cf4:	andeq	r5, r1, r8, lsr #7
   14cf8:	andeq	r5, r1, r8, lsr #7
   14cfc:	andeq	r5, r1, ip, lsl #7
   14d00:	andeq	r5, r1, r8, lsr #7
   14d04:	andeq	r5, r1, r0, asr #9
   14d08:	andeq	r5, r1, r8, lsr #7
   14d0c:	andeq	r5, r1, r8, asr #7
   14d10:	andeq	r5, r1, r8, lsr #7
   14d14:	andeq	r5, r1, r8, lsr #7
   14d18:	andeq	r5, r1, r8, lsr #7
   14d1c:	andeq	r5, r1, r0, asr #9
   14d20:	andeq	r5, r1, r0, asr #9
   14d24:	andeq	r5, r1, r0, asr #9
   14d28:	andeq	r5, r1, r0, asr #9
   14d2c:	andeq	r5, r1, r0, asr #9
   14d30:	andeq	r5, r1, r0, asr #9
   14d34:	andeq	r5, r1, r0, asr #9
   14d38:	andeq	r5, r1, r0, asr #9
   14d3c:	andeq	r5, r1, r0, asr #9
   14d40:	andeq	r5, r1, r0, asr #9
   14d44:	andeq	r5, r1, r0, asr #9
   14d48:	andeq	r5, r1, r0, asr #9
   14d4c:	andeq	r5, r1, r0, asr #9
   14d50:	andeq	r5, r1, r0, asr #9
   14d54:	andeq	r5, r1, r0, asr #9
   14d58:	andeq	r5, r1, r0, asr #9
   14d5c:	andeq	r5, r1, r8, lsr #7
   14d60:	andeq	r5, r1, r8, lsr #7
   14d64:	andeq	r5, r1, r8, lsr #7
   14d68:	andeq	r5, r1, r8, lsr #7
   14d6c:	andeq	r5, r1, r8, ror r0
   14d70:	andeq	r5, r1, ip, asr #9
   14d74:	andeq	r5, r1, r0, asr #9
   14d78:	andeq	r5, r1, r0, asr #9
   14d7c:	andeq	r5, r1, r0, asr #9
   14d80:	andeq	r5, r1, r0, asr #9
   14d84:	andeq	r5, r1, r0, asr #9
   14d88:	andeq	r5, r1, r0, asr #9
   14d8c:	andeq	r5, r1, r0, asr #9
   14d90:	andeq	r5, r1, r0, asr #9
   14d94:	andeq	r5, r1, r0, asr #9
   14d98:	andeq	r5, r1, r0, asr #9
   14d9c:	andeq	r5, r1, r0, asr #9
   14da0:	andeq	r5, r1, r0, asr #9
   14da4:	andeq	r5, r1, r0, asr #9
   14da8:	andeq	r5, r1, r0, asr #9
   14dac:	andeq	r5, r1, r0, asr #9
   14db0:	andeq	r5, r1, r0, asr #9
   14db4:	andeq	r5, r1, r0, asr #9
   14db8:	andeq	r5, r1, r0, asr #9
   14dbc:	andeq	r5, r1, r0, asr #9
   14dc0:	andeq	r5, r1, r0, asr #9
   14dc4:	andeq	r5, r1, r0, asr #9
   14dc8:	andeq	r5, r1, r0, asr #9
   14dcc:	andeq	r5, r1, r0, asr #9
   14dd0:	andeq	r5, r1, r0, asr #9
   14dd4:	andeq	r5, r1, r0, asr #9
   14dd8:	andeq	r5, r1, r0, asr #9
   14ddc:	andeq	r5, r1, r8, lsr #7
   14de0:	andeq	r5, r1, r8, asr #5
   14de4:	andeq	r5, r1, r0, asr #9
   14de8:	andeq	r5, r1, r8, lsr #7
   14dec:	andeq	r5, r1, r0, asr #9
   14df0:	andeq	r5, r1, r8, lsr #7
   14df4:	andeq	r5, r1, r0, asr #9
   14df8:	andeq	r5, r1, r0, asr #9
   14dfc:	andeq	r5, r1, r0, asr #9
   14e00:	andeq	r5, r1, r0, asr #9
   14e04:	andeq	r5, r1, r0, asr #9
   14e08:	andeq	r5, r1, r0, asr #9
   14e0c:	andeq	r5, r1, r0, asr #9
   14e10:	andeq	r5, r1, r0, asr #9
   14e14:	andeq	r5, r1, r0, asr #9
   14e18:	andeq	r5, r1, r0, asr #9
   14e1c:	andeq	r5, r1, r0, asr #9
   14e20:	andeq	r5, r1, r0, asr #9
   14e24:	andeq	r5, r1, r0, asr #9
   14e28:	andeq	r5, r1, r0, asr #9
   14e2c:	andeq	r5, r1, r0, asr #9
   14e30:	andeq	r5, r1, r0, asr #9
   14e34:	andeq	r5, r1, r0, asr #9
   14e38:	andeq	r5, r1, r0, asr #9
   14e3c:	andeq	r5, r1, r0, asr #9
   14e40:	andeq	r5, r1, r0, asr #9
   14e44:	andeq	r5, r1, r0, asr #9
   14e48:	andeq	r5, r1, r0, asr #9
   14e4c:	andeq	r5, r1, r0, asr #9
   14e50:	andeq	r5, r1, r0, asr #9
   14e54:	andeq	r5, r1, r0, asr #9
   14e58:	andeq	r5, r1, r0, asr #9
   14e5c:	andeq	r5, r1, r8, asr r3
   14e60:	andeq	r5, r1, r8, lsr #7
   14e64:	andeq	r5, r1, r8, asr r3
   14e68:	andeq	r5, r1, ip, lsl #7
   14e6c:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   14e70:	tst	r0, #1
   14e74:	beq	1505c <__assert_fail@plt+0x3f74>
   14e78:	b	14e7c <__assert_fail@plt+0x3d94>
   14e7c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14e80:	tst	r0, #1
   14e84:	beq	14e8c <__assert_fail@plt+0x3da4>
   14e88:	b	15ee4 <__assert_fail@plt+0x4dfc>
   14e8c:	movw	r0, #1
   14e90:	strb	r0, [fp, #-66]	; 0xffffffbe
   14e94:	ldr	r0, [fp, #8]
   14e98:	cmp	r0, #2
   14e9c:	bne	14f50 <__assert_fail@plt+0x3e68>
   14ea0:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   14ea4:	tst	r0, #1
   14ea8:	bne	14f50 <__assert_fail@plt+0x3e68>
   14eac:	b	14eb0 <__assert_fail@plt+0x3dc8>
   14eb0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14eb4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14eb8:	cmp	r0, r1
   14ebc:	bcs	14ed4 <__assert_fail@plt+0x3dec>
   14ec0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14ec4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14ec8:	add	r0, r0, r1
   14ecc:	movw	r1, #39	; 0x27
   14ed0:	strb	r1, [r0]
   14ed4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14ed8:	add	r0, r0, #1
   14edc:	str	r0, [fp, #-44]	; 0xffffffd4
   14ee0:	b	14ee4 <__assert_fail@plt+0x3dfc>
   14ee4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14ee8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14eec:	cmp	r0, r1
   14ef0:	bcs	14f08 <__assert_fail@plt+0x3e20>
   14ef4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14ef8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14efc:	add	r0, r0, r1
   14f00:	movw	r1, #36	; 0x24
   14f04:	strb	r1, [r0]
   14f08:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14f0c:	add	r0, r0, #1
   14f10:	str	r0, [fp, #-44]	; 0xffffffd4
   14f14:	b	14f18 <__assert_fail@plt+0x3e30>
   14f18:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14f1c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14f20:	cmp	r0, r1
   14f24:	bcs	14f3c <__assert_fail@plt+0x3e54>
   14f28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14f2c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14f30:	add	r0, r0, r1
   14f34:	movw	r1, #39	; 0x27
   14f38:	strb	r1, [r0]
   14f3c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14f40:	add	r0, r0, #1
   14f44:	str	r0, [fp, #-44]	; 0xffffffd4
   14f48:	movw	r0, #1
   14f4c:	strb	r0, [fp, #-60]	; 0xffffffc4
   14f50:	b	14f54 <__assert_fail@plt+0x3e6c>
   14f54:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14f58:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14f5c:	cmp	r0, r1
   14f60:	bcs	14f78 <__assert_fail@plt+0x3e90>
   14f64:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14f68:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14f6c:	add	r0, r0, r1
   14f70:	movw	r1, #92	; 0x5c
   14f74:	strb	r1, [r0]
   14f78:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14f7c:	add	r0, r0, #1
   14f80:	str	r0, [fp, #-44]	; 0xffffffd4
   14f84:	b	14f88 <__assert_fail@plt+0x3ea0>
   14f88:	ldr	r0, [fp, #8]
   14f8c:	cmp	r0, #2
   14f90:	beq	15050 <__assert_fail@plt+0x3f68>
   14f94:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14f98:	add	r0, r0, #1
   14f9c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14fa0:	cmp	r0, r1
   14fa4:	bcs	15050 <__assert_fail@plt+0x3f68>
   14fa8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14fac:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14fb0:	add	r1, r1, #1
   14fb4:	add	r0, r0, r1
   14fb8:	ldrb	r0, [r0]
   14fbc:	movw	r1, #48	; 0x30
   14fc0:	cmp	r1, r0
   14fc4:	bgt	15050 <__assert_fail@plt+0x3f68>
   14fc8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14fcc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14fd0:	add	r1, r1, #1
   14fd4:	add	r0, r0, r1
   14fd8:	ldrb	r0, [r0]
   14fdc:	cmp	r0, #57	; 0x39
   14fe0:	bgt	15050 <__assert_fail@plt+0x3f68>
   14fe4:	b	14fe8 <__assert_fail@plt+0x3f00>
   14fe8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14fec:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14ff0:	cmp	r0, r1
   14ff4:	bcs	1500c <__assert_fail@plt+0x3f24>
   14ff8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14ffc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15000:	add	r0, r0, r1
   15004:	movw	r1, #48	; 0x30
   15008:	strb	r1, [r0]
   1500c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15010:	add	r0, r0, #1
   15014:	str	r0, [fp, #-44]	; 0xffffffd4
   15018:	b	1501c <__assert_fail@plt+0x3f34>
   1501c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15020:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15024:	cmp	r0, r1
   15028:	bcs	15040 <__assert_fail@plt+0x3f58>
   1502c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15030:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15034:	add	r0, r0, r1
   15038:	movw	r1, #48	; 0x30
   1503c:	strb	r1, [r0]
   15040:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15044:	add	r0, r0, #1
   15048:	str	r0, [fp, #-44]	; 0xffffffd4
   1504c:	b	15050 <__assert_fail@plt+0x3f68>
   15050:	movw	r0, #48	; 0x30
   15054:	strb	r0, [fp, #-63]	; 0xffffffc1
   15058:	b	15074 <__assert_fail@plt+0x3f8c>
   1505c:	ldr	r0, [fp, #12]
   15060:	and	r0, r0, #1
   15064:	cmp	r0, #0
   15068:	beq	15070 <__assert_fail@plt+0x3f88>
   1506c:	b	15d54 <__assert_fail@plt+0x4c6c>
   15070:	b	15074 <__assert_fail@plt+0x3f8c>
   15074:	b	15af0 <__assert_fail@plt+0x4a08>
   15078:	ldr	r0, [fp, #8]
   1507c:	cmp	r0, #2
   15080:	str	r0, [sp, #40]	; 0x28
   15084:	beq	1509c <__assert_fail@plt+0x3fb4>
   15088:	b	1508c <__assert_fail@plt+0x3fa4>
   1508c:	ldr	r0, [sp, #40]	; 0x28
   15090:	cmp	r0, #5
   15094:	beq	150b0 <__assert_fail@plt+0x3fc8>
   15098:	b	1526c <__assert_fail@plt+0x4184>
   1509c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   150a0:	tst	r0, #1
   150a4:	beq	150ac <__assert_fail@plt+0x3fc4>
   150a8:	b	15ee4 <__assert_fail@plt+0x4dfc>
   150ac:	b	15270 <__assert_fail@plt+0x4188>
   150b0:	ldr	r0, [fp, #12]
   150b4:	and	r0, r0, #4
   150b8:	cmp	r0, #0
   150bc:	beq	15268 <__assert_fail@plt+0x4180>
   150c0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   150c4:	add	r0, r0, #2
   150c8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   150cc:	cmp	r0, r1
   150d0:	bcs	15268 <__assert_fail@plt+0x4180>
   150d4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   150d8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   150dc:	add	r1, r1, #1
   150e0:	add	r0, r0, r1
   150e4:	ldrb	r0, [r0]
   150e8:	cmp	r0, #63	; 0x3f
   150ec:	bne	15268 <__assert_fail@plt+0x4180>
   150f0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   150f4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   150f8:	add	r0, r0, r1
   150fc:	ldrb	r0, [r0, #2]
   15100:	mov	r1, r0
   15104:	cmp	r0, #33	; 0x21
   15108:	str	r1, [sp, #36]	; 0x24
   1510c:	beq	1515c <__assert_fail@plt+0x4074>
   15110:	b	15114 <__assert_fail@plt+0x402c>
   15114:	ldr	r0, [sp, #36]	; 0x24
   15118:	sub	r1, r0, #39	; 0x27
   1511c:	cmp	r1, #3
   15120:	bcc	1515c <__assert_fail@plt+0x4074>
   15124:	b	15128 <__assert_fail@plt+0x4040>
   15128:	ldr	r0, [sp, #36]	; 0x24
   1512c:	cmp	r0, #45	; 0x2d
   15130:	beq	1515c <__assert_fail@plt+0x4074>
   15134:	b	15138 <__assert_fail@plt+0x4050>
   15138:	ldr	r0, [sp, #36]	; 0x24
   1513c:	cmp	r0, #47	; 0x2f
   15140:	beq	1515c <__assert_fail@plt+0x4074>
   15144:	b	15148 <__assert_fail@plt+0x4060>
   15148:	ldr	r0, [sp, #36]	; 0x24
   1514c:	sub	r1, r0, #60	; 0x3c
   15150:	cmp	r1, #2
   15154:	bhi	15260 <__assert_fail@plt+0x4178>
   15158:	b	1515c <__assert_fail@plt+0x4074>
   1515c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15160:	tst	r0, #1
   15164:	beq	1516c <__assert_fail@plt+0x4084>
   15168:	b	15ee4 <__assert_fail@plt+0x4dfc>
   1516c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15170:	ldr	r1, [fp, #-40]	; 0xffffffd8
   15174:	add	r1, r1, #2
   15178:	add	r0, r0, r1
   1517c:	ldrb	r0, [r0]
   15180:	strb	r0, [fp, #-63]	; 0xffffffc1
   15184:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15188:	add	r0, r0, #2
   1518c:	str	r0, [fp, #-40]	; 0xffffffd8
   15190:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15194:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15198:	cmp	r0, r1
   1519c:	bcs	151b4 <__assert_fail@plt+0x40cc>
   151a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   151a4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   151a8:	add	r0, r0, r1
   151ac:	movw	r1, #63	; 0x3f
   151b0:	strb	r1, [r0]
   151b4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   151b8:	add	r0, r0, #1
   151bc:	str	r0, [fp, #-44]	; 0xffffffd4
   151c0:	b	151c4 <__assert_fail@plt+0x40dc>
   151c4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   151c8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   151cc:	cmp	r0, r1
   151d0:	bcs	151e8 <__assert_fail@plt+0x4100>
   151d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   151d8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   151dc:	add	r0, r0, r1
   151e0:	movw	r1, #34	; 0x22
   151e4:	strb	r1, [r0]
   151e8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   151ec:	add	r0, r0, #1
   151f0:	str	r0, [fp, #-44]	; 0xffffffd4
   151f4:	b	151f8 <__assert_fail@plt+0x4110>
   151f8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   151fc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15200:	cmp	r0, r1
   15204:	bcs	1521c <__assert_fail@plt+0x4134>
   15208:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1520c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15210:	add	r0, r0, r1
   15214:	movw	r1, #34	; 0x22
   15218:	strb	r1, [r0]
   1521c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15220:	add	r0, r0, #1
   15224:	str	r0, [fp, #-44]	; 0xffffffd4
   15228:	b	1522c <__assert_fail@plt+0x4144>
   1522c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15230:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15234:	cmp	r0, r1
   15238:	bcs	15250 <__assert_fail@plt+0x4168>
   1523c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15240:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15244:	add	r0, r0, r1
   15248:	movw	r1, #63	; 0x3f
   1524c:	strb	r1, [r0]
   15250:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15254:	add	r0, r0, #1
   15258:	str	r0, [fp, #-44]	; 0xffffffd4
   1525c:	b	15264 <__assert_fail@plt+0x417c>
   15260:	b	15264 <__assert_fail@plt+0x417c>
   15264:	b	15268 <__assert_fail@plt+0x4180>
   15268:	b	15270 <__assert_fail@plt+0x4188>
   1526c:	b	15270 <__assert_fail@plt+0x4188>
   15270:	b	15af0 <__assert_fail@plt+0x4a08>
   15274:	movw	r0, #97	; 0x61
   15278:	strb	r0, [fp, #-64]	; 0xffffffc0
   1527c:	b	1533c <__assert_fail@plt+0x4254>
   15280:	movw	r0, #98	; 0x62
   15284:	strb	r0, [fp, #-64]	; 0xffffffc0
   15288:	b	1533c <__assert_fail@plt+0x4254>
   1528c:	movw	r0, #102	; 0x66
   15290:	strb	r0, [fp, #-64]	; 0xffffffc0
   15294:	b	1533c <__assert_fail@plt+0x4254>
   15298:	movw	r0, #110	; 0x6e
   1529c:	strb	r0, [fp, #-64]	; 0xffffffc0
   152a0:	b	1531c <__assert_fail@plt+0x4234>
   152a4:	movw	r0, #114	; 0x72
   152a8:	strb	r0, [fp, #-64]	; 0xffffffc0
   152ac:	b	1531c <__assert_fail@plt+0x4234>
   152b0:	movw	r0, #116	; 0x74
   152b4:	strb	r0, [fp, #-64]	; 0xffffffc0
   152b8:	b	1531c <__assert_fail@plt+0x4234>
   152bc:	movw	r0, #118	; 0x76
   152c0:	strb	r0, [fp, #-64]	; 0xffffffc0
   152c4:	b	1533c <__assert_fail@plt+0x4254>
   152c8:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   152cc:	strb	r0, [fp, #-64]	; 0xffffffc0
   152d0:	ldr	r0, [fp, #8]
   152d4:	cmp	r0, #2
   152d8:	bne	152f0 <__assert_fail@plt+0x4208>
   152dc:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   152e0:	tst	r0, #1
   152e4:	beq	152ec <__assert_fail@plt+0x4204>
   152e8:	b	15ee4 <__assert_fail@plt+0x4dfc>
   152ec:	b	15c78 <__assert_fail@plt+0x4b90>
   152f0:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   152f4:	tst	r0, #1
   152f8:	beq	15318 <__assert_fail@plt+0x4230>
   152fc:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15300:	tst	r0, #1
   15304:	beq	15318 <__assert_fail@plt+0x4230>
   15308:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1530c:	cmp	r0, #0
   15310:	beq	15318 <__assert_fail@plt+0x4230>
   15314:	b	15c78 <__assert_fail@plt+0x4b90>
   15318:	b	1531c <__assert_fail@plt+0x4234>
   1531c:	ldr	r0, [fp, #8]
   15320:	cmp	r0, #2
   15324:	bne	15338 <__assert_fail@plt+0x4250>
   15328:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1532c:	tst	r0, #1
   15330:	beq	15338 <__assert_fail@plt+0x4250>
   15334:	b	15ee4 <__assert_fail@plt+0x4dfc>
   15338:	b	1533c <__assert_fail@plt+0x4254>
   1533c:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   15340:	tst	r0, #1
   15344:	beq	15354 <__assert_fail@plt+0x426c>
   15348:	ldrb	r0, [fp, #-64]	; 0xffffffc0
   1534c:	strb	r0, [fp, #-63]	; 0xffffffc1
   15350:	b	15b64 <__assert_fail@plt+0x4a7c>
   15354:	b	15af0 <__assert_fail@plt+0x4a08>
   15358:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1535c:	cmn	r0, #1
   15360:	bne	15378 <__assert_fail@plt+0x4290>
   15364:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15368:	ldrb	r0, [r0, #1]
   1536c:	cmp	r0, #0
   15370:	beq	15388 <__assert_fail@plt+0x42a0>
   15374:	b	15384 <__assert_fail@plt+0x429c>
   15378:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1537c:	cmp	r0, #1
   15380:	beq	15388 <__assert_fail@plt+0x42a0>
   15384:	b	15af0 <__assert_fail@plt+0x4a08>
   15388:	b	1538c <__assert_fail@plt+0x42a4>
   1538c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15390:	cmp	r0, #0
   15394:	beq	1539c <__assert_fail@plt+0x42b4>
   15398:	b	15af0 <__assert_fail@plt+0x4a08>
   1539c:	b	153a0 <__assert_fail@plt+0x42b8>
   153a0:	movw	r0, #1
   153a4:	strb	r0, [fp, #-67]	; 0xffffffbd
   153a8:	ldr	r0, [fp, #8]
   153ac:	cmp	r0, #2
   153b0:	bne	153c4 <__assert_fail@plt+0x42dc>
   153b4:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   153b8:	tst	r0, #1
   153bc:	beq	153c4 <__assert_fail@plt+0x42dc>
   153c0:	b	15ee4 <__assert_fail@plt+0x4dfc>
   153c4:	b	15af0 <__assert_fail@plt+0x4a08>
   153c8:	movw	r0, #1
   153cc:	strb	r0, [fp, #-61]	; 0xffffffc3
   153d0:	strb	r0, [fp, #-67]	; 0xffffffbd
   153d4:	ldr	r0, [fp, #8]
   153d8:	cmp	r0, #2
   153dc:	bne	154bc <__assert_fail@plt+0x43d4>
   153e0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   153e4:	tst	r0, #1
   153e8:	beq	153f0 <__assert_fail@plt+0x4308>
   153ec:	b	15ee4 <__assert_fail@plt+0x4dfc>
   153f0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   153f4:	cmp	r0, #0
   153f8:	beq	15418 <__assert_fail@plt+0x4330>
   153fc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15400:	cmp	r0, #0
   15404:	bne	15418 <__assert_fail@plt+0x4330>
   15408:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1540c:	str	r0, [fp, #-48]	; 0xffffffd0
   15410:	movw	r0, #0
   15414:	str	r0, [fp, #-28]	; 0xffffffe4
   15418:	b	1541c <__assert_fail@plt+0x4334>
   1541c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15420:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15424:	cmp	r0, r1
   15428:	bcs	15440 <__assert_fail@plt+0x4358>
   1542c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15430:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15434:	add	r0, r0, r1
   15438:	movw	r1, #39	; 0x27
   1543c:	strb	r1, [r0]
   15440:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15444:	add	r0, r0, #1
   15448:	str	r0, [fp, #-44]	; 0xffffffd4
   1544c:	b	15450 <__assert_fail@plt+0x4368>
   15450:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15454:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15458:	cmp	r0, r1
   1545c:	bcs	15474 <__assert_fail@plt+0x438c>
   15460:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15464:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15468:	add	r0, r0, r1
   1546c:	movw	r1, #92	; 0x5c
   15470:	strb	r1, [r0]
   15474:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15478:	add	r0, r0, #1
   1547c:	str	r0, [fp, #-44]	; 0xffffffd4
   15480:	b	15484 <__assert_fail@plt+0x439c>
   15484:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15488:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1548c:	cmp	r0, r1
   15490:	bcs	154a8 <__assert_fail@plt+0x43c0>
   15494:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15498:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1549c:	add	r0, r0, r1
   154a0:	movw	r1, #39	; 0x27
   154a4:	strb	r1, [r0]
   154a8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   154ac:	add	r0, r0, #1
   154b0:	str	r0, [fp, #-44]	; 0xffffffd4
   154b4:	movw	r0, #0
   154b8:	strb	r0, [fp, #-60]	; 0xffffffc4
   154bc:	b	15af0 <__assert_fail@plt+0x4a08>
   154c0:	movw	r0, #1
   154c4:	strb	r0, [fp, #-67]	; 0xffffffbd
   154c8:	b	15af0 <__assert_fail@plt+0x4a08>
   154cc:	ldrb	r0, [fp, #-58]	; 0xffffffc6
   154d0:	tst	r0, #1
   154d4:	beq	15518 <__assert_fail@plt+0x4430>
   154d8:	mov	r0, #1
   154dc:	str	r0, [fp, #-72]	; 0xffffffb8
   154e0:	bl	10fc8 <__ctype_b_loc@plt>
   154e4:	ldr	r0, [r0]
   154e8:	ldrb	lr, [fp, #-63]	; 0xffffffc1
   154ec:	mov	r1, lr
   154f0:	add	r0, r0, lr, lsl #1
   154f4:	ldrh	r0, [r0]
   154f8:	and	r0, r0, #16384	; 0x4000
   154fc:	cmp	r0, #0
   15500:	movw	r0, #0
   15504:	movne	r0, #1
   15508:	and	r0, r0, #1
   1550c:	strb	r0, [fp, #-73]	; 0xffffffb7
   15510:	str	r1, [sp, #32]
   15514:	b	157a4 <__assert_fail@plt+0x46bc>
   15518:	sub	r0, fp, #84	; 0x54
   1551c:	movw	r1, #0
   15520:	and	r1, r1, #255	; 0xff
   15524:	movw	r2, #8
   15528:	bl	11028 <memset@plt>
   1552c:	movw	r0, #0
   15530:	str	r0, [fp, #-72]	; 0xffffffb8
   15534:	movw	r0, #1
   15538:	strb	r0, [fp, #-73]	; 0xffffffb7
   1553c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15540:	cmn	r0, #1
   15544:	bne	15554 <__assert_fail@plt+0x446c>
   15548:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1554c:	bl	10fec <strlen@plt>
   15550:	str	r0, [fp, #-36]	; 0xffffffdc
   15554:	b	15558 <__assert_fail@plt+0x4470>
   15558:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1555c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   15560:	ldr	r2, [fp, #-72]	; 0xffffffb8
   15564:	add	r1, r1, r2
   15568:	add	r1, r0, r1
   1556c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15570:	ldr	r2, [fp, #-40]	; 0xffffffd8
   15574:	ldr	r3, [fp, #-72]	; 0xffffffb8
   15578:	add	r2, r2, r3
   1557c:	sub	r2, r0, r2
   15580:	sub	r0, fp, #88	; 0x58
   15584:	sub	r3, fp, #84	; 0x54
   15588:	bl	1dd34 <__assert_fail@plt+0xcc4c>
   1558c:	str	r0, [sp, #92]	; 0x5c
   15590:	ldr	r0, [sp, #92]	; 0x5c
   15594:	cmp	r0, #0
   15598:	bne	155a0 <__assert_fail@plt+0x44b8>
   1559c:	b	157a0 <__assert_fail@plt+0x46b8>
   155a0:	ldr	r0, [sp, #92]	; 0x5c
   155a4:	cmn	r0, #1
   155a8:	bne	155b8 <__assert_fail@plt+0x44d0>
   155ac:	movw	r0, #0
   155b0:	strb	r0, [fp, #-73]	; 0xffffffb7
   155b4:	b	157a0 <__assert_fail@plt+0x46b8>
   155b8:	ldr	r0, [sp, #92]	; 0x5c
   155bc:	cmn	r0, #2
   155c0:	bne	15634 <__assert_fail@plt+0x454c>
   155c4:	movw	r0, #0
   155c8:	strb	r0, [fp, #-73]	; 0xffffffb7
   155cc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   155d0:	ldr	r1, [fp, #-72]	; 0xffffffb8
   155d4:	add	r0, r0, r1
   155d8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   155dc:	cmp	r0, r1
   155e0:	movw	r0, #0
   155e4:	str	r0, [sp, #28]
   155e8:	bcs	15614 <__assert_fail@plt+0x452c>
   155ec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   155f0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   155f4:	ldr	r2, [fp, #-72]	; 0xffffffb8
   155f8:	add	r1, r1, r2
   155fc:	add	r0, r0, r1
   15600:	ldrb	r0, [r0]
   15604:	cmp	r0, #0
   15608:	movw	r0, #0
   1560c:	movne	r0, #1
   15610:	str	r0, [sp, #28]
   15614:	ldr	r0, [sp, #28]
   15618:	tst	r0, #1
   1561c:	beq	15630 <__assert_fail@plt+0x4548>
   15620:	ldr	r0, [fp, #-72]	; 0xffffffb8
   15624:	add	r0, r0, #1
   15628:	str	r0, [fp, #-72]	; 0xffffffb8
   1562c:	b	155cc <__assert_fail@plt+0x44e4>
   15630:	b	157a0 <__assert_fail@plt+0x46b8>
   15634:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15638:	tst	r0, #1
   1563c:	beq	15748 <__assert_fail@plt+0x4660>
   15640:	ldr	r0, [fp, #8]
   15644:	cmp	r0, #2
   15648:	bne	15748 <__assert_fail@plt+0x4660>
   1564c:	movw	r0, #1
   15650:	str	r0, [sp, #88]	; 0x58
   15654:	ldr	r0, [sp, #88]	; 0x58
   15658:	ldr	r1, [sp, #92]	; 0x5c
   1565c:	cmp	r0, r1
   15660:	bcs	15744 <__assert_fail@plt+0x465c>
   15664:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15668:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1566c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   15670:	add	r1, r1, r2
   15674:	ldr	r2, [sp, #88]	; 0x58
   15678:	add	r1, r1, r2
   1567c:	ldrb	r0, [r0, r1]
   15680:	sub	r0, r0, #91	; 0x5b
   15684:	cmp	r0, #33	; 0x21
   15688:	str	r0, [sp, #24]
   1568c:	bhi	1572c <__assert_fail@plt+0x4644>
   15690:	add	r0, pc, #8
   15694:	ldr	r1, [sp, #24]
   15698:	ldr	r0, [r0, r1, lsl #2]
   1569c:	mov	pc, r0
   156a0:	andeq	r5, r1, r8, lsr #14
   156a4:	andeq	r5, r1, r8, lsr #14
   156a8:	andeq	r5, r1, ip, lsr #14
   156ac:	andeq	r5, r1, r8, lsr #14
   156b0:	andeq	r5, r1, ip, lsr #14
   156b4:	andeq	r5, r1, r8, lsr #14
   156b8:	andeq	r5, r1, ip, lsr #14
   156bc:	andeq	r5, r1, ip, lsr #14
   156c0:	andeq	r5, r1, ip, lsr #14
   156c4:	andeq	r5, r1, ip, lsr #14
   156c8:	andeq	r5, r1, ip, lsr #14
   156cc:	andeq	r5, r1, ip, lsr #14
   156d0:	andeq	r5, r1, ip, lsr #14
   156d4:	andeq	r5, r1, ip, lsr #14
   156d8:	andeq	r5, r1, ip, lsr #14
   156dc:	andeq	r5, r1, ip, lsr #14
   156e0:	andeq	r5, r1, ip, lsr #14
   156e4:	andeq	r5, r1, ip, lsr #14
   156e8:	andeq	r5, r1, ip, lsr #14
   156ec:	andeq	r5, r1, ip, lsr #14
   156f0:	andeq	r5, r1, ip, lsr #14
   156f4:	andeq	r5, r1, ip, lsr #14
   156f8:	andeq	r5, r1, ip, lsr #14
   156fc:	andeq	r5, r1, ip, lsr #14
   15700:	andeq	r5, r1, ip, lsr #14
   15704:	andeq	r5, r1, ip, lsr #14
   15708:	andeq	r5, r1, ip, lsr #14
   1570c:	andeq	r5, r1, ip, lsr #14
   15710:	andeq	r5, r1, ip, lsr #14
   15714:	andeq	r5, r1, ip, lsr #14
   15718:	andeq	r5, r1, ip, lsr #14
   1571c:	andeq	r5, r1, ip, lsr #14
   15720:	andeq	r5, r1, ip, lsr #14
   15724:	andeq	r5, r1, r8, lsr #14
   15728:	b	15ee4 <__assert_fail@plt+0x4dfc>
   1572c:	b	15730 <__assert_fail@plt+0x4648>
   15730:	b	15734 <__assert_fail@plt+0x464c>
   15734:	ldr	r0, [sp, #88]	; 0x58
   15738:	add	r0, r0, #1
   1573c:	str	r0, [sp, #88]	; 0x58
   15740:	b	15654 <__assert_fail@plt+0x456c>
   15744:	b	15748 <__assert_fail@plt+0x4660>
   15748:	ldr	r0, [fp, #-88]	; 0xffffffa8
   1574c:	bl	10f38 <iswprint@plt>
   15750:	cmp	r0, #0
   15754:	bne	15760 <__assert_fail@plt+0x4678>
   15758:	movw	r0, #0
   1575c:	strb	r0, [fp, #-73]	; 0xffffffb7
   15760:	ldr	r0, [sp, #92]	; 0x5c
   15764:	ldr	r1, [fp, #-72]	; 0xffffffb8
   15768:	add	r0, r1, r0
   1576c:	str	r0, [fp, #-72]	; 0xffffffb8
   15770:	b	15774 <__assert_fail@plt+0x468c>
   15774:	b	15778 <__assert_fail@plt+0x4690>
   15778:	b	1577c <__assert_fail@plt+0x4694>
   1577c:	sub	r0, fp, #84	; 0x54
   15780:	bl	10ef0 <mbsinit@plt>
   15784:	cmp	r0, #0
   15788:	movw	r0, #0
   1578c:	movne	r0, #1
   15790:	mvn	lr, #0
   15794:	eor	r0, r0, lr
   15798:	tst	r0, #1
   1579c:	bne	15558 <__assert_fail@plt+0x4470>
   157a0:	b	157a4 <__assert_fail@plt+0x46bc>
   157a4:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   157a8:	and	r0, r0, #1
   157ac:	strb	r0, [fp, #-67]	; 0xffffffbd
   157b0:	ldr	r0, [fp, #-72]	; 0xffffffb8
   157b4:	movw	r1, #1
   157b8:	cmp	r1, r0
   157bc:	bcc	157d8 <__assert_fail@plt+0x46f0>
   157c0:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   157c4:	tst	r0, #1
   157c8:	beq	15aec <__assert_fail@plt+0x4a04>
   157cc:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   157d0:	tst	r0, #1
   157d4:	bne	15aec <__assert_fail@plt+0x4a04>
   157d8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   157dc:	ldr	r1, [fp, #-72]	; 0xffffffb8
   157e0:	add	r0, r0, r1
   157e4:	str	r0, [sp, #84]	; 0x54
   157e8:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   157ec:	tst	r0, #1
   157f0:	beq	159a0 <__assert_fail@plt+0x48b8>
   157f4:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   157f8:	tst	r0, #1
   157fc:	bne	159a0 <__assert_fail@plt+0x48b8>
   15800:	b	15804 <__assert_fail@plt+0x471c>
   15804:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15808:	tst	r0, #1
   1580c:	beq	15814 <__assert_fail@plt+0x472c>
   15810:	b	15ee4 <__assert_fail@plt+0x4dfc>
   15814:	movw	r0, #1
   15818:	strb	r0, [fp, #-66]	; 0xffffffbe
   1581c:	ldr	r0, [fp, #8]
   15820:	cmp	r0, #2
   15824:	bne	158d8 <__assert_fail@plt+0x47f0>
   15828:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   1582c:	tst	r0, #1
   15830:	bne	158d8 <__assert_fail@plt+0x47f0>
   15834:	b	15838 <__assert_fail@plt+0x4750>
   15838:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1583c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15840:	cmp	r0, r1
   15844:	bcs	1585c <__assert_fail@plt+0x4774>
   15848:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1584c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15850:	add	r0, r0, r1
   15854:	movw	r1, #39	; 0x27
   15858:	strb	r1, [r0]
   1585c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15860:	add	r0, r0, #1
   15864:	str	r0, [fp, #-44]	; 0xffffffd4
   15868:	b	1586c <__assert_fail@plt+0x4784>
   1586c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15870:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15874:	cmp	r0, r1
   15878:	bcs	15890 <__assert_fail@plt+0x47a8>
   1587c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15880:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15884:	add	r0, r0, r1
   15888:	movw	r1, #36	; 0x24
   1588c:	strb	r1, [r0]
   15890:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15894:	add	r0, r0, #1
   15898:	str	r0, [fp, #-44]	; 0xffffffd4
   1589c:	b	158a0 <__assert_fail@plt+0x47b8>
   158a0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   158a4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   158a8:	cmp	r0, r1
   158ac:	bcs	158c4 <__assert_fail@plt+0x47dc>
   158b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   158b4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   158b8:	add	r0, r0, r1
   158bc:	movw	r1, #39	; 0x27
   158c0:	strb	r1, [r0]
   158c4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   158c8:	add	r0, r0, #1
   158cc:	str	r0, [fp, #-44]	; 0xffffffd4
   158d0:	movw	r0, #1
   158d4:	strb	r0, [fp, #-60]	; 0xffffffc4
   158d8:	b	158dc <__assert_fail@plt+0x47f4>
   158dc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   158e0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   158e4:	cmp	r0, r1
   158e8:	bcs	15900 <__assert_fail@plt+0x4818>
   158ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   158f0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   158f4:	add	r0, r0, r1
   158f8:	movw	r1, #92	; 0x5c
   158fc:	strb	r1, [r0]
   15900:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15904:	add	r0, r0, #1
   15908:	str	r0, [fp, #-44]	; 0xffffffd4
   1590c:	b	15910 <__assert_fail@plt+0x4828>
   15910:	b	15914 <__assert_fail@plt+0x482c>
   15914:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15918:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1591c:	cmp	r0, r1
   15920:	bcs	15940 <__assert_fail@plt+0x4858>
   15924:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   15928:	asr	r0, r0, #6
   1592c:	add	r0, r0, #48	; 0x30
   15930:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15934:	ldr	r2, [fp, #-44]	; 0xffffffd4
   15938:	add	r1, r1, r2
   1593c:	strb	r0, [r1]
   15940:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15944:	add	r0, r0, #1
   15948:	str	r0, [fp, #-44]	; 0xffffffd4
   1594c:	b	15950 <__assert_fail@plt+0x4868>
   15950:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15954:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15958:	cmp	r0, r1
   1595c:	bcs	15980 <__assert_fail@plt+0x4898>
   15960:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   15964:	asr	r0, r0, #3
   15968:	and	r0, r0, #7
   1596c:	add	r0, r0, #48	; 0x30
   15970:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15974:	ldr	r2, [fp, #-44]	; 0xffffffd4
   15978:	add	r1, r1, r2
   1597c:	strb	r0, [r1]
   15980:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15984:	add	r0, r0, #1
   15988:	str	r0, [fp, #-44]	; 0xffffffd4
   1598c:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   15990:	and	r0, r0, #7
   15994:	add	r0, r0, #48	; 0x30
   15998:	strb	r0, [fp, #-63]	; 0xffffffc1
   1599c:	b	159ec <__assert_fail@plt+0x4904>
   159a0:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   159a4:	tst	r0, #1
   159a8:	beq	159e8 <__assert_fail@plt+0x4900>
   159ac:	b	159b0 <__assert_fail@plt+0x48c8>
   159b0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   159b4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   159b8:	cmp	r0, r1
   159bc:	bcs	159d4 <__assert_fail@plt+0x48ec>
   159c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   159c4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   159c8:	add	r0, r0, r1
   159cc:	movw	r1, #92	; 0x5c
   159d0:	strb	r1, [r0]
   159d4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   159d8:	add	r0, r0, #1
   159dc:	str	r0, [fp, #-44]	; 0xffffffd4
   159e0:	movw	r0, #0
   159e4:	strb	r0, [fp, #-65]	; 0xffffffbf
   159e8:	b	159ec <__assert_fail@plt+0x4904>
   159ec:	ldr	r0, [sp, #84]	; 0x54
   159f0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   159f4:	add	r1, r1, #1
   159f8:	cmp	r0, r1
   159fc:	bhi	15a04 <__assert_fail@plt+0x491c>
   15a00:	b	15ae8 <__assert_fail@plt+0x4a00>
   15a04:	b	15a08 <__assert_fail@plt+0x4920>
   15a08:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   15a0c:	tst	r0, #1
   15a10:	beq	15a90 <__assert_fail@plt+0x49a8>
   15a14:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   15a18:	tst	r0, #1
   15a1c:	bne	15a90 <__assert_fail@plt+0x49a8>
   15a20:	b	15a24 <__assert_fail@plt+0x493c>
   15a24:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15a28:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15a2c:	cmp	r0, r1
   15a30:	bcs	15a48 <__assert_fail@plt+0x4960>
   15a34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15a38:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15a3c:	add	r0, r0, r1
   15a40:	movw	r1, #39	; 0x27
   15a44:	strb	r1, [r0]
   15a48:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15a4c:	add	r0, r0, #1
   15a50:	str	r0, [fp, #-44]	; 0xffffffd4
   15a54:	b	15a58 <__assert_fail@plt+0x4970>
   15a58:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15a5c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15a60:	cmp	r0, r1
   15a64:	bcs	15a7c <__assert_fail@plt+0x4994>
   15a68:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15a6c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15a70:	add	r0, r0, r1
   15a74:	movw	r1, #39	; 0x27
   15a78:	strb	r1, [r0]
   15a7c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15a80:	add	r0, r0, #1
   15a84:	str	r0, [fp, #-44]	; 0xffffffd4
   15a88:	movw	r0, #0
   15a8c:	strb	r0, [fp, #-60]	; 0xffffffc4
   15a90:	b	15a94 <__assert_fail@plt+0x49ac>
   15a94:	b	15a98 <__assert_fail@plt+0x49b0>
   15a98:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15a9c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15aa0:	cmp	r0, r1
   15aa4:	bcs	15abc <__assert_fail@plt+0x49d4>
   15aa8:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   15aac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15ab0:	ldr	r2, [fp, #-44]	; 0xffffffd4
   15ab4:	add	r1, r1, r2
   15ab8:	strb	r0, [r1]
   15abc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15ac0:	add	r0, r0, #1
   15ac4:	str	r0, [fp, #-44]	; 0xffffffd4
   15ac8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15acc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   15ad0:	add	r1, r1, #1
   15ad4:	str	r1, [fp, #-40]	; 0xffffffd8
   15ad8:	add	r0, r0, r1
   15adc:	ldrb	r0, [r0]
   15ae0:	strb	r0, [fp, #-63]	; 0xffffffc1
   15ae4:	b	157e8 <__assert_fail@plt+0x4700>
   15ae8:	b	15c78 <__assert_fail@plt+0x4b90>
   15aec:	b	15af0 <__assert_fail@plt+0x4a08>
   15af0:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   15af4:	tst	r0, #1
   15af8:	beq	15b08 <__assert_fail@plt+0x4a20>
   15afc:	ldr	r0, [fp, #8]
   15b00:	cmp	r0, #2
   15b04:	bne	15b14 <__assert_fail@plt+0x4a2c>
   15b08:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15b0c:	tst	r0, #1
   15b10:	beq	15b50 <__assert_fail@plt+0x4a68>
   15b14:	ldr	r0, [fp, #16]
   15b18:	movw	r1, #0
   15b1c:	cmp	r0, r1
   15b20:	beq	15b50 <__assert_fail@plt+0x4a68>
   15b24:	ldr	r0, [fp, #16]
   15b28:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   15b2c:	lsr	r1, r1, #5
   15b30:	add	r0, r0, r1, lsl #2
   15b34:	ldr	r0, [r0]
   15b38:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   15b3c:	and	r1, r1, #31
   15b40:	lsr	r0, r0, r1
   15b44:	and	r0, r0, #1
   15b48:	cmp	r0, #0
   15b4c:	bne	15b60 <__assert_fail@plt+0x4a78>
   15b50:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   15b54:	tst	r0, #1
   15b58:	bne	15b60 <__assert_fail@plt+0x4a78>
   15b5c:	b	15c78 <__assert_fail@plt+0x4b90>
   15b60:	b	15b64 <__assert_fail@plt+0x4a7c>
   15b64:	b	15b68 <__assert_fail@plt+0x4a80>
   15b68:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15b6c:	tst	r0, #1
   15b70:	beq	15b78 <__assert_fail@plt+0x4a90>
   15b74:	b	15ee4 <__assert_fail@plt+0x4dfc>
   15b78:	movw	r0, #1
   15b7c:	strb	r0, [fp, #-66]	; 0xffffffbe
   15b80:	ldr	r0, [fp, #8]
   15b84:	cmp	r0, #2
   15b88:	bne	15c3c <__assert_fail@plt+0x4b54>
   15b8c:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   15b90:	tst	r0, #1
   15b94:	bne	15c3c <__assert_fail@plt+0x4b54>
   15b98:	b	15b9c <__assert_fail@plt+0x4ab4>
   15b9c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15ba0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15ba4:	cmp	r0, r1
   15ba8:	bcs	15bc0 <__assert_fail@plt+0x4ad8>
   15bac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15bb0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15bb4:	add	r0, r0, r1
   15bb8:	movw	r1, #39	; 0x27
   15bbc:	strb	r1, [r0]
   15bc0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15bc4:	add	r0, r0, #1
   15bc8:	str	r0, [fp, #-44]	; 0xffffffd4
   15bcc:	b	15bd0 <__assert_fail@plt+0x4ae8>
   15bd0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15bd4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15bd8:	cmp	r0, r1
   15bdc:	bcs	15bf4 <__assert_fail@plt+0x4b0c>
   15be0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15be4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15be8:	add	r0, r0, r1
   15bec:	movw	r1, #36	; 0x24
   15bf0:	strb	r1, [r0]
   15bf4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15bf8:	add	r0, r0, #1
   15bfc:	str	r0, [fp, #-44]	; 0xffffffd4
   15c00:	b	15c04 <__assert_fail@plt+0x4b1c>
   15c04:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15c08:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15c0c:	cmp	r0, r1
   15c10:	bcs	15c28 <__assert_fail@plt+0x4b40>
   15c14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15c18:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15c1c:	add	r0, r0, r1
   15c20:	movw	r1, #39	; 0x27
   15c24:	strb	r1, [r0]
   15c28:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15c2c:	add	r0, r0, #1
   15c30:	str	r0, [fp, #-44]	; 0xffffffd4
   15c34:	movw	r0, #1
   15c38:	strb	r0, [fp, #-60]	; 0xffffffc4
   15c3c:	b	15c40 <__assert_fail@plt+0x4b58>
   15c40:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15c44:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15c48:	cmp	r0, r1
   15c4c:	bcs	15c64 <__assert_fail@plt+0x4b7c>
   15c50:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15c54:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15c58:	add	r0, r0, r1
   15c5c:	movw	r1, #92	; 0x5c
   15c60:	strb	r1, [r0]
   15c64:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15c68:	add	r0, r0, #1
   15c6c:	str	r0, [fp, #-44]	; 0xffffffd4
   15c70:	b	15c74 <__assert_fail@plt+0x4b8c>
   15c74:	b	15c78 <__assert_fail@plt+0x4b90>
   15c78:	b	15c7c <__assert_fail@plt+0x4b94>
   15c7c:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   15c80:	tst	r0, #1
   15c84:	beq	15d04 <__assert_fail@plt+0x4c1c>
   15c88:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   15c8c:	tst	r0, #1
   15c90:	bne	15d04 <__assert_fail@plt+0x4c1c>
   15c94:	b	15c98 <__assert_fail@plt+0x4bb0>
   15c98:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15c9c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15ca0:	cmp	r0, r1
   15ca4:	bcs	15cbc <__assert_fail@plt+0x4bd4>
   15ca8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15cac:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15cb0:	add	r0, r0, r1
   15cb4:	movw	r1, #39	; 0x27
   15cb8:	strb	r1, [r0]
   15cbc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15cc0:	add	r0, r0, #1
   15cc4:	str	r0, [fp, #-44]	; 0xffffffd4
   15cc8:	b	15ccc <__assert_fail@plt+0x4be4>
   15ccc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15cd0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15cd4:	cmp	r0, r1
   15cd8:	bcs	15cf0 <__assert_fail@plt+0x4c08>
   15cdc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15ce0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15ce4:	add	r0, r0, r1
   15ce8:	movw	r1, #39	; 0x27
   15cec:	strb	r1, [r0]
   15cf0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15cf4:	add	r0, r0, #1
   15cf8:	str	r0, [fp, #-44]	; 0xffffffd4
   15cfc:	movw	r0, #0
   15d00:	strb	r0, [fp, #-60]	; 0xffffffc4
   15d04:	b	15d08 <__assert_fail@plt+0x4c20>
   15d08:	b	15d0c <__assert_fail@plt+0x4c24>
   15d0c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15d10:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15d14:	cmp	r0, r1
   15d18:	bcs	15d30 <__assert_fail@plt+0x4c48>
   15d1c:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   15d20:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15d24:	ldr	r2, [fp, #-44]	; 0xffffffd4
   15d28:	add	r1, r1, r2
   15d2c:	strb	r0, [r1]
   15d30:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15d34:	add	r0, r0, #1
   15d38:	str	r0, [fp, #-44]	; 0xffffffd4
   15d3c:	ldrb	r0, [fp, #-67]	; 0xffffffbd
   15d40:	tst	r0, #1
   15d44:	bne	15d50 <__assert_fail@plt+0x4c68>
   15d48:	movw	r0, #0
   15d4c:	strb	r0, [fp, #-62]	; 0xffffffc2
   15d50:	b	15d54 <__assert_fail@plt+0x4c6c>
   15d54:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15d58:	add	r0, r0, #1
   15d5c:	str	r0, [fp, #-40]	; 0xffffffd8
   15d60:	b	14b08 <__assert_fail@plt+0x3a20>
   15d64:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15d68:	cmp	r0, #0
   15d6c:	bne	15d8c <__assert_fail@plt+0x4ca4>
   15d70:	ldr	r0, [fp, #8]
   15d74:	cmp	r0, #2
   15d78:	bne	15d8c <__assert_fail@plt+0x4ca4>
   15d7c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15d80:	tst	r0, #1
   15d84:	beq	15d8c <__assert_fail@plt+0x4ca4>
   15d88:	b	15ee4 <__assert_fail@plt+0x4dfc>
   15d8c:	ldr	r0, [fp, #8]
   15d90:	cmp	r0, #2
   15d94:	bne	15e34 <__assert_fail@plt+0x4d4c>
   15d98:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15d9c:	tst	r0, #1
   15da0:	bne	15e34 <__assert_fail@plt+0x4d4c>
   15da4:	ldrb	r0, [fp, #-61]	; 0xffffffc3
   15da8:	tst	r0, #1
   15dac:	beq	15e34 <__assert_fail@plt+0x4d4c>
   15db0:	ldrb	r0, [fp, #-62]	; 0xffffffc2
   15db4:	tst	r0, #1
   15db8:	beq	15e00 <__assert_fail@plt+0x4d18>
   15dbc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15dc0:	ldr	r1, [fp, #-48]	; 0xffffffd0
   15dc4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   15dc8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15dcc:	ldr	ip, [fp, #12]
   15dd0:	ldr	lr, [fp, #16]
   15dd4:	ldr	r4, [fp, #20]
   15dd8:	ldr	r5, [fp, #24]
   15ddc:	movw	r6, #5
   15de0:	str	r6, [sp]
   15de4:	str	ip, [sp, #4]
   15de8:	str	lr, [sp, #8]
   15dec:	str	r4, [sp, #12]
   15df0:	str	r5, [sp, #16]
   15df4:	bl	14820 <__assert_fail@plt+0x3738>
   15df8:	str	r0, [fp, #-20]	; 0xffffffec
   15dfc:	b	15f4c <__assert_fail@plt+0x4e64>
   15e00:	ldr	r0, [fp, #-28]	; 0xffffffe4
   15e04:	cmp	r0, #0
   15e08:	bne	15e2c <__assert_fail@plt+0x4d44>
   15e0c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15e10:	cmp	r0, #0
   15e14:	beq	15e2c <__assert_fail@plt+0x4d44>
   15e18:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15e1c:	str	r0, [fp, #-28]	; 0xffffffe4
   15e20:	movw	r0, #0
   15e24:	str	r0, [fp, #-44]	; 0xffffffd4
   15e28:	b	148c8 <__assert_fail@plt+0x37e0>
   15e2c:	b	15e30 <__assert_fail@plt+0x4d48>
   15e30:	b	15e34 <__assert_fail@plt+0x4d4c>
   15e34:	ldr	r0, [fp, #-52]	; 0xffffffcc
   15e38:	movw	r1, #0
   15e3c:	cmp	r0, r1
   15e40:	beq	15eb4 <__assert_fail@plt+0x4dcc>
   15e44:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15e48:	tst	r0, #1
   15e4c:	bne	15eb4 <__assert_fail@plt+0x4dcc>
   15e50:	b	15e54 <__assert_fail@plt+0x4d6c>
   15e54:	ldr	r0, [fp, #-52]	; 0xffffffcc
   15e58:	ldrsb	r0, [r0]
   15e5c:	cmp	r0, #0
   15e60:	beq	15eb0 <__assert_fail@plt+0x4dc8>
   15e64:	b	15e68 <__assert_fail@plt+0x4d80>
   15e68:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15e6c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15e70:	cmp	r0, r1
   15e74:	bcs	15e90 <__assert_fail@plt+0x4da8>
   15e78:	ldr	r0, [fp, #-52]	; 0xffffffcc
   15e7c:	ldrb	r0, [r0]
   15e80:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15e84:	ldr	r2, [fp, #-44]	; 0xffffffd4
   15e88:	add	r1, r1, r2
   15e8c:	strb	r0, [r1]
   15e90:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15e94:	add	r0, r0, #1
   15e98:	str	r0, [fp, #-44]	; 0xffffffd4
   15e9c:	b	15ea0 <__assert_fail@plt+0x4db8>
   15ea0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   15ea4:	add	r0, r0, #1
   15ea8:	str	r0, [fp, #-52]	; 0xffffffcc
   15eac:	b	15e54 <__assert_fail@plt+0x4d6c>
   15eb0:	b	15eb4 <__assert_fail@plt+0x4dcc>
   15eb4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15eb8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15ebc:	cmp	r0, r1
   15ec0:	bcs	15ed8 <__assert_fail@plt+0x4df0>
   15ec4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15ec8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15ecc:	add	r0, r0, r1
   15ed0:	movw	r1, #0
   15ed4:	strb	r1, [r0]
   15ed8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15edc:	str	r0, [fp, #-20]	; 0xffffffec
   15ee0:	b	15f4c <__assert_fail@plt+0x4e64>
   15ee4:	ldr	r0, [fp, #8]
   15ee8:	cmp	r0, #2
   15eec:	bne	15f04 <__assert_fail@plt+0x4e1c>
   15ef0:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   15ef4:	tst	r0, #1
   15ef8:	beq	15f04 <__assert_fail@plt+0x4e1c>
   15efc:	movw	r0, #4
   15f00:	str	r0, [fp, #8]
   15f04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15f08:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15f0c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   15f10:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15f14:	ldr	ip, [fp, #8]
   15f18:	ldr	lr, [fp, #12]
   15f1c:	mvn	r4, #2
   15f20:	and	lr, lr, r4
   15f24:	ldr	r4, [fp, #20]
   15f28:	ldr	r5, [fp, #24]
   15f2c:	str	ip, [sp]
   15f30:	str	lr, [sp, #4]
   15f34:	movw	ip, #0
   15f38:	str	ip, [sp, #8]
   15f3c:	str	r4, [sp, #12]
   15f40:	str	r5, [sp, #16]
   15f44:	bl	14820 <__assert_fail@plt+0x3738>
   15f48:	str	r0, [fp, #-20]	; 0xffffffec
   15f4c:	ldr	r0, [fp, #-20]	; 0xffffffec
   15f50:	sub	sp, fp, #16
   15f54:	pop	{r4, r5, r6, sl, fp, pc}
   15f58:	push	{fp, lr}
   15f5c:	mov	fp, sp
   15f60:	sub	sp, sp, #16
   15f64:	str	r0, [fp, #-4]
   15f68:	str	r1, [sp, #8]
   15f6c:	str	r2, [sp, #4]
   15f70:	ldr	r0, [fp, #-4]
   15f74:	ldr	r1, [sp, #8]
   15f78:	ldr	r3, [sp, #4]
   15f7c:	movw	r2, #0
   15f80:	bl	15f8c <__assert_fail@plt+0x4ea4>
   15f84:	mov	sp, fp
   15f88:	pop	{fp, pc}
   15f8c:	push	{r4, r5, r6, sl, fp, lr}
   15f90:	add	fp, sp, #16
   15f94:	sub	sp, sp, #72	; 0x48
   15f98:	str	r0, [fp, #-20]	; 0xffffffec
   15f9c:	str	r1, [fp, #-24]	; 0xffffffe8
   15fa0:	str	r2, [fp, #-28]	; 0xffffffe4
   15fa4:	str	r3, [fp, #-32]	; 0xffffffe0
   15fa8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15fac:	movw	r1, #0
   15fb0:	cmp	r0, r1
   15fb4:	beq	15fc4 <__assert_fail@plt+0x4edc>
   15fb8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15fbc:	str	r0, [sp, #32]
   15fc0:	b	15fd4 <__assert_fail@plt+0x4eec>
   15fc4:	movw	r0, #364	; 0x16c
   15fc8:	movt	r0, #3
   15fcc:	str	r0, [sp, #32]
   15fd0:	b	15fd4 <__assert_fail@plt+0x4eec>
   15fd4:	ldr	r0, [sp, #32]
   15fd8:	str	r0, [fp, #-36]	; 0xffffffdc
   15fdc:	bl	11010 <__errno_location@plt>
   15fe0:	ldr	r0, [r0]
   15fe4:	str	r0, [fp, #-40]	; 0xffffffd8
   15fe8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15fec:	ldr	r0, [r0, #4]
   15ff0:	ldr	lr, [fp, #-28]	; 0xffffffe4
   15ff4:	movw	r1, #0
   15ff8:	cmp	lr, r1
   15ffc:	movw	lr, #0
   16000:	movne	lr, #1
   16004:	tst	lr, #1
   16008:	mov	lr, r1
   1600c:	moveq	lr, #1
   16010:	orr	r0, r0, lr
   16014:	str	r0, [sp, #44]	; 0x2c
   16018:	ldr	r2, [fp, #-20]	; 0xffffffec
   1601c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16020:	ldr	r0, [fp, #-36]	; 0xffffffdc
   16024:	ldr	r0, [r0]
   16028:	ldr	lr, [sp, #44]	; 0x2c
   1602c:	ldr	ip, [fp, #-36]	; 0xffffffdc
   16030:	add	ip, ip, #8
   16034:	ldr	r4, [fp, #-36]	; 0xffffffdc
   16038:	ldr	r4, [r4, #40]	; 0x28
   1603c:	ldr	r5, [fp, #-36]	; 0xffffffdc
   16040:	ldr	r5, [r5, #44]	; 0x2c
   16044:	str	r0, [sp, #28]
   16048:	mov	r0, r1
   1604c:	ldr	r6, [sp, #28]
   16050:	str	r6, [sp]
   16054:	str	lr, [sp, #4]
   16058:	str	ip, [sp, #8]
   1605c:	str	r4, [sp, #12]
   16060:	str	r5, [sp, #16]
   16064:	bl	14820 <__assert_fail@plt+0x3738>
   16068:	add	r0, r0, #1
   1606c:	str	r0, [sp, #40]	; 0x28
   16070:	ldr	r0, [sp, #40]	; 0x28
   16074:	bl	18840 <__assert_fail@plt+0x7758>
   16078:	str	r0, [sp, #36]	; 0x24
   1607c:	ldr	r0, [sp, #36]	; 0x24
   16080:	ldr	r1, [sp, #40]	; 0x28
   16084:	ldr	r2, [fp, #-20]	; 0xffffffec
   16088:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1608c:	ldr	ip, [fp, #-36]	; 0xffffffdc
   16090:	ldr	ip, [ip]
   16094:	ldr	lr, [sp, #44]	; 0x2c
   16098:	ldr	r4, [fp, #-36]	; 0xffffffdc
   1609c:	add	r4, r4, #8
   160a0:	ldr	r5, [fp, #-36]	; 0xffffffdc
   160a4:	ldr	r5, [r5, #40]	; 0x28
   160a8:	ldr	r6, [fp, #-36]	; 0xffffffdc
   160ac:	ldr	r6, [r6, #44]	; 0x2c
   160b0:	str	ip, [sp]
   160b4:	str	lr, [sp, #4]
   160b8:	str	r4, [sp, #8]
   160bc:	str	r5, [sp, #12]
   160c0:	str	r6, [sp, #16]
   160c4:	bl	14820 <__assert_fail@plt+0x3738>
   160c8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   160cc:	str	r0, [sp, #24]
   160d0:	str	r1, [sp, #20]
   160d4:	bl	11010 <__errno_location@plt>
   160d8:	ldr	r1, [sp, #20]
   160dc:	str	r1, [r0]
   160e0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   160e4:	movw	r2, #0
   160e8:	cmp	r0, r2
   160ec:	beq	16100 <__assert_fail@plt+0x5018>
   160f0:	ldr	r0, [sp, #40]	; 0x28
   160f4:	sub	r0, r0, #1
   160f8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   160fc:	str	r0, [r1]
   16100:	ldr	r0, [sp, #36]	; 0x24
   16104:	sub	sp, fp, #16
   16108:	pop	{r4, r5, r6, sl, fp, pc}
   1610c:	push	{fp, lr}
   16110:	mov	fp, sp
   16114:	sub	sp, sp, #8
   16118:	movw	r0, #248	; 0xf8
   1611c:	movt	r0, #3
   16120:	ldr	r0, [r0]
   16124:	str	r0, [sp, #4]
   16128:	movw	r0, #1
   1612c:	str	r0, [sp]
   16130:	ldr	r0, [sp]
   16134:	movw	r1, #252	; 0xfc
   16138:	movt	r1, #3
   1613c:	ldr	r1, [r1]
   16140:	cmp	r0, r1
   16144:	bge	1616c <__assert_fail@plt+0x5084>
   16148:	ldr	r0, [sp, #4]
   1614c:	ldr	r1, [sp]
   16150:	add	r0, r0, r1, lsl #3
   16154:	ldr	r0, [r0, #4]
   16158:	bl	14070 <__assert_fail@plt+0x2f88>
   1615c:	ldr	r0, [sp]
   16160:	add	r0, r0, #1
   16164:	str	r0, [sp]
   16168:	b	16130 <__assert_fail@plt+0x5048>
   1616c:	ldr	r0, [sp, #4]
   16170:	ldr	r0, [r0, #4]
   16174:	movw	r1, #412	; 0x19c
   16178:	movt	r1, #3
   1617c:	cmp	r0, r1
   16180:	beq	161ac <__assert_fail@plt+0x50c4>
   16184:	ldr	r0, [sp, #4]
   16188:	ldr	r0, [r0, #4]
   1618c:	bl	14070 <__assert_fail@plt+0x2f88>
   16190:	movw	r0, #256	; 0x100
   16194:	movw	lr, #256	; 0x100
   16198:	movt	lr, #3
   1619c:	str	r0, [lr]
   161a0:	movw	r0, #412	; 0x19c
   161a4:	movt	r0, #3
   161a8:	str	r0, [lr, #4]
   161ac:	ldr	r0, [sp, #4]
   161b0:	movw	r1, #256	; 0x100
   161b4:	movt	r1, #3
   161b8:	cmp	r0, r1
   161bc:	beq	161dc <__assert_fail@plt+0x50f4>
   161c0:	ldr	r0, [sp, #4]
   161c4:	bl	14070 <__assert_fail@plt+0x2f88>
   161c8:	movw	r0, #248	; 0xf8
   161cc:	movt	r0, #3
   161d0:	movw	lr, #256	; 0x100
   161d4:	movt	lr, #3
   161d8:	str	lr, [r0]
   161dc:	movw	r0, #252	; 0xfc
   161e0:	movt	r0, #3
   161e4:	movw	r1, #1
   161e8:	str	r1, [r0]
   161ec:	mov	sp, fp
   161f0:	pop	{fp, pc}
   161f4:	push	{fp, lr}
   161f8:	mov	fp, sp
   161fc:	sub	sp, sp, #8
   16200:	str	r0, [sp, #4]
   16204:	str	r1, [sp]
   16208:	ldr	r0, [sp, #4]
   1620c:	ldr	r1, [sp]
   16210:	mvn	r2, #0
   16214:	movw	r3, #364	; 0x16c
   16218:	movt	r3, #3
   1621c:	bl	16228 <__assert_fail@plt+0x5140>
   16220:	mov	sp, fp
   16224:	pop	{fp, pc}
   16228:	push	{r4, r5, r6, sl, fp, lr}
   1622c:	add	fp, sp, #16
   16230:	sub	sp, sp, #88	; 0x58
   16234:	str	r0, [fp, #-20]	; 0xffffffec
   16238:	str	r1, [fp, #-24]	; 0xffffffe8
   1623c:	str	r2, [fp, #-28]	; 0xffffffe4
   16240:	str	r3, [fp, #-32]	; 0xffffffe0
   16244:	bl	11010 <__errno_location@plt>
   16248:	ldr	r1, [pc, #676]	; 164f4 <__assert_fail@plt+0x540c>
   1624c:	ldr	r0, [r0]
   16250:	str	r0, [fp, #-36]	; 0xffffffdc
   16254:	movw	r0, #248	; 0xf8
   16258:	movt	r0, #3
   1625c:	ldr	r0, [r0]
   16260:	str	r0, [fp, #-40]	; 0xffffffd8
   16264:	str	r1, [fp, #-44]	; 0xffffffd4
   16268:	ldr	r0, [fp, #-20]	; 0xffffffec
   1626c:	movw	r1, #0
   16270:	cmp	r1, r0
   16274:	bgt	16288 <__assert_fail@plt+0x51a0>
   16278:	ldr	r0, [fp, #-20]	; 0xffffffec
   1627c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16280:	cmp	r0, r1
   16284:	blt	1628c <__assert_fail@plt+0x51a4>
   16288:	bl	110d0 <abort@plt>
   1628c:	movw	r0, #252	; 0xfc
   16290:	movt	r0, #3
   16294:	ldr	r0, [r0]
   16298:	ldr	r1, [fp, #-20]	; 0xffffffec
   1629c:	cmp	r0, r1
   162a0:	bgt	16398 <__assert_fail@plt+0x52b0>
   162a4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   162a8:	movw	r1, #256	; 0x100
   162ac:	movt	r1, #3
   162b0:	cmp	r0, r1
   162b4:	movw	r0, #0
   162b8:	moveq	r0, #1
   162bc:	and	r0, r0, #1
   162c0:	strb	r0, [fp, #-45]	; 0xffffffd3
   162c4:	movw	r0, #252	; 0xfc
   162c8:	movt	r0, #3
   162cc:	ldr	r0, [r0]
   162d0:	str	r0, [sp, #52]	; 0x34
   162d4:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   162d8:	tst	r0, #1
   162dc:	beq	162ec <__assert_fail@plt+0x5204>
   162e0:	movw	r0, #0
   162e4:	str	r0, [sp, #32]
   162e8:	b	162f4 <__assert_fail@plt+0x520c>
   162ec:	ldr	r0, [fp, #-40]	; 0xffffffd8
   162f0:	str	r0, [sp, #32]
   162f4:	ldr	r0, [sp, #32]
   162f8:	ldr	r1, [fp, #-20]	; 0xffffffec
   162fc:	movw	r2, #252	; 0xfc
   16300:	movt	r2, #3
   16304:	ldr	r2, [r2]
   16308:	sub	r1, r1, r2
   1630c:	add	r2, r1, #1
   16310:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16314:	add	r1, sp, #52	; 0x34
   16318:	movw	ip, #8
   1631c:	str	ip, [sp]
   16320:	bl	18a7c <__assert_fail@plt+0x7994>
   16324:	str	r0, [fp, #-40]	; 0xffffffd8
   16328:	movw	r1, #248	; 0xf8
   1632c:	movt	r1, #3
   16330:	str	r0, [r1]
   16334:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   16338:	tst	r0, #1
   1633c:	beq	1635c <__assert_fail@plt+0x5274>
   16340:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16344:	movw	r1, #256	; 0x100
   16348:	movt	r1, #3
   1634c:	ldr	r2, [r1]
   16350:	str	r2, [r0]
   16354:	ldr	r1, [r1, #4]
   16358:	str	r1, [r0, #4]
   1635c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16360:	movw	r1, #252	; 0xfc
   16364:	movt	r1, #3
   16368:	ldr	r1, [r1]
   1636c:	add	r0, r0, r1, lsl #3
   16370:	ldr	r2, [sp, #52]	; 0x34
   16374:	sub	r1, r2, r1
   16378:	lsl	r2, r1, #3
   1637c:	movw	r1, #0
   16380:	and	r1, r1, #255	; 0xff
   16384:	bl	11028 <memset@plt>
   16388:	ldr	r0, [sp, #52]	; 0x34
   1638c:	movw	r1, #252	; 0xfc
   16390:	movt	r1, #3
   16394:	str	r0, [r1]
   16398:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1639c:	ldr	r1, [fp, #-20]	; 0xffffffec
   163a0:	ldr	r0, [r0, r1, lsl #3]
   163a4:	str	r0, [sp, #48]	; 0x30
   163a8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   163ac:	ldr	r1, [fp, #-20]	; 0xffffffec
   163b0:	add	r0, r0, r1, lsl #3
   163b4:	ldr	r0, [r0, #4]
   163b8:	str	r0, [sp, #44]	; 0x2c
   163bc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   163c0:	ldr	r0, [r0, #4]
   163c4:	orr	r0, r0, #1
   163c8:	str	r0, [sp, #40]	; 0x28
   163cc:	ldr	r0, [sp, #44]	; 0x2c
   163d0:	ldr	r1, [sp, #48]	; 0x30
   163d4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   163d8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   163dc:	ldr	ip, [fp, #-32]	; 0xffffffe0
   163e0:	ldr	ip, [ip]
   163e4:	ldr	lr, [sp, #40]	; 0x28
   163e8:	ldr	r4, [fp, #-32]	; 0xffffffe0
   163ec:	add	r4, r4, #8
   163f0:	ldr	r5, [fp, #-32]	; 0xffffffe0
   163f4:	ldr	r5, [r5, #40]	; 0x28
   163f8:	ldr	r6, [fp, #-32]	; 0xffffffe0
   163fc:	ldr	r6, [r6, #44]	; 0x2c
   16400:	str	ip, [sp]
   16404:	str	lr, [sp, #4]
   16408:	str	r4, [sp, #8]
   1640c:	str	r5, [sp, #12]
   16410:	str	r6, [sp, #16]
   16414:	bl	14820 <__assert_fail@plt+0x3738>
   16418:	str	r0, [sp, #36]	; 0x24
   1641c:	ldr	r0, [sp, #48]	; 0x30
   16420:	ldr	r1, [sp, #36]	; 0x24
   16424:	cmp	r0, r1
   16428:	bhi	164d4 <__assert_fail@plt+0x53ec>
   1642c:	ldr	r0, [sp, #36]	; 0x24
   16430:	add	r0, r0, #1
   16434:	str	r0, [sp, #48]	; 0x30
   16438:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1643c:	ldr	r2, [fp, #-20]	; 0xffffffec
   16440:	add	r1, r1, r2, lsl #3
   16444:	str	r0, [r1]
   16448:	ldr	r0, [sp, #44]	; 0x2c
   1644c:	movw	r1, #412	; 0x19c
   16450:	movt	r1, #3
   16454:	cmp	r0, r1
   16458:	beq	16464 <__assert_fail@plt+0x537c>
   1645c:	ldr	r0, [sp, #44]	; 0x2c
   16460:	bl	14070 <__assert_fail@plt+0x2f88>
   16464:	ldr	r0, [sp, #48]	; 0x30
   16468:	bl	18840 <__assert_fail@plt+0x7758>
   1646c:	mov	lr, r0
   16470:	str	r0, [sp, #44]	; 0x2c
   16474:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16478:	ldr	r1, [fp, #-20]	; 0xffffffec
   1647c:	add	r0, r0, r1, lsl #3
   16480:	str	lr, [r0, #4]
   16484:	ldr	r0, [sp, #44]	; 0x2c
   16488:	ldr	r1, [sp, #48]	; 0x30
   1648c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16490:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16494:	ldr	lr, [fp, #-32]	; 0xffffffe0
   16498:	ldr	lr, [lr]
   1649c:	ldr	ip, [sp, #40]	; 0x28
   164a0:	ldr	r4, [fp, #-32]	; 0xffffffe0
   164a4:	add	r4, r4, #8
   164a8:	ldr	r5, [fp, #-32]	; 0xffffffe0
   164ac:	ldr	r5, [r5, #40]	; 0x28
   164b0:	ldr	r6, [fp, #-32]	; 0xffffffe0
   164b4:	ldr	r6, [r6, #44]	; 0x2c
   164b8:	str	lr, [sp]
   164bc:	str	ip, [sp, #4]
   164c0:	str	r4, [sp, #8]
   164c4:	str	r5, [sp, #12]
   164c8:	str	r6, [sp, #16]
   164cc:	bl	14820 <__assert_fail@plt+0x3738>
   164d0:	str	r0, [sp, #28]
   164d4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   164d8:	str	r0, [sp, #24]
   164dc:	bl	11010 <__errno_location@plt>
   164e0:	ldr	lr, [sp, #24]
   164e4:	str	lr, [r0]
   164e8:	ldr	r0, [sp, #44]	; 0x2c
   164ec:	sub	sp, fp, #16
   164f0:	pop	{r4, r5, r6, sl, fp, pc}
   164f4:	svcvc	0x00ffffff
   164f8:	push	{fp, lr}
   164fc:	mov	fp, sp
   16500:	sub	sp, sp, #16
   16504:	str	r0, [fp, #-4]
   16508:	str	r1, [sp, #8]
   1650c:	str	r2, [sp, #4]
   16510:	ldr	r0, [fp, #-4]
   16514:	ldr	r1, [sp, #8]
   16518:	ldr	r2, [sp, #4]
   1651c:	movw	r3, #364	; 0x16c
   16520:	movt	r3, #3
   16524:	bl	16228 <__assert_fail@plt+0x5140>
   16528:	mov	sp, fp
   1652c:	pop	{fp, pc}
   16530:	push	{fp, lr}
   16534:	mov	fp, sp
   16538:	sub	sp, sp, #8
   1653c:	str	r0, [sp, #4]
   16540:	ldr	r1, [sp, #4]
   16544:	movw	r0, #0
   16548:	bl	161f4 <__assert_fail@plt+0x510c>
   1654c:	mov	sp, fp
   16550:	pop	{fp, pc}
   16554:	push	{fp, lr}
   16558:	mov	fp, sp
   1655c:	sub	sp, sp, #8
   16560:	str	r0, [sp, #4]
   16564:	str	r1, [sp]
   16568:	ldr	r1, [sp, #4]
   1656c:	ldr	r2, [sp]
   16570:	movw	r0, #0
   16574:	bl	164f8 <__assert_fail@plt+0x5410>
   16578:	mov	sp, fp
   1657c:	pop	{fp, pc}
   16580:	push	{fp, lr}
   16584:	mov	fp, sp
   16588:	sub	sp, sp, #64	; 0x40
   1658c:	str	r0, [fp, #-4]
   16590:	str	r1, [fp, #-8]
   16594:	str	r2, [fp, #-12]
   16598:	ldr	r1, [fp, #-8]
   1659c:	add	r0, sp, #4
   165a0:	bl	165c0 <__assert_fail@plt+0x54d8>
   165a4:	ldr	r0, [fp, #-4]
   165a8:	ldr	r1, [fp, #-12]
   165ac:	mvn	r2, #0
   165b0:	add	r3, sp, #4
   165b4:	bl	16228 <__assert_fail@plt+0x5140>
   165b8:	mov	sp, fp
   165bc:	pop	{fp, pc}
   165c0:	push	{fp, lr}
   165c4:	mov	fp, sp
   165c8:	sub	sp, sp, #8
   165cc:	str	r1, [sp, #4]
   165d0:	mov	r1, r0
   165d4:	str	r0, [sp]
   165d8:	mov	r0, r1
   165dc:	movw	r1, #0
   165e0:	and	r1, r1, #255	; 0xff
   165e4:	movw	r2, #48	; 0x30
   165e8:	bl	11028 <memset@plt>
   165ec:	ldr	r0, [sp, #4]
   165f0:	cmp	r0, #10
   165f4:	bne	165fc <__assert_fail@plt+0x5514>
   165f8:	bl	110d0 <abort@plt>
   165fc:	ldr	r0, [sp, #4]
   16600:	ldr	r1, [sp]
   16604:	str	r0, [r1]
   16608:	mov	sp, fp
   1660c:	pop	{fp, pc}
   16610:	push	{fp, lr}
   16614:	mov	fp, sp
   16618:	sub	sp, sp, #64	; 0x40
   1661c:	str	r0, [fp, #-4]
   16620:	str	r1, [fp, #-8]
   16624:	str	r2, [fp, #-12]
   16628:	str	r3, [fp, #-16]
   1662c:	ldr	r1, [fp, #-8]
   16630:	mov	r0, sp
   16634:	bl	165c0 <__assert_fail@plt+0x54d8>
   16638:	ldr	r0, [fp, #-4]
   1663c:	ldr	r1, [fp, #-12]
   16640:	ldr	r2, [fp, #-16]
   16644:	mov	r3, sp
   16648:	bl	16228 <__assert_fail@plt+0x5140>
   1664c:	mov	sp, fp
   16650:	pop	{fp, pc}
   16654:	push	{fp, lr}
   16658:	mov	fp, sp
   1665c:	sub	sp, sp, #8
   16660:	str	r0, [sp, #4]
   16664:	str	r1, [sp]
   16668:	ldr	r1, [sp, #4]
   1666c:	ldr	r2, [sp]
   16670:	movw	r0, #0
   16674:	bl	16580 <__assert_fail@plt+0x5498>
   16678:	mov	sp, fp
   1667c:	pop	{fp, pc}
   16680:	push	{fp, lr}
   16684:	mov	fp, sp
   16688:	sub	sp, sp, #16
   1668c:	str	r0, [fp, #-4]
   16690:	str	r1, [sp, #8]
   16694:	str	r2, [sp, #4]
   16698:	ldr	r1, [fp, #-4]
   1669c:	ldr	r2, [sp, #8]
   166a0:	ldr	r3, [sp, #4]
   166a4:	movw	r0, #0
   166a8:	bl	16610 <__assert_fail@plt+0x5528>
   166ac:	mov	sp, fp
   166b0:	pop	{fp, pc}
   166b4:	push	{fp, lr}
   166b8:	mov	fp, sp
   166bc:	sub	sp, sp, #72	; 0x48
   166c0:	movw	r3, #364	; 0x16c
   166c4:	movt	r3, #3
   166c8:	str	r0, [fp, #-4]
   166cc:	str	r1, [fp, #-8]
   166d0:	strb	r2, [fp, #-9]
   166d4:	add	r0, sp, #12
   166d8:	mov	r1, r0
   166dc:	str	r0, [sp, #8]
   166e0:	mov	r0, r1
   166e4:	mov	r1, r3
   166e8:	movw	r2, #48	; 0x30
   166ec:	bl	10ee4 <memcpy@plt>
   166f0:	ldr	r0, [sp, #8]
   166f4:	ldrb	r1, [fp, #-9]
   166f8:	movw	r2, #1
   166fc:	bl	145c4 <__assert_fail@plt+0x34dc>
   16700:	ldr	r1, [fp, #-4]
   16704:	ldr	r2, [fp, #-8]
   16708:	movw	r3, #0
   1670c:	str	r0, [sp, #4]
   16710:	mov	r0, r3
   16714:	add	r3, sp, #12
   16718:	bl	16228 <__assert_fail@plt+0x5140>
   1671c:	mov	sp, fp
   16720:	pop	{fp, pc}
   16724:	push	{fp, lr}
   16728:	mov	fp, sp
   1672c:	sub	sp, sp, #8
   16730:	str	r0, [sp, #4]
   16734:	strb	r1, [sp, #3]
   16738:	ldr	r0, [sp, #4]
   1673c:	mvn	r1, #0
   16740:	ldrb	r2, [sp, #3]
   16744:	bl	166b4 <__assert_fail@plt+0x55cc>
   16748:	mov	sp, fp
   1674c:	pop	{fp, pc}
   16750:	push	{fp, lr}
   16754:	mov	fp, sp
   16758:	sub	sp, sp, #8
   1675c:	str	r0, [sp, #4]
   16760:	ldr	r0, [sp, #4]
   16764:	movw	r1, #58	; 0x3a
   16768:	and	r1, r1, #255	; 0xff
   1676c:	bl	16724 <__assert_fail@plt+0x563c>
   16770:	mov	sp, fp
   16774:	pop	{fp, pc}
   16778:	push	{fp, lr}
   1677c:	mov	fp, sp
   16780:	sub	sp, sp, #8
   16784:	str	r0, [sp, #4]
   16788:	str	r1, [sp]
   1678c:	ldr	r0, [sp, #4]
   16790:	ldr	r1, [sp]
   16794:	movw	r2, #58	; 0x3a
   16798:	and	r2, r2, #255	; 0xff
   1679c:	bl	166b4 <__assert_fail@plt+0x55cc>
   167a0:	mov	sp, fp
   167a4:	pop	{fp, pc}
   167a8:	push	{fp, lr}
   167ac:	mov	fp, sp
   167b0:	sub	sp, sp, #120	; 0x78
   167b4:	str	r0, [fp, #-4]
   167b8:	str	r1, [fp, #-8]
   167bc:	str	r2, [fp, #-12]
   167c0:	ldr	r1, [fp, #-8]
   167c4:	add	r0, sp, #12
   167c8:	bl	165c0 <__assert_fail@plt+0x54d8>
   167cc:	add	r0, sp, #60	; 0x3c
   167d0:	mov	r1, r0
   167d4:	add	r2, sp, #12
   167d8:	str	r0, [sp, #8]
   167dc:	mov	r0, r1
   167e0:	mov	r1, r2
   167e4:	movw	r2, #48	; 0x30
   167e8:	bl	10ee4 <memcpy@plt>
   167ec:	ldr	r0, [sp, #8]
   167f0:	movw	r1, #58	; 0x3a
   167f4:	and	r1, r1, #255	; 0xff
   167f8:	movw	r2, #1
   167fc:	bl	145c4 <__assert_fail@plt+0x34dc>
   16800:	ldr	r1, [fp, #-4]
   16804:	ldr	r2, [fp, #-12]
   16808:	str	r0, [sp, #4]
   1680c:	mov	r0, r1
   16810:	mov	r1, r2
   16814:	mvn	r2, #0
   16818:	add	r3, sp, #60	; 0x3c
   1681c:	bl	16228 <__assert_fail@plt+0x5140>
   16820:	mov	sp, fp
   16824:	pop	{fp, pc}
   16828:	push	{fp, lr}
   1682c:	mov	fp, sp
   16830:	sub	sp, sp, #24
   16834:	str	r0, [fp, #-4]
   16838:	str	r1, [fp, #-8]
   1683c:	str	r2, [sp, #12]
   16840:	str	r3, [sp, #8]
   16844:	ldr	r0, [fp, #-4]
   16848:	ldr	r1, [fp, #-8]
   1684c:	ldr	r2, [sp, #12]
   16850:	ldr	r3, [sp, #8]
   16854:	mvn	ip, #0
   16858:	str	ip, [sp]
   1685c:	bl	16868 <__assert_fail@plt+0x5780>
   16860:	mov	sp, fp
   16864:	pop	{fp, pc}
   16868:	push	{fp, lr}
   1686c:	mov	fp, sp
   16870:	sub	sp, sp, #72	; 0x48
   16874:	ldr	ip, [fp, #8]
   16878:	movw	lr, #364	; 0x16c
   1687c:	movt	lr, #3
   16880:	str	r0, [fp, #-4]
   16884:	str	r1, [fp, #-8]
   16888:	str	r2, [fp, #-12]
   1688c:	str	r3, [fp, #-16]
   16890:	add	r0, sp, #8
   16894:	mov	r1, r0
   16898:	str	r0, [sp, #4]
   1689c:	mov	r0, r1
   168a0:	mov	r1, lr
   168a4:	movw	r2, #48	; 0x30
   168a8:	str	ip, [sp]
   168ac:	bl	10ee4 <memcpy@plt>
   168b0:	ldr	r1, [fp, #-8]
   168b4:	ldr	r2, [fp, #-12]
   168b8:	ldr	r0, [sp, #4]
   168bc:	bl	146c4 <__assert_fail@plt+0x35dc>
   168c0:	ldr	r0, [fp, #-4]
   168c4:	ldr	r1, [fp, #-16]
   168c8:	ldr	r2, [fp, #8]
   168cc:	add	r3, sp, #8
   168d0:	bl	16228 <__assert_fail@plt+0x5140>
   168d4:	mov	sp, fp
   168d8:	pop	{fp, pc}
   168dc:	push	{fp, lr}
   168e0:	mov	fp, sp
   168e4:	sub	sp, sp, #16
   168e8:	str	r0, [fp, #-4]
   168ec:	str	r1, [sp, #8]
   168f0:	str	r2, [sp, #4]
   168f4:	ldr	r1, [fp, #-4]
   168f8:	ldr	r2, [sp, #8]
   168fc:	ldr	r3, [sp, #4]
   16900:	movw	r0, #0
   16904:	bl	16828 <__assert_fail@plt+0x5740>
   16908:	mov	sp, fp
   1690c:	pop	{fp, pc}
   16910:	push	{fp, lr}
   16914:	mov	fp, sp
   16918:	sub	sp, sp, #24
   1691c:	str	r0, [fp, #-4]
   16920:	str	r1, [fp, #-8]
   16924:	str	r2, [sp, #12]
   16928:	str	r3, [sp, #8]
   1692c:	ldr	r1, [fp, #-4]
   16930:	ldr	r2, [fp, #-8]
   16934:	ldr	r3, [sp, #12]
   16938:	ldr	r0, [sp, #8]
   1693c:	movw	ip, #0
   16940:	str	r0, [sp, #4]
   16944:	mov	r0, ip
   16948:	ldr	ip, [sp, #4]
   1694c:	str	ip, [sp]
   16950:	bl	16868 <__assert_fail@plt+0x5780>
   16954:	mov	sp, fp
   16958:	pop	{fp, pc}
   1695c:	push	{fp, lr}
   16960:	mov	fp, sp
   16964:	sub	sp, sp, #16
   16968:	str	r0, [fp, #-4]
   1696c:	str	r1, [sp, #8]
   16970:	str	r2, [sp, #4]
   16974:	ldr	r0, [fp, #-4]
   16978:	ldr	r1, [sp, #8]
   1697c:	ldr	r2, [sp, #4]
   16980:	movw	r3, #264	; 0x108
   16984:	movt	r3, #3
   16988:	bl	16228 <__assert_fail@plt+0x5140>
   1698c:	mov	sp, fp
   16990:	pop	{fp, pc}
   16994:	push	{fp, lr}
   16998:	mov	fp, sp
   1699c:	sub	sp, sp, #8
   169a0:	str	r0, [sp, #4]
   169a4:	str	r1, [sp]
   169a8:	ldr	r1, [sp, #4]
   169ac:	ldr	r2, [sp]
   169b0:	movw	r0, #0
   169b4:	bl	1695c <__assert_fail@plt+0x5874>
   169b8:	mov	sp, fp
   169bc:	pop	{fp, pc}
   169c0:	push	{fp, lr}
   169c4:	mov	fp, sp
   169c8:	sub	sp, sp, #8
   169cc:	str	r0, [sp, #4]
   169d0:	str	r1, [sp]
   169d4:	ldr	r0, [sp, #4]
   169d8:	ldr	r1, [sp]
   169dc:	mvn	r2, #0
   169e0:	bl	1695c <__assert_fail@plt+0x5874>
   169e4:	mov	sp, fp
   169e8:	pop	{fp, pc}
   169ec:	push	{fp, lr}
   169f0:	mov	fp, sp
   169f4:	sub	sp, sp, #8
   169f8:	str	r0, [sp, #4]
   169fc:	ldr	r1, [sp, #4]
   16a00:	movw	r0, #0
   16a04:	bl	169c0 <__assert_fail@plt+0x58d8>
   16a08:	mov	sp, fp
   16a0c:	pop	{fp, pc}
   16a10:	push	{fp, lr}
   16a14:	mov	fp, sp
   16a18:	sub	sp, sp, #24
   16a1c:	str	r0, [fp, #-8]
   16a20:	str	r1, [sp, #12]
   16a24:	ldr	r0, [fp, #-8]
   16a28:	bl	10fe0 <gettext@plt>
   16a2c:	str	r0, [sp, #8]
   16a30:	ldr	r0, [sp, #8]
   16a34:	ldr	r1, [fp, #-8]
   16a38:	cmp	r0, r1
   16a3c:	beq	16a4c <__assert_fail@plt+0x5964>
   16a40:	ldr	r0, [sp, #8]
   16a44:	str	r0, [fp, #-4]
   16a48:	b	16b18 <__assert_fail@plt+0x5a30>
   16a4c:	bl	1dcd8 <__assert_fail@plt+0xcbf0>
   16a50:	str	r0, [sp, #4]
   16a54:	ldr	r0, [sp, #4]
   16a58:	movw	r1, #61669	; 0xf0e5
   16a5c:	movt	r1, #1
   16a60:	bl	1db50 <__assert_fail@plt+0xca68>
   16a64:	cmp	r0, #0
   16a68:	bne	16aa0 <__assert_fail@plt+0x59b8>
   16a6c:	ldr	r0, [fp, #-8]
   16a70:	ldrb	r0, [r0]
   16a74:	cmp	r0, #96	; 0x60
   16a78:	movw	r0, #0
   16a7c:	moveq	r0, #1
   16a80:	tst	r0, #1
   16a84:	movw	r0, #61679	; 0xf0ef
   16a88:	movt	r0, #1
   16a8c:	movw	r1, #61675	; 0xf0eb
   16a90:	movt	r1, #1
   16a94:	movne	r0, r1
   16a98:	str	r0, [fp, #-4]
   16a9c:	b	16b18 <__assert_fail@plt+0x5a30>
   16aa0:	ldr	r0, [sp, #4]
   16aa4:	movw	r1, #61683	; 0xf0f3
   16aa8:	movt	r1, #1
   16aac:	bl	1db50 <__assert_fail@plt+0xca68>
   16ab0:	cmp	r0, #0
   16ab4:	bne	16aec <__assert_fail@plt+0x5a04>
   16ab8:	ldr	r0, [fp, #-8]
   16abc:	ldrb	r0, [r0]
   16ac0:	cmp	r0, #96	; 0x60
   16ac4:	movw	r0, #0
   16ac8:	moveq	r0, #1
   16acc:	tst	r0, #1
   16ad0:	movw	r0, #61695	; 0xf0ff
   16ad4:	movt	r0, #1
   16ad8:	movw	r1, #61691	; 0xf0fb
   16adc:	movt	r1, #1
   16ae0:	movne	r0, r1
   16ae4:	str	r0, [fp, #-4]
   16ae8:	b	16b18 <__assert_fail@plt+0x5a30>
   16aec:	ldr	r0, [sp, #12]
   16af0:	cmp	r0, #9
   16af4:	movw	r0, #0
   16af8:	moveq	r0, #1
   16afc:	tst	r0, #1
   16b00:	movw	r0, #61667	; 0xf0e3
   16b04:	movt	r0, #1
   16b08:	movw	r1, #61663	; 0xf0df
   16b0c:	movt	r1, #1
   16b10:	movne	r0, r1
   16b14:	str	r0, [fp, #-4]
   16b18:	ldr	r0, [fp, #-4]
   16b1c:	mov	sp, fp
   16b20:	pop	{fp, pc}
   16b24:	push	{fp, lr}
   16b28:	mov	fp, sp
   16b2c:	sub	sp, sp, #176	; 0xb0
   16b30:	str	r0, [fp, #-8]
   16b34:	str	r1, [fp, #-12]
   16b38:	str	r2, [fp, #-16]
   16b3c:	b	16ef4 <__assert_fail@plt+0x5e0c>
   16b40:	b	16d14 <__assert_fail@plt+0x5c2c>
   16b44:	ldr	r0, [fp, #-16]
   16b48:	cmp	r0, #0
   16b4c:	bcs	16c50 <__assert_fail@plt+0x5b68>
   16b50:	ldr	r0, [fp, #-12]
   16b54:	cmp	r0, #0
   16b58:	bcs	16be0 <__assert_fail@plt+0x5af8>
   16b5c:	b	16b7c <__assert_fail@plt+0x5a94>
   16b60:	ldr	r0, [fp, #-12]
   16b64:	ldr	r1, [fp, #-16]
   16b68:	movw	r2, #127	; 0x7f
   16b6c:	udiv	r1, r2, r1
   16b70:	cmp	r0, r1
   16b74:	bcc	16ce4 <__assert_fail@plt+0x5bfc>
   16b78:	b	16cfc <__assert_fail@plt+0x5c14>
   16b7c:	b	16b90 <__assert_fail@plt+0x5aa8>
   16b80:	ldr	r0, [fp, #-16]
   16b84:	cmp	r0, #1
   16b88:	bcc	16ba0 <__assert_fail@plt+0x5ab8>
   16b8c:	b	16bac <__assert_fail@plt+0x5ac4>
   16b90:	ldr	r0, [fp, #-16]
   16b94:	movw	r1, #0
   16b98:	cmp	r1, r0
   16b9c:	bcs	16bac <__assert_fail@plt+0x5ac4>
   16ba0:	movw	r0, #0
   16ba4:	str	r0, [fp, #-24]	; 0xffffffe8
   16ba8:	b	16bc4 <__assert_fail@plt+0x5adc>
   16bac:	ldr	r0, [fp, #-16]
   16bb0:	movw	r1, #0
   16bb4:	sub	r0, r1, r0
   16bb8:	movw	r1, #127	; 0x7f
   16bbc:	udiv	r0, r1, r0
   16bc0:	str	r0, [fp, #-24]	; 0xffffffe8
   16bc4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16bc8:	ldr	r1, [fp, #-12]
   16bcc:	mvn	r2, #0
   16bd0:	sub	r1, r2, r1
   16bd4:	cmp	r0, r1
   16bd8:	bls	16ce4 <__assert_fail@plt+0x5bfc>
   16bdc:	b	16cfc <__assert_fail@plt+0x5c14>
   16be0:	ldr	r0, [fp, #-16]
   16be4:	cmn	r0, #1
   16be8:	bne	16c34 <__assert_fail@plt+0x5b4c>
   16bec:	b	16c0c <__assert_fail@plt+0x5b24>
   16bf0:	ldr	r0, [fp, #-12]
   16bf4:	mvn	r1, #127	; 0x7f
   16bf8:	add	r0, r0, r1
   16bfc:	movw	r1, #0
   16c00:	cmp	r1, r0
   16c04:	bcc	16ce4 <__assert_fail@plt+0x5bfc>
   16c08:	b	16cfc <__assert_fail@plt+0x5c14>
   16c0c:	ldr	r0, [fp, #-12]
   16c10:	movw	r1, #0
   16c14:	cmp	r1, r0
   16c18:	bcs	16cfc <__assert_fail@plt+0x5c14>
   16c1c:	ldr	r0, [fp, #-12]
   16c20:	sub	r0, r0, #1
   16c24:	movw	r1, #127	; 0x7f
   16c28:	cmp	r1, r0
   16c2c:	bcc	16ce4 <__assert_fail@plt+0x5bfc>
   16c30:	b	16cfc <__assert_fail@plt+0x5c14>
   16c34:	ldr	r0, [fp, #-16]
   16c38:	mvn	r1, #127	; 0x7f
   16c3c:	udiv	r0, r1, r0
   16c40:	ldr	r1, [fp, #-12]
   16c44:	cmp	r0, r1
   16c48:	bcc	16ce4 <__assert_fail@plt+0x5bfc>
   16c4c:	b	16cfc <__assert_fail@plt+0x5c14>
   16c50:	ldr	r0, [fp, #-16]
   16c54:	cmp	r0, #0
   16c58:	bne	16c60 <__assert_fail@plt+0x5b78>
   16c5c:	b	16cfc <__assert_fail@plt+0x5c14>
   16c60:	ldr	r0, [fp, #-12]
   16c64:	cmp	r0, #0
   16c68:	bcs	16ccc <__assert_fail@plt+0x5be4>
   16c6c:	ldr	r0, [fp, #-12]
   16c70:	cmn	r0, #1
   16c74:	bne	16cb0 <__assert_fail@plt+0x5bc8>
   16c78:	b	16c98 <__assert_fail@plt+0x5bb0>
   16c7c:	ldr	r0, [fp, #-16]
   16c80:	mvn	r1, #127	; 0x7f
   16c84:	add	r0, r0, r1
   16c88:	movw	r1, #0
   16c8c:	cmp	r1, r0
   16c90:	bcc	16ce4 <__assert_fail@plt+0x5bfc>
   16c94:	b	16cfc <__assert_fail@plt+0x5c14>
   16c98:	ldr	r0, [fp, #-16]
   16c9c:	sub	r0, r0, #1
   16ca0:	movw	r1, #127	; 0x7f
   16ca4:	cmp	r1, r0
   16ca8:	bcc	16ce4 <__assert_fail@plt+0x5bfc>
   16cac:	b	16cfc <__assert_fail@plt+0x5c14>
   16cb0:	ldr	r0, [fp, #-12]
   16cb4:	mvn	r1, #127	; 0x7f
   16cb8:	udiv	r0, r1, r0
   16cbc:	ldr	r1, [fp, #-16]
   16cc0:	cmp	r0, r1
   16cc4:	bcc	16ce4 <__assert_fail@plt+0x5bfc>
   16cc8:	b	16cfc <__assert_fail@plt+0x5c14>
   16ccc:	ldr	r0, [fp, #-16]
   16cd0:	movw	r1, #127	; 0x7f
   16cd4:	udiv	r0, r1, r0
   16cd8:	ldr	r1, [fp, #-12]
   16cdc:	cmp	r0, r1
   16ce0:	bcs	16cfc <__assert_fail@plt+0x5c14>
   16ce4:	ldr	r0, [fp, #-12]
   16ce8:	ldr	r1, [fp, #-16]
   16cec:	mul	r0, r0, r1
   16cf0:	sxtb	r0, r0
   16cf4:	str	r0, [fp, #-20]	; 0xffffffec
   16cf8:	b	17e74 <__assert_fail@plt+0x6d8c>
   16cfc:	ldr	r0, [fp, #-12]
   16d00:	ldr	r1, [fp, #-16]
   16d04:	mul	r0, r0, r1
   16d08:	sxtb	r0, r0
   16d0c:	str	r0, [fp, #-20]	; 0xffffffec
   16d10:	b	17e8c <__assert_fail@plt+0x6da4>
   16d14:	ldr	r0, [fp, #-16]
   16d18:	cmp	r0, #0
   16d1c:	bcs	16e28 <__assert_fail@plt+0x5d40>
   16d20:	ldr	r0, [fp, #-12]
   16d24:	cmp	r0, #0
   16d28:	bcs	16db0 <__assert_fail@plt+0x5cc8>
   16d2c:	b	16d4c <__assert_fail@plt+0x5c64>
   16d30:	ldr	r0, [fp, #-12]
   16d34:	ldr	r1, [fp, #-16]
   16d38:	movw	r2, #255	; 0xff
   16d3c:	udiv	r1, r2, r1
   16d40:	cmp	r0, r1
   16d44:	bcc	16ec4 <__assert_fail@plt+0x5ddc>
   16d48:	b	16edc <__assert_fail@plt+0x5df4>
   16d4c:	b	16d60 <__assert_fail@plt+0x5c78>
   16d50:	ldr	r0, [fp, #-16]
   16d54:	cmp	r0, #1
   16d58:	bcc	16d70 <__assert_fail@plt+0x5c88>
   16d5c:	b	16d7c <__assert_fail@plt+0x5c94>
   16d60:	ldr	r0, [fp, #-16]
   16d64:	movw	r1, #0
   16d68:	cmp	r1, r0
   16d6c:	bcs	16d7c <__assert_fail@plt+0x5c94>
   16d70:	movw	r0, #0
   16d74:	str	r0, [fp, #-28]	; 0xffffffe4
   16d78:	b	16d94 <__assert_fail@plt+0x5cac>
   16d7c:	ldr	r0, [fp, #-16]
   16d80:	movw	r1, #0
   16d84:	sub	r0, r1, r0
   16d88:	movw	r1, #255	; 0xff
   16d8c:	udiv	r0, r1, r0
   16d90:	str	r0, [fp, #-28]	; 0xffffffe4
   16d94:	ldr	r0, [fp, #-28]	; 0xffffffe4
   16d98:	ldr	r1, [fp, #-12]
   16d9c:	mvn	r2, #0
   16da0:	sub	r1, r2, r1
   16da4:	cmp	r0, r1
   16da8:	bls	16ec4 <__assert_fail@plt+0x5ddc>
   16dac:	b	16edc <__assert_fail@plt+0x5df4>
   16db0:	b	16db8 <__assert_fail@plt+0x5cd0>
   16db4:	b	16dbc <__assert_fail@plt+0x5cd4>
   16db8:	b	16e0c <__assert_fail@plt+0x5d24>
   16dbc:	ldr	r0, [fp, #-16]
   16dc0:	cmn	r0, #1
   16dc4:	bne	16e0c <__assert_fail@plt+0x5d24>
   16dc8:	b	16de4 <__assert_fail@plt+0x5cfc>
   16dcc:	ldr	r0, [fp, #-12]
   16dd0:	add	r0, r0, #0
   16dd4:	movw	r1, #0
   16dd8:	cmp	r1, r0
   16ddc:	bcc	16ec4 <__assert_fail@plt+0x5ddc>
   16de0:	b	16edc <__assert_fail@plt+0x5df4>
   16de4:	ldr	r0, [fp, #-12]
   16de8:	movw	r1, #0
   16dec:	cmp	r1, r0
   16df0:	bcs	16edc <__assert_fail@plt+0x5df4>
   16df4:	ldr	r0, [fp, #-12]
   16df8:	sub	r0, r0, #1
   16dfc:	mvn	r1, #0
   16e00:	cmp	r1, r0
   16e04:	bcc	16ec4 <__assert_fail@plt+0x5ddc>
   16e08:	b	16edc <__assert_fail@plt+0x5df4>
   16e0c:	ldr	r0, [fp, #-16]
   16e10:	movw	r1, #0
   16e14:	udiv	r0, r1, r0
   16e18:	ldr	r1, [fp, #-12]
   16e1c:	cmp	r0, r1
   16e20:	bcc	16ec4 <__assert_fail@plt+0x5ddc>
   16e24:	b	16edc <__assert_fail@plt+0x5df4>
   16e28:	ldr	r0, [fp, #-16]
   16e2c:	cmp	r0, #0
   16e30:	bne	16e38 <__assert_fail@plt+0x5d50>
   16e34:	b	16edc <__assert_fail@plt+0x5df4>
   16e38:	ldr	r0, [fp, #-12]
   16e3c:	cmp	r0, #0
   16e40:	bcs	16eac <__assert_fail@plt+0x5dc4>
   16e44:	b	16e4c <__assert_fail@plt+0x5d64>
   16e48:	b	16e50 <__assert_fail@plt+0x5d68>
   16e4c:	b	16e90 <__assert_fail@plt+0x5da8>
   16e50:	ldr	r0, [fp, #-12]
   16e54:	cmn	r0, #1
   16e58:	bne	16e90 <__assert_fail@plt+0x5da8>
   16e5c:	b	16e78 <__assert_fail@plt+0x5d90>
   16e60:	ldr	r0, [fp, #-16]
   16e64:	add	r0, r0, #0
   16e68:	movw	r1, #0
   16e6c:	cmp	r1, r0
   16e70:	bcc	16ec4 <__assert_fail@plt+0x5ddc>
   16e74:	b	16edc <__assert_fail@plt+0x5df4>
   16e78:	ldr	r0, [fp, #-16]
   16e7c:	sub	r0, r0, #1
   16e80:	mvn	r1, #0
   16e84:	cmp	r1, r0
   16e88:	bcc	16ec4 <__assert_fail@plt+0x5ddc>
   16e8c:	b	16edc <__assert_fail@plt+0x5df4>
   16e90:	ldr	r0, [fp, #-12]
   16e94:	movw	r1, #0
   16e98:	udiv	r0, r1, r0
   16e9c:	ldr	r1, [fp, #-16]
   16ea0:	cmp	r0, r1
   16ea4:	bcc	16ec4 <__assert_fail@plt+0x5ddc>
   16ea8:	b	16edc <__assert_fail@plt+0x5df4>
   16eac:	ldr	r0, [fp, #-16]
   16eb0:	movw	r1, #255	; 0xff
   16eb4:	udiv	r0, r1, r0
   16eb8:	ldr	r1, [fp, #-12]
   16ebc:	cmp	r0, r1
   16ec0:	bcs	16edc <__assert_fail@plt+0x5df4>
   16ec4:	ldr	r0, [fp, #-12]
   16ec8:	ldr	r1, [fp, #-16]
   16ecc:	mul	r0, r0, r1
   16ed0:	and	r0, r0, #255	; 0xff
   16ed4:	str	r0, [fp, #-20]	; 0xffffffec
   16ed8:	b	17e74 <__assert_fail@plt+0x6d8c>
   16edc:	ldr	r0, [fp, #-12]
   16ee0:	ldr	r1, [fp, #-16]
   16ee4:	mul	r0, r0, r1
   16ee8:	and	r0, r0, #255	; 0xff
   16eec:	str	r0, [fp, #-20]	; 0xffffffec
   16ef0:	b	17e8c <__assert_fail@plt+0x6da4>
   16ef4:	b	172ac <__assert_fail@plt+0x61c4>
   16ef8:	b	170cc <__assert_fail@plt+0x5fe4>
   16efc:	ldr	r0, [fp, #-16]
   16f00:	cmp	r0, #0
   16f04:	bcs	17008 <__assert_fail@plt+0x5f20>
   16f08:	ldr	r0, [fp, #-12]
   16f0c:	cmp	r0, #0
   16f10:	bcs	16f98 <__assert_fail@plt+0x5eb0>
   16f14:	b	16f34 <__assert_fail@plt+0x5e4c>
   16f18:	ldr	r0, [fp, #-12]
   16f1c:	ldr	r1, [fp, #-16]
   16f20:	movw	r2, #32767	; 0x7fff
   16f24:	udiv	r1, r2, r1
   16f28:	cmp	r0, r1
   16f2c:	bcc	1709c <__assert_fail@plt+0x5fb4>
   16f30:	b	170b4 <__assert_fail@plt+0x5fcc>
   16f34:	b	16f48 <__assert_fail@plt+0x5e60>
   16f38:	ldr	r0, [fp, #-16]
   16f3c:	cmp	r0, #1
   16f40:	bcc	16f58 <__assert_fail@plt+0x5e70>
   16f44:	b	16f64 <__assert_fail@plt+0x5e7c>
   16f48:	ldr	r0, [fp, #-16]
   16f4c:	movw	r1, #0
   16f50:	cmp	r1, r0
   16f54:	bcs	16f64 <__assert_fail@plt+0x5e7c>
   16f58:	movw	r0, #0
   16f5c:	str	r0, [fp, #-32]	; 0xffffffe0
   16f60:	b	16f7c <__assert_fail@plt+0x5e94>
   16f64:	ldr	r0, [fp, #-16]
   16f68:	movw	r1, #0
   16f6c:	sub	r0, r1, r0
   16f70:	movw	r1, #32767	; 0x7fff
   16f74:	udiv	r0, r1, r0
   16f78:	str	r0, [fp, #-32]	; 0xffffffe0
   16f7c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16f80:	ldr	r1, [fp, #-12]
   16f84:	mvn	r2, #0
   16f88:	sub	r1, r2, r1
   16f8c:	cmp	r0, r1
   16f90:	bls	1709c <__assert_fail@plt+0x5fb4>
   16f94:	b	170b4 <__assert_fail@plt+0x5fcc>
   16f98:	ldr	r0, [fp, #-16]
   16f9c:	cmn	r0, #1
   16fa0:	bne	16fec <__assert_fail@plt+0x5f04>
   16fa4:	b	16fc4 <__assert_fail@plt+0x5edc>
   16fa8:	ldr	r0, [pc, #3840]	; 17eb0 <__assert_fail@plt+0x6dc8>
   16fac:	ldr	r1, [fp, #-12]
   16fb0:	add	r0, r1, r0
   16fb4:	movw	r1, #0
   16fb8:	cmp	r1, r0
   16fbc:	bcc	1709c <__assert_fail@plt+0x5fb4>
   16fc0:	b	170b4 <__assert_fail@plt+0x5fcc>
   16fc4:	ldr	r0, [fp, #-12]
   16fc8:	movw	r1, #0
   16fcc:	cmp	r1, r0
   16fd0:	bcs	170b4 <__assert_fail@plt+0x5fcc>
   16fd4:	ldr	r0, [fp, #-12]
   16fd8:	sub	r0, r0, #1
   16fdc:	movw	r1, #32767	; 0x7fff
   16fe0:	cmp	r1, r0
   16fe4:	bcc	1709c <__assert_fail@plt+0x5fb4>
   16fe8:	b	170b4 <__assert_fail@plt+0x5fcc>
   16fec:	ldr	r0, [pc, #3772]	; 17eb0 <__assert_fail@plt+0x6dc8>
   16ff0:	ldr	r1, [fp, #-16]
   16ff4:	udiv	r0, r0, r1
   16ff8:	ldr	r1, [fp, #-12]
   16ffc:	cmp	r0, r1
   17000:	bcc	1709c <__assert_fail@plt+0x5fb4>
   17004:	b	170b4 <__assert_fail@plt+0x5fcc>
   17008:	ldr	r0, [fp, #-16]
   1700c:	cmp	r0, #0
   17010:	bne	17018 <__assert_fail@plt+0x5f30>
   17014:	b	170b4 <__assert_fail@plt+0x5fcc>
   17018:	ldr	r0, [fp, #-12]
   1701c:	cmp	r0, #0
   17020:	bcs	17084 <__assert_fail@plt+0x5f9c>
   17024:	ldr	r0, [fp, #-12]
   17028:	cmn	r0, #1
   1702c:	bne	17068 <__assert_fail@plt+0x5f80>
   17030:	b	17050 <__assert_fail@plt+0x5f68>
   17034:	ldr	r0, [pc, #3700]	; 17eb0 <__assert_fail@plt+0x6dc8>
   17038:	ldr	r1, [fp, #-16]
   1703c:	add	r0, r1, r0
   17040:	movw	r1, #0
   17044:	cmp	r1, r0
   17048:	bcc	1709c <__assert_fail@plt+0x5fb4>
   1704c:	b	170b4 <__assert_fail@plt+0x5fcc>
   17050:	ldr	r0, [fp, #-16]
   17054:	sub	r0, r0, #1
   17058:	movw	r1, #32767	; 0x7fff
   1705c:	cmp	r1, r0
   17060:	bcc	1709c <__assert_fail@plt+0x5fb4>
   17064:	b	170b4 <__assert_fail@plt+0x5fcc>
   17068:	ldr	r0, [pc, #3648]	; 17eb0 <__assert_fail@plt+0x6dc8>
   1706c:	ldr	r1, [fp, #-12]
   17070:	udiv	r0, r0, r1
   17074:	ldr	r1, [fp, #-16]
   17078:	cmp	r0, r1
   1707c:	bcc	1709c <__assert_fail@plt+0x5fb4>
   17080:	b	170b4 <__assert_fail@plt+0x5fcc>
   17084:	ldr	r0, [fp, #-16]
   17088:	movw	r1, #32767	; 0x7fff
   1708c:	udiv	r0, r1, r0
   17090:	ldr	r1, [fp, #-12]
   17094:	cmp	r0, r1
   17098:	bcs	170b4 <__assert_fail@plt+0x5fcc>
   1709c:	ldr	r0, [fp, #-12]
   170a0:	ldr	r1, [fp, #-16]
   170a4:	mul	r0, r0, r1
   170a8:	sxth	r0, r0
   170ac:	str	r0, [fp, #-20]	; 0xffffffec
   170b0:	b	17e74 <__assert_fail@plt+0x6d8c>
   170b4:	ldr	r0, [fp, #-12]
   170b8:	ldr	r1, [fp, #-16]
   170bc:	mul	r0, r0, r1
   170c0:	sxth	r0, r0
   170c4:	str	r0, [fp, #-20]	; 0xffffffec
   170c8:	b	17e8c <__assert_fail@plt+0x6da4>
   170cc:	ldr	r0, [fp, #-16]
   170d0:	cmp	r0, #0
   170d4:	bcs	171e0 <__assert_fail@plt+0x60f8>
   170d8:	ldr	r0, [fp, #-12]
   170dc:	cmp	r0, #0
   170e0:	bcs	17168 <__assert_fail@plt+0x6080>
   170e4:	b	17104 <__assert_fail@plt+0x601c>
   170e8:	ldr	r0, [fp, #-12]
   170ec:	ldr	r1, [fp, #-16]
   170f0:	movw	r2, #65535	; 0xffff
   170f4:	udiv	r1, r2, r1
   170f8:	cmp	r0, r1
   170fc:	bcc	1727c <__assert_fail@plt+0x6194>
   17100:	b	17294 <__assert_fail@plt+0x61ac>
   17104:	b	17118 <__assert_fail@plt+0x6030>
   17108:	ldr	r0, [fp, #-16]
   1710c:	cmp	r0, #1
   17110:	bcc	17128 <__assert_fail@plt+0x6040>
   17114:	b	17134 <__assert_fail@plt+0x604c>
   17118:	ldr	r0, [fp, #-16]
   1711c:	movw	r1, #0
   17120:	cmp	r1, r0
   17124:	bcs	17134 <__assert_fail@plt+0x604c>
   17128:	movw	r0, #0
   1712c:	str	r0, [fp, #-36]	; 0xffffffdc
   17130:	b	1714c <__assert_fail@plt+0x6064>
   17134:	ldr	r0, [fp, #-16]
   17138:	movw	r1, #0
   1713c:	sub	r0, r1, r0
   17140:	movw	r1, #65535	; 0xffff
   17144:	udiv	r0, r1, r0
   17148:	str	r0, [fp, #-36]	; 0xffffffdc
   1714c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   17150:	ldr	r1, [fp, #-12]
   17154:	mvn	r2, #0
   17158:	sub	r1, r2, r1
   1715c:	cmp	r0, r1
   17160:	bls	1727c <__assert_fail@plt+0x6194>
   17164:	b	17294 <__assert_fail@plt+0x61ac>
   17168:	b	17170 <__assert_fail@plt+0x6088>
   1716c:	b	17174 <__assert_fail@plt+0x608c>
   17170:	b	171c4 <__assert_fail@plt+0x60dc>
   17174:	ldr	r0, [fp, #-16]
   17178:	cmn	r0, #1
   1717c:	bne	171c4 <__assert_fail@plt+0x60dc>
   17180:	b	1719c <__assert_fail@plt+0x60b4>
   17184:	ldr	r0, [fp, #-12]
   17188:	add	r0, r0, #0
   1718c:	movw	r1, #0
   17190:	cmp	r1, r0
   17194:	bcc	1727c <__assert_fail@plt+0x6194>
   17198:	b	17294 <__assert_fail@plt+0x61ac>
   1719c:	ldr	r0, [fp, #-12]
   171a0:	movw	r1, #0
   171a4:	cmp	r1, r0
   171a8:	bcs	17294 <__assert_fail@plt+0x61ac>
   171ac:	ldr	r0, [fp, #-12]
   171b0:	sub	r0, r0, #1
   171b4:	mvn	r1, #0
   171b8:	cmp	r1, r0
   171bc:	bcc	1727c <__assert_fail@plt+0x6194>
   171c0:	b	17294 <__assert_fail@plt+0x61ac>
   171c4:	ldr	r0, [fp, #-16]
   171c8:	movw	r1, #0
   171cc:	udiv	r0, r1, r0
   171d0:	ldr	r1, [fp, #-12]
   171d4:	cmp	r0, r1
   171d8:	bcc	1727c <__assert_fail@plt+0x6194>
   171dc:	b	17294 <__assert_fail@plt+0x61ac>
   171e0:	ldr	r0, [fp, #-16]
   171e4:	cmp	r0, #0
   171e8:	bne	171f0 <__assert_fail@plt+0x6108>
   171ec:	b	17294 <__assert_fail@plt+0x61ac>
   171f0:	ldr	r0, [fp, #-12]
   171f4:	cmp	r0, #0
   171f8:	bcs	17264 <__assert_fail@plt+0x617c>
   171fc:	b	17204 <__assert_fail@plt+0x611c>
   17200:	b	17208 <__assert_fail@plt+0x6120>
   17204:	b	17248 <__assert_fail@plt+0x6160>
   17208:	ldr	r0, [fp, #-12]
   1720c:	cmn	r0, #1
   17210:	bne	17248 <__assert_fail@plt+0x6160>
   17214:	b	17230 <__assert_fail@plt+0x6148>
   17218:	ldr	r0, [fp, #-16]
   1721c:	add	r0, r0, #0
   17220:	movw	r1, #0
   17224:	cmp	r1, r0
   17228:	bcc	1727c <__assert_fail@plt+0x6194>
   1722c:	b	17294 <__assert_fail@plt+0x61ac>
   17230:	ldr	r0, [fp, #-16]
   17234:	sub	r0, r0, #1
   17238:	mvn	r1, #0
   1723c:	cmp	r1, r0
   17240:	bcc	1727c <__assert_fail@plt+0x6194>
   17244:	b	17294 <__assert_fail@plt+0x61ac>
   17248:	ldr	r0, [fp, #-12]
   1724c:	movw	r1, #0
   17250:	udiv	r0, r1, r0
   17254:	ldr	r1, [fp, #-16]
   17258:	cmp	r0, r1
   1725c:	bcc	1727c <__assert_fail@plt+0x6194>
   17260:	b	17294 <__assert_fail@plt+0x61ac>
   17264:	ldr	r0, [fp, #-16]
   17268:	movw	r1, #65535	; 0xffff
   1726c:	udiv	r0, r1, r0
   17270:	ldr	r1, [fp, #-12]
   17274:	cmp	r0, r1
   17278:	bcs	17294 <__assert_fail@plt+0x61ac>
   1727c:	ldr	r0, [fp, #-12]
   17280:	ldr	r1, [fp, #-16]
   17284:	mul	r0, r0, r1
   17288:	uxth	r0, r0
   1728c:	str	r0, [fp, #-20]	; 0xffffffec
   17290:	b	17e74 <__assert_fail@plt+0x6d8c>
   17294:	ldr	r0, [fp, #-12]
   17298:	ldr	r1, [fp, #-16]
   1729c:	mul	r0, r0, r1
   172a0:	uxth	r0, r0
   172a4:	str	r0, [fp, #-20]	; 0xffffffec
   172a8:	b	17e8c <__assert_fail@plt+0x6da4>
   172ac:	b	172b0 <__assert_fail@plt+0x61c8>
   172b0:	b	17474 <__assert_fail@plt+0x638c>
   172b4:	ldr	r0, [fp, #-16]
   172b8:	cmp	r0, #0
   172bc:	bcs	173bc <__assert_fail@plt+0x62d4>
   172c0:	ldr	r0, [fp, #-12]
   172c4:	cmp	r0, #0
   172c8:	bcs	17350 <__assert_fail@plt+0x6268>
   172cc:	b	172ec <__assert_fail@plt+0x6204>
   172d0:	ldr	r0, [pc, #3024]	; 17ea8 <__assert_fail@plt+0x6dc0>
   172d4:	ldr	r1, [fp, #-12]
   172d8:	ldr	r2, [fp, #-16]
   172dc:	udiv	r0, r0, r2
   172e0:	cmp	r1, r0
   172e4:	bcc	1744c <__assert_fail@plt+0x6364>
   172e8:	b	17460 <__assert_fail@plt+0x6378>
   172ec:	b	17300 <__assert_fail@plt+0x6218>
   172f0:	ldr	r0, [fp, #-16]
   172f4:	cmp	r0, #1
   172f8:	bcc	17310 <__assert_fail@plt+0x6228>
   172fc:	b	1731c <__assert_fail@plt+0x6234>
   17300:	ldr	r0, [fp, #-16]
   17304:	movw	r1, #0
   17308:	cmp	r1, r0
   1730c:	bcs	1731c <__assert_fail@plt+0x6234>
   17310:	movw	r0, #0
   17314:	str	r0, [fp, #-40]	; 0xffffffd8
   17318:	b	17334 <__assert_fail@plt+0x624c>
   1731c:	ldr	r0, [pc, #2948]	; 17ea8 <__assert_fail@plt+0x6dc0>
   17320:	ldr	r1, [fp, #-16]
   17324:	movw	r2, #0
   17328:	sub	r1, r2, r1
   1732c:	udiv	r0, r0, r1
   17330:	str	r0, [fp, #-40]	; 0xffffffd8
   17334:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17338:	ldr	r1, [fp, #-12]
   1733c:	mvn	r2, #0
   17340:	sub	r1, r2, r1
   17344:	cmp	r0, r1
   17348:	bls	1744c <__assert_fail@plt+0x6364>
   1734c:	b	17460 <__assert_fail@plt+0x6378>
   17350:	ldr	r0, [fp, #-16]
   17354:	cmn	r0, #1
   17358:	bne	173a0 <__assert_fail@plt+0x62b8>
   1735c:	b	17378 <__assert_fail@plt+0x6290>
   17360:	ldr	r0, [fp, #-12]
   17364:	add	r0, r0, #-2147483648	; 0x80000000
   17368:	movw	r1, #0
   1736c:	cmp	r1, r0
   17370:	bcc	1744c <__assert_fail@plt+0x6364>
   17374:	b	17460 <__assert_fail@plt+0x6378>
   17378:	ldr	r0, [fp, #-12]
   1737c:	movw	r1, #0
   17380:	cmp	r1, r0
   17384:	bcs	17460 <__assert_fail@plt+0x6378>
   17388:	ldr	r0, [pc, #2840]	; 17ea8 <__assert_fail@plt+0x6dc0>
   1738c:	ldr	r1, [fp, #-12]
   17390:	sub	r1, r1, #1
   17394:	cmp	r0, r1
   17398:	bcc	1744c <__assert_fail@plt+0x6364>
   1739c:	b	17460 <__assert_fail@plt+0x6378>
   173a0:	ldr	r0, [pc, #2820]	; 17eac <__assert_fail@plt+0x6dc4>
   173a4:	ldr	r1, [fp, #-16]
   173a8:	udiv	r0, r0, r1
   173ac:	ldr	r1, [fp, #-12]
   173b0:	cmp	r0, r1
   173b4:	bcc	1744c <__assert_fail@plt+0x6364>
   173b8:	b	17460 <__assert_fail@plt+0x6378>
   173bc:	ldr	r0, [fp, #-16]
   173c0:	cmp	r0, #0
   173c4:	bne	173cc <__assert_fail@plt+0x62e4>
   173c8:	b	17460 <__assert_fail@plt+0x6378>
   173cc:	ldr	r0, [fp, #-12]
   173d0:	cmp	r0, #0
   173d4:	bcs	17434 <__assert_fail@plt+0x634c>
   173d8:	ldr	r0, [fp, #-12]
   173dc:	cmn	r0, #1
   173e0:	bne	17418 <__assert_fail@plt+0x6330>
   173e4:	b	17400 <__assert_fail@plt+0x6318>
   173e8:	ldr	r0, [fp, #-16]
   173ec:	add	r0, r0, #-2147483648	; 0x80000000
   173f0:	movw	r1, #0
   173f4:	cmp	r1, r0
   173f8:	bcc	1744c <__assert_fail@plt+0x6364>
   173fc:	b	17460 <__assert_fail@plt+0x6378>
   17400:	ldr	r0, [pc, #2720]	; 17ea8 <__assert_fail@plt+0x6dc0>
   17404:	ldr	r1, [fp, #-16]
   17408:	sub	r1, r1, #1
   1740c:	cmp	r0, r1
   17410:	bcc	1744c <__assert_fail@plt+0x6364>
   17414:	b	17460 <__assert_fail@plt+0x6378>
   17418:	ldr	r0, [pc, #2700]	; 17eac <__assert_fail@plt+0x6dc4>
   1741c:	ldr	r1, [fp, #-12]
   17420:	udiv	r0, r0, r1
   17424:	ldr	r1, [fp, #-16]
   17428:	cmp	r0, r1
   1742c:	bcc	1744c <__assert_fail@plt+0x6364>
   17430:	b	17460 <__assert_fail@plt+0x6378>
   17434:	ldr	r0, [pc, #2668]	; 17ea8 <__assert_fail@plt+0x6dc0>
   17438:	ldr	r1, [fp, #-16]
   1743c:	udiv	r0, r0, r1
   17440:	ldr	r1, [fp, #-12]
   17444:	cmp	r0, r1
   17448:	bcs	17460 <__assert_fail@plt+0x6378>
   1744c:	ldr	r0, [fp, #-12]
   17450:	ldr	r1, [fp, #-16]
   17454:	mul	r0, r0, r1
   17458:	str	r0, [fp, #-20]	; 0xffffffec
   1745c:	b	17e74 <__assert_fail@plt+0x6d8c>
   17460:	ldr	r0, [fp, #-12]
   17464:	ldr	r1, [fp, #-16]
   17468:	mul	r0, r0, r1
   1746c:	str	r0, [fp, #-20]	; 0xffffffec
   17470:	b	17e8c <__assert_fail@plt+0x6da4>
   17474:	ldr	r0, [fp, #-16]
   17478:	cmp	r0, #0
   1747c:	bcs	17588 <__assert_fail@plt+0x64a0>
   17480:	ldr	r0, [fp, #-12]
   17484:	cmp	r0, #0
   17488:	bcs	17510 <__assert_fail@plt+0x6428>
   1748c:	b	174ac <__assert_fail@plt+0x63c4>
   17490:	ldr	r0, [fp, #-12]
   17494:	ldr	r1, [fp, #-16]
   17498:	mvn	r2, #0
   1749c:	udiv	r1, r2, r1
   174a0:	cmp	r0, r1
   174a4:	bcc	17624 <__assert_fail@plt+0x653c>
   174a8:	b	17638 <__assert_fail@plt+0x6550>
   174ac:	b	174c0 <__assert_fail@plt+0x63d8>
   174b0:	ldr	r0, [fp, #-16]
   174b4:	cmp	r0, #1
   174b8:	bcc	174d0 <__assert_fail@plt+0x63e8>
   174bc:	b	174dc <__assert_fail@plt+0x63f4>
   174c0:	ldr	r0, [fp, #-16]
   174c4:	movw	r1, #0
   174c8:	cmp	r1, r0
   174cc:	bcs	174dc <__assert_fail@plt+0x63f4>
   174d0:	movw	r0, #1
   174d4:	str	r0, [fp, #-44]	; 0xffffffd4
   174d8:	b	174f4 <__assert_fail@plt+0x640c>
   174dc:	ldr	r0, [fp, #-16]
   174e0:	movw	r1, #0
   174e4:	sub	r0, r1, r0
   174e8:	mvn	r1, #0
   174ec:	udiv	r0, r1, r0
   174f0:	str	r0, [fp, #-44]	; 0xffffffd4
   174f4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   174f8:	ldr	r1, [fp, #-12]
   174fc:	mvn	r2, #0
   17500:	sub	r1, r2, r1
   17504:	cmp	r0, r1
   17508:	bls	17624 <__assert_fail@plt+0x653c>
   1750c:	b	17638 <__assert_fail@plt+0x6550>
   17510:	b	17518 <__assert_fail@plt+0x6430>
   17514:	b	1751c <__assert_fail@plt+0x6434>
   17518:	b	1756c <__assert_fail@plt+0x6484>
   1751c:	ldr	r0, [fp, #-16]
   17520:	cmn	r0, #1
   17524:	bne	1756c <__assert_fail@plt+0x6484>
   17528:	b	17544 <__assert_fail@plt+0x645c>
   1752c:	ldr	r0, [fp, #-12]
   17530:	add	r0, r0, #0
   17534:	movw	r1, #0
   17538:	cmp	r1, r0
   1753c:	bcc	17624 <__assert_fail@plt+0x653c>
   17540:	b	17638 <__assert_fail@plt+0x6550>
   17544:	ldr	r0, [fp, #-12]
   17548:	movw	r1, #0
   1754c:	cmp	r1, r0
   17550:	bcs	17638 <__assert_fail@plt+0x6550>
   17554:	ldr	r0, [fp, #-12]
   17558:	sub	r0, r0, #1
   1755c:	mvn	r1, #0
   17560:	cmp	r1, r0
   17564:	bcc	17624 <__assert_fail@plt+0x653c>
   17568:	b	17638 <__assert_fail@plt+0x6550>
   1756c:	ldr	r0, [fp, #-16]
   17570:	movw	r1, #0
   17574:	udiv	r0, r1, r0
   17578:	ldr	r1, [fp, #-12]
   1757c:	cmp	r0, r1
   17580:	bcc	17624 <__assert_fail@plt+0x653c>
   17584:	b	17638 <__assert_fail@plt+0x6550>
   17588:	ldr	r0, [fp, #-16]
   1758c:	cmp	r0, #0
   17590:	bne	17598 <__assert_fail@plt+0x64b0>
   17594:	b	17638 <__assert_fail@plt+0x6550>
   17598:	ldr	r0, [fp, #-12]
   1759c:	cmp	r0, #0
   175a0:	bcs	1760c <__assert_fail@plt+0x6524>
   175a4:	b	175ac <__assert_fail@plt+0x64c4>
   175a8:	b	175b0 <__assert_fail@plt+0x64c8>
   175ac:	b	175f0 <__assert_fail@plt+0x6508>
   175b0:	ldr	r0, [fp, #-12]
   175b4:	cmn	r0, #1
   175b8:	bne	175f0 <__assert_fail@plt+0x6508>
   175bc:	b	175d8 <__assert_fail@plt+0x64f0>
   175c0:	ldr	r0, [fp, #-16]
   175c4:	add	r0, r0, #0
   175c8:	movw	r1, #0
   175cc:	cmp	r1, r0
   175d0:	bcc	17624 <__assert_fail@plt+0x653c>
   175d4:	b	17638 <__assert_fail@plt+0x6550>
   175d8:	ldr	r0, [fp, #-16]
   175dc:	sub	r0, r0, #1
   175e0:	mvn	r1, #0
   175e4:	cmp	r1, r0
   175e8:	bcc	17624 <__assert_fail@plt+0x653c>
   175ec:	b	17638 <__assert_fail@plt+0x6550>
   175f0:	ldr	r0, [fp, #-12]
   175f4:	movw	r1, #0
   175f8:	udiv	r0, r1, r0
   175fc:	ldr	r1, [fp, #-16]
   17600:	cmp	r0, r1
   17604:	bcc	17624 <__assert_fail@plt+0x653c>
   17608:	b	17638 <__assert_fail@plt+0x6550>
   1760c:	ldr	r0, [fp, #-16]
   17610:	mvn	r1, #0
   17614:	udiv	r0, r1, r0
   17618:	ldr	r1, [fp, #-12]
   1761c:	cmp	r0, r1
   17620:	bcs	17638 <__assert_fail@plt+0x6550>
   17624:	ldr	r0, [fp, #-12]
   17628:	ldr	r1, [fp, #-16]
   1762c:	mul	r0, r0, r1
   17630:	str	r0, [fp, #-20]	; 0xffffffec
   17634:	b	17e74 <__assert_fail@plt+0x6d8c>
   17638:	ldr	r0, [fp, #-12]
   1763c:	ldr	r1, [fp, #-16]
   17640:	mul	r0, r0, r1
   17644:	str	r0, [fp, #-20]	; 0xffffffec
   17648:	b	17e8c <__assert_fail@plt+0x6da4>
   1764c:	b	17650 <__assert_fail@plt+0x6568>
   17650:	b	17814 <__assert_fail@plt+0x672c>
   17654:	ldr	r0, [fp, #-16]
   17658:	cmp	r0, #0
   1765c:	bcs	1775c <__assert_fail@plt+0x6674>
   17660:	ldr	r0, [fp, #-12]
   17664:	cmp	r0, #0
   17668:	bcs	176f0 <__assert_fail@plt+0x6608>
   1766c:	b	1768c <__assert_fail@plt+0x65a4>
   17670:	ldr	r0, [pc, #2096]	; 17ea8 <__assert_fail@plt+0x6dc0>
   17674:	ldr	r1, [fp, #-12]
   17678:	ldr	r2, [fp, #-16]
   1767c:	udiv	r0, r0, r2
   17680:	cmp	r1, r0
   17684:	bcc	177ec <__assert_fail@plt+0x6704>
   17688:	b	17800 <__assert_fail@plt+0x6718>
   1768c:	b	176a0 <__assert_fail@plt+0x65b8>
   17690:	ldr	r0, [fp, #-16]
   17694:	cmp	r0, #1
   17698:	bcc	176b0 <__assert_fail@plt+0x65c8>
   1769c:	b	176bc <__assert_fail@plt+0x65d4>
   176a0:	ldr	r0, [fp, #-16]
   176a4:	movw	r1, #0
   176a8:	cmp	r1, r0
   176ac:	bcs	176bc <__assert_fail@plt+0x65d4>
   176b0:	movw	r0, #0
   176b4:	str	r0, [fp, #-48]	; 0xffffffd0
   176b8:	b	176d4 <__assert_fail@plt+0x65ec>
   176bc:	ldr	r0, [pc, #2020]	; 17ea8 <__assert_fail@plt+0x6dc0>
   176c0:	ldr	r1, [fp, #-16]
   176c4:	movw	r2, #0
   176c8:	sub	r1, r2, r1
   176cc:	udiv	r0, r0, r1
   176d0:	str	r0, [fp, #-48]	; 0xffffffd0
   176d4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   176d8:	ldr	r1, [fp, #-12]
   176dc:	mvn	r2, #0
   176e0:	sub	r1, r2, r1
   176e4:	cmp	r0, r1
   176e8:	bls	177ec <__assert_fail@plt+0x6704>
   176ec:	b	17800 <__assert_fail@plt+0x6718>
   176f0:	ldr	r0, [fp, #-16]
   176f4:	cmn	r0, #1
   176f8:	bne	17740 <__assert_fail@plt+0x6658>
   176fc:	b	17718 <__assert_fail@plt+0x6630>
   17700:	ldr	r0, [fp, #-12]
   17704:	add	r0, r0, #-2147483648	; 0x80000000
   17708:	movw	r1, #0
   1770c:	cmp	r1, r0
   17710:	bcc	177ec <__assert_fail@plt+0x6704>
   17714:	b	17800 <__assert_fail@plt+0x6718>
   17718:	ldr	r0, [fp, #-12]
   1771c:	movw	r1, #0
   17720:	cmp	r1, r0
   17724:	bcs	17800 <__assert_fail@plt+0x6718>
   17728:	ldr	r0, [pc, #1912]	; 17ea8 <__assert_fail@plt+0x6dc0>
   1772c:	ldr	r1, [fp, #-12]
   17730:	sub	r1, r1, #1
   17734:	cmp	r0, r1
   17738:	bcc	177ec <__assert_fail@plt+0x6704>
   1773c:	b	17800 <__assert_fail@plt+0x6718>
   17740:	ldr	r0, [pc, #1892]	; 17eac <__assert_fail@plt+0x6dc4>
   17744:	ldr	r1, [fp, #-16]
   17748:	udiv	r0, r0, r1
   1774c:	ldr	r1, [fp, #-12]
   17750:	cmp	r0, r1
   17754:	bcc	177ec <__assert_fail@plt+0x6704>
   17758:	b	17800 <__assert_fail@plt+0x6718>
   1775c:	ldr	r0, [fp, #-16]
   17760:	cmp	r0, #0
   17764:	bne	1776c <__assert_fail@plt+0x6684>
   17768:	b	17800 <__assert_fail@plt+0x6718>
   1776c:	ldr	r0, [fp, #-12]
   17770:	cmp	r0, #0
   17774:	bcs	177d4 <__assert_fail@plt+0x66ec>
   17778:	ldr	r0, [fp, #-12]
   1777c:	cmn	r0, #1
   17780:	bne	177b8 <__assert_fail@plt+0x66d0>
   17784:	b	177a0 <__assert_fail@plt+0x66b8>
   17788:	ldr	r0, [fp, #-16]
   1778c:	add	r0, r0, #-2147483648	; 0x80000000
   17790:	movw	r1, #0
   17794:	cmp	r1, r0
   17798:	bcc	177ec <__assert_fail@plt+0x6704>
   1779c:	b	17800 <__assert_fail@plt+0x6718>
   177a0:	ldr	r0, [pc, #1792]	; 17ea8 <__assert_fail@plt+0x6dc0>
   177a4:	ldr	r1, [fp, #-16]
   177a8:	sub	r1, r1, #1
   177ac:	cmp	r0, r1
   177b0:	bcc	177ec <__assert_fail@plt+0x6704>
   177b4:	b	17800 <__assert_fail@plt+0x6718>
   177b8:	ldr	r0, [pc, #1772]	; 17eac <__assert_fail@plt+0x6dc4>
   177bc:	ldr	r1, [fp, #-12]
   177c0:	udiv	r0, r0, r1
   177c4:	ldr	r1, [fp, #-16]
   177c8:	cmp	r0, r1
   177cc:	bcc	177ec <__assert_fail@plt+0x6704>
   177d0:	b	17800 <__assert_fail@plt+0x6718>
   177d4:	ldr	r0, [pc, #1740]	; 17ea8 <__assert_fail@plt+0x6dc0>
   177d8:	ldr	r1, [fp, #-16]
   177dc:	udiv	r0, r0, r1
   177e0:	ldr	r1, [fp, #-12]
   177e4:	cmp	r0, r1
   177e8:	bcs	17800 <__assert_fail@plt+0x6718>
   177ec:	ldr	r0, [fp, #-12]
   177f0:	ldr	r1, [fp, #-16]
   177f4:	mul	r0, r0, r1
   177f8:	str	r0, [fp, #-20]	; 0xffffffec
   177fc:	b	17e74 <__assert_fail@plt+0x6d8c>
   17800:	ldr	r0, [fp, #-12]
   17804:	ldr	r1, [fp, #-16]
   17808:	mul	r0, r0, r1
   1780c:	str	r0, [fp, #-20]	; 0xffffffec
   17810:	b	17e8c <__assert_fail@plt+0x6da4>
   17814:	ldr	r0, [fp, #-16]
   17818:	cmp	r0, #0
   1781c:	bcs	17928 <__assert_fail@plt+0x6840>
   17820:	ldr	r0, [fp, #-12]
   17824:	cmp	r0, #0
   17828:	bcs	178b0 <__assert_fail@plt+0x67c8>
   1782c:	b	1784c <__assert_fail@plt+0x6764>
   17830:	ldr	r0, [fp, #-12]
   17834:	ldr	r1, [fp, #-16]
   17838:	mvn	r2, #0
   1783c:	udiv	r1, r2, r1
   17840:	cmp	r0, r1
   17844:	bcc	179c4 <__assert_fail@plt+0x68dc>
   17848:	b	179d8 <__assert_fail@plt+0x68f0>
   1784c:	b	17860 <__assert_fail@plt+0x6778>
   17850:	ldr	r0, [fp, #-16]
   17854:	cmp	r0, #1
   17858:	bcc	17870 <__assert_fail@plt+0x6788>
   1785c:	b	1787c <__assert_fail@plt+0x6794>
   17860:	ldr	r0, [fp, #-16]
   17864:	movw	r1, #0
   17868:	cmp	r1, r0
   1786c:	bcs	1787c <__assert_fail@plt+0x6794>
   17870:	movw	r0, #1
   17874:	str	r0, [fp, #-52]	; 0xffffffcc
   17878:	b	17894 <__assert_fail@plt+0x67ac>
   1787c:	ldr	r0, [fp, #-16]
   17880:	movw	r1, #0
   17884:	sub	r0, r1, r0
   17888:	mvn	r1, #0
   1788c:	udiv	r0, r1, r0
   17890:	str	r0, [fp, #-52]	; 0xffffffcc
   17894:	ldr	r0, [fp, #-52]	; 0xffffffcc
   17898:	ldr	r1, [fp, #-12]
   1789c:	mvn	r2, #0
   178a0:	sub	r1, r2, r1
   178a4:	cmp	r0, r1
   178a8:	bls	179c4 <__assert_fail@plt+0x68dc>
   178ac:	b	179d8 <__assert_fail@plt+0x68f0>
   178b0:	b	178b8 <__assert_fail@plt+0x67d0>
   178b4:	b	178bc <__assert_fail@plt+0x67d4>
   178b8:	b	1790c <__assert_fail@plt+0x6824>
   178bc:	ldr	r0, [fp, #-16]
   178c0:	cmn	r0, #1
   178c4:	bne	1790c <__assert_fail@plt+0x6824>
   178c8:	b	178e4 <__assert_fail@plt+0x67fc>
   178cc:	ldr	r0, [fp, #-12]
   178d0:	add	r0, r0, #0
   178d4:	movw	r1, #0
   178d8:	cmp	r1, r0
   178dc:	bcc	179c4 <__assert_fail@plt+0x68dc>
   178e0:	b	179d8 <__assert_fail@plt+0x68f0>
   178e4:	ldr	r0, [fp, #-12]
   178e8:	movw	r1, #0
   178ec:	cmp	r1, r0
   178f0:	bcs	179d8 <__assert_fail@plt+0x68f0>
   178f4:	ldr	r0, [fp, #-12]
   178f8:	sub	r0, r0, #1
   178fc:	mvn	r1, #0
   17900:	cmp	r1, r0
   17904:	bcc	179c4 <__assert_fail@plt+0x68dc>
   17908:	b	179d8 <__assert_fail@plt+0x68f0>
   1790c:	ldr	r0, [fp, #-16]
   17910:	movw	r1, #0
   17914:	udiv	r0, r1, r0
   17918:	ldr	r1, [fp, #-12]
   1791c:	cmp	r0, r1
   17920:	bcc	179c4 <__assert_fail@plt+0x68dc>
   17924:	b	179d8 <__assert_fail@plt+0x68f0>
   17928:	ldr	r0, [fp, #-16]
   1792c:	cmp	r0, #0
   17930:	bne	17938 <__assert_fail@plt+0x6850>
   17934:	b	179d8 <__assert_fail@plt+0x68f0>
   17938:	ldr	r0, [fp, #-12]
   1793c:	cmp	r0, #0
   17940:	bcs	179ac <__assert_fail@plt+0x68c4>
   17944:	b	1794c <__assert_fail@plt+0x6864>
   17948:	b	17950 <__assert_fail@plt+0x6868>
   1794c:	b	17990 <__assert_fail@plt+0x68a8>
   17950:	ldr	r0, [fp, #-12]
   17954:	cmn	r0, #1
   17958:	bne	17990 <__assert_fail@plt+0x68a8>
   1795c:	b	17978 <__assert_fail@plt+0x6890>
   17960:	ldr	r0, [fp, #-16]
   17964:	add	r0, r0, #0
   17968:	movw	r1, #0
   1796c:	cmp	r1, r0
   17970:	bcc	179c4 <__assert_fail@plt+0x68dc>
   17974:	b	179d8 <__assert_fail@plt+0x68f0>
   17978:	ldr	r0, [fp, #-16]
   1797c:	sub	r0, r0, #1
   17980:	mvn	r1, #0
   17984:	cmp	r1, r0
   17988:	bcc	179c4 <__assert_fail@plt+0x68dc>
   1798c:	b	179d8 <__assert_fail@plt+0x68f0>
   17990:	ldr	r0, [fp, #-12]
   17994:	movw	r1, #0
   17998:	udiv	r0, r1, r0
   1799c:	ldr	r1, [fp, #-16]
   179a0:	cmp	r0, r1
   179a4:	bcc	179c4 <__assert_fail@plt+0x68dc>
   179a8:	b	179d8 <__assert_fail@plt+0x68f0>
   179ac:	ldr	r0, [fp, #-16]
   179b0:	mvn	r1, #0
   179b4:	udiv	r0, r1, r0
   179b8:	ldr	r1, [fp, #-12]
   179bc:	cmp	r0, r1
   179c0:	bcs	179d8 <__assert_fail@plt+0x68f0>
   179c4:	ldr	r0, [fp, #-12]
   179c8:	ldr	r1, [fp, #-16]
   179cc:	mul	r0, r0, r1
   179d0:	str	r0, [fp, #-20]	; 0xffffffec
   179d4:	b	17e74 <__assert_fail@plt+0x6d8c>
   179d8:	ldr	r0, [fp, #-12]
   179dc:	ldr	r1, [fp, #-16]
   179e0:	mul	r0, r0, r1
   179e4:	str	r0, [fp, #-20]	; 0xffffffec
   179e8:	b	17e8c <__assert_fail@plt+0x6da4>
   179ec:	b	17c40 <__assert_fail@plt+0x6b58>
   179f0:	ldr	r0, [fp, #-16]
   179f4:	cmp	r0, #0
   179f8:	bcs	17b58 <__assert_fail@plt+0x6a70>
   179fc:	ldr	r0, [fp, #-12]
   17a00:	cmp	r0, #0
   17a04:	bcs	17ad4 <__assert_fail@plt+0x69ec>
   17a08:	b	17a0c <__assert_fail@plt+0x6924>
   17a0c:	ldr	r0, [fp, #-12]
   17a10:	ldr	r2, [fp, #-16]
   17a14:	mvn	r1, #0
   17a18:	mvn	r3, #-2147483648	; 0x80000000
   17a1c:	mov	ip, #0
   17a20:	str	r0, [fp, #-56]	; 0xffffffc8
   17a24:	mov	r0, r1
   17a28:	mov	r1, r3
   17a2c:	mov	r3, ip
   17a30:	bl	1e6f0 <__assert_fail@plt+0xd608>
   17a34:	ldr	r2, [fp, #-56]	; 0xffffffc8
   17a38:	subs	r0, r2, r0
   17a3c:	rscs	r1, r1, #0
   17a40:	str	r0, [fp, #-60]	; 0xffffffc4
   17a44:	str	r1, [fp, #-64]	; 0xffffffc0
   17a48:	blt	17c18 <__assert_fail@plt+0x6b30>
   17a4c:	b	17c2c <__assert_fail@plt+0x6b44>
   17a50:	b	17a64 <__assert_fail@plt+0x697c>
   17a54:	ldr	r0, [fp, #-16]
   17a58:	cmp	r0, #1
   17a5c:	bcc	17a74 <__assert_fail@plt+0x698c>
   17a60:	b	17a88 <__assert_fail@plt+0x69a0>
   17a64:	ldr	r0, [fp, #-16]
   17a68:	movw	r1, #0
   17a6c:	cmp	r1, r0
   17a70:	bcs	17a88 <__assert_fail@plt+0x69a0>
   17a74:	mov	r0, #0
   17a78:	mvn	r1, #0
   17a7c:	str	r1, [fp, #-68]	; 0xffffffbc
   17a80:	str	r0, [fp, #-72]	; 0xffffffb8
   17a84:	b	17aac <__assert_fail@plt+0x69c4>
   17a88:	ldr	r0, [fp, #-16]
   17a8c:	rsb	r2, r0, #0
   17a90:	mvn	r0, #0
   17a94:	mvn	r1, #-2147483648	; 0x80000000
   17a98:	mov	r3, #0
   17a9c:	bl	1e6f0 <__assert_fail@plt+0xd608>
   17aa0:	str	r0, [fp, #-68]	; 0xffffffbc
   17aa4:	str	r1, [fp, #-72]	; 0xffffffb8
   17aa8:	b	17aac <__assert_fail@plt+0x69c4>
   17aac:	ldr	r0, [fp, #-72]	; 0xffffffb8
   17ab0:	ldr	r1, [fp, #-68]	; 0xffffffbc
   17ab4:	ldr	r2, [fp, #-12]
   17ab8:	mvn	r2, r2
   17abc:	subs	r1, r2, r1
   17ac0:	rscs	r0, r0, #0
   17ac4:	str	r1, [fp, #-76]	; 0xffffffb4
   17ac8:	str	r0, [fp, #-80]	; 0xffffffb0
   17acc:	bge	17c18 <__assert_fail@plt+0x6b30>
   17ad0:	b	17c2c <__assert_fail@plt+0x6b44>
   17ad4:	ldr	r0, [fp, #-16]
   17ad8:	cmn	r0, #1
   17adc:	bne	17b24 <__assert_fail@plt+0x6a3c>
   17ae0:	b	17b04 <__assert_fail@plt+0x6a1c>
   17ae4:	ldr	r0, [fp, #-12]
   17ae8:	rsbs	r0, r0, #0
   17aec:	mov	r1, #0
   17af0:	sbcs	r1, r1, #-2147483648	; 0x80000000
   17af4:	str	r0, [fp, #-84]	; 0xffffffac
   17af8:	str	r1, [sp, #88]	; 0x58
   17afc:	blt	17c18 <__assert_fail@plt+0x6b30>
   17b00:	b	17c2c <__assert_fail@plt+0x6b44>
   17b04:	ldr	r0, [fp, #-12]
   17b08:	movw	r1, #0
   17b0c:	cmp	r1, r0
   17b10:	bcs	17c2c <__assert_fail@plt+0x6b44>
   17b14:	mov	r0, #0
   17b18:	cmp	r0, #0
   17b1c:	bne	17c18 <__assert_fail@plt+0x6b30>
   17b20:	b	17c2c <__assert_fail@plt+0x6b44>
   17b24:	ldr	r2, [fp, #-16]
   17b28:	mov	r1, #-2147483648	; 0x80000000
   17b2c:	mov	r0, #0
   17b30:	str	r0, [sp, #84]	; 0x54
   17b34:	ldr	r3, [sp, #84]	; 0x54
   17b38:	bl	1e61c <__assert_fail@plt+0xd534>
   17b3c:	ldr	r2, [fp, #-12]
   17b40:	subs	r0, r0, r2
   17b44:	sbcs	r1, r1, #0
   17b48:	str	r0, [sp, #80]	; 0x50
   17b4c:	str	r1, [sp, #76]	; 0x4c
   17b50:	blt	17c18 <__assert_fail@plt+0x6b30>
   17b54:	b	17c2c <__assert_fail@plt+0x6b44>
   17b58:	ldr	r0, [fp, #-16]
   17b5c:	cmp	r0, #0
   17b60:	bne	17b68 <__assert_fail@plt+0x6a80>
   17b64:	b	17c2c <__assert_fail@plt+0x6b44>
   17b68:	ldr	r0, [fp, #-12]
   17b6c:	cmp	r0, #0
   17b70:	bcs	17be8 <__assert_fail@plt+0x6b00>
   17b74:	ldr	r0, [fp, #-12]
   17b78:	cmn	r0, #1
   17b7c:	bne	17bb4 <__assert_fail@plt+0x6acc>
   17b80:	b	17ba4 <__assert_fail@plt+0x6abc>
   17b84:	ldr	r0, [fp, #-16]
   17b88:	rsbs	r0, r0, #0
   17b8c:	mov	r1, #0
   17b90:	sbcs	r1, r1, #-2147483648	; 0x80000000
   17b94:	str	r0, [sp, #72]	; 0x48
   17b98:	str	r1, [sp, #68]	; 0x44
   17b9c:	blt	17c18 <__assert_fail@plt+0x6b30>
   17ba0:	b	17c2c <__assert_fail@plt+0x6b44>
   17ba4:	mov	r0, #0
   17ba8:	cmp	r0, #0
   17bac:	bne	17c18 <__assert_fail@plt+0x6b30>
   17bb0:	b	17c2c <__assert_fail@plt+0x6b44>
   17bb4:	ldr	r2, [fp, #-12]
   17bb8:	mov	r1, #-2147483648	; 0x80000000
   17bbc:	mov	r0, #0
   17bc0:	str	r0, [sp, #64]	; 0x40
   17bc4:	ldr	r3, [sp, #64]	; 0x40
   17bc8:	bl	1e61c <__assert_fail@plt+0xd534>
   17bcc:	ldr	r2, [fp, #-16]
   17bd0:	subs	r0, r0, r2
   17bd4:	sbcs	r1, r1, #0
   17bd8:	str	r0, [sp, #60]	; 0x3c
   17bdc:	str	r1, [sp, #56]	; 0x38
   17be0:	blt	17c18 <__assert_fail@plt+0x6b30>
   17be4:	b	17c2c <__assert_fail@plt+0x6b44>
   17be8:	ldr	r2, [fp, #-16]
   17bec:	mvn	r0, #0
   17bf0:	mvn	r1, #-2147483648	; 0x80000000
   17bf4:	mov	r3, #0
   17bf8:	bl	1e6f0 <__assert_fail@plt+0xd608>
   17bfc:	ldr	r2, [fp, #-12]
   17c00:	subs	r0, r0, r2
   17c04:	sbcs	r1, r1, #0
   17c08:	str	r0, [sp, #52]	; 0x34
   17c0c:	str	r1, [sp, #48]	; 0x30
   17c10:	bge	17c2c <__assert_fail@plt+0x6b44>
   17c14:	b	17c18 <__assert_fail@plt+0x6b30>
   17c18:	ldr	r0, [fp, #-12]
   17c1c:	ldr	r1, [fp, #-16]
   17c20:	mul	r0, r0, r1
   17c24:	str	r0, [fp, #-20]	; 0xffffffec
   17c28:	b	17e74 <__assert_fail@plt+0x6d8c>
   17c2c:	ldr	r0, [fp, #-12]
   17c30:	ldr	r1, [fp, #-16]
   17c34:	mul	r0, r0, r1
   17c38:	str	r0, [fp, #-20]	; 0xffffffec
   17c3c:	b	17e8c <__assert_fail@plt+0x6da4>
   17c40:	ldr	r0, [fp, #-16]
   17c44:	cmp	r0, #0
   17c48:	bcs	17d94 <__assert_fail@plt+0x6cac>
   17c4c:	ldr	r0, [fp, #-12]
   17c50:	cmp	r0, #0
   17c54:	bcs	17d1c <__assert_fail@plt+0x6c34>
   17c58:	b	17c94 <__assert_fail@plt+0x6bac>
   17c5c:	ldr	r0, [fp, #-12]
   17c60:	ldr	r2, [fp, #-16]
   17c64:	mvn	r1, #0
   17c68:	mov	r3, #0
   17c6c:	str	r0, [sp, #44]	; 0x2c
   17c70:	mov	r0, r1
   17c74:	bl	1e6f0 <__assert_fail@plt+0xd608>
   17c78:	ldr	r2, [sp, #44]	; 0x2c
   17c7c:	subs	r0, r2, r0
   17c80:	rscs	r1, r1, #0
   17c84:	str	r0, [sp, #40]	; 0x28
   17c88:	str	r1, [sp, #36]	; 0x24
   17c8c:	bcc	17e4c <__assert_fail@plt+0x6d64>
   17c90:	b	17e60 <__assert_fail@plt+0x6d78>
   17c94:	b	17ca8 <__assert_fail@plt+0x6bc0>
   17c98:	ldr	r0, [fp, #-16]
   17c9c:	cmp	r0, #1
   17ca0:	bcc	17cb8 <__assert_fail@plt+0x6bd0>
   17ca4:	b	17ccc <__assert_fail@plt+0x6be4>
   17ca8:	ldr	r0, [fp, #-16]
   17cac:	movw	r1, #0
   17cb0:	cmp	r1, r0
   17cb4:	bcs	17ccc <__assert_fail@plt+0x6be4>
   17cb8:	mov	r0, #1
   17cbc:	mvn	r1, #0
   17cc0:	str	r1, [sp, #32]
   17cc4:	str	r0, [sp, #28]
   17cc8:	b	17cf4 <__assert_fail@plt+0x6c0c>
   17ccc:	ldr	r0, [fp, #-16]
   17cd0:	rsb	r2, r0, #0
   17cd4:	mvn	r0, #0
   17cd8:	mov	r3, #0
   17cdc:	str	r0, [sp, #24]
   17ce0:	ldr	r1, [sp, #24]
   17ce4:	bl	1e6f0 <__assert_fail@plt+0xd608>
   17ce8:	str	r0, [sp, #32]
   17cec:	str	r1, [sp, #28]
   17cf0:	b	17cf4 <__assert_fail@plt+0x6c0c>
   17cf4:	ldr	r0, [sp, #28]
   17cf8:	ldr	r1, [sp, #32]
   17cfc:	ldr	r2, [fp, #-12]
   17d00:	mvn	r2, r2
   17d04:	subs	r1, r2, r1
   17d08:	rscs	r0, r0, #0
   17d0c:	str	r1, [sp, #20]
   17d10:	str	r0, [sp, #16]
   17d14:	bcs	17e4c <__assert_fail@plt+0x6d64>
   17d18:	b	17e60 <__assert_fail@plt+0x6d78>
   17d1c:	b	17d24 <__assert_fail@plt+0x6c3c>
   17d20:	b	17d28 <__assert_fail@plt+0x6c40>
   17d24:	b	17d78 <__assert_fail@plt+0x6c90>
   17d28:	ldr	r0, [fp, #-16]
   17d2c:	cmn	r0, #1
   17d30:	bne	17d78 <__assert_fail@plt+0x6c90>
   17d34:	b	17d50 <__assert_fail@plt+0x6c68>
   17d38:	ldr	r0, [fp, #-12]
   17d3c:	add	r0, r0, #0
   17d40:	movw	r1, #0
   17d44:	cmp	r1, r0
   17d48:	bcc	17e4c <__assert_fail@plt+0x6d64>
   17d4c:	b	17e60 <__assert_fail@plt+0x6d78>
   17d50:	ldr	r0, [fp, #-12]
   17d54:	movw	r1, #0
   17d58:	cmp	r1, r0
   17d5c:	bcs	17e60 <__assert_fail@plt+0x6d78>
   17d60:	ldr	r0, [fp, #-12]
   17d64:	sub	r0, r0, #1
   17d68:	mvn	r1, #0
   17d6c:	cmp	r1, r0
   17d70:	bcc	17e4c <__assert_fail@plt+0x6d64>
   17d74:	b	17e60 <__assert_fail@plt+0x6d78>
   17d78:	ldr	r0, [fp, #-16]
   17d7c:	movw	r1, #0
   17d80:	udiv	r0, r1, r0
   17d84:	ldr	r1, [fp, #-12]
   17d88:	cmp	r0, r1
   17d8c:	bcc	17e4c <__assert_fail@plt+0x6d64>
   17d90:	b	17e60 <__assert_fail@plt+0x6d78>
   17d94:	ldr	r0, [fp, #-16]
   17d98:	cmp	r0, #0
   17d9c:	bne	17da4 <__assert_fail@plt+0x6cbc>
   17da0:	b	17e60 <__assert_fail@plt+0x6d78>
   17da4:	ldr	r0, [fp, #-12]
   17da8:	cmp	r0, #0
   17dac:	bcs	17e18 <__assert_fail@plt+0x6d30>
   17db0:	b	17db8 <__assert_fail@plt+0x6cd0>
   17db4:	b	17dbc <__assert_fail@plt+0x6cd4>
   17db8:	b	17dfc <__assert_fail@plt+0x6d14>
   17dbc:	ldr	r0, [fp, #-12]
   17dc0:	cmn	r0, #1
   17dc4:	bne	17dfc <__assert_fail@plt+0x6d14>
   17dc8:	b	17de4 <__assert_fail@plt+0x6cfc>
   17dcc:	ldr	r0, [fp, #-16]
   17dd0:	add	r0, r0, #0
   17dd4:	movw	r1, #0
   17dd8:	cmp	r1, r0
   17ddc:	bcc	17e4c <__assert_fail@plt+0x6d64>
   17de0:	b	17e60 <__assert_fail@plt+0x6d78>
   17de4:	ldr	r0, [fp, #-16]
   17de8:	sub	r0, r0, #1
   17dec:	mvn	r1, #0
   17df0:	cmp	r1, r0
   17df4:	bcc	17e4c <__assert_fail@plt+0x6d64>
   17df8:	b	17e60 <__assert_fail@plt+0x6d78>
   17dfc:	ldr	r0, [fp, #-12]
   17e00:	movw	r1, #0
   17e04:	udiv	r0, r1, r0
   17e08:	ldr	r1, [fp, #-16]
   17e0c:	cmp	r0, r1
   17e10:	bcc	17e4c <__assert_fail@plt+0x6d64>
   17e14:	b	17e60 <__assert_fail@plt+0x6d78>
   17e18:	ldr	r2, [fp, #-16]
   17e1c:	mvn	r0, #0
   17e20:	mov	r3, #0
   17e24:	str	r0, [sp, #12]
   17e28:	ldr	r1, [sp, #12]
   17e2c:	bl	1e6f0 <__assert_fail@plt+0xd608>
   17e30:	ldr	r2, [fp, #-12]
   17e34:	subs	r0, r0, r2
   17e38:	sbcs	r1, r1, #0
   17e3c:	str	r0, [sp, #8]
   17e40:	str	r1, [sp, #4]
   17e44:	bcs	17e60 <__assert_fail@plt+0x6d78>
   17e48:	b	17e4c <__assert_fail@plt+0x6d64>
   17e4c:	ldr	r0, [fp, #-12]
   17e50:	ldr	r1, [fp, #-16]
   17e54:	mul	r0, r0, r1
   17e58:	str	r0, [fp, #-20]	; 0xffffffec
   17e5c:	b	17e74 <__assert_fail@plt+0x6d8c>
   17e60:	ldr	r0, [fp, #-12]
   17e64:	ldr	r1, [fp, #-16]
   17e68:	mul	r0, r0, r1
   17e6c:	str	r0, [fp, #-20]	; 0xffffffec
   17e70:	b	17e8c <__assert_fail@plt+0x6da4>
   17e74:	bl	11010 <__errno_location@plt>
   17e78:	movw	lr, #12
   17e7c:	str	lr, [r0]
   17e80:	movw	r0, #0
   17e84:	str	r0, [fp, #-4]
   17e88:	b	17e9c <__assert_fail@plt+0x6db4>
   17e8c:	ldr	r0, [fp, #-8]
   17e90:	ldr	r1, [fp, #-20]	; 0xffffffec
   17e94:	bl	1da6c <__assert_fail@plt+0xc984>
   17e98:	str	r0, [fp, #-4]
   17e9c:	ldr	r0, [fp, #-4]
   17ea0:	mov	sp, fp
   17ea4:	pop	{fp, pc}
   17ea8:	svcvc	0x00ffffff
   17eac:	andhi	r0, r0, r0
   17eb0:			; <UNDEFINED> instruction: 0xffff8000
   17eb4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17eb8:	add	fp, sp, #28
   17ebc:	sub	sp, sp, #260	; 0x104
   17ec0:	ldr	ip, [fp, #12]
   17ec4:	ldr	lr, [fp, #8]
   17ec8:	str	r0, [fp, #-32]	; 0xffffffe0
   17ecc:	str	r1, [fp, #-36]	; 0xffffffdc
   17ed0:	str	r2, [fp, #-40]	; 0xffffffd8
   17ed4:	str	r3, [fp, #-44]	; 0xffffffd4
   17ed8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   17edc:	movw	r1, #0
   17ee0:	cmp	r0, r1
   17ee4:	str	lr, [fp, #-48]	; 0xffffffd0
   17ee8:	str	ip, [fp, #-52]	; 0xffffffcc
   17eec:	beq	17f24 <__assert_fail@plt+0x6e3c>
   17ef0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17ef4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   17ef8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   17efc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   17f00:	movw	ip, #61784	; 0xf158
   17f04:	movt	ip, #1
   17f08:	str	r1, [fp, #-56]	; 0xffffffc8
   17f0c:	mov	r1, ip
   17f10:	ldr	ip, [fp, #-56]	; 0xffffffc8
   17f14:	str	ip, [sp]
   17f18:	bl	11004 <fprintf@plt>
   17f1c:	str	r0, [fp, #-60]	; 0xffffffc4
   17f20:	b	17f40 <__assert_fail@plt+0x6e58>
   17f24:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17f28:	ldr	r2, [fp, #-40]	; 0xffffffd8
   17f2c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   17f30:	movw	r1, #61796	; 0xf164
   17f34:	movt	r1, #1
   17f38:	bl	11004 <fprintf@plt>
   17f3c:	str	r0, [fp, #-64]	; 0xffffffc0
   17f40:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17f44:	movw	r1, #61803	; 0xf16b
   17f48:	movt	r1, #1
   17f4c:	str	r0, [fp, #-68]	; 0xffffffbc
   17f50:	mov	r0, r1
   17f54:	bl	10fe0 <gettext@plt>
   17f58:	movw	r1, #62521	; 0xf439
   17f5c:	movt	r1, #1
   17f60:	movw	r3, #2022	; 0x7e6
   17f64:	ldr	lr, [fp, #-68]	; 0xffffffbc
   17f68:	str	r0, [fp, #-72]	; 0xffffffb8
   17f6c:	mov	r0, lr
   17f70:	ldr	r2, [fp, #-72]	; 0xffffffb8
   17f74:	bl	11004 <fprintf@plt>
   17f78:	ldr	r1, [fp, #-32]	; 0xffffffe0
   17f7c:	movw	r2, #60927	; 0xedff
   17f80:	movt	r2, #1
   17f84:	str	r0, [fp, #-76]	; 0xffffffb4
   17f88:	mov	r0, r2
   17f8c:	str	r2, [fp, #-80]	; 0xffffffb0
   17f90:	bl	10e78 <fputs_unlocked@plt>
   17f94:	ldr	r1, [fp, #-32]	; 0xffffffe0
   17f98:	movw	r2, #61807	; 0xf16f
   17f9c:	movt	r2, #1
   17fa0:	str	r0, [fp, #-84]	; 0xffffffac
   17fa4:	mov	r0, r2
   17fa8:	str	r1, [fp, #-88]	; 0xffffffa8
   17fac:	bl	10fe0 <gettext@plt>
   17fb0:	movw	r2, #61978	; 0xf21a
   17fb4:	movt	r2, #1
   17fb8:	ldr	r1, [fp, #-88]	; 0xffffffa8
   17fbc:	str	r0, [fp, #-92]	; 0xffffffa4
   17fc0:	mov	r0, r1
   17fc4:	ldr	r1, [fp, #-92]	; 0xffffffa4
   17fc8:	bl	11004 <fprintf@plt>
   17fcc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   17fd0:	ldr	r2, [fp, #-80]	; 0xffffffb0
   17fd4:	str	r0, [fp, #-96]	; 0xffffffa0
   17fd8:	mov	r0, r2
   17fdc:	bl	10e78 <fputs_unlocked@plt>
   17fe0:	ldr	r1, [fp, #12]
   17fe4:	cmp	r1, #9
   17fe8:	str	r0, [fp, #-100]	; 0xffffff9c
   17fec:	str	r1, [fp, #-104]	; 0xffffff98
   17ff0:	bhi	18430 <__assert_fail@plt+0x7348>
   17ff4:	add	r0, pc, #8
   17ff8:	ldr	r1, [fp, #-104]	; 0xffffff98
   17ffc:	ldr	r0, [r0, r1, lsl #2]
   18000:	mov	pc, r0
   18004:	andeq	r8, r1, ip, lsr #32
   18008:	andeq	r8, r1, r0, lsr r0
   1800c:	andeq	r8, r1, ip, rrx
   18010:	strheq	r8, [r1], -r0
   18014:	andeq	r8, r1, ip, lsl #2
   18018:	andeq	r8, r1, r4, ror r1
   1801c:	andeq	r8, r1, r8, ror #3
   18020:	andeq	r8, r1, r8, ror #4
   18024:	strdeq	r8, [r1], -r4
   18028:	andeq	r8, r1, ip, lsl #7
   1802c:	b	184d0 <__assert_fail@plt+0x73e8>
   18030:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18034:	movw	r1, #62012	; 0xf23c
   18038:	movt	r1, #1
   1803c:	str	r0, [fp, #-108]	; 0xffffff94
   18040:	mov	r0, r1
   18044:	bl	10fe0 <gettext@plt>
   18048:	ldr	r1, [fp, #8]
   1804c:	ldr	r2, [r1]
   18050:	ldr	r1, [fp, #-108]	; 0xffffff94
   18054:	str	r0, [fp, #-112]	; 0xffffff90
   18058:	mov	r0, r1
   1805c:	ldr	r1, [fp, #-112]	; 0xffffff90
   18060:	bl	11004 <fprintf@plt>
   18064:	str	r0, [fp, #-116]	; 0xffffff8c
   18068:	b	184d0 <__assert_fail@plt+0x73e8>
   1806c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18070:	movw	r1, #62028	; 0xf24c
   18074:	movt	r1, #1
   18078:	str	r0, [fp, #-120]	; 0xffffff88
   1807c:	mov	r0, r1
   18080:	bl	10fe0 <gettext@plt>
   18084:	ldr	r1, [fp, #8]
   18088:	ldr	r2, [r1]
   1808c:	ldr	r1, [fp, #8]
   18090:	ldr	r3, [r1, #4]
   18094:	ldr	r1, [fp, #-120]	; 0xffffff88
   18098:	str	r0, [fp, #-124]	; 0xffffff84
   1809c:	mov	r0, r1
   180a0:	ldr	r1, [fp, #-124]	; 0xffffff84
   180a4:	bl	11004 <fprintf@plt>
   180a8:	str	r0, [fp, #-128]	; 0xffffff80
   180ac:	b	184d0 <__assert_fail@plt+0x73e8>
   180b0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   180b4:	movw	r1, #62051	; 0xf263
   180b8:	movt	r1, #1
   180bc:	str	r0, [fp, #-132]	; 0xffffff7c
   180c0:	mov	r0, r1
   180c4:	bl	10fe0 <gettext@plt>
   180c8:	ldr	r1, [fp, #8]
   180cc:	ldr	r2, [r1]
   180d0:	ldr	r1, [fp, #8]
   180d4:	ldr	r3, [r1, #4]
   180d8:	ldr	r1, [fp, #8]
   180dc:	ldr	r1, [r1, #8]
   180e0:	ldr	lr, [fp, #-132]	; 0xffffff7c
   180e4:	str	r0, [fp, #-136]	; 0xffffff78
   180e8:	mov	r0, lr
   180ec:	ldr	ip, [fp, #-136]	; 0xffffff78
   180f0:	str	r1, [fp, #-140]	; 0xffffff74
   180f4:	mov	r1, ip
   180f8:	ldr	r4, [fp, #-140]	; 0xffffff74
   180fc:	str	r4, [sp]
   18100:	bl	11004 <fprintf@plt>
   18104:	str	r0, [sp, #144]	; 0x90
   18108:	b	184d0 <__assert_fail@plt+0x73e8>
   1810c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18110:	movw	r1, #62079	; 0xf27f
   18114:	movt	r1, #1
   18118:	str	r0, [sp, #140]	; 0x8c
   1811c:	mov	r0, r1
   18120:	bl	10fe0 <gettext@plt>
   18124:	ldr	r1, [fp, #8]
   18128:	ldr	r2, [r1]
   1812c:	ldr	r1, [fp, #8]
   18130:	ldr	r3, [r1, #4]
   18134:	ldr	r1, [fp, #8]
   18138:	ldr	r1, [r1, #8]
   1813c:	ldr	lr, [fp, #8]
   18140:	ldr	lr, [lr, #12]
   18144:	ldr	ip, [sp, #140]	; 0x8c
   18148:	str	r0, [sp, #136]	; 0x88
   1814c:	mov	r0, ip
   18150:	ldr	r4, [sp, #136]	; 0x88
   18154:	str	r1, [sp, #132]	; 0x84
   18158:	mov	r1, r4
   1815c:	ldr	r5, [sp, #132]	; 0x84
   18160:	str	r5, [sp]
   18164:	str	lr, [sp, #4]
   18168:	bl	11004 <fprintf@plt>
   1816c:	str	r0, [sp, #128]	; 0x80
   18170:	b	184d0 <__assert_fail@plt+0x73e8>
   18174:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18178:	movw	r1, #62111	; 0xf29f
   1817c:	movt	r1, #1
   18180:	str	r0, [sp, #124]	; 0x7c
   18184:	mov	r0, r1
   18188:	bl	10fe0 <gettext@plt>
   1818c:	ldr	r1, [fp, #8]
   18190:	ldr	r2, [r1]
   18194:	ldr	r1, [fp, #8]
   18198:	ldr	r3, [r1, #4]
   1819c:	ldr	r1, [fp, #8]
   181a0:	ldr	r1, [r1, #8]
   181a4:	ldr	lr, [fp, #8]
   181a8:	ldr	lr, [lr, #12]
   181ac:	ldr	ip, [fp, #8]
   181b0:	ldr	ip, [ip, #16]
   181b4:	ldr	r4, [sp, #124]	; 0x7c
   181b8:	str	r0, [sp, #120]	; 0x78
   181bc:	mov	r0, r4
   181c0:	ldr	r5, [sp, #120]	; 0x78
   181c4:	str	r1, [sp, #116]	; 0x74
   181c8:	mov	r1, r5
   181cc:	ldr	r6, [sp, #116]	; 0x74
   181d0:	str	r6, [sp]
   181d4:	str	lr, [sp, #4]
   181d8:	str	ip, [sp, #8]
   181dc:	bl	11004 <fprintf@plt>
   181e0:	str	r0, [sp, #112]	; 0x70
   181e4:	b	184d0 <__assert_fail@plt+0x73e8>
   181e8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   181ec:	movw	r1, #62147	; 0xf2c3
   181f0:	movt	r1, #1
   181f4:	str	r0, [sp, #108]	; 0x6c
   181f8:	mov	r0, r1
   181fc:	bl	10fe0 <gettext@plt>
   18200:	ldr	r1, [fp, #8]
   18204:	ldr	r2, [r1]
   18208:	ldr	r1, [fp, #8]
   1820c:	ldr	r3, [r1, #4]
   18210:	ldr	r1, [fp, #8]
   18214:	ldr	r1, [r1, #8]
   18218:	ldr	lr, [fp, #8]
   1821c:	ldr	lr, [lr, #12]
   18220:	ldr	ip, [fp, #8]
   18224:	ldr	ip, [ip, #16]
   18228:	ldr	r4, [fp, #8]
   1822c:	ldr	r4, [r4, #20]
   18230:	ldr	r5, [sp, #108]	; 0x6c
   18234:	str	r0, [sp, #104]	; 0x68
   18238:	mov	r0, r5
   1823c:	ldr	r6, [sp, #104]	; 0x68
   18240:	str	r1, [sp, #100]	; 0x64
   18244:	mov	r1, r6
   18248:	ldr	r7, [sp, #100]	; 0x64
   1824c:	str	r7, [sp]
   18250:	str	lr, [sp, #4]
   18254:	str	ip, [sp, #8]
   18258:	str	r4, [sp, #12]
   1825c:	bl	11004 <fprintf@plt>
   18260:	str	r0, [sp, #96]	; 0x60
   18264:	b	184d0 <__assert_fail@plt+0x73e8>
   18268:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1826c:	movw	r1, #62187	; 0xf2eb
   18270:	movt	r1, #1
   18274:	str	r0, [sp, #92]	; 0x5c
   18278:	mov	r0, r1
   1827c:	bl	10fe0 <gettext@plt>
   18280:	ldr	r1, [fp, #8]
   18284:	ldr	r2, [r1]
   18288:	ldr	r1, [fp, #8]
   1828c:	ldr	r3, [r1, #4]
   18290:	ldr	r1, [fp, #8]
   18294:	ldr	r1, [r1, #8]
   18298:	ldr	lr, [fp, #8]
   1829c:	ldr	lr, [lr, #12]
   182a0:	ldr	ip, [fp, #8]
   182a4:	ldr	ip, [ip, #16]
   182a8:	ldr	r4, [fp, #8]
   182ac:	ldr	r4, [r4, #20]
   182b0:	ldr	r5, [fp, #8]
   182b4:	ldr	r5, [r5, #24]
   182b8:	ldr	r6, [sp, #92]	; 0x5c
   182bc:	str	r0, [sp, #88]	; 0x58
   182c0:	mov	r0, r6
   182c4:	ldr	r7, [sp, #88]	; 0x58
   182c8:	str	r1, [sp, #84]	; 0x54
   182cc:	mov	r1, r7
   182d0:	ldr	r8, [sp, #84]	; 0x54
   182d4:	str	r8, [sp]
   182d8:	str	lr, [sp, #4]
   182dc:	str	ip, [sp, #8]
   182e0:	str	r4, [sp, #12]
   182e4:	str	r5, [sp, #16]
   182e8:	bl	11004 <fprintf@plt>
   182ec:	str	r0, [sp, #80]	; 0x50
   182f0:	b	184d0 <__assert_fail@plt+0x73e8>
   182f4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   182f8:	movw	r1, #62231	; 0xf317
   182fc:	movt	r1, #1
   18300:	str	r0, [sp, #76]	; 0x4c
   18304:	mov	r0, r1
   18308:	bl	10fe0 <gettext@plt>
   1830c:	ldr	r1, [fp, #8]
   18310:	ldr	r2, [r1]
   18314:	ldr	r1, [fp, #8]
   18318:	ldr	r3, [r1, #4]
   1831c:	ldr	r1, [fp, #8]
   18320:	ldr	r1, [r1, #8]
   18324:	ldr	lr, [fp, #8]
   18328:	ldr	lr, [lr, #12]
   1832c:	ldr	ip, [fp, #8]
   18330:	ldr	ip, [ip, #16]
   18334:	ldr	r4, [fp, #8]
   18338:	ldr	r4, [r4, #20]
   1833c:	ldr	r5, [fp, #8]
   18340:	ldr	r5, [r5, #24]
   18344:	ldr	r6, [fp, #8]
   18348:	ldr	r6, [r6, #28]
   1834c:	ldr	r7, [sp, #76]	; 0x4c
   18350:	str	r0, [sp, #72]	; 0x48
   18354:	mov	r0, r7
   18358:	ldr	r8, [sp, #72]	; 0x48
   1835c:	str	r1, [sp, #68]	; 0x44
   18360:	mov	r1, r8
   18364:	ldr	r9, [sp, #68]	; 0x44
   18368:	str	r9, [sp]
   1836c:	str	lr, [sp, #4]
   18370:	str	ip, [sp, #8]
   18374:	str	r4, [sp, #12]
   18378:	str	r5, [sp, #16]
   1837c:	str	r6, [sp, #20]
   18380:	bl	11004 <fprintf@plt>
   18384:	str	r0, [sp, #64]	; 0x40
   18388:	b	184d0 <__assert_fail@plt+0x73e8>
   1838c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18390:	movw	r1, #62279	; 0xf347
   18394:	movt	r1, #1
   18398:	str	r0, [sp, #60]	; 0x3c
   1839c:	mov	r0, r1
   183a0:	bl	10fe0 <gettext@plt>
   183a4:	ldr	r1, [fp, #8]
   183a8:	ldr	r2, [r1]
   183ac:	ldr	r1, [fp, #8]
   183b0:	ldr	r3, [r1, #4]
   183b4:	ldr	r1, [fp, #8]
   183b8:	ldr	r1, [r1, #8]
   183bc:	ldr	lr, [fp, #8]
   183c0:	ldr	lr, [lr, #12]
   183c4:	ldr	ip, [fp, #8]
   183c8:	ldr	ip, [ip, #16]
   183cc:	ldr	r4, [fp, #8]
   183d0:	ldr	r4, [r4, #20]
   183d4:	ldr	r5, [fp, #8]
   183d8:	ldr	r5, [r5, #24]
   183dc:	ldr	r6, [fp, #8]
   183e0:	ldr	r6, [r6, #28]
   183e4:	ldr	r7, [fp, #8]
   183e8:	ldr	r7, [r7, #32]
   183ec:	ldr	r8, [sp, #60]	; 0x3c
   183f0:	str	r0, [sp, #56]	; 0x38
   183f4:	mov	r0, r8
   183f8:	ldr	r9, [sp, #56]	; 0x38
   183fc:	str	r1, [sp, #52]	; 0x34
   18400:	mov	r1, r9
   18404:	ldr	sl, [sp, #52]	; 0x34
   18408:	str	sl, [sp]
   1840c:	str	lr, [sp, #4]
   18410:	str	ip, [sp, #8]
   18414:	str	r4, [sp, #12]
   18418:	str	r5, [sp, #16]
   1841c:	str	r6, [sp, #20]
   18420:	str	r7, [sp, #24]
   18424:	bl	11004 <fprintf@plt>
   18428:	str	r0, [sp, #48]	; 0x30
   1842c:	b	184d0 <__assert_fail@plt+0x73e8>
   18430:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18434:	movw	r1, #62331	; 0xf37b
   18438:	movt	r1, #1
   1843c:	str	r0, [sp, #44]	; 0x2c
   18440:	mov	r0, r1
   18444:	bl	10fe0 <gettext@plt>
   18448:	ldr	r1, [fp, #8]
   1844c:	ldr	r2, [r1]
   18450:	ldr	r1, [fp, #8]
   18454:	ldr	r3, [r1, #4]
   18458:	ldr	r1, [fp, #8]
   1845c:	ldr	r1, [r1, #8]
   18460:	ldr	lr, [fp, #8]
   18464:	ldr	lr, [lr, #12]
   18468:	ldr	ip, [fp, #8]
   1846c:	ldr	ip, [ip, #16]
   18470:	ldr	r4, [fp, #8]
   18474:	ldr	r4, [r4, #20]
   18478:	ldr	r5, [fp, #8]
   1847c:	ldr	r5, [r5, #24]
   18480:	ldr	r6, [fp, #8]
   18484:	ldr	r6, [r6, #28]
   18488:	ldr	r7, [fp, #8]
   1848c:	ldr	r7, [r7, #32]
   18490:	ldr	r8, [sp, #44]	; 0x2c
   18494:	str	r0, [sp, #40]	; 0x28
   18498:	mov	r0, r8
   1849c:	ldr	r9, [sp, #40]	; 0x28
   184a0:	str	r1, [sp, #36]	; 0x24
   184a4:	mov	r1, r9
   184a8:	ldr	sl, [sp, #36]	; 0x24
   184ac:	str	sl, [sp]
   184b0:	str	lr, [sp, #4]
   184b4:	str	ip, [sp, #8]
   184b8:	str	r4, [sp, #12]
   184bc:	str	r5, [sp, #16]
   184c0:	str	r6, [sp, #20]
   184c4:	str	r7, [sp, #24]
   184c8:	bl	11004 <fprintf@plt>
   184cc:	str	r0, [sp, #32]
   184d0:	sub	sp, fp, #28
   184d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   184d8:	push	{fp, lr}
   184dc:	mov	fp, sp
   184e0:	sub	sp, sp, #32
   184e4:	ldr	ip, [fp, #8]
   184e8:	str	r0, [fp, #-4]
   184ec:	str	r1, [fp, #-8]
   184f0:	str	r2, [fp, #-12]
   184f4:	str	r3, [sp, #16]
   184f8:	movw	r0, #0
   184fc:	str	r0, [sp, #12]
   18500:	str	ip, [sp, #8]
   18504:	ldr	r0, [fp, #8]
   18508:	ldr	r1, [sp, #12]
   1850c:	add	r0, r0, r1, lsl #2
   18510:	ldr	r0, [r0]
   18514:	movw	r1, #0
   18518:	cmp	r0, r1
   1851c:	beq	18534 <__assert_fail@plt+0x744c>
   18520:	b	18524 <__assert_fail@plt+0x743c>
   18524:	ldr	r0, [sp, #12]
   18528:	add	r0, r0, #1
   1852c:	str	r0, [sp, #12]
   18530:	b	18504 <__assert_fail@plt+0x741c>
   18534:	ldr	r0, [fp, #-4]
   18538:	ldr	r1, [fp, #-8]
   1853c:	ldr	r2, [fp, #-12]
   18540:	ldr	r3, [sp, #16]
   18544:	ldr	ip, [fp, #8]
   18548:	ldr	lr, [sp, #12]
   1854c:	str	ip, [sp]
   18550:	str	lr, [sp, #4]
   18554:	bl	17eb4 <__assert_fail@plt+0x6dcc>
   18558:	mov	sp, fp
   1855c:	pop	{fp, pc}
   18560:	push	{fp, lr}
   18564:	mov	fp, sp
   18568:	sub	sp, sp, #80	; 0x50
   1856c:	ldr	ip, [fp, #8]
   18570:	str	ip, [fp, #-4]
   18574:	str	r0, [fp, #-8]
   18578:	str	r1, [fp, #-12]
   1857c:	str	r2, [fp, #-16]
   18580:	str	r3, [fp, #-20]	; 0xffffffec
   18584:	movw	r0, #0
   18588:	str	r0, [fp, #-24]	; 0xffffffe8
   1858c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18590:	cmp	r0, #10
   18594:	movw	r0, #0
   18598:	str	r0, [sp, #12]
   1859c:	bcs	185d4 <__assert_fail@plt+0x74ec>
   185a0:	ldr	r0, [fp, #-4]
   185a4:	add	r1, r0, #4
   185a8:	str	r1, [fp, #-4]
   185ac:	ldr	r0, [r0]
   185b0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   185b4:	add	r2, sp, #16
   185b8:	add	r1, r2, r1, lsl #2
   185bc:	str	r0, [r1]
   185c0:	movw	r1, #0
   185c4:	cmp	r0, r1
   185c8:	movw	r0, #0
   185cc:	movne	r0, #1
   185d0:	str	r0, [sp, #12]
   185d4:	ldr	r0, [sp, #12]
   185d8:	tst	r0, #1
   185dc:	beq	185f4 <__assert_fail@plt+0x750c>
   185e0:	b	185e4 <__assert_fail@plt+0x74fc>
   185e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   185e8:	add	r0, r0, #1
   185ec:	str	r0, [fp, #-24]	; 0xffffffe8
   185f0:	b	1858c <__assert_fail@plt+0x74a4>
   185f4:	add	r0, sp, #16
   185f8:	ldr	r1, [fp, #-8]
   185fc:	ldr	r2, [fp, #-12]
   18600:	ldr	r3, [fp, #-16]
   18604:	ldr	ip, [fp, #-20]	; 0xffffffec
   18608:	ldr	lr, [fp, #-24]	; 0xffffffe8
   1860c:	str	r0, [sp, #8]
   18610:	mov	r0, r1
   18614:	mov	r1, r2
   18618:	mov	r2, r3
   1861c:	mov	r3, ip
   18620:	ldr	ip, [sp, #8]
   18624:	str	ip, [sp]
   18628:	str	lr, [sp, #4]
   1862c:	bl	17eb4 <__assert_fail@plt+0x6dcc>
   18630:	mov	sp, fp
   18634:	pop	{fp, pc}
   18638:	push	{fp, lr}
   1863c:	mov	fp, sp
   18640:	sub	sp, sp, #32
   18644:	str	r0, [fp, #-4]
   18648:	str	r1, [fp, #-8]
   1864c:	str	r2, [fp, #-12]
   18650:	str	r3, [sp, #16]
   18654:	add	r0, fp, #8
   18658:	str	r0, [sp, #12]
   1865c:	ldr	r0, [fp, #-4]
   18660:	ldr	r1, [fp, #-8]
   18664:	ldr	r2, [fp, #-12]
   18668:	ldr	r3, [sp, #16]
   1866c:	ldr	ip, [sp, #12]
   18670:	mov	lr, sp
   18674:	str	ip, [lr]
   18678:	bl	18560 <__assert_fail@plt+0x7478>
   1867c:	add	r0, sp, #12
   18680:	str	r0, [sp, #8]
   18684:	mov	sp, fp
   18688:	pop	{fp, pc}
   1868c:	push	{fp, lr}
   18690:	mov	fp, sp
   18694:	sub	sp, sp, #16
   18698:	movw	r0, #340	; 0x154
   1869c:	movt	r0, #3
   186a0:	ldr	r1, [r0]
   186a4:	movw	r0, #60927	; 0xedff
   186a8:	movt	r0, #1
   186ac:	bl	10e78 <fputs_unlocked@plt>
   186b0:	movw	r1, #62391	; 0xf3b7
   186b4:	movt	r1, #1
   186b8:	str	r0, [fp, #-4]
   186bc:	mov	r0, r1
   186c0:	bl	10fe0 <gettext@plt>
   186c4:	movw	r1, #62411	; 0xf3cb
   186c8:	movt	r1, #1
   186cc:	bl	10ea8 <printf@plt>
   186d0:	movw	r1, #62433	; 0xf3e1
   186d4:	movt	r1, #1
   186d8:	str	r0, [sp, #8]
   186dc:	mov	r0, r1
   186e0:	bl	10fe0 <gettext@plt>
   186e4:	movw	r1, #60437	; 0xec15
   186e8:	movt	r1, #1
   186ec:	movw	r2, #60736	; 0xed40
   186f0:	movt	r2, #1
   186f4:	bl	10ea8 <printf@plt>
   186f8:	movw	r1, #62453	; 0xf3f5
   186fc:	movt	r1, #1
   18700:	str	r0, [sp, #4]
   18704:	mov	r0, r1
   18708:	bl	10fe0 <gettext@plt>
   1870c:	movw	r1, #62492	; 0xf41c
   18710:	movt	r1, #1
   18714:	bl	10ea8 <printf@plt>
   18718:	str	r0, [sp]
   1871c:	mov	sp, fp
   18720:	pop	{fp, pc}
   18724:	push	{fp, lr}
   18728:	mov	fp, sp
   1872c:	sub	sp, sp, #16
   18730:	str	r0, [fp, #-4]
   18734:	str	r1, [sp, #8]
   18738:	str	r2, [sp, #4]
   1873c:	ldr	r0, [fp, #-4]
   18740:	ldr	r1, [sp, #8]
   18744:	ldr	r2, [sp, #4]
   18748:	bl	18754 <__assert_fail@plt+0x766c>
   1874c:	mov	sp, fp
   18750:	pop	{fp, pc}
   18754:	push	{fp, lr}
   18758:	mov	fp, sp
   1875c:	sub	sp, sp, #16
   18760:	str	r0, [fp, #-4]
   18764:	str	r1, [sp, #8]
   18768:	str	r2, [sp, #4]
   1876c:	ldr	r0, [fp, #-4]
   18770:	ldr	r1, [sp, #8]
   18774:	ldr	r2, [sp, #4]
   18778:	bl	16b24 <__assert_fail@plt+0x5a3c>
   1877c:	str	r0, [sp]
   18780:	ldr	r0, [sp]
   18784:	movw	r1, #0
   18788:	cmp	r0, r1
   1878c:	bne	187bc <__assert_fail@plt+0x76d4>
   18790:	ldr	r0, [fp, #-4]
   18794:	movw	r1, #0
   18798:	cmp	r0, r1
   1879c:	beq	187b8 <__assert_fail@plt+0x76d0>
   187a0:	ldr	r0, [sp, #8]
   187a4:	cmp	r0, #0
   187a8:	beq	187bc <__assert_fail@plt+0x76d4>
   187ac:	ldr	r0, [sp, #4]
   187b0:	cmp	r0, #0
   187b4:	beq	187bc <__assert_fail@plt+0x76d4>
   187b8:	bl	1b5a4 <__assert_fail@plt+0xa4bc>
   187bc:	ldr	r0, [sp]
   187c0:	mov	sp, fp
   187c4:	pop	{fp, pc}
   187c8:	push	{fp, lr}
   187cc:	mov	fp, sp
   187d0:	sub	sp, sp, #8
   187d4:	str	r0, [sp, #4]
   187d8:	ldr	r0, [sp, #4]
   187dc:	bl	1d9fc <__assert_fail@plt+0xc914>
   187e0:	bl	187ec <__assert_fail@plt+0x7704>
   187e4:	mov	sp, fp
   187e8:	pop	{fp, pc}
   187ec:	push	{fp, lr}
   187f0:	mov	fp, sp
   187f4:	sub	sp, sp, #8
   187f8:	str	r0, [sp, #4]
   187fc:	ldr	r0, [sp, #4]
   18800:	movw	r1, #0
   18804:	cmp	r0, r1
   18808:	bne	18810 <__assert_fail@plt+0x7728>
   1880c:	bl	1b5a4 <__assert_fail@plt+0xa4bc>
   18810:	ldr	r0, [sp, #4]
   18814:	mov	sp, fp
   18818:	pop	{fp, pc}
   1881c:	push	{fp, lr}
   18820:	mov	fp, sp
   18824:	sub	sp, sp, #8
   18828:	str	r0, [sp, #4]
   1882c:	ldr	r0, [sp, #4]
   18830:	bl	141d8 <__assert_fail@plt+0x30f0>
   18834:	bl	187ec <__assert_fail@plt+0x7704>
   18838:	mov	sp, fp
   1883c:	pop	{fp, pc}
   18840:	push	{fp, lr}
   18844:	mov	fp, sp
   18848:	sub	sp, sp, #8
   1884c:	str	r0, [sp, #4]
   18850:	ldr	r0, [sp, #4]
   18854:	bl	187c8 <__assert_fail@plt+0x76e0>
   18858:	mov	sp, fp
   1885c:	pop	{fp, pc}
   18860:	push	{fp, lr}
   18864:	mov	fp, sp
   18868:	sub	sp, sp, #16
   1886c:	str	r0, [fp, #-4]
   18870:	str	r1, [sp, #8]
   18874:	ldr	r0, [fp, #-4]
   18878:	ldr	r1, [sp, #8]
   1887c:	bl	1da6c <__assert_fail@plt+0xc984>
   18880:	str	r0, [sp, #4]
   18884:	ldr	r0, [sp, #4]
   18888:	movw	r1, #0
   1888c:	cmp	r0, r1
   18890:	bne	188b4 <__assert_fail@plt+0x77cc>
   18894:	ldr	r0, [fp, #-4]
   18898:	movw	r1, #0
   1889c:	cmp	r0, r1
   188a0:	beq	188b0 <__assert_fail@plt+0x77c8>
   188a4:	ldr	r0, [sp, #8]
   188a8:	cmp	r0, #0
   188ac:	beq	188b4 <__assert_fail@plt+0x77cc>
   188b0:	bl	1b5a4 <__assert_fail@plt+0xa4bc>
   188b4:	ldr	r0, [sp, #4]
   188b8:	mov	sp, fp
   188bc:	pop	{fp, pc}
   188c0:	push	{fp, lr}
   188c4:	mov	fp, sp
   188c8:	sub	sp, sp, #8
   188cc:	str	r0, [sp, #4]
   188d0:	str	r1, [sp]
   188d4:	ldr	r0, [sp, #4]
   188d8:	ldr	r1, [sp]
   188dc:	bl	14218 <__assert_fail@plt+0x3130>
   188e0:	bl	187ec <__assert_fail@plt+0x7704>
   188e4:	mov	sp, fp
   188e8:	pop	{fp, pc}
   188ec:	push	{fp, lr}
   188f0:	mov	fp, sp
   188f4:	sub	sp, sp, #16
   188f8:	str	r0, [fp, #-4]
   188fc:	str	r1, [sp, #8]
   18900:	str	r2, [sp, #4]
   18904:	ldr	r0, [fp, #-4]
   18908:	ldr	r1, [sp, #8]
   1890c:	ldr	r2, [sp, #4]
   18910:	bl	14310 <__assert_fail@plt+0x3228>
   18914:	bl	187ec <__assert_fail@plt+0x7704>
   18918:	mov	sp, fp
   1891c:	pop	{fp, pc}
   18920:	push	{fp, lr}
   18924:	mov	fp, sp
   18928:	sub	sp, sp, #8
   1892c:	str	r0, [sp, #4]
   18930:	str	r1, [sp]
   18934:	ldr	r1, [sp, #4]
   18938:	ldr	r2, [sp]
   1893c:	movw	r0, #0
   18940:	bl	18754 <__assert_fail@plt+0x766c>
   18944:	mov	sp, fp
   18948:	pop	{fp, pc}
   1894c:	push	{fp, lr}
   18950:	mov	fp, sp
   18954:	sub	sp, sp, #8
   18958:	str	r0, [sp, #4]
   1895c:	str	r1, [sp]
   18960:	ldr	r1, [sp, #4]
   18964:	ldr	r2, [sp]
   18968:	movw	r0, #0
   1896c:	bl	188ec <__assert_fail@plt+0x7804>
   18970:	mov	sp, fp
   18974:	pop	{fp, pc}
   18978:	push	{fp, lr}
   1897c:	mov	fp, sp
   18980:	sub	sp, sp, #8
   18984:	str	r0, [sp, #4]
   18988:	str	r1, [sp]
   1898c:	ldr	r0, [sp, #4]
   18990:	ldr	r1, [sp]
   18994:	movw	r2, #1
   18998:	bl	189a4 <__assert_fail@plt+0x78bc>
   1899c:	mov	sp, fp
   189a0:	pop	{fp, pc}
   189a4:	push	{fp, lr}
   189a8:	mov	fp, sp
   189ac:	sub	sp, sp, #16
   189b0:	str	r0, [fp, #-4]
   189b4:	str	r1, [sp, #8]
   189b8:	str	r2, [sp, #4]
   189bc:	ldr	r0, [sp, #8]
   189c0:	ldr	r0, [r0]
   189c4:	str	r0, [sp]
   189c8:	ldr	r0, [fp, #-4]
   189cc:	movw	r1, #0
   189d0:	cmp	r0, r1
   189d4:	bne	18a20 <__assert_fail@plt+0x7938>
   189d8:	ldr	r0, [sp]
   189dc:	cmp	r0, #0
   189e0:	bne	18a1c <__assert_fail@plt+0x7934>
   189e4:	ldr	r0, [sp, #4]
   189e8:	movw	r1, #64	; 0x40
   189ec:	udiv	r0, r1, r0
   189f0:	str	r0, [sp]
   189f4:	ldr	r0, [sp]
   189f8:	cmp	r0, #0
   189fc:	movw	r0, #0
   18a00:	movne	r0, #1
   18a04:	mvn	r1, #0
   18a08:	eor	r0, r0, r1
   18a0c:	and	r0, r0, #1
   18a10:	ldr	r1, [sp]
   18a14:	add	r0, r1, r0
   18a18:	str	r0, [sp]
   18a1c:	b	18a50 <__assert_fail@plt+0x7968>
   18a20:	ldr	r0, [sp]
   18a24:	ldr	r1, [sp]
   18a28:	lsr	r1, r1, #1
   18a2c:	add	r1, r1, #1
   18a30:	adds	r0, r0, r1
   18a34:	mov	r1, #0
   18a38:	adc	r1, r1, #0
   18a3c:	str	r0, [sp]
   18a40:	tst	r1, #1
   18a44:	beq	18a4c <__assert_fail@plt+0x7964>
   18a48:	bl	1b5a4 <__assert_fail@plt+0xa4bc>
   18a4c:	b	18a50 <__assert_fail@plt+0x7968>
   18a50:	ldr	r0, [fp, #-4]
   18a54:	ldr	r1, [sp]
   18a58:	ldr	r2, [sp, #4]
   18a5c:	bl	18754 <__assert_fail@plt+0x766c>
   18a60:	str	r0, [fp, #-4]
   18a64:	ldr	r0, [sp]
   18a68:	ldr	r1, [sp, #8]
   18a6c:	str	r0, [r1]
   18a70:	ldr	r0, [fp, #-4]
   18a74:	mov	sp, fp
   18a78:	pop	{fp, pc}
   18a7c:	push	{fp, lr}
   18a80:	mov	fp, sp
   18a84:	sub	sp, sp, #376	; 0x178
   18a88:	ldr	ip, [fp, #8]
   18a8c:	str	r0, [fp, #-4]
   18a90:	str	r1, [fp, #-8]
   18a94:	str	r2, [fp, #-12]
   18a98:	str	r3, [fp, #-16]
   18a9c:	ldr	r0, [fp, #-8]
   18aa0:	ldr	r0, [r0]
   18aa4:	str	r0, [fp, #-20]	; 0xffffffec
   18aa8:	ldr	r0, [fp, #-20]	; 0xffffffec
   18aac:	ldr	r1, [fp, #-20]	; 0xffffffec
   18ab0:	asr	r1, r1, #1
   18ab4:	add	r1, r0, r1
   18ab8:	mov	r2, #1
   18abc:	cmp	r1, r0
   18ac0:	movwvc	r2, #0
   18ac4:	str	r1, [fp, #-24]	; 0xffffffe8
   18ac8:	tst	r2, #1
   18acc:	str	ip, [fp, #-36]	; 0xffffffdc
   18ad0:	beq	18adc <__assert_fail@plt+0x79f4>
   18ad4:	ldr	r0, [pc, #4044]	; 19aa8 <__assert_fail@plt+0x89c0>
   18ad8:	str	r0, [fp, #-24]	; 0xffffffe8
   18adc:	ldr	r0, [fp, #-16]
   18ae0:	movw	r1, #0
   18ae4:	cmp	r1, r0
   18ae8:	bgt	18b04 <__assert_fail@plt+0x7a1c>
   18aec:	ldr	r0, [fp, #-16]
   18af0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18af4:	cmp	r0, r1
   18af8:	bge	18b04 <__assert_fail@plt+0x7a1c>
   18afc:	ldr	r0, [fp, #-16]
   18b00:	str	r0, [fp, #-24]	; 0xffffffe8
   18b04:	b	18edc <__assert_fail@plt+0x7df4>
   18b08:	b	18b0c <__assert_fail@plt+0x7a24>
   18b0c:	ldr	r0, [fp, #8]
   18b10:	cmp	r0, #0
   18b14:	bge	18c28 <__assert_fail@plt+0x7b40>
   18b18:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18b1c:	cmp	r0, #0
   18b20:	bge	18bac <__assert_fail@plt+0x7ac4>
   18b24:	b	18b28 <__assert_fail@plt+0x7a40>
   18b28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18b2c:	ldr	r1, [fp, #8]
   18b30:	movw	r2, #127	; 0x7f
   18b34:	sdiv	r1, r2, r1
   18b38:	cmp	r0, r1
   18b3c:	blt	18cc8 <__assert_fail@plt+0x7be0>
   18b40:	b	18ce0 <__assert_fail@plt+0x7bf8>
   18b44:	b	18b48 <__assert_fail@plt+0x7a60>
   18b48:	ldr	r0, [pc, #4076]	; 19b3c <__assert_fail@plt+0x8a54>
   18b4c:	ldr	r1, [fp, #8]
   18b50:	cmp	r1, r0
   18b54:	blt	18b6c <__assert_fail@plt+0x7a84>
   18b58:	b	18b78 <__assert_fail@plt+0x7a90>
   18b5c:	ldr	r0, [fp, #8]
   18b60:	movw	r1, #0
   18b64:	cmp	r1, r0
   18b68:	bge	18b78 <__assert_fail@plt+0x7a90>
   18b6c:	movw	r0, #0
   18b70:	str	r0, [fp, #-40]	; 0xffffffd8
   18b74:	b	18b90 <__assert_fail@plt+0x7aa8>
   18b78:	ldr	r0, [fp, #8]
   18b7c:	movw	r1, #0
   18b80:	sub	r0, r1, r0
   18b84:	movw	r1, #127	; 0x7f
   18b88:	sdiv	r0, r1, r0
   18b8c:	str	r0, [fp, #-40]	; 0xffffffd8
   18b90:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18b94:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18b98:	mvn	r2, #0
   18b9c:	sub	r1, r2, r1
   18ba0:	cmp	r0, r1
   18ba4:	ble	18cc8 <__assert_fail@plt+0x7be0>
   18ba8:	b	18ce0 <__assert_fail@plt+0x7bf8>
   18bac:	b	18bb0 <__assert_fail@plt+0x7ac8>
   18bb0:	b	18c0c <__assert_fail@plt+0x7b24>
   18bb4:	b	18c0c <__assert_fail@plt+0x7b24>
   18bb8:	ldr	r0, [fp, #8]
   18bbc:	cmn	r0, #1
   18bc0:	bne	18c0c <__assert_fail@plt+0x7b24>
   18bc4:	b	18bc8 <__assert_fail@plt+0x7ae0>
   18bc8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18bcc:	mvn	r1, #127	; 0x7f
   18bd0:	add	r0, r0, r1
   18bd4:	movw	r1, #0
   18bd8:	cmp	r1, r0
   18bdc:	blt	18cc8 <__assert_fail@plt+0x7be0>
   18be0:	b	18ce0 <__assert_fail@plt+0x7bf8>
   18be4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18be8:	movw	r1, #0
   18bec:	cmp	r1, r0
   18bf0:	bge	18ce0 <__assert_fail@plt+0x7bf8>
   18bf4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18bf8:	sub	r0, r0, #1
   18bfc:	movw	r1, #127	; 0x7f
   18c00:	cmp	r1, r0
   18c04:	blt	18cc8 <__assert_fail@plt+0x7be0>
   18c08:	b	18ce0 <__assert_fail@plt+0x7bf8>
   18c0c:	ldr	r0, [fp, #8]
   18c10:	mvn	r1, #127	; 0x7f
   18c14:	sdiv	r0, r1, r0
   18c18:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18c1c:	cmp	r0, r1
   18c20:	blt	18cc8 <__assert_fail@plt+0x7be0>
   18c24:	b	18ce0 <__assert_fail@plt+0x7bf8>
   18c28:	ldr	r0, [fp, #8]
   18c2c:	cmp	r0, #0
   18c30:	bne	18c38 <__assert_fail@plt+0x7b50>
   18c34:	b	18ce0 <__assert_fail@plt+0x7bf8>
   18c38:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18c3c:	cmp	r0, #0
   18c40:	bge	18cb0 <__assert_fail@plt+0x7bc8>
   18c44:	b	18c48 <__assert_fail@plt+0x7b60>
   18c48:	b	18c94 <__assert_fail@plt+0x7bac>
   18c4c:	b	18c94 <__assert_fail@plt+0x7bac>
   18c50:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18c54:	cmn	r0, #1
   18c58:	bne	18c94 <__assert_fail@plt+0x7bac>
   18c5c:	b	18c60 <__assert_fail@plt+0x7b78>
   18c60:	ldr	r0, [fp, #8]
   18c64:	mvn	r1, #127	; 0x7f
   18c68:	add	r0, r0, r1
   18c6c:	movw	r1, #0
   18c70:	cmp	r1, r0
   18c74:	blt	18cc8 <__assert_fail@plt+0x7be0>
   18c78:	b	18ce0 <__assert_fail@plt+0x7bf8>
   18c7c:	ldr	r0, [fp, #8]
   18c80:	sub	r0, r0, #1
   18c84:	movw	r1, #127	; 0x7f
   18c88:	cmp	r1, r0
   18c8c:	blt	18cc8 <__assert_fail@plt+0x7be0>
   18c90:	b	18ce0 <__assert_fail@plt+0x7bf8>
   18c94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18c98:	mvn	r1, #127	; 0x7f
   18c9c:	sdiv	r0, r1, r0
   18ca0:	ldr	r1, [fp, #8]
   18ca4:	cmp	r0, r1
   18ca8:	blt	18cc8 <__assert_fail@plt+0x7be0>
   18cac:	b	18ce0 <__assert_fail@plt+0x7bf8>
   18cb0:	ldr	r0, [fp, #8]
   18cb4:	movw	r1, #127	; 0x7f
   18cb8:	sdiv	r0, r1, r0
   18cbc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18cc0:	cmp	r0, r1
   18cc4:	bge	18ce0 <__assert_fail@plt+0x7bf8>
   18cc8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18ccc:	ldr	r1, [fp, #8]
   18cd0:	mul	r0, r0, r1
   18cd4:	sxtb	r0, r0
   18cd8:	str	r0, [fp, #-28]	; 0xffffffe4
   18cdc:	b	19ef4 <__assert_fail@plt+0x8e0c>
   18ce0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18ce4:	ldr	r1, [fp, #8]
   18ce8:	mul	r0, r0, r1
   18cec:	sxtb	r0, r0
   18cf0:	str	r0, [fp, #-28]	; 0xffffffe4
   18cf4:	b	19f04 <__assert_fail@plt+0x8e1c>
   18cf8:	ldr	r0, [fp, #8]
   18cfc:	cmp	r0, #0
   18d00:	bge	18e10 <__assert_fail@plt+0x7d28>
   18d04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18d08:	cmp	r0, #0
   18d0c:	bge	18d98 <__assert_fail@plt+0x7cb0>
   18d10:	b	18d14 <__assert_fail@plt+0x7c2c>
   18d14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18d18:	ldr	r1, [fp, #8]
   18d1c:	movw	r2, #255	; 0xff
   18d20:	sdiv	r1, r2, r1
   18d24:	cmp	r0, r1
   18d28:	blt	18eac <__assert_fail@plt+0x7dc4>
   18d2c:	b	18ec4 <__assert_fail@plt+0x7ddc>
   18d30:	b	18d34 <__assert_fail@plt+0x7c4c>
   18d34:	ldr	r0, [pc, #3584]	; 19b3c <__assert_fail@plt+0x8a54>
   18d38:	ldr	r1, [fp, #8]
   18d3c:	cmp	r1, r0
   18d40:	blt	18d58 <__assert_fail@plt+0x7c70>
   18d44:	b	18d64 <__assert_fail@plt+0x7c7c>
   18d48:	ldr	r0, [fp, #8]
   18d4c:	movw	r1, #0
   18d50:	cmp	r1, r0
   18d54:	bge	18d64 <__assert_fail@plt+0x7c7c>
   18d58:	movw	r0, #0
   18d5c:	str	r0, [fp, #-44]	; 0xffffffd4
   18d60:	b	18d7c <__assert_fail@plt+0x7c94>
   18d64:	ldr	r0, [fp, #8]
   18d68:	movw	r1, #0
   18d6c:	sub	r0, r1, r0
   18d70:	movw	r1, #255	; 0xff
   18d74:	sdiv	r0, r1, r0
   18d78:	str	r0, [fp, #-44]	; 0xffffffd4
   18d7c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18d80:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18d84:	mvn	r2, #0
   18d88:	sub	r1, r2, r1
   18d8c:	cmp	r0, r1
   18d90:	ble	18eac <__assert_fail@plt+0x7dc4>
   18d94:	b	18ec4 <__assert_fail@plt+0x7ddc>
   18d98:	b	18d9c <__assert_fail@plt+0x7cb4>
   18d9c:	b	18df4 <__assert_fail@plt+0x7d0c>
   18da0:	b	18df4 <__assert_fail@plt+0x7d0c>
   18da4:	ldr	r0, [fp, #8]
   18da8:	cmn	r0, #1
   18dac:	bne	18df4 <__assert_fail@plt+0x7d0c>
   18db0:	b	18db4 <__assert_fail@plt+0x7ccc>
   18db4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18db8:	add	r0, r0, #0
   18dbc:	movw	r1, #0
   18dc0:	cmp	r1, r0
   18dc4:	blt	18eac <__assert_fail@plt+0x7dc4>
   18dc8:	b	18ec4 <__assert_fail@plt+0x7ddc>
   18dcc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18dd0:	movw	r1, #0
   18dd4:	cmp	r1, r0
   18dd8:	bge	18ec4 <__assert_fail@plt+0x7ddc>
   18ddc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18de0:	sub	r0, r0, #1
   18de4:	mvn	r1, #0
   18de8:	cmp	r1, r0
   18dec:	blt	18eac <__assert_fail@plt+0x7dc4>
   18df0:	b	18ec4 <__assert_fail@plt+0x7ddc>
   18df4:	ldr	r0, [fp, #8]
   18df8:	movw	r1, #0
   18dfc:	sdiv	r0, r1, r0
   18e00:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18e04:	cmp	r0, r1
   18e08:	blt	18eac <__assert_fail@plt+0x7dc4>
   18e0c:	b	18ec4 <__assert_fail@plt+0x7ddc>
   18e10:	ldr	r0, [fp, #8]
   18e14:	cmp	r0, #0
   18e18:	bne	18e20 <__assert_fail@plt+0x7d38>
   18e1c:	b	18ec4 <__assert_fail@plt+0x7ddc>
   18e20:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18e24:	cmp	r0, #0
   18e28:	bge	18e94 <__assert_fail@plt+0x7dac>
   18e2c:	b	18e30 <__assert_fail@plt+0x7d48>
   18e30:	b	18e78 <__assert_fail@plt+0x7d90>
   18e34:	b	18e78 <__assert_fail@plt+0x7d90>
   18e38:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18e3c:	cmn	r0, #1
   18e40:	bne	18e78 <__assert_fail@plt+0x7d90>
   18e44:	b	18e48 <__assert_fail@plt+0x7d60>
   18e48:	ldr	r0, [fp, #8]
   18e4c:	add	r0, r0, #0
   18e50:	movw	r1, #0
   18e54:	cmp	r1, r0
   18e58:	blt	18eac <__assert_fail@plt+0x7dc4>
   18e5c:	b	18ec4 <__assert_fail@plt+0x7ddc>
   18e60:	ldr	r0, [fp, #8]
   18e64:	sub	r0, r0, #1
   18e68:	mvn	r1, #0
   18e6c:	cmp	r1, r0
   18e70:	blt	18eac <__assert_fail@plt+0x7dc4>
   18e74:	b	18ec4 <__assert_fail@plt+0x7ddc>
   18e78:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18e7c:	movw	r1, #0
   18e80:	sdiv	r0, r1, r0
   18e84:	ldr	r1, [fp, #8]
   18e88:	cmp	r0, r1
   18e8c:	blt	18eac <__assert_fail@plt+0x7dc4>
   18e90:	b	18ec4 <__assert_fail@plt+0x7ddc>
   18e94:	ldr	r0, [fp, #8]
   18e98:	movw	r1, #255	; 0xff
   18e9c:	sdiv	r0, r1, r0
   18ea0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18ea4:	cmp	r0, r1
   18ea8:	bge	18ec4 <__assert_fail@plt+0x7ddc>
   18eac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18eb0:	ldr	r1, [fp, #8]
   18eb4:	mul	r0, r0, r1
   18eb8:	and	r0, r0, #255	; 0xff
   18ebc:	str	r0, [fp, #-28]	; 0xffffffe4
   18ec0:	b	19ef4 <__assert_fail@plt+0x8e0c>
   18ec4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18ec8:	ldr	r1, [fp, #8]
   18ecc:	mul	r0, r0, r1
   18ed0:	and	r0, r0, #255	; 0xff
   18ed4:	str	r0, [fp, #-28]	; 0xffffffe4
   18ed8:	b	19f04 <__assert_fail@plt+0x8e1c>
   18edc:	b	192b4 <__assert_fail@plt+0x81cc>
   18ee0:	b	18ee4 <__assert_fail@plt+0x7dfc>
   18ee4:	ldr	r0, [fp, #8]
   18ee8:	cmp	r0, #0
   18eec:	bge	19000 <__assert_fail@plt+0x7f18>
   18ef0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18ef4:	cmp	r0, #0
   18ef8:	bge	18f84 <__assert_fail@plt+0x7e9c>
   18efc:	b	18f00 <__assert_fail@plt+0x7e18>
   18f00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18f04:	ldr	r1, [fp, #8]
   18f08:	movw	r2, #32767	; 0x7fff
   18f0c:	sdiv	r1, r2, r1
   18f10:	cmp	r0, r1
   18f14:	blt	190a0 <__assert_fail@plt+0x7fb8>
   18f18:	b	190b8 <__assert_fail@plt+0x7fd0>
   18f1c:	b	18f20 <__assert_fail@plt+0x7e38>
   18f20:	ldr	r0, [pc, #3092]	; 19b3c <__assert_fail@plt+0x8a54>
   18f24:	ldr	r1, [fp, #8]
   18f28:	cmp	r1, r0
   18f2c:	blt	18f44 <__assert_fail@plt+0x7e5c>
   18f30:	b	18f50 <__assert_fail@plt+0x7e68>
   18f34:	ldr	r0, [fp, #8]
   18f38:	movw	r1, #0
   18f3c:	cmp	r1, r0
   18f40:	bge	18f50 <__assert_fail@plt+0x7e68>
   18f44:	movw	r0, #0
   18f48:	str	r0, [fp, #-48]	; 0xffffffd0
   18f4c:	b	18f68 <__assert_fail@plt+0x7e80>
   18f50:	ldr	r0, [fp, #8]
   18f54:	movw	r1, #0
   18f58:	sub	r0, r1, r0
   18f5c:	movw	r1, #32767	; 0x7fff
   18f60:	sdiv	r0, r1, r0
   18f64:	str	r0, [fp, #-48]	; 0xffffffd0
   18f68:	ldr	r0, [fp, #-48]	; 0xffffffd0
   18f6c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18f70:	mvn	r2, #0
   18f74:	sub	r1, r2, r1
   18f78:	cmp	r0, r1
   18f7c:	ble	190a0 <__assert_fail@plt+0x7fb8>
   18f80:	b	190b8 <__assert_fail@plt+0x7fd0>
   18f84:	b	18f88 <__assert_fail@plt+0x7ea0>
   18f88:	b	18fe4 <__assert_fail@plt+0x7efc>
   18f8c:	b	18fe4 <__assert_fail@plt+0x7efc>
   18f90:	ldr	r0, [fp, #8]
   18f94:	cmn	r0, #1
   18f98:	bne	18fe4 <__assert_fail@plt+0x7efc>
   18f9c:	b	18fa0 <__assert_fail@plt+0x7eb8>
   18fa0:	ldr	r0, [pc, #3928]	; 19f00 <__assert_fail@plt+0x8e18>
   18fa4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18fa8:	add	r0, r1, r0
   18fac:	movw	r1, #0
   18fb0:	cmp	r1, r0
   18fb4:	blt	190a0 <__assert_fail@plt+0x7fb8>
   18fb8:	b	190b8 <__assert_fail@plt+0x7fd0>
   18fbc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18fc0:	movw	r1, #0
   18fc4:	cmp	r1, r0
   18fc8:	bge	190b8 <__assert_fail@plt+0x7fd0>
   18fcc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18fd0:	sub	r0, r0, #1
   18fd4:	movw	r1, #32767	; 0x7fff
   18fd8:	cmp	r1, r0
   18fdc:	blt	190a0 <__assert_fail@plt+0x7fb8>
   18fe0:	b	190b8 <__assert_fail@plt+0x7fd0>
   18fe4:	ldr	r0, [pc, #3860]	; 19f00 <__assert_fail@plt+0x8e18>
   18fe8:	ldr	r1, [fp, #8]
   18fec:	sdiv	r0, r0, r1
   18ff0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18ff4:	cmp	r0, r1
   18ff8:	blt	190a0 <__assert_fail@plt+0x7fb8>
   18ffc:	b	190b8 <__assert_fail@plt+0x7fd0>
   19000:	ldr	r0, [fp, #8]
   19004:	cmp	r0, #0
   19008:	bne	19010 <__assert_fail@plt+0x7f28>
   1900c:	b	190b8 <__assert_fail@plt+0x7fd0>
   19010:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19014:	cmp	r0, #0
   19018:	bge	19088 <__assert_fail@plt+0x7fa0>
   1901c:	b	19020 <__assert_fail@plt+0x7f38>
   19020:	b	1906c <__assert_fail@plt+0x7f84>
   19024:	b	1906c <__assert_fail@plt+0x7f84>
   19028:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1902c:	cmn	r0, #1
   19030:	bne	1906c <__assert_fail@plt+0x7f84>
   19034:	b	19038 <__assert_fail@plt+0x7f50>
   19038:	ldr	r0, [pc, #3776]	; 19f00 <__assert_fail@plt+0x8e18>
   1903c:	ldr	r1, [fp, #8]
   19040:	add	r0, r1, r0
   19044:	movw	r1, #0
   19048:	cmp	r1, r0
   1904c:	blt	190a0 <__assert_fail@plt+0x7fb8>
   19050:	b	190b8 <__assert_fail@plt+0x7fd0>
   19054:	ldr	r0, [fp, #8]
   19058:	sub	r0, r0, #1
   1905c:	movw	r1, #32767	; 0x7fff
   19060:	cmp	r1, r0
   19064:	blt	190a0 <__assert_fail@plt+0x7fb8>
   19068:	b	190b8 <__assert_fail@plt+0x7fd0>
   1906c:	ldr	r0, [pc, #3724]	; 19f00 <__assert_fail@plt+0x8e18>
   19070:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19074:	sdiv	r0, r0, r1
   19078:	ldr	r1, [fp, #8]
   1907c:	cmp	r0, r1
   19080:	blt	190a0 <__assert_fail@plt+0x7fb8>
   19084:	b	190b8 <__assert_fail@plt+0x7fd0>
   19088:	ldr	r0, [fp, #8]
   1908c:	movw	r1, #32767	; 0x7fff
   19090:	sdiv	r0, r1, r0
   19094:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19098:	cmp	r0, r1
   1909c:	bge	190b8 <__assert_fail@plt+0x7fd0>
   190a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   190a4:	ldr	r1, [fp, #8]
   190a8:	mul	r0, r0, r1
   190ac:	sxth	r0, r0
   190b0:	str	r0, [fp, #-28]	; 0xffffffe4
   190b4:	b	19ef4 <__assert_fail@plt+0x8e0c>
   190b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   190bc:	ldr	r1, [fp, #8]
   190c0:	mul	r0, r0, r1
   190c4:	sxth	r0, r0
   190c8:	str	r0, [fp, #-28]	; 0xffffffe4
   190cc:	b	19f04 <__assert_fail@plt+0x8e1c>
   190d0:	ldr	r0, [fp, #8]
   190d4:	cmp	r0, #0
   190d8:	bge	191e8 <__assert_fail@plt+0x8100>
   190dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   190e0:	cmp	r0, #0
   190e4:	bge	19170 <__assert_fail@plt+0x8088>
   190e8:	b	190ec <__assert_fail@plt+0x8004>
   190ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   190f0:	ldr	r1, [fp, #8]
   190f4:	movw	r2, #65535	; 0xffff
   190f8:	sdiv	r1, r2, r1
   190fc:	cmp	r0, r1
   19100:	blt	19284 <__assert_fail@plt+0x819c>
   19104:	b	1929c <__assert_fail@plt+0x81b4>
   19108:	b	1910c <__assert_fail@plt+0x8024>
   1910c:	ldr	r0, [pc, #2600]	; 19b3c <__assert_fail@plt+0x8a54>
   19110:	ldr	r1, [fp, #8]
   19114:	cmp	r1, r0
   19118:	blt	19130 <__assert_fail@plt+0x8048>
   1911c:	b	1913c <__assert_fail@plt+0x8054>
   19120:	ldr	r0, [fp, #8]
   19124:	movw	r1, #0
   19128:	cmp	r1, r0
   1912c:	bge	1913c <__assert_fail@plt+0x8054>
   19130:	movw	r0, #0
   19134:	str	r0, [fp, #-52]	; 0xffffffcc
   19138:	b	19154 <__assert_fail@plt+0x806c>
   1913c:	ldr	r0, [fp, #8]
   19140:	movw	r1, #0
   19144:	sub	r0, r1, r0
   19148:	movw	r1, #65535	; 0xffff
   1914c:	sdiv	r0, r1, r0
   19150:	str	r0, [fp, #-52]	; 0xffffffcc
   19154:	ldr	r0, [fp, #-52]	; 0xffffffcc
   19158:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1915c:	mvn	r2, #0
   19160:	sub	r1, r2, r1
   19164:	cmp	r0, r1
   19168:	ble	19284 <__assert_fail@plt+0x819c>
   1916c:	b	1929c <__assert_fail@plt+0x81b4>
   19170:	b	19174 <__assert_fail@plt+0x808c>
   19174:	b	191cc <__assert_fail@plt+0x80e4>
   19178:	b	191cc <__assert_fail@plt+0x80e4>
   1917c:	ldr	r0, [fp, #8]
   19180:	cmn	r0, #1
   19184:	bne	191cc <__assert_fail@plt+0x80e4>
   19188:	b	1918c <__assert_fail@plt+0x80a4>
   1918c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19190:	add	r0, r0, #0
   19194:	movw	r1, #0
   19198:	cmp	r1, r0
   1919c:	blt	19284 <__assert_fail@plt+0x819c>
   191a0:	b	1929c <__assert_fail@plt+0x81b4>
   191a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   191a8:	movw	r1, #0
   191ac:	cmp	r1, r0
   191b0:	bge	1929c <__assert_fail@plt+0x81b4>
   191b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   191b8:	sub	r0, r0, #1
   191bc:	mvn	r1, #0
   191c0:	cmp	r1, r0
   191c4:	blt	19284 <__assert_fail@plt+0x819c>
   191c8:	b	1929c <__assert_fail@plt+0x81b4>
   191cc:	ldr	r0, [fp, #8]
   191d0:	movw	r1, #0
   191d4:	sdiv	r0, r1, r0
   191d8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   191dc:	cmp	r0, r1
   191e0:	blt	19284 <__assert_fail@plt+0x819c>
   191e4:	b	1929c <__assert_fail@plt+0x81b4>
   191e8:	ldr	r0, [fp, #8]
   191ec:	cmp	r0, #0
   191f0:	bne	191f8 <__assert_fail@plt+0x8110>
   191f4:	b	1929c <__assert_fail@plt+0x81b4>
   191f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   191fc:	cmp	r0, #0
   19200:	bge	1926c <__assert_fail@plt+0x8184>
   19204:	b	19208 <__assert_fail@plt+0x8120>
   19208:	b	19250 <__assert_fail@plt+0x8168>
   1920c:	b	19250 <__assert_fail@plt+0x8168>
   19210:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19214:	cmn	r0, #1
   19218:	bne	19250 <__assert_fail@plt+0x8168>
   1921c:	b	19220 <__assert_fail@plt+0x8138>
   19220:	ldr	r0, [fp, #8]
   19224:	add	r0, r0, #0
   19228:	movw	r1, #0
   1922c:	cmp	r1, r0
   19230:	blt	19284 <__assert_fail@plt+0x819c>
   19234:	b	1929c <__assert_fail@plt+0x81b4>
   19238:	ldr	r0, [fp, #8]
   1923c:	sub	r0, r0, #1
   19240:	mvn	r1, #0
   19244:	cmp	r1, r0
   19248:	blt	19284 <__assert_fail@plt+0x819c>
   1924c:	b	1929c <__assert_fail@plt+0x81b4>
   19250:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19254:	movw	r1, #0
   19258:	sdiv	r0, r1, r0
   1925c:	ldr	r1, [fp, #8]
   19260:	cmp	r0, r1
   19264:	blt	19284 <__assert_fail@plt+0x819c>
   19268:	b	1929c <__assert_fail@plt+0x81b4>
   1926c:	ldr	r0, [fp, #8]
   19270:	movw	r1, #65535	; 0xffff
   19274:	sdiv	r0, r1, r0
   19278:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1927c:	cmp	r0, r1
   19280:	bge	1929c <__assert_fail@plt+0x81b4>
   19284:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19288:	ldr	r1, [fp, #8]
   1928c:	mul	r0, r0, r1
   19290:	uxth	r0, r0
   19294:	str	r0, [fp, #-28]	; 0xffffffe4
   19298:	b	19ef4 <__assert_fail@plt+0x8e0c>
   1929c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   192a0:	ldr	r1, [fp, #8]
   192a4:	mul	r0, r0, r1
   192a8:	uxth	r0, r0
   192ac:	str	r0, [fp, #-28]	; 0xffffffe4
   192b0:	b	19f04 <__assert_fail@plt+0x8e1c>
   192b4:	b	192b8 <__assert_fail@plt+0x81d0>
   192b8:	b	192bc <__assert_fail@plt+0x81d4>
   192bc:	ldr	r0, [fp, #8]
   192c0:	cmp	r0, #0
   192c4:	bge	193c8 <__assert_fail@plt+0x82e0>
   192c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   192cc:	cmp	r0, #0
   192d0:	bge	1935c <__assert_fail@plt+0x8274>
   192d4:	b	192d8 <__assert_fail@plt+0x81f0>
   192d8:	ldr	r0, [pc, #1992]	; 19aa8 <__assert_fail@plt+0x89c0>
   192dc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   192e0:	ldr	r2, [fp, #8]
   192e4:	sdiv	r0, r0, r2
   192e8:	cmp	r1, r0
   192ec:	blt	19458 <__assert_fail@plt+0x8370>
   192f0:	b	1946c <__assert_fail@plt+0x8384>
   192f4:	b	192f8 <__assert_fail@plt+0x8210>
   192f8:	ldr	r0, [pc, #2108]	; 19b3c <__assert_fail@plt+0x8a54>
   192fc:	ldr	r1, [fp, #8]
   19300:	cmp	r1, r0
   19304:	blt	1931c <__assert_fail@plt+0x8234>
   19308:	b	19328 <__assert_fail@plt+0x8240>
   1930c:	ldr	r0, [fp, #8]
   19310:	movw	r1, #0
   19314:	cmp	r1, r0
   19318:	bge	19328 <__assert_fail@plt+0x8240>
   1931c:	movw	r0, #0
   19320:	str	r0, [fp, #-56]	; 0xffffffc8
   19324:	b	19340 <__assert_fail@plt+0x8258>
   19328:	ldr	r0, [pc, #1912]	; 19aa8 <__assert_fail@plt+0x89c0>
   1932c:	ldr	r1, [fp, #8]
   19330:	movw	r2, #0
   19334:	sub	r1, r2, r1
   19338:	sdiv	r0, r0, r1
   1933c:	str	r0, [fp, #-56]	; 0xffffffc8
   19340:	ldr	r0, [fp, #-56]	; 0xffffffc8
   19344:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19348:	mvn	r2, #0
   1934c:	sub	r1, r2, r1
   19350:	cmp	r0, r1
   19354:	ble	19458 <__assert_fail@plt+0x8370>
   19358:	b	1946c <__assert_fail@plt+0x8384>
   1935c:	ldr	r0, [fp, #8]
   19360:	cmn	r0, #1
   19364:	bne	193ac <__assert_fail@plt+0x82c4>
   19368:	b	1936c <__assert_fail@plt+0x8284>
   1936c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19370:	add	r0, r0, #-2147483648	; 0x80000000
   19374:	movw	r1, #0
   19378:	cmp	r1, r0
   1937c:	blt	19458 <__assert_fail@plt+0x8370>
   19380:	b	1946c <__assert_fail@plt+0x8384>
   19384:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19388:	movw	r1, #0
   1938c:	cmp	r1, r0
   19390:	bge	1946c <__assert_fail@plt+0x8384>
   19394:	ldr	r0, [pc, #1804]	; 19aa8 <__assert_fail@plt+0x89c0>
   19398:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1939c:	sub	r1, r1, #1
   193a0:	cmp	r0, r1
   193a4:	blt	19458 <__assert_fail@plt+0x8370>
   193a8:	b	1946c <__assert_fail@plt+0x8384>
   193ac:	ldr	r0, [pc, #4072]	; 1a39c <__assert_fail@plt+0x92b4>
   193b0:	ldr	r1, [fp, #8]
   193b4:	sdiv	r0, r0, r1
   193b8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   193bc:	cmp	r0, r1
   193c0:	blt	19458 <__assert_fail@plt+0x8370>
   193c4:	b	1946c <__assert_fail@plt+0x8384>
   193c8:	ldr	r0, [fp, #8]
   193cc:	cmp	r0, #0
   193d0:	bne	193d8 <__assert_fail@plt+0x82f0>
   193d4:	b	1946c <__assert_fail@plt+0x8384>
   193d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   193dc:	cmp	r0, #0
   193e0:	bge	19440 <__assert_fail@plt+0x8358>
   193e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   193e8:	cmn	r0, #1
   193ec:	bne	19424 <__assert_fail@plt+0x833c>
   193f0:	b	193f4 <__assert_fail@plt+0x830c>
   193f4:	ldr	r0, [fp, #8]
   193f8:	add	r0, r0, #-2147483648	; 0x80000000
   193fc:	movw	r1, #0
   19400:	cmp	r1, r0
   19404:	blt	19458 <__assert_fail@plt+0x8370>
   19408:	b	1946c <__assert_fail@plt+0x8384>
   1940c:	ldr	r0, [pc, #1684]	; 19aa8 <__assert_fail@plt+0x89c0>
   19410:	ldr	r1, [fp, #8]
   19414:	sub	r1, r1, #1
   19418:	cmp	r0, r1
   1941c:	blt	19458 <__assert_fail@plt+0x8370>
   19420:	b	1946c <__assert_fail@plt+0x8384>
   19424:	ldr	r0, [pc, #3952]	; 1a39c <__assert_fail@plt+0x92b4>
   19428:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1942c:	sdiv	r0, r0, r1
   19430:	ldr	r1, [fp, #8]
   19434:	cmp	r0, r1
   19438:	blt	19458 <__assert_fail@plt+0x8370>
   1943c:	b	1946c <__assert_fail@plt+0x8384>
   19440:	ldr	r0, [pc, #1632]	; 19aa8 <__assert_fail@plt+0x89c0>
   19444:	ldr	r1, [fp, #8]
   19448:	sdiv	r0, r0, r1
   1944c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19450:	cmp	r0, r1
   19454:	bge	1946c <__assert_fail@plt+0x8384>
   19458:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1945c:	ldr	r1, [fp, #8]
   19460:	mul	r0, r0, r1
   19464:	str	r0, [fp, #-28]	; 0xffffffe4
   19468:	b	19ef4 <__assert_fail@plt+0x8e0c>
   1946c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19470:	ldr	r1, [fp, #8]
   19474:	mul	r0, r0, r1
   19478:	str	r0, [fp, #-28]	; 0xffffffe4
   1947c:	b	19f04 <__assert_fail@plt+0x8e1c>
   19480:	ldr	r0, [fp, #8]
   19484:	cmp	r0, #0
   19488:	bge	19598 <__assert_fail@plt+0x84b0>
   1948c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19490:	cmp	r0, #0
   19494:	bge	19520 <__assert_fail@plt+0x8438>
   19498:	b	194b8 <__assert_fail@plt+0x83d0>
   1949c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   194a0:	ldr	r1, [fp, #8]
   194a4:	mvn	r2, #0
   194a8:	udiv	r1, r2, r1
   194ac:	cmp	r0, r1
   194b0:	bcc	19634 <__assert_fail@plt+0x854c>
   194b4:	b	19648 <__assert_fail@plt+0x8560>
   194b8:	b	194bc <__assert_fail@plt+0x83d4>
   194bc:	ldr	r0, [pc, #1656]	; 19b3c <__assert_fail@plt+0x8a54>
   194c0:	ldr	r1, [fp, #8]
   194c4:	cmp	r1, r0
   194c8:	blt	194e0 <__assert_fail@plt+0x83f8>
   194cc:	b	194ec <__assert_fail@plt+0x8404>
   194d0:	ldr	r0, [fp, #8]
   194d4:	movw	r1, #0
   194d8:	cmp	r1, r0
   194dc:	bge	194ec <__assert_fail@plt+0x8404>
   194e0:	movw	r0, #1
   194e4:	str	r0, [fp, #-60]	; 0xffffffc4
   194e8:	b	19504 <__assert_fail@plt+0x841c>
   194ec:	ldr	r0, [fp, #8]
   194f0:	movw	r1, #0
   194f4:	sub	r0, r1, r0
   194f8:	mvn	r1, #0
   194fc:	udiv	r0, r1, r0
   19500:	str	r0, [fp, #-60]	; 0xffffffc4
   19504:	ldr	r0, [fp, #-60]	; 0xffffffc4
   19508:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1950c:	mvn	r2, #0
   19510:	sub	r1, r2, r1
   19514:	cmp	r0, r1
   19518:	bls	19634 <__assert_fail@plt+0x854c>
   1951c:	b	19648 <__assert_fail@plt+0x8560>
   19520:	b	19524 <__assert_fail@plt+0x843c>
   19524:	b	1957c <__assert_fail@plt+0x8494>
   19528:	b	1957c <__assert_fail@plt+0x8494>
   1952c:	ldr	r0, [fp, #8]
   19530:	cmn	r0, #1
   19534:	bne	1957c <__assert_fail@plt+0x8494>
   19538:	b	1953c <__assert_fail@plt+0x8454>
   1953c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19540:	add	r0, r0, #0
   19544:	movw	r1, #0
   19548:	cmp	r1, r0
   1954c:	blt	19634 <__assert_fail@plt+0x854c>
   19550:	b	19648 <__assert_fail@plt+0x8560>
   19554:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19558:	movw	r1, #0
   1955c:	cmp	r1, r0
   19560:	bge	19648 <__assert_fail@plt+0x8560>
   19564:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19568:	sub	r0, r0, #1
   1956c:	mvn	r1, #0
   19570:	cmp	r1, r0
   19574:	blt	19634 <__assert_fail@plt+0x854c>
   19578:	b	19648 <__assert_fail@plt+0x8560>
   1957c:	ldr	r0, [fp, #8]
   19580:	movw	r1, #0
   19584:	sdiv	r0, r1, r0
   19588:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1958c:	cmp	r0, r1
   19590:	blt	19634 <__assert_fail@plt+0x854c>
   19594:	b	19648 <__assert_fail@plt+0x8560>
   19598:	ldr	r0, [fp, #8]
   1959c:	cmp	r0, #0
   195a0:	bne	195a8 <__assert_fail@plt+0x84c0>
   195a4:	b	19648 <__assert_fail@plt+0x8560>
   195a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   195ac:	cmp	r0, #0
   195b0:	bge	1961c <__assert_fail@plt+0x8534>
   195b4:	b	195b8 <__assert_fail@plt+0x84d0>
   195b8:	b	19600 <__assert_fail@plt+0x8518>
   195bc:	b	19600 <__assert_fail@plt+0x8518>
   195c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   195c4:	cmn	r0, #1
   195c8:	bne	19600 <__assert_fail@plt+0x8518>
   195cc:	b	195d0 <__assert_fail@plt+0x84e8>
   195d0:	ldr	r0, [fp, #8]
   195d4:	add	r0, r0, #0
   195d8:	movw	r1, #0
   195dc:	cmp	r1, r0
   195e0:	blt	19634 <__assert_fail@plt+0x854c>
   195e4:	b	19648 <__assert_fail@plt+0x8560>
   195e8:	ldr	r0, [fp, #8]
   195ec:	sub	r0, r0, #1
   195f0:	mvn	r1, #0
   195f4:	cmp	r1, r0
   195f8:	blt	19634 <__assert_fail@plt+0x854c>
   195fc:	b	19648 <__assert_fail@plt+0x8560>
   19600:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19604:	movw	r1, #0
   19608:	sdiv	r0, r1, r0
   1960c:	ldr	r1, [fp, #8]
   19610:	cmp	r0, r1
   19614:	blt	19634 <__assert_fail@plt+0x854c>
   19618:	b	19648 <__assert_fail@plt+0x8560>
   1961c:	ldr	r0, [fp, #8]
   19620:	mvn	r1, #0
   19624:	udiv	r0, r1, r0
   19628:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1962c:	cmp	r0, r1
   19630:	bcs	19648 <__assert_fail@plt+0x8560>
   19634:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19638:	ldr	r1, [fp, #8]
   1963c:	mul	r0, r0, r1
   19640:	str	r0, [fp, #-28]	; 0xffffffe4
   19644:	b	19ef4 <__assert_fail@plt+0x8e0c>
   19648:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1964c:	ldr	r1, [fp, #8]
   19650:	mul	r0, r0, r1
   19654:	str	r0, [fp, #-28]	; 0xffffffe4
   19658:	b	19f04 <__assert_fail@plt+0x8e1c>
   1965c:	b	19660 <__assert_fail@plt+0x8578>
   19660:	b	19664 <__assert_fail@plt+0x857c>
   19664:	ldr	r0, [fp, #8]
   19668:	cmp	r0, #0
   1966c:	bge	19770 <__assert_fail@plt+0x8688>
   19670:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19674:	cmp	r0, #0
   19678:	bge	19704 <__assert_fail@plt+0x861c>
   1967c:	b	19680 <__assert_fail@plt+0x8598>
   19680:	ldr	r0, [pc, #1056]	; 19aa8 <__assert_fail@plt+0x89c0>
   19684:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19688:	ldr	r2, [fp, #8]
   1968c:	sdiv	r0, r0, r2
   19690:	cmp	r1, r0
   19694:	blt	19800 <__assert_fail@plt+0x8718>
   19698:	b	19814 <__assert_fail@plt+0x872c>
   1969c:	b	196a0 <__assert_fail@plt+0x85b8>
   196a0:	ldr	r0, [pc, #1172]	; 19b3c <__assert_fail@plt+0x8a54>
   196a4:	ldr	r1, [fp, #8]
   196a8:	cmp	r1, r0
   196ac:	blt	196c4 <__assert_fail@plt+0x85dc>
   196b0:	b	196d0 <__assert_fail@plt+0x85e8>
   196b4:	ldr	r0, [fp, #8]
   196b8:	movw	r1, #0
   196bc:	cmp	r1, r0
   196c0:	bge	196d0 <__assert_fail@plt+0x85e8>
   196c4:	movw	r0, #0
   196c8:	str	r0, [fp, #-64]	; 0xffffffc0
   196cc:	b	196e8 <__assert_fail@plt+0x8600>
   196d0:	ldr	r0, [pc, #976]	; 19aa8 <__assert_fail@plt+0x89c0>
   196d4:	ldr	r1, [fp, #8]
   196d8:	movw	r2, #0
   196dc:	sub	r1, r2, r1
   196e0:	sdiv	r0, r0, r1
   196e4:	str	r0, [fp, #-64]	; 0xffffffc0
   196e8:	ldr	r0, [fp, #-64]	; 0xffffffc0
   196ec:	ldr	r1, [fp, #-24]	; 0xffffffe8
   196f0:	mvn	r2, #0
   196f4:	sub	r1, r2, r1
   196f8:	cmp	r0, r1
   196fc:	ble	19800 <__assert_fail@plt+0x8718>
   19700:	b	19814 <__assert_fail@plt+0x872c>
   19704:	ldr	r0, [fp, #8]
   19708:	cmn	r0, #1
   1970c:	bne	19754 <__assert_fail@plt+0x866c>
   19710:	b	19714 <__assert_fail@plt+0x862c>
   19714:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19718:	add	r0, r0, #-2147483648	; 0x80000000
   1971c:	movw	r1, #0
   19720:	cmp	r1, r0
   19724:	blt	19800 <__assert_fail@plt+0x8718>
   19728:	b	19814 <__assert_fail@plt+0x872c>
   1972c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19730:	movw	r1, #0
   19734:	cmp	r1, r0
   19738:	bge	19814 <__assert_fail@plt+0x872c>
   1973c:	ldr	r0, [pc, #868]	; 19aa8 <__assert_fail@plt+0x89c0>
   19740:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19744:	sub	r1, r1, #1
   19748:	cmp	r0, r1
   1974c:	blt	19800 <__assert_fail@plt+0x8718>
   19750:	b	19814 <__assert_fail@plt+0x872c>
   19754:	ldr	r0, [pc, #3136]	; 1a39c <__assert_fail@plt+0x92b4>
   19758:	ldr	r1, [fp, #8]
   1975c:	sdiv	r0, r0, r1
   19760:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19764:	cmp	r0, r1
   19768:	blt	19800 <__assert_fail@plt+0x8718>
   1976c:	b	19814 <__assert_fail@plt+0x872c>
   19770:	ldr	r0, [fp, #8]
   19774:	cmp	r0, #0
   19778:	bne	19780 <__assert_fail@plt+0x8698>
   1977c:	b	19814 <__assert_fail@plt+0x872c>
   19780:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19784:	cmp	r0, #0
   19788:	bge	197e8 <__assert_fail@plt+0x8700>
   1978c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19790:	cmn	r0, #1
   19794:	bne	197cc <__assert_fail@plt+0x86e4>
   19798:	b	1979c <__assert_fail@plt+0x86b4>
   1979c:	ldr	r0, [fp, #8]
   197a0:	add	r0, r0, #-2147483648	; 0x80000000
   197a4:	movw	r1, #0
   197a8:	cmp	r1, r0
   197ac:	blt	19800 <__assert_fail@plt+0x8718>
   197b0:	b	19814 <__assert_fail@plt+0x872c>
   197b4:	ldr	r0, [pc, #748]	; 19aa8 <__assert_fail@plt+0x89c0>
   197b8:	ldr	r1, [fp, #8]
   197bc:	sub	r1, r1, #1
   197c0:	cmp	r0, r1
   197c4:	blt	19800 <__assert_fail@plt+0x8718>
   197c8:	b	19814 <__assert_fail@plt+0x872c>
   197cc:	ldr	r0, [pc, #3016]	; 1a39c <__assert_fail@plt+0x92b4>
   197d0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   197d4:	sdiv	r0, r0, r1
   197d8:	ldr	r1, [fp, #8]
   197dc:	cmp	r0, r1
   197e0:	blt	19800 <__assert_fail@plt+0x8718>
   197e4:	b	19814 <__assert_fail@plt+0x872c>
   197e8:	ldr	r0, [pc, #696]	; 19aa8 <__assert_fail@plt+0x89c0>
   197ec:	ldr	r1, [fp, #8]
   197f0:	sdiv	r0, r0, r1
   197f4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   197f8:	cmp	r0, r1
   197fc:	bge	19814 <__assert_fail@plt+0x872c>
   19800:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19804:	ldr	r1, [fp, #8]
   19808:	mul	r0, r0, r1
   1980c:	str	r0, [fp, #-28]	; 0xffffffe4
   19810:	b	19ef4 <__assert_fail@plt+0x8e0c>
   19814:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19818:	ldr	r1, [fp, #8]
   1981c:	mul	r0, r0, r1
   19820:	str	r0, [fp, #-28]	; 0xffffffe4
   19824:	b	19f04 <__assert_fail@plt+0x8e1c>
   19828:	ldr	r0, [fp, #8]
   1982c:	cmp	r0, #0
   19830:	bge	19940 <__assert_fail@plt+0x8858>
   19834:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19838:	cmp	r0, #0
   1983c:	bge	198c8 <__assert_fail@plt+0x87e0>
   19840:	b	19860 <__assert_fail@plt+0x8778>
   19844:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19848:	ldr	r1, [fp, #8]
   1984c:	mvn	r2, #0
   19850:	udiv	r1, r2, r1
   19854:	cmp	r0, r1
   19858:	bcc	199dc <__assert_fail@plt+0x88f4>
   1985c:	b	199f0 <__assert_fail@plt+0x8908>
   19860:	b	19864 <__assert_fail@plt+0x877c>
   19864:	ldr	r0, [pc, #720]	; 19b3c <__assert_fail@plt+0x8a54>
   19868:	ldr	r1, [fp, #8]
   1986c:	cmp	r1, r0
   19870:	blt	19888 <__assert_fail@plt+0x87a0>
   19874:	b	19894 <__assert_fail@plt+0x87ac>
   19878:	ldr	r0, [fp, #8]
   1987c:	movw	r1, #0
   19880:	cmp	r1, r0
   19884:	bge	19894 <__assert_fail@plt+0x87ac>
   19888:	movw	r0, #1
   1988c:	str	r0, [fp, #-68]	; 0xffffffbc
   19890:	b	198ac <__assert_fail@plt+0x87c4>
   19894:	ldr	r0, [fp, #8]
   19898:	movw	r1, #0
   1989c:	sub	r0, r1, r0
   198a0:	mvn	r1, #0
   198a4:	udiv	r0, r1, r0
   198a8:	str	r0, [fp, #-68]	; 0xffffffbc
   198ac:	ldr	r0, [fp, #-68]	; 0xffffffbc
   198b0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   198b4:	mvn	r2, #0
   198b8:	sub	r1, r2, r1
   198bc:	cmp	r0, r1
   198c0:	bls	199dc <__assert_fail@plt+0x88f4>
   198c4:	b	199f0 <__assert_fail@plt+0x8908>
   198c8:	b	198cc <__assert_fail@plt+0x87e4>
   198cc:	b	19924 <__assert_fail@plt+0x883c>
   198d0:	b	19924 <__assert_fail@plt+0x883c>
   198d4:	ldr	r0, [fp, #8]
   198d8:	cmn	r0, #1
   198dc:	bne	19924 <__assert_fail@plt+0x883c>
   198e0:	b	198e4 <__assert_fail@plt+0x87fc>
   198e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   198e8:	add	r0, r0, #0
   198ec:	movw	r1, #0
   198f0:	cmp	r1, r0
   198f4:	blt	199dc <__assert_fail@plt+0x88f4>
   198f8:	b	199f0 <__assert_fail@plt+0x8908>
   198fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19900:	movw	r1, #0
   19904:	cmp	r1, r0
   19908:	bge	199f0 <__assert_fail@plt+0x8908>
   1990c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19910:	sub	r0, r0, #1
   19914:	mvn	r1, #0
   19918:	cmp	r1, r0
   1991c:	blt	199dc <__assert_fail@plt+0x88f4>
   19920:	b	199f0 <__assert_fail@plt+0x8908>
   19924:	ldr	r0, [fp, #8]
   19928:	movw	r1, #0
   1992c:	sdiv	r0, r1, r0
   19930:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19934:	cmp	r0, r1
   19938:	blt	199dc <__assert_fail@plt+0x88f4>
   1993c:	b	199f0 <__assert_fail@plt+0x8908>
   19940:	ldr	r0, [fp, #8]
   19944:	cmp	r0, #0
   19948:	bne	19950 <__assert_fail@plt+0x8868>
   1994c:	b	199f0 <__assert_fail@plt+0x8908>
   19950:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19954:	cmp	r0, #0
   19958:	bge	199c4 <__assert_fail@plt+0x88dc>
   1995c:	b	19960 <__assert_fail@plt+0x8878>
   19960:	b	199a8 <__assert_fail@plt+0x88c0>
   19964:	b	199a8 <__assert_fail@plt+0x88c0>
   19968:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1996c:	cmn	r0, #1
   19970:	bne	199a8 <__assert_fail@plt+0x88c0>
   19974:	b	19978 <__assert_fail@plt+0x8890>
   19978:	ldr	r0, [fp, #8]
   1997c:	add	r0, r0, #0
   19980:	movw	r1, #0
   19984:	cmp	r1, r0
   19988:	blt	199dc <__assert_fail@plt+0x88f4>
   1998c:	b	199f0 <__assert_fail@plt+0x8908>
   19990:	ldr	r0, [fp, #8]
   19994:	sub	r0, r0, #1
   19998:	mvn	r1, #0
   1999c:	cmp	r1, r0
   199a0:	blt	199dc <__assert_fail@plt+0x88f4>
   199a4:	b	199f0 <__assert_fail@plt+0x8908>
   199a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   199ac:	movw	r1, #0
   199b0:	sdiv	r0, r1, r0
   199b4:	ldr	r1, [fp, #8]
   199b8:	cmp	r0, r1
   199bc:	blt	199dc <__assert_fail@plt+0x88f4>
   199c0:	b	199f0 <__assert_fail@plt+0x8908>
   199c4:	ldr	r0, [fp, #8]
   199c8:	mvn	r1, #0
   199cc:	udiv	r0, r1, r0
   199d0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   199d4:	cmp	r0, r1
   199d8:	bcs	199f0 <__assert_fail@plt+0x8908>
   199dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   199e0:	ldr	r1, [fp, #8]
   199e4:	mul	r0, r0, r1
   199e8:	str	r0, [fp, #-28]	; 0xffffffe4
   199ec:	b	19ef4 <__assert_fail@plt+0x8e0c>
   199f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   199f4:	ldr	r1, [fp, #8]
   199f8:	mul	r0, r0, r1
   199fc:	str	r0, [fp, #-28]	; 0xffffffe4
   19a00:	b	19f04 <__assert_fail@plt+0x8e1c>
   19a04:	b	19a08 <__assert_fail@plt+0x8920>
   19a08:	ldr	r0, [fp, #8]
   19a0c:	cmp	r0, #0
   19a10:	bge	19ba0 <__assert_fail@plt+0x8ab8>
   19a14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19a18:	cmp	r0, #0
   19a1c:	bge	19b08 <__assert_fail@plt+0x8a20>
   19a20:	b	19a24 <__assert_fail@plt+0x893c>
   19a24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19a28:	ldr	r1, [fp, #8]
   19a2c:	asr	r3, r1, #31
   19a30:	mvn	r2, #0
   19a34:	mvn	ip, #-2147483648	; 0x80000000
   19a38:	str	r0, [fp, #-72]	; 0xffffffb8
   19a3c:	mov	r0, r2
   19a40:	str	r1, [fp, #-76]	; 0xffffffb4
   19a44:	mov	r1, ip
   19a48:	ldr	r2, [fp, #-76]	; 0xffffffb4
   19a4c:	bl	1e61c <__assert_fail@plt+0xd534>
   19a50:	ldr	r2, [fp, #-72]	; 0xffffffb8
   19a54:	subs	r0, r2, r0
   19a58:	rscs	r1, r1, r2, asr #31
   19a5c:	str	r0, [fp, #-80]	; 0xffffffb0
   19a60:	str	r1, [fp, #-84]	; 0xffffffac
   19a64:	blt	19c80 <__assert_fail@plt+0x8b98>
   19a68:	b	19c94 <__assert_fail@plt+0x8bac>
   19a6c:	b	19a70 <__assert_fail@plt+0x8988>
   19a70:	ldr	r0, [pc, #196]	; 19b3c <__assert_fail@plt+0x8a54>
   19a74:	ldr	r1, [fp, #8]
   19a78:	cmp	r1, r0
   19a7c:	blt	19a94 <__assert_fail@plt+0x89ac>
   19a80:	b	19aac <__assert_fail@plt+0x89c4>
   19a84:	ldr	r0, [fp, #8]
   19a88:	movw	r1, #0
   19a8c:	cmp	r1, r0
   19a90:	bge	19aac <__assert_fail@plt+0x89c4>
   19a94:	mov	r0, #0
   19a98:	mvn	r1, #0
   19a9c:	str	r1, [fp, #-88]	; 0xffffffa8
   19aa0:	str	r0, [fp, #-92]	; 0xffffffa4
   19aa4:	b	19ae0 <__assert_fail@plt+0x89f8>
   19aa8:	svcvc	0x00ffffff
   19aac:	ldr	r0, [fp, #8]
   19ab0:	rsb	r0, r0, #0
   19ab4:	asr	r3, r0, #31
   19ab8:	mvn	r1, #0
   19abc:	mvn	r2, #-2147483648	; 0x80000000
   19ac0:	str	r0, [fp, #-96]	; 0xffffffa0
   19ac4:	mov	r0, r1
   19ac8:	mov	r1, r2
   19acc:	ldr	r2, [fp, #-96]	; 0xffffffa0
   19ad0:	bl	1e61c <__assert_fail@plt+0xd534>
   19ad4:	str	r0, [fp, #-88]	; 0xffffffa8
   19ad8:	str	r1, [fp, #-92]	; 0xffffffa4
   19adc:	b	19ae0 <__assert_fail@plt+0x89f8>
   19ae0:	ldr	r0, [fp, #-92]	; 0xffffffa4
   19ae4:	ldr	r1, [fp, #-88]	; 0xffffffa8
   19ae8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19aec:	mvn	r2, r2
   19af0:	subs	r1, r2, r1
   19af4:	rscs	r0, r0, r2, asr #31
   19af8:	str	r1, [fp, #-100]	; 0xffffff9c
   19afc:	str	r0, [fp, #-104]	; 0xffffff98
   19b00:	bge	19c80 <__assert_fail@plt+0x8b98>
   19b04:	b	19c94 <__assert_fail@plt+0x8bac>
   19b08:	ldr	r0, [fp, #8]
   19b0c:	cmn	r0, #1
   19b10:	bne	19b60 <__assert_fail@plt+0x8a78>
   19b14:	b	19b18 <__assert_fail@plt+0x8a30>
   19b18:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19b1c:	mov	r1, #-2147483648	; 0x80000000
   19b20:	add	r1, r1, r0, asr #31
   19b24:	rsbs	r0, r0, #0
   19b28:	rscs	r1, r1, #0
   19b2c:	str	r0, [fp, #-108]	; 0xffffff94
   19b30:	str	r1, [fp, #-112]	; 0xffffff90
   19b34:	blt	19c80 <__assert_fail@plt+0x8b98>
   19b38:	b	19c94 <__assert_fail@plt+0x8bac>
   19b3c:	andhi	r0, r0, r1
   19b40:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19b44:	movw	r1, #0
   19b48:	cmp	r1, r0
   19b4c:	bge	19c94 <__assert_fail@plt+0x8bac>
   19b50:	mov	r0, #0
   19b54:	cmp	r0, #0
   19b58:	bne	19c80 <__assert_fail@plt+0x8b98>
   19b5c:	b	19c94 <__assert_fail@plt+0x8bac>
   19b60:	ldr	r0, [fp, #8]
   19b64:	asr	r3, r0, #31
   19b68:	mov	r1, #0
   19b6c:	mov	r2, #-2147483648	; 0x80000000
   19b70:	str	r0, [fp, #-116]	; 0xffffff8c
   19b74:	mov	r0, r1
   19b78:	mov	r1, r2
   19b7c:	ldr	r2, [fp, #-116]	; 0xffffff8c
   19b80:	bl	1e61c <__assert_fail@plt+0xd534>
   19b84:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19b88:	subs	r0, r0, r2
   19b8c:	sbcs	r1, r1, r2, asr #31
   19b90:	str	r0, [fp, #-120]	; 0xffffff88
   19b94:	str	r1, [fp, #-124]	; 0xffffff84
   19b98:	blt	19c80 <__assert_fail@plt+0x8b98>
   19b9c:	b	19c94 <__assert_fail@plt+0x8bac>
   19ba0:	ldr	r0, [fp, #8]
   19ba4:	cmp	r0, #0
   19ba8:	bne	19bb0 <__assert_fail@plt+0x8ac8>
   19bac:	b	19c94 <__assert_fail@plt+0x8bac>
   19bb0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19bb4:	cmp	r0, #0
   19bb8:	bge	19c40 <__assert_fail@plt+0x8b58>
   19bbc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19bc0:	cmn	r0, #1
   19bc4:	bne	19c00 <__assert_fail@plt+0x8b18>
   19bc8:	b	19bcc <__assert_fail@plt+0x8ae4>
   19bcc:	ldr	r0, [fp, #8]
   19bd0:	mov	r1, #-2147483648	; 0x80000000
   19bd4:	add	r1, r1, r0, asr #31
   19bd8:	rsbs	r0, r0, #0
   19bdc:	rscs	r1, r1, #0
   19be0:	str	r0, [fp, #-128]	; 0xffffff80
   19be4:	str	r1, [fp, #-132]	; 0xffffff7c
   19be8:	blt	19c80 <__assert_fail@plt+0x8b98>
   19bec:	b	19c94 <__assert_fail@plt+0x8bac>
   19bf0:	mov	r0, #0
   19bf4:	cmp	r0, #0
   19bf8:	bne	19c80 <__assert_fail@plt+0x8b98>
   19bfc:	b	19c94 <__assert_fail@plt+0x8bac>
   19c00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19c04:	asr	r3, r0, #31
   19c08:	mov	r1, #0
   19c0c:	mov	r2, #-2147483648	; 0x80000000
   19c10:	str	r0, [fp, #-136]	; 0xffffff78
   19c14:	mov	r0, r1
   19c18:	mov	r1, r2
   19c1c:	ldr	r2, [fp, #-136]	; 0xffffff78
   19c20:	bl	1e61c <__assert_fail@plt+0xd534>
   19c24:	ldr	r2, [fp, #8]
   19c28:	subs	r0, r0, r2
   19c2c:	sbcs	r1, r1, r2, asr #31
   19c30:	str	r0, [fp, #-140]	; 0xffffff74
   19c34:	str	r1, [fp, #-144]	; 0xffffff70
   19c38:	blt	19c80 <__assert_fail@plt+0x8b98>
   19c3c:	b	19c94 <__assert_fail@plt+0x8bac>
   19c40:	ldr	r0, [fp, #8]
   19c44:	asr	r3, r0, #31
   19c48:	mvn	r1, #0
   19c4c:	mvn	r2, #-2147483648	; 0x80000000
   19c50:	str	r0, [fp, #-148]	; 0xffffff6c
   19c54:	mov	r0, r1
   19c58:	mov	r1, r2
   19c5c:	ldr	r2, [fp, #-148]	; 0xffffff6c
   19c60:	bl	1e61c <__assert_fail@plt+0xd534>
   19c64:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19c68:	subs	r0, r0, r2
   19c6c:	sbcs	r1, r1, r2, asr #31
   19c70:	str	r0, [fp, #-152]	; 0xffffff68
   19c74:	str	r1, [fp, #-156]	; 0xffffff64
   19c78:	bge	19c94 <__assert_fail@plt+0x8bac>
   19c7c:	b	19c80 <__assert_fail@plt+0x8b98>
   19c80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19c84:	ldr	r1, [fp, #8]
   19c88:	mul	r0, r0, r1
   19c8c:	str	r0, [fp, #-28]	; 0xffffffe4
   19c90:	b	19ef4 <__assert_fail@plt+0x8e0c>
   19c94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19c98:	ldr	r1, [fp, #8]
   19c9c:	mul	r0, r0, r1
   19ca0:	str	r0, [fp, #-28]	; 0xffffffe4
   19ca4:	b	19f04 <__assert_fail@plt+0x8e1c>
   19ca8:	ldr	r0, [fp, #8]
   19cac:	cmp	r0, #0
   19cb0:	bge	19e10 <__assert_fail@plt+0x8d28>
   19cb4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19cb8:	cmp	r0, #0
   19cbc:	bge	19d98 <__assert_fail@plt+0x8cb0>
   19cc0:	b	19d08 <__assert_fail@plt+0x8c20>
   19cc4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19cc8:	ldr	r1, [fp, #8]
   19ccc:	asr	r3, r1, #31
   19cd0:	mvn	r2, #0
   19cd4:	str	r0, [fp, #-160]	; 0xffffff60
   19cd8:	mov	r0, r2
   19cdc:	str	r1, [fp, #-164]	; 0xffffff5c
   19ce0:	mov	r1, r2
   19ce4:	ldr	r2, [fp, #-164]	; 0xffffff5c
   19ce8:	bl	1e6f0 <__assert_fail@plt+0xd608>
   19cec:	ldr	r2, [fp, #-160]	; 0xffffff60
   19cf0:	subs	r0, r2, r0
   19cf4:	rscs	r1, r1, r2, asr #31
   19cf8:	str	r0, [fp, #-168]	; 0xffffff58
   19cfc:	str	r1, [fp, #-172]	; 0xffffff54
   19d00:	bcc	19ecc <__assert_fail@plt+0x8de4>
   19d04:	b	19ee0 <__assert_fail@plt+0x8df8>
   19d08:	b	19d0c <__assert_fail@plt+0x8c24>
   19d0c:	ldr	r0, [pc, #-472]	; 19b3c <__assert_fail@plt+0x8a54>
   19d10:	ldr	r1, [fp, #8]
   19d14:	cmp	r1, r0
   19d18:	blt	19d30 <__assert_fail@plt+0x8c48>
   19d1c:	b	19d44 <__assert_fail@plt+0x8c5c>
   19d20:	ldr	r0, [fp, #8]
   19d24:	movw	r1, #0
   19d28:	cmp	r1, r0
   19d2c:	bge	19d44 <__assert_fail@plt+0x8c5c>
   19d30:	mov	r0, #1
   19d34:	mvn	r1, #0
   19d38:	str	r1, [fp, #-176]	; 0xffffff50
   19d3c:	str	r0, [fp, #-180]	; 0xffffff4c
   19d40:	b	19d70 <__assert_fail@plt+0x8c88>
   19d44:	ldr	r0, [fp, #8]
   19d48:	rsb	r0, r0, #0
   19d4c:	asr	r3, r0, #31
   19d50:	mvn	r1, #0
   19d54:	str	r0, [fp, #-184]	; 0xffffff48
   19d58:	mov	r0, r1
   19d5c:	ldr	r2, [fp, #-184]	; 0xffffff48
   19d60:	bl	1e6f0 <__assert_fail@plt+0xd608>
   19d64:	str	r0, [fp, #-176]	; 0xffffff50
   19d68:	str	r1, [fp, #-180]	; 0xffffff4c
   19d6c:	b	19d70 <__assert_fail@plt+0x8c88>
   19d70:	ldr	r0, [fp, #-180]	; 0xffffff4c
   19d74:	ldr	r1, [fp, #-176]	; 0xffffff50
   19d78:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19d7c:	mvn	r2, r2
   19d80:	subs	r1, r2, r1
   19d84:	rscs	r0, r0, r2, asr #31
   19d88:	str	r1, [sp, #188]	; 0xbc
   19d8c:	str	r0, [sp, #184]	; 0xb8
   19d90:	bcs	19ecc <__assert_fail@plt+0x8de4>
   19d94:	b	19ee0 <__assert_fail@plt+0x8df8>
   19d98:	b	19d9c <__assert_fail@plt+0x8cb4>
   19d9c:	b	19df4 <__assert_fail@plt+0x8d0c>
   19da0:	b	19df4 <__assert_fail@plt+0x8d0c>
   19da4:	ldr	r0, [fp, #8]
   19da8:	cmn	r0, #1
   19dac:	bne	19df4 <__assert_fail@plt+0x8d0c>
   19db0:	b	19db4 <__assert_fail@plt+0x8ccc>
   19db4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19db8:	add	r0, r0, #0
   19dbc:	movw	r1, #0
   19dc0:	cmp	r1, r0
   19dc4:	blt	19ecc <__assert_fail@plt+0x8de4>
   19dc8:	b	19ee0 <__assert_fail@plt+0x8df8>
   19dcc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19dd0:	movw	r1, #0
   19dd4:	cmp	r1, r0
   19dd8:	bge	19ee0 <__assert_fail@plt+0x8df8>
   19ddc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19de0:	sub	r0, r0, #1
   19de4:	mvn	r1, #0
   19de8:	cmp	r1, r0
   19dec:	blt	19ecc <__assert_fail@plt+0x8de4>
   19df0:	b	19ee0 <__assert_fail@plt+0x8df8>
   19df4:	ldr	r0, [fp, #8]
   19df8:	movw	r1, #0
   19dfc:	sdiv	r0, r1, r0
   19e00:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19e04:	cmp	r0, r1
   19e08:	blt	19ecc <__assert_fail@plt+0x8de4>
   19e0c:	b	19ee0 <__assert_fail@plt+0x8df8>
   19e10:	ldr	r0, [fp, #8]
   19e14:	cmp	r0, #0
   19e18:	bne	19e20 <__assert_fail@plt+0x8d38>
   19e1c:	b	19ee0 <__assert_fail@plt+0x8df8>
   19e20:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19e24:	cmp	r0, #0
   19e28:	bge	19e94 <__assert_fail@plt+0x8dac>
   19e2c:	b	19e30 <__assert_fail@plt+0x8d48>
   19e30:	b	19e78 <__assert_fail@plt+0x8d90>
   19e34:	b	19e78 <__assert_fail@plt+0x8d90>
   19e38:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19e3c:	cmn	r0, #1
   19e40:	bne	19e78 <__assert_fail@plt+0x8d90>
   19e44:	b	19e48 <__assert_fail@plt+0x8d60>
   19e48:	ldr	r0, [fp, #8]
   19e4c:	add	r0, r0, #0
   19e50:	movw	r1, #0
   19e54:	cmp	r1, r0
   19e58:	blt	19ecc <__assert_fail@plt+0x8de4>
   19e5c:	b	19ee0 <__assert_fail@plt+0x8df8>
   19e60:	ldr	r0, [fp, #8]
   19e64:	sub	r0, r0, #1
   19e68:	mvn	r1, #0
   19e6c:	cmp	r1, r0
   19e70:	blt	19ecc <__assert_fail@plt+0x8de4>
   19e74:	b	19ee0 <__assert_fail@plt+0x8df8>
   19e78:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19e7c:	movw	r1, #0
   19e80:	sdiv	r0, r1, r0
   19e84:	ldr	r1, [fp, #8]
   19e88:	cmp	r0, r1
   19e8c:	blt	19ecc <__assert_fail@plt+0x8de4>
   19e90:	b	19ee0 <__assert_fail@plt+0x8df8>
   19e94:	ldr	r0, [fp, #8]
   19e98:	asr	r3, r0, #31
   19e9c:	mvn	r1, #0
   19ea0:	str	r0, [sp, #180]	; 0xb4
   19ea4:	mov	r0, r1
   19ea8:	ldr	r2, [sp, #180]	; 0xb4
   19eac:	bl	1e6f0 <__assert_fail@plt+0xd608>
   19eb0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19eb4:	subs	r0, r0, r2
   19eb8:	sbcs	r1, r1, r2, asr #31
   19ebc:	str	r0, [sp, #176]	; 0xb0
   19ec0:	str	r1, [sp, #172]	; 0xac
   19ec4:	bcs	19ee0 <__assert_fail@plt+0x8df8>
   19ec8:	b	19ecc <__assert_fail@plt+0x8de4>
   19ecc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19ed0:	ldr	r1, [fp, #8]
   19ed4:	mul	r0, r0, r1
   19ed8:	str	r0, [fp, #-28]	; 0xffffffe4
   19edc:	b	19ef4 <__assert_fail@plt+0x8e0c>
   19ee0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19ee4:	ldr	r1, [fp, #8]
   19ee8:	mul	r0, r0, r1
   19eec:	str	r0, [fp, #-28]	; 0xffffffe4
   19ef0:	b	19f04 <__assert_fail@plt+0x8e1c>
   19ef4:	ldr	r0, [pc, #-1108]	; 19aa8 <__assert_fail@plt+0x89c0>
   19ef8:	str	r0, [sp, #168]	; 0xa8
   19efc:	b	19f24 <__assert_fail@plt+0x8e3c>
   19f00:			; <UNDEFINED> instruction: 0xffff8000
   19f04:	ldr	r0, [fp, #-28]	; 0xffffffe4
   19f08:	cmp	r0, #64	; 0x40
   19f0c:	movw	r0, #0
   19f10:	movlt	r0, #1
   19f14:	tst	r0, #1
   19f18:	movw	r0, #64	; 0x40
   19f1c:	moveq	r0, #0
   19f20:	str	r0, [sp, #168]	; 0xa8
   19f24:	ldr	r0, [sp, #168]	; 0xa8
   19f28:	str	r0, [fp, #-32]	; 0xffffffe0
   19f2c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19f30:	cmp	r0, #0
   19f34:	beq	19f64 <__assert_fail@plt+0x8e7c>
   19f38:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19f3c:	ldr	r1, [fp, #8]
   19f40:	sdiv	r0, r0, r1
   19f44:	str	r0, [fp, #-24]	; 0xffffffe8
   19f48:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19f4c:	mov	r1, r0
   19f50:	ldr	r2, [fp, #8]
   19f54:	sdiv	r3, r0, r2
   19f58:	mls	r0, r3, r2, r0
   19f5c:	sub	r0, r1, r0
   19f60:	str	r0, [fp, #-28]	; 0xffffffe4
   19f64:	ldr	r0, [fp, #-4]
   19f68:	movw	r1, #0
   19f6c:	cmp	r0, r1
   19f70:	bne	19f80 <__assert_fail@plt+0x8e98>
   19f74:	ldr	r0, [fp, #-8]
   19f78:	movw	r1, #0
   19f7c:	str	r1, [r0]
   19f80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19f84:	ldr	r1, [fp, #-20]	; 0xffffffec
   19f88:	sub	r0, r0, r1
   19f8c:	ldr	r1, [fp, #-12]
   19f90:	cmp	r0, r1
   19f94:	bge	1b3cc <__assert_fail@plt+0xa2e4>
   19f98:	ldr	r0, [fp, #-20]	; 0xffffffec
   19f9c:	ldr	r1, [fp, #-12]
   19fa0:	add	r1, r0, r1
   19fa4:	mov	r2, #1
   19fa8:	cmp	r1, r0
   19fac:	movwvc	r2, #0
   19fb0:	str	r1, [fp, #-24]	; 0xffffffe8
   19fb4:	tst	r2, #1
   19fb8:	bne	1b3c8 <__assert_fail@plt+0xa2e0>
   19fbc:	ldr	r0, [fp, #-16]
   19fc0:	movw	r1, #0
   19fc4:	cmp	r1, r0
   19fc8:	bgt	19fdc <__assert_fail@plt+0x8ef4>
   19fcc:	ldr	r0, [fp, #-16]
   19fd0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19fd4:	cmp	r0, r1
   19fd8:	blt	1b3c8 <__assert_fail@plt+0xa2e0>
   19fdc:	b	1a3b8 <__assert_fail@plt+0x92d0>
   19fe0:	b	19fe4 <__assert_fail@plt+0x8efc>
   19fe4:	ldr	r0, [fp, #8]
   19fe8:	cmp	r0, #0
   19fec:	bge	1a100 <__assert_fail@plt+0x9018>
   19ff0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19ff4:	cmp	r0, #0
   19ff8:	bge	1a084 <__assert_fail@plt+0x8f9c>
   19ffc:	b	1a000 <__assert_fail@plt+0x8f18>
   1a000:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a004:	ldr	r1, [fp, #8]
   1a008:	movw	r2, #127	; 0x7f
   1a00c:	sdiv	r1, r2, r1
   1a010:	cmp	r0, r1
   1a014:	blt	1a1a0 <__assert_fail@plt+0x90b8>
   1a018:	b	1a1b8 <__assert_fail@plt+0x90d0>
   1a01c:	b	1a020 <__assert_fail@plt+0x8f38>
   1a020:	ldr	r0, [pc, #-1260]	; 19b3c <__assert_fail@plt+0x8a54>
   1a024:	ldr	r1, [fp, #8]
   1a028:	cmp	r1, r0
   1a02c:	blt	1a044 <__assert_fail@plt+0x8f5c>
   1a030:	b	1a050 <__assert_fail@plt+0x8f68>
   1a034:	ldr	r0, [fp, #8]
   1a038:	movw	r1, #0
   1a03c:	cmp	r1, r0
   1a040:	bge	1a050 <__assert_fail@plt+0x8f68>
   1a044:	movw	r0, #0
   1a048:	str	r0, [sp, #164]	; 0xa4
   1a04c:	b	1a068 <__assert_fail@plt+0x8f80>
   1a050:	ldr	r0, [fp, #8]
   1a054:	movw	r1, #0
   1a058:	sub	r0, r1, r0
   1a05c:	movw	r1, #127	; 0x7f
   1a060:	sdiv	r0, r1, r0
   1a064:	str	r0, [sp, #164]	; 0xa4
   1a068:	ldr	r0, [sp, #164]	; 0xa4
   1a06c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a070:	mvn	r2, #0
   1a074:	sub	r1, r2, r1
   1a078:	cmp	r0, r1
   1a07c:	ble	1a1a0 <__assert_fail@plt+0x90b8>
   1a080:	b	1a1b8 <__assert_fail@plt+0x90d0>
   1a084:	b	1a088 <__assert_fail@plt+0x8fa0>
   1a088:	b	1a0e4 <__assert_fail@plt+0x8ffc>
   1a08c:	b	1a0e4 <__assert_fail@plt+0x8ffc>
   1a090:	ldr	r0, [fp, #8]
   1a094:	cmn	r0, #1
   1a098:	bne	1a0e4 <__assert_fail@plt+0x8ffc>
   1a09c:	b	1a0a0 <__assert_fail@plt+0x8fb8>
   1a0a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a0a4:	mvn	r1, #127	; 0x7f
   1a0a8:	add	r0, r0, r1
   1a0ac:	movw	r1, #0
   1a0b0:	cmp	r1, r0
   1a0b4:	blt	1a1a0 <__assert_fail@plt+0x90b8>
   1a0b8:	b	1a1b8 <__assert_fail@plt+0x90d0>
   1a0bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a0c0:	movw	r1, #0
   1a0c4:	cmp	r1, r0
   1a0c8:	bge	1a1b8 <__assert_fail@plt+0x90d0>
   1a0cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a0d0:	sub	r0, r0, #1
   1a0d4:	movw	r1, #127	; 0x7f
   1a0d8:	cmp	r1, r0
   1a0dc:	blt	1a1a0 <__assert_fail@plt+0x90b8>
   1a0e0:	b	1a1b8 <__assert_fail@plt+0x90d0>
   1a0e4:	ldr	r0, [fp, #8]
   1a0e8:	mvn	r1, #127	; 0x7f
   1a0ec:	sdiv	r0, r1, r0
   1a0f0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a0f4:	cmp	r0, r1
   1a0f8:	blt	1a1a0 <__assert_fail@plt+0x90b8>
   1a0fc:	b	1a1b8 <__assert_fail@plt+0x90d0>
   1a100:	ldr	r0, [fp, #8]
   1a104:	cmp	r0, #0
   1a108:	bne	1a110 <__assert_fail@plt+0x9028>
   1a10c:	b	1a1b8 <__assert_fail@plt+0x90d0>
   1a110:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a114:	cmp	r0, #0
   1a118:	bge	1a188 <__assert_fail@plt+0x90a0>
   1a11c:	b	1a120 <__assert_fail@plt+0x9038>
   1a120:	b	1a16c <__assert_fail@plt+0x9084>
   1a124:	b	1a16c <__assert_fail@plt+0x9084>
   1a128:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a12c:	cmn	r0, #1
   1a130:	bne	1a16c <__assert_fail@plt+0x9084>
   1a134:	b	1a138 <__assert_fail@plt+0x9050>
   1a138:	ldr	r0, [fp, #8]
   1a13c:	mvn	r1, #127	; 0x7f
   1a140:	add	r0, r0, r1
   1a144:	movw	r1, #0
   1a148:	cmp	r1, r0
   1a14c:	blt	1a1a0 <__assert_fail@plt+0x90b8>
   1a150:	b	1a1b8 <__assert_fail@plt+0x90d0>
   1a154:	ldr	r0, [fp, #8]
   1a158:	sub	r0, r0, #1
   1a15c:	movw	r1, #127	; 0x7f
   1a160:	cmp	r1, r0
   1a164:	blt	1a1a0 <__assert_fail@plt+0x90b8>
   1a168:	b	1a1b8 <__assert_fail@plt+0x90d0>
   1a16c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a170:	mvn	r1, #127	; 0x7f
   1a174:	sdiv	r0, r1, r0
   1a178:	ldr	r1, [fp, #8]
   1a17c:	cmp	r0, r1
   1a180:	blt	1a1a0 <__assert_fail@plt+0x90b8>
   1a184:	b	1a1b8 <__assert_fail@plt+0x90d0>
   1a188:	ldr	r0, [fp, #8]
   1a18c:	movw	r1, #127	; 0x7f
   1a190:	sdiv	r0, r1, r0
   1a194:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a198:	cmp	r0, r1
   1a19c:	bge	1a1b8 <__assert_fail@plt+0x90d0>
   1a1a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a1a4:	ldr	r1, [fp, #8]
   1a1a8:	mul	r0, r0, r1
   1a1ac:	sxtb	r0, r0
   1a1b0:	str	r0, [fp, #-28]	; 0xffffffe4
   1a1b4:	b	1b3c8 <__assert_fail@plt+0xa2e0>
   1a1b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a1bc:	ldr	r1, [fp, #8]
   1a1c0:	mul	r0, r0, r1
   1a1c4:	sxtb	r0, r0
   1a1c8:	str	r0, [fp, #-28]	; 0xffffffe4
   1a1cc:	b	1b3cc <__assert_fail@plt+0xa2e4>
   1a1d0:	ldr	r0, [fp, #8]
   1a1d4:	cmp	r0, #0
   1a1d8:	bge	1a2e8 <__assert_fail@plt+0x9200>
   1a1dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a1e0:	cmp	r0, #0
   1a1e4:	bge	1a270 <__assert_fail@plt+0x9188>
   1a1e8:	b	1a1ec <__assert_fail@plt+0x9104>
   1a1ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a1f0:	ldr	r1, [fp, #8]
   1a1f4:	movw	r2, #255	; 0xff
   1a1f8:	sdiv	r1, r2, r1
   1a1fc:	cmp	r0, r1
   1a200:	blt	1a384 <__assert_fail@plt+0x929c>
   1a204:	b	1a3a0 <__assert_fail@plt+0x92b8>
   1a208:	b	1a20c <__assert_fail@plt+0x9124>
   1a20c:	ldr	r0, [pc, #-1752]	; 19b3c <__assert_fail@plt+0x8a54>
   1a210:	ldr	r1, [fp, #8]
   1a214:	cmp	r1, r0
   1a218:	blt	1a230 <__assert_fail@plt+0x9148>
   1a21c:	b	1a23c <__assert_fail@plt+0x9154>
   1a220:	ldr	r0, [fp, #8]
   1a224:	movw	r1, #0
   1a228:	cmp	r1, r0
   1a22c:	bge	1a23c <__assert_fail@plt+0x9154>
   1a230:	movw	r0, #0
   1a234:	str	r0, [sp, #160]	; 0xa0
   1a238:	b	1a254 <__assert_fail@plt+0x916c>
   1a23c:	ldr	r0, [fp, #8]
   1a240:	movw	r1, #0
   1a244:	sub	r0, r1, r0
   1a248:	movw	r1, #255	; 0xff
   1a24c:	sdiv	r0, r1, r0
   1a250:	str	r0, [sp, #160]	; 0xa0
   1a254:	ldr	r0, [sp, #160]	; 0xa0
   1a258:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a25c:	mvn	r2, #0
   1a260:	sub	r1, r2, r1
   1a264:	cmp	r0, r1
   1a268:	ble	1a384 <__assert_fail@plt+0x929c>
   1a26c:	b	1a3a0 <__assert_fail@plt+0x92b8>
   1a270:	b	1a274 <__assert_fail@plt+0x918c>
   1a274:	b	1a2cc <__assert_fail@plt+0x91e4>
   1a278:	b	1a2cc <__assert_fail@plt+0x91e4>
   1a27c:	ldr	r0, [fp, #8]
   1a280:	cmn	r0, #1
   1a284:	bne	1a2cc <__assert_fail@plt+0x91e4>
   1a288:	b	1a28c <__assert_fail@plt+0x91a4>
   1a28c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a290:	add	r0, r0, #0
   1a294:	movw	r1, #0
   1a298:	cmp	r1, r0
   1a29c:	blt	1a384 <__assert_fail@plt+0x929c>
   1a2a0:	b	1a3a0 <__assert_fail@plt+0x92b8>
   1a2a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a2a8:	movw	r1, #0
   1a2ac:	cmp	r1, r0
   1a2b0:	bge	1a3a0 <__assert_fail@plt+0x92b8>
   1a2b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a2b8:	sub	r0, r0, #1
   1a2bc:	mvn	r1, #0
   1a2c0:	cmp	r1, r0
   1a2c4:	blt	1a384 <__assert_fail@plt+0x929c>
   1a2c8:	b	1a3a0 <__assert_fail@plt+0x92b8>
   1a2cc:	ldr	r0, [fp, #8]
   1a2d0:	movw	r1, #0
   1a2d4:	sdiv	r0, r1, r0
   1a2d8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a2dc:	cmp	r0, r1
   1a2e0:	blt	1a384 <__assert_fail@plt+0x929c>
   1a2e4:	b	1a3a0 <__assert_fail@plt+0x92b8>
   1a2e8:	ldr	r0, [fp, #8]
   1a2ec:	cmp	r0, #0
   1a2f0:	bne	1a2f8 <__assert_fail@plt+0x9210>
   1a2f4:	b	1a3a0 <__assert_fail@plt+0x92b8>
   1a2f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a2fc:	cmp	r0, #0
   1a300:	bge	1a36c <__assert_fail@plt+0x9284>
   1a304:	b	1a308 <__assert_fail@plt+0x9220>
   1a308:	b	1a350 <__assert_fail@plt+0x9268>
   1a30c:	b	1a350 <__assert_fail@plt+0x9268>
   1a310:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a314:	cmn	r0, #1
   1a318:	bne	1a350 <__assert_fail@plt+0x9268>
   1a31c:	b	1a320 <__assert_fail@plt+0x9238>
   1a320:	ldr	r0, [fp, #8]
   1a324:	add	r0, r0, #0
   1a328:	movw	r1, #0
   1a32c:	cmp	r1, r0
   1a330:	blt	1a384 <__assert_fail@plt+0x929c>
   1a334:	b	1a3a0 <__assert_fail@plt+0x92b8>
   1a338:	ldr	r0, [fp, #8]
   1a33c:	sub	r0, r0, #1
   1a340:	mvn	r1, #0
   1a344:	cmp	r1, r0
   1a348:	blt	1a384 <__assert_fail@plt+0x929c>
   1a34c:	b	1a3a0 <__assert_fail@plt+0x92b8>
   1a350:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a354:	movw	r1, #0
   1a358:	sdiv	r0, r1, r0
   1a35c:	ldr	r1, [fp, #8]
   1a360:	cmp	r0, r1
   1a364:	blt	1a384 <__assert_fail@plt+0x929c>
   1a368:	b	1a3a0 <__assert_fail@plt+0x92b8>
   1a36c:	ldr	r0, [fp, #8]
   1a370:	movw	r1, #255	; 0xff
   1a374:	sdiv	r0, r1, r0
   1a378:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a37c:	cmp	r0, r1
   1a380:	bge	1a3a0 <__assert_fail@plt+0x92b8>
   1a384:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a388:	ldr	r1, [fp, #8]
   1a38c:	mul	r0, r0, r1
   1a390:	and	r0, r0, #255	; 0xff
   1a394:	str	r0, [fp, #-28]	; 0xffffffe4
   1a398:	b	1b3c8 <__assert_fail@plt+0xa2e0>
   1a39c:	andhi	r0, r0, r0
   1a3a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a3a4:	ldr	r1, [fp, #8]
   1a3a8:	mul	r0, r0, r1
   1a3ac:	and	r0, r0, #255	; 0xff
   1a3b0:	str	r0, [fp, #-28]	; 0xffffffe4
   1a3b4:	b	1b3cc <__assert_fail@plt+0xa2e4>
   1a3b8:	b	1a790 <__assert_fail@plt+0x96a8>
   1a3bc:	b	1a3c0 <__assert_fail@plt+0x92d8>
   1a3c0:	ldr	r0, [fp, #8]
   1a3c4:	cmp	r0, #0
   1a3c8:	bge	1a4dc <__assert_fail@plt+0x93f4>
   1a3cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a3d0:	cmp	r0, #0
   1a3d4:	bge	1a460 <__assert_fail@plt+0x9378>
   1a3d8:	b	1a3dc <__assert_fail@plt+0x92f4>
   1a3dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a3e0:	ldr	r1, [fp, #8]
   1a3e4:	movw	r2, #32767	; 0x7fff
   1a3e8:	sdiv	r1, r2, r1
   1a3ec:	cmp	r0, r1
   1a3f0:	blt	1a57c <__assert_fail@plt+0x9494>
   1a3f4:	b	1a594 <__assert_fail@plt+0x94ac>
   1a3f8:	b	1a3fc <__assert_fail@plt+0x9314>
   1a3fc:	ldr	r0, [pc, #4084]	; 1b3f8 <__assert_fail@plt+0xa310>
   1a400:	ldr	r1, [fp, #8]
   1a404:	cmp	r1, r0
   1a408:	blt	1a420 <__assert_fail@plt+0x9338>
   1a40c:	b	1a42c <__assert_fail@plt+0x9344>
   1a410:	ldr	r0, [fp, #8]
   1a414:	movw	r1, #0
   1a418:	cmp	r1, r0
   1a41c:	bge	1a42c <__assert_fail@plt+0x9344>
   1a420:	movw	r0, #0
   1a424:	str	r0, [sp, #156]	; 0x9c
   1a428:	b	1a444 <__assert_fail@plt+0x935c>
   1a42c:	ldr	r0, [fp, #8]
   1a430:	movw	r1, #0
   1a434:	sub	r0, r1, r0
   1a438:	movw	r1, #32767	; 0x7fff
   1a43c:	sdiv	r0, r1, r0
   1a440:	str	r0, [sp, #156]	; 0x9c
   1a444:	ldr	r0, [sp, #156]	; 0x9c
   1a448:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a44c:	mvn	r2, #0
   1a450:	sub	r1, r2, r1
   1a454:	cmp	r0, r1
   1a458:	ble	1a57c <__assert_fail@plt+0x9494>
   1a45c:	b	1a594 <__assert_fail@plt+0x94ac>
   1a460:	b	1a464 <__assert_fail@plt+0x937c>
   1a464:	b	1a4c0 <__assert_fail@plt+0x93d8>
   1a468:	b	1a4c0 <__assert_fail@plt+0x93d8>
   1a46c:	ldr	r0, [fp, #8]
   1a470:	cmn	r0, #1
   1a474:	bne	1a4c0 <__assert_fail@plt+0x93d8>
   1a478:	b	1a47c <__assert_fail@plt+0x9394>
   1a47c:	ldr	r0, [pc, #3964]	; 1b400 <__assert_fail@plt+0xa318>
   1a480:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a484:	add	r0, r1, r0
   1a488:	movw	r1, #0
   1a48c:	cmp	r1, r0
   1a490:	blt	1a57c <__assert_fail@plt+0x9494>
   1a494:	b	1a594 <__assert_fail@plt+0x94ac>
   1a498:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a49c:	movw	r1, #0
   1a4a0:	cmp	r1, r0
   1a4a4:	bge	1a594 <__assert_fail@plt+0x94ac>
   1a4a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a4ac:	sub	r0, r0, #1
   1a4b0:	movw	r1, #32767	; 0x7fff
   1a4b4:	cmp	r1, r0
   1a4b8:	blt	1a57c <__assert_fail@plt+0x9494>
   1a4bc:	b	1a594 <__assert_fail@plt+0x94ac>
   1a4c0:	ldr	r0, [pc, #3896]	; 1b400 <__assert_fail@plt+0xa318>
   1a4c4:	ldr	r1, [fp, #8]
   1a4c8:	sdiv	r0, r0, r1
   1a4cc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a4d0:	cmp	r0, r1
   1a4d4:	blt	1a57c <__assert_fail@plt+0x9494>
   1a4d8:	b	1a594 <__assert_fail@plt+0x94ac>
   1a4dc:	ldr	r0, [fp, #8]
   1a4e0:	cmp	r0, #0
   1a4e4:	bne	1a4ec <__assert_fail@plt+0x9404>
   1a4e8:	b	1a594 <__assert_fail@plt+0x94ac>
   1a4ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a4f0:	cmp	r0, #0
   1a4f4:	bge	1a564 <__assert_fail@plt+0x947c>
   1a4f8:	b	1a4fc <__assert_fail@plt+0x9414>
   1a4fc:	b	1a548 <__assert_fail@plt+0x9460>
   1a500:	b	1a548 <__assert_fail@plt+0x9460>
   1a504:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a508:	cmn	r0, #1
   1a50c:	bne	1a548 <__assert_fail@plt+0x9460>
   1a510:	b	1a514 <__assert_fail@plt+0x942c>
   1a514:	ldr	r0, [pc, #3812]	; 1b400 <__assert_fail@plt+0xa318>
   1a518:	ldr	r1, [fp, #8]
   1a51c:	add	r0, r1, r0
   1a520:	movw	r1, #0
   1a524:	cmp	r1, r0
   1a528:	blt	1a57c <__assert_fail@plt+0x9494>
   1a52c:	b	1a594 <__assert_fail@plt+0x94ac>
   1a530:	ldr	r0, [fp, #8]
   1a534:	sub	r0, r0, #1
   1a538:	movw	r1, #32767	; 0x7fff
   1a53c:	cmp	r1, r0
   1a540:	blt	1a57c <__assert_fail@plt+0x9494>
   1a544:	b	1a594 <__assert_fail@plt+0x94ac>
   1a548:	ldr	r0, [pc, #3760]	; 1b400 <__assert_fail@plt+0xa318>
   1a54c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a550:	sdiv	r0, r0, r1
   1a554:	ldr	r1, [fp, #8]
   1a558:	cmp	r0, r1
   1a55c:	blt	1a57c <__assert_fail@plt+0x9494>
   1a560:	b	1a594 <__assert_fail@plt+0x94ac>
   1a564:	ldr	r0, [fp, #8]
   1a568:	movw	r1, #32767	; 0x7fff
   1a56c:	sdiv	r0, r1, r0
   1a570:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a574:	cmp	r0, r1
   1a578:	bge	1a594 <__assert_fail@plt+0x94ac>
   1a57c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a580:	ldr	r1, [fp, #8]
   1a584:	mul	r0, r0, r1
   1a588:	sxth	r0, r0
   1a58c:	str	r0, [fp, #-28]	; 0xffffffe4
   1a590:	b	1b3c8 <__assert_fail@plt+0xa2e0>
   1a594:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a598:	ldr	r1, [fp, #8]
   1a59c:	mul	r0, r0, r1
   1a5a0:	sxth	r0, r0
   1a5a4:	str	r0, [fp, #-28]	; 0xffffffe4
   1a5a8:	b	1b3cc <__assert_fail@plt+0xa2e4>
   1a5ac:	ldr	r0, [fp, #8]
   1a5b0:	cmp	r0, #0
   1a5b4:	bge	1a6c4 <__assert_fail@plt+0x95dc>
   1a5b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a5bc:	cmp	r0, #0
   1a5c0:	bge	1a64c <__assert_fail@plt+0x9564>
   1a5c4:	b	1a5c8 <__assert_fail@plt+0x94e0>
   1a5c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a5cc:	ldr	r1, [fp, #8]
   1a5d0:	movw	r2, #65535	; 0xffff
   1a5d4:	sdiv	r1, r2, r1
   1a5d8:	cmp	r0, r1
   1a5dc:	blt	1a760 <__assert_fail@plt+0x9678>
   1a5e0:	b	1a778 <__assert_fail@plt+0x9690>
   1a5e4:	b	1a5e8 <__assert_fail@plt+0x9500>
   1a5e8:	ldr	r0, [pc, #3592]	; 1b3f8 <__assert_fail@plt+0xa310>
   1a5ec:	ldr	r1, [fp, #8]
   1a5f0:	cmp	r1, r0
   1a5f4:	blt	1a60c <__assert_fail@plt+0x9524>
   1a5f8:	b	1a618 <__assert_fail@plt+0x9530>
   1a5fc:	ldr	r0, [fp, #8]
   1a600:	movw	r1, #0
   1a604:	cmp	r1, r0
   1a608:	bge	1a618 <__assert_fail@plt+0x9530>
   1a60c:	movw	r0, #0
   1a610:	str	r0, [sp, #152]	; 0x98
   1a614:	b	1a630 <__assert_fail@plt+0x9548>
   1a618:	ldr	r0, [fp, #8]
   1a61c:	movw	r1, #0
   1a620:	sub	r0, r1, r0
   1a624:	movw	r1, #65535	; 0xffff
   1a628:	sdiv	r0, r1, r0
   1a62c:	str	r0, [sp, #152]	; 0x98
   1a630:	ldr	r0, [sp, #152]	; 0x98
   1a634:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a638:	mvn	r2, #0
   1a63c:	sub	r1, r2, r1
   1a640:	cmp	r0, r1
   1a644:	ble	1a760 <__assert_fail@plt+0x9678>
   1a648:	b	1a778 <__assert_fail@plt+0x9690>
   1a64c:	b	1a650 <__assert_fail@plt+0x9568>
   1a650:	b	1a6a8 <__assert_fail@plt+0x95c0>
   1a654:	b	1a6a8 <__assert_fail@plt+0x95c0>
   1a658:	ldr	r0, [fp, #8]
   1a65c:	cmn	r0, #1
   1a660:	bne	1a6a8 <__assert_fail@plt+0x95c0>
   1a664:	b	1a668 <__assert_fail@plt+0x9580>
   1a668:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a66c:	add	r0, r0, #0
   1a670:	movw	r1, #0
   1a674:	cmp	r1, r0
   1a678:	blt	1a760 <__assert_fail@plt+0x9678>
   1a67c:	b	1a778 <__assert_fail@plt+0x9690>
   1a680:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a684:	movw	r1, #0
   1a688:	cmp	r1, r0
   1a68c:	bge	1a778 <__assert_fail@plt+0x9690>
   1a690:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a694:	sub	r0, r0, #1
   1a698:	mvn	r1, #0
   1a69c:	cmp	r1, r0
   1a6a0:	blt	1a760 <__assert_fail@plt+0x9678>
   1a6a4:	b	1a778 <__assert_fail@plt+0x9690>
   1a6a8:	ldr	r0, [fp, #8]
   1a6ac:	movw	r1, #0
   1a6b0:	sdiv	r0, r1, r0
   1a6b4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a6b8:	cmp	r0, r1
   1a6bc:	blt	1a760 <__assert_fail@plt+0x9678>
   1a6c0:	b	1a778 <__assert_fail@plt+0x9690>
   1a6c4:	ldr	r0, [fp, #8]
   1a6c8:	cmp	r0, #0
   1a6cc:	bne	1a6d4 <__assert_fail@plt+0x95ec>
   1a6d0:	b	1a778 <__assert_fail@plt+0x9690>
   1a6d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a6d8:	cmp	r0, #0
   1a6dc:	bge	1a748 <__assert_fail@plt+0x9660>
   1a6e0:	b	1a6e4 <__assert_fail@plt+0x95fc>
   1a6e4:	b	1a72c <__assert_fail@plt+0x9644>
   1a6e8:	b	1a72c <__assert_fail@plt+0x9644>
   1a6ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a6f0:	cmn	r0, #1
   1a6f4:	bne	1a72c <__assert_fail@plt+0x9644>
   1a6f8:	b	1a6fc <__assert_fail@plt+0x9614>
   1a6fc:	ldr	r0, [fp, #8]
   1a700:	add	r0, r0, #0
   1a704:	movw	r1, #0
   1a708:	cmp	r1, r0
   1a70c:	blt	1a760 <__assert_fail@plt+0x9678>
   1a710:	b	1a778 <__assert_fail@plt+0x9690>
   1a714:	ldr	r0, [fp, #8]
   1a718:	sub	r0, r0, #1
   1a71c:	mvn	r1, #0
   1a720:	cmp	r1, r0
   1a724:	blt	1a760 <__assert_fail@plt+0x9678>
   1a728:	b	1a778 <__assert_fail@plt+0x9690>
   1a72c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a730:	movw	r1, #0
   1a734:	sdiv	r0, r1, r0
   1a738:	ldr	r1, [fp, #8]
   1a73c:	cmp	r0, r1
   1a740:	blt	1a760 <__assert_fail@plt+0x9678>
   1a744:	b	1a778 <__assert_fail@plt+0x9690>
   1a748:	ldr	r0, [fp, #8]
   1a74c:	movw	r1, #65535	; 0xffff
   1a750:	sdiv	r0, r1, r0
   1a754:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a758:	cmp	r0, r1
   1a75c:	bge	1a778 <__assert_fail@plt+0x9690>
   1a760:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a764:	ldr	r1, [fp, #8]
   1a768:	mul	r0, r0, r1
   1a76c:	uxth	r0, r0
   1a770:	str	r0, [fp, #-28]	; 0xffffffe4
   1a774:	b	1b3c8 <__assert_fail@plt+0xa2e0>
   1a778:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a77c:	ldr	r1, [fp, #8]
   1a780:	mul	r0, r0, r1
   1a784:	uxth	r0, r0
   1a788:	str	r0, [fp, #-28]	; 0xffffffe4
   1a78c:	b	1b3cc <__assert_fail@plt+0xa2e4>
   1a790:	b	1a794 <__assert_fail@plt+0x96ac>
   1a794:	b	1a798 <__assert_fail@plt+0x96b0>
   1a798:	ldr	r0, [fp, #8]
   1a79c:	cmp	r0, #0
   1a7a0:	bge	1a8a4 <__assert_fail@plt+0x97bc>
   1a7a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a7a8:	cmp	r0, #0
   1a7ac:	bge	1a838 <__assert_fail@plt+0x9750>
   1a7b0:	b	1a7b4 <__assert_fail@plt+0x96cc>
   1a7b4:	ldr	r0, [pc, #3128]	; 1b3f4 <__assert_fail@plt+0xa30c>
   1a7b8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a7bc:	ldr	r2, [fp, #8]
   1a7c0:	sdiv	r0, r0, r2
   1a7c4:	cmp	r1, r0
   1a7c8:	blt	1a934 <__assert_fail@plt+0x984c>
   1a7cc:	b	1a948 <__assert_fail@plt+0x9860>
   1a7d0:	b	1a7d4 <__assert_fail@plt+0x96ec>
   1a7d4:	ldr	r0, [pc, #3100]	; 1b3f8 <__assert_fail@plt+0xa310>
   1a7d8:	ldr	r1, [fp, #8]
   1a7dc:	cmp	r1, r0
   1a7e0:	blt	1a7f8 <__assert_fail@plt+0x9710>
   1a7e4:	b	1a804 <__assert_fail@plt+0x971c>
   1a7e8:	ldr	r0, [fp, #8]
   1a7ec:	movw	r1, #0
   1a7f0:	cmp	r1, r0
   1a7f4:	bge	1a804 <__assert_fail@plt+0x971c>
   1a7f8:	movw	r0, #0
   1a7fc:	str	r0, [sp, #148]	; 0x94
   1a800:	b	1a81c <__assert_fail@plt+0x9734>
   1a804:	ldr	r0, [pc, #3048]	; 1b3f4 <__assert_fail@plt+0xa30c>
   1a808:	ldr	r1, [fp, #8]
   1a80c:	movw	r2, #0
   1a810:	sub	r1, r2, r1
   1a814:	sdiv	r0, r0, r1
   1a818:	str	r0, [sp, #148]	; 0x94
   1a81c:	ldr	r0, [sp, #148]	; 0x94
   1a820:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a824:	mvn	r2, #0
   1a828:	sub	r1, r2, r1
   1a82c:	cmp	r0, r1
   1a830:	ble	1a934 <__assert_fail@plt+0x984c>
   1a834:	b	1a948 <__assert_fail@plt+0x9860>
   1a838:	ldr	r0, [fp, #8]
   1a83c:	cmn	r0, #1
   1a840:	bne	1a888 <__assert_fail@plt+0x97a0>
   1a844:	b	1a848 <__assert_fail@plt+0x9760>
   1a848:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a84c:	add	r0, r0, #-2147483648	; 0x80000000
   1a850:	movw	r1, #0
   1a854:	cmp	r1, r0
   1a858:	blt	1a934 <__assert_fail@plt+0x984c>
   1a85c:	b	1a948 <__assert_fail@plt+0x9860>
   1a860:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a864:	movw	r1, #0
   1a868:	cmp	r1, r0
   1a86c:	bge	1a948 <__assert_fail@plt+0x9860>
   1a870:	ldr	r0, [pc, #2940]	; 1b3f4 <__assert_fail@plt+0xa30c>
   1a874:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a878:	sub	r1, r1, #1
   1a87c:	cmp	r0, r1
   1a880:	blt	1a934 <__assert_fail@plt+0x984c>
   1a884:	b	1a948 <__assert_fail@plt+0x9860>
   1a888:	ldr	r0, [pc, #2924]	; 1b3fc <__assert_fail@plt+0xa314>
   1a88c:	ldr	r1, [fp, #8]
   1a890:	sdiv	r0, r0, r1
   1a894:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a898:	cmp	r0, r1
   1a89c:	blt	1a934 <__assert_fail@plt+0x984c>
   1a8a0:	b	1a948 <__assert_fail@plt+0x9860>
   1a8a4:	ldr	r0, [fp, #8]
   1a8a8:	cmp	r0, #0
   1a8ac:	bne	1a8b4 <__assert_fail@plt+0x97cc>
   1a8b0:	b	1a948 <__assert_fail@plt+0x9860>
   1a8b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a8b8:	cmp	r0, #0
   1a8bc:	bge	1a91c <__assert_fail@plt+0x9834>
   1a8c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a8c4:	cmn	r0, #1
   1a8c8:	bne	1a900 <__assert_fail@plt+0x9818>
   1a8cc:	b	1a8d0 <__assert_fail@plt+0x97e8>
   1a8d0:	ldr	r0, [fp, #8]
   1a8d4:	add	r0, r0, #-2147483648	; 0x80000000
   1a8d8:	movw	r1, #0
   1a8dc:	cmp	r1, r0
   1a8e0:	blt	1a934 <__assert_fail@plt+0x984c>
   1a8e4:	b	1a948 <__assert_fail@plt+0x9860>
   1a8e8:	ldr	r0, [pc, #2820]	; 1b3f4 <__assert_fail@plt+0xa30c>
   1a8ec:	ldr	r1, [fp, #8]
   1a8f0:	sub	r1, r1, #1
   1a8f4:	cmp	r0, r1
   1a8f8:	blt	1a934 <__assert_fail@plt+0x984c>
   1a8fc:	b	1a948 <__assert_fail@plt+0x9860>
   1a900:	ldr	r0, [pc, #2804]	; 1b3fc <__assert_fail@plt+0xa314>
   1a904:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a908:	sdiv	r0, r0, r1
   1a90c:	ldr	r1, [fp, #8]
   1a910:	cmp	r0, r1
   1a914:	blt	1a934 <__assert_fail@plt+0x984c>
   1a918:	b	1a948 <__assert_fail@plt+0x9860>
   1a91c:	ldr	r0, [pc, #2768]	; 1b3f4 <__assert_fail@plt+0xa30c>
   1a920:	ldr	r1, [fp, #8]
   1a924:	sdiv	r0, r0, r1
   1a928:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a92c:	cmp	r0, r1
   1a930:	bge	1a948 <__assert_fail@plt+0x9860>
   1a934:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a938:	ldr	r1, [fp, #8]
   1a93c:	mul	r0, r0, r1
   1a940:	str	r0, [fp, #-28]	; 0xffffffe4
   1a944:	b	1b3c8 <__assert_fail@plt+0xa2e0>
   1a948:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a94c:	ldr	r1, [fp, #8]
   1a950:	mul	r0, r0, r1
   1a954:	str	r0, [fp, #-28]	; 0xffffffe4
   1a958:	b	1b3cc <__assert_fail@plt+0xa2e4>
   1a95c:	ldr	r0, [fp, #8]
   1a960:	cmp	r0, #0
   1a964:	bge	1aa74 <__assert_fail@plt+0x998c>
   1a968:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a96c:	cmp	r0, #0
   1a970:	bge	1a9fc <__assert_fail@plt+0x9914>
   1a974:	b	1a994 <__assert_fail@plt+0x98ac>
   1a978:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a97c:	ldr	r1, [fp, #8]
   1a980:	mvn	r2, #0
   1a984:	udiv	r1, r2, r1
   1a988:	cmp	r0, r1
   1a98c:	bcc	1ab10 <__assert_fail@plt+0x9a28>
   1a990:	b	1ab24 <__assert_fail@plt+0x9a3c>
   1a994:	b	1a998 <__assert_fail@plt+0x98b0>
   1a998:	ldr	r0, [pc, #2648]	; 1b3f8 <__assert_fail@plt+0xa310>
   1a99c:	ldr	r1, [fp, #8]
   1a9a0:	cmp	r1, r0
   1a9a4:	blt	1a9bc <__assert_fail@plt+0x98d4>
   1a9a8:	b	1a9c8 <__assert_fail@plt+0x98e0>
   1a9ac:	ldr	r0, [fp, #8]
   1a9b0:	movw	r1, #0
   1a9b4:	cmp	r1, r0
   1a9b8:	bge	1a9c8 <__assert_fail@plt+0x98e0>
   1a9bc:	movw	r0, #1
   1a9c0:	str	r0, [sp, #144]	; 0x90
   1a9c4:	b	1a9e0 <__assert_fail@plt+0x98f8>
   1a9c8:	ldr	r0, [fp, #8]
   1a9cc:	movw	r1, #0
   1a9d0:	sub	r0, r1, r0
   1a9d4:	mvn	r1, #0
   1a9d8:	udiv	r0, r1, r0
   1a9dc:	str	r0, [sp, #144]	; 0x90
   1a9e0:	ldr	r0, [sp, #144]	; 0x90
   1a9e4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a9e8:	mvn	r2, #0
   1a9ec:	sub	r1, r2, r1
   1a9f0:	cmp	r0, r1
   1a9f4:	bls	1ab10 <__assert_fail@plt+0x9a28>
   1a9f8:	b	1ab24 <__assert_fail@plt+0x9a3c>
   1a9fc:	b	1aa00 <__assert_fail@plt+0x9918>
   1aa00:	b	1aa58 <__assert_fail@plt+0x9970>
   1aa04:	b	1aa58 <__assert_fail@plt+0x9970>
   1aa08:	ldr	r0, [fp, #8]
   1aa0c:	cmn	r0, #1
   1aa10:	bne	1aa58 <__assert_fail@plt+0x9970>
   1aa14:	b	1aa18 <__assert_fail@plt+0x9930>
   1aa18:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1aa1c:	add	r0, r0, #0
   1aa20:	movw	r1, #0
   1aa24:	cmp	r1, r0
   1aa28:	blt	1ab10 <__assert_fail@plt+0x9a28>
   1aa2c:	b	1ab24 <__assert_fail@plt+0x9a3c>
   1aa30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1aa34:	movw	r1, #0
   1aa38:	cmp	r1, r0
   1aa3c:	bge	1ab24 <__assert_fail@plt+0x9a3c>
   1aa40:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1aa44:	sub	r0, r0, #1
   1aa48:	mvn	r1, #0
   1aa4c:	cmp	r1, r0
   1aa50:	blt	1ab10 <__assert_fail@plt+0x9a28>
   1aa54:	b	1ab24 <__assert_fail@plt+0x9a3c>
   1aa58:	ldr	r0, [fp, #8]
   1aa5c:	movw	r1, #0
   1aa60:	sdiv	r0, r1, r0
   1aa64:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1aa68:	cmp	r0, r1
   1aa6c:	blt	1ab10 <__assert_fail@plt+0x9a28>
   1aa70:	b	1ab24 <__assert_fail@plt+0x9a3c>
   1aa74:	ldr	r0, [fp, #8]
   1aa78:	cmp	r0, #0
   1aa7c:	bne	1aa84 <__assert_fail@plt+0x999c>
   1aa80:	b	1ab24 <__assert_fail@plt+0x9a3c>
   1aa84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1aa88:	cmp	r0, #0
   1aa8c:	bge	1aaf8 <__assert_fail@plt+0x9a10>
   1aa90:	b	1aa94 <__assert_fail@plt+0x99ac>
   1aa94:	b	1aadc <__assert_fail@plt+0x99f4>
   1aa98:	b	1aadc <__assert_fail@plt+0x99f4>
   1aa9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1aaa0:	cmn	r0, #1
   1aaa4:	bne	1aadc <__assert_fail@plt+0x99f4>
   1aaa8:	b	1aaac <__assert_fail@plt+0x99c4>
   1aaac:	ldr	r0, [fp, #8]
   1aab0:	add	r0, r0, #0
   1aab4:	movw	r1, #0
   1aab8:	cmp	r1, r0
   1aabc:	blt	1ab10 <__assert_fail@plt+0x9a28>
   1aac0:	b	1ab24 <__assert_fail@plt+0x9a3c>
   1aac4:	ldr	r0, [fp, #8]
   1aac8:	sub	r0, r0, #1
   1aacc:	mvn	r1, #0
   1aad0:	cmp	r1, r0
   1aad4:	blt	1ab10 <__assert_fail@plt+0x9a28>
   1aad8:	b	1ab24 <__assert_fail@plt+0x9a3c>
   1aadc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1aae0:	movw	r1, #0
   1aae4:	sdiv	r0, r1, r0
   1aae8:	ldr	r1, [fp, #8]
   1aaec:	cmp	r0, r1
   1aaf0:	blt	1ab10 <__assert_fail@plt+0x9a28>
   1aaf4:	b	1ab24 <__assert_fail@plt+0x9a3c>
   1aaf8:	ldr	r0, [fp, #8]
   1aafc:	mvn	r1, #0
   1ab00:	udiv	r0, r1, r0
   1ab04:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ab08:	cmp	r0, r1
   1ab0c:	bcs	1ab24 <__assert_fail@plt+0x9a3c>
   1ab10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ab14:	ldr	r1, [fp, #8]
   1ab18:	mul	r0, r0, r1
   1ab1c:	str	r0, [fp, #-28]	; 0xffffffe4
   1ab20:	b	1b3c8 <__assert_fail@plt+0xa2e0>
   1ab24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ab28:	ldr	r1, [fp, #8]
   1ab2c:	mul	r0, r0, r1
   1ab30:	str	r0, [fp, #-28]	; 0xffffffe4
   1ab34:	b	1b3cc <__assert_fail@plt+0xa2e4>
   1ab38:	b	1ab3c <__assert_fail@plt+0x9a54>
   1ab3c:	b	1ab40 <__assert_fail@plt+0x9a58>
   1ab40:	ldr	r0, [fp, #8]
   1ab44:	cmp	r0, #0
   1ab48:	bge	1ac4c <__assert_fail@plt+0x9b64>
   1ab4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ab50:	cmp	r0, #0
   1ab54:	bge	1abe0 <__assert_fail@plt+0x9af8>
   1ab58:	b	1ab5c <__assert_fail@plt+0x9a74>
   1ab5c:	ldr	r0, [pc, #2192]	; 1b3f4 <__assert_fail@plt+0xa30c>
   1ab60:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ab64:	ldr	r2, [fp, #8]
   1ab68:	sdiv	r0, r0, r2
   1ab6c:	cmp	r1, r0
   1ab70:	blt	1acdc <__assert_fail@plt+0x9bf4>
   1ab74:	b	1acf0 <__assert_fail@plt+0x9c08>
   1ab78:	b	1ab7c <__assert_fail@plt+0x9a94>
   1ab7c:	ldr	r0, [pc, #2164]	; 1b3f8 <__assert_fail@plt+0xa310>
   1ab80:	ldr	r1, [fp, #8]
   1ab84:	cmp	r1, r0
   1ab88:	blt	1aba0 <__assert_fail@plt+0x9ab8>
   1ab8c:	b	1abac <__assert_fail@plt+0x9ac4>
   1ab90:	ldr	r0, [fp, #8]
   1ab94:	movw	r1, #0
   1ab98:	cmp	r1, r0
   1ab9c:	bge	1abac <__assert_fail@plt+0x9ac4>
   1aba0:	movw	r0, #0
   1aba4:	str	r0, [sp, #140]	; 0x8c
   1aba8:	b	1abc4 <__assert_fail@plt+0x9adc>
   1abac:	ldr	r0, [pc, #2112]	; 1b3f4 <__assert_fail@plt+0xa30c>
   1abb0:	ldr	r1, [fp, #8]
   1abb4:	movw	r2, #0
   1abb8:	sub	r1, r2, r1
   1abbc:	sdiv	r0, r0, r1
   1abc0:	str	r0, [sp, #140]	; 0x8c
   1abc4:	ldr	r0, [sp, #140]	; 0x8c
   1abc8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1abcc:	mvn	r2, #0
   1abd0:	sub	r1, r2, r1
   1abd4:	cmp	r0, r1
   1abd8:	ble	1acdc <__assert_fail@plt+0x9bf4>
   1abdc:	b	1acf0 <__assert_fail@plt+0x9c08>
   1abe0:	ldr	r0, [fp, #8]
   1abe4:	cmn	r0, #1
   1abe8:	bne	1ac30 <__assert_fail@plt+0x9b48>
   1abec:	b	1abf0 <__assert_fail@plt+0x9b08>
   1abf0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1abf4:	add	r0, r0, #-2147483648	; 0x80000000
   1abf8:	movw	r1, #0
   1abfc:	cmp	r1, r0
   1ac00:	blt	1acdc <__assert_fail@plt+0x9bf4>
   1ac04:	b	1acf0 <__assert_fail@plt+0x9c08>
   1ac08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ac0c:	movw	r1, #0
   1ac10:	cmp	r1, r0
   1ac14:	bge	1acf0 <__assert_fail@plt+0x9c08>
   1ac18:	ldr	r0, [pc, #2004]	; 1b3f4 <__assert_fail@plt+0xa30c>
   1ac1c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ac20:	sub	r1, r1, #1
   1ac24:	cmp	r0, r1
   1ac28:	blt	1acdc <__assert_fail@plt+0x9bf4>
   1ac2c:	b	1acf0 <__assert_fail@plt+0x9c08>
   1ac30:	ldr	r0, [pc, #1988]	; 1b3fc <__assert_fail@plt+0xa314>
   1ac34:	ldr	r1, [fp, #8]
   1ac38:	sdiv	r0, r0, r1
   1ac3c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ac40:	cmp	r0, r1
   1ac44:	blt	1acdc <__assert_fail@plt+0x9bf4>
   1ac48:	b	1acf0 <__assert_fail@plt+0x9c08>
   1ac4c:	ldr	r0, [fp, #8]
   1ac50:	cmp	r0, #0
   1ac54:	bne	1ac5c <__assert_fail@plt+0x9b74>
   1ac58:	b	1acf0 <__assert_fail@plt+0x9c08>
   1ac5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ac60:	cmp	r0, #0
   1ac64:	bge	1acc4 <__assert_fail@plt+0x9bdc>
   1ac68:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ac6c:	cmn	r0, #1
   1ac70:	bne	1aca8 <__assert_fail@plt+0x9bc0>
   1ac74:	b	1ac78 <__assert_fail@plt+0x9b90>
   1ac78:	ldr	r0, [fp, #8]
   1ac7c:	add	r0, r0, #-2147483648	; 0x80000000
   1ac80:	movw	r1, #0
   1ac84:	cmp	r1, r0
   1ac88:	blt	1acdc <__assert_fail@plt+0x9bf4>
   1ac8c:	b	1acf0 <__assert_fail@plt+0x9c08>
   1ac90:	ldr	r0, [pc, #1884]	; 1b3f4 <__assert_fail@plt+0xa30c>
   1ac94:	ldr	r1, [fp, #8]
   1ac98:	sub	r1, r1, #1
   1ac9c:	cmp	r0, r1
   1aca0:	blt	1acdc <__assert_fail@plt+0x9bf4>
   1aca4:	b	1acf0 <__assert_fail@plt+0x9c08>
   1aca8:	ldr	r0, [pc, #1868]	; 1b3fc <__assert_fail@plt+0xa314>
   1acac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1acb0:	sdiv	r0, r0, r1
   1acb4:	ldr	r1, [fp, #8]
   1acb8:	cmp	r0, r1
   1acbc:	blt	1acdc <__assert_fail@plt+0x9bf4>
   1acc0:	b	1acf0 <__assert_fail@plt+0x9c08>
   1acc4:	ldr	r0, [pc, #1832]	; 1b3f4 <__assert_fail@plt+0xa30c>
   1acc8:	ldr	r1, [fp, #8]
   1accc:	sdiv	r0, r0, r1
   1acd0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1acd4:	cmp	r0, r1
   1acd8:	bge	1acf0 <__assert_fail@plt+0x9c08>
   1acdc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ace0:	ldr	r1, [fp, #8]
   1ace4:	mul	r0, r0, r1
   1ace8:	str	r0, [fp, #-28]	; 0xffffffe4
   1acec:	b	1b3c8 <__assert_fail@plt+0xa2e0>
   1acf0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1acf4:	ldr	r1, [fp, #8]
   1acf8:	mul	r0, r0, r1
   1acfc:	str	r0, [fp, #-28]	; 0xffffffe4
   1ad00:	b	1b3cc <__assert_fail@plt+0xa2e4>
   1ad04:	ldr	r0, [fp, #8]
   1ad08:	cmp	r0, #0
   1ad0c:	bge	1ae1c <__assert_fail@plt+0x9d34>
   1ad10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ad14:	cmp	r0, #0
   1ad18:	bge	1ada4 <__assert_fail@plt+0x9cbc>
   1ad1c:	b	1ad3c <__assert_fail@plt+0x9c54>
   1ad20:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ad24:	ldr	r1, [fp, #8]
   1ad28:	mvn	r2, #0
   1ad2c:	udiv	r1, r2, r1
   1ad30:	cmp	r0, r1
   1ad34:	bcc	1aeb8 <__assert_fail@plt+0x9dd0>
   1ad38:	b	1aecc <__assert_fail@plt+0x9de4>
   1ad3c:	b	1ad40 <__assert_fail@plt+0x9c58>
   1ad40:	ldr	r0, [pc, #1712]	; 1b3f8 <__assert_fail@plt+0xa310>
   1ad44:	ldr	r1, [fp, #8]
   1ad48:	cmp	r1, r0
   1ad4c:	blt	1ad64 <__assert_fail@plt+0x9c7c>
   1ad50:	b	1ad70 <__assert_fail@plt+0x9c88>
   1ad54:	ldr	r0, [fp, #8]
   1ad58:	movw	r1, #0
   1ad5c:	cmp	r1, r0
   1ad60:	bge	1ad70 <__assert_fail@plt+0x9c88>
   1ad64:	movw	r0, #1
   1ad68:	str	r0, [sp, #136]	; 0x88
   1ad6c:	b	1ad88 <__assert_fail@plt+0x9ca0>
   1ad70:	ldr	r0, [fp, #8]
   1ad74:	movw	r1, #0
   1ad78:	sub	r0, r1, r0
   1ad7c:	mvn	r1, #0
   1ad80:	udiv	r0, r1, r0
   1ad84:	str	r0, [sp, #136]	; 0x88
   1ad88:	ldr	r0, [sp, #136]	; 0x88
   1ad8c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ad90:	mvn	r2, #0
   1ad94:	sub	r1, r2, r1
   1ad98:	cmp	r0, r1
   1ad9c:	bls	1aeb8 <__assert_fail@plt+0x9dd0>
   1ada0:	b	1aecc <__assert_fail@plt+0x9de4>
   1ada4:	b	1ada8 <__assert_fail@plt+0x9cc0>
   1ada8:	b	1ae00 <__assert_fail@plt+0x9d18>
   1adac:	b	1ae00 <__assert_fail@plt+0x9d18>
   1adb0:	ldr	r0, [fp, #8]
   1adb4:	cmn	r0, #1
   1adb8:	bne	1ae00 <__assert_fail@plt+0x9d18>
   1adbc:	b	1adc0 <__assert_fail@plt+0x9cd8>
   1adc0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1adc4:	add	r0, r0, #0
   1adc8:	movw	r1, #0
   1adcc:	cmp	r1, r0
   1add0:	blt	1aeb8 <__assert_fail@plt+0x9dd0>
   1add4:	b	1aecc <__assert_fail@plt+0x9de4>
   1add8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1addc:	movw	r1, #0
   1ade0:	cmp	r1, r0
   1ade4:	bge	1aecc <__assert_fail@plt+0x9de4>
   1ade8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1adec:	sub	r0, r0, #1
   1adf0:	mvn	r1, #0
   1adf4:	cmp	r1, r0
   1adf8:	blt	1aeb8 <__assert_fail@plt+0x9dd0>
   1adfc:	b	1aecc <__assert_fail@plt+0x9de4>
   1ae00:	ldr	r0, [fp, #8]
   1ae04:	movw	r1, #0
   1ae08:	sdiv	r0, r1, r0
   1ae0c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ae10:	cmp	r0, r1
   1ae14:	blt	1aeb8 <__assert_fail@plt+0x9dd0>
   1ae18:	b	1aecc <__assert_fail@plt+0x9de4>
   1ae1c:	ldr	r0, [fp, #8]
   1ae20:	cmp	r0, #0
   1ae24:	bne	1ae2c <__assert_fail@plt+0x9d44>
   1ae28:	b	1aecc <__assert_fail@plt+0x9de4>
   1ae2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ae30:	cmp	r0, #0
   1ae34:	bge	1aea0 <__assert_fail@plt+0x9db8>
   1ae38:	b	1ae3c <__assert_fail@plt+0x9d54>
   1ae3c:	b	1ae84 <__assert_fail@plt+0x9d9c>
   1ae40:	b	1ae84 <__assert_fail@plt+0x9d9c>
   1ae44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ae48:	cmn	r0, #1
   1ae4c:	bne	1ae84 <__assert_fail@plt+0x9d9c>
   1ae50:	b	1ae54 <__assert_fail@plt+0x9d6c>
   1ae54:	ldr	r0, [fp, #8]
   1ae58:	add	r0, r0, #0
   1ae5c:	movw	r1, #0
   1ae60:	cmp	r1, r0
   1ae64:	blt	1aeb8 <__assert_fail@plt+0x9dd0>
   1ae68:	b	1aecc <__assert_fail@plt+0x9de4>
   1ae6c:	ldr	r0, [fp, #8]
   1ae70:	sub	r0, r0, #1
   1ae74:	mvn	r1, #0
   1ae78:	cmp	r1, r0
   1ae7c:	blt	1aeb8 <__assert_fail@plt+0x9dd0>
   1ae80:	b	1aecc <__assert_fail@plt+0x9de4>
   1ae84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ae88:	movw	r1, #0
   1ae8c:	sdiv	r0, r1, r0
   1ae90:	ldr	r1, [fp, #8]
   1ae94:	cmp	r0, r1
   1ae98:	blt	1aeb8 <__assert_fail@plt+0x9dd0>
   1ae9c:	b	1aecc <__assert_fail@plt+0x9de4>
   1aea0:	ldr	r0, [fp, #8]
   1aea4:	mvn	r1, #0
   1aea8:	udiv	r0, r1, r0
   1aeac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1aeb0:	cmp	r0, r1
   1aeb4:	bcs	1aecc <__assert_fail@plt+0x9de4>
   1aeb8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1aebc:	ldr	r1, [fp, #8]
   1aec0:	mul	r0, r0, r1
   1aec4:	str	r0, [fp, #-28]	; 0xffffffe4
   1aec8:	b	1b3c8 <__assert_fail@plt+0xa2e0>
   1aecc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1aed0:	ldr	r1, [fp, #8]
   1aed4:	mul	r0, r0, r1
   1aed8:	str	r0, [fp, #-28]	; 0xffffffe4
   1aedc:	b	1b3cc <__assert_fail@plt+0xa2e4>
   1aee0:	b	1aee4 <__assert_fail@plt+0x9dfc>
   1aee4:	ldr	r0, [fp, #8]
   1aee8:	cmp	r0, #0
   1aeec:	bge	1b074 <__assert_fail@plt+0x9f8c>
   1aef0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1aef4:	cmp	r0, #0
   1aef8:	bge	1afe0 <__assert_fail@plt+0x9ef8>
   1aefc:	b	1af00 <__assert_fail@plt+0x9e18>
   1af00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1af04:	ldr	r1, [fp, #8]
   1af08:	asr	r3, r1, #31
   1af0c:	mvn	r2, #0
   1af10:	mvn	ip, #-2147483648	; 0x80000000
   1af14:	str	r0, [sp, #132]	; 0x84
   1af18:	mov	r0, r2
   1af1c:	str	r1, [sp, #128]	; 0x80
   1af20:	mov	r1, ip
   1af24:	ldr	r2, [sp, #128]	; 0x80
   1af28:	bl	1e61c <__assert_fail@plt+0xd534>
   1af2c:	ldr	r2, [sp, #132]	; 0x84
   1af30:	subs	r0, r2, r0
   1af34:	rscs	r1, r1, r2, asr #31
   1af38:	str	r0, [sp, #124]	; 0x7c
   1af3c:	str	r1, [sp, #120]	; 0x78
   1af40:	blt	1b154 <__assert_fail@plt+0xa06c>
   1af44:	b	1b168 <__assert_fail@plt+0xa080>
   1af48:	b	1af4c <__assert_fail@plt+0x9e64>
   1af4c:	ldr	r0, [pc, #1188]	; 1b3f8 <__assert_fail@plt+0xa310>
   1af50:	ldr	r1, [fp, #8]
   1af54:	cmp	r1, r0
   1af58:	blt	1af70 <__assert_fail@plt+0x9e88>
   1af5c:	b	1af84 <__assert_fail@plt+0x9e9c>
   1af60:	ldr	r0, [fp, #8]
   1af64:	movw	r1, #0
   1af68:	cmp	r1, r0
   1af6c:	bge	1af84 <__assert_fail@plt+0x9e9c>
   1af70:	mov	r0, #0
   1af74:	mvn	r1, #0
   1af78:	str	r1, [sp, #116]	; 0x74
   1af7c:	str	r0, [sp, #112]	; 0x70
   1af80:	b	1afb8 <__assert_fail@plt+0x9ed0>
   1af84:	ldr	r0, [fp, #8]
   1af88:	rsb	r0, r0, #0
   1af8c:	asr	r3, r0, #31
   1af90:	mvn	r1, #0
   1af94:	mvn	r2, #-2147483648	; 0x80000000
   1af98:	str	r0, [sp, #108]	; 0x6c
   1af9c:	mov	r0, r1
   1afa0:	mov	r1, r2
   1afa4:	ldr	r2, [sp, #108]	; 0x6c
   1afa8:	bl	1e61c <__assert_fail@plt+0xd534>
   1afac:	str	r0, [sp, #116]	; 0x74
   1afb0:	str	r1, [sp, #112]	; 0x70
   1afb4:	b	1afb8 <__assert_fail@plt+0x9ed0>
   1afb8:	ldr	r0, [sp, #112]	; 0x70
   1afbc:	ldr	r1, [sp, #116]	; 0x74
   1afc0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1afc4:	mvn	r2, r2
   1afc8:	subs	r1, r2, r1
   1afcc:	rscs	r0, r0, r2, asr #31
   1afd0:	str	r1, [sp, #104]	; 0x68
   1afd4:	str	r0, [sp, #100]	; 0x64
   1afd8:	bge	1b154 <__assert_fail@plt+0xa06c>
   1afdc:	b	1b168 <__assert_fail@plt+0xa080>
   1afe0:	ldr	r0, [fp, #8]
   1afe4:	cmn	r0, #1
   1afe8:	bne	1b034 <__assert_fail@plt+0x9f4c>
   1afec:	b	1aff0 <__assert_fail@plt+0x9f08>
   1aff0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1aff4:	mov	r1, #-2147483648	; 0x80000000
   1aff8:	add	r1, r1, r0, asr #31
   1affc:	rsbs	r0, r0, #0
   1b000:	rscs	r1, r1, #0
   1b004:	str	r0, [sp, #96]	; 0x60
   1b008:	str	r1, [sp, #92]	; 0x5c
   1b00c:	blt	1b154 <__assert_fail@plt+0xa06c>
   1b010:	b	1b168 <__assert_fail@plt+0xa080>
   1b014:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b018:	movw	r1, #0
   1b01c:	cmp	r1, r0
   1b020:	bge	1b168 <__assert_fail@plt+0xa080>
   1b024:	mov	r0, #0
   1b028:	cmp	r0, #0
   1b02c:	bne	1b154 <__assert_fail@plt+0xa06c>
   1b030:	b	1b168 <__assert_fail@plt+0xa080>
   1b034:	ldr	r0, [fp, #8]
   1b038:	asr	r3, r0, #31
   1b03c:	mov	r1, #0
   1b040:	mov	r2, #-2147483648	; 0x80000000
   1b044:	str	r0, [sp, #88]	; 0x58
   1b048:	mov	r0, r1
   1b04c:	mov	r1, r2
   1b050:	ldr	r2, [sp, #88]	; 0x58
   1b054:	bl	1e61c <__assert_fail@plt+0xd534>
   1b058:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1b05c:	subs	r0, r0, r2
   1b060:	sbcs	r1, r1, r2, asr #31
   1b064:	str	r0, [sp, #84]	; 0x54
   1b068:	str	r1, [sp, #80]	; 0x50
   1b06c:	blt	1b154 <__assert_fail@plt+0xa06c>
   1b070:	b	1b168 <__assert_fail@plt+0xa080>
   1b074:	ldr	r0, [fp, #8]
   1b078:	cmp	r0, #0
   1b07c:	bne	1b084 <__assert_fail@plt+0x9f9c>
   1b080:	b	1b168 <__assert_fail@plt+0xa080>
   1b084:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b088:	cmp	r0, #0
   1b08c:	bge	1b114 <__assert_fail@plt+0xa02c>
   1b090:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b094:	cmn	r0, #1
   1b098:	bne	1b0d4 <__assert_fail@plt+0x9fec>
   1b09c:	b	1b0a0 <__assert_fail@plt+0x9fb8>
   1b0a0:	ldr	r0, [fp, #8]
   1b0a4:	mov	r1, #-2147483648	; 0x80000000
   1b0a8:	add	r1, r1, r0, asr #31
   1b0ac:	rsbs	r0, r0, #0
   1b0b0:	rscs	r1, r1, #0
   1b0b4:	str	r0, [sp, #76]	; 0x4c
   1b0b8:	str	r1, [sp, #72]	; 0x48
   1b0bc:	blt	1b154 <__assert_fail@plt+0xa06c>
   1b0c0:	b	1b168 <__assert_fail@plt+0xa080>
   1b0c4:	mov	r0, #0
   1b0c8:	cmp	r0, #0
   1b0cc:	bne	1b154 <__assert_fail@plt+0xa06c>
   1b0d0:	b	1b168 <__assert_fail@plt+0xa080>
   1b0d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b0d8:	asr	r3, r0, #31
   1b0dc:	mov	r1, #0
   1b0e0:	mov	r2, #-2147483648	; 0x80000000
   1b0e4:	str	r0, [sp, #68]	; 0x44
   1b0e8:	mov	r0, r1
   1b0ec:	mov	r1, r2
   1b0f0:	ldr	r2, [sp, #68]	; 0x44
   1b0f4:	bl	1e61c <__assert_fail@plt+0xd534>
   1b0f8:	ldr	r2, [fp, #8]
   1b0fc:	subs	r0, r0, r2
   1b100:	sbcs	r1, r1, r2, asr #31
   1b104:	str	r0, [sp, #64]	; 0x40
   1b108:	str	r1, [sp, #60]	; 0x3c
   1b10c:	blt	1b154 <__assert_fail@plt+0xa06c>
   1b110:	b	1b168 <__assert_fail@plt+0xa080>
   1b114:	ldr	r0, [fp, #8]
   1b118:	asr	r3, r0, #31
   1b11c:	mvn	r1, #0
   1b120:	mvn	r2, #-2147483648	; 0x80000000
   1b124:	str	r0, [sp, #56]	; 0x38
   1b128:	mov	r0, r1
   1b12c:	mov	r1, r2
   1b130:	ldr	r2, [sp, #56]	; 0x38
   1b134:	bl	1e61c <__assert_fail@plt+0xd534>
   1b138:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1b13c:	subs	r0, r0, r2
   1b140:	sbcs	r1, r1, r2, asr #31
   1b144:	str	r0, [sp, #52]	; 0x34
   1b148:	str	r1, [sp, #48]	; 0x30
   1b14c:	bge	1b168 <__assert_fail@plt+0xa080>
   1b150:	b	1b154 <__assert_fail@plt+0xa06c>
   1b154:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b158:	ldr	r1, [fp, #8]
   1b15c:	mul	r0, r0, r1
   1b160:	str	r0, [fp, #-28]	; 0xffffffe4
   1b164:	b	1b3c8 <__assert_fail@plt+0xa2e0>
   1b168:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b16c:	ldr	r1, [fp, #8]
   1b170:	mul	r0, r0, r1
   1b174:	str	r0, [fp, #-28]	; 0xffffffe4
   1b178:	b	1b3cc <__assert_fail@plt+0xa2e4>
   1b17c:	ldr	r0, [fp, #8]
   1b180:	cmp	r0, #0
   1b184:	bge	1b2e4 <__assert_fail@plt+0xa1fc>
   1b188:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b18c:	cmp	r0, #0
   1b190:	bge	1b26c <__assert_fail@plt+0xa184>
   1b194:	b	1b1dc <__assert_fail@plt+0xa0f4>
   1b198:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b19c:	ldr	r1, [fp, #8]
   1b1a0:	asr	r3, r1, #31
   1b1a4:	mvn	r2, #0
   1b1a8:	str	r0, [sp, #44]	; 0x2c
   1b1ac:	mov	r0, r2
   1b1b0:	str	r1, [sp, #40]	; 0x28
   1b1b4:	mov	r1, r2
   1b1b8:	ldr	r2, [sp, #40]	; 0x28
   1b1bc:	bl	1e6f0 <__assert_fail@plt+0xd608>
   1b1c0:	ldr	r2, [sp, #44]	; 0x2c
   1b1c4:	subs	r0, r2, r0
   1b1c8:	rscs	r1, r1, r2, asr #31
   1b1cc:	str	r0, [sp, #36]	; 0x24
   1b1d0:	str	r1, [sp, #32]
   1b1d4:	bcc	1b3a0 <__assert_fail@plt+0xa2b8>
   1b1d8:	b	1b3b4 <__assert_fail@plt+0xa2cc>
   1b1dc:	b	1b1e0 <__assert_fail@plt+0xa0f8>
   1b1e0:	ldr	r0, [pc, #528]	; 1b3f8 <__assert_fail@plt+0xa310>
   1b1e4:	ldr	r1, [fp, #8]
   1b1e8:	cmp	r1, r0
   1b1ec:	blt	1b204 <__assert_fail@plt+0xa11c>
   1b1f0:	b	1b218 <__assert_fail@plt+0xa130>
   1b1f4:	ldr	r0, [fp, #8]
   1b1f8:	movw	r1, #0
   1b1fc:	cmp	r1, r0
   1b200:	bge	1b218 <__assert_fail@plt+0xa130>
   1b204:	mov	r0, #1
   1b208:	mvn	r1, #0
   1b20c:	str	r1, [sp, #28]
   1b210:	str	r0, [sp, #24]
   1b214:	b	1b244 <__assert_fail@plt+0xa15c>
   1b218:	ldr	r0, [fp, #8]
   1b21c:	rsb	r0, r0, #0
   1b220:	asr	r3, r0, #31
   1b224:	mvn	r1, #0
   1b228:	str	r0, [sp, #20]
   1b22c:	mov	r0, r1
   1b230:	ldr	r2, [sp, #20]
   1b234:	bl	1e6f0 <__assert_fail@plt+0xd608>
   1b238:	str	r0, [sp, #28]
   1b23c:	str	r1, [sp, #24]
   1b240:	b	1b244 <__assert_fail@plt+0xa15c>
   1b244:	ldr	r0, [sp, #24]
   1b248:	ldr	r1, [sp, #28]
   1b24c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1b250:	mvn	r2, r2
   1b254:	subs	r1, r2, r1
   1b258:	rscs	r0, r0, r2, asr #31
   1b25c:	str	r1, [sp, #16]
   1b260:	str	r0, [sp, #12]
   1b264:	bcs	1b3a0 <__assert_fail@plt+0xa2b8>
   1b268:	b	1b3b4 <__assert_fail@plt+0xa2cc>
   1b26c:	b	1b270 <__assert_fail@plt+0xa188>
   1b270:	b	1b2c8 <__assert_fail@plt+0xa1e0>
   1b274:	b	1b2c8 <__assert_fail@plt+0xa1e0>
   1b278:	ldr	r0, [fp, #8]
   1b27c:	cmn	r0, #1
   1b280:	bne	1b2c8 <__assert_fail@plt+0xa1e0>
   1b284:	b	1b288 <__assert_fail@plt+0xa1a0>
   1b288:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b28c:	add	r0, r0, #0
   1b290:	movw	r1, #0
   1b294:	cmp	r1, r0
   1b298:	blt	1b3a0 <__assert_fail@plt+0xa2b8>
   1b29c:	b	1b3b4 <__assert_fail@plt+0xa2cc>
   1b2a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b2a4:	movw	r1, #0
   1b2a8:	cmp	r1, r0
   1b2ac:	bge	1b3b4 <__assert_fail@plt+0xa2cc>
   1b2b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b2b4:	sub	r0, r0, #1
   1b2b8:	mvn	r1, #0
   1b2bc:	cmp	r1, r0
   1b2c0:	blt	1b3a0 <__assert_fail@plt+0xa2b8>
   1b2c4:	b	1b3b4 <__assert_fail@plt+0xa2cc>
   1b2c8:	ldr	r0, [fp, #8]
   1b2cc:	movw	r1, #0
   1b2d0:	sdiv	r0, r1, r0
   1b2d4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1b2d8:	cmp	r0, r1
   1b2dc:	blt	1b3a0 <__assert_fail@plt+0xa2b8>
   1b2e0:	b	1b3b4 <__assert_fail@plt+0xa2cc>
   1b2e4:	ldr	r0, [fp, #8]
   1b2e8:	cmp	r0, #0
   1b2ec:	bne	1b2f4 <__assert_fail@plt+0xa20c>
   1b2f0:	b	1b3b4 <__assert_fail@plt+0xa2cc>
   1b2f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b2f8:	cmp	r0, #0
   1b2fc:	bge	1b368 <__assert_fail@plt+0xa280>
   1b300:	b	1b304 <__assert_fail@plt+0xa21c>
   1b304:	b	1b34c <__assert_fail@plt+0xa264>
   1b308:	b	1b34c <__assert_fail@plt+0xa264>
   1b30c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b310:	cmn	r0, #1
   1b314:	bne	1b34c <__assert_fail@plt+0xa264>
   1b318:	b	1b31c <__assert_fail@plt+0xa234>
   1b31c:	ldr	r0, [fp, #8]
   1b320:	add	r0, r0, #0
   1b324:	movw	r1, #0
   1b328:	cmp	r1, r0
   1b32c:	blt	1b3a0 <__assert_fail@plt+0xa2b8>
   1b330:	b	1b3b4 <__assert_fail@plt+0xa2cc>
   1b334:	ldr	r0, [fp, #8]
   1b338:	sub	r0, r0, #1
   1b33c:	mvn	r1, #0
   1b340:	cmp	r1, r0
   1b344:	blt	1b3a0 <__assert_fail@plt+0xa2b8>
   1b348:	b	1b3b4 <__assert_fail@plt+0xa2cc>
   1b34c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b350:	movw	r1, #0
   1b354:	sdiv	r0, r1, r0
   1b358:	ldr	r1, [fp, #8]
   1b35c:	cmp	r0, r1
   1b360:	blt	1b3a0 <__assert_fail@plt+0xa2b8>
   1b364:	b	1b3b4 <__assert_fail@plt+0xa2cc>
   1b368:	ldr	r0, [fp, #8]
   1b36c:	asr	r3, r0, #31
   1b370:	mvn	r1, #0
   1b374:	str	r0, [sp, #8]
   1b378:	mov	r0, r1
   1b37c:	ldr	r2, [sp, #8]
   1b380:	bl	1e6f0 <__assert_fail@plt+0xd608>
   1b384:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1b388:	subs	r0, r0, r2
   1b38c:	sbcs	r1, r1, r2, asr #31
   1b390:	str	r0, [sp, #4]
   1b394:	str	r1, [sp]
   1b398:	bcs	1b3b4 <__assert_fail@plt+0xa2cc>
   1b39c:	b	1b3a0 <__assert_fail@plt+0xa2b8>
   1b3a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b3a4:	ldr	r1, [fp, #8]
   1b3a8:	mul	r0, r0, r1
   1b3ac:	str	r0, [fp, #-28]	; 0xffffffe4
   1b3b0:	b	1b3c8 <__assert_fail@plt+0xa2e0>
   1b3b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b3b8:	ldr	r1, [fp, #8]
   1b3bc:	mul	r0, r0, r1
   1b3c0:	str	r0, [fp, #-28]	; 0xffffffe4
   1b3c4:	b	1b3cc <__assert_fail@plt+0xa2e4>
   1b3c8:	bl	1b5a4 <__assert_fail@plt+0xa4bc>
   1b3cc:	ldr	r0, [fp, #-4]
   1b3d0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1b3d4:	bl	18860 <__assert_fail@plt+0x7778>
   1b3d8:	str	r0, [fp, #-4]
   1b3dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b3e0:	ldr	r1, [fp, #-8]
   1b3e4:	str	r0, [r1]
   1b3e8:	ldr	r0, [fp, #-4]
   1b3ec:	mov	sp, fp
   1b3f0:	pop	{fp, pc}
   1b3f4:	svcvc	0x00ffffff
   1b3f8:	andhi	r0, r0, r1
   1b3fc:	andhi	r0, r0, r0
   1b400:			; <UNDEFINED> instruction: 0xffff8000
   1b404:	push	{fp, lr}
   1b408:	mov	fp, sp
   1b40c:	sub	sp, sp, #8
   1b410:	str	r0, [sp, #4]
   1b414:	ldr	r0, [sp, #4]
   1b418:	movw	r1, #1
   1b41c:	bl	1b428 <__assert_fail@plt+0xa340>
   1b420:	mov	sp, fp
   1b424:	pop	{fp, pc}
   1b428:	push	{fp, lr}
   1b42c:	mov	fp, sp
   1b430:	sub	sp, sp, #8
   1b434:	str	r0, [sp, #4]
   1b438:	str	r1, [sp]
   1b43c:	ldr	r0, [sp, #4]
   1b440:	ldr	r1, [sp]
   1b444:	bl	1d960 <__assert_fail@plt+0xc878>
   1b448:	bl	187ec <__assert_fail@plt+0x7704>
   1b44c:	mov	sp, fp
   1b450:	pop	{fp, pc}
   1b454:	push	{fp, lr}
   1b458:	mov	fp, sp
   1b45c:	sub	sp, sp, #8
   1b460:	str	r0, [sp, #4]
   1b464:	ldr	r0, [sp, #4]
   1b468:	movw	r1, #1
   1b46c:	bl	1b478 <__assert_fail@plt+0xa390>
   1b470:	mov	sp, fp
   1b474:	pop	{fp, pc}
   1b478:	push	{fp, lr}
   1b47c:	mov	fp, sp
   1b480:	sub	sp, sp, #8
   1b484:	str	r0, [sp, #4]
   1b488:	str	r1, [sp]
   1b48c:	ldr	r0, [sp, #4]
   1b490:	ldr	r1, [sp]
   1b494:	bl	14280 <__assert_fail@plt+0x3198>
   1b498:	bl	187ec <__assert_fail@plt+0x7704>
   1b49c:	mov	sp, fp
   1b4a0:	pop	{fp, pc}
   1b4a4:	push	{fp, lr}
   1b4a8:	mov	fp, sp
   1b4ac:	sub	sp, sp, #16
   1b4b0:	str	r0, [fp, #-4]
   1b4b4:	str	r1, [sp, #8]
   1b4b8:	ldr	r0, [sp, #8]
   1b4bc:	bl	187c8 <__assert_fail@plt+0x76e0>
   1b4c0:	ldr	r1, [fp, #-4]
   1b4c4:	ldr	r2, [sp, #8]
   1b4c8:	str	r0, [sp, #4]
   1b4cc:	bl	10ee4 <memcpy@plt>
   1b4d0:	ldr	r0, [sp, #4]
   1b4d4:	mov	sp, fp
   1b4d8:	pop	{fp, pc}
   1b4dc:	push	{fp, lr}
   1b4e0:	mov	fp, sp
   1b4e4:	sub	sp, sp, #16
   1b4e8:	str	r0, [fp, #-4]
   1b4ec:	str	r1, [sp, #8]
   1b4f0:	ldr	r0, [sp, #8]
   1b4f4:	bl	1881c <__assert_fail@plt+0x7734>
   1b4f8:	ldr	r1, [fp, #-4]
   1b4fc:	ldr	r2, [sp, #8]
   1b500:	str	r0, [sp, #4]
   1b504:	bl	10ee4 <memcpy@plt>
   1b508:	ldr	r0, [sp, #4]
   1b50c:	mov	sp, fp
   1b510:	pop	{fp, pc}
   1b514:	push	{fp, lr}
   1b518:	mov	fp, sp
   1b51c:	sub	sp, sp, #16
   1b520:	str	r0, [fp, #-4]
   1b524:	str	r1, [sp, #8]
   1b528:	ldr	r0, [sp, #8]
   1b52c:	add	r0, r0, #1
   1b530:	bl	1881c <__assert_fail@plt+0x7734>
   1b534:	str	r0, [sp, #4]
   1b538:	ldr	r0, [sp, #4]
   1b53c:	ldr	r1, [sp, #8]
   1b540:	add	r0, r0, r1
   1b544:	movw	r1, #0
   1b548:	strb	r1, [r0]
   1b54c:	ldr	r0, [sp, #4]
   1b550:	ldr	r1, [fp, #-4]
   1b554:	ldr	r2, [sp, #8]
   1b558:	str	r0, [sp]
   1b55c:	bl	10ee4 <memcpy@plt>
   1b560:	ldr	r0, [sp]
   1b564:	mov	sp, fp
   1b568:	pop	{fp, pc}
   1b56c:	push	{fp, lr}
   1b570:	mov	fp, sp
   1b574:	sub	sp, sp, #8
   1b578:	str	r0, [sp, #4]
   1b57c:	ldr	r0, [sp, #4]
   1b580:	ldr	r1, [sp, #4]
   1b584:	str	r0, [sp]
   1b588:	mov	r0, r1
   1b58c:	bl	10fec <strlen@plt>
   1b590:	add	r1, r0, #1
   1b594:	ldr	r0, [sp]
   1b598:	bl	1b4a4 <__assert_fail@plt+0xa3bc>
   1b59c:	mov	sp, fp
   1b5a0:	pop	{fp, pc}
   1b5a4:	push	{fp, lr}
   1b5a8:	mov	fp, sp
   1b5ac:	sub	sp, sp, #8
   1b5b0:	movw	r0, #244	; 0xf4
   1b5b4:	movt	r0, #3
   1b5b8:	ldr	r0, [r0]
   1b5bc:	movw	r1, #62568	; 0xf468
   1b5c0:	movt	r1, #1
   1b5c4:	str	r0, [sp, #4]
   1b5c8:	mov	r0, r1
   1b5cc:	bl	10fe0 <gettext@plt>
   1b5d0:	ldr	r1, [sp, #4]
   1b5d4:	str	r0, [sp]
   1b5d8:	mov	r0, r1
   1b5dc:	movw	r1, #0
   1b5e0:	movw	r2, #60416	; 0xec00
   1b5e4:	movt	r2, #1
   1b5e8:	ldr	r3, [sp]
   1b5ec:	bl	10f80 <error@plt>
   1b5f0:	bl	110d0 <abort@plt>
   1b5f4:	bx	lr
   1b5f8:	push	{fp, lr}
   1b5fc:	mov	fp, sp
   1b600:	sub	sp, sp, #8
   1b604:	str	r0, [sp, #4]
   1b608:	str	r1, [sp]
   1b60c:	ldr	r0, [sp, #4]
   1b610:	ldr	r1, [sp]
   1b614:	bl	1db28 <__assert_fail@plt+0xca40>
   1b618:	cmp	r0, #0
   1b61c:	bge	1b624 <__assert_fail@plt+0xa53c>
   1b620:	bl	1b5f4 <__assert_fail@plt+0xa50c>
   1b624:	mov	sp, fp
   1b628:	pop	{fp, pc}
   1b62c:	push	{fp, lr}
   1b630:	mov	fp, sp
   1b634:	sub	sp, sp, #80	; 0x50
   1b638:	ldr	ip, [fp, #8]
   1b63c:	str	r0, [fp, #-8]
   1b640:	str	r1, [fp, #-12]
   1b644:	str	r2, [fp, #-16]
   1b648:	str	r3, [fp, #-20]	; 0xffffffec
   1b64c:	movw	r0, #0
   1b650:	str	r0, [sp, #36]	; 0x24
   1b654:	ldr	r1, [fp, #-16]
   1b658:	cmp	r0, r1
   1b65c:	str	ip, [sp, #20]
   1b660:	bgt	1b674 <__assert_fail@plt+0xa58c>
   1b664:	ldr	r0, [fp, #-16]
   1b668:	cmp	r0, #36	; 0x24
   1b66c:	bgt	1b674 <__assert_fail@plt+0xa58c>
   1b670:	b	1b694 <__assert_fail@plt+0xa5ac>
   1b674:	movw	r0, #62585	; 0xf479
   1b678:	movt	r0, #1
   1b67c:	movw	r1, #62623	; 0xf49f
   1b680:	movt	r1, #1
   1b684:	movw	r2, #85	; 0x55
   1b688:	movw	r3, #62639	; 0xf4af
   1b68c:	movt	r3, #1
   1b690:	bl	110e8 <__assert_fail@plt>
   1b694:	ldr	r0, [fp, #-12]
   1b698:	movw	r1, #0
   1b69c:	cmp	r0, r1
   1b6a0:	beq	1b6b0 <__assert_fail@plt+0xa5c8>
   1b6a4:	ldr	r0, [fp, #-12]
   1b6a8:	str	r0, [sp, #16]
   1b6ac:	b	1b6bc <__assert_fail@plt+0xa5d4>
   1b6b0:	sub	r0, fp, #24
   1b6b4:	str	r0, [sp, #16]
   1b6b8:	b	1b6bc <__assert_fail@plt+0xa5d4>
   1b6bc:	ldr	r0, [sp, #16]
   1b6c0:	str	r0, [fp, #-28]	; 0xffffffe4
   1b6c4:	bl	11010 <__errno_location@plt>
   1b6c8:	mov	lr, #0
   1b6cc:	str	lr, [r0]
   1b6d0:	ldr	r0, [fp, #-8]
   1b6d4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1b6d8:	ldr	r2, [fp, #-16]
   1b6dc:	bl	1104c <strtoimax@plt>
   1b6e0:	str	r1, [sp, #44]	; 0x2c
   1b6e4:	str	r0, [sp, #40]	; 0x28
   1b6e8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1b6ec:	ldr	r0, [r0]
   1b6f0:	ldr	r1, [fp, #-8]
   1b6f4:	cmp	r0, r1
   1b6f8:	bne	1b764 <__assert_fail@plt+0xa67c>
   1b6fc:	ldr	r0, [fp, #8]
   1b700:	movw	r1, #0
   1b704:	cmp	r0, r1
   1b708:	beq	1b754 <__assert_fail@plt+0xa66c>
   1b70c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1b710:	ldr	r0, [r0]
   1b714:	ldrb	r0, [r0]
   1b718:	cmp	r0, #0
   1b71c:	beq	1b754 <__assert_fail@plt+0xa66c>
   1b720:	ldr	r0, [fp, #8]
   1b724:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1b728:	ldr	r1, [r1]
   1b72c:	ldrb	r1, [r1]
   1b730:	bl	10ff8 <strchr@plt>
   1b734:	movw	r1, #0
   1b738:	cmp	r0, r1
   1b73c:	beq	1b754 <__assert_fail@plt+0xa66c>
   1b740:	mov	r0, #0
   1b744:	str	r0, [sp, #44]	; 0x2c
   1b748:	mov	r0, #1
   1b74c:	str	r0, [sp, #40]	; 0x28
   1b750:	b	1b760 <__assert_fail@plt+0xa678>
   1b754:	movw	r0, #4
   1b758:	str	r0, [fp, #-4]
   1b75c:	b	1bc4c <__assert_fail@plt+0xab64>
   1b760:	b	1b79c <__assert_fail@plt+0xa6b4>
   1b764:	bl	11010 <__errno_location@plt>
   1b768:	ldr	r0, [r0]
   1b76c:	cmp	r0, #0
   1b770:	beq	1b798 <__assert_fail@plt+0xa6b0>
   1b774:	bl	11010 <__errno_location@plt>
   1b778:	ldr	r0, [r0]
   1b77c:	cmp	r0, #34	; 0x22
   1b780:	beq	1b790 <__assert_fail@plt+0xa6a8>
   1b784:	movw	r0, #4
   1b788:	str	r0, [fp, #-4]
   1b78c:	b	1bc4c <__assert_fail@plt+0xab64>
   1b790:	movw	r0, #1
   1b794:	str	r0, [sp, #36]	; 0x24
   1b798:	b	1b79c <__assert_fail@plt+0xa6b4>
   1b79c:	ldr	r0, [fp, #8]
   1b7a0:	movw	r1, #0
   1b7a4:	cmp	r0, r1
   1b7a8:	bne	1b7cc <__assert_fail@plt+0xa6e4>
   1b7ac:	ldr	r0, [sp, #40]	; 0x28
   1b7b0:	ldr	r1, [sp, #44]	; 0x2c
   1b7b4:	ldr	r2, [fp, #-20]	; 0xffffffec
   1b7b8:	str	r1, [r2, #4]
   1b7bc:	str	r0, [r2]
   1b7c0:	ldr	r0, [sp, #36]	; 0x24
   1b7c4:	str	r0, [fp, #-4]
   1b7c8:	b	1bc4c <__assert_fail@plt+0xab64>
   1b7cc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1b7d0:	ldr	r0, [r0]
   1b7d4:	ldrb	r0, [r0]
   1b7d8:	cmp	r0, #0
   1b7dc:	beq	1bc30 <__assert_fail@plt+0xab48>
   1b7e0:	movw	r0, #1024	; 0x400
   1b7e4:	str	r0, [sp, #32]
   1b7e8:	movw	r0, #1
   1b7ec:	str	r0, [sp, #28]
   1b7f0:	ldr	r0, [fp, #8]
   1b7f4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1b7f8:	ldr	r1, [r1]
   1b7fc:	ldrb	r1, [r1]
   1b800:	bl	10ff8 <strchr@plt>
   1b804:	movw	r1, #0
   1b808:	cmp	r0, r1
   1b80c:	bne	1b834 <__assert_fail@plt+0xa74c>
   1b810:	ldr	r0, [sp, #40]	; 0x28
   1b814:	ldr	r1, [sp, #44]	; 0x2c
   1b818:	ldr	r2, [fp, #-20]	; 0xffffffec
   1b81c:	str	r1, [r2, #4]
   1b820:	str	r0, [r2]
   1b824:	ldr	r0, [sp, #36]	; 0x24
   1b828:	orr	r0, r0, #2
   1b82c:	str	r0, [fp, #-4]
   1b830:	b	1bc4c <__assert_fail@plt+0xab64>
   1b834:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1b838:	ldr	r0, [r0]
   1b83c:	ldrb	r0, [r0]
   1b840:	sub	r0, r0, #69	; 0x45
   1b844:	cmp	r0, #47	; 0x2f
   1b848:	str	r0, [sp, #12]
   1b84c:	bhi	1b9b8 <__assert_fail@plt+0xa8d0>
   1b850:	add	r0, pc, #8
   1b854:	ldr	r1, [sp, #12]
   1b858:	ldr	r0, [r0, r1, lsl #2]
   1b85c:	mov	pc, r0
   1b860:	andeq	fp, r1, r0, lsr #18
   1b864:			; <UNDEFINED> instruction: 0x0001b9b8
   1b868:	andeq	fp, r1, r0, lsr #18
   1b86c:			; <UNDEFINED> instruction: 0x0001b9b8
   1b870:			; <UNDEFINED> instruction: 0x0001b9b8
   1b874:			; <UNDEFINED> instruction: 0x0001b9b8
   1b878:	andeq	fp, r1, r0, lsr #18
   1b87c:			; <UNDEFINED> instruction: 0x0001b9b8
   1b880:	andeq	fp, r1, r0, lsr #18
   1b884:			; <UNDEFINED> instruction: 0x0001b9b8
   1b888:			; <UNDEFINED> instruction: 0x0001b9b8
   1b88c:	andeq	fp, r1, r0, lsr #18
   1b890:			; <UNDEFINED> instruction: 0x0001b9b8
   1b894:			; <UNDEFINED> instruction: 0x0001b9b8
   1b898:			; <UNDEFINED> instruction: 0x0001b9b8
   1b89c:	andeq	fp, r1, r0, lsr #18
   1b8a0:			; <UNDEFINED> instruction: 0x0001b9b8
   1b8a4:			; <UNDEFINED> instruction: 0x0001b9b8
   1b8a8:			; <UNDEFINED> instruction: 0x0001b9b8
   1b8ac:			; <UNDEFINED> instruction: 0x0001b9b8
   1b8b0:	andeq	fp, r1, r0, lsr #18
   1b8b4:	andeq	fp, r1, r0, lsr #18
   1b8b8:			; <UNDEFINED> instruction: 0x0001b9b8
   1b8bc:			; <UNDEFINED> instruction: 0x0001b9b8
   1b8c0:			; <UNDEFINED> instruction: 0x0001b9b8
   1b8c4:			; <UNDEFINED> instruction: 0x0001b9b8
   1b8c8:			; <UNDEFINED> instruction: 0x0001b9b8
   1b8cc:			; <UNDEFINED> instruction: 0x0001b9b8
   1b8d0:			; <UNDEFINED> instruction: 0x0001b9b8
   1b8d4:			; <UNDEFINED> instruction: 0x0001b9b8
   1b8d8:			; <UNDEFINED> instruction: 0x0001b9b8
   1b8dc:			; <UNDEFINED> instruction: 0x0001b9b8
   1b8e0:			; <UNDEFINED> instruction: 0x0001b9b8
   1b8e4:			; <UNDEFINED> instruction: 0x0001b9b8
   1b8e8:	andeq	fp, r1, r0, lsr #18
   1b8ec:			; <UNDEFINED> instruction: 0x0001b9b8
   1b8f0:			; <UNDEFINED> instruction: 0x0001b9b8
   1b8f4:			; <UNDEFINED> instruction: 0x0001b9b8
   1b8f8:	andeq	fp, r1, r0, lsr #18
   1b8fc:			; <UNDEFINED> instruction: 0x0001b9b8
   1b900:	andeq	fp, r1, r0, lsr #18
   1b904:			; <UNDEFINED> instruction: 0x0001b9b8
   1b908:			; <UNDEFINED> instruction: 0x0001b9b8
   1b90c:			; <UNDEFINED> instruction: 0x0001b9b8
   1b910:			; <UNDEFINED> instruction: 0x0001b9b8
   1b914:			; <UNDEFINED> instruction: 0x0001b9b8
   1b918:			; <UNDEFINED> instruction: 0x0001b9b8
   1b91c:	andeq	fp, r1, r0, lsr #18
   1b920:	ldr	r0, [fp, #8]
   1b924:	movw	r1, #48	; 0x30
   1b928:	bl	10ff8 <strchr@plt>
   1b92c:	movw	r1, #0
   1b930:	cmp	r0, r1
   1b934:	beq	1b9b4 <__assert_fail@plt+0xa8cc>
   1b938:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1b93c:	ldr	r0, [r0]
   1b940:	ldrb	r0, [r0, #1]
   1b944:	mov	r1, r0
   1b948:	cmp	r0, #66	; 0x42
   1b94c:	str	r1, [sp, #8]
   1b950:	beq	1b99c <__assert_fail@plt+0xa8b4>
   1b954:	b	1b958 <__assert_fail@plt+0xa870>
   1b958:	ldr	r0, [sp, #8]
   1b95c:	cmp	r0, #68	; 0x44
   1b960:	beq	1b99c <__assert_fail@plt+0xa8b4>
   1b964:	b	1b968 <__assert_fail@plt+0xa880>
   1b968:	ldr	r0, [sp, #8]
   1b96c:	cmp	r0, #105	; 0x69
   1b970:	bne	1b9b0 <__assert_fail@plt+0xa8c8>
   1b974:	b	1b978 <__assert_fail@plt+0xa890>
   1b978:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1b97c:	ldr	r0, [r0]
   1b980:	ldrb	r0, [r0, #2]
   1b984:	cmp	r0, #66	; 0x42
   1b988:	bne	1b998 <__assert_fail@plt+0xa8b0>
   1b98c:	ldr	r0, [sp, #28]
   1b990:	add	r0, r0, #2
   1b994:	str	r0, [sp, #28]
   1b998:	b	1b9b0 <__assert_fail@plt+0xa8c8>
   1b99c:	movw	r0, #1000	; 0x3e8
   1b9a0:	str	r0, [sp, #32]
   1b9a4:	ldr	r0, [sp, #28]
   1b9a8:	add	r0, r0, #1
   1b9ac:	str	r0, [sp, #28]
   1b9b0:	b	1b9b4 <__assert_fail@plt+0xa8cc>
   1b9b4:	b	1b9b8 <__assert_fail@plt+0xa8d0>
   1b9b8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1b9bc:	ldr	r0, [r0]
   1b9c0:	ldrb	r0, [r0]
   1b9c4:	sub	r0, r0, #66	; 0x42
   1b9c8:	cmp	r0, #53	; 0x35
   1b9cc:	str	r0, [sp, #4]
   1b9d0:	bhi	1bbc4 <__assert_fail@plt+0xaadc>
   1b9d4:	add	r0, pc, #8
   1b9d8:	ldr	r1, [sp, #4]
   1b9dc:	ldr	r0, [r0, r1, lsl #2]
   1b9e0:	mov	pc, r0
   1b9e4:	ldrdeq	fp, [r1], -r0
   1b9e8:	andeq	fp, r1, r4, asr #23
   1b9ec:	andeq	fp, r1, r4, asr #23
   1b9f0:	strdeq	fp, [r1], -r0
   1b9f4:	andeq	fp, r1, r4, asr #23
   1b9f8:	andeq	fp, r1, r8, lsl #22
   1b9fc:	andeq	fp, r1, r4, asr #23
   1ba00:	andeq	fp, r1, r4, asr #23
   1ba04:	andeq	fp, r1, r4, asr #23
   1ba08:	andeq	fp, r1, r0, lsr #22
   1ba0c:	andeq	fp, r1, r4, asr #23
   1ba10:	andeq	fp, r1, r8, lsr fp
   1ba14:	andeq	fp, r1, r4, asr #23
   1ba18:	andeq	fp, r1, r4, asr #23
   1ba1c:	andeq	fp, r1, r0, asr fp
   1ba20:	andeq	fp, r1, r4, asr #23
   1ba24:	andeq	fp, r1, r4, asr #23
   1ba28:	andeq	fp, r1, r4, asr #23
   1ba2c:	andeq	fp, r1, r8, ror #22
   1ba30:	andeq	fp, r1, r4, asr #23
   1ba34:	andeq	fp, r1, r4, asr #23
   1ba38:	andeq	fp, r1, r4, asr #23
   1ba3c:	andeq	fp, r1, r4, asr #23
   1ba40:	muleq	r1, r4, fp
   1ba44:	andeq	fp, r1, ip, lsr #23
   1ba48:	andeq	fp, r1, r4, asr #23
   1ba4c:	andeq	fp, r1, r4, asr #23
   1ba50:	andeq	fp, r1, r4, asr #23
   1ba54:	andeq	fp, r1, r4, asr #23
   1ba58:	andeq	fp, r1, r4, asr #23
   1ba5c:	andeq	fp, r1, r4, asr #23
   1ba60:	andeq	fp, r1, r4, asr #23
   1ba64:			; <UNDEFINED> instruction: 0x0001babc
   1ba68:	andeq	fp, r1, r4, ror #21
   1ba6c:	andeq	fp, r1, r4, asr #23
   1ba70:	andeq	fp, r1, r4, asr #23
   1ba74:	andeq	fp, r1, r4, asr #23
   1ba78:	andeq	fp, r1, r8, lsl #22
   1ba7c:	andeq	fp, r1, r4, asr #23
   1ba80:	andeq	fp, r1, r4, asr #23
   1ba84:	andeq	fp, r1, r4, asr #23
   1ba88:	andeq	fp, r1, r0, lsr #22
   1ba8c:	andeq	fp, r1, r4, asr #23
   1ba90:	andeq	fp, r1, r8, lsr fp
   1ba94:	andeq	fp, r1, r4, asr #23
   1ba98:	andeq	fp, r1, r4, asr #23
   1ba9c:	andeq	fp, r1, r4, asr #23
   1baa0:	andeq	fp, r1, r4, asr #23
   1baa4:	andeq	fp, r1, r4, asr #23
   1baa8:	andeq	fp, r1, r4, asr #23
   1baac:	andeq	fp, r1, r8, ror #22
   1bab0:	andeq	fp, r1, r4, asr #23
   1bab4:	andeq	fp, r1, r4, asr #23
   1bab8:	andeq	fp, r1, r0, lsl #23
   1babc:	add	r0, sp, #40	; 0x28
   1bac0:	movw	r1, #512	; 0x200
   1bac4:	bl	1bc58 <__assert_fail@plt+0xab70>
   1bac8:	str	r0, [sp, #24]
   1bacc:	b	1bbe8 <__assert_fail@plt+0xab00>
   1bad0:	add	r0, sp, #40	; 0x28
   1bad4:	movw	r1, #1024	; 0x400
   1bad8:	bl	1bc58 <__assert_fail@plt+0xab70>
   1badc:	str	r0, [sp, #24]
   1bae0:	b	1bbe8 <__assert_fail@plt+0xab00>
   1bae4:	movw	r0, #0
   1bae8:	str	r0, [sp, #24]
   1baec:	b	1bbe8 <__assert_fail@plt+0xab00>
   1baf0:	ldr	r1, [sp, #32]
   1baf4:	add	r0, sp, #40	; 0x28
   1baf8:	movw	r2, #6
   1bafc:	bl	1d900 <__assert_fail@plt+0xc818>
   1bb00:	str	r0, [sp, #24]
   1bb04:	b	1bbe8 <__assert_fail@plt+0xab00>
   1bb08:	ldr	r1, [sp, #32]
   1bb0c:	add	r0, sp, #40	; 0x28
   1bb10:	movw	r2, #3
   1bb14:	bl	1d900 <__assert_fail@plt+0xc818>
   1bb18:	str	r0, [sp, #24]
   1bb1c:	b	1bbe8 <__assert_fail@plt+0xab00>
   1bb20:	ldr	r1, [sp, #32]
   1bb24:	add	r0, sp, #40	; 0x28
   1bb28:	movw	r2, #1
   1bb2c:	bl	1d900 <__assert_fail@plt+0xc818>
   1bb30:	str	r0, [sp, #24]
   1bb34:	b	1bbe8 <__assert_fail@plt+0xab00>
   1bb38:	ldr	r1, [sp, #32]
   1bb3c:	add	r0, sp, #40	; 0x28
   1bb40:	movw	r2, #2
   1bb44:	bl	1d900 <__assert_fail@plt+0xc818>
   1bb48:	str	r0, [sp, #24]
   1bb4c:	b	1bbe8 <__assert_fail@plt+0xab00>
   1bb50:	ldr	r1, [sp, #32]
   1bb54:	add	r0, sp, #40	; 0x28
   1bb58:	movw	r2, #5
   1bb5c:	bl	1d900 <__assert_fail@plt+0xc818>
   1bb60:	str	r0, [sp, #24]
   1bb64:	b	1bbe8 <__assert_fail@plt+0xab00>
   1bb68:	ldr	r1, [sp, #32]
   1bb6c:	add	r0, sp, #40	; 0x28
   1bb70:	movw	r2, #4
   1bb74:	bl	1d900 <__assert_fail@plt+0xc818>
   1bb78:	str	r0, [sp, #24]
   1bb7c:	b	1bbe8 <__assert_fail@plt+0xab00>
   1bb80:	add	r0, sp, #40	; 0x28
   1bb84:	movw	r1, #2
   1bb88:	bl	1bc58 <__assert_fail@plt+0xab70>
   1bb8c:	str	r0, [sp, #24]
   1bb90:	b	1bbe8 <__assert_fail@plt+0xab00>
   1bb94:	ldr	r1, [sp, #32]
   1bb98:	add	r0, sp, #40	; 0x28
   1bb9c:	movw	r2, #8
   1bba0:	bl	1d900 <__assert_fail@plt+0xc818>
   1bba4:	str	r0, [sp, #24]
   1bba8:	b	1bbe8 <__assert_fail@plt+0xab00>
   1bbac:	ldr	r1, [sp, #32]
   1bbb0:	add	r0, sp, #40	; 0x28
   1bbb4:	movw	r2, #7
   1bbb8:	bl	1d900 <__assert_fail@plt+0xc818>
   1bbbc:	str	r0, [sp, #24]
   1bbc0:	b	1bbe8 <__assert_fail@plt+0xab00>
   1bbc4:	ldr	r0, [sp, #40]	; 0x28
   1bbc8:	ldr	r1, [sp, #44]	; 0x2c
   1bbcc:	ldr	r2, [fp, #-20]	; 0xffffffec
   1bbd0:	str	r1, [r2, #4]
   1bbd4:	str	r0, [r2]
   1bbd8:	ldr	r0, [sp, #36]	; 0x24
   1bbdc:	orr	r0, r0, #2
   1bbe0:	str	r0, [fp, #-4]
   1bbe4:	b	1bc4c <__assert_fail@plt+0xab64>
   1bbe8:	ldr	r0, [sp, #24]
   1bbec:	ldr	r1, [sp, #36]	; 0x24
   1bbf0:	orr	r0, r1, r0
   1bbf4:	str	r0, [sp, #36]	; 0x24
   1bbf8:	ldr	r0, [sp, #28]
   1bbfc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1bc00:	ldr	r2, [r1]
   1bc04:	add	r0, r2, r0
   1bc08:	str	r0, [r1]
   1bc0c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1bc10:	ldr	r0, [r0]
   1bc14:	ldrsb	r0, [r0]
   1bc18:	cmp	r0, #0
   1bc1c:	beq	1bc2c <__assert_fail@plt+0xab44>
   1bc20:	ldr	r0, [sp, #36]	; 0x24
   1bc24:	orr	r0, r0, #2
   1bc28:	str	r0, [sp, #36]	; 0x24
   1bc2c:	b	1bc30 <__assert_fail@plt+0xab48>
   1bc30:	ldr	r0, [sp, #40]	; 0x28
   1bc34:	ldr	r1, [sp, #44]	; 0x2c
   1bc38:	ldr	r2, [fp, #-20]	; 0xffffffec
   1bc3c:	str	r1, [r2, #4]
   1bc40:	str	r0, [r2]
   1bc44:	ldr	r0, [sp, #36]	; 0x24
   1bc48:	str	r0, [fp, #-4]
   1bc4c:	ldr	r0, [fp, #-4]
   1bc50:	mov	sp, fp
   1bc54:	pop	{fp, pc}
   1bc58:	push	{fp, lr}
   1bc5c:	mov	fp, sp
   1bc60:	sub	sp, sp, #752	; 0x2f0
   1bc64:	str	r0, [fp, #-8]
   1bc68:	str	r1, [fp, #-12]
   1bc6c:	b	1c1f4 <__assert_fail@plt+0xb10c>
   1bc70:	b	1bc74 <__assert_fail@plt+0xab8c>
   1bc74:	ldr	r0, [fp, #-12]
   1bc78:	cmp	r0, #0
   1bc7c:	bge	1be0c <__assert_fail@plt+0xad24>
   1bc80:	ldr	r0, [fp, #-8]
   1bc84:	ldr	r0, [r0, #4]
   1bc88:	cmn	r0, #1
   1bc8c:	bgt	1bd44 <__assert_fail@plt+0xac5c>
   1bc90:	b	1bc94 <__assert_fail@plt+0xabac>
   1bc94:	b	1bc98 <__assert_fail@plt+0xabb0>
   1bc98:	ldr	r0, [fp, #-8]
   1bc9c:	ldr	r1, [r0]
   1bca0:	ldr	r0, [r0, #4]
   1bca4:	ldr	r2, [fp, #-12]
   1bca8:	mov	r3, #127	; 0x7f
   1bcac:	sdiv	r2, r3, r2
   1bcb0:	subs	r1, r1, r2
   1bcb4:	sbcs	r0, r0, r2, asr #31
   1bcb8:	str	r1, [fp, #-28]	; 0xffffffe4
   1bcbc:	str	r0, [fp, #-32]	; 0xffffffe0
   1bcc0:	blt	1bef4 <__assert_fail@plt+0xae0c>
   1bcc4:	b	1bf18 <__assert_fail@plt+0xae30>
   1bcc8:	b	1bccc <__assert_fail@plt+0xabe4>
   1bccc:	ldr	r0, [pc, #4064]	; 1ccb4 <__assert_fail@plt+0xbbcc>
   1bcd0:	ldr	r1, [fp, #-12]
   1bcd4:	cmp	r1, r0
   1bcd8:	blt	1bcf0 <__assert_fail@plt+0xac08>
   1bcdc:	b	1bcfc <__assert_fail@plt+0xac14>
   1bce0:	ldr	r0, [fp, #-12]
   1bce4:	movw	r1, #0
   1bce8:	cmp	r1, r0
   1bcec:	bge	1bcfc <__assert_fail@plt+0xac14>
   1bcf0:	movw	r0, #0
   1bcf4:	str	r0, [fp, #-36]	; 0xffffffdc
   1bcf8:	b	1bd14 <__assert_fail@plt+0xac2c>
   1bcfc:	ldr	r0, [fp, #-12]
   1bd00:	movw	r1, #0
   1bd04:	sub	r0, r1, r0
   1bd08:	movw	r1, #127	; 0x7f
   1bd0c:	sdiv	r0, r1, r0
   1bd10:	str	r0, [fp, #-36]	; 0xffffffdc
   1bd14:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1bd18:	ldr	r1, [fp, #-8]
   1bd1c:	ldr	r2, [r1]
   1bd20:	ldr	r1, [r1, #4]
   1bd24:	mvn	r1, r1
   1bd28:	mvn	r2, r2
   1bd2c:	subs	r2, r2, r0
   1bd30:	sbcs	r0, r1, r0, asr #31
   1bd34:	str	r2, [fp, #-40]	; 0xffffffd8
   1bd38:	str	r0, [fp, #-44]	; 0xffffffd4
   1bd3c:	bge	1bef4 <__assert_fail@plt+0xae0c>
   1bd40:	b	1bf18 <__assert_fail@plt+0xae30>
   1bd44:	b	1bd48 <__assert_fail@plt+0xac60>
   1bd48:	b	1bddc <__assert_fail@plt+0xacf4>
   1bd4c:	b	1bddc <__assert_fail@plt+0xacf4>
   1bd50:	ldr	r0, [fp, #-12]
   1bd54:	cmn	r0, #1
   1bd58:	bne	1bddc <__assert_fail@plt+0xacf4>
   1bd5c:	b	1bd60 <__assert_fail@plt+0xac78>
   1bd60:	ldr	r0, [fp, #-8]
   1bd64:	ldr	r1, [r0]
   1bd68:	ldr	r0, [r0, #4]
   1bd6c:	subs	r1, r1, #128	; 0x80
   1bd70:	sbc	r0, r0, #0
   1bd74:	rsbs	r1, r1, #0
   1bd78:	rscs	r0, r0, #0
   1bd7c:	str	r1, [fp, #-48]	; 0xffffffd0
   1bd80:	str	r0, [fp, #-52]	; 0xffffffcc
   1bd84:	blt	1bef4 <__assert_fail@plt+0xae0c>
   1bd88:	b	1bf18 <__assert_fail@plt+0xae30>
   1bd8c:	ldr	r0, [fp, #-8]
   1bd90:	ldr	r1, [r0]
   1bd94:	ldr	r0, [r0, #4]
   1bd98:	subs	r1, r1, #1
   1bd9c:	sbcs	r0, r0, #0
   1bda0:	str	r1, [fp, #-56]	; 0xffffffc8
   1bda4:	str	r0, [fp, #-60]	; 0xffffffc4
   1bda8:	blt	1bf18 <__assert_fail@plt+0xae30>
   1bdac:	b	1bdb0 <__assert_fail@plt+0xacc8>
   1bdb0:	ldr	r0, [fp, #-8]
   1bdb4:	ldr	r1, [r0]
   1bdb8:	ldr	r0, [r0, #4]
   1bdbc:	subs	r1, r1, #1
   1bdc0:	sbc	r0, r0, #0
   1bdc4:	rsbs	r1, r1, #127	; 0x7f
   1bdc8:	rscs	r0, r0, #0
   1bdcc:	str	r1, [fp, #-64]	; 0xffffffc0
   1bdd0:	str	r0, [fp, #-68]	; 0xffffffbc
   1bdd4:	blt	1bef4 <__assert_fail@plt+0xae0c>
   1bdd8:	b	1bf18 <__assert_fail@plt+0xae30>
   1bddc:	ldr	r0, [fp, #-12]
   1bde0:	mvn	r1, #127	; 0x7f
   1bde4:	sdiv	r0, r1, r0
   1bde8:	ldr	r1, [fp, #-8]
   1bdec:	ldr	r2, [r1]
   1bdf0:	ldr	r1, [r1, #4]
   1bdf4:	subs	r2, r0, r2
   1bdf8:	rscs	r0, r1, r0, asr #31
   1bdfc:	str	r2, [fp, #-72]	; 0xffffffb8
   1be00:	str	r0, [fp, #-76]	; 0xffffffb4
   1be04:	blt	1bef4 <__assert_fail@plt+0xae0c>
   1be08:	b	1bf18 <__assert_fail@plt+0xae30>
   1be0c:	ldr	r0, [fp, #-12]
   1be10:	cmp	r0, #0
   1be14:	bne	1be1c <__assert_fail@plt+0xad34>
   1be18:	b	1bf18 <__assert_fail@plt+0xae30>
   1be1c:	ldr	r0, [fp, #-8]
   1be20:	ldr	r0, [r0, #4]
   1be24:	cmn	r0, #1
   1be28:	bgt	1bec4 <__assert_fail@plt+0xaddc>
   1be2c:	b	1be30 <__assert_fail@plt+0xad48>
   1be30:	b	1be34 <__assert_fail@plt+0xad4c>
   1be34:	b	1be90 <__assert_fail@plt+0xada8>
   1be38:	b	1be90 <__assert_fail@plt+0xada8>
   1be3c:	ldr	r0, [fp, #-8]
   1be40:	ldr	r1, [r0]
   1be44:	ldr	r0, [r0, #4]
   1be48:	and	r0, r1, r0
   1be4c:	cmn	r0, #1
   1be50:	bne	1be90 <__assert_fail@plt+0xada8>
   1be54:	b	1be58 <__assert_fail@plt+0xad70>
   1be58:	b	1be5c <__assert_fail@plt+0xad74>
   1be5c:	ldr	r0, [fp, #-12]
   1be60:	mvn	r1, #127	; 0x7f
   1be64:	add	r0, r0, r1
   1be68:	movw	r1, #0
   1be6c:	cmp	r1, r0
   1be70:	blt	1bef4 <__assert_fail@plt+0xae0c>
   1be74:	b	1bf18 <__assert_fail@plt+0xae30>
   1be78:	ldr	r0, [fp, #-12]
   1be7c:	sub	r0, r0, #1
   1be80:	movw	r1, #127	; 0x7f
   1be84:	cmp	r1, r0
   1be88:	blt	1bef4 <__assert_fail@plt+0xae0c>
   1be8c:	b	1bf18 <__assert_fail@plt+0xae30>
   1be90:	ldr	r0, [fp, #-8]
   1be94:	ldr	r2, [r0]
   1be98:	ldr	r3, [r0, #4]
   1be9c:	mvn	r0, #127	; 0x7f
   1bea0:	mvn	r1, #0
   1bea4:	bl	1e61c <__assert_fail@plt+0xd534>
   1bea8:	ldr	r2, [fp, #-12]
   1beac:	subs	r0, r0, r2
   1beb0:	sbcs	r1, r1, r2, asr #31
   1beb4:	str	r0, [fp, #-80]	; 0xffffffb0
   1beb8:	str	r1, [fp, #-84]	; 0xffffffac
   1bebc:	blt	1bef4 <__assert_fail@plt+0xae0c>
   1bec0:	b	1bf18 <__assert_fail@plt+0xae30>
   1bec4:	ldr	r0, [fp, #-12]
   1bec8:	mov	r1, #127	; 0x7f
   1becc:	sdiv	r0, r1, r0
   1bed0:	ldr	r1, [fp, #-8]
   1bed4:	ldr	r2, [r1]
   1bed8:	ldr	r1, [r1, #4]
   1bedc:	subs	r2, r0, r2
   1bee0:	rscs	r0, r1, r0, asr #31
   1bee4:	str	r2, [fp, #-88]	; 0xffffffa8
   1bee8:	str	r0, [fp, #-92]	; 0xffffffa4
   1beec:	bge	1bf18 <__assert_fail@plt+0xae30>
   1bef0:	b	1bef4 <__assert_fail@plt+0xae0c>
   1bef4:	ldr	r0, [fp, #-8]
   1bef8:	ldr	r0, [r0]
   1befc:	ldr	r1, [fp, #-12]
   1bf00:	mul	r0, r0, r1
   1bf04:	sxtb	r0, r0
   1bf08:	asr	r1, r0, #31
   1bf0c:	str	r0, [fp, #-24]	; 0xffffffe8
   1bf10:	str	r1, [fp, #-20]	; 0xffffffec
   1bf14:	b	1d89c <__assert_fail@plt+0xc7b4>
   1bf18:	ldr	r0, [fp, #-8]
   1bf1c:	ldr	r0, [r0]
   1bf20:	ldr	r1, [fp, #-12]
   1bf24:	mul	r0, r0, r1
   1bf28:	sxtb	r0, r0
   1bf2c:	asr	r1, r0, #31
   1bf30:	str	r0, [fp, #-24]	; 0xffffffe8
   1bf34:	str	r1, [fp, #-20]	; 0xffffffec
   1bf38:	b	1d8d0 <__assert_fail@plt+0xc7e8>
   1bf3c:	ldr	r0, [fp, #-12]
   1bf40:	cmp	r0, #0
   1bf44:	bge	1c0c4 <__assert_fail@plt+0xafdc>
   1bf48:	ldr	r0, [fp, #-8]
   1bf4c:	ldr	r0, [r0, #4]
   1bf50:	cmn	r0, #1
   1bf54:	bgt	1c00c <__assert_fail@plt+0xaf24>
   1bf58:	b	1bf5c <__assert_fail@plt+0xae74>
   1bf5c:	b	1bf60 <__assert_fail@plt+0xae78>
   1bf60:	ldr	r0, [fp, #-8]
   1bf64:	ldr	r1, [r0]
   1bf68:	ldr	r0, [r0, #4]
   1bf6c:	ldr	r2, [fp, #-12]
   1bf70:	mov	r3, #255	; 0xff
   1bf74:	sdiv	r2, r3, r2
   1bf78:	subs	r1, r1, r2
   1bf7c:	sbcs	r0, r0, r2, asr #31
   1bf80:	str	r1, [fp, #-96]	; 0xffffffa0
   1bf84:	str	r0, [fp, #-100]	; 0xffffff9c
   1bf88:	blt	1c1ac <__assert_fail@plt+0xb0c4>
   1bf8c:	b	1c1d0 <__assert_fail@plt+0xb0e8>
   1bf90:	b	1bf94 <__assert_fail@plt+0xaeac>
   1bf94:	ldr	r0, [pc, #3352]	; 1ccb4 <__assert_fail@plt+0xbbcc>
   1bf98:	ldr	r1, [fp, #-12]
   1bf9c:	cmp	r1, r0
   1bfa0:	blt	1bfb8 <__assert_fail@plt+0xaed0>
   1bfa4:	b	1bfc4 <__assert_fail@plt+0xaedc>
   1bfa8:	ldr	r0, [fp, #-12]
   1bfac:	movw	r1, #0
   1bfb0:	cmp	r1, r0
   1bfb4:	bge	1bfc4 <__assert_fail@plt+0xaedc>
   1bfb8:	movw	r0, #0
   1bfbc:	str	r0, [fp, #-104]	; 0xffffff98
   1bfc0:	b	1bfdc <__assert_fail@plt+0xaef4>
   1bfc4:	ldr	r0, [fp, #-12]
   1bfc8:	movw	r1, #0
   1bfcc:	sub	r0, r1, r0
   1bfd0:	movw	r1, #255	; 0xff
   1bfd4:	sdiv	r0, r1, r0
   1bfd8:	str	r0, [fp, #-104]	; 0xffffff98
   1bfdc:	ldr	r0, [fp, #-104]	; 0xffffff98
   1bfe0:	ldr	r1, [fp, #-8]
   1bfe4:	ldr	r2, [r1]
   1bfe8:	ldr	r1, [r1, #4]
   1bfec:	mvn	r1, r1
   1bff0:	mvn	r2, r2
   1bff4:	subs	r2, r2, r0
   1bff8:	sbcs	r0, r1, r0, asr #31
   1bffc:	str	r2, [fp, #-108]	; 0xffffff94
   1c000:	str	r0, [fp, #-112]	; 0xffffff90
   1c004:	bge	1c1ac <__assert_fail@plt+0xb0c4>
   1c008:	b	1c1d0 <__assert_fail@plt+0xb0e8>
   1c00c:	b	1c010 <__assert_fail@plt+0xaf28>
   1c010:	b	1c094 <__assert_fail@plt+0xafac>
   1c014:	b	1c094 <__assert_fail@plt+0xafac>
   1c018:	ldr	r0, [fp, #-12]
   1c01c:	cmn	r0, #1
   1c020:	bne	1c094 <__assert_fail@plt+0xafac>
   1c024:	b	1c028 <__assert_fail@plt+0xaf40>
   1c028:	ldr	r0, [fp, #-8]
   1c02c:	ldr	r1, [r0]
   1c030:	ldr	r0, [r0, #4]
   1c034:	rsbs	r1, r1, #0
   1c038:	rscs	r0, r0, #0
   1c03c:	str	r1, [fp, #-116]	; 0xffffff8c
   1c040:	str	r0, [fp, #-120]	; 0xffffff88
   1c044:	blt	1c1ac <__assert_fail@plt+0xb0c4>
   1c048:	b	1c1d0 <__assert_fail@plt+0xb0e8>
   1c04c:	ldr	r0, [fp, #-8]
   1c050:	ldr	r1, [r0]
   1c054:	ldr	r0, [r0, #4]
   1c058:	subs	r1, r1, #1
   1c05c:	sbcs	r0, r0, #0
   1c060:	str	r1, [fp, #-124]	; 0xffffff84
   1c064:	str	r0, [fp, #-128]	; 0xffffff80
   1c068:	blt	1c1d0 <__assert_fail@plt+0xb0e8>
   1c06c:	b	1c070 <__assert_fail@plt+0xaf88>
   1c070:	ldr	r0, [fp, #-8]
   1c074:	ldr	r1, [r0]
   1c078:	ldr	r0, [r0, #4]
   1c07c:	subs	r1, r1, #1
   1c080:	sbc	r0, r0, #0
   1c084:	cmn	r0, #1
   1c088:	str	r1, [fp, #-132]	; 0xffffff7c
   1c08c:	bgt	1c1ac <__assert_fail@plt+0xb0c4>
   1c090:	b	1c1d0 <__assert_fail@plt+0xb0e8>
   1c094:	ldr	r0, [fp, #-12]
   1c098:	mov	r1, #0
   1c09c:	sdiv	r0, r1, r0
   1c0a0:	ldr	r1, [fp, #-8]
   1c0a4:	ldr	r2, [r1]
   1c0a8:	ldr	r1, [r1, #4]
   1c0ac:	subs	r2, r0, r2
   1c0b0:	rscs	r0, r1, r0, asr #31
   1c0b4:	str	r2, [fp, #-136]	; 0xffffff78
   1c0b8:	str	r0, [fp, #-140]	; 0xffffff74
   1c0bc:	blt	1c1ac <__assert_fail@plt+0xb0c4>
   1c0c0:	b	1c1d0 <__assert_fail@plt+0xb0e8>
   1c0c4:	ldr	r0, [fp, #-12]
   1c0c8:	cmp	r0, #0
   1c0cc:	bne	1c0d4 <__assert_fail@plt+0xafec>
   1c0d0:	b	1c1d0 <__assert_fail@plt+0xb0e8>
   1c0d4:	ldr	r0, [fp, #-8]
   1c0d8:	ldr	r0, [r0, #4]
   1c0dc:	cmn	r0, #1
   1c0e0:	bgt	1c17c <__assert_fail@plt+0xb094>
   1c0e4:	b	1c0e8 <__assert_fail@plt+0xb000>
   1c0e8:	b	1c0ec <__assert_fail@plt+0xb004>
   1c0ec:	b	1c144 <__assert_fail@plt+0xb05c>
   1c0f0:	b	1c144 <__assert_fail@plt+0xb05c>
   1c0f4:	ldr	r0, [fp, #-8]
   1c0f8:	ldr	r1, [r0]
   1c0fc:	ldr	r0, [r0, #4]
   1c100:	and	r0, r1, r0
   1c104:	cmn	r0, #1
   1c108:	bne	1c144 <__assert_fail@plt+0xb05c>
   1c10c:	b	1c110 <__assert_fail@plt+0xb028>
   1c110:	b	1c114 <__assert_fail@plt+0xb02c>
   1c114:	ldr	r0, [fp, #-12]
   1c118:	add	r0, r0, #0
   1c11c:	movw	r1, #0
   1c120:	cmp	r1, r0
   1c124:	blt	1c1ac <__assert_fail@plt+0xb0c4>
   1c128:	b	1c1d0 <__assert_fail@plt+0xb0e8>
   1c12c:	ldr	r0, [fp, #-12]
   1c130:	sub	r0, r0, #1
   1c134:	mvn	r1, #0
   1c138:	cmp	r1, r0
   1c13c:	blt	1c1ac <__assert_fail@plt+0xb0c4>
   1c140:	b	1c1d0 <__assert_fail@plt+0xb0e8>
   1c144:	ldr	r0, [fp, #-8]
   1c148:	ldr	r2, [r0]
   1c14c:	ldr	r3, [r0, #4]
   1c150:	mov	r0, #0
   1c154:	str	r0, [fp, #-144]	; 0xffffff70
   1c158:	ldr	r1, [fp, #-144]	; 0xffffff70
   1c15c:	bl	1e61c <__assert_fail@plt+0xd534>
   1c160:	ldr	r2, [fp, #-12]
   1c164:	subs	r0, r0, r2
   1c168:	sbcs	r1, r1, r2, asr #31
   1c16c:	str	r0, [fp, #-148]	; 0xffffff6c
   1c170:	str	r1, [fp, #-152]	; 0xffffff68
   1c174:	blt	1c1ac <__assert_fail@plt+0xb0c4>
   1c178:	b	1c1d0 <__assert_fail@plt+0xb0e8>
   1c17c:	ldr	r0, [fp, #-12]
   1c180:	mov	r1, #255	; 0xff
   1c184:	sdiv	r0, r1, r0
   1c188:	ldr	r1, [fp, #-8]
   1c18c:	ldr	r2, [r1]
   1c190:	ldr	r1, [r1, #4]
   1c194:	subs	r2, r0, r2
   1c198:	rscs	r0, r1, r0, asr #31
   1c19c:	str	r2, [fp, #-156]	; 0xffffff64
   1c1a0:	str	r0, [fp, #-160]	; 0xffffff60
   1c1a4:	bge	1c1d0 <__assert_fail@plt+0xb0e8>
   1c1a8:	b	1c1ac <__assert_fail@plt+0xb0c4>
   1c1ac:	ldr	r0, [fp, #-8]
   1c1b0:	ldr	r0, [r0]
   1c1b4:	ldr	r1, [fp, #-12]
   1c1b8:	mul	r0, r0, r1
   1c1bc:	uxtb	r0, r0
   1c1c0:	mov	r1, #0
   1c1c4:	str	r1, [fp, #-20]	; 0xffffffec
   1c1c8:	str	r0, [fp, #-24]	; 0xffffffe8
   1c1cc:	b	1d89c <__assert_fail@plt+0xc7b4>
   1c1d0:	ldr	r0, [fp, #-8]
   1c1d4:	ldr	r0, [r0]
   1c1d8:	ldr	r1, [fp, #-12]
   1c1dc:	mul	r0, r0, r1
   1c1e0:	uxtb	r0, r0
   1c1e4:	mov	r1, #0
   1c1e8:	str	r1, [fp, #-20]	; 0xffffffec
   1c1ec:	str	r0, [fp, #-24]	; 0xffffffe8
   1c1f0:	b	1d8d0 <__assert_fail@plt+0xc7e8>
   1c1f4:	b	1c788 <__assert_fail@plt+0xb6a0>
   1c1f8:	b	1c1fc <__assert_fail@plt+0xb114>
   1c1fc:	ldr	r0, [fp, #-12]
   1c200:	cmp	r0, #0
   1c204:	bge	1c39c <__assert_fail@plt+0xb2b4>
   1c208:	ldr	r0, [fp, #-8]
   1c20c:	ldr	r0, [r0, #4]
   1c210:	cmn	r0, #1
   1c214:	bgt	1c2cc <__assert_fail@plt+0xb1e4>
   1c218:	b	1c21c <__assert_fail@plt+0xb134>
   1c21c:	b	1c220 <__assert_fail@plt+0xb138>
   1c220:	ldr	r0, [fp, #-8]
   1c224:	ldr	r1, [r0]
   1c228:	ldr	r0, [r0, #4]
   1c22c:	ldr	r2, [fp, #-12]
   1c230:	movw	r3, #32767	; 0x7fff
   1c234:	sdiv	r2, r3, r2
   1c238:	subs	r1, r1, r2
   1c23c:	sbcs	r0, r0, r2, asr #31
   1c240:	str	r1, [fp, #-164]	; 0xffffff5c
   1c244:	str	r0, [fp, #-168]	; 0xffffff58
   1c248:	blt	1c488 <__assert_fail@plt+0xb3a0>
   1c24c:	b	1c4ac <__assert_fail@plt+0xb3c4>
   1c250:	b	1c254 <__assert_fail@plt+0xb16c>
   1c254:	ldr	r0, [pc, #2648]	; 1ccb4 <__assert_fail@plt+0xbbcc>
   1c258:	ldr	r1, [fp, #-12]
   1c25c:	cmp	r1, r0
   1c260:	blt	1c278 <__assert_fail@plt+0xb190>
   1c264:	b	1c284 <__assert_fail@plt+0xb19c>
   1c268:	ldr	r0, [fp, #-12]
   1c26c:	movw	r1, #0
   1c270:	cmp	r1, r0
   1c274:	bge	1c284 <__assert_fail@plt+0xb19c>
   1c278:	movw	r0, #0
   1c27c:	str	r0, [fp, #-172]	; 0xffffff54
   1c280:	b	1c29c <__assert_fail@plt+0xb1b4>
   1c284:	ldr	r0, [fp, #-12]
   1c288:	movw	r1, #0
   1c28c:	sub	r0, r1, r0
   1c290:	movw	r1, #32767	; 0x7fff
   1c294:	sdiv	r0, r1, r0
   1c298:	str	r0, [fp, #-172]	; 0xffffff54
   1c29c:	ldr	r0, [fp, #-172]	; 0xffffff54
   1c2a0:	ldr	r1, [fp, #-8]
   1c2a4:	ldr	r2, [r1]
   1c2a8:	ldr	r1, [r1, #4]
   1c2ac:	mvn	r1, r1
   1c2b0:	mvn	r2, r2
   1c2b4:	subs	r2, r2, r0
   1c2b8:	sbcs	r0, r1, r0, asr #31
   1c2bc:	str	r2, [fp, #-176]	; 0xffffff50
   1c2c0:	str	r0, [fp, #-180]	; 0xffffff4c
   1c2c4:	bge	1c488 <__assert_fail@plt+0xb3a0>
   1c2c8:	b	1c4ac <__assert_fail@plt+0xb3c4>
   1c2cc:	b	1c2d0 <__assert_fail@plt+0xb1e8>
   1c2d0:	b	1c368 <__assert_fail@plt+0xb280>
   1c2d4:	b	1c368 <__assert_fail@plt+0xb280>
   1c2d8:	ldr	r0, [fp, #-12]
   1c2dc:	cmn	r0, #1
   1c2e0:	bne	1c368 <__assert_fail@plt+0xb280>
   1c2e4:	b	1c2e8 <__assert_fail@plt+0xb200>
   1c2e8:	ldr	r0, [fp, #-8]
   1c2ec:	ldr	r1, [r0]
   1c2f0:	ldr	r0, [r0, #4]
   1c2f4:	subs	r1, r1, #32768	; 0x8000
   1c2f8:	sbc	r0, r0, #0
   1c2fc:	rsbs	r1, r1, #0
   1c300:	rscs	r0, r0, #0
   1c304:	str	r1, [fp, #-184]	; 0xffffff48
   1c308:	str	r0, [fp, #-188]	; 0xffffff44
   1c30c:	blt	1c488 <__assert_fail@plt+0xb3a0>
   1c310:	b	1c4ac <__assert_fail@plt+0xb3c4>
   1c314:	ldr	r0, [fp, #-8]
   1c318:	ldr	r1, [r0]
   1c31c:	ldr	r0, [r0, #4]
   1c320:	subs	r1, r1, #1
   1c324:	sbcs	r0, r0, #0
   1c328:	str	r1, [fp, #-192]	; 0xffffff40
   1c32c:	str	r0, [fp, #-196]	; 0xffffff3c
   1c330:	blt	1c4ac <__assert_fail@plt+0xb3c4>
   1c334:	b	1c338 <__assert_fail@plt+0xb250>
   1c338:	ldr	r0, [fp, #-8]
   1c33c:	ldr	r1, [r0]
   1c340:	ldr	r0, [r0, #4]
   1c344:	subs	r1, r1, #1
   1c348:	sbc	r0, r0, #0
   1c34c:	movw	r2, #32767	; 0x7fff
   1c350:	subs	r1, r2, r1
   1c354:	rscs	r0, r0, #0
   1c358:	str	r1, [fp, #-200]	; 0xffffff38
   1c35c:	str	r0, [fp, #-204]	; 0xffffff34
   1c360:	blt	1c488 <__assert_fail@plt+0xb3a0>
   1c364:	b	1c4ac <__assert_fail@plt+0xb3c4>
   1c368:	ldr	r0, [fp, #-12]
   1c36c:	movw	r1, #32768	; 0x8000
   1c370:	movt	r1, #65535	; 0xffff
   1c374:	sdiv	r0, r1, r0
   1c378:	ldr	r1, [fp, #-8]
   1c37c:	ldr	r2, [r1]
   1c380:	ldr	r1, [r1, #4]
   1c384:	subs	r2, r0, r2
   1c388:	rscs	r0, r1, r0, asr #31
   1c38c:	str	r2, [fp, #-208]	; 0xffffff30
   1c390:	str	r0, [fp, #-212]	; 0xffffff2c
   1c394:	blt	1c488 <__assert_fail@plt+0xb3a0>
   1c398:	b	1c4ac <__assert_fail@plt+0xb3c4>
   1c39c:	ldr	r0, [fp, #-12]
   1c3a0:	cmp	r0, #0
   1c3a4:	bne	1c3ac <__assert_fail@plt+0xb2c4>
   1c3a8:	b	1c4ac <__assert_fail@plt+0xb3c4>
   1c3ac:	ldr	r0, [fp, #-8]
   1c3b0:	ldr	r0, [r0, #4]
   1c3b4:	cmn	r0, #1
   1c3b8:	bgt	1c458 <__assert_fail@plt+0xb370>
   1c3bc:	b	1c3c0 <__assert_fail@plt+0xb2d8>
   1c3c0:	b	1c3c4 <__assert_fail@plt+0xb2dc>
   1c3c4:	b	1c420 <__assert_fail@plt+0xb338>
   1c3c8:	b	1c420 <__assert_fail@plt+0xb338>
   1c3cc:	ldr	r0, [fp, #-8]
   1c3d0:	ldr	r1, [r0]
   1c3d4:	ldr	r0, [r0, #4]
   1c3d8:	and	r0, r1, r0
   1c3dc:	cmn	r0, #1
   1c3e0:	bne	1c420 <__assert_fail@plt+0xb338>
   1c3e4:	b	1c3e8 <__assert_fail@plt+0xb300>
   1c3e8:	b	1c3ec <__assert_fail@plt+0xb304>
   1c3ec:	ldr	r0, [pc, #4088]	; 1d3ec <__assert_fail@plt+0xc304>
   1c3f0:	ldr	r1, [fp, #-12]
   1c3f4:	add	r0, r1, r0
   1c3f8:	movw	r1, #0
   1c3fc:	cmp	r1, r0
   1c400:	blt	1c488 <__assert_fail@plt+0xb3a0>
   1c404:	b	1c4ac <__assert_fail@plt+0xb3c4>
   1c408:	ldr	r0, [fp, #-12]
   1c40c:	sub	r0, r0, #1
   1c410:	movw	r1, #32767	; 0x7fff
   1c414:	cmp	r1, r0
   1c418:	blt	1c488 <__assert_fail@plt+0xb3a0>
   1c41c:	b	1c4ac <__assert_fail@plt+0xb3c4>
   1c420:	ldr	r0, [fp, #-8]
   1c424:	ldr	r2, [r0]
   1c428:	ldr	r3, [r0, #4]
   1c42c:	movw	r0, #32768	; 0x8000
   1c430:	movt	r0, #65535	; 0xffff
   1c434:	mvn	r1, #0
   1c438:	bl	1e61c <__assert_fail@plt+0xd534>
   1c43c:	ldr	r2, [fp, #-12]
   1c440:	subs	r0, r0, r2
   1c444:	sbcs	r1, r1, r2, asr #31
   1c448:	str	r0, [fp, #-216]	; 0xffffff28
   1c44c:	str	r1, [fp, #-220]	; 0xffffff24
   1c450:	blt	1c488 <__assert_fail@plt+0xb3a0>
   1c454:	b	1c4ac <__assert_fail@plt+0xb3c4>
   1c458:	ldr	r0, [fp, #-12]
   1c45c:	movw	r1, #32767	; 0x7fff
   1c460:	sdiv	r0, r1, r0
   1c464:	ldr	r1, [fp, #-8]
   1c468:	ldr	r2, [r1]
   1c46c:	ldr	r1, [r1, #4]
   1c470:	subs	r2, r0, r2
   1c474:	rscs	r0, r1, r0, asr #31
   1c478:	str	r2, [fp, #-224]	; 0xffffff20
   1c47c:	str	r0, [fp, #-228]	; 0xffffff1c
   1c480:	bge	1c4ac <__assert_fail@plt+0xb3c4>
   1c484:	b	1c488 <__assert_fail@plt+0xb3a0>
   1c488:	ldr	r0, [fp, #-8]
   1c48c:	ldr	r0, [r0]
   1c490:	ldr	r1, [fp, #-12]
   1c494:	mul	r0, r0, r1
   1c498:	sxth	r0, r0
   1c49c:	asr	r1, r0, #31
   1c4a0:	str	r0, [fp, #-24]	; 0xffffffe8
   1c4a4:	str	r1, [fp, #-20]	; 0xffffffec
   1c4a8:	b	1d89c <__assert_fail@plt+0xc7b4>
   1c4ac:	ldr	r0, [fp, #-8]
   1c4b0:	ldr	r0, [r0]
   1c4b4:	ldr	r1, [fp, #-12]
   1c4b8:	mul	r0, r0, r1
   1c4bc:	sxth	r0, r0
   1c4c0:	asr	r1, r0, #31
   1c4c4:	str	r0, [fp, #-24]	; 0xffffffe8
   1c4c8:	str	r1, [fp, #-20]	; 0xffffffec
   1c4cc:	b	1d8d0 <__assert_fail@plt+0xc7e8>
   1c4d0:	ldr	r0, [fp, #-12]
   1c4d4:	cmp	r0, #0
   1c4d8:	bge	1c658 <__assert_fail@plt+0xb570>
   1c4dc:	ldr	r0, [fp, #-8]
   1c4e0:	ldr	r0, [r0, #4]
   1c4e4:	cmn	r0, #1
   1c4e8:	bgt	1c5a0 <__assert_fail@plt+0xb4b8>
   1c4ec:	b	1c4f0 <__assert_fail@plt+0xb408>
   1c4f0:	b	1c4f4 <__assert_fail@plt+0xb40c>
   1c4f4:	ldr	r0, [fp, #-8]
   1c4f8:	ldr	r1, [r0]
   1c4fc:	ldr	r0, [r0, #4]
   1c500:	ldr	r2, [fp, #-12]
   1c504:	movw	r3, #65535	; 0xffff
   1c508:	sdiv	r2, r3, r2
   1c50c:	subs	r1, r1, r2
   1c510:	sbcs	r0, r0, r2, asr #31
   1c514:	str	r1, [fp, #-232]	; 0xffffff18
   1c518:	str	r0, [fp, #-236]	; 0xffffff14
   1c51c:	blt	1c740 <__assert_fail@plt+0xb658>
   1c520:	b	1c764 <__assert_fail@plt+0xb67c>
   1c524:	b	1c528 <__assert_fail@plt+0xb440>
   1c528:	ldr	r0, [pc, #1924]	; 1ccb4 <__assert_fail@plt+0xbbcc>
   1c52c:	ldr	r1, [fp, #-12]
   1c530:	cmp	r1, r0
   1c534:	blt	1c54c <__assert_fail@plt+0xb464>
   1c538:	b	1c558 <__assert_fail@plt+0xb470>
   1c53c:	ldr	r0, [fp, #-12]
   1c540:	movw	r1, #0
   1c544:	cmp	r1, r0
   1c548:	bge	1c558 <__assert_fail@plt+0xb470>
   1c54c:	movw	r0, #0
   1c550:	str	r0, [fp, #-240]	; 0xffffff10
   1c554:	b	1c570 <__assert_fail@plt+0xb488>
   1c558:	ldr	r0, [fp, #-12]
   1c55c:	movw	r1, #0
   1c560:	sub	r0, r1, r0
   1c564:	movw	r1, #65535	; 0xffff
   1c568:	sdiv	r0, r1, r0
   1c56c:	str	r0, [fp, #-240]	; 0xffffff10
   1c570:	ldr	r0, [fp, #-240]	; 0xffffff10
   1c574:	ldr	r1, [fp, #-8]
   1c578:	ldr	r2, [r1]
   1c57c:	ldr	r1, [r1, #4]
   1c580:	mvn	r1, r1
   1c584:	mvn	r2, r2
   1c588:	subs	r2, r2, r0
   1c58c:	sbcs	r0, r1, r0, asr #31
   1c590:	str	r2, [fp, #-244]	; 0xffffff0c
   1c594:	str	r0, [fp, #-248]	; 0xffffff08
   1c598:	bge	1c740 <__assert_fail@plt+0xb658>
   1c59c:	b	1c764 <__assert_fail@plt+0xb67c>
   1c5a0:	b	1c5a4 <__assert_fail@plt+0xb4bc>
   1c5a4:	b	1c628 <__assert_fail@plt+0xb540>
   1c5a8:	b	1c628 <__assert_fail@plt+0xb540>
   1c5ac:	ldr	r0, [fp, #-12]
   1c5b0:	cmn	r0, #1
   1c5b4:	bne	1c628 <__assert_fail@plt+0xb540>
   1c5b8:	b	1c5bc <__assert_fail@plt+0xb4d4>
   1c5bc:	ldr	r0, [fp, #-8]
   1c5c0:	ldr	r1, [r0]
   1c5c4:	ldr	r0, [r0, #4]
   1c5c8:	rsbs	r1, r1, #0
   1c5cc:	rscs	r0, r0, #0
   1c5d0:	str	r1, [fp, #-252]	; 0xffffff04
   1c5d4:	str	r0, [fp, #-256]	; 0xffffff00
   1c5d8:	blt	1c740 <__assert_fail@plt+0xb658>
   1c5dc:	b	1c764 <__assert_fail@plt+0xb67c>
   1c5e0:	ldr	r0, [fp, #-8]
   1c5e4:	ldr	r1, [r0]
   1c5e8:	ldr	r0, [r0, #4]
   1c5ec:	subs	r1, r1, #1
   1c5f0:	sbcs	r0, r0, #0
   1c5f4:	str	r1, [fp, #-260]	; 0xfffffefc
   1c5f8:	str	r0, [fp, #-264]	; 0xfffffef8
   1c5fc:	blt	1c764 <__assert_fail@plt+0xb67c>
   1c600:	b	1c604 <__assert_fail@plt+0xb51c>
   1c604:	ldr	r0, [fp, #-8]
   1c608:	ldr	r1, [r0]
   1c60c:	ldr	r0, [r0, #4]
   1c610:	subs	r1, r1, #1
   1c614:	sbc	r0, r0, #0
   1c618:	cmn	r0, #1
   1c61c:	str	r1, [fp, #-268]	; 0xfffffef4
   1c620:	bgt	1c740 <__assert_fail@plt+0xb658>
   1c624:	b	1c764 <__assert_fail@plt+0xb67c>
   1c628:	ldr	r0, [fp, #-12]
   1c62c:	mov	r1, #0
   1c630:	sdiv	r0, r1, r0
   1c634:	ldr	r1, [fp, #-8]
   1c638:	ldr	r2, [r1]
   1c63c:	ldr	r1, [r1, #4]
   1c640:	subs	r2, r0, r2
   1c644:	rscs	r0, r1, r0, asr #31
   1c648:	str	r2, [fp, #-272]	; 0xfffffef0
   1c64c:	str	r0, [fp, #-276]	; 0xfffffeec
   1c650:	blt	1c740 <__assert_fail@plt+0xb658>
   1c654:	b	1c764 <__assert_fail@plt+0xb67c>
   1c658:	ldr	r0, [fp, #-12]
   1c65c:	cmp	r0, #0
   1c660:	bne	1c668 <__assert_fail@plt+0xb580>
   1c664:	b	1c764 <__assert_fail@plt+0xb67c>
   1c668:	ldr	r0, [fp, #-8]
   1c66c:	ldr	r0, [r0, #4]
   1c670:	cmn	r0, #1
   1c674:	bgt	1c710 <__assert_fail@plt+0xb628>
   1c678:	b	1c67c <__assert_fail@plt+0xb594>
   1c67c:	b	1c680 <__assert_fail@plt+0xb598>
   1c680:	b	1c6d8 <__assert_fail@plt+0xb5f0>
   1c684:	b	1c6d8 <__assert_fail@plt+0xb5f0>
   1c688:	ldr	r0, [fp, #-8]
   1c68c:	ldr	r1, [r0]
   1c690:	ldr	r0, [r0, #4]
   1c694:	and	r0, r1, r0
   1c698:	cmn	r0, #1
   1c69c:	bne	1c6d8 <__assert_fail@plt+0xb5f0>
   1c6a0:	b	1c6a4 <__assert_fail@plt+0xb5bc>
   1c6a4:	b	1c6a8 <__assert_fail@plt+0xb5c0>
   1c6a8:	ldr	r0, [fp, #-12]
   1c6ac:	add	r0, r0, #0
   1c6b0:	movw	r1, #0
   1c6b4:	cmp	r1, r0
   1c6b8:	blt	1c740 <__assert_fail@plt+0xb658>
   1c6bc:	b	1c764 <__assert_fail@plt+0xb67c>
   1c6c0:	ldr	r0, [fp, #-12]
   1c6c4:	sub	r0, r0, #1
   1c6c8:	mvn	r1, #0
   1c6cc:	cmp	r1, r0
   1c6d0:	blt	1c740 <__assert_fail@plt+0xb658>
   1c6d4:	b	1c764 <__assert_fail@plt+0xb67c>
   1c6d8:	ldr	r0, [fp, #-8]
   1c6dc:	ldr	r2, [r0]
   1c6e0:	ldr	r3, [r0, #4]
   1c6e4:	mov	r0, #0
   1c6e8:	str	r0, [fp, #-280]	; 0xfffffee8
   1c6ec:	ldr	r1, [fp, #-280]	; 0xfffffee8
   1c6f0:	bl	1e61c <__assert_fail@plt+0xd534>
   1c6f4:	ldr	r2, [fp, #-12]
   1c6f8:	subs	r0, r0, r2
   1c6fc:	sbcs	r1, r1, r2, asr #31
   1c700:	str	r0, [fp, #-284]	; 0xfffffee4
   1c704:	str	r1, [fp, #-288]	; 0xfffffee0
   1c708:	blt	1c740 <__assert_fail@plt+0xb658>
   1c70c:	b	1c764 <__assert_fail@plt+0xb67c>
   1c710:	ldr	r0, [fp, #-12]
   1c714:	movw	r1, #65535	; 0xffff
   1c718:	sdiv	r0, r1, r0
   1c71c:	ldr	r1, [fp, #-8]
   1c720:	ldr	r2, [r1]
   1c724:	ldr	r1, [r1, #4]
   1c728:	subs	r2, r0, r2
   1c72c:	rscs	r0, r1, r0, asr #31
   1c730:	str	r2, [fp, #-292]	; 0xfffffedc
   1c734:	str	r0, [fp, #-296]	; 0xfffffed8
   1c738:	bge	1c764 <__assert_fail@plt+0xb67c>
   1c73c:	b	1c740 <__assert_fail@plt+0xb658>
   1c740:	ldr	r0, [fp, #-8]
   1c744:	ldr	r0, [r0]
   1c748:	ldr	r1, [fp, #-12]
   1c74c:	mul	r0, r0, r1
   1c750:	uxth	r0, r0
   1c754:	mov	r1, #0
   1c758:	str	r1, [fp, #-20]	; 0xffffffec
   1c75c:	str	r0, [fp, #-24]	; 0xffffffe8
   1c760:	b	1d89c <__assert_fail@plt+0xc7b4>
   1c764:	ldr	r0, [fp, #-8]
   1c768:	ldr	r0, [r0]
   1c76c:	ldr	r1, [fp, #-12]
   1c770:	mul	r0, r0, r1
   1c774:	uxth	r0, r0
   1c778:	mov	r1, #0
   1c77c:	str	r1, [fp, #-20]	; 0xffffffec
   1c780:	str	r0, [fp, #-24]	; 0xffffffe8
   1c784:	b	1d8d0 <__assert_fail@plt+0xc7e8>
   1c788:	b	1ccf8 <__assert_fail@plt+0xbc10>
   1c78c:	b	1c790 <__assert_fail@plt+0xb6a8>
   1c790:	ldr	r0, [fp, #-12]
   1c794:	cmp	r0, #0
   1c798:	bge	1c920 <__assert_fail@plt+0xb838>
   1c79c:	ldr	r0, [fp, #-8]
   1c7a0:	ldr	r0, [r0, #4]
   1c7a4:	cmn	r0, #1
   1c7a8:	bgt	1c860 <__assert_fail@plt+0xb778>
   1c7ac:	b	1c7b0 <__assert_fail@plt+0xb6c8>
   1c7b0:	b	1c7b4 <__assert_fail@plt+0xb6cc>
   1c7b4:	ldr	r0, [fp, #-8]
   1c7b8:	ldr	r1, [r0]
   1c7bc:	ldr	r0, [r0, #4]
   1c7c0:	ldr	r2, [fp, #-12]
   1c7c4:	mvn	r3, #-2147483648	; 0x80000000
   1c7c8:	sdiv	r2, r3, r2
   1c7cc:	subs	r1, r1, r2
   1c7d0:	sbcs	r0, r0, r2, asr #31
   1c7d4:	str	r1, [fp, #-300]	; 0xfffffed4
   1c7d8:	str	r0, [fp, #-304]	; 0xfffffed0
   1c7dc:	blt	1ca04 <__assert_fail@plt+0xb91c>
   1c7e0:	b	1ca24 <__assert_fail@plt+0xb93c>
   1c7e4:	b	1c7e8 <__assert_fail@plt+0xb700>
   1c7e8:	ldr	r0, [pc, #1220]	; 1ccb4 <__assert_fail@plt+0xbbcc>
   1c7ec:	ldr	r1, [fp, #-12]
   1c7f0:	cmp	r1, r0
   1c7f4:	blt	1c80c <__assert_fail@plt+0xb724>
   1c7f8:	b	1c818 <__assert_fail@plt+0xb730>
   1c7fc:	ldr	r0, [fp, #-12]
   1c800:	movw	r1, #0
   1c804:	cmp	r1, r0
   1c808:	bge	1c818 <__assert_fail@plt+0xb730>
   1c80c:	movw	r0, #0
   1c810:	str	r0, [fp, #-308]	; 0xfffffecc
   1c814:	b	1c830 <__assert_fail@plt+0xb748>
   1c818:	ldr	r0, [pc, #4064]	; 1d800 <__assert_fail@plt+0xc718>
   1c81c:	ldr	r1, [fp, #-12]
   1c820:	movw	r2, #0
   1c824:	sub	r1, r2, r1
   1c828:	sdiv	r0, r0, r1
   1c82c:	str	r0, [fp, #-308]	; 0xfffffecc
   1c830:	ldr	r0, [fp, #-308]	; 0xfffffecc
   1c834:	ldr	r1, [fp, #-8]
   1c838:	ldr	r2, [r1]
   1c83c:	ldr	r1, [r1, #4]
   1c840:	mvn	r1, r1
   1c844:	mvn	r2, r2
   1c848:	subs	r2, r2, r0
   1c84c:	sbcs	r0, r1, r0, asr #31
   1c850:	str	r2, [fp, #-312]	; 0xfffffec8
   1c854:	str	r0, [fp, #-316]	; 0xfffffec4
   1c858:	bge	1ca04 <__assert_fail@plt+0xb91c>
   1c85c:	b	1ca24 <__assert_fail@plt+0xb93c>
   1c860:	ldr	r0, [fp, #-12]
   1c864:	cmn	r0, #1
   1c868:	bne	1c8f0 <__assert_fail@plt+0xb808>
   1c86c:	b	1c870 <__assert_fail@plt+0xb788>
   1c870:	ldr	r0, [fp, #-8]
   1c874:	ldr	r1, [r0]
   1c878:	ldr	r0, [r0, #4]
   1c87c:	adds	r1, r1, #-2147483648	; 0x80000000
   1c880:	sbc	r0, r0, #0
   1c884:	rsbs	r1, r1, #0
   1c888:	rscs	r0, r0, #0
   1c88c:	str	r1, [fp, #-320]	; 0xfffffec0
   1c890:	str	r0, [fp, #-324]	; 0xfffffebc
   1c894:	blt	1ca04 <__assert_fail@plt+0xb91c>
   1c898:	b	1ca24 <__assert_fail@plt+0xb93c>
   1c89c:	ldr	r0, [fp, #-8]
   1c8a0:	ldr	r1, [r0]
   1c8a4:	ldr	r0, [r0, #4]
   1c8a8:	subs	r1, r1, #1
   1c8ac:	sbcs	r0, r0, #0
   1c8b0:	str	r1, [fp, #-328]	; 0xfffffeb8
   1c8b4:	str	r0, [fp, #-332]	; 0xfffffeb4
   1c8b8:	blt	1ca24 <__assert_fail@plt+0xb93c>
   1c8bc:	b	1c8c0 <__assert_fail@plt+0xb7d8>
   1c8c0:	ldr	r0, [fp, #-8]
   1c8c4:	ldr	r1, [r0]
   1c8c8:	ldr	r0, [r0, #4]
   1c8cc:	subs	r1, r1, #1
   1c8d0:	sbc	r0, r0, #0
   1c8d4:	mvn	r2, #-2147483648	; 0x80000000
   1c8d8:	subs	r1, r2, r1
   1c8dc:	rscs	r0, r0, #0
   1c8e0:	str	r1, [fp, #-336]	; 0xfffffeb0
   1c8e4:	str	r0, [fp, #-340]	; 0xfffffeac
   1c8e8:	blt	1ca04 <__assert_fail@plt+0xb91c>
   1c8ec:	b	1ca24 <__assert_fail@plt+0xb93c>
   1c8f0:	ldr	r0, [fp, #-12]
   1c8f4:	mov	r1, #-2147483648	; 0x80000000
   1c8f8:	sdiv	r0, r1, r0
   1c8fc:	ldr	r1, [fp, #-8]
   1c900:	ldr	r2, [r1]
   1c904:	ldr	r1, [r1, #4]
   1c908:	subs	r2, r0, r2
   1c90c:	rscs	r0, r1, r0, asr #31
   1c910:	str	r2, [fp, #-344]	; 0xfffffea8
   1c914:	str	r0, [fp, #-348]	; 0xfffffea4
   1c918:	blt	1ca04 <__assert_fail@plt+0xb91c>
   1c91c:	b	1ca24 <__assert_fail@plt+0xb93c>
   1c920:	ldr	r0, [fp, #-12]
   1c924:	cmp	r0, #0
   1c928:	bne	1c930 <__assert_fail@plt+0xb848>
   1c92c:	b	1ca24 <__assert_fail@plt+0xb93c>
   1c930:	ldr	r0, [fp, #-8]
   1c934:	ldr	r0, [r0, #4]
   1c938:	cmn	r0, #1
   1c93c:	bgt	1c9d4 <__assert_fail@plt+0xb8ec>
   1c940:	b	1c944 <__assert_fail@plt+0xb85c>
   1c944:	b	1c948 <__assert_fail@plt+0xb860>
   1c948:	b	1c9a0 <__assert_fail@plt+0xb8b8>
   1c94c:	b	1c9a0 <__assert_fail@plt+0xb8b8>
   1c950:	ldr	r0, [fp, #-8]
   1c954:	ldr	r1, [r0]
   1c958:	ldr	r0, [r0, #4]
   1c95c:	and	r0, r1, r0
   1c960:	cmn	r0, #1
   1c964:	bne	1c9a0 <__assert_fail@plt+0xb8b8>
   1c968:	b	1c96c <__assert_fail@plt+0xb884>
   1c96c:	b	1c970 <__assert_fail@plt+0xb888>
   1c970:	ldr	r0, [fp, #-12]
   1c974:	add	r0, r0, #-2147483648	; 0x80000000
   1c978:	movw	r1, #0
   1c97c:	cmp	r1, r0
   1c980:	blt	1ca04 <__assert_fail@plt+0xb91c>
   1c984:	b	1ca24 <__assert_fail@plt+0xb93c>
   1c988:	ldr	r0, [pc, #3948]	; 1d8fc <__assert_fail@plt+0xc814>
   1c98c:	ldr	r1, [fp, #-12]
   1c990:	sub	r1, r1, #1
   1c994:	cmp	r0, r1
   1c998:	blt	1ca04 <__assert_fail@plt+0xb91c>
   1c99c:	b	1ca24 <__assert_fail@plt+0xb93c>
   1c9a0:	ldr	r0, [fp, #-8]
   1c9a4:	ldr	r2, [r0]
   1c9a8:	ldr	r3, [r0, #4]
   1c9ac:	mov	r0, #-2147483648	; 0x80000000
   1c9b0:	mvn	r1, #0
   1c9b4:	bl	1e61c <__assert_fail@plt+0xd534>
   1c9b8:	ldr	r2, [fp, #-12]
   1c9bc:	subs	r0, r0, r2
   1c9c0:	sbcs	r1, r1, r2, asr #31
   1c9c4:	str	r0, [fp, #-352]	; 0xfffffea0
   1c9c8:	str	r1, [fp, #-356]	; 0xfffffe9c
   1c9cc:	blt	1ca04 <__assert_fail@plt+0xb91c>
   1c9d0:	b	1ca24 <__assert_fail@plt+0xb93c>
   1c9d4:	ldr	r0, [fp, #-12]
   1c9d8:	mvn	r1, #-2147483648	; 0x80000000
   1c9dc:	sdiv	r0, r1, r0
   1c9e0:	ldr	r1, [fp, #-8]
   1c9e4:	ldr	r2, [r1]
   1c9e8:	ldr	r1, [r1, #4]
   1c9ec:	subs	r2, r0, r2
   1c9f0:	rscs	r0, r1, r0, asr #31
   1c9f4:	str	r2, [fp, #-360]	; 0xfffffe98
   1c9f8:	str	r0, [fp, #-364]	; 0xfffffe94
   1c9fc:	bge	1ca24 <__assert_fail@plt+0xb93c>
   1ca00:	b	1ca04 <__assert_fail@plt+0xb91c>
   1ca04:	ldr	r0, [fp, #-8]
   1ca08:	ldr	r0, [r0]
   1ca0c:	ldr	r1, [fp, #-12]
   1ca10:	mul	r0, r0, r1
   1ca14:	asr	r1, r0, #31
   1ca18:	str	r0, [fp, #-24]	; 0xffffffe8
   1ca1c:	str	r1, [fp, #-20]	; 0xffffffec
   1ca20:	b	1d89c <__assert_fail@plt+0xc7b4>
   1ca24:	ldr	r0, [fp, #-8]
   1ca28:	ldr	r0, [r0]
   1ca2c:	ldr	r1, [fp, #-12]
   1ca30:	mul	r0, r0, r1
   1ca34:	asr	r1, r0, #31
   1ca38:	str	r0, [fp, #-24]	; 0xffffffe8
   1ca3c:	str	r1, [fp, #-20]	; 0xffffffec
   1ca40:	b	1d8d0 <__assert_fail@plt+0xc7e8>
   1ca44:	ldr	r0, [fp, #-12]
   1ca48:	cmp	r0, #0
   1ca4c:	bge	1cbcc <__assert_fail@plt+0xbae4>
   1ca50:	ldr	r0, [fp, #-8]
   1ca54:	ldr	r0, [r0, #4]
   1ca58:	cmn	r0, #1
   1ca5c:	bgt	1cb14 <__assert_fail@plt+0xba2c>
   1ca60:	b	1ca64 <__assert_fail@plt+0xb97c>
   1ca64:	b	1ca98 <__assert_fail@plt+0xb9b0>
   1ca68:	ldr	r0, [fp, #-8]
   1ca6c:	ldr	r1, [r0]
   1ca70:	ldr	r0, [r0, #4]
   1ca74:	ldr	r2, [fp, #-12]
   1ca78:	mvn	r3, #0
   1ca7c:	udiv	r2, r3, r2
   1ca80:	subs	r1, r1, r2
   1ca84:	sbcs	r0, r0, #0
   1ca88:	str	r1, [fp, #-368]	; 0xfffffe90
   1ca8c:	str	r0, [fp, #-372]	; 0xfffffe8c
   1ca90:	blt	1ccb8 <__assert_fail@plt+0xbbd0>
   1ca94:	b	1ccd8 <__assert_fail@plt+0xbbf0>
   1ca98:	b	1ca9c <__assert_fail@plt+0xb9b4>
   1ca9c:	ldr	r0, [pc, #3668]	; 1d8f8 <__assert_fail@plt+0xc810>
   1caa0:	ldr	r1, [fp, #-12]
   1caa4:	cmp	r1, r0
   1caa8:	blt	1cac0 <__assert_fail@plt+0xb9d8>
   1caac:	b	1cacc <__assert_fail@plt+0xb9e4>
   1cab0:	ldr	r0, [fp, #-12]
   1cab4:	movw	r1, #0
   1cab8:	cmp	r1, r0
   1cabc:	bge	1cacc <__assert_fail@plt+0xb9e4>
   1cac0:	movw	r0, #1
   1cac4:	str	r0, [sp, #376]	; 0x178
   1cac8:	b	1cae4 <__assert_fail@plt+0xb9fc>
   1cacc:	ldr	r0, [fp, #-12]
   1cad0:	movw	r1, #0
   1cad4:	sub	r0, r1, r0
   1cad8:	mvn	r1, #0
   1cadc:	udiv	r0, r1, r0
   1cae0:	str	r0, [sp, #376]	; 0x178
   1cae4:	ldr	r0, [sp, #376]	; 0x178
   1cae8:	ldr	r1, [fp, #-8]
   1caec:	ldr	r2, [r1]
   1caf0:	ldr	r1, [r1, #4]
   1caf4:	mvn	r1, r1
   1caf8:	mvn	r2, r2
   1cafc:	subs	r0, r2, r0
   1cb00:	sbcs	r1, r1, #0
   1cb04:	str	r0, [sp, #372]	; 0x174
   1cb08:	str	r1, [sp, #368]	; 0x170
   1cb0c:	bge	1ccb8 <__assert_fail@plt+0xbbd0>
   1cb10:	b	1ccd8 <__assert_fail@plt+0xbbf0>
   1cb14:	b	1cb18 <__assert_fail@plt+0xba30>
   1cb18:	b	1cb9c <__assert_fail@plt+0xbab4>
   1cb1c:	b	1cb9c <__assert_fail@plt+0xbab4>
   1cb20:	ldr	r0, [fp, #-12]
   1cb24:	cmn	r0, #1
   1cb28:	bne	1cb9c <__assert_fail@plt+0xbab4>
   1cb2c:	b	1cb30 <__assert_fail@plt+0xba48>
   1cb30:	ldr	r0, [fp, #-8]
   1cb34:	ldr	r1, [r0]
   1cb38:	ldr	r0, [r0, #4]
   1cb3c:	rsbs	r1, r1, #0
   1cb40:	rscs	r0, r0, #0
   1cb44:	str	r1, [sp, #364]	; 0x16c
   1cb48:	str	r0, [sp, #360]	; 0x168
   1cb4c:	blt	1ccb8 <__assert_fail@plt+0xbbd0>
   1cb50:	b	1ccd8 <__assert_fail@plt+0xbbf0>
   1cb54:	ldr	r0, [fp, #-8]
   1cb58:	ldr	r1, [r0]
   1cb5c:	ldr	r0, [r0, #4]
   1cb60:	subs	r1, r1, #1
   1cb64:	sbcs	r0, r0, #0
   1cb68:	str	r1, [sp, #356]	; 0x164
   1cb6c:	str	r0, [sp, #352]	; 0x160
   1cb70:	blt	1ccd8 <__assert_fail@plt+0xbbf0>
   1cb74:	b	1cb78 <__assert_fail@plt+0xba90>
   1cb78:	ldr	r0, [fp, #-8]
   1cb7c:	ldr	r1, [r0]
   1cb80:	ldr	r0, [r0, #4]
   1cb84:	subs	r1, r1, #1
   1cb88:	sbc	r0, r0, #0
   1cb8c:	cmn	r0, #1
   1cb90:	str	r1, [sp, #348]	; 0x15c
   1cb94:	bgt	1ccb8 <__assert_fail@plt+0xbbd0>
   1cb98:	b	1ccd8 <__assert_fail@plt+0xbbf0>
   1cb9c:	ldr	r0, [fp, #-12]
   1cba0:	mov	r1, #0
   1cba4:	sdiv	r0, r1, r0
   1cba8:	ldr	r1, [fp, #-8]
   1cbac:	ldr	r2, [r1]
   1cbb0:	ldr	r1, [r1, #4]
   1cbb4:	subs	r2, r0, r2
   1cbb8:	rscs	r0, r1, r0, asr #31
   1cbbc:	str	r2, [sp, #344]	; 0x158
   1cbc0:	str	r0, [sp, #340]	; 0x154
   1cbc4:	blt	1ccb8 <__assert_fail@plt+0xbbd0>
   1cbc8:	b	1ccd8 <__assert_fail@plt+0xbbf0>
   1cbcc:	ldr	r0, [fp, #-12]
   1cbd0:	cmp	r0, #0
   1cbd4:	bne	1cbdc <__assert_fail@plt+0xbaf4>
   1cbd8:	b	1ccd8 <__assert_fail@plt+0xbbf0>
   1cbdc:	ldr	r0, [fp, #-8]
   1cbe0:	ldr	r0, [r0, #4]
   1cbe4:	cmn	r0, #1
   1cbe8:	bgt	1cc84 <__assert_fail@plt+0xbb9c>
   1cbec:	b	1cbf0 <__assert_fail@plt+0xbb08>
   1cbf0:	b	1cbf4 <__assert_fail@plt+0xbb0c>
   1cbf4:	b	1cc4c <__assert_fail@plt+0xbb64>
   1cbf8:	b	1cc4c <__assert_fail@plt+0xbb64>
   1cbfc:	ldr	r0, [fp, #-8]
   1cc00:	ldr	r1, [r0]
   1cc04:	ldr	r0, [r0, #4]
   1cc08:	and	r0, r1, r0
   1cc0c:	cmn	r0, #1
   1cc10:	bne	1cc4c <__assert_fail@plt+0xbb64>
   1cc14:	b	1cc18 <__assert_fail@plt+0xbb30>
   1cc18:	b	1cc1c <__assert_fail@plt+0xbb34>
   1cc1c:	ldr	r0, [fp, #-12]
   1cc20:	add	r0, r0, #0
   1cc24:	movw	r1, #0
   1cc28:	cmp	r1, r0
   1cc2c:	blt	1ccb8 <__assert_fail@plt+0xbbd0>
   1cc30:	b	1ccd8 <__assert_fail@plt+0xbbf0>
   1cc34:	ldr	r0, [fp, #-12]
   1cc38:	sub	r0, r0, #1
   1cc3c:	mvn	r1, #0
   1cc40:	cmp	r1, r0
   1cc44:	blt	1ccb8 <__assert_fail@plt+0xbbd0>
   1cc48:	b	1ccd8 <__assert_fail@plt+0xbbf0>
   1cc4c:	ldr	r0, [fp, #-8]
   1cc50:	ldr	r2, [r0]
   1cc54:	ldr	r3, [r0, #4]
   1cc58:	mov	r0, #0
   1cc5c:	str	r0, [sp, #336]	; 0x150
   1cc60:	ldr	r1, [sp, #336]	; 0x150
   1cc64:	bl	1e61c <__assert_fail@plt+0xd534>
   1cc68:	ldr	r2, [fp, #-12]
   1cc6c:	subs	r0, r0, r2
   1cc70:	sbcs	r1, r1, r2, asr #31
   1cc74:	str	r0, [sp, #332]	; 0x14c
   1cc78:	str	r1, [sp, #328]	; 0x148
   1cc7c:	blt	1ccb8 <__assert_fail@plt+0xbbd0>
   1cc80:	b	1ccd8 <__assert_fail@plt+0xbbf0>
   1cc84:	ldr	r0, [fp, #-12]
   1cc88:	mvn	r1, #0
   1cc8c:	udiv	r0, r1, r0
   1cc90:	ldr	r1, [fp, #-8]
   1cc94:	ldr	r2, [r1]
   1cc98:	ldr	r1, [r1, #4]
   1cc9c:	subs	r0, r0, r2
   1cca0:	rscs	r1, r1, #0
   1cca4:	str	r0, [sp, #324]	; 0x144
   1cca8:	str	r1, [sp, #320]	; 0x140
   1ccac:	bge	1ccd8 <__assert_fail@plt+0xbbf0>
   1ccb0:	b	1ccb8 <__assert_fail@plt+0xbbd0>
   1ccb4:	andhi	r0, r0, r1
   1ccb8:	ldr	r0, [fp, #-8]
   1ccbc:	ldr	r0, [r0]
   1ccc0:	ldr	r1, [fp, #-12]
   1ccc4:	mul	r0, r0, r1
   1ccc8:	mov	r1, #0
   1cccc:	str	r1, [fp, #-20]	; 0xffffffec
   1ccd0:	str	r0, [fp, #-24]	; 0xffffffe8
   1ccd4:	b	1d89c <__assert_fail@plt+0xc7b4>
   1ccd8:	ldr	r0, [fp, #-8]
   1ccdc:	ldr	r0, [r0]
   1cce0:	ldr	r1, [fp, #-12]
   1cce4:	mul	r0, r0, r1
   1cce8:	mov	r1, #0
   1ccec:	str	r1, [fp, #-20]	; 0xffffffec
   1ccf0:	str	r0, [fp, #-24]	; 0xffffffe8
   1ccf4:	b	1d8d0 <__assert_fail@plt+0xc7e8>
   1ccf8:	b	1d264 <__assert_fail@plt+0xc17c>
   1ccfc:	b	1cd00 <__assert_fail@plt+0xbc18>
   1cd00:	ldr	r0, [fp, #-12]
   1cd04:	cmp	r0, #0
   1cd08:	bge	1ce90 <__assert_fail@plt+0xbda8>
   1cd0c:	ldr	r0, [fp, #-8]
   1cd10:	ldr	r0, [r0, #4]
   1cd14:	cmn	r0, #1
   1cd18:	bgt	1cdd0 <__assert_fail@plt+0xbce8>
   1cd1c:	b	1cd20 <__assert_fail@plt+0xbc38>
   1cd20:	b	1cd24 <__assert_fail@plt+0xbc3c>
   1cd24:	ldr	r0, [fp, #-8]
   1cd28:	ldr	r1, [r0]
   1cd2c:	ldr	r0, [r0, #4]
   1cd30:	ldr	r2, [fp, #-12]
   1cd34:	mvn	r3, #-2147483648	; 0x80000000
   1cd38:	sdiv	r2, r3, r2
   1cd3c:	subs	r1, r1, r2
   1cd40:	sbcs	r0, r0, r2, asr #31
   1cd44:	str	r1, [sp, #316]	; 0x13c
   1cd48:	str	r0, [sp, #312]	; 0x138
   1cd4c:	blt	1cf74 <__assert_fail@plt+0xbe8c>
   1cd50:	b	1cf94 <__assert_fail@plt+0xbeac>
   1cd54:	b	1cd58 <__assert_fail@plt+0xbc70>
   1cd58:	ldr	r0, [pc, #2968]	; 1d8f8 <__assert_fail@plt+0xc810>
   1cd5c:	ldr	r1, [fp, #-12]
   1cd60:	cmp	r1, r0
   1cd64:	blt	1cd7c <__assert_fail@plt+0xbc94>
   1cd68:	b	1cd88 <__assert_fail@plt+0xbca0>
   1cd6c:	ldr	r0, [fp, #-12]
   1cd70:	movw	r1, #0
   1cd74:	cmp	r1, r0
   1cd78:	bge	1cd88 <__assert_fail@plt+0xbca0>
   1cd7c:	movw	r0, #0
   1cd80:	str	r0, [sp, #308]	; 0x134
   1cd84:	b	1cda0 <__assert_fail@plt+0xbcb8>
   1cd88:	ldr	r0, [pc, #2924]	; 1d8fc <__assert_fail@plt+0xc814>
   1cd8c:	ldr	r1, [fp, #-12]
   1cd90:	movw	r2, #0
   1cd94:	sub	r1, r2, r1
   1cd98:	sdiv	r0, r0, r1
   1cd9c:	str	r0, [sp, #308]	; 0x134
   1cda0:	ldr	r0, [sp, #308]	; 0x134
   1cda4:	ldr	r1, [fp, #-8]
   1cda8:	ldr	r2, [r1]
   1cdac:	ldr	r1, [r1, #4]
   1cdb0:	mvn	r1, r1
   1cdb4:	mvn	r2, r2
   1cdb8:	subs	r2, r2, r0
   1cdbc:	sbcs	r0, r1, r0, asr #31
   1cdc0:	str	r2, [sp, #304]	; 0x130
   1cdc4:	str	r0, [sp, #300]	; 0x12c
   1cdc8:	bge	1cf74 <__assert_fail@plt+0xbe8c>
   1cdcc:	b	1cf94 <__assert_fail@plt+0xbeac>
   1cdd0:	ldr	r0, [fp, #-12]
   1cdd4:	cmn	r0, #1
   1cdd8:	bne	1ce60 <__assert_fail@plt+0xbd78>
   1cddc:	b	1cde0 <__assert_fail@plt+0xbcf8>
   1cde0:	ldr	r0, [fp, #-8]
   1cde4:	ldr	r1, [r0]
   1cde8:	ldr	r0, [r0, #4]
   1cdec:	adds	r1, r1, #-2147483648	; 0x80000000
   1cdf0:	sbc	r0, r0, #0
   1cdf4:	rsbs	r1, r1, #0
   1cdf8:	rscs	r0, r0, #0
   1cdfc:	str	r1, [sp, #296]	; 0x128
   1ce00:	str	r0, [sp, #292]	; 0x124
   1ce04:	blt	1cf74 <__assert_fail@plt+0xbe8c>
   1ce08:	b	1cf94 <__assert_fail@plt+0xbeac>
   1ce0c:	ldr	r0, [fp, #-8]
   1ce10:	ldr	r1, [r0]
   1ce14:	ldr	r0, [r0, #4]
   1ce18:	subs	r1, r1, #1
   1ce1c:	sbcs	r0, r0, #0
   1ce20:	str	r1, [sp, #288]	; 0x120
   1ce24:	str	r0, [sp, #284]	; 0x11c
   1ce28:	blt	1cf94 <__assert_fail@plt+0xbeac>
   1ce2c:	b	1ce30 <__assert_fail@plt+0xbd48>
   1ce30:	ldr	r0, [fp, #-8]
   1ce34:	ldr	r1, [r0]
   1ce38:	ldr	r0, [r0, #4]
   1ce3c:	subs	r1, r1, #1
   1ce40:	sbc	r0, r0, #0
   1ce44:	mvn	r2, #-2147483648	; 0x80000000
   1ce48:	subs	r1, r2, r1
   1ce4c:	rscs	r0, r0, #0
   1ce50:	str	r1, [sp, #280]	; 0x118
   1ce54:	str	r0, [sp, #276]	; 0x114
   1ce58:	blt	1cf74 <__assert_fail@plt+0xbe8c>
   1ce5c:	b	1cf94 <__assert_fail@plt+0xbeac>
   1ce60:	ldr	r0, [fp, #-12]
   1ce64:	mov	r1, #-2147483648	; 0x80000000
   1ce68:	sdiv	r0, r1, r0
   1ce6c:	ldr	r1, [fp, #-8]
   1ce70:	ldr	r2, [r1]
   1ce74:	ldr	r1, [r1, #4]
   1ce78:	subs	r2, r0, r2
   1ce7c:	rscs	r0, r1, r0, asr #31
   1ce80:	str	r2, [sp, #272]	; 0x110
   1ce84:	str	r0, [sp, #268]	; 0x10c
   1ce88:	blt	1cf74 <__assert_fail@plt+0xbe8c>
   1ce8c:	b	1cf94 <__assert_fail@plt+0xbeac>
   1ce90:	ldr	r0, [fp, #-12]
   1ce94:	cmp	r0, #0
   1ce98:	bne	1cea0 <__assert_fail@plt+0xbdb8>
   1ce9c:	b	1cf94 <__assert_fail@plt+0xbeac>
   1cea0:	ldr	r0, [fp, #-8]
   1cea4:	ldr	r0, [r0, #4]
   1cea8:	cmn	r0, #1
   1ceac:	bgt	1cf44 <__assert_fail@plt+0xbe5c>
   1ceb0:	b	1ceb4 <__assert_fail@plt+0xbdcc>
   1ceb4:	b	1ceb8 <__assert_fail@plt+0xbdd0>
   1ceb8:	b	1cf10 <__assert_fail@plt+0xbe28>
   1cebc:	b	1cf10 <__assert_fail@plt+0xbe28>
   1cec0:	ldr	r0, [fp, #-8]
   1cec4:	ldr	r1, [r0]
   1cec8:	ldr	r0, [r0, #4]
   1cecc:	and	r0, r1, r0
   1ced0:	cmn	r0, #1
   1ced4:	bne	1cf10 <__assert_fail@plt+0xbe28>
   1ced8:	b	1cedc <__assert_fail@plt+0xbdf4>
   1cedc:	b	1cee0 <__assert_fail@plt+0xbdf8>
   1cee0:	ldr	r0, [fp, #-12]
   1cee4:	add	r0, r0, #-2147483648	; 0x80000000
   1cee8:	movw	r1, #0
   1ceec:	cmp	r1, r0
   1cef0:	blt	1cf74 <__assert_fail@plt+0xbe8c>
   1cef4:	b	1cf94 <__assert_fail@plt+0xbeac>
   1cef8:	ldr	r0, [pc, #2556]	; 1d8fc <__assert_fail@plt+0xc814>
   1cefc:	ldr	r1, [fp, #-12]
   1cf00:	sub	r1, r1, #1
   1cf04:	cmp	r0, r1
   1cf08:	blt	1cf74 <__assert_fail@plt+0xbe8c>
   1cf0c:	b	1cf94 <__assert_fail@plt+0xbeac>
   1cf10:	ldr	r0, [fp, #-8]
   1cf14:	ldr	r2, [r0]
   1cf18:	ldr	r3, [r0, #4]
   1cf1c:	mov	r0, #-2147483648	; 0x80000000
   1cf20:	mvn	r1, #0
   1cf24:	bl	1e61c <__assert_fail@plt+0xd534>
   1cf28:	ldr	r2, [fp, #-12]
   1cf2c:	subs	r0, r0, r2
   1cf30:	sbcs	r1, r1, r2, asr #31
   1cf34:	str	r0, [sp, #264]	; 0x108
   1cf38:	str	r1, [sp, #260]	; 0x104
   1cf3c:	blt	1cf74 <__assert_fail@plt+0xbe8c>
   1cf40:	b	1cf94 <__assert_fail@plt+0xbeac>
   1cf44:	ldr	r0, [fp, #-12]
   1cf48:	mvn	r1, #-2147483648	; 0x80000000
   1cf4c:	sdiv	r0, r1, r0
   1cf50:	ldr	r1, [fp, #-8]
   1cf54:	ldr	r2, [r1]
   1cf58:	ldr	r1, [r1, #4]
   1cf5c:	subs	r2, r0, r2
   1cf60:	rscs	r0, r1, r0, asr #31
   1cf64:	str	r2, [sp, #256]	; 0x100
   1cf68:	str	r0, [sp, #252]	; 0xfc
   1cf6c:	bge	1cf94 <__assert_fail@plt+0xbeac>
   1cf70:	b	1cf74 <__assert_fail@plt+0xbe8c>
   1cf74:	ldr	r0, [fp, #-8]
   1cf78:	ldr	r0, [r0]
   1cf7c:	ldr	r1, [fp, #-12]
   1cf80:	mul	r0, r0, r1
   1cf84:	asr	r1, r0, #31
   1cf88:	str	r0, [fp, #-24]	; 0xffffffe8
   1cf8c:	str	r1, [fp, #-20]	; 0xffffffec
   1cf90:	b	1d89c <__assert_fail@plt+0xc7b4>
   1cf94:	ldr	r0, [fp, #-8]
   1cf98:	ldr	r0, [r0]
   1cf9c:	ldr	r1, [fp, #-12]
   1cfa0:	mul	r0, r0, r1
   1cfa4:	asr	r1, r0, #31
   1cfa8:	str	r0, [fp, #-24]	; 0xffffffe8
   1cfac:	str	r1, [fp, #-20]	; 0xffffffec
   1cfb0:	b	1d8d0 <__assert_fail@plt+0xc7e8>
   1cfb4:	ldr	r0, [fp, #-12]
   1cfb8:	cmp	r0, #0
   1cfbc:	bge	1d13c <__assert_fail@plt+0xc054>
   1cfc0:	ldr	r0, [fp, #-8]
   1cfc4:	ldr	r0, [r0, #4]
   1cfc8:	cmn	r0, #1
   1cfcc:	bgt	1d084 <__assert_fail@plt+0xbf9c>
   1cfd0:	b	1cfd4 <__assert_fail@plt+0xbeec>
   1cfd4:	b	1d008 <__assert_fail@plt+0xbf20>
   1cfd8:	ldr	r0, [fp, #-8]
   1cfdc:	ldr	r1, [r0]
   1cfe0:	ldr	r0, [r0, #4]
   1cfe4:	ldr	r2, [fp, #-12]
   1cfe8:	mvn	r3, #0
   1cfec:	udiv	r2, r3, r2
   1cff0:	subs	r1, r1, r2
   1cff4:	sbcs	r0, r0, #0
   1cff8:	str	r1, [sp, #248]	; 0xf8
   1cffc:	str	r0, [sp, #244]	; 0xf4
   1d000:	blt	1d224 <__assert_fail@plt+0xc13c>
   1d004:	b	1d244 <__assert_fail@plt+0xc15c>
   1d008:	b	1d00c <__assert_fail@plt+0xbf24>
   1d00c:	ldr	r0, [pc, #2276]	; 1d8f8 <__assert_fail@plt+0xc810>
   1d010:	ldr	r1, [fp, #-12]
   1d014:	cmp	r1, r0
   1d018:	blt	1d030 <__assert_fail@plt+0xbf48>
   1d01c:	b	1d03c <__assert_fail@plt+0xbf54>
   1d020:	ldr	r0, [fp, #-12]
   1d024:	movw	r1, #0
   1d028:	cmp	r1, r0
   1d02c:	bge	1d03c <__assert_fail@plt+0xbf54>
   1d030:	movw	r0, #1
   1d034:	str	r0, [sp, #240]	; 0xf0
   1d038:	b	1d054 <__assert_fail@plt+0xbf6c>
   1d03c:	ldr	r0, [fp, #-12]
   1d040:	movw	r1, #0
   1d044:	sub	r0, r1, r0
   1d048:	mvn	r1, #0
   1d04c:	udiv	r0, r1, r0
   1d050:	str	r0, [sp, #240]	; 0xf0
   1d054:	ldr	r0, [sp, #240]	; 0xf0
   1d058:	ldr	r1, [fp, #-8]
   1d05c:	ldr	r2, [r1]
   1d060:	ldr	r1, [r1, #4]
   1d064:	mvn	r1, r1
   1d068:	mvn	r2, r2
   1d06c:	subs	r0, r2, r0
   1d070:	sbcs	r1, r1, #0
   1d074:	str	r0, [sp, #236]	; 0xec
   1d078:	str	r1, [sp, #232]	; 0xe8
   1d07c:	bge	1d224 <__assert_fail@plt+0xc13c>
   1d080:	b	1d244 <__assert_fail@plt+0xc15c>
   1d084:	b	1d088 <__assert_fail@plt+0xbfa0>
   1d088:	b	1d10c <__assert_fail@plt+0xc024>
   1d08c:	b	1d10c <__assert_fail@plt+0xc024>
   1d090:	ldr	r0, [fp, #-12]
   1d094:	cmn	r0, #1
   1d098:	bne	1d10c <__assert_fail@plt+0xc024>
   1d09c:	b	1d0a0 <__assert_fail@plt+0xbfb8>
   1d0a0:	ldr	r0, [fp, #-8]
   1d0a4:	ldr	r1, [r0]
   1d0a8:	ldr	r0, [r0, #4]
   1d0ac:	rsbs	r1, r1, #0
   1d0b0:	rscs	r0, r0, #0
   1d0b4:	str	r1, [sp, #228]	; 0xe4
   1d0b8:	str	r0, [sp, #224]	; 0xe0
   1d0bc:	blt	1d224 <__assert_fail@plt+0xc13c>
   1d0c0:	b	1d244 <__assert_fail@plt+0xc15c>
   1d0c4:	ldr	r0, [fp, #-8]
   1d0c8:	ldr	r1, [r0]
   1d0cc:	ldr	r0, [r0, #4]
   1d0d0:	subs	r1, r1, #1
   1d0d4:	sbcs	r0, r0, #0
   1d0d8:	str	r1, [sp, #220]	; 0xdc
   1d0dc:	str	r0, [sp, #216]	; 0xd8
   1d0e0:	blt	1d244 <__assert_fail@plt+0xc15c>
   1d0e4:	b	1d0e8 <__assert_fail@plt+0xc000>
   1d0e8:	ldr	r0, [fp, #-8]
   1d0ec:	ldr	r1, [r0]
   1d0f0:	ldr	r0, [r0, #4]
   1d0f4:	subs	r1, r1, #1
   1d0f8:	sbc	r0, r0, #0
   1d0fc:	cmn	r0, #1
   1d100:	str	r1, [sp, #212]	; 0xd4
   1d104:	bgt	1d224 <__assert_fail@plt+0xc13c>
   1d108:	b	1d244 <__assert_fail@plt+0xc15c>
   1d10c:	ldr	r0, [fp, #-12]
   1d110:	mov	r1, #0
   1d114:	sdiv	r0, r1, r0
   1d118:	ldr	r1, [fp, #-8]
   1d11c:	ldr	r2, [r1]
   1d120:	ldr	r1, [r1, #4]
   1d124:	subs	r2, r0, r2
   1d128:	rscs	r0, r1, r0, asr #31
   1d12c:	str	r2, [sp, #208]	; 0xd0
   1d130:	str	r0, [sp, #204]	; 0xcc
   1d134:	blt	1d224 <__assert_fail@plt+0xc13c>
   1d138:	b	1d244 <__assert_fail@plt+0xc15c>
   1d13c:	ldr	r0, [fp, #-12]
   1d140:	cmp	r0, #0
   1d144:	bne	1d14c <__assert_fail@plt+0xc064>
   1d148:	b	1d244 <__assert_fail@plt+0xc15c>
   1d14c:	ldr	r0, [fp, #-8]
   1d150:	ldr	r0, [r0, #4]
   1d154:	cmn	r0, #1
   1d158:	bgt	1d1f4 <__assert_fail@plt+0xc10c>
   1d15c:	b	1d160 <__assert_fail@plt+0xc078>
   1d160:	b	1d164 <__assert_fail@plt+0xc07c>
   1d164:	b	1d1bc <__assert_fail@plt+0xc0d4>
   1d168:	b	1d1bc <__assert_fail@plt+0xc0d4>
   1d16c:	ldr	r0, [fp, #-8]
   1d170:	ldr	r1, [r0]
   1d174:	ldr	r0, [r0, #4]
   1d178:	and	r0, r1, r0
   1d17c:	cmn	r0, #1
   1d180:	bne	1d1bc <__assert_fail@plt+0xc0d4>
   1d184:	b	1d188 <__assert_fail@plt+0xc0a0>
   1d188:	b	1d18c <__assert_fail@plt+0xc0a4>
   1d18c:	ldr	r0, [fp, #-12]
   1d190:	add	r0, r0, #0
   1d194:	movw	r1, #0
   1d198:	cmp	r1, r0
   1d19c:	blt	1d224 <__assert_fail@plt+0xc13c>
   1d1a0:	b	1d244 <__assert_fail@plt+0xc15c>
   1d1a4:	ldr	r0, [fp, #-12]
   1d1a8:	sub	r0, r0, #1
   1d1ac:	mvn	r1, #0
   1d1b0:	cmp	r1, r0
   1d1b4:	blt	1d224 <__assert_fail@plt+0xc13c>
   1d1b8:	b	1d244 <__assert_fail@plt+0xc15c>
   1d1bc:	ldr	r0, [fp, #-8]
   1d1c0:	ldr	r2, [r0]
   1d1c4:	ldr	r3, [r0, #4]
   1d1c8:	mov	r0, #0
   1d1cc:	str	r0, [sp, #200]	; 0xc8
   1d1d0:	ldr	r1, [sp, #200]	; 0xc8
   1d1d4:	bl	1e61c <__assert_fail@plt+0xd534>
   1d1d8:	ldr	r2, [fp, #-12]
   1d1dc:	subs	r0, r0, r2
   1d1e0:	sbcs	r1, r1, r2, asr #31
   1d1e4:	str	r0, [sp, #196]	; 0xc4
   1d1e8:	str	r1, [sp, #192]	; 0xc0
   1d1ec:	blt	1d224 <__assert_fail@plt+0xc13c>
   1d1f0:	b	1d244 <__assert_fail@plt+0xc15c>
   1d1f4:	ldr	r0, [fp, #-12]
   1d1f8:	mvn	r1, #0
   1d1fc:	udiv	r0, r1, r0
   1d200:	ldr	r1, [fp, #-8]
   1d204:	ldr	r2, [r1]
   1d208:	ldr	r1, [r1, #4]
   1d20c:	subs	r0, r0, r2
   1d210:	rscs	r1, r1, #0
   1d214:	str	r0, [sp, #188]	; 0xbc
   1d218:	str	r1, [sp, #184]	; 0xb8
   1d21c:	bge	1d244 <__assert_fail@plt+0xc15c>
   1d220:	b	1d224 <__assert_fail@plt+0xc13c>
   1d224:	ldr	r0, [fp, #-8]
   1d228:	ldr	r0, [r0]
   1d22c:	ldr	r1, [fp, #-12]
   1d230:	mul	r0, r0, r1
   1d234:	mov	r1, #0
   1d238:	str	r1, [fp, #-20]	; 0xffffffec
   1d23c:	str	r0, [fp, #-24]	; 0xffffffe8
   1d240:	b	1d89c <__assert_fail@plt+0xc7b4>
   1d244:	ldr	r0, [fp, #-8]
   1d248:	ldr	r0, [r0]
   1d24c:	ldr	r1, [fp, #-12]
   1d250:	mul	r0, r0, r1
   1d254:	mov	r1, #0
   1d258:	str	r1, [fp, #-20]	; 0xffffffec
   1d25c:	str	r0, [fp, #-24]	; 0xffffffe8
   1d260:	b	1d8d0 <__assert_fail@plt+0xc7e8>
   1d264:	b	1d268 <__assert_fail@plt+0xc180>
   1d268:	ldr	r0, [fp, #-12]
   1d26c:	cmp	r0, #0
   1d270:	bge	1d438 <__assert_fail@plt+0xc350>
   1d274:	ldr	r0, [fp, #-8]
   1d278:	ldr	r0, [r0, #4]
   1d27c:	cmn	r0, #1
   1d280:	bgt	1d380 <__assert_fail@plt+0xc298>
   1d284:	b	1d288 <__assert_fail@plt+0xc1a0>
   1d288:	b	1d28c <__assert_fail@plt+0xc1a4>
   1d28c:	ldr	r0, [fp, #-8]
   1d290:	ldr	r1, [r0]
   1d294:	ldr	r0, [r0, #4]
   1d298:	ldr	r2, [fp, #-12]
   1d29c:	asr	r3, r2, #31
   1d2a0:	mvn	ip, #0
   1d2a4:	mvn	lr, #-2147483648	; 0x80000000
   1d2a8:	str	r0, [sp, #180]	; 0xb4
   1d2ac:	mov	r0, ip
   1d2b0:	str	r1, [sp, #176]	; 0xb0
   1d2b4:	mov	r1, lr
   1d2b8:	bl	1e61c <__assert_fail@plt+0xd534>
   1d2bc:	ldr	r2, [sp, #176]	; 0xb0
   1d2c0:	subs	r0, r2, r0
   1d2c4:	ldr	r2, [sp, #180]	; 0xb4
   1d2c8:	sbcs	r1, r2, r1
   1d2cc:	str	r0, [sp, #172]	; 0xac
   1d2d0:	str	r1, [sp, #168]	; 0xa8
   1d2d4:	blt	1d52c <__assert_fail@plt+0xc444>
   1d2d8:	b	1d558 <__assert_fail@plt+0xc470>
   1d2dc:	b	1d2e0 <__assert_fail@plt+0xc1f8>
   1d2e0:	ldr	r0, [pc, #1552]	; 1d8f8 <__assert_fail@plt+0xc810>
   1d2e4:	ldr	r1, [fp, #-12]
   1d2e8:	cmp	r1, r0
   1d2ec:	blt	1d304 <__assert_fail@plt+0xc21c>
   1d2f0:	b	1d318 <__assert_fail@plt+0xc230>
   1d2f4:	ldr	r0, [fp, #-12]
   1d2f8:	movw	r1, #0
   1d2fc:	cmp	r1, r0
   1d300:	bge	1d318 <__assert_fail@plt+0xc230>
   1d304:	mov	r0, #0
   1d308:	mvn	r1, #0
   1d30c:	str	r1, [sp, #164]	; 0xa4
   1d310:	str	r0, [sp, #160]	; 0xa0
   1d314:	b	1d34c <__assert_fail@plt+0xc264>
   1d318:	ldr	r0, [fp, #-12]
   1d31c:	rsb	r0, r0, #0
   1d320:	asr	r3, r0, #31
   1d324:	mvn	r1, #0
   1d328:	mvn	r2, #-2147483648	; 0x80000000
   1d32c:	str	r0, [sp, #156]	; 0x9c
   1d330:	mov	r0, r1
   1d334:	mov	r1, r2
   1d338:	ldr	r2, [sp, #156]	; 0x9c
   1d33c:	bl	1e61c <__assert_fail@plt+0xd534>
   1d340:	str	r0, [sp, #164]	; 0xa4
   1d344:	str	r1, [sp, #160]	; 0xa0
   1d348:	b	1d34c <__assert_fail@plt+0xc264>
   1d34c:	ldr	r0, [sp, #160]	; 0xa0
   1d350:	ldr	r1, [sp, #164]	; 0xa4
   1d354:	ldr	r2, [fp, #-8]
   1d358:	ldr	r3, [r2]
   1d35c:	ldr	r2, [r2, #4]
   1d360:	mvn	r2, r2
   1d364:	mvn	r3, r3
   1d368:	subs	r1, r3, r1
   1d36c:	sbcs	r0, r2, r0
   1d370:	str	r1, [sp, #152]	; 0x98
   1d374:	str	r0, [sp, #148]	; 0x94
   1d378:	bge	1d52c <__assert_fail@plt+0xc444>
   1d37c:	b	1d558 <__assert_fail@plt+0xc470>
   1d380:	ldr	r0, [fp, #-12]
   1d384:	cmn	r0, #1
   1d388:	bne	1d3f0 <__assert_fail@plt+0xc308>
   1d38c:	b	1d390 <__assert_fail@plt+0xc2a8>
   1d390:	ldr	r0, [fp, #-8]
   1d394:	ldr	r1, [r0]
   1d398:	ldr	r0, [r0, #4]
   1d39c:	add	r0, r0, #-2147483648	; 0x80000000
   1d3a0:	rsbs	r1, r1, #0
   1d3a4:	rscs	r0, r0, #0
   1d3a8:	str	r1, [sp, #144]	; 0x90
   1d3ac:	str	r0, [sp, #140]	; 0x8c
   1d3b0:	blt	1d52c <__assert_fail@plt+0xc444>
   1d3b4:	b	1d558 <__assert_fail@plt+0xc470>
   1d3b8:	ldr	r0, [fp, #-8]
   1d3bc:	ldr	r1, [r0]
   1d3c0:	ldr	r0, [r0, #4]
   1d3c4:	subs	r1, r1, #1
   1d3c8:	sbcs	r0, r0, #0
   1d3cc:	str	r1, [sp, #136]	; 0x88
   1d3d0:	str	r0, [sp, #132]	; 0x84
   1d3d4:	blt	1d558 <__assert_fail@plt+0xc470>
   1d3d8:	b	1d3dc <__assert_fail@plt+0xc2f4>
   1d3dc:	mov	r0, #0
   1d3e0:	cmp	r0, #0
   1d3e4:	bne	1d52c <__assert_fail@plt+0xc444>
   1d3e8:	b	1d558 <__assert_fail@plt+0xc470>
   1d3ec:			; <UNDEFINED> instruction: 0xffff8000
   1d3f0:	ldr	r0, [fp, #-12]
   1d3f4:	asr	r3, r0, #31
   1d3f8:	mov	r1, #0
   1d3fc:	mov	r2, #-2147483648	; 0x80000000
   1d400:	str	r0, [sp, #128]	; 0x80
   1d404:	mov	r0, r1
   1d408:	mov	r1, r2
   1d40c:	ldr	r2, [sp, #128]	; 0x80
   1d410:	bl	1e61c <__assert_fail@plt+0xd534>
   1d414:	ldr	r2, [fp, #-8]
   1d418:	ldr	r3, [r2]
   1d41c:	ldr	r2, [r2, #4]
   1d420:	subs	r0, r0, r3
   1d424:	sbcs	r1, r1, r2
   1d428:	str	r0, [sp, #124]	; 0x7c
   1d42c:	str	r1, [sp, #120]	; 0x78
   1d430:	blt	1d52c <__assert_fail@plt+0xc444>
   1d434:	b	1d558 <__assert_fail@plt+0xc470>
   1d438:	ldr	r0, [fp, #-12]
   1d43c:	cmp	r0, #0
   1d440:	bne	1d448 <__assert_fail@plt+0xc360>
   1d444:	b	1d558 <__assert_fail@plt+0xc470>
   1d448:	ldr	r0, [fp, #-8]
   1d44c:	ldr	r0, [r0, #4]
   1d450:	cmn	r0, #1
   1d454:	bgt	1d4e4 <__assert_fail@plt+0xc3fc>
   1d458:	b	1d45c <__assert_fail@plt+0xc374>
   1d45c:	ldr	r0, [fp, #-8]
   1d460:	ldr	r1, [r0]
   1d464:	ldr	r0, [r0, #4]
   1d468:	and	r0, r1, r0
   1d46c:	cmn	r0, #1
   1d470:	bne	1d4b0 <__assert_fail@plt+0xc3c8>
   1d474:	b	1d478 <__assert_fail@plt+0xc390>
   1d478:	b	1d47c <__assert_fail@plt+0xc394>
   1d47c:	ldr	r0, [fp, #-12]
   1d480:	mov	r1, #-2147483648	; 0x80000000
   1d484:	add	r1, r1, r0, asr #31
   1d488:	rsbs	r0, r0, #0
   1d48c:	rscs	r1, r1, #0
   1d490:	str	r0, [sp, #116]	; 0x74
   1d494:	str	r1, [sp, #112]	; 0x70
   1d498:	blt	1d52c <__assert_fail@plt+0xc444>
   1d49c:	b	1d558 <__assert_fail@plt+0xc470>
   1d4a0:	mov	r0, #0
   1d4a4:	cmp	r0, #0
   1d4a8:	bne	1d52c <__assert_fail@plt+0xc444>
   1d4ac:	b	1d558 <__assert_fail@plt+0xc470>
   1d4b0:	ldr	r0, [fp, #-8]
   1d4b4:	ldr	r2, [r0]
   1d4b8:	ldr	r3, [r0, #4]
   1d4bc:	mov	r0, #0
   1d4c0:	mov	r1, #-2147483648	; 0x80000000
   1d4c4:	bl	1e61c <__assert_fail@plt+0xd534>
   1d4c8:	ldr	r2, [fp, #-12]
   1d4cc:	subs	r0, r0, r2
   1d4d0:	sbcs	r1, r1, r2, asr #31
   1d4d4:	str	r0, [sp, #108]	; 0x6c
   1d4d8:	str	r1, [sp, #104]	; 0x68
   1d4dc:	blt	1d52c <__assert_fail@plt+0xc444>
   1d4e0:	b	1d558 <__assert_fail@plt+0xc470>
   1d4e4:	ldr	r0, [fp, #-12]
   1d4e8:	asr	r3, r0, #31
   1d4ec:	mvn	r1, #0
   1d4f0:	mvn	r2, #-2147483648	; 0x80000000
   1d4f4:	str	r0, [sp, #100]	; 0x64
   1d4f8:	mov	r0, r1
   1d4fc:	mov	r1, r2
   1d500:	ldr	r2, [sp, #100]	; 0x64
   1d504:	bl	1e61c <__assert_fail@plt+0xd534>
   1d508:	ldr	r2, [fp, #-8]
   1d50c:	ldr	r3, [r2]
   1d510:	ldr	r2, [r2, #4]
   1d514:	subs	r0, r0, r3
   1d518:	sbcs	r1, r1, r2
   1d51c:	str	r0, [sp, #96]	; 0x60
   1d520:	str	r1, [sp, #92]	; 0x5c
   1d524:	bge	1d558 <__assert_fail@plt+0xc470>
   1d528:	b	1d52c <__assert_fail@plt+0xc444>
   1d52c:	ldr	r0, [fp, #-8]
   1d530:	ldr	r1, [r0]
   1d534:	ldr	r0, [r0, #4]
   1d538:	ldr	r2, [fp, #-12]
   1d53c:	asr	r3, r2, #31
   1d540:	umull	ip, lr, r1, r2
   1d544:	mla	r1, r1, r3, lr
   1d548:	mla	r0, r0, r2, r1
   1d54c:	str	ip, [fp, #-24]	; 0xffffffe8
   1d550:	str	r0, [fp, #-20]	; 0xffffffec
   1d554:	b	1d89c <__assert_fail@plt+0xc7b4>
   1d558:	ldr	r0, [fp, #-8]
   1d55c:	ldr	r1, [r0]
   1d560:	ldr	r0, [r0, #4]
   1d564:	ldr	r2, [fp, #-12]
   1d568:	asr	r3, r2, #31
   1d56c:	umull	ip, lr, r1, r2
   1d570:	mla	r1, r1, r3, lr
   1d574:	mla	r0, r0, r2, r1
   1d578:	str	ip, [fp, #-24]	; 0xffffffe8
   1d57c:	str	r0, [fp, #-20]	; 0xffffffec
   1d580:	b	1d8d0 <__assert_fail@plt+0xc7e8>
   1d584:	ldr	r0, [fp, #-12]
   1d588:	cmp	r0, #0
   1d58c:	bge	1d748 <__assert_fail@plt+0xc660>
   1d590:	ldr	r0, [fp, #-8]
   1d594:	ldr	r0, [r0, #4]
   1d598:	cmn	r0, #1
   1d59c:	bgt	1d690 <__assert_fail@plt+0xc5a8>
   1d5a0:	b	1d5a4 <__assert_fail@plt+0xc4bc>
   1d5a4:	b	1d5f4 <__assert_fail@plt+0xc50c>
   1d5a8:	ldr	r0, [fp, #-8]
   1d5ac:	ldr	r1, [r0]
   1d5b0:	ldr	r0, [r0, #4]
   1d5b4:	ldr	r2, [fp, #-12]
   1d5b8:	asr	r3, r2, #31
   1d5bc:	mvn	ip, #0
   1d5c0:	str	r0, [sp, #88]	; 0x58
   1d5c4:	mov	r0, ip
   1d5c8:	str	r1, [sp, #84]	; 0x54
   1d5cc:	mov	r1, ip
   1d5d0:	bl	1e6f0 <__assert_fail@plt+0xd608>
   1d5d4:	ldr	r2, [sp, #84]	; 0x54
   1d5d8:	subs	r0, r2, r0
   1d5dc:	ldr	r2, [sp, #88]	; 0x58
   1d5e0:	sbcs	r1, r2, r1
   1d5e4:	str	r0, [sp, #80]	; 0x50
   1d5e8:	str	r1, [sp, #76]	; 0x4c
   1d5ec:	bcc	1d844 <__assert_fail@plt+0xc75c>
   1d5f0:	b	1d870 <__assert_fail@plt+0xc788>
   1d5f4:	b	1d5f8 <__assert_fail@plt+0xc510>
   1d5f8:	ldr	r0, [pc, #760]	; 1d8f8 <__assert_fail@plt+0xc810>
   1d5fc:	ldr	r1, [fp, #-12]
   1d600:	cmp	r1, r0
   1d604:	blt	1d61c <__assert_fail@plt+0xc534>
   1d608:	b	1d630 <__assert_fail@plt+0xc548>
   1d60c:	ldr	r0, [fp, #-12]
   1d610:	movw	r1, #0
   1d614:	cmp	r1, r0
   1d618:	bge	1d630 <__assert_fail@plt+0xc548>
   1d61c:	mov	r0, #1
   1d620:	mvn	r1, #0
   1d624:	str	r1, [sp, #72]	; 0x48
   1d628:	str	r0, [sp, #68]	; 0x44
   1d62c:	b	1d65c <__assert_fail@plt+0xc574>
   1d630:	ldr	r0, [fp, #-12]
   1d634:	rsb	r0, r0, #0
   1d638:	asr	r3, r0, #31
   1d63c:	mvn	r1, #0
   1d640:	str	r0, [sp, #64]	; 0x40
   1d644:	mov	r0, r1
   1d648:	ldr	r2, [sp, #64]	; 0x40
   1d64c:	bl	1e6f0 <__assert_fail@plt+0xd608>
   1d650:	str	r0, [sp, #72]	; 0x48
   1d654:	str	r1, [sp, #68]	; 0x44
   1d658:	b	1d65c <__assert_fail@plt+0xc574>
   1d65c:	ldr	r0, [sp, #68]	; 0x44
   1d660:	ldr	r1, [sp, #72]	; 0x48
   1d664:	ldr	r2, [fp, #-8]
   1d668:	ldr	r3, [r2]
   1d66c:	ldr	r2, [r2, #4]
   1d670:	mvn	r2, r2
   1d674:	mvn	r3, r3
   1d678:	subs	r1, r3, r1
   1d67c:	sbcs	r0, r2, r0
   1d680:	str	r1, [sp, #60]	; 0x3c
   1d684:	str	r0, [sp, #56]	; 0x38
   1d688:	bcs	1d844 <__assert_fail@plt+0xc75c>
   1d68c:	b	1d870 <__assert_fail@plt+0xc788>
   1d690:	b	1d694 <__assert_fail@plt+0xc5ac>
   1d694:	b	1d718 <__assert_fail@plt+0xc630>
   1d698:	b	1d718 <__assert_fail@plt+0xc630>
   1d69c:	ldr	r0, [fp, #-12]
   1d6a0:	cmn	r0, #1
   1d6a4:	bne	1d718 <__assert_fail@plt+0xc630>
   1d6a8:	b	1d6ac <__assert_fail@plt+0xc5c4>
   1d6ac:	ldr	r0, [fp, #-8]
   1d6b0:	ldr	r1, [r0]
   1d6b4:	ldr	r0, [r0, #4]
   1d6b8:	rsbs	r1, r1, #0
   1d6bc:	rscs	r0, r0, #0
   1d6c0:	str	r1, [sp, #52]	; 0x34
   1d6c4:	str	r0, [sp, #48]	; 0x30
   1d6c8:	blt	1d844 <__assert_fail@plt+0xc75c>
   1d6cc:	b	1d870 <__assert_fail@plt+0xc788>
   1d6d0:	ldr	r0, [fp, #-8]
   1d6d4:	ldr	r1, [r0]
   1d6d8:	ldr	r0, [r0, #4]
   1d6dc:	subs	r1, r1, #1
   1d6e0:	sbcs	r0, r0, #0
   1d6e4:	str	r1, [sp, #44]	; 0x2c
   1d6e8:	str	r0, [sp, #40]	; 0x28
   1d6ec:	blt	1d870 <__assert_fail@plt+0xc788>
   1d6f0:	b	1d6f4 <__assert_fail@plt+0xc60c>
   1d6f4:	ldr	r0, [fp, #-8]
   1d6f8:	ldr	r1, [r0]
   1d6fc:	ldr	r0, [r0, #4]
   1d700:	subs	r1, r1, #1
   1d704:	sbc	r0, r0, #0
   1d708:	cmn	r0, #1
   1d70c:	str	r1, [sp, #36]	; 0x24
   1d710:	bgt	1d844 <__assert_fail@plt+0xc75c>
   1d714:	b	1d870 <__assert_fail@plt+0xc788>
   1d718:	ldr	r0, [fp, #-12]
   1d71c:	mov	r1, #0
   1d720:	sdiv	r0, r1, r0
   1d724:	ldr	r1, [fp, #-8]
   1d728:	ldr	r2, [r1]
   1d72c:	ldr	r1, [r1, #4]
   1d730:	subs	r2, r0, r2
   1d734:	rscs	r0, r1, r0, asr #31
   1d738:	str	r2, [sp, #32]
   1d73c:	str	r0, [sp, #28]
   1d740:	blt	1d844 <__assert_fail@plt+0xc75c>
   1d744:	b	1d870 <__assert_fail@plt+0xc788>
   1d748:	ldr	r0, [fp, #-12]
   1d74c:	cmp	r0, #0
   1d750:	bne	1d758 <__assert_fail@plt+0xc670>
   1d754:	b	1d870 <__assert_fail@plt+0xc788>
   1d758:	ldr	r0, [fp, #-8]
   1d75c:	ldr	r0, [r0, #4]
   1d760:	cmn	r0, #1
   1d764:	bgt	1d804 <__assert_fail@plt+0xc71c>
   1d768:	b	1d76c <__assert_fail@plt+0xc684>
   1d76c:	b	1d770 <__assert_fail@plt+0xc688>
   1d770:	b	1d7c8 <__assert_fail@plt+0xc6e0>
   1d774:	b	1d7c8 <__assert_fail@plt+0xc6e0>
   1d778:	ldr	r0, [fp, #-8]
   1d77c:	ldr	r1, [r0]
   1d780:	ldr	r0, [r0, #4]
   1d784:	and	r0, r1, r0
   1d788:	cmn	r0, #1
   1d78c:	bne	1d7c8 <__assert_fail@plt+0xc6e0>
   1d790:	b	1d794 <__assert_fail@plt+0xc6ac>
   1d794:	b	1d798 <__assert_fail@plt+0xc6b0>
   1d798:	ldr	r0, [fp, #-12]
   1d79c:	add	r0, r0, #0
   1d7a0:	movw	r1, #0
   1d7a4:	cmp	r1, r0
   1d7a8:	blt	1d844 <__assert_fail@plt+0xc75c>
   1d7ac:	b	1d870 <__assert_fail@plt+0xc788>
   1d7b0:	ldr	r0, [fp, #-12]
   1d7b4:	sub	r0, r0, #1
   1d7b8:	mvn	r1, #0
   1d7bc:	cmp	r1, r0
   1d7c0:	blt	1d844 <__assert_fail@plt+0xc75c>
   1d7c4:	b	1d870 <__assert_fail@plt+0xc788>
   1d7c8:	ldr	r0, [fp, #-8]
   1d7cc:	ldr	r2, [r0]
   1d7d0:	ldr	r3, [r0, #4]
   1d7d4:	mov	r0, #0
   1d7d8:	str	r0, [sp, #24]
   1d7dc:	ldr	r1, [sp, #24]
   1d7e0:	bl	1e61c <__assert_fail@plt+0xd534>
   1d7e4:	ldr	r2, [fp, #-12]
   1d7e8:	subs	r0, r0, r2
   1d7ec:	sbcs	r1, r1, r2, asr #31
   1d7f0:	str	r0, [sp, #20]
   1d7f4:	str	r1, [sp, #16]
   1d7f8:	blt	1d844 <__assert_fail@plt+0xc75c>
   1d7fc:	b	1d870 <__assert_fail@plt+0xc788>
   1d800:	svcvc	0x00ffffff
   1d804:	ldr	r0, [fp, #-12]
   1d808:	asr	r3, r0, #31
   1d80c:	mvn	r1, #0
   1d810:	str	r0, [sp, #12]
   1d814:	mov	r0, r1
   1d818:	ldr	r2, [sp, #12]
   1d81c:	bl	1e6f0 <__assert_fail@plt+0xd608>
   1d820:	ldr	r2, [fp, #-8]
   1d824:	ldr	r3, [r2]
   1d828:	ldr	r2, [r2, #4]
   1d82c:	subs	r0, r0, r3
   1d830:	sbcs	r1, r1, r2
   1d834:	str	r0, [sp, #8]
   1d838:	str	r1, [sp, #4]
   1d83c:	bcs	1d870 <__assert_fail@plt+0xc788>
   1d840:	b	1d844 <__assert_fail@plt+0xc75c>
   1d844:	ldr	r0, [fp, #-8]
   1d848:	ldr	r1, [r0]
   1d84c:	ldr	r0, [r0, #4]
   1d850:	ldr	r2, [fp, #-12]
   1d854:	asr	r3, r2, #31
   1d858:	umull	ip, lr, r1, r2
   1d85c:	mla	r1, r1, r3, lr
   1d860:	mla	r0, r0, r2, r1
   1d864:	str	ip, [fp, #-24]	; 0xffffffe8
   1d868:	str	r0, [fp, #-20]	; 0xffffffec
   1d86c:	b	1d89c <__assert_fail@plt+0xc7b4>
   1d870:	ldr	r0, [fp, #-8]
   1d874:	ldr	r1, [r0]
   1d878:	ldr	r0, [r0, #4]
   1d87c:	ldr	r2, [fp, #-12]
   1d880:	asr	r3, r2, #31
   1d884:	umull	ip, lr, r1, r2
   1d888:	mla	r1, r1, r3, lr
   1d88c:	mla	r0, r0, r2, r1
   1d890:	str	ip, [fp, #-24]	; 0xffffffe8
   1d894:	str	r0, [fp, #-20]	; 0xffffffec
   1d898:	b	1d8d0 <__assert_fail@plt+0xc7e8>
   1d89c:	ldr	r0, [fp, #-8]
   1d8a0:	ldr	r1, [r0, #4]
   1d8a4:	mvn	r2, #0
   1d8a8:	cmp	r1, #0
   1d8ac:	movwlt	r2, #0
   1d8b0:	mvn	r3, #-2147483648	; 0x80000000
   1d8b4:	cmp	r1, #0
   1d8b8:	movlt	r3, #-2147483648	; 0x80000000
   1d8bc:	str	r3, [r0, #4]
   1d8c0:	str	r2, [r0]
   1d8c4:	movw	r0, #1
   1d8c8:	str	r0, [fp, #-4]
   1d8cc:	b	1d8ec <__assert_fail@plt+0xc804>
   1d8d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d8d4:	ldr	r1, [fp, #-20]	; 0xffffffec
   1d8d8:	ldr	r2, [fp, #-8]
   1d8dc:	str	r1, [r2, #4]
   1d8e0:	str	r0, [r2]
   1d8e4:	movw	r0, #0
   1d8e8:	str	r0, [fp, #-4]
   1d8ec:	ldr	r0, [fp, #-4]
   1d8f0:	mov	sp, fp
   1d8f4:	pop	{fp, pc}
   1d8f8:	andhi	r0, r0, r1
   1d8fc:	svcvc	0x00ffffff
   1d900:	push	{fp, lr}
   1d904:	mov	fp, sp
   1d908:	sub	sp, sp, #16
   1d90c:	str	r0, [fp, #-4]
   1d910:	str	r1, [sp, #8]
   1d914:	str	r2, [sp, #4]
   1d918:	movw	r0, #0
   1d91c:	str	r0, [sp]
   1d920:	ldr	r0, [sp, #4]
   1d924:	mvn	r1, #0
   1d928:	add	r1, r0, r1
   1d92c:	str	r1, [sp, #4]
   1d930:	cmp	r0, #0
   1d934:	beq	1d954 <__assert_fail@plt+0xc86c>
   1d938:	ldr	r0, [fp, #-4]
   1d93c:	ldr	r1, [sp, #8]
   1d940:	bl	1bc58 <__assert_fail@plt+0xab70>
   1d944:	ldr	r1, [sp]
   1d948:	orr	r0, r1, r0
   1d94c:	str	r0, [sp]
   1d950:	b	1d920 <__assert_fail@plt+0xc838>
   1d954:	ldr	r0, [sp]
   1d958:	mov	sp, fp
   1d95c:	pop	{fp, pc}
   1d960:	push	{fp, lr}
   1d964:	mov	fp, sp
   1d968:	sub	sp, sp, #16
   1d96c:	str	r0, [sp, #8]
   1d970:	str	r1, [sp, #4]
   1d974:	ldr	r0, [sp, #8]
   1d978:	cmp	r0, #0
   1d97c:	beq	1d98c <__assert_fail@plt+0xc8a4>
   1d980:	ldr	r0, [sp, #4]
   1d984:	cmp	r0, #0
   1d988:	bne	1d998 <__assert_fail@plt+0xc8b0>
   1d98c:	movw	r0, #1
   1d990:	str	r0, [sp, #4]
   1d994:	str	r0, [sp, #8]
   1d998:	ldr	r0, [sp, #4]
   1d99c:	cmp	r0, #0
   1d9a0:	beq	1d9d4 <__assert_fail@plt+0xc8ec>
   1d9a4:	ldr	r0, [pc, #76]	; 1d9f8 <__assert_fail@plt+0xc910>
   1d9a8:	ldr	r1, [sp, #4]
   1d9ac:	udiv	r0, r0, r1
   1d9b0:	ldr	r1, [sp, #8]
   1d9b4:	cmp	r0, r1
   1d9b8:	bcs	1d9d4 <__assert_fail@plt+0xc8ec>
   1d9bc:	bl	11010 <__errno_location@plt>
   1d9c0:	movw	lr, #12
   1d9c4:	str	lr, [r0]
   1d9c8:	movw	r0, #0
   1d9cc:	str	r0, [fp, #-4]
   1d9d0:	b	1d9ec <__assert_fail@plt+0xc904>
   1d9d4:	ldr	r0, [sp, #8]
   1d9d8:	ldr	r1, [sp, #4]
   1d9dc:	bl	10e6c <calloc@plt>
   1d9e0:	str	r0, [sp]
   1d9e4:	ldr	r0, [sp]
   1d9e8:	str	r0, [fp, #-4]
   1d9ec:	ldr	r0, [fp, #-4]
   1d9f0:	mov	sp, fp
   1d9f4:	pop	{fp, pc}
   1d9f8:	svcvc	0x00ffffff
   1d9fc:	push	{fp, lr}
   1da00:	mov	fp, sp
   1da04:	sub	sp, sp, #16
   1da08:	str	r0, [sp, #8]
   1da0c:	ldr	r0, [sp, #8]
   1da10:	cmp	r0, #0
   1da14:	bne	1da20 <__assert_fail@plt+0xc938>
   1da18:	movw	r0, #1
   1da1c:	str	r0, [sp, #8]
   1da20:	ldr	r0, [pc, #64]	; 1da68 <__assert_fail@plt+0xc980>
   1da24:	ldr	r1, [sp, #8]
   1da28:	cmp	r0, r1
   1da2c:	bcs	1da48 <__assert_fail@plt+0xc960>
   1da30:	bl	11010 <__errno_location@plt>
   1da34:	movw	lr, #12
   1da38:	str	lr, [r0]
   1da3c:	movw	r0, #0
   1da40:	str	r0, [fp, #-4]
   1da44:	b	1da5c <__assert_fail@plt+0xc974>
   1da48:	ldr	r0, [sp, #8]
   1da4c:	bl	10f8c <malloc@plt>
   1da50:	str	r0, [sp, #4]
   1da54:	ldr	r0, [sp, #4]
   1da58:	str	r0, [fp, #-4]
   1da5c:	ldr	r0, [fp, #-4]
   1da60:	mov	sp, fp
   1da64:	pop	{fp, pc}
   1da68:	svcvc	0x00ffffff
   1da6c:	push	{fp, lr}
   1da70:	mov	fp, sp
   1da74:	sub	sp, sp, #16
   1da78:	str	r0, [sp, #8]
   1da7c:	str	r1, [sp, #4]
   1da80:	ldr	r0, [sp, #8]
   1da84:	movw	r1, #0
   1da88:	cmp	r0, r1
   1da8c:	bne	1daa0 <__assert_fail@plt+0xc9b8>
   1da90:	ldr	r0, [sp, #4]
   1da94:	bl	1d9fc <__assert_fail@plt+0xc914>
   1da98:	str	r0, [fp, #-4]
   1da9c:	b	1db00 <__assert_fail@plt+0xca18>
   1daa0:	ldr	r0, [sp, #4]
   1daa4:	cmp	r0, #0
   1daa8:	bne	1dac0 <__assert_fail@plt+0xc9d8>
   1daac:	ldr	r0, [sp, #8]
   1dab0:	bl	14070 <__assert_fail@plt+0x2f88>
   1dab4:	movw	r0, #0
   1dab8:	str	r0, [fp, #-4]
   1dabc:	b	1db00 <__assert_fail@plt+0xca18>
   1dac0:	ldr	r0, [pc, #68]	; 1db0c <__assert_fail@plt+0xca24>
   1dac4:	ldr	r1, [sp, #4]
   1dac8:	cmp	r0, r1
   1dacc:	bcs	1dae8 <__assert_fail@plt+0xca00>
   1dad0:	bl	11010 <__errno_location@plt>
   1dad4:	movw	lr, #12
   1dad8:	str	lr, [r0]
   1dadc:	movw	r0, #0
   1dae0:	str	r0, [fp, #-4]
   1dae4:	b	1db00 <__assert_fail@plt+0xca18>
   1dae8:	ldr	r0, [sp, #8]
   1daec:	ldr	r1, [sp, #4]
   1daf0:	bl	10f20 <realloc@plt>
   1daf4:	str	r0, [sp]
   1daf8:	ldr	r0, [sp]
   1dafc:	str	r0, [fp, #-4]
   1db00:	ldr	r0, [fp, #-4]
   1db04:	mov	sp, fp
   1db08:	pop	{fp, pc}
   1db0c:	svcvc	0x00ffffff
   1db10:	sub	sp, sp, #8
   1db14:	str	r0, [sp, #4]
   1db18:	str	r1, [sp]
   1db1c:	movw	r0, #0
   1db20:	add	sp, sp, #8
   1db24:	bx	lr
   1db28:	push	{fp, lr}
   1db2c:	mov	fp, sp
   1db30:	sub	sp, sp, #8
   1db34:	str	r0, [sp, #4]
   1db38:	str	r1, [sp]
   1db3c:	ldr	r0, [sp, #4]
   1db40:	ldr	r1, [sp]
   1db44:	bl	1db10 <__assert_fail@plt+0xca28>
   1db48:	mov	sp, fp
   1db4c:	pop	{fp, pc}
   1db50:	push	{fp, lr}
   1db54:	mov	fp, sp
   1db58:	sub	sp, sp, #24
   1db5c:	str	r0, [fp, #-8]
   1db60:	str	r1, [sp, #12]
   1db64:	ldr	r0, [fp, #-8]
   1db68:	str	r0, [sp, #8]
   1db6c:	ldr	r0, [sp, #12]
   1db70:	str	r0, [sp, #4]
   1db74:	ldr	r0, [sp, #8]
   1db78:	ldr	r1, [sp, #4]
   1db7c:	cmp	r0, r1
   1db80:	bne	1db90 <__assert_fail@plt+0xcaa8>
   1db84:	movw	r0, #0
   1db88:	str	r0, [fp, #-4]
   1db8c:	b	1dbfc <__assert_fail@plt+0xcb14>
   1db90:	b	1db94 <__assert_fail@plt+0xcaac>
   1db94:	ldr	r0, [sp, #8]
   1db98:	ldrb	r0, [r0]
   1db9c:	bl	1e39c <__assert_fail@plt+0xd2b4>
   1dba0:	strb	r0, [sp, #3]
   1dba4:	ldr	r0, [sp, #4]
   1dba8:	ldrb	r0, [r0]
   1dbac:	bl	1e39c <__assert_fail@plt+0xd2b4>
   1dbb0:	strb	r0, [sp, #2]
   1dbb4:	ldrb	r0, [sp, #3]
   1dbb8:	cmp	r0, #0
   1dbbc:	bne	1dbc4 <__assert_fail@plt+0xcadc>
   1dbc0:	b	1dbec <__assert_fail@plt+0xcb04>
   1dbc4:	ldr	r0, [sp, #8]
   1dbc8:	add	r0, r0, #1
   1dbcc:	str	r0, [sp, #8]
   1dbd0:	ldr	r0, [sp, #4]
   1dbd4:	add	r0, r0, #1
   1dbd8:	str	r0, [sp, #4]
   1dbdc:	ldrb	r0, [sp, #3]
   1dbe0:	ldrb	r1, [sp, #2]
   1dbe4:	cmp	r0, r1
   1dbe8:	beq	1db94 <__assert_fail@plt+0xcaac>
   1dbec:	ldrb	r0, [sp, #3]
   1dbf0:	ldrb	r1, [sp, #2]
   1dbf4:	sub	r0, r0, r1
   1dbf8:	str	r0, [fp, #-4]
   1dbfc:	ldr	r0, [fp, #-4]
   1dc00:	mov	sp, fp
   1dc04:	pop	{fp, pc}
   1dc08:	push	{fp, lr}
   1dc0c:	mov	fp, sp
   1dc10:	sub	sp, sp, #16
   1dc14:	str	r0, [sp, #8]
   1dc18:	ldr	r0, [sp, #8]
   1dc1c:	bl	10f5c <__fpending@plt>
   1dc20:	cmp	r0, #0
   1dc24:	movw	r0, #0
   1dc28:	movne	r0, #1
   1dc2c:	and	r0, r0, #1
   1dc30:	strb	r0, [sp, #7]
   1dc34:	ldr	r0, [sp, #8]
   1dc38:	bl	10f68 <ferror_unlocked@plt>
   1dc3c:	cmp	r0, #0
   1dc40:	movw	r0, #0
   1dc44:	movne	r0, #1
   1dc48:	and	r0, r0, #1
   1dc4c:	strb	r0, [sp, #6]
   1dc50:	ldr	r0, [sp, #8]
   1dc54:	bl	13ed4 <__assert_fail@plt+0x2dec>
   1dc58:	cmp	r0, #0
   1dc5c:	movw	r0, #0
   1dc60:	movne	r0, #1
   1dc64:	and	r0, r0, #1
   1dc68:	strb	r0, [sp, #5]
   1dc6c:	ldrb	r0, [sp, #6]
   1dc70:	tst	r0, #1
   1dc74:	bne	1dca0 <__assert_fail@plt+0xcbb8>
   1dc78:	ldrb	r0, [sp, #5]
   1dc7c:	tst	r0, #1
   1dc80:	beq	1dcc4 <__assert_fail@plt+0xcbdc>
   1dc84:	ldrb	r0, [sp, #7]
   1dc88:	tst	r0, #1
   1dc8c:	bne	1dca0 <__assert_fail@plt+0xcbb8>
   1dc90:	bl	11010 <__errno_location@plt>
   1dc94:	ldr	r0, [r0]
   1dc98:	cmp	r0, #9
   1dc9c:	beq	1dcc4 <__assert_fail@plt+0xcbdc>
   1dca0:	ldrb	r0, [sp, #5]
   1dca4:	tst	r0, #1
   1dca8:	bne	1dcb8 <__assert_fail@plt+0xcbd0>
   1dcac:	bl	11010 <__errno_location@plt>
   1dcb0:	movw	lr, #0
   1dcb4:	str	lr, [r0]
   1dcb8:	mvn	r0, #0
   1dcbc:	str	r0, [fp, #-4]
   1dcc0:	b	1dccc <__assert_fail@plt+0xcbe4>
   1dcc4:	movw	r0, #0
   1dcc8:	str	r0, [fp, #-4]
   1dccc:	ldr	r0, [fp, #-4]
   1dcd0:	mov	sp, fp
   1dcd4:	pop	{fp, pc}
   1dcd8:	push	{fp, lr}
   1dcdc:	mov	fp, sp
   1dce0:	sub	sp, sp, #8
   1dce4:	movw	r0, #14
   1dce8:	bl	11088 <nl_langinfo@plt>
   1dcec:	str	r0, [sp, #4]
   1dcf0:	ldr	r0, [sp, #4]
   1dcf4:	movw	lr, #0
   1dcf8:	cmp	r0, lr
   1dcfc:	bne	1dd0c <__assert_fail@plt+0xcc24>
   1dd00:	movw	r0, #60928	; 0xee00
   1dd04:	movt	r0, #1
   1dd08:	str	r0, [sp, #4]
   1dd0c:	ldr	r0, [sp, #4]
   1dd10:	ldrb	r0, [r0]
   1dd14:	cmp	r0, #0
   1dd18:	bne	1dd28 <__assert_fail@plt+0xcc40>
   1dd1c:	movw	r0, #62717	; 0xf4fd
   1dd20:	movt	r0, #1
   1dd24:	str	r0, [sp, #4]
   1dd28:	ldr	r0, [sp, #4]
   1dd2c:	mov	sp, fp
   1dd30:	pop	{fp, pc}
   1dd34:	push	{fp, lr}
   1dd38:	mov	fp, sp
   1dd3c:	sub	sp, sp, #32
   1dd40:	str	r0, [fp, #-8]
   1dd44:	str	r1, [fp, #-12]
   1dd48:	str	r2, [sp, #16]
   1dd4c:	str	r3, [sp, #12]
   1dd50:	ldr	r0, [fp, #-8]
   1dd54:	movw	r1, #0
   1dd58:	cmp	r0, r1
   1dd5c:	bne	1dd68 <__assert_fail@plt+0xcc80>
   1dd60:	add	r0, sp, #4
   1dd64:	str	r0, [fp, #-8]
   1dd68:	ldr	r0, [fp, #-8]
   1dd6c:	ldr	r1, [fp, #-12]
   1dd70:	ldr	r2, [sp, #16]
   1dd74:	ldr	r3, [sp, #12]
   1dd78:	bl	10f74 <mbrtowc@plt>
   1dd7c:	str	r0, [sp, #8]
   1dd80:	ldr	r0, [sp, #8]
   1dd84:	mvn	r1, #1
   1dd88:	cmp	r1, r0
   1dd8c:	bhi	1ddd0 <__assert_fail@plt+0xcce8>
   1dd90:	ldr	r0, [sp, #16]
   1dd94:	cmp	r0, #0
   1dd98:	beq	1ddd0 <__assert_fail@plt+0xcce8>
   1dd9c:	movw	r0, #0
   1dda0:	bl	1e424 <__assert_fail@plt+0xd33c>
   1dda4:	tst	r0, #1
   1dda8:	bne	1ddd0 <__assert_fail@plt+0xcce8>
   1ddac:	ldr	r0, [fp, #-12]
   1ddb0:	ldrb	r0, [r0]
   1ddb4:	strb	r0, [sp, #3]
   1ddb8:	ldrb	r0, [sp, #3]
   1ddbc:	ldr	r1, [fp, #-8]
   1ddc0:	str	r0, [r1]
   1ddc4:	movw	r0, #1
   1ddc8:	str	r0, [fp, #-4]
   1ddcc:	b	1ddd8 <__assert_fail@plt+0xccf0>
   1ddd0:	ldr	r0, [sp, #8]
   1ddd4:	str	r0, [fp, #-4]
   1ddd8:	ldr	r0, [fp, #-4]
   1dddc:	mov	sp, fp
   1dde0:	pop	{fp, pc}
   1dde4:	sub	sp, sp, #12
   1dde8:	str	r0, [sp, #4]
   1ddec:	ldr	r0, [sp, #4]
   1ddf0:	sub	r1, r0, #48	; 0x30
   1ddf4:	cmp	r1, #10
   1ddf8:	str	r0, [sp]
   1ddfc:	bcc	1de2c <__assert_fail@plt+0xcd44>
   1de00:	b	1de04 <__assert_fail@plt+0xcd1c>
   1de04:	ldr	r0, [sp]
   1de08:	sub	r1, r0, #65	; 0x41
   1de0c:	cmp	r1, #26
   1de10:	bcc	1de2c <__assert_fail@plt+0xcd44>
   1de14:	b	1de18 <__assert_fail@plt+0xcd30>
   1de18:	ldr	r0, [sp]
   1de1c:	sub	r1, r0, #97	; 0x61
   1de20:	cmp	r1, #25
   1de24:	bhi	1de3c <__assert_fail@plt+0xcd54>
   1de28:	b	1de2c <__assert_fail@plt+0xcd44>
   1de2c:	movw	r0, #1
   1de30:	and	r0, r0, #1
   1de34:	strb	r0, [sp, #11]
   1de38:	b	1de48 <__assert_fail@plt+0xcd60>
   1de3c:	movw	r0, #0
   1de40:	and	r0, r0, #1
   1de44:	strb	r0, [sp, #11]
   1de48:	ldrb	r0, [sp, #11]
   1de4c:	and	r0, r0, #1
   1de50:	add	sp, sp, #12
   1de54:	bx	lr
   1de58:	sub	sp, sp, #12
   1de5c:	str	r0, [sp, #4]
   1de60:	ldr	r0, [sp, #4]
   1de64:	sub	r1, r0, #65	; 0x41
   1de68:	cmp	r1, #26
   1de6c:	str	r0, [sp]
   1de70:	bcc	1de8c <__assert_fail@plt+0xcda4>
   1de74:	b	1de78 <__assert_fail@plt+0xcd90>
   1de78:	ldr	r0, [sp]
   1de7c:	sub	r1, r0, #97	; 0x61
   1de80:	cmp	r1, #25
   1de84:	bhi	1de9c <__assert_fail@plt+0xcdb4>
   1de88:	b	1de8c <__assert_fail@plt+0xcda4>
   1de8c:	movw	r0, #1
   1de90:	and	r0, r0, #1
   1de94:	strb	r0, [sp, #11]
   1de98:	b	1dea8 <__assert_fail@plt+0xcdc0>
   1de9c:	movw	r0, #0
   1dea0:	and	r0, r0, #1
   1dea4:	strb	r0, [sp, #11]
   1dea8:	ldrb	r0, [sp, #11]
   1deac:	and	r0, r0, #1
   1deb0:	add	sp, sp, #12
   1deb4:	bx	lr
   1deb8:	sub	sp, sp, #8
   1debc:	str	r0, [sp]
   1dec0:	ldr	r0, [sp]
   1dec4:	cmp	r0, #127	; 0x7f
   1dec8:	bhi	1dee0 <__assert_fail@plt+0xcdf8>
   1decc:	b	1ded0 <__assert_fail@plt+0xcde8>
   1ded0:	movw	r0, #1
   1ded4:	and	r0, r0, #1
   1ded8:	strb	r0, [sp, #7]
   1dedc:	b	1deec <__assert_fail@plt+0xce04>
   1dee0:	movw	r0, #0
   1dee4:	and	r0, r0, #1
   1dee8:	strb	r0, [sp, #7]
   1deec:	ldrb	r0, [sp, #7]
   1def0:	and	r0, r0, #1
   1def4:	add	sp, sp, #8
   1def8:	bx	lr
   1defc:	sub	sp, sp, #8
   1df00:	str	r0, [sp, #4]
   1df04:	ldr	r0, [sp, #4]
   1df08:	cmp	r0, #32
   1df0c:	movw	r0, #1
   1df10:	str	r0, [sp]
   1df14:	beq	1df2c <__assert_fail@plt+0xce44>
   1df18:	ldr	r0, [sp, #4]
   1df1c:	cmp	r0, #9
   1df20:	movw	r0, #0
   1df24:	moveq	r0, #1
   1df28:	str	r0, [sp]
   1df2c:	ldr	r0, [sp]
   1df30:	and	r0, r0, #1
   1df34:	add	sp, sp, #8
   1df38:	bx	lr
   1df3c:	sub	sp, sp, #12
   1df40:	str	r0, [sp, #4]
   1df44:	ldr	r0, [sp, #4]
   1df48:	cmp	r0, #32
   1df4c:	str	r0, [sp]
   1df50:	bcc	1df68 <__assert_fail@plt+0xce80>
   1df54:	b	1df58 <__assert_fail@plt+0xce70>
   1df58:	ldr	r0, [sp]
   1df5c:	cmp	r0, #127	; 0x7f
   1df60:	bne	1df78 <__assert_fail@plt+0xce90>
   1df64:	b	1df68 <__assert_fail@plt+0xce80>
   1df68:	movw	r0, #1
   1df6c:	and	r0, r0, #1
   1df70:	strb	r0, [sp, #11]
   1df74:	b	1df84 <__assert_fail@plt+0xce9c>
   1df78:	movw	r0, #0
   1df7c:	and	r0, r0, #1
   1df80:	strb	r0, [sp, #11]
   1df84:	ldrb	r0, [sp, #11]
   1df88:	and	r0, r0, #1
   1df8c:	add	sp, sp, #12
   1df90:	bx	lr
   1df94:	sub	sp, sp, #8
   1df98:	str	r0, [sp]
   1df9c:	ldr	r0, [sp]
   1dfa0:	sub	r0, r0, #48	; 0x30
   1dfa4:	cmp	r0, #9
   1dfa8:	bhi	1dfc0 <__assert_fail@plt+0xced8>
   1dfac:	b	1dfb0 <__assert_fail@plt+0xcec8>
   1dfb0:	movw	r0, #1
   1dfb4:	and	r0, r0, #1
   1dfb8:	strb	r0, [sp, #7]
   1dfbc:	b	1dfcc <__assert_fail@plt+0xcee4>
   1dfc0:	movw	r0, #0
   1dfc4:	and	r0, r0, #1
   1dfc8:	strb	r0, [sp, #7]
   1dfcc:	ldrb	r0, [sp, #7]
   1dfd0:	and	r0, r0, #1
   1dfd4:	add	sp, sp, #8
   1dfd8:	bx	lr
   1dfdc:	sub	sp, sp, #8
   1dfe0:	str	r0, [sp]
   1dfe4:	ldr	r0, [sp]
   1dfe8:	sub	r0, r0, #33	; 0x21
   1dfec:	cmp	r0, #93	; 0x5d
   1dff0:	bhi	1e008 <__assert_fail@plt+0xcf20>
   1dff4:	b	1dff8 <__assert_fail@plt+0xcf10>
   1dff8:	movw	r0, #1
   1dffc:	and	r0, r0, #1
   1e000:	strb	r0, [sp, #7]
   1e004:	b	1e014 <__assert_fail@plt+0xcf2c>
   1e008:	movw	r0, #0
   1e00c:	and	r0, r0, #1
   1e010:	strb	r0, [sp, #7]
   1e014:	ldrb	r0, [sp, #7]
   1e018:	and	r0, r0, #1
   1e01c:	add	sp, sp, #8
   1e020:	bx	lr
   1e024:	sub	sp, sp, #8
   1e028:	str	r0, [sp]
   1e02c:	ldr	r0, [sp]
   1e030:	sub	r0, r0, #97	; 0x61
   1e034:	cmp	r0, #25
   1e038:	bhi	1e050 <__assert_fail@plt+0xcf68>
   1e03c:	b	1e040 <__assert_fail@plt+0xcf58>
   1e040:	movw	r0, #1
   1e044:	and	r0, r0, #1
   1e048:	strb	r0, [sp, #7]
   1e04c:	b	1e05c <__assert_fail@plt+0xcf74>
   1e050:	movw	r0, #0
   1e054:	and	r0, r0, #1
   1e058:	strb	r0, [sp, #7]
   1e05c:	ldrb	r0, [sp, #7]
   1e060:	and	r0, r0, #1
   1e064:	add	sp, sp, #8
   1e068:	bx	lr
   1e06c:	sub	sp, sp, #8
   1e070:	str	r0, [sp]
   1e074:	ldr	r0, [sp]
   1e078:	sub	r0, r0, #32
   1e07c:	cmp	r0, #94	; 0x5e
   1e080:	bhi	1e098 <__assert_fail@plt+0xcfb0>
   1e084:	b	1e088 <__assert_fail@plt+0xcfa0>
   1e088:	movw	r0, #1
   1e08c:	and	r0, r0, #1
   1e090:	strb	r0, [sp, #7]
   1e094:	b	1e0a4 <__assert_fail@plt+0xcfbc>
   1e098:	movw	r0, #0
   1e09c:	and	r0, r0, #1
   1e0a0:	strb	r0, [sp, #7]
   1e0a4:	ldrb	r0, [sp, #7]
   1e0a8:	and	r0, r0, #1
   1e0ac:	add	sp, sp, #8
   1e0b0:	bx	lr
   1e0b4:	sub	sp, sp, #12
   1e0b8:	str	r0, [sp, #4]
   1e0bc:	ldr	r0, [sp, #4]
   1e0c0:	sub	r0, r0, #33	; 0x21
   1e0c4:	cmp	r0, #93	; 0x5d
   1e0c8:	str	r0, [sp]
   1e0cc:	bhi	1e268 <__assert_fail@plt+0xd180>
   1e0d0:	add	r0, pc, #8
   1e0d4:	ldr	r1, [sp]
   1e0d8:	ldr	r0, [r0, r1, lsl #2]
   1e0dc:	mov	pc, r0
   1e0e0:	andeq	lr, r1, r8, asr r2
   1e0e4:	andeq	lr, r1, r8, asr r2
   1e0e8:	andeq	lr, r1, r8, asr r2
   1e0ec:	andeq	lr, r1, r8, asr r2
   1e0f0:	andeq	lr, r1, r8, asr r2
   1e0f4:	andeq	lr, r1, r8, asr r2
   1e0f8:	andeq	lr, r1, r8, asr r2
   1e0fc:	andeq	lr, r1, r8, asr r2
   1e100:	andeq	lr, r1, r8, asr r2
   1e104:	andeq	lr, r1, r8, asr r2
   1e108:	andeq	lr, r1, r8, asr r2
   1e10c:	andeq	lr, r1, r8, asr r2
   1e110:	andeq	lr, r1, r8, asr r2
   1e114:	andeq	lr, r1, r8, asr r2
   1e118:	andeq	lr, r1, r8, asr r2
   1e11c:	andeq	lr, r1, r8, ror #4
   1e120:	andeq	lr, r1, r8, ror #4
   1e124:	andeq	lr, r1, r8, ror #4
   1e128:	andeq	lr, r1, r8, ror #4
   1e12c:	andeq	lr, r1, r8, ror #4
   1e130:	andeq	lr, r1, r8, ror #4
   1e134:	andeq	lr, r1, r8, ror #4
   1e138:	andeq	lr, r1, r8, ror #4
   1e13c:	andeq	lr, r1, r8, ror #4
   1e140:	andeq	lr, r1, r8, ror #4
   1e144:	andeq	lr, r1, r8, asr r2
   1e148:	andeq	lr, r1, r8, asr r2
   1e14c:	andeq	lr, r1, r8, asr r2
   1e150:	andeq	lr, r1, r8, asr r2
   1e154:	andeq	lr, r1, r8, asr r2
   1e158:	andeq	lr, r1, r8, asr r2
   1e15c:	andeq	lr, r1, r8, asr r2
   1e160:	andeq	lr, r1, r8, ror #4
   1e164:	andeq	lr, r1, r8, ror #4
   1e168:	andeq	lr, r1, r8, ror #4
   1e16c:	andeq	lr, r1, r8, ror #4
   1e170:	andeq	lr, r1, r8, ror #4
   1e174:	andeq	lr, r1, r8, ror #4
   1e178:	andeq	lr, r1, r8, ror #4
   1e17c:	andeq	lr, r1, r8, ror #4
   1e180:	andeq	lr, r1, r8, ror #4
   1e184:	andeq	lr, r1, r8, ror #4
   1e188:	andeq	lr, r1, r8, ror #4
   1e18c:	andeq	lr, r1, r8, ror #4
   1e190:	andeq	lr, r1, r8, ror #4
   1e194:	andeq	lr, r1, r8, ror #4
   1e198:	andeq	lr, r1, r8, ror #4
   1e19c:	andeq	lr, r1, r8, ror #4
   1e1a0:	andeq	lr, r1, r8, ror #4
   1e1a4:	andeq	lr, r1, r8, ror #4
   1e1a8:	andeq	lr, r1, r8, ror #4
   1e1ac:	andeq	lr, r1, r8, ror #4
   1e1b0:	andeq	lr, r1, r8, ror #4
   1e1b4:	andeq	lr, r1, r8, ror #4
   1e1b8:	andeq	lr, r1, r8, ror #4
   1e1bc:	andeq	lr, r1, r8, ror #4
   1e1c0:	andeq	lr, r1, r8, ror #4
   1e1c4:	andeq	lr, r1, r8, ror #4
   1e1c8:	andeq	lr, r1, r8, asr r2
   1e1cc:	andeq	lr, r1, r8, asr r2
   1e1d0:	andeq	lr, r1, r8, asr r2
   1e1d4:	andeq	lr, r1, r8, asr r2
   1e1d8:	andeq	lr, r1, r8, asr r2
   1e1dc:	andeq	lr, r1, r8, asr r2
   1e1e0:	andeq	lr, r1, r8, ror #4
   1e1e4:	andeq	lr, r1, r8, ror #4
   1e1e8:	andeq	lr, r1, r8, ror #4
   1e1ec:	andeq	lr, r1, r8, ror #4
   1e1f0:	andeq	lr, r1, r8, ror #4
   1e1f4:	andeq	lr, r1, r8, ror #4
   1e1f8:	andeq	lr, r1, r8, ror #4
   1e1fc:	andeq	lr, r1, r8, ror #4
   1e200:	andeq	lr, r1, r8, ror #4
   1e204:	andeq	lr, r1, r8, ror #4
   1e208:	andeq	lr, r1, r8, ror #4
   1e20c:	andeq	lr, r1, r8, ror #4
   1e210:	andeq	lr, r1, r8, ror #4
   1e214:	andeq	lr, r1, r8, ror #4
   1e218:	andeq	lr, r1, r8, ror #4
   1e21c:	andeq	lr, r1, r8, ror #4
   1e220:	andeq	lr, r1, r8, ror #4
   1e224:	andeq	lr, r1, r8, ror #4
   1e228:	andeq	lr, r1, r8, ror #4
   1e22c:	andeq	lr, r1, r8, ror #4
   1e230:	andeq	lr, r1, r8, ror #4
   1e234:	andeq	lr, r1, r8, ror #4
   1e238:	andeq	lr, r1, r8, ror #4
   1e23c:	andeq	lr, r1, r8, ror #4
   1e240:	andeq	lr, r1, r8, ror #4
   1e244:	andeq	lr, r1, r8, ror #4
   1e248:	andeq	lr, r1, r8, asr r2
   1e24c:	andeq	lr, r1, r8, asr r2
   1e250:	andeq	lr, r1, r8, asr r2
   1e254:	andeq	lr, r1, r8, asr r2
   1e258:	movw	r0, #1
   1e25c:	and	r0, r0, #1
   1e260:	strb	r0, [sp, #11]
   1e264:	b	1e274 <__assert_fail@plt+0xd18c>
   1e268:	movw	r0, #0
   1e26c:	and	r0, r0, #1
   1e270:	strb	r0, [sp, #11]
   1e274:	ldrb	r0, [sp, #11]
   1e278:	and	r0, r0, #1
   1e27c:	add	sp, sp, #12
   1e280:	bx	lr
   1e284:	sub	sp, sp, #12
   1e288:	str	r0, [sp, #4]
   1e28c:	ldr	r0, [sp, #4]
   1e290:	sub	r1, r0, #9
   1e294:	cmp	r1, #5
   1e298:	str	r0, [sp]
   1e29c:	bcc	1e2b4 <__assert_fail@plt+0xd1cc>
   1e2a0:	b	1e2a4 <__assert_fail@plt+0xd1bc>
   1e2a4:	ldr	r0, [sp]
   1e2a8:	cmp	r0, #32
   1e2ac:	bne	1e2c4 <__assert_fail@plt+0xd1dc>
   1e2b0:	b	1e2b4 <__assert_fail@plt+0xd1cc>
   1e2b4:	movw	r0, #1
   1e2b8:	and	r0, r0, #1
   1e2bc:	strb	r0, [sp, #11]
   1e2c0:	b	1e2d0 <__assert_fail@plt+0xd1e8>
   1e2c4:	movw	r0, #0
   1e2c8:	and	r0, r0, #1
   1e2cc:	strb	r0, [sp, #11]
   1e2d0:	ldrb	r0, [sp, #11]
   1e2d4:	and	r0, r0, #1
   1e2d8:	add	sp, sp, #12
   1e2dc:	bx	lr
   1e2e0:	sub	sp, sp, #8
   1e2e4:	str	r0, [sp]
   1e2e8:	ldr	r0, [sp]
   1e2ec:	sub	r0, r0, #65	; 0x41
   1e2f0:	cmp	r0, #25
   1e2f4:	bhi	1e30c <__assert_fail@plt+0xd224>
   1e2f8:	b	1e2fc <__assert_fail@plt+0xd214>
   1e2fc:	movw	r0, #1
   1e300:	and	r0, r0, #1
   1e304:	strb	r0, [sp, #7]
   1e308:	b	1e318 <__assert_fail@plt+0xd230>
   1e30c:	movw	r0, #0
   1e310:	and	r0, r0, #1
   1e314:	strb	r0, [sp, #7]
   1e318:	ldrb	r0, [sp, #7]
   1e31c:	and	r0, r0, #1
   1e320:	add	sp, sp, #8
   1e324:	bx	lr
   1e328:	sub	sp, sp, #12
   1e32c:	str	r0, [sp, #4]
   1e330:	ldr	r0, [sp, #4]
   1e334:	sub	r1, r0, #48	; 0x30
   1e338:	cmp	r1, #10
   1e33c:	str	r0, [sp]
   1e340:	bcc	1e370 <__assert_fail@plt+0xd288>
   1e344:	b	1e348 <__assert_fail@plt+0xd260>
   1e348:	ldr	r0, [sp]
   1e34c:	sub	r1, r0, #65	; 0x41
   1e350:	cmp	r1, #6
   1e354:	bcc	1e370 <__assert_fail@plt+0xd288>
   1e358:	b	1e35c <__assert_fail@plt+0xd274>
   1e35c:	ldr	r0, [sp]
   1e360:	sub	r1, r0, #97	; 0x61
   1e364:	cmp	r1, #5
   1e368:	bhi	1e380 <__assert_fail@plt+0xd298>
   1e36c:	b	1e370 <__assert_fail@plt+0xd288>
   1e370:	movw	r0, #1
   1e374:	and	r0, r0, #1
   1e378:	strb	r0, [sp, #11]
   1e37c:	b	1e38c <__assert_fail@plt+0xd2a4>
   1e380:	movw	r0, #0
   1e384:	and	r0, r0, #1
   1e388:	strb	r0, [sp, #11]
   1e38c:	ldrb	r0, [sp, #11]
   1e390:	and	r0, r0, #1
   1e394:	add	sp, sp, #12
   1e398:	bx	lr
   1e39c:	sub	sp, sp, #8
   1e3a0:	str	r0, [sp]
   1e3a4:	ldr	r0, [sp]
   1e3a8:	sub	r0, r0, #65	; 0x41
   1e3ac:	cmp	r0, #25
   1e3b0:	bhi	1e3cc <__assert_fail@plt+0xd2e4>
   1e3b4:	b	1e3b8 <__assert_fail@plt+0xd2d0>
   1e3b8:	ldr	r0, [sp]
   1e3bc:	sub	r0, r0, #65	; 0x41
   1e3c0:	add	r0, r0, #97	; 0x61
   1e3c4:	str	r0, [sp, #4]
   1e3c8:	b	1e3d4 <__assert_fail@plt+0xd2ec>
   1e3cc:	ldr	r0, [sp]
   1e3d0:	str	r0, [sp, #4]
   1e3d4:	ldr	r0, [sp, #4]
   1e3d8:	add	sp, sp, #8
   1e3dc:	bx	lr
   1e3e0:	sub	sp, sp, #8
   1e3e4:	str	r0, [sp]
   1e3e8:	ldr	r0, [sp]
   1e3ec:	sub	r0, r0, #97	; 0x61
   1e3f0:	cmp	r0, #25
   1e3f4:	bhi	1e410 <__assert_fail@plt+0xd328>
   1e3f8:	b	1e3fc <__assert_fail@plt+0xd314>
   1e3fc:	ldr	r0, [sp]
   1e400:	sub	r0, r0, #97	; 0x61
   1e404:	add	r0, r0, #65	; 0x41
   1e408:	str	r0, [sp, #4]
   1e40c:	b	1e418 <__assert_fail@plt+0xd330>
   1e410:	ldr	r0, [sp]
   1e414:	str	r0, [sp, #4]
   1e418:	ldr	r0, [sp, #4]
   1e41c:	add	sp, sp, #8
   1e420:	bx	lr
   1e424:	push	{r4, r5, fp, lr}
   1e428:	add	fp, sp, #8
   1e42c:	sub	sp, sp, #272	; 0x110
   1e430:	add	r1, sp, #7
   1e434:	str	r0, [fp, #-16]
   1e438:	ldr	r0, [fp, #-16]
   1e43c:	movw	r2, #257	; 0x101
   1e440:	bl	1e4c0 <__assert_fail@plt+0xd3d8>
   1e444:	cmp	r0, #0
   1e448:	beq	1e45c <__assert_fail@plt+0xd374>
   1e44c:	movw	r0, #0
   1e450:	and	r0, r0, #1
   1e454:	strb	r0, [fp, #-9]
   1e458:	b	1e4b0 <__assert_fail@plt+0xd3c8>
   1e45c:	add	r0, sp, #7
   1e460:	movw	r1, #62723	; 0xf503
   1e464:	movt	r1, #1
   1e468:	bl	10e90 <strcmp@plt>
   1e46c:	cmp	r0, #0
   1e470:	movw	r0, #1
   1e474:	str	r0, [sp]
   1e478:	beq	1e49c <__assert_fail@plt+0xd3b4>
   1e47c:	add	r0, sp, #7
   1e480:	movw	r1, #62725	; 0xf505
   1e484:	movt	r1, #1
   1e488:	bl	10e90 <strcmp@plt>
   1e48c:	cmp	r0, #0
   1e490:	movw	r0, #0
   1e494:	moveq	r0, #1
   1e498:	str	r0, [sp]
   1e49c:	ldr	r0, [sp]
   1e4a0:	mvn	r1, #0
   1e4a4:	eor	r0, r0, r1
   1e4a8:	and	r0, r0, #1
   1e4ac:	strb	r0, [fp, #-9]
   1e4b0:	ldrb	r0, [fp, #-9]
   1e4b4:	and	r0, r0, #1
   1e4b8:	sub	sp, fp, #8
   1e4bc:	pop	{r4, r5, fp, pc}
   1e4c0:	push	{fp, lr}
   1e4c4:	mov	fp, sp
   1e4c8:	sub	sp, sp, #16
   1e4cc:	str	r0, [fp, #-4]
   1e4d0:	str	r1, [sp, #8]
   1e4d4:	str	r2, [sp, #4]
   1e4d8:	ldr	r0, [fp, #-4]
   1e4dc:	ldr	r1, [sp, #8]
   1e4e0:	ldr	r2, [sp, #4]
   1e4e4:	bl	1e4f0 <__assert_fail@plt+0xd408>
   1e4e8:	mov	sp, fp
   1e4ec:	pop	{fp, pc}
   1e4f0:	push	{fp, lr}
   1e4f4:	mov	fp, sp
   1e4f8:	sub	sp, sp, #24
   1e4fc:	str	r0, [fp, #-8]
   1e500:	str	r1, [sp, #12]
   1e504:	str	r2, [sp, #8]
   1e508:	ldr	r0, [fp, #-8]
   1e50c:	bl	1e5f0 <__assert_fail@plt+0xd508>
   1e510:	str	r0, [sp, #4]
   1e514:	ldr	r0, [sp, #4]
   1e518:	movw	r1, #0
   1e51c:	cmp	r0, r1
   1e520:	bne	1e548 <__assert_fail@plt+0xd460>
   1e524:	ldr	r0, [sp, #8]
   1e528:	cmp	r0, #0
   1e52c:	bls	1e53c <__assert_fail@plt+0xd454>
   1e530:	ldr	r0, [sp, #12]
   1e534:	movw	r1, #0
   1e538:	strb	r1, [r0]
   1e53c:	movw	r0, #22
   1e540:	str	r0, [fp, #-4]
   1e544:	b	1e5c4 <__assert_fail@plt+0xd4dc>
   1e548:	ldr	r0, [sp, #4]
   1e54c:	bl	10fec <strlen@plt>
   1e550:	str	r0, [sp]
   1e554:	ldr	r0, [sp]
   1e558:	ldr	lr, [sp, #8]
   1e55c:	cmp	r0, lr
   1e560:	bcs	1e584 <__assert_fail@plt+0xd49c>
   1e564:	ldr	r0, [sp, #12]
   1e568:	ldr	r1, [sp, #4]
   1e56c:	ldr	r2, [sp]
   1e570:	add	r2, r2, #1
   1e574:	bl	10ee4 <memcpy@plt>
   1e578:	movw	r0, #0
   1e57c:	str	r0, [fp, #-4]
   1e580:	b	1e5c4 <__assert_fail@plt+0xd4dc>
   1e584:	ldr	r0, [sp, #8]
   1e588:	cmp	r0, #0
   1e58c:	bls	1e5bc <__assert_fail@plt+0xd4d4>
   1e590:	ldr	r0, [sp, #12]
   1e594:	ldr	r1, [sp, #4]
   1e598:	ldr	r2, [sp, #8]
   1e59c:	sub	r2, r2, #1
   1e5a0:	bl	10ee4 <memcpy@plt>
   1e5a4:	ldr	r0, [sp, #12]
   1e5a8:	ldr	r1, [sp, #8]
   1e5ac:	sub	r1, r1, #1
   1e5b0:	add	r0, r0, r1
   1e5b4:	movw	r1, #0
   1e5b8:	strb	r1, [r0]
   1e5bc:	movw	r0, #34	; 0x22
   1e5c0:	str	r0, [fp, #-4]
   1e5c4:	ldr	r0, [fp, #-4]
   1e5c8:	mov	sp, fp
   1e5cc:	pop	{fp, pc}
   1e5d0:	push	{fp, lr}
   1e5d4:	mov	fp, sp
   1e5d8:	sub	sp, sp, #8
   1e5dc:	str	r0, [sp, #4]
   1e5e0:	ldr	r0, [sp, #4]
   1e5e4:	bl	1e5f0 <__assert_fail@plt+0xd508>
   1e5e8:	mov	sp, fp
   1e5ec:	pop	{fp, pc}
   1e5f0:	push	{fp, lr}
   1e5f4:	mov	fp, sp
   1e5f8:	sub	sp, sp, #8
   1e5fc:	str	r0, [sp, #4]
   1e600:	ldr	r0, [sp, #4]
   1e604:	movw	r1, #0
   1e608:	bl	11070 <setlocale@plt>
   1e60c:	str	r0, [sp]
   1e610:	ldr	r0, [sp]
   1e614:	mov	sp, fp
   1e618:	pop	{fp, pc}
   1e61c:	cmp	r3, #0
   1e620:	cmpeq	r2, #0
   1e624:	bne	1e648 <__assert_fail@plt+0xd560>
   1e628:	cmp	r1, #0
   1e62c:	movlt	r1, #-2147483648	; 0x80000000
   1e630:	movlt	r0, #0
   1e634:	blt	1e644 <__assert_fail@plt+0xd55c>
   1e638:	cmpeq	r0, #0
   1e63c:	mvnne	r1, #-2147483648	; 0x80000000
   1e640:	mvnne	r0, #0
   1e644:	b	1e72c <__assert_fail@plt+0xd644>
   1e648:	sub	sp, sp, #8
   1e64c:	push	{sp, lr}
   1e650:	cmp	r1, #0
   1e654:	blt	1e674 <__assert_fail@plt+0xd58c>
   1e658:	cmp	r3, #0
   1e65c:	blt	1e6a8 <__assert_fail@plt+0xd5c0>
   1e660:	bl	1e73c <__assert_fail@plt+0xd654>
   1e664:	ldr	lr, [sp, #4]
   1e668:	add	sp, sp, #8
   1e66c:	pop	{r2, r3}
   1e670:	bx	lr
   1e674:	rsbs	r0, r0, #0
   1e678:	sbc	r1, r1, r1, lsl #1
   1e67c:	cmp	r3, #0
   1e680:	blt	1e6cc <__assert_fail@plt+0xd5e4>
   1e684:	bl	1e73c <__assert_fail@plt+0xd654>
   1e688:	ldr	lr, [sp, #4]
   1e68c:	add	sp, sp, #8
   1e690:	pop	{r2, r3}
   1e694:	rsbs	r0, r0, #0
   1e698:	sbc	r1, r1, r1, lsl #1
   1e69c:	rsbs	r2, r2, #0
   1e6a0:	sbc	r3, r3, r3, lsl #1
   1e6a4:	bx	lr
   1e6a8:	rsbs	r2, r2, #0
   1e6ac:	sbc	r3, r3, r3, lsl #1
   1e6b0:	bl	1e73c <__assert_fail@plt+0xd654>
   1e6b4:	ldr	lr, [sp, #4]
   1e6b8:	add	sp, sp, #8
   1e6bc:	pop	{r2, r3}
   1e6c0:	rsbs	r0, r0, #0
   1e6c4:	sbc	r1, r1, r1, lsl #1
   1e6c8:	bx	lr
   1e6cc:	rsbs	r2, r2, #0
   1e6d0:	sbc	r3, r3, r3, lsl #1
   1e6d4:	bl	1e73c <__assert_fail@plt+0xd654>
   1e6d8:	ldr	lr, [sp, #4]
   1e6dc:	add	sp, sp, #8
   1e6e0:	pop	{r2, r3}
   1e6e4:	rsbs	r2, r2, #0
   1e6e8:	sbc	r3, r3, r3, lsl #1
   1e6ec:	bx	lr
   1e6f0:	cmp	r3, #0
   1e6f4:	cmpeq	r2, #0
   1e6f8:	bne	1e710 <__assert_fail@plt+0xd628>
   1e6fc:	cmp	r1, #0
   1e700:	cmpeq	r0, #0
   1e704:	mvnne	r1, #0
   1e708:	mvnne	r0, #0
   1e70c:	b	1e72c <__assert_fail@plt+0xd644>
   1e710:	sub	sp, sp, #8
   1e714:	push	{sp, lr}
   1e718:	bl	1e73c <__assert_fail@plt+0xd654>
   1e71c:	ldr	lr, [sp, #4]
   1e720:	add	sp, sp, #8
   1e724:	pop	{r2, r3}
   1e728:	bx	lr
   1e72c:	push	{r1, lr}
   1e730:	mov	r0, #8
   1e734:	bl	10e84 <raise@plt>
   1e738:	pop	{r1, pc}
   1e73c:	cmp	r1, r3
   1e740:	cmpeq	r0, r2
   1e744:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e748:	mov	r4, r0
   1e74c:	movcc	r0, #0
   1e750:	mov	r5, r1
   1e754:	ldr	lr, [sp, #36]	; 0x24
   1e758:	movcc	r1, r0
   1e75c:	bcc	1e858 <__assert_fail@plt+0xd770>
   1e760:	cmp	r3, #0
   1e764:	clzeq	ip, r2
   1e768:	clzne	ip, r3
   1e76c:	addeq	ip, ip, #32
   1e770:	cmp	r5, #0
   1e774:	clzeq	r1, r4
   1e778:	addeq	r1, r1, #32
   1e77c:	clzne	r1, r5
   1e780:	sub	ip, ip, r1
   1e784:	sub	sl, ip, #32
   1e788:	lsl	r9, r3, ip
   1e78c:	rsb	fp, ip, #32
   1e790:	orr	r9, r9, r2, lsl sl
   1e794:	orr	r9, r9, r2, lsr fp
   1e798:	lsl	r8, r2, ip
   1e79c:	cmp	r5, r9
   1e7a0:	cmpeq	r4, r8
   1e7a4:	movcc	r0, #0
   1e7a8:	movcc	r1, r0
   1e7ac:	bcc	1e7c8 <__assert_fail@plt+0xd6e0>
   1e7b0:	mov	r0, #1
   1e7b4:	subs	r4, r4, r8
   1e7b8:	lsl	r1, r0, sl
   1e7bc:	orr	r1, r1, r0, lsr fp
   1e7c0:	lsl	r0, r0, ip
   1e7c4:	sbc	r5, r5, r9
   1e7c8:	cmp	ip, #0
   1e7cc:	beq	1e858 <__assert_fail@plt+0xd770>
   1e7d0:	lsr	r6, r8, #1
   1e7d4:	orr	r6, r6, r9, lsl #31
   1e7d8:	lsr	r7, r9, #1
   1e7dc:	mov	r2, ip
   1e7e0:	b	1e804 <__assert_fail@plt+0xd71c>
   1e7e4:	subs	r3, r4, r6
   1e7e8:	sbc	r8, r5, r7
   1e7ec:	adds	r3, r3, r3
   1e7f0:	adc	r8, r8, r8
   1e7f4:	adds	r4, r3, #1
   1e7f8:	adc	r5, r8, #0
   1e7fc:	subs	r2, r2, #1
   1e800:	beq	1e820 <__assert_fail@plt+0xd738>
   1e804:	cmp	r5, r7
   1e808:	cmpeq	r4, r6
   1e80c:	bcs	1e7e4 <__assert_fail@plt+0xd6fc>
   1e810:	adds	r4, r4, r4
   1e814:	adc	r5, r5, r5
   1e818:	subs	r2, r2, #1
   1e81c:	bne	1e804 <__assert_fail@plt+0xd71c>
   1e820:	lsr	r3, r4, ip
   1e824:	orr	r3, r3, r5, lsl fp
   1e828:	lsr	r2, r5, ip
   1e82c:	orr	r3, r3, r5, lsr sl
   1e830:	adds	r0, r0, r4
   1e834:	mov	r4, r3
   1e838:	lsl	r3, r2, ip
   1e83c:	orr	r3, r3, r4, lsl sl
   1e840:	lsl	ip, r4, ip
   1e844:	orr	r3, r3, r4, lsr fp
   1e848:	adc	r1, r1, r5
   1e84c:	subs	r0, r0, ip
   1e850:	mov	r5, r2
   1e854:	sbc	r1, r1, r3
   1e858:	cmp	lr, #0
   1e85c:	strdne	r4, [lr]
   1e860:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e864:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1e868:	mov	r7, r0
   1e86c:	ldr	r6, [pc, #72]	; 1e8bc <__assert_fail@plt+0xd7d4>
   1e870:	ldr	r5, [pc, #72]	; 1e8c0 <__assert_fail@plt+0xd7d8>
   1e874:	add	r6, pc, r6
   1e878:	add	r5, pc, r5
   1e87c:	sub	r6, r6, r5
   1e880:	mov	r8, r1
   1e884:	mov	r9, r2
   1e888:	bl	10e4c <calloc@plt-0x20>
   1e88c:	asrs	r6, r6, #2
   1e890:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1e894:	mov	r4, #0
   1e898:	add	r4, r4, #1
   1e89c:	ldr	r3, [r5], #4
   1e8a0:	mov	r2, r9
   1e8a4:	mov	r1, r8
   1e8a8:	mov	r0, r7
   1e8ac:	blx	r3
   1e8b0:	cmp	r6, r4
   1e8b4:	bne	1e898 <__assert_fail@plt+0xd7b0>
   1e8b8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1e8bc:	muleq	r1, r0, r6
   1e8c0:	andeq	r1, r1, r8, lsl #13
   1e8c4:	bx	lr
   1e8c8:	ldr	r3, [pc, #12]	; 1e8dc <__assert_fail@plt+0xd7f4>
   1e8cc:	mov	r1, #0
   1e8d0:	add	r3, pc, r3
   1e8d4:	ldr	r2, [r3]
   1e8d8:	b	1101c <__cxa_atexit@plt>
   1e8dc:	andeq	r1, r1, r4, lsl r8

Disassembly of section .fini:

0001e8e0 <.fini>:
   1e8e0:	push	{r3, lr}
   1e8e4:	pop	{r3, pc}
