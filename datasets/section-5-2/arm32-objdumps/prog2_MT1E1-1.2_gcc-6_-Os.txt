
../repos/prog2/MT1E1-1.2:     file format elf32-littlearm


Disassembly of section .init:

00010748 <.init>:
   10748:	push	{r3, lr}
   1074c:	bl	10910 <_start@@Base+0x3c>
   10750:	pop	{r3, pc}

Disassembly of section .plt:

00010754 <strcmp@plt-0x14>:
   10754:	push	{lr}		; (str lr, [sp, #-4]!)
   10758:	ldr	lr, [pc, #4]	; 10764 <strcmp@plt-0x4>
   1075c:	add	lr, pc, lr
   10760:	ldr	pc, [lr, #8]!
   10764:	muleq	r1, ip, r8

00010768 <strcmp@plt>:
   10768:	add	ip, pc, #0, 12
   1076c:	add	ip, ip, #16, 20	; 0x10000
   10770:	ldr	pc, [ip, #2204]!	; 0x89c

00010774 <printf@plt>:
   10774:	add	ip, pc, #0, 12
   10778:	add	ip, ip, #16, 20	; 0x10000
   1077c:	ldr	pc, [ip, #2196]!	; 0x894

00010780 <__isoc99_fscanf@plt>:
   10780:	add	ip, pc, #0, 12
   10784:	add	ip, ip, #16, 20	; 0x10000
   10788:	ldr	pc, [ip, #2188]!	; 0x88c

0001078c <fopen@plt>:
   1078c:	add	ip, pc, #0, 12
   10790:	add	ip, ip, #16, 20	; 0x10000
   10794:	ldr	pc, [ip, #2180]!	; 0x884

00010798 <free@plt>:
   10798:	add	ip, pc, #0, 12
   1079c:	add	ip, ip, #16, 20	; 0x10000
   107a0:	ldr	pc, [ip, #2172]!	; 0x87c

000107a4 <realloc@plt>:
   107a4:	add	ip, pc, #0, 12
   107a8:	add	ip, ip, #16, 20	; 0x10000
   107ac:	ldr	pc, [ip, #2164]!	; 0x874

000107b0 <strcpy@plt>:
   107b0:	add	ip, pc, #0, 12
   107b4:	add	ip, ip, #16, 20	; 0x10000
   107b8:	ldr	pc, [ip, #2156]!	; 0x86c

000107bc <malloc@plt>:
   107bc:	add	ip, pc, #0, 12
   107c0:	add	ip, ip, #16, 20	; 0x10000
   107c4:	ldr	pc, [ip, #2148]!	; 0x864

000107c8 <__libc_start_main@plt>:
   107c8:	add	ip, pc, #0, 12
   107cc:	add	ip, ip, #16, 20	; 0x10000
   107d0:	ldr	pc, [ip, #2140]!	; 0x85c

000107d4 <__gmon_start__@plt>:
   107d4:	add	ip, pc, #0, 12
   107d8:	add	ip, ip, #16, 20	; 0x10000
   107dc:	ldr	pc, [ip, #2132]!	; 0x854

000107e0 <fprintf@plt>:
   107e0:	add	ip, pc, #0, 12
   107e4:	add	ip, ip, #16, 20	; 0x10000
   107e8:	ldr	pc, [ip, #2124]!	; 0x84c

000107ec <fclose@plt>:
   107ec:	add	ip, pc, #0, 12
   107f0:	add	ip, ip, #16, 20	; 0x10000
   107f4:	ldr	pc, [ip, #2116]!	; 0x844

000107f8 <__isoc99_scanf@plt>:
   107f8:	add	ip, pc, #0, 12
   107fc:	add	ip, ip, #16, 20	; 0x10000
   10800:	ldr	pc, [ip, #2108]!	; 0x83c

00010804 <fputs@plt>:
   10804:	add	ip, pc, #0, 12
   10808:	add	ip, ip, #16, 20	; 0x10000
   1080c:	ldr	pc, [ip, #2100]!	; 0x834

00010810 <abort@plt>:
   10810:	add	ip, pc, #0, 12
   10814:	add	ip, ip, #16, 20	; 0x10000
   10818:	ldr	pc, [ip, #2092]!	; 0x82c

Disassembly of section .text:

0001081c <main@@Base>:
   1081c:	push	{r4, r5, r6, lr}
   10820:	sub	sp, sp, #112	; 0x70
   10824:	ldr	r0, [pc, #148]	; 108c0 <main@@Base+0xa4>
   10828:	bl	10774 <printf@plt>
   1082c:	add	r1, sp, #8
   10830:	ldr	r0, [pc, #140]	; 108c4 <main@@Base+0xa8>
   10834:	bl	107f8 <__isoc99_scanf@plt>
   10838:	ldr	r0, [pc, #136]	; 108c8 <main@@Base+0xac>
   1083c:	bl	10774 <printf@plt>
   10840:	add	r1, sp, #60	; 0x3c
   10844:	ldr	r0, [pc, #120]	; 108c4 <main@@Base+0xa8>
   10848:	bl	107f8 <__isoc99_scanf@plt>
   1084c:	ldr	r1, [pc, #120]	; 108cc <main@@Base+0xb0>
   10850:	add	r0, sp, #8
   10854:	bl	1078c <fopen@plt>
   10858:	subs	r6, r0, #0
   1085c:	bne	1086c <main@@Base+0x50>
   10860:	mov	r0, #1
   10864:	add	sp, sp, #112	; 0x70
   10868:	pop	{r4, r5, r6, pc}
   1086c:	ldr	r1, [pc, #92]	; 108d0 <main@@Base+0xb4>
   10870:	add	r0, sp, #60	; 0x3c
   10874:	bl	1078c <fopen@plt>
   10878:	subs	r5, r0, #0
   1087c:	beq	10860 <main@@Base+0x44>
   10880:	add	r1, sp, #4
   10884:	mov	r0, r6
   10888:	bl	109fc <analisarFicheiro@@Base>
   1088c:	ldr	r2, [sp, #4]
   10890:	mov	r1, r0
   10894:	mov	r4, r0
   10898:	mov	r0, r5
   1089c:	bl	10ad0 <gerarRelatorio@@Base>
   108a0:	mov	r0, r6
   108a4:	bl	107ec <fclose@plt>
   108a8:	mov	r0, r5
   108ac:	bl	107ec <fclose@plt>
   108b0:	mov	r0, r4
   108b4:	bl	10798 <free@plt>
   108b8:	mov	r0, #0
   108bc:	b	10864 <main@@Base+0x48>
   108c0:	andeq	r0, r1, sl, ror #23
   108c4:	andeq	r0, r1, r4, lsr #23
   108c8:	andeq	r0, r1, r0, lsl #24
   108cc:	andeq	r0, r1, r4, lsl ip
   108d0:	andeq	r0, r1, r6, lsl ip

000108d4 <_start@@Base>:
   108d4:	mov	fp, #0
   108d8:	mov	lr, #0
   108dc:	pop	{r1}		; (ldr r1, [sp], #4)
   108e0:	mov	r2, sp
   108e4:	push	{r2}		; (str r2, [sp, #-4]!)
   108e8:	push	{r0}		; (str r0, [sp, #-4]!)
   108ec:	ldr	ip, [pc, #16]	; 10904 <_start@@Base+0x30>
   108f0:	push	{ip}		; (str ip, [sp, #-4]!)
   108f4:	ldr	r0, [pc, #12]	; 10908 <_start@@Base+0x34>
   108f8:	ldr	r3, [pc, #12]	; 1090c <_start@@Base+0x38>
   108fc:	bl	107c8 <__libc_start_main@plt>
   10900:	bl	10810 <abort@plt>
   10904:	muleq	r1, r4, fp
   10908:	andeq	r0, r1, ip, lsl r8
   1090c:	andeq	r0, r1, r4, lsr fp
   10910:	ldr	r3, [pc, #20]	; 1092c <_start@@Base+0x58>
   10914:	ldr	r2, [pc, #20]	; 10930 <_start@@Base+0x5c>
   10918:	add	r3, pc, r3
   1091c:	ldr	r2, [r3, r2]
   10920:	cmp	r2, #0
   10924:	bxeq	lr
   10928:	b	107d4 <__gmon_start__@plt>
   1092c:	andeq	r0, r1, r0, ror #13
   10930:	andeq	r0, r0, r8, asr #32
   10934:	ldr	r3, [pc, #28]	; 10958 <_start@@Base+0x84>
   10938:	ldr	r0, [pc, #28]	; 1095c <_start@@Base+0x88>
   1093c:	sub	r3, r3, r0
   10940:	cmp	r3, #6
   10944:	bxls	lr
   10948:	ldr	r3, [pc, #16]	; 10960 <_start@@Base+0x8c>
   1094c:	cmp	r3, #0
   10950:	bxeq	lr
   10954:	bx	r3
   10958:	andeq	r1, r2, r7, asr r0
   1095c:	andeq	r1, r2, r4, asr r0
   10960:	andeq	r0, r0, r0
   10964:	ldr	r1, [pc, #36]	; 10990 <_start@@Base+0xbc>
   10968:	ldr	r0, [pc, #36]	; 10994 <_start@@Base+0xc0>
   1096c:	sub	r1, r1, r0
   10970:	asr	r1, r1, #2
   10974:	add	r1, r1, r1, lsr #31
   10978:	asrs	r1, r1, #1
   1097c:	bxeq	lr
   10980:	ldr	r3, [pc, #16]	; 10998 <_start@@Base+0xc4>
   10984:	cmp	r3, #0
   10988:	bxeq	lr
   1098c:	bx	r3
   10990:	andeq	r1, r2, r4, asr r0
   10994:	andeq	r1, r2, r4, asr r0
   10998:	andeq	r0, r0, r0
   1099c:	push	{r4, lr}
   109a0:	ldr	r4, [pc, #24]	; 109c0 <_start@@Base+0xec>
   109a4:	ldrb	r3, [r4]
   109a8:	cmp	r3, #0
   109ac:	popne	{r4, pc}
   109b0:	bl	10934 <_start@@Base+0x60>
   109b4:	mov	r3, #1
   109b8:	strb	r3, [r4]
   109bc:	pop	{r4, pc}
   109c0:	andeq	r1, r2, r4, asr r0
   109c4:	ldr	r0, [pc, #40]	; 109f4 <_start@@Base+0x120>
   109c8:	ldr	r3, [r0]
   109cc:	cmp	r3, #0
   109d0:	bne	109d8 <_start@@Base+0x104>
   109d4:	b	10964 <_start@@Base+0x90>
   109d8:	ldr	r3, [pc, #24]	; 109f8 <_start@@Base+0x124>
   109dc:	cmp	r3, #0
   109e0:	beq	109d4 <_start@@Base+0x100>
   109e4:	push	{r4, lr}
   109e8:	blx	r3
   109ec:	pop	{r4, lr}
   109f0:	b	10964 <_start@@Base+0x90>
   109f4:	andeq	r0, r2, r4, lsl pc
   109f8:	andeq	r0, r0, r0

000109fc <analisarFicheiro@@Base>:
   109fc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10a00:	mov	r7, r0
   10a04:	sub	sp, sp, #60	; 0x3c
   10a08:	mov	r0, #104	; 0x68
   10a0c:	mov	r6, r1
   10a10:	bl	107bc <malloc@plt>
   10a14:	ldr	r8, [pc, #176]	; 10acc <analisarFicheiro@@Base+0xd0>
   10a18:	mov	r5, #0
   10a1c:	mov	r9, #104	; 0x68
   10a20:	mov	sl, r0
   10a24:	add	r2, sp, #4
   10a28:	mov	r1, r8
   10a2c:	mov	r0, r7
   10a30:	bl	10780 <__isoc99_fscanf@plt>
   10a34:	cmn	r0, #1
   10a38:	beq	10abc <analisarFicheiro@@Base+0xc0>
   10a3c:	mov	r4, sl
   10a40:	mov	fp, #0
   10a44:	b	10a98 <analisarFicheiro@@Base+0x9c>
   10a48:	cmp	r5, fp
   10a4c:	bne	10a88 <analisarFicheiro@@Base+0x8c>
   10a50:	add	r5, r5, #1
   10a54:	mov	r0, sl
   10a58:	mul	r4, r9, r5
   10a5c:	mov	r1, r4
   10a60:	bl	107a4 <realloc@plt>
   10a64:	sub	r3, r4, #104	; 0x68
   10a68:	add	r1, sp, #4
   10a6c:	add	r3, r0, r3
   10a70:	mov	sl, r0
   10a74:	mov	r0, r3
   10a78:	bl	107b0 <strcpy@plt>
   10a7c:	mov	r2, #1
   10a80:	str	r2, [r0, #100]	; 0x64
   10a84:	b	10a24 <analisarFicheiro@@Base+0x28>
   10a88:	add	fp, fp, #1
   10a8c:	cmp	fp, r5
   10a90:	add	r4, r4, #104	; 0x68
   10a94:	bgt	10a24 <analisarFicheiro@@Base+0x28>
   10a98:	mov	r1, r4
   10a9c:	add	r0, sp, #4
   10aa0:	bl	10768 <strcmp@plt>
   10aa4:	cmp	r0, #0
   10aa8:	bne	10a48 <analisarFicheiro@@Base+0x4c>
   10aac:	ldr	r3, [r4, #100]	; 0x64
   10ab0:	add	r3, r3, #1
   10ab4:	str	r3, [r4, #100]	; 0x64
   10ab8:	b	10a24 <analisarFicheiro@@Base+0x28>
   10abc:	mov	r0, sl
   10ac0:	str	r5, [r6]
   10ac4:	add	sp, sp, #60	; 0x3c
   10ac8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10acc:	andeq	r0, r1, r4, lsr #23

00010ad0 <gerarRelatorio@@Base>:
   10ad0:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
   10ad4:	mov	r6, r0
   10ad8:	mov	r4, r1
   10adc:	mov	r1, r0
   10ae0:	ldr	r0, [pc, #68]	; 10b2c <gerarRelatorio@@Base+0x5c>
   10ae4:	mov	r7, r2
   10ae8:	bl	10804 <fputs@plt>
   10aec:	ldr	r8, [pc, #60]	; 10b30 <gerarRelatorio@@Base+0x60>
   10af0:	mov	r5, #0
   10af4:	cmp	r5, r7
   10af8:	blt	10b04 <gerarRelatorio@@Base+0x34>
   10afc:	add	sp, sp, #8
   10b00:	pop	{r4, r5, r6, r7, r8, pc}
   10b04:	ldr	r3, [r4, #100]	; 0x64
   10b08:	add	r5, r5, #1
   10b0c:	str	r3, [sp]
   10b10:	mov	r2, r5
   10b14:	mov	r3, r4
   10b18:	mov	r1, r8
   10b1c:	mov	r0, r6
   10b20:	bl	107e0 <fprintf@plt>
   10b24:	add	r4, r4, #104	; 0x68
   10b28:	b	10af4 <gerarRelatorio@@Base+0x24>
   10b2c:	andeq	r0, r1, r7, lsr #23
   10b30:	ldrdeq	r0, [r1], -sp

00010b34 <__libc_csu_init@@Base>:
   10b34:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10b38:	mov	r7, r0
   10b3c:	ldr	r6, [pc, #72]	; 10b8c <__libc_csu_init@@Base+0x58>
   10b40:	ldr	r5, [pc, #72]	; 10b90 <__libc_csu_init@@Base+0x5c>
   10b44:	add	r6, pc, r6
   10b48:	add	r5, pc, r5
   10b4c:	sub	r6, r6, r5
   10b50:	mov	r8, r1
   10b54:	mov	r9, r2
   10b58:	bl	10748 <strcmp@plt-0x20>
   10b5c:	asrs	r6, r6, #2
   10b60:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10b64:	mov	r4, #0
   10b68:	add	r4, r4, #1
   10b6c:	ldr	r3, [r5], #4
   10b70:	mov	r2, r9
   10b74:	mov	r1, r8
   10b78:	mov	r0, r7
   10b7c:	blx	r3
   10b80:	cmp	r6, r4
   10b84:	bne	10b68 <__libc_csu_init@@Base+0x34>
   10b88:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10b8c:	andeq	r0, r1, r4, asr #7
   10b90:			; <UNDEFINED> instruction: 0x000103bc

00010b94 <__libc_csu_fini@@Base>:
   10b94:	bx	lr

Disassembly of section .fini:

00010b98 <.fini>:
   10b98:	push	{r3, lr}
   10b9c:	pop	{r3, pc}
