
../repos/coreutils/src/seq:     file format elf32-littlearm


Disassembly of section .init:

00010d50 <.init>:
   10d50:	push	{r3, lr}
   10d54:	bl	11e38 <strspn@plt+0xe1c>
   10d58:	pop	{r3, pc}

Disassembly of section .plt:

00010d5c <calloc@plt-0x14>:
   10d5c:	push	{lr}		; (str lr, [sp, #-4]!)
   10d60:	ldr	lr, [pc, #4]	; 10d6c <calloc@plt-0x4>
   10d64:	add	lr, pc, lr
   10d68:	ldr	pc, [lr, #8]!
   10d6c:	muleq	r1, r4, r2

00010d70 <calloc@plt>:
   10d70:	add	ip, pc, #0, 12
   10d74:	add	ip, ip, #90112	; 0x16000
   10d78:	ldr	pc, [ip, #660]!	; 0x294

00010d7c <fputs_unlocked@plt>:
   10d7c:	add	ip, pc, #0, 12
   10d80:	add	ip, ip, #90112	; 0x16000
   10d84:	ldr	pc, [ip, #652]!	; 0x28c

00010d88 <raise@plt>:
   10d88:	add	ip, pc, #0, 12
   10d8c:	add	ip, ip, #90112	; 0x16000
   10d90:	ldr	pc, [ip, #644]!	; 0x284

00010d94 <uselocale@plt>:
   10d94:	add	ip, pc, #0, 12
   10d98:	add	ip, ip, #90112	; 0x16000
   10d9c:	ldr	pc, [ip, #636]!	; 0x27c

00010da0 <strcmp@plt>:
   10da0:	add	ip, pc, #0, 12
   10da4:	add	ip, ip, #90112	; 0x16000
   10da8:	ldr	pc, [ip, #628]!	; 0x274

00010dac <strtol@plt>:
   10dac:	add	ip, pc, #0, 12
   10db0:	add	ip, ip, #90112	; 0x16000
   10db4:	ldr	pc, [ip, #620]!	; 0x26c

00010db8 <strcspn@plt>:
   10db8:	add	ip, pc, #0, 12
   10dbc:	add	ip, ip, #90112	; 0x16000
   10dc0:	ldr	pc, [ip, #612]!	; 0x264

00010dc4 <fflush@plt>:
   10dc4:	add	ip, pc, #0, 12
   10dc8:	add	ip, ip, #90112	; 0x16000
   10dcc:	ldr	pc, [ip, #604]!	; 0x25c

00010dd0 <memmove@plt>:
   10dd0:	add	ip, pc, #0, 12
   10dd4:	add	ip, ip, #90112	; 0x16000
   10dd8:	ldr	pc, [ip, #596]!	; 0x254

00010ddc <free@plt>:
   10ddc:	add	ip, pc, #0, 12
   10de0:	add	ip, ip, #90112	; 0x16000
   10de4:	ldr	pc, [ip, #588]!	; 0x24c

00010de8 <_exit@plt>:
   10de8:	add	ip, pc, #0, 12
   10dec:	add	ip, ip, #90112	; 0x16000
   10df0:	ldr	pc, [ip, #580]!	; 0x244

00010df4 <memcpy@plt>:
   10df4:	add	ip, pc, #0, 12
   10df8:	add	ip, ip, #90112	; 0x16000
   10dfc:	ldr	pc, [ip, #572]!	; 0x23c

00010e00 <mbsinit@plt>:
   10e00:	add	ip, pc, #0, 12
   10e04:	add	ip, ip, #90112	; 0x16000
   10e08:	ldr	pc, [ip, #564]!	; 0x234

00010e0c <strtold@plt>:
   10e0c:	add	ip, pc, #0, 12
   10e10:	add	ip, ip, #90112	; 0x16000
   10e14:	ldr	pc, [ip, #556]!	; 0x22c

00010e18 <fwrite_unlocked@plt>:
   10e18:	add	ip, pc, #0, 12
   10e1c:	add	ip, ip, #90112	; 0x16000
   10e20:	ldr	pc, [ip, #548]!	; 0x224

00010e24 <memcmp@plt>:
   10e24:	add	ip, pc, #0, 12
   10e28:	add	ip, ip, #90112	; 0x16000
   10e2c:	ldr	pc, [ip, #540]!	; 0x21c

00010e30 <fputc_unlocked@plt>:
   10e30:	add	ip, pc, #0, 12
   10e34:	add	ip, ip, #90112	; 0x16000
   10e38:	ldr	pc, [ip, #532]!	; 0x214

00010e3c <dcgettext@plt>:
   10e3c:	add	ip, pc, #0, 12
   10e40:	add	ip, ip, #90112	; 0x16000
   10e44:	ldr	pc, [ip, #524]!	; 0x20c

00010e48 <realloc@plt>:
   10e48:	add	ip, pc, #0, 12
   10e4c:	add	ip, ip, #90112	; 0x16000
   10e50:	ldr	pc, [ip, #516]!	; 0x204

00010e54 <textdomain@plt>:
   10e54:	add	ip, pc, #0, 12
   10e58:	add	ip, ip, #90112	; 0x16000
   10e5c:	ldr	pc, [ip, #508]!	; 0x1fc

00010e60 <iswprint@plt>:
   10e60:	add	ip, pc, #0, 12
   10e64:	add	ip, ip, #90112	; 0x16000
   10e68:	ldr	pc, [ip, #500]!	; 0x1f4

00010e6c <lseek64@plt>:
   10e6c:	add	ip, pc, #0, 12
   10e70:	add	ip, ip, #90112	; 0x16000
   10e74:	ldr	pc, [ip, #492]!	; 0x1ec

00010e78 <__ctype_get_mb_cur_max@plt>:
   10e78:	add	ip, pc, #0, 12
   10e7c:	add	ip, ip, #90112	; 0x16000
   10e80:	ldr	pc, [ip, #484]!	; 0x1e4

00010e84 <strcpy@plt>:
   10e84:	add	ip, pc, #0, 12
   10e88:	add	ip, ip, #90112	; 0x16000
   10e8c:	ldr	pc, [ip, #476]!	; 0x1dc

00010e90 <__fpending@plt>:
   10e90:	add	ip, pc, #0, 12
   10e94:	add	ip, ip, #90112	; 0x16000
   10e98:	ldr	pc, [ip, #468]!	; 0x1d4

00010e9c <ferror_unlocked@plt>:
   10e9c:	add	ip, pc, #0, 12
   10ea0:	add	ip, ip, #90112	; 0x16000
   10ea4:	ldr	pc, [ip, #460]!	; 0x1cc

00010ea8 <mbrtowc@plt>:
   10ea8:	add	ip, pc, #0, 12
   10eac:	add	ip, ip, #90112	; 0x16000
   10eb0:	ldr	pc, [ip, #452]!	; 0x1c4

00010eb4 <error@plt>:
   10eb4:	add	ip, pc, #0, 12
   10eb8:	add	ip, ip, #90112	; 0x16000
   10ebc:	ldr	pc, [ip, #444]!	; 0x1bc

00010ec0 <__asprintf_chk@plt>:
   10ec0:	add	ip, pc, #0, 12
   10ec4:	add	ip, ip, #90112	; 0x16000
   10ec8:	ldr	pc, [ip, #436]!	; 0x1b4

00010ecc <malloc@plt>:
   10ecc:	add	ip, pc, #0, 12
   10ed0:	add	ip, ip, #90112	; 0x16000
   10ed4:	ldr	pc, [ip, #428]!	; 0x1ac

00010ed8 <__libc_start_main@plt>:
   10ed8:	add	ip, pc, #0, 12
   10edc:	add	ip, ip, #90112	; 0x16000
   10ee0:	ldr	pc, [ip, #420]!	; 0x1a4

00010ee4 <__freading@plt>:
   10ee4:	add	ip, pc, #0, 12
   10ee8:	add	ip, ip, #90112	; 0x16000
   10eec:	ldr	pc, [ip, #412]!	; 0x19c

00010ef0 <__gmon_start__@plt>:
   10ef0:	add	ip, pc, #0, 12
   10ef4:	add	ip, ip, #90112	; 0x16000
   10ef8:	ldr	pc, [ip, #404]!	; 0x194

00010efc <mempcpy@plt>:
   10efc:	add	ip, pc, #0, 12
   10f00:	add	ip, ip, #90112	; 0x16000
   10f04:	ldr	pc, [ip, #396]!	; 0x18c

00010f08 <getopt_long@plt>:
   10f08:	add	ip, pc, #0, 12
   10f0c:	add	ip, ip, #90112	; 0x16000
   10f10:	ldr	pc, [ip, #388]!	; 0x184

00010f14 <__ctype_b_loc@plt>:
   10f14:	add	ip, pc, #0, 12
   10f18:	add	ip, ip, #90112	; 0x16000
   10f1c:	ldr	pc, [ip, #380]!	; 0x17c

00010f20 <exit@plt>:
   10f20:	add	ip, pc, #0, 12
   10f24:	add	ip, ip, #90112	; 0x16000
   10f28:	ldr	pc, [ip, #372]!	; 0x174

00010f2c <strlen@plt>:
   10f2c:	add	ip, pc, #0, 12
   10f30:	add	ip, ip, #90112	; 0x16000
   10f34:	ldr	pc, [ip, #364]!	; 0x16c

00010f38 <strchr@plt>:
   10f38:	add	ip, pc, #0, 12
   10f3c:	add	ip, ip, #90112	; 0x16000
   10f40:	ldr	pc, [ip, #356]!	; 0x164

00010f44 <__errno_location@plt>:
   10f44:	add	ip, pc, #0, 12
   10f48:	add	ip, ip, #90112	; 0x16000
   10f4c:	ldr	pc, [ip, #348]!	; 0x15c

00010f50 <__sprintf_chk@plt>:
   10f50:	add	ip, pc, #0, 12
   10f54:	add	ip, ip, #90112	; 0x16000
   10f58:	ldr	pc, [ip, #340]!	; 0x154

00010f5c <__cxa_atexit@plt>:
   10f5c:	add	ip, pc, #0, 12
   10f60:	add	ip, ip, #90112	; 0x16000
   10f64:	ldr	pc, [ip, #332]!	; 0x14c

00010f68 <memset@plt>:
   10f68:	add	ip, pc, #0, 12
   10f6c:	add	ip, ip, #90112	; 0x16000
   10f70:	ldr	pc, [ip, #324]!	; 0x144

00010f74 <__printf_chk@plt>:
   10f74:	add	ip, pc, #0, 12
   10f78:	add	ip, ip, #90112	; 0x16000
   10f7c:	ldr	pc, [ip, #316]!	; 0x13c

00010f80 <fileno@plt>:
   10f80:	add	ip, pc, #0, 12
   10f84:	add	ip, ip, #90112	; 0x16000
   10f88:	ldr	pc, [ip, #308]!	; 0x134

00010f8c <__fprintf_chk@plt>:
   10f8c:	add	ip, pc, #0, 12
   10f90:	add	ip, ip, #90112	; 0x16000
   10f94:	ldr	pc, [ip, #300]!	; 0x12c

00010f98 <fclose@plt>:
   10f98:	add	ip, pc, #0, 12
   10f9c:	add	ip, ip, #90112	; 0x16000
   10fa0:	ldr	pc, [ip, #292]!	; 0x124

00010fa4 <fseeko64@plt>:
   10fa4:	add	ip, pc, #0, 12
   10fa8:	add	ip, ip, #90112	; 0x16000
   10fac:	ldr	pc, [ip, #284]!	; 0x11c

00010fb0 <setlocale@plt>:
   10fb0:	add	ip, pc, #0, 12
   10fb4:	add	ip, ip, #90112	; 0x16000
   10fb8:	ldr	pc, [ip, #276]!	; 0x114

00010fbc <strrchr@plt>:
   10fbc:	add	ip, pc, #0, 12
   10fc0:	add	ip, ip, #90112	; 0x16000
   10fc4:	ldr	pc, [ip, #268]!	; 0x10c

00010fc8 <nl_langinfo@plt>:
   10fc8:	add	ip, pc, #0, 12
   10fcc:	add	ip, ip, #90112	; 0x16000
   10fd0:	ldr	pc, [ip, #260]!	; 0x104

00010fd4 <newlocale@plt>:
   10fd4:	add	ip, pc, #0, 12
   10fd8:	add	ip, ip, #90112	; 0x16000
   10fdc:	ldr	pc, [ip, #252]!	; 0xfc

00010fe0 <clearerr_unlocked@plt>:
   10fe0:	add	ip, pc, #0, 12
   10fe4:	add	ip, ip, #90112	; 0x16000
   10fe8:	ldr	pc, [ip, #244]!	; 0xf4

00010fec <bindtextdomain@plt>:
   10fec:	add	ip, pc, #0, 12
   10ff0:	add	ip, ip, #90112	; 0x16000
   10ff4:	ldr	pc, [ip, #236]!	; 0xec

00010ff8 <fputs@plt>:
   10ff8:	add	ip, pc, #0, 12
   10ffc:	add	ip, ip, #90112	; 0x16000
   11000:	ldr	pc, [ip, #228]!	; 0xe4

00011004 <strncmp@plt>:
   11004:	add	ip, pc, #0, 12
   11008:	add	ip, ip, #90112	; 0x16000
   1100c:	ldr	pc, [ip, #220]!	; 0xdc

00011010 <abort@plt>:
   11010:	add	ip, pc, #0, 12
   11014:	add	ip, ip, #90112	; 0x16000
   11018:	ldr	pc, [ip, #212]!	; 0xd4

0001101c <strspn@plt>:
   1101c:	add	ip, pc, #0, 12
   11020:	add	ip, ip, #90112	; 0x16000
   11024:	ldr	pc, [ip, #204]!	; 0xcc

Disassembly of section .text:

00011028 <.text>:
   11028:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1102c:	mov	r5, r1
   11030:	sub	sp, sp, #28
   11034:	mov	r6, r0
   11038:	ldr	r1, [pc, #792]	; 11358 <strspn@plt+0x33c>
   1103c:	mov	r0, r5
   11040:	str	r2, [sp, #12]
   11044:	str	r3, [sp, #16]
   11048:	bl	10da0 <strcmp@plt>
   1104c:	mov	r2, r6
   11050:	str	r0, [sp]
   11054:	ldrb	r3, [r2]
   11058:	mov	r4, r2
   1105c:	add	r2, r2, #1
   11060:	cmp	r3, #48	; 0x30
   11064:	beq	11054 <strspn@plt+0x38>
   11068:	subs	r6, r6, r4
   1106c:	movne	r6, #1
   11070:	cmp	r3, #0
   11074:	movne	r6, #0
   11078:	cmp	r6, #0
   1107c:	subne	r4, r4, #1
   11080:	mov	r2, r5
   11084:	ldrb	r3, [r2]
   11088:	mov	r8, r2
   1108c:	add	r2, r2, #1
   11090:	cmp	r3, #48	; 0x30
   11094:	beq	11084 <strspn@plt+0x68>
   11098:	subs	r5, r5, r8
   1109c:	movne	r5, #1
   110a0:	cmp	r3, #0
   110a4:	movne	r5, #0
   110a8:	cmp	r5, #0
   110ac:	mov	r0, r4
   110b0:	subne	r8, r8, #1
   110b4:	bl	10f2c <strlen@plt>
   110b8:	ldr	r3, [sp]
   110bc:	cmp	r3, #0
   110c0:	ldreq	sl, [sp]
   110c4:	mov	r5, r0
   110c8:	beq	110d8 <strspn@plt+0xbc>
   110cc:	mov	r0, r8
   110d0:	bl	10f2c <strlen@plt>
   110d4:	mov	sl, r0
   110d8:	add	r6, r5, #1
   110dc:	cmp	r6, #31
   110e0:	movcc	r9, #31
   110e4:	movcs	r9, r6
   110e8:	cmp	r9, sl
   110ec:	movcc	r9, sl
   110f0:	add	r7, r9, #1
   110f4:	mov	r0, r7
   110f8:	bl	14270 <strspn@plt+0x3254>
   110fc:	mov	r1, r4
   11100:	mov	r2, r6
   11104:	mov	fp, r0
   11108:	sub	r0, r9, r5
   1110c:	add	r0, fp, r0
   11110:	bl	10df4 <memcpy@plt>
   11114:	ldr	r3, [sp]
   11118:	cmp	r3, #0
   1111c:	ldreq	r3, [sp]
   11120:	streq	r3, [sp, #4]
   11124:	mov	r4, r0
   11128:	beq	11178 <strspn@plt+0x15c>
   1112c:	mov	r0, r7
   11130:	bl	14270 <strspn@plt+0x3254>
   11134:	mov	r1, r8
   11138:	add	r2, sl, #1
   1113c:	mov	r6, r0
   11140:	sub	r0, r9, sl
   11144:	add	r0, r6, r0
   11148:	bl	10df4 <memcpy@plt>
   1114c:	cmp	sl, r5
   11150:	mov	r8, r0
   11154:	bhi	11174 <strspn@plt+0x158>
   11158:	bcc	11340 <strspn@plt+0x324>
   1115c:	mov	r1, r0
   11160:	mov	r2, r5
   11164:	mov	r0, r4
   11168:	bl	10e24 <memcmp@plt>
   1116c:	cmp	r0, #0
   11170:	bgt	11340 <strspn@plt+0x324>
   11174:	str	r8, [sp, #4]
   11178:	lsl	r7, r7, #1
   1117c:	cmp	r7, #8192	; 0x2000
   11180:	movcc	r7, #8192	; 0x2000
   11184:	mov	r0, r7
   11188:	bl	14270 <strspn@plt+0x3254>
   1118c:	mov	r2, r5
   11190:	mov	r1, r4
   11194:	add	r3, r0, r7
   11198:	mov	r8, r0
   1119c:	str	r3, [sp, #8]
   111a0:	bl	10efc <mempcpy@plt>
   111a4:	mov	r6, r0
   111a8:	ldr	r0, [sp, #12]
   111ac:	ldr	r1, [sp, #16]
   111b0:	mov	ip, #49	; 0x31
   111b4:	orrs	r3, r0, r1
   111b8:	bne	112c8 <strspn@plt+0x2ac>
   111bc:	ldr	r3, [sp]
   111c0:	clz	r3, r3
   111c4:	lsr	r3, r3, #5
   111c8:	cmp	sl, r5
   111cc:	orrhi	r3, r3, #1
   111d0:	cmp	r3, #0
   111d4:	bne	111f8 <strspn@plt+0x1dc>
   111d8:	cmp	sl, r5
   111dc:	bcc	11310 <strspn@plt+0x2f4>
   111e0:	mov	r2, r5
   111e4:	ldr	r1, [sp, #4]
   111e8:	mov	r0, r4
   111ec:	bl	10e24 <memcmp@plt>
   111f0:	cmp	r0, #0
   111f4:	bgt	11310 <strspn@plt+0x2f4>
   111f8:	ldr	r2, [pc, #348]	; 1135c <strspn@plt+0x340>
   111fc:	cmp	r9, r5
   11200:	add	r3, r6, #1
   11204:	ldr	r2, [r2]
   11208:	ldrb	r2, [r2]
   1120c:	strb	r2, [r6]
   11210:	bne	11278 <strspn@plt+0x25c>
   11214:	lsl	r9, r9, #1
   11218:	add	r6, r9, #1
   1121c:	mov	r1, r6
   11220:	mov	r0, fp
   11224:	str	r3, [sp, #20]
   11228:	bl	1429c <strspn@plt+0x3280>
   1122c:	add	r2, r5, #1
   11230:	lsl	r6, r6, #1
   11234:	mov	r1, r0
   11238:	mov	fp, r0
   1123c:	add	r0, r0, r5
   11240:	bl	10dd0 <memmove@plt>
   11244:	cmp	r7, r6
   11248:	ldr	r3, [sp, #20]
   1124c:	mov	r4, r0
   11250:	bcs	11278 <strspn@plt+0x25c>
   11254:	mov	r0, r8
   11258:	mov	r1, r6
   1125c:	sub	r7, r3, r8
   11260:	bl	1429c <strspn@plt+0x3280>
   11264:	add	r3, r0, r6
   11268:	str	r3, [sp, #8]
   1126c:	mov	r8, r0
   11270:	add	r3, r0, r7
   11274:	mov	r7, r6
   11278:	mov	r2, r5
   1127c:	mov	r0, r3
   11280:	mov	r1, r4
   11284:	bl	10efc <mempcpy@plt>
   11288:	ldr	r2, [sp, #8]
   1128c:	mvn	r3, r5
   11290:	add	r3, r2, r3
   11294:	cmp	r0, r3
   11298:	bls	111a4 <strspn@plt+0x188>
   1129c:	ldr	r3, [pc, #188]	; 11360 <strspn@plt+0x344>
   112a0:	sub	r1, r0, r8
   112a4:	mov	r2, #1
   112a8:	ldr	r3, [r3]
   112ac:	mov	r0, r8
   112b0:	bl	10e18 <fwrite_unlocked@plt>
   112b4:	cmp	r0, #1
   112b8:	beq	112c0 <strspn@plt+0x2a4>
   112bc:	bl	11f70 <strspn@plt+0xf54>
   112c0:	mov	r6, r8
   112c4:	b	111a8 <strspn@plt+0x18c>
   112c8:	sub	r3, r5, #1
   112cc:	add	r3, r4, r3
   112d0:	ldrb	r2, [r3]
   112d4:	cmp	r2, #56	; 0x38
   112d8:	bhi	112f0 <strspn@plt+0x2d4>
   112dc:	add	r2, r2, #1
   112e0:	strb	r2, [r3]
   112e4:	subs	r0, r0, #1
   112e8:	sbc	r1, r1, #0
   112ec:	b	111b4 <strspn@plt+0x198>
   112f0:	mov	r2, #48	; 0x30
   112f4:	strb	r2, [r3], #-1
   112f8:	cmp	r3, r4
   112fc:	bcs	112d0 <strspn@plt+0x2b4>
   11300:	strb	ip, [r4, #-1]
   11304:	add	r5, r5, #1
   11308:	sub	r4, r4, #1
   1130c:	b	112e4 <strspn@plt+0x2c8>
   11310:	mov	r3, #10
   11314:	strb	r3, [r6], #1
   11318:	ldr	r3, [pc, #64]	; 11360 <strspn@plt+0x344>
   1131c:	mov	r2, #1
   11320:	sub	r1, r6, r8
   11324:	ldr	r3, [r3]
   11328:	mov	r0, r8
   1132c:	bl	10e18 <fwrite_unlocked@plt>
   11330:	cmp	r0, #1
   11334:	bne	112bc <strspn@plt+0x2a0>
   11338:	mov	r0, #0
   1133c:	bl	10f20 <exit@plt>
   11340:	mov	r0, fp
   11344:	bl	126d4 <strspn@plt+0x16b8>
   11348:	mov	r0, r6
   1134c:	add	sp, sp, #28
   11350:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11354:	b	126d4 <strspn@plt+0x16b8>
   11358:	andeq	r5, r1, r1, lsr #6
   1135c:	andeq	r7, r2, r8, ror #2
   11360:	andeq	r7, r2, ip, asr r1
   11364:	andeq	r0, r0, r0
   11368:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1136c:	vpush	{d8-d14}
   11370:	ldr	r3, [pc, #1456]	; 11928 <strspn@plt+0x90c>
   11374:	mov	r8, r1
   11378:	mov	sl, r0
   1137c:	ldm	r3, {r0, r1, r2, r3}
   11380:	sub	sp, sp, #84	; 0x54
   11384:	add	ip, sp, #48	; 0x30
   11388:	ldr	r6, [pc, #1436]	; 1192c <strspn@plt+0x910>
   1138c:	stm	ip, {r0, r1, r2, r3}
   11390:	mov	r4, #0
   11394:	ldr	r0, [r8]
   11398:	bl	12728 <strspn@plt+0x170c>
   1139c:	ldr	r1, [pc, #1420]	; 11930 <strspn@plt+0x914>
   113a0:	mov	r0, #6
   113a4:	bl	10fb0 <setlocale@plt>
   113a8:	ldr	r1, [pc, #1412]	; 11934 <strspn@plt+0x918>
   113ac:	ldr	r7, [pc, #1412]	; 11938 <strspn@plt+0x91c>
   113b0:	ldr	fp, [pc, #1412]	; 1193c <strspn@plt+0x920>
   113b4:	mov	r9, r7
   113b8:	adds	r0, r0, #0
   113bc:	movne	r0, #1
   113c0:	strb	r0, [r6, #32]
   113c4:	ldr	r0, [pc, #1396]	; 11940 <strspn@plt+0x924>
   113c8:	bl	10fec <bindtextdomain@plt>
   113cc:	ldr	r0, [pc, #1388]	; 11940 <strspn@plt+0x924>
   113d0:	bl	10e54 <textdomain@plt>
   113d4:	ldr	r0, [pc, #1384]	; 11944 <strspn@plt+0x928>
   113d8:	bl	15234 <strspn@plt+0x4218>
   113dc:	ldr	r3, [pc, #1380]	; 11948 <strspn@plt+0x92c>
   113e0:	strb	r4, [r6, #33]	; 0x21
   113e4:	str	r3, [r6]
   113e8:	ldr	r3, [r7]
   113ec:	cmp	r3, sl
   113f0:	bge	11410 <strspn@plt+0x3f4>
   113f4:	ldr	r3, [r8, r3, lsl #2]
   113f8:	ldrb	r2, [r3]
   113fc:	cmp	r2, #45	; 0x2d
   11400:	bne	1144c <strspn@plt+0x430>
   11404:	ldrb	r3, [r3, #1]
   11408:	cmp	r3, #46	; 0x2e
   1140c:	bne	11440 <strspn@plt+0x424>
   11410:	ldr	r7, [r9]
   11414:	subs	r7, sl, r7
   11418:	bne	114f8 <strspn@plt+0x4dc>
   1141c:	mov	r2, #5
   11420:	ldr	r1, [pc, #1316]	; 1194c <strspn@plt+0x930>
   11424:	mov	r0, r7
   11428:	bl	10e3c <dcgettext@plt>
   1142c:	mov	r1, r7
   11430:	mov	r2, r0
   11434:	mov	r0, r1
   11438:	bl	10eb4 <error@plt>
   1143c:	b	11490 <strspn@plt+0x474>
   11440:	sub	r3, r3, #48	; 0x30
   11444:	cmp	r3, #9
   11448:	bls	11410 <strspn@plt+0x3f4>
   1144c:	mov	r5, #0
   11450:	str	r5, [sp]
   11454:	ldr	r3, [pc, #1268]	; 11950 <strspn@plt+0x934>
   11458:	ldr	r2, [pc, #1268]	; 11954 <strspn@plt+0x938>
   1145c:	mov	r1, r8
   11460:	mov	r0, sl
   11464:	bl	10f08 <getopt_long@plt>
   11468:	cmn	r0, #1
   1146c:	beq	11410 <strspn@plt+0x3f4>
   11470:	cmp	r0, #102	; 0x66
   11474:	beq	114b4 <strspn@plt+0x498>
   11478:	bgt	11498 <strspn@plt+0x47c>
   1147c:	cmn	r0, #3
   11480:	beq	114c8 <strspn@plt+0x4ac>
   11484:	cmn	r0, #2
   11488:	moveq	r0, r5
   1148c:	beq	11494 <strspn@plt+0x478>
   11490:	mov	r0, #1
   11494:	bl	11fb0 <strspn@plt+0xf94>
   11498:	cmp	r0, #115	; 0x73
   1149c:	beq	114bc <strspn@plt+0x4a0>
   114a0:	cmp	r0, #119	; 0x77
   114a4:	bne	11490 <strspn@plt+0x474>
   114a8:	mov	r3, #1
   114ac:	strb	r3, [r6, #33]	; 0x21
   114b0:	b	113e8 <strspn@plt+0x3cc>
   114b4:	ldr	r4, [fp]
   114b8:	b	113e8 <strspn@plt+0x3cc>
   114bc:	ldr	r3, [fp]
   114c0:	str	r3, [r6]
   114c4:	b	113e8 <strspn@plt+0x3cc>
   114c8:	ldr	r3, [pc, #1160]	; 11958 <strspn@plt+0x93c>
   114cc:	ldr	r0, [pc, #1160]	; 1195c <strspn@plt+0x940>
   114d0:	str	r3, [sp]
   114d4:	ldr	r3, [pc, #1156]	; 11960 <strspn@plt+0x944>
   114d8:	str	r5, [sp, #4]
   114dc:	ldr	r2, [pc, #1152]	; 11964 <strspn@plt+0x948>
   114e0:	ldr	r3, [r3]
   114e4:	ldr	r1, [pc, #1148]	; 11968 <strspn@plt+0x94c>
   114e8:	ldr	r0, [r0]
   114ec:	bl	141a8 <strspn@plt+0x318c>
   114f0:	mov	r0, #0
   114f4:	bl	10f20 <exit@plt>
   114f8:	cmp	r7, #3
   114fc:	bls	1153c <strspn@plt+0x520>
   11500:	mov	r2, #5
   11504:	ldr	r1, [pc, #1120]	; 1196c <strspn@plt+0x950>
   11508:	mov	r0, #0
   1150c:	bl	10e3c <dcgettext@plt>
   11510:	ldr	r3, [r9]
   11514:	add	r3, r3, #3
   11518:	mov	r4, r0
   1151c:	ldr	r0, [r8, r3, lsl #2]
   11520:	bl	13d58 <strspn@plt+0x2d3c>
   11524:	mov	r1, #0
   11528:	mov	r2, r4
   1152c:	mov	r3, r0
   11530:	mov	r0, r1
   11534:	bl	10eb4 <error@plt>
   11538:	b	11490 <strspn@plt+0x474>
   1153c:	cmp	r4, #0
   11540:	movne	r3, #0
   11544:	strne	r3, [sp, #12]
   11548:	bne	11738 <strspn@plt+0x71c>
   1154c:	str	r4, [sp, #8]
   11550:	str	r4, [sp, #12]
   11554:	cmp	r7, #3
   11558:	vldr	d9, [pc, #952]	; 11918 <strspn@plt+0x8fc>
   1155c:	movne	r5, #1
   11560:	bne	11584 <strspn@plt+0x568>
   11564:	ldr	r3, [r9]
   11568:	add	r3, r3, #1
   1156c:	ldr	r5, [r8, r3, lsl #2]
   11570:	mov	r0, r5
   11574:	bl	11f28 <strspn@plt+0xf0c>
   11578:	cmp	r0, #0
   1157c:	bne	118d0 <strspn@plt+0x8b4>
   11580:	mov	r5, #0
   11584:	ldr	fp, [r9]
   11588:	lsl	r3, fp, #2
   1158c:	str	r3, [sp, #20]
   11590:	ldr	r3, [r8, fp, lsl #2]
   11594:	mov	r0, r3
   11598:	str	r3, [sp, #16]
   1159c:	bl	11f28 <strspn@plt+0xf0c>
   115a0:	cmp	r0, #0
   115a4:	beq	11650 <strspn@plt+0x634>
   115a8:	cmp	r7, #1
   115ac:	beq	115f0 <strspn@plt+0x5d4>
   115b0:	ldr	r3, [sp, #20]
   115b4:	add	r3, r8, r3
   115b8:	str	r3, [sp, #20]
   115bc:	ldr	r0, [r3, #4]
   115c0:	bl	11f28 <strspn@plt+0xf0c>
   115c4:	cmp	r0, #0
   115c8:	beq	11650 <strspn@plt+0x634>
   115cc:	cmp	r7, #3
   115d0:	bne	115f0 <strspn@plt+0x5d4>
   115d4:	cmp	r5, #0
   115d8:	beq	11650 <strspn@plt+0x634>
   115dc:	ldr	r3, [sp, #20]
   115e0:	ldr	r0, [r3, #8]
   115e4:	bl	11f28 <strspn@plt+0xf0c>
   115e8:	cmp	r0, #0
   115ec:	beq	11650 <strspn@plt+0x634>
   115f0:	ldrb	r3, [r6, #33]	; 0x21
   115f4:	eor	r3, r3, #1
   115f8:	cmp	r4, #0
   115fc:	movne	r3, #0
   11600:	andeq	r3, r3, #1
   11604:	cmp	r3, #0
   11608:	beq	11650 <strspn@plt+0x634>
   1160c:	ldr	r0, [r6]
   11610:	bl	10f2c <strlen@plt>
   11614:	cmp	r0, #1
   11618:	bne	11650 <strspn@plt+0x634>
   1161c:	ldr	r3, [pc, #844]	; 11970 <strspn@plt+0x954>
   11620:	cmp	r7, #1
   11624:	ldrd	r0, [sp, #48]	; 0x30
   11628:	ldr	r5, [sp, #16]
   1162c:	moveq	r5, r3
   11630:	bl	15188 <strspn@plt+0x416c>
   11634:	add	r7, r7, fp
   11638:	sub	r7, r7, #-1073741823	; 0xc0000001
   1163c:	mov	r2, r0
   11640:	mov	r3, r1
   11644:	mov	r0, r5
   11648:	ldr	r1, [r8, r7, lsl #2]
   1164c:	bl	11028 <strspn@plt+0xc>
   11650:	ldr	r3, [r9]
   11654:	add	r0, sp, #64	; 0x40
   11658:	add	r2, r3, #1
   1165c:	ldr	r1, [r8, r3, lsl #2]
   11660:	str	r2, [r9]
   11664:	bl	12250 <strspn@plt+0x1234>
   11668:	ldr	r3, [r9]
   1166c:	vldr	d10, [sp, #64]	; 0x40
   11670:	cmp	sl, r3
   11674:	ldr	fp, [sp, #72]	; 0x48
   11678:	ldr	r5, [sp, #76]	; 0x4c
   1167c:	ble	11a5c <strspn@plt+0xa40>
   11680:	add	r2, r3, #1
   11684:	ldr	r1, [r8, r3, lsl #2]
   11688:	add	r0, sp, #64	; 0x40
   1168c:	str	r2, [r9]
   11690:	bl	12250 <strspn@plt+0x1234>
   11694:	ldr	r2, [r9]
   11698:	vldr	d8, [sp, #64]	; 0x40
   1169c:	cmp	sl, r2
   116a0:	ldr	r7, [sp, #72]	; 0x48
   116a4:	ldr	r3, [sp, #76]	; 0x4c
   116a8:	ble	119bc <strspn@plt+0x9a0>
   116ac:	vcmp.f64	d8, d9
   116b0:	vstr	d8, [sp, #48]	; 0x30
   116b4:	str	r7, [sp, #56]	; 0x38
   116b8:	str	r3, [sp, #60]	; 0x3c
   116bc:	vmrs	APSR_nzcv, fpscr
   116c0:	bne	1199c <strspn@plt+0x980>
   116c4:	mov	r2, #5
   116c8:	ldr	r1, [pc, #676]	; 11974 <strspn@plt+0x958>
   116cc:	mov	r0, #0
   116d0:	bl	10e3c <dcgettext@plt>
   116d4:	ldr	r3, [r9]
   116d8:	sub	r3, r3, #-1073741823	; 0xc0000001
   116dc:	mov	r4, r0
   116e0:	b	1151c <strspn@plt+0x500>
   116e4:	cmp	fp, #0
   116e8:	bne	1171c <strspn@plt+0x700>
   116ec:	ldr	r1, [pc, #644]	; 11978 <strspn@plt+0x95c>
   116f0:	mov	r2, #5
   116f4:	mov	r0, #0
   116f8:	bl	10e3c <dcgettext@plt>
   116fc:	mov	r5, r0
   11700:	mov	r0, r4
   11704:	bl	13d58 <strspn@plt+0x2d3c>
   11708:	mov	r2, r5
   1170c:	mov	r1, #0
   11710:	mov	r3, r0
   11714:	mov	r0, #1
   11718:	bl	10eb4 <error@plt>
   1171c:	cmp	fp, #37	; 0x25
   11720:	ldr	r2, [sp, #12]
   11724:	moveq	fp, #2
   11728:	movne	fp, #1
   1172c:	add	r3, r3, fp
   11730:	add	r2, r2, #1
   11734:	str	r2, [sp, #12]
   11738:	ldrb	fp, [r4, r3]
   1173c:	cmp	fp, #37	; 0x25
   11740:	bne	116e4 <strspn@plt+0x6c8>
   11744:	add	r5, r3, #1
   11748:	add	r0, r4, r5
   1174c:	ldrb	r2, [r4, r5]
   11750:	cmp	r2, #37	; 0x25
   11754:	beq	1171c <strspn@plt+0x700>
   11758:	ldr	r1, [pc, #540]	; 1197c <strspn@plt+0x960>
   1175c:	bl	1101c <strspn@plt>
   11760:	ldr	r1, [pc, #536]	; 11980 <strspn@plt+0x964>
   11764:	add	r5, r5, r0
   11768:	add	r0, r4, r5
   1176c:	bl	1101c <strspn@plt>
   11770:	add	r5, r5, r0
   11774:	ldrb	r3, [r4, r5]
   11778:	cmp	r3, #46	; 0x2e
   1177c:	bne	11794 <strspn@plt+0x778>
   11780:	add	r5, r5, #1
   11784:	add	r0, r4, r5
   11788:	ldr	r1, [pc, #496]	; 11980 <strspn@plt+0x964>
   1178c:	bl	1101c <strspn@plt>
   11790:	add	r5, r5, r0
   11794:	ldrb	r0, [r4, r5]
   11798:	cmp	r0, #76	; 0x4c
   1179c:	movne	r3, r5
   117a0:	addeq	r3, r5, #1
   117a4:	add	r2, r4, r3
   117a8:	ldrb	fp, [r4, r3]
   117ac:	str	r2, [sp, #16]
   117b0:	cmp	fp, #0
   117b4:	moveq	r2, #5
   117b8:	ldreq	r1, [pc, #452]	; 11984 <strspn@plt+0x968>
   117bc:	beq	116f4 <strspn@plt+0x6d8>
   117c0:	mov	r1, fp
   117c4:	ldr	r0, [pc, #444]	; 11988 <strspn@plt+0x96c>
   117c8:	str	r3, [sp, #8]
   117cc:	bl	10f38 <strchr@plt>
   117d0:	ldr	r3, [sp, #8]
   117d4:	subs	fp, r0, #0
   117d8:	addne	r0, r3, #1
   117dc:	movne	r3, #0
   117e0:	strne	r3, [sp, #8]
   117e4:	bne	11844 <strspn@plt+0x828>
   117e8:	mov	r2, #5
   117ec:	ldr	r1, [pc, #408]	; 1198c <strspn@plt+0x970>
   117f0:	bl	10e3c <dcgettext@plt>
   117f4:	mov	r5, r0
   117f8:	mov	r0, r4
   117fc:	bl	13d58 <strspn@plt+0x2d3c>
   11800:	ldr	r3, [sp, #16]
   11804:	mov	r2, r5
   11808:	mov	r1, fp
   1180c:	ldrb	r3, [r3]
   11810:	str	r3, [sp]
   11814:	mov	r3, r0
   11818:	mov	r0, #1
   1181c:	bl	10eb4 <error@plt>
   11820:	cmp	fp, #0
   11824:	beq	1186c <strspn@plt+0x850>
   11828:	cmp	fp, #37	; 0x25
   1182c:	ldr	r3, [sp, #8]
   11830:	moveq	fp, #2
   11834:	movne	fp, #1
   11838:	add	r0, r0, fp
   1183c:	add	r3, r3, #1
   11840:	str	r3, [sp, #8]
   11844:	ldrb	fp, [r4, r0]
   11848:	cmp	fp, #37	; 0x25
   1184c:	bne	11820 <strspn@plt+0x804>
   11850:	add	r3, r4, r0
   11854:	ldrb	r3, [r3, #1]
   11858:	cmp	r3, #37	; 0x25
   1185c:	beq	11828 <strspn@plt+0x80c>
   11860:	mov	r2, #5
   11864:	ldr	r1, [pc, #292]	; 11990 <strspn@plt+0x974>
   11868:	b	116f4 <strspn@plt+0x6d8>
   1186c:	add	r0, r0, #2
   11870:	bl	14270 <strspn@plt+0x3254>
   11874:	mov	r1, r4
   11878:	mov	r2, r5
   1187c:	bl	10df4 <memcpy@plt>
   11880:	mov	r2, #76	; 0x4c
   11884:	ldr	r1, [sp, #16]
   11888:	mov	r3, r0
   1188c:	strb	r2, [r0, r5]
   11890:	add	r0, r5, #1
   11894:	add	r0, r3, r0
   11898:	str	r3, [sp, #16]
   1189c:	bl	10e84 <strcpy@plt>
   118a0:	ldrb	r2, [r6, #33]	; 0x21
   118a4:	cmp	r2, #0
   118a8:	ldreq	r3, [sp, #16]
   118ac:	moveq	r4, r3
   118b0:	beq	11554 <strspn@plt+0x538>
   118b4:	mov	r2, #5
   118b8:	ldr	r1, [pc, #212]	; 11994 <strspn@plt+0x978>
   118bc:	mov	r0, fp
   118c0:	bl	10e3c <dcgettext@plt>
   118c4:	mov	r1, fp
   118c8:	mov	r2, r0
   118cc:	b	11434 <strspn@plt+0x418>
   118d0:	ldr	r3, [pc, #192]	; 11998 <strspn@plt+0x97c>
   118d4:	add	r2, sp, #48	; 0x30
   118d8:	mov	r1, #0
   118dc:	mov	r0, r5
   118e0:	bl	14744 <strspn@plt+0x3728>
   118e4:	cmp	r0, #0
   118e8:	beq	11580 <strspn@plt+0x564>
   118ec:	vldr	d7, [sp, #48]	; 0x30
   118f0:	vcmpe.f64	d7, d9
   118f4:	vmrs	APSR_nzcv, fpscr
   118f8:	ble	11580 <strspn@plt+0x564>
   118fc:	vldr	d6, [pc, #28]	; 11920 <strspn@plt+0x904>
   11900:	vcmpe.f64	d7, d6
   11904:	vmrs	APSR_nzcv, fpscr
   11908:	movls	r5, #1
   1190c:	movhi	r5, #0
   11910:	b	11584 <strspn@plt+0x568>
   11914:	nop			; (mov r0, r0)
	...
   11924:	rsbmi	r0, r9, r0
   11928:	muleq	r1, r8, r2
   1192c:	andeq	r7, r2, r8, ror #2
   11930:	andeq	r5, r1, sl, lsr #18
   11934:	andeq	r5, r1, r0, lsl #19
   11938:	andeq	r7, r2, r0, asr r1
   1193c:	andeq	r7, r2, r0, ror #2
   11940:	andeq	r5, r1, r8, lsl #17
   11944:	strdeq	r2, [r1], -r0
   11948:	andeq	r5, r1, r9, lsr #18
   1194c:	andeq	r5, r1, lr, lsr #19
   11950:	andeq	r5, r1, r8, lsr #5
   11954:	muleq	r1, r8, r9
   11958:	muleq	r1, pc, r9	; <UNPREDICTABLE>
   1195c:	andeq	r7, r2, ip, asr r1
   11960:	andeq	r7, r2, r0, lsl #2
   11964:	andeq	r5, r1, r4, lsl #17
   11968:	andeq	r5, r1, r5, lsr #6
   1196c:			; <UNDEFINED> instruction: 0x000159be
   11970:	andeq	r5, r1, sl, ror r9
   11974:	andeq	r5, r1, r1, lsr #21
   11978:	andeq	r5, r1, pc, asr #19
   1197c:	andeq	r5, r1, sp, ror #19
   11980:	andeq	r5, r1, sl, lsl #6
   11984:	strdeq	r5, [r1], -r4
   11988:	andeq	r5, r1, r9, lsl #20
   1198c:	andeq	r5, r1, r2, lsl sl
   11990:	andeq	r5, r1, r7, lsr sl
   11994:	andeq	r5, r1, ip, asr sl
   11998:	andeq	r2, r1, r8, asr r5
   1199c:	add	r3, r2, #1
   119a0:	ldr	r1, [r8, r2, lsl #2]
   119a4:	add	r0, sp, #64	; 0x40
   119a8:	str	r3, [r9]
   119ac:	bl	12250 <strspn@plt+0x1234>
   119b0:	vldr	d8, [sp, #64]	; 0x40
   119b4:	ldr	r7, [sp, #72]	; 0x48
   119b8:	ldr	r3, [sp, #76]	; 0x4c
   119bc:	cmp	r5, #0
   119c0:	bne	11b08 <strspn@plt+0xaec>
   119c4:	ldr	r5, [sp, #60]	; 0x3c
   119c8:	orrs	r5, r3, r5
   119cc:	bne	11b04 <strspn@plt+0xae8>
   119d0:	vmul.f64	d7, d10, d9
   119d4:	vcmp.f64	d7, d9
   119d8:	vmrs	APSR_nzcv, fpscr
   119dc:	bne	11bf4 <strspn@plt+0xbd8>
   119e0:	vcmpe.f64	d10, d9
   119e4:	vmrs	APSR_nzcv, fpscr
   119e8:	blt	11bf4 <strspn@plt+0xbd8>
   119ec:	vcmpe.f64	d8, d9
   119f0:	vmrs	APSR_nzcv, fpscr
   119f4:	blt	11bf4 <strspn@plt+0xbd8>
   119f8:	vldr	d7, [sp, #48]	; 0x30
   119fc:	vcmpe.f64	d7, d9
   11a00:	vmrs	APSR_nzcv, fpscr
   11a04:	ble	11bf4 <strspn@plt+0xbd8>
   11a08:	vldr	d6, [pc, #944]	; 11dc0 <strspn@plt+0xda4>
   11a0c:	vcmpe.f64	d7, d6
   11a10:	vmrs	APSR_nzcv, fpscr
   11a14:	bhi	11bf4 <strspn@plt+0xbd8>
   11a18:	ldrb	r3, [r6, #33]	; 0x21
   11a1c:	cmp	r3, #0
   11a20:	bne	11bf4 <strspn@plt+0xbd8>
   11a24:	cmp	r4, #0
   11a28:	bne	11ba0 <strspn@plt+0xb84>
   11a2c:	ldr	r0, [r6]
   11a30:	bl	10f2c <strlen@plt>
   11a34:	cmp	r0, #1
   11a38:	mov	r1, r0
   11a3c:	bne	11adc <strspn@plt+0xac0>
   11a40:	vstr	d10, [sp]
   11a44:	ldr	r2, [pc, #900]	; 11dd0 <strspn@plt+0xdb4>
   11a48:	add	r0, sp, #24
   11a4c:	bl	10ec0 <__asprintf_chk@plt>
   11a50:	cmp	r0, #0
   11a54:	bge	11a74 <strspn@plt+0xa58>
   11a58:	bl	14704 <strspn@plt+0x36e8>
   11a5c:	mov	r7, fp
   11a60:	vmov.f64	d8, d10
   11a64:	mov	r3, r5
   11a68:	vldr	d10, [pc, #856]	; 11dc8 <strspn@plt+0xdac>
   11a6c:	mov	fp, #1
   11a70:	b	119c4 <strspn@plt+0x9a8>
   11a74:	vmul.f64	d7, d8, d9
   11a78:	vcmp.f64	d7, d9
   11a7c:	vmrs	APSR_nzcv, fpscr
   11a80:	beq	11ae4 <strspn@plt+0xac8>
   11a84:	ldr	r0, [pc, #840]	; 11dd4 <strspn@plt+0xdb8>
   11a88:	bl	146e8 <strspn@plt+0x36cc>
   11a8c:	str	r0, [sp, #28]
   11a90:	ldr	r4, [sp, #24]
   11a94:	ldrb	r3, [r4]
   11a98:	cmp	r3, #45	; 0x2d
   11a9c:	beq	11acc <strspn@plt+0xab0>
   11aa0:	ldr	r8, [sp, #28]
   11aa4:	ldrb	r3, [r8]
   11aa8:	cmp	r3, #45	; 0x2d
   11aac:	beq	11acc <strspn@plt+0xab0>
   11ab0:	ldrd	r0, [sp, #48]	; 0x30
   11ab4:	bl	15188 <strspn@plt+0x416c>
   11ab8:	mov	r2, r0
   11abc:	mov	r3, r1
   11ac0:	mov	r0, r4
   11ac4:	mov	r1, r8
   11ac8:	bl	11028 <strspn@plt+0xc>
   11acc:	ldr	r0, [sp, #24]
   11ad0:	bl	126d4 <strspn@plt+0x16b8>
   11ad4:	ldr	r0, [sp, #28]
   11ad8:	bl	126d4 <strspn@plt+0x16b8>
   11adc:	mov	r3, r5
   11ae0:	b	11b10 <strspn@plt+0xaf4>
   11ae4:	vstr	d8, [sp]
   11ae8:	ldr	r2, [pc, #736]	; 11dd0 <strspn@plt+0xdb4>
   11aec:	mov	r1, #1
   11af0:	add	r0, sp, #28
   11af4:	bl	10ec0 <__asprintf_chk@plt>
   11af8:	cmp	r0, #0
   11afc:	bge	11a90 <strspn@plt+0xa74>
   11b00:	b	11a58 <strspn@plt+0xa3c>
   11b04:	mov	r5, #0
   11b08:	cmp	r4, #0
   11b0c:	bne	11ba0 <strspn@plt+0xb84>
   11b10:	ldr	r2, [sp, #60]	; 0x3c
   11b14:	cmp	r5, r2
   11b18:	movge	r2, r5
   11b1c:	cmn	r2, #-2147483647	; 0x80000001
   11b20:	cmnne	r3, #-2147483647	; 0x80000001
   11b24:	beq	11c24 <strspn@plt+0xc08>
   11b28:	ldrb	r1, [r6, #33]	; 0x21
   11b2c:	cmp	r1, #0
   11b30:	beq	11c08 <strspn@plt+0xbec>
   11b34:	sub	r1, r2, r5
   11b38:	add	fp, r1, fp
   11b3c:	cmp	r3, #0
   11b40:	sub	r1, r2, r3
   11b44:	add	r7, r1, r7
   11b48:	beq	11bfc <strspn@plt+0xbe0>
   11b4c:	cmp	r2, #0
   11b50:	subeq	r7, r7, #1
   11b54:	beq	11b70 <strspn@plt+0xb54>
   11b58:	cmp	r2, #0
   11b5c:	clz	r5, r5
   11b60:	lsr	r5, r5, #5
   11b64:	moveq	r5, #0
   11b68:	cmp	r5, #0
   11b6c:	addne	fp, fp, #1
   11b70:	cmp	fp, r7
   11b74:	movcc	fp, r7
   11b78:	cmp	fp, #0
   11b7c:	blt	11c24 <strspn@plt+0xc08>
   11b80:	str	r2, [sp, #4]
   11b84:	str	fp, [sp]
   11b88:	ldr	r3, [pc, #584]	; 11dd8 <strspn@plt+0xdbc>
   11b8c:	mov	r2, #28
   11b90:	mov	r1, #1
   11b94:	ldr	r0, [pc, #576]	; 11ddc <strspn@plt+0xdc0>
   11b98:	bl	10f50 <__sprintf_chk@plt>
   11b9c:	ldr	r4, [pc, #568]	; 11ddc <strspn@plt+0xdc0>
   11ba0:	vldr	d13, [sp, #48]	; 0x30
   11ba4:	vcmpe.f64	d13, d9
   11ba8:	vmrs	APSR_nzcv, fpscr
   11bac:	vcmpe.f64	d10, d8
   11bb0:	bpl	11c2c <strspn@plt+0xc10>
   11bb4:	vmrs	APSR_nzcv, fpscr
   11bb8:	movmi	r5, #1
   11bbc:	movpl	r5, #0
   11bc0:	cmp	r5, #0
   11bc4:	bne	114f0 <strspn@plt+0x4d4>
   11bc8:	vldr	d12, [pc, #504]	; 11dc8 <strspn@plt+0xdac>
   11bcc:	vmov	sl, fp, d10
   11bd0:	vmov.f64	d14, d12
   11bd4:	mov	r2, sl
   11bd8:	mov	r3, fp
   11bdc:	mov	r1, r4
   11be0:	mov	r0, #1
   11be4:	bl	10f74 <__printf_chk@plt>
   11be8:	cmp	r0, #0
   11bec:	bge	11c3c <strspn@plt+0xc20>
   11bf0:	bl	11f70 <strspn@plt+0xf54>
   11bf4:	mov	r3, r5
   11bf8:	b	11b08 <strspn@plt+0xaec>
   11bfc:	cmp	r2, #0
   11c00:	addne	r7, r7, #1
   11c04:	b	11b58 <strspn@plt+0xb3c>
   11c08:	str	r2, [sp]
   11c0c:	ldr	r3, [pc, #460]	; 11de0 <strspn@plt+0xdc4>
   11c10:	mov	r2, #28
   11c14:	mov	r1, #1
   11c18:	ldr	r0, [pc, #444]	; 11ddc <strspn@plt+0xdc0>
   11c1c:	bl	10f50 <__sprintf_chk@plt>
   11c20:	b	11b9c <strspn@plt+0xb80>
   11c24:	ldr	r4, [pc, #440]	; 11de4 <strspn@plt+0xdc8>
   11c28:	b	11ba0 <strspn@plt+0xb84>
   11c2c:	vmrs	APSR_nzcv, fpscr
   11c30:	movgt	r5, #1
   11c34:	movle	r5, #0
   11c38:	b	11bc0 <strspn@plt+0xba4>
   11c3c:	cmp	r5, #0
   11c40:	bne	11da4 <strspn@plt+0xd88>
   11c44:	vmov.f64	d11, d10
   11c48:	vcmpe.f64	d13, d9
   11c4c:	vmla.f64	d11, d13, d12
   11c50:	vmrs	APSR_nzcv, fpscr
   11c54:	vcmpe.f64	d11, d8
   11c58:	bpl	11d8c <strspn@plt+0xd70>
   11c5c:	vmrs	APSR_nzcv, fpscr
   11c60:	movmi	r8, #1
   11c64:	movpl	r8, #0
   11c68:	cmp	r8, #0
   11c6c:	beq	11d64 <strspn@plt+0xd48>
   11c70:	ldrb	r7, [r6, #32]
   11c74:	cmp	r7, #0
   11c78:	beq	11c88 <strspn@plt+0xc6c>
   11c7c:	ldr	r1, [pc, #356]	; 11de8 <strspn@plt+0xdcc>
   11c80:	mov	r0, #1
   11c84:	bl	10fb0 <setlocale@plt>
   11c88:	vstr	d11, [sp]
   11c8c:	mov	r2, r4
   11c90:	mov	r1, #1
   11c94:	add	r0, sp, #32
   11c98:	bl	10ec0 <__asprintf_chk@plt>
   11c9c:	cmp	r7, #0
   11ca0:	mov	r9, r0
   11ca4:	beq	11cb4 <strspn@plt+0xc98>
   11ca8:	ldr	r1, [pc, #316]	; 11dec <strspn@plt+0xdd0>
   11cac:	mov	r0, #1
   11cb0:	bl	10fb0 <setlocale@plt>
   11cb4:	cmp	r9, #0
   11cb8:	blt	11a58 <strspn@plt+0xa3c>
   11cbc:	ldr	r3, [sp, #8]
   11cc0:	ldr	r2, [sp, #32]
   11cc4:	sub	r3, r9, r3
   11cc8:	mov	r7, #0
   11ccc:	strb	r7, [r2, r3]
   11cd0:	ldr	r0, [sp, #32]
   11cd4:	ldr	ip, [sp, #12]
   11cd8:	ldr	r3, [pc, #272]	; 11df0 <strspn@plt+0xdd4>
   11cdc:	add	r2, sp, #40	; 0x28
   11ce0:	mov	r1, r7
   11ce4:	add	r0, r0, ip
   11ce8:	bl	14744 <strspn@plt+0x3728>
   11cec:	subs	r9, r0, #0
   11cf0:	beq	11d54 <strspn@plt+0xd38>
   11cf4:	vldr	d7, [sp, #40]	; 0x28
   11cf8:	vcmp.f64	d7, d8
   11cfc:	vmrs	APSR_nzcv, fpscr
   11d00:	bne	11d9c <strspn@plt+0xd80>
   11d04:	add	r0, sp, #80	; 0x50
   11d08:	mov	r2, r4
   11d0c:	str	r7, [r0, #-44]!	; 0xffffffd4
   11d10:	mov	r1, #1
   11d14:	strd	sl, [sp]
   11d18:	bl	10ec0 <__asprintf_chk@plt>
   11d1c:	cmp	r0, #0
   11d20:	blt	11a58 <strspn@plt+0xa3c>
   11d24:	ldr	r3, [sp, #8]
   11d28:	sub	r0, r0, r3
   11d2c:	ldr	r3, [sp, #36]	; 0x24
   11d30:	strb	r7, [r3, r0]
   11d34:	ldr	r5, [sp, #36]	; 0x24
   11d38:	ldr	r1, [sp, #32]
   11d3c:	mov	r0, r5
   11d40:	bl	10da0 <strcmp@plt>
   11d44:	subs	r9, r0, r7
   11d48:	mov	r0, r5
   11d4c:	movne	r9, #1
   11d50:	bl	126d4 <strspn@plt+0x16b8>
   11d54:	ldr	r0, [sp, #32]
   11d58:	bl	126d4 <strspn@plt+0x16b8>
   11d5c:	cmp	r9, #0
   11d60:	beq	11da4 <strspn@plt+0xd88>
   11d64:	ldr	r3, [pc, #136]	; 11df4 <strspn@plt+0xdd8>
   11d68:	ldr	r0, [r6]
   11d6c:	ldr	r1, [r3]
   11d70:	bl	10d7c <fputs_unlocked@plt>
   11d74:	cmn	r0, #1
   11d78:	beq	11bf0 <strspn@plt+0xbd4>
   11d7c:	vadd.f64	d12, d12, d14
   11d80:	vmov	sl, fp, d11
   11d84:	mov	r5, r8
   11d88:	b	11bd4 <strspn@plt+0xbb8>
   11d8c:	vmrs	APSR_nzcv, fpscr
   11d90:	movgt	r8, #1
   11d94:	movle	r8, #0
   11d98:	b	11c68 <strspn@plt+0xc4c>
   11d9c:	mov	r9, r5
   11da0:	b	11d54 <strspn@plt+0xd38>
   11da4:	ldr	r3, [pc, #72]	; 11df4 <strspn@plt+0xdd8>
   11da8:	ldr	r0, [pc, #72]	; 11df8 <strspn@plt+0xddc>
   11dac:	ldr	r1, [r3]
   11db0:	bl	10d7c <fputs_unlocked@plt>
   11db4:	cmn	r0, #1
   11db8:	bne	114f0 <strspn@plt+0x4d4>
   11dbc:	b	11bf0 <strspn@plt+0xbd4>
   11dc0:	andeq	r0, r0, r0
   11dc4:	rsbmi	r0, r9, r0
   11dc8:	andeq	r0, r0, r0
   11dcc:	svccc	0x00f00000	; IMB
   11dd0:	andeq	r5, r1, r2, asr #21
   11dd4:	andeq	r5, r1, r1, lsr #6
   11dd8:	andeq	r5, r1, r8, asr #21
   11ddc:	andeq	r7, r2, ip, ror #2
   11de0:	ldrdeq	r5, [r1], -r3
   11de4:	andeq	r5, r1, ip, ror r9
   11de8:	ldrdeq	r5, [r1], -fp
   11dec:	andeq	r5, r1, sl, lsr #18
   11df0:	andeq	r2, r1, r8, asr r5
   11df4:	andeq	r7, r2, ip, asr r1
   11df8:	andeq	r5, r1, r8, lsl #6
   11dfc:	mov	fp, #0
   11e00:	mov	lr, #0
   11e04:	pop	{r1}		; (ldr r1, [sp], #4)
   11e08:	mov	r2, sp
   11e0c:	push	{r2}		; (str r2, [sp, #-4]!)
   11e10:	push	{r0}		; (str r0, [sp, #-4]!)
   11e14:	ldr	ip, [pc, #16]	; 11e2c <strspn@plt+0xe10>
   11e18:	push	{ip}		; (str ip, [sp, #-4]!)
   11e1c:	ldr	r0, [pc, #12]	; 11e30 <strspn@plt+0xe14>
   11e20:	ldr	r3, [pc, #12]	; 11e34 <strspn@plt+0xe18>
   11e24:	bl	10ed8 <__libc_start_main@plt>
   11e28:	bl	11010 <abort@plt>
   11e2c:	andeq	r5, r1, r0, lsr r2
   11e30:	andeq	r1, r1, r8, ror #6
   11e34:	ldrdeq	r5, [r1], -r0
   11e38:	ldr	r3, [pc, #20]	; 11e54 <strspn@plt+0xe38>
   11e3c:	ldr	r2, [pc, #20]	; 11e58 <strspn@plt+0xe3c>
   11e40:	add	r3, pc, r3
   11e44:	ldr	r2, [r3, r2]
   11e48:	cmp	r2, #0
   11e4c:	bxeq	lr
   11e50:	b	10ef0 <__gmon_start__@plt>
   11e54:			; <UNDEFINED> instruction: 0x000151b8
   11e58:	strdeq	r0, [r0], -r4
   11e5c:	ldr	r3, [pc, #28]	; 11e80 <strspn@plt+0xe64>
   11e60:	ldr	r0, [pc, #28]	; 11e84 <strspn@plt+0xe68>
   11e64:	sub	r3, r3, r0
   11e68:	cmp	r3, #6
   11e6c:	bxls	lr
   11e70:	ldr	r3, [pc, #16]	; 11e88 <strspn@plt+0xe6c>
   11e74:	cmp	r3, #0
   11e78:	bxeq	lr
   11e7c:	bx	r3
   11e80:	andeq	r7, r2, fp, asr #2
   11e84:	andeq	r7, r2, r8, asr #2
   11e88:	andeq	r0, r0, r0
   11e8c:	ldr	r1, [pc, #36]	; 11eb8 <strspn@plt+0xe9c>
   11e90:	ldr	r0, [pc, #36]	; 11ebc <strspn@plt+0xea0>
   11e94:	sub	r1, r1, r0
   11e98:	asr	r1, r1, #2
   11e9c:	add	r1, r1, r1, lsr #31
   11ea0:	asrs	r1, r1, #1
   11ea4:	bxeq	lr
   11ea8:	ldr	r3, [pc, #16]	; 11ec0 <strspn@plt+0xea4>
   11eac:	cmp	r3, #0
   11eb0:	bxeq	lr
   11eb4:	bx	r3
   11eb8:	andeq	r7, r2, r8, asr #2
   11ebc:	andeq	r7, r2, r8, asr #2
   11ec0:	andeq	r0, r0, r0
   11ec4:	push	{r4, lr}
   11ec8:	ldr	r4, [pc, #24]	; 11ee8 <strspn@plt+0xecc>
   11ecc:	ldrb	r3, [r4]
   11ed0:	cmp	r3, #0
   11ed4:	popne	{r4, pc}
   11ed8:	bl	11e5c <strspn@plt+0xe40>
   11edc:	mov	r3, #1
   11ee0:	strb	r3, [r4]
   11ee4:	pop	{r4, pc}
   11ee8:	andeq	r7, r2, r4, ror #2
   11eec:	ldr	r0, [pc, #40]	; 11f1c <strspn@plt+0xf00>
   11ef0:	ldr	r3, [r0]
   11ef4:	cmp	r3, #0
   11ef8:	bne	11f00 <strspn@plt+0xee4>
   11efc:	b	11e8c <strspn@plt+0xe70>
   11f00:	ldr	r3, [pc, #24]	; 11f20 <strspn@plt+0xf04>
   11f04:	cmp	r3, #0
   11f08:	beq	11efc <strspn@plt+0xee0>
   11f0c:	push	{r4, lr}
   11f10:	blx	r3
   11f14:	pop	{r4, lr}
   11f18:	b	11e8c <strspn@plt+0xe70>
   11f1c:	andeq	r6, r2, r4, lsl pc
	...
   11f28:	push	{r4, r5, r6, lr}
   11f2c:	mov	r5, r0
   11f30:	bl	10f2c <strlen@plt>
   11f34:	ldrb	r3, [r5]
   11f38:	sub	r3, r3, #48	; 0x30
   11f3c:	cmp	r3, #9
   11f40:	bhi	11f64 <strspn@plt+0xf48>
   11f44:	mov	r4, r0
   11f48:	ldr	r1, [pc, #28]	; 11f6c <strspn@plt+0xf50>
   11f4c:	mov	r0, r5
   11f50:	bl	1101c <strspn@plt>
   11f54:	sub	r0, r4, r0
   11f58:	clz	r0, r0
   11f5c:	lsr	r0, r0, #5
   11f60:	pop	{r4, r5, r6, pc}
   11f64:	mov	r0, #0
   11f68:	pop	{r4, r5, r6, pc}
   11f6c:	andeq	r5, r1, sl, lsl #6
   11f70:	ldr	r3, [pc, #48]	; 11fa8 <strspn@plt+0xf8c>
   11f74:	push	{r4, lr}
   11f78:	ldr	r0, [r3]
   11f7c:	bl	10fe0 <clearerr_unlocked@plt>
   11f80:	bl	10f44 <__errno_location@plt>
   11f84:	mov	r2, #5
   11f88:	ldr	r1, [pc, #28]	; 11fac <strspn@plt+0xf90>
   11f8c:	ldr	r4, [r0]
   11f90:	mov	r0, #0
   11f94:	bl	10e3c <dcgettext@plt>
   11f98:	mov	r1, r4
   11f9c:	mov	r2, r0
   11fa0:	mov	r0, #1
   11fa4:	bl	10eb4 <error@plt>
   11fa8:	andeq	r7, r2, ip, asr r1
   11fac:	andeq	r5, r1, r5, lsl r3
   11fb0:	subs	r5, r0, #0
   11fb4:	push	{r7, lr}
   11fb8:	sub	sp, sp, #64	; 0x40
   11fbc:	ldr	r4, [pc, #560]	; 121f4 <strspn@plt+0x11d8>
   11fc0:	beq	11ff8 <strspn@plt+0xfdc>
   11fc4:	ldr	r3, [pc, #556]	; 121f8 <strspn@plt+0x11dc>
   11fc8:	mov	r2, #5
   11fcc:	ldr	r1, [pc, #552]	; 121fc <strspn@plt+0x11e0>
   11fd0:	mov	r0, #0
   11fd4:	ldr	r6, [r3]
   11fd8:	bl	10e3c <dcgettext@plt>
   11fdc:	ldr	r3, [r4]
   11fe0:	mov	r1, #1
   11fe4:	mov	r2, r0
   11fe8:	mov	r0, r6
   11fec:	bl	10f8c <__fprintf_chk@plt>
   11ff0:	mov	r0, r5
   11ff4:	bl	10f20 <exit@plt>
   11ff8:	mov	r2, #5
   11ffc:	ldr	r1, [pc, #508]	; 12200 <strspn@plt+0x11e4>
   12000:	bl	10e3c <dcgettext@plt>
   12004:	ldr	r3, [r4]
   12008:	ldr	r4, [pc, #500]	; 12204 <strspn@plt+0x11e8>
   1200c:	mov	r2, r3
   12010:	str	r3, [sp]
   12014:	ldr	r9, [pc, #492]	; 12208 <strspn@plt+0x11ec>
   12018:	mov	r6, r5
   1201c:	add	r7, sp, #8
   12020:	mov	r1, r0
   12024:	mov	r0, #1
   12028:	bl	10f74 <__printf_chk@plt>
   1202c:	mov	r2, #5
   12030:	ldr	r1, [pc, #468]	; 1220c <strspn@plt+0x11f0>
   12034:	mov	r0, r5
   12038:	bl	10e3c <dcgettext@plt>
   1203c:	ldr	r1, [r4]
   12040:	bl	10d7c <fputs_unlocked@plt>
   12044:	mov	r2, #5
   12048:	ldr	r1, [pc, #448]	; 12210 <strspn@plt+0x11f4>
   1204c:	mov	r0, r5
   12050:	bl	10e3c <dcgettext@plt>
   12054:	ldr	r1, [r4]
   12058:	bl	10d7c <fputs_unlocked@plt>
   1205c:	mov	r2, #5
   12060:	ldr	r1, [pc, #428]	; 12214 <strspn@plt+0x11f8>
   12064:	mov	r0, r5
   12068:	bl	10e3c <dcgettext@plt>
   1206c:	ldr	r1, [r4]
   12070:	bl	10d7c <fputs_unlocked@plt>
   12074:	mov	r2, #5
   12078:	ldr	r1, [pc, #408]	; 12218 <strspn@plt+0x11fc>
   1207c:	mov	r0, r5
   12080:	bl	10e3c <dcgettext@plt>
   12084:	ldr	r1, [r4]
   12088:	bl	10d7c <fputs_unlocked@plt>
   1208c:	mov	r2, #5
   12090:	ldr	r1, [pc, #388]	; 1221c <strspn@plt+0x1200>
   12094:	mov	r0, r5
   12098:	bl	10e3c <dcgettext@plt>
   1209c:	ldr	r1, [r4]
   120a0:	bl	10d7c <fputs_unlocked@plt>
   120a4:	mov	r2, #5
   120a8:	ldr	r1, [pc, #368]	; 12220 <strspn@plt+0x1204>
   120ac:	mov	r0, r5
   120b0:	bl	10e3c <dcgettext@plt>
   120b4:	ldr	r1, [r4]
   120b8:	bl	10d7c <fputs_unlocked@plt>
   120bc:	mov	r2, #5
   120c0:	ldr	r1, [pc, #348]	; 12224 <strspn@plt+0x1208>
   120c4:	mov	r0, r5
   120c8:	bl	10e3c <dcgettext@plt>
   120cc:	ldr	r1, [r4]
   120d0:	bl	10d7c <fputs_unlocked@plt>
   120d4:	ldr	lr, [pc, #332]	; 12228 <strspn@plt+0x120c>
   120d8:	add	ip, sp, #8
   120dc:	ldm	lr!, {r0, r1, r2, r3}
   120e0:	stmia	ip!, {r0, r1, r2, r3}
   120e4:	ldm	lr!, {r0, r1, r2, r3}
   120e8:	stmia	ip!, {r0, r1, r2, r3}
   120ec:	ldm	lr!, {r0, r1, r2, r3}
   120f0:	stmia	ip!, {r0, r1, r2, r3}
   120f4:	ldm	lr, {r0, r1}
   120f8:	stm	ip, {r0, r1}
   120fc:	ldr	r1, [r7, r6]
   12100:	add	r8, r7, r6
   12104:	cmp	r1, #0
   12108:	bne	121ac <strspn@plt+0x1190>
   1210c:	ldr	r6, [r8, #4]
   12110:	ldr	r7, [pc, #240]	; 12208 <strspn@plt+0x11ec>
   12114:	cmp	r6, #0
   12118:	mov	r2, #5
   1211c:	ldr	r1, [pc, #264]	; 1222c <strspn@plt+0x1210>
   12120:	mov	r0, #0
   12124:	moveq	r6, r7
   12128:	bl	10e3c <dcgettext@plt>
   1212c:	ldr	r3, [pc, #252]	; 12230 <strspn@plt+0x1214>
   12130:	ldr	r2, [pc, #252]	; 12234 <strspn@plt+0x1218>
   12134:	mov	r1, r0
   12138:	mov	r0, #1
   1213c:	bl	10f74 <__printf_chk@plt>
   12140:	mov	r1, #0
   12144:	mov	r0, #5
   12148:	bl	10fb0 <setlocale@plt>
   1214c:	cmp	r0, #0
   12150:	bne	121c4 <strspn@plt+0x11a8>
   12154:	mov	r2, #5
   12158:	ldr	r1, [pc, #216]	; 12238 <strspn@plt+0x121c>
   1215c:	mov	r0, #0
   12160:	bl	10e3c <dcgettext@plt>
   12164:	ldr	r3, [pc, #156]	; 12208 <strspn@plt+0x11ec>
   12168:	ldr	r2, [pc, #192]	; 12230 <strspn@plt+0x1214>
   1216c:	mov	r1, r0
   12170:	mov	r0, #1
   12174:	bl	10f74 <__printf_chk@plt>
   12178:	mov	r2, #5
   1217c:	ldr	r1, [pc, #184]	; 1223c <strspn@plt+0x1220>
   12180:	mov	r0, #0
   12184:	bl	10e3c <dcgettext@plt>
   12188:	ldr	r2, [pc, #176]	; 12240 <strspn@plt+0x1224>
   1218c:	cmp	r6, r7
   12190:	ldr	r3, [pc, #172]	; 12244 <strspn@plt+0x1228>
   12194:	moveq	r3, r2
   12198:	mov	r2, r6
   1219c:	mov	r1, r0
   121a0:	mov	r0, #1
   121a4:	bl	10f74 <__printf_chk@plt>
   121a8:	b	11ff0 <strspn@plt+0xfd4>
   121ac:	mov	r0, r9
   121b0:	bl	10da0 <strcmp@plt>
   121b4:	add	r6, r6, #8
   121b8:	cmp	r0, #0
   121bc:	bne	120fc <strspn@plt+0x10e0>
   121c0:	b	1210c <strspn@plt+0x10f0>
   121c4:	mov	r2, #3
   121c8:	ldr	r1, [pc, #120]	; 12248 <strspn@plt+0x122c>
   121cc:	bl	11004 <strncmp@plt>
   121d0:	cmp	r0, #0
   121d4:	beq	12154 <strspn@plt+0x1138>
   121d8:	mov	r2, #5
   121dc:	ldr	r1, [pc, #104]	; 1224c <strspn@plt+0x1230>
   121e0:	mov	r0, #0
   121e4:	bl	10e3c <dcgettext@plt>
   121e8:	ldr	r1, [r4]
   121ec:	bl	10d7c <fputs_unlocked@plt>
   121f0:	b	12154 <strspn@plt+0x1138>
   121f4:	muleq	r2, r4, r1
   121f8:	andeq	r7, r2, r8, asr r1
   121fc:	andeq	r5, r1, r9, lsr #6
   12200:	andeq	r5, r1, r0, asr r3
   12204:	andeq	r7, r2, ip, asr r1
   12208:	andeq	r5, r1, r5, lsr #6
   1220c:			; <UNDEFINED> instruction: 0x000153b8
   12210:	strdeq	r5, [r1], -r2
   12214:	andeq	r5, r1, sp, lsr r4
   12218:	andeq	r5, r1, r1, lsl r5
   1221c:	andeq	r5, r1, lr, lsr r5
   12220:	andeq	r5, r1, r4, ror r5
   12224:	andeq	r5, r1, r5, ror r7
   12228:	andeq	r5, r1, r0, ror #4
   1222c:	andeq	r5, r1, r5, asr #16
   12230:	andeq	r5, r1, ip, asr r8
   12234:	andeq	r5, r1, r4, lsl #17
   12238:	ldrdeq	r5, [r1], -sp
   1223c:	strdeq	r5, [r1], -r8
   12240:	strdeq	r5, [r1], -r9
   12244:	andeq	r5, r1, sl, lsr #18
   12248:	muleq	r1, r2, r8
   1224c:	muleq	r1, r6, r8
   12250:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12254:	vpush	{d8}
   12258:	mov	r4, r1
   1225c:	mov	r6, r0
   12260:	ldr	r3, [pc, #728]	; 12540 <strspn@plt+0x1524>
   12264:	sub	sp, sp, #28
   12268:	add	r7, sp, #8
   1226c:	mov	r2, r7
   12270:	mov	r1, #0
   12274:	mov	r0, r4
   12278:	bl	14744 <strspn@plt+0x3728>
   1227c:	subs	r9, r0, #0
   12280:	bne	122b8 <strspn@plt+0x129c>
   12284:	mov	r2, #5
   12288:	ldr	r1, [pc, #692]	; 12544 <strspn@plt+0x1528>
   1228c:	bl	10e3c <dcgettext@plt>
   12290:	mov	r5, r0
   12294:	mov	r0, r4
   12298:	bl	13d58 <strspn@plt+0x2d3c>
   1229c:	mov	r2, r5
   122a0:	mov	r1, r9
   122a4:	mov	r3, r0
   122a8:	mov	r0, r9
   122ac:	bl	10eb4 <error@plt>
   122b0:	mov	r0, #1
   122b4:	bl	11fb0 <strspn@plt+0xf94>
   122b8:	vldr	d8, [sp, #8]
   122bc:	vcmp.f64	d8, d8
   122c0:	vmrs	APSR_nzcv, fpscr
   122c4:	bne	12484 <strspn@plt+0x1468>
   122c8:	bl	10f14 <__ctype_b_loc@plt>
   122cc:	ldr	r0, [r0]
   122d0:	mov	r2, r4
   122d4:	ldrb	r1, [r2], #1
   122d8:	lsl	r3, r1, #1
   122dc:	ldrh	r3, [r0, r3]
   122e0:	lsr	r3, r3, #13
   122e4:	and	r3, r3, #1
   122e8:	cmp	r1, #43	; 0x2b
   122ec:	orreq	r3, r3, #1
   122f0:	cmp	r3, #0
   122f4:	bne	124d0 <strspn@plt+0x14b4>
   122f8:	str	r3, [sp, #16]
   122fc:	mov	r1, #46	; 0x2e
   12300:	mvn	r3, #-2147483648	; 0x80000000
   12304:	mov	r0, r4
   12308:	str	r3, [sp, #20]
   1230c:	bl	10f38 <strchr@plt>
   12310:	subs	r5, r0, #0
   12314:	bne	1232c <strspn@plt+0x1310>
   12318:	mov	r1, #112	; 0x70
   1231c:	mov	r0, r4
   12320:	bl	10f38 <strchr@plt>
   12324:	cmp	r0, #0
   12328:	streq	r5, [sp, #20]
   1232c:	ldr	r1, [pc, #532]	; 12548 <strspn@plt+0x152c>
   12330:	mov	r0, r4
   12334:	bl	10db8 <strcspn@plt>
   12338:	ldrb	r3, [r4, r0]
   1233c:	cmp	r3, #0
   12340:	bne	1246c <strspn@plt+0x1450>
   12344:	vldr	d7, [pc, #492]	; 12538 <strspn@plt+0x151c>
   12348:	vmul.f64	d8, d8, d7
   1234c:	vcmp.f64	d8, d7
   12350:	vmrs	APSR_nzcv, fpscr
   12354:	bne	1246c <strspn@plt+0x1450>
   12358:	mov	r0, r4
   1235c:	bl	10f2c <strlen@plt>
   12360:	cmp	r5, #0
   12364:	moveq	r8, r5
   12368:	mov	sl, r0
   1236c:	str	r0, [sp, #16]
   12370:	beq	12398 <strspn@plt+0x137c>
   12374:	ldr	r1, [pc, #464]	; 1254c <strspn@plt+0x1530>
   12378:	add	r0, r5, #1
   1237c:	bl	10db8 <strcspn@plt>
   12380:	subs	r8, r0, #0
   12384:	bge	124d8 <strspn@plt+0x14bc>
   12388:	cmp	r4, r5
   1238c:	bne	124e8 <strspn@plt+0x14cc>
   12390:	add	r9, r9, sl
   12394:	str	r9, [sp, #16]
   12398:	mov	r1, #101	; 0x65
   1239c:	mov	r0, r4
   123a0:	bl	10f38 <strchr@plt>
   123a4:	subs	r9, r0, #0
   123a8:	bne	123c0 <strspn@plt+0x13a4>
   123ac:	mov	r1, #69	; 0x45
   123b0:	mov	r0, r4
   123b4:	bl	10f38 <strchr@plt>
   123b8:	subs	r9, r0, #0
   123bc:	beq	1246c <strspn@plt+0x1450>
   123c0:	add	sl, r9, #1
   123c4:	mov	r0, sl
   123c8:	mov	r2, #10
   123cc:	mov	r1, #0
   123d0:	bl	10dac <strtol@plt>
   123d4:	cmp	r0, #-2147483646	; 0x80000002
   123d8:	movlt	sl, #-2147483647	; 0x80000001
   123dc:	blt	123f4 <strspn@plt+0x13d8>
   123e0:	mov	r0, sl
   123e4:	mov	r2, #10
   123e8:	mov	r1, #0
   123ec:	bl	10dac <strtol@plt>
   123f0:	mov	sl, r0
   123f4:	cmp	sl, #0
   123f8:	ldr	r3, [sp, #20]
   123fc:	rsblt	fp, sl, #0
   12400:	blt	12414 <strspn@plt+0x13f8>
   12404:	cmp	sl, r3
   12408:	movlt	fp, sl
   1240c:	movge	fp, r3
   12410:	rsb	fp, fp, #0
   12414:	add	fp, fp, r3
   12418:	mov	r0, r4
   1241c:	str	fp, [sp, #20]
   12420:	bl	10f2c <strlen@plt>
   12424:	ldr	r3, [sp, #16]
   12428:	sub	r4, r9, r4
   1242c:	add	r4, r4, r3
   12430:	cmp	sl, #0
   12434:	sub	r0, r4, r0
   12438:	str	r0, [sp, #16]
   1243c:	bge	12500 <strspn@plt+0x14e4>
   12440:	cmp	r5, #0
   12444:	beq	12454 <strspn@plt+0x1438>
   12448:	add	r5, r5, #1
   1244c:	cmp	r9, r5
   12450:	bne	1245c <strspn@plt+0x1440>
   12454:	add	r0, r0, #1
   12458:	str	r0, [sp, #16]
   1245c:	rsb	sl, sl, #0
   12460:	ldr	r8, [sp, #16]
   12464:	add	sl, r8, sl
   12468:	str	sl, [sp, #16]
   1246c:	ldm	r7, {r0, r1, r2, r3}
   12470:	stm	r6, {r0, r1, r2, r3}
   12474:	mov	r0, r6
   12478:	add	sp, sp, #28
   1247c:	vpop	{d8}
   12480:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12484:	mov	r2, #5
   12488:	ldr	r1, [pc, #192]	; 12550 <strspn@plt+0x1534>
   1248c:	mov	r0, #0
   12490:	bl	10e3c <dcgettext@plt>
   12494:	ldr	r1, [pc, #184]	; 12554 <strspn@plt+0x1538>
   12498:	mov	r5, r0
   1249c:	mov	r0, #0
   124a0:	bl	13d50 <strspn@plt+0x2d34>
   124a4:	mov	r1, r4
   124a8:	mov	r6, r0
   124ac:	mov	r0, #1
   124b0:	bl	13d50 <strspn@plt+0x2d34>
   124b4:	mov	r1, #0
   124b8:	mov	r3, r6
   124bc:	mov	r2, r5
   124c0:	str	r0, [sp]
   124c4:	mov	r0, r1
   124c8:	bl	10eb4 <error@plt>
   124cc:	b	122b0 <strspn@plt+0x1294>
   124d0:	mov	r4, r2
   124d4:	b	122d0 <strspn@plt+0x12b4>
   124d8:	str	r8, [sp, #20]
   124dc:	mvneq	r9, #0
   124e0:	beq	12390 <strspn@plt+0x1374>
   124e4:	b	12388 <strspn@plt+0x136c>
   124e8:	ldrb	r9, [r5, #-1]
   124ec:	sub	r9, r9, #48	; 0x30
   124f0:	cmp	r9, #9
   124f4:	movls	r9, #0
   124f8:	movhi	r9, #1
   124fc:	b	12390 <strspn@plt+0x1374>
   12500:	cmp	r8, #0
   12504:	cmpne	r5, #0
   12508:	movne	r5, #1
   1250c:	moveq	r5, #0
   12510:	cmp	fp, #0
   12514:	movne	r5, #0
   12518:	andeq	r5, r5, #1
   1251c:	cmp	r5, #0
   12520:	subne	r0, r0, #1
   12524:	strne	r0, [sp, #16]
   12528:	cmp	r8, sl
   1252c:	subls	sl, sl, r8
   12530:	subhi	sl, sl, sl
   12534:	b	12460 <strspn@plt+0x1444>
	...
   12540:	andeq	r2, r1, r8, asr r5
   12544:	andeq	r5, r1, fp, lsr #18
   12548:	andeq	r5, r1, r4, ror r9
   1254c:	andeq	r5, r1, r7, ror r9
   12550:	andeq	r5, r1, pc, asr #18
   12554:	andeq	r5, r1, r7, ror #18
   12558:	push	{r4, r5, r6, r7, lr}
   1255c:	vpush	{d8}
   12560:	mov	r4, r1
   12564:	mov	r7, r0
   12568:	sub	sp, sp, #12
   1256c:	mov	r1, sp
   12570:	bl	10e0c <strtold@plt>
   12574:	ldr	r3, [sp]
   12578:	ldrb	r3, [r3]
   1257c:	cmp	r3, #0
   12580:	vmov.f64	d8, d0
   12584:	beq	125b4 <strspn@plt+0x1598>
   12588:	bl	10f44 <__errno_location@plt>
   1258c:	add	r1, sp, #4
   12590:	ldr	r6, [r0]
   12594:	mov	r5, r0
   12598:	mov	r0, r7
   1259c:	bl	148d0 <strspn@plt+0x38b4>
   125a0:	ldm	sp, {r2, r3}
   125a4:	cmp	r2, r3
   125a8:	strcc	r3, [sp]
   125ac:	strcs	r6, [r5]
   125b0:	vmovcc.f64	d8, d0
   125b4:	cmp	r4, #0
   125b8:	vmov.f64	d0, d8
   125bc:	ldrne	r3, [sp]
   125c0:	strne	r3, [r4]
   125c4:	add	sp, sp, #12
   125c8:	vpop	{d8}
   125cc:	pop	{r4, r5, r6, r7, pc}
   125d0:	ldr	r3, [pc, #4]	; 125dc <strspn@plt+0x15c0>
   125d4:	str	r0, [r3]
   125d8:	bx	lr
   125dc:	andeq	r7, r2, ip, lsl #3
   125e0:	ldr	r3, [pc, #4]	; 125ec <strspn@plt+0x15d0>
   125e4:	strb	r0, [r3, #4]
   125e8:	bx	lr
   125ec:	andeq	r7, r2, ip, lsl #3
   125f0:	ldr	r3, [pc, #192]	; 126b8 <strspn@plt+0x169c>
   125f4:	push	{r0, r1, r4, r5, r6, lr}
   125f8:	ldr	r0, [r3]
   125fc:	bl	1497c <strspn@plt+0x3960>
   12600:	cmp	r0, #0
   12604:	beq	1269c <strspn@plt+0x1680>
   12608:	ldr	r3, [pc, #172]	; 126bc <strspn@plt+0x16a0>
   1260c:	mov	r4, r3
   12610:	ldrb	r2, [r3, #4]
   12614:	cmp	r2, #0
   12618:	beq	1262c <strspn@plt+0x1610>
   1261c:	bl	10f44 <__errno_location@plt>
   12620:	ldr	r3, [r0]
   12624:	cmp	r3, #32
   12628:	beq	1269c <strspn@plt+0x1680>
   1262c:	mov	r2, #5
   12630:	ldr	r1, [pc, #136]	; 126c0 <strspn@plt+0x16a4>
   12634:	mov	r0, #0
   12638:	bl	10e3c <dcgettext@plt>
   1263c:	ldr	r4, [r4]
   12640:	cmp	r4, #0
   12644:	mov	r5, r0
   12648:	beq	12680 <strspn@plt+0x1664>
   1264c:	bl	10f44 <__errno_location@plt>
   12650:	ldr	r6, [r0]
   12654:	mov	r0, r4
   12658:	bl	13c08 <strspn@plt+0x2bec>
   1265c:	str	r5, [sp]
   12660:	ldr	r2, [pc, #92]	; 126c4 <strspn@plt+0x16a8>
   12664:	mov	r1, r6
   12668:	mov	r3, r0
   1266c:	mov	r0, #0
   12670:	bl	10eb4 <error@plt>
   12674:	ldr	r3, [pc, #76]	; 126c8 <strspn@plt+0x16ac>
   12678:	ldr	r0, [r3]
   1267c:	bl	10de8 <_exit@plt>
   12680:	bl	10f44 <__errno_location@plt>
   12684:	mov	r3, r5
   12688:	ldr	r2, [pc, #60]	; 126cc <strspn@plt+0x16b0>
   1268c:	ldr	r1, [r0]
   12690:	mov	r0, r4
   12694:	bl	10eb4 <error@plt>
   12698:	b	12674 <strspn@plt+0x1658>
   1269c:	ldr	r3, [pc, #44]	; 126d0 <strspn@plt+0x16b4>
   126a0:	ldr	r0, [r3]
   126a4:	bl	1497c <strspn@plt+0x3960>
   126a8:	cmp	r0, #0
   126ac:	bne	12674 <strspn@plt+0x1658>
   126b0:	add	sp, sp, #8
   126b4:	pop	{r4, r5, r6, pc}
   126b8:	andeq	r7, r2, ip, asr r1
   126bc:	andeq	r7, r2, ip, lsl #3
   126c0:	andeq	r5, r1, r5, lsl r3
   126c4:	andeq	r5, r1, r5, ror fp
   126c8:	andeq	r7, r2, r4, lsl #2
   126cc:			; <UNDEFINED> instruction: 0x00015abf
   126d0:	andeq	r7, r2, r8, asr r1
   126d4:	push	{r0, r1, r2, r4, r5, lr}
   126d8:	mov	r5, r0
   126dc:	bl	10f44 <__errno_location@plt>
   126e0:	ldr	r3, [r0]
   126e4:	mov	r4, r0
   126e8:	str	r3, [sp]
   126ec:	str	r3, [sp, #4]
   126f0:	mov	r3, #0
   126f4:	str	r3, [r0]
   126f8:	mov	r0, r5
   126fc:	bl	10ddc <free@plt>
   12700:	ldr	r3, [r4]
   12704:	add	r2, sp, #8
   12708:	cmp	r3, #0
   1270c:	moveq	r3, #4
   12710:	movne	r3, #0
   12714:	add	r3, r2, r3
   12718:	ldr	r3, [r3, #-8]
   1271c:	str	r3, [r4]
   12720:	add	sp, sp, #12
   12724:	pop	{r4, r5, pc}
   12728:	push	{r4, r5, r6, lr}
   1272c:	subs	r5, r0, #0
   12730:	bne	12748 <strspn@plt+0x172c>
   12734:	ldr	r3, [pc, #124]	; 127b8 <strspn@plt+0x179c>
   12738:	ldr	r0, [pc, #124]	; 127bc <strspn@plt+0x17a0>
   1273c:	ldr	r1, [r3]
   12740:	bl	10ff8 <fputs@plt>
   12744:	bl	11010 <abort@plt>
   12748:	mov	r1, #47	; 0x2f
   1274c:	bl	10fbc <strrchr@plt>
   12750:	cmp	r0, #0
   12754:	addne	r4, r0, #1
   12758:	moveq	r4, r5
   1275c:	sub	r3, r4, r5
   12760:	cmp	r3, #6
   12764:	ble	127a4 <strspn@plt+0x1788>
   12768:	mov	r2, #7
   1276c:	ldr	r1, [pc, #76]	; 127c0 <strspn@plt+0x17a4>
   12770:	sub	r0, r4, #7
   12774:	bl	11004 <strncmp@plt>
   12778:	cmp	r0, #0
   1277c:	bne	127a4 <strspn@plt+0x1788>
   12780:	mov	r2, #3
   12784:	ldr	r1, [pc, #56]	; 127c4 <strspn@plt+0x17a8>
   12788:	mov	r0, r4
   1278c:	bl	11004 <strncmp@plt>
   12790:	cmp	r0, #0
   12794:	movne	r5, r4
   12798:	ldreq	r3, [pc, #40]	; 127c8 <strspn@plt+0x17ac>
   1279c:	addeq	r5, r4, #3
   127a0:	streq	r5, [r3]
   127a4:	ldr	r3, [pc, #32]	; 127cc <strspn@plt+0x17b0>
   127a8:	str	r5, [r3]
   127ac:	ldr	r3, [pc, #28]	; 127d0 <strspn@plt+0x17b4>
   127b0:	str	r5, [r3]
   127b4:	pop	{r4, r5, r6, pc}
   127b8:	andeq	r7, r2, r8, asr r1
   127bc:	andeq	r5, r1, ip, ror fp
   127c0:			; <UNDEFINED> instruction: 0x00015bb4
   127c4:			; <UNDEFINED> instruction: 0x00015bbc
   127c8:	andeq	r7, r2, r8, asr #2
   127cc:	muleq	r2, r4, r1
   127d0:	andeq	r7, r2, ip, asr #2
   127d4:	push	{r4, r5, r6, lr}
   127d8:	mov	r2, #48	; 0x30
   127dc:	mov	r5, r1
   127e0:	mov	r1, #0
   127e4:	mov	r4, r0
   127e8:	bl	10f68 <memset@plt>
   127ec:	cmp	r5, #10
   127f0:	bne	127f8 <strspn@plt+0x17dc>
   127f4:	bl	11010 <abort@plt>
   127f8:	str	r5, [r4]
   127fc:	mov	r0, r4
   12800:	pop	{r4, r5, r6, pc}
   12804:	push	{r4, r5, r6, lr}
   12808:	mov	r4, r0
   1280c:	mov	r5, r1
   12810:	bl	14b78 <strspn@plt+0x3b5c>
   12814:	ldrb	r3, [r0]
   12818:	bic	r3, r3, #32
   1281c:	cmp	r3, #85	; 0x55
   12820:	bne	12890 <strspn@plt+0x1874>
   12824:	ldrb	r3, [r0, #1]
   12828:	bic	r3, r3, #32
   1282c:	cmp	r3, #84	; 0x54
   12830:	bne	12868 <strspn@plt+0x184c>
   12834:	ldrb	r3, [r0, #2]
   12838:	bic	r3, r3, #32
   1283c:	cmp	r3, #70	; 0x46
   12840:	bne	12868 <strspn@plt+0x184c>
   12844:	ldrb	r3, [r0, #3]
   12848:	cmp	r3, #45	; 0x2d
   1284c:	bne	12868 <strspn@plt+0x184c>
   12850:	ldrb	r3, [r0, #4]
   12854:	cmp	r3, #56	; 0x38
   12858:	bne	12868 <strspn@plt+0x184c>
   1285c:	ldrb	r3, [r0, #5]
   12860:	cmp	r3, #0
   12864:	beq	1287c <strspn@plt+0x1860>
   12868:	ldr	r1, [pc, #144]	; 12900 <strspn@plt+0x18e4>
   1286c:	ldr	r0, [pc, #144]	; 12904 <strspn@plt+0x18e8>
   12870:	cmp	r5, #9
   12874:	movne	r0, r1
   12878:	pop	{r4, r5, r6, pc}
   1287c:	ldrb	r3, [r4]
   12880:	ldr	r1, [pc, #128]	; 12908 <strspn@plt+0x18ec>
   12884:	ldr	r0, [pc, #128]	; 1290c <strspn@plt+0x18f0>
   12888:	cmp	r3, #96	; 0x60
   1288c:	b	12874 <strspn@plt+0x1858>
   12890:	cmp	r3, #71	; 0x47
   12894:	bne	12868 <strspn@plt+0x184c>
   12898:	ldrb	r3, [r0, #1]
   1289c:	bic	r3, r3, #32
   128a0:	cmp	r3, #66	; 0x42
   128a4:	bne	12868 <strspn@plt+0x184c>
   128a8:	ldrb	r3, [r0, #2]
   128ac:	cmp	r3, #49	; 0x31
   128b0:	bne	12868 <strspn@plt+0x184c>
   128b4:	ldrb	r3, [r0, #3]
   128b8:	cmp	r3, #56	; 0x38
   128bc:	bne	12868 <strspn@plt+0x184c>
   128c0:	ldrb	r3, [r0, #4]
   128c4:	cmp	r3, #48	; 0x30
   128c8:	bne	12868 <strspn@plt+0x184c>
   128cc:	ldrb	r3, [r0, #5]
   128d0:	cmp	r3, #51	; 0x33
   128d4:	bne	12868 <strspn@plt+0x184c>
   128d8:	ldrb	r3, [r0, #6]
   128dc:	cmp	r3, #48	; 0x30
   128e0:	bne	12868 <strspn@plt+0x184c>
   128e4:	ldrb	r3, [r0, #7]
   128e8:	cmp	r3, #0
   128ec:	bne	12868 <strspn@plt+0x184c>
   128f0:	ldrb	r3, [r4]
   128f4:	ldr	r1, [pc, #20]	; 12910 <strspn@plt+0x18f4>
   128f8:	ldr	r0, [pc, #20]	; 12914 <strspn@plt+0x18f8>
   128fc:	b	12888 <strspn@plt+0x186c>
   12900:	strdeq	r5, [r1], -r2
   12904:	andeq	r5, r1, r3, lsr #24
   12908:	andeq	r5, r1, r8, lsl ip
   1290c:	andeq	r5, r1, r4, lsl ip
   12910:	andeq	r5, r1, r0, lsr #24
   12914:	andeq	r5, r1, ip, lsl ip
   12918:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1291c:	sub	sp, sp, #108	; 0x6c
   12920:	mov	r8, r0
   12924:	str	r3, [sp, #36]	; 0x24
   12928:	mov	r5, r1
   1292c:	str	r2, [sp, #44]	; 0x2c
   12930:	ldr	sl, [sp, #144]	; 0x90
   12934:	bl	10e78 <__ctype_get_mb_cur_max@plt>
   12938:	ldr	r3, [sp, #148]	; 0x94
   1293c:	mov	r7, #0
   12940:	str	r7, [sp, #48]	; 0x30
   12944:	lsr	r6, r3, #1
   12948:	and	r6, r6, #1
   1294c:	mov	r3, #1
   12950:	str	r3, [sp, #72]	; 0x48
   12954:	str	r7, [sp, #24]
   12958:	str	r7, [sp, #32]
   1295c:	str	r7, [sp, #40]	; 0x28
   12960:	str	r7, [sp, #60]	; 0x3c
   12964:	str	r0, [sp, #76]	; 0x4c
   12968:	cmp	sl, #10
   1296c:	ldrls	pc, [pc, sl, lsl #2]
   12970:	b	12bac <strspn@plt+0x1b90>
   12974:	andeq	r2, r1, r0, lsr #19
   12978:	andeq	r3, r1, r4, lsr r6
   1297c:	andeq	r2, r1, r8, ror fp
   12980:	andeq	r2, r1, r4, asr #23
   12984:	andeq	r2, r1, r4, asr fp
   12988:	andeq	r2, r1, ip, lsr #19
   1298c:	andeq	r3, r1, r4, lsl r6
   12990:			; <UNDEFINED> instruction: 0x00012bb0
   12994:	andeq	r2, r1, r4, lsr #21
   12998:	andeq	r2, r1, r4, lsr #21
   1299c:	andeq	r2, r1, r4, lsr #21
   129a0:	mov	r6, #0
   129a4:	mov	r4, #0
   129a8:	b	129d8 <strspn@plt+0x19bc>
   129ac:	cmp	r6, #0
   129b0:	bne	12bd4 <strspn@plt+0x1bb8>
   129b4:	cmp	r5, #0
   129b8:	movne	r3, #34	; 0x22
   129bc:	strbne	r3, [r8]
   129c0:	mov	r3, #1
   129c4:	str	r3, [sp, #24]
   129c8:	str	r3, [sp, #32]
   129cc:	mov	r4, #1
   129d0:	ldr	r3, [pc, #3172]	; 1363c <strspn@plt+0x2620>
   129d4:	str	r3, [sp, #40]	; 0x28
   129d8:	mov	r9, r5
   129dc:	mov	r3, #0
   129e0:	str	r7, [sp, #68]	; 0x44
   129e4:	str	r3, [sp, #28]
   129e8:	ldr	r3, [sp, #36]	; 0x24
   129ec:	cmn	r3, #1
   129f0:	bne	13580 <strspn@plt+0x2564>
   129f4:	ldr	r3, [sp, #44]	; 0x2c
   129f8:	ldr	r2, [sp, #28]
   129fc:	ldrb	r3, [r3, r2]
   12a00:	adds	r3, r3, #0
   12a04:	movne	r3, #1
   12a08:	str	r3, [sp, #52]	; 0x34
   12a0c:	ldr	r3, [sp, #52]	; 0x34
   12a10:	cmp	r3, #0
   12a14:	bne	12bfc <strspn@plt+0x1be0>
   12a18:	sub	r2, sl, #2
   12a1c:	clz	r2, r2
   12a20:	lsr	r2, r2, #5
   12a24:	and	r3, r6, r2
   12a28:	cmp	r4, #0
   12a2c:	movne	r3, #0
   12a30:	andeq	r3, r3, #1
   12a34:	cmp	r3, #0
   12a38:	bne	12dc4 <strspn@plt+0x1da8>
   12a3c:	eor	r3, r6, #1
   12a40:	ands	r2, r2, r3
   12a44:	beq	135b8 <strspn@plt+0x259c>
   12a48:	ldr	r3, [sp, #68]	; 0x44
   12a4c:	cmp	r3, #0
   12a50:	beq	135f0 <strspn@plt+0x25d4>
   12a54:	ldr	r3, [sp, #72]	; 0x48
   12a58:	cmp	r3, #0
   12a5c:	beq	13594 <strspn@plt+0x2578>
   12a60:	ldr	r3, [sp, #160]	; 0xa0
   12a64:	ldr	r2, [sp, #44]	; 0x2c
   12a68:	str	r3, [sp, #16]
   12a6c:	ldr	r3, [sp, #156]	; 0x9c
   12a70:	ldr	r1, [sp, #60]	; 0x3c
   12a74:	str	r3, [sp, #12]
   12a78:	ldr	r3, [sp, #152]	; 0x98
   12a7c:	str	r3, [sp, #8]
   12a80:	ldr	r3, [sp, #148]	; 0x94
   12a84:	str	r3, [sp, #4]
   12a88:	mov	r3, #5
   12a8c:	str	r3, [sp]
   12a90:	ldr	r3, [sp, #36]	; 0x24
   12a94:	mov	r0, r8
   12a98:	bl	12918 <strspn@plt+0x18fc>
   12a9c:	mov	r4, r0
   12aa0:	b	135e4 <strspn@plt+0x25c8>
   12aa4:	cmp	sl, #10
   12aa8:	beq	12b04 <strspn@plt+0x1ae8>
   12aac:	ldr	r4, [pc, #2956]	; 13640 <strspn@plt+0x2624>
   12ab0:	mov	r2, #5
   12ab4:	mov	r1, r4
   12ab8:	mov	r0, #0
   12abc:	bl	10e3c <dcgettext@plt>
   12ac0:	cmp	r0, r4
   12ac4:	str	r0, [sp, #156]	; 0x9c
   12ac8:	bne	12ad8 <strspn@plt+0x1abc>
   12acc:	mov	r1, sl
   12ad0:	bl	12804 <strspn@plt+0x17e8>
   12ad4:	str	r0, [sp, #156]	; 0x9c
   12ad8:	ldr	r4, [pc, #2916]	; 13644 <strspn@plt+0x2628>
   12adc:	mov	r2, #5
   12ae0:	mov	r1, r4
   12ae4:	mov	r0, #0
   12ae8:	bl	10e3c <dcgettext@plt>
   12aec:	cmp	r0, r4
   12af0:	str	r0, [sp, #160]	; 0xa0
   12af4:	bne	12b04 <strspn@plt+0x1ae8>
   12af8:	mov	r1, sl
   12afc:	bl	12804 <strspn@plt+0x17e8>
   12b00:	str	r0, [sp, #160]	; 0xa0
   12b04:	cmp	r6, #0
   12b08:	moveq	r4, r6
   12b0c:	beq	12b24 <strspn@plt+0x1b08>
   12b10:	mov	r4, #0
   12b14:	b	12b34 <strspn@plt+0x1b18>
   12b18:	cmp	r5, r4
   12b1c:	strbhi	r3, [r8, r4]
   12b20:	add	r4, r4, #1
   12b24:	ldr	r3, [sp, #156]	; 0x9c
   12b28:	ldrb	r3, [r3, r4]
   12b2c:	cmp	r3, #0
   12b30:	bne	12b18 <strspn@plt+0x1afc>
   12b34:	ldr	r0, [sp, #160]	; 0xa0
   12b38:	bl	10f2c <strlen@plt>
   12b3c:	ldr	r3, [sp, #160]	; 0xa0
   12b40:	str	r3, [sp, #40]	; 0x28
   12b44:	mov	r3, #1
   12b48:	str	r3, [sp, #24]
   12b4c:	str	r0, [sp, #32]
   12b50:	b	129d8 <strspn@plt+0x19bc>
   12b54:	mov	r3, #1
   12b58:	cmp	r6, #0
   12b5c:	streq	r3, [sp, #24]
   12b60:	beq	12b80 <strspn@plt+0x1b64>
   12b64:	str	r3, [sp, #32]
   12b68:	ldr	r3, [pc, #2772]	; 13644 <strspn@plt+0x2628>
   12b6c:	mov	r4, #0
   12b70:	str	r3, [sp, #40]	; 0x28
   12b74:	b	12ba4 <strspn@plt+0x1b88>
   12b78:	cmp	r6, #0
   12b7c:	bne	12bec <strspn@plt+0x1bd0>
   12b80:	cmp	r5, #0
   12b84:	movne	r3, #39	; 0x27
   12b88:	strbne	r3, [r8]
   12b8c:	mov	r3, #1
   12b90:	str	r3, [sp, #32]
   12b94:	mov	r6, #0
   12b98:	ldr	r3, [pc, #2724]	; 13644 <strspn@plt+0x2628>
   12b9c:	mov	r4, #1
   12ba0:	str	r3, [sp, #40]	; 0x28
   12ba4:	mov	sl, #2
   12ba8:	b	129d8 <strspn@plt+0x19bc>
   12bac:	bl	11010 <abort@plt>
   12bb0:	mov	r6, #0
   12bb4:	mov	r3, #1
   12bb8:	str	r3, [sp, #24]
   12bbc:	mov	r4, r6
   12bc0:	b	129d8 <strspn@plt+0x19bc>
   12bc4:	mov	r6, #1
   12bc8:	str	r6, [sp, #24]
   12bcc:	str	r6, [sp, #32]
   12bd0:	b	12b68 <strspn@plt+0x1b4c>
   12bd4:	mov	r3, #1
   12bd8:	str	r3, [sp, #32]
   12bdc:	ldr	r3, [pc, #2648]	; 1363c <strspn@plt+0x2620>
   12be0:	str	r6, [sp, #24]
   12be4:	str	r3, [sp, #40]	; 0x28
   12be8:	b	129a4 <strspn@plt+0x1988>
   12bec:	mov	r3, #1
   12bf0:	str	r3, [sp, #32]
   12bf4:	ldr	r3, [pc, #2632]	; 13644 <strspn@plt+0x2628>
   12bf8:	b	12be4 <strspn@plt+0x1bc8>
   12bfc:	ldr	r3, [sp, #32]
   12c00:	ldr	fp, [sp, #24]
   12c04:	cmp	sl, #2
   12c08:	moveq	fp, #0
   12c0c:	andne	fp, fp, #1
   12c10:	adds	r5, r3, #0
   12c14:	movne	r5, #1
   12c18:	ands	r3, r5, fp
   12c1c:	str	r3, [sp, #64]	; 0x40
   12c20:	beq	12cf0 <strspn@plt+0x1cd4>
   12c24:	ldr	r2, [sp, #32]
   12c28:	ldr	r3, [sp, #28]
   12c2c:	add	r7, r3, r2
   12c30:	mov	r3, r2
   12c34:	ldr	r2, [sp, #36]	; 0x24
   12c38:	cmp	r3, #1
   12c3c:	movls	r3, #0
   12c40:	movhi	r3, #1
   12c44:	cmn	r2, #1
   12c48:	movne	r3, #0
   12c4c:	cmp	r3, #0
   12c50:	beq	12c60 <strspn@plt+0x1c44>
   12c54:	ldr	r0, [sp, #44]	; 0x2c
   12c58:	bl	10f2c <strlen@plt>
   12c5c:	str	r0, [sp, #36]	; 0x24
   12c60:	ldr	r3, [sp, #36]	; 0x24
   12c64:	cmp	r3, r7
   12c68:	bcc	12ce8 <strspn@plt+0x1ccc>
   12c6c:	ldr	r3, [sp, #44]	; 0x2c
   12c70:	ldr	r0, [sp, #28]
   12c74:	ldr	r2, [sp, #32]
   12c78:	ldr	r1, [sp, #40]	; 0x28
   12c7c:	add	r0, r3, r0
   12c80:	bl	10e24 <memcmp@plt>
   12c84:	cmp	r0, #0
   12c88:	bne	12ce8 <strspn@plt+0x1ccc>
   12c8c:	cmp	r6, #0
   12c90:	beq	12cf0 <strspn@plt+0x1cd4>
   12c94:	str	r6, [sp, #24]
   12c98:	ldr	r3, [sp, #24]
   12c9c:	ldr	r2, [sp, #44]	; 0x2c
   12ca0:	cmp	sl, #2
   12ca4:	movne	r3, #0
   12ca8:	andeq	r3, r3, #1
   12cac:	cmp	r3, #0
   12cb0:	ldr	r3, [sp, #160]	; 0xa0
   12cb4:	movne	sl, #4
   12cb8:	str	r3, [sp, #16]
   12cbc:	ldr	r3, [sp, #156]	; 0x9c
   12cc0:	str	sl, [sp]
   12cc4:	str	r3, [sp, #12]
   12cc8:	mov	r3, #0
   12ccc:	str	r3, [sp, #8]
   12cd0:	ldr	r3, [sp, #148]	; 0x94
   12cd4:	mov	r1, r9
   12cd8:	bic	r3, r3, #2
   12cdc:	str	r3, [sp, #4]
   12ce0:	ldr	r3, [sp, #36]	; 0x24
   12ce4:	b	12a94 <strspn@plt+0x1a78>
   12ce8:	mov	r3, #0
   12cec:	str	r3, [sp, #64]	; 0x40
   12cf0:	ldr	r2, [sp, #28]
   12cf4:	ldr	r3, [sp, #44]	; 0x2c
   12cf8:	add	r3, r3, r2
   12cfc:	str	r3, [sp, #80]	; 0x50
   12d00:	ldr	r3, [sp, #44]	; 0x2c
   12d04:	ldrb	r7, [r3, r2]
   12d08:	cmp	r7, #58	; 0x3a
   12d0c:	bhi	12e74 <strspn@plt+0x1e58>
   12d10:	cmp	r7, #43	; 0x2b
   12d14:	bcs	12ec8 <strspn@plt+0x1eac>
   12d18:	cmp	r7, #32
   12d1c:	beq	12f20 <strspn@plt+0x1f04>
   12d20:	bhi	12dcc <strspn@plt+0x1db0>
   12d24:	cmp	r7, #9
   12d28:	beq	131d4 <strspn@plt+0x21b8>
   12d2c:	bhi	12d90 <strspn@plt+0x1d74>
   12d30:	cmp	r7, #7
   12d34:	beq	13280 <strspn@plt+0x2264>
   12d38:	bhi	12f3c <strspn@plt+0x1f20>
   12d3c:	cmp	r7, #0
   12d40:	beq	12f58 <strspn@plt+0x1f3c>
   12d44:	ldr	r3, [sp, #76]	; 0x4c
   12d48:	cmp	r3, #1
   12d4c:	bne	132c4 <strspn@plt+0x22a8>
   12d50:	bl	10f14 <__ctype_b_loc@plt>
   12d54:	sxth	r3, r7
   12d58:	lsl	r3, r3, #1
   12d5c:	ldr	r2, [r0]
   12d60:	ldrh	r5, [r2, r3]
   12d64:	ldr	r3, [sp, #76]	; 0x4c
   12d68:	str	r3, [sp, #56]	; 0x38
   12d6c:	lsr	r5, r5, #14
   12d70:	and	r5, r5, #1
   12d74:	ldr	r3, [sp, #24]
   12d78:	eor	fp, r5, #1
   12d7c:	and	fp, fp, r3
   12d80:	ands	fp, fp, #255	; 0xff
   12d84:	beq	1310c <strspn@plt+0x20f0>
   12d88:	mov	r5, #0
   12d8c:	b	13370 <strspn@plt+0x2354>
   12d90:	cmp	r7, #11
   12d94:	beq	131dc <strspn@plt+0x21c0>
   12d98:	bcc	13278 <strspn@plt+0x225c>
   12d9c:	cmp	r7, #12
   12da0:	beq	13288 <strspn@plt+0x226c>
   12da4:	cmp	r7, #13
   12da8:	moveq	r3, #114	; 0x72
   12dac:	bne	12d44 <strspn@plt+0x1d28>
   12db0:	cmp	sl, #2
   12db4:	movne	r2, #0
   12db8:	andeq	r2, r6, #1
   12dbc:	cmp	r2, #0
   12dc0:	beq	12f40 <strspn@plt+0x1f24>
   12dc4:	mov	sl, #2
   12dc8:	b	12c98 <strspn@plt+0x1c7c>
   12dcc:	cmp	r7, #37	; 0x25
   12dd0:	beq	12ec8 <strspn@plt+0x1eac>
   12dd4:	bhi	12de8 <strspn@plt+0x1dcc>
   12dd8:	cmp	r7, #35	; 0x23
   12ddc:	beq	12f14 <strspn@plt+0x1ef8>
   12de0:	mov	r5, #0
   12de4:	b	12f24 <strspn@plt+0x1f08>
   12de8:	cmp	r7, #39	; 0x27
   12dec:	bne	12de0 <strspn@plt+0x1dc4>
   12df0:	cmp	sl, #2
   12df4:	ldrne	r5, [sp, #52]	; 0x34
   12df8:	movne	r3, r5
   12dfc:	strne	r3, [sp, #68]	; 0x44
   12e00:	bne	12ecc <strspn@plt+0x1eb0>
   12e04:	cmp	r6, #0
   12e08:	bne	12c98 <strspn@plt+0x1c7c>
   12e0c:	ldr	r2, [sp, #60]	; 0x3c
   12e10:	adds	r3, r9, #0
   12e14:	movne	r3, #1
   12e18:	cmp	r2, #0
   12e1c:	movne	r3, #0
   12e20:	cmp	r3, #0
   12e24:	strne	r9, [sp, #60]	; 0x3c
   12e28:	movne	r9, #0
   12e2c:	bne	12e3c <strspn@plt+0x1e20>
   12e30:	cmp	r9, r4
   12e34:	movhi	r3, #39	; 0x27
   12e38:	strbhi	r3, [r8, r4]
   12e3c:	add	r3, r4, #1
   12e40:	cmp	r3, r9
   12e44:	movcc	r2, #92	; 0x5c
   12e48:	strbcc	r2, [r8, r3]
   12e4c:	add	r3, r4, #2
   12e50:	cmp	r3, r9
   12e54:	ldr	r5, [sp, #52]	; 0x34
   12e58:	movcc	r2, #39	; 0x27
   12e5c:	strbcc	r2, [r8, r3]
   12e60:	add	r4, r4, #3
   12e64:	mov	fp, r6
   12e68:	str	r5, [sp, #68]	; 0x44
   12e6c:	str	r6, [sp, #48]	; 0x30
   12e70:	b	1310c <strspn@plt+0x20f0>
   12e74:	cmp	r7, #94	; 0x5e
   12e78:	beq	12de0 <strspn@plt+0x1dc4>
   12e7c:	bhi	12ed4 <strspn@plt+0x1eb8>
   12e80:	cmp	r7, #90	; 0x5a
   12e84:	bhi	12ebc <strspn@plt+0x1ea0>
   12e88:	cmp	r7, #65	; 0x41
   12e8c:	bcs	12ec8 <strspn@plt+0x1eac>
   12e90:	cmp	r7, #62	; 0x3e
   12e94:	bls	12de0 <strspn@plt+0x1dc4>
   12e98:	cmp	r7, #63	; 0x3f
   12e9c:	bne	12d44 <strspn@plt+0x1d28>
   12ea0:	cmp	sl, #2
   12ea4:	beq	13048 <strspn@plt+0x202c>
   12ea8:	cmp	sl, #5
   12eac:	beq	13058 <strspn@plt+0x203c>
   12eb0:	mov	fp, #0
   12eb4:	mov	r5, fp
   12eb8:	b	1310c <strspn@plt+0x20f0>
   12ebc:	cmp	r7, #92	; 0x5c
   12ec0:	beq	131e4 <strspn@plt+0x21c8>
   12ec4:	bls	12de0 <strspn@plt+0x1dc4>
   12ec8:	ldr	r5, [sp, #52]	; 0x34
   12ecc:	mov	fp, #0
   12ed0:	b	1310c <strspn@plt+0x20f0>
   12ed4:	cmp	r7, #122	; 0x7a
   12ed8:	bhi	12ef8 <strspn@plt+0x1edc>
   12edc:	cmp	r7, #97	; 0x61
   12ee0:	bcs	12ec8 <strspn@plt+0x1eac>
   12ee4:	cmp	r7, #95	; 0x5f
   12ee8:	beq	12ec8 <strspn@plt+0x1eac>
   12eec:	cmp	r7, #96	; 0x60
   12ef0:	bne	12d44 <strspn@plt+0x1d28>
   12ef4:	b	12de0 <strspn@plt+0x1dc4>
   12ef8:	cmp	r7, #124	; 0x7c
   12efc:	beq	12de0 <strspn@plt+0x1dc4>
   12f00:	bcc	13290 <strspn@plt+0x2274>
   12f04:	cmp	r7, #125	; 0x7d
   12f08:	beq	13290 <strspn@plt+0x2274>
   12f0c:	cmp	r7, #126	; 0x7e
   12f10:	bne	12d44 <strspn@plt+0x1d28>
   12f14:	ldr	r3, [sp, #28]
   12f18:	cmp	r3, #0
   12f1c:	bne	13050 <strspn@plt+0x2034>
   12f20:	ldr	r5, [sp, #52]	; 0x34
   12f24:	cmp	sl, #2
   12f28:	movne	fp, #0
   12f2c:	andeq	fp, r6, #1
   12f30:	cmp	fp, #0
   12f34:	beq	1310c <strspn@plt+0x20f0>
   12f38:	b	12dc4 <strspn@plt+0x1da8>
   12f3c:	mov	r3, #98	; 0x62
   12f40:	ldr	r2, [sp, #24]
   12f44:	cmp	r2, #0
   12f48:	beq	13050 <strspn@plt+0x2034>
   12f4c:	mov	r7, r3
   12f50:	mov	r5, #0
   12f54:	b	13164 <strspn@plt+0x2148>
   12f58:	ldr	r3, [sp, #24]
   12f5c:	cmp	r3, #0
   12f60:	beq	1302c <strspn@plt+0x2010>
   12f64:	cmp	r6, #0
   12f68:	bne	12c94 <strspn@plt+0x1c78>
   12f6c:	ldr	r3, [sp, #48]	; 0x30
   12f70:	eor	r2, r3, #1
   12f74:	cmp	sl, #2
   12f78:	movne	r2, #0
   12f7c:	andeq	r2, r2, #1
   12f80:	cmp	r2, #0
   12f84:	moveq	r3, r4
   12f88:	beq	12fc0 <strspn@plt+0x1fa4>
   12f8c:	cmp	r9, r4
   12f90:	movhi	r3, #39	; 0x27
   12f94:	strbhi	r3, [r8, r4]
   12f98:	add	r3, r4, #1
   12f9c:	cmp	r9, r3
   12fa0:	movhi	r1, #36	; 0x24
   12fa4:	strbhi	r1, [r8, r3]
   12fa8:	add	r3, r4, #2
   12fac:	cmp	r9, r3
   12fb0:	movhi	r1, #39	; 0x27
   12fb4:	strbhi	r1, [r8, r3]
   12fb8:	add	r3, r4, #3
   12fbc:	str	r2, [sp, #48]	; 0x30
   12fc0:	cmp	r9, r3
   12fc4:	movhi	r2, #92	; 0x5c
   12fc8:	strbhi	r2, [r8, r3]
   12fcc:	cmp	fp, #0
   12fd0:	add	r4, r3, #1
   12fd4:	beq	13564 <strspn@plt+0x2548>
   12fd8:	ldr	r2, [sp, #28]
   12fdc:	ldr	r1, [sp, #36]	; 0x24
   12fe0:	add	r2, r2, #1
   12fe4:	cmp	r1, r2
   12fe8:	bls	13024 <strspn@plt+0x2008>
   12fec:	ldr	r1, [sp, #44]	; 0x2c
   12ff0:	mov	r7, #48	; 0x30
   12ff4:	ldrb	r2, [r1, r2]
   12ff8:	sub	r2, r2, #48	; 0x30
   12ffc:	cmp	r2, #9
   13000:	movhi	r5, r6
   13004:	bhi	1310c <strspn@plt+0x20f0>
   13008:	cmp	r9, r4
   1300c:	add	r2, r3, #2
   13010:	strbhi	r7, [r8, r4]
   13014:	cmp	r9, r2
   13018:	add	r4, r3, #3
   1301c:	movhi	r1, #48	; 0x30
   13020:	strbhi	r1, [r8, r2]
   13024:	mov	r5, r6
   13028:	b	1356c <strspn@plt+0x2550>
   1302c:	ldr	r3, [sp, #148]	; 0x94
   13030:	tst	r3, #1
   13034:	ldreq	r5, [sp, #24]
   13038:	beq	13578 <strspn@plt+0x255c>
   1303c:	ldr	r3, [sp, #28]
   13040:	add	r3, r3, #1
   13044:	b	129e4 <strspn@plt+0x19c8>
   13048:	cmp	r6, #0
   1304c:	bne	12c98 <strspn@plt+0x1c7c>
   13050:	mov	r5, #0
   13054:	b	12ecc <strspn@plt+0x1eb0>
   13058:	ldr	r3, [sp, #148]	; 0x94
   1305c:	tst	r3, #4
   13060:	beq	13050 <strspn@plt+0x2034>
   13064:	ldr	r3, [sp, #28]
   13068:	add	r2, r3, #2
   1306c:	ldr	r3, [sp, #36]	; 0x24
   13070:	cmp	r3, r2
   13074:	bls	13050 <strspn@plt+0x2034>
   13078:	ldr	r3, [sp, #44]	; 0x2c
   1307c:	ldr	r1, [sp, #28]
   13080:	add	r3, r3, r1
   13084:	ldrb	r0, [r3, #1]
   13088:	cmp	r0, #63	; 0x3f
   1308c:	bne	13050 <strspn@plt+0x2034>
   13090:	ldr	r3, [sp, #44]	; 0x2c
   13094:	ldrb	r1, [r3, r2]
   13098:	sub	r3, r1, #33	; 0x21
   1309c:	uxtb	r3, r3
   130a0:	cmp	r3, #29
   130a4:	bhi	13574 <strspn@plt+0x2558>
   130a8:	mov	ip, #1
   130ac:	ldr	r5, [pc, #1428]	; 13648 <strspn@plt+0x262c>
   130b0:	ands	r5, r5, ip, lsl r3
   130b4:	beq	12ecc <strspn@plt+0x1eb0>
   130b8:	cmp	r6, #0
   130bc:	bne	12c98 <strspn@plt+0x1c7c>
   130c0:	add	r3, r4, #1
   130c4:	cmp	r9, r4
   130c8:	strbhi	r0, [r8, r4]
   130cc:	cmp	r9, r3
   130d0:	movhi	r0, #34	; 0x22
   130d4:	strbhi	r0, [r8, r3]
   130d8:	add	r3, r4, #2
   130dc:	cmp	r9, r3
   130e0:	movhi	r0, #34	; 0x22
   130e4:	strbhi	r0, [r8, r3]
   130e8:	add	r3, r4, #3
   130ec:	cmp	r9, r3
   130f0:	add	r4, r4, #4
   130f4:	mov	r5, r6
   130f8:	mov	fp, r6
   130fc:	mov	r7, r1
   13100:	movhi	r0, #63	; 0x3f
   13104:	strbhi	r0, [r8, r3]
   13108:	str	r2, [sp, #28]
   1310c:	ldr	r3, [sp, #24]
   13110:	eor	r3, r3, #1
   13114:	cmp	sl, #2
   13118:	orreq	r3, r3, #1
   1311c:	eor	r3, r3, #1
   13120:	orr	r3, r6, r3
   13124:	tst	r3, #255	; 0xff
   13128:	beq	13158 <strspn@plt+0x213c>
   1312c:	ldr	r3, [sp, #152]	; 0x98
   13130:	cmp	r3, #0
   13134:	beq	13158 <strspn@plt+0x213c>
   13138:	lsr	r2, r7, #5
   1313c:	ldr	r1, [sp, #152]	; 0x98
   13140:	uxtb	r2, r2
   13144:	and	r3, r7, #31
   13148:	ldr	r2, [r1, r2, lsl #2]
   1314c:	lsr	r3, r2, r3
   13150:	tst	r3, #1
   13154:	bne	13164 <strspn@plt+0x2148>
   13158:	ldr	r3, [sp, #64]	; 0x40
   1315c:	cmp	r3, #0
   13160:	beq	131fc <strspn@plt+0x21e0>
   13164:	cmp	r6, #0
   13168:	bne	12c98 <strspn@plt+0x1c7c>
   1316c:	ldr	r3, [sp, #48]	; 0x30
   13170:	eor	r3, r3, #1
   13174:	cmp	sl, #2
   13178:	movne	r3, #0
   1317c:	andeq	r3, r3, #1
   13180:	cmp	r3, #0
   13184:	beq	131bc <strspn@plt+0x21a0>
   13188:	cmp	r9, r4
   1318c:	movhi	r2, #39	; 0x27
   13190:	strbhi	r2, [r8, r4]
   13194:	add	r2, r4, #1
   13198:	cmp	r9, r2
   1319c:	movhi	r1, #36	; 0x24
   131a0:	strbhi	r1, [r8, r2]
   131a4:	add	r2, r4, #2
   131a8:	cmp	r9, r2
   131ac:	add	r4, r4, #3
   131b0:	movhi	r1, #39	; 0x27
   131b4:	strbhi	r1, [r8, r2]
   131b8:	str	r3, [sp, #48]	; 0x30
   131bc:	cmp	r9, r4
   131c0:	movhi	r3, #92	; 0x5c
   131c4:	strbhi	r3, [r8, r4]
   131c8:	ldr	fp, [sp, #52]	; 0x34
   131cc:	add	r4, r4, #1
   131d0:	b	131fc <strspn@plt+0x21e0>
   131d4:	mov	r3, #116	; 0x74
   131d8:	b	12db0 <strspn@plt+0x1d94>
   131dc:	mov	r3, #118	; 0x76
   131e0:	b	12f40 <strspn@plt+0x1f24>
   131e4:	cmp	sl, #2
   131e8:	bne	13258 <strspn@plt+0x223c>
   131ec:	cmp	r6, #0
   131f0:	bne	12c98 <strspn@plt+0x1c7c>
   131f4:	mov	r5, r6
   131f8:	mov	fp, r6
   131fc:	ldr	r3, [sp, #48]	; 0x30
   13200:	eor	fp, fp, #1
   13204:	and	fp, fp, r3
   13208:	tst	fp, #255	; 0xff
   1320c:	beq	13238 <strspn@plt+0x221c>
   13210:	cmp	r9, r4
   13214:	movhi	r3, #39	; 0x27
   13218:	strbhi	r3, [r8, r4]
   1321c:	add	r3, r4, #1
   13220:	cmp	r9, r3
   13224:	movhi	r2, #39	; 0x27
   13228:	add	r4, r4, #2
   1322c:	strbhi	r2, [r8, r3]
   13230:	mov	r3, #0
   13234:	str	r3, [sp, #48]	; 0x30
   13238:	cmp	r9, r4
   1323c:	strbhi	r7, [r8, r4]
   13240:	ldr	r3, [sp, #72]	; 0x48
   13244:	cmp	r5, #0
   13248:	moveq	r3, #0
   1324c:	add	r4, r4, #1
   13250:	str	r3, [sp, #72]	; 0x48
   13254:	b	1303c <strspn@plt+0x2020>
   13258:	ldr	r3, [sp, #24]
   1325c:	and	r3, r3, r6
   13260:	tst	r5, r3
   13264:	moveq	r3, r7
   13268:	beq	12db0 <strspn@plt+0x1d94>
   1326c:	mov	fp, #0
   13270:	mov	r5, fp
   13274:	b	131fc <strspn@plt+0x21e0>
   13278:	mov	r3, #110	; 0x6e
   1327c:	b	12db0 <strspn@plt+0x1d94>
   13280:	mov	r3, #97	; 0x61
   13284:	b	12f40 <strspn@plt+0x1f24>
   13288:	mov	r3, #102	; 0x66
   1328c:	b	12f40 <strspn@plt+0x1f24>
   13290:	ldr	r3, [sp, #36]	; 0x24
   13294:	cmn	r3, #1
   13298:	bne	132b8 <strspn@plt+0x229c>
   1329c:	ldr	r3, [sp, #44]	; 0x2c
   132a0:	ldrb	r3, [r3, #1]
   132a4:	adds	r3, r3, #0
   132a8:	movne	r3, #1
   132ac:	cmp	r3, #0
   132b0:	bne	13050 <strspn@plt+0x2034>
   132b4:	b	12f14 <strspn@plt+0x1ef8>
   132b8:	ldr	r3, [sp, #36]	; 0x24
   132bc:	subs	r3, r3, #1
   132c0:	b	132a8 <strspn@plt+0x228c>
   132c4:	mov	r3, #0
   132c8:	str	r3, [sp, #96]	; 0x60
   132cc:	str	r3, [sp, #100]	; 0x64
   132d0:	ldr	r3, [sp, #36]	; 0x24
   132d4:	cmn	r3, #1
   132d8:	bne	132e8 <strspn@plt+0x22cc>
   132dc:	ldr	r0, [sp, #44]	; 0x2c
   132e0:	bl	10f2c <strlen@plt>
   132e4:	str	r0, [sp, #36]	; 0x24
   132e8:	ldr	r5, [sp, #52]	; 0x34
   132ec:	mov	r3, #0
   132f0:	str	r3, [sp, #56]	; 0x38
   132f4:	ldr	r3, [sp, #28]
   132f8:	ldr	r2, [sp, #56]	; 0x38
   132fc:	ldr	r1, [sp, #36]	; 0x24
   13300:	add	r2, r3, r2
   13304:	ldr	r3, [sp, #44]	; 0x2c
   13308:	add	r0, sp, #92	; 0x5c
   1330c:	add	fp, r3, r2
   13310:	sub	r2, r1, r2
   13314:	add	r3, sp, #96	; 0x60
   13318:	mov	r1, fp
   1331c:	bl	14bac <strspn@plt+0x3b90>
   13320:	subs	r2, r0, #0
   13324:	beq	13364 <strspn@plt+0x2348>
   13328:	cmn	r2, #1
   1332c:	beq	1353c <strspn@plt+0x2520>
   13330:	cmn	r2, #2
   13334:	bne	134ac <strspn@plt+0x2490>
   13338:	ldr	r2, [sp, #56]	; 0x38
   1333c:	ldr	r3, [sp, #28]
   13340:	add	r3, r3, r2
   13344:	ldr	r2, [sp, #36]	; 0x24
   13348:	cmp	r2, r3
   1334c:	bls	1353c <strspn@plt+0x2520>
   13350:	ldr	r3, [sp, #80]	; 0x50
   13354:	ldr	r2, [sp, #56]	; 0x38
   13358:	ldrb	r5, [r3, r2]
   1335c:	cmp	r5, #0
   13360:	bne	1349c <strspn@plt+0x2480>
   13364:	ldr	r3, [sp, #56]	; 0x38
   13368:	cmp	r3, #1
   1336c:	bls	12d74 <strspn@plt+0x1d58>
   13370:	ldr	r2, [sp, #56]	; 0x38
   13374:	ldr	r3, [sp, #28]
   13378:	mov	fp, #0
   1337c:	add	r3, r3, r2
   13380:	ldr	r2, [sp, #24]
   13384:	str	r3, [sp, #52]	; 0x34
   13388:	eor	r3, r5, #1
   1338c:	and	r3, r3, r2
   13390:	mov	ip, #92	; 0x5c
   13394:	uxtb	r3, r3
   13398:	mov	r2, #39	; 0x27
   1339c:	cmp	r3, #0
   133a0:	beq	13544 <strspn@plt+0x2528>
   133a4:	cmp	r6, #0
   133a8:	bne	12c94 <strspn@plt+0x1c78>
   133ac:	ldr	r1, [sp, #48]	; 0x30
   133b0:	eor	r1, r1, #1
   133b4:	cmp	sl, #2
   133b8:	movne	r1, #0
   133bc:	andeq	r1, r1, #1
   133c0:	cmp	r1, #0
   133c4:	beq	133f4 <strspn@plt+0x23d8>
   133c8:	add	r0, r4, #1
   133cc:	cmp	r9, r4
   133d0:	strbhi	r2, [r8, r4]
   133d4:	cmp	r9, r0
   133d8:	movhi	lr, #36	; 0x24
   133dc:	strbhi	lr, [r8, r0]
   133e0:	add	r0, r4, #2
   133e4:	add	r4, r4, #3
   133e8:	cmp	r9, r0
   133ec:	strbhi	r2, [r8, r0]
   133f0:	str	r1, [sp, #48]	; 0x30
   133f4:	add	r0, r4, #1
   133f8:	cmp	r9, r4
   133fc:	strbhi	ip, [r8, r4]
   13400:	cmp	r9, r0
   13404:	lsrhi	r1, r7, #6
   13408:	addhi	r1, r1, #48	; 0x30
   1340c:	strbhi	r1, [r8, r0]
   13410:	add	r0, r4, #2
   13414:	cmp	r9, r0
   13418:	lsrhi	r1, r7, #3
   1341c:	and	r7, r7, #7
   13420:	andhi	r1, r1, #7
   13424:	add	r4, r4, #3
   13428:	add	r7, r7, #48	; 0x30
   1342c:	mov	fp, r3
   13430:	addhi	r1, r1, #48	; 0x30
   13434:	strbhi	r1, [r8, r0]
   13438:	ldr	r1, [sp, #28]
   1343c:	ldr	r0, [sp, #52]	; 0x34
   13440:	add	r1, r1, #1
   13444:	cmp	r0, r1
   13448:	bls	131fc <strspn@plt+0x21e0>
   1344c:	ldr	lr, [sp, #48]	; 0x30
   13450:	eor	r0, fp, #1
   13454:	and	r0, r0, lr
   13458:	tst	r0, #255	; 0xff
   1345c:	beq	13480 <strspn@plt+0x2464>
   13460:	add	r0, r4, #1
   13464:	cmp	r9, r4
   13468:	strbhi	r2, [r8, r4]
   1346c:	cmp	r9, r0
   13470:	add	r4, r4, #2
   13474:	strbhi	r2, [r8, r0]
   13478:	mov	r0, #0
   1347c:	str	r0, [sp, #48]	; 0x30
   13480:	ldr	r0, [sp, #44]	; 0x2c
   13484:	cmp	r9, r4
   13488:	strbhi	r7, [r8, r4]
   1348c:	str	r1, [sp, #28]
   13490:	add	r4, r4, #1
   13494:	ldrb	r7, [r0, r1]
   13498:	b	1339c <strspn@plt+0x2380>
   1349c:	ldr	r3, [sp, #56]	; 0x38
   134a0:	add	r3, r3, #1
   134a4:	str	r3, [sp, #56]	; 0x38
   134a8:	b	13338 <strspn@plt+0x231c>
   134ac:	cmp	sl, #2
   134b0:	movne	r3, #0
   134b4:	andeq	r3, r6, #1
   134b8:	cmp	r3, #0
   134bc:	movne	r1, #1
   134c0:	bne	1351c <strspn@plt+0x2500>
   134c4:	ldr	r0, [sp, #92]	; 0x5c
   134c8:	str	r2, [sp, #84]	; 0x54
   134cc:	bl	10e60 <iswprint@plt>
   134d0:	ldr	r3, [sp, #56]	; 0x38
   134d4:	ldr	r2, [sp, #84]	; 0x54
   134d8:	add	r3, r3, r2
   134dc:	str	r3, [sp, #56]	; 0x38
   134e0:	cmp	r0, #0
   134e4:	add	r0, sp, #96	; 0x60
   134e8:	moveq	r5, #0
   134ec:	bl	10e00 <mbsinit@plt>
   134f0:	cmp	r0, #0
   134f4:	beq	132f4 <strspn@plt+0x22d8>
   134f8:	b	13364 <strspn@plt+0x2348>
   134fc:	ldrb	r3, [fp, r1]
   13500:	cmp	r3, #94	; 0x5e
   13504:	beq	12dc4 <strspn@plt+0x1da8>
   13508:	bhi	13528 <strspn@plt+0x250c>
   1350c:	sub	r3, r3, #91	; 0x5b
   13510:	cmp	r3, #1
   13514:	bls	12dc4 <strspn@plt+0x1da8>
   13518:	add	r1, r1, #1
   1351c:	cmp	r1, r2
   13520:	bne	134fc <strspn@plt+0x24e0>
   13524:	b	134c4 <strspn@plt+0x24a8>
   13528:	cmp	r3, #96	; 0x60
   1352c:	beq	12dc4 <strspn@plt+0x1da8>
   13530:	cmp	r3, #124	; 0x7c
   13534:	bne	13518 <strspn@plt+0x24fc>
   13538:	b	12dc4 <strspn@plt+0x1da8>
   1353c:	mov	r5, #0
   13540:	b	13364 <strspn@plt+0x2348>
   13544:	ldr	r1, [sp, #64]	; 0x40
   13548:	cmp	r1, #0
   1354c:	beq	13438 <strspn@plt+0x241c>
   13550:	cmp	r9, r4
   13554:	strbhi	ip, [r8, r4]
   13558:	str	r3, [sp, #64]	; 0x40
   1355c:	add	r4, r4, #1
   13560:	b	13438 <strspn@plt+0x241c>
   13564:	mov	r5, fp
   13568:	ldr	fp, [sp, #24]
   1356c:	mov	r7, #48	; 0x30
   13570:	b	1310c <strspn@plt+0x20f0>
   13574:	mov	r5, #0
   13578:	mov	fp, r5
   1357c:	b	1310c <strspn@plt+0x20f0>
   13580:	ldr	r3, [sp, #36]	; 0x24
   13584:	ldr	r2, [sp, #28]
   13588:	subs	r3, r3, r2
   1358c:	movne	r3, #1
   13590:	b	12a08 <strspn@plt+0x19ec>
   13594:	ldr	r3, [sp, #60]	; 0x3c
   13598:	clz	r7, r9
   1359c:	cmp	r3, #0
   135a0:	lsr	r7, r7, #5
   135a4:	moveq	r7, #0
   135a8:	cmp	r7, #0
   135ac:	mov	r5, r3
   135b0:	bne	12968 <strspn@plt+0x194c>
   135b4:	ldr	r3, [sp, #68]	; 0x44
   135b8:	ldr	r2, [sp, #40]	; 0x28
   135bc:	cmp	r2, #0
   135c0:	moveq	r3, #0
   135c4:	andne	r3, r3, #1
   135c8:	cmp	r3, #0
   135cc:	movne	r3, r2
   135d0:	subne	r2, r3, #1
   135d4:	bne	13604 <strspn@plt+0x25e8>
   135d8:	cmp	r9, r4
   135dc:	movhi	r3, #0
   135e0:	strbhi	r3, [r8, r4]
   135e4:	mov	r0, r4
   135e8:	add	sp, sp, #108	; 0x6c
   135ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   135f0:	mov	r3, r2
   135f4:	b	135b8 <strspn@plt+0x259c>
   135f8:	cmp	r9, r4
   135fc:	strbhi	r3, [r8, r4]
   13600:	add	r4, r4, #1
   13604:	ldrb	r3, [r2, #1]!
   13608:	cmp	r3, #0
   1360c:	bne	135f8 <strspn@plt+0x25dc>
   13610:	b	135d8 <strspn@plt+0x25bc>
   13614:	ldr	r3, [pc, #32]	; 1363c <strspn@plt+0x2620>
   13618:	mov	r6, #1
   1361c:	str	r6, [sp, #24]
   13620:	str	r6, [sp, #32]
   13624:	str	r3, [sp, #40]	; 0x28
   13628:	mov	r4, #0
   1362c:	mov	sl, #5
   13630:	b	129d8 <strspn@plt+0x19bc>
   13634:	mov	r6, #1
   13638:	b	12bcc <strspn@plt+0x1bb0>
   1363c:	andeq	r5, r1, r3, lsr #24
   13640:	andeq	r5, r1, r5, lsr #24
   13644:	strdeq	r5, [r1], -r2
   13648:	stmdacc	r0, {r0, r6, r7, r8, ip, lr}
   1364c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13650:	sub	sp, sp, #52	; 0x34
   13654:	mov	r6, r0
   13658:	mov	r5, r3
   1365c:	mov	r8, r1
   13660:	mov	r9, r2
   13664:	bl	10f44 <__errno_location@plt>
   13668:	ldr	r7, [pc, #380]	; 137ec <strspn@plt+0x27d0>
   1366c:	cmn	r6, #-2147483647	; 0x80000001
   13670:	ldr	r4, [r7]
   13674:	ldr	r3, [r0]
   13678:	str	r0, [sp, #24]
   1367c:	str	r3, [sp, #32]
   13680:	movne	r3, #0
   13684:	moveq	r3, #1
   13688:	orrs	r3, r3, r6, lsr #31
   1368c:	beq	13694 <strspn@plt+0x2678>
   13690:	bl	11010 <abort@plt>
   13694:	ldr	r2, [r7, #4]
   13698:	cmp	r6, r2
   1369c:	blt	1370c <strspn@plt+0x26f0>
   136a0:	add	r1, sp, #48	; 0x30
   136a4:	add	sl, r7, #8
   136a8:	str	r2, [r1, #-4]!
   136ac:	cmp	r4, sl
   136b0:	mov	r3, #8
   136b4:	sub	r2, r6, r2
   136b8:	movne	r0, r4
   136bc:	str	r3, [sp]
   136c0:	add	r2, r2, #1
   136c4:	mvn	r3, #-2147483648	; 0x80000000
   136c8:	moveq	r0, #0
   136cc:	bl	143e0 <strspn@plt+0x33c4>
   136d0:	cmp	r4, sl
   136d4:	ldr	r2, [sp, #44]	; 0x2c
   136d8:	mov	fp, r0
   136dc:	str	r0, [r7]
   136e0:	ldmeq	r4, {r0, r1}
   136e4:	mov	r4, fp
   136e8:	stmeq	fp, {r0, r1}
   136ec:	ldr	r0, [r7, #4]
   136f0:	mov	r1, #0
   136f4:	sub	r2, r2, r0
   136f8:	add	r0, fp, r0, lsl #3
   136fc:	lsl	r2, r2, #3
   13700:	bl	10f68 <memset@plt>
   13704:	ldr	r3, [sp, #44]	; 0x2c
   13708:	str	r3, [r7, #4]
   1370c:	ldr	r3, [r5, #4]
   13710:	add	sl, r4, r6, lsl #3
   13714:	orr	r3, r3, #1
   13718:	str	r3, [sp, #28]
   1371c:	add	r3, r5, #8
   13720:	str	r3, [sp, #36]	; 0x24
   13724:	ldr	r3, [r5, #44]	; 0x2c
   13728:	ldr	fp, [r4, r6, lsl #3]
   1372c:	ldr	r7, [sl, #4]
   13730:	str	r3, [sp, #16]
   13734:	ldr	r3, [r5, #40]	; 0x28
   13738:	mov	r2, r8
   1373c:	str	r3, [sp, #12]
   13740:	add	r3, r5, #8
   13744:	str	r3, [sp, #8]
   13748:	ldr	r3, [sp, #28]
   1374c:	mov	r1, fp
   13750:	str	r3, [sp, #4]
   13754:	ldr	r3, [r5]
   13758:	mov	r0, r7
   1375c:	str	r3, [sp]
   13760:	mov	r3, r9
   13764:	bl	12918 <strspn@plt+0x18fc>
   13768:	cmp	fp, r0
   1376c:	bhi	137d4 <strspn@plt+0x27b8>
   13770:	ldr	r3, [pc, #120]	; 137f0 <strspn@plt+0x27d4>
   13774:	add	fp, r0, #1
   13778:	cmp	r7, r3
   1377c:	str	fp, [r4, r6, lsl #3]
   13780:	beq	1378c <strspn@plt+0x2770>
   13784:	mov	r0, r7
   13788:	bl	126d4 <strspn@plt+0x16b8>
   1378c:	mov	r0, fp
   13790:	bl	14298 <strspn@plt+0x327c>
   13794:	ldr	r3, [r5, #44]	; 0x2c
   13798:	mov	r2, r8
   1379c:	mov	r1, fp
   137a0:	str	r0, [sl, #4]
   137a4:	str	r3, [sp, #16]
   137a8:	ldr	r3, [r5, #40]	; 0x28
   137ac:	mov	r7, r0
   137b0:	str	r3, [sp, #12]
   137b4:	add	r3, r5, #8
   137b8:	str	r3, [sp, #8]
   137bc:	ldr	r3, [sp, #28]
   137c0:	str	r3, [sp, #4]
   137c4:	ldr	r3, [r5]
   137c8:	str	r3, [sp]
   137cc:	mov	r3, r9
   137d0:	bl	12918 <strspn@plt+0x18fc>
   137d4:	ldr	r3, [sp, #24]
   137d8:	ldr	r2, [sp, #32]
   137dc:	mov	r0, r7
   137e0:	str	r2, [r3]
   137e4:	add	sp, sp, #52	; 0x34
   137e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   137ec:	andeq	r7, r2, r8, lsl #2
   137f0:	muleq	r2, r8, r1
   137f4:	push	{r4, r5, r6, lr}
   137f8:	mov	r5, r0
   137fc:	bl	10f44 <__errno_location@plt>
   13800:	cmp	r5, #0
   13804:	mov	r1, #48	; 0x30
   13808:	ldr	r6, [r0]
   1380c:	mov	r4, r0
   13810:	ldr	r0, [pc, #12]	; 13824 <strspn@plt+0x2808>
   13814:	movne	r0, r5
   13818:	bl	14674 <strspn@plt+0x3658>
   1381c:	str	r6, [r4]
   13820:	pop	{r4, r5, r6, pc}
   13824:	muleq	r2, r8, r2
   13828:	ldr	r3, [pc, #12]	; 1383c <strspn@plt+0x2820>
   1382c:	cmp	r0, #0
   13830:	moveq	r0, r3
   13834:	ldr	r0, [r0]
   13838:	bx	lr
   1383c:	muleq	r2, r8, r2
   13840:	ldr	r3, [pc, #12]	; 13854 <strspn@plt+0x2838>
   13844:	cmp	r0, #0
   13848:	moveq	r0, r3
   1384c:	str	r1, [r0]
   13850:	bx	lr
   13854:	muleq	r2, r8, r2
   13858:	ldr	r3, [pc, #52]	; 13894 <strspn@plt+0x2878>
   1385c:	cmp	r0, #0
   13860:	moveq	r0, r3
   13864:	add	r3, r0, #8
   13868:	push	{lr}		; (str lr, [sp, #-4]!)
   1386c:	lsr	lr, r1, #5
   13870:	and	r1, r1, #31
   13874:	ldr	ip, [r3, lr, lsl #2]
   13878:	lsr	r0, ip, r1
   1387c:	eor	r2, r2, r0
   13880:	and	r2, r2, #1
   13884:	and	r0, r0, #1
   13888:	eor	r1, ip, r2, lsl r1
   1388c:	str	r1, [r3, lr, lsl #2]
   13890:	pop	{pc}		; (ldr pc, [sp], #4)
   13894:	muleq	r2, r8, r2
   13898:	ldr	r3, [pc, #16]	; 138b0 <strspn@plt+0x2894>
   1389c:	cmp	r0, #0
   138a0:	movne	r3, r0
   138a4:	ldr	r0, [r3, #4]
   138a8:	str	r1, [r3, #4]
   138ac:	bx	lr
   138b0:	muleq	r2, r8, r2
   138b4:	ldr	r3, [pc, #44]	; 138e8 <strspn@plt+0x28cc>
   138b8:	cmp	r0, #0
   138bc:	moveq	r0, r3
   138c0:	mov	r3, #10
   138c4:	cmp	r2, #0
   138c8:	cmpne	r1, #0
   138cc:	str	r3, [r0]
   138d0:	bne	138dc <strspn@plt+0x28c0>
   138d4:	push	{r4, lr}
   138d8:	bl	11010 <abort@plt>
   138dc:	str	r1, [r0, #40]	; 0x28
   138e0:	str	r2, [r0, #44]	; 0x2c
   138e4:	bx	lr
   138e8:	muleq	r2, r8, r2
   138ec:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   138f0:	sub	sp, sp, #24
   138f4:	mov	sl, r3
   138f8:	ldr	r4, [sp, #56]	; 0x38
   138fc:	ldr	r3, [pc, #100]	; 13968 <strspn@plt+0x294c>
   13900:	cmp	r4, #0
   13904:	moveq	r4, r3
   13908:	mov	r7, r0
   1390c:	mov	r8, r1
   13910:	mov	r9, r2
   13914:	bl	10f44 <__errno_location@plt>
   13918:	ldr	r3, [r4, #44]	; 0x2c
   1391c:	mov	r2, r9
   13920:	mov	r1, r8
   13924:	ldr	r6, [r0]
   13928:	str	r3, [sp, #16]
   1392c:	ldr	r3, [r4, #40]	; 0x28
   13930:	mov	r5, r0
   13934:	str	r3, [sp, #12]
   13938:	add	r3, r4, #8
   1393c:	str	r3, [sp, #8]
   13940:	ldr	r3, [r4, #4]
   13944:	mov	r0, r7
   13948:	str	r3, [sp, #4]
   1394c:	ldr	r3, [r4]
   13950:	str	r3, [sp]
   13954:	mov	r3, sl
   13958:	bl	12918 <strspn@plt+0x18fc>
   1395c:	str	r6, [r5]
   13960:	add	sp, sp, #24
   13964:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13968:	muleq	r2, r8, r2
   1396c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13970:	cmp	r3, #0
   13974:	sub	sp, sp, #44	; 0x2c
   13978:	ldr	r4, [pc, #188]	; 13a3c <strspn@plt+0x2a20>
   1397c:	mov	r6, r2
   13980:	movne	r4, r3
   13984:	mov	sl, r1
   13988:	mov	r9, r0
   1398c:	bl	10f44 <__errno_location@plt>
   13990:	ldr	r5, [r4, #4]
   13994:	add	fp, r4, #8
   13998:	cmp	r6, #0
   1399c:	orreq	r5, r5, #1
   139a0:	mov	r1, #0
   139a4:	mov	r2, r9
   139a8:	ldr	r3, [r0]
   139ac:	mov	r8, r0
   139b0:	str	r3, [sp, #28]
   139b4:	ldr	r3, [r4, #44]	; 0x2c
   139b8:	mov	r0, r1
   139bc:	str	r3, [sp, #16]
   139c0:	ldr	r3, [r4, #40]	; 0x28
   139c4:	stmib	sp, {r5, fp}
   139c8:	str	r3, [sp, #12]
   139cc:	ldr	r3, [r4]
   139d0:	str	r3, [sp]
   139d4:	mov	r3, sl
   139d8:	bl	12918 <strspn@plt+0x18fc>
   139dc:	add	r1, r0, #1
   139e0:	mov	r7, r0
   139e4:	mov	r0, r1
   139e8:	str	r1, [sp, #36]	; 0x24
   139ec:	bl	14298 <strspn@plt+0x327c>
   139f0:	ldr	r3, [r4, #44]	; 0x2c
   139f4:	mov	r2, r9
   139f8:	str	r3, [sp, #16]
   139fc:	ldr	r3, [r4, #40]	; 0x28
   13a00:	stmib	sp, {r5, fp}
   13a04:	str	r3, [sp, #12]
   13a08:	ldr	r3, [r4]
   13a0c:	ldr	r1, [sp, #36]	; 0x24
   13a10:	str	r3, [sp]
   13a14:	mov	r3, sl
   13a18:	str	r0, [sp, #32]
   13a1c:	bl	12918 <strspn@plt+0x18fc>
   13a20:	ldr	r3, [sp, #28]
   13a24:	cmp	r6, #0
   13a28:	str	r3, [r8]
   13a2c:	ldr	r0, [sp, #32]
   13a30:	strne	r7, [r6]
   13a34:	add	sp, sp, #44	; 0x2c
   13a38:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13a3c:	muleq	r2, r8, r2
   13a40:	mov	r3, r2
   13a44:	mov	r2, #0
   13a48:	b	1396c <strspn@plt+0x2950>
   13a4c:	push	{r4, r5, r6, r7, r8, lr}
   13a50:	mov	r6, #1
   13a54:	ldr	r4, [pc, #104]	; 13ac4 <strspn@plt+0x2aa8>
   13a58:	ldr	r5, [r4]
   13a5c:	add	r7, r5, #12
   13a60:	ldr	r3, [r4, #4]
   13a64:	add	r7, r7, #8
   13a68:	cmp	r6, r3
   13a6c:	blt	13ab4 <strspn@plt+0x2a98>
   13a70:	ldr	r0, [r5, #4]
   13a74:	ldr	r6, [pc, #76]	; 13ac8 <strspn@plt+0x2aac>
   13a78:	cmp	r0, r6
   13a7c:	beq	13a90 <strspn@plt+0x2a74>
   13a80:	bl	126d4 <strspn@plt+0x16b8>
   13a84:	mov	r3, #256	; 0x100
   13a88:	str	r3, [r4, #8]
   13a8c:	str	r6, [r4, #12]
   13a90:	ldr	r6, [pc, #52]	; 13acc <strspn@plt+0x2ab0>
   13a94:	cmp	r5, r6
   13a98:	beq	13aa8 <strspn@plt+0x2a8c>
   13a9c:	mov	r0, r5
   13aa0:	bl	126d4 <strspn@plt+0x16b8>
   13aa4:	str	r6, [r4]
   13aa8:	mov	r3, #1
   13aac:	str	r3, [r4, #4]
   13ab0:	pop	{r4, r5, r6, r7, r8, pc}
   13ab4:	ldr	r0, [r7, #-8]
   13ab8:	bl	126d4 <strspn@plt+0x16b8>
   13abc:	add	r6, r6, #1
   13ac0:	b	13a60 <strspn@plt+0x2a44>
   13ac4:	andeq	r7, r2, r8, lsl #2
   13ac8:	muleq	r2, r8, r1
   13acc:	andeq	r7, r2, r0, lsl r1
   13ad0:	ldr	r3, [pc, #4]	; 13adc <strspn@plt+0x2ac0>
   13ad4:	mvn	r2, #0
   13ad8:	b	1364c <strspn@plt+0x2630>
   13adc:	muleq	r2, r8, r2
   13ae0:	ldr	r3, [pc]	; 13ae8 <strspn@plt+0x2acc>
   13ae4:	b	1364c <strspn@plt+0x2630>
   13ae8:	muleq	r2, r8, r2
   13aec:	mov	r1, r0
   13af0:	mov	r0, #0
   13af4:	b	13ad0 <strspn@plt+0x2ab4>
   13af8:	mov	r2, r1
   13afc:	mov	r1, r0
   13b00:	mov	r0, #0
   13b04:	b	13ae0 <strspn@plt+0x2ac4>
   13b08:	push	{r4, r5, lr}
   13b0c:	sub	sp, sp, #52	; 0x34
   13b10:	mov	r5, r2
   13b14:	mov	r4, r0
   13b18:	mov	r0, sp
   13b1c:	bl	127d4 <strspn@plt+0x17b8>
   13b20:	mov	r3, sp
   13b24:	mvn	r2, #0
   13b28:	mov	r1, r5
   13b2c:	mov	r0, r4
   13b30:	bl	1364c <strspn@plt+0x2630>
   13b34:	add	sp, sp, #52	; 0x34
   13b38:	pop	{r4, r5, pc}
   13b3c:	push	{r4, r5, r6, lr}
   13b40:	sub	sp, sp, #48	; 0x30
   13b44:	mov	r5, r2
   13b48:	mov	r6, r3
   13b4c:	mov	r4, r0
   13b50:	mov	r0, sp
   13b54:	bl	127d4 <strspn@plt+0x17b8>
   13b58:	mov	r3, sp
   13b5c:	mov	r2, r6
   13b60:	mov	r1, r5
   13b64:	mov	r0, r4
   13b68:	bl	1364c <strspn@plt+0x2630>
   13b6c:	add	sp, sp, #48	; 0x30
   13b70:	pop	{r4, r5, r6, pc}
   13b74:	mov	r2, r1
   13b78:	mov	r1, r0
   13b7c:	mov	r0, #0
   13b80:	b	13b08 <strspn@plt+0x2aec>
   13b84:	mov	r3, r2
   13b88:	mov	r2, r1
   13b8c:	mov	r1, r0
   13b90:	mov	r0, #0
   13b94:	b	13b3c <strspn@plt+0x2b20>
   13b98:	push	{r4, r5, r6, lr}
   13b9c:	mov	r4, r0
   13ba0:	ldr	lr, [pc, #80]	; 13bf8 <strspn@plt+0x2bdc>
   13ba4:	mov	r5, r1
   13ba8:	mov	r6, r2
   13bac:	ldm	lr!, {r0, r1, r2, r3}
   13bb0:	sub	sp, sp, #48	; 0x30
   13bb4:	mov	ip, sp
   13bb8:	stmia	ip!, {r0, r1, r2, r3}
   13bbc:	ldm	lr!, {r0, r1, r2, r3}
   13bc0:	stmia	ip!, {r0, r1, r2, r3}
   13bc4:	ldm	lr, {r0, r1, r2, r3}
   13bc8:	stm	ip, {r0, r1, r2, r3}
   13bcc:	mov	r1, r6
   13bd0:	mov	r2, #1
   13bd4:	mov	r0, sp
   13bd8:	bl	13858 <strspn@plt+0x283c>
   13bdc:	mov	r3, sp
   13be0:	mov	r2, r5
   13be4:	mov	r1, r4
   13be8:	mov	r0, #0
   13bec:	bl	1364c <strspn@plt+0x2630>
   13bf0:	add	sp, sp, #48	; 0x30
   13bf4:	pop	{r4, r5, r6, pc}
   13bf8:	muleq	r2, r8, r2
   13bfc:	mov	r2, r1
   13c00:	mvn	r1, #0
   13c04:	b	13b98 <strspn@plt+0x2b7c>
   13c08:	mov	r1, #58	; 0x3a
   13c0c:	b	13bfc <strspn@plt+0x2be0>
   13c10:	mov	r2, #58	; 0x3a
   13c14:	b	13b98 <strspn@plt+0x2b7c>
   13c18:	push	{r4, r5, lr}
   13c1c:	sub	sp, sp, #100	; 0x64
   13c20:	mov	r4, r0
   13c24:	mov	r0, sp
   13c28:	mov	r5, r2
   13c2c:	bl	127d4 <strspn@plt+0x17b8>
   13c30:	mov	ip, sp
   13c34:	add	lr, sp, #48	; 0x30
   13c38:	ldm	ip!, {r0, r1, r2, r3}
   13c3c:	stmia	lr!, {r0, r1, r2, r3}
   13c40:	ldm	ip!, {r0, r1, r2, r3}
   13c44:	stmia	lr!, {r0, r1, r2, r3}
   13c48:	ldm	ip, {r0, r1, r2, r3}
   13c4c:	stm	lr, {r0, r1, r2, r3}
   13c50:	mov	r2, #1
   13c54:	mov	r1, #58	; 0x3a
   13c58:	add	r0, sp, #48	; 0x30
   13c5c:	bl	13858 <strspn@plt+0x283c>
   13c60:	add	r3, sp, #48	; 0x30
   13c64:	mvn	r2, #0
   13c68:	mov	r1, r5
   13c6c:	mov	r0, r4
   13c70:	bl	1364c <strspn@plt+0x2630>
   13c74:	add	sp, sp, #100	; 0x64
   13c78:	pop	{r4, r5, pc}
   13c7c:	push	{r4, r5, r6, r7, lr}
   13c80:	mov	r4, r0
   13c84:	ldr	lr, [pc, #84]	; 13ce0 <strspn@plt+0x2cc4>
   13c88:	mov	r6, r1
   13c8c:	mov	r7, r2
   13c90:	mov	r5, r3
   13c94:	ldm	lr!, {r0, r1, r2, r3}
   13c98:	sub	sp, sp, #52	; 0x34
   13c9c:	mov	ip, sp
   13ca0:	stmia	ip!, {r0, r1, r2, r3}
   13ca4:	ldm	lr!, {r0, r1, r2, r3}
   13ca8:	stmia	ip!, {r0, r1, r2, r3}
   13cac:	ldm	lr, {r0, r1, r2, r3}
   13cb0:	stm	ip, {r0, r1, r2, r3}
   13cb4:	mov	r2, r7
   13cb8:	mov	r1, r6
   13cbc:	mov	r0, sp
   13cc0:	bl	138b4 <strspn@plt+0x2898>
   13cc4:	mov	r3, sp
   13cc8:	ldr	r2, [sp, #72]	; 0x48
   13ccc:	mov	r1, r5
   13cd0:	mov	r0, r4
   13cd4:	bl	1364c <strspn@plt+0x2630>
   13cd8:	add	sp, sp, #52	; 0x34
   13cdc:	pop	{r4, r5, r6, r7, pc}
   13ce0:	muleq	r2, r8, r2
   13ce4:	mvn	ip, #0
   13ce8:	push	{r0, r1, r2, lr}
   13cec:	str	ip, [sp]
   13cf0:	bl	13c7c <strspn@plt+0x2c60>
   13cf4:	add	sp, sp, #12
   13cf8:	pop	{pc}		; (ldr pc, [sp], #4)
   13cfc:	mov	r3, r2
   13d00:	mov	r2, r1
   13d04:	mov	r1, r0
   13d08:	mov	r0, #0
   13d0c:	b	13ce4 <strspn@plt+0x2cc8>
   13d10:	push	{r0, r1, r2, lr}
   13d14:	str	r3, [sp]
   13d18:	mov	r3, r2
   13d1c:	mov	r2, r1
   13d20:	mov	r1, r0
   13d24:	mov	r0, #0
   13d28:	bl	13c7c <strspn@plt+0x2c60>
   13d2c:	add	sp, sp, #12
   13d30:	pop	{pc}		; (ldr pc, [sp], #4)
   13d34:	ldr	r3, [pc]	; 13d3c <strspn@plt+0x2d20>
   13d38:	b	1364c <strspn@plt+0x2630>
   13d3c:	andeq	r7, r2, r8, lsl r1
   13d40:	mov	r2, r1
   13d44:	mov	r1, r0
   13d48:	mov	r0, #0
   13d4c:	b	13d34 <strspn@plt+0x2d18>
   13d50:	mvn	r2, #0
   13d54:	b	13d34 <strspn@plt+0x2d18>
   13d58:	mov	r1, r0
   13d5c:	mov	r0, #0
   13d60:	b	13d50 <strspn@plt+0x2d34>
   13d64:	push	{r4, r5, r6, lr}
   13d68:	sub	sp, sp, #32
   13d6c:	cmp	r1, #0
   13d70:	mov	r5, r0
   13d74:	ldr	r4, [sp, #48]	; 0x30
   13d78:	ldr	r6, [sp, #52]	; 0x34
   13d7c:	beq	13e30 <strspn@plt+0x2e14>
   13d80:	stm	sp, {r2, r3}
   13d84:	mov	r3, r1
   13d88:	ldr	r2, [pc, #860]	; 140ec <strspn@plt+0x30d0>
   13d8c:	mov	r1, #1
   13d90:	bl	10f8c <__fprintf_chk@plt>
   13d94:	mov	r2, #5
   13d98:	ldr	r1, [pc, #848]	; 140f0 <strspn@plt+0x30d4>
   13d9c:	mov	r0, #0
   13da0:	bl	10e3c <dcgettext@plt>
   13da4:	ldr	r3, [pc, #840]	; 140f4 <strspn@plt+0x30d8>
   13da8:	ldr	r2, [pc, #840]	; 140f8 <strspn@plt+0x30dc>
   13dac:	str	r3, [sp]
   13db0:	mov	r1, #1
   13db4:	mov	r3, r0
   13db8:	mov	r0, r5
   13dbc:	bl	10f8c <__fprintf_chk@plt>
   13dc0:	mov	r1, r5
   13dc4:	mov	r0, #10
   13dc8:	bl	10e30 <fputc_unlocked@plt>
   13dcc:	mov	r2, #5
   13dd0:	ldr	r1, [pc, #804]	; 140fc <strspn@plt+0x30e0>
   13dd4:	mov	r0, #0
   13dd8:	bl	10e3c <dcgettext@plt>
   13ddc:	mov	r1, #1
   13de0:	ldr	r3, [pc, #792]	; 14100 <strspn@plt+0x30e4>
   13de4:	mov	r2, r0
   13de8:	mov	r0, r5
   13dec:	bl	10f8c <__fprintf_chk@plt>
   13df0:	mov	r1, r5
   13df4:	mov	r0, #10
   13df8:	bl	10e30 <fputc_unlocked@plt>
   13dfc:	cmp	r6, #9
   13e00:	ldrls	pc, [pc, r6, lsl #2]
   13e04:	b	140e0 <strspn@plt+0x30c4>
   13e08:	andeq	r3, r1, r0, lsr #30
   13e0c:	andeq	r3, r1, r8, asr #28
   13e10:	andeq	r3, r1, r4, ror lr
   13e14:	andeq	r3, r1, r8, lsr #29
   13e18:	andeq	r3, r1, r4, ror #29
   13e1c:	andeq	r3, r1, r8, lsr #30
   13e20:	andeq	r3, r1, r0, ror pc
   13e24:	andeq	r3, r1, r0, asr #31
   13e28:	andeq	r4, r1, r8, lsl r0
   13e2c:	andeq	r4, r1, r8, ror r0
   13e30:	str	r3, [sp]
   13e34:	mov	r1, #1
   13e38:	mov	r3, r2
   13e3c:	ldr	r2, [pc, #704]	; 14104 <strspn@plt+0x30e8>
   13e40:	bl	10f8c <__fprintf_chk@plt>
   13e44:	b	13d94 <strspn@plt+0x2d78>
   13e48:	mov	r2, #5
   13e4c:	ldr	r1, [pc, #692]	; 14108 <strspn@plt+0x30ec>
   13e50:	mov	r0, #0
   13e54:	bl	10e3c <dcgettext@plt>
   13e58:	ldr	r3, [r4]
   13e5c:	mov	r1, #1
   13e60:	mov	r2, r0
   13e64:	mov	r0, r5
   13e68:	add	sp, sp, #32
   13e6c:	pop	{r4, r5, r6, lr}
   13e70:	b	10f8c <__fprintf_chk@plt>
   13e74:	mov	r2, #5
   13e78:	ldr	r1, [pc, #652]	; 1410c <strspn@plt+0x30f0>
   13e7c:	mov	r0, #0
   13e80:	bl	10e3c <dcgettext@plt>
   13e84:	ldr	r3, [r4, #4]
   13e88:	mov	r1, #1
   13e8c:	str	r3, [sp, #48]	; 0x30
   13e90:	ldr	r3, [r4]
   13e94:	mov	r2, r0
   13e98:	mov	r0, r5
   13e9c:	add	sp, sp, #32
   13ea0:	pop	{r4, r5, r6, lr}
   13ea4:	b	10f8c <__fprintf_chk@plt>
   13ea8:	mov	r2, #5
   13eac:	ldr	r1, [pc, #604]	; 14110 <strspn@plt+0x30f4>
   13eb0:	mov	r0, #0
   13eb4:	bl	10e3c <dcgettext@plt>
   13eb8:	ldr	r3, [r4, #8]
   13ebc:	mov	r1, #1
   13ec0:	str	r3, [sp, #52]	; 0x34
   13ec4:	ldr	r3, [r4, #4]
   13ec8:	str	r3, [sp, #48]	; 0x30
   13ecc:	ldr	r3, [r4]
   13ed0:	mov	r2, r0
   13ed4:	mov	r0, r5
   13ed8:	add	sp, sp, #32
   13edc:	pop	{r4, r5, r6, lr}
   13ee0:	b	10f8c <__fprintf_chk@plt>
   13ee4:	mov	r2, #5
   13ee8:	ldr	r1, [pc, #548]	; 14114 <strspn@plt+0x30f8>
   13eec:	mov	r0, #0
   13ef0:	bl	10e3c <dcgettext@plt>
   13ef4:	ldr	r3, [r4, #12]
   13ef8:	mov	r1, #1
   13efc:	str	r3, [sp, #8]
   13f00:	ldr	r3, [r4, #8]
   13f04:	str	r3, [sp, #4]
   13f08:	ldr	r3, [r4, #4]
   13f0c:	str	r3, [sp]
   13f10:	ldr	r3, [r4]
   13f14:	mov	r2, r0
   13f18:	mov	r0, r5
   13f1c:	bl	10f8c <__fprintf_chk@plt>
   13f20:	add	sp, sp, #32
   13f24:	pop	{r4, r5, r6, pc}
   13f28:	mov	r2, #5
   13f2c:	ldr	r1, [pc, #484]	; 14118 <strspn@plt+0x30fc>
   13f30:	mov	r0, #0
   13f34:	bl	10e3c <dcgettext@plt>
   13f38:	ldr	r3, [r4, #16]
   13f3c:	mov	r1, #1
   13f40:	str	r3, [sp, #12]
   13f44:	ldr	r3, [r4, #12]
   13f48:	str	r3, [sp, #8]
   13f4c:	ldr	r3, [r4, #8]
   13f50:	str	r3, [sp, #4]
   13f54:	ldr	r3, [r4, #4]
   13f58:	str	r3, [sp]
   13f5c:	ldr	r3, [r4]
   13f60:	mov	r2, r0
   13f64:	mov	r0, r5
   13f68:	bl	10f8c <__fprintf_chk@plt>
   13f6c:	b	13f20 <strspn@plt+0x2f04>
   13f70:	mov	r2, #5
   13f74:	ldr	r1, [pc, #416]	; 1411c <strspn@plt+0x3100>
   13f78:	mov	r0, #0
   13f7c:	bl	10e3c <dcgettext@plt>
   13f80:	ldr	r3, [r4, #20]
   13f84:	mov	r1, #1
   13f88:	str	r3, [sp, #16]
   13f8c:	ldr	r3, [r4, #16]
   13f90:	str	r3, [sp, #12]
   13f94:	ldr	r3, [r4, #12]
   13f98:	str	r3, [sp, #8]
   13f9c:	ldr	r3, [r4, #8]
   13fa0:	str	r3, [sp, #4]
   13fa4:	ldr	r3, [r4, #4]
   13fa8:	str	r3, [sp]
   13fac:	ldr	r3, [r4]
   13fb0:	mov	r2, r0
   13fb4:	mov	r0, r5
   13fb8:	bl	10f8c <__fprintf_chk@plt>
   13fbc:	b	13f20 <strspn@plt+0x2f04>
   13fc0:	mov	r2, #5
   13fc4:	ldr	r1, [pc, #340]	; 14120 <strspn@plt+0x3104>
   13fc8:	mov	r0, #0
   13fcc:	bl	10e3c <dcgettext@plt>
   13fd0:	ldr	r3, [r4, #24]
   13fd4:	mov	r1, #1
   13fd8:	str	r3, [sp, #20]
   13fdc:	ldr	r3, [r4, #20]
   13fe0:	str	r3, [sp, #16]
   13fe4:	ldr	r3, [r4, #16]
   13fe8:	str	r3, [sp, #12]
   13fec:	ldr	r3, [r4, #12]
   13ff0:	str	r3, [sp, #8]
   13ff4:	ldr	r3, [r4, #8]
   13ff8:	str	r3, [sp, #4]
   13ffc:	ldr	r3, [r4, #4]
   14000:	str	r3, [sp]
   14004:	ldr	r3, [r4]
   14008:	mov	r2, r0
   1400c:	mov	r0, r5
   14010:	bl	10f8c <__fprintf_chk@plt>
   14014:	b	13f20 <strspn@plt+0x2f04>
   14018:	mov	r2, #5
   1401c:	ldr	r1, [pc, #256]	; 14124 <strspn@plt+0x3108>
   14020:	mov	r0, #0
   14024:	bl	10e3c <dcgettext@plt>
   14028:	ldr	r3, [r4, #28]
   1402c:	mov	r1, #1
   14030:	str	r3, [sp, #24]
   14034:	ldr	r3, [r4, #24]
   14038:	str	r3, [sp, #20]
   1403c:	ldr	r3, [r4, #20]
   14040:	str	r3, [sp, #16]
   14044:	ldr	r3, [r4, #16]
   14048:	str	r3, [sp, #12]
   1404c:	ldr	r3, [r4, #12]
   14050:	str	r3, [sp, #8]
   14054:	ldr	r3, [r4, #8]
   14058:	str	r3, [sp, #4]
   1405c:	ldr	r3, [r4, #4]
   14060:	str	r3, [sp]
   14064:	ldr	r3, [r4]
   14068:	mov	r2, r0
   1406c:	mov	r0, r5
   14070:	bl	10f8c <__fprintf_chk@plt>
   14074:	b	13f20 <strspn@plt+0x2f04>
   14078:	ldr	r1, [pc, #168]	; 14128 <strspn@plt+0x310c>
   1407c:	mov	r2, #5
   14080:	mov	r0, #0
   14084:	bl	10e3c <dcgettext@plt>
   14088:	ldr	r3, [r4, #32]
   1408c:	mov	r1, #1
   14090:	str	r3, [sp, #28]
   14094:	ldr	r3, [r4, #28]
   14098:	str	r3, [sp, #24]
   1409c:	ldr	r3, [r4, #24]
   140a0:	str	r3, [sp, #20]
   140a4:	ldr	r3, [r4, #20]
   140a8:	str	r3, [sp, #16]
   140ac:	ldr	r3, [r4, #16]
   140b0:	str	r3, [sp, #12]
   140b4:	ldr	r3, [r4, #12]
   140b8:	str	r3, [sp, #8]
   140bc:	ldr	r3, [r4, #8]
   140c0:	str	r3, [sp, #4]
   140c4:	ldr	r3, [r4, #4]
   140c8:	str	r3, [sp]
   140cc:	ldr	r3, [r4]
   140d0:	mov	r2, r0
   140d4:	mov	r0, r5
   140d8:	bl	10f8c <__fprintf_chk@plt>
   140dc:	b	13f20 <strspn@plt+0x2f04>
   140e0:	mov	r2, #5
   140e4:	ldr	r1, [pc, #64]	; 1412c <strspn@plt+0x3110>
   140e8:	b	14080 <strspn@plt+0x3064>
   140ec:	andeq	r5, r1, r5, ror ip
   140f0:	andeq	r5, r1, r8, lsl #25
   140f4:	andeq	r0, r0, r6, ror #15
   140f8:	andeq	r5, r1, r6, asr pc
   140fc:	andeq	r5, r1, ip, lsl #25
   14100:	andeq	r5, r1, r7, lsr sp
   14104:	andeq	r5, r1, r1, lsl #25
   14108:	andeq	r5, r1, r9, asr sp
   1410c:	andeq	r5, r1, r9, ror #26
   14110:	andeq	r5, r1, r0, lsl #27
   14114:	muleq	r1, ip, sp
   14118:			; <UNDEFINED> instruction: 0x00015dbc
   1411c:	andeq	r5, r1, r0, ror #27
   14120:	andeq	r5, r1, r8, lsl #28
   14124:	andeq	r5, r1, r4, lsr lr
   14128:	andeq	r5, r1, r4, ror #28
   1412c:	muleq	r1, r8, lr
   14130:	push	{r0, r1, r4, lr}
   14134:	mov	ip, #0
   14138:	ldr	lr, [sp, #16]
   1413c:	ldr	r4, [lr, ip, lsl #2]
   14140:	cmp	r4, #0
   14144:	bne	1415c <strspn@plt+0x3140>
   14148:	str	ip, [sp, #4]
   1414c:	str	lr, [sp]
   14150:	bl	13d64 <strspn@plt+0x2d48>
   14154:	add	sp, sp, #8
   14158:	pop	{r4, pc}
   1415c:	add	ip, ip, #1
   14160:	b	1413c <strspn@plt+0x3120>
   14164:	push	{r4, r5, lr}
   14168:	sub	sp, sp, #52	; 0x34
   1416c:	mov	ip, #0
   14170:	ldr	r5, [sp, #64]	; 0x40
   14174:	add	lr, sp, #8
   14178:	ldr	r4, [r5, ip, lsl #2]
   1417c:	cmp	r4, #0
   14180:	str	r4, [lr, ip, lsl #2]
   14184:	beq	14194 <strspn@plt+0x3178>
   14188:	add	ip, ip, #1
   1418c:	cmp	ip, #10
   14190:	bne	14178 <strspn@plt+0x315c>
   14194:	str	ip, [sp, #4]
   14198:	str	lr, [sp]
   1419c:	bl	13d64 <strspn@plt+0x2d48>
   141a0:	add	sp, sp, #52	; 0x34
   141a4:	pop	{r4, r5, pc}
   141a8:	push	{r3}		; (str r3, [sp, #-4]!)
   141ac:	push	{r0, r1, r2, r3, lr}
   141b0:	add	r3, sp, #24
   141b4:	str	r3, [sp, #12]
   141b8:	str	r3, [sp]
   141bc:	ldr	r3, [sp, #20]
   141c0:	bl	14164 <strspn@plt+0x3148>
   141c4:	add	sp, sp, #16
   141c8:	pop	{lr}		; (ldr lr, [sp], #4)
   141cc:	add	sp, sp, #4
   141d0:	bx	lr
   141d4:	ldr	r3, [pc, #116]	; 14250 <strspn@plt+0x3234>
   141d8:	push	{r4, lr}
   141dc:	mov	r0, #10
   141e0:	ldr	r1, [r3]
   141e4:	bl	10e30 <fputc_unlocked@plt>
   141e8:	mov	r2, #5
   141ec:	ldr	r1, [pc, #96]	; 14254 <strspn@plt+0x3238>
   141f0:	mov	r0, #0
   141f4:	bl	10e3c <dcgettext@plt>
   141f8:	ldr	r2, [pc, #88]	; 14258 <strspn@plt+0x323c>
   141fc:	mov	r1, r0
   14200:	mov	r0, #1
   14204:	bl	10f74 <__printf_chk@plt>
   14208:	mov	r2, #5
   1420c:	ldr	r1, [pc, #72]	; 1425c <strspn@plt+0x3240>
   14210:	mov	r0, #0
   14214:	bl	10e3c <dcgettext@plt>
   14218:	ldr	r3, [pc, #64]	; 14260 <strspn@plt+0x3244>
   1421c:	ldr	r2, [pc, #64]	; 14264 <strspn@plt+0x3248>
   14220:	mov	r1, r0
   14224:	mov	r0, #1
   14228:	bl	10f74 <__printf_chk@plt>
   1422c:	mov	r2, #5
   14230:	ldr	r1, [pc, #48]	; 14268 <strspn@plt+0x324c>
   14234:	mov	r0, #0
   14238:	bl	10e3c <dcgettext@plt>
   1423c:	ldr	r2, [pc, #40]	; 1426c <strspn@plt+0x3250>
   14240:	pop	{r4, lr}
   14244:	mov	r1, r0
   14248:	mov	r0, #1
   1424c:	b	10f74 <__printf_chk@plt>
   14250:	andeq	r7, r2, ip, asr r1
   14254:	ldrdeq	r5, [r1], -r4
   14258:	andeq	r5, r1, r8, ror #29
   1425c:	strdeq	r5, [r1], -lr
   14260:	andeq	r5, r1, ip, asr r8
   14264:	andeq	r5, r1, r4, lsl #17
   14268:	andeq	r5, r1, r2, lsl pc
   1426c:	andeq	r5, r1, r9, lsr pc
   14270:	push	{r4, lr}
   14274:	bl	14830 <strspn@plt+0x3814>
   14278:	cmp	r0, #0
   1427c:	popne	{r4, pc}
   14280:	bl	14704 <strspn@plt+0x36e8>
   14284:	push	{r4, lr}
   14288:	bl	14830 <strspn@plt+0x3814>
   1428c:	cmp	r0, #0
   14290:	popne	{r4, pc}
   14294:	bl	14704 <strspn@plt+0x36e8>
   14298:	b	14270 <strspn@plt+0x3254>
   1429c:	push	{r4, r5, r6, lr}
   142a0:	mov	r5, r0
   142a4:	mov	r4, r1
   142a8:	bl	14870 <strspn@plt+0x3854>
   142ac:	cmp	r0, #0
   142b0:	popne	{r4, r5, r6, pc}
   142b4:	adds	r4, r4, #0
   142b8:	movne	r4, #1
   142bc:	cmp	r5, #0
   142c0:	orreq	r4, r4, #1
   142c4:	cmp	r4, #0
   142c8:	popeq	{r4, r5, r6, pc}
   142cc:	bl	14704 <strspn@plt+0x36e8>
   142d0:	push	{r4, lr}
   142d4:	cmp	r1, #0
   142d8:	orreq	r1, r1, #1
   142dc:	bl	14870 <strspn@plt+0x3854>
   142e0:	cmp	r0, #0
   142e4:	popne	{r4, pc}
   142e8:	bl	14704 <strspn@plt+0x36e8>
   142ec:	push	{r4, r5, r6, lr}
   142f0:	mov	r6, r0
   142f4:	mov	r5, r1
   142f8:	mov	r4, r2
   142fc:	bl	14bfc <strspn@plt+0x3be0>
   14300:	cmp	r0, #0
   14304:	popne	{r4, r5, r6, pc}
   14308:	cmp	r6, #0
   1430c:	beq	1431c <strspn@plt+0x3300>
   14310:	cmp	r5, #0
   14314:	cmpne	r4, #0
   14318:	popeq	{r4, r5, r6, pc}
   1431c:	bl	14704 <strspn@plt+0x36e8>
   14320:	b	142ec <strspn@plt+0x32d0>
   14324:	cmp	r2, #0
   14328:	cmpne	r1, #0
   1432c:	moveq	r2, #1
   14330:	moveq	r1, r2
   14334:	push	{r4, lr}
   14338:	bl	14bfc <strspn@plt+0x3be0>
   1433c:	cmp	r0, #0
   14340:	popne	{r4, pc}
   14344:	bl	14704 <strspn@plt+0x36e8>
   14348:	mov	r2, r1
   1434c:	mov	r1, r0
   14350:	mov	r0, #0
   14354:	b	142ec <strspn@plt+0x32d0>
   14358:	mov	r2, r1
   1435c:	mov	r1, r0
   14360:	mov	r0, #0
   14364:	b	14324 <strspn@plt+0x3308>
   14368:	push	{r4, r5, r6, r7, r8, lr}
   1436c:	subs	r7, r0, #0
   14370:	mov	r5, r1
   14374:	mov	r6, r2
   14378:	ldr	r4, [r1]
   1437c:	bne	143b8 <strspn@plt+0x339c>
   14380:	cmp	r4, #0
   14384:	bne	143a0 <strspn@plt+0x3384>
   14388:	mov	r1, r2
   1438c:	mov	r0, #64	; 0x40
   14390:	bl	14d28 <strspn@plt+0x3d0c>
   14394:	cmp	r0, #0
   14398:	movne	r4, r0
   1439c:	addeq	r4, r0, #1
   143a0:	mov	r2, r6
   143a4:	mov	r1, r4
   143a8:	mov	r0, r7
   143ac:	bl	142ec <strspn@plt+0x32d0>
   143b0:	str	r4, [r5]
   143b4:	pop	{r4, r5, r6, r7, r8, pc}
   143b8:	lsr	r2, r4, #1
   143bc:	add	r3, r2, #1
   143c0:	mvn	r3, r3
   143c4:	cmp	r4, r3
   143c8:	addls	r4, r4, #1
   143cc:	addls	r4, r4, r2
   143d0:	bls	143a0 <strspn@plt+0x3384>
   143d4:	bl	14704 <strspn@plt+0x36e8>
   143d8:	mov	r2, #1
   143dc:	b	14368 <strspn@plt+0x334c>
   143e0:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   143e4:	mov	sl, r0
   143e8:	ldr	r8, [r1]
   143ec:	mov	fp, r1
   143f0:	mov	r5, r2
   143f4:	asrs	r4, r8, #1
   143f8:	mov	r9, r3
   143fc:	ldr	r7, [sp, #48]	; 0x30
   14400:	bpl	1449c <strspn@plt+0x3480>
   14404:	rsb	r2, r4, #-2147483648	; 0x80000000
   14408:	cmp	r8, r2
   1440c:	movge	r2, #0
   14410:	movlt	r2, #1
   14414:	mvn	r3, r9
   14418:	cmp	r2, #0
   1441c:	lsr	r3, r3, #31
   14420:	addeq	r4, r4, r8
   14424:	mvnne	r4, #-2147483648	; 0x80000000
   14428:	mov	r0, r3
   1442c:	cmp	r9, r4
   14430:	movge	r0, #0
   14434:	andlt	r0, r0, #1
   14438:	cmp	r0, #0
   1443c:	str	r3, [sp, #4]
   14440:	bne	14610 <strspn@plt+0x35f4>
   14444:	cmp	r7, #0
   14448:	bge	1455c <strspn@plt+0x3540>
   1444c:	cmp	r4, #0
   14450:	bge	144b4 <strspn@plt+0x3498>
   14454:	mov	r1, r7
   14458:	mvn	r0, #-2147483648	; 0x80000000
   1445c:	bl	14f34 <strspn@plt+0x3f18>
   14460:	cmp	r0, r4
   14464:	movle	r0, #0
   14468:	movgt	r0, #1
   1446c:	cmp	r0, #0
   14470:	mvnne	r6, #-2147483648	; 0x80000000
   14474:	beq	144c4 <strspn@plt+0x34a8>
   14478:	mov	r1, r7
   1447c:	mov	r0, r6
   14480:	bl	14f34 <strspn@plt+0x3f18>
   14484:	mov	r1, r7
   14488:	mov	r4, r0
   1448c:	mov	r0, r6
   14490:	bl	15154 <strspn@plt+0x4138>
   14494:	sub	r1, r6, r1
   14498:	b	144d4 <strspn@plt+0x34b8>
   1449c:	mvn	r2, #-2147483648	; 0x80000000
   144a0:	sub	r2, r2, r4
   144a4:	cmp	r8, r2
   144a8:	movle	r2, #0
   144ac:	movgt	r2, #1
   144b0:	b	14414 <strspn@plt+0x33f8>
   144b4:	cmn	r7, #1
   144b8:	movne	r1, r7
   144bc:	movne	r0, #-2147483648	; 0x80000000
   144c0:	bne	14628 <strspn@plt+0x360c>
   144c4:	mul	r1, r7, r4
   144c8:	cmp	r1, #63	; 0x3f
   144cc:	movle	r6, #64	; 0x40
   144d0:	ble	14478 <strspn@plt+0x345c>
   144d4:	cmp	sl, #0
   144d8:	sub	r2, r4, r8
   144dc:	streq	sl, [fp]
   144e0:	cmp	r2, r5
   144e4:	bge	145b8 <strspn@plt+0x359c>
   144e8:	cmp	r5, #0
   144ec:	bge	14584 <strspn@plt+0x3568>
   144f0:	rsb	r2, r5, #-2147483648	; 0x80000000
   144f4:	cmp	r8, r2
   144f8:	movge	r2, #0
   144fc:	movlt	r2, #1
   14500:	cmp	r2, #0
   14504:	bne	14558 <strspn@plt+0x353c>
   14508:	ldr	r0, [sp, #4]
   1450c:	add	r5, r8, r5
   14510:	cmp	r9, r5
   14514:	movge	r0, #0
   14518:	andlt	r0, r0, #1
   1451c:	cmp	r0, #0
   14520:	mov	r4, r5
   14524:	bne	14558 <strspn@plt+0x353c>
   14528:	cmp	r7, #0
   1452c:	bge	145cc <strspn@plt+0x35b0>
   14530:	cmp	r5, #0
   14534:	bge	145a4 <strspn@plt+0x3588>
   14538:	mov	r1, r7
   1453c:	mvn	r0, #-2147483648	; 0x80000000
   14540:	bl	14f34 <strspn@plt+0x3f18>
   14544:	cmp	r5, r0
   14548:	movge	r0, #0
   1454c:	movlt	r0, #1
   14550:	cmp	r0, #0
   14554:	beq	145b4 <strspn@plt+0x3598>
   14558:	bl	14704 <strspn@plt+0x36e8>
   1455c:	beq	144c4 <strspn@plt+0x34a8>
   14560:	cmp	r4, #0
   14564:	bge	14620 <strspn@plt+0x3604>
   14568:	cmn	r4, #1
   1456c:	beq	144c4 <strspn@plt+0x34a8>
   14570:	mov	r1, r4
   14574:	mov	r0, #-2147483648	; 0x80000000
   14578:	bl	14f34 <strspn@plt+0x3f18>
   1457c:	cmp	r7, r0
   14580:	b	14464 <strspn@plt+0x3448>
   14584:	cmp	r8, #0
   14588:	blt	14508 <strspn@plt+0x34ec>
   1458c:	mvn	r2, #-2147483648	; 0x80000000
   14590:	sub	r2, r2, r5
   14594:	cmp	r8, r2
   14598:	movle	r2, #0
   1459c:	movgt	r2, #1
   145a0:	b	14500 <strspn@plt+0x34e4>
   145a4:	cmn	r7, #1
   145a8:	movne	r1, r7
   145ac:	movne	r0, #-2147483648	; 0x80000000
   145b0:	bne	14604 <strspn@plt+0x35e8>
   145b4:	mul	r1, r5, r7
   145b8:	mov	r0, sl
   145bc:	bl	1429c <strspn@plt+0x3280>
   145c0:	str	r4, [fp]
   145c4:	add	sp, sp, #12
   145c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   145cc:	beq	145b4 <strspn@plt+0x3598>
   145d0:	cmp	r5, #0
   145d4:	movge	r1, r7
   145d8:	mvnge	r0, #-2147483648	; 0x80000000
   145dc:	bge	14604 <strspn@plt+0x35e8>
   145e0:	cmn	r5, #1
   145e4:	beq	145b4 <strspn@plt+0x3598>
   145e8:	mov	r1, r5
   145ec:	mov	r0, #-2147483648	; 0x80000000
   145f0:	bl	14f34 <strspn@plt+0x3f18>
   145f4:	cmp	r7, r0
   145f8:	movle	r0, #0
   145fc:	movgt	r0, #1
   14600:	b	14550 <strspn@plt+0x3534>
   14604:	bl	14f34 <strspn@plt+0x3f18>
   14608:	cmp	r5, r0
   1460c:	b	145f8 <strspn@plt+0x35dc>
   14610:	cmp	r7, #0
   14614:	mov	r4, r9
   14618:	blt	144b4 <strspn@plt+0x3498>
   1461c:	beq	144c4 <strspn@plt+0x34a8>
   14620:	mov	r1, r7
   14624:	mvn	r0, #-2147483648	; 0x80000000
   14628:	bl	14f34 <strspn@plt+0x3f18>
   1462c:	cmp	r0, r4
   14630:	movge	r0, #0
   14634:	movlt	r0, #1
   14638:	b	1446c <strspn@plt+0x3450>
   1463c:	push	{r4, lr}
   14640:	bl	147e8 <strspn@plt+0x37cc>
   14644:	cmp	r0, #0
   14648:	popne	{r4, pc}
   1464c:	bl	14704 <strspn@plt+0x36e8>
   14650:	mov	r1, #1
   14654:	b	1463c <strspn@plt+0x3620>
   14658:	push	{r4, lr}
   1465c:	bl	147e8 <strspn@plt+0x37cc>
   14660:	cmp	r0, #0
   14664:	popne	{r4, pc}
   14668:	bl	14704 <strspn@plt+0x36e8>
   1466c:	mov	r1, #1
   14670:	b	14658 <strspn@plt+0x363c>
   14674:	push	{r4, r5, r6, lr}
   14678:	mov	r4, r1
   1467c:	mov	r5, r0
   14680:	mov	r0, r1
   14684:	bl	14270 <strspn@plt+0x3254>
   14688:	mov	r2, r4
   1468c:	mov	r1, r5
   14690:	pop	{r4, r5, r6, lr}
   14694:	b	10df4 <memcpy@plt>
   14698:	push	{r4, r5, r6, lr}
   1469c:	mov	r4, r1
   146a0:	mov	r5, r0
   146a4:	mov	r0, r1
   146a8:	bl	14284 <strspn@plt+0x3268>
   146ac:	mov	r2, r4
   146b0:	mov	r1, r5
   146b4:	pop	{r4, r5, r6, lr}
   146b8:	b	10df4 <memcpy@plt>
   146bc:	push	{r4, r5, r6, lr}
   146c0:	mov	r5, r0
   146c4:	add	r0, r1, #1
   146c8:	mov	r4, r1
   146cc:	bl	14284 <strspn@plt+0x3268>
   146d0:	mov	r2, #0
   146d4:	mov	r1, r5
   146d8:	strb	r2, [r0, r4]
   146dc:	mov	r2, r4
   146e0:	pop	{r4, r5, r6, lr}
   146e4:	b	10df4 <memcpy@plt>
   146e8:	push	{r4, lr}
   146ec:	mov	r4, r0
   146f0:	bl	10f2c <strlen@plt>
   146f4:	add	r1, r0, #1
   146f8:	mov	r0, r4
   146fc:	pop	{r4, lr}
   14700:	b	14674 <strspn@plt+0x3658>
   14704:	ldr	r3, [pc, #44]	; 14738 <strspn@plt+0x371c>
   14708:	push	{r4, lr}
   1470c:	mov	r2, #5
   14710:	ldr	r1, [pc, #36]	; 1473c <strspn@plt+0x3720>
   14714:	mov	r0, #0
   14718:	ldr	r4, [r3]
   1471c:	bl	10e3c <dcgettext@plt>
   14720:	ldr	r2, [pc, #24]	; 14740 <strspn@plt+0x3724>
   14724:	mov	r1, #0
   14728:	mov	r3, r0
   1472c:	mov	r0, r4
   14730:	bl	10eb4 <error@plt>
   14734:	bl	11010 <abort@plt>
   14738:	andeq	r7, r2, r4, lsl #2
   1473c:	andeq	r5, r1, r5, lsl #31
   14740:			; <UNDEFINED> instruction: 0x00015abf
   14744:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   14748:	mov	r7, r0
   1474c:	mov	r9, r3
   14750:	mov	r5, r1
   14754:	mov	r8, r2
   14758:	bl	10f44 <__errno_location@plt>
   1475c:	mov	r4, #0
   14760:	add	r1, sp, #4
   14764:	str	r4, [r0]
   14768:	mov	r6, r0
   1476c:	mov	r0, r7
   14770:	blx	r9
   14774:	ldr	r3, [sp, #4]
   14778:	cmp	r7, r3
   1477c:	beq	147ac <strspn@plt+0x3790>
   14780:	cmp	r5, r4
   14784:	bne	147b4 <strspn@plt+0x3798>
   14788:	ldrb	r2, [r3]
   1478c:	cmp	r2, r4
   14790:	movne	r0, r5
   14794:	bne	147dc <strspn@plt+0x37c0>
   14798:	vcmp.f64	d0, #0.0
   1479c:	vmrs	APSR_nzcv, fpscr
   147a0:	bne	147c4 <strspn@plt+0x37a8>
   147a4:	mov	r0, #1
   147a8:	b	147dc <strspn@plt+0x37c0>
   147ac:	mov	r0, r4
   147b0:	b	147d0 <strspn@plt+0x37b4>
   147b4:	vcmp.f64	d0, #0.0
   147b8:	vmrs	APSR_nzcv, fpscr
   147bc:	moveq	r0, #1
   147c0:	beq	147d8 <strspn@plt+0x37bc>
   147c4:	ldr	r0, [r6]
   147c8:	subs	r0, r0, #34	; 0x22
   147cc:	movne	r0, #1
   147d0:	cmp	r5, #0
   147d4:	beq	147dc <strspn@plt+0x37c0>
   147d8:	str	r3, [r5]
   147dc:	vstr	d0, [r8]
   147e0:	add	sp, sp, #12
   147e4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   147e8:	cmp	r1, #0
   147ec:	cmpne	r0, #0
   147f0:	moveq	r1, #1
   147f4:	moveq	r0, r1
   147f8:	umull	r2, r3, r0, r1
   147fc:	adds	r3, r3, #0
   14800:	movne	r3, #1
   14804:	cmp	r2, #0
   14808:	blt	14818 <strspn@plt+0x37fc>
   1480c:	cmp	r3, #0
   14810:	bne	14818 <strspn@plt+0x37fc>
   14814:	b	10d70 <calloc@plt>
   14818:	push	{r4, lr}
   1481c:	bl	10f44 <__errno_location@plt>
   14820:	mov	r3, #12
   14824:	str	r3, [r0]
   14828:	mov	r0, #0
   1482c:	pop	{r4, pc}
   14830:	cmp	r0, #0
   14834:	mov	r3, #0
   14838:	moveq	r0, #1
   1483c:	adds	r3, r3, #0
   14840:	movne	r3, #1
   14844:	cmp	r0, #0
   14848:	blt	14858 <strspn@plt+0x383c>
   1484c:	cmp	r3, #0
   14850:	bne	14858 <strspn@plt+0x383c>
   14854:	b	10ecc <malloc@plt>
   14858:	push	{r4, lr}
   1485c:	bl	10f44 <__errno_location@plt>
   14860:	mov	r3, #12
   14864:	str	r3, [r0]
   14868:	mov	r0, #0
   1486c:	pop	{r4, pc}
   14870:	cmp	r0, #0
   14874:	push	{r4, lr}
   14878:	mov	r4, r1
   1487c:	bne	1488c <strspn@plt+0x3870>
   14880:	mov	r0, r1
   14884:	pop	{r4, lr}
   14888:	b	14830 <strspn@plt+0x3814>
   1488c:	cmp	r1, #0
   14890:	bne	148a0 <strspn@plt+0x3884>
   14894:	bl	126d4 <strspn@plt+0x16b8>
   14898:	mov	r0, #0
   1489c:	pop	{r4, pc}
   148a0:	cmp	r1, #0
   148a4:	blt	148b4 <strspn@plt+0x3898>
   148a8:	mov	r3, #0
   148ac:	cmp	r3, r3
   148b0:	beq	148c4 <strspn@plt+0x38a8>
   148b4:	bl	10f44 <__errno_location@plt>
   148b8:	mov	r3, #12
   148bc:	str	r3, [r0]
   148c0:	b	14898 <strspn@plt+0x387c>
   148c4:	pop	{r4, lr}
   148c8:	b	10e48 <realloc@plt>
   148cc:	andeq	r0, r0, r0
   148d0:	push	{r4, r5, r6, r7, r8, lr}
   148d4:	mov	r6, r0
   148d8:	ldr	r4, [pc, #144]	; 14970 <strspn@plt+0x3954>
   148dc:	vpush	{d8}
   148e0:	mov	r5, r1
   148e4:	ldr	r2, [r4]
   148e8:	cmp	r2, #0
   148ec:	bne	14900 <strspn@plt+0x38e4>
   148f0:	ldr	r1, [pc, #124]	; 14974 <strspn@plt+0x3958>
   148f4:	ldr	r0, [pc, #124]	; 14978 <strspn@plt+0x395c>
   148f8:	bl	10fd4 <newlocale@plt>
   148fc:	str	r0, [r4]
   14900:	ldr	r0, [r4]
   14904:	cmp	r0, #0
   14908:	bne	14924 <strspn@plt+0x3908>
   1490c:	vldr	d8, [pc, #84]	; 14968 <strspn@plt+0x394c>
   14910:	cmp	r5, #0
   14914:	strne	r6, [r5]
   14918:	vmov.f64	d0, d8
   1491c:	vpop	{d8}
   14920:	pop	{r4, r5, r6, r7, r8, pc}
   14924:	bl	10d94 <uselocale@plt>
   14928:	subs	r7, r0, #0
   1492c:	beq	1490c <strspn@plt+0x38f0>
   14930:	mov	r1, r5
   14934:	mov	r0, r6
   14938:	bl	10e0c <strtold@plt>
   1493c:	vmov.f64	d8, d0
   14940:	bl	10f44 <__errno_location@plt>
   14944:	ldr	r5, [r0]
   14948:	mov	r4, r0
   1494c:	mov	r0, r7
   14950:	bl	10d94 <uselocale@plt>
   14954:	cmp	r0, #0
   14958:	strne	r5, [r4]
   1495c:	bne	14918 <strspn@plt+0x38fc>
   14960:	bl	11010 <abort@plt>
   14964:	nop			; (mov r0, r0)
	...
   14970:	andeq	r7, r2, r8, asr #5
   14974:	ldrdeq	r5, [r1], -fp
   14978:			; <UNDEFINED> instruction: 0x00001fbf
   1497c:	push	{r4, r5, r6, lr}
   14980:	mov	r4, r0
   14984:	bl	10e90 <__fpending@plt>
   14988:	mov	r5, r0
   1498c:	mov	r0, r4
   14990:	bl	10e9c <ferror_unlocked@plt>
   14994:	mov	r6, r0
   14998:	mov	r0, r4
   1499c:	bl	149ec <strspn@plt+0x39d0>
   149a0:	cmp	r6, #0
   149a4:	mov	r4, r0
   149a8:	bne	149d4 <strspn@plt+0x39b8>
   149ac:	cmp	r0, #0
   149b0:	beq	149cc <strspn@plt+0x39b0>
   149b4:	cmp	r5, #0
   149b8:	bne	149e4 <strspn@plt+0x39c8>
   149bc:	bl	10f44 <__errno_location@plt>
   149c0:	ldr	r4, [r0]
   149c4:	subs	r4, r4, #9
   149c8:	mvnne	r4, #0
   149cc:	mov	r0, r4
   149d0:	pop	{r4, r5, r6, pc}
   149d4:	cmp	r0, #0
   149d8:	bne	149e4 <strspn@plt+0x39c8>
   149dc:	bl	10f44 <__errno_location@plt>
   149e0:	str	r4, [r0]
   149e4:	mvn	r4, #0
   149e8:	b	149cc <strspn@plt+0x39b0>
   149ec:	push	{r0, r1, r2, r4, r5, lr}
   149f0:	mov	r4, r0
   149f4:	bl	10f80 <fileno@plt>
   149f8:	cmp	r0, #0
   149fc:	mov	r0, r4
   14a00:	bge	14a10 <strspn@plt+0x39f4>
   14a04:	add	sp, sp, #12
   14a08:	pop	{r4, r5, lr}
   14a0c:	b	10f98 <fclose@plt>
   14a10:	bl	10ee4 <__freading@plt>
   14a14:	cmp	r0, #0
   14a18:	bne	14a54 <strspn@plt+0x3a38>
   14a1c:	mov	r0, r4
   14a20:	bl	14a94 <strspn@plt+0x3a78>
   14a24:	cmp	r0, #0
   14a28:	bne	14a88 <strspn@plt+0x3a6c>
   14a2c:	mov	r5, #0
   14a30:	mov	r0, r4
   14a34:	bl	10f98 <fclose@plt>
   14a38:	cmp	r5, #0
   14a3c:	beq	14a4c <strspn@plt+0x3a30>
   14a40:	bl	10f44 <__errno_location@plt>
   14a44:	str	r5, [r0]
   14a48:	mvn	r0, #0
   14a4c:	add	sp, sp, #12
   14a50:	pop	{r4, r5, pc}
   14a54:	mov	r0, r4
   14a58:	bl	10f80 <fileno@plt>
   14a5c:	mov	r3, #1
   14a60:	str	r3, [sp]
   14a64:	mov	r2, #0
   14a68:	mov	r3, #0
   14a6c:	bl	10e6c <lseek64@plt>
   14a70:	mvn	r3, #0
   14a74:	mvn	r2, #0
   14a78:	cmp	r1, r3
   14a7c:	cmpeq	r0, r2
   14a80:	bne	14a1c <strspn@plt+0x3a00>
   14a84:	b	14a2c <strspn@plt+0x3a10>
   14a88:	bl	10f44 <__errno_location@plt>
   14a8c:	ldr	r5, [r0]
   14a90:	b	14a30 <strspn@plt+0x3a14>
   14a94:	push	{r0, r1, r4, lr}
   14a98:	subs	r4, r0, #0
   14a9c:	bne	14ab0 <strspn@plt+0x3a94>
   14aa0:	mov	r0, r4
   14aa4:	add	sp, sp, #8
   14aa8:	pop	{r4, lr}
   14aac:	b	10dc4 <fflush@plt>
   14ab0:	bl	10ee4 <__freading@plt>
   14ab4:	cmp	r0, #0
   14ab8:	beq	14aa0 <strspn@plt+0x3a84>
   14abc:	ldr	r3, [r4]
   14ac0:	tst	r3, #256	; 0x100
   14ac4:	beq	14aa0 <strspn@plt+0x3a84>
   14ac8:	mov	r3, #1
   14acc:	str	r3, [sp]
   14ad0:	mov	r2, #0
   14ad4:	mov	r3, #0
   14ad8:	mov	r0, r4
   14adc:	bl	14ae4 <strspn@plt+0x3ac8>
   14ae0:	b	14aa0 <strspn@plt+0x3a84>
   14ae4:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
   14ae8:	mov	r4, r0
   14aec:	ldmib	r0, {ip, lr}
   14af0:	ldr	r8, [sp, #32]
   14af4:	cmp	lr, ip
   14af8:	bne	14b64 <strspn@plt+0x3b48>
   14afc:	ldr	lr, [r0, #20]
   14b00:	ldr	ip, [r0, #16]
   14b04:	cmp	lr, ip
   14b08:	bne	14b64 <strspn@plt+0x3b48>
   14b0c:	ldr	r5, [r0, #36]	; 0x24
   14b10:	cmp	r5, #0
   14b14:	bne	14b64 <strspn@plt+0x3b48>
   14b18:	mov	r6, r2
   14b1c:	mov	r7, r3
   14b20:	bl	10f80 <fileno@plt>
   14b24:	mov	r2, r6
   14b28:	mov	r3, r7
   14b2c:	str	r8, [sp]
   14b30:	bl	10e6c <lseek64@plt>
   14b34:	mvn	r3, #0
   14b38:	mvn	r2, #0
   14b3c:	cmp	r1, r3
   14b40:	cmpeq	r0, r2
   14b44:	mvneq	r0, #0
   14b48:	ldrne	r3, [r4]
   14b4c:	strdne	r0, [r4, #80]	; 0x50
   14b50:	movne	r0, r5
   14b54:	bicne	r3, r3, #16
   14b58:	strne	r3, [r4]
   14b5c:	add	sp, sp, #8
   14b60:	pop	{r4, r5, r6, r7, r8, pc}
   14b64:	str	r8, [sp, #32]
   14b68:	mov	r0, r4
   14b6c:	add	sp, sp, #8
   14b70:	pop	{r4, r5, r6, r7, r8, lr}
   14b74:	b	10fa4 <fseeko64@plt>
   14b78:	push	{r4, lr}
   14b7c:	mov	r0, #14
   14b80:	bl	10fc8 <nl_langinfo@plt>
   14b84:	ldr	r3, [pc, #24]	; 14ba4 <strspn@plt+0x3b88>
   14b88:	cmp	r0, #0
   14b8c:	moveq	r0, r3
   14b90:	ldr	r3, [pc, #16]	; 14ba8 <strspn@plt+0x3b8c>
   14b94:	ldrb	r2, [r0]
   14b98:	cmp	r2, #0
   14b9c:	moveq	r0, r3
   14ba0:	pop	{r4, pc}
   14ba4:	andeq	r5, r1, sl, lsr #18
   14ba8:	muleq	r1, r6, pc	; <UNPREDICTABLE>
   14bac:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   14bb0:	subs	r5, r0, #0
   14bb4:	addeq	r5, sp, #4
   14bb8:	mov	r0, r5
   14bbc:	mov	r7, r2
   14bc0:	mov	r6, r1
   14bc4:	bl	10ea8 <mbrtowc@plt>
   14bc8:	cmp	r7, #0
   14bcc:	cmnne	r0, #3
   14bd0:	mov	r4, r0
   14bd4:	bls	14bf0 <strspn@plt+0x3bd4>
   14bd8:	mov	r0, #0
   14bdc:	bl	14c48 <strspn@plt+0x3c2c>
   14be0:	cmp	r0, #0
   14be4:	moveq	r4, #1
   14be8:	ldrbeq	r3, [r6]
   14bec:	streq	r3, [r5]
   14bf0:	mov	r0, r4
   14bf4:	add	sp, sp, #12
   14bf8:	pop	{r4, r5, r6, r7, pc}
   14bfc:	push	{r4, r5, r6, lr}
   14c00:	subs	r4, r2, #0
   14c04:	mov	r6, r0
   14c08:	mov	r5, r1
   14c0c:	beq	14c24 <strspn@plt+0x3c08>
   14c10:	mov	r1, r4
   14c14:	mvn	r0, #0
   14c18:	bl	14d28 <strspn@plt+0x3d0c>
   14c1c:	cmp	r0, r5
   14c20:	bcc	14c34 <strspn@plt+0x3c18>
   14c24:	mul	r1, r5, r4
   14c28:	mov	r0, r6
   14c2c:	pop	{r4, r5, r6, lr}
   14c30:	b	14870 <strspn@plt+0x3854>
   14c34:	bl	10f44 <__errno_location@plt>
   14c38:	mov	r3, #12
   14c3c:	str	r3, [r0]
   14c40:	mov	r0, #0
   14c44:	pop	{r4, r5, r6, pc}
   14c48:	push	{lr}		; (str lr, [sp, #-4]!)
   14c4c:	sub	sp, sp, #268	; 0x10c
   14c50:	ldr	r2, [pc, #64]	; 14c98 <strspn@plt+0x3c7c>
   14c54:	add	r1, sp, #4
   14c58:	bl	14ca4 <strspn@plt+0x3c88>
   14c5c:	cmp	r0, #0
   14c60:	movne	r0, #0
   14c64:	bne	14c90 <strspn@plt+0x3c74>
   14c68:	ldr	r1, [pc, #44]	; 14c9c <strspn@plt+0x3c80>
   14c6c:	add	r0, sp, #4
   14c70:	bl	10da0 <strcmp@plt>
   14c74:	cmp	r0, #0
   14c78:	beq	14c90 <strspn@plt+0x3c74>
   14c7c:	ldr	r1, [pc, #28]	; 14ca0 <strspn@plt+0x3c84>
   14c80:	add	r0, sp, #4
   14c84:	bl	10da0 <strcmp@plt>
   14c88:	adds	r0, r0, #0
   14c8c:	movne	r0, #1
   14c90:	add	sp, sp, #268	; 0x10c
   14c94:	pop	{pc}		; (ldr pc, [sp], #4)
   14c98:	andeq	r0, r0, r1, lsl #2
   14c9c:	ldrdeq	r5, [r1], -fp
   14ca0:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   14ca4:	push	{r4, r5, r6, lr}
   14ca8:	mov	r5, r1
   14cac:	mov	r1, #0
   14cb0:	mov	r4, r2
   14cb4:	bl	10fb0 <setlocale@plt>
   14cb8:	subs	r6, r0, #0
   14cbc:	bne	14cd0 <strspn@plt+0x3cb4>
   14cc0:	cmp	r4, #0
   14cc4:	strbne	r6, [r5]
   14cc8:	mov	r0, #22
   14ccc:	pop	{r4, r5, r6, pc}
   14cd0:	bl	10f2c <strlen@plt>
   14cd4:	cmp	r4, r0
   14cd8:	bls	14cf4 <strspn@plt+0x3cd8>
   14cdc:	add	r2, r0, #1
   14ce0:	mov	r1, r6
   14ce4:	mov	r0, r5
   14ce8:	bl	10df4 <memcpy@plt>
   14cec:	mov	r0, #0
   14cf0:	pop	{r4, r5, r6, pc}
   14cf4:	cmp	r4, #0
   14cf8:	beq	14d18 <strspn@plt+0x3cfc>
   14cfc:	sub	r4, r4, #1
   14d00:	mov	r2, r4
   14d04:	mov	r1, r6
   14d08:	mov	r0, r5
   14d0c:	bl	10df4 <memcpy@plt>
   14d10:	mov	r3, #0
   14d14:	strb	r3, [r5, r4]
   14d18:	mov	r0, #34	; 0x22
   14d1c:	pop	{r4, r5, r6, pc}
   14d20:	mov	r1, #0
   14d24:	b	10fb0 <setlocale@plt>
   14d28:	subs	r2, r1, #1
   14d2c:	bxeq	lr
   14d30:	bcc	14f08 <strspn@plt+0x3eec>
   14d34:	cmp	r0, r1
   14d38:	bls	14eec <strspn@plt+0x3ed0>
   14d3c:	tst	r1, r2
   14d40:	beq	14ef8 <strspn@plt+0x3edc>
   14d44:	clz	r3, r0
   14d48:	clz	r2, r1
   14d4c:	sub	r3, r2, r3
   14d50:	rsbs	r3, r3, #31
   14d54:	addne	r3, r3, r3, lsl #1
   14d58:	mov	r2, #0
   14d5c:	addne	pc, pc, r3, lsl #2
   14d60:	nop			; (mov r0, r0)
   14d64:	cmp	r0, r1, lsl #31
   14d68:	adc	r2, r2, r2
   14d6c:	subcs	r0, r0, r1, lsl #31
   14d70:	cmp	r0, r1, lsl #30
   14d74:	adc	r2, r2, r2
   14d78:	subcs	r0, r0, r1, lsl #30
   14d7c:	cmp	r0, r1, lsl #29
   14d80:	adc	r2, r2, r2
   14d84:	subcs	r0, r0, r1, lsl #29
   14d88:	cmp	r0, r1, lsl #28
   14d8c:	adc	r2, r2, r2
   14d90:	subcs	r0, r0, r1, lsl #28
   14d94:	cmp	r0, r1, lsl #27
   14d98:	adc	r2, r2, r2
   14d9c:	subcs	r0, r0, r1, lsl #27
   14da0:	cmp	r0, r1, lsl #26
   14da4:	adc	r2, r2, r2
   14da8:	subcs	r0, r0, r1, lsl #26
   14dac:	cmp	r0, r1, lsl #25
   14db0:	adc	r2, r2, r2
   14db4:	subcs	r0, r0, r1, lsl #25
   14db8:	cmp	r0, r1, lsl #24
   14dbc:	adc	r2, r2, r2
   14dc0:	subcs	r0, r0, r1, lsl #24
   14dc4:	cmp	r0, r1, lsl #23
   14dc8:	adc	r2, r2, r2
   14dcc:	subcs	r0, r0, r1, lsl #23
   14dd0:	cmp	r0, r1, lsl #22
   14dd4:	adc	r2, r2, r2
   14dd8:	subcs	r0, r0, r1, lsl #22
   14ddc:	cmp	r0, r1, lsl #21
   14de0:	adc	r2, r2, r2
   14de4:	subcs	r0, r0, r1, lsl #21
   14de8:	cmp	r0, r1, lsl #20
   14dec:	adc	r2, r2, r2
   14df0:	subcs	r0, r0, r1, lsl #20
   14df4:	cmp	r0, r1, lsl #19
   14df8:	adc	r2, r2, r2
   14dfc:	subcs	r0, r0, r1, lsl #19
   14e00:	cmp	r0, r1, lsl #18
   14e04:	adc	r2, r2, r2
   14e08:	subcs	r0, r0, r1, lsl #18
   14e0c:	cmp	r0, r1, lsl #17
   14e10:	adc	r2, r2, r2
   14e14:	subcs	r0, r0, r1, lsl #17
   14e18:	cmp	r0, r1, lsl #16
   14e1c:	adc	r2, r2, r2
   14e20:	subcs	r0, r0, r1, lsl #16
   14e24:	cmp	r0, r1, lsl #15
   14e28:	adc	r2, r2, r2
   14e2c:	subcs	r0, r0, r1, lsl #15
   14e30:	cmp	r0, r1, lsl #14
   14e34:	adc	r2, r2, r2
   14e38:	subcs	r0, r0, r1, lsl #14
   14e3c:	cmp	r0, r1, lsl #13
   14e40:	adc	r2, r2, r2
   14e44:	subcs	r0, r0, r1, lsl #13
   14e48:	cmp	r0, r1, lsl #12
   14e4c:	adc	r2, r2, r2
   14e50:	subcs	r0, r0, r1, lsl #12
   14e54:	cmp	r0, r1, lsl #11
   14e58:	adc	r2, r2, r2
   14e5c:	subcs	r0, r0, r1, lsl #11
   14e60:	cmp	r0, r1, lsl #10
   14e64:	adc	r2, r2, r2
   14e68:	subcs	r0, r0, r1, lsl #10
   14e6c:	cmp	r0, r1, lsl #9
   14e70:	adc	r2, r2, r2
   14e74:	subcs	r0, r0, r1, lsl #9
   14e78:	cmp	r0, r1, lsl #8
   14e7c:	adc	r2, r2, r2
   14e80:	subcs	r0, r0, r1, lsl #8
   14e84:	cmp	r0, r1, lsl #7
   14e88:	adc	r2, r2, r2
   14e8c:	subcs	r0, r0, r1, lsl #7
   14e90:	cmp	r0, r1, lsl #6
   14e94:	adc	r2, r2, r2
   14e98:	subcs	r0, r0, r1, lsl #6
   14e9c:	cmp	r0, r1, lsl #5
   14ea0:	adc	r2, r2, r2
   14ea4:	subcs	r0, r0, r1, lsl #5
   14ea8:	cmp	r0, r1, lsl #4
   14eac:	adc	r2, r2, r2
   14eb0:	subcs	r0, r0, r1, lsl #4
   14eb4:	cmp	r0, r1, lsl #3
   14eb8:	adc	r2, r2, r2
   14ebc:	subcs	r0, r0, r1, lsl #3
   14ec0:	cmp	r0, r1, lsl #2
   14ec4:	adc	r2, r2, r2
   14ec8:	subcs	r0, r0, r1, lsl #2
   14ecc:	cmp	r0, r1, lsl #1
   14ed0:	adc	r2, r2, r2
   14ed4:	subcs	r0, r0, r1, lsl #1
   14ed8:	cmp	r0, r1
   14edc:	adc	r2, r2, r2
   14ee0:	subcs	r0, r0, r1
   14ee4:	mov	r0, r2
   14ee8:	bx	lr
   14eec:	moveq	r0, #1
   14ef0:	movne	r0, #0
   14ef4:	bx	lr
   14ef8:	clz	r2, r1
   14efc:	rsb	r2, r2, #31
   14f00:	lsr	r0, r0, r2
   14f04:	bx	lr
   14f08:	cmp	r0, #0
   14f0c:	mvnne	r0, #0
   14f10:	b	15174 <strspn@plt+0x4158>
   14f14:	cmp	r1, #0
   14f18:	beq	14f08 <strspn@plt+0x3eec>
   14f1c:	push	{r0, r1, lr}
   14f20:	bl	14d28 <strspn@plt+0x3d0c>
   14f24:	pop	{r1, r2, lr}
   14f28:	mul	r3, r2, r0
   14f2c:	sub	r1, r1, r3
   14f30:	bx	lr
   14f34:	cmp	r1, #0
   14f38:	beq	15144 <strspn@plt+0x4128>
   14f3c:	eor	ip, r0, r1
   14f40:	rsbmi	r1, r1, #0
   14f44:	subs	r2, r1, #1
   14f48:	beq	15110 <strspn@plt+0x40f4>
   14f4c:	movs	r3, r0
   14f50:	rsbmi	r3, r0, #0
   14f54:	cmp	r3, r1
   14f58:	bls	1511c <strspn@plt+0x4100>
   14f5c:	tst	r1, r2
   14f60:	beq	1512c <strspn@plt+0x4110>
   14f64:	clz	r2, r3
   14f68:	clz	r0, r1
   14f6c:	sub	r2, r0, r2
   14f70:	rsbs	r2, r2, #31
   14f74:	addne	r2, r2, r2, lsl #1
   14f78:	mov	r0, #0
   14f7c:	addne	pc, pc, r2, lsl #2
   14f80:	nop			; (mov r0, r0)
   14f84:	cmp	r3, r1, lsl #31
   14f88:	adc	r0, r0, r0
   14f8c:	subcs	r3, r3, r1, lsl #31
   14f90:	cmp	r3, r1, lsl #30
   14f94:	adc	r0, r0, r0
   14f98:	subcs	r3, r3, r1, lsl #30
   14f9c:	cmp	r3, r1, lsl #29
   14fa0:	adc	r0, r0, r0
   14fa4:	subcs	r3, r3, r1, lsl #29
   14fa8:	cmp	r3, r1, lsl #28
   14fac:	adc	r0, r0, r0
   14fb0:	subcs	r3, r3, r1, lsl #28
   14fb4:	cmp	r3, r1, lsl #27
   14fb8:	adc	r0, r0, r0
   14fbc:	subcs	r3, r3, r1, lsl #27
   14fc0:	cmp	r3, r1, lsl #26
   14fc4:	adc	r0, r0, r0
   14fc8:	subcs	r3, r3, r1, lsl #26
   14fcc:	cmp	r3, r1, lsl #25
   14fd0:	adc	r0, r0, r0
   14fd4:	subcs	r3, r3, r1, lsl #25
   14fd8:	cmp	r3, r1, lsl #24
   14fdc:	adc	r0, r0, r0
   14fe0:	subcs	r3, r3, r1, lsl #24
   14fe4:	cmp	r3, r1, lsl #23
   14fe8:	adc	r0, r0, r0
   14fec:	subcs	r3, r3, r1, lsl #23
   14ff0:	cmp	r3, r1, lsl #22
   14ff4:	adc	r0, r0, r0
   14ff8:	subcs	r3, r3, r1, lsl #22
   14ffc:	cmp	r3, r1, lsl #21
   15000:	adc	r0, r0, r0
   15004:	subcs	r3, r3, r1, lsl #21
   15008:	cmp	r3, r1, lsl #20
   1500c:	adc	r0, r0, r0
   15010:	subcs	r3, r3, r1, lsl #20
   15014:	cmp	r3, r1, lsl #19
   15018:	adc	r0, r0, r0
   1501c:	subcs	r3, r3, r1, lsl #19
   15020:	cmp	r3, r1, lsl #18
   15024:	adc	r0, r0, r0
   15028:	subcs	r3, r3, r1, lsl #18
   1502c:	cmp	r3, r1, lsl #17
   15030:	adc	r0, r0, r0
   15034:	subcs	r3, r3, r1, lsl #17
   15038:	cmp	r3, r1, lsl #16
   1503c:	adc	r0, r0, r0
   15040:	subcs	r3, r3, r1, lsl #16
   15044:	cmp	r3, r1, lsl #15
   15048:	adc	r0, r0, r0
   1504c:	subcs	r3, r3, r1, lsl #15
   15050:	cmp	r3, r1, lsl #14
   15054:	adc	r0, r0, r0
   15058:	subcs	r3, r3, r1, lsl #14
   1505c:	cmp	r3, r1, lsl #13
   15060:	adc	r0, r0, r0
   15064:	subcs	r3, r3, r1, lsl #13
   15068:	cmp	r3, r1, lsl #12
   1506c:	adc	r0, r0, r0
   15070:	subcs	r3, r3, r1, lsl #12
   15074:	cmp	r3, r1, lsl #11
   15078:	adc	r0, r0, r0
   1507c:	subcs	r3, r3, r1, lsl #11
   15080:	cmp	r3, r1, lsl #10
   15084:	adc	r0, r0, r0
   15088:	subcs	r3, r3, r1, lsl #10
   1508c:	cmp	r3, r1, lsl #9
   15090:	adc	r0, r0, r0
   15094:	subcs	r3, r3, r1, lsl #9
   15098:	cmp	r3, r1, lsl #8
   1509c:	adc	r0, r0, r0
   150a0:	subcs	r3, r3, r1, lsl #8
   150a4:	cmp	r3, r1, lsl #7
   150a8:	adc	r0, r0, r0
   150ac:	subcs	r3, r3, r1, lsl #7
   150b0:	cmp	r3, r1, lsl #6
   150b4:	adc	r0, r0, r0
   150b8:	subcs	r3, r3, r1, lsl #6
   150bc:	cmp	r3, r1, lsl #5
   150c0:	adc	r0, r0, r0
   150c4:	subcs	r3, r3, r1, lsl #5
   150c8:	cmp	r3, r1, lsl #4
   150cc:	adc	r0, r0, r0
   150d0:	subcs	r3, r3, r1, lsl #4
   150d4:	cmp	r3, r1, lsl #3
   150d8:	adc	r0, r0, r0
   150dc:	subcs	r3, r3, r1, lsl #3
   150e0:	cmp	r3, r1, lsl #2
   150e4:	adc	r0, r0, r0
   150e8:	subcs	r3, r3, r1, lsl #2
   150ec:	cmp	r3, r1, lsl #1
   150f0:	adc	r0, r0, r0
   150f4:	subcs	r3, r3, r1, lsl #1
   150f8:	cmp	r3, r1
   150fc:	adc	r0, r0, r0
   15100:	subcs	r3, r3, r1
   15104:	cmp	ip, #0
   15108:	rsbmi	r0, r0, #0
   1510c:	bx	lr
   15110:	teq	ip, r0
   15114:	rsbmi	r0, r0, #0
   15118:	bx	lr
   1511c:	movcc	r0, #0
   15120:	asreq	r0, ip, #31
   15124:	orreq	r0, r0, #1
   15128:	bx	lr
   1512c:	clz	r2, r1
   15130:	rsb	r2, r2, #31
   15134:	cmp	ip, #0
   15138:	lsr	r0, r3, r2
   1513c:	rsbmi	r0, r0, #0
   15140:	bx	lr
   15144:	cmp	r0, #0
   15148:	mvngt	r0, #-2147483648	; 0x80000000
   1514c:	movlt	r0, #-2147483648	; 0x80000000
   15150:	b	15174 <strspn@plt+0x4158>
   15154:	cmp	r1, #0
   15158:	beq	15144 <strspn@plt+0x4128>
   1515c:	push	{r0, r1, lr}
   15160:	bl	14f3c <strspn@plt+0x3f20>
   15164:	pop	{r1, r2, lr}
   15168:	mul	r3, r2, r0
   1516c:	sub	r1, r1, r3
   15170:	bx	lr
   15174:	push	{r1, lr}
   15178:	mov	r0, #8
   1517c:	bl	10d88 <raise@plt>
   15180:	pop	{r1, pc}
   15184:	andeq	r0, r0, r0
   15188:	vmov	d7, r0, r1
   1518c:	vldr	d6, [pc, #44]	; 151c0 <strspn@plt+0x41a4>
   15190:	vldr	d5, [pc, #48]	; 151c8 <strspn@plt+0x41ac>
   15194:	mov	r0, #0
   15198:	vmul.f64	d6, d7, d6
   1519c:	vcvt.u32.f64	s12, d6
   151a0:	vcvt.f64.u32	d4, s12
   151a4:	vmov	r1, s12
   151a8:	vmls.f64	d7, d4, d5
   151ac:	vcvt.u32.f64	s14, d7
   151b0:	vmov	r3, s14
   151b4:	orr	r0, r0, r3
   151b8:	bx	lr
   151bc:	nop			; (mov r0, r0)
   151c0:	andeq	r0, r0, r0
   151c4:	ldclcc	0, cr0, [r0]
   151c8:	andeq	r0, r0, r0
   151cc:	mvnsmi	r0, r0
   151d0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   151d4:	mov	r7, r0
   151d8:	ldr	r6, [pc, #72]	; 15228 <strspn@plt+0x420c>
   151dc:	ldr	r5, [pc, #72]	; 1522c <strspn@plt+0x4210>
   151e0:	add	r6, pc, r6
   151e4:	add	r5, pc, r5
   151e8:	sub	r6, r6, r5
   151ec:	mov	r8, r1
   151f0:	mov	r9, r2
   151f4:	bl	10d50 <calloc@plt-0x20>
   151f8:	asrs	r6, r6, #2
   151fc:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   15200:	mov	r4, #0
   15204:	add	r4, r4, #1
   15208:	ldr	r3, [r5], #4
   1520c:	mov	r2, r9
   15210:	mov	r1, r8
   15214:	mov	r0, r7
   15218:	blx	r3
   1521c:	cmp	r6, r4
   15220:	bne	15204 <strspn@plt+0x41e8>
   15224:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15228:	andeq	r1, r1, r8, lsr #26
   1522c:	andeq	r1, r1, r0, lsr #26
   15230:	bx	lr
   15234:	ldr	r3, [pc, #12]	; 15248 <strspn@plt+0x422c>
   15238:	mov	r1, #0
   1523c:	add	r3, pc, r3
   15240:	ldr	r2, [r3]
   15244:	b	10f5c <__cxa_atexit@plt>
   15248:			; <UNDEFINED> instruction: 0x00011eb8

Disassembly of section .fini:

0001524c <.fini>:
   1524c:	push	{r3, lr}
   15250:	pop	{r3, pc}
