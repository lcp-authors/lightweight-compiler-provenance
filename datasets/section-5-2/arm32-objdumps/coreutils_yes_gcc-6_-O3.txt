
../repos/coreutils/src/yes:     file format elf32-littlearm


Disassembly of section .init:

00010af4 <.init>:
   10af4:	push	{r3, lr}
   10af8:	bl	10f94 <abort@plt+0x27c>
   10afc:	pop	{r3, pc}

Disassembly of section .plt:

00010b00 <calloc@plt-0x14>:
   10b00:	push	{lr}		; (str lr, [sp, #-4]!)
   10b04:	ldr	lr, [pc, #4]	; 10b10 <calloc@plt-0x4>
   10b08:	add	lr, pc, lr
   10b0c:	ldr	pc, [lr, #8]!
   10b10:	strdeq	r7, [r1], -r0

00010b14 <calloc@plt>:
   10b14:	add	ip, pc, #0, 12
   10b18:	add	ip, ip, #94208	; 0x17000
   10b1c:	ldr	pc, [ip, #1264]!	; 0x4f0

00010b20 <fputs_unlocked@plt>:
   10b20:	add	ip, pc, #0, 12
   10b24:	add	ip, ip, #94208	; 0x17000
   10b28:	ldr	pc, [ip, #1256]!	; 0x4e8

00010b2c <raise@plt>:
   10b2c:	add	ip, pc, #0, 12
   10b30:	add	ip, ip, #94208	; 0x17000
   10b34:	ldr	pc, [ip, #1248]!	; 0x4e0

00010b38 <strcmp@plt>:
   10b38:	add	ip, pc, #0, 12
   10b3c:	add	ip, ip, #94208	; 0x17000
   10b40:	ldr	pc, [ip, #1240]!	; 0x4d8

00010b44 <fflush@plt>:
   10b44:	add	ip, pc, #0, 12
   10b48:	add	ip, ip, #94208	; 0x17000
   10b4c:	ldr	pc, [ip, #1232]!	; 0x4d0

00010b50 <free@plt>:
   10b50:	add	ip, pc, #0, 12
   10b54:	add	ip, ip, #94208	; 0x17000
   10b58:	ldr	pc, [ip, #1224]!	; 0x4c8

00010b5c <_exit@plt>:
   10b5c:	add	ip, pc, #0, 12
   10b60:	add	ip, ip, #94208	; 0x17000
   10b64:	ldr	pc, [ip, #1216]!	; 0x4c0

00010b68 <memcpy@plt>:
   10b68:	add	ip, pc, #0, 12
   10b6c:	add	ip, ip, #94208	; 0x17000
   10b70:	ldr	pc, [ip, #1208]!	; 0x4b8

00010b74 <mbsinit@plt>:
   10b74:	add	ip, pc, #0, 12
   10b78:	add	ip, ip, #94208	; 0x17000
   10b7c:	ldr	pc, [ip, #1200]!	; 0x4b0

00010b80 <memcmp@plt>:
   10b80:	add	ip, pc, #0, 12
   10b84:	add	ip, ip, #94208	; 0x17000
   10b88:	ldr	pc, [ip, #1192]!	; 0x4a8

00010b8c <fputc_unlocked@plt>:
   10b8c:	add	ip, pc, #0, 12
   10b90:	add	ip, ip, #94208	; 0x17000
   10b94:	ldr	pc, [ip, #1184]!	; 0x4a0

00010b98 <dcgettext@plt>:
   10b98:	add	ip, pc, #0, 12
   10b9c:	add	ip, ip, #94208	; 0x17000
   10ba0:	ldr	pc, [ip, #1176]!	; 0x498

00010ba4 <realloc@plt>:
   10ba4:	add	ip, pc, #0, 12
   10ba8:	add	ip, ip, #94208	; 0x17000
   10bac:	ldr	pc, [ip, #1168]!	; 0x490

00010bb0 <textdomain@plt>:
   10bb0:	add	ip, pc, #0, 12
   10bb4:	add	ip, ip, #94208	; 0x17000
   10bb8:	ldr	pc, [ip, #1160]!	; 0x488

00010bbc <iswprint@plt>:
   10bbc:	add	ip, pc, #0, 12
   10bc0:	add	ip, ip, #94208	; 0x17000
   10bc4:	ldr	pc, [ip, #1152]!	; 0x480

00010bc8 <fwrite@plt>:
   10bc8:	add	ip, pc, #0, 12
   10bcc:	add	ip, ip, #94208	; 0x17000
   10bd0:	ldr	pc, [ip, #1144]!	; 0x478

00010bd4 <lseek64@plt>:
   10bd4:	add	ip, pc, #0, 12
   10bd8:	add	ip, ip, #94208	; 0x17000
   10bdc:	ldr	pc, [ip, #1136]!	; 0x470

00010be0 <__ctype_get_mb_cur_max@plt>:
   10be0:	add	ip, pc, #0, 12
   10be4:	add	ip, ip, #94208	; 0x17000
   10be8:	ldr	pc, [ip, #1128]!	; 0x468

00010bec <__fpending@plt>:
   10bec:	add	ip, pc, #0, 12
   10bf0:	add	ip, ip, #94208	; 0x17000
   10bf4:	ldr	pc, [ip, #1120]!	; 0x460

00010bf8 <mbrtowc@plt>:
   10bf8:	add	ip, pc, #0, 12
   10bfc:	add	ip, ip, #94208	; 0x17000
   10c00:	ldr	pc, [ip, #1112]!	; 0x458

00010c04 <error@plt>:
   10c04:	add	ip, pc, #0, 12
   10c08:	add	ip, ip, #94208	; 0x17000
   10c0c:	ldr	pc, [ip, #1104]!	; 0x450

00010c10 <malloc@plt>:
   10c10:	add	ip, pc, #0, 12
   10c14:	add	ip, ip, #94208	; 0x17000
   10c18:	ldr	pc, [ip, #1096]!	; 0x448

00010c1c <__libc_start_main@plt>:
   10c1c:	add	ip, pc, #0, 12
   10c20:	add	ip, ip, #94208	; 0x17000
   10c24:	ldr	pc, [ip, #1088]!	; 0x440

00010c28 <__freading@plt>:
   10c28:	add	ip, pc, #0, 12
   10c2c:	add	ip, ip, #94208	; 0x17000
   10c30:	ldr	pc, [ip, #1080]!	; 0x438

00010c34 <__gmon_start__@plt>:
   10c34:	add	ip, pc, #0, 12
   10c38:	add	ip, ip, #94208	; 0x17000
   10c3c:	ldr	pc, [ip, #1072]!	; 0x430

00010c40 <getopt_long@plt>:
   10c40:	add	ip, pc, #0, 12
   10c44:	add	ip, ip, #94208	; 0x17000
   10c48:	ldr	pc, [ip, #1064]!	; 0x428

00010c4c <__ctype_b_loc@plt>:
   10c4c:	add	ip, pc, #0, 12
   10c50:	add	ip, ip, #94208	; 0x17000
   10c54:	ldr	pc, [ip, #1056]!	; 0x420

00010c58 <exit@plt>:
   10c58:	add	ip, pc, #0, 12
   10c5c:	add	ip, ip, #94208	; 0x17000
   10c60:	ldr	pc, [ip, #1048]!	; 0x418

00010c64 <strlen@plt>:
   10c64:	add	ip, pc, #0, 12
   10c68:	add	ip, ip, #94208	; 0x17000
   10c6c:	ldr	pc, [ip, #1040]!	; 0x410

00010c70 <__errno_location@plt>:
   10c70:	add	ip, pc, #0, 12
   10c74:	add	ip, ip, #94208	; 0x17000
   10c78:	ldr	pc, [ip, #1032]!	; 0x408

00010c7c <__cxa_atexit@plt>:
   10c7c:	add	ip, pc, #0, 12
   10c80:	add	ip, ip, #94208	; 0x17000
   10c84:	ldr	pc, [ip, #1024]!	; 0x400

00010c88 <memset@plt>:
   10c88:	add	ip, pc, #0, 12
   10c8c:	add	ip, ip, #94208	; 0x17000
   10c90:	ldr	pc, [ip, #1016]!	; 0x3f8

00010c94 <__printf_chk@plt>:
   10c94:	add	ip, pc, #0, 12
   10c98:	add	ip, ip, #94208	; 0x17000
   10c9c:	ldr	pc, [ip, #1008]!	; 0x3f0

00010ca0 <write@plt>:
   10ca0:	add	ip, pc, #0, 12
   10ca4:	add	ip, ip, #94208	; 0x17000
   10ca8:	ldr	pc, [ip, #1000]!	; 0x3e8

00010cac <fileno@plt>:
   10cac:	add	ip, pc, #0, 12
   10cb0:	add	ip, ip, #94208	; 0x17000
   10cb4:	ldr	pc, [ip, #992]!	; 0x3e0

00010cb8 <__fprintf_chk@plt>:
   10cb8:	add	ip, pc, #0, 12
   10cbc:	add	ip, ip, #94208	; 0x17000
   10cc0:	ldr	pc, [ip, #984]!	; 0x3d8

00010cc4 <fclose@plt>:
   10cc4:	add	ip, pc, #0, 12
   10cc8:	add	ip, ip, #94208	; 0x17000
   10ccc:	ldr	pc, [ip, #976]!	; 0x3d0

00010cd0 <fseeko64@plt>:
   10cd0:	add	ip, pc, #0, 12
   10cd4:	add	ip, ip, #94208	; 0x17000
   10cd8:	ldr	pc, [ip, #968]!	; 0x3c8

00010cdc <setlocale@plt>:
   10cdc:	add	ip, pc, #0, 12
   10ce0:	add	ip, ip, #94208	; 0x17000
   10ce4:	ldr	pc, [ip, #960]!	; 0x3c0

00010ce8 <strrchr@plt>:
   10ce8:	add	ip, pc, #0, 12
   10cec:	add	ip, ip, #94208	; 0x17000
   10cf0:	ldr	pc, [ip, #952]!	; 0x3b8

00010cf4 <nl_langinfo@plt>:
   10cf4:	add	ip, pc, #0, 12
   10cf8:	add	ip, ip, #94208	; 0x17000
   10cfc:	ldr	pc, [ip, #944]!	; 0x3b0

00010d00 <bindtextdomain@plt>:
   10d00:	add	ip, pc, #0, 12
   10d04:	add	ip, ip, #94208	; 0x17000
   10d08:	ldr	pc, [ip, #936]!	; 0x3a8

00010d0c <strncmp@plt>:
   10d0c:	add	ip, pc, #0, 12
   10d10:	add	ip, ip, #94208	; 0x17000
   10d14:	ldr	pc, [ip, #928]!	; 0x3a0

00010d18 <abort@plt>:
   10d18:	add	ip, pc, #0, 12
   10d1c:	add	ip, ip, #94208	; 0x17000
   10d20:	ldr	pc, [ip, #920]!	; 0x398

Disassembly of section .text:

00010d24 <.text>:
   10d24:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10d28:	mov	r4, r0
   10d2c:	sub	sp, sp, #28
   10d30:	ldr	r0, [r1]
   10d34:	mov	r9, r1
   10d38:	bl	11650 <abort@plt+0x938>
   10d3c:	ldr	r1, [pc, #484]	; 10f28 <abort@plt+0x210>
   10d40:	mov	r0, #6
   10d44:	bl	10cdc <setlocale@plt>
   10d48:	ldr	r1, [pc, #476]	; 10f2c <abort@plt+0x214>
   10d4c:	ldr	r0, [pc, #476]	; 10f30 <abort@plt+0x218>
   10d50:	bl	10d00 <bindtextdomain@plt>
   10d54:	ldr	r0, [pc, #468]	; 10f30 <abort@plt+0x218>
   10d58:	bl	10bb0 <textdomain@plt>
   10d5c:	ldr	r0, [pc, #464]	; 10f34 <abort@plt+0x21c>
   10d60:	bl	17194 <abort@plt+0x647c>
   10d64:	ldr	r3, [pc, #460]	; 10f38 <abort@plt+0x220>
   10d68:	ldr	lr, [pc, #460]	; 10f3c <abort@plt+0x224>
   10d6c:	ldr	ip, [pc, #460]	; 10f40 <abort@plt+0x228>
   10d70:	ldr	r1, [r3]
   10d74:	mov	r2, #0
   10d78:	mov	r3, #1
   10d7c:	str	r1, [sp]
   10d80:	str	r2, [sp, #16]
   10d84:	str	r3, [sp, #4]
   10d88:	mov	r1, r9
   10d8c:	ldr	r3, [pc, #432]	; 10f44 <abort@plt+0x22c>
   10d90:	mov	r0, r4
   10d94:	str	lr, [sp, #12]
   10d98:	str	ip, [sp, #8]
   10d9c:	ldr	r2, [pc, #420]	; 10f48 <abort@plt+0x230>
   10da0:	bl	11578 <abort@plt+0x860>
   10da4:	ldr	r3, [pc, #416]	; 10f4c <abort@plt+0x234>
   10da8:	add	r8, r9, r4, lsl #2
   10dac:	mov	fp, #1
   10db0:	ldr	sl, [r3]
   10db4:	mov	r7, #0
   10db8:	cmp	r4, sl
   10dbc:	add	r6, r9, sl, lsl #2
   10dc0:	ldreq	r3, [pc, #392]	; 10f50 <abort@plt+0x238>
   10dc4:	addeq	r8, r8, #4
   10dc8:	streq	r3, [r9, sl, lsl #2]
   10dcc:	mov	r5, r6
   10dd0:	b	10de4 <abort@plt+0xcc>
   10dd4:	ldr	r3, [r5]
   10dd8:	add	r4, r4, r0
   10ddc:	cmp	r3, r4
   10de0:	movne	fp, #0
   10de4:	ldr	r4, [r5], #4
   10de8:	mov	r0, r4
   10dec:	bl	10c64 <strlen@plt>
   10df0:	cmp	r8, r5
   10df4:	add	r0, r0, #1
   10df8:	add	r7, r7, r0
   10dfc:	bhi	10dd4 <abort@plt+0xbc>
   10e00:	cmp	r7, #4096	; 0x1000
   10e04:	bhi	10ef0 <abort@plt+0x1d8>
   10e08:	mov	r7, #8192	; 0x2000
   10e0c:	mov	r0, r7
   10e10:	bl	16140 <abort@plt+0x5428>
   10e14:	mov	r4, #0
   10e18:	mov	r9, #32
   10e1c:	mov	r5, r0
   10e20:	ldr	fp, [r6], #4
   10e24:	mov	r0, fp
   10e28:	bl	10c64 <strlen@plt>
   10e2c:	mov	r1, fp
   10e30:	mov	sl, r0
   10e34:	mov	r2, r0
   10e38:	add	r0, r5, r4
   10e3c:	bl	10b68 <memcpy@plt>
   10e40:	add	r0, r4, sl
   10e44:	cmp	r8, r6
   10e48:	strb	r9, [r5, r0]
   10e4c:	add	r4, r0, #1
   10e50:	add	r3, r5, r0
   10e54:	bhi	10e20 <abort@plt+0x108>
   10e58:	mov	r2, #10
   10e5c:	mov	r0, r7
   10e60:	strb	r2, [r3]
   10e64:	mov	r1, r4
   10e68:	bl	16cd4 <abort@plt+0x5fbc>
   10e6c:	subs	r6, r0, #1
   10e70:	mov	r7, r0
   10e74:	beq	10ea4 <abort@plt+0x18c>
   10e78:	add	r3, r5, r4
   10e7c:	mov	r0, r3
   10e80:	mov	r2, r4
   10e84:	mov	r1, r5
   10e88:	bl	10b68 <memcpy@plt>
   10e8c:	subs	r6, r6, #1
   10e90:	add	r3, r0, r4
   10e94:	bne	10e7c <abort@plt+0x164>
   10e98:	sub	r7, r7, #2
   10e9c:	mul	r7, r4, r7
   10ea0:	add	r4, r7, r4, lsl #1
   10ea4:	mov	r6, #1
   10ea8:	mov	r2, r4
   10eac:	mov	r1, r5
   10eb0:	mov	r0, r6
   10eb4:	bl	11450 <abort@plt+0x738>
   10eb8:	cmp	r0, r4
   10ebc:	beq	10ea8 <abort@plt+0x190>
   10ec0:	bl	10c70 <__errno_location@plt>
   10ec4:	mov	r2, #5
   10ec8:	ldr	r1, [pc, #132]	; 10f54 <abort@plt+0x23c>
   10ecc:	ldr	r4, [r0]
   10ed0:	mov	r0, #0
   10ed4:	bl	10b98 <dcgettext@plt>
   10ed8:	mov	r1, r4
   10edc:	mov	r2, r0
   10ee0:	mov	r0, #0
   10ee4:	bl	10c04 <error@plt>
   10ee8:	mov	r0, #1
   10eec:	bl	10c58 <exit@plt>
   10ef0:	cmp	fp, #0
   10ef4:	beq	10e0c <abort@plt+0xf4>
   10ef8:	ldr	r5, [r9, sl, lsl #2]
   10efc:	mov	r4, #0
   10f00:	mov	r9, #32
   10f04:	ldr	r0, [r6], #4
   10f08:	bl	10c64 <strlen@plt>
   10f0c:	cmp	r8, r6
   10f10:	add	r0, r4, r0
   10f14:	add	r4, r0, #1
   10f18:	strb	r9, [r5, r0]
   10f1c:	add	r3, r5, r0
   10f20:	bhi	10f04 <abort@plt+0x1ec>
   10f24:	b	10e58 <abort@plt+0x140>
   10f28:	andeq	r7, r1, r4, lsl #5
   10f2c:	ldrdeq	r7, [r1], -ip
   10f30:	andeq	r7, r1, r4, lsr r3
   10f34:	andeq	r1, r1, ip, ror #6
   10f38:	andeq	r8, r2, r8, asr #1
   10f3c:	strdeq	r7, [r1], -r4
   10f40:	andeq	r1, r1, r0, lsl #1
   10f44:	andeq	r7, r1, r0, lsr r3
   10f48:	strdeq	r7, [r1], -r0
   10f4c:	andeq	r8, r2, r8, lsl r1
   10f50:	andeq	r7, r1, r4, lsl #8
   10f54:	andeq	r7, r1, r8, lsl #8
   10f58:	mov	fp, #0
   10f5c:	mov	lr, #0
   10f60:	pop	{r1}		; (ldr r1, [sp], #4)
   10f64:	mov	r2, sp
   10f68:	push	{r2}		; (str r2, [sp, #-4]!)
   10f6c:	push	{r0}		; (str r0, [sp, #-4]!)
   10f70:	ldr	ip, [pc, #16]	; 10f88 <abort@plt+0x270>
   10f74:	push	{ip}		; (str ip, [sp, #-4]!)
   10f78:	ldr	r0, [pc, #12]	; 10f8c <abort@plt+0x274>
   10f7c:	ldr	r3, [pc, #12]	; 10f90 <abort@plt+0x278>
   10f80:	bl	10c1c <__libc_start_main@plt>
   10f84:	bl	10d18 <abort@plt>
   10f88:	muleq	r1, r0, r1
   10f8c:	andeq	r0, r1, r4, lsr #26
   10f90:	andeq	r7, r1, r0, lsr r1
   10f94:	ldr	r3, [pc, #20]	; 10fb0 <abort@plt+0x298>
   10f98:	ldr	r2, [pc, #20]	; 10fb4 <abort@plt+0x29c>
   10f9c:	add	r3, pc, r3
   10fa0:	ldr	r2, [r3, r2]
   10fa4:	cmp	r2, #0
   10fa8:	bxeq	lr
   10fac:	b	10c34 <__gmon_start__@plt>
   10fb0:	andeq	r7, r1, ip, asr r0
   10fb4:	strheq	r0, [r0], -ip
   10fb8:	ldr	r3, [pc, #28]	; 10fdc <abort@plt+0x2c4>
   10fbc:	ldr	r0, [pc, #28]	; 10fe0 <abort@plt+0x2c8>
   10fc0:	sub	r3, r3, r0
   10fc4:	cmp	r3, #6
   10fc8:	bxls	lr
   10fcc:	ldr	r3, [pc, #16]	; 10fe4 <abort@plt+0x2cc>
   10fd0:	cmp	r3, #0
   10fd4:	bxeq	lr
   10fd8:	bx	r3
   10fdc:	andeq	r8, r2, r3, lsl r1
   10fe0:	andeq	r8, r2, r0, lsl r1
   10fe4:	andeq	r0, r0, r0
   10fe8:	ldr	r1, [pc, #36]	; 11014 <abort@plt+0x2fc>
   10fec:	ldr	r0, [pc, #36]	; 11018 <abort@plt+0x300>
   10ff0:	sub	r1, r1, r0
   10ff4:	asr	r1, r1, #2
   10ff8:	add	r1, r1, r1, lsr #31
   10ffc:	asrs	r1, r1, #1
   11000:	bxeq	lr
   11004:	ldr	r3, [pc, #16]	; 1101c <abort@plt+0x304>
   11008:	cmp	r3, #0
   1100c:	bxeq	lr
   11010:	bx	r3
   11014:	andeq	r8, r2, r0, lsl r1
   11018:	andeq	r8, r2, r0, lsl r1
   1101c:	andeq	r0, r0, r0
   11020:	push	{r4, lr}
   11024:	ldr	r4, [pc, #24]	; 11044 <abort@plt+0x32c>
   11028:	ldrb	r3, [r4]
   1102c:	cmp	r3, #0
   11030:	popne	{r4, pc}
   11034:	bl	10fb8 <abort@plt+0x2a0>
   11038:	mov	r3, #1
   1103c:	strb	r3, [r4]
   11040:	pop	{r4, pc}
   11044:	andeq	r8, r2, ip, lsr #2
   11048:	ldr	r0, [pc, #40]	; 11078 <abort@plt+0x360>
   1104c:	ldr	r3, [r0]
   11050:	cmp	r3, #0
   11054:	bne	1105c <abort@plt+0x344>
   11058:	b	10fe8 <abort@plt+0x2d0>
   1105c:	ldr	r3, [pc, #24]	; 1107c <abort@plt+0x364>
   11060:	cmp	r3, #0
   11064:	beq	11058 <abort@plt+0x340>
   11068:	push	{r4, lr}
   1106c:	blx	r3
   11070:	pop	{r4, lr}
   11074:	b	10fe8 <abort@plt+0x2d0>
   11078:	andeq	r7, r2, r4, lsl pc
   1107c:	andeq	r0, r0, r0
   11080:	subs	r6, r0, #0
   11084:	push	{r7, lr}
   11088:	sub	sp, sp, #56	; 0x38
   1108c:	beq	110c8 <abort@plt+0x3b0>
   11090:	ldr	r3, [pc, #616]	; 11300 <abort@plt+0x5e8>
   11094:	mov	r2, #5
   11098:	ldr	r1, [pc, #612]	; 11304 <abort@plt+0x5ec>
   1109c:	mov	r0, #0
   110a0:	ldr	r4, [r3]
   110a4:	bl	10b98 <dcgettext@plt>
   110a8:	ldr	r3, [pc, #600]	; 11308 <abort@plt+0x5f0>
   110ac:	mov	r1, #1
   110b0:	ldr	r3, [r3]
   110b4:	mov	r2, r0
   110b8:	mov	r0, r4
   110bc:	bl	10cb8 <__fprintf_chk@plt>
   110c0:	mov	r0, r6
   110c4:	bl	10c58 <exit@plt>
   110c8:	mov	r2, #5
   110cc:	ldr	r1, [pc, #568]	; 1130c <abort@plt+0x5f4>
   110d0:	bl	10b98 <dcgettext@plt>
   110d4:	ldr	r3, [pc, #556]	; 11308 <abort@plt+0x5f0>
   110d8:	ldr	r7, [pc, #560]	; 11310 <abort@plt+0x5f8>
   110dc:	ldr	r4, [pc, #560]	; 11314 <abort@plt+0x5fc>
   110e0:	ldr	r3, [r3]
   110e4:	mov	r2, r3
   110e8:	mov	r1, r0
   110ec:	mov	r0, #1
   110f0:	bl	10c94 <__printf_chk@plt>
   110f4:	mov	r2, #5
   110f8:	ldr	r1, [pc, #536]	; 11318 <abort@plt+0x600>
   110fc:	mov	r0, r6
   11100:	bl	10b98 <dcgettext@plt>
   11104:	ldr	r1, [r7]
   11108:	bl	10b20 <fputs_unlocked@plt>
   1110c:	mov	r2, #5
   11110:	ldr	r1, [pc, #516]	; 1131c <abort@plt+0x604>
   11114:	mov	r0, r6
   11118:	bl	10b98 <dcgettext@plt>
   1111c:	ldr	r1, [r7]
   11120:	bl	10b20 <fputs_unlocked@plt>
   11124:	mov	r2, #5
   11128:	ldr	r1, [pc, #496]	; 11320 <abort@plt+0x608>
   1112c:	mov	r0, r6
   11130:	bl	10b98 <dcgettext@plt>
   11134:	ldr	r1, [r7]
   11138:	bl	10b20 <fputs_unlocked@plt>
   1113c:	ldm	r4!, {r0, r1, r2, r3}
   11140:	mov	lr, sp
   11144:	stmia	lr!, {r0, r1, r2, r3}
   11148:	ldm	r4!, {r0, r1, r2, r3}
   1114c:	ldr	ip, [sp]
   11150:	stmia	lr!, {r0, r1, r2, r3}
   11154:	cmp	ip, #0
   11158:	ldm	r4!, {r0, r1, r2, r3}
   1115c:	stmia	lr!, {r0, r1, r2, r3}
   11160:	ldm	r4, {r0, r1}
   11164:	moveq	r4, sp
   11168:	stm	lr, {r0, r1}
   1116c:	beq	1119c <abort@plt+0x484>
   11170:	ldr	r5, [pc, #428]	; 11324 <abort@plt+0x60c>
   11174:	mov	r4, sp
   11178:	b	11188 <abort@plt+0x470>
   1117c:	ldr	ip, [r4, #8]!
   11180:	cmp	ip, #0
   11184:	beq	1119c <abort@plt+0x484>
   11188:	mov	r1, ip
   1118c:	mov	r0, r5
   11190:	bl	10b38 <strcmp@plt>
   11194:	cmp	r0, #0
   11198:	bne	1117c <abort@plt+0x464>
   1119c:	ldr	r4, [r4, #4]
   111a0:	mov	r2, #5
   111a4:	cmp	r4, #0
   111a8:	ldr	r1, [pc, #376]	; 11328 <abort@plt+0x610>
   111ac:	beq	11254 <abort@plt+0x53c>
   111b0:	mov	r0, #0
   111b4:	bl	10b98 <dcgettext@plt>
   111b8:	ldr	r3, [pc, #364]	; 1132c <abort@plt+0x614>
   111bc:	ldr	r2, [pc, #364]	; 11330 <abort@plt+0x618>
   111c0:	mov	r1, r0
   111c4:	mov	r0, #1
   111c8:	bl	10c94 <__printf_chk@plt>
   111cc:	mov	r1, #0
   111d0:	mov	r0, #5
   111d4:	bl	10cdc <setlocale@plt>
   111d8:	cmp	r0, #0
   111dc:	ldreq	r5, [pc, #320]	; 11324 <abort@plt+0x60c>
   111e0:	beq	111fc <abort@plt+0x4e4>
   111e4:	mov	r2, #3
   111e8:	ldr	r1, [pc, #324]	; 11334 <abort@plt+0x61c>
   111ec:	bl	10d0c <strncmp@plt>
   111f0:	ldr	r5, [pc, #300]	; 11324 <abort@plt+0x60c>
   111f4:	cmp	r0, #0
   111f8:	bne	112e4 <abort@plt+0x5cc>
   111fc:	mov	r2, #5
   11200:	ldr	r1, [pc, #304]	; 11338 <abort@plt+0x620>
   11204:	mov	r0, #0
   11208:	bl	10b98 <dcgettext@plt>
   1120c:	ldr	r3, [pc, #272]	; 11324 <abort@plt+0x60c>
   11210:	ldr	r2, [pc, #276]	; 1132c <abort@plt+0x614>
   11214:	mov	r1, r0
   11218:	mov	r0, #1
   1121c:	bl	10c94 <__printf_chk@plt>
   11220:	mov	r2, #5
   11224:	ldr	r1, [pc, #272]	; 1133c <abort@plt+0x624>
   11228:	mov	r0, #0
   1122c:	bl	10b98 <dcgettext@plt>
   11230:	ldr	r2, [pc, #264]	; 11340 <abort@plt+0x628>
   11234:	cmp	r4, r5
   11238:	ldr	r3, [pc, #260]	; 11344 <abort@plt+0x62c>
   1123c:	movne	r3, r2
   11240:	mov	r1, r0
   11244:	mov	r2, r4
   11248:	mov	r0, #1
   1124c:	bl	10c94 <__printf_chk@plt>
   11250:	b	110c0 <abort@plt+0x3a8>
   11254:	mov	r0, r4
   11258:	bl	10b98 <dcgettext@plt>
   1125c:	ldr	r3, [pc, #200]	; 1132c <abort@plt+0x614>
   11260:	ldr	r2, [pc, #200]	; 11330 <abort@plt+0x618>
   11264:	mov	r1, r0
   11268:	mov	r0, #1
   1126c:	bl	10c94 <__printf_chk@plt>
   11270:	mov	r1, r4
   11274:	mov	r0, #5
   11278:	bl	10cdc <setlocale@plt>
   1127c:	cmp	r0, #0
   11280:	beq	11298 <abort@plt+0x580>
   11284:	mov	r2, #3
   11288:	ldr	r1, [pc, #164]	; 11334 <abort@plt+0x61c>
   1128c:	bl	10d0c <strncmp@plt>
   11290:	cmp	r0, #0
   11294:	bne	112dc <abort@plt+0x5c4>
   11298:	mov	r2, #5
   1129c:	ldr	r1, [pc, #148]	; 11338 <abort@plt+0x620>
   112a0:	mov	r0, #0
   112a4:	bl	10b98 <dcgettext@plt>
   112a8:	ldr	r3, [pc, #116]	; 11324 <abort@plt+0x60c>
   112ac:	ldr	r2, [pc, #120]	; 1132c <abort@plt+0x614>
   112b0:	mov	r4, r3
   112b4:	mov	r1, r0
   112b8:	mov	r0, #1
   112bc:	bl	10c94 <__printf_chk@plt>
   112c0:	ldr	r1, [pc, #116]	; 1133c <abort@plt+0x624>
   112c4:	mov	r2, #5
   112c8:	mov	r0, #0
   112cc:	bl	10b98 <dcgettext@plt>
   112d0:	ldr	r3, [pc, #108]	; 11344 <abort@plt+0x62c>
   112d4:	mov	r1, r0
   112d8:	b	11244 <abort@plt+0x52c>
   112dc:	ldr	r5, [pc, #64]	; 11324 <abort@plt+0x60c>
   112e0:	mov	r4, r5
   112e4:	mov	r2, #5
   112e8:	ldr	r1, [pc, #88]	; 11348 <abort@plt+0x630>
   112ec:	mov	r0, #0
   112f0:	bl	10b98 <dcgettext@plt>
   112f4:	ldr	r1, [r7]
   112f8:	bl	10b20 <fputs_unlocked@plt>
   112fc:	b	111fc <abort@plt+0x4e4>
   11300:	andeq	r8, r2, r0, lsr #2
   11304:	strdeq	r7, [r1], -r4
   11308:	andeq	r8, r2, r8, lsr r1
   1130c:	andeq	r7, r1, ip, lsl r2
   11310:	andeq	r8, r2, r4, lsr #2
   11314:			; <UNDEFINED> instruction: 0x000171b8
   11318:	andeq	r7, r1, r4, asr #4
   1131c:	andeq	r7, r1, r8, lsl #5
   11320:			; <UNDEFINED> instruction: 0x000172b8
   11324:	strdeq	r7, [r1], -r0
   11328:	strdeq	r7, [r1], -r0
   1132c:	andeq	r7, r1, r8, lsl #6
   11330:	andeq	r7, r1, r0, lsr r3
   11334:	andeq	r7, r1, r0, asr #6
   11338:	andeq	r7, r1, ip, lsl #7
   1133c:	andeq	r7, r1, r8, lsr #7
   11340:	andeq	r7, r1, r4, lsl #5
   11344:	andeq	r7, r1, r0, lsr #8
   11348:	andeq	r7, r1, r4, asr #6
   1134c:	ldr	r3, [pc, #4]	; 11358 <abort@plt+0x640>
   11350:	str	r0, [r3]
   11354:	bx	lr
   11358:	andeq	r8, r2, r0, lsr r1
   1135c:	ldr	r3, [pc, #4]	; 11368 <abort@plt+0x650>
   11360:	strb	r0, [r3, #4]
   11364:	bx	lr
   11368:	andeq	r8, r2, r0, lsr r1
   1136c:	ldr	r3, [pc, #192]	; 11434 <abort@plt+0x71c>
   11370:	push	{r4, r5, r6, lr}
   11374:	sub	sp, sp, #8
   11378:	ldr	r0, [r3]
   1137c:	bl	16898 <abort@plt+0x5b80>
   11380:	cmp	r0, #0
   11384:	beq	113a8 <abort@plt+0x690>
   11388:	ldr	r4, [pc, #168]	; 11438 <abort@plt+0x720>
   1138c:	ldrb	r3, [r4, #4]
   11390:	cmp	r3, #0
   11394:	beq	113c4 <abort@plt+0x6ac>
   11398:	bl	10c70 <__errno_location@plt>
   1139c:	ldr	r3, [r0]
   113a0:	cmp	r3, #32
   113a4:	bne	113c4 <abort@plt+0x6ac>
   113a8:	ldr	r3, [pc, #140]	; 1143c <abort@plt+0x724>
   113ac:	ldr	r0, [r3]
   113b0:	bl	16898 <abort@plt+0x5b80>
   113b4:	cmp	r0, #0
   113b8:	bne	1140c <abort@plt+0x6f4>
   113bc:	add	sp, sp, #8
   113c0:	pop	{r4, r5, r6, pc}
   113c4:	mov	r2, #5
   113c8:	ldr	r1, [pc, #112]	; 11440 <abort@plt+0x728>
   113cc:	mov	r0, #0
   113d0:	bl	10b98 <dcgettext@plt>
   113d4:	ldr	r4, [r4]
   113d8:	cmp	r4, #0
   113dc:	mov	r5, r0
   113e0:	beq	11418 <abort@plt+0x700>
   113e4:	bl	10c70 <__errno_location@plt>
   113e8:	ldr	r6, [r0]
   113ec:	mov	r0, r4
   113f0:	bl	142bc <abort@plt+0x35a4>
   113f4:	mov	r1, r6
   113f8:	str	r5, [sp]
   113fc:	ldr	r2, [pc, #64]	; 11444 <abort@plt+0x72c>
   11400:	mov	r3, r0
   11404:	mov	r0, #0
   11408:	bl	10c04 <error@plt>
   1140c:	ldr	r3, [pc, #52]	; 11448 <abort@plt+0x730>
   11410:	ldr	r0, [r3]
   11414:	bl	10b5c <_exit@plt>
   11418:	bl	10c70 <__errno_location@plt>
   1141c:	mov	r3, r5
   11420:	ldr	r2, [pc, #36]	; 1144c <abort@plt+0x734>
   11424:	ldr	r1, [r0]
   11428:	mov	r0, r4
   1142c:	bl	10c04 <error@plt>
   11430:	b	1140c <abort@plt+0x6f4>
   11434:	andeq	r8, r2, r4, lsr #2
   11438:	andeq	r8, r2, r0, lsr r1
   1143c:	andeq	r8, r2, r0, lsr #2
   11440:	muleq	r1, r4, r4
   11444:	andeq	r7, r1, r0, lsr #9
   11448:	andeq	r8, r2, ip, asr #1
   1144c:	andeq	r7, r1, r4, lsr #9
   11450:	push	{r4, r5, r6, r7, r8, lr}
   11454:	subs	r4, r2, #0
   11458:	beq	114b8 <abort@plt+0x7a0>
   1145c:	mov	r7, r0
   11460:	mov	r5, r1
   11464:	mov	r6, #0
   11468:	b	11484 <abort@plt+0x76c>
   1146c:	cmp	r0, #0
   11470:	beq	114a4 <abort@plt+0x78c>
   11474:	subs	r4, r4, r0
   11478:	add	r6, r6, r0
   1147c:	add	r5, r5, r0
   11480:	beq	1149c <abort@plt+0x784>
   11484:	mov	r2, r4
   11488:	mov	r1, r5
   1148c:	mov	r0, r7
   11490:	bl	1569c <abort@plt+0x4984>
   11494:	cmn	r0, #1
   11498:	bne	1146c <abort@plt+0x754>
   1149c:	mov	r0, r6
   114a0:	pop	{r4, r5, r6, r7, r8, pc}
   114a4:	bl	10c70 <__errno_location@plt>
   114a8:	mov	r3, #28
   114ac:	str	r3, [r0]
   114b0:	mov	r0, r6
   114b4:	pop	{r4, r5, r6, r7, r8, pc}
   114b8:	mov	r6, r4
   114bc:	b	1149c <abort@plt+0x784>
   114c0:	push	{r4, r5, r6, r7, r8, lr}
   114c4:	cmp	r0, #2
   114c8:	ldr	r4, [pc, #148]	; 11564 <abort@plt+0x84c>
   114cc:	mov	r5, #0
   114d0:	sub	sp, sp, #16
   114d4:	ldr	r6, [r4]
   114d8:	str	r5, [r4]
   114dc:	beq	114f8 <abort@plt+0x7e0>
   114e0:	ldr	r3, [pc, #128]	; 11568 <abort@plt+0x850>
   114e4:	mov	r2, #0
   114e8:	str	r6, [r4]
   114ec:	str	r2, [r3]
   114f0:	add	sp, sp, #16
   114f4:	pop	{r4, r5, r6, r7, r8, pc}
   114f8:	mov	r8, r3
   114fc:	mov	r7, r2
   11500:	str	r5, [sp]
   11504:	ldr	r3, [pc, #96]	; 1156c <abort@plt+0x854>
   11508:	ldr	r2, [pc, #96]	; 11570 <abort@plt+0x858>
   1150c:	bl	10c40 <getopt_long@plt>
   11510:	cmn	r0, #1
   11514:	beq	114e0 <abort@plt+0x7c8>
   11518:	cmp	r0, #104	; 0x68
   1151c:	beq	11554 <abort@plt+0x83c>
   11520:	cmp	r0, #118	; 0x76
   11524:	bne	114e0 <abort@plt+0x7c8>
   11528:	ldr	r3, [pc, #68]	; 11574 <abort@plt+0x85c>
   1152c:	add	ip, sp, #48	; 0x30
   11530:	mov	r2, r8
   11534:	ldr	r0, [r3]
   11538:	mov	r1, r7
   1153c:	str	ip, [sp]
   11540:	ldr	r3, [sp, #40]	; 0x28
   11544:	str	ip, [sp, #12]
   11548:	bl	15adc <abort@plt+0x4dc4>
   1154c:	mov	r0, r5
   11550:	bl	10c58 <exit@plt>
   11554:	mov	r0, r5
   11558:	ldr	r3, [sp, #44]	; 0x2c
   1155c:	blx	r3
   11560:	b	114e0 <abort@plt+0x7c8>
   11564:	andeq	r8, r2, r8, lsr #2
   11568:	andeq	r8, r2, r8, lsl r1
   1156c:	andeq	r7, r1, r8, lsr #9
   11570:	ldrdeq	r7, [r1], -r8
   11574:	andeq	r8, r2, r4, lsr #2
   11578:	push	{r4, r5, r6, r7, r8, lr}
   1157c:	sub	sp, sp, #16
   11580:	ldr	r5, [pc, #176]	; 11638 <abort@plt+0x920>
   11584:	ldrb	r8, [sp, #44]	; 0x2c
   11588:	ldr	r4, [pc, #172]	; 1163c <abort@plt+0x924>
   1158c:	ldr	lr, [pc, #172]	; 11640 <abort@plt+0x928>
   11590:	cmp	r8, #0
   11594:	mov	r6, r2
   11598:	movne	r2, r5
   1159c:	mov	r5, #0
   115a0:	mov	ip, #1
   115a4:	moveq	r2, lr
   115a8:	mov	r7, r3
   115ac:	str	r5, [sp]
   115b0:	ldr	r3, [pc, #140]	; 11644 <abort@plt+0x92c>
   115b4:	ldr	r8, [r4]
   115b8:	str	ip, [r4]
   115bc:	bl	10c40 <getopt_long@plt>
   115c0:	cmn	r0, #1
   115c4:	beq	11614 <abort@plt+0x8fc>
   115c8:	cmp	r0, #104	; 0x68
   115cc:	beq	11620 <abort@plt+0x908>
   115d0:	cmp	r0, #118	; 0x76
   115d4:	bne	11604 <abort@plt+0x8ec>
   115d8:	ldr	r3, [pc, #104]	; 11648 <abort@plt+0x930>
   115dc:	add	ip, sp, #52	; 0x34
   115e0:	mov	r2, r7
   115e4:	ldr	r0, [r3]
   115e8:	mov	r1, r6
   115ec:	str	ip, [sp]
   115f0:	ldr	r3, [sp, #40]	; 0x28
   115f4:	str	ip, [sp, #12]
   115f8:	bl	15adc <abort@plt+0x4dc4>
   115fc:	mov	r0, r5
   11600:	bl	10c58 <exit@plt>
   11604:	ldr	r3, [pc, #64]	; 1164c <abort@plt+0x934>
   11608:	ldr	r0, [r3]
   1160c:	ldr	r3, [sp, #48]	; 0x30
   11610:	blx	r3
   11614:	str	r8, [r4]
   11618:	add	sp, sp, #16
   1161c:	pop	{r4, r5, r6, r7, r8, pc}
   11620:	mov	r0, r5
   11624:	ldr	r3, [sp, #48]	; 0x30
   11628:	blx	r3
   1162c:	str	r8, [r4]
   11630:	add	sp, sp, #16
   11634:	pop	{r4, r5, r6, r7, r8, pc}
   11638:	andeq	r7, r1, r4, lsl #5
   1163c:	andeq	r8, r2, r8, lsr #2
   11640:	ldrdeq	r7, [r1], -r8
   11644:	andeq	r7, r1, r8, lsr #9
   11648:	andeq	r8, r2, r4, lsr #2
   1164c:	andeq	r8, r2, ip, asr #1
   11650:	push	{r4, r5, r6, lr}
   11654:	subs	r4, r0, #0
   11658:	beq	116cc <abort@plt+0x9b4>
   1165c:	mov	r1, #47	; 0x2f
   11660:	bl	10ce8 <strrchr@plt>
   11664:	subs	r5, r0, #0
   11668:	beq	116b8 <abort@plt+0x9a0>
   1166c:	add	r6, r5, #1
   11670:	sub	r3, r6, r4
   11674:	cmp	r3, #6
   11678:	ble	116b8 <abort@plt+0x9a0>
   1167c:	mov	r2, #7
   11680:	ldr	r1, [pc, #96]	; 116e8 <abort@plt+0x9d0>
   11684:	sub	r0, r5, #6
   11688:	bl	10d0c <strncmp@plt>
   1168c:	cmp	r0, #0
   11690:	bne	116b8 <abort@plt+0x9a0>
   11694:	mov	r2, #3
   11698:	ldr	r1, [pc, #76]	; 116ec <abort@plt+0x9d4>
   1169c:	mov	r0, r6
   116a0:	bl	10d0c <strncmp@plt>
   116a4:	cmp	r0, #0
   116a8:	movne	r4, r6
   116ac:	ldreq	r3, [pc, #60]	; 116f0 <abort@plt+0x9d8>
   116b0:	addeq	r4, r5, #4
   116b4:	streq	r4, [r3]
   116b8:	ldr	r2, [pc, #52]	; 116f4 <abort@plt+0x9dc>
   116bc:	ldr	r3, [pc, #52]	; 116f8 <abort@plt+0x9e0>
   116c0:	str	r4, [r2]
   116c4:	str	r4, [r3]
   116c8:	pop	{r4, r5, r6, pc}
   116cc:	ldr	r3, [pc, #40]	; 116fc <abort@plt+0x9e4>
   116d0:	mov	r2, #55	; 0x37
   116d4:	mov	r1, #1
   116d8:	ldr	r3, [r3]
   116dc:	ldr	r0, [pc, #28]	; 11700 <abort@plt+0x9e8>
   116e0:	bl	10bc8 <fwrite@plt>
   116e4:	bl	10d18 <abort@plt>
   116e8:	andeq	r7, r1, r4, lsr #10
   116ec:	andeq	r7, r1, ip, lsr #10
   116f0:	andeq	r8, r2, r0, lsl r1
   116f4:	andeq	r8, r2, r8, lsr r1
   116f8:	andeq	r8, r2, r4, lsl r1
   116fc:	andeq	r8, r2, r0, lsr #2
   11700:	andeq	r7, r1, ip, ror #9
   11704:	push	{r4, r5, r6, lr}
   11708:	mov	r4, r0
   1170c:	mov	r5, r1
   11710:	bl	16b0c <abort@plt+0x5df4>
   11714:	ldrb	r3, [r0]
   11718:	bic	r3, r3, #32
   1171c:	cmp	r3, #85	; 0x55
   11720:	bne	11780 <abort@plt+0xa68>
   11724:	ldrb	r3, [r0, #1]
   11728:	bic	r3, r3, #32
   1172c:	cmp	r3, #84	; 0x54
   11730:	bne	117bc <abort@plt+0xaa4>
   11734:	ldrb	r3, [r0, #2]
   11738:	bic	r3, r3, #32
   1173c:	cmp	r3, #70	; 0x46
   11740:	bne	117bc <abort@plt+0xaa4>
   11744:	ldrb	r3, [r0, #3]
   11748:	cmp	r3, #45	; 0x2d
   1174c:	bne	117bc <abort@plt+0xaa4>
   11750:	ldrb	r3, [r0, #4]
   11754:	cmp	r3, #56	; 0x38
   11758:	bne	117bc <abort@plt+0xaa4>
   1175c:	ldrb	r3, [r0, #5]
   11760:	cmp	r3, #0
   11764:	bne	117bc <abort@plt+0xaa4>
   11768:	ldrb	r2, [r4]
   1176c:	ldr	r3, [pc, #152]	; 1180c <abort@plt+0xaf4>
   11770:	ldr	r0, [pc, #152]	; 11810 <abort@plt+0xaf8>
   11774:	cmp	r2, #96	; 0x60
   11778:	movne	r0, r3
   1177c:	pop	{r4, r5, r6, pc}
   11780:	cmp	r3, #71	; 0x47
   11784:	bne	117bc <abort@plt+0xaa4>
   11788:	ldrb	r3, [r0, #1]
   1178c:	bic	r3, r3, #32
   11790:	cmp	r3, #66	; 0x42
   11794:	bne	117bc <abort@plt+0xaa4>
   11798:	ldrb	r3, [r0, #2]
   1179c:	cmp	r3, #49	; 0x31
   117a0:	bne	117bc <abort@plt+0xaa4>
   117a4:	ldrb	r3, [r0, #3]
   117a8:	cmp	r3, #56	; 0x38
   117ac:	bne	117bc <abort@plt+0xaa4>
   117b0:	ldrb	r3, [r0, #4]
   117b4:	cmp	r3, #48	; 0x30
   117b8:	beq	117d0 <abort@plt+0xab8>
   117bc:	ldr	r3, [pc, #80]	; 11814 <abort@plt+0xafc>
   117c0:	cmp	r5, #9
   117c4:	ldr	r0, [pc, #76]	; 11818 <abort@plt+0xb00>
   117c8:	movne	r0, r3
   117cc:	pop	{r4, r5, r6, pc}
   117d0:	ldrb	r3, [r0, #5]
   117d4:	cmp	r3, #51	; 0x33
   117d8:	bne	117bc <abort@plt+0xaa4>
   117dc:	ldrb	r3, [r0, #6]
   117e0:	cmp	r3, #48	; 0x30
   117e4:	bne	117bc <abort@plt+0xaa4>
   117e8:	ldrb	r3, [r0, #7]
   117ec:	cmp	r3, #0
   117f0:	bne	117bc <abort@plt+0xaa4>
   117f4:	ldrb	r2, [r4]
   117f8:	ldr	r3, [pc, #28]	; 1181c <abort@plt+0xb04>
   117fc:	ldr	r0, [pc, #28]	; 11820 <abort@plt+0xb08>
   11800:	cmp	r2, #96	; 0x60
   11804:	movne	r0, r3
   11808:	pop	{r4, r5, r6, pc}
   1180c:	andeq	r7, r1, r8, lsl #11
   11810:	andeq	r7, r1, r4, lsl #11
   11814:	muleq	r1, r8, r5
   11818:	muleq	r1, r4, r5
   1181c:	muleq	r1, r0, r5
   11820:	andeq	r7, r1, ip, lsl #11
   11824:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11828:	sub	sp, sp, #140	; 0x8c
   1182c:	mov	r9, r1
   11830:	str	r3, [sp, #24]
   11834:	mov	r3, #1
   11838:	mov	sl, r0
   1183c:	str	r2, [sp, #44]	; 0x2c
   11840:	str	r3, [sp, #28]
   11844:	bl	10be0 <__ctype_get_mb_cur_max@plt>
   11848:	ldr	r3, [sp, #180]	; 0xb4
   1184c:	mov	fp, r9
   11850:	mov	r9, sl
   11854:	lsr	r3, r3, #1
   11858:	and	r3, r3, #1
   1185c:	str	r3, [sp, #40]	; 0x28
   11860:	ldr	r3, [sp, #180]	; 0xb4
   11864:	mov	r2, #0
   11868:	and	r3, r3, #4
   1186c:	str	r3, [sp, #100]	; 0x64
   11870:	ldr	r3, [sp, #180]	; 0xb4
   11874:	str	r2, [sp, #76]	; 0x4c
   11878:	and	r3, r3, #1
   1187c:	str	r3, [sp, #96]	; 0x60
   11880:	str	r2, [sp, #36]	; 0x24
   11884:	str	r2, [sp, #56]	; 0x38
   11888:	str	r2, [sp, #68]	; 0x44
   1188c:	str	r2, [sp, #72]	; 0x48
   11890:	str	r2, [sp, #84]	; 0x54
   11894:	str	r0, [sp, #80]	; 0x50
   11898:	ldr	r3, [sp, #176]	; 0xb0
   1189c:	cmp	r3, #10
   118a0:	ldrls	pc, [pc, r3, lsl #2]
   118a4:	b	12a7c <abort@plt+0x1d64>
   118a8:	ldrdeq	r1, [r1], -r4
   118ac:	strdeq	r1, [r1], -r4
   118b0:	andeq	r1, r1, ip, asr #26
   118b4:	andeq	r1, r1, r8, lsr #24
   118b8:	andeq	r1, r1, r0, lsr #27
   118bc:	andeq	r1, r1, r0, lsl #27
   118c0:	andeq	r1, r1, r8, asr #24
   118c4:	andeq	r1, r1, ip, ror #24
   118c8:	muleq	r1, r4, ip
   118cc:	muleq	r1, r4, ip
   118d0:	muleq	r1, r4, ip
   118d4:	mov	r3, #0
   118d8:	ldr	r1, [sp, #56]	; 0x38
   118dc:	ldr	r2, [sp, #176]	; 0xb0
   118e0:	ldr	lr, [sp, #176]	; 0xb0
   118e4:	mov	r8, r3
   118e8:	mov	ip, r3
   118ec:	str	r3, [sp, #40]	; 0x28
   118f0:	mov	r3, r1
   118f4:	cmp	r2, #2
   118f8:	moveq	r3, #0
   118fc:	andne	r3, r3, #1
   11900:	mov	r0, r3
   11904:	str	r3, [sp, #92]	; 0x5c
   11908:	ldr	r3, [sp, #68]	; 0x44
   1190c:	sub	lr, lr, #2
   11910:	adds	r2, r3, #0
   11914:	movne	r2, #1
   11918:	and	r3, r1, ip
   1191c:	and	r3, r2, r3
   11920:	clz	lr, lr
   11924:	str	r3, [sp, #88]	; 0x58
   11928:	lsr	lr, lr, #5
   1192c:	mov	r3, ip
   11930:	and	r3, r3, lr
   11934:	mov	sl, #0
   11938:	and	r0, r2, r0
   1193c:	str	r3, [sp, #64]	; 0x40
   11940:	eor	r3, r1, #1
   11944:	str	lr, [sp, #52]	; 0x34
   11948:	str	r0, [sp, #48]	; 0x30
   1194c:	str	r3, [sp, #60]	; 0x3c
   11950:	ldr	r3, [sp, #24]
   11954:	cmn	r3, #1
   11958:	beq	11e88 <abort@plt+0x1170>
   1195c:	subs	r7, r3, sl
   11960:	movne	r7, #1
   11964:	cmp	r7, #0
   11968:	beq	11ea0 <abort@plt+0x1188>
   1196c:	ldr	r3, [sp, #48]	; 0x30
   11970:	cmp	r3, #0
   11974:	beq	1220c <abort@plt+0x14f4>
   11978:	ldr	r2, [sp, #68]	; 0x44
   1197c:	ldr	r1, [sp, #24]
   11980:	cmp	r2, #1
   11984:	mov	r3, r2
   11988:	movls	r3, #0
   1198c:	movhi	r3, #1
   11990:	cmn	r1, #1
   11994:	movne	r3, #0
   11998:	cmp	r3, #0
   1199c:	add	r4, sl, r2
   119a0:	beq	119b0 <abort@plt+0xc98>
   119a4:	ldr	r0, [sp, #44]	; 0x2c
   119a8:	bl	10c64 <strlen@plt>
   119ac:	str	r0, [sp, #24]
   119b0:	ldr	r3, [sp, #24]
   119b4:	cmp	r3, r4
   119b8:	ldr	r3, [sp, #44]	; 0x2c
   119bc:	add	r5, r3, sl
   119c0:	bcc	12214 <abort@plt+0x14fc>
   119c4:	mov	r0, r5
   119c8:	ldr	r2, [sp, #68]	; 0x44
   119cc:	ldr	r1, [sp, #72]	; 0x48
   119d0:	bl	10b80 <memcmp@plt>
   119d4:	cmp	r0, #0
   119d8:	bne	12214 <abort@plt+0x14fc>
   119dc:	ldr	r3, [sp, #40]	; 0x28
   119e0:	cmp	r3, #0
   119e4:	bne	12bd0 <abort@plt+0x1eb8>
   119e8:	ldrb	r4, [r5]
   119ec:	cmp	r4, #126	; 0x7e
   119f0:	ldrls	pc, [pc, r4, lsl #2]
   119f4:	b	12b0c <abort@plt+0x1df4>
   119f8:	andeq	r2, r1, ip, asr #1
   119fc:	andeq	r2, r1, ip, lsl #22
   11a00:	andeq	r2, r1, ip, lsl #22
   11a04:	andeq	r2, r1, ip, lsl #22
   11a08:	andeq	r2, r1, ip, lsl #22
   11a0c:	andeq	r2, r1, ip, lsl #22
   11a10:	andeq	r2, r1, ip, lsl #22
   11a14:	strheq	r2, [r1], -r8
   11a18:	andeq	r2, r1, r4, lsr #1
   11a1c:	andeq	r2, r1, r0, lsl #1
   11a20:	andeq	r2, r1, r0, rrx
   11a24:	muleq	r1, r0, r0
   11a28:	andeq	r1, r1, r8, asr #31
   11a2c:	strdeq	r2, [r1], -ip
   11a30:	andeq	r2, r1, ip, lsl #22
   11a34:	andeq	r2, r1, ip, lsl #22
   11a38:	andeq	r2, r1, ip, lsl #22
   11a3c:	andeq	r2, r1, ip, lsl #22
   11a40:	andeq	r2, r1, ip, lsl #22
   11a44:	andeq	r2, r1, ip, lsl #22
   11a48:	andeq	r2, r1, ip, lsl #22
   11a4c:	andeq	r2, r1, ip, lsl #22
   11a50:	andeq	r2, r1, ip, lsl #22
   11a54:	andeq	r2, r1, ip, lsl #22
   11a58:	andeq	r2, r1, ip, lsl #22
   11a5c:	andeq	r2, r1, ip, lsl #22
   11a60:	andeq	r2, r1, ip, lsl #22
   11a64:	andeq	r2, r1, ip, lsl #22
   11a68:	andeq	r2, r1, ip, lsl #22
   11a6c:	andeq	r2, r1, ip, lsl #22
   11a70:	andeq	r2, r1, ip, lsl #22
   11a74:	andeq	r2, r1, ip, lsl #22
   11a78:	andeq	r2, r1, ip, ror #3
   11a7c:	andeq	r2, r1, ip, asr #3
   11a80:	andeq	r2, r1, ip, asr #3
   11a84:	andeq	r2, r1, ip, lsr #3
   11a88:	andeq	r2, r1, ip, asr #3
   11a8c:			; <UNDEFINED> instruction: 0x00011fb8
   11a90:	andeq	r2, r1, ip, asr #3
   11a94:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   11a98:	andeq	r2, r1, ip, asr #3
   11a9c:	andeq	r2, r1, ip, asr #3
   11aa0:	andeq	r2, r1, ip, asr #3
   11aa4:			; <UNDEFINED> instruction: 0x00011fb8
   11aa8:			; <UNDEFINED> instruction: 0x00011fb8
   11aac:			; <UNDEFINED> instruction: 0x00011fb8
   11ab0:			; <UNDEFINED> instruction: 0x00011fb8
   11ab4:			; <UNDEFINED> instruction: 0x00011fb8
   11ab8:			; <UNDEFINED> instruction: 0x00011fb8
   11abc:			; <UNDEFINED> instruction: 0x00011fb8
   11ac0:			; <UNDEFINED> instruction: 0x00011fb8
   11ac4:			; <UNDEFINED> instruction: 0x00011fb8
   11ac8:			; <UNDEFINED> instruction: 0x00011fb8
   11acc:			; <UNDEFINED> instruction: 0x00011fb8
   11ad0:			; <UNDEFINED> instruction: 0x00011fb8
   11ad4:			; <UNDEFINED> instruction: 0x00011fb8
   11ad8:			; <UNDEFINED> instruction: 0x00011fb8
   11adc:			; <UNDEFINED> instruction: 0x00011fb8
   11ae0:			; <UNDEFINED> instruction: 0x00011fb8
   11ae4:	andeq	r2, r1, ip, asr #3
   11ae8:	andeq	r2, r1, ip, asr #3
   11aec:	andeq	r2, r1, ip, asr #3
   11af0:	andeq	r2, r1, ip, asr #3
   11af4:	andeq	r1, r1, r4, asr #30
   11af8:	andeq	r2, r1, ip, lsl #22
   11afc:			; <UNDEFINED> instruction: 0x00011fb8
   11b00:			; <UNDEFINED> instruction: 0x00011fb8
   11b04:			; <UNDEFINED> instruction: 0x00011fb8
   11b08:			; <UNDEFINED> instruction: 0x00011fb8
   11b0c:			; <UNDEFINED> instruction: 0x00011fb8
   11b10:			; <UNDEFINED> instruction: 0x00011fb8
   11b14:			; <UNDEFINED> instruction: 0x00011fb8
   11b18:			; <UNDEFINED> instruction: 0x00011fb8
   11b1c:			; <UNDEFINED> instruction: 0x00011fb8
   11b20:			; <UNDEFINED> instruction: 0x00011fb8
   11b24:			; <UNDEFINED> instruction: 0x00011fb8
   11b28:			; <UNDEFINED> instruction: 0x00011fb8
   11b2c:			; <UNDEFINED> instruction: 0x00011fb8
   11b30:			; <UNDEFINED> instruction: 0x00011fb8
   11b34:			; <UNDEFINED> instruction: 0x00011fb8
   11b38:			; <UNDEFINED> instruction: 0x00011fb8
   11b3c:			; <UNDEFINED> instruction: 0x00011fb8
   11b40:			; <UNDEFINED> instruction: 0x00011fb8
   11b44:			; <UNDEFINED> instruction: 0x00011fb8
   11b48:			; <UNDEFINED> instruction: 0x00011fb8
   11b4c:			; <UNDEFINED> instruction: 0x00011fb8
   11b50:			; <UNDEFINED> instruction: 0x00011fb8
   11b54:			; <UNDEFINED> instruction: 0x00011fb8
   11b58:			; <UNDEFINED> instruction: 0x00011fb8
   11b5c:			; <UNDEFINED> instruction: 0x00011fb8
   11b60:			; <UNDEFINED> instruction: 0x00011fb8
   11b64:	andeq	r2, r1, ip, asr #3
   11b68:	andeq	r1, r1, r0, lsl pc
   11b6c:			; <UNDEFINED> instruction: 0x00011fb8
   11b70:	andeq	r2, r1, ip, asr #3
   11b74:			; <UNDEFINED> instruction: 0x00011fb8
   11b78:	andeq	r2, r1, ip, asr #3
   11b7c:			; <UNDEFINED> instruction: 0x00011fb8
   11b80:			; <UNDEFINED> instruction: 0x00011fb8
   11b84:			; <UNDEFINED> instruction: 0x00011fb8
   11b88:			; <UNDEFINED> instruction: 0x00011fb8
   11b8c:			; <UNDEFINED> instruction: 0x00011fb8
   11b90:			; <UNDEFINED> instruction: 0x00011fb8
   11b94:			; <UNDEFINED> instruction: 0x00011fb8
   11b98:			; <UNDEFINED> instruction: 0x00011fb8
   11b9c:			; <UNDEFINED> instruction: 0x00011fb8
   11ba0:			; <UNDEFINED> instruction: 0x00011fb8
   11ba4:			; <UNDEFINED> instruction: 0x00011fb8
   11ba8:			; <UNDEFINED> instruction: 0x00011fb8
   11bac:			; <UNDEFINED> instruction: 0x00011fb8
   11bb0:			; <UNDEFINED> instruction: 0x00011fb8
   11bb4:			; <UNDEFINED> instruction: 0x00011fb8
   11bb8:			; <UNDEFINED> instruction: 0x00011fb8
   11bbc:			; <UNDEFINED> instruction: 0x00011fb8
   11bc0:			; <UNDEFINED> instruction: 0x00011fb8
   11bc4:			; <UNDEFINED> instruction: 0x00011fb8
   11bc8:			; <UNDEFINED> instruction: 0x00011fb8
   11bcc:			; <UNDEFINED> instruction: 0x00011fb8
   11bd0:			; <UNDEFINED> instruction: 0x00011fb8
   11bd4:			; <UNDEFINED> instruction: 0x00011fb8
   11bd8:			; <UNDEFINED> instruction: 0x00011fb8
   11bdc:			; <UNDEFINED> instruction: 0x00011fb8
   11be0:			; <UNDEFINED> instruction: 0x00011fb8
   11be4:	andeq	r1, r1, r8, asr #27
   11be8:	andeq	r2, r1, ip, asr #3
   11bec:	andeq	r1, r1, r8, asr #27
   11bf0:	andeq	r2, r1, ip, lsr #3
   11bf4:	mov	r3, #1
   11bf8:	str	r3, [sp, #40]	; 0x28
   11bfc:	str	r3, [sp, #68]	; 0x44
   11c00:	mov	r8, #0
   11c04:	ldr	r3, [pc, #4056]	; 12be4 <abort@plt+0x1ecc>
   11c08:	str	r3, [sp, #72]	; 0x48
   11c0c:	mov	r3, #2
   11c10:	str	r3, [sp, #176]	; 0xb0
   11c14:	ldr	r1, [sp, #56]	; 0x38
   11c18:	mov	r2, r3
   11c1c:	ldr	ip, [sp, #40]	; 0x28
   11c20:	mov	lr, r3
   11c24:	b	118f0 <abort@plt+0xbd8>
   11c28:	mov	r3, #1
   11c2c:	str	r3, [sp, #56]	; 0x38
   11c30:	str	r3, [sp, #68]	; 0x44
   11c34:	str	r3, [sp, #40]	; 0x28
   11c38:	ldr	r3, [pc, #4004]	; 12be4 <abort@plt+0x1ecc>
   11c3c:	mov	r8, #0
   11c40:	str	r3, [sp, #72]	; 0x48
   11c44:	b	11c0c <abort@plt+0xef4>
   11c48:	mov	r3, #1
   11c4c:	str	r3, [sp, #56]	; 0x38
   11c50:	str	r3, [sp, #68]	; 0x44
   11c54:	str	r3, [sp, #40]	; 0x28
   11c58:	ldr	r3, [pc, #3976]	; 12be8 <abort@plt+0x1ed0>
   11c5c:	mov	r8, #0
   11c60:	str	r3, [sp, #72]	; 0x48
   11c64:	mov	r3, #5
   11c68:	b	11c10 <abort@plt+0xef8>
   11c6c:	mov	r3, #0
   11c70:	str	r3, [sp, #40]	; 0x28
   11c74:	mov	r3, #1
   11c78:	str	r3, [sp, #56]	; 0x38
   11c7c:	mov	r8, #0
   11c80:	mov	r1, r3
   11c84:	ldr	r2, [sp, #176]	; 0xb0
   11c88:	ldr	ip, [sp, #40]	; 0x28
   11c8c:	ldr	lr, [sp, #176]	; 0xb0
   11c90:	b	118f0 <abort@plt+0xbd8>
   11c94:	ldr	r3, [sp, #176]	; 0xb0
   11c98:	cmp	r3, #10
   11c9c:	beq	11ce0 <abort@plt+0xfc8>
   11ca0:	mov	r2, #5
   11ca4:	ldr	r1, [pc, #3904]	; 12bec <abort@plt+0x1ed4>
   11ca8:	mov	r0, #0
   11cac:	bl	10b98 <dcgettext@plt>
   11cb0:	ldr	r2, [pc, #3892]	; 12bec <abort@plt+0x1ed4>
   11cb4:	cmp	r0, r2
   11cb8:	str	r0, [sp, #188]	; 0xbc
   11cbc:	beq	12d78 <abort@plt+0x2060>
   11cc0:	mov	r2, #5
   11cc4:	ldr	r1, [pc, #3864]	; 12be4 <abort@plt+0x1ecc>
   11cc8:	mov	r0, #0
   11ccc:	bl	10b98 <dcgettext@plt>
   11cd0:	ldr	r2, [pc, #3852]	; 12be4 <abort@plt+0x1ecc>
   11cd4:	cmp	r0, r2
   11cd8:	str	r0, [sp, #192]	; 0xc0
   11cdc:	beq	12d68 <abort@plt+0x2050>
   11ce0:	ldr	r8, [sp, #40]	; 0x28
   11ce4:	cmp	r8, #0
   11ce8:	movne	r8, #0
   11cec:	bne	11d1c <abort@plt+0x1004>
   11cf0:	ldr	r3, [sp, #188]	; 0xbc
   11cf4:	ldrb	r3, [r3]
   11cf8:	cmp	r3, #0
   11cfc:	beq	11d1c <abort@plt+0x1004>
   11d00:	ldr	r2, [sp, #188]	; 0xbc
   11d04:	cmp	fp, r8
   11d08:	strbhi	r3, [r9, r8]
   11d0c:	ldrb	r3, [r2, #1]!
   11d10:	add	r8, r8, #1
   11d14:	cmp	r3, #0
   11d18:	bne	11d04 <abort@plt+0xfec>
   11d1c:	ldr	r0, [sp, #192]	; 0xc0
   11d20:	bl	10c64 <strlen@plt>
   11d24:	ldr	r3, [sp, #192]	; 0xc0
   11d28:	ldr	r2, [sp, #176]	; 0xb0
   11d2c:	str	r3, [sp, #72]	; 0x48
   11d30:	mov	r3, #1
   11d34:	str	r3, [sp, #56]	; 0x38
   11d38:	mov	r1, r3
   11d3c:	ldr	ip, [sp, #40]	; 0x28
   11d40:	ldr	lr, [sp, #176]	; 0xb0
   11d44:	str	r0, [sp, #68]	; 0x44
   11d48:	b	118f0 <abort@plt+0xbd8>
   11d4c:	ldr	r3, [sp, #40]	; 0x28
   11d50:	cmp	r3, #0
   11d54:	beq	129fc <abort@plt+0x1ce4>
   11d58:	mov	r3, #1
   11d5c:	str	r3, [sp, #68]	; 0x44
   11d60:	ldr	r3, [pc, #3708]	; 12be4 <abort@plt+0x1ecc>
   11d64:	str	r3, [sp, #72]	; 0x48
   11d68:	mov	r8, #0
   11d6c:	ldr	r1, [sp, #56]	; 0x38
   11d70:	ldr	r2, [sp, #176]	; 0xb0
   11d74:	ldr	ip, [sp, #40]	; 0x28
   11d78:	ldr	lr, [sp, #176]	; 0xb0
   11d7c:	b	118f0 <abort@plt+0xbd8>
   11d80:	ldr	r3, [sp, #40]	; 0x28
   11d84:	cmp	r3, #0
   11d88:	beq	12a80 <abort@plt+0x1d68>
   11d8c:	str	r3, [sp, #56]	; 0x38
   11d90:	mov	r3, #1
   11d94:	str	r3, [sp, #68]	; 0x44
   11d98:	ldr	r3, [pc, #3656]	; 12be8 <abort@plt+0x1ed0>
   11d9c:	b	11d64 <abort@plt+0x104c>
   11da0:	ldr	r3, [sp, #40]	; 0x28
   11da4:	cmp	r3, #0
   11da8:	mov	r3, #1
   11dac:	streq	r3, [sp, #56]	; 0x38
   11db0:	beq	129fc <abort@plt+0x1ce4>
   11db4:	str	r3, [sp, #68]	; 0x44
   11db8:	ldr	r3, [pc, #3620]	; 12be4 <abort@plt+0x1ecc>
   11dbc:	mov	r8, #0
   11dc0:	str	r3, [sp, #72]	; 0x48
   11dc4:	b	11c0c <abort@plt+0xef4>
   11dc8:	ldr	r3, [sp, #24]
   11dcc:	ldr	r6, [sp, #48]	; 0x30
   11dd0:	cmn	r3, #1
   11dd4:	beq	12430 <abort@plt+0x1718>
   11dd8:	subs	r3, r3, #1
   11ddc:	movne	r3, #1
   11de0:	cmp	r3, #0
   11de4:	beq	121b0 <abort@plt+0x1498>
   11de8:	ldr	r1, [sp, #52]	; 0x34
   11dec:	mov	r7, r3
   11df0:	mov	r3, #0
   11df4:	str	r3, [sp, #32]
   11df8:	ldr	r3, [sp, #60]	; 0x3c
   11dfc:	orr	r2, r1, r3
   11e00:	ldr	r3, [sp, #40]	; 0x28
   11e04:	eor	r2, r2, #1
   11e08:	orr	r2, r3, r2
   11e0c:	tst	r2, #255	; 0xff
   11e10:	bne	12734 <abort@plt+0x1a1c>
   11e14:	cmp	r6, #0
   11e18:	bne	11ff4 <abort@plt+0x12dc>
   11e1c:	ldr	r3, [sp, #36]	; 0x24
   11e20:	add	sl, sl, #1
   11e24:	and	r3, r3, r7
   11e28:	uxtb	r6, r3
   11e2c:	cmp	r6, #0
   11e30:	beq	11e5c <abort@plt+0x1144>
   11e34:	cmp	fp, r8
   11e38:	movhi	r3, #39	; 0x27
   11e3c:	strbhi	r3, [r9, r8]
   11e40:	add	r3, r8, #1
   11e44:	cmp	fp, r3
   11e48:	movhi	r2, #39	; 0x27
   11e4c:	add	r8, r8, #2
   11e50:	strbhi	r2, [r9, r3]
   11e54:	mov	r3, #0
   11e58:	str	r3, [sp, #36]	; 0x24
   11e5c:	ldr	r2, [sp, #32]
   11e60:	cmp	r8, fp
   11e64:	ldr	r3, [sp, #28]
   11e68:	strbcc	r4, [r9, r8]
   11e6c:	cmp	r2, #0
   11e70:	moveq	r3, #0
   11e74:	str	r3, [sp, #28]
   11e78:	ldr	r3, [sp, #24]
   11e7c:	add	r8, r8, #1
   11e80:	cmn	r3, #1
   11e84:	bne	1195c <abort@plt+0xc44>
   11e88:	ldr	r3, [sp, #44]	; 0x2c
   11e8c:	ldrb	r3, [r3, sl]
   11e90:	adds	r7, r3, #0
   11e94:	movne	r7, #1
   11e98:	cmp	r7, #0
   11e9c:	bne	1196c <abort@plt+0xc54>
   11ea0:	ldr	r3, [sp, #64]	; 0x40
   11ea4:	cmp	r8, #0
   11ea8:	movne	r3, #0
   11eac:	andeq	r3, r3, #1
   11eb0:	cmp	r3, #0
   11eb4:	str	r3, [sp, #64]	; 0x40
   11eb8:	bne	1295c <abort@plt+0x1c44>
   11ebc:	ldr	r3, [sp, #40]	; 0x28
   11ec0:	ldr	r2, [sp, #52]	; 0x34
   11ec4:	eor	r3, r3, #1
   11ec8:	ands	r2, r2, r3
   11ecc:	beq	12d88 <abort@plt+0x2070>
   11ed0:	ldr	r3, [sp, #76]	; 0x4c
   11ed4:	cmp	r3, #0
   11ed8:	beq	12d58 <abort@plt+0x2040>
   11edc:	ldr	r3, [sp, #28]
   11ee0:	cmp	r3, #0
   11ee4:	bne	12d14 <abort@plt+0x1ffc>
   11ee8:	ldr	r2, [sp, #84]	; 0x54
   11eec:	clz	r3, fp
   11ef0:	cmp	r2, #0
   11ef4:	lsr	r3, r3, #5
   11ef8:	moveq	r3, #0
   11efc:	cmp	r3, #0
   11f00:	beq	12cb4 <abort@plt+0x1f9c>
   11f04:	mov	fp, r2
   11f08:	str	r3, [sp, #76]	; 0x4c
   11f0c:	b	11898 <abort@plt+0xb80>
   11f10:	ldr	r3, [sp, #176]	; 0xb0
   11f14:	ldr	r6, [sp, #48]	; 0x30
   11f18:	cmp	r3, #2
   11f1c:	beq	12454 <abort@plt+0x173c>
   11f20:	ldr	r3, [sp, #88]	; 0x58
   11f24:	cmp	r3, #0
   11f28:	beq	129d8 <abort@plt+0x1cc0>
   11f2c:	mov	r3, #0
   11f30:	add	sl, sl, #1
   11f34:	ldr	r6, [sp, #36]	; 0x24
   11f38:	str	r3, [sp, #32]
   11f3c:	mov	r4, #92	; 0x5c
   11f40:	b	11e2c <abort@plt+0x1114>
   11f44:	ldr	r3, [sp, #176]	; 0xb0
   11f48:	ldr	r6, [sp, #48]	; 0x30
   11f4c:	cmp	r3, #2
   11f50:	beq	12484 <abort@plt+0x176c>
   11f54:	cmp	r3, #5
   11f58:	bne	129e8 <abort@plt+0x1cd0>
   11f5c:	ldr	r3, [sp, #100]	; 0x64
   11f60:	cmp	r3, #0
   11f64:	beq	12a4c <abort@plt+0x1d34>
   11f68:	ldr	r2, [sp, #24]
   11f6c:	add	r3, sl, #2
   11f70:	cmp	r2, r3
   11f74:	bls	11f84 <abort@plt+0x126c>
   11f78:	ldrb	r4, [r5, #1]
   11f7c:	cmp	r4, #63	; 0x3f
   11f80:	beq	12bf4 <abort@plt+0x1edc>
   11f84:	mov	r1, #0
   11f88:	str	r1, [sp, #32]
   11f8c:	mov	r4, #63	; 0x3f
   11f90:	b	11df8 <abort@plt+0x10e0>
   11f94:	ldr	r3, [sp, #176]	; 0xb0
   11f98:	ldr	r6, [sp, #48]	; 0x30
   11f9c:	cmp	r3, #2
   11fa0:	beq	124b0 <abort@plt+0x1798>
   11fa4:	str	r7, [sp, #32]
   11fa8:	str	r7, [sp, #76]	; 0x4c
   11fac:	mov	r1, #0
   11fb0:	mov	r4, #39	; 0x27
   11fb4:	b	11df8 <abort@plt+0x10e0>
   11fb8:	ldr	r6, [sp, #48]	; 0x30
   11fbc:	ldr	r1, [sp, #52]	; 0x34
   11fc0:	str	r7, [sp, #32]
   11fc4:	b	11df8 <abort@plt+0x10e0>
   11fc8:	ldr	r6, [sp, #48]	; 0x30
   11fcc:	ldr	r1, [sp, #52]	; 0x34
   11fd0:	mov	r4, #12
   11fd4:	mov	r3, #102	; 0x66
   11fd8:	ldr	r2, [sp, #56]	; 0x38
   11fdc:	cmp	r2, #0
   11fe0:	streq	r2, [sp, #32]
   11fe4:	beq	11df8 <abort@plt+0x10e0>
   11fe8:	mov	r4, r3
   11fec:	mov	r3, #0
   11ff0:	str	r3, [sp, #32]
   11ff4:	ldr	r3, [sp, #40]	; 0x28
   11ff8:	cmp	r3, #0
   11ffc:	bne	1276c <abort@plt+0x1a54>
   12000:	ldr	r3, [sp, #36]	; 0x24
   12004:	eor	r3, r3, #1
   12008:	and	r3, r3, r1
   1200c:	ands	r3, r3, #255	; 0xff
   12010:	beq	12048 <abort@plt+0x1330>
   12014:	cmp	fp, r8
   12018:	movhi	r2, #39	; 0x27
   1201c:	strbhi	r2, [r9, r8]
   12020:	add	r2, r8, #1
   12024:	cmp	fp, r2
   12028:	movhi	r1, #36	; 0x24
   1202c:	strbhi	r1, [r9, r2]
   12030:	add	r2, r8, #2
   12034:	cmp	fp, r2
   12038:	add	r8, r8, #3
   1203c:	movhi	r1, #39	; 0x27
   12040:	strbhi	r1, [r9, r2]
   12044:	str	r3, [sp, #36]	; 0x24
   12048:	cmp	fp, r8
   1204c:	movhi	r3, #92	; 0x5c
   12050:	strbhi	r3, [r9, r8]
   12054:	add	sl, sl, #1
   12058:	add	r8, r8, #1
   1205c:	b	11e5c <abort@plt+0x1144>
   12060:	ldr	r6, [sp, #48]	; 0x30
   12064:	mov	r4, #10
   12068:	mov	r3, #110	; 0x6e
   1206c:	ldr	r2, [sp, #64]	; 0x40
   12070:	cmp	r2, #0
   12074:	bne	12af4 <abort@plt+0x1ddc>
   12078:	ldr	r1, [sp, #52]	; 0x34
   1207c:	b	11fd8 <abort@plt+0x12c0>
   12080:	ldr	r6, [sp, #48]	; 0x30
   12084:	ldr	r1, [sp, #52]	; 0x34
   12088:	mov	r3, #116	; 0x74
   1208c:	b	11fd8 <abort@plt+0x12c0>
   12090:	ldr	r6, [sp, #48]	; 0x30
   12094:	ldr	r1, [sp, #52]	; 0x34
   12098:	mov	r4, #11
   1209c:	mov	r3, #118	; 0x76
   120a0:	b	11fd8 <abort@plt+0x12c0>
   120a4:	ldr	r6, [sp, #48]	; 0x30
   120a8:	ldr	r1, [sp, #52]	; 0x34
   120ac:	mov	r4, #8
   120b0:	mov	r3, #98	; 0x62
   120b4:	b	11fd8 <abort@plt+0x12c0>
   120b8:	ldr	r6, [sp, #48]	; 0x30
   120bc:	ldr	r1, [sp, #52]	; 0x34
   120c0:	mov	r4, #7
   120c4:	mov	r3, #97	; 0x61
   120c8:	b	11fd8 <abort@plt+0x12c0>
   120cc:	ldr	r3, [sp, #56]	; 0x38
   120d0:	ldr	r6, [sp, #48]	; 0x30
   120d4:	cmp	r3, #0
   120d8:	beq	1259c <abort@plt+0x1884>
   120dc:	ldr	r3, [sp, #40]	; 0x28
   120e0:	cmp	r3, #0
   120e4:	bne	12bd0 <abort@plt+0x1eb8>
   120e8:	ldr	r3, [sp, #36]	; 0x24
   120ec:	ldr	r2, [sp, #52]	; 0x34
   120f0:	eor	r3, r3, #1
   120f4:	ands	r3, r2, r3
   120f8:	moveq	r2, r8
   120fc:	beq	12134 <abort@plt+0x141c>
   12100:	cmp	fp, r8
   12104:	movhi	r2, #39	; 0x27
   12108:	strbhi	r2, [r9, r8]
   1210c:	add	r2, r8, #1
   12110:	cmp	fp, r2
   12114:	movhi	r1, #36	; 0x24
   12118:	strbhi	r1, [r9, r2]
   1211c:	add	r2, r8, #2
   12120:	cmp	fp, r2
   12124:	movhi	r1, #39	; 0x27
   12128:	strbhi	r1, [r9, r2]
   1212c:	add	r2, r8, #3
   12130:	str	r3, [sp, #36]	; 0x24
   12134:	cmp	fp, r2
   12138:	movhi	r3, #92	; 0x5c
   1213c:	strbhi	r3, [r9, r2]
   12140:	ldr	r3, [sp, #92]	; 0x5c
   12144:	add	r8, r2, #1
   12148:	cmp	r3, #0
   1214c:	beq	12ad0 <abort@plt+0x1db8>
   12150:	ldr	r1, [sp, #24]
   12154:	add	r3, sl, #1
   12158:	cmp	r1, r3
   1215c:	bls	12194 <abort@plt+0x147c>
   12160:	ldr	r1, [sp, #44]	; 0x2c
   12164:	ldrb	r3, [r1, r3]
   12168:	sub	r3, r3, #48	; 0x30
   1216c:	cmp	r3, #9
   12170:	bhi	12194 <abort@plt+0x147c>
   12174:	cmp	fp, r8
   12178:	movhi	r3, #48	; 0x30
   1217c:	strbhi	r3, [r9, r8]
   12180:	add	r3, r2, #2
   12184:	cmp	fp, r3
   12188:	add	r8, r2, #3
   1218c:	movhi	r1, #48	; 0x30
   12190:	strbhi	r1, [r9, r3]
   12194:	ldr	r3, [sp, #40]	; 0x28
   12198:	ldr	r1, [sp, #52]	; 0x34
   1219c:	mov	r7, r3
   121a0:	str	r3, [sp, #32]
   121a4:	mov	r4, #48	; 0x30
   121a8:	b	11df8 <abort@plt+0x10e0>
   121ac:	ldr	r6, [sp, #48]	; 0x30
   121b0:	cmp	sl, #0
   121b4:	streq	r7, [sp, #32]
   121b8:	beq	121d8 <abort@plt+0x14c0>
   121bc:	mov	r3, #0
   121c0:	ldr	r1, [sp, #52]	; 0x34
   121c4:	str	r3, [sp, #32]
   121c8:	b	11df8 <abort@plt+0x10e0>
   121cc:	ldr	r6, [sp, #48]	; 0x30
   121d0:	mov	r3, #0
   121d4:	str	r3, [sp, #32]
   121d8:	ldr	r3, [sp, #64]	; 0x40
   121dc:	cmp	r3, #0
   121e0:	bne	1295c <abort@plt+0x1c44>
   121e4:	ldr	r1, [sp, #52]	; 0x34
   121e8:	b	11df8 <abort@plt+0x10e0>
   121ec:	ldr	r3, [sp, #48]	; 0x30
   121f0:	mov	r6, r3
   121f4:	str	r3, [sp, #32]
   121f8:	b	121d8 <abort@plt+0x14c0>
   121fc:	ldr	r6, [sp, #48]	; 0x30
   12200:	mov	r4, #13
   12204:	mov	r3, #114	; 0x72
   12208:	b	1206c <abort@plt+0x1354>
   1220c:	ldr	r3, [sp, #44]	; 0x2c
   12210:	add	r5, r3, sl
   12214:	ldrb	r4, [r5]
   12218:	cmp	r4, #126	; 0x7e
   1221c:	ldrls	pc, [pc, r4, lsl #2]
   12220:	b	125bc <abort@plt+0x18a4>
   12224:	andeq	r2, r1, ip, lsl #11
   12228:			; <UNDEFINED> instruction: 0x000125bc
   1222c:			; <UNDEFINED> instruction: 0x000125bc
   12230:			; <UNDEFINED> instruction: 0x000125bc
   12234:			; <UNDEFINED> instruction: 0x000125bc
   12238:			; <UNDEFINED> instruction: 0x000125bc
   1223c:			; <UNDEFINED> instruction: 0x000125bc
   12240:	andeq	r2, r1, r4, lsl #11
   12244:	andeq	r2, r1, ip, ror r5
   12248:	andeq	r2, r1, r0, ror r5
   1224c:	andeq	r2, r1, r8, ror #10
   12250:	andeq	r2, r1, r0, ror #10
   12254:	andeq	r2, r1, r8, asr r5
   12258:	andeq	r2, r1, r0, asr r5
   1225c:			; <UNDEFINED> instruction: 0x000125bc
   12260:			; <UNDEFINED> instruction: 0x000125bc
   12264:			; <UNDEFINED> instruction: 0x000125bc
   12268:			; <UNDEFINED> instruction: 0x000125bc
   1226c:			; <UNDEFINED> instruction: 0x000125bc
   12270:			; <UNDEFINED> instruction: 0x000125bc
   12274:			; <UNDEFINED> instruction: 0x000125bc
   12278:			; <UNDEFINED> instruction: 0x000125bc
   1227c:			; <UNDEFINED> instruction: 0x000125bc
   12280:			; <UNDEFINED> instruction: 0x000125bc
   12284:			; <UNDEFINED> instruction: 0x000125bc
   12288:			; <UNDEFINED> instruction: 0x000125bc
   1228c:			; <UNDEFINED> instruction: 0x000125bc
   12290:			; <UNDEFINED> instruction: 0x000125bc
   12294:			; <UNDEFINED> instruction: 0x000125bc
   12298:			; <UNDEFINED> instruction: 0x000125bc
   1229c:			; <UNDEFINED> instruction: 0x000125bc
   122a0:			; <UNDEFINED> instruction: 0x000125bc
   122a4:	andeq	r2, r1, r4, asr #10
   122a8:	andeq	r2, r1, ip, lsr r5
   122ac:	andeq	r2, r1, ip, lsr r5
   122b0:	andeq	r2, r1, r4, lsr r5
   122b4:	andeq	r2, r1, ip, lsr r5
   122b8:	andeq	r2, r1, ip, lsr #10
   122bc:	andeq	r2, r1, ip, lsr r5
   122c0:	andeq	r2, r1, r0, lsr #9
   122c4:	andeq	r2, r1, ip, lsr r5
   122c8:	andeq	r2, r1, ip, lsr r5
   122cc:	andeq	r2, r1, ip, lsr r5
   122d0:	andeq	r2, r1, ip, lsr #10
   122d4:	andeq	r2, r1, ip, lsr #10
   122d8:	andeq	r2, r1, ip, lsr #10
   122dc:	andeq	r2, r1, ip, lsr #10
   122e0:	andeq	r2, r1, ip, lsr #10
   122e4:	andeq	r2, r1, ip, lsr #10
   122e8:	andeq	r2, r1, ip, lsr #10
   122ec:	andeq	r2, r1, ip, lsr #10
   122f0:	andeq	r2, r1, ip, lsr #10
   122f4:	andeq	r2, r1, ip, lsr #10
   122f8:	andeq	r2, r1, ip, lsr #10
   122fc:	andeq	r2, r1, ip, lsr #10
   12300:	andeq	r2, r1, ip, lsr #10
   12304:	andeq	r2, r1, ip, lsr #10
   12308:	andeq	r2, r1, ip, lsr #10
   1230c:	andeq	r2, r1, ip, lsr #10
   12310:	andeq	r2, r1, ip, lsr r5
   12314:	andeq	r2, r1, ip, lsr r5
   12318:	andeq	r2, r1, ip, lsr r5
   1231c:	andeq	r2, r1, ip, lsr r5
   12320:	andeq	r2, r1, r4, ror r4
   12324:			; <UNDEFINED> instruction: 0x000125bc
   12328:	andeq	r2, r1, ip, lsr #10
   1232c:	andeq	r2, r1, ip, lsr #10
   12330:	andeq	r2, r1, ip, lsr #10
   12334:	andeq	r2, r1, ip, lsr #10
   12338:	andeq	r2, r1, ip, lsr #10
   1233c:	andeq	r2, r1, ip, lsr #10
   12340:	andeq	r2, r1, ip, lsr #10
   12344:	andeq	r2, r1, ip, lsr #10
   12348:	andeq	r2, r1, ip, lsr #10
   1234c:	andeq	r2, r1, ip, lsr #10
   12350:	andeq	r2, r1, ip, lsr #10
   12354:	andeq	r2, r1, ip, lsr #10
   12358:	andeq	r2, r1, ip, lsr #10
   1235c:	andeq	r2, r1, ip, lsr #10
   12360:	andeq	r2, r1, ip, lsr #10
   12364:	andeq	r2, r1, ip, lsr #10
   12368:	andeq	r2, r1, ip, lsr #10
   1236c:	andeq	r2, r1, ip, lsr #10
   12370:	andeq	r2, r1, ip, lsr #10
   12374:	andeq	r2, r1, ip, lsr #10
   12378:	andeq	r2, r1, ip, lsr #10
   1237c:	andeq	r2, r1, ip, lsr #10
   12380:	andeq	r2, r1, ip, lsr #10
   12384:	andeq	r2, r1, ip, lsr #10
   12388:	andeq	r2, r1, ip, lsr #10
   1238c:	andeq	r2, r1, ip, lsr #10
   12390:	andeq	r2, r1, ip, lsr r5
   12394:	andeq	r2, r1, r4, asr #8
   12398:	andeq	r2, r1, ip, lsr #10
   1239c:	andeq	r2, r1, ip, lsr r5
   123a0:	andeq	r2, r1, ip, lsr #10
   123a4:	andeq	r2, r1, ip, lsr r5
   123a8:	andeq	r2, r1, ip, lsr #10
   123ac:	andeq	r2, r1, ip, lsr #10
   123b0:	andeq	r2, r1, ip, lsr #10
   123b4:	andeq	r2, r1, ip, lsr #10
   123b8:	andeq	r2, r1, ip, lsr #10
   123bc:	andeq	r2, r1, ip, lsr #10
   123c0:	andeq	r2, r1, ip, lsr #10
   123c4:	andeq	r2, r1, ip, lsr #10
   123c8:	andeq	r2, r1, ip, lsr #10
   123cc:	andeq	r2, r1, ip, lsr #10
   123d0:	andeq	r2, r1, ip, lsr #10
   123d4:	andeq	r2, r1, ip, lsr #10
   123d8:	andeq	r2, r1, ip, lsr #10
   123dc:	andeq	r2, r1, ip, lsr #10
   123e0:	andeq	r2, r1, ip, lsr #10
   123e4:	andeq	r2, r1, ip, lsr #10
   123e8:	andeq	r2, r1, ip, lsr #10
   123ec:	andeq	r2, r1, ip, lsr #10
   123f0:	andeq	r2, r1, ip, lsr #10
   123f4:	andeq	r2, r1, ip, lsr #10
   123f8:	andeq	r2, r1, ip, lsr #10
   123fc:	andeq	r2, r1, ip, lsr #10
   12400:	andeq	r2, r1, ip, lsr #10
   12404:	andeq	r2, r1, ip, lsr #10
   12408:	andeq	r2, r1, ip, lsr #10
   1240c:	andeq	r2, r1, ip, lsr #10
   12410:	andeq	r2, r1, r0, lsr #8
   12414:	andeq	r2, r1, ip, lsr r5
   12418:	andeq	r2, r1, r0, lsr #8
   1241c:	andeq	r2, r1, r4, lsr r5
   12420:	ldr	r3, [sp, #24]
   12424:	mov	r6, #0
   12428:	cmn	r3, #1
   1242c:	bne	11dd8 <abort@plt+0x10c0>
   12430:	ldr	r3, [sp, #44]	; 0x2c
   12434:	ldrb	r3, [r3, #1]
   12438:	adds	r3, r3, #0
   1243c:	movne	r3, #1
   12440:	b	11de0 <abort@plt+0x10c8>
   12444:	ldr	r3, [sp, #176]	; 0xb0
   12448:	mov	r6, #0
   1244c:	cmp	r3, #2
   12450:	bne	11f20 <abort@plt+0x1208>
   12454:	ldr	r3, [sp, #64]	; 0x40
   12458:	cmp	r3, #0
   1245c:	bne	12c94 <abort@plt+0x1f7c>
   12460:	add	sl, sl, #1
   12464:	ldr	r6, [sp, #36]	; 0x24
   12468:	str	r3, [sp, #32]
   1246c:	mov	r4, #92	; 0x5c
   12470:	b	11e2c <abort@plt+0x1114>
   12474:	ldr	r3, [sp, #176]	; 0xb0
   12478:	mov	r6, #0
   1247c:	cmp	r3, #2
   12480:	bne	11f54 <abort@plt+0x123c>
   12484:	ldr	r3, [sp, #40]	; 0x28
   12488:	cmp	r3, #0
   1248c:	bne	12770 <abort@plt+0x1a58>
   12490:	mov	r1, r7
   12494:	str	r3, [sp, #32]
   12498:	mov	r4, #63	; 0x3f
   1249c:	b	11df8 <abort@plt+0x10e0>
   124a0:	ldr	r3, [sp, #176]	; 0xb0
   124a4:	mov	r6, #0
   124a8:	cmp	r3, #2
   124ac:	bne	11fa4 <abort@plt+0x128c>
   124b0:	ldr	r3, [sp, #64]	; 0x40
   124b4:	cmp	r3, #0
   124b8:	bne	12c94 <abort@plt+0x1f7c>
   124bc:	ldr	r2, [sp, #84]	; 0x54
   124c0:	adds	r3, fp, #0
   124c4:	movne	r3, #1
   124c8:	cmp	r2, #0
   124cc:	movne	r3, #0
   124d0:	cmp	r3, #0
   124d4:	strne	fp, [sp, #84]	; 0x54
   124d8:	movne	fp, #0
   124dc:	bne	1250c <abort@plt+0x17f4>
   124e0:	cmp	fp, r8
   124e4:	movhi	r3, #39	; 0x27
   124e8:	strbhi	r3, [r9, r8]
   124ec:	add	r3, r8, #1
   124f0:	cmp	fp, r3
   124f4:	movhi	r2, #92	; 0x5c
   124f8:	strbhi	r2, [r9, r3]
   124fc:	add	r3, r8, #2
   12500:	cmp	fp, r3
   12504:	movhi	r2, #39	; 0x27
   12508:	strbhi	r2, [r9, r3]
   1250c:	ldr	r3, [sp, #64]	; 0x40
   12510:	add	r8, r8, #3
   12514:	mov	r1, r7
   12518:	str	r7, [sp, #32]
   1251c:	str	r7, [sp, #76]	; 0x4c
   12520:	str	r3, [sp, #36]	; 0x24
   12524:	mov	r4, #39	; 0x27
   12528:	b	11df8 <abort@plt+0x10e0>
   1252c:	mov	r6, #0
   12530:	b	11fbc <abort@plt+0x12a4>
   12534:	mov	r6, #0
   12538:	b	121b0 <abort@plt+0x1498>
   1253c:	mov	r6, #0
   12540:	b	121d0 <abort@plt+0x14b8>
   12544:	str	r7, [sp, #32]
   12548:	mov	r6, #0
   1254c:	b	121d8 <abort@plt+0x14c0>
   12550:	mov	r6, #0
   12554:	b	12200 <abort@plt+0x14e8>
   12558:	mov	r6, #0
   1255c:	b	11fcc <abort@plt+0x12b4>
   12560:	mov	r6, #0
   12564:	b	12094 <abort@plt+0x137c>
   12568:	mov	r6, #0
   1256c:	b	12064 <abort@plt+0x134c>
   12570:	mov	r6, #0
   12574:	mov	r3, #116	; 0x74
   12578:	b	1206c <abort@plt+0x1354>
   1257c:	mov	r6, #0
   12580:	b	120a8 <abort@plt+0x1390>
   12584:	mov	r6, #0
   12588:	b	120bc <abort@plt+0x13a4>
   1258c:	ldr	r3, [sp, #56]	; 0x38
   12590:	mov	r6, #0
   12594:	cmp	r3, #0
   12598:	bne	120dc <abort@plt+0x13c4>
   1259c:	ldr	r3, [sp, #96]	; 0x60
   125a0:	cmp	r3, #0
   125a4:	addne	sl, sl, #1
   125a8:	bne	11950 <abort@plt+0xc38>
   125ac:	ldr	r1, [sp, #52]	; 0x34
   125b0:	str	r3, [sp, #32]
   125b4:	mov	r4, r3
   125b8:	b	11df8 <abort@plt+0x10e0>
   125bc:	mov	r6, #0
   125c0:	ldr	r3, [sp, #80]	; 0x50
   125c4:	cmp	r3, #1
   125c8:	bne	127b8 <abort@plt+0x1aa0>
   125cc:	bl	10c4c <__ctype_b_loc@plt>
   125d0:	ldr	r2, [sp, #80]	; 0x50
   125d4:	sxth	r3, r4
   125d8:	mov	r1, r2
   125dc:	lsl	r3, r3, #1
   125e0:	ldr	r2, [r0]
   125e4:	ldrh	r3, [r2, r3]
   125e8:	and	r3, r3, #16384	; 0x4000
   125ec:	cmp	r3, #0
   125f0:	movne	r3, #1
   125f4:	moveq	r3, #0
   125f8:	str	r3, [sp, #32]
   125fc:	moveq	r3, #1
   12600:	movne	r3, #0
   12604:	ldr	r2, [sp, #56]	; 0x38
   12608:	and	r3, r3, r2
   1260c:	ands	r3, r3, #255	; 0xff
   12610:	beq	121e4 <abort@plt+0x14cc>
   12614:	add	r1, sl, r1
   12618:	mov	r0, #0
   1261c:	ldr	r7, [sp, #40]	; 0x28
   12620:	ldr	r2, [sp, #36]	; 0x24
   12624:	ldr	lr, [sp, #52]	; 0x34
   12628:	b	126d8 <abort@plt+0x19c0>
   1262c:	cmp	r7, #0
   12630:	bne	12a2c <abort@plt+0x1d14>
   12634:	eor	r0, r2, #1
   12638:	ands	r0, lr, r0
   1263c:	beq	12674 <abort@plt+0x195c>
   12640:	cmp	fp, r8
   12644:	movhi	r2, #39	; 0x27
   12648:	strbhi	r2, [r9, r8]
   1264c:	add	r2, r8, #1
   12650:	cmp	fp, r2
   12654:	movhi	ip, #36	; 0x24
   12658:	strbhi	ip, [r9, r2]
   1265c:	add	r2, r8, #2
   12660:	cmp	fp, r2
   12664:	movhi	ip, #39	; 0x27
   12668:	strbhi	ip, [r9, r2]
   1266c:	add	r8, r8, #3
   12670:	mov	r2, r0
   12674:	cmp	fp, r8
   12678:	movhi	r0, #92	; 0x5c
   1267c:	strbhi	r0, [r9, r8]
   12680:	add	r0, r8, #1
   12684:	cmp	fp, r0
   12688:	lsrhi	ip, r4, #6
   1268c:	addhi	ip, ip, #48	; 0x30
   12690:	strbhi	ip, [r9, r0]
   12694:	add	ip, r8, #2
   12698:	cmp	fp, ip
   1269c:	lsrhi	r0, r4, #3
   126a0:	andhi	r0, r0, #7
   126a4:	addhi	r0, r0, #48	; 0x30
   126a8:	add	sl, sl, #1
   126ac:	strbhi	r0, [r9, ip]
   126b0:	and	r4, r4, #7
   126b4:	cmp	sl, r1
   126b8:	add	r4, r4, #48	; 0x30
   126bc:	add	r8, r8, #3
   126c0:	bcs	12a44 <abort@plt+0x1d2c>
   126c4:	mov	r0, r3
   126c8:	cmp	fp, r8
   126cc:	strbhi	r4, [r9, r8]
   126d0:	ldrb	r4, [r5, #1]!
   126d4:	add	r8, r8, #1
   126d8:	cmp	r3, #0
   126dc:	bne	1262c <abort@plt+0x1914>
   126e0:	cmp	r6, #0
   126e4:	bne	12788 <abort@plt+0x1a70>
   126e8:	eor	r6, r0, #1
   126ec:	and	r6, r6, r2
   126f0:	add	sl, sl, #1
   126f4:	cmp	r1, sl
   126f8:	uxtb	r6, r6
   126fc:	bls	127b0 <abort@plt+0x1a98>
   12700:	cmp	r6, #0
   12704:	beq	126c8 <abort@plt+0x19b0>
   12708:	cmp	fp, r8
   1270c:	movhi	r2, #39	; 0x27
   12710:	strbhi	r2, [r9, r8]
   12714:	add	r2, r8, #1
   12718:	cmp	fp, r2
   1271c:	movhi	ip, #39	; 0x27
   12720:	strbhi	ip, [r9, r2]
   12724:	add	r8, r8, #2
   12728:	mov	r6, r3
   1272c:	mov	r2, r3
   12730:	b	126c8 <abort@plt+0x19b0>
   12734:	ldr	r3, [sp, #184]	; 0xb8
   12738:	cmp	r3, #0
   1273c:	beq	11e14 <abort@plt+0x10fc>
   12740:	lsr	r2, r4, #5
   12744:	mov	r0, r3
   12748:	uxtb	r2, r2
   1274c:	and	r3, r4, #31
   12750:	ldr	r2, [r0, r2, lsl #2]
   12754:	lsr	r3, r2, r3
   12758:	tst	r3, #1
   1275c:	beq	11e14 <abort@plt+0x10fc>
   12760:	ldr	r3, [sp, #40]	; 0x28
   12764:	cmp	r3, #0
   12768:	beq	12000 <abort@plt+0x12e8>
   1276c:	mov	r3, r1
   12770:	str	r3, [sp, #64]	; 0x40
   12774:	mov	sl, r9
   12778:	ldr	r3, [sp, #56]	; 0x38
   1277c:	mov	r9, fp
   12780:	ldr	r2, [sp, #64]	; 0x40
   12784:	b	12974 <abort@plt+0x1c5c>
   12788:	cmp	fp, r8
   1278c:	eor	r6, r0, #1
   12790:	movhi	ip, #92	; 0x5c
   12794:	and	r6, r6, r2
   12798:	add	sl, sl, #1
   1279c:	strbhi	ip, [r9, r8]
   127a0:	cmp	r1, sl
   127a4:	add	r8, r8, #1
   127a8:	uxtb	r6, r6
   127ac:	bhi	12700 <abort@plt+0x19e8>
   127b0:	str	r2, [sp, #36]	; 0x24
   127b4:	b	11e2c <abort@plt+0x1114>
   127b8:	ldr	r3, [sp, #24]
   127bc:	cmn	r3, #1
   127c0:	mov	r3, #0
   127c4:	str	r3, [sp, #128]	; 0x80
   127c8:	str	r3, [sp, #132]	; 0x84
   127cc:	beq	12ac0 <abort@plt+0x1da8>
   127d0:	mov	r2, r7
   127d4:	mov	r3, #0
   127d8:	str	r7, [sp, #104]	; 0x68
   127dc:	str	r5, [sp, #116]	; 0x74
   127e0:	mov	r7, r3
   127e4:	mov	r5, r2
   127e8:	str	r4, [sp, #32]
   127ec:	str	r6, [sp, #108]	; 0x6c
   127f0:	str	r8, [sp, #112]	; 0x70
   127f4:	ldr	r3, [sp, #44]	; 0x2c
   127f8:	add	r6, sl, r7
   127fc:	add	r4, r3, r6
   12800:	ldr	r3, [sp, #24]
   12804:	mov	r1, r4
   12808:	sub	r2, r3, r6
   1280c:	add	r0, sp, #124	; 0x7c
   12810:	add	r3, sp, #128	; 0x80
   12814:	bl	16b40 <abort@plt+0x5e28>
   12818:	subs	r8, r0, #0
   1281c:	beq	12ba4 <abort@plt+0x1e8c>
   12820:	cmn	r8, #1
   12824:	beq	12b7c <abort@plt+0x1e64>
   12828:	cmn	r8, #2
   1282c:	beq	12b14 <abort@plt+0x1dfc>
   12830:	ldr	r3, [sp, #64]	; 0x40
   12834:	cmp	r3, #0
   12838:	beq	128f8 <abort@plt+0x1be0>
   1283c:	cmp	r8, #1
   12840:	beq	128f8 <abort@plt+0x1be0>
   12844:	sub	r3, r8, #1
   12848:	add	r6, r3, r6
   1284c:	ldr	r3, [sp, #44]	; 0x2c
   12850:	add	r6, r3, r6
   12854:	ldrb	r3, [r4, #1]!
   12858:	sub	r3, r3, #91	; 0x5b
   1285c:	cmp	r3, #33	; 0x21
   12860:	ldrls	pc, [pc, r3, lsl #2]
   12864:	b	128f0 <abort@plt+0x1bd8>
   12868:	andeq	r2, r1, ip, asr r9
   1286c:	andeq	r2, r1, ip, asr r9
   12870:	strdeq	r2, [r1], -r0
   12874:	andeq	r2, r1, ip, asr r9
   12878:	strdeq	r2, [r1], -r0
   1287c:	andeq	r2, r1, ip, asr r9
   12880:	strdeq	r2, [r1], -r0
   12884:	strdeq	r2, [r1], -r0
   12888:	strdeq	r2, [r1], -r0
   1288c:	strdeq	r2, [r1], -r0
   12890:	strdeq	r2, [r1], -r0
   12894:	strdeq	r2, [r1], -r0
   12898:	strdeq	r2, [r1], -r0
   1289c:	strdeq	r2, [r1], -r0
   128a0:	strdeq	r2, [r1], -r0
   128a4:	strdeq	r2, [r1], -r0
   128a8:	strdeq	r2, [r1], -r0
   128ac:	strdeq	r2, [r1], -r0
   128b0:	strdeq	r2, [r1], -r0
   128b4:	strdeq	r2, [r1], -r0
   128b8:	strdeq	r2, [r1], -r0
   128bc:	strdeq	r2, [r1], -r0
   128c0:	strdeq	r2, [r1], -r0
   128c4:	strdeq	r2, [r1], -r0
   128c8:	strdeq	r2, [r1], -r0
   128cc:	strdeq	r2, [r1], -r0
   128d0:	strdeq	r2, [r1], -r0
   128d4:	strdeq	r2, [r1], -r0
   128d8:	strdeq	r2, [r1], -r0
   128dc:	strdeq	r2, [r1], -r0
   128e0:	strdeq	r2, [r1], -r0
   128e4:	strdeq	r2, [r1], -r0
   128e8:	strdeq	r2, [r1], -r0
   128ec:	andeq	r2, r1, ip, asr r9
   128f0:	cmp	r6, r4
   128f4:	bne	12854 <abort@plt+0x1b3c>
   128f8:	ldr	r0, [sp, #124]	; 0x7c
   128fc:	bl	10bbc <iswprint@plt>
   12900:	add	r7, r7, r8
   12904:	cmp	r0, #0
   12908:	add	r0, sp, #128	; 0x80
   1290c:	moveq	r5, #0
   12910:	bl	10b74 <mbsinit@plt>
   12914:	cmp	r0, #0
   12918:	beq	127f4 <abort@plt+0x1adc>
   1291c:	ldr	r4, [sp, #32]
   12920:	str	r5, [sp, #32]
   12924:	ldr	r3, [sp, #32]
   12928:	mov	r1, r7
   1292c:	eor	r3, r3, #1
   12930:	ldr	r7, [sp, #104]	; 0x68
   12934:	ldr	r6, [sp, #108]	; 0x6c
   12938:	ldr	r8, [sp, #112]	; 0x70
   1293c:	ldr	r5, [sp, #116]	; 0x74
   12940:	uxtb	r3, r3
   12944:	cmp	r1, #1
   12948:	bls	12604 <abort@plt+0x18ec>
   1294c:	ldr	r2, [sp, #56]	; 0x38
   12950:	and	r3, r3, r2
   12954:	uxtb	r3, r3
   12958:	b	12614 <abort@plt+0x18fc>
   1295c:	mov	r3, #2
   12960:	str	r3, [sp, #176]	; 0xb0
   12964:	ldr	r2, [sp, #64]	; 0x40
   12968:	ldr	r3, [sp, #56]	; 0x38
   1296c:	mov	sl, r9
   12970:	mov	r9, fp
   12974:	and	r3, r3, r2
   12978:	tst	r3, #255	; 0xff
   1297c:	ldr	r3, [sp, #176]	; 0xb0
   12980:	movne	r3, #4
   12984:	str	r3, [sp, #176]	; 0xb0
   12988:	ldr	r3, [sp, #180]	; 0xb4
   1298c:	mov	ip, #0
   12990:	bic	r3, r3, #2
   12994:	str	r3, [sp, #4]
   12998:	ldr	r3, [sp, #192]	; 0xc0
   1299c:	ldr	r2, [sp, #44]	; 0x2c
   129a0:	str	r3, [sp, #16]
   129a4:	ldr	r3, [sp, #188]	; 0xbc
   129a8:	mov	r1, r9
   129ac:	str	r3, [sp, #12]
   129b0:	ldr	r3, [sp, #176]	; 0xb0
   129b4:	mov	r0, sl
   129b8:	str	r3, [sp]
   129bc:	str	ip, [sp, #8]
   129c0:	ldr	r3, [sp, #24]
   129c4:	bl	11824 <abort@plt+0xb0c>
   129c8:	mov	fp, r0
   129cc:	mov	r0, fp
   129d0:	add	sp, sp, #140	; 0x8c
   129d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   129d8:	mov	r4, #92	; 0x5c
   129dc:	mov	r1, #0
   129e0:	mov	r3, r4
   129e4:	b	11fd8 <abort@plt+0x12c0>
   129e8:	mov	r3, #0
   129ec:	ldr	r1, [sp, #52]	; 0x34
   129f0:	str	r3, [sp, #32]
   129f4:	mov	r4, #63	; 0x3f
   129f8:	b	11df8 <abort@plt+0x10e0>
   129fc:	cmp	fp, #0
   12a00:	beq	12a5c <abort@plt+0x1d44>
   12a04:	mov	r3, #39	; 0x27
   12a08:	strb	r3, [r9]
   12a0c:	mov	r3, #0
   12a10:	str	r3, [sp, #40]	; 0x28
   12a14:	mov	r3, #1
   12a18:	str	r3, [sp, #68]	; 0x44
   12a1c:	ldr	r3, [pc, #448]	; 12be4 <abort@plt+0x1ecc>
   12a20:	mov	r8, #1
   12a24:	str	r3, [sp, #72]	; 0x48
   12a28:	b	11c0c <abort@plt+0xef4>
   12a2c:	ldr	r3, [sp, #40]	; 0x28
   12a30:	mov	sl, r9
   12a34:	str	r3, [sp, #56]	; 0x38
   12a38:	mov	r9, fp
   12a3c:	ldr	r2, [sp, #64]	; 0x40
   12a40:	b	12974 <abort@plt+0x1c5c>
   12a44:	str	r2, [sp, #36]	; 0x24
   12a48:	b	11e5c <abort@plt+0x1144>
   12a4c:	mov	r1, #0
   12a50:	str	r3, [sp, #32]
   12a54:	mov	r4, #63	; 0x3f
   12a58:	b	11df8 <abort@plt+0x10e0>
   12a5c:	ldr	r3, [pc, #384]	; 12be4 <abort@plt+0x1ecc>
   12a60:	str	r3, [sp, #72]	; 0x48
   12a64:	mov	r3, #0
   12a68:	str	r3, [sp, #40]	; 0x28
   12a6c:	mov	r3, #1
   12a70:	str	r3, [sp, #68]	; 0x44
   12a74:	mov	r8, r3
   12a78:	b	11c0c <abort@plt+0xef4>
   12a7c:	bl	10d18 <abort@plt>
   12a80:	cmp	fp, #0
   12a84:	beq	12ae4 <abort@plt+0x1dcc>
   12a88:	mov	r2, #1
   12a8c:	mov	r3, #34	; 0x22
   12a90:	strb	r3, [r9]
   12a94:	mov	r8, r2
   12a98:	mov	r3, r2
   12a9c:	str	r2, [sp, #68]	; 0x44
   12aa0:	str	r3, [sp, #56]	; 0x38
   12aa4:	ldr	r3, [pc, #316]	; 12be8 <abort@plt+0x1ed0>
   12aa8:	ldr	r1, [sp, #56]	; 0x38
   12aac:	str	r3, [sp, #72]	; 0x48
   12ab0:	ldr	r2, [sp, #176]	; 0xb0
   12ab4:	ldr	ip, [sp, #40]	; 0x28
   12ab8:	ldr	lr, [sp, #176]	; 0xb0
   12abc:	b	118f0 <abort@plt+0xbd8>
   12ac0:	ldr	r0, [sp, #44]	; 0x2c
   12ac4:	bl	10c64 <strlen@plt>
   12ac8:	str	r0, [sp, #24]
   12acc:	b	127d0 <abort@plt+0x1ab8>
   12ad0:	mov	r7, #0
   12ad4:	ldr	r1, [sp, #52]	; 0x34
   12ad8:	str	r3, [sp, #32]
   12adc:	mov	r4, #48	; 0x30
   12ae0:	b	11df8 <abort@plt+0x10e0>
   12ae4:	mov	r3, #1
   12ae8:	str	r3, [sp, #68]	; 0x44
   12aec:	mov	r8, r3
   12af0:	b	12aa0 <abort@plt+0x1d88>
   12af4:	mov	r3, #2
   12af8:	mov	sl, r9
   12afc:	str	r3, [sp, #176]	; 0xb0
   12b00:	mov	r9, fp
   12b04:	ldr	r3, [sp, #56]	; 0x38
   12b08:	b	12974 <abort@plt+0x1c5c>
   12b0c:	ldr	r6, [sp, #48]	; 0x30
   12b10:	b	125c0 <abort@plt+0x18a8>
   12b14:	ldr	r0, [sp, #24]
   12b18:	mov	ip, r6
   12b1c:	cmp	r0, ip
   12b20:	mov	r1, r7
   12b24:	mov	r2, r4
   12b28:	ldr	r7, [sp, #104]	; 0x68
   12b2c:	ldr	r4, [sp, #32]
   12b30:	ldr	r6, [sp, #108]	; 0x6c
   12b34:	ldr	r8, [sp, #112]	; 0x70
   12b38:	ldr	r5, [sp, #116]	; 0x74
   12b3c:	bls	12b6c <abort@plt+0x1e54>
   12b40:	ldrb	r3, [r2]
   12b44:	cmp	r3, #0
   12b48:	bne	12b5c <abort@plt+0x1e44>
   12b4c:	b	12c7c <abort@plt+0x1f64>
   12b50:	ldrb	r3, [r2, #1]!
   12b54:	cmp	r3, #0
   12b58:	beq	12c7c <abort@plt+0x1f64>
   12b5c:	add	r1, r1, #1
   12b60:	add	r3, sl, r1
   12b64:	cmp	r0, r3
   12b68:	bhi	12b50 <abort@plt+0x1e38>
   12b6c:	mov	r2, #0
   12b70:	mov	r3, r7
   12b74:	str	r2, [sp, #32]
   12b78:	b	12944 <abort@plt+0x1c2c>
   12b7c:	mov	r1, r7
   12b80:	ldr	r7, [sp, #104]	; 0x68
   12b84:	mov	r2, #0
   12b88:	ldr	r4, [sp, #32]
   12b8c:	ldr	r6, [sp, #108]	; 0x6c
   12b90:	ldr	r8, [sp, #112]	; 0x70
   12b94:	ldr	r5, [sp, #116]	; 0x74
   12b98:	mov	r3, r7
   12b9c:	str	r2, [sp, #32]
   12ba0:	b	12944 <abort@plt+0x1c2c>
   12ba4:	mov	r3, r5
   12ba8:	eor	r3, r3, #1
   12bac:	ldr	r4, [sp, #32]
   12bb0:	mov	r1, r7
   12bb4:	str	r5, [sp, #32]
   12bb8:	ldr	r7, [sp, #104]	; 0x68
   12bbc:	ldr	r6, [sp, #108]	; 0x6c
   12bc0:	ldr	r8, [sp, #112]	; 0x70
   12bc4:	ldr	r5, [sp, #116]	; 0x74
   12bc8:	uxtb	r3, r3
   12bcc:	b	12944 <abort@plt+0x1c2c>
   12bd0:	mov	sl, r9
   12bd4:	str	r3, [sp, #56]	; 0x38
   12bd8:	mov	r9, fp
   12bdc:	ldr	r2, [sp, #64]	; 0x40
   12be0:	b	12974 <abort@plt+0x1c5c>
   12be4:	muleq	r1, r8, r5
   12be8:	muleq	r1, r4, r5
   12bec:	muleq	r1, ip, r5
   12bf0:	stmdacc	r0, {r0, r6, r7, r8, ip, lr}
   12bf4:	ldr	r2, [sp, #44]	; 0x2c
   12bf8:	ldrb	r1, [r2, r3]
   12bfc:	sub	r2, r1, #33	; 0x21
   12c00:	uxtb	r2, r2
   12c04:	cmp	r2, #29
   12c08:	bhi	12c88 <abort@plt+0x1f70>
   12c0c:	ldr	r0, [pc, #-36]	; 12bf0 <abort@plt+0x1ed8>
   12c10:	mov	ip, #1
   12c14:	ands	r2, r0, ip, lsl r2
   12c18:	beq	12ca8 <abort@plt+0x1f90>
   12c1c:	ldr	r2, [sp, #40]	; 0x28
   12c20:	cmp	r2, #0
   12c24:	bne	12d9c <abort@plt+0x2084>
   12c28:	add	r2, r8, #1
   12c2c:	cmp	fp, r8
   12c30:	strbhi	r4, [r9, r8]
   12c34:	cmp	fp, r2
   12c38:	movhi	r0, #34	; 0x22
   12c3c:	strbhi	r0, [r9, r2]
   12c40:	add	r2, r8, #2
   12c44:	cmp	fp, r2
   12c48:	movhi	r0, #34	; 0x22
   12c4c:	strbhi	r0, [r9, r2]
   12c50:	add	r2, r8, #3
   12c54:	cmp	fp, r2
   12c58:	mov	sl, r3
   12c5c:	ldr	r3, [sp, #40]	; 0x28
   12c60:	movhi	r0, #63	; 0x3f
   12c64:	mov	r4, r1
   12c68:	strbhi	r0, [r9, r2]
   12c6c:	add	r8, r8, #4
   12c70:	mov	r1, r3
   12c74:	str	r3, [sp, #32]
   12c78:	b	11df8 <abort@plt+0x10e0>
   12c7c:	str	r3, [sp, #32]
   12c80:	mov	r3, r7
   12c84:	b	12944 <abort@plt+0x1c2c>
   12c88:	mov	r1, #0
   12c8c:	str	r1, [sp, #32]
   12c90:	b	11df8 <abort@plt+0x10e0>
   12c94:	mov	sl, r9
   12c98:	ldr	r3, [sp, #56]	; 0x38
   12c9c:	mov	r9, fp
   12ca0:	ldr	r2, [sp, #64]	; 0x40
   12ca4:	b	12974 <abort@plt+0x1c5c>
   12ca8:	str	r2, [sp, #32]
   12cac:	mov	r1, #0
   12cb0:	b	11df8 <abort@plt+0x10e0>
   12cb4:	ldr	r2, [sp, #76]	; 0x4c
   12cb8:	mov	sl, r9
   12cbc:	mov	r9, fp
   12cc0:	mov	fp, r8
   12cc4:	ldr	r1, [sp, #72]	; 0x48
   12cc8:	cmp	r1, #0
   12ccc:	moveq	r3, #0
   12cd0:	andne	r3, r2, #1
   12cd4:	cmp	r3, #0
   12cd8:	beq	12d04 <abort@plt+0x1fec>
   12cdc:	ldrb	r3, [r1]
   12ce0:	cmp	r3, #0
   12ce4:	beq	12d04 <abort@plt+0x1fec>
   12ce8:	mov	r2, r1
   12cec:	cmp	r9, fp
   12cf0:	strbhi	r3, [sl, fp]
   12cf4:	ldrb	r3, [r2, #1]!
   12cf8:	add	fp, fp, #1
   12cfc:	cmp	r3, #0
   12d00:	bne	12cec <abort@plt+0x1fd4>
   12d04:	cmp	r9, fp
   12d08:	movhi	r3, #0
   12d0c:	strbhi	r3, [sl, fp]
   12d10:	b	129cc <abort@plt+0x1cb4>
   12d14:	ldr	r3, [sp, #192]	; 0xc0
   12d18:	mov	ip, #5
   12d1c:	str	r3, [sp, #16]
   12d20:	ldr	r3, [sp, #188]	; 0xbc
   12d24:	ldr	r2, [sp, #44]	; 0x2c
   12d28:	str	r3, [sp, #12]
   12d2c:	ldr	r3, [sp, #184]	; 0xb8
   12d30:	ldr	r1, [sp, #84]	; 0x54
   12d34:	str	r3, [sp, #8]
   12d38:	ldr	r3, [sp, #180]	; 0xb4
   12d3c:	mov	r0, r9
   12d40:	str	r3, [sp, #4]
   12d44:	str	ip, [sp]
   12d48:	ldr	r3, [sp, #24]
   12d4c:	bl	11824 <abort@plt+0xb0c>
   12d50:	mov	fp, r0
   12d54:	b	129cc <abort@plt+0x1cb4>
   12d58:	mov	sl, r9
   12d5c:	mov	r9, fp
   12d60:	mov	fp, r8
   12d64:	b	12cc4 <abort@plt+0x1fac>
   12d68:	ldr	r1, [sp, #176]	; 0xb0
   12d6c:	bl	11704 <abort@plt+0x9ec>
   12d70:	str	r0, [sp, #192]	; 0xc0
   12d74:	b	11ce0 <abort@plt+0xfc8>
   12d78:	ldr	r1, [sp, #176]	; 0xb0
   12d7c:	bl	11704 <abort@plt+0x9ec>
   12d80:	str	r0, [sp, #188]	; 0xbc
   12d84:	b	11cc0 <abort@plt+0xfa8>
   12d88:	mov	sl, r9
   12d8c:	mov	r2, r3
   12d90:	mov	r9, fp
   12d94:	mov	fp, r8
   12d98:	b	12cc4 <abort@plt+0x1fac>
   12d9c:	mov	sl, r9
   12da0:	mov	r9, fp
   12da4:	b	12988 <abort@plt+0x1c70>
   12da8:	push	{r4, r5, r6, lr}
   12dac:	mov	r5, r0
   12db0:	bl	10c70 <__errno_location@plt>
   12db4:	cmp	r5, #0
   12db8:	mov	r1, #48	; 0x30
   12dbc:	mov	r4, r0
   12dc0:	ldr	r0, [pc, #16]	; 12dd8 <abort@plt+0x20c0>
   12dc4:	ldr	r6, [r4]
   12dc8:	movne	r0, r5
   12dcc:	bl	166ac <abort@plt+0x5994>
   12dd0:	str	r6, [r4]
   12dd4:	pop	{r4, r5, r6, pc}
   12dd8:	andeq	r8, r2, ip, lsr r1
   12ddc:	ldr	r3, [pc, #12]	; 12df0 <abort@plt+0x20d8>
   12de0:	cmp	r0, #0
   12de4:	moveq	r0, r3
   12de8:	ldr	r0, [r0]
   12dec:	bx	lr
   12df0:	andeq	r8, r2, ip, lsr r1
   12df4:	ldr	r3, [pc, #12]	; 12e08 <abort@plt+0x20f0>
   12df8:	cmp	r0, #0
   12dfc:	moveq	r0, r3
   12e00:	str	r1, [r0]
   12e04:	bx	lr
   12e08:	andeq	r8, r2, ip, lsr r1
   12e0c:	ldr	r3, [pc, #52]	; 12e48 <abort@plt+0x2130>
   12e10:	cmp	r0, #0
   12e14:	moveq	r0, r3
   12e18:	add	r3, r0, #8
   12e1c:	push	{lr}		; (str lr, [sp, #-4]!)
   12e20:	lsr	lr, r1, #5
   12e24:	and	r1, r1, #31
   12e28:	ldr	ip, [r3, lr, lsl #2]
   12e2c:	lsr	r0, ip, r1
   12e30:	eor	r2, r2, r0
   12e34:	and	r2, r2, #1
   12e38:	and	r0, r0, #1
   12e3c:	eor	r1, ip, r2, lsl r1
   12e40:	str	r1, [r3, lr, lsl #2]
   12e44:	pop	{pc}		; (ldr pc, [sp], #4)
   12e48:	andeq	r8, r2, ip, lsr r1
   12e4c:	ldr	r3, [pc, #16]	; 12e64 <abort@plt+0x214c>
   12e50:	cmp	r0, #0
   12e54:	movne	r3, r0
   12e58:	ldr	r0, [r3, #4]
   12e5c:	str	r1, [r3, #4]
   12e60:	bx	lr
   12e64:	andeq	r8, r2, ip, lsr r1
   12e68:	ldr	r3, [pc, #44]	; 12e9c <abort@plt+0x2184>
   12e6c:	cmp	r0, #0
   12e70:	moveq	r0, r3
   12e74:	mov	ip, #10
   12e78:	cmp	r2, #0
   12e7c:	cmpne	r1, #0
   12e80:	str	ip, [r0]
   12e84:	beq	12e94 <abort@plt+0x217c>
   12e88:	str	r1, [r0, #40]	; 0x28
   12e8c:	str	r2, [r0, #44]	; 0x2c
   12e90:	bx	lr
   12e94:	push	{r4, lr}
   12e98:	bl	10d18 <abort@plt>
   12e9c:	andeq	r8, r2, ip, lsr r1
   12ea0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12ea4:	sub	sp, sp, #24
   12ea8:	ldr	ip, [pc, #108]	; 12f1c <abort@plt+0x2204>
   12eac:	ldr	r4, [sp, #56]	; 0x38
   12eb0:	mov	r9, r2
   12eb4:	cmp	r4, #0
   12eb8:	moveq	r4, ip
   12ebc:	mov	sl, r3
   12ec0:	mov	r7, r0
   12ec4:	mov	r8, r1
   12ec8:	bl	10c70 <__errno_location@plt>
   12ecc:	ldr	r3, [r4, #44]	; 0x2c
   12ed0:	mov	r1, r8
   12ed4:	ldr	r6, [r0]
   12ed8:	str	r3, [sp, #16]
   12edc:	ldr	r2, [r4, #40]	; 0x28
   12ee0:	add	r3, r4, #8
   12ee4:	str	r3, [sp, #8]
   12ee8:	str	r2, [sp, #12]
   12eec:	ldr	r2, [r4, #4]
   12ef0:	mov	r5, r0
   12ef4:	str	r2, [sp, #4]
   12ef8:	ldr	ip, [r4]
   12efc:	mov	r3, sl
   12f00:	mov	r2, r9
   12f04:	mov	r0, r7
   12f08:	str	ip, [sp]
   12f0c:	bl	11824 <abort@plt+0xb0c>
   12f10:	str	r6, [r5]
   12f14:	add	sp, sp, #24
   12f18:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12f1c:	andeq	r8, r2, ip, lsr r1
   12f20:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12f24:	cmp	r2, #0
   12f28:	sub	sp, sp, #36	; 0x24
   12f2c:	ldr	r4, [pc, #164]	; 12fd8 <abort@plt+0x22c0>
   12f30:	mov	r8, r1
   12f34:	movne	r4, r2
   12f38:	mov	r7, r0
   12f3c:	bl	10c70 <__errno_location@plt>
   12f40:	ldr	r3, [r4, #44]	; 0x2c
   12f44:	ldr	r5, [r4, #4]
   12f48:	add	r9, r4, #8
   12f4c:	orr	r5, r5, #1
   12f50:	mov	r1, #0
   12f54:	mov	r2, r7
   12f58:	ldr	fp, [r0]
   12f5c:	str	r3, [sp, #16]
   12f60:	ldr	r3, [r4, #40]	; 0x28
   12f64:	stmib	sp, {r5, r9}
   12f68:	str	r3, [sp, #12]
   12f6c:	ldr	r3, [r4]
   12f70:	mov	r6, r0
   12f74:	str	r3, [sp]
   12f78:	mov	r0, r1
   12f7c:	mov	r3, r8
   12f80:	bl	11824 <abort@plt+0xb0c>
   12f84:	add	r1, r0, #1
   12f88:	mov	r0, r1
   12f8c:	str	r1, [sp, #28]
   12f90:	bl	16168 <abort@plt+0x5450>
   12f94:	ldr	r3, [r4, #44]	; 0x2c
   12f98:	ldr	r1, [sp, #28]
   12f9c:	str	r3, [sp, #16]
   12fa0:	ldr	r3, [r4, #40]	; 0x28
   12fa4:	str	r5, [sp, #4]
   12fa8:	str	r3, [sp, #12]
   12fac:	str	r9, [sp, #8]
   12fb0:	ldr	ip, [r4]
   12fb4:	mov	r3, r8
   12fb8:	mov	r2, r7
   12fbc:	str	ip, [sp]
   12fc0:	mov	sl, r0
   12fc4:	bl	11824 <abort@plt+0xb0c>
   12fc8:	mov	r0, sl
   12fcc:	str	fp, [r6]
   12fd0:	add	sp, sp, #36	; 0x24
   12fd4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12fd8:	andeq	r8, r2, ip, lsr r1
   12fdc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12fe0:	cmp	r3, #0
   12fe4:	sub	sp, sp, #44	; 0x2c
   12fe8:	ldr	r4, [pc, #192]	; 130b0 <abort@plt+0x2398>
   12fec:	mov	r6, r2
   12ff0:	movne	r4, r3
   12ff4:	mov	r9, r1
   12ff8:	mov	r8, r0
   12ffc:	bl	10c70 <__errno_location@plt>
   13000:	ldr	r3, [r4, #44]	; 0x2c
   13004:	ldr	r5, [r4, #4]
   13008:	add	sl, r4, #8
   1300c:	cmp	r6, #0
   13010:	orreq	r5, r5, #1
   13014:	mov	r1, #0
   13018:	ldr	r2, [r0]
   1301c:	str	r3, [sp, #16]
   13020:	ldr	r3, [r4, #40]	; 0x28
   13024:	stmib	sp, {r5, sl}
   13028:	str	r3, [sp, #12]
   1302c:	ldr	r3, [r4]
   13030:	mov	r7, r0
   13034:	str	r2, [sp, #28]
   13038:	str	r3, [sp]
   1303c:	mov	r2, r8
   13040:	mov	r3, r9
   13044:	mov	r0, r1
   13048:	bl	11824 <abort@plt+0xb0c>
   1304c:	add	r1, r0, #1
   13050:	mov	fp, r0
   13054:	mov	r0, r1
   13058:	str	r1, [sp, #36]	; 0x24
   1305c:	bl	16168 <abort@plt+0x5450>
   13060:	ldr	r3, [r4, #44]	; 0x2c
   13064:	mov	r2, r8
   13068:	str	r3, [sp, #16]
   1306c:	ldr	r3, [r4, #40]	; 0x28
   13070:	str	r5, [sp, #4]
   13074:	str	r3, [sp, #12]
   13078:	str	sl, [sp, #8]
   1307c:	ldr	ip, [r4]
   13080:	ldr	r1, [sp, #36]	; 0x24
   13084:	mov	r3, r9
   13088:	str	ip, [sp]
   1308c:	str	r0, [sp, #32]
   13090:	bl	11824 <abort@plt+0xb0c>
   13094:	ldr	r2, [sp, #28]
   13098:	cmp	r6, #0
   1309c:	str	r2, [r7]
   130a0:	ldr	r0, [sp, #32]
   130a4:	strne	fp, [r6]
   130a8:	add	sp, sp, #44	; 0x2c
   130ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   130b0:	andeq	r8, r2, ip, lsr r1
   130b4:	push	{r4, r5, r6, r7, r8, lr}
   130b8:	ldr	r6, [pc, #116]	; 13134 <abort@plt+0x241c>
   130bc:	ldr	r3, [r6, #4]
   130c0:	ldr	r7, [r6]
   130c4:	cmp	r3, #1
   130c8:	movgt	r5, r7
   130cc:	movgt	r4, #1
   130d0:	ble	130f0 <abort@plt+0x23d8>
   130d4:	ldr	r0, [r5, #12]
   130d8:	bl	16a14 <abort@plt+0x5cfc>
   130dc:	ldr	r3, [r6, #4]
   130e0:	add	r4, r4, #1
   130e4:	cmp	r3, r4
   130e8:	add	r5, r5, #8
   130ec:	bgt	130d4 <abort@plt+0x23bc>
   130f0:	ldr	r0, [r7, #4]
   130f4:	ldr	r4, [pc, #60]	; 13138 <abort@plt+0x2420>
   130f8:	cmp	r0, r4
   130fc:	beq	13110 <abort@plt+0x23f8>
   13100:	bl	16a14 <abort@plt+0x5cfc>
   13104:	mov	r3, #256	; 0x100
   13108:	str	r4, [r6, #12]
   1310c:	str	r3, [r6, #8]
   13110:	ldr	r4, [pc, #36]	; 1313c <abort@plt+0x2424>
   13114:	cmp	r7, r4
   13118:	beq	13128 <abort@plt+0x2410>
   1311c:	mov	r0, r7
   13120:	bl	16a14 <abort@plt+0x5cfc>
   13124:	str	r4, [r6]
   13128:	mov	r3, #1
   1312c:	str	r3, [r6, #4]
   13130:	pop	{r4, r5, r6, r7, r8, pc}
   13134:	ldrdeq	r8, [r2], -r0
   13138:	andeq	r8, r2, ip, ror #2
   1313c:	ldrdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   13140:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13144:	sub	sp, sp, #44	; 0x2c
   13148:	mov	r5, r0
   1314c:	mov	sl, r1
   13150:	bl	10c70 <__errno_location@plt>
   13154:	ldr	r4, [pc, #400]	; 132ec <abort@plt+0x25d4>
   13158:	cmn	r5, #-2147483647	; 0x80000001
   1315c:	ldr	r6, [r4]
   13160:	mov	r8, r0
   13164:	movne	r0, #0
   13168:	moveq	r0, #1
   1316c:	ldr	r3, [r8]
   13170:	orrs	r0, r0, r5, lsr #31
   13174:	str	r3, [sp, #24]
   13178:	bne	132e8 <abort@plt+0x25d0>
   1317c:	ldr	r2, [r4, #4]
   13180:	cmp	r5, r2
   13184:	blt	131e4 <abort@plt+0x24cc>
   13188:	add	r7, r4, #8
   1318c:	cmp	r6, r7
   13190:	str	r2, [sp, #36]	; 0x24
   13194:	beq	132b8 <abort@plt+0x25a0>
   13198:	mov	r3, #8
   1319c:	sub	r2, r5, r2
   131a0:	mov	r0, r6
   131a4:	str	r3, [sp]
   131a8:	add	r2, r2, #1
   131ac:	mvn	r3, #-2147483648	; 0x80000000
   131b0:	add	r1, sp, #36	; 0x24
   131b4:	bl	16384 <abort@plt+0x566c>
   131b8:	mov	r6, r0
   131bc:	str	r0, [r4]
   131c0:	ldr	r0, [r4, #4]
   131c4:	ldr	r2, [sp, #36]	; 0x24
   131c8:	mov	r1, #0
   131cc:	sub	r2, r2, r0
   131d0:	add	r0, r6, r0, lsl #3
   131d4:	lsl	r2, r2, #3
   131d8:	bl	10c88 <memset@plt>
   131dc:	ldr	r3, [sp, #36]	; 0x24
   131e0:	str	r3, [r4, #4]
   131e4:	ldr	r4, [pc, #260]	; 132f0 <abort@plt+0x25d8>
   131e8:	add	fp, r6, r5, lsl #3
   131ec:	ldr	r9, [r6, r5, lsl #3]
   131f0:	ldr	r0, [r4, #4]
   131f4:	ldr	r3, [r4]
   131f8:	ldr	r7, [fp, #4]
   131fc:	ldr	r1, [r4, #44]	; 0x2c
   13200:	ldr	r2, [r4, #40]	; 0x28
   13204:	orr	r0, r0, #1
   13208:	str	r3, [sp]
   1320c:	add	r3, r4, #8
   13210:	str	r0, [sp, #28]
   13214:	str	r0, [sp, #4]
   13218:	str	r1, [sp, #16]
   1321c:	str	r2, [sp, #12]
   13220:	str	r3, [sp, #8]
   13224:	mov	r0, r7
   13228:	mov	r1, r9
   1322c:	mvn	r3, #0
   13230:	mov	r2, sl
   13234:	bl	11824 <abort@plt+0xb0c>
   13238:	cmp	r9, r0
   1323c:	bhi	132a4 <abort@plt+0x258c>
   13240:	add	r3, r4, #48	; 0x30
   13244:	add	r9, r0, #1
   13248:	cmp	r7, r3
   1324c:	str	r9, [r6, r5, lsl #3]
   13250:	beq	1325c <abort@plt+0x2544>
   13254:	mov	r0, r7
   13258:	bl	16a14 <abort@plt+0x5cfc>
   1325c:	mov	r0, r9
   13260:	bl	16168 <abort@plt+0x5450>
   13264:	ldr	ip, [r4, #44]	; 0x2c
   13268:	ldr	r3, [r4]
   1326c:	ldr	lr, [r4, #40]	; 0x28
   13270:	ldr	r4, [pc, #124]	; 132f4 <abort@plt+0x25dc>
   13274:	mov	r2, sl
   13278:	mov	r1, r9
   1327c:	str	r0, [fp, #4]
   13280:	str	r4, [sp, #8]
   13284:	ldr	r4, [sp, #28]
   13288:	str	r3, [sp]
   1328c:	str	r4, [sp, #4]
   13290:	str	ip, [sp, #16]
   13294:	str	lr, [sp, #12]
   13298:	mvn	r3, #0
   1329c:	mov	r7, r0
   132a0:	bl	11824 <abort@plt+0xb0c>
   132a4:	ldr	r3, [sp, #24]
   132a8:	mov	r0, r7
   132ac:	str	r3, [r8]
   132b0:	add	sp, sp, #44	; 0x2c
   132b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   132b8:	mov	r3, #8
   132bc:	sub	r2, r5, r2
   132c0:	str	r3, [sp]
   132c4:	add	r1, sp, #36	; 0x24
   132c8:	add	r2, r2, #1
   132cc:	mvn	r3, #-2147483648	; 0x80000000
   132d0:	bl	16384 <abort@plt+0x566c>
   132d4:	mov	r6, r0
   132d8:	ldm	r7, {r0, r1}
   132dc:	str	r6, [r4]
   132e0:	stm	r6, {r0, r1}
   132e4:	b	131c0 <abort@plt+0x24a8>
   132e8:	bl	10d18 <abort@plt>
   132ec:	ldrdeq	r8, [r2], -r0
   132f0:	andeq	r8, r2, ip, lsr r1
   132f4:	andeq	r8, r2, r4, asr #2
   132f8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   132fc:	sub	sp, sp, #52	; 0x34
   13300:	mov	r5, r0
   13304:	mov	sl, r1
   13308:	mov	fp, r2
   1330c:	bl	10c70 <__errno_location@plt>
   13310:	ldr	r4, [pc, #408]	; 134b0 <abort@plt+0x2798>
   13314:	cmn	r5, #-2147483647	; 0x80000001
   13318:	ldr	r6, [r4]
   1331c:	mov	r8, r0
   13320:	movne	r0, #0
   13324:	moveq	r0, #1
   13328:	ldr	r3, [r8]
   1332c:	orrs	r0, r0, r5, lsr #31
   13330:	str	r3, [sp, #28]
   13334:	bne	134ac <abort@plt+0x2794>
   13338:	ldr	r2, [r4, #4]
   1333c:	cmp	r5, r2
   13340:	blt	133a0 <abort@plt+0x2688>
   13344:	add	r7, r4, #8
   13348:	cmp	r6, r7
   1334c:	str	r2, [sp, #44]	; 0x2c
   13350:	beq	1347c <abort@plt+0x2764>
   13354:	mov	r3, #8
   13358:	sub	r2, r5, r2
   1335c:	mov	r0, r6
   13360:	str	r3, [sp]
   13364:	add	r2, r2, #1
   13368:	mvn	r3, #-2147483648	; 0x80000000
   1336c:	add	r1, sp, #44	; 0x2c
   13370:	bl	16384 <abort@plt+0x566c>
   13374:	mov	r6, r0
   13378:	str	r0, [r4]
   1337c:	ldr	r0, [r4, #4]
   13380:	ldr	r2, [sp, #44]	; 0x2c
   13384:	mov	r1, #0
   13388:	sub	r2, r2, r0
   1338c:	add	r0, r6, r0, lsl #3
   13390:	lsl	r2, r2, #3
   13394:	bl	10c88 <memset@plt>
   13398:	ldr	r3, [sp, #44]	; 0x2c
   1339c:	str	r3, [r4, #4]
   133a0:	ldr	r4, [pc, #268]	; 134b4 <abort@plt+0x279c>
   133a4:	add	r3, r6, r5, lsl #3
   133a8:	str	r3, [sp, #32]
   133ac:	ldr	r7, [r3, #4]
   133b0:	ldr	r0, [r4, #4]
   133b4:	ldr	r3, [r4]
   133b8:	ldr	r9, [r6, r5, lsl #3]
   133bc:	ldr	r1, [r4, #44]	; 0x2c
   133c0:	ldr	r2, [r4, #40]	; 0x28
   133c4:	orr	r0, r0, #1
   133c8:	str	r3, [sp]
   133cc:	add	r3, r4, #8
   133d0:	str	r0, [sp, #36]	; 0x24
   133d4:	str	r0, [sp, #4]
   133d8:	str	r1, [sp, #16]
   133dc:	str	r2, [sp, #12]
   133e0:	str	r3, [sp, #8]
   133e4:	mov	r0, r7
   133e8:	mov	r1, r9
   133ec:	mov	r3, fp
   133f0:	mov	r2, sl
   133f4:	bl	11824 <abort@plt+0xb0c>
   133f8:	cmp	r9, r0
   133fc:	bhi	13468 <abort@plt+0x2750>
   13400:	add	r3, r4, #48	; 0x30
   13404:	add	r9, r0, #1
   13408:	cmp	r7, r3
   1340c:	str	r9, [r6, r5, lsl #3]
   13410:	beq	1341c <abort@plt+0x2704>
   13414:	mov	r0, r7
   13418:	bl	16a14 <abort@plt+0x5cfc>
   1341c:	mov	r0, r9
   13420:	bl	16168 <abort@plt+0x5450>
   13424:	ldr	ip, [sp, #32]
   13428:	ldr	lr, [r4, #44]	; 0x2c
   1342c:	ldr	r5, [r4, #40]	; 0x28
   13430:	mov	r3, fp
   13434:	mov	r2, sl
   13438:	mov	r1, r9
   1343c:	str	r0, [ip, #4]
   13440:	ldr	ip, [r4]
   13444:	ldr	r4, [pc, #108]	; 134b8 <abort@plt+0x27a0>
   13448:	str	lr, [sp, #16]
   1344c:	str	r4, [sp, #8]
   13450:	ldr	r4, [sp, #36]	; 0x24
   13454:	str	r5, [sp, #12]
   13458:	str	r4, [sp, #4]
   1345c:	str	ip, [sp]
   13460:	mov	r7, r0
   13464:	bl	11824 <abort@plt+0xb0c>
   13468:	ldr	r3, [sp, #28]
   1346c:	mov	r0, r7
   13470:	str	r3, [r8]
   13474:	add	sp, sp, #52	; 0x34
   13478:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1347c:	mov	r3, #8
   13480:	sub	r2, r5, r2
   13484:	str	r3, [sp]
   13488:	add	r1, sp, #44	; 0x2c
   1348c:	add	r2, r2, #1
   13490:	mvn	r3, #-2147483648	; 0x80000000
   13494:	bl	16384 <abort@plt+0x566c>
   13498:	mov	r6, r0
   1349c:	ldm	r7, {r0, r1}
   134a0:	str	r6, [r4]
   134a4:	stm	r6, {r0, r1}
   134a8:	b	1337c <abort@plt+0x2664>
   134ac:	bl	10d18 <abort@plt>
   134b0:	ldrdeq	r8, [r2], -r0
   134b4:	andeq	r8, r2, ip, lsr r1
   134b8:	andeq	r8, r2, r4, asr #2
   134bc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   134c0:	sub	sp, sp, #44	; 0x2c
   134c4:	mov	sl, r0
   134c8:	bl	10c70 <__errno_location@plt>
   134cc:	ldr	r4, [pc, #352]	; 13634 <abort@plt+0x291c>
   134d0:	ldr	r2, [r4, #4]
   134d4:	ldr	r5, [r4]
   134d8:	cmp	r2, #0
   134dc:	ldr	r3, [r0]
   134e0:	mov	r8, r0
   134e4:	str	r3, [sp, #28]
   134e8:	bgt	13544 <abort@plt+0x282c>
   134ec:	add	r6, r4, #8
   134f0:	cmp	r5, r6
   134f4:	str	r2, [sp, #36]	; 0x24
   134f8:	beq	13604 <abort@plt+0x28ec>
   134fc:	mov	r3, #8
   13500:	mov	r0, r5
   13504:	str	r3, [sp]
   13508:	rsb	r2, r2, #1
   1350c:	mvn	r3, #-2147483648	; 0x80000000
   13510:	add	r1, sp, #36	; 0x24
   13514:	bl	16384 <abort@plt+0x566c>
   13518:	mov	r5, r0
   1351c:	str	r0, [r4]
   13520:	ldr	r0, [r4, #4]
   13524:	ldr	r2, [sp, #36]	; 0x24
   13528:	mov	r1, #0
   1352c:	sub	r2, r2, r0
   13530:	add	r0, r5, r0, lsl #3
   13534:	lsl	r2, r2, #3
   13538:	bl	10c88 <memset@plt>
   1353c:	ldr	r3, [sp, #36]	; 0x24
   13540:	str	r3, [r4, #4]
   13544:	ldr	r4, [pc, #236]	; 13638 <abort@plt+0x2920>
   13548:	ldr	r9, [r5]
   1354c:	ldr	r6, [r5, #4]
   13550:	ldr	r7, [r4, #4]
   13554:	ldr	r1, [r4, #44]	; 0x2c
   13558:	ldr	r2, [r4, #40]	; 0x28
   1355c:	ldr	r3, [r4]
   13560:	orr	r7, r7, #1
   13564:	add	fp, r4, #8
   13568:	str	r1, [sp, #16]
   1356c:	str	r2, [sp, #12]
   13570:	str	r3, [sp]
   13574:	str	r7, [sp, #4]
   13578:	str	fp, [sp, #8]
   1357c:	mov	r1, r9
   13580:	mov	r0, r6
   13584:	mvn	r3, #0
   13588:	mov	r2, sl
   1358c:	bl	11824 <abort@plt+0xb0c>
   13590:	cmp	r9, r0
   13594:	bhi	135f0 <abort@plt+0x28d8>
   13598:	add	r3, r4, #48	; 0x30
   1359c:	add	r9, r0, #1
   135a0:	cmp	r6, r3
   135a4:	str	r9, [r5]
   135a8:	beq	135b4 <abort@plt+0x289c>
   135ac:	mov	r0, r6
   135b0:	bl	16a14 <abort@plt+0x5cfc>
   135b4:	mov	r0, r9
   135b8:	bl	16168 <abort@plt+0x5450>
   135bc:	ldr	ip, [r4, #44]	; 0x2c
   135c0:	ldr	r3, [r4]
   135c4:	ldr	lr, [r4, #40]	; 0x28
   135c8:	mov	r2, sl
   135cc:	mov	r1, r9
   135d0:	str	r0, [r5, #4]
   135d4:	str	r3, [sp]
   135d8:	stmib	sp, {r7, fp}
   135dc:	str	ip, [sp, #16]
   135e0:	str	lr, [sp, #12]
   135e4:	mvn	r3, #0
   135e8:	mov	r6, r0
   135ec:	bl	11824 <abort@plt+0xb0c>
   135f0:	ldr	r3, [sp, #28]
   135f4:	mov	r0, r6
   135f8:	str	r3, [r8]
   135fc:	add	sp, sp, #44	; 0x2c
   13600:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13604:	mov	r3, #8
   13608:	str	r3, [sp]
   1360c:	add	r1, sp, #36	; 0x24
   13610:	rsb	r2, r2, #1
   13614:	mvn	r3, #-2147483648	; 0x80000000
   13618:	mov	r0, #0
   1361c:	bl	16384 <abort@plt+0x566c>
   13620:	mov	r5, r0
   13624:	ldm	r6, {r0, r1}
   13628:	str	r5, [r4]
   1362c:	stm	r5, {r0, r1}
   13630:	b	13520 <abort@plt+0x2808>
   13634:	ldrdeq	r8, [r2], -r0
   13638:	andeq	r8, r2, ip, lsr r1
   1363c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13640:	sub	sp, sp, #44	; 0x2c
   13644:	mov	r9, r0
   13648:	mov	sl, r1
   1364c:	bl	10c70 <__errno_location@plt>
   13650:	ldr	r4, [pc, #364]	; 137c4 <abort@plt+0x2aac>
   13654:	ldr	r2, [r4, #4]
   13658:	ldr	r5, [r4]
   1365c:	cmp	r2, #0
   13660:	ldr	r3, [r0]
   13664:	mov	r7, r0
   13668:	str	r3, [sp, #24]
   1366c:	bgt	136c8 <abort@plt+0x29b0>
   13670:	add	r6, r4, #8
   13674:	cmp	r5, r6
   13678:	str	r2, [sp, #36]	; 0x24
   1367c:	beq	13794 <abort@plt+0x2a7c>
   13680:	mov	r3, #8
   13684:	mov	r0, r5
   13688:	str	r3, [sp]
   1368c:	rsb	r2, r2, #1
   13690:	mvn	r3, #-2147483648	; 0x80000000
   13694:	add	r1, sp, #36	; 0x24
   13698:	bl	16384 <abort@plt+0x566c>
   1369c:	mov	r5, r0
   136a0:	str	r0, [r4]
   136a4:	ldr	r0, [r4, #4]
   136a8:	ldr	r2, [sp, #36]	; 0x24
   136ac:	mov	r1, #0
   136b0:	sub	r2, r2, r0
   136b4:	add	r0, r5, r0, lsl #3
   136b8:	lsl	r2, r2, #3
   136bc:	bl	10c88 <memset@plt>
   136c0:	ldr	r3, [sp, #36]	; 0x24
   136c4:	str	r3, [r4, #4]
   136c8:	ldr	r4, [pc, #248]	; 137c8 <abort@plt+0x2ab0>
   136cc:	ldr	r8, [r5]
   136d0:	ldr	r6, [r5, #4]
   136d4:	ldr	r0, [r4, #4]
   136d8:	ldr	r1, [r4, #44]	; 0x2c
   136dc:	ldr	r2, [r4, #40]	; 0x28
   136e0:	ldr	r3, [r4]
   136e4:	orr	r0, r0, #1
   136e8:	add	fp, r4, #8
   136ec:	str	r0, [sp, #28]
   136f0:	str	r0, [sp, #4]
   136f4:	str	r1, [sp, #16]
   136f8:	str	r2, [sp, #12]
   136fc:	str	r3, [sp]
   13700:	str	fp, [sp, #8]
   13704:	mov	r1, r8
   13708:	mov	r0, r6
   1370c:	mov	r3, sl
   13710:	mov	r2, r9
   13714:	bl	11824 <abort@plt+0xb0c>
   13718:	cmp	r8, r0
   1371c:	bhi	13780 <abort@plt+0x2a68>
   13720:	add	r3, r4, #48	; 0x30
   13724:	add	r8, r0, #1
   13728:	cmp	r6, r3
   1372c:	str	r8, [r5]
   13730:	beq	1373c <abort@plt+0x2a24>
   13734:	mov	r0, r6
   13738:	bl	16a14 <abort@plt+0x5cfc>
   1373c:	mov	r0, r8
   13740:	bl	16168 <abort@plt+0x5450>
   13744:	ldr	lr, [r4, #44]	; 0x2c
   13748:	ldr	ip, [r4]
   1374c:	mov	r3, sl
   13750:	mov	r2, r9
   13754:	mov	r1, r8
   13758:	str	r0, [r5, #4]
   1375c:	ldr	r5, [r4, #40]	; 0x28
   13760:	ldr	r4, [sp, #28]
   13764:	str	fp, [sp, #8]
   13768:	str	r4, [sp, #4]
   1376c:	str	lr, [sp, #16]
   13770:	str	r5, [sp, #12]
   13774:	str	ip, [sp]
   13778:	mov	r6, r0
   1377c:	bl	11824 <abort@plt+0xb0c>
   13780:	ldr	r3, [sp, #24]
   13784:	mov	r0, r6
   13788:	str	r3, [r7]
   1378c:	add	sp, sp, #44	; 0x2c
   13790:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13794:	mov	r3, #8
   13798:	str	r3, [sp]
   1379c:	add	r1, sp, #36	; 0x24
   137a0:	rsb	r2, r2, #1
   137a4:	mvn	r3, #-2147483648	; 0x80000000
   137a8:	mov	r0, #0
   137ac:	bl	16384 <abort@plt+0x566c>
   137b0:	mov	r5, r0
   137b4:	ldm	r6, {r0, r1}
   137b8:	str	r5, [r4]
   137bc:	stm	r5, {r0, r1}
   137c0:	b	136a4 <abort@plt+0x298c>
   137c4:	ldrdeq	r8, [r2], -r0
   137c8:	andeq	r8, r2, ip, lsr r1
   137cc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   137d0:	sub	sp, sp, #132	; 0x84
   137d4:	mov	r5, r1
   137d8:	mov	r4, r0
   137dc:	mov	r9, r2
   137e0:	add	r0, sp, #80	; 0x50
   137e4:	mov	r2, #48	; 0x30
   137e8:	mov	r1, #0
   137ec:	bl	10c88 <memset@plt>
   137f0:	cmp	r5, #10
   137f4:	beq	139ac <abort@plt+0x2c94>
   137f8:	add	lr, sp, #80	; 0x50
   137fc:	str	r5, [sp, #80]	; 0x50
   13800:	ldm	lr!, {r0, r1, r2, r3}
   13804:	add	ip, sp, #32
   13808:	ldr	r6, [pc, #416]	; 139b0 <abort@plt+0x2c98>
   1380c:	stmia	ip!, {r0, r1, r2, r3}
   13810:	ldm	lr!, {r0, r1, r2, r3}
   13814:	stmia	ip!, {r0, r1, r2, r3}
   13818:	ldm	lr, {r0, r1, r2, r3}
   1381c:	stm	ip, {r0, r1, r2, r3}
   13820:	bl	10c70 <__errno_location@plt>
   13824:	cmn	r4, #-2147483647	; 0x80000001
   13828:	ldr	r5, [r6]
   1382c:	mov	r7, r0
   13830:	movne	r0, #0
   13834:	moveq	r0, #1
   13838:	ldr	r3, [r7]
   1383c:	orrs	r0, r0, r4, lsr #31
   13840:	str	r3, [sp, #24]
   13844:	bne	139ac <abort@plt+0x2c94>
   13848:	ldr	r2, [r6, #4]
   1384c:	cmp	r4, r2
   13850:	blt	138b0 <abort@plt+0x2b98>
   13854:	add	r8, r6, #8
   13858:	cmp	r5, r8
   1385c:	str	r2, [sp, #80]	; 0x50
   13860:	beq	1397c <abort@plt+0x2c64>
   13864:	mov	r3, #8
   13868:	sub	r2, r4, r2
   1386c:	mov	r0, r5
   13870:	str	r3, [sp]
   13874:	add	r2, r2, #1
   13878:	add	r1, sp, #80	; 0x50
   1387c:	mvn	r3, #-2147483648	; 0x80000000
   13880:	bl	16384 <abort@plt+0x566c>
   13884:	mov	r5, r0
   13888:	str	r0, [r6]
   1388c:	ldr	r0, [r6, #4]
   13890:	ldr	r2, [sp, #80]	; 0x50
   13894:	mov	r1, #0
   13898:	sub	r2, r2, r0
   1389c:	add	r0, r5, r0, lsl #3
   138a0:	lsl	r2, r2, #3
   138a4:	bl	10c88 <memset@plt>
   138a8:	ldr	r3, [sp, #80]	; 0x50
   138ac:	str	r3, [r6, #4]
   138b0:	add	fp, r5, r4, lsl #3
   138b4:	ldr	r1, [sp, #36]	; 0x24
   138b8:	ldr	r8, [r5, r4, lsl #3]
   138bc:	ldr	r6, [fp, #4]
   138c0:	ldr	r2, [sp, #72]	; 0x48
   138c4:	ldr	r3, [sp, #32]
   138c8:	ldr	ip, [sp, #76]	; 0x4c
   138cc:	orr	r1, r1, #1
   138d0:	add	sl, sp, #40	; 0x28
   138d4:	str	r1, [sp, #28]
   138d8:	str	r1, [sp, #4]
   138dc:	str	r2, [sp, #12]
   138e0:	str	r3, [sp]
   138e4:	mov	r0, r6
   138e8:	mov	r1, r8
   138ec:	str	ip, [sp, #16]
   138f0:	str	sl, [sp, #8]
   138f4:	mvn	r3, #0
   138f8:	mov	r2, r9
   138fc:	bl	11824 <abort@plt+0xb0c>
   13900:	cmp	r8, r0
   13904:	bhi	13968 <abort@plt+0x2c50>
   13908:	ldr	r3, [pc, #164]	; 139b4 <abort@plt+0x2c9c>
   1390c:	add	r8, r0, #1
   13910:	cmp	r6, r3
   13914:	str	r8, [r5, r4, lsl #3]
   13918:	beq	13924 <abort@plt+0x2c0c>
   1391c:	mov	r0, r6
   13920:	bl	16a14 <abort@plt+0x5cfc>
   13924:	mov	r0, r8
   13928:	bl	16168 <abort@plt+0x5450>
   1392c:	ldr	lr, [sp, #76]	; 0x4c
   13930:	ldr	r3, [sp, #32]
   13934:	ldr	ip, [sp, #72]	; 0x48
   13938:	ldr	r4, [sp, #28]
   1393c:	mov	r2, r9
   13940:	mov	r1, r8
   13944:	str	r0, [fp, #4]
   13948:	str	r3, [sp]
   1394c:	str	sl, [sp, #8]
   13950:	str	r4, [sp, #4]
   13954:	str	lr, [sp, #16]
   13958:	str	ip, [sp, #12]
   1395c:	mvn	r3, #0
   13960:	mov	r6, r0
   13964:	bl	11824 <abort@plt+0xb0c>
   13968:	ldr	r3, [sp, #24]
   1396c:	mov	r0, r6
   13970:	str	r3, [r7]
   13974:	add	sp, sp, #132	; 0x84
   13978:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1397c:	mov	r3, #8
   13980:	sub	r2, r4, r2
   13984:	add	r1, sp, #80	; 0x50
   13988:	str	r3, [sp]
   1398c:	add	r2, r2, #1
   13990:	mvn	r3, #-2147483648	; 0x80000000
   13994:	bl	16384 <abort@plt+0x566c>
   13998:	mov	r5, r0
   1399c:	ldm	r8, {r0, r1}
   139a0:	str	r5, [r6]
   139a4:	stm	r5, {r0, r1}
   139a8:	b	1388c <abort@plt+0x2b74>
   139ac:	bl	10d18 <abort@plt>
   139b0:	ldrdeq	r8, [r2], -r0
   139b4:	andeq	r8, r2, ip, ror #2
   139b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   139bc:	sub	sp, sp, #132	; 0x84
   139c0:	mov	r5, r1
   139c4:	mov	r4, r0
   139c8:	mov	r9, r2
   139cc:	add	r0, sp, #80	; 0x50
   139d0:	mov	r2, #48	; 0x30
   139d4:	mov	r1, #0
   139d8:	mov	sl, r3
   139dc:	bl	10c88 <memset@plt>
   139e0:	cmp	r5, #10
   139e4:	beq	13ba0 <abort@plt+0x2e88>
   139e8:	add	lr, sp, #80	; 0x50
   139ec:	str	r5, [sp, #80]	; 0x50
   139f0:	ldm	lr!, {r0, r1, r2, r3}
   139f4:	add	ip, sp, #32
   139f8:	ldr	r6, [pc, #420]	; 13ba4 <abort@plt+0x2e8c>
   139fc:	stmia	ip!, {r0, r1, r2, r3}
   13a00:	ldm	lr!, {r0, r1, r2, r3}
   13a04:	stmia	ip!, {r0, r1, r2, r3}
   13a08:	ldm	lr, {r0, r1, r2, r3}
   13a0c:	stm	ip, {r0, r1, r2, r3}
   13a10:	bl	10c70 <__errno_location@plt>
   13a14:	cmn	r4, #-2147483647	; 0x80000001
   13a18:	ldr	r5, [r6]
   13a1c:	mov	r7, r0
   13a20:	movne	r0, #0
   13a24:	moveq	r0, #1
   13a28:	ldr	r3, [r7]
   13a2c:	orrs	r0, r0, r4, lsr #31
   13a30:	str	r3, [sp, #24]
   13a34:	bne	13ba0 <abort@plt+0x2e88>
   13a38:	ldr	r2, [r6, #4]
   13a3c:	cmp	r4, r2
   13a40:	blt	13aa0 <abort@plt+0x2d88>
   13a44:	add	r8, r6, #8
   13a48:	cmp	r5, r8
   13a4c:	str	r2, [sp, #80]	; 0x50
   13a50:	beq	13b70 <abort@plt+0x2e58>
   13a54:	mov	r3, #8
   13a58:	sub	r2, r4, r2
   13a5c:	mov	r0, r5
   13a60:	str	r3, [sp]
   13a64:	add	r2, r2, #1
   13a68:	add	r1, sp, #80	; 0x50
   13a6c:	mvn	r3, #-2147483648	; 0x80000000
   13a70:	bl	16384 <abort@plt+0x566c>
   13a74:	mov	r5, r0
   13a78:	str	r0, [r6]
   13a7c:	ldr	r0, [r6, #4]
   13a80:	ldr	r2, [sp, #80]	; 0x50
   13a84:	mov	r1, #0
   13a88:	sub	r2, r2, r0
   13a8c:	add	r0, r5, r0, lsl #3
   13a90:	lsl	r2, r2, #3
   13a94:	bl	10c88 <memset@plt>
   13a98:	ldr	r3, [sp, #80]	; 0x50
   13a9c:	str	r3, [r6, #4]
   13aa0:	add	fp, r5, r4, lsl #3
   13aa4:	ldr	r3, [sp, #32]
   13aa8:	ldr	r1, [sp, #36]	; 0x24
   13aac:	ldr	r8, [r5, r4, lsl #3]
   13ab0:	ldr	r6, [fp, #4]
   13ab4:	ldr	r2, [sp, #72]	; 0x48
   13ab8:	ldr	ip, [sp, #76]	; 0x4c
   13abc:	orr	r1, r1, #1
   13ac0:	str	r3, [sp]
   13ac4:	add	r3, sp, #40	; 0x28
   13ac8:	str	r1, [sp, #28]
   13acc:	str	r1, [sp, #4]
   13ad0:	str	r2, [sp, #12]
   13ad4:	str	r3, [sp, #8]
   13ad8:	mov	r0, r6
   13adc:	mov	r1, r8
   13ae0:	str	ip, [sp, #16]
   13ae4:	mov	r3, sl
   13ae8:	mov	r2, r9
   13aec:	bl	11824 <abort@plt+0xb0c>
   13af0:	cmp	r8, r0
   13af4:	bhi	13b5c <abort@plt+0x2e44>
   13af8:	ldr	r3, [pc, #168]	; 13ba8 <abort@plt+0x2e90>
   13afc:	add	r8, r0, #1
   13b00:	cmp	r6, r3
   13b04:	str	r8, [r5, r4, lsl #3]
   13b08:	beq	13b14 <abort@plt+0x2dfc>
   13b0c:	mov	r0, r6
   13b10:	bl	16a14 <abort@plt+0x5cfc>
   13b14:	mov	r0, r8
   13b18:	bl	16168 <abort@plt+0x5450>
   13b1c:	add	lr, sp, #40	; 0x28
   13b20:	ldr	ip, [sp, #76]	; 0x4c
   13b24:	ldr	r4, [sp, #72]	; 0x48
   13b28:	ldr	r5, [sp, #28]
   13b2c:	mov	r3, sl
   13b30:	mov	r2, r9
   13b34:	mov	r1, r8
   13b38:	str	r0, [fp, #4]
   13b3c:	str	lr, [sp, #8]
   13b40:	ldr	lr, [sp, #32]
   13b44:	str	r5, [sp, #4]
   13b48:	str	ip, [sp, #16]
   13b4c:	str	r4, [sp, #12]
   13b50:	str	lr, [sp]
   13b54:	mov	r6, r0
   13b58:	bl	11824 <abort@plt+0xb0c>
   13b5c:	ldr	r3, [sp, #24]
   13b60:	mov	r0, r6
   13b64:	str	r3, [r7]
   13b68:	add	sp, sp, #132	; 0x84
   13b6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13b70:	mov	r3, #8
   13b74:	sub	r2, r4, r2
   13b78:	add	r1, sp, #80	; 0x50
   13b7c:	str	r3, [sp]
   13b80:	add	r2, r2, #1
   13b84:	mvn	r3, #-2147483648	; 0x80000000
   13b88:	bl	16384 <abort@plt+0x566c>
   13b8c:	mov	r5, r0
   13b90:	ldm	r8, {r0, r1}
   13b94:	str	r5, [r6]
   13b98:	stm	r5, {r0, r1}
   13b9c:	b	13a7c <abort@plt+0x2d64>
   13ba0:	bl	10d18 <abort@plt>
   13ba4:	ldrdeq	r8, [r2], -r0
   13ba8:	andeq	r8, r2, ip, ror #2
   13bac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13bb0:	sub	sp, sp, #124	; 0x7c
   13bb4:	mov	r4, r0
   13bb8:	mov	r9, r1
   13bbc:	add	r0, sp, #72	; 0x48
   13bc0:	mov	r2, #48	; 0x30
   13bc4:	mov	r1, #0
   13bc8:	bl	10c88 <memset@plt>
   13bcc:	cmp	r4, #10
   13bd0:	beq	13d5c <abort@plt+0x3044>
   13bd4:	add	lr, sp, #72	; 0x48
   13bd8:	str	r4, [sp, #72]	; 0x48
   13bdc:	ldm	lr!, {r0, r1, r2, r3}
   13be0:	add	ip, sp, #24
   13be4:	ldr	r5, [pc, #372]	; 13d60 <abort@plt+0x3048>
   13be8:	stmia	ip!, {r0, r1, r2, r3}
   13bec:	ldm	lr!, {r0, r1, r2, r3}
   13bf0:	stmia	ip!, {r0, r1, r2, r3}
   13bf4:	ldm	lr, {r0, r1, r2, r3}
   13bf8:	stm	ip, {r0, r1, r2, r3}
   13bfc:	bl	10c70 <__errno_location@plt>
   13c00:	ldr	r2, [r5, #4]
   13c04:	ldr	r4, [r5]
   13c08:	cmp	r2, #0
   13c0c:	mov	r7, r0
   13c10:	ldr	fp, [r0]
   13c14:	bgt	13c70 <abort@plt+0x2f58>
   13c18:	add	r6, r5, #8
   13c1c:	cmp	r4, r6
   13c20:	str	r2, [sp, #72]	; 0x48
   13c24:	beq	13d2c <abort@plt+0x3014>
   13c28:	mov	r3, #8
   13c2c:	mov	r0, r4
   13c30:	str	r3, [sp]
   13c34:	rsb	r2, r2, #1
   13c38:	add	r1, sp, #72	; 0x48
   13c3c:	mvn	r3, #-2147483648	; 0x80000000
   13c40:	bl	16384 <abort@plt+0x566c>
   13c44:	mov	r4, r0
   13c48:	str	r0, [r5]
   13c4c:	ldr	r0, [r5, #4]
   13c50:	ldr	r2, [sp, #72]	; 0x48
   13c54:	mov	r1, #0
   13c58:	sub	r2, r2, r0
   13c5c:	add	r0, r4, r0, lsl #3
   13c60:	lsl	r2, r2, #3
   13c64:	bl	10c88 <memset@plt>
   13c68:	ldr	r3, [sp, #72]	; 0x48
   13c6c:	str	r3, [r5, #4]
   13c70:	ldr	r6, [sp, #28]
   13c74:	ldr	r8, [r4]
   13c78:	ldr	r5, [r4, #4]
   13c7c:	ldr	r2, [sp, #64]	; 0x40
   13c80:	ldr	r3, [sp, #24]
   13c84:	ldr	ip, [sp, #68]	; 0x44
   13c88:	orr	r6, r6, #1
   13c8c:	add	sl, sp, #32
   13c90:	str	r2, [sp, #12]
   13c94:	str	r3, [sp]
   13c98:	str	r6, [sp, #4]
   13c9c:	mov	r1, r8
   13ca0:	mov	r0, r5
   13ca4:	str	ip, [sp, #16]
   13ca8:	str	sl, [sp, #8]
   13cac:	mvn	r3, #0
   13cb0:	mov	r2, r9
   13cb4:	bl	11824 <abort@plt+0xb0c>
   13cb8:	cmp	r8, r0
   13cbc:	bhi	13d1c <abort@plt+0x3004>
   13cc0:	ldr	r3, [pc, #156]	; 13d64 <abort@plt+0x304c>
   13cc4:	add	r8, r0, #1
   13cc8:	cmp	r5, r3
   13ccc:	str	r8, [r4]
   13cd0:	beq	13cdc <abort@plt+0x2fc4>
   13cd4:	mov	r0, r5
   13cd8:	bl	16a14 <abort@plt+0x5cfc>
   13cdc:	mov	r0, r8
   13ce0:	bl	16168 <abort@plt+0x5450>
   13ce4:	ldr	lr, [sp, #68]	; 0x44
   13ce8:	ldr	r3, [sp, #24]
   13cec:	ldr	ip, [sp, #64]	; 0x40
   13cf0:	mov	r2, r9
   13cf4:	mov	r1, r8
   13cf8:	str	r0, [r4, #4]
   13cfc:	str	r3, [sp]
   13d00:	str	sl, [sp, #8]
   13d04:	str	r6, [sp, #4]
   13d08:	str	lr, [sp, #16]
   13d0c:	str	ip, [sp, #12]
   13d10:	mvn	r3, #0
   13d14:	mov	r5, r0
   13d18:	bl	11824 <abort@plt+0xb0c>
   13d1c:	mov	r0, r5
   13d20:	str	fp, [r7]
   13d24:	add	sp, sp, #124	; 0x7c
   13d28:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13d2c:	mov	r3, #8
   13d30:	add	r1, sp, #72	; 0x48
   13d34:	str	r3, [sp]
   13d38:	rsb	r2, r2, #1
   13d3c:	mvn	r3, #-2147483648	; 0x80000000
   13d40:	mov	r0, #0
   13d44:	bl	16384 <abort@plt+0x566c>
   13d48:	mov	r4, r0
   13d4c:	ldm	r6, {r0, r1}
   13d50:	str	r4, [r5]
   13d54:	stm	r4, {r0, r1}
   13d58:	b	13c4c <abort@plt+0x2f34>
   13d5c:	bl	10d18 <abort@plt>
   13d60:	ldrdeq	r8, [r2], -r0
   13d64:	andeq	r8, r2, ip, ror #2
   13d68:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13d6c:	sub	sp, sp, #132	; 0x84
   13d70:	mov	r4, r0
   13d74:	mov	r9, r1
   13d78:	mov	sl, r2
   13d7c:	add	r0, sp, #80	; 0x50
   13d80:	mov	r2, #48	; 0x30
   13d84:	mov	r1, #0
   13d88:	bl	10c88 <memset@plt>
   13d8c:	cmp	r4, #10
   13d90:	beq	13f24 <abort@plt+0x320c>
   13d94:	add	lr, sp, #80	; 0x50
   13d98:	str	r4, [sp, #80]	; 0x50
   13d9c:	ldm	lr!, {r0, r1, r2, r3}
   13da0:	add	ip, sp, #32
   13da4:	ldr	r5, [pc, #380]	; 13f28 <abort@plt+0x3210>
   13da8:	stmia	ip!, {r0, r1, r2, r3}
   13dac:	ldm	lr!, {r0, r1, r2, r3}
   13db0:	stmia	ip!, {r0, r1, r2, r3}
   13db4:	ldm	lr, {r0, r1, r2, r3}
   13db8:	stm	ip, {r0, r1, r2, r3}
   13dbc:	bl	10c70 <__errno_location@plt>
   13dc0:	ldr	r2, [r5, #4]
   13dc4:	ldr	r4, [r5]
   13dc8:	cmp	r2, #0
   13dcc:	ldr	r3, [r0]
   13dd0:	mov	r7, r0
   13dd4:	str	r3, [sp, #28]
   13dd8:	bgt	13e34 <abort@plt+0x311c>
   13ddc:	add	r6, r5, #8
   13de0:	cmp	r4, r6
   13de4:	str	r2, [sp, #80]	; 0x50
   13de8:	beq	13ef4 <abort@plt+0x31dc>
   13dec:	mov	r3, #8
   13df0:	mov	r0, r4
   13df4:	str	r3, [sp]
   13df8:	rsb	r2, r2, #1
   13dfc:	add	r1, sp, #80	; 0x50
   13e00:	mvn	r3, #-2147483648	; 0x80000000
   13e04:	bl	16384 <abort@plt+0x566c>
   13e08:	mov	r4, r0
   13e0c:	str	r0, [r5]
   13e10:	ldr	r0, [r5, #4]
   13e14:	ldr	r2, [sp, #80]	; 0x50
   13e18:	mov	r1, #0
   13e1c:	sub	r2, r2, r0
   13e20:	add	r0, r4, r0, lsl #3
   13e24:	lsl	r2, r2, #3
   13e28:	bl	10c88 <memset@plt>
   13e2c:	ldr	r3, [sp, #80]	; 0x50
   13e30:	str	r3, [r5, #4]
   13e34:	ldr	r6, [sp, #36]	; 0x24
   13e38:	ldr	r8, [r4]
   13e3c:	ldr	r5, [r4, #4]
   13e40:	ldr	r2, [sp, #72]	; 0x48
   13e44:	ldr	r3, [sp, #32]
   13e48:	ldr	ip, [sp, #76]	; 0x4c
   13e4c:	orr	r6, r6, #1
   13e50:	add	fp, sp, #40	; 0x28
   13e54:	str	r2, [sp, #12]
   13e58:	str	r3, [sp]
   13e5c:	str	r6, [sp, #4]
   13e60:	mov	r1, r8
   13e64:	mov	r0, r5
   13e68:	str	ip, [sp, #16]
   13e6c:	str	fp, [sp, #8]
   13e70:	mov	r3, sl
   13e74:	mov	r2, r9
   13e78:	bl	11824 <abort@plt+0xb0c>
   13e7c:	cmp	r8, r0
   13e80:	bhi	13ee0 <abort@plt+0x31c8>
   13e84:	ldr	r3, [pc, #160]	; 13f2c <abort@plt+0x3214>
   13e88:	add	r8, r0, #1
   13e8c:	cmp	r5, r3
   13e90:	str	r8, [r4]
   13e94:	beq	13ea0 <abort@plt+0x3188>
   13e98:	mov	r0, r5
   13e9c:	bl	16a14 <abort@plt+0x5cfc>
   13ea0:	mov	r0, r8
   13ea4:	bl	16168 <abort@plt+0x5450>
   13ea8:	ldr	ip, [sp, #76]	; 0x4c
   13eac:	ldr	lr, [sp, #32]
   13eb0:	mov	r3, sl
   13eb4:	mov	r2, r9
   13eb8:	mov	r1, r8
   13ebc:	str	r0, [r4, #4]
   13ec0:	ldr	r4, [sp, #72]	; 0x48
   13ec4:	str	fp, [sp, #8]
   13ec8:	str	r6, [sp, #4]
   13ecc:	str	ip, [sp, #16]
   13ed0:	str	r4, [sp, #12]
   13ed4:	str	lr, [sp]
   13ed8:	mov	r5, r0
   13edc:	bl	11824 <abort@plt+0xb0c>
   13ee0:	ldr	r3, [sp, #28]
   13ee4:	mov	r0, r5
   13ee8:	str	r3, [r7]
   13eec:	add	sp, sp, #132	; 0x84
   13ef0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13ef4:	mov	r3, #8
   13ef8:	add	r1, sp, #80	; 0x50
   13efc:	str	r3, [sp]
   13f00:	rsb	r2, r2, #1
   13f04:	mvn	r3, #-2147483648	; 0x80000000
   13f08:	mov	r0, #0
   13f0c:	bl	16384 <abort@plt+0x566c>
   13f10:	mov	r4, r0
   13f14:	ldm	r6, {r0, r1}
   13f18:	str	r4, [r5]
   13f1c:	stm	r4, {r0, r1}
   13f20:	b	13e10 <abort@plt+0x30f8>
   13f24:	bl	10d18 <abort@plt>
   13f28:	ldrdeq	r8, [r2], -r0
   13f2c:	andeq	r8, r2, ip, ror #2
   13f30:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13f34:	mov	r4, r2
   13f38:	ldr	lr, [pc, #432]	; 140f0 <abort@plt+0x33d8>
   13f3c:	mov	sl, r0
   13f40:	mov	fp, r1
   13f44:	ldm	lr!, {r0, r1, r2, r3}
   13f48:	sub	sp, sp, #92	; 0x5c
   13f4c:	add	ip, sp, #40	; 0x28
   13f50:	lsr	r7, r4, #5
   13f54:	stmia	ip!, {r0, r1, r2, r3}
   13f58:	add	r6, sp, #48	; 0x30
   13f5c:	ldm	lr!, {r0, r1, r2, r3}
   13f60:	and	r4, r4, #31
   13f64:	ldr	r5, [pc, #392]	; 140f4 <abort@plt+0x33dc>
   13f68:	stmia	ip!, {r0, r1, r2, r3}
   13f6c:	ldm	lr, {r0, r1, r2, r3}
   13f70:	stm	ip, {r0, r1, r2, r3}
   13f74:	ldr	r2, [r6, r7, lsl #2]
   13f78:	lsr	r3, r2, r4
   13f7c:	eor	r3, r3, #1
   13f80:	and	r3, r3, #1
   13f84:	eor	r4, r2, r3, lsl r4
   13f88:	str	r4, [r6, r7, lsl #2]
   13f8c:	bl	10c70 <__errno_location@plt>
   13f90:	ldr	r2, [r5, #4]
   13f94:	ldr	r4, [r5]
   13f98:	cmp	r2, #0
   13f9c:	ldr	r3, [r0]
   13fa0:	mov	r8, r0
   13fa4:	str	r3, [sp, #28]
   13fa8:	bgt	14004 <abort@plt+0x32ec>
   13fac:	add	r7, r5, #8
   13fb0:	cmp	r4, r7
   13fb4:	str	r2, [sp, #36]	; 0x24
   13fb8:	beq	140c0 <abort@plt+0x33a8>
   13fbc:	mov	r3, #8
   13fc0:	mov	r0, r4
   13fc4:	str	r3, [sp]
   13fc8:	rsb	r2, r2, #1
   13fcc:	mvn	r3, #-2147483648	; 0x80000000
   13fd0:	add	r1, sp, #36	; 0x24
   13fd4:	bl	16384 <abort@plt+0x566c>
   13fd8:	mov	r4, r0
   13fdc:	str	r0, [r5]
   13fe0:	ldr	r0, [r5, #4]
   13fe4:	ldr	r2, [sp, #36]	; 0x24
   13fe8:	mov	r1, #0
   13fec:	sub	r2, r2, r0
   13ff0:	add	r0, r4, r0, lsl #3
   13ff4:	lsl	r2, r2, #3
   13ff8:	bl	10c88 <memset@plt>
   13ffc:	ldr	r3, [sp, #36]	; 0x24
   14000:	str	r3, [r5, #4]
   14004:	ldr	r7, [sp, #44]	; 0x2c
   14008:	ldr	r9, [r4]
   1400c:	ldr	r5, [r4, #4]
   14010:	ldr	r2, [sp, #80]	; 0x50
   14014:	ldr	r3, [sp, #40]	; 0x28
   14018:	ldr	ip, [sp, #84]	; 0x54
   1401c:	orr	r7, r7, #1
   14020:	str	r2, [sp, #12]
   14024:	str	r3, [sp]
   14028:	str	r7, [sp, #4]
   1402c:	str	r6, [sp, #8]
   14030:	mov	r1, r9
   14034:	mov	r0, r5
   14038:	str	ip, [sp, #16]
   1403c:	mov	r3, fp
   14040:	mov	r2, sl
   14044:	bl	11824 <abort@plt+0xb0c>
   14048:	cmp	r9, r0
   1404c:	bhi	140ac <abort@plt+0x3394>
   14050:	ldr	r3, [pc, #160]	; 140f8 <abort@plt+0x33e0>
   14054:	add	r9, r0, #1
   14058:	cmp	r5, r3
   1405c:	str	r9, [r4]
   14060:	beq	1406c <abort@plt+0x3354>
   14064:	mov	r0, r5
   14068:	bl	16a14 <abort@plt+0x5cfc>
   1406c:	mov	r0, r9
   14070:	bl	16168 <abort@plt+0x5450>
   14074:	ldr	ip, [sp, #84]	; 0x54
   14078:	ldr	lr, [sp, #40]	; 0x28
   1407c:	mov	r3, fp
   14080:	mov	r2, sl
   14084:	mov	r1, r9
   14088:	str	r0, [r4, #4]
   1408c:	ldr	r4, [sp, #80]	; 0x50
   14090:	str	r6, [sp, #8]
   14094:	str	r7, [sp, #4]
   14098:	str	ip, [sp, #16]
   1409c:	str	r4, [sp, #12]
   140a0:	str	lr, [sp]
   140a4:	mov	r5, r0
   140a8:	bl	11824 <abort@plt+0xb0c>
   140ac:	ldr	r3, [sp, #28]
   140b0:	mov	r0, r5
   140b4:	str	r3, [r8]
   140b8:	add	sp, sp, #92	; 0x5c
   140bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   140c0:	mov	r3, #8
   140c4:	str	r3, [sp]
   140c8:	add	r1, sp, #36	; 0x24
   140cc:	rsb	r2, r2, #1
   140d0:	mvn	r3, #-2147483648	; 0x80000000
   140d4:	mov	r0, #0
   140d8:	bl	16384 <abort@plt+0x566c>
   140dc:	mov	r4, r0
   140e0:	ldm	r7, {r0, r1}
   140e4:	str	r4, [r5]
   140e8:	stm	r4, {r0, r1}
   140ec:	b	13fe0 <abort@plt+0x32c8>
   140f0:	andeq	r8, r2, ip, lsr r1
   140f4:	ldrdeq	r8, [r2], -r0
   140f8:	andeq	r8, r2, ip, ror #2
   140fc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14100:	mov	r4, r1
   14104:	ldr	lr, [pc, #420]	; 142b0 <abort@plt+0x3598>
   14108:	mov	r6, r0
   1410c:	sub	sp, sp, #84	; 0x54
   14110:	ldm	lr!, {r0, r1, r2, r3}
   14114:	add	ip, sp, #32
   14118:	lsr	r8, r4, #5
   1411c:	add	r5, sp, #40	; 0x28
   14120:	stmia	ip!, {r0, r1, r2, r3}
   14124:	and	r4, r4, #31
   14128:	ldm	lr!, {r0, r1, r2, r3}
   1412c:	ldr	r7, [pc, #384]	; 142b4 <abort@plt+0x359c>
   14130:	stmia	ip!, {r0, r1, r2, r3}
   14134:	ldm	lr, {r0, r1, r2, r3}
   14138:	stm	ip, {r0, r1, r2, r3}
   1413c:	ldr	r2, [r5, r8, lsl #2]
   14140:	lsr	r3, r2, r4
   14144:	eor	r3, r3, #1
   14148:	and	r3, r3, #1
   1414c:	eor	r4, r2, r3, lsl r4
   14150:	str	r4, [r5, r8, lsl #2]
   14154:	bl	10c70 <__errno_location@plt>
   14158:	ldr	r2, [r7, #4]
   1415c:	ldr	r4, [r7]
   14160:	cmp	r2, #0
   14164:	mov	r9, r0
   14168:	ldr	sl, [r0]
   1416c:	bgt	141c8 <abort@plt+0x34b0>
   14170:	add	r8, r7, #8
   14174:	cmp	r4, r8
   14178:	str	r2, [sp, #28]
   1417c:	beq	14280 <abort@plt+0x3568>
   14180:	mov	r3, #8
   14184:	mov	r0, r4
   14188:	str	r3, [sp]
   1418c:	rsb	r2, r2, #1
   14190:	mvn	r3, #-2147483648	; 0x80000000
   14194:	add	r1, sp, #28
   14198:	bl	16384 <abort@plt+0x566c>
   1419c:	mov	r4, r0
   141a0:	str	r0, [r7]
   141a4:	ldr	r0, [r7, #4]
   141a8:	ldr	r2, [sp, #28]
   141ac:	mov	r1, #0
   141b0:	sub	r2, r2, r0
   141b4:	add	r0, r4, r0, lsl #3
   141b8:	lsl	r2, r2, #3
   141bc:	bl	10c88 <memset@plt>
   141c0:	ldr	r3, [sp, #28]
   141c4:	str	r3, [r7, #4]
   141c8:	ldr	r8, [sp, #36]	; 0x24
   141cc:	ldr	fp, [r4]
   141d0:	ldr	r7, [r4, #4]
   141d4:	ldr	r2, [sp, #72]	; 0x48
   141d8:	ldr	r3, [sp, #32]
   141dc:	ldr	ip, [sp, #76]	; 0x4c
   141e0:	orr	r8, r8, #1
   141e4:	str	r2, [sp, #12]
   141e8:	str	r3, [sp]
   141ec:	str	r8, [sp, #4]
   141f0:	str	r5, [sp, #8]
   141f4:	mov	r1, fp
   141f8:	mov	r0, r7
   141fc:	str	ip, [sp, #16]
   14200:	mvn	r3, #0
   14204:	mov	r2, r6
   14208:	bl	11824 <abort@plt+0xb0c>
   1420c:	cmp	fp, r0
   14210:	bhi	14270 <abort@plt+0x3558>
   14214:	ldr	r3, [pc, #156]	; 142b8 <abort@plt+0x35a0>
   14218:	add	fp, r0, #1
   1421c:	cmp	r7, r3
   14220:	str	fp, [r4]
   14224:	beq	14230 <abort@plt+0x3518>
   14228:	mov	r0, r7
   1422c:	bl	16a14 <abort@plt+0x5cfc>
   14230:	mov	r0, fp
   14234:	bl	16168 <abort@plt+0x5450>
   14238:	ldr	lr, [sp, #76]	; 0x4c
   1423c:	ldr	r3, [sp, #32]
   14240:	ldr	ip, [sp, #72]	; 0x48
   14244:	mov	r2, r6
   14248:	mov	r1, fp
   1424c:	str	r0, [r4, #4]
   14250:	str	r3, [sp]
   14254:	str	r5, [sp, #8]
   14258:	str	r8, [sp, #4]
   1425c:	str	lr, [sp, #16]
   14260:	str	ip, [sp, #12]
   14264:	mvn	r3, #0
   14268:	mov	r7, r0
   1426c:	bl	11824 <abort@plt+0xb0c>
   14270:	mov	r0, r7
   14274:	str	sl, [r9]
   14278:	add	sp, sp, #84	; 0x54
   1427c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14280:	mov	r3, #8
   14284:	str	r3, [sp]
   14288:	add	r1, sp, #28
   1428c:	rsb	r2, r2, #1
   14290:	mvn	r3, #-2147483648	; 0x80000000
   14294:	mov	r0, #0
   14298:	bl	16384 <abort@plt+0x566c>
   1429c:	mov	r4, r0
   142a0:	ldm	r8, {r0, r1}
   142a4:	str	r4, [r7]
   142a8:	stm	r4, {r0, r1}
   142ac:	b	141a4 <abort@plt+0x348c>
   142b0:	andeq	r8, r2, ip, lsr r1
   142b4:	ldrdeq	r8, [r2], -r0
   142b8:	andeq	r8, r2, ip, ror #2
   142bc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   142c0:	mov	r6, r0
   142c4:	ldr	lr, [pc, #404]	; 14460 <abort@plt+0x3748>
   142c8:	sub	sp, sp, #84	; 0x54
   142cc:	add	ip, sp, #32
   142d0:	ldm	lr!, {r0, r1, r2, r3}
   142d4:	ldr	r5, [pc, #392]	; 14464 <abort@plt+0x374c>
   142d8:	stmia	ip!, {r0, r1, r2, r3}
   142dc:	ldm	lr!, {r0, r1, r2, r3}
   142e0:	ldr	r4, [sp, #44]	; 0x2c
   142e4:	stmia	ip!, {r0, r1, r2, r3}
   142e8:	ldm	lr, {r0, r1, r2, r3}
   142ec:	mvn	lr, r4
   142f0:	and	lr, lr, #67108864	; 0x4000000
   142f4:	eor	lr, lr, r4
   142f8:	stm	ip, {r0, r1, r2, r3}
   142fc:	str	lr, [sp, #44]	; 0x2c
   14300:	bl	10c70 <__errno_location@plt>
   14304:	ldr	r2, [r5, #4]
   14308:	ldr	r4, [r5]
   1430c:	cmp	r2, #0
   14310:	mov	r8, r0
   14314:	ldr	sl, [r0]
   14318:	bgt	14374 <abort@plt+0x365c>
   1431c:	add	r7, r5, #8
   14320:	cmp	r4, r7
   14324:	str	r2, [sp, #28]
   14328:	beq	14430 <abort@plt+0x3718>
   1432c:	mov	r3, #8
   14330:	mov	r0, r4
   14334:	str	r3, [sp]
   14338:	rsb	r2, r2, #1
   1433c:	mvn	r3, #-2147483648	; 0x80000000
   14340:	add	r1, sp, #28
   14344:	bl	16384 <abort@plt+0x566c>
   14348:	mov	r4, r0
   1434c:	str	r0, [r5]
   14350:	ldr	r0, [r5, #4]
   14354:	ldr	r2, [sp, #28]
   14358:	mov	r1, #0
   1435c:	sub	r2, r2, r0
   14360:	add	r0, r4, r0, lsl #3
   14364:	lsl	r2, r2, #3
   14368:	bl	10c88 <memset@plt>
   1436c:	ldr	r3, [sp, #28]
   14370:	str	r3, [r5, #4]
   14374:	ldr	r7, [sp, #36]	; 0x24
   14378:	ldr	r9, [r4]
   1437c:	ldr	r5, [r4, #4]
   14380:	ldr	r2, [sp, #72]	; 0x48
   14384:	ldr	r3, [sp, #32]
   14388:	ldr	ip, [sp, #76]	; 0x4c
   1438c:	orr	r7, r7, #1
   14390:	add	fp, sp, #40	; 0x28
   14394:	str	r2, [sp, #12]
   14398:	str	r3, [sp]
   1439c:	str	r7, [sp, #4]
   143a0:	mov	r1, r9
   143a4:	mov	r0, r5
   143a8:	str	ip, [sp, #16]
   143ac:	str	fp, [sp, #8]
   143b0:	mvn	r3, #0
   143b4:	mov	r2, r6
   143b8:	bl	11824 <abort@plt+0xb0c>
   143bc:	cmp	r9, r0
   143c0:	bhi	14420 <abort@plt+0x3708>
   143c4:	ldr	r3, [pc, #156]	; 14468 <abort@plt+0x3750>
   143c8:	add	r9, r0, #1
   143cc:	cmp	r5, r3
   143d0:	str	r9, [r4]
   143d4:	beq	143e0 <abort@plt+0x36c8>
   143d8:	mov	r0, r5
   143dc:	bl	16a14 <abort@plt+0x5cfc>
   143e0:	mov	r0, r9
   143e4:	bl	16168 <abort@plt+0x5450>
   143e8:	ldr	lr, [sp, #76]	; 0x4c
   143ec:	ldr	r3, [sp, #32]
   143f0:	ldr	ip, [sp, #72]	; 0x48
   143f4:	mov	r2, r6
   143f8:	mov	r1, r9
   143fc:	str	r0, [r4, #4]
   14400:	str	r3, [sp]
   14404:	str	fp, [sp, #8]
   14408:	str	r7, [sp, #4]
   1440c:	str	lr, [sp, #16]
   14410:	str	ip, [sp, #12]
   14414:	mvn	r3, #0
   14418:	mov	r5, r0
   1441c:	bl	11824 <abort@plt+0xb0c>
   14420:	mov	r0, r5
   14424:	str	sl, [r8]
   14428:	add	sp, sp, #84	; 0x54
   1442c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14430:	mov	r3, #8
   14434:	str	r3, [sp]
   14438:	add	r1, sp, #28
   1443c:	rsb	r2, r2, #1
   14440:	mvn	r3, #-2147483648	; 0x80000000
   14444:	mov	r0, #0
   14448:	bl	16384 <abort@plt+0x566c>
   1444c:	mov	r4, r0
   14450:	ldm	r7, {r0, r1}
   14454:	str	r4, [r5]
   14458:	stm	r4, {r0, r1}
   1445c:	b	14350 <abort@plt+0x3638>
   14460:	andeq	r8, r2, ip, lsr r1
   14464:	ldrdeq	r8, [r2], -r0
   14468:	andeq	r8, r2, ip, ror #2
   1446c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14470:	mov	r9, r0
   14474:	ldr	lr, [pc, #416]	; 1461c <abort@plt+0x3904>
   14478:	mov	sl, r1
   1447c:	sub	sp, sp, #92	; 0x5c
   14480:	ldm	lr!, {r0, r1, r2, r3}
   14484:	add	ip, sp, #40	; 0x28
   14488:	ldr	r5, [pc, #400]	; 14620 <abort@plt+0x3908>
   1448c:	stmia	ip!, {r0, r1, r2, r3}
   14490:	ldm	lr!, {r0, r1, r2, r3}
   14494:	ldr	r4, [sp, #52]	; 0x34
   14498:	stmia	ip!, {r0, r1, r2, r3}
   1449c:	ldm	lr, {r0, r1, r2, r3}
   144a0:	mvn	lr, r4
   144a4:	and	lr, lr, #67108864	; 0x4000000
   144a8:	eor	lr, lr, r4
   144ac:	stm	ip, {r0, r1, r2, r3}
   144b0:	str	lr, [sp, #52]	; 0x34
   144b4:	bl	10c70 <__errno_location@plt>
   144b8:	ldr	r2, [r5, #4]
   144bc:	ldr	r4, [r5]
   144c0:	cmp	r2, #0
   144c4:	ldr	r3, [r0]
   144c8:	mov	r7, r0
   144cc:	str	r3, [sp, #28]
   144d0:	bgt	1452c <abort@plt+0x3814>
   144d4:	add	r6, r5, #8
   144d8:	cmp	r4, r6
   144dc:	str	r2, [sp, #36]	; 0x24
   144e0:	beq	145ec <abort@plt+0x38d4>
   144e4:	mov	r3, #8
   144e8:	mov	r0, r4
   144ec:	str	r3, [sp]
   144f0:	rsb	r2, r2, #1
   144f4:	mvn	r3, #-2147483648	; 0x80000000
   144f8:	add	r1, sp, #36	; 0x24
   144fc:	bl	16384 <abort@plt+0x566c>
   14500:	mov	r4, r0
   14504:	str	r0, [r5]
   14508:	ldr	r0, [r5, #4]
   1450c:	ldr	r2, [sp, #36]	; 0x24
   14510:	mov	r1, #0
   14514:	sub	r2, r2, r0
   14518:	add	r0, r4, r0, lsl #3
   1451c:	lsl	r2, r2, #3
   14520:	bl	10c88 <memset@plt>
   14524:	ldr	r3, [sp, #36]	; 0x24
   14528:	str	r3, [r5, #4]
   1452c:	ldr	r6, [sp, #44]	; 0x2c
   14530:	ldr	r8, [r4]
   14534:	ldr	r5, [r4, #4]
   14538:	ldr	r2, [sp, #80]	; 0x50
   1453c:	ldr	r3, [sp, #40]	; 0x28
   14540:	ldr	ip, [sp, #84]	; 0x54
   14544:	orr	r6, r6, #1
   14548:	add	fp, sp, #48	; 0x30
   1454c:	str	r2, [sp, #12]
   14550:	str	r3, [sp]
   14554:	str	r6, [sp, #4]
   14558:	mov	r1, r8
   1455c:	mov	r0, r5
   14560:	str	ip, [sp, #16]
   14564:	str	fp, [sp, #8]
   14568:	mov	r3, sl
   1456c:	mov	r2, r9
   14570:	bl	11824 <abort@plt+0xb0c>
   14574:	cmp	r8, r0
   14578:	bhi	145d8 <abort@plt+0x38c0>
   1457c:	ldr	r3, [pc, #160]	; 14624 <abort@plt+0x390c>
   14580:	add	r8, r0, #1
   14584:	cmp	r5, r3
   14588:	str	r8, [r4]
   1458c:	beq	14598 <abort@plt+0x3880>
   14590:	mov	r0, r5
   14594:	bl	16a14 <abort@plt+0x5cfc>
   14598:	mov	r0, r8
   1459c:	bl	16168 <abort@plt+0x5450>
   145a0:	ldr	ip, [sp, #84]	; 0x54
   145a4:	ldr	lr, [sp, #40]	; 0x28
   145a8:	mov	r3, sl
   145ac:	mov	r2, r9
   145b0:	mov	r1, r8
   145b4:	str	r0, [r4, #4]
   145b8:	ldr	r4, [sp, #80]	; 0x50
   145bc:	str	fp, [sp, #8]
   145c0:	str	r6, [sp, #4]
   145c4:	str	ip, [sp, #16]
   145c8:	str	r4, [sp, #12]
   145cc:	str	lr, [sp]
   145d0:	mov	r5, r0
   145d4:	bl	11824 <abort@plt+0xb0c>
   145d8:	ldr	r3, [sp, #28]
   145dc:	mov	r0, r5
   145e0:	str	r3, [r7]
   145e4:	add	sp, sp, #92	; 0x5c
   145e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   145ec:	mov	r3, #8
   145f0:	str	r3, [sp]
   145f4:	add	r1, sp, #36	; 0x24
   145f8:	rsb	r2, r2, #1
   145fc:	mvn	r3, #-2147483648	; 0x80000000
   14600:	mov	r0, #0
   14604:	bl	16384 <abort@plt+0x566c>
   14608:	mov	r4, r0
   1460c:	ldm	r6, {r0, r1}
   14610:	str	r4, [r5]
   14614:	stm	r4, {r0, r1}
   14618:	b	14508 <abort@plt+0x37f0>
   1461c:	andeq	r8, r2, ip, lsr r1
   14620:	ldrdeq	r8, [r2], -r0
   14624:	andeq	r8, r2, ip, ror #2
   14628:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1462c:	sub	sp, sp, #180	; 0xb4
   14630:	mov	r6, r1
   14634:	mov	r4, r0
   14638:	mov	r9, r2
   1463c:	add	r0, sp, #80	; 0x50
   14640:	mov	r2, #48	; 0x30
   14644:	mov	r1, #0
   14648:	bl	10c88 <memset@plt>
   1464c:	cmp	r6, #10
   14650:	beq	14830 <abort@plt+0x3b18>
   14654:	add	r5, sp, #80	; 0x50
   14658:	str	r6, [sp, #80]	; 0x50
   1465c:	ldm	r5!, {r0, r1, r2, r3}
   14660:	add	ip, sp, #128	; 0x80
   14664:	mov	r7, ip
   14668:	add	lr, sp, #32
   1466c:	stmia	ip!, {r0, r1, r2, r3}
   14670:	mov	r8, #67108864	; 0x4000000
   14674:	ldm	r5!, {r0, r1, r2, r3}
   14678:	ldr	r6, [pc, #436]	; 14834 <abort@plt+0x3b1c>
   1467c:	stmia	ip!, {r0, r1, r2, r3}
   14680:	ldm	r5, {r0, r1, r2, r3}
   14684:	stm	ip, {r0, r1, r2, r3}
   14688:	ldm	r7!, {r0, r1, r2, r3}
   1468c:	stmia	lr!, {r0, r1, r2, r3}
   14690:	ldm	r7!, {r0, r1, r2, r3}
   14694:	str	r8, [sp, #44]	; 0x2c
   14698:	stmia	lr!, {r0, r1, r2, r3}
   1469c:	ldm	ip, {r0, r1, r2, r3}
   146a0:	stm	lr, {r0, r1, r2, r3}
   146a4:	bl	10c70 <__errno_location@plt>
   146a8:	cmn	r4, #-2147483647	; 0x80000001
   146ac:	ldr	r5, [r6]
   146b0:	mov	r7, r0
   146b4:	movne	r0, #0
   146b8:	moveq	r0, #1
   146bc:	ldr	r3, [r7]
   146c0:	orrs	r0, r0, r4, lsr #31
   146c4:	str	r3, [sp, #24]
   146c8:	bne	14830 <abort@plt+0x3b18>
   146cc:	ldr	r2, [r6, #4]
   146d0:	cmp	r4, r2
   146d4:	blt	14734 <abort@plt+0x3a1c>
   146d8:	add	r8, r6, #8
   146dc:	cmp	r5, r8
   146e0:	str	r2, [sp, #80]	; 0x50
   146e4:	beq	14800 <abort@plt+0x3ae8>
   146e8:	mov	r3, #8
   146ec:	sub	r2, r4, r2
   146f0:	mov	r0, r5
   146f4:	str	r3, [sp]
   146f8:	add	r2, r2, #1
   146fc:	add	r1, sp, #80	; 0x50
   14700:	mvn	r3, #-2147483648	; 0x80000000
   14704:	bl	16384 <abort@plt+0x566c>
   14708:	mov	r5, r0
   1470c:	str	r0, [r6]
   14710:	ldr	r0, [r6, #4]
   14714:	ldr	r2, [sp, #80]	; 0x50
   14718:	mov	r1, #0
   1471c:	sub	r2, r2, r0
   14720:	add	r0, r5, r0, lsl #3
   14724:	lsl	r2, r2, #3
   14728:	bl	10c88 <memset@plt>
   1472c:	ldr	r3, [sp, #80]	; 0x50
   14730:	str	r3, [r6, #4]
   14734:	add	fp, r5, r4, lsl #3
   14738:	ldr	r1, [sp, #36]	; 0x24
   1473c:	ldr	r8, [r5, r4, lsl #3]
   14740:	ldr	r6, [fp, #4]
   14744:	ldr	r2, [sp, #72]	; 0x48
   14748:	ldr	r3, [sp, #32]
   1474c:	ldr	ip, [sp, #76]	; 0x4c
   14750:	orr	r1, r1, #1
   14754:	add	sl, sp, #40	; 0x28
   14758:	str	r1, [sp, #28]
   1475c:	str	r1, [sp, #4]
   14760:	str	r2, [sp, #12]
   14764:	str	r3, [sp]
   14768:	mov	r0, r6
   1476c:	mov	r1, r8
   14770:	str	ip, [sp, #16]
   14774:	str	sl, [sp, #8]
   14778:	mvn	r3, #0
   1477c:	mov	r2, r9
   14780:	bl	11824 <abort@plt+0xb0c>
   14784:	cmp	r8, r0
   14788:	bhi	147ec <abort@plt+0x3ad4>
   1478c:	ldr	r3, [pc, #164]	; 14838 <abort@plt+0x3b20>
   14790:	add	r8, r0, #1
   14794:	cmp	r6, r3
   14798:	str	r8, [r5, r4, lsl #3]
   1479c:	beq	147a8 <abort@plt+0x3a90>
   147a0:	mov	r0, r6
   147a4:	bl	16a14 <abort@plt+0x5cfc>
   147a8:	mov	r0, r8
   147ac:	bl	16168 <abort@plt+0x5450>
   147b0:	ldr	lr, [sp, #76]	; 0x4c
   147b4:	ldr	r3, [sp, #32]
   147b8:	ldr	ip, [sp, #72]	; 0x48
   147bc:	ldr	r4, [sp, #28]
   147c0:	mov	r2, r9
   147c4:	mov	r1, r8
   147c8:	str	r0, [fp, #4]
   147cc:	str	r3, [sp]
   147d0:	str	sl, [sp, #8]
   147d4:	str	r4, [sp, #4]
   147d8:	str	lr, [sp, #16]
   147dc:	str	ip, [sp, #12]
   147e0:	mvn	r3, #0
   147e4:	mov	r6, r0
   147e8:	bl	11824 <abort@plt+0xb0c>
   147ec:	ldr	r3, [sp, #24]
   147f0:	mov	r0, r6
   147f4:	str	r3, [r7]
   147f8:	add	sp, sp, #180	; 0xb4
   147fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14800:	mov	r3, #8
   14804:	sub	r2, r4, r2
   14808:	add	r1, sp, #80	; 0x50
   1480c:	str	r3, [sp]
   14810:	add	r2, r2, #1
   14814:	mvn	r3, #-2147483648	; 0x80000000
   14818:	bl	16384 <abort@plt+0x566c>
   1481c:	mov	r5, r0
   14820:	ldm	r8, {r0, r1}
   14824:	str	r5, [r6]
   14828:	stm	r5, {r0, r1}
   1482c:	b	14710 <abort@plt+0x39f8>
   14830:	bl	10d18 <abort@plt>
   14834:	ldrdeq	r8, [r2], -r0
   14838:	andeq	r8, r2, ip, ror #2
   1483c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14840:	mov	r7, r1
   14844:	ldr	lr, [pc, #492]	; 14a38 <abort@plt+0x3d20>
   14848:	mov	r8, r2
   1484c:	mov	r4, r0
   14850:	mov	fp, r3
   14854:	ldm	lr!, {r0, r1, r2, r3}
   14858:	sub	sp, sp, #100	; 0x64
   1485c:	add	ip, sp, #48	; 0x30
   14860:	mov	sl, #10
   14864:	stmia	ip!, {r0, r1, r2, r3}
   14868:	cmp	r8, #0
   1486c:	cmpne	r7, #0
   14870:	ldm	lr!, {r0, r1, r2, r3}
   14874:	str	sl, [sp, #48]	; 0x30
   14878:	stmia	ip!, {r0, r1, r2, r3}
   1487c:	ldm	lr, {r0, r1, r2, r3}
   14880:	stm	ip, {r0, r1, r2, r3}
   14884:	beq	14a34 <abort@plt+0x3d1c>
   14888:	str	r7, [sp, #88]	; 0x58
   1488c:	str	r8, [sp, #92]	; 0x5c
   14890:	bl	10c70 <__errno_location@plt>
   14894:	ldr	r6, [pc, #416]	; 14a3c <abort@plt+0x3d24>
   14898:	cmn	r4, #-2147483647	; 0x80000001
   1489c:	ldr	r5, [r6]
   148a0:	mov	r9, r0
   148a4:	movne	r0, #0
   148a8:	moveq	r0, #1
   148ac:	ldr	r3, [r9]
   148b0:	orrs	r0, r0, r4, lsr #31
   148b4:	str	r3, [sp, #28]
   148b8:	bne	14a34 <abort@plt+0x3d1c>
   148bc:	ldr	r2, [r6, #4]
   148c0:	cmp	r4, r2
   148c4:	movlt	r3, sl
   148c8:	blt	14934 <abort@plt+0x3c1c>
   148cc:	add	r7, r6, #8
   148d0:	cmp	r5, r7
   148d4:	str	r2, [sp, #44]	; 0x2c
   148d8:	beq	14a04 <abort@plt+0x3cec>
   148dc:	mov	r3, #8
   148e0:	sub	r2, r4, r2
   148e4:	mov	r0, r5
   148e8:	str	r3, [sp]
   148ec:	add	r2, r2, #1
   148f0:	mvn	r3, #-2147483648	; 0x80000000
   148f4:	add	r1, sp, #44	; 0x2c
   148f8:	bl	16384 <abort@plt+0x566c>
   148fc:	mov	r5, r0
   14900:	str	r0, [r6]
   14904:	ldr	r0, [r6, #4]
   14908:	ldr	r2, [sp, #44]	; 0x2c
   1490c:	mov	r1, #0
   14910:	sub	r2, r2, r0
   14914:	add	r0, r5, r0, lsl #3
   14918:	lsl	r2, r2, #3
   1491c:	bl	10c88 <memset@plt>
   14920:	ldr	r3, [sp, #48]	; 0x30
   14924:	ldr	r7, [sp, #88]	; 0x58
   14928:	ldr	r8, [sp, #92]	; 0x5c
   1492c:	ldr	r2, [sp, #44]	; 0x2c
   14930:	str	r2, [r6, #4]
   14934:	add	r2, r5, r4, lsl #3
   14938:	mov	r1, r2
   1493c:	str	r2, [sp, #32]
   14940:	ldr	r2, [sp, #52]	; 0x34
   14944:	ldr	r6, [r1, #4]
   14948:	ldr	sl, [r5, r4, lsl #3]
   1494c:	orr	r2, r2, #1
   14950:	str	r3, [sp]
   14954:	add	r3, sp, #56	; 0x38
   14958:	str	r2, [sp, #36]	; 0x24
   1495c:	str	r2, [sp, #4]
   14960:	str	r3, [sp, #8]
   14964:	mov	r0, r6
   14968:	str	r8, [sp, #16]
   1496c:	str	r7, [sp, #12]
   14970:	mov	r1, sl
   14974:	mvn	r3, #0
   14978:	mov	r2, fp
   1497c:	bl	11824 <abort@plt+0xb0c>
   14980:	cmp	sl, r0
   14984:	bhi	149f0 <abort@plt+0x3cd8>
   14988:	ldr	r3, [pc, #176]	; 14a40 <abort@plt+0x3d28>
   1498c:	add	r7, r0, #1
   14990:	cmp	r6, r3
   14994:	str	r7, [r5, r4, lsl #3]
   14998:	beq	149a4 <abort@plt+0x3c8c>
   1499c:	mov	r0, r6
   149a0:	bl	16a14 <abort@plt+0x5cfc>
   149a4:	mov	r0, r7
   149a8:	bl	16168 <abort@plt+0x5450>
   149ac:	ldr	r3, [sp, #32]
   149b0:	ldr	lr, [sp, #92]	; 0x5c
   149b4:	ldr	ip, [sp, #88]	; 0x58
   149b8:	ldr	r4, [sp, #36]	; 0x24
   149bc:	mov	r2, fp
   149c0:	mov	r1, r7
   149c4:	str	r0, [r3, #4]
   149c8:	add	r3, sp, #56	; 0x38
   149cc:	str	r3, [sp, #8]
   149d0:	ldr	r3, [sp, #48]	; 0x30
   149d4:	str	r4, [sp, #4]
   149d8:	str	r3, [sp]
   149dc:	str	lr, [sp, #16]
   149e0:	str	ip, [sp, #12]
   149e4:	mvn	r3, #0
   149e8:	mov	r6, r0
   149ec:	bl	11824 <abort@plt+0xb0c>
   149f0:	ldr	r3, [sp, #28]
   149f4:	mov	r0, r6
   149f8:	str	r3, [r9]
   149fc:	add	sp, sp, #100	; 0x64
   14a00:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14a04:	mov	r3, #8
   14a08:	sub	r2, r4, r2
   14a0c:	str	r3, [sp]
   14a10:	add	r1, sp, #44	; 0x2c
   14a14:	add	r2, r2, #1
   14a18:	mvn	r3, #-2147483648	; 0x80000000
   14a1c:	bl	16384 <abort@plt+0x566c>
   14a20:	mov	r5, r0
   14a24:	ldm	r7, {r0, r1}
   14a28:	str	r5, [r6]
   14a2c:	stm	r5, {r0, r1}
   14a30:	b	14904 <abort@plt+0x3bec>
   14a34:	bl	10d18 <abort@plt>
   14a38:	andeq	r8, r2, ip, lsr r1
   14a3c:	ldrdeq	r8, [r2], -r0
   14a40:	andeq	r8, r2, ip, ror #2
   14a44:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14a48:	mov	r7, r1
   14a4c:	ldr	lr, [pc, #492]	; 14c40 <abort@plt+0x3f28>
   14a50:	mov	r8, r2
   14a54:	mov	r4, r0
   14a58:	mov	fp, r3
   14a5c:	ldm	lr!, {r0, r1, r2, r3}
   14a60:	sub	sp, sp, #100	; 0x64
   14a64:	add	ip, sp, #48	; 0x30
   14a68:	mov	sl, #10
   14a6c:	stmia	ip!, {r0, r1, r2, r3}
   14a70:	cmp	r8, #0
   14a74:	cmpne	r7, #0
   14a78:	ldm	lr!, {r0, r1, r2, r3}
   14a7c:	str	sl, [sp, #48]	; 0x30
   14a80:	stmia	ip!, {r0, r1, r2, r3}
   14a84:	ldm	lr, {r0, r1, r2, r3}
   14a88:	stm	ip, {r0, r1, r2, r3}
   14a8c:	beq	14c3c <abort@plt+0x3f24>
   14a90:	str	r7, [sp, #88]	; 0x58
   14a94:	str	r8, [sp, #92]	; 0x5c
   14a98:	bl	10c70 <__errno_location@plt>
   14a9c:	ldr	r6, [pc, #416]	; 14c44 <abort@plt+0x3f2c>
   14aa0:	cmn	r4, #-2147483647	; 0x80000001
   14aa4:	ldr	r5, [r6]
   14aa8:	mov	r9, r0
   14aac:	movne	r0, #0
   14ab0:	moveq	r0, #1
   14ab4:	ldr	r3, [r9]
   14ab8:	orrs	r0, r0, r4, lsr #31
   14abc:	str	r3, [sp, #28]
   14ac0:	bne	14c3c <abort@plt+0x3f24>
   14ac4:	ldr	r2, [r6, #4]
   14ac8:	cmp	r4, r2
   14acc:	movlt	r3, sl
   14ad0:	blt	14b3c <abort@plt+0x3e24>
   14ad4:	add	r7, r6, #8
   14ad8:	cmp	r5, r7
   14adc:	str	r2, [sp, #44]	; 0x2c
   14ae0:	beq	14c0c <abort@plt+0x3ef4>
   14ae4:	mov	r3, #8
   14ae8:	sub	r2, r4, r2
   14aec:	mov	r0, r5
   14af0:	str	r3, [sp]
   14af4:	add	r2, r2, #1
   14af8:	mvn	r3, #-2147483648	; 0x80000000
   14afc:	add	r1, sp, #44	; 0x2c
   14b00:	bl	16384 <abort@plt+0x566c>
   14b04:	mov	r5, r0
   14b08:	str	r0, [r6]
   14b0c:	ldr	r0, [r6, #4]
   14b10:	ldr	r2, [sp, #44]	; 0x2c
   14b14:	mov	r1, #0
   14b18:	sub	r2, r2, r0
   14b1c:	add	r0, r5, r0, lsl #3
   14b20:	lsl	r2, r2, #3
   14b24:	bl	10c88 <memset@plt>
   14b28:	ldr	r3, [sp, #48]	; 0x30
   14b2c:	ldr	r7, [sp, #88]	; 0x58
   14b30:	ldr	r8, [sp, #92]	; 0x5c
   14b34:	ldr	r2, [sp, #44]	; 0x2c
   14b38:	str	r2, [r6, #4]
   14b3c:	add	r2, r5, r4, lsl #3
   14b40:	mov	r1, r2
   14b44:	str	r2, [sp, #32]
   14b48:	ldr	r2, [sp, #52]	; 0x34
   14b4c:	ldr	r6, [r1, #4]
   14b50:	ldr	sl, [r5, r4, lsl #3]
   14b54:	orr	r2, r2, #1
   14b58:	str	r3, [sp]
   14b5c:	add	r3, sp, #56	; 0x38
   14b60:	str	r2, [sp, #36]	; 0x24
   14b64:	str	r2, [sp, #4]
   14b68:	str	r3, [sp, #8]
   14b6c:	mov	r0, r6
   14b70:	str	r8, [sp, #16]
   14b74:	str	r7, [sp, #12]
   14b78:	mov	r1, sl
   14b7c:	ldr	r3, [sp, #136]	; 0x88
   14b80:	mov	r2, fp
   14b84:	bl	11824 <abort@plt+0xb0c>
   14b88:	cmp	sl, r0
   14b8c:	bhi	14bf8 <abort@plt+0x3ee0>
   14b90:	ldr	r3, [pc, #176]	; 14c48 <abort@plt+0x3f30>
   14b94:	add	r7, r0, #1
   14b98:	cmp	r6, r3
   14b9c:	str	r7, [r5, r4, lsl #3]
   14ba0:	beq	14bac <abort@plt+0x3e94>
   14ba4:	mov	r0, r6
   14ba8:	bl	16a14 <abort@plt+0x5cfc>
   14bac:	mov	r0, r7
   14bb0:	bl	16168 <abort@plt+0x5450>
   14bb4:	ldr	r3, [sp, #32]
   14bb8:	ldr	lr, [sp, #92]	; 0x5c
   14bbc:	ldr	ip, [sp, #88]	; 0x58
   14bc0:	ldr	r4, [sp, #36]	; 0x24
   14bc4:	mov	r2, fp
   14bc8:	mov	r1, r7
   14bcc:	str	r0, [r3, #4]
   14bd0:	add	r3, sp, #56	; 0x38
   14bd4:	str	r3, [sp, #8]
   14bd8:	ldr	r3, [sp, #48]	; 0x30
   14bdc:	str	r4, [sp, #4]
   14be0:	str	r3, [sp]
   14be4:	str	lr, [sp, #16]
   14be8:	str	ip, [sp, #12]
   14bec:	ldr	r3, [sp, #136]	; 0x88
   14bf0:	mov	r6, r0
   14bf4:	bl	11824 <abort@plt+0xb0c>
   14bf8:	ldr	r3, [sp, #28]
   14bfc:	mov	r0, r6
   14c00:	str	r3, [r9]
   14c04:	add	sp, sp, #100	; 0x64
   14c08:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14c0c:	mov	r3, #8
   14c10:	sub	r2, r4, r2
   14c14:	str	r3, [sp]
   14c18:	add	r1, sp, #44	; 0x2c
   14c1c:	add	r2, r2, #1
   14c20:	mvn	r3, #-2147483648	; 0x80000000
   14c24:	bl	16384 <abort@plt+0x566c>
   14c28:	mov	r5, r0
   14c2c:	ldm	r7, {r0, r1}
   14c30:	str	r5, [r6]
   14c34:	stm	r5, {r0, r1}
   14c38:	b	14b0c <abort@plt+0x3df4>
   14c3c:	bl	10d18 <abort@plt>
   14c40:	andeq	r8, r2, ip, lsr r1
   14c44:	ldrdeq	r8, [r2], -r0
   14c48:	andeq	r8, r2, ip, ror #2
   14c4c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14c50:	mov	r5, r0
   14c54:	ldr	lr, [pc, #452]	; 14e20 <abort@plt+0x4108>
   14c58:	mov	r6, r1
   14c5c:	mov	sl, r2
   14c60:	ldm	lr!, {r0, r1, r2, r3}
   14c64:	sub	sp, sp, #92	; 0x5c
   14c68:	add	ip, sp, #40	; 0x28
   14c6c:	cmp	r6, #0
   14c70:	cmpne	r5, #0
   14c74:	stmia	ip!, {r0, r1, r2, r3}
   14c78:	mov	r9, #10
   14c7c:	ldm	lr!, {r0, r1, r2, r3}
   14c80:	moveq	fp, #1
   14c84:	movne	fp, #0
   14c88:	str	r9, [sp, #40]	; 0x28
   14c8c:	stmia	ip!, {r0, r1, r2, r3}
   14c90:	ldm	lr, {r0, r1, r2, r3}
   14c94:	stm	ip, {r0, r1, r2, r3}
   14c98:	beq	14e1c <abort@plt+0x4104>
   14c9c:	str	r5, [sp, #80]	; 0x50
   14ca0:	str	r6, [sp, #84]	; 0x54
   14ca4:	bl	10c70 <__errno_location@plt>
   14ca8:	ldr	r7, [pc, #372]	; 14e24 <abort@plt+0x410c>
   14cac:	ldr	r2, [r7, #4]
   14cb0:	ldr	r4, [r7]
   14cb4:	cmp	r2, #0
   14cb8:	ldr	r3, [r0]
   14cbc:	mov	r8, r0
   14cc0:	str	r3, [sp, #24]
   14cc4:	movgt	r3, r9
   14cc8:	bgt	14d30 <abort@plt+0x4018>
   14ccc:	add	r5, r7, #8
   14cd0:	cmp	r4, r5
   14cd4:	str	r2, [sp, #36]	; 0x24
   14cd8:	beq	14dec <abort@plt+0x40d4>
   14cdc:	mov	r3, #8
   14ce0:	mov	r0, r4
   14ce4:	str	r3, [sp]
   14ce8:	rsb	r2, r2, #1
   14cec:	mvn	r3, #-2147483648	; 0x80000000
   14cf0:	add	r1, sp, #36	; 0x24
   14cf4:	bl	16384 <abort@plt+0x566c>
   14cf8:	mov	r4, r0
   14cfc:	str	r0, [r7]
   14d00:	ldr	r0, [r7, #4]
   14d04:	ldr	r2, [sp, #36]	; 0x24
   14d08:	mov	r1, #0
   14d0c:	sub	r2, r2, r0
   14d10:	add	r0, r4, r0, lsl #3
   14d14:	lsl	r2, r2, #3
   14d18:	bl	10c88 <memset@plt>
   14d1c:	ldr	r3, [sp, #40]	; 0x28
   14d20:	ldr	r5, [sp, #80]	; 0x50
   14d24:	ldr	r6, [sp, #84]	; 0x54
   14d28:	ldr	r2, [sp, #36]	; 0x24
   14d2c:	str	r2, [r7, #4]
   14d30:	ldr	r2, [sp, #44]	; 0x2c
   14d34:	ldr	r9, [r4]
   14d38:	ldr	r7, [r4, #4]
   14d3c:	orr	r2, r2, #1
   14d40:	add	fp, sp, #48	; 0x30
   14d44:	str	r2, [sp, #28]
   14d48:	str	r2, [sp, #4]
   14d4c:	str	r3, [sp]
   14d50:	str	r6, [sp, #16]
   14d54:	str	r5, [sp, #12]
   14d58:	mov	r1, r9
   14d5c:	mov	r0, r7
   14d60:	str	fp, [sp, #8]
   14d64:	mvn	r3, #0
   14d68:	mov	r2, sl
   14d6c:	bl	11824 <abort@plt+0xb0c>
   14d70:	cmp	r9, r0
   14d74:	bhi	14dd8 <abort@plt+0x40c0>
   14d78:	ldr	r3, [pc, #168]	; 14e28 <abort@plt+0x4110>
   14d7c:	add	r5, r0, #1
   14d80:	cmp	r7, r3
   14d84:	str	r5, [r4]
   14d88:	beq	14d94 <abort@plt+0x407c>
   14d8c:	mov	r0, r7
   14d90:	bl	16a14 <abort@plt+0x5cfc>
   14d94:	mov	r0, r5
   14d98:	bl	16168 <abort@plt+0x5450>
   14d9c:	ldr	lr, [sp, #84]	; 0x54
   14da0:	ldr	r3, [sp, #40]	; 0x28
   14da4:	ldr	ip, [sp, #80]	; 0x50
   14da8:	mov	r2, sl
   14dac:	mov	r1, r5
   14db0:	str	r0, [r4, #4]
   14db4:	ldr	r4, [sp, #28]
   14db8:	str	r3, [sp]
   14dbc:	str	fp, [sp, #8]
   14dc0:	str	r4, [sp, #4]
   14dc4:	str	lr, [sp, #16]
   14dc8:	str	ip, [sp, #12]
   14dcc:	mvn	r3, #0
   14dd0:	mov	r7, r0
   14dd4:	bl	11824 <abort@plt+0xb0c>
   14dd8:	ldr	r3, [sp, #24]
   14ddc:	mov	r0, r7
   14de0:	str	r3, [r8]
   14de4:	add	sp, sp, #92	; 0x5c
   14de8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14dec:	mov	r3, #8
   14df0:	str	r3, [sp]
   14df4:	add	r1, sp, #36	; 0x24
   14df8:	rsb	r2, r2, #1
   14dfc:	mov	r0, fp
   14e00:	mvn	r3, #-2147483648	; 0x80000000
   14e04:	bl	16384 <abort@plt+0x566c>
   14e08:	mov	r4, r0
   14e0c:	ldm	r5, {r0, r1}
   14e10:	str	r4, [r7]
   14e14:	stm	r4, {r0, r1}
   14e18:	b	14d00 <abort@plt+0x3fe8>
   14e1c:	bl	10d18 <abort@plt>
   14e20:	andeq	r8, r2, ip, lsr r1
   14e24:	ldrdeq	r8, [r2], -r0
   14e28:	andeq	r8, r2, ip, ror #2
   14e2c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14e30:	mov	r5, r0
   14e34:	ldr	lr, [pc, #464]	; 1500c <abort@plt+0x42f4>
   14e38:	mov	r6, r1
   14e3c:	mov	sl, r2
   14e40:	mov	fp, r3
   14e44:	ldm	lr!, {r0, r1, r2, r3}
   14e48:	sub	sp, sp, #92	; 0x5c
   14e4c:	add	ip, sp, #40	; 0x28
   14e50:	cmp	r6, #0
   14e54:	cmpne	r5, #0
   14e58:	stmia	ip!, {r0, r1, r2, r3}
   14e5c:	moveq	r4, #1
   14e60:	ldm	lr!, {r0, r1, r2, r3}
   14e64:	movne	r4, #0
   14e68:	mov	r9, #10
   14e6c:	str	r4, [sp, #28]
   14e70:	stmia	ip!, {r0, r1, r2, r3}
   14e74:	ldm	lr, {r0, r1, r2, r3}
   14e78:	str	r9, [sp, #40]	; 0x28
   14e7c:	stm	ip, {r0, r1, r2, r3}
   14e80:	beq	15008 <abort@plt+0x42f0>
   14e84:	str	r5, [sp, #80]	; 0x50
   14e88:	str	r6, [sp, #84]	; 0x54
   14e8c:	bl	10c70 <__errno_location@plt>
   14e90:	ldr	r7, [pc, #376]	; 15010 <abort@plt+0x42f8>
   14e94:	ldr	r2, [r7, #4]
   14e98:	ldr	r4, [r7]
   14e9c:	cmp	r2, #0
   14ea0:	ldr	r3, [r0]
   14ea4:	mov	r8, r0
   14ea8:	str	r3, [sp, #24]
   14eac:	movgt	r3, r9
   14eb0:	bgt	14f18 <abort@plt+0x4200>
   14eb4:	add	r5, r7, #8
   14eb8:	cmp	r4, r5
   14ebc:	str	r2, [sp, #36]	; 0x24
   14ec0:	beq	14fd8 <abort@plt+0x42c0>
   14ec4:	mov	r3, #8
   14ec8:	mov	r0, r4
   14ecc:	str	r3, [sp]
   14ed0:	rsb	r2, r2, #1
   14ed4:	mvn	r3, #-2147483648	; 0x80000000
   14ed8:	add	r1, sp, #36	; 0x24
   14edc:	bl	16384 <abort@plt+0x566c>
   14ee0:	mov	r4, r0
   14ee4:	str	r0, [r7]
   14ee8:	ldr	r0, [r7, #4]
   14eec:	ldr	r2, [sp, #36]	; 0x24
   14ef0:	mov	r1, #0
   14ef4:	sub	r2, r2, r0
   14ef8:	add	r0, r4, r0, lsl #3
   14efc:	lsl	r2, r2, #3
   14f00:	bl	10c88 <memset@plt>
   14f04:	ldr	r3, [sp, #40]	; 0x28
   14f08:	ldr	r5, [sp, #80]	; 0x50
   14f0c:	ldr	r6, [sp, #84]	; 0x54
   14f10:	ldr	r2, [sp, #36]	; 0x24
   14f14:	str	r2, [r7, #4]
   14f18:	ldr	r2, [sp, #44]	; 0x2c
   14f1c:	ldr	r9, [r4]
   14f20:	ldr	r7, [r4, #4]
   14f24:	orr	r2, r2, #1
   14f28:	str	r3, [sp]
   14f2c:	add	r3, sp, #48	; 0x30
   14f30:	str	r2, [sp, #28]
   14f34:	str	r2, [sp, #4]
   14f38:	str	r3, [sp, #8]
   14f3c:	str	r6, [sp, #16]
   14f40:	str	r5, [sp, #12]
   14f44:	mov	r1, r9
   14f48:	mov	r0, r7
   14f4c:	mov	r3, fp
   14f50:	mov	r2, sl
   14f54:	bl	11824 <abort@plt+0xb0c>
   14f58:	cmp	r9, r0
   14f5c:	bhi	14fc4 <abort@plt+0x42ac>
   14f60:	ldr	r3, [pc, #172]	; 15014 <abort@plt+0x42fc>
   14f64:	add	r5, r0, #1
   14f68:	cmp	r7, r3
   14f6c:	str	r5, [r4]
   14f70:	beq	14f7c <abort@plt+0x4264>
   14f74:	mov	r0, r7
   14f78:	bl	16a14 <abort@plt+0x5cfc>
   14f7c:	mov	r0, r5
   14f80:	bl	16168 <abort@plt+0x5450>
   14f84:	add	lr, sp, #48	; 0x30
   14f88:	ldr	ip, [sp, #84]	; 0x54
   14f8c:	mov	r1, r5
   14f90:	ldr	r5, [sp, #28]
   14f94:	mov	r3, fp
   14f98:	mov	r2, sl
   14f9c:	str	r0, [r4, #4]
   14fa0:	ldr	r4, [sp, #80]	; 0x50
   14fa4:	str	lr, [sp, #8]
   14fa8:	ldr	lr, [sp, #40]	; 0x28
   14fac:	str	r5, [sp, #4]
   14fb0:	str	ip, [sp, #16]
   14fb4:	str	r4, [sp, #12]
   14fb8:	str	lr, [sp]
   14fbc:	mov	r7, r0
   14fc0:	bl	11824 <abort@plt+0xb0c>
   14fc4:	ldr	r3, [sp, #24]
   14fc8:	mov	r0, r7
   14fcc:	str	r3, [r8]
   14fd0:	add	sp, sp, #92	; 0x5c
   14fd4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14fd8:	mov	r3, #8
   14fdc:	str	r3, [sp]
   14fe0:	add	r1, sp, #36	; 0x24
   14fe4:	rsb	r2, r2, #1
   14fe8:	ldr	r0, [sp, #28]
   14fec:	mvn	r3, #-2147483648	; 0x80000000
   14ff0:	bl	16384 <abort@plt+0x566c>
   14ff4:	mov	r4, r0
   14ff8:	ldm	r5, {r0, r1}
   14ffc:	str	r4, [r7]
   15000:	stm	r4, {r0, r1}
   15004:	b	14ee8 <abort@plt+0x41d0>
   15008:	bl	10d18 <abort@plt>
   1500c:	andeq	r8, r2, ip, lsr r1
   15010:	ldrdeq	r8, [r2], -r0
   15014:	andeq	r8, r2, ip, ror #2
   15018:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1501c:	sub	sp, sp, #52	; 0x34
   15020:	mov	r5, r0
   15024:	mov	sl, r1
   15028:	mov	fp, r2
   1502c:	bl	10c70 <__errno_location@plt>
   15030:	ldr	r4, [pc, #404]	; 151cc <abort@plt+0x44b4>
   15034:	cmn	r5, #-2147483647	; 0x80000001
   15038:	ldr	r6, [r4]
   1503c:	mov	r8, r0
   15040:	movne	r0, #0
   15044:	moveq	r0, #1
   15048:	ldr	r3, [r8]
   1504c:	orrs	r0, r0, r5, lsr #31
   15050:	str	r3, [sp, #28]
   15054:	bne	151c8 <abort@plt+0x44b0>
   15058:	ldr	r2, [r4, #4]
   1505c:	cmp	r5, r2
   15060:	blt	150c0 <abort@plt+0x43a8>
   15064:	add	r7, r4, #8
   15068:	cmp	r6, r7
   1506c:	str	r2, [sp, #44]	; 0x2c
   15070:	beq	15198 <abort@plt+0x4480>
   15074:	mov	r3, #8
   15078:	sub	r2, r5, r2
   1507c:	mov	r0, r6
   15080:	str	r3, [sp]
   15084:	add	r2, r2, #1
   15088:	mvn	r3, #-2147483648	; 0x80000000
   1508c:	add	r1, sp, #44	; 0x2c
   15090:	bl	16384 <abort@plt+0x566c>
   15094:	mov	r6, r0
   15098:	str	r0, [r4]
   1509c:	ldr	r0, [r4, #4]
   150a0:	ldr	r2, [sp, #44]	; 0x2c
   150a4:	mov	r1, #0
   150a8:	sub	r2, r2, r0
   150ac:	add	r0, r6, r0, lsl #3
   150b0:	lsl	r2, r2, #3
   150b4:	bl	10c88 <memset@plt>
   150b8:	ldr	r3, [sp, #44]	; 0x2c
   150bc:	str	r3, [r4, #4]
   150c0:	ldr	r2, [r4, #56]	; 0x38
   150c4:	add	r3, r6, r5, lsl #3
   150c8:	ldr	r1, [r4, #20]
   150cc:	ldr	r7, [r3, #4]
   150d0:	ldr	r9, [r6, r5, lsl #3]
   150d4:	ldr	ip, [r4, #60]	; 0x3c
   150d8:	str	r3, [sp, #32]
   150dc:	ldr	r3, [r4, #16]
   150e0:	str	r2, [sp, #12]
   150e4:	ldr	r2, [pc, #228]	; 151d0 <abort@plt+0x44b8>
   150e8:	orr	r1, r1, #1
   150ec:	str	r1, [sp, #36]	; 0x24
   150f0:	str	r1, [sp, #4]
   150f4:	str	r2, [sp, #8]
   150f8:	str	r3, [sp]
   150fc:	mov	r0, r7
   15100:	mov	r1, r9
   15104:	str	ip, [sp, #16]
   15108:	mov	r3, fp
   1510c:	mov	r2, sl
   15110:	bl	11824 <abort@plt+0xb0c>
   15114:	cmp	r9, r0
   15118:	bhi	15184 <abort@plt+0x446c>
   1511c:	ldr	r3, [pc, #176]	; 151d4 <abort@plt+0x44bc>
   15120:	add	r9, r0, #1
   15124:	cmp	r7, r3
   15128:	str	r9, [r6, r5, lsl #3]
   1512c:	beq	15138 <abort@plt+0x4420>
   15130:	mov	r0, r7
   15134:	bl	16a14 <abort@plt+0x5cfc>
   15138:	mov	r0, r9
   1513c:	bl	16168 <abort@plt+0x5450>
   15140:	ldr	ip, [sp, #32]
   15144:	ldr	lr, [r4, #60]	; 0x3c
   15148:	ldr	r5, [r4, #56]	; 0x38
   1514c:	mov	r3, fp
   15150:	mov	r2, sl
   15154:	mov	r1, r9
   15158:	str	r0, [ip, #4]
   1515c:	ldr	ip, [r4, #16]
   15160:	ldr	r4, [pc, #104]	; 151d0 <abort@plt+0x44b8>
   15164:	str	lr, [sp, #16]
   15168:	str	r4, [sp, #8]
   1516c:	ldr	r4, [sp, #36]	; 0x24
   15170:	str	r5, [sp, #12]
   15174:	str	r4, [sp, #4]
   15178:	str	ip, [sp]
   1517c:	mov	r7, r0
   15180:	bl	11824 <abort@plt+0xb0c>
   15184:	ldr	r3, [sp, #28]
   15188:	mov	r0, r7
   1518c:	str	r3, [r8]
   15190:	add	sp, sp, #52	; 0x34
   15194:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15198:	mov	r3, #8
   1519c:	sub	r2, r5, r2
   151a0:	str	r3, [sp]
   151a4:	add	r1, sp, #44	; 0x2c
   151a8:	add	r2, r2, #1
   151ac:	mvn	r3, #-2147483648	; 0x80000000
   151b0:	bl	16384 <abort@plt+0x566c>
   151b4:	mov	r6, r0
   151b8:	ldm	r7, {r0, r1}
   151bc:	str	r6, [r4]
   151c0:	stm	r6, {r0, r1}
   151c4:	b	1509c <abort@plt+0x4384>
   151c8:	bl	10d18 <abort@plt>
   151cc:	ldrdeq	r8, [r2], -r0
   151d0:	andeq	r8, r2, r8, ror #1
   151d4:	andeq	r8, r2, ip, ror #2
   151d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   151dc:	sub	sp, sp, #44	; 0x2c
   151e0:	mov	r9, r0
   151e4:	mov	sl, r1
   151e8:	bl	10c70 <__errno_location@plt>
   151ec:	ldr	r4, [pc, #360]	; 1535c <abort@plt+0x4644>
   151f0:	ldr	r2, [r4, #4]
   151f4:	ldr	r5, [r4]
   151f8:	cmp	r2, #0
   151fc:	ldr	r3, [r0]
   15200:	mov	r7, r0
   15204:	str	r3, [sp, #24]
   15208:	bgt	15264 <abort@plt+0x454c>
   1520c:	add	r6, r4, #8
   15210:	cmp	r5, r6
   15214:	str	r2, [sp, #36]	; 0x24
   15218:	beq	1532c <abort@plt+0x4614>
   1521c:	mov	r3, #8
   15220:	mov	r0, r5
   15224:	str	r3, [sp]
   15228:	rsb	r2, r2, #1
   1522c:	mvn	r3, #-2147483648	; 0x80000000
   15230:	add	r1, sp, #36	; 0x24
   15234:	bl	16384 <abort@plt+0x566c>
   15238:	mov	r5, r0
   1523c:	str	r0, [r4]
   15240:	ldr	r0, [r4, #4]
   15244:	ldr	r2, [sp, #36]	; 0x24
   15248:	mov	r1, #0
   1524c:	sub	r2, r2, r0
   15250:	add	r0, r5, r0, lsl #3
   15254:	lsl	r2, r2, #3
   15258:	bl	10c88 <memset@plt>
   1525c:	ldr	r3, [sp, #36]	; 0x24
   15260:	str	r3, [r4, #4]
   15264:	ldr	r1, [r4, #20]
   15268:	ldr	r8, [r5]
   1526c:	ldr	r6, [r5, #4]
   15270:	ldr	r2, [r4, #56]	; 0x38
   15274:	ldr	r3, [r4, #16]
   15278:	ldr	ip, [r4, #60]	; 0x3c
   1527c:	ldr	fp, [pc, #220]	; 15360 <abort@plt+0x4648>
   15280:	orr	r1, r1, #1
   15284:	str	r1, [sp, #28]
   15288:	str	r1, [sp, #4]
   1528c:	str	r2, [sp, #12]
   15290:	str	r3, [sp]
   15294:	mov	r1, r8
   15298:	mov	r0, r6
   1529c:	str	ip, [sp, #16]
   152a0:	str	fp, [sp, #8]
   152a4:	mov	r3, sl
   152a8:	mov	r2, r9
   152ac:	bl	11824 <abort@plt+0xb0c>
   152b0:	cmp	r8, r0
   152b4:	bhi	15318 <abort@plt+0x4600>
   152b8:	ldr	r3, [pc, #164]	; 15364 <abort@plt+0x464c>
   152bc:	add	r8, r0, #1
   152c0:	cmp	r6, r3
   152c4:	str	r8, [r5]
   152c8:	beq	152d4 <abort@plt+0x45bc>
   152cc:	mov	r0, r6
   152d0:	bl	16a14 <abort@plt+0x5cfc>
   152d4:	mov	r0, r8
   152d8:	bl	16168 <abort@plt+0x5450>
   152dc:	ldr	lr, [r4, #60]	; 0x3c
   152e0:	ldr	ip, [r4, #16]
   152e4:	mov	r3, sl
   152e8:	mov	r2, r9
   152ec:	mov	r1, r8
   152f0:	str	r0, [r5, #4]
   152f4:	ldr	r5, [r4, #56]	; 0x38
   152f8:	ldr	r4, [sp, #28]
   152fc:	str	fp, [sp, #8]
   15300:	str	r4, [sp, #4]
   15304:	str	lr, [sp, #16]
   15308:	str	r5, [sp, #12]
   1530c:	str	ip, [sp]
   15310:	mov	r6, r0
   15314:	bl	11824 <abort@plt+0xb0c>
   15318:	ldr	r3, [sp, #24]
   1531c:	mov	r0, r6
   15320:	str	r3, [r7]
   15324:	add	sp, sp, #44	; 0x2c
   15328:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1532c:	mov	r3, #8
   15330:	str	r3, [sp]
   15334:	add	r1, sp, #36	; 0x24
   15338:	rsb	r2, r2, #1
   1533c:	mvn	r3, #-2147483648	; 0x80000000
   15340:	mov	r0, #0
   15344:	bl	16384 <abort@plt+0x566c>
   15348:	mov	r5, r0
   1534c:	ldm	r6, {r0, r1}
   15350:	str	r5, [r4]
   15354:	stm	r5, {r0, r1}
   15358:	b	15240 <abort@plt+0x4528>
   1535c:	ldrdeq	r8, [r2], -r0
   15360:	andeq	r8, r2, r8, ror #1
   15364:	andeq	r8, r2, ip, ror #2
   15368:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1536c:	sub	sp, sp, #44	; 0x2c
   15370:	mov	r5, r0
   15374:	mov	sl, r1
   15378:	bl	10c70 <__errno_location@plt>
   1537c:	ldr	r4, [pc, #396]	; 15510 <abort@plt+0x47f8>
   15380:	cmn	r5, #-2147483647	; 0x80000001
   15384:	ldr	r6, [r4]
   15388:	mov	r8, r0
   1538c:	movne	r0, #0
   15390:	moveq	r0, #1
   15394:	ldr	r3, [r8]
   15398:	orrs	r0, r0, r5, lsr #31
   1539c:	str	r3, [sp, #24]
   153a0:	bne	1550c <abort@plt+0x47f4>
   153a4:	ldr	r2, [r4, #4]
   153a8:	cmp	r5, r2
   153ac:	blt	1540c <abort@plt+0x46f4>
   153b0:	add	r7, r4, #8
   153b4:	cmp	r6, r7
   153b8:	str	r2, [sp, #36]	; 0x24
   153bc:	beq	154dc <abort@plt+0x47c4>
   153c0:	mov	r3, #8
   153c4:	sub	r2, r5, r2
   153c8:	mov	r0, r6
   153cc:	str	r3, [sp]
   153d0:	add	r2, r2, #1
   153d4:	mvn	r3, #-2147483648	; 0x80000000
   153d8:	add	r1, sp, #36	; 0x24
   153dc:	bl	16384 <abort@plt+0x566c>
   153e0:	mov	r6, r0
   153e4:	str	r0, [r4]
   153e8:	ldr	r0, [r4, #4]
   153ec:	ldr	r2, [sp, #36]	; 0x24
   153f0:	mov	r1, #0
   153f4:	sub	r2, r2, r0
   153f8:	add	r0, r6, r0, lsl #3
   153fc:	lsl	r2, r2, #3
   15400:	bl	10c88 <memset@plt>
   15404:	ldr	r3, [sp, #36]	; 0x24
   15408:	str	r3, [r4, #4]
   1540c:	ldr	r2, [r4, #56]	; 0x38
   15410:	add	fp, r6, r5, lsl #3
   15414:	ldr	r1, [r4, #20]
   15418:	ldr	r9, [r6, r5, lsl #3]
   1541c:	ldr	r7, [fp, #4]
   15420:	ldr	r3, [r4, #16]
   15424:	ldr	ip, [r4, #60]	; 0x3c
   15428:	str	r2, [sp, #12]
   1542c:	ldr	r2, [pc, #224]	; 15514 <abort@plt+0x47fc>
   15430:	orr	r1, r1, #1
   15434:	str	r1, [sp, #28]
   15438:	str	r1, [sp, #4]
   1543c:	str	r2, [sp, #8]
   15440:	str	r3, [sp]
   15444:	mov	r0, r7
   15448:	mov	r1, r9
   1544c:	str	ip, [sp, #16]
   15450:	mvn	r3, #0
   15454:	mov	r2, sl
   15458:	bl	11824 <abort@plt+0xb0c>
   1545c:	cmp	r9, r0
   15460:	bhi	154c8 <abort@plt+0x47b0>
   15464:	ldr	r3, [pc, #172]	; 15518 <abort@plt+0x4800>
   15468:	add	r9, r0, #1
   1546c:	cmp	r7, r3
   15470:	str	r9, [r6, r5, lsl #3]
   15474:	beq	15480 <abort@plt+0x4768>
   15478:	mov	r0, r7
   1547c:	bl	16a14 <abort@plt+0x5cfc>
   15480:	mov	r0, r9
   15484:	bl	16168 <abort@plt+0x5450>
   15488:	ldr	ip, [r4, #60]	; 0x3c
   1548c:	ldr	r3, [r4, #16]
   15490:	ldr	lr, [r4, #56]	; 0x38
   15494:	ldr	r4, [pc, #120]	; 15514 <abort@plt+0x47fc>
   15498:	mov	r2, sl
   1549c:	mov	r1, r9
   154a0:	str	r0, [fp, #4]
   154a4:	str	r4, [sp, #8]
   154a8:	ldr	r4, [sp, #28]
   154ac:	str	r3, [sp]
   154b0:	str	r4, [sp, #4]
   154b4:	str	ip, [sp, #16]
   154b8:	str	lr, [sp, #12]
   154bc:	mvn	r3, #0
   154c0:	mov	r7, r0
   154c4:	bl	11824 <abort@plt+0xb0c>
   154c8:	ldr	r3, [sp, #24]
   154cc:	mov	r0, r7
   154d0:	str	r3, [r8]
   154d4:	add	sp, sp, #44	; 0x2c
   154d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   154dc:	mov	r3, #8
   154e0:	sub	r2, r5, r2
   154e4:	str	r3, [sp]
   154e8:	add	r1, sp, #36	; 0x24
   154ec:	add	r2, r2, #1
   154f0:	mvn	r3, #-2147483648	; 0x80000000
   154f4:	bl	16384 <abort@plt+0x566c>
   154f8:	mov	r6, r0
   154fc:	ldm	r7, {r0, r1}
   15500:	str	r6, [r4]
   15504:	stm	r6, {r0, r1}
   15508:	b	153e8 <abort@plt+0x46d0>
   1550c:	bl	10d18 <abort@plt>
   15510:	ldrdeq	r8, [r2], -r0
   15514:	andeq	r8, r2, r8, ror #1
   15518:	andeq	r8, r2, ip, ror #2
   1551c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15520:	sub	sp, sp, #44	; 0x2c
   15524:	mov	sl, r0
   15528:	bl	10c70 <__errno_location@plt>
   1552c:	ldr	r4, [pc, #348]	; 15690 <abort@plt+0x4978>
   15530:	ldr	r2, [r4, #4]
   15534:	ldr	r5, [r4]
   15538:	cmp	r2, #0
   1553c:	ldr	r3, [r0]
   15540:	mov	r8, r0
   15544:	str	r3, [sp, #28]
   15548:	bgt	155a4 <abort@plt+0x488c>
   1554c:	add	r6, r4, #8
   15550:	cmp	r5, r6
   15554:	str	r2, [sp, #36]	; 0x24
   15558:	beq	15660 <abort@plt+0x4948>
   1555c:	mov	r3, #8
   15560:	mov	r0, r5
   15564:	str	r3, [sp]
   15568:	rsb	r2, r2, #1
   1556c:	mvn	r3, #-2147483648	; 0x80000000
   15570:	add	r1, sp, #36	; 0x24
   15574:	bl	16384 <abort@plt+0x566c>
   15578:	mov	r5, r0
   1557c:	str	r0, [r4]
   15580:	ldr	r0, [r4, #4]
   15584:	ldr	r2, [sp, #36]	; 0x24
   15588:	mov	r1, #0
   1558c:	sub	r2, r2, r0
   15590:	add	r0, r5, r0, lsl #3
   15594:	lsl	r2, r2, #3
   15598:	bl	10c88 <memset@plt>
   1559c:	ldr	r3, [sp, #36]	; 0x24
   155a0:	str	r3, [r4, #4]
   155a4:	ldr	r7, [r4, #20]
   155a8:	ldr	r9, [r5]
   155ac:	ldr	r6, [r5, #4]
   155b0:	ldr	r2, [r4, #56]	; 0x38
   155b4:	ldr	r3, [r4, #16]
   155b8:	ldr	ip, [r4, #60]	; 0x3c
   155bc:	ldr	fp, [pc, #208]	; 15694 <abort@plt+0x497c>
   155c0:	orr	r7, r7, #1
   155c4:	str	r2, [sp, #12]
   155c8:	str	r3, [sp]
   155cc:	str	r7, [sp, #4]
   155d0:	mov	r1, r9
   155d4:	mov	r0, r6
   155d8:	str	ip, [sp, #16]
   155dc:	str	fp, [sp, #8]
   155e0:	mvn	r3, #0
   155e4:	mov	r2, sl
   155e8:	bl	11824 <abort@plt+0xb0c>
   155ec:	cmp	r9, r0
   155f0:	bhi	1564c <abort@plt+0x4934>
   155f4:	ldr	r3, [pc, #156]	; 15698 <abort@plt+0x4980>
   155f8:	add	r9, r0, #1
   155fc:	cmp	r6, r3
   15600:	str	r9, [r5]
   15604:	beq	15610 <abort@plt+0x48f8>
   15608:	mov	r0, r6
   1560c:	bl	16a14 <abort@plt+0x5cfc>
   15610:	mov	r0, r9
   15614:	bl	16168 <abort@plt+0x5450>
   15618:	ldr	ip, [r4, #60]	; 0x3c
   1561c:	ldr	r3, [r4, #16]
   15620:	ldr	lr, [r4, #56]	; 0x38
   15624:	mov	r2, sl
   15628:	mov	r1, r9
   1562c:	str	r0, [r5, #4]
   15630:	str	r3, [sp]
   15634:	stmib	sp, {r7, fp}
   15638:	str	ip, [sp, #16]
   1563c:	str	lr, [sp, #12]
   15640:	mvn	r3, #0
   15644:	mov	r6, r0
   15648:	bl	11824 <abort@plt+0xb0c>
   1564c:	ldr	r3, [sp, #28]
   15650:	mov	r0, r6
   15654:	str	r3, [r8]
   15658:	add	sp, sp, #44	; 0x2c
   1565c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15660:	mov	r3, #8
   15664:	str	r3, [sp]
   15668:	add	r1, sp, #36	; 0x24
   1566c:	rsb	r2, r2, #1
   15670:	mvn	r3, #-2147483648	; 0x80000000
   15674:	mov	r0, #0
   15678:	bl	16384 <abort@plt+0x566c>
   1567c:	mov	r5, r0
   15680:	ldm	r6, {r0, r1}
   15684:	str	r5, [r4]
   15688:	stm	r5, {r0, r1}
   1568c:	b	15580 <abort@plt+0x4868>
   15690:	ldrdeq	r8, [r2], -r0
   15694:	andeq	r8, r2, r8, ror #1
   15698:	andeq	r8, r2, ip, ror #2
   1569c:	push	{r4, r5, r6, r7, r8, lr}
   156a0:	mov	r8, r0
   156a4:	ldr	r5, [pc, #84]	; 15700 <abort@plt+0x49e8>
   156a8:	mov	r7, r1
   156ac:	mov	r4, r2
   156b0:	mov	r2, r4
   156b4:	mov	r1, r7
   156b8:	mov	r0, r8
   156bc:	bl	10ca0 <write@plt>
   156c0:	subs	r6, r0, #0
   156c4:	bge	156f8 <abort@plt+0x49e0>
   156c8:	bl	10c70 <__errno_location@plt>
   156cc:	ldr	r3, [r0]
   156d0:	cmp	r3, #4
   156d4:	beq	156b0 <abort@plt+0x4998>
   156d8:	cmp	r4, r5
   156dc:	sub	r3, r3, #22
   156e0:	clz	r3, r3
   156e4:	lsr	r3, r3, #5
   156e8:	movls	r3, #0
   156ec:	cmp	r3, #0
   156f0:	mov	r4, r5
   156f4:	bne	156b0 <abort@plt+0x4998>
   156f8:	mov	r0, r6
   156fc:	pop	{r4, r5, r6, r7, r8, pc}
   15700:	svcvc	0x00f00000	; IMB
   15704:	push	{r4, r5, r6, lr}
   15708:	sub	sp, sp, #32
   1570c:	cmp	r1, #0
   15710:	mov	r4, r0
   15714:	ldr	r5, [sp, #48]	; 0x30
   15718:	ldr	r6, [sp, #52]	; 0x34
   1571c:	beq	15a34 <abort@plt+0x4d1c>
   15720:	stm	sp, {r2, r3}
   15724:	mov	r3, r1
   15728:	ldr	r2, [pc, #808]	; 15a58 <abort@plt+0x4d40>
   1572c:	mov	r1, #1
   15730:	bl	10cb8 <__fprintf_chk@plt>
   15734:	mov	r2, #5
   15738:	ldr	r1, [pc, #796]	; 15a5c <abort@plt+0x4d44>
   1573c:	mov	r0, #0
   15740:	bl	10b98 <dcgettext@plt>
   15744:	ldr	r3, [pc, #788]	; 15a60 <abort@plt+0x4d48>
   15748:	ldr	r2, [pc, #788]	; 15a64 <abort@plt+0x4d4c>
   1574c:	str	r3, [sp]
   15750:	mov	r1, #1
   15754:	mov	r3, r0
   15758:	mov	r0, r4
   1575c:	bl	10cb8 <__fprintf_chk@plt>
   15760:	mov	r1, r4
   15764:	mov	r0, #10
   15768:	bl	10b8c <fputc_unlocked@plt>
   1576c:	mov	r2, #5
   15770:	ldr	r1, [pc, #752]	; 15a68 <abort@plt+0x4d50>
   15774:	mov	r0, #0
   15778:	bl	10b98 <dcgettext@plt>
   1577c:	mov	r1, #1
   15780:	ldr	r3, [pc, #740]	; 15a6c <abort@plt+0x4d54>
   15784:	mov	r2, r0
   15788:	mov	r0, r4
   1578c:	bl	10cb8 <__fprintf_chk@plt>
   15790:	mov	r1, r4
   15794:	mov	r0, #10
   15798:	bl	10b8c <fputc_unlocked@plt>
   1579c:	cmp	r6, #9
   157a0:	ldrls	pc, [pc, r6, lsl #2]
   157a4:	b	15a4c <abort@plt+0x4d34>
   157a8:	andeq	r5, r1, ip, lsr #16
   157ac:	andeq	r5, r1, r4, lsr r8
   157b0:	andeq	r5, r1, r0, ror #16
   157b4:	muleq	r1, r4, r8
   157b8:	ldrdeq	r5, [r1], -r0
   157bc:	andeq	r5, r1, ip, lsl #18
   157c0:	andeq	r5, r1, r8, asr #18
   157c4:	andeq	r5, r1, ip, lsl #19
   157c8:	ldrdeq	r5, [r1], -ip
   157cc:	ldrdeq	r5, [r1], -r0
   157d0:	ldr	r1, [pc, #664]	; 15a70 <abort@plt+0x4d58>
   157d4:	mov	r2, #5
   157d8:	mov	r0, #0
   157dc:	bl	10b98 <dcgettext@plt>
   157e0:	ldr	ip, [r5, #32]
   157e4:	ldr	r1, [r5, #28]
   157e8:	ldr	r2, [r5, #24]
   157ec:	ldr	r3, [r5]
   157f0:	ldr	r6, [r5, #20]
   157f4:	str	ip, [sp, #28]
   157f8:	ldr	lr, [r5, #16]
   157fc:	str	r1, [sp, #24]
   15800:	ldr	ip, [r5, #12]
   15804:	str	r2, [sp, #20]
   15808:	ldr	r1, [r5, #8]
   1580c:	ldr	r2, [r5, #4]
   15810:	str	r6, [sp, #16]
   15814:	stmib	sp, {r1, ip, lr}
   15818:	mov	r1, #1
   1581c:	str	r2, [sp]
   15820:	mov	r2, r0
   15824:	mov	r0, r4
   15828:	bl	10cb8 <__fprintf_chk@plt>
   1582c:	add	sp, sp, #32
   15830:	pop	{r4, r5, r6, pc}
   15834:	mov	r2, #5
   15838:	ldr	r1, [pc, #564]	; 15a74 <abort@plt+0x4d5c>
   1583c:	mov	r0, #0
   15840:	bl	10b98 <dcgettext@plt>
   15844:	ldr	r3, [r5]
   15848:	mov	r1, #1
   1584c:	mov	r2, r0
   15850:	mov	r0, r4
   15854:	add	sp, sp, #32
   15858:	pop	{r4, r5, r6, lr}
   1585c:	b	10cb8 <__fprintf_chk@plt>
   15860:	mov	r2, #5
   15864:	ldr	r1, [pc, #524]	; 15a78 <abort@plt+0x4d60>
   15868:	mov	r0, #0
   1586c:	bl	10b98 <dcgettext@plt>
   15870:	ldr	r2, [r5, #4]
   15874:	ldr	r3, [r5]
   15878:	mov	r1, #1
   1587c:	str	r2, [sp, #48]	; 0x30
   15880:	mov	r2, r0
   15884:	mov	r0, r4
   15888:	add	sp, sp, #32
   1588c:	pop	{r4, r5, r6, lr}
   15890:	b	10cb8 <__fprintf_chk@plt>
   15894:	mov	r2, #5
   15898:	ldr	r1, [pc, #476]	; 15a7c <abort@plt+0x4d64>
   1589c:	mov	r0, #0
   158a0:	bl	10b98 <dcgettext@plt>
   158a4:	ldr	r1, [r5, #8]
   158a8:	ldr	r2, [r5, #4]
   158ac:	ldr	r3, [r5]
   158b0:	str	r1, [sp, #52]	; 0x34
   158b4:	str	r2, [sp, #48]	; 0x30
   158b8:	mov	r1, #1
   158bc:	mov	r2, r0
   158c0:	mov	r0, r4
   158c4:	add	sp, sp, #32
   158c8:	pop	{r4, r5, r6, lr}
   158cc:	b	10cb8 <__fprintf_chk@plt>
   158d0:	mov	r2, #5
   158d4:	ldr	r1, [pc, #420]	; 15a80 <abort@plt+0x4d68>
   158d8:	mov	r0, #0
   158dc:	bl	10b98 <dcgettext@plt>
   158e0:	ldr	r1, [r5, #8]
   158e4:	ldr	ip, [r5, #12]
   158e8:	ldr	r2, [r5, #4]
   158ec:	ldr	r3, [r5]
   158f0:	stmib	sp, {r1, ip}
   158f4:	str	r2, [sp]
   158f8:	mov	r1, #1
   158fc:	mov	r2, r0
   15900:	mov	r0, r4
   15904:	bl	10cb8 <__fprintf_chk@plt>
   15908:	b	1582c <abort@plt+0x4b14>
   1590c:	mov	r2, #5
   15910:	ldr	r1, [pc, #364]	; 15a84 <abort@plt+0x4d6c>
   15914:	mov	r0, #0
   15918:	bl	10b98 <dcgettext@plt>
   1591c:	add	r1, r5, #8
   15920:	ldr	r2, [r5, #4]
   15924:	ldm	r1, {r1, ip, lr}
   15928:	ldr	r3, [r5]
   1592c:	str	r2, [sp]
   15930:	stmib	sp, {r1, ip, lr}
   15934:	mov	r1, #1
   15938:	mov	r2, r0
   1593c:	mov	r0, r4
   15940:	bl	10cb8 <__fprintf_chk@plt>
   15944:	b	1582c <abort@plt+0x4b14>
   15948:	mov	r2, #5
   1594c:	ldr	r1, [pc, #308]	; 15a88 <abort@plt+0x4d70>
   15950:	mov	r0, #0
   15954:	bl	10b98 <dcgettext@plt>
   15958:	add	r1, r5, #8
   1595c:	ldr	r2, [r5, #4]
   15960:	ldm	r1, {r1, ip, lr}
   15964:	ldr	r6, [r5, #20]
   15968:	ldr	r3, [r5]
   1596c:	stmib	sp, {r1, ip, lr}
   15970:	mov	r1, #1
   15974:	str	r2, [sp]
   15978:	str	r6, [sp, #16]
   1597c:	mov	r2, r0
   15980:	mov	r0, r4
   15984:	bl	10cb8 <__fprintf_chk@plt>
   15988:	b	1582c <abort@plt+0x4b14>
   1598c:	mov	r2, #5
   15990:	ldr	r1, [pc, #244]	; 15a8c <abort@plt+0x4d74>
   15994:	mov	r0, #0
   15998:	bl	10b98 <dcgettext@plt>
   1599c:	ldr	r2, [r5, #24]
   159a0:	ldr	r3, [r5]
   159a4:	ldr	r6, [r5, #20]
   159a8:	ldr	lr, [r5, #16]
   159ac:	ldr	ip, [r5, #12]
   159b0:	str	r2, [sp, #20]
   159b4:	ldr	r1, [r5, #8]
   159b8:	ldr	r2, [r5, #4]
   159bc:	str	r6, [sp, #16]
   159c0:	stmib	sp, {r1, ip, lr}
   159c4:	mov	r1, #1
   159c8:	str	r2, [sp]
   159cc:	mov	r2, r0
   159d0:	mov	r0, r4
   159d4:	bl	10cb8 <__fprintf_chk@plt>
   159d8:	b	1582c <abort@plt+0x4b14>
   159dc:	mov	r2, #5
   159e0:	ldr	r1, [pc, #168]	; 15a90 <abort@plt+0x4d78>
   159e4:	mov	r0, #0
   159e8:	bl	10b98 <dcgettext@plt>
   159ec:	ldr	r1, [r5, #28]
   159f0:	ldr	r2, [r5, #24]
   159f4:	ldr	r3, [r5]
   159f8:	ldr	r6, [r5, #20]
   159fc:	ldr	lr, [r5, #16]
   15a00:	str	r1, [sp, #24]
   15a04:	ldr	ip, [r5, #12]
   15a08:	str	r2, [sp, #20]
   15a0c:	ldr	r1, [r5, #8]
   15a10:	ldr	r2, [r5, #4]
   15a14:	str	r6, [sp, #16]
   15a18:	stmib	sp, {r1, ip, lr}
   15a1c:	mov	r1, #1
   15a20:	str	r2, [sp]
   15a24:	mov	r2, r0
   15a28:	mov	r0, r4
   15a2c:	bl	10cb8 <__fprintf_chk@plt>
   15a30:	b	1582c <abort@plt+0x4b14>
   15a34:	str	r3, [sp]
   15a38:	mov	r1, #1
   15a3c:	mov	r3, r2
   15a40:	ldr	r2, [pc, #76]	; 15a94 <abort@plt+0x4d7c>
   15a44:	bl	10cb8 <__fprintf_chk@plt>
   15a48:	b	15734 <abort@plt+0x4a1c>
   15a4c:	mov	r2, #5
   15a50:	ldr	r1, [pc, #64]	; 15a98 <abort@plt+0x4d80>
   15a54:	b	157d8 <abort@plt+0x4ac0>
   15a58:	andeq	r7, r1, r8, lsl #12
   15a5c:	andeq	r7, r1, ip, lsl r6
   15a60:	andeq	r0, r0, r6, ror #15
   15a64:	strdeq	r7, [r1], -r4
   15a68:	andeq	r7, r1, r0, lsr #12
   15a6c:	andeq	r7, r1, ip, asr #13
   15a70:	strdeq	r7, [r1], -ip
   15a74:	strdeq	r7, [r1], -r0
   15a78:	andeq	r7, r1, r0, lsl #14
   15a7c:	andeq	r7, r1, r8, lsl r7
   15a80:	andeq	r7, r1, r4, lsr r7
   15a84:	andeq	r7, r1, r4, asr r7
   15a88:	andeq	r7, r1, r8, ror r7
   15a8c:	andeq	r7, r1, r0, lsr #15
   15a90:	andeq	r7, r1, ip, asr #15
   15a94:	andeq	r7, r1, r4, lsl r6
   15a98:	andeq	r7, r1, r0, lsr r8
   15a9c:	push	{r4, r5, lr}
   15aa0:	sub	sp, sp, #12
   15aa4:	ldr	r5, [sp, #24]
   15aa8:	ldr	ip, [r5]
   15aac:	cmp	ip, #0
   15ab0:	beq	15acc <abort@plt+0x4db4>
   15ab4:	mov	lr, r5
   15ab8:	mov	ip, #0
   15abc:	ldr	r4, [lr, #4]!
   15ac0:	add	ip, ip, #1
   15ac4:	cmp	r4, #0
   15ac8:	bne	15abc <abort@plt+0x4da4>
   15acc:	stm	sp, {r5, ip}
   15ad0:	bl	15704 <abort@plt+0x49ec>
   15ad4:	add	sp, sp, #12
   15ad8:	pop	{r4, r5, pc}
   15adc:	push	{r4, r5, lr}
   15ae0:	sub	sp, sp, #76	; 0x4c
   15ae4:	mov	r5, r0
   15ae8:	ldr	ip, [sp, #88]	; 0x58
   15aec:	ldr	r0, [ip]
   15af0:	cmp	r0, #0
   15af4:	str	r0, [sp, #32]
   15af8:	beq	15ecc <abort@plt+0x51b4>
   15afc:	ldr	r0, [ip, #4]
   15b00:	cmp	r0, #0
   15b04:	str	r0, [sp, #36]	; 0x24
   15b08:	beq	15ed4 <abort@plt+0x51bc>
   15b0c:	ldr	r0, [ip, #8]
   15b10:	cmp	r0, #0
   15b14:	str	r0, [sp, #40]	; 0x28
   15b18:	beq	15edc <abort@plt+0x51c4>
   15b1c:	ldr	r0, [ip, #12]
   15b20:	cmp	r0, #0
   15b24:	str	r0, [sp, #44]	; 0x2c
   15b28:	beq	15ee4 <abort@plt+0x51cc>
   15b2c:	ldr	r0, [ip, #16]
   15b30:	cmp	r0, #0
   15b34:	str	r0, [sp, #48]	; 0x30
   15b38:	beq	15eec <abort@plt+0x51d4>
   15b3c:	ldr	r0, [ip, #20]
   15b40:	cmp	r0, #0
   15b44:	str	r0, [sp, #52]	; 0x34
   15b48:	beq	15ef4 <abort@plt+0x51dc>
   15b4c:	ldr	r0, [ip, #24]
   15b50:	cmp	r0, #0
   15b54:	str	r0, [sp, #56]	; 0x38
   15b58:	beq	15efc <abort@plt+0x51e4>
   15b5c:	ldr	r0, [ip, #28]
   15b60:	cmp	r0, #0
   15b64:	str	r0, [sp, #60]	; 0x3c
   15b68:	beq	15f04 <abort@plt+0x51ec>
   15b6c:	ldr	r0, [ip, #32]
   15b70:	cmp	r0, #0
   15b74:	str	r0, [sp, #64]	; 0x40
   15b78:	beq	15f0c <abort@plt+0x51f4>
   15b7c:	ldr	r0, [ip, #36]	; 0x24
   15b80:	cmp	r0, #0
   15b84:	movne	r4, #10
   15b88:	moveq	r4, #9
   15b8c:	cmp	r1, #0
   15b90:	beq	15ea4 <abort@plt+0x518c>
   15b94:	stm	sp, {r2, r3}
   15b98:	mov	r0, r5
   15b9c:	mov	r3, r1
   15ba0:	ldr	r2, [pc, #876]	; 15f14 <abort@plt+0x51fc>
   15ba4:	mov	r1, #1
   15ba8:	bl	10cb8 <__fprintf_chk@plt>
   15bac:	mov	r2, #5
   15bb0:	ldr	r1, [pc, #864]	; 15f18 <abort@plt+0x5200>
   15bb4:	mov	r0, #0
   15bb8:	bl	10b98 <dcgettext@plt>
   15bbc:	ldr	r3, [pc, #856]	; 15f1c <abort@plt+0x5204>
   15bc0:	ldr	r2, [pc, #856]	; 15f20 <abort@plt+0x5208>
   15bc4:	str	r3, [sp]
   15bc8:	mov	r1, #1
   15bcc:	mov	r3, r0
   15bd0:	mov	r0, r5
   15bd4:	bl	10cb8 <__fprintf_chk@plt>
   15bd8:	mov	r1, r5
   15bdc:	mov	r0, #10
   15be0:	bl	10b8c <fputc_unlocked@plt>
   15be4:	mov	r2, #5
   15be8:	ldr	r1, [pc, #820]	; 15f24 <abort@plt+0x520c>
   15bec:	mov	r0, #0
   15bf0:	bl	10b98 <dcgettext@plt>
   15bf4:	mov	r1, #1
   15bf8:	ldr	r3, [pc, #808]	; 15f28 <abort@plt+0x5210>
   15bfc:	mov	r2, r0
   15c00:	mov	r0, r5
   15c04:	bl	10cb8 <__fprintf_chk@plt>
   15c08:	mov	r1, r5
   15c0c:	mov	r0, #10
   15c10:	bl	10b8c <fputc_unlocked@plt>
   15c14:	cmp	r4, #9
   15c18:	ldrls	pc, [pc, r4, lsl #2]
   15c1c:	b	15ec0 <abort@plt+0x51a8>
   15c20:	andeq	r5, r1, r4, lsr #25
   15c24:	andeq	r5, r1, ip, lsr #25
   15c28:	ldrdeq	r5, [r1], -r8
   15c2c:	andeq	r5, r1, ip, lsl #26
   15c30:	andeq	r5, r1, r4, asr #26
   15c34:	andeq	r5, r1, r0, lsl #27
   15c38:			; <UNDEFINED> instruction: 0x00015dbc
   15c3c:	andeq	r5, r1, r0, lsl #28
   15c40:	andeq	r5, r1, ip, asr #28
   15c44:	andeq	r5, r1, r8, asr #24
   15c48:	ldr	r1, [pc, #732]	; 15f2c <abort@plt+0x5214>
   15c4c:	mov	r2, #5
   15c50:	mov	r0, #0
   15c54:	bl	10b98 <dcgettext@plt>
   15c58:	ldr	ip, [sp, #64]	; 0x40
   15c5c:	ldr	r1, [sp, #60]	; 0x3c
   15c60:	ldr	r2, [sp, #56]	; 0x38
   15c64:	ldr	lr, [sp, #48]	; 0x30
   15c68:	str	ip, [sp, #28]
   15c6c:	str	r1, [sp, #24]
   15c70:	ldr	ip, [sp, #44]	; 0x2c
   15c74:	ldr	r1, [sp, #40]	; 0x28
   15c78:	ldr	r4, [sp, #52]	; 0x34
   15c7c:	str	r2, [sp, #20]
   15c80:	ldr	r2, [sp, #36]	; 0x24
   15c84:	stmib	sp, {r1, ip, lr}
   15c88:	mov	r1, #1
   15c8c:	str	r2, [sp]
   15c90:	ldr	r3, [sp, #32]
   15c94:	str	r4, [sp, #16]
   15c98:	mov	r2, r0
   15c9c:	mov	r0, r5
   15ca0:	bl	10cb8 <__fprintf_chk@plt>
   15ca4:	add	sp, sp, #76	; 0x4c
   15ca8:	pop	{r4, r5, pc}
   15cac:	mov	r2, #5
   15cb0:	ldr	r1, [pc, #632]	; 15f30 <abort@plt+0x5218>
   15cb4:	mov	r0, #0
   15cb8:	bl	10b98 <dcgettext@plt>
   15cbc:	ldr	r3, [sp, #32]
   15cc0:	mov	r1, #1
   15cc4:	mov	r2, r0
   15cc8:	mov	r0, r5
   15ccc:	add	sp, sp, #76	; 0x4c
   15cd0:	pop	{r4, r5, lr}
   15cd4:	b	10cb8 <__fprintf_chk@plt>
   15cd8:	mov	r2, #5
   15cdc:	ldr	r1, [pc, #592]	; 15f34 <abort@plt+0x521c>
   15ce0:	mov	r0, #0
   15ce4:	bl	10b98 <dcgettext@plt>
   15ce8:	ldr	r2, [sp, #36]	; 0x24
   15cec:	ldr	r3, [sp, #32]
   15cf0:	str	r2, [sp, #88]	; 0x58
   15cf4:	mov	r1, #1
   15cf8:	mov	r2, r0
   15cfc:	mov	r0, r5
   15d00:	add	sp, sp, #76	; 0x4c
   15d04:	pop	{r4, r5, lr}
   15d08:	b	10cb8 <__fprintf_chk@plt>
   15d0c:	mov	r2, #5
   15d10:	ldr	r1, [pc, #544]	; 15f38 <abort@plt+0x5220>
   15d14:	mov	r0, #0
   15d18:	bl	10b98 <dcgettext@plt>
   15d1c:	ldr	r1, [sp, #40]	; 0x28
   15d20:	ldr	r2, [sp, #36]	; 0x24
   15d24:	str	r1, [sp, #4]
   15d28:	str	r2, [sp]
   15d2c:	ldr	r3, [sp, #32]
   15d30:	mov	r1, #1
   15d34:	mov	r2, r0
   15d38:	mov	r0, r5
   15d3c:	bl	10cb8 <__fprintf_chk@plt>
   15d40:	b	15ca4 <abort@plt+0x4f8c>
   15d44:	mov	r2, #5
   15d48:	ldr	r1, [pc, #492]	; 15f3c <abort@plt+0x5224>
   15d4c:	mov	r0, #0
   15d50:	bl	10b98 <dcgettext@plt>
   15d54:	ldr	r1, [sp, #40]	; 0x28
   15d58:	ldr	ip, [sp, #44]	; 0x2c
   15d5c:	ldr	r2, [sp, #36]	; 0x24
   15d60:	ldr	r3, [sp, #32]
   15d64:	stmib	sp, {r1, ip}
   15d68:	str	r2, [sp]
   15d6c:	mov	r1, #1
   15d70:	mov	r2, r0
   15d74:	mov	r0, r5
   15d78:	bl	10cb8 <__fprintf_chk@plt>
   15d7c:	b	15ca4 <abort@plt+0x4f8c>
   15d80:	mov	r2, #5
   15d84:	ldr	r1, [pc, #436]	; 15f40 <abort@plt+0x5228>
   15d88:	mov	r0, #0
   15d8c:	bl	10b98 <dcgettext@plt>
   15d90:	add	r1, sp, #40	; 0x28
   15d94:	ldr	r2, [sp, #36]	; 0x24
   15d98:	ldm	r1, {r1, ip, lr}
   15d9c:	ldr	r3, [sp, #32]
   15da0:	str	r2, [sp]
   15da4:	stmib	sp, {r1, ip, lr}
   15da8:	mov	r1, #1
   15dac:	mov	r2, r0
   15db0:	mov	r0, r5
   15db4:	bl	10cb8 <__fprintf_chk@plt>
   15db8:	b	15ca4 <abort@plt+0x4f8c>
   15dbc:	mov	r2, #5
   15dc0:	ldr	r1, [pc, #380]	; 15f44 <abort@plt+0x522c>
   15dc4:	mov	r0, #0
   15dc8:	bl	10b98 <dcgettext@plt>
   15dcc:	add	r1, sp, #40	; 0x28
   15dd0:	ldr	r2, [sp, #36]	; 0x24
   15dd4:	ldm	r1, {r1, ip, lr}
   15dd8:	ldr	r4, [sp, #52]	; 0x34
   15ddc:	str	r2, [sp]
   15de0:	stmib	sp, {r1, ip, lr}
   15de4:	mov	r1, #1
   15de8:	ldr	r3, [sp, #32]
   15dec:	str	r4, [sp, #16]
   15df0:	mov	r2, r0
   15df4:	mov	r0, r5
   15df8:	bl	10cb8 <__fprintf_chk@plt>
   15dfc:	b	15ca4 <abort@plt+0x4f8c>
   15e00:	mov	r2, #5
   15e04:	ldr	r1, [pc, #316]	; 15f48 <abort@plt+0x5230>
   15e08:	mov	r0, #0
   15e0c:	bl	10b98 <dcgettext@plt>
   15e10:	add	r1, sp, #40	; 0x28
   15e14:	ldr	r2, [sp, #56]	; 0x38
   15e18:	ldm	r1, {r1, ip, lr}
   15e1c:	ldr	r4, [sp, #52]	; 0x34
   15e20:	str	r2, [sp, #20]
   15e24:	ldr	r2, [sp, #36]	; 0x24
   15e28:	stmib	sp, {r1, ip, lr}
   15e2c:	mov	r1, #1
   15e30:	str	r2, [sp]
   15e34:	ldr	r3, [sp, #32]
   15e38:	str	r4, [sp, #16]
   15e3c:	mov	r2, r0
   15e40:	mov	r0, r5
   15e44:	bl	10cb8 <__fprintf_chk@plt>
   15e48:	b	15ca4 <abort@plt+0x4f8c>
   15e4c:	mov	r2, #5
   15e50:	ldr	r1, [pc, #244]	; 15f4c <abort@plt+0x5234>
   15e54:	mov	r0, #0
   15e58:	bl	10b98 <dcgettext@plt>
   15e5c:	ldr	r1, [sp, #60]	; 0x3c
   15e60:	ldr	r2, [sp, #56]	; 0x38
   15e64:	ldr	lr, [sp, #48]	; 0x30
   15e68:	ldr	ip, [sp, #44]	; 0x2c
   15e6c:	str	r1, [sp, #24]
   15e70:	ldr	r1, [sp, #40]	; 0x28
   15e74:	ldr	r4, [sp, #52]	; 0x34
   15e78:	str	r2, [sp, #20]
   15e7c:	ldr	r2, [sp, #36]	; 0x24
   15e80:	stmib	sp, {r1, ip, lr}
   15e84:	mov	r1, #1
   15e88:	str	r2, [sp]
   15e8c:	ldr	r3, [sp, #32]
   15e90:	str	r4, [sp, #16]
   15e94:	mov	r2, r0
   15e98:	mov	r0, r5
   15e9c:	bl	10cb8 <__fprintf_chk@plt>
   15ea0:	b	15ca4 <abort@plt+0x4f8c>
   15ea4:	str	r3, [sp]
   15ea8:	mov	r1, #1
   15eac:	mov	r3, r2
   15eb0:	mov	r0, r5
   15eb4:	ldr	r2, [pc, #148]	; 15f50 <abort@plt+0x5238>
   15eb8:	bl	10cb8 <__fprintf_chk@plt>
   15ebc:	b	15bac <abort@plt+0x4e94>
   15ec0:	mov	r2, #5
   15ec4:	ldr	r1, [pc, #136]	; 15f54 <abort@plt+0x523c>
   15ec8:	b	15c50 <abort@plt+0x4f38>
   15ecc:	mov	r4, r0
   15ed0:	b	15b8c <abort@plt+0x4e74>
   15ed4:	mov	r4, #1
   15ed8:	b	15b8c <abort@plt+0x4e74>
   15edc:	mov	r4, #2
   15ee0:	b	15b8c <abort@plt+0x4e74>
   15ee4:	mov	r4, #3
   15ee8:	b	15b8c <abort@plt+0x4e74>
   15eec:	mov	r4, #4
   15ef0:	b	15b8c <abort@plt+0x4e74>
   15ef4:	mov	r4, #5
   15ef8:	b	15b8c <abort@plt+0x4e74>
   15efc:	mov	r4, #6
   15f00:	b	15b8c <abort@plt+0x4e74>
   15f04:	mov	r4, #7
   15f08:	b	15b8c <abort@plt+0x4e74>
   15f0c:	mov	r4, #8
   15f10:	b	15b8c <abort@plt+0x4e74>
   15f14:	andeq	r7, r1, r8, lsl #12
   15f18:	andeq	r7, r1, ip, lsl r6
   15f1c:	andeq	r0, r0, r6, ror #15
   15f20:	strdeq	r7, [r1], -r4
   15f24:	andeq	r7, r1, r0, lsr #12
   15f28:	andeq	r7, r1, ip, asr #13
   15f2c:	strdeq	r7, [r1], -ip
   15f30:	strdeq	r7, [r1], -r0
   15f34:	andeq	r7, r1, r0, lsl #14
   15f38:	andeq	r7, r1, r8, lsl r7
   15f3c:	andeq	r7, r1, r4, lsr r7
   15f40:	andeq	r7, r1, r4, asr r7
   15f44:	andeq	r7, r1, r8, ror r7
   15f48:	andeq	r7, r1, r0, lsr #15
   15f4c:	andeq	r7, r1, ip, asr #15
   15f50:	andeq	r7, r1, r4, lsl r6
   15f54:	andeq	r7, r1, r0, lsr r8
   15f58:	push	{r3}		; (str r3, [sp, #-4]!)
   15f5c:	push	{lr}		; (str lr, [sp, #-4]!)
   15f60:	sub	sp, sp, #56	; 0x38
   15f64:	add	r3, sp, #64	; 0x40
   15f68:	ldr	ip, [sp, #64]	; 0x40
   15f6c:	str	r3, [sp, #12]
   15f70:	cmp	ip, #0
   15f74:	str	ip, [sp, #16]
   15f78:	beq	16010 <abort@plt+0x52f8>
   15f7c:	ldr	ip, [sp, #68]	; 0x44
   15f80:	cmp	ip, #0
   15f84:	str	ip, [sp, #20]
   15f88:	beq	16030 <abort@plt+0x5318>
   15f8c:	ldr	ip, [sp, #72]	; 0x48
   15f90:	cmp	ip, #0
   15f94:	str	ip, [sp, #24]
   15f98:	beq	16038 <abort@plt+0x5320>
   15f9c:	ldr	ip, [sp, #76]	; 0x4c
   15fa0:	cmp	ip, #0
   15fa4:	str	ip, [sp, #28]
   15fa8:	beq	16040 <abort@plt+0x5328>
   15fac:	ldr	ip, [sp, #80]	; 0x50
   15fb0:	cmp	ip, #0
   15fb4:	str	ip, [sp, #32]
   15fb8:	beq	16048 <abort@plt+0x5330>
   15fbc:	ldr	ip, [sp, #84]	; 0x54
   15fc0:	cmp	ip, #0
   15fc4:	str	ip, [sp, #36]	; 0x24
   15fc8:	beq	16050 <abort@plt+0x5338>
   15fcc:	ldr	ip, [sp, #88]	; 0x58
   15fd0:	cmp	ip, #0
   15fd4:	str	ip, [sp, #40]	; 0x28
   15fd8:	beq	16058 <abort@plt+0x5340>
   15fdc:	ldr	ip, [sp, #92]	; 0x5c
   15fe0:	cmp	ip, #0
   15fe4:	str	ip, [sp, #44]	; 0x2c
   15fe8:	beq	16060 <abort@plt+0x5348>
   15fec:	ldr	ip, [sp, #96]	; 0x60
   15ff0:	cmp	ip, #0
   15ff4:	str	ip, [sp, #48]	; 0x30
   15ff8:	beq	16068 <abort@plt+0x5350>
   15ffc:	ldr	ip, [sp, #100]	; 0x64
   16000:	cmp	ip, #0
   16004:	str	ip, [sp, #52]	; 0x34
   16008:	movne	ip, #10
   1600c:	moveq	ip, #9
   16010:	add	r3, sp, #16
   16014:	stm	sp, {r3, ip}
   16018:	ldr	r3, [sp, #60]	; 0x3c
   1601c:	bl	15704 <abort@plt+0x49ec>
   16020:	add	sp, sp, #56	; 0x38
   16024:	pop	{lr}		; (ldr lr, [sp], #4)
   16028:	add	sp, sp, #4
   1602c:	bx	lr
   16030:	mov	ip, #1
   16034:	b	16010 <abort@plt+0x52f8>
   16038:	mov	ip, #2
   1603c:	b	16010 <abort@plt+0x52f8>
   16040:	mov	ip, #3
   16044:	b	16010 <abort@plt+0x52f8>
   16048:	mov	ip, #4
   1604c:	b	16010 <abort@plt+0x52f8>
   16050:	mov	ip, #5
   16054:	b	16010 <abort@plt+0x52f8>
   16058:	mov	ip, #6
   1605c:	b	16010 <abort@plt+0x52f8>
   16060:	mov	ip, #7
   16064:	b	16010 <abort@plt+0x52f8>
   16068:	mov	ip, #8
   1606c:	b	16010 <abort@plt+0x52f8>
   16070:	ldr	r3, [pc, #116]	; 160ec <abort@plt+0x53d4>
   16074:	push	{r4, lr}
   16078:	mov	r0, #10
   1607c:	ldr	r1, [r3]
   16080:	bl	10b8c <fputc_unlocked@plt>
   16084:	mov	r2, #5
   16088:	ldr	r1, [pc, #96]	; 160f0 <abort@plt+0x53d8>
   1608c:	mov	r0, #0
   16090:	bl	10b98 <dcgettext@plt>
   16094:	ldr	r2, [pc, #88]	; 160f4 <abort@plt+0x53dc>
   16098:	mov	r1, r0
   1609c:	mov	r0, #1
   160a0:	bl	10c94 <__printf_chk@plt>
   160a4:	mov	r2, #5
   160a8:	ldr	r1, [pc, #72]	; 160f8 <abort@plt+0x53e0>
   160ac:	mov	r0, #0
   160b0:	bl	10b98 <dcgettext@plt>
   160b4:	ldr	r3, [pc, #64]	; 160fc <abort@plt+0x53e4>
   160b8:	ldr	r2, [pc, #64]	; 16100 <abort@plt+0x53e8>
   160bc:	mov	r1, r0
   160c0:	mov	r0, #1
   160c4:	bl	10c94 <__printf_chk@plt>
   160c8:	mov	r2, #5
   160cc:	ldr	r1, [pc, #48]	; 16104 <abort@plt+0x53ec>
   160d0:	mov	r0, #0
   160d4:	bl	10b98 <dcgettext@plt>
   160d8:	ldr	r2, [pc, #40]	; 16108 <abort@plt+0x53f0>
   160dc:	pop	{r4, lr}
   160e0:	mov	r1, r0
   160e4:	mov	r0, #1
   160e8:	b	10c94 <__printf_chk@plt>
   160ec:	andeq	r8, r2, r4, lsr #2
   160f0:	andeq	r7, r1, ip, ror #16
   160f4:	andeq	r7, r1, r0, lsl #17
   160f8:	muleq	r1, r8, r8
   160fc:	andeq	r7, r1, r8, lsl #6
   16100:	andeq	r7, r1, r0, lsr r3
   16104:	andeq	r7, r1, ip, lsr #17
   16108:	ldrdeq	r7, [r1], -r4
   1610c:	push	{r4, r5, r6, lr}
   16110:	mov	r6, r0
   16114:	mov	r5, r1
   16118:	mov	r4, r2
   1611c:	bl	16b94 <abort@plt+0x5e7c>
   16120:	cmp	r0, #0
   16124:	popne	{r4, r5, r6, pc}
   16128:	cmp	r6, #0
   1612c:	beq	1613c <abort@plt+0x5424>
   16130:	cmp	r5, #0
   16134:	cmpne	r4, #0
   16138:	popeq	{r4, r5, r6, pc}
   1613c:	bl	16788 <abort@plt+0x5a70>
   16140:	push	{r4, lr}
   16144:	bl	16810 <abort@plt+0x5af8>
   16148:	cmp	r0, #0
   1614c:	popne	{r4, pc}
   16150:	bl	16788 <abort@plt+0x5a70>
   16154:	push	{r4, lr}
   16158:	bl	16810 <abort@plt+0x5af8>
   1615c:	cmp	r0, #0
   16160:	popne	{r4, pc}
   16164:	bl	16788 <abort@plt+0x5a70>
   16168:	push	{r4, lr}
   1616c:	bl	16810 <abort@plt+0x5af8>
   16170:	cmp	r0, #0
   16174:	popne	{r4, pc}
   16178:	bl	16788 <abort@plt+0x5a70>
   1617c:	push	{r4, r5, r6, lr}
   16180:	mov	r5, r0
   16184:	mov	r4, r1
   16188:	bl	1683c <abort@plt+0x5b24>
   1618c:	cmp	r0, #0
   16190:	popne	{r4, r5, r6, pc}
   16194:	adds	r4, r4, #0
   16198:	movne	r4, #1
   1619c:	cmp	r5, #0
   161a0:	orreq	r4, r4, #1
   161a4:	cmp	r4, #0
   161a8:	popeq	{r4, r5, r6, pc}
   161ac:	bl	16788 <abort@plt+0x5a70>
   161b0:	push	{r4, lr}
   161b4:	cmp	r1, #0
   161b8:	orreq	r1, r1, #1
   161bc:	bl	1683c <abort@plt+0x5b24>
   161c0:	cmp	r0, #0
   161c4:	popne	{r4, pc}
   161c8:	bl	16788 <abort@plt+0x5a70>
   161cc:	push	{r4, r5, r6, lr}
   161d0:	mov	r6, r0
   161d4:	mov	r5, r1
   161d8:	mov	r4, r2
   161dc:	bl	16b94 <abort@plt+0x5e7c>
   161e0:	cmp	r0, #0
   161e4:	popne	{r4, r5, r6, pc}
   161e8:	cmp	r6, #0
   161ec:	beq	161fc <abort@plt+0x54e4>
   161f0:	cmp	r5, #0
   161f4:	cmpne	r4, #0
   161f8:	popeq	{r4, r5, r6, pc}
   161fc:	bl	16788 <abort@plt+0x5a70>
   16200:	cmp	r2, #0
   16204:	cmpne	r1, #0
   16208:	moveq	r2, #1
   1620c:	moveq	r1, r2
   16210:	push	{r4, lr}
   16214:	bl	16b94 <abort@plt+0x5e7c>
   16218:	cmp	r0, #0
   1621c:	popne	{r4, pc}
   16220:	bl	16788 <abort@plt+0x5a70>
   16224:	push	{r4, lr}
   16228:	mov	r2, r1
   1622c:	mov	r1, r0
   16230:	mov	r0, #0
   16234:	bl	16b94 <abort@plt+0x5e7c>
   16238:	cmp	r0, #0
   1623c:	popne	{r4, pc}
   16240:	bl	16788 <abort@plt+0x5a70>
   16244:	cmp	r1, #0
   16248:	cmpne	r0, #0
   1624c:	moveq	r2, #1
   16250:	movne	r2, r1
   16254:	moveq	r1, r2
   16258:	movne	r1, r0
   1625c:	push	{r4, lr}
   16260:	mov	r0, #0
   16264:	bl	16b94 <abort@plt+0x5e7c>
   16268:	cmp	r0, #0
   1626c:	popne	{r4, pc}
   16270:	bl	16788 <abort@plt+0x5a70>
   16274:	cmp	r0, #0
   16278:	push	{r4, r5, r6, lr}
   1627c:	mov	r5, r1
   16280:	ldr	r4, [r1]
   16284:	beq	162c0 <abort@plt+0x55a8>
   16288:	lsr	r2, r4, #1
   1628c:	add	r3, r2, #1
   16290:	mvn	r3, r3
   16294:	cmp	r4, r3
   16298:	bhi	162dc <abort@plt+0x55c4>
   1629c:	add	r4, r4, #1
   162a0:	add	r4, r4, r2
   162a4:	mov	r1, r4
   162a8:	mov	r2, #1
   162ac:	bl	16b94 <abort@plt+0x5e7c>
   162b0:	cmp	r0, #0
   162b4:	beq	162e0 <abort@plt+0x55c8>
   162b8:	str	r4, [r5]
   162bc:	pop	{r4, r5, r6, pc}
   162c0:	cmp	r4, #0
   162c4:	moveq	r4, #64	; 0x40
   162c8:	mov	r1, r4
   162cc:	mov	r2, #1
   162d0:	bl	16b94 <abort@plt+0x5e7c>
   162d4:	cmp	r0, #0
   162d8:	bne	162b8 <abort@plt+0x55a0>
   162dc:	bl	16788 <abort@plt+0x5a70>
   162e0:	cmp	r4, #0
   162e4:	bne	162dc <abort@plt+0x55c4>
   162e8:	str	r4, [r5]
   162ec:	pop	{r4, r5, r6, pc}
   162f0:	cmp	r0, #0
   162f4:	push	{r4, r5, r6, lr}
   162f8:	mov	r5, r1
   162fc:	ldr	r4, [r1]
   16300:	mov	r6, r2
   16304:	beq	16348 <abort@plt+0x5630>
   16308:	lsr	r1, r4, #1
   1630c:	add	r3, r1, #1
   16310:	mvn	r3, r3
   16314:	cmp	r4, r3
   16318:	bhi	16380 <abort@plt+0x5668>
   1631c:	add	r4, r4, #1
   16320:	add	r4, r4, r1
   16324:	mov	r1, r4
   16328:	bl	16b94 <abort@plt+0x5e7c>
   1632c:	cmp	r0, #0
   16330:	bne	16340 <abort@plt+0x5628>
   16334:	cmp	r4, #0
   16338:	cmpne	r6, #0
   1633c:	bne	16380 <abort@plt+0x5668>
   16340:	str	r4, [r5]
   16344:	pop	{r4, r5, r6, pc}
   16348:	cmp	r4, #0
   1634c:	bne	16368 <abort@plt+0x5650>
   16350:	mov	r1, r2
   16354:	mov	r0, #64	; 0x40
   16358:	bl	16cd4 <abort@plt+0x5fbc>
   1635c:	cmp	r0, #0
   16360:	movne	r4, r0
   16364:	addeq	r4, r0, #1
   16368:	mov	r2, r6
   1636c:	mov	r1, r4
   16370:	mov	r0, #0
   16374:	bl	16b94 <abort@plt+0x5e7c>
   16378:	cmp	r0, #0
   1637c:	bne	16340 <abort@plt+0x5628>
   16380:	bl	16788 <abort@plt+0x5a70>
   16384:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16388:	sub	sp, sp, #12
   1638c:	ldr	r6, [r1]
   16390:	mov	r8, r1
   16394:	mov	r9, r0
   16398:	asrs	r4, r6, #1
   1639c:	mov	sl, r2
   163a0:	mov	fp, r3
   163a4:	ldr	r7, [sp, #48]	; 0x30
   163a8:	bmi	16524 <abort@plt+0x580c>
   163ac:	mvn	r1, #-2147483648	; 0x80000000
   163b0:	sub	r1, r1, r4
   163b4:	cmp	r6, r1
   163b8:	movle	r1, #0
   163bc:	movgt	r1, #1
   163c0:	mvn	r3, fp
   163c4:	cmp	r1, #0
   163c8:	addeq	r4, r4, r6
   163cc:	mvnne	r4, #-2147483648	; 0x80000000
   163d0:	lsr	r3, r3, #31
   163d4:	cmp	fp, r4
   163d8:	movge	r2, #0
   163dc:	andlt	r2, r3, #1
   163e0:	cmp	r2, #0
   163e4:	beq	164d4 <abort@plt+0x57bc>
   163e8:	cmp	r7, #0
   163ec:	blt	165bc <abort@plt+0x58a4>
   163f0:	bne	165b4 <abort@plt+0x589c>
   163f4:	mov	r5, #64	; 0x40
   163f8:	mov	r1, r7
   163fc:	mov	r0, r5
   16400:	str	r3, [sp, #4]
   16404:	bl	16ee0 <abort@plt+0x61c8>
   16408:	mov	r1, r7
   1640c:	mov	r4, r0
   16410:	mov	r0, r5
   16414:	bl	17100 <abort@plt+0x63e8>
   16418:	ldr	r3, [sp, #4]
   1641c:	sub	r5, r5, r1
   16420:	cmp	r9, #0
   16424:	sub	r2, r4, r6
   16428:	streq	r9, [r8]
   1642c:	cmp	r2, sl
   16430:	bge	164b4 <abort@plt+0x579c>
   16434:	cmp	sl, #0
   16438:	blt	16554 <abort@plt+0x583c>
   1643c:	cmp	r6, #0
   16440:	blt	16460 <abort@plt+0x5748>
   16444:	mvn	r2, #-2147483648	; 0x80000000
   16448:	sub	r2, r2, sl
   1644c:	cmp	r6, r2
   16450:	movle	r2, #0
   16454:	movgt	r2, #1
   16458:	cmp	r2, #0
   1645c:	bne	16550 <abort@plt+0x5838>
   16460:	add	r6, r6, sl
   16464:	cmp	fp, r6
   16468:	movge	r3, #0
   1646c:	andlt	r3, r3, #1
   16470:	cmp	r3, #0
   16474:	mov	r4, r6
   16478:	bne	16550 <abort@plt+0x5838>
   1647c:	cmp	r7, #0
   16480:	blt	16568 <abort@plt+0x5850>
   16484:	beq	164b0 <abort@plt+0x5798>
   16488:	cmp	r6, #0
   1648c:	blt	1660c <abort@plt+0x58f4>
   16490:	mov	r1, r7
   16494:	mvn	r0, #-2147483648	; 0x80000000
   16498:	bl	16ee0 <abort@plt+0x61c8>
   1649c:	cmp	r6, r0
   164a0:	movle	r0, #0
   164a4:	movgt	r0, #1
   164a8:	cmp	r0, #0
   164ac:	bne	16550 <abort@plt+0x5838>
   164b0:	mul	r5, r6, r7
   164b4:	mov	r1, r5
   164b8:	mov	r0, r9
   164bc:	bl	1683c <abort@plt+0x5b24>
   164c0:	cmp	r0, #0
   164c4:	beq	16538 <abort@plt+0x5820>
   164c8:	str	r4, [r8]
   164cc:	add	sp, sp, #12
   164d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   164d4:	cmp	r7, #0
   164d8:	blt	16594 <abort@plt+0x587c>
   164dc:	beq	163f4 <abort@plt+0x56dc>
   164e0:	cmp	r4, #0
   164e4:	blt	165c4 <abort@plt+0x58ac>
   164e8:	mov	r1, r7
   164ec:	mvn	r0, #-2147483648	; 0x80000000
   164f0:	str	r3, [sp, #4]
   164f4:	bl	16ee0 <abort@plt+0x61c8>
   164f8:	ldr	r3, [sp, #4]
   164fc:	cmp	r0, r4
   16500:	movge	r0, #0
   16504:	movlt	r0, #1
   16508:	cmp	r0, #0
   1650c:	mvnne	r5, #-2147483648	; 0x80000000
   16510:	bne	163f8 <abort@plt+0x56e0>
   16514:	mul	r5, r7, r4
   16518:	cmp	r5, #63	; 0x3f
   1651c:	bgt	16420 <abort@plt+0x5708>
   16520:	b	163f4 <abort@plt+0x56dc>
   16524:	rsb	r1, r4, #-2147483648	; 0x80000000
   16528:	cmp	r6, r1
   1652c:	movge	r1, #0
   16530:	movlt	r1, #1
   16534:	b	163c0 <abort@plt+0x56a8>
   16538:	adds	r5, r5, #0
   1653c:	movne	r5, #1
   16540:	cmp	r9, #0
   16544:	orreq	r5, r5, #1
   16548:	cmp	r5, #0
   1654c:	beq	164c8 <abort@plt+0x57b0>
   16550:	bl	16788 <abort@plt+0x5a70>
   16554:	rsb	r2, sl, #-2147483648	; 0x80000000
   16558:	cmp	r6, r2
   1655c:	movge	r2, #0
   16560:	movlt	r2, #1
   16564:	b	16458 <abort@plt+0x5740>
   16568:	cmp	r6, #0
   1656c:	blt	165f0 <abort@plt+0x58d8>
   16570:	cmn	r7, #1
   16574:	beq	164b0 <abort@plt+0x5798>
   16578:	mov	r1, r7
   1657c:	mov	r0, #-2147483648	; 0x80000000
   16580:	bl	16ee0 <abort@plt+0x61c8>
   16584:	cmp	r6, r0
   16588:	movle	r0, #0
   1658c:	movgt	r0, #1
   16590:	b	164a8 <abort@plt+0x5790>
   16594:	cmp	r4, #0
   16598:	blt	16630 <abort@plt+0x5918>
   1659c:	cmn	r7, #1
   165a0:	beq	16514 <abort@plt+0x57fc>
   165a4:	str	r3, [sp, #4]
   165a8:	mov	r1, r7
   165ac:	mov	r0, #-2147483648	; 0x80000000
   165b0:	b	164f4 <abort@plt+0x57dc>
   165b4:	mov	r4, fp
   165b8:	b	164e8 <abort@plt+0x57d0>
   165bc:	mov	r4, fp
   165c0:	b	1659c <abort@plt+0x5884>
   165c4:	cmn	r4, #1
   165c8:	beq	16514 <abort@plt+0x57fc>
   165cc:	mov	r1, r4
   165d0:	mov	r0, #-2147483648	; 0x80000000
   165d4:	str	r3, [sp, #4]
   165d8:	bl	16ee0 <abort@plt+0x61c8>
   165dc:	ldr	r3, [sp, #4]
   165e0:	cmp	r7, r0
   165e4:	movle	r0, #0
   165e8:	movgt	r0, #1
   165ec:	b	16508 <abort@plt+0x57f0>
   165f0:	mov	r1, r7
   165f4:	mvn	r0, #-2147483648	; 0x80000000
   165f8:	bl	16ee0 <abort@plt+0x61c8>
   165fc:	cmp	r6, r0
   16600:	movge	r0, #0
   16604:	movlt	r0, #1
   16608:	b	164a8 <abort@plt+0x5790>
   1660c:	cmn	r6, #1
   16610:	beq	164b0 <abort@plt+0x5798>
   16614:	mov	r1, r6
   16618:	mov	r0, #-2147483648	; 0x80000000
   1661c:	bl	16ee0 <abort@plt+0x61c8>
   16620:	cmp	r7, r0
   16624:	movle	r0, #0
   16628:	movgt	r0, #1
   1662c:	b	164a8 <abort@plt+0x5790>
   16630:	mov	r1, r7
   16634:	mvn	r0, #-2147483648	; 0x80000000
   16638:	str	r3, [sp, #4]
   1663c:	bl	16ee0 <abort@plt+0x61c8>
   16640:	ldr	r3, [sp, #4]
   16644:	cmp	r0, r4
   16648:	movle	r0, #0
   1664c:	movgt	r0, #1
   16650:	b	16508 <abort@plt+0x57f0>
   16654:	push	{r4, lr}
   16658:	mov	r1, #1
   1665c:	bl	167c8 <abort@plt+0x5ab0>
   16660:	cmp	r0, #0
   16664:	popne	{r4, pc}
   16668:	bl	16788 <abort@plt+0x5a70>
   1666c:	push	{r4, lr}
   16670:	mov	r1, #1
   16674:	bl	167c8 <abort@plt+0x5ab0>
   16678:	cmp	r0, #0
   1667c:	popne	{r4, pc}
   16680:	bl	16788 <abort@plt+0x5a70>
   16684:	push	{r4, lr}
   16688:	bl	167c8 <abort@plt+0x5ab0>
   1668c:	cmp	r0, #0
   16690:	popne	{r4, pc}
   16694:	bl	16788 <abort@plt+0x5a70>
   16698:	push	{r4, lr}
   1669c:	bl	167c8 <abort@plt+0x5ab0>
   166a0:	cmp	r0, #0
   166a4:	popne	{r4, pc}
   166a8:	bl	16788 <abort@plt+0x5a70>
   166ac:	push	{r4, r5, r6, lr}
   166b0:	mov	r6, r0
   166b4:	mov	r0, r1
   166b8:	mov	r4, r1
   166bc:	bl	16810 <abort@plt+0x5af8>
   166c0:	subs	r5, r0, #0
   166c4:	beq	166dc <abort@plt+0x59c4>
   166c8:	mov	r2, r4
   166cc:	mov	r1, r6
   166d0:	bl	10b68 <memcpy@plt>
   166d4:	mov	r0, r5
   166d8:	pop	{r4, r5, r6, pc}
   166dc:	bl	16788 <abort@plt+0x5a70>
   166e0:	push	{r4, r5, r6, lr}
   166e4:	mov	r6, r0
   166e8:	mov	r0, r1
   166ec:	mov	r4, r1
   166f0:	bl	16810 <abort@plt+0x5af8>
   166f4:	subs	r5, r0, #0
   166f8:	beq	16710 <abort@plt+0x59f8>
   166fc:	mov	r2, r4
   16700:	mov	r1, r6
   16704:	bl	10b68 <memcpy@plt>
   16708:	mov	r0, r5
   1670c:	pop	{r4, r5, r6, pc}
   16710:	bl	16788 <abort@plt+0x5a70>
   16714:	push	{r4, r5, r6, lr}
   16718:	mov	r6, r0
   1671c:	add	r0, r1, #1
   16720:	mov	r4, r1
   16724:	bl	16810 <abort@plt+0x5af8>
   16728:	subs	r5, r0, #0
   1672c:	beq	1674c <abort@plt+0x5a34>
   16730:	mov	r3, #0
   16734:	mov	r1, r6
   16738:	strb	r3, [r5, r4]
   1673c:	mov	r2, r4
   16740:	bl	10b68 <memcpy@plt>
   16744:	mov	r0, r5
   16748:	pop	{r4, r5, r6, pc}
   1674c:	bl	16788 <abort@plt+0x5a70>
   16750:	push	{r4, r5, r6, lr}
   16754:	mov	r6, r0
   16758:	bl	10c64 <strlen@plt>
   1675c:	add	r4, r0, #1
   16760:	mov	r0, r4
   16764:	bl	16810 <abort@plt+0x5af8>
   16768:	subs	r5, r0, #0
   1676c:	beq	16784 <abort@plt+0x5a6c>
   16770:	mov	r2, r4
   16774:	mov	r1, r6
   16778:	bl	10b68 <memcpy@plt>
   1677c:	mov	r0, r5
   16780:	pop	{r4, r5, r6, pc}
   16784:	bl	16788 <abort@plt+0x5a70>
   16788:	ldr	r3, [pc, #44]	; 167bc <abort@plt+0x5aa4>
   1678c:	push	{r4, lr}
   16790:	mov	r2, #5
   16794:	ldr	r1, [pc, #36]	; 167c0 <abort@plt+0x5aa8>
   16798:	mov	r0, #0
   1679c:	ldr	r4, [r3]
   167a0:	bl	10b98 <dcgettext@plt>
   167a4:	ldr	r2, [pc, #24]	; 167c4 <abort@plt+0x5aac>
   167a8:	mov	r1, #0
   167ac:	mov	r3, r0
   167b0:	mov	r0, r4
   167b4:	bl	10c04 <error@plt>
   167b8:	bl	10d18 <abort@plt>
   167bc:	andeq	r8, r2, ip, asr #1
   167c0:	andeq	r7, r1, r4, lsr #18
   167c4:	andeq	r7, r1, r4, lsr #9
   167c8:	cmp	r1, #0
   167cc:	cmpne	r0, #0
   167d0:	moveq	r1, #1
   167d4:	moveq	r0, r1
   167d8:	umull	r2, r3, r0, r1
   167dc:	adds	r3, r3, #0
   167e0:	movne	r3, #1
   167e4:	cmp	r2, #0
   167e8:	blt	167f8 <abort@plt+0x5ae0>
   167ec:	cmp	r3, #0
   167f0:	bne	167f8 <abort@plt+0x5ae0>
   167f4:	b	10b14 <calloc@plt>
   167f8:	push	{r4, lr}
   167fc:	bl	10c70 <__errno_location@plt>
   16800:	mov	r3, #12
   16804:	str	r3, [r0]
   16808:	mov	r0, #0
   1680c:	pop	{r4, pc}
   16810:	cmp	r0, #0
   16814:	moveq	r0, #1
   16818:	cmp	r0, #0
   1681c:	blt	16824 <abort@plt+0x5b0c>
   16820:	b	10c10 <malloc@plt>
   16824:	push	{r4, lr}
   16828:	bl	10c70 <__errno_location@plt>
   1682c:	mov	r3, #12
   16830:	str	r3, [r0]
   16834:	mov	r0, #0
   16838:	pop	{r4, pc}
   1683c:	cmp	r0, #0
   16840:	beq	16864 <abort@plt+0x5b4c>
   16844:	cmp	r1, #0
   16848:	push	{lr}		; (str lr, [sp, #-4]!)
   1684c:	sub	sp, sp, #12
   16850:	beq	1686c <abort@plt+0x5b54>
   16854:	blt	16884 <abort@plt+0x5b6c>
   16858:	add	sp, sp, #12
   1685c:	pop	{lr}		; (ldr lr, [sp], #4)
   16860:	b	10ba4 <realloc@plt>
   16864:	mov	r0, r1
   16868:	b	16810 <abort@plt+0x5af8>
   1686c:	str	r1, [sp, #4]
   16870:	bl	16a14 <abort@plt+0x5cfc>
   16874:	ldr	r3, [sp, #4]
   16878:	mov	r0, r3
   1687c:	add	sp, sp, #12
   16880:	pop	{pc}		; (ldr pc, [sp], #4)
   16884:	bl	10c70 <__errno_location@plt>
   16888:	mov	r2, #12
   1688c:	mov	r3, #0
   16890:	str	r2, [r0]
   16894:	b	16878 <abort@plt+0x5b60>
   16898:	push	{r4, r5, r6, lr}
   1689c:	mov	r4, r0
   168a0:	bl	10bec <__fpending@plt>
   168a4:	ldr	r5, [r4]
   168a8:	and	r5, r5, #32
   168ac:	mov	r6, r0
   168b0:	mov	r0, r4
   168b4:	bl	16914 <abort@plt+0x5bfc>
   168b8:	cmp	r5, #0
   168bc:	mov	r4, r0
   168c0:	bne	168e0 <abort@plt+0x5bc8>
   168c4:	cmp	r0, #0
   168c8:	beq	168d8 <abort@plt+0x5bc0>
   168cc:	cmp	r6, #0
   168d0:	beq	168fc <abort@plt+0x5be4>
   168d4:	mvn	r4, #0
   168d8:	mov	r0, r4
   168dc:	pop	{r4, r5, r6, pc}
   168e0:	cmp	r0, #0
   168e4:	bne	168d4 <abort@plt+0x5bbc>
   168e8:	bl	10c70 <__errno_location@plt>
   168ec:	str	r4, [r0]
   168f0:	mvn	r4, #0
   168f4:	mov	r0, r4
   168f8:	pop	{r4, r5, r6, pc}
   168fc:	bl	10c70 <__errno_location@plt>
   16900:	ldr	r4, [r0]
   16904:	subs	r4, r4, #9
   16908:	mvnne	r4, #0
   1690c:	mov	r0, r4
   16910:	pop	{r4, r5, r6, pc}
   16914:	push	{r4, r5, lr}
   16918:	sub	sp, sp, #12
   1691c:	mov	r4, r0
   16920:	bl	10cac <fileno@plt>
   16924:	cmp	r0, #0
   16928:	mov	r0, r4
   1692c:	blt	169a8 <abort@plt+0x5c90>
   16930:	bl	10c28 <__freading@plt>
   16934:	cmp	r0, #0
   16938:	bne	16974 <abort@plt+0x5c5c>
   1693c:	mov	r0, r4
   16940:	bl	169b4 <abort@plt+0x5c9c>
   16944:	cmp	r0, #0
   16948:	beq	169a4 <abort@plt+0x5c8c>
   1694c:	bl	10c70 <__errno_location@plt>
   16950:	mov	r5, r0
   16954:	mov	r0, r4
   16958:	ldr	r4, [r5]
   1695c:	bl	10cc4 <fclose@plt>
   16960:	cmp	r4, #0
   16964:	mvnne	r0, #0
   16968:	strne	r4, [r5]
   1696c:	add	sp, sp, #12
   16970:	pop	{r4, r5, pc}
   16974:	mov	r0, r4
   16978:	bl	10cac <fileno@plt>
   1697c:	mov	r3, #1
   16980:	str	r3, [sp]
   16984:	mov	r2, #0
   16988:	mov	r3, #0
   1698c:	bl	10bd4 <lseek64@plt>
   16990:	mvn	r3, #0
   16994:	mvn	r2, #0
   16998:	cmp	r1, r3
   1699c:	cmpeq	r0, r2
   169a0:	bne	1693c <abort@plt+0x5c24>
   169a4:	mov	r0, r4
   169a8:	add	sp, sp, #12
   169ac:	pop	{r4, r5, lr}
   169b0:	b	10cc4 <fclose@plt>
   169b4:	push	{r4, lr}
   169b8:	subs	r4, r0, #0
   169bc:	sub	sp, sp, #8
   169c0:	beq	169dc <abort@plt+0x5cc4>
   169c4:	bl	10c28 <__freading@plt>
   169c8:	cmp	r0, #0
   169cc:	beq	169dc <abort@plt+0x5cc4>
   169d0:	ldr	r3, [r4]
   169d4:	tst	r3, #256	; 0x100
   169d8:	bne	169ec <abort@plt+0x5cd4>
   169dc:	mov	r0, r4
   169e0:	add	sp, sp, #8
   169e4:	pop	{r4, lr}
   169e8:	b	10b44 <fflush@plt>
   169ec:	mov	r3, #1
   169f0:	str	r3, [sp]
   169f4:	mov	r2, #0
   169f8:	mov	r3, #0
   169fc:	mov	r0, r4
   16a00:	bl	16a6c <abort@plt+0x5d54>
   16a04:	mov	r0, r4
   16a08:	add	sp, sp, #8
   16a0c:	pop	{r4, lr}
   16a10:	b	10b44 <fflush@plt>
   16a14:	push	{r4, r5, lr}
   16a18:	sub	sp, sp, #12
   16a1c:	mov	r5, r0
   16a20:	bl	10c70 <__errno_location@plt>
   16a24:	mov	r2, #0
   16a28:	mov	r4, r0
   16a2c:	ldr	r3, [r0]
   16a30:	str	r2, [r4]
   16a34:	mov	r0, r5
   16a38:	str	r3, [sp]
   16a3c:	str	r3, [sp, #4]
   16a40:	bl	10b50 <free@plt>
   16a44:	ldr	r3, [r4]
   16a48:	add	r2, sp, #8
   16a4c:	cmp	r3, #0
   16a50:	moveq	r3, #4
   16a54:	movne	r3, #0
   16a58:	add	r3, r2, r3
   16a5c:	ldr	r3, [r3, #-8]
   16a60:	str	r3, [r4]
   16a64:	add	sp, sp, #12
   16a68:	pop	{r4, r5, pc}
   16a6c:	push	{r4, r5, r6, r7, r8, lr}
   16a70:	sub	sp, sp, #8
   16a74:	ldmib	r0, {ip, lr}
   16a78:	mov	r4, r0
   16a7c:	ldr	r5, [sp, #32]
   16a80:	cmp	lr, ip
   16a84:	beq	16a9c <abort@plt+0x5d84>
   16a88:	str	r5, [sp, #32]
   16a8c:	mov	r0, r4
   16a90:	add	sp, sp, #8
   16a94:	pop	{r4, r5, r6, r7, r8, lr}
   16a98:	b	10cd0 <fseeko64@plt>
   16a9c:	ldr	lr, [r0, #20]
   16aa0:	ldr	ip, [r0, #16]
   16aa4:	cmp	lr, ip
   16aa8:	bne	16a88 <abort@plt+0x5d70>
   16aac:	ldr	r8, [r0, #36]	; 0x24
   16ab0:	cmp	r8, #0
   16ab4:	bne	16a88 <abort@plt+0x5d70>
   16ab8:	mov	r6, r2
   16abc:	mov	r7, r3
   16ac0:	bl	10cac <fileno@plt>
   16ac4:	mov	r2, r6
   16ac8:	mov	r3, r7
   16acc:	str	r5, [sp]
   16ad0:	bl	10bd4 <lseek64@plt>
   16ad4:	mvn	r3, #0
   16ad8:	mvn	r2, #0
   16adc:	cmp	r1, r3
   16ae0:	cmpeq	r0, r2
   16ae4:	beq	16b04 <abort@plt+0x5dec>
   16ae8:	ldr	r3, [r4]
   16aec:	strd	r0, [r4, #80]	; 0x50
   16af0:	mov	r0, r8
   16af4:	bic	r3, r3, #16
   16af8:	str	r3, [r4]
   16afc:	add	sp, sp, #8
   16b00:	pop	{r4, r5, r6, r7, r8, pc}
   16b04:	mvn	r0, #0
   16b08:	b	16afc <abort@plt+0x5de4>
   16b0c:	push	{r4, lr}
   16b10:	mov	r0, #14
   16b14:	bl	10cf4 <nl_langinfo@plt>
   16b18:	cmp	r0, #0
   16b1c:	beq	16b34 <abort@plt+0x5e1c>
   16b20:	ldrb	r2, [r0]
   16b24:	ldr	r3, [pc, #16]	; 16b3c <abort@plt+0x5e24>
   16b28:	cmp	r2, #0
   16b2c:	moveq	r0, r3
   16b30:	pop	{r4, pc}
   16b34:	ldr	r0, [pc]	; 16b3c <abort@plt+0x5e24>
   16b38:	pop	{r4, pc}
   16b3c:	andeq	r7, r1, r8, lsr r9
   16b40:	push	{r4, r5, r6, r7, lr}
   16b44:	subs	r6, r0, #0
   16b48:	sub	sp, sp, #12
   16b4c:	addeq	r6, sp, #4
   16b50:	mov	r0, r6
   16b54:	mov	r5, r2
   16b58:	mov	r7, r1
   16b5c:	bl	10bf8 <mbrtowc@plt>
   16b60:	cmp	r5, #0
   16b64:	cmnne	r0, #3
   16b68:	mov	r4, r0
   16b6c:	bls	16b88 <abort@plt+0x5e70>
   16b70:	mov	r0, #0
   16b74:	bl	16be0 <abort@plt+0x5ec8>
   16b78:	cmp	r0, #0
   16b7c:	moveq	r4, #1
   16b80:	ldrbeq	r3, [r7]
   16b84:	streq	r3, [r6]
   16b88:	mov	r0, r4
   16b8c:	add	sp, sp, #12
   16b90:	pop	{r4, r5, r6, r7, pc}
   16b94:	push	{r4, r5, r6, lr}
   16b98:	subs	r4, r2, #0
   16b9c:	mov	r6, r0
   16ba0:	mov	r5, r1
   16ba4:	beq	16bd0 <abort@plt+0x5eb8>
   16ba8:	mov	r1, r4
   16bac:	mvn	r0, #0
   16bb0:	bl	16cd4 <abort@plt+0x5fbc>
   16bb4:	cmp	r0, r5
   16bb8:	bcs	16bd0 <abort@plt+0x5eb8>
   16bbc:	bl	10c70 <__errno_location@plt>
   16bc0:	mov	r3, #12
   16bc4:	str	r3, [r0]
   16bc8:	mov	r0, #0
   16bcc:	pop	{r4, r5, r6, pc}
   16bd0:	mul	r1, r5, r4
   16bd4:	mov	r0, r6
   16bd8:	pop	{r4, r5, r6, lr}
   16bdc:	b	1683c <abort@plt+0x5b24>
   16be0:	push	{lr}		; (str lr, [sp, #-4]!)
   16be4:	sub	sp, sp, #268	; 0x10c
   16be8:	add	r1, sp, #4
   16bec:	ldr	r2, [pc, #60]	; 16c30 <abort@plt+0x5f18>
   16bf0:	bl	16c3c <abort@plt+0x5f24>
   16bf4:	cmp	r0, #0
   16bf8:	movne	r0, #0
   16bfc:	bne	16c28 <abort@plt+0x5f10>
   16c00:	ldr	r1, [pc, #44]	; 16c34 <abort@plt+0x5f1c>
   16c04:	add	r0, sp, #4
   16c08:	bl	10b38 <strcmp@plt>
   16c0c:	cmp	r0, #0
   16c10:	beq	16c28 <abort@plt+0x5f10>
   16c14:	add	r0, sp, #4
   16c18:	ldr	r1, [pc, #24]	; 16c38 <abort@plt+0x5f20>
   16c1c:	bl	10b38 <strcmp@plt>
   16c20:	adds	r0, r0, #0
   16c24:	movne	r0, #1
   16c28:	add	sp, sp, #268	; 0x10c
   16c2c:	pop	{pc}		; (ldr pc, [sp], #4)
   16c30:	andeq	r0, r0, r1, lsl #2
   16c34:	andeq	r7, r1, r0, asr #18
   16c38:	andeq	r7, r1, r4, asr #18
   16c3c:	push	{r4, r5, r6, lr}
   16c40:	mov	r5, r1
   16c44:	mov	r1, #0
   16c48:	mov	r4, r2
   16c4c:	bl	10cdc <setlocale@plt>
   16c50:	subs	r6, r0, #0
   16c54:	beq	16cb0 <abort@plt+0x5f98>
   16c58:	bl	10c64 <strlen@plt>
   16c5c:	cmp	r4, r0
   16c60:	bhi	16c98 <abort@plt+0x5f80>
   16c64:	cmp	r4, #0
   16c68:	bne	16c74 <abort@plt+0x5f5c>
   16c6c:	mov	r0, #34	; 0x22
   16c70:	pop	{r4, r5, r6, pc}
   16c74:	sub	r4, r4, #1
   16c78:	mov	r1, r6
   16c7c:	mov	r2, r4
   16c80:	mov	r0, r5
   16c84:	bl	10b68 <memcpy@plt>
   16c88:	mov	r3, #0
   16c8c:	strb	r3, [r5, r4]
   16c90:	mov	r0, #34	; 0x22
   16c94:	pop	{r4, r5, r6, pc}
   16c98:	add	r2, r0, #1
   16c9c:	mov	r1, r6
   16ca0:	mov	r0, r5
   16ca4:	bl	10b68 <memcpy@plt>
   16ca8:	mov	r0, #0
   16cac:	pop	{r4, r5, r6, pc}
   16cb0:	cmp	r4, #0
   16cb4:	beq	16cc4 <abort@plt+0x5fac>
   16cb8:	strb	r6, [r5]
   16cbc:	mov	r0, #22
   16cc0:	pop	{r4, r5, r6, pc}
   16cc4:	mov	r0, #22
   16cc8:	pop	{r4, r5, r6, pc}
   16ccc:	mov	r1, #0
   16cd0:	b	10cdc <setlocale@plt>
   16cd4:	subs	r2, r1, #1
   16cd8:	bxeq	lr
   16cdc:	bcc	16eb4 <abort@plt+0x619c>
   16ce0:	cmp	r0, r1
   16ce4:	bls	16e98 <abort@plt+0x6180>
   16ce8:	tst	r1, r2
   16cec:	beq	16ea4 <abort@plt+0x618c>
   16cf0:	clz	r3, r0
   16cf4:	clz	r2, r1
   16cf8:	sub	r3, r2, r3
   16cfc:	rsbs	r3, r3, #31
   16d00:	addne	r3, r3, r3, lsl #1
   16d04:	mov	r2, #0
   16d08:	addne	pc, pc, r3, lsl #2
   16d0c:	nop			; (mov r0, r0)
   16d10:	cmp	r0, r1, lsl #31
   16d14:	adc	r2, r2, r2
   16d18:	subcs	r0, r0, r1, lsl #31
   16d1c:	cmp	r0, r1, lsl #30
   16d20:	adc	r2, r2, r2
   16d24:	subcs	r0, r0, r1, lsl #30
   16d28:	cmp	r0, r1, lsl #29
   16d2c:	adc	r2, r2, r2
   16d30:	subcs	r0, r0, r1, lsl #29
   16d34:	cmp	r0, r1, lsl #28
   16d38:	adc	r2, r2, r2
   16d3c:	subcs	r0, r0, r1, lsl #28
   16d40:	cmp	r0, r1, lsl #27
   16d44:	adc	r2, r2, r2
   16d48:	subcs	r0, r0, r1, lsl #27
   16d4c:	cmp	r0, r1, lsl #26
   16d50:	adc	r2, r2, r2
   16d54:	subcs	r0, r0, r1, lsl #26
   16d58:	cmp	r0, r1, lsl #25
   16d5c:	adc	r2, r2, r2
   16d60:	subcs	r0, r0, r1, lsl #25
   16d64:	cmp	r0, r1, lsl #24
   16d68:	adc	r2, r2, r2
   16d6c:	subcs	r0, r0, r1, lsl #24
   16d70:	cmp	r0, r1, lsl #23
   16d74:	adc	r2, r2, r2
   16d78:	subcs	r0, r0, r1, lsl #23
   16d7c:	cmp	r0, r1, lsl #22
   16d80:	adc	r2, r2, r2
   16d84:	subcs	r0, r0, r1, lsl #22
   16d88:	cmp	r0, r1, lsl #21
   16d8c:	adc	r2, r2, r2
   16d90:	subcs	r0, r0, r1, lsl #21
   16d94:	cmp	r0, r1, lsl #20
   16d98:	adc	r2, r2, r2
   16d9c:	subcs	r0, r0, r1, lsl #20
   16da0:	cmp	r0, r1, lsl #19
   16da4:	adc	r2, r2, r2
   16da8:	subcs	r0, r0, r1, lsl #19
   16dac:	cmp	r0, r1, lsl #18
   16db0:	adc	r2, r2, r2
   16db4:	subcs	r0, r0, r1, lsl #18
   16db8:	cmp	r0, r1, lsl #17
   16dbc:	adc	r2, r2, r2
   16dc0:	subcs	r0, r0, r1, lsl #17
   16dc4:	cmp	r0, r1, lsl #16
   16dc8:	adc	r2, r2, r2
   16dcc:	subcs	r0, r0, r1, lsl #16
   16dd0:	cmp	r0, r1, lsl #15
   16dd4:	adc	r2, r2, r2
   16dd8:	subcs	r0, r0, r1, lsl #15
   16ddc:	cmp	r0, r1, lsl #14
   16de0:	adc	r2, r2, r2
   16de4:	subcs	r0, r0, r1, lsl #14
   16de8:	cmp	r0, r1, lsl #13
   16dec:	adc	r2, r2, r2
   16df0:	subcs	r0, r0, r1, lsl #13
   16df4:	cmp	r0, r1, lsl #12
   16df8:	adc	r2, r2, r2
   16dfc:	subcs	r0, r0, r1, lsl #12
   16e00:	cmp	r0, r1, lsl #11
   16e04:	adc	r2, r2, r2
   16e08:	subcs	r0, r0, r1, lsl #11
   16e0c:	cmp	r0, r1, lsl #10
   16e10:	adc	r2, r2, r2
   16e14:	subcs	r0, r0, r1, lsl #10
   16e18:	cmp	r0, r1, lsl #9
   16e1c:	adc	r2, r2, r2
   16e20:	subcs	r0, r0, r1, lsl #9
   16e24:	cmp	r0, r1, lsl #8
   16e28:	adc	r2, r2, r2
   16e2c:	subcs	r0, r0, r1, lsl #8
   16e30:	cmp	r0, r1, lsl #7
   16e34:	adc	r2, r2, r2
   16e38:	subcs	r0, r0, r1, lsl #7
   16e3c:	cmp	r0, r1, lsl #6
   16e40:	adc	r2, r2, r2
   16e44:	subcs	r0, r0, r1, lsl #6
   16e48:	cmp	r0, r1, lsl #5
   16e4c:	adc	r2, r2, r2
   16e50:	subcs	r0, r0, r1, lsl #5
   16e54:	cmp	r0, r1, lsl #4
   16e58:	adc	r2, r2, r2
   16e5c:	subcs	r0, r0, r1, lsl #4
   16e60:	cmp	r0, r1, lsl #3
   16e64:	adc	r2, r2, r2
   16e68:	subcs	r0, r0, r1, lsl #3
   16e6c:	cmp	r0, r1, lsl #2
   16e70:	adc	r2, r2, r2
   16e74:	subcs	r0, r0, r1, lsl #2
   16e78:	cmp	r0, r1, lsl #1
   16e7c:	adc	r2, r2, r2
   16e80:	subcs	r0, r0, r1, lsl #1
   16e84:	cmp	r0, r1
   16e88:	adc	r2, r2, r2
   16e8c:	subcs	r0, r0, r1
   16e90:	mov	r0, r2
   16e94:	bx	lr
   16e98:	moveq	r0, #1
   16e9c:	movne	r0, #0
   16ea0:	bx	lr
   16ea4:	clz	r2, r1
   16ea8:	rsb	r2, r2, #31
   16eac:	lsr	r0, r0, r2
   16eb0:	bx	lr
   16eb4:	cmp	r0, #0
   16eb8:	mvnne	r0, #0
   16ebc:	b	17120 <abort@plt+0x6408>
   16ec0:	cmp	r1, #0
   16ec4:	beq	16eb4 <abort@plt+0x619c>
   16ec8:	push	{r0, r1, lr}
   16ecc:	bl	16cd4 <abort@plt+0x5fbc>
   16ed0:	pop	{r1, r2, lr}
   16ed4:	mul	r3, r2, r0
   16ed8:	sub	r1, r1, r3
   16edc:	bx	lr
   16ee0:	cmp	r1, #0
   16ee4:	beq	170f0 <abort@plt+0x63d8>
   16ee8:	eor	ip, r0, r1
   16eec:	rsbmi	r1, r1, #0
   16ef0:	subs	r2, r1, #1
   16ef4:	beq	170bc <abort@plt+0x63a4>
   16ef8:	movs	r3, r0
   16efc:	rsbmi	r3, r0, #0
   16f00:	cmp	r3, r1
   16f04:	bls	170c8 <abort@plt+0x63b0>
   16f08:	tst	r1, r2
   16f0c:	beq	170d8 <abort@plt+0x63c0>
   16f10:	clz	r2, r3
   16f14:	clz	r0, r1
   16f18:	sub	r2, r0, r2
   16f1c:	rsbs	r2, r2, #31
   16f20:	addne	r2, r2, r2, lsl #1
   16f24:	mov	r0, #0
   16f28:	addne	pc, pc, r2, lsl #2
   16f2c:	nop			; (mov r0, r0)
   16f30:	cmp	r3, r1, lsl #31
   16f34:	adc	r0, r0, r0
   16f38:	subcs	r3, r3, r1, lsl #31
   16f3c:	cmp	r3, r1, lsl #30
   16f40:	adc	r0, r0, r0
   16f44:	subcs	r3, r3, r1, lsl #30
   16f48:	cmp	r3, r1, lsl #29
   16f4c:	adc	r0, r0, r0
   16f50:	subcs	r3, r3, r1, lsl #29
   16f54:	cmp	r3, r1, lsl #28
   16f58:	adc	r0, r0, r0
   16f5c:	subcs	r3, r3, r1, lsl #28
   16f60:	cmp	r3, r1, lsl #27
   16f64:	adc	r0, r0, r0
   16f68:	subcs	r3, r3, r1, lsl #27
   16f6c:	cmp	r3, r1, lsl #26
   16f70:	adc	r0, r0, r0
   16f74:	subcs	r3, r3, r1, lsl #26
   16f78:	cmp	r3, r1, lsl #25
   16f7c:	adc	r0, r0, r0
   16f80:	subcs	r3, r3, r1, lsl #25
   16f84:	cmp	r3, r1, lsl #24
   16f88:	adc	r0, r0, r0
   16f8c:	subcs	r3, r3, r1, lsl #24
   16f90:	cmp	r3, r1, lsl #23
   16f94:	adc	r0, r0, r0
   16f98:	subcs	r3, r3, r1, lsl #23
   16f9c:	cmp	r3, r1, lsl #22
   16fa0:	adc	r0, r0, r0
   16fa4:	subcs	r3, r3, r1, lsl #22
   16fa8:	cmp	r3, r1, lsl #21
   16fac:	adc	r0, r0, r0
   16fb0:	subcs	r3, r3, r1, lsl #21
   16fb4:	cmp	r3, r1, lsl #20
   16fb8:	adc	r0, r0, r0
   16fbc:	subcs	r3, r3, r1, lsl #20
   16fc0:	cmp	r3, r1, lsl #19
   16fc4:	adc	r0, r0, r0
   16fc8:	subcs	r3, r3, r1, lsl #19
   16fcc:	cmp	r3, r1, lsl #18
   16fd0:	adc	r0, r0, r0
   16fd4:	subcs	r3, r3, r1, lsl #18
   16fd8:	cmp	r3, r1, lsl #17
   16fdc:	adc	r0, r0, r0
   16fe0:	subcs	r3, r3, r1, lsl #17
   16fe4:	cmp	r3, r1, lsl #16
   16fe8:	adc	r0, r0, r0
   16fec:	subcs	r3, r3, r1, lsl #16
   16ff0:	cmp	r3, r1, lsl #15
   16ff4:	adc	r0, r0, r0
   16ff8:	subcs	r3, r3, r1, lsl #15
   16ffc:	cmp	r3, r1, lsl #14
   17000:	adc	r0, r0, r0
   17004:	subcs	r3, r3, r1, lsl #14
   17008:	cmp	r3, r1, lsl #13
   1700c:	adc	r0, r0, r0
   17010:	subcs	r3, r3, r1, lsl #13
   17014:	cmp	r3, r1, lsl #12
   17018:	adc	r0, r0, r0
   1701c:	subcs	r3, r3, r1, lsl #12
   17020:	cmp	r3, r1, lsl #11
   17024:	adc	r0, r0, r0
   17028:	subcs	r3, r3, r1, lsl #11
   1702c:	cmp	r3, r1, lsl #10
   17030:	adc	r0, r0, r0
   17034:	subcs	r3, r3, r1, lsl #10
   17038:	cmp	r3, r1, lsl #9
   1703c:	adc	r0, r0, r0
   17040:	subcs	r3, r3, r1, lsl #9
   17044:	cmp	r3, r1, lsl #8
   17048:	adc	r0, r0, r0
   1704c:	subcs	r3, r3, r1, lsl #8
   17050:	cmp	r3, r1, lsl #7
   17054:	adc	r0, r0, r0
   17058:	subcs	r3, r3, r1, lsl #7
   1705c:	cmp	r3, r1, lsl #6
   17060:	adc	r0, r0, r0
   17064:	subcs	r3, r3, r1, lsl #6
   17068:	cmp	r3, r1, lsl #5
   1706c:	adc	r0, r0, r0
   17070:	subcs	r3, r3, r1, lsl #5
   17074:	cmp	r3, r1, lsl #4
   17078:	adc	r0, r0, r0
   1707c:	subcs	r3, r3, r1, lsl #4
   17080:	cmp	r3, r1, lsl #3
   17084:	adc	r0, r0, r0
   17088:	subcs	r3, r3, r1, lsl #3
   1708c:	cmp	r3, r1, lsl #2
   17090:	adc	r0, r0, r0
   17094:	subcs	r3, r3, r1, lsl #2
   17098:	cmp	r3, r1, lsl #1
   1709c:	adc	r0, r0, r0
   170a0:	subcs	r3, r3, r1, lsl #1
   170a4:	cmp	r3, r1
   170a8:	adc	r0, r0, r0
   170ac:	subcs	r3, r3, r1
   170b0:	cmp	ip, #0
   170b4:	rsbmi	r0, r0, #0
   170b8:	bx	lr
   170bc:	teq	ip, r0
   170c0:	rsbmi	r0, r0, #0
   170c4:	bx	lr
   170c8:	movcc	r0, #0
   170cc:	asreq	r0, ip, #31
   170d0:	orreq	r0, r0, #1
   170d4:	bx	lr
   170d8:	clz	r2, r1
   170dc:	rsb	r2, r2, #31
   170e0:	cmp	ip, #0
   170e4:	lsr	r0, r3, r2
   170e8:	rsbmi	r0, r0, #0
   170ec:	bx	lr
   170f0:	cmp	r0, #0
   170f4:	mvngt	r0, #-2147483648	; 0x80000000
   170f8:	movlt	r0, #-2147483648	; 0x80000000
   170fc:	b	17120 <abort@plt+0x6408>
   17100:	cmp	r1, #0
   17104:	beq	170f0 <abort@plt+0x63d8>
   17108:	push	{r0, r1, lr}
   1710c:	bl	16ee8 <abort@plt+0x61d0>
   17110:	pop	{r1, r2, lr}
   17114:	mul	r3, r2, r0
   17118:	sub	r1, r1, r3
   1711c:	bx	lr
   17120:	push	{r1, lr}
   17124:	mov	r0, #8
   17128:	bl	10b2c <raise@plt>
   1712c:	pop	{r1, pc}
   17130:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   17134:	mov	r7, r0
   17138:	ldr	r6, [pc, #72]	; 17188 <abort@plt+0x6470>
   1713c:	ldr	r5, [pc, #72]	; 1718c <abort@plt+0x6474>
   17140:	add	r6, pc, r6
   17144:	add	r5, pc, r5
   17148:	sub	r6, r6, r5
   1714c:	mov	r8, r1
   17150:	mov	r9, r2
   17154:	bl	10af4 <calloc@plt-0x20>
   17158:	asrs	r6, r6, #2
   1715c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   17160:	mov	r4, #0
   17164:	add	r4, r4, #1
   17168:	ldr	r3, [r5], #4
   1716c:	mov	r2, r9
   17170:	mov	r1, r8
   17174:	mov	r0, r7
   17178:	blx	r3
   1717c:	cmp	r6, r4
   17180:	bne	17164 <abort@plt+0x644c>
   17184:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17188:	andeq	r0, r1, r8, asr #27
   1718c:	andeq	r0, r1, r0, asr #27
   17190:	bx	lr
   17194:	ldr	r3, [pc, #12]	; 171a8 <abort@plt+0x6490>
   17198:	mov	r1, #0
   1719c:	add	r3, pc, r3
   171a0:	ldr	r2, [r3]
   171a4:	b	10c7c <__cxa_atexit@plt>
   171a8:	andeq	r0, r1, r0, lsr #30

Disassembly of section .fini:

000171ac <.fini>:
   171ac:	push	{r3, lr}
   171b0:	pop	{r3, pc}
