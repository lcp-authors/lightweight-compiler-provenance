
../repos/charybdis/modules/.libs/m_alias.so:     file format elf32-littlearm


Disassembly of section .init:

00000760 <_init>:
 760:	push	{r3, lr}
 764:	bl	894 <call_weak_fn>
 768:	pop	{r3, pc}

Disassembly of section .plt:

0000076c <.plt>:
 76c:	push	{lr}		; (str lr, [sp, #-4]!)
 770:	ldr	lr, [pc, #4]	; 77c <.plt+0x10>
 774:	add	lr, pc, lr
 778:	ldr	pc, [lr, #8]!
 77c:	.word	0x00011884

00000780 <calloc@plt>:
 780:	add	ip, pc, #0, 12
 784:	add	ip, ip, #69632	; 0x11000
 788:	ldr	pc, [ip, #2180]!	; 0x884

0000078c <mod_del_cmd@plt>:
 78c:	add	ip, pc, #0, 12
 790:	add	ip, ip, #69632	; 0x11000
 794:	ldr	pc, [ip, #2172]!	; 0x87c

00000798 <__cxa_finalize@plt>:
 798:	add	ip, pc, #0, 12
 79c:	add	ip, ip, #69632	; 0x11000
 7a0:	ldr	pc, [ip, #2164]!	; 0x874

000007a4 <sendto_one@plt>:
 7a4:	add	ip, pc, #0, 12
 7a8:	add	ip, ip, #69632	; 0x11000
 7ac:	ldr	pc, [ip, #2156]!	; 0x86c

000007b0 <free@plt>:
 7b0:	add	ip, pc, #0, 12
 7b4:	add	ip, ip, #69632	; 0x11000
 7b8:	ldr	pc, [ip, #2148]!	; 0x864

000007bc <memcpy@plt>:
 7bc:	add	ip, pc, #0, 12
 7c0:	add	ip, ip, #69632	; 0x11000
 7c4:	ldr	pc, [ip, #2140]!	; 0x85c

000007c8 <rb_outofmemory@plt>:
 7c8:	add	ip, pc, #0, 12
 7cc:	add	ip, ip, #69632	; 0x11000
 7d0:	ldr	pc, [ip, #2132]!	; 0x854

000007d4 <rb_free_rb_dlink_node@plt>:
 7d4:	add	ip, pc, #0, 12
 7d8:	add	ip, ip, #69632	; 0x11000
 7dc:	ldr	pc, [ip, #2124]!	; 0x84c

000007e0 <rb_dictionary_foreach_start@plt>:
 7e0:	add	ip, pc, #0, 12
 7e4:	add	ip, ip, #69632	; 0x11000
 7e8:	ldr	pc, [ip, #2116]!	; 0x844

000007ec <msgbuf_reconstruct_tail@plt>:
 7ec:	add	ip, pc, #0, 12
 7f0:	add	ip, ip, #69632	; 0x11000
 7f4:	ldr	pc, [ip, #2108]!	; 0x83c

000007f8 <__gmon_start__@plt>:
 7f8:	add	ip, pc, #0, 12
 7fc:	add	ip, ip, #69632	; 0x11000
 800:	ldr	pc, [ip, #2100]!	; 0x834

00000804 <rb_make_rb_dlink_node@plt>:
 804:	add	ip, pc, #0, 12
 808:	add	ip, ip, #69632	; 0x11000
 80c:	ldr	pc, [ip, #2092]!	; 0x82c

00000810 <sendto_one_numeric@plt>:
 810:	add	ip, pc, #0, 12
 814:	add	ip, ip, #69632	; 0x11000
 818:	ldr	pc, [ip, #2084]!	; 0x824

0000081c <strlen@plt>:
 81c:	add	ip, pc, #0, 12
 820:	add	ip, ip, #69632	; 0x11000
 824:	ldr	pc, [ip, #2076]!	; 0x81c

00000828 <strchr@plt>:
 828:	add	ip, pc, #0, 12
 82c:	add	ip, ip, #69632	; 0x11000
 830:	ldr	pc, [ip, #2068]!	; 0x814

00000834 <find_server@plt>:
 834:	add	ip, pc, #0, 12
 838:	add	ip, ip, #69632	; 0x11000
 83c:	ldr	pc, [ip, #2060]!	; 0x80c

00000840 <rb_dictionary_foreach_cur@plt>:
 840:	add	ip, pc, #0, 12
 844:	add	ip, ip, #69632	; 0x11000
 848:	ldr	pc, [ip, #2052]!	; 0x804

0000084c <find_named_person@plt>:
 84c:	add	ip, pc, #0, 12
 850:	add	ip, ip, #69632	; 0x11000
 854:	ldr	pc, [ip, #2044]!	; 0x7fc

00000858 <flood_endgrace@plt>:
 858:	add	ip, pc, #0, 12
 85c:	add	ip, ip, #69632	; 0x11000
 860:	ldr	pc, [ip, #2036]!	; 0x7f4

00000864 <rb_dictionary_foreach_next@plt>:
 864:	add	ip, pc, #0, 12
 868:	add	ip, ip, #69632	; 0x11000
 86c:	ldr	pc, [ip, #2028]!	; 0x7ec

00000870 <mod_add_cmd@plt>:
 870:	add	ip, pc, #0, 12
 874:	add	ip, ip, #69632	; 0x11000
 878:	ldr	pc, [ip, #2020]!	; 0x7e4

0000087c <rb_dictionary_retrieve@plt>:
 87c:	add	ip, pc, #0, 12
 880:	add	ip, ip, #69632	; 0x11000
 884:	ldr	pc, [ip, #2012]!	; 0x7dc

00000888 <__assert_fail@plt>:
 888:	add	ip, pc, #0, 12
 88c:	add	ip, ip, #69632	; 0x11000
 890:	ldr	pc, [ip, #2004]!	; 0x7d4

Disassembly of section .text:

00000894 <call_weak_fn>:
     894:	ldr	r3, [pc, #20]	; 8b0 <call_weak_fn+0x1c>
     898:	ldr	r2, [pc, #20]	; 8b4 <call_weak_fn+0x20>
     89c:	add	r3, pc, r3
     8a0:	ldr	r2, [r3, r2]
     8a4:	cmp	r2, #0
     8a8:	bxeq	lr
     8ac:	b	7f8 <__gmon_start__@plt>
     8b0:	.word	0x0001175c
     8b4:	.word	0x00000074

000008b8 <deregister_tm_clones>:
     8b8:	ldr	r3, [pc, #52]	; 8f4 <deregister_tm_clones+0x3c>
     8bc:	ldr	r0, [pc, #52]	; 8f8 <deregister_tm_clones+0x40>
     8c0:	add	r3, pc, r3
     8c4:	add	r0, pc, r0
     8c8:	add	r3, r3, #3
     8cc:	sub	r3, r3, r0
     8d0:	cmp	r3, #6
     8d4:	ldr	r3, [pc, #32]	; 8fc <deregister_tm_clones+0x44>
     8d8:	add	r3, pc, r3
     8dc:	bxls	lr
     8e0:	ldr	r2, [pc, #24]	; 900 <deregister_tm_clones+0x48>
     8e4:	ldr	r3, [r3, r2]
     8e8:	cmp	r3, #0
     8ec:	bxeq	lr
     8f0:	bx	r3
     8f4:	.word	0x00011800
     8f8:	.word	0x000117fc
     8fc:	.word	0x00011720
     900:	.word	0x0000006c

00000904 <register_tm_clones>:
     904:	ldr	r1, [pc, #56]	; 944 <register_tm_clones+0x40>
     908:	ldr	r0, [pc, #56]	; 948 <register_tm_clones+0x44>
     90c:	add	r1, pc, r1
     910:	add	r0, pc, r0
     914:	sub	r1, r1, r0
     918:	ldr	r3, [pc, #44]	; 94c <register_tm_clones+0x48>
     91c:	asr	r1, r1, #2
     920:	add	r3, pc, r3
     924:	add	r1, r1, r1, lsr #31
     928:	asrs	r1, r1, #1
     92c:	bxeq	lr
     930:	ldr	r2, [pc, #24]	; 950 <register_tm_clones+0x4c>
     934:	ldr	r3, [r3, r2]
     938:	cmp	r3, #0
     93c:	bxeq	lr
     940:	bx	r3
     944:	.word	0x000117b4
     948:	.word	0x000117b0
     94c:	.word	0x000116d8
     950:	.word	0x0000007c

00000954 <__do_global_dtors_aux>:
     954:	ldr	r3, [pc, #76]	; 9a8 <__do_global_dtors_aux+0x54>
     958:	ldr	r2, [pc, #76]	; 9ac <__do_global_dtors_aux+0x58>
     95c:	add	r3, pc, r3
     960:	add	r2, pc, r2
     964:	ldrb	r3, [r3]
     968:	cmp	r3, #0
     96c:	bxne	lr
     970:	ldr	r3, [pc, #56]	; 9b0 <__do_global_dtors_aux+0x5c>
     974:	push	{r4, lr}
     978:	ldr	r3, [r2, r3]
     97c:	cmp	r3, #0
     980:	beq	990 <__do_global_dtors_aux+0x3c>
     984:	ldr	r3, [pc, #40]	; 9b4 <__do_global_dtors_aux+0x60>
     988:	ldr	r0, [pc, r3]
     98c:	bl	798 <__cxa_finalize@plt>
     990:	bl	8b8 <deregister_tm_clones>
     994:	ldr	r3, [pc, #28]	; 9b8 <__do_global_dtors_aux+0x64>
     998:	mov	r2, #1
     99c:	add	r3, pc, r3
     9a0:	strb	r2, [r3]
     9a4:	pop	{r4, pc}
     9a8:	.word	0x00011764
     9ac:	.word	0x00011698
     9b0:	.word	0x00000068
     9b4:	.word	0x000116f4
     9b8:	.word	0x00011724

000009bc <frame_dummy>:
     9bc:	ldr	r0, [pc, #56]	; 9fc <frame_dummy+0x40>
     9c0:	ldr	r3, [pc, #56]	; a00 <frame_dummy+0x44>
     9c4:	add	r0, pc, r0
     9c8:	ldr	r2, [r0]
     9cc:	add	r3, pc, r3
     9d0:	cmp	r2, #0
     9d4:	bne	9dc <frame_dummy+0x20>
     9d8:	b	904 <register_tm_clones>
     9dc:	ldr	r2, [pc, #32]	; a04 <frame_dummy+0x48>
     9e0:	ldr	r3, [r3, r2]
     9e4:	cmp	r3, #0
     9e8:	beq	9d8 <frame_dummy+0x1c>
     9ec:	push	{r4, lr}
     9f0:	blx	r3
     9f4:	pop	{r4, lr}
     9f8:	b	904 <register_tm_clones>
     9fc:	.word	0x00011500
     a00:	.word	0x0001162c
     a04:	.word	0x00000078

00000a08 <m_alias>:
     a08:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
     a0c:	mov	r6, r0
     a10:	ldr	r5, [pc, #452]	; bdc <m_alias+0x1d4>
     a14:	ldr	r3, [pc, #452]	; be0 <m_alias+0x1d8>
     a18:	add	r5, pc, r5
     a1c:	mov	r4, r1
     a20:	ldr	r3, [r5, r3]
     a24:	ldr	r1, [r0, #192]	; 0xc0
     a28:	ldr	r8, [sp, #32]
     a2c:	ldr	r0, [r3]
     a30:	bl	87c <rb_dictionary_retrieve@plt>
     a34:	subs	r7, r0, #0
     a38:	beq	b5c <m_alias+0x154>
     a3c:	ldrd	r2, [r4, #64]	; 0x40
     a40:	mov	r3, #0
     a44:	and	r2, r2, #256	; 0x100
     a48:	orrs	r3, r2, r3
     a4c:	beq	ae4 <m_alias+0xdc>
     a50:	ldr	r9, [r7, #4]
     a54:	mov	r1, #64	; 0x40
     a58:	mov	r0, r9
     a5c:	bl	828 <strchr@plt>
     a60:	subs	sl, r0, #0
     a64:	beq	b24 <m_alias+0x11c>
     a68:	add	r1, sl, #1
     a6c:	mov	r0, #0
     a70:	bl	834 <find_server@plt>
     a74:	subs	r9, r0, #0
     a78:	beq	b40 <m_alias+0x138>
     a7c:	ldrh	r3, [r9, #80]	; 0x50
     a80:	cmp	r3, #4
     a84:	beq	b40 <m_alias+0x138>
     a88:	mov	r1, #1
     a8c:	mov	r0, r6
     a90:	bl	7ec <msgbuf_reconstruct_tail@plt>
     a94:	ldr	r1, [r8, #4]
     a98:	cmp	r1, #0
     a9c:	beq	b00 <m_alias+0xf8>
     aa0:	ldrb	r3, [r1]
     aa4:	cmp	r3, #0
     aa8:	beq	b00 <m_alias+0xf8>
     aac:	ldr	r3, [r9, #36]	; 0x24
     ab0:	ldrh	r2, [r3, #80]	; 0x50
     ab4:	cmp	r2, #32
     ab8:	beq	ba0 <m_alias+0x198>
     abc:	cmp	sl, #0
     ac0:	add	r2, r4, #88	; 0x58
     ac4:	beq	bd4 <m_alias+0x1cc>
     ac8:	ldr	r3, [r7, #4]
     acc:	str	r1, [sp, #32]
     ad0:	ldr	r1, [pc, #268]	; be4 <m_alias+0x1dc>
     ad4:	mov	r0, r9
     ad8:	add	r1, pc, r1
     adc:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
     ae0:	b	7a4 <sendto_one@plt>
     ae4:	ldr	r3, [r4, #432]	; 0x1b0
     ae8:	ldr	r3, [r3, #116]	; 0x74
     aec:	cmp	r3, #20
     af0:	bls	a50 <m_alias+0x48>
     af4:	mov	r0, r4
     af8:	bl	858 <flood_endgrace@plt>
     afc:	b	a50 <m_alias+0x48>
     b00:	ldr	r2, [pc, #224]	; be8 <m_alias+0x1e0>
     b04:	ldr	r1, [pc, #224]	; bec <m_alias+0x1e4>
     b08:	add	r3, r9, #88	; 0x58
     b0c:	ldr	r2, [r5, r2]
     b10:	mov	r0, r4
     b14:	add	r1, pc, r1
     b18:	add	r2, r2, #88	; 0x58
     b1c:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
     b20:	b	7a4 <sendto_one@plt>
     b24:	mov	r0, r9
     b28:	bl	84c <find_named_person@plt>
     b2c:	subs	r9, r0, #0
     b30:	beq	b40 <m_alias+0x138>
     b34:	ldr	r3, [r9, #56]	; 0x38
     b38:	tst	r3, #64	; 0x40
     b3c:	bne	a88 <m_alias+0x80>
     b40:	ldr	r2, [pc, #168]	; bf0 <m_alias+0x1e8>
     b44:	ldr	r3, [r7, #4]
     b48:	mov	r0, r4
     b4c:	add	r2, pc, r2
     b50:	mov	r1, #440	; 0x1b8
     b54:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
     b58:	b	810 <sendto_one_numeric@plt>
     b5c:	ldrh	r3, [r4, #80]	; 0x50
     b60:	cmp	r3, #64	; 0x40
     b64:	popne	{r4, r5, r6, r7, r8, r9, sl, pc}
     b68:	ldr	r3, [r4, #24]
     b6c:	cmp	r3, #0
     b70:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
     b74:	ldr	r2, [pc, #108]	; be8 <m_alias+0x1e0>
     b78:	ldr	r1, [r6, #192]	; 0xc0
     b7c:	add	r3, r4, #88	; 0x58
     b80:	ldr	r2, [r5, r2]
     b84:	str	r1, [sp, #32]
     b88:	ldr	r1, [pc, #100]	; bf4 <m_alias+0x1ec>
     b8c:	mov	r0, r4
     b90:	add	r2, r2, #88	; 0x58
     b94:	add	r1, pc, r1
     b98:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
     b9c:	b	7a4 <sendto_one@plt>
     ba0:	ldrb	r3, [r3, #396]	; 0x18c
     ba4:	cmp	r3, #0
     ba8:	beq	abc <m_alias+0xb4>
     bac:	ldrb	r3, [r4, #396]	; 0x18c
     bb0:	cmp	r3, #0
     bb4:	addne	r2, r4, #396	; 0x18c
     bb8:	addeq	r2, r4, #88	; 0x58
     bbc:	cmp	sl, #0
     bc0:	bne	ac8 <m_alias+0xc0>
     bc4:	ldrb	r3, [r9, #396]	; 0x18c
     bc8:	cmp	r3, #0
     bcc:	addne	r3, r9, #396	; 0x18c
     bd0:	bne	acc <m_alias+0xc4>
     bd4:	add	r3, r9, #88	; 0x58
     bd8:	b	acc <m_alias+0xc4>
     bdc:	.word	0x000115e0
     be0:	.word	0x00000070
     be4:	.word	0x000005a8
     be8:	.word	0x00000080
     bec:	.word	0x00000550
     bf0:	.word	0x00000548
     bf4:	.word	0x000004b0

00000bf8 <reload_aliases>:
     bf8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
     bfc:	sub	sp, sp, #20
     c00:	ldr	r6, [pc, #460]	; dd4 <reload_aliases+0x1dc>
     c04:	ldr	r9, [pc, #460]	; dd8 <reload_aliases+0x1e0>
     c08:	add	r6, pc, r6
     c0c:	add	r9, pc, r9
     c10:	ldr	r4, [r6]
     c14:	cmp	r4, #0
     c18:	beq	c9c <reload_aliases+0xa4>
     c1c:	ldr	sl, [pc, #440]	; ddc <reload_aliases+0x1e4>
     c20:	ldr	r8, [pc, #440]	; de0 <reload_aliases+0x1e8>
     c24:	ldr	r5, [r4, #8]
     c28:	add	sl, pc, sl
     c2c:	add	r8, pc, r8
     c30:	mov	r7, #0
     c34:	b	c40 <reload_aliases+0x48>
     c38:	mov	r4, r5
     c3c:	ldr	r5, [r5, #8]
     c40:	ldr	r0, [r4]
     c44:	bl	78c <mod_del_cmd@plt>
     c48:	ldr	r0, [r4]
     c4c:	cmp	r0, #0
     c50:	beq	c58 <reload_aliases+0x60>
     c54:	bl	7b0 <free@plt>
     c58:	ldmib	r4, {r2, r3}
     c5c:	mov	r0, r4
     c60:	cmp	r3, #0
     c64:	strne	r2, [r3, #4]
     c68:	ldrne	r2, [r4, #4]
     c6c:	streq	r2, [sl, #4]
     c70:	cmp	r2, #0
     c74:	strne	r3, [r2, #8]
     c78:	streq	r3, [r8]
     c7c:	ldr	r3, [r6, #8]
     c80:	str	r7, [r4, #4]
     c84:	str	r7, [r4, #8]
     c88:	sub	r3, r3, #1
     c8c:	str	r3, [r6, #8]
     c90:	bl	7d4 <rb_free_rb_dlink_node@plt>
     c94:	cmp	r5, #0
     c98:	bne	c38 <reload_aliases+0x40>
     c9c:	ldr	r3, [pc, #320]	; de4 <reload_aliases+0x1ec>
     ca0:	add	r8, sp, #8
     ca4:	ldr	r6, [pc, #316]	; de8 <reload_aliases+0x1f0>
     ca8:	ldr	r7, [r9, r3]
     cac:	ldr	r3, [pc, #312]	; dec <reload_aliases+0x1f4>
     cb0:	ldr	r9, [pc, #312]	; df0 <reload_aliases+0x1f8>
     cb4:	add	r3, pc, r3
     cb8:	mov	r1, r8
     cbc:	ldr	r0, [r7]
     cc0:	str	r3, [sp, #4]
     cc4:	mov	sl, #1
     cc8:	bl	7e0 <rb_dictionary_foreach_start@plt>
     ccc:	add	r9, pc, r9
     cd0:	add	r6, pc, r6
     cd4:	b	cf4 <reload_aliases+0xfc>
     cd8:	ldr	r2, [r6, #8]
     cdc:	mov	r1, r8
     ce0:	add	r2, r2, #1
     ce4:	ldr	r0, [r7]
     ce8:	str	r3, [r6]
     cec:	str	r2, [r6, #8]
     cf0:	bl	864 <rb_dictionary_foreach_next@plt>
     cf4:	mov	r1, r8
     cf8:	ldr	r0, [r7]
     cfc:	bl	840 <rb_dictionary_foreach_cur@plt>
     d00:	subs	r3, r0, #0
     d04:	beq	dac <reload_aliases+0x1b4>
     d08:	ldr	r5, [r3]
     d0c:	mov	r0, r5
     d10:	bl	81c <strlen@plt>
     d14:	add	r1, r0, #69	; 0x45
     d18:	mov	fp, r0
     d1c:	mov	r0, sl
     d20:	bl	780 <calloc@plt>
     d24:	subs	r4, r0, #0
     d28:	beq	da8 <reload_aliases+0x1b0>
     d2c:	add	r3, r4, #68	; 0x44
     d30:	mov	r1, r5
     d34:	add	r2, fp, #1
     d38:	mov	r0, r3
     d3c:	mov	r5, r3
     d40:	bl	7bc <memcpy@plt>
     d44:	ldr	lr, [sp, #4]
     d48:	mov	ip, r4
     d4c:	ldm	lr!, {r0, r1, r2, r3}
     d50:	str	r5, [ip], #20
     d54:	stmia	ip!, {r0, r1, r2, r3}
     d58:	ldm	lr!, {r0, r1, r2, r3}
     d5c:	stmia	ip!, {r0, r1, r2, r3}
     d60:	ldm	lr, {r0, r1, r2, r3}
     d64:	stm	ip, {r0, r1, r2, r3}
     d68:	mov	r0, r4
     d6c:	bl	870 <mod_add_cmd@plt>
     d70:	bl	804 <rb_make_rb_dlink_node@plt>
     d74:	subs	r3, r0, #0
     d78:	beq	db4 <reload_aliases+0x1bc>
     d7c:	ldr	r2, [r9]
     d80:	mov	r1, #0
     d84:	cmp	r2, #0
     d88:	str	r4, [r3]
     d8c:	stmib	r3, {r1, r2}
     d90:	strne	r3, [r2, #4]
     d94:	bne	cd8 <reload_aliases+0xe0>
     d98:	ldr	r2, [r9, #4]
     d9c:	cmp	r2, #0
     da0:	streq	r3, [r9, #4]
     da4:	b	cd8 <reload_aliases+0xe0>
     da8:	bl	7c8 <rb_outofmemory@plt>
     dac:	add	sp, sp, #20
     db0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
     db4:	ldr	r3, [pc, #56]	; df4 <reload_aliases+0x1fc>
     db8:	ldr	r1, [pc, #56]	; df8 <reload_aliases+0x200>
     dbc:	ldr	r0, [pc, #56]	; dfc <reload_aliases+0x204>
     dc0:	add	r3, pc, r3
     dc4:	mov	r2, #144	; 0x90
     dc8:	add	r1, pc, r1
     dcc:	add	r0, pc, r0
     dd0:	bl	888 <__assert_fail@plt>
     dd4:	.word	0x000114bc
     dd8:	.word	0x000113ec
     ddc:	.word	0x0001149c
     de0:	.word	0x00011498
     de4:	.word	0x00000070
     de8:	.word	0x000113f4
     dec:	.word	0x00011214
     df0:	.word	0x000113f8
     df4:	.word	0x0000024c
     df8:	.word	0x000002f4
     dfc:	.word	0x0000030c

00000e00 <_moddeinit>:
     e00:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
     e04:	ldr	r6, [pc, #140]	; e98 <_moddeinit+0x98>
     e08:	add	r6, pc, r6
     e0c:	ldr	r4, [r6]
     e10:	cmp	r4, #0
     e14:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
     e18:	ldr	r9, [pc, #124]	; e9c <_moddeinit+0x9c>
     e1c:	ldr	r8, [pc, #124]	; ea0 <_moddeinit+0xa0>
     e20:	ldr	r5, [r4, #8]
     e24:	add	r9, pc, r9
     e28:	add	r8, pc, r8
     e2c:	mov	r7, #0
     e30:	ldr	r0, [r4]
     e34:	bl	78c <mod_del_cmd@plt>
     e38:	ldr	r3, [r4]
     e3c:	subs	r0, r3, #0
     e40:	beq	e48 <_moddeinit+0x48>
     e44:	bl	7b0 <free@plt>
     e48:	ldmib	r4, {r2, r3}
     e4c:	mov	r0, r4
     e50:	cmp	r3, #0
     e54:	strne	r2, [r3, #4]
     e58:	ldrne	r2, [r4, #4]
     e5c:	streq	r2, [r9, #4]
     e60:	cmp	r2, #0
     e64:	strne	r3, [r2, #8]
     e68:	streq	r3, [r8]
     e6c:	ldr	r3, [r6, #8]
     e70:	str	r7, [r4, #4]
     e74:	str	r7, [r4, #8]
     e78:	sub	r3, r3, #1
     e7c:	str	r3, [r6, #8]
     e80:	bl	7d4 <rb_free_rb_dlink_node@plt>
     e84:	cmp	r5, #0
     e88:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
     e8c:	mov	r4, r5
     e90:	ldr	r5, [r5, #8]
     e94:	b	e30 <_moddeinit+0x30>
     e98:	.word	0x000112bc
     e9c:	.word	0x000112a0
     ea0:	.word	0x0001129c

00000ea4 <_modinit>:
     ea4:	ldr	r3, [pc, #320]	; fec <_modinit+0x148>
     ea8:	ldr	r2, [pc, #320]	; ff0 <_modinit+0x14c>
     eac:	add	r3, pc, r3
     eb0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
     eb4:	sub	sp, sp, #20
     eb8:	ldr	r7, [r3, r2]
     ebc:	ldr	r3, [pc, #304]	; ff4 <_modinit+0x150>
     ec0:	add	r8, sp, #8
     ec4:	ldr	r9, [pc, #300]	; ff8 <_modinit+0x154>
     ec8:	ldr	r6, [pc, #300]	; ffc <_modinit+0x158>
     ecc:	add	r3, pc, r3
     ed0:	mov	r1, r8
     ed4:	ldr	r0, [r7]
     ed8:	str	r3, [sp, #4]
     edc:	mov	sl, #1
     ee0:	bl	7e0 <rb_dictionary_foreach_start@plt>
     ee4:	add	r9, pc, r9
     ee8:	add	r6, pc, r6
     eec:	b	f0c <_modinit+0x68>
     ef0:	ldr	r2, [r6, #8]
     ef4:	mov	r1, r8
     ef8:	add	r2, r2, #1
     efc:	ldr	r0, [r7]
     f00:	str	r3, [r6]
     f04:	str	r2, [r6, #8]
     f08:	bl	864 <rb_dictionary_foreach_next@plt>
     f0c:	mov	r1, r8
     f10:	ldr	r0, [r7]
     f14:	bl	840 <rb_dictionary_foreach_cur@plt>
     f18:	subs	r3, r0, #0
     f1c:	beq	fc4 <_modinit+0x120>
     f20:	ldr	r5, [r3]
     f24:	mov	r0, r5
     f28:	bl	81c <strlen@plt>
     f2c:	add	r1, r0, #69	; 0x45
     f30:	mov	fp, r0
     f34:	mov	r0, sl
     f38:	bl	780 <calloc@plt>
     f3c:	subs	r4, r0, #0
     f40:	beq	fc0 <_modinit+0x11c>
     f44:	add	r3, r4, #68	; 0x44
     f48:	mov	r1, r5
     f4c:	add	r2, fp, #1
     f50:	mov	r0, r3
     f54:	mov	r5, r3
     f58:	bl	7bc <memcpy@plt>
     f5c:	ldr	lr, [sp, #4]
     f60:	mov	ip, r4
     f64:	ldm	lr!, {r0, r1, r2, r3}
     f68:	str	r5, [ip], #20
     f6c:	stmia	ip!, {r0, r1, r2, r3}
     f70:	ldm	lr!, {r0, r1, r2, r3}
     f74:	stmia	ip!, {r0, r1, r2, r3}
     f78:	ldm	lr, {r0, r1, r2, r3}
     f7c:	stm	ip, {r0, r1, r2, r3}
     f80:	mov	r0, r4
     f84:	bl	870 <mod_add_cmd@plt>
     f88:	bl	804 <rb_make_rb_dlink_node@plt>
     f8c:	subs	r3, r0, #0
     f90:	beq	fcc <_modinit+0x128>
     f94:	ldr	r2, [r9]
     f98:	mov	r1, #0
     f9c:	cmp	r2, #0
     fa0:	str	r4, [r3]
     fa4:	stmib	r3, {r1, r2}
     fa8:	strne	r3, [r2, #4]
     fac:	bne	ef0 <_modinit+0x4c>
     fb0:	ldr	r2, [r9, #4]
     fb4:	cmp	r2, #0
     fb8:	streq	r3, [r9, #4]
     fbc:	b	ef0 <_modinit+0x4c>
     fc0:	bl	7c8 <rb_outofmemory@plt>
     fc4:	add	sp, sp, #20
     fc8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
     fcc:	ldr	r3, [pc, #44]	; 1000 <_modinit+0x15c>
     fd0:	ldr	r1, [pc, #44]	; 1004 <_modinit+0x160>
     fd4:	ldr	r0, [pc, #44]	; 1008 <_modinit+0x164>
     fd8:	add	r3, pc, r3
     fdc:	mov	r2, #144	; 0x90
     fe0:	add	r1, pc, r1
     fe4:	add	r0, pc, r0
     fe8:	bl	888 <__assert_fail@plt>
     fec:	.word	0x0001114c
     ff0:	.word	0x00000070
     ff4:	.word	0x00010ffc
     ff8:	.word	0x000111e0
     ffc:	.word	0x000111dc
    1000:	.word	0x00000034
    1004:	.word	0x000000dc
    1008:	.word	0x000000f4

Disassembly of section .fini:

0000100c <_fini>:
    100c:	push	{r3, lr}
    1010:	pop	{r3, pc}
