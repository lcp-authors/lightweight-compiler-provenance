
../repos/daq-2.0.7/os-daq-modules/.libs/daq_dump.so:     file format elf32-littlearm


Disassembly of section .init:

0000057c <_init>:
 57c:	push	{r3, lr}
 580:	bl	65c <call_weak_fn>
 584:	pop	{r3, pc}

Disassembly of section .plt:

00000588 <.plt>:
 588:	push	{lr}		; (str lr, [sp, #-4]!)
 58c:	ldr	lr, [pc, #4]	; 598 <.plt+0x10>
 590:	add	lr, pc, lr
 594:	ldr	pc, [lr, #8]!
 598:	.word	0x00011a68

0000059c <calloc@plt>:
 59c:	add	ip, pc, #0, 12
 5a0:	add	ip, ip, #69632	; 0x11000
 5a4:	ldr	pc, [ip, #2664]!	; 0xa68

000005a8 <strcmp@plt>:
 5a8:	add	ip, pc, #0, 12
 5ac:	add	ip, ip, #69632	; 0x11000
 5b0:	ldr	pc, [ip, #2656]!	; 0xa60

000005b4 <__cxa_finalize@plt>:
 5b4:	add	ip, pc, #0, 12
 5b8:	add	ip, ip, #69632	; 0x11000
 5bc:	ldr	pc, [ip, #2648]!	; 0xa58

000005c0 <free@plt>:
 5c0:	add	ip, pc, #0, 12
 5c4:	add	ip, ip, #69632	; 0x11000
 5c8:	ldr	pc, [ip, #2640]!	; 0xa50

000005cc <ferror@plt>:
 5cc:	add	ip, pc, #0, 12
 5d0:	add	ip, ip, #69632	; 0x11000
 5d4:	ldr	pc, [ip, #2632]!	; 0xa48

000005d8 <strdup@plt>:
 5d8:	add	ip, pc, #0, 12
 5dc:	add	ip, ip, #69632	; 0x11000
 5e0:	ldr	pc, [ip, #2624]!	; 0xa40

000005e4 <pcap_close@plt>:
 5e4:	add	ip, pc, #0, 12
 5e8:	add	ip, ip, #69632	; 0x11000
 5ec:	ldr	pc, [ip, #2616]!	; 0xa38

000005f0 <strcasecmp@plt>:
 5f0:	add	ip, pc, #0, 12
 5f4:	add	ip, ip, #69632	; 0x11000
 5f8:	ldr	pc, [ip, #2608]!	; 0xa30

000005fc <pcap_open_dead@plt>:
 5fc:	add	ip, pc, #0, 12
 600:	add	ip, ip, #69632	; 0x11000
 604:	ldr	pc, [ip, #2600]!	; 0xa28

00000608 <pcap_dump@plt>:
 608:	add	ip, pc, #0, 12
 60c:	add	ip, ip, #69632	; 0x11000
 610:	ldr	pc, [ip, #2592]!	; 0xa20

00000614 <__gmon_start__@plt>:
 614:	add	ip, pc, #0, 12
 618:	add	ip, ip, #69632	; 0x11000
 61c:	ldr	pc, [ip, #2584]!	; 0xa18

00000620 <snprintf@plt>:
 620:	add	ip, pc, #0, 12
 624:	add	ip, ip, #69632	; 0x11000
 628:	ldr	pc, [ip, #2576]!	; 0xa10

0000062c <pcap_dump_file@plt>:
 62c:	add	ip, pc, #0, 12
 630:	add	ip, ip, #69632	; 0x11000
 634:	ldr	pc, [ip, #2568]!	; 0xa08

00000638 <memset@plt>:
 638:	add	ip, pc, #0, 12
 63c:	add	ip, ip, #69632	; 0x11000
 640:	ldr	pc, [ip, #2560]!	; 0xa00

00000644 <pcap_dump_close@plt>:
 644:	add	ip, pc, #0, 12
 648:	add	ip, ip, #69632	; 0x11000
 64c:	ldr	pc, [ip, #2552]!	; 0x9f8

00000650 <pcap_dump_open@plt>:
 650:	add	ip, pc, #0, 12
 654:	add	ip, ip, #69632	; 0x11000
 658:	ldr	pc, [ip, #2544]!	; 0x9f0

Disassembly of section .text:

0000065c <call_weak_fn>:
     65c:	ldr	r3, [pc, #20]	; 678 <call_weak_fn+0x1c>
     660:	ldr	r2, [pc, #20]	; 67c <call_weak_fn+0x20>
     664:	add	r3, pc, r3
     668:	ldr	r2, [r3, r2]
     66c:	cmp	r2, #0
     670:	bxeq	lr
     674:	b	614 <__gmon_start__@plt>
     678:	.word	0x00011994
     67c:	.word	0x00000054

00000680 <deregister_tm_clones>:
     680:	ldr	r3, [pc, #52]	; 6bc <deregister_tm_clones+0x3c>
     684:	ldr	r0, [pc, #52]	; 6c0 <deregister_tm_clones+0x40>
     688:	add	r3, pc, r3
     68c:	add	r0, pc, r0
     690:	add	r3, r3, #3
     694:	sub	r3, r3, r0
     698:	cmp	r3, #6
     69c:	ldr	r3, [pc, #32]	; 6c4 <deregister_tm_clones+0x44>
     6a0:	add	r3, pc, r3
     6a4:	bxls	lr
     6a8:	ldr	r2, [pc, #24]	; 6c8 <deregister_tm_clones+0x48>
     6ac:	ldr	r3, [r3, r2]
     6b0:	cmp	r3, #0
     6b4:	bxeq	lr
     6b8:	bx	r3
     6bc:	.word	0x00011a3c
     6c0:	.word	0x00011a38
     6c4:	.word	0x00011958
     6c8:	.word	0x00000050

000006cc <register_tm_clones>:
     6cc:	ldr	r1, [pc, #56]	; 70c <register_tm_clones+0x40>
     6d0:	ldr	r0, [pc, #56]	; 710 <register_tm_clones+0x44>
     6d4:	add	r1, pc, r1
     6d8:	add	r0, pc, r0
     6dc:	sub	r1, r1, r0
     6e0:	ldr	r3, [pc, #44]	; 714 <register_tm_clones+0x48>
     6e4:	asr	r1, r1, #2
     6e8:	add	r3, pc, r3
     6ec:	add	r1, r1, r1, lsr #31
     6f0:	asrs	r1, r1, #1
     6f4:	bxeq	lr
     6f8:	ldr	r2, [pc, #24]	; 718 <register_tm_clones+0x4c>
     6fc:	ldr	r3, [r3, r2]
     700:	cmp	r3, #0
     704:	bxeq	lr
     708:	bx	r3
     70c:	.word	0x000119f0
     710:	.word	0x000119ec
     714:	.word	0x00011910
     718:	.word	0x0000005c

0000071c <__do_global_dtors_aux>:
     71c:	ldr	r3, [pc, #76]	; 770 <__do_global_dtors_aux+0x54>
     720:	ldr	r2, [pc, #76]	; 774 <__do_global_dtors_aux+0x58>
     724:	add	r3, pc, r3
     728:	add	r2, pc, r2
     72c:	ldrb	r3, [r3]
     730:	cmp	r3, #0
     734:	bxne	lr
     738:	ldr	r3, [pc, #56]	; 778 <__do_global_dtors_aux+0x5c>
     73c:	push	{r4, lr}
     740:	ldr	r3, [r2, r3]
     744:	cmp	r3, #0
     748:	beq	758 <__do_global_dtors_aux+0x3c>
     74c:	ldr	r3, [pc, #40]	; 77c <__do_global_dtors_aux+0x60>
     750:	ldr	r0, [pc, r3]
     754:	bl	5b4 <__cxa_finalize@plt>
     758:	bl	680 <deregister_tm_clones>
     75c:	ldr	r3, [pc, #28]	; 780 <__do_global_dtors_aux+0x64>
     760:	mov	r2, #1
     764:	add	r3, pc, r3
     768:	strb	r2, [r3]
     76c:	pop	{r4, pc}
     770:	.word	0x000119a0
     774:	.word	0x000118d0
     778:	.word	0x0000004c
     77c:	.word	0x00011908
     780:	.word	0x00011960

00000784 <frame_dummy>:
     784:	ldr	r0, [pc, #56]	; 7c4 <frame_dummy+0x40>
     788:	ldr	r3, [pc, #56]	; 7c8 <frame_dummy+0x44>
     78c:	add	r0, pc, r0
     790:	ldr	r2, [r0]
     794:	add	r3, pc, r3
     798:	cmp	r2, #0
     79c:	bne	7a4 <frame_dummy+0x20>
     7a0:	b	6cc <register_tm_clones>
     7a4:	ldr	r2, [pc, #32]	; 7cc <frame_dummy+0x48>
     7a8:	ldr	r3, [r3, r2]
     7ac:	cmp	r3, #0
     7b0:	beq	7a0 <frame_dummy+0x1c>
     7b4:	push	{r4, lr}
     7b8:	blx	r3
     7bc:	pop	{r4, lr}
     7c0:	b	6cc <register_tm_clones>
     7c4:	.word	0x00011778
     7c8:	.word	0x00011864
     7cc:	.word	0x00000058

000007d0 <daq_dump_get_vars>:
     7d0:	push	{fp, lr}
     7d4:	add	fp, sp, #4
     7d8:	sub	sp, sp, #24
     7dc:	str	r0, [fp, #-16]
     7e0:	str	r1, [fp, #-20]	; 0xffffffec
     7e4:	str	r2, [fp, #-24]	; 0xffffffe8
     7e8:	str	r3, [fp, #-28]	; 0xffffffe4
     7ec:	mov	r3, #0
     7f0:	str	r3, [fp, #-8]
     7f4:	ldr	r3, [fp, #-20]	; 0xffffffec
     7f8:	ldr	r3, [r3, #20]
     7fc:	str	r3, [fp, #-12]
     800:	b	890 <daq_dump_get_vars+0xc0>
     804:	ldr	r3, [fp, #-12]
     808:	ldr	r3, [r3]
     80c:	ldr	r2, [pc, #352]	; 974 <daq_dump_get_vars+0x1a4>
     810:	add	r2, pc, r2
     814:	mov	r1, r2
     818:	mov	r0, r3
     81c:	bl	5a8 <strcmp@plt>
     820:	mov	r3, r0
     824:	cmp	r3, #0
     828:	bne	83c <daq_dump_get_vars+0x6c>
     82c:	ldr	r3, [fp, #-12]
     830:	ldr	r3, [r3, #4]
     834:	str	r3, [fp, #-8]
     838:	b	884 <daq_dump_get_vars+0xb4>
     83c:	ldr	r3, [fp, #-12]
     840:	ldr	r3, [r3]
     844:	ldr	r2, [pc, #300]	; 978 <daq_dump_get_vars+0x1a8>
     848:	add	r2, pc, r2
     84c:	mov	r1, r2
     850:	mov	r0, r3
     854:	bl	5a8 <strcmp@plt>
     858:	mov	r3, r0
     85c:	cmp	r3, #0
     860:	bne	884 <daq_dump_get_vars+0xb4>
     864:	ldr	r3, [fp, #-12]
     868:	ldr	r3, [r3, #4]
     86c:	mov	r0, r3
     870:	bl	5d8 <strdup@plt>
     874:	mov	r3, r0
     878:	mov	r2, r3
     87c:	ldr	r3, [fp, #-16]
     880:	str	r2, [r3, #12]
     884:	ldr	r3, [fp, #-12]
     888:	ldr	r3, [r3, #8]
     88c:	str	r3, [fp, #-12]
     890:	ldr	r3, [fp, #-12]
     894:	cmp	r3, #0
     898:	bne	804 <daq_dump_get_vars+0x34>
     89c:	ldr	r3, [fp, #-8]
     8a0:	cmp	r3, #0
     8a4:	bne	8b0 <daq_dump_get_vars+0xe0>
     8a8:	mov	r3, #1
     8ac:	b	968 <daq_dump_get_vars+0x198>
     8b0:	ldr	r3, [pc, #196]	; 97c <daq_dump_get_vars+0x1ac>
     8b4:	add	r3, pc, r3
     8b8:	mov	r1, r3
     8bc:	ldr	r0, [fp, #-8]
     8c0:	bl	5f0 <strcasecmp@plt>
     8c4:	mov	r3, r0
     8c8:	cmp	r3, #0
     8cc:	bne	8e4 <daq_dump_get_vars+0x114>
     8d0:	ldr	r3, [fp, #-20]	; 0xffffffec
     8d4:	mov	r2, #2
     8d8:	str	r2, [r3, #12]
     8dc:	mov	r3, #1
     8e0:	b	968 <daq_dump_get_vars+0x198>
     8e4:	ldr	r3, [pc, #148]	; 980 <daq_dump_get_vars+0x1b0>
     8e8:	add	r3, pc, r3
     8ec:	mov	r1, r3
     8f0:	ldr	r0, [fp, #-8]
     8f4:	bl	5f0 <strcasecmp@plt>
     8f8:	mov	r3, r0
     8fc:	cmp	r3, #0
     900:	bne	918 <daq_dump_get_vars+0x148>
     904:	ldr	r3, [fp, #-20]	; 0xffffffec
     908:	mov	r2, #0
     90c:	str	r2, [r3, #12]
     910:	mov	r3, #1
     914:	b	968 <daq_dump_get_vars+0x198>
     918:	ldr	r3, [pc, #100]	; 984 <daq_dump_get_vars+0x1b4>
     91c:	add	r3, pc, r3
     920:	mov	r1, r3
     924:	ldr	r0, [fp, #-8]
     928:	bl	5f0 <strcasecmp@plt>
     92c:	mov	r3, r0
     930:	cmp	r3, #0
     934:	bne	94c <daq_dump_get_vars+0x17c>
     938:	ldr	r3, [fp, #-20]	; 0xffffffec
     93c:	mov	r2, #1
     940:	str	r2, [r3, #12]
     944:	mov	r3, #1
     948:	b	968 <daq_dump_get_vars+0x198>
     94c:	ldr	r3, [fp, #-8]
     950:	ldr	r2, [pc, #48]	; 988 <daq_dump_get_vars+0x1b8>
     954:	add	r2, pc, r2
     958:	ldr	r1, [fp, #-28]	; 0xffffffe4
     95c:	ldr	r0, [fp, #-24]	; 0xffffffe8
     960:	bl	620 <snprintf@plt>
     964:	mov	r3, #0
     968:	mov	r0, r3
     96c:	sub	sp, fp, #4
     970:	pop	{fp, pc}
     974:	.word	0x00000b48
     978:	.word	0x00000b1c
     97c:	.word	0x00000ab8
     980:	.word	0x00000a90
     984:	.word	0x00000a64
     988:	.word	0x00000a34

0000098c <dump_daq_initialize>:
     98c:	push	{r4, fp, lr}
     990:	add	fp, sp, #8
     994:	sub	sp, sp, #60	; 0x3c
     998:	str	r0, [fp, #-56]	; 0xffffffc8
     99c:	str	r1, [fp, #-60]	; 0xffffffc4
     9a0:	str	r2, [fp, #-64]	; 0xffffffc0
     9a4:	str	r3, [fp, #-68]	; 0xffffffbc
     9a8:	mov	r1, #120	; 0x78
     9ac:	mov	r0, #1
     9b0:	bl	59c <calloc@plt>
     9b4:	mov	r3, r0
     9b8:	str	r3, [fp, #-16]
     9bc:	ldr	r3, [fp, #-56]	; 0xffffffc8
     9c0:	ldr	r3, [r3, #24]
     9c4:	str	r3, [fp, #-20]	; 0xffffffec
     9c8:	ldr	r3, [fp, #-56]	; 0xffffffc8
     9cc:	sub	ip, fp, #52	; 0x34
     9d0:	mov	lr, r3
     9d4:	ldm	lr!, {r0, r1, r2, r3}
     9d8:	stmia	ip!, {r0, r1, r2, r3}
     9dc:	ldm	lr, {r0, r1, r2}
     9e0:	stm	ip, {r0, r1, r2}
     9e4:	ldr	r3, [fp, #-16]
     9e8:	cmp	r3, #0
     9ec:	bne	a14 <dump_daq_initialize+0x88>
     9f0:	ldr	r3, [pc, #256]	; af8 <dump_daq_initialize+0x16c>
     9f4:	add	r3, pc, r3
     9f8:	ldr	r2, [pc, #252]	; afc <dump_daq_initialize+0x170>
     9fc:	add	r2, pc, r2
     a00:	ldr	r1, [fp, #-68]	; 0xffffffbc
     a04:	ldr	r0, [fp, #-64]	; 0xffffffc0
     a08:	bl	620 <snprintf@plt>
     a0c:	mvn	r3, #1
     a10:	b	aec <dump_daq_initialize+0x160>
     a14:	ldr	r3, [fp, #-20]	; 0xffffffec
     a18:	cmp	r3, #0
     a1c:	beq	a34 <dump_daq_initialize+0xa8>
     a20:	ldr	r3, [fp, #-20]	; 0xffffffec
     a24:	ldr	r3, [r3, #12]
     a28:	and	r3, r3, #1
     a2c:	cmp	r3, #0
     a30:	bne	a60 <dump_daq_initialize+0xd4>
     a34:	ldr	r3, [pc, #196]	; b00 <dump_daq_initialize+0x174>
     a38:	add	r3, pc, r3
     a3c:	ldr	r2, [pc, #192]	; b04 <dump_daq_initialize+0x178>
     a40:	add	r2, pc, r2
     a44:	ldr	r1, [fp, #-68]	; 0xffffffbc
     a48:	ldr	r0, [fp, #-64]	; 0xffffffc0
     a4c:	bl	620 <snprintf@plt>
     a50:	ldr	r0, [fp, #-16]
     a54:	bl	5c0 <free@plt>
     a58:	mvn	r3, #0
     a5c:	b	aec <dump_daq_initialize+0x160>
     a60:	sub	r1, fp, #52	; 0x34
     a64:	ldr	r3, [fp, #-68]	; 0xffffffbc
     a68:	ldr	r2, [fp, #-64]	; 0xffffffc0
     a6c:	ldr	r0, [fp, #-16]
     a70:	bl	7d0 <daq_dump_get_vars>
     a74:	mov	r3, r0
     a78:	cmp	r3, #0
     a7c:	bne	a90 <dump_daq_initialize+0x104>
     a80:	ldr	r0, [fp, #-16]
     a84:	bl	5c0 <free@plt>
     a88:	mvn	r3, #0
     a8c:	b	aec <dump_daq_initialize+0x160>
     a90:	ldr	r3, [fp, #-20]	; 0xffffffec
     a94:	ldr	r4, [r3, #16]
     a98:	ldr	r3, [fp, #-16]
     a9c:	add	r1, r3, #4
     aa0:	sub	r0, fp, #52	; 0x34
     aa4:	ldr	r3, [fp, #-68]	; 0xffffffbc
     aa8:	ldr	r2, [fp, #-64]	; 0xffffffc0
     aac:	blx	r4
     ab0:	str	r0, [fp, #-24]	; 0xffffffe8
     ab4:	ldr	r3, [fp, #-24]	; 0xffffffe8
     ab8:	cmp	r3, #0
     abc:	beq	ad0 <dump_daq_initialize+0x144>
     ac0:	ldr	r0, [fp, #-16]
     ac4:	bl	5c0 <free@plt>
     ac8:	ldr	r3, [fp, #-24]	; 0xffffffe8
     acc:	b	aec <dump_daq_initialize+0x160>
     ad0:	ldr	r3, [fp, #-16]
     ad4:	ldr	r2, [fp, #-20]	; 0xffffffec
     ad8:	str	r2, [r3]
     adc:	ldr	r3, [fp, #-60]	; 0xffffffc4
     ae0:	ldr	r2, [fp, #-16]
     ae4:	str	r2, [r3]
     ae8:	mov	r3, #0
     aec:	mov	r0, r3
     af0:	sub	sp, fp, #8
     af4:	pop	{r4, fp, pc}
     af8:	.word	0x00000a74
     afc:	.word	0x000009a4
     b00:	.word	0x00000a30
     b04:	.word	0x00000994

00000b08 <dump_daq_shutdown>:
     b08:	push	{fp, lr}
     b0c:	add	fp, sp, #4
     b10:	sub	sp, sp, #16
     b14:	str	r0, [fp, #-16]
     b18:	ldr	r3, [fp, #-16]
     b1c:	str	r3, [fp, #-8]
     b20:	ldr	r3, [fp, #-8]
     b24:	ldr	r3, [r3]
     b28:	ldr	r3, [r3, #44]	; 0x2c
     b2c:	ldr	r2, [fp, #-8]
     b30:	ldr	r2, [r2, #4]
     b34:	mov	r0, r2
     b38:	blx	r3
     b3c:	ldr	r3, [fp, #-8]
     b40:	ldr	r3, [r3, #12]
     b44:	cmp	r3, #0
     b48:	beq	b5c <dump_daq_shutdown+0x54>
     b4c:	ldr	r3, [fp, #-8]
     b50:	ldr	r3, [r3, #12]
     b54:	mov	r0, r3
     b58:	bl	5c0 <free@plt>
     b5c:	ldr	r0, [fp, #-8]
     b60:	bl	5c0 <free@plt>
     b64:	nop			; (mov r0, r0)
     b68:	sub	sp, fp, #4
     b6c:	pop	{fp, pc}

00000b70 <daq_dump_capture>:
     b70:	push	{fp, lr}
     b74:	add	fp, sp, #4
     b78:	sub	sp, sp, #24
     b7c:	str	r0, [fp, #-16]
     b80:	str	r1, [fp, #-20]	; 0xffffffec
     b84:	str	r2, [fp, #-24]	; 0xffffffe8
     b88:	ldr	r3, [fp, #-16]
     b8c:	str	r3, [fp, #-12]
     b90:	ldr	r3, [fp, #-12]
     b94:	ldr	r3, [r3, #16]
     b98:	ldr	r2, [fp, #-12]
     b9c:	ldr	r0, [r2, #20]
     ba0:	ldr	r2, [fp, #-24]	; 0xffffffe8
     ba4:	ldr	r1, [fp, #-20]	; 0xffffffec
     ba8:	blx	r3
     bac:	str	r0, [fp, #-8]
     bb0:	ldr	r3, [fp, #-8]
     bb4:	cmp	r3, #6
     bb8:	bls	bc4 <daq_dump_capture+0x54>
     bbc:	mov	r3, #1
     bc0:	str	r3, [fp, #-8]
     bc4:	ldr	r2, [fp, #-12]
     bc8:	ldr	r3, [fp, #-8]
     bcc:	add	r3, r3, #8
     bd0:	lsl	r3, r3, #3
     bd4:	add	r3, r2, r3
     bd8:	ldrd	r2, [r3]
     bdc:	adds	r2, r2, #1
     be0:	adc	r3, r3, #0
     be4:	ldr	r0, [fp, #-12]
     be8:	ldr	r1, [fp, #-8]
     bec:	add	r1, r1, #8
     bf0:	lsl	r1, r1, #3
     bf4:	add	r1, r0, r1
     bf8:	strd	r2, [r1]
     bfc:	ldr	r3, [pc, #56]	; c3c <daq_dump_capture+0xcc>
     c00:	add	r3, pc, r3
     c04:	ldr	r2, [fp, #-8]
     c08:	ldr	r3, [r3, r2, lsl #2]
     c0c:	cmp	r3, #0
     c10:	beq	c2c <daq_dump_capture+0xbc>
     c14:	ldr	r3, [fp, #-12]
     c18:	ldr	r3, [r3, #8]
     c1c:	ldr	r2, [fp, #-24]	; 0xffffffe8
     c20:	ldr	r1, [fp, #-20]	; 0xffffffec
     c24:	mov	r0, r3
     c28:	bl	608 <pcap_dump@plt>
     c2c:	ldr	r3, [fp, #-8]
     c30:	mov	r0, r3
     c34:	sub	sp, fp, #4
     c38:	pop	{fp, pc}
     c3c:	.word	0x000007f8

00000c40 <dump_daq_acquire>:
     c40:	push	{r4, fp, lr}
     c44:	add	fp, sp, #8
     c48:	sub	sp, sp, #36	; 0x24
     c4c:	str	r0, [fp, #-24]	; 0xffffffe8
     c50:	str	r1, [fp, #-28]	; 0xffffffe4
     c54:	str	r2, [fp, #-32]	; 0xffffffe0
     c58:	str	r3, [fp, #-36]	; 0xffffffdc
     c5c:	ldr	r3, [fp, #-24]	; 0xffffffe8
     c60:	str	r3, [fp, #-16]
     c64:	ldr	r3, [fp, #-16]
     c68:	ldr	r2, [fp, #-32]	; 0xffffffe0
     c6c:	str	r2, [r3, #16]
     c70:	ldr	r3, [fp, #-16]
     c74:	ldr	r2, [fp, #4]
     c78:	str	r2, [r3, #20]
     c7c:	ldr	r3, [fp, #-16]
     c80:	ldr	r3, [r3]
     c84:	ldr	r4, [r3, #28]
     c88:	ldr	r3, [fp, #-16]
     c8c:	ldr	r0, [r3, #4]
     c90:	ldr	r3, [fp, #-16]
     c94:	str	r3, [sp]
     c98:	ldr	r3, [fp, #-36]	; 0xffffffdc
     c9c:	ldr	r2, [pc, #24]	; cbc <dump_daq_acquire+0x7c>
     ca0:	add	r2, pc, r2
     ca4:	ldr	r1, [fp, #-28]	; 0xffffffe4
     ca8:	blx	r4
     cac:	mov	r3, r0
     cb0:	mov	r0, r3
     cb4:	sub	sp, fp, #8
     cb8:	pop	{r4, fp, pc}
     cbc:	.word	0xfffffec8

00000cc0 <dump_daq_inject>:
     cc0:	push	{fp, lr}
     cc4:	add	fp, sp, #4
     cc8:	sub	sp, sp, #72	; 0x48
     ccc:	str	r0, [fp, #-64]	; 0xffffffc0
     cd0:	str	r1, [fp, #-68]	; 0xffffffbc
     cd4:	str	r2, [fp, #-72]	; 0xffffffb8
     cd8:	str	r3, [fp, #-76]	; 0xffffffb4
     cdc:	ldr	r3, [fp, #-64]	; 0xffffffc0
     ce0:	str	r3, [fp, #-8]
     ce4:	ldr	r3, [fp, #-68]	; 0xffffffbc
     ce8:	sub	ip, fp, #60	; 0x3c
     cec:	mov	lr, r3
     cf0:	ldm	lr!, {r0, r1, r2, r3}
     cf4:	stmia	ip!, {r0, r1, r2, r3}
     cf8:	ldm	lr!, {r0, r1, r2, r3}
     cfc:	stmia	ip!, {r0, r1, r2, r3}
     d00:	ldm	lr!, {r0, r1, r2, r3}
     d04:	stmia	ip!, {r0, r1, r2, r3}
     d08:	ldr	r3, [lr]
     d0c:	str	r3, [ip]
     d10:	ldr	r3, [fp, #-76]	; 0xffffffb4
     d14:	str	r3, [fp, #-52]	; 0xffffffcc
     d18:	ldr	r3, [fp, #-52]	; 0xffffffcc
     d1c:	str	r3, [fp, #-48]	; 0xffffffd0
     d20:	ldr	r3, [fp, #-8]
     d24:	ldr	r3, [r3, #8]
     d28:	sub	r1, fp, #60	; 0x3c
     d2c:	ldr	r2, [fp, #-72]	; 0xffffffb8
     d30:	mov	r0, r3
     d34:	bl	608 <pcap_dump@plt>
     d38:	ldr	r3, [fp, #-8]
     d3c:	ldr	r3, [r3, #8]
     d40:	mov	r0, r3
     d44:	bl	62c <pcap_dump_file@plt>
     d48:	mov	r3, r0
     d4c:	mov	r0, r3
     d50:	bl	5cc <ferror@plt>
     d54:	mov	r3, r0
     d58:	cmp	r3, #0
     d5c:	beq	d8c <dump_daq_inject+0xcc>
     d60:	ldr	r3, [fp, #-8]
     d64:	ldr	r3, [r3]
     d68:	ldr	r3, [r3, #76]	; 0x4c
     d6c:	ldr	r2, [fp, #-8]
     d70:	ldr	r2, [r2, #4]
     d74:	ldr	r1, [pc, #56]	; db4 <dump_daq_inject+0xf4>
     d78:	add	r1, pc, r1
     d7c:	mov	r0, r2
     d80:	blx	r3
     d84:	mvn	r3, #0
     d88:	b	da8 <dump_daq_inject+0xe8>
     d8c:	ldr	r3, [fp, #-8]
     d90:	ldrd	r2, [r3, #56]	; 0x38
     d94:	adds	r2, r2, #1
     d98:	adc	r3, r3, #0
     d9c:	ldr	r1, [fp, #-8]
     da0:	strd	r2, [r1, #56]	; 0x38
     da4:	mov	r3, #0
     da8:	mov	r0, r3
     dac:	sub	sp, fp, #4
     db0:	pop	{fp, pc}
     db4:	.word	0x0000069c

00000db8 <dump_daq_start>:
     db8:	push	{fp, lr}
     dbc:	add	fp, sp, #4
     dc0:	sub	sp, sp, #32
     dc4:	str	r0, [fp, #-32]	; 0xffffffe0
     dc8:	ldr	r3, [fp, #-32]	; 0xffffffe0
     dcc:	str	r3, [fp, #-8]
     dd0:	ldr	r3, [fp, #-8]
     dd4:	ldr	r3, [r3, #12]
     dd8:	cmp	r3, #0
     ddc:	beq	dec <dump_daq_start+0x34>
     de0:	ldr	r3, [fp, #-8]
     de4:	ldr	r3, [r3, #12]
     de8:	b	df4 <dump_daq_start+0x3c>
     dec:	ldr	r3, [pc, #292]	; f18 <dump_daq_start+0x160>
     df0:	add	r3, pc, r3
     df4:	str	r3, [fp, #-12]
     df8:	ldr	r3, [fp, #-8]
     dfc:	ldr	r3, [r3]
     e00:	ldr	r3, [r3, #24]
     e04:	ldr	r2, [fp, #-8]
     e08:	ldr	r2, [r2, #4]
     e0c:	mov	r0, r2
     e10:	blx	r3
     e14:	str	r0, [fp, #-16]
     e18:	ldr	r3, [fp, #-16]
     e1c:	cmp	r3, #0
     e20:	beq	e2c <dump_daq_start+0x74>
     e24:	ldr	r3, [fp, #-16]
     e28:	b	f0c <dump_daq_start+0x154>
     e2c:	ldr	r3, [fp, #-8]
     e30:	ldr	r3, [r3]
     e34:	ldr	r3, [r3, #68]	; 0x44
     e38:	ldr	r2, [fp, #-8]
     e3c:	ldr	r2, [r2, #4]
     e40:	mov	r0, r2
     e44:	blx	r3
     e48:	str	r0, [fp, #-20]	; 0xffffffec
     e4c:	ldr	r3, [fp, #-8]
     e50:	ldr	r3, [r3]
     e54:	ldr	r3, [r3, #60]	; 0x3c
     e58:	ldr	r2, [fp, #-8]
     e5c:	ldr	r2, [r2, #4]
     e60:	mov	r0, r2
     e64:	blx	r3
     e68:	str	r0, [fp, #-24]	; 0xffffffe8
     e6c:	ldr	r1, [fp, #-24]	; 0xffffffe8
     e70:	ldr	r0, [fp, #-20]	; 0xffffffec
     e74:	bl	5fc <pcap_open_dead@plt>
     e78:	str	r0, [fp, #-28]	; 0xffffffe4
     e7c:	ldr	r3, [fp, #-28]	; 0xffffffe4
     e80:	cmp	r3, #0
     e84:	beq	e9c <dump_daq_start+0xe4>
     e88:	ldr	r1, [fp, #-12]
     e8c:	ldr	r0, [fp, #-28]	; 0xffffffe4
     e90:	bl	650 <pcap_dump_open@plt>
     e94:	mov	r2, r0
     e98:	b	ea0 <dump_daq_start+0xe8>
     e9c:	mov	r2, #0
     ea0:	ldr	r3, [fp, #-8]
     ea4:	str	r2, [r3, #8]
     ea8:	ldr	r3, [fp, #-8]
     eac:	ldr	r3, [r3, #8]
     eb0:	cmp	r3, #0
     eb4:	bne	f00 <dump_daq_start+0x148>
     eb8:	ldr	r3, [fp, #-8]
     ebc:	ldr	r3, [r3]
     ec0:	ldr	r3, [r3, #40]	; 0x28
     ec4:	ldr	r2, [fp, #-8]
     ec8:	ldr	r2, [r2, #4]
     ecc:	mov	r0, r2
     ed0:	blx	r3
     ed4:	ldr	r3, [fp, #-8]
     ed8:	ldr	r3, [r3]
     edc:	ldr	r3, [r3, #76]	; 0x4c
     ee0:	ldr	r2, [fp, #-8]
     ee4:	ldr	r2, [r2, #4]
     ee8:	ldr	r1, [pc, #44]	; f1c <dump_daq_start+0x164>
     eec:	add	r1, pc, r1
     ef0:	mov	r0, r2
     ef4:	blx	r3
     ef8:	mvn	r3, #0
     efc:	b	f0c <dump_daq_start+0x154>
     f00:	ldr	r0, [fp, #-28]	; 0xffffffe4
     f04:	bl	5e4 <pcap_close@plt>
     f08:	mov	r3, #0
     f0c:	mov	r0, r3
     f10:	sub	sp, fp, #4
     f14:	pop	{fp, pc}
     f18:	.word	0x00000644
     f1c:	.word	0x00000558

00000f20 <dump_daq_stop>:
     f20:	push	{fp, lr}
     f24:	add	fp, sp, #4
     f28:	sub	sp, sp, #16
     f2c:	str	r0, [fp, #-16]
     f30:	ldr	r3, [fp, #-16]
     f34:	str	r3, [fp, #-8]
     f38:	ldr	r3, [fp, #-8]
     f3c:	ldr	r3, [r3]
     f40:	ldr	r3, [r3, #40]	; 0x28
     f44:	ldr	r2, [fp, #-8]
     f48:	ldr	r2, [r2, #4]
     f4c:	mov	r0, r2
     f50:	blx	r3
     f54:	str	r0, [fp, #-12]
     f58:	ldr	r3, [fp, #-12]
     f5c:	cmp	r3, #0
     f60:	beq	f6c <dump_daq_stop+0x4c>
     f64:	ldr	r3, [fp, #-12]
     f68:	b	f9c <dump_daq_stop+0x7c>
     f6c:	ldr	r3, [fp, #-8]
     f70:	ldr	r3, [r3, #8]
     f74:	cmp	r3, #0
     f78:	beq	f98 <dump_daq_stop+0x78>
     f7c:	ldr	r3, [fp, #-8]
     f80:	ldr	r3, [r3, #8]
     f84:	mov	r0, r3
     f88:	bl	644 <pcap_dump_close@plt>
     f8c:	ldr	r3, [fp, #-8]
     f90:	mov	r2, #0
     f94:	str	r2, [r3, #8]
     f98:	mov	r3, #0
     f9c:	mov	r0, r3
     fa0:	sub	sp, fp, #4
     fa4:	pop	{fp, pc}

00000fa8 <dump_daq_set_filter>:
     fa8:	push	{fp, lr}
     fac:	add	fp, sp, #4
     fb0:	sub	sp, sp, #16
     fb4:	str	r0, [fp, #-16]
     fb8:	str	r1, [fp, #-20]	; 0xffffffec
     fbc:	ldr	r3, [fp, #-16]
     fc0:	str	r3, [fp, #-8]
     fc4:	ldr	r3, [fp, #-8]
     fc8:	ldr	r3, [r3]
     fcc:	ldr	r3, [r3, #20]
     fd0:	ldr	r2, [fp, #-8]
     fd4:	ldr	r2, [r2, #4]
     fd8:	ldr	r1, [fp, #-20]	; 0xffffffec
     fdc:	mov	r0, r2
     fe0:	blx	r3
     fe4:	mov	r3, r0
     fe8:	mov	r0, r3
     fec:	sub	sp, fp, #4
     ff0:	pop	{fp, pc}

00000ff4 <dump_daq_breakloop>:
     ff4:	push	{fp, lr}
     ff8:	add	fp, sp, #4
     ffc:	sub	sp, sp, #16
    1000:	str	r0, [fp, #-16]
    1004:	ldr	r3, [fp, #-16]
    1008:	str	r3, [fp, #-8]
    100c:	ldr	r3, [fp, #-8]
    1010:	ldr	r3, [r3]
    1014:	ldr	r3, [r3, #36]	; 0x24
    1018:	ldr	r2, [fp, #-8]
    101c:	ldr	r2, [r2, #4]
    1020:	mov	r0, r2
    1024:	blx	r3
    1028:	mov	r3, r0
    102c:	mov	r0, r3
    1030:	sub	sp, fp, #4
    1034:	pop	{fp, pc}

00001038 <dump_daq_check_status>:
    1038:	push	{fp, lr}
    103c:	add	fp, sp, #4
    1040:	sub	sp, sp, #16
    1044:	str	r0, [fp, #-16]
    1048:	ldr	r3, [fp, #-16]
    104c:	str	r3, [fp, #-8]
    1050:	ldr	r3, [fp, #-8]
    1054:	ldr	r3, [r3]
    1058:	ldr	r3, [r3, #48]	; 0x30
    105c:	ldr	r2, [fp, #-8]
    1060:	ldr	r2, [r2, #4]
    1064:	mov	r0, r2
    1068:	blx	r3
    106c:	mov	r3, r0
    1070:	mov	r0, r3
    1074:	sub	sp, fp, #4
    1078:	pop	{fp, pc}

0000107c <dump_daq_get_stats>:
    107c:	push	{fp, lr}
    1080:	add	fp, sp, #4
    1084:	sub	sp, sp, #24
    1088:	str	r0, [fp, #-24]	; 0xffffffe8
    108c:	str	r1, [fp, #-28]	; 0xffffffe4
    1090:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1094:	str	r3, [fp, #-12]
    1098:	ldr	r3, [fp, #-12]
    109c:	ldr	r3, [r3]
    10a0:	ldr	r3, [r3, #52]	; 0x34
    10a4:	ldr	r2, [fp, #-12]
    10a8:	ldr	r2, [r2, #4]
    10ac:	ldr	r1, [fp, #-28]	; 0xffffffe4
    10b0:	mov	r0, r2
    10b4:	blx	r3
    10b8:	str	r0, [fp, #-16]
    10bc:	mov	r3, #0
    10c0:	str	r3, [fp, #-8]
    10c4:	b	1104 <dump_daq_get_stats+0x88>
    10c8:	ldr	r2, [fp, #-12]
    10cc:	ldr	r3, [fp, #-8]
    10d0:	add	r3, r3, #8
    10d4:	lsl	r3, r3, #3
    10d8:	add	r3, r2, r3
    10dc:	ldrd	r2, [r3]
    10e0:	ldr	r0, [fp, #-28]	; 0xffffffe4
    10e4:	ldr	r1, [fp, #-8]
    10e8:	add	r1, r1, #5
    10ec:	lsl	r1, r1, #3
    10f0:	add	r1, r0, r1
    10f4:	strd	r2, [r1]
    10f8:	ldr	r3, [fp, #-8]
    10fc:	add	r3, r3, #1
    1100:	str	r3, [fp, #-8]
    1104:	ldr	r3, [fp, #-8]
    1108:	cmp	r3, #6
    110c:	ble	10c8 <dump_daq_get_stats+0x4c>
    1110:	ldr	r3, [fp, #-12]
    1114:	ldrd	r2, [r3, #56]	; 0x38
    1118:	ldr	r1, [fp, #-28]	; 0xffffffe4
    111c:	strd	r2, [r1, #32]
    1120:	ldr	r3, [fp, #-16]
    1124:	mov	r0, r3
    1128:	sub	sp, fp, #4
    112c:	pop	{fp, pc}

00001130 <dump_daq_reset_stats>:
    1130:	push	{fp, lr}
    1134:	add	fp, sp, #4
    1138:	sub	sp, sp, #16
    113c:	str	r0, [fp, #-16]
    1140:	ldr	r3, [fp, #-16]
    1144:	str	r3, [fp, #-8]
    1148:	ldr	r3, [fp, #-8]
    114c:	ldr	r3, [r3]
    1150:	ldr	r3, [r3, #56]	; 0x38
    1154:	ldr	r2, [fp, #-8]
    1158:	ldr	r2, [r2, #4]
    115c:	mov	r0, r2
    1160:	blx	r3
    1164:	ldr	r3, [fp, #-8]
    1168:	add	r3, r3, #24
    116c:	mov	r2, #96	; 0x60
    1170:	mov	r1, #0
    1174:	mov	r0, r3
    1178:	bl	638 <memset@plt>
    117c:	nop			; (mov r0, r0)
    1180:	sub	sp, fp, #4
    1184:	pop	{fp, pc}

00001188 <dump_daq_get_snaplen>:
    1188:	push	{fp, lr}
    118c:	add	fp, sp, #4
    1190:	sub	sp, sp, #16
    1194:	str	r0, [fp, #-16]
    1198:	ldr	r3, [fp, #-16]
    119c:	str	r3, [fp, #-8]
    11a0:	ldr	r3, [fp, #-8]
    11a4:	ldr	r3, [r3]
    11a8:	ldr	r3, [r3, #60]	; 0x3c
    11ac:	ldr	r2, [fp, #-8]
    11b0:	ldr	r2, [r2, #4]
    11b4:	mov	r0, r2
    11b8:	blx	r3
    11bc:	mov	r3, r0
    11c0:	mov	r0, r3
    11c4:	sub	sp, fp, #4
    11c8:	pop	{fp, pc}

000011cc <dump_daq_get_capabilities>:
    11cc:	push	{fp, lr}
    11d0:	add	fp, sp, #4
    11d4:	sub	sp, sp, #16
    11d8:	str	r0, [fp, #-16]
    11dc:	ldr	r3, [fp, #-16]
    11e0:	str	r3, [fp, #-8]
    11e4:	ldr	r3, [fp, #-8]
    11e8:	ldr	r3, [r3]
    11ec:	ldr	r3, [r3, #64]	; 0x40
    11f0:	ldr	r2, [fp, #-8]
    11f4:	ldr	r2, [r2, #4]
    11f8:	mov	r0, r2
    11fc:	blx	r3
    1200:	str	r0, [fp, #-12]
    1204:	ldr	r3, [fp, #-12]
    1208:	orr	r3, r3, #7
    120c:	str	r3, [fp, #-12]
    1210:	ldr	r3, [fp, #-12]
    1214:	mov	r0, r3
    1218:	sub	sp, fp, #4
    121c:	pop	{fp, pc}

00001220 <dump_daq_get_datalink_type>:
    1220:	push	{fp, lr}
    1224:	add	fp, sp, #4
    1228:	sub	sp, sp, #16
    122c:	str	r0, [fp, #-16]
    1230:	ldr	r3, [fp, #-16]
    1234:	str	r3, [fp, #-8]
    1238:	ldr	r3, [fp, #-8]
    123c:	ldr	r3, [r3]
    1240:	ldr	r3, [r3, #68]	; 0x44
    1244:	ldr	r2, [fp, #-8]
    1248:	ldr	r2, [r2, #4]
    124c:	mov	r0, r2
    1250:	blx	r3
    1254:	mov	r3, r0
    1258:	mov	r0, r3
    125c:	sub	sp, fp, #4
    1260:	pop	{fp, pc}

00001264 <dump_daq_get_errbuf>:
    1264:	push	{fp, lr}
    1268:	add	fp, sp, #4
    126c:	sub	sp, sp, #16
    1270:	str	r0, [fp, #-16]
    1274:	ldr	r3, [fp, #-16]
    1278:	str	r3, [fp, #-8]
    127c:	ldr	r3, [fp, #-8]
    1280:	ldr	r3, [r3]
    1284:	ldr	r3, [r3, #72]	; 0x48
    1288:	ldr	r2, [fp, #-8]
    128c:	ldr	r2, [r2, #4]
    1290:	mov	r0, r2
    1294:	blx	r3
    1298:	mov	r3, r0
    129c:	mov	r0, r3
    12a0:	sub	sp, fp, #4
    12a4:	pop	{fp, pc}

000012a8 <dump_daq_set_errbuf>:
    12a8:	push	{fp, lr}
    12ac:	add	fp, sp, #4
    12b0:	sub	sp, sp, #16
    12b4:	str	r0, [fp, #-16]
    12b8:	str	r1, [fp, #-20]	; 0xffffffec
    12bc:	ldr	r3, [fp, #-16]
    12c0:	str	r3, [fp, #-8]
    12c4:	ldr	r3, [fp, #-8]
    12c8:	ldr	r3, [r3]
    12cc:	ldr	r3, [r3, #76]	; 0x4c
    12d0:	ldr	r2, [fp, #-8]
    12d4:	ldr	r0, [r2, #4]
    12d8:	ldr	r2, [fp, #-20]	; 0xffffffec
    12dc:	cmp	r2, #0
    12e0:	beq	12ec <dump_daq_set_errbuf+0x44>
    12e4:	ldr	r2, [fp, #-20]	; 0xffffffec
    12e8:	b	12f4 <dump_daq_set_errbuf+0x4c>
    12ec:	ldr	r2, [pc, #20]	; 1308 <dump_daq_set_errbuf+0x60>
    12f0:	add	r2, pc, r2
    12f4:	mov	r1, r2
    12f8:	blx	r3
    12fc:	nop			; (mov r0, r0)
    1300:	sub	sp, fp, #4
    1304:	pop	{fp, pc}
    1308:	.word	0x0000016c

0000130c <dump_daq_get_device_index>:
    130c:	push	{fp, lr}
    1310:	add	fp, sp, #4
    1314:	sub	sp, sp, #16
    1318:	str	r0, [fp, #-16]
    131c:	str	r1, [fp, #-20]	; 0xffffffec
    1320:	ldr	r3, [fp, #-16]
    1324:	str	r3, [fp, #-8]
    1328:	ldr	r3, [fp, #-8]
    132c:	ldr	r3, [r3]
    1330:	ldr	r3, [r3, #80]	; 0x50
    1334:	ldr	r2, [fp, #-8]
    1338:	ldr	r2, [r2, #4]
    133c:	ldr	r1, [fp, #-20]	; 0xffffffec
    1340:	mov	r0, r2
    1344:	blx	r3
    1348:	mov	r3, r0
    134c:	mov	r0, r3
    1350:	sub	sp, fp, #4
    1354:	pop	{fp, pc}

Disassembly of section .fini:

00001358 <_fini>:
    1358:	push	{r3, lr}
    135c:	pop	{r3, pc}
