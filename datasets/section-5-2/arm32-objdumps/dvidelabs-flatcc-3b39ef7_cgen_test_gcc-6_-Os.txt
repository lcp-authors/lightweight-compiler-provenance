
../repos/dvidelabs-flatcc-3b39ef7/test/cgen_test/cgen_test:     file format elf32-littlearm


Disassembly of section .init:

00013ec4 <.init>:
   13ec4:	push	{r3, lr}
   13ec8:	bl	14260 <_start@@Base+0x3c>
   13ecc:	pop	{r3, pc}

Disassembly of section .plt:

00013ed0 <calloc@plt-0x14>:
   13ed0:	push	{lr}		; (str lr, [sp, #-4]!)
   13ed4:	ldr	lr, [pc, #4]	; 13ee0 <calloc@plt-0x4>
   13ed8:	add	lr, pc, lr
   13edc:	ldr	pc, [lr, #8]!
   13ee0:	andeq	r7, r4, r0, lsr #2

00013ee4 <calloc@plt>:
   13ee4:	add	ip, pc, #0, 12
   13ee8:	add	ip, ip, #290816	; 0x47000
   13eec:	ldr	pc, [ip, #288]!	; 0x120

00013ef0 <raise@plt>:
   13ef0:	add	ip, pc, #0, 12
   13ef4:	add	ip, ip, #290816	; 0x47000
   13ef8:	ldr	pc, [ip, #280]!	; 0x118

00013efc <strcmp@plt>:
   13efc:	add	ip, pc, #0, 12
   13f00:	add	ip, ip, #290816	; 0x47000
   13f04:	ldr	pc, [ip, #272]!	; 0x110

00013f08 <fopen@plt>:
   13f08:	add	ip, pc, #0, 12
   13f0c:	add	ip, ip, #290816	; 0x47000
   13f10:	ldr	pc, [ip, #264]!	; 0x108

00013f14 <free@plt>:
   13f14:	add	ip, pc, #0, 12
   13f18:	add	ip, ip, #290816	; 0x47000
   13f1c:	ldr	pc, [ip, #256]!	; 0x100

00013f20 <memcpy@plt>:
   13f20:	add	ip, pc, #0, 12
   13f24:	add	ip, ip, #290816	; 0x47000
   13f28:	ldr	pc, [ip, #248]!	; 0xf8

00013f2c <ftell@plt>:
   13f2c:	add	ip, pc, #0, 12
   13f30:	add	ip, ip, #290816	; 0x47000
   13f34:	ldr	pc, [ip, #240]!	; 0xf0

00013f38 <memcmp@plt>:
   13f38:	add	ip, pc, #0, 12
   13f3c:	add	ip, ip, #290816	; 0x47000
   13f40:	ldr	pc, [ip, #232]!	; 0xe8

00013f44 <rewind@plt>:
   13f44:	add	ip, pc, #0, 12
   13f48:	add	ip, ip, #290816	; 0x47000
   13f4c:	ldr	pc, [ip, #224]!	; 0xe0

00013f50 <realloc@plt>:
   13f50:	add	ip, pc, #0, 12
   13f54:	add	ip, ip, #290816	; 0x47000
   13f58:	ldr	pc, [ip, #216]!	; 0xd8

00013f5c <fwrite@plt>:
   13f5c:	add	ip, pc, #0, 12
   13f60:	add	ip, ip, #290816	; 0x47000
   13f64:	ldr	pc, [ip, #208]!	; 0xd0

00013f68 <strcpy@plt>:
   13f68:	add	ip, pc, #0, 12
   13f6c:	add	ip, ip, #290816	; 0x47000
   13f70:	ldr	pc, [ip, #200]!	; 0xc8

00013f74 <fread@plt>:
   13f74:	add	ip, pc, #0, 12
   13f78:	add	ip, ip, #290816	; 0x47000
   13f7c:	ldr	pc, [ip, #192]!	; 0xc0

00013f80 <puts@plt>:
   13f80:	add	ip, pc, #0, 12
   13f84:	add	ip, ip, #290816	; 0x47000
   13f88:	ldr	pc, [ip, #184]!	; 0xb8

00013f8c <malloc@plt>:
   13f8c:	add	ip, pc, #0, 12
   13f90:	add	ip, ip, #290816	; 0x47000
   13f94:	ldr	pc, [ip, #176]!	; 0xb0

00013f98 <__libc_start_main@plt>:
   13f98:	add	ip, pc, #0, 12
   13f9c:	add	ip, ip, #290816	; 0x47000
   13fa0:	ldr	pc, [ip, #168]!	; 0xa8

00013fa4 <__ctype_toupper_loc@plt>:
   13fa4:	add	ip, pc, #0, 12
   13fa8:	add	ip, ip, #290816	; 0x47000
   13fac:	ldr	pc, [ip, #160]!	; 0xa0

00013fb0 <__gmon_start__@plt>:
   13fb0:	add	ip, pc, #0, 12
   13fb4:	add	ip, ip, #290816	; 0x47000
   13fb8:	ldr	pc, [ip, #152]!	; 0x98

00013fbc <exit@plt>:
   13fbc:	add	ip, pc, #0, 12
   13fc0:	add	ip, ip, #290816	; 0x47000
   13fc4:	ldr	pc, [ip, #144]!	; 0x90

00013fc8 <strlen@plt>:
   13fc8:	add	ip, pc, #0, 12
   13fcc:	add	ip, ip, #290816	; 0x47000
   13fd0:	ldr	pc, [ip, #136]!	; 0x88

00013fd4 <fprintf@plt>:
   13fd4:	add	ip, pc, #0, 12
   13fd8:	add	ip, ip, #290816	; 0x47000
   13fdc:	ldr	pc, [ip, #128]!	; 0x80

00013fe0 <posix_memalign@plt>:
   13fe0:	add	ip, pc, #0, 12
   13fe4:	add	ip, ip, #290816	; 0x47000
   13fe8:	ldr	pc, [ip, #120]!	; 0x78

00013fec <memset@plt>:
   13fec:	add	ip, pc, #0, 12
   13ff0:	add	ip, ip, #290816	; 0x47000
   13ff4:	ldr	pc, [ip, #112]!	; 0x70

00013ff8 <strncpy@plt>:
   13ff8:	add	ip, pc, #0, 12
   13ffc:	add	ip, ip, #290816	; 0x47000
   14000:	ldr	pc, [ip, #104]!	; 0x68

00014004 <strtod@plt>:
   14004:	add	ip, pc, #0, 12
   14008:	add	ip, ip, #290816	; 0x47000
   1400c:	ldr	pc, [ip, #96]!	; 0x60

00014010 <memchr@plt>:
   14010:	add	ip, pc, #0, 12
   14014:	add	ip, ip, #290816	; 0x47000
   14018:	ldr	pc, [ip, #88]!	; 0x58

0001401c <fclose@plt>:
   1401c:	add	ip, pc, #0, 12
   14020:	add	ip, ip, #290816	; 0x47000
   14024:	ldr	pc, [ip, #80]!	; 0x50

00014028 <vfprintf@plt>:
   14028:	add	ip, pc, #0, 12
   1402c:	add	ip, ip, #290816	; 0x47000
   14030:	ldr	pc, [ip, #72]!	; 0x48

00014034 <fputc@plt>:
   14034:	add	ip, pc, #0, 12
   14038:	add	ip, ip, #290816	; 0x47000
   1403c:	ldr	pc, [ip, #64]!	; 0x40

00014040 <sprintf@plt>:
   14040:	add	ip, pc, #0, 12
   14044:	add	ip, ip, #290816	; 0x47000
   14048:	ldr	pc, [ip, #56]!	; 0x38

0001404c <vsnprintf@plt>:
   1404c:	add	ip, pc, #0, 12
   14050:	add	ip, ip, #290816	; 0x47000
   14054:	ldr	pc, [ip, #48]!	; 0x30

00014058 <qsort@plt>:
   14058:	add	ip, pc, #0, 12
   1405c:	add	ip, ip, #290816	; 0x47000
   14060:	ldr	pc, [ip, #40]!	; 0x28

00014064 <fseek@plt>:
   14064:	add	ip, pc, #0, 12
   14068:	add	ip, ip, #290816	; 0x47000
   1406c:	ldr	pc, [ip, #32]!

00014070 <fputs@plt>:
   14070:	add	ip, pc, #0, 12
   14074:	add	ip, ip, #290816	; 0x47000
   14078:	ldr	pc, [ip, #24]!

0001407c <strncmp@plt>:
   1407c:	add	ip, pc, #0, 12
   14080:	add	ip, ip, #290816	; 0x47000
   14084:	ldr	pc, [ip, #16]!

00014088 <abort@plt>:
   14088:	add	ip, pc, #0, 12
   1408c:	add	ip, ip, #290816	; 0x47000
   14090:	ldr	pc, [ip, #8]!

00014094 <__assert_fail@plt>:
   14094:	add	ip, pc, #0, 12
   14098:	add	ip, ip, #290816	; 0x47000
   1409c:	ldr	pc, [ip, #0]!

Disassembly of section .text:

000140a0 <main@@Base-0x6c>:
   140a0:	ldr	r3, [pc, #20]	; 140bc <__assert_fail@plt+0x28>
   140a4:	push	{r4, lr}
   140a8:	ldr	r1, [r3]
   140ac:	ldr	r0, [pc, #12]	; 140c0 <__assert_fail@plt+0x2c>
   140b0:	bl	14070 <fputs@plt>
   140b4:	mov	r0, #1
   140b8:	bl	13fbc <exit@plt>
   140bc:	strheq	fp, [r5], -r0
   140c0:	andeq	r0, r3, lr, ror #9
   140c4:	ldr	r3, [pc, #20]	; 140e0 <__assert_fail@plt+0x4c>
   140c8:	push	{r4, lr}
   140cc:	ldr	r1, [r3]
   140d0:	ldr	r0, [pc, #12]	; 140e4 <__assert_fail@plt+0x50>
   140d4:	bl	14070 <fputs@plt>
   140d8:	mov	r0, #1
   140dc:	bl	13fbc <exit@plt>
   140e0:	strheq	fp, [r5], -r0
   140e4:	andeq	r0, r3, lr, ror #9
   140e8:	push	{r4, lr}
   140ec:	mov	r2, #108	; 0x6c
   140f0:	ldr	r3, [pc, #8]	; 14100 <__assert_fail@plt+0x6c>
   140f4:	ldr	r1, [pc, #8]	; 14104 <__assert_fail@plt+0x70>
   140f8:	ldr	r0, [pc, #8]	; 14108 <__assert_fail@plt+0x74>
   140fc:	bl	14094 <__assert_fail@plt>
   14100:	andeq	r7, r4, r8, asr ip
   14104:	andeq	r7, r4, r2, lsr #29
   14108:	andeq	r7, r4, fp, ror #29

0001410c <main@@Base>:
   1410c:	push	{r4, r5, r6, lr}
   14110:	sub	sp, sp, #3952	; 0xf70
   14114:	sub	sp, sp, #8
   14118:	ldr	r2, [pc, #216]	; 141f8 <main@@Base+0xec>
   1411c:	ldr	r1, [pc, #216]	; 141fc <main@@Base+0xf0>
   14120:	add	r0, sp, #224	; 0xe0
   14124:	bl	13f20 <memcpy@plt>
   14128:	mov	r0, sp
   1412c:	bl	14388 <flatcc_init_options@@Base>
   14130:	mov	r3, #1
   14134:	str	r3, [sp, #144]	; 0x90
   14138:	str	r3, [sp, #152]	; 0x98
   1413c:	str	r3, [sp, #148]	; 0x94
   14140:	str	r3, [sp, #156]	; 0x9c
   14144:	str	r3, [sp, #108]	; 0x6c
   14148:	mov	r3, #0
   1414c:	mov	r2, r3
   14150:	ldr	r1, [pc, #168]	; 14200 <main@@Base+0xf4>
   14154:	mov	r0, sp
   14158:	bl	14440 <flatcc_create_context@@Base>
   1415c:	ldr	r4, [pc, #160]	; 14204 <main@@Base+0xf8>
   14160:	subs	r6, r0, #0
   14164:	bne	14188 <main@@Base+0x7c>
   14168:	ldr	r1, [r4]
   1416c:	ldr	r0, [pc, #148]	; 14208 <main@@Base+0xfc>
   14170:	bl	14070 <fputs@plt>
   14174:	mvn	r5, #0
   14178:	mov	r0, r5
   1417c:	add	sp, sp, #3952	; 0xf70
   14180:	add	sp, sp, #8
   14184:	pop	{r4, r5, r6, pc}
   14188:	add	r1, sp, #224	; 0xe0
   1418c:	ldr	r2, [pc, #100]	; 141f8 <main@@Base+0xec>
   14190:	bl	144a0 <flatcc_parse_buffer@@Base>
   14194:	ldr	r1, [r4]
   14198:	subs	r5, r0, #0
   1419c:	ldrne	r0, [pc, #104]	; 1420c <main@@Base+0x100>
   141a0:	bne	141d0 <main@@Base+0xc4>
   141a4:	ldr	r0, [pc, #100]	; 14210 <main@@Base+0x104>
   141a8:	bl	14070 <fputs@plt>
   141ac:	ldr	r1, [r4]
   141b0:	ldr	r0, [pc, #92]	; 14214 <main@@Base+0x108>
   141b4:	bl	14070 <fputs@plt>
   141b8:	mov	r0, r6
   141bc:	bl	14560 <flatcc_generate_files@@Base>
   141c0:	cmp	r0, #0
   141c4:	beq	141e0 <main@@Base+0xd4>
   141c8:	ldr	r1, [r4]
   141cc:	ldr	r0, [pc, #68]	; 14218 <main@@Base+0x10c>
   141d0:	bl	14070 <fputs@plt>
   141d4:	mov	r0, r6
   141d8:	bl	14688 <flatcc_destroy_context@@Base>
   141dc:	b	14178 <main@@Base+0x6c>
   141e0:	ldr	r3, [pc, #52]	; 1421c <main@@Base+0x110>
   141e4:	add	r2, sp, #224	; 0xe0
   141e8:	ldr	r1, [pc, #48]	; 14220 <main@@Base+0x114>
   141ec:	ldr	r0, [r3]
   141f0:	bl	13fd4 <fprintf@plt>
   141f4:	b	141d4 <main@@Base+0xc8>
   141f8:	muleq	r0, r7, lr
   141fc:	andeq	pc, r2, sp, lsr r6	; <UNPREDICTABLE>
   14200:	andeq	pc, r2, ip, asr #10
   14204:	strheq	fp, [r5], -r0
   14208:	andeq	pc, r2, r9, asr r5	; <UNPREDICTABLE>
   1420c:	andeq	pc, r2, r3, lsl #11
   14210:	muleq	r2, r8, r5
   14214:	andeq	pc, r2, sl, lsr #11
   14218:	andeq	pc, r2, sl, asr #11
   1421c:	strheq	fp, [r5], -r4
   14220:	andeq	pc, r2, fp, ror #11

00014224 <_start@@Base>:
   14224:	mov	fp, #0
   14228:	mov	lr, #0
   1422c:	pop	{r1}		; (ldr r1, [sp], #4)
   14230:	mov	r2, sp
   14234:	push	{r2}		; (str r2, [sp, #-4]!)
   14238:	push	{r0}		; (str r0, [sp, #-4]!)
   1423c:	ldr	ip, [pc, #16]	; 14254 <_start@@Base+0x30>
   14240:	push	{ip}		; (str ip, [sp, #-4]!)
   14244:	ldr	r0, [pc, #12]	; 14258 <_start@@Base+0x34>
   14248:	ldr	r3, [pc, #12]	; 1425c <_start@@Base+0x38>
   1424c:	bl	13f98 <__libc_start_main@plt>
   14250:	bl	14088 <abort@plt>
   14254:	andeq	pc, r2, r8, lsr r5	; <UNPREDICTABLE>
   14258:	andeq	r4, r1, ip, lsl #2
   1425c:	ldrdeq	pc, [r2], -r8
   14260:	ldr	r3, [pc, #20]	; 1427c <_start@@Base+0x58>
   14264:	ldr	r2, [pc, #20]	; 14280 <_start@@Base+0x5c>
   14268:	add	r3, pc, r3
   1426c:	ldr	r2, [r3, r2]
   14270:	cmp	r2, #0
   14274:	bxeq	lr
   14278:	b	13fb0 <__gmon_start__@plt>
   1427c:	muleq	r4, r0, sp
   14280:	andeq	r0, r0, r0, lsr #1
   14284:	ldr	r3, [pc, #28]	; 142a8 <_start@@Base+0x84>
   14288:	ldr	r0, [pc, #28]	; 142ac <_start@@Base+0x88>
   1428c:	sub	r3, r3, r0
   14290:	cmp	r3, #6
   14294:	bxls	lr
   14298:	ldr	r3, [pc, #16]	; 142b0 <_start@@Base+0x8c>
   1429c:	cmp	r3, #0
   142a0:	bxeq	lr
   142a4:	bx	r3
   142a8:	andeq	fp, r5, pc, lsr #1
   142ac:	andeq	fp, r5, ip, lsr #1
   142b0:	andeq	r0, r0, r0
   142b4:	ldr	r1, [pc, #36]	; 142e0 <_start@@Base+0xbc>
   142b8:	ldr	r0, [pc, #36]	; 142e4 <_start@@Base+0xc0>
   142bc:	sub	r1, r1, r0
   142c0:	asr	r1, r1, #2
   142c4:	add	r1, r1, r1, lsr #31
   142c8:	asrs	r1, r1, #1
   142cc:	bxeq	lr
   142d0:	ldr	r3, [pc, #16]	; 142e8 <_start@@Base+0xc4>
   142d4:	cmp	r3, #0
   142d8:	bxeq	lr
   142dc:	bx	r3
   142e0:	andeq	fp, r5, ip, lsr #1
   142e4:	andeq	fp, r5, ip, lsr #1
   142e8:	andeq	r0, r0, r0
   142ec:	push	{r4, lr}
   142f0:	ldr	r4, [pc, #24]	; 14310 <_start@@Base+0xec>
   142f4:	ldrb	r3, [r4]
   142f8:	cmp	r3, #0
   142fc:	popne	{r4, pc}
   14300:	bl	14284 <_start@@Base+0x60>
   14304:	mov	r3, #1
   14308:	strb	r3, [r4]
   1430c:	pop	{r4, pc}
   14310:	strheq	fp, [r5], -r8
   14314:	ldr	r0, [pc, #40]	; 14344 <_start@@Base+0x120>
   14318:	ldr	r3, [r0]
   1431c:	cmp	r3, #0
   14320:	bne	14328 <_start@@Base+0x104>
   14324:	b	142b4 <_start@@Base+0x90>
   14328:	ldr	r3, [pc, #24]	; 14348 <_start@@Base+0x124>
   1432c:	cmp	r3, #0
   14330:	beq	14324 <_start@@Base+0x100>
   14334:	push	{r4, lr}
   14338:	blx	r3
   1433c:	pop	{r4, lr}
   14340:	b	142b4 <_start@@Base+0x90>
   14344:	andeq	sl, r5, r4, lsl pc
   14348:	andeq	r0, r0, r0
   1434c:	mov	r2, #1
   14350:	add	r0, r0, #172	; 0xac
   14354:	b	229b8 <ptr_set_insert_item@@Base>
   14358:	cmp	r0, #0
   1435c:	bne	1437c <_start@@Base+0x158>
   14360:	ldr	r3, [pc, #24]	; 14380 <_start@@Base+0x15c>
   14364:	push	{r4, lr}
   14368:	ldr	r1, [r3]
   1436c:	ldr	r0, [pc, #16]	; 14384 <_start@@Base+0x160>
   14370:	bl	14070 <fputs@plt>
   14374:	mov	r0, #1
   14378:	bl	13fbc <exit@plt>
   1437c:	bx	lr
   14380:	strheq	fp, [r5], -r0
   14384:	andeq	r0, r3, lr, ror #9

00014388 <flatcc_init_options@@Base>:
   14388:	push	{r4, lr}
   1438c:	mov	r2, #224	; 0xe0
   14390:	mov	r4, r0
   14394:	mov	r1, #0
   14398:	bl	13fec <memset@plt>
   1439c:	mov	r1, #2
   143a0:	ldr	r0, [pc, #136]	; 14430 <flatcc_init_options@@Base+0xa8>
   143a4:	str	r1, [r4, #68]	; 0x44
   143a8:	mov	r1, #0
   143ac:	mov	r3, #65536	; 0x10000
   143b0:	strd	r0, [r4, #88]	; 0x58
   143b4:	ldr	r1, [pc, #120]	; 14434 <flatcc_init_options@@Base+0xac>
   143b8:	str	r3, [r4]
   143bc:	str	r1, [r4, #96]	; 0x60
   143c0:	ldr	r1, [pc, #112]	; 14438 <flatcc_init_options@@Base+0xb0>
   143c4:	mov	r3, #100	; 0x64
   143c8:	str	r1, [r4, #100]	; 0x64
   143cc:	ldr	r1, [pc, #104]	; 1443c <flatcc_init_options@@Base+0xb4>
   143d0:	mov	r2, #4
   143d4:	str	r3, [r4, #4]
   143d8:	str	r3, [r4, #8]
   143dc:	mov	r3, #1
   143e0:	str	r3, [r4, #16]
   143e4:	str	r3, [r4, #20]
   143e8:	str	r3, [r4, #24]
   143ec:	str	r3, [r4, #28]
   143f0:	str	r3, [r4, #32]
   143f4:	str	r3, [r4, #36]	; 0x24
   143f8:	str	r3, [r4, #40]	; 0x28
   143fc:	str	r3, [r4, #44]	; 0x2c
   14400:	str	r3, [r4, #48]	; 0x30
   14404:	str	r3, [r4, #52]	; 0x34
   14408:	str	r2, [r4, #64]	; 0x40
   1440c:	str	r3, [r4, #72]	; 0x48
   14410:	str	r3, [r4, #76]	; 0x4c
   14414:	str	r3, [r4, #84]	; 0x54
   14418:	str	r1, [r4, #104]	; 0x68
   1441c:	str	r3, [r4, #136]	; 0x88
   14420:	str	r3, [r4, #140]	; 0x8c
   14424:	str	r2, [r4, #176]	; 0xb0
   14428:	str	r3, [r4, #184]	; 0xb8
   1442c:	pop	{r4, pc}
   14430:	strdeq	pc, [r0], -lr
   14434:	andeq	pc, r2, r4, asr r5	; <UNPREDICTABLE>
   14438:	andeq	r0, r3, r1, lsl r5
   1443c:	andeq	r0, r3, r7, lsl r5

00014440 <flatcc_create_context@@Base>:
   14440:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   14444:	mov	r6, r0
   14448:	mov	r0, #560	; 0x230
   1444c:	mov	r7, r1
   14450:	mov	r8, r2
   14454:	mov	r9, r3
   14458:	bl	13f8c <malloc@plt>
   1445c:	subs	r4, r0, #0
   14460:	moveq	r0, r4
   14464:	beq	14498 <flatcc_create_context@@Base+0x58>
   14468:	mov	r5, #0
   1446c:	str	r5, [sp, #4]
   14470:	str	r9, [sp]
   14474:	mov	r3, r8
   14478:	mov	r2, r7
   1447c:	mov	r1, r6
   14480:	bl	25358 <__flatcc_fb_init_parser@@Base>
   14484:	cmp	r0, r5
   14488:	mov	r0, r4
   1448c:	beq	14498 <flatcc_create_context@@Base+0x58>
   14490:	bl	13f14 <free@plt>
   14494:	mov	r0, r5
   14498:	add	sp, sp, #12
   1449c:	pop	{r4, r5, r6, r7, r8, r9, pc}

000144a0 <flatcc_parse_buffer@@Base>:
   144a0:	ldr	r3, [r0, #128]	; 0x80
   144a4:	push	{r4, r5, r6, r7, r8, lr}
   144a8:	mov	r6, r2
   144ac:	cmp	r3, #0
   144b0:	cmpne	r3, r6
   144b4:	mov	r2, #1
   144b8:	str	r2, [r0, #140]	; 0x8c
   144bc:	movcc	r5, #1
   144c0:	movcs	r5, #0
   144c4:	bcs	144d8 <flatcc_parse_buffer@@Base+0x38>
   144c8:	ldr	r1, [pc, #76]	; 1451c <flatcc_parse_buffer@@Base+0x7c>
   144cc:	bl	243c8 <__flatcc_fb_print_error@@Base>
   144d0:	mvn	r0, #0
   144d4:	pop	{r4, r5, r6, r7, r8, pc}
   144d8:	mov	r4, r0
   144dc:	mov	r7, r1
   144e0:	add	r1, r0, #352	; 0x160
   144e4:	add	r0, r0, #524	; 0x20c
   144e8:	bl	229b8 <ptr_set_insert_item@@Base>
   144ec:	mov	r3, r5
   144f0:	mov	r2, r6
   144f4:	mov	r1, r7
   144f8:	mov	r0, r4
   144fc:	bl	25550 <__flatcc_fb_parse@@Base>
   14500:	cmp	r0, #0
   14504:	bne	144d0 <flatcc_parse_buffer@@Base+0x30>
   14508:	mov	r0, r4
   1450c:	bl	283e4 <__flatcc_fb_build_schema@@Base>
   14510:	adds	r0, r0, #0
   14514:	mvnne	r0, #0
   14518:	pop	{r4, r5, r6, r7, r8, pc}
   1451c:	andeq	r0, r3, ip, lsl r5

00014520 <flatcc_generate_binary_schema_to_buffer@@Base>:
   14520:	push	{r0, r1, r2, lr}
   14524:	add	r3, sp, #8
   14528:	str	r2, [r3, #-4]!
   1452c:	mov	r2, r1
   14530:	add	r1, r0, #352	; 0x160
   14534:	add	r0, r0, #128	; 0x80
   14538:	bl	21dac <__flatcc_fb_codegen_bfbs_to_buffer@@Base>
   1453c:	cmp	r0, #0
   14540:	mvneq	r0, #0
   14544:	ldrne	r0, [sp, #4]
   14548:	add	sp, sp, #12
   1454c:	pop	{pc}		; (ldr pc, [sp], #4)

00014550 <flatcc_generate_binary_schema@@Base>:
   14550:	mov	r2, r1
   14554:	add	r1, r0, #352	; 0x160
   14558:	add	r0, r0, #128	; 0x80
   1455c:	b	21e1c <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base>

00014560 <flatcc_generate_files@@Base>:
   14560:	push	{r4, r5, r6, r7, lr}
   14564:	subs	r4, r0, #0
   14568:	sub	sp, sp, #236	; 0xec
   1456c:	bne	14580 <flatcc_generate_files@@Base+0x20>
   14570:	mvn	r5, #0
   14574:	mov	r0, r5
   14578:	add	sp, sp, #236	; 0xec
   1457c:	pop	{r4, r5, r6, r7, pc}
   14580:	ldr	r3, [r4, #108]	; 0x6c
   14584:	cmp	r3, #0
   14588:	moveq	r6, r4
   1458c:	bne	14570 <flatcc_generate_files@@Base+0x10>
   14590:	ldr	r2, [r6]
   14594:	str	r3, [r6, #4]
   14598:	cmp	r2, #0
   1459c:	mov	r3, r6
   145a0:	bne	14608 <flatcc_generate_files@@Base+0xa8>
   145a4:	ldr	r3, [r4, #308]	; 0x134
   145a8:	add	r5, r4, #128	; 0x80
   145ac:	cmp	r3, #0
   145b0:	bne	14610 <flatcc_generate_files@@Base+0xb0>
   145b4:	mov	r1, r5
   145b8:	mov	r0, sp
   145bc:	bl	14d90 <__flatcc_fb_init_output_c@@Base>
   145c0:	subs	r7, r0, #0
   145c4:	bne	14570 <flatcc_generate_files@@Base+0x10>
   145c8:	ldr	r3, [r4, #256]	; 0x100
   145cc:	cmp	r3, #0
   145d0:	beq	14628 <flatcc_generate_files@@Base+0xc8>
   145d4:	ldr	r5, [r4, #120]	; 0x78
   145d8:	cmp	r5, #0
   145dc:	beq	14638 <flatcc_generate_files@@Base+0xd8>
   145e0:	ldr	r3, [r4, #300]	; 0x12c
   145e4:	cmp	r3, #0
   145e8:	movne	r5, r7
   145ec:	movne	r4, #1
   145f0:	bne	1466c <flatcc_generate_files@@Base+0x10c>
   145f4:	add	r1, r4, #352	; 0x160
   145f8:	mov	r0, sp
   145fc:	bl	15250 <__flatcc_fb_codegen_c@@Base>
   14600:	mov	r5, r0
   14604:	b	14638 <flatcc_generate_files@@Base+0xd8>
   14608:	mov	r6, r2
   1460c:	b	14590 <flatcc_generate_files@@Base+0x30>
   14610:	add	r1, r4, #352	; 0x160
   14614:	mov	r0, r5
   14618:	bl	21e80 <__flatcc_fb_codegen_bfbs_to_file@@Base>
   1461c:	cmp	r0, #0
   14620:	beq	145b4 <flatcc_generate_files@@Base+0x54>
   14624:	b	14570 <flatcc_generate_files@@Base+0x10>
   14628:	mov	r0, sp
   1462c:	bl	151a0 <__flatcc_fb_codegen_common_c@@Base>
   14630:	subs	r5, r0, #0
   14634:	beq	145d4 <flatcc_generate_files@@Base+0x74>
   14638:	mov	r0, sp
   1463c:	bl	14d5c <__flatcc_fb_end_output_c@@Base>
   14640:	b	14574 <flatcc_generate_files@@Base+0x14>
   14644:	ldr	r3, [r6, #108]	; 0x6c
   14648:	cmp	r3, #0
   1464c:	movne	r5, r4
   14650:	bne	14668 <flatcc_generate_files@@Base+0x108>
   14654:	add	r1, r6, #352	; 0x160
   14658:	mov	r0, sp
   1465c:	bl	15250 <__flatcc_fb_codegen_c@@Base>
   14660:	adds	r5, r0, #0
   14664:	movne	r5, #1
   14668:	ldr	r6, [r6, #4]
   1466c:	eor	r3, r5, #1
   14670:	cmp	r6, #0
   14674:	moveq	r3, #0
   14678:	andne	r3, r3, #1
   1467c:	cmp	r3, #0
   14680:	bne	14644 <flatcc_generate_files@@Base+0xe4>
   14684:	b	14638 <flatcc_generate_files@@Base+0xd8>

00014688 <flatcc_destroy_context@@Base>:
   14688:	push	{r4, r5, r6, lr}
   1468c:	mov	r4, r0
   14690:	cmp	r4, #0
   14694:	bne	1469c <flatcc_destroy_context@@Base+0x14>
   14698:	pop	{r4, r5, r6, pc}
   1469c:	mov	r0, r4
   146a0:	ldr	r5, [r4]
   146a4:	bl	274b0 <__flatcc_fb_clear_parser@@Base>
   146a8:	mov	r0, r4
   146ac:	bl	13f14 <free@plt>
   146b0:	mov	r4, r5
   146b4:	b	14690 <flatcc_destroy_context@@Base+0x8>

000146b8 <flatcc_parse_file@@Base>:
   146b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   146bc:	mov	r4, r0
   146c0:	sub	sp, sp, #28
   146c4:	mov	r0, r1
   146c8:	mov	r5, r1
   146cc:	bl	13fc8 <strlen@plt>
   146d0:	add	r7, r4, #352	; 0x160
   146d4:	mov	r2, #1
   146d8:	mov	r1, r7
   146dc:	mov	r8, r0
   146e0:	ldr	r0, [r4, #412]	; 0x19c
   146e4:	add	r0, r0, #32
   146e8:	bl	23ae4 <fb_schema_table_insert_item@@Base>
   146ec:	cmp	r0, #0
   146f0:	beq	146fc <flatcc_parse_file@@Base+0x44>
   146f4:	mov	r8, #0
   146f8:	b	14b30 <flatcc_parse_file@@Base+0x478>
   146fc:	ldr	r3, [r4, #552]	; 0x228
   14700:	cmp	r3, #0
   14704:	str	r3, [sp, #8]
   14708:	beq	1472c <flatcc_parse_file@@Base+0x74>
   1470c:	mov	r6, #0
   14710:	ldr	fp, [pc, #1280]	; 14c18 <flatcc_parse_file@@Base+0x560>
   14714:	mov	r9, r6
   14718:	ldr	r3, [r4, #336]	; 0x150
   1471c:	cmp	r3, r6
   14720:	bgt	14848 <flatcc_parse_file@@Base+0x190>
   14724:	mov	sl, #0
   14728:	b	14788 <flatcc_parse_file@@Base+0xd0>
   1472c:	add	r2, sp, #20
   14730:	ldr	r1, [r4, #128]	; 0x80
   14734:	mov	r0, r5
   14738:	bl	23f80 <__flatcc_fb_read_file@@Base>
   1473c:	subs	sl, r0, #0
   14740:	bne	14778 <flatcc_parse_file@@Base+0xc0>
   14744:	ldr	r3, [r4, #412]	; 0x19c
   14748:	ldr	r1, [sp, #20]
   1474c:	ldr	r2, [r4, #128]	; 0x80
   14750:	ldr	r3, [r3, #56]	; 0x38
   14754:	add	r3, r3, r1
   14758:	cmp	r2, #0
   1475c:	cmpne	r3, r2
   14760:	bls	1470c <flatcc_parse_file@@Base+0x54>
   14764:	ldr	r1, [pc, #1200]	; 14c1c <flatcc_parse_file@@Base+0x564>
   14768:	mov	r0, r4
   1476c:	bl	243c8 <__flatcc_fb_print_error@@Base>
   14770:	mvn	r8, #0
   14774:	b	14b30 <flatcc_parse_file@@Base+0x478>
   14778:	mov	r0, r5
   1477c:	bl	23b74 <__flatcc_fb_copy_path@@Base>
   14780:	mov	r9, r0
   14784:	bl	14358 <_start@@Base+0x134>
   14788:	ldr	r2, [sp, #8]
   1478c:	clz	r3, sl
   14790:	cmp	r2, #0
   14794:	lsr	r3, r3, #5
   14798:	moveq	r3, #0
   1479c:	cmp	r3, #0
   147a0:	beq	148c8 <flatcc_parse_file@@Base+0x210>
   147a4:	ldr	r6, [r4, #552]	; 0x228
   147a8:	mov	r0, r6
   147ac:	bl	13fc8 <strlen@plt>
   147b0:	mov	r1, r0
   147b4:	mov	r0, r6
   147b8:	bl	23ef8 <__flatcc_fb_find_basename@@Base>
   147bc:	mov	r3, #1
   147c0:	str	r3, [sp, #4]
   147c4:	ldr	r3, [pc, #1100]	; 14c18 <flatcc_parse_file@@Base+0x560>
   147c8:	mov	r2, r5
   147cc:	str	r3, [sp]
   147d0:	mov	r3, r8
   147d4:	mov	r1, r0
   147d8:	mov	r0, r6
   147dc:	bl	23bf8 <__flatcc_fb_create_join_path_n@@Base>
   147e0:	mov	r6, r0
   147e4:	bl	14358 <_start@@Base+0x134>
   147e8:	add	r2, sp, #20
   147ec:	ldr	r1, [r4, #128]	; 0x80
   147f0:	mov	r0, r6
   147f4:	bl	23f80 <__flatcc_fb_read_file@@Base>
   147f8:	subs	r9, r0, #0
   147fc:	movne	sl, r9
   14800:	movne	r9, r6
   14804:	bne	148d0 <flatcc_parse_file@@Base+0x218>
   14808:	mov	r0, r6
   1480c:	bl	13f14 <free@plt>
   14810:	ldr	r3, [r4, #128]	; 0x80
   14814:	ldr	r2, [sp, #20]
   14818:	cmp	r3, #0
   1481c:	cmpne	r3, r2
   14820:	bcc	14764 <flatcc_parse_file@@Base+0xac>
   14824:	mov	r2, r5
   14828:	ldr	r1, [pc, #1008]	; 14c20 <flatcc_parse_file@@Base+0x568>
   1482c:	mov	r0, r4
   14830:	bl	243c8 <__flatcc_fb_print_error@@Base>
   14834:	cmp	r9, #0
   14838:	beq	14770 <flatcc_parse_file@@Base+0xb8>
   1483c:	mov	r0, r9
   14840:	bl	13f14 <free@plt>
   14844:	b	14770 <flatcc_parse_file@@Base+0xb8>
   14848:	ldr	r3, [r4, #328]	; 0x148
   1484c:	ldr	r9, [r3, r6, lsl #2]
   14850:	mov	r0, r9
   14854:	bl	13fc8 <strlen@plt>
   14858:	mov	r3, #1
   1485c:	mov	r2, r5
   14860:	str	r3, [sp, #4]
   14864:	str	fp, [sp]
   14868:	mov	r3, r8
   1486c:	mov	r1, r0
   14870:	mov	r0, r9
   14874:	bl	23bf8 <__flatcc_fb_create_join_path_n@@Base>
   14878:	mov	r9, r0
   1487c:	bl	14358 <_start@@Base+0x134>
   14880:	add	r2, sp, #20
   14884:	ldr	r1, [r4, #128]	; 0x80
   14888:	mov	r0, r9
   1488c:	bl	23f80 <__flatcc_fb_read_file@@Base>
   14890:	subs	sl, r0, #0
   14894:	bne	148b8 <flatcc_parse_file@@Base+0x200>
   14898:	mov	r0, r9
   1489c:	bl	13f14 <free@plt>
   148a0:	ldr	r3, [r4, #128]	; 0x80
   148a4:	ldr	r2, [sp, #20]
   148a8:	cmp	r3, #0
   148ac:	cmpne	r3, r2
   148b0:	bcc	14764 <flatcc_parse_file@@Base+0xac>
   148b4:	mov	r9, sl
   148b8:	cmp	sl, #0
   148bc:	add	r6, r6, #1
   148c0:	beq	14718 <flatcc_parse_file@@Base+0x60>
   148c4:	b	14788 <flatcc_parse_file@@Base+0xd0>
   148c8:	cmp	sl, #0
   148cc:	beq	14824 <flatcc_parse_file@@Base+0x16c>
   148d0:	ldr	r0, [r4, #412]	; 0x19c
   148d4:	ldr	r2, [sp, #20]
   148d8:	mov	r1, sl
   148dc:	ldr	r3, [r0, #56]	; 0x38
   148e0:	add	r3, r3, r2
   148e4:	str	r3, [r0, #56]	; 0x38
   148e8:	str	r9, [r4, #548]	; 0x224
   148ec:	mov	r3, #1
   148f0:	mov	r0, r4
   148f4:	bl	25550 <__flatcc_fb_parse@@Base>
   148f8:	subs	r8, r0, #0
   148fc:	bne	146f4 <flatcc_parse_file@@Base+0x3c>
   14900:	ldr	r9, [r4, #352]	; 0x160
   14904:	ldr	fp, [pc, #792]	; 14c24 <flatcc_parse_file@@Base+0x56c>
   14908:	add	r3, r4, #128	; 0x80
   1490c:	str	r3, [sp, #12]
   14910:	cmp	r9, #0
   14914:	bne	14978 <flatcc_parse_file@@Base+0x2c0>
   14918:	mov	r2, #1
   1491c:	mov	r1, r7
   14920:	add	r0, r4, #524	; 0x20c
   14924:	bl	229b8 <ptr_set_insert_item@@Base>
   14928:	mov	r0, r4
   1492c:	bl	283e4 <__flatcc_fb_build_schema@@Base>
   14930:	subs	r8, r0, #0
   14934:	bne	146f4 <flatcc_parse_file@@Base+0x3c>
   14938:	ldr	r3, [r4, #240]	; 0xf0
   1493c:	ldr	r2, [sp, #8]
   14940:	adds	r3, r3, #0
   14944:	movne	r3, #1
   14948:	cmp	r2, #0
   1494c:	movne	r3, #0
   14950:	cmp	r3, #0
   14954:	beq	146f4 <flatcc_parse_file@@Base+0x3c>
   14958:	ldr	r3, [r4, #552]	; 0x228
   1495c:	cmp	r3, #0
   14960:	beq	14a44 <flatcc_parse_file@@Base+0x38c>
   14964:	ldr	r3, [pc, #700]	; 14c28 <flatcc_parse_file@@Base+0x570>
   14968:	mov	r2, #220	; 0xdc
   1496c:	ldr	r1, [pc, #696]	; 14c2c <flatcc_parse_file@@Base+0x574>
   14970:	ldr	r0, [pc, #696]	; 14c30 <flatcc_parse_file@@Base+0x578>
   14974:	bl	14094 <__assert_fail@plt>
   14978:	ldr	r1, [r9, #12]
   1497c:	ldr	r0, [r9, #8]
   14980:	bl	23b28 <__flatcc_fb_copy_path_n@@Base>
   14984:	mov	sl, r0
   14988:	bl	14358 <_start@@Base+0x134>
   1498c:	ldr	r5, [r4, #412]	; 0x19c
   14990:	ldr	r3, [r4, #132]	; 0x84
   14994:	ldr	r2, [r5, #52]	; 0x34
   14998:	cmp	r2, r3
   1499c:	cmpge	r3, #0
   149a0:	ble	149c4 <flatcc_parse_file@@Base+0x30c>
   149a4:	ldr	r1, [pc, #648]	; 14c34 <flatcc_parse_file@@Base+0x57c>
   149a8:	mov	r0, r4
   149ac:	bl	243c8 <__flatcc_fb_print_error@@Base>
   149b0:	cmp	sl, #0
   149b4:	beq	146f4 <flatcc_parse_file@@Base+0x3c>
   149b8:	mov	r0, sl
   149bc:	bl	13f14 <free@plt>
   149c0:	b	14b30 <flatcc_parse_file@@Base+0x478>
   149c4:	ldr	r3, [r4, #136]	; 0x88
   149c8:	ldr	r2, [r5, #48]	; 0x30
   149cc:	cmp	r2, r3
   149d0:	cmpge	r3, #0
   149d4:	ldrgt	r1, [pc, #604]	; 14c38 <flatcc_parse_file@@Base+0x580>
   149d8:	bgt	149a8 <flatcc_parse_file@@Base+0x2f0>
   149dc:	mov	r0, #560	; 0x230
   149e0:	bl	13f8c <malloc@plt>
   149e4:	subs	r6, r0, #0
   149e8:	beq	149b0 <flatcc_parse_file@@Base+0x2f8>
   149ec:	str	r5, [sp, #4]
   149f0:	ldr	r3, [r4, #12]
   149f4:	mov	r2, sl
   149f8:	str	r3, [sp]
   149fc:	ldr	r1, [sp, #12]
   14a00:	ldr	r3, [r4, #8]
   14a04:	bl	25358 <__flatcc_fb_init_parser@@Base>
   14a08:	cmp	r0, #0
   14a0c:	beq	14bb0 <flatcc_parse_file@@Base+0x4f8>
   14a10:	mov	r0, r6
   14a14:	bl	13f14 <free@plt>
   14a18:	b	149b0 <flatcc_parse_file@@Base+0x2f8>
   14a1c:	add	r0, r0, #172	; 0xac
   14a20:	mov	r2, r7
   14a24:	mov	r1, fp
   14a28:	bl	229d4 <ptr_set_visit@@Base>
   14a2c:	mov	r0, r6
   14a30:	bl	14688 <flatcc_destroy_context@@Base>
   14a34:	mov	r0, sl
   14a38:	bl	13f14 <free@plt>
   14a3c:	ldr	r9, [r9]
   14a40:	b	14910 <flatcc_parse_file@@Base+0x258>
   14a44:	ldr	r5, [r4, #344]	; 0x158
   14a48:	ldr	r2, [pc, #456]	; 14c18 <flatcc_parse_file@@Base+0x560>
   14a4c:	ldr	r1, [r4, #244]	; 0xf4
   14a50:	cmp	r5, #0
   14a54:	moveq	r5, r2
   14a58:	ldr	r9, [r4, #512]	; 0x200
   14a5c:	cmp	r1, #0
   14a60:	ldr	r3, [r4, #248]	; 0xf8
   14a64:	movne	r0, r2
   14a68:	moveq	r0, r5
   14a6c:	moveq	r1, r9
   14a70:	ldreq	r2, [pc, #452]	; 14c3c <flatcc_parse_file@@Base+0x584>
   14a74:	cmp	r3, #0
   14a78:	bne	14b3c <flatcc_parse_file@@Base+0x484>
   14a7c:	ldr	ip, [r4, #308]	; 0x134
   14a80:	ldr	r3, [pc, #440]	; 14c40 <flatcc_parse_file@@Base+0x588>
   14a84:	cmp	ip, #0
   14a88:	ldr	r7, [pc, #436]	; 14c44 <flatcc_parse_file@@Base+0x58c>
   14a8c:	moveq	r7, r3
   14a90:	mov	r3, #1
   14a94:	bl	23d18 <__flatcc_fb_create_join_path@@Base>
   14a98:	mov	r6, r0
   14a9c:	bl	14358 <_start@@Base+0x134>
   14aa0:	mov	r2, r7
   14aa4:	mov	r3, #1
   14aa8:	mov	r1, r9
   14aac:	mov	r0, r5
   14ab0:	bl	23d18 <__flatcc_fb_create_join_path@@Base>
   14ab4:	mov	r5, r0
   14ab8:	bl	14358 <_start@@Base+0x134>
   14abc:	mov	r0, r5
   14ac0:	bl	23edc <__flatcc_fb_create_make_path@@Base>
   14ac4:	mov	r7, r0
   14ac8:	bl	14358 <_start@@Base+0x134>
   14acc:	cmp	r5, #0
   14ad0:	beq	14adc <flatcc_parse_file@@Base+0x424>
   14ad4:	mov	r0, r5
   14ad8:	bl	13f14 <free@plt>
   14adc:	ldr	r1, [pc, #356]	; 14c48 <flatcc_parse_file@@Base+0x590>
   14ae0:	mov	r0, r6
   14ae4:	bl	13f08 <fopen@plt>
   14ae8:	subs	r5, r0, #0
   14aec:	bne	14b4c <flatcc_parse_file@@Base+0x494>
   14af0:	mov	r2, r6
   14af4:	ldr	r1, [pc, #336]	; 14c4c <flatcc_parse_file@@Base+0x594>
   14af8:	mov	r0, r4
   14afc:	bl	243c8 <__flatcc_fb_print_error@@Base>
   14b00:	cmp	r6, #0
   14b04:	beq	14b10 <flatcc_parse_file@@Base+0x458>
   14b08:	mov	r0, r6
   14b0c:	bl	13f14 <free@plt>
   14b10:	cmp	r7, #0
   14b14:	beq	14b20 <flatcc_parse_file@@Base+0x468>
   14b18:	mov	r0, r7
   14b1c:	bl	13f14 <free@plt>
   14b20:	cmp	r5, #0
   14b24:	beq	146f4 <flatcc_parse_file@@Base+0x3c>
   14b28:	mov	r0, r5
   14b2c:	bl	1401c <fclose@plt>
   14b30:	mov	r0, r8
   14b34:	add	sp, sp, #28
   14b38:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14b3c:	ldr	r5, [pc, #212]	; 14c18 <flatcc_parse_file@@Base+0x560>
   14b40:	mov	r9, r3
   14b44:	mov	r7, r5
   14b48:	b	14a90 <flatcc_parse_file@@Base+0x3d8>
   14b4c:	mov	r2, r7
   14b50:	ldr	r1, [pc, #248]	; 14c50 <flatcc_parse_file@@Base+0x598>
   14b54:	bl	13fd4 <fprintf@plt>
   14b58:	ldr	sl, [pc, #244]	; 14c54 <flatcc_parse_file@@Base+0x59c>
   14b5c:	ldr	r4, [r4]
   14b60:	cmp	r4, #0
   14b64:	bne	14b78 <flatcc_parse_file@@Base+0x4c0>
   14b68:	mov	r1, r5
   14b6c:	mov	r0, #10
   14b70:	bl	14034 <fputc@plt>
   14b74:	b	14b00 <flatcc_parse_file@@Base+0x448>
   14b78:	ldr	r0, [r4, #548]	; 0x224
   14b7c:	bl	23edc <__flatcc_fb_create_make_path@@Base>
   14b80:	mov	r9, r0
   14b84:	bl	14358 <_start@@Base+0x134>
   14b88:	mov	r2, r9
   14b8c:	mov	r1, sl
   14b90:	mov	r0, r5
   14b94:	bl	13fd4 <fprintf@plt>
   14b98:	cmp	r9, #0
   14b9c:	ldr	r4, [r4]
   14ba0:	beq	14b60 <flatcc_parse_file@@Base+0x4a8>
   14ba4:	mov	r0, r9
   14ba8:	bl	13f14 <free@plt>
   14bac:	b	14b60 <flatcc_parse_file@@Base+0x4a8>
   14bb0:	add	r1, r6, #352	; 0x160
   14bb4:	add	r0, r5, #32
   14bb8:	bl	23b08 <fb_schema_table_find_item@@Base>
   14bbc:	cmp	r0, #0
   14bc0:	bne	14a1c <flatcc_parse_file@@Base+0x364>
   14bc4:	ldr	r3, [r4]
   14bc8:	str	r6, [r4]
   14bcc:	str	r3, [r6]
   14bd0:	ldr	r3, [r4, #548]	; 0x224
   14bd4:	mov	r1, sl
   14bd8:	str	r3, [r6, #552]	; 0x228
   14bdc:	ldr	r3, [r5, #52]	; 0x34
   14be0:	mov	r0, r6
   14be4:	add	r3, r3, #1
   14be8:	str	r3, [r5, #52]	; 0x34
   14bec:	ldr	r3, [r5, #48]	; 0x30
   14bf0:	add	r3, r3, #1
   14bf4:	str	r3, [r5, #48]	; 0x30
   14bf8:	bl	146b8 <flatcc_parse_file@@Base>
   14bfc:	cmp	r0, #0
   14c00:	bne	149b0 <flatcc_parse_file@@Base+0x2f8>
   14c04:	mov	r2, r7
   14c08:	mov	r1, fp
   14c0c:	add	r0, r6, #524	; 0x20c
   14c10:	bl	229d4 <ptr_set_visit@@Base>
   14c14:	b	14a34 <flatcc_parse_file@@Base+0x37c>
   14c18:	andeq	r1, r3, r1, lsr #28
   14c1c:	andeq	r0, r3, ip, lsl r5
   14c20:	andeq	r0, r3, r7, asr #10
   14c24:	andeq	r4, r1, ip, asr #6
   14c28:	ldrdeq	r0, [r3], -r4
   14c2c:	andeq	r0, r3, sp, lsr #11
   14c30:	strdeq	r0, [r3], -r3
   14c34:	andeq	r0, r3, pc, ror #10
   14c38:	andeq	r0, r3, pc, lsl #11
   14c3c:	andeq	r0, r3, r0, asr #10
   14c40:	andeq	r6, r4, fp, asr #18
   14c44:	andeq	r0, r3, r1, lsl r5
   14c48:	andeq	r0, r3, r8, lsl #12
   14c4c:	andeq	r0, r3, fp, lsl #12
   14c50:	andeq	r0, r3, sl, lsr r6
   14c54:	andeq	r0, r3, lr, lsr r6
   14c58:	mov	r0, r1
   14c5c:	b	13f14 <free@plt>

00014c60 <__flatcc_fb_open_output_file@@Base>:
   14c60:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   14c64:	mov	r9, r3
   14c68:	ldr	r3, [r0, #212]	; 0xd4
   14c6c:	mov	r6, r0
   14c70:	mov	r7, r1
   14c74:	ldr	r5, [r3, #216]	; 0xd8
   14c78:	ldr	r3, [pc, #140]	; 14d0c <__flatcc_fb_open_output_file@@Base+0xac>
   14c7c:	cmp	r5, #0
   14c80:	moveq	r5, r3
   14c84:	mov	r0, r5
   14c88:	mov	r8, r2
   14c8c:	bl	13fc8 <strlen@plt>
   14c90:	ldr	r4, [r6, #204]	; 0xcc
   14c94:	cmp	r4, #0
   14c98:	movne	r4, #0
   14c9c:	bne	14d00 <__flatcc_fb_open_output_file@@Base+0xa0>
   14ca0:	mov	r3, #1
   14ca4:	str	r3, [sp, #4]
   14ca8:	mov	r1, r0
   14cac:	str	r9, [sp]
   14cb0:	mov	r0, r5
   14cb4:	mov	r3, r8
   14cb8:	mov	r2, r7
   14cbc:	bl	23bf8 <__flatcc_fb_create_join_path_n@@Base>
   14cc0:	subs	r5, r0, #0
   14cc4:	bne	14ccc <__flatcc_fb_open_output_file@@Base+0x6c>
   14cc8:	bl	140a0 <__assert_fail@plt+0xc>
   14ccc:	ldr	r1, [pc, #60]	; 14d10 <__flatcc_fb_open_output_file@@Base+0xb0>
   14cd0:	bl	13f08 <fopen@plt>
   14cd4:	cmp	r0, #0
   14cd8:	str	r0, [r6, #204]	; 0xcc
   14cdc:	bne	14cf8 <__flatcc_fb_open_output_file@@Base+0x98>
   14ce0:	ldr	r3, [pc, #44]	; 14d14 <__flatcc_fb_open_output_file@@Base+0xb4>
   14ce4:	mov	r2, r5
   14ce8:	ldr	r1, [pc, #40]	; 14d18 <__flatcc_fb_open_output_file@@Base+0xb8>
   14cec:	ldr	r0, [r3]
   14cf0:	bl	13fd4 <fprintf@plt>
   14cf4:	mvn	r4, #0
   14cf8:	mov	r0, r5
   14cfc:	bl	13f14 <free@plt>
   14d00:	mov	r0, r4
   14d04:	add	sp, sp, #12
   14d08:	pop	{r4, r5, r6, r7, r8, r9, pc}
   14d0c:	andeq	r1, r3, r1, lsr #28
   14d10:	andeq	r0, r3, r8, lsl #12
   14d14:	strheq	fp, [r5], -r0
   14d18:	andeq	r0, r3, r2, asr #12

00014d1c <__flatcc_fb_close_output_file@@Base>:
   14d1c:	ldr	r3, [r0, #212]	; 0xd4
   14d20:	ldr	r2, [r3, #124]	; 0x7c
   14d24:	cmp	r2, #0
   14d28:	bxne	lr
   14d2c:	push	{r4, r5, r6, lr}
   14d30:	ldr	r5, [r3, #108]	; 0x6c
   14d34:	cmp	r5, #0
   14d38:	popne	{r4, r5, r6, pc}
   14d3c:	ldr	r3, [r0, #204]	; 0xcc
   14d40:	cmp	r3, #0
   14d44:	popeq	{r4, r5, r6, pc}
   14d48:	mov	r4, r0
   14d4c:	mov	r0, r3
   14d50:	bl	1401c <fclose@plt>
   14d54:	str	r5, [r4, #204]	; 0xcc
   14d58:	pop	{r4, r5, r6, pc}

00014d5c <__flatcc_fb_end_output_c@@Base>:
   14d5c:	ldr	r3, [pc, #40]	; 14d8c <__flatcc_fb_end_output_c@@Base+0x30>
   14d60:	push	{r4, lr}
   14d64:	mov	r4, r0
   14d68:	ldr	r3, [r3]
   14d6c:	ldr	r0, [r0, #204]	; 0xcc
   14d70:	cmp	r3, r0
   14d74:	cmpne	r0, #0
   14d78:	beq	14d80 <__flatcc_fb_end_output_c@@Base+0x24>
   14d7c:	bl	1401c <fclose@plt>
   14d80:	mov	r3, #0
   14d84:	str	r3, [r4, #204]	; 0xcc
   14d88:	pop	{r4, pc}
   14d8c:	strheq	fp, [r5], -r4

00014d90 <__flatcc_fb_init_output_c@@Base>:
   14d90:	ldr	r2, [r1, #128]	; 0x80
   14d94:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14d98:	cmp	r2, #0
   14d9c:	ldr	r3, [pc, #352]	; 14f04 <__flatcc_fb_init_output_c@@Base+0x174>
   14da0:	ldr	r8, [r1, #216]	; 0xd8
   14da4:	mov	r5, r1
   14da8:	ldr	r9, [pc, #344]	; 14f08 <__flatcc_fb_init_output_c@@Base+0x178>
   14dac:	moveq	r9, r3
   14db0:	ldr	r3, [pc, #340]	; 14f0c <__flatcc_fb_init_output_c@@Base+0x17c>
   14db4:	cmp	r8, #0
   14db8:	mov	r2, #232	; 0xe8
   14dbc:	mov	r1, #0
   14dc0:	mov	r4, r0
   14dc4:	moveq	r8, r3
   14dc8:	bl	13fec <memset@plt>
   14dcc:	ldr	r7, [r5, #196]	; 0xc4
   14dd0:	str	r5, [r4, #212]	; 0xd4
   14dd4:	cmp	r7, #0
   14dd8:	beq	14e10 <__flatcc_fb_init_output_c@@Base+0x80>
   14ddc:	mov	r0, r7
   14de0:	bl	13fc8 <strlen@plt>
   14de4:	cmp	r0, #100	; 0x64
   14de8:	mov	r6, r0
   14dec:	bls	14e18 <__flatcc_fb_init_output_c@@Base+0x88>
   14df0:	ldr	r3, [pc, #280]	; 14f10 <__flatcc_fb_init_output_c@@Base+0x180>
   14df4:	mov	r2, #100	; 0x64
   14df8:	ldr	r1, [pc, #276]	; 14f14 <__flatcc_fb_init_output_c@@Base+0x184>
   14dfc:	ldr	r0, [r3]
   14e00:	bl	13fd4 <fprintf@plt>
   14e04:	mvn	r5, #0
   14e08:	mov	r0, r5
   14e0c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14e10:	ldr	r7, [pc, #256]	; 14f18 <__flatcc_fb_init_output_c@@Base+0x188>
   14e14:	mov	r6, #11
   14e18:	mov	r1, r7
   14e1c:	mov	r2, #100	; 0x64
   14e20:	mov	r0, r4
   14e24:	bl	13ff8 <strncpy@plt>
   14e28:	mov	r2, #0
   14e2c:	cmp	r6, r2
   14e30:	movne	r3, r4
   14e34:	sub	fp, r4, #1
   14e38:	add	sl, r4, #102	; 0x66
   14e3c:	movne	r1, #95	; 0x5f
   14e40:	strb	r2, [r4, #100]	; 0x64
   14e44:	strbne	r1, [r3, r6]!
   14e48:	strbne	r2, [r3, #1]
   14e4c:	ldrb	r7, [fp, #1]!
   14e50:	cmp	r7, #0
   14e54:	bne	14e8c <__flatcc_fb_init_output_c@@Base+0xfc>
   14e58:	add	r6, r4, r6
   14e5c:	strb	r7, [sl]
   14e60:	strb	r7, [r6, #102]	; 0x66
   14e64:	ldr	r3, [r5, #176]	; 0xb0
   14e68:	ldr	r5, [r5, #108]	; 0x6c
   14e6c:	str	r3, [r4, #224]	; 0xe0
   14e70:	cmp	r5, #0
   14e74:	beq	14ea0 <__flatcc_fb_init_output_c@@Base+0x110>
   14e78:	ldr	r3, [pc, #156]	; 14f1c <__flatcc_fb_init_output_c@@Base+0x18c>
   14e7c:	mov	r5, r7
   14e80:	ldr	r3, [r3]
   14e84:	str	r3, [r4, #204]	; 0xcc
   14e88:	b	14e08 <__flatcc_fb_init_output_c@@Base+0x78>
   14e8c:	bl	13fa4 <__ctype_toupper_loc@plt>
   14e90:	ldr	r3, [r0]
   14e94:	ldr	r3, [r3, r7, lsl #2]
   14e98:	strb	r3, [sl], #1
   14e9c:	b	14e4c <__flatcc_fb_init_output_c@@Base+0xbc>
   14ea0:	ldr	r3, [r4, #212]	; 0xd4
   14ea4:	ldr	r1, [r3, #124]	; 0x7c
   14ea8:	cmp	r1, #0
   14eac:	beq	14e08 <__flatcc_fb_init_output_c@@Base+0x78>
   14eb0:	mov	r3, #1
   14eb4:	ldr	r2, [pc, #80]	; 14f0c <__flatcc_fb_init_output_c@@Base+0x17c>
   14eb8:	mov	r0, r8
   14ebc:	bl	23d18 <__flatcc_fb_create_join_path@@Base>
   14ec0:	subs	r6, r0, #0
   14ec4:	bne	14ecc <__flatcc_fb_init_output_c@@Base+0x13c>
   14ec8:	bl	140a0 <__assert_fail@plt+0xc>
   14ecc:	mov	r1, r9
   14ed0:	bl	13f08 <fopen@plt>
   14ed4:	cmp	r0, #0
   14ed8:	str	r0, [r4, #204]	; 0xcc
   14edc:	bne	14ef8 <__flatcc_fb_init_output_c@@Base+0x168>
   14ee0:	ldr	r3, [pc, #40]	; 14f10 <__flatcc_fb_init_output_c@@Base+0x180>
   14ee4:	mov	r2, r6
   14ee8:	ldr	r1, [pc, #48]	; 14f20 <__flatcc_fb_init_output_c@@Base+0x190>
   14eec:	ldr	r0, [r3]
   14ef0:	bl	13fd4 <fprintf@plt>
   14ef4:	mvn	r5, #0
   14ef8:	mov	r0, r6
   14efc:	bl	13f14 <free@plt>
   14f00:	b	14e08 <__flatcc_fb_init_output_c@@Base+0x78>
   14f04:	andeq	r0, r3, r8, lsl #12
   14f08:	andeq	r0, r3, r4, ror #12
   14f0c:	andeq	r1, r3, r1, lsr #28
   14f10:	strheq	fp, [r5], -r0
   14f14:	andeq	r0, r3, r3, ror r6
   14f18:	andeq	r0, r3, r7, ror #12
   14f1c:	strheq	fp, [r5], -r4
   14f20:	andeq	r0, r3, r2, asr #12

00014f24 <__flatcc_fb_gen_c_includes@@Base>:
   14f24:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14f28:	mov	r9, r2
   14f2c:	ldr	r5, [r0, #208]	; 0xd0
   14f30:	sub	sp, sp, #36	; 0x24
   14f34:	mov	r2, #16
   14f38:	mov	r6, r0
   14f3c:	mov	r8, r1
   14f40:	add	r0, sp, r2
   14f44:	mov	r1, #0
   14f48:	ldr	r4, [r5]
   14f4c:	bl	13fec <memset@plt>
   14f50:	ldr	r0, [r5, #164]	; 0xa4
   14f54:	bl	23b74 <__flatcc_fb_copy_path@@Base>
   14f58:	mov	r2, #1
   14f5c:	ldr	fp, [pc, #216]	; 1503c <__flatcc_fb_gen_c_includes@@Base+0x118>
   14f60:	mov	sl, #1
   14f64:	mov	r1, r0
   14f68:	add	r0, sp, #16
   14f6c:	bl	224b8 <str_set_insert_item@@Base>
   14f70:	cmp	r4, #0
   14f74:	bne	14f90 <__flatcc_fb_gen_c_includes@@Base+0x6c>
   14f78:	mov	r2, r4
   14f7c:	ldr	r1, [pc, #188]	; 15040 <__flatcc_fb_gen_c_includes@@Base+0x11c>
   14f80:	add	r0, sp, #16
   14f84:	bl	22440 <str_set_destroy@@Base>
   14f88:	add	sp, sp, #36	; 0x24
   14f8c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14f90:	ldr	r3, [r6, #212]	; 0xd4
   14f94:	ldr	r1, [r4, #12]
   14f98:	ldr	r0, [r4, #8]
   14f9c:	ldr	r2, [r3, #96]	; 0x60
   14fa0:	bl	23f28 <__flatcc_fb_create_basename@@Base>
   14fa4:	subs	r7, r0, #0
   14fa8:	bne	14fb0 <__flatcc_fb_gen_c_includes@@Base+0x8c>
   14fac:	bl	140a0 <__assert_fail@plt+0xc>
   14fb0:	ldr	r4, [r4]
   14fb4:	bl	23b74 <__flatcc_fb_copy_path@@Base>
   14fb8:	subs	r5, r0, #0
   14fbc:	beq	14fac <__flatcc_fb_gen_c_includes@@Base+0x88>
   14fc0:	mov	r3, r5
   14fc4:	ldrb	r2, [r3]
   14fc8:	cmp	r2, #0
   14fcc:	bne	14ffc <__flatcc_fb_gen_c_includes@@Base+0xd8>
   14fd0:	mov	r2, sl
   14fd4:	mov	r1, r5
   14fd8:	add	r0, sp, #16
   14fdc:	bl	224b8 <str_set_insert_item@@Base>
   14fe0:	cmp	r0, #0
   14fe4:	beq	15020 <__flatcc_fb_gen_c_includes@@Base+0xfc>
   14fe8:	mov	r0, r5
   14fec:	bl	13f14 <free@plt>
   14ff0:	mov	r0, r7
   14ff4:	bl	13f14 <free@plt>
   14ff8:	b	14f70 <__flatcc_fb_gen_c_includes@@Base+0x4c>
   14ffc:	str	r2, [sp, #12]
   15000:	str	r3, [sp, #8]
   15004:	bl	13fa4 <__ctype_toupper_loc@plt>
   15008:	ldr	r2, [sp, #12]
   1500c:	ldr	r3, [sp, #8]
   15010:	ldr	r1, [r0]
   15014:	ldr	r2, [r1, r2, lsl #2]
   15018:	strb	r2, [r3], #1
   1501c:	b	14fc4 <__flatcc_fb_gen_c_includes@@Base+0xa0>
   15020:	stm	sp, {r7, r8}
   15024:	mov	r3, r9
   15028:	mov	r2, r5
   1502c:	mov	r1, fp
   15030:	ldr	r0, [r6, #204]	; 0xcc
   15034:	bl	13fd4 <fprintf@plt>
   15038:	b	14ff0 <__flatcc_fb_gen_c_includes@@Base+0xcc>
   1503c:	andeq	r0, r3, sl, lsr #13
   15040:	andeq	r4, r1, r8, asr ip

00015044 <__flatcc_fb_copy_scope@@Base>:
   15044:	push	{r4, r5, r6, r7, r8, lr}
   15048:	ldr	r4, [r0, #24]
   1504c:	ldr	r3, [r0]
   15050:	mov	r2, r4
   15054:	cmp	r3, #0
   15058:	bne	15070 <__flatcc_fb_copy_scope@@Base+0x2c>
   1505c:	cmp	r2, #101	; 0x65
   15060:	bls	15088 <__flatcc_fb_copy_scope@@Base+0x44>
   15064:	strb	r3, [r1]
   15068:	mvn	r0, #0
   1506c:	pop	{r4, r5, r6, r7, r8, pc}
   15070:	ldr	ip, [r3, #4]
   15074:	ldr	r3, [r3]
   15078:	ldr	ip, [ip, #4]
   1507c:	add	ip, ip, #1
   15080:	add	r2, r2, ip
   15084:	b	15054 <__flatcc_fb_copy_scope@@Base+0x10>
   15088:	mov	r5, r1
   1508c:	mov	r6, r0
   15090:	ldr	r1, [r0, #20]
   15094:	mov	r2, r4
   15098:	mov	r0, r5
   1509c:	bl	13f20 <memcpy@plt>
   150a0:	ldr	r6, [r6]
   150a4:	mov	r8, #95	; 0x5f
   150a8:	cmp	r6, #0
   150ac:	bne	150bc <__flatcc_fb_copy_scope@@Base+0x78>
   150b0:	strb	r6, [r5, r4]
   150b4:	mov	r0, r4
   150b8:	pop	{r4, r5, r6, r7, r8, pc}
   150bc:	ldr	r3, [r6, #4]
   150c0:	add	r0, r5, r4
   150c4:	ldr	r7, [r3, #4]
   150c8:	ldr	r1, [r3]
   150cc:	mov	r2, r7
   150d0:	add	r7, r4, r7
   150d4:	bl	13f20 <memcpy@plt>
   150d8:	add	r4, r7, #1
   150dc:	strb	r8, [r5, r7]
   150e0:	ldr	r6, [r6]
   150e4:	b	150a8 <__flatcc_fb_copy_scope@@Base+0x64>

000150e8 <__flatcc_fb_scoped_symbol_name@@Base>:
   150e8:	ldr	r3, [r2, #204]	; 0xcc
   150ec:	push	{r4, r5, r6, lr}
   150f0:	cmp	r3, r0
   150f4:	mov	r4, r2
   150f8:	ldr	r5, [r1, #4]
   150fc:	beq	1512c <__flatcc_fb_scoped_symbol_name@@Base+0x44>
   15100:	mov	r1, r2
   15104:	bl	15044 <__flatcc_fb_copy_scope@@Base>
   15108:	cmp	r0, #0
   1510c:	str	r0, [r4, #208]	; 0xd0
   15110:	bge	1512c <__flatcc_fb_scoped_symbol_name@@Base+0x44>
   15114:	mov	r3, #0
   15118:	str	r3, [r4, #208]	; 0xd0
   1511c:	ldr	r3, [pc, #112]	; 15194 <__flatcc_fb_scoped_symbol_name@@Base+0xac>
   15120:	ldr	r0, [pc, #112]	; 15198 <__flatcc_fb_scoped_symbol_name@@Base+0xb0>
   15124:	ldr	r1, [r3]
   15128:	bl	14070 <fputs@plt>
   1512c:	ldr	r2, [r5, #4]
   15130:	ldr	r3, [r4, #208]	; 0xd0
   15134:	str	r2, [r4, #212]	; 0xd4
   15138:	add	r3, r2, r3
   1513c:	cmp	r3, #203	; 0xcb
   15140:	str	r3, [r4, #216]	; 0xd8
   15144:	ble	15170 <__flatcc_fb_scoped_symbol_name@@Base+0x88>
   15148:	ldr	r0, [pc, #68]	; 15194 <__flatcc_fb_scoped_symbol_name@@Base+0xac>
   1514c:	ldr	r3, [r5]
   15150:	ldr	r1, [pc, #68]	; 1519c <__flatcc_fb_scoped_symbol_name@@Base+0xb4>
   15154:	ldr	r0, [r0]
   15158:	bl	13fd4 <fprintf@plt>
   1515c:	ldr	r3, [r4, #208]	; 0xd0
   15160:	rsb	r3, r3, #203	; 0xcb
   15164:	str	r3, [r4, #212]	; 0xd4
   15168:	mov	r3, #203	; 0xcb
   1516c:	str	r3, [r4, #216]	; 0xd8
   15170:	ldr	r0, [r4, #208]	; 0xd0
   15174:	ldr	r2, [r4, #212]	; 0xd4
   15178:	ldr	r1, [r5]
   1517c:	add	r0, r4, r0
   15180:	bl	13f20 <memcpy@plt>
   15184:	ldr	r3, [r4, #216]	; 0xd8
   15188:	mov	r2, #0
   1518c:	strb	r2, [r4, r3]
   15190:	pop	{r4, r5, r6, pc}
   15194:	strheq	fp, [r5], -r0
   15198:	andeq	r0, r3, pc, asr #13
   1519c:	andeq	r0, r3, ip, ror #13

000151a0 <__flatcc_fb_codegen_common_c@@Base>:
   151a0:	push	{r4, r5, r6, lr}
   151a4:	mov	r4, r0
   151a8:	bl	13fc8 <strlen@plt>
   151ac:	ldr	r3, [r4, #212]	; 0xd4
   151b0:	ldr	r3, [r3, #144]	; 0x90
   151b4:	cmp	r3, #0
   151b8:	sub	r6, r0, #1
   151bc:	bne	15200 <__flatcc_fb_codegen_common_c@@Base+0x60>
   151c0:	ldr	r3, [r4, #212]	; 0xd4
   151c4:	ldr	r5, [r3, #148]	; 0x94
   151c8:	cmp	r5, #0
   151cc:	beq	15220 <__flatcc_fb_codegen_common_c@@Base+0x80>
   151d0:	ldr	r3, [pc, #112]	; 15248 <__flatcc_fb_codegen_common_c@@Base+0xa8>
   151d4:	mov	r2, r6
   151d8:	mov	r1, r4
   151dc:	mov	r0, r4
   151e0:	bl	14c60 <__flatcc_fb_open_output_file@@Base>
   151e4:	subs	r5, r0, #0
   151e8:	bne	1521c <__flatcc_fb_codegen_common_c@@Base+0x7c>
   151ec:	mov	r0, r4
   151f0:	bl	19da4 <__flatcc_fb_gen_common_c_builder_header@@Base>
   151f4:	mov	r0, r4
   151f8:	bl	14d1c <__flatcc_fb_close_output_file@@Base>
   151fc:	b	15220 <__flatcc_fb_codegen_common_c@@Base+0x80>
   15200:	ldr	r3, [pc, #68]	; 1524c <__flatcc_fb_codegen_common_c@@Base+0xac>
   15204:	mov	r2, r6
   15208:	mov	r1, r4
   1520c:	mov	r0, r4
   15210:	bl	14c60 <__flatcc_fb_open_output_file@@Base>
   15214:	cmp	r0, #0
   15218:	beq	15228 <__flatcc_fb_codegen_common_c@@Base+0x88>
   1521c:	mvn	r5, #0
   15220:	mov	r0, r5
   15224:	pop	{r4, r5, r6, pc}
   15228:	mov	r0, r4
   1522c:	bl	16f88 <__flatcc_fb_gen_common_c_header@@Base>
   15230:	mov	r5, r0
   15234:	mov	r0, r4
   15238:	bl	14d1c <__flatcc_fb_close_output_file@@Base>
   1523c:	cmp	r5, #0
   15240:	bne	15220 <__flatcc_fb_codegen_common_c@@Base+0x80>
   15244:	b	151c0 <__flatcc_fb_codegen_common_c@@Base+0x20>
   15248:	andeq	r0, r3, r3, lsr #14
   1524c:	andeq	r0, r3, r2, lsl r7

00015250 <__flatcc_fb_codegen_c@@Base>:
   15250:	mov	r3, r1
   15254:	mov	r2, #0
   15258:	push	{r4, r5, r6, lr}
   1525c:	mov	r4, r0
   15260:	str	r1, [r0, #208]	; 0xd0
   15264:	mov	r1, r2
   15268:	ldr	r0, [r3, #60]	; 0x3c
   1526c:	bl	235d4 <fb_scope_table_find@@Base>
   15270:	ldr	r3, [r4, #208]	; 0xd0
   15274:	ldr	r5, [r3, #160]	; 0xa0
   15278:	str	r0, [r4, #216]	; 0xd8
   1527c:	mov	r0, r5
   15280:	bl	13fc8 <strlen@plt>
   15284:	ldr	r3, [r4, #212]	; 0xd4
   15288:	ldr	r3, [r3, #152]	; 0x98
   1528c:	cmp	r3, #0
   15290:	mov	r6, r0
   15294:	beq	152d8 <__flatcc_fb_codegen_c@@Base+0x88>
   15298:	mov	r2, r0
   1529c:	ldr	r3, [pc, #344]	; 153fc <__flatcc_fb_codegen_c@@Base+0x1ac>
   152a0:	mov	r1, r5
   152a4:	mov	r0, r4
   152a8:	bl	14c60 <__flatcc_fb_open_output_file@@Base>
   152ac:	cmp	r0, #0
   152b0:	beq	152c0 <__flatcc_fb_codegen_c@@Base+0x70>
   152b4:	mvn	r5, #0
   152b8:	mov	r0, r5
   152bc:	pop	{r4, r5, r6, pc}
   152c0:	mov	r0, r4
   152c4:	bl	17b98 <__flatcc_fb_gen_c_reader@@Base>
   152c8:	subs	r5, r0, #0
   152cc:	bne	152b8 <__flatcc_fb_codegen_c@@Base+0x68>
   152d0:	mov	r0, r4
   152d4:	bl	14d1c <__flatcc_fb_close_output_file@@Base>
   152d8:	ldr	r3, [r4, #212]	; 0xd4
   152dc:	ldr	r3, [r3, #156]	; 0x9c
   152e0:	cmp	r3, #0
   152e4:	beq	15320 <__flatcc_fb_codegen_c@@Base+0xd0>
   152e8:	ldr	r1, [r4, #208]	; 0xd0
   152ec:	ldr	r3, [pc, #268]	; 15400 <__flatcc_fb_codegen_c@@Base+0x1b0>
   152f0:	mov	r2, r6
   152f4:	ldr	r1, [r1, #160]	; 0xa0
   152f8:	mov	r0, r4
   152fc:	bl	14c60 <__flatcc_fb_open_output_file@@Base>
   15300:	cmp	r0, #0
   15304:	bne	152b4 <__flatcc_fb_codegen_c@@Base+0x64>
   15308:	mov	r0, r4
   1530c:	bl	1a614 <__flatcc_fb_gen_c_builder@@Base>
   15310:	subs	r5, r0, #0
   15314:	bne	152b8 <__flatcc_fb_codegen_c@@Base+0x68>
   15318:	mov	r0, r4
   1531c:	bl	14d1c <__flatcc_fb_close_output_file@@Base>
   15320:	ldr	r3, [r4, #212]	; 0xd4
   15324:	ldr	r3, [r3, #160]	; 0xa0
   15328:	cmp	r3, #0
   1532c:	beq	15368 <__flatcc_fb_codegen_c@@Base+0x118>
   15330:	ldr	r1, [r4, #208]	; 0xd0
   15334:	ldr	r3, [pc, #200]	; 15404 <__flatcc_fb_codegen_c@@Base+0x1b4>
   15338:	mov	r2, r6
   1533c:	ldr	r1, [r1, #160]	; 0xa0
   15340:	mov	r0, r4
   15344:	bl	14c60 <__flatcc_fb_open_output_file@@Base>
   15348:	cmp	r0, #0
   1534c:	bne	152b4 <__flatcc_fb_codegen_c@@Base+0x64>
   15350:	mov	r0, r4
   15354:	bl	1b230 <__flatcc_fb_gen_c_verifier@@Base>
   15358:	subs	r5, r0, #0
   1535c:	bne	152b8 <__flatcc_fb_codegen_c@@Base+0x68>
   15360:	mov	r0, r4
   15364:	bl	14d1c <__flatcc_fb_close_output_file@@Base>
   15368:	ldr	r3, [r4, #212]	; 0xd4
   1536c:	ldr	r3, [r3, #164]	; 0xa4
   15370:	cmp	r3, #0
   15374:	beq	153b0 <__flatcc_fb_codegen_c@@Base+0x160>
   15378:	ldr	r1, [r4, #208]	; 0xd0
   1537c:	ldr	r3, [pc, #132]	; 15408 <__flatcc_fb_codegen_c@@Base+0x1b8>
   15380:	mov	r2, r6
   15384:	ldr	r1, [r1, #160]	; 0xa0
   15388:	mov	r0, r4
   1538c:	bl	14c60 <__flatcc_fb_open_output_file@@Base>
   15390:	cmp	r0, #0
   15394:	bne	152b4 <__flatcc_fb_codegen_c@@Base+0x64>
   15398:	mov	r0, r4
   1539c:	bl	1e03c <__flatcc_fb_gen_c_json_parser@@Base>
   153a0:	subs	r5, r0, #0
   153a4:	bne	152b8 <__flatcc_fb_codegen_c@@Base+0x68>
   153a8:	mov	r0, r4
   153ac:	bl	14d1c <__flatcc_fb_close_output_file@@Base>
   153b0:	ldr	r3, [r4, #212]	; 0xd4
   153b4:	ldr	r5, [r3, #168]	; 0xa8
   153b8:	cmp	r5, #0
   153bc:	beq	152b8 <__flatcc_fb_codegen_c@@Base+0x68>
   153c0:	ldr	r1, [r4, #208]	; 0xd0
   153c4:	ldr	r3, [pc, #64]	; 1540c <__flatcc_fb_codegen_c@@Base+0x1bc>
   153c8:	mov	r2, r6
   153cc:	ldr	r1, [r1, #160]	; 0xa0
   153d0:	mov	r0, r4
   153d4:	bl	14c60 <__flatcc_fb_open_output_file@@Base>
   153d8:	cmp	r0, #0
   153dc:	bne	152b4 <__flatcc_fb_codegen_c@@Base+0x64>
   153e0:	mov	r0, r4
   153e4:	bl	20678 <__flatcc_fb_gen_c_json_printer@@Base>
   153e8:	subs	r5, r0, #0
   153ec:	bne	152b8 <__flatcc_fb_codegen_c@@Base+0x68>
   153f0:	mov	r0, r4
   153f4:	bl	14d1c <__flatcc_fb_close_output_file@@Base>
   153f8:	b	152b8 <__flatcc_fb_codegen_c@@Base+0x68>
   153fc:	andeq	r6, r4, fp, asr #18
   15400:	andeq	r6, r4, r7, lsr #20
   15404:	andeq	r0, r3, r5, lsr r7
   15408:	andeq	r0, r3, r1, asr #14
   1540c:	andeq	r0, r3, r0, asr r7
   15410:	mov	r2, r1
   15414:	mov	r1, r0
   15418:	ldr	r0, [r0, #12]
   1541c:	b	150e8 <__flatcc_fb_scoped_symbol_name@@Base>
   15420:	push	{r4, r5, lr}
   15424:	mov	r5, r1
   15428:	sub	sp, sp, #228	; 0xe4
   1542c:	mov	r4, r0
   15430:	mov	r2, #220	; 0xdc
   15434:	mov	r1, #0
   15438:	add	r0, sp, #4
   1543c:	bl	13fec <memset@plt>
   15440:	ldrh	r3, [r5, #8]
   15444:	cmp	r3, #1
   15448:	bls	15460 <__flatcc_fb_codegen_c@@Base+0x210>
   1544c:	ldr	r3, [pc, #236]	; 15540 <__flatcc_fb_codegen_c@@Base+0x2f0>
   15450:	ldr	r2, [pc, #236]	; 15544 <__flatcc_fb_codegen_c@@Base+0x2f4>
   15454:	ldr	r1, [pc, #236]	; 15548 <__flatcc_fb_codegen_c@@Base+0x2f8>
   15458:	ldr	r0, [pc, #236]	; 1554c <__flatcc_fb_codegen_c@@Base+0x2fc>
   1545c:	bl	14094 <__assert_fail@plt>
   15460:	add	r1, sp, #4
   15464:	mov	r0, r5
   15468:	bl	15410 <__flatcc_fb_codegen_c@@Base+0x1c0>
   1546c:	ldrh	r3, [r5, #8]
   15470:	cmp	r3, #1
   15474:	bne	15504 <__flatcc_fb_codegen_c@@Base+0x2b4>
   15478:	ldrd	r2, [r5, #112]	; 0x70
   1547c:	orrs	r3, r2, r3
   15480:	bne	154ec <__flatcc_fb_codegen_c@@Base+0x29c>
   15484:	add	r2, sp, #4
   15488:	ldr	r1, [pc, #192]	; 15550 <__flatcc_fb_codegen_c@@Base+0x300>
   1548c:	ldr	r0, [r4, #204]	; 0xcc
   15490:	bl	13fd4 <fprintf@plt>
   15494:	add	r3, sp, #4
   15498:	mov	r2, r3
   1549c:	ldr	r1, [pc, #176]	; 15554 <__flatcc_fb_codegen_c@@Base+0x304>
   154a0:	ldr	r0, [r4, #204]	; 0xcc
   154a4:	bl	13fd4 <fprintf@plt>
   154a8:	add	r3, sp, #4
   154ac:	mov	r2, r3
   154b0:	ldr	r1, [pc, #160]	; 15558 <__flatcc_fb_codegen_c@@Base+0x308>
   154b4:	ldr	r0, [r4, #204]	; 0xcc
   154b8:	bl	13fd4 <fprintf@plt>
   154bc:	add	r3, sp, #4
   154c0:	mov	r2, r3
   154c4:	ldr	r1, [pc, #144]	; 1555c <__flatcc_fb_codegen_c@@Base+0x30c>
   154c8:	ldr	r0, [r4, #204]	; 0xcc
   154cc:	bl	13fd4 <fprintf@plt>
   154d0:	add	r3, sp, #4
   154d4:	ldr	r1, [pc, #132]	; 15560 <__flatcc_fb_codegen_c@@Base+0x310>
   154d8:	ldr	r0, [r4, #204]	; 0xcc
   154dc:	mov	r2, r3
   154e0:	bl	13fd4 <fprintf@plt>
   154e4:	add	sp, sp, #228	; 0xe4
   154e8:	pop	{r4, r5, pc}
   154ec:	add	r3, sp, #4
   154f0:	mov	r2, r3
   154f4:	ldr	r1, [pc, #104]	; 15564 <__flatcc_fb_codegen_c@@Base+0x314>
   154f8:	ldr	r0, [r4, #204]	; 0xcc
   154fc:	bl	13fd4 <fprintf@plt>
   15500:	b	15494 <__flatcc_fb_codegen_c@@Base+0x244>
   15504:	add	r3, sp, #4
   15508:	mov	r2, r3
   1550c:	ldr	r1, [pc, #84]	; 15568 <__flatcc_fb_codegen_c@@Base+0x318>
   15510:	ldr	r0, [r4, #204]	; 0xcc
   15514:	bl	13fd4 <fprintf@plt>
   15518:	add	r3, sp, #4
   1551c:	mov	r2, r4
   15520:	ldr	r1, [pc, #68]	; 1556c <__flatcc_fb_codegen_c@@Base+0x31c>
   15524:	ldr	r0, [r4, #204]	; 0xcc
   15528:	bl	13fd4 <fprintf@plt>
   1552c:	add	r3, sp, #4
   15530:	mov	r2, r4
   15534:	ldr	r1, [pc, #52]	; 15570 <__flatcc_fb_codegen_c@@Base+0x320>
   15538:	ldr	r0, [r4, #204]	; 0xcc
   1553c:	b	154e0 <__flatcc_fb_codegen_c@@Base+0x290>
   15540:	andeq	r0, r3, r0, ror #14
   15544:	andeq	r0, r0, pc, asr r3
   15548:	andeq	r0, r3, lr, lsl #16
   1554c:	andeq	r0, r3, lr, asr r8
   15550:	andeq	r0, r3, r0, lsr #17
   15554:	andeq	r0, r3, r0, ror #17
   15558:	andeq	r0, r3, r2, lsl #18
   1555c:	andeq	r0, r3, r6, lsr #18
   15560:	andeq	r0, r3, r5, asr #18
   15564:	andeq	r0, r3, r7, asr #17
   15568:	andeq	r0, r3, r6, ror #18
   1556c:	muleq	r3, r2, r9
   15570:			; <UNDEFINED> instruction: 0x000309b8
   15574:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15578:	subs	r4, r2, #0
   1557c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   15580:	ldr	r8, [pc, #124]	; 15604 <__flatcc_fb_codegen_c@@Base+0x3b4>
   15584:	ldr	r9, [pc, #124]	; 15608 <__flatcc_fb_codegen_c@@Base+0x3b8>
   15588:	ldr	r7, [pc, #124]	; 1560c <__flatcc_fb_codegen_c@@Base+0x3bc>
   1558c:	mov	r5, r0
   15590:	mov	r6, r1
   15594:	mov	r3, #1
   15598:	mov	r2, #0
   1559c:	ldr	r1, [r4, #4]
   155a0:	ldr	r1, [r1, #8]
   155a4:	cmp	r1, r2
   155a8:	beq	155c4 <__flatcc_fb_codegen_c@@Base+0x374>
   155ac:	cmp	r3, #0
   155b0:	mov	r2, r6
   155b4:	movne	r1, r9
   155b8:	moveq	r1, r8
   155bc:	ldr	r0, [r5]
   155c0:	bl	13fd4 <fprintf@plt>
   155c4:	ldr	r2, [r4, #4]
   155c8:	mov	r1, r7
   155cc:	ldr	r0, [r5]
   155d0:	ldr	r3, [r2]
   155d4:	ldr	r2, [r2, #4]
   155d8:	bl	13fd4 <fprintf@plt>
   155dc:	ldr	r3, [r4, #4]
   155e0:	ldr	r4, [r4]
   155e4:	ldr	r2, [r3, #8]
   155e8:	mov	r3, #0
   155ec:	cmp	r4, r3
   155f0:	bne	1559c <__flatcc_fb_codegen_c@@Base+0x34c>
   155f4:	ldr	r1, [r5]
   155f8:	ldr	r0, [pc, #16]	; 15610 <__flatcc_fb_codegen_c@@Base+0x3c0>
   155fc:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   15600:	b	14070 <fputs@plt>
   15604:	andeq	r0, r3, r7, ror #19
   15608:	andeq	r0, r3, r0, ror #19
   1560c:	ldrdeq	r9, [r3], -sp
   15610:			; <UNDEFINED> instruction: 0x000463bb
   15614:	push	{r0, r1, r2, lr}
   15618:	sub	r0, r0, #1
   1561c:	cmp	r0, #10
   15620:	ldrls	pc, [pc, r0, lsl #2]
   15624:	b	156a0 <__flatcc_fb_codegen_c@@Base+0x450>
   15628:	ldrdeq	r5, [r1], -r4
   1562c:	andeq	r5, r1, r4, asr r6
   15630:	ldrdeq	r5, [r1], -ip
   15634:	andeq	r5, r1, r0, ror #12
   15638:	andeq	r5, r1, r8, ror #12
   1563c:	andeq	r5, r1, r0, ror r6
   15640:	andeq	r5, r1, r8, ror r6
   15644:	andeq	r5, r1, r0, lsl #13
   15648:	andeq	r5, r1, r8, lsl #13
   1564c:	muleq	r1, r8, r6
   15650:	muleq	r1, r0, r6
   15654:	ldr	r0, [pc, #136]	; 156e4 <__flatcc_fb_codegen_c@@Base+0x494>
   15658:	add	sp, sp, #12
   1565c:	pop	{pc}		; (ldr pc, [sp], #4)
   15660:	ldr	r0, [pc, #128]	; 156e8 <__flatcc_fb_codegen_c@@Base+0x498>
   15664:	b	15658 <__flatcc_fb_codegen_c@@Base+0x408>
   15668:	ldr	r0, [pc, #124]	; 156ec <__flatcc_fb_codegen_c@@Base+0x49c>
   1566c:	b	15658 <__flatcc_fb_codegen_c@@Base+0x408>
   15670:	ldr	r0, [pc, #120]	; 156f0 <__flatcc_fb_codegen_c@@Base+0x4a0>
   15674:	b	15658 <__flatcc_fb_codegen_c@@Base+0x408>
   15678:	ldr	r0, [pc, #116]	; 156f4 <__flatcc_fb_codegen_c@@Base+0x4a4>
   1567c:	b	15658 <__flatcc_fb_codegen_c@@Base+0x408>
   15680:	ldr	r0, [pc, #112]	; 156f8 <__flatcc_fb_codegen_c@@Base+0x4a8>
   15684:	b	15658 <__flatcc_fb_codegen_c@@Base+0x408>
   15688:	ldr	r0, [pc, #108]	; 156fc <__flatcc_fb_codegen_c@@Base+0x4ac>
   1568c:	b	15658 <__flatcc_fb_codegen_c@@Base+0x408>
   15690:	ldr	r0, [pc, #104]	; 15700 <__flatcc_fb_codegen_c@@Base+0x4b0>
   15694:	b	15658 <__flatcc_fb_codegen_c@@Base+0x408>
   15698:	ldr	r0, [pc, #100]	; 15704 <__flatcc_fb_codegen_c@@Base+0x4b4>
   1569c:	b	15658 <__flatcc_fb_codegen_c@@Base+0x408>
   156a0:	ldr	r0, [pc, #96]	; 15708 <__flatcc_fb_codegen_c@@Base+0x4b8>
   156a4:	ldr	r3, [pc, #96]	; 1570c <__flatcc_fb_codegen_c@@Base+0x4bc>
   156a8:	ldr	r2, [pc, #96]	; 15710 <__flatcc_fb_codegen_c@@Base+0x4c0>
   156ac:	str	r3, [sp]
   156b0:	ldr	r1, [pc, #92]	; 15714 <__flatcc_fb_codegen_c@@Base+0x4c4>
   156b4:	mov	r3, #141	; 0x8d
   156b8:	ldr	r0, [r0]
   156bc:	bl	13fd4 <fprintf@plt>
   156c0:	ldr	r3, [pc, #80]	; 15718 <__flatcc_fb_codegen_c@@Base+0x4c8>
   156c4:	mov	r2, #141	; 0x8d
   156c8:	ldr	r1, [pc, #64]	; 15710 <__flatcc_fb_codegen_c@@Base+0x4c0>
   156cc:	ldr	r0, [pc, #72]	; 1571c <__flatcc_fb_codegen_c@@Base+0x4cc>
   156d0:	bl	14094 <__assert_fail@plt>
   156d4:	ldr	r0, [pc, #68]	; 15720 <__flatcc_fb_codegen_c@@Base+0x4d0>
   156d8:	b	15658 <__flatcc_fb_codegen_c@@Base+0x408>
   156dc:	ldr	r0, [pc, #64]	; 15724 <__flatcc_fb_codegen_c@@Base+0x4d4>
   156e0:	b	15658 <__flatcc_fb_codegen_c@@Base+0x408>
   156e4:	strdeq	r0, [r3], -r7
   156e8:	andeq	r0, r3, r9, lsl #20
   156ec:	andeq	r0, r3, r1, lsl sl
   156f0:	andeq	r0, r3, pc, ror #19
   156f4:	strdeq	r0, [r3], -r8
   156f8:	andeq	r0, r3, r1, lsl #20
   156fc:	andeq	r0, r3, sl, lsl #20
   15700:	andeq	r0, r3, r8, lsl sl
   15704:	andeq	r0, r3, lr, lsl sl
   15708:	strheq	fp, [r5], -r0
   1570c:	andeq	r0, r3, r9, ror sl
   15710:	andeq	r0, r3, r5, lsr #20
   15714:	andeq	r0, r3, lr, ror #20
   15718:	andeq	r0, r3, r1, ror r7
   1571c:	andeq	r9, r3, sp, asr #1
   15720:	andeq	r0, r3, lr, ror #19
   15724:	andeq	r0, r3, r0, lsl #20
   15728:	push	{r0, r1, r2, lr}
   1572c:	sub	r0, r0, #1
   15730:	cmp	r0, #10
   15734:	ldrls	pc, [pc, r0, lsl #2]
   15738:	b	157b4 <__flatcc_fb_codegen_c@@Base+0x564>
   1573c:	andeq	r5, r1, r8, ror #15
   15740:	andeq	r5, r1, r8, ror #14
   15744:	strdeq	r5, [r1], -r0
   15748:	andeq	r5, r1, r4, ror r7
   1574c:	andeq	r5, r1, ip, ror r7
   15750:	andeq	r5, r1, r4, lsl #15
   15754:	andeq	r5, r1, ip, lsl #15
   15758:	muleq	r1, r4, r7
   1575c:	muleq	r1, ip, r7
   15760:	andeq	r5, r1, ip, lsr #15
   15764:	andeq	r5, r1, r4, lsr #15
   15768:	ldr	r0, [pc, #136]	; 157f8 <__flatcc_fb_codegen_c@@Base+0x5a8>
   1576c:	add	sp, sp, #12
   15770:	pop	{pc}		; (ldr pc, [sp], #4)
   15774:	ldr	r0, [pc, #128]	; 157fc <__flatcc_fb_codegen_c@@Base+0x5ac>
   15778:	b	1576c <__flatcc_fb_codegen_c@@Base+0x51c>
   1577c:	ldr	r0, [pc, #124]	; 15800 <__flatcc_fb_codegen_c@@Base+0x5b0>
   15780:	b	1576c <__flatcc_fb_codegen_c@@Base+0x51c>
   15784:	ldr	r0, [pc, #120]	; 15804 <__flatcc_fb_codegen_c@@Base+0x5b4>
   15788:	b	1576c <__flatcc_fb_codegen_c@@Base+0x51c>
   1578c:	ldr	r0, [pc, #116]	; 15808 <__flatcc_fb_codegen_c@@Base+0x5b8>
   15790:	b	1576c <__flatcc_fb_codegen_c@@Base+0x51c>
   15794:	ldr	r0, [pc, #112]	; 1580c <__flatcc_fb_codegen_c@@Base+0x5bc>
   15798:	b	1576c <__flatcc_fb_codegen_c@@Base+0x51c>
   1579c:	ldr	r0, [pc, #108]	; 15810 <__flatcc_fb_codegen_c@@Base+0x5c0>
   157a0:	b	1576c <__flatcc_fb_codegen_c@@Base+0x51c>
   157a4:	ldr	r0, [pc, #104]	; 15814 <__flatcc_fb_codegen_c@@Base+0x5c4>
   157a8:	b	1576c <__flatcc_fb_codegen_c@@Base+0x51c>
   157ac:	ldr	r0, [pc, #100]	; 15818 <__flatcc_fb_codegen_c@@Base+0x5c8>
   157b0:	b	1576c <__flatcc_fb_codegen_c@@Base+0x51c>
   157b4:	ldr	r0, [pc, #96]	; 1581c <__flatcc_fb_codegen_c@@Base+0x5cc>
   157b8:	ldr	r3, [pc, #96]	; 15820 <__flatcc_fb_codegen_c@@Base+0x5d0>
   157bc:	ldr	r2, [pc, #96]	; 15824 <__flatcc_fb_codegen_c@@Base+0x5d4>
   157c0:	str	r3, [sp]
   157c4:	ldr	r1, [pc, #92]	; 15828 <__flatcc_fb_codegen_c@@Base+0x5d8>
   157c8:	mov	r3, #96	; 0x60
   157cc:	ldr	r0, [r0]
   157d0:	bl	13fd4 <fprintf@plt>
   157d4:	ldr	r3, [pc, #80]	; 1582c <__flatcc_fb_codegen_c@@Base+0x5dc>
   157d8:	mov	r2, #96	; 0x60
   157dc:	ldr	r1, [pc, #64]	; 15824 <__flatcc_fb_codegen_c@@Base+0x5d4>
   157e0:	ldr	r0, [pc, #72]	; 15830 <__flatcc_fb_codegen_c@@Base+0x5e0>
   157e4:	bl	14094 <__assert_fail@plt>
   157e8:	ldr	r0, [pc, #68]	; 15834 <__flatcc_fb_codegen_c@@Base+0x5e4>
   157ec:	b	1576c <__flatcc_fb_codegen_c@@Base+0x51c>
   157f0:	ldr	r0, [pc, #64]	; 15838 <__flatcc_fb_codegen_c@@Base+0x5e8>
   157f4:	b	1576c <__flatcc_fb_codegen_c@@Base+0x51c>
   157f8:			; <UNDEFINED> instruction: 0x00030ab7
   157fc:	andeq	r0, r3, r5, asr #21
   15800:	andeq	r7, r4, r0, ror pc
   15804:			; <UNDEFINED> instruction: 0x00030ab1
   15808:			; <UNDEFINED> instruction: 0x00030ab8
   1580c:			; <UNDEFINED> instruction: 0x00030abf
   15810:	andeq	r0, r3, r6, asr #21
   15814:	andeq	r0, r3, r8, lsl sl
   15818:	andeq	r0, r3, lr, lsl sl
   1581c:	strheq	fp, [r5], -r0
   15820:	andeq	r0, r3, r9, ror sl
   15824:	andeq	r0, r3, r5, lsr #20
   15828:	andeq	r0, r3, lr, ror #20
   1582c:	andeq	r0, r3, r2, lsl #15
   15830:	andeq	r9, r3, sp, asr #1
   15834:			; <UNDEFINED> instruction: 0x00030ab0
   15838:			; <UNDEFINED> instruction: 0x00030abe
   1583c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15840:	sub	sp, sp, #484	; 0x1e4
   15844:	ldr	r3, [r0, #212]	; 0xd4
   15848:	add	r5, sp, #40	; 0x28
   1584c:	mov	r7, r1
   15850:	mov	r2, #220	; 0xdc
   15854:	mov	r1, #0
   15858:	mov	r4, r0
   1585c:	mov	r0, r5
   15860:	ldr	r8, [r3, #132]	; 0x84
   15864:	bl	13fec <memset@plt>
   15868:	mov	r2, #220	; 0xdc
   1586c:	mov	r1, #0
   15870:	add	r0, sp, #260	; 0x104
   15874:	bl	13fec <memset@plt>
   15878:	ldrh	r3, [r7, #8]
   1587c:	cmp	r3, #1
   15880:	beq	15898 <__flatcc_fb_codegen_c@@Base+0x648>
   15884:	ldr	r3, [pc, #1688]	; 15f24 <__flatcc_fb_codegen_c@@Base+0xcd4>
   15888:	ldr	r1, [pc, #1688]	; 15f28 <__flatcc_fb_codegen_c@@Base+0xcd8>
   1588c:	ldr	r0, [pc, #1688]	; 15f2c <__flatcc_fb_codegen_c@@Base+0xcdc>
   15890:	mov	r2, #936	; 0x3a8
   15894:	bl	14094 <__assert_fail@plt>
   15898:	ldrh	r3, [r7, #104]	; 0x68
   1589c:	cmp	r3, #0
   158a0:	bne	158c0 <__flatcc_fb_codegen_c@@Base+0x670>
   158a4:	ldrd	r2, [r7, #96]	; 0x60
   158a8:	orrs	r3, r2, r3
   158ac:	ldrne	r3, [pc, #1648]	; 15f24 <__flatcc_fb_codegen_c@@Base+0xcd4>
   158b0:	ldrne	r2, [pc, #1656]	; 15f30 <__flatcc_fb_codegen_c@@Base+0xce0>
   158b4:	ldrne	r1, [pc, #1644]	; 15f28 <__flatcc_fb_codegen_c@@Base+0xcd8>
   158b8:	ldrne	r0, [pc, #1652]	; 15f34 <__flatcc_fb_codegen_c@@Base+0xce4>
   158bc:	bne	15894 <__flatcc_fb_codegen_c@@Base+0x644>
   158c0:	ldrd	r2, [r7, #112]	; 0x70
   158c4:	orrs	r3, r2, r3
   158c8:	bne	158e8 <__flatcc_fb_codegen_c@@Base+0x698>
   158cc:	ldrd	r2, [r7, #96]	; 0x60
   158d0:	orrs	r3, r2, r3
   158d4:	ldrne	r3, [pc, #1608]	; 15f24 <__flatcc_fb_codegen_c@@Base+0xcd4>
   158d8:	ldrne	r2, [pc, #1624]	; 15f38 <__flatcc_fb_codegen_c@@Base+0xce8>
   158dc:	ldrne	r1, [pc, #1604]	; 15f28 <__flatcc_fb_codegen_c@@Base+0xcd8>
   158e0:	ldrne	r0, [pc, #1620]	; 15f3c <__flatcc_fb_codegen_c@@Base+0xcec>
   158e4:	bne	15894 <__flatcc_fb_codegen_c@@Base+0x644>
   158e8:	mov	r1, r5
   158ec:	mov	r0, r7
   158f0:	bl	15410 <__flatcc_fb_codegen_c@@Base+0x1c0>
   158f4:	add	r3, r4, #204	; 0xcc
   158f8:	ldr	r2, [r7, #32]
   158fc:	mov	r0, r3
   15900:	ldr	r1, [pc, #1592]	; 15f40 <__flatcc_fb_codegen_c@@Base+0xcf0>
   15904:	str	r3, [sp, #36]	; 0x24
   15908:	bl	15574 <__flatcc_fb_codegen_c@@Base+0x324>
   1590c:	ldrd	r2, [r7, #112]	; 0x70
   15910:	orrs	r3, r2, r3
   15914:	bne	159ec <__flatcc_fb_codegen_c@@Base+0x79c>
   15918:	mov	r2, r5
   1591c:	ldr	r1, [pc, #1568]	; 15f44 <__flatcc_fb_codegen_c@@Base+0xcf4>
   15920:	ldr	r0, [r4, #204]	; 0xcc
   15924:	bl	13fd4 <fprintf@plt>
   15928:	mov	r3, r5
   1592c:	mov	r2, r5
   15930:	ldr	r1, [pc, #1552]	; 15f48 <__flatcc_fb_codegen_c@@Base+0xcf8>
   15934:	str	r5, [sp]
   15938:	ldr	r0, [r4, #204]	; 0xcc
   1593c:	bl	13fd4 <fprintf@plt>
   15940:	mov	r3, r5
   15944:	mov	r2, r5
   15948:	ldr	r1, [pc, #1532]	; 15f4c <__flatcc_fb_codegen_c@@Base+0xcfc>
   1594c:	str	r5, [sp]
   15950:	ldr	r0, [r4, #204]	; 0xcc
   15954:	bl	13fd4 <fprintf@plt>
   15958:	str	r5, [sp]
   1595c:	mov	r3, r5
   15960:	mov	r2, r5
   15964:	ldr	r1, [pc, #1508]	; 15f50 <__flatcc_fb_codegen_c@@Base+0xd00>
   15968:	ldr	r0, [r4, #204]	; 0xcc
   1596c:	bl	13fd4 <fprintf@plt>
   15970:	ldrd	r2, [r7, #112]	; 0x70
   15974:	ldr	r1, [pc, #1496]	; 15f54 <__flatcc_fb_codegen_c@@Base+0xd04>
   15978:	ldr	r0, [r4, #204]	; 0xcc
   1597c:	strd	r2, [sp]
   15980:	mov	r2, r5
   15984:	bl	13fd4 <fprintf@plt>
   15988:	mov	r3, r5
   1598c:	mov	r2, r5
   15990:	ldr	r1, [pc, #1472]	; 15f58 <__flatcc_fb_codegen_c@@Base+0xd08>
   15994:	str	r4, [sp]
   15998:	ldr	r0, [r4, #204]	; 0xcc
   1599c:	bl	13fd4 <fprintf@plt>
   159a0:	mov	r3, r5
   159a4:	mov	r2, r4
   159a8:	ldr	r1, [pc, #1452]	; 15f5c <__flatcc_fb_codegen_c@@Base+0xd0c>
   159ac:	ldr	r0, [r4, #204]	; 0xcc
   159b0:	bl	13fd4 <fprintf@plt>
   159b4:	ldr	r1, [r4, #204]	; 0xcc
   159b8:	mov	r0, #10
   159bc:	bl	14034 <fputc@plt>
   159c0:	mov	r9, #0
   159c4:	ldr	r6, [r7, #20]
   159c8:	mov	fp, r9
   159cc:	add	sl, sp, #260	; 0x104
   159d0:	cmp	r6, #0
   159d4:	bne	15cd0 <__flatcc_fb_codegen_c@@Base+0xa80>
   159d8:	ldr	r1, [r4, #204]	; 0xcc
   159dc:	mov	r0, #10
   159e0:	bl	14034 <fputc@plt>
   159e4:	add	sp, sp, #484	; 0x1e4
   159e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   159ec:	cmp	r8, #0
   159f0:	beq	15a00 <__flatcc_fb_codegen_c@@Base+0x7b0>
   159f4:	ldr	r1, [r4, #204]	; 0xcc
   159f8:	ldr	r0, [pc, #1376]	; 15f60 <__flatcc_fb_codegen_c@@Base+0xd10>
   159fc:	bl	14070 <fputs@plt>
   15a00:	mov	r2, r5
   15a04:	ldr	r1, [pc, #1368]	; 15f64 <__flatcc_fb_codegen_c@@Base+0xd14>
   15a08:	ldr	r0, [r4, #204]	; 0xcc
   15a0c:	bl	13fd4 <fprintf@plt>
   15a10:	mov	r9, #0
   15a14:	ldr	r6, [r7, #20]
   15a18:	mov	fp, r9
   15a1c:	str	r9, [sp, #24]
   15a20:	cmp	r6, #0
   15a24:	bne	15ad4 <__flatcc_fb_codegen_c@@Base+0x884>
   15a28:	cmp	r8, #0
   15a2c:	beq	15a4c <__flatcc_fb_codegen_c@@Base+0x7fc>
   15a30:	ldr	r3, [r7, #112]	; 0x70
   15a34:	subs	r3, r3, fp
   15a38:	beq	15a4c <__flatcc_fb_codegen_c@@Base+0x7fc>
   15a3c:	ldr	r2, [sp, #24]
   15a40:	ldr	r1, [pc, #1312]	; 15f68 <__flatcc_fb_codegen_c@@Base+0xd18>
   15a44:	ldr	r0, [r4, #204]	; 0xcc
   15a48:	bl	13fd4 <fprintf@plt>
   15a4c:	ldr	r1, [r4, #204]	; 0xcc
   15a50:	ldr	r0, [pc, #1300]	; 15f6c <__flatcc_fb_codegen_c@@Base+0xd1c>
   15a54:	bl	14070 <fputs@plt>
   15a58:	cmp	r8, #0
   15a5c:	beq	15a6c <__flatcc_fb_codegen_c@@Base+0x81c>
   15a60:	ldr	r1, [r4, #204]	; 0xcc
   15a64:	ldr	r0, [pc, #1284]	; 15f70 <__flatcc_fb_codegen_c@@Base+0xd20>
   15a68:	bl	14070 <fputs@plt>
   15a6c:	ldrd	r2, [r7, #112]	; 0x70
   15a70:	ldr	r1, [pc, #1276]	; 15f74 <__flatcc_fb_codegen_c@@Base+0xd24>
   15a74:	ldr	r0, [r4, #204]	; 0xcc
   15a78:	strd	r2, [sp]
   15a7c:	mov	r2, r5
   15a80:	bl	13fd4 <fprintf@plt>
   15a84:	mov	r3, r5
   15a88:	mov	r2, r5
   15a8c:	str	r5, [sp]
   15a90:	ldr	r1, [pc, #1248]	; 15f78 <__flatcc_fb_codegen_c@@Base+0xd28>
   15a94:	ldr	r0, [r4, #204]	; 0xcc
   15a98:	bl	13fd4 <fprintf@plt>
   15a9c:	mov	r3, r5
   15aa0:	mov	r2, r5
   15aa4:	str	r5, [sp]
   15aa8:	ldr	r1, [pc, #1228]	; 15f7c <__flatcc_fb_codegen_c@@Base+0xd2c>
   15aac:	ldr	r0, [r4, #204]	; 0xcc
   15ab0:	bl	13fd4 <fprintf@plt>
   15ab4:	str	r4, [sp, #4]
   15ab8:	str	r5, [sp]
   15abc:	mov	r3, r5
   15ac0:	mov	r2, r5
   15ac4:	ldr	r1, [pc, #1204]	; 15f80 <__flatcc_fb_codegen_c@@Base+0xd30>
   15ac8:	ldr	r0, [r4, #204]	; 0xcc
   15acc:	bl	13fd4 <fprintf@plt>
   15ad0:	b	15970 <__flatcc_fb_codegen_c@@Base+0x720>
   15ad4:	ldr	r2, [r6, #68]	; 0x44
   15ad8:	ldr	r1, [pc, #1188]	; 15f84 <__flatcc_fb_codegen_c@@Base+0xd34>
   15adc:	ldr	r0, [sp, #36]	; 0x24
   15ae0:	bl	15574 <__flatcc_fb_codegen_c@@Base+0x324>
   15ae4:	ldr	r3, [r6, #4]
   15ae8:	cmp	fp, #0
   15aec:	ldr	r2, [r3, #4]
   15af0:	ldr	r3, [r3]
   15af4:	ldrheq	sl, [r7, #104]	; 0x68
   15af8:	ldrhne	sl, [r6, #74]	; 0x4a
   15afc:	cmp	r8, #0
   15b00:	str	r2, [sp, #28]
   15b04:	str	r3, [sp, #32]
   15b08:	beq	15b30 <__flatcc_fb_codegen_c@@Base+0x8e0>
   15b0c:	ldr	r3, [r6, #80]	; 0x50
   15b10:	subs	r3, r3, fp
   15b14:	beq	15b30 <__flatcc_fb_codegen_c@@Base+0x8e0>
   15b18:	ldr	r2, [sp, #24]
   15b1c:	ldr	r1, [pc, #1092]	; 15f68 <__flatcc_fb_codegen_c@@Base+0xd18>
   15b20:	add	fp, r2, #1
   15b24:	ldr	r0, [r4, #204]	; 0xcc
   15b28:	bl	13fd4 <fprintf@plt>
   15b2c:	str	fp, [sp, #24]
   15b30:	ldrh	r3, [r6, #72]	; 0x48
   15b34:	tst	r3, #4
   15b38:	beq	15bac <__flatcc_fb_codegen_c@@Base+0x95c>
   15b3c:	cmp	r8, #0
   15b40:	ldr	r3, [r6, #88]	; 0x58
   15b44:	ldr	r2, [sp, #32]
   15b48:	add	fp, r9, #1
   15b4c:	beq	15b84 <__flatcc_fb_codegen_c@@Base+0x934>
   15b50:	str	r2, [sp, #4]
   15b54:	ldr	r2, [sp, #28]
   15b58:	ldr	r1, [pc, #1064]	; 15f88 <__flatcc_fb_codegen_c@@Base+0xd38>
   15b5c:	str	r2, [sp]
   15b60:	ldr	r0, [r4, #204]	; 0xcc
   15b64:	mov	r2, r9
   15b68:	bl	13fd4 <fprintf@plt>
   15b6c:	mov	r9, fp
   15b70:	ldr	fp, [r6, #80]	; 0x50
   15b74:	ldr	r3, [r6, #88]	; 0x58
   15b78:	ldr	r6, [r6]
   15b7c:	add	fp, fp, r3
   15b80:	b	15a20 <__flatcc_fb_codegen_c@@Base+0x7d0>
   15b84:	str	r2, [sp, #8]
   15b88:	ldr	r2, [sp, #28]
   15b8c:	str	r3, [sp]
   15b90:	str	r2, [sp, #4]
   15b94:	mov	r3, r9
   15b98:	mov	r2, sl
   15b9c:	ldr	r1, [pc, #1000]	; 15f8c <__flatcc_fb_codegen_c@@Base+0xd3c>
   15ba0:	ldr	r0, [r4, #204]	; 0xcc
   15ba4:	bl	13fd4 <fprintf@plt>
   15ba8:	b	15b6c <__flatcc_fb_codegen_c@@Base+0x91c>
   15bac:	ldrh	r3, [r6, #24]
   15bb0:	cmp	r3, #8
   15bb4:	beq	15c04 <__flatcc_fb_codegen_c@@Base+0x9b4>
   15bb8:	cmp	r3, #14
   15bbc:	beq	15c48 <__flatcc_fb_codegen_c@@Base+0x9f8>
   15bc0:	ldr	r2, [pc, #968]	; 15f90 <__flatcc_fb_codegen_c@@Base+0xd40>
   15bc4:	ldr	r1, [pc, #968]	; 15f94 <__flatcc_fb_codegen_c@@Base+0xd44>
   15bc8:	ldr	r0, [r4, #204]	; 0xcc
   15bcc:	bl	13fd4 <fprintf@plt>
   15bd0:	ldr	r0, [pc, #960]	; 15f98 <__flatcc_fb_codegen_c@@Base+0xd48>
   15bd4:	ldr	r3, [pc, #960]	; 15f9c <__flatcc_fb_codegen_c@@Base+0xd4c>
   15bd8:	ldr	r2, [pc, #840]	; 15f28 <__flatcc_fb_codegen_c@@Base+0xcd8>
   15bdc:	str	r3, [sp]
   15be0:	ldr	r1, [pc, #952]	; 15fa0 <__flatcc_fb_codegen_c@@Base+0xd50>
   15be4:	ldr	r3, [pc, #952]	; 15fa4 <__flatcc_fb_codegen_c@@Base+0xd54>
   15be8:	ldr	r0, [r0]
   15bec:	bl	13fd4 <fprintf@plt>
   15bf0:	ldr	r3, [pc, #812]	; 15f24 <__flatcc_fb_codegen_c@@Base+0xcd4>
   15bf4:	ldr	r2, [pc, #936]	; 15fa4 <__flatcc_fb_codegen_c@@Base+0xd54>
   15bf8:	ldr	r1, [pc, #808]	; 15f28 <__flatcc_fb_codegen_c@@Base+0xcd8>
   15bfc:	ldr	r0, [pc, #932]	; 15fa8 <__flatcc_fb_codegen_c@@Base+0xd58>
   15c00:	b	15894 <__flatcc_fb_codegen_c@@Base+0x644>
   15c04:	ldr	r0, [r6, #16]
   15c08:	ldr	fp, [pc, #816]	; 15f40 <__flatcc_fb_codegen_c@@Base+0xcf0>
   15c0c:	cmp	r0, #5
   15c10:	moveq	fp, r4
   15c14:	bl	15614 <__flatcc_fb_codegen_c@@Base+0x3c4>
   15c18:	cmp	r8, #0
   15c1c:	movne	r2, fp
   15c20:	ldrne	r1, [pc, #900]	; 15fac <__flatcc_fb_codegen_c@@Base+0xd5c>
   15c24:	mov	r3, r0
   15c28:	bne	15c9c <__flatcc_fb_codegen_c@@Base+0xa4c>
   15c2c:	ldr	r1, [pc, #892]	; 15fb0 <__flatcc_fb_codegen_c@@Base+0xd60>
   15c30:	mov	r3, fp
   15c34:	mov	r2, sl
   15c38:	str	r0, [sp]
   15c3c:	ldr	r0, [r4, #204]	; 0xcc
   15c40:	bl	13fd4 <fprintf@plt>
   15c44:	b	15ca4 <__flatcc_fb_codegen_c@@Base+0xa54>
   15c48:	ldr	r0, [r6, #16]
   15c4c:	ldrh	fp, [r0, #8]
   15c50:	bic	r3, fp, #2
   15c54:	cmp	r3, #1
   15c58:	ldrne	r3, [pc, #708]	; 15f24 <__flatcc_fb_codegen_c@@Base+0xcd4>
   15c5c:	ldrne	r2, [pc, #848]	; 15fb4 <__flatcc_fb_codegen_c@@Base+0xd64>
   15c60:	ldrne	r1, [pc, #704]	; 15f28 <__flatcc_fb_codegen_c@@Base+0xcd8>
   15c64:	ldrne	r0, [pc, #844]	; 15fb8 <__flatcc_fb_codegen_c@@Base+0xd68>
   15c68:	bne	15894 <__flatcc_fb_codegen_c@@Base+0x644>
   15c6c:	ldr	r2, [pc, #840]	; 15fbc <__flatcc_fb_codegen_c@@Base+0xd6c>
   15c70:	cmp	fp, #1
   15c74:	ldr	r3, [pc, #708]	; 15f40 <__flatcc_fb_codegen_c@@Base+0xcf0>
   15c78:	add	r1, sp, #260	; 0x104
   15c7c:	movne	r3, r2
   15c80:	mov	fp, r3
   15c84:	bl	15410 <__flatcc_fb_codegen_c@@Base+0x1c0>
   15c88:	cmp	r8, #0
   15c8c:	beq	15cbc <__flatcc_fb_codegen_c@@Base+0xa6c>
   15c90:	ldr	r1, [pc, #808]	; 15fc0 <__flatcc_fb_codegen_c@@Base+0xd70>
   15c94:	mov	r3, fp
   15c98:	add	r2, sp, #260	; 0x104
   15c9c:	ldr	r0, [r4, #204]	; 0xcc
   15ca0:	bl	13fd4 <fprintf@plt>
   15ca4:	ldr	r3, [sp, #32]
   15ca8:	ldr	r2, [sp, #28]
   15cac:	ldr	r1, [pc, #784]	; 15fc4 <__flatcc_fb_codegen_c@@Base+0xd74>
   15cb0:	ldr	r0, [r4, #204]	; 0xcc
   15cb4:	bl	13fd4 <fprintf@plt>
   15cb8:	b	15b70 <__flatcc_fb_codegen_c@@Base+0x920>
   15cbc:	str	fp, [sp]
   15cc0:	add	r3, sp, #260	; 0x104
   15cc4:	mov	r2, sl
   15cc8:	ldr	r1, [pc, #760]	; 15fc8 <__flatcc_fb_codegen_c@@Base+0xd78>
   15ccc:	b	15c3c <__flatcc_fb_codegen_c@@Base+0x9ec>
   15cd0:	ldrh	r3, [r6, #72]	; 0x48
   15cd4:	tst	r3, #4
   15cd8:	bne	15d20 <__flatcc_fb_codegen_c@@Base+0xad0>
   15cdc:	ldr	r3, [r6, #4]
   15ce0:	ldr	r7, [r3, #4]
   15ce4:	ldr	r8, [r3]
   15ce8:	ldrh	r3, [r6, #24]
   15cec:	cmp	r3, #8
   15cf0:	beq	15d28 <__flatcc_fb_codegen_c@@Base+0xad8>
   15cf4:	cmp	r3, #14
   15cf8:	beq	15d8c <__flatcc_fb_codegen_c@@Base+0xb3c>
   15cfc:	ldrh	r3, [r6, #72]	; 0x48
   15d00:	tst	r3, #128	; 0x80
   15d04:	beq	15d20 <__flatcc_fb_codegen_c@@Base+0xad0>
   15d08:	cmp	fp, #0
   15d0c:	bne	15d20 <__flatcc_fb_codegen_c@@Base+0xad0>
   15d10:	ldr	r1, [r4, #204]	; 0xcc
   15d14:	ldr	r0, [pc, #688]	; 15fcc <__flatcc_fb_codegen_c@@Base+0xd7c>
   15d18:	bl	14070 <fputs@plt>
   15d1c:	mov	r9, #1
   15d20:	ldr	r6, [r6]
   15d24:	b	159d0 <__flatcc_fb_codegen_c@@Base+0x780>
   15d28:	ldr	r3, [r6, #16]
   15d2c:	ldr	r2, [pc, #524]	; 15f40 <__flatcc_fb_codegen_c@@Base+0xcf0>
   15d30:	cmp	r3, #5
   15d34:	moveq	r2, r4
   15d38:	mov	r0, r3
   15d3c:	str	r2, [sp, #32]
   15d40:	str	r3, [sp, #28]
   15d44:	bl	15614 <__flatcc_fb_codegen_c@@Base+0x3c4>
   15d48:	ldr	r3, [sp, #28]
   15d4c:	str	r0, [sp, #24]
   15d50:	mov	r0, r3
   15d54:	bl	15728 <__flatcc_fb_codegen_c@@Base+0x4d8>
   15d58:	ldr	r1, [sp, #24]
   15d5c:	ldr	r2, [sp, #32]
   15d60:	str	r1, [sp, #20]
   15d64:	str	r2, [sp, #16]
   15d68:	str	r4, [sp, #8]
   15d6c:	stm	sp, {r7, r8}
   15d70:	mov	r3, r5
   15d74:	mov	r2, r4
   15d78:	ldr	r1, [pc, #592]	; 15fd0 <__flatcc_fb_codegen_c@@Base+0xd80>
   15d7c:	str	r0, [sp, #12]
   15d80:	ldr	r0, [r4, #204]	; 0xcc
   15d84:	bl	13fd4 <fprintf@plt>
   15d88:	b	15cfc <__flatcc_fb_codegen_c@@Base+0xaac>
   15d8c:	mov	r1, sl
   15d90:	ldr	r0, [r6, #16]
   15d94:	bl	15410 <__flatcc_fb_codegen_c@@Base+0x1c0>
   15d98:	ldr	r3, [r6, #16]
   15d9c:	ldrh	r2, [r3, #8]
   15da0:	cmp	r2, #1
   15da4:	beq	15f08 <__flatcc_fb_codegen_c@@Base+0xcb8>
   15da8:	cmp	r2, #3
   15dac:	bne	15cfc <__flatcc_fb_codegen_c@@Base+0xaac>
   15db0:	ldr	r0, [r3, #40]	; 0x28
   15db4:	bl	15728 <__flatcc_fb_codegen_c@@Base+0x4d8>
   15db8:	mov	r3, r5
   15dbc:	str	sl, [sp, #12]
   15dc0:	stm	sp, {r7, r8, sl}
   15dc4:	mov	r2, r4
   15dc8:	ldr	r1, [pc, #516]	; 15fd4 <__flatcc_fb_codegen_c@@Base+0xd84>
   15dcc:	ldr	r0, [r4, #204]	; 0xcc
   15dd0:	bl	13fd4 <fprintf@plt>
   15dd4:	ldr	r3, [r4, #212]	; 0xd4
   15dd8:	ldr	r3, [r3, #32]
   15ddc:	cmp	r3, #0
   15de0:	bne	15e08 <__flatcc_fb_codegen_c@@Base+0xbb8>
   15de4:	ldrh	r3, [r6, #72]	; 0x48
   15de8:	tst	r3, #128	; 0x80
   15dec:	beq	15e08 <__flatcc_fb_codegen_c@@Base+0xbb8>
   15df0:	stm	sp, {r7, r8, sl}
   15df4:	mov	r3, r5
   15df8:	mov	r2, r4
   15dfc:	ldr	r1, [pc, #468]	; 15fd8 <__flatcc_fb_codegen_c@@Base+0xd88>
   15e00:	ldr	r0, [r4, #204]	; 0xcc
   15e04:	bl	13fd4 <fprintf@plt>
   15e08:	ldrh	r3, [r6, #72]	; 0x48
   15e0c:	tst	r3, #128	; 0x80
   15e10:	beq	15cfc <__flatcc_fb_codegen_c@@Base+0xaac>
   15e14:	cmp	r9, #0
   15e18:	beq	15e28 <__flatcc_fb_codegen_c@@Base+0xbd8>
   15e1c:	ldr	r1, [r4, #204]	; 0xcc
   15e20:	ldr	r0, [pc, #436]	; 15fdc <__flatcc_fb_codegen_c@@Base+0xd8c>
   15e24:	bl	14070 <fputs@plt>
   15e28:	ldr	r1, [r4, #204]	; 0xcc
   15e2c:	ldr	r0, [pc, #428]	; 15fe0 <__flatcc_fb_codegen_c@@Base+0xd90>
   15e30:	bl	14070 <fputs@plt>
   15e34:	add	r3, sp, #260	; 0x104
   15e38:	str	r3, [sp, #8]
   15e3c:	stm	sp, {r7, r8}
   15e40:	mov	r3, r5
   15e44:	mov	r2, r4
   15e48:	ldr	r1, [pc, #404]	; 15fe4 <__flatcc_fb_codegen_c@@Base+0xd94>
   15e4c:	ldr	r0, [r4, #204]	; 0xcc
   15e50:	bl	13fd4 <fprintf@plt>
   15e54:	ldr	r3, [r4, #212]	; 0xd4
   15e58:	ldr	r3, [r3, #136]	; 0x88
   15e5c:	cmp	r3, #0
   15e60:	beq	15e88 <__flatcc_fb_codegen_c@@Base+0xc38>
   15e64:	add	r3, sp, #260	; 0x104
   15e68:	str	r3, [sp, #8]
   15e6c:	str	r5, [sp, #12]
   15e70:	stm	sp, {r7, r8}
   15e74:	mov	r3, r5
   15e78:	mov	r2, r4
   15e7c:	ldr	r1, [pc, #356]	; 15fe8 <__flatcc_fb_codegen_c@@Base+0xd98>
   15e80:	ldr	r0, [r4, #204]	; 0xcc
   15e84:	bl	13fd4 <fprintf@plt>
   15e88:	cmp	r9, #0
   15e8c:	beq	15e9c <__flatcc_fb_codegen_c@@Base+0xc4c>
   15e90:	mov	r9, #1
   15e94:	mov	fp, r9
   15e98:	b	15cfc <__flatcc_fb_codegen_c@@Base+0xaac>
   15e9c:	add	r3, sp, #260	; 0x104
   15ea0:	str	r3, [sp, #8]
   15ea4:	mov	r2, r4
   15ea8:	mov	r3, r5
   15eac:	ldr	r1, [pc, #312]	; 15fec <__flatcc_fb_codegen_c@@Base+0xd9c>
   15eb0:	stm	sp, {r7, r8}
   15eb4:	ldr	r0, [r4, #204]	; 0xcc
   15eb8:	bl	13fd4 <fprintf@plt>
   15ebc:	add	r3, sp, #260	; 0x104
   15ec0:	str	r3, [sp, #8]
   15ec4:	stm	sp, {r7, r8}
   15ec8:	mov	r3, r5
   15ecc:	mov	r2, r4
   15ed0:	ldr	r1, [pc, #280]	; 15ff0 <__flatcc_fb_codegen_c@@Base+0xda0>
   15ed4:	ldr	r0, [r4, #204]	; 0xcc
   15ed8:	bl	13fd4 <fprintf@plt>
   15edc:	ldr	r3, [r4, #212]	; 0xd4
   15ee0:	ldr	r3, [r3, #136]	; 0x88
   15ee4:	cmp	r3, #0
   15ee8:	beq	15e90 <__flatcc_fb_codegen_c@@Base+0xc40>
   15eec:	stm	sp, {r7, r8}
   15ef0:	mov	r3, r5
   15ef4:	mov	r2, r5
   15ef8:	ldr	r1, [pc, #244]	; 15ff4 <__flatcc_fb_codegen_c@@Base+0xda4>
   15efc:	ldr	r0, [r4, #204]	; 0xcc
   15f00:	bl	13fd4 <fprintf@plt>
   15f04:	b	15e90 <__flatcc_fb_codegen_c@@Base+0xc40>
   15f08:	stm	sp, {r7, r8, sl}
   15f0c:	mov	r3, r5
   15f10:	mov	r2, r4
   15f14:	ldr	r1, [pc, #220]	; 15ff8 <__flatcc_fb_codegen_c@@Base+0xda8>
   15f18:	ldr	r0, [r4, #204]	; 0xcc
   15f1c:	bl	13fd4 <fprintf@plt>
   15f20:	b	15cfc <__flatcc_fb_codegen_c@@Base+0xaac>
   15f24:	muleq	r3, r5, r7
   15f28:	andeq	r0, r3, lr, lsl #16
   15f2c:	ldrdeq	r0, [r3], -r1
   15f30:	andeq	r0, r0, r9, lsr #7
   15f34:	strdeq	r0, [r3], -r1
   15f38:	andeq	r0, r0, sl, lsr #7
   15f3c:	andeq	r0, r3, r1, lsl fp
   15f40:	andeq	r1, r3, r1, lsr #28
   15f44:	andeq	r0, r3, r0, lsr fp
   15f48:	muleq	r3, r1, fp
   15f4c:	andeq	r0, r3, r5, ror #23
   15f50:	andeq	r0, r3, r7, lsr #24
   15f54:	andeq	r0, r3, r3, lsr pc
   15f58:	andeq	r0, r3, r5, ror #30
   15f5c:	andeq	r0, r3, r5, lsr #31
   15f60:	andeq	r0, r3, r4, ror ip
   15f64:	andeq	r0, r3, r5, lsl #25
   15f68:	muleq	r3, r2, ip
   15f6c:	andeq	r9, r3, r4, lsr #4
   15f70:	andeq	r0, r3, pc, ror #27
   15f74:	strdeq	r0, [r3], -pc	; <UNPREDICTABLE>
   15f78:	andeq	r0, r3, lr, lsr lr
   15f7c:	muleq	r3, r6, lr
   15f80:	ldrdeq	r0, [r3], -ip
   15f84:	strdeq	r5, [r4], -r9
   15f88:			; <UNDEFINED> instruction: 0x00030cb0
   15f8c:	andeq	r0, r3, r3, ror #25
   15f90:	andeq	r0, r3, r1, asr #27
   15f94:	andeq	r0, r3, r0, ror #27
   15f98:	strheq	fp, [r5], -r0
   15f9c:	andeq	r0, r3, r9, ror sl
   15fa0:	andeq	r0, r3, lr, ror #20
   15fa4:	andeq	r0, r0, r5, lsl #8
   15fa8:	andeq	r9, r3, sp, asr #1
   15fac:	andeq	r0, r3, r2, lsr #26
   15fb0:	andeq	r0, r3, ip, lsr #26
   15fb4:	strdeq	r0, [r0], -sl
   15fb8:	andeq	r0, r3, r2, asr #26
   15fbc:	andeq	r0, r3, fp, asr #21
   15fc0:	muleq	r3, sp, sp
   15fc4:	andeq	r0, r3, r8, ror #27
   15fc8:	andeq	r0, r3, r9, lsr #27
   15fcc:	andeq	r1, r3, r1, lsr r2
   15fd0:			; <UNDEFINED> instruction: 0x00030fbd
   15fd4:	strdeq	r0, [r3], -r3
   15fd8:	andeq	r1, r3, ip, lsr #32
   15fdc:	andeq	r1, r3, r2, rrx
   15fe0:	andeq	r1, r3, r5, lsr #1
   15fe4:	andeq	r1, r3, r3, ror #1
   15fe8:	andeq	r1, r3, r9, lsl r1
   15fec:	andeq	r1, r3, r5, asr r1
   15ff0:	muleq	r3, r3, r1
   15ff4:	ldrdeq	r1, [r3], -r1	; <UNPREDICTABLE>
   15ff8:	strdeq	r1, [r3], -sl
   15ffc:	push	{r0, r1, r2, lr}
   16000:	sub	r0, r0, #1
   16004:	cmp	r0, #8
   16008:	ldrls	pc, [pc, r0, lsl #2]
   1600c:	b	16068 <__flatcc_fb_codegen_c@@Base+0xe18>
   16010:	muleq	r1, ip, r0
   16014:	andeq	r6, r1, r4, lsr r0
   16018:	andeq	r6, r1, r4, lsr #1
   1601c:	andeq	r6, r1, r0, asr #32
   16020:	andeq	r6, r1, r0, asr #32
   16024:	andeq	r6, r1, r8, asr #32
   16028:	andeq	r6, r1, r0, asr r0
   1602c:	andeq	r6, r1, r8, asr r0
   16030:	andeq	r6, r1, r0, rrx
   16034:	ldr	r0, [pc, #112]	; 160ac <__flatcc_fb_codegen_c@@Base+0xe5c>
   16038:	add	sp, sp, #12
   1603c:	pop	{pc}		; (ldr pc, [sp], #4)
   16040:	ldr	r0, [pc, #104]	; 160b0 <__flatcc_fb_codegen_c@@Base+0xe60>
   16044:	b	16038 <__flatcc_fb_codegen_c@@Base+0xde8>
   16048:	ldr	r0, [pc, #100]	; 160b4 <__flatcc_fb_codegen_c@@Base+0xe64>
   1604c:	b	16038 <__flatcc_fb_codegen_c@@Base+0xde8>
   16050:	ldr	r0, [pc, #96]	; 160b8 <__flatcc_fb_codegen_c@@Base+0xe68>
   16054:	b	16038 <__flatcc_fb_codegen_c@@Base+0xde8>
   16058:	ldr	r0, [pc, #92]	; 160bc <__flatcc_fb_codegen_c@@Base+0xe6c>
   1605c:	b	16038 <__flatcc_fb_codegen_c@@Base+0xde8>
   16060:	ldr	r0, [pc, #88]	; 160c0 <__flatcc_fb_codegen_c@@Base+0xe70>
   16064:	b	16038 <__flatcc_fb_codegen_c@@Base+0xde8>
   16068:	ldr	r0, [pc, #84]	; 160c4 <__flatcc_fb_codegen_c@@Base+0xe74>
   1606c:	ldr	r3, [pc, #84]	; 160c8 <__flatcc_fb_codegen_c@@Base+0xe78>
   16070:	ldr	r2, [pc, #84]	; 160cc <__flatcc_fb_codegen_c@@Base+0xe7c>
   16074:	str	r3, [sp]
   16078:	ldr	r1, [pc, #80]	; 160d0 <__flatcc_fb_codegen_c@@Base+0xe80>
   1607c:	mov	r3, #226	; 0xe2
   16080:	ldr	r0, [r0]
   16084:	bl	13fd4 <fprintf@plt>
   16088:	ldr	r3, [pc, #68]	; 160d4 <__flatcc_fb_codegen_c@@Base+0xe84>
   1608c:	mov	r2, #226	; 0xe2
   16090:	ldr	r1, [pc, #52]	; 160cc <__flatcc_fb_codegen_c@@Base+0xe7c>
   16094:	ldr	r0, [pc, #60]	; 160d8 <__flatcc_fb_codegen_c@@Base+0xe88>
   16098:	bl	14094 <__assert_fail@plt>
   1609c:	ldr	r0, [pc, #56]	; 160dc <__flatcc_fb_codegen_c@@Base+0xe8c>
   160a0:	b	16038 <__flatcc_fb_codegen_c@@Base+0xde8>
   160a4:	ldr	r0, [pc, #52]	; 160e0 <__flatcc_fb_codegen_c@@Base+0xe90>
   160a8:	b	16038 <__flatcc_fb_codegen_c@@Base+0xde8>
   160ac:	andeq	r1, r3, pc, lsl #5
   160b0:	andeq	r1, r3, r1, lsr #5
   160b4:	andeq	r1, r3, r7, lsl #5
   160b8:	muleq	r3, r0, r2
   160bc:	muleq	r3, r9, r2
   160c0:	andeq	r1, r3, r2, lsr #5
   160c4:	strheq	fp, [r5], -r0
   160c8:	andeq	r0, r3, r9, ror sl
   160cc:	andeq	r0, r3, r5, lsr #20
   160d0:	andeq	r0, r3, lr, ror #20
   160d4:	andeq	r0, r3, r0, lsr #15
   160d8:	andeq	r9, r3, sp, asr #1
   160dc:	andeq	r1, r3, r6, lsl #5
   160e0:	muleq	r3, r8, r2
   160e4:	ldrh	r3, [r1, #8]
   160e8:	push	{r0, r1, r2, r4, r5, lr}
   160ec:	mov	r4, r1
   160f0:	sub	r3, r3, #3
   160f4:	mov	r5, r2
   160f8:	cmp	r3, #3
   160fc:	ldrls	pc, [pc, r3, lsl #2]
   16100:	b	161a0 <__flatcc_fb_codegen_c@@Base+0xf50>
   16104:	andeq	r6, r1, r0, ror r1
   16108:	andeq	r6, r1, r8, lsr r1
   1610c:	andeq	r6, r1, r4, lsl r1
   16110:	andeq	r6, r1, r0, asr r1
   16114:	bl	15ffc <__flatcc_fb_codegen_c@@Base+0xdac>
   16118:	ldrd	r2, [r4]
   1611c:	ldr	r1, [pc, #176]	; 161d4 <__flatcc_fb_codegen_c@@Base+0xf84>
   16120:	strd	r2, [sp]
   16124:	mov	r2, r0
   16128:	mov	r0, r5
   1612c:	bl	14040 <sprintf@plt>
   16130:	add	sp, sp, #12
   16134:	pop	{r4, r5, pc}
   16138:	bl	15ffc <__flatcc_fb_codegen_c@@Base+0xdac>
   1613c:	ldrd	r2, [r4]
   16140:	ldr	r1, [pc, #144]	; 161d8 <__flatcc_fb_codegen_c@@Base+0xf88>
   16144:	strd	r2, [sp]
   16148:	mov	r2, r0
   1614c:	b	16128 <__flatcc_fb_codegen_c@@Base+0xed8>
   16150:	bl	15ffc <__flatcc_fb_codegen_c@@Base+0xdac>
   16154:	ldrb	r3, [r4]
   16158:	ldr	r1, [pc, #124]	; 161dc <__flatcc_fb_codegen_c@@Base+0xf8c>
   1615c:	mov	r2, r0
   16160:	mov	r0, r5
   16164:	add	sp, sp, #12
   16168:	pop	{r4, r5, lr}
   1616c:	b	14040 <sprintf@plt>
   16170:	cmp	r0, #11
   16174:	mov	r0, r5
   16178:	vldreq	d7, [r1]
   1617c:	ldrdne	r2, [r4]
   16180:	ldreq	r1, [pc, #88]	; 161e0 <__flatcc_fb_codegen_c@@Base+0xf90>
   16184:	ldrne	r1, [pc, #88]	; 161e4 <__flatcc_fb_codegen_c@@Base+0xf94>
   16188:	vcvteq.f32.f64	s14, d7
   1618c:	vcvteq.f64.f32	d7, s14
   16190:	vmoveq	r2, r3, d7
   16194:	add	sp, sp, #12
   16198:	pop	{r4, r5, lr}
   1619c:	b	14040 <sprintf@plt>
   161a0:	ldr	r0, [pc, #64]	; 161e8 <__flatcc_fb_codegen_c@@Base+0xf98>
   161a4:	ldr	r3, [pc, #64]	; 161ec <__flatcc_fb_codegen_c@@Base+0xf9c>
   161a8:	ldr	r2, [pc, #64]	; 161f0 <__flatcc_fb_codegen_c@@Base+0xfa0>
   161ac:	str	r3, [sp]
   161b0:	ldr	r1, [pc, #60]	; 161f4 <__flatcc_fb_codegen_c@@Base+0xfa4>
   161b4:	mov	r3, #260	; 0x104
   161b8:	ldr	r0, [r0]
   161bc:	bl	13fd4 <fprintf@plt>
   161c0:	ldr	r3, [pc, #48]	; 161f8 <__flatcc_fb_codegen_c@@Base+0xfa8>
   161c4:	mov	r2, #260	; 0x104
   161c8:	ldr	r1, [pc, #32]	; 161f0 <__flatcc_fb_codegen_c@@Base+0xfa0>
   161cc:	ldr	r0, [pc, #40]	; 161fc <__flatcc_fb_codegen_c@@Base+0xfac>
   161d0:	bl	14094 <__assert_fail@plt>
   161d4:	andeq	r1, r3, r9, lsr #5
   161d8:			; <UNDEFINED> instruction: 0x000312b2
   161dc:			; <UNDEFINED> instruction: 0x000312bb
   161e0:	andeq	r1, r3, r2, asr #5
   161e4:	andeq	r1, r3, r6, asr #5
   161e8:	strheq	fp, [r5], -r0
   161ec:	andeq	r0, r3, r9, ror sl
   161f0:	andeq	r0, r3, r5, lsr #20
   161f4:	andeq	r0, r3, lr, ror #20
   161f8:	andeq	r0, r3, ip, lsr #15
   161fc:	andeq	r9, r3, sp, asr #1
   16200:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16204:	sub	sp, sp, #348	; 0x15c
   16208:	mov	r6, r1
   1620c:	add	r5, sp, #124	; 0x7c
   16210:	mov	r4, r0
   16214:	mov	r2, #220	; 0xdc
   16218:	mov	r1, #0
   1621c:	mov	r0, r5
   16220:	bl	13fec <memset@plt>
   16224:	ldrh	r7, [r6, #8]
   16228:	sub	r3, r7, #3
   1622c:	cmp	r3, #1
   16230:	bls	16248 <__flatcc_fb_codegen_c@@Base+0xff8>
   16234:	ldr	r3, [pc, #644]	; 164c0 <__flatcc_fb_codegen_c@@Base+0x1270>
   16238:	ldr	r2, [pc, #644]	; 164c4 <__flatcc_fb_codegen_c@@Base+0x1274>
   1623c:	ldr	r1, [pc, #644]	; 164c8 <__flatcc_fb_codegen_c@@Base+0x1278>
   16240:	ldr	r0, [pc, #644]	; 164cc <__flatcc_fb_codegen_c@@Base+0x127c>
   16244:	bl	14094 <__assert_fail@plt>
   16248:	ldrh	r3, [r6, #48]	; 0x30
   1624c:	cmp	r3, #8
   16250:	ldrne	r3, [pc, #616]	; 164c0 <__flatcc_fb_codegen_c@@Base+0x1270>
   16254:	ldrne	r2, [pc, #628]	; 164d0 <__flatcc_fb_codegen_c@@Base+0x1280>
   16258:	ldrne	r1, [pc, #616]	; 164c8 <__flatcc_fb_codegen_c@@Base+0x1278>
   1625c:	ldrne	r0, [pc, #624]	; 164d4 <__flatcc_fb_codegen_c@@Base+0x1284>
   16260:	bne	16244 <__flatcc_fb_codegen_c@@Base+0xff4>
   16264:	ldr	r0, [r6, #40]	; 0x28
   16268:	ldr	sl, [pc, #616]	; 164d8 <__flatcc_fb_codegen_c@@Base+0x1288>
   1626c:	cmp	r0, #5
   16270:	moveq	fp, r4
   16274:	movne	fp, sl
   16278:	bl	15614 <__flatcc_fb_codegen_c@@Base+0x3c4>
   1627c:	ldr	r2, [pc, #600]	; 164dc <__flatcc_fb_codegen_c@@Base+0x128c>
   16280:	ldr	r9, [r6, #112]	; 0x70
   16284:	cmp	r7, #3
   16288:	ldr	r8, [pc, #592]	; 164e0 <__flatcc_fb_codegen_c@@Base+0x1290>
   1628c:	mov	r1, r5
   16290:	moveq	r8, r2
   16294:	lsl	r9, r9, #3
   16298:	str	r0, [sp, #20]
   1629c:	mov	r0, r6
   162a0:	bl	15410 <__flatcc_fb_codegen_c@@Base+0x1c0>
   162a4:	add	r3, r4, #204	; 0xcc
   162a8:	mov	r0, r3
   162ac:	ldr	r2, [r6, #32]
   162b0:	mov	r1, sl
   162b4:	str	r3, [sp, #16]
   162b8:	bl	15574 <__flatcc_fb_codegen_c@@Base+0x324>
   162bc:	ldr	r3, [sp, #20]
   162c0:	mov	r2, fp
   162c4:	ldr	r1, [pc, #536]	; 164e4 <__flatcc_fb_codegen_c@@Base+0x1294>
   162c8:	stm	sp, {r5, r8}
   162cc:	ldr	r0, [r4, #204]	; 0xcc
   162d0:	bl	13fd4 <fprintf@plt>
   162d4:	stm	sp, {r5, r8, r9}
   162d8:	mov	r3, r5
   162dc:	mov	r2, r4
   162e0:	ldr	r1, [pc, #512]	; 164e8 <__flatcc_fb_codegen_c@@Base+0x1298>
   162e4:	ldr	r0, [r4, #204]	; 0xcc
   162e8:	bl	13fd4 <fprintf@plt>
   162ec:	cmp	r7, #3
   162f0:	beq	1630c <__flatcc_fb_codegen_c@@Base+0x10bc>
   162f4:	str	r5, [sp]
   162f8:	mov	r3, r4
   162fc:	mov	r2, r4
   16300:	ldr	r1, [pc, #484]	; 164ec <__flatcc_fb_codegen_c@@Base+0x129c>
   16304:	ldr	r0, [r4, #204]	; 0xcc
   16308:	bl	13fd4 <fprintf@plt>
   1630c:	ldr	r9, [r6, #20]
   16310:	add	sl, sp, #24
   16314:	cmp	r9, #0
   16318:	bne	163d8 <__flatcc_fb_codegen_c@@Base+0x1188>
   1631c:	ldr	r1, [r4, #204]	; 0xcc
   16320:	mov	r0, #10
   16324:	bl	14034 <fputc@plt>
   16328:	cmp	r7, #3
   1632c:	mov	r3, r5
   16330:	mov	r2, r5
   16334:	beq	1642c <__flatcc_fb_codegen_c@@Base+0x11dc>
   16338:	ldr	r1, [pc, #432]	; 164f0 <__flatcc_fb_codegen_c@@Base+0x12a0>
   1633c:	ldr	r0, [r4, #204]	; 0xcc
   16340:	bl	13fd4 <fprintf@plt>
   16344:	ldr	r1, [r4, #204]	; 0xcc
   16348:	ldr	r0, [pc, #420]	; 164f4 <__flatcc_fb_codegen_c@@Base+0x12a4>
   1634c:	bl	14070 <fputs@plt>
   16350:	ldr	r9, [pc, #416]	; 164f8 <__flatcc_fb_codegen_c@@Base+0x12a8>
   16354:	ldr	r8, [r6, #20]
   16358:	ldr	sl, [pc, #412]	; 164fc <__flatcc_fb_codegen_c@@Base+0x12ac>
   1635c:	cmp	r8, #0
   16360:	bne	16444 <__flatcc_fb_codegen_c@@Base+0x11f4>
   16364:	ldr	r1, [r4, #204]	; 0xcc
   16368:	ldr	r0, [pc, #400]	; 16500 <__flatcc_fb_codegen_c@@Base+0x12b0>
   1636c:	bl	14070 <fputs@plt>
   16370:	ldr	r1, [r4, #204]	; 0xcc
   16374:	mov	r0, #10
   16378:	bl	14034 <fputc@plt>
   1637c:	cmp	r7, #3
   16380:	mov	r3, r5
   16384:	mov	r2, r5
   16388:	beq	16478 <__flatcc_fb_codegen_c@@Base+0x1228>
   1638c:	ldr	r1, [pc, #368]	; 16504 <__flatcc_fb_codegen_c@@Base+0x12b4>
   16390:	ldr	r0, [r4, #204]	; 0xcc
   16394:	bl	13fd4 <fprintf@plt>
   16398:	ldr	r1, [r4, #204]	; 0xcc
   1639c:	ldr	r0, [pc, #336]	; 164f4 <__flatcc_fb_codegen_c@@Base+0x12a4>
   163a0:	bl	14070 <fputs@plt>
   163a4:	ldr	r7, [pc, #348]	; 16508 <__flatcc_fb_codegen_c@@Base+0x12b8>
   163a8:	ldr	r6, [r6, #20]
   163ac:	ldr	r8, [pc, #344]	; 1650c <__flatcc_fb_codegen_c@@Base+0x12bc>
   163b0:	cmp	r6, #0
   163b4:	bne	16490 <__flatcc_fb_codegen_c@@Base+0x1240>
   163b8:	ldr	r1, [r4, #204]	; 0xcc
   163bc:	ldr	r0, [pc, #332]	; 16510 <__flatcc_fb_codegen_c@@Base+0x12c0>
   163c0:	bl	14070 <fputs@plt>
   163c4:	ldr	r1, [r4, #204]	; 0xcc
   163c8:	mov	r0, #10
   163cc:	bl	14034 <fputc@plt>
   163d0:	add	sp, sp, #348	; 0x15c
   163d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   163d8:	ldr	r2, [r9, #68]	; 0x44
   163dc:	ldr	r1, [pc, #244]	; 164d8 <__flatcc_fb_codegen_c@@Base+0x1288>
   163e0:	ldr	r0, [sp, #16]
   163e4:	bl	15574 <__flatcc_fb_codegen_c@@Base+0x324>
   163e8:	ldr	r2, [r9, #4]
   163ec:	add	r1, r9, #48	; 0x30
   163f0:	ldr	r0, [r6, #40]	; 0x28
   163f4:	ldr	r3, [r2, #4]
   163f8:	ldr	fp, [r2]
   163fc:	mov	r2, sl
   16400:	str	r3, [sp, #20]
   16404:	bl	160e4 <__flatcc_fb_codegen_c@@Base+0xe94>
   16408:	stmib	sp, {r5, r8, sl}
   1640c:	mov	r2, r5
   16410:	str	fp, [sp]
   16414:	ldr	r3, [sp, #20]
   16418:	ldr	r1, [pc, #244]	; 16514 <__flatcc_fb_codegen_c@@Base+0x12c4>
   1641c:	ldr	r0, [r4, #204]	; 0xcc
   16420:	bl	13fd4 <fprintf@plt>
   16424:	ldr	r9, [r9]
   16428:	b	16314 <__flatcc_fb_codegen_c@@Base+0x10c4>
   1642c:	ldr	r1, [pc, #228]	; 16518 <__flatcc_fb_codegen_c@@Base+0x12c8>
   16430:	ldr	r0, [r4, #204]	; 0xcc
   16434:	bl	13fd4 <fprintf@plt>
   16438:	ldr	r1, [r4, #204]	; 0xcc
   1643c:	ldr	r0, [pc, #216]	; 1651c <__flatcc_fb_codegen_c@@Base+0x12cc>
   16440:	b	1634c <__flatcc_fb_codegen_c@@Base+0x10fc>
   16444:	ldr	r2, [r8, #4]
   16448:	ldrh	r1, [r8, #10]
   1644c:	ldr	r0, [r4, #204]	; 0xcc
   16450:	ldm	r2, {r2, r3}
   16454:	tst	r1, #4
   16458:	movne	r1, sl
   1645c:	str	r2, [sp, #8]
   16460:	stm	sp, {r2, r3}
   16464:	moveq	r1, r9
   16468:	mov	r2, r5
   1646c:	bl	13fd4 <fprintf@plt>
   16470:	ldr	r8, [r8]
   16474:	b	1635c <__flatcc_fb_codegen_c@@Base+0x110c>
   16478:	ldr	r1, [pc, #160]	; 16520 <__flatcc_fb_codegen_c@@Base+0x12d0>
   1647c:	ldr	r0, [r4, #204]	; 0xcc
   16480:	bl	13fd4 <fprintf@plt>
   16484:	ldr	r1, [r4, #204]	; 0xcc
   16488:	ldr	r0, [pc, #140]	; 1651c <__flatcc_fb_codegen_c@@Base+0x12cc>
   1648c:	b	163a0 <__flatcc_fb_codegen_c@@Base+0x1150>
   16490:	ldr	r2, [r6, #4]
   16494:	ldrh	r1, [r6, #10]
   16498:	ldr	r0, [r4, #204]	; 0xcc
   1649c:	ldm	r2, {r2, r3}
   164a0:	tst	r1, #4
   164a4:	movne	r1, r8
   164a8:	str	r2, [sp]
   164ac:	moveq	r1, r7
   164b0:	mov	r2, r5
   164b4:	bl	13fd4 <fprintf@plt>
   164b8:	ldr	r6, [r6]
   164bc:	b	163b0 <__flatcc_fb_codegen_c@@Base+0x1160>
   164c0:			; <UNDEFINED> instruction: 0x000307ba
   164c4:			; <UNDEFINED> instruction: 0x000004b4
   164c8:	andeq	r0, r3, lr, lsl #16
   164cc:	ldrdeq	r1, [r3], -r5
   164d0:			; <UNDEFINED> instruction: 0x000004b5
   164d4:	andeq	r1, r3, r5, lsl r3
   164d8:	andeq	r1, r3, r1, lsr #28
   164dc:	andeq	r7, r4, r9, lsr #30
   164e0:	andeq	r1, r3, sl, asr #5
   164e4:	andeq	r1, r3, r5, lsr r3
   164e8:	andeq	r1, r3, ip, asr #6
   164ec:	andeq	r1, r3, r6, ror r3
   164f0:	andeq	r1, r3, pc, lsr #7
   164f4:	strdeq	r6, [r4], -r3
   164f8:	andeq	r1, r3, pc, ror #8
   164fc:	andeq	r1, r3, fp, lsr r4
   16500:	muleq	r3, r1, r4
   16504:			; <UNDEFINED> instruction: 0x000314b2
   16508:	andeq	r1, r3, r5, asr r5
   1650c:	andeq	r1, r3, r6, lsr #10
   16510:	andeq	r1, r3, r2, ror r5
   16514:	muleq	r3, r0, r3
   16518:	andeq	r1, r3, pc, ror #7
   1651c:	andeq	r1, r3, r5, lsr #8
   16520:	andeq	r1, r3, lr, ror #9
   16524:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16528:	sub	sp, sp, #1040	; 0x410
   1652c:	ldrh	r8, [r1, #8]
   16530:	sub	sp, sp, #4
   16534:	cmp	r8, #0
   16538:	str	r1, [sp, #40]	; 0x28
   1653c:	beq	16554 <__flatcc_fb_codegen_c@@Base+0x1304>
   16540:	ldr	r3, [pc, #2356]	; 16e7c <__flatcc_fb_codegen_c@@Base+0x1c2c>
   16544:	ldr	r2, [pc, #2356]	; 16e80 <__flatcc_fb_codegen_c@@Base+0x1c30>
   16548:	ldr	r1, [pc, #2356]	; 16e84 <__flatcc_fb_codegen_c@@Base+0x1c34>
   1654c:	ldr	r0, [pc, #2356]	; 16e88 <__flatcc_fb_codegen_c@@Base+0x1c38>
   16550:	bl	14094 <__assert_fail@plt>
   16554:	add	r5, sp, #160	; 0xa0
   16558:	mov	r4, r0
   1655c:	mov	r2, #220	; 0xdc
   16560:	mov	r1, r8
   16564:	mov	r0, r5
   16568:	bl	13fec <memset@plt>
   1656c:	mov	r2, #220	; 0xdc
   16570:	mov	r1, r8
   16574:	add	r0, sp, #380	; 0x17c
   16578:	bl	13fec <memset@plt>
   1657c:	mov	r3, r4
   16580:	mov	r0, #10
   16584:	ldr	r1, [r3, #204]!	; 0xcc
   16588:	str	r3, [sp, #44]	; 0x2c
   1658c:	bl	14034 <fputc@plt>
   16590:	mov	r1, r5
   16594:	ldr	r0, [sp, #40]	; 0x28
   16598:	bl	15410 <__flatcc_fb_codegen_c@@Base+0x1c0>
   1659c:	ldr	r3, [sp, #40]	; 0x28
   165a0:	ldr	r1, [pc, #2276]	; 16e8c <__flatcc_fb_codegen_c@@Base+0x1c3c>
   165a4:	ldr	r0, [sp, #44]	; 0x2c
   165a8:	ldr	r2, [r3, #32]
   165ac:	bl	15574 <__flatcc_fb_codegen_c@@Base+0x324>
   165b0:	mov	r2, r5
   165b4:	ldr	r1, [pc, #2260]	; 16e90 <__flatcc_fb_codegen_c@@Base+0x1c40>
   165b8:	ldr	r0, [r4, #204]	; 0xcc
   165bc:	bl	13fd4 <fprintf@plt>
   165c0:	mov	r3, r5
   165c4:	mov	r2, r5
   165c8:	str	r4, [sp]
   165cc:	ldr	r1, [pc, #2240]	; 16e94 <__flatcc_fb_codegen_c@@Base+0x1c44>
   165d0:	ldr	r0, [r4, #204]	; 0xcc
   165d4:	bl	13fd4 <fprintf@plt>
   165d8:	stmib	sp, {r4, r5}
   165dc:	str	r5, [sp]
   165e0:	mov	r3, r5
   165e4:	mov	r2, r5
   165e8:	ldr	r1, [pc, #2216]	; 16e98 <__flatcc_fb_codegen_c@@Base+0x1c48>
   165ec:	ldr	r0, [r4, #204]	; 0xcc
   165f0:	bl	13fd4 <fprintf@plt>
   165f4:	mov	r3, r5
   165f8:	mov	r2, r4
   165fc:	ldr	r1, [pc, #2200]	; 16e9c <__flatcc_fb_codegen_c@@Base+0x1c4c>
   16600:	ldr	r0, [r4, #204]	; 0xcc
   16604:	bl	13fd4 <fprintf@plt>
   16608:	ldr	r1, [r4, #204]	; 0xcc
   1660c:	mov	r0, #10
   16610:	bl	14034 <fputc@plt>
   16614:	ldr	r3, [sp, #40]	; 0x28
   16618:	ldr	r5, [r3, #20]
   1661c:	cmp	r5, #0
   16620:	bne	16630 <__flatcc_fb_codegen_c@@Base+0x13e0>
   16624:	add	sp, sp, #1040	; 0x410
   16628:	add	sp, sp, #4
   1662c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16630:	ldr	r2, [r5, #68]	; 0x44
   16634:	ldr	r1, [pc, #2128]	; 16e8c <__flatcc_fb_codegen_c@@Base+0x1c3c>
   16638:	ldr	r0, [sp, #44]	; 0x2c
   1663c:	bl	15574 <__flatcc_fb_codegen_c@@Base+0x324>
   16640:	ldrh	fp, [r5, #72]	; 0x48
   16644:	ldr	r3, [r5, #4]
   16648:	add	r9, sp, #160	; 0xa0
   1664c:	tst	fp, #4
   16650:	ldr	r6, [r3, #4]
   16654:	ldr	r7, [r3]
   16658:	beq	1667c <__flatcc_fb_codegen_c@@Base+0x142c>
   1665c:	str	r7, [sp]
   16660:	mov	r3, r6
   16664:	mov	r2, r9
   16668:	ldr	r1, [pc, #2096]	; 16ea0 <__flatcc_fb_codegen_c@@Base+0x1c50>
   1666c:	ldr	r0, [r4, #204]	; 0xcc
   16670:	bl	13fd4 <fprintf@plt>
   16674:	ldr	r5, [r5]
   16678:	b	1661c <__flatcc_fb_codegen_c@@Base+0x13cc>
   1667c:	ldrh	r3, [r5, #24]
   16680:	lsr	fp, fp, #8
   16684:	and	fp, fp, #1
   16688:	sub	r3, r3, #7
   1668c:	cmp	r3, #8
   16690:	ldrls	pc, [pc, r3, lsl #2]
   16694:	b	16e48 <__flatcc_fb_codegen_c@@Base+0x1bf8>
   16698:	andeq	r6, r1, ip, ror r8
   1669c:			; <UNDEFINED> instruction: 0x000166bc
   166a0:	andeq	r6, r1, ip, ror #22
   166a4:	andeq	r6, r1, ip, asr sl
   166a8:	andeq	r6, r1, r8, asr #28
   166ac:	andeq	r6, r1, r8, asr #28
   166b0:	andeq	r6, r1, r8, asr #28
   166b4:	muleq	r1, ip, fp
   166b8:			; <UNDEFINED> instruction: 0x00016db0
   166bc:	ldr	fp, [r5, #16]
   166c0:	ldr	r9, [pc, #1988]	; 16e8c <__flatcc_fb_codegen_c@@Base+0x1c3c>
   166c4:	cmp	fp, #5
   166c8:	mov	r0, fp
   166cc:	moveq	r9, r4
   166d0:	bl	15614 <__flatcc_fb_codegen_c@@Base+0x3c4>
   166d4:	mov	sl, r0
   166d8:	mov	r0, fp
   166dc:	bl	15728 <__flatcc_fb_codegen_c@@Base+0x4d8>
   166e0:	add	r3, sp, #60	; 0x3c
   166e4:	mov	r2, r3
   166e8:	add	r1, r5, #48	; 0x30
   166ec:	str	r3, [sp, #52]	; 0x34
   166f0:	str	r0, [sp, #48]	; 0x30
   166f4:	mov	r0, fp
   166f8:	bl	160e4 <__flatcc_fb_codegen_c@@Base+0xe94>
   166fc:	ldr	r3, [sp, #52]	; 0x34
   16700:	add	fp, sp, #160	; 0xa0
   16704:	str	r3, [sp, #36]	; 0x24
   16708:	ldr	r3, [sp, #48]	; 0x30
   1670c:	str	sl, [sp, #32]
   16710:	str	r9, [sp, #28]
   16714:	str	r3, [sp, #24]
   16718:	str	r4, [sp, #20]
   1671c:	str	r7, [sp, #16]
   16720:	str	r6, [sp, #12]
   16724:	str	fp, [sp, #8]
   16728:	ldrd	r2, [r5, #96]	; 0x60
   1672c:	ldr	r1, [pc, #1904]	; 16ea4 <__flatcc_fb_codegen_c@@Base+0x1c54>
   16730:	strd	r2, [sp]
   16734:	mov	r2, r4
   16738:	ldr	r0, [r4, #204]	; 0xcc
   1673c:	bl	13fd4 <fprintf@plt>
   16740:	ldr	r3, [r4, #212]	; 0xd4
   16744:	ldr	r3, [r3, #32]
   16748:	cmp	r3, #0
   1674c:	bne	16774 <__flatcc_fb_codegen_c@@Base+0x1524>
   16750:	ldrh	r3, [r5, #72]	; 0x48
   16754:	tst	r3, #128	; 0x80
   16758:	beq	16774 <__flatcc_fb_codegen_c@@Base+0x1524>
   1675c:	stm	sp, {r6, r7, r9, sl}
   16760:	mov	r3, fp
   16764:	mov	r2, r4
   16768:	ldr	r1, [pc, #1848]	; 16ea8 <__flatcc_fb_codegen_c@@Base+0x1c58>
   1676c:	ldr	r0, [r4, #204]	; 0xcc
   16770:	bl	13fd4 <fprintf@plt>
   16774:	ldrh	r3, [r5, #72]	; 0x48
   16778:	ands	r3, r3, #128	; 0x80
   1677c:	beq	16e74 <__flatcc_fb_codegen_c@@Base+0x1c24>
   16780:	cmp	r8, #0
   16784:	beq	16794 <__flatcc_fb_codegen_c@@Base+0x1544>
   16788:	ldr	r1, [r4, #204]	; 0xcc
   1678c:	ldr	r0, [pc, #1816]	; 16eac <__flatcc_fb_codegen_c@@Base+0x1c5c>
   16790:	bl	14070 <fputs@plt>
   16794:	ldr	r1, [r4, #204]	; 0xcc
   16798:	ldr	r0, [pc, #1808]	; 16eb0 <__flatcc_fb_codegen_c@@Base+0x1c60>
   1679c:	bl	14070 <fputs@plt>
   167a0:	stm	sp, {r6, r7, r9, sl}
   167a4:	mov	r3, fp
   167a8:	mov	r2, r4
   167ac:	ldr	r1, [pc, #1792]	; 16eb4 <__flatcc_fb_codegen_c@@Base+0x1c64>
   167b0:	ldr	r0, [r4, #204]	; 0xcc
   167b4:	bl	13fd4 <fprintf@plt>
   167b8:	ldr	r3, [r4, #212]	; 0xd4
   167bc:	ldr	r3, [r3, #136]	; 0x88
   167c0:	cmp	r3, #0
   167c4:	beq	167e4 <__flatcc_fb_codegen_c@@Base+0x1594>
   167c8:	str	r4, [sp, #16]
   167cc:	stm	sp, {r6, r7, r9, sl}
   167d0:	mov	r3, fp
   167d4:	mov	r2, r4
   167d8:	ldr	r1, [pc, #1752]	; 16eb8 <__flatcc_fb_codegen_c@@Base+0x1c68>
   167dc:	ldr	r0, [r4, #204]	; 0xcc
   167e0:	bl	13fd4 <fprintf@plt>
   167e4:	cmp	r8, #0
   167e8:	beq	16818 <__flatcc_fb_codegen_c@@Base+0x15c8>
   167ec:	mov	r6, #1
   167f0:	mov	r8, r6
   167f4:	ldrh	r3, [r5, #72]	; 0x48
   167f8:	eor	r6, r6, #1
   167fc:	ands	r3, r6, r3, lsr #7
   16800:	beq	16674 <__flatcc_fb_codegen_c@@Base+0x1424>
   16804:	ldr	r1, [r4, #204]	; 0xcc
   16808:	ldr	r0, [pc, #1708]	; 16ebc <__flatcc_fb_codegen_c@@Base+0x1c6c>
   1680c:	bl	14070 <fputs@plt>
   16810:	mov	r8, #1
   16814:	b	16674 <__flatcc_fb_codegen_c@@Base+0x1424>
   16818:	stm	sp, {r6, r7, r9, sl}
   1681c:	mov	r3, fp
   16820:	mov	r2, r4
   16824:	ldr	r1, [pc, #1684]	; 16ec0 <__flatcc_fb_codegen_c@@Base+0x1c70>
   16828:	ldr	r0, [r4, #204]	; 0xcc
   1682c:	bl	13fd4 <fprintf@plt>
   16830:	stm	sp, {r6, r7, r9, sl}
   16834:	mov	r3, fp
   16838:	mov	r2, r4
   1683c:	ldr	r1, [pc, #1664]	; 16ec4 <__flatcc_fb_codegen_c@@Base+0x1c74>
   16840:	ldr	r0, [r4, #204]	; 0xcc
   16844:	bl	13fd4 <fprintf@plt>
   16848:	ldr	r3, [r4, #212]	; 0xd4
   1684c:	ldr	r3, [r3, #136]	; 0x88
   16850:	cmp	r3, #0
   16854:	beq	167ec <__flatcc_fb_codegen_c@@Base+0x159c>
   16858:	mov	r3, fp
   1685c:	stm	sp, {r6, r7}
   16860:	mov	r2, r3
   16864:	ldr	r1, [pc, #1628]	; 16ec8 <__flatcc_fb_codegen_c@@Base+0x1c78>
   16868:	ldr	r0, [r4, #204]	; 0xcc
   1686c:	mov	r8, #1
   16870:	bl	13fd4 <fprintf@plt>
   16874:	mov	r6, r8
   16878:	b	167f4 <__flatcc_fb_codegen_c@@Base+0x15a4>
   1687c:	ldr	r3, [r5, #16]
   16880:	sub	r3, r3, #1
   16884:	cmp	r3, #10
   16888:	ldrls	pc, [pc, r3, lsl #2]
   1688c:	b	169a0 <__flatcc_fb_codegen_c@@Base+0x1750>
   16890:	ldrdeq	r6, [r1], -r4
   16894:			; <UNDEFINED> instruction: 0x000168bc
   16898:	ldrdeq	r6, [r1], -ip
   1689c:	andeq	r6, r1, r8, ror #18
   168a0:	andeq	r6, r1, r8, ror #18
   168a4:	andeq	r6, r1, r0, ror r9
   168a8:	andeq	r6, r1, r8, ror r9
   168ac:	andeq	r6, r1, r0, lsl #19
   168b0:	andeq	r6, r1, r8, lsl #19
   168b4:	muleq	r1, r8, r9
   168b8:	muleq	r1, r0, r9
   168bc:	ldr	r3, [pc, #1544]	; 16ecc <__flatcc_fb_codegen_c@@Base+0x1c7c>
   168c0:	str	r6, [sp, #12]
   168c4:	str	fp, [sp, #28]
   168c8:	str	r3, [sp, #24]
   168cc:	str	r4, [sp, #20]
   168d0:	str	r7, [sp, #16]
   168d4:	str	r9, [sp, #8]
   168d8:	ldrd	r2, [r5, #96]	; 0x60
   168dc:	ldr	r1, [pc, #1516]	; 16ed0 <__flatcc_fb_codegen_c@@Base+0x1c80>
   168e0:	strd	r2, [sp]
   168e4:	mov	r2, r4
   168e8:	ldr	r0, [r4, #204]	; 0xcc
   168ec:	bl	13fd4 <fprintf@plt>
   168f0:	ldr	r6, [r5, #104]	; 0x68
   168f4:	cmp	r6, #0
   168f8:	beq	167f4 <__flatcc_fb_codegen_c@@Base+0x15a4>
   168fc:	add	r7, sp, #600	; 0x258
   16900:	mov	r2, #220	; 0xdc
   16904:	mov	r1, #0
   16908:	mov	r0, r7
   1690c:	bl	13fec <memset@plt>
   16910:	mov	r2, #220	; 0xdc
   16914:	mov	r1, #0
   16918:	add	r0, sp, #820	; 0x334
   1691c:	bl	13fec <memset@plt>
   16920:	ldrh	r3, [r6, #8]
   16924:	cmp	r3, #0
   16928:	beq	16a14 <__flatcc_fb_codegen_c@@Base+0x17c4>
   1692c:	cmp	r3, #1
   16930:	bne	169e4 <__flatcc_fb_codegen_c@@Base+0x1794>
   16934:	ldr	r9, [pc, #1432]	; 16ed4 <__flatcc_fb_codegen_c@@Base+0x1c84>
   16938:	mov	r0, r6
   1693c:	mov	r1, r7
   16940:	bl	15410 <__flatcc_fb_codegen_c@@Base+0x1c0>
   16944:	ldr	r3, [sp, #40]	; 0x28
   16948:	ldrh	r6, [r3, #8]
   1694c:	cmp	r6, #0
   16950:	beq	16a1c <__flatcc_fb_codegen_c@@Base+0x17cc>
   16954:	ldr	r3, [pc, #1404]	; 16ed8 <__flatcc_fb_codegen_c@@Base+0x1c88>
   16958:	ldr	r2, [pc, #1404]	; 16edc <__flatcc_fb_codegen_c@@Base+0x1c8c>
   1695c:	ldr	r1, [pc, #1312]	; 16e84 <__flatcc_fb_codegen_c@@Base+0x1c34>
   16960:	ldr	r0, [pc, #1400]	; 16ee0 <__flatcc_fb_codegen_c@@Base+0x1c90>
   16964:	b	16550 <__flatcc_fb_codegen_c@@Base+0x1300>
   16968:	ldr	r3, [pc, #1396]	; 16ee4 <__flatcc_fb_codegen_c@@Base+0x1c94>
   1696c:	b	168c0 <__flatcc_fb_codegen_c@@Base+0x1670>
   16970:	ldr	r3, [pc, #1392]	; 16ee8 <__flatcc_fb_codegen_c@@Base+0x1c98>
   16974:	b	168c0 <__flatcc_fb_codegen_c@@Base+0x1670>
   16978:	ldr	r3, [pc, #1388]	; 16eec <__flatcc_fb_codegen_c@@Base+0x1c9c>
   1697c:	b	168c0 <__flatcc_fb_codegen_c@@Base+0x1670>
   16980:	ldr	r3, [pc, #1384]	; 16ef0 <__flatcc_fb_codegen_c@@Base+0x1ca0>
   16984:	b	168c0 <__flatcc_fb_codegen_c@@Base+0x1670>
   16988:	ldr	r3, [pc, #1380]	; 16ef4 <__flatcc_fb_codegen_c@@Base+0x1ca4>
   1698c:	b	168c0 <__flatcc_fb_codegen_c@@Base+0x1670>
   16990:	ldr	r3, [pc, #1376]	; 16ef8 <__flatcc_fb_codegen_c@@Base+0x1ca8>
   16994:	b	168c0 <__flatcc_fb_codegen_c@@Base+0x1670>
   16998:	ldr	r3, [pc, #1372]	; 16efc <__flatcc_fb_codegen_c@@Base+0x1cac>
   1699c:	b	168c0 <__flatcc_fb_codegen_c@@Base+0x1670>
   169a0:	ldr	r0, [pc, #1368]	; 16f00 <__flatcc_fb_codegen_c@@Base+0x1cb0>
   169a4:	ldr	r3, [pc, #1368]	; 16f04 <__flatcc_fb_codegen_c@@Base+0x1cb4>
   169a8:	ldr	r2, [pc, #1368]	; 16f08 <__flatcc_fb_codegen_c@@Base+0x1cb8>
   169ac:	str	r3, [sp]
   169b0:	ldr	r1, [pc, #1364]	; 16f0c <__flatcc_fb_codegen_c@@Base+0x1cbc>
   169b4:	mov	r3, #186	; 0xba
   169b8:	ldr	r0, [r0]
   169bc:	bl	13fd4 <fprintf@plt>
   169c0:	ldr	r3, [pc, #1352]	; 16f10 <__flatcc_fb_codegen_c@@Base+0x1cc0>
   169c4:	ldr	r1, [pc, #1340]	; 16f08 <__flatcc_fb_codegen_c@@Base+0x1cb8>
   169c8:	mov	r2, #186	; 0xba
   169cc:	ldr	r0, [pc, #1344]	; 16f14 <__flatcc_fb_codegen_c@@Base+0x1cc4>
   169d0:	b	16550 <__flatcc_fb_codegen_c@@Base+0x1300>
   169d4:	ldr	r3, [pc, #1340]	; 16f18 <__flatcc_fb_codegen_c@@Base+0x1cc8>
   169d8:	b	168c0 <__flatcc_fb_codegen_c@@Base+0x1670>
   169dc:	ldr	r3, [pc, #1336]	; 16f1c <__flatcc_fb_codegen_c@@Base+0x1ccc>
   169e0:	b	168c0 <__flatcc_fb_codegen_c@@Base+0x1670>
   169e4:	ldr	r0, [pc, #1300]	; 16f00 <__flatcc_fb_codegen_c@@Base+0x1cb0>
   169e8:	ldr	r3, [pc, #1328]	; 16f20 <__flatcc_fb_codegen_c@@Base+0x1cd0>
   169ec:	ldr	r2, [pc, #1168]	; 16e84 <__flatcc_fb_codegen_c@@Base+0x1c34>
   169f0:	str	r3, [sp]
   169f4:	ldr	r1, [pc, #1296]	; 16f0c <__flatcc_fb_codegen_c@@Base+0x1cbc>
   169f8:	ldr	r3, [pc, #1316]	; 16f24 <__flatcc_fb_codegen_c@@Base+0x1cd4>
   169fc:	ldr	r0, [r0]
   16a00:	bl	13fd4 <fprintf@plt>
   16a04:	ldr	r3, [pc, #1228]	; 16ed8 <__flatcc_fb_codegen_c@@Base+0x1c88>
   16a08:	ldr	r2, [pc, #1300]	; 16f24 <__flatcc_fb_codegen_c@@Base+0x1cd4>
   16a0c:	ldr	r1, [pc, #1136]	; 16e84 <__flatcc_fb_codegen_c@@Base+0x1c34>
   16a10:	b	169cc <__flatcc_fb_codegen_c@@Base+0x177c>
   16a14:	ldr	r9, [pc, #1292]	; 16f28 <__flatcc_fb_codegen_c@@Base+0x1cd8>
   16a18:	b	16938 <__flatcc_fb_codegen_c@@Base+0x16e8>
   16a1c:	add	r1, sp, #820	; 0x334
   16a20:	ldr	r0, [sp, #40]	; 0x28
   16a24:	bl	15410 <__flatcc_fb_codegen_c@@Base+0x1c0>
   16a28:	ldr	r3, [r5, #4]
   16a2c:	str	r9, [sp, #12]
   16a30:	str	r7, [sp, #8]
   16a34:	ldr	r2, [r3]
   16a38:	ldr	r1, [pc, #1260]	; 16f2c <__flatcc_fb_codegen_c@@Base+0x1cdc>
   16a3c:	str	r2, [sp, #4]
   16a40:	ldr	r3, [r3, #4]
   16a44:	mov	r2, r4
   16a48:	str	r3, [sp]
   16a4c:	add	r3, sp, #820	; 0x334
   16a50:	ldr	r0, [r4, #204]	; 0xcc
   16a54:	bl	13fd4 <fprintf@plt>
   16a58:	b	167f4 <__flatcc_fb_codegen_c@@Base+0x15a4>
   16a5c:	str	fp, [sp, #20]
   16a60:	str	r7, [sp, #16]
   16a64:	str	r6, [sp, #12]
   16a68:	str	r9, [sp, #8]
   16a6c:	ldrd	r2, [r5, #96]	; 0x60
   16a70:	ldr	r1, [pc, #1208]	; 16f30 <__flatcc_fb_codegen_c@@Base+0x1ce0>
   16a74:	strd	r2, [sp]
   16a78:	mov	r2, r4
   16a7c:	ldr	r0, [r4, #204]	; 0xcc
   16a80:	bl	13fd4 <fprintf@plt>
   16a84:	ldr	r3, [r4, #212]	; 0xd4
   16a88:	ldr	r3, [r3, #32]
   16a8c:	cmp	r3, #0
   16a90:	bne	16ab8 <__flatcc_fb_codegen_c@@Base+0x1868>
   16a94:	ldrh	r3, [r5, #72]	; 0x48
   16a98:	tst	r3, #128	; 0x80
   16a9c:	beq	16ab8 <__flatcc_fb_codegen_c@@Base+0x1868>
   16aa0:	stm	sp, {r6, r7}
   16aa4:	mov	r3, r9
   16aa8:	mov	r2, r4
   16aac:	ldr	r1, [pc, #1152]	; 16f34 <__flatcc_fb_codegen_c@@Base+0x1ce4>
   16ab0:	ldr	r0, [r4, #204]	; 0xcc
   16ab4:	bl	13fd4 <fprintf@plt>
   16ab8:	ldrh	r3, [r5, #72]	; 0x48
   16abc:	ands	r3, r3, #128	; 0x80
   16ac0:	beq	16e74 <__flatcc_fb_codegen_c@@Base+0x1c24>
   16ac4:	cmp	r8, #0
   16ac8:	beq	16ad8 <__flatcc_fb_codegen_c@@Base+0x1888>
   16acc:	ldr	r1, [r4, #204]	; 0xcc
   16ad0:	ldr	r0, [pc, #980]	; 16eac <__flatcc_fb_codegen_c@@Base+0x1c5c>
   16ad4:	bl	14070 <fputs@plt>
   16ad8:	stm	sp, {r6, r7}
   16adc:	mov	r3, r9
   16ae0:	mov	r2, r4
   16ae4:	ldr	r1, [pc, #1100]	; 16f38 <__flatcc_fb_codegen_c@@Base+0x1ce8>
   16ae8:	ldr	r0, [r4, #204]	; 0xcc
   16aec:	bl	13fd4 <fprintf@plt>
   16af0:	ldr	r3, [r4, #212]	; 0xd4
   16af4:	ldr	r3, [r3, #136]	; 0x88
   16af8:	cmp	r3, #0
   16afc:	beq	16b18 <__flatcc_fb_codegen_c@@Base+0x18c8>
   16b00:	stm	sp, {r6, r7}
   16b04:	mov	r3, r9
   16b08:	mov	r2, r4
   16b0c:	ldr	r1, [pc, #1064]	; 16f3c <__flatcc_fb_codegen_c@@Base+0x1cec>
   16b10:	ldr	r0, [r4, #204]	; 0xcc
   16b14:	bl	13fd4 <fprintf@plt>
   16b18:	cmp	r8, #0
   16b1c:	bne	167ec <__flatcc_fb_codegen_c@@Base+0x159c>
   16b20:	stm	sp, {r6, r7}
   16b24:	mov	r3, r9
   16b28:	mov	r2, r4
   16b2c:	ldr	r1, [pc, #1036]	; 16f40 <__flatcc_fb_codegen_c@@Base+0x1cf0>
   16b30:	ldr	r0, [r4, #204]	; 0xcc
   16b34:	bl	13fd4 <fprintf@plt>
   16b38:	stm	sp, {r6, r7}
   16b3c:	mov	r3, r9
   16b40:	mov	r2, r4
   16b44:	ldr	r1, [pc, #1016]	; 16f44 <__flatcc_fb_codegen_c@@Base+0x1cf4>
   16b48:	ldr	r0, [r4, #204]	; 0xcc
   16b4c:	bl	13fd4 <fprintf@plt>
   16b50:	ldr	r3, [r4, #212]	; 0xd4
   16b54:	ldr	r3, [r3, #136]	; 0x88
   16b58:	cmp	r3, #0
   16b5c:	beq	167ec <__flatcc_fb_codegen_c@@Base+0x159c>
   16b60:	stm	sp, {r6, r7}
   16b64:	mov	r3, r9
   16b68:	b	16860 <__flatcc_fb_codegen_c@@Base+0x1610>
   16b6c:	str	fp, [sp, #24]
   16b70:	str	r4, [sp, #20]
   16b74:	str	r7, [sp, #16]
   16b78:	str	r6, [sp, #12]
   16b7c:	str	r9, [sp, #8]
   16b80:	ldrd	r2, [r5, #96]	; 0x60
   16b84:	ldr	r1, [pc, #956]	; 16f48 <__flatcc_fb_codegen_c@@Base+0x1cf8>
   16b88:	strd	r2, [sp]
   16b8c:	mov	r2, r4
   16b90:	ldr	r0, [r4, #204]	; 0xcc
   16b94:	bl	13fd4 <fprintf@plt>
   16b98:	b	16d7c <__flatcc_fb_codegen_c@@Base+0x1b2c>
   16b9c:	add	sl, sp, #380	; 0x17c
   16ba0:	mov	r1, sl
   16ba4:	ldr	r0, [r5, #16]
   16ba8:	bl	15410 <__flatcc_fb_codegen_c@@Base+0x1c0>
   16bac:	ldr	r3, [r5, #16]
   16bb0:	ldrh	r2, [r3, #8]
   16bb4:	cmp	r2, #4
   16bb8:	ldrls	pc, [pc, r2, lsl #2]
   16bbc:	b	16d84 <__flatcc_fb_codegen_c@@Base+0x1b34>
   16bc0:	strdeq	r6, [r1], -ip
   16bc4:	ldrdeq	r6, [r1], -r4
   16bc8:	andeq	r6, r1, r4, lsl #27
   16bcc:	andeq	r6, r1, r4, lsr #24
   16bd0:	andeq	r6, r1, ip, asr #26
   16bd4:	str	fp, [sp, #24]
   16bd8:	str	sl, [sp, #20]
   16bdc:	str	r7, [sp, #16]
   16be0:	str	r6, [sp, #12]
   16be4:	str	r9, [sp, #8]
   16be8:	ldrd	r2, [r5, #96]	; 0x60
   16bec:	ldr	r1, [pc, #856]	; 16f4c <__flatcc_fb_codegen_c@@Base+0x1cfc>
   16bf0:	strd	r2, [sp]
   16bf4:	mov	r2, r4
   16bf8:	b	16b90 <__flatcc_fb_codegen_c@@Base+0x1940>
   16bfc:	str	fp, [sp, #24]
   16c00:	str	sl, [sp, #20]
   16c04:	str	r7, [sp, #16]
   16c08:	str	r6, [sp, #12]
   16c0c:	str	r9, [sp, #8]
   16c10:	ldrd	r2, [r5, #96]	; 0x60
   16c14:	ldr	r1, [pc, #820]	; 16f50 <__flatcc_fb_codegen_c@@Base+0x1d00>
   16c18:	strd	r2, [sp]
   16c1c:	mov	r2, r4
   16c20:	b	16b90 <__flatcc_fb_codegen_c@@Base+0x1940>
   16c24:	add	fp, sp, #60	; 0x3c
   16c28:	mov	r2, fp
   16c2c:	add	r1, r5, #48	; 0x30
   16c30:	ldr	r0, [r3, #40]	; 0x28
   16c34:	bl	160e4 <__flatcc_fb_codegen_c@@Base+0xe94>
   16c38:	str	fp, [sp, #28]
   16c3c:	str	sl, [sp, #24]
   16c40:	str	sl, [sp, #20]
   16c44:	str	r7, [sp, #16]
   16c48:	str	r6, [sp, #12]
   16c4c:	str	r9, [sp, #8]
   16c50:	ldrd	r2, [r5, #96]	; 0x60
   16c54:	ldr	r1, [pc, #760]	; 16f54 <__flatcc_fb_codegen_c@@Base+0x1d04>
   16c58:	strd	r2, [sp]
   16c5c:	mov	r2, r4
   16c60:	ldr	r0, [r4, #204]	; 0xcc
   16c64:	bl	13fd4 <fprintf@plt>
   16c68:	ldr	r3, [r4, #212]	; 0xd4
   16c6c:	ldr	r3, [r3, #32]
   16c70:	cmp	r3, #0
   16c74:	bne	16c9c <__flatcc_fb_codegen_c@@Base+0x1a4c>
   16c78:	ldrh	r3, [r5, #72]	; 0x48
   16c7c:	tst	r3, #128	; 0x80
   16c80:	beq	16c9c <__flatcc_fb_codegen_c@@Base+0x1a4c>
   16c84:	stm	sp, {r6, r7, sl}
   16c88:	mov	r3, r9
   16c8c:	mov	r2, r4
   16c90:	ldr	r1, [pc, #704]	; 16f58 <__flatcc_fb_codegen_c@@Base+0x1d08>
   16c94:	ldr	r0, [r4, #204]	; 0xcc
   16c98:	bl	13fd4 <fprintf@plt>
   16c9c:	ldrh	r3, [r5, #72]	; 0x48
   16ca0:	ands	r3, r3, #128	; 0x80
   16ca4:	beq	16e74 <__flatcc_fb_codegen_c@@Base+0x1c24>
   16ca8:	cmp	r8, #0
   16cac:	beq	16cbc <__flatcc_fb_codegen_c@@Base+0x1a6c>
   16cb0:	ldr	r1, [r4, #204]	; 0xcc
   16cb4:	ldr	r0, [pc, #496]	; 16eac <__flatcc_fb_codegen_c@@Base+0x1c5c>
   16cb8:	bl	14070 <fputs@plt>
   16cbc:	add	fp, sp, #380	; 0x17c
   16cc0:	ldr	r1, [r4, #204]	; 0xcc
   16cc4:	ldr	r0, [pc, #484]	; 16eb0 <__flatcc_fb_codegen_c@@Base+0x1c60>
   16cc8:	bl	14070 <fputs@plt>
   16ccc:	stm	sp, {r6, r7, fp}
   16cd0:	mov	r3, r9
   16cd4:	mov	r2, r4
   16cd8:	ldr	r1, [pc, #636]	; 16f5c <__flatcc_fb_codegen_c@@Base+0x1d0c>
   16cdc:	ldr	r0, [r4, #204]	; 0xcc
   16ce0:	bl	13fd4 <fprintf@plt>
   16ce4:	ldr	r3, [r4, #212]	; 0xd4
   16ce8:	ldr	r3, [r3, #136]	; 0x88
   16cec:	cmp	r3, #0
   16cf0:	beq	16d10 <__flatcc_fb_codegen_c@@Base+0x1ac0>
   16cf4:	str	r4, [sp, #12]
   16cf8:	stm	sp, {r6, r7, fp}
   16cfc:	mov	r3, r9
   16d00:	mov	r2, r4
   16d04:	ldr	r1, [pc, #596]	; 16f60 <__flatcc_fb_codegen_c@@Base+0x1d10>
   16d08:	ldr	r0, [r4, #204]	; 0xcc
   16d0c:	bl	13fd4 <fprintf@plt>
   16d10:	cmp	r8, #0
   16d14:	bne	167ec <__flatcc_fb_codegen_c@@Base+0x159c>
   16d18:	stm	sp, {r6, r7, sl}
   16d1c:	mov	r3, r9
   16d20:	mov	r2, r4
   16d24:	ldr	r1, [pc, #568]	; 16f64 <__flatcc_fb_codegen_c@@Base+0x1d14>
   16d28:	ldr	r0, [r4, #204]	; 0xcc
   16d2c:	bl	13fd4 <fprintf@plt>
   16d30:	stm	sp, {r6, r7, sl}
   16d34:	mov	r3, r9
   16d38:	mov	r2, r4
   16d3c:	ldr	r1, [pc, #548]	; 16f68 <__flatcc_fb_codegen_c@@Base+0x1d18>
   16d40:	ldr	r0, [r4, #204]	; 0xcc
   16d44:	bl	13fd4 <fprintf@plt>
   16d48:	b	16b50 <__flatcc_fb_codegen_c@@Base+0x1900>
   16d4c:	str	fp, [sp, #24]
   16d50:	str	sl, [sp, #20]
   16d54:	str	r7, [sp, #16]
   16d58:	str	r6, [sp, #12]
   16d5c:	str	r9, [sp, #8]
   16d60:	ldrd	r2, [r5, #96]	; 0x60
   16d64:	ldr	r1, [pc, #512]	; 16f6c <__flatcc_fb_codegen_c@@Base+0x1d1c>
   16d68:	strd	r2, [sp]
   16d6c:	mov	r3, r4
   16d70:	mov	r2, r4
   16d74:	ldr	r0, [r4, #204]	; 0xcc
   16d78:	bl	13fd4 <fprintf@plt>
   16d7c:	mov	r6, #0
   16d80:	b	167f4 <__flatcc_fb_codegen_c@@Base+0x15a4>
   16d84:	ldr	r0, [pc, #372]	; 16f00 <__flatcc_fb_codegen_c@@Base+0x1cb0>
   16d88:	ldr	r3, [pc, #480]	; 16f70 <__flatcc_fb_codegen_c@@Base+0x1d20>
   16d8c:	ldr	r2, [pc, #240]	; 16e84 <__flatcc_fb_codegen_c@@Base+0x1c34>
   16d90:	str	r3, [sp]
   16d94:	ldr	r1, [pc, #368]	; 16f0c <__flatcc_fb_codegen_c@@Base+0x1cbc>
   16d98:	mov	r3, #1568	; 0x620
   16d9c:	ldr	r0, [r0]
   16da0:	bl	13fd4 <fprintf@plt>
   16da4:	ldr	r3, [pc, #208]	; 16e7c <__flatcc_fb_codegen_c@@Base+0x1c2c>
   16da8:	mov	r2, #1568	; 0x620
   16dac:	b	16a0c <__flatcc_fb_codegen_c@@Base+0x17bc>
   16db0:	add	sl, sp, #380	; 0x17c
   16db4:	mov	r1, sl
   16db8:	ldr	r0, [r5, #16]
   16dbc:	bl	15410 <__flatcc_fb_codegen_c@@Base+0x1c0>
   16dc0:	ldr	r3, [r5, #16]
   16dc4:	ldrh	r3, [r3, #8]
   16dc8:	cmp	r3, #4
   16dcc:	bhi	16de0 <__flatcc_fb_codegen_c@@Base+0x1b90>
   16dd0:	mov	r2, #1
   16dd4:	lsl	r2, r2, r3
   16dd8:	tst	r2, #27
   16ddc:	bne	16e0c <__flatcc_fb_codegen_c@@Base+0x1bbc>
   16de0:	ldr	r0, [pc, #280]	; 16f00 <__flatcc_fb_codegen_c@@Base+0x1cb0>
   16de4:	ldr	r3, [pc, #392]	; 16f74 <__flatcc_fb_codegen_c@@Base+0x1d24>
   16de8:	ldr	r2, [pc, #148]	; 16e84 <__flatcc_fb_codegen_c@@Base+0x1c34>
   16dec:	str	r3, [sp]
   16df0:	ldr	r1, [pc, #276]	; 16f0c <__flatcc_fb_codegen_c@@Base+0x1cbc>
   16df4:	mov	r3, #1584	; 0x630
   16df8:	ldr	r0, [r0]
   16dfc:	bl	13fd4 <fprintf@plt>
   16e00:	ldr	r3, [pc, #116]	; 16e7c <__flatcc_fb_codegen_c@@Base+0x1c2c>
   16e04:	mov	r2, #1584	; 0x630
   16e08:	b	16a0c <__flatcc_fb_codegen_c@@Base+0x17bc>
   16e0c:	cmp	r3, #4
   16e10:	str	fp, [sp, #24]
   16e14:	str	sl, [sp, #20]
   16e18:	str	r7, [sp, #16]
   16e1c:	str	r6, [sp, #12]
   16e20:	str	r9, [sp, #8]
   16e24:	ldrd	r2, [r5, #96]	; 0x60
   16e28:	ldrne	r1, [pc, #328]	; 16f78 <__flatcc_fb_codegen_c@@Base+0x1d28>
   16e2c:	strd	r2, [sp]
   16e30:	movne	r2, r4
   16e34:	bne	16b90 <__flatcc_fb_codegen_c@@Base+0x1940>
   16e38:	mov	r3, r4
   16e3c:	mov	r2, r4
   16e40:	ldr	r1, [pc, #308]	; 16f7c <__flatcc_fb_codegen_c@@Base+0x1d2c>
   16e44:	b	16d74 <__flatcc_fb_codegen_c@@Base+0x1b24>
   16e48:	ldr	r0, [pc, #176]	; 16f00 <__flatcc_fb_codegen_c@@Base+0x1cb0>
   16e4c:	ldr	r3, [pc, #300]	; 16f80 <__flatcc_fb_codegen_c@@Base+0x1d30>
   16e50:	ldr	r2, [pc, #44]	; 16e84 <__flatcc_fb_codegen_c@@Base+0x1c34>
   16e54:	str	r3, [sp]
   16e58:	ldr	r1, [pc, #172]	; 16f0c <__flatcc_fb_codegen_c@@Base+0x1cbc>
   16e5c:	ldr	r3, [pc, #288]	; 16f84 <__flatcc_fb_codegen_c@@Base+0x1d34>
   16e60:	ldr	r0, [r0]
   16e64:	bl	13fd4 <fprintf@plt>
   16e68:	ldr	r3, [pc, #12]	; 16e7c <__flatcc_fb_codegen_c@@Base+0x1c2c>
   16e6c:	ldr	r2, [pc, #272]	; 16f84 <__flatcc_fb_codegen_c@@Base+0x1d34>
   16e70:	b	16a0c <__flatcc_fb_codegen_c@@Base+0x17bc>
   16e74:	mov	r6, r3
   16e78:	b	167f4 <__flatcc_fb_codegen_c@@Base+0x15a4>
   16e7c:	andeq	r0, r3, r3, asr #15
   16e80:	andeq	r0, r0, r2, asr r5
   16e84:	andeq	r0, r3, lr, lsl #16
   16e88:	andeq	r0, r3, r1, lsl #17
   16e8c:	andeq	r1, r3, r1, lsr #28
   16e90:	strdeq	r1, [r3], -r8
   16e94:	andeq	r0, r3, r5, ror #30
   16e98:	andeq	r1, r3, r1, lsr #12
   16e9c:	andeq	r1, r3, r6, lsl #13
   16ea0:	muleq	r3, sp, r6
   16ea4:	andeq	r1, r3, sl, asr #13
   16ea8:	andeq	r1, r3, r3, lsl #14
   16eac:	andeq	r1, r3, r2, rrx
   16eb0:	andeq	r1, r3, r5, lsr #1
   16eb4:	andeq	r1, r3, r4, lsr r7
   16eb8:	andeq	r1, r3, r5, ror #14
   16ebc:	andeq	r1, r3, r1, lsr r2
   16ec0:	andeq	r1, r3, r3, lsr #15
   16ec4:	ldrdeq	r1, [r3], -ip
   16ec8:	ldrdeq	r1, [r3], -r1	; <UNPREDICTABLE>
   16ecc:	muleq	r3, pc, r5	; <UNPREDICTABLE>
   16ed0:	andeq	r1, r3, r5, lsl r8
   16ed4:	strdeq	r1, [r3], -r0
   16ed8:	andeq	r0, r3, r5, ror #15
   16edc:	andeq	r0, r0, pc, lsr r5
   16ee0:	andeq	r1, r3, ip, ror r8
   16ee4:			; <UNDEFINED> instruction: 0x000315b9
   16ee8:	muleq	r3, r3, r5
   16eec:	andeq	r1, r3, r0, lsr #11
   16ef0:	andeq	r1, r3, sp, lsr #11
   16ef4:	andeq	r1, r3, r5, asr #11
   16ef8:	ldrdeq	r1, [r3], -r0
   16efc:	ldrdeq	r1, [r3], -ip
   16f00:	strheq	fp, [r5], -r0
   16f04:	andeq	r0, r3, r9, ror sl
   16f08:	andeq	r0, r3, r5, lsr #20
   16f0c:	andeq	r0, r3, lr, ror #20
   16f10:	andeq	r0, r3, sp, asr #15
   16f14:	andeq	r9, r3, sp, asr #1
   16f18:	muleq	r3, r2, r5
   16f1c:	andeq	r1, r3, ip, lsr #11
   16f20:	andeq	r1, r3, r8, asr #16
   16f24:	andeq	r0, r0, fp, lsr r5
   16f28:	andeq	r1, r3, r9, ror #11
   16f2c:	muleq	r3, fp, r8
   16f30:	andeq	r1, r3, r8, asr #17
   16f34:	strdeq	r1, [r3], -r5
   16f38:	andeq	r1, r3, r0, lsr #18
   16f3c:	andeq	r1, r3, fp, asr #18
   16f40:	andeq	r1, r3, r6, ror r9
   16f44:	andeq	r1, r3, r9, lsr #19
   16f48:	ldrdeq	r1, [r3], -ip
   16f4c:	andeq	r1, r3, r9, lsl sl
   16f50:	andeq	r1, r3, r3, asr sl
   16f54:	andeq	r1, r3, fp, lsl #21
   16f58:	andeq	r1, r3, ip, lsr #32
   16f5c:	andeq	r1, r3, r3, ror #1
   16f60:	andeq	r1, r3, r7, asr #21
   16f64:	andeq	r1, r3, r5, asr r1
   16f68:	muleq	r3, r3, r1
   16f6c:	andeq	r1, r3, sl, lsl #22
   16f70:	andeq	r1, r3, lr, lsr fp
   16f74:	andeq	r1, r3, r7, lsl #23
   16f78:	andeq	r1, r3, r2, lsl ip
   16f7c:	ldrdeq	r1, [r3], -r7
   16f80:	andeq	r1, r3, r9, asr #24
   16f84:	andeq	r0, r0, pc, lsr r6

00016f88 <__flatcc_fb_gen_common_c_header@@Base>:
   16f88:	push	{r4, r5, lr}
   16f8c:	mov	r4, r0
   16f90:	add	r5, r0, #102	; 0x66
   16f94:	mov	r3, r5
   16f98:	sub	sp, sp, #236	; 0xec
   16f9c:	mov	r2, r5
   16fa0:	ldr	r1, [pc, #2736]	; 17a58 <__flatcc_fb_gen_common_c_header@@Base+0xad0>
   16fa4:	ldr	r0, [r0, #204]	; 0xcc
   16fa8:	bl	13fd4 <fprintf@plt>
   16fac:	ldr	r1, [r4, #204]	; 0xcc
   16fb0:	ldr	r0, [pc, #2724]	; 17a5c <__flatcc_fb_gen_common_c_header@@Base+0xad4>
   16fb4:	bl	14070 <fputs@plt>
   16fb8:	ldr	r1, [r4, #204]	; 0xcc
   16fbc:	ldr	r0, [pc, #2716]	; 17a60 <__flatcc_fb_gen_common_c_header@@Base+0xad8>
   16fc0:	bl	14070 <fputs@plt>
   16fc4:	ldr	r3, [r4, #212]	; 0xd4
   16fc8:	ldr	r3, [r3, #136]	; 0x88
   16fcc:	cmp	r3, #0
   16fd0:	bne	16fe0 <__flatcc_fb_gen_common_c_header@@Base+0x58>
   16fd4:	ldr	r1, [r4, #204]	; 0xcc
   16fd8:	ldr	r0, [pc, #2692]	; 17a64 <__flatcc_fb_gen_common_c_header@@Base+0xadc>
   16fdc:	bl	14070 <fputs@plt>
   16fe0:	ldr	r3, [r4, #212]	; 0xd4
   16fe4:	ldr	r3, [r3, #140]	; 0x8c
   16fe8:	cmp	r3, #0
   16fec:	beq	16ffc <__flatcc_fb_gen_common_c_header@@Base+0x74>
   16ff0:	ldr	r1, [r4, #204]	; 0xcc
   16ff4:	ldr	r0, [pc, #2668]	; 17a68 <__flatcc_fb_gen_common_c_header@@Base+0xae0>
   16ff8:	bl	14070 <fputs@plt>
   16ffc:	ldr	r1, [r4, #204]	; 0xcc
   17000:	ldr	r0, [pc, #2660]	; 17a6c <__flatcc_fb_gen_common_c_header@@Base+0xae4>
   17004:	bl	14070 <fputs@plt>
   17008:	ldr	r1, [pc, #2656]	; 17a70 <__flatcc_fb_gen_common_c_header@@Base+0xae8>
   1700c:	mov	r0, r4
   17010:	bl	13efc <strcmp@plt>
   17014:	cmp	r0, #0
   17018:	beq	1708c <__flatcc_fb_gen_common_c_header@@Base+0x104>
   1701c:	mov	r3, r4
   17020:	mov	r2, r4
   17024:	ldr	r1, [pc, #2632]	; 17a74 <__flatcc_fb_gen_common_c_header@@Base+0xaec>
   17028:	str	r4, [sp, #8]
   1702c:	str	r4, [sp, #4]
   17030:	str	r4, [sp]
   17034:	ldr	r0, [r4, #204]	; 0xcc
   17038:	bl	13fd4 <fprintf@plt>
   1703c:	mov	r3, r4
   17040:	ldr	r2, [pc, #2608]	; 17a78 <__flatcc_fb_gen_common_c_header@@Base+0xaf0>
   17044:	ldr	r1, [pc, #2608]	; 17a7c <__flatcc_fb_gen_common_c_header@@Base+0xaf4>
   17048:	str	r4, [sp, #4]
   1704c:	str	r4, [sp]
   17050:	ldr	r0, [r4, #204]	; 0xcc
   17054:	bl	13fd4 <fprintf@plt>
   17058:	mov	r3, r4
   1705c:	mov	r2, r4
   17060:	ldr	r1, [pc, #2584]	; 17a80 <__flatcc_fb_gen_common_c_header@@Base+0xaf8>
   17064:	str	r4, [sp, #8]
   17068:	str	r4, [sp, #4]
   1706c:	str	r4, [sp]
   17070:	ldr	r0, [r4, #204]	; 0xcc
   17074:	bl	13fd4 <fprintf@plt>
   17078:	mov	r3, r5
   1707c:	mov	r2, r5
   17080:	ldr	r1, [pc, #2556]	; 17a84 <__flatcc_fb_gen_common_c_header@@Base+0xafc>
   17084:	ldr	r0, [r4, #204]	; 0xcc
   17088:	bl	13fd4 <fprintf@plt>
   1708c:	mov	r3, r4
   17090:	mov	r2, r4
   17094:	ldr	r1, [pc, #2540]	; 17a88 <__flatcc_fb_gen_common_c_header@@Base+0xb00>
   17098:	ldr	r0, [r4, #204]	; 0xcc
   1709c:	bl	13fd4 <fprintf@plt>
   170a0:	mov	r3, r4
   170a4:	mov	r2, r4
   170a8:	ldr	r1, [pc, #2524]	; 17a8c <__flatcc_fb_gen_common_c_header@@Base+0xb04>
   170ac:	str	r4, [sp, #16]
   170b0:	str	r4, [sp, #12]
   170b4:	str	r4, [sp, #8]
   170b8:	str	r4, [sp, #4]
   170bc:	str	r4, [sp]
   170c0:	ldr	r0, [r4, #204]	; 0xcc
   170c4:	bl	13fd4 <fprintf@plt>
   170c8:	mov	r3, r4
   170cc:	mov	r2, r4
   170d0:	ldr	r1, [pc, #2488]	; 17a90 <__flatcc_fb_gen_common_c_header@@Base+0xb08>
   170d4:	ldr	r0, [r4, #204]	; 0xcc
   170d8:	bl	13fd4 <fprintf@plt>
   170dc:	mov	r3, r4
   170e0:	str	r4, [sp, #4]
   170e4:	str	r4, [sp]
   170e8:	mov	r2, r4
   170ec:	ldr	r1, [pc, #2464]	; 17a94 <__flatcc_fb_gen_common_c_header@@Base+0xb0c>
   170f0:	ldr	r0, [r4, #204]	; 0xcc
   170f4:	bl	13fd4 <fprintf@plt>
   170f8:	ldr	r3, [r4, #212]	; 0xd4
   170fc:	ldr	r3, [r3, #32]
   17100:	cmp	r3, #0
   17104:	beq	17a08 <__flatcc_fb_gen_common_c_header@@Base+0xa80>
   17108:	mov	r2, r4
   1710c:	ldr	r1, [pc, #2436]	; 17a98 <__flatcc_fb_gen_common_c_header@@Base+0xb10>
   17110:	ldr	r0, [r4, #204]	; 0xcc
   17114:	bl	13fd4 <fprintf@plt>
   17118:	mov	r3, r4
   1711c:	mov	r2, r4
   17120:	ldr	r1, [pc, #2420]	; 17a9c <__flatcc_fb_gen_common_c_header@@Base+0xb14>
   17124:	ldr	r0, [r4, #204]	; 0xcc
   17128:	bl	13fd4 <fprintf@plt>
   1712c:	mov	r3, r4
   17130:	mov	r2, r4
   17134:	ldr	r1, [pc, #2404]	; 17aa0 <__flatcc_fb_gen_common_c_header@@Base+0xb18>
   17138:	str	r4, [sp, #8]
   1713c:	str	r4, [sp, #4]
   17140:	str	r4, [sp]
   17144:	ldr	r0, [r4, #204]	; 0xcc
   17148:	bl	13fd4 <fprintf@plt>
   1714c:	mov	r3, r4
   17150:	mov	r2, r4
   17154:	ldr	r1, [pc, #2376]	; 17aa4 <__flatcc_fb_gen_common_c_header@@Base+0xb1c>
   17158:	str	r4, [sp, #8]
   1715c:	str	r4, [sp, #4]
   17160:	str	r4, [sp]
   17164:	ldr	r0, [r4, #204]	; 0xcc
   17168:	bl	13fd4 <fprintf@plt>
   1716c:	mov	r3, r4
   17170:	mov	r2, r4
   17174:	ldr	r1, [pc, #2348]	; 17aa8 <__flatcc_fb_gen_common_c_header@@Base+0xb20>
   17178:	str	r4, [sp]
   1717c:	ldr	r0, [r4, #204]	; 0xcc
   17180:	bl	13fd4 <fprintf@plt>
   17184:	mov	r3, r4
   17188:	mov	r2, r4
   1718c:	ldr	r1, [pc, #2328]	; 17aac <__flatcc_fb_gen_common_c_header@@Base+0xb24>
   17190:	str	r4, [sp]
   17194:	ldr	r0, [r4, #204]	; 0xcc
   17198:	bl	13fd4 <fprintf@plt>
   1719c:	mov	r3, r4
   171a0:	mov	r2, r4
   171a4:	ldr	r1, [pc, #2308]	; 17ab0 <__flatcc_fb_gen_common_c_header@@Base+0xb28>
   171a8:	str	r4, [sp]
   171ac:	ldr	r0, [r4, #204]	; 0xcc
   171b0:	bl	13fd4 <fprintf@plt>
   171b4:	mov	r3, r4
   171b8:	str	r4, [sp, #8]
   171bc:	str	r4, [sp, #4]
   171c0:	str	r4, [sp]
   171c4:	mov	r2, r4
   171c8:	ldr	r1, [pc, #2276]	; 17ab4 <__flatcc_fb_gen_common_c_header@@Base+0xb2c>
   171cc:	ldr	r0, [r4, #204]	; 0xcc
   171d0:	bl	13fd4 <fprintf@plt>
   171d4:	ldr	r3, [r4, #212]	; 0xd4
   171d8:	ldr	r3, [r3, #32]
   171dc:	cmp	r3, #0
   171e0:	beq	17a18 <__flatcc_fb_gen_common_c_header@@Base+0xa90>
   171e4:	mov	r2, r4
   171e8:	ldr	r1, [pc, #2248]	; 17ab8 <__flatcc_fb_gen_common_c_header@@Base+0xb30>
   171ec:	ldr	r0, [r4, #204]	; 0xcc
   171f0:	bl	13fd4 <fprintf@plt>
   171f4:	mov	r3, r4
   171f8:	mov	r2, r4
   171fc:	ldr	r1, [pc, #2232]	; 17abc <__flatcc_fb_gen_common_c_header@@Base+0xb34>
   17200:	str	r4, [sp, #4]
   17204:	str	r4, [sp]
   17208:	ldr	r0, [r4, #204]	; 0xcc
   1720c:	bl	13fd4 <fprintf@plt>
   17210:	mov	r3, r4
   17214:	mov	r2, r4
   17218:	ldr	r1, [pc, #2208]	; 17ac0 <__flatcc_fb_gen_common_c_header@@Base+0xb38>
   1721c:	ldr	r0, [r4, #204]	; 0xcc
   17220:	bl	13fd4 <fprintf@plt>
   17224:	mov	r3, r4
   17228:	mov	r2, r4
   1722c:	ldr	r1, [pc, #2192]	; 17ac4 <__flatcc_fb_gen_common_c_header@@Base+0xb3c>
   17230:	str	r4, [sp]
   17234:	ldr	r0, [r4, #204]	; 0xcc
   17238:	bl	13fd4 <fprintf@plt>
   1723c:	mov	r3, r4
   17240:	mov	r2, r4
   17244:	ldr	r1, [pc, #2172]	; 17ac8 <__flatcc_fb_gen_common_c_header@@Base+0xb40>
   17248:	ldr	r0, [r4, #204]	; 0xcc
   1724c:	bl	13fd4 <fprintf@plt>
   17250:	mov	r3, r4
   17254:	mov	r2, r4
   17258:	ldr	r1, [pc, #2156]	; 17acc <__flatcc_fb_gen_common_c_header@@Base+0xb44>
   1725c:	str	r4, [sp, #4]
   17260:	str	r4, [sp]
   17264:	ldr	r0, [r4, #204]	; 0xcc
   17268:	bl	13fd4 <fprintf@plt>
   1726c:	mov	r3, r4
   17270:	mov	r2, r4
   17274:	ldr	r1, [pc, #2132]	; 17ad0 <__flatcc_fb_gen_common_c_header@@Base+0xb48>
   17278:	ldr	r0, [r4, #204]	; 0xcc
   1727c:	bl	13fd4 <fprintf@plt>
   17280:	mov	r3, r4
   17284:	mov	r2, r4
   17288:	ldr	r1, [pc, #2116]	; 17ad4 <__flatcc_fb_gen_common_c_header@@Base+0xb4c>
   1728c:	ldr	r0, [r4, #204]	; 0xcc
   17290:	bl	13fd4 <fprintf@plt>
   17294:	mov	r3, r4
   17298:	mov	r2, r4
   1729c:	ldr	r1, [pc, #2100]	; 17ad8 <__flatcc_fb_gen_common_c_header@@Base+0xb50>
   172a0:	str	r4, [sp, #4]
   172a4:	str	r4, [sp]
   172a8:	ldr	r0, [r4, #204]	; 0xcc
   172ac:	bl	13fd4 <fprintf@plt>
   172b0:	mov	r3, r4
   172b4:	mov	r2, r4
   172b8:	ldr	r1, [pc, #2076]	; 17adc <__flatcc_fb_gen_common_c_header@@Base+0xb54>
   172bc:	str	r4, [sp, #36]	; 0x24
   172c0:	str	r4, [sp, #32]
   172c4:	str	r4, [sp, #28]
   172c8:	str	r4, [sp, #24]
   172cc:	str	r4, [sp, #20]
   172d0:	str	r4, [sp, #16]
   172d4:	str	r4, [sp, #12]
   172d8:	str	r4, [sp, #8]
   172dc:	str	r4, [sp, #4]
   172e0:	str	r4, [sp]
   172e4:	ldr	r0, [r4, #204]	; 0xcc
   172e8:	bl	13fd4 <fprintf@plt>
   172ec:	mov	r2, r4
   172f0:	ldr	r1, [pc, #2024]	; 17ae0 <__flatcc_fb_gen_common_c_header@@Base+0xb58>
   172f4:	ldr	r0, [r4, #204]	; 0xcc
   172f8:	bl	13fd4 <fprintf@plt>
   172fc:	mov	r3, r4
   17300:	mov	r2, r4
   17304:	ldr	r1, [pc, #2008]	; 17ae4 <__flatcc_fb_gen_common_c_header@@Base+0xb5c>
   17308:	str	r4, [sp, #4]
   1730c:	str	r4, [sp]
   17310:	ldr	r0, [r4, #204]	; 0xcc
   17314:	bl	13fd4 <fprintf@plt>
   17318:	mov	r3, r4
   1731c:	mov	r2, r4
   17320:	ldr	r1, [pc, #1984]	; 17ae8 <__flatcc_fb_gen_common_c_header@@Base+0xb60>
   17324:	str	r4, [sp, #56]	; 0x38
   17328:	str	r4, [sp, #52]	; 0x34
   1732c:	str	r4, [sp, #48]	; 0x30
   17330:	str	r4, [sp, #44]	; 0x2c
   17334:	str	r4, [sp, #40]	; 0x28
   17338:	str	r4, [sp, #36]	; 0x24
   1733c:	str	r4, [sp, #32]
   17340:	str	r4, [sp, #28]
   17344:	str	r4, [sp, #24]
   17348:	str	r4, [sp, #20]
   1734c:	str	r4, [sp, #16]
   17350:	str	r4, [sp, #12]
   17354:	str	r4, [sp, #8]
   17358:	str	r4, [sp, #4]
   1735c:	str	r4, [sp]
   17360:	ldr	r0, [r4, #204]	; 0xcc
   17364:	bl	13fd4 <fprintf@plt>
   17368:	mov	r3, r4
   1736c:	mov	r2, r4
   17370:	ldr	r1, [pc, #1908]	; 17aec <__flatcc_fb_gen_common_c_header@@Base+0xb64>
   17374:	str	r4, [sp, #20]
   17378:	str	r4, [sp, #16]
   1737c:	str	r4, [sp, #12]
   17380:	str	r4, [sp, #8]
   17384:	str	r4, [sp, #4]
   17388:	str	r4, [sp]
   1738c:	ldr	r0, [r4, #204]	; 0xcc
   17390:	bl	13fd4 <fprintf@plt>
   17394:	mov	r3, r4
   17398:	mov	r2, r4
   1739c:	ldr	r1, [pc, #1868]	; 17af0 <__flatcc_fb_gen_common_c_header@@Base+0xb68>
   173a0:	str	r4, [sp, #4]
   173a4:	str	r4, [sp]
   173a8:	ldr	r0, [r4, #204]	; 0xcc
   173ac:	bl	13fd4 <fprintf@plt>
   173b0:	mov	r3, r4
   173b4:	mov	r2, r4
   173b8:	ldr	r1, [pc, #1844]	; 17af4 <__flatcc_fb_gen_common_c_header@@Base+0xb6c>
   173bc:	str	r4, [sp, #4]
   173c0:	str	r4, [sp]
   173c4:	ldr	r0, [r4, #204]	; 0xcc
   173c8:	bl	13fd4 <fprintf@plt>
   173cc:	mov	r2, r4
   173d0:	ldr	r1, [pc, #1824]	; 17af8 <__flatcc_fb_gen_common_c_header@@Base+0xb70>
   173d4:	ldr	r0, [r4, #204]	; 0xcc
   173d8:	bl	13fd4 <fprintf@plt>
   173dc:	mov	r2, r4
   173e0:	ldr	r1, [pc, #1812]	; 17afc <__flatcc_fb_gen_common_c_header@@Base+0xb74>
   173e4:	ldr	r0, [r4, #204]	; 0xcc
   173e8:	bl	13fd4 <fprintf@plt>
   173ec:	mov	r2, r4
   173f0:	ldr	r1, [pc, #1800]	; 17b00 <__flatcc_fb_gen_common_c_header@@Base+0xb78>
   173f4:	ldr	r0, [r4, #204]	; 0xcc
   173f8:	bl	13fd4 <fprintf@plt>
   173fc:	mov	r2, r4
   17400:	ldr	r1, [pc, #1788]	; 17b04 <__flatcc_fb_gen_common_c_header@@Base+0xb7c>
   17404:	ldr	r0, [r4, #204]	; 0xcc
   17408:	bl	13fd4 <fprintf@plt>
   1740c:	mov	r2, r4
   17410:	ldr	r1, [pc, #1776]	; 17b08 <__flatcc_fb_gen_common_c_header@@Base+0xb80>
   17414:	ldr	r0, [r4, #204]	; 0xcc
   17418:	bl	13fd4 <fprintf@plt>
   1741c:	mov	r3, r4
   17420:	mov	r2, r4
   17424:	ldr	r1, [pc, #1760]	; 17b0c <__flatcc_fb_gen_common_c_header@@Base+0xb84>
   17428:	str	r4, [sp, #4]
   1742c:	str	r4, [sp]
   17430:	ldr	r0, [r4, #204]	; 0xcc
   17434:	bl	13fd4 <fprintf@plt>
   17438:	mov	r3, r4
   1743c:	mov	r2, r4
   17440:	ldr	r1, [pc, #1736]	; 17b10 <__flatcc_fb_gen_common_c_header@@Base+0xb88>
   17444:	str	r4, [sp, #12]
   17448:	str	r4, [sp, #8]
   1744c:	str	r4, [sp, #4]
   17450:	str	r4, [sp]
   17454:	ldr	r0, [r4, #204]	; 0xcc
   17458:	bl	13fd4 <fprintf@plt>
   1745c:	mov	r3, r4
   17460:	mov	r2, r4
   17464:	ldr	r1, [pc, #1704]	; 17b14 <__flatcc_fb_gen_common_c_header@@Base+0xb8c>
   17468:	str	r4, [sp]
   1746c:	ldr	r0, [r4, #204]	; 0xcc
   17470:	bl	13fd4 <fprintf@plt>
   17474:	mov	r3, r4
   17478:	mov	r2, r4
   1747c:	ldr	r1, [pc, #1684]	; 17b18 <__flatcc_fb_gen_common_c_header@@Base+0xb90>
   17480:	str	r4, [sp, #32]
   17484:	str	r4, [sp, #28]
   17488:	str	r4, [sp, #24]
   1748c:	str	r4, [sp, #20]
   17490:	str	r4, [sp, #16]
   17494:	str	r4, [sp, #12]
   17498:	str	r4, [sp, #8]
   1749c:	str	r4, [sp, #4]
   174a0:	str	r4, [sp]
   174a4:	ldr	r0, [r4, #204]	; 0xcc
   174a8:	bl	13fd4 <fprintf@plt>
   174ac:	mov	r3, r4
   174b0:	mov	r2, r4
   174b4:	ldr	r1, [pc, #1632]	; 17b1c <__flatcc_fb_gen_common_c_header@@Base+0xb94>
   174b8:	ldr	r0, [r4, #204]	; 0xcc
   174bc:	bl	13fd4 <fprintf@plt>
   174c0:	mov	r3, r4
   174c4:	mov	r2, r4
   174c8:	ldr	r1, [pc, #1616]	; 17b20 <__flatcc_fb_gen_common_c_header@@Base+0xb98>
   174cc:	str	r4, [sp]
   174d0:	ldr	r0, [r4, #204]	; 0xcc
   174d4:	bl	13fd4 <fprintf@plt>
   174d8:	mov	r3, r4
   174dc:	mov	r2, r4
   174e0:	ldr	r1, [pc, #1596]	; 17b24 <__flatcc_fb_gen_common_c_header@@Base+0xb9c>
   174e4:	str	r4, [sp]
   174e8:	ldr	r0, [r4, #204]	; 0xcc
   174ec:	bl	13fd4 <fprintf@plt>
   174f0:	mov	r2, r4
   174f4:	ldr	r1, [pc, #1580]	; 17b28 <__flatcc_fb_gen_common_c_header@@Base+0xba0>
   174f8:	ldr	r0, [r4, #204]	; 0xcc
   174fc:	bl	13fd4 <fprintf@plt>
   17500:	mov	r2, r4
   17504:	ldr	r1, [pc, #1568]	; 17b2c <__flatcc_fb_gen_common_c_header@@Base+0xba4>
   17508:	ldr	r0, [r4, #204]	; 0xcc
   1750c:	bl	13fd4 <fprintf@plt>
   17510:	mov	r3, r4
   17514:	mov	r2, r4
   17518:	ldr	r1, [pc, #1552]	; 17b30 <__flatcc_fb_gen_common_c_header@@Base+0xba8>
   1751c:	ldr	r0, [r4, #204]	; 0xcc
   17520:	bl	13fd4 <fprintf@plt>
   17524:	mov	r3, r4
   17528:	mov	r2, r4
   1752c:	ldr	r1, [pc, #1536]	; 17b34 <__flatcc_fb_gen_common_c_header@@Base+0xbac>
   17530:	ldr	r0, [r4, #204]	; 0xcc
   17534:	bl	13fd4 <fprintf@plt>
   17538:	mov	r3, r4
   1753c:	mov	r2, r4
   17540:	ldr	r1, [pc, #1520]	; 17b38 <__flatcc_fb_gen_common_c_header@@Base+0xbb0>
   17544:	str	r4, [sp, #32]
   17548:	str	r4, [sp, #28]
   1754c:	str	r4, [sp, #24]
   17550:	str	r4, [sp, #20]
   17554:	str	r4, [sp, #16]
   17558:	str	r4, [sp, #12]
   1755c:	str	r4, [sp, #8]
   17560:	str	r4, [sp, #4]
   17564:	str	r4, [sp]
   17568:	ldr	r0, [r4, #204]	; 0xcc
   1756c:	bl	13fd4 <fprintf@plt>
   17570:	mov	r3, r4
   17574:	mov	r2, r4
   17578:	ldr	r1, [pc, #1468]	; 17b3c <__flatcc_fb_gen_common_c_header@@Base+0xbb4>
   1757c:	str	r4, [sp, #32]
   17580:	str	r4, [sp, #28]
   17584:	str	r4, [sp, #24]
   17588:	str	r4, [sp, #20]
   1758c:	str	r4, [sp, #16]
   17590:	str	r4, [sp, #12]
   17594:	str	r4, [sp, #8]
   17598:	str	r4, [sp, #4]
   1759c:	str	r4, [sp]
   175a0:	ldr	r0, [r4, #204]	; 0xcc
   175a4:	bl	13fd4 <fprintf@plt>
   175a8:	mov	r3, r4
   175ac:	mov	r2, r4
   175b0:	ldr	r1, [pc, #1416]	; 17b40 <__flatcc_fb_gen_common_c_header@@Base+0xbb8>
   175b4:	str	r4, [sp, #16]
   175b8:	str	r4, [sp, #12]
   175bc:	str	r4, [sp, #8]
   175c0:	str	r4, [sp, #4]
   175c4:	str	r4, [sp]
   175c8:	ldr	r0, [r4, #204]	; 0xcc
   175cc:	bl	13fd4 <fprintf@plt>
   175d0:	mov	r3, r4
   175d4:	mov	r2, r4
   175d8:	ldr	r1, [pc, #1380]	; 17b44 <__flatcc_fb_gen_common_c_header@@Base+0xbbc>
   175dc:	str	r4, [sp, #32]
   175e0:	str	r4, [sp, #28]
   175e4:	str	r4, [sp, #24]
   175e8:	str	r4, [sp, #20]
   175ec:	str	r4, [sp, #16]
   175f0:	str	r4, [sp, #12]
   175f4:	str	r4, [sp, #8]
   175f8:	str	r4, [sp, #4]
   175fc:	str	r4, [sp]
   17600:	ldr	r0, [r4, #204]	; 0xcc
   17604:	bl	13fd4 <fprintf@plt>
   17608:	mov	r3, r4
   1760c:	mov	r2, r4
   17610:	ldr	r1, [pc, #1328]	; 17b48 <__flatcc_fb_gen_common_c_header@@Base+0xbc0>
   17614:	str	r4, [sp, #40]	; 0x28
   17618:	str	r4, [sp, #36]	; 0x24
   1761c:	str	r4, [sp, #32]
   17620:	str	r4, [sp, #28]
   17624:	str	r4, [sp, #24]
   17628:	str	r4, [sp, #20]
   1762c:	str	r4, [sp, #16]
   17630:	str	r4, [sp, #12]
   17634:	str	r4, [sp, #8]
   17638:	str	r4, [sp, #4]
   1763c:	str	r4, [sp]
   17640:	ldr	r0, [r4, #204]	; 0xcc
   17644:	bl	13fd4 <fprintf@plt>
   17648:	mov	r2, r4
   1764c:	ldr	r1, [pc, #1272]	; 17b4c <__flatcc_fb_gen_common_c_header@@Base+0xbc4>
   17650:	ldr	r0, [r4, #204]	; 0xcc
   17654:	bl	13fd4 <fprintf@plt>
   17658:	mov	r2, r4
   1765c:	ldr	r1, [pc, #1260]	; 17b50 <__flatcc_fb_gen_common_c_header@@Base+0xbc8>
   17660:	ldr	r0, [r4, #204]	; 0xcc
   17664:	bl	13fd4 <fprintf@plt>
   17668:	ldr	r3, [r4, #212]	; 0xd4
   1766c:	ldr	r3, [r3, #136]	; 0x88
   17670:	cmp	r3, #0
   17674:	beq	17a28 <__flatcc_fb_gen_common_c_header@@Base+0xaa0>
   17678:	mov	r0, r4
   1767c:	bl	17fec <__flatcc_gen_sort@@Base>
   17680:	mov	r3, r4
   17684:	str	r4, [sp, #8]
   17688:	str	r4, [sp, #4]
   1768c:	str	r4, [sp]
   17690:	mov	r2, r4
   17694:	ldr	r1, [pc, #1208]	; 17b54 <__flatcc_fb_gen_common_c_header@@Base+0xbcc>
   17698:	ldr	r0, [r4, #204]	; 0xcc
   1769c:	bl	13fd4 <fprintf@plt>
   176a0:	ldr	r3, [r4, #212]	; 0xd4
   176a4:	ldr	r3, [r3, #136]	; 0x88
   176a8:	cmp	r3, #0
   176ac:	beq	17a38 <__flatcc_fb_gen_common_c_header@@Base+0xab0>
   176b0:	mov	r2, r4
   176b4:	ldr	r1, [pc, #1180]	; 17b58 <__flatcc_fb_gen_common_c_header@@Base+0xbd0>
   176b8:	ldr	r0, [r4, #204]	; 0xcc
   176bc:	bl	13fd4 <fprintf@plt>
   176c0:	ldr	r1, [r4, #204]	; 0xcc
   176c4:	mov	r0, #10
   176c8:	bl	14034 <fputc@plt>
   176cc:	mov	r3, r4
   176d0:	mov	r2, r4
   176d4:	ldr	r1, [pc, #1152]	; 17b5c <__flatcc_fb_gen_common_c_header@@Base+0xbd4>
   176d8:	str	r4, [sp]
   176dc:	ldr	r0, [r4, #204]	; 0xcc
   176e0:	bl	13fd4 <fprintf@plt>
   176e4:	mov	r3, r4
   176e8:	mov	r2, r4
   176ec:	ldr	r1, [pc, #1132]	; 17b60 <__flatcc_fb_gen_common_c_header@@Base+0xbd8>
   176f0:	str	r4, [sp, #24]
   176f4:	str	r4, [sp, #20]
   176f8:	str	r4, [sp, #16]
   176fc:	str	r4, [sp, #12]
   17700:	str	r4, [sp, #8]
   17704:	str	r4, [sp, #4]
   17708:	str	r4, [sp]
   1770c:	ldr	r0, [r4, #204]	; 0xcc
   17710:	str	r4, [sp, #92]	; 0x5c
   17714:	str	r4, [sp, #88]	; 0x58
   17718:	str	r4, [sp, #84]	; 0x54
   1771c:	str	r4, [sp, #80]	; 0x50
   17720:	str	r4, [sp, #76]	; 0x4c
   17724:	str	r4, [sp, #72]	; 0x48
   17728:	str	r4, [sp, #68]	; 0x44
   1772c:	str	r4, [sp, #64]	; 0x40
   17730:	str	r4, [sp, #60]	; 0x3c
   17734:	str	r4, [sp, #56]	; 0x38
   17738:	str	r4, [sp, #52]	; 0x34
   1773c:	str	r4, [sp, #48]	; 0x30
   17740:	str	r4, [sp, #44]	; 0x2c
   17744:	str	r4, [sp, #40]	; 0x28
   17748:	str	r4, [sp, #36]	; 0x24
   1774c:	str	r4, [sp, #32]
   17750:	str	r4, [sp, #28]
   17754:	bl	13fd4 <fprintf@plt>
   17758:	mov	r3, r4
   1775c:	mov	r2, r4
   17760:	ldr	r1, [pc, #1020]	; 17b64 <__flatcc_fb_gen_common_c_header@@Base+0xbdc>
   17764:	str	r4, [sp, #36]	; 0x24
   17768:	str	r4, [sp, #32]
   1776c:	str	r4, [sp, #28]
   17770:	str	r4, [sp, #24]
   17774:	str	r4, [sp, #20]
   17778:	str	r4, [sp, #16]
   1777c:	str	r4, [sp, #12]
   17780:	str	r4, [sp, #8]
   17784:	str	r4, [sp, #4]
   17788:	str	r4, [sp]
   1778c:	ldr	r0, [r4, #204]	; 0xcc
   17790:	bl	13fd4 <fprintf@plt>
   17794:	mov	r3, r4
   17798:	str	r4, [sp, #228]	; 0xe4
   1779c:	str	r4, [sp, #224]	; 0xe0
   177a0:	str	r4, [sp, #220]	; 0xdc
   177a4:	str	r4, [sp, #216]	; 0xd8
   177a8:	str	r4, [sp, #212]	; 0xd4
   177ac:	str	r4, [sp, #208]	; 0xd0
   177b0:	str	r4, [sp, #204]	; 0xcc
   177b4:	str	r4, [sp, #200]	; 0xc8
   177b8:	str	r4, [sp, #196]	; 0xc4
   177bc:	str	r4, [sp, #192]	; 0xc0
   177c0:	str	r4, [sp, #188]	; 0xbc
   177c4:	str	r4, [sp, #184]	; 0xb8
   177c8:	str	r4, [sp, #180]	; 0xb4
   177cc:	str	r4, [sp, #176]	; 0xb0
   177d0:	str	r4, [sp, #172]	; 0xac
   177d4:	str	r4, [sp, #168]	; 0xa8
   177d8:	str	r4, [sp, #164]	; 0xa4
   177dc:	str	r4, [sp, #160]	; 0xa0
   177e0:	str	r4, [sp, #156]	; 0x9c
   177e4:	str	r4, [sp, #152]	; 0x98
   177e8:	str	r4, [sp, #148]	; 0x94
   177ec:	str	r4, [sp, #144]	; 0x90
   177f0:	str	r4, [sp, #140]	; 0x8c
   177f4:	str	r4, [sp, #136]	; 0x88
   177f8:	str	r4, [sp, #132]	; 0x84
   177fc:	str	r4, [sp, #128]	; 0x80
   17800:	str	r4, [sp, #124]	; 0x7c
   17804:	str	r4, [sp, #120]	; 0x78
   17808:	str	r4, [sp, #116]	; 0x74
   1780c:	str	r4, [sp, #112]	; 0x70
   17810:	str	r4, [sp, #108]	; 0x6c
   17814:	str	r4, [sp, #104]	; 0x68
   17818:	mov	r2, r4
   1781c:	str	r4, [sp, #100]	; 0x64
   17820:	ldr	r1, [pc, #832]	; 17b68 <__flatcc_fb_gen_common_c_header@@Base+0xbe0>
   17824:	str	r4, [sp, #20]
   17828:	str	r4, [sp, #16]
   1782c:	str	r4, [sp, #12]
   17830:	str	r4, [sp, #8]
   17834:	str	r4, [sp, #4]
   17838:	str	r4, [sp]
   1783c:	ldr	r0, [r4, #204]	; 0xcc
   17840:	str	r4, [sp, #96]	; 0x60
   17844:	str	r4, [sp, #92]	; 0x5c
   17848:	str	r4, [sp, #88]	; 0x58
   1784c:	str	r4, [sp, #84]	; 0x54
   17850:	str	r4, [sp, #80]	; 0x50
   17854:	str	r4, [sp, #76]	; 0x4c
   17858:	str	r4, [sp, #72]	; 0x48
   1785c:	str	r4, [sp, #68]	; 0x44
   17860:	str	r4, [sp, #64]	; 0x40
   17864:	str	r4, [sp, #60]	; 0x3c
   17868:	str	r4, [sp, #56]	; 0x38
   1786c:	str	r4, [sp, #52]	; 0x34
   17870:	str	r4, [sp, #48]	; 0x30
   17874:	str	r4, [sp, #44]	; 0x2c
   17878:	str	r4, [sp, #40]	; 0x28
   1787c:	str	r4, [sp, #36]	; 0x24
   17880:	str	r4, [sp, #32]
   17884:	str	r4, [sp, #28]
   17888:	str	r4, [sp, #24]
   1788c:	bl	13fd4 <fprintf@plt>
   17890:	ldr	r3, [r4, #212]	; 0xd4
   17894:	ldr	r3, [r3, #136]	; 0x88
   17898:	cmp	r3, #0
   1789c:	beq	178b0 <__flatcc_fb_gen_common_c_header@@Base+0x928>
   178a0:	mov	r2, r4
   178a4:	ldr	r1, [pc, #704]	; 17b6c <__flatcc_fb_gen_common_c_header@@Base+0xbe4>
   178a8:	ldr	r0, [r4, #204]	; 0xcc
   178ac:	bl	13fd4 <fprintf@plt>
   178b0:	mov	r3, r4
   178b4:	mov	r2, r4
   178b8:	ldr	r1, [pc, #688]	; 17b70 <__flatcc_fb_gen_common_c_header@@Base+0xbe8>
   178bc:	ldr	r0, [r4, #204]	; 0xcc
   178c0:	bl	13fd4 <fprintf@plt>
   178c4:	ldr	r3, [r4, #212]	; 0xd4
   178c8:	ldr	r3, [r3, #32]
   178cc:	cmp	r3, #0
   178d0:	beq	17a48 <__flatcc_fb_gen_common_c_header@@Base+0xac0>
   178d4:	mov	r2, r4
   178d8:	ldr	r1, [pc, #440]	; 17a98 <__flatcc_fb_gen_common_c_header@@Base+0xb10>
   178dc:	ldr	r0, [r4, #204]	; 0xcc
   178e0:	bl	13fd4 <fprintf@plt>
   178e4:	mov	r2, r4
   178e8:	ldr	r1, [pc, #644]	; 17b74 <__flatcc_fb_gen_common_c_header@@Base+0xbec>
   178ec:	ldr	r0, [r4, #204]	; 0xcc
   178f0:	bl	13fd4 <fprintf@plt>
   178f4:	mov	r3, r4
   178f8:	mov	r2, r4
   178fc:	ldr	r1, [pc, #628]	; 17b78 <__flatcc_fb_gen_common_c_header@@Base+0xbf0>
   17900:	str	r4, [sp, #44]	; 0x2c
   17904:	str	r4, [sp, #40]	; 0x28
   17908:	str	r4, [sp, #36]	; 0x24
   1790c:	str	r4, [sp, #32]
   17910:	str	r4, [sp, #28]
   17914:	str	r4, [sp, #24]
   17918:	str	r4, [sp, #20]
   1791c:	str	r4, [sp, #16]
   17920:	str	r4, [sp, #12]
   17924:	str	r4, [sp, #8]
   17928:	str	r4, [sp, #4]
   1792c:	str	r4, [sp]
   17930:	ldr	r0, [r4, #204]	; 0xcc
   17934:	bl	13fd4 <fprintf@plt>
   17938:	mov	r3, r4
   1793c:	mov	r2, r4
   17940:	ldr	r1, [pc, #564]	; 17b7c <__flatcc_fb_gen_common_c_header@@Base+0xbf4>
   17944:	str	r4, [sp]
   17948:	ldr	r0, [r4, #204]	; 0xcc
   1794c:	bl	13fd4 <fprintf@plt>
   17950:	mov	r3, r4
   17954:	mov	r2, r4
   17958:	ldr	r1, [pc, #544]	; 17b80 <__flatcc_fb_gen_common_c_header@@Base+0xbf8>
   1795c:	str	r4, [sp, #12]
   17960:	str	r4, [sp, #8]
   17964:	str	r4, [sp, #4]
   17968:	str	r4, [sp]
   1796c:	ldr	r0, [r4, #204]	; 0xcc
   17970:	bl	13fd4 <fprintf@plt>
   17974:	mov	r3, r4
   17978:	mov	r2, r4
   1797c:	ldr	r1, [pc, #512]	; 17b84 <__flatcc_fb_gen_common_c_header@@Base+0xbfc>
   17980:	str	r4, [sp, #4]
   17984:	str	r4, [sp]
   17988:	ldr	r0, [r4, #204]	; 0xcc
   1798c:	bl	13fd4 <fprintf@plt>
   17990:	mov	r3, r4
   17994:	mov	r2, r4
   17998:	ldr	r1, [pc, #488]	; 17b88 <__flatcc_fb_gen_common_c_header@@Base+0xc00>
   1799c:	str	r4, [sp, #28]
   179a0:	str	r4, [sp, #24]
   179a4:	str	r4, [sp, #20]
   179a8:	str	r4, [sp, #16]
   179ac:	str	r4, [sp, #12]
   179b0:	str	r4, [sp, #8]
   179b4:	str	r4, [sp, #4]
   179b8:	str	r4, [sp]
   179bc:	ldr	r0, [r4, #204]	; 0xcc
   179c0:	bl	13fd4 <fprintf@plt>
   179c4:	ldr	r1, [r4, #204]	; 0xcc
   179c8:	mov	r0, #10
   179cc:	bl	14034 <fputc@plt>
   179d0:	ldr	r3, [r4, #212]	; 0xd4
   179d4:	ldr	r3, [r3, #140]	; 0x8c
   179d8:	cmp	r3, #0
   179dc:	beq	179ec <__flatcc_fb_gen_common_c_header@@Base+0xa64>
   179e0:	ldr	r1, [r4, #204]	; 0xcc
   179e4:	ldr	r0, [pc, #416]	; 17b8c <__flatcc_fb_gen_common_c_header@@Base+0xc04>
   179e8:	bl	14070 <fputs@plt>
   179ec:	mov	r2, r5
   179f0:	ldr	r1, [pc, #408]	; 17b90 <__flatcc_fb_gen_common_c_header@@Base+0xc08>
   179f4:	ldr	r0, [r4, #204]	; 0xcc
   179f8:	bl	13fd4 <fprintf@plt>
   179fc:	mov	r0, #0
   17a00:	add	sp, sp, #236	; 0xec
   17a04:	pop	{r4, r5, pc}
   17a08:	ldr	r1, [r4, #204]	; 0xcc
   17a0c:	mov	r0, #10
   17a10:	bl	14034 <fputc@plt>
   17a14:	b	17118 <__flatcc_fb_gen_common_c_header@@Base+0x190>
   17a18:	ldr	r1, [r4, #204]	; 0xcc
   17a1c:	mov	r0, #10
   17a20:	bl	14034 <fputc@plt>
   17a24:	b	171f4 <__flatcc_fb_gen_common_c_header@@Base+0x26c>
   17a28:	ldr	r1, [r4, #204]	; 0xcc
   17a2c:	ldr	r0, [pc, #352]	; 17b94 <__flatcc_fb_gen_common_c_header@@Base+0xc0c>
   17a30:	bl	14070 <fputs@plt>
   17a34:	b	17680 <__flatcc_fb_gen_common_c_header@@Base+0x6f8>
   17a38:	ldr	r1, [r4, #204]	; 0xcc
   17a3c:	mov	r0, #10
   17a40:	bl	14034 <fputc@plt>
   17a44:	b	176c0 <__flatcc_fb_gen_common_c_header@@Base+0x738>
   17a48:	ldr	r1, [r4, #204]	; 0xcc
   17a4c:	mov	r0, #10
   17a50:	bl	14034 <fputc@plt>
   17a54:	b	178e4 <__flatcc_fb_gen_common_c_header@@Base+0x95c>
   17a58:	andeq	r1, r3, sp, lsl #25
   17a5c:	andeq	r1, r3, r4, asr #25
   17a60:	andeq	r1, r3, r6, lsl sp
   17a64:	andeq	r1, r3, fp, asr #26
   17a68:	ldrdeq	r1, [r3], -r3
   17a6c:	strdeq	r1, [r3], -r8
   17a70:	andeq	r1, r3, r2, lsr #28
   17a74:	andeq	r1, r3, pc, lsr #28
   17a78:	andeq	r1, r3, r0, lsr #28
   17a7c:	strdeq	r1, [r3], -lr
   17a80:	andeq	r2, r3, r5, asr r0
   17a84:			; <UNDEFINED> instruction: 0x000322bb
   17a88:	andeq	r2, r3, fp, lsl #6
   17a8c:	muleq	r3, r8, r3
   17a90:	andeq	r2, r3, fp, lsl #10
   17a94:	andeq	r2, r3, r0, ror #10
   17a98:	andeq	r2, r3, r5, lsl #13
   17a9c:			; <UNDEFINED> instruction: 0x000326b2
   17aa0:	andeq	r2, r3, r5, lsl #15
   17aa4:	andeq	r2, r3, pc, lsr #18
   17aa8:	andeq	r2, r3, pc, asr #19
   17aac:	andeq	r2, r3, r9, lsr #21
   17ab0:	andeq	r2, r3, r3, lsl #23
   17ab4:	andeq	r2, r3, fp, asr ip
   17ab8:	andeq	r2, r3, r3, asr #26
   17abc:	andeq	r2, r3, sp, ror #26
   17ac0:	andeq	r2, r3, ip, lsl #28
   17ac4:	andeq	r2, r3, lr, asr #28
   17ac8:	ldrdeq	r2, [r3], -r8
   17acc:	andeq	r2, r3, sl, asr #30
   17ad0:	andeq	r3, r3, sl, rrx
   17ad4:	andeq	r3, r3, r1, ror #1
   17ad8:	andeq	r3, r3, r1, ror #2
   17adc:	andeq	r3, r3, r4, asr #3
   17ae0:	andeq	r3, r3, r5, ror #5
   17ae4:	andeq	r3, r3, r7, lsl #6
   17ae8:	andeq	r3, r3, lr, lsl #7
   17aec:	andeq	r3, r3, sp, lsr r5
   17af0:	andeq	r3, r3, r0, lsl #12
   17af4:	muleq	r3, r9, r6
   17af8:	andeq	r3, r3, r0, lsl r7
   17afc:	andeq	r3, r3, r1, ror #19
   17b00:	andeq	r3, r3, r3, ror ip
   17b04:	strdeq	r3, [r3], -r4
   17b08:	andeq	r3, r3, r2, ror #26
   17b0c:	andeq	r3, r3, r6, asr #30
   17b10:	andeq	r3, r3, pc, ror #31
   17b14:	andeq	r4, r3, sl, asr #3
   17b18:	andeq	r4, r3, r4, ror #7
   17b1c:	andeq	r4, r3, fp, lsr r5
   17b20:	andeq	r4, r3, sl, lsl #12
   17b24:			; <UNDEFINED> instruction: 0x000346bf
   17b28:	andeq	r4, r3, r4, ror r8
   17b2c:	andeq	r4, r3, lr, lsl r9
   17b30:	andeq	r4, r3, fp, asr #20
   17b34:	muleq	r3, fp, fp
   17b38:	andeq	r4, r3, pc, ror #24
   17b3c:	andeq	r4, r3, sl, ror #27
   17b40:	andeq	r4, r3, fp, ror #30
   17b44:	andeq	r5, r3, r0, asr #5
   17b48:	andeq	r5, r3, r0, ror #11
   17b4c:	andeq	r5, r3, r9, lsr #25
   17b50:	strdeq	r5, [r3], -r9
   17b54:	andeq	r6, r3, pc, asr #7
   17b58:			; <UNDEFINED> instruction: 0x000364b0
   17b5c:	ldrdeq	r6, [r3], -r0
   17b60:	andeq	r6, r3, r0, asr r5
   17b64:	andeq	r6, r3, r3, ror #14
   17b68:	andeq	r6, r3, sp, lsr #17
   17b6c:	andeq	r6, r3, r6, ror #30
   17b70:	andeq	r6, r3, r0, lsl #31
   17b74:	andeq	r7, r3, r9, lsl r0
   17b78:	muleq	r3, r8, r0
   17b7c:	andeq	r7, r3, r1, ror #7
   17b80:	muleq	r3, r8, r4
   17b84:	andeq	r7, r3, pc, asr r6
   17b88:	ldrdeq	r7, [r3], -fp
   17b8c:			; <UNDEFINED> instruction: 0x00037bbd
   17b90:	andeq	r7, r3, r2, ror #23
   17b94:			; <UNDEFINED> instruction: 0x000363ba

00017b98 <__flatcc_fb_gen_c_reader@@Base>:
   17b98:	ldr	r3, [r0, #212]	; 0xd4
   17b9c:	push	{r4, r5, r6, r7, lr}
   17ba0:	mov	r4, r0
   17ba4:	ldr	r5, [r3, #132]	; 0x84
   17ba8:	ldr	r3, [r0, #208]	; 0xd0
   17bac:	sub	sp, sp, #252	; 0xfc
   17bb0:	ldr	r1, [pc, #976]	; 17f88 <__flatcc_fb_gen_c_reader@@Base+0x3f0>
   17bb4:	ldr	r3, [r3, #164]	; 0xa4
   17bb8:	add	r6, r0, #102	; 0x66
   17bbc:	mov	r2, r3
   17bc0:	ldr	r0, [r0, #204]	; 0xcc
   17bc4:	bl	13fd4 <fprintf@plt>
   17bc8:	ldr	r1, [r4, #204]	; 0xcc
   17bcc:	ldr	r0, [pc, #952]	; 17f8c <__flatcc_fb_gen_c_reader@@Base+0x3f4>
   17bd0:	bl	14070 <fputs@plt>
   17bd4:	cmp	r5, #0
   17bd8:	beq	17be8 <__flatcc_fb_gen_c_reader@@Base+0x50>
   17bdc:	ldr	r1, [r4, #204]	; 0xcc
   17be0:	ldr	r0, [pc, #936]	; 17f90 <__flatcc_fb_gen_c_reader@@Base+0x3f8>
   17be4:	bl	14070 <fputs@plt>
   17be8:	mov	r3, r4
   17bec:	mov	r2, r6
   17bf0:	ldr	r1, [pc, #924]	; 17f94 <__flatcc_fb_gen_c_reader@@Base+0x3fc>
   17bf4:	ldr	r0, [r4, #204]	; 0xcc
   17bf8:	bl	13fd4 <fprintf@plt>
   17bfc:	ldr	r2, [pc, #916]	; 17f98 <__flatcc_fb_gen_c_reader@@Base+0x400>
   17c00:	ldr	r1, [pc, #916]	; 17f9c <__flatcc_fb_gen_c_reader@@Base+0x404>
   17c04:	mov	r0, r4
   17c08:	bl	14f24 <__flatcc_fb_gen_c_includes@@Base>
   17c0c:	ldr	r1, [r4, #204]	; 0xcc
   17c10:	ldr	r0, [pc, #904]	; 17fa0 <__flatcc_fb_gen_c_reader@@Base+0x408>
   17c14:	bl	14070 <fputs@plt>
   17c18:	cmp	r5, #0
   17c1c:	bne	17c2c <__flatcc_fb_gen_c_reader@@Base+0x94>
   17c20:	ldr	r1, [r4, #204]	; 0xcc
   17c24:	ldr	r0, [pc, #888]	; 17fa4 <__flatcc_fb_gen_c_reader@@Base+0x40c>
   17c28:	bl	14070 <fputs@plt>
   17c2c:	ldr	r3, [r4, #212]	; 0xd4
   17c30:	ldr	r3, [r3, #140]	; 0x8c
   17c34:	cmp	r3, #0
   17c38:	beq	17c48 <__flatcc_fb_gen_c_reader@@Base+0xb0>
   17c3c:	ldr	r1, [r4, #204]	; 0xcc
   17c40:	ldr	r0, [pc, #864]	; 17fa8 <__flatcc_fb_gen_c_reader@@Base+0x410>
   17c44:	bl	14070 <fputs@plt>
   17c48:	ldr	r3, [r4, #208]	; 0xd0
   17c4c:	ldrh	r2, [r3, #16]
   17c50:	cmp	r2, #2
   17c54:	bne	17d8c <__flatcc_fb_gen_c_reader@@Base+0x1f4>
   17c58:	ldr	r2, [r3, #8]
   17c5c:	ldr	r1, [pc, #840]	; 17fac <__flatcc_fb_gen_c_reader@@Base+0x414>
   17c60:	str	r2, [sp, #4]
   17c64:	ldr	r3, [r3, #12]
   17c68:	mov	r2, r4
   17c6c:	str	r3, [sp]
   17c70:	ldr	r0, [r4, #204]	; 0xcc
   17c74:	mov	r3, r4
   17c78:	bl	13fd4 <fprintf@plt>
   17c7c:	ldr	r3, [r4, #208]	; 0xd0
   17c80:	ldrh	r2, [r3, #32]
   17c84:	cmp	r2, #2
   17c88:	bne	17da4 <__flatcc_fb_gen_c_reader@@Base+0x20c>
   17c8c:	ldr	r2, [r3, #24]
   17c90:	ldr	r1, [pc, #792]	; 17fb0 <__flatcc_fb_gen_c_reader@@Base+0x418>
   17c94:	str	r2, [sp, #4]
   17c98:	ldr	r3, [r3, #28]
   17c9c:	mov	r2, r4
   17ca0:	str	r3, [sp]
   17ca4:	ldr	r0, [r4, #204]	; 0xcc
   17ca8:	mov	r3, r4
   17cac:	bl	13fd4 <fprintf@plt>
   17cb0:	ldr	r1, [r4, #204]	; 0xcc
   17cb4:	mov	r0, #10
   17cb8:	bl	14034 <fputc@plt>
   17cbc:	ldr	r3, [r4, #208]	; 0xd0
   17cc0:	ldr	r5, [r3, #44]	; 0x2c
   17cc4:	cmp	r5, #0
   17cc8:	bne	17dc8 <__flatcc_fb_gen_c_reader@@Base+0x230>
   17ccc:	ldr	r1, [r4, #204]	; 0xcc
   17cd0:	mov	r0, #10
   17cd4:	bl	14034 <fputc@plt>
   17cd8:	ldr	r3, [r4, #208]	; 0xd0
   17cdc:	ldr	r5, [r3, #40]	; 0x28
   17ce0:	cmp	r5, #0
   17ce4:	bne	17ddc <__flatcc_fb_gen_c_reader@@Base+0x244>
   17ce8:	ldr	r3, [r4, #208]	; 0xd0
   17cec:	mov	r7, #92	; 0x5c
   17cf0:	ldr	r5, [r3, #40]	; 0x28
   17cf4:	cmp	r5, #0
   17cf8:	bne	17dfc <__flatcc_fb_gen_c_reader@@Base+0x264>
   17cfc:	ldr	r1, [r4, #204]	; 0xcc
   17d00:	mov	r0, #10
   17d04:	bl	14034 <fputc@plt>
   17d08:	ldr	r3, [r4, #208]	; 0xd0
   17d0c:	ldr	r5, [r3, #40]	; 0x28
   17d10:	cmp	r5, #0
   17d14:	bne	17ed8 <__flatcc_fb_gen_c_reader@@Base+0x340>
   17d18:	ldr	r1, [r4, #204]	; 0xcc
   17d1c:	mov	r0, #10
   17d20:	bl	14034 <fputc@plt>
   17d24:	ldr	r3, [r4, #208]	; 0xd0
   17d28:	ldr	r5, [r3, #44]	; 0x2c
   17d2c:	cmp	r5, #0
   17d30:	bne	17ef8 <__flatcc_fb_gen_c_reader@@Base+0x360>
   17d34:	ldr	r3, [r4, #208]	; 0xd0
   17d38:	ldr	r5, [r3, #40]	; 0x28
   17d3c:	cmp	r5, #0
   17d40:	bne	17f0c <__flatcc_fb_gen_c_reader@@Base+0x374>
   17d44:	ldr	r1, [r4, #204]	; 0xcc
   17d48:	mov	r0, #10
   17d4c:	bl	14034 <fputc@plt>
   17d50:	ldr	r3, [r4, #212]	; 0xd4
   17d54:	ldr	r3, [r3, #140]	; 0x8c
   17d58:	cmp	r3, #0
   17d5c:	beq	17d6c <__flatcc_fb_gen_c_reader@@Base+0x1d4>
   17d60:	ldr	r1, [r4, #204]	; 0xcc
   17d64:	ldr	r0, [pc, #584]	; 17fb4 <__flatcc_fb_gen_c_reader@@Base+0x41c>
   17d68:	bl	14070 <fputs@plt>
   17d6c:	ldr	r3, [r4, #208]	; 0xd0
   17d70:	ldr	r1, [pc, #576]	; 17fb8 <__flatcc_fb_gen_c_reader@@Base+0x420>
   17d74:	ldr	r0, [r4, #204]	; 0xcc
   17d78:	ldr	r2, [r3, #164]	; 0xa4
   17d7c:	bl	13fd4 <fprintf@plt>
   17d80:	mov	r0, #0
   17d84:	add	sp, sp, #252	; 0xfc
   17d88:	pop	{r4, r5, r6, r7, pc}
   17d8c:	mov	r3, r4
   17d90:	mov	r2, r4
   17d94:	ldr	r1, [pc, #544]	; 17fbc <__flatcc_fb_gen_c_reader@@Base+0x424>
   17d98:	ldr	r0, [r4, #204]	; 0xcc
   17d9c:	bl	13fd4 <fprintf@plt>
   17da0:	b	17c7c <__flatcc_fb_gen_c_reader@@Base+0xe4>
   17da4:	ldr	r3, [r4, #212]	; 0xd4
   17da8:	mov	r2, r4
   17dac:	ldr	r1, [pc, #524]	; 17fc0 <__flatcc_fb_gen_c_reader@@Base+0x428>
   17db0:	ldr	r3, [r3, #104]	; 0x68
   17db4:	ldr	r0, [r4, #204]	; 0xcc
   17db8:	str	r3, [sp]
   17dbc:	mov	r3, r4
   17dc0:	bl	13fd4 <fprintf@plt>
   17dc4:	b	17cb0 <__flatcc_fb_gen_c_reader@@Base+0x118>
   17dc8:	mov	r1, r5
   17dcc:	mov	r0, r4
   17dd0:	bl	15420 <__flatcc_fb_codegen_c@@Base+0x1d0>
   17dd4:	ldr	r5, [r5, #120]	; 0x78
   17dd8:	b	17cc4 <__flatcc_fb_gen_c_reader@@Base+0x12c>
   17ddc:	ldrh	r3, [r5, #8]
   17de0:	cmp	r3, #0
   17de4:	bne	17df4 <__flatcc_fb_gen_c_reader@@Base+0x25c>
   17de8:	mov	r1, r5
   17dec:	mov	r0, r4
   17df0:	bl	15420 <__flatcc_fb_codegen_c@@Base+0x1d0>
   17df4:	ldr	r5, [r5]
   17df8:	b	17ce0 <__flatcc_fb_gen_c_reader@@Base+0x148>
   17dfc:	ldrh	r3, [r5, #8]
   17e00:	cmp	r3, #1
   17e04:	bhi	17e88 <__flatcc_fb_gen_c_reader@@Base+0x2f0>
   17e08:	mov	r2, #220	; 0xdc
   17e0c:	mov	r1, #0
   17e10:	add	r0, sp, #28
   17e14:	bl	13fec <memset@plt>
   17e18:	add	r1, sp, #28
   17e1c:	mov	r0, r5
   17e20:	bl	15410 <__flatcc_fb_codegen_c@@Base+0x1c0>
   17e24:	ldr	r6, [r5, #88]	; 0x58
   17e28:	add	r3, sp, #28
   17e2c:	mov	r2, r3
   17e30:	ldr	r1, [pc, #396]	; 17fc4 <__flatcc_fb_gen_c_reader@@Base+0x42c>
   17e34:	str	r4, [sp]
   17e38:	ldr	r0, [r4, #204]	; 0xcc
   17e3c:	bl	13fd4 <fprintf@plt>
   17e40:	mov	r3, r4
   17e44:	add	r2, sp, #28
   17e48:	str	r6, [sp]
   17e4c:	ldr	r1, [pc, #372]	; 17fc8 <__flatcc_fb_gen_c_reader@@Base+0x430>
   17e50:	ldr	r0, [r4, #204]	; 0xcc
   17e54:	bl	13fd4 <fprintf@plt>
   17e58:	add	r2, sp, #8
   17e5c:	mov	r0, #4
   17e60:	mov	r3, r2
   17e64:	mov	ip, #120	; 0x78
   17e68:	subs	r0, r0, #1
   17e6c:	bcs	17e90 <__flatcc_fb_gen_c_reader@@Base+0x2f8>
   17e70:	mov	r2, #0
   17e74:	strb	r2, [sp, #24]
   17e78:	ldr	r1, [pc, #332]	; 17fcc <__flatcc_fb_gen_c_reader@@Base+0x434>
   17e7c:	add	r2, sp, #28
   17e80:	ldr	r0, [r4, #204]	; 0xcc
   17e84:	bl	13fd4 <fprintf@plt>
   17e88:	ldr	r5, [r5]
   17e8c:	b	17cf4 <__flatcc_fb_gen_c_reader@@Base+0x15c>
   17e90:	and	r1, r6, #15
   17e94:	cmp	r1, #9
   17e98:	movhi	lr, #87	; 0x57
   17e9c:	movls	lr, #48	; 0x30
   17ea0:	add	r1, r1, lr
   17ea4:	strb	r1, [r2, #3]
   17ea8:	lsr	r1, r6, #4
   17eac:	and	r1, r1, #15
   17eb0:	cmp	r1, #9
   17eb4:	movhi	lr, #87	; 0x57
   17eb8:	movls	lr, #48	; 0x30
   17ebc:	add	r1, r1, lr
   17ec0:	strb	r7, [r2]
   17ec4:	strb	ip, [r2, #1]
   17ec8:	strb	r1, [r2, #2]
   17ecc:	lsr	r6, r6, #8
   17ed0:	add	r2, r2, #4
   17ed4:	b	17e68 <__flatcc_fb_gen_c_reader@@Base+0x2d0>
   17ed8:	ldrh	r3, [r5, #8]
   17edc:	cmp	r3, #3
   17ee0:	bne	17ef0 <__flatcc_fb_gen_c_reader@@Base+0x358>
   17ee4:	mov	r1, r5
   17ee8:	mov	r0, r4
   17eec:	bl	16200 <__flatcc_fb_codegen_c@@Base+0xfb0>
   17ef0:	ldr	r5, [r5]
   17ef4:	b	17d10 <__flatcc_fb_gen_c_reader@@Base+0x178>
   17ef8:	mov	r1, r5
   17efc:	mov	r0, r4
   17f00:	bl	1583c <__flatcc_fb_codegen_c@@Base+0x5ec>
   17f04:	ldr	r5, [r5, #120]	; 0x78
   17f08:	b	17d2c <__flatcc_fb_gen_c_reader@@Base+0x194>
   17f0c:	ldrh	r3, [r5, #8]
   17f10:	cmp	r3, #4
   17f14:	ldrls	pc, [pc, r3, lsl #2]
   17f18:	b	17f54 <__flatcc_fb_gen_c_reader@@Base+0x3bc>
   17f1c:	andeq	r7, r1, r4, asr #30
   17f20:	andeq	r7, r1, ip, lsr pc
   17f24:	andeq	r7, r1, ip, lsr pc
   17f28:	andeq	r7, r1, ip, lsr pc
   17f2c:	andeq	r7, r1, r0, lsr pc
   17f30:	mov	r1, r5
   17f34:	mov	r0, r4
   17f38:	bl	16200 <__flatcc_fb_codegen_c@@Base+0xfb0>
   17f3c:	ldr	r5, [r5]
   17f40:	b	17d3c <__flatcc_fb_gen_c_reader@@Base+0x1a4>
   17f44:	mov	r1, r5
   17f48:	mov	r0, r4
   17f4c:	bl	16524 <__flatcc_fb_codegen_c@@Base+0x12d4>
   17f50:	b	17f3c <__flatcc_fb_gen_c_reader@@Base+0x3a4>
   17f54:	ldr	r0, [pc, #116]	; 17fd0 <__flatcc_fb_gen_c_reader@@Base+0x438>
   17f58:	ldr	r3, [pc, #116]	; 17fd4 <__flatcc_fb_gen_c_reader@@Base+0x43c>
   17f5c:	ldr	r2, [pc, #116]	; 17fd8 <__flatcc_fb_gen_c_reader@@Base+0x440>
   17f60:	str	r3, [sp]
   17f64:	ldr	r1, [pc, #112]	; 17fdc <__flatcc_fb_gen_c_reader@@Base+0x444>
   17f68:	ldr	r3, [pc, #112]	; 17fe0 <__flatcc_fb_gen_c_reader@@Base+0x448>
   17f6c:	ldr	r0, [r0]
   17f70:	bl	13fd4 <fprintf@plt>
   17f74:	ldr	r3, [pc, #104]	; 17fe4 <__flatcc_fb_gen_c_reader@@Base+0x44c>
   17f78:	ldr	r2, [pc, #96]	; 17fe0 <__flatcc_fb_gen_c_reader@@Base+0x448>
   17f7c:	ldr	r1, [pc, #84]	; 17fd8 <__flatcc_fb_gen_c_reader@@Base+0x440>
   17f80:	ldr	r0, [pc, #96]	; 17fe8 <__flatcc_fb_gen_c_reader@@Base+0x450>
   17f84:	bl	14094 <__assert_fail@plt>
   17f88:	strdeq	r7, [r3], -ip
   17f8c:	andeq	r1, r3, r4, asr #25
   17f90:	andeq	r7, r3, r5, lsr #24
   17f94:	andeq	r7, r3, r1, ror #27
   17f98:	andeq	r7, r3, r1, lsr #28
   17f9c:	andeq	r6, r4, fp, asr #18
   17fa0:	andeq	r7, r3, fp, lsr #28
   17fa4:	andeq	r7, r3, r3, asr lr
   17fa8:	ldrdeq	r1, [r3], -r3
   17fac:	andeq	r7, r3, lr, lsl #29
   17fb0:	strdeq	r7, [r3], -r3
   17fb4:			; <UNDEFINED> instruction: 0x00037bbd
   17fb8:	andeq	r8, r3, pc
   17fbc:			; <UNDEFINED> instruction: 0x00037ebf
   17fc0:	andeq	r7, r3, r3, lsr #30
   17fc4:	andeq	r7, r3, r8, asr pc
   17fc8:	muleq	r3, r9, pc	; <UNPREDICTABLE>
   17fcc:	andeq	r7, r3, r2, asr #31
   17fd0:	strheq	fp, [r5], -r0
   17fd4:	andeq	r7, r3, r3, ror #31
   17fd8:	andeq	r0, r3, lr, lsl #16
   17fdc:	andeq	r0, r3, lr, ror #20
   17fe0:	andeq	r0, r0, r8, lsl #13
   17fe4:	strdeq	r0, [r3], -r5
   17fe8:	andeq	r9, r3, sp, asr #1

00017fec <__flatcc_gen_sort@@Base>:
   17fec:	push	{r4, lr}
   17ff0:	mov	r4, r0
   17ff4:	sub	sp, sp, #24
   17ff8:	mov	r2, r0
   17ffc:	ldr	r1, [pc, #240]	; 180f4 <__flatcc_gen_sort@@Base+0x108>
   18000:	ldr	r0, [r0, #204]	; 0xcc
   18004:	bl	13fd4 <fprintf@plt>
   18008:	mov	r3, r4
   1800c:	mov	r2, r4
   18010:	ldr	r1, [pc, #224]	; 180f8 <__flatcc_gen_sort@@Base+0x10c>
   18014:	ldr	r0, [r4, #204]	; 0xcc
   18018:	bl	13fd4 <fprintf@plt>
   1801c:	mov	r3, r4
   18020:	mov	r2, r4
   18024:	str	r4, [sp]
   18028:	ldr	r1, [pc, #204]	; 180fc <__flatcc_gen_sort@@Base+0x110>
   1802c:	ldr	r0, [r4, #204]	; 0xcc
   18030:	bl	13fd4 <fprintf@plt>
   18034:	mov	r3, r4
   18038:	mov	r2, r4
   1803c:	str	r4, [sp, #4]
   18040:	str	r4, [sp]
   18044:	ldr	r1, [pc, #180]	; 18100 <__flatcc_gen_sort@@Base+0x114>
   18048:	ldr	r0, [r4, #204]	; 0xcc
   1804c:	bl	13fd4 <fprintf@plt>
   18050:	mov	r3, r4
   18054:	mov	r2, r4
   18058:	ldr	r1, [pc, #164]	; 18104 <__flatcc_gen_sort@@Base+0x118>
   1805c:	ldr	r0, [r4, #204]	; 0xcc
   18060:	bl	13fd4 <fprintf@plt>
   18064:	mov	r3, r4
   18068:	mov	r2, r4
   1806c:	str	r4, [sp, #4]
   18070:	str	r4, [sp]
   18074:	ldr	r1, [pc, #140]	; 18108 <__flatcc_gen_sort@@Base+0x11c>
   18078:	ldr	r0, [r4, #204]	; 0xcc
   1807c:	bl	13fd4 <fprintf@plt>
   18080:	mov	r3, r4
   18084:	mov	r2, r4
   18088:	str	r4, [sp, #12]
   1808c:	str	r4, [sp, #8]
   18090:	str	r4, [sp, #4]
   18094:	str	r4, [sp]
   18098:	ldr	r1, [pc, #108]	; 1810c <__flatcc_gen_sort@@Base+0x120>
   1809c:	ldr	r0, [r4, #204]	; 0xcc
   180a0:	bl	13fd4 <fprintf@plt>
   180a4:	mov	r3, r4
   180a8:	mov	r2, r4
   180ac:	str	r4, [sp, #4]
   180b0:	str	r4, [sp]
   180b4:	ldr	r1, [pc, #84]	; 18110 <__flatcc_gen_sort@@Base+0x124>
   180b8:	ldr	r0, [r4, #204]	; 0xcc
   180bc:	bl	13fd4 <fprintf@plt>
   180c0:	str	r4, [sp, #16]
   180c4:	str	r4, [sp, #12]
   180c8:	str	r4, [sp, #8]
   180cc:	str	r4, [sp, #4]
   180d0:	str	r4, [sp]
   180d4:	mov	r3, r4
   180d8:	mov	r2, r4
   180dc:	ldr	r1, [pc, #48]	; 18114 <__flatcc_gen_sort@@Base+0x128>
   180e0:	ldr	r0, [r4, #204]	; 0xcc
   180e4:	bl	13fd4 <fprintf@plt>
   180e8:	mov	r0, #0
   180ec:	add	sp, sp, #24
   180f0:	pop	{r4, pc}
   180f4:	andeq	r8, r3, r9, lsr #32
   180f8:	strdeq	r8, [r3], -r7
   180fc:	andeq	r8, r3, r7, lsl #10
   18100:	ldrdeq	r8, [r3], -fp
   18104:	andeq	r8, r3, pc, ror #12
   18108:	andeq	r8, r3, r6, lsl #16
   1810c:	andeq	r8, r3, fp, lsl #17
   18110:	andeq	r8, r3, r9, lsl r9
   18114:	andeq	r8, r3, sl, ror r9
   18118:	mov	r2, r1
   1811c:	mov	r1, r0
   18120:	ldr	r0, [r0, #12]
   18124:	b	150e8 <__flatcc_fb_scoped_symbol_name@@Base>
   18128:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1812c:	sub	sp, sp, #484	; 0x1e4
   18130:	mov	sl, r2
   18134:	ldr	r2, [sp, #524]	; 0x20c
   18138:	add	r7, sp, #40	; 0x28
   1813c:	mov	fp, r3
   18140:	ldr	r3, [pc, #404]	; 182dc <__flatcc_gen_sort@@Base+0x2f0>
   18144:	cmp	r2, #0
   18148:	ldr	r5, [sp, #520]	; 0x208
   1814c:	mov	r2, #220	; 0xdc
   18150:	mov	r4, r0
   18154:	mov	r9, r1
   18158:	mov	r0, r7
   1815c:	mov	r1, #0
   18160:	add	r8, sp, #260	; 0x104
   18164:	ldr	r6, [pc, #372]	; 182e0 <__flatcc_gen_sort@@Base+0x2f4>
   18168:	moveq	r6, r3
   1816c:	bl	13fec <memset@plt>
   18170:	mov	r2, #220	; 0xdc
   18174:	mov	r1, #0
   18178:	mov	r0, r8
   1817c:	bl	13fec <memset@plt>
   18180:	mov	r0, r5
   18184:	mov	r1, r7
   18188:	bl	18118 <__flatcc_gen_sort@@Base+0x12c>
   1818c:	ldr	r5, [r5, #20]
   18190:	cmp	r5, #0
   18194:	bne	181a4 <__flatcc_gen_sort@@Base+0x1b8>
   18198:	mov	r0, r5
   1819c:	add	sp, sp, #484	; 0x1e4
   181a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   181a4:	ldrh	r1, [r5, #24]
   181a8:	ldr	r2, [r5, #4]
   181ac:	cmp	r1, #10
   181b0:	ldm	r2, {r2, r3}
   181b4:	beq	18288 <__flatcc_gen_sort@@Base+0x29c>
   181b8:	cmp	r1, #14
   181bc:	beq	181d0 <__flatcc_gen_sort@@Base+0x1e4>
   181c0:	cmp	r1, #0
   181c4:	bne	182b0 <__flatcc_gen_sort@@Base+0x2c4>
   181c8:	ldr	r5, [r5]
   181cc:	b	18190 <__flatcc_gen_sort@@Base+0x1a4>
   181d0:	mov	r1, r8
   181d4:	ldr	r0, [r5, #16]
   181d8:	str	r2, [sp, #36]	; 0x24
   181dc:	str	r3, [sp, #32]
   181e0:	bl	18118 <__flatcc_gen_sort@@Base+0x12c>
   181e4:	ldr	r1, [r5, #16]
   181e8:	ldr	r3, [sp, #32]
   181ec:	ldr	r2, [sp, #36]	; 0x24
   181f0:	ldrh	r1, [r1, #8]
   181f4:	cmp	r1, #0
   181f8:	beq	18238 <__flatcc_gen_sort@@Base+0x24c>
   181fc:	cmp	r1, #1
   18200:	beq	18264 <__flatcc_gen_sort@@Base+0x278>
   18204:	ldr	r0, [pc, #216]	; 182e4 <__flatcc_gen_sort@@Base+0x2f8>
   18208:	ldr	r3, [pc, #216]	; 182e8 <__flatcc_gen_sort@@Base+0x2fc>
   1820c:	ldr	r2, [pc, #216]	; 182ec <__flatcc_gen_sort@@Base+0x300>
   18210:	str	r3, [sp]
   18214:	ldr	r1, [pc, #212]	; 182f0 <__flatcc_gen_sort@@Base+0x304>
   18218:	ldr	r3, [pc, #212]	; 182f4 <__flatcc_gen_sort@@Base+0x308>
   1821c:	ldr	r0, [r0]
   18220:	bl	13fd4 <fprintf@plt>
   18224:	ldr	r3, [pc, #204]	; 182f8 <__flatcc_gen_sort@@Base+0x30c>
   18228:	ldr	r2, [pc, #196]	; 182f4 <__flatcc_gen_sort@@Base+0x308>
   1822c:	ldr	r1, [pc, #184]	; 182ec <__flatcc_gen_sort@@Base+0x300>
   18230:	ldr	r0, [pc, #196]	; 182fc <__flatcc_gen_sort@@Base+0x310>
   18234:	bl	14094 <__assert_fail@plt>
   18238:	ldr	r1, [pc, #192]	; 18300 <__flatcc_gen_sort@@Base+0x314>
   1823c:	str	r2, [sp, #24]
   18240:	str	r3, [sp, #20]
   18244:	mov	r2, r4
   18248:	mov	r3, r6
   1824c:	str	r8, [sp, #28]
   18250:	str	r7, [sp, #16]
   18254:	stm	sp, {r4, r9, sl, fp}
   18258:	ldr	r0, [r4, #204]	; 0xcc
   1825c:	bl	13fd4 <fprintf@plt>
   18260:	b	181c8 <__flatcc_gen_sort@@Base+0x1dc>
   18264:	str	r2, [sp, #24]
   18268:	str	r3, [sp, #20]
   1826c:	str	r8, [sp, #28]
   18270:	str	r7, [sp, #16]
   18274:	stm	sp, {r4, r9, sl, fp}
   18278:	mov	r3, r6
   1827c:	mov	r2, r4
   18280:	ldr	r1, [pc, #124]	; 18304 <__flatcc_gen_sort@@Base+0x318>
   18284:	b	18258 <__flatcc_gen_sort@@Base+0x26c>
   18288:	str	r2, [sp, #24]
   1828c:	str	r3, [sp, #20]
   18290:	str	r7, [sp, #16]
   18294:	stm	sp, {r4, r9, sl, fp}
   18298:	mov	r3, r6
   1829c:	mov	r2, r4
   182a0:	ldr	r1, [pc, #96]	; 18308 <__flatcc_gen_sort@@Base+0x31c>
   182a4:	ldr	r0, [r4, #204]	; 0xcc
   182a8:	bl	13fd4 <fprintf@plt>
   182ac:	b	181c8 <__flatcc_gen_sort@@Base+0x1dc>
   182b0:	ldr	r0, [pc, #44]	; 182e4 <__flatcc_gen_sort@@Base+0x2f8>
   182b4:	ldr	r3, [pc, #80]	; 1830c <__flatcc_gen_sort@@Base+0x320>
   182b8:	ldr	r2, [pc, #44]	; 182ec <__flatcc_gen_sort@@Base+0x300>
   182bc:	str	r3, [sp]
   182c0:	ldr	r1, [pc, #40]	; 182f0 <__flatcc_gen_sort@@Base+0x304>
   182c4:	ldr	r3, [pc, #68]	; 18310 <__flatcc_gen_sort@@Base+0x324>
   182c8:	ldr	r0, [r0]
   182cc:	bl	13fd4 <fprintf@plt>
   182d0:	ldr	r3, [pc, #32]	; 182f8 <__flatcc_gen_sort@@Base+0x30c>
   182d4:	ldr	r2, [pc, #52]	; 18310 <__flatcc_gen_sort@@Base+0x324>
   182d8:	b	1822c <__flatcc_gen_sort@@Base+0x240>
   182dc:	andeq	r8, r4, r2, ror sp
   182e0:	andeq	r8, r3, r5, asr #21
   182e4:	strheq	fp, [r5], -r0
   182e8:	muleq	r3, sl, fp
   182ec:	andeq	r8, r3, r9, asr #22
   182f0:	andeq	r0, r3, lr, ror #20
   182f4:	andeq	r0, r0, lr, asr #10
   182f8:	strdeq	r8, [r3], -r1
   182fc:	andeq	r9, r3, sp, asr #1
   18300:	ldrdeq	r8, [r3], -r2
   18304:	andeq	r8, r3, sp, lsl #22
   18308:	ldrdeq	r8, [r3], -r0
   1830c:	andeq	r8, r3, r8, lsl #24
   18310:	andeq	r0, r0, r8, asr r5
   18314:	push	{r4, r5, r6, lr}
   18318:	mov	r4, r0
   1831c:	mov	r5, #0
   18320:	cmp	r4, #0
   18324:	bne	18330 <__flatcc_gen_sort@@Base+0x344>
   18328:	mov	r0, r5
   1832c:	pop	{r4, r5, r6, pc}
   18330:	ldrh	r3, [r4, #72]	; 0x48
   18334:	tst	r3, #4
   18338:	bne	18364 <__flatcc_gen_sort@@Base+0x378>
   1833c:	ldrh	r3, [r4, #24]
   18340:	cmp	r3, #14
   18344:	bne	1836c <__flatcc_gen_sort@@Base+0x380>
   18348:	ldr	r3, [r4, #16]
   1834c:	ldrh	r2, [r3, #8]
   18350:	cmp	r2, #1
   18354:	bne	1836c <__flatcc_gen_sort@@Base+0x380>
   18358:	ldr	r0, [r3, #20]
   1835c:	bl	18314 <__flatcc_gen_sort@@Base+0x328>
   18360:	add	r5, r5, r0
   18364:	ldr	r4, [r4]
   18368:	b	18320 <__flatcc_gen_sort@@Base+0x334>
   1836c:	add	r5, r5, #1
   18370:	b	18364 <__flatcc_gen_sort@@Base+0x378>
   18374:	push	{lr}		; (str lr, [sp, #-4]!)
   18378:	cmp	r3, #0
   1837c:	ldr	lr, [pc, #88]	; 183dc <__flatcc_gen_sort@@Base+0x3f0>
   18380:	ldr	ip, [pc, #88]	; 183e0 <__flatcc_gen_sort@@Base+0x3f4>
   18384:	moveq	r3, lr
   18388:	movne	r3, ip
   1838c:	cmp	r2, #0
   18390:	popeq	{pc}		; (ldreq pc, [sp], #4)
   18394:	cmp	r1, #0
   18398:	bne	183c8 <__flatcc_gen_sort@@Base+0x3dc>
   1839c:	cmp	r2, #4
   183a0:	ble	183b8 <__flatcc_gen_sort@@Base+0x3cc>
   183a4:	mov	r2, r3
   183a8:	ldr	r1, [pc, #52]	; 183e4 <__flatcc_gen_sort@@Base+0x3f8>
   183ac:	ldr	r0, [r0]
   183b0:	pop	{lr}		; (ldr lr, [sp], #4)
   183b4:	b	13fd4 <fprintf@plt>
   183b8:	ldr	r1, [r0]
   183bc:	pop	{lr}		; (ldr lr, [sp], #4)
   183c0:	ldr	r0, [pc, #32]	; 183e8 <__flatcc_gen_sort@@Base+0x3fc>
   183c4:	b	14070 <fputs@plt>
   183c8:	tst	r1, #3
   183cc:	bne	183b8 <__flatcc_gen_sort@@Base+0x3cc>
   183d0:	sub	r2, r2, r1
   183d4:	cmp	r2, #2
   183d8:	b	183a0 <__flatcc_gen_sort@@Base+0x3b4>
   183dc:	andeq	r1, r3, r0, lsr #28
   183e0:	andeq	r3, r3, sl, lsr r5
   183e4:	andeq	r8, r3, r5, lsr ip
   183e8:			; <UNDEFINED> instruction: 0x000467b1
   183ec:	push	{r0, r1, r2, lr}
   183f0:	sub	r0, r0, #1
   183f4:	cmp	r0, #10
   183f8:	ldrls	pc, [pc, r0, lsl #2]
   183fc:	b	18478 <__flatcc_gen_sort@@Base+0x48c>
   18400:	andeq	r8, r1, ip, lsr #9
   18404:	andeq	r8, r1, ip, lsr #8
   18408:			; <UNDEFINED> instruction: 0x000184b4
   1840c:	andeq	r8, r1, r8, lsr r4
   18410:	andeq	r8, r1, r0, asr #8
   18414:	andeq	r8, r1, r8, asr #8
   18418:	andeq	r8, r1, r0, asr r4
   1841c:	andeq	r8, r1, r8, asr r4
   18420:	andeq	r8, r1, r0, ror #8
   18424:	andeq	r8, r1, r0, ror r4
   18428:	andeq	r8, r1, r8, ror #8
   1842c:	ldr	r0, [pc, #136]	; 184bc <__flatcc_gen_sort@@Base+0x4d0>
   18430:	add	sp, sp, #12
   18434:	pop	{pc}		; (ldr pc, [sp], #4)
   18438:	ldr	r0, [pc, #128]	; 184c0 <__flatcc_gen_sort@@Base+0x4d4>
   1843c:	b	18430 <__flatcc_gen_sort@@Base+0x444>
   18440:	ldr	r0, [pc, #124]	; 184c4 <__flatcc_gen_sort@@Base+0x4d8>
   18444:	b	18430 <__flatcc_gen_sort@@Base+0x444>
   18448:	ldr	r0, [pc, #120]	; 184c8 <__flatcc_gen_sort@@Base+0x4dc>
   1844c:	b	18430 <__flatcc_gen_sort@@Base+0x444>
   18450:	ldr	r0, [pc, #116]	; 184cc <__flatcc_gen_sort@@Base+0x4e0>
   18454:	b	18430 <__flatcc_gen_sort@@Base+0x444>
   18458:	ldr	r0, [pc, #112]	; 184d0 <__flatcc_gen_sort@@Base+0x4e4>
   1845c:	b	18430 <__flatcc_gen_sort@@Base+0x444>
   18460:	ldr	r0, [pc, #108]	; 184d4 <__flatcc_gen_sort@@Base+0x4e8>
   18464:	b	18430 <__flatcc_gen_sort@@Base+0x444>
   18468:	ldr	r0, [pc, #104]	; 184d8 <__flatcc_gen_sort@@Base+0x4ec>
   1846c:	b	18430 <__flatcc_gen_sort@@Base+0x444>
   18470:	ldr	r0, [pc, #100]	; 184dc <__flatcc_gen_sort@@Base+0x4f0>
   18474:	b	18430 <__flatcc_gen_sort@@Base+0x444>
   18478:	ldr	r0, [pc, #96]	; 184e0 <__flatcc_gen_sort@@Base+0x4f4>
   1847c:	ldr	r3, [pc, #96]	; 184e4 <__flatcc_gen_sort@@Base+0x4f8>
   18480:	ldr	r2, [pc, #96]	; 184e8 <__flatcc_gen_sort@@Base+0x4fc>
   18484:	str	r3, [sp]
   18488:	ldr	r1, [pc, #92]	; 184ec <__flatcc_gen_sort@@Base+0x500>
   1848c:	mov	r3, #141	; 0x8d
   18490:	ldr	r0, [r0]
   18494:	bl	13fd4 <fprintf@plt>
   18498:	ldr	r3, [pc, #80]	; 184f0 <__flatcc_gen_sort@@Base+0x504>
   1849c:	mov	r2, #141	; 0x8d
   184a0:	ldr	r1, [pc, #64]	; 184e8 <__flatcc_gen_sort@@Base+0x4fc>
   184a4:	ldr	r0, [pc, #72]	; 184f4 <__flatcc_gen_sort@@Base+0x508>
   184a8:	bl	14094 <__assert_fail@plt>
   184ac:	ldr	r0, [pc, #68]	; 184f8 <__flatcc_gen_sort@@Base+0x50c>
   184b0:	b	18430 <__flatcc_gen_sort@@Base+0x444>
   184b4:	ldr	r0, [pc, #64]	; 184fc <__flatcc_gen_sort@@Base+0x510>
   184b8:	b	18430 <__flatcc_gen_sort@@Base+0x444>
   184bc:	strdeq	r0, [r3], -r7
   184c0:	andeq	r0, r3, r9, lsl #20
   184c4:	andeq	r0, r3, r1, lsl sl
   184c8:	andeq	r0, r3, pc, ror #19
   184cc:	strdeq	r0, [r3], -r8
   184d0:	andeq	r0, r3, r1, lsl #20
   184d4:	andeq	r0, r3, sl, lsl #20
   184d8:	andeq	r0, r3, r8, lsl sl
   184dc:	andeq	r0, r3, lr, lsl sl
   184e0:	strheq	fp, [r5], -r0
   184e4:	andeq	r0, r3, r9, ror sl
   184e8:	andeq	r0, r3, r5, lsr #20
   184ec:	andeq	r0, r3, lr, ror #20
   184f0:	andeq	r8, r3, r2, lsl #20
   184f4:	andeq	r9, r3, sp, asr #1
   184f8:	andeq	r0, r3, lr, ror #19
   184fc:	andeq	r0, r3, r0, lsl #20
   18500:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18504:	mov	r5, r1
   18508:	sub	sp, sp, #244	; 0xf4
   1850c:	mov	r6, r0
   18510:	mov	r4, r2
   18514:	mov	r1, #0
   18518:	mov	r2, #220	; 0xdc
   1851c:	add	r0, sp, #20
   18520:	mov	r7, r3
   18524:	ldr	r9, [pc, #308]	; 18660 <__flatcc_gen_sort@@Base+0x674>
   18528:	bl	13fec <memset@plt>
   1852c:	ldr	sl, [pc, #304]	; 18664 <__flatcc_gen_sort@@Base+0x678>
   18530:	ldr	r5, [r5]
   18534:	add	r8, r6, #204	; 0xcc
   18538:	cmp	r5, #0
   1853c:	bne	1854c <__flatcc_gen_sort@@Base+0x560>
   18540:	mov	r0, r4
   18544:	add	sp, sp, #244	; 0xf4
   18548:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1854c:	ldrh	r3, [r5, #72]	; 0x48
   18550:	tst	r3, #4
   18554:	bne	1859c <__flatcc_gen_sort@@Base+0x5b0>
   18558:	ldrh	r3, [r5, #24]
   1855c:	cmp	r3, #8
   18560:	beq	185e0 <__flatcc_gen_sort@@Base+0x5f4>
   18564:	cmp	r3, #14
   18568:	bne	1862c <__flatcc_gen_sort@@Base+0x640>
   1856c:	ldr	r1, [r5, #16]
   18570:	ldrh	r3, [r1, #8]
   18574:	cmp	r3, #1
   18578:	ldr	r3, [sp, #280]	; 0x118
   1857c:	bne	185a4 <__flatcc_gen_sort@@Base+0x5b8>
   18580:	str	r3, [sp]
   18584:	mov	r2, r4
   18588:	mov	r3, r7
   1858c:	add	r1, r1, #20
   18590:	mov	r0, r6
   18594:	bl	18500 <__flatcc_gen_sort@@Base+0x514>
   18598:	mov	r4, r0
   1859c:	ldr	r5, [r5]
   185a0:	b	18538 <__flatcc_gen_sort@@Base+0x54c>
   185a4:	mov	r2, r7
   185a8:	mov	r1, r4
   185ac:	mov	r0, r8
   185b0:	bl	18374 <__flatcc_gen_sort@@Base+0x388>
   185b4:	add	r1, sp, #20
   185b8:	ldr	r0, [r5, #16]
   185bc:	bl	18118 <__flatcc_gen_sort@@Base+0x12c>
   185c0:	mov	r3, r4
   185c4:	add	r2, sp, #20
   185c8:	ldr	r1, [pc, #152]	; 18668 <__flatcc_gen_sort@@Base+0x67c>
   185cc:	ldr	r0, [r6, #204]	; 0xcc
   185d0:	add	fp, r4, #1
   185d4:	bl	13fd4 <fprintf@plt>
   185d8:	mov	r4, fp
   185dc:	b	1859c <__flatcc_gen_sort@@Base+0x5b0>
   185e0:	mov	r2, r7
   185e4:	ldr	r3, [sp, #280]	; 0x118
   185e8:	mov	r1, r4
   185ec:	mov	r0, r8
   185f0:	bl	18374 <__flatcc_gen_sort@@Base+0x388>
   185f4:	ldr	r0, [r5, #16]
   185f8:	add	fp, r4, #1
   185fc:	cmp	r0, #5
   18600:	moveq	r2, r6
   18604:	movne	r2, r9
   18608:	str	r2, [sp, #12]
   1860c:	bl	183ec <__flatcc_gen_sort@@Base+0x400>
   18610:	str	r4, [sp]
   18614:	ldr	r2, [sp, #12]
   18618:	mov	r1, sl
   1861c:	mov	r3, r0
   18620:	ldr	r0, [r6, #204]	; 0xcc
   18624:	bl	13fd4 <fprintf@plt>
   18628:	b	185d8 <__flatcc_gen_sort@@Base+0x5ec>
   1862c:	ldr	r0, [pc, #56]	; 1866c <__flatcc_gen_sort@@Base+0x680>
   18630:	ldr	r3, [pc, #56]	; 18670 <__flatcc_gen_sort@@Base+0x684>
   18634:	ldr	r2, [pc, #56]	; 18674 <__flatcc_gen_sort@@Base+0x688>
   18638:	str	r3, [sp]
   1863c:	ldr	r1, [pc, #52]	; 18678 <__flatcc_gen_sort@@Base+0x68c>
   18640:	ldr	r3, [pc, #52]	; 1867c <__flatcc_gen_sort@@Base+0x690>
   18644:	ldr	r0, [r0]
   18648:	bl	13fd4 <fprintf@plt>
   1864c:	ldr	r3, [pc, #44]	; 18680 <__flatcc_gen_sort@@Base+0x694>
   18650:	ldr	r2, [pc, #36]	; 1867c <__flatcc_gen_sort@@Base+0x690>
   18654:	ldr	r1, [pc, #24]	; 18674 <__flatcc_gen_sort@@Base+0x688>
   18658:	ldr	r0, [pc, #36]	; 18684 <__flatcc_gen_sort@@Base+0x698>
   1865c:	bl	14094 <__assert_fail@plt>
   18660:	andeq	r1, r3, r1, lsr #28
   18664:	andeq	r8, r3, r9, asr #24
   18668:	andeq	r8, r3, fp, lsr ip
   1866c:	strheq	fp, [r5], -r0
   18670:	andeq	r8, r3, r2, asr ip
   18674:	andeq	r8, r3, r9, asr #22
   18678:	andeq	r0, r3, lr, ror #20
   1867c:	andeq	r0, r0, r2, asr r3
   18680:	andeq	r8, r3, r3, lsl sl
   18684:	andeq	r9, r3, sp, asr #1
   18688:	push	{r0, r1, r2, lr}
   1868c:	sub	r0, r0, #1
   18690:	cmp	r0, #10
   18694:	ldrls	pc, [pc, r0, lsl #2]
   18698:	b	18714 <__flatcc_gen_sort@@Base+0x728>
   1869c:	andeq	r8, r1, r8, asr #14
   186a0:	andeq	r8, r1, r8, asr #13
   186a4:	andeq	r8, r1, r0, asr r7
   186a8:	ldrdeq	r8, [r1], -r4
   186ac:	ldrdeq	r8, [r1], -ip
   186b0:	andeq	r8, r1, r4, ror #13
   186b4:	andeq	r8, r1, ip, ror #13
   186b8:	strdeq	r8, [r1], -r4
   186bc:	strdeq	r8, [r1], -ip
   186c0:	andeq	r8, r1, ip, lsl #14
   186c4:	andeq	r8, r1, r4, lsl #14
   186c8:	ldr	r0, [pc, #136]	; 18758 <__flatcc_gen_sort@@Base+0x76c>
   186cc:	add	sp, sp, #12
   186d0:	pop	{pc}		; (ldr pc, [sp], #4)
   186d4:	ldr	r0, [pc, #128]	; 1875c <__flatcc_gen_sort@@Base+0x770>
   186d8:	b	186cc <__flatcc_gen_sort@@Base+0x6e0>
   186dc:	ldr	r0, [pc, #124]	; 18760 <__flatcc_gen_sort@@Base+0x774>
   186e0:	b	186cc <__flatcc_gen_sort@@Base+0x6e0>
   186e4:	ldr	r0, [pc, #120]	; 18764 <__flatcc_gen_sort@@Base+0x778>
   186e8:	b	186cc <__flatcc_gen_sort@@Base+0x6e0>
   186ec:	ldr	r0, [pc, #116]	; 18768 <__flatcc_gen_sort@@Base+0x77c>
   186f0:	b	186cc <__flatcc_gen_sort@@Base+0x6e0>
   186f4:	ldr	r0, [pc, #112]	; 1876c <__flatcc_gen_sort@@Base+0x780>
   186f8:	b	186cc <__flatcc_gen_sort@@Base+0x6e0>
   186fc:	ldr	r0, [pc, #108]	; 18770 <__flatcc_gen_sort@@Base+0x784>
   18700:	b	186cc <__flatcc_gen_sort@@Base+0x6e0>
   18704:	ldr	r0, [pc, #104]	; 18774 <__flatcc_gen_sort@@Base+0x788>
   18708:	b	186cc <__flatcc_gen_sort@@Base+0x6e0>
   1870c:	ldr	r0, [pc, #100]	; 18778 <__flatcc_gen_sort@@Base+0x78c>
   18710:	b	186cc <__flatcc_gen_sort@@Base+0x6e0>
   18714:	ldr	r0, [pc, #96]	; 1877c <__flatcc_gen_sort@@Base+0x790>
   18718:	ldr	r3, [pc, #96]	; 18780 <__flatcc_gen_sort@@Base+0x794>
   1871c:	ldr	r2, [pc, #96]	; 18784 <__flatcc_gen_sort@@Base+0x798>
   18720:	str	r3, [sp]
   18724:	ldr	r1, [pc, #92]	; 18788 <__flatcc_gen_sort@@Base+0x79c>
   18728:	mov	r3, #96	; 0x60
   1872c:	ldr	r0, [r0]
   18730:	bl	13fd4 <fprintf@plt>
   18734:	ldr	r3, [pc, #80]	; 1878c <__flatcc_gen_sort@@Base+0x7a0>
   18738:	mov	r2, #96	; 0x60
   1873c:	ldr	r1, [pc, #64]	; 18784 <__flatcc_gen_sort@@Base+0x798>
   18740:	ldr	r0, [pc, #72]	; 18790 <__flatcc_gen_sort@@Base+0x7a4>
   18744:	bl	14094 <__assert_fail@plt>
   18748:	ldr	r0, [pc, #68]	; 18794 <__flatcc_gen_sort@@Base+0x7a8>
   1874c:	b	186cc <__flatcc_gen_sort@@Base+0x6e0>
   18750:	ldr	r0, [pc, #64]	; 18798 <__flatcc_gen_sort@@Base+0x7ac>
   18754:	b	186cc <__flatcc_gen_sort@@Base+0x6e0>
   18758:			; <UNDEFINED> instruction: 0x00030ab7
   1875c:	andeq	r0, r3, r5, asr #21
   18760:	andeq	r7, r4, r0, ror pc
   18764:			; <UNDEFINED> instruction: 0x00030ab1
   18768:			; <UNDEFINED> instruction: 0x00030ab8
   1876c:			; <UNDEFINED> instruction: 0x00030abf
   18770:	andeq	r0, r3, r6, asr #21
   18774:	andeq	r0, r3, r8, lsl sl
   18778:	andeq	r0, r3, lr, lsl sl
   1877c:	strheq	fp, [r5], -r0
   18780:	andeq	r0, r3, r9, ror sl
   18784:	andeq	r0, r3, r5, lsr #20
   18788:	andeq	r0, r3, lr, ror #20
   1878c:	andeq	r8, r3, fp, lsr #20
   18790:	andeq	r9, r3, sp, asr #1
   18794:			; <UNDEFINED> instruction: 0x00030ab0
   18798:			; <UNDEFINED> instruction: 0x00030abe
   1879c:	push	{r0, r1, r2, lr}
   187a0:	sub	r0, r0, #1
   187a4:	cmp	r0, #8
   187a8:	ldrls	pc, [pc, r0, lsl #2]
   187ac:	b	18808 <__flatcc_gen_sort@@Base+0x81c>
   187b0:	andeq	r8, r1, ip, lsr r8
   187b4:	ldrdeq	r8, [r1], -r4
   187b8:	andeq	r8, r1, r4, asr #16
   187bc:	andeq	r8, r1, r0, ror #15
   187c0:	andeq	r8, r1, r0, ror #15
   187c4:	andeq	r8, r1, r8, ror #15
   187c8:	strdeq	r8, [r1], -r0
   187cc:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   187d0:	andeq	r8, r1, r0, lsl #16
   187d4:	ldr	r0, [pc, #112]	; 1884c <__flatcc_gen_sort@@Base+0x860>
   187d8:	add	sp, sp, #12
   187dc:	pop	{pc}		; (ldr pc, [sp], #4)
   187e0:	ldr	r0, [pc, #104]	; 18850 <__flatcc_gen_sort@@Base+0x864>
   187e4:	b	187d8 <__flatcc_gen_sort@@Base+0x7ec>
   187e8:	ldr	r0, [pc, #100]	; 18854 <__flatcc_gen_sort@@Base+0x868>
   187ec:	b	187d8 <__flatcc_gen_sort@@Base+0x7ec>
   187f0:	ldr	r0, [pc, #96]	; 18858 <__flatcc_gen_sort@@Base+0x86c>
   187f4:	b	187d8 <__flatcc_gen_sort@@Base+0x7ec>
   187f8:	ldr	r0, [pc, #92]	; 1885c <__flatcc_gen_sort@@Base+0x870>
   187fc:	b	187d8 <__flatcc_gen_sort@@Base+0x7ec>
   18800:	ldr	r0, [pc, #88]	; 18860 <__flatcc_gen_sort@@Base+0x874>
   18804:	b	187d8 <__flatcc_gen_sort@@Base+0x7ec>
   18808:	ldr	r0, [pc, #84]	; 18864 <__flatcc_gen_sort@@Base+0x878>
   1880c:	ldr	r3, [pc, #84]	; 18868 <__flatcc_gen_sort@@Base+0x87c>
   18810:	ldr	r2, [pc, #84]	; 1886c <__flatcc_gen_sort@@Base+0x880>
   18814:	str	r3, [sp]
   18818:	ldr	r1, [pc, #80]	; 18870 <__flatcc_gen_sort@@Base+0x884>
   1881c:	mov	r3, #226	; 0xe2
   18820:	ldr	r0, [r0]
   18824:	bl	13fd4 <fprintf@plt>
   18828:	ldr	r3, [pc, #68]	; 18874 <__flatcc_gen_sort@@Base+0x888>
   1882c:	mov	r2, #226	; 0xe2
   18830:	ldr	r1, [pc, #52]	; 1886c <__flatcc_gen_sort@@Base+0x880>
   18834:	ldr	r0, [pc, #60]	; 18878 <__flatcc_gen_sort@@Base+0x88c>
   18838:	bl	14094 <__assert_fail@plt>
   1883c:	ldr	r0, [pc, #56]	; 1887c <__flatcc_gen_sort@@Base+0x890>
   18840:	b	187d8 <__flatcc_gen_sort@@Base+0x7ec>
   18844:	ldr	r0, [pc, #52]	; 18880 <__flatcc_gen_sort@@Base+0x894>
   18848:	b	187d8 <__flatcc_gen_sort@@Base+0x7ec>
   1884c:	andeq	r1, r3, pc, lsl #5
   18850:	andeq	r1, r3, r1, lsr #5
   18854:	andeq	r1, r3, r7, lsl #5
   18858:	muleq	r3, r0, r2
   1885c:	muleq	r3, r9, r2
   18860:	andeq	r1, r3, r2, lsr #5
   18864:	strheq	fp, [r5], -r0
   18868:	andeq	r0, r3, r9, ror sl
   1886c:	andeq	r0, r3, r5, lsr #20
   18870:	andeq	r0, r3, lr, ror #20
   18874:	andeq	r8, r3, lr, lsr sl
   18878:	andeq	r9, r3, sp, asr #1
   1887c:	andeq	r1, r3, r6, lsl #5
   18880:	muleq	r3, r8, r2
   18884:	ldrh	r3, [r1, #8]
   18888:	push	{r0, r1, r2, r4, r5, lr}
   1888c:	mov	r4, r1
   18890:	sub	r3, r3, #3
   18894:	mov	r5, r2
   18898:	cmp	r3, #3
   1889c:	ldrls	pc, [pc, r3, lsl #2]
   188a0:	b	18940 <__flatcc_gen_sort@@Base+0x954>
   188a4:	andeq	r8, r1, r0, lsl r9
   188a8:	ldrdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   188ac:			; <UNDEFINED> instruction: 0x000188b4
   188b0:	strdeq	r8, [r1], -r0
   188b4:	bl	1879c <__flatcc_gen_sort@@Base+0x7b0>
   188b8:	ldrd	r2, [r4]
   188bc:	ldr	r1, [pc, #176]	; 18974 <__flatcc_gen_sort@@Base+0x988>
   188c0:	strd	r2, [sp]
   188c4:	mov	r2, r0
   188c8:	mov	r0, r5
   188cc:	bl	14040 <sprintf@plt>
   188d0:	add	sp, sp, #12
   188d4:	pop	{r4, r5, pc}
   188d8:	bl	1879c <__flatcc_gen_sort@@Base+0x7b0>
   188dc:	ldrd	r2, [r4]
   188e0:	ldr	r1, [pc, #144]	; 18978 <__flatcc_gen_sort@@Base+0x98c>
   188e4:	strd	r2, [sp]
   188e8:	mov	r2, r0
   188ec:	b	188c8 <__flatcc_gen_sort@@Base+0x8dc>
   188f0:	bl	1879c <__flatcc_gen_sort@@Base+0x7b0>
   188f4:	ldrb	r3, [r4]
   188f8:	ldr	r1, [pc, #124]	; 1897c <__flatcc_gen_sort@@Base+0x990>
   188fc:	mov	r2, r0
   18900:	mov	r0, r5
   18904:	add	sp, sp, #12
   18908:	pop	{r4, r5, lr}
   1890c:	b	14040 <sprintf@plt>
   18910:	cmp	r0, #11
   18914:	mov	r0, r5
   18918:	vldreq	d7, [r1]
   1891c:	ldrdne	r2, [r4]
   18920:	ldreq	r1, [pc, #88]	; 18980 <__flatcc_gen_sort@@Base+0x994>
   18924:	ldrne	r1, [pc, #88]	; 18984 <__flatcc_gen_sort@@Base+0x998>
   18928:	vcvteq.f32.f64	s14, d7
   1892c:	vcvteq.f64.f32	d7, s14
   18930:	vmoveq	r2, r3, d7
   18934:	add	sp, sp, #12
   18938:	pop	{r4, r5, lr}
   1893c:	b	14040 <sprintf@plt>
   18940:	ldr	r0, [pc, #64]	; 18988 <__flatcc_gen_sort@@Base+0x99c>
   18944:	ldr	r3, [pc, #64]	; 1898c <__flatcc_gen_sort@@Base+0x9a0>
   18948:	ldr	r2, [pc, #64]	; 18990 <__flatcc_gen_sort@@Base+0x9a4>
   1894c:	str	r3, [sp]
   18950:	ldr	r1, [pc, #60]	; 18994 <__flatcc_gen_sort@@Base+0x9a8>
   18954:	mov	r3, #260	; 0x104
   18958:	ldr	r0, [r0]
   1895c:	bl	13fd4 <fprintf@plt>
   18960:	ldr	r3, [pc, #48]	; 18998 <__flatcc_gen_sort@@Base+0x9ac>
   18964:	mov	r2, #260	; 0x104
   18968:	ldr	r1, [pc, #32]	; 18990 <__flatcc_gen_sort@@Base+0x9a4>
   1896c:	ldr	r0, [pc, #40]	; 1899c <__flatcc_gen_sort@@Base+0x9b0>
   18970:	bl	14094 <__assert_fail@plt>
   18974:	andeq	r1, r3, r9, lsr #5
   18978:			; <UNDEFINED> instruction: 0x000312b2
   1897c:			; <UNDEFINED> instruction: 0x000312bb
   18980:	andeq	r1, r3, r2, asr #5
   18984:	andeq	r1, r3, r6, asr #5
   18988:	strheq	fp, [r5], -r0
   1898c:	andeq	r0, r3, r9, ror sl
   18990:	andeq	r0, r3, r5, lsr #20
   18994:	andeq	r0, r3, lr, ror #20
   18998:	andeq	r8, r3, sl, asr #20
   1899c:	andeq	r9, r3, sp, asr #1
   189a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   189a4:	sub	sp, sp, #620	; 0x26c
   189a8:	add	r7, sp, #176	; 0xb0
   189ac:	mov	r5, r1
   189b0:	mov	r2, #220	; 0xdc
   189b4:	mov	r1, #0
   189b8:	mov	r4, r0
   189bc:	add	r6, sp, #396	; 0x18c
   189c0:	mov	r0, r7
   189c4:	bl	13fec <memset@plt>
   189c8:	mov	r2, #220	; 0xdc
   189cc:	mov	r1, #0
   189d0:	mov	r0, r6
   189d4:	bl	13fec <memset@plt>
   189d8:	mov	r0, r5
   189dc:	mov	r1, r7
   189e0:	bl	18118 <__flatcc_gen_sort@@Base+0x12c>
   189e4:	ldr	r5, [r5, #20]
   189e8:	cmp	r5, #0
   189ec:	bne	18a08 <__flatcc_gen_sort@@Base+0xa1c>
   189f0:	ldr	r1, [r4, #204]	; 0xcc
   189f4:	mov	r0, #10
   189f8:	bl	14034 <fputc@plt>
   189fc:	mov	r0, r5
   18a00:	add	sp, sp, #620	; 0x26c
   18a04:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18a08:	ldr	r3, [r5, #4]
   18a0c:	ldr	r8, [r3, #4]
   18a10:	ldr	r9, [r3]
   18a14:	ldrh	r3, [r5, #72]	; 0x48
   18a18:	tst	r3, #4
   18a1c:	beq	18a40 <__flatcc_gen_sort@@Base+0xa54>
   18a20:	str	r9, [sp]
   18a24:	mov	r3, r8
   18a28:	mov	r2, r7
   18a2c:	ldr	r1, [pc, #1352]	; 18f7c <__flatcc_gen_sort@@Base+0xf90>
   18a30:	ldr	r0, [r4, #204]	; 0xcc
   18a34:	bl	13fd4 <fprintf@plt>
   18a38:	ldr	r5, [r5]
   18a3c:	b	189e8 <__flatcc_gen_sort@@Base+0x9fc>
   18a40:	ldrh	r3, [r5, #24]
   18a44:	sub	r3, r3, #7
   18a48:	cmp	r3, #8
   18a4c:	ldrls	pc, [pc, r3, lsl #2]
   18a50:	b	18f50 <__flatcc_gen_sort@@Base+0xf64>
   18a54:	andeq	r8, r1, r4, lsl fp
   18a58:	andeq	r8, r1, r8, ror sl
   18a5c:	andeq	r8, r1, r0, ror #24
   18a60:	andeq	r8, r1, r4, lsr ip
   18a64:	andeq	r8, r1, r0, asr pc
   18a68:	andeq	r8, r1, r0, asr pc
   18a6c:	andeq	r8, r1, r0, asr pc
   18a70:	andeq	r8, r1, r4, lsl #25
   18a74:	andeq	r8, r1, r4, lsl #28
   18a78:	ldr	sl, [r5, #16]
   18a7c:	ldr	r3, [pc, #1276]	; 18f80 <__flatcc_gen_sort@@Base+0xf94>
   18a80:	cmp	sl, #5
   18a84:	moveq	r3, r4
   18a88:	mov	r0, sl
   18a8c:	str	r3, [sp, #64]	; 0x40
   18a90:	bl	183ec <__flatcc_gen_sort@@Base+0x400>
   18a94:	add	fp, sp, #76	; 0x4c
   18a98:	str	r0, [sp, #60]	; 0x3c
   18a9c:	mov	r0, sl
   18aa0:	bl	18688 <__flatcc_gen_sort@@Base+0x69c>
   18aa4:	mov	r2, fp
   18aa8:	add	r1, r5, #48	; 0x30
   18aac:	str	r0, [sp, #68]	; 0x44
   18ab0:	mov	r0, sl
   18ab4:	bl	18884 <__flatcc_gen_sort@@Base+0x898>
   18ab8:	str	fp, [sp, #52]	; 0x34
   18abc:	ldrh	r2, [r5, #74]	; 0x4a
   18ac0:	ldr	r3, [sp, #60]	; 0x3c
   18ac4:	str	r2, [sp, #48]	; 0x30
   18ac8:	ldrd	r0, [r5, #88]	; 0x58
   18acc:	str	r3, [sp, #36]	; 0x24
   18ad0:	ldr	r3, [sp, #64]	; 0x40
   18ad4:	strd	r0, [sp, #40]	; 0x28
   18ad8:	str	r3, [sp, #32]
   18adc:	ldr	r3, [sp, #68]	; 0x44
   18ae0:	str	r4, [sp, #24]
   18ae4:	str	r3, [sp, #28]
   18ae8:	str	r9, [sp, #20]
   18aec:	str	r8, [sp, #16]
   18af0:	str	r7, [sp, #12]
   18af4:	str	r4, [sp, #8]
   18af8:	ldrd	r2, [r5, #96]	; 0x60
   18afc:	ldr	r1, [pc, #1152]	; 18f84 <__flatcc_gen_sort@@Base+0xf98>
   18b00:	ldr	r0, [r4, #204]	; 0xcc
   18b04:	strd	r2, [sp]
   18b08:	mov	r2, r4
   18b0c:	bl	13fd4 <fprintf@plt>
   18b10:	b	18a38 <__flatcc_gen_sort@@Base+0xa4c>
   18b14:	ldr	sl, [r5, #16]
   18b18:	ldr	fp, [pc, #1120]	; 18f80 <__flatcc_gen_sort@@Base+0xf94>
   18b1c:	cmp	sl, #5
   18b20:	mov	r0, sl
   18b24:	moveq	fp, r4
   18b28:	bl	183ec <__flatcc_gen_sort@@Base+0x400>
   18b2c:	str	r0, [sp, #60]	; 0x3c
   18b30:	mov	r0, sl
   18b34:	bl	18688 <__flatcc_gen_sort@@Base+0x69c>
   18b38:	ldr	r3, [sp, #60]	; 0x3c
   18b3c:	str	fp, [sp, #32]
   18b40:	str	r3, [sp, #36]	; 0x24
   18b44:	str	r4, [sp, #24]
   18b48:	str	r9, [sp, #20]
   18b4c:	str	r8, [sp, #16]
   18b50:	str	r7, [sp, #12]
   18b54:	str	r4, [sp, #8]
   18b58:	ldr	r1, [pc, #1064]	; 18f88 <__flatcc_gen_sort@@Base+0xf9c>
   18b5c:	str	r0, [sp, #28]
   18b60:	ldrd	r2, [r5, #96]	; 0x60
   18b64:	ldr	r0, [r4, #204]	; 0xcc
   18b68:	strd	r2, [sp]
   18b6c:	mov	r2, r4
   18b70:	bl	13fd4 <fprintf@plt>
   18b74:	ldr	r0, [r5, #104]	; 0x68
   18b78:	cmp	r0, #0
   18b7c:	beq	18a38 <__flatcc_gen_sort@@Base+0xa4c>
   18b80:	ldrh	r3, [r0, #8]
   18b84:	cmp	r3, #0
   18b88:	beq	18bc8 <__flatcc_gen_sort@@Base+0xbdc>
   18b8c:	cmp	r3, #1
   18b90:	beq	18bf8 <__flatcc_gen_sort@@Base+0xc0c>
   18b94:	ldr	r0, [pc, #1008]	; 18f8c <__flatcc_gen_sort@@Base+0xfa0>
   18b98:	ldr	r3, [pc, #1008]	; 18f90 <__flatcc_gen_sort@@Base+0xfa4>
   18b9c:	ldr	r2, [pc, #1008]	; 18f94 <__flatcc_gen_sort@@Base+0xfa8>
   18ba0:	str	r3, [sp]
   18ba4:	ldr	r1, [pc, #1004]	; 18f98 <__flatcc_gen_sort@@Base+0xfac>
   18ba8:	ldr	r3, [pc, #1004]	; 18f9c <__flatcc_gen_sort@@Base+0xfb0>
   18bac:	ldr	r0, [r0]
   18bb0:	bl	13fd4 <fprintf@plt>
   18bb4:	ldr	r3, [pc, #996]	; 18fa0 <__flatcc_gen_sort@@Base+0xfb4>
   18bb8:	ldr	r2, [pc, #988]	; 18f9c <__flatcc_gen_sort@@Base+0xfb0>
   18bbc:	ldr	r1, [pc, #976]	; 18f94 <__flatcc_gen_sort@@Base+0xfa8>
   18bc0:	ldr	r0, [pc, #988]	; 18fa4 <__flatcc_gen_sort@@Base+0xfb8>
   18bc4:	bl	14094 <__assert_fail@plt>
   18bc8:	mov	r1, r6
   18bcc:	bl	18118 <__flatcc_gen_sort@@Base+0x12c>
   18bd0:	str	r6, [sp, #20]
   18bd4:	str	r6, [sp, #16]
   18bd8:	str	r6, [sp, #12]
   18bdc:	stm	sp, {r7, r8, r9}
   18be0:	mov	r3, r4
   18be4:	mov	r2, r4
   18be8:	ldr	r1, [pc, #952]	; 18fa8 <__flatcc_gen_sort@@Base+0xfbc>
   18bec:	ldr	r0, [r4, #204]	; 0xcc
   18bf0:	bl	13fd4 <fprintf@plt>
   18bf4:	b	18a38 <__flatcc_gen_sort@@Base+0xa4c>
   18bf8:	mov	r1, r6
   18bfc:	bl	18118 <__flatcc_gen_sort@@Base+0x12c>
   18c00:	str	r6, [sp, #24]
   18c04:	str	r6, [sp, #20]
   18c08:	ldr	r3, [r5, #104]	; 0x68
   18c0c:	mov	r2, r4
   18c10:	ldr	r1, [pc, #916]	; 18fac <__flatcc_gen_sort@@Base+0xfc0>
   18c14:	ldrh	r3, [r3, #104]	; 0x68
   18c18:	ldr	r0, [r4, #204]	; 0xcc
   18c1c:	str	r6, [sp, #12]
   18c20:	str	r3, [sp, #16]
   18c24:	stm	sp, {r7, r8, r9}
   18c28:	mov	r3, r4
   18c2c:	bl	13fd4 <fprintf@plt>
   18c30:	b	18a38 <__flatcc_gen_sort@@Base+0xa4c>
   18c34:	str	r9, [sp, #20]
   18c38:	str	r8, [sp, #16]
   18c3c:	str	r7, [sp, #12]
   18c40:	str	r4, [sp, #8]
   18c44:	ldrd	r2, [r5, #96]	; 0x60
   18c48:	ldr	r1, [pc, #864]	; 18fb0 <__flatcc_gen_sort@@Base+0xfc4>
   18c4c:	strd	r2, [sp]
   18c50:	mov	r2, r4
   18c54:	ldr	r0, [r4, #204]	; 0xcc
   18c58:	bl	13fd4 <fprintf@plt>
   18c5c:	b	18a38 <__flatcc_gen_sort@@Base+0xa4c>
   18c60:	str	r9, [sp, #20]
   18c64:	str	r8, [sp, #16]
   18c68:	str	r7, [sp, #12]
   18c6c:	str	r4, [sp, #8]
   18c70:	ldrd	r2, [r5, #96]	; 0x60
   18c74:	ldr	r1, [pc, #824]	; 18fb4 <__flatcc_gen_sort@@Base+0xfc8>
   18c78:	strd	r2, [sp]
   18c7c:	mov	r2, r4
   18c80:	b	18c54 <__flatcc_gen_sort@@Base+0xc68>
   18c84:	mov	r1, r6
   18c88:	ldr	r0, [r5, #16]
   18c8c:	bl	18118 <__flatcc_gen_sort@@Base+0x12c>
   18c90:	ldr	r3, [r5, #16]
   18c94:	ldrh	r2, [r3, #8]
   18c98:	cmp	r2, #4
   18c9c:	ldrls	pc, [pc, r2, lsl #2]
   18ca0:	b	18dd8 <__flatcc_gen_sort@@Base+0xdec>
   18ca4:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   18ca8:			; <UNDEFINED> instruction: 0x00018cb8
   18cac:	ldrdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   18cb0:	andeq	r8, r1, r8, lsr #26
   18cb4:	andeq	r8, r1, r4, lsl #27
   18cb8:	ldrh	r3, [r5, #74]	; 0x4a
   18cbc:	ldr	r1, [pc, #756]	; 18fb8 <__flatcc_gen_sort@@Base+0xfcc>
   18cc0:	ldr	r0, [r4, #204]	; 0xcc
   18cc4:	str	r3, [sp, #40]	; 0x28
   18cc8:	ldrd	r2, [r5, #88]	; 0x58
   18ccc:	str	r6, [sp, #24]
   18cd0:	str	r9, [sp, #20]
   18cd4:	strd	r2, [sp, #32]
   18cd8:	str	r8, [sp, #16]
   18cdc:	str	r7, [sp, #12]
   18ce0:	str	r4, [sp, #8]
   18ce4:	ldrd	r2, [r5, #96]	; 0x60
   18ce8:	strd	r2, [sp]
   18cec:	mov	r2, r4
   18cf0:	bl	13fd4 <fprintf@plt>
   18cf4:	b	18a38 <__flatcc_gen_sort@@Base+0xa4c>
   18cf8:	str	r6, [sp, #24]
   18cfc:	str	r9, [sp, #20]
   18d00:	str	r8, [sp, #16]
   18d04:	str	r7, [sp, #12]
   18d08:	str	r4, [sp, #8]
   18d0c:	ldrd	r2, [r5, #96]	; 0x60
   18d10:	ldr	r1, [pc, #676]	; 18fbc <__flatcc_gen_sort@@Base+0xfd0>
   18d14:	strd	r2, [sp]
   18d18:	mov	r2, r4
   18d1c:	ldr	r0, [r4, #204]	; 0xcc
   18d20:	bl	13fd4 <fprintf@plt>
   18d24:	b	18a38 <__flatcc_gen_sort@@Base+0xa4c>
   18d28:	add	sl, sp, #76	; 0x4c
   18d2c:	mov	r2, sl
   18d30:	add	r1, r5, #48	; 0x30
   18d34:	ldr	r0, [r3, #40]	; 0x28
   18d38:	bl	18884 <__flatcc_gen_sort@@Base+0x898>
   18d3c:	str	sl, [sp, #44]	; 0x2c
   18d40:	ldrh	r3, [r5, #74]	; 0x4a
   18d44:	ldr	r1, [pc, #628]	; 18fc0 <__flatcc_gen_sort@@Base+0xfd4>
   18d48:	ldr	r0, [r4, #204]	; 0xcc
   18d4c:	str	r3, [sp, #40]	; 0x28
   18d50:	ldrd	r2, [r5, #88]	; 0x58
   18d54:	str	r6, [sp, #28]
   18d58:	str	r6, [sp, #24]
   18d5c:	strd	r2, [sp, #32]
   18d60:	str	r9, [sp, #20]
   18d64:	str	r8, [sp, #16]
   18d68:	str	r7, [sp, #12]
   18d6c:	str	r4, [sp, #8]
   18d70:	ldrd	r2, [r5, #96]	; 0x60
   18d74:	strd	r2, [sp]
   18d78:	mov	r2, r4
   18d7c:	bl	13fd4 <fprintf@plt>
   18d80:	b	18a38 <__flatcc_gen_sort@@Base+0xa4c>
   18d84:	str	r6, [sp, #24]
   18d88:	str	r9, [sp, #20]
   18d8c:	str	r8, [sp, #16]
   18d90:	str	r7, [sp, #12]
   18d94:	str	r4, [sp, #8]
   18d98:	ldrd	r2, [r5, #96]	; 0x60
   18d9c:	ldr	r1, [pc, #544]	; 18fc4 <__flatcc_gen_sort@@Base+0xfd8>
   18da0:	ldr	r0, [r4, #204]	; 0xcc
   18da4:	strd	r2, [sp]
   18da8:	mov	r2, r4
   18dac:	bl	13fd4 <fprintf@plt>
   18db0:	mov	r3, #0
   18db4:	str	r3, [sp, #4]
   18db8:	ldr	r3, [r5, #16]
   18dbc:	mov	r2, r8
   18dc0:	str	r3, [sp]
   18dc4:	mov	r1, r7
   18dc8:	mov	r3, r9
   18dcc:	mov	r0, r4
   18dd0:	bl	18128 <__flatcc_gen_sort@@Base+0x13c>
   18dd4:	b	18a38 <__flatcc_gen_sort@@Base+0xa4c>
   18dd8:	ldr	r0, [pc, #428]	; 18f8c <__flatcc_gen_sort@@Base+0xfa0>
   18ddc:	ldr	r3, [pc, #484]	; 18fc8 <__flatcc_gen_sort@@Base+0xfdc>
   18de0:	ldr	r2, [pc, #428]	; 18f94 <__flatcc_gen_sort@@Base+0xfa8>
   18de4:	str	r3, [sp]
   18de8:	ldr	r1, [pc, #424]	; 18f98 <__flatcc_gen_sort@@Base+0xfac>
   18dec:	mov	r3, #1472	; 0x5c0
   18df0:	ldr	r0, [r0]
   18df4:	bl	13fd4 <fprintf@plt>
   18df8:	ldr	r3, [pc, #416]	; 18fa0 <__flatcc_gen_sort@@Base+0xfb4>
   18dfc:	mov	r2, #1472	; 0x5c0
   18e00:	b	18bbc <__flatcc_gen_sort@@Base+0xbd0>
   18e04:	mov	r1, r6
   18e08:	ldr	r0, [r5, #16]
   18e0c:	bl	18118 <__flatcc_gen_sort@@Base+0x12c>
   18e10:	ldr	r3, [r5, #16]
   18e14:	ldrh	r2, [r3, #8]
   18e18:	cmp	r2, #4
   18e1c:	ldrls	pc, [pc, r2, lsl #2]
   18e20:	b	18f24 <__flatcc_gen_sort@@Base+0xf38>
   18e24:	andeq	r8, r1, r4, lsl #29
   18e28:	andeq	r8, r1, r8, lsr lr
   18e2c:	andeq	r8, r1, r4, lsr #30
   18e30:	andeq	r8, r1, r4, asr #29
   18e34:	strdeq	r8, [r1], -r0
   18e38:	ldrh	r3, [r3, #10]
   18e3c:	tst	r3, #8
   18e40:	beq	18e50 <__flatcc_gen_sort@@Base+0xe64>
   18e44:	ldr	r1, [r4, #204]	; 0xcc
   18e48:	ldr	r0, [pc, #380]	; 18fcc <__flatcc_gen_sort@@Base+0xfe0>
   18e4c:	bl	14070 <fputs@plt>
   18e50:	str	r6, [sp, #28]
   18e54:	str	r6, [sp, #24]
   18e58:	str	r9, [sp, #20]
   18e5c:	str	r8, [sp, #16]
   18e60:	str	r7, [sp, #12]
   18e64:	str	r4, [sp, #8]
   18e68:	ldrd	r2, [r5, #96]	; 0x60
   18e6c:	ldr	r1, [pc, #348]	; 18fd0 <__flatcc_gen_sort@@Base+0xfe4>
   18e70:	strd	r2, [sp]
   18e74:	mov	r2, r4
   18e78:	ldr	r0, [r4, #204]	; 0xcc
   18e7c:	bl	13fd4 <fprintf@plt>
   18e80:	b	18a38 <__flatcc_gen_sort@@Base+0xa4c>
   18e84:	ldrh	r3, [r3, #10]
   18e88:	tst	r3, #8
   18e8c:	beq	18e9c <__flatcc_gen_sort@@Base+0xeb0>
   18e90:	ldr	r1, [r4, #204]	; 0xcc
   18e94:	ldr	r0, [pc, #304]	; 18fcc <__flatcc_gen_sort@@Base+0xfe0>
   18e98:	bl	14070 <fputs@plt>
   18e9c:	str	r6, [sp, #24]
   18ea0:	str	r9, [sp, #20]
   18ea4:	str	r8, [sp, #16]
   18ea8:	str	r7, [sp, #12]
   18eac:	str	r4, [sp, #8]
   18eb0:	ldrd	r2, [r5, #96]	; 0x60
   18eb4:	ldr	r1, [pc, #280]	; 18fd4 <__flatcc_gen_sort@@Base+0xfe8>
   18eb8:	strd	r2, [sp]
   18ebc:	mov	r2, r4
   18ec0:	b	18d1c <__flatcc_gen_sort@@Base+0xd30>
   18ec4:	str	r6, [sp, #28]
   18ec8:	str	r6, [sp, #24]
   18ecc:	str	r9, [sp, #20]
   18ed0:	str	r8, [sp, #16]
   18ed4:	str	r7, [sp, #12]
   18ed8:	str	r4, [sp, #8]
   18edc:	ldrd	r2, [r5, #96]	; 0x60
   18ee0:	ldr	r1, [pc, #240]	; 18fd8 <__flatcc_gen_sort@@Base+0xfec>
   18ee4:	strd	r2, [sp]
   18ee8:	mov	r2, r4
   18eec:	b	18e78 <__flatcc_gen_sort@@Base+0xe8c>
   18ef0:	str	r6, [sp, #24]
   18ef4:	str	r9, [sp, #20]
   18ef8:	str	r8, [sp, #16]
   18efc:	str	r7, [sp, #12]
   18f00:	str	r4, [sp, #8]
   18f04:	ldrd	r2, [r5, #96]	; 0x60
   18f08:	ldr	r1, [pc, #204]	; 18fdc <__flatcc_gen_sort@@Base+0xff0>
   18f0c:	ldr	r0, [r4, #204]	; 0xcc
   18f10:	strd	r2, [sp]
   18f14:	mov	r2, r4
   18f18:	bl	13fd4 <fprintf@plt>
   18f1c:	mov	r3, #1
   18f20:	b	18db4 <__flatcc_gen_sort@@Base+0xdc8>
   18f24:	ldr	r0, [pc, #96]	; 18f8c <__flatcc_gen_sort@@Base+0xfa0>
   18f28:	ldr	r3, [pc, #176]	; 18fe0 <__flatcc_gen_sort@@Base+0xff4>
   18f2c:	ldr	r2, [pc, #96]	; 18f94 <__flatcc_gen_sort@@Base+0xfa8>
   18f30:	str	r3, [sp]
   18f34:	ldr	r1, [pc, #92]	; 18f98 <__flatcc_gen_sort@@Base+0xfac>
   18f38:	ldr	r3, [pc, #164]	; 18fe4 <__flatcc_gen_sort@@Base+0xff8>
   18f3c:	ldr	r0, [r0]
   18f40:	bl	13fd4 <fprintf@plt>
   18f44:	ldr	r3, [pc, #84]	; 18fa0 <__flatcc_gen_sort@@Base+0xfb4>
   18f48:	ldr	r2, [pc, #148]	; 18fe4 <__flatcc_gen_sort@@Base+0xff8>
   18f4c:	b	18bbc <__flatcc_gen_sort@@Base+0xbd0>
   18f50:	ldr	r0, [pc, #52]	; 18f8c <__flatcc_gen_sort@@Base+0xfa0>
   18f54:	ldr	r3, [pc, #140]	; 18fe8 <__flatcc_gen_sort@@Base+0xffc>
   18f58:	ldr	r2, [pc, #52]	; 18f94 <__flatcc_gen_sort@@Base+0xfa8>
   18f5c:	str	r3, [sp]
   18f60:	ldr	r1, [pc, #48]	; 18f98 <__flatcc_gen_sort@@Base+0xfac>
   18f64:	ldr	r3, [pc, #128]	; 18fec <__flatcc_gen_sort@@Base+0x1000>
   18f68:	ldr	r0, [r0]
   18f6c:	bl	13fd4 <fprintf@plt>
   18f70:	ldr	r3, [pc, #40]	; 18fa0 <__flatcc_gen_sort@@Base+0xfb4>
   18f74:	ldr	r2, [pc, #112]	; 18fec <__flatcc_gen_sort@@Base+0x1000>
   18f78:	b	18bbc <__flatcc_gen_sort@@Base+0xbd0>
   18f7c:	andeq	r8, r3, r0, lsl #25
   18f80:	andeq	r1, r3, r1, lsr #28
   18f84:			; <UNDEFINED> instruction: 0x00038cb6
   18f88:	strdeq	r8, [r3], -fp
   18f8c:	strheq	fp, [r5], -r0
   18f90:	ldrdeq	r8, [r3], -r9
   18f94:	andeq	r8, r3, r9, asr #22
   18f98:	andeq	r0, r3, lr, ror #20
   18f9c:	muleq	r0, r6, r5
   18fa0:	andeq	r8, r3, r8, asr sl
   18fa4:	andeq	r9, r3, sp, asr #1
   18fa8:	andeq	r8, r3, r2, lsr sp
   18fac:	andeq	r8, r3, r3, lsl #27
   18fb0:	andeq	r8, r3, r0, lsl #28
   18fb4:	andeq	r8, r3, fp, lsr #28
   18fb8:	andeq	r8, r3, sp, asr lr
   18fbc:	muleq	r3, r6, lr
   18fc0:	andeq	r8, r3, r4, asr #29
   18fc4:	andeq	r8, r3, ip, lsl #30
   18fc8:	andeq	r1, r3, lr, lsr fp
   18fcc:	andeq	r8, r3, sl, lsr pc
   18fd0:	andeq	r8, r3, fp, asr pc
   18fd4:	muleq	r3, r0, pc	; <UNPREDICTABLE>
   18fd8:	andeq	r8, r3, r5, asr #31
   18fdc:	strdeq	r8, [r3], -pc	; <UNPREDICTABLE>
   18fe0:	andeq	r1, r3, r7, lsl #23
   18fe4:	andeq	r0, r0, r3, ror #11
   18fe8:	andeq	r1, r3, r9, asr #24
   18fec:	andeq	r0, r0, r8, ror #11
   18ff0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18ff4:	sub	sp, sp, #260	; 0x104
   18ff8:	mov	r4, r0
   18ffc:	str	r2, [sp, #24]
   19000:	mov	r5, r1
   19004:	mov	r2, #220	; 0xdc
   19008:	mov	r1, #0
   1900c:	add	r0, sp, #36	; 0x24
   19010:	str	r3, [sp, #16]
   19014:	ldr	r8, [sp, #296]	; 0x128
   19018:	bl	13fec <memset@plt>
   1901c:	ldr	r3, [sp, #16]
   19020:	cmp	r3, #1
   19024:	ldreq	r3, [pc, #920]	; 193c4 <__flatcc_gen_sort@@Base+0x13d8>
   19028:	streq	r3, [sp, #20]
   1902c:	beq	19048 <__flatcc_gen_sort@@Base+0x105c>
   19030:	ldr	r1, [sp, #16]
   19034:	ldr	r3, [pc, #908]	; 193c8 <__flatcc_gen_sort@@Base+0x13dc>
   19038:	ldr	r2, [pc, #908]	; 193cc <__flatcc_gen_sort@@Base+0x13e0>
   1903c:	cmp	r1, #2
   19040:	movne	r2, r3
   19044:	str	r2, [sp, #20]
   19048:	mov	r7, #0
   1904c:	ldr	r6, [r5]
   19050:	mov	r5, r7
   19054:	add	r3, r4, #204	; 0xcc
   19058:	str	r3, [sp, #28]
   1905c:	cmp	r6, #0
   19060:	bne	19088 <__flatcc_gen_sort@@Base+0x109c>
   19064:	ldr	r3, [sp, #24]
   19068:	cmp	r3, #0
   1906c:	ble	1907c <__flatcc_gen_sort@@Base+0x1090>
   19070:	ldr	r1, [r4, #204]	; 0xcc
   19074:	ldr	r0, [pc, #852]	; 193d0 <__flatcc_gen_sort@@Base+0x13e4>
   19078:	bl	14070 <fputs@plt>
   1907c:	mov	r0, r5
   19080:	add	sp, sp, #260	; 0x104
   19084:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19088:	ldr	r3, [r6, #4]
   1908c:	cmp	r5, #0
   19090:	ldr	sl, [r3, #4]
   19094:	ldr	fp, [r3]
   19098:	ble	190b0 <__flatcc_gen_sort@@Base+0x10c4>
   1909c:	tst	r5, #3
   190a0:	ldr	r1, [r4, #204]	; 0xcc
   190a4:	ldreq	r0, [pc, #804]	; 193d0 <__flatcc_gen_sort@@Base+0x13e4>
   190a8:	ldrne	r0, [pc, #804]	; 193d4 <__flatcc_gen_sort@@Base+0x13e8>
   190ac:	bl	14070 <fputs@plt>
   190b0:	ldrh	r3, [r6, #24]
   190b4:	cmp	r3, #8
   190b8:	beq	192b8 <__flatcc_gen_sort@@Base+0x12cc>
   190bc:	cmp	r3, #14
   190c0:	bne	19390 <__flatcc_gen_sort@@Base+0x13a4>
   190c4:	add	r1, sp, #36	; 0x24
   190c8:	ldr	r0, [r6, #16]
   190cc:	bl	18118 <__flatcc_gen_sort@@Base+0x12c>
   190d0:	ldr	r3, [r6, #16]
   190d4:	ldrh	r3, [r3, #8]
   190d8:	cmp	r3, #1
   190dc:	ldrh	r3, [r6, #72]	; 0x48
   190e0:	bne	191c8 <__flatcc_gen_sort@@Base+0x11dc>
   190e4:	tst	r3, #4
   190e8:	beq	1911c <__flatcc_gen_sort@@Base+0x1130>
   190ec:	mov	r3, r7
   190f0:	mov	r2, r7
   190f4:	ldr	r1, [pc, #732]	; 193d8 <__flatcc_gen_sort@@Base+0x13ec>
   190f8:	ldr	r0, [r4, #204]	; 0xcc
   190fc:	bl	13fd4 <fprintf@plt>
   19100:	ldr	r3, [r6, #16]
   19104:	add	r7, r7, #1
   19108:	ldr	r0, [r3, #20]
   1910c:	bl	18314 <__flatcc_gen_sort@@Base+0x328>
   19110:	add	r5, r5, r0
   19114:	ldr	r6, [r6]
   19118:	b	1905c <__flatcc_gen_sort@@Base+0x1070>
   1911c:	cmp	r8, #0
   19120:	beq	1914c <__flatcc_gen_sort@@Base+0x1160>
   19124:	str	fp, [sp, #12]
   19128:	str	sl, [sp, #8]
   1912c:	stm	sp, {sl, fp}
   19130:	ldr	r3, [sp, #20]
   19134:	add	r2, sp, #36	; 0x24
   19138:	ldr	r1, [pc, #668]	; 193dc <__flatcc_gen_sort@@Base+0x13f0>
   1913c:	ldr	r0, [r4, #204]	; 0xcc
   19140:	bl	13fd4 <fprintf@plt>
   19144:	add	r5, r5, #1
   19148:	b	19114 <__flatcc_gen_sort@@Base+0x1128>
   1914c:	stm	sp, {sl, fp}
   19150:	ldr	r3, [sp, #20]
   19154:	add	r2, sp, #36	; 0x24
   19158:	ldr	r1, [pc, #640]	; 193e0 <__flatcc_gen_sort@@Base+0x13f4>
   1915c:	ldr	r0, [r4, #204]	; 0xcc
   19160:	bl	13fd4 <fprintf@plt>
   19164:	ldr	r3, [r6, #16]
   19168:	mov	r9, r8
   1916c:	ldr	r0, [r3, #20]
   19170:	bl	18314 <__flatcc_gen_sort@@Base+0x328>
   19174:	mov	sl, r0
   19178:	cmp	sl, r9
   1917c:	add	fp, r5, r9
   19180:	bgt	1919c <__flatcc_gen_sort@@Base+0x11b0>
   19184:	ldr	r1, [r4, #204]	; 0xcc
   19188:	mov	r0, #41	; 0x29
   1918c:	cmp	sl, #0
   19190:	addge	r5, r5, sl
   19194:	bl	14034 <fputc@plt>
   19198:	b	19114 <__flatcc_gen_sort@@Base+0x1128>
   1919c:	mov	r1, r9
   191a0:	mov	r3, #0
   191a4:	ldr	r2, [sp, #24]
   191a8:	ldr	r0, [sp, #28]
   191ac:	bl	18374 <__flatcc_gen_sort@@Base+0x388>
   191b0:	mov	r2, fp
   191b4:	ldr	r1, [pc, #552]	; 193e4 <__flatcc_gen_sort@@Base+0x13f8>
   191b8:	ldr	r0, [r4, #204]	; 0xcc
   191bc:	bl	13fd4 <fprintf@plt>
   191c0:	add	r9, r9, #1
   191c4:	b	19178 <__flatcc_gen_sort@@Base+0x118c>
   191c8:	tst	r3, #4
   191cc:	add	r9, r5, #1
   191d0:	beq	191f4 <__flatcc_gen_sort@@Base+0x1208>
   191d4:	mov	r2, r7
   191d8:	add	sl, r7, #1
   191dc:	ldr	r1, [pc, #516]	; 193e8 <__flatcc_gen_sort@@Base+0x13fc>
   191e0:	ldr	r0, [r4, #204]	; 0xcc
   191e4:	bl	13fd4 <fprintf@plt>
   191e8:	mov	r5, r9
   191ec:	mov	r7, sl
   191f0:	b	19114 <__flatcc_gen_sort@@Base+0x1128>
   191f4:	ldrd	r2, [r6, #88]	; 0x58
   191f8:	cmp	r3, #0
   191fc:	cmpeq	r2, #1
   19200:	beq	19218 <__flatcc_gen_sort@@Base+0x122c>
   19204:	ldr	r3, [sp, #16]
   19208:	cmp	r3, #1
   1920c:	beq	19234 <__flatcc_gen_sort@@Base+0x1248>
   19210:	cmp	r3, #2
   19214:	beq	19280 <__flatcc_gen_sort@@Base+0x1294>
   19218:	cmp	r8, #0
   1921c:	beq	19374 <__flatcc_gen_sort@@Base+0x1388>
   19220:	stm	sp, {sl, fp}
   19224:	mov	r3, fp
   19228:	mov	r2, sl
   1922c:	ldr	r1, [pc, #440]	; 193ec <__flatcc_gen_sort@@Base+0x1400>
   19230:	b	19270 <__flatcc_gen_sort@@Base+0x1284>
   19234:	cmp	r8, #0
   19238:	beq	1925c <__flatcc_gen_sort@@Base+0x1270>
   1923c:	ldr	r1, [pc, #428]	; 193f0 <__flatcc_gen_sort@@Base+0x1404>
   19240:	mov	r3, sl
   19244:	add	r2, sp, #36	; 0x24
   19248:	stmib	sp, {sl, fp}
   1924c:	str	fp, [sp]
   19250:	ldr	r0, [r4, #204]	; 0xcc
   19254:	bl	13fd4 <fprintf@plt>
   19258:	b	19278 <__flatcc_gen_sort@@Base+0x128c>
   1925c:	ldr	r1, [pc, #400]	; 193f4 <__flatcc_gen_sort@@Base+0x1408>
   19260:	mov	r3, sl
   19264:	add	r2, sp, #36	; 0x24
   19268:	str	r5, [sp, #4]
   1926c:	str	fp, [sp]
   19270:	ldr	r0, [r4, #204]	; 0xcc
   19274:	bl	13fd4 <fprintf@plt>
   19278:	mov	r5, r9
   1927c:	b	19114 <__flatcc_gen_sort@@Base+0x1128>
   19280:	cmp	r8, #0
   19284:	beq	192a0 <__flatcc_gen_sort@@Base+0x12b4>
   19288:	stmib	sp, {sl, fp}
   1928c:	str	fp, [sp]
   19290:	mov	r3, sl
   19294:	add	r2, sp, #36	; 0x24
   19298:	ldr	r1, [pc, #344]	; 193f8 <__flatcc_gen_sort@@Base+0x140c>
   1929c:	b	19250 <__flatcc_gen_sort@@Base+0x1264>
   192a0:	str	r5, [sp, #4]
   192a4:	str	fp, [sp]
   192a8:	mov	r3, sl
   192ac:	add	r2, sp, #36	; 0x24
   192b0:	ldr	r1, [pc, #324]	; 193fc <__flatcc_gen_sort@@Base+0x1410>
   192b4:	b	19270 <__flatcc_gen_sort@@Base+0x1284>
   192b8:	ldr	r0, [r6, #16]
   192bc:	bl	18688 <__flatcc_gen_sort@@Base+0x69c>
   192c0:	ldrh	r3, [r6, #72]	; 0x48
   192c4:	add	r9, r5, #1
   192c8:	tst	r3, #4
   192cc:	bne	191d4 <__flatcc_gen_sort@@Base+0x11e8>
   192d0:	ldrd	r2, [r6, #88]	; 0x58
   192d4:	cmp	r3, #0
   192d8:	cmpeq	r2, #1
   192dc:	beq	19218 <__flatcc_gen_sort@@Base+0x122c>
   192e0:	ldr	r3, [sp, #16]
   192e4:	cmp	r3, #1
   192e8:	beq	19318 <__flatcc_gen_sort@@Base+0x132c>
   192ec:	cmp	r3, #2
   192f0:	bne	19218 <__flatcc_gen_sort@@Base+0x122c>
   192f4:	cmp	r8, #0
   192f8:	beq	1935c <__flatcc_gen_sort@@Base+0x1370>
   192fc:	str	fp, [sp, #12]
   19300:	str	sl, [sp, #8]
   19304:	stm	sp, {sl, fp}
   19308:	mov	r3, r0
   1930c:	mov	r2, r4
   19310:	ldr	r1, [pc, #232]	; 19400 <__flatcc_gen_sort@@Base+0x1414>
   19314:	b	19338 <__flatcc_gen_sort@@Base+0x134c>
   19318:	cmp	r8, #0
   1931c:	beq	19344 <__flatcc_gen_sort@@Base+0x1358>
   19320:	ldr	r1, [pc, #220]	; 19404 <__flatcc_gen_sort@@Base+0x1418>
   19324:	mov	r3, r0
   19328:	mov	r2, r4
   1932c:	str	fp, [sp, #12]
   19330:	str	sl, [sp, #8]
   19334:	stm	sp, {sl, fp}
   19338:	ldr	r0, [r4, #204]	; 0xcc
   1933c:	bl	13fd4 <fprintf@plt>
   19340:	b	19278 <__flatcc_gen_sort@@Base+0x128c>
   19344:	str	r5, [sp, #8]
   19348:	stm	sp, {sl, fp}
   1934c:	mov	r3, r0
   19350:	mov	r2, r4
   19354:	ldr	r1, [pc, #172]	; 19408 <__flatcc_gen_sort@@Base+0x141c>
   19358:	b	19250 <__flatcc_gen_sort@@Base+0x1264>
   1935c:	str	r5, [sp, #8]
   19360:	stm	sp, {sl, fp}
   19364:	mov	r3, r0
   19368:	mov	r2, r4
   1936c:	ldr	r1, [pc, #152]	; 1940c <__flatcc_gen_sort@@Base+0x1420>
   19370:	b	19250 <__flatcc_gen_sort@@Base+0x1264>
   19374:	str	r5, [sp]
   19378:	mov	r3, fp
   1937c:	mov	r2, sl
   19380:	ldr	r1, [pc, #136]	; 19410 <__flatcc_gen_sort@@Base+0x1424>
   19384:	ldr	r0, [r4, #204]	; 0xcc
   19388:	bl	13fd4 <fprintf@plt>
   1938c:	b	19278 <__flatcc_gen_sort@@Base+0x128c>
   19390:	ldr	r0, [pc, #124]	; 19414 <__flatcc_gen_sort@@Base+0x1428>
   19394:	ldr	r3, [pc, #124]	; 19418 <__flatcc_gen_sort@@Base+0x142c>
   19398:	ldr	r2, [pc, #124]	; 1941c <__flatcc_gen_sort@@Base+0x1430>
   1939c:	str	r3, [sp]
   193a0:	ldr	r1, [pc, #120]	; 19420 <__flatcc_gen_sort@@Base+0x1434>
   193a4:	ldr	r3, [pc, #120]	; 19424 <__flatcc_gen_sort@@Base+0x1438>
   193a8:	ldr	r0, [r0]
   193ac:	bl	13fd4 <fprintf@plt>
   193b0:	ldr	r3, [pc, #112]	; 19428 <__flatcc_gen_sort@@Base+0x143c>
   193b4:	ldr	r2, [pc, #104]	; 19424 <__flatcc_gen_sort@@Base+0x1438>
   193b8:	ldr	r1, [pc, #92]	; 1941c <__flatcc_gen_sort@@Base+0x1430>
   193bc:	ldr	r0, [pc, #104]	; 1942c <__flatcc_gen_sort@@Base+0x1440>
   193c0:	bl	14094 <__assert_fail@plt>
   193c4:	andeq	r9, r3, fp, lsr r0
   193c8:	andeq	r1, r3, r1, lsr #28
   193cc:	andeq	r9, r3, r4, lsr r0
   193d0:	andeq	r9, r3, r4, asr #32
   193d4:	andeq	r9, r3, r9, asr #32
   193d8:	andeq	r9, r3, ip, asr #32
   193dc:	andeq	r9, r3, r5, lsl #1
   193e0:	andeq	r9, r3, r4, lsr #1
   193e4:	andeq	r9, r3, ip, ror #1
   193e8:	strheq	r9, [r3], -r9	; <UNPREDICTABLE>
   193ec:	andeq	r9, r3, pc, asr #1
   193f0:	strdeq	r9, [r3], -r2
   193f4:	andeq	r9, r3, r9, lsl r1
   193f8:	andeq	r9, r3, ip, lsr r1
   193fc:	andeq	r9, r3, r1, ror #2
   19400:	andeq	r9, r3, sl, lsr r1
   19404:	strdeq	r9, [r3], -r0
   19408:	andeq	r9, r3, r7, lsl r1
   1940c:	andeq	r9, r3, pc, asr r1
   19410:	andeq	r9, r3, r2, ror #1
   19414:	strheq	fp, [r5], -r0
   19418:	andeq	r9, r3, r0, lsl #3
   1941c:	andeq	r8, r3, r9, asr #22
   19420:	andeq	r0, r3, lr, ror #20
   19424:	andeq	r0, r0, r1, ror #7
   19428:	andeq	r8, r3, r1, ror sl
   1942c:	andeq	r9, r3, sp, asr #1
   19430:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19434:	sub	sp, sp, #484	; 0x1e4
   19438:	mov	r4, r0
   1943c:	add	fp, sp, #260	; 0x104
   19440:	mov	r2, #220	; 0xdc
   19444:	mov	r1, #0
   19448:	mov	r0, fp
   1944c:	bl	13fec <memset@plt>
   19450:	ldr	r3, [r4, #208]	; 0xd0
   19454:	ldr	r6, [pc, #2192]	; 19cec <__flatcc_gen_sort@@Base+0x1d00>
   19458:	mov	r7, #1
   1945c:	ldr	r5, [r3, #40]	; 0x28
   19460:	mov	r3, #0
   19464:	cmp	r5, #0
   19468:	bne	19528 <__flatcc_gen_sort@@Base+0x153c>
   1946c:	cmp	r3, #0
   19470:	beq	19480 <__flatcc_gen_sort@@Base+0x1494>
   19474:	ldr	r1, [r4, #204]	; 0xcc
   19478:	mov	r0, #10
   1947c:	bl	14034 <fputc@plt>
   19480:	ldr	r3, [r4, #208]	; 0xd0
   19484:	ldr	r9, [pc, #2148]	; 19cf0 <__flatcc_gen_sort@@Base+0x1d04>
   19488:	add	sl, r4, #204	; 0xcc
   1948c:	ldr	r6, [r3, #40]	; 0x28
   19490:	mov	r3, #0
   19494:	str	r3, [sp, #32]
   19498:	cmp	r6, #0
   1949c:	bne	19564 <__flatcc_gen_sort@@Base+0x1578>
   194a0:	ldr	r3, [r4, #208]	; 0xd0
   194a4:	ldr	r6, [r3, #40]	; 0x28
   194a8:	cmp	r6, #0
   194ac:	bne	19684 <__flatcc_gen_sort@@Base+0x1698>
   194b0:	ldr	r3, [sp, #32]
   194b4:	cmp	r3, #0
   194b8:	beq	194c8 <__flatcc_gen_sort@@Base+0x14dc>
   194bc:	ldr	r1, [r4, #204]	; 0xcc
   194c0:	mov	r0, #10
   194c4:	bl	14034 <fputc@plt>
   194c8:	ldr	r3, [r4, #208]	; 0xd0
   194cc:	ldr	r8, [pc, #2080]	; 19cf4 <__flatcc_gen_sort@@Base+0x1d08>
   194d0:	ldr	r9, [pc, #2080]	; 19cf8 <__flatcc_gen_sort@@Base+0x1d0c>
   194d4:	ldr	sl, [pc, #2080]	; 19cfc <__flatcc_gen_sort@@Base+0x1d10>
   194d8:	ldr	r7, [r3, #40]	; 0x28
   194dc:	mov	r3, #0
   194e0:	cmp	r7, #0
   194e4:	bne	199e0 <__flatcc_gen_sort@@Base+0x19f4>
   194e8:	cmp	r3, #0
   194ec:	beq	194fc <__flatcc_gen_sort@@Base+0x1510>
   194f0:	ldr	r1, [r4, #204]	; 0xcc
   194f4:	mov	r0, #10
   194f8:	bl	14034 <fputc@plt>
   194fc:	ldr	r3, [sp, #32]
   19500:	cmp	r3, #0
   19504:	beq	1951c <__flatcc_gen_sort@@Base+0x1530>
   19508:	ldr	r3, [r4, #208]	; 0xd0
   1950c:	ldr	sl, [pc, #2028]	; 19d00 <__flatcc_gen_sort@@Base+0x1d14>
   19510:	ldr	r5, [r3, #40]	; 0x28
   19514:	cmp	r5, #0
   19518:	bne	19b28 <__flatcc_gen_sort@@Base+0x1b3c>
   1951c:	mov	r0, #0
   19520:	add	sp, sp, #484	; 0x1e4
   19524:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19528:	ldrh	r2, [r5, #8]
   1952c:	cmp	r2, #4
   19530:	bne	1955c <__flatcc_gen_sort@@Base+0x1570>
   19534:	mov	r1, fp
   19538:	mov	r0, r5
   1953c:	bl	18118 <__flatcc_gen_sort@@Base+0x12c>
   19540:	mov	r3, fp
   19544:	stm	sp, {r4, fp}
   19548:	mov	r2, r4
   1954c:	mov	r1, r6
   19550:	ldr	r0, [r4, #204]	; 0xcc
   19554:	bl	13fd4 <fprintf@plt>
   19558:	mov	r3, r7
   1955c:	ldr	r5, [r5]
   19560:	b	19464 <__flatcc_gen_sort@@Base+0x1478>
   19564:	ldrh	r7, [r6, #8]
   19568:	cmp	r7, #0
   1956c:	bne	19610 <__flatcc_gen_sort@@Base+0x1624>
   19570:	mov	r2, #220	; 0xdc
   19574:	mov	r1, r7
   19578:	mov	r0, fp
   1957c:	bl	13fec <memset@plt>
   19580:	ldr	r5, [r6, #20]
   19584:	cmp	r5, #0
   19588:	bne	19618 <__flatcc_gen_sort@@Base+0x162c>
   1958c:	mov	r1, fp
   19590:	mov	r0, r6
   19594:	bl	18118 <__flatcc_gen_sort@@Base+0x12c>
   19598:	mov	r3, fp
   1959c:	mov	r2, r4
   195a0:	ldr	r1, [pc, #1884]	; 19d04 <__flatcc_gen_sort@@Base+0x1d18>
   195a4:	ldr	r0, [r4, #204]	; 0xcc
   195a8:	bl	13fd4 <fprintf@plt>
   195ac:	ldr	r8, [r6, #20]
   195b0:	cmp	r8, #0
   195b4:	bne	1962c <__flatcc_gen_sort@@Base+0x1640>
   195b8:	cmp	r5, #0
   195bc:	ldr	r1, [r4, #204]	; 0xcc
   195c0:	ldrne	r0, [pc, #1856]	; 19d08 <__flatcc_gen_sort@@Base+0x1d1c>
   195c4:	ldreq	r0, [pc, #1856]	; 19d0c <__flatcc_gen_sort@@Base+0x1d20>
   195c8:	bl	14070 <fputs@plt>
   195cc:	mov	r2, #220	; 0xdc
   195d0:	mov	r1, #0
   195d4:	mov	r0, fp
   195d8:	bl	13fec <memset@plt>
   195dc:	mov	r1, fp
   195e0:	mov	r0, r6
   195e4:	bl	18118 <__flatcc_gen_sort@@Base+0x12c>
   195e8:	ldrd	r2, [r6, #96]	; 0x60
   195ec:	ldr	r1, [pc, #1820]	; 19d10 <__flatcc_gen_sort@@Base+0x1d24>
   195f0:	str	fp, [sp]
   195f4:	strd	r2, [sp, #8]
   195f8:	ldr	r0, [r4, #204]	; 0xcc
   195fc:	mov	r3, r4
   19600:	mov	r2, r4
   19604:	bl	13fd4 <fprintf@plt>
   19608:	mov	r3, #1
   1960c:	str	r3, [sp, #32]
   19610:	ldr	r6, [r6]
   19614:	b	19498 <__flatcc_gen_sort@@Base+0x14ac>
   19618:	ldrh	r3, [r5, #72]	; 0x48
   1961c:	ldr	r5, [r5]
   19620:	tst	r3, #4
   19624:	addeq	r7, r7, #1
   19628:	b	19584 <__flatcc_gen_sort@@Base+0x1598>
   1962c:	ldrh	r2, [r8, #72]	; 0x48
   19630:	ands	r3, r2, #4
   19634:	bne	1966c <__flatcc_gen_sort@@Base+0x1680>
   19638:	tst	r2, #256	; 0x100
   1963c:	beq	1966c <__flatcc_gen_sort@@Base+0x1680>
   19640:	cmp	r5, #0
   19644:	beq	19674 <__flatcc_gen_sort@@Base+0x1688>
   19648:	mov	r2, r7
   1964c:	mov	r1, r5
   19650:	mov	r0, sl
   19654:	bl	18374 <__flatcc_gen_sort@@Base+0x388>
   19658:	ldr	r2, [r8, #96]	; 0x60
   1965c:	mov	r1, r9
   19660:	ldr	r0, [r4, #204]	; 0xcc
   19664:	bl	13fd4 <fprintf@plt>
   19668:	add	r5, r5, #1
   1966c:	ldr	r8, [r8]
   19670:	b	195b0 <__flatcc_gen_sort@@Base+0x15c4>
   19674:	ldr	r1, [r4, #204]	; 0xcc
   19678:	mov	r0, #32
   1967c:	bl	14034 <fputc@plt>
   19680:	b	19658 <__flatcc_gen_sort@@Base+0x166c>
   19684:	ldrh	sl, [r6, #8]
   19688:	cmp	sl, #0
   1968c:	bne	19734 <__flatcc_gen_sort@@Base+0x1748>
   19690:	add	r7, sp, #40	; 0x28
   19694:	mov	r2, #220	; 0xdc
   19698:	mov	r1, sl
   1969c:	mov	r0, r7
   196a0:	bl	13fec <memset@plt>
   196a4:	mov	r1, r7
   196a8:	mov	r0, r6
   196ac:	bl	18118 <__flatcc_gen_sort@@Base+0x12c>
   196b0:	ldr	r9, [r6, #20]
   196b4:	cmp	r9, #0
   196b8:	bne	1973c <__flatcc_gen_sort@@Base+0x1750>
   196bc:	mov	r8, r4
   196c0:	mov	r2, r7
   196c4:	ldr	r1, [pc, #1608]	; 19d14 <__flatcc_gen_sort@@Base+0x1d28>
   196c8:	ldr	r0, [r8, #204]!	; 0xcc
   196cc:	bl	13fd4 <fprintf@plt>
   196d0:	mov	r2, #220	; 0xdc
   196d4:	mov	r1, r9
   196d8:	mov	r0, fp
   196dc:	bl	13fec <memset@plt>
   196e0:	ldr	r5, [r6, #20]
   196e4:	cmp	r5, #0
   196e8:	mov	r1, r9
   196ec:	bne	19750 <__flatcc_gen_sort@@Base+0x1764>
   196f0:	mov	r9, r4
   196f4:	mov	r2, r7
   196f8:	ldr	r1, [pc, #1560]	; 19d18 <__flatcc_gen_sort@@Base+0x1d2c>
   196fc:	ldr	r0, [r9, #204]!	; 0xcc
   19700:	bl	13fd4 <fprintf@plt>
   19704:	ldr	r8, [r6, #20]
   19708:	cmp	r8, #0
   1970c:	bne	199a4 <__flatcc_gen_sort@@Base+0x19b8>
   19710:	ldr	r1, [r4, #204]	; 0xcc
   19714:	mov	r0, #10
   19718:	bl	14034 <fputc@plt>
   1971c:	stm	sp, {r4, r7}
   19720:	mov	r3, r7
   19724:	mov	r2, r7
   19728:	ldr	r1, [pc, #1516]	; 19d1c <__flatcc_gen_sort@@Base+0x1d30>
   1972c:	ldr	r0, [r4, #204]	; 0xcc
   19730:	bl	13fd4 <fprintf@plt>
   19734:	ldr	r6, [r6]
   19738:	b	194a8 <__flatcc_gen_sort@@Base+0x14bc>
   1973c:	ldrh	r3, [r9, #72]	; 0x48
   19740:	ldr	r9, [r9]
   19744:	tst	r3, #4
   19748:	addeq	sl, sl, #1
   1974c:	b	196b4 <__flatcc_gen_sort@@Base+0x16c8>
   19750:	ldrh	r3, [r5, #72]	; 0x48
   19754:	tst	r3, #4
   19758:	movne	r9, r1
   1975c:	bne	19928 <__flatcc_gen_sort@@Base+0x193c>
   19760:	mov	r3, #1
   19764:	mov	r2, sl
   19768:	mov	r0, r8
   1976c:	add	r9, r1, #1
   19770:	bl	18374 <__flatcc_gen_sort@@Base+0x388>
   19774:	ldrh	r3, [r5, #24]
   19778:	sub	r3, r3, #7
   1977c:	cmp	r3, #8
   19780:	ldrls	pc, [pc, r3, lsl #2]
   19784:	b	19978 <__flatcc_gen_sort@@Base+0x198c>
   19788:	andeq	r9, r1, r0, lsr r9
   1978c:	strdeq	r9, [r1], -r4
   19790:	andeq	r9, r1, r4, ror #18
   19794:	andeq	r9, r1, r0, asr r9
   19798:	andeq	r9, r1, r8, ror r9
   1979c:	andeq	r9, r1, r8, ror r9
   197a0:	andeq	r9, r1, r8, ror r9
   197a4:	andeq	r9, r1, ip, lsr #15
   197a8:	andeq	r9, r1, ip, ror #16
   197ac:	mov	r1, fp
   197b0:	ldr	r0, [r5, #16]
   197b4:	bl	18118 <__flatcc_gen_sort@@Base+0x12c>
   197b8:	ldr	r3, [r5, #16]
   197bc:	ldrh	r3, [r3, #8]
   197c0:	cmp	r3, #4
   197c4:	ldrls	pc, [pc, r3, lsl #2]
   197c8:	b	19838 <__flatcc_gen_sort@@Base+0x184c>
   197cc:	andeq	r9, r1, r0, lsl r8
   197d0:	andeq	r9, r1, r0, ror #15
   197d4:	andeq	r9, r1, r8, lsr r8
   197d8:	strdeq	r9, [r1], -ip
   197dc:	andeq	r9, r1, r4, lsr #16
   197e0:	ldrd	r2, [r5, #96]	; 0x60
   197e4:	ldr	r1, [pc, #1332]	; 19d20 <__flatcc_gen_sort@@Base+0x1d34>
   197e8:	strd	r2, [sp]
   197ec:	mov	r2, fp
   197f0:	ldr	r0, [r4, #204]	; 0xcc
   197f4:	bl	13fd4 <fprintf@plt>
   197f8:	b	19928 <__flatcc_gen_sort@@Base+0x193c>
   197fc:	ldrd	r2, [r5, #96]	; 0x60
   19800:	ldr	r1, [pc, #1308]	; 19d24 <__flatcc_gen_sort@@Base+0x1d38>
   19804:	strd	r2, [sp]
   19808:	mov	r2, fp
   1980c:	b	197f0 <__flatcc_gen_sort@@Base+0x1804>
   19810:	ldrd	r2, [r5, #96]	; 0x60
   19814:	ldr	r1, [pc, #1292]	; 19d28 <__flatcc_gen_sort@@Base+0x1d3c>
   19818:	strd	r2, [sp]
   1981c:	mov	r2, fp
   19820:	b	197f0 <__flatcc_gen_sort@@Base+0x1804>
   19824:	ldrd	r2, [r5, #96]	; 0x60
   19828:	ldr	r1, [pc, #1276]	; 19d2c <__flatcc_gen_sort@@Base+0x1d40>
   1982c:	strd	r2, [sp]
   19830:	mov	r2, fp
   19834:	b	197f0 <__flatcc_gen_sort@@Base+0x1804>
   19838:	ldr	r0, [pc, #1264]	; 19d30 <__flatcc_gen_sort@@Base+0x1d44>
   1983c:	ldr	r3, [pc, #1264]	; 19d34 <__flatcc_gen_sort@@Base+0x1d48>
   19840:	ldr	r2, [pc, #1264]	; 19d38 <__flatcc_gen_sort@@Base+0x1d4c>
   19844:	str	r3, [sp]
   19848:	ldr	r1, [pc, #1260]	; 19d3c <__flatcc_gen_sort@@Base+0x1d50>
   1984c:	ldr	r3, [pc, #1260]	; 19d40 <__flatcc_gen_sort@@Base+0x1d54>
   19850:	ldr	r0, [r0]
   19854:	bl	13fd4 <fprintf@plt>
   19858:	ldr	r3, [pc, #1252]	; 19d44 <__flatcc_gen_sort@@Base+0x1d58>
   1985c:	ldr	r2, [pc, #1244]	; 19d40 <__flatcc_gen_sort@@Base+0x1d54>
   19860:	ldr	r1, [pc, #1232]	; 19d38 <__flatcc_gen_sort@@Base+0x1d4c>
   19864:	ldr	r0, [pc, #1244]	; 19d48 <__flatcc_gen_sort@@Base+0x1d5c>
   19868:	bl	14094 <__assert_fail@plt>
   1986c:	mov	r1, fp
   19870:	ldr	r0, [r5, #16]
   19874:	bl	18118 <__flatcc_gen_sort@@Base+0x12c>
   19878:	ldr	r3, [r5, #16]
   1987c:	ldrh	r3, [r3, #8]
   19880:	cmp	r3, #4
   19884:	ldrls	pc, [pc, r3, lsl #2]
   19888:	b	198c8 <__flatcc_gen_sort@@Base+0x18dc>
   1988c:	andeq	r9, r1, r0, lsr #17
   19890:	andeq	r9, r1, r0, lsr #17
   19894:	andeq	r9, r1, r8, asr #17
   19898:	andeq	r9, r1, r0, lsr #17
   1989c:			; <UNDEFINED> instruction: 0x000198b4
   198a0:	ldrd	r2, [r5, #96]	; 0x60
   198a4:	ldr	r1, [pc, #1184]	; 19d4c <__flatcc_gen_sort@@Base+0x1d60>
   198a8:	strd	r2, [sp]
   198ac:	mov	r2, fp
   198b0:	b	197f0 <__flatcc_gen_sort@@Base+0x1804>
   198b4:	ldrd	r2, [r5, #96]	; 0x60
   198b8:	ldr	r1, [pc, #1168]	; 19d50 <__flatcc_gen_sort@@Base+0x1d64>
   198bc:	strd	r2, [sp]
   198c0:	mov	r2, fp
   198c4:	b	197f0 <__flatcc_gen_sort@@Base+0x1804>
   198c8:	ldr	r0, [pc, #1120]	; 19d30 <__flatcc_gen_sort@@Base+0x1d44>
   198cc:	ldr	r3, [pc, #1152]	; 19d54 <__flatcc_gen_sort@@Base+0x1d68>
   198d0:	ldr	r2, [pc, #1120]	; 19d38 <__flatcc_gen_sort@@Base+0x1d4c>
   198d4:	str	r3, [sp]
   198d8:	ldr	r1, [pc, #1116]	; 19d3c <__flatcc_gen_sort@@Base+0x1d50>
   198dc:	ldr	r3, [pc, #1140]	; 19d58 <__flatcc_gen_sort@@Base+0x1d6c>
   198e0:	ldr	r0, [r0]
   198e4:	bl	13fd4 <fprintf@plt>
   198e8:	ldr	r3, [pc, #1108]	; 19d44 <__flatcc_gen_sort@@Base+0x1d58>
   198ec:	ldr	r2, [pc, #1124]	; 19d58 <__flatcc_gen_sort@@Base+0x1d6c>
   198f0:	b	19860 <__flatcc_gen_sort@@Base+0x1874>
   198f4:	ldr	r0, [r5, #16]
   198f8:	ldr	r2, [pc, #1116]	; 19d5c <__flatcc_gen_sort@@Base+0x1d70>
   198fc:	cmp	r0, #5
   19900:	moveq	r2, r4
   19904:	str	r2, [sp, #36]	; 0x24
   19908:	bl	183ec <__flatcc_gen_sort@@Base+0x400>
   1990c:	ldrd	r2, [r5, #96]	; 0x60
   19910:	ldr	r1, [pc, #1096]	; 19d60 <__flatcc_gen_sort@@Base+0x1d74>
   19914:	strd	r2, [sp]
   19918:	ldr	r2, [sp, #36]	; 0x24
   1991c:	mov	r3, r0
   19920:	ldr	r0, [r4, #204]	; 0xcc
   19924:	bl	13fd4 <fprintf@plt>
   19928:	ldr	r5, [r5]
   1992c:	b	196e4 <__flatcc_gen_sort@@Base+0x16f8>
   19930:	ldr	r0, [r5, #16]
   19934:	bl	18688 <__flatcc_gen_sort@@Base+0x69c>
   19938:	ldrd	r2, [r5, #96]	; 0x60
   1993c:	ldr	r1, [pc, #1056]	; 19d64 <__flatcc_gen_sort@@Base+0x1d78>
   19940:	strd	r2, [sp]
   19944:	mov	r2, r4
   19948:	mov	r3, r0
   1994c:	b	19920 <__flatcc_gen_sort@@Base+0x1934>
   19950:	ldrd	r2, [r5, #96]	; 0x60
   19954:	ldr	r1, [pc, #1036]	; 19d68 <__flatcc_gen_sort@@Base+0x1d7c>
   19958:	strd	r2, [sp]
   1995c:	mov	r2, r4
   19960:	b	197f0 <__flatcc_gen_sort@@Base+0x1804>
   19964:	ldrd	r2, [r5, #96]	; 0x60
   19968:	ldr	r1, [pc, #1020]	; 19d6c <__flatcc_gen_sort@@Base+0x1d80>
   1996c:	strd	r2, [sp]
   19970:	mov	r2, r4
   19974:	b	197f0 <__flatcc_gen_sort@@Base+0x1804>
   19978:	ldr	r0, [pc, #944]	; 19d30 <__flatcc_gen_sort@@Base+0x1d44>
   1997c:	ldr	r3, [pc, #1004]	; 19d70 <__flatcc_gen_sort@@Base+0x1d84>
   19980:	ldr	r2, [pc, #944]	; 19d38 <__flatcc_gen_sort@@Base+0x1d4c>
   19984:	str	r3, [sp]
   19988:	ldr	r1, [pc, #940]	; 19d3c <__flatcc_gen_sort@@Base+0x1d50>
   1998c:	ldr	r3, [pc, #992]	; 19d74 <__flatcc_gen_sort@@Base+0x1d88>
   19990:	ldr	r0, [r0]
   19994:	bl	13fd4 <fprintf@plt>
   19998:	ldr	r3, [pc, #932]	; 19d44 <__flatcc_gen_sort@@Base+0x1d58>
   1999c:	ldr	r2, [pc, #976]	; 19d74 <__flatcc_gen_sort@@Base+0x1d88>
   199a0:	b	19860 <__flatcc_gen_sort@@Base+0x1874>
   199a4:	ldrh	r3, [r8, #72]	; 0x48
   199a8:	tst	r3, #4
   199ac:	bne	199d8 <__flatcc_gen_sort@@Base+0x19ec>
   199b0:	mov	r1, r5
   199b4:	mov	r3, #1
   199b8:	mov	r2, sl
   199bc:	mov	r0, r9
   199c0:	bl	18374 <__flatcc_gen_sort@@Base+0x388>
   199c4:	ldrd	r2, [r8, #96]	; 0x60
   199c8:	ldr	r1, [pc, #936]	; 19d78 <__flatcc_gen_sort@@Base+0x1d8c>
   199cc:	ldr	r0, [r4, #204]	; 0xcc
   199d0:	bl	13fd4 <fprintf@plt>
   199d4:	add	r5, r5, #1
   199d8:	ldr	r8, [r8]
   199dc:	b	19708 <__flatcc_gen_sort@@Base+0x171c>
   199e0:	ldrh	r2, [r7, #8]
   199e4:	cmp	r2, #4
   199e8:	bne	19a44 <__flatcc_gen_sort@@Base+0x1a58>
   199ec:	add	r5, sp, #40	; 0x28
   199f0:	mov	r2, #220	; 0xdc
   199f4:	mov	r1, #0
   199f8:	mov	r0, r5
   199fc:	bl	13fec <memset@plt>
   19a00:	mov	r2, #220	; 0xdc
   19a04:	mov	r1, #0
   19a08:	mov	r0, fp
   19a0c:	bl	13fec <memset@plt>
   19a10:	mov	r1, r5
   19a14:	mov	r0, r7
   19a18:	bl	18118 <__flatcc_gen_sort@@Base+0x12c>
   19a1c:	ldr	r6, [r7, #20]
   19a20:	cmp	r6, #0
   19a24:	bne	19a4c <__flatcc_gen_sort@@Base+0x1a60>
   19a28:	mov	r3, r4
   19a2c:	str	r5, [sp]
   19a30:	mov	r2, r4
   19a34:	ldr	r1, [pc, #832]	; 19d7c <__flatcc_gen_sort@@Base+0x1d90>
   19a38:	ldr	r0, [r4, #204]	; 0xcc
   19a3c:	bl	13fd4 <fprintf@plt>
   19a40:	mov	r3, #1
   19a44:	ldr	r7, [r7]
   19a48:	b	194e0 <__flatcc_gen_sort@@Base+0x14f4>
   19a4c:	ldrh	r3, [r6, #24]
   19a50:	cmp	r3, #10
   19a54:	beq	19ad0 <__flatcc_gen_sort@@Base+0x1ae4>
   19a58:	cmp	r3, #14
   19a5c:	beq	19a88 <__flatcc_gen_sort@@Base+0x1a9c>
   19a60:	cmp	r3, #0
   19a64:	bne	19afc <__flatcc_gen_sort@@Base+0x1b10>
   19a68:	str	r5, [sp, #4]
   19a6c:	str	r5, [sp]
   19a70:	mov	r3, r5
   19a74:	mov	r2, r5
   19a78:	mov	r1, sl
   19a7c:	ldr	r0, [r4, #204]	; 0xcc
   19a80:	bl	13fd4 <fprintf@plt>
   19a84:	b	19ac8 <__flatcc_gen_sort@@Base+0x1adc>
   19a88:	mov	r1, fp
   19a8c:	ldr	r0, [r6, #16]
   19a90:	bl	18118 <__flatcc_gen_sort@@Base+0x12c>
   19a94:	ldr	r2, [r6, #4]
   19a98:	mov	r1, r9
   19a9c:	ldm	r2, {r2, r3}
   19aa0:	str	r5, [sp, #16]
   19aa4:	str	r5, [sp, #12]
   19aa8:	str	r2, [sp, #24]
   19aac:	str	r3, [sp, #20]
   19ab0:	stmib	sp, {r2, fp}
   19ab4:	str	r3, [sp]
   19ab8:	mov	r2, r5
   19abc:	mov	r3, r5
   19ac0:	ldr	r0, [r4, #204]	; 0xcc
   19ac4:	bl	13fd4 <fprintf@plt>
   19ac8:	ldr	r6, [r6]
   19acc:	b	19a20 <__flatcc_gen_sort@@Base+0x1a34>
   19ad0:	ldr	r2, [r6, #4]
   19ad4:	mov	r1, r8
   19ad8:	ldm	r2, {r2, r3}
   19adc:	str	r5, [sp, #16]
   19ae0:	str	r2, [sp, #24]
   19ae4:	str	r3, [sp, #20]
   19ae8:	stmib	sp, {r2, r4, r5}
   19aec:	mov	r2, r5
   19af0:	str	r3, [sp]
   19af4:	mov	r3, r5
   19af8:	b	19ac0 <__flatcc_gen_sort@@Base+0x1ad4>
   19afc:	ldr	r0, [pc, #556]	; 19d30 <__flatcc_gen_sort@@Base+0x1d44>
   19b00:	ldr	r3, [pc, #632]	; 19d80 <__flatcc_gen_sort@@Base+0x1d94>
   19b04:	ldr	r2, [pc, #556]	; 19d38 <__flatcc_gen_sort@@Base+0x1d4c>
   19b08:	str	r3, [sp]
   19b0c:	ldr	r1, [pc, #552]	; 19d3c <__flatcc_gen_sort@@Base+0x1d50>
   19b10:	ldr	r3, [pc, #620]	; 19d84 <__flatcc_gen_sort@@Base+0x1d98>
   19b14:	ldr	r0, [r0]
   19b18:	bl	13fd4 <fprintf@plt>
   19b1c:	ldr	r3, [pc, #612]	; 19d88 <__flatcc_gen_sort@@Base+0x1d9c>
   19b20:	ldr	r2, [pc, #604]	; 19d84 <__flatcc_gen_sort@@Base+0x1d98>
   19b24:	b	19860 <__flatcc_gen_sort@@Base+0x1874>
   19b28:	ldrh	r7, [r5, #8]
   19b2c:	cmp	r7, #0
   19b30:	bne	19c04 <__flatcc_gen_sort@@Base+0x1c18>
   19b34:	mov	r1, r5
   19b38:	mov	r0, r4
   19b3c:	bl	189a0 <__flatcc_gen_sort@@Base+0x9b4>
   19b40:	ldrh	r8, [r5, #92]	; 0x5c
   19b44:	mov	r2, #220	; 0xdc
   19b48:	mov	r1, r7
   19b4c:	ands	r8, r8, #8
   19b50:	mov	r0, fp
   19b54:	moveq	r9, #1
   19b58:	movne	r9, #0
   19b5c:	bl	13fec <memset@plt>
   19b60:	mov	r1, fp
   19b64:	mov	r0, r5
   19b68:	bl	18118 <__flatcc_gen_sort@@Base+0x12c>
   19b6c:	mov	r3, fp
   19b70:	mov	r2, fp
   19b74:	ldr	r1, [pc, #528]	; 19d8c <__flatcc_gen_sort@@Base+0x1da0>
   19b78:	stm	sp, {r4, fp}
   19b7c:	ldr	r0, [r4, #204]	; 0xcc
   19b80:	bl	13fd4 <fprintf@plt>
   19b84:	mov	r2, fp
   19b88:	ldr	r1, [pc, #512]	; 19d90 <__flatcc_gen_sort@@Base+0x1da4>
   19b8c:	ldr	r0, [r4, #204]	; 0xcc
   19b90:	bl	13fd4 <fprintf@plt>
   19b94:	ldr	r6, [r5, #24]
   19b98:	cmp	r6, #0
   19b9c:	bne	19c0c <__flatcc_gen_sort@@Base+0x1c20>
   19ba0:	tst	r7, r9
   19ba4:	ldrne	r6, [r5, #24]
   19ba8:	bne	19ce0 <__flatcc_gen_sort@@Base+0x1cf4>
   19bac:	mov	r2, fp
   19bb0:	ldr	r1, [pc, #476]	; 19d94 <__flatcc_gen_sort@@Base+0x1da8>
   19bb4:	ldr	r0, [r4, #204]	; 0xcc
   19bb8:	bl	13fd4 <fprintf@plt>
   19bbc:	mov	r2, #220	; 0xdc
   19bc0:	mov	r1, #0
   19bc4:	mov	r0, fp
   19bc8:	bl	13fec <memset@plt>
   19bcc:	mov	r1, fp
   19bd0:	mov	r0, r5
   19bd4:	bl	18118 <__flatcc_gen_sort@@Base+0x12c>
   19bd8:	ldr	r1, [pc, #440]	; 19d98 <__flatcc_gen_sort@@Base+0x1dac>
   19bdc:	str	fp, [sp, #8]
   19be0:	str	fp, [sp, #4]
   19be4:	str	fp, [sp]
   19be8:	mov	r3, r4
   19bec:	mov	r2, r4
   19bf0:	ldr	r0, [r4, #204]	; 0xcc
   19bf4:	bl	13fd4 <fprintf@plt>
   19bf8:	ldr	r1, [r4, #204]	; 0xcc
   19bfc:	mov	r0, #10
   19c00:	bl	14034 <fputc@plt>
   19c04:	ldr	r5, [r5]
   19c08:	b	19514 <__flatcc_gen_sort@@Base+0x1528>
   19c0c:	ldrh	r3, [r6, #72]	; 0x48
   19c10:	tst	r3, #4
   19c14:	bne	19c68 <__flatcc_gen_sort@@Base+0x1c7c>
   19c18:	ldrh	r1, [r6, #24]
   19c1c:	ldr	r2, [r6, #4]
   19c20:	cmp	r1, #14
   19c24:	ldm	r2, {r2, r3}
   19c28:	ldrd	r0, [r6, #96]	; 0x60
   19c2c:	bne	19c70 <__flatcc_gen_sort@@Base+0x1c84>
   19c30:	ldr	ip, [r6, #16]
   19c34:	ldrh	ip, [ip, #8]
   19c38:	cmp	ip, #4
   19c3c:	bne	19c70 <__flatcc_gen_sort@@Base+0x1c84>
   19c40:	cmp	r8, #0
   19c44:	ldrne	r7, [sp, #32]
   19c48:	bne	19c70 <__flatcc_gen_sort@@Base+0x1c84>
   19c4c:	strd	r0, [sp, #8]
   19c50:	str	r2, [sp]
   19c54:	ldr	r1, [pc, #320]	; 19d9c <__flatcc_gen_sort@@Base+0x1db0>
   19c58:	mov	r2, fp
   19c5c:	ldr	r0, [r4, #204]	; 0xcc
   19c60:	bl	13fd4 <fprintf@plt>
   19c64:	ldr	r7, [sp, #32]
   19c68:	ldr	r6, [r6, #108]	; 0x6c
   19c6c:	b	19b98 <__flatcc_gen_sort@@Base+0x1bac>
   19c70:	strd	r0, [sp, #8]
   19c74:	str	r2, [sp]
   19c78:	ldr	r1, [pc, #288]	; 19da0 <__flatcc_gen_sort@@Base+0x1db4>
   19c7c:	mov	r2, fp
   19c80:	ldr	r0, [r4, #204]	; 0xcc
   19c84:	bl	13fd4 <fprintf@plt>
   19c88:	b	19c68 <__flatcc_gen_sort@@Base+0x1c7c>
   19c8c:	ldrh	r3, [r6, #72]	; 0x48
   19c90:	tst	r3, #4
   19c94:	bne	19cdc <__flatcc_gen_sort@@Base+0x1cf0>
   19c98:	ldrh	r3, [r6, #24]
   19c9c:	cmp	r3, #14
   19ca0:	bne	19cdc <__flatcc_gen_sort@@Base+0x1cf0>
   19ca4:	ldr	r3, [r6, #16]
   19ca8:	ldrh	r3, [r3, #8]
   19cac:	cmp	r3, #4
   19cb0:	bne	19cdc <__flatcc_gen_sort@@Base+0x1cf0>
   19cb4:	ldr	r1, [r6, #4]
   19cb8:	ldrd	r2, [r6, #96]	; 0x60
   19cbc:	ldr	r0, [r4, #204]	; 0xcc
   19cc0:	strd	r2, [sp, #8]
   19cc4:	ldr	r3, [r1]
   19cc8:	mov	r2, fp
   19ccc:	str	r3, [sp]
   19cd0:	ldr	r3, [r1, #4]
   19cd4:	mov	r1, sl
   19cd8:	bl	13fd4 <fprintf@plt>
   19cdc:	ldr	r6, [r6, #108]	; 0x6c
   19ce0:	cmp	r6, #0
   19ce4:	bne	19c8c <__flatcc_gen_sort@@Base+0x1ca0>
   19ce8:	b	19bac <__flatcc_gen_sort@@Base+0x1bc0>
   19cec:	muleq	r3, fp, r1
   19cf0:	andeq	r9, r3, sp, lsl r2
   19cf4:	andeq	r9, r3, r1, asr #8
   19cf8:			; <UNDEFINED> instruction: 0x000393bd
   19cfc:	andeq	r9, r3, fp, asr #9
   19d00:	andeq	r9, r3, r8, lsr #13
   19d04:	strdeq	r9, [r3], -r0
   19d08:	andeq	r9, r3, r0, lsr #4
   19d0c:	andeq	r9, r3, r1, lsr #4
   19d10:	andeq	r9, r3, r8, lsr #4
   19d14:	andeq	r9, r3, r7, asr #4
   19d18:	andeq	r9, r3, r0, ror #6
   19d1c:	andeq	r9, r3, r9, ror r3
   19d20:	andeq	r9, r3, r1, ror #4
   19d24:	andeq	r9, r3, sp, ror #4
   19d28:	andeq	r9, r3, sp, ror r2
   19d2c:	andeq	r9, r3, ip, lsl #5
   19d30:	strheq	fp, [r5], -r0
   19d34:	andeq	r9, r3, r1, lsr #5
   19d38:	andeq	r8, r3, r9, asr #22
   19d3c:	andeq	r0, r3, lr, ror #20
   19d40:	muleq	r0, r5, r4
   19d44:	muleq	r3, r1, sl
   19d48:	andeq	r9, r3, sp, asr #1
   19d4c:	andeq	r9, r3, pc, lsl r3
   19d50:	andeq	r9, r3, sp, asr #5
   19d54:	andeq	r9, r3, r6, ror #5
   19d58:	andeq	r0, r0, r5, lsr #9
   19d5c:	andeq	r1, r3, r1, lsr #28
   19d60:	andeq	r9, r3, r2, lsl r3
   19d64:	andeq	r9, r3, sp, lsl r3
   19d68:	andeq	r9, r3, r2, lsr r3
   19d6c:	andeq	r9, r3, r7, asr #6
   19d70:	andeq	r8, r3, r2, asr ip
   19d74:			; <UNDEFINED> instruction: 0x000004b9
   19d78:	andeq	r9, r3, r7, lsl r3
   19d7c:	andeq	r9, r3, sp, ror #10
   19d80:	andeq	r9, r3, r1, asr #10
   19d84:	andeq	r0, r0, r8, asr #12
   19d88:	andeq	r8, r3, r8, lsr #21
   19d8c:	andeq	r9, r3, sp, lsl #11
   19d90:	ldrdeq	r9, [r3], -r0
   19d94:	andeq	r9, r3, r0, lsr r6
   19d98:	andeq	r9, r3, r5, ror #12
   19d9c:	andeq	r9, r3, r6, ror #11
   19da0:	andeq	r9, r3, lr, lsl #12

00019da4 <__flatcc_fb_gen_common_c_builder_header@@Base>:
   19da4:	push	{r0, r1, r2, r4, r5, lr}
   19da8:	mov	r4, r0
   19dac:	add	r5, r0, #102	; 0x66
   19db0:	mov	r2, r5
   19db4:	ldr	r1, [pc, #1764]	; 1a4a0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x6fc>
   19db8:	ldr	r0, [r0, #204]	; 0xcc
   19dbc:	bl	13fd4 <fprintf@plt>
   19dc0:	mov	r2, r5
   19dc4:	ldr	r1, [pc, #1752]	; 1a4a4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x700>
   19dc8:	ldr	r0, [r4, #204]	; 0xcc
   19dcc:	bl	13fd4 <fprintf@plt>
   19dd0:	ldr	r1, [r4, #204]	; 0xcc
   19dd4:	ldr	r0, [pc, #1740]	; 1a4a8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x704>
   19dd8:	bl	14070 <fputs@plt>
   19ddc:	ldr	r1, [r4, #204]	; 0xcc
   19de0:	ldr	r0, [pc, #1732]	; 1a4ac <__flatcc_fb_gen_common_c_builder_header@@Base+0x708>
   19de4:	bl	14070 <fputs@plt>
   19de8:	ldr	r3, [r4, #212]	; 0xd4
   19dec:	ldr	r3, [r3, #140]	; 0x8c
   19df0:	cmp	r3, #0
   19df4:	beq	19e04 <__flatcc_fb_gen_common_c_builder_header@@Base+0x60>
   19df8:	ldr	r1, [r4, #204]	; 0xcc
   19dfc:	ldr	r0, [pc, #1708]	; 1a4b0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x70c>
   19e00:	bl	14070 <fputs@plt>
   19e04:	ldr	r1, [r4, #204]	; 0xcc
   19e08:	ldr	r0, [pc, #1700]	; 1a4b4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x710>
   19e0c:	bl	14070 <fputs@plt>
   19e10:	ldr	r1, [r4, #204]	; 0xcc
   19e14:	ldr	r0, [pc, #1692]	; 1a4b8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x714>
   19e18:	bl	14070 <fputs@plt>
   19e1c:	ldr	r1, [r4, #204]	; 0xcc
   19e20:	ldr	r0, [pc, #1684]	; 1a4bc <__flatcc_fb_gen_common_c_builder_header@@Base+0x718>
   19e24:	bl	14070 <fputs@plt>
   19e28:	ldr	r1, [pc, #1680]	; 1a4c0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x71c>
   19e2c:	mov	r0, r4
   19e30:	bl	13efc <strcmp@plt>
   19e34:	cmp	r0, #0
   19e38:	beq	19e9c <__flatcc_fb_gen_common_c_builder_header@@Base+0xf8>
   19e3c:	mov	r2, r4
   19e40:	ldr	r1, [pc, #1660]	; 1a4c4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x720>
   19e44:	ldr	r0, [r4, #204]	; 0xcc
   19e48:	bl	13fd4 <fprintf@plt>
   19e4c:	mov	r2, r4
   19e50:	ldr	r1, [pc, #1648]	; 1a4c8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x724>
   19e54:	ldr	r0, [r4, #204]	; 0xcc
   19e58:	bl	13fd4 <fprintf@plt>
   19e5c:	mov	r2, r4
   19e60:	ldr	r1, [pc, #1636]	; 1a4cc <__flatcc_fb_gen_common_c_builder_header@@Base+0x728>
   19e64:	ldr	r0, [r4, #204]	; 0xcc
   19e68:	bl	13fd4 <fprintf@plt>
   19e6c:	mov	r2, r4
   19e70:	ldr	r1, [pc, #1624]	; 1a4d0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x72c>
   19e74:	ldr	r0, [r4, #204]	; 0xcc
   19e78:	bl	13fd4 <fprintf@plt>
   19e7c:	mov	r2, r4
   19e80:	ldr	r1, [pc, #1612]	; 1a4d4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x730>
   19e84:	ldr	r0, [r4, #204]	; 0xcc
   19e88:	bl	13fd4 <fprintf@plt>
   19e8c:	mov	r2, r4
   19e90:	ldr	r1, [pc, #1600]	; 1a4d8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x734>
   19e94:	ldr	r0, [r4, #204]	; 0xcc
   19e98:	bl	13fd4 <fprintf@plt>
   19e9c:	mov	r3, r4
   19ea0:	mov	r2, r4
   19ea4:	ldr	r1, [pc, #1584]	; 1a4dc <__flatcc_fb_gen_common_c_builder_header@@Base+0x738>
   19ea8:	ldr	r0, [r4, #204]	; 0xcc
   19eac:	bl	13fd4 <fprintf@plt>
   19eb0:	mov	r3, r4
   19eb4:	mov	r2, r4
   19eb8:	ldr	r1, [pc, #1568]	; 1a4e0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x73c>
   19ebc:	ldr	r0, [r4, #204]	; 0xcc
   19ec0:	bl	13fd4 <fprintf@plt>
   19ec4:	ldr	r1, [pc, #1560]	; 1a4e4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x740>
   19ec8:	mov	r0, r4
   19ecc:	bl	13efc <strcmp@plt>
   19ed0:	cmp	r0, #0
   19ed4:	beq	19ef8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x154>
   19ed8:	mov	r2, r4
   19edc:	ldr	r1, [pc, #1540]	; 1a4e8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x744>
   19ee0:	ldr	r0, [r4, #204]	; 0xcc
   19ee4:	bl	13fd4 <fprintf@plt>
   19ee8:	mov	r2, r4
   19eec:	ldr	r1, [pc, #1528]	; 1a4ec <__flatcc_fb_gen_common_c_builder_header@@Base+0x748>
   19ef0:	ldr	r0, [r4, #204]	; 0xcc
   19ef4:	bl	13fd4 <fprintf@plt>
   19ef8:	ldr	r1, [r4, #204]	; 0xcc
   19efc:	mov	r0, #10
   19f00:	bl	14034 <fputc@plt>
   19f04:	mov	r2, r4
   19f08:	ldr	r1, [pc, #1504]	; 1a4f0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x74c>
   19f0c:	ldr	r0, [r4, #204]	; 0xcc
   19f10:	bl	13fd4 <fprintf@plt>
   19f14:	mov	r2, r4
   19f18:	ldr	r1, [pc, #1492]	; 1a4f4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x750>
   19f1c:	ldr	r0, [r4, #204]	; 0xcc
   19f20:	bl	13fd4 <fprintf@plt>
   19f24:	mov	r3, r4
   19f28:	mov	r2, r4
   19f2c:	ldr	r1, [pc, #1476]	; 1a4f8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x754>
   19f30:	str	r4, [sp]
   19f34:	ldr	r0, [r4, #204]	; 0xcc
   19f38:	bl	13fd4 <fprintf@plt>
   19f3c:	mov	r2, r4
   19f40:	ldr	r1, [pc, #1460]	; 1a4fc <__flatcc_fb_gen_common_c_builder_header@@Base+0x758>
   19f44:	ldr	r0, [r4, #204]	; 0xcc
   19f48:	bl	13fd4 <fprintf@plt>
   19f4c:	mov	r2, r4
   19f50:	ldr	r1, [pc, #1448]	; 1a500 <__flatcc_fb_gen_common_c_builder_header@@Base+0x75c>
   19f54:	ldr	r0, [r4, #204]	; 0xcc
   19f58:	bl	13fd4 <fprintf@plt>
   19f5c:	mov	r2, r4
   19f60:	ldr	r1, [pc, #1436]	; 1a504 <__flatcc_fb_gen_common_c_builder_header@@Base+0x760>
   19f64:	ldr	r0, [r4, #204]	; 0xcc
   19f68:	bl	13fd4 <fprintf@plt>
   19f6c:	mov	r2, r4
   19f70:	ldr	r1, [pc, #1424]	; 1a508 <__flatcc_fb_gen_common_c_builder_header@@Base+0x764>
   19f74:	ldr	r0, [r4, #204]	; 0xcc
   19f78:	bl	13fd4 <fprintf@plt>
   19f7c:	mov	r3, r4
   19f80:	mov	r2, r4
   19f84:	ldr	r1, [pc, #1408]	; 1a50c <__flatcc_fb_gen_common_c_builder_header@@Base+0x768>
   19f88:	ldr	r0, [r4, #204]	; 0xcc
   19f8c:	bl	13fd4 <fprintf@plt>
   19f90:	mov	r3, r4
   19f94:	mov	r2, r4
   19f98:	ldr	r1, [pc, #1392]	; 1a510 <__flatcc_fb_gen_common_c_builder_header@@Base+0x76c>
   19f9c:	str	r4, [sp]
   19fa0:	ldr	r0, [r4, #204]	; 0xcc
   19fa4:	bl	13fd4 <fprintf@plt>
   19fa8:	mov	r2, r4
   19fac:	ldr	r1, [pc, #1376]	; 1a514 <__flatcc_fb_gen_common_c_builder_header@@Base+0x770>
   19fb0:	ldr	r0, [r4, #204]	; 0xcc
   19fb4:	bl	13fd4 <fprintf@plt>
   19fb8:	mov	r2, r4
   19fbc:	ldr	r1, [pc, #1364]	; 1a518 <__flatcc_fb_gen_common_c_builder_header@@Base+0x774>
   19fc0:	ldr	r0, [r4, #204]	; 0xcc
   19fc4:	bl	13fd4 <fprintf@plt>
   19fc8:	mov	r2, r4
   19fcc:	ldr	r1, [pc, #1352]	; 1a51c <__flatcc_fb_gen_common_c_builder_header@@Base+0x778>
   19fd0:	ldr	r0, [r4, #204]	; 0xcc
   19fd4:	bl	13fd4 <fprintf@plt>
   19fd8:	mov	r3, r4
   19fdc:	mov	r2, r4
   19fe0:	ldr	r1, [pc, #1336]	; 1a520 <__flatcc_fb_gen_common_c_builder_header@@Base+0x77c>
   19fe4:	ldr	r0, [r4, #204]	; 0xcc
   19fe8:	bl	13fd4 <fprintf@plt>
   19fec:	mov	r2, r4
   19ff0:	ldr	r1, [pc, #1324]	; 1a524 <__flatcc_fb_gen_common_c_builder_header@@Base+0x780>
   19ff4:	ldr	r0, [r4, #204]	; 0xcc
   19ff8:	bl	13fd4 <fprintf@plt>
   19ffc:	mov	r3, r4
   1a000:	mov	r2, r4
   1a004:	ldr	r1, [pc, #1308]	; 1a528 <__flatcc_fb_gen_common_c_builder_header@@Base+0x784>
   1a008:	str	r4, [sp]
   1a00c:	ldr	r0, [r4, #204]	; 0xcc
   1a010:	bl	13fd4 <fprintf@plt>
   1a014:	mov	r3, r4
   1a018:	mov	r2, r4
   1a01c:	ldr	r1, [pc, #1288]	; 1a52c <__flatcc_fb_gen_common_c_builder_header@@Base+0x788>
   1a020:	str	r4, [sp, #4]
   1a024:	str	r4, [sp]
   1a028:	ldr	r0, [r4, #204]	; 0xcc
   1a02c:	bl	13fd4 <fprintf@plt>
   1a030:	mov	r3, r4
   1a034:	mov	r2, r4
   1a038:	ldr	r1, [pc, #1264]	; 1a530 <__flatcc_fb_gen_common_c_builder_header@@Base+0x78c>
   1a03c:	ldr	r0, [r4, #204]	; 0xcc
   1a040:	bl	13fd4 <fprintf@plt>
   1a044:	mov	r3, r4
   1a048:	mov	r2, r4
   1a04c:	ldr	r1, [pc, #1248]	; 1a534 <__flatcc_fb_gen_common_c_builder_header@@Base+0x790>
   1a050:	str	r4, [sp, #4]
   1a054:	str	r4, [sp]
   1a058:	ldr	r0, [r4, #204]	; 0xcc
   1a05c:	bl	13fd4 <fprintf@plt>
   1a060:	mov	r3, r4
   1a064:	mov	r2, r4
   1a068:	ldr	r1, [pc, #1224]	; 1a538 <__flatcc_fb_gen_common_c_builder_header@@Base+0x794>
   1a06c:	ldr	r0, [r4, #204]	; 0xcc
   1a070:	bl	13fd4 <fprintf@plt>
   1a074:	mov	r2, r4
   1a078:	ldr	r1, [pc, #1212]	; 1a53c <__flatcc_fb_gen_common_c_builder_header@@Base+0x798>
   1a07c:	ldr	r0, [r4, #204]	; 0xcc
   1a080:	bl	13fd4 <fprintf@plt>
   1a084:	mov	r2, r4
   1a088:	ldr	r1, [pc, #1200]	; 1a540 <__flatcc_fb_gen_common_c_builder_header@@Base+0x79c>
   1a08c:	ldr	r0, [r4, #204]	; 0xcc
   1a090:	bl	13fd4 <fprintf@plt>
   1a094:	mov	r2, r4
   1a098:	ldr	r1, [pc, #1188]	; 1a544 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7a0>
   1a09c:	ldr	r0, [r4, #204]	; 0xcc
   1a0a0:	bl	13fd4 <fprintf@plt>
   1a0a4:	mov	r2, r4
   1a0a8:	ldr	r1, [pc, #1176]	; 1a548 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7a4>
   1a0ac:	ldr	r0, [r4, #204]	; 0xcc
   1a0b0:	bl	13fd4 <fprintf@plt>
   1a0b4:	mov	r3, r4
   1a0b8:	mov	r2, r4
   1a0bc:	ldr	r1, [pc, #1160]	; 1a54c <__flatcc_fb_gen_common_c_builder_header@@Base+0x7a8>
   1a0c0:	ldr	r0, [r4, #204]	; 0xcc
   1a0c4:	bl	13fd4 <fprintf@plt>
   1a0c8:	mov	r2, r4
   1a0cc:	ldr	r1, [pc, #1148]	; 1a550 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7ac>
   1a0d0:	ldr	r0, [r4, #204]	; 0xcc
   1a0d4:	bl	13fd4 <fprintf@plt>
   1a0d8:	mov	r2, r4
   1a0dc:	ldr	r1, [pc, #1136]	; 1a554 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7b0>
   1a0e0:	ldr	r0, [r4, #204]	; 0xcc
   1a0e4:	bl	13fd4 <fprintf@plt>
   1a0e8:	mov	r3, r4
   1a0ec:	mov	r2, r4
   1a0f0:	ldr	r1, [pc, #1120]	; 1a558 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7b4>
   1a0f4:	ldr	r0, [r4, #204]	; 0xcc
   1a0f8:	bl	13fd4 <fprintf@plt>
   1a0fc:	mov	r3, r4
   1a100:	mov	r2, r4
   1a104:	ldr	r1, [pc, #1104]	; 1a55c <__flatcc_fb_gen_common_c_builder_header@@Base+0x7b8>
   1a108:	ldr	r0, [r4, #204]	; 0xcc
   1a10c:	bl	13fd4 <fprintf@plt>
   1a110:	mov	r3, r4
   1a114:	mov	r2, r4
   1a118:	ldr	r1, [pc, #1088]	; 1a560 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7bc>
   1a11c:	ldr	r0, [r4, #204]	; 0xcc
   1a120:	bl	13fd4 <fprintf@plt>
   1a124:	mov	r3, r4
   1a128:	mov	r2, r4
   1a12c:	ldr	r1, [pc, #1072]	; 1a564 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7c0>
   1a130:	ldr	r0, [r4, #204]	; 0xcc
   1a134:	bl	13fd4 <fprintf@plt>
   1a138:	mov	r3, r4
   1a13c:	mov	r2, r4
   1a140:	ldr	r1, [pc, #1056]	; 1a568 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7c4>
   1a144:	str	r4, [sp]
   1a148:	ldr	r0, [r4, #204]	; 0xcc
   1a14c:	bl	13fd4 <fprintf@plt>
   1a150:	mov	r3, r4
   1a154:	mov	r2, r4
   1a158:	ldr	r1, [pc, #1036]	; 1a56c <__flatcc_fb_gen_common_c_builder_header@@Base+0x7c8>
   1a15c:	ldr	r0, [r4, #204]	; 0xcc
   1a160:	bl	13fd4 <fprintf@plt>
   1a164:	mov	r2, r4
   1a168:	ldr	r1, [pc, #1024]	; 1a570 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7cc>
   1a16c:	ldr	r0, [r4, #204]	; 0xcc
   1a170:	bl	13fd4 <fprintf@plt>
   1a174:	mov	r2, r4
   1a178:	ldr	r1, [pc, #1012]	; 1a574 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7d0>
   1a17c:	ldr	r0, [r4, #204]	; 0xcc
   1a180:	bl	13fd4 <fprintf@plt>
   1a184:	mov	r2, r4
   1a188:	ldr	r1, [pc, #1000]	; 1a578 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7d4>
   1a18c:	ldr	r0, [r4, #204]	; 0xcc
   1a190:	bl	13fd4 <fprintf@plt>
   1a194:	mov	r3, r4
   1a198:	mov	r2, r4
   1a19c:	ldr	r1, [pc, #984]	; 1a57c <__flatcc_fb_gen_common_c_builder_header@@Base+0x7d8>
   1a1a0:	str	r4, [sp]
   1a1a4:	ldr	r0, [r4, #204]	; 0xcc
   1a1a8:	bl	13fd4 <fprintf@plt>
   1a1ac:	mov	r2, r4
   1a1b0:	ldr	r1, [pc, #968]	; 1a580 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7dc>
   1a1b4:	ldr	r0, [r4, #204]	; 0xcc
   1a1b8:	bl	13fd4 <fprintf@plt>
   1a1bc:	mov	r2, r4
   1a1c0:	ldr	r1, [pc, #956]	; 1a584 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7e0>
   1a1c4:	ldr	r0, [r4, #204]	; 0xcc
   1a1c8:	bl	13fd4 <fprintf@plt>
   1a1cc:	mov	r2, r4
   1a1d0:	ldr	r1, [pc, #944]	; 1a588 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7e4>
   1a1d4:	ldr	r0, [r4, #204]	; 0xcc
   1a1d8:	bl	13fd4 <fprintf@plt>
   1a1dc:	mov	r2, r4
   1a1e0:	ldr	r1, [pc, #932]	; 1a58c <__flatcc_fb_gen_common_c_builder_header@@Base+0x7e8>
   1a1e4:	ldr	r0, [r4, #204]	; 0xcc
   1a1e8:	bl	13fd4 <fprintf@plt>
   1a1ec:	mov	r3, r4
   1a1f0:	mov	r2, r4
   1a1f4:	ldr	r1, [pc, #916]	; 1a590 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7ec>
   1a1f8:	ldr	r0, [r4, #204]	; 0xcc
   1a1fc:	bl	13fd4 <fprintf@plt>
   1a200:	mov	r2, r4
   1a204:	ldr	r1, [pc, #904]	; 1a594 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7f0>
   1a208:	ldr	r0, [r4, #204]	; 0xcc
   1a20c:	bl	13fd4 <fprintf@plt>
   1a210:	mov	r2, r4
   1a214:	ldr	r1, [pc, #892]	; 1a598 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7f4>
   1a218:	ldr	r0, [r4, #204]	; 0xcc
   1a21c:	bl	13fd4 <fprintf@plt>
   1a220:	mov	r2, r4
   1a224:	ldr	r1, [pc, #880]	; 1a59c <__flatcc_fb_gen_common_c_builder_header@@Base+0x7f8>
   1a228:	ldr	r0, [r4, #204]	; 0xcc
   1a22c:	bl	13fd4 <fprintf@plt>
   1a230:	mov	r2, r4
   1a234:	ldr	r1, [pc, #868]	; 1a5a0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7fc>
   1a238:	ldr	r0, [r4, #204]	; 0xcc
   1a23c:	bl	13fd4 <fprintf@plt>
   1a240:	mov	r2, r4
   1a244:	ldr	r1, [pc, #856]	; 1a5a4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x800>
   1a248:	ldr	r0, [r4, #204]	; 0xcc
   1a24c:	bl	13fd4 <fprintf@plt>
   1a250:	mov	r2, r4
   1a254:	ldr	r1, [pc, #844]	; 1a5a8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x804>
   1a258:	ldr	r0, [r4, #204]	; 0xcc
   1a25c:	bl	13fd4 <fprintf@plt>
   1a260:	mov	r2, r4
   1a264:	ldr	r1, [pc, #832]	; 1a5ac <__flatcc_fb_gen_common_c_builder_header@@Base+0x808>
   1a268:	ldr	r0, [r4, #204]	; 0xcc
   1a26c:	bl	13fd4 <fprintf@plt>
   1a270:	mov	r2, r4
   1a274:	ldr	r1, [pc, #820]	; 1a5b0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x80c>
   1a278:	ldr	r0, [r4, #204]	; 0xcc
   1a27c:	bl	13fd4 <fprintf@plt>
   1a280:	mov	r2, r4
   1a284:	ldr	r1, [pc, #808]	; 1a5b4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x810>
   1a288:	ldr	r0, [r4, #204]	; 0xcc
   1a28c:	bl	13fd4 <fprintf@plt>
   1a290:	mov	r2, r4
   1a294:	ldr	r1, [pc, #796]	; 1a5b8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x814>
   1a298:	ldr	r0, [r4, #204]	; 0xcc
   1a29c:	bl	13fd4 <fprintf@plt>
   1a2a0:	mov	r2, r4
   1a2a4:	ldr	r1, [pc, #784]	; 1a5bc <__flatcc_fb_gen_common_c_builder_header@@Base+0x818>
   1a2a8:	ldr	r0, [r4, #204]	; 0xcc
   1a2ac:	bl	13fd4 <fprintf@plt>
   1a2b0:	mov	r2, r4
   1a2b4:	ldr	r1, [pc, #772]	; 1a5c0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x81c>
   1a2b8:	ldr	r0, [r4, #204]	; 0xcc
   1a2bc:	bl	13fd4 <fprintf@plt>
   1a2c0:	mov	r2, r4
   1a2c4:	ldr	r1, [pc, #760]	; 1a5c4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x820>
   1a2c8:	ldr	r0, [r4, #204]	; 0xcc
   1a2cc:	bl	13fd4 <fprintf@plt>
   1a2d0:	mov	r2, r4
   1a2d4:	ldr	r1, [pc, #748]	; 1a5c8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x824>
   1a2d8:	ldr	r0, [r4, #204]	; 0xcc
   1a2dc:	bl	13fd4 <fprintf@plt>
   1a2e0:	mov	r2, r4
   1a2e4:	ldr	r1, [pc, #736]	; 1a5cc <__flatcc_fb_gen_common_c_builder_header@@Base+0x828>
   1a2e8:	ldr	r0, [r4, #204]	; 0xcc
   1a2ec:	bl	13fd4 <fprintf@plt>
   1a2f0:	mov	r2, r4
   1a2f4:	ldr	r1, [pc, #724]	; 1a5d0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x82c>
   1a2f8:	ldr	r0, [r4, #204]	; 0xcc
   1a2fc:	bl	13fd4 <fprintf@plt>
   1a300:	mov	r2, r4
   1a304:	ldr	r1, [pc, #712]	; 1a5d4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x830>
   1a308:	ldr	r0, [r4, #204]	; 0xcc
   1a30c:	bl	13fd4 <fprintf@plt>
   1a310:	ldr	r1, [r4, #204]	; 0xcc
   1a314:	mov	r0, #10
   1a318:	bl	14034 <fputc@plt>
   1a31c:	mov	r3, r4
   1a320:	mov	r2, r4
   1a324:	ldr	r1, [pc, #684]	; 1a5d8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x834>
   1a328:	str	r4, [sp]
   1a32c:	ldr	r0, [r4, #204]	; 0xcc
   1a330:	bl	13fd4 <fprintf@plt>
   1a334:	mov	r3, r4
   1a338:	mov	r2, r4
   1a33c:	ldr	r1, [pc, #664]	; 1a5dc <__flatcc_fb_gen_common_c_builder_header@@Base+0x838>
   1a340:	str	r4, [sp]
   1a344:	ldr	r0, [r4, #204]	; 0xcc
   1a348:	bl	13fd4 <fprintf@plt>
   1a34c:	mov	r3, r4
   1a350:	mov	r2, r4
   1a354:	ldr	r1, [pc, #644]	; 1a5e0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x83c>
   1a358:	str	r4, [sp, #4]
   1a35c:	str	r4, [sp]
   1a360:	ldr	r0, [r4, #204]	; 0xcc
   1a364:	bl	13fd4 <fprintf@plt>
   1a368:	mov	r3, r4
   1a36c:	mov	r2, r4
   1a370:	ldr	r1, [pc, #620]	; 1a5e4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x840>
   1a374:	str	r4, [sp]
   1a378:	ldr	r0, [r4, #204]	; 0xcc
   1a37c:	bl	13fd4 <fprintf@plt>
   1a380:	mov	r3, r4
   1a384:	mov	r2, r4
   1a388:	ldr	r1, [pc, #600]	; 1a5e8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x844>
   1a38c:	str	r4, [sp]
   1a390:	ldr	r0, [r4, #204]	; 0xcc
   1a394:	bl	13fd4 <fprintf@plt>
   1a398:	mov	r3, r4
   1a39c:	mov	r2, r4
   1a3a0:	ldr	r1, [pc, #580]	; 1a5ec <__flatcc_fb_gen_common_c_builder_header@@Base+0x848>
   1a3a4:	str	r4, [sp]
   1a3a8:	ldr	r0, [r4, #204]	; 0xcc
   1a3ac:	bl	13fd4 <fprintf@plt>
   1a3b0:	mov	r3, r4
   1a3b4:	mov	r2, r4
   1a3b8:	ldr	r1, [pc, #560]	; 1a5f0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x84c>
   1a3bc:	str	r4, [sp]
   1a3c0:	ldr	r0, [r4, #204]	; 0xcc
   1a3c4:	bl	13fd4 <fprintf@plt>
   1a3c8:	mov	r3, r4
   1a3cc:	mov	r2, r4
   1a3d0:	ldr	r1, [pc, #540]	; 1a5f4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x850>
   1a3d4:	str	r4, [sp]
   1a3d8:	ldr	r0, [r4, #204]	; 0xcc
   1a3dc:	bl	13fd4 <fprintf@plt>
   1a3e0:	mov	r3, r4
   1a3e4:	mov	r2, r4
   1a3e8:	ldr	r1, [pc, #520]	; 1a5f8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x854>
   1a3ec:	str	r4, [sp]
   1a3f0:	ldr	r0, [r4, #204]	; 0xcc
   1a3f4:	bl	13fd4 <fprintf@plt>
   1a3f8:	mov	r3, r4
   1a3fc:	mov	r2, r4
   1a400:	ldr	r1, [pc, #500]	; 1a5fc <__flatcc_fb_gen_common_c_builder_header@@Base+0x858>
   1a404:	str	r4, [sp]
   1a408:	ldr	r0, [r4, #204]	; 0xcc
   1a40c:	bl	13fd4 <fprintf@plt>
   1a410:	mov	r3, r4
   1a414:	mov	r2, r4
   1a418:	ldr	r1, [pc, #480]	; 1a600 <__flatcc_fb_gen_common_c_builder_header@@Base+0x85c>
   1a41c:	str	r4, [sp]
   1a420:	ldr	r0, [r4, #204]	; 0xcc
   1a424:	bl	13fd4 <fprintf@plt>
   1a428:	ldr	r1, [r4, #204]	; 0xcc
   1a42c:	mov	r0, #10
   1a430:	bl	14034 <fputc@plt>
   1a434:	mov	r3, r4
   1a438:	mov	r2, r4
   1a43c:	ldr	r1, [pc, #448]	; 1a604 <__flatcc_fb_gen_common_c_builder_header@@Base+0x860>
   1a440:	ldr	r0, [r4, #204]	; 0xcc
   1a444:	bl	13fd4 <fprintf@plt>
   1a448:	ldr	r1, [r4, #204]	; 0xcc
   1a44c:	mov	r0, #10
   1a450:	bl	14034 <fputc@plt>
   1a454:	mov	r3, r4
   1a458:	mov	r2, r4
   1a45c:	ldr	r1, [pc, #420]	; 1a608 <__flatcc_fb_gen_common_c_builder_header@@Base+0x864>
   1a460:	ldr	r0, [r4, #204]	; 0xcc
   1a464:	bl	13fd4 <fprintf@plt>
   1a468:	ldr	r3, [r4, #212]	; 0xd4
   1a46c:	ldr	r3, [r3, #140]	; 0x8c
   1a470:	cmp	r3, #0
   1a474:	beq	1a484 <__flatcc_fb_gen_common_c_builder_header@@Base+0x6e0>
   1a478:	ldr	r1, [r4, #204]	; 0xcc
   1a47c:	ldr	r0, [pc, #392]	; 1a60c <__flatcc_fb_gen_common_c_builder_header@@Base+0x868>
   1a480:	bl	14070 <fputs@plt>
   1a484:	mov	r2, r5
   1a488:	ldr	r1, [pc, #384]	; 1a610 <__flatcc_fb_gen_common_c_builder_header@@Base+0x86c>
   1a48c:	ldr	r0, [r4, #204]	; 0xcc
   1a490:	bl	13fd4 <fprintf@plt>
   1a494:	mov	r0, #0
   1a498:	add	sp, sp, #12
   1a49c:	pop	{r4, r5, pc}
   1a4a0:	ldrdeq	r9, [r3], -r4
   1a4a4:	strdeq	r9, [r3], -r1
   1a4a8:	andeq	r1, r3, r4, asr #25
   1a4ac:	andeq	r9, r3, lr, lsl #14
   1a4b0:	ldrdeq	r1, [r3], -r3
   1a4b4:	andeq	r9, r3, r4, asr #14
   1a4b8:	andeq	r9, r3, fp, asr r7
   1a4bc:	andeq	r7, r3, r9, lsl lr
   1a4c0:	andeq	r9, r3, pc, ror r7
   1a4c4:	andeq	r9, r3, pc, lsl #15
   1a4c8:			; <UNDEFINED> instruction: 0x000397b6
   1a4cc:	ldrdeq	r9, [r3], -sp
   1a4d0:	andeq	r9, r3, r8, lsl #16
   1a4d4:	andeq	r9, r3, fp, lsr r8
   1a4d8:	andeq	r9, r3, r6, ror r8
   1a4dc:	andeq	r9, r3, lr, asr #17
   1a4e0:	andeq	r9, r3, r9, ror #17
   1a4e4:	andeq	r1, r3, r2, lsr #28
   1a4e8:	andeq	r9, r3, r0, lsl r9
   1a4ec:	andeq	r9, r3, r1, asr #18
   1a4f0:	andeq	r9, r3, r5, ror #18
   1a4f4:	ldrdeq	r9, [r3], -r8
   1a4f8:	andeq	sl, r3, r1, lsr #7
   1a4fc:	andeq	sl, r3, sl, lsr #8
   1a500:	andeq	sl, r3, r5, ror #29
   1a504:	andeq	fp, r3, r0, asr #5
   1a508:	strdeq	fp, [r3], -r6
   1a50c:	andeq	fp, r3, r2, ror sp
   1a510:	andeq	ip, r3, r5, ror #9
   1a514:	andeq	ip, r3, sp, lsr #20
   1a518:	andeq	ip, r3, fp, lsr #29
   1a51c:	andeq	sp, r3, r9, lsr r0
   1a520:	muleq	r3, r3, r3
   1a524:	muleq	r3, r8, r5
   1a528:	andeq	sp, r3, r1, lsl #18
   1a52c:	strdeq	sp, [r3], -sp	; <UNPREDICTABLE>
   1a530:	andeq	sp, r3, r6, lsl #30
   1a534:	andeq	lr, r3, lr, ror #4
   1a538:	andeq	lr, r3, ip, ror #16
   1a53c:	andeq	lr, r3, pc, lsl sl
   1a540:	andeq	lr, r3, r4, asr #24
   1a544:	andeq	pc, r3, r4
   1a548:	andeq	pc, r3, r1, asr #5
   1a54c:	ldrdeq	pc, [r3], -r5
   1a550:	andeq	pc, r3, r1, asr #15
   1a554:	andeq	pc, r3, r2, lsr #20
   1a558:	muleq	r3, r9, sp
   1a55c:	andeq	r0, r4, r8, ror #3
   1a560:	andeq	r0, r4, r0, lsl #9
   1a564:	andeq	r0, r4, ip, ror r8
   1a568:	andeq	r0, r4, r8, lsl #19
   1a56c:	andeq	r0, r4, r3, lsl sl
   1a570:	andeq	r0, r4, pc, asr sp
   1a574:	andeq	r0, r4, r7, ror #31
   1a578:	andeq	r1, r4, r5, ror r2
   1a57c:	andeq	r1, r4, fp, lsr #16
   1a580:			; <UNDEFINED> instruction: 0x000418ba
   1a584:	andeq	r1, r4, r6, ror #17
   1a588:	andeq	r1, r4, r8, lsl #18
   1a58c:	andeq	r1, r4, r2, lsr r9
   1a590:	andeq	r1, r4, r3, asr r9
   1a594:	andeq	r1, r4, pc, ror r9
   1a598:	andeq	r1, r4, r0, lsr #19
   1a59c:	andeq	r1, r4, lr, asr #19
   1a5a0:	strdeq	r1, [r4], -r1	; <UNPREDICTABLE>
   1a5a4:	andeq	r1, r4, pc, lsl sl
   1a5a8:	andeq	r1, r4, r2, asr #20
   1a5ac:	andeq	r1, r4, r0, ror sl
   1a5b0:	muleq	r4, r3, sl
   1a5b4:			; <UNDEFINED> instruction: 0x00041abf
   1a5b8:	andeq	r1, r4, r1, ror #21
   1a5bc:	andeq	r1, r4, sp, lsl #22
   1a5c0:	andeq	r1, r4, pc, lsr #22
   1a5c4:	andeq	r1, r4, fp, asr fp
   1a5c8:	andeq	r1, r4, sp, ror fp
   1a5cc:	andeq	r1, r4, r7, lsr #23
   1a5d0:	andeq	r1, r4, r9, asr #23
   1a5d4:	strdeq	r1, [r4], -r5
   1a5d8:	andeq	r1, r4, r8, lsl ip
   1a5dc:	andeq	r1, r4, r0, asr #24
   1a5e0:	andeq	r1, r4, r6, ror #24
   1a5e4:	andeq	r1, r4, lr, lsl #25
   1a5e8:			; <UNDEFINED> instruction: 0x00041cb8
   1a5ec:	andeq	r1, r4, r2, ror #25
   1a5f0:	andeq	r1, r4, ip, lsl #26
   1a5f4:	andeq	r1, r4, r4, lsr sp
   1a5f8:	andeq	r1, r4, ip, asr sp
   1a5fc:	andeq	r1, r4, r4, lsl #27
   1a600:	andeq	r1, r4, sl, lsr #27
   1a604:	ldrdeq	r1, [r4], -r2
   1a608:	andeq	r1, r4, r8, ror #27
   1a60c:			; <UNDEFINED> instruction: 0x00037bbd
   1a610:	strdeq	r1, [r4], -lr

0001a614 <__flatcc_fb_gen_c_builder@@Base>:
   1a614:	ldr	r3, [r0, #208]	; 0xd0
   1a618:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a61c:	mov	r4, r0
   1a620:	ldr	r3, [r3, #164]	; 0xa4
   1a624:	sub	sp, sp, #268	; 0x10c
   1a628:	mov	r2, r3
   1a62c:	ldr	r1, [pc, #1400]	; 1abac <__flatcc_fb_gen_c_builder@@Base+0x598>
   1a630:	ldr	r0, [r0, #204]	; 0xcc
   1a634:	bl	13fd4 <fprintf@plt>
   1a638:	ldr	r1, [r4, #204]	; 0xcc
   1a63c:	ldr	r0, [pc, #1388]	; 1abb0 <__flatcc_fb_gen_c_builder@@Base+0x59c>
   1a640:	bl	14070 <fputs@plt>
   1a644:	ldr	r3, [r4, #208]	; 0xd0
   1a648:	ldr	r1, [pc, #1380]	; 1abb4 <__flatcc_fb_gen_c_builder@@Base+0x5a0>
   1a64c:	ldr	r0, [r4, #204]	; 0xcc
   1a650:	ldr	r2, [r3, #164]	; 0xa4
   1a654:	bl	13fd4 <fprintf@plt>
   1a658:	ldr	r3, [r4, #208]	; 0xd0
   1a65c:	ldr	r1, [pc, #1364]	; 1abb8 <__flatcc_fb_gen_c_builder@@Base+0x5a4>
   1a660:	ldr	r0, [r4, #204]	; 0xcc
   1a664:	ldr	r2, [r3, #160]	; 0xa0
   1a668:	bl	13fd4 <fprintf@plt>
   1a66c:	ldr	r1, [r4, #204]	; 0xcc
   1a670:	ldr	r0, [pc, #1348]	; 1abbc <__flatcc_fb_gen_c_builder@@Base+0x5a8>
   1a674:	bl	14070 <fputs@plt>
   1a678:	add	r2, r4, #102	; 0x66
   1a67c:	ldr	r1, [pc, #1340]	; 1abc0 <__flatcc_fb_gen_c_builder@@Base+0x5ac>
   1a680:	ldr	r0, [r4, #204]	; 0xcc
   1a684:	bl	13fd4 <fprintf@plt>
   1a688:	mov	r2, r4
   1a68c:	ldr	r1, [pc, #1328]	; 1abc4 <__flatcc_fb_gen_c_builder@@Base+0x5b0>
   1a690:	ldr	r0, [r4, #204]	; 0xcc
   1a694:	bl	13fd4 <fprintf@plt>
   1a698:	ldr	r1, [r4, #204]	; 0xcc
   1a69c:	ldr	r0, [pc, #1304]	; 1abbc <__flatcc_fb_gen_c_builder@@Base+0x5a8>
   1a6a0:	bl	14070 <fputs@plt>
   1a6a4:	ldr	r2, [pc, #1308]	; 1abc8 <__flatcc_fb_gen_c_builder@@Base+0x5b4>
   1a6a8:	ldr	r1, [pc, #1308]	; 1abcc <__flatcc_fb_gen_c_builder@@Base+0x5b8>
   1a6ac:	mov	r0, r4
   1a6b0:	bl	14f24 <__flatcc_fb_gen_c_includes@@Base>
   1a6b4:	ldr	r3, [r4, #212]	; 0xd4
   1a6b8:	ldr	r3, [r3, #140]	; 0x8c
   1a6bc:	cmp	r3, #0
   1a6c0:	beq	1a6d0 <__flatcc_fb_gen_c_builder@@Base+0xbc>
   1a6c4:	ldr	r1, [r4, #204]	; 0xcc
   1a6c8:	ldr	r0, [pc, #1280]	; 1abd0 <__flatcc_fb_gen_c_builder@@Base+0x5bc>
   1a6cc:	bl	14070 <fputs@plt>
   1a6d0:	ldr	r3, [r4, #208]	; 0xd0
   1a6d4:	ldrh	r2, [r3, #16]
   1a6d8:	cmp	r2, #2
   1a6dc:	bne	1a7e8 <__flatcc_fb_gen_c_builder@@Base+0x1d4>
   1a6e0:	ldr	r2, [r3, #8]
   1a6e4:	ldr	r1, [pc, #1256]	; 1abd4 <__flatcc_fb_gen_c_builder@@Base+0x5c0>
   1a6e8:	str	r2, [sp, #4]
   1a6ec:	ldr	r3, [r3, #12]
   1a6f0:	mov	r2, r4
   1a6f4:	str	r3, [sp]
   1a6f8:	ldr	r0, [r4, #204]	; 0xcc
   1a6fc:	mov	r3, r4
   1a700:	bl	13fd4 <fprintf@plt>
   1a704:	ldr	r3, [r4, #208]	; 0xd0
   1a708:	ldrh	r2, [r3, #32]
   1a70c:	cmp	r2, #2
   1a710:	bne	1a800 <__flatcc_fb_gen_c_builder@@Base+0x1ec>
   1a714:	ldr	r2, [r3, #24]
   1a718:	ldr	r1, [pc, #1208]	; 1abd8 <__flatcc_fb_gen_c_builder@@Base+0x5c4>
   1a71c:	str	r2, [sp, #4]
   1a720:	ldr	r3, [r3, #28]
   1a724:	mov	r2, r4
   1a728:	str	r3, [sp]
   1a72c:	ldr	r0, [r4, #204]	; 0xcc
   1a730:	mov	r3, r4
   1a734:	bl	13fd4 <fprintf@plt>
   1a738:	ldr	r1, [r4, #204]	; 0xcc
   1a73c:	mov	r0, #10
   1a740:	add	r5, sp, #44	; 0x2c
   1a744:	bl	14034 <fputc@plt>
   1a748:	mov	r2, #220	; 0xdc
   1a74c:	mov	r1, #0
   1a750:	mov	r0, r5
   1a754:	bl	13fec <memset@plt>
   1a758:	ldr	r3, [r4, #208]	; 0xd0
   1a75c:	ldr	r7, [pc, #1144]	; 1abdc <__flatcc_fb_gen_c_builder@@Base+0x5c8>
   1a760:	ldr	r8, [pc, #1144]	; 1abe0 <__flatcc_fb_gen_c_builder@@Base+0x5cc>
   1a764:	ldr	r6, [r3, #40]	; 0x28
   1a768:	mov	r9, #1
   1a76c:	mov	r3, #0
   1a770:	cmp	r6, #0
   1a774:	bne	1a824 <__flatcc_fb_gen_c_builder@@Base+0x210>
   1a778:	cmp	r3, #0
   1a77c:	beq	1a78c <__flatcc_fb_gen_c_builder@@Base+0x178>
   1a780:	ldr	r1, [r4, #204]	; 0xcc
   1a784:	mov	r0, #10
   1a788:	bl	14034 <fputc@plt>
   1a78c:	ldr	r3, [r4, #208]	; 0xd0
   1a790:	ldr	r8, [r3, #44]	; 0x2c
   1a794:	add	r3, r4, #204	; 0xcc
   1a798:	str	r3, [sp, #32]
   1a79c:	cmp	r8, #0
   1a7a0:	bne	1a87c <__flatcc_fb_gen_c_builder@@Base+0x268>
   1a7a4:	mov	r0, r4
   1a7a8:	bl	19430 <__flatcc_gen_sort@@Base+0x1444>
   1a7ac:	ldr	r3, [r4, #212]	; 0xd4
   1a7b0:	ldr	r3, [r3, #140]	; 0x8c
   1a7b4:	cmp	r3, #0
   1a7b8:	beq	1a7c8 <__flatcc_fb_gen_c_builder@@Base+0x1b4>
   1a7bc:	ldr	r1, [r4, #204]	; 0xcc
   1a7c0:	ldr	r0, [pc, #1052]	; 1abe4 <__flatcc_fb_gen_c_builder@@Base+0x5d0>
   1a7c4:	bl	14070 <fputs@plt>
   1a7c8:	ldr	r3, [r4, #208]	; 0xd0
   1a7cc:	ldr	r1, [pc, #1044]	; 1abe8 <__flatcc_fb_gen_c_builder@@Base+0x5d4>
   1a7d0:	ldr	r0, [r4, #204]	; 0xcc
   1a7d4:	ldr	r2, [r3, #164]	; 0xa4
   1a7d8:	bl	13fd4 <fprintf@plt>
   1a7dc:	mov	r0, #0
   1a7e0:	add	sp, sp, #268	; 0x10c
   1a7e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a7e8:	mov	r3, r4
   1a7ec:	mov	r2, r4
   1a7f0:	ldr	r1, [pc, #1012]	; 1abec <__flatcc_fb_gen_c_builder@@Base+0x5d8>
   1a7f4:	ldr	r0, [r4, #204]	; 0xcc
   1a7f8:	bl	13fd4 <fprintf@plt>
   1a7fc:	b	1a704 <__flatcc_fb_gen_c_builder@@Base+0xf0>
   1a800:	ldr	r3, [r4, #212]	; 0xd4
   1a804:	mov	r2, r4
   1a808:	ldr	r1, [pc, #992]	; 1abf0 <__flatcc_fb_gen_c_builder@@Base+0x5dc>
   1a80c:	ldr	r3, [r3, #104]	; 0x68
   1a810:	ldr	r0, [r4, #204]	; 0xcc
   1a814:	str	r3, [sp]
   1a818:	mov	r3, r4
   1a81c:	bl	13fd4 <fprintf@plt>
   1a820:	b	1a738 <__flatcc_fb_gen_c_builder@@Base+0x124>
   1a824:	ldrh	r2, [r6, #8]
   1a828:	cmp	r2, #3
   1a82c:	bne	1a874 <__flatcc_fb_gen_c_builder@@Base+0x260>
   1a830:	mov	r1, r5
   1a834:	mov	r0, r6
   1a838:	bl	18118 <__flatcc_gen_sort@@Base+0x12c>
   1a83c:	mov	r3, r5
   1a840:	mov	r2, r5
   1a844:	mov	r1, r7
   1a848:	str	r5, [sp]
   1a84c:	ldr	r0, [r4, #204]	; 0xcc
   1a850:	bl	13fd4 <fprintf@plt>
   1a854:	mov	r3, r4
   1a858:	str	r5, [sp, #4]
   1a85c:	str	r5, [sp]
   1a860:	mov	r2, r4
   1a864:	mov	r1, r8
   1a868:	ldr	r0, [r4, #204]	; 0xcc
   1a86c:	bl	13fd4 <fprintf@plt>
   1a870:	mov	r3, r9
   1a874:	ldr	r6, [r6]
   1a878:	b	1a770 <__flatcc_fb_gen_c_builder@@Base+0x15c>
   1a87c:	mov	r2, #220	; 0xdc
   1a880:	mov	r1, #0
   1a884:	mov	r0, r5
   1a888:	bl	13fec <memset@plt>
   1a88c:	ldrh	sl, [r8, #8]
   1a890:	cmp	sl, #1
   1a894:	beq	1a8ac <__flatcc_fb_gen_c_builder@@Base+0x298>
   1a898:	ldr	r3, [pc, #852]	; 1abf4 <__flatcc_fb_gen_c_builder@@Base+0x5e0>
   1a89c:	ldr	r2, [pc, #852]	; 1abf8 <__flatcc_fb_gen_c_builder@@Base+0x5e4>
   1a8a0:	ldr	r1, [pc, #852]	; 1abfc <__flatcc_fb_gen_c_builder@@Base+0x5e8>
   1a8a4:	ldr	r0, [pc, #852]	; 1ac00 <__flatcc_fb_gen_c_builder@@Base+0x5ec>
   1a8a8:	bl	14094 <__assert_fail@plt>
   1a8ac:	mov	r6, r8
   1a8b0:	mov	r1, r5
   1a8b4:	mov	r0, r8
   1a8b8:	bl	18118 <__flatcc_gen_sort@@Base+0x12c>
   1a8bc:	ldr	r0, [r6, #20]!
   1a8c0:	bl	18314 <__flatcc_gen_sort@@Base+0x328>
   1a8c4:	mov	r2, r5
   1a8c8:	ldr	r1, [pc, #820]	; 1ac04 <__flatcc_fb_gen_c_builder@@Base+0x5f0>
   1a8cc:	mov	r9, #0
   1a8d0:	mov	r7, r0
   1a8d4:	ldr	r0, [r4, #204]	; 0xcc
   1a8d8:	bl	13fd4 <fprintf@plt>
   1a8dc:	mov	r3, r7
   1a8e0:	mov	r2, #0
   1a8e4:	mov	r1, r6
   1a8e8:	str	sl, [sp]
   1a8ec:	mov	r0, r4
   1a8f0:	bl	18500 <__flatcc_gen_sort@@Base+0x514>
   1a8f4:	mov	r2, r5
   1a8f8:	ldr	r1, [pc, #776]	; 1ac08 <__flatcc_fb_gen_c_builder@@Base+0x5f4>
   1a8fc:	ldr	r0, [r4, #204]	; 0xcc
   1a900:	bl	13fd4 <fprintf@plt>
   1a904:	ldr	r0, [r8, #20]
   1a908:	bl	18314 <__flatcc_gen_sort@@Base+0x328>
   1a90c:	mov	fp, r0
   1a910:	cmp	fp, r9
   1a914:	bgt	1ab74 <__flatcc_fb_gen_c_builder@@Base+0x560>
   1a918:	ldr	r1, [r4, #204]	; 0xcc
   1a91c:	mov	r0, #10
   1a920:	mov	r9, #0
   1a924:	bl	14034 <fputc@plt>
   1a928:	mov	r3, r5
   1a92c:	mov	r2, r5
   1a930:	ldr	r1, [pc, #724]	; 1ac0c <__flatcc_fb_gen_c_builder@@Base+0x5f8>
   1a934:	str	r5, [sp]
   1a938:	ldr	r0, [r4, #204]	; 0xcc
   1a93c:	bl	13fd4 <fprintf@plt>
   1a940:	mov	r3, r7
   1a944:	mov	r2, r9
   1a948:	mov	r1, r6
   1a94c:	str	r9, [sp]
   1a950:	mov	r0, r4
   1a954:	bl	18500 <__flatcc_gen_sort@@Base+0x514>
   1a958:	ldr	r1, [r4, #204]	; 0xcc
   1a95c:	ldr	r0, [pc, #684]	; 1ac10 <__flatcc_fb_gen_c_builder@@Base+0x5fc>
   1a960:	bl	14070 <fputs@plt>
   1a964:	mov	r3, r9
   1a968:	mov	r2, r7
   1a96c:	mov	r1, r6
   1a970:	str	r9, [sp]
   1a974:	mov	r0, r4
   1a978:	bl	18ff0 <__flatcc_gen_sort@@Base+0x1004>
   1a97c:	ldr	r1, [r4, #204]	; 0xcc
   1a980:	ldr	r0, [pc, #652]	; 1ac14 <__flatcc_fb_gen_c_builder@@Base+0x600>
   1a984:	bl	14070 <fputs@plt>
   1a988:	mov	r3, r5
   1a98c:	mov	r2, r5
   1a990:	ldr	r1, [pc, #640]	; 1ac18 <__flatcc_fb_gen_c_builder@@Base+0x604>
   1a994:	str	r5, [sp, #4]
   1a998:	str	r5, [sp]
   1a99c:	ldr	r0, [r4, #204]	; 0xcc
   1a9a0:	bl	13fd4 <fprintf@plt>
   1a9a4:	mov	sl, #1
   1a9a8:	ldr	r1, [r4, #204]	; 0xcc
   1a9ac:	ldr	r0, [pc, #616]	; 1ac1c <__flatcc_fb_gen_c_builder@@Base+0x608>
   1a9b0:	bl	14070 <fputs@plt>
   1a9b4:	mov	r3, r9
   1a9b8:	mov	r2, r7
   1a9bc:	mov	r1, r6
   1a9c0:	str	sl, [sp]
   1a9c4:	mov	r0, r4
   1a9c8:	bl	18ff0 <__flatcc_gen_sort@@Base+0x1004>
   1a9cc:	ldr	r1, [r4, #204]	; 0xcc
   1a9d0:	ldr	r0, [pc, #572]	; 1ac14 <__flatcc_fb_gen_c_builder@@Base+0x600>
   1a9d4:	bl	14070 <fputs@plt>
   1a9d8:	mov	r3, r5
   1a9dc:	mov	r2, r5
   1a9e0:	ldr	r1, [pc, #568]	; 1ac20 <__flatcc_fb_gen_c_builder@@Base+0x60c>
   1a9e4:	str	r5, [sp]
   1a9e8:	ldr	r0, [r4, #204]	; 0xcc
   1a9ec:	bl	13fd4 <fprintf@plt>
   1a9f0:	mov	r3, r7
   1a9f4:	mov	r2, r9
   1a9f8:	mov	r1, r6
   1a9fc:	str	r9, [sp]
   1aa00:	mov	r0, r4
   1aa04:	bl	18500 <__flatcc_gen_sort@@Base+0x514>
   1aa08:	ldr	r1, [r4, #204]	; 0xcc
   1aa0c:	ldr	r0, [pc, #508]	; 1ac10 <__flatcc_fb_gen_c_builder@@Base+0x5fc>
   1aa10:	bl	14070 <fputs@plt>
   1aa14:	mov	r3, #2
   1aa18:	mov	r2, r7
   1aa1c:	mov	r1, r6
   1aa20:	str	r9, [sp]
   1aa24:	mov	r0, r4
   1aa28:	bl	18ff0 <__flatcc_gen_sort@@Base+0x1004>
   1aa2c:	ldr	r1, [r4, #204]	; 0xcc
   1aa30:	ldr	r0, [pc, #476]	; 1ac14 <__flatcc_fb_gen_c_builder@@Base+0x600>
   1aa34:	bl	14070 <fputs@plt>
   1aa38:	mov	r3, r5
   1aa3c:	mov	r2, r5
   1aa40:	ldr	r1, [pc, #476]	; 1ac24 <__flatcc_fb_gen_c_builder@@Base+0x610>
   1aa44:	str	r5, [sp, #4]
   1aa48:	str	r5, [sp]
   1aa4c:	ldr	r0, [r4, #204]	; 0xcc
   1aa50:	bl	13fd4 <fprintf@plt>
   1aa54:	ldr	r1, [r4, #204]	; 0xcc
   1aa58:	ldr	r0, [pc, #444]	; 1ac1c <__flatcc_fb_gen_c_builder@@Base+0x608>
   1aa5c:	bl	14070 <fputs@plt>
   1aa60:	mov	r3, #2
   1aa64:	mov	r2, r7
   1aa68:	mov	r1, r6
   1aa6c:	str	sl, [sp]
   1aa70:	mov	r0, r4
   1aa74:	bl	18ff0 <__flatcc_gen_sort@@Base+0x1004>
   1aa78:	ldr	r1, [r4, #204]	; 0xcc
   1aa7c:	ldr	r0, [pc, #400]	; 1ac14 <__flatcc_fb_gen_c_builder@@Base+0x600>
   1aa80:	bl	14070 <fputs@plt>
   1aa84:	mov	r3, r5
   1aa88:	mov	r2, r5
   1aa8c:	ldr	r1, [pc, #404]	; 1ac28 <__flatcc_fb_gen_c_builder@@Base+0x614>
   1aa90:	str	r5, [sp]
   1aa94:	ldr	r0, [r4, #204]	; 0xcc
   1aa98:	bl	13fd4 <fprintf@plt>
   1aa9c:	mov	r3, r7
   1aaa0:	mov	r2, r9
   1aaa4:	mov	r1, r6
   1aaa8:	str	r9, [sp]
   1aaac:	mov	r0, r4
   1aab0:	bl	18500 <__flatcc_gen_sort@@Base+0x514>
   1aab4:	ldr	r1, [r4, #204]	; 0xcc
   1aab8:	ldr	r0, [pc, #336]	; 1ac10 <__flatcc_fb_gen_c_builder@@Base+0x5fc>
   1aabc:	bl	14070 <fputs@plt>
   1aac0:	mov	r3, sl
   1aac4:	mov	r2, r7
   1aac8:	mov	r1, r6
   1aacc:	str	r9, [sp]
   1aad0:	mov	r0, r4
   1aad4:	bl	18ff0 <__flatcc_gen_sort@@Base+0x1004>
   1aad8:	ldr	r1, [r4, #204]	; 0xcc
   1aadc:	ldr	r0, [pc, #304]	; 1ac14 <__flatcc_fb_gen_c_builder@@Base+0x600>
   1aae0:	bl	14070 <fputs@plt>
   1aae4:	mov	r3, r5
   1aae8:	mov	r2, r5
   1aaec:	ldr	r1, [pc, #312]	; 1ac2c <__flatcc_fb_gen_c_builder@@Base+0x618>
   1aaf0:	str	r5, [sp, #4]
   1aaf4:	str	r5, [sp]
   1aaf8:	ldr	r0, [r4, #204]	; 0xcc
   1aafc:	bl	13fd4 <fprintf@plt>
   1ab00:	ldr	r1, [r4, #204]	; 0xcc
   1ab04:	ldr	r0, [pc, #272]	; 1ac1c <__flatcc_fb_gen_c_builder@@Base+0x608>
   1ab08:	bl	14070 <fputs@plt>
   1ab0c:	mov	r3, sl
   1ab10:	mov	r2, r7
   1ab14:	mov	r1, r6
   1ab18:	str	sl, [sp]
   1ab1c:	mov	r0, r4
   1ab20:	bl	18ff0 <__flatcc_gen_sort@@Base+0x1004>
   1ab24:	ldr	r1, [r4, #204]	; 0xcc
   1ab28:	ldr	r0, [pc, #228]	; 1ac14 <__flatcc_fb_gen_c_builder@@Base+0x600>
   1ab2c:	bl	14070 <fputs@plt>
   1ab30:	str	r5, [sp, #24]
   1ab34:	str	r5, [sp, #20]
   1ab38:	ldrh	r3, [r8, #104]	; 0x68
   1ab3c:	ldr	r1, [pc, #236]	; 1ac30 <__flatcc_fb_gen_c_builder@@Base+0x61c>
   1ab40:	ldr	r0, [r4, #204]	; 0xcc
   1ab44:	str	r3, [sp, #16]
   1ab48:	ldrd	r2, [r8, #112]	; 0x70
   1ab4c:	str	r5, [sp]
   1ab50:	strd	r2, [sp, #8]
   1ab54:	mov	r3, r4
   1ab58:	mov	r2, r4
   1ab5c:	bl	13fd4 <fprintf@plt>
   1ab60:	ldr	r1, [r4, #204]	; 0xcc
   1ab64:	mov	r0, #10
   1ab68:	bl	14034 <fputc@plt>
   1ab6c:	ldr	r8, [r8, #120]	; 0x78
   1ab70:	b	1a79c <__flatcc_fb_gen_c_builder@@Base+0x188>
   1ab74:	mov	r1, r9
   1ab78:	mov	r3, sl
   1ab7c:	mov	r2, r7
   1ab80:	ldr	r0, [sp, #32]
   1ab84:	bl	18374 <__flatcc_gen_sort@@Base+0x388>
   1ab88:	add	r3, r9, #1
   1ab8c:	mov	r2, r9
   1ab90:	ldr	r1, [pc, #156]	; 1ac34 <__flatcc_fb_gen_c_builder@@Base+0x620>
   1ab94:	ldr	r0, [r4, #204]	; 0xcc
   1ab98:	str	r3, [sp, #36]	; 0x24
   1ab9c:	bl	13fd4 <fprintf@plt>
   1aba0:	ldr	r3, [sp, #36]	; 0x24
   1aba4:	mov	r9, r3
   1aba8:	b	1a910 <__flatcc_fb_gen_c_builder@@Base+0x2fc>
   1abac:	andeq	r1, r4, r0, lsr #28
   1abb0:	andeq	r1, r3, r4, asr #25
   1abb4:	andeq	r1, r4, fp, asr #28
   1abb8:	andeq	r1, r4, r0, ror #28
   1abbc:	andeq	r7, r3, r9, lsl lr
   1abc0:	ldrdeq	r9, [r3], -r4
   1abc4:	andeq	r1, r4, r8, ror lr
   1abc8:	muleq	r4, r7, lr
   1abcc:	andeq	r6, r4, r7, lsr #20
   1abd0:	ldrdeq	r1, [r3], -r3
   1abd4:	andeq	r7, r3, lr, lsl #29
   1abd8:	strdeq	r7, [r3], -r3
   1abdc:	andeq	r1, r4, r2, lsr #29
   1abe0:	andeq	r1, r4, r7, ror #29
   1abe4:			; <UNDEFINED> instruction: 0x00037bbd
   1abe8:	andeq	r2, r4, r8, lsl #1
   1abec:			; <UNDEFINED> instruction: 0x00037ebf
   1abf0:	andeq	r7, r3, r3, lsr #30
   1abf4:			; <UNDEFINED> instruction: 0x00038ab2
   1abf8:	strdeq	r0, [r0], -r2
   1abfc:	andeq	r8, r3, r9, asr #22
   1ac00:	ldrdeq	r0, [r3], -r1
   1ac04:	andeq	r9, r3, r7, asr #4
   1ac08:	andeq	r9, r3, r0, ror #6
   1ac0c:	andeq	r1, r4, ip, lsl #30
   1ac10:	andeq	r1, r4, r2, lsr pc
   1ac14:	ldrdeq	r0, [r3], -r8
   1ac18:	andeq	r1, r4, r7, lsr pc
   1ac1c:	andeq	r1, r4, r4, lsr pc
   1ac20:	andeq	r1, r4, sp, ror #30
   1ac24:	muleq	r4, r9, pc	; <UNPREDICTABLE>
   1ac28:	ldrdeq	r1, [r4], -r5
   1ac2c:	andeq	r2, r4, r3
   1ac30:	andeq	r2, r4, r1, asr #32
   1ac34:	andeq	r9, r3, ip, ror #1
   1ac38:	mov	r2, r1
   1ac3c:	mov	r1, r0
   1ac40:	ldr	r0, [r0, #12]
   1ac44:	b	150e8 <__flatcc_fb_scoped_symbol_name@@Base>
   1ac48:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ac4c:	sub	sp, sp, #492	; 0x1ec
   1ac50:	add	r7, sp, #48	; 0x30
   1ac54:	mov	r4, r1
   1ac58:	mov	r5, r0
   1ac5c:	mov	r2, #220	; 0xdc
   1ac60:	mov	r1, #0
   1ac64:	mov	r0, r7
   1ac68:	add	sl, sp, #268	; 0x10c
   1ac6c:	bl	13fec <memset@plt>
   1ac70:	mov	r2, #220	; 0xdc
   1ac74:	mov	r1, #0
   1ac78:	mov	r0, sl
   1ac7c:	bl	13fec <memset@plt>
   1ac80:	mov	r0, r4
   1ac84:	mov	r1, r7
   1ac88:	bl	1ac38 <__flatcc_fb_gen_c_builder@@Base+0x624>
   1ac8c:	mov	r2, r7
   1ac90:	ldr	r1, [pc, #868]	; 1affc <__flatcc_fb_gen_c_builder@@Base+0x9e8>
   1ac94:	ldr	r0, [r5, #204]	; 0xcc
   1ac98:	bl	13fd4 <fprintf@plt>
   1ac9c:	ldr	r4, [r4, #20]
   1aca0:	mov	r3, #1
   1aca4:	mvn	fp, #0
   1aca8:	cmp	r4, #0
   1acac:	bne	1ad44 <__flatcc_fb_gen_c_builder@@Base+0x730>
   1acb0:	cmp	r3, #0
   1acb4:	bne	1acc4 <__flatcc_fb_gen_c_builder@@Base+0x6b0>
   1acb8:	ldr	r1, [r5, #204]	; 0xcc
   1acbc:	ldr	r0, [pc, #828]	; 1b000 <__flatcc_fb_gen_c_builder@@Base+0x9ec>
   1acc0:	bl	14070 <fputs@plt>
   1acc4:	ldr	r1, [r5, #204]	; 0xcc
   1acc8:	ldr	r0, [pc, #820]	; 1b004 <__flatcc_fb_gen_c_builder@@Base+0x9f0>
   1accc:	bl	14070 <fputs@plt>
   1acd0:	ldr	r1, [r5, #204]	; 0xcc
   1acd4:	ldr	r0, [pc, #812]	; 1b008 <__flatcc_fb_gen_c_builder@@Base+0x9f4>
   1acd8:	bl	14070 <fputs@plt>
   1acdc:	mov	r3, r7
   1ace0:	mov	r2, r7
   1ace4:	str	r7, [sp]
   1ace8:	ldr	r1, [pc, #796]	; 1b00c <__flatcc_fb_gen_c_builder@@Base+0x9f8>
   1acec:	ldr	r0, [r5, #204]	; 0xcc
   1acf0:	bl	13fd4 <fprintf@plt>
   1acf4:	mov	r3, r7
   1acf8:	mov	r2, r7
   1acfc:	str	r7, [sp]
   1ad00:	ldr	r1, [pc, #776]	; 1b010 <__flatcc_fb_gen_c_builder@@Base+0x9fc>
   1ad04:	ldr	r0, [r5, #204]	; 0xcc
   1ad08:	bl	13fd4 <fprintf@plt>
   1ad0c:	mov	r3, r7
   1ad10:	mov	r2, r7
   1ad14:	ldr	r1, [pc, #760]	; 1b014 <__flatcc_fb_gen_c_builder@@Base+0xa00>
   1ad18:	ldr	r0, [r5, #204]	; 0xcc
   1ad1c:	bl	13fd4 <fprintf@plt>
   1ad20:	str	r7, [sp]
   1ad24:	mov	r3, r5
   1ad28:	mov	r2, r7
   1ad2c:	ldr	r1, [pc, #740]	; 1b018 <__flatcc_fb_gen_c_builder@@Base+0xa04>
   1ad30:	ldr	r0, [r5, #204]	; 0xcc
   1ad34:	bl	13fd4 <fprintf@plt>
   1ad38:	mov	r0, #0
   1ad3c:	add	sp, sp, #492	; 0x1ec
   1ad40:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ad44:	ldrh	r2, [r4, #72]	; 0x48
   1ad48:	tst	r2, #4
   1ad4c:	bne	1ae08 <__flatcc_fb_gen_c_builder@@Base+0x7f4>
   1ad50:	cmp	r3, #0
   1ad54:	ldr	r1, [r5, #204]	; 0xcc
   1ad58:	ldrne	r0, [pc, #700]	; 1b01c <__flatcc_fb_gen_c_builder@@Base+0xa08>
   1ad5c:	ldreq	r0, [pc, #700]	; 1b020 <__flatcc_fb_gen_c_builder@@Base+0xa0c>
   1ad60:	bl	14070 <fputs@plt>
   1ad64:	ldrh	r6, [r4, #72]	; 0x48
   1ad68:	ldrh	r3, [r4, #24]
   1ad6c:	lsr	r6, r6, #8
   1ad70:	sub	r3, r3, #7
   1ad74:	and	r6, r6, #1
   1ad78:	cmp	r3, #8
   1ad7c:	ldrls	pc, [pc, r3, lsl #2]
   1ad80:	b	1adec <__flatcc_fb_gen_c_builder@@Base+0x7d8>
   1ad84:	andeq	sl, r1, r8, lsr #27
   1ad88:	muleq	r1, r0, lr
   1ad8c:	andeq	sl, r1, ip, asr #28
   1ad90:	andeq	sl, r1, r4, lsr lr
   1ad94:	andeq	sl, r1, ip, ror #27
   1ad98:	andeq	sl, r1, ip, ror #27
   1ad9c:	andeq	sl, r1, ip, ror #27
   1ada0:	andeq	sl, r1, ip, asr lr
   1ada4:	andeq	sl, r1, r0, lsl pc
   1ada8:	ldr	r0, [r4, #104]	; 0x68
   1adac:	cmp	r0, #0
   1adb0:	beq	1af54 <__flatcc_fb_gen_c_builder@@Base+0x940>
   1adb4:	mov	r1, sl
   1adb8:	bl	1ac38 <__flatcc_fb_gen_c_builder@@Base+0x624>
   1adbc:	ldr	r3, [r4, #104]	; 0x68
   1adc0:	ldrh	r3, [r3, #8]
   1adc4:	cmp	r3, #0
   1adc8:	ldrd	r2, [r4, #96]	; 0x60
   1adcc:	bne	1ae10 <__flatcc_fb_gen_c_builder@@Base+0x7fc>
   1add0:	str	sl, [sp, #8]
   1add4:	ldrh	r1, [r4, #74]	; 0x4a
   1add8:	ldr	r0, [r5, #204]	; 0xcc
   1addc:	str	r6, [sp]
   1ade0:	str	r1, [sp, #4]
   1ade4:	ldr	r1, [pc, #568]	; 1b024 <__flatcc_fb_gen_c_builder@@Base+0xa10>
   1ade8:	bl	13fd4 <fprintf@plt>
   1adec:	ldr	r2, [r4, #4]
   1adf0:	ldr	r1, [pc, #560]	; 1b028 <__flatcc_fb_gen_c_builder@@Base+0xa14>
   1adf4:	ldr	r0, [r5, #204]	; 0xcc
   1adf8:	ldr	r3, [r2]
   1adfc:	ldr	r2, [r2, #4]
   1ae00:	bl	13fd4 <fprintf@plt>
   1ae04:	mov	r3, #0
   1ae08:	ldr	r4, [r4]
   1ae0c:	b	1aca8 <__flatcc_fb_gen_c_builder@@Base+0x694>
   1ae10:	ldrh	r1, [r4, #74]	; 0x4a
   1ae14:	str	r1, [sp, #16]
   1ae18:	ldrd	r0, [r4, #88]	; 0x58
   1ae1c:	str	r6, [sp]
   1ae20:	strd	r0, [sp, #8]
   1ae24:	ldr	r1, [pc, #512]	; 1b02c <__flatcc_fb_gen_c_builder@@Base+0xa18>
   1ae28:	ldr	r0, [r5, #204]	; 0xcc
   1ae2c:	bl	13fd4 <fprintf@plt>
   1ae30:	b	1adec <__flatcc_fb_gen_c_builder@@Base+0x7d8>
   1ae34:	ldr	r1, [pc, #500]	; 1b030 <__flatcc_fb_gen_c_builder@@Base+0xa1c>
   1ae38:	ldrd	r2, [r4, #96]	; 0x60
   1ae3c:	str	r6, [sp]
   1ae40:	ldr	r0, [r5, #204]	; 0xcc
   1ae44:	bl	13fd4 <fprintf@plt>
   1ae48:	b	1adec <__flatcc_fb_gen_c_builder@@Base+0x7d8>
   1ae4c:	ldrd	r2, [r4, #96]	; 0x60
   1ae50:	ldr	r1, [pc, #476]	; 1b034 <__flatcc_fb_gen_c_builder@@Base+0xa20>
   1ae54:	str	r6, [sp]
   1ae58:	b	1ae40 <__flatcc_fb_gen_c_builder@@Base+0x82c>
   1ae5c:	mov	r1, sl
   1ae60:	ldr	r0, [r4, #16]
   1ae64:	bl	1ac38 <__flatcc_fb_gen_c_builder@@Base+0x624>
   1ae68:	ldr	r3, [r4, #16]
   1ae6c:	ldrh	r3, [r3, #8]
   1ae70:	cmp	r3, #4
   1ae74:	ldrls	pc, [pc, r3, lsl #2]
   1ae78:	b	1aedc <__flatcc_fb_gen_c_builder@@Base+0x8c8>
   1ae7c:			; <UNDEFINED> instruction: 0x0001aeb4
   1ae80:	muleq	r1, r0, lr
   1ae84:	ldrdeq	sl, [r1], -ip
   1ae88:	muleq	r1, r0, lr
   1ae8c:	andeq	sl, r1, ip, asr #29
   1ae90:	ldrh	r1, [r4, #74]	; 0x4a
   1ae94:	ldrd	r2, [r4, #96]	; 0x60
   1ae98:	str	r1, [sp, #8]
   1ae9c:	ldrd	r0, [r4, #88]	; 0x58
   1aea0:	strd	r0, [sp]
   1aea4:	ldr	r1, [pc, #396]	; 1b038 <__flatcc_fb_gen_c_builder@@Base+0xa24>
   1aea8:	ldr	r0, [r5, #204]	; 0xcc
   1aeac:	bl	13fd4 <fprintf@plt>
   1aeb0:	b	1adec <__flatcc_fb_gen_c_builder@@Base+0x7d8>
   1aeb4:	ldr	r1, [pc, #384]	; 1b03c <__flatcc_fb_gen_c_builder@@Base+0xa28>
   1aeb8:	ldrd	r2, [r4, #96]	; 0x60
   1aebc:	stm	sp, {r6, sl}
   1aec0:	ldr	r0, [r5, #204]	; 0xcc
   1aec4:	bl	13fd4 <fprintf@plt>
   1aec8:	b	1adec <__flatcc_fb_gen_c_builder@@Base+0x7d8>
   1aecc:	ldrd	r2, [r4, #96]	; 0x60
   1aed0:	ldr	r1, [pc, #360]	; 1b040 <__flatcc_fb_gen_c_builder@@Base+0xa2c>
   1aed4:	stm	sp, {r6, sl}
   1aed8:	b	1aec0 <__flatcc_fb_gen_c_builder@@Base+0x8ac>
   1aedc:	ldr	r0, [pc, #352]	; 1b044 <__flatcc_fb_gen_c_builder@@Base+0xa30>
   1aee0:	ldr	r3, [pc, #352]	; 1b048 <__flatcc_fb_gen_c_builder@@Base+0xa34>
   1aee4:	ldr	r2, [pc, #352]	; 1b04c <__flatcc_fb_gen_c_builder@@Base+0xa38>
   1aee8:	str	r3, [sp]
   1aeec:	ldr	r1, [pc, #348]	; 1b050 <__flatcc_fb_gen_c_builder@@Base+0xa3c>
   1aef0:	mov	r3, #178	; 0xb2
   1aef4:	ldr	r0, [r0]
   1aef8:	bl	13fd4 <fprintf@plt>
   1aefc:	ldr	r3, [pc, #336]	; 1b054 <__flatcc_fb_gen_c_builder@@Base+0xa40>
   1af00:	mov	r2, #178	; 0xb2
   1af04:	ldr	r1, [pc, #320]	; 1b04c <__flatcc_fb_gen_c_builder@@Base+0xa38>
   1af08:	ldr	r0, [pc, #328]	; 1b058 <__flatcc_fb_gen_c_builder@@Base+0xa44>
   1af0c:	bl	14094 <__assert_fail@plt>
   1af10:	mov	r1, sl
   1af14:	ldr	r0, [r4, #16]
   1af18:	bl	1ac38 <__flatcc_fb_gen_c_builder@@Base+0x624>
   1af1c:	ldr	r3, [r4, #16]
   1af20:	ldrh	r3, [r3, #8]
   1af24:	cmp	r3, #4
   1af28:	ldrls	pc, [pc, r3, lsl #2]
   1af2c:	b	1afd0 <__flatcc_fb_gen_c_builder@@Base+0x9bc>
   1af30:	andeq	sl, r1, r4, asr #30
   1af34:	andeq	sl, r1, r4, asr pc
   1af38:	ldrdeq	sl, [r1], -r0
   1af3c:	andeq	sl, r1, r4, asr pc
   1af40:	andeq	sl, r1, r0, asr #31
   1af44:	ldrd	r2, [r4, #96]	; 0x60
   1af48:	ldr	r1, [pc, #268]	; 1b05c <__flatcc_fb_gen_c_builder@@Base+0xa48>
   1af4c:	stm	sp, {r6, sl}
   1af50:	b	1aec0 <__flatcc_fb_gen_c_builder@@Base+0x8ac>
   1af54:	ldr	r3, [r5, #204]	; 0xcc
   1af58:	ldrd	r8, [r4, #88]	; 0x58
   1af5c:	str	r3, [sp, #40]	; 0x28
   1af60:	ldrd	r2, [r4, #96]	; 0x60
   1af64:	strd	r2, [sp, #32]
   1af68:	ldrh	r3, [r4, #74]	; 0x4a
   1af6c:	str	r3, [sp, #44]	; 0x2c
   1af70:	orrs	r3, r8, r9
   1af74:	moveq	r0, fp
   1af78:	moveq	r1, #0
   1af7c:	beq	1af94 <__flatcc_fb_gen_c_builder@@Base+0x980>
   1af80:	mov	r2, r8
   1af84:	mov	r3, r9
   1af88:	mov	r0, fp
   1af8c:	mov	r1, #0
   1af90:	bl	2f27c <fb_value_set_visit@@Base+0x834>
   1af94:	ldr	r3, [sp, #44]	; 0x2c
   1af98:	str	r0, [sp, #24]
   1af9c:	str	r1, [sp, #28]
   1afa0:	str	r3, [sp, #16]
   1afa4:	strd	r8, [sp, #8]
   1afa8:	str	r6, [sp]
   1afac:	ldrd	r2, [sp, #32]
   1afb0:	ldr	r1, [pc, #168]	; 1b060 <__flatcc_fb_gen_c_builder@@Base+0xa4c>
   1afb4:	ldr	r0, [sp, #40]	; 0x28
   1afb8:	bl	13fd4 <fprintf@plt>
   1afbc:	b	1adec <__flatcc_fb_gen_c_builder@@Base+0x7d8>
   1afc0:	ldrd	r2, [r4, #96]	; 0x60
   1afc4:	ldr	r1, [pc, #152]	; 1b064 <__flatcc_fb_gen_c_builder@@Base+0xa50>
   1afc8:	stm	sp, {r6, sl}
   1afcc:	b	1aec0 <__flatcc_fb_gen_c_builder@@Base+0x8ac>
   1afd0:	ldr	r0, [pc, #108]	; 1b044 <__flatcc_fb_gen_c_builder@@Base+0xa30>
   1afd4:	ldr	r3, [pc, #140]	; 1b068 <__flatcc_fb_gen_c_builder@@Base+0xa54>
   1afd8:	ldr	r2, [pc, #108]	; 1b04c <__flatcc_fb_gen_c_builder@@Base+0xa38>
   1afdc:	str	r3, [sp]
   1afe0:	ldr	r1, [pc, #104]	; 1b050 <__flatcc_fb_gen_c_builder@@Base+0xa3c>
   1afe4:	mov	r3, #202	; 0xca
   1afe8:	ldr	r0, [r0]
   1afec:	bl	13fd4 <fprintf@plt>
   1aff0:	ldr	r3, [pc, #92]	; 1b054 <__flatcc_fb_gen_c_builder@@Base+0xa40>
   1aff4:	mov	r2, #202	; 0xca
   1aff8:	b	1af04 <__flatcc_fb_gen_c_builder@@Base+0x8f0>
   1affc:	andeq	r2, r4, r9, asr #1
   1b000:	andeq	r2, r4, r2, ror #8
   1b004:	andeq	r2, r4, r2, ror r4
   1b008:	andeq	r6, r4, fp, ror #2
   1b00c:	muleq	r4, r0, r4
   1b010:	andeq	r2, r4, r0, lsr r5
   1b014:	ldrdeq	r2, [r4], -fp
   1b018:	muleq	r4, r2, r6
   1b01c:	andeq	r2, r4, pc, lsl #2
   1b020:	andeq	r2, r4, ip, lsr #2
   1b024:	andeq	r2, r4, r3, ror r1
   1b028:	ldrdeq	r3, [r4], -fp
   1b02c:			; <UNDEFINED> instruction: 0x000421bc
   1b030:	andeq	r2, r4, lr, lsr r2
   1b034:	andeq	r2, r4, r7, ror #4
   1b038:	andeq	r2, r4, fp, asr #2
   1b03c:	muleq	r4, r7, r2
   1b040:	ldrdeq	r2, [r4], -r1
   1b044:	strheq	fp, [r5], -r0
   1b048:	andeq	r2, r4, pc, asr r3
   1b04c:	andeq	r2, r4, sp, lsl #6
   1b050:	andeq	r0, r3, lr, ror #20
   1b054:	andeq	r2, r4, r3, lsr #1
   1b058:	andeq	r9, r3, sp, asr #1
   1b05c:	muleq	r4, fp, r3
   1b060:	strdeq	r2, [r4], -ip
   1b064:	ldrdeq	r2, [r4], -ip
   1b068:	andeq	r2, r4, pc, lsl r4
   1b06c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1b070:	sub	sp, sp, #464	; 0x1d0
   1b074:	mov	r4, r1
   1b078:	mov	r5, r0
   1b07c:	mov	r2, #220	; 0xdc
   1b080:	mov	r1, #0
   1b084:	add	r0, sp, #24
   1b088:	bl	13fec <memset@plt>
   1b08c:	mov	r2, #220	; 0xdc
   1b090:	mov	r1, #0
   1b094:	add	r0, sp, #244	; 0xf4
   1b098:	bl	13fec <memset@plt>
   1b09c:	mov	r0, r4
   1b0a0:	add	r1, sp, #24
   1b0a4:	bl	1ac38 <__flatcc_fb_gen_c_builder@@Base+0x624>
   1b0a8:	add	r2, sp, #24
   1b0ac:	ldr	r1, [pc, #332]	; 1b200 <__flatcc_fb_gen_c_builder@@Base+0xbec>
   1b0b0:	ldr	r0, [r5]
   1b0b4:	bl	13fd4 <fprintf@plt>
   1b0b8:	ldr	r8, [pc, #324]	; 1b204 <__flatcc_fb_gen_c_builder@@Base+0xbf0>
   1b0bc:	ldr	r4, [r4, #20]
   1b0c0:	ldr	r9, [pc, #320]	; 1b208 <__flatcc_fb_gen_c_builder@@Base+0xbf4>
   1b0c4:	ldr	sl, [pc, #320]	; 1b20c <__flatcc_fb_gen_c_builder@@Base+0xbf8>
   1b0c8:	cmp	r4, #0
   1b0cc:	bne	1b0e8 <__flatcc_fb_gen_c_builder@@Base+0xad4>
   1b0d0:	ldr	r1, [r5]
   1b0d4:	ldr	r0, [pc, #308]	; 1b210 <__flatcc_fb_gen_c_builder@@Base+0xbfc>
   1b0d8:	bl	14070 <fputs@plt>
   1b0dc:	mov	r0, r4
   1b0e0:	add	sp, sp, #464	; 0x1d0
   1b0e4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1b0e8:	ldr	r3, [r4, #4]
   1b0ec:	ldr	r6, [r3, #4]
   1b0f0:	ldr	r7, [r3]
   1b0f4:	ldrh	r3, [r4, #24]
   1b0f8:	cmp	r3, #10
   1b0fc:	beq	1b1b8 <__flatcc_fb_gen_c_builder@@Base+0xba4>
   1b100:	cmp	r3, #14
   1b104:	beq	1b118 <__flatcc_fb_gen_c_builder@@Base+0xb04>
   1b108:	cmp	r3, #0
   1b10c:	bne	1b1d4 <__flatcc_fb_gen_c_builder@@Base+0xbc0>
   1b110:	ldr	r4, [r4]
   1b114:	b	1b0c8 <__flatcc_fb_gen_c_builder@@Base+0xab4>
   1b118:	add	r1, sp, #244	; 0xf4
   1b11c:	ldr	r0, [r4, #16]
   1b120:	bl	1ac38 <__flatcc_fb_gen_c_builder@@Base+0x624>
   1b124:	ldr	r3, [r4, #16]
   1b128:	ldrh	r2, [r3, #8]
   1b12c:	cmp	r2, #0
   1b130:	beq	1b170 <__flatcc_fb_gen_c_builder@@Base+0xb5c>
   1b134:	cmp	r2, #1
   1b138:	beq	1b18c <__flatcc_fb_gen_c_builder@@Base+0xb78>
   1b13c:	ldr	r0, [pc, #208]	; 1b214 <__flatcc_fb_gen_c_builder@@Base+0xc00>
   1b140:	ldr	r3, [pc, #208]	; 1b218 <__flatcc_fb_gen_c_builder@@Base+0xc04>
   1b144:	ldr	r2, [pc, #208]	; 1b21c <__flatcc_fb_gen_c_builder@@Base+0xc08>
   1b148:	str	r3, [sp]
   1b14c:	ldr	r1, [pc, #204]	; 1b220 <__flatcc_fb_gen_c_builder@@Base+0xc0c>
   1b150:	mov	r3, #74	; 0x4a
   1b154:	ldr	r0, [r0]
   1b158:	bl	13fd4 <fprintf@plt>
   1b15c:	ldr	r3, [pc, #192]	; 1b224 <__flatcc_fb_gen_c_builder@@Base+0xc10>
   1b160:	mov	r2, #74	; 0x4a
   1b164:	ldr	r1, [pc, #176]	; 1b21c <__flatcc_fb_gen_c_builder@@Base+0xc08>
   1b168:	ldr	r0, [pc, #184]	; 1b228 <__flatcc_fb_gen_c_builder@@Base+0xc14>
   1b16c:	bl	14094 <__assert_fail@plt>
   1b170:	stm	sp, {r6, r7}
   1b174:	add	r3, sp, #244	; 0xf4
   1b178:	ldr	r2, [r4, #48]	; 0x30
   1b17c:	mov	r1, r9
   1b180:	ldr	r0, [r5]
   1b184:	bl	13fd4 <fprintf@plt>
   1b188:	b	1b110 <__flatcc_fb_gen_c_builder@@Base+0xafc>
   1b18c:	str	r7, [sp, #16]
   1b190:	str	r6, [sp, #12]
   1b194:	ldrh	r2, [r3, #104]	; 0x68
   1b198:	mov	r1, sl
   1b19c:	ldr	r0, [r5]
   1b1a0:	str	r2, [sp, #8]
   1b1a4:	ldrd	r2, [r3, #112]	; 0x70
   1b1a8:	strd	r2, [sp]
   1b1ac:	ldr	r2, [r4, #48]	; 0x30
   1b1b0:	bl	13fd4 <fprintf@plt>
   1b1b4:	b	1b110 <__flatcc_fb_gen_c_builder@@Base+0xafc>
   1b1b8:	str	r7, [sp]
   1b1bc:	mov	r3, r6
   1b1c0:	ldr	r2, [r4, #48]	; 0x30
   1b1c4:	mov	r1, r8
   1b1c8:	ldr	r0, [r5]
   1b1cc:	bl	13fd4 <fprintf@plt>
   1b1d0:	b	1b110 <__flatcc_fb_gen_c_builder@@Base+0xafc>
   1b1d4:	ldr	r0, [pc, #56]	; 1b214 <__flatcc_fb_gen_c_builder@@Base+0xc00>
   1b1d8:	ldr	r3, [pc, #76]	; 1b22c <__flatcc_fb_gen_c_builder@@Base+0xc18>
   1b1dc:	ldr	r2, [pc, #56]	; 1b21c <__flatcc_fb_gen_c_builder@@Base+0xc08>
   1b1e0:	str	r3, [sp]
   1b1e4:	ldr	r1, [pc, #52]	; 1b220 <__flatcc_fb_gen_c_builder@@Base+0xc0c>
   1b1e8:	mov	r3, #83	; 0x53
   1b1ec:	ldr	r0, [r0]
   1b1f0:	bl	13fd4 <fprintf@plt>
   1b1f4:	ldr	r3, [pc, #40]	; 1b224 <__flatcc_fb_gen_c_builder@@Base+0xc10>
   1b1f8:	mov	r2, #83	; 0x53
   1b1fc:	b	1b164 <__flatcc_fb_gen_c_builder@@Base+0xb50>
   1b200:	andeq	r2, r4, r0, asr r7
   1b204:	andeq	r2, r4, r6, lsl #17
   1b208:			; <UNDEFINED> instruction: 0x000427b0
   1b20c:	andeq	r2, r4, r0, lsl #16
   1b210:	strdeq	r2, [r4], -r9
   1b214:	strheq	fp, [r5], -r0
   1b218:	andeq	r2, r4, sl, asr #16
   1b21c:	andeq	r2, r4, sp, lsl #6
   1b220:	andeq	r0, r3, lr, ror #20
   1b224:	strheq	r2, [r4], -r6
   1b228:	andeq	r9, r3, sp, asr #1
   1b22c:	andeq	r2, r4, r6, asr #17

0001b230 <__flatcc_fb_gen_c_verifier@@Base>:
   1b230:	ldr	r3, [r0, #208]	; 0xd0
   1b234:	push	{r4, r5, r6, r7, r8, lr}
   1b238:	mov	r4, r0
   1b23c:	ldr	r3, [r3, #164]	; 0xa4
   1b240:	sub	sp, sp, #240	; 0xf0
   1b244:	mov	r2, r3
   1b248:	ldr	r1, [pc, #608]	; 1b4b0 <__flatcc_fb_gen_c_verifier@@Base+0x280>
   1b24c:	ldr	r0, [r0, #204]	; 0xcc
   1b250:	bl	13fd4 <fprintf@plt>
   1b254:	ldr	r1, [r4, #204]	; 0xcc
   1b258:	ldr	r0, [pc, #596]	; 1b4b4 <__flatcc_fb_gen_c_verifier@@Base+0x284>
   1b25c:	bl	14070 <fputs@plt>
   1b260:	ldr	r3, [r4, #208]	; 0xd0
   1b264:	ldr	r1, [pc, #588]	; 1b4b8 <__flatcc_fb_gen_c_verifier@@Base+0x288>
   1b268:	ldr	r0, [r4, #204]	; 0xcc
   1b26c:	ldr	r2, [r3, #164]	; 0xa4
   1b270:	bl	13fd4 <fprintf@plt>
   1b274:	ldr	r3, [r4, #208]	; 0xd0
   1b278:	ldr	r1, [pc, #572]	; 1b4bc <__flatcc_fb_gen_c_verifier@@Base+0x28c>
   1b27c:	ldr	r0, [r4, #204]	; 0xcc
   1b280:	ldr	r2, [r3, #160]	; 0xa0
   1b284:	bl	13fd4 <fprintf@plt>
   1b288:	ldr	r1, [r4, #204]	; 0xcc
   1b28c:	ldr	r0, [pc, #556]	; 1b4c0 <__flatcc_fb_gen_c_verifier@@Base+0x290>
   1b290:	bl	14070 <fputs@plt>
   1b294:	ldr	r1, [r4, #204]	; 0xcc
   1b298:	ldr	r0, [pc, #548]	; 1b4c4 <__flatcc_fb_gen_c_verifier@@Base+0x294>
   1b29c:	bl	14070 <fputs@plt>
   1b2a0:	ldr	r2, [pc, #544]	; 1b4c8 <__flatcc_fb_gen_c_verifier@@Base+0x298>
   1b2a4:	ldr	r1, [pc, #544]	; 1b4cc <__flatcc_fb_gen_c_verifier@@Base+0x29c>
   1b2a8:	mov	r0, r4
   1b2ac:	bl	14f24 <__flatcc_fb_gen_c_includes@@Base>
   1b2b0:	ldr	r3, [r4, #212]	; 0xd4
   1b2b4:	ldr	r3, [r3, #140]	; 0x8c
   1b2b8:	cmp	r3, #0
   1b2bc:	beq	1b2cc <__flatcc_fb_gen_c_verifier@@Base+0x9c>
   1b2c0:	ldr	r1, [r4, #204]	; 0xcc
   1b2c4:	ldr	r0, [pc, #516]	; 1b4d0 <__flatcc_fb_gen_c_verifier@@Base+0x2a0>
   1b2c8:	bl	14070 <fputs@plt>
   1b2cc:	ldr	r1, [r4, #204]	; 0xcc
   1b2d0:	mov	r0, #10
   1b2d4:	bl	14034 <fputc@plt>
   1b2d8:	mov	r2, #220	; 0xdc
   1b2dc:	mov	r1, #0
   1b2e0:	add	r0, sp, #20
   1b2e4:	bl	13fec <memset@plt>
   1b2e8:	ldr	r3, [r4, #208]	; 0xd0
   1b2ec:	ldr	r6, [pc, #480]	; 1b4d4 <__flatcc_fb_gen_c_verifier@@Base+0x2a4>
   1b2f0:	ldr	r5, [r3, #40]	; 0x28
   1b2f4:	cmp	r5, #0
   1b2f8:	bne	1b384 <__flatcc_fb_gen_c_verifier@@Base+0x154>
   1b2fc:	ldr	r1, [r4, #204]	; 0xcc
   1b300:	mov	r0, #10
   1b304:	bl	14034 <fputc@plt>
   1b308:	ldr	r3, [r4, #208]	; 0xd0
   1b30c:	add	r6, r4, #204	; 0xcc
   1b310:	ldr	r5, [r3, #40]	; 0x28
   1b314:	cmp	r5, #0
   1b318:	bne	1b3b4 <__flatcc_fb_gen_c_verifier@@Base+0x184>
   1b31c:	ldr	r3, [r4, #208]	; 0xd0
   1b320:	ldr	r6, [pc, #432]	; 1b4d8 <__flatcc_fb_gen_c_verifier@@Base+0x2a8>
   1b324:	ldr	r7, [pc, #432]	; 1b4dc <__flatcc_fb_gen_c_verifier@@Base+0x2ac>
   1b328:	ldr	r5, [r3, #40]	; 0x28
   1b32c:	ldr	r8, [pc, #428]	; 1b4e0 <__flatcc_fb_gen_c_verifier@@Base+0x2b0>
   1b330:	cmp	r5, #0
   1b334:	bne	1b3d4 <__flatcc_fb_gen_c_verifier@@Base+0x1a4>
   1b338:	ldr	r3, [r4, #208]	; 0xd0
   1b33c:	ldr	r5, [r3, #40]	; 0x28
   1b340:	cmp	r5, #0
   1b344:	bne	1b490 <__flatcc_fb_gen_c_verifier@@Base+0x260>
   1b348:	ldr	r3, [r4, #212]	; 0xd4
   1b34c:	ldr	r3, [r3, #140]	; 0x8c
   1b350:	cmp	r3, #0
   1b354:	beq	1b364 <__flatcc_fb_gen_c_verifier@@Base+0x134>
   1b358:	ldr	r1, [r4, #204]	; 0xcc
   1b35c:	ldr	r0, [pc, #384]	; 1b4e4 <__flatcc_fb_gen_c_verifier@@Base+0x2b4>
   1b360:	bl	14070 <fputs@plt>
   1b364:	ldr	r3, [r4, #208]	; 0xd0
   1b368:	ldr	r1, [pc, #376]	; 1b4e8 <__flatcc_fb_gen_c_verifier@@Base+0x2b8>
   1b36c:	ldr	r0, [r4, #204]	; 0xcc
   1b370:	ldr	r2, [r3, #164]	; 0xa4
   1b374:	bl	13fd4 <fprintf@plt>
   1b378:	mov	r0, #0
   1b37c:	add	sp, sp, #240	; 0xf0
   1b380:	pop	{r4, r5, r6, r7, r8, pc}
   1b384:	ldrh	r3, [r5, #8]
   1b388:	cmp	r3, #0
   1b38c:	bne	1b3ac <__flatcc_fb_gen_c_verifier@@Base+0x17c>
   1b390:	add	r1, sp, #20
   1b394:	mov	r0, r5
   1b398:	bl	1ac38 <__flatcc_fb_gen_c_builder@@Base+0x624>
   1b39c:	add	r2, sp, #20
   1b3a0:	mov	r1, r6
   1b3a4:	ldr	r0, [r4, #204]	; 0xcc
   1b3a8:	bl	13fd4 <fprintf@plt>
   1b3ac:	ldr	r5, [r5]
   1b3b0:	b	1b2f4 <__flatcc_fb_gen_c_verifier@@Base+0xc4>
   1b3b4:	ldrh	r3, [r5, #8]
   1b3b8:	cmp	r3, #4
   1b3bc:	bne	1b3cc <__flatcc_fb_gen_c_verifier@@Base+0x19c>
   1b3c0:	mov	r1, r5
   1b3c4:	mov	r0, r6
   1b3c8:	bl	1b06c <__flatcc_fb_gen_c_builder@@Base+0xa58>
   1b3cc:	ldr	r5, [r5]
   1b3d0:	b	1b314 <__flatcc_fb_gen_c_verifier@@Base+0xe4>
   1b3d4:	ldrh	r3, [r5, #8]
   1b3d8:	cmp	r3, #1
   1b3dc:	bne	1b488 <__flatcc_fb_gen_c_verifier@@Base+0x258>
   1b3e0:	mov	r2, #220	; 0xdc
   1b3e4:	mov	r1, #0
   1b3e8:	add	r0, sp, #20
   1b3ec:	bl	13fec <memset@plt>
   1b3f0:	add	r1, sp, #20
   1b3f4:	mov	r0, r5
   1b3f8:	bl	1ac38 <__flatcc_fb_gen_c_builder@@Base+0x624>
   1b3fc:	ldrh	r3, [r5, #104]	; 0x68
   1b400:	mov	r1, r6
   1b404:	ldr	r0, [r4, #204]	; 0xcc
   1b408:	str	r3, [sp, #8]
   1b40c:	ldrd	r2, [r5, #112]	; 0x70
   1b410:	strd	r2, [sp]
   1b414:	add	r3, sp, #20
   1b418:	mov	r2, r3
   1b41c:	bl	13fd4 <fprintf@plt>
   1b420:	ldrh	r3, [r5, #104]	; 0x68
   1b424:	mov	r1, r7
   1b428:	ldr	r0, [r4, #204]	; 0xcc
   1b42c:	str	r3, [sp, #8]
   1b430:	ldrd	r2, [r5, #112]	; 0x70
   1b434:	strd	r2, [sp]
   1b438:	add	r3, sp, #20
   1b43c:	mov	r2, r3
   1b440:	bl	13fd4 <fprintf@plt>
   1b444:	ldrh	r3, [r5, #104]	; 0x68
   1b448:	mov	r1, r8
   1b44c:	ldr	r0, [r4, #204]	; 0xcc
   1b450:	str	r3, [sp, #8]
   1b454:	ldrd	r2, [r5, #112]	; 0x70
   1b458:	strd	r2, [sp]
   1b45c:	mov	r3, r4
   1b460:	add	r2, sp, #20
   1b464:	bl	13fd4 <fprintf@plt>
   1b468:	ldrh	r3, [r5, #104]	; 0x68
   1b46c:	ldr	r1, [pc, #120]	; 1b4ec <__flatcc_fb_gen_c_verifier@@Base+0x2bc>
   1b470:	ldr	r0, [r4, #204]	; 0xcc
   1b474:	str	r3, [sp, #8]
   1b478:	ldrd	r2, [r5, #112]	; 0x70
   1b47c:	strd	r2, [sp]
   1b480:	add	r2, sp, #20
   1b484:	bl	13fd4 <fprintf@plt>
   1b488:	ldr	r5, [r5]
   1b48c:	b	1b330 <__flatcc_fb_gen_c_verifier@@Base+0x100>
   1b490:	ldrh	r3, [r5, #8]
   1b494:	cmp	r3, #0
   1b498:	bne	1b4a8 <__flatcc_fb_gen_c_verifier@@Base+0x278>
   1b49c:	mov	r1, r5
   1b4a0:	mov	r0, r4
   1b4a4:	bl	1ac48 <__flatcc_fb_gen_c_builder@@Base+0x634>
   1b4a8:	ldr	r5, [r5]
   1b4ac:	b	1b340 <__flatcc_fb_gen_c_verifier@@Base+0x110>
   1b4b0:	andeq	r2, r4, r9, lsr #18
   1b4b4:	andeq	r1, r3, r4, asr #25
   1b4b8:	andeq	r1, r4, fp, asr #28
   1b4bc:	andeq	r1, r4, r0, ror #28
   1b4c0:	andeq	r7, r3, r9, lsl lr
   1b4c4:	andeq	r2, r4, r6, asr r9
   1b4c8:	andeq	r2, r4, fp, ror r9
   1b4cc:	andeq	r0, r3, r5, lsr r7
   1b4d0:	ldrdeq	r1, [r3], -r3
   1b4d4:	andeq	r2, r4, r7, lsl #19
   1b4d8:	andeq	r2, r4, ip, asr #19
   1b4dc:	andeq	r2, r4, r5, ror #20
   1b4e0:	andeq	r2, r4, r9, lsl #22
   1b4e4:			; <UNDEFINED> instruction: 0x00037bbd
   1b4e8:	andeq	r2, r4, r0, ror ip
   1b4ec:	andeq	r2, r4, r0, asr #23
   1b4f0:	ldr	ip, [r0, #4]
   1b4f4:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b4f8:	cmp	ip, r1
   1b4fc:	movlt	r5, #0
   1b500:	movlt	r4, r5
   1b504:	blt	1b564 <__flatcc_fb_gen_c_verifier@@Base+0x334>
   1b508:	sub	r4, ip, r1
   1b50c:	cmp	r4, #8
   1b510:	movge	r4, #8
   1b514:	ldr	r5, [r0]
   1b518:	rsb	r6, r4, #8
   1b51c:	add	r5, r5, r1
   1b520:	lsl	r6, r6, #3
   1b524:	mov	sl, r3
   1b528:	mov	fp, r2
   1b52c:	add	r3, r5, r4
   1b530:	mov	r7, r6
   1b534:	mov	r8, #0
   1b538:	mov	r9, #0
   1b53c:	cmp	r7, #64	; 0x40
   1b540:	bne	1b588 <__flatcc_fb_gen_c_verifier@@Base+0x358>
   1b544:	strd	r8, [fp]
   1b548:	mov	r2, r6
   1b54c:	mov	r0, #1
   1b550:	mov	r1, #0
   1b554:	bl	2ec58 <fb_value_set_visit@@Base+0x210>
   1b558:	rsbs	r0, r0, #0
   1b55c:	rsc	r1, r1, #0
   1b560:	strd	r0, [sl]
   1b564:	ldr	r3, [sp, #48]	; 0x30
   1b568:	mov	r0, r4
   1b56c:	cmp	r3, #0
   1b570:	strne	r5, [r3]
   1b574:	ldr	r3, [sp, #52]	; 0x34
   1b578:	cmp	r3, #0
   1b57c:	strne	r4, [r3]
   1b580:	add	sp, sp, #12
   1b584:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b588:	ldrb	r0, [r3, #-1]!
   1b58c:	mov	r2, r7
   1b590:	mov	r1, #0
   1b594:	str	r3, [sp, #4]
   1b598:	bl	2ec58 <fb_value_set_visit@@Base+0x210>
   1b59c:	add	r7, r7, #8
   1b5a0:	ldr	r3, [sp, #4]
   1b5a4:	orr	r8, r8, r0
   1b5a8:	orr	r9, r9, r1
   1b5ac:	b	1b53c <__flatcc_fb_gen_c_verifier@@Base+0x30c>
   1b5b0:	ldrh	r3, [r0, #24]
   1b5b4:	sub	r3, r3, #14
   1b5b8:	cmp	r3, #1
   1b5bc:	ldrls	r3, [r0, #16]
   1b5c0:	ldrhls	r0, [r3, #8]
   1b5c4:	subls	r0, r0, #4
   1b5c8:	clzls	r0, r0
   1b5cc:	lsrls	r0, r0, #5
   1b5d0:	movhi	r0, #0
   1b5d4:	bx	lr
   1b5d8:	push	{r1, r2, r3}
   1b5dc:	ldr	r3, [r0, #212]	; 0xd4
   1b5e0:	push	{r0, r1, r4, r5, r6, r7, r8, r9, lr}
   1b5e4:	mov	r4, r0
   1b5e8:	ldr	r7, [r0, #220]	; 0xdc
   1b5ec:	ldr	r0, [pc, #160]	; 1b694 <__flatcc_fb_gen_c_verifier@@Base+0x464>
   1b5f0:	ldr	r5, [r3, #176]	; 0xb0
   1b5f4:	ldr	r6, [sp, #36]	; 0x24
   1b5f8:	ldrb	r3, [r0]
   1b5fc:	cmp	r3, #0
   1b600:	bne	1b610 <__flatcc_fb_gen_c_verifier@@Base+0x3e0>
   1b604:	mov	r2, #64	; 0x40
   1b608:	mov	r1, #32
   1b60c:	bl	13fec <memset@plt>
   1b610:	ldrb	r3, [r6]
   1b614:	cmp	r3, #0
   1b618:	beq	1b65c <__flatcc_fb_gen_c_verifier@@Base+0x42c>
   1b61c:	mul	r5, r5, r7
   1b620:	ldr	r9, [pc, #112]	; 1b698 <__flatcc_fb_gen_c_verifier@@Base+0x468>
   1b624:	ldr	r7, [pc, #104]	; 1b694 <__flatcc_fb_gen_c_verifier@@Base+0x464>
   1b628:	mov	r8, #64	; 0x40
   1b62c:	cmp	r5, #64	; 0x40
   1b630:	bgt	1b678 <__flatcc_fb_gen_c_verifier@@Base+0x448>
   1b634:	mov	r2, r5
   1b638:	ldr	r1, [pc, #88]	; 1b698 <__flatcc_fb_gen_c_verifier@@Base+0x468>
   1b63c:	ldr	r3, [pc, #80]	; 1b694 <__flatcc_fb_gen_c_verifier@@Base+0x464>
   1b640:	ldr	r0, [r4, #204]	; 0xcc
   1b644:	bl	13fd4 <fprintf@plt>
   1b648:	add	r2, sp, #40	; 0x28
   1b64c:	mov	r1, r6
   1b650:	ldr	r0, [r4, #204]	; 0xcc
   1b654:	str	r2, [sp, #4]
   1b658:	bl	14028 <vfprintf@plt>
   1b65c:	ldr	r1, [r4, #204]	; 0xcc
   1b660:	mov	r0, #10
   1b664:	bl	14034 <fputc@plt>
   1b668:	add	sp, sp, #8
   1b66c:	pop	{r4, r5, r6, r7, r8, r9, lr}
   1b670:	add	sp, sp, #12
   1b674:	bx	lr
   1b678:	mov	r3, r7
   1b67c:	mov	r2, r8
   1b680:	mov	r1, r9
   1b684:	ldr	r0, [r4, #204]	; 0xcc
   1b688:	bl	13fd4 <fprintf@plt>
   1b68c:	sub	r5, r5, #64	; 0x40
   1b690:	b	1b62c <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1b694:	strheq	fp, [r5], -r9
   1b698:	ldrdeq	r9, [r3], -sp
   1b69c:	ldr	r1, [pc]	; 1b6a4 <__flatcc_fb_gen_c_verifier@@Base+0x474>
   1b6a0:	b	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1b6a4:	andeq	r2, r4, r8, lsl lr
   1b6a8:	b	1b69c <__flatcc_fb_gen_c_verifier@@Base+0x46c>
   1b6ac:	ldr	r1, [pc]	; 1b6b4 <__flatcc_fb_gen_c_verifier@@Base+0x484>
   1b6b0:	b	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1b6b4:	andeq	r2, r4, sl, lsr #28
   1b6b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b6bc:	mov	r9, r3
   1b6c0:	sub	r6, r9, r2
   1b6c4:	add	r6, r6, #1
   1b6c8:	sub	sp, sp, #44	; 0x2c
   1b6cc:	add	r6, r6, r6, lsr #31
   1b6d0:	add	r3, sp, #40	; 0x28
   1b6d4:	mov	r5, r1
   1b6d8:	mov	r4, r0
   1b6dc:	mov	r1, #0
   1b6e0:	mov	r0, #0
   1b6e4:	add	r6, r2, r6, asr #1
   1b6e8:	strd	r0, [r3, #-8]!
   1b6ec:	strd	r0, [sp, #24]
   1b6f0:	mov	r8, r2
   1b6f4:	ldr	r0, [r5]
   1b6f8:	add	r2, sp, #20
   1b6fc:	str	r2, [sp, #4]
   1b700:	lsl	fp, r6, #4
   1b704:	add	r2, sp, #16
   1b708:	str	r2, [sp]
   1b70c:	ldr	r1, [sp, #80]	; 0x50
   1b710:	add	r2, sp, #24
   1b714:	add	r0, r0, fp
   1b718:	ldr	r7, [sp, #84]	; 0x54
   1b71c:	bl	1b4f0 <__flatcc_fb_gen_c_verifier@@Base+0x2c0>
   1b720:	ldrd	r2, [sp, #24]
   1b724:	ldr	r1, [sp, #20]
   1b728:	cmp	r0, #8
   1b72c:	mov	sl, r0
   1b730:	ldr	r0, [sp, #16]
   1b734:	bne	1b7e4 <__flatcc_fb_gen_c_verifier@@Base+0x5b4>
   1b738:	str	r0, [sp, #4]
   1b73c:	str	r1, [sp]
   1b740:	mov	r0, r4
   1b744:	ldr	r1, [pc, #604]	; 1b9a8 <__flatcc_fb_gen_c_verifier@@Base+0x778>
   1b748:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1b74c:	ldr	r3, [r4, #220]	; 0xdc
   1b750:	cmp	r8, r6
   1b754:	add	r3, r3, #1
   1b758:	str	r3, [r4, #220]	; 0xdc
   1b75c:	bne	1b87c <__flatcc_fb_gen_c_verifier@@Base+0x64c>
   1b760:	ldr	r3, [r5]
   1b764:	str	sl, [sp]
   1b768:	add	fp, r3, fp
   1b76c:	ldr	r6, [r5, #4]
   1b770:	ldr	r3, [fp, #12]
   1b774:	ldr	r2, [fp, #8]
   1b778:	ldr	r1, [r5, #12]
   1b77c:	mov	r0, r4
   1b780:	blx	r6
   1b784:	cmp	r7, #0
   1b788:	ble	1b804 <__flatcc_fb_gen_c_verifier@@Base+0x5d4>
   1b78c:	mov	r2, r7
   1b790:	ldr	r1, [pc, #532]	; 1b9ac <__flatcc_fb_gen_c_verifier@@Base+0x77c>
   1b794:	mov	r0, r4
   1b798:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1b79c:	ldr	r3, [r4, #220]	; 0xdc
   1b7a0:	cmp	r3, #0
   1b7a4:	moveq	r2, #888	; 0x378
   1b7a8:	ldreq	r3, [pc, #512]	; 1b9b0 <__flatcc_fb_gen_c_verifier@@Base+0x780>
   1b7ac:	beq	1b7d8 <__flatcc_fb_gen_c_verifier@@Base+0x5a8>
   1b7b0:	sub	r3, r3, #1
   1b7b4:	str	r3, [r4, #220]	; 0xdc
   1b7b8:	ldr	r1, [pc, #500]	; 1b9b4 <__flatcc_fb_gen_c_verifier@@Base+0x784>
   1b7bc:	mov	r0, r4
   1b7c0:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1b7c4:	ldr	r3, [r4, #220]	; 0xdc
   1b7c8:	cmp	r3, #0
   1b7cc:	bne	1b814 <__flatcc_fb_gen_c_verifier@@Base+0x5e4>
   1b7d0:	ldr	r3, [pc, #472]	; 1b9b0 <__flatcc_fb_gen_c_verifier@@Base+0x780>
   1b7d4:	ldr	r2, [pc, #476]	; 1b9b8 <__flatcc_fb_gen_c_verifier@@Base+0x788>
   1b7d8:	ldr	r1, [pc, #476]	; 1b9bc <__flatcc_fb_gen_c_verifier@@Base+0x78c>
   1b7dc:	ldr	r0, [pc, #476]	; 1b9c0 <__flatcc_fb_gen_c_verifier@@Base+0x790>
   1b7e0:	bl	14094 <__assert_fail@plt>
   1b7e4:	str	r0, [sp, #12]
   1b7e8:	str	r1, [sp, #8]
   1b7ec:	strd	r2, [sp]
   1b7f0:	ldr	r1, [pc, #460]	; 1b9c4 <__flatcc_fb_gen_c_verifier@@Base+0x794>
   1b7f4:	ldrd	r2, [sp, #32]
   1b7f8:	mov	r0, r4
   1b7fc:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1b800:	b	1b74c <__flatcc_fb_gen_c_verifier@@Base+0x51c>
   1b804:	ldr	r3, [r5, #8]
   1b808:	mov	r0, r4
   1b80c:	blx	r3
   1b810:	b	1b79c <__flatcc_fb_gen_c_verifier@@Base+0x56c>
   1b814:	sub	r3, r3, #1
   1b818:	str	r3, [r4, #220]	; 0xdc
   1b81c:	ldr	r2, [sp, #20]
   1b820:	ldr	r3, [sp, #16]
   1b824:	ldr	r1, [pc, #412]	; 1b9c8 <__flatcc_fb_gen_c_verifier@@Base+0x798>
   1b828:	mov	r0, r4
   1b82c:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1b830:	ldr	r3, [r4, #220]	; 0xdc
   1b834:	cmp	r7, #0
   1b838:	add	r3, r3, #1
   1b83c:	str	r3, [r4, #220]	; 0xdc
   1b840:	ble	1b86c <__flatcc_fb_gen_c_verifier@@Base+0x63c>
   1b844:	mov	r2, r7
   1b848:	ldr	r1, [pc, #348]	; 1b9ac <__flatcc_fb_gen_c_verifier@@Base+0x77c>
   1b84c:	mov	r0, r4
   1b850:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1b854:	ldr	r3, [r4, #220]	; 0xdc
   1b858:	cmp	r3, #0
   1b85c:	bne	1b984 <__flatcc_fb_gen_c_verifier@@Base+0x754>
   1b860:	ldr	r3, [pc, #328]	; 1b9b0 <__flatcc_fb_gen_c_verifier@@Base+0x780>
   1b864:	ldr	r2, [pc, #352]	; 1b9cc <__flatcc_fb_gen_c_verifier@@Base+0x79c>
   1b868:	b	1b7d8 <__flatcc_fb_gen_c_verifier@@Base+0x5a8>
   1b86c:	ldr	r3, [r5, #8]
   1b870:	mov	r0, r4
   1b874:	blx	r3
   1b878:	b	1b854 <__flatcc_fb_gen_c_verifier@@Base+0x624>
   1b87c:	cmp	r9, r6
   1b880:	bne	1b914 <__flatcc_fb_gen_c_verifier@@Base+0x6e4>
   1b884:	ldr	r3, [r5]
   1b888:	str	sl, [sp]
   1b88c:	add	fp, r3, fp
   1b890:	ldr	r9, [r5, #4]
   1b894:	ldr	r3, [fp, #12]
   1b898:	ldr	r2, [fp, #8]
   1b89c:	ldr	r1, [r5, #12]
   1b8a0:	mov	r0, r4
   1b8a4:	blx	r9
   1b8a8:	cmp	r7, #0
   1b8ac:	ble	1b8d8 <__flatcc_fb_gen_c_verifier@@Base+0x6a8>
   1b8b0:	mov	r2, r7
   1b8b4:	ldr	r1, [pc, #240]	; 1b9ac <__flatcc_fb_gen_c_verifier@@Base+0x77c>
   1b8b8:	mov	r0, r4
   1b8bc:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1b8c0:	ldr	r3, [r4, #220]	; 0xdc
   1b8c4:	cmp	r3, #0
   1b8c8:	bne	1b8e8 <__flatcc_fb_gen_c_verifier@@Base+0x6b8>
   1b8cc:	ldr	r3, [pc, #220]	; 1b9b0 <__flatcc_fb_gen_c_verifier@@Base+0x780>
   1b8d0:	ldr	r2, [pc, #248]	; 1b9d0 <__flatcc_fb_gen_c_verifier@@Base+0x7a0>
   1b8d4:	b	1b7d8 <__flatcc_fb_gen_c_verifier@@Base+0x5a8>
   1b8d8:	ldr	r3, [r5, #8]
   1b8dc:	mov	r0, r4
   1b8e0:	blx	r3
   1b8e4:	b	1b8c0 <__flatcc_fb_gen_c_verifier@@Base+0x690>
   1b8e8:	sub	r3, r3, #1
   1b8ec:	str	r3, [r4, #220]	; 0xdc
   1b8f0:	ldr	r1, [pc, #188]	; 1b9b4 <__flatcc_fb_gen_c_verifier@@Base+0x784>
   1b8f4:	mov	r0, r4
   1b8f8:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1b8fc:	ldr	r3, [r4, #220]	; 0xdc
   1b900:	cmp	r3, #0
   1b904:	bne	1b938 <__flatcc_fb_gen_c_verifier@@Base+0x708>
   1b908:	ldr	r3, [pc, #160]	; 1b9b0 <__flatcc_fb_gen_c_verifier@@Base+0x780>
   1b90c:	ldr	r2, [pc, #192]	; 1b9d4 <__flatcc_fb_gen_c_verifier@@Base+0x7a4>
   1b910:	b	1b7d8 <__flatcc_fb_gen_c_verifier@@Base+0x5a8>
   1b914:	ldr	r3, [sp, #80]	; 0x50
   1b918:	str	r7, [sp, #4]
   1b91c:	str	r3, [sp]
   1b920:	mov	r2, r6
   1b924:	mov	r3, r9
   1b928:	mov	r1, r5
   1b92c:	mov	r0, r4
   1b930:	bl	1b6b8 <__flatcc_fb_gen_c_verifier@@Base+0x488>
   1b934:	b	1b8fc <__flatcc_fb_gen_c_verifier@@Base+0x6cc>
   1b938:	sub	r3, r3, #1
   1b93c:	str	r3, [r4, #220]	; 0xdc
   1b940:	ldr	r2, [sp, #20]
   1b944:	ldr	r3, [sp, #16]
   1b948:	mov	r0, r4
   1b94c:	ldr	r1, [pc, #116]	; 1b9c8 <__flatcc_fb_gen_c_verifier@@Base+0x798>
   1b950:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1b954:	ldr	r3, [r4, #220]	; 0xdc
   1b958:	str	r7, [sp, #4]
   1b95c:	add	r3, r3, #1
   1b960:	str	r3, [r4, #220]	; 0xdc
   1b964:	ldr	r3, [sp, #80]	; 0x50
   1b968:	mov	r2, r8
   1b96c:	str	r3, [sp]
   1b970:	mov	r1, r5
   1b974:	sub	r3, r6, #1
   1b978:	mov	r0, r4
   1b97c:	bl	1b6b8 <__flatcc_fb_gen_c_verifier@@Base+0x488>
   1b980:	b	1b854 <__flatcc_fb_gen_c_verifier@@Base+0x624>
   1b984:	sub	r3, r3, #1
   1b988:	str	r3, [r4, #220]	; 0xdc
   1b98c:	ldr	r2, [sp, #20]
   1b990:	ldr	r3, [sp, #16]
   1b994:	ldr	r1, [pc, #60]	; 1b9d8 <__flatcc_fb_gen_c_verifier@@Base+0x7a8>
   1b998:	mov	r0, r4
   1b99c:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1b9a0:	add	sp, sp, #44	; 0x2c
   1b9a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b9a8:	andeq	r2, r4, r4, ror #28
   1b9ac:	andeq	r2, r4, pc, lsr #29
   1b9b0:	andeq	r2, r4, ip, lsl #25
   1b9b4:	andeq	r7, r3, r7, lsl r0
   1b9b8:	andeq	r0, r0, r9, ror r3
   1b9bc:			; <UNDEFINED> instruction: 0x00042ebf
   1b9c0:	andeq	r2, r4, r4, lsl pc
   1b9c4:	andeq	r2, r4, r4, lsl #29
   1b9c8:	andeq	r2, r4, r0, lsr #30
   1b9cc:	andeq	r0, r0, lr, lsl #7
   1b9d0:	andeq	r0, r0, r7, lsl #7
   1b9d4:	andeq	r0, r0, fp, lsl #7
   1b9d8:	andeq	r2, r4, r6, lsr pc
   1b9dc:	push	{r4, lr}
   1b9e0:	mov	r4, r0
   1b9e4:	sub	sp, sp, #208	; 0xd0
   1b9e8:	mov	r0, r1
   1b9ec:	add	r1, sp, #4
   1b9f0:	bl	15044 <__flatcc_fb_copy_scope@@Base>
   1b9f4:	ldr	r2, [r4, #208]	; 0xd0
   1b9f8:	add	r3, sp, #4
   1b9fc:	mov	r0, r4
   1ba00:	ldr	r2, [r2, #160]	; 0xa0
   1ba04:	ldr	r1, [pc, #20]	; 1ba20 <__flatcc_fb_gen_c_verifier@@Base+0x7f0>
   1ba08:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1ba0c:	ldr	r1, [pc, #16]	; 1ba24 <__flatcc_fb_gen_c_verifier@@Base+0x7f4>
   1ba10:	mov	r0, r4
   1ba14:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1ba18:	add	sp, sp, #208	; 0xd0
   1ba1c:	pop	{r4, pc}
   1ba20:	andeq	r2, r4, r5, asr #30
   1ba24:			; <UNDEFINED> instruction: 0x00042fb1
   1ba28:	mov	r2, r1
   1ba2c:	mov	r1, r0
   1ba30:	ldr	r0, [r0, #12]
   1ba34:	b	150e8 <__flatcc_fb_scoped_symbol_name@@Base>
   1ba38:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1ba3c:	sub	sp, sp, #448	; 0x1c0
   1ba40:	mov	r4, r0
   1ba44:	mov	r5, r1
   1ba48:	mov	r2, #220	; 0xdc
   1ba4c:	mov	r1, #0
   1ba50:	add	r0, sp, #8
   1ba54:	bl	13fec <memset@plt>
   1ba58:	mov	r2, #220	; 0xdc
   1ba5c:	mov	r1, #0
   1ba60:	add	r0, sp, #228	; 0xe4
   1ba64:	bl	13fec <memset@plt>
   1ba68:	add	r1, sp, #8
   1ba6c:	mov	r0, r5
   1ba70:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x7f8>
   1ba74:	add	r2, sp, #8
   1ba78:	ldr	r1, [pc, #908]	; 1be0c <__flatcc_fb_gen_c_verifier@@Base+0xbdc>
   1ba7c:	mov	r0, r4
   1ba80:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1ba84:	ldr	r1, [pc, #900]	; 1be10 <__flatcc_fb_gen_c_verifier@@Base+0xbe0>
   1ba88:	mov	r0, r4
   1ba8c:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1ba90:	ldr	r3, [r4, #220]	; 0xdc
   1ba94:	ldr	r1, [pc, #888]	; 1be14 <__flatcc_fb_gen_c_verifier@@Base+0xbe4>
   1ba98:	add	r3, r3, #1
   1ba9c:	str	r3, [r4, #220]	; 0xdc
   1baa0:	mov	r0, r4
   1baa4:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1baa8:	ldr	r1, [pc, #872]	; 1be18 <__flatcc_fb_gen_c_verifier@@Base+0xbe8>
   1baac:	mov	r0, r4
   1bab0:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1bab4:	ldr	r1, [pc, #864]	; 1be1c <__flatcc_fb_gen_c_verifier@@Base+0xbec>
   1bab8:	mov	r0, r4
   1babc:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1bac0:	ldr	r1, [pc, #856]	; 1be20 <__flatcc_fb_gen_c_verifier@@Base+0xbf0>
   1bac4:	mov	r0, r4
   1bac8:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1bacc:	ldr	r3, [r4, #220]	; 0xdc
   1bad0:	ldr	r1, [pc, #844]	; 1be24 <__flatcc_fb_gen_c_verifier@@Base+0xbf4>
   1bad4:	add	r3, r3, #1
   1bad8:	str	r3, [r4, #220]	; 0xdc
   1badc:	mov	r0, r4
   1bae0:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1bae4:	ldr	r3, [r4, #220]	; 0xdc
   1bae8:	cmp	r3, #0
   1baec:	bne	1bb04 <__flatcc_fb_gen_c_verifier@@Base+0x8d4>
   1baf0:	ldr	r3, [pc, #816]	; 1be28 <__flatcc_fb_gen_c_verifier@@Base+0xbf8>
   1baf4:	ldr	r2, [pc, #816]	; 1be2c <__flatcc_fb_gen_c_verifier@@Base+0xbfc>
   1baf8:	ldr	r1, [pc, #816]	; 1be30 <__flatcc_fb_gen_c_verifier@@Base+0xc00>
   1bafc:	ldr	r0, [pc, #816]	; 1be34 <__flatcc_fb_gen_c_verifier@@Base+0xc04>
   1bb00:	b	1bc20 <__flatcc_fb_gen_c_verifier@@Base+0x9f0>
   1bb04:	ldr	r5, [r5, #20]
   1bb08:	ldr	r6, [pc, #808]	; 1be38 <__flatcc_fb_gen_c_verifier@@Base+0xc08>
   1bb0c:	ldr	r8, [pc, #808]	; 1be3c <__flatcc_fb_gen_c_verifier@@Base+0xc0c>
   1bb10:	ldr	r7, [pc, #808]	; 1be40 <__flatcc_fb_gen_c_verifier@@Base+0xc10>
   1bb14:	sub	r3, r3, #1
   1bb18:	str	r3, [r4, #220]	; 0xdc
   1bb1c:	cmp	r5, #0
   1bb20:	bne	1bb78 <__flatcc_fb_gen_c_verifier@@Base+0x948>
   1bb24:	ldr	r1, [pc, #792]	; 1be44 <__flatcc_fb_gen_c_verifier@@Base+0xc14>
   1bb28:	mov	r0, r4
   1bb2c:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1bb30:	ldr	r3, [r4, #220]	; 0xdc
   1bb34:	ldr	r1, [pc, #780]	; 1be48 <__flatcc_fb_gen_c_verifier@@Base+0xc18>
   1bb38:	add	r3, r3, #1
   1bb3c:	str	r3, [r4, #220]	; 0xdc
   1bb40:	mov	r0, r4
   1bb44:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1bb48:	ldr	r3, [r4, #220]	; 0xdc
   1bb4c:	ldr	r1, [pc, #760]	; 1be4c <__flatcc_fb_gen_c_verifier@@Base+0xc1c>
   1bb50:	add	r3, r3, #1
   1bb54:	str	r3, [r4, #220]	; 0xdc
   1bb58:	mov	r0, r4
   1bb5c:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1bb60:	ldr	r3, [r4, #220]	; 0xdc
   1bb64:	cmp	r3, #0
   1bb68:	bne	1bcec <__flatcc_fb_gen_c_verifier@@Base+0xabc>
   1bb6c:	ldr	r3, [pc, #692]	; 1be28 <__flatcc_fb_gen_c_verifier@@Base+0xbf8>
   1bb70:	ldr	r2, [pc, #728]	; 1be50 <__flatcc_fb_gen_c_verifier@@Base+0xc20>
   1bb74:	b	1baf8 <__flatcc_fb_gen_c_verifier@@Base+0x8c8>
   1bb78:	ldrh	r2, [r5, #24]
   1bb7c:	ldr	r3, [r5, #4]
   1bb80:	cmp	r2, #10
   1bb84:	ldr	r9, [r3, #4]
   1bb88:	ldr	sl, [r3]
   1bb8c:	beq	1bc64 <__flatcc_fb_gen_c_verifier@@Base+0xa34>
   1bb90:	cmp	r2, #14
   1bb94:	beq	1bba8 <__flatcc_fb_gen_c_verifier@@Base+0x978>
   1bb98:	cmp	r2, #0
   1bb9c:	bne	1bcc0 <__flatcc_fb_gen_c_verifier@@Base+0xa90>
   1bba0:	ldr	r5, [r5]
   1bba4:	b	1bb1c <__flatcc_fb_gen_c_verifier@@Base+0x8ec>
   1bba8:	add	r1, sp, #228	; 0xe4
   1bbac:	ldr	r0, [r5, #16]
   1bbb0:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x7f8>
   1bbb4:	str	sl, [sp]
   1bbb8:	mov	r3, r9
   1bbbc:	ldr	r2, [r5, #48]	; 0x30
   1bbc0:	mov	r1, r6
   1bbc4:	mov	r0, r4
   1bbc8:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1bbcc:	ldr	r3, [r4, #220]	; 0xdc
   1bbd0:	add	r3, r3, #1
   1bbd4:	str	r3, [r4, #220]	; 0xdc
   1bbd8:	ldr	r3, [r5, #16]
   1bbdc:	ldrh	r3, [r3, #8]
   1bbe0:	cmp	r3, #0
   1bbe4:	beq	1bc24 <__flatcc_fb_gen_c_verifier@@Base+0x9f4>
   1bbe8:	cmp	r3, #1
   1bbec:	beq	1bc58 <__flatcc_fb_gen_c_verifier@@Base+0xa28>
   1bbf0:	ldr	r0, [pc, #604]	; 1be54 <__flatcc_fb_gen_c_verifier@@Base+0xc24>
   1bbf4:	ldr	r3, [pc, #604]	; 1be58 <__flatcc_fb_gen_c_verifier@@Base+0xc28>
   1bbf8:	ldr	r2, [pc, #560]	; 1be30 <__flatcc_fb_gen_c_verifier@@Base+0xc00>
   1bbfc:	str	r3, [sp]
   1bc00:	ldr	r1, [pc, #596]	; 1be5c <__flatcc_fb_gen_c_verifier@@Base+0xc2c>
   1bc04:	ldr	r3, [pc, #596]	; 1be60 <__flatcc_fb_gen_c_verifier@@Base+0xc30>
   1bc08:	ldr	r0, [r0]
   1bc0c:	bl	13fd4 <fprintf@plt>
   1bc10:	ldr	r3, [pc, #528]	; 1be28 <__flatcc_fb_gen_c_verifier@@Base+0xbf8>
   1bc14:	ldr	r2, [pc, #580]	; 1be60 <__flatcc_fb_gen_c_verifier@@Base+0xc30>
   1bc18:	ldr	r1, [pc, #528]	; 1be30 <__flatcc_fb_gen_c_verifier@@Base+0xc00>
   1bc1c:	ldr	r0, [pc, #576]	; 1be64 <__flatcc_fb_gen_c_verifier@@Base+0xc34>
   1bc20:	bl	14094 <__assert_fail@plt>
   1bc24:	ldr	r1, [pc, #572]	; 1be68 <__flatcc_fb_gen_c_verifier@@Base+0xc38>
   1bc28:	add	r2, sp, #228	; 0xe4
   1bc2c:	mov	r0, r4
   1bc30:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1bc34:	mov	r1, r7
   1bc38:	mov	r0, r4
   1bc3c:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1bc40:	ldr	r3, [r4, #220]	; 0xdc
   1bc44:	cmp	r3, #0
   1bc48:	bne	1bcb4 <__flatcc_fb_gen_c_verifier@@Base+0xa84>
   1bc4c:	ldr	r3, [pc, #468]	; 1be28 <__flatcc_fb_gen_c_verifier@@Base+0xbf8>
   1bc50:	ldr	r2, [pc, #532]	; 1be6c <__flatcc_fb_gen_c_verifier@@Base+0xc3c>
   1bc54:	b	1baf8 <__flatcc_fb_gen_c_verifier@@Base+0x8c8>
   1bc58:	add	r2, sp, #228	; 0xe4
   1bc5c:	ldr	r1, [pc, #524]	; 1be70 <__flatcc_fb_gen_c_verifier@@Base+0xc40>
   1bc60:	b	1bc2c <__flatcc_fb_gen_c_verifier@@Base+0x9fc>
   1bc64:	str	sl, [sp]
   1bc68:	mov	r3, r9
   1bc6c:	ldr	r2, [r5, #48]	; 0x30
   1bc70:	mov	r1, r6
   1bc74:	mov	r0, r4
   1bc78:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1bc7c:	ldr	r3, [r4, #220]	; 0xdc
   1bc80:	mov	r1, r8
   1bc84:	add	r3, r3, #1
   1bc88:	str	r3, [r4, #220]	; 0xdc
   1bc8c:	mov	r0, r4
   1bc90:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1bc94:	mov	r1, r7
   1bc98:	mov	r0, r4
   1bc9c:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1bca0:	ldr	r3, [r4, #220]	; 0xdc
   1bca4:	cmp	r3, #0
   1bca8:	ldreq	r3, [pc, #376]	; 1be28 <__flatcc_fb_gen_c_verifier@@Base+0xbf8>
   1bcac:	ldreq	r2, [pc, #448]	; 1be74 <__flatcc_fb_gen_c_verifier@@Base+0xc44>
   1bcb0:	beq	1baf8 <__flatcc_fb_gen_c_verifier@@Base+0x8c8>
   1bcb4:	sub	r3, r3, #1
   1bcb8:	str	r3, [r4, #220]	; 0xdc
   1bcbc:	b	1bba0 <__flatcc_fb_gen_c_verifier@@Base+0x970>
   1bcc0:	ldr	r0, [pc, #396]	; 1be54 <__flatcc_fb_gen_c_verifier@@Base+0xc24>
   1bcc4:	ldr	r3, [pc, #428]	; 1be78 <__flatcc_fb_gen_c_verifier@@Base+0xc48>
   1bcc8:	ldr	r2, [pc, #352]	; 1be30 <__flatcc_fb_gen_c_verifier@@Base+0xc00>
   1bccc:	str	r3, [sp]
   1bcd0:	ldr	r1, [pc, #388]	; 1be5c <__flatcc_fb_gen_c_verifier@@Base+0xc2c>
   1bcd4:	ldr	r3, [pc, #416]	; 1be7c <__flatcc_fb_gen_c_verifier@@Base+0xc4c>
   1bcd8:	ldr	r0, [r0]
   1bcdc:	bl	13fd4 <fprintf@plt>
   1bce0:	ldr	r3, [pc, #320]	; 1be28 <__flatcc_fb_gen_c_verifier@@Base+0xbf8>
   1bce4:	ldr	r2, [pc, #400]	; 1be7c <__flatcc_fb_gen_c_verifier@@Base+0xc4c>
   1bce8:	b	1bc18 <__flatcc_fb_gen_c_verifier@@Base+0x9e8>
   1bcec:	sub	r3, r3, #1
   1bcf0:	str	r3, [r4, #220]	; 0xdc
   1bcf4:	ldr	r1, [pc, #388]	; 1be80 <__flatcc_fb_gen_c_verifier@@Base+0xc50>
   1bcf8:	mov	r0, r4
   1bcfc:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1bd00:	ldr	r3, [r4, #220]	; 0xdc
   1bd04:	ldr	r1, [pc, #376]	; 1be84 <__flatcc_fb_gen_c_verifier@@Base+0xc54>
   1bd08:	add	r3, r3, #1
   1bd0c:	str	r3, [r4, #220]	; 0xdc
   1bd10:	mov	r0, r4
   1bd14:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1bd18:	ldr	r3, [r4, #220]	; 0xdc
   1bd1c:	cmp	r3, #0
   1bd20:	ldreq	r3, [pc, #256]	; 1be28 <__flatcc_fb_gen_c_verifier@@Base+0xbf8>
   1bd24:	ldreq	r2, [pc, #348]	; 1be88 <__flatcc_fb_gen_c_verifier@@Base+0xc58>
   1bd28:	beq	1baf8 <__flatcc_fb_gen_c_verifier@@Base+0x8c8>
   1bd2c:	sub	r3, r3, #1
   1bd30:	str	r3, [r4, #220]	; 0xdc
   1bd34:	ldr	r1, [pc, #336]	; 1be8c <__flatcc_fb_gen_c_verifier@@Base+0xc5c>
   1bd38:	mov	r0, r4
   1bd3c:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1bd40:	ldr	r3, [r4, #220]	; 0xdc
   1bd44:	cmp	r3, #0
   1bd48:	ldreq	r3, [pc, #216]	; 1be28 <__flatcc_fb_gen_c_verifier@@Base+0xbf8>
   1bd4c:	ldreq	r2, [pc, #316]	; 1be90 <__flatcc_fb_gen_c_verifier@@Base+0xc60>
   1bd50:	beq	1baf8 <__flatcc_fb_gen_c_verifier@@Base+0x8c8>
   1bd54:	sub	r3, r3, #1
   1bd58:	str	r3, [r4, #220]	; 0xdc
   1bd5c:	ldr	r1, [pc, #296]	; 1be8c <__flatcc_fb_gen_c_verifier@@Base+0xc5c>
   1bd60:	mov	r0, r4
   1bd64:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1bd68:	ldr	r1, [pc, #292]	; 1be94 <__flatcc_fb_gen_c_verifier@@Base+0xc64>
   1bd6c:	mov	r0, r4
   1bd70:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1bd74:	ldr	r1, [pc, #284]	; 1be98 <__flatcc_fb_gen_c_verifier@@Base+0xc68>
   1bd78:	mov	r0, r4
   1bd7c:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1bd80:	ldr	r3, [r4, #220]	; 0xdc
   1bd84:	ldr	r1, [pc, #272]	; 1be9c <__flatcc_fb_gen_c_verifier@@Base+0xc6c>
   1bd88:	add	r3, r3, #1
   1bd8c:	str	r3, [r4, #220]	; 0xdc
   1bd90:	mov	r0, r4
   1bd94:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1bd98:	ldr	r3, [r4, #220]	; 0xdc
   1bd9c:	cmp	r3, #0
   1bda0:	ldreq	r3, [pc, #128]	; 1be28 <__flatcc_fb_gen_c_verifier@@Base+0xbf8>
   1bda4:	ldreq	r2, [pc, #244]	; 1bea0 <__flatcc_fb_gen_c_verifier@@Base+0xc70>
   1bda8:	beq	1baf8 <__flatcc_fb_gen_c_verifier@@Base+0x8c8>
   1bdac:	sub	r3, r3, #1
   1bdb0:	str	r3, [r4, #220]	; 0xdc
   1bdb4:	ldr	r1, [pc, #208]	; 1be8c <__flatcc_fb_gen_c_verifier@@Base+0xc5c>
   1bdb8:	mov	r0, r4
   1bdbc:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1bdc0:	ldr	r1, [pc, #220]	; 1bea4 <__flatcc_fb_gen_c_verifier@@Base+0xc74>
   1bdc4:	mov	r0, r4
   1bdc8:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1bdcc:	ldr	r3, [r4, #220]	; 0xdc
   1bdd0:	cmp	r3, #0
   1bdd4:	ldreq	r3, [pc, #76]	; 1be28 <__flatcc_fb_gen_c_verifier@@Base+0xbf8>
   1bdd8:	moveq	r2, #1552	; 0x610
   1bddc:	beq	1baf8 <__flatcc_fb_gen_c_verifier@@Base+0x8c8>
   1bde0:	sub	r3, r3, #1
   1bde4:	str	r3, [r4, #220]	; 0xdc
   1bde8:	mov	r0, r4
   1bdec:	ldr	r1, [pc, #152]	; 1be8c <__flatcc_fb_gen_c_verifier@@Base+0xc5c>
   1bdf0:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1bdf4:	mov	r0, r4
   1bdf8:	ldr	r1, [pc, #20]	; 1be14 <__flatcc_fb_gen_c_verifier@@Base+0xbe4>
   1bdfc:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1be00:	mov	r0, r5
   1be04:	add	sp, sp, #448	; 0x1c0
   1be08:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1be0c:	andeq	r2, r4, r4, ror #31
   1be10:	strdeq	r5, [r4], -r6
   1be14:	andeq	r1, r3, r1, lsr #28
   1be18:	andeq	r3, r4, r4, ror r0
   1be1c:	andeq	r3, r4, r1, lsl #1
   1be20:	muleq	r4, r1, r0
   1be24:	andeq	r3, r4, r4, lsr #1
   1be28:	muleq	r4, ip, ip
   1be2c:	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   1be30:			; <UNDEFINED> instruction: 0x00042ebf
   1be34:	andeq	r2, r4, r4, lsl pc
   1be38:	ldrdeq	r3, [r4], -r3	; <UNPREDICTABLE>
   1be3c:	andeq	r3, r4, sl, lsl #3
   1be40:	andeq	r3, r4, r3, lsl #3
   1be44:	strdeq	r3, [r4], -r6
   1be48:	strdeq	r3, [r4], -pc	; <UNPREDICTABLE>
   1be4c:	andeq	r3, r4, r8, lsr r2
   1be50:	andeq	r0, r0, r7, lsl #12
   1be54:	strheq	fp, [r5], -r0
   1be58:	andeq	r3, r4, ip, asr #2
   1be5c:	andeq	r0, r3, lr, ror #20
   1be60:	strdeq	r0, [r0], -r2
   1be64:	andeq	r9, r3, sp, asr #1
   1be68:	andeq	r3, r4, r7, ror #1
   1be6c:	strdeq	r0, [r0], -r6
   1be70:	andeq	r3, r4, r9, lsl r1
   1be74:	strdeq	r0, [r0], -ip
   1be78:	andeq	r3, r4, r8, asr #3
   1be7c:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   1be80:	muleq	r4, r4, r2
   1be84:	muleq	r4, sp, r2
   1be88:	andeq	r0, r0, r9, lsl #12
   1be8c:	andeq	r7, r3, r7, lsl r0
   1be90:	andeq	r0, r0, sl, lsl #12
   1be94:	ldrdeq	r3, [r4], -r4
   1be98:	strdeq	r3, [r4], -r0
   1be9c:	andeq	r3, r4, r0, lsl #6
   1bea0:	andeq	r0, r0, lr, lsl #12
   1bea4:	andeq	r3, r4, r4, ror #5
   1bea8:	push	{r4, r5, r6, r7, lr}
   1beac:	sub	sp, sp, #452	; 0x1c4
   1beb0:	mov	r4, r0
   1beb4:	mov	r5, r1
   1beb8:	mov	r2, #220	; 0xdc
   1bebc:	mov	r1, #0
   1bec0:	add	r0, sp, #8
   1bec4:	bl	13fec <memset@plt>
   1bec8:	mov	r2, #220	; 0xdc
   1becc:	mov	r1, #0
   1bed0:	add	r0, sp, #228	; 0xe4
   1bed4:	bl	13fec <memset@plt>
   1bed8:	mov	r0, r5
   1bedc:	add	r1, sp, #8
   1bee0:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x7f8>
   1bee4:	add	r2, sp, #8
   1bee8:	ldr	r1, [pc, #260]	; 1bff4 <__flatcc_fb_gen_c_verifier@@Base+0xdc4>
   1beec:	mov	r0, r4
   1bef0:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1bef4:	ldr	r1, [pc, #252]	; 1bff8 <__flatcc_fb_gen_c_verifier@@Base+0xdc8>
   1bef8:	mov	r0, r4
   1befc:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1bf00:	ldr	r3, [r4, #220]	; 0xdc
   1bf04:	ldr	r1, [pc, #240]	; 1bffc <__flatcc_fb_gen_c_verifier@@Base+0xdcc>
   1bf08:	add	r3, r3, #1
   1bf0c:	str	r3, [r4, #220]	; 0xdc
   1bf10:	mov	r0, r4
   1bf14:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1bf18:	ldr	r6, [pc, #224]	; 1c000 <__flatcc_fb_gen_c_verifier@@Base+0xdd0>
   1bf1c:	ldr	r5, [r5, #20]
   1bf20:	ldr	r7, [pc, #220]	; 1c004 <__flatcc_fb_gen_c_verifier@@Base+0xdd4>
   1bf24:	cmp	r5, #0
   1bf28:	bne	1bf60 <__flatcc_fb_gen_c_verifier@@Base+0xd30>
   1bf2c:	ldr	r1, [pc, #212]	; 1c008 <__flatcc_fb_gen_c_verifier@@Base+0xdd8>
   1bf30:	mov	r0, r4
   1bf34:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1bf38:	ldr	r3, [r4, #220]	; 0xdc
   1bf3c:	add	r2, r3, #1
   1bf40:	cmp	r2, #0
   1bf44:	str	r2, [r4, #220]	; 0xdc
   1bf48:	bne	1bfa4 <__flatcc_fb_gen_c_verifier@@Base+0xd74>
   1bf4c:	ldr	r3, [pc, #184]	; 1c00c <__flatcc_fb_gen_c_verifier@@Base+0xddc>
   1bf50:	ldr	r2, [pc, #184]	; 1c010 <__flatcc_fb_gen_c_verifier@@Base+0xde0>
   1bf54:	ldr	r1, [pc, #184]	; 1c014 <__flatcc_fb_gen_c_verifier@@Base+0xde4>
   1bf58:	ldr	r0, [pc, #184]	; 1c018 <__flatcc_fb_gen_c_verifier@@Base+0xde8>
   1bf5c:	bl	14094 <__assert_fail@plt>
   1bf60:	ldrh	r3, [r5, #24]
   1bf64:	cmp	r3, #0
   1bf68:	bne	1bf80 <__flatcc_fb_gen_c_verifier@@Base+0xd50>
   1bf6c:	mov	r1, r7
   1bf70:	mov	r0, r4
   1bf74:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1bf78:	ldr	r5, [r5]
   1bf7c:	b	1bf24 <__flatcc_fb_gen_c_verifier@@Base+0xcf4>
   1bf80:	ldr	r3, [r5, #4]
   1bf84:	mov	r1, r6
   1bf88:	mov	r0, r4
   1bf8c:	ldr	r2, [r3]
   1bf90:	str	r2, [sp]
   1bf94:	ldr	r3, [r3, #4]
   1bf98:	ldr	r2, [r5, #48]	; 0x30
   1bf9c:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1bfa0:	b	1bf78 <__flatcc_fb_gen_c_verifier@@Base+0xd48>
   1bfa4:	str	r3, [r4, #220]	; 0xdc
   1bfa8:	ldr	r1, [pc, #108]	; 1c01c <__flatcc_fb_gen_c_verifier@@Base+0xdec>
   1bfac:	mov	r0, r4
   1bfb0:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1bfb4:	ldr	r3, [r4, #220]	; 0xdc
   1bfb8:	cmp	r3, #0
   1bfbc:	ldreq	r3, [pc, #72]	; 1c00c <__flatcc_fb_gen_c_verifier@@Base+0xddc>
   1bfc0:	ldreq	r2, [pc, #88]	; 1c020 <__flatcc_fb_gen_c_verifier@@Base+0xdf0>
   1bfc4:	beq	1bf54 <__flatcc_fb_gen_c_verifier@@Base+0xd24>
   1bfc8:	sub	r3, r3, #1
   1bfcc:	str	r3, [r4, #220]	; 0xdc
   1bfd0:	mov	r0, r4
   1bfd4:	ldr	r1, [pc, #64]	; 1c01c <__flatcc_fb_gen_c_verifier@@Base+0xdec>
   1bfd8:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1bfdc:	mov	r0, r4
   1bfe0:	ldr	r1, [pc, #60]	; 1c024 <__flatcc_fb_gen_c_verifier@@Base+0xdf4>
   1bfe4:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1bfe8:	mov	r0, r5
   1bfec:	add	sp, sp, #452	; 0x1c4
   1bff0:	pop	{r4, r5, r6, r7, pc}
   1bff4:	andeq	r3, r4, r6, asr r3
   1bff8:	strdeq	r5, [r4], -r6
   1bffc:	andeq	r3, r4, r1, lsl #1
   1c000:	andeq	r3, r4, r6, lsr #7
   1c004:	andeq	r3, r4, r9, lsl #7
   1c008:	andeq	r3, r4, r4, asr #7
   1c00c:	andeq	r2, r4, sp, lsr #25
   1c010:	andeq	r0, r0, lr, lsr #12
   1c014:			; <UNDEFINED> instruction: 0x00042ebf
   1c018:	andeq	r2, r4, r4, lsl pc
   1c01c:	andeq	r7, r3, r7, lsl r0
   1c020:	andeq	r0, r0, pc, lsr #12
   1c024:	andeq	r1, r3, r1, lsr #28
   1c028:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c02c:	mov	r5, r1
   1c030:	sub	sp, sp, #516	; 0x204
   1c034:	mov	r7, r2
   1c038:	mov	r1, #0
   1c03c:	mov	r2, #220	; 0xdc
   1c040:	mov	r4, r0
   1c044:	add	r0, sp, #292	; 0x124
   1c048:	str	r3, [sp, #52]	; 0x34
   1c04c:	bl	13fec <memset@plt>
   1c050:	add	r1, sp, #88	; 0x58
   1c054:	ldr	r0, [r5, #12]
   1c058:	bl	15044 <__flatcc_fb_copy_scope@@Base>
   1c05c:	ldrh	r3, [r5, #8]
   1c060:	str	r3, [sp, #68]	; 0x44
   1c064:	sub	r3, r3, #1
   1c068:	clz	r3, r3
   1c06c:	lsr	r3, r3, #5
   1c070:	str	r3, [sp, #80]	; 0x50
   1c074:	ldrh	r3, [r7, #24]
   1c078:	cmp	r3, #15
   1c07c:	movhi	r8, #0
   1c080:	bhi	1c098 <__flatcc_fb_gen_c_verifier@@Base+0xe68>
   1c084:	mov	r1, #1
   1c088:	ldr	r2, [pc, #2592]	; 1cab0 <__flatcc_fb_gen_c_verifier@@Base+0x1880>
   1c08c:	ands	r2, r2, r1, lsl r3
   1c090:	movne	r8, r1
   1c094:	moveq	r8, #0
   1c098:	sub	r3, r3, #7
   1c09c:	cmp	r3, #8
   1c0a0:	ldrls	pc, [pc, r3, lsl #2]
   1c0a4:	b	1c26c <__flatcc_fb_gen_c_verifier@@Base+0x103c>
   1c0a8:	andeq	ip, r1, ip, lsr #3
   1c0ac:	strdeq	ip, [r1], -r0
   1c0b0:	andeq	ip, r1, r0, asr #4
   1c0b4:	andeq	ip, r1, r0, asr #4
   1c0b8:	andeq	ip, r1, ip, ror #4
   1c0bc:	andeq	ip, r1, ip, ror #4
   1c0c0:	andeq	ip, r1, ip, ror #4
   1c0c4:	andeq	ip, r1, ip, asr #1
   1c0c8:	andeq	ip, r1, ip, asr #1
   1c0cc:	add	r1, sp, #292	; 0x124
   1c0d0:	ldr	r0, [r7, #16]
   1c0d4:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x7f8>
   1c0d8:	ldr	r2, [r7, #16]
   1c0dc:	ldrh	r3, [r2, #8]
   1c0e0:	sub	r1, r3, #3
   1c0e4:	clz	r1, r1
   1c0e8:	lsr	r1, r1, #5
   1c0ec:	str	r1, [sp, #44]	; 0x2c
   1c0f0:	sub	r1, r3, #1
   1c0f4:	clz	r1, r1
   1c0f8:	lsr	r1, r1, #5
   1c0fc:	str	r1, [sp, #24]
   1c100:	clz	r1, r3
   1c104:	lsr	r1, r1, #5
   1c108:	str	r1, [sp, #40]	; 0x28
   1c10c:	ldr	r1, [sp, #52]	; 0x34
   1c110:	cmp	r1, #0
   1c114:	cmpeq	r3, #4
   1c118:	moveq	r6, #1
   1c11c:	movne	r6, #0
   1c120:	beq	1c200 <__flatcc_fb_gen_c_verifier@@Base+0xfd0>
   1c124:	cmp	r3, #3
   1c128:	bne	1c224 <__flatcc_fb_gen_c_verifier@@Base+0xff4>
   1c12c:	ldr	r5, [r2, #40]	; 0x28
   1c130:	mov	sl, #1
   1c134:	str	r6, [sp, #32]
   1c138:	str	r6, [sp, #20]
   1c13c:	str	r6, [sp, #28]
   1c140:	str	sl, [sp, #44]	; 0x2c
   1c144:	str	r6, [sp, #36]	; 0x24
   1c148:	ldr	r3, [sp, #20]
   1c14c:	ldr	r2, [sp, #32]
   1c150:	orrs	r3, r3, r2
   1c154:	str	r3, [sp, #64]	; 0x40
   1c158:	beq	1c28c <__flatcc_fb_gen_c_verifier@@Base+0x105c>
   1c15c:	eor	r6, r8, #1
   1c160:	cmp	r5, #4
   1c164:	orrne	r6, r6, #1
   1c168:	cmp	r6, #0
   1c16c:	moveq	r5, #4
   1c170:	moveq	sl, r6
   1c174:	moveq	r8, r6
   1c178:	beq	1c29c <__flatcc_fb_gen_c_verifier@@Base+0x106c>
   1c17c:	ldr	r0, [pc, #2352]	; 1cab4 <__flatcc_fb_gen_c_verifier@@Base+0x1884>
   1c180:	ldr	r3, [pc, #2352]	; 1cab8 <__flatcc_fb_gen_c_verifier@@Base+0x1888>
   1c184:	ldr	r2, [pc, #2352]	; 1cabc <__flatcc_fb_gen_c_verifier@@Base+0x188c>
   1c188:	str	r3, [sp]
   1c18c:	ldr	r1, [pc, #2348]	; 1cac0 <__flatcc_fb_gen_c_verifier@@Base+0x1890>
   1c190:	ldr	r3, [pc, #2348]	; 1cac4 <__flatcc_fb_gen_c_verifier@@Base+0x1894>
   1c194:	ldr	r0, [r0]
   1c198:	bl	13fd4 <fprintf@plt>
   1c19c:	ldr	r3, [pc, #2340]	; 1cac8 <__flatcc_fb_gen_c_verifier@@Base+0x1898>
   1c1a0:	ldr	r2, [pc, #2332]	; 1cac4 <__flatcc_fb_gen_c_verifier@@Base+0x1894>
   1c1a4:	ldr	r1, [pc, #2320]	; 1cabc <__flatcc_fb_gen_c_verifier@@Base+0x188c>
   1c1a8:	b	1c414 <__flatcc_fb_gen_c_verifier@@Base+0x11e4>
   1c1ac:	ldr	r6, [r7, #104]	; 0x68
   1c1b0:	ldrh	r3, [r7, #72]	; 0x48
   1c1b4:	adds	r6, r6, #0
   1c1b8:	movne	r6, #1
   1c1bc:	and	r2, r3, #1024	; 0x400
   1c1c0:	and	r3, r3, #2048	; 0x800
   1c1c4:	str	r2, [sp, #20]
   1c1c8:	str	r3, [sp, #32]
   1c1cc:	ldr	r5, [r7, #16]
   1c1d0:	mov	sl, #1
   1c1d4:	mov	r3, #0
   1c1d8:	str	r3, [sp, #28]
   1c1dc:	str	r3, [sp, #24]
   1c1e0:	str	r3, [sp, #40]	; 0x28
   1c1e4:	str	r3, [sp, #44]	; 0x2c
   1c1e8:	str	r3, [sp, #36]	; 0x24
   1c1ec:	b	1c148 <__flatcc_fb_gen_c_verifier@@Base+0xf18>
   1c1f0:	mov	r6, #0
   1c1f4:	str	r6, [sp, #32]
   1c1f8:	str	r6, [sp, #20]
   1c1fc:	b	1c1cc <__flatcc_fb_gen_c_verifier@@Base+0xf9c>
   1c200:	mov	r5, #0
   1c204:	mov	r6, r5
   1c208:	mov	sl, r5
   1c20c:	mov	r3, #1
   1c210:	str	r5, [sp, #32]
   1c214:	str	r5, [sp, #20]
   1c218:	str	r3, [sp, #28]
   1c21c:	str	r5, [sp, #36]	; 0x24
   1c220:	b	1c148 <__flatcc_fb_gen_c_verifier@@Base+0xf18>
   1c224:	mov	r5, r6
   1c228:	str	r6, [sp, #32]
   1c22c:	str	r6, [sp, #20]
   1c230:	str	r6, [sp, #28]
   1c234:	mov	sl, r6
   1c238:	str	r6, [sp, #44]	; 0x2c
   1c23c:	b	1c21c <__flatcc_fb_gen_c_verifier@@Base+0xfec>
   1c240:	mov	r5, #0
   1c244:	mov	r6, r5
   1c248:	str	r5, [sp, #32]
   1c24c:	str	r5, [sp, #20]
   1c250:	str	r5, [sp, #28]
   1c254:	str	r5, [sp, #24]
   1c258:	str	r5, [sp, #40]	; 0x28
   1c25c:	mov	sl, r5
   1c260:	str	r5, [sp, #44]	; 0x2c
   1c264:	mov	r3, #1
   1c268:	b	1c1e8 <__flatcc_fb_gen_c_verifier@@Base+0xfb8>
   1c26c:	mov	r5, #0
   1c270:	mov	r6, r5
   1c274:	mov	sl, r5
   1c278:	str	r5, [sp, #28]
   1c27c:	str	r5, [sp, #24]
   1c280:	str	r5, [sp, #40]	; 0x28
   1c284:	str	r5, [sp, #44]	; 0x2c
   1c288:	str	r5, [sp, #36]	; 0x24
   1c28c:	mov	r3, #0
   1c290:	str	r3, [sp, #64]	; 0x40
   1c294:	str	r3, [sp, #32]
   1c298:	str	r3, [sp, #20]
   1c29c:	ldr	r3, [sp, #52]	; 0x34
   1c2a0:	cmp	r3, #0
   1c2a4:	andne	r3, r8, #1
   1c2a8:	moveq	r3, #0
   1c2ac:	movne	sl, #0
   1c2b0:	cmp	r3, #0
   1c2b4:	movne	r3, #1
   1c2b8:	moveq	r3, #0
   1c2bc:	str	r3, [sp, #76]	; 0x4c
   1c2c0:	ldr	r3, [sp, #28]
   1c2c4:	movne	r8, #0
   1c2c8:	ands	r3, r8, r3
   1c2cc:	movne	r8, #0
   1c2d0:	cmp	r6, #1
   1c2d4:	str	r3, [sp, #72]	; 0x48
   1c2d8:	bne	1c2f4 <__flatcc_fb_gen_c_verifier@@Base+0x10c4>
   1c2dc:	ldr	r1, [pc, #2024]	; 1cacc <__flatcc_fb_gen_c_verifier@@Base+0x189c>
   1c2e0:	mov	r0, r4
   1c2e4:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1c2e8:	ldr	r3, [r4, #220]	; 0xdc
   1c2ec:	add	r3, r3, #1
   1c2f0:	str	r3, [r4, #220]	; 0xdc
   1c2f4:	ldr	fp, [pc, #2004]	; 1cad0 <__flatcc_fb_gen_c_verifier@@Base+0x18a0>
   1c2f8:	cmp	r6, #2
   1c2fc:	mov	r9, fp
   1c300:	bne	1c390 <__flatcc_fb_gen_c_verifier@@Base+0x1160>
   1c304:	ldr	r3, [r4, #220]	; 0xdc
   1c308:	cmp	r3, #0
   1c30c:	bne	1c32c <__flatcc_fb_gen_c_verifier@@Base+0x10fc>
   1c310:	ldr	r3, [pc, #1968]	; 1cac8 <__flatcc_fb_gen_c_verifier@@Base+0x1898>
   1c314:	ldr	r2, [pc, #1976]	; 1cad4 <__flatcc_fb_gen_c_verifier@@Base+0x18a4>
   1c318:	ldr	r1, [pc, #1948]	; 1cabc <__flatcc_fb_gen_c_verifier@@Base+0x188c>
   1c31c:	ldr	r0, [pc, #1972]	; 1cad8 <__flatcc_fb_gen_c_verifier@@Base+0x18a8>
   1c320:	bl	14094 <__assert_fail@plt>
   1c324:	mov	r6, #2
   1c328:	b	1c304 <__flatcc_fb_gen_c_verifier@@Base+0x10d4>
   1c32c:	sub	r3, r3, #1
   1c330:	str	r3, [r4, #220]	; 0xdc
   1c334:	ldr	r1, [pc, #1952]	; 1cadc <__flatcc_fb_gen_c_verifier@@Base+0x18ac>
   1c338:	mov	r0, r4
   1c33c:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1c340:	ldr	r3, [r4, #220]	; 0xdc
   1c344:	add	r1, sp, #292	; 0x124
   1c348:	add	r3, r3, #1
   1c34c:	str	r3, [r4, #220]	; 0xdc
   1c350:	ldr	r0, [r7, #104]	; 0x68
   1c354:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x7f8>
   1c358:	ldr	r3, [r7, #104]	; 0x68
   1c35c:	ldr	r1, [pc, #1916]	; 1cae0 <__flatcc_fb_gen_c_verifier@@Base+0x18b0>
   1c360:	mov	r0, r4
   1c364:	ldrh	r3, [r3, #8]
   1c368:	mov	sl, #0
   1c36c:	mov	r8, sl
   1c370:	cmp	r3, #0
   1c374:	ldr	r3, [sp, #40]	; 0x28
   1c378:	moveq	r3, #1
   1c37c:	str	r3, [sp, #40]	; 0x28
   1c380:	ldr	r3, [sp, #24]
   1c384:	movne	r3, #1
   1c388:	str	r3, [sp, #24]
   1c38c:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1c390:	ldr	r3, [sp, #24]
   1c394:	ldr	r2, [sp, #52]	; 0x34
   1c398:	orr	r3, sl, r3
   1c39c:	orr	r3, r3, r2
   1c3a0:	cmp	sl, #0
   1c3a4:	str	r3, [sp, #48]	; 0x30
   1c3a8:	beq	1caa4 <__flatcc_fb_gen_c_verifier@@Base+0x1874>
   1c3ac:	sub	r3, r5, #1
   1c3b0:	cmp	r3, #10
   1c3b4:	ldrls	pc, [pc, r3, lsl #2]
   1c3b8:	b	1c3e8 <__flatcc_fb_gen_c_verifier@@Base+0x11b8>
   1c3bc:	andeq	ip, r1, ip, lsl #21
   1c3c0:	andeq	ip, r1, r0, lsl #21
   1c3c4:	muleq	r1, r8, sl
   1c3c8:	andeq	ip, r1, ip, lsl r4
   1c3cc:	andeq	ip, r1, ip, lsr r5
   1c3d0:	strdeq	ip, [r1], -r8
   1c3d4:	andeq	ip, r1, r4, lsl #10
   1c3d8:	andeq	ip, r1, r0, lsl r5
   1c3dc:	andeq	ip, r1, ip, lsl r5
   1c3e0:	andeq	ip, r1, r4, lsr r5
   1c3e4:	andeq	ip, r1, r8, lsr #10
   1c3e8:	ldr	r0, [pc, #1732]	; 1cab4 <__flatcc_fb_gen_c_verifier@@Base+0x1884>
   1c3ec:	ldr	r3, [pc, #1776]	; 1cae4 <__flatcc_fb_gen_c_verifier@@Base+0x18b4>
   1c3f0:	ldr	r2, [pc, #1776]	; 1cae8 <__flatcc_fb_gen_c_verifier@@Base+0x18b8>
   1c3f4:	str	r3, [sp]
   1c3f8:	ldr	r1, [pc, #1728]	; 1cac0 <__flatcc_fb_gen_c_verifier@@Base+0x1890>
   1c3fc:	mov	r3, #96	; 0x60
   1c400:	ldr	r0, [r0]
   1c404:	bl	13fd4 <fprintf@plt>
   1c408:	ldr	r3, [pc, #1756]	; 1caec <__flatcc_fb_gen_c_verifier@@Base+0x18bc>
   1c40c:	ldr	r1, [pc, #1748]	; 1cae8 <__flatcc_fb_gen_c_verifier@@Base+0x18b8>
   1c410:	mov	r2, #96	; 0x60
   1c414:	ldr	r0, [pc, #1748]	; 1caf0 <__flatcc_fb_gen_c_verifier@@Base+0x18c0>
   1c418:	b	1c320 <__flatcc_fb_gen_c_verifier@@Base+0x10f0>
   1c41c:	ldr	fp, [pc, #1744]	; 1caf4 <__flatcc_fb_gen_c_verifier@@Base+0x18c4>
   1c420:	ldr	r9, [pc, #1744]	; 1caf8 <__flatcc_fb_gen_c_verifier@@Base+0x18c8>
   1c424:	cmp	r8, #0
   1c428:	beq	1c470 <__flatcc_fb_gen_c_verifier@@Base+0x1240>
   1c42c:	ldr	r3, [sp, #48]	; 0x30
   1c430:	cmp	r3, #0
   1c434:	bne	1c548 <__flatcc_fb_gen_c_verifier@@Base+0x1318>
   1c438:	ldr	r1, [pc, #1724]	; 1cafc <__flatcc_fb_gen_c_verifier@@Base+0x18cc>
   1c43c:	mov	r0, r4
   1c440:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1c444:	ldr	r1, [pc, #1716]	; 1cb00 <__flatcc_fb_gen_c_verifier@@Base+0x18d0>
   1c448:	mov	r0, r4
   1c44c:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1c450:	ldr	r1, [pc, #1708]	; 1cb04 <__flatcc_fb_gen_c_verifier@@Base+0x18d4>
   1c454:	mov	r0, r4
   1c458:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1c45c:	ldr	r3, [r4, #220]	; 0xdc
   1c460:	cmp	sl, #0
   1c464:	add	r3, r3, #1
   1c468:	str	r3, [r4, #220]	; 0xdc
   1c46c:	beq	1c5b4 <__flatcc_fb_gen_c_verifier@@Base+0x1384>
   1c470:	mov	r2, fp
   1c474:	ldr	r1, [pc, #1676]	; 1cb08 <__flatcc_fb_gen_c_verifier@@Base+0x18d8>
   1c478:	mov	r0, r4
   1c47c:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1c480:	ldr	r1, [pc, #1668]	; 1cb0c <__flatcc_fb_gen_c_verifier@@Base+0x18dc>
   1c484:	mov	r0, r4
   1c488:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1c48c:	ldr	r3, [r4, #220]	; 0xdc
   1c490:	add	r3, r3, #2
   1c494:	str	r3, [r4, #220]	; 0xdc
   1c498:	ldr	r3, [sp, #44]	; 0x2c
   1c49c:	cmp	r3, #0
   1c4a0:	beq	1c4b4 <__flatcc_fb_gen_c_verifier@@Base+0x1284>
   1c4a4:	add	r2, sp, #292	; 0x124
   1c4a8:	ldr	r1, [pc, #1632]	; 1cb10 <__flatcc_fb_gen_c_verifier@@Base+0x18e0>
   1c4ac:	mov	r0, r4
   1c4b0:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1c4b4:	ldr	r2, [r4, #208]	; 0xd0
   1c4b8:	add	r3, sp, #88	; 0x58
   1c4bc:	ldr	r1, [pc, #1616]	; 1cb14 <__flatcc_fb_gen_c_verifier@@Base+0x18e4>
   1c4c0:	ldr	r2, [r2, #160]	; 0xa0
   1c4c4:	mov	r0, r4
   1c4c8:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1c4cc:	ldr	r3, [r4, #208]	; 0xd0
   1c4d0:	ldr	r1, [pc, #1600]	; 1cb18 <__flatcc_fb_gen_c_verifier@@Base+0x18e8>
   1c4d4:	mov	r0, r4
   1c4d8:	ldr	r2, [r3, #160]	; 0xa0
   1c4dc:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1c4e0:	ldr	r3, [r4, #220]	; 0xdc
   1c4e4:	cmp	r3, #0
   1c4e8:	bne	1c59c <__flatcc_fb_gen_c_verifier@@Base+0x136c>
   1c4ec:	ldr	r3, [pc, #1492]	; 1cac8 <__flatcc_fb_gen_c_verifier@@Base+0x1898>
   1c4f0:	ldr	r2, [pc, #1572]	; 1cb1c <__flatcc_fb_gen_c_verifier@@Base+0x18ec>
   1c4f4:	b	1c318 <__flatcc_fb_gen_c_verifier@@Base+0x10e8>
   1c4f8:	ldr	fp, [pc, #1568]	; 1cb20 <__flatcc_fb_gen_c_verifier@@Base+0x18f0>
   1c4fc:	ldr	r9, [pc, #1568]	; 1cb24 <__flatcc_fb_gen_c_verifier@@Base+0x18f4>
   1c500:	b	1c424 <__flatcc_fb_gen_c_verifier@@Base+0x11f4>
   1c504:	ldr	fp, [pc, #1564]	; 1cb28 <__flatcc_fb_gen_c_verifier@@Base+0x18f8>
   1c508:	ldr	r9, [pc, #1564]	; 1cb2c <__flatcc_fb_gen_c_verifier@@Base+0x18fc>
   1c50c:	b	1c424 <__flatcc_fb_gen_c_verifier@@Base+0x11f4>
   1c510:	ldr	fp, [pc, #1560]	; 1cb30 <__flatcc_fb_gen_c_verifier@@Base+0x1900>
   1c514:	ldr	r9, [pc, #1560]	; 1cb34 <__flatcc_fb_gen_c_verifier@@Base+0x1904>
   1c518:	b	1c424 <__flatcc_fb_gen_c_verifier@@Base+0x11f4>
   1c51c:	ldr	fp, [pc, #1556]	; 1cb38 <__flatcc_fb_gen_c_verifier@@Base+0x1908>
   1c520:	ldr	r9, [pc, #1556]	; 1cb3c <__flatcc_fb_gen_c_verifier@@Base+0x190c>
   1c524:	b	1c424 <__flatcc_fb_gen_c_verifier@@Base+0x11f4>
   1c528:	ldr	fp, [pc, #1552]	; 1cb40 <__flatcc_fb_gen_c_verifier@@Base+0x1910>
   1c52c:	mov	r9, fp
   1c530:	b	1c424 <__flatcc_fb_gen_c_verifier@@Base+0x11f4>
   1c534:	ldr	fp, [pc, #1544]	; 1cb44 <__flatcc_fb_gen_c_verifier@@Base+0x1914>
   1c538:	b	1c52c <__flatcc_fb_gen_c_verifier@@Base+0x12fc>
   1c53c:	ldr	fp, [pc, #1456]	; 1caf4 <__flatcc_fb_gen_c_verifier@@Base+0x18c4>
   1c540:	ldr	r9, [pc, #1536]	; 1cb48 <__flatcc_fb_gen_c_verifier@@Base+0x1918>
   1c544:	b	1c424 <__flatcc_fb_gen_c_verifier@@Base+0x11f4>
   1c548:	ldrd	r2, [r7, #88]	; 0x58
   1c54c:	strd	r2, [sp, #56]	; 0x38
   1c550:	ldrsh	r3, [r7, #74]	; 0x4a
   1c554:	str	r3, [sp, #84]	; 0x54
   1c558:	ldrd	r2, [sp, #56]	; 0x38
   1c55c:	orrs	r3, r2, r3
   1c560:	mvneq	r0, #0
   1c564:	moveq	r1, #0
   1c568:	beq	1c57c <__flatcc_fb_gen_c_verifier@@Base+0x134c>
   1c56c:	ldrd	r2, [sp, #56]	; 0x38
   1c570:	mvn	r0, #0
   1c574:	mov	r1, #0
   1c578:	bl	2f27c <fb_value_set_visit@@Base+0x834>
   1c57c:	ldr	r3, [sp, #84]	; 0x54
   1c580:	strd	r0, [sp, #8]
   1c584:	str	r3, [sp]
   1c588:	ldr	r1, [pc, #1468]	; 1cb4c <__flatcc_fb_gen_c_verifier@@Base+0x191c>
   1c58c:	ldrd	r2, [sp, #56]	; 0x38
   1c590:	mov	r0, r4
   1c594:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1c598:	b	1c444 <__flatcc_fb_gen_c_verifier@@Base+0x1214>
   1c59c:	cmp	r3, #1
   1c5a0:	moveq	r3, #0
   1c5a4:	streq	r3, [r4, #220]	; 0xdc
   1c5a8:	beq	1c4ec <__flatcc_fb_gen_c_verifier@@Base+0x12bc>
   1c5ac:	sub	r3, r3, #2
   1c5b0:	str	r3, [r4, #220]	; 0xdc
   1c5b4:	ldr	r3, [sp, #48]	; 0x30
   1c5b8:	cmp	r3, #0
   1c5bc:	moveq	r3, #0
   1c5c0:	andne	r3, r8, #1
   1c5c4:	cmp	r3, #0
   1c5c8:	beq	1c5d8 <__flatcc_fb_gen_c_verifier@@Base+0x13a8>
   1c5cc:	ldr	r1, [pc, #1404]	; 1cb50 <__flatcc_fb_gen_c_verifier@@Base+0x1920>
   1c5d0:	mov	r0, r4
   1c5d4:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1c5d8:	ldr	r3, [sp, #68]	; 0x44
   1c5dc:	cmp	r3, #1
   1c5e0:	bne	1c658 <__flatcc_fb_gen_c_verifier@@Base+0x1428>
   1c5e4:	ldrd	r2, [r7, #80]	; 0x50
   1c5e8:	ldr	r1, [pc, #1380]	; 1cb54 <__flatcc_fb_gen_c_verifier@@Base+0x1924>
   1c5ec:	mov	r0, r4
   1c5f0:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1c5f4:	cmp	sl, #0
   1c5f8:	beq	1c7ac <__flatcc_fb_gen_c_verifier@@Base+0x157c>
   1c5fc:	mov	r2, r9
   1c600:	ldr	r1, [pc, #1360]	; 1cb58 <__flatcc_fb_gen_c_verifier@@Base+0x1928>
   1c604:	mov	r0, r4
   1c608:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1c60c:	ldr	r1, [pc, #1352]	; 1cb5c <__flatcc_fb_gen_c_verifier@@Base+0x192c>
   1c610:	mov	r0, r4
   1c614:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1c618:	ldr	r3, [r4, #220]	; 0xdc
   1c61c:	mov	r2, r9
   1c620:	add	r3, r3, #1
   1c624:	str	r3, [r4, #220]	; 0xdc
   1c628:	ldr	r1, [pc, #1328]	; 1cb60 <__flatcc_fb_gen_c_verifier@@Base+0x1930>
   1c62c:	mov	r0, r4
   1c630:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1c634:	ldr	r1, [pc, #1320]	; 1cb64 <__flatcc_fb_gen_c_verifier@@Base+0x1934>
   1c638:	mov	r0, r4
   1c63c:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1c640:	ldr	r3, [r4, #220]	; 0xdc
   1c644:	cmp	r3, #0
   1c648:	bne	1c68c <__flatcc_fb_gen_c_verifier@@Base+0x145c>
   1c64c:	ldr	r3, [pc, #1140]	; 1cac8 <__flatcc_fb_gen_c_verifier@@Base+0x1898>
   1c650:	ldr	r2, [pc, #1296]	; 1cb68 <__flatcc_fb_gen_c_verifier@@Base+0x1938>
   1c654:	b	1c318 <__flatcc_fb_gen_c_verifier@@Base+0x10e8>
   1c658:	ldr	r2, [sp, #24]
   1c65c:	eor	r3, r8, #1
   1c660:	tst	r3, r2
   1c664:	beq	1c5f4 <__flatcc_fb_gen_c_verifier@@Base+0x13c4>
   1c668:	ldrh	r3, [r7, #74]	; 0x4a
   1c66c:	ldr	r1, [pc, #1272]	; 1cb6c <__flatcc_fb_gen_c_verifier@@Base+0x193c>
   1c670:	mov	r0, r4
   1c674:	str	r3, [sp, #8]
   1c678:	ldrd	r2, [r7, #88]	; 0x58
   1c67c:	strd	r2, [sp]
   1c680:	ldrd	r2, [r7, #96]	; 0x60
   1c684:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1c688:	b	1c5f4 <__flatcc_fb_gen_c_verifier@@Base+0x13c4>
   1c68c:	sub	r3, r3, #1
   1c690:	str	r3, [r4, #220]	; 0xdc
   1c694:	ldr	r1, [pc, #1236]	; 1cb70 <__flatcc_fb_gen_c_verifier@@Base+0x1940>
   1c698:	mov	r0, r4
   1c69c:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1c6a0:	ldr	r3, [sp, #80]	; 0x50
   1c6a4:	orr	sl, r8, r3
   1c6a8:	ldr	r3, [sp, #64]	; 0x40
   1c6ac:	orrs	r3, sl, r3
   1c6b0:	bne	1c714 <__flatcc_fb_gen_c_verifier@@Base+0x14e4>
   1c6b4:	ldrh	r3, [r7, #56]	; 0x38
   1c6b8:	sub	r3, r3, #3
   1c6bc:	cmp	r3, #3
   1c6c0:	ldrls	pc, [pc, r3, lsl #2]
   1c6c4:	b	1c768 <__flatcc_fb_gen_c_verifier@@Base+0x1538>
   1c6c8:	andeq	ip, r1, r4, asr r7
   1c6cc:	andeq	ip, r1, r8, asr #14
   1c6d0:	ldrdeq	ip, [r1], -r8
   1c6d4:	ldrdeq	ip, [r1], -r8
   1c6d8:	ldrd	r2, [r7, #48]	; 0x30
   1c6dc:	ldr	r1, [pc, #1168]	; 1cb74 <__flatcc_fb_gen_c_verifier@@Base+0x1944>
   1c6e0:	mov	r0, r4
   1c6e4:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1c6e8:	ldr	r3, [r4, #220]	; 0xdc
   1c6ec:	ldr	r1, [pc, #1156]	; 1cb78 <__flatcc_fb_gen_c_verifier@@Base+0x1948>
   1c6f0:	add	r3, r3, #1
   1c6f4:	str	r3, [r4, #220]	; 0xdc
   1c6f8:	ldrsh	r3, [r7, #74]	; 0x4a
   1c6fc:	mov	r0, r4
   1c700:	str	r3, [sp, #8]
   1c704:	ldrd	r2, [r7, #88]	; 0x58
   1c708:	strd	r2, [sp]
   1c70c:	ldrd	r2, [r7, #96]	; 0x60
   1c710:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1c714:	mov	r3, r9
   1c718:	mov	r2, r4
   1c71c:	ldr	r1, [pc, #1112]	; 1cb7c <__flatcc_fb_gen_c_verifier@@Base+0x194c>
   1c720:	mov	r0, r4
   1c724:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1c728:	cmp	sl, #0
   1c72c:	bne	1c7d8 <__flatcc_fb_gen_c_verifier@@Base+0x15a8>
   1c730:	ldr	r3, [r4, #220]	; 0xdc
   1c734:	cmp	r3, #0
   1c738:	bne	1c794 <__flatcc_fb_gen_c_verifier@@Base+0x1564>
   1c73c:	ldr	r3, [pc, #900]	; 1cac8 <__flatcc_fb_gen_c_verifier@@Base+0x1898>
   1c740:	ldr	r2, [pc, #1080]	; 1cb80 <__flatcc_fb_gen_c_verifier@@Base+0x1950>
   1c744:	b	1c318 <__flatcc_fb_gen_c_verifier@@Base+0x10e8>
   1c748:	ldrd	r2, [r7, #48]	; 0x30
   1c74c:	ldr	r1, [pc, #1072]	; 1cb84 <__flatcc_fb_gen_c_verifier@@Base+0x1954>
   1c750:	b	1c6e0 <__flatcc_fb_gen_c_verifier@@Base+0x14b0>
   1c754:	ldrd	r2, [r7, #48]	; 0x30
   1c758:	ldr	r1, [pc, #1064]	; 1cb88 <__flatcc_fb_gen_c_verifier@@Base+0x1958>
   1c75c:	mov	r0, r4
   1c760:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1c764:	b	1c6e8 <__flatcc_fb_gen_c_verifier@@Base+0x14b8>
   1c768:	ldr	r0, [pc, #836]	; 1cab4 <__flatcc_fb_gen_c_verifier@@Base+0x1884>
   1c76c:	ldr	r3, [pc, #1048]	; 1cb8c <__flatcc_fb_gen_c_verifier@@Base+0x195c>
   1c770:	ldr	r2, [pc, #836]	; 1cabc <__flatcc_fb_gen_c_verifier@@Base+0x188c>
   1c774:	str	r3, [sp]
   1c778:	ldr	r1, [pc, #832]	; 1cac0 <__flatcc_fb_gen_c_verifier@@Base+0x1890>
   1c77c:	ldr	r3, [pc, #1036]	; 1cb90 <__flatcc_fb_gen_c_verifier@@Base+0x1960>
   1c780:	ldr	r0, [r0]
   1c784:	bl	13fd4 <fprintf@plt>
   1c788:	ldr	r3, [pc, #824]	; 1cac8 <__flatcc_fb_gen_c_verifier@@Base+0x1898>
   1c78c:	ldr	r2, [pc, #1020]	; 1cb90 <__flatcc_fb_gen_c_verifier@@Base+0x1960>
   1c790:	b	1c1a4 <__flatcc_fb_gen_c_verifier@@Base+0xf74>
   1c794:	ldr	r1, [pc, #980]	; 1cb70 <__flatcc_fb_gen_c_verifier@@Base+0x1940>
   1c798:	sub	r3, r3, #1
   1c79c:	str	r3, [r4, #220]	; 0xdc
   1c7a0:	mov	r0, r4
   1c7a4:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1c7a8:	b	1c7e0 <__flatcc_fb_gen_c_verifier@@Base+0x15b0>
   1c7ac:	ldr	r3, [sp, #24]
   1c7b0:	cmp	r3, #0
   1c7b4:	addne	r2, sp, #292	; 0x124
   1c7b8:	ldrne	r1, [pc, #980]	; 1cb94 <__flatcc_fb_gen_c_verifier@@Base+0x1964>
   1c7bc:	bne	1c83c <__flatcc_fb_gen_c_verifier@@Base+0x160c>
   1c7c0:	ldr	r3, [sp, #36]	; 0x24
   1c7c4:	cmp	r3, #0
   1c7c8:	beq	1c820 <__flatcc_fb_gen_c_verifier@@Base+0x15f0>
   1c7cc:	ldr	r1, [pc, #964]	; 1cb98 <__flatcc_fb_gen_c_verifier@@Base+0x1968>
   1c7d0:	mov	r0, r4
   1c7d4:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1c7d8:	cmp	r8, #0
   1c7dc:	bne	1c980 <__flatcc_fb_gen_c_verifier@@Base+0x1750>
   1c7e0:	cmp	r6, #1
   1c7e4:	beq	1c324 <__flatcc_fb_gen_c_verifier@@Base+0x10f4>
   1c7e8:	cmp	r6, #2
   1c7ec:	bne	1ca30 <__flatcc_fb_gen_c_verifier@@Base+0x1800>
   1c7f0:	ldr	r1, [pc, #932]	; 1cb9c <__flatcc_fb_gen_c_verifier@@Base+0x196c>
   1c7f4:	mov	r0, r4
   1c7f8:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1c7fc:	ldr	r1, [pc, #924]	; 1cba0 <__flatcc_fb_gen_c_verifier@@Base+0x1970>
   1c800:	mov	r0, r4
   1c804:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1c808:	ldr	r3, [r4, #220]	; 0xdc
   1c80c:	cmp	r3, #0
   1c810:	bne	1ca1c <__flatcc_fb_gen_c_verifier@@Base+0x17ec>
   1c814:	ldr	r3, [pc, #684]	; 1cac8 <__flatcc_fb_gen_c_verifier@@Base+0x1898>
   1c818:	ldr	r2, [pc, #900]	; 1cba4 <__flatcc_fb_gen_c_verifier@@Base+0x1974>
   1c81c:	b	1c318 <__flatcc_fb_gen_c_verifier@@Base+0x10e8>
   1c820:	ldr	r3, [sp, #64]	; 0x40
   1c824:	cmp	r3, #0
   1c828:	beq	1c848 <__flatcc_fb_gen_c_verifier@@Base+0x1618>
   1c82c:	ldr	r1, [pc, #884]	; 1cba8 <__flatcc_fb_gen_c_verifier@@Base+0x1978>
   1c830:	ldr	r3, [sp, #20]
   1c834:	clz	r2, r3
   1c838:	lsr	r2, r2, #5
   1c83c:	mov	r0, r4
   1c840:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1c844:	b	1c7d8 <__flatcc_fb_gen_c_verifier@@Base+0x15a8>
   1c848:	ldr	r3, [sp, #40]	; 0x28
   1c84c:	cmp	r3, #0
   1c850:	addne	r2, sp, #292	; 0x124
   1c854:	ldrne	r1, [pc, #848]	; 1cbac <__flatcc_fb_gen_c_verifier@@Base+0x197c>
   1c858:	bne	1c83c <__flatcc_fb_gen_c_verifier@@Base+0x160c>
   1c85c:	ldr	r3, [sp, #28]
   1c860:	cmp	r3, #0
   1c864:	beq	1c89c <__flatcc_fb_gen_c_verifier@@Base+0x166c>
   1c868:	ldr	r3, [sp, #72]	; 0x48
   1c86c:	ldrd	r0, [r7, #96]	; 0x60
   1c870:	cmp	r3, #0
   1c874:	ldr	r2, [r7, #112]	; 0x70
   1c878:	add	r3, sp, #292	; 0x124
   1c87c:	strd	r0, [sp]
   1c880:	ldrne	r1, [pc, #808]	; 1cbb0 <__flatcc_fb_gen_c_verifier@@Base+0x1980>
   1c884:	ldreq	r1, [pc, #808]	; 1cbb4 <__flatcc_fb_gen_c_verifier@@Base+0x1984>
   1c888:	str	r3, [sp, #8]
   1c88c:	mov	r3, #0
   1c890:	mov	r0, r4
   1c894:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1c898:	b	1c7d8 <__flatcc_fb_gen_c_verifier@@Base+0x15a8>
   1c89c:	ldr	r3, [sp, #52]	; 0x34
   1c8a0:	cmp	r3, #0
   1c8a4:	beq	1c978 <__flatcc_fb_gen_c_verifier@@Base+0x1748>
   1c8a8:	ldr	r1, [pc, #604]	; 1cb0c <__flatcc_fb_gen_c_verifier@@Base+0x18dc>
   1c8ac:	mov	r0, r4
   1c8b0:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1c8b4:	ldr	r3, [r4, #220]	; 0xdc
   1c8b8:	add	r2, sp, #292	; 0x124
   1c8bc:	add	r3, r3, #2
   1c8c0:	str	r3, [r4, #220]	; 0xdc
   1c8c4:	ldr	r1, [pc, #580]	; 1cb10 <__flatcc_fb_gen_c_verifier@@Base+0x18e0>
   1c8c8:	mov	r0, r4
   1c8cc:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1c8d0:	ldr	r2, [r4, #208]	; 0xd0
   1c8d4:	add	r3, sp, #88	; 0x58
   1c8d8:	ldr	r1, [pc, #564]	; 1cb14 <__flatcc_fb_gen_c_verifier@@Base+0x18e4>
   1c8dc:	ldr	r2, [r2, #160]	; 0xa0
   1c8e0:	mov	r0, r4
   1c8e4:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1c8e8:	ldr	r3, [r4, #208]	; 0xd0
   1c8ec:	ldr	r1, [pc, #548]	; 1cb18 <__flatcc_fb_gen_c_verifier@@Base+0x18e8>
   1c8f0:	mov	r0, r4
   1c8f4:	ldr	r2, [r3, #160]	; 0xa0
   1c8f8:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1c8fc:	ldr	r3, [r4, #220]	; 0xdc
   1c900:	cmp	r3, #0
   1c904:	bne	1c914 <__flatcc_fb_gen_c_verifier@@Base+0x16e4>
   1c908:	ldr	r3, [pc, #440]	; 1cac8 <__flatcc_fb_gen_c_verifier@@Base+0x1898>
   1c90c:	ldr	r2, [pc, #676]	; 1cbb8 <__flatcc_fb_gen_c_verifier@@Base+0x1988>
   1c910:	b	1c318 <__flatcc_fb_gen_c_verifier@@Base+0x10e8>
   1c914:	cmp	r3, #1
   1c918:	ldreq	r3, [sp, #28]
   1c91c:	streq	r3, [r4, #220]	; 0xdc
   1c920:	beq	1c908 <__flatcc_fb_gen_c_verifier@@Base+0x16d8>
   1c924:	sub	r3, r3, #2
   1c928:	str	r3, [r4, #220]	; 0xdc
   1c92c:	ldr	r3, [sp, #76]	; 0x4c
   1c930:	ldrd	r0, [r7, #96]	; 0x60
   1c934:	cmp	r3, #0
   1c938:	ldr	r2, [r7, #112]	; 0x70
   1c93c:	add	r3, sp, #292	; 0x124
   1c940:	beq	1c964 <__flatcc_fb_gen_c_verifier@@Base+0x1734>
   1c944:	strd	r0, [sp]
   1c948:	str	r3, [sp, #12]
   1c94c:	str	r3, [sp, #8]
   1c950:	ldr	r1, [pc, #612]	; 1cbbc <__flatcc_fb_gen_c_verifier@@Base+0x198c>
   1c954:	mov	r3, #0
   1c958:	mov	r0, r4
   1c95c:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1c960:	b	1c7d8 <__flatcc_fb_gen_c_verifier@@Base+0x15a8>
   1c964:	str	r3, [sp, #8]
   1c968:	strd	r0, [sp]
   1c96c:	mov	r3, #0
   1c970:	ldr	r1, [pc, #584]	; 1cbc0 <__flatcc_fb_gen_c_verifier@@Base+0x1990>
   1c974:	b	1c890 <__flatcc_fb_gen_c_verifier@@Base+0x1660>
   1c978:	cmp	r8, #0
   1c97c:	beq	1c9c8 <__flatcc_fb_gen_c_verifier@@Base+0x1798>
   1c980:	ldr	r3, [sp, #48]	; 0x30
   1c984:	cmp	r3, #0
   1c988:	bne	1c9a4 <__flatcc_fb_gen_c_verifier@@Base+0x1774>
   1c98c:	ldr	r1, [pc, #560]	; 1cbc4 <__flatcc_fb_gen_c_verifier@@Base+0x1994>
   1c990:	mov	r0, r4
   1c994:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1c998:	ldr	r1, [pc, #552]	; 1cbc8 <__flatcc_fb_gen_c_verifier@@Base+0x1998>
   1c99c:	mov	r0, r4
   1c9a0:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1c9a4:	ldr	r1, [pc, #544]	; 1cbcc <__flatcc_fb_gen_c_verifier@@Base+0x199c>
   1c9a8:	mov	r0, r4
   1c9ac:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1c9b0:	ldr	r3, [r4, #220]	; 0xdc
   1c9b4:	cmp	r3, #0
   1c9b8:	bne	1c9f4 <__flatcc_fb_gen_c_verifier@@Base+0x17c4>
   1c9bc:	ldr	r3, [pc, #260]	; 1cac8 <__flatcc_fb_gen_c_verifier@@Base+0x1898>
   1c9c0:	ldr	r2, [pc, #520]	; 1cbd0 <__flatcc_fb_gen_c_verifier@@Base+0x19a0>
   1c9c4:	b	1c318 <__flatcc_fb_gen_c_verifier@@Base+0x10e8>
   1c9c8:	ldr	r0, [pc, #228]	; 1cab4 <__flatcc_fb_gen_c_verifier@@Base+0x1884>
   1c9cc:	ldr	r3, [pc, #512]	; 1cbd4 <__flatcc_fb_gen_c_verifier@@Base+0x19a4>
   1c9d0:	ldr	r2, [pc, #228]	; 1cabc <__flatcc_fb_gen_c_verifier@@Base+0x188c>
   1c9d4:	str	r3, [sp]
   1c9d8:	ldr	r1, [pc, #224]	; 1cac0 <__flatcc_fb_gen_c_verifier@@Base+0x1890>
   1c9dc:	mov	r3, #636	; 0x27c
   1c9e0:	ldr	r0, [r0]
   1c9e4:	bl	13fd4 <fprintf@plt>
   1c9e8:	ldr	r3, [pc, #216]	; 1cac8 <__flatcc_fb_gen_c_verifier@@Base+0x1898>
   1c9ec:	mov	r2, #636	; 0x27c
   1c9f0:	b	1c1a4 <__flatcc_fb_gen_c_verifier@@Base+0xf74>
   1c9f4:	sub	r3, r3, #1
   1c9f8:	ldr	r1, [pc, #368]	; 1cb70 <__flatcc_fb_gen_c_verifier@@Base+0x1940>
   1c9fc:	str	r3, [r4, #220]	; 0xdc
   1ca00:	mov	r0, r4
   1ca04:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1ca08:	ldr	r3, [sp, #48]	; 0x30
   1ca0c:	cmp	r3, #0
   1ca10:	ldreq	r1, [pc, #448]	; 1cbd8 <__flatcc_fb_gen_c_verifier@@Base+0x19a8>
   1ca14:	ldrne	r1, [pc, #448]	; 1cbdc <__flatcc_fb_gen_c_verifier@@Base+0x19ac>
   1ca18:	b	1c7a0 <__flatcc_fb_gen_c_verifier@@Base+0x1570>
   1ca1c:	sub	r3, r3, #1
   1ca20:	str	r3, [r4, #220]	; 0xdc
   1ca24:	ldr	r1, [pc, #436]	; 1cbe0 <__flatcc_fb_gen_c_verifier@@Base+0x19b0>
   1ca28:	mov	r0, r4
   1ca2c:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1ca30:	ldr	r2, [sp, #36]	; 0x24
   1ca34:	ldr	r3, [sp, #20]
   1ca38:	orr	r3, r3, r2
   1ca3c:	ldr	r2, [sp, #32]
   1ca40:	orr	r3, r3, r2
   1ca44:	ldr	r2, [sp, #40]	; 0x28
   1ca48:	orr	r3, r3, r2
   1ca4c:	orr	r6, r3, r6
   1ca50:	orrs	r3, r6, r8
   1ca54:	beq	1ca74 <__flatcc_fb_gen_c_verifier@@Base+0x1844>
   1ca58:	ldr	r1, [pc, #388]	; 1cbe4 <__flatcc_fb_gen_c_verifier@@Base+0x19b4>
   1ca5c:	mov	r0, r4
   1ca60:	ldrd	r2, [r7, #96]	; 0x60
   1ca64:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1ca68:	ldr	r1, [pc, #344]	; 1cbc8 <__flatcc_fb_gen_c_verifier@@Base+0x1998>
   1ca6c:	mov	r0, r4
   1ca70:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1ca74:	mov	r0, #0
   1ca78:	add	sp, sp, #516	; 0x204
   1ca7c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ca80:	ldr	fp, [pc, #352]	; 1cbe8 <__flatcc_fb_gen_c_verifier@@Base+0x19b8>
   1ca84:	ldr	r9, [pc, #352]	; 1cbec <__flatcc_fb_gen_c_verifier@@Base+0x19bc>
   1ca88:	b	1c424 <__flatcc_fb_gen_c_verifier@@Base+0x11f4>
   1ca8c:	ldr	fp, [pc, #348]	; 1cbf0 <__flatcc_fb_gen_c_verifier@@Base+0x19c0>
   1ca90:	ldr	r9, [pc, #348]	; 1cbf4 <__flatcc_fb_gen_c_verifier@@Base+0x19c4>
   1ca94:	b	1c424 <__flatcc_fb_gen_c_verifier@@Base+0x11f4>
   1ca98:	ldr	fp, [pc, #344]	; 1cbf8 <__flatcc_fb_gen_c_verifier@@Base+0x19c8>
   1ca9c:	ldr	r9, [pc, #344]	; 1cbfc <__flatcc_fb_gen_c_verifier@@Base+0x19cc>
   1caa0:	b	1c424 <__flatcc_fb_gen_c_verifier@@Base+0x11f4>
   1caa4:	cmp	r8, #0
   1caa8:	bne	1c42c <__flatcc_fb_gen_c_verifier@@Base+0x11fc>
   1caac:	b	1c5d8 <__flatcc_fb_gen_c_verifier@@Base+0x13a8>
   1cab0:	andeq	r8, r0, r0, lsl #5
   1cab4:	strheq	fp, [r5], -r0
   1cab8:	ldrdeq	r3, [r4], -fp
   1cabc:			; <UNDEFINED> instruction: 0x00042ebf
   1cac0:	andeq	r0, r3, lr, ror #20
   1cac4:	ldrdeq	r0, [r0], -r2
   1cac8:	andeq	r2, r4, r3, asr #25
   1cacc:	andeq	r3, r4, r6, lsl r4
   1cad0:	ldrdeq	r3, [r4], -r7
   1cad4:	andeq	r0, r0, sl, ror #3
   1cad8:	andeq	r2, r4, r4, lsl pc
   1cadc:	andeq	r3, r4, sl, asr #8
   1cae0:	andeq	r3, r4, r0, ror #8
   1cae4:	andeq	r0, r3, r9, ror sl
   1cae8:	andeq	r0, r3, r5, lsr #20
   1caec:	ldrdeq	r2, [r4], -fp
   1caf0:	andeq	r9, r3, sp, asr #1
   1caf4:	andeq	r0, r3, r9, lsl #20
   1caf8:	andeq	r0, r3, r5, asr #21
   1cafc:	andeq	r3, r4, r1, lsr #9
   1cb00:	andeq	r3, r4, r3, lsr r5
   1cb04:	andeq	r3, r4, pc, ror #10
   1cb08:	andeq	r3, r4, lr, ror r5
   1cb0c:	andeq	r3, r4, sl, lsl #11
   1cb10:	andeq	r3, r4, lr, asr #11
   1cb14:	andeq	r3, r4, r2, ror #11
   1cb18:	strdeq	r3, [r4], -pc	; <UNPREDICTABLE>
   1cb1c:	andeq	r0, r0, fp, lsl r2
   1cb20:	andeq	r0, r3, pc, ror #19
   1cb24:			; <UNDEFINED> instruction: 0x00030ab1
   1cb28:	strdeq	r0, [r3], -r8
   1cb2c:			; <UNDEFINED> instruction: 0x00030ab8
   1cb30:	andeq	r0, r3, r1, lsl #20
   1cb34:			; <UNDEFINED> instruction: 0x00030abf
   1cb38:	andeq	r0, r3, sl, lsl #20
   1cb3c:	andeq	r0, r3, r6, asr #21
   1cb40:	andeq	r0, r3, r8, lsl sl
   1cb44:	andeq	r0, r3, lr, lsl sl
   1cb48:	andeq	r7, r4, r0, ror pc
   1cb4c:	andeq	r3, r4, r0, ror #9
   1cb50:	andeq	r3, r4, r0, lsr #12
   1cb54:	andeq	r3, r4, r6, ror #12
   1cb58:	andeq	r3, r4, r2, ror #13
   1cb5c:	andeq	r3, r4, sp, lsl r7
   1cb60:	andeq	r3, r4, r0, lsr r7
   1cb64:	andeq	r3, r4, r6, lsl #15
   1cb68:	andeq	r0, r0, pc, lsr #4
   1cb6c:	muleq	r4, r3, r6
   1cb70:	andeq	r7, r3, r7, lsl r0
   1cb74:			; <UNDEFINED> instruction: 0x000437b2
   1cb78:	andeq	r3, r4, ip, lsr #17
   1cb7c:	strdeq	r3, [r4], -ip
   1cb80:	andeq	r0, r0, sl, asr r2
   1cb84:	strdeq	r3, [r4], -r6
   1cb88:	andeq	r3, r4, sl, lsr r8
   1cb8c:	andeq	r3, r4, sp, ror r8
   1cb90:	andeq	r0, r0, lr, asr #4
   1cb94:	andeq	r3, r4, r9, lsl r9
   1cb98:	andeq	r3, r4, r1, asr r9
   1cb9c:	strdeq	r3, [r4], -r3	; <UNPREDICTABLE>
   1cba0:	andeq	r3, r4, sl, lsl #26
   1cba4:	muleq	r0, r5, r2
   1cba8:	andeq	r3, r4, sp, lsl #19
   1cbac:	ldrdeq	r3, [r4], -sl
   1cbb0:	andeq	r3, r4, sl, lsl #20
   1cbb4:	andeq	r3, r4, fp, ror #20
   1cbb8:	andeq	r0, r0, r3, ror r2
   1cbbc:	andeq	r3, r4, r5, asr #21
   1cbc0:	andeq	r3, r4, r8, asr fp
   1cbc4:	strdeq	r3, [r4], -sl
   1cbc8:	andeq	r3, r4, pc, asr #24
   1cbcc:	andeq	r3, r4, ip, asr ip
   1cbd0:	andeq	r0, r0, r7, lsl #5
   1cbd4:	andeq	r3, r4, r9, asr #23
   1cbd8:	muleq	r4, r6, ip
   1cbdc:	andeq	r3, r4, r8, asr #25
   1cbe0:	andeq	r3, r4, sl, lsr sp
   1cbe4:	andeq	r3, r4, sp, asr #26
   1cbe8:	strdeq	r0, [r3], -r7
   1cbec:			; <UNDEFINED> instruction: 0x00030ab7
   1cbf0:	andeq	r0, r3, lr, ror #19
   1cbf4:			; <UNDEFINED> instruction: 0x00030ab0
   1cbf8:	andeq	r0, r3, r0, lsl #20
   1cbfc:			; <UNDEFINED> instruction: 0x00030abe
   1cc00:	add	r3, r1, #4
   1cc04:	mov	r2, r0
   1cc08:	ldr	r1, [pc, #4]	; 1cc14 <__flatcc_fb_gen_c_verifier@@Base+0x19e4>
   1cc0c:	mov	r0, r3
   1cc10:	b	22f04 <fb_symbol_table_visit@@Base>
   1cc14:	strdeq	ip, [r1], -r4
   1cc18:	add	r3, r1, #4
   1cc1c:	mov	r2, r0
   1cc20:	ldr	r1, [pc, #4]	; 1cc2c <__flatcc_fb_gen_c_verifier@@Base+0x19fc>
   1cc24:	mov	r0, r3
   1cc28:	b	22f04 <fb_symbol_table_visit@@Base>
   1cc2c:	ldrdeq	sp, [r1], -r4
   1cc30:	push	{r4, r5, r6, lr}
   1cc34:	mov	r2, #8
   1cc38:	ldr	r3, [pc, #40]	; 1cc68 <__flatcc_fb_gen_c_verifier@@Base+0x1a38>
   1cc3c:	mov	r5, r0
   1cc40:	mov	r4, r1
   1cc44:	bl	14058 <qsort@plt>
   1cc48:	mov	r3, #0
   1cc4c:	cmp	r3, r4
   1cc50:	blt	1cc58 <__flatcc_fb_gen_c_verifier@@Base+0x1a28>
   1cc54:	pop	{r4, r5, r6, pc}
   1cc58:	ldr	r2, [r5, r3, lsl #3]
   1cc5c:	str	r3, [r2, #124]	; 0x7c
   1cc60:	add	r3, r3, #1
   1cc64:	b	1cc4c <__flatcc_fb_gen_c_verifier@@Base+0x1a1c>
   1cc68:	strdeq	ip, [r1], -ip	; <UNPREDICTABLE>
   1cc6c:	push	{r4, r5, r6, lr}
   1cc70:	ldr	r5, [r0, #4]
   1cc74:	ldr	r4, [r1, #4]
   1cc78:	ldr	r0, [r0]
   1cc7c:	cmp	r5, r4
   1cc80:	movlt	r2, r5
   1cc84:	movge	r2, r4
   1cc88:	ldr	r1, [r1]
   1cc8c:	bl	13f38 <memcmp@plt>
   1cc90:	cmp	r0, #0
   1cc94:	subeq	r0, r5, r4
   1cc98:	pop	{r4, r5, r6, pc}
   1cc9c:	cmp	r0, #0
   1cca0:	bxeq	lr
   1cca4:	b	13f14 <free@plt>
   1cca8:	push	{r4, lr}
   1ccac:	mov	r4, r0
   1ccb0:	ldr	r0, [r0, #16]
   1ccb4:	cmp	r0, #0
   1ccb8:	beq	1ccc0 <__flatcc_fb_gen_c_verifier@@Base+0x1a90>
   1ccbc:	bl	13f14 <free@plt>
   1ccc0:	ldr	r0, [r4, #20]
   1ccc4:	cmp	r0, #0
   1ccc8:	beq	1ccd0 <__flatcc_fb_gen_c_verifier@@Base+0x1aa0>
   1cccc:	bl	13f14 <free@plt>
   1ccd0:	ldr	r0, [r4, #24]
   1ccd4:	cmp	r0, #0
   1ccd8:	beq	1cce0 <__flatcc_fb_gen_c_verifier@@Base+0x1ab0>
   1ccdc:	bl	13f14 <free@plt>
   1cce0:	mov	r0, r4
   1cce4:	mov	r2, #44	; 0x2c
   1cce8:	mov	r1, #0
   1ccec:	pop	{r4, lr}
   1ccf0:	b	13fec <memset@plt>
   1ccf4:	ldrh	r3, [r1, #8]
   1ccf8:	cmp	r3, #4
   1ccfc:	bxhi	lr
   1cd00:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1cd04:	mov	r4, r0
   1cd08:	ldr	r0, [r0, #40]	; 0x28
   1cd0c:	mov	r5, r1
   1cd10:	add	r0, r0, #172	; 0xac
   1cd14:	ldr	r1, [r1, #16]
   1cd18:	bl	229c8 <ptr_set_find_item@@Base>
   1cd1c:	cmp	r0, #0
   1cd20:	bne	1cd7c <__flatcc_fb_gen_c_verifier@@Base+0x1b4c>
   1cd24:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1cd28:	ldr	r1, [r8, #4]
   1cd2c:	mov	r0, r3
   1cd30:	ldr	r6, [r1, #4]
   1cd34:	ldr	r1, [r1]
   1cd38:	mov	r2, r6
   1cd3c:	bl	13f20 <memcpy@plt>
   1cd40:	add	r6, r0, r6
   1cd44:	add	r3, r6, #1
   1cd48:	strb	r9, [r6]
   1cd4c:	ldr	r8, [r8]
   1cd50:	b	1cda0 <__flatcc_fb_gen_c_verifier@@Base+0x1b70>
   1cd54:	ldr	r3, [r4, #28]
   1cd58:	stm	r3, {r5, r7}
   1cd5c:	add	r3, r3, #8
   1cd60:	str	r3, [r4, #28]
   1cd64:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1cd68:	ldr	r3, [r4, #32]
   1cd6c:	stm	r3, {r5, r7}
   1cd70:	add	r3, r3, #8
   1cd74:	str	r3, [r4, #32]
   1cd78:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1cd7c:	ldr	r3, [r4]
   1cd80:	ldr	r7, [r4, #36]	; 0x24
   1cd84:	cmp	r3, #0
   1cd88:	moveq	r3, r7
   1cd8c:	beq	1cda8 <__flatcc_fb_gen_c_verifier@@Base+0x1b78>
   1cd90:	ldr	r3, [r5, #12]
   1cd94:	mov	r9, #46	; 0x2e
   1cd98:	ldr	r8, [r3]
   1cd9c:	mov	r3, r7
   1cda0:	cmp	r8, #0
   1cda4:	bne	1cd28 <__flatcc_fb_gen_c_verifier@@Base+0x1af8>
   1cda8:	ldr	r1, [r5, #4]
   1cdac:	mov	r0, r3
   1cdb0:	ldr	r6, [r1, #4]
   1cdb4:	ldr	r1, [r1]
   1cdb8:	mov	r2, r6
   1cdbc:	bl	13f20 <memcpy@plt>
   1cdc0:	mov	r1, #0
   1cdc4:	add	r2, r0, r6
   1cdc8:	add	r3, r2, #1
   1cdcc:	strb	r1, [r0, r6]
   1cdd0:	str	r3, [r4, #36]	; 0x24
   1cdd4:	ldrh	r3, [r5, #8]
   1cdd8:	cmp	r3, #4
   1cddc:	ldrls	pc, [pc, r3, lsl #2]
   1cde0:	b	1cdf8 <__flatcc_fb_gen_c_verifier@@Base+0x1bc8>
   1cde4:	andeq	ip, r1, r4, asr sp
   1cde8:	andeq	ip, r1, r4, asr sp
   1cdec:	strdeq	ip, [r1], -r8
   1cdf0:	andeq	ip, r1, r8, ror #26
   1cdf4:	andeq	ip, r1, r8, ror #26
   1cdf8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1cdfc:	ldr	r1, [r1, #4]
   1ce00:	ldr	r0, [r0, #4]
   1ce04:	b	13efc <strcmp@plt>
   1ce08:	push	{r0, r1, r4, r5, r6, lr}
   1ce0c:	mov	r4, r0
   1ce10:	mov	r6, r1
   1ce14:	mov	r5, r2
   1ce18:	ldr	r1, [pc, #248]	; 1cf18 <__flatcc_fb_gen_c_verifier@@Base+0x1ce8>
   1ce1c:	ldr	r2, [sp, #24]
   1ce20:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1ce24:	ldr	r1, [pc, #240]	; 1cf1c <__flatcc_fb_gen_c_verifier@@Base+0x1cec>
   1ce28:	mov	r0, r4
   1ce2c:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1ce30:	ldr	r3, [r4, #220]	; 0xdc
   1ce34:	add	r3, r3, #1
   1ce38:	str	r3, [r4, #220]	; 0xdc
   1ce3c:	ldr	r3, [r6, #40]	; 0x28
   1ce40:	sub	r3, r3, #1
   1ce44:	cmp	r3, #8
   1ce48:	ldrls	pc, [pc, r3, lsl #2]
   1ce4c:	b	1cebc <__flatcc_fb_gen_c_verifier@@Base+0x1c8c>
   1ce50:	andeq	ip, r1, r4, ror lr
   1ce54:	andeq	ip, r1, r4, ror lr
   1ce58:	andeq	ip, r1, r4, ror lr
   1ce5c:	andeq	ip, r1, r4, ror lr
   1ce60:	andeq	ip, r1, r4, ror lr
   1ce64:	andeq	ip, r1, r0, lsl #29
   1ce68:	andeq	ip, r1, r0, lsl #29
   1ce6c:	andeq	ip, r1, r0, lsl #29
   1ce70:	andeq	ip, r1, r0, lsl #29
   1ce74:	ldrd	r2, [r5, #48]	; 0x30
   1ce78:	ldr	r1, [pc, #160]	; 1cf20 <__flatcc_fb_gen_c_verifier@@Base+0x1cf0>
   1ce7c:	b	1ce94 <__flatcc_fb_gen_c_verifier@@Base+0x1c64>
   1ce80:	ldrd	r2, [r5, #48]	; 0x30
   1ce84:	cmp	r2, #0
   1ce88:	sbcs	r1, r3, #0
   1ce8c:	bge	1ce78 <__flatcc_fb_gen_c_verifier@@Base+0x1c48>
   1ce90:	ldr	r1, [pc, #140]	; 1cf24 <__flatcc_fb_gen_c_verifier@@Base+0x1cf4>
   1ce94:	mov	r0, r4
   1ce98:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1ce9c:	ldr	r3, [r4, #220]	; 0xdc
   1cea0:	cmp	r3, #0
   1cea4:	bne	1cef0 <__flatcc_fb_gen_c_verifier@@Base+0x1cc0>
   1cea8:	ldr	r3, [pc, #120]	; 1cf28 <__flatcc_fb_gen_c_verifier@@Base+0x1cf8>
   1ceac:	ldr	r2, [pc, #120]	; 1cf2c <__flatcc_fb_gen_c_verifier@@Base+0x1cfc>
   1ceb0:	ldr	r1, [pc, #120]	; 1cf30 <__flatcc_fb_gen_c_verifier@@Base+0x1d00>
   1ceb4:	ldr	r0, [pc, #120]	; 1cf34 <__flatcc_fb_gen_c_verifier@@Base+0x1d04>
   1ceb8:	b	1ceec <__flatcc_fb_gen_c_verifier@@Base+0x1cbc>
   1cebc:	ldr	r0, [pc, #116]	; 1cf38 <__flatcc_fb_gen_c_verifier@@Base+0x1d08>
   1cec0:	ldr	r3, [pc, #116]	; 1cf3c <__flatcc_fb_gen_c_verifier@@Base+0x1d0c>
   1cec4:	ldr	r2, [pc, #100]	; 1cf30 <__flatcc_fb_gen_c_verifier@@Base+0x1d00>
   1cec8:	str	r3, [sp]
   1cecc:	ldr	r1, [pc, #108]	; 1cf40 <__flatcc_fb_gen_c_verifier@@Base+0x1d10>
   1ced0:	ldr	r3, [pc, #108]	; 1cf44 <__flatcc_fb_gen_c_verifier@@Base+0x1d14>
   1ced4:	ldr	r0, [r0]
   1ced8:	bl	13fd4 <fprintf@plt>
   1cedc:	ldr	r3, [pc, #100]	; 1cf48 <__flatcc_fb_gen_c_verifier@@Base+0x1d18>
   1cee0:	ldr	r2, [pc, #92]	; 1cf44 <__flatcc_fb_gen_c_verifier@@Base+0x1d14>
   1cee4:	ldr	r1, [pc, #68]	; 1cf30 <__flatcc_fb_gen_c_verifier@@Base+0x1d00>
   1cee8:	ldr	r0, [pc, #92]	; 1cf4c <__flatcc_fb_gen_c_verifier@@Base+0x1d1c>
   1ceec:	bl	14094 <__assert_fail@plt>
   1cef0:	sub	r3, r3, #1
   1cef4:	str	r3, [r4, #220]	; 0xdc
   1cef8:	ldr	r1, [pc, #80]	; 1cf50 <__flatcc_fb_gen_c_verifier@@Base+0x1d20>
   1cefc:	mov	r0, r4
   1cf00:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1cf04:	ldr	r3, [r4, #220]	; 0xdc
   1cf08:	add	r3, r3, #1
   1cf0c:	str	r3, [r4, #220]	; 0xdc
   1cf10:	add	sp, sp, #8
   1cf14:	pop	{r4, r5, r6, pc}
   1cf18:	andeq	r3, r4, r1, lsr #27
   1cf1c:	strdeq	r3, [r4], -r1
   1cf20:	andeq	r3, r4, r4, lsl #28
   1cf24:	andeq	r3, r4, lr, lsr #28
   1cf28:	andeq	r2, r4, r5, lsl #26
   1cf2c:	andeq	r0, r0, pc, asr #5
   1cf30:			; <UNDEFINED> instruction: 0x00042ebf
   1cf34:	andeq	r2, r4, r4, lsl pc
   1cf38:	strheq	fp, [r5], -r0
   1cf3c:	andeq	r3, r4, r8, asr lr
   1cf40:	andeq	r0, r3, lr, ror #20
   1cf44:	andeq	r0, r0, r6, asr #5
   1cf48:	andeq	r2, r4, lr, ror #25
   1cf4c:	andeq	r9, r3, sp, asr #1
   1cf50:	muleq	r4, r4, r2
   1cf54:	push	{r4, r5, lr}
   1cf58:	sub	sp, sp, #228	; 0xe4
   1cf5c:	mov	r4, r0
   1cf60:	mov	r5, r2
   1cf64:	ldr	r1, [pc, #176]	; 1d01c <__flatcc_fb_gen_c_verifier@@Base+0x1dec>
   1cf68:	ldr	r2, [sp, #240]	; 0xf0
   1cf6c:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1cf70:	ldr	r1, [pc, #168]	; 1d020 <__flatcc_fb_gen_c_verifier@@Base+0x1df0>
   1cf74:	mov	r0, r4
   1cf78:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1cf7c:	ldr	r3, [r4, #220]	; 0xdc
   1cf80:	add	r3, r3, #1
   1cf84:	str	r3, [r4, #220]	; 0xdc
   1cf88:	ldrh	r3, [r5, #8]
   1cf8c:	sub	r3, r3, #3
   1cf90:	cmp	r3, #1
   1cf94:	bls	1cfac <__flatcc_fb_gen_c_verifier@@Base+0x1d7c>
   1cf98:	ldr	r3, [pc, #132]	; 1d024 <__flatcc_fb_gen_c_verifier@@Base+0x1df4>
   1cf9c:	ldr	r2, [pc, #132]	; 1d028 <__flatcc_fb_gen_c_verifier@@Base+0x1df8>
   1cfa0:	ldr	r1, [pc, #132]	; 1d02c <__flatcc_fb_gen_c_verifier@@Base+0x1dfc>
   1cfa4:	ldr	r0, [pc, #132]	; 1d030 <__flatcc_fb_gen_c_verifier@@Base+0x1e00>
   1cfa8:	bl	14094 <__assert_fail@plt>
   1cfac:	mov	r2, #220	; 0xdc
   1cfb0:	mov	r1, #0
   1cfb4:	add	r0, sp, #4
   1cfb8:	bl	13fec <memset@plt>
   1cfbc:	add	r1, sp, #4
   1cfc0:	mov	r0, r5
   1cfc4:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x7f8>
   1cfc8:	add	r2, sp, #4
   1cfcc:	ldr	r1, [pc, #96]	; 1d034 <__flatcc_fb_gen_c_verifier@@Base+0x1e04>
   1cfd0:	mov	r0, r4
   1cfd4:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1cfd8:	ldr	r3, [r4, #220]	; 0xdc
   1cfdc:	cmp	r3, #0
   1cfe0:	ldreq	r3, [pc, #80]	; 1d038 <__flatcc_fb_gen_c_verifier@@Base+0x1e08>
   1cfe4:	ldreq	r2, [pc, #80]	; 1d03c <__flatcc_fb_gen_c_verifier@@Base+0x1e0c>
   1cfe8:	ldreq	r1, [pc, #60]	; 1d02c <__flatcc_fb_gen_c_verifier@@Base+0x1dfc>
   1cfec:	ldreq	r0, [pc, #76]	; 1d040 <__flatcc_fb_gen_c_verifier@@Base+0x1e10>
   1cff0:	beq	1cfa8 <__flatcc_fb_gen_c_verifier@@Base+0x1d78>
   1cff4:	sub	r3, r3, #1
   1cff8:	str	r3, [r4, #220]	; 0xdc
   1cffc:	ldr	r1, [pc, #64]	; 1d044 <__flatcc_fb_gen_c_verifier@@Base+0x1e14>
   1d000:	mov	r0, r4
   1d004:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1d008:	ldr	r3, [r4, #220]	; 0xdc
   1d00c:	add	r3, r3, #1
   1d010:	str	r3, [r4, #220]	; 0xdc
   1d014:	add	sp, sp, #228	; 0xe4
   1d018:	pop	{r4, r5, pc}
   1d01c:	andeq	r3, r4, fp, ror lr
   1d020:	strdeq	r3, [r4], -r1
   1d024:	andeq	r2, r4, r4, lsl sp
   1d028:	ldrdeq	r0, [r0], -r9
   1d02c:			; <UNDEFINED> instruction: 0x00042ebf
   1d030:	ldrdeq	r1, [r3], -r5
   1d034:			; <UNDEFINED> instruction: 0x00043ebd
   1d038:	andeq	r2, r4, ip, lsr #26
   1d03c:	andeq	r0, r0, r6, ror #5
   1d040:	andeq	r2, r4, r4, lsl pc
   1d044:	muleq	r4, r4, r2
   1d048:	push	{r4, r5, r6, r7, r8, lr}
   1d04c:	mov	r4, r0
   1d050:	mov	r5, r1
   1d054:	mov	r6, r2
   1d058:	ldr	r1, [pc, #120]	; 1d0d8 <__flatcc_fb_gen_c_verifier@@Base+0x1ea8>
   1d05c:	ldr	r2, [sp, #24]
   1d060:	mov	r7, r3
   1d064:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1d068:	ldr	r1, [pc, #108]	; 1d0dc <__flatcc_fb_gen_c_verifier@@Base+0x1eac>
   1d06c:	mov	r0, r4
   1d070:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1d074:	ldr	r2, [r4, #220]	; 0xdc
   1d078:	mov	r3, r7
   1d07c:	add	r2, r2, #1
   1d080:	str	r2, [r4, #220]	; 0xdc
   1d084:	mov	r1, r5
   1d088:	mov	r2, r6
   1d08c:	mov	r0, r4
   1d090:	bl	1c028 <__flatcc_fb_gen_c_verifier@@Base+0xdf8>
   1d094:	ldr	r3, [r4, #220]	; 0xdc
   1d098:	cmp	r3, #0
   1d09c:	bne	1d0b4 <__flatcc_fb_gen_c_verifier@@Base+0x1e84>
   1d0a0:	ldr	r3, [pc, #56]	; 1d0e0 <__flatcc_fb_gen_c_verifier@@Base+0x1eb0>
   1d0a4:	ldr	r2, [pc, #56]	; 1d0e4 <__flatcc_fb_gen_c_verifier@@Base+0x1eb4>
   1d0a8:	ldr	r1, [pc, #56]	; 1d0e8 <__flatcc_fb_gen_c_verifier@@Base+0x1eb8>
   1d0ac:	ldr	r0, [pc, #56]	; 1d0ec <__flatcc_fb_gen_c_verifier@@Base+0x1ebc>
   1d0b0:	bl	14094 <__assert_fail@plt>
   1d0b4:	sub	r3, r3, #1
   1d0b8:	str	r3, [r4, #220]	; 0xdc
   1d0bc:	ldr	r1, [pc, #44]	; 1d0f0 <__flatcc_fb_gen_c_verifier@@Base+0x1ec0>
   1d0c0:	mov	r0, r4
   1d0c4:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1d0c8:	ldr	r3, [r4, #220]	; 0xdc
   1d0cc:	add	r3, r3, #1
   1d0d0:	str	r3, [r4, #220]	; 0xdc
   1d0d4:	pop	{r4, r5, r6, r7, r8, pc}
   1d0d8:	andeq	r3, r4, r4, lsl #30
   1d0dc:	andeq	r3, r4, r7, asr #30
   1d0e0:	andeq	r2, r4, ip, lsr sp
   1d0e4:	andeq	r0, r0, r3, lsr #5
   1d0e8:			; <UNDEFINED> instruction: 0x00042ebf
   1d0ec:	andeq	r2, r4, r4, lsl pc
   1d0f0:	muleq	r4, r4, r2
   1d0f4:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d0f8:	mov	r2, #0
   1d0fc:	mov	r5, r0
   1d100:	mov	r6, r0
   1d104:	mov	r7, r2
   1d108:	cmp	r6, #0
   1d10c:	bne	1d12c <__flatcc_fb_gen_c_verifier@@Base+0x1efc>
   1d110:	cmp	r7, #0
   1d114:	str	r7, [r1]
   1d118:	bne	1d164 <__flatcc_fb_gen_c_verifier@@Base+0x1f34>
   1d11c:	mov	r9, #0
   1d120:	mov	r0, r9
   1d124:	add	sp, sp, #12
   1d128:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d12c:	ldrh	r3, [r6, #72]	; 0x48
   1d130:	tst	r3, #4
   1d134:	bne	1d15c <__flatcc_fb_gen_c_verifier@@Base+0x1f2c>
   1d138:	mov	r0, r6
   1d13c:	bl	1b5b0 <__flatcc_fb_gen_c_verifier@@Base+0x380>
   1d140:	cmp	r0, #0
   1d144:	addne	r7, r7, #1
   1d148:	ldrne	r3, [r6, #4]
   1d14c:	add	r7, r7, #1
   1d150:	ldrne	r3, [r3, #4]
   1d154:	addne	r3, r3, #6
   1d158:	addne	r2, r2, r3
   1d15c:	ldr	r6, [r6]
   1d160:	b	1d108 <__flatcc_fb_gen_c_verifier@@Base+0x1ed8>
   1d164:	lsl	r8, r7, #4
   1d168:	add	r0, r2, r8
   1d16c:	bl	13f8c <malloc@plt>
   1d170:	subs	r9, r0, #0
   1d174:	beq	1d11c <__flatcc_fb_gen_c_verifier@@Base+0x1eec>
   1d178:	ldr	sl, [pc, #184]	; 1d238 <__flatcc_fb_gen_c_verifier@@Base+0x2008>
   1d17c:	add	r8, r9, r8
   1d180:	mov	r4, r9
   1d184:	mov	fp, #1
   1d188:	cmp	r5, #0
   1d18c:	bne	1d1a8 <__flatcc_fb_gen_c_verifier@@Base+0x1f78>
   1d190:	ldr	r3, [pc, #164]	; 1d23c <__flatcc_fb_gen_c_verifier@@Base+0x200c>
   1d194:	mov	r2, #16
   1d198:	mov	r1, r7
   1d19c:	mov	r0, r9
   1d1a0:	bl	14058 <qsort@plt>
   1d1a4:	b	1d120 <__flatcc_fb_gen_c_verifier@@Base+0x1ef0>
   1d1a8:	ldrh	r3, [r5, #72]	; 0x48
   1d1ac:	ands	r3, r3, #4
   1d1b0:	bne	1d230 <__flatcc_fb_gen_c_verifier@@Base+0x2000>
   1d1b4:	ldr	r2, [r5, #4]
   1d1b8:	mov	r0, r5
   1d1bc:	ldr	r1, [r2]
   1d1c0:	ldr	r2, [r2, #4]
   1d1c4:	str	r1, [r4]
   1d1c8:	str	r3, [r4, #12]
   1d1cc:	stmib	r4, {r2, r5}
   1d1d0:	bl	1b5b0 <__flatcc_fb_gen_c_verifier@@Base+0x380>
   1d1d4:	cmp	r0, #0
   1d1d8:	addeq	r4, r4, #16
   1d1dc:	beq	1d230 <__flatcc_fb_gen_c_verifier@@Base+0x2000>
   1d1e0:	add	r0, r2, #5
   1d1e4:	add	r3, r6, #1
   1d1e8:	str	r6, [r5, #112]	; 0x70
   1d1ec:	str	r0, [r4, #20]
   1d1f0:	str	r8, [r4, #16]
   1d1f4:	mov	r0, r8
   1d1f8:	str	r3, [sp, #4]
   1d1fc:	bl	13f20 <memcpy@plt>
   1d200:	ldr	r2, [r5, #4]
   1d204:	mov	r1, sl
   1d208:	add	r4, r4, #32
   1d20c:	ldr	r2, [r2, #4]
   1d210:	add	r8, r8, r2
   1d214:	mov	r0, r8
   1d218:	bl	13f68 <strcpy@plt>
   1d21c:	ldr	r3, [sp, #4]
   1d220:	str	r5, [r4, #-8]
   1d224:	str	fp, [r4, #-4]
   1d228:	add	r8, r8, #6
   1d22c:	mov	r6, r3
   1d230:	ldr	r5, [r5]
   1d234:	b	1d188 <__flatcc_fb_gen_c_verifier@@Base+0x1f58>
   1d238:	andeq	r1, r3, pc, asr #5
   1d23c:	andeq	ip, r1, ip, ror #24
   1d240:	ldrh	r3, [r1, #8]
   1d244:	sub	r3, r3, #3
   1d248:	cmp	r3, #1
   1d24c:	bxhi	lr
   1d250:	push	{r4, r5, r6, lr}
   1d254:	mov	r5, r0
   1d258:	ldr	r0, [r0, #4]
   1d25c:	mov	r4, r1
   1d260:	add	r0, r0, #172	; 0xac
   1d264:	ldr	r1, [r1, #16]
   1d268:	bl	229c8 <ptr_set_find_item@@Base>
   1d26c:	cmp	r0, #0
   1d270:	popeq	{r4, r5, r6, pc}
   1d274:	ldr	r2, [r4, #4]
   1d278:	ldr	r3, [r5, #8]
   1d27c:	ldr	r1, [r2]
   1d280:	ldr	r2, [r2, #4]
   1d284:	str	r1, [r3]
   1d288:	stmib	r3, {r2, r4}
   1d28c:	add	r3, r3, #16
   1d290:	str	r3, [r5, #8]
   1d294:	pop	{r4, r5, r6, pc}
   1d298:	ldrh	r3, [r1, #8]
   1d29c:	sub	r3, r3, #3
   1d2a0:	cmp	r3, #1
   1d2a4:	bxhi	lr
   1d2a8:	push	{r4, lr}
   1d2ac:	mov	r4, r0
   1d2b0:	ldr	r0, [r0, #4]
   1d2b4:	ldr	r1, [r1, #16]
   1d2b8:	add	r0, r0, #172	; 0xac
   1d2bc:	bl	229c8 <ptr_set_find_item@@Base>
   1d2c0:	cmp	r0, #0
   1d2c4:	ldrne	r3, [r4]
   1d2c8:	addne	r3, r3, #1
   1d2cc:	strne	r3, [r4]
   1d2d0:	pop	{r4, pc}
   1d2d4:	ldrh	r3, [r1, #8]
   1d2d8:	cmp	r3, #4
   1d2dc:	bxhi	lr
   1d2e0:	push	{r4, r5, r6, lr}
   1d2e4:	mov	r4, r0
   1d2e8:	ldr	r0, [r0, #40]	; 0x28
   1d2ec:	mov	r5, r1
   1d2f0:	add	r0, r0, #172	; 0xac
   1d2f4:	ldr	r1, [r1, #16]
   1d2f8:	bl	229c8 <ptr_set_find_item@@Base>
   1d2fc:	cmp	r0, #0
   1d300:	bne	1d340 <__flatcc_fb_gen_c_verifier@@Base+0x2110>
   1d304:	pop	{r4, r5, r6, pc}
   1d308:	ldr	r1, [r2, #4]
   1d30c:	ldr	r2, [r2]
   1d310:	ldr	r1, [r1, #4]
   1d314:	add	r1, r1, #1
   1d318:	add	r3, r3, r1
   1d31c:	b	1d358 <__flatcc_fb_gen_c_verifier@@Base+0x2128>
   1d320:	ldr	r3, [r4, #4]
   1d324:	add	r3, r3, #1
   1d328:	str	r3, [r4, #4]
   1d32c:	pop	{r4, r5, r6, pc}
   1d330:	ldr	r3, [r4, #8]
   1d334:	add	r3, r3, #1
   1d338:	str	r3, [r4, #8]
   1d33c:	pop	{r4, r5, r6, pc}
   1d340:	ldr	r3, [r4]
   1d344:	cmp	r3, #0
   1d348:	beq	1d360 <__flatcc_fb_gen_c_verifier@@Base+0x2130>
   1d34c:	ldr	r3, [r5, #12]
   1d350:	ldr	r2, [r3]
   1d354:	mov	r3, #0
   1d358:	cmp	r2, #0
   1d35c:	bne	1d308 <__flatcc_fb_gen_c_verifier@@Base+0x20d8>
   1d360:	ldr	r2, [r5, #4]
   1d364:	ldr	r1, [r4, #12]
   1d368:	ldr	r2, [r2, #4]
   1d36c:	add	r2, r2, r1
   1d370:	add	r2, r2, #1
   1d374:	add	r3, r2, r3
   1d378:	str	r3, [r4, #12]
   1d37c:	ldrh	r3, [r5, #8]
   1d380:	cmp	r3, #4
   1d384:	ldrls	pc, [pc, r3, lsl #2]
   1d388:	b	1d3a0 <__flatcc_fb_gen_c_verifier@@Base+0x2170>
   1d38c:	andeq	sp, r1, r0, lsr #6
   1d390:	andeq	sp, r1, r0, lsr #6
   1d394:	andeq	sp, r1, r0, lsr #7
   1d398:	andeq	sp, r1, r0, lsr r3
   1d39c:	andeq	sp, r1, r0, lsr r3
   1d3a0:	pop	{r4, r5, r6, pc}
   1d3a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d3a8:	sub	sp, sp, #100	; 0x64
   1d3ac:	mov	fp, r2
   1d3b0:	str	r3, [sp, #8]
   1d3b4:	mov	r2, #0
   1d3b8:	mov	r3, #0
   1d3bc:	ldr	r6, [sp, #136]	; 0x88
   1d3c0:	strd	r2, [sp, #48]	; 0x30
   1d3c4:	strd	r2, [sp, #56]	; 0x38
   1d3c8:	ldr	r3, [pc, #1680]	; 1da60 <__flatcc_fb_gen_c_verifier@@Base+0x2830>
   1d3cc:	mov	r4, r0
   1d3d0:	str	r3, [sp, #40]	; 0x28
   1d3d4:	mov	r3, #0
   1d3d8:	str	r3, [sp, #44]	; 0x2c
   1d3dc:	ldr	r3, [r1]
   1d3e0:	mov	r5, r1
   1d3e4:	str	r3, [sp, #16]
   1d3e8:	ldr	r2, [sp, #16]
   1d3ec:	lsl	r3, fp, #4
   1d3f0:	str	r3, [sp, #28]
   1d3f4:	add	r3, r2, r3
   1d3f8:	add	r2, r6, #7
   1d3fc:	ldr	r3, [r3, #4]
   1d400:	str	r2, [sp, #32]
   1d404:	cmp	r3, r2
   1d408:	ble	1d418 <__flatcc_fb_gen_c_verifier@@Base+0x21e8>
   1d40c:	sub	r3, r3, r6
   1d410:	cmp	r3, #8
   1d414:	bne	1d484 <__flatcc_fb_gen_c_verifier@@Base+0x2254>
   1d418:	ldr	r3, [sp, #8]
   1d41c:	cmp	fp, r3
   1d420:	beq	1d45c <__flatcc_fb_gen_c_verifier@@Base+0x222c>
   1d424:	ldr	r2, [sp, #8]
   1d428:	add	r3, fp, #1
   1d42c:	cmp	r2, r3
   1d430:	bne	1d484 <__flatcc_fb_gen_c_verifier@@Base+0x2254>
   1d434:	mov	r3, r2
   1d438:	ldr	r2, [sp, #16]
   1d43c:	add	r3, r2, r3, lsl #4
   1d440:	add	r2, r6, #7
   1d444:	ldr	r3, [r3, #4]
   1d448:	cmp	r3, r2
   1d44c:	ble	1d45c <__flatcc_fb_gen_c_verifier@@Base+0x222c>
   1d450:	sub	r3, r3, r6
   1d454:	cmp	r3, #8
   1d458:	bne	1d484 <__flatcc_fb_gen_c_verifier@@Base+0x2254>
   1d45c:	mov	r3, #0
   1d460:	str	r3, [sp, #4]
   1d464:	str	r6, [sp]
   1d468:	ldr	r3, [sp, #8]
   1d46c:	mov	r2, fp
   1d470:	mov	r1, r5
   1d474:	mov	r0, r4
   1d478:	bl	1b6b8 <__flatcc_fb_gen_c_verifier@@Base+0x488>
   1d47c:	add	sp, sp, #100	; 0x64
   1d480:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d484:	ldr	r3, [sp, #8]
   1d488:	mov	r2, #0
   1d48c:	sub	r3, r3, fp
   1d490:	add	r3, r3, r3, lsr #31
   1d494:	add	r3, fp, r3, asr #1
   1d498:	str	r3, [sp, #12]
   1d49c:	mov	r3, #0
   1d4a0:	ldr	sl, [sp, #12]
   1d4a4:	strd	r2, [sp, #64]	; 0x40
   1d4a8:	strd	r2, [sp, #72]	; 0x48
   1d4ac:	strd	r2, [sp, #80]	; 0x50
   1d4b0:	strd	r2, [sp, #88]	; 0x58
   1d4b4:	ldr	r3, [sp, #12]
   1d4b8:	ldr	r2, [sp, #16]
   1d4bc:	lsl	r3, r3, #4
   1d4c0:	str	r3, [sp, #24]
   1d4c4:	add	r3, r2, r3
   1d4c8:	str	r3, [sp, #20]
   1d4cc:	cmp	fp, sl
   1d4d0:	blt	1d4fc <__flatcc_fb_gen_c_verifier@@Base+0x22cc>
   1d4d4:	mov	r3, #0
   1d4d8:	mov	r2, #0
   1d4dc:	ldr	r7, [r5]
   1d4e0:	strd	r2, [sp, #64]	; 0x40
   1d4e4:	strd	r2, [sp, #72]	; 0x48
   1d4e8:	strd	r2, [sp, #80]	; 0x50
   1d4ec:	strd	r2, [sp, #88]	; 0x58
   1d4f0:	ldr	r3, [sp, #24]
   1d4f4:	add	r7, r7, r3
   1d4f8:	b	1d684 <__flatcc_fb_gen_c_verifier@@Base+0x2454>
   1d4fc:	ldr	r3, [sp, #20]
   1d500:	mov	r7, #0
   1d504:	sub	r3, r3, #16
   1d508:	mov	r8, r3
   1d50c:	str	r7, [sp, #4]
   1d510:	str	r7, [sp]
   1d514:	add	r3, sp, #80	; 0x50
   1d518:	add	r2, sp, #64	; 0x40
   1d51c:	mov	r1, r6
   1d520:	mov	r0, r8
   1d524:	bl	1b4f0 <__flatcc_fb_gen_c_verifier@@Base+0x2c0>
   1d528:	ldr	r2, [sp, #16]
   1d52c:	ldr	r3, [sp, #20]
   1d530:	str	r7, [sp, #4]
   1d534:	sub	r3, r3, r2
   1d538:	str	r3, [sp, #36]	; 0x24
   1d53c:	str	r7, [sp]
   1d540:	add	r3, sp, #88	; 0x58
   1d544:	add	r2, sp, #72	; 0x48
   1d548:	mov	r1, r6
   1d54c:	ldr	r0, [sp, #20]
   1d550:	bl	1b4f0 <__flatcc_fb_gen_c_verifier@@Base+0x2c0>
   1d554:	ldrd	r0, [sp, #72]	; 0x48
   1d558:	ldrd	r2, [sp, #64]	; 0x40
   1d55c:	str	r8, [sp, #20]
   1d560:	sub	r7, sl, #1
   1d564:	eor	r8, r2, r0
   1d568:	eor	r9, r3, r1
   1d56c:	ldrd	r2, [sp, #80]	; 0x50
   1d570:	mov	r0, r8
   1d574:	mov	r1, r9
   1d578:	and	r0, r0, r2
   1d57c:	and	r1, r1, r3
   1d580:	mov	r2, r0
   1d584:	mov	r3, r1
   1d588:	orrs	r3, r2, r3
   1d58c:	bne	1d9a8 <__flatcc_fb_gen_c_verifier@@Base+0x2778>
   1d590:	mov	sl, r7
   1d594:	b	1d4cc <__flatcc_fb_gen_c_verifier@@Base+0x229c>
   1d598:	sub	r3, r3, #1
   1d59c:	str	r3, [r4, #220]	; 0xdc
   1d5a0:	ldr	r2, [sp, #44]	; 0x2c
   1d5a4:	ldr	r3, [sp, #40]	; 0x28
   1d5a8:	ldr	r1, [pc, #1204]	; 1da64 <__flatcc_fb_gen_c_verifier@@Base+0x2834>
   1d5ac:	mov	r0, r4
   1d5b0:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1d5b4:	ldr	r3, [r4, #220]	; 0xdc
   1d5b8:	str	r6, [sp]
   1d5bc:	add	r3, r3, #1
   1d5c0:	str	r3, [r4, #220]	; 0xdc
   1d5c4:	mov	r2, sl
   1d5c8:	ldr	r3, [sp, #8]
   1d5cc:	mov	r1, r5
   1d5d0:	mov	r0, r4
   1d5d4:	bl	1d3a4 <__flatcc_fb_gen_c_verifier@@Base+0x2174>
   1d5d8:	ldr	r3, [r4, #220]	; 0xdc
   1d5dc:	cmp	r3, #0
   1d5e0:	ldreq	r3, [pc, #1152]	; 1da68 <__flatcc_fb_gen_c_verifier@@Base+0x2838>
   1d5e4:	ldreq	r2, [pc, #1152]	; 1da6c <__flatcc_fb_gen_c_verifier@@Base+0x283c>
   1d5e8:	beq	1da2c <__flatcc_fb_gen_c_verifier@@Base+0x27fc>
   1d5ec:	sub	r3, r3, #1
   1d5f0:	str	r3, [r4, #220]	; 0xdc
   1d5f4:	ldr	r2, [sp, #44]	; 0x2c
   1d5f8:	ldr	r3, [sp, #40]	; 0x28
   1d5fc:	ldr	r1, [pc, #1132]	; 1da70 <__flatcc_fb_gen_c_verifier@@Base+0x2840>
   1d600:	mov	r0, r4
   1d604:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1d608:	b	1d47c <__flatcc_fb_gen_c_verifier@@Base+0x224c>
   1d60c:	mov	r8, #0
   1d610:	str	r8, [sp, #4]
   1d614:	str	r8, [sp]
   1d618:	add	r3, sp, #80	; 0x50
   1d61c:	add	r2, sp, #64	; 0x40
   1d620:	mov	r1, r6
   1d624:	mov	r0, r7
   1d628:	add	r7, r7, #16
   1d62c:	bl	1b4f0 <__flatcc_fb_gen_c_verifier@@Base+0x2c0>
   1d630:	str	r8, [sp, #4]
   1d634:	str	r8, [sp]
   1d638:	add	r3, sp, #88	; 0x58
   1d63c:	add	r2, sp, #72	; 0x48
   1d640:	mov	r1, r6
   1d644:	mov	r0, r7
   1d648:	bl	1b4f0 <__flatcc_fb_gen_c_verifier@@Base+0x2c0>
   1d64c:	ldrd	r2, [sp, #64]	; 0x40
   1d650:	ldrd	r0, [sp, #72]	; 0x48
   1d654:	eor	r8, r2, r0
   1d658:	eor	r9, r3, r1
   1d65c:	mov	r2, r8
   1d660:	mov	r3, r9
   1d664:	ldrd	r8, [sp, #80]	; 0x50
   1d668:	and	r2, r2, r8
   1d66c:	and	r3, r3, r9
   1d670:	orrs	r3, r2, r3
   1d674:	ldr	r3, [sp, #12]
   1d678:	add	r8, r3, #1
   1d67c:	bne	1d698 <__flatcc_fb_gen_c_verifier@@Base+0x2468>
   1d680:	str	r8, [sp, #12]
   1d684:	ldr	r3, [sp, #8]
   1d688:	ldr	r2, [sp, #12]
   1d68c:	cmp	r3, r2
   1d690:	bgt	1d60c <__flatcc_fb_gen_c_verifier@@Base+0x23dc>
   1d694:	add	r8, r2, #1
   1d698:	ldr	r0, [r5]
   1d69c:	ldr	r3, [sp, #28]
   1d6a0:	mov	r7, fp
   1d6a4:	add	r2, r0, r3
   1d6a8:	ldr	r3, [sp, #12]
   1d6ac:	cmp	r7, r3
   1d6b0:	bgt	1d6d0 <__flatcc_fb_gen_c_verifier@@Base+0x24a0>
   1d6b4:	ldr	r3, [r2, #4]
   1d6b8:	ldr	r1, [sp, #32]
   1d6bc:	cmp	r1, r3
   1d6c0:	bge	1d840 <__flatcc_fb_gen_c_verifier@@Base+0x2610>
   1d6c4:	sub	r3, r3, r6
   1d6c8:	cmp	r3, #8
   1d6cc:	ble	1d840 <__flatcc_fb_gen_c_verifier@@Base+0x2610>
   1d6d0:	cmp	r7, r8
   1d6d4:	movge	sl, r7
   1d6d8:	bge	1d884 <__flatcc_fb_gen_c_verifier@@Base+0x2654>
   1d6dc:	cmp	fp, r7
   1d6e0:	bge	1d84c <__flatcc_fb_gen_c_verifier@@Base+0x261c>
   1d6e4:	add	r3, r0, r7, lsl #4
   1d6e8:	ldr	r9, [r3, #-12]
   1d6ec:	add	r3, r6, #8
   1d6f0:	cmp	r3, r9
   1d6f4:	blt	1d84c <__flatcc_fb_gen_c_verifier@@Base+0x261c>
   1d6f8:	sub	r9, r9, r6
   1d6fc:	sub	r9, r9, #8
   1d700:	clz	r9, r9
   1d704:	lsr	r9, r9, #5
   1d708:	add	r3, sp, #44	; 0x2c
   1d70c:	str	r3, [sp, #4]
   1d710:	lsl	sl, r7, #4
   1d714:	add	r3, sp, #40	; 0x28
   1d718:	str	r3, [sp]
   1d71c:	add	r2, sp, #48	; 0x30
   1d720:	add	r3, sp, #56	; 0x38
   1d724:	mov	r1, r6
   1d728:	add	r0, r0, sl
   1d72c:	bl	1b4f0 <__flatcc_fb_gen_c_verifier@@Base+0x2c0>
   1d730:	ldr	r3, [sp, #40]	; 0x28
   1d734:	ldr	r1, [pc, #824]	; 1da74 <__flatcc_fb_gen_c_verifier@@Base+0x2844>
   1d738:	str	r3, [sp, #4]
   1d73c:	ldr	r3, [sp, #44]	; 0x2c
   1d740:	mov	r0, r4
   1d744:	str	r3, [sp]
   1d748:	ldrd	r2, [sp, #48]	; 0x30
   1d74c:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1d750:	ldr	r3, [r4, #220]	; 0xdc
   1d754:	cmp	r9, #0
   1d758:	add	r3, r3, #1
   1d75c:	str	r3, [r4, #220]	; 0xdc
   1d760:	beq	1d7b8 <__flatcc_fb_gen_c_verifier@@Base+0x2588>
   1d764:	ldr	r3, [sp, #40]	; 0x28
   1d768:	ldr	r2, [sp, #44]	; 0x2c
   1d76c:	ldr	r1, [pc, #772]	; 1da78 <__flatcc_fb_gen_c_verifier@@Base+0x2848>
   1d770:	mov	r0, r4
   1d774:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1d778:	ldr	r3, [r5]
   1d77c:	sub	sl, sl, #16
   1d780:	add	sl, r3, sl
   1d784:	mov	r3, #8
   1d788:	str	r3, [sp]
   1d78c:	ldr	r1, [r5, #12]
   1d790:	ldr	r3, [sl, #12]
   1d794:	ldr	r2, [sl, #8]
   1d798:	mov	r0, r4
   1d79c:	ldr	ip, [r5, #4]
   1d7a0:	blx	ip
   1d7a4:	ldr	r3, [sp, #40]	; 0x28
   1d7a8:	ldr	r2, [sp, #44]	; 0x2c
   1d7ac:	ldr	r1, [pc, #712]	; 1da7c <__flatcc_fb_gen_c_verifier@@Base+0x284c>
   1d7b0:	mov	r0, r4
   1d7b4:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1d7b8:	ldr	r1, [pc, #704]	; 1da80 <__flatcc_fb_gen_c_verifier@@Base+0x2850>
   1d7bc:	mov	r0, r4
   1d7c0:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1d7c4:	ldr	r1, [pc, #696]	; 1da84 <__flatcc_fb_gen_c_verifier@@Base+0x2854>
   1d7c8:	mov	r0, r4
   1d7cc:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1d7d0:	add	r3, r6, #8
   1d7d4:	str	r3, [sp]
   1d7d8:	mov	r2, r7
   1d7dc:	ldr	r3, [sp, #12]
   1d7e0:	mov	r1, r5
   1d7e4:	mov	r0, r4
   1d7e8:	bl	1d3a4 <__flatcc_fb_gen_c_verifier@@Base+0x2174>
   1d7ec:	cmp	r9, #0
   1d7f0:	beq	1d854 <__flatcc_fb_gen_c_verifier@@Base+0x2624>
   1d7f4:	ldr	r3, [r4, #220]	; 0xdc
   1d7f8:	cmp	r3, #0
   1d7fc:	moveq	r2, #1040	; 0x410
   1d800:	ldreq	r3, [pc, #608]	; 1da68 <__flatcc_fb_gen_c_verifier@@Base+0x2838>
   1d804:	beq	1da2c <__flatcc_fb_gen_c_verifier@@Base+0x27fc>
   1d808:	sub	r3, r3, #1
   1d80c:	str	r3, [r4, #220]	; 0xdc
   1d810:	ldr	r2, [sp, #44]	; 0x2c
   1d814:	ldr	r3, [sp, #40]	; 0x28
   1d818:	ldr	r1, [pc, #616]	; 1da88 <__flatcc_fb_gen_c_verifier@@Base+0x2858>
   1d81c:	mov	r0, r4
   1d820:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1d824:	sub	sl, r7, #1
   1d828:	ldr	r3, [r4, #220]	; 0xdc
   1d82c:	cmp	r3, #0
   1d830:	bne	1d85c <__flatcc_fb_gen_c_verifier@@Base+0x262c>
   1d834:	ldr	r3, [pc, #556]	; 1da68 <__flatcc_fb_gen_c_verifier@@Base+0x2838>
   1d838:	ldr	r2, [pc, #588]	; 1da8c <__flatcc_fb_gen_c_verifier@@Base+0x285c>
   1d83c:	b	1da2c <__flatcc_fb_gen_c_verifier@@Base+0x27fc>
   1d840:	add	r7, r7, #1
   1d844:	add	r2, r2, #16
   1d848:	b	1d6a8 <__flatcc_fb_gen_c_verifier@@Base+0x2478>
   1d84c:	mov	r9, #0
   1d850:	b	1d708 <__flatcc_fb_gen_c_verifier@@Base+0x24d8>
   1d854:	mov	sl, r7
   1d858:	b	1d828 <__flatcc_fb_gen_c_verifier@@Base+0x25f8>
   1d85c:	sub	r3, r3, #1
   1d860:	str	r3, [r4, #220]	; 0xdc
   1d864:	ldr	r2, [sp, #44]	; 0x2c
   1d868:	ldr	r3, [sp, #40]	; 0x28
   1d86c:	ldr	r1, [pc, #540]	; 1da90 <__flatcc_fb_gen_c_verifier@@Base+0x2860>
   1d870:	mov	r0, r4
   1d874:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1d878:	ldr	r3, [r4, #220]	; 0xdc
   1d87c:	add	r3, r3, #1
   1d880:	str	r3, [r4, #220]	; 0xdc
   1d884:	ldr	r3, [sp, #8]
   1d888:	cmp	r3, r8
   1d88c:	cmpge	sl, fp
   1d890:	movgt	r3, #1
   1d894:	ldrgt	r9, [r5, #24]
   1d898:	movle	r3, #0
   1d89c:	addgt	r9, r9, #1
   1d8a0:	str	r3, [sp, #12]
   1d8a4:	strgt	r9, [r5, #24]
   1d8a8:	bgt	1d8b8 <__flatcc_fb_gen_c_verifier@@Base+0x2688>
   1d8ac:	cmp	sl, fp
   1d8b0:	ble	1da38 <__flatcc_fb_gen_c_verifier@@Base+0x2808>
   1d8b4:	ldr	r9, [sp, #12]
   1d8b8:	sub	r3, sl, #1
   1d8bc:	stm	sp, {r6, r9}
   1d8c0:	mov	r2, fp
   1d8c4:	mov	r1, r5
   1d8c8:	mov	r0, r4
   1d8cc:	bl	1b6b8 <__flatcc_fb_gen_c_verifier@@Base+0x488>
   1d8d0:	ldr	r3, [sp, #12]
   1d8d4:	cmp	r3, #0
   1d8d8:	beq	1da38 <__flatcc_fb_gen_c_verifier@@Base+0x2808>
   1d8dc:	mov	r2, r9
   1d8e0:	ldr	r1, [pc, #428]	; 1da94 <__flatcc_fb_gen_c_verifier@@Base+0x2864>
   1d8e4:	mov	r0, r4
   1d8e8:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1d8ec:	ldr	r3, [r4, #220]	; 0xdc
   1d8f0:	mov	sl, #0
   1d8f4:	str	r3, [r4, #228]	; 0xe4
   1d8f8:	mov	r2, r9
   1d8fc:	ldr	r1, [pc, #404]	; 1da98 <__flatcc_fb_gen_c_verifier@@Base+0x2868>
   1d900:	mov	r0, r4
   1d904:	str	sl, [r4, #220]	; 0xdc
   1d908:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1d90c:	ldr	r3, [r4, #228]	; 0xe4
   1d910:	mov	r2, r8
   1d914:	str	r3, [r4, #220]	; 0xdc
   1d918:	mov	r1, r5
   1d91c:	ldr	r3, [sp, #8]
   1d920:	mov	r0, r4
   1d924:	str	r6, [sp]
   1d928:	bl	1d3a4 <__flatcc_fb_gen_c_verifier@@Base+0x2174>
   1d92c:	ldr	r3, [r4, #220]	; 0xdc
   1d930:	ldr	r1, [pc, #356]	; 1da9c <__flatcc_fb_gen_c_verifier@@Base+0x286c>
   1d934:	str	r3, [r4, #228]	; 0xe4
   1d938:	mov	r0, r4
   1d93c:	str	sl, [r4, #220]	; 0xdc
   1d940:	mov	r2, r9
   1d944:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1d948:	ldr	r3, [r4, #228]	; 0xe4
   1d94c:	ldr	r1, [pc, #332]	; 1daa0 <__flatcc_fb_gen_c_verifier@@Base+0x2870>
   1d950:	str	r3, [r4, #220]	; 0xdc
   1d954:	mov	r0, r4
   1d958:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1d95c:	cmp	r7, r8
   1d960:	bge	1d47c <__flatcc_fb_gen_c_verifier@@Base+0x224c>
   1d964:	ldr	r3, [r4, #220]	; 0xdc
   1d968:	cmp	r3, #0
   1d96c:	moveq	r2, #1072	; 0x430
   1d970:	ldreq	r3, [pc, #240]	; 1da68 <__flatcc_fb_gen_c_verifier@@Base+0x2838>
   1d974:	beq	1da2c <__flatcc_fb_gen_c_verifier@@Base+0x27fc>
   1d978:	sub	r3, r3, #1
   1d97c:	str	r3, [r4, #220]	; 0xdc
   1d980:	ldr	r2, [sp, #44]	; 0x2c
   1d984:	ldr	r3, [sp, #40]	; 0x28
   1d988:	ldr	r1, [pc, #276]	; 1daa4 <__flatcc_fb_gen_c_verifier@@Base+0x2874>
   1d98c:	b	1d600 <__flatcc_fb_gen_c_verifier@@Base+0x23d0>
   1d990:	cmp	sl, fp
   1d994:	bgt	1d95c <__flatcc_fb_gen_c_verifier@@Base+0x272c>
   1d998:	ldr	r3, [r5, #8]
   1d99c:	mov	r0, r4
   1d9a0:	blx	r3
   1d9a4:	b	1d95c <__flatcc_fb_gen_c_verifier@@Base+0x272c>
   1d9a8:	ldr	ip, [sp, #36]	; 0x24
   1d9ac:	ldr	r0, [r5]
   1d9b0:	add	r3, sp, #44	; 0x2c
   1d9b4:	str	r3, [sp, #4]
   1d9b8:	add	r3, sp, #40	; 0x28
   1d9bc:	add	r0, r0, ip
   1d9c0:	str	r3, [sp]
   1d9c4:	add	r2, sp, #48	; 0x30
   1d9c8:	add	r3, sp, #56	; 0x38
   1d9cc:	mov	r1, r6
   1d9d0:	bl	1b4f0 <__flatcc_fb_gen_c_verifier@@Base+0x2c0>
   1d9d4:	ldr	r3, [sp, #40]	; 0x28
   1d9d8:	ldr	r1, [pc, #200]	; 1daa8 <__flatcc_fb_gen_c_verifier@@Base+0x2878>
   1d9dc:	str	r3, [sp, #4]
   1d9e0:	ldr	r3, [sp, #44]	; 0x2c
   1d9e4:	mov	r0, r4
   1d9e8:	str	r3, [sp]
   1d9ec:	ldrd	r2, [sp, #48]	; 0x30
   1d9f0:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1d9f4:	ldr	r3, [r4, #220]	; 0xdc
   1d9f8:	str	r6, [sp]
   1d9fc:	add	r3, r3, #1
   1da00:	str	r3, [r4, #220]	; 0xdc
   1da04:	mov	r2, fp
   1da08:	mov	r3, r7
   1da0c:	mov	r1, r5
   1da10:	mov	r0, r4
   1da14:	bl	1d3a4 <__flatcc_fb_gen_c_verifier@@Base+0x2174>
   1da18:	ldr	r3, [r4, #220]	; 0xdc
   1da1c:	cmp	r3, #0
   1da20:	bne	1d598 <__flatcc_fb_gen_c_verifier@@Base+0x2368>
   1da24:	ldr	r3, [pc, #60]	; 1da68 <__flatcc_fb_gen_c_verifier@@Base+0x2838>
   1da28:	ldr	r2, [pc, #124]	; 1daac <__flatcc_fb_gen_c_verifier@@Base+0x287c>
   1da2c:	ldr	r1, [pc, #124]	; 1dab0 <__flatcc_fb_gen_c_verifier@@Base+0x2880>
   1da30:	ldr	r0, [pc, #124]	; 1dab4 <__flatcc_fb_gen_c_verifier@@Base+0x2884>
   1da34:	bl	14094 <__assert_fail@plt>
   1da38:	ldr	r3, [sp, #8]
   1da3c:	cmp	r3, r8
   1da40:	blt	1d990 <__flatcc_fb_gen_c_verifier@@Base+0x2760>
   1da44:	str	r6, [sp]
   1da48:	ldr	r3, [sp, #8]
   1da4c:	mov	r2, r8
   1da50:	mov	r1, r5
   1da54:	mov	r0, r4
   1da58:	bl	1d3a4 <__flatcc_fb_gen_c_verifier@@Base+0x2174>
   1da5c:	b	1d95c <__flatcc_fb_gen_c_verifier@@Base+0x272c>
   1da60:	andeq	r1, r3, r1, lsr #28
   1da64:	andeq	r3, r4, sl, asr pc
   1da68:	andeq	r2, r4, ip, asr #26
   1da6c:	andeq	r0, r0, pc, asr #7
   1da70:	andeq	r3, r4, r7, ror pc
   1da74:	andeq	r3, r4, sp, lsl #31
   1da78:			; <UNDEFINED> instruction: 0x00043fb5
   1da7c:	ldrdeq	r3, [r4], -r5
   1da80:	strdeq	r3, [r4], -r1
   1da84:	strdeq	r3, [r4], -fp
   1da88:	andeq	r4, r4, r9, lsr #32
   1da8c:	andeq	r0, r0, r4, lsl r4
   1da90:	andeq	r4, r4, r6, asr #32
   1da94:	andeq	r4, r4, r4, rrx
   1da98:	andeq	r4, r4, sl, ror r0
   1da9c:	andeq	r4, r4, r7, ror r0
   1daa0:	andeq	r4, r4, r5, lsl #1
   1daa4:	andeq	r4, r4, lr, lsl #1
   1daa8:	andeq	r4, r4, r5, lsr #1
   1daac:	andeq	r0, r0, sp, asr #7
   1dab0:			; <UNDEFINED> instruction: 0x00042ebf
   1dab4:	andeq	r2, r4, r4, lsl pc
   1dab8:	push	{r4, r5, r6, r7, lr}
   1dabc:	sub	sp, sp, #260	; 0x104
   1dac0:	mov	r6, r1
   1dac4:	mov	r2, #28
   1dac8:	mov	r4, r0
   1dacc:	mov	r1, #0
   1dad0:	add	r0, sp, #24
   1dad4:	bl	13fec <memset@plt>
   1dad8:	add	r1, sp, #52	; 0x34
   1dadc:	mov	r0, r6
   1dae0:	bl	15044 <__flatcc_fb_copy_scope@@Base>
   1dae4:	ldr	r2, [r4, #208]	; 0xd0
   1dae8:	add	r6, r6, #4
   1daec:	mov	r3, #0
   1daf0:	str	r2, [sp, #16]
   1daf4:	ldr	r1, [pc, #544]	; 1dd1c <__flatcc_fb_gen_c_verifier@@Base+0x2aec>
   1daf8:	add	r2, sp, #12
   1dafc:	mov	r0, r6
   1db00:	str	r3, [sp, #12]
   1db04:	str	r3, [sp, #20]
   1db08:	bl	22f04 <fb_symbol_table_visit@@Base>
   1db0c:	ldr	r5, [sp, #12]
   1db10:	cmp	r5, #0
   1db14:	moveq	r7, r5
   1db18:	beq	1db54 <__flatcc_fb_gen_c_verifier@@Base+0x2924>
   1db1c:	lsl	r0, r5, #4
   1db20:	bl	13f8c <malloc@plt>
   1db24:	subs	r7, r0, #0
   1db28:	beq	1db54 <__flatcc_fb_gen_c_verifier@@Base+0x2924>
   1db2c:	add	r2, sp, #12
   1db30:	ldr	r1, [pc, #488]	; 1dd20 <__flatcc_fb_gen_c_verifier@@Base+0x2af0>
   1db34:	mov	r0, r6
   1db38:	str	r7, [sp, #20]
   1db3c:	bl	22f04 <fb_symbol_table_visit@@Base>
   1db40:	ldr	r3, [pc, #476]	; 1dd24 <__flatcc_fb_gen_c_verifier@@Base+0x2af4>
   1db44:	mov	r2, #16
   1db48:	ldr	r1, [sp, #12]
   1db4c:	mov	r0, r7
   1db50:	bl	14058 <qsort@plt>
   1db54:	cmp	r5, #0
   1db58:	movle	r6, #0
   1db5c:	movgt	r6, #1
   1db60:	cmp	r7, #0
   1db64:	movne	r6, #0
   1db68:	cmp	r6, #0
   1db6c:	str	r7, [sp, #24]
   1db70:	beq	1dba8 <__flatcc_fb_gen_c_verifier@@Base+0x2978>
   1db74:	ldr	r0, [pc, #428]	; 1dd28 <__flatcc_fb_gen_c_verifier@@Base+0x2af8>
   1db78:	ldr	r3, [pc, #428]	; 1dd2c <__flatcc_fb_gen_c_verifier@@Base+0x2afc>
   1db7c:	ldr	r2, [pc, #428]	; 1dd30 <__flatcc_fb_gen_c_verifier@@Base+0x2b00>
   1db80:	str	r3, [sp]
   1db84:	ldr	r1, [pc, #424]	; 1dd34 <__flatcc_fb_gen_c_verifier@@Base+0x2b04>
   1db88:	ldr	r3, [pc, #424]	; 1dd38 <__flatcc_fb_gen_c_verifier@@Base+0x2b08>
   1db8c:	ldr	r0, [r0]
   1db90:	bl	13fd4 <fprintf@plt>
   1db94:	ldr	r3, [pc, #416]	; 1dd3c <__flatcc_fb_gen_c_verifier@@Base+0x2b0c>
   1db98:	ldr	r2, [pc, #408]	; 1dd38 <__flatcc_fb_gen_c_verifier@@Base+0x2b08>
   1db9c:	ldr	r1, [pc, #396]	; 1dd30 <__flatcc_fb_gen_c_verifier@@Base+0x2b00>
   1dba0:	ldr	r0, [pc, #408]	; 1dd40 <__flatcc_fb_gen_c_verifier@@Base+0x2b10>
   1dba4:	bl	14094 <__assert_fail@plt>
   1dba8:	mov	r3, #3
   1dbac:	str	r3, [sp, #40]	; 0x28
   1dbb0:	ldr	r3, [pc, #396]	; 1dd44 <__flatcc_fb_gen_c_verifier@@Base+0x2b14>
   1dbb4:	ldr	r2, [r4, #208]	; 0xd0
   1dbb8:	str	r3, [sp, #28]
   1dbbc:	ldr	r3, [pc, #388]	; 1dd48 <__flatcc_fb_gen_c_verifier@@Base+0x2b18>
   1dbc0:	ldr	r2, [r2, #160]	; 0xa0
   1dbc4:	str	r3, [sp, #32]
   1dbc8:	ldr	r1, [pc, #380]	; 1dd4c <__flatcc_fb_gen_c_verifier@@Base+0x2b1c>
   1dbcc:	add	r3, sp, #52	; 0x34
   1dbd0:	mov	r0, r4
   1dbd4:	str	r6, [sp, #36]	; 0x24
   1dbd8:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1dbdc:	ldr	r3, [r4, #220]	; 0xdc
   1dbe0:	ldr	r1, [pc, #360]	; 1dd50 <__flatcc_fb_gen_c_verifier@@Base+0x2b20>
   1dbe4:	add	r3, r3, #2
   1dbe8:	str	r3, [r4, #220]	; 0xdc
   1dbec:	mov	r0, r4
   1dbf0:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1dbf4:	ldr	r3, [r4, #220]	; 0xdc
   1dbf8:	cmp	r3, #0
   1dbfc:	bne	1dc14 <__flatcc_fb_gen_c_verifier@@Base+0x29e4>
   1dc00:	ldr	r3, [pc, #308]	; 1dd3c <__flatcc_fb_gen_c_verifier@@Base+0x2b0c>
   1dc04:	mov	r2, #1152	; 0x480
   1dc08:	ldr	r1, [pc, #288]	; 1dd30 <__flatcc_fb_gen_c_verifier@@Base+0x2b00>
   1dc0c:	ldr	r0, [pc, #320]	; 1dd54 <__flatcc_fb_gen_c_verifier@@Base+0x2b24>
   1dc10:	b	1dba4 <__flatcc_fb_gen_c_verifier@@Base+0x2974>
   1dc14:	cmp	r3, #1
   1dc18:	streq	r6, [r4, #220]	; 0xdc
   1dc1c:	beq	1dc00 <__flatcc_fb_gen_c_verifier@@Base+0x29d0>
   1dc20:	sub	r3, r3, #2
   1dc24:	str	r3, [r4, #220]	; 0xdc
   1dc28:	ldr	r1, [pc, #296]	; 1dd58 <__flatcc_fb_gen_c_verifier@@Base+0x2b28>
   1dc2c:	mov	r0, r4
   1dc30:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1dc34:	ldr	r3, [r4, #220]	; 0xdc
   1dc38:	cmp	r5, #0
   1dc3c:	add	r3, r3, #1
   1dc40:	str	r3, [r4, #220]	; 0xdc
   1dc44:	bne	1dc78 <__flatcc_fb_gen_c_verifier@@Base+0x2a48>
   1dc48:	ldr	r1, [pc, #268]	; 1dd5c <__flatcc_fb_gen_c_verifier@@Base+0x2b2c>
   1dc4c:	mov	r0, r4
   1dc50:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1dc54:	ldr	r1, [pc, #260]	; 1dd60 <__flatcc_fb_gen_c_verifier@@Base+0x2b30>
   1dc58:	mov	r0, r4
   1dc5c:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1dc60:	ldr	r3, [r4, #220]	; 0xdc
   1dc64:	cmp	r3, #0
   1dc68:	bne	1dcec <__flatcc_fb_gen_c_verifier@@Base+0x2abc>
   1dc6c:	ldr	r3, [pc, #200]	; 1dd3c <__flatcc_fb_gen_c_verifier@@Base+0x2b0c>
   1dc70:	ldr	r2, [pc, #236]	; 1dd64 <__flatcc_fb_gen_c_verifier@@Base+0x2b34>
   1dc74:	b	1dc08 <__flatcc_fb_gen_c_verifier@@Base+0x29d8>
   1dc78:	ldr	r1, [pc, #232]	; 1dd68 <__flatcc_fb_gen_c_verifier@@Base+0x2b38>
   1dc7c:	mov	r0, r4
   1dc80:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1dc84:	ldr	r1, [pc, #224]	; 1dd6c <__flatcc_fb_gen_c_verifier@@Base+0x2b3c>
   1dc88:	mov	r0, r4
   1dc8c:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1dc90:	ldr	r1, [pc, #216]	; 1dd70 <__flatcc_fb_gen_c_verifier@@Base+0x2b40>
   1dc94:	mov	r0, r4
   1dc98:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1dc9c:	ldr	r1, [pc, #208]	; 1dd74 <__flatcc_fb_gen_c_verifier@@Base+0x2b44>
   1dca0:	mov	r0, r4
   1dca4:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1dca8:	ldr	r1, [pc, #200]	; 1dd78 <__flatcc_fb_gen_c_verifier@@Base+0x2b48>
   1dcac:	mov	r0, r4
   1dcb0:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1dcb4:	sub	r3, r5, #1
   1dcb8:	mov	r2, r6
   1dcbc:	add	r1, sp, #24
   1dcc0:	mov	r0, r4
   1dcc4:	str	r6, [sp]
   1dcc8:	bl	1d3a4 <__flatcc_fb_gen_c_verifier@@Base+0x2174>
   1dccc:	ldr	r1, [pc, #168]	; 1dd7c <__flatcc_fb_gen_c_verifier@@Base+0x2b4c>
   1dcd0:	mov	r0, r4
   1dcd4:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1dcd8:	ldr	r3, [r4, #220]	; 0xdc
   1dcdc:	cmp	r3, #0
   1dce0:	ldreq	r3, [pc, #84]	; 1dd3c <__flatcc_fb_gen_c_verifier@@Base+0x2b0c>
   1dce4:	ldreq	r2, [pc, #148]	; 1dd80 <__flatcc_fb_gen_c_verifier@@Base+0x2b50>
   1dce8:	beq	1dc08 <__flatcc_fb_gen_c_verifier@@Base+0x29d8>
   1dcec:	sub	r3, r3, #1
   1dcf0:	str	r3, [r4, #220]	; 0xdc
   1dcf4:	mov	r0, r4
   1dcf8:	ldr	r1, [pc, #132]	; 1dd84 <__flatcc_fb_gen_c_verifier@@Base+0x2b54>
   1dcfc:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1dd00:	ldr	r1, [pc, #108]	; 1dd74 <__flatcc_fb_gen_c_verifier@@Base+0x2b44>
   1dd04:	mov	r0, r4
   1dd08:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1dd0c:	ldr	r0, [sp, #24]
   1dd10:	bl	1cc9c <__flatcc_fb_gen_c_verifier@@Base+0x1a6c>
   1dd14:	add	sp, sp, #260	; 0x104
   1dd18:	pop	{r4, r5, r6, r7, pc}
   1dd1c:	muleq	r1, r8, r2
   1dd20:	andeq	sp, r1, r0, asr #4
   1dd24:	andeq	ip, r1, ip, ror #24
   1dd28:	strheq	fp, [r5], -r0
   1dd2c:	andeq	r4, r4, fp, asr #1
   1dd30:			; <UNDEFINED> instruction: 0x00042ebf
   1dd34:	andeq	r0, r3, lr, ror #20
   1dd38:	andeq	r0, r0, r4, ror r4
   1dd3c:	andeq	r2, r4, r5, asr sp
   1dd40:	andeq	r9, r3, sp, asr #1
   1dd44:	andeq	ip, r1, r4, asr pc
   1dd48:	muleq	r1, ip, r6
   1dd4c:	andeq	r2, r4, r5, asr #30
   1dd50:	andeq	r4, r4, r7, lsl #2
   1dd54:	andeq	r2, r4, r4, lsl pc
   1dd58:	strdeq	r5, [r4], -r6
   1dd5c:	andeq	r4, r4, r9, lsr r1
   1dd60:	andeq	r4, r4, fp, ror #2
   1dd64:	andeq	r0, r0, r5, lsl #9
   1dd68:	andeq	r4, r4, r8, lsl #3
   1dd6c:	andeq	r4, r4, r5, lsr #3
   1dd70:			; <UNDEFINED> instruction: 0x000441b7
   1dd74:	andeq	r1, r3, r1, lsr #28
   1dd78:	strdeq	r3, [r4], -fp
   1dd7c:	andeq	r3, r4, r4, ror #5
   1dd80:	andeq	r0, r0, lr, lsl #9
   1dd84:	andeq	r7, r3, r7, lsl r0
   1dd88:	push	{r4, r5, lr}
   1dd8c:	mov	r5, r1
   1dd90:	sub	sp, sp, #268	; 0x10c
   1dd94:	mov	r1, #0
   1dd98:	mov	r4, r0
   1dd9c:	mov	r2, #28
   1dda0:	add	r0, sp, #16
   1dda4:	str	r1, [sp, #12]
   1dda8:	bl	13fec <memset@plt>
   1ddac:	ldrh	r3, [r5, #8]
   1ddb0:	sub	r3, r3, #3
   1ddb4:	cmp	r3, #1
   1ddb8:	bls	1ddd0 <__flatcc_fb_gen_c_verifier@@Base+0x2ba0>
   1ddbc:	ldr	r3, [pc, #520]	; 1dfcc <__flatcc_fb_gen_c_verifier@@Base+0x2d9c>
   1ddc0:	ldr	r2, [pc, #520]	; 1dfd0 <__flatcc_fb_gen_c_verifier@@Base+0x2da0>
   1ddc4:	ldr	r1, [pc, #520]	; 1dfd4 <__flatcc_fb_gen_c_verifier@@Base+0x2da4>
   1ddc8:	ldr	r0, [pc, #520]	; 1dfd8 <__flatcc_fb_gen_c_verifier@@Base+0x2da8>
   1ddcc:	bl	14094 <__assert_fail@plt>
   1ddd0:	add	r1, sp, #12
   1ddd4:	ldr	r0, [r5, #20]
   1ddd8:	bl	1d0f4 <__flatcc_fb_gen_c_verifier@@Base+0x1ec4>
   1dddc:	cmp	r0, #0
   1dde0:	str	r0, [sp, #16]
   1dde4:	bne	1de28 <__flatcc_fb_gen_c_verifier@@Base+0x2bf8>
   1dde8:	ldr	r3, [sp, #12]
   1ddec:	cmp	r3, #0
   1ddf0:	ble	1de28 <__flatcc_fb_gen_c_verifier@@Base+0x2bf8>
   1ddf4:	ldr	r0, [pc, #480]	; 1dfdc <__flatcc_fb_gen_c_verifier@@Base+0x2dac>
   1ddf8:	ldr	r3, [pc, #480]	; 1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x2db0>
   1ddfc:	ldr	r2, [pc, #464]	; 1dfd4 <__flatcc_fb_gen_c_verifier@@Base+0x2da4>
   1de00:	str	r3, [sp]
   1de04:	ldr	r1, [pc, #472]	; 1dfe4 <__flatcc_fb_gen_c_verifier@@Base+0x2db4>
   1de08:	ldr	r3, [pc, #472]	; 1dfe8 <__flatcc_fb_gen_c_verifier@@Base+0x2db8>
   1de0c:	ldr	r0, [r0]
   1de10:	bl	13fd4 <fprintf@plt>
   1de14:	ldr	r3, [pc, #432]	; 1dfcc <__flatcc_fb_gen_c_verifier@@Base+0x2d9c>
   1de18:	ldr	r2, [pc, #456]	; 1dfe8 <__flatcc_fb_gen_c_verifier@@Base+0x2db8>
   1de1c:	ldr	r1, [pc, #432]	; 1dfd4 <__flatcc_fb_gen_c_verifier@@Base+0x2da4>
   1de20:	ldr	r0, [pc, #452]	; 1dfec <__flatcc_fb_gen_c_verifier@@Base+0x2dbc>
   1de24:	b	1ddcc <__flatcc_fb_gen_c_verifier@@Base+0x2b9c>
   1de28:	mov	r3, #2
   1de2c:	str	r3, [sp, #32]
   1de30:	ldr	r3, [pc, #440]	; 1dff0 <__flatcc_fb_gen_c_verifier@@Base+0x2dc0>
   1de34:	mov	r2, #220	; 0xdc
   1de38:	str	r3, [sp, #20]
   1de3c:	ldr	r3, [pc, #432]	; 1dff4 <__flatcc_fb_gen_c_verifier@@Base+0x2dc4>
   1de40:	mov	r1, #0
   1de44:	add	r0, sp, #44	; 0x2c
   1de48:	str	r3, [sp, #24]
   1de4c:	str	r5, [sp, #28]
   1de50:	bl	13fec <memset@plt>
   1de54:	add	r1, sp, #44	; 0x2c
   1de58:	mov	r0, r5
   1de5c:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x7f8>
   1de60:	add	r2, sp, #44	; 0x2c
   1de64:	ldr	r1, [pc, #396]	; 1dff8 <__flatcc_fb_gen_c_verifier@@Base+0x2dc8>
   1de68:	mov	r0, r4
   1de6c:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1de70:	ldr	r3, [r4, #220]	; 0xdc
   1de74:	ldr	r1, [pc, #384]	; 1dffc <__flatcc_fb_gen_c_verifier@@Base+0x2dcc>
   1de78:	add	r3, r3, #2
   1de7c:	str	r3, [r4, #220]	; 0xdc
   1de80:	mov	r0, r4
   1de84:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1de88:	ldr	r3, [r4, #220]	; 0xdc
   1de8c:	cmp	r3, #0
   1de90:	bne	1dea8 <__flatcc_fb_gen_c_verifier@@Base+0x2c78>
   1de94:	ldr	r3, [pc, #304]	; 1dfcc <__flatcc_fb_gen_c_verifier@@Base+0x2d9c>
   1de98:	ldr	r2, [pc, #352]	; 1e000 <__flatcc_fb_gen_c_verifier@@Base+0x2dd0>
   1de9c:	ldr	r1, [pc, #304]	; 1dfd4 <__flatcc_fb_gen_c_verifier@@Base+0x2da4>
   1dea0:	ldr	r0, [pc, #348]	; 1e004 <__flatcc_fb_gen_c_verifier@@Base+0x2dd4>
   1dea4:	b	1ddcc <__flatcc_fb_gen_c_verifier@@Base+0x2b9c>
   1dea8:	cmp	r3, #1
   1deac:	moveq	r3, #0
   1deb0:	streq	r3, [r4, #220]	; 0xdc
   1deb4:	beq	1de94 <__flatcc_fb_gen_c_verifier@@Base+0x2c64>
   1deb8:	sub	r3, r3, #2
   1debc:	str	r3, [r4, #220]	; 0xdc
   1dec0:	ldr	r1, [pc, #320]	; 1e008 <__flatcc_fb_gen_c_verifier@@Base+0x2dd8>
   1dec4:	mov	r0, r4
   1dec8:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1decc:	ldr	r3, [r4, #220]	; 0xdc
   1ded0:	add	r3, r3, #1
   1ded4:	str	r3, [r4, #220]	; 0xdc
   1ded8:	ldr	r3, [sp, #12]
   1dedc:	cmp	r3, #0
   1dee0:	bne	1df20 <__flatcc_fb_gen_c_verifier@@Base+0x2cf0>
   1dee4:	ldr	r1, [pc, #288]	; 1e00c <__flatcc_fb_gen_c_verifier@@Base+0x2ddc>
   1dee8:	mov	r0, r4
   1deec:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1def0:	ldr	r1, [pc, #280]	; 1e010 <__flatcc_fb_gen_c_verifier@@Base+0x2de0>
   1def4:	mov	r0, r4
   1def8:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1defc:	ldr	r1, [pc, #272]	; 1e014 <__flatcc_fb_gen_c_verifier@@Base+0x2de4>
   1df00:	mov	r0, r4
   1df04:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1df08:	ldr	r3, [r4, #220]	; 0xdc
   1df0c:	cmp	r3, #0
   1df10:	bne	1df98 <__flatcc_fb_gen_c_verifier@@Base+0x2d68>
   1df14:	ldr	r3, [pc, #176]	; 1dfcc <__flatcc_fb_gen_c_verifier@@Base+0x2d9c>
   1df18:	ldr	r2, [pc, #248]	; 1e018 <__flatcc_fb_gen_c_verifier@@Base+0x2de8>
   1df1c:	b	1de9c <__flatcc_fb_gen_c_verifier@@Base+0x2c6c>
   1df20:	ldr	r1, [pc, #244]	; 1e01c <__flatcc_fb_gen_c_verifier@@Base+0x2dec>
   1df24:	mov	r0, r4
   1df28:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1df2c:	ldr	r1, [pc, #236]	; 1e020 <__flatcc_fb_gen_c_verifier@@Base+0x2df0>
   1df30:	mov	r0, r4
   1df34:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1df38:	ldr	r1, [pc, #228]	; 1e024 <__flatcc_fb_gen_c_verifier@@Base+0x2df4>
   1df3c:	mov	r0, r4
   1df40:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1df44:	ldr	r1, [pc, #220]	; 1e028 <__flatcc_fb_gen_c_verifier@@Base+0x2df8>
   1df48:	mov	r0, r4
   1df4c:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1df50:	ldr	r1, [pc, #212]	; 1e02c <__flatcc_fb_gen_c_verifier@@Base+0x2dfc>
   1df54:	mov	r0, r4
   1df58:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1df5c:	ldr	r3, [sp, #12]
   1df60:	mov	r2, #0
   1df64:	sub	r3, r3, #1
   1df68:	str	r2, [sp]
   1df6c:	add	r1, sp, #16
   1df70:	mov	r0, r4
   1df74:	bl	1d3a4 <__flatcc_fb_gen_c_verifier@@Base+0x2174>
   1df78:	ldr	r1, [pc, #176]	; 1e030 <__flatcc_fb_gen_c_verifier@@Base+0x2e00>
   1df7c:	mov	r0, r4
   1df80:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1df84:	ldr	r3, [r4, #220]	; 0xdc
   1df88:	cmp	r3, #0
   1df8c:	ldreq	r3, [pc, #56]	; 1dfcc <__flatcc_fb_gen_c_verifier@@Base+0x2d9c>
   1df90:	ldreq	r2, [pc, #156]	; 1e034 <__flatcc_fb_gen_c_verifier@@Base+0x2e04>
   1df94:	beq	1de9c <__flatcc_fb_gen_c_verifier@@Base+0x2c6c>
   1df98:	sub	r3, r3, #1
   1df9c:	str	r3, [r4, #220]	; 0xdc
   1dfa0:	mov	r0, r4
   1dfa4:	ldr	r1, [pc, #140]	; 1e038 <__flatcc_fb_gen_c_verifier@@Base+0x2e08>
   1dfa8:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1dfac:	ldr	r1, [pc, #116]	; 1e028 <__flatcc_fb_gen_c_verifier@@Base+0x2df8>
   1dfb0:	mov	r0, r4
   1dfb4:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1dfb8:	ldr	r0, [sp, #16]
   1dfbc:	bl	1cc9c <__flatcc_fb_gen_c_verifier@@Base+0x1a6c>
   1dfc0:	mov	r0, #0
   1dfc4:	add	sp, sp, #268	; 0x10c
   1dfc8:	pop	{r4, r5, pc}
   1dfcc:	andeq	r2, r4, ip, ror #26
   1dfd0:	ldrdeq	r0, [r0], -lr
   1dfd4:			; <UNDEFINED> instruction: 0x00042ebf
   1dfd8:	ldrdeq	r1, [r3], -r5
   1dfdc:	strheq	fp, [r5], -r0
   1dfe0:	andeq	r4, r4, fp, asr #1
   1dfe4:	andeq	r0, r3, lr, ror #20
   1dfe8:	andeq	r0, r0, r1, ror #9
   1dfec:	andeq	r9, r3, sp, asr #1
   1dff0:	andeq	ip, r1, r8, lsl #28
   1dff4:	andeq	fp, r1, r8, lsr #13
   1dff8:	andeq	r4, r4, r3, asr #3
   1dffc:	andeq	r4, r4, r6, lsr #4
   1e000:	andeq	r0, r0, pc, ror #9
   1e004:	andeq	r2, r4, r4, lsl pc
   1e008:	strdeq	r5, [r4], -r6
   1e00c:	andeq	r4, r4, r8, asr r2
   1e010:	andeq	r4, r4, r2, ror r2
   1e014:	andeq	r4, r4, fp, ror #2
   1e018:	strdeq	r0, [r0], -r5
   1e01c:	andeq	r4, r4, r8, lsl #3
   1e020:	andeq	r4, r4, r5, lsr #3
   1e024:			; <UNDEFINED> instruction: 0x000441b7
   1e028:	andeq	r1, r3, r1, lsr #28
   1e02c:	strdeq	r3, [r4], -fp
   1e030:	andeq	r3, r4, r4, ror #5
   1e034:	strdeq	r0, [r0], -lr
   1e038:	andeq	r7, r3, r7, lsl r0

0001e03c <__flatcc_fb_gen_c_json_parser@@Base>:
   1e03c:	ldr	r3, [r0, #208]	; 0xd0
   1e040:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e044:	mov	r4, r0
   1e048:	sub	sp, sp, #268	; 0x10c
   1e04c:	ldr	r2, [r3, #164]	; 0xa4
   1e050:	ldr	r1, [pc, #3980]	; 1efe4 <__flatcc_fb_gen_c_json_parser@@Base+0xfa8>
   1e054:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1e058:	ldr	r3, [r4, #208]	; 0xd0
   1e05c:	ldr	r1, [pc, #3972]	; 1efe8 <__flatcc_fb_gen_c_json_parser@@Base+0xfac>
   1e060:	mov	r0, r4
   1e064:	ldr	r2, [r3, #164]	; 0xa4
   1e068:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1e06c:	ldr	r1, [pc, #3960]	; 1efec <__flatcc_fb_gen_c_json_parser@@Base+0xfb0>
   1e070:	mov	r0, r4
   1e074:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1e078:	ldr	r1, [pc, #3952]	; 1eff0 <__flatcc_fb_gen_c_json_parser@@Base+0xfb4>
   1e07c:	mov	r0, r4
   1e080:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1e084:	ldr	r1, [pc, #3936]	; 1efec <__flatcc_fb_gen_c_json_parser@@Base+0xfb0>
   1e088:	mov	r0, r4
   1e08c:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1e090:	ldr	r1, [pc, #3932]	; 1eff4 <__flatcc_fb_gen_c_json_parser@@Base+0xfb8>
   1e094:	mov	r0, r4
   1e098:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1e09c:	ldr	r2, [pc, #3924]	; 1eff8 <__flatcc_fb_gen_c_json_parser@@Base+0xfbc>
   1e0a0:	ldr	r1, [pc, #3924]	; 1effc <__flatcc_fb_gen_c_json_parser@@Base+0xfc0>
   1e0a4:	mov	r0, r4
   1e0a8:	bl	14f24 <__flatcc_fb_gen_c_includes@@Base>
   1e0ac:	ldr	r3, [r4, #212]	; 0xd4
   1e0b0:	ldr	r3, [r3, #140]	; 0x8c
   1e0b4:	cmp	r3, #0
   1e0b8:	beq	1e0c8 <__flatcc_fb_gen_c_json_parser@@Base+0x8c>
   1e0bc:	ldr	r1, [r4, #204]	; 0xcc
   1e0c0:	ldr	r0, [pc, #3896]	; 1f000 <__flatcc_fb_gen_c_json_parser@@Base+0xfc4>
   1e0c4:	bl	14070 <fputs@plt>
   1e0c8:	ldr	r1, [pc, #3868]	; 1efec <__flatcc_fb_gen_c_json_parser@@Base+0xfb0>
   1e0cc:	mov	r0, r4
   1e0d0:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1e0d4:	ldr	r3, [r4, #208]	; 0xd0
   1e0d8:	mov	r2, #220	; 0xdc
   1e0dc:	mov	r1, #0
   1e0e0:	ldr	r5, [r3, #52]	; 0x34
   1e0e4:	add	r0, sp, #44	; 0x2c
   1e0e8:	bl	13fec <memset@plt>
   1e0ec:	cmp	r5, #0
   1e0f0:	beq	1e1dc <__flatcc_fb_gen_c_json_parser@@Base+0x1a0>
   1e0f4:	ldrh	r3, [r5, #8]
   1e0f8:	cmp	r3, #1
   1e0fc:	bhi	1e1dc <__flatcc_fb_gen_c_json_parser@@Base+0x1a0>
   1e100:	ldr	r1, [pc, #3836]	; 1f004 <__flatcc_fb_gen_c_json_parser@@Base+0xfc8>
   1e104:	mov	r0, r4
   1e108:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1e10c:	ldr	r1, [pc, #3828]	; 1f008 <__flatcc_fb_gen_c_json_parser@@Base+0xfcc>
   1e110:	mov	r0, r4
   1e114:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1e118:	ldr	r1, [pc, #3820]	; 1f00c <__flatcc_fb_gen_c_json_parser@@Base+0xfd0>
   1e11c:	mov	r0, r4
   1e120:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1e124:	ldr	r1, [pc, #3812]	; 1f010 <__flatcc_fb_gen_c_json_parser@@Base+0xfd4>
   1e128:	mov	r0, r4
   1e12c:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1e130:	ldr	r1, [pc, #3804]	; 1f014 <__flatcc_fb_gen_c_json_parser@@Base+0xfd8>
   1e134:	mov	r0, r4
   1e138:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1e13c:	ldr	r1, [pc, #3796]	; 1f018 <__flatcc_fb_gen_c_json_parser@@Base+0xfdc>
   1e140:	mov	r0, r4
   1e144:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1e148:	ldr	r1, [pc, #3788]	; 1f01c <__flatcc_fb_gen_c_json_parser@@Base+0xfe0>
   1e14c:	mov	r0, r4
   1e150:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1e154:	ldr	r1, [pc, #3780]	; 1f020 <__flatcc_fb_gen_c_json_parser@@Base+0xfe4>
   1e158:	mov	r0, r4
   1e15c:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1e160:	ldr	r1, [pc, #3772]	; 1f024 <__flatcc_fb_gen_c_json_parser@@Base+0xfe8>
   1e164:	mov	r0, r4
   1e168:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1e16c:	ldr	r3, [r4, #208]	; 0xd0
   1e170:	ldr	r1, [pc, #3760]	; 1f028 <__flatcc_fb_gen_c_json_parser@@Base+0xfec>
   1e174:	mov	r0, r4
   1e178:	ldr	r2, [r3, #160]	; 0xa0
   1e17c:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1e180:	ldr	r3, [r4, #220]	; 0xdc
   1e184:	ldr	r1, [pc, #3744]	; 1f02c <__flatcc_fb_gen_c_json_parser@@Base+0xff0>
   1e188:	add	r3, r3, #2
   1e18c:	str	r3, [r4, #220]	; 0xdc
   1e190:	mov	r0, r4
   1e194:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1e198:	ldr	r3, [r4, #220]	; 0xdc
   1e19c:	cmp	r3, #0
   1e1a0:	bne	1e1b8 <__flatcc_fb_gen_c_json_parser@@Base+0x17c>
   1e1a4:	ldr	r3, [pc, #3716]	; 1f030 <__flatcc_fb_gen_c_json_parser@@Base+0xff4>
   1e1a8:	ldr	r2, [pc, #3716]	; 1f034 <__flatcc_fb_gen_c_json_parser@@Base+0xff8>
   1e1ac:	ldr	r1, [pc, #3716]	; 1f038 <__flatcc_fb_gen_c_json_parser@@Base+0xffc>
   1e1b0:	ldr	r0, [pc, #3716]	; 1f03c <__flatcc_fb_gen_c_json_parser@@Base+0x1000>
   1e1b4:	bl	14094 <__assert_fail@plt>
   1e1b8:	cmp	r3, #1
   1e1bc:	moveq	r3, #0
   1e1c0:	streq	r3, [r4, #220]	; 0xdc
   1e1c4:	beq	1e1a4 <__flatcc_fb_gen_c_json_parser@@Base+0x168>
   1e1c8:	sub	r3, r3, #2
   1e1cc:	str	r3, [r4, #220]	; 0xdc
   1e1d0:	ldr	r1, [pc, #3604]	; 1efec <__flatcc_fb_gen_c_json_parser@@Base+0xfb0>
   1e1d4:	mov	r0, r4
   1e1d8:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1e1dc:	ldr	r3, [r4, #208]	; 0xd0
   1e1e0:	ldr	r6, [pc, #3672]	; 1f040 <__flatcc_fb_gen_c_json_parser@@Base+0x1004>
   1e1e4:	ldr	r7, [pc, #3672]	; 1f044 <__flatcc_fb_gen_c_json_parser@@Base+0x1008>
   1e1e8:	ldr	r5, [r3, #40]	; 0x28
   1e1ec:	ldr	r8, [pc, #3668]	; 1f048 <__flatcc_fb_gen_c_json_parser@@Base+0x100c>
   1e1f0:	cmp	r5, #0
   1e1f4:	bne	1e250 <__flatcc_fb_gen_c_json_parser@@Base+0x214>
   1e1f8:	ldr	r3, [r4, #208]	; 0xd0
   1e1fc:	mov	r2, r4
   1e200:	ldr	r1, [pc, #3652]	; 1f04c <__flatcc_fb_gen_c_json_parser@@Base+0x1010>
   1e204:	ldr	r0, [r3, #60]	; 0x3c
   1e208:	bl	235f4 <fb_scope_table_visit@@Base>
   1e20c:	ldr	r3, [r4, #208]	; 0xd0
   1e210:	ldr	r1, [pc, #3640]	; 1f050 <__flatcc_fb_gen_c_json_parser@@Base+0x1014>
   1e214:	mov	r0, r4
   1e218:	ldr	r2, [r3, #160]	; 0xa0
   1e21c:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1e220:	ldr	r3, [r4, #220]	; 0xdc
   1e224:	ldr	r1, [pc, #3608]	; 1f044 <__flatcc_fb_gen_c_json_parser@@Base+0x1008>
   1e228:	add	r3, r3, #2
   1e22c:	str	r3, [r4, #220]	; 0xdc
   1e230:	mov	r0, r4
   1e234:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1e238:	ldr	r3, [r4, #220]	; 0xdc
   1e23c:	cmp	r3, #0
   1e240:	bne	1e3ac <__flatcc_fb_gen_c_json_parser@@Base+0x370>
   1e244:	ldr	r3, [pc, #3556]	; 1f030 <__flatcc_fb_gen_c_json_parser@@Base+0xff4>
   1e248:	ldr	r2, [pc, #3588]	; 1f054 <__flatcc_fb_gen_c_json_parser@@Base+0x1018>
   1e24c:	b	1e1ac <__flatcc_fb_gen_c_json_parser@@Base+0x170>
   1e250:	ldrh	r3, [r5, #8]
   1e254:	cmp	r3, #4
   1e258:	ldrls	pc, [pc, r3, lsl #2]
   1e25c:	b	1e320 <__flatcc_fb_gen_c_json_parser@@Base+0x2e4>
   1e260:	andeq	lr, r1, r8, lsr #6
   1e264:	strdeq	lr, [r1], -r4
   1e268:	andeq	lr, r1, r0, lsr #6
   1e26c:	andeq	lr, r1, r0, asr #6
   1e270:	andeq	lr, r1, r4, ror r2
   1e274:	add	r1, sp, #44	; 0x2c
   1e278:	mov	r0, r5
   1e27c:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x7f8>
   1e280:	add	r2, sp, #44	; 0x2c
   1e284:	ldr	r1, [pc, #3532]	; 1f058 <__flatcc_fb_gen_c_json_parser@@Base+0x101c>
   1e288:	mov	r0, r4
   1e28c:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1e290:	add	r2, sp, #44	; 0x2c
   1e294:	ldr	r1, [pc, #3520]	; 1f05c <__flatcc_fb_gen_c_json_parser@@Base+0x1020>
   1e298:	mov	r0, r4
   1e29c:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1e2a0:	add	r2, sp, #44	; 0x2c
   1e2a4:	mov	r1, r6
   1e2a8:	mov	r0, r4
   1e2ac:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1e2b0:	ldr	r3, [r4, #220]	; 0xdc
   1e2b4:	mov	r1, r7
   1e2b8:	add	r3, r3, #2
   1e2bc:	str	r3, [r4, #220]	; 0xdc
   1e2c0:	mov	r0, r4
   1e2c4:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1e2c8:	ldr	r3, [r4, #220]	; 0xdc
   1e2cc:	cmp	r3, #0
   1e2d0:	bne	1e2e0 <__flatcc_fb_gen_c_json_parser@@Base+0x2a4>
   1e2d4:	ldr	r3, [pc, #3412]	; 1f030 <__flatcc_fb_gen_c_json_parser@@Base+0xff4>
   1e2d8:	ldr	r2, [pc, #3456]	; 1f060 <__flatcc_fb_gen_c_json_parser@@Base+0x1024>
   1e2dc:	b	1e1ac <__flatcc_fb_gen_c_json_parser@@Base+0x170>
   1e2e0:	cmp	r3, #1
   1e2e4:	bne	1e3a0 <__flatcc_fb_gen_c_json_parser@@Base+0x364>
   1e2e8:	mov	r3, #0
   1e2ec:	str	r3, [r4, #220]	; 0xdc
   1e2f0:	b	1e2d4 <__flatcc_fb_gen_c_json_parser@@Base+0x298>
   1e2f4:	add	r1, sp, #44	; 0x2c
   1e2f8:	mov	r0, r5
   1e2fc:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x7f8>
   1e300:	add	r2, sp, #44	; 0x2c
   1e304:	ldr	r1, [pc, #3416]	; 1f064 <__flatcc_fb_gen_c_json_parser@@Base+0x1028>
   1e308:	mov	r0, r4
   1e30c:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1e310:	ldr	r1, [pc, #3408]	; 1f068 <__flatcc_fb_gen_c_json_parser@@Base+0x102c>
   1e314:	add	r2, sp, #44	; 0x2c
   1e318:	mov	r0, r4
   1e31c:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1e320:	ldr	r5, [r5]
   1e324:	b	1e1f0 <__flatcc_fb_gen_c_json_parser@@Base+0x1b4>
   1e328:	add	r1, sp, #44	; 0x2c
   1e32c:	mov	r0, r5
   1e330:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x7f8>
   1e334:	add	r2, sp, #44	; 0x2c
   1e338:	mov	r1, r8
   1e33c:	b	1e318 <__flatcc_fb_gen_c_json_parser@@Base+0x2dc>
   1e340:	add	r1, sp, #44	; 0x2c
   1e344:	mov	r0, r5
   1e348:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x7f8>
   1e34c:	add	r2, sp, #44	; 0x2c
   1e350:	mov	r1, r6
   1e354:	mov	r0, r4
   1e358:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1e35c:	ldr	r3, [r4, #220]	; 0xdc
   1e360:	add	r2, sp, #44	; 0x2c
   1e364:	add	r3, r3, #2
   1e368:	str	r3, [r4, #220]	; 0xdc
   1e36c:	mov	r1, r7
   1e370:	mov	r0, r4
   1e374:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1e378:	ldr	r3, [r4, #220]	; 0xdc
   1e37c:	cmp	r3, #0
   1e380:	bne	1e390 <__flatcc_fb_gen_c_json_parser@@Base+0x354>
   1e384:	ldr	r3, [pc, #3236]	; 1f030 <__flatcc_fb_gen_c_json_parser@@Base+0xff4>
   1e388:	ldr	r2, [pc, #3292]	; 1f06c <__flatcc_fb_gen_c_json_parser@@Base+0x1030>
   1e38c:	b	1e1ac <__flatcc_fb_gen_c_json_parser@@Base+0x170>
   1e390:	cmp	r3, #1
   1e394:	moveq	r3, #0
   1e398:	streq	r3, [r4, #220]	; 0xdc
   1e39c:	beq	1e384 <__flatcc_fb_gen_c_json_parser@@Base+0x348>
   1e3a0:	sub	r3, r3, #2
   1e3a4:	str	r3, [r4, #220]	; 0xdc
   1e3a8:	b	1e320 <__flatcc_fb_gen_c_json_parser@@Base+0x2e4>
   1e3ac:	cmp	r3, #1
   1e3b0:	streq	r5, [r4, #220]	; 0xdc
   1e3b4:	beq	1e244 <__flatcc_fb_gen_c_json_parser@@Base+0x208>
   1e3b8:	sub	r3, r3, #2
   1e3bc:	str	r3, [r4, #220]	; 0xdc
   1e3c0:	ldr	r1, [pc, #3108]	; 1efec <__flatcc_fb_gen_c_json_parser@@Base+0xfb0>
   1e3c4:	mov	r0, r4
   1e3c8:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1e3cc:	ldr	r3, [r4, #208]	; 0xd0
   1e3d0:	ldr	r7, [pc, #3224]	; 1f070 <__flatcc_fb_gen_c_json_parser@@Base+0x1034>
   1e3d4:	ldr	r5, [r3, #40]	; 0x28
   1e3d8:	cmp	r5, #0
   1e3dc:	bne	1e538 <__flatcc_fb_gen_c_json_parser@@Base+0x4fc>
   1e3e0:	ldr	r3, [r4, #208]	; 0xd0
   1e3e4:	mov	r2, r4
   1e3e8:	ldr	r1, [pc, #3204]	; 1f074 <__flatcc_fb_gen_c_json_parser@@Base+0x1038>
   1e3ec:	ldr	r0, [r3, #60]	; 0x3c
   1e3f0:	bl	235f4 <fb_scope_table_visit@@Base>
   1e3f4:	mov	r2, #28
   1e3f8:	mov	r1, r5
   1e3fc:	add	r0, sp, #16
   1e400:	bl	13fec <memset@plt>
   1e404:	ldr	r6, [r4, #208]	; 0xd0
   1e408:	mov	r2, #44	; 0x2c
   1e40c:	mov	r1, r5
   1e410:	ldr	r8, [r6, #60]	; 0x3c
   1e414:	add	r0, sp, r2
   1e418:	bl	13fec <memset@plt>
   1e41c:	mov	r3, #1
   1e420:	add	r2, sp, #44	; 0x2c
   1e424:	ldr	r1, [pc, #3148]	; 1f078 <__flatcc_fb_gen_c_json_parser@@Base+0x103c>
   1e428:	mov	r0, r8
   1e42c:	str	r3, [sp, #44]	; 0x2c
   1e430:	str	r6, [sp, #84]	; 0x54
   1e434:	bl	235f4 <fb_scope_table_visit@@Base>
   1e438:	ldr	r7, [sp, #48]	; 0x30
   1e43c:	mov	r1, #8
   1e440:	mov	r0, r7
   1e444:	bl	13ee4 <calloc@plt>
   1e448:	ldr	sl, [sp, #52]	; 0x34
   1e44c:	mov	r1, #8
   1e450:	mov	fp, r0
   1e454:	str	r0, [sp, #60]	; 0x3c
   1e458:	mov	r0, sl
   1e45c:	bl	13ee4 <calloc@plt>
   1e460:	ldr	r9, [sp, #56]	; 0x38
   1e464:	mov	r6, r0
   1e468:	str	r0, [sp, #64]	; 0x40
   1e46c:	mov	r0, r9
   1e470:	bl	13f8c <malloc@plt>
   1e474:	cmp	r7, #0
   1e478:	movle	r7, #0
   1e47c:	movgt	r7, #1
   1e480:	cmp	fp, #0
   1e484:	movne	r7, #0
   1e488:	cmp	r7, #0
   1e48c:	str	fp, [sp, #72]	; 0x48
   1e490:	str	r6, [sp, #76]	; 0x4c
   1e494:	str	r0, [sp, #68]	; 0x44
   1e498:	str	r0, [sp, #80]	; 0x50
   1e49c:	bne	1e4d0 <__flatcc_fb_gen_c_json_parser@@Base+0x494>
   1e4a0:	cmp	sl, #0
   1e4a4:	clz	r6, r6
   1e4a8:	lsr	r6, r6, #5
   1e4ac:	movle	r6, #0
   1e4b0:	cmp	r6, #0
   1e4b4:	bne	1e4d0 <__flatcc_fb_gen_c_json_parser@@Base+0x494>
   1e4b8:	cmp	r9, #0
   1e4bc:	clz	r0, r0
   1e4c0:	lsr	r0, r0, #5
   1e4c4:	moveq	r0, #0
   1e4c8:	cmp	r0, #0
   1e4cc:	beq	1ee34 <__flatcc_fb_gen_c_json_parser@@Base+0xdf8>
   1e4d0:	add	r0, sp, #44	; 0x2c
   1e4d4:	bl	1cca8 <__flatcc_fb_gen_c_verifier@@Base+0x1a78>
   1e4d8:	ldr	r3, [r4, #208]	; 0xd0
   1e4dc:	ldr	r5, [r3, #52]	; 0x34
   1e4e0:	cmp	r5, #0
   1e4e4:	beq	1e4fc <__flatcc_fb_gen_c_json_parser@@Base+0x4c0>
   1e4e8:	ldrh	r6, [r5, #8]
   1e4ec:	cmp	r6, #0
   1e4f0:	beq	1f2bc <__flatcc_fb_gen_c_json_parser@@Base+0x1280>
   1e4f4:	cmp	r6, #1
   1e4f8:	beq	1f454 <__flatcc_fb_gen_c_json_parser@@Base+0x1418>
   1e4fc:	ldr	r3, [r4, #212]	; 0xd4
   1e500:	ldr	r3, [r3, #140]	; 0x8c
   1e504:	cmp	r3, #0
   1e508:	beq	1e518 <__flatcc_fb_gen_c_json_parser@@Base+0x4dc>
   1e50c:	ldr	r1, [r4, #204]	; 0xcc
   1e510:	ldr	r0, [pc, #2916]	; 1f07c <__flatcc_fb_gen_c_json_parser@@Base+0x1040>
   1e514:	bl	14070 <fputs@plt>
   1e518:	ldr	r3, [r4, #208]	; 0xd0
   1e51c:	mov	r0, r4
   1e520:	ldr	r1, [pc, #2904]	; 1f080 <__flatcc_fb_gen_c_json_parser@@Base+0x1044>
   1e524:	ldr	r2, [r3, #164]	; 0xa4
   1e528:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1e52c:	mov	r0, #0
   1e530:	add	sp, sp, #268	; 0x10c
   1e534:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e538:	ldrh	r3, [r5, #8]
   1e53c:	cmp	r3, #4
   1e540:	ldrls	pc, [pc, r3, lsl #2]
   1e544:	b	1e984 <__flatcc_fb_gen_c_json_parser@@Base+0x948>
   1e548:	andeq	lr, r1, ip, lsl #19
   1e54c:	andeq	lr, r1, r4, lsl #11
   1e550:	andeq	lr, r1, r4, lsl #19
   1e554:	andeq	lr, r1, r4, ror r5
   1e558:	andeq	lr, r1, ip, asr r5
   1e55c:	mov	r1, r5
   1e560:	mov	r0, r4
   1e564:	bl	1ba38 <__flatcc_fb_gen_c_verifier@@Base+0x808>
   1e568:	mov	r1, r5
   1e56c:	mov	r0, r4
   1e570:	bl	1bea8 <__flatcc_fb_gen_c_verifier@@Base+0xc78>
   1e574:	mov	r1, r5
   1e578:	mov	r0, r4
   1e57c:	bl	1dd88 <__flatcc_fb_gen_c_verifier@@Base+0x2b58>
   1e580:	b	1e984 <__flatcc_fb_gen_c_json_parser@@Base+0x948>
   1e584:	mov	r2, #28
   1e588:	mov	r1, #0
   1e58c:	add	r0, sp, #16
   1e590:	bl	13fec <memset@plt>
   1e594:	ldrh	r3, [r5, #8]
   1e598:	cmp	r3, #1
   1e59c:	beq	1e5b4 <__flatcc_fb_gen_c_json_parser@@Base+0x578>
   1e5a0:	ldr	r3, [pc, #2780]	; 1f084 <__flatcc_fb_gen_c_json_parser@@Base+0x1048>
   1e5a4:	ldr	r2, [pc, #2780]	; 1f088 <__flatcc_fb_gen_c_json_parser@@Base+0x104c>
   1e5a8:	ldr	r1, [pc, #2696]	; 1f038 <__flatcc_fb_gen_c_json_parser@@Base+0xffc>
   1e5ac:	ldr	r0, [pc, #2776]	; 1f08c <__flatcc_fb_gen_c_json_parser@@Base+0x1050>
   1e5b0:	b	1e1b4 <__flatcc_fb_gen_c_json_parser@@Base+0x178>
   1e5b4:	add	r1, sp, #12
   1e5b8:	ldr	r0, [r5, #20]
   1e5bc:	bl	1d0f4 <__flatcc_fb_gen_c_verifier@@Base+0x1ec4>
   1e5c0:	cmp	r0, #0
   1e5c4:	str	r0, [sp, #16]
   1e5c8:	bne	1e60c <__flatcc_fb_gen_c_json_parser@@Base+0x5d0>
   1e5cc:	ldr	r3, [sp, #12]
   1e5d0:	cmp	r3, #0
   1e5d4:	ble	1e60c <__flatcc_fb_gen_c_json_parser@@Base+0x5d0>
   1e5d8:	ldr	r0, [pc, #2736]	; 1f090 <__flatcc_fb_gen_c_json_parser@@Base+0x1054>
   1e5dc:	ldr	r3, [pc, #2736]	; 1f094 <__flatcc_fb_gen_c_json_parser@@Base+0x1058>
   1e5e0:	ldr	r2, [pc, #2640]	; 1f038 <__flatcc_fb_gen_c_json_parser@@Base+0xffc>
   1e5e4:	str	r3, [sp]
   1e5e8:	ldr	r1, [pc, #2728]	; 1f098 <__flatcc_fb_gen_c_json_parser@@Base+0x105c>
   1e5ec:	ldr	r3, [pc, #2728]	; 1f09c <__flatcc_fb_gen_c_json_parser@@Base+0x1060>
   1e5f0:	ldr	r0, [r0]
   1e5f4:	bl	13fd4 <fprintf@plt>
   1e5f8:	ldr	r3, [pc, #2692]	; 1f084 <__flatcc_fb_gen_c_json_parser@@Base+0x1048>
   1e5fc:	ldr	r2, [pc, #2712]	; 1f09c <__flatcc_fb_gen_c_json_parser@@Base+0x1060>
   1e600:	ldr	r1, [pc, #2608]	; 1f038 <__flatcc_fb_gen_c_json_parser@@Base+0xffc>
   1e604:	ldr	r0, [pc, #2708]	; 1f0a0 <__flatcc_fb_gen_c_json_parser@@Base+0x1064>
   1e608:	b	1e1b4 <__flatcc_fb_gen_c_json_parser@@Base+0x178>
   1e60c:	mov	r3, #1
   1e610:	str	r3, [sp, #32]
   1e614:	ldr	r3, [pc, #2696]	; 1f0a4 <__flatcc_fb_gen_c_json_parser@@Base+0x1068>
   1e618:	mov	r2, #220	; 0xdc
   1e61c:	mov	r1, #0
   1e620:	add	r0, sp, #44	; 0x2c
   1e624:	str	r3, [sp, #24]
   1e628:	str	r5, [sp, #28]
   1e62c:	str	r7, [sp, #20]
   1e630:	bl	13fec <memset@plt>
   1e634:	add	r1, sp, #44	; 0x2c
   1e638:	mov	r0, r5
   1e63c:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x7f8>
   1e640:	add	r2, sp, #44	; 0x2c
   1e644:	ldr	r1, [pc, #2652]	; 1f0a8 <__flatcc_fb_gen_c_json_parser@@Base+0x106c>
   1e648:	mov	r0, r4
   1e64c:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1e650:	ldr	r1, [pc, #2940]	; 1f1d4 <__flatcc_fb_gen_c_json_parser@@Base+0x1198>
   1e654:	mov	r0, r4
   1e658:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1e65c:	ldr	r3, [r4, #220]	; 0xdc
   1e660:	ldr	r1, [pc, #2628]	; 1f0ac <__flatcc_fb_gen_c_json_parser@@Base+0x1070>
   1e664:	add	r3, r3, #1
   1e668:	str	r3, [r4, #220]	; 0xdc
   1e66c:	mov	r0, r4
   1e670:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1e674:	ldr	r3, [sp, #12]
   1e678:	cmp	r3, #0
   1e67c:	ble	1e6b0 <__flatcc_fb_gen_c_json_parser@@Base+0x674>
   1e680:	ldr	r1, [pc, #2600]	; 1f0b0 <__flatcc_fb_gen_c_json_parser@@Base+0x1074>
   1e684:	mov	r0, r4
   1e688:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1e68c:	ldr	r1, [pc, #2592]	; 1f0b4 <__flatcc_fb_gen_c_json_parser@@Base+0x1078>
   1e690:	mov	r0, r4
   1e694:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1e698:	ldr	r1, [pc, #2804]	; 1f194 <__flatcc_fb_gen_c_json_parser@@Base+0x1158>
   1e69c:	mov	r0, r4
   1e6a0:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1e6a4:	ldr	r1, [pc, #2796]	; 1f198 <__flatcc_fb_gen_c_json_parser@@Base+0x115c>
   1e6a8:	mov	r0, r4
   1e6ac:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1e6b0:	ldr	r1, [pc, #2356]	; 1efec <__flatcc_fb_gen_c_json_parser@@Base+0xfb0>
   1e6b4:	mov	r0, r4
   1e6b8:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1e6bc:	ldr	r1, [pc, #2548]	; 1f0b8 <__flatcc_fb_gen_c_json_parser@@Base+0x107c>
   1e6c0:	mov	r0, r4
   1e6c4:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1e6c8:	ldr	r1, [pc, #2540]	; 1f0bc <__flatcc_fb_gen_c_json_parser@@Base+0x1080>
   1e6cc:	mov	r0, r4
   1e6d0:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1e6d4:	ldr	r3, [r4, #220]	; 0xdc
   1e6d8:	add	r3, r3, #1
   1e6dc:	str	r3, [r4, #220]	; 0xdc
   1e6e0:	ldr	r3, [sp, #12]
   1e6e4:	cmp	r3, #0
   1e6e8:	bne	1e728 <__flatcc_fb_gen_c_json_parser@@Base+0x6ec>
   1e6ec:	ldr	r1, [pc, #2508]	; 1f0c0 <__flatcc_fb_gen_c_json_parser@@Base+0x1084>
   1e6f0:	mov	r0, r4
   1e6f4:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1e6f8:	ldr	r1, [pc, #2500]	; 1f0c4 <__flatcc_fb_gen_c_json_parser@@Base+0x1088>
   1e6fc:	mov	r0, r4
   1e700:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1e704:	ldr	r1, [pc, #2492]	; 1f0c8 <__flatcc_fb_gen_c_json_parser@@Base+0x108c>
   1e708:	mov	r0, r4
   1e70c:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1e710:	ldr	r3, [r4, #220]	; 0xdc
   1e714:	cmp	r3, #0
   1e718:	bne	1e760 <__flatcc_fb_gen_c_json_parser@@Base+0x724>
   1e71c:	ldr	r3, [pc, #2400]	; 1f084 <__flatcc_fb_gen_c_json_parser@@Base+0x1048>
   1e720:	ldr	r2, [pc, #2468]	; 1f0cc <__flatcc_fb_gen_c_json_parser@@Base+0x1090>
   1e724:	b	1e1ac <__flatcc_fb_gen_c_json_parser@@Base+0x170>
   1e728:	mov	r0, r4
   1e72c:	ldr	r1, [pc, #2460]	; 1f0d0 <__flatcc_fb_gen_c_json_parser@@Base+0x1094>
   1e730:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1e734:	mov	r0, r4
   1e738:	ldr	r1, [pc, #2652]	; 1f19c <__flatcc_fb_gen_c_json_parser@@Base+0x1160>
   1e73c:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1e740:	ldr	r3, [sp, #12]
   1e744:	mov	r2, #0
   1e748:	str	r2, [sp]
   1e74c:	sub	r3, r3, #1
   1e750:	add	r1, sp, #16
   1e754:	mov	r0, r4
   1e758:	bl	1d3a4 <__flatcc_fb_gen_c_verifier@@Base+0x2174>
   1e75c:	b	1e704 <__flatcc_fb_gen_c_json_parser@@Base+0x6c8>
   1e760:	sub	r3, r3, #1
   1e764:	str	r3, [r4, #220]	; 0xdc
   1e768:	ldr	r1, [pc, #2724]	; 1f214 <__flatcc_fb_gen_c_json_parser@@Base+0x11d8>
   1e76c:	mov	r0, r4
   1e770:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1e774:	ldr	r1, [pc, #2596]	; 1f1a0 <__flatcc_fb_gen_c_json_parser@@Base+0x1164>
   1e778:	mov	r0, r4
   1e77c:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1e780:	ldr	r3, [sp, #12]
   1e784:	cmp	r3, #0
   1e788:	ble	1e7bc <__flatcc_fb_gen_c_json_parser@@Base+0x780>
   1e78c:	ldr	r3, [r4, #220]	; 0xdc
   1e790:	ldr	r1, [pc, #2364]	; 1f0d4 <__flatcc_fb_gen_c_json_parser@@Base+0x1098>
   1e794:	str	r3, [r4, #228]	; 0xe4
   1e798:	mov	r3, #0
   1e79c:	str	r3, [r4, #220]	; 0xdc
   1e7a0:	mov	r0, r4
   1e7a4:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1e7a8:	ldr	r3, [r4, #228]	; 0xe4
   1e7ac:	ldr	r1, [pc, #2340]	; 1f0d8 <__flatcc_fb_gen_c_json_parser@@Base+0x109c>
   1e7b0:	str	r3, [r4, #220]	; 0xdc
   1e7b4:	mov	r0, r4
   1e7b8:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1e7bc:	ldr	r3, [r4, #220]	; 0xdc
   1e7c0:	cmp	r3, #0
   1e7c4:	ldreq	r3, [pc, #2232]	; 1f084 <__flatcc_fb_gen_c_json_parser@@Base+0x1048>
   1e7c8:	ldreq	r2, [pc, #2316]	; 1f0dc <__flatcc_fb_gen_c_json_parser@@Base+0x10a0>
   1e7cc:	beq	1e1ac <__flatcc_fb_gen_c_json_parser@@Base+0x170>
   1e7d0:	sub	r3, r3, #1
   1e7d4:	str	r3, [r4, #220]	; 0xdc
   1e7d8:	ldr	r1, [pc, #2612]	; 1f214 <__flatcc_fb_gen_c_json_parser@@Base+0x11d8>
   1e7dc:	mov	r0, r4
   1e7e0:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1e7e4:	ldr	r1, [pc, #2048]	; 1efec <__flatcc_fb_gen_c_json_parser@@Base+0xfb0>
   1e7e8:	mov	r0, r4
   1e7ec:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1e7f0:	ldr	r0, [sp, #16]
   1e7f4:	bl	1cc9c <__flatcc_fb_gen_c_verifier@@Base+0x1a6c>
   1e7f8:	ldrh	r3, [r5, #8]
   1e7fc:	cmp	r3, #1
   1e800:	ldrne	r3, [pc, #2264]	; 1f0e0 <__flatcc_fb_gen_c_json_parser@@Base+0x10a4>
   1e804:	ldrne	r2, [pc, #2264]	; 1f0e4 <__flatcc_fb_gen_c_json_parser@@Base+0x10a8>
   1e808:	bne	1e5a8 <__flatcc_fb_gen_c_json_parser@@Base+0x56c>
   1e80c:	mov	r2, #220	; 0xdc
   1e810:	mov	r1, #0
   1e814:	add	r0, sp, #44	; 0x2c
   1e818:	bl	13fec <memset@plt>
   1e81c:	add	r1, sp, #44	; 0x2c
   1e820:	mov	r0, r5
   1e824:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x7f8>
   1e828:	add	r2, sp, #44	; 0x2c
   1e82c:	ldr	r1, [pc, #2228]	; 1f0e8 <__flatcc_fb_gen_c_json_parser@@Base+0x10ac>
   1e830:	mov	r0, r4
   1e834:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1e838:	ldr	r1, [pc, #2452]	; 1f1d4 <__flatcc_fb_gen_c_json_parser@@Base+0x1198>
   1e83c:	mov	r0, r4
   1e840:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1e844:	ldr	r3, [r4, #220]	; 0xdc
   1e848:	ldr	r1, [pc, #2148]	; 1f0b4 <__flatcc_fb_gen_c_json_parser@@Base+0x1078>
   1e84c:	add	r3, r3, #1
   1e850:	str	r3, [r4, #220]	; 0xdc
   1e854:	mov	r0, r4
   1e858:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1e85c:	ldr	r1, [pc, #1928]	; 1efec <__flatcc_fb_gen_c_json_parser@@Base+0xfb0>
   1e860:	mov	r0, r4
   1e864:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1e868:	ldr	r1, [pc, #2172]	; 1f0ec <__flatcc_fb_gen_c_json_parser@@Base+0x10b0>
   1e86c:	mov	r0, r4
   1e870:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1e874:	ldrh	r1, [r5, #104]	; 0x68
   1e878:	ldrd	r2, [r5, #112]	; 0x70
   1e87c:	mov	r0, r4
   1e880:	str	r1, [sp]
   1e884:	ldr	r1, [pc, #2148]	; 1f0f0 <__flatcc_fb_gen_c_json_parser@@Base+0x10b4>
   1e888:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1e88c:	add	r2, sp, #44	; 0x2c
   1e890:	ldr	r1, [pc, #2140]	; 1f0f4 <__flatcc_fb_gen_c_json_parser@@Base+0x10b8>
   1e894:	mov	r0, r4
   1e898:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1e89c:	ldr	r1, [pc, #2132]	; 1f0f8 <__flatcc_fb_gen_c_json_parser@@Base+0x10bc>
   1e8a0:	mov	r0, r4
   1e8a4:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1e8a8:	ldr	r1, [pc, #2288]	; 1f1a0 <__flatcc_fb_gen_c_json_parser@@Base+0x1164>
   1e8ac:	mov	r0, r4
   1e8b0:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1e8b4:	ldr	r3, [r4, #220]	; 0xdc
   1e8b8:	ldr	r1, [pc, #2068]	; 1f0d4 <__flatcc_fb_gen_c_json_parser@@Base+0x1098>
   1e8bc:	str	r3, [r4, #228]	; 0xe4
   1e8c0:	mov	r3, #0
   1e8c4:	str	r3, [r4, #220]	; 0xdc
   1e8c8:	mov	r0, r4
   1e8cc:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1e8d0:	ldr	r3, [r4, #228]	; 0xe4
   1e8d4:	ldr	r1, [pc, #2044]	; 1f0d8 <__flatcc_fb_gen_c_json_parser@@Base+0x109c>
   1e8d8:	str	r3, [r4, #220]	; 0xdc
   1e8dc:	mov	r0, r4
   1e8e0:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1e8e4:	ldr	r3, [r4, #220]	; 0xdc
   1e8e8:	cmp	r3, #0
   1e8ec:	ldreq	r3, [pc, #2028]	; 1f0e0 <__flatcc_fb_gen_c_json_parser@@Base+0x10a4>
   1e8f0:	ldreq	r2, [pc, #2052]	; 1f0fc <__flatcc_fb_gen_c_json_parser@@Base+0x10c0>
   1e8f4:	beq	1e1ac <__flatcc_fb_gen_c_json_parser@@Base+0x170>
   1e8f8:	sub	r3, r3, #1
   1e8fc:	str	r3, [r4, #220]	; 0xdc
   1e900:	ldr	r1, [pc, #2316]	; 1f214 <__flatcc_fb_gen_c_json_parser@@Base+0x11d8>
   1e904:	mov	r0, r4
   1e908:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1e90c:	ldr	r1, [pc, #1752]	; 1efec <__flatcc_fb_gen_c_json_parser@@Base+0xfb0>
   1e910:	mov	r0, r4
   1e914:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1e918:	add	r2, sp, #44	; 0x2c
   1e91c:	ldr	r1, [pc, #2012]	; 1f100 <__flatcc_fb_gen_c_json_parser@@Base+0x10c4>
   1e920:	mov	r0, r4
   1e924:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1e928:	ldr	r1, [pc, #2212]	; 1f1d4 <__flatcc_fb_gen_c_json_parser@@Base+0x1198>
   1e92c:	mov	r0, r4
   1e930:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1e934:	ldr	r3, [r4, #220]	; 0xdc
   1e938:	add	r2, sp, #44	; 0x2c
   1e93c:	add	r3, r3, #1
   1e940:	str	r3, [r4, #220]	; 0xdc
   1e944:	ldr	r1, [pc, #1976]	; 1f104 <__flatcc_fb_gen_c_json_parser@@Base+0x10c8>
   1e948:	mov	r0, r4
   1e94c:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1e950:	ldr	r3, [r4, #220]	; 0xdc
   1e954:	cmp	r3, #0
   1e958:	ldreq	r3, [pc, #1920]	; 1f0e0 <__flatcc_fb_gen_c_json_parser@@Base+0x10a4>
   1e95c:	moveq	r2, #1376	; 0x560
   1e960:	beq	1e1ac <__flatcc_fb_gen_c_json_parser@@Base+0x170>
   1e964:	sub	r3, r3, #1
   1e968:	ldr	r1, [pc, #2212]	; 1f214 <__flatcc_fb_gen_c_json_parser@@Base+0x11d8>
   1e96c:	mov	r0, r4
   1e970:	str	r3, [r4, #220]	; 0xdc
   1e974:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1e978:	ldr	r1, [pc, #1644]	; 1efec <__flatcc_fb_gen_c_json_parser@@Base+0xfb0>
   1e97c:	mov	r0, r4
   1e980:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1e984:	ldr	r5, [r5]
   1e988:	b	1e3d8 <__flatcc_fb_gen_c_json_parser@@Base+0x39c>
   1e98c:	mov	r2, #28
   1e990:	mov	r1, #0
   1e994:	add	r0, sp, #16
   1e998:	bl	13fec <memset@plt>
   1e99c:	ldrh	r3, [r5, #8]
   1e9a0:	cmp	r3, #0
   1e9a4:	ldrne	r3, [pc, #1884]	; 1f108 <__flatcc_fb_gen_c_json_parser@@Base+0x10cc>
   1e9a8:	ldrne	r2, [pc, #1884]	; 1f10c <__flatcc_fb_gen_c_json_parser@@Base+0x10d0>
   1e9ac:	ldrne	r1, [pc, #1668]	; 1f038 <__flatcc_fb_gen_c_json_parser@@Base+0xffc>
   1e9b0:	ldrne	r0, [pc, #1880]	; 1f110 <__flatcc_fb_gen_c_json_parser@@Base+0x10d4>
   1e9b4:	bne	1e1b4 <__flatcc_fb_gen_c_json_parser@@Base+0x178>
   1e9b8:	add	r1, sp, #12
   1e9bc:	ldr	r0, [r5, #20]
   1e9c0:	bl	1d0f4 <__flatcc_fb_gen_c_verifier@@Base+0x1ec4>
   1e9c4:	ldr	ip, [sp, #12]
   1e9c8:	cmp	r0, #0
   1e9cc:	str	r0, [sp, #16]
   1e9d0:	bne	1ea08 <__flatcc_fb_gen_c_json_parser@@Base+0x9cc>
   1e9d4:	cmp	ip, #0
   1e9d8:	ble	1ea08 <__flatcc_fb_gen_c_json_parser@@Base+0x9cc>
   1e9dc:	ldr	r0, [pc, #1708]	; 1f090 <__flatcc_fb_gen_c_json_parser@@Base+0x1054>
   1e9e0:	ldr	r3, [pc, #1708]	; 1f094 <__flatcc_fb_gen_c_json_parser@@Base+0x1058>
   1e9e4:	ldr	r2, [pc, #1612]	; 1f038 <__flatcc_fb_gen_c_json_parser@@Base+0xffc>
   1e9e8:	str	r3, [sp]
   1e9ec:	ldr	r1, [pc, #1700]	; 1f098 <__flatcc_fb_gen_c_json_parser@@Base+0x105c>
   1e9f0:	mov	r3, #1392	; 0x570
   1e9f4:	ldr	r0, [r0]
   1e9f8:	bl	13fd4 <fprintf@plt>
   1e9fc:	ldr	r3, [pc, #1796]	; 1f108 <__flatcc_fb_gen_c_json_parser@@Base+0x10cc>
   1ea00:	mov	r2, #1392	; 0x570
   1ea04:	b	1e600 <__flatcc_fb_gen_c_json_parser@@Base+0x5c4>
   1ea08:	ldr	r2, [pc, #1684]	; 1f0a4 <__flatcc_fb_gen_c_json_parser@@Base+0x1068>
   1ea0c:	mov	r3, #0
   1ea10:	str	r2, [sp, #24]
   1ea14:	add	r0, r0, #12
   1ea18:	mov	r2, r3
   1ea1c:	mov	r1, r3
   1ea20:	mov	lr, #1
   1ea24:	str	r5, [sp, #28]
   1ea28:	str	r3, [sp, #32]
   1ea2c:	str	r7, [sp, #20]
   1ea30:	str	r3, [sp, #36]	; 0x24
   1ea34:	cmp	r1, ip
   1ea38:	add	r0, r0, #16
   1ea3c:	blt	1ebb8 <__flatcc_fb_gen_c_json_parser@@Base+0xb7c>
   1ea40:	cmp	r3, #0
   1ea44:	strne	r2, [sp, #36]	; 0x24
   1ea48:	mov	r1, #0
   1ea4c:	mov	r2, #220	; 0xdc
   1ea50:	add	r0, sp, #44	; 0x2c
   1ea54:	bl	13fec <memset@plt>
   1ea58:	add	r1, sp, #44	; 0x2c
   1ea5c:	mov	r0, r5
   1ea60:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x7f8>
   1ea64:	add	r2, sp, #44	; 0x2c
   1ea68:	ldr	r1, [pc, #1700]	; 1f114 <__flatcc_fb_gen_c_json_parser@@Base+0x10d8>
   1ea6c:	mov	r0, r4
   1ea70:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1ea74:	ldr	r1, [pc, #1880]	; 1f1d4 <__flatcc_fb_gen_c_json_parser@@Base+0x1198>
   1ea78:	mov	r0, r4
   1ea7c:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1ea80:	ldr	r3, [r4, #220]	; 0xdc
   1ea84:	ldr	r1, [pc, #1568]	; 1f0ac <__flatcc_fb_gen_c_json_parser@@Base+0x1070>
   1ea88:	add	r3, r3, #1
   1ea8c:	str	r3, [r4, #220]	; 0xdc
   1ea90:	mov	r0, r4
   1ea94:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1ea98:	ldr	r3, [sp, #12]
   1ea9c:	cmp	r3, #0
   1eaa0:	ble	1ead4 <__flatcc_fb_gen_c_json_parser@@Base+0xa98>
   1eaa4:	ldr	r1, [pc, #1544]	; 1f0b4 <__flatcc_fb_gen_c_json_parser@@Base+0x1078>
   1eaa8:	mov	r0, r4
   1eaac:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1eab0:	ldr	r1, [pc, #1632]	; 1f118 <__flatcc_fb_gen_c_json_parser@@Base+0x10dc>
   1eab4:	mov	r0, r4
   1eab8:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1eabc:	ldr	r1, [pc, #1744]	; 1f194 <__flatcc_fb_gen_c_json_parser@@Base+0x1158>
   1eac0:	mov	r0, r4
   1eac4:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1eac8:	ldr	r1, [pc, #1736]	; 1f198 <__flatcc_fb_gen_c_json_parser@@Base+0x115c>
   1eacc:	mov	r0, r4
   1ead0:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1ead4:	ldr	r3, [sp, #36]	; 0x24
   1ead8:	cmp	r3, #0
   1eadc:	beq	1eaec <__flatcc_fb_gen_c_json_parser@@Base+0xab0>
   1eae0:	ldr	r1, [pc, #1588]	; 1f11c <__flatcc_fb_gen_c_json_parser@@Base+0x10e0>
   1eae4:	mov	r0, r4
   1eae8:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1eaec:	ldr	r1, [pc, #1272]	; 1efec <__flatcc_fb_gen_c_json_parser@@Base+0xfb0>
   1eaf0:	mov	r0, r4
   1eaf4:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1eaf8:	ldr	r1, [pc, #1516]	; 1f0ec <__flatcc_fb_gen_c_json_parser@@Base+0x10b0>
   1eafc:	mov	r0, r4
   1eb00:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1eb04:	ldrd	r2, [r5, #96]	; 0x60
   1eb08:	ldr	r1, [pc, #1552]	; 1f120 <__flatcc_fb_gen_c_json_parser@@Base+0x10e4>
   1eb0c:	mov	r0, r4
   1eb10:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1eb14:	ldr	r2, [sp, #36]	; 0x24
   1eb18:	cmp	r2, #0
   1eb1c:	beq	1eb30 <__flatcc_fb_gen_c_json_parser@@Base+0xaf4>
   1eb20:	asr	r3, r2, #31
   1eb24:	ldr	r1, [pc, #1528]	; 1f124 <__flatcc_fb_gen_c_json_parser@@Base+0x10e8>
   1eb28:	mov	r0, r4
   1eb2c:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1eb30:	ldr	r1, [pc, #1408]	; 1f0b8 <__flatcc_fb_gen_c_json_parser@@Base+0x107c>
   1eb34:	mov	r0, r4
   1eb38:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1eb3c:	ldr	r1, [pc, #1400]	; 1f0bc <__flatcc_fb_gen_c_json_parser@@Base+0x1080>
   1eb40:	mov	r0, r4
   1eb44:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1eb48:	ldr	r3, [r4, #220]	; 0xdc
   1eb4c:	ldr	r1, [pc, #1404]	; 1f0d0 <__flatcc_fb_gen_c_json_parser@@Base+0x1094>
   1eb50:	add	r3, r3, #1
   1eb54:	str	r3, [r4, #220]	; 0xdc
   1eb58:	mov	r0, r4
   1eb5c:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1eb60:	ldr	r3, [sp, #12]
   1eb64:	cmp	r3, #0
   1eb68:	ble	1ebd0 <__flatcc_fb_gen_c_json_parser@@Base+0xb94>
   1eb6c:	ldr	r1, [pc, #1576]	; 1f19c <__flatcc_fb_gen_c_json_parser@@Base+0x1160>
   1eb70:	mov	r0, r4
   1eb74:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1eb78:	ldr	r3, [sp, #12]
   1eb7c:	mov	r2, #0
   1eb80:	str	r2, [sp]
   1eb84:	sub	r3, r3, #1
   1eb88:	add	r1, sp, #16
   1eb8c:	mov	r0, r4
   1eb90:	bl	1d3a4 <__flatcc_fb_gen_c_verifier@@Base+0x2174>
   1eb94:	ldr	r1, [pc, #1420]	; 1f128 <__flatcc_fb_gen_c_json_parser@@Base+0x10ec>
   1eb98:	mov	r0, r4
   1eb9c:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1eba0:	ldr	r3, [r4, #220]	; 0xdc
   1eba4:	cmp	r3, #0
   1eba8:	bne	1ebec <__flatcc_fb_gen_c_json_parser@@Base+0xbb0>
   1ebac:	ldr	r3, [pc, #1364]	; 1f108 <__flatcc_fb_gen_c_json_parser@@Base+0x10cc>
   1ebb0:	ldr	r2, [pc, #1396]	; 1f12c <__flatcc_fb_gen_c_json_parser@@Base+0x10f0>
   1ebb4:	b	1e1ac <__flatcc_fb_gen_c_json_parser@@Base+0x170>
   1ebb8:	ldr	r3, [r0, #-16]
   1ebbc:	add	r1, r1, #1
   1ebc0:	cmp	r3, #0
   1ebc4:	addne	r2, r2, #1
   1ebc8:	mov	r3, lr
   1ebcc:	b	1ea34 <__flatcc_fb_gen_c_json_parser@@Base+0x9f8>
   1ebd0:	mov	r0, r4
   1ebd4:	ldr	r1, [pc, #1364]	; 1f130 <__flatcc_fb_gen_c_json_parser@@Base+0x10f4>
   1ebd8:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1ebdc:	ldr	r1, [pc, #1248]	; 1f0c4 <__flatcc_fb_gen_c_json_parser@@Base+0x1088>
   1ebe0:	mov	r0, r4
   1ebe4:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1ebe8:	b	1eb94 <__flatcc_fb_gen_c_json_parser@@Base+0xb58>
   1ebec:	sub	r3, r3, #1
   1ebf0:	str	r3, [r4, #220]	; 0xdc
   1ebf4:	ldr	r1, [pc, #1560]	; 1f214 <__flatcc_fb_gen_c_json_parser@@Base+0x11d8>
   1ebf8:	mov	r0, r4
   1ebfc:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1ec00:	ldr	r1, [pc, #1324]	; 1f134 <__flatcc_fb_gen_c_json_parser@@Base+0x10f8>
   1ec04:	mov	r0, r4
   1ec08:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1ec0c:	mov	r6, #0
   1ec10:	ldr	r9, [pc, #1312]	; 1f138 <__flatcc_fb_gen_c_json_parser@@Base+0x10fc>
   1ec14:	ldr	sl, [pc, #1312]	; 1f13c <__flatcc_fb_gen_c_json_parser@@Base+0x1100>
   1ec18:	mov	r8, #1
   1ec1c:	mov	fp, r6
   1ec20:	ldr	r3, [sp, #12]
   1ec24:	cmp	r6, r3
   1ec28:	blt	1ec4c <__flatcc_fb_gen_c_json_parser@@Base+0xc10>
   1ec2c:	cmp	r8, #0
   1ec30:	bne	1ed28 <__flatcc_fb_gen_c_json_parser@@Base+0xcec>
   1ec34:	ldr	r3, [r4, #220]	; 0xdc
   1ec38:	cmp	r3, #0
   1ec3c:	bne	1ecc8 <__flatcc_fb_gen_c_json_parser@@Base+0xc8c>
   1ec40:	ldr	r3, [pc, #1216]	; 1f108 <__flatcc_fb_gen_c_json_parser@@Base+0x10cc>
   1ec44:	ldr	r2, [pc, #1268]	; 1f140 <__flatcc_fb_gen_c_json_parser@@Base+0x1104>
   1ec48:	b	1e1ac <__flatcc_fb_gen_c_json_parser@@Base+0x170>
   1ec4c:	ldr	r3, [sp, #16]
   1ec50:	add	r3, r3, r6, lsl #4
   1ec54:	ldr	r2, [r3, #8]
   1ec58:	ldrh	r1, [r2, #72]	; 0x48
   1ec5c:	tst	r1, #4
   1ec60:	bne	1eca8 <__flatcc_fb_gen_c_json_parser@@Base+0xc6c>
   1ec64:	mov	r0, r2
   1ec68:	bl	1b5b0 <__flatcc_fb_gen_c_verifier@@Base+0x380>
   1ec6c:	tst	r1, #256	; 0x100
   1ec70:	beq	1eca8 <__flatcc_fb_gen_c_json_parser@@Base+0xc6c>
   1ec74:	cmp	r8, #0
   1ec78:	asr	r1, r0, #31
   1ec7c:	ldrd	r2, [r2, #96]	; 0x60
   1ec80:	beq	1ecb0 <__flatcc_fb_gen_c_json_parser@@Base+0xc74>
   1ec84:	subs	r2, r2, r0
   1ec88:	sbc	r3, r3, r1
   1ec8c:	mov	r0, r4
   1ec90:	mov	r1, sl
   1ec94:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1ec98:	ldr	r3, [r4, #220]	; 0xdc
   1ec9c:	mov	r8, fp
   1eca0:	add	r3, r3, #1
   1eca4:	str	r3, [r4, #220]	; 0xdc
   1eca8:	add	r6, r6, #1
   1ecac:	b	1ec20 <__flatcc_fb_gen_c_json_parser@@Base+0xbe4>
   1ecb0:	subs	r2, r2, r0
   1ecb4:	sbc	r3, r3, r1
   1ecb8:	mov	r0, r4
   1ecbc:	mov	r1, r9
   1ecc0:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1ecc4:	b	1eca8 <__flatcc_fb_gen_c_json_parser@@Base+0xc6c>
   1ecc8:	sub	r3, r3, #1
   1eccc:	str	r3, [r4, #220]	; 0xdc
   1ecd0:	ldr	r1, [pc, #1132]	; 1f144 <__flatcc_fb_gen_c_json_parser@@Base+0x1108>
   1ecd4:	mov	r0, r4
   1ecd8:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1ecdc:	ldr	r3, [r4, #220]	; 0xdc
   1ece0:	ldr	r1, [pc, #1120]	; 1f148 <__flatcc_fb_gen_c_json_parser@@Base+0x110c>
   1ece4:	add	r3, r3, #1
   1ece8:	str	r3, [r4, #220]	; 0xdc
   1ecec:	mov	r0, r4
   1ecf0:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1ecf4:	ldr	r1, [pc, #1104]	; 1f14c <__flatcc_fb_gen_c_json_parser@@Base+0x1110>
   1ecf8:	mov	r0, r4
   1ecfc:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1ed00:	ldr	r3, [r4, #220]	; 0xdc
   1ed04:	cmp	r3, #0
   1ed08:	ldreq	r3, [pc, #1016]	; 1f108 <__flatcc_fb_gen_c_json_parser@@Base+0x10cc>
   1ed0c:	ldreq	r2, [pc, #1084]	; 1f150 <__flatcc_fb_gen_c_json_parser@@Base+0x1114>
   1ed10:	beq	1e1ac <__flatcc_fb_gen_c_json_parser@@Base+0x170>
   1ed14:	sub	r3, r3, #1
   1ed18:	str	r3, [r4, #220]	; 0xdc
   1ed1c:	ldr	r1, [pc, #1264]	; 1f214 <__flatcc_fb_gen_c_json_parser@@Base+0x11d8>
   1ed20:	mov	r0, r4
   1ed24:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1ed28:	ldr	r3, [sp, #36]	; 0x24
   1ed2c:	cmp	r3, #0
   1ed30:	beq	1ed40 <__flatcc_fb_gen_c_json_parser@@Base+0xd04>
   1ed34:	ldr	r1, [pc, #1048]	; 1f154 <__flatcc_fb_gen_c_json_parser@@Base+0x1118>
   1ed38:	mov	r0, r4
   1ed3c:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1ed40:	ldr	r1, [pc, #1040]	; 1f158 <__flatcc_fb_gen_c_json_parser@@Base+0x111c>
   1ed44:	mov	r0, r4
   1ed48:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1ed4c:	ldr	r1, [pc, #1100]	; 1f1a0 <__flatcc_fb_gen_c_json_parser@@Base+0x1164>
   1ed50:	mov	r0, r4
   1ed54:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1ed58:	ldr	r3, [r4, #220]	; 0xdc
   1ed5c:	ldr	r1, [pc, #880]	; 1f0d4 <__flatcc_fb_gen_c_json_parser@@Base+0x1098>
   1ed60:	str	r3, [r4, #228]	; 0xe4
   1ed64:	mov	r3, #0
   1ed68:	str	r3, [r4, #220]	; 0xdc
   1ed6c:	mov	r0, r4
   1ed70:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1ed74:	ldr	r3, [r4, #228]	; 0xe4
   1ed78:	ldr	r1, [pc, #856]	; 1f0d8 <__flatcc_fb_gen_c_json_parser@@Base+0x109c>
   1ed7c:	str	r3, [r4, #220]	; 0xdc
   1ed80:	mov	r0, r4
   1ed84:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1ed88:	ldr	r3, [r4, #220]	; 0xdc
   1ed8c:	cmp	r3, #0
   1ed90:	ldreq	r3, [pc, #880]	; 1f108 <__flatcc_fb_gen_c_json_parser@@Base+0x10cc>
   1ed94:	ldreq	r2, [pc, #960]	; 1f15c <__flatcc_fb_gen_c_json_parser@@Base+0x1120>
   1ed98:	beq	1e1ac <__flatcc_fb_gen_c_json_parser@@Base+0x170>
   1ed9c:	sub	r3, r3, #1
   1eda0:	str	r3, [r4, #220]	; 0xdc
   1eda4:	ldr	r1, [pc, #1128]	; 1f214 <__flatcc_fb_gen_c_json_parser@@Base+0x11d8>
   1eda8:	mov	r0, r4
   1edac:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1edb0:	ldr	r1, [pc, #564]	; 1efec <__flatcc_fb_gen_c_json_parser@@Base+0xfb0>
   1edb4:	mov	r0, r4
   1edb8:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1edbc:	add	r2, sp, #44	; 0x2c
   1edc0:	ldr	r1, [pc, #824]	; 1f100 <__flatcc_fb_gen_c_json_parser@@Base+0x10c4>
   1edc4:	mov	r0, r4
   1edc8:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1edcc:	ldr	r1, [pc, #1024]	; 1f1d4 <__flatcc_fb_gen_c_json_parser@@Base+0x1198>
   1edd0:	mov	r0, r4
   1edd4:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1edd8:	ldr	r3, [r4, #220]	; 0xdc
   1eddc:	add	r2, sp, #44	; 0x2c
   1ede0:	add	r3, r3, #1
   1ede4:	str	r3, [r4, #220]	; 0xdc
   1ede8:	ldr	r1, [pc, #880]	; 1f160 <__flatcc_fb_gen_c_json_parser@@Base+0x1124>
   1edec:	mov	r0, r4
   1edf0:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1edf4:	ldr	r3, [r4, #220]	; 0xdc
   1edf8:	cmp	r3, #0
   1edfc:	ldreq	r3, [pc, #772]	; 1f108 <__flatcc_fb_gen_c_json_parser@@Base+0x10cc>
   1ee00:	ldreq	r2, [pc, #860]	; 1f164 <__flatcc_fb_gen_c_json_parser@@Base+0x1128>
   1ee04:	beq	1e1ac <__flatcc_fb_gen_c_json_parser@@Base+0x170>
   1ee08:	sub	r3, r3, #1
   1ee0c:	str	r3, [r4, #220]	; 0xdc
   1ee10:	mov	r0, r4
   1ee14:	ldr	r1, [pc, #1016]	; 1f214 <__flatcc_fb_gen_c_json_parser@@Base+0x11d8>
   1ee18:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1ee1c:	mov	r0, r4
   1ee20:	ldr	r1, [pc, #452]	; 1efec <__flatcc_fb_gen_c_json_parser@@Base+0xfb0>
   1ee24:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1ee28:	ldr	r0, [sp, #16]
   1ee2c:	bl	1cc9c <__flatcc_fb_gen_c_verifier@@Base+0x1a6c>
   1ee30:	b	1e984 <__flatcc_fb_gen_c_json_parser@@Base+0x948>
   1ee34:	add	r2, sp, #44	; 0x2c
   1ee38:	mov	r0, r8
   1ee3c:	ldr	r1, [pc, #804]	; 1f168 <__flatcc_fb_gen_c_json_parser@@Base+0x112c>
   1ee40:	bl	235f4 <fb_scope_table_visit@@Base>
   1ee44:	ldr	r1, [sp, #48]	; 0x30
   1ee48:	ldr	r0, [sp, #60]	; 0x3c
   1ee4c:	bl	1cc30 <__flatcc_fb_gen_c_verifier@@Base+0x1a00>
   1ee50:	ldr	r1, [sp, #52]	; 0x34
   1ee54:	ldr	r0, [sp, #64]	; 0x40
   1ee58:	bl	1cc30 <__flatcc_fb_gen_c_verifier@@Base+0x1a00>
   1ee5c:	ldr	r8, [sp, #52]	; 0x34
   1ee60:	cmp	r8, #0
   1ee64:	moveq	r7, r5
   1ee68:	beq	1ee88 <__flatcc_fb_gen_c_json_parser@@Base+0xe4c>
   1ee6c:	lsl	r0, r8, #4
   1ee70:	bl	13f8c <malloc@plt>
   1ee74:	subs	r7, r0, #0
   1ee78:	movne	r6, r7
   1ee7c:	ldrne	r9, [sp, #64]	; 0x40
   1ee80:	movne	sl, r5
   1ee84:	bne	1eef4 <__flatcc_fb_gen_c_json_parser@@Base+0xeb8>
   1ee88:	cmp	r8, #0
   1ee8c:	str	r7, [sp, #16]
   1ee90:	clz	r7, r7
   1ee94:	lsr	r7, r7, #5
   1ee98:	movle	r7, #0
   1ee9c:	cmp	r7, #0
   1eea0:	beq	1ef20 <__flatcc_fb_gen_c_json_parser@@Base+0xee4>
   1eea4:	add	r0, sp, #44	; 0x2c
   1eea8:	bl	1cca8 <__flatcc_fb_gen_c_verifier@@Base+0x1a78>
   1eeac:	ldr	r0, [pc, #476]	; 1f090 <__flatcc_fb_gen_c_json_parser@@Base+0x1054>
   1eeb0:	ldr	r3, [pc, #476]	; 1f094 <__flatcc_fb_gen_c_json_parser@@Base+0x1058>
   1eeb4:	ldr	r2, [pc, #380]	; 1f038 <__flatcc_fb_gen_c_json_parser@@Base+0xffc>
   1eeb8:	str	r3, [sp]
   1eebc:	ldr	r1, [pc, #468]	; 1f098 <__flatcc_fb_gen_c_json_parser@@Base+0x105c>
   1eec0:	ldr	r3, [pc, #676]	; 1f16c <__flatcc_fb_gen_c_json_parser@@Base+0x1130>
   1eec4:	ldr	r0, [r0]
   1eec8:	bl	13fd4 <fprintf@plt>
   1eecc:	ldr	r3, [pc, #720]	; 1f1a4 <__flatcc_fb_gen_c_json_parser@@Base+0x1168>
   1eed0:	ldr	r2, [pc, #660]	; 1f16c <__flatcc_fb_gen_c_json_parser@@Base+0x1130>
   1eed4:	b	1e600 <__flatcc_fb_gen_c_json_parser@@Base+0x5c4>
   1eed8:	ldr	r0, [r9, #-4]
   1eedc:	add	r5, r5, #1
   1eee0:	str	r0, [r6, #-16]
   1eee4:	bl	13fc8 <strlen@plt>
   1eee8:	ldr	r3, [r9, #-8]
   1eeec:	stmdb	r6, {r3, sl}
   1eef0:	str	r0, [r6, #-12]
   1eef4:	cmp	r8, r5
   1eef8:	add	r9, r9, #8
   1eefc:	add	r6, r6, #16
   1ef00:	bgt	1eed8 <__flatcc_fb_gen_c_json_parser@@Base+0xe9c>
   1ef04:	mov	r1, r8
   1ef08:	ldr	r3, [pc, #608]	; 1f170 <__flatcc_fb_gen_c_json_parser@@Base+0x1134>
   1ef0c:	mov	r2, #16
   1ef10:	mov	r0, r7
   1ef14:	bl	14058 <qsort@plt>
   1ef18:	ldr	r8, [sp, #52]	; 0x34
   1ef1c:	b	1ee88 <__flatcc_fb_gen_c_json_parser@@Base+0xe4c>
   1ef20:	mov	r3, #4
   1ef24:	str	r3, [sp, #32]
   1ef28:	ldr	r3, [pc, #580]	; 1f174 <__flatcc_fb_gen_c_json_parser@@Base+0x1138>
   1ef2c:	ldr	r1, [pc, #284]	; 1f050 <__flatcc_fb_gen_c_json_parser@@Base+0x1014>
   1ef30:	str	r3, [sp, #20]
   1ef34:	ldr	r3, [pc, #572]	; 1f178 <__flatcc_fb_gen_c_json_parser@@Base+0x113c>
   1ef38:	mov	r0, r4
   1ef3c:	str	r3, [sp, #24]
   1ef40:	ldr	r3, [r4, #208]	; 0xd0
   1ef44:	str	r7, [sp, #28]
   1ef48:	ldr	r2, [r3, #160]	; 0xa0
   1ef4c:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1ef50:	ldr	r3, [r4, #220]	; 0xdc
   1ef54:	ldr	r1, [pc, #544]	; 1f17c <__flatcc_fb_gen_c_json_parser@@Base+0x1140>
   1ef58:	add	r3, r3, #2
   1ef5c:	str	r3, [r4, #220]	; 0xdc
   1ef60:	mov	r0, r4
   1ef64:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1ef68:	ldr	r3, [r4, #220]	; 0xdc
   1ef6c:	cmp	r3, #0
   1ef70:	bne	1ef80 <__flatcc_fb_gen_c_json_parser@@Base+0xf44>
   1ef74:	ldr	r3, [pc, #552]	; 1f1a4 <__flatcc_fb_gen_c_json_parser@@Base+0x1168>
   1ef78:	ldr	r2, [pc, #512]	; 1f180 <__flatcc_fb_gen_c_json_parser@@Base+0x1144>
   1ef7c:	b	1e1ac <__flatcc_fb_gen_c_json_parser@@Base+0x170>
   1ef80:	cmp	r3, #1
   1ef84:	streq	r7, [r4, #220]	; 0xdc
   1ef88:	beq	1ef74 <__flatcc_fb_gen_c_json_parser@@Base+0xf38>
   1ef8c:	sub	r3, r3, #2
   1ef90:	str	r3, [r4, #220]	; 0xdc
   1ef94:	ldr	r1, [pc, #568]	; 1f1d4 <__flatcc_fb_gen_c_json_parser@@Base+0x1198>
   1ef98:	mov	r0, r4
   1ef9c:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1efa0:	ldr	r3, [r4, #220]	; 0xdc
   1efa4:	cmp	r8, #0
   1efa8:	add	r3, r3, #1
   1efac:	str	r3, [r4, #220]	; 0xdc
   1efb0:	bne	1f21c <__flatcc_fb_gen_c_json_parser@@Base+0x11e0>
   1efb4:	ldr	r1, [pc, #456]	; 1f184 <__flatcc_fb_gen_c_json_parser@@Base+0x1148>
   1efb8:	mov	r0, r4
   1efbc:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1efc0:	ldr	r1, [pc, #448]	; 1f188 <__flatcc_fb_gen_c_json_parser@@Base+0x114c>
   1efc4:	mov	r0, r4
   1efc8:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1efcc:	ldr	r3, [r4, #220]	; 0xdc
   1efd0:	cmp	r3, #0
   1efd4:	bne	1f290 <__flatcc_fb_gen_c_json_parser@@Base+0x1254>
   1efd8:	ldr	r3, [pc, #452]	; 1f1a4 <__flatcc_fb_gen_c_json_parser@@Base+0x1168>
   1efdc:	ldr	r2, [pc, #424]	; 1f18c <__flatcc_fb_gen_c_json_parser@@Base+0x1150>
   1efe0:	b	1e1ac <__flatcc_fb_gen_c_json_parser@@Base+0x170>
   1efe4:	andeq	r4, r4, r2, lsl #5
   1efe8:	muleq	r4, fp, r2
   1efec:	andeq	r1, r3, r1, lsr #28
   1eff0:			; <UNDEFINED> instruction: 0x000442b4
   1eff4:	andeq	r4, r4, r3, lsl #6
   1eff8:	andeq	r4, r4, r5, lsr #5
   1effc:	andeq	r0, r3, r1, asr #14
   1f000:	ldrdeq	r1, [r3], -r3
   1f004:	andeq	r4, r4, sl, lsr #6
   1f008:	andeq	r4, r4, sp, lsr #6
   1f00c:	andeq	r4, r4, r3, lsl #7
   1f010:	andeq	r4, r4, r6, lsl #7
   1f014:	andeq	r4, r4, sl, asr #7
   1f018:	andeq	r4, r4, r0, lsl #8
   1f01c:	andeq	r4, r4, r8, lsr #8
   1f020:	andeq	r4, r4, r0, ror r4
   1f024:	andeq	r2, r4, fp, lsr #29
   1f028:	andeq	r4, r4, lr, lsr #9
   1f02c:	strdeq	r4, [r4], -r7
   1f030:	andeq	r2, r4, ip, ror sp
   1f034:			; <UNDEFINED> instruction: 0x000006b4
   1f038:			; <UNDEFINED> instruction: 0x00042ebf
   1f03c:	andeq	r2, r4, r4, lsl pc
   1f040:	andeq	r4, r4, r3, asr #3
   1f044:			; <UNDEFINED> instruction: 0x00042fb1
   1f048:	andeq	r4, r4, sl, ror #13
   1f04c:	ldrdeq	fp, [r1], -ip
   1f050:	andeq	r4, r4, sp, ror #14
   1f054:	ldrdeq	r0, [r0], -fp
   1f058:	andeq	r4, r4, r3, lsr #10
   1f05c:			; <UNDEFINED> instruction: 0x000445b2
   1f060:	andeq	r0, r0, r3, asr #13
   1f064:	andeq	r4, r4, r6, ror #11
   1f068:	andeq	r4, r4, r6, ror #12
   1f06c:	ldrdeq	r0, [r0], -r3
   1f070:	andeq	sp, r1, r8, asr #32
   1f074:			; <UNDEFINED> instruction: 0x0001dab8
   1f078:	andeq	ip, r1, r8, lsl ip
   1f07c:			; <UNDEFINED> instruction: 0x00037bbd
   1f080:	andeq	r5, r4, r9, asr #2
   1f084:	muleq	r4, r7, sp
   1f088:	andeq	r0, r0, r5, lsl r5
   1f08c:	ldrdeq	r0, [r3], -r1
   1f090:	strheq	fp, [r5], -r0
   1f094:	andeq	r4, r4, fp, asr #1
   1f098:	andeq	r0, r3, lr, ror #20
   1f09c:	andeq	r0, r0, r7, lsl r5
   1f0a0:	andeq	r9, r3, sp, asr #1
   1f0a4:	andeq	fp, r1, ip, lsr #13
   1f0a8:	ldrdeq	r4, [r4], -r8
   1f0ac:	andeq	r4, r4, r7, asr r8
   1f0b0:	andeq	r4, r4, r1, ror #16
   1f0b4:	andeq	r4, r4, fp, ror r8
   1f0b8:	andeq	r4, r4, r7, lsl #17
   1f0bc:	andeq	r3, r4, pc, ror #10
   1f0c0:	andeq	r4, r4, r4, asr #17
   1f0c4:	andeq	r2, r4, sl, lsr #28
   1f0c8:	andeq	r4, r4, lr, lsl #18
   1f0cc:	andeq	r0, r0, r6, lsr r5
   1f0d0:	ldrdeq	r4, [r4], -r8
   1f0d4:	andeq	r4, r4, sl, asr #18
   1f0d8:	andeq	r3, r4, r0, lsl #6
   1f0dc:	andeq	r0, r0, pc, lsr r5
   1f0e0:			; <UNDEFINED> instruction: 0x00042db0
   1f0e4:	andeq	r0, r0, r9, asr #10
   1f0e8:	andeq	r4, r4, r2, asr r9
   1f0ec:	andeq	r3, r4, r4, ror r0
   1f0f0:	ldrdeq	r4, [r4], -r5
   1f0f4:	andeq	r3, r4, r9, lsl r9
   1f0f8:	andeq	r4, r4, r1, lsr #20
   1f0fc:	andeq	r0, r0, sl, asr r5
   1f100:	andeq	r4, r4, r2, ror sl
   1f104:	andeq	r4, r4, r6, lsl #22
   1f108:	andeq	r2, r4, r2, asr #27
   1f10c:	andeq	r0, r0, lr, ror #10
   1f110:	andeq	r0, r3, r1, lsl #17
   1f114:	andeq	r4, r4, r7, ror #22
   1f118:	andeq	r4, r4, r9, ror #23
   1f11c:	andeq	r4, r4, sl, lsl #24
   1f120:	andeq	r4, r4, fp, lsl ip
   1f124:	andeq	r4, r4, r8, asr ip
   1f128:	andeq	r4, r4, lr, asr #25
   1f12c:	muleq	r0, lr, r5
   1f130:			; <UNDEFINED> instruction: 0x00044cb3
   1f134:	andeq	r4, r4, r9, lsl #26
   1f138:	andeq	r4, r4, pc, asr sp
   1f13c:	andeq	r4, r4, r6, lsr #26
   1f140:			; <UNDEFINED> instruction: 0x000005b2
   1f144:	andeq	r3, r4, r6, lsr r8
   1f148:	muleq	r4, r8, sp
   1f14c:	andeq	r3, r4, r9, asr r6
   1f150:			; <UNDEFINED> instruction: 0x000005b5
   1f154:	andeq	r4, r4, lr, ror #27
   1f158:	andeq	r4, r4, r1, lsr lr
   1f15c:	andeq	r0, r0, r1, asr #11
   1f160:	andeq	r4, r4, r3, ror lr
   1f164:	andeq	r0, r0, r7, asr #11
   1f168:	andeq	ip, r1, r0, lsl #24
   1f16c:	andeq	r0, r0, sl, lsr #9
   1f170:	andeq	ip, r1, ip, ror #24
   1f174:	andeq	ip, r1, r4, asr pc
   1f178:	muleq	r1, ip, r6
   1f17c:	andeq	r4, r4, r7, lsl #2
   1f180:			; <UNDEFINED> instruction: 0x000004b5
   1f184:	ldrdeq	r4, [r4], -r2
   1f188:	andeq	r4, r4, fp, ror #2
   1f18c:			; <UNDEFINED> instruction: 0x000004ba
   1f190:	andeq	r4, r4, r8, lsl #3
   1f194:	andeq	r4, r4, r5, lsr #3
   1f198:			; <UNDEFINED> instruction: 0x000441b7
   1f19c:	strdeq	r3, [r4], -fp
   1f1a0:	andeq	r3, r4, r4, ror #5
   1f1a4:	ldrdeq	r2, [r4], -r3
   1f1a8:	andeq	r0, r0, r3, asr #9
   1f1ac:	andeq	r0, r0, sl, asr #12
   1f1b0:	andeq	r4, r4, r6, lsr pc
   1f1b4:	andeq	r4, r4, lr, ror #30
   1f1b8:	andeq	r5, r4, r9, lsr r0
   1f1bc:	andeq	r0, r0, sl, asr r6
   1f1c0:	andeq	r2, r4, fp, ror #27
   1f1c4:	andeq	r0, r0, lr, asr r6
   1f1c8:	andeq	r4, r4, lr, lsr #9
   1f1cc:	andeq	r4, r4, fp, lsl #30
   1f1d0:	andeq	r0, r0, sp, ror #12
   1f1d4:	strdeq	r5, [r4], -r6
   1f1d8:	ldrdeq	r5, [r4], -sl
   1f1dc:	andeq	r4, r4, r3, asr pc
   1f1e0:	strdeq	r5, [r4], -r5	; <UNPREDICTABLE>
   1f1e4:	andeq	r4, r4, r9, lsl #31
   1f1e8:	andeq	r4, r4, r4, asr #31
   1f1ec:	andeq	r5, r4, lr, lsl #2
   1f1f0:	andeq	r5, r4, sp, rrx
   1f1f4:	andeq	r5, r4, pc, ror r0
   1f1f8:	andeq	r0, r0, sp, ror r6
   1f1fc:	andeq	r5, r4, r1
   1f200:	muleq	r4, r2, r0
   1f204:	andeq	r5, r4, r6, asr #1
   1f208:	andeq	r3, r4, sp, asr #7
   1f20c:	andeq	r2, r4, r1, lsl #28
   1f210:	andeq	r0, r0, r1, lsl #13
   1f214:	andeq	r7, r3, r7, lsl r0
   1f218:	andeq	r1, r3, r1, lsr #28
   1f21c:	ldr	r1, [pc, #-148]	; 1f190 <__flatcc_fb_gen_c_json_parser@@Base+0x1154>
   1f220:	mov	r0, r4
   1f224:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1f228:	ldr	r1, [pc, #-156]	; 1f194 <__flatcc_fb_gen_c_json_parser@@Base+0x1158>
   1f22c:	mov	r0, r4
   1f230:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1f234:	ldr	r1, [pc, #-164]	; 1f198 <__flatcc_fb_gen_c_json_parser@@Base+0x115c>
   1f238:	mov	r0, r4
   1f23c:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1f240:	ldr	r1, [pc, #-48]	; 1f218 <__flatcc_fb_gen_c_json_parser@@Base+0x11dc>
   1f244:	mov	r0, r4
   1f248:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1f24c:	ldr	r1, [pc, #-184]	; 1f19c <__flatcc_fb_gen_c_json_parser@@Base+0x1160>
   1f250:	mov	r0, r4
   1f254:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1f258:	sub	r3, r8, #1
   1f25c:	mov	r2, r7
   1f260:	add	r1, sp, #16
   1f264:	mov	r0, r4
   1f268:	str	r7, [sp]
   1f26c:	bl	1d3a4 <__flatcc_fb_gen_c_verifier@@Base+0x2174>
   1f270:	ldr	r1, [pc, #-216]	; 1f1a0 <__flatcc_fb_gen_c_json_parser@@Base+0x1164>
   1f274:	mov	r0, r4
   1f278:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1f27c:	ldr	r3, [r4, #220]	; 0xdc
   1f280:	cmp	r3, #0
   1f284:	ldreq	r3, [pc, #-232]	; 1f1a4 <__flatcc_fb_gen_c_json_parser@@Base+0x1168>
   1f288:	ldreq	r2, [pc, #-232]	; 1f1a8 <__flatcc_fb_gen_c_json_parser@@Base+0x116c>
   1f28c:	beq	1e1ac <__flatcc_fb_gen_c_json_parser@@Base+0x170>
   1f290:	sub	r3, r3, #1
   1f294:	str	r3, [r4, #220]	; 0xdc
   1f298:	mov	r0, r4
   1f29c:	ldr	r1, [pc, #-144]	; 1f214 <__flatcc_fb_gen_c_json_parser@@Base+0x11d8>
   1f2a0:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1f2a4:	mov	r0, r4
   1f2a8:	ldr	r1, [pc, #-152]	; 1f218 <__flatcc_fb_gen_c_json_parser@@Base+0x11dc>
   1f2ac:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1f2b0:	ldr	r0, [sp, #16]
   1f2b4:	bl	1cc9c <__flatcc_fb_gen_c_verifier@@Base+0x1a6c>
   1f2b8:	b	1e4d0 <__flatcc_fb_gen_c_json_parser@@Base+0x494>
   1f2bc:	mov	r2, #220	; 0xdc
   1f2c0:	mov	r1, r6
   1f2c4:	add	r0, sp, #44	; 0x2c
   1f2c8:	bl	13fec <memset@plt>
   1f2cc:	add	r1, sp, #44	; 0x2c
   1f2d0:	mov	r0, r5
   1f2d4:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x7f8>
   1f2d8:	ldr	r3, [r4, #208]	; 0xd0
   1f2dc:	ldr	r1, [pc, #-284]	; 1f1c8 <__flatcc_fb_gen_c_json_parser@@Base+0x118c>
   1f2e0:	mov	r0, r4
   1f2e4:	ldr	r2, [r3, #160]	; 0xa0
   1f2e8:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1f2ec:	ldr	r3, [r4, #220]	; 0xdc
   1f2f0:	ldr	r1, [pc, #-300]	; 1f1cc <__flatcc_fb_gen_c_json_parser@@Base+0x1190>
   1f2f4:	add	r3, r3, #2
   1f2f8:	str	r3, [r4, #220]	; 0xdc
   1f2fc:	mov	r0, r4
   1f300:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1f304:	ldr	r3, [r4, #220]	; 0xdc
   1f308:	cmp	r3, #0
   1f30c:	bne	1f31c <__flatcc_fb_gen_c_json_parser@@Base+0x12e0>
   1f310:	ldr	r3, [pc, #-344]	; 1f1c0 <__flatcc_fb_gen_c_json_parser@@Base+0x1184>
   1f314:	ldr	r2, [pc, #-368]	; 1f1ac <__flatcc_fb_gen_c_json_parser@@Base+0x1170>
   1f318:	b	1e1ac <__flatcc_fb_gen_c_json_parser@@Base+0x170>
   1f31c:	cmp	r3, #1
   1f320:	streq	r6, [r4, #220]	; 0xdc
   1f324:	beq	1f310 <__flatcc_fb_gen_c_json_parser@@Base+0x12d4>
   1f328:	sub	r3, r3, #2
   1f32c:	str	r3, [r4, #220]	; 0xdc
   1f330:	ldr	r1, [pc, #-356]	; 1f1d4 <__flatcc_fb_gen_c_json_parser@@Base+0x1198>
   1f334:	mov	r0, r4
   1f338:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1f33c:	ldr	r3, [r4, #220]	; 0xdc
   1f340:	ldr	r1, [pc, #-408]	; 1f1b0 <__flatcc_fb_gen_c_json_parser@@Base+0x1174>
   1f344:	add	r3, r3, #1
   1f348:	str	r3, [r4, #220]	; 0xdc
   1f34c:	mov	r0, r4
   1f350:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1f354:	ldr	r1, [pc, #-384]	; 1f1dc <__flatcc_fb_gen_c_json_parser@@Base+0x11a0>
   1f358:	mov	r0, r4
   1f35c:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1f360:	ldr	r1, [pc, #-336]	; 1f218 <__flatcc_fb_gen_c_json_parser@@Base+0x11dc>
   1f364:	mov	r0, r4
   1f368:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1f36c:	ldr	r1, [pc, #-448]	; 1f1b4 <__flatcc_fb_gen_c_json_parser@@Base+0x1178>
   1f370:	mov	r0, r4
   1f374:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1f378:	ldr	r1, [pc, #-412]	; 1f1e4 <__flatcc_fb_gen_c_json_parser@@Base+0x11a8>
   1f37c:	mov	r0, r4
   1f380:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1f384:	ldr	r2, [r4, #208]	; 0xd0
   1f388:	ldrh	r3, [r2, #16]
   1f38c:	cmp	r3, #2
   1f390:	bne	1f3f4 <__flatcc_fb_gen_c_json_parser@@Base+0x13b8>
   1f394:	ldr	r3, [r2, #8]
   1f398:	ldr	r1, [pc, #-440]	; 1f1e8 <__flatcc_fb_gen_c_json_parser@@Base+0x11ac>
   1f39c:	ldr	r2, [r2, #12]
   1f3a0:	mov	r0, r4
   1f3a4:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1f3a8:	add	r2, sp, #44	; 0x2c
   1f3ac:	ldr	r1, [pc, #-508]	; 1f1b8 <__flatcc_fb_gen_c_json_parser@@Base+0x117c>
   1f3b0:	mov	r0, r4
   1f3b4:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1f3b8:	ldr	r1, [pc, #-464]	; 1f1f0 <__flatcc_fb_gen_c_json_parser@@Base+0x11b4>
   1f3bc:	mov	r0, r4
   1f3c0:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1f3c4:	ldr	r3, [r4, #220]	; 0xdc
   1f3c8:	ldr	r1, [pc, #-476]	; 1f1f4 <__flatcc_fb_gen_c_json_parser@@Base+0x11b8>
   1f3cc:	add	r3, r3, #1
   1f3d0:	str	r3, [r4, #220]	; 0xdc
   1f3d4:	mov	r0, r4
   1f3d8:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1f3dc:	ldr	r3, [r4, #220]	; 0xdc
   1f3e0:	cmp	r3, #0
   1f3e4:	bne	1f404 <__flatcc_fb_gen_c_json_parser@@Base+0x13c8>
   1f3e8:	ldr	r3, [pc, #-560]	; 1f1c0 <__flatcc_fb_gen_c_json_parser@@Base+0x1184>
   1f3ec:	ldr	r2, [pc, #-568]	; 1f1bc <__flatcc_fb_gen_c_json_parser@@Base+0x1180>
   1f3f0:	b	1e1ac <__flatcc_fb_gen_c_json_parser@@Base+0x170>
   1f3f4:	ldr	r1, [pc, #-512]	; 1f1fc <__flatcc_fb_gen_c_json_parser@@Base+0x11c0>
   1f3f8:	mov	r0, r4
   1f3fc:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1f400:	b	1f3a8 <__flatcc_fb_gen_c_json_parser@@Base+0x136c>
   1f404:	sub	r3, r3, #1
   1f408:	str	r3, [r4, #220]	; 0xdc
   1f40c:	ldr	r1, [pc, #-512]	; 1f214 <__flatcc_fb_gen_c_json_parser@@Base+0x11d8>
   1f410:	mov	r0, r4
   1f414:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1f418:	ldr	r1, [pc, #-544]	; 1f200 <__flatcc_fb_gen_c_json_parser@@Base+0x11c4>
   1f41c:	mov	r0, r4
   1f420:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1f424:	ldr	r1, [pc, #-552]	; 1f204 <__flatcc_fb_gen_c_json_parser@@Base+0x11c8>
   1f428:	mov	r0, r4
   1f42c:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1f430:	ldr	r1, [pc, #-560]	; 1f208 <__flatcc_fb_gen_c_json_parser@@Base+0x11cc>
   1f434:	mov	r0, r4
   1f438:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1f43c:	ldr	r3, [r4, #220]	; 0xdc
   1f440:	cmp	r3, #0
   1f444:	bne	1f5ec <__flatcc_fb_gen_c_json_parser@@Base+0x15b0>
   1f448:	ldr	r3, [pc, #-656]	; 1f1c0 <__flatcc_fb_gen_c_json_parser@@Base+0x1184>
   1f44c:	ldr	r2, [pc, #-656]	; 1f1c4 <__flatcc_fb_gen_c_json_parser@@Base+0x1188>
   1f450:	b	1e1ac <__flatcc_fb_gen_c_json_parser@@Base+0x170>
   1f454:	mov	r2, #220	; 0xdc
   1f458:	mov	r1, #0
   1f45c:	add	r0, sp, #44	; 0x2c
   1f460:	bl	13fec <memset@plt>
   1f464:	add	r1, sp, #44	; 0x2c
   1f468:	mov	r0, r5
   1f46c:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x7f8>
   1f470:	ldr	r3, [r4, #208]	; 0xd0
   1f474:	ldr	r1, [pc, #-692]	; 1f1c8 <__flatcc_fb_gen_c_json_parser@@Base+0x118c>
   1f478:	mov	r0, r4
   1f47c:	ldr	r2, [r3, #160]	; 0xa0
   1f480:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1f484:	ldr	r3, [r4, #220]	; 0xdc
   1f488:	ldr	r1, [pc, #-708]	; 1f1cc <__flatcc_fb_gen_c_json_parser@@Base+0x1190>
   1f48c:	add	r3, r3, #2
   1f490:	str	r3, [r4, #220]	; 0xdc
   1f494:	mov	r0, r4
   1f498:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1f49c:	ldr	r3, [r4, #220]	; 0xdc
   1f4a0:	cmp	r3, #0
   1f4a4:	bne	1f4b4 <__flatcc_fb_gen_c_json_parser@@Base+0x1478>
   1f4a8:	ldr	r3, [pc, #-676]	; 1f20c <__flatcc_fb_gen_c_json_parser@@Base+0x11d0>
   1f4ac:	ldr	r2, [pc, #-740]	; 1f1d0 <__flatcc_fb_gen_c_json_parser@@Base+0x1194>
   1f4b0:	b	1e1ac <__flatcc_fb_gen_c_json_parser@@Base+0x170>
   1f4b4:	cmp	r3, #1
   1f4b8:	moveq	r3, #0
   1f4bc:	streq	r3, [r4, #220]	; 0xdc
   1f4c0:	beq	1f4a8 <__flatcc_fb_gen_c_json_parser@@Base+0x146c>
   1f4c4:	sub	r3, r3, #2
   1f4c8:	str	r3, [r4, #220]	; 0xdc
   1f4cc:	ldr	r1, [pc, #-768]	; 1f1d4 <__flatcc_fb_gen_c_json_parser@@Base+0x1198>
   1f4d0:	mov	r0, r4
   1f4d4:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1f4d8:	ldr	r3, [r4, #220]	; 0xdc
   1f4dc:	ldr	r1, [pc, #-780]	; 1f1d8 <__flatcc_fb_gen_c_json_parser@@Base+0x119c>
   1f4e0:	add	r3, r3, #1
   1f4e4:	str	r3, [r4, #220]	; 0xdc
   1f4e8:	mov	r0, r4
   1f4ec:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1f4f0:	ldr	r1, [pc, #-796]	; 1f1dc <__flatcc_fb_gen_c_json_parser@@Base+0x11a0>
   1f4f4:	mov	r0, r4
   1f4f8:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1f4fc:	ldr	r1, [pc, #-748]	; 1f218 <__flatcc_fb_gen_c_json_parser@@Base+0x11dc>
   1f500:	mov	r0, r4
   1f504:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1f508:	ldr	r1, [pc, #-816]	; 1f1e0 <__flatcc_fb_gen_c_json_parser@@Base+0x11a4>
   1f50c:	mov	r0, r4
   1f510:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1f514:	ldr	r1, [pc, #-824]	; 1f1e4 <__flatcc_fb_gen_c_json_parser@@Base+0x11a8>
   1f518:	mov	r0, r4
   1f51c:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1f520:	ldr	r2, [r4, #208]	; 0xd0
   1f524:	ldrh	r3, [r2, #16]
   1f528:	cmp	r3, #2
   1f52c:	bne	1f590 <__flatcc_fb_gen_c_json_parser@@Base+0x1554>
   1f530:	ldr	r3, [r2, #8]
   1f534:	ldr	r1, [pc, #-852]	; 1f1e8 <__flatcc_fb_gen_c_json_parser@@Base+0x11ac>
   1f538:	ldr	r2, [r2, #12]
   1f53c:	mov	r0, r4
   1f540:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1f544:	add	r2, sp, #44	; 0x2c
   1f548:	ldr	r1, [pc, #-868]	; 1f1ec <__flatcc_fb_gen_c_json_parser@@Base+0x11b0>
   1f54c:	mov	r0, r4
   1f550:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1f554:	ldr	r1, [pc, #-876]	; 1f1f0 <__flatcc_fb_gen_c_json_parser@@Base+0x11b4>
   1f558:	mov	r0, r4
   1f55c:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1f560:	ldr	r3, [r4, #220]	; 0xdc
   1f564:	ldr	r1, [pc, #-888]	; 1f1f4 <__flatcc_fb_gen_c_json_parser@@Base+0x11b8>
   1f568:	add	r3, r3, #1
   1f56c:	str	r3, [r4, #220]	; 0xdc
   1f570:	mov	r0, r4
   1f574:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1f578:	ldr	r3, [r4, #220]	; 0xdc
   1f57c:	cmp	r3, #0
   1f580:	bne	1f5a0 <__flatcc_fb_gen_c_json_parser@@Base+0x1564>
   1f584:	ldr	r3, [pc, #-896]	; 1f20c <__flatcc_fb_gen_c_json_parser@@Base+0x11d0>
   1f588:	ldr	r2, [pc, #-920]	; 1f1f8 <__flatcc_fb_gen_c_json_parser@@Base+0x11bc>
   1f58c:	b	1e1ac <__flatcc_fb_gen_c_json_parser@@Base+0x170>
   1f590:	ldr	r1, [pc, #-924]	; 1f1fc <__flatcc_fb_gen_c_json_parser@@Base+0x11c0>
   1f594:	mov	r0, r4
   1f598:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1f59c:	b	1f544 <__flatcc_fb_gen_c_json_parser@@Base+0x1508>
   1f5a0:	sub	r3, r3, #1
   1f5a4:	str	r3, [r4, #220]	; 0xdc
   1f5a8:	ldr	r1, [pc, #-924]	; 1f214 <__flatcc_fb_gen_c_json_parser@@Base+0x11d8>
   1f5ac:	mov	r0, r4
   1f5b0:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1f5b4:	ldr	r1, [pc, #-956]	; 1f200 <__flatcc_fb_gen_c_json_parser@@Base+0x11c4>
   1f5b8:	mov	r0, r4
   1f5bc:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1f5c0:	ldr	r1, [pc, #-964]	; 1f204 <__flatcc_fb_gen_c_json_parser@@Base+0x11c8>
   1f5c4:	mov	r0, r4
   1f5c8:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1f5cc:	ldr	r1, [pc, #-972]	; 1f208 <__flatcc_fb_gen_c_json_parser@@Base+0x11cc>
   1f5d0:	mov	r0, r4
   1f5d4:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1f5d8:	ldr	r3, [r4, #220]	; 0xdc
   1f5dc:	cmp	r3, #0
   1f5e0:	ldreq	r3, [pc, #-988]	; 1f20c <__flatcc_fb_gen_c_json_parser@@Base+0x11d0>
   1f5e4:	ldreq	r2, [pc, #-988]	; 1f210 <__flatcc_fb_gen_c_json_parser@@Base+0x11d4>
   1f5e8:	beq	1e1ac <__flatcc_fb_gen_c_json_parser@@Base+0x170>
   1f5ec:	sub	r3, r3, #1
   1f5f0:	mov	r0, r4
   1f5f4:	str	r3, [r4, #220]	; 0xdc
   1f5f8:	ldr	r1, [pc, #-1004]	; 1f214 <__flatcc_fb_gen_c_json_parser@@Base+0x11d8>
   1f5fc:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1f600:	ldr	r1, [pc, #-1008]	; 1f218 <__flatcc_fb_gen_c_json_parser@@Base+0x11dc>
   1f604:	mov	r0, r4
   1f608:	bl	1b5d8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1f60c:	b	1e4fc <__flatcc_fb_gen_c_json_parser@@Base+0x4c0>
   1f610:	mov	r2, r1
   1f614:	mov	r1, r0
   1f618:	ldr	r0, [r0, #12]
   1f61c:	b	150e8 <__flatcc_fb_scoped_symbol_name@@Base>
   1f620:	push	{r0, r1, r2, lr}
   1f624:	sub	r0, r0, #1
   1f628:	cmp	r0, #10
   1f62c:	ldrls	pc, [pc, r0, lsl #2]
   1f630:	b	1f6ac <__flatcc_fb_gen_c_json_parser@@Base+0x1670>
   1f634:	andeq	pc, r1, r0, ror #13
   1f638:	andeq	pc, r1, r0, ror #12
   1f63c:	andeq	pc, r1, r8, ror #13
   1f640:	andeq	pc, r1, ip, ror #12
   1f644:	andeq	pc, r1, r4, ror r6	; <UNPREDICTABLE>
   1f648:	andeq	pc, r1, ip, ror r6	; <UNPREDICTABLE>
   1f64c:	andeq	pc, r1, r4, lsl #13
   1f650:	andeq	pc, r1, ip, lsl #13
   1f654:	muleq	r1, r4, r6
   1f658:	andeq	pc, r1, r4, lsr #13
   1f65c:	muleq	r1, ip, r6
   1f660:	ldr	r0, [pc, #136]	; 1f6f0 <__flatcc_fb_gen_c_json_parser@@Base+0x16b4>
   1f664:	add	sp, sp, #12
   1f668:	pop	{pc}		; (ldr pc, [sp], #4)
   1f66c:	ldr	r0, [pc, #128]	; 1f6f4 <__flatcc_fb_gen_c_json_parser@@Base+0x16b8>
   1f670:	b	1f664 <__flatcc_fb_gen_c_json_parser@@Base+0x1628>
   1f674:	ldr	r0, [pc, #124]	; 1f6f8 <__flatcc_fb_gen_c_json_parser@@Base+0x16bc>
   1f678:	b	1f664 <__flatcc_fb_gen_c_json_parser@@Base+0x1628>
   1f67c:	ldr	r0, [pc, #120]	; 1f6fc <__flatcc_fb_gen_c_json_parser@@Base+0x16c0>
   1f680:	b	1f664 <__flatcc_fb_gen_c_json_parser@@Base+0x1628>
   1f684:	ldr	r0, [pc, #116]	; 1f700 <__flatcc_fb_gen_c_json_parser@@Base+0x16c4>
   1f688:	b	1f664 <__flatcc_fb_gen_c_json_parser@@Base+0x1628>
   1f68c:	ldr	r0, [pc, #112]	; 1f704 <__flatcc_fb_gen_c_json_parser@@Base+0x16c8>
   1f690:	b	1f664 <__flatcc_fb_gen_c_json_parser@@Base+0x1628>
   1f694:	ldr	r0, [pc, #108]	; 1f708 <__flatcc_fb_gen_c_json_parser@@Base+0x16cc>
   1f698:	b	1f664 <__flatcc_fb_gen_c_json_parser@@Base+0x1628>
   1f69c:	ldr	r0, [pc, #104]	; 1f70c <__flatcc_fb_gen_c_json_parser@@Base+0x16d0>
   1f6a0:	b	1f664 <__flatcc_fb_gen_c_json_parser@@Base+0x1628>
   1f6a4:	ldr	r0, [pc, #100]	; 1f710 <__flatcc_fb_gen_c_json_parser@@Base+0x16d4>
   1f6a8:	b	1f664 <__flatcc_fb_gen_c_json_parser@@Base+0x1628>
   1f6ac:	ldr	r0, [pc, #96]	; 1f714 <__flatcc_fb_gen_c_json_parser@@Base+0x16d8>
   1f6b0:	ldr	r3, [pc, #96]	; 1f718 <__flatcc_fb_gen_c_json_parser@@Base+0x16dc>
   1f6b4:	ldr	r2, [pc, #96]	; 1f71c <__flatcc_fb_gen_c_json_parser@@Base+0x16e0>
   1f6b8:	str	r3, [sp]
   1f6bc:	ldr	r1, [pc, #92]	; 1f720 <__flatcc_fb_gen_c_json_parser@@Base+0x16e4>
   1f6c0:	mov	r3, #96	; 0x60
   1f6c4:	ldr	r0, [r0]
   1f6c8:	bl	13fd4 <fprintf@plt>
   1f6cc:	ldr	r3, [pc, #80]	; 1f724 <__flatcc_fb_gen_c_json_parser@@Base+0x16e8>
   1f6d0:	mov	r2, #96	; 0x60
   1f6d4:	ldr	r1, [pc, #64]	; 1f71c <__flatcc_fb_gen_c_json_parser@@Base+0x16e0>
   1f6d8:	ldr	r0, [pc, #72]	; 1f728 <__flatcc_fb_gen_c_json_parser@@Base+0x16ec>
   1f6dc:	bl	14094 <__assert_fail@plt>
   1f6e0:	ldr	r0, [pc, #68]	; 1f72c <__flatcc_fb_gen_c_json_parser@@Base+0x16f0>
   1f6e4:	b	1f664 <__flatcc_fb_gen_c_json_parser@@Base+0x1628>
   1f6e8:	ldr	r0, [pc, #64]	; 1f730 <__flatcc_fb_gen_c_json_parser@@Base+0x16f4>
   1f6ec:	b	1f664 <__flatcc_fb_gen_c_json_parser@@Base+0x1628>
   1f6f0:			; <UNDEFINED> instruction: 0x00030ab7
   1f6f4:	andeq	r0, r3, r5, asr #21
   1f6f8:	andeq	r7, r4, r0, ror pc
   1f6fc:			; <UNDEFINED> instruction: 0x00030ab1
   1f700:			; <UNDEFINED> instruction: 0x00030ab8
   1f704:			; <UNDEFINED> instruction: 0x00030abf
   1f708:	andeq	r0, r3, r6, asr #21
   1f70c:	andeq	r0, r3, r8, lsl sl
   1f710:	andeq	r0, r3, lr, lsl sl
   1f714:	strheq	fp, [r5], -r0
   1f718:	andeq	r0, r3, r9, ror sl
   1f71c:	andeq	r0, r3, r5, lsr #20
   1f720:	andeq	r0, r3, lr, ror #20
   1f724:	andeq	r5, r4, r8, ror #2
   1f728:	andeq	r9, r3, sp, asr #1
   1f72c:			; <UNDEFINED> instruction: 0x00030ab0
   1f730:			; <UNDEFINED> instruction: 0x00030abe
   1f734:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f738:	sub	sp, sp, #468	; 0x1d4
   1f73c:	mov	r6, r1
   1f740:	mov	r2, #220	; 0xdc
   1f744:	mov	r1, #0
   1f748:	mov	r4, r0
   1f74c:	add	r0, sp, #24
   1f750:	bl	13fec <memset@plt>
   1f754:	mov	r2, #220	; 0xdc
   1f758:	mov	r1, #0
   1f75c:	add	r0, sp, #244	; 0xf4
   1f760:	bl	13fec <memset@plt>
   1f764:	add	r1, sp, #24
   1f768:	mov	r0, r6
   1f76c:	bl	1f610 <__flatcc_fb_gen_c_json_parser@@Base+0x15d4>
   1f770:	ldr	r5, [r6, #40]	; 0x28
   1f774:	mov	r0, r5
   1f778:	bl	1f620 <__flatcc_fb_gen_c_json_parser@@Base+0x15e4>
   1f77c:	sub	r5, r5, #1
   1f780:	mov	r9, r0
   1f784:	cmp	r5, #10
   1f788:	ldrls	pc, [pc, r5, lsl #2]
   1f78c:	b	1f8fc <__flatcc_fb_gen_c_json_parser@@Base+0x18c0>
   1f790:	andeq	pc, r1, r0, lsr r9	; <UNPREDICTABLE>
   1f794:	andeq	pc, r1, ip, ror #22
   1f798:	andeq	pc, r1, r8, lsr r9	; <UNPREDICTABLE>
   1f79c:	andeq	pc, r1, r4, ror fp	; <UNPREDICTABLE>
   1f7a0:	andeq	pc, r1, r0, ror #22
   1f7a4:			; <UNDEFINED> instruction: 0x0001f7bc
   1f7a8:	ldrdeq	pc, [r1], -r4
   1f7ac:	ldrdeq	pc, [r1], -ip
   1f7b0:	andeq	pc, r1, r4, ror #17
   1f7b4:	strdeq	pc, [r1], -r4
   1f7b8:	andeq	pc, r1, ip, ror #17
   1f7bc:	ldr	r5, [pc, #952]	; 1fb7c <__flatcc_fb_gen_c_json_parser@@Base+0x1b40>
   1f7c0:	ldr	r1, [pc, #952]	; 1fb80 <__flatcc_fb_gen_c_json_parser@@Base+0x1b44>
   1f7c4:	ldrh	r3, [r6, #92]	; 0x5c
   1f7c8:	ands	r3, r3, #32
   1f7cc:	str	r3, [sp, #20]
   1f7d0:	beq	1f990 <__flatcc_fb_gen_c_json_parser@@Base+0x1954>
   1f7d4:	ldrd	r2, [r6, #112]	; 0x70
   1f7d8:	subs	r2, r2, #1
   1f7dc:	sbc	r3, r3, #0
   1f7e0:	cmp	r3, #0
   1f7e4:	cmpeq	r2, #3
   1f7e8:	bhi	1f940 <__flatcc_fb_gen_c_json_parser@@Base+0x1904>
   1f7ec:	ldr	r3, [pc, #912]	; 1fb84 <__flatcc_fb_gen_c_json_parser@@Base+0x1b48>
   1f7f0:	add	r0, r3, r2, lsl #3
   1f7f4:	add	r2, r3, r2, lsl #2
   1f7f8:	ldrd	sl, [r0, #40]	; 0x28
   1f7fc:	ldr	r8, [r2, #72]	; 0x48
   1f800:	ldr	r7, [r2, #88]	; 0x58
   1f804:	ldr	r0, [r6, #20]
   1f808:	cmp	r0, #0
   1f80c:	bne	1f954 <__flatcc_fb_gen_c_json_parser@@Base+0x1918>
   1f810:	mov	r3, r1
   1f814:	str	r5, [sp]
   1f818:	add	r2, sp, #24
   1f81c:	ldr	r1, [pc, #868]	; 1fb88 <__flatcc_fb_gen_c_json_parser@@Base+0x1b4c>
   1f820:	ldr	r0, [r4, #204]	; 0xcc
   1f824:	bl	13fd4 <fprintf@plt>
   1f828:	ldr	r3, [sp, #20]
   1f82c:	cmp	r3, #0
   1f830:	beq	1fa54 <__flatcc_fb_gen_c_json_parser@@Base+0x1a18>
   1f834:	mov	r1, r5
   1f838:	mov	r0, r7
   1f83c:	bl	13efc <strcmp@plt>
   1f840:	cmp	r0, #0
   1f844:	beq	1f9a4 <__flatcc_fb_gen_c_json_parser@@Base+0x1968>
   1f848:	mov	r3, r7
   1f84c:	mov	r2, r7
   1f850:	ldr	r1, [pc, #820]	; 1fb8c <__flatcc_fb_gen_c_json_parser@@Base+0x1b50>
   1f854:	ldr	r0, [r4, #204]	; 0xcc
   1f858:	bl	13fd4 <fprintf@plt>
   1f85c:	ldr	r1, [r4, #204]	; 0xcc
   1f860:	ldr	r0, [pc, #808]	; 1fb90 <__flatcc_fb_gen_c_json_parser@@Base+0x1b54>
   1f864:	bl	14070 <fputs@plt>
   1f868:	ldr	r1, [r4, #204]	; 0xcc
   1f86c:	mov	r0, #10
   1f870:	bl	14034 <fputc@plt>
   1f874:	orrs	r3, sl, fp
   1f878:	beq	1f894 <__flatcc_fb_gen_c_json_parser@@Base+0x1858>
   1f87c:	str	r9, [sp]
   1f880:	mov	r2, sl
   1f884:	mov	r3, fp
   1f888:	ldr	r1, [pc, #772]	; 1fb94 <__flatcc_fb_gen_c_json_parser@@Base+0x1b58>
   1f88c:	ldr	r0, [r4, #204]	; 0xcc
   1f890:	bl	13fd4 <fprintf@plt>
   1f894:	ldr	r1, [r4, #204]	; 0xcc
   1f898:	ldr	r0, [pc, #760]	; 1fb98 <__flatcc_fb_gen_c_json_parser@@Base+0x1b5c>
   1f89c:	bl	14070 <fputs@plt>
   1f8a0:	ldr	r5, [r6, #20]
   1f8a4:	ldr	r6, [pc, #752]	; 1fb9c <__flatcc_fb_gen_c_json_parser@@Base+0x1b60>
   1f8a8:	cmp	r5, #0
   1f8ac:	bne	1f9b8 <__flatcc_fb_gen_c_json_parser@@Base+0x197c>
   1f8b0:	ldr	r1, [r4, #204]	; 0xcc
   1f8b4:	ldr	r0, [pc, #732]	; 1fb98 <__flatcc_fb_gen_c_json_parser@@Base+0x1b5c>
   1f8b8:	bl	14070 <fputs@plt>
   1f8bc:	ldr	r1, [r4, #204]	; 0xcc
   1f8c0:	ldr	r0, [pc, #728]	; 1fba0 <__flatcc_fb_gen_c_json_parser@@Base+0x1b64>
   1f8c4:	bl	14070 <fputs@plt>
   1f8c8:	mov	r0, #0
   1f8cc:	add	sp, sp, #468	; 0x1d4
   1f8d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f8d4:	ldr	r5, [pc, #712]	; 1fba4 <__flatcc_fb_gen_c_json_parser@@Base+0x1b68>
   1f8d8:	b	1f7c0 <__flatcc_fb_gen_c_json_parser@@Base+0x1784>
   1f8dc:	ldr	r5, [pc, #708]	; 1fba8 <__flatcc_fb_gen_c_json_parser@@Base+0x1b6c>
   1f8e0:	b	1f7c0 <__flatcc_fb_gen_c_json_parser@@Base+0x1784>
   1f8e4:	ldr	r5, [pc, #704]	; 1fbac <__flatcc_fb_gen_c_json_parser@@Base+0x1b70>
   1f8e8:	b	1f7c0 <__flatcc_fb_gen_c_json_parser@@Base+0x1784>
   1f8ec:	ldr	r5, [pc, #700]	; 1fbb0 <__flatcc_fb_gen_c_json_parser@@Base+0x1b74>
   1f8f0:	b	1f7c0 <__flatcc_fb_gen_c_json_parser@@Base+0x1784>
   1f8f4:	ldr	r5, [pc, #696]	; 1fbb4 <__flatcc_fb_gen_c_json_parser@@Base+0x1b78>
   1f8f8:	b	1f7c0 <__flatcc_fb_gen_c_json_parser@@Base+0x1784>
   1f8fc:	ldr	r0, [pc, #692]	; 1fbb8 <__flatcc_fb_gen_c_json_parser@@Base+0x1b7c>
   1f900:	ldr	r3, [pc, #692]	; 1fbbc <__flatcc_fb_gen_c_json_parser@@Base+0x1b80>
   1f904:	ldr	r2, [pc, #692]	; 1fbc0 <__flatcc_fb_gen_c_json_parser@@Base+0x1b84>
   1f908:	str	r3, [sp]
   1f90c:	ldr	r1, [pc, #688]	; 1fbc4 <__flatcc_fb_gen_c_json_parser@@Base+0x1b88>
   1f910:	mov	r3, #141	; 0x8d
   1f914:	ldr	r0, [r0]
   1f918:	bl	13fd4 <fprintf@plt>
   1f91c:	ldr	r3, [pc, #676]	; 1fbc8 <__flatcc_fb_gen_c_json_parser@@Base+0x1b8c>
   1f920:	ldr	r1, [pc, #664]	; 1fbc0 <__flatcc_fb_gen_c_json_parser@@Base+0x1b84>
   1f924:	mov	r2, #141	; 0x8d
   1f928:	ldr	r0, [pc, #668]	; 1fbcc <__flatcc_fb_gen_c_json_parser@@Base+0x1b90>
   1f92c:	bl	14094 <__assert_fail@plt>
   1f930:	ldr	r5, [pc, #664]	; 1fbd0 <__flatcc_fb_gen_c_json_parser@@Base+0x1b94>
   1f934:	b	1f7c0 <__flatcc_fb_gen_c_json_parser@@Base+0x1784>
   1f938:	ldr	r5, [pc, #660]	; 1fbd4 <__flatcc_fb_gen_c_json_parser@@Base+0x1b98>
   1f93c:	b	1f7c0 <__flatcc_fb_gen_c_json_parser@@Base+0x1784>
   1f940:	ldr	r7, [pc, #648]	; 1fbd0 <__flatcc_fb_gen_c_json_parser@@Base+0x1b94>
   1f944:	ldr	r8, [pc, #652]	; 1fbd8 <__flatcc_fb_gen_c_json_parser@@Base+0x1b9c>
   1f948:	mvn	sl, #0
   1f94c:	mvn	fp, #0
   1f950:	b	1f804 <__flatcc_fb_gen_c_json_parser@@Base+0x17c8>
   1f954:	ldrh	r3, [r0, #56]	; 0x38
   1f958:	cmp	r3, #5
   1f95c:	beq	1f970 <__flatcc_fb_gen_c_json_parser@@Base+0x1934>
   1f960:	cmp	r3, #6
   1f964:	beq	1f984 <__flatcc_fb_gen_c_json_parser@@Base+0x1948>
   1f968:	cmp	r3, #4
   1f96c:	bne	1f97c <__flatcc_fb_gen_c_json_parser@@Base+0x1940>
   1f970:	ldrd	r2, [r0, #48]	; 0x30
   1f974:	bic	sl, sl, r2
   1f978:	bic	fp, fp, r3
   1f97c:	ldr	r0, [r0]
   1f980:	b	1f808 <__flatcc_fb_gen_c_json_parser@@Base+0x17cc>
   1f984:	ldrb	r2, [r0, #48]	; 0x30
   1f988:	mov	r3, #0
   1f98c:	b	1f974 <__flatcc_fb_gen_c_json_parser@@Base+0x1938>
   1f990:	ldr	r7, [pc, #488]	; 1fb80 <__flatcc_fb_gen_c_json_parser@@Base+0x1b44>
   1f994:	mov	sl, #0
   1f998:	mov	r8, r7
   1f99c:	mov	fp, #0
   1f9a0:	b	1f810 <__flatcc_fb_gen_c_json_parser@@Base+0x17d4>
   1f9a4:	mov	r2, r7
   1f9a8:	ldr	r1, [pc, #556]	; 1fbdc <__flatcc_fb_gen_c_json_parser@@Base+0x1ba0>
   1f9ac:	ldr	r0, [r4, #204]	; 0xcc
   1f9b0:	bl	13fd4 <fprintf@plt>
   1f9b4:	b	1f85c <__flatcc_fb_gen_c_json_parser@@Base+0x1820>
   1f9b8:	ldrh	r3, [r5, #56]	; 0x38
   1f9bc:	cmp	r3, #5
   1f9c0:	beq	1f9d4 <__flatcc_fb_gen_c_json_parser@@Base+0x1998>
   1f9c4:	cmp	r3, #6
   1f9c8:	beq	1fa10 <__flatcc_fb_gen_c_json_parser@@Base+0x19d4>
   1f9cc:	cmp	r3, #4
   1f9d0:	bne	1fa24 <__flatcc_fb_gen_c_json_parser@@Base+0x19e8>
   1f9d4:	ldr	r2, [r5, #4]
   1f9d8:	ldrd	r0, [r5, #48]	; 0x30
   1f9dc:	ldr	r3, [r2, #4]
   1f9e0:	str	r3, [sp, #12]
   1f9e4:	ldr	r2, [r2]
   1f9e8:	str	r3, [sp, #4]
   1f9ec:	str	r2, [sp, #8]
   1f9f0:	mov	r3, r1
   1f9f4:	mov	r2, r0
   1f9f8:	str	r8, [sp]
   1f9fc:	mov	r1, r6
   1fa00:	ldr	r0, [r4, #204]	; 0xcc
   1fa04:	bl	13fd4 <fprintf@plt>
   1fa08:	ldr	r5, [r5]
   1fa0c:	b	1f8a8 <__flatcc_fb_gen_c_json_parser@@Base+0x186c>
   1fa10:	ldr	r2, [r5, #4]
   1fa14:	ldrb	r0, [r5, #48]	; 0x30
   1fa18:	mov	r1, #0
   1fa1c:	ldr	r3, [r2, #4]
   1fa20:	b	1f9e0 <__flatcc_fb_gen_c_json_parser@@Base+0x19a4>
   1fa24:	ldr	r0, [pc, #396]	; 1fbb8 <__flatcc_fb_gen_c_json_parser@@Base+0x1b7c>
   1fa28:	ldr	r3, [pc, #432]	; 1fbe0 <__flatcc_fb_gen_c_json_parser@@Base+0x1ba4>
   1fa2c:	ldr	r2, [pc, #432]	; 1fbe4 <__flatcc_fb_gen_c_json_parser@@Base+0x1ba8>
   1fa30:	str	r3, [sp]
   1fa34:	ldr	r1, [pc, #392]	; 1fbc4 <__flatcc_fb_gen_c_json_parser@@Base+0x1b88>
   1fa38:	mov	r3, #134	; 0x86
   1fa3c:	ldr	r0, [r0]
   1fa40:	bl	13fd4 <fprintf@plt>
   1fa44:	ldr	r3, [pc, #412]	; 1fbe8 <__flatcc_fb_gen_c_json_parser@@Base+0x1bac>
   1fa48:	mov	r2, #134	; 0x86
   1fa4c:	ldr	r1, [pc, #400]	; 1fbe4 <__flatcc_fb_gen_c_json_parser@@Base+0x1ba8>
   1fa50:	b	1f928 <__flatcc_fb_gen_c_json_parser@@Base+0x18ec>
   1fa54:	ldr	r1, [r4, #204]	; 0xcc
   1fa58:	ldr	r0, [pc, #396]	; 1fbec <__flatcc_fb_gen_c_json_parser@@Base+0x1bb0>
   1fa5c:	bl	14070 <fputs@plt>
   1fa60:	ldr	r7, [pc, #392]	; 1fbf0 <__flatcc_fb_gen_c_json_parser@@Base+0x1bb4>
   1fa64:	ldr	r5, [r6, #20]
   1fa68:	ldr	r8, [pc, #388]	; 1fbf4 <__flatcc_fb_gen_c_json_parser@@Base+0x1bb8>
   1fa6c:	ldr	r6, [pc, #388]	; 1fbf8 <__flatcc_fb_gen_c_json_parser@@Base+0x1bbc>
   1fa70:	cmp	r5, #0
   1fa74:	bne	1fa8c <__flatcc_fb_gen_c_json_parser@@Base+0x1a50>
   1fa78:	mov	r2, r9
   1fa7c:	ldr	r1, [pc, #376]	; 1fbfc <__flatcc_fb_gen_c_json_parser@@Base+0x1bc0>
   1fa80:	ldr	r0, [r4, #204]	; 0xcc
   1fa84:	bl	13fd4 <fprintf@plt>
   1fa88:	b	1f8bc <__flatcc_fb_gen_c_json_parser@@Base+0x1880>
   1fa8c:	ldrh	r3, [r5, #56]	; 0x38
   1fa90:	cmp	r3, #5
   1fa94:	beq	1fad4 <__flatcc_fb_gen_c_json_parser@@Base+0x1a98>
   1fa98:	cmp	r3, #6
   1fa9c:	beq	1fb0c <__flatcc_fb_gen_c_json_parser@@Base+0x1ad0>
   1faa0:	cmp	r3, #4
   1faa4:	bne	1fb34 <__flatcc_fb_gen_c_json_parser@@Base+0x1af8>
   1faa8:	ldr	r2, [r5, #4]
   1faac:	ldrd	r0, [r5, #48]	; 0x30
   1fab0:	ldr	r3, [r2, #4]
   1fab4:	str	r3, [sp, #8]
   1fab8:	ldr	r2, [r2]
   1fabc:	str	r3, [sp]
   1fac0:	str	r2, [sp, #4]
   1fac4:	mov	r3, r1
   1fac8:	mov	r2, r0
   1facc:	mov	r1, r8
   1fad0:	b	1fafc <__flatcc_fb_gen_c_json_parser@@Base+0x1ac0>
   1fad4:	ldr	r2, [r5, #4]
   1fad8:	ldrd	r0, [r5, #48]	; 0x30
   1fadc:	ldr	r3, [r2, #4]
   1fae0:	str	r3, [sp, #8]
   1fae4:	ldr	r2, [r2]
   1fae8:	str	r3, [sp]
   1faec:	str	r2, [sp, #4]
   1faf0:	mov	r3, r1
   1faf4:	mov	r2, r0
   1faf8:	mov	r1, r6
   1fafc:	ldr	r0, [r4, #204]	; 0xcc
   1fb00:	bl	13fd4 <fprintf@plt>
   1fb04:	ldr	r5, [r5]
   1fb08:	b	1fa70 <__flatcc_fb_gen_c_json_parser@@Base+0x1a34>
   1fb0c:	ldr	r1, [r5, #4]
   1fb10:	ldrb	r2, [r5, #48]	; 0x30
   1fb14:	ldr	r0, [r4, #204]	; 0xcc
   1fb18:	ldr	r3, [r1, #4]
   1fb1c:	str	r3, [sp, #4]
   1fb20:	ldr	r1, [r1]
   1fb24:	str	r1, [sp]
   1fb28:	mov	r1, r7
   1fb2c:	bl	13fd4 <fprintf@plt>
   1fb30:	b	1fb04 <__flatcc_fb_gen_c_json_parser@@Base+0x1ac8>
   1fb34:	ldr	r0, [pc, #124]	; 1fbb8 <__flatcc_fb_gen_c_json_parser@@Base+0x1b7c>
   1fb38:	ldr	r3, [pc, #160]	; 1fbe0 <__flatcc_fb_gen_c_json_parser@@Base+0x1ba4>
   1fb3c:	ldr	r2, [pc, #160]	; 1fbe4 <__flatcc_fb_gen_c_json_parser@@Base+0x1ba8>
   1fb40:	str	r3, [sp]
   1fb44:	ldr	r1, [pc, #120]	; 1fbc4 <__flatcc_fb_gen_c_json_parser@@Base+0x1b88>
   1fb48:	mov	r3, #157	; 0x9d
   1fb4c:	ldr	r0, [r0]
   1fb50:	bl	13fd4 <fprintf@plt>
   1fb54:	ldr	r3, [pc, #140]	; 1fbe8 <__flatcc_fb_gen_c_json_parser@@Base+0x1bac>
   1fb58:	mov	r2, #157	; 0x9d
   1fb5c:	b	1fa4c <__flatcc_fb_gen_c_json_parser@@Base+0x1a10>
   1fb60:	mov	r1, r4
   1fb64:	ldr	r5, [pc, #148]	; 1fc00 <__flatcc_fb_gen_c_json_parser@@Base+0x1bc4>
   1fb68:	b	1f7c4 <__flatcc_fb_gen_c_json_parser@@Base+0x1788>
   1fb6c:	ldr	r5, [pc, #144]	; 1fc04 <__flatcc_fb_gen_c_json_parser@@Base+0x1bc8>
   1fb70:	b	1f7c0 <__flatcc_fb_gen_c_json_parser@@Base+0x1784>
   1fb74:	ldr	r5, [pc, #140]	; 1fc08 <__flatcc_fb_gen_c_json_parser@@Base+0x1bcc>
   1fb78:	b	1f7c0 <__flatcc_fb_gen_c_json_parser@@Base+0x1784>
   1fb7c:	andeq	r0, r3, pc, ror #19
   1fb80:	andeq	r1, r3, r1, lsr #28
   1fb84:	andeq	r5, r4, r8, ror #2
   1fb88:	andeq	r5, r4, pc, lsl r2
   1fb8c:	andeq	r5, r4, r5, ror #4
   1fb90:	andeq	r5, r4, r7, lsl #5
   1fb94:			; <UNDEFINED> instruction: 0x000452be
   1fb98:	andeq	r5, r4, pc, lsl r3
   1fb9c:	andeq	r5, r4, fp, asr r3
   1fba0:	andeq	r6, r4, fp, ror #2
   1fba4:	strdeq	r0, [r3], -r8
   1fba8:	andeq	r0, r3, r1, lsl #20
   1fbac:	andeq	r0, r3, sl, lsl #20
   1fbb0:	andeq	r0, r3, r8, lsl sl
   1fbb4:	andeq	r0, r3, lr, lsl sl
   1fbb8:	strheq	fp, [r5], -r0
   1fbbc:	andeq	r0, r3, r9, ror sl
   1fbc0:	andeq	r0, r3, r5, lsr #20
   1fbc4:	andeq	r0, r3, lr, ror #20
   1fbc8:	andeq	r5, r4, fp, ror r1
   1fbcc:	andeq	r9, r3, sp, asr #1
   1fbd0:	andeq	r0, r3, lr, ror #19
   1fbd4:	andeq	r0, r3, r0, lsl #20
   1fbd8:	andeq	r5, r4, fp, lsl r2
   1fbdc:	andeq	r5, r4, r8, ror r2
   1fbe0:	strdeq	r5, [r4], -lr
   1fbe4:	andeq	r5, r4, r8, lsr #7
   1fbe8:	ldrdeq	r5, [r4], -r0
   1fbec:	andeq	r5, r4, r8, lsr r4
   1fbf0:	ldrdeq	r5, [r4], -r1
   1fbf4:	andeq	r5, r4, lr, lsl #9
   1fbf8:	andeq	r5, r4, fp, asr #8
   1fbfc:	andeq	r5, r4, r2, lsl r5
   1fc00:	andeq	r0, r3, r1, lsl sl
   1fc04:	strdeq	r0, [r3], -r7
   1fc08:	andeq	r0, r3, r9, lsl #20
   1fc0c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1fc10:	sub	sp, sp, #464	; 0x1d0
   1fc14:	mov	r4, r1
   1fc18:	mov	r5, r0
   1fc1c:	mov	r2, #220	; 0xdc
   1fc20:	mov	r1, #0
   1fc24:	add	r0, sp, #24
   1fc28:	add	r7, sp, #244	; 0xf4
   1fc2c:	bl	13fec <memset@plt>
   1fc30:	mov	r2, #220	; 0xdc
   1fc34:	mov	r1, #0
   1fc38:	mov	r0, r7
   1fc3c:	bl	13fec <memset@plt>
   1fc40:	mov	r0, r4
   1fc44:	add	r1, sp, #24
   1fc48:	bl	1f610 <__flatcc_fb_gen_c_json_parser@@Base+0x15d4>
   1fc4c:	add	r2, sp, #24
   1fc50:	ldr	r1, [pc, #344]	; 1fdb0 <__flatcc_fb_gen_c_json_parser@@Base+0x1d74>
   1fc54:	ldr	r0, [r5]
   1fc58:	bl	13fd4 <fprintf@plt>
   1fc5c:	ldr	r8, [pc, #336]	; 1fdb4 <__flatcc_fb_gen_c_json_parser@@Base+0x1d78>
   1fc60:	ldr	r4, [r4, #20]
   1fc64:	ldr	r9, [pc, #332]	; 1fdb8 <__flatcc_fb_gen_c_json_parser@@Base+0x1d7c>
   1fc68:	ldr	sl, [pc, #332]	; 1fdbc <__flatcc_fb_gen_c_json_parser@@Base+0x1d80>
   1fc6c:	mov	r6, #0
   1fc70:	cmp	r4, #0
   1fc74:	bne	1fca4 <__flatcc_fb_gen_c_json_parser@@Base+0x1c68>
   1fc78:	ldr	r1, [r5]
   1fc7c:	ldr	r0, [pc, #316]	; 1fdc0 <__flatcc_fb_gen_c_json_parser@@Base+0x1d84>
   1fc80:	bl	14070 <fputs@plt>
   1fc84:	add	r3, sp, #24
   1fc88:	mov	r2, r3
   1fc8c:	ldr	r1, [pc, #304]	; 1fdc4 <__flatcc_fb_gen_c_json_parser@@Base+0x1d88>
   1fc90:	ldr	r0, [r5]
   1fc94:	bl	13fd4 <fprintf@plt>
   1fc98:	mov	r0, r4
   1fc9c:	add	sp, sp, #464	; 0x1d0
   1fca0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1fca4:	ldrh	r3, [r4, #72]	; 0x48
   1fca8:	tst	r3, #4
   1fcac:	bne	1fcc4 <__flatcc_fb_gen_c_json_parser@@Base+0x1c88>
   1fcb0:	ldrh	r3, [r4, #24]
   1fcb4:	cmp	r3, #8
   1fcb8:	beq	1fcd0 <__flatcc_fb_gen_c_json_parser@@Base+0x1c94>
   1fcbc:	cmp	r3, #14
   1fcc0:	beq	1fd10 <__flatcc_fb_gen_c_json_parser@@Base+0x1cd4>
   1fcc4:	add	r6, r6, #1
   1fcc8:	ldr	r4, [r4]
   1fccc:	b	1fc70 <__flatcc_fb_gen_c_json_parser@@Base+0x1c34>
   1fcd0:	ldr	r0, [r4, #16]
   1fcd4:	bl	1f620 <__flatcc_fb_gen_c_json_parser@@Base+0x15e4>
   1fcd8:	ldr	r2, [r4, #4]
   1fcdc:	mov	r1, r8
   1fce0:	ldr	r3, [r2, #4]
   1fce4:	str	r3, [sp, #16]
   1fce8:	ldr	r2, [r2]
   1fcec:	str	r3, [sp, #8]
   1fcf0:	str	r2, [sp, #12]
   1fcf4:	ldrd	r2, [r4, #80]	; 0x50
   1fcf8:	strd	r2, [sp]
   1fcfc:	mov	r3, r6
   1fd00:	mov	r2, r0
   1fd04:	ldr	r0, [r5]
   1fd08:	bl	13fd4 <fprintf@plt>
   1fd0c:	b	1fcc4 <__flatcc_fb_gen_c_json_parser@@Base+0x1c88>
   1fd10:	mov	r1, r7
   1fd14:	ldr	r0, [r4, #16]
   1fd18:	bl	1f610 <__flatcc_fb_gen_c_json_parser@@Base+0x15d4>
   1fd1c:	ldr	r3, [r4, #16]
   1fd20:	ldrh	r2, [r3, #8]
   1fd24:	cmp	r2, #1
   1fd28:	beq	1fd78 <__flatcc_fb_gen_c_json_parser@@Base+0x1d3c>
   1fd2c:	cmp	r2, #3
   1fd30:	bne	1fcc4 <__flatcc_fb_gen_c_json_parser@@Base+0x1c88>
   1fd34:	ldr	r0, [r3, #40]	; 0x28
   1fd38:	bl	1f620 <__flatcc_fb_gen_c_json_parser@@Base+0x15e4>
   1fd3c:	ldr	r2, [r4, #4]
   1fd40:	mov	r1, sl
   1fd44:	ldr	r3, [r2, #4]
   1fd48:	str	r7, [sp, #20]
   1fd4c:	str	r3, [sp, #16]
   1fd50:	ldr	r2, [r2]
   1fd54:	str	r3, [sp, #8]
   1fd58:	str	r2, [sp, #12]
   1fd5c:	ldrd	r2, [r4, #80]	; 0x50
   1fd60:	strd	r2, [sp]
   1fd64:	mov	r3, r6
   1fd68:	mov	r2, r0
   1fd6c:	ldr	r0, [r5]
   1fd70:	bl	13fd4 <fprintf@plt>
   1fd74:	b	1fcc4 <__flatcc_fb_gen_c_json_parser@@Base+0x1c88>
   1fd78:	ldr	r2, [r4, #4]
   1fd7c:	mov	r1, r9
   1fd80:	ldr	r0, [r5]
   1fd84:	ldr	r3, [r2, #4]
   1fd88:	str	r7, [sp, #20]
   1fd8c:	str	r3, [sp, #16]
   1fd90:	ldr	r2, [r2]
   1fd94:	str	r3, [sp, #8]
   1fd98:	str	r2, [sp, #12]
   1fd9c:	ldrd	r2, [r4, #80]	; 0x50
   1fda0:	strd	r2, [sp]
   1fda4:	mov	r2, r6
   1fda8:	bl	13fd4 <fprintf@plt>
   1fdac:	b	1fcc4 <__flatcc_fb_gen_c_json_parser@@Base+0x1c88>
   1fdb0:	andeq	r5, r4, sp, asr #10
   1fdb4:	muleq	r4, ip, r5
   1fdb8:	andeq	r5, r4, r7, asr #12
   1fdbc:	andeq	r5, r4, r5, ror #11
   1fdc0:	andeq	r6, r4, fp, ror #2
   1fdc4:	andeq	r5, r4, ip, lsr #13
   1fdc8:	push	{r4, r5, r6, r7, r8, lr}
   1fdcc:	sub	sp, sp, #448	; 0x1c0
   1fdd0:	mov	r4, r1
   1fdd4:	mov	r5, r0
   1fdd8:	mov	r2, #220	; 0xdc
   1fddc:	mov	r1, #0
   1fde0:	add	r0, sp, #8
   1fde4:	bl	13fec <memset@plt>
   1fde8:	mov	r2, #220	; 0xdc
   1fdec:	mov	r1, #0
   1fdf0:	add	r0, sp, #228	; 0xe4
   1fdf4:	bl	13fec <memset@plt>
   1fdf8:	mov	r0, r4
   1fdfc:	add	r1, sp, #8
   1fe00:	bl	1f610 <__flatcc_fb_gen_c_json_parser@@Base+0x15d4>
   1fe04:	add	r2, sp, #8
   1fe08:	ldr	r1, [pc, #292]	; 1ff34 <__flatcc_fb_gen_c_json_parser@@Base+0x1ef8>
   1fe0c:	ldr	r0, [r5]
   1fe10:	bl	13fd4 <fprintf@plt>
   1fe14:	ldr	r6, [pc, #284]	; 1ff38 <__flatcc_fb_gen_c_json_parser@@Base+0x1efc>
   1fe18:	ldr	r4, [r4, #20]
   1fe1c:	ldr	r7, [pc, #280]	; 1ff3c <__flatcc_fb_gen_c_json_parser@@Base+0x1f00>
   1fe20:	ldr	r8, [pc, #280]	; 1ff40 <__flatcc_fb_gen_c_json_parser@@Base+0x1f04>
   1fe24:	cmp	r4, #0
   1fe28:	bne	1fe50 <__flatcc_fb_gen_c_json_parser@@Base+0x1e14>
   1fe2c:	ldr	r1, [r5]
   1fe30:	ldr	r0, [pc, #268]	; 1ff44 <__flatcc_fb_gen_c_json_parser@@Base+0x1f08>
   1fe34:	bl	14070 <fputs@plt>
   1fe38:	ldr	r1, [r5]
   1fe3c:	ldr	r0, [pc, #260]	; 1ff48 <__flatcc_fb_gen_c_json_parser@@Base+0x1f0c>
   1fe40:	bl	14070 <fputs@plt>
   1fe44:	mov	r0, r4
   1fe48:	add	sp, sp, #448	; 0x1c0
   1fe4c:	pop	{r4, r5, r6, r7, r8, pc}
   1fe50:	ldrh	r3, [r4, #24]
   1fe54:	cmp	r3, #10
   1fe58:	beq	1fef4 <__flatcc_fb_gen_c_json_parser@@Base+0x1eb8>
   1fe5c:	cmp	r3, #14
   1fe60:	beq	1fe74 <__flatcc_fb_gen_c_json_parser@@Base+0x1e38>
   1fe64:	cmp	r3, #0
   1fe68:	bne	1ff08 <__flatcc_fb_gen_c_json_parser@@Base+0x1ecc>
   1fe6c:	ldr	r4, [r4]
   1fe70:	b	1fe24 <__flatcc_fb_gen_c_json_parser@@Base+0x1de8>
   1fe74:	add	r1, sp, #228	; 0xe4
   1fe78:	ldr	r0, [r4, #16]
   1fe7c:	bl	1f610 <__flatcc_fb_gen_c_json_parser@@Base+0x15d4>
   1fe80:	ldr	r3, [r4, #16]
   1fe84:	ldrh	r3, [r3, #8]
   1fe88:	cmp	r3, #0
   1fe8c:	beq	1fecc <__flatcc_fb_gen_c_json_parser@@Base+0x1e90>
   1fe90:	cmp	r3, #1
   1fe94:	beq	1fee4 <__flatcc_fb_gen_c_json_parser@@Base+0x1ea8>
   1fe98:	ldr	r0, [pc, #172]	; 1ff4c <__flatcc_fb_gen_c_json_parser@@Base+0x1f10>
   1fe9c:	ldr	r3, [pc, #172]	; 1ff50 <__flatcc_fb_gen_c_json_parser@@Base+0x1f14>
   1fea0:	ldr	r2, [pc, #172]	; 1ff54 <__flatcc_fb_gen_c_json_parser@@Base+0x1f18>
   1fea4:	str	r3, [sp]
   1fea8:	ldr	r1, [pc, #168]	; 1ff58 <__flatcc_fb_gen_c_json_parser@@Base+0x1f1c>
   1feac:	mov	r3, #240	; 0xf0
   1feb0:	ldr	r0, [r0]
   1feb4:	bl	13fd4 <fprintf@plt>
   1feb8:	ldr	r3, [pc, #156]	; 1ff5c <__flatcc_fb_gen_c_json_parser@@Base+0x1f20>
   1febc:	mov	r2, #240	; 0xf0
   1fec0:	ldr	r1, [pc, #140]	; 1ff54 <__flatcc_fb_gen_c_json_parser@@Base+0x1f18>
   1fec4:	ldr	r0, [pc, #148]	; 1ff60 <__flatcc_fb_gen_c_json_parser@@Base+0x1f24>
   1fec8:	bl	14094 <__assert_fail@plt>
   1fecc:	ldr	r2, [r4, #48]	; 0x30
   1fed0:	add	r3, sp, #228	; 0xe4
   1fed4:	mov	r1, r7
   1fed8:	ldr	r0, [r5]
   1fedc:	bl	13fd4 <fprintf@plt>
   1fee0:	b	1fe6c <__flatcc_fb_gen_c_json_parser@@Base+0x1e30>
   1fee4:	add	r3, sp, #228	; 0xe4
   1fee8:	ldr	r2, [r4, #48]	; 0x30
   1feec:	mov	r1, r8
   1fef0:	b	1fed8 <__flatcc_fb_gen_c_json_parser@@Base+0x1e9c>
   1fef4:	ldr	r2, [r4, #48]	; 0x30
   1fef8:	mov	r1, r6
   1fefc:	ldr	r0, [r5]
   1ff00:	bl	13fd4 <fprintf@plt>
   1ff04:	b	1fe6c <__flatcc_fb_gen_c_json_parser@@Base+0x1e30>
   1ff08:	ldr	r0, [pc, #60]	; 1ff4c <__flatcc_fb_gen_c_json_parser@@Base+0x1f10>
   1ff0c:	ldr	r3, [pc, #60]	; 1ff50 <__flatcc_fb_gen_c_json_parser@@Base+0x1f14>
   1ff10:	ldr	r2, [pc, #60]	; 1ff54 <__flatcc_fb_gen_c_json_parser@@Base+0x1f18>
   1ff14:	str	r3, [sp]
   1ff18:	ldr	r1, [pc, #56]	; 1ff58 <__flatcc_fb_gen_c_json_parser@@Base+0x1f1c>
   1ff1c:	mov	r3, #251	; 0xfb
   1ff20:	ldr	r0, [r0]
   1ff24:	bl	13fd4 <fprintf@plt>
   1ff28:	ldr	r3, [pc, #44]	; 1ff5c <__flatcc_fb_gen_c_json_parser@@Base+0x1f20>
   1ff2c:	mov	r2, #251	; 0xfb
   1ff30:	b	1fec0 <__flatcc_fb_gen_c_json_parser@@Base+0x1e84>
   1ff34:	andeq	r5, r4, r3, lsl #15
   1ff38:	strdeq	r5, [r4], -r7
   1ff3c:	andeq	r5, r4, r6, lsl #16
   1ff40:	andeq	r5, r4, sl, ror #16
   1ff44:	andeq	r5, r4, r7, asr #18
   1ff48:	andeq	r2, r4, pc, lsl r9
   1ff4c:	strheq	fp, [r5], -r0
   1ff50:	ldrdeq	r5, [r4], -r0
   1ff54:	andeq	r5, r4, r8, lsr #7
   1ff58:	andeq	r0, r3, lr, ror #20
   1ff5c:	andeq	r5, r4, r6, ror #3
   1ff60:	andeq	r9, r3, sp, asr #1
   1ff64:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ff68:	sub	sp, sp, #492	; 0x1ec
   1ff6c:	mov	r6, r1
   1ff70:	mov	r2, #220	; 0xdc
   1ff74:	mov	r1, #0
   1ff78:	mov	r4, r0
   1ff7c:	add	r5, sp, #268	; 0x10c
   1ff80:	add	r0, sp, #48	; 0x30
   1ff84:	bl	13fec <memset@plt>
   1ff88:	mov	r2, #220	; 0xdc
   1ff8c:	mov	r1, #0
   1ff90:	mov	r0, r5
   1ff94:	bl	13fec <memset@plt>
   1ff98:	add	r1, sp, #48	; 0x30
   1ff9c:	mov	r0, r6
   1ffa0:	bl	1f610 <__flatcc_fb_gen_c_json_parser@@Base+0x15d4>
   1ffa4:	ldr	r7, [r6, #96]	; 0x60
   1ffa8:	mov	r1, #4
   1ffac:	mov	r0, r7
   1ffb0:	ldr	r8, [r6, #100]	; 0x64
   1ffb4:	bl	13ee4 <calloc@plt>
   1ffb8:	orrs	r3, r7, r8
   1ffbc:	movne	r3, #1
   1ffc0:	moveq	r3, #0
   1ffc4:	cmp	r0, #0
   1ffc8:	movne	r3, #0
   1ffcc:	andeq	r3, r3, #1
   1ffd0:	cmp	r3, #0
   1ffd4:	moveq	r7, r0
   1ffd8:	ldreq	r3, [r6, #20]
   1ffdc:	beq	20020 <__flatcc_fb_gen_c_json_parser@@Base+0x1fe4>
   1ffe0:	ldr	r0, [pc, #1536]	; 205e8 <__flatcc_fb_gen_c_json_parser@@Base+0x25ac>
   1ffe4:	ldr	r3, [pc, #1536]	; 205ec <__flatcc_fb_gen_c_json_parser@@Base+0x25b0>
   1ffe8:	ldr	r2, [pc, #1536]	; 205f0 <__flatcc_fb_gen_c_json_parser@@Base+0x25b4>
   1ffec:	str	r3, [sp]
   1fff0:	ldr	r1, [pc, #1532]	; 205f4 <__flatcc_fb_gen_c_json_parser@@Base+0x25b8>
   1fff4:	ldr	r3, [pc, #1532]	; 205f8 <__flatcc_fb_gen_c_json_parser@@Base+0x25bc>
   1fff8:	ldr	r0, [r0]
   1fffc:	bl	13fd4 <fprintf@plt>
   20000:	ldr	r3, [pc, #1524]	; 205fc <__flatcc_fb_gen_c_json_parser@@Base+0x25c0>
   20004:	ldr	r2, [pc, #1516]	; 205f8 <__flatcc_fb_gen_c_json_parser@@Base+0x25bc>
   20008:	ldr	r1, [pc, #1504]	; 205f0 <__flatcc_fb_gen_c_json_parser@@Base+0x25b4>
   2000c:	ldr	r0, [pc, #1516]	; 20600 <__flatcc_fb_gen_c_json_parser@@Base+0x25c4>
   20010:	bl	14094 <__assert_fail@plt>
   20014:	ldr	r2, [r3, #96]	; 0x60
   20018:	str	r3, [r7, r2, lsl #2]
   2001c:	ldr	r3, [r3]
   20020:	cmp	r3, #0
   20024:	bne	20014 <__flatcc_fb_gen_c_json_parser@@Base+0x1fd8>
   20028:	add	r2, sp, #48	; 0x30
   2002c:	ldr	r1, [pc, #1488]	; 20604 <__flatcc_fb_gen_c_json_parser@@Base+0x25c8>
   20030:	ldr	r0, [r4]
   20034:	bl	13fd4 <fprintf@plt>
   20038:	sub	r8, r7, #4
   2003c:	mov	r2, #0
   20040:	mov	r3, #0
   20044:	strd	r2, [sp, #40]	; 0x28
   20048:	ldrd	r0, [sp, #40]	; 0x28
   2004c:	ldrd	r2, [r6, #96]	; 0x60
   20050:	cmp	r1, r3
   20054:	cmpeq	r0, r2
   20058:	bcc	20098 <__flatcc_fb_gen_c_json_parser@@Base+0x205c>
   2005c:	ldr	r1, [r4]
   20060:	ldr	r0, [pc, #1440]	; 20608 <__flatcc_fb_gen_c_json_parser@@Base+0x25cc>
   20064:	bl	14070 <fputs@plt>
   20068:	add	r3, sp, #48	; 0x30
   2006c:	mov	r2, r3
   20070:	ldr	r1, [pc, #1428]	; 2060c <__flatcc_fb_gen_c_json_parser@@Base+0x25d0>
   20074:	ldr	r0, [r4]
   20078:	bl	13fd4 <fprintf@plt>
   2007c:	cmp	r7, #0
   20080:	beq	2008c <__flatcc_fb_gen_c_json_parser@@Base+0x2050>
   20084:	mov	r0, r7
   20088:	bl	13f14 <free@plt>
   2008c:	mov	r0, #0
   20090:	add	sp, sp, #492	; 0x1ec
   20094:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20098:	ldr	r9, [r8, #4]!
   2009c:	cmp	r9, #0
   200a0:	beq	20158 <__flatcc_fb_gen_c_json_parser@@Base+0x211c>
   200a4:	ldrh	r2, [r9, #72]	; 0x48
   200a8:	tst	r2, #4
   200ac:	bne	20158 <__flatcc_fb_gen_c_json_parser@@Base+0x211c>
   200b0:	ldr	r1, [r4]
   200b4:	ldr	r0, [pc, #1364]	; 20610 <__flatcc_fb_gen_c_json_parser@@Base+0x25d4>
   200b8:	bl	14070 <fputs@plt>
   200bc:	ldrh	r2, [r9, #24]
   200c0:	sub	r2, r2, #7
   200c4:	cmp	r2, #8
   200c8:	ldrls	pc, [pc, r2, lsl #2]
   200cc:	b	20158 <__flatcc_fb_gen_c_json_parser@@Base+0x211c>
   200d0:	strdeq	r0, [r2], -ip
   200d4:	strdeq	r0, [r2], -r4
   200d8:	strdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   200dc:	andeq	r0, r2, r4, asr #5
   200e0:	andeq	r0, r2, r8, asr r1
   200e4:	andeq	r0, r2, r8, asr r1
   200e8:	andeq	r0, r2, r8, asr r1
   200ec:	andeq	r0, r2, r4, lsl r3
   200f0:			; <UNDEFINED> instruction: 0x000204b8
   200f4:	ldr	r0, [r9, #16]
   200f8:	bl	1f620 <__flatcc_fb_gen_c_json_parser@@Base+0x15e4>
   200fc:	ldrh	r1, [r9, #56]	; 0x38
   20100:	sub	r1, r1, #3
   20104:	mov	r2, r0
   20108:	cmp	r1, #3
   2010c:	ldrls	pc, [pc, r1, lsl #2]
   20110:	b	201d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2194>
   20114:	muleq	r2, r8, r1
   20118:	andeq	r0, r2, r8, ror #2
   2011c:	andeq	r0, r2, r4, lsr #2
   20120:	andeq	r0, r2, r4, lsr #2
   20124:	ldr	r0, [r9, #4]
   20128:	ldrd	sl, [r9, #48]	; 0x30
   2012c:	ldr	r1, [r0, #4]
   20130:	strd	sl, [sp, #24]
   20134:	str	r1, [sp, #16]
   20138:	ldr	r0, [r0]
   2013c:	str	r1, [sp, #8]
   20140:	str	r0, [sp, #12]
   20144:	ldrd	r0, [r9, #96]	; 0x60
   20148:	strd	r0, [sp]
   2014c:	ldr	r1, [pc, #1216]	; 20614 <__flatcc_fb_gen_c_json_parser@@Base+0x25d8>
   20150:	ldr	r0, [r4]
   20154:	bl	13fd4 <fprintf@plt>
   20158:	ldrd	r2, [sp, #40]	; 0x28
   2015c:	adds	r2, r2, #1
   20160:	adc	r3, r3, #0
   20164:	b	20044 <__flatcc_fb_gen_c_json_parser@@Base+0x2008>
   20168:	ldr	r0, [r9, #4]
   2016c:	ldrd	sl, [r9, #48]	; 0x30
   20170:	ldr	r1, [r0, #4]
   20174:	strd	sl, [sp, #24]
   20178:	str	r1, [sp, #16]
   2017c:	ldr	r0, [r0]
   20180:	str	r1, [sp, #8]
   20184:	str	r0, [sp, #12]
   20188:	ldrd	r0, [r9, #96]	; 0x60
   2018c:	strd	r0, [sp]
   20190:	ldr	r1, [pc, #1152]	; 20618 <__flatcc_fb_gen_c_json_parser@@Base+0x25dc>
   20194:	b	20150 <__flatcc_fb_gen_c_json_parser@@Base+0x2114>
   20198:	vldr	d7, [r9, #48]	; 0x30
   2019c:	ldr	r0, [r9, #4]
   201a0:	ldr	r1, [r0, #4]
   201a4:	vstr	d7, [sp, #24]
   201a8:	str	r1, [sp, #16]
   201ac:	ldr	r0, [r0]
   201b0:	str	r1, [sp, #8]
   201b4:	str	r0, [sp, #12]
   201b8:	ldrd	r0, [r9, #96]	; 0x60
   201bc:	strd	r0, [sp]
   201c0:	ldr	r1, [pc, #1108]	; 2061c <__flatcc_fb_gen_c_json_parser@@Base+0x25e0>
   201c4:	ldr	r0, [r4]
   201c8:	bl	13fd4 <fprintf@plt>
   201cc:	b	20158 <__flatcc_fb_gen_c_json_parser@@Base+0x211c>
   201d0:	ldr	r0, [pc, #1040]	; 205e8 <__flatcc_fb_gen_c_json_parser@@Base+0x25ac>
   201d4:	ldr	r3, [pc, #1092]	; 20620 <__flatcc_fb_gen_c_json_parser@@Base+0x25e4>
   201d8:	ldr	r2, [pc, #1040]	; 205f0 <__flatcc_fb_gen_c_json_parser@@Base+0x25b4>
   201dc:	str	r3, [sp]
   201e0:	ldr	r1, [pc, #1036]	; 205f4 <__flatcc_fb_gen_c_json_parser@@Base+0x25b8>
   201e4:	ldr	r3, [pc, #1080]	; 20624 <__flatcc_fb_gen_c_json_parser@@Base+0x25e8>
   201e8:	ldr	r0, [r0]
   201ec:	bl	13fd4 <fprintf@plt>
   201f0:	ldr	r3, [pc, #1028]	; 205fc <__flatcc_fb_gen_c_json_parser@@Base+0x25c0>
   201f4:	ldr	r2, [pc, #1064]	; 20624 <__flatcc_fb_gen_c_json_parser@@Base+0x25e8>
   201f8:	b	20008 <__flatcc_fb_gen_c_json_parser@@Base+0x1fcc>
   201fc:	ldrh	r1, [r9, #72]	; 0x48
   20200:	tst	r1, #3072	; 0xc00
   20204:	beq	20240 <__flatcc_fb_gen_c_json_parser@@Base+0x2204>
   20208:	ldr	ip, [r9, #4]
   2020c:	lsr	r1, r1, #10
   20210:	eor	r1, r1, #1
   20214:	ldr	r0, [ip, #4]
   20218:	and	r1, r1, #1
   2021c:	ldrd	r2, [r9, #96]	; 0x60
   20220:	str	r1, [sp, #12]
   20224:	str	r0, [sp, #8]
   20228:	ldr	r1, [ip]
   2022c:	stm	sp, {r0, r1}
   20230:	ldr	r1, [pc, #1008]	; 20628 <__flatcc_fb_gen_c_json_parser@@Base+0x25ec>
   20234:	ldr	r0, [r4]
   20238:	bl	13fd4 <fprintf@plt>
   2023c:	b	20158 <__flatcc_fb_gen_c_json_parser@@Base+0x211c>
   20240:	ldr	r0, [r9, #104]	; 0x68
   20244:	cmp	r0, #0
   20248:	beq	20288 <__flatcc_fb_gen_c_json_parser@@Base+0x224c>
   2024c:	mov	r1, r5
   20250:	bl	1f610 <__flatcc_fb_gen_c_json_parser@@Base+0x15d4>
   20254:	ldr	r2, [r9, #104]	; 0x68
   20258:	ldr	r1, [r9, #4]
   2025c:	ldrh	r2, [r2, #8]
   20260:	ldr	r0, [r1, #4]
   20264:	cmp	r2, #0
   20268:	ldrd	r2, [r9, #96]	; 0x60
   2026c:	str	r5, [sp, #12]
   20270:	str	r0, [sp, #8]
   20274:	ldr	r1, [r1]
   20278:	stm	sp, {r0, r1}
   2027c:	ldrne	r1, [pc, #936]	; 2062c <__flatcc_fb_gen_c_json_parser@@Base+0x25f0>
   20280:	ldreq	r1, [pc, #936]	; 20630 <__flatcc_fb_gen_c_json_parser@@Base+0x25f4>
   20284:	b	20234 <__flatcc_fb_gen_c_json_parser@@Base+0x21f8>
   20288:	ldr	r0, [r9, #16]
   2028c:	bl	1f620 <__flatcc_fb_gen_c_json_parser@@Base+0x15e4>
   20290:	ldr	r1, [r9, #4]
   20294:	ldr	r2, [r1, #4]
   20298:	str	r2, [sp, #16]
   2029c:	ldr	r1, [r1]
   202a0:	str	r2, [sp, #8]
   202a4:	str	r1, [sp, #12]
   202a8:	ldrd	r2, [r9, #96]	; 0x60
   202ac:	ldr	r1, [pc, #896]	; 20634 <__flatcc_fb_gen_c_json_parser@@Base+0x25f8>
   202b0:	strd	r2, [sp]
   202b4:	mov	r2, r0
   202b8:	ldr	r0, [r4]
   202bc:	bl	13fd4 <fprintf@plt>
   202c0:	b	20158 <__flatcc_fb_gen_c_json_parser@@Base+0x211c>
   202c4:	ldr	r0, [r9, #4]
   202c8:	ldrd	r2, [r9, #96]	; 0x60
   202cc:	ldr	r1, [r0, #4]
   202d0:	str	r1, [sp, #8]
   202d4:	ldr	r0, [r0]
   202d8:	str	r1, [sp]
   202dc:	ldr	r1, [pc, #852]	; 20638 <__flatcc_fb_gen_c_json_parser@@Base+0x25fc>
   202e0:	str	r0, [sp, #4]
   202e4:	ldr	r0, [r4]
   202e8:	bl	13fd4 <fprintf@plt>
   202ec:	b	20158 <__flatcc_fb_gen_c_json_parser@@Base+0x211c>
   202f0:	ldr	r0, [r9, #4]
   202f4:	ldrd	r2, [r9, #96]	; 0x60
   202f8:	ldr	r1, [r0, #4]
   202fc:	str	r1, [sp, #8]
   20300:	ldr	r0, [r0]
   20304:	str	r1, [sp]
   20308:	str	r0, [sp, #4]
   2030c:	ldr	r1, [pc, #808]	; 2063c <__flatcc_fb_gen_c_json_parser@@Base+0x2600>
   20310:	b	202e4 <__flatcc_fb_gen_c_json_parser@@Base+0x22a8>
   20314:	mov	r1, r5
   20318:	ldr	r0, [r9, #16]
   2031c:	bl	1f610 <__flatcc_fb_gen_c_json_parser@@Base+0x15d4>
   20320:	ldr	r2, [r9, #16]
   20324:	ldrh	r1, [r2, #8]
   20328:	cmp	r1, #4
   2032c:	ldrls	pc, [pc, r1, lsl #2]
   20330:	b	2048c <__flatcc_fb_gen_c_json_parser@@Base+0x2450>
   20334:	andeq	r0, r2, r0, lsr r4
   20338:	andeq	r0, r2, r8, lsl #8
   2033c:	andeq	r0, r2, ip, lsl #9
   20340:	andeq	r0, r2, r8, asr #6
   20344:	andeq	r0, r2, r8, asr r4
   20348:	ldr	r0, [r2, #40]	; 0x28
   2034c:	bl	1f620 <__flatcc_fb_gen_c_json_parser@@Base+0x15e4>
   20350:	ldrh	r1, [r9, #56]	; 0x38
   20354:	cmp	r1, #4
   20358:	mov	r2, r0
   2035c:	beq	203a8 <__flatcc_fb_gen_c_json_parser@@Base+0x236c>
   20360:	bcc	203dc <__flatcc_fb_gen_c_json_parser@@Base+0x23a0>
   20364:	cmp	r1, #6
   20368:	bhi	203dc <__flatcc_fb_gen_c_json_parser@@Base+0x23a0>
   2036c:	ldr	r0, [r9, #4]
   20370:	ldr	r1, [r0, #4]
   20374:	str	r5, [sp, #32]
   20378:	ldrd	sl, [r9, #48]	; 0x30
   2037c:	str	r1, [sp, #16]
   20380:	strd	sl, [sp, #24]
   20384:	ldr	r0, [r0]
   20388:	str	r1, [sp, #8]
   2038c:	str	r0, [sp, #12]
   20390:	ldrd	r0, [r9, #96]	; 0x60
   20394:	strd	r0, [sp]
   20398:	ldr	r1, [pc, #672]	; 20640 <__flatcc_fb_gen_c_json_parser@@Base+0x2604>
   2039c:	ldr	r0, [r4]
   203a0:	bl	13fd4 <fprintf@plt>
   203a4:	b	20158 <__flatcc_fb_gen_c_json_parser@@Base+0x211c>
   203a8:	ldr	r0, [r9, #4]
   203ac:	ldr	r1, [r0, #4]
   203b0:	str	r5, [sp, #32]
   203b4:	ldrd	sl, [r9, #48]	; 0x30
   203b8:	str	r1, [sp, #16]
   203bc:	strd	sl, [sp, #24]
   203c0:	ldr	r0, [r0]
   203c4:	str	r1, [sp, #8]
   203c8:	str	r0, [sp, #12]
   203cc:	ldrd	r0, [r9, #96]	; 0x60
   203d0:	strd	r0, [sp]
   203d4:	ldr	r1, [pc, #616]	; 20644 <__flatcc_fb_gen_c_json_parser@@Base+0x2608>
   203d8:	b	2039c <__flatcc_fb_gen_c_json_parser@@Base+0x2360>
   203dc:	ldr	r0, [pc, #516]	; 205e8 <__flatcc_fb_gen_c_json_parser@@Base+0x25ac>
   203e0:	ldr	r3, [pc, #608]	; 20648 <__flatcc_fb_gen_c_json_parser@@Base+0x260c>
   203e4:	ldr	r2, [pc, #516]	; 205f0 <__flatcc_fb_gen_c_json_parser@@Base+0x25b4>
   203e8:	str	r3, [sp]
   203ec:	ldr	r1, [pc, #512]	; 205f4 <__flatcc_fb_gen_c_json_parser@@Base+0x25b8>
   203f0:	ldr	r3, [pc, #596]	; 2064c <__flatcc_fb_gen_c_json_parser@@Base+0x2610>
   203f4:	ldr	r0, [r0]
   203f8:	bl	13fd4 <fprintf@plt>
   203fc:	ldr	r3, [pc, #504]	; 205fc <__flatcc_fb_gen_c_json_parser@@Base+0x25c0>
   20400:	ldr	r2, [pc, #580]	; 2064c <__flatcc_fb_gen_c_json_parser@@Base+0x2610>
   20404:	b	20008 <__flatcc_fb_gen_c_json_parser@@Base+0x1fcc>
   20408:	ldr	r0, [r9, #4]
   2040c:	ldrd	r2, [r9, #96]	; 0x60
   20410:	ldr	r1, [r0, #4]
   20414:	str	r5, [sp, #12]
   20418:	str	r1, [sp, #8]
   2041c:	ldr	r0, [r0]
   20420:	str	r1, [sp]
   20424:	str	r0, [sp, #4]
   20428:	ldr	r1, [pc, #544]	; 20650 <__flatcc_fb_gen_c_json_parser@@Base+0x2614>
   2042c:	b	20234 <__flatcc_fb_gen_c_json_parser@@Base+0x21f8>
   20430:	ldr	r0, [r9, #4]
   20434:	ldrd	r2, [r9, #96]	; 0x60
   20438:	ldr	r1, [r0, #4]
   2043c:	str	r5, [sp, #12]
   20440:	str	r1, [sp, #8]
   20444:	ldr	r0, [r0]
   20448:	str	r1, [sp]
   2044c:	str	r0, [sp, #4]
   20450:	ldr	r1, [pc, #508]	; 20654 <__flatcc_fb_gen_c_json_parser@@Base+0x2618>
   20454:	b	20234 <__flatcc_fb_gen_c_json_parser@@Base+0x21f8>
   20458:	ldr	r0, [r9, #4]
   2045c:	ldrd	r2, [r9, #96]	; 0x60
   20460:	ldr	r1, [r0, #4]
   20464:	str	r5, [sp, #16]
   20468:	str	r1, [sp, #8]
   2046c:	str	r5, [sp, #12]
   20470:	ldr	r0, [r0]
   20474:	str	r1, [sp]
   20478:	ldr	r1, [pc, #472]	; 20658 <__flatcc_fb_gen_c_json_parser@@Base+0x261c>
   2047c:	str	r0, [sp, #4]
   20480:	ldr	r0, [r4]
   20484:	bl	13fd4 <fprintf@plt>
   20488:	b	20158 <__flatcc_fb_gen_c_json_parser@@Base+0x211c>
   2048c:	ldr	r0, [pc, #340]	; 205e8 <__flatcc_fb_gen_c_json_parser@@Base+0x25ac>
   20490:	ldr	r3, [pc, #452]	; 2065c <__flatcc_fb_gen_c_json_parser@@Base+0x2620>
   20494:	ldr	r2, [pc, #340]	; 205f0 <__flatcc_fb_gen_c_json_parser@@Base+0x25b4>
   20498:	str	r3, [sp]
   2049c:	ldr	r1, [pc, #336]	; 205f4 <__flatcc_fb_gen_c_json_parser@@Base+0x25b8>
   204a0:	mov	r3, #504	; 0x1f8
   204a4:	ldr	r0, [r0]
   204a8:	bl	13fd4 <fprintf@plt>
   204ac:	ldr	r3, [pc, #328]	; 205fc <__flatcc_fb_gen_c_json_parser@@Base+0x25c0>
   204b0:	mov	r2, #504	; 0x1f8
   204b4:	b	20008 <__flatcc_fb_gen_c_json_parser@@Base+0x1fcc>
   204b8:	mov	r1, r5
   204bc:	ldr	r0, [r9, #16]
   204c0:	bl	1f610 <__flatcc_fb_gen_c_json_parser@@Base+0x15d4>
   204c4:	ldr	r2, [r9, #16]
   204c8:	ldrh	r2, [r2, #8]
   204cc:	cmp	r2, #4
   204d0:	ldrls	pc, [pc, r2, lsl #2]
   204d4:	b	205bc <__flatcc_fb_gen_c_json_parser@@Base+0x2580>
   204d8:	andeq	r0, r2, ip, ror #9
   204dc:	andeq	r0, r2, r4, asr r5
   204e0:			; <UNDEFINED> instruction: 0x000205bc
   204e4:	andeq	r0, r2, r4, lsl r5
   204e8:	muleq	r2, r0, r5
   204ec:	ldr	r0, [r9, #4]
   204f0:	ldrd	r2, [r9, #96]	; 0x60
   204f4:	ldr	r1, [r0, #4]
   204f8:	str	r5, [sp, #12]
   204fc:	str	r1, [sp, #8]
   20500:	ldr	r0, [r0]
   20504:	str	r1, [sp]
   20508:	str	r0, [sp, #4]
   2050c:	ldr	r1, [pc, #332]	; 20660 <__flatcc_fb_gen_c_json_parser@@Base+0x2624>
   20510:	b	20234 <__flatcc_fb_gen_c_json_parser@@Base+0x21f8>
   20514:	ldr	r0, [r9, #16]
   20518:	bl	1f620 <__flatcc_fb_gen_c_json_parser@@Base+0x15e4>
   2051c:	ldr	r1, [r9, #4]
   20520:	ldrd	sl, [r6, #112]	; 0x70
   20524:	ldr	r2, [r1, #4]
   20528:	str	r5, [sp, #32]
   2052c:	strd	sl, [sp, #24]
   20530:	str	r2, [sp, #16]
   20534:	ldr	r1, [r1]
   20538:	str	r2, [sp, #8]
   2053c:	str	r1, [sp, #12]
   20540:	ldrd	r2, [r9, #96]	; 0x60
   20544:	ldr	r1, [pc, #280]	; 20664 <__flatcc_fb_gen_c_json_parser@@Base+0x2628>
   20548:	strd	r2, [sp]
   2054c:	mov	r2, r0
   20550:	b	2039c <__flatcc_fb_gen_c_json_parser@@Base+0x2360>
   20554:	ldr	ip, [r9, #4]
   20558:	ldrd	r0, [r9, #96]	; 0x60
   2055c:	ldr	r2, [ip, #4]
   20560:	str	r5, [sp, #24]
   20564:	ldrd	sl, [r9, #88]	; 0x58
   20568:	str	r2, [sp, #8]
   2056c:	strd	sl, [sp, #16]
   20570:	ldr	r3, [ip]
   20574:	stm	sp, {r2, r3}
   20578:	mov	r2, r0
   2057c:	mov	r3, r1
   20580:	ldr	r0, [r4]
   20584:	ldr	r1, [pc, #220]	; 20668 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   20588:	bl	13fd4 <fprintf@plt>
   2058c:	b	20158 <__flatcc_fb_gen_c_json_parser@@Base+0x211c>
   20590:	ldr	r0, [r9, #4]
   20594:	ldrd	r2, [r9, #96]	; 0x60
   20598:	ldr	r1, [r0, #4]
   2059c:	str	r5, [sp, #16]
   205a0:	str	r1, [sp, #8]
   205a4:	str	r5, [sp, #12]
   205a8:	ldr	r0, [r0]
   205ac:	str	r1, [sp]
   205b0:	str	r0, [sp, #4]
   205b4:	ldr	r1, [pc, #176]	; 2066c <__flatcc_fb_gen_c_json_parser@@Base+0x2630>
   205b8:	b	20480 <__flatcc_fb_gen_c_json_parser@@Base+0x2444>
   205bc:	ldr	r0, [pc, #36]	; 205e8 <__flatcc_fb_gen_c_json_parser@@Base+0x25ac>
   205c0:	ldr	r3, [pc, #168]	; 20670 <__flatcc_fb_gen_c_json_parser@@Base+0x2634>
   205c4:	ldr	r2, [pc, #36]	; 205f0 <__flatcc_fb_gen_c_json_parser@@Base+0x25b4>
   205c8:	str	r3, [sp]
   205cc:	ldr	r1, [pc, #32]	; 205f4 <__flatcc_fb_gen_c_json_parser@@Base+0x25b8>
   205d0:	ldr	r3, [pc, #156]	; 20674 <__flatcc_fb_gen_c_json_parser@@Base+0x2638>
   205d4:	ldr	r0, [r0]
   205d8:	bl	13fd4 <fprintf@plt>
   205dc:	ldr	r3, [pc, #24]	; 205fc <__flatcc_fb_gen_c_json_parser@@Base+0x25c0>
   205e0:	ldr	r2, [pc, #140]	; 20674 <__flatcc_fb_gen_c_json_parser@@Base+0x2638>
   205e4:	b	20008 <__flatcc_fb_gen_c_json_parser@@Base+0x1fcc>
   205e8:	strheq	fp, [r5], -r0
   205ec:	andeq	r5, r4, r4, ror #18
   205f0:	andeq	r5, r4, r8, lsr #7
   205f4:	andeq	r0, r3, lr, ror #20
   205f8:	andeq	r0, r0, r9, ror #2
   205fc:	andeq	r5, r4, r4, lsl #4
   20600:	andeq	r9, r3, sp, asr #1
   20604:	andeq	r5, r4, lr, lsl #19
   20608:	andeq	r6, r4, sl, ror #2
   2060c:	muleq	r4, sl, r0
   20610:	strdeq	r5, [r4], -r8
   20614:	strdeq	r5, [r4], -lr
   20618:	andeq	r5, r4, lr, lsr sl
   2061c:	andeq	r5, r4, lr, ror sl
   20620:	andeq	r3, r4, sp, ror r8
   20624:	muleq	r0, r6, r1
   20628:			; <UNDEFINED> instruction: 0x00045abd
   2062c:	andeq	r5, r4, sl, ror #22
   20630:	andeq	r5, r4, ip, lsl #22
   20634:	andeq	r5, r4, sl, asr #23
   20638:	andeq	r5, r4, fp, lsl #24
   2063c:	andeq	r5, r4, r9, asr #24
   20640:	andeq	r5, r4, lr, lsl #25
   20644:	andeq	r5, r4, r7, ror #25
   20648:	andeq	r5, r4, r0, asr #26
   2064c:	andeq	r0, r0, r3, ror #3
   20650:	andeq	r5, r4, r8, ror sp
   20654:	andeq	r5, r4, ip, asr #27
   20658:	andeq	r5, r4, lr, lsl lr
   2065c:	andeq	r5, r4, sl, lsl #29
   20660:	andeq	r5, r4, r8, asr #29
   20664:	andeq	r5, r4, r1, lsr #30
   20668:	andeq	r5, r4, r1, lsl #31
   2066c:	andeq	r5, r4, r2, ror #31
   20670:	andeq	r6, r4, r5, asr r0
   20674:	andeq	r0, r0, pc, lsl r2

00020678 <__flatcc_fb_gen_c_json_printer@@Base>:
   20678:	ldr	r3, [r0, #208]	; 0xd0
   2067c:	push	{r4, r5, r6, r7, r8, r9, lr}
   20680:	mov	r4, r0
   20684:	ldr	r3, [r3, #164]	; 0xa4
   20688:	sub	sp, sp, #236	; 0xec
   2068c:	mov	r2, r3
   20690:	ldr	r1, [pc, #884]	; 20a0c <__flatcc_fb_gen_c_json_printer@@Base+0x394>
   20694:	ldr	r0, [r0, #204]	; 0xcc
   20698:	bl	13fd4 <fprintf@plt>
   2069c:	ldr	r1, [r4, #204]	; 0xcc
   206a0:	ldr	r0, [pc, #872]	; 20a10 <__flatcc_fb_gen_c_json_printer@@Base+0x398>
   206a4:	bl	14070 <fputs@plt>
   206a8:	ldr	r1, [r4, #204]	; 0xcc
   206ac:	ldr	r0, [pc, #864]	; 20a14 <__flatcc_fb_gen_c_json_printer@@Base+0x39c>
   206b0:	bl	14070 <fputs@plt>
   206b4:	ldr	r2, [pc, #860]	; 20a18 <__flatcc_fb_gen_c_json_printer@@Base+0x3a0>
   206b8:	ldr	r1, [pc, #860]	; 20a1c <__flatcc_fb_gen_c_json_printer@@Base+0x3a4>
   206bc:	mov	r0, r4
   206c0:	bl	14f24 <__flatcc_fb_gen_c_includes@@Base>
   206c4:	ldr	r3, [r4, #212]	; 0xd4
   206c8:	ldr	r3, [r3, #140]	; 0x8c
   206cc:	cmp	r3, #0
   206d0:	beq	206e0 <__flatcc_fb_gen_c_json_printer@@Base+0x68>
   206d4:	ldr	r1, [r4, #204]	; 0xcc
   206d8:	ldr	r0, [pc, #832]	; 20a20 <__flatcc_fb_gen_c_json_printer@@Base+0x3a8>
   206dc:	bl	14070 <fputs@plt>
   206e0:	ldr	r1, [r4, #204]	; 0xcc
   206e4:	mov	r0, #10
   206e8:	bl	14034 <fputc@plt>
   206ec:	ldr	r3, [r4, #208]	; 0xd0
   206f0:	mov	r2, #220	; 0xdc
   206f4:	mov	r1, #0
   206f8:	ldr	r5, [r3, #52]	; 0x34
   206fc:	add	r0, sp, #12
   20700:	bl	13fec <memset@plt>
   20704:	cmp	r5, #0
   20708:	beq	20738 <__flatcc_fb_gen_c_json_printer@@Base+0xc0>
   2070c:	ldrh	r3, [r5, #8]
   20710:	cmp	r3, #1
   20714:	bhi	20738 <__flatcc_fb_gen_c_json_printer@@Base+0xc0>
   20718:	ldr	r1, [r4, #204]	; 0xcc
   2071c:	ldr	r0, [pc, #768]	; 20a24 <__flatcc_fb_gen_c_json_printer@@Base+0x3ac>
   20720:	bl	14070 <fputs@plt>
   20724:	ldr	r3, [r4, #208]	; 0xd0
   20728:	ldr	r1, [pc, #760]	; 20a28 <__flatcc_fb_gen_c_json_printer@@Base+0x3b0>
   2072c:	ldr	r0, [r4, #204]	; 0xcc
   20730:	ldr	r2, [r3, #160]	; 0xa0
   20734:	bl	13fd4 <fprintf@plt>
   20738:	ldr	r3, [r4, #208]	; 0xd0
   2073c:	ldr	r6, [pc, #744]	; 20a2c <__flatcc_fb_gen_c_json_printer@@Base+0x3b4>
   20740:	ldr	r7, [pc, #744]	; 20a30 <__flatcc_fb_gen_c_json_printer@@Base+0x3b8>
   20744:	ldr	r5, [r3, #40]	; 0x28
   20748:	ldr	r8, [pc, #740]	; 20a34 <__flatcc_fb_gen_c_json_printer@@Base+0x3bc>
   2074c:	cmp	r5, #0
   20750:	bne	2087c <__flatcc_fb_gen_c_json_printer@@Base+0x204>
   20754:	ldr	r1, [r4, #204]	; 0xcc
   20758:	mov	r0, #10
   2075c:	bl	14034 <fputc@plt>
   20760:	ldr	r3, [r4, #208]	; 0xd0
   20764:	ldr	r5, [r3, #40]	; 0x28
   20768:	cmp	r5, #0
   2076c:	bne	208f4 <__flatcc_fb_gen_c_json_printer@@Base+0x27c>
   20770:	ldr	r3, [r4, #208]	; 0xd0
   20774:	ldr	r8, [pc, #700]	; 20a38 <__flatcc_fb_gen_c_json_printer@@Base+0x3c0>
   20778:	ldr	r9, [pc, #700]	; 20a3c <__flatcc_fb_gen_c_json_printer@@Base+0x3c4>
   2077c:	ldr	r5, [r3, #40]	; 0x28
   20780:	add	r7, r4, #204	; 0xcc
   20784:	cmp	r5, #0
   20788:	bne	20914 <__flatcc_fb_gen_c_json_printer@@Base+0x29c>
   2078c:	ldr	r3, [r4, #208]	; 0xd0
   20790:	add	r6, r4, #204	; 0xcc
   20794:	ldr	r5, [r3, #40]	; 0x28
   20798:	cmp	r5, #0
   2079c:	bne	209bc <__flatcc_fb_gen_c_json_printer@@Base+0x344>
   207a0:	ldr	r3, [r4, #208]	; 0xd0
   207a4:	add	r6, r4, #204	; 0xcc
   207a8:	ldr	r5, [r3, #40]	; 0x28
   207ac:	cmp	r5, #0
   207b0:	bne	209dc <__flatcc_fb_gen_c_json_printer@@Base+0x364>
   207b4:	ldr	r3, [r4, #208]	; 0xd0
   207b8:	ldr	r6, [r3, #52]	; 0x34
   207bc:	cmp	r6, #0
   207c0:	beq	20840 <__flatcc_fb_gen_c_json_printer@@Base+0x1c8>
   207c4:	ldrh	r3, [r6, #8]
   207c8:	cmp	r3, #1
   207cc:	bhi	20840 <__flatcc_fb_gen_c_json_printer@@Base+0x1c8>
   207d0:	mov	r2, #220	; 0xdc
   207d4:	mov	r1, r5
   207d8:	add	r0, sp, #12
   207dc:	bl	13fec <memset@plt>
   207e0:	add	r1, sp, #12
   207e4:	mov	r0, r6
   207e8:	bl	1f610 <__flatcc_fb_gen_c_json_parser@@Base+0x15d4>
   207ec:	ldr	r3, [r4, #208]	; 0xd0
   207f0:	ldr	r1, [pc, #584]	; 20a40 <__flatcc_fb_gen_c_json_printer@@Base+0x3c8>
   207f4:	ldr	r0, [r4, #204]	; 0xcc
   207f8:	ldr	r2, [r3, #160]	; 0xa0
   207fc:	bl	13fd4 <fprintf@plt>
   20800:	add	r2, sp, #12
   20804:	ldr	r1, [pc, #568]	; 20a44 <__flatcc_fb_gen_c_json_printer@@Base+0x3cc>
   20808:	ldr	r0, [r4, #204]	; 0xcc
   2080c:	bl	13fd4 <fprintf@plt>
   20810:	ldr	r2, [r4, #208]	; 0xd0
   20814:	ldrh	r3, [r2, #16]
   20818:	cmp	r3, #2
   2081c:	bne	209fc <__flatcc_fb_gen_c_json_printer@@Base+0x384>
   20820:	ldr	r3, [r2, #8]
   20824:	ldr	r1, [pc, #540]	; 20a48 <__flatcc_fb_gen_c_json_printer@@Base+0x3d0>
   20828:	ldr	r2, [r2, #12]
   2082c:	ldr	r0, [r4, #204]	; 0xcc
   20830:	bl	13fd4 <fprintf@plt>
   20834:	ldr	r1, [r4, #204]	; 0xcc
   20838:	ldr	r0, [pc, #524]	; 20a4c <__flatcc_fb_gen_c_json_printer@@Base+0x3d4>
   2083c:	bl	14070 <fputs@plt>
   20840:	ldr	r3, [r4, #212]	; 0xd4
   20844:	ldr	r3, [r3, #140]	; 0x8c
   20848:	cmp	r3, #0
   2084c:	beq	2085c <__flatcc_fb_gen_c_json_printer@@Base+0x1e4>
   20850:	ldr	r1, [r4, #204]	; 0xcc
   20854:	ldr	r0, [pc, #500]	; 20a50 <__flatcc_fb_gen_c_json_printer@@Base+0x3d8>
   20858:	bl	14070 <fputs@plt>
   2085c:	ldr	r3, [r4, #208]	; 0xd0
   20860:	ldr	r1, [pc, #492]	; 20a54 <__flatcc_fb_gen_c_json_printer@@Base+0x3dc>
   20864:	ldr	r0, [r4, #204]	; 0xcc
   20868:	ldr	r2, [r3, #164]	; 0xa4
   2086c:	bl	13fd4 <fprintf@plt>
   20870:	mov	r0, #0
   20874:	add	sp, sp, #236	; 0xec
   20878:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2087c:	ldrh	r3, [r5, #8]
   20880:	cmp	r3, #1
   20884:	beq	208dc <__flatcc_fb_gen_c_json_printer@@Base+0x264>
   20888:	bcc	208bc <__flatcc_fb_gen_c_json_printer@@Base+0x244>
   2088c:	cmp	r3, #4
   20890:	bne	208b4 <__flatcc_fb_gen_c_json_printer@@Base+0x23c>
   20894:	add	r1, sp, #12
   20898:	mov	r0, r5
   2089c:	bl	1f610 <__flatcc_fb_gen_c_json_parser@@Base+0x15d4>
   208a0:	add	r3, sp, #12
   208a4:	mov	r2, r3
   208a8:	mov	r1, r8
   208ac:	ldr	r0, [r4, #204]	; 0xcc
   208b0:	bl	13fd4 <fprintf@plt>
   208b4:	ldr	r5, [r5]
   208b8:	b	2074c <__flatcc_fb_gen_c_json_printer@@Base+0xd4>
   208bc:	add	r1, sp, #12
   208c0:	mov	r0, r5
   208c4:	bl	1f610 <__flatcc_fb_gen_c_json_parser@@Base+0x15d4>
   208c8:	add	r2, sp, #12
   208cc:	mov	r1, r7
   208d0:	ldr	r0, [r4, #204]	; 0xcc
   208d4:	bl	13fd4 <fprintf@plt>
   208d8:	b	208b4 <__flatcc_fb_gen_c_json_printer@@Base+0x23c>
   208dc:	add	r1, sp, #12
   208e0:	mov	r0, r5
   208e4:	bl	1f610 <__flatcc_fb_gen_c_json_parser@@Base+0x15d4>
   208e8:	add	r2, sp, #12
   208ec:	mov	r1, r6
   208f0:	b	208d0 <__flatcc_fb_gen_c_json_printer@@Base+0x258>
   208f4:	ldrh	r3, [r5, #8]
   208f8:	cmp	r3, #3
   208fc:	bne	2090c <__flatcc_fb_gen_c_json_printer@@Base+0x294>
   20900:	mov	r1, r5
   20904:	mov	r0, r4
   20908:	bl	1f734 <__flatcc_fb_gen_c_json_parser@@Base+0x16f8>
   2090c:	ldr	r5, [r5]
   20910:	b	20768 <__flatcc_fb_gen_c_json_printer@@Base+0xf0>
   20914:	ldrh	r3, [r5, #8]
   20918:	cmp	r3, #4
   2091c:	bne	2097c <__flatcc_fb_gen_c_json_printer@@Base+0x304>
   20920:	mov	r2, #220	; 0xdc
   20924:	mov	r1, #0
   20928:	add	r0, sp, #12
   2092c:	bl	13fec <memset@plt>
   20930:	add	r1, sp, #12
   20934:	mov	r0, r5
   20938:	bl	1f610 <__flatcc_fb_gen_c_json_parser@@Base+0x15d4>
   2093c:	add	r2, sp, #12
   20940:	mov	r1, r8
   20944:	ldr	r0, [r4, #204]	; 0xcc
   20948:	bl	13fd4 <fprintf@plt>
   2094c:	ldr	r6, [r5, #20]
   20950:	cmp	r6, #0
   20954:	bne	20984 <__flatcc_fb_gen_c_json_printer@@Base+0x30c>
   20958:	ldr	r1, [r4, #204]	; 0xcc
   2095c:	ldr	r0, [pc, #244]	; 20a58 <__flatcc_fb_gen_c_json_printer@@Base+0x3e0>
   20960:	bl	14070 <fputs@plt>
   20964:	ldr	r1, [r4, #204]	; 0xcc
   20968:	ldr	r0, [pc, #236]	; 20a5c <__flatcc_fb_gen_c_json_printer@@Base+0x3e4>
   2096c:	bl	14070 <fputs@plt>
   20970:	mov	r1, r5
   20974:	mov	r0, r7
   20978:	bl	1fdc8 <__flatcc_fb_gen_c_json_parser@@Base+0x1d8c>
   2097c:	ldr	r5, [r5]
   20980:	b	20784 <__flatcc_fb_gen_c_json_printer@@Base+0x10c>
   20984:	ldrh	r3, [r6, #24]
   20988:	cmp	r3, #0
   2098c:	beq	209b4 <__flatcc_fb_gen_c_json_printer@@Base+0x33c>
   20990:	ldr	r2, [r6, #4]
   20994:	mov	r1, r9
   20998:	ldr	r0, [r4, #204]	; 0xcc
   2099c:	ldr	r3, [r2, #4]
   209a0:	str	r3, [sp, #4]
   209a4:	ldr	r2, [r2]
   209a8:	str	r2, [sp]
   209ac:	ldr	r2, [r6, #48]	; 0x30
   209b0:	bl	13fd4 <fprintf@plt>
   209b4:	ldr	r6, [r6]
   209b8:	b	20950 <__flatcc_fb_gen_c_json_printer@@Base+0x2d8>
   209bc:	ldrh	r3, [r5, #8]
   209c0:	cmp	r3, #1
   209c4:	bne	209d4 <__flatcc_fb_gen_c_json_printer@@Base+0x35c>
   209c8:	mov	r1, r5
   209cc:	mov	r0, r6
   209d0:	bl	1fc0c <__flatcc_fb_gen_c_json_parser@@Base+0x1bd0>
   209d4:	ldr	r5, [r5]
   209d8:	b	20798 <__flatcc_fb_gen_c_json_printer@@Base+0x120>
   209dc:	ldrh	r3, [r5, #8]
   209e0:	cmp	r3, #0
   209e4:	bne	209f4 <__flatcc_fb_gen_c_json_printer@@Base+0x37c>
   209e8:	mov	r1, r5
   209ec:	mov	r0, r6
   209f0:	bl	1ff64 <__flatcc_fb_gen_c_json_parser@@Base+0x1f28>
   209f4:	ldr	r5, [r5]
   209f8:	b	207ac <__flatcc_fb_gen_c_json_printer@@Base+0x134>
   209fc:	ldr	r1, [r4, #204]	; 0xcc
   20a00:	ldr	r0, [pc, #88]	; 20a60 <__flatcc_fb_gen_c_json_printer@@Base+0x3e8>
   20a04:	bl	14070 <fputs@plt>
   20a08:	b	20834 <__flatcc_fb_gen_c_json_printer@@Base+0x1bc>
   20a0c:	andeq	r6, r4, pc, ror #2
   20a10:	andeq	r1, r3, r4, asr #25
   20a14:	andeq	r6, r4, r4, lsr #3
   20a18:	andeq	r6, r4, sp, asr #3
   20a1c:	andeq	r0, r3, r0, asr r7
   20a20:	ldrdeq	r1, [r3], -r3
   20a24:	ldrdeq	r6, [r4], -sp
   20a28:	andeq	r6, r4, r0, asr #7
   20a2c:	andeq	r6, r4, r8, asr #10
   20a30:	ldrdeq	r6, [r4], -lr
   20a34:	andeq	r6, r4, r8, lsl r4
   20a38:	muleq	r4, r6, r5
   20a3c:	andeq	r6, r4, r8, lsl #12
   20a40:	andeq	r6, r4, r8, lsr #13
   20a44:	strdeq	r6, [r4], -lr
   20a48:			; <UNDEFINED> instruction: 0x000467b4
   20a4c:	andeq	r6, r4, fp, ror #2
   20a50:			; <UNDEFINED> instruction: 0x00037bbd
   20a54:	andeq	r6, r4, r2, asr #15
   20a58:	andeq	r6, r4, r9, asr r6
   20a5c:	andeq	r2, r4, pc, lsl r9
   20a60:			; <UNDEFINED> instruction: 0x000467be
   20a64:	andeq	r0, r0, r0
   20a68:	push	{r4, lr}
   20a6c:	mov	r4, r0
   20a70:	ldr	r0, [r0, #16]
   20a74:	cmp	r0, #0
   20a78:	beq	20a80 <__flatcc_fb_gen_c_json_printer@@Base+0x408>
   20a7c:	bl	13f14 <free@plt>
   20a80:	ldr	r0, [r4, #20]
   20a84:	cmp	r0, #0
   20a88:	beq	20a90 <__flatcc_fb_gen_c_json_printer@@Base+0x418>
   20a8c:	bl	13f14 <free@plt>
   20a90:	ldr	r0, [r4, #24]
   20a94:	cmp	r0, #0
   20a98:	beq	20aa0 <__flatcc_fb_gen_c_json_printer@@Base+0x428>
   20a9c:	bl	13f14 <free@plt>
   20aa0:	mov	r0, r4
   20aa4:	mov	r2, #44	; 0x2c
   20aa8:	mov	r1, #0
   20aac:	pop	{r4, lr}
   20ab0:	b	13fec <memset@plt>
   20ab4:	add	r3, r1, #4
   20ab8:	mov	r2, r0
   20abc:	ldr	r1, [pc, #4]	; 20ac8 <__flatcc_fb_gen_c_json_printer@@Base+0x450>
   20ac0:	mov	r0, r3
   20ac4:	b	22f04 <fb_symbol_table_visit@@Base>
   20ac8:	andeq	r0, r2, r4, ror #21
   20acc:	add	r3, r1, #4
   20ad0:	mov	r2, r0
   20ad4:	ldr	r1, [pc, #4]	; 20ae0 <__flatcc_fb_gen_c_json_printer@@Base+0x468>
   20ad8:	mov	r0, r3
   20adc:	b	22f04 <fb_symbol_table_visit@@Base>
   20ae0:	andeq	r1, r2, r4, asr #3
   20ae4:	ldrh	r3, [r1, #8]
   20ae8:	cmp	r3, #4
   20aec:	bxhi	lr
   20af0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   20af4:	mov	r4, r0
   20af8:	ldr	r0, [r0, #40]	; 0x28
   20afc:	mov	r5, r1
   20b00:	add	r0, r0, #172	; 0xac
   20b04:	ldr	r1, [r1, #16]
   20b08:	bl	229c8 <ptr_set_find_item@@Base>
   20b0c:	cmp	r0, #0
   20b10:	bne	20b6c <__flatcc_fb_gen_c_json_printer@@Base+0x4f4>
   20b14:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   20b18:	ldr	r1, [r8, #4]
   20b1c:	mov	r0, r3
   20b20:	ldr	r6, [r1, #4]
   20b24:	ldr	r1, [r1]
   20b28:	mov	r2, r6
   20b2c:	bl	13f20 <memcpy@plt>
   20b30:	add	r6, r0, r6
   20b34:	add	r3, r6, #1
   20b38:	strb	r9, [r6]
   20b3c:	ldr	r8, [r8]
   20b40:	b	20b90 <__flatcc_fb_gen_c_json_printer@@Base+0x518>
   20b44:	ldr	r3, [r4, #28]
   20b48:	stm	r3, {r5, r7}
   20b4c:	add	r3, r3, #8
   20b50:	str	r3, [r4, #28]
   20b54:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   20b58:	ldr	r3, [r4, #32]
   20b5c:	stm	r3, {r5, r7}
   20b60:	add	r3, r3, #8
   20b64:	str	r3, [r4, #32]
   20b68:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   20b6c:	ldr	r3, [r4]
   20b70:	ldr	r7, [r4, #36]	; 0x24
   20b74:	cmp	r3, #0
   20b78:	moveq	r3, r7
   20b7c:	beq	20b98 <__flatcc_fb_gen_c_json_printer@@Base+0x520>
   20b80:	ldr	r3, [r5, #12]
   20b84:	mov	r9, #46	; 0x2e
   20b88:	ldr	r8, [r3]
   20b8c:	mov	r3, r7
   20b90:	cmp	r8, #0
   20b94:	bne	20b18 <__flatcc_fb_gen_c_json_printer@@Base+0x4a0>
   20b98:	ldr	r1, [r5, #4]
   20b9c:	mov	r0, r3
   20ba0:	ldr	r6, [r1, #4]
   20ba4:	ldr	r1, [r1]
   20ba8:	mov	r2, r6
   20bac:	bl	13f20 <memcpy@plt>
   20bb0:	mov	r1, #0
   20bb4:	add	r2, r0, r6
   20bb8:	add	r3, r2, #1
   20bbc:	strb	r1, [r0, r6]
   20bc0:	str	r3, [r4, #36]	; 0x24
   20bc4:	ldrh	r3, [r5, #8]
   20bc8:	cmp	r3, #4
   20bcc:	ldrls	pc, [pc, r3, lsl #2]
   20bd0:	b	20be8 <__flatcc_fb_gen_c_json_printer@@Base+0x570>
   20bd4:	andeq	r0, r2, r4, asr #22
   20bd8:	andeq	r0, r2, r4, asr #22
   20bdc:	andeq	r0, r2, r8, ror #23
   20be0:	andeq	r0, r2, r8, asr fp
   20be4:	andeq	r0, r2, r8, asr fp
   20be8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   20bec:	push	{r4, r5, r6, lr}
   20bf0:	mov	r2, #8
   20bf4:	ldr	r3, [pc, #40]	; 20c24 <__flatcc_fb_gen_c_json_printer@@Base+0x5ac>
   20bf8:	mov	r5, r0
   20bfc:	mov	r4, r1
   20c00:	bl	14058 <qsort@plt>
   20c04:	mov	r3, #0
   20c08:	cmp	r3, r4
   20c0c:	blt	20c14 <__flatcc_fb_gen_c_json_printer@@Base+0x59c>
   20c10:	pop	{r4, r5, r6, pc}
   20c14:	ldr	r2, [r5, r3, lsl #3]
   20c18:	str	r3, [r2, #124]	; 0x7c
   20c1c:	add	r3, r3, #1
   20c20:	b	20c08 <__flatcc_fb_gen_c_json_printer@@Base+0x590>
   20c24:	andeq	r0, r2, r8, lsr #24
   20c28:	ldr	r1, [r1, #4]
   20c2c:	ldr	r0, [r0, #4]
   20c30:	b	13efc <strcmp@plt>
   20c34:	push	{r4, lr}
   20c38:	subs	r4, r1, #0
   20c3c:	bne	20c48 <__flatcc_fb_gen_c_json_printer@@Base+0x5d0>
   20c40:	mvn	r0, #0
   20c44:	pop	{r4, pc}
   20c48:	mov	r1, #0
   20c4c:	bl	2c970 <flatcc_builder_table_add_offset@@Base>
   20c50:	cmp	r0, #0
   20c54:	beq	20c40 <__flatcc_fb_gen_c_json_printer@@Base+0x5c8>
   20c58:	str	r4, [r0]
   20c5c:	mov	r0, #0
   20c60:	pop	{r4, pc}
   20c64:	push	{r4, lr}
   20c68:	subs	r4, r1, #0
   20c6c:	bne	20c78 <__flatcc_fb_gen_c_json_printer@@Base+0x600>
   20c70:	mvn	r0, #0
   20c74:	pop	{r4, pc}
   20c78:	mov	r1, #1
   20c7c:	bl	2c970 <flatcc_builder_table_add_offset@@Base>
   20c80:	cmp	r0, #0
   20c84:	beq	20c70 <__flatcc_fb_gen_c_json_printer@@Base+0x5f8>
   20c88:	str	r4, [r0]
   20c8c:	mov	r0, #0
   20c90:	pop	{r4, pc}
   20c94:	push	{r4, lr}
   20c98:	subs	r4, r1, #0
   20c9c:	beq	20cbc <__flatcc_fb_gen_c_json_printer@@Base+0x644>
   20ca0:	mov	r3, #1
   20ca4:	mov	r2, r3
   20ca8:	mov	r1, #2
   20cac:	bl	2c7bc <flatcc_builder_table_add@@Base>
   20cb0:	cmp	r0, #0
   20cb4:	beq	20cc4 <__flatcc_fb_gen_c_json_printer@@Base+0x64c>
   20cb8:	strb	r4, [r0]
   20cbc:	mov	r0, #0
   20cc0:	pop	{r4, pc}
   20cc4:	mvn	r0, #0
   20cc8:	pop	{r4, pc}
   20ccc:	push	{r4, lr}
   20cd0:	mov	r4, r0
   20cd4:	bl	2c0fc <flatcc_builder_end_offset_vector@@Base>
   20cd8:	mov	r1, r0
   20cdc:	mov	r0, r4
   20ce0:	pop	{r4, lr}
   20ce4:	b	20c64 <__flatcc_fb_gen_c_json_printer@@Base+0x5ec>
   20ce8:	cmp	r0, #0
   20cec:	push	{r4, r5, r6, lr}
   20cf0:	moveq	r4, r0
   20cf4:	ldrne	r4, [r0, #-4]
   20cf8:	mov	r5, r2
   20cfc:	cmp	r2, r4
   20d00:	movcs	r2, r4
   20d04:	bl	1407c <strncmp@plt>
   20d08:	cmp	r0, #0
   20d0c:	popne	{r4, r5, r6, pc}
   20d10:	cmp	r5, r4
   20d14:	bhi	20d24 <__flatcc_fb_gen_c_json_printer@@Base+0x6ac>
   20d18:	movcc	r0, #1
   20d1c:	movcs	r0, #0
   20d20:	pop	{r4, r5, r6, pc}
   20d24:	mvn	r0, #0
   20d28:	pop	{r4, r5, r6, pc}
   20d2c:	mov	r3, #2
   20d30:	push	{r4, lr}
   20d34:	mov	r2, r3
   20d38:	mov	r4, r1
   20d3c:	mov	r1, #3
   20d40:	bl	2c7bc <flatcc_builder_table_add@@Base>
   20d44:	cmp	r0, #0
   20d48:	strhne	r4, [r0]
   20d4c:	movne	r0, #0
   20d50:	mvneq	r0, #0
   20d54:	pop	{r4, pc}
   20d58:	cmp	r0, #0
   20d5c:	add	r2, r0, r1, lsl #2
   20d60:	beq	20d70 <__flatcc_fb_gen_c_json_printer@@Base+0x6f8>
   20d64:	ldr	r3, [r0, #-4]
   20d68:	cmp	r1, r3
   20d6c:	bcc	20d88 <__flatcc_fb_gen_c_json_printer@@Base+0x710>
   20d70:	push	{r4, lr}
   20d74:	mov	r2, #192	; 0xc0
   20d78:	ldr	r3, [pc, #20]	; 20d94 <__flatcc_fb_gen_c_json_printer@@Base+0x71c>
   20d7c:	ldr	r1, [pc, #20]	; 20d98 <__flatcc_fb_gen_c_json_printer@@Base+0x720>
   20d80:	ldr	r0, [pc, #20]	; 20d9c <__flatcc_fb_gen_c_json_printer@@Base+0x724>
   20d84:	bl	14094 <__assert_fail@plt>
   20d88:	ldr	r0, [r0, r1, lsl #2]
   20d8c:	add	r0, r2, r0
   20d90:	bx	lr
   20d94:	andeq	r6, r4, r8, ror #15
   20d98:	strdeq	r6, [r4], -r7
   20d9c:	andeq	r6, r4, r5, asr r9
   20da0:	cmp	r0, #0
   20da4:	push	{r4, lr}
   20da8:	bne	20dc0 <__flatcc_fb_gen_c_json_printer@@Base+0x748>
   20dac:	ldr	r3, [pc, #84]	; 20e08 <__flatcc_fb_gen_c_json_printer@@Base+0x790>
   20db0:	ldr	r1, [pc, #84]	; 20e0c <__flatcc_fb_gen_c_json_printer@@Base+0x794>
   20db4:	ldr	r0, [pc, #84]	; 20e10 <__flatcc_fb_gen_c_json_printer@@Base+0x798>
   20db8:	mov	r2, #195	; 0xc3
   20dbc:	bl	14094 <__assert_fail@plt>
   20dc0:	ldr	r3, [r0]
   20dc4:	sub	r3, r0, r3
   20dc8:	ldrh	r2, [r3]
   20dcc:	cmp	r2, #5
   20dd0:	bls	20de0 <__flatcc_fb_gen_c_json_printer@@Base+0x768>
   20dd4:	ldrh	r2, [r3, #4]
   20dd8:	cmp	r2, #0
   20ddc:	bne	20df4 <__flatcc_fb_gen_c_json_printer@@Base+0x77c>
   20de0:	ldr	r3, [pc, #32]	; 20e08 <__flatcc_fb_gen_c_json_printer@@Base+0x790>
   20de4:	mov	r2, #195	; 0xc3
   20de8:	ldr	r1, [pc, #28]	; 20e0c <__flatcc_fb_gen_c_json_printer@@Base+0x794>
   20dec:	ldr	r0, [pc, #32]	; 20e14 <__flatcc_fb_gen_c_json_printer@@Base+0x79c>
   20df0:	b	20dbc <__flatcc_fb_gen_c_json_printer@@Base+0x744>
   20df4:	add	r3, r0, r2
   20df8:	ldr	r0, [r0, r2]
   20dfc:	add	r0, r0, #4
   20e00:	add	r0, r3, r0
   20e04:	pop	{r4, pc}
   20e08:	andeq	r6, r4, r0, lsl #16
   20e0c:	strdeq	r6, [r4], -r7
   20e10:	andeq	r6, r4, ip, lsl #19
   20e14:			; <UNDEFINED> instruction: 0x000469b2
   20e18:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   20e1c:	mov	r5, r0
   20e20:	mov	r6, r1
   20e24:	mov	r8, r2
   20e28:	mov	r7, #0
   20e2c:	lsl	r4, r6, #1
   20e30:	cmp	r4, r8
   20e34:	bls	20e3c <__flatcc_fb_gen_c_json_printer@@Base+0x7c4>
   20e38:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   20e3c:	bcs	20e84 <__flatcc_fb_gen_c_json_printer@@Base+0x80c>
   20e40:	mov	r1, r4
   20e44:	mov	r0, r5
   20e48:	bl	20d58 <__flatcc_fb_gen_c_json_printer@@Base+0x6e0>
   20e4c:	bl	20da0 <__flatcc_fb_gen_c_json_printer@@Base+0x728>
   20e50:	add	r9, r4, #1
   20e54:	mov	r1, r9
   20e58:	mov	sl, r0
   20e5c:	mov	r0, r5
   20e60:	bl	20d58 <__flatcc_fb_gen_c_json_printer@@Base+0x6e0>
   20e64:	bl	20da0 <__flatcc_fb_gen_c_json_printer@@Base+0x728>
   20e68:	subs	r1, r0, #0
   20e6c:	moveq	r2, r7
   20e70:	ldrne	r2, [r1, #-4]
   20e74:	mov	r0, sl
   20e78:	bl	20ce8 <__flatcc_fb_gen_c_json_printer@@Base+0x670>
   20e7c:	cmp	r0, #0
   20e80:	movlt	r4, r9
   20e84:	mov	r1, r6
   20e88:	mov	r0, r5
   20e8c:	bl	20d58 <__flatcc_fb_gen_c_json_printer@@Base+0x6e0>
   20e90:	bl	20da0 <__flatcc_fb_gen_c_json_printer@@Base+0x728>
   20e94:	mov	r1, r4
   20e98:	mov	r9, r0
   20e9c:	mov	r0, r5
   20ea0:	bl	20d58 <__flatcc_fb_gen_c_json_printer@@Base+0x6e0>
   20ea4:	bl	20da0 <__flatcc_fb_gen_c_json_printer@@Base+0x728>
   20ea8:	subs	r1, r0, #0
   20eac:	moveq	r2, r7
   20eb0:	ldrne	r2, [r1, #-4]
   20eb4:	mov	r0, r9
   20eb8:	bl	20ce8 <__flatcc_fb_gen_c_json_printer@@Base+0x670>
   20ebc:	cmp	r0, #0
   20ec0:	popge	{r4, r5, r6, r7, r8, r9, sl, pc}
   20ec4:	sub	r3, r6, r4
   20ec8:	ldr	r2, [r5, r6, lsl #2]
   20ecc:	ldr	r1, [r5, r4, lsl #2]
   20ed0:	lsl	r3, r3, #2
   20ed4:	add	r2, r3, r2
   20ed8:	sub	r3, r1, r3
   20edc:	str	r3, [r5, r6, lsl #2]
   20ee0:	str	r2, [r5, r4, lsl #2]
   20ee4:	mov	r6, r4
   20ee8:	b	20e2c <__flatcc_fb_gen_c_json_printer@@Base+0x7b4>
   20eec:	push	{r4, r5, r6, r7, r8, lr}
   20ef0:	mov	r6, r1
   20ef4:	mov	r1, #3
   20ef8:	mov	r4, r0
   20efc:	mov	r5, r2
   20f00:	mov	r7, r3
   20f04:	bl	2b7fc <flatcc_builder_start_table@@Base>
   20f08:	cmp	r0, #0
   20f0c:	bne	20f38 <__flatcc_fb_gen_c_json_printer@@Base+0x8c0>
   20f10:	cmn	r7, #1
   20f14:	beq	20f4c <__flatcc_fb_gen_c_json_printer@@Base+0x8d4>
   20f18:	mov	r3, #4
   20f1c:	mov	r2, r3
   20f20:	mov	r1, #2
   20f24:	mov	r0, r4
   20f28:	bl	2c7bc <flatcc_builder_table_add@@Base>
   20f2c:	cmp	r0, #0
   20f30:	strne	r7, [r0]
   20f34:	bne	20f4c <__flatcc_fb_gen_c_json_printer@@Base+0x8d4>
   20f38:	mov	r0, #0
   20f3c:	pop	{r4, r5, r6, r7, r8, pc}
   20f40:	mov	r0, r4
   20f44:	pop	{r4, r5, r6, r7, r8, lr}
   20f48:	b	2be38 <flatcc_builder_end_table@@Base>
   20f4c:	cmp	r6, #0
   20f50:	beq	20f74 <__flatcc_fb_gen_c_json_printer@@Base+0x8fc>
   20f54:	mov	r3, #1
   20f58:	mov	r2, r3
   20f5c:	mov	r1, #0
   20f60:	mov	r0, r4
   20f64:	bl	2c7bc <flatcc_builder_table_add@@Base>
   20f68:	cmp	r0, #0
   20f6c:	strbne	r6, [r0]
   20f70:	beq	20f38 <__flatcc_fb_gen_c_json_printer@@Base+0x8c0>
   20f74:	cmp	r5, #0
   20f78:	beq	20f9c <__flatcc_fb_gen_c_json_printer@@Base+0x924>
   20f7c:	mov	r3, #1
   20f80:	mov	r2, r3
   20f84:	mov	r1, r3
   20f88:	mov	r0, r4
   20f8c:	bl	2c7bc <flatcc_builder_table_add@@Base>
   20f90:	cmp	r0, #0
   20f94:	strbne	r5, [r0]
   20f98:	beq	20f38 <__flatcc_fb_gen_c_json_printer@@Base+0x8c0>
   20f9c:	mov	r2, #0
   20fa0:	ldr	r1, [pc, #32]	; 20fc8 <__flatcc_fb_gen_c_json_printer@@Base+0x950>
   20fa4:	mov	r0, r4
   20fa8:	bl	2bdb8 <flatcc_builder_check_required@@Base>
   20fac:	cmp	r0, #0
   20fb0:	bne	20f40 <__flatcc_fb_gen_c_json_printer@@Base+0x8c8>
   20fb4:	ldr	r3, [pc, #16]	; 20fcc <__flatcc_fb_gen_c_json_printer@@Base+0x954>
   20fb8:	mov	r2, #23
   20fbc:	ldr	r1, [pc, #12]	; 20fd0 <__flatcc_fb_gen_c_json_printer@@Base+0x958>
   20fc0:	ldr	r0, [pc, #12]	; 20fd4 <__flatcc_fb_gen_c_json_printer@@Base+0x95c>
   20fc4:	bl	14094 <__assert_fail@plt>
   20fc8:	andeq	r6, r4, sl, lsr #16
   20fcc:	andeq	r6, r4, r6, lsl r8
   20fd0:	ldrdeq	r6, [r4], -r3
   20fd4:	andeq	r6, r4, r2, lsr sl
   20fd8:	sub	r2, r2, #2
   20fdc:	cmp	r2, #13
   20fe0:	ldrls	pc, [pc, r2, lsl #2]
   20fe4:	b	21128 <__flatcc_fb_gen_c_json_printer@@Base+0xab0>
   20fe8:	ldrdeq	r1, [r2], -r0
   20fec:	andeq	r1, r2, r8, lsr #2
   20ff0:	andeq	r1, r2, r8, lsr #2
   20ff4:	andeq	r1, r2, r8, lsr #2
   20ff8:	andeq	r1, r2, r8, lsr #2
   20ffc:	andeq	r1, r2, r0, ror r0
   21000:	andeq	r1, r2, r0, lsr #32
   21004:	andeq	r1, r2, r0, lsl #1
   21008:	andeq	r1, r2, r8, lsr #2
   2100c:	andeq	r1, r2, r8, lsr #2
   21010:	andeq	r1, r2, r8, lsr #2
   21014:	andeq	r1, r2, r8, lsr #2
   21018:	andeq	r1, r2, r0, ror #1
   2101c:	muleq	r2, r4, r0
   21020:	mov	r2, #0
   21024:	mov	ip, r1
   21028:	mov	r1, r2
   2102c:	mvn	r3, #0
   21030:	sub	ip, ip, #1
   21034:	cmp	ip, #10
   21038:	bhi	21140 <__flatcc_fb_gen_c_json_printer@@Base+0xac8>
   2103c:	push	{lr}		; (str lr, [sp, #-4]!)
   21040:	cmp	r1, #0
   21044:	ldr	lr, [pc, #280]	; 21164 <__flatcc_fb_gen_c_json_printer@@Base+0xaec>
   21048:	add	ip, lr, ip
   2104c:	ldrsb	ip, [ip, #68]	; 0x44
   21050:	moveq	r1, ip
   21054:	beq	21068 <__flatcc_fb_gen_c_json_printer@@Base+0x9f0>
   21058:	cmp	r1, #14
   2105c:	bne	21068 <__flatcc_fb_gen_c_json_printer@@Base+0x9f0>
   21060:	cmp	r2, #0
   21064:	moveq	r2, ip
   21068:	pop	{lr}		; (ldr lr, [sp], #4)
   2106c:	b	20eec <__flatcc_fb_gen_c_json_printer@@Base+0x874>
   21070:	mov	ip, r1
   21074:	mov	r2, #0
   21078:	mov	r1, #14
   2107c:	b	2102c <__flatcc_fb_gen_c_json_printer@@Base+0x9b4>
   21080:	mov	r2, #13
   21084:	mov	r1, #14
   21088:	mvn	r3, #0
   2108c:	mov	ip, #0
   21090:	b	21030 <__flatcc_fb_gen_c_json_printer@@Base+0x9b8>
   21094:	ldrh	r2, [r1, #8]
   21098:	ldr	r3, [r1, #124]	; 0x7c
   2109c:	cmp	r2, #1
   210a0:	bls	210c4 <__flatcc_fb_gen_c_json_printer@@Base+0xa4c>
   210a4:	cmp	r2, #3
   210a8:	moveq	r2, #0
   210ac:	ldreq	ip, [r1, #40]	; 0x28
   210b0:	moveq	r1, #14
   210b4:	beq	21030 <__flatcc_fb_gen_c_json_printer@@Base+0x9b8>
   210b8:	mov	r2, #0
   210bc:	mov	r1, r2
   210c0:	b	21110 <__flatcc_fb_gen_c_json_printer@@Base+0xa98>
   210c4:	mov	r2, #15
   210c8:	mov	r1, #14
   210cc:	b	2108c <__flatcc_fb_gen_c_json_printer@@Base+0xa14>
   210d0:	mov	r2, #0
   210d4:	mov	r1, #13
   210d8:	mvn	r3, #0
   210dc:	b	21110 <__flatcc_fb_gen_c_json_printer@@Base+0xa98>
   210e0:	ldrh	r2, [r1, #8]
   210e4:	ldr	r3, [r1, #124]	; 0x7c
   210e8:	cmp	r2, #4
   210ec:	ldrls	pc, [pc, r2, lsl #2]
   210f0:	b	21128 <__flatcc_fb_gen_c_json_printer@@Base+0xab0>
   210f4:	andeq	r1, r2, r4, lsr r1
   210f8:	andeq	r1, r2, r4, lsr r1
   210fc:	andeq	r1, r2, r8, lsr #2
   21100:	andeq	r1, r2, r8, lsl r1
   21104:	andeq	r1, r2, r8, lsl #2
   21108:	mov	r2, #0
   2110c:	mov	r1, #16
   21110:	mov	ip, r2
   21114:	b	21030 <__flatcc_fb_gen_c_json_printer@@Base+0x9b8>
   21118:	mov	r2, #0
   2111c:	ldr	ip, [r1, #40]	; 0x28
   21120:	mov	r1, r2
   21124:	b	21030 <__flatcc_fb_gen_c_json_printer@@Base+0x9b8>
   21128:	mov	r2, #0
   2112c:	mov	r1, r2
   21130:	b	210d8 <__flatcc_fb_gen_c_json_printer@@Base+0xa60>
   21134:	mov	r2, #0
   21138:	mov	r1, #15
   2113c:	b	21110 <__flatcc_fb_gen_c_json_printer@@Base+0xa98>
   21140:	mov	ip, #0
   21144:	cmp	r1, #0
   21148:	moveq	r1, ip
   2114c:	beq	2106c <__flatcc_fb_gen_c_json_printer@@Base+0x9f4>
   21150:	cmp	r1, #14
   21154:	bne	2106c <__flatcc_fb_gen_c_json_printer@@Base+0x9f4>
   21158:	cmp	r2, #0
   2115c:	moveq	r2, ip
   21160:	b	2106c <__flatcc_fb_gen_c_json_printer@@Base+0x9f4>
   21164:	andeq	r6, r4, r8, ror #15
   21168:	push	{r4, lr}
   2116c:	mov	r2, #2
   21170:	ldr	r1, [pc, #60]	; 211b4 <__flatcc_fb_gen_c_json_printer@@Base+0xb3c>
   21174:	mov	r4, r0
   21178:	bl	2bdb8 <flatcc_builder_check_required@@Base>
   2117c:	cmp	r0, #0
   21180:	bne	21198 <__flatcc_fb_gen_c_json_printer@@Base+0xb20>
   21184:	ldr	r3, [pc, #44]	; 211b8 <__flatcc_fb_gen_c_json_printer@@Base+0xb40>
   21188:	mov	r2, #29
   2118c:	ldr	r1, [pc, #40]	; 211bc <__flatcc_fb_gen_c_json_printer@@Base+0xb44>
   21190:	ldr	r0, [pc, #40]	; 211c0 <__flatcc_fb_gen_c_json_printer@@Base+0xb48>
   21194:	bl	14094 <__assert_fail@plt>
   21198:	mov	r0, r4
   2119c:	bl	2be38 <flatcc_builder_end_table@@Base>
   211a0:	subs	r1, r0, #0
   211a4:	popeq	{r4, pc}
   211a8:	mov	r0, r4
   211ac:	pop	{r4, lr}
   211b0:	b	2b36c <flatcc_builder_offset_vector_push@@Base>
   211b4:	andeq	r6, r4, r8, lsr r8
   211b8:	andeq	r6, r4, lr, lsr r8
   211bc:	ldrdeq	r6, [r4], -r3
   211c0:			; <UNDEFINED> instruction: 0x00046abf
   211c4:	ldrh	r3, [r1, #8]
   211c8:	cmp	r3, #4
   211cc:	bxhi	lr
   211d0:	push	{r4, r5, r6, lr}
   211d4:	mov	r4, r0
   211d8:	ldr	r0, [r0, #40]	; 0x28
   211dc:	mov	r5, r1
   211e0:	add	r0, r0, #172	; 0xac
   211e4:	ldr	r1, [r1, #16]
   211e8:	bl	229c8 <ptr_set_find_item@@Base>
   211ec:	cmp	r0, #0
   211f0:	bne	21230 <__flatcc_fb_gen_c_json_printer@@Base+0xbb8>
   211f4:	pop	{r4, r5, r6, pc}
   211f8:	ldr	r1, [r2, #4]
   211fc:	ldr	r2, [r2]
   21200:	ldr	r1, [r1, #4]
   21204:	add	r1, r1, #1
   21208:	add	r3, r3, r1
   2120c:	b	21248 <__flatcc_fb_gen_c_json_printer@@Base+0xbd0>
   21210:	ldr	r3, [r4, #4]
   21214:	add	r3, r3, #1
   21218:	str	r3, [r4, #4]
   2121c:	pop	{r4, r5, r6, pc}
   21220:	ldr	r3, [r4, #8]
   21224:	add	r3, r3, #1
   21228:	str	r3, [r4, #8]
   2122c:	pop	{r4, r5, r6, pc}
   21230:	ldr	r3, [r4]
   21234:	cmp	r3, #0
   21238:	beq	21250 <__flatcc_fb_gen_c_json_printer@@Base+0xbd8>
   2123c:	ldr	r3, [r5, #12]
   21240:	ldr	r2, [r3]
   21244:	mov	r3, #0
   21248:	cmp	r2, #0
   2124c:	bne	211f8 <__flatcc_fb_gen_c_json_printer@@Base+0xb80>
   21250:	ldr	r2, [r5, #4]
   21254:	ldr	r1, [r4, #12]
   21258:	ldr	r2, [r2, #4]
   2125c:	add	r2, r2, r1
   21260:	add	r2, r2, #1
   21264:	add	r3, r2, r3
   21268:	str	r3, [r4, #12]
   2126c:	ldrh	r3, [r5, #8]
   21270:	cmp	r3, #4
   21274:	ldrls	pc, [pc, r3, lsl #2]
   21278:	b	21290 <__flatcc_fb_gen_c_json_printer@@Base+0xc18>
   2127c:	andeq	r1, r2, r0, lsl r2
   21280:	andeq	r1, r2, r0, lsl r2
   21284:	muleq	r2, r0, r2
   21288:	andeq	r1, r2, r0, lsr #4
   2128c:	andeq	r1, r2, r0, lsr #4
   21290:	pop	{r4, r5, r6, pc}
   21294:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21298:	vpush	{d8-d9}
   2129c:	ldr	r8, [r2, #60]	; 0x3c
   212a0:	ldr	r5, [r1, #184]	; 0xb8
   212a4:	mov	r4, r0
   212a8:	sub	sp, sp, #92	; 0x5c
   212ac:	mov	r7, r1
   212b0:	str	r2, [sp, #4]
   212b4:	mov	r2, #44	; 0x2c
   212b8:	mov	r1, #0
   212bc:	add	r0, sp, r2
   212c0:	bl	13fec <memset@plt>
   212c4:	ldr	r3, [sp, #4]
   212c8:	add	r2, sp, #44	; 0x2c
   212cc:	ldr	r1, [pc, #1444]	; 21878 <__flatcc_fb_gen_c_json_printer@@Base+0x1200>
   212d0:	mov	r0, r8
   212d4:	str	r3, [sp, #84]	; 0x54
   212d8:	str	r5, [sp, #44]	; 0x2c
   212dc:	bl	235f4 <fb_scope_table_visit@@Base>
   212e0:	ldr	fp, [sp, #48]	; 0x30
   212e4:	mov	r1, #8
   212e8:	mov	r0, fp
   212ec:	bl	13ee4 <calloc@plt>
   212f0:	ldr	sl, [sp, #52]	; 0x34
   212f4:	mov	r1, #8
   212f8:	mov	r6, r0
   212fc:	str	r0, [sp, #60]	; 0x3c
   21300:	mov	r0, sl
   21304:	bl	13ee4 <calloc@plt>
   21308:	ldr	r9, [sp, #56]	; 0x38
   2130c:	mov	r5, r0
   21310:	str	r0, [sp, #64]	; 0x40
   21314:	mov	r0, r9
   21318:	bl	13f8c <malloc@plt>
   2131c:	cmp	fp, #0
   21320:	str	r6, [sp, #72]	; 0x48
   21324:	clz	r6, r6
   21328:	lsr	r6, r6, #5
   2132c:	movle	r6, #0
   21330:	cmp	r6, #0
   21334:	str	r5, [sp, #76]	; 0x4c
   21338:	str	r0, [sp, #68]	; 0x44
   2133c:	str	r0, [sp, #80]	; 0x50
   21340:	bne	21378 <__flatcc_fb_gen_c_json_printer@@Base+0xd00>
   21344:	cmp	sl, #0
   21348:	clz	r5, r5
   2134c:	lsr	r5, r5, #5
   21350:	movle	r5, #0
   21354:	cmp	r5, #0
   21358:	bne	21378 <__flatcc_fb_gen_c_json_printer@@Base+0xd00>
   2135c:	cmp	r9, #0
   21360:	clz	r3, r0
   21364:	lsr	r3, r3, #5
   21368:	moveq	r3, #0
   2136c:	cmp	r3, #0
   21370:	str	r3, [sp, #16]
   21374:	beq	21390 <__flatcc_fb_gen_c_json_printer@@Base+0xd18>
   21378:	add	r0, sp, #44	; 0x2c
   2137c:	bl	20a68 <__flatcc_fb_gen_c_json_printer@@Base+0x3f0>
   21380:	mvn	r0, #0
   21384:	add	sp, sp, #92	; 0x5c
   21388:	vpop	{d8-d9}
   2138c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21390:	add	r2, sp, #44	; 0x2c
   21394:	ldr	r1, [pc, #1248]	; 2187c <__flatcc_fb_gen_c_json_printer@@Base+0x1204>
   21398:	mov	r0, r8
   2139c:	bl	235f4 <fb_scope_table_visit@@Base>
   213a0:	ldr	r1, [sp, #48]	; 0x30
   213a4:	ldr	r0, [sp, #60]	; 0x3c
   213a8:	bl	20bec <__flatcc_fb_gen_c_json_printer@@Base+0x574>
   213ac:	ldr	r0, [sp, #64]	; 0x40
   213b0:	ldr	r1, [sp, #52]	; 0x34
   213b4:	bl	20bec <__flatcc_fb_gen_c_json_printer@@Base+0x574>
   213b8:	ldr	r0, [sp, #48]	; 0x30
   213bc:	cmp	r0, #0
   213c0:	ble	21568 <__flatcc_fb_gen_c_json_printer@@Base+0xef0>
   213c4:	lsl	r0, r0, #2
   213c8:	bl	13f8c <malloc@plt>
   213cc:	subs	r3, r0, #0
   213d0:	str	r3, [sp, #8]
   213d4:	beq	21378 <__flatcc_fb_gen_c_json_printer@@Base+0xd00>
   213d8:	ldr	r3, [r7, #188]	; 0xbc
   213dc:	mov	r2, #0
   213e0:	cmp	r3, #0
   213e4:	movne	r3, #2
   213e8:	ldr	r1, [pc, #1168]	; 21880 <__flatcc_fb_gen_c_json_printer@@Base+0x1208>
   213ec:	mov	r0, r4
   213f0:	bl	2aff8 <flatcc_builder_start_buffer@@Base>
   213f4:	cmp	r0, #0
   213f8:	bne	21408 <__flatcc_fb_gen_c_json_printer@@Base+0xd90>
   213fc:	mov	r1, #5
   21400:	mov	r0, r4
   21404:	bl	2b7fc <flatcc_builder_start_table@@Base>
   21408:	ldr	r3, [sp, #4]
   2140c:	ldrh	r5, [r3, #16]
   21410:	cmp	r5, #2
   21414:	bne	21444 <__flatcc_fb_gen_c_json_printer@@Base+0xdcc>
   21418:	ldr	r2, [r3, #12]
   2141c:	ldr	r1, [r3, #8]
   21420:	mov	r0, r4
   21424:	bl	2c62c <flatcc_builder_create_string@@Base>
   21428:	subs	r6, r0, #0
   2142c:	beq	21444 <__flatcc_fb_gen_c_json_printer@@Base+0xdcc>
   21430:	mov	r1, r5
   21434:	mov	r0, r4
   21438:	bl	2c970 <flatcc_builder_table_add_offset@@Base>
   2143c:	cmp	r0, #0
   21440:	strne	r6, [r0]
   21444:	ldr	r3, [sp, #4]
   21448:	ldrh	r3, [r3, #32]
   2144c:	cmp	r3, #2
   21450:	bne	21484 <__flatcc_fb_gen_c_json_printer@@Base+0xe0c>
   21454:	ldr	r3, [sp, #4]
   21458:	mov	r0, r4
   2145c:	ldr	r2, [r3, #28]
   21460:	ldr	r1, [r3, #24]
   21464:	bl	2c62c <flatcc_builder_create_string@@Base>
   21468:	subs	r5, r0, #0
   2146c:	beq	21484 <__flatcc_fb_gen_c_json_printer@@Base+0xe0c>
   21470:	mov	r1, #3
   21474:	mov	r0, r4
   21478:	bl	2c970 <flatcc_builder_table_add_offset@@Base>
   2147c:	cmp	r0, #0
   21480:	strne	r5, [r0]
   21484:	ldr	r8, [sp, #60]	; 0x3c
   21488:	vldr	d9, [pc, #992]	; 21870 <__flatcc_fb_gen_c_json_printer@@Base+0x11f8>
   2148c:	ldr	r3, [sp, #48]	; 0x30
   21490:	add	r8, r8, #4
   21494:	mov	sl, #0
   21498:	str	r3, [sp, #24]
   2149c:	ldr	r3, [sp, #24]
   214a0:	cmp	r3, sl
   214a4:	bgt	21574 <__flatcc_fb_gen_c_json_printer@@Base+0xefc>
   214a8:	mov	r2, r3
   214ac:	ldr	r1, [sp, #8]
   214b0:	mov	r0, r4
   214b4:	bl	2c15c <flatcc_builder_create_offset_vector@@Base>
   214b8:	mov	sl, #0
   214bc:	mov	fp, #3
   214c0:	mov	r1, r0
   214c4:	mov	r0, r4
   214c8:	bl	20c34 <__flatcc_fb_gen_c_json_printer@@Base+0x5bc>
   214cc:	ldr	r3, [sp, #52]	; 0x34
   214d0:	mov	r0, r4
   214d4:	ldr	r6, [sp, #64]	; 0x40
   214d8:	str	r3, [sp, #16]
   214dc:	bl	2b738 <flatcc_builder_start_offset_vector@@Base>
   214e0:	add	r6, r6, #4
   214e4:	ldr	r3, [sp, #16]
   214e8:	cmp	r3, sl
   214ec:	bgt	219fc <__flatcc_fb_gen_c_json_printer@@Base+0x1384>
   214f0:	mov	r0, r4
   214f4:	bl	20ccc <__flatcc_fb_gen_c_json_printer@@Base+0x654>
   214f8:	ldr	r3, [sp, #4]
   214fc:	ldr	r3, [r3, #52]	; 0x34
   21500:	cmp	r3, #0
   21504:	beq	2153c <__flatcc_fb_gen_c_json_printer@@Base+0xec4>
   21508:	ldrh	r2, [r3, #8]
   2150c:	cmp	r2, #0
   21510:	bne	2153c <__flatcc_fb_gen_c_json_printer@@Base+0xec4>
   21514:	ldr	r3, [r3, #124]	; 0x7c
   21518:	ldr	r2, [sp, #8]
   2151c:	ldr	r5, [r2, r3, lsl #2]
   21520:	cmp	r5, #0
   21524:	beq	2153c <__flatcc_fb_gen_c_json_printer@@Base+0xec4>
   21528:	mov	r1, #4
   2152c:	mov	r0, r4
   21530:	bl	2c970 <flatcc_builder_table_add_offset@@Base>
   21534:	cmp	r0, #0
   21538:	strne	r5, [r0]
   2153c:	mov	r2, #2
   21540:	ldr	r1, [pc, #828]	; 21884 <__flatcc_fb_gen_c_json_printer@@Base+0x120c>
   21544:	mov	r0, r4
   21548:	bl	2bdb8 <flatcc_builder_check_required@@Base>
   2154c:	cmp	r0, #0
   21550:	bne	21bc8 <__flatcc_fb_gen_c_json_printer@@Base+0x1550>
   21554:	ldr	r3, [pc, #812]	; 21888 <__flatcc_fb_gen_c_json_printer@@Base+0x1210>
   21558:	mov	r2, #33	; 0x21
   2155c:	ldr	r1, [pc, #848]	; 218b4 <__flatcc_fb_gen_c_json_printer@@Base+0x123c>
   21560:	ldr	r0, [pc, #804]	; 2188c <__flatcc_fb_gen_c_json_printer@@Base+0x1214>
   21564:	b	2165c <__flatcc_fb_gen_c_json_printer@@Base+0xfe4>
   21568:	ldr	r3, [sp, #16]
   2156c:	str	r3, [sp, #8]
   21570:	b	213d8 <__flatcc_fb_gen_c_json_printer@@Base+0xd60>
   21574:	mov	r1, #5
   21578:	mov	r0, r4
   2157c:	ldr	r9, [r8, #-4]
   21580:	bl	2b7fc <flatcc_builder_start_table@@Base>
   21584:	ldr	r1, [r8]
   21588:	mov	r0, r4
   2158c:	bl	2c6c4 <flatcc_builder_create_string_str@@Base>
   21590:	mov	r1, r0
   21594:	mov	r0, r4
   21598:	bl	20c34 <__flatcc_fb_gen_c_json_printer@@Base+0x5bc>
   2159c:	mov	r0, r4
   215a0:	bl	2b738 <flatcc_builder_start_offset_vector@@Base>
   215a4:	ldr	r5, [r9, #20]
   215a8:	mov	r3, #0
   215ac:	str	r3, [sp, #12]
   215b0:	cmp	r5, #0
   215b4:	bne	21660 <__flatcc_fb_gen_c_json_printer@@Base+0xfe8>
   215b8:	mov	r0, r4
   215bc:	bl	20ccc <__flatcc_fb_gen_c_json_printer@@Base+0x654>
   215c0:	ldrh	r3, [r9, #8]
   215c4:	cmp	r3, #1
   215c8:	moveq	r6, #1
   215cc:	movne	r6, #0
   215d0:	bne	215fc <__flatcc_fb_gen_c_json_printer@@Base+0xf84>
   215d4:	ldr	r5, [r9, #112]	; 0x70
   215d8:	cmp	r5, #0
   215dc:	beq	215fc <__flatcc_fb_gen_c_json_printer@@Base+0xf84>
   215e0:	mov	r3, #4
   215e4:	mov	r2, r3
   215e8:	mov	r1, r3
   215ec:	mov	r0, r4
   215f0:	bl	2c7bc <flatcc_builder_table_add@@Base>
   215f4:	cmp	r0, #0
   215f8:	strne	r5, [r0]
   215fc:	mov	r1, r6
   21600:	mov	r0, r4
   21604:	bl	20c94 <__flatcc_fb_gen_c_json_printer@@Base+0x61c>
   21608:	ldrh	r5, [r9, #104]	; 0x68
   2160c:	cmp	r5, #0
   21610:	beq	21630 <__flatcc_fb_gen_c_json_printer@@Base+0xfb8>
   21614:	mov	r3, #4
   21618:	mov	r2, r3
   2161c:	mov	r1, #3
   21620:	mov	r0, r4
   21624:	bl	2c7bc <flatcc_builder_table_add@@Base>
   21628:	cmp	r0, #0
   2162c:	strne	r5, [r0]
   21630:	mov	r2, #2
   21634:	ldr	r1, [pc, #596]	; 21890 <__flatcc_fb_gen_c_json_printer@@Base+0x1218>
   21638:	mov	r0, r4
   2163c:	bl	2bdb8 <flatcc_builder_check_required@@Base>
   21640:	add	r8, r8, #8
   21644:	cmp	r0, #0
   21648:	bne	219e4 <__flatcc_fb_gen_c_json_printer@@Base+0x136c>
   2164c:	ldr	r3, [pc, #576]	; 21894 <__flatcc_fb_gen_c_json_printer@@Base+0x121c>
   21650:	ldr	r1, [pc, #604]	; 218b4 <__flatcc_fb_gen_c_json_printer@@Base+0x123c>
   21654:	ldr	r0, [pc, #572]	; 21898 <__flatcc_fb_gen_c_json_printer@@Base+0x1220>
   21658:	mov	r2, #31
   2165c:	bl	14094 <__assert_fail@plt>
   21660:	ldr	r3, [sp, #12]
   21664:	cmp	r3, #0
   21668:	ldrh	r3, [r5, #72]	; 0x48
   2166c:	ldrne	fp, [sp, #16]
   21670:	str	r3, [sp, #20]
   21674:	lsreq	fp, r3, #7
   21678:	andeq	fp, fp, #1
   2167c:	uxtb	r3, fp
   21680:	str	r3, [sp, #36]	; 0x24
   21684:	ldr	r3, [sp, #20]
   21688:	ands	r3, r3, #4
   2168c:	str	r3, [sp, #28]
   21690:	movne	r3, #1
   21694:	moveq	r3, #0
   21698:	str	r3, [sp, #32]
   2169c:	ldrh	r3, [r5, #24]
   216a0:	cmp	r3, #14
   216a4:	bne	217a4 <__flatcc_fb_gen_c_json_printer@@Base+0x112c>
   216a8:	ldr	r3, [r5, #16]
   216ac:	ldrh	r3, [r3, #8]
   216b0:	cmp	r3, #4
   216b4:	bne	217a4 <__flatcc_fb_gen_c_json_printer@@Base+0x112c>
   216b8:	mov	r1, #9
   216bc:	mov	r0, r4
   216c0:	bl	2b7fc <flatcc_builder_start_table@@Base>
   216c4:	mov	r0, r4
   216c8:	bl	2b780 <flatcc_builder_start_string@@Base>
   216cc:	ldr	r3, [r5, #4]
   216d0:	mov	r0, r4
   216d4:	ldm	r3, {r1, r2}
   216d8:	bl	2b4b0 <flatcc_builder_append_string@@Base>
   216dc:	mov	r2, #5
   216e0:	ldr	r1, [pc, #436]	; 2189c <__flatcc_fb_gen_c_json_printer@@Base+0x1224>
   216e4:	mov	r0, r4
   216e8:	bl	2b4b0 <flatcc_builder_append_string@@Base>
   216ec:	mov	r0, r4
   216f0:	bl	2c724 <flatcc_builder_end_string@@Base>
   216f4:	mov	r1, r0
   216f8:	mov	r0, r4
   216fc:	bl	20c34 <__flatcc_fb_gen_c_json_printer@@Base+0x5bc>
   21700:	mvn	r3, #0
   21704:	mov	r2, #0
   21708:	mov	r1, #1
   2170c:	mov	r0, r4
   21710:	bl	20eec <__flatcc_fb_gen_c_json_printer@@Base+0x874>
   21714:	mov	r1, r0
   21718:	mov	r0, r4
   2171c:	bl	20c64 <__flatcc_fb_gen_c_json_printer@@Base+0x5ec>
   21720:	ldrh	r1, [r5, #96]	; 0x60
   21724:	add	r1, r1, #1
   21728:	lsl	r1, r1, #1
   2172c:	uxth	r1, r1
   21730:	cmp	r1, #0
   21734:	beq	21740 <__flatcc_fb_gen_c_json_printer@@Base+0x10c8>
   21738:	mov	r0, r4
   2173c:	bl	20d2c <__flatcc_fb_gen_c_json_printer@@Base+0x6b4>
   21740:	ldrh	r6, [r5, #96]	; 0x60
   21744:	sub	r6, r6, #1
   21748:	uxth	r6, r6
   2174c:	cmp	r6, #0
   21750:	beq	21770 <__flatcc_fb_gen_c_json_printer@@Base+0x10f8>
   21754:	mov	r3, #2
   21758:	mov	r2, r3
   2175c:	mov	r1, r3
   21760:	mov	r0, r4
   21764:	bl	2c7bc <flatcc_builder_table_add@@Base>
   21768:	cmp	r0, #0
   2176c:	strhne	r6, [r0]
   21770:	ldr	r3, [sp, #28]
   21774:	cmp	r3, #0
   21778:	beq	2179c <__flatcc_fb_gen_c_json_printer@@Base+0x1124>
   2177c:	mov	r3, #1
   21780:	mov	r2, r3
   21784:	mov	r1, #6
   21788:	mov	r0, r4
   2178c:	bl	2c7bc <flatcc_builder_table_add@@Base>
   21790:	cmp	r0, #0
   21794:	ldrbne	r3, [sp, #32]
   21798:	strbne	r3, [r0]
   2179c:	mov	r0, r4
   217a0:	bl	21168 <__flatcc_fb_gen_c_json_printer@@Base+0xaf0>
   217a4:	mov	r1, #9
   217a8:	mov	r0, r4
   217ac:	bl	2b7fc <flatcc_builder_start_table@@Base>
   217b0:	ldr	r3, [r5, #4]
   217b4:	mov	r0, r4
   217b8:	ldm	r3, {r1, r2}
   217bc:	bl	2c62c <flatcc_builder_create_string@@Base>
   217c0:	mov	r1, r0
   217c4:	mov	r0, r4
   217c8:	bl	20c34 <__flatcc_fb_gen_c_json_printer@@Base+0x5bc>
   217cc:	ldrh	r2, [r5, #24]
   217d0:	ldr	r1, [r5, #16]
   217d4:	mov	r0, r4
   217d8:	bl	20fd8 <__flatcc_fb_gen_c_json_printer@@Base+0x960>
   217dc:	mov	r1, r0
   217e0:	mov	r0, r4
   217e4:	bl	20c64 <__flatcc_fb_gen_c_json_printer@@Base+0x5ec>
   217e8:	ldrh	r3, [r9, #8]
   217ec:	cmp	r3, #0
   217f0:	beq	21848 <__flatcc_fb_gen_c_json_printer@@Base+0x11d0>
   217f4:	cmp	r3, #1
   217f8:	beq	219cc <__flatcc_fb_gen_c_json_printer@@Base+0x1354>
   217fc:	ldr	r3, [sp, #28]
   21800:	cmp	r3, #0
   21804:	beq	21828 <__flatcc_fb_gen_c_json_printer@@Base+0x11b0>
   21808:	mov	r3, #1
   2180c:	mov	r2, r3
   21810:	mov	r1, #6
   21814:	mov	r0, r4
   21818:	bl	2c7bc <flatcc_builder_table_add@@Base>
   2181c:	cmp	r0, #0
   21820:	ldrbne	r3, [sp, #32]
   21824:	strbne	r3, [r0]
   21828:	mov	r0, r4
   2182c:	bl	21168 <__flatcc_fb_gen_c_json_printer@@Base+0xaf0>
   21830:	ldr	r3, [sp, #12]
   21834:	ldr	r2, [sp, #36]	; 0x24
   21838:	ldr	r5, [r5]
   2183c:	orr	r3, r3, r2
   21840:	str	r3, [sp, #12]
   21844:	b	215b0 <__flatcc_fb_gen_c_json_printer@@Base+0xf38>
   21848:	ldrh	r3, [r5, #56]	; 0x38
   2184c:	sub	r3, r3, #3
   21850:	cmp	r3, #3
   21854:	ldrls	pc, [pc, r3, lsl #2]
   21858:	b	219c4 <__flatcc_fb_gen_c_json_printer@@Base+0x134c>
   2185c:	muleq	r2, r4, r9
   21860:			; <UNDEFINED> instruction: 0x000218bc
   21864:			; <UNDEFINED> instruction: 0x000218bc
   21868:	andeq	r1, r2, r8, lsl #19
   2186c:	nop			; (mov r0, r0)
	...
   21878:	andeq	r0, r2, ip, asr #21
   2187c:			; <UNDEFINED> instruction: 0x00020ab4
   21880:	andeq	r6, r4, pc, asr #22
   21884:	andeq	r6, r4, r8, lsr #17
   21888:	andeq	r6, r4, lr, lsr #17
   2188c:	andeq	r6, r4, sl, lsl #26
   21890:	andeq	r6, r4, r4, asr r8
   21894:	andeq	r6, r4, sl, asr r8
   21898:	andeq	r6, r4, r4, asr fp
   2189c:	andeq	r1, r3, pc, asr #5
   218a0:	andeq	r6, r4, ip, lsl #17
   218a4:	muleq	r4, r4, r8
   218a8:	andeq	r6, r4, sp, ror ip
   218ac:	andeq	r6, r4, r0, ror r8
   218b0:	andeq	r6, r4, r4, ror r8
   218b4:	ldrdeq	r6, [r4], -r3
   218b8:	andeq	r6, r4, r7, ror #23
   218bc:	ldrd	r6, [r5, #48]	; 0x30
   218c0:	orrs	r3, r6, r7
   218c4:	beq	218e4 <__flatcc_fb_gen_c_json_printer@@Base+0x126c>
   218c8:	mov	r3, #8
   218cc:	mov	r2, r3
   218d0:	mov	r1, #4
   218d4:	mov	r0, r4
   218d8:	bl	2c7bc <flatcc_builder_table_add@@Base>
   218dc:	cmp	r0, #0
   218e0:	strdne	r6, [r0]
   218e4:	ldrh	r6, [r5, #96]	; 0x60
   218e8:	cmp	r6, #0
   218ec:	moveq	r1, #4
   218f0:	beq	21928 <__flatcc_fb_gen_c_json_printer@@Base+0x12b0>
   218f4:	mov	r3, #2
   218f8:	mov	r1, r3
   218fc:	mov	r2, r3
   21900:	mov	r0, r4
   21904:	bl	2c7bc <flatcc_builder_table_add@@Base>
   21908:	ldrh	r1, [r5, #96]	; 0x60
   2190c:	add	r1, r1, #2
   21910:	lsl	r1, r1, #1
   21914:	uxth	r1, r1
   21918:	cmp	r0, #0
   2191c:	strhne	r6, [r0]
   21920:	cmp	r1, #0
   21924:	beq	21930 <__flatcc_fb_gen_c_json_printer@@Base+0x12b8>
   21928:	mov	r0, r4
   2192c:	bl	20d2c <__flatcc_fb_gen_c_json_printer@@Base+0x6b4>
   21930:	cmp	fp, #0
   21934:	beq	21958 <__flatcc_fb_gen_c_json_printer@@Base+0x12e0>
   21938:	mov	r3, #1
   2193c:	mov	r2, r3
   21940:	mov	r1, #8
   21944:	mov	r0, r4
   21948:	bl	2c7bc <flatcc_builder_table_add@@Base>
   2194c:	cmp	r0, #0
   21950:	movne	r3, #1
   21954:	strbne	r3, [r0]
   21958:	ldr	r3, [sp, #20]
   2195c:	tst	r3, #256	; 0x100
   21960:	beq	217fc <__flatcc_fb_gen_c_json_printer@@Base+0x1184>
   21964:	mov	r3, #1
   21968:	mov	r2, r3
   2196c:	mov	r1, #7
   21970:	mov	r0, r4
   21974:	bl	2c7bc <flatcc_builder_table_add@@Base>
   21978:	cmp	r0, #0
   2197c:	movne	r3, #1
   21980:	strbne	r3, [r0]
   21984:	b	217fc <__flatcc_fb_gen_c_json_printer@@Base+0x1184>
   21988:	ldrb	r6, [r5, #48]	; 0x30
   2198c:	mov	r7, #0
   21990:	b	218c0 <__flatcc_fb_gen_c_json_printer@@Base+0x1248>
   21994:	vldr	d8, [r5, #48]	; 0x30
   21998:	vcmp.f64	d8, d9
   2199c:	vmrs	APSR_nzcv, fpscr
   219a0:	beq	218e4 <__flatcc_fb_gen_c_json_printer@@Base+0x126c>
   219a4:	mov	r3, #8
   219a8:	mov	r2, r3
   219ac:	mov	r1, #5
   219b0:	mov	r0, r4
   219b4:	bl	2c7bc <flatcc_builder_table_add@@Base>
   219b8:	cmp	r0, #0
   219bc:	vstrne	d8, [r0]
   219c0:	b	218e4 <__flatcc_fb_gen_c_json_printer@@Base+0x126c>
   219c4:	vmov.f64	d8, d9
   219c8:	b	21998 <__flatcc_fb_gen_c_json_printer@@Base+0x1320>
   219cc:	ldrh	r1, [r5, #80]	; 0x50
   219d0:	cmp	r1, #0
   219d4:	beq	217fc <__flatcc_fb_gen_c_json_printer@@Base+0x1184>
   219d8:	mov	r0, r4
   219dc:	bl	20d2c <__flatcc_fb_gen_c_json_printer@@Base+0x6b4>
   219e0:	b	217fc <__flatcc_fb_gen_c_json_printer@@Base+0x1184>
   219e4:	mov	r0, r4
   219e8:	bl	2be38 <flatcc_builder_end_table@@Base>
   219ec:	ldr	r3, [sp, #8]
   219f0:	str	r0, [r3, sl, lsl #2]
   219f4:	add	sl, sl, #1
   219f8:	b	2149c <__flatcc_fb_gen_c_json_printer@@Base+0xe24>
   219fc:	ldr	r7, [r6, #-4]
   21a00:	mov	r1, #4
   21a04:	mov	r0, r4
   21a08:	ldrh	r8, [r7, #8]
   21a0c:	sub	r3, r8, #4
   21a10:	clz	r3, r3
   21a14:	lsr	r3, r3, #5
   21a18:	str	r3, [sp, #20]
   21a1c:	bl	2b7fc <flatcc_builder_start_table@@Base>
   21a20:	ldr	r1, [r6]
   21a24:	mov	r0, r4
   21a28:	bl	2c6c4 <flatcc_builder_create_string_str@@Base>
   21a2c:	mov	r1, r0
   21a30:	mov	r0, r4
   21a34:	bl	20c34 <__flatcc_fb_gen_c_json_printer@@Base+0x5bc>
   21a38:	mov	r0, r4
   21a3c:	bl	2b738 <flatcc_builder_start_offset_vector@@Base>
   21a40:	ldr	r5, [r7, #20]
   21a44:	ldr	r3, [sp, #8]
   21a48:	cmp	r8, #4
   21a4c:	movne	r3, #0
   21a50:	str	r3, [sp, #12]
   21a54:	cmp	r5, #0
   21a58:	bne	21ac8 <__flatcc_fb_gen_c_json_printer@@Base+0x1450>
   21a5c:	mov	r0, r4
   21a60:	bl	20ccc <__flatcc_fb_gen_c_json_printer@@Base+0x654>
   21a64:	ldr	r1, [sp, #20]
   21a68:	mov	r0, r4
   21a6c:	bl	20c94 <__flatcc_fb_gen_c_json_printer@@Base+0x61c>
   21a70:	ldrh	r2, [r7, #48]	; 0x30
   21a74:	ldr	r1, [r7, #40]	; 0x28
   21a78:	mov	r0, r4
   21a7c:	bl	20fd8 <__flatcc_fb_gen_c_json_printer@@Base+0x960>
   21a80:	subs	r5, r0, #0
   21a84:	beq	21a9c <__flatcc_fb_gen_c_json_printer@@Base+0x1424>
   21a88:	mov	r1, fp
   21a8c:	mov	r0, r4
   21a90:	bl	2c970 <flatcc_builder_table_add_offset@@Base>
   21a94:	cmp	r0, #0
   21a98:	strne	r5, [r0]
   21a9c:	mov	r2, fp
   21aa0:	ldr	r1, [pc, #-520]	; 218a0 <__flatcc_fb_gen_c_json_printer@@Base+0x1228>
   21aa4:	mov	r0, r4
   21aa8:	bl	2bdb8 <flatcc_builder_check_required@@Base>
   21aac:	cmp	r0, #0
   21ab0:	bne	21ba4 <__flatcc_fb_gen_c_json_printer@@Base+0x152c>
   21ab4:	ldr	r3, [pc, #-536]	; 218a4 <__flatcc_fb_gen_c_json_printer@@Base+0x122c>
   21ab8:	mov	r2, #27
   21abc:	ldr	r1, [pc, #-528]	; 218b4 <__flatcc_fb_gen_c_json_printer@@Base+0x123c>
   21ac0:	ldr	r0, [pc, #-544]	; 218a8 <__flatcc_fb_gen_c_json_printer@@Base+0x1230>
   21ac4:	b	2165c <__flatcc_fb_gen_c_json_printer@@Base+0xfe4>
   21ac8:	mov	r1, fp
   21acc:	mov	r0, r4
   21ad0:	bl	2b7fc <flatcc_builder_start_table@@Base>
   21ad4:	ldr	r3, [r5, #4]
   21ad8:	mov	r0, r4
   21adc:	ldm	r3, {r1, r2}
   21ae0:	bl	2c62c <flatcc_builder_create_string@@Base>
   21ae4:	mov	r1, r0
   21ae8:	mov	r0, r4
   21aec:	bl	20c34 <__flatcc_fb_gen_c_json_printer@@Base+0x5bc>
   21af0:	ldr	r3, [sp, #12]
   21af4:	cmp	r3, #0
   21af8:	beq	21b34 <__flatcc_fb_gen_c_json_printer@@Base+0x14bc>
   21afc:	ldrh	r3, [r5, #24]
   21b00:	cmp	r3, #14
   21b04:	bne	21b34 <__flatcc_fb_gen_c_json_printer@@Base+0x14bc>
   21b08:	ldr	r3, [r5, #16]
   21b0c:	ldr	r2, [sp, #12]
   21b10:	ldr	r3, [r3, #124]	; 0x7c
   21b14:	ldr	r8, [r2, r3, lsl #2]
   21b18:	cmp	r8, #0
   21b1c:	beq	21b34 <__flatcc_fb_gen_c_json_printer@@Base+0x14bc>
   21b20:	mov	r1, #2
   21b24:	mov	r0, r4
   21b28:	bl	2c970 <flatcc_builder_table_add_offset@@Base>
   21b2c:	cmp	r0, #0
   21b30:	strne	r8, [r0]
   21b34:	ldrd	r8, [r5, #48]	; 0x30
   21b38:	orrs	r3, r8, r9
   21b3c:	beq	21b5c <__flatcc_fb_gen_c_json_printer@@Base+0x14e4>
   21b40:	mov	r3, #8
   21b44:	mov	r2, r3
   21b48:	mov	r1, #1
   21b4c:	mov	r0, r4
   21b50:	bl	2c7bc <flatcc_builder_table_add@@Base>
   21b54:	cmp	r0, #0
   21b58:	strdne	r8, [r0]
   21b5c:	mov	r2, #1
   21b60:	ldr	r1, [pc, #-700]	; 218ac <__flatcc_fb_gen_c_json_printer@@Base+0x1234>
   21b64:	mov	r0, r4
   21b68:	bl	2bdb8 <flatcc_builder_check_required@@Base>
   21b6c:	cmp	r0, #0
   21b70:	ldreq	r3, [pc, #-712]	; 218b0 <__flatcc_fb_gen_c_json_printer@@Base+0x1238>
   21b74:	moveq	r2, #25
   21b78:	ldreq	r1, [pc, #-716]	; 218b4 <__flatcc_fb_gen_c_json_printer@@Base+0x123c>
   21b7c:	ldreq	r0, [pc, #-716]	; 218b8 <__flatcc_fb_gen_c_json_printer@@Base+0x1240>
   21b80:	beq	2165c <__flatcc_fb_gen_c_json_printer@@Base+0xfe4>
   21b84:	mov	r0, r4
   21b88:	bl	2be38 <flatcc_builder_end_table@@Base>
   21b8c:	subs	r1, r0, #0
   21b90:	beq	21b9c <__flatcc_fb_gen_c_json_printer@@Base+0x1524>
   21b94:	mov	r0, r4
   21b98:	bl	2b36c <flatcc_builder_offset_vector_push@@Base>
   21b9c:	ldr	r5, [r5]
   21ba0:	b	21a54 <__flatcc_fb_gen_c_json_printer@@Base+0x13dc>
   21ba4:	mov	r0, r4
   21ba8:	bl	2be38 <flatcc_builder_end_table@@Base>
   21bac:	subs	r1, r0, #0
   21bb0:	beq	21bbc <__flatcc_fb_gen_c_json_printer@@Base+0x1544>
   21bb4:	mov	r0, r4
   21bb8:	bl	2b36c <flatcc_builder_offset_vector_push@@Base>
   21bbc:	add	sl, sl, #1
   21bc0:	add	r6, r6, #8
   21bc4:	b	214e4 <__flatcc_fb_gen_c_json_printer@@Base+0xe6c>
   21bc8:	mov	r0, r4
   21bcc:	bl	2be38 <flatcc_builder_end_table@@Base>
   21bd0:	mov	r1, r0
   21bd4:	mov	r0, r4
   21bd8:	bl	2b098 <flatcc_builder_end_buffer@@Base>
   21bdc:	add	r0, sp, #44	; 0x2c
   21be0:	bl	20a68 <__flatcc_fb_gen_c_json_printer@@Base+0x3f0>
   21be4:	ldr	r3, [sp, #8]
   21be8:	cmp	r3, #0
   21bec:	beq	21bf8 <__flatcc_fb_gen_c_json_printer@@Base+0x1580>
   21bf0:	mov	r0, r3
   21bf4:	bl	13f14 <free@plt>
   21bf8:	mov	r0, #0
   21bfc:	b	21384 <__flatcc_fb_gen_c_json_printer@@Base+0xd0c>
   21c00:	cmp	r0, #0
   21c04:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21c08:	sub	sp, sp, #20
   21c0c:	beq	21c24 <__flatcc_fb_gen_c_json_printer@@Base+0x15ac>
   21c10:	ldr	r3, [pc, #380]	; 21d94 <__flatcc_fb_gen_c_json_printer@@Base+0x171c>
   21c14:	ldr	r2, [r0, #4]
   21c18:	str	r3, [sp, #12]
   21c1c:	cmp	r2, r3
   21c20:	beq	21d2c <__flatcc_fb_gen_c_json_printer@@Base+0x16b4>
   21c24:	ldr	r3, [pc, #364]	; 21d98 <__flatcc_fb_gen_c_json_printer@@Base+0x1720>
   21c28:	mov	r2, #237	; 0xed
   21c2c:	ldr	r1, [pc, #360]	; 21d9c <__flatcc_fb_gen_c_json_printer@@Base+0x1724>
   21c30:	ldr	r0, [pc, #360]	; 21da0 <__flatcc_fb_gen_c_json_printer@@Base+0x1728>
   21c34:	b	21c48 <__flatcc_fb_gen_c_json_printer@@Base+0x15d0>
   21c38:	ldr	r3, [pc, #344]	; 21d98 <__flatcc_fb_gen_c_json_printer@@Base+0x1720>
   21c3c:	mov	r2, #237	; 0xed
   21c40:	ldr	r1, [pc, #340]	; 21d9c <__flatcc_fb_gen_c_json_printer@@Base+0x1724>
   21c44:	ldr	r0, [pc, #344]	; 21da4 <__flatcc_fb_gen_c_json_printer@@Base+0x172c>
   21c48:	bl	14094 <__assert_fail@plt>
   21c4c:	ldr	r3, [r6]
   21c50:	adds	r2, r6, r3
   21c54:	ldreq	r3, [pc, #332]	; 21da8 <__flatcc_fb_gen_c_json_printer@@Base+0x1730>
   21c58:	moveq	r2, #224	; 0xe0
   21c5c:	beq	21c2c <__flatcc_fb_gen_c_json_printer@@Base+0x15b4>
   21c60:	ldr	r3, [r6, r3]
   21c64:	sub	r3, r2, r3
   21c68:	ldrh	r1, [r3]
   21c6c:	cmp	r1, #7
   21c70:	bls	21ca0 <__flatcc_fb_gen_c_json_printer@@Base+0x1628>
   21c74:	ldrh	r3, [r3, #6]
   21c78:	cmp	r3, #0
   21c7c:	beq	21ca0 <__flatcc_fb_gen_c_json_printer@@Base+0x1628>
   21c80:	add	r5, r2, r3
   21c84:	ldr	r3, [r2, r3]
   21c88:	add	r3, r3, #4
   21c8c:	adds	r5, r5, r3
   21c90:	bne	21cac <__flatcc_fb_gen_c_json_printer@@Base+0x1634>
   21c94:	add	r9, r9, #1
   21c98:	add	r6, r6, #4
   21c9c:	b	21d78 <__flatcc_fb_gen_c_json_printer@@Base+0x1700>
   21ca0:	ldr	r3, [pc, #256]	; 21da8 <__flatcc_fb_gen_c_json_printer@@Base+0x1730>
   21ca4:	mov	r2, #224	; 0xe0
   21ca8:	b	21c40 <__flatcc_fb_gen_c_json_printer@@Base+0x15c8>
   21cac:	ldr	r4, [r5, #-4]
   21cb0:	cmp	r4, #0
   21cb4:	beq	21c94 <__flatcc_fb_gen_c_json_printer@@Base+0x161c>
   21cb8:	sub	r8, r4, #1
   21cbc:	lsr	r3, r4, #1
   21cc0:	mov	r1, r3
   21cc4:	mov	r2, r8
   21cc8:	mov	r0, r5
   21ccc:	str	r3, [sp, #4]
   21cd0:	bl	20e18 <__flatcc_fb_gen_c_json_printer@@Base+0x7a0>
   21cd4:	ldr	r3, [sp, #4]
   21cd8:	subs	r3, r3, #1
   21cdc:	bcs	21cc0 <__flatcc_fb_gen_c_json_printer@@Base+0x1648>
   21ce0:	add	r3, r5, r4, lsl #2
   21ce4:	mul	r4, sl, r4
   21ce8:	cmp	r8, #0
   21cec:	add	r4, r4, #4
   21cf0:	beq	21c94 <__flatcc_fb_gen_c_json_printer@@Base+0x161c>
   21cf4:	ldr	r1, [r3, #-4]
   21cf8:	ldr	r2, [r5]
   21cfc:	sub	r1, r1, r4
   21d00:	add	r2, r4, r2
   21d04:	sub	r8, r8, #1
   21d08:	str	r1, [r5]
   21d0c:	mov	r0, r5
   21d10:	str	r2, [r3, #-4]!
   21d14:	mov	r1, fp
   21d18:	mov	r2, r8
   21d1c:	str	r3, [sp, #4]
   21d20:	bl	20e18 <__flatcc_fb_gen_c_json_printer@@Base+0x7a0>
   21d24:	ldr	r3, [sp, #4]
   21d28:	b	21ce8 <__flatcc_fb_gen_c_json_printer@@Base+0x1670>
   21d2c:	ldr	r3, [r0]
   21d30:	adds	r2, r0, r3
   21d34:	beq	21c24 <__flatcc_fb_gen_c_json_printer@@Base+0x15ac>
   21d38:	ldr	r3, [r0, r3]
   21d3c:	sub	r3, r2, r3
   21d40:	ldrh	r1, [r3]
   21d44:	cmp	r1, #5
   21d48:	bls	21c38 <__flatcc_fb_gen_c_json_printer@@Base+0x15c0>
   21d4c:	ldrh	r3, [r3, #4]
   21d50:	cmp	r3, #0
   21d54:	beq	21c38 <__flatcc_fb_gen_c_json_printer@@Base+0x15c0>
   21d58:	add	r7, r2, r3
   21d5c:	ldr	r3, [r2, r3]
   21d60:	mov	r9, #0
   21d64:	add	r3, r3, #4
   21d68:	add	r7, r7, r3
   21d6c:	mov	r6, r7
   21d70:	mvn	sl, #3
   21d74:	mov	fp, r9
   21d78:	cmp	r7, #0
   21d7c:	beq	21d8c <__flatcc_fb_gen_c_json_printer@@Base+0x1714>
   21d80:	ldr	r3, [r7, #-4]
   21d84:	cmp	r9, r3
   21d88:	bcc	21c4c <__flatcc_fb_gen_c_json_printer@@Base+0x15d4>
   21d8c:	add	sp, sp, #20
   21d90:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21d94:	movtpl	r4, #9794	; 0x2642
   21d98:	andeq	r6, r4, r4, asr #17
   21d9c:	strdeq	r6, [r4], -r7
   21da0:	andeq	r6, r4, ip, lsl #19
   21da4:			; <UNDEFINED> instruction: 0x000469b2
   21da8:	ldrdeq	r6, [r4], -lr

00021dac <__flatcc_fb_codegen_bfbs_to_buffer@@Base>:
   21dac:	push	{r4, r5, r6, r7, lr}
   21db0:	sub	sp, sp, #236	; 0xec
   21db4:	mov	r5, r3
   21db8:	mov	r7, r1
   21dbc:	mov	r6, r0
   21dc0:	mov	r0, sp
   21dc4:	mov	r4, r2
   21dc8:	bl	2a8f4 <flatcc_builder_init@@Base>
   21dcc:	mov	r2, r7
   21dd0:	mov	r1, r6
   21dd4:	mov	r0, sp
   21dd8:	bl	21294 <__flatcc_fb_gen_c_json_printer@@Base+0xc1c>
   21ddc:	ldr	r2, [r5]
   21de0:	mov	r1, r4
   21de4:	mov	r0, sp
   21de8:	bl	2cdb4 <flatcc_builder_copy_buffer@@Base>
   21dec:	cmp	r0, #0
   21df0:	beq	21dfc <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x50>
   21df4:	mov	r0, r4
   21df8:	bl	21c00 <__flatcc_fb_gen_c_json_printer@@Base+0x1588>
   21dfc:	mov	r0, sp
   21e00:	bl	2cce8 <flatcc_builder_get_buffer_size@@Base>
   21e04:	str	r0, [r5]
   21e08:	mov	r0, sp
   21e0c:	bl	2aa80 <flatcc_builder_clear@@Base>
   21e10:	mov	r0, r4
   21e14:	add	sp, sp, #236	; 0xec
   21e18:	pop	{r4, r5, r6, r7, pc}

00021e1c <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base>:
   21e1c:	push	{r4, r5, r6, lr}
   21e20:	sub	sp, sp, #232	; 0xe8
   21e24:	mov	r6, r1
   21e28:	mov	r5, r0
   21e2c:	mov	r0, sp
   21e30:	mov	r4, r2
   21e34:	bl	2a8f4 <flatcc_builder_init@@Base>
   21e38:	mov	r2, r6
   21e3c:	mov	r1, r5
   21e40:	mov	r0, sp
   21e44:	bl	21294 <__flatcc_fb_gen_c_json_printer@@Base+0xc1c>
   21e48:	cmp	r0, #0
   21e4c:	movne	r4, #0
   21e50:	bne	21e6c <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base+0x50>
   21e54:	mov	r1, r4
   21e58:	mov	r0, sp
   21e5c:	bl	2ce00 <flatcc_builder_finalize_buffer@@Base>
   21e60:	subs	r4, r0, #0
   21e64:	beq	21e6c <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base+0x50>
   21e68:	bl	21c00 <__flatcc_fb_gen_c_json_printer@@Base+0x1588>
   21e6c:	mov	r0, sp
   21e70:	bl	2aa80 <flatcc_builder_clear@@Base>
   21e74:	mov	r0, r4
   21e78:	add	sp, sp, #232	; 0xe8
   21e7c:	pop	{r4, r5, r6, pc}

00021e80 <__flatcc_fb_codegen_bfbs_to_file@@Base>:
   21e80:	push	{r4, r5, r6, r7, r8, r9, lr}
   21e84:	mov	r5, r0
   21e88:	ldr	r4, [r0, #216]	; 0xd8
   21e8c:	ldr	r3, [pc, #316]	; 21fd0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x150>
   21e90:	cmp	r4, #0
   21e94:	moveq	r4, r3
   21e98:	sub	sp, sp, #20
   21e9c:	mov	r0, r4
   21ea0:	ldr	r7, [r1, #160]	; 0xa0
   21ea4:	mov	r6, r1
   21ea8:	bl	13fc8 <strlen@plt>
   21eac:	mov	r9, r0
   21eb0:	mov	r0, r7
   21eb4:	bl	13fc8 <strlen@plt>
   21eb8:	ldr	r2, [r5, #108]	; 0x6c
   21ebc:	cmp	r2, #0
   21ec0:	ldrne	r3, [pc, #268]	; 21fd4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x154>
   21ec4:	ldrne	r4, [r3]
   21ec8:	bne	21f3c <__flatcc_fb_codegen_bfbs_to_file@@Base+0xbc>
   21ecc:	ldr	r2, [pc, #260]	; 21fd8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x158>
   21ed0:	mov	r8, #1
   21ed4:	mov	r3, r0
   21ed8:	str	r2, [sp]
   21edc:	str	r8, [sp, #4]
   21ee0:	mov	r2, r7
   21ee4:	mov	r1, r9
   21ee8:	mov	r0, r4
   21eec:	bl	23bf8 <__flatcc_fb_create_join_path_n@@Base>
   21ef0:	subs	r7, r0, #0
   21ef4:	bne	21f10 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x90>
   21ef8:	ldr	r3, [pc, #220]	; 21fdc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x15c>
   21efc:	ldr	r0, [pc, #220]	; 21fe0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x160>
   21f00:	ldr	r1, [r3]
   21f04:	bl	14070 <fputs@plt>
   21f08:	mov	r0, r8
   21f0c:	bl	13fbc <exit@plt>
   21f10:	ldr	r1, [pc, #204]	; 21fe4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x164>
   21f14:	bl	13f08 <fopen@plt>
   21f18:	subs	r4, r0, #0
   21f1c:	bne	21f34 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xb4>
   21f20:	ldr	r3, [pc, #180]	; 21fdc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x15c>
   21f24:	mov	r2, r7
   21f28:	ldr	r1, [pc, #184]	; 21fe8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x168>
   21f2c:	ldr	r0, [r3]
   21f30:	bl	13fd4 <fprintf@plt>
   21f34:	mov	r0, r7
   21f38:	bl	13f14 <free@plt>
   21f3c:	cmp	r4, #0
   21f40:	mvneq	r5, #0
   21f44:	beq	21f84 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x104>
   21f48:	mov	r1, r6
   21f4c:	add	r2, sp, #12
   21f50:	mov	r0, r5
   21f54:	bl	21e1c <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base>
   21f58:	subs	r6, r0, #0
   21f5c:	bne	21f90 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x110>
   21f60:	ldr	r0, [pc, #132]	; 21fec <__flatcc_fb_codegen_bfbs_to_file@@Base+0x16c>
   21f64:	bl	13f80 <puts@plt>
   21f68:	mvn	r5, #0
   21f6c:	ldr	r3, [pc, #96]	; 21fd4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x154>
   21f70:	ldr	r3, [r3]
   21f74:	cmp	r4, r3
   21f78:	beq	21f84 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x104>
   21f7c:	mov	r0, r4
   21f80:	bl	1401c <fclose@plt>
   21f84:	mov	r0, r5
   21f88:	add	sp, sp, #20
   21f8c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   21f90:	mov	r3, r4
   21f94:	ldr	r2, [sp, #12]
   21f98:	mov	r1, #1
   21f9c:	bl	13f5c <fwrite@plt>
   21fa0:	ldr	r3, [sp, #12]
   21fa4:	cmp	r0, r3
   21fa8:	moveq	r5, #0
   21fac:	beq	21fc4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x144>
   21fb0:	ldr	r3, [pc, #36]	; 21fdc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x15c>
   21fb4:	ldr	r0, [pc, #52]	; 21ff0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x170>
   21fb8:	mvn	r5, #0
   21fbc:	ldr	r1, [r3]
   21fc0:	bl	14070 <fputs@plt>
   21fc4:	mov	r0, r6
   21fc8:	bl	13f14 <free@plt>
   21fcc:	b	21f6c <__flatcc_fb_codegen_bfbs_to_file@@Base+0xec>
   21fd0:	andeq	r1, r3, r1, lsr #28
   21fd4:	strheq	fp, [r5], -r4
   21fd8:	andeq	r0, r3, r1, lsl r5
   21fdc:	strheq	fp, [r5], -r0
   21fe0:	andeq	r0, r3, lr, ror #9
   21fe4:	andeq	r0, r3, r8, lsl #12
   21fe8:	muleq	r4, sp, sp
   21fec:	andeq	r6, r4, pc, asr #27
   21ff0:	strdeq	r6, [r4], -r0
   21ff4:	push	{r4, r5, r6, r7, r8, lr}
   21ff8:	mov	r5, r0
   21ffc:	ldr	r6, [r0]
   22000:	mov	r7, r1
   22004:	mov	r8, r2
   22008:	mov	r4, #0
   2200c:	ldr	r3, [r5, #12]
   22010:	cmp	r4, r3
   22014:	bcc	2201c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x19c>
   22018:	pop	{r4, r5, r6, r7, r8, pc}
   2201c:	ldr	r1, [r6, r4, lsl #2]
   22020:	cmp	r1, #0
   22024:	cmpne	r1, #2
   22028:	beq	22034 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1b4>
   2202c:	mov	r0, r8
   22030:	blx	r7
   22034:	add	r4, r4, #1
   22038:	b	2200c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x18c>
   2203c:	push	{r4, lr}
   22040:	mov	r4, r0
   22044:	ldr	r0, [r0]
   22048:	cmp	r0, #0
   2204c:	beq	22054 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1d4>
   22050:	bl	13f14 <free@plt>
   22054:	mov	r0, r4
   22058:	mov	r2, #16
   2205c:	mov	r1, #0
   22060:	pop	{r4, lr}
   22064:	b	13fec <memset@plt>
   22068:	push	{r0, r1, r2, r3, r4, lr}
   2206c:	add	r3, sp, #8
   22070:	str	r3, [sp, #4]
   22074:	ldr	r3, [pc, #24]	; 22094 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x214>
   22078:	mov	r2, r1
   2207c:	str	r3, [sp]
   22080:	mov	r3, #0
   22084:	bl	2d494 <cmetrohash64_1@@Base>
   22088:	ldr	r0, [sp, #8]
   2208c:	add	sp, sp, #20
   22090:	pop	{pc}		; (ldr pc, [sp], #4)
   22094:	svccs	0x00693b52
   22098:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2209c:	subs	r8, r3, #0
   220a0:	str	r1, [sp]
   220a4:	bne	220bc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x23c>
   220a8:	ldr	r3, [pc, #372]	; 22224 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3a4>
   220ac:	ldr	r1, [pc, #372]	; 22228 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3a8>
   220b0:	ldr	r0, [pc, #372]	; 2222c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3ac>
   220b4:	mov	r2, #114	; 0x72
   220b8:	bl	14094 <__assert_fail@plt>
   220bc:	cmp	r8, #2
   220c0:	ldreq	r3, [pc, #348]	; 22224 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3a4>
   220c4:	moveq	r2, #115	; 0x73
   220c8:	ldreq	r1, [pc, #344]	; 22228 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3a8>
   220cc:	ldreq	r0, [pc, #348]	; 22230 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3b0>
   220d0:	beq	220b8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x238>
   220d4:	cmp	r8, #1
   220d8:	ldreq	r3, [pc, #324]	; 22224 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3a4>
   220dc:	moveq	r2, #116	; 0x74
   220e0:	ldreq	r1, [pc, #320]	; 22228 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3a8>
   220e4:	ldreq	r0, [pc, #328]	; 22234 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3b4>
   220e8:	beq	220b8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x238>
   220ec:	mov	fp, r2
   220f0:	ldr	r2, [r0, #12]
   220f4:	mov	r3, #179	; 0xb3
   220f8:	ldr	r1, [r0, #8]
   220fc:	mul	r3, r3, r2
   22100:	mov	r6, r0
   22104:	cmp	r1, r3, lsr #8
   22108:	bcc	22138 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x2b8>
   2210c:	lsl	r1, r1, #1
   22110:	bl	22244 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3c4>
   22114:	cmp	r0, #0
   22118:	beq	22138 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x2b8>
   2211c:	ldr	r3, [pc, #276]	; 22238 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3b8>
   22120:	ldr	r2, [pc, #276]	; 2223c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3bc>
   22124:	ldr	r1, [pc, #276]	; 22240 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3c0>
   22128:	ldr	r0, [r3]
   2212c:	bl	13fd4 <fprintf@plt>
   22130:	mov	r0, #1
   22134:	bl	13fbc <exit@plt>
   22138:	mov	r1, fp
   2213c:	ldr	r0, [sp]
   22140:	ldr	r9, [r6, #12]
   22144:	ldr	sl, [r6]
   22148:	bl	22068 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1e8>
   2214c:	ldr	r3, [sp, #48]	; 0x30
   22150:	sub	r9, r9, #1
   22154:	sub	r3, r3, #2
   22158:	cmp	r3, #1
   2215c:	movhi	r7, #0
   22160:	ldrls	r3, [r6, #8]
   22164:	addls	r3, r3, #1
   22168:	strls	r3, [r6, #8]
   2216c:	and	r2, r9, r0
   22170:	add	r4, r0, #1
   22174:	bls	221ac <__flatcc_fb_codegen_bfbs_to_file@@Base+0x32c>
   22178:	ldr	r5, [sl, r2, lsl #2]
   2217c:	add	r3, sl, r2, lsl #2
   22180:	cmp	r5, #0
   22184:	bne	221d0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x350>
   22188:	cmp	r7, #0
   2218c:	moveq	r7, r3
   22190:	ldr	r3, [r6, #8]
   22194:	add	r3, r3, #1
   22198:	str	r3, [r6, #8]
   2219c:	str	r8, [r7]
   221a0:	b	22218 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x398>
   221a4:	and	r2, r4, r9
   221a8:	add	r4, r4, #1
   221ac:	ldr	r5, [sl, r2, lsl #2]
   221b0:	add	r3, sl, r2, lsl #2
   221b4:	cmp	r5, #0
   221b8:	cmpne	r5, #2
   221bc:	movne	r5, #1
   221c0:	moveq	r5, #0
   221c4:	bne	221a4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x324>
   221c8:	str	r8, [r3]
   221cc:	b	22218 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x398>
   221d0:	cmp	r5, #2
   221d4:	bne	221ec <__flatcc_fb_codegen_bfbs_to_file@@Base+0x36c>
   221d8:	cmp	r7, #0
   221dc:	moveq	r7, r3
   221e0:	and	r2, r9, r4
   221e4:	add	r4, r4, #1
   221e8:	b	22178 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x2f8>
   221ec:	mov	r2, fp
   221f0:	mov	r1, r5
   221f4:	ldr	r0, [sp]
   221f8:	str	r3, [sp, #4]
   221fc:	bl	1407c <strncmp@plt>
   22200:	ldr	r3, [sp, #4]
   22204:	cmp	r0, #0
   22208:	bne	221e0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x360>
   2220c:	ldr	r2, [sp, #48]	; 0x30
   22210:	cmp	r2, #0
   22214:	beq	221c8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x348>
   22218:	mov	r0, r5
   2221c:	add	sp, sp, #12
   22220:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22224:	andeq	r6, r4, r8, lsl lr
   22228:	andeq	r6, r4, r0, lsr lr
   2222c:	andeq	r6, r4, r0, lsl #29
   22230:	muleq	r4, r7, lr
   22234:	andeq	r6, r4, lr, lsr #29
   22238:	strheq	fp, [r5], -r0
   2223c:	andeq	r6, r4, r3, asr #29
   22240:	strdeq	r6, [r4], -r6	; <UNPREDICTABLE>
   22244:	ldr	r3, [r0, #8]
   22248:	push	{r4, r5, r6, r7, r8, lr}
   2224c:	cmp	r1, r3
   22250:	ldr	r7, [r0]
   22254:	sub	sp, sp, #24
   22258:	mov	r4, r0
   2225c:	movcc	r1, r3
   22260:	mov	r6, #4
   22264:	mov	r2, #179	; 0xb3
   22268:	mul	r3, r2, r6
   2226c:	cmp	r1, r3, lsr #8
   22270:	bhi	222ec <__flatcc_fb_codegen_bfbs_to_file@@Base+0x46c>
   22274:	mov	r1, #4
   22278:	mov	r0, r6
   2227c:	bl	13ee4 <calloc@plt>
   22280:	cmp	r0, #0
   22284:	str	r0, [sp, #8]
   22288:	mvneq	r0, #0
   2228c:	beq	222e4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x464>
   22290:	mov	r8, #3
   22294:	mov	r5, #0
   22298:	str	r5, [sp, #12]
   2229c:	str	r6, [sp, #20]
   222a0:	str	r5, [sp, #16]
   222a4:	ldr	r3, [r4, #12]
   222a8:	cmp	r5, r3
   222ac:	bcc	222f4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x474>
   222b0:	mov	r0, r4
   222b4:	bl	2203c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1bc>
   222b8:	add	r2, sp, #8
   222bc:	add	ip, sp, #24
   222c0:	mov	r3, r2
   222c4:	add	r4, r4, #8
   222c8:	ldm	r3!, {r0, r1}
   222cc:	cmp	r3, ip
   222d0:	str	r0, [r4, #-8]
   222d4:	str	r1, [r4, #-4]
   222d8:	mov	r2, r3
   222dc:	bne	222c0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x440>
   222e0:	mov	r0, #0
   222e4:	add	sp, sp, #24
   222e8:	pop	{r4, r5, r6, r7, r8, pc}
   222ec:	lsl	r6, r6, #1
   222f0:	b	22268 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3e8>
   222f4:	ldr	r6, [r7, r5, lsl #2]
   222f8:	cmp	r6, #0
   222fc:	cmpne	r6, #2
   22300:	beq	22324 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4a4>
   22304:	mov	r0, r6
   22308:	bl	13fc8 <strlen@plt>
   2230c:	str	r8, [sp]
   22310:	mov	r3, r6
   22314:	mov	r1, r6
   22318:	mov	r2, r0
   2231c:	add	r0, sp, #8
   22320:	bl	22098 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x218>
   22324:	add	r5, r5, #1
   22328:	b	222a4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x424>
   2232c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   22330:	ldr	r9, [r0]
   22334:	cmp	r9, #0
   22338:	bne	22348 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4c8>
   2233c:	mov	r5, #0
   22340:	mov	r0, r5
   22344:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   22348:	mov	r7, r1
   2234c:	ldr	r6, [r0, #12]
   22350:	mov	r1, r2
   22354:	mov	r0, r7
   22358:	mov	r8, r2
   2235c:	bl	22068 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1e8>
   22360:	sub	r6, r6, #1
   22364:	and	r3, r6, r0
   22368:	add	r4, r0, #1
   2236c:	ldr	r5, [r9, r3, lsl #2]
   22370:	cmp	r5, #0
   22374:	beq	2233c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4bc>
   22378:	cmp	r5, #2
   2237c:	beq	22398 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x518>
   22380:	mov	r2, r8
   22384:	mov	r1, r5
   22388:	mov	r0, r7
   2238c:	bl	1407c <strncmp@plt>
   22390:	cmp	r0, #0
   22394:	beq	22340 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4c0>
   22398:	and	r3, r6, r4
   2239c:	add	r4, r4, #1
   223a0:	b	2236c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4ec>
   223a4:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   223a8:	ldr	sl, [r0]
   223ac:	cmp	sl, #0
   223b0:	bne	223c0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x540>
   223b4:	mov	r6, #0
   223b8:	mov	r0, r6
   223bc:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   223c0:	mov	r8, r1
   223c4:	ldr	r7, [r0, #12]
   223c8:	mov	r5, r0
   223cc:	mov	r1, r2
   223d0:	mov	r0, r8
   223d4:	mov	r9, r2
   223d8:	bl	22068 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1e8>
   223dc:	sub	r7, r7, #1
   223e0:	and	r3, r7, r0
   223e4:	add	r4, r0, #1
   223e8:	ldr	r6, [sl, r3, lsl #2]
   223ec:	add	fp, sl, r3, lsl #2
   223f0:	cmp	r6, #0
   223f4:	beq	223b4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x534>
   223f8:	cmp	r6, #2
   223fc:	beq	22430 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x5b0>
   22400:	mov	r2, r9
   22404:	mov	r1, r6
   22408:	mov	r0, r8
   2240c:	bl	1407c <strncmp@plt>
   22410:	cmp	r0, #0
   22414:	bne	22430 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x5b0>
   22418:	mov	r3, #2
   2241c:	str	r3, [fp]
   22420:	ldr	r3, [r5, #8]
   22424:	sub	r3, r3, #1
   22428:	str	r3, [r5, #8]
   2242c:	b	223b8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x538>
   22430:	and	r3, r7, r4
   22434:	add	r4, r4, #1
   22438:	b	223e8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x568>

0002243c <str_set_clear@@Base>:
   2243c:	b	2203c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1bc>

00022440 <str_set_destroy@@Base>:
   22440:	cmp	r1, #0
   22444:	push	{r4, lr}
   22448:	mov	r4, r0
   2244c:	beq	22454 <str_set_destroy@@Base+0x14>
   22450:	bl	21ff4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x174>
   22454:	mov	r0, r4
   22458:	pop	{r4, lr}
   2245c:	b	2203c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1bc>

00022460 <str_set_init@@Base>:
   22460:	push	{r4, r5, r6, lr}
   22464:	mov	r2, #179	; 0xb3
   22468:	mov	r5, r0
   2246c:	mov	r4, #4
   22470:	mul	r3, r2, r4
   22474:	cmp	r1, r3, lsr #8
   22478:	bhi	224a8 <str_set_init@@Base+0x48>
   2247c:	mov	r1, #4
   22480:	mov	r0, r4
   22484:	bl	13ee4 <calloc@plt>
   22488:	cmp	r0, #0
   2248c:	str	r0, [r5]
   22490:	movne	r0, #0
   22494:	strne	r0, [r5, #4]
   22498:	strne	r4, [r5, #12]
   2249c:	strne	r0, [r5, #8]
   224a0:	mvneq	r0, #0
   224a4:	pop	{r4, r5, r6, pc}
   224a8:	lsl	r4, r4, #1
   224ac:	b	22470 <str_set_init@@Base+0x10>

000224b0 <str_set_resize@@Base>:
   224b0:	b	22244 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3c4>

000224b4 <str_set_insert@@Base>:
   224b4:	b	22098 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x218>

000224b8 <str_set_insert_item@@Base>:
   224b8:	push	{r0, r1, r4, r5, r6, lr}
   224bc:	mov	r5, r0
   224c0:	mov	r0, r1
   224c4:	mov	r4, r1
   224c8:	mov	r6, r2
   224cc:	bl	13fc8 <strlen@plt>
   224d0:	str	r6, [sp]
   224d4:	mov	r3, r4
   224d8:	mov	r1, r4
   224dc:	mov	r2, r0
   224e0:	mov	r0, r5
   224e4:	bl	22098 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x218>
   224e8:	add	sp, sp, #8
   224ec:	pop	{r4, r5, r6, pc}

000224f0 <str_set_find@@Base>:
   224f0:	b	2232c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4ac>

000224f4 <str_set_find_item@@Base>:
   224f4:	push	{r4, r5, r6, lr}
   224f8:	mov	r5, r0
   224fc:	mov	r0, r1
   22500:	mov	r4, r1
   22504:	bl	13fc8 <strlen@plt>
   22508:	mov	r1, r4
   2250c:	mov	r2, r0
   22510:	mov	r0, r5
   22514:	pop	{r4, r5, r6, lr}
   22518:	b	2232c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4ac>

0002251c <str_set_remove@@Base>:
   2251c:	b	223a4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x524>

00022520 <str_set_remove_item@@Base>:
   22520:	push	{r4, r5, r6, lr}
   22524:	mov	r5, r0
   22528:	mov	r0, r1
   2252c:	mov	r4, r1
   22530:	bl	13fc8 <strlen@plt>
   22534:	mov	r1, r4
   22538:	mov	r2, r0
   2253c:	mov	r0, r5
   22540:	pop	{r4, r5, r6, lr}
   22544:	b	223a4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x524>

00022548 <str_set_visit@@Base>:
   22548:	b	21ff4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x174>
   2254c:	push	{r4, r5, r6, r7, r8, lr}
   22550:	mov	r5, r0
   22554:	ldr	r6, [r0]
   22558:	mov	r7, r1
   2255c:	mov	r8, r2
   22560:	mov	r4, #0
   22564:	ldr	r3, [r5, #12]
   22568:	cmp	r4, r3
   2256c:	bcc	22574 <str_set_visit@@Base+0x2c>
   22570:	pop	{r4, r5, r6, r7, r8, pc}
   22574:	ldr	r1, [r6, r4, lsl #2]
   22578:	cmp	r1, #0
   2257c:	cmpne	r1, #2
   22580:	beq	2258c <str_set_visit@@Base+0x44>
   22584:	mov	r0, r8
   22588:	blx	r7
   2258c:	add	r4, r4, #1
   22590:	b	22564 <str_set_visit@@Base+0x1c>
   22594:	push	{r4, lr}
   22598:	mov	r4, r0
   2259c:	ldr	r0, [r0]
   225a0:	cmp	r0, #0
   225a4:	beq	225ac <str_set_visit@@Base+0x64>
   225a8:	bl	13f14 <free@plt>
   225ac:	mov	r0, r4
   225b0:	mov	r2, #16
   225b4:	mov	r1, #0
   225b8:	pop	{r4, lr}
   225bc:	b	13fec <memset@plt>
   225c0:	push	{r0, r1, r2, r3, r4, lr}
   225c4:	add	r3, sp, #8
   225c8:	str	r3, [sp, #4]
   225cc:	ldr	r3, [pc, #24]	; 225ec <str_set_visit@@Base+0xa4>
   225d0:	mov	r2, #4
   225d4:	str	r3, [sp]
   225d8:	mov	r3, #0
   225dc:	bl	2d494 <cmetrohash64_1@@Base>
   225e0:	ldr	r0, [sp, #8]
   225e4:	add	sp, sp, #20
   225e8:	pop	{pc}		; (ldr pc, [sp], #4)
   225ec:	svccs	0x00693b52
   225f0:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   225f4:	subs	r5, r2, #0
   225f8:	bne	22610 <str_set_visit@@Base+0xc8>
   225fc:	ldr	r3, [pc, #336]	; 22754 <str_set_visit@@Base+0x20c>
   22600:	ldr	r1, [pc, #336]	; 22758 <str_set_visit@@Base+0x210>
   22604:	ldr	r0, [pc, #336]	; 2275c <str_set_visit@@Base+0x214>
   22608:	mov	r2, #114	; 0x72
   2260c:	bl	14094 <__assert_fail@plt>
   22610:	cmp	r5, #2
   22614:	ldreq	r3, [pc, #312]	; 22754 <str_set_visit@@Base+0x20c>
   22618:	moveq	r2, #115	; 0x73
   2261c:	ldreq	r1, [pc, #308]	; 22758 <str_set_visit@@Base+0x210>
   22620:	ldreq	r0, [pc, #312]	; 22760 <str_set_visit@@Base+0x218>
   22624:	beq	2260c <str_set_visit@@Base+0xc4>
   22628:	cmp	r5, #1
   2262c:	ldreq	r3, [pc, #288]	; 22754 <str_set_visit@@Base+0x20c>
   22630:	moveq	r2, #116	; 0x74
   22634:	ldreq	r1, [pc, #284]	; 22758 <str_set_visit@@Base+0x210>
   22638:	ldreq	r0, [pc, #292]	; 22764 <str_set_visit@@Base+0x21c>
   2263c:	beq	2260c <str_set_visit@@Base+0xc4>
   22640:	ldr	r2, [r0, #12]
   22644:	mov	r7, r3
   22648:	mov	r3, #179	; 0xb3
   2264c:	mov	r6, r1
   22650:	mul	r3, r3, r2
   22654:	ldr	r1, [r0, #8]
   22658:	mov	r4, r0
   2265c:	cmp	r1, r3, lsr #8
   22660:	bcc	22690 <str_set_visit@@Base+0x148>
   22664:	lsl	r1, r1, #1
   22668:	bl	22774 <str_set_visit@@Base+0x22c>
   2266c:	cmp	r0, #0
   22670:	beq	22690 <str_set_visit@@Base+0x148>
   22674:	ldr	r3, [pc, #236]	; 22768 <str_set_visit@@Base+0x220>
   22678:	ldr	r2, [pc, #236]	; 2276c <str_set_visit@@Base+0x224>
   2267c:	ldr	r1, [pc, #236]	; 22770 <str_set_visit@@Base+0x228>
   22680:	ldr	r0, [r3]
   22684:	bl	13fd4 <fprintf@plt>
   22688:	mov	r0, #1
   2268c:	bl	13fbc <exit@plt>
   22690:	add	r0, sp, #8
   22694:	ldr	r8, [r4, #12]
   22698:	str	r6, [r0, #-4]!
   2269c:	ldr	r9, [r4]
   226a0:	bl	225c0 <str_set_visit@@Base+0x78>
   226a4:	sub	r3, r7, #2
   226a8:	cmp	r3, #1
   226ac:	sub	r8, r8, #1
   226b0:	ldrls	r2, [r4, #8]
   226b4:	movhi	r2, #0
   226b8:	addls	r2, r2, #1
   226bc:	and	r1, r8, r0
   226c0:	add	r3, r0, #1
   226c4:	strls	r2, [r4, #8]
   226c8:	bls	226fc <str_set_visit@@Base+0x1b4>
   226cc:	ldr	r0, [r9, r1, lsl #2]
   226d0:	add	ip, r9, r1, lsl #2
   226d4:	cmp	r0, #0
   226d8:	bne	22720 <str_set_visit@@Base+0x1d8>
   226dc:	ldr	r3, [r4, #8]
   226e0:	cmp	r2, #0
   226e4:	add	r3, r3, #1
   226e8:	moveq	r2, ip
   226ec:	str	r3, [r4, #8]
   226f0:	b	22718 <str_set_visit@@Base+0x1d0>
   226f4:	and	r1, r8, r3
   226f8:	add	r3, r3, #1
   226fc:	ldr	r0, [r9, r1, lsl #2]
   22700:	add	r2, r9, r1, lsl #2
   22704:	cmp	r0, #0
   22708:	cmpne	r0, #2
   2270c:	movne	r0, #1
   22710:	moveq	r0, #0
   22714:	bne	226f4 <str_set_visit@@Base+0x1ac>
   22718:	str	r5, [r2]
   2271c:	b	2274c <str_set_visit@@Base+0x204>
   22720:	cmp	r0, #2
   22724:	bne	2273c <str_set_visit@@Base+0x1f4>
   22728:	cmp	r2, #0
   2272c:	moveq	r2, ip
   22730:	and	r1, r8, r3
   22734:	add	r3, r3, #1
   22738:	b	226cc <str_set_visit@@Base+0x184>
   2273c:	cmp	r6, r0
   22740:	bne	22730 <str_set_visit@@Base+0x1e8>
   22744:	cmp	r7, #0
   22748:	streq	r5, [ip]
   2274c:	add	sp, sp, #12
   22750:	pop	{r4, r5, r6, r7, r8, r9, pc}
   22754:	andeq	r6, r4, r0, lsl pc
   22758:	andeq	r6, r4, r0, lsr lr
   2275c:	andeq	r6, r4, r0, lsl #29
   22760:	muleq	r4, r7, lr
   22764:	andeq	r6, r4, lr, lsr #29
   22768:	strheq	fp, [r5], -r0
   2276c:	andeq	r6, r4, r3, asr #29
   22770:	strdeq	r6, [r4], -r6	; <UNPREDICTABLE>
   22774:	ldr	r3, [r0, #8]
   22778:	push	{r4, r5, r6, r7, lr}
   2277c:	cmp	r1, r3
   22780:	ldr	r7, [r0]
   22784:	sub	sp, sp, #20
   22788:	mov	r4, r0
   2278c:	movcc	r1, r3
   22790:	mov	r6, #4
   22794:	mov	r2, #179	; 0xb3
   22798:	mul	r3, r2, r6
   2279c:	cmp	r1, r3, lsr #8
   227a0:	bhi	2281c <str_set_visit@@Base+0x2d4>
   227a4:	mov	r1, #4
   227a8:	mov	r0, r6
   227ac:	bl	13ee4 <calloc@plt>
   227b0:	cmp	r0, #0
   227b4:	str	r0, [sp]
   227b8:	mvneq	r0, #0
   227bc:	beq	22814 <str_set_visit@@Base+0x2cc>
   227c0:	str	r6, [sp, #12]
   227c4:	mov	r6, #3
   227c8:	mov	r5, #0
   227cc:	str	r5, [sp, #4]
   227d0:	str	r5, [sp, #8]
   227d4:	ldr	r3, [r4, #12]
   227d8:	cmp	r5, r3
   227dc:	bcc	22824 <str_set_visit@@Base+0x2dc>
   227e0:	mov	r0, r4
   227e4:	bl	22594 <str_set_visit@@Base+0x4c>
   227e8:	mov	r2, sp
   227ec:	add	ip, sp, #16
   227f0:	mov	r3, r2
   227f4:	add	r4, r4, #8
   227f8:	ldm	r3!, {r0, r1}
   227fc:	cmp	r3, ip
   22800:	str	r0, [r4, #-8]
   22804:	str	r1, [r4, #-4]
   22808:	mov	r2, r3
   2280c:	bne	227f0 <str_set_visit@@Base+0x2a8>
   22810:	mov	r0, #0
   22814:	add	sp, sp, #20
   22818:	pop	{r4, r5, r6, r7, pc}
   2281c:	lsl	r6, r6, #1
   22820:	b	22798 <str_set_visit@@Base+0x250>
   22824:	ldr	r2, [r7, r5, lsl #2]
   22828:	cmp	r2, #0
   2282c:	cmpne	r2, #2
   22830:	beq	22844 <str_set_visit@@Base+0x2fc>
   22834:	mov	r3, r6
   22838:	mov	r1, r2
   2283c:	mov	r0, sp
   22840:	bl	225f0 <str_set_visit@@Base+0xa8>
   22844:	add	r5, r5, #1
   22848:	b	227d4 <str_set_visit@@Base+0x28c>
   2284c:	push	{r0, r1, r4, r5, r6, lr}
   22850:	ldr	r6, [r0]
   22854:	cmp	r6, #0
   22858:	bne	22868 <str_set_visit@@Base+0x320>
   2285c:	mov	r0, #0
   22860:	add	sp, sp, #8
   22864:	pop	{r4, r5, r6, pc}
   22868:	ldr	r4, [r0, #12]
   2286c:	add	r0, sp, #8
   22870:	mov	r5, r1
   22874:	str	r1, [r0, #-4]!
   22878:	bl	225c0 <str_set_visit@@Base+0x78>
   2287c:	sub	r4, r4, #1
   22880:	and	r2, r4, r0
   22884:	add	r3, r0, #1
   22888:	ldr	r0, [r6, r2, lsl #2]
   2288c:	cmp	r0, #0
   22890:	beq	2285c <str_set_visit@@Base+0x314>
   22894:	cmp	r0, #2
   22898:	beq	228a4 <str_set_visit@@Base+0x35c>
   2289c:	cmp	r5, r0
   228a0:	beq	22860 <str_set_visit@@Base+0x318>
   228a4:	and	r2, r4, r3
   228a8:	add	r3, r3, #1
   228ac:	b	22888 <str_set_visit@@Base+0x340>
   228b0:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   228b4:	ldr	r7, [r0]
   228b8:	cmp	r7, #0
   228bc:	bne	228cc <str_set_visit@@Base+0x384>
   228c0:	mov	r0, #0
   228c4:	add	sp, sp, #12
   228c8:	pop	{r4, r5, r6, r7, pc}
   228cc:	ldr	r5, [r0, #12]
   228d0:	mov	r4, r0
   228d4:	add	r0, sp, #8
   228d8:	mov	r6, r1
   228dc:	str	r1, [r0, #-4]!
   228e0:	bl	225c0 <str_set_visit@@Base+0x78>
   228e4:	sub	r5, r5, #1
   228e8:	and	r2, r5, r0
   228ec:	add	r3, r0, #1
   228f0:	ldr	r0, [r7, r2, lsl #2]
   228f4:	add	r1, r7, r2, lsl #2
   228f8:	cmp	r0, #0
   228fc:	beq	228c0 <str_set_visit@@Base+0x378>
   22900:	cmp	r0, #2
   22904:	beq	22928 <str_set_visit@@Base+0x3e0>
   22908:	cmp	r6, r0
   2290c:	bne	22928 <str_set_visit@@Base+0x3e0>
   22910:	mov	r3, #2
   22914:	str	r3, [r1]
   22918:	ldr	r3, [r4, #8]
   2291c:	sub	r3, r3, #1
   22920:	str	r3, [r4, #8]
   22924:	b	228c4 <str_set_visit@@Base+0x37c>
   22928:	and	r2, r5, r3
   2292c:	add	r3, r3, #1
   22930:	b	228f0 <str_set_visit@@Base+0x3a8>

00022934 <ptr_set_clear@@Base>:
   22934:	b	22594 <str_set_visit@@Base+0x4c>

00022938 <ptr_set_destroy@@Base>:
   22938:	cmp	r1, #0
   2293c:	push	{r4, lr}
   22940:	mov	r4, r0
   22944:	beq	2294c <ptr_set_destroy@@Base+0x14>
   22948:	bl	2254c <str_set_visit@@Base+0x4>
   2294c:	mov	r0, r4
   22950:	pop	{r4, lr}
   22954:	b	22594 <str_set_visit@@Base+0x4c>

00022958 <ptr_set_init@@Base>:
   22958:	push	{r4, r5, r6, lr}
   2295c:	mov	r2, #179	; 0xb3
   22960:	mov	r5, r0
   22964:	mov	r4, #4
   22968:	mul	r3, r2, r4
   2296c:	cmp	r1, r3, lsr #8
   22970:	bhi	229a0 <ptr_set_init@@Base+0x48>
   22974:	mov	r1, #4
   22978:	mov	r0, r4
   2297c:	bl	13ee4 <calloc@plt>
   22980:	cmp	r0, #0
   22984:	str	r0, [r5]
   22988:	movne	r0, #0
   2298c:	strne	r0, [r5, #4]
   22990:	strne	r4, [r5, #12]
   22994:	strne	r0, [r5, #8]
   22998:	mvneq	r0, #0
   2299c:	pop	{r4, r5, r6, pc}
   229a0:	lsl	r4, r4, #1
   229a4:	b	22968 <ptr_set_init@@Base+0x10>

000229a8 <ptr_set_resize@@Base>:
   229a8:	b	22774 <str_set_visit@@Base+0x22c>

000229ac <ptr_set_insert@@Base>:
   229ac:	mov	r2, r3
   229b0:	ldr	r3, [sp]
   229b4:	b	225f0 <str_set_visit@@Base+0xa8>

000229b8 <ptr_set_insert_item@@Base>:
   229b8:	mov	r3, r2
   229bc:	mov	r2, r1
   229c0:	b	225f0 <str_set_visit@@Base+0xa8>

000229c4 <ptr_set_find@@Base>:
   229c4:	b	2284c <str_set_visit@@Base+0x304>

000229c8 <ptr_set_find_item@@Base>:
   229c8:	b	2284c <str_set_visit@@Base+0x304>

000229cc <ptr_set_remove@@Base>:
   229cc:	b	228b0 <str_set_visit@@Base+0x368>

000229d0 <ptr_set_remove_item@@Base>:
   229d0:	b	228b0 <str_set_visit@@Base+0x368>

000229d4 <ptr_set_visit@@Base>:
   229d4:	b	2254c <str_set_visit@@Base+0x4>
   229d8:	push	{r4, r5, r6, r7, r8, lr}
   229dc:	mov	r5, r0
   229e0:	ldr	r6, [r0]
   229e4:	mov	r7, r1
   229e8:	mov	r8, r2
   229ec:	mov	r4, #0
   229f0:	ldr	r3, [r5, #12]
   229f4:	cmp	r4, r3
   229f8:	bcc	22a00 <ptr_set_visit@@Base+0x2c>
   229fc:	pop	{r4, r5, r6, r7, r8, pc}
   22a00:	ldr	r1, [r6, r4, lsl #2]
   22a04:	cmp	r1, #0
   22a08:	cmpne	r1, #2
   22a0c:	beq	22a18 <ptr_set_visit@@Base+0x44>
   22a10:	mov	r0, r8
   22a14:	blx	r7
   22a18:	add	r4, r4, #1
   22a1c:	b	229f0 <ptr_set_visit@@Base+0x1c>
   22a20:	push	{r4, lr}
   22a24:	mov	r4, r0
   22a28:	ldr	r0, [r0]
   22a2c:	cmp	r0, #0
   22a30:	beq	22a38 <ptr_set_visit@@Base+0x64>
   22a34:	bl	13f14 <free@plt>
   22a38:	mov	r0, r4
   22a3c:	mov	r2, #16
   22a40:	mov	r1, #0
   22a44:	pop	{r4, lr}
   22a48:	b	13fec <memset@plt>
   22a4c:	push	{r0, r1, r2, r3, r4, lr}
   22a50:	add	r3, sp, #8
   22a54:	str	r3, [sp, #4]
   22a58:	ldr	r3, [pc, #24]	; 22a78 <ptr_set_visit@@Base+0xa4>
   22a5c:	mov	r2, r1
   22a60:	str	r3, [sp]
   22a64:	mov	r3, #0
   22a68:	bl	2d494 <cmetrohash64_1@@Base>
   22a6c:	ldr	r0, [sp, #8]
   22a70:	add	sp, sp, #20
   22a74:	pop	{pc}		; (ldr pc, [sp], #4)
   22a78:	svccs	0x00693b52
   22a7c:	ldr	r3, [r2, #4]
   22a80:	ldr	r2, [r3, #4]
   22a84:	cmp	r1, r2
   22a88:	bne	22aa8 <ptr_set_visit@@Base+0xd4>
   22a8c:	mov	r2, r1
   22a90:	push	{r4, lr}
   22a94:	ldr	r1, [r3]
   22a98:	bl	13f38 <memcmp@plt>
   22a9c:	clz	r0, r0
   22aa0:	lsr	r0, r0, #5
   22aa4:	pop	{r4, pc}
   22aa8:	mov	r0, #0
   22aac:	bx	lr
   22ab0:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22ab4:	subs	r8, r3, #0
   22ab8:	str	r1, [sp]
   22abc:	bne	22ad4 <ptr_set_visit@@Base+0x100>
   22ac0:	ldr	r3, [pc, #372]	; 22c3c <ptr_set_visit@@Base+0x268>
   22ac4:	ldr	r1, [pc, #372]	; 22c40 <ptr_set_visit@@Base+0x26c>
   22ac8:	ldr	r0, [pc, #372]	; 22c44 <ptr_set_visit@@Base+0x270>
   22acc:	mov	r2, #114	; 0x72
   22ad0:	bl	14094 <__assert_fail@plt>
   22ad4:	cmp	r8, #2
   22ad8:	ldreq	r3, [pc, #348]	; 22c3c <ptr_set_visit@@Base+0x268>
   22adc:	moveq	r2, #115	; 0x73
   22ae0:	ldreq	r1, [pc, #344]	; 22c40 <ptr_set_visit@@Base+0x26c>
   22ae4:	ldreq	r0, [pc, #348]	; 22c48 <ptr_set_visit@@Base+0x274>
   22ae8:	beq	22ad0 <ptr_set_visit@@Base+0xfc>
   22aec:	cmp	r8, #1
   22af0:	ldreq	r3, [pc, #324]	; 22c3c <ptr_set_visit@@Base+0x268>
   22af4:	moveq	r2, #116	; 0x74
   22af8:	ldreq	r1, [pc, #320]	; 22c40 <ptr_set_visit@@Base+0x26c>
   22afc:	ldreq	r0, [pc, #328]	; 22c4c <ptr_set_visit@@Base+0x278>
   22b00:	beq	22ad0 <ptr_set_visit@@Base+0xfc>
   22b04:	mov	fp, r2
   22b08:	ldr	r2, [r0, #12]
   22b0c:	mov	r3, #179	; 0xb3
   22b10:	ldr	r1, [r0, #8]
   22b14:	mul	r3, r3, r2
   22b18:	mov	r6, r0
   22b1c:	cmp	r1, r3, lsr #8
   22b20:	bcc	22b50 <ptr_set_visit@@Base+0x17c>
   22b24:	lsl	r1, r1, #1
   22b28:	bl	22c5c <ptr_set_visit@@Base+0x288>
   22b2c:	cmp	r0, #0
   22b30:	beq	22b50 <ptr_set_visit@@Base+0x17c>
   22b34:	ldr	r3, [pc, #276]	; 22c50 <ptr_set_visit@@Base+0x27c>
   22b38:	ldr	r2, [pc, #276]	; 22c54 <ptr_set_visit@@Base+0x280>
   22b3c:	ldr	r1, [pc, #276]	; 22c58 <ptr_set_visit@@Base+0x284>
   22b40:	ldr	r0, [r3]
   22b44:	bl	13fd4 <fprintf@plt>
   22b48:	mov	r0, #1
   22b4c:	bl	13fbc <exit@plt>
   22b50:	mov	r1, fp
   22b54:	ldr	r0, [sp]
   22b58:	ldr	r9, [r6, #12]
   22b5c:	ldr	sl, [r6]
   22b60:	bl	22a4c <ptr_set_visit@@Base+0x78>
   22b64:	ldr	r3, [sp, #48]	; 0x30
   22b68:	sub	r9, r9, #1
   22b6c:	sub	r3, r3, #2
   22b70:	cmp	r3, #1
   22b74:	movhi	r7, #0
   22b78:	ldrls	r3, [r6, #8]
   22b7c:	addls	r3, r3, #1
   22b80:	strls	r3, [r6, #8]
   22b84:	and	r2, r9, r0
   22b88:	add	r4, r0, #1
   22b8c:	bls	22bc4 <ptr_set_visit@@Base+0x1f0>
   22b90:	ldr	r5, [sl, r2, lsl #2]
   22b94:	add	r3, sl, r2, lsl #2
   22b98:	cmp	r5, #0
   22b9c:	bne	22be8 <ptr_set_visit@@Base+0x214>
   22ba0:	cmp	r7, #0
   22ba4:	moveq	r7, r3
   22ba8:	ldr	r3, [r6, #8]
   22bac:	add	r3, r3, #1
   22bb0:	str	r3, [r6, #8]
   22bb4:	str	r8, [r7]
   22bb8:	b	22c30 <ptr_set_visit@@Base+0x25c>
   22bbc:	and	r2, r4, r9
   22bc0:	add	r4, r4, #1
   22bc4:	ldr	r5, [sl, r2, lsl #2]
   22bc8:	add	r3, sl, r2, lsl #2
   22bcc:	cmp	r5, #0
   22bd0:	cmpne	r5, #2
   22bd4:	movne	r5, #1
   22bd8:	moveq	r5, #0
   22bdc:	bne	22bbc <ptr_set_visit@@Base+0x1e8>
   22be0:	str	r8, [r3]
   22be4:	b	22c30 <ptr_set_visit@@Base+0x25c>
   22be8:	cmp	r5, #2
   22bec:	bne	22c04 <ptr_set_visit@@Base+0x230>
   22bf0:	cmp	r7, #0
   22bf4:	moveq	r7, r3
   22bf8:	and	r2, r9, r4
   22bfc:	add	r4, r4, #1
   22c00:	b	22b90 <ptr_set_visit@@Base+0x1bc>
   22c04:	mov	r2, r5
   22c08:	mov	r1, fp
   22c0c:	ldr	r0, [sp]
   22c10:	str	r3, [sp, #4]
   22c14:	bl	22a7c <ptr_set_visit@@Base+0xa8>
   22c18:	ldr	r3, [sp, #4]
   22c1c:	cmp	r0, #0
   22c20:	beq	22bf8 <ptr_set_visit@@Base+0x224>
   22c24:	ldr	r2, [sp, #48]	; 0x30
   22c28:	cmp	r2, #0
   22c2c:	beq	22be0 <ptr_set_visit@@Base+0x20c>
   22c30:	mov	r0, r5
   22c34:	add	sp, sp, #12
   22c38:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22c3c:	andeq	r6, r4, r8, lsr #30
   22c40:	andeq	r6, r4, r0, lsr lr
   22c44:	andeq	r6, r4, r0, lsl #29
   22c48:	muleq	r4, r7, lr
   22c4c:	andeq	r6, r4, lr, lsr #29
   22c50:	strheq	fp, [r5], -r0
   22c54:	andeq	r6, r4, r3, asr #29
   22c58:	strdeq	r6, [r4], -r6	; <UNPREDICTABLE>
   22c5c:	ldr	r3, [r0, #8]
   22c60:	push	{r4, r5, r6, r7, lr}
   22c64:	cmp	r1, r3
   22c68:	ldr	r7, [r0]
   22c6c:	sub	sp, sp, #28
   22c70:	mov	r4, r0
   22c74:	movcc	r1, r3
   22c78:	mov	r6, #4
   22c7c:	mov	r2, #179	; 0xb3
   22c80:	mul	r3, r2, r6
   22c84:	cmp	r1, r3, lsr #8
   22c88:	bhi	22d04 <ptr_set_visit@@Base+0x330>
   22c8c:	mov	r1, #4
   22c90:	mov	r0, r6
   22c94:	bl	13ee4 <calloc@plt>
   22c98:	cmp	r0, #0
   22c9c:	str	r0, [sp, #8]
   22ca0:	mvneq	r0, #0
   22ca4:	beq	22cfc <ptr_set_visit@@Base+0x328>
   22ca8:	str	r6, [sp, #20]
   22cac:	mov	r6, #3
   22cb0:	mov	r5, #0
   22cb4:	str	r5, [sp, #12]
   22cb8:	str	r5, [sp, #16]
   22cbc:	ldr	r3, [r4, #12]
   22cc0:	cmp	r5, r3
   22cc4:	bcc	22d0c <ptr_set_visit@@Base+0x338>
   22cc8:	mov	r0, r4
   22ccc:	bl	22a20 <ptr_set_visit@@Base+0x4c>
   22cd0:	add	r2, sp, #8
   22cd4:	add	ip, sp, #24
   22cd8:	mov	r3, r2
   22cdc:	add	r4, r4, #8
   22ce0:	ldm	r3!, {r0, r1}
   22ce4:	cmp	r3, ip
   22ce8:	str	r0, [r4, #-8]
   22cec:	str	r1, [r4, #-4]
   22cf0:	mov	r2, r3
   22cf4:	bne	22cd8 <ptr_set_visit@@Base+0x304>
   22cf8:	mov	r0, #0
   22cfc:	add	sp, sp, #28
   22d00:	pop	{r4, r5, r6, r7, pc}
   22d04:	lsl	r6, r6, #1
   22d08:	b	22c80 <ptr_set_visit@@Base+0x2ac>
   22d0c:	ldr	r3, [r7, r5, lsl #2]
   22d10:	cmp	r3, #0
   22d14:	cmpne	r3, #2
   22d18:	beq	22d30 <ptr_set_visit@@Base+0x35c>
   22d1c:	ldr	r1, [r3, #4]
   22d20:	add	r0, sp, #8
   22d24:	str	r6, [sp]
   22d28:	ldm	r1, {r1, r2}
   22d2c:	bl	22ab0 <ptr_set_visit@@Base+0xdc>
   22d30:	add	r5, r5, #1
   22d34:	b	22cbc <ptr_set_visit@@Base+0x2e8>
   22d38:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   22d3c:	ldr	r9, [r0]
   22d40:	cmp	r9, #0
   22d44:	bne	22d54 <ptr_set_visit@@Base+0x380>
   22d48:	mov	r5, #0
   22d4c:	mov	r0, r5
   22d50:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   22d54:	mov	r7, r1
   22d58:	ldr	r6, [r0, #12]
   22d5c:	mov	r1, r2
   22d60:	mov	r0, r7
   22d64:	mov	r8, r2
   22d68:	bl	22a4c <ptr_set_visit@@Base+0x78>
   22d6c:	sub	r6, r6, #1
   22d70:	and	r3, r6, r0
   22d74:	add	r4, r0, #1
   22d78:	ldr	r5, [r9, r3, lsl #2]
   22d7c:	cmp	r5, #0
   22d80:	beq	22d48 <ptr_set_visit@@Base+0x374>
   22d84:	cmp	r5, #2
   22d88:	beq	22da4 <ptr_set_visit@@Base+0x3d0>
   22d8c:	mov	r2, r5
   22d90:	mov	r1, r8
   22d94:	mov	r0, r7
   22d98:	bl	22a7c <ptr_set_visit@@Base+0xa8>
   22d9c:	cmp	r0, #0
   22da0:	bne	22d4c <ptr_set_visit@@Base+0x378>
   22da4:	and	r3, r6, r4
   22da8:	add	r4, r4, #1
   22dac:	b	22d78 <ptr_set_visit@@Base+0x3a4>
   22db0:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22db4:	ldr	sl, [r0]
   22db8:	cmp	sl, #0
   22dbc:	bne	22dcc <ptr_set_visit@@Base+0x3f8>
   22dc0:	mov	r6, #0
   22dc4:	mov	r0, r6
   22dc8:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22dcc:	mov	r8, r1
   22dd0:	ldr	r7, [r0, #12]
   22dd4:	mov	r5, r0
   22dd8:	mov	r1, r2
   22ddc:	mov	r0, r8
   22de0:	mov	r9, r2
   22de4:	bl	22a4c <ptr_set_visit@@Base+0x78>
   22de8:	sub	r7, r7, #1
   22dec:	and	r3, r7, r0
   22df0:	add	r4, r0, #1
   22df4:	ldr	r6, [sl, r3, lsl #2]
   22df8:	add	fp, sl, r3, lsl #2
   22dfc:	cmp	r6, #0
   22e00:	beq	22dc0 <ptr_set_visit@@Base+0x3ec>
   22e04:	cmp	r6, #2
   22e08:	beq	22e3c <ptr_set_visit@@Base+0x468>
   22e0c:	mov	r2, r6
   22e10:	mov	r1, r9
   22e14:	mov	r0, r8
   22e18:	bl	22a7c <ptr_set_visit@@Base+0xa8>
   22e1c:	cmp	r0, #0
   22e20:	beq	22e3c <ptr_set_visit@@Base+0x468>
   22e24:	mov	r3, #2
   22e28:	str	r3, [fp]
   22e2c:	ldr	r3, [r5, #8]
   22e30:	sub	r3, r3, #1
   22e34:	str	r3, [r5, #8]
   22e38:	b	22dc4 <ptr_set_visit@@Base+0x3f0>
   22e3c:	and	r3, r7, r4
   22e40:	add	r4, r4, #1
   22e44:	b	22df4 <ptr_set_visit@@Base+0x420>

00022e48 <fb_symbol_table_clear@@Base>:
   22e48:	b	22a20 <ptr_set_visit@@Base+0x4c>

00022e4c <fb_symbol_table_destroy@@Base>:
   22e4c:	cmp	r1, #0
   22e50:	push	{r4, lr}
   22e54:	mov	r4, r0
   22e58:	beq	22e60 <fb_symbol_table_destroy@@Base+0x14>
   22e5c:	bl	229d8 <ptr_set_visit@@Base+0x4>
   22e60:	mov	r0, r4
   22e64:	pop	{r4, lr}
   22e68:	b	22a20 <ptr_set_visit@@Base+0x4c>

00022e6c <fb_symbol_table_init@@Base>:
   22e6c:	push	{r4, r5, r6, lr}
   22e70:	mov	r2, #179	; 0xb3
   22e74:	mov	r5, r0
   22e78:	mov	r4, #4
   22e7c:	mul	r3, r2, r4
   22e80:	cmp	r1, r3, lsr #8
   22e84:	bhi	22eb4 <fb_symbol_table_init@@Base+0x48>
   22e88:	mov	r1, #4
   22e8c:	mov	r0, r4
   22e90:	bl	13ee4 <calloc@plt>
   22e94:	cmp	r0, #0
   22e98:	str	r0, [r5]
   22e9c:	movne	r0, #0
   22ea0:	strne	r0, [r5, #4]
   22ea4:	strne	r4, [r5, #12]
   22ea8:	strne	r0, [r5, #8]
   22eac:	mvneq	r0, #0
   22eb0:	pop	{r4, r5, r6, pc}
   22eb4:	lsl	r4, r4, #1
   22eb8:	b	22e7c <fb_symbol_table_init@@Base+0x10>

00022ebc <fb_symbol_table_resize@@Base>:
   22ebc:	b	22c5c <ptr_set_visit@@Base+0x288>

00022ec0 <fb_symbol_table_insert@@Base>:
   22ec0:	b	22ab0 <ptr_set_visit@@Base+0xdc>

00022ec4 <fb_symbol_table_insert_item@@Base>:
   22ec4:	ldr	ip, [r1, #4]
   22ec8:	push	{r0, r1, r2, lr}
   22ecc:	mov	r3, r1
   22ed0:	str	r2, [sp]
   22ed4:	ldm	ip, {r1, r2}
   22ed8:	bl	22ab0 <ptr_set_visit@@Base+0xdc>
   22edc:	add	sp, sp, #12
   22ee0:	pop	{pc}		; (ldr pc, [sp], #4)

00022ee4 <fb_symbol_table_find@@Base>:
   22ee4:	b	22d38 <ptr_set_visit@@Base+0x364>

00022ee8 <fb_symbol_table_find_item@@Base>:
   22ee8:	ldr	r3, [r1, #4]
   22eec:	ldm	r3, {r1, r2}
   22ef0:	b	22d38 <ptr_set_visit@@Base+0x364>

00022ef4 <fb_symbol_table_remove@@Base>:
   22ef4:	b	22db0 <ptr_set_visit@@Base+0x3dc>

00022ef8 <fb_symbol_table_remove_item@@Base>:
   22ef8:	ldr	r3, [r1, #4]
   22efc:	ldm	r3, {r1, r2}
   22f00:	b	22db0 <ptr_set_visit@@Base+0x3dc>

00022f04 <fb_symbol_table_visit@@Base>:
   22f04:	b	229d8 <ptr_set_visit@@Base+0x4>
   22f08:	push	{r4, r5, r6, r7, r8, lr}
   22f0c:	mov	r5, r0
   22f10:	ldr	r6, [r0]
   22f14:	mov	r7, r1
   22f18:	mov	r8, r2
   22f1c:	mov	r4, #0
   22f20:	ldr	r3, [r5, #12]
   22f24:	cmp	r4, r3
   22f28:	bcc	22f30 <fb_symbol_table_visit@@Base+0x2c>
   22f2c:	pop	{r4, r5, r6, r7, r8, pc}
   22f30:	ldr	r1, [r6, r4, lsl #2]
   22f34:	cmp	r1, #0
   22f38:	cmpne	r1, #2
   22f3c:	beq	22f48 <fb_symbol_table_visit@@Base+0x44>
   22f40:	mov	r0, r8
   22f44:	blx	r7
   22f48:	add	r4, r4, #1
   22f4c:	b	22f20 <fb_symbol_table_visit@@Base+0x1c>
   22f50:	push	{r4, lr}
   22f54:	mov	r4, r0
   22f58:	ldr	r0, [r0]
   22f5c:	cmp	r0, #0
   22f60:	beq	22f68 <fb_symbol_table_visit@@Base+0x64>
   22f64:	bl	13f14 <free@plt>
   22f68:	mov	r0, r4
   22f6c:	mov	r2, #16
   22f70:	mov	r1, #0
   22f74:	pop	{r4, lr}
   22f78:	b	13fec <memset@plt>
   22f7c:	cmp	r1, #0
   22f80:	push	{r4, r5, r6, lr}
   22f84:	movgt	r5, r0
   22f88:	movgt	r0, r2
   22f8c:	bgt	23074 <fb_symbol_table_visit@@Base+0x170>
   22f90:	mov	r6, r1
   22f94:	mov	r5, r0
   22f98:	mov	r4, r2
   22f9c:	adds	r0, r4, #0
   22fa0:	movne	r0, #1
   22fa4:	adds	r2, r5, #0
   22fa8:	movne	r2, #1
   22fac:	tst	r0, r2
   22fb0:	bne	22fc0 <fb_symbol_table_visit@@Base+0xbc>
   22fb4:	orr	r0, r0, r2
   22fb8:	eor	r0, r0, #1
   22fbc:	pop	{r4, r5, r6, pc}
   22fc0:	ldr	r3, [r4, #4]
   22fc4:	ldr	r1, [r5, #4]
   22fc8:	ldr	r2, [r3, #4]
   22fcc:	ldr	r0, [r1, #4]
   22fd0:	cmp	r2, r0
   22fd4:	bne	23080 <fb_symbol_table_visit@@Base+0x17c>
   22fd8:	ldr	r1, [r1]
   22fdc:	ldr	r0, [r3]
   22fe0:	bl	1407c <strncmp@plt>
   22fe4:	cmp	r0, #0
   22fe8:	bne	23080 <fb_symbol_table_visit@@Base+0x17c>
   22fec:	adds	r6, r6, #1
   22ff0:	ldr	r4, [r4]
   22ff4:	ldr	r5, [r5]
   22ff8:	bne	22f9c <fb_symbol_table_visit@@Base+0x98>
   22ffc:	clz	r0, r4
   23000:	lsr	r0, r0, #5
   23004:	pop	{r4, r5, r6, pc}
   23008:	ldr	r3, [r0, #4]
   2300c:	ldr	ip, [r3]
   23010:	ldr	r3, [r3, #4]
   23014:	cmp	r3, r1
   23018:	bhi	23080 <fb_symbol_table_visit@@Base+0x17c>
   2301c:	mov	r2, #0
   23020:	cmp	r3, r2
   23024:	bne	2303c <fb_symbol_table_visit@@Base+0x138>
   23028:	cmp	r1, r3
   2302c:	bne	23054 <fb_symbol_table_visit@@Base+0x150>
   23030:	ldr	r0, [r0]
   23034:	clz	r0, r0
   23038:	b	23000 <fb_symbol_table_visit@@Base+0xfc>
   2303c:	ldrb	r4, [ip, r2]
   23040:	ldrb	lr, [r5, r2]
   23044:	cmp	r4, lr
   23048:	bne	23080 <fb_symbol_table_visit@@Base+0x17c>
   2304c:	add	r2, r2, #1
   23050:	b	23020 <fb_symbol_table_visit@@Base+0x11c>
   23054:	ldrb	r2, [r5, r3]
   23058:	cmp	r2, #46	; 0x2e
   2305c:	bne	23080 <fb_symbol_table_visit@@Base+0x17c>
   23060:	mvn	r2, r3
   23064:	ldr	r0, [r0]
   23068:	add	r3, r3, #1
   2306c:	add	r1, r1, r2
   23070:	add	r5, r5, r3
   23074:	cmp	r0, #0
   23078:	bne	23008 <fb_symbol_table_visit@@Base+0x104>
   2307c:	pop	{r4, r5, r6, pc}
   23080:	mov	r0, #0
   23084:	pop	{r4, r5, r6, pc}
   23088:	cmp	r1, #0
   2308c:	push	{r4, r5, r6, r7, r8, lr}
   23090:	ble	23150 <fb_symbol_table_visit@@Base+0x24c>
   23094:	ldr	r7, [pc, #248]	; 23194 <fb_symbol_table_visit@@Base+0x290>
   23098:	ldr	r5, [pc, #248]	; 23198 <fb_symbol_table_visit@@Base+0x294>
   2309c:	ldr	r6, [pc, #248]	; 2319c <fb_symbol_table_visit@@Base+0x298>
   230a0:	mov	r3, r0
   230a4:	mov	r0, #0
   230a8:	mov	r2, #0
   230ac:	cmp	r1, r2
   230b0:	bne	23174 <fb_symbol_table_visit@@Base+0x270>
   230b4:	sub	r4, r2, #1
   230b8:	add	r4, r3, r4
   230bc:	mov	lr, r3
   230c0:	mov	ip, r7
   230c4:	cmp	r4, lr
   230c8:	beq	230d8 <fb_symbol_table_visit@@Base+0x1d4>
   230cc:	ldrb	r8, [lr], #1
   230d0:	cmp	r8, #0
   230d4:	bne	23188 <fb_symbol_table_visit@@Base+0x284>
   230d8:	eor	r0, r0, r5
   230dc:	eor	r0, r0, ip
   230e0:	cmp	r1, r2
   230e4:	mul	r0, r6, r0
   230e8:	popeq	{r4, r5, r6, r7, r8, pc}
   230ec:	mvn	ip, r2
   230f0:	add	r2, r2, #1
   230f4:	add	r1, r1, ip
   230f8:	add	r3, r3, r2
   230fc:	b	230a8 <fb_symbol_table_visit@@Base+0x1a4>
   23100:	ldr	r2, [r3, #4]
   23104:	ldm	r2, {r1, ip}
   23108:	mov	r2, r4
   2310c:	sub	ip, ip, #1
   23110:	add	ip, r1, ip
   23114:	cmp	r1, ip
   23118:	beq	23128 <fb_symbol_table_visit@@Base+0x224>
   2311c:	ldrb	r7, [r1], #1
   23120:	cmp	r7, #0
   23124:	bne	23144 <fb_symbol_table_visit@@Base+0x240>
   23128:	eor	r0, r0, r5
   2312c:	eor	r0, r0, r2
   23130:	adds	lr, lr, #1
   23134:	mul	r0, r6, r0
   23138:	ldr	r3, [r3]
   2313c:	bne	23168 <fb_symbol_table_visit@@Base+0x264>
   23140:	pop	{r4, r5, r6, r7, r8, pc}
   23144:	add	r2, r2, r2, lsl #5
   23148:	eor	r2, r2, r7
   2314c:	b	23114 <fb_symbol_table_visit@@Base+0x210>
   23150:	ldr	r4, [pc, #60]	; 23194 <fb_symbol_table_visit@@Base+0x290>
   23154:	ldr	r5, [pc, #60]	; 23198 <fb_symbol_table_visit@@Base+0x294>
   23158:	ldr	r6, [pc, #60]	; 2319c <fb_symbol_table_visit@@Base+0x298>
   2315c:	mov	r3, r0
   23160:	mov	lr, r1
   23164:	mov	r0, #0
   23168:	cmp	r3, #0
   2316c:	bne	23100 <fb_symbol_table_visit@@Base+0x1fc>
   23170:	pop	{r4, r5, r6, r7, r8, pc}
   23174:	ldrb	ip, [r3, r2]
   23178:	cmp	ip, #46	; 0x2e
   2317c:	beq	230b4 <fb_symbol_table_visit@@Base+0x1b0>
   23180:	add	r2, r2, #1
   23184:	b	230ac <fb_symbol_table_visit@@Base+0x1a8>
   23188:	add	ip, ip, ip, lsl #5
   2318c:	eor	ip, ip, r8
   23190:	b	230c4 <fb_symbol_table_visit@@Base+0x1c0>
   23194:	svccs	0x00692e57
   23198:	svccs	0x00693b52
   2319c:			; <UNDEFINED> instruction: 0x9e3779b1
   231a0:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   231a4:	subs	r8, r3, #0
   231a8:	str	r1, [sp]
   231ac:	bne	231c4 <fb_symbol_table_visit@@Base+0x2c0>
   231b0:	ldr	r3, [pc, #372]	; 2332c <fb_symbol_table_visit@@Base+0x428>
   231b4:	ldr	r1, [pc, #372]	; 23330 <fb_symbol_table_visit@@Base+0x42c>
   231b8:	ldr	r0, [pc, #372]	; 23334 <fb_symbol_table_visit@@Base+0x430>
   231bc:	mov	r2, #114	; 0x72
   231c0:	bl	14094 <__assert_fail@plt>
   231c4:	cmp	r8, #2
   231c8:	ldreq	r3, [pc, #348]	; 2332c <fb_symbol_table_visit@@Base+0x428>
   231cc:	moveq	r2, #115	; 0x73
   231d0:	ldreq	r1, [pc, #344]	; 23330 <fb_symbol_table_visit@@Base+0x42c>
   231d4:	ldreq	r0, [pc, #348]	; 23338 <fb_symbol_table_visit@@Base+0x434>
   231d8:	beq	231c0 <fb_symbol_table_visit@@Base+0x2bc>
   231dc:	cmp	r8, #1
   231e0:	ldreq	r3, [pc, #324]	; 2332c <fb_symbol_table_visit@@Base+0x428>
   231e4:	moveq	r2, #116	; 0x74
   231e8:	ldreq	r1, [pc, #320]	; 23330 <fb_symbol_table_visit@@Base+0x42c>
   231ec:	ldreq	r0, [pc, #328]	; 2333c <fb_symbol_table_visit@@Base+0x438>
   231f0:	beq	231c0 <fb_symbol_table_visit@@Base+0x2bc>
   231f4:	mov	fp, r2
   231f8:	ldr	r2, [r0, #12]
   231fc:	mov	r3, #179	; 0xb3
   23200:	ldr	r1, [r0, #8]
   23204:	mul	r3, r3, r2
   23208:	mov	r6, r0
   2320c:	cmp	r1, r3, lsr #8
   23210:	bcc	23240 <fb_symbol_table_visit@@Base+0x33c>
   23214:	lsl	r1, r1, #1
   23218:	bl	2334c <fb_symbol_table_visit@@Base+0x448>
   2321c:	cmp	r0, #0
   23220:	beq	23240 <fb_symbol_table_visit@@Base+0x33c>
   23224:	ldr	r3, [pc, #276]	; 23340 <fb_symbol_table_visit@@Base+0x43c>
   23228:	ldr	r2, [pc, #276]	; 23344 <fb_symbol_table_visit@@Base+0x440>
   2322c:	ldr	r1, [pc, #276]	; 23348 <fb_symbol_table_visit@@Base+0x444>
   23230:	ldr	r0, [r3]
   23234:	bl	13fd4 <fprintf@plt>
   23238:	mov	r0, #1
   2323c:	bl	13fbc <exit@plt>
   23240:	mov	r1, fp
   23244:	ldr	r0, [sp]
   23248:	bl	23088 <fb_symbol_table_visit@@Base+0x184>
   2324c:	ldr	r3, [sp, #48]	; 0x30
   23250:	ldr	r9, [r6, #12]
   23254:	sub	r3, r3, #2
   23258:	cmp	r3, #1
   2325c:	sub	r9, r9, #1
   23260:	ldrls	r3, [r6, #8]
   23264:	ldr	sl, [r6]
   23268:	addls	r3, r3, #1
   2326c:	movhi	r7, #0
   23270:	strls	r3, [r6, #8]
   23274:	and	r2, r9, r0
   23278:	add	r4, r0, #1
   2327c:	bls	232b4 <fb_symbol_table_visit@@Base+0x3b0>
   23280:	ldr	r5, [sl, r2, lsl #2]
   23284:	add	r3, sl, r2, lsl #2
   23288:	cmp	r5, #0
   2328c:	bne	232d8 <fb_symbol_table_visit@@Base+0x3d4>
   23290:	cmp	r7, #0
   23294:	moveq	r7, r3
   23298:	ldr	r3, [r6, #8]
   2329c:	add	r3, r3, #1
   232a0:	str	r3, [r6, #8]
   232a4:	str	r8, [r7]
   232a8:	b	23320 <fb_symbol_table_visit@@Base+0x41c>
   232ac:	and	r2, r4, r9
   232b0:	add	r4, r4, #1
   232b4:	ldr	r5, [sl, r2, lsl #2]
   232b8:	add	r3, sl, r2, lsl #2
   232bc:	cmp	r5, #0
   232c0:	cmpne	r5, #2
   232c4:	movne	r5, #1
   232c8:	moveq	r5, #0
   232cc:	bne	232ac <fb_symbol_table_visit@@Base+0x3a8>
   232d0:	str	r8, [r3]
   232d4:	b	23320 <fb_symbol_table_visit@@Base+0x41c>
   232d8:	cmp	r5, #2
   232dc:	bne	232f4 <fb_symbol_table_visit@@Base+0x3f0>
   232e0:	cmp	r7, #0
   232e4:	moveq	r7, r3
   232e8:	and	r2, r9, r4
   232ec:	add	r4, r4, #1
   232f0:	b	23280 <fb_symbol_table_visit@@Base+0x37c>
   232f4:	ldr	r2, [r5]
   232f8:	mov	r1, fp
   232fc:	ldr	r0, [sp]
   23300:	str	r3, [sp, #4]
   23304:	bl	22f7c <fb_symbol_table_visit@@Base+0x78>
   23308:	ldr	r3, [sp, #4]
   2330c:	cmp	r0, #0
   23310:	beq	232e8 <fb_symbol_table_visit@@Base+0x3e4>
   23314:	ldr	r2, [sp, #48]	; 0x30
   23318:	cmp	r2, #0
   2331c:	beq	232d0 <fb_symbol_table_visit@@Base+0x3cc>
   23320:	mov	r0, r5
   23324:	add	sp, sp, #12
   23328:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2332c:	andeq	r6, r4, r0, asr #30
   23330:	andeq	r6, r4, r0, lsr lr
   23334:	andeq	r6, r4, r0, lsl #29
   23338:	muleq	r4, r7, lr
   2333c:	andeq	r6, r4, lr, lsr #29
   23340:	strheq	fp, [r5], -r0
   23344:	andeq	r6, r4, r3, asr #29
   23348:	strdeq	r6, [r4], -r6	; <UNPREDICTABLE>
   2334c:	ldr	r3, [r0, #8]
   23350:	push	{r4, r5, r6, r7, r8, lr}
   23354:	cmp	r1, r3
   23358:	ldr	r7, [r0]
   2335c:	sub	sp, sp, #24
   23360:	mov	r4, r0
   23364:	movcc	r1, r3
   23368:	mov	r6, #4
   2336c:	mov	r2, #179	; 0xb3
   23370:	mul	r3, r2, r6
   23374:	cmp	r1, r3, lsr #8
   23378:	bhi	233f8 <fb_symbol_table_visit@@Base+0x4f4>
   2337c:	mov	r1, #4
   23380:	mov	r0, r6
   23384:	bl	13ee4 <calloc@plt>
   23388:	cmp	r0, #0
   2338c:	str	r0, [sp, #8]
   23390:	mvneq	r0, #0
   23394:	beq	233f0 <fb_symbol_table_visit@@Base+0x4ec>
   23398:	mov	r5, #0
   2339c:	str	r6, [sp, #20]
   233a0:	mov	r8, r5
   233a4:	mov	r6, #3
   233a8:	str	r5, [sp, #12]
   233ac:	str	r5, [sp, #16]
   233b0:	ldr	r3, [r4, #12]
   233b4:	cmp	r5, r3
   233b8:	bcc	23400 <fb_symbol_table_visit@@Base+0x4fc>
   233bc:	mov	r0, r4
   233c0:	bl	22f50 <fb_symbol_table_visit@@Base+0x4c>
   233c4:	add	r2, sp, #8
   233c8:	add	ip, sp, #24
   233cc:	mov	r3, r2
   233d0:	add	r4, r4, #8
   233d4:	ldm	r3!, {r0, r1}
   233d8:	cmp	r3, ip
   233dc:	str	r0, [r4, #-8]
   233e0:	str	r1, [r4, #-4]
   233e4:	mov	r2, r3
   233e8:	bne	233cc <fb_symbol_table_visit@@Base+0x4c8>
   233ec:	mov	r0, #0
   233f0:	add	sp, sp, #24
   233f4:	pop	{r4, r5, r6, r7, r8, pc}
   233f8:	lsl	r6, r6, #1
   233fc:	b	23370 <fb_symbol_table_visit@@Base+0x46c>
   23400:	ldr	r3, [r7, r5, lsl #2]
   23404:	cmp	r3, #0
   23408:	cmpne	r3, #2
   2340c:	beq	23424 <fb_symbol_table_visit@@Base+0x520>
   23410:	str	r6, [sp]
   23414:	mov	r2, r8
   23418:	ldr	r1, [r3]
   2341c:	add	r0, sp, #8
   23420:	bl	231a0 <fb_symbol_table_visit@@Base+0x29c>
   23424:	add	r5, r5, #1
   23428:	b	233b0 <fb_symbol_table_visit@@Base+0x4ac>
   2342c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   23430:	ldr	r9, [r0]
   23434:	cmp	r9, #0
   23438:	moveq	r5, r9
   2343c:	beq	23470 <fb_symbol_table_visit@@Base+0x56c>
   23440:	mov	r7, r1
   23444:	ldr	r6, [r0, #12]
   23448:	mov	r1, r2
   2344c:	mov	r0, r7
   23450:	mov	r8, r2
   23454:	bl	23088 <fb_symbol_table_visit@@Base+0x184>
   23458:	sub	r6, r6, #1
   2345c:	and	r3, r6, r0
   23460:	add	r4, r0, #1
   23464:	ldr	r5, [r9, r3, lsl #2]
   23468:	cmp	r5, #0
   2346c:	bne	23478 <fb_symbol_table_visit@@Base+0x574>
   23470:	mov	r0, r5
   23474:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   23478:	cmp	r5, #2
   2347c:	beq	23498 <fb_symbol_table_visit@@Base+0x594>
   23480:	ldr	r2, [r5]
   23484:	mov	r1, r8
   23488:	mov	r0, r7
   2348c:	bl	22f7c <fb_symbol_table_visit@@Base+0x78>
   23490:	cmp	r0, #0
   23494:	bne	23470 <fb_symbol_table_visit@@Base+0x56c>
   23498:	and	r3, r6, r4
   2349c:	add	r4, r4, #1
   234a0:	b	23464 <fb_symbol_table_visit@@Base+0x560>
   234a4:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   234a8:	ldr	r7, [r0]
   234ac:	cmp	r7, #0
   234b0:	moveq	r6, r7
   234b4:	beq	23524 <fb_symbol_table_visit@@Base+0x620>
   234b8:	mov	r9, r1
   234bc:	ldr	r8, [r0, #12]
   234c0:	mov	r5, r0
   234c4:	mov	r1, r2
   234c8:	mov	r0, r9
   234cc:	mov	sl, r2
   234d0:	bl	23088 <fb_symbol_table_visit@@Base+0x184>
   234d4:	sub	r8, r8, #1
   234d8:	and	r3, r8, r0
   234dc:	add	r4, r0, #1
   234e0:	ldr	r6, [r7, r3, lsl #2]
   234e4:	add	fp, r7, r3, lsl #2
   234e8:	cmp	r6, #0
   234ec:	beq	23524 <fb_symbol_table_visit@@Base+0x620>
   234f0:	cmp	r6, #2
   234f4:	beq	2352c <fb_symbol_table_visit@@Base+0x628>
   234f8:	ldr	r2, [r6]
   234fc:	mov	r1, sl
   23500:	mov	r0, r9
   23504:	bl	22f7c <fb_symbol_table_visit@@Base+0x78>
   23508:	cmp	r0, #0
   2350c:	beq	2352c <fb_symbol_table_visit@@Base+0x628>
   23510:	mov	r3, #2
   23514:	str	r3, [fp]
   23518:	ldr	r3, [r5, #8]
   2351c:	sub	r3, r3, #1
   23520:	str	r3, [r5, #8]
   23524:	mov	r0, r6
   23528:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2352c:	and	r3, r8, r4
   23530:	add	r4, r4, #1
   23534:	b	234e0 <fb_symbol_table_visit@@Base+0x5dc>

00023538 <fb_scope_table_clear@@Base>:
   23538:	b	22f50 <fb_symbol_table_visit@@Base+0x4c>

0002353c <fb_scope_table_destroy@@Base>:
   2353c:	cmp	r1, #0
   23540:	push	{r4, lr}
   23544:	mov	r4, r0
   23548:	beq	23550 <fb_scope_table_destroy@@Base+0x14>
   2354c:	bl	22f08 <fb_symbol_table_visit@@Base+0x4>
   23550:	mov	r0, r4
   23554:	pop	{r4, lr}
   23558:	b	22f50 <fb_symbol_table_visit@@Base+0x4c>

0002355c <fb_scope_table_init@@Base>:
   2355c:	push	{r4, r5, r6, lr}
   23560:	mov	r2, #179	; 0xb3
   23564:	mov	r5, r0
   23568:	mov	r4, #4
   2356c:	mul	r3, r2, r4
   23570:	cmp	r1, r3, lsr #8
   23574:	bhi	235a4 <fb_scope_table_init@@Base+0x48>
   23578:	mov	r1, #4
   2357c:	mov	r0, r4
   23580:	bl	13ee4 <calloc@plt>
   23584:	cmp	r0, #0
   23588:	str	r0, [r5]
   2358c:	movne	r0, #0
   23590:	strne	r0, [r5, #4]
   23594:	strne	r4, [r5, #12]
   23598:	strne	r0, [r5, #8]
   2359c:	mvneq	r0, #0
   235a0:	pop	{r4, r5, r6, pc}
   235a4:	lsl	r4, r4, #1
   235a8:	b	2356c <fb_scope_table_init@@Base+0x10>

000235ac <fb_scope_table_resize@@Base>:
   235ac:	b	2334c <fb_symbol_table_visit@@Base+0x448>

000235b0 <fb_scope_table_insert@@Base>:
   235b0:	b	231a0 <fb_symbol_table_visit@@Base+0x29c>

000235b4 <fb_scope_table_insert_item@@Base>:
   235b4:	push	{r0, r1, r2, lr}
   235b8:	mov	r3, r1
   235bc:	str	r2, [sp]
   235c0:	mov	r2, #0
   235c4:	ldr	r1, [r1]
   235c8:	bl	231a0 <fb_symbol_table_visit@@Base+0x29c>
   235cc:	add	sp, sp, #12
   235d0:	pop	{pc}		; (ldr pc, [sp], #4)

000235d4 <fb_scope_table_find@@Base>:
   235d4:	b	2342c <fb_symbol_table_visit@@Base+0x528>

000235d8 <fb_scope_table_find_item@@Base>:
   235d8:	mov	r2, #0
   235dc:	ldr	r1, [r1]
   235e0:	b	2342c <fb_symbol_table_visit@@Base+0x528>

000235e4 <fb_scope_table_remove@@Base>:
   235e4:	b	234a4 <fb_symbol_table_visit@@Base+0x5a0>

000235e8 <fb_scope_table_remove_item@@Base>:
   235e8:	mov	r2, #0
   235ec:	ldr	r1, [r1]
   235f0:	b	234a4 <fb_symbol_table_visit@@Base+0x5a0>

000235f4 <fb_scope_table_visit@@Base>:
   235f4:	b	22f08 <fb_symbol_table_visit@@Base+0x4>
   235f8:	push	{r4, r5, r6, r7, r8, lr}
   235fc:	mov	r5, r0
   23600:	ldr	r6, [r0]
   23604:	mov	r7, r1
   23608:	mov	r8, r2
   2360c:	mov	r4, #0
   23610:	ldr	r3, [r5, #12]
   23614:	cmp	r4, r3
   23618:	bcc	23620 <fb_scope_table_visit@@Base+0x2c>
   2361c:	pop	{r4, r5, r6, r7, r8, pc}
   23620:	ldr	r1, [r6, r4, lsl #2]
   23624:	cmp	r1, #0
   23628:	cmpne	r1, #2
   2362c:	beq	23638 <fb_scope_table_visit@@Base+0x44>
   23630:	mov	r0, r8
   23634:	blx	r7
   23638:	add	r4, r4, #1
   2363c:	b	23610 <fb_scope_table_visit@@Base+0x1c>
   23640:	push	{r4, lr}
   23644:	mov	r4, r0
   23648:	ldr	r0, [r0]
   2364c:	cmp	r0, #0
   23650:	beq	23658 <fb_scope_table_visit@@Base+0x64>
   23654:	bl	13f14 <free@plt>
   23658:	mov	r0, r4
   2365c:	mov	r2, #16
   23660:	mov	r1, #0
   23664:	pop	{r4, lr}
   23668:	b	13fec <memset@plt>
   2366c:	push	{r0, r1, r2, r3, r4, lr}
   23670:	add	r3, sp, #8
   23674:	str	r3, [sp, #4]
   23678:	ldr	r3, [pc, #24]	; 23698 <fb_scope_table_visit@@Base+0xa4>
   2367c:	mov	r2, r1
   23680:	str	r3, [sp]
   23684:	mov	r3, #0
   23688:	bl	2d494 <cmetrohash64_1@@Base>
   2368c:	ldr	r0, [sp, #8]
   23690:	add	sp, sp, #20
   23694:	pop	{pc}		; (ldr pc, [sp], #4)
   23698:	svccs	0x00693b52
   2369c:	ldr	ip, [r2, #148]	; 0x94
   236a0:	cmp	ip, r1
   236a4:	bne	236c8 <fb_scope_table_visit@@Base+0xd4>
   236a8:	mov	r3, r2
   236ac:	push	{r4, lr}
   236b0:	mov	r2, ip
   236b4:	ldr	r1, [r3, #144]	; 0x90
   236b8:	bl	13f38 <memcmp@plt>
   236bc:	clz	r0, r0
   236c0:	lsr	r0, r0, #5
   236c4:	pop	{r4, pc}
   236c8:	mov	r0, #0
   236cc:	bx	lr
   236d0:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   236d4:	subs	r8, r3, #0
   236d8:	str	r1, [sp]
   236dc:	bne	236f4 <fb_scope_table_visit@@Base+0x100>
   236e0:	ldr	r3, [pc, #372]	; 2385c <fb_scope_table_visit@@Base+0x268>
   236e4:	ldr	r1, [pc, #372]	; 23860 <fb_scope_table_visit@@Base+0x26c>
   236e8:	ldr	r0, [pc, #372]	; 23864 <fb_scope_table_visit@@Base+0x270>
   236ec:	mov	r2, #114	; 0x72
   236f0:	bl	14094 <__assert_fail@plt>
   236f4:	cmp	r8, #2
   236f8:	ldreq	r3, [pc, #348]	; 2385c <fb_scope_table_visit@@Base+0x268>
   236fc:	moveq	r2, #115	; 0x73
   23700:	ldreq	r1, [pc, #344]	; 23860 <fb_scope_table_visit@@Base+0x26c>
   23704:	ldreq	r0, [pc, #348]	; 23868 <fb_scope_table_visit@@Base+0x274>
   23708:	beq	236f0 <fb_scope_table_visit@@Base+0xfc>
   2370c:	cmp	r8, #1
   23710:	ldreq	r3, [pc, #324]	; 2385c <fb_scope_table_visit@@Base+0x268>
   23714:	moveq	r2, #116	; 0x74
   23718:	ldreq	r1, [pc, #320]	; 23860 <fb_scope_table_visit@@Base+0x26c>
   2371c:	ldreq	r0, [pc, #328]	; 2386c <fb_scope_table_visit@@Base+0x278>
   23720:	beq	236f0 <fb_scope_table_visit@@Base+0xfc>
   23724:	mov	fp, r2
   23728:	ldr	r2, [r0, #12]
   2372c:	mov	r3, #179	; 0xb3
   23730:	ldr	r1, [r0, #8]
   23734:	mul	r3, r3, r2
   23738:	mov	r6, r0
   2373c:	cmp	r1, r3, lsr #8
   23740:	bcc	23770 <fb_scope_table_visit@@Base+0x17c>
   23744:	lsl	r1, r1, #1
   23748:	bl	2387c <fb_scope_table_visit@@Base+0x288>
   2374c:	cmp	r0, #0
   23750:	beq	23770 <fb_scope_table_visit@@Base+0x17c>
   23754:	ldr	r3, [pc, #276]	; 23870 <fb_scope_table_visit@@Base+0x27c>
   23758:	ldr	r2, [pc, #276]	; 23874 <fb_scope_table_visit@@Base+0x280>
   2375c:	ldr	r1, [pc, #276]	; 23878 <fb_scope_table_visit@@Base+0x284>
   23760:	ldr	r0, [r3]
   23764:	bl	13fd4 <fprintf@plt>
   23768:	mov	r0, #1
   2376c:	bl	13fbc <exit@plt>
   23770:	mov	r1, fp
   23774:	ldr	r0, [sp]
   23778:	ldr	r9, [r6, #12]
   2377c:	ldr	sl, [r6]
   23780:	bl	2366c <fb_scope_table_visit@@Base+0x78>
   23784:	ldr	r3, [sp, #48]	; 0x30
   23788:	sub	r9, r9, #1
   2378c:	sub	r3, r3, #2
   23790:	cmp	r3, #1
   23794:	movhi	r7, #0
   23798:	ldrls	r3, [r6, #8]
   2379c:	addls	r3, r3, #1
   237a0:	strls	r3, [r6, #8]
   237a4:	and	r2, r9, r0
   237a8:	add	r4, r0, #1
   237ac:	bls	237e4 <fb_scope_table_visit@@Base+0x1f0>
   237b0:	ldr	r5, [sl, r2, lsl #2]
   237b4:	add	r3, sl, r2, lsl #2
   237b8:	cmp	r5, #0
   237bc:	bne	23808 <fb_scope_table_visit@@Base+0x214>
   237c0:	cmp	r7, #0
   237c4:	moveq	r7, r3
   237c8:	ldr	r3, [r6, #8]
   237cc:	add	r3, r3, #1
   237d0:	str	r3, [r6, #8]
   237d4:	str	r8, [r7]
   237d8:	b	23850 <fb_scope_table_visit@@Base+0x25c>
   237dc:	and	r2, r4, r9
   237e0:	add	r4, r4, #1
   237e4:	ldr	r5, [sl, r2, lsl #2]
   237e8:	add	r3, sl, r2, lsl #2
   237ec:	cmp	r5, #0
   237f0:	cmpne	r5, #2
   237f4:	movne	r5, #1
   237f8:	moveq	r5, #0
   237fc:	bne	237dc <fb_scope_table_visit@@Base+0x1e8>
   23800:	str	r8, [r3]
   23804:	b	23850 <fb_scope_table_visit@@Base+0x25c>
   23808:	cmp	r5, #2
   2380c:	bne	23824 <fb_scope_table_visit@@Base+0x230>
   23810:	cmp	r7, #0
   23814:	moveq	r7, r3
   23818:	and	r2, r9, r4
   2381c:	add	r4, r4, #1
   23820:	b	237b0 <fb_scope_table_visit@@Base+0x1bc>
   23824:	mov	r2, r5
   23828:	mov	r1, fp
   2382c:	ldr	r0, [sp]
   23830:	str	r3, [sp, #4]
   23834:	bl	2369c <fb_scope_table_visit@@Base+0xa8>
   23838:	ldr	r3, [sp, #4]
   2383c:	cmp	r0, #0
   23840:	beq	23818 <fb_scope_table_visit@@Base+0x224>
   23844:	ldr	r2, [sp, #48]	; 0x30
   23848:	cmp	r2, #0
   2384c:	beq	23800 <fb_scope_table_visit@@Base+0x20c>
   23850:	mov	r0, r5
   23854:	add	sp, sp, #12
   23858:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2385c:	andeq	r6, r4, r8, asr pc
   23860:	andeq	r6, r4, r0, lsr lr
   23864:	andeq	r6, r4, r0, lsl #29
   23868:	muleq	r4, r7, lr
   2386c:	andeq	r6, r4, lr, lsr #29
   23870:	strheq	fp, [r5], -r0
   23874:	andeq	r6, r4, r3, asr #29
   23878:	strdeq	r6, [r4], -r6	; <UNPREDICTABLE>
   2387c:	ldr	r3, [r0, #8]
   23880:	push	{r4, r5, r6, r7, lr}
   23884:	cmp	r1, r3
   23888:	ldr	r7, [r0]
   2388c:	sub	sp, sp, #28
   23890:	mov	r4, r0
   23894:	movcc	r1, r3
   23898:	mov	r6, #4
   2389c:	mov	r2, #179	; 0xb3
   238a0:	mul	r3, r2, r6
   238a4:	cmp	r1, r3, lsr #8
   238a8:	bhi	23924 <fb_scope_table_visit@@Base+0x330>
   238ac:	mov	r1, #4
   238b0:	mov	r0, r6
   238b4:	bl	13ee4 <calloc@plt>
   238b8:	cmp	r0, #0
   238bc:	str	r0, [sp, #8]
   238c0:	mvneq	r0, #0
   238c4:	beq	2391c <fb_scope_table_visit@@Base+0x328>
   238c8:	str	r6, [sp, #20]
   238cc:	mov	r6, #3
   238d0:	mov	r5, #0
   238d4:	str	r5, [sp, #12]
   238d8:	str	r5, [sp, #16]
   238dc:	ldr	r3, [r4, #12]
   238e0:	cmp	r5, r3
   238e4:	bcc	2392c <fb_scope_table_visit@@Base+0x338>
   238e8:	mov	r0, r4
   238ec:	bl	23640 <fb_scope_table_visit@@Base+0x4c>
   238f0:	add	r2, sp, #8
   238f4:	add	ip, sp, #24
   238f8:	mov	r3, r2
   238fc:	add	r4, r4, #8
   23900:	ldm	r3!, {r0, r1}
   23904:	cmp	r3, ip
   23908:	str	r0, [r4, #-8]
   2390c:	str	r1, [r4, #-4]
   23910:	mov	r2, r3
   23914:	bne	238f8 <fb_scope_table_visit@@Base+0x304>
   23918:	mov	r0, #0
   2391c:	add	sp, sp, #28
   23920:	pop	{r4, r5, r6, r7, pc}
   23924:	lsl	r6, r6, #1
   23928:	b	238a0 <fb_scope_table_visit@@Base+0x2ac>
   2392c:	ldr	r3, [r7, r5, lsl #2]
   23930:	cmp	r3, #0
   23934:	cmpne	r3, #2
   23938:	beq	23950 <fb_scope_table_visit@@Base+0x35c>
   2393c:	str	r6, [sp]
   23940:	add	r0, sp, #8
   23944:	ldr	r2, [r3, #148]	; 0x94
   23948:	ldr	r1, [r3, #144]	; 0x90
   2394c:	bl	236d0 <fb_scope_table_visit@@Base+0xdc>
   23950:	add	r5, r5, #1
   23954:	b	238dc <fb_scope_table_visit@@Base+0x2e8>
   23958:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2395c:	ldr	r9, [r0]
   23960:	cmp	r9, #0
   23964:	bne	23974 <fb_scope_table_visit@@Base+0x380>
   23968:	mov	r5, #0
   2396c:	mov	r0, r5
   23970:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   23974:	mov	r7, r1
   23978:	ldr	r6, [r0, #12]
   2397c:	mov	r1, r2
   23980:	mov	r0, r7
   23984:	mov	r8, r2
   23988:	bl	2366c <fb_scope_table_visit@@Base+0x78>
   2398c:	sub	r6, r6, #1
   23990:	and	r3, r6, r0
   23994:	add	r4, r0, #1
   23998:	ldr	r5, [r9, r3, lsl #2]
   2399c:	cmp	r5, #0
   239a0:	beq	23968 <fb_scope_table_visit@@Base+0x374>
   239a4:	cmp	r5, #2
   239a8:	beq	239c4 <fb_scope_table_visit@@Base+0x3d0>
   239ac:	mov	r2, r5
   239b0:	mov	r1, r8
   239b4:	mov	r0, r7
   239b8:	bl	2369c <fb_scope_table_visit@@Base+0xa8>
   239bc:	cmp	r0, #0
   239c0:	bne	2396c <fb_scope_table_visit@@Base+0x378>
   239c4:	and	r3, r6, r4
   239c8:	add	r4, r4, #1
   239cc:	b	23998 <fb_scope_table_visit@@Base+0x3a4>
   239d0:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   239d4:	ldr	sl, [r0]
   239d8:	cmp	sl, #0
   239dc:	bne	239ec <fb_scope_table_visit@@Base+0x3f8>
   239e0:	mov	r6, #0
   239e4:	mov	r0, r6
   239e8:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   239ec:	mov	r8, r1
   239f0:	ldr	r7, [r0, #12]
   239f4:	mov	r5, r0
   239f8:	mov	r1, r2
   239fc:	mov	r0, r8
   23a00:	mov	r9, r2
   23a04:	bl	2366c <fb_scope_table_visit@@Base+0x78>
   23a08:	sub	r7, r7, #1
   23a0c:	and	r3, r7, r0
   23a10:	add	r4, r0, #1
   23a14:	ldr	r6, [sl, r3, lsl #2]
   23a18:	add	fp, sl, r3, lsl #2
   23a1c:	cmp	r6, #0
   23a20:	beq	239e0 <fb_scope_table_visit@@Base+0x3ec>
   23a24:	cmp	r6, #2
   23a28:	beq	23a5c <fb_scope_table_visit@@Base+0x468>
   23a2c:	mov	r2, r6
   23a30:	mov	r1, r9
   23a34:	mov	r0, r8
   23a38:	bl	2369c <fb_scope_table_visit@@Base+0xa8>
   23a3c:	cmp	r0, #0
   23a40:	beq	23a5c <fb_scope_table_visit@@Base+0x468>
   23a44:	mov	r3, #2
   23a48:	str	r3, [fp]
   23a4c:	ldr	r3, [r5, #8]
   23a50:	sub	r3, r3, #1
   23a54:	str	r3, [r5, #8]
   23a58:	b	239e4 <fb_scope_table_visit@@Base+0x3f0>
   23a5c:	and	r3, r7, r4
   23a60:	add	r4, r4, #1
   23a64:	b	23a14 <fb_scope_table_visit@@Base+0x420>

00023a68 <fb_schema_table_clear@@Base>:
   23a68:	b	23640 <fb_scope_table_visit@@Base+0x4c>

00023a6c <fb_schema_table_destroy@@Base>:
   23a6c:	cmp	r1, #0
   23a70:	push	{r4, lr}
   23a74:	mov	r4, r0
   23a78:	beq	23a80 <fb_schema_table_destroy@@Base+0x14>
   23a7c:	bl	235f8 <fb_scope_table_visit@@Base+0x4>
   23a80:	mov	r0, r4
   23a84:	pop	{r4, lr}
   23a88:	b	23640 <fb_scope_table_visit@@Base+0x4c>

00023a8c <fb_schema_table_init@@Base>:
   23a8c:	push	{r4, r5, r6, lr}
   23a90:	mov	r2, #179	; 0xb3
   23a94:	mov	r5, r0
   23a98:	mov	r4, #4
   23a9c:	mul	r3, r2, r4
   23aa0:	cmp	r1, r3, lsr #8
   23aa4:	bhi	23ad4 <fb_schema_table_init@@Base+0x48>
   23aa8:	mov	r1, #4
   23aac:	mov	r0, r4
   23ab0:	bl	13ee4 <calloc@plt>
   23ab4:	cmp	r0, #0
   23ab8:	str	r0, [r5]
   23abc:	movne	r0, #0
   23ac0:	strne	r0, [r5, #4]
   23ac4:	strne	r4, [r5, #12]
   23ac8:	strne	r0, [r5, #8]
   23acc:	mvneq	r0, #0
   23ad0:	pop	{r4, r5, r6, pc}
   23ad4:	lsl	r4, r4, #1
   23ad8:	b	23a9c <fb_schema_table_init@@Base+0x10>

00023adc <fb_schema_table_resize@@Base>:
   23adc:	b	2387c <fb_scope_table_visit@@Base+0x288>

00023ae0 <fb_schema_table_insert@@Base>:
   23ae0:	b	236d0 <fb_scope_table_visit@@Base+0xdc>

00023ae4 <fb_schema_table_insert_item@@Base>:
   23ae4:	push	{r0, r1, r2, lr}
   23ae8:	mov	r3, r1
   23aec:	str	r2, [sp]
   23af0:	ldr	r2, [r1, #148]	; 0x94
   23af4:	ldr	r1, [r1, #144]	; 0x90
   23af8:	bl	236d0 <fb_scope_table_visit@@Base+0xdc>
   23afc:	add	sp, sp, #12
   23b00:	pop	{pc}		; (ldr pc, [sp], #4)

00023b04 <fb_schema_table_find@@Base>:
   23b04:	b	23958 <fb_scope_table_visit@@Base+0x364>

00023b08 <fb_schema_table_find_item@@Base>:
   23b08:	ldr	r2, [r1, #148]	; 0x94
   23b0c:	ldr	r1, [r1, #144]	; 0x90
   23b10:	b	23958 <fb_scope_table_visit@@Base+0x364>

00023b14 <fb_schema_table_remove@@Base>:
   23b14:	b	239d0 <fb_scope_table_visit@@Base+0x3dc>

00023b18 <fb_schema_table_remove_item@@Base>:
   23b18:	ldr	r2, [r1, #148]	; 0x94
   23b1c:	ldr	r1, [r1, #144]	; 0x90
   23b20:	b	239d0 <fb_scope_table_visit@@Base+0x3dc>

00023b24 <fb_schema_table_visit@@Base>:
   23b24:	b	235f8 <fb_scope_table_visit@@Base+0x4>

00023b28 <__flatcc_fb_copy_path_n@@Base>:
   23b28:	push	{r4, r5, r6, lr}
   23b2c:	mov	r2, r1
   23b30:	mov	r4, r1
   23b34:	mov	r1, #0
   23b38:	mov	r6, r0
   23b3c:	bl	14010 <memchr@plt>
   23b40:	cmp	r0, #0
   23b44:	subne	r4, r0, r6
   23b48:	add	r0, r4, #1
   23b4c:	bl	13f8c <malloc@plt>
   23b50:	subs	r5, r0, #0
   23b54:	beq	23b6c <__flatcc_fb_copy_path_n@@Base+0x44>
   23b58:	mov	r2, r4
   23b5c:	mov	r1, r6
   23b60:	bl	13f20 <memcpy@plt>
   23b64:	mov	r3, #0
   23b68:	strb	r3, [r5, r4]
   23b6c:	mov	r0, r5
   23b70:	pop	{r4, r5, r6, pc}

00023b74 <__flatcc_fb_copy_path@@Base>:
   23b74:	push	{r4, r5, r6, lr}
   23b78:	mov	r6, r0
   23b7c:	bl	13fc8 <strlen@plt>
   23b80:	mov	r4, r0
   23b84:	add	r0, r0, #1
   23b88:	bl	13f8c <malloc@plt>
   23b8c:	subs	r5, r0, #0
   23b90:	beq	23ba8 <__flatcc_fb_copy_path@@Base+0x34>
   23b94:	mov	r2, r4
   23b98:	mov	r1, r6
   23b9c:	bl	13f20 <memcpy@plt>
   23ba0:	mov	r3, #0
   23ba4:	strb	r3, [r5, r4]
   23ba8:	mov	r0, r5
   23bac:	pop	{r4, r5, r6, pc}

00023bb0 <__flatcc_fb_chomp@@Base>:
   23bb0:	push	{r4, r5, r6, r7, r8, lr}
   23bb4:	subs	r6, r2, #0
   23bb8:	mov	r4, r1
   23bbc:	beq	23bf0 <__flatcc_fb_chomp@@Base+0x40>
   23bc0:	mov	r7, r0
   23bc4:	mov	r0, r6
   23bc8:	bl	13fc8 <strlen@plt>
   23bcc:	cmp	r0, r4
   23bd0:	mov	r2, r0
   23bd4:	bcs	23bf0 <__flatcc_fb_chomp@@Base+0x40>
   23bd8:	sub	r5, r4, r0
   23bdc:	mov	r1, r6
   23be0:	add	r0, r7, r5
   23be4:	bl	1407c <strncmp@plt>
   23be8:	cmp	r0, #0
   23bec:	moveq	r4, r5
   23bf0:	mov	r0, r4
   23bf4:	pop	{r4, r5, r6, r7, r8, pc}

00023bf8 <__flatcc_fb_create_join_path_n@@Base>:
   23bf8:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23bfc:	mov	r9, r0
   23c00:	ldr	sl, [sp, #40]	; 0x28
   23c04:	mov	r4, r1
   23c08:	cmp	sl, #0
   23c0c:	mov	fp, r2
   23c10:	mov	r8, r3
   23c14:	ldr	r5, [sp, #44]	; 0x2c
   23c18:	moveq	r6, sl
   23c1c:	beq	23c2c <__flatcc_fb_create_join_path_n@@Base+0x34>
   23c20:	mov	r0, sl
   23c24:	bl	13fc8 <strlen@plt>
   23c28:	mov	r6, r0
   23c2c:	cmp	r9, #0
   23c30:	moveq	r4, r9
   23c34:	moveq	r5, r9
   23c38:	beq	23c94 <__flatcc_fb_create_join_path_n@@Base+0x9c>
   23c3c:	cmp	r8, #0
   23c40:	beq	23c70 <__flatcc_fb_create_join_path_n@@Base+0x78>
   23c44:	ldrb	r3, [fp]
   23c48:	cmp	r3, #92	; 0x5c
   23c4c:	cmpne	r3, #47	; 0x2f
   23c50:	moveq	r3, #1
   23c54:	movne	r3, #0
   23c58:	beq	23d04 <__flatcc_fb_create_join_path_n@@Base+0x10c>
   23c5c:	cmp	r8, #1
   23c60:	bls	23c70 <__flatcc_fb_create_join_path_n@@Base+0x78>
   23c64:	ldrb	r2, [fp, #1]
   23c68:	cmp	r2, #58	; 0x3a
   23c6c:	beq	23d10 <__flatcc_fb_create_join_path_n@@Base+0x118>
   23c70:	cmp	r5, #0
   23c74:	beq	23c94 <__flatcc_fb_create_join_path_n@@Base+0x9c>
   23c78:	cmp	r4, #0
   23c7c:	beq	23d08 <__flatcc_fb_create_join_path_n@@Base+0x110>
   23c80:	add	r3, r9, r4
   23c84:	ldrb	r3, [r3, #-1]
   23c88:	cmp	r3, #92	; 0x5c
   23c8c:	cmpne	r3, #47	; 0x2f
   23c90:	moveq	r5, #0
   23c94:	add	r0, r8, #1
   23c98:	add	r0, r0, r6
   23c9c:	add	r0, r0, r4
   23ca0:	add	r0, r0, r5
   23ca4:	bl	13f8c <malloc@plt>
   23ca8:	subs	r7, r0, #0
   23cac:	beq	23cfc <__flatcc_fb_create_join_path_n@@Base+0x104>
   23cb0:	mov	r2, r4
   23cb4:	mov	r1, r9
   23cb8:	bl	13f20 <memcpy@plt>
   23cbc:	cmp	r5, #0
   23cc0:	movne	r3, #47	; 0x2f
   23cc4:	mov	r2, r8
   23cc8:	mov	r1, fp
   23ccc:	strbne	r3, [r7, r4]
   23cd0:	addne	r4, r4, #1
   23cd4:	add	r0, r7, r4
   23cd8:	add	r4, r4, r8
   23cdc:	bl	13f20 <memcpy@plt>
   23ce0:	mov	r2, r6
   23ce4:	mov	r1, sl
   23ce8:	add	r0, r7, r4
   23cec:	add	r6, r7, r6
   23cf0:	bl	13f20 <memcpy@plt>
   23cf4:	mov	r3, #0
   23cf8:	strb	r3, [r6, r4]
   23cfc:	mov	r0, r7
   23d00:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23d04:	mov	r4, #0
   23d08:	mov	r5, r4
   23d0c:	b	23c94 <__flatcc_fb_create_join_path_n@@Base+0x9c>
   23d10:	mov	r4, r3
   23d14:	b	23d08 <__flatcc_fb_create_join_path_n@@Base+0x110>

00023d18 <__flatcc_fb_create_join_path@@Base>:
   23d18:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
   23d1c:	subs	r5, r0, #0
   23d20:	mov	r4, r1
   23d24:	mov	r7, r2
   23d28:	mov	r8, r3
   23d2c:	moveq	r6, r5
   23d30:	beq	23d3c <__flatcc_fb_create_join_path@@Base+0x24>
   23d34:	bl	13fc8 <strlen@plt>
   23d38:	mov	r6, r0
   23d3c:	cmp	r4, #0
   23d40:	moveq	r3, r4
   23d44:	beq	23d54 <__flatcc_fb_create_join_path@@Base+0x3c>
   23d48:	mov	r0, r4
   23d4c:	bl	13fc8 <strlen@plt>
   23d50:	mov	r3, r0
   23d54:	stm	sp, {r7, r8}
   23d58:	mov	r2, r4
   23d5c:	mov	r1, r6
   23d60:	mov	r0, r5
   23d64:	bl	23bf8 <__flatcc_fb_create_join_path_n@@Base>
   23d68:	add	sp, sp, #8
   23d6c:	pop	{r4, r5, r6, r7, r8, pc}

00023d70 <__flatcc_fb_create_path_ext_n@@Base>:
   23d70:	mov	ip, #0
   23d74:	push	{r0, r1, r2, lr}
   23d78:	mov	r3, r1
   23d7c:	stm	sp, {r2, ip}
   23d80:	mov	r1, ip
   23d84:	mov	r2, r0
   23d88:	mov	r0, ip
   23d8c:	bl	23bf8 <__flatcc_fb_create_join_path_n@@Base>
   23d90:	add	sp, sp, #12
   23d94:	pop	{pc}		; (ldr pc, [sp], #4)

00023d98 <__flatcc_fb_create_path_ext@@Base>:
   23d98:	mov	r3, #0
   23d9c:	mov	r2, r1
   23da0:	mov	r1, r0
   23da4:	mov	r0, r3
   23da8:	b	23d18 <__flatcc_fb_create_join_path@@Base>

00023dac <__flatcc_fb_create_make_path_n@@Base>:
   23dac:	cmp	r1, #1
   23db0:	push	{r4, r5, r6, r7, r8, lr}
   23db4:	mov	r4, r0
   23db8:	bne	23df4 <__flatcc_fb_create_make_path_n@@Base+0x48>
   23dbc:	ldrb	r5, [r0]
   23dc0:	cmp	r5, #92	; 0x5c
   23dc4:	cmpne	r5, #32
   23dc8:	bne	23e00 <__flatcc_fb_create_make_path_n@@Base+0x54>
   23dcc:	mov	r0, #3
   23dd0:	bl	13f8c <malloc@plt>
   23dd4:	cmp	r0, #0
   23dd8:	popeq	{r4, r5, r6, r7, r8, pc}
   23ddc:	mov	r3, #92	; 0x5c
   23de0:	strb	r3, [r0]
   23de4:	mov	r3, #0
   23de8:	strb	r5, [r0, #1]
   23dec:	strb	r3, [r0, #2]
   23df0:	pop	{r4, r5, r6, r7, r8, pc}
   23df4:	movhi	r3, r0
   23df8:	subhi	r6, r1, #1
   23dfc:	bhi	23e2c <__flatcc_fb_create_make_path_n@@Base+0x80>
   23e00:	mov	r0, r4
   23e04:	pop	{r4, r5, r6, r7, r8, lr}
   23e08:	b	23b28 <__flatcc_fb_copy_path_n@@Base>
   23e0c:	ldrb	r2, [r3], #1
   23e10:	cmp	r2, #92	; 0x5c
   23e14:	bne	23e24 <__flatcc_fb_create_make_path_n@@Base+0x78>
   23e18:	ldrb	r0, [r3]
   23e1c:	cmp	r0, #32
   23e20:	addeq	r1, r1, #1
   23e24:	cmp	r2, #32
   23e28:	addeq	r1, r1, #1
   23e2c:	sub	r2, r3, r4
   23e30:	cmp	r2, r6
   23e34:	bcc	23e0c <__flatcc_fb_create_make_path_n@@Base+0x60>
   23e38:	ldrb	r5, [r4, r6]
   23e3c:	sub	r0, r5, #32
   23e40:	clz	r0, r0
   23e44:	lsr	r0, r0, #5
   23e48:	add	r0, r0, #1
   23e4c:	add	r0, r0, r1
   23e50:	bl	13f8c <malloc@plt>
   23e54:	cmp	r0, #0
   23e58:	movne	r2, r4
   23e5c:	movne	r3, #0
   23e60:	movne	lr, #92	; 0x5c
   23e64:	bne	23e70 <__flatcc_fb_create_make_path_n@@Base+0xc4>
   23e68:	pop	{r4, r5, r6, r7, r8, pc}
   23e6c:	mov	r3, r1
   23e70:	ldrb	r1, [r2], #1
   23e74:	add	ip, r3, #1
   23e78:	cmp	r1, #92	; 0x5c
   23e7c:	bne	23ec8 <__flatcc_fb_create_make_path_n@@Base+0x11c>
   23e80:	ldrb	r7, [r2]
   23e84:	cmp	r7, #32
   23e88:	strbeq	r1, [r0, r3]
   23e8c:	beq	23ed4 <__flatcc_fb_create_make_path_n@@Base+0x128>
   23e90:	sub	ip, r2, r4
   23e94:	cmp	r6, ip
   23e98:	strb	r1, [r0, r3]
   23e9c:	add	r1, r3, #1
   23ea0:	bhi	23e6c <__flatcc_fb_create_make_path_n@@Base+0xc0>
   23ea4:	cmp	r5, #32
   23ea8:	moveq	r2, #92	; 0x5c
   23eac:	strbeq	r2, [r0, r1]
   23eb0:	addeq	r1, r3, #2
   23eb4:	mov	r3, r0
   23eb8:	mov	r2, #0
   23ebc:	strb	r5, [r3, r1]!
   23ec0:	strb	r2, [r3, #1]
   23ec4:	pop	{r4, r5, r6, r7, r8, pc}
   23ec8:	cmp	r1, #32
   23ecc:	bne	23e90 <__flatcc_fb_create_make_path_n@@Base+0xe4>
   23ed0:	strb	lr, [r0, r3]
   23ed4:	mov	r3, ip
   23ed8:	b	23e90 <__flatcc_fb_create_make_path_n@@Base+0xe4>

00023edc <__flatcc_fb_create_make_path@@Base>:
   23edc:	push	{r4, lr}
   23ee0:	mov	r4, r0
   23ee4:	bl	13fc8 <strlen@plt>
   23ee8:	mov	r1, r0
   23eec:	mov	r0, r4
   23ef0:	pop	{r4, lr}
   23ef4:	b	23dac <__flatcc_fb_create_make_path_n@@Base>

00023ef8 <__flatcc_fb_find_basename@@Base>:
   23ef8:	add	r1, r0, r1
   23efc:	cmp	r1, r0
   23f00:	bne	23f0c <__flatcc_fb_find_basename@@Base+0x14>
   23f04:	sub	r0, r1, r0
   23f08:	bx	lr
   23f0c:	ldrb	r3, [r1, #-1]
   23f10:	sub	r2, r1, #1
   23f14:	cmp	r3, #92	; 0x5c
   23f18:	cmpne	r3, #47	; 0x2f
   23f1c:	beq	23f04 <__flatcc_fb_find_basename@@Base+0xc>
   23f20:	mov	r1, r2
   23f24:	b	23efc <__flatcc_fb_find_basename@@Base+0x4>

00023f28 <__flatcc_fb_create_basename@@Base>:
   23f28:	push	{r4, r5, r6, lr}
   23f2c:	mov	r5, r1
   23f30:	mov	r6, r2
   23f34:	mov	r4, r0
   23f38:	bl	23ef8 <__flatcc_fb_find_basename@@Base>
   23f3c:	mov	r2, r6
   23f40:	add	r4, r4, r0
   23f44:	sub	r1, r5, r0
   23f48:	mov	r0, r4
   23f4c:	bl	23bb0 <__flatcc_fb_chomp@@Base>
   23f50:	mov	r5, r0
   23f54:	add	r0, r0, #1
   23f58:	bl	13f8c <malloc@plt>
   23f5c:	subs	r6, r0, #0
   23f60:	beq	23f78 <__flatcc_fb_create_basename@@Base+0x50>
   23f64:	mov	r2, r5
   23f68:	mov	r1, r4
   23f6c:	bl	13f20 <memcpy@plt>
   23f70:	mov	r3, #0
   23f74:	strb	r3, [r6, r5]
   23f78:	mov	r0, r6
   23f7c:	pop	{r4, r5, r6, pc}

00023f80 <__flatcc_fb_read_file@@Base>:
   23f80:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   23f84:	subs	r8, r2, #0
   23f88:	mov	r4, r1
   23f8c:	ldr	r1, [pc, #208]	; 24064 <__flatcc_fb_read_file@@Base+0xe4>
   23f90:	addeq	r8, sp, #4
   23f94:	bl	13f08 <fopen@plt>
   23f98:	subs	r7, r0, #0
   23f9c:	beq	2405c <__flatcc_fb_read_file@@Base+0xdc>
   23fa0:	mov	r2, #2
   23fa4:	mov	r1, #0
   23fa8:	bl	14064 <fseek@plt>
   23fac:	mov	r0, r7
   23fb0:	bl	13f2c <ftell@plt>
   23fb4:	cmp	r4, #0
   23fb8:	cmpne	r0, r4
   23fbc:	mov	r5, r0
   23fc0:	str	r0, [r8]
   23fc4:	movhi	r4, #1
   23fc8:	movls	r4, #0
   23fcc:	bhi	23ff4 <__flatcc_fb_read_file@@Base+0x74>
   23fd0:	mov	r0, r7
   23fd4:	bl	13f44 <rewind@plt>
   23fd8:	cmp	r5, #0
   23fdc:	movne	r0, r5
   23fe0:	moveq	r0, #1
   23fe4:	bl	13f8c <malloc@plt>
   23fe8:	subs	r6, r0, #0
   23fec:	movne	r9, #1
   23ff0:	bne	24020 <__flatcc_fb_read_file@@Base+0xa0>
   23ff4:	mov	r6, #0
   23ff8:	mov	r0, r7
   23ffc:	bl	1401c <fclose@plt>
   24000:	cmp	r6, #0
   24004:	beq	24010 <__flatcc_fb_read_file@@Base+0x90>
   24008:	mov	r0, r6
   2400c:	bl	13f14 <free@plt>
   24010:	str	r5, [r8]
   24014:	mov	r6, #0
   24018:	b	24050 <__flatcc_fb_read_file@@Base+0xd0>
   2401c:	add	r4, r4, r0
   24020:	mov	r3, r7
   24024:	sub	r2, r5, r4
   24028:	mov	r1, r9
   2402c:	add	r0, r6, r4
   24030:	bl	13f74 <fread@plt>
   24034:	cmp	r0, #0
   24038:	bne	2401c <__flatcc_fb_read_file@@Base+0x9c>
   2403c:	cmp	r4, r5
   24040:	bne	23ff8 <__flatcc_fb_read_file@@Base+0x78>
   24044:	mov	r0, r7
   24048:	bl	1401c <fclose@plt>
   2404c:	str	r4, [r8]
   24050:	mov	r0, r6
   24054:	add	sp, sp, #12
   24058:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2405c:	mov	r5, r7
   24060:	b	24010 <__flatcc_fb_read_file@@Base+0x90>
   24064:	andeq	r6, r4, r0, ror pc
   24068:	ldr	r3, [r0]
   2406c:	mov	r2, #0
   24070:	cmp	r3, #0
   24074:	bne	24080 <__flatcc_fb_read_file@@Base+0x100>
   24078:	str	r2, [r0]
   2407c:	bx	lr
   24080:	ldr	r1, [r3]
   24084:	str	r2, [r3]
   24088:	mov	r2, r3
   2408c:	mov	r3, r1
   24090:	b	24070 <__flatcc_fb_read_file@@Base+0xf0>

00024094 <__flatcc_fb_default_error_out@@Base>:
   24094:	ldr	r3, [pc, #12]	; 240a8 <__flatcc_fb_default_error_out@@Base+0x14>
   24098:	mov	r0, r1
   2409c:	mov	r1, #1
   240a0:	ldr	r3, [r3]
   240a4:	b	13f5c <fwrite@plt>
   240a8:	strheq	fp, [r5], -r0
   240ac:	add	r0, r1, #4
   240b0:	b	22e48 <fb_symbol_table_clear@@Base>
   240b4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   240b8:	mov	r4, r0
   240bc:	mov	r6, r1
   240c0:	ldr	r1, [r4, #28]
   240c4:	mov	r7, #20
   240c8:	ldr	r0, [r0, #20]
   240cc:	mul	r7, r7, r1
   240d0:	mov	r5, r2
   240d4:	ldr	r2, [r4, #40]	; 0x28
   240d8:	mov	r8, r3
   240dc:	add	r3, r0, r7
   240e0:	cmp	r3, r2
   240e4:	str	r3, [r4, #24]
   240e8:	bne	2412c <__flatcc_fb_default_error_out@@Base+0x98>
   240ec:	cmp	r1, #0
   240f0:	lslne	r1, r1, #1
   240f4:	moveq	r1, #1024	; 0x400
   240f8:	mov	r9, #20
   240fc:	str	r1, [r4, #28]
   24100:	mul	r1, r9, r1
   24104:	bl	13f50 <realloc@plt>
   24108:	cmp	r0, #0
   2410c:	str	r0, [r4, #20]
   24110:	bne	24118 <__flatcc_fb_default_error_out@@Base+0x84>
   24114:	bl	140c4 <__assert_fail@plt+0x30>
   24118:	ldr	r3, [r4, #28]
   2411c:	mla	r3, r9, r3, r0
   24120:	add	r0, r0, r7
   24124:	str	r3, [r4, #24]
   24128:	str	r0, [r4, #40]	; 0x28
   2412c:	ldr	r1, [r4, #40]	; 0x28
   24130:	ldr	r2, [r4, #60]	; 0x3c
   24134:	sub	r8, r8, r5
   24138:	str	r5, [r1]
   2413c:	ldr	r3, [r4, #64]	; 0x40
   24140:	sub	r5, r5, r2
   24144:	add	r5, r5, #1
   24148:	str	r6, [r1, #16]
   2414c:	str	r8, [r1, #4]
   24150:	str	r3, [r1, #8]
   24154:	str	r5, [r1, #12]
   24158:	add	r1, r1, #20
   2415c:	str	r1, [r4, #40]	; 0x28
   24160:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   24164:	mov	r3, r2
   24168:	ldr	r2, [r0, #32]
   2416c:	cmp	r2, #0
   24170:	bxeq	lr
   24174:	mov	r2, r1
   24178:	ldr	r1, [pc]	; 24180 <__flatcc_fb_default_error_out@@Base+0xec>
   2417c:	b	240b4 <__flatcc_fb_default_error_out@@Base+0x20>
   24180:			; <UNDEFINED> instruction: 0xfffffc3c
   24184:	push	{r4, r5, r6, lr}
   24188:	mov	r4, r0
   2418c:	add	r1, r1, #15
   24190:	ldr	r0, [r0, #52]	; 0x34
   24194:	bic	r5, r1, #15
   24198:	ldr	r3, [r4, #44]	; 0x2c
   2419c:	add	r2, r0, r5
   241a0:	cmp	r2, r3
   241a4:	bls	241dc <__flatcc_fb_default_error_out@@Base+0x148>
   241a8:	mov	r1, #1
   241ac:	mov	r0, #65536	; 0x10000
   241b0:	bl	13ee4 <calloc@plt>
   241b4:	subs	r3, r0, #0
   241b8:	bne	241c0 <__flatcc_fb_default_error_out@@Base+0x12c>
   241bc:	bl	140c4 <__assert_fail@plt+0x30>
   241c0:	ldr	r2, [r4, #48]	; 0x30
   241c4:	add	r0, r3, #16
   241c8:	str	r2, [r3]
   241cc:	str	r3, [r4, #48]	; 0x30
   241d0:	add	r3, r3, #65536	; 0x10000
   241d4:	str	r0, [r4, #52]	; 0x34
   241d8:	str	r3, [r4, #44]	; 0x2c
   241dc:	ldr	r1, [r4, #52]	; 0x34
   241e0:	add	r5, r1, r5
   241e4:	str	r5, [r4, #52]	; 0x34
   241e8:	pop	{r4, r5, r6, pc}
   241ec:	push	{r4, r5, r6, lr}
   241f0:	mov	r2, #0
   241f4:	mov	r5, r0
   241f8:	ldr	r0, [r0, #412]	; 0x19c
   241fc:	mov	r6, r1
   24200:	bl	235d4 <fb_scope_table_find@@Base>
   24204:	subs	r4, r0, #0
   24208:	bne	24240 <__flatcc_fb_default_error_out@@Base+0x1ac>
   2420c:	mov	r1, #28
   24210:	mov	r0, r5
   24214:	bl	24184 <__flatcc_fb_default_error_out@@Base+0xf0>
   24218:	add	r2, r5, #476	; 0x1dc
   2421c:	mov	r3, r0
   24220:	mov	r4, r0
   24224:	ldm	r2, {r0, r1}
   24228:	str	r6, [r3], #20
   2422c:	mov	r2, #1
   24230:	stm	r3, {r0, r1}
   24234:	mov	r1, r4
   24238:	ldr	r0, [r5, #412]	; 0x19c
   2423c:	bl	235b4 <fb_scope_table_insert_item@@Base>
   24240:	mov	r0, r4
   24244:	pop	{r4, r5, r6, pc}
   24248:	push	{r4, r5, r6, lr}
   2424c:	mov	r4, r0
   24250:	mov	r6, #12
   24254:	ldr	r3, [r4, #40]	; 0x28
   24258:	ldr	r2, [r4, #24]
   2425c:	add	r5, r3, #20
   24260:	cmp	r5, r2
   24264:	str	r5, [r4, #40]	; 0x28
   24268:	bne	24284 <__flatcc_fb_default_error_out@@Base+0x1f0>
   2426c:	str	r3, [r4, #40]	; 0x28
   24270:	ldr	r2, [pc, #64]	; 242b8 <__flatcc_fb_default_error_out@@Base+0x224>
   24274:	ldr	r3, [pc, #64]	; 242bc <__flatcc_fb_default_error_out@@Base+0x228>
   24278:	ldr	r1, [pc, #64]	; 242c0 <__flatcc_fb_default_error_out@@Base+0x22c>
   2427c:	ldr	r0, [pc, #64]	; 242c4 <__flatcc_fb_default_error_out@@Base+0x230>
   24280:	bl	14094 <__assert_fail@plt>
   24284:	ldr	r3, [r3, #36]	; 0x24
   24288:	cmn	r3, #964	; 0x3c4
   2428c:	bne	242b0 <__flatcc_fb_default_error_out@@Base+0x21c>
   24290:	mov	r1, r6
   24294:	mov	r0, r4
   24298:	bl	24184 <__flatcc_fb_default_error_out@@Base+0xf0>
   2429c:	ldr	r3, [r4, #36]	; 0x24
   242a0:	str	r5, [r0, #4]
   242a4:	str	r3, [r0]
   242a8:	str	r0, [r4, #36]	; 0x24
   242ac:	b	24254 <__flatcc_fb_default_error_out@@Base+0x1c0>
   242b0:	mov	r0, r5
   242b4:	pop	{r4, r5, r6, pc}
   242b8:	andeq	r0, r0, r5, asr r1
   242bc:	andeq	r6, r4, r3, ror pc
   242c0:	muleq	r4, r5, r0
   242c4:	andeq	r9, r3, sp, asr #1
   242c8:	push	{r4, lr}
   242cc:	ldr	r4, [r0, #40]	; 0x28
   242d0:	ldr	r3, [r4, #16]
   242d4:	cmp	r3, r1
   242d8:	movne	r4, #0
   242dc:	bne	242e4 <__flatcc_fb_default_error_out@@Base+0x250>
   242e0:	bl	24248 <__flatcc_fb_default_error_out@@Base+0x1b4>
   242e4:	mov	r0, r4
   242e8:	pop	{r4, pc}
   242ec:	push	{r4, lr}
   242f0:	mov	r4, r0
   242f4:	ldr	r3, [r4, #40]	; 0x28
   242f8:	ldr	r3, [r3, #16]
   242fc:	cmp	r3, #0
   24300:	bne	24308 <__flatcc_fb_default_error_out@@Base+0x274>
   24304:	pop	{r4, pc}
   24308:	cmp	r3, #59	; 0x3b
   2430c:	bne	24324 <__flatcc_fb_default_error_out@@Base+0x290>
   24310:	mov	r0, r4
   24314:	bl	24248 <__flatcc_fb_default_error_out@@Base+0x1b4>
   24318:	mov	r3, #0
   2431c:	str	r3, [r4, #36]	; 0x24
   24320:	pop	{r4, pc}
   24324:	cmp	r3, #125	; 0x7d
   24328:	beq	24318 <__flatcc_fb_default_error_out@@Base+0x284>
   2432c:	mov	r0, r4
   24330:	bl	24248 <__flatcc_fb_default_error_out@@Base+0x1b4>
   24334:	b	242f4 <__flatcc_fb_default_error_out@@Base+0x260>
   24338:	push	{r4, r5, r6, lr}
   2433c:	mov	r4, r0
   24340:	mov	r5, r1
   24344:	ldr	r3, [r4, #40]	; 0x28
   24348:	ldr	r3, [r3, #16]
   2434c:	cmp	r3, #0
   24350:	bne	24358 <__flatcc_fb_default_error_out@@Base+0x2c4>
   24354:	pop	{r4, r5, r6, pc}
   24358:	cmp	r5, r3
   2435c:	mov	r0, r4
   24360:	bne	24374 <__flatcc_fb_default_error_out@@Base+0x2e0>
   24364:	bl	24248 <__flatcc_fb_default_error_out@@Base+0x1b4>
   24368:	mov	r3, #0
   2436c:	str	r3, [r4, #36]	; 0x24
   24370:	pop	{r4, r5, r6, pc}
   24374:	bl	24248 <__flatcc_fb_default_error_out@@Base+0x1b4>
   24378:	b	24344 <__flatcc_fb_default_error_out@@Base+0x2b0>
   2437c:	push	{r4, r5, r6, lr}
   24380:	mov	r6, r1
   24384:	mov	r1, #120	; 0x78
   24388:	mov	r5, r0
   2438c:	bl	24184 <__flatcc_fb_default_error_out@@Base+0xf0>
   24390:	ldr	r3, [r6]
   24394:	str	r3, [r0]
   24398:	mov	r3, #5
   2439c:	mov	r4, r0
   243a0:	strh	r3, [r0, #8]
   243a4:	str	r0, [r6]
   243a8:	add	r0, r5, #36	; 0x24
   243ac:	bl	24068 <__flatcc_fb_read_file@@Base+0xe8>
   243b0:	ldr	r3, [r5, #36]	; 0x24
   243b4:	mov	r0, r4
   243b8:	str	r3, [r4, #68]	; 0x44
   243bc:	mov	r3, #0
   243c0:	str	r3, [r5, #36]	; 0x24
   243c4:	pop	{r4, r5, r6, pc}

000243c8 <__flatcc_fb_print_error@@Base>:
   243c8:	push	{r1, r2, r3}
   243cc:	mov	r1, #200	; 0xc8
   243d0:	push	{r4, r5, lr}
   243d4:	sub	sp, sp, #208	; 0xd0
   243d8:	add	r3, sp, #224	; 0xe0
   243dc:	mov	r5, r0
   243e0:	ldr	r2, [sp, #220]	; 0xdc
   243e4:	add	r0, sp, #8
   243e8:	str	r3, [sp, #4]
   243ec:	bl	1404c <vsnprintf@plt>
   243f0:	cmp	r0, #199	; 0xc7
   243f4:	movle	r4, r0
   243f8:	ble	2440c <__flatcc_fb_print_error@@Base+0x44>
   243fc:	ldr	r1, [pc, #48]	; 24434 <__flatcc_fb_print_error@@Base+0x6c>
   24400:	add	r0, sp, #203	; 0xcb
   24404:	bl	13f68 <strcpy@plt>
   24408:	mov	r4, #199	; 0xc7
   2440c:	ldr	r0, [r5, #12]
   24410:	ldr	r3, [r5, #8]
   24414:	mov	r2, r4
   24418:	add	r1, sp, #8
   2441c:	blx	r3
   24420:	mov	r0, r4
   24424:	add	sp, sp, #208	; 0xd0
   24428:	pop	{r4, r5, lr}
   2442c:	add	sp, sp, #12
   24430:	bx	lr
   24434:	andeq	r0, r3, ip, lsl #10

00024438 <__flatcc_error_find_file_of_token@@Base>:
   24438:	cmp	r0, #0
   2443c:	bne	24448 <__flatcc_error_find_file_of_token@@Base+0x10>
   24440:	ldr	r0, [pc, #40]	; 24470 <__flatcc_error_find_file_of_token@@Base+0x38>
   24444:	bx	lr
   24448:	ldr	r3, [r0, #20]
   2444c:	cmp	r3, r1
   24450:	bhi	24468 <__flatcc_error_find_file_of_token@@Base+0x30>
   24454:	ldr	r3, [r0, #24]
   24458:	cmp	r1, r3
   2445c:	bcs	24468 <__flatcc_error_find_file_of_token@@Base+0x30>
   24460:	ldr	r0, [r0, #520]	; 0x208
   24464:	bx	lr
   24468:	ldr	r0, [r0]
   2446c:	b	24438 <__flatcc_error_find_file_of_token@@Base>
   24470:	andeq	r1, r3, r1, lsr #28

00024474 <__flatcc_error_report@@Base>:
   24474:	push	{r4, r5, r6, r7, r8, r9, lr}
   24478:	sub	sp, sp, #44	; 0x2c
   2447c:	mov	r6, r1
   24480:	ldr	r7, [sp, #72]	; 0x48
   24484:	adds	r1, r1, #0
   24488:	movne	r1, #1
   2448c:	mov	r4, r3
   24490:	cmp	r7, #0
   24494:	movne	r3, #0
   24498:	andeq	r3, r1, #1
   2449c:	cmp	r3, #0
   244a0:	ldr	r8, [sp, #76]	; 0x4c
   244a4:	ldmne	r6, {r7, r8}
   244a8:	ldr	r3, [pc, #332]	; 245fc <__flatcc_error_report@@Base+0x188>
   244ac:	cmp	r2, #0
   244b0:	moveq	r2, r3
   244b4:	cmp	r7, #0
   244b8:	moveq	r8, r7
   244bc:	moveq	r7, r3
   244c0:	clz	r3, r4
   244c4:	lsr	r3, r3, #5
   244c8:	tst	r1, r3
   244cc:	mov	r5, r0
   244d0:	beq	24508 <__flatcc_error_report@@Base+0x94>
   244d4:	mov	r1, r6
   244d8:	bl	24438 <__flatcc_error_find_file_of_token@@Base>
   244dc:	str	r7, [sp, #8]
   244e0:	str	r8, [sp, #4]
   244e4:	ldr	r1, [pc, #276]	; 24600 <__flatcc_error_report@@Base+0x18c>
   244e8:	str	r2, [sp, #12]
   244ec:	ldr	r3, [r6, #12]
   244f0:	mov	r2, r0
   244f4:	str	r3, [sp]
   244f8:	ldr	r3, [r6, #8]
   244fc:	mov	r0, r5
   24500:	bl	243c8 <__flatcc_fb_print_error@@Base>
   24504:	b	24580 <__flatcc_error_report@@Base+0x10c>
   24508:	cmp	r4, #0
   2450c:	moveq	r1, #0
   24510:	andne	r1, r1, #1
   24514:	cmp	r1, #0
   24518:	beq	24594 <__flatcc_error_report@@Base+0x120>
   2451c:	mov	r1, r6
   24520:	bl	24438 <__flatcc_error_find_file_of_token@@Base>
   24524:	mov	r1, r4
   24528:	mov	r9, r0
   2452c:	mov	r0, r5
   24530:	bl	24438 <__flatcc_error_find_file_of_token@@Base>
   24534:	ldr	r3, [r4]
   24538:	str	r7, [sp, #8]
   2453c:	str	r3, [sp, #32]
   24540:	ldr	r3, [r4, #4]
   24544:	str	r8, [sp, #4]
   24548:	str	r3, [sp, #28]
   2454c:	ldr	r3, [r4, #12]
   24550:	ldr	r1, [pc, #172]	; 24604 <__flatcc_error_report@@Base+0x190>
   24554:	str	r3, [sp, #24]
   24558:	ldr	r3, [r4, #8]
   2455c:	str	r3, [sp, #20]
   24560:	str	r0, [sp, #16]
   24564:	str	r2, [sp, #12]
   24568:	ldr	r3, [r6, #12]
   2456c:	mov	r2, r9
   24570:	str	r3, [sp]
   24574:	mov	r0, r5
   24578:	ldr	r3, [r6, #8]
   2457c:	bl	243c8 <__flatcc_fb_print_error@@Base>
   24580:	ldr	r3, [r5, #108]	; 0x6c
   24584:	add	r3, r3, #1
   24588:	str	r3, [r5, #108]	; 0x6c
   2458c:	add	sp, sp, #44	; 0x2c
   24590:	pop	{r4, r5, r6, r7, r8, r9, pc}
   24594:	cmp	r6, #0
   24598:	movne	r6, #0
   2459c:	andeq	r6, r3, #1
   245a0:	cmp	r6, #0
   245a4:	beq	245b4 <__flatcc_error_report@@Base+0x140>
   245a8:	ldr	r1, [pc, #88]	; 24608 <__flatcc_error_report@@Base+0x194>
   245ac:	bl	243c8 <__flatcc_fb_print_error@@Base>
   245b0:	b	24580 <__flatcc_error_report@@Base+0x10c>
   245b4:	cmp	r4, #0
   245b8:	beq	245f0 <__flatcc_error_report@@Base+0x17c>
   245bc:	mov	r1, r4
   245c0:	bl	24438 <__flatcc_error_find_file_of_token@@Base>
   245c4:	ldr	r3, [r4]
   245c8:	ldr	r1, [pc, #60]	; 2460c <__flatcc_error_report@@Base+0x198>
   245cc:	str	r3, [sp, #12]
   245d0:	ldr	r3, [r4, #4]
   245d4:	str	r3, [sp, #8]
   245d8:	ldr	r3, [r4, #12]
   245dc:	str	r3, [sp, #4]
   245e0:	ldr	r3, [r4, #8]
   245e4:	str	r3, [sp]
   245e8:	mov	r3, r0
   245ec:	b	244fc <__flatcc_error_report@@Base+0x88>
   245f0:	ldr	r1, [pc, #24]	; 24610 <__flatcc_error_report@@Base+0x19c>
   245f4:	bl	243c8 <__flatcc_fb_print_error@@Base>
   245f8:	b	24580 <__flatcc_error_report@@Base+0x10c>
   245fc:	andeq	r1, r3, r1, lsr #28
   24600:	ldrdeq	r7, [r4], -fp
   24604:	strdeq	r7, [r4], -sl
   24608:	andeq	r7, r4, sp, lsr #2
   2460c:	andeq	r7, r4, r8, lsr r1
   24610:	andeq	r7, r4, r7, asr r1
   24614:	mov	r3, #0
   24618:	push	{r0, r1, r2, lr}
   2461c:	str	r3, [sp, #4]
   24620:	str	r3, [sp]
   24624:	bl	24474 <__flatcc_error_report@@Base>
   24628:	add	sp, sp, #12
   2462c:	pop	{pc}		; (ldr pc, [sp], #4)
   24630:	push	{r4, lr}
   24634:	ldr	r4, [r0, #40]	; 0x28
   24638:	ldr	r3, [r4, #16]
   2463c:	cmp	r3, r1
   24640:	bne	24650 <__flatcc_error_report@@Base+0x1dc>
   24644:	bl	24248 <__flatcc_fb_default_error_out@@Base+0x1b4>
   24648:	mov	r0, r4
   2464c:	pop	{r4, pc}
   24650:	mov	r1, r4
   24654:	bl	24614 <__flatcc_error_report@@Base+0x1a0>
   24658:	mov	r4, #0
   2465c:	b	24648 <__flatcc_error_report@@Base+0x1d4>
   24660:	push	{r4, r5, r6, r7, r8, lr}
   24664:	mov	r5, r1
   24668:	mov	r1, #12
   2466c:	ldr	r6, [r0, #40]	; 0x28
   24670:	mov	r4, r0
   24674:	bl	24184 <__flatcc_fb_default_error_out@@Base+0xf0>
   24678:	mov	r7, #46	; 0x2e
   2467c:	mov	r8, #12
   24680:	str	r6, [r0, #4]
   24684:	str	r0, [r5]
   24688:	mov	r0, r4
   2468c:	bl	24248 <__flatcc_fb_default_error_out@@Base+0x1b4>
   24690:	ldr	r6, [r5]
   24694:	mov	r1, r7
   24698:	mov	r0, r4
   2469c:	bl	242c8 <__flatcc_fb_default_error_out@@Base+0x234>
   246a0:	cmp	r0, #0
   246a4:	bne	246ac <__flatcc_error_report@@Base+0x238>
   246a8:	pop	{r4, r5, r6, r7, r8, pc}
   246ac:	ldr	r5, [r4, #40]	; 0x28
   246b0:	ldr	r3, [r5, #16]
   246b4:	cmp	r3, #9
   246b8:	beq	246d0 <__flatcc_error_report@@Base+0x25c>
   246bc:	mov	r1, r5
   246c0:	mov	r0, r4
   246c4:	ldr	r2, [pc, #40]	; 246f4 <__flatcc_error_report@@Base+0x280>
   246c8:	pop	{r4, r5, r6, r7, r8, lr}
   246cc:	b	24614 <__flatcc_error_report@@Base+0x1a0>
   246d0:	mov	r1, r8
   246d4:	mov	r0, r4
   246d8:	bl	24184 <__flatcc_fb_default_error_out@@Base+0xf0>
   246dc:	str	r5, [r0, #4]
   246e0:	str	r0, [r6]
   246e4:	mov	r6, r0
   246e8:	mov	r0, r4
   246ec:	bl	24248 <__flatcc_fb_default_error_out@@Base+0x1b4>
   246f0:	b	24694 <__flatcc_error_report@@Base+0x220>
   246f4:	andeq	r7, r4, r9, ror r1
   246f8:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
   246fc:	mov	r3, #2
   24700:	ldr	r7, [pc, #296]	; 24830 <__flatcc_error_report@@Base+0x3bc>
   24704:	ldr	r8, [pc, #296]	; 24834 <__flatcc_error_report@@Base+0x3c0>
   24708:	mov	r5, r0
   2470c:	mov	r4, r1
   24710:	mov	r6, #1
   24714:	strh	r3, [r1, #8]
   24718:	mov	r3, #0
   2471c:	str	r3, [r1]
   24720:	str	r3, [r1, #4]
   24724:	ldr	r1, [r5, #40]	; 0x28
   24728:	ldr	r3, [r1, #16]
   2472c:	sub	r3, r3, #6
   24730:	cmp	r3, #17
   24734:	ldrls	pc, [pc, r3, lsl #2]
   24738:	b	247e0 <__flatcc_error_report@@Base+0x36c>
   2473c:			; <UNDEFINED> instruction: 0x000247b4
   24740:	andeq	r4, r2, r0, ror #15
   24744:	andeq	r4, r2, r0, ror #15
   24748:	andeq	r4, r2, r0, ror #15
   2474c:	andeq	r4, r2, r0, ror #15
   24750:	andeq	r4, r2, r0, ror #15
   24754:	andeq	r4, r2, r0, ror #15
   24758:	andeq	r4, r2, r0, ror #15
   2475c:	andeq	r4, r2, r0, ror #15
   24760:	andeq	r4, r2, r0, ror #15
   24764:	andeq	r4, r2, r0, ror #15
   24768:	andeq	r4, r2, r0, ror #15
   2476c:	ldrdeq	r4, [r2], -r4	; <UNPREDICTABLE>
   24770:	andeq	r4, r2, r0, ror #15
   24774:	andeq	r4, r2, r4, lsl #15
   24778:	andeq	r4, r2, r0, lsr #15
   2477c:	strdeq	r4, [r2], -r4	; <UNPREDICTABLE>
   24780:	strdeq	r4, [r2], -r4	; <UNPREDICTABLE>
   24784:	ldr	r3, [r4]
   24788:	cmp	r3, #0
   2478c:	ldreq	r3, [r1]
   24790:	streq	r3, [r4]
   24794:	mov	r0, r5
   24798:	bl	24248 <__flatcc_fb_default_error_out@@Base+0x1b4>
   2479c:	b	24724 <__flatcc_error_report@@Base+0x2b0>
   247a0:	ldr	r2, [pc, #144]	; 24838 <__flatcc_error_report@@Base+0x3c4>
   247a4:	strh	r6, [r4, #8]
   247a8:	mov	r0, r5
   247ac:	bl	24614 <__flatcc_error_report@@Base+0x1a0>
   247b0:	b	24794 <__flatcc_error_report@@Base+0x320>
   247b4:	strh	r6, [r4, #8]
   247b8:	str	r6, [sp, #4]
   247bc:	str	r8, [sp]
   247c0:	mov	r3, #0
   247c4:	ldr	r2, [pc, #112]	; 2483c <__flatcc_error_report@@Base+0x3c8>
   247c8:	mov	r0, r5
   247cc:	bl	24474 <__flatcc_error_report@@Base>
   247d0:	b	24794 <__flatcc_error_report@@Base+0x320>
   247d4:	strh	r6, [r4, #8]
   247d8:	mov	r2, r7
   247dc:	b	247a8 <__flatcc_error_report@@Base+0x334>
   247e0:	ldr	r2, [pc, #88]	; 24840 <__flatcc_error_report@@Base+0x3cc>
   247e4:	mov	r0, r5
   247e8:	bl	24614 <__flatcc_error_report@@Base+0x1a0>
   247ec:	mov	r3, #1
   247f0:	strh	r3, [r4, #8]
   247f4:	ldr	r2, [r4]
   247f8:	mov	r1, #22
   247fc:	cmp	r2, #0
   24800:	mov	r0, r5
   24804:	ldrne	r3, [r5, #40]	; 0x28
   24808:	ldrne	r3, [r3]
   2480c:	subne	r3, r3, r2
   24810:	strne	r3, [r4, #4]
   24814:	ldr	r2, [pc, #40]	; 24844 <__flatcc_error_report@@Base+0x3d0>
   24818:	bl	24630 <__flatcc_error_report@@Base+0x1bc>
   2481c:	cmp	r0, #0
   24820:	moveq	r3, #1
   24824:	strheq	r3, [r4, #8]
   24828:	add	sp, sp, #8
   2482c:	pop	{r4, r5, r6, r7, r8, pc}
   24830:	andeq	r7, r4, r8, ror #3
   24834:	andeq	r7, r4, r6, ror #3
   24838:	muleq	r4, lr, r1
   2483c:			; <UNDEFINED> instruction: 0x000471bc
   24840:	andeq	r7, r4, r7, lsl #4
   24844:	andeq	r7, r4, r2, lsr r2
   24848:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2484c:	mov	r4, r1
   24850:	sub	sp, sp, #28
   24854:	mov	r1, #45	; 0x2d
   24858:	mov	r6, r0
   2485c:	mov	r7, r3
   24860:	mov	r8, r2
   24864:	bl	242c8 <__flatcc_fb_default_error_out@@Base+0x234>
   24868:	ldr	r5, [r6, #40]	; 0x28
   2486c:	ldr	r3, [r5, #16]
   24870:	cmp	r3, #10
   24874:	mov	sl, r0
   24878:	beq	24aa8 <__flatcc_error_report@@Base+0x634>
   2487c:	bgt	248d0 <__flatcc_error_report@@Base+0x45c>
   24880:	ldr	r2, [pc, #1020]	; 24c84 <__flatcc_error_report@@Base+0x810>
   24884:	cmp	r3, r2
   24888:	beq	24b90 <__flatcc_error_report@@Base+0x71c>
   2488c:	cmp	r3, #9
   24890:	beq	24be4 <__flatcc_error_report@@Base+0x770>
   24894:	cmn	r3, #988	; 0x3dc
   24898:	bne	24c10 <__flatcc_error_report@@Base+0x79c>
   2489c:	mov	r3, #1
   248a0:	strb	r3, [r4]
   248a4:	cmp	sl, #0
   248a8:	mov	r3, #6
   248ac:	strh	r3, [r4, #8]
   248b0:	beq	24934 <__flatcc_error_report@@Base+0x4c0>
   248b4:	mov	r3, #1
   248b8:	strh	r3, [r4, #8]
   248bc:	ldr	r2, [pc, #964]	; 24c88 <__flatcc_error_report@@Base+0x814>
   248c0:	mov	r1, r5
   248c4:	mov	r0, r6
   248c8:	bl	24614 <__flatcc_error_report@@Base+0x1a0>
   248cc:	b	24934 <__flatcc_error_report@@Base+0x4c0>
   248d0:	cmp	r3, #14
   248d4:	beq	24940 <__flatcc_error_report@@Base+0x4cc>
   248d8:	cmp	r3, #19
   248dc:	beq	24b98 <__flatcc_error_report@@Base+0x724>
   248e0:	cmp	r3, #11
   248e4:	bne	24c10 <__flatcc_error_report@@Base+0x79c>
   248e8:	mov	r3, #3
   248ec:	strh	r3, [r4, #8]
   248f0:	add	r1, sp, #20
   248f4:	ldr	r0, [r5]
   248f8:	bl	14004 <strtod@plt>
   248fc:	ldr	r1, [sp, #20]
   24900:	vstr	d0, [r4]
   24904:	ldm	r5, {r2, r3}
   24908:	add	r3, r2, r3
   2490c:	cmp	r1, r3
   24910:	beq	24b64 <__flatcc_error_report@@Base+0x6f0>
   24914:	ldr	r2, [pc, #880]	; 24c8c <__flatcc_error_report@@Base+0x818>
   24918:	mov	r3, #1
   2491c:	strh	r3, [r4, #8]
   24920:	mov	r1, r5
   24924:	mov	r0, r6
   24928:	bl	24614 <__flatcc_error_report@@Base+0x1a0>
   2492c:	cmp	sl, #0
   24930:	bne	24c6c <__flatcc_error_report@@Base+0x7f8>
   24934:	mov	r0, r6
   24938:	bl	24248 <__flatcc_fb_default_error_out@@Base+0x1b4>
   2493c:	b	24bdc <__flatcc_error_report@@Base+0x768>
   24940:	mov	r3, #5
   24944:	strh	r3, [r4, #8]
   24948:	ldr	r2, [r5, #4]
   2494c:	ldr	r3, [r5]
   24950:	add	r0, r3, r2
   24954:	cmp	r3, r0
   24958:	beq	24a20 <__flatcc_error_report@@Base+0x5ac>
   2495c:	ldrb	r7, [r3]
   24960:	sub	ip, r7, #45	; 0x2d
   24964:	clz	ip, ip
   24968:	lsr	ip, ip, #5
   2496c:	sub	r2, r2, ip
   24970:	cmp	r2, #1
   24974:	add	r1, r3, ip
   24978:	ble	24a20 <__flatcc_error_report@@Base+0x5ac>
   2497c:	ldrb	r3, [r3, ip]
   24980:	cmp	r3, #48	; 0x30
   24984:	bne	24a20 <__flatcc_error_report@@Base+0x5ac>
   24988:	ldrb	r3, [r1, #1]
   2498c:	orr	r3, r3, #32
   24990:	cmp	r3, #120	; 0x78
   24994:	bne	24a20 <__flatcc_error_report@@Base+0x5ac>
   24998:	add	lr, r1, #2
   2499c:	sub	r3, r0, lr
   249a0:	cmp	r3, #16
   249a4:	addgt	r1, r1, #18
   249a8:	movle	r1, r0
   249ac:	mov	ip, lr
   249b0:	mov	r2, #0
   249b4:	mov	r3, #0
   249b8:	cmp	r1, ip
   249bc:	mov	r9, ip
   249c0:	bne	24a3c <__flatcc_error_report@@Base+0x5c8>
   249c4:	cmp	lr, r9
   249c8:	beq	24a20 <__flatcc_error_report@@Base+0x5ac>
   249cc:	cmp	r0, r9
   249d0:	beq	24a14 <__flatcc_error_report@@Base+0x5a0>
   249d4:	cmp	r9, r1
   249d8:	ldrb	r0, [r9]
   249dc:	bne	249fc <__flatcc_error_report@@Base+0x588>
   249e0:	sub	r1, r0, #48	; 0x30
   249e4:	cmp	r1, #9
   249e8:	bls	24a20 <__flatcc_error_report@@Base+0x5ac>
   249ec:	orr	r0, r0, #32
   249f0:	sub	r1, r0, #97	; 0x61
   249f4:	cmp	r1, #5
   249f8:	bls	24a20 <__flatcc_error_report@@Base+0x5ac>
   249fc:	cmp	r0, #80	; 0x50
   24a00:	beq	24a20 <__flatcc_error_report@@Base+0x5ac>
   24a04:	cmp	r0, #112	; 0x70
   24a08:	beq	24a20 <__flatcc_error_report@@Base+0x5ac>
   24a0c:	cmp	r0, #46	; 0x2e
   24a10:	beq	24a20 <__flatcc_error_report@@Base+0x5ac>
   24a14:	cmp	r7, #45	; 0x2d
   24a18:	strd	r2, [r4]
   24a1c:	bne	24c4c <__flatcc_error_report@@Base+0x7d8>
   24a20:	ldr	r2, [pc, #616]	; 24c90 <__flatcc_error_report@@Base+0x81c>
   24a24:	mov	r3, #1
   24a28:	strh	r3, [r4, #8]
   24a2c:	mov	r1, r5
   24a30:	mov	r0, r6
   24a34:	bl	24614 <__flatcc_error_report@@Base+0x1a0>
   24a38:	b	24c4c <__flatcc_error_report@@Base+0x7d8>
   24a3c:	ldrb	r8, [ip], #1
   24a40:	sub	fp, r8, #48	; 0x30
   24a44:	cmp	fp, #9
   24a48:	bhi	24a78 <__flatcc_error_report@@Base+0x604>
   24a4c:	lsl	r9, r3, #4
   24a50:	orr	r9, r9, r2, lsr #28
   24a54:	lsl	r3, r2, #4
   24a58:	str	r9, [sp, #4]
   24a5c:	str	r3, [sp]
   24a60:	ldrd	r2, [sp]
   24a64:	subs	r2, r2, #48	; 0x30
   24a68:	sbc	r3, r3, #0
   24a6c:	adds	r2, r2, r8
   24a70:	adc	r3, r3, #0
   24a74:	b	249b8 <__flatcc_error_report@@Base+0x544>
   24a78:	orr	r8, r8, #32
   24a7c:	sub	fp, r8, #97	; 0x61
   24a80:	cmp	fp, #5
   24a84:	bhi	249c4 <__flatcc_error_report@@Base+0x550>
   24a88:	lsl	r9, r3, #4
   24a8c:	orr	r9, r9, r2, lsr #28
   24a90:	lsl	r3, r2, #4
   24a94:	str	r9, [sp, #12]
   24a98:	str	r3, [sp, #8]
   24a9c:	ldrd	r2, [sp, #8]
   24aa0:	subs	r2, r2, #87	; 0x57
   24aa4:	b	24a68 <__flatcc_error_report@@Base+0x5f4>
   24aa8:	ldr	lr, [r5]
   24aac:	ldr	r8, [r5, #4]
   24ab0:	mov	r2, #5
   24ab4:	add	r8, lr, r8
   24ab8:	cmp	lr, r8
   24abc:	strh	r2, [r4, #8]
   24ac0:	beq	24b0c <__flatcc_error_report@@Base+0x698>
   24ac4:	ldrb	r9, [lr]
   24ac8:	mov	r0, #0
   24acc:	mov	r1, #0
   24ad0:	cmp	r9, #45	; 0x2d
   24ad4:	movne	r7, lr
   24ad8:	addeq	r7, lr, #1
   24adc:	mov	ip, r7
   24ae0:	mov	fp, r3
   24ae4:	strd	r0, [sp]
   24ae8:	cmp	ip, r8
   24aec:	mov	r1, ip
   24af0:	beq	24c7c <__flatcc_error_report@@Base+0x808>
   24af4:	ldrb	r2, [ip], #1
   24af8:	sub	r0, r2, #48	; 0x30
   24afc:	cmp	r0, #9
   24b00:	bls	24b1c <__flatcc_error_report@@Base+0x6a8>
   24b04:	cmp	lr, r1
   24b08:	bne	24c18 <__flatcc_error_report@@Base+0x7a4>
   24b0c:	mov	r3, #1
   24b10:	strh	r3, [r4, #8]
   24b14:	ldr	r2, [pc, #376]	; 24c94 <__flatcc_error_report@@Base+0x820>
   24b18:	b	24a2c <__flatcc_error_report@@Base+0x5b8>
   24b1c:	ldr	r3, [sp]
   24b20:	umull	r0, r1, r3, fp
   24b24:	ldr	r3, [sp, #4]
   24b28:	subs	r0, r0, #48	; 0x30
   24b2c:	mla	r1, fp, r3, r1
   24b30:	sbc	r1, r1, #0
   24b34:	adds	r0, r0, r2
   24b38:	ldrd	r2, [sp]
   24b3c:	adc	r1, r1, #0
   24b40:	cmp	r3, r1
   24b44:	cmpeq	r2, r0
   24b48:	bhi	24b0c <__flatcc_error_report@@Base+0x698>
   24b4c:	strd	r0, [sp]
   24b50:	b	24ae8 <__flatcc_error_report@@Base+0x674>
   24b54:	cmp	r2, #101	; 0x65
   24b58:	beq	24b0c <__flatcc_error_report@@Base+0x698>
   24b5c:	cmp	r2, #112	; 0x70
   24b60:	b	24c38 <__flatcc_error_report@@Base+0x7c4>
   24b64:	ldrb	r3, [r2]
   24b68:	cmp	r3, #46	; 0x2e
   24b6c:	moveq	r3, #1
   24b70:	strheq	r3, [r4, #8]
   24b74:	ldreq	r2, [pc, #284]	; 24c98 <__flatcc_error_report@@Base+0x824>
   24b78:	beq	24920 <__flatcc_error_report@@Base+0x4ac>
   24b7c:	cmp	sl, #0
   24b80:	vnegne.f64	d0, d0
   24b84:	vstrne	d0, [r4]
   24b88:	bne	24c6c <__flatcc_error_report@@Base+0x7f8>
   24b8c:	b	24934 <__flatcc_error_report@@Base+0x4c0>
   24b90:	mov	r3, #0
   24b94:	b	248a0 <__flatcc_error_report@@Base+0x42c>
   24b98:	mov	r0, r6
   24b9c:	bl	24248 <__flatcc_fb_default_error_out@@Base+0x1b4>
   24ba0:	mov	r1, r4
   24ba4:	mov	r0, r6
   24ba8:	bl	246f8 <__flatcc_error_report@@Base+0x284>
   24bac:	tst	r8, #1
   24bb0:	moveq	r3, #1
   24bb4:	strheq	r3, [r4, #8]
   24bb8:	beq	24c10 <__flatcc_error_report@@Base+0x79c>
   24bbc:	cmp	sl, #0
   24bc0:	beq	24bdc <__flatcc_error_report@@Base+0x768>
   24bc4:	ldr	r2, [pc, #208]	; 24c9c <__flatcc_error_report@@Base+0x828>
   24bc8:	mov	r3, #1
   24bcc:	strh	r3, [r4, #8]
   24bd0:	mov	r1, r5
   24bd4:	mov	r0, r6
   24bd8:	bl	24614 <__flatcc_error_report@@Base+0x1a0>
   24bdc:	add	sp, sp, #28
   24be0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24be4:	mov	r1, r4
   24be8:	mov	r0, r6
   24bec:	bl	24660 <__flatcc_error_report@@Base+0x1ec>
   24bf0:	cmp	sl, #0
   24bf4:	moveq	r3, #13
   24bf8:	strheq	r3, [r4, #8]
   24bfc:	beq	24bdc <__flatcc_error_report@@Base+0x768>
   24c00:	mov	r3, #1
   24c04:	strh	r3, [r4, #8]
   24c08:	ldr	r2, [pc, #144]	; 24ca0 <__flatcc_error_report@@Base+0x82c>
   24c0c:	b	24bd0 <__flatcc_error_report@@Base+0x75c>
   24c10:	mov	r2, r7
   24c14:	b	24bd0 <__flatcc_error_report@@Base+0x75c>
   24c18:	cmp	r7, r1
   24c1c:	beq	24b0c <__flatcc_error_report@@Base+0x698>
   24c20:	cmp	r2, #80	; 0x50
   24c24:	beq	24b0c <__flatcc_error_report@@Base+0x698>
   24c28:	bhi	24b54 <__flatcc_error_report@@Base+0x6e0>
   24c2c:	cmp	r2, #46	; 0x2e
   24c30:	beq	24b0c <__flatcc_error_report@@Base+0x698>
   24c34:	cmp	r2, #69	; 0x45
   24c38:	beq	24b0c <__flatcc_error_report@@Base+0x698>
   24c3c:	ldrd	r2, [sp]
   24c40:	cmp	r9, #45	; 0x2d
   24c44:	strd	r2, [r4]
   24c48:	beq	24b0c <__flatcc_error_report@@Base+0x698>
   24c4c:	cmp	sl, #0
   24c50:	beq	24934 <__flatcc_error_report@@Base+0x4c0>
   24c54:	ldrd	r2, [r4]
   24c58:	rsbs	r2, r2, #0
   24c5c:	rsc	r3, r3, #0
   24c60:	strd	r2, [r4]
   24c64:	mov	r3, #4
   24c68:	strh	r3, [r4, #8]
   24c6c:	ldrh	r3, [r4, #8]
   24c70:	cmp	r3, #6
   24c74:	bne	24934 <__flatcc_error_report@@Base+0x4c0>
   24c78:	b	248b4 <__flatcc_error_report@@Base+0x440>
   24c7c:	cmp	r7, ip
   24c80:	b	24c38 <__flatcc_error_report@@Base+0x7c4>
   24c84:			; <UNDEFINED> instruction: 0xfffffc26
   24c88:	strdeq	r7, [r4], -r4
   24c8c:	andeq	r7, r4, r8, ror r2
   24c90:	andeq	r7, r4, r6, asr #4
   24c94:	andeq	r7, r4, r1, ror #4
   24c98:	andeq	r7, r4, sp, lsl #5
   24c9c:			; <UNDEFINED> instruction: 0x000472b4
   24ca0:	ldrdeq	r7, [r4], -r6
   24ca4:	push	{r0, r1, r2, r4, r5, lr}
   24ca8:	mov	lr, #0
   24cac:	ldr	r5, [r0, #40]	; 0x28
   24cb0:	str	lr, [r0, #36]	; 0x24
   24cb4:	ldr	ip, [r5, #16]
   24cb8:	cmp	ip, r1
   24cbc:	bne	24ccc <__flatcc_error_report@@Base+0x858>
   24cc0:	add	sp, sp, #12
   24cc4:	pop	{r4, r5, lr}
   24cc8:	b	24248 <__flatcc_fb_default_error_out@@Base+0x1b4>
   24ccc:	str	lr, [sp, #4]
   24cd0:	str	lr, [sp]
   24cd4:	mov	r1, r5
   24cd8:	mov	r4, r0
   24cdc:	bl	24474 <__flatcc_error_report@@Base>
   24ce0:	ldr	r0, [r4, #40]	; 0x28
   24ce4:	add	sp, sp, #12
   24ce8:	pop	{r4, r5, pc}
   24cec:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24cf0:	mov	r1, #40	; 0x28
   24cf4:	mov	r5, r0
   24cf8:	bl	242c8 <__flatcc_fb_default_error_out@@Base+0x234>
   24cfc:	subs	r7, r0, #0
   24d00:	moveq	r4, r7
   24d04:	beq	24dcc <__flatcc_error_report@@Base+0x958>
   24d08:	mov	r1, #9
   24d0c:	mov	r0, r5
   24d10:	bl	242c8 <__flatcc_fb_default_error_out@@Base+0x234>
   24d14:	subs	r6, r0, #0
   24d18:	beq	24dd4 <__flatcc_error_report@@Base+0x960>
   24d1c:	ldr	fp, [pc, #204]	; 24df0 <__flatcc_error_report@@Base+0x97c>
   24d20:	ldr	r9, [pc, #204]	; 24df4 <__flatcc_error_report@@Base+0x980>
   24d24:	mov	r8, #0
   24d28:	mov	sl, #24
   24d2c:	mov	r1, sl
   24d30:	mov	r0, r5
   24d34:	bl	24184 <__flatcc_fb_default_error_out@@Base+0xf0>
   24d38:	mov	r1, #58	; 0x3a
   24d3c:	str	r8, [r0]
   24d40:	str	r6, [r0, #4]
   24d44:	mov	r4, r0
   24d48:	mov	r0, r5
   24d4c:	bl	242c8 <__flatcc_fb_default_error_out@@Base+0x234>
   24d50:	cmp	r0, #0
   24d54:	beq	24d6c <__flatcc_error_report@@Base+0x8f8>
   24d58:	mov	r3, fp
   24d5c:	mov	r2, #1
   24d60:	add	r1, r4, #8
   24d64:	mov	r0, r5
   24d68:	bl	24848 <__flatcc_error_report@@Base+0x3d4>
   24d6c:	ldr	r3, [r5, #108]	; 0x6c
   24d70:	cmp	r3, #9
   24d74:	bgt	24dcc <__flatcc_error_report@@Base+0x958>
   24d78:	mov	r1, #44	; 0x2c
   24d7c:	mov	r0, r5
   24d80:	bl	242c8 <__flatcc_fb_default_error_out@@Base+0x234>
   24d84:	cmp	r0, #0
   24d88:	beq	24da8 <__flatcc_error_report@@Base+0x934>
   24d8c:	mov	r2, r9
   24d90:	mov	r1, #9
   24d94:	mov	r0, r5
   24d98:	bl	24630 <__flatcc_error_report@@Base+0x1bc>
   24d9c:	mov	r8, r4
   24da0:	subs	r6, r0, #0
   24da4:	bne	24d2c <__flatcc_error_report@@Base+0x8b8>
   24da8:	mov	r3, r7
   24dac:	ldr	r2, [pc, #68]	; 24df8 <__flatcc_error_report@@Base+0x984>
   24db0:	mov	r1, #41	; 0x29
   24db4:	mov	r0, r5
   24db8:	bl	24ca4 <__flatcc_error_report@@Base+0x830>
   24dbc:	mov	r3, r4
   24dc0:	mov	r4, #0
   24dc4:	cmp	r3, #0
   24dc8:	bne	24ddc <__flatcc_error_report@@Base+0x968>
   24dcc:	mov	r0, r4
   24dd0:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24dd4:	mov	r4, r6
   24dd8:	b	24da8 <__flatcc_error_report@@Base+0x934>
   24ddc:	ldr	r2, [r3]
   24de0:	str	r4, [r3]
   24de4:	mov	r4, r3
   24de8:	mov	r3, r2
   24dec:	b	24dc4 <__flatcc_error_report@@Base+0x950>
   24df0:	andeq	r7, r4, r7, lsl r3
   24df4:	andeq	r7, r4, r7, lsr r3
   24df8:	andeq	r7, r4, r4, ror #6
   24dfc:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
   24e00:	mov	r4, r0
   24e04:	mov	r6, r1
   24e08:	mov	r5, #0
   24e0c:	mov	r8, #91	; 0x5b
   24e10:	mov	r3, #1
   24e14:	ldr	r7, [r0, #40]	; 0x28
   24e18:	strh	r3, [r1, #8]
   24e1c:	mov	r1, r8
   24e20:	mov	r0, r4
   24e24:	bl	242c8 <__flatcc_fb_default_error_out@@Base+0x234>
   24e28:	cmp	r0, #0
   24e2c:	bne	24ee0 <__flatcc_error_report@@Base+0xa6c>
   24e30:	cmp	r5, #1
   24e34:	ble	24e48 <__flatcc_error_report@@Base+0x9d4>
   24e38:	ldr	r2, [pc, #412]	; 24fdc <__flatcc_error_report@@Base+0xb68>
   24e3c:	mov	r1, r7
   24e40:	mov	r0, r4
   24e44:	bl	24614 <__flatcc_error_report@@Base+0x1a0>
   24e48:	ldr	r2, [r4, #40]	; 0x28
   24e4c:	ldr	r3, [r2, #16]
   24e50:	cmn	r3, #984	; 0x3d8
   24e54:	bgt	24f08 <__flatcc_error_report@@Base+0xa94>
   24e58:	mvn	r1, #984	; 0x3d8
   24e5c:	cmp	r3, r1
   24e60:	bge	24e84 <__flatcc_error_report@@Base+0xa10>
   24e64:	cmn	r3, #988	; 0x3dc
   24e68:	bge	24ee8 <__flatcc_error_report@@Base+0xa74>
   24e6c:	cmn	r3, #996	; 0x3e4
   24e70:	bge	24e84 <__flatcc_error_report@@Base+0xa10>
   24e74:	add	r3, r3, #996	; 0x3e4
   24e78:	add	r3, r3, #3
   24e7c:	cmp	r3, #1
   24e80:	bhi	24ef4 <__flatcc_error_report@@Base+0xa80>
   24e84:	cmp	r5, #0
   24e88:	movne	r3, #7
   24e8c:	moveq	r3, #8
   24e90:	str	r2, [r6]
   24e94:	strh	r3, [r6, #8]
   24e98:	mov	r0, r4
   24e9c:	bl	24248 <__flatcc_fb_default_error_out@@Base+0x1b4>
   24ea0:	mov	r6, #93	; 0x5d
   24ea4:	mov	r1, r6
   24ea8:	mov	r0, r4
   24eac:	bl	242c8 <__flatcc_fb_default_error_out@@Base+0x234>
   24eb0:	cmp	r0, #0
   24eb4:	beq	24f84 <__flatcc_error_report@@Base+0xb10>
   24eb8:	subs	r5, r5, #1
   24ebc:	bcs	24ea4 <__flatcc_error_report@@Base+0xa30>
   24ec0:	mov	r1, #0
   24ec4:	str	r1, [sp, #4]
   24ec8:	str	r1, [sp]
   24ecc:	mov	r3, r7
   24ed0:	ldr	r2, [pc, #264]	; 24fe0 <__flatcc_error_report@@Base+0xb6c>
   24ed4:	mov	r0, r4
   24ed8:	bl	24474 <__flatcc_error_report@@Base>
   24edc:	b	24f8c <__flatcc_error_report@@Base+0xb18>
   24ee0:	add	r5, r5, #1
   24ee4:	b	24e1c <__flatcc_error_report@@Base+0x9a8>
   24ee8:	ldr	r1, [pc, #244]	; 24fe4 <__flatcc_error_report@@Base+0xb70>
   24eec:	cmp	r3, r1
   24ef0:	beq	24e84 <__flatcc_error_report@@Base+0xa10>
   24ef4:	ldr	r2, [pc, #236]	; 24fe8 <__flatcc_error_report@@Base+0xb74>
   24ef8:	mov	r1, #0
   24efc:	mov	r0, r4
   24f00:	bl	24614 <__flatcc_error_report@@Base+0x1a0>
   24f04:	b	24ea0 <__flatcc_error_report@@Base+0xa2c>
   24f08:	ldr	r1, [pc, #220]	; 24fec <__flatcc_error_report@@Base+0xb78>
   24f0c:	cmp	r3, r1
   24f10:	beq	24f50 <__flatcc_error_report@@Base+0xadc>
   24f14:	bgt	24f34 <__flatcc_error_report@@Base+0xac0>
   24f18:	sub	r1, r1, #8
   24f1c:	cmp	r3, r1
   24f20:	blt	24ef4 <__flatcc_error_report@@Base+0xa80>
   24f24:	cmn	r3, #976	; 0x3d0
   24f28:	blt	24e84 <__flatcc_error_report@@Base+0xa10>
   24f2c:	add	r1, r1, #7
   24f30:	b	24eec <__flatcc_error_report@@Base+0xa78>
   24f34:	cmp	r3, #9
   24f38:	beq	24f64 <__flatcc_error_report@@Base+0xaf0>
   24f3c:	cmp	r3, #93	; 0x5d
   24f40:	ldreq	r2, [pc, #168]	; 24ff0 <__flatcc_error_report@@Base+0xb7c>
   24f44:	beq	24ef8 <__flatcc_error_report@@Base+0xa84>
   24f48:	cmn	r3, #972	; 0x3cc
   24f4c:	b	24ef0 <__flatcc_error_report@@Base+0xa7c>
   24f50:	cmp	r5, #0
   24f54:	str	r2, [r6]
   24f58:	movne	r3, #9
   24f5c:	moveq	r3, #10
   24f60:	b	24e94 <__flatcc_error_report@@Base+0xa20>
   24f64:	mov	r1, r6
   24f68:	mov	r0, r4
   24f6c:	bl	24660 <__flatcc_error_report@@Base+0x1ec>
   24f70:	cmp	r5, #0
   24f74:	movne	r3, #11
   24f78:	moveq	r3, #12
   24f7c:	strh	r3, [r6, #8]
   24f80:	b	24ea0 <__flatcc_error_report@@Base+0xa2c>
   24f84:	cmp	r5, #0
   24f88:	bne	24ec0 <__flatcc_error_report@@Base+0xa4c>
   24f8c:	mov	r1, #93	; 0x5d
   24f90:	mov	r0, r4
   24f94:	bl	242c8 <__flatcc_fb_default_error_out@@Base+0x234>
   24f98:	subs	r1, r0, #0
   24f9c:	beq	24fd4 <__flatcc_error_report@@Base+0xb60>
   24fa0:	mov	r3, #0
   24fa4:	str	r3, [sp, #4]
   24fa8:	str	r3, [sp]
   24fac:	ldr	r2, [pc, #64]	; 24ff4 <__flatcc_error_report@@Base+0xb80>
   24fb0:	mov	r3, r7
   24fb4:	mov	r0, r4
   24fb8:	bl	24474 <__flatcc_error_report@@Base>
   24fbc:	mov	r5, #93	; 0x5d
   24fc0:	mov	r1, r5
   24fc4:	mov	r0, r4
   24fc8:	bl	242c8 <__flatcc_fb_default_error_out@@Base+0x234>
   24fcc:	cmp	r0, #0
   24fd0:	bne	24fc0 <__flatcc_error_report@@Base+0xb4c>
   24fd4:	add	sp, sp, #8
   24fd8:	pop	{r4, r5, r6, r7, r8, pc}
   24fdc:	andeq	r7, r4, r3, lsl #7
   24fe0:	ldrdeq	r7, [r4], -lr
   24fe4:			; <UNDEFINED> instruction: 0xfffffc25
   24fe8:	andeq	r7, r4, r7, asr #7
   24fec:			; <UNDEFINED> instruction: 0xfffffc32
   24ff0:	andeq	r7, r4, fp, lsr #7
   24ff4:	strdeq	r7, [r4], -pc	; <UNPREDICTABLE>
   24ff8:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24ffc:	mov	r5, r1
   25000:	mov	r8, r2
   25004:	mov	r1, #9
   25008:	ldr	r2, [pc, #560]	; 25240 <__flatcc_error_report@@Base+0xdcc>
   2500c:	mov	r4, r0
   25010:	bl	24630 <__flatcc_error_report@@Base+0x1bc>
   25014:	cmp	r0, #0
   25018:	beq	251a4 <__flatcc_error_report@@Base+0xd30>
   2501c:	str	r0, [r5, #4]
   25020:	mov	r0, r4
   25024:	bl	24cec <__flatcc_error_report@@Base+0x878>
   25028:	ldr	r2, [pc, #532]	; 25244 <__flatcc_error_report@@Base+0xdd0>
   2502c:	mov	r1, #123	; 0x7b
   25030:	str	r0, [r5, #28]
   25034:	mov	r0, r4
   25038:	bl	24630 <__flatcc_error_report@@Base+0x1bc>
   2503c:	cmp	r0, #0
   25040:	beq	251a4 <__flatcc_error_report@@Base+0xd30>
   25044:	ldr	r7, [r4, #40]	; 0x28
   25048:	ldr	r9, [pc, #504]	; 25248 <__flatcc_error_report@@Base+0xdd4>
   2504c:	ldr	sl, [pc, #504]	; 2524c <__flatcc_error_report@@Base+0xdd8>
   25050:	add	r5, r5, #20
   25054:	ldr	r3, [r4, #40]	; 0x28
   25058:	ldr	r1, [r3, #16]
   2505c:	cmp	r1, #125	; 0x7d
   25060:	bne	250b4 <__flatcc_error_report@@Base+0xc40>
   25064:	mov	r0, r4
   25068:	bl	242c8 <__flatcc_fb_default_error_out@@Base+0x234>
   2506c:	adds	r3, r7, #0
   25070:	movne	r3, #1
   25074:	cmp	r0, #0
   25078:	movne	r3, #0
   2507c:	cmp	r3, #0
   25080:	beq	250a4 <__flatcc_error_report@@Base+0xc30>
   25084:	mov	r3, #0
   25088:	str	r3, [sp, #4]
   2508c:	str	r3, [sp]
   25090:	ldr	r2, [pc, #440]	; 25250 <__flatcc_error_report@@Base+0xddc>
   25094:	mov	r3, r7
   25098:	ldr	r1, [r4, #40]	; 0x28
   2509c:	mov	r0, r4
   250a0:	bl	24474 <__flatcc_error_report@@Base>
   250a4:	mov	r0, r5
   250a8:	add	sp, sp, #12
   250ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   250b0:	b	24068 <__flatcc_fb_read_file@@Base+0xe8>
   250b4:	cmp	r8, r9
   250b8:	mov	r1, r5
   250bc:	mov	r0, r4
   250c0:	bne	251b8 <__flatcc_error_report@@Base+0xd44>
   250c4:	bl	2437c <__flatcc_fb_default_error_out@@Base+0x2e8>
   250c8:	ldr	r2, [pc, #388]	; 25254 <__flatcc_error_report@@Base+0xde0>
   250cc:	mov	r1, #9
   250d0:	mov	r6, r0
   250d4:	mov	r0, r4
   250d8:	bl	24630 <__flatcc_error_report@@Base+0x1bc>
   250dc:	cmp	r0, #0
   250e0:	beq	2516c <__flatcc_error_report@@Base+0xcf8>
   250e4:	str	r0, [r6, #4]
   250e8:	ldr	r2, [pc, #360]	; 25258 <__flatcc_error_report@@Base+0xde4>
   250ec:	mov	r1, #40	; 0x28
   250f0:	mov	r0, r4
   250f4:	bl	24630 <__flatcc_error_report@@Base+0x1bc>
   250f8:	cmp	r0, #0
   250fc:	beq	2516c <__flatcc_error_report@@Base+0xcf8>
   25100:	add	r1, r6, #32
   25104:	mov	r0, r4
   25108:	bl	24dfc <__flatcc_error_report@@Base+0x988>
   2510c:	ldr	r2, [pc, #328]	; 2525c <__flatcc_error_report@@Base+0xde8>
   25110:	mov	r1, #41	; 0x29
   25114:	mov	r0, r4
   25118:	bl	24630 <__flatcc_error_report@@Base+0x1bc>
   2511c:	cmp	r0, #0
   25120:	beq	2516c <__flatcc_error_report@@Base+0xcf8>
   25124:	ldr	r2, [pc, #308]	; 25260 <__flatcc_error_report@@Base+0xdec>
   25128:	mov	r1, #58	; 0x3a
   2512c:	mov	r0, r4
   25130:	bl	24630 <__flatcc_error_report@@Base+0x1bc>
   25134:	cmp	r0, #0
   25138:	beq	2516c <__flatcc_error_report@@Base+0xcf8>
   2513c:	add	r1, r6, #16
   25140:	mov	r0, r4
   25144:	bl	24dfc <__flatcc_error_report@@Base+0x988>
   25148:	mov	r1, #61	; 0x3d
   2514c:	mov	r0, r4
   25150:	bl	242c8 <__flatcc_fb_default_error_out@@Base+0x234>
   25154:	subs	fp, r0, #0
   25158:	beq	25178 <__flatcc_error_report@@Base+0xd04>
   2515c:	ldr	r2, [pc, #256]	; 25264 <__flatcc_error_report@@Base+0xdf0>
   25160:	mov	r1, fp
   25164:	mov	r0, r4
   25168:	bl	24614 <__flatcc_error_report@@Base+0x1a0>
   2516c:	mov	r0, r4
   25170:	bl	242ec <__flatcc_fb_default_error_out@@Base+0x258>
   25174:	b	25198 <__flatcc_error_report@@Base+0xd24>
   25178:	mov	r0, r4
   2517c:	bl	24cec <__flatcc_error_report@@Base+0x878>
   25180:	ldr	r2, [pc, #224]	; 25268 <__flatcc_error_report@@Base+0xdf4>
   25184:	mov	r3, fp
   25188:	str	r0, [r6, #64]	; 0x40
   2518c:	mov	r1, #59	; 0x3b
   25190:	mov	r0, r4
   25194:	bl	24ca4 <__flatcc_error_report@@Base+0x830>
   25198:	ldr	r3, [r4, #108]	; 0x6c
   2519c:	cmp	r3, #9
   251a0:	ble	25054 <__flatcc_error_report@@Base+0xbe0>
   251a4:	mov	r1, #125	; 0x7d
   251a8:	mov	r0, r4
   251ac:	add	sp, sp, #12
   251b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   251b4:	b	24338 <__flatcc_fb_default_error_out@@Base+0x2a4>
   251b8:	bl	2437c <__flatcc_fb_default_error_out@@Base+0x2e8>
   251bc:	mov	r2, sl
   251c0:	mov	r1, #9
   251c4:	mov	r6, r0
   251c8:	mov	r0, r4
   251cc:	bl	24630 <__flatcc_error_report@@Base+0x1bc>
   251d0:	cmp	r0, #0
   251d4:	beq	2516c <__flatcc_error_report@@Base+0xcf8>
   251d8:	str	r0, [r6, #4]
   251dc:	ldr	r2, [pc, #136]	; 2526c <__flatcc_error_report@@Base+0xdf8>
   251e0:	mov	r1, #58	; 0x3a
   251e4:	mov	r0, r4
   251e8:	bl	24630 <__flatcc_error_report@@Base+0x1bc>
   251ec:	cmp	r0, #0
   251f0:	beq	2516c <__flatcc_error_report@@Base+0xcf8>
   251f4:	add	r1, r6, #16
   251f8:	mov	r0, r4
   251fc:	bl	24dfc <__flatcc_error_report@@Base+0x988>
   25200:	mov	r1, #61	; 0x3d
   25204:	mov	r0, r4
   25208:	bl	242c8 <__flatcc_fb_default_error_out@@Base+0x234>
   2520c:	cmp	r0, #0
   25210:	beq	25228 <__flatcc_error_report@@Base+0xdb4>
   25214:	ldr	r3, [pc, #84]	; 25270 <__flatcc_error_report@@Base+0xdfc>
   25218:	mov	r2, #2
   2521c:	add	r1, r6, #48	; 0x30
   25220:	mov	r0, r4
   25224:	bl	24848 <__flatcc_error_report@@Base+0x3d4>
   25228:	mov	r0, r4
   2522c:	bl	24cec <__flatcc_error_report@@Base+0x878>
   25230:	mov	r3, #0
   25234:	ldr	r2, [pc, #56]	; 25274 <__flatcc_error_report@@Base+0xe00>
   25238:	str	r0, [r6, #64]	; 0x40
   2523c:	b	2518c <__flatcc_error_report@@Base+0xd18>
   25240:	andeq	r7, r4, r6, lsl r4
   25244:	andeq	r7, r4, r9, lsr r4
   25248:			; <UNDEFINED> instruction: 0xfffffc39
   2524c:	andeq	r7, r4, r5, lsr r5
   25250:			; <UNDEFINED> instruction: 0x000475bd
   25254:	andeq	r7, r4, r2, asr r4
   25258:	andeq	r7, r4, sp, ror #8
   2525c:	muleq	r4, r2, r4
   25260:			; <UNDEFINED> instruction: 0x000474b9
   25264:	andeq	r7, r4, ip, ror #9
   25268:	andeq	r7, r4, r2, lsl r5
   2526c:	andeq	r7, r4, pc, asr #10
   25270:	andeq	r7, r4, r8, ror r5
   25274:	muleq	r4, fp, r5

00025278 <error_ref_sym@@Base>:
   25278:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2527c:	sub	sp, sp, #76	; 0x4c
   25280:	mov	r7, r3
   25284:	mov	sl, r0
   25288:	mov	r9, r1
   2528c:	mov	fp, r2
   25290:	mov	r8, r1
   25294:	mov	r4, #0
   25298:	mov	r5, #50	; 0x32
   2529c:	add	r3, sp, #20
   252a0:	cmp	r8, #0
   252a4:	cmpne	r5, #0
   252a8:	movgt	r1, #1
   252ac:	movle	r1, #0
   252b0:	bgt	25304 <error_ref_sym@@Base+0x8c>
   252b4:	cmp	r4, #0
   252b8:	add	r2, sp, #72	; 0x48
   252bc:	add	r2, r2, r4
   252c0:	subgt	r4, r4, #1
   252c4:	cmp	r5, #0
   252c8:	strb	r1, [r2, #-52]	; 0xffffffcc
   252cc:	ldrle	r2, [pc, #128]	; 25354 <error_ref_sym@@Base+0xdc>
   252d0:	movle	r4, #50	; 0x32
   252d4:	ldr	r1, [r9, #4]
   252d8:	ldrle	r2, [r2]
   252dc:	mov	r0, sl
   252e0:	strle	r2, [sp, #67]	; 0x43
   252e4:	cmp	r7, #0
   252e8:	mov	r2, fp
   252ec:	ldrne	r7, [r7, #4]
   252f0:	stm	sp, {r3, r4}
   252f4:	mov	r3, r7
   252f8:	bl	24474 <__flatcc_error_report@@Base>
   252fc:	add	sp, sp, #76	; 0x4c
   25300:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   25304:	ldr	r1, [r8, #4]
   25308:	add	r0, r3, r4
   2530c:	str	r3, [sp, #12]
   25310:	ldr	r6, [r1, #4]
   25314:	ldr	r1, [r1]
   25318:	cmp	r5, r6
   2531c:	movlt	r6, r5
   25320:	mov	r2, r6
   25324:	bl	13f20 <memcpy@plt>
   25328:	add	r4, r4, r6
   2532c:	add	r3, sp, #72	; 0x48
   25330:	add	r2, r3, r4
   25334:	sub	r5, r5, r6
   25338:	mov	r3, #46	; 0x2e
   2533c:	strb	r3, [r2, #-52]	; 0xffffffcc
   25340:	sub	r5, r5, #1
   25344:	add	r4, r4, #1
   25348:	ldr	r8, [r8]
   2534c:	ldr	r3, [sp, #12]
   25350:	b	252a0 <error_ref_sym@@Base+0x28>
   25354:	andeq	r6, r4, r8, ror pc

00025358 <__flatcc_fb_init_parser@@Base>:
   25358:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2535c:	mov	r6, r1
   25360:	mov	r5, r2
   25364:	mov	r1, #0
   25368:	mov	r2, #560	; 0x230
   2536c:	mov	r4, r0
   25370:	mov	r8, r3
   25374:	ldr	r7, [sp, #52]	; 0x34
   25378:	bl	13fec <memset@plt>
   2537c:	cmp	r8, #0
   25380:	strne	r8, [r4, #8]
   25384:	ldrne	r3, [sp, #48]	; 0x30
   25388:	ldreq	r3, [pc, #412]	; 2552c <__flatcc_fb_init_parser@@Base+0x1d4>
   2538c:	add	r0, r4, #128	; 0x80
   25390:	strne	r3, [r4, #12]
   25394:	streq	r3, [r4, #8]
   25398:	cmp	r6, #0
   2539c:	beq	253f0 <__flatcc_fb_init_parser@@Base+0x98>
   253a0:	mov	r2, #224	; 0xe0
   253a4:	mov	r1, r6
   253a8:	bl	13f20 <memcpy@plt>
   253ac:	ldr	r2, [r4, #192]	; 0xc0
   253b0:	cmp	r7, #0
   253b4:	addeq	r7, r4, #416	; 0x1a0
   253b8:	cmp	r2, #8
   253bc:	str	r7, [r4, #412]	; 0x19c
   253c0:	bhi	253d4 <__flatcc_fb_init_parser@@Base+0x7c>
   253c4:	mov	r3, #1
   253c8:	lsl	r2, r3, r2
   253cc:	tst	r2, #276	; 0x114
   253d0:	bne	253f8 <__flatcc_fb_init_parser@@Base+0xa0>
   253d4:	ldr	r2, [pc, #340]	; 25530 <__flatcc_fb_init_parser@@Base+0x1d8>
   253d8:	mov	r0, r4
   253dc:	mov	r1, #0
   253e0:	bl	24614 <__flatcc_error_report@@Base+0x1a0>
   253e4:	mvn	r0, #0
   253e8:	add	sp, sp, #12
   253ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   253f0:	bl	14388 <flatcc_init_options@@Base>
   253f4:	b	253ac <__flatcc_fb_init_parser@@Base+0x54>
   253f8:	ldr	r2, [r4, #196]	; 0xc4
   253fc:	cmp	r2, #8
   25400:	bhi	25410 <__flatcc_fb_init_parser@@Base+0xb8>
   25404:	lsl	r3, r3, r2
   25408:	tst	r3, #276	; 0x114
   2540c:	bne	25418 <__flatcc_fb_init_parser@@Base+0xc0>
   25410:	ldr	r2, [pc, #284]	; 25534 <__flatcc_fb_init_parser@@Base+0x1dc>
   25414:	b	253d8 <__flatcc_fb_init_parser@@Base+0x80>
   25418:	ldr	r3, [pc, #280]	; 25538 <__flatcc_fb_init_parser@@Base+0x1e0>
   2541c:	cmp	r5, #0
   25420:	moveq	r5, r3
   25424:	mov	r0, r5
   25428:	bl	13fc8 <strlen@plt>
   2542c:	ldr	r2, [r6, #96]	; 0x60
   25430:	mov	r1, r0
   25434:	mov	sl, r0
   25438:	mov	r0, r5
   2543c:	bl	23f28 <__flatcc_fb_create_basename@@Base>
   25440:	cmp	r0, #0
   25444:	mov	r7, r0
   25448:	str	r0, [r4, #512]	; 0x200
   2544c:	bne	25454 <__flatcc_fb_init_parser@@Base+0xfc>
   25450:	bl	140c4 <__assert_fail@plt+0x30>
   25454:	bl	13fc8 <strlen@plt>
   25458:	mov	r9, r0
   2545c:	mov	r1, r0
   25460:	mov	r0, r7
   25464:	bl	23b28 <__flatcc_fb_copy_path_n@@Base>
   25468:	subs	r7, r0, #0
   2546c:	movne	r8, r7
   25470:	addne	r3, r7, r9
   25474:	beq	25450 <__flatcc_fb_init_parser@@Base+0xf8>
   25478:	cmp	r8, r3
   2547c:	beq	2548c <__flatcc_fb_init_parser@@Base+0x134>
   25480:	ldrb	fp, [r8], #1
   25484:	cmp	fp, #0
   25488:	bne	25510 <__flatcc_fb_init_parser@@Base+0x1b8>
   2548c:	str	r7, [r4, #516]	; 0x204
   25490:	str	r7, [r4, #496]	; 0x1f0
   25494:	str	r9, [r4, #500]	; 0x1f4
   25498:	ldr	r2, [pc, #156]	; 2553c <__flatcc_fb_init_parser@@Base+0x1e4>
   2549c:	mov	r1, sl
   254a0:	mov	r0, r5
   254a4:	bl	23f28 <__flatcc_fb_create_basename@@Base>
   254a8:	cmp	r0, #0
   254ac:	str	r0, [r4, #520]	; 0x208
   254b0:	beq	25450 <__flatcc_fb_init_parser@@Base+0xf8>
   254b4:	ldr	r0, [r6, #192]	; 0xc0
   254b8:	cmp	r0, #0
   254bc:	beq	254cc <__flatcc_fb_init_parser@@Base+0x174>
   254c0:	str	r0, [r4, #476]	; 0x1dc
   254c4:	bl	13fc8 <strlen@plt>
   254c8:	str	r0, [r4, #480]	; 0x1e0
   254cc:	mov	r1, #0
   254d0:	mov	r0, r4
   254d4:	bl	241ec <__flatcc_fb_default_error_out@@Base+0x158>
   254d8:	mov	r2, #0
   254dc:	mov	r1, r2
   254e0:	mov	r5, r0
   254e4:	str	r0, [r4, #544]	; 0x220
   254e8:	ldr	r0, [r4, #412]	; 0x19c
   254ec:	bl	235d4 <fb_scope_table_find@@Base>
   254f0:	cmp	r5, r0
   254f4:	moveq	r0, #0
   254f8:	beq	253e8 <__flatcc_fb_init_parser@@Base+0x90>
   254fc:	ldr	r3, [pc, #60]	; 25540 <__flatcc_fb_init_parser@@Base+0x1e8>
   25500:	ldr	r2, [pc, #60]	; 25544 <__flatcc_fb_init_parser@@Base+0x1ec>
   25504:	ldr	r1, [pc, #60]	; 25548 <__flatcc_fb_init_parser@@Base+0x1f0>
   25508:	ldr	r0, [pc, #60]	; 2554c <__flatcc_fb_init_parser@@Base+0x1f4>
   2550c:	bl	14094 <__assert_fail@plt>
   25510:	str	r3, [sp, #4]
   25514:	bl	13fa4 <__ctype_toupper_loc@plt>
   25518:	ldr	r3, [sp, #4]
   2551c:	ldr	r2, [r0]
   25520:	ldr	r2, [r2, fp, lsl #2]
   25524:	strb	r2, [r8, #-1]
   25528:	b	25478 <__flatcc_fb_init_parser@@Base+0x120>
   2552c:	muleq	r2, r4, r0
   25530:	andeq	r7, r4, fp, ror #11
   25534:	andeq	r7, r4, r3, lsr #12
   25538:	andeq	r7, r4, r6, ror #11
   2553c:	andeq	r1, r3, r1, lsr #28
   25540:	andeq	r6, r4, sp, ror pc
   25544:	andeq	r0, r0, r3, lsr r5
   25548:	muleq	r4, r5, r0
   2554c:	andeq	r7, r4, ip, asr r6

00025550 <__flatcc_fb_parse@@Base>:
   25550:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   25554:	mov	r5, r1
   25558:	str	r1, [r0, #60]	; 0x3c
   2555c:	mov	r1, #1
   25560:	str	r1, [r0, #64]	; 0x40
   25564:	mov	r1, #9
   25568:	str	r1, [r0, #84]	; 0x54
   2556c:	ldr	r1, [pc, #3996]	; 26510 <__flatcc_fb_parse@@Base+0xfc0>
   25570:	mov	r4, r0
   25574:	str	r1, [r0, #68]	; 0x44
   25578:	mov	r1, #4
   2557c:	str	r1, [r0, #72]	; 0x48
   25580:	mov	r1, #0
   25584:	str	r1, [r0, #80]	; 0x50
   25588:	str	r1, [r0, #76]	; 0x4c
   2558c:	ldr	r0, [pc, #3968]	; 26514 <__flatcc_fb_parse@@Base+0xfc4>
   25590:	ldr	r8, [pc, #3968]	; 26518 <__flatcc_fb_parse@@Base+0xfc8>
   25594:	str	r0, [r4, #104]	; 0x68
   25598:	ldr	r0, [pc, #3964]	; 2651c <__flatcc_fb_parse@@Base+0xfcc>
   2559c:	sub	sp, sp, #28
   255a0:	add	r7, r5, r2
   255a4:	str	r0, [r4, #88]	; 0x58
   255a8:	cmp	r3, r1
   255ac:	mov	r0, #5
   255b0:	str	r0, [r4, #92]	; 0x5c
   255b4:	str	r1, [r4, #100]	; 0x64
   255b8:	str	r1, [r4, #96]	; 0x60
   255bc:	strne	r5, [r4, #16]
   255c0:	ldr	r9, [pc, #3928]	; 26520 <__flatcc_fb_parse@@Base+0xfd0>
   255c4:	cmp	r7, r5
   255c8:	beq	25878 <__flatcc_fb_parse@@Base+0x328>
   255cc:	ldrb	r1, [r5]
   255d0:	cmp	r1, #57	; 0x39
   255d4:	bhi	25af4 <__flatcc_fb_parse@@Base+0x5a4>
   255d8:	cmp	r1, #49	; 0x31
   255dc:	bcs	26260 <__flatcc_fb_parse@@Base+0xd10>
   255e0:	cmp	r1, #38	; 0x26
   255e4:	beq	25e44 <__flatcc_fb_parse@@Base+0x8f4>
   255e8:	bhi	25a48 <__flatcc_fb_parse@@Base+0x4f8>
   255ec:	cmp	r1, #13
   255f0:	beq	25cac <__flatcc_fb_parse@@Base+0x75c>
   255f4:	bhi	259d0 <__flatcc_fb_parse@@Base+0x480>
   255f8:	cmp	r1, #9
   255fc:	beq	259e4 <__flatcc_fb_parse@@Base+0x494>
   25600:	cmp	r1, #10
   25604:	beq	25c80 <__flatcc_fb_parse@@Base+0x730>
   25608:	cmp	r1, #0
   2560c:	beq	25878 <__flatcc_fb_parse@@Base+0x328>
   25610:	add	r6, r5, #1
   25614:	cmp	r1, #127	; 0x7f
   25618:	cmpne	r1, #31
   2561c:	mov	r3, r6
   25620:	mov	r2, r5
   25624:	bhi	25638 <__flatcc_fb_parse@@Base+0xe8>
   25628:	cmp	r1, #32
   2562c:	cmpne	r1, #9
   25630:	movne	r1, #5
   25634:	bne	25dcc <__flatcc_fb_parse@@Base+0x87c>
   25638:	mov	r1, #8
   2563c:	b	25dcc <__flatcc_fb_parse@@Base+0x87c>
   25640:	mov	r9, r6
   25644:	b	25720 <__flatcc_fb_parse@@Base+0x1d0>
   25648:	mov	r6, r7
   2564c:	b	25748 <__flatcc_fb_parse@@Base+0x1f8>
   25650:	cmp	r7, r6
   25654:	cmpne	r3, #0
   25658:	bne	25678 <__flatcc_fb_parse@@Base+0x128>
   2565c:	mov	r3, r6
   25660:	mov	r2, r6
   25664:	mov	r1, #23
   25668:	mov	r0, r4
   2566c:	bl	240b4 <__flatcc_fb_default_error_out@@Base+0x20>
   25670:	mov	r5, r6
   25674:	b	255c0 <__flatcc_fb_parse@@Base+0x70>
   25678:	cmp	r3, #92	; 0x5c
   2567c:	bne	257b0 <__flatcc_fb_parse@@Base+0x260>
   25680:	add	r5, r9, #2
   25684:	mov	r3, r5
   25688:	mov	r2, r6
   2568c:	mov	r1, #21
   25690:	mov	r0, r4
   25694:	bl	240b4 <__flatcc_fb_default_error_out@@Base+0x20>
   25698:	cmp	r7, r5
   2569c:	beq	256bc <__flatcc_fb_parse@@Base+0x16c>
   256a0:	ldrb	r3, [r6, #1]
   256a4:	cmp	r3, #0
   256a8:	bne	256c4 <__flatcc_fb_parse@@Base+0x174>
   256ac:	mov	r3, r5
   256b0:	mov	r2, r5
   256b4:	mov	r1, #23
   256b8:	b	25780 <__flatcc_fb_parse@@Base+0x230>
   256bc:	mov	r5, r7
   256c0:	b	256ac <__flatcc_fb_parse@@Base+0x15c>
   256c4:	cmp	r3, #34	; 0x22
   256c8:	cmpne	r3, #92	; 0x5c
   256cc:	addeq	r9, r6, #2
   256d0:	beq	2571c <__flatcc_fb_parse@@Base+0x1cc>
   256d4:	cmp	r3, #10
   256d8:	bne	2578c <__flatcc_fb_parse@@Base+0x23c>
   256dc:	add	r9, r6, #2
   256e0:	cmp	r7, r9
   256e4:	beq	256f4 <__flatcc_fb_parse@@Base+0x1a4>
   256e8:	ldrb	r3, [r6, #2]
   256ec:	cmp	r3, #13
   256f0:	addeq	r9, r6, #3
   256f4:	ldr	r3, [r4, #64]	; 0x40
   256f8:	mov	r2, r5
   256fc:	add	r3, r3, #1
   25700:	str	r3, [r4, #64]	; 0x40
   25704:	mov	r1, #18
   25708:	mov	r3, r9
   2570c:	str	r9, [r4, #60]	; 0x3c
   25710:	mov	r0, r4
   25714:	bl	240b4 <__flatcc_fb_default_error_out@@Base+0x20>
   25718:	mov	r5, r9
   2571c:	sub	r9, r9, #1
   25720:	add	r6, r9, #1
   25724:	cmp	r7, r6
   25728:	beq	25648 <__flatcc_fb_parse@@Base+0xf8>
   2572c:	ldrb	r3, [r9, #1]
   25730:	cmp	r3, #92	; 0x5c
   25734:	cmpne	r3, #34	; 0x22
   25738:	beq	25748 <__flatcc_fb_parse@@Base+0x1f8>
   2573c:	cmp	r3, #127	; 0x7f
   25740:	cmpne	r3, #31
   25744:	bhi	25640 <__flatcc_fb_parse@@Base+0xf0>
   25748:	cmp	r6, r5
   2574c:	beq	25764 <__flatcc_fb_parse@@Base+0x214>
   25750:	mov	r3, r6
   25754:	mov	r2, r5
   25758:	mov	r1, fp
   2575c:	mov	r0, r4
   25760:	bl	240b4 <__flatcc_fb_default_error_out@@Base+0x20>
   25764:	ldrb	r3, [r6]
   25768:	cmp	r3, #34	; 0x22
   2576c:	bne	25650 <__flatcc_fb_parse@@Base+0x100>
   25770:	add	r5, r9, #2
   25774:	mov	r3, r5
   25778:	mov	r2, r6
   2577c:	mov	r1, #22
   25780:	mov	r0, r4
   25784:	bl	240b4 <__flatcc_fb_default_error_out@@Base+0x20>
   25788:	b	255c0 <__flatcc_fb_parse@@Base+0x70>
   2578c:	cmp	r3, #13
   25790:	movne	r6, r5
   25794:	bne	257b0 <__flatcc_fb_parse@@Base+0x260>
   25798:	add	r9, r6, #2
   2579c:	cmp	r7, r9
   257a0:	beq	256f4 <__flatcc_fb_parse@@Base+0x1a4>
   257a4:	ldrb	r3, [r6, #2]
   257a8:	cmp	r3, #10
   257ac:	b	256f0 <__flatcc_fb_parse@@Base+0x1a0>
   257b0:	ldrb	r3, [r6]
   257b4:	cmp	r3, #13
   257b8:	cmpne	r3, #10
   257bc:	beq	2565c <__flatcc_fb_parse@@Base+0x10c>
   257c0:	add	r9, r6, #1
   257c4:	mov	r3, r9
   257c8:	mov	r2, r6
   257cc:	mov	r1, sl
   257d0:	b	25710 <__flatcc_fb_parse@@Base+0x1c0>
   257d4:	mov	r9, r5
   257d8:	b	25820 <__flatcc_fb_parse@@Base+0x2d0>
   257dc:	ldrb	r3, [r5]
   257e0:	cmp	r3, #0
   257e4:	beq	2585c <__flatcc_fb_parse@@Base+0x30c>
   257e8:	cmp	r3, #13
   257ec:	cmpne	r3, #10
   257f0:	moveq	r3, #0
   257f4:	streq	r3, [r4, #32]
   257f8:	beq	255c0 <__flatcc_fb_parse@@Base+0x70>
   257fc:	cmp	r3, #9
   25800:	cmpne	r3, #32
   25804:	add	r6, r9, #2
   25808:	bne	25888 <__flatcc_fb_parse@@Base+0x338>
   2580c:	mov	r2, r6
   25810:	mov	r1, r5
   25814:	mov	r0, r4
   25818:	bl	24164 <__flatcc_fb_default_error_out@@Base+0xd0>
   2581c:	sub	r9, r6, #1
   25820:	add	r5, r9, #1
   25824:	cmp	r7, r5
   25828:	beq	27488 <__flatcc_fb_parse@@Base+0x1f38>
   2582c:	ldrb	r3, [r9, #1]
   25830:	cmp	r3, #127	; 0x7f
   25834:	cmpne	r3, #31
   25838:	bhi	257d4 <__flatcc_fb_parse@@Base+0x284>
   2583c:	cmp	r6, r5
   25840:	beq	257dc <__flatcc_fb_parse@@Base+0x28c>
   25844:	mov	r2, r5
   25848:	mov	r1, r6
   2584c:	mov	r0, r4
   25850:	bl	24164 <__flatcc_fb_default_error_out@@Base+0xd0>
   25854:	cmp	r5, r7
   25858:	bne	257dc <__flatcc_fb_parse@@Base+0x28c>
   2585c:	mov	r3, r5
   25860:	mov	r2, r5
   25864:	mov	r1, #27
   25868:	mov	r0, r4
   2586c:	bl	240b4 <__flatcc_fb_default_error_out@@Base+0x20>
   25870:	cmp	r7, r5
   25874:	bne	26ac8 <__flatcc_fb_parse@@Base+0x1578>
   25878:	mov	r3, r5
   2587c:	mov	r2, r5
   25880:	mov	r1, #0
   25884:	b	26adc <__flatcc_fb_parse@@Base+0x158c>
   25888:	mov	r3, r6
   2588c:	mov	r2, r5
   25890:	mov	r1, sl
   25894:	mov	r0, r4
   25898:	bl	240b4 <__flatcc_fb_default_error_out@@Base+0x20>
   2589c:	b	2581c <__flatcc_fb_parse@@Base+0x2cc>
   258a0:	cmp	r2, #47	; 0x2f
   258a4:	bne	258b4 <__flatcc_fb_parse@@Base+0x364>
   258a8:	ldrb	r2, [r3, #-1]
   258ac:	cmp	r2, #42	; 0x2a
   258b0:	beq	258bc <__flatcc_fb_parse@@Base+0x36c>
   258b4:	mov	r5, r3
   258b8:	b	2590c <__flatcc_fb_parse@@Base+0x3bc>
   258bc:	cmp	r6, r5
   258c0:	bne	25938 <__flatcc_fb_parse@@Base+0x3e8>
   258c4:	cmp	r7, r5
   258c8:	beq	274a0 <__flatcc_fb_parse@@Base+0x1f50>
   258cc:	ldrb	r3, [r5]
   258d0:	cmp	r3, #0
   258d4:	beq	2585c <__flatcc_fb_parse@@Base+0x30c>
   258d8:	cmp	r3, #10
   258dc:	bne	25954 <__flatcc_fb_parse@@Base+0x404>
   258e0:	add	r6, r5, #1
   258e4:	cmp	r7, r6
   258e8:	beq	258f8 <__flatcc_fb_parse@@Base+0x3a8>
   258ec:	ldrb	r3, [r5, #1]
   258f0:	cmp	r3, #13
   258f4:	addeq	r6, r5, #2
   258f8:	ldr	r3, [r4, #64]	; 0x40
   258fc:	str	r6, [r4, #60]	; 0x3c
   25900:	add	r3, r3, #1
   25904:	str	r3, [r4, #64]	; 0x40
   25908:	sub	r5, r6, #1
   2590c:	add	r3, r5, #1
   25910:	cmp	r7, r3
   25914:	beq	27498 <__flatcc_fb_parse@@Base+0x1f48>
   25918:	ldrb	r2, [r5, #1]
   2591c:	cmp	r2, #127	; 0x7f
   25920:	cmpne	r2, #31
   25924:	bhi	258a0 <__flatcc_fb_parse@@Base+0x350>
   25928:	cmp	r6, r3
   2592c:	moveq	r5, r6
   25930:	beq	258cc <__flatcc_fb_parse@@Base+0x37c>
   25934:	mov	r5, r3
   25938:	mov	r2, r5
   2593c:	mov	r1, r6
   25940:	mov	r0, r4
   25944:	bl	24164 <__flatcc_fb_default_error_out@@Base+0xd0>
   25948:	b	258c4 <__flatcc_fb_parse@@Base+0x374>
   2594c:	mov	r5, r7
   25950:	b	25938 <__flatcc_fb_parse@@Base+0x3e8>
   25954:	cmp	r3, #13
   25958:	bne	25974 <__flatcc_fb_parse@@Base+0x424>
   2595c:	add	r6, r5, #1
   25960:	cmp	r7, r6
   25964:	beq	258f8 <__flatcc_fb_parse@@Base+0x3a8>
   25968:	ldrb	r3, [r5, #1]
   2596c:	cmp	r3, #10
   25970:	b	258f4 <__flatcc_fb_parse@@Base+0x3a4>
   25974:	cmp	r3, #127	; 0x7f
   25978:	cmpne	r3, #31
   2597c:	movls	r2, #1
   25980:	movhi	r2, #0
   25984:	bhi	259c4 <__flatcc_fb_parse@@Base+0x474>
   25988:	cmp	r3, #9
   2598c:	cmpne	r3, #32
   25990:	add	r6, r5, #1
   25994:	bne	259ac <__flatcc_fb_parse@@Base+0x45c>
   25998:	mov	r2, r6
   2599c:	mov	r1, r5
   259a0:	mov	r0, r4
   259a4:	bl	24164 <__flatcc_fb_default_error_out@@Base+0xd0>
   259a8:	b	25908 <__flatcc_fb_parse@@Base+0x3b8>
   259ac:	mov	r3, r6
   259b0:	mov	r2, r5
   259b4:	mov	r1, r9
   259b8:	mov	r0, r4
   259bc:	bl	240b4 <__flatcc_fb_default_error_out@@Base+0x20>
   259c0:	b	25908 <__flatcc_fb_parse@@Base+0x3b8>
   259c4:	add	r5, r5, #2
   259c8:	str	r2, [r4, #32]
   259cc:	b	255c0 <__flatcc_fb_parse@@Base+0x70>
   259d0:	cmp	r1, #33	; 0x21
   259d4:	beq	25a1c <__flatcc_fb_parse@@Base+0x4cc>
   259d8:	bhi	25a0c <__flatcc_fb_parse@@Base+0x4bc>
   259dc:	cmp	r1, #32
   259e0:	bne	25610 <__flatcc_fb_parse@@Base+0xc0>
   259e4:	add	r5, r5, #1
   259e8:	cmp	r5, r7
   259ec:	mov	r6, r5
   259f0:	beq	25a04 <__flatcc_fb_parse@@Base+0x4b4>
   259f4:	ldrb	r3, [r5], #1
   259f8:	cmp	r3, #9
   259fc:	cmpne	r3, #32
   25a00:	beq	259e8 <__flatcc_fb_parse@@Base+0x498>
   25a04:	mov	r5, r6
   25a08:	b	255c4 <__flatcc_fb_parse@@Base+0x74>
   25a0c:	cmp	r1, #34	; 0x22
   25a10:	beq	25cc4 <__flatcc_fb_parse@@Base+0x774>
   25a14:	cmp	r1, #37	; 0x25
   25a18:	bne	25610 <__flatcc_fb_parse@@Base+0xc0>
   25a1c:	add	r6, r5, #1
   25a20:	cmp	r7, r6
   25a24:	beq	25a70 <__flatcc_fb_parse@@Base+0x520>
   25a28:	ldrb	r3, [r5, #1]
   25a2c:	cmp	r3, #61	; 0x3d
   25a30:	bne	25a70 <__flatcc_fb_parse@@Base+0x520>
   25a34:	add	r6, r5, #2
   25a38:	mov	r3, r6
   25a3c:	mov	r2, r5
   25a40:	orr	r1, r1, #15616	; 0x3d00
   25a44:	b	25dcc <__flatcc_fb_parse@@Base+0x87c>
   25a48:	cmp	r1, #44	; 0x2c
   25a4c:	beq	25a6c <__flatcc_fb_parse@@Base+0x51c>
   25a50:	add	r3, r5, #1
   25a54:	bhi	25a7c <__flatcc_fb_parse@@Base+0x52c>
   25a58:	cmp	r1, #42	; 0x2a
   25a5c:	beq	25f98 <__flatcc_fb_parse@@Base+0xa48>
   25a60:	bhi	2619c <__flatcc_fb_parse@@Base+0xc4c>
   25a64:	cmp	r1, #40	; 0x28
   25a68:	bcc	25610 <__flatcc_fb_parse@@Base+0xc0>
   25a6c:	add	r6, r5, #1
   25a70:	mov	r3, r6
   25a74:	mov	r2, r5
   25a78:	b	25dcc <__flatcc_fb_parse@@Base+0x87c>
   25a7c:	cmp	r1, #46	; 0x2e
   25a80:	beq	261f0 <__flatcc_fb_parse@@Base+0xca0>
   25a84:	bcc	2612c <__flatcc_fb_parse@@Base+0xbdc>
   25a88:	cmp	r1, #47	; 0x2f
   25a8c:	beq	25cec <__flatcc_fb_parse@@Base+0x79c>
   25a90:	cmp	r1, #48	; 0x30
   25a94:	bne	25610 <__flatcc_fb_parse@@Base+0xc0>
   25a98:	cmp	r7, r3
   25a9c:	beq	26260 <__flatcc_fb_parse@@Base+0xd10>
   25aa0:	ldrb	r3, [r5, #1]
   25aa4:	cmp	r3, #88	; 0x58
   25aa8:	beq	25ab4 <__flatcc_fb_parse@@Base+0x564>
   25aac:	cmp	r3, #120	; 0x78
   25ab0:	bne	26260 <__flatcc_fb_parse@@Base+0xd10>
   25ab4:	add	r2, r5, #2
   25ab8:	cmp	r7, r2
   25abc:	mov	r6, r2
   25ac0:	beq	25ae4 <__flatcc_fb_parse@@Base+0x594>
   25ac4:	ldrb	r3, [r2], #1
   25ac8:	sub	r1, r3, #48	; 0x30
   25acc:	cmp	r1, #9
   25ad0:	bls	25ab8 <__flatcc_fb_parse@@Base+0x568>
   25ad4:	orr	r3, r3, #32
   25ad8:	sub	r3, r3, #97	; 0x61
   25adc:	cmp	r3, #5
   25ae0:	bls	25ab8 <__flatcc_fb_parse@@Base+0x568>
   25ae4:	mov	r3, r6
   25ae8:	mov	r2, r5
   25aec:	mov	r1, #14
   25af0:	b	25dcc <__flatcc_fb_parse@@Base+0x87c>
   25af4:	cmp	r1, #93	; 0x5d
   25af8:	add	r3, r5, #1
   25afc:	bhi	25c40 <__flatcc_fb_parse@@Base+0x6f0>
   25b00:	cmp	r1, #91	; 0x5b
   25b04:	bcs	25a6c <__flatcc_fb_parse@@Base+0x51c>
   25b08:	cmp	r1, #61	; 0x3d
   25b0c:	beq	25ea0 <__flatcc_fb_parse@@Base+0x950>
   25b10:	bhi	25b5c <__flatcc_fb_parse@@Base+0x60c>
   25b14:	cmp	r1, #59	; 0x3b
   25b18:	beq	25a6c <__flatcc_fb_parse@@Base+0x51c>
   25b1c:	bls	25f20 <__flatcc_fb_parse@@Base+0x9d0>
   25b20:	cmp	r7, r3
   25b24:	mov	r6, r3
   25b28:	beq	26064 <__flatcc_fb_parse@@Base+0xb14>
   25b2c:	ldrb	r2, [r5, #1]
   25b30:	cmp	r2, #60	; 0x3c
   25b34:	beq	25fe8 <__flatcc_fb_parse@@Base+0xa98>
   25b38:	cmp	r2, #61	; 0x3d
   25b3c:	beq	25fd4 <__flatcc_fb_parse@@Base+0xa84>
   25b40:	cmp	r2, #45	; 0x2d
   25b44:	bne	26064 <__flatcc_fb_parse@@Base+0xb14>
   25b48:	add	r6, r5, #2
   25b4c:	mov	r3, r6
   25b50:	mov	r2, r5
   25b54:	ldr	r1, [pc, #2504]	; 26524 <__flatcc_fb_parse@@Base+0xfd4>
   25b58:	b	25dcc <__flatcc_fb_parse@@Base+0x87c>
   25b5c:	cmp	r1, #63	; 0x3f
   25b60:	beq	25a6c <__flatcc_fb_parse@@Base+0x51c>
   25b64:	bcc	26070 <__flatcc_fb_parse@@Base+0xb20>
   25b68:	cmp	r1, #65	; 0x41
   25b6c:	bcc	25610 <__flatcc_fb_parse@@Base+0xc0>
   25b70:	cmp	r7, r3
   25b74:	lsl	r1, r1, #8
   25b78:	mov	r6, r3
   25b7c:	beq	25bc0 <__flatcc_fb_parse@@Base+0x670>
   25b80:	ldrb	r3, [r5, #1]
   25b84:	add	r2, r8, r3
   25b88:	ldrb	r2, [r2, #34]	; 0x22
   25b8c:	cmp	r2, #0
   25b90:	beq	25bc0 <__flatcc_fb_parse@@Base+0x670>
   25b94:	orr	r1, r1, r3, lsl #16
   25b98:	add	r3, r5, #2
   25b9c:	cmp	r7, r3
   25ba0:	mov	r6, r3
   25ba4:	beq	25bc0 <__flatcc_fb_parse@@Base+0x670>
   25ba8:	ldrb	r2, [r6]
   25bac:	add	r3, r3, #1
   25bb0:	add	r2, r8, r2
   25bb4:	ldrb	r2, [r2, #34]	; 0x22
   25bb8:	cmp	r2, #0
   25bbc:	bne	25b9c <__flatcc_fb_parse@@Base+0x64c>
   25bc0:	ldrb	r3, [r6, #-1]
   25bc4:	orr	r1, r1, r3, lsl #24
   25bc8:	sub	r3, r6, r5
   25bcc:	uxtb	r3, r3
   25bd0:	add	r3, r3, #48	; 0x30
   25bd4:	orr	r1, r3, r1
   25bd8:	cmp	r1, r9
   25bdc:	beq	26a78 <__flatcc_fb_parse@@Base+0x1528>
   25be0:	bhi	26440 <__flatcc_fb_parse@@Base+0xef0>
   25be4:	ldr	r3, [pc, #2364]	; 26528 <__flatcc_fb_parse@@Base+0xfd8>
   25be8:	cmp	r1, r3
   25bec:	beq	26928 <__flatcc_fb_parse@@Base+0x13d8>
   25bf0:	bhi	26388 <__flatcc_fb_parse@@Base+0xe38>
   25bf4:	add	r3, r3, #-67108863	; 0xfc000001
   25bf8:	cmp	r1, r3
   25bfc:	beq	269c8 <__flatcc_fb_parse@@Base+0x1478>
   25c00:	bhi	26334 <__flatcc_fb_parse@@Base+0xde4>
   25c04:	ldr	r3, [pc, #2336]	; 2652c <__flatcc_fb_parse@@Base+0xfdc>
   25c08:	cmp	r1, r3
   25c0c:	beq	269f8 <__flatcc_fb_parse@@Base+0x14a8>
   25c10:	ldr	r3, [pc, #2328]	; 26530 <__flatcc_fb_parse@@Base+0xfe0>
   25c14:	cmp	r1, r3
   25c18:	beq	268e0 <__flatcc_fb_parse@@Base+0x1390>
   25c1c:	ldr	r3, [pc, #2320]	; 26534 <__flatcc_fb_parse@@Base+0xfe4>
   25c20:	cmp	r1, r3
   25c24:	bne	26350 <__flatcc_fb_parse@@Base+0xe00>
   25c28:	mov	r1, r5
   25c2c:	mov	r2, #6
   25c30:	ldr	r0, [pc, #2304]	; 26538 <__flatcc_fb_parse@@Base+0xfe8>
   25c34:	bl	13f38 <memcmp@plt>
   25c38:	ldr	r1, [pc, #2300]	; 2653c <__flatcc_fb_parse@@Base+0xfec>
   25c3c:	b	26874 <__flatcc_fb_parse@@Base+0x1324>
   25c40:	cmp	r1, #122	; 0x7a
   25c44:	bhi	25c64 <__flatcc_fb_parse@@Base+0x714>
   25c48:	cmp	r1, #97	; 0x61
   25c4c:	bcs	25b70 <__flatcc_fb_parse@@Base+0x620>
   25c50:	cmp	r1, #94	; 0x5e
   25c54:	beq	25a1c <__flatcc_fb_parse@@Base+0x4cc>
   25c58:	cmp	r1, #95	; 0x5f
   25c5c:	beq	25b70 <__flatcc_fb_parse@@Base+0x620>
   25c60:	b	25610 <__flatcc_fb_parse@@Base+0xc0>
   25c64:	cmp	r1, #124	; 0x7c
   25c68:	beq	25de4 <__flatcc_fb_parse@@Base+0x894>
   25c6c:	bcc	25a6c <__flatcc_fb_parse@@Base+0x51c>
   25c70:	cmp	r1, #125	; 0x7d
   25c74:	beq	25a6c <__flatcc_fb_parse@@Base+0x51c>
   25c78:	cmp	r1, #126	; 0x7e
   25c7c:	b	25a18 <__flatcc_fb_parse@@Base+0x4c8>
   25c80:	add	r6, r5, #1
   25c84:	cmp	r7, r6
   25c88:	beq	25c98 <__flatcc_fb_parse@@Base+0x748>
   25c8c:	ldrb	r3, [r5, #1]
   25c90:	cmp	r3, #13
   25c94:	addeq	r6, r5, #2
   25c98:	ldr	r3, [r4, #64]	; 0x40
   25c9c:	str	r6, [r4, #60]	; 0x3c
   25ca0:	add	r3, r3, #1
   25ca4:	str	r3, [r4, #64]	; 0x40
   25ca8:	b	25a04 <__flatcc_fb_parse@@Base+0x4b4>
   25cac:	add	r6, r5, #1
   25cb0:	cmp	r7, r6
   25cb4:	beq	25c98 <__flatcc_fb_parse@@Base+0x748>
   25cb8:	ldrb	r3, [r5, #1]
   25cbc:	cmp	r3, #10
   25cc0:	b	25c94 <__flatcc_fb_parse@@Base+0x744>
   25cc4:	add	r9, r5, #1
   25cc8:	mov	r2, r5
   25ccc:	mov	r3, r9
   25cd0:	mov	r1, #19
   25cd4:	mov	r0, r4
   25cd8:	bl	240b4 <__flatcc_fb_default_error_out@@Base+0x20>
   25cdc:	mov	r5, r9
   25ce0:	mov	fp, #20
   25ce4:	mov	sl, #6
   25ce8:	b	2571c <__flatcc_fb_parse@@Base+0x1cc>
   25cec:	cmp	r7, r3
   25cf0:	mov	r6, r3
   25cf4:	beq	25dd8 <__flatcc_fb_parse@@Base+0x888>
   25cf8:	ldrb	r2, [r5, #1]
   25cfc:	cmp	r2, #47	; 0x2f
   25d00:	beq	25d68 <__flatcc_fb_parse@@Base+0x818>
   25d04:	cmp	r2, #61	; 0x3d
   25d08:	beq	25dbc <__flatcc_fb_parse@@Base+0x86c>
   25d0c:	cmp	r2, #42	; 0x2a
   25d10:	bne	25dd8 <__flatcc_fb_parse@@Base+0x888>
   25d14:	add	r3, r5, #2
   25d18:	cmp	r7, r3
   25d1c:	moveq	r6, #0
   25d20:	beq	25d38 <__flatcc_fb_parse@@Base+0x7e8>
   25d24:	ldrb	r6, [r5, #2]
   25d28:	cmp	r6, #33	; 0x21
   25d2c:	cmpne	r6, #42	; 0x2a
   25d30:	moveq	r6, #1
   25d34:	movne	r6, #0
   25d38:	add	r6, r3, r6
   25d3c:	sub	r5, r6, r5
   25d40:	sub	r5, r5, #3
   25d44:	clz	r5, r5
   25d48:	lsr	r5, r5, #5
   25d4c:	str	r5, [r4, #32]
   25d50:	mov	r2, r6
   25d54:	mov	r1, r6
   25d58:	mov	r0, r4
   25d5c:	bl	24164 <__flatcc_fb_default_error_out@@Base+0xd0>
   25d60:	mov	r9, #7
   25d64:	b	25908 <__flatcc_fb_parse@@Base+0x3b8>
   25d68:	add	r3, r5, #2
   25d6c:	cmp	r7, r3
   25d70:	moveq	r6, #0
   25d74:	beq	25d8c <__flatcc_fb_parse@@Base+0x83c>
   25d78:	ldrb	r6, [r5, #2]
   25d7c:	cmp	r6, #33	; 0x21
   25d80:	cmpne	r6, #47	; 0x2f
   25d84:	moveq	r6, #1
   25d88:	movne	r6, #0
   25d8c:	add	r6, r3, r6
   25d90:	sub	r5, r6, r5
   25d94:	sub	r5, r5, #3
   25d98:	clz	r5, r5
   25d9c:	lsr	r5, r5, #5
   25da0:	str	r5, [r4, #32]
   25da4:	mov	r2, r6
   25da8:	mov	r1, r6
   25dac:	mov	r0, r4
   25db0:	bl	24164 <__flatcc_fb_default_error_out@@Base+0xd0>
   25db4:	mov	sl, #7
   25db8:	b	2581c <__flatcc_fb_parse@@Base+0x2cc>
   25dbc:	add	r6, r5, #2
   25dc0:	ldr	r1, [pc, #1912]	; 26540 <__flatcc_fb_parse@@Base+0xff0>
   25dc4:	mov	r3, r6
   25dc8:	mov	r2, r5
   25dcc:	mov	r0, r4
   25dd0:	bl	240b4 <__flatcc_fb_default_error_out@@Base+0x20>
   25dd4:	b	25a04 <__flatcc_fb_parse@@Base+0x4b4>
   25dd8:	mov	r2, r5
   25ddc:	mov	r1, #47	; 0x2f
   25de0:	b	25dcc <__flatcc_fb_parse@@Base+0x87c>
   25de4:	cmp	r7, r3
   25de8:	mov	r6, r3
   25dec:	beq	25e04 <__flatcc_fb_parse@@Base+0x8b4>
   25df0:	ldrb	r3, [r5, #1]
   25df4:	cmp	r3, #61	; 0x3d
   25df8:	beq	25e14 <__flatcc_fb_parse@@Base+0x8c4>
   25dfc:	cmp	r3, #124	; 0x7c
   25e00:	beq	25e28 <__flatcc_fb_parse@@Base+0x8d8>
   25e04:	mov	r3, r6
   25e08:	mov	r2, r5
   25e0c:	mov	r1, #124	; 0x7c
   25e10:	b	25dcc <__flatcc_fb_parse@@Base+0x87c>
   25e14:	add	r6, r5, #2
   25e18:	mov	r3, r6
   25e1c:	mov	r2, r5
   25e20:	ldr	r1, [pc, #1820]	; 26544 <__flatcc_fb_parse@@Base+0xff4>
   25e24:	b	25dcc <__flatcc_fb_parse@@Base+0x87c>
   25e28:	add	r6, r5, #2
   25e2c:	mov	r3, r6
   25e30:	mov	r2, r5
   25e34:	ldr	r1, [pc, #1804]	; 26548 <__flatcc_fb_parse@@Base+0xff8>
   25e38:	mov	r0, r4
   25e3c:	bl	240b4 <__flatcc_fb_default_error_out@@Base+0x20>
   25e40:	b	25e04 <__flatcc_fb_parse@@Base+0x8b4>
   25e44:	add	r6, r5, #1
   25e48:	cmp	r7, r6
   25e4c:	beq	25e90 <__flatcc_fb_parse@@Base+0x940>
   25e50:	ldrb	r3, [r5, #1]
   25e54:	cmp	r3, #38	; 0x26
   25e58:	beq	25e78 <__flatcc_fb_parse@@Base+0x928>
   25e5c:	cmp	r3, #61	; 0x3d
   25e60:	bne	25e90 <__flatcc_fb_parse@@Base+0x940>
   25e64:	add	r6, r5, #2
   25e68:	mov	r3, r6
   25e6c:	mov	r2, r5
   25e70:	ldr	r1, [pc, #1748]	; 2654c <__flatcc_fb_parse@@Base+0xffc>
   25e74:	b	25dcc <__flatcc_fb_parse@@Base+0x87c>
   25e78:	add	r6, r5, #2
   25e7c:	mov	r3, r6
   25e80:	mov	r2, r5
   25e84:	ldr	r1, [pc, #1732]	; 26550 <__flatcc_fb_parse@@Base+0x1000>
   25e88:	mov	r0, r4
   25e8c:	bl	240b4 <__flatcc_fb_default_error_out@@Base+0x20>
   25e90:	mov	r3, r6
   25e94:	mov	r2, r5
   25e98:	mov	r1, #38	; 0x26
   25e9c:	b	25dcc <__flatcc_fb_parse@@Base+0x87c>
   25ea0:	cmp	r7, r3
   25ea4:	mov	r6, r3
   25ea8:	beq	25f10 <__flatcc_fb_parse@@Base+0x9c0>
   25eac:	ldrb	r3, [r5, #1]
   25eb0:	cmp	r3, #61	; 0x3d
   25eb4:	beq	25ed4 <__flatcc_fb_parse@@Base+0x984>
   25eb8:	cmp	r3, #62	; 0x3e
   25ebc:	bne	25f10 <__flatcc_fb_parse@@Base+0x9c0>
   25ec0:	add	r6, r5, #2
   25ec4:	mov	r3, r6
   25ec8:	mov	r2, r5
   25ecc:	ldr	r1, [pc, #1664]	; 26554 <__flatcc_fb_parse@@Base+0x1004>
   25ed0:	b	25dcc <__flatcc_fb_parse@@Base+0x87c>
   25ed4:	add	r6, r5, #2
   25ed8:	cmp	r7, r6
   25edc:	beq	25efc <__flatcc_fb_parse@@Base+0x9ac>
   25ee0:	ldrb	r3, [r5, #2]
   25ee4:	cmp	r3, #61	; 0x3d
   25ee8:	addeq	r6, r5, #3
   25eec:	moveq	r3, r6
   25ef0:	moveq	r2, r5
   25ef4:	ldreq	r1, [pc, #1628]	; 26558 <__flatcc_fb_parse@@Base+0x1008>
   25ef8:	beq	25dcc <__flatcc_fb_parse@@Base+0x87c>
   25efc:	mov	r3, r6
   25f00:	mov	r2, r5
   25f04:	ldr	r1, [pc, #1616]	; 2655c <__flatcc_fb_parse@@Base+0x100c>
   25f08:	mov	r0, r4
   25f0c:	bl	240b4 <__flatcc_fb_default_error_out@@Base+0x20>
   25f10:	mov	r3, r6
   25f14:	mov	r2, r5
   25f18:	mov	r1, #61	; 0x3d
   25f1c:	b	25dcc <__flatcc_fb_parse@@Base+0x87c>
   25f20:	cmp	r7, r3
   25f24:	mov	r6, r3
   25f28:	beq	25f8c <__flatcc_fb_parse@@Base+0xa3c>
   25f2c:	ldrb	r2, [r5, #1]
   25f30:	cmp	r2, #58	; 0x3a
   25f34:	beq	25f54 <__flatcc_fb_parse@@Base+0xa04>
   25f38:	cmp	r2, #61	; 0x3d
   25f3c:	bne	25f8c <__flatcc_fb_parse@@Base+0xa3c>
   25f40:	add	r6, r5, #2
   25f44:	mov	r3, r6
   25f48:	mov	r2, r5
   25f4c:	ldr	r1, [pc, #1548]	; 26560 <__flatcc_fb_parse@@Base+0x1010>
   25f50:	b	25dcc <__flatcc_fb_parse@@Base+0x87c>
   25f54:	add	r6, r5, #2
   25f58:	cmp	r7, r6
   25f5c:	beq	25f7c <__flatcc_fb_parse@@Base+0xa2c>
   25f60:	ldrb	r3, [r5, #2]
   25f64:	cmp	r3, #61	; 0x3d
   25f68:	addeq	r6, r5, #3
   25f6c:	moveq	r3, r6
   25f70:	moveq	r2, r5
   25f74:	ldreq	r1, [pc, #1512]	; 26564 <__flatcc_fb_parse@@Base+0x1014>
   25f78:	beq	25dcc <__flatcc_fb_parse@@Base+0x87c>
   25f7c:	mov	r3, r6
   25f80:	mov	r2, r5
   25f84:	ldr	r1, [pc, #1500]	; 26568 <__flatcc_fb_parse@@Base+0x1018>
   25f88:	b	25dcc <__flatcc_fb_parse@@Base+0x87c>
   25f8c:	mov	r2, r5
   25f90:	mov	r1, #58	; 0x3a
   25f94:	b	25dcc <__flatcc_fb_parse@@Base+0x87c>
   25f98:	cmp	r7, r3
   25f9c:	mov	r6, r3
   25fa0:	beq	25fc8 <__flatcc_fb_parse@@Base+0xa78>
   25fa4:	ldrb	r2, [r5, #1]
   25fa8:	cmp	r2, #42	; 0x2a
   25fac:	moveq	r2, r5
   25fb0:	ldreq	r1, [pc, #1460]	; 2656c <__flatcc_fb_parse@@Base+0x101c>
   25fb4:	beq	25dcc <__flatcc_fb_parse@@Base+0x87c>
   25fb8:	cmp	r2, #61	; 0x3d
   25fbc:	moveq	r2, r5
   25fc0:	ldreq	r1, [pc, #1448]	; 26570 <__flatcc_fb_parse@@Base+0x1020>
   25fc4:	beq	25dcc <__flatcc_fb_parse@@Base+0x87c>
   25fc8:	mov	r2, r5
   25fcc:	mov	r1, #42	; 0x2a
   25fd0:	b	25dcc <__flatcc_fb_parse@@Base+0x87c>
   25fd4:	add	r6, r5, #2
   25fd8:	mov	r3, r6
   25fdc:	mov	r2, r5
   25fe0:	ldr	r1, [pc, #1420]	; 26574 <__flatcc_fb_parse@@Base+0x1024>
   25fe4:	b	25dcc <__flatcc_fb_parse@@Base+0x87c>
   25fe8:	add	r6, r5, #2
   25fec:	cmp	r7, r6
   25ff0:	beq	26054 <__flatcc_fb_parse@@Base+0xb04>
   25ff4:	ldrb	r3, [r5, #2]
   25ff8:	cmp	r3, #60	; 0x3c
   25ffc:	beq	2601c <__flatcc_fb_parse@@Base+0xacc>
   26000:	cmp	r3, #61	; 0x3d
   26004:	bne	26054 <__flatcc_fb_parse@@Base+0xb04>
   26008:	add	r6, r5, #3
   2600c:	mov	r3, r6
   26010:	mov	r2, r5
   26014:	ldr	r1, [pc, #1372]	; 26578 <__flatcc_fb_parse@@Base+0x1028>
   26018:	b	25dcc <__flatcc_fb_parse@@Base+0x87c>
   2601c:	add	r6, r5, #3
   26020:	cmp	r7, r6
   26024:	beq	26044 <__flatcc_fb_parse@@Base+0xaf4>
   26028:	ldrb	r3, [r5, #3]
   2602c:	cmp	r3, #61	; 0x3d
   26030:	addeq	r6, r5, #4
   26034:	moveq	r3, r6
   26038:	moveq	r2, r5
   2603c:	ldreq	r1, [pc, #1336]	; 2657c <__flatcc_fb_parse@@Base+0x102c>
   26040:	beq	25dcc <__flatcc_fb_parse@@Base+0x87c>
   26044:	mov	r3, r6
   26048:	mov	r2, r5
   2604c:	ldr	r1, [pc, #1324]	; 26580 <__flatcc_fb_parse@@Base+0x1030>
   26050:	b	25dcc <__flatcc_fb_parse@@Base+0x87c>
   26054:	mov	r3, r6
   26058:	mov	r2, r5
   2605c:	ldr	r1, [pc, #1312]	; 26584 <__flatcc_fb_parse@@Base+0x1034>
   26060:	b	25dcc <__flatcc_fb_parse@@Base+0x87c>
   26064:	mov	r2, r5
   26068:	mov	r1, #60	; 0x3c
   2606c:	b	25dcc <__flatcc_fb_parse@@Base+0x87c>
   26070:	cmp	r7, r3
   26074:	mov	r6, r3
   26078:	beq	26090 <__flatcc_fb_parse@@Base+0xb40>
   2607c:	ldrb	r2, [r5, #1]
   26080:	cmp	r2, #61	; 0x3d
   26084:	beq	2609c <__flatcc_fb_parse@@Base+0xb4c>
   26088:	cmp	r2, #62	; 0x3e
   2608c:	beq	260b0 <__flatcc_fb_parse@@Base+0xb60>
   26090:	mov	r2, r5
   26094:	mov	r1, #62	; 0x3e
   26098:	b	25dcc <__flatcc_fb_parse@@Base+0x87c>
   2609c:	add	r6, r5, #2
   260a0:	mov	r3, r6
   260a4:	mov	r2, r5
   260a8:	ldr	r1, [pc, #1240]	; 26588 <__flatcc_fb_parse@@Base+0x1038>
   260ac:	b	25dcc <__flatcc_fb_parse@@Base+0x87c>
   260b0:	add	r6, r5, #2
   260b4:	cmp	r7, r6
   260b8:	beq	260d0 <__flatcc_fb_parse@@Base+0xb80>
   260bc:	ldrb	r3, [r5, #2]
   260c0:	cmp	r3, #61	; 0x3d
   260c4:	beq	260e0 <__flatcc_fb_parse@@Base+0xb90>
   260c8:	cmp	r3, #62	; 0x3e
   260cc:	beq	260f4 <__flatcc_fb_parse@@Base+0xba4>
   260d0:	mov	r3, r6
   260d4:	mov	r2, r5
   260d8:	ldr	r1, [pc, #1196]	; 2658c <__flatcc_fb_parse@@Base+0x103c>
   260dc:	b	25dcc <__flatcc_fb_parse@@Base+0x87c>
   260e0:	add	r6, r5, #3
   260e4:	mov	r3, r6
   260e8:	mov	r2, r5
   260ec:	ldr	r1, [pc, #1180]	; 26590 <__flatcc_fb_parse@@Base+0x1040>
   260f0:	b	25dcc <__flatcc_fb_parse@@Base+0x87c>
   260f4:	add	r6, r5, #3
   260f8:	cmp	r7, r6
   260fc:	beq	2611c <__flatcc_fb_parse@@Base+0xbcc>
   26100:	ldrb	r3, [r5, #3]
   26104:	cmp	r3, #61	; 0x3d
   26108:	addeq	r6, r5, #4
   2610c:	moveq	r3, r6
   26110:	moveq	r2, r5
   26114:	ldreq	r1, [pc, #1144]	; 26594 <__flatcc_fb_parse@@Base+0x1044>
   26118:	beq	25dcc <__flatcc_fb_parse@@Base+0x87c>
   2611c:	mov	r3, r6
   26120:	mov	r2, r5
   26124:	ldr	r1, [pc, #1132]	; 26598 <__flatcc_fb_parse@@Base+0x1048>
   26128:	b	25dcc <__flatcc_fb_parse@@Base+0x87c>
   2612c:	cmp	r7, r3
   26130:	mov	r6, r3
   26134:	beq	26190 <__flatcc_fb_parse@@Base+0xc40>
   26138:	ldrb	r2, [r5, #1]
   2613c:	cmp	r2, #61	; 0x3d
   26140:	beq	26168 <__flatcc_fb_parse@@Base+0xc18>
   26144:	cmp	r2, #62	; 0x3e
   26148:	beq	2617c <__flatcc_fb_parse@@Base+0xc2c>
   2614c:	cmp	r2, #45	; 0x2d
   26150:	bne	26190 <__flatcc_fb_parse@@Base+0xc40>
   26154:	add	r6, r5, #2
   26158:	mov	r3, r6
   2615c:	mov	r2, r5
   26160:	ldr	r1, [pc, #1076]	; 2659c <__flatcc_fb_parse@@Base+0x104c>
   26164:	b	25dcc <__flatcc_fb_parse@@Base+0x87c>
   26168:	add	r6, r5, #2
   2616c:	mov	r3, r6
   26170:	mov	r2, r5
   26174:	ldr	r1, [pc, #1060]	; 265a0 <__flatcc_fb_parse@@Base+0x1050>
   26178:	b	25dcc <__flatcc_fb_parse@@Base+0x87c>
   2617c:	add	r6, r5, #2
   26180:	mov	r3, r6
   26184:	mov	r2, r5
   26188:	ldr	r1, [pc, #1044]	; 265a4 <__flatcc_fb_parse@@Base+0x1054>
   2618c:	b	25dcc <__flatcc_fb_parse@@Base+0x87c>
   26190:	mov	r2, r5
   26194:	mov	r1, #45	; 0x2d
   26198:	b	25dcc <__flatcc_fb_parse@@Base+0x87c>
   2619c:	cmp	r7, r3
   261a0:	mov	r6, r3
   261a4:	beq	261e4 <__flatcc_fb_parse@@Base+0xc94>
   261a8:	ldrb	r2, [r5, #1]
   261ac:	cmp	r2, #43	; 0x2b
   261b0:	beq	261d0 <__flatcc_fb_parse@@Base+0xc80>
   261b4:	cmp	r2, #61	; 0x3d
   261b8:	bne	261e4 <__flatcc_fb_parse@@Base+0xc94>
   261bc:	add	r6, r5, #2
   261c0:	mov	r3, r6
   261c4:	mov	r2, r5
   261c8:	ldr	r1, [pc, #984]	; 265a8 <__flatcc_fb_parse@@Base+0x1058>
   261cc:	b	25dcc <__flatcc_fb_parse@@Base+0x87c>
   261d0:	add	r6, r5, #2
   261d4:	mov	r3, r6
   261d8:	mov	r2, r5
   261dc:	ldr	r1, [pc, #968]	; 265ac <__flatcc_fb_parse@@Base+0x105c>
   261e0:	b	25dcc <__flatcc_fb_parse@@Base+0x87c>
   261e4:	mov	r2, r5
   261e8:	mov	r1, #43	; 0x2b
   261ec:	b	25dcc <__flatcc_fb_parse@@Base+0x87c>
   261f0:	cmp	r7, r3
   261f4:	mov	r6, r3
   261f8:	beq	2621c <__flatcc_fb_parse@@Base+0xccc>
   261fc:	ldrb	r2, [r5, #1]
   26200:	cmp	r2, #46	; 0x2e
   26204:	beq	26228 <__flatcc_fb_parse@@Base+0xcd8>
   26208:	bcc	2621c <__flatcc_fb_parse@@Base+0xccc>
   2620c:	sub	r2, r2, #48	; 0x30
   26210:	cmp	r2, #9
   26214:	movls	r2, r5
   26218:	bls	2629c <__flatcc_fb_parse@@Base+0xd4c>
   2621c:	mov	r2, r5
   26220:	mov	r1, #46	; 0x2e
   26224:	b	25dcc <__flatcc_fb_parse@@Base+0x87c>
   26228:	add	r6, r5, #2
   2622c:	cmp	r7, r6
   26230:	beq	26250 <__flatcc_fb_parse@@Base+0xd00>
   26234:	ldrb	r3, [r5, #2]
   26238:	cmp	r3, #46	; 0x2e
   2623c:	addeq	r6, r5, #3
   26240:	moveq	r3, r6
   26244:	moveq	r2, r5
   26248:	ldreq	r1, [pc, #864]	; 265b0 <__flatcc_fb_parse@@Base+0x1060>
   2624c:	beq	25dcc <__flatcc_fb_parse@@Base+0x87c>
   26250:	mov	r3, r6
   26254:	mov	r2, r5
   26258:	ldr	r1, [pc, #852]	; 265b4 <__flatcc_fb_parse@@Base+0x1064>
   2625c:	b	25dcc <__flatcc_fb_parse@@Base+0x87c>
   26260:	add	r3, r5, #1
   26264:	subs	r6, r3, #0
   26268:	beq	274a8 <__flatcc_fb_parse@@Base+0x1f58>
   2626c:	ldrb	r2, [r3]
   26270:	add	r3, r6, #1
   26274:	sub	r1, r2, #48	; 0x30
   26278:	cmp	r1, #9
   2627c:	bls	26264 <__flatcc_fb_parse@@Base+0xd14>
   26280:	cmp	r2, #46	; 0x2e
   26284:	moveq	r2, r6
   26288:	beq	2629c <__flatcc_fb_parse@@Base+0xd4c>
   2628c:	cmp	r7, r6
   26290:	beq	26324 <__flatcc_fb_parse@@Base+0xdd4>
   26294:	mov	r2, r6
   26298:	b	262c0 <__flatcc_fb_parse@@Base+0xd70>
   2629c:	add	r3, r6, #1
   262a0:	cmp	r3, r7
   262a4:	mov	r6, r3
   262a8:	beq	26310 <__flatcc_fb_parse@@Base+0xdc0>
   262ac:	ldrb	r1, [r6]
   262b0:	add	r3, r3, #1
   262b4:	sub	r1, r1, #48	; 0x30
   262b8:	cmp	r1, #9
   262bc:	bls	262a0 <__flatcc_fb_parse@@Base+0xd50>
   262c0:	ldrb	r3, [r6]
   262c4:	and	r3, r3, #223	; 0xdf
   262c8:	cmp	r3, #69	; 0x45
   262cc:	bne	26310 <__flatcc_fb_parse@@Base+0xdc0>
   262d0:	add	r3, r6, #1
   262d4:	cmp	r7, r3
   262d8:	beq	262ec <__flatcc_fb_parse@@Base+0xd9c>
   262dc:	ldrb	r1, [r6, #1]
   262e0:	sub	r1, r1, #43	; 0x2b
   262e4:	tst	r1, #253	; 0xfd
   262e8:	movne	r3, r6
   262ec:	add	r3, r3, #1
   262f0:	cmp	r7, r3
   262f4:	mov	r6, r3
   262f8:	beq	26310 <__flatcc_fb_parse@@Base+0xdc0>
   262fc:	ldrb	r1, [r6]
   26300:	add	r3, r3, #1
   26304:	sub	r1, r1, #48	; 0x30
   26308:	cmp	r1, #9
   2630c:	bls	262f0 <__flatcc_fb_parse@@Base+0xda0>
   26310:	cmp	r6, r2
   26314:	movne	r3, r6
   26318:	movne	r2, r5
   2631c:	movne	r1, #11
   26320:	bne	25dcc <__flatcc_fb_parse@@Base+0x87c>
   26324:	mov	r3, r6
   26328:	mov	r2, r5
   2632c:	mov	r1, #10
   26330:	b	25dcc <__flatcc_fb_parse@@Base+0x87c>
   26334:	ldr	r3, [pc, #636]	; 265b8 <__flatcc_fb_parse@@Base+0x1068>
   26338:	cmp	r1, r3
   2633c:	beq	268f8 <__flatcc_fb_parse@@Base+0x13a8>
   26340:	bhi	26358 <__flatcc_fb_parse@@Base+0xe08>
   26344:	ldr	r3, [pc, #624]	; 265bc <__flatcc_fb_parse@@Base+0x106c>
   26348:	cmp	r1, r3
   2634c:	beq	26a10 <__flatcc_fb_parse@@Base+0x14c0>
   26350:	mov	r1, #9
   26354:	b	25a70 <__flatcc_fb_parse@@Base+0x520>
   26358:	ldr	r3, [pc, #608]	; 265c0 <__flatcc_fb_parse@@Base+0x1070>
   2635c:	cmp	r1, r3
   26360:	beq	269b0 <__flatcc_fb_parse@@Base+0x1460>
   26364:	ldr	r3, [pc, #600]	; 265c4 <__flatcc_fb_parse@@Base+0x1074>
   26368:	cmp	r1, r3
   2636c:	bne	26350 <__flatcc_fb_parse@@Base+0xe00>
   26370:	mov	r1, r5
   26374:	mov	r2, #5
   26378:	ldr	r0, [pc, #584]	; 265c8 <__flatcc_fb_parse@@Base+0x1078>
   2637c:	bl	13f38 <memcmp@plt>
   26380:	ldr	r1, [pc, #580]	; 265cc <__flatcc_fb_parse@@Base+0x107c>
   26384:	b	26874 <__flatcc_fb_parse@@Base+0x1324>
   26388:	ldr	r3, [pc, #576]	; 265d0 <__flatcc_fb_parse@@Base+0x1080>
   2638c:	cmp	r1, r3
   26390:	beq	26910 <__flatcc_fb_parse@@Base+0x13c0>
   26394:	bhi	263dc <__flatcc_fb_parse@@Base+0xe8c>
   26398:	sub	r3, r3, #3584	; 0xe00
   2639c:	cmp	r1, r3
   263a0:	beq	268c8 <__flatcc_fb_parse@@Base+0x1378>
   263a4:	ldr	r3, [pc, #552]	; 265d4 <__flatcc_fb_parse@@Base+0x1084>
   263a8:	cmp	r1, r3
   263ac:	beq	26a58 <__flatcc_fb_parse@@Base+0x1508>
   263b0:	ldr	r3, [pc, #544]	; 265d8 <__flatcc_fb_parse@@Base+0x1088>
   263b4:	cmp	r1, r3
   263b8:	bne	26350 <__flatcc_fb_parse@@Base+0xe00>
   263bc:	mov	r1, r5
   263c0:	mov	r2, #4
   263c4:	ldr	r0, [pc, #528]	; 265dc <__flatcc_fb_parse@@Base+0x108c>
   263c8:	bl	13f38 <memcmp@plt>
   263cc:	cmp	r0, #0
   263d0:	movne	r1, #9
   263d4:	mvneq	r1, #992	; 0x3e0
   263d8:	b	25a70 <__flatcc_fb_parse@@Base+0x520>
   263dc:	ldr	r3, [pc, #508]	; 265e0 <__flatcc_fb_parse@@Base+0x1090>
   263e0:	cmp	r1, r3
   263e4:	beq	26a28 <__flatcc_fb_parse@@Base+0x14d8>
   263e8:	bhi	26410 <__flatcc_fb_parse@@Base+0xec0>
   263ec:	ldr	r3, [pc, #496]	; 265e4 <__flatcc_fb_parse@@Base+0x1094>
   263f0:	cmp	r1, r3
   263f4:	bne	26350 <__flatcc_fb_parse@@Base+0xe00>
   263f8:	mov	r1, r5
   263fc:	mov	r2, #5
   26400:	ldr	r0, [pc, #276]	; 2651c <__flatcc_fb_parse@@Base+0xfcc>
   26404:	bl	13f38 <memcmp@plt>
   26408:	ldr	r1, [pc, #260]	; 26514 <__flatcc_fb_parse@@Base+0xfc4>
   2640c:	b	26874 <__flatcc_fb_parse@@Base+0x1324>
   26410:	ldr	r3, [pc, #464]	; 265e8 <__flatcc_fb_parse@@Base+0x1098>
   26414:	cmp	r1, r3
   26418:	beq	26980 <__flatcc_fb_parse@@Base+0x1430>
   2641c:	ldr	r3, [pc, #456]	; 265ec <__flatcc_fb_parse@@Base+0x109c>
   26420:	cmp	r1, r3
   26424:	bne	26350 <__flatcc_fb_parse@@Base+0xe00>
   26428:	mov	r1, r5
   2642c:	mov	r2, #9
   26430:	ldr	r0, [pc, #440]	; 265f0 <__flatcc_fb_parse@@Base+0x10a0>
   26434:	bl	13f38 <memcmp@plt>
   26438:	ldr	r1, [pc, #436]	; 265f4 <__flatcc_fb_parse@@Base+0x10a4>
   2643c:	b	26874 <__flatcc_fb_parse@@Base+0x1324>
   26440:	ldr	r3, [pc, #432]	; 265f8 <__flatcc_fb_parse@@Base+0x10a8>
   26444:	cmp	r1, r3
   26448:	beq	26a90 <__flatcc_fb_parse@@Base+0x1540>
   2644c:	bhi	267a0 <__flatcc_fb_parse@@Base+0x1250>
   26450:	ldr	r3, [pc, #420]	; 265fc <__flatcc_fb_parse@@Base+0x10ac>
   26454:	cmp	r1, r3
   26458:	beq	26948 <__flatcc_fb_parse@@Base+0x13f8>
   2645c:	bhi	2649c <__flatcc_fb_parse@@Base+0xf4c>
   26460:	ldr	r3, [pc, #408]	; 26600 <__flatcc_fb_parse@@Base+0x10b0>
   26464:	cmp	r1, r3
   26468:	beq	26a40 <__flatcc_fb_parse@@Base+0x14f0>
   2646c:	ldr	r3, [pc, #400]	; 26604 <__flatcc_fb_parse@@Base+0x10b4>
   26470:	cmp	r1, r3
   26474:	beq	26898 <__flatcc_fb_parse@@Base+0x1348>
   26478:	ldr	r3, [pc, #392]	; 26608 <__flatcc_fb_parse@@Base+0x10b8>
   2647c:	cmp	r1, r3
   26480:	bne	26350 <__flatcc_fb_parse@@Base+0xe00>
   26484:	mov	r1, r5
   26488:	mov	r2, #4
   2648c:	ldr	r0, [pc, #376]	; 2660c <__flatcc_fb_parse@@Base+0x10bc>
   26490:	bl	13f38 <memcmp@plt>
   26494:	ldr	r1, [pc, #372]	; 26610 <__flatcc_fb_parse@@Base+0x10c0>
   26498:	b	26874 <__flatcc_fb_parse@@Base+0x1324>
   2649c:	ldr	r3, [pc, #368]	; 26614 <__flatcc_fb_parse@@Base+0x10c4>
   264a0:	cmp	r1, r3
   264a4:	beq	26998 <__flatcc_fb_parse@@Base+0x1448>
   264a8:	bhi	264d8 <__flatcc_fb_parse@@Base+0xf88>
   264ac:	ldr	r3, [pc, #356]	; 26618 <__flatcc_fb_parse@@Base+0x10c8>
   264b0:	cmp	r1, r3
   264b4:	bne	26350 <__flatcc_fb_parse@@Base+0xe00>
   264b8:	mov	r1, r5
   264bc:	mov	r2, #4
   264c0:	ldr	r0, [pc, #340]	; 2661c <__flatcc_fb_parse@@Base+0x10cc>
   264c4:	bl	13f38 <memcmp@plt>
   264c8:	cmp	r0, #0
   264cc:	movne	r1, #9
   264d0:	mvneq	r1, #988	; 0x3dc
   264d4:	b	25a70 <__flatcc_fb_parse@@Base+0x520>
   264d8:	ldr	r3, [pc, #320]	; 26620 <__flatcc_fb_parse@@Base+0x10d0>
   264dc:	cmp	r1, r3
   264e0:	beq	26880 <__flatcc_fb_parse@@Base+0x1330>
   264e4:	ldr	r3, [pc, #312]	; 26624 <__flatcc_fb_parse@@Base+0x10d4>
   264e8:	cmp	r1, r3
   264ec:	bne	26350 <__flatcc_fb_parse@@Base+0xe00>
   264f0:	mov	r1, r5
   264f4:	mov	r2, #4
   264f8:	ldr	r0, [pc, #296]	; 26628 <__flatcc_fb_parse@@Base+0x10d8>
   264fc:	bl	13f38 <memcmp@plt>
   26500:	cmp	r0, #0
   26504:	movne	r1, #9
   26508:	mvneq	r1, #996	; 0x3e4
   2650c:	b	25a70 <__flatcc_fb_parse@@Base+0x520>
   26510:	andeq	r7, r4, pc, lsr #13
   26514:			; <UNDEFINED> instruction: 0xfffffc2a
   26518:	andeq	r6, r4, r3, ror pc
   2651c:	andeq	r8, r4, sp, lsr #21
   26520:	ldrbvs	r7, [r0, #-571]!	; 0xfffffdc5
   26524:	andeq	r2, r0, ip, lsr sp
   26528:	stmdacc	r9!, {r0, r2, r4, r5, r8, sl, ip, sp, lr}^
   2652c:	rsbcc	r6, ip, #57671680	; 0x3700000
   26530:	rsbcc	r6, lr, #868352	; 0xd4000
   26534:	rsbcc	r7, r9, #226492416	; 0xd800000
   26538:			; <UNDEFINED> instruction: 0x00030ab7
   2653c:			; <UNDEFINED> instruction: 0xfffffc2d
   26540:	andeq	r3, r0, pc, lsr #26
   26544:	andeq	r3, r0, ip, ror sp
   26548:	andeq	r7, r0, ip, ror ip
   2654c:	andeq	r3, r0, r6, lsr #26
   26550:	andeq	r2, r0, r6, lsr #12
   26554:	andeq	r3, r0, sp, lsr lr
   26558:	eorseq	r3, sp, sp, lsr sp
   2655c:	andeq	r3, r0, sp, lsr sp
   26560:	andeq	r3, r0, sl, lsr sp
   26564:	eorseq	r3, sp, sl, lsr sl
   26568:	andeq	r3, r0, sl, lsr sl
   2656c:	andeq	r2, r0, sl, lsr #20
   26570:	andeq	r3, r0, sl, lsr #26
   26574:	andeq	r3, r0, ip, lsr sp
   26578:	eorseq	r3, sp, ip, lsr ip
   2657c:	ldccc	12, cr3, [ip, #-240]!	; 0xffffff10
   26580:	eorseq	r3, ip, ip, lsr ip
   26584:	andeq	r3, r0, ip, lsr ip
   26588:	andeq	r3, r0, lr, lsr sp
   2658c:	andeq	r3, r0, lr, lsr lr
   26590:	eorseq	r3, sp, lr, lsr lr
   26594:	ldccc	14, cr3, [lr, #-248]!	; 0xffffff08
   26598:	eorseq	r3, lr, lr, lsr lr
   2659c:	andeq	r2, r0, sp, lsr #26
   265a0:	andeq	r3, r0, sp, lsr #26
   265a4:	andeq	r3, r0, sp, lsr #28
   265a8:	andeq	r3, r0, fp, lsr #26
   265ac:	andeq	r2, r0, fp, lsr #22
   265b0:	eoreq	r2, lr, lr, lsr #28
   265b4:	andeq	r2, r0, lr, lsr #28
   265b8:	strbtcc	r6, [lr], #-2357	; 0xfffff6cb
   265bc:	strbtcc	r6, [ip], #-1591	; 0xfffff9c9
   265c0:			; <UNDEFINED> instruction: 0x36697536
   265c4:			; <UNDEFINED> instruction: 0x366e6935
   265c8:			; <UNDEFINED> instruction: 0x00030abf
   265cc:			; <UNDEFINED> instruction: 0xfffffc20
   265d0:	strbvs	r7, [r1, #-1077]!	; 0xfffffbcb
   265d4:	strbvs	r6, [r1, #-3641]!	; 0xfffff1c7
   265d8:	stmdacc	lr!, {r2, r4, r5, r8, fp, sp, lr}^
   265dc:	andeq	r0, r3, r6, asr #21
   265e0:	strbvs	r6, [lr, #-2359]!	; 0xfffff6c9
   265e4:	strbvs	r7, [r2, #-1333]!	; 0xfffffacb
   265e8:	strbvs	r6, [pc, #-1078]!	; 261ba <__flatcc_fb_parse@@Base+0xc6a>
   265ec:	strbvs	r7, [pc, #-569]!	; 263bb <__flatcc_fb_parse@@Base+0xe6b>
   265f0:	strdeq	r7, [r4], -r8
   265f4:			; <UNDEFINED> instruction: 0xfffffc38
   265f8:	mcrvs	6, 3, r6, cr9, cr14, {1}
   265fc:			; <UNDEFINED> instruction: 0x676c7535
   26600:	ldrbvs	r6, [r4, #-313]!	; 0xfffffec7
   26604:	ldrbvs	r6, [r9, #-564]!	; 0xfffffdcc
   26608:	ldrbvs	r7, [r2, #-1076]!	; 0xfffffbcc
   2660c:	andeq	r8, r4, r4, lsl #3
   26610:			; <UNDEFINED> instruction: 0xfffffc24
   26614:			; <UNDEFINED> instruction: 0x67747336
   26618:			; <UNDEFINED> instruction: 0x676f6c34
   2661c:	andeq	r7, r4, r0, asr #13
   26620:	sfmvs	f6, 2, [pc], #-208	; 26558 <__flatcc_fb_parse@@Base+0x1008>
   26624:	cfstr64vs	mvdx6, [lr, #-208]!	; 0xffffff30
   26628:	andeq	r7, r4, r9, lsr #30
   2662c:	strbtvc	r7, [r9], #-1332	; 0xfffffacc
   26630:	rsbvc	r6, r9, #66060288	; 0x3f00000
   26634:	strbtvc	r7, [r8], #-821	; 0xfffffccb
   26638:	mcrvs	5, 3, r7, cr14, cr5, {1}
   2663c:	andeq	r1, r3, pc, lsl #6
   26640:			; <UNDEFINED> instruction: 0xfffffc30
   26644:	strbtvc	r6, [lr], #-2355	; 0xfffff6cd
   26648:	strbtvc	r6, [ip], #-1589	; 0xfffff9cb
   2664c:	andeq	r0, r3, r8, lsl sl
   26650:	ldrbtvc	r7, [r3], #-1334	; 0xfffffaca
   26654:	andeq	r8, r4, r9, lsr #1
   26658:	andeq	r5, r4, r4, asr #29
   2665c:			; <UNDEFINED> instruction: 0xfffffc1e
   26660:	andeq	r7, r4, r0, ror pc
   26664:			; <UNDEFINED> instruction: 0xfffffc19
   26668:	andeq	r8, r4, lr, lsr #21
   2666c:			; <UNDEFINED> instruction: 0xfffffc1a
   26670:			; <UNDEFINED> instruction: 0x000476b4
   26674:			; <UNDEFINED> instruction: 0xfffffc25
   26678:			; <UNDEFINED> instruction: 0x000476b9
   2667c:			; <UNDEFINED> instruction: 0xfffffc26
   26680:			; <UNDEFINED> instruction: 0x00030ab8
   26684:			; <UNDEFINED> instruction: 0xfffffc21
   26688:			; <UNDEFINED> instruction: 0x00030ab1
   2668c:			; <UNDEFINED> instruction: 0xfffffc22
   26690:	andeq	r9, r4, sp, asr #3
   26694:			; <UNDEFINED> instruction: 0xfffffc29
   26698:	andeq	r0, r3, r5, asr #21
   2669c:			; <UNDEFINED> instruction: 0x000476bf
   266a0:	andeq	r7, r4, r6, asr #13
   266a4:			; <UNDEFINED> instruction: 0xfffffc28
   266a8:	andeq	r0, r3, lr, lsl sl
   266ac:			; <UNDEFINED> instruction: 0xfffffc31
   266b0:	andeq	r7, r4, lr, lsl #28
   266b4:			; <UNDEFINED> instruction: 0xfffffc32
   266b8:			; <UNDEFINED> instruction: 0x00030abe
   266bc:			; <UNDEFINED> instruction: 0xfffffc2c
   266c0:			; <UNDEFINED> instruction: 0x00030ab0
   266c4:			; <UNDEFINED> instruction: 0xfffffc2e
   266c8:	andeq	r7, r4, r5, asr #13
   266cc:			; <UNDEFINED> instruction: 0xfffffc34
   266d0:	andeq	r7, r4, ip, asr #13
   266d4:			; <UNDEFINED> instruction: 0xfffffc1c
   266d8:	ldrdeq	r7, [r4], -r4
   266dc:			; <UNDEFINED> instruction: 0xfffffc1d
   266e0:	ldrdeq	r7, [r4], -ip
   266e4:	andeq	r7, r4, r4, ror #13
   266e8:	andeq	r7, r4, lr, ror #13
   266ec:	andeq	r7, r4, r2, lsl #14
   266f0:	andeq	r7, r4, lr, lsl #14
   266f4:	andeq	r7, r4, sp, lsl r7
   266f8:			; <UNDEFINED> instruction: 0xfffffc35
   266fc:	andeq	r7, r4, sp, lsr #14
   26700:	andeq	r7, r4, r5, ror #14
   26704:	andeq	r7, r4, r6, ror #3
   26708:	andeq	r7, r4, lr, ror #18
   2670c:	eoreq	r0, r0, r3, lsl #16
   26710:	muleq	r4, r3, r9
   26714:	andeq	r7, r4, sl, lsr #19
   26718:	andeq	r7, r4, r8, asr #19
   2671c:	muleq	r4, r3, r7
   26720:			; <UNDEFINED> instruction: 0xfffffc36
   26724:	ldrdeq	r7, [r4], -sp
   26728:	andeq	r7, r4, sl, ror #23
   2672c:			; <UNDEFINED> instruction: 0xfffffc3a
   26730:	andeq	r7, r4, r5, asr r8
   26734:	andeq	r7, r4, r1, ror r8
   26738:	muleq	r4, r9, r8
   2673c:			; <UNDEFINED> instruction: 0x000478be
   26740:	andeq	r7, r4, r7, lsr #23
   26744:			; <UNDEFINED> instruction: 0x000477b2
   26748:	ldrdeq	r7, [r4], -r2
   2674c:	andeq	r7, r4, r0, lsl ip
   26750:	strdeq	r7, [r4], -r7	; <UNPREDICTABLE>
   26754:	andeq	r7, r4, r2, lsl r8
   26758:	andeq	r7, r4, r9, lsr r8
   2675c:	ldrdeq	r7, [r4], -fp
   26760:	strdeq	r7, [r4], -r1
   26764:	andeq	r7, r4, r6, lsl r9
   26768:	andeq	r7, r4, r8, lsr r9
   2676c:	andeq	r7, r4, r7, asr r9
   26770:			; <UNDEFINED> instruction: 0xfffffc39
   26774:	strdeq	r7, [r4], -lr
   26778:	andeq	r7, r4, r0, lsr #20
   2677c:	andeq	r7, r4, r6, asr #20
   26780:	andeq	r7, r4, r5, ror #20
   26784:	andeq	r7, r4, r1, lsl #21
   26788:	andeq	r7, r4, r3, ror #19
   2678c:			; <UNDEFINED> instruction: 0x00047aba
   26790:	andeq	r7, r4, r3, lsl fp
   26794:	andeq	r7, r4, r5, ror fp
   26798:	andeq	r7, r4, r4, ror #23
   2679c:	andeq	r7, r4, pc, asr #23
   267a0:	ldr	r3, [pc, #-380]	; 2662c <__flatcc_fb_parse@@Base+0x10dc>
   267a4:	cmp	r1, r3
   267a8:	beq	268b0 <__flatcc_fb_parse@@Base+0x1360>
   267ac:	bhi	267ec <__flatcc_fb_parse@@Base+0x129c>
   267b0:	ldr	r3, [pc, #-392]	; 26630 <__flatcc_fb_parse@@Base+0x10e0>
   267b4:	cmp	r1, r3
   267b8:	beq	26aa8 <__flatcc_fb_parse@@Base+0x1558>
   267bc:	ldr	r3, [pc, #-400]	; 26634 <__flatcc_fb_parse@@Base+0x10e4>
   267c0:	cmp	r1, r3
   267c4:	beq	26968 <__flatcc_fb_parse@@Base+0x1418>
   267c8:	ldr	r3, [pc, #-408]	; 26638 <__flatcc_fb_parse@@Base+0x10e8>
   267cc:	cmp	r1, r3
   267d0:	bne	26350 <__flatcc_fb_parse@@Base+0xe00>
   267d4:	mov	r1, r5
   267d8:	mov	r2, #5
   267dc:	ldr	r0, [pc, #-424]	; 2663c <__flatcc_fb_parse@@Base+0x10ec>
   267e0:	bl	13f38 <memcmp@plt>
   267e4:	ldr	r1, [pc, #-428]	; 26640 <__flatcc_fb_parse@@Base+0x10f0>
   267e8:	b	26874 <__flatcc_fb_parse@@Base+0x1324>
   267ec:	ldr	r3, [pc, #-432]	; 26644 <__flatcc_fb_parse@@Base+0x10f4>
   267f0:	cmp	r1, r3
   267f4:	beq	26860 <__flatcc_fb_parse@@Base+0x1310>
   267f8:	bhi	26828 <__flatcc_fb_parse@@Base+0x12d8>
   267fc:	ldr	r3, [pc, #-444]	; 26648 <__flatcc_fb_parse@@Base+0x10f8>
   26800:	cmp	r1, r3
   26804:	bne	26350 <__flatcc_fb_parse@@Base+0xe00>
   26808:	mov	r1, r5
   2680c:	mov	r2, #5
   26810:	ldr	r0, [pc, #-460]	; 2664c <__flatcc_fb_parse@@Base+0x10fc>
   26814:	bl	13f38 <memcmp@plt>
   26818:	cmp	r0, #0
   2681c:	movne	r1, #9
   26820:	mvneq	r1, #984	; 0x3d8
   26824:	b	25a70 <__flatcc_fb_parse@@Base+0x520>
   26828:	ldr	r3, [pc, #-480]	; 26650 <__flatcc_fb_parse@@Base+0x1100>
   2682c:	cmp	r1, r3
   26830:	beq	269e0 <__flatcc_fb_parse@@Base+0x1490>
   26834:	add	r3, r3, #65024	; 0xfe00
   26838:	cmp	r1, r3
   2683c:	bne	26350 <__flatcc_fb_parse@@Base+0xe00>
   26840:	mov	r1, r5
   26844:	mov	r2, #6
   26848:	ldr	r0, [pc, #-508]	; 26654 <__flatcc_fb_parse@@Base+0x1104>
   2684c:	bl	13f38 <memcmp@plt>
   26850:	cmp	r0, #0
   26854:	movne	r1, #9
   26858:	mvneq	r1, #972	; 0x3cc
   2685c:	b	25a70 <__flatcc_fb_parse@@Base+0x520>
   26860:	mov	r1, r5
   26864:	mov	r2, #3
   26868:	ldr	r0, [pc, #-536]	; 26658 <__flatcc_fb_parse@@Base+0x1108>
   2686c:	bl	13f38 <memcmp@plt>
   26870:	ldr	r1, [pc, #-540]	; 2665c <__flatcc_fb_parse@@Base+0x110c>
   26874:	cmp	r0, #0
   26878:	movne	r1, #9
   2687c:	b	25a70 <__flatcc_fb_parse@@Base+0x520>
   26880:	mov	r1, r5
   26884:	mov	r2, #4
   26888:	ldr	r0, [pc, #-560]	; 26660 <__flatcc_fb_parse@@Base+0x1110>
   2688c:	bl	13f38 <memcmp@plt>
   26890:	ldr	r1, [pc, #-564]	; 26664 <__flatcc_fb_parse@@Base+0x1114>
   26894:	b	26874 <__flatcc_fb_parse@@Base+0x1324>
   26898:	mov	r1, r5
   2689c:	mov	r2, #4
   268a0:	ldr	r0, [pc, #-576]	; 26668 <__flatcc_fb_parse@@Base+0x1118>
   268a4:	bl	13f38 <memcmp@plt>
   268a8:	ldr	r1, [pc, #-580]	; 2666c <__flatcc_fb_parse@@Base+0x111c>
   268ac:	b	26874 <__flatcc_fb_parse@@Base+0x1324>
   268b0:	mov	r1, r5
   268b4:	mov	r2, #4
   268b8:	ldr	r0, [pc, #-592]	; 26670 <__flatcc_fb_parse@@Base+0x1120>
   268bc:	bl	13f38 <memcmp@plt>
   268c0:	ldr	r1, [pc, #-596]	; 26674 <__flatcc_fb_parse@@Base+0x1124>
   268c4:	b	26874 <__flatcc_fb_parse@@Base+0x1324>
   268c8:	mov	r1, r5
   268cc:	mov	r2, #5
   268d0:	ldr	r0, [pc, #-608]	; 26678 <__flatcc_fb_parse@@Base+0x1128>
   268d4:	bl	13f38 <memcmp@plt>
   268d8:	ldr	r1, [pc, #-612]	; 2667c <__flatcc_fb_parse@@Base+0x112c>
   268dc:	b	26874 <__flatcc_fb_parse@@Base+0x1324>
   268e0:	mov	r1, r5
   268e4:	mov	r2, #5
   268e8:	ldr	r0, [pc, #-624]	; 26680 <__flatcc_fb_parse@@Base+0x1130>
   268ec:	bl	13f38 <memcmp@plt>
   268f0:	ldr	r1, [pc, #-628]	; 26684 <__flatcc_fb_parse@@Base+0x1134>
   268f4:	b	26874 <__flatcc_fb_parse@@Base+0x1324>
   268f8:	mov	r1, r5
   268fc:	mov	r2, #5
   26900:	ldr	r0, [pc, #-640]	; 26688 <__flatcc_fb_parse@@Base+0x1138>
   26904:	bl	13f38 <memcmp@plt>
   26908:	ldr	r1, [pc, #-644]	; 2668c <__flatcc_fb_parse@@Base+0x113c>
   2690c:	b	26874 <__flatcc_fb_parse@@Base+0x1324>
   26910:	mov	r1, r5
   26914:	mov	r2, #5
   26918:	ldr	r0, [pc, #-656]	; 26690 <__flatcc_fb_parse@@Base+0x1140>
   2691c:	bl	13f38 <memcmp@plt>
   26920:	ldr	r1, [pc, #-660]	; 26694 <__flatcc_fb_parse@@Base+0x1144>
   26924:	b	26874 <__flatcc_fb_parse@@Base+0x1324>
   26928:	mov	r1, r5
   2692c:	mov	r2, #5
   26930:	ldr	r0, [pc, #-672]	; 26698 <__flatcc_fb_parse@@Base+0x1148>
   26934:	bl	13f38 <memcmp@plt>
   26938:	cmp	r0, #0
   2693c:	movne	r1, #9
   26940:	mvneq	r1, #980	; 0x3d4
   26944:	b	25a70 <__flatcc_fb_parse@@Base+0x520>
   26948:	mov	r1, r5
   2694c:	mov	r2, #5
   26950:	ldr	r0, [pc, #-700]	; 2669c <__flatcc_fb_parse@@Base+0x114c>
   26954:	bl	13f38 <memcmp@plt>
   26958:	cmp	r0, #0
   2695c:	movne	r1, #9
   26960:	mvneq	r1, #976	; 0x3d0
   26964:	b	25a70 <__flatcc_fb_parse@@Base+0x520>
   26968:	mov	r1, r5
   2696c:	mov	r2, #5
   26970:	ldr	r0, [pc, #-728]	; 266a0 <__flatcc_fb_parse@@Base+0x1150>
   26974:	bl	13f38 <memcmp@plt>
   26978:	ldr	r1, [pc, #-732]	; 266a4 <__flatcc_fb_parse@@Base+0x1154>
   2697c:	b	26874 <__flatcc_fb_parse@@Base+0x1324>
   26980:	mov	r1, r5
   26984:	mov	r2, #6
   26988:	ldr	r0, [pc, #-744]	; 266a8 <__flatcc_fb_parse@@Base+0x1158>
   2698c:	bl	13f38 <memcmp@plt>
   26990:	ldr	r1, [pc, #-748]	; 266ac <__flatcc_fb_parse@@Base+0x115c>
   26994:	b	26874 <__flatcc_fb_parse@@Base+0x1324>
   26998:	mov	r1, r5
   2699c:	mov	r2, #6
   269a0:	ldr	r0, [pc, #-760]	; 266b0 <__flatcc_fb_parse@@Base+0x1160>
   269a4:	bl	13f38 <memcmp@plt>
   269a8:	ldr	r1, [pc, #-764]	; 266b4 <__flatcc_fb_parse@@Base+0x1164>
   269ac:	b	26874 <__flatcc_fb_parse@@Base+0x1324>
   269b0:	mov	r1, r5
   269b4:	mov	r2, #6
   269b8:	ldr	r0, [pc, #-776]	; 266b8 <__flatcc_fb_parse@@Base+0x1168>
   269bc:	bl	13f38 <memcmp@plt>
   269c0:	ldr	r1, [pc, #-780]	; 266bc <__flatcc_fb_parse@@Base+0x116c>
   269c4:	b	26874 <__flatcc_fb_parse@@Base+0x1324>
   269c8:	mov	r1, r5
   269cc:	mov	r2, #6
   269d0:	ldr	r0, [pc, #-792]	; 266c0 <__flatcc_fb_parse@@Base+0x1170>
   269d4:	bl	13f38 <memcmp@plt>
   269d8:	ldr	r1, [pc, #-796]	; 266c4 <__flatcc_fb_parse@@Base+0x1174>
   269dc:	b	26874 <__flatcc_fb_parse@@Base+0x1324>
   269e0:	mov	r1, r5
   269e4:	mov	r2, #6
   269e8:	ldr	r0, [pc, #-808]	; 266c8 <__flatcc_fb_parse@@Base+0x1178>
   269ec:	bl	13f38 <memcmp@plt>
   269f0:	ldr	r1, [pc, #-812]	; 266cc <__flatcc_fb_parse@@Base+0x117c>
   269f4:	b	26874 <__flatcc_fb_parse@@Base+0x1324>
   269f8:	mov	r1, r5
   269fc:	mov	r2, #7
   26a00:	ldr	r0, [pc, #-824]	; 266d0 <__flatcc_fb_parse@@Base+0x1180>
   26a04:	bl	13f38 <memcmp@plt>
   26a08:	ldr	r1, [pc, #-828]	; 266d4 <__flatcc_fb_parse@@Base+0x1184>
   26a0c:	b	26874 <__flatcc_fb_parse@@Base+0x1324>
   26a10:	mov	r1, r5
   26a14:	mov	r2, #7
   26a18:	ldr	r0, [pc, #-840]	; 266d8 <__flatcc_fb_parse@@Base+0x1188>
   26a1c:	bl	13f38 <memcmp@plt>
   26a20:	ldr	r1, [pc, #-844]	; 266dc <__flatcc_fb_parse@@Base+0x118c>
   26a24:	b	26874 <__flatcc_fb_parse@@Base+0x1324>
   26a28:	mov	r1, r5
   26a2c:	mov	r2, #7
   26a30:	ldr	r0, [pc, #-856]	; 266e0 <__flatcc_fb_parse@@Base+0x1190>
   26a34:	bl	13f38 <memcmp@plt>
   26a38:	ldr	r1, [pc, #-840]	; 266f8 <__flatcc_fb_parse@@Base+0x11a8>
   26a3c:	b	26874 <__flatcc_fb_parse@@Base+0x1324>
   26a40:	mov	r1, r5
   26a44:	mov	r2, #9
   26a48:	ldr	r0, [pc, #-876]	; 266e4 <__flatcc_fb_parse@@Base+0x1194>
   26a4c:	bl	13f38 <memcmp@plt>
   26a50:	ldr	r1, [pc, #-824]	; 26720 <__flatcc_fb_parse@@Base+0x11d0>
   26a54:	b	26874 <__flatcc_fb_parse@@Base+0x1324>
   26a58:	mov	r1, r5
   26a5c:	mov	r2, #9
   26a60:	ldr	r0, [pc, #-896]	; 266e8 <__flatcc_fb_parse@@Base+0x1198>
   26a64:	bl	13f38 <memcmp@plt>
   26a68:	cmp	r0, #0
   26a6c:	movne	r1, #9
   26a70:	mvneq	r1, #968	; 0x3c8
   26a74:	b	25a70 <__flatcc_fb_parse@@Base+0x520>
   26a78:	mov	r1, r5
   26a7c:	mov	r2, #11
   26a80:	ldr	r0, [pc, #-924]	; 266ec <__flatcc_fb_parse@@Base+0x119c>
   26a84:	bl	13f38 <memcmp@plt>
   26a88:	ldr	r1, [pc, #-800]	; 26770 <__flatcc_fb_parse@@Base+0x1220>
   26a8c:	b	26874 <__flatcc_fb_parse@@Base+0x1324>
   26a90:	mov	r1, r5
   26a94:	mov	r2, #14
   26a98:	ldr	r0, [pc, #-944]	; 266f0 <__flatcc_fb_parse@@Base+0x11a0>
   26a9c:	bl	13f38 <memcmp@plt>
   26aa0:	ldr	r1, [pc, #-892]	; 2672c <__flatcc_fb_parse@@Base+0x11dc>
   26aa4:	b	26874 <__flatcc_fb_parse@@Base+0x1324>
   26aa8:	mov	r1, r5
   26aac:	mov	r2, #15
   26ab0:	ldr	r0, [pc, #-964]	; 266f4 <__flatcc_fb_parse@@Base+0x11a4>
   26ab4:	bl	13f38 <memcmp@plt>
   26ab8:	cmp	r0, #0
   26abc:	movne	r1, #9
   26ac0:	mvneq	r1, #964	; 0x3c4
   26ac4:	b	25a70 <__flatcc_fb_parse@@Base+0x520>
   26ac8:	ldrb	r1, [r5]
   26acc:	cmp	r1, #0
   26ad0:	moveq	r3, r5
   26ad4:	moveq	r2, r3
   26ad8:	bne	25878 <__flatcc_fb_parse@@Base+0x328>
   26adc:	mov	r0, r4
   26ae0:	bl	240b4 <__flatcc_fb_default_error_out@@Base+0x20>
   26ae4:	ldr	r3, [r4, #40]	; 0x28
   26ae8:	ldr	r5, [r4, #20]
   26aec:	str	r3, [r4, #24]
   26af0:	str	r5, [r4, #40]	; 0x28
   26af4:	ldr	r0, [r4, #216]	; 0xd8
   26af8:	bl	13f8c <malloc@plt>
   26afc:	cmp	r0, #0
   26b00:	str	r0, [r4, #112]	; 0x70
   26b04:	bne	26b0c <__flatcc_fb_parse@@Base+0x15bc>
   26b08:	bl	140c4 <__assert_fail@plt+0x30>
   26b0c:	ldr	r3, [r5, #16]
   26b10:	cmn	r3, #964	; 0x3c4
   26b14:	bne	26b20 <__flatcc_fb_parse@@Base+0x15d0>
   26b18:	mov	r0, r4
   26b1c:	bl	24248 <__flatcc_fb_default_error_out@@Base+0x1b4>
   26b20:	ldr	r6, [r4, #40]	; 0x28
   26b24:	ldr	r5, [pc, #-1076]	; 266f8 <__flatcc_fb_parse@@Base+0x11a8>
   26b28:	ldr	r7, [pc, #-1076]	; 266fc <__flatcc_fb_parse@@Base+0x11ac>
   26b2c:	ldr	r8, [pc, #-1076]	; 26700 <__flatcc_fb_parse@@Base+0x11b0>
   26b30:	mov	r1, r5
   26b34:	mov	r0, r4
   26b38:	bl	242c8 <__flatcc_fb_default_error_out@@Base+0x234>
   26b3c:	cmp	r0, #0
   26b40:	beq	26b6c <__flatcc_fb_parse@@Base+0x161c>
   26b44:	ldr	r3, [r4, #140]	; 0x8c
   26b48:	cmp	r3, #0
   26b4c:	beq	26b60 <__flatcc_fb_parse@@Base+0x1610>
   26b50:	mov	r2, r7
   26b54:	mov	r1, r6
   26b58:	mov	r0, r4
   26b5c:	bl	24614 <__flatcc_error_report@@Base+0x1a0>
   26b60:	ldr	r3, [r4, #108]	; 0x6c
   26b64:	cmp	r3, #9
   26b68:	ble	26d68 <__flatcc_fb_parse@@Base+0x1818>
   26b6c:	ldr	r7, [r4, #40]	; 0x28
   26b70:	ldr	r9, [pc, #-1140]	; 26704 <__flatcc_fb_parse@@Base+0x11b4>
   26b74:	ldr	r3, [r7, #16]
   26b78:	cmp	r3, #0
   26b7c:	beq	27458 <__flatcc_fb_parse@@Base+0x1f08>
   26b80:	ldr	r3, [r4, #108]	; 0x6c
   26b84:	cmp	r3, #9
   26b88:	bgt	26f9c <__flatcc_fb_parse@@Base+0x1a4c>
   26b8c:	ldr	r1, [r4, #40]	; 0x28
   26b90:	ldr	r5, [r1, #16]
   26b94:	cmn	r5, #968	; 0x3c8
   26b98:	beq	2701c <__flatcc_fb_parse@@Base+0x1acc>
   26b9c:	bgt	26df4 <__flatcc_fb_parse@@Base+0x18a4>
   26ba0:	mvn	r3, #972	; 0x3cc
   26ba4:	cmp	r5, r3
   26ba8:	beq	270ec <__flatcc_fb_parse@@Base+0x1b9c>
   26bac:	cmn	r5, #972	; 0x3cc
   26bb0:	bge	26dcc <__flatcc_fb_parse@@Base+0x187c>
   26bb4:	sub	r3, r3, #10
   26bb8:	cmp	r5, r3
   26bbc:	beq	2714c <__flatcc_fb_parse@@Base+0x1bfc>
   26bc0:	cmn	r5, #976	; 0x3d0
   26bc4:	beq	27218 <__flatcc_fb_parse@@Base+0x1cc8>
   26bc8:	mvn	r3, #996	; 0x3e4
   26bcc:	cmp	r5, r3
   26bd0:	bne	26dec <__flatcc_fb_parse@@Base+0x189c>
   26bd4:	mov	r0, r4
   26bd8:	bl	24248 <__flatcc_fb_default_error_out@@Base+0x1b4>
   26bdc:	mov	r1, #128	; 0x80
   26be0:	mov	r0, r4
   26be4:	bl	24184 <__flatcc_fb_default_error_out@@Base+0xf0>
   26be8:	ldr	r3, [r4, #392]	; 0x188
   26bec:	str	r3, [r0]
   26bf0:	mov	r3, #3
   26bf4:	strh	r3, [r0, #8]
   26bf8:	ldr	r3, [r4, #544]	; 0x220
   26bfc:	mov	r5, r0
   26c00:	str	r0, [r4, #392]	; 0x188
   26c04:	str	r3, [r0, #12]
   26c08:	add	r0, r4, #36	; 0x24
   26c0c:	bl	24068 <__flatcc_fb_read_file@@Base+0xe8>
   26c10:	ldr	r3, [r4, #36]	; 0x24
   26c14:	ldr	r2, [pc, #-1300]	; 26708 <__flatcc_fb_parse@@Base+0x11b8>
   26c18:	str	r3, [r5, #32]
   26c1c:	mov	r3, #0
   26c20:	str	r3, [r4, #36]	; 0x24
   26c24:	mov	r1, #9
   26c28:	mov	r0, r4
   26c2c:	bl	24630 <__flatcc_error_report@@Base+0x1bc>
   26c30:	cmp	r0, #0
   26c34:	str	r0, [r5, #4]
   26c38:	beq	27210 <__flatcc_fb_parse@@Base+0x1cc0>
   26c3c:	mov	r1, #58	; 0x3a
   26c40:	mov	r0, r4
   26c44:	bl	242c8 <__flatcc_fb_default_error_out@@Base+0x234>
   26c48:	cmp	r0, #0
   26c4c:	beq	26ca0 <__flatcc_fb_parse@@Base+0x1750>
   26c50:	add	r1, r5, #40	; 0x28
   26c54:	mov	r0, r4
   26c58:	bl	24dfc <__flatcc_error_report@@Base+0x988>
   26c5c:	ldrh	r3, [r5, #48]	; 0x30
   26c60:	cmp	r3, #8
   26c64:	ldrne	r2, [pc, #-1372]	; 26710 <__flatcc_fb_parse@@Base+0x11c0>
   26c68:	ldrne	r1, [r5, #40]	; 0x28
   26c6c:	bne	26c98 <__flatcc_fb_parse@@Base+0x1748>
   26c70:	ldr	r1, [r5, #40]	; 0x28
   26c74:	ldr	r3, [r1, #16]
   26c78:	add	r3, r3, #996	; 0x3e4
   26c7c:	cmp	r3, #21
   26c80:	bhi	26ca0 <__flatcc_fb_parse@@Base+0x1750>
   26c84:	ldr	r2, [pc, #-1408]	; 2670c <__flatcc_fb_parse@@Base+0x11bc>
   26c88:	mov	r0, #1
   26c8c:	ands	r3, r2, r0, lsl r3
   26c90:	beq	26ca0 <__flatcc_fb_parse@@Base+0x1750>
   26c94:	ldr	r2, [pc, #-1420]	; 26710 <__flatcc_fb_parse@@Base+0x11c0>
   26c98:	mov	r0, r4
   26c9c:	bl	24614 <__flatcc_error_report@@Base+0x1a0>
   26ca0:	mov	r0, r4
   26ca4:	bl	24cec <__flatcc_error_report@@Base+0x878>
   26ca8:	ldr	r2, [pc, #-1436]	; 26714 <__flatcc_fb_parse@@Base+0x11c4>
   26cac:	mov	r1, #123	; 0x7b
   26cb0:	str	r0, [r5, #28]
   26cb4:	mov	r0, r4
   26cb8:	bl	24630 <__flatcc_error_report@@Base+0x1bc>
   26cbc:	subs	r8, r0, #0
   26cc0:	beq	27210 <__flatcc_fb_parse@@Base+0x1cc0>
   26cc4:	ldr	sl, [pc, #-1460]	; 26718 <__flatcc_fb_parse@@Base+0x11c8>
   26cc8:	ldr	fp, [pc, #-1352]	; 26788 <__flatcc_fb_parse@@Base+0x1238>
   26ccc:	add	r5, r5, #20
   26cd0:	mov	r2, sl
   26cd4:	mov	r1, #9
   26cd8:	mov	r0, r4
   26cdc:	bl	24630 <__flatcc_error_report@@Base+0x1bc>
   26ce0:	subs	r3, r0, #0
   26ce4:	str	r3, [sp, #12]
   26ce8:	beq	27210 <__flatcc_fb_parse@@Base+0x1cc0>
   26cec:	ldr	r2, [r4, #108]	; 0x6c
   26cf0:	cmp	r2, #9
   26cf4:	bgt	27210 <__flatcc_fb_parse@@Base+0x1cc0>
   26cf8:	mov	r1, r5
   26cfc:	mov	r0, r4
   26d00:	bl	2437c <__flatcc_fb_default_error_out@@Base+0x2e8>
   26d04:	ldr	r3, [sp, #12]
   26d08:	mov	r1, #61	; 0x3d
   26d0c:	str	r3, [r0, #4]
   26d10:	mov	r6, r0
   26d14:	mov	r0, r4
   26d18:	bl	242c8 <__flatcc_fb_default_error_out@@Base+0x234>
   26d1c:	cmp	r0, #0
   26d20:	beq	26d38 <__flatcc_fb_parse@@Base+0x17e8>
   26d24:	mov	r3, fp
   26d28:	mov	r2, #0
   26d2c:	add	r1, r6, #48	; 0x30
   26d30:	mov	r0, r4
   26d34:	bl	24848 <__flatcc_error_report@@Base+0x3d4>
   26d38:	mov	r1, #44	; 0x2c
   26d3c:	mov	r0, r4
   26d40:	bl	242c8 <__flatcc_fb_default_error_out@@Base+0x234>
   26d44:	cmp	r0, #0
   26d48:	beq	271f0 <__flatcc_fb_parse@@Base+0x1ca0>
   26d4c:	ldr	r3, [r4, #40]	; 0x28
   26d50:	ldr	r3, [r3, #16]
   26d54:	cmp	r3, #125	; 0x7d
   26d58:	beq	271f0 <__flatcc_fb_parse@@Base+0x1ca0>
   26d5c:	mov	r3, #0
   26d60:	str	r3, [r4, #36]	; 0x24
   26d64:	b	26cd0 <__flatcc_fb_parse@@Base+0x1780>
   26d68:	mov	r2, r8
   26d6c:	mov	r1, #19
   26d70:	mov	r0, r4
   26d74:	bl	24630 <__flatcc_error_report@@Base+0x1bc>
   26d78:	cmp	r0, #0
   26d7c:	bne	26d8c <__flatcc_fb_parse@@Base+0x183c>
   26d80:	mov	r1, #59	; 0x3b
   26d84:	mov	r0, r4
   26d88:	bl	24338 <__flatcc_fb_default_error_out@@Base+0x2a4>
   26d8c:	mov	r1, #24
   26d90:	mov	r0, r4
   26d94:	bl	24184 <__flatcc_fb_default_error_out@@Base+0xf0>
   26d98:	ldr	r3, [r4, #352]	; 0x160
   26d9c:	add	r1, r0, #8
   26da0:	str	r3, [r0]
   26da4:	str	r0, [r4, #352]	; 0x160
   26da8:	mov	r0, r4
   26dac:	bl	246f8 <__flatcc_error_report@@Base+0x284>
   26db0:	ldr	r2, [pc, #-1692]	; 2671c <__flatcc_fb_parse@@Base+0x11cc>
   26db4:	mov	r1, #59	; 0x3b
   26db8:	mov	r0, r4
   26dbc:	bl	24630 <__flatcc_error_report@@Base+0x1bc>
   26dc0:	b	26b30 <__flatcc_fb_parse@@Base+0x15e0>
   26dc4:	mov	r7, r3
   26dc8:	b	26b74 <__flatcc_fb_parse@@Base+0x1624>
   26dcc:	ldr	r3, [pc, #-1716]	; 26720 <__flatcc_fb_parse@@Base+0x11d0>
   26dd0:	cmp	r5, r3
   26dd4:	beq	27074 <__flatcc_fb_parse@@Base+0x1b24>
   26dd8:	bgt	26ee8 <__flatcc_fb_parse@@Base+0x1998>
   26ddc:	sub	r3, r3, #1
   26de0:	cmp	r5, r3
   26de4:	ldreq	r2, [pc, #-1736]	; 26724 <__flatcc_fb_parse@@Base+0x11d4>
   26de8:	beq	27410 <__flatcc_fb_parse@@Base+0x1ec0>
   26dec:	ldr	r2, [pc, #-1740]	; 26728 <__flatcc_fb_parse@@Base+0x11d8>
   26df0:	b	27410 <__flatcc_fb_parse@@Base+0x1ec0>
   26df4:	cmp	r5, #5
   26df8:	beq	2741c <__flatcc_fb_parse@@Base+0x1ecc>
   26dfc:	bgt	26eb8 <__flatcc_fb_parse@@Base+0x1968>
   26e00:	ldr	r3, [pc, #-1756]	; 2672c <__flatcc_fb_parse@@Base+0x11dc>
   26e04:	cmp	r5, r3
   26e08:	beq	26fa8 <__flatcc_fb_parse@@Base+0x1a58>
   26e0c:	blt	27198 <__flatcc_fb_parse@@Base+0x1c48>
   26e10:	mvn	r3, #964	; 0x3c4
   26e14:	cmp	r5, r3
   26e18:	bne	26dec <__flatcc_fb_parse@@Base+0x189c>
   26e1c:	add	r5, r4, #360	; 0x168
   26e20:	mov	r0, r4
   26e24:	bl	24248 <__flatcc_fb_default_error_out@@Base+0x1b4>
   26e28:	ldrh	r3, [r5, #8]
   26e2c:	cmp	r3, #0
   26e30:	beq	26e58 <__flatcc_fb_parse@@Base+0x1908>
   26e34:	ldr	r3, [r4, #364]	; 0x16c
   26e38:	ldr	r2, [pc, #-1808]	; 26730 <__flatcc_fb_parse@@Base+0x11e0>
   26e3c:	str	r3, [sp, #4]
   26e40:	ldr	r3, [r4, #360]	; 0x168
   26e44:	ldr	r1, [r4, #40]	; 0x28
   26e48:	str	r3, [sp]
   26e4c:	mov	r0, r4
   26e50:	mov	r3, #0
   26e54:	bl	24474 <__flatcc_error_report@@Base>
   26e58:	ldr	r2, [pc, #-1836]	; 26734 <__flatcc_fb_parse@@Base+0x11e4>
   26e5c:	mov	r1, #19
   26e60:	mov	r0, r4
   26e64:	bl	24630 <__flatcc_error_report@@Base+0x1bc>
   26e68:	cmp	r0, #0
   26e6c:	beq	26f34 <__flatcc_fb_parse@@Base+0x19e4>
   26e70:	mov	r1, r5
   26e74:	mov	r0, r4
   26e78:	ldr	r6, [r4, #40]	; 0x28
   26e7c:	bl	246f8 <__flatcc_error_report@@Base+0x284>
   26e80:	ldr	r3, [r4, #360]	; 0x168
   26e84:	cmp	r3, #0
   26e88:	beq	26eb0 <__flatcc_fb_parse@@Base+0x1960>
   26e8c:	ldr	r3, [r4, #364]	; 0x16c
   26e90:	cmp	r3, #4
   26e94:	beq	26eb0 <__flatcc_fb_parse@@Base+0x1960>
   26e98:	mov	r3, #1
   26e9c:	strh	r3, [r5, #8]
   26ea0:	ldr	r2, [pc, #-1904]	; 26738 <__flatcc_fb_parse@@Base+0x11e8>
   26ea4:	mov	r1, r6
   26ea8:	mov	r0, r4
   26eac:	bl	24614 <__flatcc_error_report@@Base+0x1a0>
   26eb0:	ldr	r2, [pc, #-1916]	; 2673c <__flatcc_fb_parse@@Base+0x11ec>
   26eb4:	b	2700c <__flatcc_fb_parse@@Base+0x1abc>
   26eb8:	cmp	r5, #27
   26ebc:	beq	2743c <__flatcc_fb_parse@@Base+0x1eec>
   26ec0:	cmp	r5, #123	; 0x7b
   26ec4:	beq	2740c <__flatcc_fb_parse@@Base+0x1ebc>
   26ec8:	cmp	r5, #7
   26ecc:	bne	26dec <__flatcc_fb_parse@@Base+0x189c>
   26ed0:	mov	r3, #1
   26ed4:	str	r3, [sp, #4]
   26ed8:	str	r9, [sp]
   26edc:	mov	r3, #0
   26ee0:	ldr	r2, [pc, #-1960]	; 26740 <__flatcc_fb_parse@@Base+0x11f0>
   26ee4:	b	27430 <__flatcc_fb_parse@@Base+0x1ee0>
   26ee8:	mov	r0, r4
   26eec:	bl	24248 <__flatcc_fb_default_error_out@@Base+0x1b4>
   26ef0:	mov	r6, #0
   26ef4:	mov	r1, #59	; 0x3b
   26ef8:	mov	r0, r4
   26efc:	ldr	r5, [r4, #40]	; 0x28
   26f00:	str	r6, [sp, #20]
   26f04:	bl	242c8 <__flatcc_fb_default_error_out@@Base+0x234>
   26f08:	cmp	r0, r6
   26f0c:	cmpne	r5, r6
   26f10:	strne	r6, [r4, #544]	; 0x220
   26f14:	bne	26f74 <__flatcc_fb_parse@@Base+0x1a24>
   26f18:	ldr	r1, [r4, #40]	; 0x28
   26f1c:	ldr	r3, [r1, #16]
   26f20:	cmp	r3, #9
   26f24:	beq	26f44 <__flatcc_fb_parse@@Base+0x19f4>
   26f28:	ldr	r2, [pc, #-2028]	; 26744 <__flatcc_fb_parse@@Base+0x11f4>
   26f2c:	mov	r0, r4
   26f30:	bl	24614 <__flatcc_error_report@@Base+0x1a0>
   26f34:	mov	r1, #59	; 0x3b
   26f38:	mov	r0, r4
   26f3c:	bl	24338 <__flatcc_fb_default_error_out@@Base+0x2a4>
   26f40:	b	26f74 <__flatcc_fb_parse@@Base+0x1a24>
   26f44:	add	r1, sp, #20
   26f48:	mov	r0, r4
   26f4c:	bl	24660 <__flatcc_error_report@@Base+0x1ec>
   26f50:	mov	r3, r5
   26f54:	ldr	r2, [pc, #-2068]	; 26748 <__flatcc_fb_parse@@Base+0x11f8>
   26f58:	mov	r1, #59	; 0x3b
   26f5c:	mov	r0, r4
   26f60:	bl	24ca4 <__flatcc_error_report@@Base+0x830>
   26f64:	ldr	r1, [sp, #20]
   26f68:	mov	r0, r4
   26f6c:	bl	241ec <__flatcc_fb_default_error_out@@Base+0x158>
   26f70:	str	r0, [r4, #544]	; 0x220
   26f74:	ldr	r3, [r4, #40]	; 0x28
   26f78:	cmp	r7, r3
   26f7c:	bne	26dc4 <__flatcc_fb_parse@@Base+0x1874>
   26f80:	ldr	r3, [r4, #108]	; 0x6c
   26f84:	cmp	r3, #0
   26f88:	bne	26f9c <__flatcc_fb_parse@@Base+0x1a4c>
   26f8c:	ldr	r2, [pc, #-2120]	; 2674c <__flatcc_fb_parse@@Base+0x11fc>
   26f90:	mov	r1, r7
   26f94:	mov	r0, r4
   26f98:	bl	24614 <__flatcc_error_report@@Base+0x1a0>
   26f9c:	ldr	r0, [r4, #108]	; 0x6c
   26fa0:	add	sp, sp, #28
   26fa4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   26fa8:	add	r5, r4, #376	; 0x178
   26fac:	mov	r0, r4
   26fb0:	bl	24248 <__flatcc_fb_default_error_out@@Base+0x1b4>
   26fb4:	ldrh	r3, [r5, #8]
   26fb8:	cmp	r3, #2
   26fbc:	bne	26fe4 <__flatcc_fb_parse@@Base+0x1a94>
   26fc0:	ldr	r3, [r4, #380]	; 0x17c
   26fc4:	ldr	r2, [pc, #-2172]	; 26750 <__flatcc_fb_parse@@Base+0x1200>
   26fc8:	str	r3, [sp, #4]
   26fcc:	ldr	r3, [r4, #376]	; 0x178
   26fd0:	ldr	r1, [r4, #40]	; 0x28
   26fd4:	str	r3, [sp]
   26fd8:	mov	r0, r4
   26fdc:	mov	r3, #0
   26fe0:	bl	24474 <__flatcc_error_report@@Base>
   26fe4:	ldr	r2, [pc, #-2200]	; 26754 <__flatcc_fb_parse@@Base+0x1204>
   26fe8:	mov	r1, #19
   26fec:	mov	r0, r4
   26ff0:	bl	24630 <__flatcc_error_report@@Base+0x1bc>
   26ff4:	cmp	r0, #0
   26ff8:	beq	26f34 <__flatcc_fb_parse@@Base+0x19e4>
   26ffc:	mov	r1, r5
   27000:	mov	r0, r4
   27004:	bl	246f8 <__flatcc_error_report@@Base+0x284>
   27008:	ldr	r2, [pc, #-2232]	; 26758 <__flatcc_fb_parse@@Base+0x1208>
   2700c:	mov	r1, #59	; 0x3b
   27010:	mov	r0, r4
   27014:	bl	24630 <__flatcc_error_report@@Base+0x1bc>
   27018:	b	26f74 <__flatcc_fb_parse@@Base+0x1a24>
   2701c:	mov	r0, r4
   27020:	bl	24248 <__flatcc_fb_default_error_out@@Base+0x1b4>
   27024:	ldr	r3, [r4, #400]	; 0x190
   27028:	add	r6, r4, #400	; 0x190
   2702c:	cmp	r3, #0
   27030:	ldr	r5, [r4, #40]	; 0x28
   27034:	beq	27048 <__flatcc_fb_parse@@Base+0x1af8>
   27038:	ldr	r2, [pc, #-2276]	; 2675c <__flatcc_fb_parse@@Base+0x120c>
   2703c:	mov	r1, r5
   27040:	mov	r0, r4
   27044:	bl	24614 <__flatcc_error_report@@Base+0x1a0>
   27048:	mov	r1, r6
   2704c:	mov	r0, r4
   27050:	bl	24660 <__flatcc_error_report@@Base+0x1ec>
   27054:	ldr	r3, [r4, #544]	; 0x220
   27058:	ldr	r2, [pc, #-2304]	; 26760 <__flatcc_fb_parse@@Base+0x1210>
   2705c:	str	r3, [r4, #408]	; 0x198
   27060:	mov	r1, #59	; 0x3b
   27064:	mov	r3, r5
   27068:	mov	r0, r4
   2706c:	bl	24ca4 <__flatcc_error_report@@Base+0x830>
   27070:	b	26f74 <__flatcc_fb_parse@@Base+0x1a24>
   27074:	mov	r0, r4
   27078:	bl	24248 <__flatcc_fb_default_error_out@@Base+0x1b4>
   2707c:	mov	r1, #32
   27080:	mov	r0, r4
   27084:	bl	24184 <__flatcc_fb_default_error_out@@Base+0xf0>
   27088:	ldr	r3, [r4, #356]	; 0x164
   2708c:	ldr	r2, [pc, #-2352]	; 26764 <__flatcc_fb_parse@@Base+0x1214>
   27090:	mov	r1, #19
   27094:	ldr	r6, [r4, #40]	; 0x28
   27098:	str	r3, [r0]
   2709c:	mov	r5, r0
   270a0:	str	r0, [r4, #356]	; 0x164
   270a4:	mov	r0, r4
   270a8:	bl	24630 <__flatcc_error_report@@Base+0x1bc>
   270ac:	cmp	r0, #0
   270b0:	beq	270e4 <__flatcc_fb_parse@@Base+0x1b94>
   270b4:	add	r1, r5, #8
   270b8:	mov	r0, r4
   270bc:	bl	246f8 <__flatcc_error_report@@Base+0x284>
   270c0:	ldr	r3, [r5, #12]
   270c4:	cmp	r3, #0
   270c8:	bne	270e4 <__flatcc_fb_parse@@Base+0x1b94>
   270cc:	str	r3, [sp, #4]
   270d0:	str	r3, [sp]
   270d4:	ldr	r2, [pc, #-2420]	; 26768 <__flatcc_fb_parse@@Base+0x1218>
   270d8:	mov	r1, r6
   270dc:	mov	r0, r4
   270e0:	bl	24474 <__flatcc_error_report@@Base>
   270e4:	ldr	r2, [pc, #-2432]	; 2676c <__flatcc_fb_parse@@Base+0x121c>
   270e8:	b	2700c <__flatcc_fb_parse@@Base+0x1abc>
   270ec:	mov	r0, r4
   270f0:	bl	24248 <__flatcc_fb_default_error_out@@Base+0x1b4>
   270f4:	mov	r1, #128	; 0x80
   270f8:	mov	r0, r4
   270fc:	bl	24184 <__flatcc_fb_default_error_out@@Base+0xf0>
   27100:	ldr	r3, [r4, #392]	; 0x188
   27104:	str	r3, [r0]
   27108:	mov	r3, #1
   2710c:	strh	r3, [r0, #8]
   27110:	ldr	r3, [r4, #544]	; 0x220
   27114:	str	r0, [r4, #392]	; 0x188
   27118:	mov	r6, r0
   2711c:	str	r3, [r0, #12]
   27120:	add	r0, r4, #36	; 0x24
   27124:	bl	24068 <__flatcc_fb_read_file@@Base+0xe8>
   27128:	ldr	r3, [r4, #36]	; 0x24
   2712c:	str	r3, [r6, #32]
   27130:	mov	r3, #0
   27134:	str	r3, [r4, #36]	; 0x24
   27138:	mov	r2, r5
   2713c:	mov	r1, r6
   27140:	mov	r0, r4
   27144:	bl	24ff8 <__flatcc_error_report@@Base+0xb84>
   27148:	b	26f74 <__flatcc_fb_parse@@Base+0x1a24>
   2714c:	mov	r0, r4
   27150:	bl	24248 <__flatcc_fb_default_error_out@@Base+0x1b4>
   27154:	mov	r1, #128	; 0x80
   27158:	mov	r0, r4
   2715c:	bl	24184 <__flatcc_fb_default_error_out@@Base+0xf0>
   27160:	ldr	r3, [r4, #392]	; 0x188
   27164:	mov	r8, #0
   27168:	str	r3, [r0]
   2716c:	ldr	r3, [r4, #544]	; 0x220
   27170:	strh	r8, [r0, #8]
   27174:	mov	r6, r0
   27178:	str	r0, [r4, #392]	; 0x188
   2717c:	str	r3, [r0, #12]
   27180:	add	r0, r4, #36	; 0x24
   27184:	bl	24068 <__flatcc_fb_read_file@@Base+0xe8>
   27188:	ldr	r3, [r4, #36]	; 0x24
   2718c:	str	r3, [r6, #32]
   27190:	str	r8, [r4, #36]	; 0x24
   27194:	b	27138 <__flatcc_fb_parse@@Base+0x1be8>
   27198:	mov	r0, r4
   2719c:	bl	24248 <__flatcc_fb_default_error_out@@Base+0x1b4>
   271a0:	mov	r1, #128	; 0x80
   271a4:	mov	r0, r4
   271a8:	bl	24184 <__flatcc_fb_default_error_out@@Base+0xf0>
   271ac:	ldr	r3, [r4, #392]	; 0x188
   271b0:	str	r3, [r0]
   271b4:	mov	r3, #2
   271b8:	strh	r3, [r0, #8]
   271bc:	ldr	r3, [r4, #544]	; 0x220
   271c0:	mov	r5, r0
   271c4:	str	r0, [r4, #392]	; 0x188
   271c8:	str	r3, [r0, #12]
   271cc:	add	r0, r4, #36	; 0x24
   271d0:	bl	24068 <__flatcc_fb_read_file@@Base+0xe8>
   271d4:	ldr	r3, [r4, #36]	; 0x24
   271d8:	ldr	r2, [pc, #-2672]	; 26770 <__flatcc_fb_parse@@Base+0x1220>
   271dc:	str	r3, [r5, #32]
   271e0:	mov	r3, #0
   271e4:	str	r3, [r4, #36]	; 0x24
   271e8:	mov	r1, r5
   271ec:	b	27140 <__flatcc_fb_parse@@Base+0x1bf0>
   271f0:	mov	r3, r8
   271f4:	ldr	r2, [pc, #-2696]	; 26774 <__flatcc_fb_parse@@Base+0x1224>
   271f8:	mov	r1, #125	; 0x7d
   271fc:	mov	r0, r4
   27200:	bl	24ca4 <__flatcc_error_report@@Base+0x830>
   27204:	mov	r0, r5
   27208:	bl	24068 <__flatcc_fb_read_file@@Base+0xe8>
   2720c:	b	26f74 <__flatcc_fb_parse@@Base+0x1a24>
   27210:	mov	r1, #125	; 0x7d
   27214:	b	26f38 <__flatcc_fb_parse@@Base+0x19e8>
   27218:	mov	r0, r4
   2721c:	bl	24248 <__flatcc_fb_default_error_out@@Base+0x1b4>
   27220:	mov	r1, #128	; 0x80
   27224:	mov	r0, r4
   27228:	bl	24184 <__flatcc_fb_default_error_out@@Base+0xf0>
   2722c:	ldr	r3, [r4, #392]	; 0x188
   27230:	str	r3, [r0]
   27234:	mov	r3, #4
   27238:	strh	r3, [r0, #8]
   2723c:	ldr	r3, [r4, #544]	; 0x220
   27240:	mov	r5, r0
   27244:	str	r0, [r4, #392]	; 0x188
   27248:	str	r3, [r0, #12]
   2724c:	add	r0, r4, #36	; 0x24
   27250:	bl	24068 <__flatcc_fb_read_file@@Base+0xe8>
   27254:	ldr	r3, [r4, #36]	; 0x24
   27258:	ldr	r2, [pc, #-2792]	; 26778 <__flatcc_fb_parse@@Base+0x1228>
   2725c:	str	r3, [r5, #32]
   27260:	mov	r3, #0
   27264:	str	r3, [r4, #36]	; 0x24
   27268:	mov	r1, #9
   2726c:	mov	r0, r4
   27270:	bl	24630 <__flatcc_error_report@@Base+0x1bc>
   27274:	cmp	r0, #0
   27278:	str	r0, [r5, #4]
   2727c:	beq	272cc <__flatcc_fb_parse@@Base+0x1d7c>
   27280:	mov	r0, r4
   27284:	bl	24cec <__flatcc_error_report@@Base+0x878>
   27288:	ldr	r2, [pc, #-2836]	; 2677c <__flatcc_fb_parse@@Base+0x122c>
   2728c:	mov	r1, #123	; 0x7b
   27290:	str	r0, [r5, #28]
   27294:	mov	r0, r4
   27298:	bl	24630 <__flatcc_error_report@@Base+0x1bc>
   2729c:	subs	r3, r0, #0
   272a0:	str	r3, [sp, #12]
   272a4:	beq	272cc <__flatcc_fb_parse@@Base+0x1d7c>
   272a8:	mov	fp, #1
   272ac:	ldr	sl, [r4, #40]	; 0x28
   272b0:	ldr	r2, [sl, #16]
   272b4:	cmp	r2, #9
   272b8:	beq	272d8 <__flatcc_fb_parse@@Base+0x1d88>
   272bc:	ldr	r2, [pc, #-2884]	; 26780 <__flatcc_fb_parse@@Base+0x1230>
   272c0:	mov	r1, sl
   272c4:	mov	r0, r4
   272c8:	bl	24614 <__flatcc_error_report@@Base+0x1a0>
   272cc:	mov	r0, r4
   272d0:	bl	242ec <__flatcc_fb_default_error_out@@Base+0x258>
   272d4:	b	26f74 <__flatcc_fb_parse@@Base+0x1a24>
   272d8:	ldr	r2, [r4, #108]	; 0x6c
   272dc:	cmp	r2, #9
   272e0:	bgt	272cc <__flatcc_fb_parse@@Base+0x1d7c>
   272e4:	add	r8, r5, #20
   272e8:	mov	r1, r8
   272ec:	mov	r0, r4
   272f0:	bl	2437c <__flatcc_fb_default_error_out@@Base+0x2e8>
   272f4:	add	r1, sp, #20
   272f8:	mov	r6, r0
   272fc:	mov	r0, r4
   27300:	bl	24660 <__flatcc_error_report@@Base+0x1ec>
   27304:	mov	r1, #12
   27308:	ldr	r2, [sp, #20]
   2730c:	strh	r1, [r6, #24]
   27310:	mov	r1, #0
   27314:	str	r2, [r6, #16]
   27318:	ldr	r0, [r2]
   2731c:	cmp	r0, #0
   27320:	bne	273cc <__flatcc_fb_parse@@Base+0x1e7c>
   27324:	cmp	r1, #0
   27328:	strne	r2, [sp, #20]
   2732c:	ldr	r2, [r2, #4]
   27330:	mov	r1, #58	; 0x3a
   27334:	str	r2, [r6, #4]
   27338:	mov	r0, r4
   2733c:	bl	242c8 <__flatcc_fb_default_error_out@@Base+0x234>
   27340:	cmp	r0, #0
   27344:	beq	27374 <__flatcc_fb_parse@@Base+0x1e24>
   27348:	ldr	r2, [r6, #16]
   2734c:	ldr	r2, [r2]
   27350:	cmp	r2, #0
   27354:	beq	27368 <__flatcc_fb_parse@@Base+0x1e18>
   27358:	ldr	r2, [pc, #-3036]	; 26784 <__flatcc_fb_parse@@Base+0x1234>
   2735c:	mov	r1, sl
   27360:	mov	r0, r4
   27364:	bl	24614 <__flatcc_error_report@@Base+0x1a0>
   27368:	add	r1, r6, #16
   2736c:	mov	r0, r4
   27370:	bl	24dfc <__flatcc_error_report@@Base+0x988>
   27374:	mov	r1, #61	; 0x3d
   27378:	mov	r0, r4
   2737c:	bl	242c8 <__flatcc_fb_default_error_out@@Base+0x234>
   27380:	cmp	r0, #0
   27384:	beq	2739c <__flatcc_fb_parse@@Base+0x1e4c>
   27388:	ldr	r3, [pc, #-3080]	; 26788 <__flatcc_fb_parse@@Base+0x1238>
   2738c:	mov	r2, #0
   27390:	add	r1, r6, #48	; 0x30
   27394:	mov	r0, r4
   27398:	bl	24848 <__flatcc_error_report@@Base+0x3d4>
   2739c:	mov	r1, #44	; 0x2c
   273a0:	mov	r0, r4
   273a4:	bl	242c8 <__flatcc_fb_default_error_out@@Base+0x234>
   273a8:	cmp	r0, #0
   273ac:	beq	273d8 <__flatcc_fb_parse@@Base+0x1e88>
   273b0:	ldr	r3, [r4, #40]	; 0x28
   273b4:	ldr	r3, [r3, #16]
   273b8:	cmp	r3, #125	; 0x7d
   273bc:	beq	273d8 <__flatcc_fb_parse@@Base+0x1e88>
   273c0:	mov	r3, #0
   273c4:	str	r3, [r4, #36]	; 0x24
   273c8:	b	272ac <__flatcc_fb_parse@@Base+0x1d5c>
   273cc:	mov	r1, fp
   273d0:	mov	r2, r0
   273d4:	b	27318 <__flatcc_fb_parse@@Base+0x1dc8>
   273d8:	ldr	r3, [sp, #12]
   273dc:	ldr	r2, [pc, #-3160]	; 2678c <__flatcc_fb_parse@@Base+0x123c>
   273e0:	mov	r1, #125	; 0x7d
   273e4:	mov	r0, r4
   273e8:	bl	24ca4 <__flatcc_error_report@@Base+0x830>
   273ec:	mov	r0, r8
   273f0:	bl	24068 <__flatcc_fb_read_file@@Base+0xe8>
   273f4:	mov	r1, r8
   273f8:	mov	r0, r4
   273fc:	bl	2437c <__flatcc_fb_default_error_out@@Base+0x2e8>
   27400:	add	r3, r4, #68	; 0x44
   27404:	str	r3, [r0, #4]
   27408:	b	26f74 <__flatcc_fb_parse@@Base+0x1a24>
   2740c:	ldr	r2, [pc, #-3204]	; 26790 <__flatcc_fb_parse@@Base+0x1240>
   27410:	mov	r0, r4
   27414:	bl	24614 <__flatcc_error_report@@Base+0x1a0>
   27418:	b	26f74 <__flatcc_fb_parse@@Base+0x1a24>
   2741c:	mov	r3, #1
   27420:	ldr	r2, [pc, #-3220]	; 26794 <__flatcc_fb_parse@@Base+0x1244>
   27424:	str	r3, [sp, #4]
   27428:	mov	r3, #0
   2742c:	str	r9, [sp]
   27430:	mov	r0, r4
   27434:	bl	24474 <__flatcc_error_report@@Base>
   27438:	b	26f74 <__flatcc_fb_parse@@Base+0x1a24>
   2743c:	mov	r3, #5
   27440:	str	r3, [sp, #4]
   27444:	ldr	r3, [pc, #-3252]	; 26798 <__flatcc_fb_parse@@Base+0x1248>
   27448:	ldr	r2, [pc, #-3252]	; 2679c <__flatcc_fb_parse@@Base+0x124c>
   2744c:	str	r3, [sp]
   27450:	mov	r3, #0
   27454:	b	27430 <__flatcc_fb_parse@@Base+0x1ee0>
   27458:	ldr	r2, [r4, #356]	; 0x164
   2745c:	cmp	r2, #0
   27460:	bne	27474 <__flatcc_fb_parse@@Base+0x1f24>
   27464:	str	r3, [r4, #356]	; 0x164
   27468:	add	r0, r4, #392	; 0x188
   2746c:	bl	24068 <__flatcc_fb_read_file@@Base+0xe8>
   27470:	b	26f9c <__flatcc_fb_parse@@Base+0x1a4c>
   27474:	ldr	r1, [r2]
   27478:	str	r3, [r2]
   2747c:	mov	r3, r2
   27480:	mov	r2, r1
   27484:	b	2745c <__flatcc_fb_parse@@Base+0x1f0c>
   27488:	cmp	r7, r6
   2748c:	mov	r5, r7
   27490:	bne	25844 <__flatcc_fb_parse@@Base+0x2f4>
   27494:	b	2585c <__flatcc_fb_parse@@Base+0x30c>
   27498:	cmp	r7, r6
   2749c:	bne	2594c <__flatcc_fb_parse@@Base+0x3fc>
   274a0:	mov	r5, r7
   274a4:	b	2585c <__flatcc_fb_parse@@Base+0x30c>
   274a8:	ldrb	r3, [r3]
   274ac:	udf	#0

000274b0 <__flatcc_fb_clear_parser@@Base>:
   274b0:	push	{r4, r5, r6, lr}
   274b4:	mov	r4, r0
   274b8:	ldr	r5, [r0, #392]	; 0x188
   274bc:	cmp	r5, #0
   274c0:	bne	2757c <__flatcc_fb_clear_parser@@Base+0xcc>
   274c4:	add	r0, r4, #448	; 0x1c0
   274c8:	bl	23a68 <fb_schema_table_clear@@Base>
   274cc:	add	r0, r4, #432	; 0x1b0
   274d0:	bl	2e438 <fb_name_table_clear@@Base>
   274d4:	add	r0, r4, #524	; 0x20c
   274d8:	bl	22934 <ptr_set_clear@@Base>
   274dc:	ldr	r0, [r4, #112]	; 0x70
   274e0:	cmp	r0, #0
   274e4:	beq	274ec <__flatcc_fb_clear_parser@@Base+0x3c>
   274e8:	bl	13f14 <free@plt>
   274ec:	ldr	r0, [r4, #20]
   274f0:	cmp	r0, #0
   274f4:	beq	274fc <__flatcc_fb_clear_parser@@Base+0x4c>
   274f8:	bl	13f14 <free@plt>
   274fc:	ldr	r0, [r4, #512]	; 0x200
   27500:	cmp	r0, #0
   27504:	beq	2750c <__flatcc_fb_clear_parser@@Base+0x5c>
   27508:	bl	13f14 <free@plt>
   2750c:	ldr	r0, [r4, #516]	; 0x204
   27510:	cmp	r0, #0
   27514:	beq	2751c <__flatcc_fb_clear_parser@@Base+0x6c>
   27518:	bl	13f14 <free@plt>
   2751c:	ldr	r0, [r4, #520]	; 0x208
   27520:	cmp	r0, #0
   27524:	beq	2752c <__flatcc_fb_clear_parser@@Base+0x7c>
   27528:	bl	13f14 <free@plt>
   2752c:	ldr	r0, [r4, #548]	; 0x224
   27530:	cmp	r0, #0
   27534:	beq	2753c <__flatcc_fb_clear_parser@@Base+0x8c>
   27538:	bl	13f14 <free@plt>
   2753c:	add	r0, r4, #416	; 0x1a0
   27540:	mov	r2, #0
   27544:	ldr	r1, [pc, #100]	; 275b0 <__flatcc_fb_clear_parser@@Base+0x100>
   27548:	bl	2353c <fb_scope_table_destroy@@Base>
   2754c:	ldr	r0, [r4, #48]	; 0x30
   27550:	cmp	r0, #0
   27554:	bne	275a0 <__flatcc_fb_clear_parser@@Base+0xf0>
   27558:	ldr	r0, [r4, #16]
   2755c:	cmp	r0, #0
   27560:	beq	27568 <__flatcc_fb_clear_parser@@Base+0xb8>
   27564:	bl	13f14 <free@plt>
   27568:	mov	r0, r4
   2756c:	mov	r2, #560	; 0x230
   27570:	mov	r1, #0
   27574:	pop	{r4, r5, r6, lr}
   27578:	b	13fec <memset@plt>
   2757c:	ldrh	r3, [r5, #8]
   27580:	cmp	r3, #4
   27584:	bhi	27598 <__flatcc_fb_clear_parser@@Base+0xe8>
   27588:	add	r0, r5, #56	; 0x38
   2758c:	bl	22e48 <fb_symbol_table_clear@@Base>
   27590:	add	r0, r5, #72	; 0x48
   27594:	bl	2e9a8 <fb_value_set_clear@@Base>
   27598:	ldr	r5, [r5]
   2759c:	b	274bc <__flatcc_fb_clear_parser@@Base+0xc>
   275a0:	ldr	r5, [r0]
   275a4:	bl	13f14 <free@plt>
   275a8:	mov	r0, r5
   275ac:	b	27550 <__flatcc_fb_clear_parser@@Base+0xa0>
   275b0:	andeq	r4, r2, ip, lsr #1
   275b4:	mov	ip, #0
   275b8:	push	{r0, r1, r2, lr}
   275bc:	str	ip, [sp, #4]
   275c0:	str	ip, [sp]
   275c4:	bl	24474 <__flatcc_error_report@@Base>
   275c8:	add	sp, sp, #12
   275cc:	pop	{pc}		; (ldr pc, [sp], #4)
   275d0:	mov	r3, #0
   275d4:	b	275b4 <__flatcc_fb_clear_parser@@Base+0x104>
   275d8:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   275dc:	mov	r5, r0
   275e0:	mov	r4, r1
   275e4:	mov	r9, r2
   275e8:	mov	r1, #0
   275ec:	mov	r2, #48	; 0x30
   275f0:	mov	r0, r3
   275f4:	mov	r8, r3
   275f8:	bl	13fec <memset@plt>
   275fc:	ldr	sl, [pc, #312]	; 2773c <__flatcc_fb_clear_parser@@Base+0x28c>
   27600:	ldr	fp, [pc, #312]	; 27740 <__flatcc_fb_clear_parser@@Base+0x290>
   27604:	mov	r7, #100	; 0x64
   27608:	mov	r6, #0
   2760c:	cmp	r4, #0
   27610:	cmpne	r7, #0
   27614:	bne	27638 <__flatcc_fb_clear_parser@@Base+0x188>
   27618:	cmp	r4, #0
   2761c:	beq	27630 <__flatcc_fb_clear_parser@@Base+0x180>
   27620:	ldr	r2, [pc, #284]	; 27744 <__flatcc_fb_clear_parser@@Base+0x294>
   27624:	ldr	r1, [r4, #4]
   27628:	mov	r0, r5
   2762c:	bl	275d0 <__flatcc_fb_clear_parser@@Base+0x120>
   27630:	mov	r0, r6
   27634:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27638:	ldr	r3, [r4, #4]
   2763c:	ldr	r0, [r5, #412]	; 0x19c
   27640:	ldm	r3, {r1, r2}
   27644:	add	r0, r0, #16
   27648:	bl	2e4d4 <fb_name_table_find@@Base>
   2764c:	cmp	r0, #0
   27650:	ldreq	r2, [pc, #240]	; 27748 <__flatcc_fb_clear_parser@@Base+0x298>
   27654:	beq	276d4 <__flatcc_fb_clear_parser@@Base+0x224>
   27658:	ldr	r3, [r0, #24]
   2765c:	cmp	r3, #0
   27660:	beq	276b0 <__flatcc_fb_clear_parser@@Base+0x200>
   27664:	asr	r2, r9, r3
   27668:	tst	r2, #1
   2766c:	ldreq	r2, [pc, #216]	; 2774c <__flatcc_fb_clear_parser@@Base+0x29c>
   27670:	beq	276d4 <__flatcc_fb_clear_parser@@Base+0x224>
   27674:	mov	r2, #1
   27678:	orr	r6, r6, r2, lsl r3
   2767c:	ldr	r2, [r8, r3, lsl #2]
   27680:	uxth	r6, r6
   27684:	cmp	r2, #0
   27688:	ldrne	r2, [pc, #192]	; 27750 <__flatcc_fb_clear_parser@@Base+0x2a0>
   2768c:	bne	276d4 <__flatcc_fb_clear_parser@@Base+0x224>
   27690:	str	r4, [r8, r3, lsl #2]
   27694:	ldr	r3, [sl, r3, lsl #2]
   27698:	cmp	r3, #0
   2769c:	bne	276bc <__flatcc_fb_clear_parser@@Base+0x20c>
   276a0:	ldrh	r3, [r4, #16]
   276a4:	cmp	r3, #0
   276a8:	ldrne	r2, [pc, #164]	; 27754 <__flatcc_fb_clear_parser@@Base+0x2a4>
   276ac:	bne	276d4 <__flatcc_fb_clear_parser@@Base+0x224>
   276b0:	sub	r7, r7, #1
   276b4:	ldr	r4, [r4]
   276b8:	b	2760c <__flatcc_fb_clear_parser@@Base+0x15c>
   276bc:	cmp	r3, #2
   276c0:	bne	276e4 <__flatcc_fb_clear_parser@@Base+0x234>
   276c4:	ldrh	r3, [r4, #16]
   276c8:	cmp	r3, #2
   276cc:	ldrne	r2, [pc, #132]	; 27758 <__flatcc_fb_clear_parser@@Base+0x2a8>
   276d0:	beq	276b0 <__flatcc_fb_clear_parser@@Base+0x200>
   276d4:	ldr	r1, [r4, #4]
   276d8:	mov	r0, r5
   276dc:	bl	275d0 <__flatcc_fb_clear_parser@@Base+0x120>
   276e0:	b	276b0 <__flatcc_fb_clear_parser@@Base+0x200>
   276e4:	cmp	r3, #5
   276e8:	bne	27700 <__flatcc_fb_clear_parser@@Base+0x250>
   276ec:	ldrh	r3, [r4, #16]
   276f0:	cmp	r3, #5
   276f4:	ldrne	r2, [pc, #96]	; 2775c <__flatcc_fb_clear_parser@@Base+0x2ac>
   276f8:	bne	276d4 <__flatcc_fb_clear_parser@@Base+0x224>
   276fc:	b	276b0 <__flatcc_fb_clear_parser@@Base+0x200>
   27700:	cmp	r3, #4
   27704:	bne	27720 <__flatcc_fb_clear_parser@@Base+0x270>
   27708:	ldrh	r3, [r4, #16]
   2770c:	sub	r3, r3, #4
   27710:	cmp	r3, #1
   27714:	ldrhi	r2, [pc, #68]	; 27760 <__flatcc_fb_clear_parser@@Base+0x2b0>
   27718:	bhi	276d4 <__flatcc_fb_clear_parser@@Base+0x224>
   2771c:	b	276b0 <__flatcc_fb_clear_parser@@Base+0x200>
   27720:	cmp	r3, #6
   27724:	bne	276b0 <__flatcc_fb_clear_parser@@Base+0x200>
   27728:	ldrh	r3, [r4, #16]
   2772c:	cmp	r3, #6
   27730:	beq	276b0 <__flatcc_fb_clear_parser@@Base+0x200>
   27734:	mov	r2, fp
   27738:	b	276d4 <__flatcc_fb_clear_parser@@Base+0x224>
   2773c:	andeq	r7, r4, r8, lsr #24
   27740:	andeq	r7, r4, r4, ror #28
   27744:	andeq	r7, r4, lr, lsl #29
   27748:	andeq	r7, r4, sl, asr sp
   2774c:	andeq	r7, r4, r9, ror sp
   27750:	andeq	r7, r4, r6, lsr #27
   27754:	andeq	r7, r4, ip, asr #27
   27758:	strdeq	r7, [r4], -r4
   2775c:	andeq	r7, r4, r5, lsl lr
   27760:	andeq	r7, r4, r1, asr #28
   27764:	cmp	r0, #0
   27768:	bxeq	lr
   2776c:	ldr	r0, [r0, #60]	; 0x3c
   27770:	cmp	r0, #0
   27774:	bxeq	lr
   27778:	rsb	r2, r2, #0
   2777c:	b	235d4 <fb_scope_table_find@@Base>
   27780:	push	{r4, r5, r6, lr}
   27784:	subs	r6, r1, #0
   27788:	movne	r4, #0
   2778c:	ldrne	r3, [r6]
   27790:	bne	277a4 <__flatcc_fb_clear_parser@@Base+0x2f4>
   27794:	mov	r0, r6
   27798:	pop	{r4, r5, r6, pc}
   2779c:	ldr	r3, [r3]
   277a0:	add	r4, r4, #1
   277a4:	cmp	r3, #0
   277a8:	bne	2779c <__flatcc_fb_clear_parser@@Base+0x2ec>
   277ac:	cmp	r4, #0
   277b0:	addne	r5, r0, #352	; 0x160
   277b4:	bne	277d8 <__flatcc_fb_clear_parser@@Base+0x328>
   277b8:	mov	r0, r4
   277bc:	pop	{r4, r5, r6, pc}
   277c0:	ldr	r1, [r6]
   277c4:	mov	r0, r5
   277c8:	bl	27764 <__flatcc_fb_clear_parser@@Base+0x2b4>
   277cc:	cmp	r0, #0
   277d0:	beq	277d8 <__flatcc_fb_clear_parser@@Base+0x328>
   277d4:	pop	{r4, r5, r6, pc}
   277d8:	subs	r4, r4, #1
   277dc:	mov	r2, r4
   277e0:	bne	277c0 <__flatcc_fb_clear_parser@@Base+0x310>
   277e4:	mov	r1, r4
   277e8:	mov	r0, r5
   277ec:	pop	{r4, r5, r6, lr}
   277f0:	b	27764 <__flatcc_fb_clear_parser@@Base+0x2b4>
   277f4:	ldrh	r3, [r1, #8]
   277f8:	cmp	r3, #4
   277fc:	bhi	27824 <__flatcc_fb_clear_parser@@Base+0x374>
   27800:	push	{r4, lr}
   27804:	add	r0, r0, #172	; 0xac
   27808:	mov	r4, r1
   2780c:	ldr	r1, [r1, #16]
   27810:	bl	229c8 <ptr_set_find_item@@Base>
   27814:	cmp	r0, #0
   27818:	movne	r0, r4
   2781c:	moveq	r0, #0
   27820:	pop	{r4, pc}
   27824:	mov	r0, #0
   27828:	bx	lr
   2782c:	push	{r4, r5, r6, r7, r8, lr}
   27830:	mov	r7, r1
   27834:	mov	r1, #0
   27838:	mov	r5, r0
   2783c:	mov	r4, r1
   27840:	mov	r0, r2
   27844:	mov	ip, r1
   27848:	cmp	r2, #0
   2784c:	bne	278b8 <__flatcc_fb_clear_parser@@Base+0x408>
   27850:	cmp	r3, #0
   27854:	strne	r4, [r3]
   27858:	movne	r4, ip
   2785c:	subne	r1, r1, #1
   27860:	cmp	r4, #0
   27864:	beq	278b0 <__flatcc_fb_clear_parser@@Base+0x400>
   27868:	adds	r3, r7, #0
   2786c:	movne	r3, #1
   27870:	cmp	r1, #1
   27874:	movne	r3, #0
   27878:	cmp	r3, #0
   2787c:	beq	278e8 <__flatcc_fb_clear_parser@@Base+0x438>
   27880:	add	r8, r5, #352	; 0x160
   27884:	ldr	r3, [r4, #4]
   27888:	add	r0, r7, #4
   2788c:	ldm	r3, {r1, r2}
   27890:	bl	22ee4 <fb_symbol_table_find@@Base>
   27894:	subs	r6, r0, #0
   27898:	bne	278cc <__flatcc_fb_clear_parser@@Base+0x41c>
   2789c:	mov	r1, r7
   278a0:	mov	r0, r5
   278a4:	bl	27780 <__flatcc_fb_clear_parser@@Base+0x2d0>
   278a8:	subs	r7, r0, #0
   278ac:	bne	27884 <__flatcc_fb_clear_parser@@Base+0x3d4>
   278b0:	mov	r6, #0
   278b4:	b	278e0 <__flatcc_fb_clear_parser@@Base+0x430>
   278b8:	mov	ip, r4
   278bc:	add	r1, r1, #1
   278c0:	mov	r4, r2
   278c4:	ldr	r2, [r2]
   278c8:	b	27848 <__flatcc_fb_clear_parser@@Base+0x398>
   278cc:	mov	r1, r6
   278d0:	mov	r0, r8
   278d4:	bl	277f4 <__flatcc_fb_clear_parser@@Base+0x344>
   278d8:	cmp	r0, #0
   278dc:	beq	2789c <__flatcc_fb_clear_parser@@Base+0x3ec>
   278e0:	mov	r0, r6
   278e4:	pop	{r4, r5, r6, r7, r8, pc}
   278e8:	cmp	r1, #1
   278ec:	add	r5, r5, #352	; 0x160
   278f0:	sub	r2, r1, #1
   278f4:	movne	r1, r0
   278f8:	moveq	r1, #0
   278fc:	mov	r0, r5
   27900:	bl	27764 <__flatcc_fb_clear_parser@@Base+0x2b4>
   27904:	cmp	r0, #0
   27908:	beq	278b0 <__flatcc_fb_clear_parser@@Base+0x400>
   2790c:	ldr	r3, [r4, #4]
   27910:	add	r0, r0, #4
   27914:	ldm	r3, {r1, r2}
   27918:	bl	22ee4 <fb_symbol_table_find@@Base>
   2791c:	subs	r6, r0, #0
   27920:	beq	278b0 <__flatcc_fb_clear_parser@@Base+0x400>
   27924:	mov	r1, r6
   27928:	mov	r0, r5
   2792c:	bl	277f4 <__flatcc_fb_clear_parser@@Base+0x344>
   27930:	cmp	r0, #0
   27934:	bne	278e0 <__flatcc_fb_clear_parser@@Base+0x430>
   27938:	b	278b0 <__flatcc_fb_clear_parser@@Base+0x400>
   2793c:	push	{r0, r1, r4, r5, r6, lr}
   27940:	mov	r4, r2
   27944:	subs	r6, r3, #0
   27948:	mov	r2, #0
   2794c:	ldr	r5, [sp, #24]
   27950:	str	r2, [sp, #4]
   27954:	bne	2796c <__flatcc_fb_clear_parser@@Base+0x4bc>
   27958:	ldr	r3, [pc, #172]	; 27a0c <__flatcc_fb_clear_parser@@Base+0x55c>
   2795c:	ldr	r2, [pc, #172]	; 27a10 <__flatcc_fb_clear_parser@@Base+0x560>
   27960:	ldr	r1, [pc, #172]	; 27a14 <__flatcc_fb_clear_parser@@Base+0x564>
   27964:	ldr	r0, [pc, #172]	; 27a18 <__flatcc_fb_clear_parser@@Base+0x568>
   27968:	bl	14094 <__assert_fail@plt>
   2796c:	cmp	r4, #0
   27970:	beq	27990 <__flatcc_fb_clear_parser@@Base+0x4e0>
   27974:	ldrh	r3, [r4, #8]
   27978:	cmp	r3, #3
   2797c:	ldrne	r3, [pc, #136]	; 27a0c <__flatcc_fb_clear_parser@@Base+0x55c>
   27980:	movne	r2, #348	; 0x15c
   27984:	ldrne	r1, [pc, #136]	; 27a14 <__flatcc_fb_clear_parser@@Base+0x564>
   27988:	ldrne	r0, [pc, #140]	; 27a1c <__flatcc_fb_clear_parser@@Base+0x56c>
   2798c:	bne	27968 <__flatcc_fb_clear_parser@@Base+0x4b8>
   27990:	add	r3, sp, #4
   27994:	mov	r2, r6
   27998:	bl	2782c <__flatcc_fb_clear_parser@@Base+0x37c>
   2799c:	cmp	r0, #0
   279a0:	beq	279b0 <__flatcc_fb_clear_parser@@Base+0x500>
   279a4:	ldrh	r3, [r0, #8]
   279a8:	cmp	r3, #3
   279ac:	beq	279d8 <__flatcc_fb_clear_parser@@Base+0x528>
   279b0:	ldr	r2, [r6]
   279b4:	clz	r3, r4
   279b8:	lsr	r3, r3, #5
   279bc:	cmp	r2, #0
   279c0:	orrne	r3, r3, #1
   279c4:	cmp	r3, #0
   279c8:	beq	279dc <__flatcc_fb_clear_parser@@Base+0x52c>
   279cc:	mvn	r0, #0
   279d0:	add	sp, sp, #8
   279d4:	pop	{r4, r5, r6, pc}
   279d8:	mov	r4, r0
   279dc:	ldr	r3, [sp, #4]
   279e0:	add	r0, r4, #56	; 0x38
   279e4:	ldr	r3, [r3, #4]
   279e8:	ldm	r3, {r1, r2}
   279ec:	bl	22ee4 <fb_symbol_table_find@@Base>
   279f0:	cmp	r0, #0
   279f4:	beq	279cc <__flatcc_fb_clear_parser@@Base+0x51c>
   279f8:	add	r0, r0, #48	; 0x30
   279fc:	ldm	r0, {r0, r1, r2, r3}
   27a00:	stm	r5, {r0, r1, r2, r3}
   27a04:	mov	r0, #0
   27a08:	b	279d0 <__flatcc_fb_clear_parser@@Base+0x520>
   27a0c:	andeq	r7, r4, r1, ror #24
   27a10:	andeq	r0, r0, fp, asr r1
   27a14:	andeq	r7, r4, r2, lsr #29
   27a18:	andeq	r7, r4, r1, lsl #30
   27a1c:	andeq	r7, r4, r5, lsl #30
   27a20:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   27a24:	mov	r5, r0
   27a28:	ldrh	r8, [r1, #8]
   27a2c:	sub	sp, sp, #92	; 0x5c
   27a30:	mov	r6, r1
   27a34:	cmp	r8, #4
   27a38:	beq	27b4c <__flatcc_fb_clear_parser@@Base+0x69c>
   27a3c:	cmp	r8, #3
   27a40:	beq	27a58 <__flatcc_fb_clear_parser@@Base+0x5a8>
   27a44:	ldr	r3, [pc, #1352]	; 27f94 <__flatcc_fb_clear_parser@@Base+0xae4>
   27a48:	ldr	r2, [pc, #1352]	; 27f98 <__flatcc_fb_clear_parser@@Base+0xae8>
   27a4c:	ldr	r1, [pc, #1352]	; 27f9c <__flatcc_fb_clear_parser@@Base+0xaec>
   27a50:	ldr	r0, [pc, #1352]	; 27fa0 <__flatcc_fb_clear_parser@@Base+0xaf0>
   27a54:	bl	14094 <__assert_fail@plt>
   27a58:	ldrh	r3, [r1, #48]	; 0x30
   27a5c:	cmp	r3, #0
   27a60:	bne	27a80 <__flatcc_fb_clear_parser@@Base+0x5d0>
   27a64:	ldr	r2, [pc, #1336]	; 27fa4 <__flatcc_fb_clear_parser@@Base+0xaf4>
   27a68:	mov	r3, #1
   27a6c:	strh	r3, [r1, #48]	; 0x30
   27a70:	ldr	r1, [r6, #4]
   27a74:	bl	275d0 <__flatcc_fb_clear_parser@@Base+0x120>
   27a78:	mvn	r0, #0
   27a7c:	b	27b3c <__flatcc_fb_clear_parser@@Base+0x68c>
   27a80:	cmp	r3, #8
   27a84:	bne	27b44 <__flatcc_fb_clear_parser@@Base+0x694>
   27a88:	ldr	r3, [r1, #40]	; 0x28
   27a8c:	ldr	r2, [pc, #1300]	; 27fa8 <__flatcc_fb_clear_parser@@Base+0xaf8>
   27a90:	ldr	r3, [r3, #16]
   27a94:	add	r3, r3, #996	; 0x3e4
   27a98:	add	r3, r3, #3
   27a9c:	cmp	r3, #27
   27aa0:	addls	r3, r2, r3
   27aa4:	movhi	r3, #0
   27aa8:	ldrbls	r3, [r3, #87]	; 0x57
   27aac:	str	r3, [r1, #40]	; 0x28
   27ab0:	add	r2, r2, r3, lsl #2
   27ab4:	mov	r1, #0
   27ab8:	ldr	r3, [r2, #116]	; 0x74
   27abc:	mov	r0, r3
   27ac0:	strd	r0, [r6, #112]	; 0x70
   27ac4:	strh	r3, [r6, #104]	; 0x68
   27ac8:	mov	r2, #32
   27acc:	add	r3, sp, #40	; 0x28
   27ad0:	ldr	r1, [r6, #28]
   27ad4:	mov	r0, r5
   27ad8:	bl	275d8 <__flatcc_fb_clear_parser@@Base+0x128>
   27adc:	strh	r0, [r6, #92]	; 0x5c
   27ae0:	ands	r0, r0, #32
   27ae4:	streq	r0, [sp, #4]
   27ae8:	movne	r3, #0
   27aec:	movne	r2, #0
   27af0:	strdne	r2, [sp, #8]
   27af4:	movne	r3, #1
   27af8:	strne	r3, [sp, #4]
   27afc:	ldr	r2, [r6, #40]	; 0x28
   27b00:	add	r7, sp, #8
   27b04:	cmp	r2, #5
   27b08:	bne	27b7c <__flatcc_fb_clear_parser@@Base+0x6cc>
   27b0c:	mov	r3, #0
   27b10:	strb	r3, [sp, #8]
   27b14:	mov	r3, #6
   27b18:	strh	r3, [sp, #16]
   27b1c:	ldm	r7, {r0, r1, r2, r3}
   27b20:	add	r9, sp, #24
   27b24:	ldr	r4, [r6, #20]
   27b28:	mov	fp, #1
   27b2c:	stm	r9, {r0, r1, r2, r3}
   27b30:	cmp	r4, #0
   27b34:	bne	27bb8 <__flatcc_fb_clear_parser@@Base+0x708>
   27b38:	mov	r0, r4
   27b3c:	add	sp, sp, #92	; 0x5c
   27b40:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27b44:	ldr	r2, [pc, #1120]	; 27fac <__flatcc_fb_clear_parser@@Base+0xafc>
   27b48:	b	27a70 <__flatcc_fb_clear_parser@@Base+0x5c0>
   27b4c:	ldrh	r3, [r1, #48]	; 0x30
   27b50:	cmp	r3, #0
   27b54:	ldrne	r2, [pc, #1108]	; 27fb0 <__flatcc_fb_clear_parser@@Base+0xb00>
   27b58:	bne	27a70 <__flatcc_fb_clear_parser@@Base+0x5c0>
   27b5c:	mov	r3, #8
   27b60:	strh	r3, [r1, #48]	; 0x30
   27b64:	mov	r2, #1
   27b68:	mov	r3, #0
   27b6c:	str	r8, [r1, #40]	; 0x28
   27b70:	strd	r2, [r1, #112]	; 0x70
   27b74:	mov	r3, #1
   27b78:	b	27ac4 <__flatcc_fb_clear_parser@@Base+0x614>
   27b7c:	mov	r0, #0
   27b80:	mov	r1, #0
   27b84:	mov	r3, #4
   27b88:	strd	r0, [sp, #8]
   27b8c:	strh	r3, [sp, #16]
   27b90:	mov	r1, r6
   27b94:	mov	r3, r7
   27b98:	mov	r0, r5
   27b9c:	bl	29b88 <__flatcc_fb_coerce_scalar_type@@Base>
   27ba0:	cmp	r0, #0
   27ba4:	movne	r1, #0
   27ba8:	ldrne	r2, [pc, #1028]	; 27fb4 <__flatcc_fb_clear_parser@@Base+0xb04>
   27bac:	beq	27b1c <__flatcc_fb_clear_parser@@Base+0x66c>
   27bb0:	mov	r0, r5
   27bb4:	b	27a74 <__flatcc_fb_clear_parser@@Base+0x5c4>
   27bb8:	mov	r2, #1
   27bbc:	mov	r1, r4
   27bc0:	add	r0, r6, #56	; 0x38
   27bc4:	bl	22ec4 <fb_symbol_table_insert_item@@Base>
   27bc8:	cmp	r0, #0
   27bcc:	beq	27c0c <__flatcc_fb_clear_parser@@Base+0x75c>
   27bd0:	ldr	r3, [r0, #4]
   27bd4:	add	r2, r5, #68	; 0x44
   27bd8:	cmp	r3, r2
   27bdc:	ldreq	r2, [pc, #980]	; 27fb8 <__flatcc_fb_clear_parser@@Base+0xb08>
   27be0:	ldreq	r1, [r4, #4]
   27be4:	beq	27d10 <__flatcc_fb_clear_parser@@Base+0x860>
   27be8:	ldr	r2, [pc, #972]	; 27fbc <__flatcc_fb_clear_parser@@Base+0xb0c>
   27bec:	ldr	r1, [r4, #4]
   27bf0:	mov	r0, r5
   27bf4:	bl	275b4 <__flatcc_fb_clear_parser@@Base+0x104>
   27bf8:	mov	r3, #1
   27bfc:	strh	r3, [r4, #24]
   27c00:	ldr	r4, [r4]
   27c04:	mov	fp, #0
   27c08:	b	27b30 <__flatcc_fb_clear_parser@@Base+0x680>
   27c0c:	ldrh	r3, [r4, #8]
   27c10:	cmp	r3, #5
   27c14:	beq	27c24 <__flatcc_fb_clear_parser@@Base+0x774>
   27c18:	ldr	r2, [pc, #928]	; 27fc0 <__flatcc_fb_clear_parser@@Base+0xb10>
   27c1c:	ldr	r1, [r4, #4]
   27c20:	b	27bb0 <__flatcc_fb_clear_parser@@Base+0x700>
   27c24:	ldr	r3, [r4, #64]	; 0x40
   27c28:	cmp	r3, #0
   27c2c:	ldrne	r3, [pc, #864]	; 27f94 <__flatcc_fb_clear_parser@@Base+0xae4>
   27c30:	ldrne	r2, [pc, #908]	; 27fc4 <__flatcc_fb_clear_parser@@Base+0xb14>
   27c34:	ldrne	r1, [pc, #864]	; 27f9c <__flatcc_fb_clear_parser@@Base+0xaec>
   27c38:	ldrne	r0, [pc, #904]	; 27fc8 <__flatcc_fb_clear_parser@@Base+0xb18>
   27c3c:	bne	27a54 <__flatcc_fb_clear_parser@@Base+0x5a4>
   27c40:	cmp	r8, #4
   27c44:	bne	27c74 <__flatcc_fb_clear_parser@@Base+0x7c4>
   27c48:	ldr	r1, [r4, #4]
   27c4c:	add	r2, r5, #68	; 0x44
   27c50:	cmp	r1, r2
   27c54:	strheq	r3, [r4, #24]
   27c58:	beq	27c74 <__flatcc_fb_clear_parser@@Base+0x7c4>
   27c5c:	ldrh	r2, [r4, #24]
   27c60:	cmp	r2, #10
   27c64:	bne	27cfc <__flatcc_fb_clear_parser@@Base+0x84c>
   27c68:	mov	r2, #0
   27c6c:	mov	r3, #0
   27c70:	strd	r2, [r4, #88]	; 0x58
   27c74:	ldrh	r3, [r4, #56]	; 0x38
   27c78:	eor	fp, fp, #1
   27c7c:	cmp	r3, #0
   27c80:	movne	r3, #0
   27c84:	andeq	r3, fp, #1
   27c88:	cmp	r3, #0
   27c8c:	beq	27cd4 <__flatcc_fb_clear_parser@@Base+0x824>
   27c90:	ldrh	r3, [sp, #16]
   27c94:	cmp	r3, #5
   27c98:	bne	27d70 <__flatcc_fb_clear_parser@@Base+0x8c0>
   27c9c:	ldr	r3, [r6, #40]	; 0x28
   27ca0:	cmp	r3, #6
   27ca4:	bne	27cc4 <__flatcc_fb_clear_parser@@Base+0x814>
   27ca8:	ldrd	r2, [sp, #8]
   27cac:	mvn	r1, #0
   27cb0:	mvn	r0, #0
   27cb4:	cmp	r3, r1
   27cb8:	cmpeq	r2, r0
   27cbc:	ldreq	r2, [pc, #776]	; 27fcc <__flatcc_fb_clear_parser@@Base+0xb1c>
   27cc0:	beq	27da0 <__flatcc_fb_clear_parser@@Base+0x8f0>
   27cc4:	ldrd	r2, [sp, #8]
   27cc8:	adds	r2, r2, #1
   27ccc:	adc	r3, r3, #0
   27cd0:	strd	r2, [sp, #8]
   27cd4:	ldr	r3, [sp, #4]
   27cd8:	cmp	r3, #0
   27cdc:	ldrh	r3, [r4, #56]	; 0x38
   27ce0:	beq	27e94 <__flatcc_fb_clear_parser@@Base+0x9e4>
   27ce4:	cmp	r3, #0
   27ce8:	beq	27dec <__flatcc_fb_clear_parser@@Base+0x93c>
   27cec:	cmp	r3, #5
   27cf0:	beq	27de0 <__flatcc_fb_clear_parser@@Base+0x930>
   27cf4:	ldr	r2, [pc, #724]	; 27fd0 <__flatcc_fb_clear_parser@@Base+0xb20>
   27cf8:	b	27c1c <__flatcc_fb_clear_parser@@Base+0x76c>
   27cfc:	cmp	r2, #12
   27d00:	beq	27d1c <__flatcc_fb_clear_parser@@Base+0x86c>
   27d04:	cmp	r2, #1
   27d08:	beq	27c00 <__flatcc_fb_clear_parser@@Base+0x750>
   27d0c:	ldr	r2, [pc, #704]	; 27fd4 <__flatcc_fb_clear_parser@@Base+0xb24>
   27d10:	mov	r0, r5
   27d14:	bl	275d0 <__flatcc_fb_clear_parser@@Base+0x120>
   27d18:	b	27bf8 <__flatcc_fb_clear_parser@@Base+0x748>
   27d1c:	ldr	r2, [r4, #16]
   27d20:	ldr	r1, [r6, #12]
   27d24:	mov	r0, r5
   27d28:	bl	2782c <__flatcc_fb_clear_parser@@Base+0x37c>
   27d2c:	cmp	r0, #0
   27d30:	bne	27d4c <__flatcc_fb_clear_parser@@Base+0x89c>
   27d34:	mov	r3, r4
   27d38:	ldr	r2, [pc, #664]	; 27fd8 <__flatcc_fb_clear_parser@@Base+0xb28>
   27d3c:	ldr	r1, [r4, #16]
   27d40:	mov	r0, r5
   27d44:	bl	25278 <error_ref_sym@@Base>
   27d48:	b	27bf8 <__flatcc_fb_clear_parser@@Base+0x748>
   27d4c:	ldrh	r3, [r0, #8]
   27d50:	cmp	r3, #1
   27d54:	ldrhi	r3, [r0, #4]
   27d58:	ldrhi	r2, [pc, #636]	; 27fdc <__flatcc_fb_clear_parser@@Base+0xb2c>
   27d5c:	bhi	27bec <__flatcc_fb_clear_parser@@Base+0x73c>
   27d60:	mov	r3, #14
   27d64:	strh	r3, [r4, #24]
   27d68:	str	r0, [r4, #16]
   27d6c:	b	27c68 <__flatcc_fb_clear_parser@@Base+0x7b8>
   27d70:	cmp	r3, #4
   27d74:	bne	27db0 <__flatcc_fb_clear_parser@@Base+0x900>
   27d78:	ldr	r3, [r6, #40]	; 0x28
   27d7c:	cmp	r3, #6
   27d80:	bne	27cc4 <__flatcc_fb_clear_parser@@Base+0x814>
   27d84:	ldrd	r2, [sp, #8]
   27d88:	mvn	r1, #-2147483648	; 0x80000000
   27d8c:	mvn	r0, #0
   27d90:	cmp	r3, r1
   27d94:	cmpeq	r2, r0
   27d98:	bne	27cc4 <__flatcc_fb_clear_parser@@Base+0x814>
   27d9c:	ldr	r2, [pc, #572]	; 27fe0 <__flatcc_fb_clear_parser@@Base+0xb30>
   27da0:	ldr	r1, [r4, #4]
   27da4:	mov	r0, r5
   27da8:	bl	275d0 <__flatcc_fb_clear_parser@@Base+0x120>
   27dac:	b	27cc4 <__flatcc_fb_clear_parser@@Base+0x814>
   27db0:	cmp	r3, #6
   27db4:	bne	27cd4 <__flatcc_fb_clear_parser@@Base+0x824>
   27db8:	ldrb	r3, [sp, #8]
   27dbc:	cmp	r3, #1
   27dc0:	bne	27dd4 <__flatcc_fb_clear_parser@@Base+0x924>
   27dc4:	ldr	r2, [pc, #536]	; 27fe4 <__flatcc_fb_clear_parser@@Base+0xb34>
   27dc8:	ldr	r1, [r4, #4]
   27dcc:	mov	r0, r5
   27dd0:	bl	275d0 <__flatcc_fb_clear_parser@@Base+0x120>
   27dd4:	mov	r3, #1
   27dd8:	strb	r3, [sp, #8]
   27ddc:	b	27cd4 <__flatcc_fb_clear_parser@@Base+0x824>
   27de0:	add	r3, r4, #48	; 0x30
   27de4:	ldm	r3, {r0, r1, r2, r3}
   27de8:	stm	r7, {r0, r1, r2, r3}
   27dec:	ldr	sl, [r6, #40]	; 0x28
   27df0:	ldr	r1, [pc, #432]	; 27fa8 <__flatcc_fb_clear_parser@@Base+0xaf8>
   27df4:	ldrd	r2, [sp, #8]
   27df8:	add	r1, r1, sl, lsl #2
   27dfc:	ldr	r0, [r1, #116]	; 0x74
   27e00:	mov	r1, #0
   27e04:	cmp	r3, r1
   27e08:	lsl	r0, r0, #3
   27e0c:	cmpeq	r2, r0
   27e10:	bcc	27e1c <__flatcc_fb_clear_parser@@Base+0x96c>
   27e14:	ldr	r2, [pc, #460]	; 27fe8 <__flatcc_fb_clear_parser@@Base+0xb38>
   27e18:	b	27c1c <__flatcc_fb_clear_parser@@Base+0x76c>
   27e1c:	mov	r0, #1
   27e20:	mov	r1, #0
   27e24:	bl	2ec58 <fb_value_set_visit@@Base+0x210>
   27e28:	mov	r3, #5
   27e2c:	strh	r3, [r4, #56]	; 0x38
   27e30:	mov	r2, sl
   27e34:	add	r3, r4, #48	; 0x30
   27e38:	strd	r0, [r4, #48]	; 0x30
   27e3c:	mov	r1, r4
   27e40:	mov	r0, r5
   27e44:	bl	29b88 <__flatcc_fb_coerce_scalar_type@@Base>
   27e48:	cmp	r0, #0
   27e4c:	bne	27e14 <__flatcc_fb_clear_parser@@Base+0x964>
   27e50:	cmp	fp, #0
   27e54:	beq	27ef0 <__flatcc_fb_clear_parser@@Base+0xa40>
   27e58:	ldr	r3, [r5, #180]	; 0xb4
   27e5c:	cmp	r3, #0
   27e60:	beq	27ef0 <__flatcc_fb_clear_parser@@Base+0xa40>
   27e64:	ldrh	r3, [sp, #16]
   27e68:	cmp	r3, #5
   27e6c:	bne	27ed4 <__flatcc_fb_clear_parser@@Base+0xa24>
   27e70:	ldrd	r2, [sp, #24]
   27e74:	ldrd	r0, [sp, #8]
   27e78:	cmp	r1, r3
   27e7c:	cmpeq	r0, r2
   27e80:	bhi	27ef0 <__flatcc_fb_clear_parser@@Base+0xa40>
   27e84:	cmp	r8, #4
   27e88:	beq	27f20 <__flatcc_fb_clear_parser@@Base+0xa70>
   27e8c:	ldr	r2, [pc, #344]	; 27fec <__flatcc_fb_clear_parser@@Base+0xb3c>
   27e90:	b	27f30 <__flatcc_fb_clear_parser@@Base+0xa80>
   27e94:	cmp	r3, #0
   27e98:	add	sl, r4, #48	; 0x30
   27e9c:	bne	27eac <__flatcc_fb_clear_parser@@Base+0x9fc>
   27ea0:	ldm	r7, {r0, r1, r2, r3}
   27ea4:	stm	sl, {r0, r1, r2, r3}
   27ea8:	b	27e50 <__flatcc_fb_clear_parser@@Base+0x9a0>
   27eac:	ldm	sl, {r0, r1, r2, r3}
   27eb0:	stm	r7, {r0, r1, r2, r3}
   27eb4:	mov	r3, r7
   27eb8:	ldr	r2, [r6, #40]	; 0x28
   27ebc:	mov	r1, r4
   27ec0:	mov	r0, r5
   27ec4:	bl	29b88 <__flatcc_fb_coerce_scalar_type@@Base>
   27ec8:	cmp	r0, #0
   27ecc:	beq	27ea0 <__flatcc_fb_clear_parser@@Base+0x9f0>
   27ed0:	b	27a78 <__flatcc_fb_clear_parser@@Base+0x5c8>
   27ed4:	cmp	r3, #4
   27ed8:	bne	27f48 <__flatcc_fb_clear_parser@@Base+0xa98>
   27edc:	ldrd	r0, [sp, #24]
   27ee0:	ldrd	r2, [sp, #8]
   27ee4:	cmp	r0, r2
   27ee8:	sbcs	r3, r1, r3
   27eec:	bge	27e84 <__flatcc_fb_clear_parser@@Base+0x9d4>
   27ef0:	ldm	r7, {r0, r1, r2, r3}
   27ef4:	stm	r9, {r0, r1, r2, r3}
   27ef8:	mov	r2, #1
   27efc:	add	r1, r4, #48	; 0x30
   27f00:	add	r0, r6, #72	; 0x48
   27f04:	bl	2ea2c <fb_value_set_insert_item@@Base>
   27f08:	cmp	r0, #0
   27f0c:	beq	27f74 <__flatcc_fb_clear_parser@@Base+0xac4>
   27f10:	cmp	r8, #4
   27f14:	bne	27f68 <__flatcc_fb_clear_parser@@Base+0xab8>
   27f18:	ldr	r2, [pc, #208]	; 27ff0 <__flatcc_fb_clear_parser@@Base+0xb40>
   27f1c:	b	27f30 <__flatcc_fb_clear_parser@@Base+0xa80>
   27f20:	ldrd	r2, [sp, #24]
   27f24:	orrs	r3, r2, r3
   27f28:	ldreq	r2, [pc, #196]	; 27ff4 <__flatcc_fb_clear_parser@@Base+0xb44>
   27f2c:	bne	27e8c <__flatcc_fb_clear_parser@@Base+0x9dc>
   27f30:	ldr	r1, [r4, #4]
   27f34:	mov	r0, r5
   27f38:	bl	275d0 <__flatcc_fb_clear_parser@@Base+0x120>
   27f3c:	mov	r3, #1
   27f40:	strh	r3, [r4, #56]	; 0x38
   27f44:	b	27a78 <__flatcc_fb_clear_parser@@Base+0x5c8>
   27f48:	cmp	r3, #6
   27f4c:	bne	27ef0 <__flatcc_fb_clear_parser@@Base+0xa40>
   27f50:	ldrb	r2, [sp, #8]
   27f54:	ldrb	r3, [sp, #24]
   27f58:	cmp	r2, r3
   27f5c:	bhi	27ef0 <__flatcc_fb_clear_parser@@Base+0xa40>
   27f60:	ldr	r2, [pc, #144]	; 27ff8 <__flatcc_fb_clear_parser@@Base+0xb48>
   27f64:	b	27f30 <__flatcc_fb_clear_parser@@Base+0xa80>
   27f68:	ldrh	r3, [r4, #10]
   27f6c:	orr	r3, r3, #4
   27f70:	strh	r3, [r4, #10]
   27f74:	ldr	r3, [r4, #64]	; 0x40
   27f78:	cmp	r3, #0
   27f7c:	beq	27c00 <__flatcc_fb_clear_parser@@Base+0x750>
   27f80:	ldr	r2, [pc, #116]	; 27ffc <__flatcc_fb_clear_parser@@Base+0xb4c>
   27f84:	ldr	r1, [r4, #4]
   27f88:	mov	r0, r5
   27f8c:	bl	275d0 <__flatcc_fb_clear_parser@@Base+0x120>
   27f90:	b	27c00 <__flatcc_fb_clear_parser@@Base+0x750>
   27f94:	andeq	r7, r4, r2, ror ip
   27f98:	andeq	r0, r0, sp, asr #9
   27f9c:	andeq	r7, r4, r2, lsr #29
   27fa0:	andeq	r7, r4, r0, lsl pc
   27fa4:	andeq	r7, r4, lr, lsr #30
   27fa8:	andeq	r7, r4, r8, lsr #24
   27fac:	andeq	r7, r4, r4, asr #30
   27fb0:	andeq	r7, r4, r5, ror pc
   27fb4:			; <UNDEFINED> instruction: 0x00047fb4
   27fb8:	strdeq	r7, [r4], -r2
   27fbc:	andeq	r8, r4, pc
   27fc0:	andeq	r8, r4, sl, lsr #32
   27fc4:	andeq	r0, r0, r3, lsr #10
   27fc8:	andeq	r8, r4, r3, asr r0
   27fcc:	andeq	r8, r4, r4, lsr #2
   27fd0:	andeq	r8, r4, r9, lsl #3
   27fd4:	andeq	r8, r4, r9, rrx
   27fd8:	strheq	r8, [r4], -r0
   27fdc:	ldrdeq	r8, [r4], -lr
   27fe0:	andeq	r8, r4, r1, asr #2
   27fe4:	andeq	r8, r4, ip, asr r1
   27fe8:	andeq	r8, r4, r4, asr #3
   27fec:	andeq	r8, r4, r8, lsr r2
   27ff0:	muleq	r4, pc, r2	; <UNPREDICTABLE>
   27ff4:	strdeq	r8, [r4], -r7
   27ff8:	andeq	r8, r4, pc, asr r2
   27ffc:	andeq	r8, r4, r9, ror #5
   28000:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   28004:	ldrh	r7, [r1, #8]
   28008:	cmp	r7, #1
   2800c:	beq	28024 <__flatcc_fb_clear_parser@@Base+0xb74>
   28010:	ldr	r3, [pc, #908]	; 283a4 <__flatcc_fb_clear_parser@@Base+0xef4>
   28014:	ldr	r2, [pc, #908]	; 283a8 <__flatcc_fb_clear_parser@@Base+0xef8>
   28018:	ldr	r1, [pc, #908]	; 283ac <__flatcc_fb_clear_parser@@Base+0xefc>
   2801c:	ldr	r0, [pc, #908]	; 283b0 <__flatcc_fb_clear_parser@@Base+0xf00>
   28020:	bl	14094 <__assert_fail@plt>
   28024:	ldrh	r3, [r1, #10]
   28028:	mov	r5, r0
   2802c:	mov	r6, r1
   28030:	ands	r0, r3, #1
   28034:	ldrne	r3, [pc, #872]	; 283a4 <__flatcc_fb_clear_parser@@Base+0xef4>
   28038:	movne	r2, #504	; 0x1f8
   2803c:	ldrne	r1, [pc, #872]	; 283ac <__flatcc_fb_clear_parser@@Base+0xefc>
   28040:	ldrne	r0, [pc, #876]	; 283b4 <__flatcc_fb_clear_parser@@Base+0xf04>
   28044:	bne	28020 <__flatcc_fb_clear_parser@@Base+0xb70>
   28048:	tst	r3, #2
   2804c:	bne	28140 <__flatcc_fb_clear_parser@@Base+0xc90>
   28050:	ldr	r2, [r1, #120]	; 0x78
   28054:	cmp	r2, #0
   28058:	ldrne	r3, [pc, #836]	; 283a4 <__flatcc_fb_clear_parser@@Base+0xef4>
   2805c:	movne	r2, #508	; 0x1fc
   28060:	ldrne	r1, [pc, #836]	; 283ac <__flatcc_fb_clear_parser@@Base+0xefc>
   28064:	ldrne	r0, [pc, #844]	; 283b8 <__flatcc_fb_clear_parser@@Base+0xf08>
   28068:	bne	28020 <__flatcc_fb_clear_parser@@Base+0xb70>
   2806c:	ldr	r4, [r1, #20]
   28070:	ldr	sl, [pc, #836]	; 283bc <__flatcc_fb_clear_parser@@Base+0xf0c>
   28074:	mov	fp, #0
   28078:	orr	r3, r3, #1
   2807c:	strh	r3, [r1, #10]
   28080:	cmp	r4, #0
   28084:	bne	280fc <__flatcc_fb_clear_parser@@Base+0xc4c>
   28088:	ldrh	r3, [r6, #104]	; 0x68
   2808c:	cmp	r3, #0
   28090:	beq	280ac <__flatcc_fb_clear_parser@@Base+0xbfc>
   28094:	cmp	r7, r3
   28098:	bls	280b0 <__flatcc_fb_clear_parser@@Base+0xc00>
   2809c:	ldr	r2, [pc, #796]	; 283c0 <__flatcc_fb_clear_parser@@Base+0xf10>
   280a0:	ldr	r1, [r6, #4]
   280a4:	mov	r0, r5
   280a8:	bl	275d0 <__flatcc_fb_clear_parser@@Base+0x120>
   280ac:	strh	r7, [r6, #104]	; 0x68
   280b0:	ldrh	r0, [r6, #104]	; 0x68
   280b4:	mov	r1, #0
   280b8:	ldrd	r2, [r6, #112]	; 0x70
   280bc:	subs	r8, r0, #1
   280c0:	sbc	r9, r1, #0
   280c4:	cmp	r9, #0
   280c8:	cmpeq	r8, #255	; 0xff
   280cc:	bhi	281ec <__flatcc_fb_clear_parser@@Base+0xd3c>
   280d0:	mov	r8, #1
   280d4:	mov	r9, #0
   280d8:	cmp	r1, r9
   280dc:	cmpeq	r0, r8
   280e0:	beq	2835c <__flatcc_fb_clear_parser@@Base+0xeac>
   280e4:	adds	r8, r8, r8
   280e8:	adc	r9, r9, r9
   280ec:	cmp	r1, r9
   280f0:	cmpeq	r0, r8
   280f4:	bcs	280d8 <__flatcc_fb_clear_parser@@Base+0xc28>
   280f8:	b	281ec <__flatcc_fb_clear_parser@@Base+0xd3c>
   280fc:	ldr	r3, [r5, #116]	; 0x74
   28100:	cmp	r3, #99	; 0x63
   28104:	ble	2811c <__flatcc_fb_clear_parser@@Base+0xc6c>
   28108:	ldr	r2, [pc, #692]	; 283c4 <__flatcc_fb_clear_parser@@Base+0xf14>
   2810c:	mov	r1, #0
   28110:	mov	r0, r5
   28114:	bl	275d0 <__flatcc_fb_clear_parser@@Base+0x120>
   28118:	b	2813c <__flatcc_fb_clear_parser@@Base+0xc8c>
   2811c:	ldrh	r3, [r4, #24]
   28120:	cmp	r3, #8
   28124:	beq	28148 <__flatcc_fb_clear_parser@@Base+0xc98>
   28128:	cmp	r3, #14
   2812c:	beq	281f0 <__flatcc_fb_clear_parser@@Base+0xd40>
   28130:	cmp	r3, #1
   28134:	ldrne	r2, [pc, #652]	; 283c8 <__flatcc_fb_clear_parser@@Base+0xf18>
   28138:	bne	282a4 <__flatcc_fb_clear_parser@@Base+0xdf4>
   2813c:	mvn	r0, #0
   28140:	add	sp, sp, #12
   28144:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28148:	ldr	r3, [r4, #16]
   2814c:	mov	r1, #0
   28150:	ldr	r2, [r3, #16]
   28154:	add	r2, r2, #996	; 0x3e4
   28158:	add	r2, r2, #3
   2815c:	cmp	r2, #27
   28160:	addls	r2, sl, r2
   28164:	movhi	r2, #0
   28168:	ldrbls	r2, [r2, #87]	; 0x57
   2816c:	str	r2, [r4, #16]
   28170:	add	r2, sl, r2, lsl #2
   28174:	ldr	r2, [r2, #116]	; 0x74
   28178:	cmp	r2, #0
   2817c:	mov	r0, r2
   28180:	bne	28198 <__flatcc_fb_clear_parser@@Base+0xce8>
   28184:	ldr	r2, [pc, #572]	; 283c8 <__flatcc_fb_clear_parser@@Base+0xf18>
   28188:	ldr	r1, [r4, #4]
   2818c:	mov	r0, r5
   28190:	bl	275b4 <__flatcc_fb_clear_parser@@Base+0x104>
   28194:	b	2813c <__flatcc_fb_clear_parser@@Base+0xc8c>
   28198:	strh	r2, [r4, #74]	; 0x4a
   2819c:	strd	r0, [r4, #88]	; 0x58
   281a0:	ldrd	r2, [r6, #112]	; 0x70
   281a4:	ldrh	r0, [r4, #74]	; 0x4a
   281a8:	mov	r1, #0
   281ac:	strd	r2, [sp]
   281b0:	subs	r2, r0, #1
   281b4:	sbc	r3, r1, #0
   281b8:	cmp	r3, #0
   281bc:	cmpeq	r2, #255	; 0xff
   281c0:	bhi	281ec <__flatcc_fb_clear_parser@@Base+0xd3c>
   281c4:	mov	r2, #1
   281c8:	mov	r3, fp
   281cc:	cmp	r1, r3
   281d0:	cmpeq	r0, r2
   281d4:	beq	28304 <__flatcc_fb_clear_parser@@Base+0xe54>
   281d8:	adds	r2, r2, r2
   281dc:	adc	r3, r3, r3
   281e0:	cmp	r1, r3
   281e4:	cmpeq	r0, r2
   281e8:	bcs	281cc <__flatcc_fb_clear_parser@@Base+0xd1c>
   281ec:	bl	140e8 <__assert_fail@plt+0x54>
   281f0:	ldr	r8, [r4, #16]
   281f4:	ldrh	r3, [r8, #8]
   281f8:	cmp	r3, #3
   281fc:	bne	28218 <__flatcc_fb_clear_parser@@Base+0xd68>
   28200:	ldr	r3, [r8, #112]	; 0x70
   28204:	ldr	r2, [r8, #116]	; 0x74
   28208:	strh	r3, [r4, #74]	; 0x4a
   2820c:	str	r3, [r4, #88]	; 0x58
   28210:	str	r2, [r4, #92]	; 0x5c
   28214:	b	281a0 <__flatcc_fb_clear_parser@@Base+0xcf0>
   28218:	cmp	r3, #1
   2821c:	bne	282a0 <__flatcc_fb_clear_parser@@Base+0xdf0>
   28220:	ldrh	r3, [r8, #10]
   28224:	tst	r3, #1
   28228:	ldrne	r3, [r8, #4]
   2822c:	ldrne	r2, [pc, #408]	; 283cc <__flatcc_fb_clear_parser@@Base+0xf1c>
   28230:	bne	28188 <__flatcc_fb_clear_parser@@Base+0xcd8>
   28234:	tst	r3, #2
   28238:	beq	28250 <__flatcc_fb_clear_parser@@Base+0xda0>
   2823c:	ldrh	r3, [r8, #104]	; 0x68
   28240:	strh	r3, [r4, #74]	; 0x4a
   28244:	ldrd	r2, [r8, #112]	; 0x70
   28248:	strd	r2, [r4, #88]	; 0x58
   2824c:	b	281a0 <__flatcc_fb_clear_parser@@Base+0xcf0>
   28250:	ldr	r3, [r5, #188]	; 0xbc
   28254:	cmp	r3, #0
   28258:	beq	28270 <__flatcc_fb_clear_parser@@Base+0xdc0>
   2825c:	ldr	r3, [r8, #4]
   28260:	ldr	r2, [pc, #360]	; 283d0 <__flatcc_fb_clear_parser@@Base+0xf20>
   28264:	ldr	r1, [r4, #4]
   28268:	mov	r0, r5
   2826c:	bl	275b4 <__flatcc_fb_clear_parser@@Base+0x104>
   28270:	ldr	r3, [r5, #116]	; 0x74
   28274:	mov	r1, r8
   28278:	add	r3, r3, #1
   2827c:	str	r3, [r5, #116]	; 0x74
   28280:	mov	r0, r5
   28284:	bl	28000 <__flatcc_fb_clear_parser@@Base+0xb50>
   28288:	ldr	r3, [r5, #116]	; 0x74
   2828c:	sub	r3, r3, #1
   28290:	str	r3, [r5, #116]	; 0x74
   28294:	cmp	r0, #0
   28298:	beq	2823c <__flatcc_fb_clear_parser@@Base+0xd8c>
   2829c:	b	28140 <__flatcc_fb_clear_parser@@Base+0xc90>
   282a0:	ldr	r2, [pc, #300]	; 283d4 <__flatcc_fb_clear_parser@@Base+0xf24>
   282a4:	ldr	r1, [r4, #4]
   282a8:	b	28110 <__flatcc_fb_clear_parser@@Base+0xc60>
   282ac:	mov	r3, #0
   282b0:	ldrd	r0, [sp]
   282b4:	ldr	r2, [pc, #284]	; 283d8 <__flatcc_fb_clear_parser@@Base+0xf28>
   282b8:	cmp	r9, r3
   282bc:	cmpeq	r8, r2
   282c0:	movhi	r3, #1
   282c4:	movls	r3, #0
   282c8:	cmp	r1, r9
   282cc:	cmpeq	r0, r8
   282d0:	orrhi	r3, r3, #1
   282d4:	cmp	r3, #0
   282d8:	beq	282ec <__flatcc_fb_clear_parser@@Base+0xe3c>
   282dc:	ldr	r2, [pc, #248]	; 283dc <__flatcc_fb_clear_parser@@Base+0xf2c>
   282e0:	ldr	r1, [r4, #4]
   282e4:	mov	r0, r5
   282e8:	bl	275d0 <__flatcc_fb_clear_parser@@Base+0x120>
   282ec:	ldrh	r3, [r4, #74]	; 0x4a
   282f0:	strd	r8, [r6, #112]	; 0x70
   282f4:	ldr	r4, [r4]
   282f8:	cmp	r3, r7
   282fc:	movcs	r7, r3
   28300:	b	28080 <__flatcc_fb_clear_parser@@Base+0xbd0>
   28304:	ldrd	r2, [sp]
   28308:	subs	r2, r2, #1
   2830c:	sbc	r3, r3, #0
   28310:	adds	r2, r2, r0
   28314:	adc	r3, r3, r1
   28318:	rsbs	r0, r0, #0
   2831c:	rsc	r1, r1, #0
   28320:	and	r2, r2, r0
   28324:	and	r3, r3, r1
   28328:	ldrd	r0, [sp]
   2832c:	strd	r2, [r4, #80]	; 0x50
   28330:	cmp	r1, r3
   28334:	cmpeq	r0, r2
   28338:	bhi	28354 <__flatcc_fb_clear_parser@@Base+0xea4>
   2833c:	ldrd	r8, [r4, #88]	; 0x58
   28340:	adds	r8, r8, r2
   28344:	adc	r9, r9, r3
   28348:	cmp	r9, r3
   2834c:	cmpeq	r8, r2
   28350:	bcs	282ac <__flatcc_fb_clear_parser@@Base+0xdfc>
   28354:	ldr	r2, [pc, #132]	; 283e0 <__flatcc_fb_clear_parser@@Base+0xf30>
   28358:	b	282a4 <__flatcc_fb_clear_parser@@Base+0xdf4>
   2835c:	subs	r2, r2, #1
   28360:	sbc	r3, r3, #0
   28364:	adds	r2, r2, r0
   28368:	adc	r3, r3, r1
   2836c:	rsbs	r0, r0, #0
   28370:	rsc	r1, r1, #0
   28374:	and	r2, r2, r0
   28378:	and	r3, r3, r1
   2837c:	mov	r0, #0
   28380:	strd	r2, [r6, #112]	; 0x70
   28384:	ldrh	r3, [r6, #10]
   28388:	bic	r3, r3, #1
   2838c:	orr	r3, r3, #2
   28390:	strh	r3, [r6, #10]
   28394:	ldr	r3, [r5, #396]	; 0x18c
   28398:	str	r3, [r6, #120]	; 0x78
   2839c:	str	r6, [r5, #396]	; 0x18c
   283a0:	b	28140 <__flatcc_fb_clear_parser@@Base+0xc90>
   283a4:	andeq	r7, r4, ip, asr #25
   283a8:	strdeq	r0, [r0], -r6
   283ac:	andeq	r7, r4, r2, lsr #29
   283b0:	ldrdeq	r0, [r3], -r1
   283b4:	andeq	r8, r4, ip, lsl #6
   283b8:	andeq	r8, r4, r3, lsr r3
   283bc:	andeq	r7, r4, r8, lsr #24
   283c0:	andeq	r8, r4, r9, ror #8
   283c4:	andeq	r8, r4, lr, lsr r3
   283c8:	andeq	r8, r4, r7, lsl #7
   283cc:	muleq	r4, r7, r3
   283d0:			; <UNDEFINED> instruction: 0x000483b7
   283d4:	strdeq	r8, [r4], -lr
   283d8:	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
   283dc:	andeq	r8, r4, r6, lsr r4
   283e0:	andeq	r8, r4, r1, lsr #8

000283e4 <__flatcc_fb_build_schema@@Base>:
   283e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   283e8:	add	r3, r0, #352	; 0x160
   283ec:	sub	sp, sp, #204	; 0xcc
   283f0:	mov	fp, r0
   283f4:	mov	r1, r3
   283f8:	add	r0, r0, #524	; 0x20c
   283fc:	str	r3, [sp, #36]	; 0x24
   28400:	bl	229c8 <ptr_set_find_item@@Base>
   28404:	cmp	r0, #0
   28408:	bne	28420 <__flatcc_fb_build_schema@@Base+0x3c>
   2840c:	ldr	r3, [pc, #3944]	; 2937c <__flatcc_fb_build_schema@@Base+0xf98>
   28410:	ldr	r2, [pc, #3944]	; 29380 <__flatcc_fb_build_schema@@Base+0xf9c>
   28414:	ldr	r1, [pc, #3944]	; 29384 <__flatcc_fb_build_schema@@Base+0xfa0>
   28418:	ldr	r0, [pc, #3944]	; 29388 <__flatcc_fb_build_schema@@Base+0xfa4>
   2841c:	bl	14094 <__assert_fail@plt>
   28420:	ldr	r5, [fp, #392]	; 0x188
   28424:	ldr	r4, [pc, #3936]	; 2938c <__flatcc_fb_build_schema@@Base+0xfa8>
   28428:	ldr	r6, [pc, #3936]	; 29390 <__flatcc_fb_build_schema@@Base+0xfac>
   2842c:	cmp	r5, #0
   28430:	bne	28498 <__flatcc_fb_build_schema@@Base+0xb4>
   28434:	ldr	r4, [fp, #356]	; 0x164
   28438:	ldr	r7, [pc, #3924]	; 29394 <__flatcc_fb_build_schema@@Base+0xfb0>
   2843c:	mov	r6, #1
   28440:	cmp	r4, #0
   28444:	bne	28570 <__flatcc_fb_build_schema@@Base+0x18c>
   28448:	ldr	r6, [pc, #3912]	; 29398 <__flatcc_fb_build_schema@@Base+0xfb4>
   2844c:	mov	r5, r4
   28450:	mov	r7, #2
   28454:	mov	r8, r4
   28458:	ldr	r4, [fp, #52]	; 0x34
   2845c:	ldr	r3, [fp, #44]	; 0x2c
   28460:	add	r2, r4, #32
   28464:	cmp	r2, r3
   28468:	bls	285d4 <__flatcc_fb_build_schema@@Base+0x1f0>
   2846c:	mov	r1, #1
   28470:	mov	r0, #65536	; 0x10000
   28474:	bl	13ee4 <calloc@plt>
   28478:	cmp	r0, #0
   2847c:	bne	285b8 <__flatcc_fb_build_schema@@Base+0x1d4>
   28480:	ldr	r3, [pc, #3860]	; 2939c <__flatcc_fb_build_schema@@Base+0xfb8>
   28484:	ldr	r0, [pc, #3860]	; 293a0 <__flatcc_fb_build_schema@@Base+0xfbc>
   28488:	ldr	r1, [r3]
   2848c:	bl	14070 <fputs@plt>
   28490:	mov	r0, #1
   28494:	bl	13fbc <exit@plt>
   28498:	ldrh	r3, [r5, #8]
   2849c:	cmp	r3, #4
   284a0:	bhi	28548 <__flatcc_fb_build_schema@@Base+0x164>
   284a4:	ldr	r0, [r5, #12]
   284a8:	cmp	r0, #0
   284ac:	ldrne	r3, [r0]
   284b0:	ldrne	r2, [pc, #3800]	; 29390 <__flatcc_fb_build_schema@@Base+0xfac>
   284b4:	bne	284e0 <__flatcc_fb_build_schema@@Base+0xfc>
   284b8:	ldr	r2, [pc, #3792]	; 29390 <__flatcc_fb_build_schema@@Base+0xfac>
   284bc:	b	284e8 <__flatcc_fb_build_schema@@Base+0x104>
   284c0:	ldr	ip, [r3, #4]
   284c4:	ldm	ip, {r1, ip}
   284c8:	add	ip, r1, ip
   284cc:	cmp	r1, ip
   284d0:	bne	28550 <__flatcc_fb_build_schema@@Base+0x16c>
   284d4:	eor	r2, r2, #46	; 0x2e
   284d8:	ldr	r3, [r3]
   284dc:	mul	r2, r4, r2
   284e0:	cmp	r3, #0
   284e4:	bne	284c0 <__flatcc_fb_build_schema@@Base+0xdc>
   284e8:	ldr	r1, [r5, #4]
   284ec:	ldr	r3, [r1]
   284f0:	ldr	r1, [r1, #4]
   284f4:	add	r1, r3, r1
   284f8:	cmp	r3, r1
   284fc:	bne	28560 <__flatcc_fb_build_schema@@Base+0x17c>
   28500:	cmp	r2, #0
   28504:	ldr	r3, [sp, #36]	; 0x24
   28508:	moveq	r2, r6
   2850c:	cmp	r0, #0
   28510:	str	r2, [r5, #88]	; 0x58
   28514:	str	r3, [r5, #16]
   28518:	beq	28548 <__flatcc_fb_build_schema@@Base+0x164>
   2851c:	mov	r2, #1
   28520:	mov	r1, r5
   28524:	add	r0, r0, #4
   28528:	bl	22ec4 <fb_symbol_table_insert_item@@Base>
   2852c:	cmp	r0, #0
   28530:	beq	28548 <__flatcc_fb_build_schema@@Base+0x164>
   28534:	ldr	r3, [r0, #4]
   28538:	ldr	r2, [pc, #3684]	; 293a4 <__flatcc_fb_build_schema@@Base+0xfc0>
   2853c:	ldr	r1, [r5, #4]
   28540:	mov	r0, fp
   28544:	bl	275b4 <__flatcc_fb_clear_parser@@Base+0x104>
   28548:	ldr	r5, [r5]
   2854c:	b	2842c <__flatcc_fb_build_schema@@Base+0x48>
   28550:	ldrb	lr, [r1], #1
   28554:	eor	r2, r2, lr
   28558:	mul	r2, r4, r2
   2855c:	b	284cc <__flatcc_fb_build_schema@@Base+0xe8>
   28560:	ldrb	ip, [r3], #1
   28564:	eor	r2, r2, ip
   28568:	mul	r2, r4, r2
   2856c:	b	284f8 <__flatcc_fb_build_schema@@Base+0x114>
   28570:	ldr	r0, [fp, #412]	; 0x19c
   28574:	mov	r2, r6
   28578:	mov	r1, r4
   2857c:	add	r0, r0, #16
   28580:	bl	2e4b4 <fb_name_table_insert_item@@Base>
   28584:	cmp	r0, #0
   28588:	beq	285b0 <__flatcc_fb_build_schema@@Base+0x1cc>
   2858c:	ldr	r3, [r4, #12]
   28590:	mov	r2, r7
   28594:	str	r3, [sp, #4]
   28598:	ldr	r3, [r4, #8]
   2859c:	mov	r1, #0
   285a0:	str	r3, [sp]
   285a4:	mov	r0, fp
   285a8:	mov	r3, r5
   285ac:	bl	24474 <__flatcc_error_report@@Base>
   285b0:	ldr	r4, [r4]
   285b4:	b	28440 <__flatcc_fb_build_schema@@Base+0x5c>
   285b8:	ldr	r3, [fp, #48]	; 0x30
   285bc:	add	r4, r0, #16
   285c0:	str	r3, [r0]
   285c4:	str	r0, [fp, #48]	; 0x30
   285c8:	add	r0, r0, #65536	; 0x10000
   285cc:	str	r4, [fp, #52]	; 0x34
   285d0:	str	r0, [fp, #44]	; 0x2c
   285d4:	ldr	r3, [fp, #52]	; 0x34
   285d8:	ldr	r0, [r6, r5, lsl #2]
   285dc:	add	r3, r3, #32
   285e0:	str	r3, [fp, #52]	; 0x34
   285e4:	str	r5, [r4, #24]
   285e8:	str	r0, [r4, #8]
   285ec:	bl	13fc8 <strlen@plt>
   285f0:	strh	r7, [r4, #16]
   285f4:	str	r8, [r4]
   285f8:	mov	r2, #1
   285fc:	mov	r1, r4
   28600:	str	r0, [r4, #12]
   28604:	ldr	r0, [fp, #412]	; 0x19c
   28608:	add	r0, r0, #16
   2860c:	bl	2e4b4 <fb_name_table_insert_item@@Base>
   28610:	cmp	r0, #0
   28614:	strne	r5, [r0, #24]
   28618:	add	r5, r5, #1
   2861c:	cmp	r5, #12
   28620:	bne	28458 <__flatcc_fb_build_schema@@Base+0x74>
   28624:	ldr	r3, [fp, #184]	; 0xb8
   28628:	cmp	r3, #0
   2862c:	beq	286bc <__flatcc_fb_build_schema@@Base+0x2d8>
   28630:	ldr	r5, [fp, #392]	; 0x188
   28634:	ldr	r7, [pc, #3436]	; 293a8 <__flatcc_fb_build_schema@@Base+0xfc4>
   28638:	mov	r8, #1
   2863c:	mov	r9, #0
   28640:	cmp	r5, #0
   28644:	bne	286f4 <__flatcc_fb_build_schema@@Base+0x310>
   28648:	ldr	r4, [fp, #392]	; 0x188
   2864c:	cmp	r4, #0
   28650:	bne	289e4 <__flatcc_fb_build_schema@@Base+0x600>
   28654:	ldr	r6, [fp, #392]	; 0x188
   28658:	cmp	r6, #0
   2865c:	bne	28a18 <__flatcc_fb_build_schema@@Base+0x634>
   28660:	ldr	r3, [fp, #396]	; 0x18c
   28664:	cmp	r3, #0
   28668:	bne	298ec <__flatcc_fb_build_schema@@Base+0x1508>
   2866c:	ldr	r5, [fp, #392]	; 0x188
   28670:	str	r6, [fp, #396]	; 0x18c
   28674:	add	r6, sp, #84	; 0x54
   28678:	cmp	r5, #0
   2867c:	bne	29900 <__flatcc_fb_build_schema@@Base+0x151c>
   28680:	ldr	r2, [fp, #400]	; 0x190
   28684:	cmp	r2, #0
   28688:	bne	29ae0 <__flatcc_fb_build_schema@@Base+0x16fc>
   2868c:	ldr	r3, [fp, #208]	; 0xd0
   28690:	cmp	r3, #0
   28694:	beq	286a8 <__flatcc_fb_build_schema@@Base+0x2c4>
   28698:	ldr	r2, [pc, #3340]	; 293ac <__flatcc_fb_build_schema@@Base+0xfc8>
   2869c:	mov	r1, r5
   286a0:	mov	r0, fp
   286a4:	bl	275d0 <__flatcc_fb_clear_parser@@Base+0x120>
   286a8:	ldr	r0, [fp, #108]	; 0x6c
   286ac:	clz	r3, r0
   286b0:	lsr	r3, r3, #5
   286b4:	str	r3, [fp, #120]	; 0x78
   286b8:	b	289dc <__flatcc_fb_build_schema@@Base+0x5f8>
   286bc:	ldr	r4, [fp, #392]	; 0x188
   286c0:	mov	r5, #1
   286c4:	cmp	r4, #0
   286c8:	beq	28630 <__flatcc_fb_build_schema@@Base+0x24c>
   286cc:	ldrh	r3, [r4, #8]
   286d0:	cmp	r3, #3
   286d4:	bne	286ec <__flatcc_fb_build_schema@@Base+0x308>
   286d8:	mov	r1, r4
   286dc:	mov	r0, fp
   286e0:	bl	27a20 <__flatcc_fb_clear_parser@@Base+0x570>
   286e4:	cmp	r0, #0
   286e8:	strhne	r5, [r4, #48]	; 0x30
   286ec:	ldr	r4, [r4]
   286f0:	b	286c4 <__flatcc_fb_build_schema@@Base+0x2e0>
   286f4:	ldrh	r3, [r5, #8]
   286f8:	cmp	r3, #4
   286fc:	ldrls	pc, [pc, r3, lsl #2]
   28700:	b	289c8 <__flatcc_fb_build_schema@@Base+0x5e4>
   28704:	andeq	r8, r2, r0, asr #19
   28708:	andeq	r8, r2, r8, lsl r7
   2870c:	andeq	r8, r2, r0, asr #19
   28710:	andeq	r8, r2, r0, lsr #19
   28714:	andeq	r8, r2, ip, lsr #19
   28718:	ldrh	r3, [r5, #48]	; 0x30
   2871c:	cmp	r3, #0
   28720:	ldrne	r2, [pc, #3208]	; 293b0 <__flatcc_fb_build_schema@@Base+0xfcc>
   28724:	bne	287dc <__flatcc_fb_build_schema@@Base+0x3f8>
   28728:	add	r3, sp, #100	; 0x64
   2872c:	mov	r2, #16
   28730:	ldr	r1, [r5, #28]
   28734:	mov	r0, fp
   28738:	bl	275d8 <__flatcc_fb_clear_parser@@Base+0x128>
   2873c:	ldr	r3, [sp, #116]	; 0x74
   28740:	cmp	r3, #0
   28744:	strh	r0, [r5, #92]	; 0x5c
   28748:	beq	2879c <__flatcc_fb_build_schema@@Base+0x3b8>
   2874c:	ldrd	r0, [r3, #8]
   28750:	subs	r2, r0, #1
   28754:	sbc	r3, r1, #0
   28758:	cmp	r3, #0
   2875c:	cmpeq	r2, #255	; 0xff
   28760:	bhi	2878c <__flatcc_fb_build_schema@@Base+0x3a8>
   28764:	mov	r2, r8
   28768:	mov	r3, r9
   2876c:	cmp	r1, r3
   28770:	cmpeq	r0, r2
   28774:	beq	29b50 <__flatcc_fb_build_schema@@Base+0x176c>
   28778:	adds	r2, r2, r2
   2877c:	adc	r3, r3, r3
   28780:	cmp	r1, r3
   28784:	cmpeq	r0, r2
   28788:	bcs	2876c <__flatcc_fb_build_schema@@Base+0x388>
   2878c:	ldr	r2, [pc, #3104]	; 293b4 <__flatcc_fb_build_schema@@Base+0xfd0>
   28790:	ldr	r1, [r5, #4]
   28794:	mov	r0, fp
   28798:	bl	275d0 <__flatcc_fb_clear_parser@@Base+0x120>
   2879c:	ldr	r4, [r5, #20]
   287a0:	mov	r6, #0
   287a4:	add	sl, r5, #56	; 0x38
   287a8:	cmp	r4, #0
   287ac:	bne	287e4 <__flatcc_fb_build_schema@@Base+0x400>
   287b0:	cmp	r6, #0
   287b4:	beq	289c0 <__flatcc_fb_build_schema@@Base+0x5dc>
   287b8:	ldrh	r3, [r5, #10]
   287bc:	cmp	r6, #1
   287c0:	orr	r3, r3, #8
   287c4:	strh	r3, [r5, #10]
   287c8:	beq	289c0 <__flatcc_fb_build_schema@@Base+0x5dc>
   287cc:	ldr	r3, [fp, #156]	; 0x9c
   287d0:	cmp	r3, #0
   287d4:	bne	289c0 <__flatcc_fb_build_schema@@Base+0x5dc>
   287d8:	ldr	r2, [pc, #3252]	; 29494 <__flatcc_fb_build_schema@@Base+0x10b0>
   287dc:	ldr	r1, [r5, #4]
   287e0:	b	2882c <__flatcc_fb_build_schema@@Base+0x448>
   287e4:	mov	r2, #1
   287e8:	mov	r1, r4
   287ec:	mov	r0, sl
   287f0:	bl	22ec4 <fb_symbol_table_insert_item@@Base>
   287f4:	cmp	r0, #0
   287f8:	beq	28818 <__flatcc_fb_build_schema@@Base+0x434>
   287fc:	ldr	r3, [r0, #4]
   28800:	ldr	r2, [pc, #2992]	; 293b8 <__flatcc_fb_build_schema@@Base+0xfd4>
   28804:	ldr	r1, [r4, #4]
   28808:	mov	r0, fp
   2880c:	bl	275b4 <__flatcc_fb_clear_parser@@Base+0x104>
   28810:	ldr	r4, [r4]
   28814:	b	287a8 <__flatcc_fb_build_schema@@Base+0x3c4>
   28818:	ldrh	r3, [r4, #8]
   2881c:	cmp	r3, #5
   28820:	beq	28838 <__flatcc_fb_build_schema@@Base+0x454>
   28824:	ldr	r2, [pc, #2960]	; 293bc <__flatcc_fb_build_schema@@Base+0xfd8>
   28828:	ldr	r1, [r4, #4]
   2882c:	mov	r0, fp
   28830:	bl	275d0 <__flatcc_fb_clear_parser@@Base+0x120>
   28834:	b	2892c <__flatcc_fb_build_schema@@Base+0x548>
   28838:	ldr	r2, [fp, #172]	; 0xac
   2883c:	ldr	r3, [fp, #168]	; 0xa8
   28840:	cmp	r2, #0
   28844:	movne	r2, #128	; 0x80
   28848:	moveq	r2, #0
   2884c:	cmp	r3, #0
   28850:	orrne	r2, r2, #4
   28854:	add	r3, sp, #100	; 0x64
   28858:	ldr	r1, [r4, #64]	; 0x40
   2885c:	mov	r0, fp
   28860:	bl	275d8 <__flatcc_fb_clear_parser@@Base+0x128>
   28864:	ldrh	r3, [r4, #24]
   28868:	cmp	r3, #8
   2886c:	strh	r0, [r4, #72]	; 0x48
   28870:	beq	2896c <__flatcc_fb_build_schema@@Base+0x588>
   28874:	cmp	r3, #12
   28878:	bne	28998 <__flatcc_fb_build_schema@@Base+0x5b4>
   2887c:	mov	r3, #0
   28880:	ldr	r2, [r4, #16]
   28884:	ldr	r1, [r5, #12]
   28888:	mov	r0, fp
   2888c:	bl	2782c <__flatcc_fb_clear_parser@@Base+0x37c>
   28890:	cmp	r0, #0
   28894:	bne	288b8 <__flatcc_fb_build_schema@@Base+0x4d4>
   28898:	mov	r3, r4
   2889c:	ldr	r2, [pc, #2844]	; 293c0 <__flatcc_fb_build_schema@@Base+0xfdc>
   288a0:	ldr	r1, [r4, #16]
   288a4:	mov	r0, fp
   288a8:	bl	25278 <error_ref_sym@@Base>
   288ac:	mov	r3, #1
   288b0:	strh	r3, [r4, #24]
   288b4:	b	28810 <__flatcc_fb_build_schema@@Base+0x42c>
   288b8:	mov	r3, #14
   288bc:	str	r0, [r4, #16]
   288c0:	strh	r3, [r4, #24]
   288c4:	ldrh	r3, [r0, #8]
   288c8:	cmp	r3, #1
   288cc:	beq	28944 <__flatcc_fb_build_schema@@Base+0x560>
   288d0:	ldr	r2, [fp, #152]	; 0x98
   288d4:	cmp	r2, #0
   288d8:	beq	28938 <__flatcc_fb_build_schema@@Base+0x554>
   288dc:	cmp	r3, #3
   288e0:	beq	288fc <__flatcc_fb_build_schema@@Base+0x518>
   288e4:	ldr	r3, [r0, #4]
   288e8:	ldr	r2, [pc, #2772]	; 293c4 <__flatcc_fb_build_schema@@Base+0xfe0>
   288ec:	ldr	r1, [r4, #4]
   288f0:	mov	r0, fp
   288f4:	bl	275b4 <__flatcc_fb_clear_parser@@Base+0x104>
   288f8:	b	28924 <__flatcc_fb_build_schema@@Base+0x540>
   288fc:	ldrh	r3, [r4, #72]	; 0x48
   28900:	tst	r3, #128	; 0x80
   28904:	beq	28978 <__flatcc_fb_build_schema@@Base+0x594>
   28908:	ldr	r3, [fp, #148]	; 0x94
   2890c:	cmp	r3, #0
   28910:	bne	28974 <__flatcc_fb_build_schema@@Base+0x590>
   28914:	ldr	r2, [pc, #2732]	; 293c8 <__flatcc_fb_build_schema@@Base+0xfe4>
   28918:	ldr	r1, [r4, #4]
   2891c:	mov	r0, fp
   28920:	bl	275d0 <__flatcc_fb_clear_parser@@Base+0x120>
   28924:	mov	r3, #1
   28928:	strh	r3, [r4, #24]
   2892c:	mov	r3, #1
   28930:	strh	r3, [r5, #48]	; 0x30
   28934:	b	289c0 <__flatcc_fb_build_schema@@Base+0x5dc>
   28938:	ldr	r3, [r0, #4]
   2893c:	ldr	r2, [pc, #2696]	; 293cc <__flatcc_fb_build_schema@@Base+0xfe8>
   28940:	b	288ec <__flatcc_fb_build_schema@@Base+0x508>
   28944:	ldrh	r2, [r4, #72]	; 0x48
   28948:	tst	r2, #128	; 0x80
   2894c:	beq	28978 <__flatcc_fb_build_schema@@Base+0x594>
   28950:	ldr	r2, [pc, #2672]	; 293c8 <__flatcc_fb_build_schema@@Base+0xfe4>
   28954:	ldr	r1, [r4, #4]
   28958:	mov	r0, fp
   2895c:	str	r3, [sp, #8]
   28960:	bl	275d0 <__flatcc_fb_clear_parser@@Base+0x120>
   28964:	ldr	r3, [sp, #8]
   28968:	b	28928 <__flatcc_fb_build_schema@@Base+0x544>
   2896c:	tst	r0, #128	; 0x80
   28970:	beq	28978 <__flatcc_fb_build_schema@@Base+0x594>
   28974:	add	r6, r6, #1
   28978:	ldrh	r3, [r4, #56]	; 0x38
   2897c:	cmp	r3, #0
   28980:	beq	28810 <__flatcc_fb_build_schema@@Base+0x42c>
   28984:	mov	r2, r7
   28988:	ldr	r1, [r4, #4]
   2898c:	mov	r0, fp
   28990:	bl	275d0 <__flatcc_fb_clear_parser@@Base+0x120>
   28994:	b	28810 <__flatcc_fb_build_schema@@Base+0x42c>
   28998:	ldr	r2, [pc, #2608]	; 293d0 <__flatcc_fb_build_schema@@Base+0xfec>
   2899c:	b	28828 <__flatcc_fb_build_schema@@Base+0x444>
   289a0:	ldr	r3, [fp, #184]	; 0xb8
   289a4:	cmp	r3, #0
   289a8:	beq	289c0 <__flatcc_fb_build_schema@@Base+0x5dc>
   289ac:	mov	r1, r5
   289b0:	mov	r0, fp
   289b4:	bl	27a20 <__flatcc_fb_clear_parser@@Base+0x570>
   289b8:	cmp	r0, #0
   289bc:	bne	2892c <__flatcc_fb_build_schema@@Base+0x548>
   289c0:	ldr	r5, [r5]
   289c4:	b	28640 <__flatcc_fb_build_schema@@Base+0x25c>
   289c8:	mov	r0, fp
   289cc:	ldr	r2, [pc, #2560]	; 293d4 <__flatcc_fb_build_schema@@Base+0xff0>
   289d0:	ldr	r1, [r5, #4]
   289d4:	bl	275d0 <__flatcc_fb_clear_parser@@Base+0x120>
   289d8:	mvn	r0, #0
   289dc:	add	sp, sp, #204	; 0xcc
   289e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   289e4:	ldrh	r5, [r4, #8]
   289e8:	cmp	r5, #1
   289ec:	bne	28a10 <__flatcc_fb_build_schema@@Base+0x62c>
   289f0:	ldrh	r3, [r4, #48]	; 0x30
   289f4:	cmp	r3, #1
   289f8:	beq	28a10 <__flatcc_fb_build_schema@@Base+0x62c>
   289fc:	mov	r1, r4
   28a00:	mov	r0, fp
   28a04:	bl	28000 <__flatcc_fb_clear_parser@@Base+0xb50>
   28a08:	cmp	r0, #0
   28a0c:	strhne	r5, [r4, #48]	; 0x30
   28a10:	ldr	r4, [r4]
   28a14:	b	2864c <__flatcc_fb_build_schema@@Base+0x268>
   28a18:	ldrh	r3, [r6, #8]
   28a1c:	cmp	r3, #0
   28a20:	beq	28a34 <__flatcc_fb_build_schema@@Base+0x650>
   28a24:	cmp	r3, #2
   28a28:	beq	29748 <__flatcc_fb_build_schema@@Base+0x1364>
   28a2c:	ldr	r6, [r6]
   28a30:	b	28658 <__flatcc_fb_build_schema@@Base+0x274>
   28a34:	ldrh	r5, [r6, #48]	; 0x30
   28a38:	cmp	r5, #1
   28a3c:	beq	28a2c <__flatcc_fb_build_schema@@Base+0x648>
   28a40:	cmp	r5, #0
   28a44:	beq	28a5c <__flatcc_fb_build_schema@@Base+0x678>
   28a48:	ldr	r3, [pc, #2440]	; 293d8 <__flatcc_fb_build_schema@@Base+0xff4>
   28a4c:	ldr	r2, [pc, #2440]	; 293dc <__flatcc_fb_build_schema@@Base+0xff8>
   28a50:	ldr	r1, [pc, #2348]	; 29384 <__flatcc_fb_build_schema@@Base+0xfa0>
   28a54:	ldr	r0, [pc, #2436]	; 293e0 <__flatcc_fb_build_schema@@Base+0xffc>
   28a58:	b	2841c <__flatcc_fb_build_schema@@Base+0x38>
   28a5c:	add	r3, sp, #52	; 0x34
   28a60:	mov	r2, #8
   28a64:	ldr	r1, [r6, #28]
   28a68:	mov	r0, fp
   28a6c:	bl	275d8 <__flatcc_fb_clear_parser@@Base+0x128>
   28a70:	mov	r2, #0
   28a74:	mov	r3, #0
   28a78:	ldr	r4, [r6, #20]
   28a7c:	strd	r2, [sp, #24]
   28a80:	mov	r2, #0
   28a84:	mov	r3, #0
   28a88:	str	r5, [sp, #16]
   28a8c:	str	r5, [sp, #32]
   28a90:	str	r5, [sp, #20]
   28a94:	strd	r2, [sp, #8]
   28a98:	strh	r0, [r6, #92]	; 0x5c
   28a9c:	cmp	r4, #0
   28aa0:	bne	28b54 <__flatcc_fb_build_schema@@Base+0x770>
   28aa4:	cmp	r5, #0
   28aa8:	ldrdeq	r2, [sp, #8]
   28aac:	strdeq	r2, [r6, #96]	; 0x60
   28ab0:	ldr	r3, [sp, #20]
   28ab4:	eor	r7, r5, #1
   28ab8:	ands	r7, r7, r3
   28abc:	beq	29700 <__flatcc_fb_build_schema@@Base+0x131c>
   28ac0:	ldr	r3, [sp, #8]
   28ac4:	ldrd	r0, [sp, #8]
   28ac8:	ldrd	r4, [sp, #24]
   28acc:	ldr	r2, [sp, #12]
   28ad0:	orrs	r3, r3, r2
   28ad4:	movne	r3, #1
   28ad8:	moveq	r3, #0
   28adc:	cmp	r1, r5
   28ae0:	cmpeq	r0, r4
   28ae4:	movhi	r3, #0
   28ae8:	andls	r3, r3, #1
   28aec:	cmp	r3, #0
   28af0:	beq	29b58 <__flatcc_fb_build_schema@@Base+0x1774>
   28af4:	ldr	r8, [pc, #2280]	; 293e4 <__flatcc_fb_build_schema@@Base+0x1000>
   28af8:	mov	r3, #10
   28afc:	mov	r4, #0
   28b00:	mov	r5, #0
   28b04:	ldrd	r0, [sp, #24]
   28b08:	cmp	r1, r5
   28b0c:	cmpeq	r0, r4
   28b10:	beq	28b44 <__flatcc_fb_build_schema@@Base+0x760>
   28b14:	ldr	r2, [sp, #16]
   28b18:	add	r2, r2, r4
   28b1c:	ldrb	r2, [r2]
   28b20:	cmp	r2, #0
   28b24:	bne	296f4 <__flatcc_fb_build_schema@@Base+0x1310>
   28b28:	cmp	r3, #0
   28b2c:	sub	r9, r3, #1
   28b30:	bne	296cc <__flatcc_fb_build_schema@@Base+0x12e8>
   28b34:	ldr	r2, [pc, #2220]	; 293e8 <__flatcc_fb_build_schema@@Base+0x1004>
   28b38:	ldr	r1, [r6, #4]
   28b3c:	mov	r0, fp
   28b40:	bl	275d0 <__flatcc_fb_clear_parser@@Base+0x120>
   28b44:	ldr	r3, [sp, #32]
   28b48:	cmp	r3, #0
   28b4c:	bne	29710 <__flatcc_fb_build_schema@@Base+0x132c>
   28b50:	b	28ba4 <__flatcc_fb_build_schema@@Base+0x7c0>
   28b54:	mov	r2, #1
   28b58:	mov	r1, r4
   28b5c:	add	r0, r6, #56	; 0x38
   28b60:	bl	22ec4 <fb_symbol_table_insert_item@@Base>
   28b64:	subs	r7, r0, #0
   28b68:	beq	28b88 <__flatcc_fb_build_schema@@Base+0x7a4>
   28b6c:	ldr	r3, [r7, #4]
   28b70:	ldr	r2, [pc, #2164]	; 293ec <__flatcc_fb_build_schema@@Base+0x1008>
   28b74:	ldr	r1, [r4, #4]
   28b78:	mov	r0, fp
   28b7c:	bl	275b4 <__flatcc_fb_clear_parser@@Base+0x104>
   28b80:	ldr	r4, [r4]
   28b84:	b	28a9c <__flatcc_fb_build_schema@@Base+0x6b8>
   28b88:	ldrh	r3, [r4, #8]
   28b8c:	cmp	r3, #5
   28b90:	beq	28bb0 <__flatcc_fb_build_schema@@Base+0x7cc>
   28b94:	ldr	r2, [pc, #2316]	; 294a8 <__flatcc_fb_build_schema@@Base+0x10c4>
   28b98:	ldr	r1, [r4, #4]
   28b9c:	mov	r0, fp
   28ba0:	bl	275d0 <__flatcc_fb_clear_parser@@Base+0x120>
   28ba4:	mov	r3, #1
   28ba8:	strh	r3, [r6, #48]	; 0x30
   28bac:	b	28a2c <__flatcc_fb_build_schema@@Base+0x648>
   28bb0:	ldrh	r3, [r4, #24]
   28bb4:	cmp	r3, #1
   28bb8:	beq	28b80 <__flatcc_fb_build_schema@@Base+0x79c>
   28bbc:	sub	r3, r3, #7
   28bc0:	cmp	r3, #1
   28bc4:	bhi	28bf0 <__flatcc_fb_build_schema@@Base+0x80c>
   28bc8:	ldr	r3, [r4, #16]
   28bcc:	ldr	r3, [r3, #16]
   28bd0:	add	r3, r3, #996	; 0x3e4
   28bd4:	add	r3, r3, #3
   28bd8:	cmp	r3, #27
   28bdc:	movhi	r3, r7
   28be0:	ldrls	r2, [pc, #2056]	; 293f0 <__flatcc_fb_build_schema@@Base+0x100c>
   28be4:	addls	r3, r2, r3
   28be8:	ldrbls	r3, [r3, #87]	; 0x57
   28bec:	str	r3, [r4, #16]
   28bf0:	add	r3, sp, #52	; 0x34
   28bf4:	ldr	r2, [pc, #2040]	; 293f4 <__flatcc_fb_build_schema@@Base+0x1010>
   28bf8:	ldr	r1, [r4, #64]	; 0x40
   28bfc:	mov	r0, fp
   28c00:	bl	275d8 <__flatcc_fb_clear_parser@@Base+0x128>
   28c04:	ldr	r8, [sp, #76]	; 0x4c
   28c08:	cmp	r8, #0
   28c0c:	strh	r0, [r4, #72]	; 0x48
   28c10:	beq	28c3c <__flatcc_fb_build_schema@@Base+0x858>
   28c14:	ldrh	r3, [r4, #24]
   28c18:	cmp	r3, #7
   28c1c:	bne	28c2c <__flatcc_fb_build_schema@@Base+0x848>
   28c20:	ldr	r3, [r4, #16]
   28c24:	cmp	r3, #4
   28c28:	beq	28da8 <__flatcc_fb_build_schema@@Base+0x9c4>
   28c2c:	ldr	r2, [pc, #1988]	; 293f8 <__flatcc_fb_build_schema@@Base+0x1014>
   28c30:	ldr	r1, [r8, #4]
   28c34:	mov	r0, fp
   28c38:	bl	275d0 <__flatcc_fb_clear_parser@@Base+0x120>
   28c3c:	ldrh	r3, [r4, #72]	; 0x48
   28c40:	tst	r3, #256	; 0x100
   28c44:	beq	28c64 <__flatcc_fb_build_schema@@Base+0x880>
   28c48:	ldrh	r3, [r4, #24]
   28c4c:	cmp	r3, #8
   28c50:	bne	28c64 <__flatcc_fb_build_schema@@Base+0x880>
   28c54:	ldr	r2, [pc, #1952]	; 293fc <__flatcc_fb_build_schema@@Base+0x1018>
   28c58:	ldr	r1, [r4, #4]
   28c5c:	mov	r0, fp
   28c60:	bl	275d0 <__flatcc_fb_clear_parser@@Base+0x120>
   28c64:	ldrh	r3, [r4, #72]	; 0x48
   28c68:	tst	r3, #1024	; 0x400
   28c6c:	beq	28c98 <__flatcc_fb_build_schema@@Base+0x8b4>
   28c70:	ldrh	r3, [r4, #24]
   28c74:	cmp	r3, #7
   28c78:	bne	28c88 <__flatcc_fb_build_schema@@Base+0x8a4>
   28c7c:	ldr	r3, [r4, #16]
   28c80:	cmp	r3, #4
   28c84:	beq	28c98 <__flatcc_fb_build_schema@@Base+0x8b4>
   28c88:	ldr	r2, [pc, #1904]	; 29400 <__flatcc_fb_build_schema@@Base+0x101c>
   28c8c:	ldr	r1, [r4, #4]
   28c90:	mov	r0, fp
   28c94:	bl	275d0 <__flatcc_fb_clear_parser@@Base+0x120>
   28c98:	ldrh	r3, [r4, #72]	; 0x48
   28c9c:	tst	r3, #2048	; 0x800
   28ca0:	beq	28ccc <__flatcc_fb_build_schema@@Base+0x8e8>
   28ca4:	ldrh	r3, [r4, #24]
   28ca8:	cmp	r3, #7
   28cac:	bne	28cbc <__flatcc_fb_build_schema@@Base+0x8d8>
   28cb0:	ldr	r3, [r4, #16]
   28cb4:	cmp	r3, #4
   28cb8:	beq	28ccc <__flatcc_fb_build_schema@@Base+0x8e8>
   28cbc:	ldr	r2, [pc, #1856]	; 29404 <__flatcc_fb_build_schema@@Base+0x1020>
   28cc0:	ldr	r1, [r4, #4]
   28cc4:	mov	r0, fp
   28cc8:	bl	275d0 <__flatcc_fb_clear_parser@@Base+0x120>
   28ccc:	ldrh	r3, [r4, #72]	; 0x48
   28cd0:	and	r3, r3, #3072	; 0xc00
   28cd4:	cmp	r3, #3072	; 0xc00
   28cd8:	bne	28cec <__flatcc_fb_build_schema@@Base+0x908>
   28cdc:	ldr	r2, [pc, #1828]	; 29408 <__flatcc_fb_build_schema@@Base+0x1024>
   28ce0:	ldr	r1, [r4, #4]
   28ce4:	mov	r0, fp
   28ce8:	bl	275d0 <__flatcc_fb_clear_parser@@Base+0x120>
   28cec:	ldr	r9, [sp, #56]	; 0x38
   28cf0:	ldr	r2, [sp, #12]
   28cf4:	adds	r3, r9, #0
   28cf8:	movne	r3, #1
   28cfc:	str	r3, [sp, #40]	; 0x28
   28d00:	ldr	r3, [sp, #8]
   28d04:	orrs	r3, r3, r2
   28d08:	ldr	r3, [sp, #40]	; 0x28
   28d0c:	movne	r3, #0
   28d10:	andeq	r3, r3, #1
   28d14:	cmp	r3, #0
   28d18:	beq	28d3c <__flatcc_fb_build_schema@@Base+0x958>
   28d1c:	ldr	r3, [fp, #112]	; 0x70
   28d20:	ldr	r2, [fp, #216]	; 0xd8
   28d24:	mov	r0, r3
   28d28:	mov	r1, #0
   28d2c:	str	r3, [sp, #16]
   28d30:	bl	13fec <memset@plt>
   28d34:	mov	r3, #1
   28d38:	str	r3, [sp, #20]
   28d3c:	cmp	r5, #0
   28d40:	bne	28d7c <__flatcc_fb_build_schema@@Base+0x998>
   28d44:	ldrd	r2, [fp, #216]	; 0xd8
   28d48:	ldrd	r0, [sp, #8]
   28d4c:	cmp	r1, r3
   28d50:	cmpeq	r0, r2
   28d54:	bcc	28f18 <__flatcc_fb_build_schema@@Base+0xb34>
   28d58:	ldr	r2, [pc, #1708]	; 2940c <__flatcc_fb_build_schema@@Base+0x1028>
   28d5c:	ldr	r1, [r4, #4]
   28d60:	mov	r0, fp
   28d64:	bl	275d0 <__flatcc_fb_clear_parser@@Base+0x120>
   28d68:	mov	r5, #1
   28d6c:	ldrd	r2, [sp, #8]
   28d70:	adds	r2, r2, #1
   28d74:	adc	r3, r3, #0
   28d78:	strd	r2, [sp, #8]
   28d7c:	ldrh	r3, [r4, #24]
   28d80:	sub	r3, r3, #7
   28d84:	cmp	r3, #5
   28d88:	ldrls	pc, [pc, r3, lsl #2]
   28d8c:	b	29614 <__flatcc_fb_build_schema@@Base+0x1230>
   28d90:	strheq	r9, [r2], -ip
   28d94:	andeq	r8, r2, r4, asr #30
   28d98:	andeq	r9, r2, r4, lsl r1
   28d9c:	strdeq	r9, [r2], -ip
   28da0:	andeq	r9, r2, r0, asr r3
   28da4:	andeq	r9, r2, r8, lsr #2
   28da8:	ldrh	r3, [r8, #16]
   28dac:	cmp	r3, #2
   28db0:	ldreq	r9, [r8, #12]
   28db4:	ldreq	r1, [r8, #8]
   28db8:	moveq	r2, r9
   28dbc:	bne	28c3c <__flatcc_fb_build_schema@@Base+0x858>
   28dc0:	cmp	r2, #0
   28dc4:	movle	sl, r1
   28dc8:	ble	28de8 <__flatcc_fb_build_schema@@Base+0xa04>
   28dcc:	sub	r2, r2, #1
   28dd0:	ldrb	r3, [r1, r2]
   28dd4:	cmp	r3, #46	; 0x2e
   28dd8:	bne	28dc0 <__flatcc_fb_build_schema@@Base+0x9dc>
   28ddc:	add	sl, r2, #1
   28de0:	add	sl, r1, sl
   28de4:	sub	r9, r9, #1
   28de8:	ldr	r3, [r6, #12]
   28dec:	sub	r9, r9, r2
   28df0:	adds	r0, r3, #0
   28df4:	movne	r0, #1
   28df8:	cmp	r2, #0
   28dfc:	movne	r0, #0
   28e00:	cmp	r0, #0
   28e04:	beq	28ec8 <__flatcc_fb_build_schema@@Base+0xae4>
   28e08:	mov	r2, r9
   28e0c:	add	r0, r3, #4
   28e10:	mov	r1, sl
   28e14:	str	r3, [sp, #40]	; 0x28
   28e18:	bl	22ee4 <fb_symbol_table_find@@Base>
   28e1c:	ldr	r3, [sp, #40]	; 0x28
   28e20:	subs	r2, r0, #0
   28e24:	bne	28e64 <__flatcc_fb_build_schema@@Base+0xa80>
   28e28:	mov	r1, r3
   28e2c:	mov	r0, fp
   28e30:	bl	27780 <__flatcc_fb_clear_parser@@Base+0x2d0>
   28e34:	subs	r3, r0, #0
   28e38:	bne	28e08 <__flatcc_fb_build_schema@@Base+0xa24>
   28e3c:	ldr	r3, [r8, #12]
   28e40:	ldr	r2, [pc, #1480]	; 29410 <__flatcc_fb_build_schema@@Base+0x102c>
   28e44:	str	r3, [sp, #4]
   28e48:	ldr	r3, [r8, #8]
   28e4c:	mov	r0, fp
   28e50:	str	r3, [sp]
   28e54:	mov	r3, #0
   28e58:	ldr	r1, [r8, #4]
   28e5c:	bl	24474 <__flatcc_error_report@@Base>
   28e60:	b	28c3c <__flatcc_fb_build_schema@@Base+0x858>
   28e64:	mov	r1, r2
   28e68:	ldr	r0, [sp, #36]	; 0x24
   28e6c:	str	r3, [sp, #44]	; 0x2c
   28e70:	str	r2, [sp, #40]	; 0x28
   28e74:	bl	277f4 <__flatcc_fb_clear_parser@@Base+0x344>
   28e78:	ldr	r2, [sp, #40]	; 0x28
   28e7c:	ldr	r3, [sp, #44]	; 0x2c
   28e80:	cmp	r0, #0
   28e84:	beq	28e28 <__flatcc_fb_build_schema@@Base+0xa44>
   28e88:	ldrh	r3, [r2, #8]
   28e8c:	cmp	r3, #0
   28e90:	beq	28f10 <__flatcc_fb_build_schema@@Base+0xb2c>
   28e94:	ldr	r1, [fp, #176]	; 0xb0
   28e98:	cmp	r1, #0
   28e9c:	ldreq	r3, [r2, #4]
   28ea0:	ldreq	r2, [pc, #1388]	; 29414 <__flatcc_fb_build_schema@@Base+0x1030>
   28ea4:	beq	28eb8 <__flatcc_fb_build_schema@@Base+0xad4>
   28ea8:	cmp	r3, #1
   28eac:	beq	28f10 <__flatcc_fb_build_schema@@Base+0xb2c>
   28eb0:	ldr	r3, [r2, #4]
   28eb4:	ldr	r2, [pc, #1372]	; 29418 <__flatcc_fb_build_schema@@Base+0x1034>
   28eb8:	ldr	r1, [r8, #4]
   28ebc:	mov	r0, fp
   28ec0:	bl	275b4 <__flatcc_fb_clear_parser@@Base+0x104>
   28ec4:	b	28c3c <__flatcc_fb_build_schema@@Base+0x858>
   28ec8:	ldr	r3, [sp, #36]	; 0x24
   28ecc:	cmp	r3, #0
   28ed0:	beq	28e3c <__flatcc_fb_build_schema@@Base+0xa58>
   28ed4:	ldr	r0, [fp, #412]	; 0x19c
   28ed8:	cmp	r0, #0
   28edc:	beq	28e3c <__flatcc_fb_build_schema@@Base+0xa58>
   28ee0:	cmp	r2, #0
   28ee4:	moveq	r1, #0
   28ee8:	bl	235d4 <fb_scope_table_find@@Base>
   28eec:	cmp	r0, #0
   28ef0:	beq	28e3c <__flatcc_fb_build_schema@@Base+0xa58>
   28ef4:	mov	r2, r9
   28ef8:	mov	r1, sl
   28efc:	add	r0, r0, #4
   28f00:	bl	22ee4 <fb_symbol_table_find@@Base>
   28f04:	subs	r2, r0, #0
   28f08:	bne	28e88 <__flatcc_fb_build_schema@@Base+0xaa4>
   28f0c:	b	28e3c <__flatcc_fb_build_schema@@Base+0xa58>
   28f10:	str	r2, [r4, #104]	; 0x68
   28f14:	b	28c3c <__flatcc_fb_build_schema@@Base+0x858>
   28f18:	ldr	r3, [sp, #20]
   28f1c:	cmp	r3, #0
   28f20:	bne	28d6c <__flatcc_fb_build_schema@@Base+0x988>
   28f24:	ldrd	r2, [sp, #8]
   28f28:	ldr	r0, [pc, #1348]	; 29474 <__flatcc_fb_build_schema@@Base+0x1090>
   28f2c:	mov	r1, #0
   28f30:	and	r2, r2, r0
   28f34:	and	r3, r3, r1
   28f38:	ldr	r5, [sp, #20]
   28f3c:	strd	r2, [r4, #96]	; 0x60
   28f40:	b	28d6c <__flatcc_fb_build_schema@@Base+0x988>
   28f44:	ldrh	r3, [r4, #56]	; 0x38
   28f48:	cmp	r3, #13
   28f4c:	bne	28f7c <__flatcc_fb_build_schema@@Base+0xb98>
   28f50:	add	r3, r4, #48	; 0x30
   28f54:	str	r3, [sp]
   28f58:	mov	r2, #0
   28f5c:	ldr	r3, [r4, #48]	; 0x30
   28f60:	ldr	r1, [r6, #12]
   28f64:	mov	r0, fp
   28f68:	bl	2793c <__flatcc_fb_clear_parser@@Base+0x48c>
   28f6c:	cmp	r0, #0
   28f70:	movne	r3, r4
   28f74:	ldrne	r2, [pc, #1184]	; 2941c <__flatcc_fb_build_schema@@Base+0x1038>
   28f78:	bne	29260 <__flatcc_fb_build_schema@@Base+0xe7c>
   28f7c:	ldrh	r3, [r4, #56]	; 0x38
   28f80:	cmp	r3, #0
   28f84:	moveq	r3, #5
   28f88:	strheq	r3, [r4, #56]	; 0x38
   28f8c:	moveq	r2, #0
   28f90:	moveq	r3, #0
   28f94:	strdeq	r2, [r4, #48]	; 0x30
   28f98:	add	r3, r4, #48	; 0x30
   28f9c:	ldr	r2, [r4, #16]
   28fa0:	mov	r1, r4
   28fa4:	mov	r0, fp
   28fa8:	bl	29b88 <__flatcc_fb_coerce_scalar_type@@Base>
   28fac:	cmp	r0, #0
   28fb0:	beq	28fc0 <__flatcc_fb_build_schema@@Base+0xbdc>
   28fb4:	mov	r3, #1
   28fb8:	strh	r3, [r4, #24]
   28fbc:	b	28b80 <__flatcc_fb_build_schema@@Base+0x79c>
   28fc0:	ldr	r2, [r4, #16]
   28fc4:	ldr	r3, [pc, #1060]	; 293f0 <__flatcc_fb_build_schema@@Base+0x100c>
   28fc8:	mov	r1, #0
   28fcc:	add	r3, r3, r2, lsl #2
   28fd0:	mov	r8, #1
   28fd4:	ldr	r3, [r3, #116]	; 0x74
   28fd8:	mov	r0, r3
   28fdc:	strh	r3, [r4, #74]	; 0x4a
   28fe0:	strd	r0, [r4, #88]	; 0x58
   28fe4:	cmp	r5, #0
   28fe8:	beq	29598 <__flatcc_fb_build_schema@@Base+0x11b4>
   28fec:	ldr	r3, [sp, #20]
   28ff0:	eor	sl, r5, #1
   28ff4:	ands	sl, sl, r3
   28ff8:	beq	29088 <__flatcc_fb_build_schema@@Base+0xca4>
   28ffc:	ldr	r3, [r4, #96]	; 0x60
   29000:	ldr	r1, [sp, #16]
   29004:	ldr	r2, [sp, #16]
   29008:	ldrb	r5, [r1, r3]
   2900c:	add	r2, r2, r3
   29010:	cmp	r5, #2
   29014:	bne	29664 <__flatcc_fb_build_schema@@Base+0x1280>
   29018:	ldr	r2, [pc, #1024]	; 29420 <__flatcc_fb_build_schema@@Base+0x103c>
   2901c:	ldr	r1, [r9, #4]
   29020:	mov	r0, fp
   29024:	bl	275d0 <__flatcc_fb_clear_parser@@Base+0x120>
   29028:	mov	r5, sl
   2902c:	eor	r3, r5, #1
   29030:	cmp	r7, #0
   29034:	moveq	r3, #0
   29038:	andne	r3, r3, #1
   2903c:	cmp	r3, #0
   29040:	beq	29088 <__flatcc_fb_build_schema@@Base+0xca4>
   29044:	ldrh	r3, [r7, #8]
   29048:	cmp	r3, #4
   2904c:	movne	r5, #0
   29050:	bne	29088 <__flatcc_fb_build_schema@@Base+0xca4>
   29054:	ldrd	r0, [r4, #96]	; 0x60
   29058:	ldrh	r3, [r4, #24]
   2905c:	cmp	r1, #0
   29060:	cmpeq	r0, #1
   29064:	bhi	2968c <__flatcc_fb_build_schema@@Base+0x12a8>
   29068:	ldr	r2, [pc, #948]	; 29424 <__flatcc_fb_build_schema@@Base+0x1040>
   2906c:	ldr	r1, [pc, #948]	; 29428 <__flatcc_fb_build_schema@@Base+0x1044>
   29070:	cmp	r3, #11
   29074:	moveq	r2, r1
   29078:	mov	r0, fp
   2907c:	ldr	r1, [r9, #4]
   29080:	bl	275d0 <__flatcc_fb_clear_parser@@Base+0x120>
   29084:	mov	r5, sl
   29088:	ldrh	r3, [r4, #72]	; 0x48
   2908c:	tst	r3, #128	; 0x80
   29090:	beq	28b80 <__flatcc_fb_build_schema@@Base+0x79c>
   29094:	ldr	r3, [sp, #32]
   29098:	cmp	r8, #0
   2909c:	add	r3, r3, #1
   290a0:	str	r3, [sp, #32]
   290a4:	bne	28b80 <__flatcc_fb_build_schema@@Base+0x79c>
   290a8:	ldr	r2, [pc, #892]	; 2942c <__flatcc_fb_build_schema@@Base+0x1048>
   290ac:	ldr	r1, [r4, #4]
   290b0:	mov	r0, fp
   290b4:	bl	275d0 <__flatcc_fb_clear_parser@@Base+0x120>
   290b8:	b	28b80 <__flatcc_fb_build_schema@@Base+0x79c>
   290bc:	ldr	r2, [r4, #16]
   290c0:	ldr	r3, [pc, #808]	; 293f0 <__flatcc_fb_build_schema@@Base+0x100c>
   290c4:	ldrh	r8, [r4, #56]	; 0x38
   290c8:	add	r3, r3, r2, lsl #2
   290cc:	mov	r1, #0
   290d0:	ldr	r3, [r3, #116]	; 0x74
   290d4:	cmp	r8, #0
   290d8:	mov	r0, r3
   290dc:	strh	r3, [r4, #74]	; 0x4a
   290e0:	strd	r0, [r4, #88]	; 0x58
   290e4:	ldrne	r2, [pc, #836]	; 29430 <__flatcc_fb_build_schema@@Base+0x104c>
   290e8:	beq	28fe4 <__flatcc_fb_build_schema@@Base+0xc00>
   290ec:	ldr	r1, [r4, #4]
   290f0:	mov	r0, fp
   290f4:	bl	275d0 <__flatcc_fb_clear_parser@@Base+0x120>
   290f8:	b	28fb4 <__flatcc_fb_build_schema@@Base+0xbd0>
   290fc:	ldrh	r3, [r4, #56]	; 0x38
   29100:	cmp	r3, #0
   29104:	ldreq	r8, [fp, #164]	; 0xa4
   29108:	ldrne	r2, [pc, #804]	; 29434 <__flatcc_fb_build_schema@@Base+0x1050>
   2910c:	beq	28fe4 <__flatcc_fb_build_schema@@Base+0xc00>
   29110:	b	290ec <__flatcc_fb_build_schema@@Base+0xd08>
   29114:	ldrh	r8, [r4, #56]	; 0x38
   29118:	cmp	r8, #0
   2911c:	ldrne	r2, [pc, #788]	; 29438 <__flatcc_fb_build_schema@@Base+0x1054>
   29120:	beq	28fe4 <__flatcc_fb_build_schema@@Base+0xc00>
   29124:	b	290ec <__flatcc_fb_build_schema@@Base+0xd08>
   29128:	mov	r3, #0
   2912c:	ldr	r2, [r4, #16]
   29130:	ldr	r1, [r6, #12]
   29134:	mov	r0, fp
   29138:	bl	2782c <__flatcc_fb_clear_parser@@Base+0x37c>
   2913c:	subs	r7, r0, #0
   29140:	bne	29164 <__flatcc_fb_build_schema@@Base+0xd80>
   29144:	mov	r3, r4
   29148:	ldr	r2, [pc, #748]	; 2943c <__flatcc_fb_build_schema@@Base+0x1058>
   2914c:	ldr	r1, [r4, #16]
   29150:	mov	r0, fp
   29154:	mov	r5, #1
   29158:	bl	25278 <error_ref_sym@@Base>
   2915c:	strh	r5, [r4, #24]
   29160:	b	28b80 <__flatcc_fb_build_schema@@Base+0x79c>
   29164:	ldrh	r3, [r7, #8]
   29168:	cmp	r3, #4
   2916c:	ldrls	pc, [pc, r3, lsl #2]
   29170:	b	29288 <__flatcc_fb_build_schema@@Base+0xea4>
   29174:	muleq	r2, r4, r2
   29178:	muleq	r2, r4, r2
   2917c:	andeq	r9, r2, r0, ror r2
   29180:	andeq	r9, r2, r8, lsl #3
   29184:	muleq	r2, r4, r2
   29188:	ldrh	r3, [r4, #72]	; 0x48
   2918c:	tst	r3, #256	; 0x100
   29190:	beq	291a4 <__flatcc_fb_build_schema@@Base+0xdc0>
   29194:	ldr	r2, [pc, #676]	; 29440 <__flatcc_fb_build_schema@@Base+0x105c>
   29198:	ldr	r1, [r4, #4]
   2919c:	mov	r0, fp
   291a0:	bl	275d0 <__flatcc_fb_clear_parser@@Base+0x120>
   291a4:	ldr	r8, [fp, #148]	; 0x94
   291a8:	mov	r3, #14
   291ac:	str	r7, [r4, #16]
   291b0:	strh	r3, [r4, #24]
   291b4:	ldrd	r2, [r7, #112]	; 0x70
   291b8:	ldrh	ip, [r7, #8]
   291bc:	strd	r2, [r4, #88]	; 0x58
   291c0:	ldrh	r3, [r7, #104]	; 0x68
   291c4:	eor	r2, r5, #1
   291c8:	cmp	ip, #4
   291cc:	movne	r2, #0
   291d0:	andeq	r2, r2, #1
   291d4:	cmp	r2, #0
   291d8:	strh	r3, [r4, #74]	; 0x4a
   291dc:	beq	29214 <__flatcc_fb_build_schema@@Base+0xe30>
   291e0:	ldr	r3, [sp, #20]
   291e4:	cmp	r3, #0
   291e8:	bne	29204 <__flatcc_fb_build_schema@@Base+0xe20>
   291ec:	ldrd	r0, [sp, #8]
   291f0:	ldr	r2, [pc, #636]	; 29474 <__flatcc_fb_build_schema@@Base+0x1090>
   291f4:	mov	r3, #0
   291f8:	and	r0, r0, r2
   291fc:	and	r1, r1, r3
   29200:	strd	r0, [r4, #96]	; 0x60
   29204:	ldrd	r0, [sp, #8]
   29208:	adds	r0, r0, #1
   2920c:	adc	r1, r1, #0
   29210:	strd	r0, [sp, #8]
   29214:	ldrh	r2, [r4, #56]	; 0x38
   29218:	cmp	r2, #0
   2921c:	beq	292e4 <__flatcc_fb_build_schema@@Base+0xf00>
   29220:	cmp	ip, #3
   29224:	ldrne	r2, [pc, #564]	; 29460 <__flatcc_fb_build_schema@@Base+0x107c>
   29228:	bne	290ec <__flatcc_fb_build_schema@@Base+0xd08>
   2922c:	cmp	r2, #13
   29230:	add	sl, r4, #48	; 0x30
   29234:	bne	2929c <__flatcc_fb_build_schema@@Base+0xeb8>
   29238:	str	sl, [sp]
   2923c:	mov	r2, r7
   29240:	ldr	r3, [r4, #48]	; 0x30
   29244:	ldr	r1, [r6, #12]
   29248:	mov	r0, fp
   2924c:	bl	2793c <__flatcc_fb_clear_parser@@Base+0x48c>
   29250:	cmp	r0, #0
   29254:	beq	28fe4 <__flatcc_fb_build_schema@@Base+0xc00>
   29258:	ldr	r2, [pc, #484]	; 29444 <__flatcc_fb_build_schema@@Base+0x1060>
   2925c:	mov	r3, r4
   29260:	ldr	r1, [r4, #48]	; 0x30
   29264:	mov	r0, fp
   29268:	bl	25278 <error_ref_sym@@Base>
   2926c:	b	28fb4 <__flatcc_fb_build_schema@@Base+0xbd0>
   29270:	ldr	r3, [r7, #4]
   29274:	ldr	r2, [pc, #460]	; 29448 <__flatcc_fb_build_schema@@Base+0x1064>
   29278:	ldr	r1, [r4, #4]
   2927c:	mov	r0, fp
   29280:	bl	275b4 <__flatcc_fb_clear_parser@@Base+0x104>
   29284:	b	28fb4 <__flatcc_fb_build_schema@@Base+0xbd0>
   29288:	ldr	r3, [r7, #4]
   2928c:	ldr	r2, [pc, #440]	; 2944c <__flatcc_fb_build_schema@@Base+0x1068>
   29290:	b	29278 <__flatcc_fb_build_schema@@Base+0xe94>
   29294:	mov	r8, #0
   29298:	b	291a8 <__flatcc_fb_build_schema@@Base+0xdc4>
   2929c:	mov	r3, sl
   292a0:	ldr	r2, [r7, #40]	; 0x28
   292a4:	mov	r1, r4
   292a8:	mov	r0, fp
   292ac:	bl	29b88 <__flatcc_fb_coerce_scalar_type@@Base>
   292b0:	cmp	r0, #0
   292b4:	bne	28fb4 <__flatcc_fb_build_schema@@Base+0xbd0>
   292b8:	ldr	r3, [fp, #212]	; 0xd4
   292bc:	cmp	r3, #0
   292c0:	beq	28fe4 <__flatcc_fb_build_schema@@Base+0xc00>
   292c4:	ldr	r0, [r4, #16]
   292c8:	mov	r1, sl
   292cc:	add	r0, r0, #72	; 0x48
   292d0:	bl	2ea3c <fb_value_set_find_item@@Base>
   292d4:	cmp	r0, #0
   292d8:	ldreq	r2, [pc, #368]	; 29450 <__flatcc_fb_build_schema@@Base+0x106c>
   292dc:	bne	28fe4 <__flatcc_fb_build_schema@@Base+0xc00>
   292e0:	b	290ec <__flatcc_fb_build_schema@@Base+0xd08>
   292e4:	cmp	ip, #3
   292e8:	bne	28fe4 <__flatcc_fb_build_schema@@Base+0xc00>
   292ec:	mov	r3, #5
   292f0:	strh	r3, [r4, #56]	; 0x38
   292f4:	mov	sl, r4
   292f8:	mov	r2, #0
   292fc:	mov	r3, #0
   29300:	mov	r1, r7
   29304:	strd	r2, [sl, #48]!	; 0x30
   29308:	mov	r0, fp
   2930c:	mov	r3, sl
   29310:	ldr	r2, [r7, #40]	; 0x28
   29314:	bl	29b88 <__flatcc_fb_coerce_scalar_type@@Base>
   29318:	cmp	r0, #0
   2931c:	bne	28fb4 <__flatcc_fb_build_schema@@Base+0xbd0>
   29320:	ldr	r3, [fp, #212]	; 0xd4
   29324:	cmp	r3, #0
   29328:	beq	28fe4 <__flatcc_fb_build_schema@@Base+0xc00>
   2932c:	ldr	r0, [r4, #16]
   29330:	mov	r1, sl
   29334:	add	r0, r0, #72	; 0x48
   29338:	bl	2ea3c <fb_value_set_find_item@@Base>
   2933c:	cmp	r0, #0
   29340:	ldreq	r3, [r7, #4]
   29344:	ldreq	r2, [pc, #264]	; 29454 <__flatcc_fb_build_schema@@Base+0x1070>
   29348:	bne	28fe4 <__flatcc_fb_build_schema@@Base+0xc00>
   2934c:	b	29278 <__flatcc_fb_build_schema@@Base+0xe94>
   29350:	mov	r3, #0
   29354:	ldr	r2, [r4, #16]
   29358:	ldr	r1, [r6, #12]
   2935c:	mov	r0, fp
   29360:	bl	2782c <__flatcc_fb_clear_parser@@Base+0x37c>
   29364:	subs	r7, r0, #0
   29368:	bne	294e4 <__flatcc_fb_build_schema@@Base+0x1100>
   2936c:	mov	r3, r4
   29370:	ldr	r2, [pc, #224]	; 29458 <__flatcc_fb_build_schema@@Base+0x1074>
   29374:	ldr	r1, [r4, #16]
   29378:	b	29264 <__flatcc_fb_build_schema@@Base+0xe80>
   2937c:	ldrdeq	r7, [r4], -fp
   29380:	andeq	r0, r0, r6, lsl r6
   29384:	andeq	r7, r4, r2, lsr #29
   29388:	muleq	r4, fp, r6
   2938c:			; <UNDEFINED> instruction: 0x01000193
   29390:	tsthi	ip, r5, asr #27
   29394:	andeq	r8, r4, sp, ror #13
   29398:	strdeq	r7, [r4], -r4
   2939c:	strheq	fp, [r5], -r0
   293a0:	andeq	r0, r3, lr, ror #9
   293a4:	ldrdeq	r8, [r4], -r1
   293a8:	muleq	r4, r0, r8
   293ac:	andeq	r9, r4, r8, ror #2
   293b0:	andeq	r8, r4, r7, lsl #14
   293b4:	ldrdeq	r9, [r4], -r3
   293b8:	andeq	r8, r4, r1, lsr r7
   293bc:	andeq	r8, r4, r3, asr r7
   293c0:	andeq	r8, r4, r7, ror r7
   293c4:	andeq	r8, r4, r5, lsr #15
   293c8:	andeq	r8, r4, r9, ror #15
   293cc:	andeq	r8, r4, sl, lsl r8
   293d0:	andeq	r8, r4, r6, asr r8
   293d4:	strdeq	r8, [r4], -sp
   293d8:	andeq	r7, r4, r4, lsr #26
   293dc:	andeq	r0, r0, r2, lsl #6
   293e0:	andeq	r8, r4, pc, lsr #18
   293e4:	muleq	r4, sp, pc	; <UNPREDICTABLE>
   293e8:	andeq	r8, r4, r7, lsl #31
   293ec:	andeq	r8, r4, lr, lsr r9
   293f0:	andeq	r7, r4, r8, lsr #24
   293f4:	andeq	r0, r0, r6, asr #31
   293f8:	andeq	r8, r4, r5, lsl #19
   293fc:	andeq	r8, r4, pc, lsr sl
   29400:	andeq	r8, r4, r7, ror sl
   29404:			; <UNDEFINED> instruction: 0x00048ab3
   29408:	strdeq	r8, [r4], -r2
   2940c:	andeq	r8, r4, r9, lsr #22
   29410:	andeq	r8, r4, r2, asr #19
   29414:	ldrdeq	r8, [r4], -sp
   29418:	andeq	r8, r4, r8, lsl #20
   2941c:	andeq	r8, r4, r9, asr #22
   29420:	strdeq	r8, [r4], -r0
   29424:	strdeq	r8, [r4], -r4
   29428:	andeq	r8, r4, r4, lsr #9
   2942c:	andeq	r8, r4, r6, asr pc
   29430:	andeq	r8, r4, fp, ror fp
   29434:	andeq	r8, r4, r5, lsr #23
   29438:	andeq	r8, r4, r8, asr #23
   2943c:	strdeq	r8, [r4], -r2
   29440:	andeq	r8, r4, pc, lsl ip
   29444:	ldrdeq	r8, [r4], -r3
   29448:	andeq	r8, r4, r5, asr ip
   2944c:	andeq	r8, r4, r1, lsl #25
   29450:	andeq	r8, r4, r3, lsl #26
   29454:	andeq	r8, r4, r3, lsr sp
   29458:	andeq	r8, r4, r8, ror sp
   2945c:	andeq	r8, r4, ip, lsr #27
   29460:	andeq	r8, r4, r7, lsr #25
   29464:	andeq	r8, r4, pc, lsl lr
   29468:	andeq	r8, r4, ip, asr lr
   2946c:	muleq	r4, r6, lr
   29470:	strdeq	r8, [r4], -r7
   29474:	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
   29478:			; <UNDEFINED> instruction: 0x00048eb4
   2947c:	ldrdeq	r8, [r4], -r4
   29480:	andeq	r8, r4, r6, lsr #30
   29484:	muleq	r4, lr, r5
   29488:	andeq	r8, r4, sp, lsr r5
   2948c:	andeq	r8, r4, sp, asr #12
   29490:	strdeq	r8, [r4], -r8	; <UNPREDICTABLE>
   29494:	andeq	r8, r4, r1, asr #17
   29498:	andeq	r7, r4, r2, lsr sp
   2949c:	andeq	r0, r0, r9, ror #8
   294a0:	andeq	r8, r4, pc, asr #31
   294a4:	strdeq	r8, [r4], -r3
   294a8:	andeq	r8, r4, r0, ror #18
   294ac:	andeq	r9, r4, r3, lsl r0
   294b0:	andeq	r9, r4, r3, asr r0
   294b4:	muleq	r4, r0, r0
   294b8:	andeq	r9, r4, r2, asr #1
   294bc:	strdeq	r9, [r4], -r8
   294c0:	andeq	r9, r4, fp, lsr #2
   294c4:	andeq	r8, r0, r0, lsl #13
   294c8:	andeq	r7, r4, r6, asr #26
   294cc:	strdeq	r0, [r0], -r1
   294d0:	andeq	r7, r4, r2, lsr #29
   294d4:	andeq	r9, r4, r2, ror #2
   294d8:	andeq	r9, r4, pc, ror r1
   294dc:	muleq	r4, r3, r1
   294e0:			; <UNDEFINED> instruction: 0x000491b9
   294e4:	ldrh	r3, [r7, #8]
   294e8:	cmp	r3, #4
   294ec:	bhi	29500 <__flatcc_fb_build_schema@@Base+0x111c>
   294f0:	mov	sl, #1
   294f4:	lsl	r3, sl, r3
   294f8:	tst	r3, #27
   294fc:	bne	2950c <__flatcc_fb_build_schema@@Base+0x1128>
   29500:	ldr	r3, [r4, #16]
   29504:	ldr	r2, [pc, #-176]	; 2945c <__flatcc_fb_build_schema@@Base+0x1078>
   29508:	b	29278 <__flatcc_fb_build_schema@@Base+0xe94>
   2950c:	ldrh	r8, [r4, #56]	; 0x38
   29510:	cmp	r8, #0
   29514:	beq	29530 <__flatcc_fb_build_schema@@Base+0x114c>
   29518:	ldr	r2, [pc, #-192]	; 29460 <__flatcc_fb_build_schema@@Base+0x107c>
   2951c:	ldr	r1, [r4, #4]
   29520:	mov	r0, fp
   29524:	bl	275d0 <__flatcc_fb_clear_parser@@Base+0x120>
   29528:	strh	sl, [r4, #24]
   2952c:	b	28b80 <__flatcc_fb_build_schema@@Base+0x79c>
   29530:	mov	r3, #15
   29534:	str	r7, [r4, #16]
   29538:	strh	r3, [r4, #24]
   2953c:	ldrd	r2, [r7, #112]	; 0x70
   29540:	strd	r2, [r4, #88]	; 0x58
   29544:	ldrh	r3, [r7, #104]	; 0x68
   29548:	strh	r3, [r4, #74]	; 0x4a
   2954c:	ldrh	r3, [r7, #8]
   29550:	cmp	r3, #4
   29554:	bne	28fe4 <__flatcc_fb_build_schema@@Base+0xc00>
   29558:	cmp	r5, #0
   2955c:	bne	28fec <__flatcc_fb_build_schema@@Base+0xc08>
   29560:	ldr	r3, [sp, #20]
   29564:	cmp	r3, #0
   29568:	bne	29584 <__flatcc_fb_build_schema@@Base+0x11a0>
   2956c:	ldrd	r2, [sp, #8]
   29570:	ldr	r0, [pc, #-260]	; 29474 <__flatcc_fb_build_schema@@Base+0x1090>
   29574:	mov	r1, #0
   29578:	and	r2, r2, r0
   2957c:	and	r3, r3, r1
   29580:	strd	r2, [r4, #96]	; 0x60
   29584:	ldrd	r2, [sp, #8]
   29588:	mov	r8, r5
   2958c:	adds	r2, r2, #1
   29590:	adc	r3, r3, #0
   29594:	strd	r2, [sp, #8]
   29598:	ldr	r3, [sp, #20]
   2959c:	adds	r2, r9, #0
   295a0:	movne	r2, #1
   295a4:	eor	r3, r3, #1
   295a8:	tst	r2, r3
   295ac:	ldrne	r2, [pc, #-336]	; 29464 <__flatcc_fb_build_schema@@Base+0x1080>
   295b0:	bne	2965c <__flatcc_fb_build_schema@@Base+0x1278>
   295b4:	ldr	r3, [sp, #20]
   295b8:	cmp	r9, #0
   295bc:	movne	r3, #0
   295c0:	andeq	r3, r3, #1
   295c4:	cmp	r3, #0
   295c8:	ldrne	r2, [pc, #-360]	; 29468 <__flatcc_fb_build_schema@@Base+0x1084>
   295cc:	bne	29600 <__flatcc_fb_build_schema@@Base+0x121c>
   295d0:	cmp	r9, #0
   295d4:	moveq	r5, r9
   295d8:	beq	28fec <__flatcc_fb_build_schema@@Base+0xc08>
   295dc:	ldrh	r3, [r9, #16]
   295e0:	cmp	r3, #5
   295e4:	bne	29650 <__flatcc_fb_build_schema@@Base+0x126c>
   295e8:	ldrd	r2, [r9, #8]
   295ec:	ldrd	r0, [fp, #216]	; 0xd8
   295f0:	cmp	r3, r1
   295f4:	cmpeq	r2, r0
   295f8:	bcc	2961c <__flatcc_fb_build_schema@@Base+0x1238>
   295fc:	ldr	r2, [pc, #-408]	; 2946c <__flatcc_fb_build_schema@@Base+0x1088>
   29600:	ldr	r1, [r4, #4]
   29604:	mov	r0, fp
   29608:	bl	275d0 <__flatcc_fb_clear_parser@@Base+0x120>
   2960c:	mov	r5, #1
   29610:	b	28fec <__flatcc_fb_build_schema@@Base+0xc08>
   29614:	ldr	r2, [pc, #-428]	; 29470 <__flatcc_fb_build_schema@@Base+0x108c>
   29618:	b	290ec <__flatcc_fb_build_schema@@Base+0xd08>
   2961c:	ldr	r0, [pc, #-432]	; 29474 <__flatcc_fb_build_schema@@Base+0x1090>
   29620:	mov	r1, #0
   29624:	and	r0, r0, r2
   29628:	and	r1, r1, r3
   2962c:	mov	r2, r0
   29630:	mov	r3, r1
   29634:	ldrd	r0, [sp, #24]
   29638:	strd	r2, [r4, #96]	; 0x60
   2963c:	cmp	r1, r3
   29640:	cmpeq	r0, r2
   29644:	strdcc	r2, [sp, #24]
   29648:	mov	r5, #0
   2964c:	b	28fec <__flatcc_fb_build_schema@@Base+0xc08>
   29650:	cmp	r3, #4
   29654:	ldreq	r2, [pc, #-484]	; 29478 <__flatcc_fb_build_schema@@Base+0x1094>
   29658:	ldrne	r2, [pc, #-484]	; 2947c <__flatcc_fb_build_schema@@Base+0x1098>
   2965c:	ldr	r1, [r9, #4]
   29660:	b	29604 <__flatcc_fb_build_schema@@Base+0x1220>
   29664:	cmp	r5, #0
   29668:	moveq	r3, #1
   2966c:	strbeq	r3, [r2]
   29670:	beq	2902c <__flatcc_fb_build_schema@@Base+0xc48>
   29674:	ldr	r2, [pc, #-508]	; 29480 <__flatcc_fb_build_schema@@Base+0x109c>
   29678:	ldr	r1, [r9, #4]
   2967c:	mov	r0, fp
   29680:	bl	275d0 <__flatcc_fb_clear_parser@@Base+0x120>
   29684:	mov	r5, #0
   29688:	b	2902c <__flatcc_fb_build_schema@@Base+0xc48>
   2968c:	ldr	r1, [sp, #16]
   29690:	sub	r0, r0, #1
   29694:	ldr	r2, [sp, #16]
   29698:	ldrb	r5, [r1, r0]
   2969c:	add	r2, r2, r0
   296a0:	cmp	r5, #2
   296a4:	ldreq	r2, [pc, #-552]	; 29484 <__flatcc_fb_build_schema@@Base+0x10a0>
   296a8:	ldreq	r1, [pc, #-552]	; 29488 <__flatcc_fb_build_schema@@Base+0x10a4>
   296ac:	beq	29070 <__flatcc_fb_build_schema@@Base+0xc8c>
   296b0:	cmp	r5, #0
   296b4:	moveq	r3, #2
   296b8:	strbeq	r3, [r2]
   296bc:	beq	29088 <__flatcc_fb_build_schema@@Base+0xca4>
   296c0:	ldr	r2, [pc, #-572]	; 2948c <__flatcc_fb_build_schema@@Base+0x10a8>
   296c4:	ldr	r1, [pc, #-572]	; 29490 <__flatcc_fb_build_schema@@Base+0x10ac>
   296c8:	b	29070 <__flatcc_fb_build_schema@@Base+0xc8c>
   296cc:	mov	r3, r5
   296d0:	mov	r2, r4
   296d4:	mov	r1, r8
   296d8:	add	r0, sp, #100	; 0x64
   296dc:	bl	14040 <sprintf@plt>
   296e0:	add	r2, sp, #100	; 0x64
   296e4:	ldr	r1, [r6, #4]
   296e8:	mov	r0, fp
   296ec:	bl	275d0 <__flatcc_fb_clear_parser@@Base+0x120>
   296f0:	mov	r3, r9
   296f4:	adds	r4, r4, #1
   296f8:	adc	r5, r5, #0
   296fc:	b	28b04 <__flatcc_fb_build_schema@@Base+0x720>
   29700:	ldr	r3, [sp, #32]
   29704:	mov	r7, r5
   29708:	cmp	r3, #0
   2970c:	beq	2973c <__flatcc_fb_build_schema@@Base+0x1358>
   29710:	ldrh	r3, [r6, #10]
   29714:	orr	r3, r3, #8
   29718:	strh	r3, [r6, #10]
   2971c:	ldr	r3, [sp, #32]
   29720:	cmp	r3, #1
   29724:	ble	2973c <__flatcc_fb_build_schema@@Base+0x1358>
   29728:	ldr	r3, [fp, #156]	; 0x9c
   2972c:	cmp	r3, #0
   29730:	ldreq	r2, [pc, #-676]	; 29494 <__flatcc_fb_build_schema@@Base+0x10b0>
   29734:	ldreq	r1, [r6, #4]
   29738:	beq	28b9c <__flatcc_fb_build_schema@@Base+0x7b8>
   2973c:	cmp	r7, #0
   29740:	beq	28a2c <__flatcc_fb_build_schema@@Base+0x648>
   29744:	b	28ba4 <__flatcc_fb_build_schema@@Base+0x7c0>
   29748:	ldrh	r3, [r6, #48]	; 0x30
   2974c:	cmp	r3, #1
   29750:	beq	28a2c <__flatcc_fb_build_schema@@Base+0x648>
   29754:	cmp	r3, #0
   29758:	ldrne	r3, [pc, #-712]	; 29498 <__flatcc_fb_build_schema@@Base+0x10b4>
   2975c:	ldrne	r2, [pc, #-712]	; 2949c <__flatcc_fb_build_schema@@Base+0x10b8>
   29760:	bne	28a50 <__flatcc_fb_build_schema@@Base+0x66c>
   29764:	ldr	r3, [r6, #28]
   29768:	cmp	r3, #0
   2976c:	beq	29780 <__flatcc_fb_build_schema@@Base+0x139c>
   29770:	ldr	r2, [pc, #-728]	; 294a0 <__flatcc_fb_build_schema@@Base+0x10bc>
   29774:	ldr	r1, [r6, #4]
   29778:	mov	r0, fp
   2977c:	bl	275d0 <__flatcc_fb_clear_parser@@Base+0x120>
   29780:	ldr	r7, [r6, #20]
   29784:	add	r9, r6, #56	; 0x38
   29788:	mov	r4, #0
   2978c:	mov	r5, #0
   29790:	cmp	r7, #0
   29794:	beq	28a2c <__flatcc_fb_build_schema@@Base+0x648>
   29798:	mov	r2, #1
   2979c:	mov	r1, r7
   297a0:	mov	r0, r9
   297a4:	bl	22ec4 <fb_symbol_table_insert_item@@Base>
   297a8:	cmp	r0, #0
   297ac:	beq	297cc <__flatcc_fb_build_schema@@Base+0x13e8>
   297b0:	ldr	r3, [r0, #4]
   297b4:	ldr	r2, [pc, #-792]	; 294a4 <__flatcc_fb_build_schema@@Base+0x10c0>
   297b8:	ldr	r1, [r7, #4]
   297bc:	mov	r0, fp
   297c0:	bl	275b4 <__flatcc_fb_clear_parser@@Base+0x104>
   297c4:	ldr	r7, [r7]
   297c8:	b	29790 <__flatcc_fb_build_schema@@Base+0x13ac>
   297cc:	ldrh	r3, [r7, #8]
   297d0:	cmp	r3, #5
   297d4:	ldrne	r2, [pc, #-820]	; 294a8 <__flatcc_fb_build_schema@@Base+0x10c4>
   297d8:	ldrne	r1, [r7, #4]
   297dc:	bne	28b9c <__flatcc_fb_build_schema@@Base+0x7b8>
   297e0:	ldrh	r3, [r7, #56]	; 0x38
   297e4:	cmp	r3, #0
   297e8:	beq	297fc <__flatcc_fb_build_schema@@Base+0x1418>
   297ec:	ldr	r2, [pc, #-840]	; 294ac <__flatcc_fb_build_schema@@Base+0x10c8>
   297f0:	ldr	r1, [r7, #4]
   297f4:	mov	r0, fp
   297f8:	bl	275d0 <__flatcc_fb_clear_parser@@Base+0x120>
   297fc:	ldrh	r3, [r7, #24]
   29800:	cmp	r3, #1
   29804:	beq	297c4 <__flatcc_fb_build_schema@@Base+0x13e0>
   29808:	cmp	r3, #12
   2980c:	beq	29820 <__flatcc_fb_build_schema@@Base+0x143c>
   29810:	ldr	r2, [pc, #-872]	; 294b0 <__flatcc_fb_build_schema@@Base+0x10cc>
   29814:	ldr	r1, [r7, #4]
   29818:	mov	r0, fp
   2981c:	bl	275d0 <__flatcc_fb_clear_parser@@Base+0x120>
   29820:	mov	r3, #0
   29824:	ldr	r2, [r7, #32]
   29828:	ldr	r1, [r6, #12]
   2982c:	mov	r0, fp
   29830:	bl	2782c <__flatcc_fb_clear_parser@@Base+0x37c>
   29834:	cmp	r0, #0
   29838:	bne	29854 <__flatcc_fb_build_schema@@Base+0x1470>
   2983c:	ldr	r2, [pc, #-912]	; 294b4 <__flatcc_fb_build_schema@@Base+0x10d0>
   29840:	ldr	r1, [r7, #32]
   29844:	mov	r3, r7
   29848:	mov	r0, fp
   2984c:	bl	25278 <error_ref_sym@@Base>
   29850:	b	29874 <__flatcc_fb_build_schema@@Base+0x1490>
   29854:	ldrh	r3, [r0, #8]
   29858:	cmp	r3, #0
   2985c:	beq	29880 <__flatcc_fb_build_schema@@Base+0x149c>
   29860:	ldr	r3, [r0, #4]
   29864:	ldr	r2, [pc, #-948]	; 294b8 <__flatcc_fb_build_schema@@Base+0x10d4>
   29868:	ldr	r1, [r7, #4]
   2986c:	mov	r0, fp
   29870:	bl	275b4 <__flatcc_fb_clear_parser@@Base+0x104>
   29874:	mov	r3, #1
   29878:	strh	r3, [r7, #24]
   2987c:	b	297c4 <__flatcc_fb_build_schema@@Base+0x13e0>
   29880:	mov	r8, #14
   29884:	str	r0, [r7, #32]
   29888:	strh	r8, [r7, #40]	; 0x28
   2988c:	ldr	r2, [r7, #16]
   29890:	ldr	r1, [r6, #12]
   29894:	mov	r0, fp
   29898:	bl	2782c <__flatcc_fb_clear_parser@@Base+0x37c>
   2989c:	cmp	r0, #0
   298a0:	moveq	r3, r7
   298a4:	ldreq	r2, [pc, #-1008]	; 294bc <__flatcc_fb_build_schema@@Base+0x10d8>
   298a8:	ldreq	r1, [r7, #16]
   298ac:	beq	29848 <__flatcc_fb_build_schema@@Base+0x1464>
   298b0:	ldrh	r3, [r0, #8]
   298b4:	cmp	r3, #0
   298b8:	ldrne	r3, [r0, #4]
   298bc:	ldrne	r2, [pc, #-1028]	; 294c0 <__flatcc_fb_build_schema@@Base+0x10dc>
   298c0:	bne	29868 <__flatcc_fb_build_schema@@Base+0x1484>
   298c4:	str	r0, [r7, #16]
   298c8:	strh	r8, [r7, #24]
   298cc:	strd	r4, [r7, #88]	; 0x58
   298d0:	add	r3, sp, #100	; 0x64
   298d4:	mov	r2, #4
   298d8:	ldr	r1, [r7, #64]	; 0x40
   298dc:	mov	r0, fp
   298e0:	bl	275d8 <__flatcc_fb_clear_parser@@Base+0x128>
   298e4:	strh	r0, [r7, #72]	; 0x48
   298e8:	b	297c4 <__flatcc_fb_build_schema@@Base+0x13e0>
   298ec:	ldr	r2, [r3, #120]	; 0x78
   298f0:	str	r6, [r3, #120]	; 0x78
   298f4:	mov	r6, r3
   298f8:	mov	r3, r2
   298fc:	b	28664 <__flatcc_fb_build_schema@@Base+0x280>
   29900:	ldrh	r3, [r5, #8]
   29904:	cmp	r3, #0
   29908:	bne	299e0 <__flatcc_fb_build_schema@@Base+0x15fc>
   2990c:	ldrh	r1, [r5, #92]	; 0x5c
   29910:	ldr	r4, [r5, #20]
   29914:	ands	r7, r1, #8
   29918:	strne	r3, [sp, #100]	; 0x64
   2991c:	addne	r3, sp, #100	; 0x64
   29920:	bne	299cc <__flatcc_fb_build_schema@@Base+0x15e8>
   29924:	mov	r2, #36	; 0x24
   29928:	mov	r1, r7
   2992c:	add	r0, sp, #52	; 0x34
   29930:	bl	13fec <memset@plt>
   29934:	mov	r2, #36	; 0x24
   29938:	mov	r1, r7
   2993c:	add	r0, sp, #100	; 0x64
   29940:	bl	13fec <memset@plt>
   29944:	ldr	ip, [pc, #-1160]	; 294c4 <__flatcc_fb_build_schema@@Base+0x10e0>
   29948:	mov	r2, r4
   2994c:	mov	lr, #1
   29950:	mov	r1, r7
   29954:	cmp	r2, #0
   29958:	bne	299e8 <__flatcc_fb_build_schema@@Base+0x1604>
   2995c:	mov	r1, #8
   29960:	str	r6, [sp, #132]	; 0x84
   29964:	sub	r2, r1, #1
   29968:	add	r3, sp, #52	; 0x34
   2996c:	uxth	r2, r2
   29970:	add	r2, r3, r2, lsl #2
   29974:	add	r2, r2, #4
   29978:	mov	r3, r1
   2997c:	ldr	r0, [r2, #-4]!
   29980:	sub	r3, r3, #1
   29984:	cmp	r0, #0
   29988:	uxth	r3, r3
   2998c:	bne	29998 <__flatcc_fb_build_schema@@Base+0x15b4>
   29990:	cmp	r3, #0
   29994:	bne	2997c <__flatcc_fb_build_schema@@Base+0x1598>
   29998:	add	r2, sp, #200	; 0xc8
   2999c:	add	r2, r2, r3, lsl #2
   299a0:	cmp	r3, #0
   299a4:	ldr	r0, [r2, #-148]	; 0xffffff6c
   299a8:	add	r2, sp, #200	; 0xc8
   299ac:	add	r1, r2, r1, lsl #2
   299b0:	ldr	r2, [r1, #-100]	; 0xffffff9c
   299b4:	str	r0, [r2]
   299b8:	bne	29ad8 <__flatcc_fb_build_schema@@Base+0x16f4>
   299bc:	ldr	r3, [sp, #84]	; 0x54
   299c0:	b	299dc <__flatcc_fb_build_schema@@Base+0x15f8>
   299c4:	add	r3, r4, #108	; 0x6c
   299c8:	ldr	r4, [r4]
   299cc:	cmp	r4, #0
   299d0:	str	r4, [r3]
   299d4:	bne	299c4 <__flatcc_fb_build_schema@@Base+0x15e0>
   299d8:	ldr	r3, [sp, #100]	; 0x64
   299dc:	str	r3, [r5, #24]
   299e0:	ldr	r5, [r5]
   299e4:	b	28678 <__flatcc_fb_build_schema@@Base+0x294>
   299e8:	ldrh	r3, [r2, #24]
   299ec:	ldrh	r0, [r2, #74]	; 0x4a
   299f0:	cmp	r3, #15
   299f4:	bhi	29a38 <__flatcc_fb_build_schema@@Base+0x1654>
   299f8:	lsl	r3, lr, r3
   299fc:	ands	r7, r3, ip
   29a00:	bne	29a8c <__flatcc_fb_build_schema@@Base+0x16a8>
   29a04:	tst	r3, #2
   29a08:	bne	29a94 <__flatcc_fb_build_schema@@Base+0x16b0>
   29a0c:	tst	r3, #16384	; 0x4000
   29a10:	beq	29a38 <__flatcc_fb_build_schema@@Base+0x1654>
   29a14:	ldr	r0, [r2, #16]
   29a18:	ldrh	r3, [r0, #8]
   29a1c:	cmp	r3, #3
   29a20:	beq	29a34 <__flatcc_fb_build_schema@@Base+0x1650>
   29a24:	cmp	r3, #4
   29a28:	beq	29a8c <__flatcc_fb_build_schema@@Base+0x16a8>
   29a2c:	cmp	r3, #1
   29a30:	bne	29a8c <__flatcc_fb_build_schema@@Base+0x16a8>
   29a34:	ldrh	r0, [r0, #104]	; 0x68
   29a38:	cmp	r0, #0
   29a3c:	beq	29ab8 <__flatcc_fb_build_schema@@Base+0x16d4>
   29a40:	mov	r3, r1
   29a44:	lsrs	r0, r0, #1
   29a48:	bne	29acc <__flatcc_fb_build_schema@@Base+0x16e8>
   29a4c:	cmp	r3, #7
   29a50:	movcs	r3, #7
   29a54:	add	r0, sp, #200	; 0xc8
   29a58:	lsl	r3, r3, #2
   29a5c:	add	r0, r0, r3
   29a60:	ldr	r7, [r0, #-148]	; 0xffffff6c
   29a64:	cmp	r7, #0
   29a68:	streq	r2, [r0, #-148]	; 0xffffff6c
   29a6c:	ldrne	r0, [r0, #-100]	; 0xffffff9c
   29a70:	strne	r2, [r0]
   29a74:	add	r0, sp, #200	; 0xc8
   29a78:	add	r3, r0, r3
   29a7c:	add	r0, r2, #108	; 0x6c
   29a80:	str	r0, [r3, #-100]	; 0xffffff9c
   29a84:	ldr	r2, [r2]
   29a88:	b	29954 <__flatcc_fb_build_schema@@Base+0x1570>
   29a8c:	ldrh	r0, [fp, #192]	; 0xc0
   29a90:	b	29a38 <__flatcc_fb_build_schema@@Base+0x1654>
   29a94:	add	r3, sp, #200	; 0xc8
   29a98:	str	r7, [r3, #-152]!	; 0xffffff68
   29a9c:	cmp	r4, #0
   29aa0:	str	r4, [r3]
   29aa4:	ldreq	r3, [sp, #48]	; 0x30
   29aa8:	beq	299dc <__flatcc_fb_build_schema@@Base+0x15f8>
   29aac:	add	r3, r4, #108	; 0x6c
   29ab0:	ldr	r4, [r4]
   29ab4:	b	29a9c <__flatcc_fb_build_schema@@Base+0x16b8>
   29ab8:	ldr	r3, [pc, #-1528]	; 294c8 <__flatcc_fb_build_schema@@Base+0x10e4>
   29abc:	ldr	r2, [pc, #-1528]	; 294cc <__flatcc_fb_build_schema@@Base+0x10e8>
   29ac0:	ldr	r1, [pc, #-1528]	; 294d0 <__flatcc_fb_build_schema@@Base+0x10ec>
   29ac4:	ldr	r0, [pc, #-1528]	; 294d4 <__flatcc_fb_build_schema@@Base+0x10f0>
   29ac8:	b	2841c <__flatcc_fb_build_schema@@Base+0x38>
   29acc:	add	r3, r3, #1
   29ad0:	uxth	r3, r3
   29ad4:	b	29a44 <__flatcc_fb_build_schema@@Base+0x1660>
   29ad8:	mov	r1, r3
   29adc:	b	29964 <__flatcc_fb_build_schema@@Base+0x1580>
   29ae0:	mov	r3, r5
   29ae4:	ldr	r1, [fp, #408]	; 0x198
   29ae8:	mov	r0, fp
   29aec:	bl	2782c <__flatcc_fb_clear_parser@@Base+0x37c>
   29af0:	cmp	r0, #0
   29af4:	str	r0, [fp, #404]	; 0x194
   29af8:	moveq	r3, r5
   29afc:	ldreq	r2, [pc, #-1580]	; 294d8 <__flatcc_fb_build_schema@@Base+0x10f4>
   29b00:	beq	29b40 <__flatcc_fb_build_schema@@Base+0x175c>
   29b04:	ldr	r3, [fp, #176]	; 0xb0
   29b08:	cmp	r3, #0
   29b0c:	ldrh	r3, [r0, #8]
   29b10:	beq	29b30 <__flatcc_fb_build_schema@@Base+0x174c>
   29b14:	cmp	r3, #1
   29b18:	movhi	r3, r5
   29b1c:	ldrhi	r2, [pc, #-1608]	; 294dc <__flatcc_fb_build_schema@@Base+0x10f8>
   29b20:	bhi	29b40 <__flatcc_fb_build_schema@@Base+0x175c>
   29b24:	mov	r3, #0
   29b28:	str	r3, [fp, #400]	; 0x190
   29b2c:	b	286a8 <__flatcc_fb_build_schema@@Base+0x2c4>
   29b30:	cmp	r3, #0
   29b34:	beq	29b24 <__flatcc_fb_build_schema@@Base+0x1740>
   29b38:	ldr	r2, [pc, #-1632]	; 294e0 <__flatcc_fb_build_schema@@Base+0x10fc>
   29b3c:	mov	r3, r5
   29b40:	ldr	r1, [fp, #400]	; 0x190
   29b44:	mov	r0, fp
   29b48:	bl	25278 <error_ref_sym@@Base>
   29b4c:	b	29b24 <__flatcc_fb_build_schema@@Base+0x1740>
   29b50:	strh	r0, [r5, #104]	; 0x68
   29b54:	b	2879c <__flatcc_fb_build_schema@@Base+0x3b8>
   29b58:	ldr	r2, [sp, #32]
   29b5c:	cmp	r2, #0
   29b60:	beq	28a2c <__flatcc_fb_build_schema@@Base+0x648>
   29b64:	mov	r7, r3
   29b68:	b	29710 <__flatcc_fb_build_schema@@Base+0x132c>
   29b6c:	mov	r3, #0
   29b70:	push	{r0, r1, r2, lr}
   29b74:	str	r3, [sp, #4]
   29b78:	str	r3, [sp]
   29b7c:	bl	24474 <__flatcc_error_report@@Base>
   29b80:	add	sp, sp, #12
   29b84:	pop	{pc}		; (ldr pc, [sp], #4)

00029b88 <__flatcc_fb_coerce_scalar_type@@Base>:
   29b88:	ldrh	ip, [r3, #8]
   29b8c:	cmp	ip, #0
   29b90:	bne	29b9c <__flatcc_fb_coerce_scalar_type@@Base+0x14>
   29b94:	mov	r0, #0
   29b98:	bx	lr
   29b9c:	cmp	ip, #4
   29ba0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   29ba4:	vpush	{d8}
   29ba8:	bne	29bc0 <__flatcc_fb_coerce_scalar_type@@Base+0x38>
   29bac:	ldrd	r4, [r3]
   29bb0:	cmp	r4, #0
   29bb4:	sbcs	ip, r5, #0
   29bb8:	movge	ip, #5
   29bbc:	strhge	ip, [r3, #8]
   29bc0:	ldrh	ip, [r3, #8]
   29bc4:	cmp	ip, #1
   29bc8:	beq	29c7c <__flatcc_fb_coerce_scalar_type@@Base+0xf4>
   29bcc:	cmp	r2, #5
   29bd0:	mov	r4, r3
   29bd4:	sub	r3, ip, #6
   29bd8:	clz	r3, r3
   29bdc:	lsr	r3, r3, #5
   29be0:	moveq	r3, #0
   29be4:	cmp	r3, #0
   29be8:	mov	sl, r1
   29bec:	mov	r5, r0
   29bf0:	sub	r2, r2, #1
   29bf4:	beq	29c38 <__flatcc_fb_coerce_scalar_type@@Base+0xb0>
   29bf8:	ldr	r3, [r0, #144]	; 0x90
   29bfc:	cmp	r3, #0
   29c00:	beq	29c38 <__flatcc_fb_coerce_scalar_type@@Base+0xb0>
   29c04:	ldrb	r0, [r4]
   29c08:	mov	r1, #0
   29c0c:	cmp	r1, #0
   29c10:	mov	r3, #5
   29c14:	cmpeq	r0, #1
   29c18:	strh	r3, [r4, #8]
   29c1c:	strd	r0, [r4]
   29c20:	bls	29f98 <__flatcc_fb_coerce_scalar_type@@Base+0x410>
   29c24:	ldr	r3, [pc, #932]	; 29fd0 <__flatcc_fb_coerce_scalar_type@@Base+0x448>
   29c28:	mov	r2, #52	; 0x34
   29c2c:	ldr	r1, [pc, #928]	; 29fd4 <__flatcc_fb_coerce_scalar_type@@Base+0x44c>
   29c30:	ldr	r0, [pc, #928]	; 29fd8 <__flatcc_fb_coerce_scalar_type@@Base+0x450>
   29c34:	bl	14094 <__assert_fail@plt>
   29c38:	cmp	r2, #10
   29c3c:	ldrls	pc, [pc, r2, lsl #2]
   29c40:	b	29f90 <__flatcc_fb_coerce_scalar_type@@Base+0x408>
   29c44:	andeq	r9, r2, r0, ror ip
   29c48:	andeq	r9, r2, r4, lsl #25
   29c4c:	ldrdeq	r9, [r2], -r0
   29c50:	andeq	r9, r2, r0, lsl #26
   29c54:	andeq	r9, r2, r4, ror #28
   29c58:	andeq	r9, r2, r8, lsr #26
   29c5c:	andeq	r9, r2, r8, ror #26
   29c60:			; <UNDEFINED> instruction: 0x00029dbc
   29c64:	andeq	r9, r2, r0, lsl lr
   29c68:	andeq	r9, r2, r0, lsr #29
   29c6c:	andeq	r9, r2, ip, lsl pc
   29c70:	cmp	ip, #5
   29c74:	ldrne	r2, [pc, #864]	; 29fdc <__flatcc_fb_coerce_scalar_type@@Base+0x454>
   29c78:	bne	29cb0 <__flatcc_fb_coerce_scalar_type@@Base+0x128>
   29c7c:	mov	r0, #0
   29c80:	b	29cc8 <__flatcc_fb_coerce_scalar_type@@Base+0x140>
   29c84:	ldrh	r3, [r4, #8]
   29c88:	cmp	r3, #5
   29c8c:	ldrne	r2, [pc, #844]	; 29fe0 <__flatcc_fb_coerce_scalar_type@@Base+0x458>
   29c90:	bne	29cb0 <__flatcc_fb_coerce_scalar_type@@Base+0x128>
   29c94:	ldrd	r2, [r4]
   29c98:	mov	r1, #0
   29c9c:	mvn	r0, #0
   29ca0:	cmp	r3, r1
   29ca4:	cmpeq	r2, r0
   29ca8:	ldrhi	r2, [pc, #820]	; 29fe4 <__flatcc_fb_coerce_scalar_type@@Base+0x45c>
   29cac:	bls	29c7c <__flatcc_fb_coerce_scalar_type@@Base+0xf4>
   29cb0:	mov	r0, r5
   29cb4:	ldr	r1, [sl, #4]
   29cb8:	bl	29b6c <__flatcc_fb_build_schema@@Base+0x1788>
   29cbc:	mvn	r0, #0
   29cc0:	mov	r3, #1
   29cc4:	strh	r3, [r4, #8]
   29cc8:	vpop	{d8}
   29ccc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   29cd0:	ldrh	r3, [r4, #8]
   29cd4:	cmp	r3, #5
   29cd8:	ldrne	r2, [pc, #776]	; 29fe8 <__flatcc_fb_coerce_scalar_type@@Base+0x460>
   29cdc:	bne	29cb0 <__flatcc_fb_coerce_scalar_type@@Base+0x128>
   29ce0:	ldrd	r2, [r4]
   29ce4:	ldr	r0, [pc, #768]	; 29fec <__flatcc_fb_coerce_scalar_type@@Base+0x464>
   29ce8:	mov	r1, #0
   29cec:	cmp	r3, r1
   29cf0:	cmpeq	r2, r0
   29cf4:	ldrhi	r2, [pc, #756]	; 29ff0 <__flatcc_fb_coerce_scalar_type@@Base+0x468>
   29cf8:	bls	29c7c <__flatcc_fb_coerce_scalar_type@@Base+0xf4>
   29cfc:	b	29cb0 <__flatcc_fb_coerce_scalar_type@@Base+0x128>
   29d00:	ldrh	r3, [r4, #8]
   29d04:	cmp	r3, #5
   29d08:	ldrne	r2, [pc, #740]	; 29ff4 <__flatcc_fb_coerce_scalar_type@@Base+0x46c>
   29d0c:	bne	29cb0 <__flatcc_fb_coerce_scalar_type@@Base+0x128>
   29d10:	ldrd	r2, [r4]
   29d14:	cmp	r3, #0
   29d18:	cmpeq	r2, #255	; 0xff
   29d1c:	ldrhi	r2, [pc, #724]	; 29ff8 <__flatcc_fb_coerce_scalar_type@@Base+0x470>
   29d20:	bls	29c7c <__flatcc_fb_coerce_scalar_type@@Base+0xf4>
   29d24:	b	29cb0 <__flatcc_fb_coerce_scalar_type@@Base+0x128>
   29d28:	ldrh	r3, [r4, #8]
   29d2c:	cmp	r3, #4
   29d30:	beq	29c7c <__flatcc_fb_coerce_scalar_type@@Base+0xf4>
   29d34:	cmp	r3, #5
   29d38:	bne	29d60 <__flatcc_fb_coerce_scalar_type@@Base+0x1d8>
   29d3c:	ldrd	r2, [r4]
   29d40:	cmp	r2, #0
   29d44:	sbcs	r1, r3, #0
   29d48:	ldrlt	r2, [pc, #684]	; 29ffc <__flatcc_fb_coerce_scalar_type@@Base+0x474>
   29d4c:	blt	29cb0 <__flatcc_fb_coerce_scalar_type@@Base+0x128>
   29d50:	strd	r2, [r4]
   29d54:	mov	r3, #4
   29d58:	strh	r3, [r4, #8]
   29d5c:	b	29c7c <__flatcc_fb_coerce_scalar_type@@Base+0xf4>
   29d60:	ldr	r2, [pc, #664]	; 2a000 <__flatcc_fb_coerce_scalar_type@@Base+0x478>
   29d64:	b	29cb0 <__flatcc_fb_coerce_scalar_type@@Base+0x128>
   29d68:	ldrh	r3, [r4, #8]
   29d6c:	cmp	r3, #4
   29d70:	bne	29d94 <__flatcc_fb_coerce_scalar_type@@Base+0x20c>
   29d74:	ldrd	r2, [r4]
   29d78:	mov	r0, #-2147483648	; 0x80000000
   29d7c:	mvn	r1, #0
   29d80:	cmp	r2, r0
   29d84:	sbcs	r3, r3, r1
   29d88:	ldrlt	r2, [pc, #628]	; 2a004 <__flatcc_fb_coerce_scalar_type@@Base+0x47c>
   29d8c:	bge	29c7c <__flatcc_fb_coerce_scalar_type@@Base+0xf4>
   29d90:	b	29cb0 <__flatcc_fb_coerce_scalar_type@@Base+0x128>
   29d94:	cmp	r3, #5
   29d98:	bne	29db4 <__flatcc_fb_coerce_scalar_type@@Base+0x22c>
   29d9c:	ldrd	r2, [r4]
   29da0:	cmp	r2, #-2147483648	; 0x80000000
   29da4:	sbcs	r3, r3, #0
   29da8:	ldrge	r2, [pc, #600]	; 2a008 <__flatcc_fb_coerce_scalar_type@@Base+0x480>
   29dac:	blt	29d54 <__flatcc_fb_coerce_scalar_type@@Base+0x1cc>
   29db0:	b	29cb0 <__flatcc_fb_coerce_scalar_type@@Base+0x128>
   29db4:	ldr	r2, [pc, #592]	; 2a00c <__flatcc_fb_coerce_scalar_type@@Base+0x484>
   29db8:	b	29cb0 <__flatcc_fb_coerce_scalar_type@@Base+0x128>
   29dbc:	ldrh	r3, [r4, #8]
   29dc0:	cmp	r3, #4
   29dc4:	bne	29de8 <__flatcc_fb_coerce_scalar_type@@Base+0x260>
   29dc8:	ldrd	r2, [r4]
   29dcc:	ldr	r0, [pc, #572]	; 2a010 <__flatcc_fb_coerce_scalar_type@@Base+0x488>
   29dd0:	mvn	r1, #0
   29dd4:	cmp	r2, r0
   29dd8:	sbcs	r3, r3, r1
   29ddc:	ldrlt	r2, [pc, #560]	; 2a014 <__flatcc_fb_coerce_scalar_type@@Base+0x48c>
   29de0:	bge	29c7c <__flatcc_fb_coerce_scalar_type@@Base+0xf4>
   29de4:	b	29cb0 <__flatcc_fb_coerce_scalar_type@@Base+0x128>
   29de8:	cmp	r3, #5
   29dec:	bne	29e08 <__flatcc_fb_coerce_scalar_type@@Base+0x280>
   29df0:	ldrd	r2, [r4]
   29df4:	cmp	r2, #32768	; 0x8000
   29df8:	sbcs	r3, r3, #0
   29dfc:	ldrge	r2, [pc, #532]	; 2a018 <__flatcc_fb_coerce_scalar_type@@Base+0x490>
   29e00:	blt	29d54 <__flatcc_fb_coerce_scalar_type@@Base+0x1cc>
   29e04:	b	29cb0 <__flatcc_fb_coerce_scalar_type@@Base+0x128>
   29e08:	ldr	r2, [pc, #524]	; 2a01c <__flatcc_fb_coerce_scalar_type@@Base+0x494>
   29e0c:	b	29cb0 <__flatcc_fb_coerce_scalar_type@@Base+0x128>
   29e10:	ldrh	r3, [r4, #8]
   29e14:	cmp	r3, #4
   29e18:	bne	29e3c <__flatcc_fb_coerce_scalar_type@@Base+0x2b4>
   29e1c:	ldrd	r2, [r4]
   29e20:	mvn	r0, #127	; 0x7f
   29e24:	mvn	r1, #0
   29e28:	cmp	r2, r0
   29e2c:	sbcs	r3, r3, r1
   29e30:	ldrlt	r2, [pc, #488]	; 2a020 <__flatcc_fb_coerce_scalar_type@@Base+0x498>
   29e34:	bge	29c7c <__flatcc_fb_coerce_scalar_type@@Base+0xf4>
   29e38:	b	29cb0 <__flatcc_fb_coerce_scalar_type@@Base+0x128>
   29e3c:	cmp	r3, #5
   29e40:	bne	29e5c <__flatcc_fb_coerce_scalar_type@@Base+0x2d4>
   29e44:	ldrd	r2, [r4]
   29e48:	cmp	r2, #128	; 0x80
   29e4c:	sbcs	r3, r3, #0
   29e50:	ldrge	r2, [pc, #460]	; 2a024 <__flatcc_fb_coerce_scalar_type@@Base+0x49c>
   29e54:	blt	29d54 <__flatcc_fb_coerce_scalar_type@@Base+0x1cc>
   29e58:	b	29cb0 <__flatcc_fb_coerce_scalar_type@@Base+0x128>
   29e5c:	ldr	r2, [pc, #452]	; 2a028 <__flatcc_fb_coerce_scalar_type@@Base+0x4a0>
   29e60:	b	29cb0 <__flatcc_fb_coerce_scalar_type@@Base+0x128>
   29e64:	cmp	ip, #5
   29e68:	bne	29e90 <__flatcc_fb_coerce_scalar_type@@Base+0x308>
   29e6c:	ldr	r3, [r5, #144]	; 0x90
   29e70:	cmp	r3, #0
   29e74:	beq	29e98 <__flatcc_fb_coerce_scalar_type@@Base+0x310>
   29e78:	ldrd	r2, [r4]
   29e7c:	cmp	r3, #0
   29e80:	cmpeq	r2, #1
   29e84:	ldrhi	r2, [pc, #416]	; 2a02c <__flatcc_fb_coerce_scalar_type@@Base+0x4a4>
   29e88:	bls	29c7c <__flatcc_fb_coerce_scalar_type@@Base+0xf4>
   29e8c:	b	29cb0 <__flatcc_fb_coerce_scalar_type@@Base+0x128>
   29e90:	cmp	ip, #6
   29e94:	beq	29c7c <__flatcc_fb_coerce_scalar_type@@Base+0xf4>
   29e98:	ldr	r2, [pc, #400]	; 2a030 <__flatcc_fb_coerce_scalar_type@@Base+0x4a8>
   29e9c:	b	29cb0 <__flatcc_fb_coerce_scalar_type@@Base+0x128>
   29ea0:	ldrh	r3, [r4, #8]
   29ea4:	cmp	r3, #4
   29ea8:	beq	29ec4 <__flatcc_fb_coerce_scalar_type@@Base+0x33c>
   29eac:	cmp	r3, #5
   29eb0:	beq	29efc <__flatcc_fb_coerce_scalar_type@@Base+0x374>
   29eb4:	cmp	r3, #3
   29eb8:	ldrne	r2, [pc, #372]	; 2a034 <__flatcc_fb_coerce_scalar_type@@Base+0x4ac>
   29ebc:	bne	29cb0 <__flatcc_fb_coerce_scalar_type@@Base+0x128>
   29ec0:	b	29c7c <__flatcc_fb_coerce_scalar_type@@Base+0xf4>
   29ec4:	ldrd	r6, [r4]
   29ec8:	mov	r0, r6
   29ecc:	mov	r1, r7
   29ed0:	bl	2efcc <fb_value_set_visit@@Base+0x584>
   29ed4:	mov	r8, r0
   29ed8:	mov	r9, r1
   29edc:	bl	2f2f4 <fb_value_set_visit@@Base+0x8ac>
   29ee0:	cmp	r7, r1
   29ee4:	cmpeq	r6, r0
   29ee8:	ldrne	r2, [pc, #328]	; 2a038 <__flatcc_fb_coerce_scalar_type@@Base+0x4b0>
   29eec:	bne	29cb0 <__flatcc_fb_coerce_scalar_type@@Base+0x128>
   29ef0:	strd	r8, [r4]
   29ef4:	mov	r3, #3
   29ef8:	b	29d58 <__flatcc_fb_coerce_scalar_type@@Base+0x1d0>
   29efc:	ldrd	r6, [r4]
   29f00:	mov	r0, r6
   29f04:	mov	r1, r7
   29f08:	bl	2efb8 <fb_value_set_visit@@Base+0x570>
   29f0c:	mov	r8, r0
   29f10:	mov	r9, r1
   29f14:	bl	2f368 <fb_value_set_visit@@Base+0x920>
   29f18:	b	29ee0 <__flatcc_fb_coerce_scalar_type@@Base+0x358>
   29f1c:	ldrh	r3, [r4, #8]
   29f20:	cmp	r3, #4
   29f24:	beq	29f40 <__flatcc_fb_coerce_scalar_type@@Base+0x3b8>
   29f28:	cmp	r3, #5
   29f2c:	beq	29f74 <__flatcc_fb_coerce_scalar_type@@Base+0x3ec>
   29f30:	cmp	r3, #3
   29f34:	ldrne	r2, [pc, #256]	; 2a03c <__flatcc_fb_coerce_scalar_type@@Base+0x4b4>
   29f38:	bne	29cb0 <__flatcc_fb_coerce_scalar_type@@Base+0x128>
   29f3c:	b	29c7c <__flatcc_fb_coerce_scalar_type@@Base+0xf4>
   29f40:	ldrd	r6, [r4]
   29f44:	mov	r0, r6
   29f48:	mov	r1, r7
   29f4c:	bl	2f200 <fb_value_set_visit@@Base+0x7b8>
   29f50:	vmov	s16, r0
   29f54:	bl	2f2c8 <fb_value_set_visit@@Base+0x880>
   29f58:	cmp	r7, r1
   29f5c:	cmpeq	r6, r0
   29f60:	ldrne	r2, [pc, #216]	; 2a040 <__flatcc_fb_coerce_scalar_type@@Base+0x4b8>
   29f64:	bne	29cb0 <__flatcc_fb_coerce_scalar_type@@Base+0x128>
   29f68:	vcvt.f64.f32	d8, s16
   29f6c:	vstr	d8, [r4]
   29f70:	b	29ef4 <__flatcc_fb_coerce_scalar_type@@Base+0x36c>
   29f74:	ldrd	r6, [r4]
   29f78:	mov	r0, r6
   29f7c:	mov	r1, r7
   29f80:	bl	2f1f0 <fb_value_set_visit@@Base+0x7a8>
   29f84:	vmov	s16, r0
   29f88:	bl	2f320 <fb_value_set_visit@@Base+0x8d8>
   29f8c:	b	29f58 <__flatcc_fb_coerce_scalar_type@@Base+0x3d0>
   29f90:	ldr	r2, [pc, #172]	; 2a044 <__flatcc_fb_coerce_scalar_type@@Base+0x4bc>
   29f94:	b	29cb0 <__flatcc_fb_coerce_scalar_type@@Base+0x128>
   29f98:	cmp	r2, #10
   29f9c:	ldrls	pc, [pc, r2, lsl #2]
   29fa0:	b	29f90 <__flatcc_fb_coerce_scalar_type@@Base+0x408>
   29fa4:	andeq	r9, r2, ip, ror ip
   29fa8:	andeq	r9, r2, r4, lsl #25
   29fac:	ldrdeq	r9, [r2], -r0
   29fb0:	andeq	r9, r2, r0, lsl #26
   29fb4:	muleq	r2, r0, pc	; <UNPREDICTABLE>
   29fb8:	andeq	r9, r2, r8, lsr #26
   29fbc:	andeq	r9, r2, r8, ror #26
   29fc0:			; <UNDEFINED> instruction: 0x00029dbc
   29fc4:	andeq	r9, r2, r0, lsl lr
   29fc8:	andeq	r9, r2, r0, lsr #29
   29fcc:	andeq	r9, r2, ip, lsl pc
   29fd0:	andeq	r9, r4, r4, lsl #5
   29fd4:	andeq	r9, r4, r3, lsr #5
   29fd8:	andeq	r9, r4, r9, ror #5
   29fdc:	andeq	r9, r4, r8, lsl #6
   29fe0:	andeq	r9, r4, ip, lsr r3
   29fe4:	andeq	r9, r4, r4, ror r3
   29fe8:	muleq	r4, r1, r3
   29fec:	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
   29ff0:	andeq	r9, r4, fp, asr #7
   29ff4:	andeq	r9, r4, sl, ror #7
   29ff8:	andeq	r9, r4, r2, lsr #8
   29ffc:	andeq	r9, r4, pc, lsr r4
   2a000:	andeq	r9, r4, lr, asr r4
   2a004:	andeq	r9, r4, r8, lsl #9
   2a008:	andeq	r9, r4, r4, lsr #9
   2a00c:			; <UNDEFINED> instruction: 0x000494bf
   2a010:			; <UNDEFINED> instruction: 0xffff8000
   2a014:	andeq	r9, r4, ip, ror #9
   2a018:	andeq	r9, r4, sl, lsl #10
   2a01c:	andeq	r9, r4, r7, lsr #10
   2a020:	andeq	r9, r4, r6, asr r5
   2a024:	andeq	r9, r4, r2, ror r5
   2a028:	andeq	r9, r4, sp, lsl #11
   2a02c:			; <UNDEFINED> instruction: 0x000495ba
   2a030:	strdeq	r9, [r4], -r8
   2a034:	andeq	r9, r4, lr, asr r6
   2a038:	andeq	r9, r4, lr, lsr #12
   2a03c:	andeq	r9, r4, r6, asr #13
   2a040:	muleq	r4, r7, r6
   2a044:	strdeq	r9, [r4], -lr
   2a048:	ldr	ip, [r0, #28]
   2a04c:	ldr	r3, [r0, #64]	; 0x40
   2a050:	ldr	r2, [r0, #60]	; 0x3c
   2a054:	sub	r3, r3, ip
   2a058:	cmp	r3, r1
   2a05c:	strls	r3, [r0, #24]
   2a060:	strhi	r1, [r0, #24]
   2a064:	ldr	r3, [r0, #32]
   2a068:	add	r2, r2, ip
   2a06c:	str	r2, [r0, #16]
   2a070:	str	r1, [r3, #4]
   2a074:	bx	lr
   2a078:	push	{r0, r1, r4, r5, r6, lr}
   2a07c:	mov	r6, r2
   2a080:	ldr	r2, [r0, #28]
   2a084:	mov	r3, #1
   2a088:	str	r3, [sp]
   2a08c:	add	r2, r1, r2
   2a090:	ldr	r5, [r0, #48]	; 0x30
   2a094:	add	r1, r0, #60	; 0x3c
   2a098:	mov	r4, r0
   2a09c:	ldr	r0, [r0, #40]	; 0x28
   2a0a0:	blx	r5
   2a0a4:	subs	r5, r0, #0
   2a0a8:	mvnne	r5, #0
   2a0ac:	bne	2a0bc <__flatcc_fb_coerce_scalar_type@@Base+0x534>
   2a0b0:	mov	r1, r6
   2a0b4:	mov	r0, r4
   2a0b8:	bl	2a048 <__flatcc_fb_coerce_scalar_type@@Base+0x4c0>
   2a0bc:	mov	r0, r5
   2a0c0:	add	sp, sp, #8
   2a0c4:	pop	{r4, r5, r6, pc}
   2a0c8:	push	{r4, r5, r6, lr}
   2a0cc:	mov	r4, r0
   2a0d0:	ldr	r5, [r0, #20]
   2a0d4:	ldr	r3, [r0, #24]
   2a0d8:	add	r1, r5, r1
   2a0dc:	cmp	r1, r3
   2a0e0:	str	r1, [r0, #20]
   2a0e4:	bcs	2a0f4 <__flatcc_fb_coerce_scalar_type@@Base+0x56c>
   2a0e8:	ldr	r0, [r4, #16]
   2a0ec:	add	r0, r0, r5
   2a0f0:	pop	{r4, r5, r6, pc}
   2a0f4:	mvn	r2, #3
   2a0f8:	add	r1, r1, #1
   2a0fc:	bl	2a078 <__flatcc_fb_coerce_scalar_type@@Base+0x4f0>
   2a100:	cmp	r0, #0
   2a104:	beq	2a0e8 <__flatcc_fb_coerce_scalar_type@@Base+0x560>
   2a108:	mov	r0, #0
   2a10c:	pop	{r4, r5, r6, pc}
   2a110:	push	{r4, lr}
   2a114:	mov	r4, r0
   2a118:	ldr	r2, [r0, #20]
   2a11c:	mov	r1, #0
   2a120:	ldr	r0, [r0, #16]
   2a124:	bl	13fec <memset@plt>
   2a128:	ldr	r3, [r4, #32]
   2a12c:	mov	r0, r4
   2a130:	ldr	r2, [r3, #8]
   2a134:	ldr	r1, [r3, #4]
   2a138:	str	r2, [r4, #20]
   2a13c:	ldr	r2, [r3]
   2a140:	str	r2, [r4, #28]
   2a144:	bl	2a048 <__flatcc_fb_coerce_scalar_type@@Base+0x4c0>
   2a148:	ldrh	r3, [r4, #130]	; 0x82
   2a14c:	ldrh	r2, [r4, #128]	; 0x80
   2a150:	cmp	r2, r3
   2a154:	strhcc	r3, [r4, #128]	; 0x80
   2a158:	ldr	r3, [r4, #32]
   2a15c:	sub	r3, r3, #36	; 0x24
   2a160:	ldrh	r2, [r3, #48]	; 0x30
   2a164:	str	r3, [r4, #32]
   2a168:	ldr	r3, [r4, #156]	; 0x9c
   2a16c:	strh	r2, [r4, #130]	; 0x82
   2a170:	sub	r3, r3, #1
   2a174:	str	r3, [r4, #156]	; 0x9c
   2a178:	pop	{r4, pc}
   2a17c:	ldr	r3, [r0, #20]
   2a180:	mov	r2, r1
   2a184:	sub	r3, r3, r1
   2a188:	str	r3, [r0, #20]
   2a18c:	ldr	r0, [r0, #16]
   2a190:	mov	r1, #0
   2a194:	add	r0, r0, r3
   2a198:	b	13fec <memset@plt>
   2a19c:	push	{r4, r5, r6, lr}
   2a1a0:	mov	r6, r1
   2a1a4:	mov	r1, r2
   2a1a8:	mov	r4, r2
   2a1ac:	bl	2a0c8 <__flatcc_fb_coerce_scalar_type@@Base+0x540>
   2a1b0:	subs	r5, r0, #0
   2a1b4:	beq	2a1c4 <__flatcc_fb_coerce_scalar_type@@Base+0x63c>
   2a1b8:	mov	r2, r4
   2a1bc:	mov	r1, r6
   2a1c0:	bl	13f20 <memcpy@plt>
   2a1c4:	mov	r0, r5
   2a1c8:	pop	{r4, r5, r6, pc}
   2a1cc:	push	{r0, r1, r4, lr}
   2a1d0:	add	r3, sp, #8
   2a1d4:	cmp	r0, #4
   2a1d8:	mov	r4, #0
   2a1dc:	mov	r2, r1
   2a1e0:	str	r4, [r3, #-4]!
   2a1e4:	movcs	r1, r0
   2a1e8:	movcc	r1, #4
   2a1ec:	mov	r0, r3
   2a1f0:	bl	13fe0 <posix_memalign@plt>
   2a1f4:	cmp	r0, r4
   2a1f8:	beq	2a210 <__flatcc_fb_coerce_scalar_type@@Base+0x688>
   2a1fc:	ldr	r0, [sp, #4]
   2a200:	cmp	r0, r4
   2a204:	beq	2a210 <__flatcc_fb_coerce_scalar_type@@Base+0x688>
   2a208:	bl	13f14 <free@plt>
   2a20c:	str	r4, [sp, #4]
   2a210:	ldr	r0, [sp, #4]
   2a214:	add	sp, sp, #8
   2a218:	pop	{r4, pc}

0002a21c <flatcc_builder_default_alloc@@Base>:
   2a21c:	push	{r4, r5, r6, r7, r8, lr}
   2a220:	subs	r6, r2, #0
   2a224:	mov	r5, r1
   2a228:	bne	2a24c <flatcc_builder_default_alloc@@Base+0x30>
   2a22c:	ldr	r0, [r1]
   2a230:	cmp	r0, #0
   2a234:	popeq	{r4, r5, r6, r7, r8, pc}
   2a238:	bl	13f14 <free@plt>
   2a23c:	str	r6, [r5]
   2a240:	str	r6, [r5, #4]
   2a244:	mov	r0, #0
   2a248:	pop	{r4, r5, r6, r7, r8, pc}
   2a24c:	ldr	r2, [sp, #24]
   2a250:	mov	r7, r3
   2a254:	sub	r2, r2, #1
   2a258:	cmp	r2, #6
   2a25c:	ldrls	pc, [pc, r2, lsl #2]
   2a260:	b	2a2f4 <flatcc_builder_default_alloc@@Base+0xd8>
   2a264:	strdeq	sl, [r2], -ip
   2a268:	strdeq	sl, [r2], -r4
   2a26c:	strdeq	sl, [r2], -r4
   2a270:	andeq	sl, r2, r4, ror #5
   2a274:	andeq	sl, r2, r0, lsl #5
   2a278:	strdeq	sl, [r2], -r4
   2a27c:	andeq	sl, r2, ip, ror #5
   2a280:	mov	r4, r6
   2a284:	cmp	r6, r4
   2a288:	bhi	2a304 <flatcc_builder_default_alloc@@Base+0xe8>
   2a28c:	ldr	r2, [r5, #4]
   2a290:	cmp	r6, r2
   2a294:	bhi	2a2a0 <flatcc_builder_default_alloc@@Base+0x84>
   2a298:	cmp	r4, r2, lsr #1
   2a29c:	bls	2a244 <flatcc_builder_default_alloc@@Base+0x28>
   2a2a0:	mov	r1, r4
   2a2a4:	ldr	r0, [r5]
   2a2a8:	bl	13f50 <realloc@plt>
   2a2ac:	subs	r6, r0, #0
   2a2b0:	beq	2a30c <flatcc_builder_default_alloc@@Base+0xf0>
   2a2b4:	cmp	r7, #0
   2a2b8:	beq	2a2d8 <flatcc_builder_default_alloc@@Base+0xbc>
   2a2bc:	ldr	r0, [r5, #4]
   2a2c0:	cmp	r4, r0
   2a2c4:	bls	2a2d8 <flatcc_builder_default_alloc@@Base+0xbc>
   2a2c8:	sub	r2, r4, r0
   2a2cc:	mov	r1, #0
   2a2d0:	add	r0, r6, r0
   2a2d4:	bl	13fec <memset@plt>
   2a2d8:	str	r6, [r5]
   2a2dc:	str	r4, [r5, #4]
   2a2e0:	b	2a244 <flatcc_builder_default_alloc@@Base+0x28>
   2a2e4:	mov	r4, #288	; 0x120
   2a2e8:	b	2a284 <flatcc_builder_default_alloc@@Base+0x68>
   2a2ec:	mov	r4, #64	; 0x40
   2a2f0:	b	2a284 <flatcc_builder_default_alloc@@Base+0x68>
   2a2f4:	mov	r4, #32
   2a2f8:	b	2a284 <flatcc_builder_default_alloc@@Base+0x68>
   2a2fc:	mov	r4, #256	; 0x100
   2a300:	b	2a284 <flatcc_builder_default_alloc@@Base+0x68>
   2a304:	lsl	r4, r4, #1
   2a308:	b	2a284 <flatcc_builder_default_alloc@@Base+0x68>
   2a30c:	mvn	r0, #0
   2a310:	pop	{r4, r5, r6, r7, r8, pc}
   2a314:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   2a318:	add	r6, r0, #52	; 0x34
   2a31c:	mov	r4, r1
   2a320:	add	r1, r6, r1, lsl #3
   2a324:	mov	r5, r2
   2a328:	add	r2, r2, r3
   2a32c:	ldr	r3, [r1, #4]
   2a330:	cmp	r2, r3
   2a334:	bls	2a368 <flatcc_builder_default_alloc@@Base+0x14c>
   2a338:	str	r4, [sp]
   2a33c:	ldr	r3, [sp, #32]
   2a340:	ldr	r7, [r0, #48]	; 0x30
   2a344:	ldr	r0, [r0, #40]	; 0x28
   2a348:	blx	r7
   2a34c:	cmp	r0, #0
   2a350:	beq	2a368 <flatcc_builder_default_alloc@@Base+0x14c>
   2a354:	ldr	r3, [pc, #28]	; 2a378 <flatcc_builder_default_alloc@@Base+0x15c>
   2a358:	mov	r2, #308	; 0x134
   2a35c:	ldr	r1, [pc, #24]	; 2a37c <flatcc_builder_default_alloc@@Base+0x160>
   2a360:	ldr	r0, [pc, #24]	; 2a380 <flatcc_builder_default_alloc@@Base+0x164>
   2a364:	bl	14094 <__assert_fail@plt>
   2a368:	ldr	r0, [r6, r4, lsl #3]
   2a36c:	add	r0, r0, r5
   2a370:	add	sp, sp, #12
   2a374:	pop	{r4, r5, r6, r7, pc}
   2a378:	andeq	r9, r4, r3, lsl r7
   2a37c:	andeq	r9, r4, r2, lsl lr
   2a380:	andeq	r9, r3, sp, asr #1
   2a384:	ldr	r2, [r0, #156]	; 0x9c
   2a388:	ldr	r3, [r0, #160]	; 0xa0
   2a38c:	push	{r0, r1, r4, r5, r6, lr}
   2a390:	mov	r5, r1
   2a394:	add	r1, r2, #1
   2a398:	cmp	r1, r3
   2a39c:	mov	r4, r0
   2a3a0:	str	r1, [r0, #156]	; 0x9c
   2a3a4:	ble	2a454 <flatcc_builder_default_alloc@@Base+0x238>
   2a3a8:	ldr	r3, [r0, #176]	; 0xb0
   2a3ac:	cmp	r3, #0
   2a3b0:	cmpgt	r1, r3
   2a3b4:	movgt	r3, #1
   2a3b8:	movle	r3, #0
   2a3bc:	ble	2a3cc <flatcc_builder_default_alloc@@Base+0x1b0>
   2a3c0:	mvn	r0, #0
   2a3c4:	add	sp, sp, #8
   2a3c8:	pop	{r4, r5, r6, pc}
   2a3cc:	mov	r6, #36	; 0x24
   2a3d0:	str	r3, [sp]
   2a3d4:	mul	r2, r6, r2
   2a3d8:	mov	r3, r6
   2a3dc:	mov	r1, #4
   2a3e0:	bl	2a314 <flatcc_builder_default_alloc@@Base+0xf8>
   2a3e4:	cmp	r0, #0
   2a3e8:	str	r0, [r4, #32]
   2a3ec:	beq	2a3c0 <flatcc_builder_default_alloc@@Base+0x1a4>
   2a3f0:	mov	r1, r6
   2a3f4:	ldr	r0, [r4, #88]	; 0x58
   2a3f8:	bl	2ea4c <fb_value_set_visit@@Base+0x4>
   2a3fc:	ldr	r3, [r4, #176]	; 0xb0
   2a400:	cmp	r3, #0
   2a404:	cmpgt	r0, r3
   2a408:	str	r0, [r4, #160]	; 0xa0
   2a40c:	strgt	r3, [r4, #160]	; 0xa0
   2a410:	ldrh	r1, [r4, #130]	; 0x82
   2a414:	ldr	r2, [r4, #32]
   2a418:	ldr	r3, [r4, #20]
   2a41c:	mvn	r0, #3
   2a420:	strh	r1, [r2, #12]
   2a424:	ldr	r1, [r4, #28]
   2a428:	str	r3, [r2, #8]
   2a42c:	add	r3, r3, r1
   2a430:	add	r3, r3, #7
   2a434:	strh	r5, [r4, #130]	; 0x82
   2a438:	bic	r3, r3, #7
   2a43c:	str	r0, [r2, #4]
   2a440:	mov	r0, #0
   2a444:	str	r1, [r2]
   2a448:	str	r3, [r4, #28]
   2a44c:	str	r0, [r4, #20]
   2a450:	b	2a3c4 <flatcc_builder_default_alloc@@Base+0x1a8>
   2a454:	ldr	r3, [r0, #32]
   2a458:	add	r3, r3, #36	; 0x24
   2a45c:	str	r3, [r0, #32]
   2a460:	b	2a410 <flatcc_builder_default_alloc@@Base+0x1f4>
   2a464:	ldr	r3, [r0, #32]
   2a468:	push	{r0, r1, r2, r4, r5, lr}
   2a46c:	add	r1, r1, #2
   2a470:	ldr	r2, [r3, #16]
   2a474:	lsl	r5, r1, #1
   2a478:	ldrh	r1, [r3, #28]
   2a47c:	mov	r3, #1
   2a480:	str	r3, [sp]
   2a484:	mov	r3, r5
   2a488:	add	r2, r2, r1, lsl #1
   2a48c:	mov	r1, #0
   2a490:	mov	r4, r0
   2a494:	bl	2a314 <flatcc_builder_default_alloc@@Base+0xf8>
   2a498:	cmp	r0, #0
   2a49c:	streq	r0, [r4, #4]
   2a4a0:	mvneq	r0, #0
   2a4a4:	beq	2a4e0 <flatcc_builder_default_alloc@@Base+0x2c4>
   2a4a8:	ldr	r2, [r4, #32]
   2a4ac:	add	r0, r0, #4
   2a4b0:	mov	r3, #0
   2a4b4:	str	r0, [r4, #4]
   2a4b8:	str	r3, [sp]
   2a4bc:	mov	r1, #3
   2a4c0:	sub	r3, r5, #3
   2a4c4:	ldr	r2, [r2, #20]
   2a4c8:	mov	r0, r4
   2a4cc:	bl	2a314 <flatcc_builder_default_alloc@@Base+0xf8>
   2a4d0:	cmp	r0, #0
   2a4d4:	str	r0, [r4]
   2a4d8:	movne	r0, #0
   2a4dc:	mvneq	r0, #0
   2a4e0:	add	sp, sp, #12
   2a4e4:	pop	{r4, r5, pc}
   2a4e8:	push	{r0, r1, r2, r4, r5, lr}
   2a4ec:	ldr	r3, [r1]
   2a4f0:	ldr	r4, [r0, #140]	; 0x8c
   2a4f4:	add	r2, r3, r4
   2a4f8:	cmp	r4, r2
   2a4fc:	str	r2, [r0, #140]	; 0x8c
   2a500:	ble	2a518 <flatcc_builder_default_alloc@@Base+0x2fc>
   2a504:	ldr	r3, [pc, #68]	; 2a550 <flatcc_builder_default_alloc@@Base+0x334>
   2a508:	ldr	r2, [pc, #68]	; 2a554 <flatcc_builder_default_alloc@@Base+0x338>
   2a50c:	ldr	r1, [pc, #68]	; 2a558 <flatcc_builder_default_alloc@@Base+0x33c>
   2a510:	ldr	r0, [pc, #68]	; 2a55c <flatcc_builder_default_alloc@@Base+0x340>
   2a514:	bl	14094 <__assert_fail@plt>
   2a518:	str	r3, [sp]
   2a51c:	add	r1, r1, #8
   2a520:	ldr	r5, [r0, #44]	; 0x2c
   2a524:	ldr	r2, [r1, #-4]
   2a528:	mov	r3, r4
   2a52c:	ldr	r0, [r0, #36]	; 0x24
   2a530:	blx	r5
   2a534:	cmp	r0, #0
   2a538:	ldrne	r3, [pc, #16]	; 2a550 <flatcc_builder_default_alloc@@Base+0x334>
   2a53c:	ldrne	r2, [pc, #28]	; 2a560 <flatcc_builder_default_alloc@@Base+0x344>
   2a540:	bne	2a50c <flatcc_builder_default_alloc@@Base+0x2f0>
   2a544:	add	r0, r4, #1
   2a548:	add	sp, sp, #12
   2a54c:	pop	{r4, r5, pc}
   2a550:	andeq	r9, r4, r2, lsr #14
   2a554:	andeq	r0, r0, r1, lsr #5
   2a558:	andeq	r9, r4, r2, lsl lr
   2a55c:	andeq	r9, r3, sp, asr #1
   2a560:	andeq	r0, r0, r5, lsr #5
   2a564:	cmp	r2, #0
   2a568:	bne	2a578 <flatcc_builder_default_alloc@@Base+0x35c>
   2a56c:	ldrh	r2, [r0, #132]	; 0x84
   2a570:	cmp	r2, #0
   2a574:	moveq	r2, #1
   2a578:	ldrh	ip, [r1]
   2a57c:	cmp	ip, #3
   2a580:	movls	ip, #4
   2a584:	strhls	ip, [r1]
   2a588:	ldrh	ip, [r1]
   2a58c:	cmp	ip, r2
   2a590:	strhcc	r2, [r1]
   2a594:	cmp	r3, #0
   2a598:	bne	2a5fc <flatcc_builder_default_alloc@@Base+0x3e0>
   2a59c:	ldr	r3, [r0, #140]	; 0x8c
   2a5a0:	sub	r2, r2, #1
   2a5a4:	ands	r2, r2, r3
   2a5a8:	beq	2a5fc <flatcc_builder_default_alloc@@Base+0x3e0>
   2a5ac:	push	{r4, lr}
   2a5b0:	sub	sp, sp, #72	; 0x48
   2a5b4:	ldr	r4, [pc, #72]	; 2a604 <flatcc_builder_default_alloc@@Base+0x3e8>
   2a5b8:	mov	r3, #1
   2a5bc:	mov	r1, sp
   2a5c0:	str	r2, [sp]
   2a5c4:	str	r4, [sp, #8]
   2a5c8:	str	r2, [sp, #12]
   2a5cc:	str	r3, [sp, #4]
   2a5d0:	bl	2a4e8 <flatcc_builder_default_alloc@@Base+0x2cc>
   2a5d4:	cmp	r0, #0
   2a5d8:	bne	2a5f0 <flatcc_builder_default_alloc@@Base+0x3d4>
   2a5dc:	add	r3, r4, #512	; 0x200
   2a5e0:	ldr	r2, [pc, #32]	; 2a608 <flatcc_builder_default_alloc@@Base+0x3ec>
   2a5e4:	ldr	r1, [pc, #32]	; 2a60c <flatcc_builder_default_alloc@@Base+0x3f0>
   2a5e8:	ldr	r0, [pc, #32]	; 2a610 <flatcc_builder_default_alloc@@Base+0x3f4>
   2a5ec:	bl	14094 <__assert_fail@plt>
   2a5f0:	mov	r0, #0
   2a5f4:	add	sp, sp, #72	; 0x48
   2a5f8:	pop	{r4, pc}
   2a5fc:	mov	r0, #0
   2a600:	bx	lr
   2a604:	andeq	r9, r4, ip, lsr #14
   2a608:			; <UNDEFINED> instruction: 0x000002be
   2a60c:	andeq	r9, r4, r2, lsl lr
   2a610:	andeq	r9, r3, sp, asr #1
   2a614:	ldr	r2, [r0, #136]	; 0x88
   2a618:	ldr	r3, [r1]
   2a61c:	push	{r0, r1, r4, r5, r6, lr}
   2a620:	sub	r4, r2, r3
   2a624:	cmp	r2, r4
   2a628:	bgt	2a640 <flatcc_builder_default_alloc@@Base+0x424>
   2a62c:	ldr	r3, [pc, #76]	; 2a680 <flatcc_builder_default_alloc@@Base+0x464>
   2a630:	ldr	r2, [pc, #76]	; 2a684 <flatcc_builder_default_alloc@@Base+0x468>
   2a634:	ldr	r1, [pc, #76]	; 2a688 <flatcc_builder_default_alloc@@Base+0x46c>
   2a638:	ldr	r0, [pc, #76]	; 2a68c <flatcc_builder_default_alloc@@Base+0x470>
   2a63c:	bl	14094 <__assert_fail@plt>
   2a640:	str	r3, [sp]
   2a644:	mov	r5, r0
   2a648:	ldr	r6, [r0, #44]	; 0x2c
   2a64c:	ldr	r2, [r1, #4]
   2a650:	mov	r3, r4
   2a654:	add	r1, r1, #8
   2a658:	ldr	r0, [r0, #36]	; 0x24
   2a65c:	blx	r6
   2a660:	cmp	r0, #0
   2a664:	ldrne	r3, [pc, #20]	; 2a680 <flatcc_builder_default_alloc@@Base+0x464>
   2a668:	ldrne	r2, [pc, #32]	; 2a690 <flatcc_builder_default_alloc@@Base+0x474>
   2a66c:	bne	2a634 <flatcc_builder_default_alloc@@Base+0x418>
   2a670:	mov	r0, r4
   2a674:	str	r4, [r5, #136]	; 0x88
   2a678:	add	sp, sp, #8
   2a67c:	pop	{r4, r5, r6, pc}
   2a680:	andeq	r9, r4, fp, lsr r9
   2a684:	andeq	r0, r0, r7, lsl #5
   2a688:	andeq	r9, r4, r2, lsl lr
   2a68c:	andeq	r9, r3, sp, asr #1
   2a690:	andeq	r0, r0, fp, lsl #5
   2a694:	ldr	r3, [r0, #20]
   2a698:	adds	r1, r3, r1
   2a69c:	movcs	r3, #1
   2a6a0:	movcc	r3, #0
   2a6a4:	cmp	r1, r2
   2a6a8:	movls	r2, r3
   2a6ac:	orrhi	r2, r3, #1
   2a6b0:	cmp	r2, #0
   2a6b4:	beq	2a6d0 <flatcc_builder_default_alloc@@Base+0x4b4>
   2a6b8:	push	{r4, lr}
   2a6bc:	mov	r2, #892	; 0x37c
   2a6c0:	ldr	r3, [pc, #20]	; 2a6dc <flatcc_builder_default_alloc@@Base+0x4c0>
   2a6c4:	ldr	r1, [pc, #20]	; 2a6e0 <flatcc_builder_default_alloc@@Base+0x4c4>
   2a6c8:	ldr	r0, [pc, #20]	; 2a6e4 <flatcc_builder_default_alloc@@Base+0x4c8>
   2a6cc:	bl	14094 <__assert_fail@plt>
   2a6d0:	str	r1, [r0, #20]
   2a6d4:	mov	r0, r2
   2a6d8:	bx	lr
   2a6dc:	andeq	r9, r4, r6, asr #18
   2a6e0:	andeq	r9, r4, r2, lsl lr
   2a6e4:	andeq	r9, r4, r8, asr lr
   2a6e8:	ldrh	ip, [r0, #128]	; 0x80
   2a6ec:	push	{r4, r5, r6, r7, lr}
   2a6f0:	sub	sp, sp, #84	; 0x54
   2a6f4:	cmp	ip, #3
   2a6f8:	movls	ip, #4
   2a6fc:	strhls	ip, [r0, #128]	; 0x80
   2a700:	mov	ip, #4
   2a704:	add	r5, sp, ip
   2a708:	str	ip, [sp, #8]
   2a70c:	ldr	r4, [r0, #136]	; 0x88
   2a710:	str	ip, [sp, #20]
   2a714:	mov	ip, #1
   2a718:	str	ip, [sp, #12]
   2a71c:	lsls	ip, r2, #2
   2a720:	strne	ip, [sp, #28]
   2a724:	and	lr, r4, #3
   2a728:	str	r5, [sp, #16]
   2a72c:	addne	r5, ip, #4
   2a730:	movne	ip, #2
   2a734:	strne	r5, [sp, #8]
   2a738:	strne	r1, [sp, #24]
   2a73c:	strne	ip, [sp, #12]
   2a740:	cmp	lr, #0
   2a744:	str	r2, [sp, #4]
   2a748:	beq	2a778 <flatcc_builder_default_alloc@@Base+0x55c>
   2a74c:	ldr	ip, [sp, #8]
   2a750:	add	r5, sp, #80	; 0x50
   2a754:	add	ip, ip, lr
   2a758:	str	ip, [sp, #8]
   2a75c:	ldr	ip, [sp, #12]
   2a760:	ldr	r6, [pc, #204]	; 2a834 <flatcc_builder_default_alloc@@Base+0x618>
   2a764:	add	ip, ip, #1
   2a768:	str	ip, [sp, #12]
   2a76c:	add	r5, r5, ip, lsl #3
   2a770:	str	r6, [r5, #-72]	; 0xffffffb8
   2a774:	str	lr, [r5, #-68]	; 0xffffffbc
   2a778:	ldr	r5, [sp, #8]
   2a77c:	sub	r6, r1, #4
   2a780:	sub	r5, r4, r5
   2a784:	mov	lr, r3
   2a788:	add	r2, r3, r2
   2a78c:	mvn	r7, #3
   2a790:	cmp	r2, lr
   2a794:	bne	2a7a8 <flatcc_builder_default_alloc@@Base+0x58c>
   2a798:	add	r1, sp, #8
   2a79c:	bl	2a614 <flatcc_builder_default_alloc@@Base+0x3f8>
   2a7a0:	add	sp, sp, #84	; 0x54
   2a7a4:	pop	{r4, r5, r6, r7, pc}
   2a7a8:	ldr	r4, [r6, #4]!
   2a7ac:	cmp	r4, #0
   2a7b0:	beq	2a7f0 <flatcc_builder_default_alloc@@Base+0x5d4>
   2a7b4:	sub	ip, r7, r6
   2a7b8:	add	ip, r1, ip
   2a7bc:	add	ip, ip, r4
   2a7c0:	sub	ip, ip, r5
   2a7c4:	cmp	r3, #0
   2a7c8:	str	ip, [r6]
   2a7cc:	beq	2a82c <flatcc_builder_default_alloc@@Base+0x610>
   2a7d0:	ldrb	ip, [lr]
   2a7d4:	cmp	ip, #0
   2a7d8:	bne	2a82c <flatcc_builder_default_alloc@@Base+0x610>
   2a7dc:	ldr	r3, [pc, #84]	; 2a838 <flatcc_builder_default_alloc@@Base+0x61c>
   2a7e0:	ldr	r2, [pc, #84]	; 2a83c <flatcc_builder_default_alloc@@Base+0x620>
   2a7e4:	ldr	r1, [pc, #84]	; 2a840 <flatcc_builder_default_alloc@@Base+0x624>
   2a7e8:	ldr	r0, [pc, #84]	; 2a844 <flatcc_builder_default_alloc@@Base+0x628>
   2a7ec:	bl	14094 <__assert_fail@plt>
   2a7f0:	cmp	r3, #0
   2a7f4:	beq	2a818 <flatcc_builder_default_alloc@@Base+0x5fc>
   2a7f8:	ldrb	ip, [lr]
   2a7fc:	cmp	ip, #0
   2a800:	beq	2a82c <flatcc_builder_default_alloc@@Base+0x610>
   2a804:	ldr	r3, [pc, #44]	; 2a838 <flatcc_builder_default_alloc@@Base+0x61c>
   2a808:	ldr	r2, [pc, #56]	; 2a848 <flatcc_builder_default_alloc@@Base+0x62c>
   2a80c:	ldr	r1, [pc, #44]	; 2a840 <flatcc_builder_default_alloc@@Base+0x624>
   2a810:	ldr	r0, [pc, #52]	; 2a84c <flatcc_builder_default_alloc@@Base+0x630>
   2a814:	b	2a7ec <flatcc_builder_default_alloc@@Base+0x5d0>
   2a818:	ldr	r3, [pc, #24]	; 2a838 <flatcc_builder_default_alloc@@Base+0x61c>
   2a81c:	ldr	r2, [pc, #44]	; 2a850 <flatcc_builder_default_alloc@@Base+0x634>
   2a820:	ldr	r1, [pc, #24]	; 2a840 <flatcc_builder_default_alloc@@Base+0x624>
   2a824:	ldr	r0, [pc, #40]	; 2a854 <flatcc_builder_default_alloc@@Base+0x638>
   2a828:	b	2a7ec <flatcc_builder_default_alloc@@Base+0x5d0>
   2a82c:	add	lr, lr, #1
   2a830:	b	2a790 <flatcc_builder_default_alloc@@Base+0x574>
   2a834:	andeq	r9, r4, ip, lsr #14
   2a838:	andeq	r9, r4, r7, asr r9
   2a83c:			; <UNDEFINED> instruction: 0x000005b1
   2a840:	andeq	r9, r4, r2, lsl lr
   2a844:	andeq	r9, r4, r3, ror lr
   2a848:			; <UNDEFINED> instruction: 0x000005b5
   2a84c:	andeq	r9, r4, r1, lsl #29
   2a850:			; <UNDEFINED> instruction: 0x000005b7
   2a854:	andeq	r9, r3, sp, asr #1

0002a858 <flatcc_builder_flush_vtable_cache@@Base>:
   2a858:	ldr	r3, [r0, #116]	; 0x74
   2a85c:	cmp	r3, #0
   2a860:	bxeq	lr
   2a864:	push	{r4, lr}
   2a868:	mov	r1, #0
   2a86c:	mov	r4, r0
   2a870:	ldr	r2, [r0, #96]	; 0x60
   2a874:	ldr	r0, [r0, #92]	; 0x5c
   2a878:	bl	13fec <memset@plt>
   2a87c:	mov	r3, #16
   2a880:	str	r3, [r4, #124]	; 0x7c
   2a884:	mov	r3, #0
   2a888:	str	r3, [r4, #120]	; 0x78
   2a88c:	pop	{r4, pc}

0002a890 <flatcc_builder_custom_init@@Base>:
   2a890:	push	{r4, r5, r6, r7, r8, lr}
   2a894:	mov	r6, r1
   2a898:	mov	r7, r2
   2a89c:	mov	r1, #0
   2a8a0:	mov	r2, #232	; 0xe8
   2a8a4:	mov	r4, r0
   2a8a8:	mov	r5, r3
   2a8ac:	bl	13fec <memset@plt>
   2a8b0:	cmp	r6, #0
   2a8b4:	moveq	r3, #1
   2a8b8:	addeq	r7, r4, #188	; 0xbc
   2a8bc:	ldreq	r6, [pc, #40]	; 2a8ec <flatcc_builder_custom_init@@Base+0x5c>
   2a8c0:	str	r7, [r4, #36]	; 0x24
   2a8c4:	str	r6, [r4, #44]	; 0x2c
   2a8c8:	mov	r0, #0
   2a8cc:	streq	r3, [r4, #184]	; 0xb8
   2a8d0:	ldr	r3, [pc, #24]	; 2a8f0 <flatcc_builder_custom_init@@Base+0x60>
   2a8d4:	cmp	r5, #0
   2a8d8:	moveq	r5, r3
   2a8dc:	ldr	r3, [sp, #24]
   2a8e0:	str	r5, [r4, #48]	; 0x30
   2a8e4:	str	r3, [r4, #40]	; 0x28
   2a8e8:	pop	{r4, r5, r6, r7, r8, pc}
   2a8ec:	andeq	sp, r2, r0, ror r0
   2a8f0:	andeq	sl, r2, ip, lsl r2

0002a8f4 <flatcc_builder_init@@Base>:
   2a8f4:	push	{r4, lr}
   2a8f8:	mov	r2, #232	; 0xe8
   2a8fc:	mov	r4, r0
   2a900:	mov	r1, #0
   2a904:	bl	13fec <memset@plt>
   2a908:	mov	r3, #1
   2a90c:	str	r3, [r4, #184]	; 0xb8
   2a910:	ldr	r3, [pc, #24]	; 2a930 <flatcc_builder_init@@Base+0x3c>
   2a914:	mov	r0, #0
   2a918:	str	r3, [r4, #48]	; 0x30
   2a91c:	add	r3, r4, #188	; 0xbc
   2a920:	str	r3, [r4, #36]	; 0x24
   2a924:	ldr	r3, [pc, #8]	; 2a934 <flatcc_builder_init@@Base+0x40>
   2a928:	str	r3, [r4, #44]	; 0x2c
   2a92c:	pop	{r4, pc}
   2a930:	andeq	sl, r2, ip, lsl r2
   2a934:	andeq	sp, r2, r0, ror r0

0002a938 <flatcc_builder_custom_reset@@Base>:
   2a938:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2a93c:	mov	r6, #0
   2a940:	mov	r4, r0
   2a944:	mov	r7, r1
   2a948:	mov	r8, r2
   2a94c:	mov	r5, r0
   2a950:	mov	r9, #1
   2a954:	mov	sl, r6
   2a958:	ldr	r3, [r5, #52]	; 0x34
   2a95c:	add	r1, r5, #52	; 0x34
   2a960:	cmp	r3, #0
   2a964:	beq	2aa44 <flatcc_builder_custom_reset@@Base+0x10c>
   2a968:	cmp	r6, #5
   2a96c:	cmpne	r8, #0
   2a970:	bne	2aa1c <flatcc_builder_custom_reset@@Base+0xe4>
   2a974:	ldr	r2, [r5, #56]	; 0x38
   2a978:	mov	r1, sl
   2a97c:	ldr	r0, [r5, #52]	; 0x34
   2a980:	bl	13fec <memset@plt>
   2a984:	add	r6, r6, #1
   2a988:	cmp	r6, #8
   2a98c:	add	r5, r5, #8
   2a990:	bne	2a958 <flatcc_builder_custom_reset@@Base+0x20>
   2a994:	ldr	r2, [r4, #124]	; 0x7c
   2a998:	mov	r3, #0
   2a99c:	cmp	r2, r3
   2a9a0:	movne	r2, #16
   2a9a4:	strne	r2, [r4, #124]	; 0x7c
   2a9a8:	ldr	r2, [r4, #60]	; 0x3c
   2a9ac:	ldr	r0, [r4, #184]	; 0xb8
   2a9b0:	str	r2, [r4, #16]
   2a9b4:	ldr	r2, [r4, #76]	; 0x4c
   2a9b8:	cmp	r7, #0
   2a9bc:	str	r2, [r4]
   2a9c0:	ldr	r2, [r4, #52]	; 0x34
   2a9c4:	strne	r3, [r4, #172]	; 0xac
   2a9c8:	strne	r3, [r4, #176]	; 0xb0
   2a9cc:	strne	r3, [r4, #180]	; 0xb4
   2a9d0:	cmp	r0, #0
   2a9d4:	str	r3, [r4, #120]	; 0x78
   2a9d8:	strh	r3, [r4, #128]	; 0x80
   2a9dc:	str	r3, [r4, #136]	; 0x88
   2a9e0:	str	r3, [r4, #140]	; 0x8c
   2a9e4:	str	r3, [r4, #156]	; 0x9c
   2a9e8:	str	r3, [r4, #160]	; 0xa0
   2a9ec:	str	r3, [r4, #20]
   2a9f0:	str	r3, [r4, #24]
   2a9f4:	str	r3, [r4, #148]	; 0x94
   2a9f8:	str	r3, [r4, #152]	; 0x98
   2a9fc:	str	r2, [r4, #4]
   2aa00:	str	r3, [r4, #32]
   2aa04:	beq	2aa14 <flatcc_builder_custom_reset@@Base+0xdc>
   2aa08:	add	r0, r4, #188	; 0xbc
   2aa0c:	bl	2cf68 <flatcc_emitter_reset@@Base>
   2aa10:	mov	r0, #0
   2aa14:	add	sp, sp, #12
   2aa18:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2aa1c:	str	r6, [sp]
   2aa20:	ldr	fp, [r4, #48]	; 0x30
   2aa24:	mov	r3, r9
   2aa28:	mov	r2, #1
   2aa2c:	ldr	r0, [r4, #40]	; 0x28
   2aa30:	blx	fp
   2aa34:	cmp	r0, #0
   2aa38:	beq	2a974 <flatcc_builder_custom_reset@@Base+0x3c>
   2aa3c:	mvn	r0, #0
   2aa40:	b	2aa14 <flatcc_builder_custom_reset@@Base+0xdc>
   2aa44:	ldr	r3, [r5, #56]	; 0x38
   2aa48:	cmp	r3, #0
   2aa4c:	beq	2a984 <flatcc_builder_custom_reset@@Base+0x4c>
   2aa50:	ldr	r3, [pc, #12]	; 2aa64 <flatcc_builder_custom_reset@@Base+0x12c>
   2aa54:	ldr	r2, [pc, #12]	; 2aa68 <flatcc_builder_custom_reset@@Base+0x130>
   2aa58:	ldr	r1, [pc, #12]	; 2aa6c <flatcc_builder_custom_reset@@Base+0x134>
   2aa5c:	ldr	r0, [pc, #12]	; 2aa70 <flatcc_builder_custom_reset@@Base+0x138>
   2aa60:	bl	14094 <__assert_fail@plt>
   2aa64:	andeq	r9, r4, r4, ror r9
   2aa68:			; <UNDEFINED> instruction: 0x000001b2
   2aa6c:	andeq	r9, r4, r2, lsl lr
   2aa70:	andeq	r9, r4, pc, lsl #29

0002aa74 <flatcc_builder_reset@@Base>:
   2aa74:	mov	r2, #0
   2aa78:	mov	r1, r2
   2aa7c:	b	2a938 <flatcc_builder_custom_reset@@Base>

0002aa80 <flatcc_builder_clear@@Base>:
   2aa80:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
   2aa84:	mov	r5, #0
   2aa88:	mov	r4, r0
   2aa8c:	add	r6, r0, #52	; 0x34
   2aa90:	mov	r8, r5
   2aa94:	str	r5, [sp]
   2aa98:	mov	r1, r6
   2aa9c:	ldr	r7, [r4, #48]	; 0x30
   2aaa0:	mov	r3, r8
   2aaa4:	mov	r2, #0
   2aaa8:	ldr	r0, [r4, #40]	; 0x28
   2aaac:	add	r5, r5, #1
   2aab0:	blx	r7
   2aab4:	cmp	r5, #8
   2aab8:	add	r6, r6, #8
   2aabc:	bne	2aa94 <flatcc_builder_clear@@Base+0x14>
   2aac0:	ldr	r3, [r4, #184]	; 0xb8
   2aac4:	cmp	r3, #0
   2aac8:	beq	2aad4 <flatcc_builder_clear@@Base+0x54>
   2aacc:	add	r0, r4, #188	; 0xbc
   2aad0:	bl	2d018 <flatcc_emitter_clear@@Base>
   2aad4:	mov	r2, #232	; 0xe8
   2aad8:	mov	r1, #0
   2aadc:	mov	r0, r4
   2aae0:	add	sp, sp, #8
   2aae4:	pop	{r4, r5, r6, r7, r8, lr}
   2aae8:	b	13fec <memset@plt>

0002aaec <flatcc_builder_enter_user_frame_ptr@@Base>:
   2aaec:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   2aaf0:	add	r4, r1, #3
   2aaf4:	bic	r4, r4, #3
   2aaf8:	add	r4, r4, #4
   2aafc:	mov	r7, #0
   2ab00:	str	r7, [sp]
   2ab04:	mov	r3, r4
   2ab08:	ldr	r2, [r0, #228]	; 0xe4
   2ab0c:	mov	r1, #7
   2ab10:	mov	r6, r0
   2ab14:	bl	2a314 <flatcc_builder_default_alloc@@Base+0xf8>
   2ab18:	subs	r5, r0, #0
   2ab1c:	moveq	r0, r5
   2ab20:	beq	2ab50 <flatcc_builder_enter_user_frame_ptr@@Base+0x64>
   2ab24:	mov	r2, r4
   2ab28:	mov	r1, r7
   2ab2c:	bl	13fec <memset@plt>
   2ab30:	ldr	r3, [r6, #224]	; 0xe0
   2ab34:	add	r0, r5, #4
   2ab38:	str	r3, [r5]
   2ab3c:	ldr	r1, [r6, #228]	; 0xe4
   2ab40:	add	r3, r1, #4
   2ab44:	add	r4, r4, r1
   2ab48:	str	r3, [r6, #224]	; 0xe0
   2ab4c:	str	r4, [r6, #228]	; 0xe4
   2ab50:	add	sp, sp, #12
   2ab54:	pop	{r4, r5, r6, r7, pc}

0002ab58 <flatcc_builder_enter_user_frame@@Base>:
   2ab58:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   2ab5c:	add	r4, r1, #3
   2ab60:	bic	r4, r4, #3
   2ab64:	add	r4, r4, #4
   2ab68:	mov	r7, #0
   2ab6c:	str	r7, [sp]
   2ab70:	mov	r3, r4
   2ab74:	ldr	r2, [r0, #228]	; 0xe4
   2ab78:	mov	r1, #7
   2ab7c:	mov	r6, r0
   2ab80:	bl	2a314 <flatcc_builder_default_alloc@@Base+0xf8>
   2ab84:	subs	r5, r0, #0
   2ab88:	moveq	r0, r5
   2ab8c:	beq	2abb8 <flatcc_builder_enter_user_frame@@Base+0x60>
   2ab90:	mov	r2, r4
   2ab94:	mov	r1, r7
   2ab98:	bl	13fec <memset@plt>
   2ab9c:	ldr	r3, [r6, #224]	; 0xe0
   2aba0:	str	r3, [r5]
   2aba4:	ldr	r1, [r6, #228]	; 0xe4
   2aba8:	add	r0, r1, #4
   2abac:	add	r4, r4, r1
   2abb0:	str	r0, [r6, #224]	; 0xe0
   2abb4:	str	r4, [r6, #228]	; 0xe4
   2abb8:	add	sp, sp, #12
   2abbc:	pop	{r4, r5, r6, r7, pc}

0002abc0 <flatcc_builder_exit_user_frame@@Base>:
   2abc0:	ldr	r3, [r0, #224]	; 0xe0
   2abc4:	cmp	r3, #0
   2abc8:	bne	2abe4 <flatcc_builder_exit_user_frame@@Base+0x24>
   2abcc:	push	{r4, lr}
   2abd0:	ldr	r3, [pc, #44]	; 2ac04 <flatcc_builder_exit_user_frame@@Base+0x44>
   2abd4:	ldr	r2, [pc, #44]	; 2ac08 <flatcc_builder_exit_user_frame@@Base+0x48>
   2abd8:	ldr	r1, [pc, #44]	; 2ac0c <flatcc_builder_exit_user_frame@@Base+0x4c>
   2abdc:	ldr	r0, [pc, #44]	; 2ac10 <flatcc_builder_exit_user_frame@@Base+0x50>
   2abe0:	bl	14094 <__assert_fail@plt>
   2abe4:	ldr	r1, [r0, #108]	; 0x6c
   2abe8:	mov	r2, r0
   2abec:	add	r1, r1, r3
   2abf0:	sub	r3, r3, #4
   2abf4:	str	r3, [r0, #228]	; 0xe4
   2abf8:	ldr	r0, [r1, #-4]
   2abfc:	str	r0, [r2, #224]	; 0xe0
   2ac00:	bx	lr
   2ac04:	muleq	r4, r0, r9
   2ac08:	andeq	r0, r0, lr, lsl r2
   2ac0c:	andeq	r9, r4, r2, lsl lr
   2ac10:	andeq	r9, r4, r1, lsr #29

0002ac14 <flatcc_builder_exit_user_frame_at@@Base>:
   2ac14:	ldr	r2, [r0, #224]	; 0xe0
   2ac18:	cmp	r2, r1
   2ac1c:	bcs	2ac38 <flatcc_builder_exit_user_frame_at@@Base+0x24>
   2ac20:	push	{r4, lr}
   2ac24:	ldr	r3, [pc, #20]	; 2ac40 <flatcc_builder_exit_user_frame_at@@Base+0x2c>
   2ac28:	ldr	r2, [pc, #20]	; 2ac44 <flatcc_builder_exit_user_frame_at@@Base+0x30>
   2ac2c:	ldr	r1, [pc, #20]	; 2ac48 <flatcc_builder_exit_user_frame_at@@Base+0x34>
   2ac30:	ldr	r0, [pc, #20]	; 2ac4c <flatcc_builder_exit_user_frame_at@@Base+0x38>
   2ac34:	bl	14094 <__assert_fail@plt>
   2ac38:	str	r1, [r0, #224]	; 0xe0
   2ac3c:	b	2abc0 <flatcc_builder_exit_user_frame@@Base>
   2ac40:	andeq	r9, r4, pc, lsr #19
   2ac44:	andeq	r0, r0, r7, lsr #4
   2ac48:	andeq	r9, r4, r2, lsl lr
   2ac4c:			; <UNDEFINED> instruction: 0x00049eba

0002ac50 <flatcc_builder_get_current_user_frame@@Base>:
   2ac50:	ldr	r0, [r0, #224]	; 0xe0
   2ac54:	bx	lr

0002ac58 <flatcc_builder_get_user_frame_ptr@@Base>:
   2ac58:	ldr	r0, [r0, #108]	; 0x6c
   2ac5c:	add	r0, r0, r1
   2ac60:	bx	lr

0002ac64 <flatcc_builder_embed_buffer@@Base>:
   2ac64:	push	{r4, r5, r6, lr}
   2ac68:	mov	r4, r3
   2ac6c:	ldr	r3, [r0, #152]	; 0x98
   2ac70:	sub	sp, sp, #80	; 0x50
   2ac74:	adds	r3, r3, #0
   2ac78:	movne	r3, #1
   2ac7c:	mov	r6, r2
   2ac80:	mov	r2, r1
   2ac84:	add	r1, sp, #96	; 0x60
   2ac88:	mov	r5, r0
   2ac8c:	bl	2a564 <flatcc_builder_default_alloc@@Base+0x348>
   2ac90:	cmp	r0, #0
   2ac94:	movne	r0, #0
   2ac98:	bne	2ad6c <flatcc_builder_embed_buffer@@Base+0x108>
   2ac9c:	ldr	r3, [sp, #100]	; 0x64
   2aca0:	str	r0, [sp, #8]
   2aca4:	tst	r3, #2
   2aca8:	ldr	r3, [r5, #136]	; 0x88
   2acac:	movne	r2, #4
   2acb0:	moveq	r2, #0
   2acb4:	sub	r3, r3, r4
   2acb8:	sub	r3, r3, r2
   2acbc:	ldrh	r2, [sp, #96]	; 0x60
   2acc0:	str	r0, [sp, #12]
   2acc4:	sub	r2, r2, #1
   2acc8:	and	r3, r3, r2
   2accc:	add	r2, r4, r3
   2acd0:	str	r2, [sp, #4]
   2acd4:	ldr	r2, [r5, #152]	; 0x98
   2acd8:	cmp	r2, #0
   2acdc:	beq	2acfc <flatcc_builder_embed_buffer@@Base+0x98>
   2ace0:	mov	r2, #4
   2ace4:	add	r1, sp, r2
   2ace8:	str	r2, [sp, #8]
   2acec:	str	r2, [sp, #20]
   2acf0:	mov	r2, #1
   2acf4:	str	r1, [sp, #16]
   2acf8:	str	r2, [sp, #12]
   2acfc:	cmp	r4, #0
   2ad00:	beq	2ad2c <flatcc_builder_embed_buffer@@Base+0xc8>
   2ad04:	ldr	r2, [sp, #8]
   2ad08:	add	r1, sp, #80	; 0x50
   2ad0c:	add	r2, r2, r4
   2ad10:	str	r2, [sp, #8]
   2ad14:	ldr	r2, [sp, #12]
   2ad18:	add	r2, r2, #1
   2ad1c:	str	r2, [sp, #12]
   2ad20:	add	r1, r1, r2, lsl #3
   2ad24:	str	r6, [r1, #-72]	; 0xffffffb8
   2ad28:	str	r4, [r1, #-68]	; 0xffffffbc
   2ad2c:	cmp	r3, #0
   2ad30:	beq	2ad60 <flatcc_builder_embed_buffer@@Base+0xfc>
   2ad34:	ldr	r2, [sp, #8]
   2ad38:	add	r1, sp, #80	; 0x50
   2ad3c:	add	r2, r2, r3
   2ad40:	str	r2, [sp, #8]
   2ad44:	ldr	r2, [sp, #12]
   2ad48:	ldr	r0, [pc, #36]	; 2ad74 <flatcc_builder_embed_buffer@@Base+0x110>
   2ad4c:	add	r2, r2, #1
   2ad50:	str	r2, [sp, #12]
   2ad54:	add	r1, r1, r2, lsl #3
   2ad58:	str	r0, [r1, #-72]	; 0xffffffb8
   2ad5c:	str	r3, [r1, #-68]	; 0xffffffbc
   2ad60:	add	r1, sp, #8
   2ad64:	mov	r0, r5
   2ad68:	bl	2a614 <flatcc_builder_default_alloc@@Base+0x3f8>
   2ad6c:	add	sp, sp, #80	; 0x50
   2ad70:	pop	{r4, r5, r6, pc}
   2ad74:	andeq	r9, r4, ip, lsr #14

0002ad78 <flatcc_builder_create_buffer@@Base>:
   2ad78:	push	{r4, r5, r6, r7, r8, r9, lr}
   2ad7c:	sub	sp, sp, #92	; 0x5c
   2ad80:	mov	r7, #0
   2ad84:	ldr	r8, [sp, #124]	; 0x7c
   2ad88:	mov	r9, r1
   2ad8c:	and	r6, r8, #1
   2ad90:	mov	r5, r3
   2ad94:	add	r1, sp, #120	; 0x78
   2ad98:	mov	r3, r6
   2ad9c:	mov	r4, r0
   2ada0:	str	r7, [sp, #12]
   2ada4:	bl	2a564 <flatcc_builder_default_alloc@@Base+0x348>
   2ada8:	cmp	r0, r7
   2adac:	bne	2af20 <flatcc_builder_create_buffer@@Base+0x1a8>
   2adb0:	ldrh	r3, [r4, #128]	; 0x80
   2adb4:	ldrh	r1, [sp, #120]	; 0x78
   2adb8:	ldr	r2, [r4, #136]	; 0x88
   2adbc:	and	r8, r8, #2
   2adc0:	cmp	r3, r1
   2adc4:	strhcc	r1, [r4, #128]	; 0x80
   2adc8:	cmp	r9, #0
   2adcc:	sub	r1, r1, #1
   2add0:	ldrne	r3, [r9]
   2add4:	strne	r3, [sp, #12]
   2add8:	ldr	r0, [sp, #12]
   2addc:	sub	r3, r2, #4
   2ade0:	cmp	r0, #0
   2ade4:	movne	r0, #4
   2ade8:	moveq	r0, #0
   2adec:	cmp	r8, #0
   2adf0:	moveq	ip, #0
   2adf4:	movne	ip, #4
   2adf8:	sub	r3, r3, r0
   2adfc:	sub	r3, r3, ip
   2ae00:	and	r3, r3, r1
   2ae04:	moveq	lr, r6
   2ae08:	mov	r1, #0
   2ae0c:	orrne	lr, r6, #1
   2ae10:	cmp	lr, r1
   2ae14:	str	r1, [sp, #16]
   2ae18:	str	r1, [sp, #20]
   2ae1c:	beq	2ae3c <flatcc_builder_create_buffer@@Base+0xc4>
   2ae20:	mov	r1, #4
   2ae24:	str	r1, [sp, #16]
   2ae28:	add	ip, sp, #8
   2ae2c:	str	r1, [sp, #28]
   2ae30:	mov	r1, #1
   2ae34:	str	ip, [sp, #24]
   2ae38:	str	r1, [sp, #20]
   2ae3c:	ldr	r7, [sp, #20]
   2ae40:	add	r8, sp, #88	; 0x58
   2ae44:	add	r1, r7, #1
   2ae48:	ldr	ip, [sp, #16]
   2ae4c:	add	r8, r8, r1, lsl #3
   2ae50:	add	r9, sp, #4
   2ae54:	add	ip, ip, #4
   2ae58:	str	r9, [r8, #-72]	; 0xffffffb8
   2ae5c:	cmp	r0, #0
   2ae60:	mov	r9, #4
   2ae64:	str	ip, [sp, #16]
   2ae68:	str	r9, [r8, #-68]	; 0xffffffbc
   2ae6c:	str	r1, [sp, #20]
   2ae70:	beq	2ae9c <flatcc_builder_create_buffer@@Base+0x124>
   2ae74:	add	ip, r0, ip
   2ae78:	add	r1, r7, #2
   2ae7c:	str	ip, [sp, #16]
   2ae80:	add	ip, sp, #88	; 0x58
   2ae84:	add	r1, ip, r1, lsl #3
   2ae88:	add	r7, r7, #2
   2ae8c:	add	ip, sp, #12
   2ae90:	str	ip, [r1, #-72]	; 0xffffffb8
   2ae94:	str	r0, [r1, #-68]	; 0xffffffbc
   2ae98:	str	r7, [sp, #20]
   2ae9c:	cmp	r3, #0
   2aea0:	beq	2aed0 <flatcc_builder_create_buffer@@Base+0x158>
   2aea4:	ldr	r1, [sp, #16]
   2aea8:	add	r0, sp, #88	; 0x58
   2aeac:	add	r1, r1, r3
   2aeb0:	str	r1, [sp, #16]
   2aeb4:	ldr	r1, [sp, #20]
   2aeb8:	ldr	ip, [pc, #108]	; 2af2c <flatcc_builder_create_buffer@@Base+0x1b4>
   2aebc:	add	r1, r1, #1
   2aec0:	str	r1, [sp, #20]
   2aec4:	add	r0, r0, r1, lsl #3
   2aec8:	str	ip, [r0, #-72]	; 0xffffffb8
   2aecc:	str	r3, [r0, #-68]	; 0xffffffbc
   2aed0:	cmp	r6, #0
   2aed4:	ldr	r3, [sp, #16]
   2aed8:	add	r1, sp, #16
   2aedc:	sub	r3, r2, r3
   2aee0:	ldrne	r2, [r4, #144]	; 0x90
   2aee4:	ldreq	r2, [r4, #140]	; 0x8c
   2aee8:	add	r3, r3, lr, lsl #2
   2aeec:	sub	r2, r2, r3
   2aef0:	mov	r0, r4
   2aef4:	sub	r3, r5, r3
   2aef8:	str	r2, [sp, #8]
   2aefc:	str	r3, [sp, #4]
   2af00:	bl	2a614 <flatcc_builder_default_alloc@@Base+0x3f8>
   2af04:	cmp	r0, #0
   2af08:	bne	2af24 <flatcc_builder_create_buffer@@Base+0x1ac>
   2af0c:	ldr	r3, [pc, #28]	; 2af30 <flatcc_builder_create_buffer@@Base+0x1b8>
   2af10:	mov	r2, #772	; 0x304
   2af14:	ldr	r1, [pc, #24]	; 2af34 <flatcc_builder_create_buffer@@Base+0x1bc>
   2af18:	ldr	r0, [pc, #24]	; 2af38 <flatcc_builder_create_buffer@@Base+0x1c0>
   2af1c:	bl	14094 <__assert_fail@plt>
   2af20:	mov	r0, r7
   2af24:	add	sp, sp, #92	; 0x5c
   2af28:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2af2c:	andeq	r9, r4, ip, lsr #14
   2af30:	ldrdeq	r9, [r4], -r1
   2af34:	andeq	r9, r4, r2, lsl lr
   2af38:	andeq	r9, r3, sp, asr #1

0002af3c <flatcc_builder_create_struct@@Base>:
   2af3c:	cmp	r3, #0
   2af40:	push	{lr}		; (str lr, [sp, #-4]!)
   2af44:	sub	sp, sp, #76	; 0x4c
   2af48:	bne	2af60 <flatcc_builder_create_struct@@Base+0x24>
   2af4c:	ldr	r3, [pc, #144]	; 2afe4 <flatcc_builder_create_struct@@Base+0xa8>
   2af50:	ldr	r2, [pc, #144]	; 2afe8 <flatcc_builder_create_struct@@Base+0xac>
   2af54:	ldr	r1, [pc, #144]	; 2afec <flatcc_builder_create_struct@@Base+0xb0>
   2af58:	ldr	r0, [pc, #144]	; 2aff0 <flatcc_builder_create_struct@@Base+0xb4>
   2af5c:	bl	14094 <__assert_fail@plt>
   2af60:	ldrh	ip, [r0, #128]	; 0x80
   2af64:	cmp	ip, r3
   2af68:	ldr	ip, [r0, #136]	; 0x88
   2af6c:	strhcc	r3, [r0, #128]	; 0x80
   2af70:	sub	ip, ip, r2
   2af74:	sub	r3, r3, #1
   2af78:	and	r3, r3, ip
   2af7c:	mov	ip, #0
   2af80:	cmp	r2, ip
   2af84:	strne	r2, [sp, #12]
   2af88:	str	ip, [sp]
   2af8c:	strne	r2, [sp]
   2af90:	movne	r2, #1
   2af94:	str	ip, [sp, #4]
   2af98:	strne	r1, [sp, #8]
   2af9c:	strne	r2, [sp, #4]
   2afa0:	cmp	r3, #0
   2afa4:	beq	2afd4 <flatcc_builder_create_struct@@Base+0x98>
   2afa8:	ldr	r2, [sp]
   2afac:	add	r1, sp, #72	; 0x48
   2afb0:	add	r2, r2, r3
   2afb4:	str	r2, [sp]
   2afb8:	ldr	r2, [sp, #4]
   2afbc:	ldr	ip, [pc, #48]	; 2aff4 <flatcc_builder_create_struct@@Base+0xb8>
   2afc0:	add	r2, r2, #1
   2afc4:	str	r2, [sp, #4]
   2afc8:	add	r1, r1, r2, lsl #3
   2afcc:	str	ip, [r1, #-72]	; 0xffffffb8
   2afd0:	str	r3, [r1, #-68]	; 0xffffffbc
   2afd4:	mov	r1, sp
   2afd8:	bl	2a614 <flatcc_builder_default_alloc@@Base+0x3f8>
   2afdc:	add	sp, sp, #76	; 0x4c
   2afe0:	pop	{pc}		; (ldr pc, [sp], #4)
   2afe4:	andeq	r9, r4, lr, ror #19
   2afe8:	andeq	r0, r0, pc, lsl #6
   2afec:	andeq	r9, r4, r2, lsl lr
   2aff0:	ldrdeq	r9, [r4], -r9	; <UNPREDICTABLE>
   2aff4:	andeq	r9, r4, ip, lsr #14

0002aff8 <flatcc_builder_start_buffer@@Base>:
   2aff8:	push	{r4, r5, r6, r7, r8, lr}
   2affc:	mov	r5, r1
   2b000:	ldrh	r1, [r0, #128]	; 0x80
   2b004:	mov	r4, r0
   2b008:	mov	r7, r2
   2b00c:	mov	r6, r3
   2b010:	bl	2a384 <flatcc_builder_default_alloc@@Base+0x168>
   2b014:	cmp	r0, #0
   2b018:	bne	2b08c <flatcc_builder_start_buffer@@Base+0x94>
   2b01c:	ldrh	r3, [r4, #132]	; 0x84
   2b020:	ldr	ip, [r4, #32]
   2b024:	mov	r1, #1
   2b028:	strh	r1, [r4, #128]	; 0x80
   2b02c:	strh	r3, [ip, #34]	; 0x22
   2b030:	ldrh	r3, [r4, #164]	; 0xa4
   2b034:	strh	r7, [r4, #132]	; 0x84
   2b038:	cmp	r5, #0
   2b03c:	strh	r3, [ip, #32]
   2b040:	ldr	r3, [r4, #144]	; 0x90
   2b044:	strh	r6, [r4, #164]	; 0xa4
   2b048:	str	r3, [ip, #20]
   2b04c:	ldr	r3, [r4, #152]	; 0x98
   2b050:	str	r3, [ip, #28]
   2b054:	ldr	r3, [r4, #136]	; 0x88
   2b058:	str	r3, [r4, #144]	; 0x90
   2b05c:	ldr	r3, [r4, #148]	; 0x94
   2b060:	str	r3, [r4, #152]	; 0x98
   2b064:	add	r2, r3, r1
   2b068:	ldr	r3, [r4, #168]	; 0xa8
   2b06c:	str	r2, [r4, #148]	; 0x94
   2b070:	str	r3, [ip, #16]
   2b074:	ldr	r3, [pc, #24]	; 2b094 <flatcc_builder_start_buffer@@Base+0x9c>
   2b078:	moveq	r5, r3
   2b07c:	ldr	r3, [r5]
   2b080:	str	r3, [r4, #168]	; 0xa8
   2b084:	strh	r1, [ip, #14]
   2b088:	pop	{r4, r5, r6, r7, r8, pc}
   2b08c:	mvn	r0, #0
   2b090:	pop	{r4, r5, r6, r7, r8, pc}
   2b094:	andeq	r9, r4, ip, lsr #14

0002b098 <flatcc_builder_end_buffer@@Base>:
   2b098:	push	{r0, r1, r2, r4, r5, lr}
   2b09c:	mov	r4, r0
   2b0a0:	ldrh	r0, [r0, #164]	; 0xa4
   2b0a4:	ldr	r2, [r4, #152]	; 0x98
   2b0a8:	and	r0, r0, #2
   2b0ac:	cmp	r2, #0
   2b0b0:	orrne	r0, r0, #1
   2b0b4:	ldr	r2, [r4, #32]
   2b0b8:	ldrh	r2, [r2, #14]
   2b0bc:	cmp	r2, #1
   2b0c0:	beq	2b0d8 <flatcc_builder_end_buffer@@Base+0x40>
   2b0c4:	ldr	r3, [pc, #120]	; 2b144 <flatcc_builder_end_buffer@@Base+0xac>
   2b0c8:	ldr	r2, [pc, #120]	; 2b148 <flatcc_builder_end_buffer@@Base+0xb0>
   2b0cc:	ldr	r1, [pc, #120]	; 2b14c <flatcc_builder_end_buffer@@Base+0xb4>
   2b0d0:	ldr	r0, [pc, #120]	; 2b150 <flatcc_builder_end_buffer@@Base+0xb8>
   2b0d4:	bl	14094 <__assert_fail@plt>
   2b0d8:	ldrh	r2, [r4, #132]	; 0x84
   2b0dc:	mov	r3, r1
   2b0e0:	ldrh	r1, [r4, #128]	; 0x80
   2b0e4:	str	r0, [sp, #4]
   2b0e8:	mov	r0, r4
   2b0ec:	cmp	r1, r2
   2b0f0:	strhcc	r2, [r4, #128]	; 0x80
   2b0f4:	ldrh	r1, [r4, #128]	; 0x80
   2b0f8:	str	r1, [sp]
   2b0fc:	add	r1, r4, #168	; 0xa8
   2b100:	bl	2ad78 <flatcc_builder_create_buffer@@Base>
   2b104:	subs	r5, r0, #0
   2b108:	beq	2b138 <flatcc_builder_end_buffer@@Base+0xa0>
   2b10c:	ldr	r3, [r4, #32]
   2b110:	mov	r0, r4
   2b114:	ldr	r2, [r3, #20]
   2b118:	str	r2, [r4, #144]	; 0x90
   2b11c:	ldr	r2, [r3, #28]
   2b120:	str	r2, [r4, #152]	; 0x98
   2b124:	ldr	r2, [r3, #16]
   2b128:	str	r2, [r4, #168]	; 0xa8
   2b12c:	ldrh	r3, [r3, #32]
   2b130:	strh	r3, [r4, #164]	; 0xa4
   2b134:	bl	2a110 <__flatcc_fb_coerce_scalar_type@@Base+0x588>
   2b138:	mov	r0, r5
   2b13c:	add	sp, sp, #12
   2b140:	pop	{r4, r5, pc}
   2b144:	andeq	r9, r4, fp, lsl #20
   2b148:	andeq	r0, r0, r6, asr #6
   2b14c:	andeq	r9, r4, r2, lsl lr
   2b150:	andeq	r9, r4, r4, ror #29

0002b154 <flatcc_builder_start_struct@@Base>:
   2b154:	push	{r4, r5, r6, lr}
   2b158:	mov	r5, r1
   2b15c:	mov	r1, r2
   2b160:	mov	r4, r0
   2b164:	bl	2a384 <flatcc_builder_default_alloc@@Base+0x168>
   2b168:	cmp	r0, #0
   2b16c:	bne	2b198 <flatcc_builder_start_struct@@Base+0x44>
   2b170:	ldr	r3, [r4, #32]
   2b174:	mov	r2, #2
   2b178:	mov	r0, r4
   2b17c:	mvn	r1, #3
   2b180:	strh	r2, [r3, #14]
   2b184:	bl	2a048 <__flatcc_fb_coerce_scalar_type@@Base+0x4c0>
   2b188:	mov	r1, r5
   2b18c:	mov	r0, r4
   2b190:	pop	{r4, r5, r6, lr}
   2b194:	b	2a0c8 <__flatcc_fb_coerce_scalar_type@@Base+0x540>
   2b198:	mov	r0, #0
   2b19c:	pop	{r4, r5, r6, pc}

0002b1a0 <flatcc_builder_struct_edit@@Base>:
   2b1a0:	ldr	r0, [r0, #16]
   2b1a4:	bx	lr

0002b1a8 <flatcc_builder_end_struct@@Base>:
   2b1a8:	ldr	r3, [r0, #32]
   2b1ac:	push	{r4, r5, r6, lr}
   2b1b0:	ldrh	r3, [r3, #14]
   2b1b4:	cmp	r3, #2
   2b1b8:	beq	2b1d0 <flatcc_builder_end_struct@@Base+0x28>
   2b1bc:	ldr	r3, [pc, #56]	; 2b1fc <flatcc_builder_end_struct@@Base+0x54>
   2b1c0:	mov	r2, #872	; 0x368
   2b1c4:	ldr	r1, [pc, #52]	; 2b200 <flatcc_builder_end_struct@@Base+0x58>
   2b1c8:	ldr	r0, [pc, #52]	; 2b204 <flatcc_builder_end_struct@@Base+0x5c>
   2b1cc:	bl	14094 <__assert_fail@plt>
   2b1d0:	ldrh	r3, [r0, #130]	; 0x82
   2b1d4:	ldr	r2, [r0, #20]
   2b1d8:	ldr	r1, [r0, #16]
   2b1dc:	mov	r4, r0
   2b1e0:	bl	2af3c <flatcc_builder_create_struct@@Base>
   2b1e4:	subs	r5, r0, #0
   2b1e8:	beq	2b1f4 <flatcc_builder_end_struct@@Base+0x4c>
   2b1ec:	mov	r0, r4
   2b1f0:	bl	2a110 <__flatcc_fb_coerce_scalar_type@@Base+0x588>
   2b1f4:	mov	r0, r5
   2b1f8:	pop	{r4, r5, r6, pc}
   2b1fc:	andeq	r9, r4, r5, lsr #20
   2b200:	andeq	r9, r4, r2, lsl lr
   2b204:	andeq	r9, r4, r0, lsl pc

0002b208 <flatcc_builder_extend_vector@@Base>:
   2b208:	push	{r4, r5, r6, lr}
   2b20c:	mov	r4, r0
   2b210:	ldr	r0, [r0, #32]
   2b214:	mov	r5, r1
   2b218:	ldr	r2, [r0, #24]
   2b21c:	bl	2a694 <flatcc_builder_default_alloc@@Base+0x478>
   2b220:	cmp	r0, #0
   2b224:	bne	2b240 <flatcc_builder_extend_vector@@Base+0x38>
   2b228:	ldr	r3, [r4, #32]
   2b22c:	mov	r0, r4
   2b230:	ldr	r1, [r3, #16]
   2b234:	mul	r1, r1, r5
   2b238:	pop	{r4, r5, r6, lr}
   2b23c:	b	2a0c8 <__flatcc_fb_coerce_scalar_type@@Base+0x540>
   2b240:	mov	r0, #0
   2b244:	pop	{r4, r5, r6, pc}

0002b248 <flatcc_builder_vector_push@@Base>:
   2b248:	ldr	r3, [r0, #32]
   2b24c:	push	{r4, lr}
   2b250:	ldrh	r2, [r3, #14]
   2b254:	cmp	r2, #4
   2b258:	beq	2b270 <flatcc_builder_vector_push@@Base+0x28>
   2b25c:	ldr	r3, [pc, #64]	; 2b2a4 <flatcc_builder_vector_push@@Base+0x5c>
   2b260:	ldr	r2, [pc, #64]	; 2b2a8 <flatcc_builder_vector_push@@Base+0x60>
   2b264:	ldr	r1, [pc, #64]	; 2b2ac <flatcc_builder_vector_push@@Base+0x64>
   2b268:	ldr	r0, [pc, #64]	; 2b2b0 <flatcc_builder_vector_push@@Base+0x68>
   2b26c:	bl	14094 <__assert_fail@plt>
   2b270:	ldr	r2, [r3, #20]
   2b274:	ldr	ip, [r3, #24]
   2b278:	cmp	r2, ip
   2b27c:	ldrhi	r3, [pc, #32]	; 2b2a4 <flatcc_builder_vector_push@@Base+0x5c>
   2b280:	movhi	r2, #908	; 0x38c
   2b284:	ldrhi	r1, [pc, #32]	; 2b2ac <flatcc_builder_vector_push@@Base+0x64>
   2b288:	ldrhi	r0, [pc, #36]	; 2b2b4 <flatcc_builder_vector_push@@Base+0x6c>
   2b28c:	bhi	2b26c <flatcc_builder_vector_push@@Base+0x24>
   2b290:	add	r2, r2, #1
   2b294:	str	r2, [r3, #20]
   2b298:	ldr	r2, [r3, #16]
   2b29c:	pop	{r4, lr}
   2b2a0:	b	2a19c <__flatcc_fb_coerce_scalar_type@@Base+0x614>
   2b2a4:	andeq	r9, r4, pc, lsr sl
   2b2a8:	andeq	r0, r0, fp, lsl #7
   2b2ac:	andeq	r9, r4, r2, lsl lr
   2b2b0:	andeq	r9, r4, ip, lsr pc
   2b2b4:	andeq	r9, r4, r8, ror #30

0002b2b8 <flatcc_builder_append_vector@@Base>:
   2b2b8:	push	{r4, r5, r6, lr}
   2b2bc:	mov	r4, r0
   2b2c0:	ldr	r0, [r0, #32]
   2b2c4:	ldrh	r3, [r0, #14]
   2b2c8:	cmp	r3, #4
   2b2cc:	beq	2b2e4 <flatcc_builder_append_vector@@Base+0x2c>
   2b2d0:	ldr	r3, [pc, #76]	; 2b324 <flatcc_builder_append_vector@@Base+0x6c>
   2b2d4:	ldr	r2, [pc, #76]	; 2b328 <flatcc_builder_append_vector@@Base+0x70>
   2b2d8:	ldr	r1, [pc, #76]	; 2b32c <flatcc_builder_append_vector@@Base+0x74>
   2b2dc:	ldr	r0, [pc, #76]	; 2b330 <flatcc_builder_append_vector@@Base+0x78>
   2b2e0:	bl	14094 <__assert_fail@plt>
   2b2e4:	mov	r5, r2
   2b2e8:	mov	r6, r1
   2b2ec:	ldr	r2, [r0, #24]
   2b2f0:	mov	r1, r5
   2b2f4:	bl	2a694 <flatcc_builder_default_alloc@@Base+0x478>
   2b2f8:	cmp	r0, #0
   2b2fc:	bne	2b31c <flatcc_builder_append_vector@@Base+0x64>
   2b300:	ldr	r3, [r4, #32]
   2b304:	mov	r1, r6
   2b308:	mov	r0, r4
   2b30c:	ldr	r2, [r3, #16]
   2b310:	mul	r2, r2, r5
   2b314:	pop	{r4, r5, r6, lr}
   2b318:	b	2a19c <__flatcc_fb_coerce_scalar_type@@Base+0x614>
   2b31c:	mov	r0, #0
   2b320:	pop	{r4, r5, r6, pc}
   2b324:	andeq	r9, r4, sl, asr sl
   2b328:	muleq	r0, r3, r3
   2b32c:	andeq	r9, r4, r2, lsl lr
   2b330:	andeq	r9, r4, ip, lsr pc

0002b334 <flatcc_builder_extend_offset_vector@@Base>:
   2b334:	push	{r4, r5, r6, lr}
   2b338:	mvn	r2, #-1073741824	; 0xc0000000
   2b33c:	mov	r4, r0
   2b340:	ldr	r0, [r0, #32]
   2b344:	mov	r5, r1
   2b348:	bl	2a694 <flatcc_builder_default_alloc@@Base+0x478>
   2b34c:	cmp	r0, #0
   2b350:	bne	2b364 <flatcc_builder_extend_offset_vector@@Base+0x30>
   2b354:	lsl	r1, r5, #2
   2b358:	mov	r0, r4
   2b35c:	pop	{r4, r5, r6, lr}
   2b360:	b	2a0c8 <__flatcc_fb_coerce_scalar_type@@Base+0x540>
   2b364:	mov	r0, #0
   2b368:	pop	{r4, r5, r6, pc}

0002b36c <flatcc_builder_offset_vector_push@@Base>:
   2b36c:	ldr	r2, [r0, #32]
   2b370:	push	{r4, lr}
   2b374:	ldrh	r3, [r2, #14]
   2b378:	cmp	r3, #5
   2b37c:	beq	2b394 <flatcc_builder_offset_vector_push@@Base+0x28>
   2b380:	ldr	r3, [pc, #64]	; 2b3c8 <flatcc_builder_offset_vector_push@@Base+0x5c>
   2b384:	ldr	r2, [pc, #64]	; 2b3cc <flatcc_builder_offset_vector_push@@Base+0x60>
   2b388:	ldr	r1, [pc, #64]	; 2b3d0 <flatcc_builder_offset_vector_push@@Base+0x64>
   2b38c:	ldr	r0, [pc, #64]	; 2b3d4 <flatcc_builder_offset_vector_push@@Base+0x68>
   2b390:	bl	14094 <__assert_fail@plt>
   2b394:	ldr	r3, [r2, #20]
   2b398:	cmn	r3, #-1073741823	; 0xc0000001
   2b39c:	beq	2b3c0 <flatcc_builder_offset_vector_push@@Base+0x54>
   2b3a0:	add	r3, r3, #1
   2b3a4:	mov	r4, r1
   2b3a8:	str	r3, [r2, #20]
   2b3ac:	mov	r1, #4
   2b3b0:	bl	2a0c8 <__flatcc_fb_coerce_scalar_type@@Base+0x540>
   2b3b4:	cmp	r0, #0
   2b3b8:	strne	r4, [r0]
   2b3bc:	pop	{r4, pc}
   2b3c0:	mov	r0, #0
   2b3c4:	pop	{r4, pc}
   2b3c8:	andeq	r9, r4, r7, ror sl
   2b3cc:	andeq	r0, r0, r6, lsr #7
   2b3d0:	andeq	r9, r4, r2, lsl lr
   2b3d4:	andeq	r9, r4, r5, lsr #31

0002b3d8 <flatcc_builder_append_offset_vector@@Base>:
   2b3d8:	push	{r4, r5, r6, lr}
   2b3dc:	mov	r4, r0
   2b3e0:	ldr	r0, [r0, #32]
   2b3e4:	ldrh	r3, [r0, #14]
   2b3e8:	cmp	r3, #5
   2b3ec:	beq	2b404 <flatcc_builder_append_offset_vector@@Base+0x2c>
   2b3f0:	ldr	r3, [pc, #68]	; 2b43c <flatcc_builder_append_offset_vector@@Base+0x64>
   2b3f4:	mov	r2, #948	; 0x3b4
   2b3f8:	ldr	r1, [pc, #64]	; 2b440 <flatcc_builder_append_offset_vector@@Base+0x68>
   2b3fc:	ldr	r0, [pc, #64]	; 2b444 <flatcc_builder_append_offset_vector@@Base+0x6c>
   2b400:	bl	14094 <__assert_fail@plt>
   2b404:	mov	r5, r2
   2b408:	mov	r6, r1
   2b40c:	mvn	r2, #-1073741824	; 0xc0000000
   2b410:	mov	r1, r5
   2b414:	bl	2a694 <flatcc_builder_default_alloc@@Base+0x478>
   2b418:	cmp	r0, #0
   2b41c:	bne	2b434 <flatcc_builder_append_offset_vector@@Base+0x5c>
   2b420:	lsl	r2, r5, #2
   2b424:	mov	r1, r6
   2b428:	mov	r0, r4
   2b42c:	pop	{r4, r5, r6, lr}
   2b430:	b	2a19c <__flatcc_fb_coerce_scalar_type@@Base+0x614>
   2b434:	mov	r0, #0
   2b438:	pop	{r4, r5, r6, pc}
   2b43c:	muleq	r4, r9, sl
   2b440:	andeq	r9, r4, r2, lsl lr
   2b444:	andeq	r9, r4, r5, lsr #31

0002b448 <flatcc_builder_extend_string@@Base>:
   2b448:	push	{r4, r5, r6, lr}
   2b44c:	mov	r4, r0
   2b450:	ldr	r0, [r0, #32]
   2b454:	ldrh	r3, [r0, #14]
   2b458:	cmp	r3, #6
   2b45c:	beq	2b474 <flatcc_builder_extend_string@@Base+0x2c>
   2b460:	ldr	r3, [pc, #56]	; 2b4a0 <flatcc_builder_extend_string@@Base+0x58>
   2b464:	ldr	r2, [pc, #56]	; 2b4a4 <flatcc_builder_extend_string@@Base+0x5c>
   2b468:	ldr	r1, [pc, #56]	; 2b4a8 <flatcc_builder_extend_string@@Base+0x60>
   2b46c:	ldr	r0, [pc, #56]	; 2b4ac <flatcc_builder_extend_string@@Base+0x64>
   2b470:	bl	14094 <__assert_fail@plt>
   2b474:	mvn	r2, #0
   2b478:	mov	r5, r1
   2b47c:	bl	2a694 <flatcc_builder_default_alloc@@Base+0x478>
   2b480:	cmp	r0, #0
   2b484:	bne	2b498 <flatcc_builder_extend_string@@Base+0x50>
   2b488:	mov	r1, r5
   2b48c:	mov	r0, r4
   2b490:	pop	{r4, r5, r6, lr}
   2b494:	b	2a0c8 <__flatcc_fb_coerce_scalar_type@@Base+0x540>
   2b498:	mov	r0, #0
   2b49c:	pop	{r4, r5, r6, pc}
   2b4a0:			; <UNDEFINED> instruction: 0x00049abd
   2b4a4:			; <UNDEFINED> instruction: 0x000003bd
   2b4a8:	andeq	r9, r4, r2, lsl lr
   2b4ac:	ldrdeq	r9, [r4], -r8

0002b4b0 <flatcc_builder_append_string@@Base>:
   2b4b0:	push	{r4, r5, r6, lr}
   2b4b4:	mov	r4, r0
   2b4b8:	ldr	r0, [r0, #32]
   2b4bc:	ldrh	r3, [r0, #14]
   2b4c0:	cmp	r3, #6
   2b4c4:	beq	2b4dc <flatcc_builder_append_string@@Base+0x2c>
   2b4c8:	ldr	r3, [pc, #68]	; 2b514 <flatcc_builder_append_string@@Base+0x64>
   2b4cc:	ldr	r2, [pc, #68]	; 2b518 <flatcc_builder_append_string@@Base+0x68>
   2b4d0:	ldr	r1, [pc, #68]	; 2b51c <flatcc_builder_append_string@@Base+0x6c>
   2b4d4:	ldr	r0, [pc, #68]	; 2b520 <flatcc_builder_append_string@@Base+0x70>
   2b4d8:	bl	14094 <__assert_fail@plt>
   2b4dc:	mov	r5, r2
   2b4e0:	mov	r6, r1
   2b4e4:	mvn	r2, #0
   2b4e8:	mov	r1, r5
   2b4ec:	bl	2a694 <flatcc_builder_default_alloc@@Base+0x478>
   2b4f0:	cmp	r0, #0
   2b4f4:	bne	2b50c <flatcc_builder_append_string@@Base+0x5c>
   2b4f8:	mov	r2, r5
   2b4fc:	mov	r1, r6
   2b500:	mov	r0, r4
   2b504:	pop	{r4, r5, r6, lr}
   2b508:	b	2a19c <__flatcc_fb_coerce_scalar_type@@Base+0x614>
   2b50c:	mov	r0, #0
   2b510:	pop	{r4, r5, r6, pc}
   2b514:	ldrdeq	r9, [r4], -sl
   2b518:	andeq	r0, r0, r6, asr #7
   2b51c:	andeq	r9, r4, r2, lsl lr
   2b520:	ldrdeq	r9, [r4], -r8

0002b524 <flatcc_builder_append_string_str@@Base>:
   2b524:	push	{r4, r5, r6, lr}
   2b528:	mov	r5, r0
   2b52c:	mov	r0, r1
   2b530:	mov	r4, r1
   2b534:	bl	13fc8 <strlen@plt>
   2b538:	mov	r1, r4
   2b53c:	mov	r2, r0
   2b540:	mov	r0, r5
   2b544:	pop	{r4, r5, r6, lr}
   2b548:	b	2b4b0 <flatcc_builder_append_string@@Base>

0002b54c <flatcc_builder_append_string_strn@@Base>:
   2b54c:	push	{r4, r5, r6, lr}
   2b550:	mov	r4, r1
   2b554:	mov	r6, r0
   2b558:	mov	r1, #0
   2b55c:	mov	r0, r4
   2b560:	mov	r5, r2
   2b564:	bl	14010 <memchr@plt>
   2b568:	mov	r1, r4
   2b56c:	cmp	r0, #0
   2b570:	subne	r5, r0, r4
   2b574:	mov	r2, r5
   2b578:	mov	r0, r6
   2b57c:	pop	{r4, r5, r6, lr}
   2b580:	b	2b4b0 <flatcc_builder_append_string@@Base>

0002b584 <flatcc_builder_truncate_vector@@Base>:
   2b584:	ldr	r3, [r0, #32]
   2b588:	push	{r4, lr}
   2b58c:	ldrh	r2, [r3, #14]
   2b590:	cmp	r2, #4
   2b594:	beq	2b5ac <flatcc_builder_truncate_vector@@Base+0x28>
   2b598:	ldr	r3, [pc, #68]	; 2b5e4 <flatcc_builder_truncate_vector@@Base+0x60>
   2b59c:	ldr	r2, [pc, #68]	; 2b5e8 <flatcc_builder_truncate_vector@@Base+0x64>
   2b5a0:	ldr	r1, [pc, #68]	; 2b5ec <flatcc_builder_truncate_vector@@Base+0x68>
   2b5a4:	ldr	r0, [pc, #68]	; 2b5f0 <flatcc_builder_truncate_vector@@Base+0x6c>
   2b5a8:	bl	14094 <__assert_fail@plt>
   2b5ac:	ldr	r2, [r3, #20]
   2b5b0:	cmp	r2, r1
   2b5b4:	ldrcc	r3, [pc, #40]	; 2b5e4 <flatcc_builder_truncate_vector@@Base+0x60>
   2b5b8:	ldrcc	r2, [pc, #52]	; 2b5f4 <flatcc_builder_truncate_vector@@Base+0x70>
   2b5bc:	ldrcc	r1, [pc, #40]	; 2b5ec <flatcc_builder_truncate_vector@@Base+0x68>
   2b5c0:	ldrcc	r0, [pc, #48]	; 2b5f8 <flatcc_builder_truncate_vector@@Base+0x74>
   2b5c4:	bcc	2b5a8 <flatcc_builder_truncate_vector@@Base+0x24>
   2b5c8:	sub	r2, r2, r1
   2b5cc:	str	r2, [r3, #20]
   2b5d0:	ldr	r3, [r3, #16]
   2b5d4:	mul	r1, r3, r1
   2b5d8:	bl	2a17c <__flatcc_fb_coerce_scalar_type@@Base+0x5f4>
   2b5dc:	mov	r0, #0
   2b5e0:	pop	{r4, pc}
   2b5e4:	strdeq	r9, [r4], -r7
   2b5e8:	ldrdeq	r0, [r0], -r9
   2b5ec:	andeq	r9, r4, r2, lsl lr
   2b5f0:	andeq	r9, r4, ip, lsr pc
   2b5f4:	ldrdeq	r0, [r0], -sl
   2b5f8:	andeq	sl, r4, r4

0002b5fc <flatcc_builder_truncate_offset_vector@@Base>:
   2b5fc:	ldr	r3, [r0, #32]
   2b600:	push	{r4, lr}
   2b604:	ldrh	r2, [r3, #14]
   2b608:	cmp	r2, #5
   2b60c:	beq	2b624 <flatcc_builder_truncate_offset_vector@@Base+0x28>
   2b610:	ldr	r3, [pc, #68]	; 2b65c <flatcc_builder_truncate_offset_vector@@Base+0x60>
   2b614:	ldr	r2, [pc, #68]	; 2b660 <flatcc_builder_truncate_offset_vector@@Base+0x64>
   2b618:	ldr	r1, [pc, #68]	; 2b664 <flatcc_builder_truncate_offset_vector@@Base+0x68>
   2b61c:	ldr	r0, [pc, #68]	; 2b668 <flatcc_builder_truncate_offset_vector@@Base+0x6c>
   2b620:	bl	14094 <__assert_fail@plt>
   2b624:	ldr	r2, [r3, #20]
   2b628:	cmp	r2, r1
   2b62c:	ldrcc	r3, [pc, #40]	; 2b65c <flatcc_builder_truncate_offset_vector@@Base+0x60>
   2b630:	ldrcc	r2, [pc, #52]	; 2b66c <flatcc_builder_truncate_offset_vector@@Base+0x70>
   2b634:	ldrcc	r1, [pc, #40]	; 2b664 <flatcc_builder_truncate_offset_vector@@Base+0x68>
   2b638:	ldrcc	r0, [pc, #48]	; 2b670 <flatcc_builder_truncate_offset_vector@@Base+0x74>
   2b63c:	bcc	2b620 <flatcc_builder_truncate_offset_vector@@Base+0x24>
   2b640:	sub	r2, r2, r1
   2b644:	str	r2, [r3, #20]
   2b648:	ldr	r3, [r3, #16]
   2b64c:	mul	r1, r3, r1
   2b650:	bl	2a17c <__flatcc_fb_coerce_scalar_type@@Base+0x5f4>
   2b654:	mov	r0, #0
   2b658:	pop	{r4, pc}
   2b65c:	andeq	r9, r4, r6, lsl fp
   2b660:	andeq	r0, r0, r2, ror #7
   2b664:	andeq	r9, r4, r2, lsl lr
   2b668:	andeq	r9, r4, r5, lsr #31
   2b66c:	andeq	r0, r0, r3, ror #7
   2b670:	andeq	sl, r4, r8, lsr #32

0002b674 <flatcc_builder_truncate_string@@Base>:
   2b674:	ldr	r2, [r0, #32]
   2b678:	push	{r4, lr}
   2b67c:	ldrh	r3, [r2, #14]
   2b680:	cmp	r3, #6
   2b684:	beq	2b69c <flatcc_builder_truncate_string@@Base+0x28>
   2b688:	ldr	r3, [pc, #60]	; 2b6cc <flatcc_builder_truncate_string@@Base+0x58>
   2b68c:	ldr	r2, [pc, #60]	; 2b6d0 <flatcc_builder_truncate_string@@Base+0x5c>
   2b690:	ldr	r1, [pc, #60]	; 2b6d4 <flatcc_builder_truncate_string@@Base+0x60>
   2b694:	ldr	r0, [pc, #60]	; 2b6d8 <flatcc_builder_truncate_string@@Base+0x64>
   2b698:	bl	14094 <__assert_fail@plt>
   2b69c:	ldr	r3, [r2, #20]
   2b6a0:	cmp	r3, r1
   2b6a4:	ldrcc	r3, [pc, #32]	; 2b6cc <flatcc_builder_truncate_string@@Base+0x58>
   2b6a8:	movcc	r2, #1004	; 0x3ec
   2b6ac:	ldrcc	r1, [pc, #32]	; 2b6d4 <flatcc_builder_truncate_string@@Base+0x60>
   2b6b0:	ldrcc	r0, [pc, #36]	; 2b6dc <flatcc_builder_truncate_string@@Base+0x68>
   2b6b4:	bcc	2b698 <flatcc_builder_truncate_string@@Base+0x24>
   2b6b8:	sub	r3, r3, r1
   2b6bc:	str	r3, [r2, #20]
   2b6c0:	bl	2a17c <__flatcc_fb_coerce_scalar_type@@Base+0x5f4>
   2b6c4:	mov	r0, #0
   2b6c8:	pop	{r4, pc}
   2b6cc:	andeq	r9, r4, ip, lsr fp
   2b6d0:	andeq	r0, r0, fp, ror #7
   2b6d4:	andeq	r9, r4, r2, lsl lr
   2b6d8:	ldrdeq	r9, [r4], -r8
   2b6dc:	andeq	sl, r4, r3, rrx

0002b6e0 <flatcc_builder_start_vector@@Base>:
   2b6e0:	cmp	r2, #4
   2b6e4:	push	{r4, r5, r6, r7, r8, lr}
   2b6e8:	mov	r7, r1
   2b6ec:	movcs	r1, r2
   2b6f0:	movcc	r1, #4
   2b6f4:	mov	r5, r0
   2b6f8:	mov	r6, r3
   2b6fc:	bl	2a384 <flatcc_builder_default_alloc@@Base+0x168>
   2b700:	subs	r4, r0, #0
   2b704:	mvnne	r4, #0
   2b708:	bne	2b730 <flatcc_builder_start_vector@@Base+0x50>
   2b70c:	ldr	r2, [r5, #32]
   2b710:	mov	r3, #4
   2b714:	mvn	r1, #3
   2b718:	str	r7, [r2, #16]
   2b71c:	str	r4, [r2, #20]
   2b720:	str	r6, [r2, #24]
   2b724:	strh	r3, [r2, #14]
   2b728:	mov	r0, r5
   2b72c:	bl	2a048 <__flatcc_fb_coerce_scalar_type@@Base+0x4c0>
   2b730:	mov	r0, r4
   2b734:	pop	{r4, r5, r6, r7, r8, pc}

0002b738 <flatcc_builder_start_offset_vector@@Base>:
   2b738:	push	{r4, r5, r6, lr}
   2b73c:	mov	r1, #4
   2b740:	mov	r5, r0
   2b744:	bl	2a384 <flatcc_builder_default_alloc@@Base+0x168>
   2b748:	subs	r4, r0, #0
   2b74c:	mvnne	r4, #0
   2b750:	bne	2b778 <flatcc_builder_start_offset_vector@@Base+0x40>
   2b754:	ldr	r3, [r5, #32]
   2b758:	mov	r2, #4
   2b75c:	mvn	r1, #3
   2b760:	str	r2, [r3, #16]
   2b764:	mov	r2, #5
   2b768:	str	r4, [r3, #20]
   2b76c:	strh	r2, [r3, #14]
   2b770:	mov	r0, r5
   2b774:	bl	2a048 <__flatcc_fb_coerce_scalar_type@@Base+0x4c0>
   2b778:	mov	r0, r4
   2b77c:	pop	{r4, r5, r6, pc}

0002b780 <flatcc_builder_start_string@@Base>:
   2b780:	push	{r4, r5, r6, lr}
   2b784:	mov	r1, #1
   2b788:	mov	r5, r0
   2b78c:	bl	2a384 <flatcc_builder_default_alloc@@Base+0x168>
   2b790:	subs	r4, r0, #0
   2b794:	mvnne	r4, #0
   2b798:	bne	2b7c0 <flatcc_builder_start_string@@Base+0x40>
   2b79c:	ldr	r3, [r5, #32]
   2b7a0:	mov	r2, #1
   2b7a4:	mvn	r1, #3
   2b7a8:	str	r2, [r3, #16]
   2b7ac:	mov	r2, #6
   2b7b0:	str	r4, [r3, #20]
   2b7b4:	strh	r2, [r3, #14]
   2b7b8:	mov	r0, r5
   2b7bc:	bl	2a048 <__flatcc_fb_coerce_scalar_type@@Base+0x4c0>
   2b7c0:	mov	r0, r4
   2b7c4:	pop	{r4, r5, r6, pc}

0002b7c8 <flatcc_builder_reserve_table@@Base>:
   2b7c8:	cmp	r1, #0
   2b7cc:	bge	2b7e8 <flatcc_builder_reserve_table@@Base+0x20>
   2b7d0:	push	{r4, lr}
   2b7d4:	ldr	r3, [pc, #16]	; 2b7ec <flatcc_builder_reserve_table@@Base+0x24>
   2b7d8:	ldr	r2, [pc, #16]	; 2b7f0 <flatcc_builder_reserve_table@@Base+0x28>
   2b7dc:	ldr	r1, [pc, #16]	; 2b7f4 <flatcc_builder_reserve_table@@Base+0x2c>
   2b7e0:	ldr	r0, [pc, #16]	; 2b7f8 <flatcc_builder_reserve_table@@Base+0x30>
   2b7e4:	bl	14094 <__assert_fail@plt>
   2b7e8:	b	2a464 <flatcc_builder_default_alloc@@Base+0x248>
   2b7ec:	andeq	r9, r4, fp, asr fp
   2b7f0:	andeq	r0, r0, r9, lsr #8
   2b7f4:	andeq	r9, r4, r2, lsl lr
   2b7f8:	muleq	r4, fp, r0

0002b7fc <flatcc_builder_start_table@@Base>:
   2b7fc:	push	{r4, r5, r6, lr}
   2b800:	mov	r5, r1
   2b804:	mov	r1, #4
   2b808:	mov	r4, r0
   2b80c:	bl	2a384 <flatcc_builder_default_alloc@@Base+0x168>
   2b810:	cmp	r0, #0
   2b814:	beq	2b824 <flatcc_builder_start_table@@Base+0x28>
   2b818:	mvn	r5, #0
   2b81c:	mov	r0, r5
   2b820:	pop	{r4, r5, r6, pc}
   2b824:	ldr	r1, [r4, #52]	; 0x34
   2b828:	ldr	r2, [r4, #4]
   2b82c:	ldr	r3, [r4, #32]
   2b830:	sub	r2, r2, r1
   2b834:	str	r2, [r3, #16]
   2b838:	ldr	r1, [r4, #76]	; 0x4c
   2b83c:	ldr	r2, [r4]
   2b840:	sub	r2, r2, r1
   2b844:	str	r2, [r3, #20]
   2b848:	ldr	r2, [r4, #12]
   2b84c:	mov	r1, r5
   2b850:	str	r2, [r3, #24]
   2b854:	ldrh	r2, [r4, #8]
   2b858:	strh	r2, [r3, #28]
   2b85c:	ldr	r2, [pc, #44]	; 2b890 <flatcc_builder_start_table@@Base+0x94>
   2b860:	strh	r0, [r4, #8]
   2b864:	str	r2, [r4, #12]
   2b868:	mov	r2, #3
   2b86c:	strh	r2, [r3, #14]
   2b870:	mov	r0, r4
   2b874:	bl	2a464 <flatcc_builder_default_alloc@@Base+0x248>
   2b878:	subs	r5, r0, #0
   2b87c:	bne	2b818 <flatcc_builder_start_table@@Base+0x1c>
   2b880:	ldr	r1, [pc, #12]	; 2b894 <flatcc_builder_start_table@@Base+0x98>
   2b884:	mov	r0, r4
   2b888:	bl	2a048 <__flatcc_fb_coerce_scalar_type@@Base+0x4c0>
   2b88c:	b	2b81c <flatcc_builder_start_table@@Base+0x20>
   2b890:	svccs	0x00693b52
   2b894:	strdeq	pc, [r0], -ip

0002b898 <flatcc_builder_create_vtable@@Base>:
   2b898:	push	{lr}		; (str lr, [sp, #-4]!)
   2b89c:	sub	sp, sp, #76	; 0x4c
   2b8a0:	cmp	r2, #0
   2b8a4:	mov	r3, #0
   2b8a8:	str	r3, [sp]
   2b8ac:	str	r3, [sp, #4]
   2b8b0:	movne	r3, #1
   2b8b4:	strne	r3, [sp, #4]
   2b8b8:	ldr	r3, [r0, #152]	; 0x98
   2b8bc:	strne	r1, [sp, #8]
   2b8c0:	strne	r2, [sp]
   2b8c4:	strne	r2, [sp, #12]
   2b8c8:	cmp	r3, #0
   2b8cc:	mov	r1, sp
   2b8d0:	bne	2b8ec <flatcc_builder_create_vtable@@Base+0x54>
   2b8d4:	ldr	r3, [r0, #180]	; 0xb4
   2b8d8:	cmp	r3, #0
   2b8dc:	bne	2b8ec <flatcc_builder_create_vtable@@Base+0x54>
   2b8e0:	bl	2a4e8 <flatcc_builder_default_alloc@@Base+0x2cc>
   2b8e4:	add	sp, sp, #76	; 0x4c
   2b8e8:	pop	{pc}		; (ldr pc, [sp], #4)
   2b8ec:	bl	2a614 <flatcc_builder_default_alloc@@Base+0x3f8>
   2b8f0:	cmp	r0, #0
   2b8f4:	addne	r0, r0, #1
   2b8f8:	b	2b8e4 <flatcc_builder_create_vtable@@Base+0x4c>

0002b8fc <flatcc_builder_create_cached_vtable@@Base>:
   2b8fc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2b900:	mov	r4, r0
   2b904:	ldr	r5, [r0, #116]	; 0x74
   2b908:	sub	sp, sp, #20
   2b90c:	cmp	r5, #0
   2b910:	mov	fp, r1
   2b914:	mov	r7, r2
   2b918:	mov	r6, r3
   2b91c:	bne	2b9c4 <flatcc_builder_create_cached_vtable@@Base+0xc8>
   2b920:	ldr	r3, [r0, #124]	; 0x7c
   2b924:	add	r9, r0, #92	; 0x5c
   2b928:	cmp	r3, #0
   2b92c:	beq	2b944 <flatcc_builder_create_cached_vtable@@Base+0x48>
   2b930:	ldr	r3, [pc, #556]	; 2bb64 <flatcc_builder_create_cached_vtable@@Base+0x268>
   2b934:	ldr	r2, [pc, #556]	; 2bb68 <flatcc_builder_create_cached_vtable@@Base+0x26c>
   2b938:	ldr	r1, [pc, #556]	; 2bb6c <flatcc_builder_create_cached_vtable@@Base+0x270>
   2b93c:	ldr	r0, [pc, #556]	; 2bb70 <flatcc_builder_create_cached_vtable@@Base+0x274>
   2b940:	bl	14094 <__assert_fail@plt>
   2b944:	str	r5, [sp]
   2b948:	mov	r3, #16
   2b94c:	mov	r2, r5
   2b950:	mov	r1, #6
   2b954:	bl	2a314 <flatcc_builder_default_alloc@@Base+0xf8>
   2b958:	cmp	r0, #0
   2b95c:	beq	2b998 <flatcc_builder_create_cached_vtable@@Base+0x9c>
   2b960:	mov	r3, #16
   2b964:	str	r3, [r4, #124]	; 0x7c
   2b968:	mov	r3, #5
   2b96c:	str	r3, [sp]
   2b970:	mov	r1, r9
   2b974:	mov	r3, #1
   2b978:	ldr	r8, [r4, #48]	; 0x30
   2b97c:	mov	r2, #256	; 0x100
   2b980:	ldr	r0, [r4, #40]	; 0x28
   2b984:	blx	r8
   2b988:	cmp	r0, #0
   2b98c:	moveq	r3, #256	; 0x100
   2b990:	ldreq	r1, [r4, #96]	; 0x60
   2b994:	beq	2b9a4 <flatcc_builder_create_cached_vtable@@Base+0xa8>
   2b998:	mov	r0, #0
   2b99c:	b	2bb14 <flatcc_builder_create_cached_vtable@@Base+0x218>
   2b9a0:	mov	r3, r2
   2b9a4:	lsl	r2, r3, #1
   2b9a8:	cmp	r2, r1
   2b9ac:	bls	2b9a0 <flatcc_builder_create_cached_vtable@@Base+0xa4>
   2b9b0:	lsr	r3, r3, #2
   2b9b4:	mov	r2, #1
   2b9b8:	cmp	r3, r2, lsl r5
   2b9bc:	bhi	2ba84 <flatcc_builder_create_cached_vtable@@Base+0x188>
   2b9c0:	str	r5, [r4, #116]	; 0x74
   2b9c4:	ldr	r3, [r4, #116]	; 0x74
   2b9c8:	ldr	r8, [r4, #92]	; 0x5c
   2b9cc:	rsb	r3, r3, #32
   2b9d0:	lsr	r6, r6, r3
   2b9d4:	adds	r3, r8, r6, lsl #2
   2b9d8:	str	r3, [sp, #8]
   2b9dc:	ldrne	r9, [r8, r6, lsl #2]
   2b9e0:	movne	sl, #0
   2b9e4:	beq	2b998 <flatcc_builder_create_cached_vtable@@Base+0x9c>
   2b9e8:	cmp	r9, #0
   2b9ec:	bne	2ba8c <flatcc_builder_create_cached_vtable@@Base+0x190>
   2b9f0:	str	r9, [sp]
   2b9f4:	mov	r3, #16
   2b9f8:	ldr	r2, [r4, #124]	; 0x7c
   2b9fc:	mov	r1, #6
   2ba00:	mov	r0, r4
   2ba04:	bl	2a314 <flatcc_builder_default_alloc@@Base+0xf8>
   2ba08:	subs	r5, r0, #0
   2ba0c:	beq	2b998 <flatcc_builder_create_cached_vtable@@Base+0x9c>
   2ba10:	ldr	r3, [r4, #124]	; 0x7c
   2ba14:	mov	r1, fp
   2ba18:	add	r2, r3, #16
   2ba1c:	str	r2, [r4, #124]	; 0x7c
   2ba20:	ldr	r2, [r4, #152]	; 0x98
   2ba24:	mov	r0, r4
   2ba28:	str	r2, [r5, #4]
   2ba2c:	ldr	r2, [r8, r6, lsl #2]
   2ba30:	str	r2, [r5, #12]
   2ba34:	str	r3, [r8, r6, lsl #2]
   2ba38:	mov	r2, r7
   2ba3c:	bl	2b898 <flatcc_builder_create_vtable@@Base>
   2ba40:	cmp	r0, #0
   2ba44:	str	r0, [r5]
   2ba48:	beq	2b998 <flatcc_builder_create_cached_vtable@@Base+0x9c>
   2ba4c:	cmp	sl, #0
   2ba50:	ldrne	r3, [sl, #8]
   2ba54:	strne	r3, [r5, #8]
   2ba58:	bne	2bb10 <flatcc_builder_create_cached_vtable@@Base+0x214>
   2ba5c:	ldr	r2, [r4, #172]	; 0xac
   2ba60:	cmp	r2, #0
   2ba64:	beq	2bb1c <flatcc_builder_create_cached_vtable@@Base+0x220>
   2ba68:	ldr	r3, [r4, #120]	; 0x78
   2ba6c:	add	r3, r7, r3
   2ba70:	cmp	r2, r3
   2ba74:	bcs	2bb1c <flatcc_builder_create_cached_vtable@@Base+0x220>
   2ba78:	mov	r0, r4
   2ba7c:	bl	2a858 <flatcc_builder_flush_vtable_cache@@Base>
   2ba80:	b	2bb10 <flatcc_builder_create_cached_vtable@@Base+0x214>
   2ba84:	add	r5, r5, #1
   2ba88:	b	2b9b8 <flatcc_builder_create_cached_vtable@@Base+0xbc>
   2ba8c:	ldr	r5, [r4, #100]	; 0x64
   2ba90:	ldr	r0, [r4, #68]	; 0x44
   2ba94:	add	r5, r5, r9
   2ba98:	ldr	r2, [r5, #8]
   2ba9c:	add	r1, r0, r2
   2baa0:	ldrh	r2, [r0, r2]
   2baa4:	cmp	r2, r7
   2baa8:	bne	2bac8 <flatcc_builder_create_cached_vtable@@Base+0x1cc>
   2baac:	mov	r2, r7
   2bab0:	mov	r0, fp
   2bab4:	str	r3, [sp, #12]
   2bab8:	bl	13f38 <memcmp@plt>
   2babc:	ldr	r3, [sp, #12]
   2bac0:	cmp	r0, #0
   2bac4:	beq	2badc <flatcc_builder_create_cached_vtable@@Base+0x1e0>
   2bac8:	add	r3, r5, #12
   2bacc:	ldr	r9, [r5, #12]
   2bad0:	mov	r5, sl
   2bad4:	mov	sl, r5
   2bad8:	b	2b9e8 <flatcc_builder_create_cached_vtable@@Base+0xec>
   2badc:	ldr	r1, [r5, #4]
   2bae0:	ldr	r2, [r4, #152]	; 0x98
   2bae4:	cmp	r1, r2
   2bae8:	addne	r3, r5, #12
   2baec:	ldrne	r9, [r5, #12]
   2baf0:	bne	2bad4 <flatcc_builder_create_cached_vtable@@Base+0x1d8>
   2baf4:	ldr	r2, [sp, #8]
   2baf8:	cmp	r3, r2
   2bafc:	ldrne	r2, [r5, #12]
   2bb00:	strne	r2, [r3]
   2bb04:	ldrne	r3, [r8, r6, lsl #2]
   2bb08:	strne	r3, [r5, #12]
   2bb0c:	strne	r9, [r8, r6, lsl #2]
   2bb10:	ldr	r0, [r5]
   2bb14:	add	sp, sp, #20
   2bb18:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2bb1c:	mov	r3, #0
   2bb20:	str	r3, [sp]
   2bb24:	ldr	r2, [r4, #120]	; 0x78
   2bb28:	mov	r3, r7
   2bb2c:	mov	r1, #2
   2bb30:	mov	r0, r4
   2bb34:	bl	2a314 <flatcc_builder_default_alloc@@Base+0xf8>
   2bb38:	cmp	r0, #0
   2bb3c:	mvneq	r0, #0
   2bb40:	beq	2bb14 <flatcc_builder_create_cached_vtable@@Base+0x218>
   2bb44:	ldr	r3, [r4, #120]	; 0x78
   2bb48:	mov	r2, r7
   2bb4c:	str	r3, [r5, #8]
   2bb50:	add	r3, r7, r3
   2bb54:	str	r3, [r4, #120]	; 0x78
   2bb58:	mov	r1, fp
   2bb5c:	bl	13f20 <memcpy@plt>
   2bb60:	b	2bb10 <flatcc_builder_create_cached_vtable@@Base+0x214>
   2bb64:	andeq	r9, r4, r8, ror fp
   2bb68:	andeq	r0, r0, r6, asr r1
   2bb6c:	andeq	r9, r4, r2, lsl lr
   2bb70:	andeq	sl, r4, r5, lsl #1

0002bb74 <flatcc_builder_create_table@@Base>:
   2bb74:	push	{r4, r5, r6, r7, lr}
   2bb78:	sub	sp, sp, #84	; 0x54
   2bb7c:	ldr	r4, [sp, #108]	; 0x6c
   2bb80:	ldr	lr, [sp, #112]	; 0x70
   2bb84:	cmp	r4, #0
   2bb88:	bge	2bba0 <flatcc_builder_create_table@@Base+0x2c>
   2bb8c:	ldr	r3, [pc, #268]	; 2bca0 <flatcc_builder_create_table@@Base+0x12c>
   2bb90:	ldr	r2, [pc, #268]	; 2bca4 <flatcc_builder_create_table@@Base+0x130>
   2bb94:	ldr	r1, [pc, #268]	; 2bca8 <flatcc_builder_create_table@@Base+0x134>
   2bb98:	ldr	r0, [pc, #268]	; 2bcac <flatcc_builder_create_table@@Base+0x138>
   2bb9c:	bl	14094 <__assert_fail@plt>
   2bba0:	tst	lr, #1
   2bba4:	ldreq	r3, [pc, #244]	; 2bca0 <flatcc_builder_create_table@@Base+0x12c>
   2bba8:	ldreq	r2, [pc, #256]	; 2bcb0 <flatcc_builder_create_table@@Base+0x13c>
   2bbac:	ldreq	r1, [pc, #244]	; 2bca8 <flatcc_builder_create_table@@Base+0x134>
   2bbb0:	ldreq	r0, [pc, #252]	; 2bcb4 <flatcc_builder_create_table@@Base+0x140>
   2bbb4:	beq	2bb9c <flatcc_builder_create_table@@Base+0x28>
   2bbb8:	ldrh	ip, [r0, #128]	; 0x80
   2bbbc:	cmp	r3, #4
   2bbc0:	movcc	r3, #4
   2bbc4:	ldr	r6, [r0, #136]	; 0x88
   2bbc8:	cmp	ip, r3
   2bbcc:	mvn	r5, #3
   2bbd0:	sub	ip, r6, r2
   2bbd4:	strhcc	r3, [r0, #128]	; 0x80
   2bbd8:	sub	r3, r3, #1
   2bbdc:	and	r3, r3, ip
   2bbe0:	sub	ip, r5, r2
   2bbe4:	add	ip, ip, r6
   2bbe8:	sub	ip, ip, r3
   2bbec:	sub	lr, lr, #1
   2bbf0:	sub	lr, ip, lr
   2bbf4:	str	lr, [sp, #4]
   2bbf8:	ldr	lr, [sp, #104]	; 0x68
   2bbfc:	sub	ip, r5, ip
   2bc00:	add	r4, lr, r4, lsl #1
   2bc04:	cmp	r4, lr
   2bc08:	bne	2bc88 <flatcc_builder_create_table@@Base+0x114>
   2bc0c:	mov	ip, #4
   2bc10:	cmp	r2, #0
   2bc14:	str	ip, [sp, #8]
   2bc18:	add	lr, sp, ip
   2bc1c:	str	ip, [sp, #20]
   2bc20:	mov	ip, #1
   2bc24:	str	ip, [sp, #12]
   2bc28:	strne	r2, [sp, #28]
   2bc2c:	addne	ip, r2, #4
   2bc30:	movne	r2, #2
   2bc34:	strne	ip, [sp, #8]
   2bc38:	strne	r1, [sp, #24]
   2bc3c:	strne	r2, [sp, #12]
   2bc40:	cmp	r3, #0
   2bc44:	str	lr, [sp, #16]
   2bc48:	beq	2bc78 <flatcc_builder_create_table@@Base+0x104>
   2bc4c:	ldr	r2, [sp, #8]
   2bc50:	add	r1, sp, #80	; 0x50
   2bc54:	add	r2, r2, r3
   2bc58:	str	r2, [sp, #8]
   2bc5c:	ldr	r2, [sp, #12]
   2bc60:	ldr	ip, [pc, #80]	; 2bcb8 <flatcc_builder_create_table@@Base+0x144>
   2bc64:	add	r2, r2, #1
   2bc68:	str	r2, [sp, #12]
   2bc6c:	add	r1, r1, r2, lsl #3
   2bc70:	str	ip, [r1, #-72]	; 0xffffffb8
   2bc74:	str	r3, [r1, #-68]	; 0xffffffbc
   2bc78:	add	r1, sp, #8
   2bc7c:	bl	2a614 <flatcc_builder_default_alloc@@Base+0x3f8>
   2bc80:	add	sp, sp, #84	; 0x54
   2bc84:	pop	{r4, r5, r6, r7, pc}
   2bc88:	ldrh	r5, [lr], #2
   2bc8c:	sub	r7, ip, r5
   2bc90:	ldr	r6, [r1, r5]
   2bc94:	add	r6, r6, r7
   2bc98:	str	r6, [r1, r5]
   2bc9c:	b	2bc04 <flatcc_builder_create_table@@Base+0x90>
   2bca0:	andeq	r9, r4, r1, lsl #23
   2bca4:	ldrdeq	r0, [r0], -r5
   2bca8:	andeq	r9, r4, r2, lsl lr
   2bcac:	muleq	r4, r4, r0
   2bcb0:	ldrdeq	r0, [r0], -fp
   2bcb4:	andeq	sl, r4, r6, lsr #1
   2bcb8:	andeq	r9, r4, ip, lsr #14

0002bcbc <flatcc_builder_check_required_field@@Base>:
   2bcbc:	ldr	r3, [r0, #32]
   2bcc0:	ldrh	r3, [r3, #14]
   2bcc4:	cmp	r3, #3
   2bcc8:	beq	2bce4 <flatcc_builder_check_required_field@@Base+0x28>
   2bccc:	push	{r4, lr}
   2bcd0:	ldr	r3, [pc, #52]	; 2bd0c <flatcc_builder_check_required_field@@Base+0x50>
   2bcd4:	ldr	r2, [pc, #52]	; 2bd10 <flatcc_builder_check_required_field@@Base+0x54>
   2bcd8:	ldr	r1, [pc, #52]	; 2bd14 <flatcc_builder_check_required_field@@Base+0x58>
   2bcdc:	ldr	r0, [pc, #52]	; 2bd18 <flatcc_builder_check_required_field@@Base+0x5c>
   2bce0:	bl	14094 <__assert_fail@plt>
   2bce4:	ldrh	r3, [r0, #8]
   2bce8:	cmp	r3, r1
   2bcec:	movls	r0, #0
   2bcf0:	bls	2bd08 <flatcc_builder_check_required_field@@Base+0x4c>
   2bcf4:	ldr	r3, [r0, #4]
   2bcf8:	lsl	r1, r1, #1
   2bcfc:	ldrh	r0, [r3, r1]
   2bd00:	adds	r0, r0, #0
   2bd04:	movne	r0, #1
   2bd08:	bx	lr
   2bd0c:	muleq	r4, sp, fp
   2bd10:	strdeq	r0, [r0], -r8
   2bd14:	andeq	r9, r4, r2, lsl lr
   2bd18:	strheq	sl, [r4], -r1

0002bd1c <flatcc_builder_check_union_field@@Base>:
   2bd1c:	ldr	r3, [r0, #32]
   2bd20:	ldrh	r3, [r3, #14]
   2bd24:	cmp	r3, #3
   2bd28:	beq	2bd44 <flatcc_builder_check_union_field@@Base+0x28>
   2bd2c:	push	{r4, lr}
   2bd30:	ldr	r3, [pc, #112]	; 2bda8 <flatcc_builder_check_union_field@@Base+0x8c>
   2bd34:	ldr	r2, [pc, #112]	; 2bdac <flatcc_builder_check_union_field@@Base+0x90>
   2bd38:	ldr	r1, [pc, #112]	; 2bdb0 <flatcc_builder_check_union_field@@Base+0x94>
   2bd3c:	ldr	r0, [pc, #112]	; 2bdb4 <flatcc_builder_check_union_field@@Base+0x98>
   2bd40:	bl	14094 <__assert_fail@plt>
   2bd44:	cmp	r1, #0
   2bd48:	beq	2bda0 <flatcc_builder_check_union_field@@Base+0x84>
   2bd4c:	ldrh	r3, [r0, #8]
   2bd50:	cmp	r3, r1
   2bd54:	bls	2bda0 <flatcc_builder_check_union_field@@Base+0x84>
   2bd58:	sub	r1, r1, #-2147483647	; 0x80000001
   2bd5c:	ldr	r3, [r0, #4]
   2bd60:	lsl	r1, r1, #1
   2bd64:	ldrh	r2, [r3, r1]!
   2bd68:	cmp	r2, #0
   2bd6c:	ldrheq	r0, [r3, #2]
   2bd70:	beq	2bd94 <flatcc_builder_check_union_field@@Base+0x78>
   2bd74:	ldr	r1, [r0, #16]
   2bd78:	ldrh	r0, [r3, #2]
   2bd7c:	ldrb	r2, [r1, r2]
   2bd80:	cmp	r2, #0
   2bd84:	beq	2bd94 <flatcc_builder_check_union_field@@Base+0x78>
   2bd88:	adds	r0, r0, #0
   2bd8c:	movne	r0, #1
   2bd90:	bx	lr
   2bd94:	clz	r0, r0
   2bd98:	lsr	r0, r0, #5
   2bd9c:	b	2bd90 <flatcc_builder_check_union_field@@Base+0x74>
   2bda0:	mov	r0, #0
   2bda4:	b	2bd90 <flatcc_builder_check_union_field@@Base+0x74>
   2bda8:	andeq	r9, r4, r1, asr #23
   2bdac:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   2bdb0:	andeq	r9, r4, r2, lsl lr
   2bdb4:	strheq	sl, [r4], -r1

0002bdb8 <flatcc_builder_check_required@@Base>:
   2bdb8:	ldr	r3, [r0, #32]
   2bdbc:	push	{r4, lr}
   2bdc0:	ldrh	r3, [r3, #14]
   2bdc4:	cmp	r3, #3
   2bdc8:	beq	2bde0 <flatcc_builder_check_required@@Base+0x28>
   2bdcc:	ldr	r3, [pc, #84]	; 2be28 <flatcc_builder_check_required@@Base+0x70>
   2bdd0:	ldr	r2, [pc, #84]	; 2be2c <flatcc_builder_check_required@@Base+0x74>
   2bdd4:	ldr	r1, [pc, #84]	; 2be30 <flatcc_builder_check_required@@Base+0x78>
   2bdd8:	ldr	r0, [pc, #84]	; 2be34 <flatcc_builder_check_required@@Base+0x7c>
   2bddc:	bl	14094 <__assert_fail@plt>
   2bde0:	ldrh	r3, [r0, #8]
   2bde4:	cmp	r3, r2
   2bde8:	subge	r1, r1, #2
   2bdec:	movge	ip, #0
   2bdf0:	bge	2be18 <flatcc_builder_check_required@@Base+0x60>
   2bdf4:	mov	r0, #0
   2bdf8:	pop	{r4, pc}
   2bdfc:	ldrh	r3, [r1, #2]!
   2be00:	ldr	lr, [r0, #4]
   2be04:	lsl	r3, r3, #1
   2be08:	ldrh	r3, [lr, r3]
   2be0c:	cmp	r3, #0
   2be10:	beq	2bdf4 <flatcc_builder_check_required@@Base+0x3c>
   2be14:	add	ip, ip, #1
   2be18:	cmp	ip, r2
   2be1c:	blt	2bdfc <flatcc_builder_check_required@@Base+0x44>
   2be20:	mov	r0, #1
   2be24:	pop	{r4, pc}
   2be28:	andeq	r9, r4, r2, ror #23
   2be2c:	andeq	r0, r0, r1, lsl r5
   2be30:	andeq	r9, r4, r2, lsl lr
   2be34:	strheq	sl, [r4], -r1

0002be38 <flatcc_builder_end_table@@Base>:
   2be38:	ldr	r3, [r0, #32]
   2be3c:	push	{r4, r5, r6, r7, lr}
   2be40:	sub	sp, sp, #20
   2be44:	ldrh	r3, [r3, #14]
   2be48:	cmp	r3, #3
   2be4c:	beq	2be64 <flatcc_builder_end_table@@Base+0x2c>
   2be50:	ldr	r3, [pc, #260]	; 2bf5c <flatcc_builder_end_table@@Base+0x124>
   2be54:	ldr	r2, [pc, #260]	; 2bf60 <flatcc_builder_end_table@@Base+0x128>
   2be58:	ldr	r1, [pc, #260]	; 2bf64 <flatcc_builder_end_table@@Base+0x12c>
   2be5c:	ldr	r0, [pc, #260]	; 2bf68 <flatcc_builder_end_table@@Base+0x130>
   2be60:	bl	14094 <__assert_fail@plt>
   2be64:	ldrh	r5, [r0, #8]
   2be68:	ldr	r3, [r0, #20]
   2be6c:	ldr	r1, [r0, #4]
   2be70:	add	r5, r5, #2
   2be74:	add	r3, r3, #4
   2be78:	lsl	r5, r5, #1
   2be7c:	uxth	r2, r3
   2be80:	uxth	r5, r5
   2be84:	ldr	r3, [r0, #12]
   2be88:	strh	r2, [r1, #-2]
   2be8c:	strh	r5, [r1, #-4]
   2be90:	sub	r6, r1, #4
   2be94:	ldr	r1, [pc, #208]	; 2bf6c <flatcc_builder_end_table@@Base+0x134>
   2be98:	eor	r3, r3, r5
   2be9c:	mov	r4, r0
   2bea0:	mul	r3, r1, r3
   2bea4:	eor	r3, r3, r2
   2bea8:	mov	r2, r5
   2beac:	mul	r3, r1, r3
   2beb0:	mov	r1, r6
   2beb4:	str	r3, [r0, #12]
   2beb8:	bl	2b8fc <flatcc_builder_create_cached_vtable@@Base>
   2bebc:	subs	r7, r0, #0
   2bec0:	beq	2bf50 <flatcc_builder_end_table@@Base+0x118>
   2bec4:	mov	r2, r5
   2bec8:	mov	r1, #0
   2becc:	mov	r0, r6
   2bed0:	bl	13fec <memset@plt>
   2bed4:	ldr	r3, [r4, #32]
   2bed8:	ldr	r1, [r4, #76]	; 0x4c
   2bedc:	mov	r0, r4
   2bee0:	ldr	r3, [r3, #20]
   2bee4:	add	r1, r1, r3
   2bee8:	ldrh	r3, [r4, #130]	; 0x82
   2beec:	str	r7, [sp, #8]
   2bef0:	ldr	r2, [r4]
   2bef4:	sub	r2, r2, r1
   2bef8:	asr	r2, r2, #1
   2befc:	stm	sp, {r1, r2}
   2bf00:	ldr	r2, [r4, #20]
   2bf04:	ldr	r1, [r4, #16]
   2bf08:	bl	2bb74 <flatcc_builder_create_table@@Base>
   2bf0c:	subs	r7, r0, #0
   2bf10:	beq	2bf50 <flatcc_builder_end_table@@Base+0x118>
   2bf14:	ldr	r3, [r4, #32]
   2bf18:	mov	r0, r4
   2bf1c:	ldr	r2, [r3, #24]
   2bf20:	str	r2, [r4, #12]
   2bf24:	ldrh	r2, [r3, #28]
   2bf28:	strh	r2, [r4, #8]
   2bf2c:	ldr	r2, [r4, #52]	; 0x34
   2bf30:	ldr	r1, [r3, #16]
   2bf34:	add	r2, r2, r1
   2bf38:	str	r2, [r4, #4]
   2bf3c:	ldr	r2, [r4, #76]	; 0x4c
   2bf40:	ldr	r3, [r3, #20]
   2bf44:	add	r3, r2, r3
   2bf48:	str	r3, [r4]
   2bf4c:	bl	2a110 <__flatcc_fb_coerce_scalar_type@@Base+0x588>
   2bf50:	mov	r0, r7
   2bf54:	add	sp, sp, #20
   2bf58:	pop	{r4, r5, r6, r7, pc}
   2bf5c:	andeq	r9, r4, r0, lsl #24
   2bf60:	andeq	r0, r0, r5, lsr #10
   2bf64:	andeq	r9, r4, r2, lsl lr
   2bf68:	strheq	sl, [r4], -r1
   2bf6c:			; <UNDEFINED> instruction: 0x9e3779b1

0002bf70 <flatcc_builder_create_vector@@Base>:
   2bf70:	push	{lr}		; (str lr, [sp, #-4]!)
   2bf74:	sub	sp, sp, #84	; 0x54
   2bf78:	ldr	lr, [sp, #92]	; 0x5c
   2bf7c:	ldrh	ip, [sp, #88]	; 0x58
   2bf80:	cmp	r2, lr
   2bf84:	bls	2bf9c <flatcc_builder_create_vector@@Base+0x2c>
   2bf88:	ldr	r3, [pc, #180]	; 2c044 <flatcc_builder_create_vector@@Base+0xd4>
   2bf8c:	ldr	r2, [pc, #180]	; 2c048 <flatcc_builder_create_vector@@Base+0xd8>
   2bf90:	ldr	r1, [pc, #180]	; 2c04c <flatcc_builder_create_vector@@Base+0xdc>
   2bf94:	ldr	r0, [pc, #180]	; 2c050 <flatcc_builder_create_vector@@Base+0xe0>
   2bf98:	bl	14094 <__assert_fail@plt>
   2bf9c:	ldrh	lr, [r0, #128]	; 0x80
   2bfa0:	mul	r3, r3, r2
   2bfa4:	cmp	ip, #4
   2bfa8:	movcc	ip, #4
   2bfac:	str	r2, [sp, #4]
   2bfb0:	ldr	r2, [r0, #136]	; 0x88
   2bfb4:	cmp	lr, ip
   2bfb8:	sub	r2, r2, r3
   2bfbc:	strhcc	ip, [r0, #128]	; 0x80
   2bfc0:	sub	ip, ip, #1
   2bfc4:	and	ip, ip, r2
   2bfc8:	mov	r2, #4
   2bfcc:	cmp	r3, #0
   2bfd0:	str	r2, [sp, #8]
   2bfd4:	add	lr, sp, r2
   2bfd8:	str	r2, [sp, #20]
   2bfdc:	mov	r2, #1
   2bfe0:	str	r2, [sp, #12]
   2bfe4:	strne	r3, [sp, #28]
   2bfe8:	addne	r2, r3, #4
   2bfec:	movne	r3, #2
   2bff0:	strne	r2, [sp, #8]
   2bff4:	strne	r1, [sp, #24]
   2bff8:	strne	r3, [sp, #12]
   2bffc:	cmp	ip, #0
   2c000:	str	lr, [sp, #16]
   2c004:	beq	2c034 <flatcc_builder_create_vector@@Base+0xc4>
   2c008:	ldr	r3, [sp, #8]
   2c00c:	add	r2, sp, #80	; 0x50
   2c010:	add	r3, r3, ip
   2c014:	str	r3, [sp, #8]
   2c018:	ldr	r3, [sp, #12]
   2c01c:	ldr	r1, [pc, #48]	; 2c054 <flatcc_builder_create_vector@@Base+0xe4>
   2c020:	add	r3, r3, #1
   2c024:	str	r3, [sp, #12]
   2c028:	add	r2, r2, r3, lsl #3
   2c02c:	str	r1, [r2, #-72]	; 0xffffffb8
   2c030:	str	ip, [r2, #-68]	; 0xffffffbc
   2c034:	add	r1, sp, #8
   2c038:	bl	2a614 <flatcc_builder_default_alloc@@Base+0x3f8>
   2c03c:	add	sp, sp, #84	; 0x54
   2c040:	pop	{pc}		; (ldr pc, [sp], #4)
   2c044:	andeq	r9, r4, r9, lsl ip
   2c048:	andeq	r0, r0, r5, asr r5
   2c04c:	andeq	r9, r4, r2, lsl lr
   2c050:	ldrdeq	sl, [r4], -ip
   2c054:	andeq	r9, r4, ip, lsr #14

0002c058 <flatcc_builder_end_vector@@Base>:
   2c058:	push	{r0, r1, r2, r4, r5, lr}
   2c05c:	ldr	r2, [r0, #32]
   2c060:	ldrh	r3, [r2, #14]
   2c064:	cmp	r3, #4
   2c068:	beq	2c080 <flatcc_builder_end_vector@@Base+0x28>
   2c06c:	ldr	r3, [pc, #76]	; 2c0c0 <flatcc_builder_end_vector@@Base+0x68>
   2c070:	ldr	r2, [pc, #76]	; 2c0c4 <flatcc_builder_end_vector@@Base+0x6c>
   2c074:	ldr	r1, [pc, #76]	; 2c0c8 <flatcc_builder_end_vector@@Base+0x70>
   2c078:	ldr	r0, [pc, #76]	; 2c0cc <flatcc_builder_end_vector@@Base+0x74>
   2c07c:	bl	14094 <__assert_fail@plt>
   2c080:	ldr	r3, [r2, #24]
   2c084:	mov	r4, r0
   2c088:	str	r3, [sp, #4]
   2c08c:	ldrh	r3, [r0, #130]	; 0x82
   2c090:	str	r3, [sp]
   2c094:	ldr	r3, [r2, #16]
   2c098:	ldr	r1, [r0, #16]
   2c09c:	ldr	r2, [r2, #20]
   2c0a0:	bl	2bf70 <flatcc_builder_create_vector@@Base>
   2c0a4:	subs	r5, r0, #0
   2c0a8:	beq	2c0b4 <flatcc_builder_end_vector@@Base+0x5c>
   2c0ac:	mov	r0, r4
   2c0b0:	bl	2a110 <__flatcc_fb_coerce_scalar_type@@Base+0x588>
   2c0b4:	mov	r0, r5
   2c0b8:	add	sp, sp, #12
   2c0bc:	pop	{r4, r5, pc}
   2c0c0:	andeq	r9, r4, r6, lsr ip
   2c0c4:	andeq	r0, r0, r8, ror r5
   2c0c8:	andeq	r9, r4, r2, lsl lr
   2c0cc:	andeq	r9, r4, ip, lsr pc

0002c0d0 <flatcc_builder_vector_count@@Base>:
   2c0d0:	ldr	r3, [r0, #32]
   2c0d4:	ldr	r0, [r3, #20]
   2c0d8:	bx	lr

0002c0dc <flatcc_builder_vector_edit@@Base>:
   2c0dc:	ldr	r0, [r0, #16]
   2c0e0:	bx	lr

0002c0e4 <flatcc_builder_create_offset_vector_direct@@Base>:
   2c0e4:	cmn	r2, #-1073741823	; 0xc0000001
   2c0e8:	bhi	2c0f4 <flatcc_builder_create_offset_vector_direct@@Base+0x10>
   2c0ec:	mov	r3, #0
   2c0f0:	b	2a6e8 <flatcc_builder_default_alloc@@Base+0x4cc>
   2c0f4:	mov	r0, #0
   2c0f8:	bx	lr

0002c0fc <flatcc_builder_end_offset_vector@@Base>:
   2c0fc:	ldr	r3, [r0, #32]
   2c100:	push	{r4, r5, r6, lr}
   2c104:	ldrh	r2, [r3, #14]
   2c108:	cmp	r2, #5
   2c10c:	beq	2c124 <flatcc_builder_end_offset_vector@@Base+0x28>
   2c110:	ldr	r3, [pc, #52]	; 2c14c <flatcc_builder_end_offset_vector@@Base+0x50>
   2c114:	ldr	r2, [pc, #52]	; 2c150 <flatcc_builder_end_offset_vector@@Base+0x54>
   2c118:	ldr	r1, [pc, #52]	; 2c154 <flatcc_builder_end_offset_vector@@Base+0x58>
   2c11c:	ldr	r0, [pc, #52]	; 2c158 <flatcc_builder_end_offset_vector@@Base+0x5c>
   2c120:	bl	14094 <__assert_fail@plt>
   2c124:	ldr	r2, [r3, #20]
   2c128:	ldr	r1, [r0, #16]
   2c12c:	mov	r4, r0
   2c130:	bl	2c0e4 <flatcc_builder_create_offset_vector_direct@@Base>
   2c134:	subs	r5, r0, #0
   2c138:	beq	2c144 <flatcc_builder_end_offset_vector@@Base+0x48>
   2c13c:	mov	r0, r4
   2c140:	bl	2a110 <__flatcc_fb_coerce_scalar_type@@Base+0x588>
   2c144:	mov	r0, r5
   2c148:	pop	{r4, r5, r6, pc}
   2c14c:	andeq	r9, r4, r0, asr ip
   2c150:	andeq	r0, r0, r8, asr #11
   2c154:	andeq	r9, r4, r2, lsl lr
   2c158:	andeq	r9, r4, r5, lsr #31

0002c15c <flatcc_builder_create_offset_vector@@Base>:
   2c15c:	push	{r4, r5, r6, lr}
   2c160:	mov	r4, r0
   2c164:	mov	r6, r1
   2c168:	mov	r5, r2
   2c16c:	bl	2b738 <flatcc_builder_start_offset_vector@@Base>
   2c170:	cmp	r0, #0
   2c174:	bne	2c1a4 <flatcc_builder_create_offset_vector@@Base+0x48>
   2c178:	mov	r1, r5
   2c17c:	mov	r0, r4
   2c180:	bl	2b334 <flatcc_builder_extend_offset_vector@@Base>
   2c184:	cmp	r0, #0
   2c188:	beq	2c1a4 <flatcc_builder_create_offset_vector@@Base+0x48>
   2c18c:	lsl	r2, r5, #2
   2c190:	mov	r1, r6
   2c194:	bl	13f20 <memcpy@plt>
   2c198:	mov	r0, r4
   2c19c:	pop	{r4, r5, r6, lr}
   2c1a0:	b	2c0fc <flatcc_builder_end_offset_vector@@Base>
   2c1a4:	mov	r0, #0
   2c1a8:	pop	{r4, r5, r6, pc}

0002c1ac <flatcc_builder_end_offset_vector_for_unions@@Base>:
   2c1ac:	ldr	r2, [r0, #32]
   2c1b0:	mov	r3, r1
   2c1b4:	push	{r4, r5, r6, lr}
   2c1b8:	ldrh	r1, [r2, #14]
   2c1bc:	cmp	r1, #5
   2c1c0:	beq	2c1d8 <flatcc_builder_end_offset_vector_for_unions@@Base+0x2c>
   2c1c4:	ldr	r3, [pc, #64]	; 2c20c <flatcc_builder_end_offset_vector_for_unions@@Base+0x60>
   2c1c8:	ldr	r2, [pc, #64]	; 2c210 <flatcc_builder_end_offset_vector_for_unions@@Base+0x64>
   2c1cc:	ldr	r1, [pc, #64]	; 2c214 <flatcc_builder_end_offset_vector_for_unions@@Base+0x68>
   2c1d0:	ldr	r0, [pc, #64]	; 2c218 <flatcc_builder_end_offset_vector_for_unions@@Base+0x6c>
   2c1d4:	bl	14094 <__assert_fail@plt>
   2c1d8:	ldr	r2, [r2, #20]
   2c1dc:	cmn	r2, #-1073741823	; 0xc0000001
   2c1e0:	movhi	r5, #0
   2c1e4:	bhi	2c204 <flatcc_builder_end_offset_vector_for_unions@@Base+0x58>
   2c1e8:	ldr	r1, [r0, #16]
   2c1ec:	mov	r4, r0
   2c1f0:	bl	2a6e8 <flatcc_builder_default_alloc@@Base+0x4cc>
   2c1f4:	subs	r5, r0, #0
   2c1f8:	beq	2c204 <flatcc_builder_end_offset_vector_for_unions@@Base+0x58>
   2c1fc:	mov	r0, r4
   2c200:	bl	2a110 <__flatcc_fb_coerce_scalar_type@@Base+0x588>
   2c204:	mov	r0, r5
   2c208:	pop	{r4, r5, r6, pc}
   2c20c:	andeq	r9, r4, r1, ror ip
   2c210:	ldrdeq	r0, [r0], -r5
   2c214:	andeq	r9, r4, r2, lsl lr
   2c218:	andeq	r9, r4, r5, lsr #31

0002c21c <flatcc_builder_offset_vector_edit@@Base>:
   2c21c:	ldr	r0, [r0, #16]
   2c220:	bx	lr

0002c224 <flatcc_builder_offset_vector_count@@Base>:
   2c224:	ldr	r3, [r0, #32]
   2c228:	ldr	r0, [r3, #20]
   2c22c:	bx	lr

0002c230 <flatcc_builder_create_union_vector_direct@@Base>:
   2c230:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
   2c234:	mov	r4, r0
   2c238:	ldr	r5, [sp, #32]
   2c23c:	cmn	r5, #-1073741823	; 0xc0000001
   2c240:	bls	2c25c <flatcc_builder_create_union_vector_direct@@Base+0x2c>
   2c244:	mov	r3, #0
   2c248:	str	r3, [r4]
   2c24c:	str	r3, [r4, #4]
   2c250:	mov	r0, r4
   2c254:	add	sp, sp, #8
   2c258:	pop	{r4, r5, r6, r7, r8, pc}
   2c25c:	mov	r7, r1
   2c260:	mov	r8, r2
   2c264:	mov	r1, r3
   2c268:	mov	r0, r7
   2c26c:	mov	r3, r2
   2c270:	mov	r2, r5
   2c274:	bl	2a6e8 <flatcc_builder_default_alloc@@Base+0x4cc>
   2c278:	subs	r6, r0, #0
   2c27c:	beq	2c244 <flatcc_builder_create_union_vector_direct@@Base+0x14>
   2c280:	mvn	r3, #0
   2c284:	str	r3, [sp, #4]
   2c288:	mov	r3, #1
   2c28c:	str	r3, [sp]
   2c290:	mov	r2, r5
   2c294:	mov	r1, r8
   2c298:	mov	r0, r7
   2c29c:	bl	2bf70 <flatcc_builder_create_vector@@Base>
   2c2a0:	stm	r4, {r0, r6}
   2c2a4:	b	2c250 <flatcc_builder_create_union_vector_direct@@Base+0x20>

0002c2a8 <flatcc_builder_create_union_vector@@Base>:
   2c2a8:	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
   2c2ac:	mov	r7, r0
   2c2b0:	mov	r0, r1
   2c2b4:	mov	r5, r1
   2c2b8:	mov	r6, r2
   2c2bc:	mov	r8, r3
   2c2c0:	bl	2b738 <flatcc_builder_start_offset_vector@@Base>
   2c2c4:	subs	r4, r0, #0
   2c2c8:	beq	2c2e4 <flatcc_builder_create_union_vector@@Base+0x3c>
   2c2cc:	mov	r3, #0
   2c2d0:	str	r3, [r7]
   2c2d4:	str	r3, [r7, #4]
   2c2d8:	mov	r0, r7
   2c2dc:	add	sp, sp, #16
   2c2e0:	pop	{r4, r5, r6, r7, r8, pc}
   2c2e4:	mov	r1, r8
   2c2e8:	mov	r0, r5
   2c2ec:	bl	2b334 <flatcc_builder_extend_offset_vector@@Base>
   2c2f0:	cmp	r0, #0
   2c2f4:	beq	2c2cc <flatcc_builder_create_union_vector@@Base+0x24>
   2c2f8:	mov	r1, r8
   2c2fc:	mov	r0, r5
   2c300:	bl	2a0c8 <__flatcc_fb_coerce_scalar_type@@Base+0x540>
   2c304:	subs	r2, r0, #0
   2c308:	movne	ip, r6
   2c30c:	ldrne	r3, [r5, #16]
   2c310:	movne	r1, r4
   2c314:	beq	2c2cc <flatcc_builder_create_union_vector@@Base+0x24>
   2c318:	cmp	r1, r8
   2c31c:	add	ip, ip, #8
   2c320:	bne	2c350 <flatcc_builder_create_union_vector@@Base+0xa8>
   2c324:	str	r1, [sp]
   2c328:	add	r0, sp, #8
   2c32c:	mov	r1, r5
   2c330:	bl	2c230 <flatcc_builder_create_union_vector_direct@@Base>
   2c334:	ldr	r6, [sp, #8]
   2c338:	ldr	r4, [sp, #12]
   2c33c:	mov	r0, r5
   2c340:	bl	2a110 <__flatcc_fb_coerce_scalar_type@@Base+0x588>
   2c344:	str	r6, [r7]
   2c348:	str	r4, [r7, #4]
   2c34c:	b	2c2d8 <flatcc_builder_create_union_vector@@Base+0x30>
   2c350:	ldrb	r0, [ip, #-8]
   2c354:	strb	r0, [r2, r1]
   2c358:	ldr	r0, [ip, #-4]
   2c35c:	str	r0, [r3, r1, lsl #2]
   2c360:	add	r1, r1, #1
   2c364:	b	2c318 <flatcc_builder_create_union_vector@@Base+0x70>

0002c368 <flatcc_builder_start_union_vector@@Base>:
   2c368:	push	{r4, r5, r6, lr}
   2c36c:	mov	r1, #4
   2c370:	mov	r5, r0
   2c374:	bl	2a384 <flatcc_builder_default_alloc@@Base+0x168>
   2c378:	subs	r4, r0, #0
   2c37c:	mvnne	r4, #0
   2c380:	bne	2c3a8 <flatcc_builder_start_union_vector@@Base+0x40>
   2c384:	ldr	r3, [r5, #32]
   2c388:	mov	r2, #8
   2c38c:	mvn	r1, #3
   2c390:	str	r2, [r3, #16]
   2c394:	mov	r2, #7
   2c398:	str	r4, [r3, #20]
   2c39c:	strh	r2, [r3, #14]
   2c3a0:	mov	r0, r5
   2c3a4:	bl	2a048 <__flatcc_fb_coerce_scalar_type@@Base+0x4c0>
   2c3a8:	mov	r0, r4
   2c3ac:	pop	{r4, r5, r6, pc}

0002c3b0 <flatcc_builder_end_union_vector@@Base>:
   2c3b0:	ldr	r3, [r1, #32]
   2c3b4:	push	{r4, r5, r6, r7, lr}
   2c3b8:	sub	sp, sp, #20
   2c3bc:	ldrh	r2, [r3, #14]
   2c3c0:	cmp	r2, #7
   2c3c4:	beq	2c3dc <flatcc_builder_end_union_vector@@Base+0x2c>
   2c3c8:	ldr	r3, [pc, #156]	; 2c46c <flatcc_builder_end_union_vector@@Base+0xbc>
   2c3cc:	ldr	r2, [pc, #156]	; 2c470 <flatcc_builder_end_union_vector@@Base+0xc0>
   2c3d0:	ldr	r1, [pc, #156]	; 2c474 <flatcc_builder_end_union_vector@@Base+0xc4>
   2c3d4:	ldr	r0, [pc, #156]	; 2c478 <flatcc_builder_end_union_vector@@Base+0xc8>
   2c3d8:	bl	14094 <__assert_fail@plt>
   2c3dc:	ldr	r7, [r3, #20]
   2c3e0:	mov	r5, r1
   2c3e4:	mov	r4, r0
   2c3e8:	lsl	r6, r7, #2
   2c3ec:	add	r1, r6, r7
   2c3f0:	mov	r0, r5
   2c3f4:	bl	2a0c8 <__flatcc_fb_coerce_scalar_type@@Base+0x540>
   2c3f8:	subs	r3, r0, #0
   2c3fc:	streq	r3, [r4]
   2c400:	streq	r3, [r4, #4]
   2c404:	addne	r2, r3, r6
   2c408:	ldrne	r0, [r5, #16]
   2c40c:	movne	r1, #0
   2c410:	bne	2c434 <flatcc_builder_end_union_vector@@Base+0x84>
   2c414:	mov	r0, r4
   2c418:	add	sp, sp, #20
   2c41c:	pop	{r4, r5, r6, r7, pc}
   2c420:	ldrb	ip, [r0, #-8]
   2c424:	strb	ip, [r2, r1]
   2c428:	ldr	ip, [r0, #-4]
   2c42c:	str	ip, [r3, r1, lsl #2]
   2c430:	add	r1, r1, #1
   2c434:	cmp	r1, r7
   2c438:	add	r0, r0, #8
   2c43c:	bne	2c420 <flatcc_builder_end_union_vector@@Base+0x70>
   2c440:	str	r1, [sp]
   2c444:	add	r0, sp, #8
   2c448:	mov	r1, r5
   2c44c:	bl	2c230 <flatcc_builder_create_union_vector_direct@@Base>
   2c450:	ldr	r7, [sp, #8]
   2c454:	ldr	r6, [sp, #12]
   2c458:	mov	r0, r5
   2c45c:	bl	2a110 <__flatcc_fb_coerce_scalar_type@@Base+0x588>
   2c460:	str	r7, [r4]
   2c464:	str	r6, [r4, #4]
   2c468:	b	2c414 <flatcc_builder_end_union_vector@@Base+0x64>
   2c46c:	muleq	r4, sp, ip
   2c470:	andeq	r0, r0, r1, asr r6
   2c474:	andeq	r9, r4, r2, lsl lr
   2c478:	andeq	sl, r4, pc, ror #1

0002c47c <flatcc_builder_union_vector_edit@@Base>:
   2c47c:	ldr	r0, [r0, #16]
   2c480:	bx	lr

0002c484 <flatcc_builder_union_vector_count@@Base>:
   2c484:	ldr	r3, [r0, #32]
   2c488:	ldr	r0, [r3, #20]
   2c48c:	bx	lr

0002c490 <flatcc_builder_extend_union_vector@@Base>:
   2c490:	push	{r4, r5, r6, lr}
   2c494:	mvn	r2, #-536870912	; 0xe0000000
   2c498:	mov	r4, r0
   2c49c:	ldr	r0, [r0, #32]
   2c4a0:	mov	r5, r1
   2c4a4:	bl	2a694 <flatcc_builder_default_alloc@@Base+0x478>
   2c4a8:	cmp	r0, #0
   2c4ac:	bne	2c4c0 <flatcc_builder_extend_union_vector@@Base+0x30>
   2c4b0:	lsl	r1, r5, #3
   2c4b4:	mov	r0, r4
   2c4b8:	pop	{r4, r5, r6, lr}
   2c4bc:	b	2a0c8 <__flatcc_fb_coerce_scalar_type@@Base+0x540>
   2c4c0:	mov	r0, #0
   2c4c4:	pop	{r4, r5, r6, pc}

0002c4c8 <flatcc_builder_truncate_union_vector@@Base>:
   2c4c8:	ldr	r3, [r0, #32]
   2c4cc:	push	{r4, lr}
   2c4d0:	ldrh	r2, [r3, #14]
   2c4d4:	cmp	r2, #7
   2c4d8:	beq	2c4f0 <flatcc_builder_truncate_union_vector@@Base+0x28>
   2c4dc:	ldr	r3, [pc, #68]	; 2c528 <flatcc_builder_truncate_union_vector@@Base+0x60>
   2c4e0:	ldr	r2, [pc, #68]	; 2c52c <flatcc_builder_truncate_union_vector@@Base+0x64>
   2c4e4:	ldr	r1, [pc, #68]	; 2c530 <flatcc_builder_truncate_union_vector@@Base+0x68>
   2c4e8:	ldr	r0, [pc, #68]	; 2c534 <flatcc_builder_truncate_union_vector@@Base+0x6c>
   2c4ec:	bl	14094 <__assert_fail@plt>
   2c4f0:	ldr	r2, [r3, #20]
   2c4f4:	cmp	r2, r1
   2c4f8:	ldrcc	r3, [pc, #40]	; 2c528 <flatcc_builder_truncate_union_vector@@Base+0x60>
   2c4fc:	ldrcc	r2, [pc, #52]	; 2c538 <flatcc_builder_truncate_union_vector@@Base+0x70>
   2c500:	ldrcc	r1, [pc, #40]	; 2c530 <flatcc_builder_truncate_union_vector@@Base+0x68>
   2c504:	ldrcc	r0, [pc, #48]	; 2c53c <flatcc_builder_truncate_union_vector@@Base+0x74>
   2c508:	bcc	2c4ec <flatcc_builder_truncate_union_vector@@Base+0x24>
   2c50c:	sub	r2, r2, r1
   2c510:	str	r2, [r3, #20]
   2c514:	ldr	r3, [r3, #16]
   2c518:	mul	r1, r3, r1
   2c51c:	bl	2a17c <__flatcc_fb_coerce_scalar_type@@Base+0x5f4>
   2c520:	mov	r0, #0
   2c524:	pop	{r4, pc}
   2c528:			; <UNDEFINED> instruction: 0x00049cbd
   2c52c:	andeq	r0, r0, r1, lsl #13
   2c530:	andeq	r9, r4, r2, lsl lr
   2c534:	andeq	sl, r4, pc, ror #1
   2c538:	andeq	r0, r0, r2, lsl #13
   2c53c:	andeq	sl, r4, r8, lsr #32

0002c540 <flatcc_builder_union_vector_push@@Base>:
   2c540:	push	{r0, r1, r4, lr}
   2c544:	stm	sp, {r1, r2}
   2c548:	ldr	r2, [r0, #32]
   2c54c:	ldrh	r3, [r2, #14]
   2c550:	cmp	r3, #7
   2c554:	beq	2c56c <flatcc_builder_union_vector_push@@Base+0x2c>
   2c558:	ldr	r3, [pc, #72]	; 2c5a8 <flatcc_builder_union_vector_push@@Base+0x68>
   2c55c:	ldr	r2, [pc, #72]	; 2c5ac <flatcc_builder_union_vector_push@@Base+0x6c>
   2c560:	ldr	r1, [pc, #72]	; 2c5b0 <flatcc_builder_union_vector_push@@Base+0x70>
   2c564:	ldr	r0, [pc, #72]	; 2c5b4 <flatcc_builder_union_vector_push@@Base+0x74>
   2c568:	bl	14094 <__assert_fail@plt>
   2c56c:	ldr	r3, [r2, #20]
   2c570:	cmn	r3, #-536870911	; 0xe0000001
   2c574:	moveq	r3, #0
   2c578:	beq	2c59c <flatcc_builder_union_vector_push@@Base+0x5c>
   2c57c:	add	r3, r3, #1
   2c580:	mov	r1, #8
   2c584:	str	r3, [r2, #20]
   2c588:	bl	2a0c8 <__flatcc_fb_coerce_scalar_type@@Base+0x540>
   2c58c:	subs	r3, r0, #0
   2c590:	movne	r4, sp
   2c594:	ldmne	r4, {r0, r1}
   2c598:	stmne	r3, {r0, r1}
   2c59c:	mov	r0, r3
   2c5a0:	add	sp, sp, #8
   2c5a4:	pop	{r4, pc}
   2c5a8:	andeq	r9, r4, r2, ror #25
   2c5ac:	andeq	r0, r0, sp, lsl #13
   2c5b0:	andeq	r9, r4, r2, lsl lr
   2c5b4:	andeq	sl, r4, pc, ror #1

0002c5b8 <flatcc_builder_append_union_vector@@Base>:
   2c5b8:	push	{r4, r5, r6, lr}
   2c5bc:	mov	r4, r0
   2c5c0:	ldr	r0, [r0, #32]
   2c5c4:	ldrh	r3, [r0, #14]
   2c5c8:	cmp	r3, #7
   2c5cc:	beq	2c5e4 <flatcc_builder_append_union_vector@@Base+0x2c>
   2c5d0:	ldr	r3, [pc, #68]	; 2c61c <flatcc_builder_append_union_vector@@Base+0x64>
   2c5d4:	ldr	r2, [pc, #68]	; 2c620 <flatcc_builder_append_union_vector@@Base+0x68>
   2c5d8:	ldr	r1, [pc, #68]	; 2c624 <flatcc_builder_append_union_vector@@Base+0x6c>
   2c5dc:	ldr	r0, [pc, #68]	; 2c628 <flatcc_builder_append_union_vector@@Base+0x70>
   2c5e0:	bl	14094 <__assert_fail@plt>
   2c5e4:	mov	r5, r2
   2c5e8:	mov	r6, r1
   2c5ec:	mvn	r2, #-536870912	; 0xe0000000
   2c5f0:	mov	r1, r5
   2c5f4:	bl	2a694 <flatcc_builder_default_alloc@@Base+0x478>
   2c5f8:	cmp	r0, #0
   2c5fc:	bne	2c614 <flatcc_builder_append_union_vector@@Base+0x5c>
   2c600:	lsl	r2, r5, #3
   2c604:	mov	r1, r6
   2c608:	mov	r0, r4
   2c60c:	pop	{r4, r5, r6, lr}
   2c610:	b	2a19c <__flatcc_fb_coerce_scalar_type@@Base+0x614>
   2c614:	mov	r0, #0
   2c618:	pop	{r4, r5, r6, pc}
   2c61c:	andeq	r9, r4, r3, lsl #26
   2c620:	muleq	r0, ip, r6
   2c624:	andeq	r9, r4, r2, lsl lr
   2c628:	andeq	sl, r4, pc, ror #1

0002c62c <flatcc_builder_create_string@@Base>:
   2c62c:	push	{lr}		; (str lr, [sp, #-4]!)
   2c630:	sub	sp, sp, #84	; 0x54
   2c634:	ldr	r3, [r0, #136]	; 0x88
   2c638:	mov	ip, #4
   2c63c:	cmp	r2, #0
   2c640:	str	ip, [sp, #8]
   2c644:	add	lr, sp, ip
   2c648:	str	ip, [sp, #20]
   2c64c:	sub	r3, r3, r2
   2c650:	mov	ip, #1
   2c654:	str	ip, [sp, #12]
   2c658:	strne	r2, [sp, #28]
   2c65c:	addne	ip, r2, #4
   2c660:	str	r2, [sp, #4]
   2c664:	sub	r3, r3, #1
   2c668:	movne	r2, #2
   2c66c:	strne	ip, [sp, #8]
   2c670:	strne	r2, [sp, #12]
   2c674:	and	r3, r3, #3
   2c678:	ldr	r2, [sp, #8]
   2c67c:	add	r3, r3, #1
   2c680:	add	r2, r2, r3
   2c684:	str	r2, [sp, #8]
   2c688:	ldr	r2, [sp, #12]
   2c68c:	strne	r1, [sp, #24]
   2c690:	add	r2, r2, #1
   2c694:	add	r1, sp, #80	; 0x50
   2c698:	add	r1, r1, r2, lsl #3
   2c69c:	ldr	ip, [pc, #28]	; 2c6c0 <flatcc_builder_create_string@@Base+0x94>
   2c6a0:	str	lr, [sp, #16]
   2c6a4:	str	r3, [r1, #-68]	; 0xffffffbc
   2c6a8:	str	ip, [r1, #-72]	; 0xffffffb8
   2c6ac:	add	r1, sp, #8
   2c6b0:	str	r2, [sp, #12]
   2c6b4:	bl	2a614 <flatcc_builder_default_alloc@@Base+0x3f8>
   2c6b8:	add	sp, sp, #84	; 0x54
   2c6bc:	pop	{pc}		; (ldr pc, [sp], #4)
   2c6c0:	andeq	r9, r4, ip, lsr #14

0002c6c4 <flatcc_builder_create_string_str@@Base>:
   2c6c4:	push	{r4, r5, r6, lr}
   2c6c8:	mov	r5, r0
   2c6cc:	mov	r0, r1
   2c6d0:	mov	r4, r1
   2c6d4:	bl	13fc8 <strlen@plt>
   2c6d8:	mov	r1, r4
   2c6dc:	mov	r2, r0
   2c6e0:	mov	r0, r5
   2c6e4:	pop	{r4, r5, r6, lr}
   2c6e8:	b	2c62c <flatcc_builder_create_string@@Base>

0002c6ec <flatcc_builder_create_string_strn@@Base>:
   2c6ec:	push	{r4, r5, r6, lr}
   2c6f0:	mov	r4, r1
   2c6f4:	mov	r6, r0
   2c6f8:	mov	r1, #0
   2c6fc:	mov	r0, r4
   2c700:	mov	r5, r2
   2c704:	bl	14010 <memchr@plt>
   2c708:	mov	r1, r4
   2c70c:	cmp	r0, #0
   2c710:	subne	r5, r0, r4
   2c714:	mov	r2, r5
   2c718:	mov	r0, r6
   2c71c:	pop	{r4, r5, r6, lr}
   2c720:	b	2c62c <flatcc_builder_create_string@@Base>

0002c724 <flatcc_builder_end_string@@Base>:
   2c724:	ldr	r3, [r0, #32]
   2c728:	push	{r4, r5, r6, lr}
   2c72c:	ldrh	r2, [r3, #14]
   2c730:	cmp	r2, #6
   2c734:	beq	2c74c <flatcc_builder_end_string@@Base+0x28>
   2c738:	ldr	r3, [pc, #80]	; 2c790 <flatcc_builder_end_string@@Base+0x6c>
   2c73c:	ldr	r2, [pc, #80]	; 2c794 <flatcc_builder_end_string@@Base+0x70>
   2c740:	ldr	r1, [pc, #80]	; 2c798 <flatcc_builder_end_string@@Base+0x74>
   2c744:	ldr	r0, [pc, #80]	; 2c79c <flatcc_builder_end_string@@Base+0x78>
   2c748:	bl	14094 <__assert_fail@plt>
   2c74c:	ldr	r2, [r3, #20]
   2c750:	ldr	r3, [r0, #20]
   2c754:	mov	r4, r0
   2c758:	cmp	r2, r3
   2c75c:	ldrne	r3, [pc, #44]	; 2c790 <flatcc_builder_end_string@@Base+0x6c>
   2c760:	ldrne	r2, [pc, #56]	; 2c7a0 <flatcc_builder_end_string@@Base+0x7c>
   2c764:	ldrne	r1, [pc, #44]	; 2c798 <flatcc_builder_end_string@@Base+0x74>
   2c768:	ldrne	r0, [pc, #52]	; 2c7a4 <flatcc_builder_end_string@@Base+0x80>
   2c76c:	bne	2c748 <flatcc_builder_end_string@@Base+0x24>
   2c770:	ldr	r1, [r0, #16]
   2c774:	bl	2c62c <flatcc_builder_create_string@@Base>
   2c778:	subs	r5, r0, #0
   2c77c:	beq	2c788 <flatcc_builder_end_string@@Base+0x64>
   2c780:	mov	r0, r4
   2c784:	bl	2a110 <__flatcc_fb_coerce_scalar_type@@Base+0x588>
   2c788:	mov	r0, r5
   2c78c:	pop	{r4, r5, r6, pc}
   2c790:	andeq	r9, r4, r6, lsr #26
   2c794:	andeq	r0, r0, r4, asr #13
   2c798:	andeq	r9, r4, r2, lsl lr
   2c79c:	ldrdeq	r9, [r4], -r8
   2c7a0:	andeq	r0, r0, r5, asr #13
   2c7a4:	andeq	sl, r4, r1, lsr #2

0002c7a8 <flatcc_builder_string_edit@@Base>:
   2c7a8:	ldr	r0, [r0, #16]
   2c7ac:	bx	lr

0002c7b0 <flatcc_builder_string_len@@Base>:
   2c7b0:	ldr	r3, [r0, #32]
   2c7b4:	ldr	r0, [r3, #20]
   2c7b8:	bx	lr

0002c7bc <flatcc_builder_table_add@@Base>:
   2c7bc:	push	{r4, r5, r6, r7, r8, lr}
   2c7c0:	mov	r4, r0
   2c7c4:	ldr	r0, [r0, #32]
   2c7c8:	ldrh	r0, [r0, #14]
   2c7cc:	cmp	r0, #3
   2c7d0:	beq	2c7e8 <flatcc_builder_table_add@@Base+0x2c>
   2c7d4:	ldr	r3, [pc, #232]	; 2c8c4 <flatcc_builder_table_add@@Base+0x108>
   2c7d8:	ldr	r2, [pc, #232]	; 2c8c8 <flatcc_builder_table_add@@Base+0x10c>
   2c7dc:	ldr	r1, [pc, #232]	; 2c8cc <flatcc_builder_table_add@@Base+0x110>
   2c7e0:	ldr	r0, [pc, #232]	; 2c8d0 <flatcc_builder_table_add@@Base+0x114>
   2c7e4:	bl	14094 <__assert_fail@plt>
   2c7e8:	ldr	r0, [pc, #228]	; 2c8d4 <flatcc_builder_table_add@@Base+0x118>
   2c7ec:	cmp	r1, r0
   2c7f0:	ldrhi	r3, [pc, #204]	; 2c8c4 <flatcc_builder_table_add@@Base+0x108>
   2c7f4:	ldrhi	r2, [pc, #220]	; 2c8d8 <flatcc_builder_table_add@@Base+0x11c>
   2c7f8:	ldrhi	r1, [pc, #204]	; 2c8cc <flatcc_builder_table_add@@Base+0x110>
   2c7fc:	ldrhi	r0, [pc, #216]	; 2c8dc <flatcc_builder_table_add@@Base+0x120>
   2c800:	bhi	2c7e4 <flatcc_builder_table_add@@Base+0x28>
   2c804:	ldrh	r0, [r4, #130]	; 0x82
   2c808:	lsl	r7, r1, #1
   2c80c:	cmp	r0, r3
   2c810:	ldr	r0, [r4, #4]
   2c814:	strhcc	r3, [r4, #130]	; 0x82
   2c818:	ldrh	r5, [r0, r7]
   2c81c:	cmp	r5, #0
   2c820:	ldrne	r3, [pc, #156]	; 2c8c4 <flatcc_builder_table_add@@Base+0x108>
   2c824:	ldrne	r2, [pc, #180]	; 2c8e0 <flatcc_builder_table_add@@Base+0x124>
   2c828:	ldrne	r1, [pc, #156]	; 2c8cc <flatcc_builder_table_add@@Base+0x110>
   2c82c:	ldrne	r0, [pc, #176]	; 2c8e4 <flatcc_builder_table_add@@Base+0x128>
   2c830:	bne	2c7e4 <flatcc_builder_table_add@@Base+0x28>
   2c834:	ldr	ip, [r4, #12]
   2c838:	ldr	lr, [pc, #168]	; 2c8e8 <flatcc_builder_table_add@@Base+0x12c>
   2c83c:	eor	ip, ip, r1
   2c840:	ldr	r6, [r4, #20]
   2c844:	mul	ip, lr, ip
   2c848:	sub	r0, r3, #1
   2c84c:	eor	ip, ip, r2
   2c850:	rsb	r3, r3, #0
   2c854:	add	r0, r0, r6
   2c858:	and	r6, r0, r3
   2c85c:	mul	ip, lr, ip
   2c860:	ldr	r3, [r4, #24]
   2c864:	uxth	r8, r1
   2c868:	add	r1, r2, r6
   2c86c:	cmp	r1, r3
   2c870:	str	ip, [r4, #12]
   2c874:	str	r1, [r4, #20]
   2c878:	bcs	2c8a4 <flatcc_builder_table_add@@Base+0xe8>
   2c87c:	ldr	r3, [r4, #4]
   2c880:	add	r2, r6, #4
   2c884:	ldr	r0, [r4, #16]
   2c888:	strh	r2, [r3, r7]
   2c88c:	ldrh	r3, [r4, #8]
   2c890:	add	r0, r0, r6
   2c894:	cmp	r3, r8
   2c898:	addls	r1, r8, #1
   2c89c:	strhls	r1, [r4, #8]
   2c8a0:	pop	{r4, r5, r6, r7, r8, pc}
   2c8a4:	ldr	r2, [pc, #64]	; 2c8ec <flatcc_builder_table_add@@Base+0x130>
   2c8a8:	add	r1, r1, #1
   2c8ac:	mov	r0, r4
   2c8b0:	bl	2a078 <__flatcc_fb_coerce_scalar_type@@Base+0x4f0>
   2c8b4:	cmp	r0, #0
   2c8b8:	beq	2c87c <flatcc_builder_table_add@@Base+0xc0>
   2c8bc:	mov	r0, r5
   2c8c0:	pop	{r4, r5, r6, r7, r8, pc}
   2c8c4:	andeq	r9, r4, r0, asr #26
   2c8c8:	andeq	r0, r0, sp, ror #13
   2c8cc:	andeq	r9, r4, r2, lsl lr
   2c8d0:	strheq	sl, [r4], -r1
   2c8d4:	strdeq	r7, [r0], -ip
   2c8d8:	andeq	r0, r0, lr, ror #13
   2c8dc:	andeq	sl, r4, r5, asr #2
   2c8e0:	strdeq	r0, [r0], -r8
   2c8e4:	andeq	r9, r3, sp, asr #1
   2c8e8:			; <UNDEFINED> instruction: 0x9e3779b1
   2c8ec:	strdeq	pc, [r0], -ip

0002c8f0 <flatcc_builder_table_edit@@Base>:
   2c8f0:	ldr	r3, [r0, #32]
   2c8f4:	ldrh	r3, [r3, #14]
   2c8f8:	cmp	r3, #3
   2c8fc:	beq	2c918 <flatcc_builder_table_edit@@Base+0x28>
   2c900:	push	{r4, lr}
   2c904:	ldr	r3, [pc, #32]	; 2c92c <flatcc_builder_table_edit@@Base+0x3c>
   2c908:	ldr	r2, [pc, #32]	; 2c930 <flatcc_builder_table_edit@@Base+0x40>
   2c90c:	ldr	r1, [pc, #32]	; 2c934 <flatcc_builder_table_edit@@Base+0x44>
   2c910:	ldr	r0, [pc, #32]	; 2c938 <flatcc_builder_table_edit@@Base+0x48>
   2c914:	bl	14094 <__assert_fail@plt>
   2c918:	ldr	r3, [r0, #20]
   2c91c:	ldr	r0, [r0, #16]
   2c920:	sub	r1, r3, r1
   2c924:	add	r0, r0, r1
   2c928:	bx	lr
   2c92c:	andeq	r9, r4, r9, asr sp
   2c930:	andeq	r0, r0, r2, lsl #14
   2c934:	andeq	r9, r4, r2, lsl lr
   2c938:	strheq	sl, [r4], -r1

0002c93c <flatcc_builder_table_add_copy@@Base>:
   2c93c:	push	{r4, r5, r6, lr}
   2c940:	mov	r4, r3
   2c944:	mov	r6, r2
   2c948:	ldrh	r3, [sp, #16]
   2c94c:	mov	r2, r4
   2c950:	bl	2c7bc <flatcc_builder_table_add@@Base>
   2c954:	subs	r5, r0, #0
   2c958:	beq	2c968 <flatcc_builder_table_add_copy@@Base+0x2c>
   2c95c:	mov	r2, r4
   2c960:	mov	r1, r6
   2c964:	bl	13f20 <memcpy@plt>
   2c968:	mov	r0, r5
   2c96c:	pop	{r4, r5, r6, pc}

0002c970 <flatcc_builder_table_add_offset@@Base>:
   2c970:	ldr	r3, [r0, #32]
   2c974:	push	{r4, r5, r6, r7, r8, lr}
   2c978:	ldrh	r3, [r3, #14]
   2c97c:	cmp	r3, #3
   2c980:	beq	2c998 <flatcc_builder_table_add_offset@@Base+0x28>
   2c984:	ldr	r3, [pc, #228]	; 2ca70 <flatcc_builder_table_add_offset@@Base+0x100>
   2c988:	ldr	r2, [pc, #228]	; 2ca74 <flatcc_builder_table_add_offset@@Base+0x104>
   2c98c:	ldr	r1, [pc, #228]	; 2ca78 <flatcc_builder_table_add_offset@@Base+0x108>
   2c990:	ldr	r0, [pc, #228]	; 2ca7c <flatcc_builder_table_add_offset@@Base+0x10c>
   2c994:	bl	14094 <__assert_fail@plt>
   2c998:	ldr	r3, [pc, #224]	; 2ca80 <flatcc_builder_table_add_offset@@Base+0x110>
   2c99c:	cmp	r1, r3
   2c9a0:	ldrhi	r3, [pc, #200]	; 2ca70 <flatcc_builder_table_add_offset@@Base+0x100>
   2c9a4:	ldrhi	r2, [pc, #216]	; 2ca84 <flatcc_builder_table_add_offset@@Base+0x114>
   2c9a8:	ldrhi	r1, [pc, #200]	; 2ca78 <flatcc_builder_table_add_offset@@Base+0x108>
   2c9ac:	ldrhi	r0, [pc, #212]	; 2ca88 <flatcc_builder_table_add_offset@@Base+0x118>
   2c9b0:	bhi	2c994 <flatcc_builder_table_add_offset@@Base+0x24>
   2c9b4:	ldr	r3, [r0, #4]
   2c9b8:	lsl	r7, r1, #1
   2c9bc:	mov	r4, r0
   2c9c0:	ldrh	r6, [r3, r7]
   2c9c4:	cmp	r6, #0
   2c9c8:	ldrne	r3, [pc, #160]	; 2ca70 <flatcc_builder_table_add_offset@@Base+0x100>
   2c9cc:	ldrne	r2, [pc, #184]	; 2ca8c <flatcc_builder_table_add_offset@@Base+0x11c>
   2c9d0:	ldrne	r1, [pc, #160]	; 2ca78 <flatcc_builder_table_add_offset@@Base+0x108>
   2c9d4:	ldrne	r0, [pc, #180]	; 2ca90 <flatcc_builder_table_add_offset@@Base+0x120>
   2c9d8:	bne	2c994 <flatcc_builder_table_add_offset@@Base+0x24>
   2c9dc:	ldr	r3, [r0, #12]
   2c9e0:	ldr	r2, [pc, #172]	; 2ca94 <flatcc_builder_table_add_offset@@Base+0x124>
   2c9e4:	eor	r3, r3, r1
   2c9e8:	ldr	r8, [r0, #20]
   2c9ec:	mul	r3, r2, r3
   2c9f0:	add	r8, r8, #3
   2c9f4:	eor	r3, r3, #4
   2c9f8:	bic	r8, r8, #3
   2c9fc:	mul	r3, r2, r3
   2ca00:	uxth	r5, r1
   2ca04:	str	r3, [r0, #12]
   2ca08:	ldr	r3, [r0, #24]
   2ca0c:	add	r1, r8, #4
   2ca10:	cmp	r1, r3
   2ca14:	str	r1, [r0, #20]
   2ca18:	bhi	2ca58 <flatcc_builder_table_add_offset@@Base+0xe8>
   2ca1c:	ldr	r3, [r4, #4]
   2ca20:	uxth	r2, r8
   2ca24:	add	r1, r2, #4
   2ca28:	strh	r1, [r3, r7]
   2ca2c:	ldrh	r3, [r4, #8]
   2ca30:	ldr	r0, [r4, #16]
   2ca34:	cmp	r3, r5
   2ca38:	ldr	r3, [r4]
   2ca3c:	addls	r1, r5, #1
   2ca40:	strhls	r1, [r4, #8]
   2ca44:	add	r1, r3, #2
   2ca48:	str	r1, [r4]
   2ca4c:	add	r0, r0, r8
   2ca50:	strh	r2, [r3]
   2ca54:	pop	{r4, r5, r6, r7, r8, pc}
   2ca58:	ldr	r2, [pc, #56]	; 2ca98 <flatcc_builder_table_add_offset@@Base+0x128>
   2ca5c:	bl	2a078 <__flatcc_fb_coerce_scalar_type@@Base+0x4f0>
   2ca60:	cmp	r0, #0
   2ca64:	beq	2ca1c <flatcc_builder_table_add_offset@@Base+0xac>
   2ca68:	mov	r0, r6
   2ca6c:	pop	{r4, r5, r6, r7, r8, pc}
   2ca70:	andeq	r9, r4, r3, ror sp
   2ca74:	andeq	r0, r0, r3, lsl r7
   2ca78:	andeq	r9, r4, r2, lsl lr
   2ca7c:	strheq	sl, [r4], -r1
   2ca80:	strdeq	r7, [r0], -ip
   2ca84:	andeq	r0, r0, r4, lsl r7
   2ca88:	andeq	sl, r4, r5, asr #2
   2ca8c:	andeq	r0, r0, fp, lsl r7
   2ca90:	andeq	r9, r3, sp, asr #1
   2ca94:			; <UNDEFINED> instruction: 0x9e3779b1
   2ca98:	strdeq	pc, [r0], -ip

0002ca9c <flatcc_builder_table_add_union@@Base>:
   2ca9c:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   2caa0:	add	ip, sp, #8
   2caa4:	stmdb	ip, {r2, r3}
   2caa8:	ldr	r3, [r0, #32]
   2caac:	ldrb	r5, [sp]
   2cab0:	ldr	r4, [sp, #4]
   2cab4:	ldrh	r3, [r3, #14]
   2cab8:	cmp	r3, #3
   2cabc:	beq	2cad4 <flatcc_builder_table_add_union@@Base+0x38>
   2cac0:	ldr	r3, [pc, #156]	; 2cb64 <flatcc_builder_table_add_union@@Base+0xc8>
   2cac4:	ldr	r2, [pc, #156]	; 2cb68 <flatcc_builder_table_add_union@@Base+0xcc>
   2cac8:	ldr	r1, [pc, #156]	; 2cb6c <flatcc_builder_table_add_union@@Base+0xd0>
   2cacc:	ldr	r0, [pc, #156]	; 2cb70 <flatcc_builder_table_add_union@@Base+0xd4>
   2cad0:	bl	14094 <__assert_fail@plt>
   2cad4:	cmp	r5, #0
   2cad8:	mov	r6, r0
   2cadc:	mov	r7, r1
   2cae0:	bne	2cb00 <flatcc_builder_table_add_union@@Base+0x64>
   2cae4:	cmp	r4, #0
   2cae8:	beq	2cb28 <flatcc_builder_table_add_union@@Base+0x8c>
   2caec:	ldr	r3, [pc, #112]	; 2cb64 <flatcc_builder_table_add_union@@Base+0xc8>
   2caf0:	ldr	r2, [pc, #124]	; 2cb74 <flatcc_builder_table_add_union@@Base+0xd8>
   2caf4:	ldr	r1, [pc, #112]	; 2cb6c <flatcc_builder_table_add_union@@Base+0xd0>
   2caf8:	ldr	r0, [pc, #120]	; 2cb78 <flatcc_builder_table_add_union@@Base+0xdc>
   2cafc:	b	2cad0 <flatcc_builder_table_add_union@@Base+0x34>
   2cb00:	cmp	r4, #0
   2cb04:	beq	2cb28 <flatcc_builder_table_add_union@@Base+0x8c>
   2cb08:	bl	2c970 <flatcc_builder_table_add_offset@@Base>
   2cb0c:	cmp	r0, #0
   2cb10:	strne	r4, [r0]
   2cb14:	ldreq	r3, [pc, #72]	; 2cb64 <flatcc_builder_table_add_union@@Base+0xc8>
   2cb18:	ldreq	r2, [pc, #92]	; 2cb7c <flatcc_builder_table_add_union@@Base+0xe0>
   2cb1c:	ldreq	r1, [pc, #72]	; 2cb6c <flatcc_builder_table_add_union@@Base+0xd0>
   2cb20:	ldreq	r0, [pc, #88]	; 2cb80 <flatcc_builder_table_add_union@@Base+0xe4>
   2cb24:	beq	2cad0 <flatcc_builder_table_add_union@@Base+0x34>
   2cb28:	mov	r3, #1
   2cb2c:	mov	r2, r3
   2cb30:	sub	r1, r7, #1
   2cb34:	mov	r0, r6
   2cb38:	bl	2c7bc <flatcc_builder_table_add@@Base>
   2cb3c:	cmp	r0, #0
   2cb40:	ldreq	r3, [pc, #28]	; 2cb64 <flatcc_builder_table_add_union@@Base+0xc8>
   2cb44:	ldreq	r2, [pc, #56]	; 2cb84 <flatcc_builder_table_add_union@@Base+0xe8>
   2cb48:	ldreq	r1, [pc, #28]	; 2cb6c <flatcc_builder_table_add_union@@Base+0xd0>
   2cb4c:	ldreq	r0, [pc, #52]	; 2cb88 <flatcc_builder_table_add_union@@Base+0xec>
   2cb50:	beq	2cad0 <flatcc_builder_table_add_union@@Base+0x34>
   2cb54:	strb	r5, [r0]
   2cb58:	mov	r0, #0
   2cb5c:	add	sp, sp, #12
   2cb60:	pop	{r4, r5, r6, r7, pc}
   2cb64:	muleq	r4, r3, sp
   2cb68:	andeq	r0, r0, lr, ror #11
   2cb6c:	andeq	r9, r4, r2, lsl lr
   2cb70:	strheq	sl, [r4], -r1
   2cb74:	andeq	r0, r0, pc, ror #11
   2cb78:	andeq	sl, r4, r9, lsl #3
   2cb7c:	strdeq	r0, [r0], -r2
   2cb80:	andeq	sl, r4, fp, lsr #3
   2cb84:	strdeq	r0, [r0], -r6
   2cb88:			; <UNDEFINED> instruction: 0x0004a1b5

0002cb8c <flatcc_builder_table_add_union_vector@@Base>:
   2cb8c:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   2cb90:	mov	r7, r1
   2cb94:	add	r1, sp, #8
   2cb98:	stmdb	r1, {r2, r3}
   2cb9c:	ldr	r3, [r0, #32]
   2cba0:	ldm	sp, {r4, r5}
   2cba4:	ldrh	r3, [r3, #14]
   2cba8:	cmp	r3, #3
   2cbac:	beq	2cbc4 <flatcc_builder_table_add_union_vector@@Base+0x38>
   2cbb0:	ldr	r3, [pc, #176]	; 2cc68 <flatcc_builder_table_add_union_vector@@Base+0xdc>
   2cbb4:	ldr	r1, [pc, #176]	; 2cc6c <flatcc_builder_table_add_union_vector@@Base+0xe0>
   2cbb8:	ldr	r0, [pc, #176]	; 2cc70 <flatcc_builder_table_add_union_vector@@Base+0xe4>
   2cbbc:	mov	r2, #1536	; 0x600
   2cbc0:	bl	14094 <__assert_fail@plt>
   2cbc4:	clz	r3, r5
   2cbc8:	clz	r2, r4
   2cbcc:	lsr	r3, r3, #5
   2cbd0:	lsr	r2, r2, #5
   2cbd4:	cmp	r2, r3
   2cbd8:	beq	2cc04 <flatcc_builder_table_add_union_vector@@Base+0x78>
   2cbdc:	adds	r4, r4, #0
   2cbe0:	movne	r4, #1
   2cbe4:	cmp	r4, r3
   2cbe8:	mvnne	r0, #0
   2cbec:	bne	2cc60 <flatcc_builder_table_add_union_vector@@Base+0xd4>
   2cbf0:	ldr	r3, [pc, #112]	; 2cc68 <flatcc_builder_table_add_union_vector@@Base+0xdc>
   2cbf4:	ldr	r2, [pc, #120]	; 2cc74 <flatcc_builder_table_add_union_vector@@Base+0xe8>
   2cbf8:	ldr	r1, [pc, #108]	; 2cc6c <flatcc_builder_table_add_union_vector@@Base+0xe0>
   2cbfc:	ldr	r0, [pc, #116]	; 2cc78 <flatcc_builder_table_add_union_vector@@Base+0xec>
   2cc00:	b	2cbc0 <flatcc_builder_table_add_union_vector@@Base+0x34>
   2cc04:	cmp	r4, #0
   2cc08:	moveq	r0, r4
   2cc0c:	beq	2cc60 <flatcc_builder_table_add_union_vector@@Base+0xd4>
   2cc10:	sub	r1, r7, #1
   2cc14:	mov	r6, r0
   2cc18:	bl	2c970 <flatcc_builder_table_add_offset@@Base>
   2cc1c:	cmp	r0, #0
   2cc20:	bne	2cc38 <flatcc_builder_table_add_union_vector@@Base+0xac>
   2cc24:	ldr	r3, [pc, #60]	; 2cc68 <flatcc_builder_table_add_union_vector@@Base+0xdc>
   2cc28:	ldr	r2, [pc, #76]	; 2cc7c <flatcc_builder_table_add_union_vector@@Base+0xf0>
   2cc2c:	ldr	r1, [pc, #56]	; 2cc6c <flatcc_builder_table_add_union_vector@@Base+0xe0>
   2cc30:	ldr	r0, [pc, #72]	; 2cc80 <flatcc_builder_table_add_union_vector@@Base+0xf4>
   2cc34:	b	2cbc0 <flatcc_builder_table_add_union_vector@@Base+0x34>
   2cc38:	str	r4, [r0]
   2cc3c:	mov	r1, r7
   2cc40:	mov	r0, r6
   2cc44:	bl	2c970 <flatcc_builder_table_add_offset@@Base>
   2cc48:	cmp	r0, #0
   2cc4c:	strne	r5, [r0]
   2cc50:	movne	r0, #0
   2cc54:	ldreq	r3, [pc, #12]	; 2cc68 <flatcc_builder_table_add_union_vector@@Base+0xdc>
   2cc58:	ldreq	r2, [pc, #36]	; 2cc84 <flatcc_builder_table_add_union_vector@@Base+0xf8>
   2cc5c:	beq	2cc2c <flatcc_builder_table_add_union_vector@@Base+0xa0>
   2cc60:	add	sp, sp, #12
   2cc64:	pop	{r4, r5, r6, r7, pc}
   2cc68:			; <UNDEFINED> instruction: 0x00049db2
   2cc6c:	andeq	r9, r4, r2, lsl lr
   2cc70:	strheq	sl, [r4], -r1
   2cc74:	andeq	r0, r0, r1, lsl #12
   2cc78:	andeq	sl, r4, r1, asr #3
   2cc7c:	andeq	r0, r0, r4, lsl #12
   2cc80:	andeq	sl, r4, fp, lsr #3
   2cc84:	andeq	r0, r0, r8, lsl #12

0002cc88 <flatcc_builder_push_buffer_alignment@@Base>:
   2cc88:	mov	r3, r0
   2cc8c:	mov	r2, #4
   2cc90:	ldrh	r0, [r0, #128]	; 0x80
   2cc94:	strh	r2, [r3, #128]	; 0x80
   2cc98:	bx	lr

0002cc9c <flatcc_builder_pop_buffer_alignment@@Base>:
   2cc9c:	ldrh	r3, [r0, #128]	; 0x80
   2cca0:	cmp	r3, r1
   2cca4:	strhcc	r1, [r0, #128]	; 0x80
   2cca8:	bx	lr

0002ccac <flatcc_builder_get_buffer_alignment@@Base>:
   2ccac:	ldrh	r0, [r0, #128]	; 0x80
   2ccb0:	bx	lr

0002ccb4 <flatcc_builder_set_vtable_clustering@@Base>:
   2ccb4:	clz	r1, r1
   2ccb8:	lsr	r1, r1, #5
   2ccbc:	str	r1, [r0, #180]	; 0xb4
   2ccc0:	bx	lr

0002ccc4 <flatcc_builder_set_block_align@@Base>:
   2ccc4:	strh	r1, [r0, #132]	; 0x84
   2ccc8:	bx	lr

0002cccc <flatcc_builder_get_level@@Base>:
   2cccc:	ldr	r0, [r0, #156]	; 0x9c
   2ccd0:	bx	lr

0002ccd4 <flatcc_builder_set_max_level@@Base>:
   2ccd4:	ldr	r3, [r0, #160]	; 0xa0
   2ccd8:	str	r1, [r0, #176]	; 0xb0
   2ccdc:	cmp	r1, r3
   2cce0:	strgt	r1, [r0, #160]	; 0xa0
   2cce4:	bx	lr

0002cce8 <flatcc_builder_get_buffer_size@@Base>:
   2cce8:	ldr	r2, [r0, #140]	; 0x8c
   2ccec:	ldr	r0, [r0, #136]	; 0x88
   2ccf0:	sub	r0, r2, r0
   2ccf4:	bx	lr

0002ccf8 <flatcc_builder_get_buffer_start@@Base>:
   2ccf8:	ldr	r0, [r0, #136]	; 0x88
   2ccfc:	bx	lr

0002cd00 <flatcc_builder_get_buffer_end@@Base>:
   2cd00:	ldr	r0, [r0, #140]	; 0x8c
   2cd04:	bx	lr

0002cd08 <flatcc_builder_set_vtable_cache_limit@@Base>:
   2cd08:	str	r1, [r0, #172]	; 0xac
   2cd0c:	bx	lr

0002cd10 <flatcc_builder_set_identifier@@Base>:
   2cd10:	ldr	r3, [pc, #16]	; 2cd28 <flatcc_builder_set_identifier@@Base+0x18>
   2cd14:	cmp	r1, #0
   2cd18:	moveq	r1, r3
   2cd1c:	ldr	r3, [r1]
   2cd20:	str	r3, [r0, #168]	; 0xa8
   2cd24:	bx	lr
   2cd28:	andeq	r9, r4, ip, lsr #14

0002cd2c <flatcc_builder_get_type@@Base>:
   2cd2c:	ldr	r0, [r0, #32]
   2cd30:	cmp	r0, #0
   2cd34:	ldrhne	r0, [r0, #14]
   2cd38:	bx	lr

0002cd3c <flatcc_builder_get_type_at@@Base>:
   2cd3c:	cmp	r1, #0
   2cd40:	ble	2cd68 <flatcc_builder_get_type_at@@Base+0x2c>
   2cd44:	ldr	r3, [r0, #156]	; 0x9c
   2cd48:	cmp	r1, r3
   2cd4c:	bgt	2cd68 <flatcc_builder_get_type_at@@Base+0x2c>
   2cd50:	sub	r1, r1, r3
   2cd54:	mov	r2, #36	; 0x24
   2cd58:	ldr	r3, [r0, #32]
   2cd5c:	mla	r1, r2, r1, r3
   2cd60:	ldrh	r0, [r1, #14]
   2cd64:	bx	lr
   2cd68:	mov	r0, #0
   2cd6c:	bx	lr

0002cd70 <flatcc_builder_get_direct_buffer@@Base>:
   2cd70:	ldr	r3, [r0, #184]	; 0xb8
   2cd74:	cmp	r3, #0
   2cd78:	beq	2cda0 <flatcc_builder_get_direct_buffer@@Base+0x30>
   2cd7c:	ldr	r2, [r0, #188]	; 0xbc
   2cd80:	ldr	r3, [r0, #192]	; 0xc0
   2cd84:	cmp	r2, r3
   2cd88:	bne	2cda0 <flatcc_builder_get_direct_buffer@@Base+0x30>
   2cd8c:	cmp	r1, #0
   2cd90:	ldrne	r3, [r0, #212]	; 0xd4
   2cd94:	ldr	r0, [r0, #196]	; 0xc4
   2cd98:	strne	r3, [r1]
   2cd9c:	bx	lr
   2cda0:	mov	r0, #0
   2cda4:	cmp	r1, #0
   2cda8:	strne	r0, [r1]
   2cdac:	moveq	r0, r1
   2cdb0:	bx	lr

0002cdb4 <flatcc_builder_copy_buffer@@Base>:
   2cdb4:	ldr	r3, [r0, #184]	; 0xb8
   2cdb8:	cmp	r3, #0
   2cdbc:	beq	2cde8 <flatcc_builder_copy_buffer@@Base+0x34>
   2cdc0:	push	{r4, lr}
   2cdc4:	add	r0, r0, #188	; 0xbc
   2cdc8:	bl	2d3a8 <flatcc_emitter_copy_buffer@@Base>
   2cdcc:	cmp	r0, #0
   2cdd0:	popne	{r4, pc}
   2cdd4:	ldr	r3, [pc, #20]	; 2cdf0 <flatcc_builder_copy_buffer@@Base+0x3c>
   2cdd8:	ldr	r2, [pc, #20]	; 2cdf4 <flatcc_builder_copy_buffer@@Base+0x40>
   2cddc:	ldr	r1, [pc, #20]	; 2cdf8 <flatcc_builder_copy_buffer@@Base+0x44>
   2cde0:	ldr	r0, [pc, #20]	; 2cdfc <flatcc_builder_copy_buffer@@Base+0x48>
   2cde4:	bl	14094 <__assert_fail@plt>
   2cde8:	mov	r0, r3
   2cdec:	bx	lr
   2cdf0:	ldrdeq	r9, [r4], -r8
   2cdf4:	andeq	r0, r0, r6, lsl #15
   2cdf8:	andeq	r9, r4, r2, lsl lr
   2cdfc:	andeq	r9, r4, r9, lsl #30

0002ce00 <flatcc_builder_finalize_buffer@@Base>:
   2ce00:	push	{r4, r5, r6, lr}
   2ce04:	cmp	r1, #0
   2ce08:	ldr	r4, [r0, #140]	; 0x8c
   2ce0c:	ldr	r2, [r0, #136]	; 0x88
   2ce10:	mov	r5, r0
   2ce14:	sub	r4, r4, r2
   2ce18:	strne	r4, [r1]
   2ce1c:	mov	r0, r4
   2ce20:	bl	13f8c <malloc@plt>
   2ce24:	subs	r6, r0, #0
   2ce28:	bne	2ce40 <flatcc_builder_finalize_buffer@@Base+0x40>
   2ce2c:	ldr	r3, [pc, #52]	; 2ce68 <flatcc_builder_finalize_buffer@@Base+0x68>
   2ce30:	ldr	r2, [pc, #52]	; 2ce6c <flatcc_builder_finalize_buffer@@Base+0x6c>
   2ce34:	ldr	r1, [pc, #52]	; 2ce70 <flatcc_builder_finalize_buffer@@Base+0x70>
   2ce38:	ldr	r0, [pc, #52]	; 2ce74 <flatcc_builder_finalize_buffer@@Base+0x74>
   2ce3c:	bl	14094 <__assert_fail@plt>
   2ce40:	mov	r2, r4
   2ce44:	mov	r1, r6
   2ce48:	mov	r0, r5
   2ce4c:	bl	2cdb4 <flatcc_builder_copy_buffer@@Base>
   2ce50:	cmp	r0, #0
   2ce54:	ldreq	r3, [pc, #12]	; 2ce68 <flatcc_builder_finalize_buffer@@Base+0x68>
   2ce58:	ldreq	r2, [pc, #24]	; 2ce78 <flatcc_builder_finalize_buffer@@Base+0x78>
   2ce5c:	beq	2ce34 <flatcc_builder_finalize_buffer@@Base+0x34>
   2ce60:	mov	r0, r6
   2ce64:	pop	{r4, r5, r6, pc}
   2ce68:	strdeq	r9, [r4], -r3
   2ce6c:	muleq	r0, r8, r7
   2ce70:	andeq	r9, r4, r2, lsl lr
   2ce74:	andeq	r9, r3, sp, asr #1
   2ce78:	muleq	r0, ip, r7

0002ce7c <flatcc_builder_finalize_aligned_buffer@@Base>:
   2ce7c:	push	{r4, r5, r6, r7, r8, lr}
   2ce80:	mov	r6, r0
   2ce84:	ldr	r4, [r0, #140]	; 0x8c
   2ce88:	ldr	r2, [r0, #136]	; 0x88
   2ce8c:	ldrh	r0, [r0, #128]	; 0x80
   2ce90:	subs	r7, r1, #0
   2ce94:	sub	r2, r4, r2
   2ce98:	sub	r4, r0, #1
   2ce9c:	strne	r2, [r7]
   2cea0:	add	r4, r4, r2
   2cea4:	rsb	r2, r0, #0
   2cea8:	and	r4, r4, r2
   2ceac:	mov	r1, r4
   2ceb0:	bl	2a1cc <__flatcc_fb_coerce_scalar_type@@Base+0x644>
   2ceb4:	subs	r5, r0, #0
   2ceb8:	beq	2cee0 <flatcc_builder_finalize_aligned_buffer@@Base+0x64>
   2cebc:	mov	r2, r4
   2cec0:	mov	r1, r5
   2cec4:	mov	r0, r6
   2cec8:	bl	2cdb4 <flatcc_builder_copy_buffer@@Base>
   2cecc:	subs	r4, r0, #0
   2ced0:	bne	2cee0 <flatcc_builder_finalize_aligned_buffer@@Base+0x64>
   2ced4:	mov	r0, r5
   2ced8:	bl	13f14 <free@plt>
   2cedc:	mov	r5, r4
   2cee0:	cmp	r7, #0
   2cee4:	clz	r3, r5
   2cee8:	lsr	r3, r3, #5
   2ceec:	moveq	r3, #0
   2cef0:	cmp	r3, #0
   2cef4:	movne	r3, #0
   2cef8:	strne	r3, [r7]
   2cefc:	mov	r0, r5
   2cf00:	pop	{r4, r5, r6, r7, r8, pc}

0002cf04 <flatcc_builder_aligned_alloc@@Base>:
   2cf04:	b	2a1cc <__flatcc_fb_coerce_scalar_type@@Base+0x644>

0002cf08 <flatcc_builder_aligned_free@@Base>:
   2cf08:	b	13f14 <free@plt>

0002cf0c <flatcc_builder_get_emit_context@@Base>:
   2cf0c:	ldr	r0, [r0, #36]	; 0x24
   2cf10:	bx	lr

0002cf14 <flatcc_emitter_recycle_page@@Base>:
   2cf14:	ldr	r3, [r0]
   2cf18:	cmp	r3, r1
   2cf1c:	beq	2cf60 <flatcc_emitter_recycle_page@@Base+0x4c>
   2cf20:	ldr	r2, [r0, #4]
   2cf24:	cmp	r1, r2
   2cf28:	beq	2cf60 <flatcc_emitter_recycle_page@@Base+0x4c>
   2cf2c:	ldr	r2, [r1, #2944]	; 0xb80
   2cf30:	ldr	r0, [r1, #2948]	; 0xb84
   2cf34:	str	r0, [r2, #2948]	; 0xb84
   2cf38:	ldr	r0, [r1, #2948]	; 0xb84
   2cf3c:	str	r2, [r0, #2944]	; 0xb80
   2cf40:	ldr	r2, [r3, #2948]	; 0xb84
   2cf44:	str	r3, [r1, #2944]	; 0xb80
   2cf48:	str	r2, [r1, #2948]	; 0xb84
   2cf4c:	str	r1, [r2, #2944]	; 0xb80
   2cf50:	ldr	r3, [r1, #2944]	; 0xb80
   2cf54:	mov	r0, #0
   2cf58:	str	r1, [r3, #2948]	; 0xb84
   2cf5c:	bx	lr
   2cf60:	mvn	r0, #0
   2cf64:	bx	lr

0002cf68 <flatcc_emitter_reset@@Base>:
   2cf68:	ldr	r3, [r0]
   2cf6c:	cmp	r3, #0
   2cf70:	bxeq	lr
   2cf74:	add	r2, r3, #1472	; 0x5c0
   2cf78:	push	{r4, lr}
   2cf7c:	mov	r4, r0
   2cf80:	str	r2, [r0, #8]
   2cf84:	str	r2, [r0, #16]
   2cf88:	mov	r2, #1472	; 0x5c0
   2cf8c:	str	r2, [r0, #12]
   2cf90:	str	r2, [r0, #20]
   2cf94:	sub	r2, r2, #2944	; 0xb80
   2cf98:	str	r3, [r0, #4]
   2cf9c:	str	r2, [r3, #2952]	; 0xb88
   2cfa0:	ldr	r3, [r0, #32]
   2cfa4:	cmp	r3, #0
   2cfa8:	ldr	r3, [r0, #24]
   2cfac:	streq	r3, [r0, #32]
   2cfb0:	ldr	r2, [r0, #32]
   2cfb4:	lsr	r3, r3, #2
   2cfb8:	add	r2, r2, r2, lsl #1
   2cfbc:	add	r3, r3, r2, lsr #2
   2cfc0:	str	r3, [r0, #32]
   2cfc4:	mov	r3, #0
   2cfc8:	str	r3, [r0, #24]
   2cfcc:	ldr	r2, [r4, #32]
   2cfd0:	ldr	r3, [r4, #28]
   2cfd4:	cmp	r3, r2, lsl #1
   2cfd8:	popls	{r4, pc}
   2cfdc:	ldr	r3, [r4, #4]
   2cfe0:	ldr	r2, [r4]
   2cfe4:	ldr	r0, [r3, #2944]	; 0xb80
   2cfe8:	cmp	r0, r2
   2cfec:	bne	2cff4 <flatcc_emitter_reset@@Base+0x8c>
   2cff0:	pop	{r4, pc}
   2cff4:	ldr	r2, [r0, #2944]	; 0xb80
   2cff8:	str	r2, [r3, #2944]	; 0xb80
   2cffc:	ldr	r2, [r0, #2944]	; 0xb80
   2d000:	str	r3, [r2, #2948]	; 0xb84
   2d004:	bl	13f14 <free@plt>
   2d008:	ldr	r3, [r4, #28]
   2d00c:	sub	r3, r3, #2944	; 0xb80
   2d010:	str	r3, [r4, #28]
   2d014:	b	2cfcc <flatcc_emitter_reset@@Base+0x64>

0002d018 <flatcc_emitter_clear@@Base>:
   2d018:	ldr	r3, [r0]
   2d01c:	cmp	r3, #0
   2d020:	bxeq	lr
   2d024:	ldr	r2, [r3, #2948]	; 0xb84
   2d028:	push	{r4, r5, r6, lr}
   2d02c:	mov	r4, r0
   2d030:	mov	r1, #0
   2d034:	str	r1, [r2, #2944]	; 0xb80
   2d038:	ldr	r5, [r3, #2944]	; 0xb80
   2d03c:	cmp	r5, #0
   2d040:	bne	2d060 <flatcc_emitter_clear@@Base+0x48>
   2d044:	mov	r0, r3
   2d048:	bl	13f14 <free@plt>
   2d04c:	mov	r1, r5
   2d050:	mov	r0, r4
   2d054:	mov	r2, #36	; 0x24
   2d058:	pop	{r4, r5, r6, lr}
   2d05c:	b	13fec <memset@plt>
   2d060:	ldr	r0, [r5, #2948]	; 0xb84
   2d064:	bl	13f14 <free@plt>
   2d068:	mov	r3, r5
   2d06c:	b	2d038 <flatcc_emitter_clear@@Base+0x20>

0002d070 <flatcc_emitter@@Base>:
   2d070:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2d074:	mov	r4, r0
   2d078:	ldr	r0, [sp, #48]	; 0x30
   2d07c:	ldr	ip, [r4, #24]
   2d080:	cmp	r3, #0
   2d084:	add	ip, ip, r0
   2d088:	str	ip, [r4, #24]
   2d08c:	bge	2d23c <flatcc_emitter@@Base+0x1cc>
   2d090:	ldr	ip, [r4, #12]
   2d094:	cmp	r0, ip
   2d098:	bhi	2d0e0 <flatcc_emitter@@Base+0x70>
   2d09c:	ldr	r3, [r4, #8]
   2d0a0:	sub	r3, r3, r0
   2d0a4:	sub	r0, ip, r0
   2d0a8:	str	r3, [r4, #8]
   2d0ac:	str	r0, [r4, #12]
   2d0b0:	mov	r4, r1
   2d0b4:	mov	r5, r2
   2d0b8:	cmp	r5, #0
   2d0bc:	add	r4, r4, #8
   2d0c0:	beq	2d0f8 <flatcc_emitter@@Base+0x88>
   2d0c4:	ldmdb	r4, {r1, r2}
   2d0c8:	mov	r0, r3
   2d0cc:	bl	13f20 <memcpy@plt>
   2d0d0:	ldr	r2, [r4, #-4]
   2d0d4:	sub	r5, r5, #1
   2d0d8:	add	r3, r0, r2
   2d0dc:	b	2d0b8 <flatcc_emitter@@Base+0x48>
   2d0e0:	ldr	sl, [pc, #696]	; 2d3a0 <flatcc_emitter@@Base+0x330>
   2d0e4:	add	r5, r1, r2, lsl #3
   2d0e8:	sub	r6, r2, #1
   2d0ec:	mov	r9, #2944	; 0xb80
   2d0f0:	cmn	r6, #1
   2d0f4:	bne	2d100 <flatcc_emitter@@Base+0x90>
   2d0f8:	mov	r0, #0
   2d0fc:	b	2d1a4 <flatcc_emitter@@Base+0x134>
   2d100:	ldr	r7, [r5, #-4]
   2d104:	ldr	fp, [r5, #-8]
   2d108:	mov	r8, #1472	; 0x5c0
   2d10c:	add	fp, fp, r7
   2d110:	cmp	r7, #0
   2d114:	subeq	r5, r5, #8
   2d118:	subeq	r6, r6, #1
   2d11c:	beq	2d0f0 <flatcc_emitter@@Base+0x80>
   2d120:	ldr	r3, [r4, #12]
   2d124:	cmp	r3, r7
   2d128:	bcs	2d20c <flatcc_emitter@@Base+0x19c>
   2d12c:	cmp	r3, #0
   2d130:	movne	r2, r3
   2d134:	bne	2d210 <flatcc_emitter@@Base+0x1a0>
   2d138:	ldr	r3, [r4]
   2d13c:	cmp	r3, #0
   2d140:	beq	2d188 <flatcc_emitter@@Base+0x118>
   2d144:	ldr	r2, [r3, #2948]	; 0xb84
   2d148:	ldr	r1, [r4, #4]
   2d14c:	cmp	r2, r1
   2d150:	beq	2d188 <flatcc_emitter@@Base+0x118>
   2d154:	ldr	r3, [r3, #2952]	; 0xb88
   2d158:	sub	r3, r3, #2944	; 0xb80
   2d15c:	str	r3, [r2, #2952]	; 0xb88
   2d160:	str	r2, [r4]
   2d164:	ldr	r3, [r4]
   2d168:	str	r9, [r4, #12]
   2d16c:	add	r2, r3, #2944	; 0xb80
   2d170:	str	r2, [r4, #8]
   2d174:	ldr	r2, [r3, #2944]	; 0xb80
   2d178:	ldr	r2, [r2, #2952]	; 0xb88
   2d17c:	sub	r2, r2, #2944	; 0xb80
   2d180:	str	r2, [r3, #2952]	; 0xb88
   2d184:	b	2d110 <flatcc_emitter@@Base+0xa0>
   2d188:	mov	r0, sl
   2d18c:	str	r3, [sp, #4]
   2d190:	bl	13f8c <malloc@plt>
   2d194:	ldr	r3, [sp, #4]
   2d198:	cmp	r0, #0
   2d19c:	bne	2d1ac <flatcc_emitter@@Base+0x13c>
   2d1a0:	mvn	r0, #0
   2d1a4:	add	sp, sp, #12
   2d1a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2d1ac:	ldr	r2, [r4, #28]
   2d1b0:	cmp	r3, #0
   2d1b4:	add	r2, r2, #2944	; 0xb80
   2d1b8:	str	r2, [r4, #28]
   2d1bc:	beq	2d1dc <flatcc_emitter@@Base+0x16c>
   2d1c0:	ldr	r2, [r4, #4]
   2d1c4:	str	r3, [r0, #2944]	; 0xb80
   2d1c8:	str	r2, [r0, #2948]	; 0xb84
   2d1cc:	str	r0, [r3, #2948]	; 0xb84
   2d1d0:	str	r0, [r2, #2944]	; 0xb80
   2d1d4:	str	r0, [r4]
   2d1d8:	b	2d164 <flatcc_emitter@@Base+0xf4>
   2d1dc:	add	r3, r0, #1472	; 0x5c0
   2d1e0:	str	r3, [r4, #8]
   2d1e4:	str	r3, [r4, #16]
   2d1e8:	ldr	r3, [pc, #436]	; 2d3a4 <flatcc_emitter@@Base+0x334>
   2d1ec:	str	r0, [r4]
   2d1f0:	str	r0, [r4, #4]
   2d1f4:	str	r0, [r0, #2944]	; 0xb80
   2d1f8:	str	r0, [r0, #2948]	; 0xb84
   2d1fc:	str	r8, [r4, #12]
   2d200:	str	r8, [r4, #20]
   2d204:	str	r3, [r0, #2952]	; 0xb88
   2d208:	b	2d110 <flatcc_emitter@@Base+0xa0>
   2d20c:	mov	r2, r7
   2d210:	ldr	r0, [r4, #8]
   2d214:	rsb	r1, r2, #0
   2d218:	add	r0, r0, r1
   2d21c:	sub	r3, r3, r2
   2d220:	add	fp, fp, r1
   2d224:	str	r0, [r4, #8]
   2d228:	str	r3, [r4, #12]
   2d22c:	mov	r1, fp
   2d230:	sub	r7, r7, r2
   2d234:	bl	13f20 <memcpy@plt>
   2d238:	b	2d110 <flatcc_emitter@@Base+0xa0>
   2d23c:	ldr	ip, [r4, #20]
   2d240:	cmp	r0, ip
   2d244:	bls	2d280 <flatcc_emitter@@Base+0x210>
   2d248:	ldr	sl, [pc, #336]	; 2d3a0 <flatcc_emitter@@Base+0x330>
   2d24c:	mov	r6, r2
   2d250:	add	r5, r1, #8
   2d254:	mov	r9, #2944	; 0xb80
   2d258:	cmp	r6, #0
   2d25c:	beq	2d0f8 <flatcc_emitter@@Base+0x88>
   2d260:	ldr	r7, [r5, #-4]
   2d264:	ldr	fp, [r5, #-8]
   2d268:	mov	r8, #1472	; 0x5c0
   2d26c:	cmp	r7, #0
   2d270:	bne	2d298 <flatcc_emitter@@Base+0x228>
   2d274:	sub	r6, r6, #1
   2d278:	add	r5, r5, #8
   2d27c:	b	2d258 <flatcc_emitter@@Base+0x1e8>
   2d280:	ldr	r3, [r4, #16]
   2d284:	add	lr, r3, r0
   2d288:	sub	r0, ip, r0
   2d28c:	str	lr, [r4, #16]
   2d290:	str	r0, [r4, #20]
   2d294:	b	2d0b0 <flatcc_emitter@@Base+0x40>
   2d298:	ldr	r3, [r4, #20]
   2d29c:	cmp	r3, r7
   2d2a0:	bcs	2d360 <flatcc_emitter@@Base+0x2f0>
   2d2a4:	cmp	r3, #0
   2d2a8:	bne	2d364 <flatcc_emitter@@Base+0x2f4>
   2d2ac:	ldr	r3, [r4, #4]
   2d2b0:	cmp	r3, #0
   2d2b4:	beq	2d2cc <flatcc_emitter@@Base+0x25c>
   2d2b8:	ldr	r2, [r3, #2944]	; 0xb80
   2d2bc:	ldr	r1, [r4]
   2d2c0:	cmp	r2, r1
   2d2c4:	strne	r2, [r4, #4]
   2d2c8:	bne	2d310 <flatcc_emitter@@Base+0x2a0>
   2d2cc:	mov	r0, sl
   2d2d0:	str	r3, [sp, #4]
   2d2d4:	bl	13f8c <malloc@plt>
   2d2d8:	cmp	r0, #0
   2d2dc:	beq	2d1a0 <flatcc_emitter@@Base+0x130>
   2d2e0:	ldr	r2, [r4, #28]
   2d2e4:	ldr	r3, [sp, #4]
   2d2e8:	add	r2, r2, #2944	; 0xb80
   2d2ec:	cmp	r3, #0
   2d2f0:	str	r2, [r4, #28]
   2d2f4:	beq	2d330 <flatcc_emitter@@Base+0x2c0>
   2d2f8:	ldr	r2, [r4]
   2d2fc:	str	r3, [r0, #2948]	; 0xb84
   2d300:	str	r2, [r0, #2944]	; 0xb80
   2d304:	str	r0, [r2, #2948]	; 0xb84
   2d308:	str	r0, [r3, #2944]	; 0xb80
   2d30c:	str	r0, [r4, #4]
   2d310:	ldr	r3, [r4, #4]
   2d314:	str	r9, [r4, #20]
   2d318:	str	r3, [r4, #16]
   2d31c:	ldr	r2, [r3, #2948]	; 0xb84
   2d320:	ldr	r2, [r2, #2952]	; 0xb88
   2d324:	add	r2, r2, #2944	; 0xb80
   2d328:	str	r2, [r3, #2952]	; 0xb88
   2d32c:	b	2d26c <flatcc_emitter@@Base+0x1fc>
   2d330:	add	r3, r0, #1472	; 0x5c0
   2d334:	str	r3, [r4, #8]
   2d338:	str	r3, [r4, #16]
   2d33c:	ldr	r3, [pc, #96]	; 2d3a4 <flatcc_emitter@@Base+0x334>
   2d340:	str	r0, [r4]
   2d344:	str	r0, [r4, #4]
   2d348:	str	r0, [r0, #2944]	; 0xb80
   2d34c:	str	r0, [r0, #2948]	; 0xb84
   2d350:	str	r8, [r4, #12]
   2d354:	str	r8, [r4, #20]
   2d358:	str	r3, [r0, #2952]	; 0xb88
   2d35c:	b	2d26c <flatcc_emitter@@Base+0x1fc>
   2d360:	mov	r3, r7
   2d364:	mov	r2, r3
   2d368:	mov	r1, fp
   2d36c:	ldr	r0, [r4, #16]
   2d370:	str	r3, [sp, #4]
   2d374:	bl	13f20 <memcpy@plt>
   2d378:	ldr	r3, [sp, #4]
   2d37c:	ldr	r2, [r4, #16]
   2d380:	sub	r7, r7, r3
   2d384:	add	r2, r2, r3
   2d388:	str	r2, [r4, #16]
   2d38c:	ldr	r2, [r4, #20]
   2d390:	add	fp, fp, r3
   2d394:	sub	r3, r2, r3
   2d398:	str	r3, [r4, #20]
   2d39c:	b	2d26c <flatcc_emitter@@Base+0x1fc>
   2d3a0:	andeq	r0, r0, ip, lsl #23
   2d3a4:			; <UNDEFINED> instruction: 0xfffffa40

0002d3a8 <flatcc_emitter_copy_buffer@@Base>:
   2d3a8:	push	{r4, r5, r6, lr}
   2d3ac:	mov	r4, r0
   2d3b0:	ldr	r0, [r0, #24]
   2d3b4:	cmp	r0, r2
   2d3b8:	movhi	r3, #0
   2d3bc:	bhi	2d430 <flatcc_emitter_copy_buffer@@Base+0x88>
   2d3c0:	ldr	r2, [r4]
   2d3c4:	cmp	r2, #0
   2d3c8:	moveq	r3, r2
   2d3cc:	beq	2d430 <flatcc_emitter_copy_buffer@@Base+0x88>
   2d3d0:	mov	r3, r1
   2d3d4:	ldr	r1, [r4, #4]
   2d3d8:	cmp	r2, r1
   2d3dc:	moveq	r2, r0
   2d3e0:	ldr	r1, [r4, #8]
   2d3e4:	beq	2d424 <flatcc_emitter_copy_buffer@@Base+0x7c>
   2d3e8:	ldr	r5, [r4, #12]
   2d3ec:	mov	r0, r3
   2d3f0:	rsb	r5, r5, #2944	; 0xb80
   2d3f4:	mov	r2, r5
   2d3f8:	bl	13f20 <memcpy@plt>
   2d3fc:	ldr	r2, [r4]
   2d400:	mov	r6, #2944	; 0xb80
   2d404:	add	r3, r0, r5
   2d408:	ldr	r5, [r2, #2944]	; 0xb80
   2d40c:	ldr	r2, [r4, #4]
   2d410:	cmp	r5, r2
   2d414:	bne	2d438 <flatcc_emitter_copy_buffer@@Base+0x90>
   2d418:	ldr	r2, [r4, #20]
   2d41c:	mov	r1, r5
   2d420:	rsb	r2, r2, #2944	; 0xb80
   2d424:	mov	r0, r3
   2d428:	bl	13f20 <memcpy@plt>
   2d42c:	mov	r3, r0
   2d430:	mov	r0, r3
   2d434:	pop	{r4, r5, r6, pc}
   2d438:	mov	r1, r5
   2d43c:	mov	r0, r3
   2d440:	mov	r2, r6
   2d444:	bl	13f20 <memcpy@plt>
   2d448:	ldr	r5, [r5, #2944]	; 0xb80
   2d44c:	add	r3, r0, #2944	; 0xb80
   2d450:	b	2d40c <flatcc_emitter_copy_buffer@@Base+0x64>
   2d454:	andeq	r0, r0, r0
   2d458:	ldrb	r3, [r0, #1]
   2d45c:	ldrb	r2, [r0]
   2d460:	ldrb	r1, [r0, #5]
   2d464:	ldrb	ip, [r0, #3]
   2d468:	orr	r2, r2, r3, lsl #8
   2d46c:	ldrb	r3, [r0, #2]
   2d470:	orr	r2, r2, r3, lsl #16
   2d474:	ldrb	r3, [r0, #4]
   2d478:	orr	r3, r3, r1, lsl #8
   2d47c:	ldrb	r1, [r0, #6]
   2d480:	orr	r3, r3, r1, lsl #16
   2d484:	ldrb	r1, [r0, #7]
   2d488:	orr	r0, r2, ip, lsl #24
   2d48c:	orr	r1, r3, r1, lsl #24
   2d490:	bx	lr

0002d494 <cmetrohash64_1@@Base>:
   2d494:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2d498:	mov	sl, r0
   2d49c:	sub	sp, sp, #84	; 0x54
   2d4a0:	add	fp, r0, r2
   2d4a4:	add	r1, pc, #876	; 0x36c
   2d4a8:	ldrd	r0, [r1]
   2d4ac:	ldr	r4, [pc, #888]	; 2d82c <cmetrohash64_1@@Base+0x398>
   2d4b0:	ldr	ip, [sp, #120]	; 0x78
   2d4b4:	adds	r0, r0, r2
   2d4b8:	adc	r1, r1, r3
   2d4bc:	umlal	r0, r1, r4, ip
   2d4c0:	cmp	r3, #0
   2d4c4:	cmpeq	r2, #31
   2d4c8:	strd	r0, [sp, #16]
   2d4cc:	strd	r0, [sp, #72]	; 0x48
   2d4d0:	bls	2d780 <cmetrohash64_1@@Base+0x2ec>
   2d4d4:	mov	r3, r1
   2d4d8:	mov	r2, r0
   2d4dc:	ldr	r5, [pc, #836]	; 2d828 <cmetrohash64_1@@Base+0x394>
   2d4e0:	ldr	r9, [pc, #824]	; 2d820 <cmetrohash64_1@@Base+0x38c>
   2d4e4:	ldr	r8, [pc, #824]	; 2d824 <cmetrohash64_1@@Base+0x390>
   2d4e8:	mov	r6, r0
   2d4ec:	mov	r7, r1
   2d4f0:	strd	r2, [sp, #24]
   2d4f4:	strd	r2, [sp, #8]
   2d4f8:	strd	r2, [sp]
   2d4fc:	sub	r3, fp, #32
   2d500:	str	r3, [sp, #68]	; 0x44
   2d504:	mov	r0, sl
   2d508:	bl	2d458 <flatcc_emitter_copy_buffer@@Base+0xb0>
   2d50c:	umull	r2, r3, r0, r4
   2d510:	mla	r3, r4, r1, r3
   2d514:	ldrd	r0, [sp]
   2d518:	adds	r0, r0, r2
   2d51c:	adc	r1, r1, r3
   2d520:	mov	r3, r1
   2d524:	lsr	r1, r0, #29
   2d528:	orr	r1, r1, r3, lsl #3
   2d52c:	lsr	r3, r3, #29
   2d530:	orr	r3, r3, r0, lsl #3
   2d534:	str	r1, [sp, #32]
   2d538:	str	r3, [sp, #36]	; 0x24
   2d53c:	ldrd	r2, [sp, #32]
   2d540:	add	r0, sl, #8
   2d544:	adds	r2, r2, r6
   2d548:	adc	r3, r3, r7
   2d54c:	strd	r2, [sp]
   2d550:	bl	2d458 <flatcc_emitter_copy_buffer@@Base+0xb0>
   2d554:	umull	r2, r3, r0, r5
   2d558:	mla	r3, r5, r1, r3
   2d55c:	ldrd	r0, [sp, #8]
   2d560:	adds	r0, r0, r2
   2d564:	adc	r1, r1, r3
   2d568:	lsr	r3, r0, #29
   2d56c:	orr	r3, r3, r1, lsl #3
   2d570:	str	r3, [sp, #40]	; 0x28
   2d574:	lsr	r3, r1, #29
   2d578:	orr	r3, r3, r0, lsl #3
   2d57c:	str	r3, [sp, #44]	; 0x2c
   2d580:	ldrd	r0, [sp, #24]
   2d584:	ldrd	r2, [sp, #40]	; 0x28
   2d588:	adds	r2, r2, r0
   2d58c:	adc	r3, r3, r1
   2d590:	add	r0, sl, #16
   2d594:	strd	r2, [sp, #8]
   2d598:	bl	2d458 <flatcc_emitter_copy_buffer@@Base+0xb0>
   2d59c:	umull	r2, r3, r0, r9
   2d5a0:	mla	r3, r9, r1, r3
   2d5a4:	adds	r6, r6, r2
   2d5a8:	adc	r7, r7, r3
   2d5ac:	lsr	r3, r6, #29
   2d5b0:	orr	r3, r3, r7, lsl #3
   2d5b4:	str	r3, [sp, #48]	; 0x30
   2d5b8:	lsr	r3, r7, #29
   2d5bc:	orr	r3, r3, r6, lsl #3
   2d5c0:	str	r3, [sp, #52]	; 0x34
   2d5c4:	ldrd	r6, [sp, #48]	; 0x30
   2d5c8:	ldrd	r2, [sp]
   2d5cc:	add	r0, sl, #24
   2d5d0:	add	sl, sl, #32
   2d5d4:	adds	r6, r6, r2
   2d5d8:	adc	r7, r7, r3
   2d5dc:	bl	2d458 <flatcc_emitter_copy_buffer@@Base+0xb0>
   2d5e0:	umull	r2, r3, r0, r8
   2d5e4:	mla	r3, r8, r1, r3
   2d5e8:	ldrd	r0, [sp, #24]
   2d5ec:	adds	r0, r0, r2
   2d5f0:	adc	r1, r1, r3
   2d5f4:	lsr	r3, r0, #29
   2d5f8:	orr	r3, r3, r1, lsl #3
   2d5fc:	str	r3, [sp, #56]	; 0x38
   2d600:	lsr	r3, r1, #29
   2d604:	orr	r3, r3, r0, lsl #3
   2d608:	str	r3, [sp, #60]	; 0x3c
   2d60c:	ldrd	r2, [sp, #56]	; 0x38
   2d610:	ldrd	r0, [sp, #8]
   2d614:	adds	r2, r2, r0
   2d618:	adc	r3, r3, r1
   2d61c:	strd	r2, [sp, #24]
   2d620:	ldr	r3, [sp, #68]	; 0x44
   2d624:	cmp	sl, r3
   2d628:	bls	2d504 <cmetrohash64_1@@Base+0x70>
   2d62c:	ldrd	r2, [sp, #24]
   2d630:	ldrd	r0, [sp]
   2d634:	adds	r0, r0, r2
   2d638:	adc	r1, r1, r3
   2d63c:	umull	r2, r3, r0, r4
   2d640:	mla	r3, r4, r1, r3
   2d644:	ldrd	r0, [sp, #8]
   2d648:	adds	r0, r0, r2
   2d64c:	adc	r1, r1, r3
   2d650:	mov	r3, r1
   2d654:	lsl	r8, r0, #31
   2d658:	orr	r8, r8, r3, lsr #1
   2d65c:	lsl	r1, r1, #31
   2d660:	umull	r8, r9, r8, r5
   2d664:	orr	r1, r1, r0, lsr #1
   2d668:	eor	r8, r8, r6
   2d66c:	mla	r9, r5, r1, r9
   2d670:	ldrd	r0, [sp, #8]
   2d674:	eor	r9, r9, r7
   2d678:	adds	r0, r0, r8
   2d67c:	adc	r1, r1, r9
   2d680:	umull	r2, r3, r0, r5
   2d684:	mla	r3, r5, r1, r3
   2d688:	ldrd	r0, [sp]
   2d68c:	adds	r0, r0, r2
   2d690:	adc	r1, r1, r3
   2d694:	mov	r3, r1
   2d698:	lsl	r6, r0, #31
   2d69c:	orr	r6, r6, r3, lsr #1
   2d6a0:	lsl	r1, r1, #31
   2d6a4:	umull	r6, r7, r6, r4
   2d6a8:	ldrd	r2, [sp, #24]
   2d6ac:	orr	r1, r1, r0, lsr #1
   2d6b0:	mla	r7, r4, r1, r7
   2d6b4:	ldrd	r0, [sp]
   2d6b8:	eor	r2, r2, r6
   2d6bc:	eor	r3, r3, r7
   2d6c0:	adds	r0, r0, r8
   2d6c4:	mov	r7, r3
   2d6c8:	mov	r6, r2
   2d6cc:	umull	r2, r3, r0, r4
   2d6d0:	adc	r1, r1, r9
   2d6d4:	adds	r2, r2, r6
   2d6d8:	mla	r3, r4, r1, r3
   2d6dc:	ldrd	r0, [sp, #8]
   2d6e0:	adc	r3, r3, r7
   2d6e4:	lsl	ip, r3, #31
   2d6e8:	orr	ip, ip, r2, lsr #1
   2d6ec:	lsl	r2, r2, #31
   2d6f0:	orr	r2, r2, r3, lsr #1
   2d6f4:	umull	r2, r3, r2, r5
   2d6f8:	strd	r2, [sp, #24]
   2d6fc:	ldr	r3, [sp, #28]
   2d700:	mla	r3, r5, ip, r3
   2d704:	str	r3, [sp, #28]
   2d708:	ldrd	r2, [sp]
   2d70c:	eor	r2, r2, r0
   2d710:	eor	r3, r3, r1
   2d714:	ldrd	r0, [sp, #24]
   2d718:	eor	r0, r0, r2
   2d71c:	eor	r1, r1, r3
   2d720:	mov	r2, r0
   2d724:	mov	r3, r1
   2d728:	ldrd	r0, [sp, #8]
   2d72c:	adds	r0, r0, r6
   2d730:	adc	r1, r1, r7
   2d734:	mov	r7, r1
   2d738:	umull	r0, r1, r0, r5
   2d73c:	mla	r1, r5, r7, r1
   2d740:	adds	r0, r0, r8
   2d744:	adc	r1, r1, r9
   2d748:	lsl	ip, r1, #31
   2d74c:	orr	ip, ip, r0, lsr #1
   2d750:	lsl	r0, r0, #31
   2d754:	orr	r0, r0, r1, lsr #1
   2d758:	umull	r0, r1, r0, r4
   2d75c:	mla	r1, r4, ip, r1
   2d760:	eor	r2, r2, r0
   2d764:	eor	r3, r3, r1
   2d768:	ldrd	r0, [sp, #16]
   2d76c:	adds	r0, r0, r2
   2d770:	adc	r1, r1, r3
   2d774:	mov	r2, r0
   2d778:	mov	r3, r1
   2d77c:	strd	r2, [sp, #72]	; 0x48
   2d780:	sub	r3, fp, sl
   2d784:	cmp	r3, #15
   2d788:	ble	2d884 <cmetrohash64_1@@Base+0x3f0>
   2d78c:	mov	r0, sl
   2d790:	bl	2d458 <flatcc_emitter_copy_buffer@@Base+0xb0>
   2d794:	ldr	r6, [pc, #144]	; 2d82c <cmetrohash64_1@@Base+0x398>
   2d798:	ldrd	r8, [sp, #72]	; 0x48
   2d79c:	ldr	r7, [pc, #132]	; 2d828 <cmetrohash64_1@@Base+0x394>
   2d7a0:	umull	r2, r3, r0, r6
   2d7a4:	mla	r3, r6, r1, r3
   2d7a8:	adds	r0, r2, r8
   2d7ac:	adc	r1, r3, r9
   2d7b0:	lsl	r4, r0, #31
   2d7b4:	orr	r4, r4, r1, lsr #1
   2d7b8:	lsl	r3, r1, #31
   2d7bc:	umull	r4, r5, r4, r7
   2d7c0:	orr	r3, r3, r0, lsr #1
   2d7c4:	add	r0, sl, #8
   2d7c8:	mla	r5, r7, r3, r5
   2d7cc:	bl	2d458 <flatcc_emitter_copy_buffer@@Base+0xb0>
   2d7d0:	add	sl, sl, #16
   2d7d4:	umull	r2, r3, r0, r7
   2d7d8:	mla	r3, r7, r1, r3
   2d7dc:	adds	r0, r2, r8
   2d7e0:	adc	r1, r3, r9
   2d7e4:	lsl	r2, r0, #31
   2d7e8:	lsl	ip, r1, #31
   2d7ec:	orr	r2, r2, r1, lsr #1
   2d7f0:	ldr	r1, [pc, #40]	; 2d820 <cmetrohash64_1@@Base+0x38c>
   2d7f4:	orr	ip, ip, r0, lsr #1
   2d7f8:	umull	r2, r3, r2, r1
   2d7fc:	mla	r3, r1, ip, r3
   2d800:	umull	r0, r1, r4, r6
   2d804:	mla	r1, r6, r5, r1
   2d808:	lsl	ip, r1, #29
   2d80c:	orr	r7, ip, r0, lsr #3
   2d810:	lsl	r0, r0, #29
   2d814:	b	2d830 <cmetrohash64_1@@Base+0x39c>
   2d818:	svcge	0x00065edb
   2d81c:	rscvs	r5, r2, fp, lsr sp
   2d820:	blvc	ff7dd914 <__bss_end__@@Base+0xff782818>
   2d824:	svccs	0x005870a5
   2d828:			; <UNDEFINED> instruction: 0x8648dbdb
   2d82c:	ldmdagt	sl!, {r0, r5, r6, r7, r8, ip, pc}
   2d830:	orr	r6, r0, r1, lsr #3
   2d834:	adds	r0, r6, r2
   2d838:	ldr	ip, [pc, #-28]	; 2d824 <cmetrohash64_1@@Base+0x390>
   2d83c:	adc	r1, r7, r3
   2d840:	strd	r0, [sp]
   2d844:	umull	r0, r1, r2, ip
   2d848:	mla	r1, ip, r3, r1
   2d84c:	lsl	ip, r1, #29
   2d850:	orr	r7, ip, r0, lsr #3
   2d854:	lsl	r0, r0, #29
   2d858:	orr	r6, r0, r1, lsr #3
   2d85c:	ldrd	r0, [sp]
   2d860:	eor	r0, r0, r4
   2d864:	adds	r4, r0, r6
   2d868:	eor	r1, r1, r5
   2d86c:	adc	r5, r1, r7
   2d870:	eor	r4, r4, r2
   2d874:	adds	r8, r8, r4
   2d878:	eor	r5, r5, r3
   2d87c:	adc	r9, r9, r5
   2d880:	strd	r8, [sp, #72]	; 0x48
   2d884:	sub	r3, fp, sl
   2d888:	cmp	r3, #7
   2d88c:	ble	2d8dc <cmetrohash64_1@@Base+0x448>
   2d890:	mov	r0, sl
   2d894:	bl	2d458 <flatcc_emitter_copy_buffer@@Base+0xb0>
   2d898:	ldr	r3, [pc, #-124]	; 2d824 <cmetrohash64_1@@Base+0x390>
   2d89c:	ldr	lr, [pc, #-124]	; 2d828 <cmetrohash64_1@@Base+0x394>
   2d8a0:	add	sl, sl, #8
   2d8a4:	umull	r4, r5, r0, r3
   2d8a8:	mla	r5, r3, r1, r5
   2d8ac:	ldrd	r2, [sp, #72]	; 0x48
   2d8b0:	adds	r4, r4, r2
   2d8b4:	adc	r5, r5, r3
   2d8b8:	lsl	r2, r4, #31
   2d8bc:	orr	r2, r2, r5, lsr #1
   2d8c0:	lsl	ip, r5, #31
   2d8c4:	umull	r2, r3, r2, lr
   2d8c8:	orr	ip, ip, r4, lsr #1
   2d8cc:	eor	r2, r2, r4
   2d8d0:	mla	r3, lr, ip, r3
   2d8d4:	eor	r3, r3, r5
   2d8d8:	strd	r2, [sp, #72]	; 0x48
   2d8dc:	sub	r3, fp, sl
   2d8e0:	cmp	r3, #3
   2d8e4:	ble	2d928 <cmetrohash64_1@@Base+0x494>
   2d8e8:	ldr	r0, [sl], #4
   2d8ec:	ldrd	r2, [sp, #72]	; 0x48
   2d8f0:	ldr	r1, [pc, #-212]	; 2d824 <cmetrohash64_1@@Base+0x390>
   2d8f4:	ldr	lr, [pc, #-212]	; 2d828 <cmetrohash64_1@@Base+0x394>
   2d8f8:	umlal	r2, r3, r1, r0
   2d8fc:	mov	r0, r2
   2d900:	lsr	r2, r2, #15
   2d904:	orr	r2, r2, r3, lsl #17
   2d908:	mov	r1, r3
   2d90c:	lsr	ip, r3, #15
   2d910:	umull	r2, r3, r2, lr
   2d914:	orr	ip, ip, r0, lsl #17
   2d918:	eor	r2, r2, r0
   2d91c:	mla	r3, lr, ip, r3
   2d920:	eor	r3, r3, r1
   2d924:	strd	r2, [sp, #72]	; 0x48
   2d928:	sub	r3, fp, sl
   2d92c:	cmp	r3, #1
   2d930:	ble	2d974 <cmetrohash64_1@@Base+0x4e0>
   2d934:	ldrh	r0, [sl], #2
   2d938:	ldrd	r2, [sp, #72]	; 0x48
   2d93c:	ldr	r1, [pc, #-288]	; 2d824 <cmetrohash64_1@@Base+0x390>
   2d940:	ldr	lr, [pc, #-288]	; 2d828 <cmetrohash64_1@@Base+0x394>
   2d944:	umlal	r2, r3, r1, r0
   2d948:	mov	r0, r2
   2d94c:	lsr	r2, r2, #13
   2d950:	orr	r2, r2, r3, lsl #19
   2d954:	mov	r1, r3
   2d958:	lsr	ip, r3, #13
   2d95c:	umull	r2, r3, r2, lr
   2d960:	orr	ip, ip, r0, lsl #19
   2d964:	eor	r2, r2, r0
   2d968:	mla	r3, lr, ip, r3
   2d96c:	eor	r3, r3, r1
   2d970:	strd	r2, [sp, #72]	; 0x48
   2d974:	sub	fp, fp, sl
   2d978:	cmp	fp, #0
   2d97c:	ble	2d9c0 <cmetrohash64_1@@Base+0x52c>
   2d980:	ldrb	r2, [sl]
   2d984:	ldr	r0, [pc, #-360]	; 2d824 <cmetrohash64_1@@Base+0x390>
   2d988:	ldr	lr, [pc, #-360]	; 2d828 <cmetrohash64_1@@Base+0x394>
   2d98c:	umull	r2, r3, r2, r0
   2d990:	ldrd	r0, [sp, #72]	; 0x48
   2d994:	adds	r0, r0, r2
   2d998:	adc	r1, r1, r3
   2d99c:	lsr	r2, r0, #25
   2d9a0:	orr	r2, r2, r1, lsl #7
   2d9a4:	lsr	ip, r1, #25
   2d9a8:	umull	r2, r3, r2, lr
   2d9ac:	orr	ip, ip, r0, lsl #7
   2d9b0:	eor	r2, r2, r0
   2d9b4:	mla	r3, lr, ip, r3
   2d9b8:	eor	r3, r3, r1
   2d9bc:	strd	r2, [sp, #72]	; 0x48
   2d9c0:	ldrd	r0, [sp, #72]	; 0x48
   2d9c4:	lsl	ip, r1, #31
   2d9c8:	orr	r3, ip, r0, lsr #1
   2d9cc:	lsl	ip, r0, #31
   2d9d0:	orr	r2, ip, r1, lsr #1
   2d9d4:	ldr	ip, [pc, #-432]	; 2d82c <cmetrohash64_1@@Base+0x398>
   2d9d8:	eor	r2, r2, r0
   2d9dc:	eor	r3, r3, r1
   2d9e0:	umull	r0, r1, r2, ip
   2d9e4:	mla	r1, ip, r3, r1
   2d9e8:	lsl	ip, r1, #31
   2d9ec:	orr	r3, ip, r0, lsr #1
   2d9f0:	lsl	ip, r0, #31
   2d9f4:	orr	r2, ip, r1, lsr #1
   2d9f8:	eor	r0, r0, r2
   2d9fc:	eor	r1, r1, r3
   2da00:	add	r3, sp, #80	; 0x50
   2da04:	strd	r0, [r3, #-8]!
   2da08:	ldm	r3!, {r0, r1}
   2da0c:	ldr	r3, [sp, #124]	; 0x7c
   2da10:	str	r0, [r3]
   2da14:	str	r1, [r3, #4]
   2da18:	add	sp, sp, #84	; 0x54
   2da1c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0002da20 <cmetrohash64_2@@Base>:
   2da20:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2da24:	sub	sp, sp, #84	; 0x54
   2da28:	add	r7, pc, #864	; 0x360
   2da2c:	ldrd	r6, [r7]
   2da30:	ldr	r1, [sp, #120]	; 0x78
   2da34:	ldr	r4, [pc, #872]	; 2dda4 <cmetrohash64_2@@Base+0x384>
   2da38:	adds	r6, r6, r2
   2da3c:	adc	r7, r7, r3
   2da40:	umlal	r6, r7, r4, r1
   2da44:	mov	r9, r0
   2da48:	add	r8, r0, r2
   2da4c:	mov	r1, r7
   2da50:	mov	r0, r6
   2da54:	cmp	r3, #0
   2da58:	cmpeq	r2, #31
   2da5c:	strd	r6, [sp, #16]
   2da60:	strd	r0, [sp, #72]	; 0x48
   2da64:	bls	2dd10 <cmetrohash64_2@@Base+0x2f0>
   2da68:	mov	r3, r7
   2da6c:	mov	r2, r6
   2da70:	mov	sl, r6
   2da74:	mov	fp, r7
   2da78:	ldr	r5, [pc, #800]	; 2dda0 <cmetrohash64_2@@Base+0x380>
   2da7c:	ldr	r6, [pc, #788]	; 2dd98 <cmetrohash64_2@@Base+0x378>
   2da80:	ldr	r7, [pc, #788]	; 2dd9c <cmetrohash64_2@@Base+0x37c>
   2da84:	strd	r2, [sp, #24]
   2da88:	strd	r2, [sp, #8]
   2da8c:	strd	r2, [sp]
   2da90:	sub	r3, r8, #32
   2da94:	str	r3, [sp, #68]	; 0x44
   2da98:	mov	r0, r9
   2da9c:	bl	2d458 <flatcc_emitter_copy_buffer@@Base+0xb0>
   2daa0:	umull	r2, r3, r0, r4
   2daa4:	mla	r3, r4, r1, r3
   2daa8:	ldrd	r0, [sp]
   2daac:	adds	r0, r0, r2
   2dab0:	adc	r1, r1, r3
   2dab4:	mov	r3, r1
   2dab8:	lsr	r1, r0, #29
   2dabc:	orr	r1, r1, r3, lsl #3
   2dac0:	lsr	r3, r3, #29
   2dac4:	orr	r3, r3, r0, lsl #3
   2dac8:	str	r1, [sp, #32]
   2dacc:	str	r3, [sp, #36]	; 0x24
   2dad0:	ldrd	r2, [sp, #32]
   2dad4:	add	r0, r9, #8
   2dad8:	adds	r2, r2, sl
   2dadc:	adc	r3, r3, fp
   2dae0:	strd	r2, [sp]
   2dae4:	bl	2d458 <flatcc_emitter_copy_buffer@@Base+0xb0>
   2dae8:	umull	r2, r3, r0, r5
   2daec:	mla	r3, r5, r1, r3
   2daf0:	ldrd	r0, [sp, #8]
   2daf4:	adds	r0, r0, r2
   2daf8:	adc	r1, r1, r3
   2dafc:	lsr	r3, r0, #29
   2db00:	orr	r3, r3, r1, lsl #3
   2db04:	str	r3, [sp, #40]	; 0x28
   2db08:	lsr	r3, r1, #29
   2db0c:	orr	r3, r3, r0, lsl #3
   2db10:	str	r3, [sp, #44]	; 0x2c
   2db14:	ldrd	r0, [sp, #24]
   2db18:	ldrd	r2, [sp, #40]	; 0x28
   2db1c:	adds	r2, r2, r0
   2db20:	adc	r3, r3, r1
   2db24:	add	r0, r9, #16
   2db28:	strd	r2, [sp, #8]
   2db2c:	bl	2d458 <flatcc_emitter_copy_buffer@@Base+0xb0>
   2db30:	umull	r2, r3, r0, r6
   2db34:	mla	r3, r6, r1, r3
   2db38:	adds	sl, sl, r2
   2db3c:	adc	fp, fp, r3
   2db40:	lsr	r3, sl, #29
   2db44:	orr	r3, r3, fp, lsl #3
   2db48:	str	r3, [sp, #48]	; 0x30
   2db4c:	lsr	r3, fp, #29
   2db50:	orr	r3, r3, sl, lsl #3
   2db54:	str	r3, [sp, #52]	; 0x34
   2db58:	ldrd	sl, [sp, #48]	; 0x30
   2db5c:	ldrd	r2, [sp]
   2db60:	add	r0, r9, #24
   2db64:	add	r9, r9, #32
   2db68:	adds	sl, sl, r2
   2db6c:	adc	fp, fp, r3
   2db70:	bl	2d458 <flatcc_emitter_copy_buffer@@Base+0xb0>
   2db74:	umull	r2, r3, r0, r7
   2db78:	mla	r3, r7, r1, r3
   2db7c:	ldrd	r0, [sp, #24]
   2db80:	adds	r0, r0, r2
   2db84:	adc	r1, r1, r3
   2db88:	lsr	r3, r0, #29
   2db8c:	orr	r3, r3, r1, lsl #3
   2db90:	str	r3, [sp, #56]	; 0x38
   2db94:	lsr	r3, r1, #29
   2db98:	orr	r3, r3, r0, lsl #3
   2db9c:	str	r3, [sp, #60]	; 0x3c
   2dba0:	ldrd	r2, [sp, #56]	; 0x38
   2dba4:	ldrd	r0, [sp, #8]
   2dba8:	adds	r2, r2, r0
   2dbac:	adc	r3, r3, r1
   2dbb0:	strd	r2, [sp, #24]
   2dbb4:	ldr	r3, [sp, #68]	; 0x44
   2dbb8:	cmp	r9, r3
   2dbbc:	bls	2da98 <cmetrohash64_2@@Base+0x78>
   2dbc0:	ldrd	r2, [sp, #24]
   2dbc4:	ldrd	r0, [sp]
   2dbc8:	adds	r0, r0, r2
   2dbcc:	adc	r1, r1, r3
   2dbd0:	umull	r2, r3, r0, r4
   2dbd4:	mla	r3, r4, r1, r3
   2dbd8:	ldrd	r0, [sp, #8]
   2dbdc:	adds	r0, r0, r2
   2dbe0:	adc	r1, r1, r3
   2dbe4:	mov	r2, r0
   2dbe8:	lsr	r0, r0, #30
   2dbec:	orr	r0, r0, r1, lsl #2
   2dbf0:	lsr	r3, r1, #30
   2dbf4:	umull	r0, r1, r0, r5
   2dbf8:	orr	r2, r3, r2, lsl #2
   2dbfc:	eor	sl, sl, r0
   2dc00:	mla	r1, r5, r2, r1
   2dc04:	eor	fp, fp, r1
   2dc08:	ldrd	r0, [sp, #8]
   2dc0c:	adds	r0, r0, sl
   2dc10:	adc	r1, r1, fp
   2dc14:	umull	r2, r3, r0, r5
   2dc18:	mla	r3, r5, r1, r3
   2dc1c:	ldrd	r0, [sp]
   2dc20:	adds	r0, r0, r2
   2dc24:	adc	r1, r1, r3
   2dc28:	lsr	r6, r0, #30
   2dc2c:	orr	r6, r6, r1, lsl #2
   2dc30:	lsr	r3, r1, #30
   2dc34:	umull	r6, r7, r6, r4
   2dc38:	orr	r2, r3, r0, lsl #2
   2dc3c:	ldrd	r0, [sp]
   2dc40:	mla	r7, r4, r2, r7
   2dc44:	ldrd	r2, [sp, #24]
   2dc48:	adds	r0, r0, sl
   2dc4c:	adc	r1, r1, fp
   2dc50:	eor	r2, r2, r6
   2dc54:	eor	r3, r3, r7
   2dc58:	mov	r6, r2
   2dc5c:	mov	r7, r3
   2dc60:	umull	r2, r3, r0, r4
   2dc64:	mla	r3, r4, r1, r3
   2dc68:	adds	r2, r2, r6
   2dc6c:	adc	r3, r3, r7
   2dc70:	lsr	r0, r2, #30
   2dc74:	orr	r0, r0, r3, lsl #2
   2dc78:	lsr	r3, r3, #30
   2dc7c:	umull	r0, r1, r0, r5
   2dc80:	orr	r3, r3, r2, lsl #2
   2dc84:	strd	r0, [sp, #24]
   2dc88:	ldr	r2, [sp, #28]
   2dc8c:	ldrd	r0, [sp, #8]
   2dc90:	mla	r3, r5, r3, r2
   2dc94:	str	r3, [sp, #28]
   2dc98:	ldrd	r2, [sp]
   2dc9c:	eor	r2, r2, r0
   2dca0:	eor	r3, r3, r1
   2dca4:	ldrd	r0, [sp, #24]
   2dca8:	eor	r0, r0, r2
   2dcac:	eor	r1, r1, r3
   2dcb0:	mov	r2, r0
   2dcb4:	mov	r3, r1
   2dcb8:	ldrd	r0, [sp, #8]
   2dcbc:	adds	r0, r0, r6
   2dcc0:	adc	r1, r1, r7
   2dcc4:	mov	r7, r1
   2dcc8:	umull	r0, r1, r0, r5
   2dccc:	mla	r1, r5, r7, r1
   2dcd0:	adds	r0, r0, sl
   2dcd4:	adc	r1, r1, fp
   2dcd8:	lsr	r6, r0, #30
   2dcdc:	orr	r6, r6, r1, lsl #2
   2dce0:	lsr	sl, r1, #30
   2dce4:	umull	r6, r7, r6, r4
   2dce8:	orr	r0, sl, r0, lsl #2
   2dcec:	eor	r2, r2, r6
   2dcf0:	mla	r7, r4, r0, r7
   2dcf4:	ldrd	r0, [sp, #16]
   2dcf8:	eor	r3, r3, r7
   2dcfc:	adds	r0, r0, r2
   2dd00:	adc	r1, r1, r3
   2dd04:	mov	r2, r0
   2dd08:	mov	r3, r1
   2dd0c:	strd	r2, [sp, #72]	; 0x48
   2dd10:	sub	r3, r8, r9
   2dd14:	cmp	r3, #15
   2dd18:	ble	2de2c <cmetrohash64_2@@Base+0x40c>
   2dd1c:	mov	r0, r9
   2dd20:	bl	2d458 <flatcc_emitter_copy_buffer@@Base+0xb0>
   2dd24:	ldr	r7, [pc, #108]	; 2dd98 <cmetrohash64_2@@Base+0x378>
   2dd28:	ldrd	r2, [sp, #72]	; 0x48
   2dd2c:	ldr	r6, [pc, #104]	; 2dd9c <cmetrohash64_2@@Base+0x37c>
   2dd30:	strd	r2, [sp]
   2dd34:	umull	r2, r3, r0, r7
   2dd38:	mla	r3, r7, r1, r3
   2dd3c:	ldrd	r0, [sp]
   2dd40:	adds	r0, r0, r2
   2dd44:	adc	r1, r1, r3
   2dd48:	lsr	r4, r0, #29
   2dd4c:	orr	r4, r4, r1, lsl #3
   2dd50:	lsr	r3, r1, #29
   2dd54:	umull	r4, r5, r4, r6
   2dd58:	orr	r0, r3, r0, lsl #3
   2dd5c:	mla	r5, r6, r0, r5
   2dd60:	add	r0, r9, #8
   2dd64:	bl	2d458 <flatcc_emitter_copy_buffer@@Base+0xb0>
   2dd68:	ldr	ip, [pc, #52]	; 2dda4 <cmetrohash64_2@@Base+0x384>
   2dd6c:	add	r9, r9, #16
   2dd70:	umull	r2, r3, r0, r7
   2dd74:	mla	r3, r7, r1, r3
   2dd78:	ldrd	r0, [sp]
   2dd7c:	adds	r0, r0, r2
   2dd80:	adc	r1, r1, r3
   2dd84:	lsr	r2, r0, #29
   2dd88:	orr	r2, r2, r1, lsl #3
   2dd8c:	b	2dda8 <cmetrohash64_2@@Base+0x388>
   2dd90:	blle	ff960c6c <__bss_end__@@Base+0xff905b70>
   2dd94:	adcspl	r3, ip, #-134217725	; 0xf8000003
   2dd98:	addsvs	r2, r9, #772	; 0x304
   2dd9c:	adcscc	r5, ip, r9, lsr #22
   2dda0:	adcge	r0, sl, #-335544320	; 0xec000000
   2dda4:			; <UNDEFINED> instruction: 0xd6d018f5
   2dda8:	lsr	r3, r1, #29
   2ddac:	orr	r0, r3, r0, lsl #3
   2ddb0:	umull	r2, r3, r2, r6
   2ddb4:	mla	r3, r6, r0, r3
   2ddb8:	umull	r0, r1, r4, ip
   2ddbc:	mla	r1, ip, r5, r1
   2ddc0:	lsl	ip, r1, #30
   2ddc4:	orr	ip, ip, r0, lsr #2
   2ddc8:	lsl	r0, r0, #30
   2ddcc:	orr	r1, r0, r1, lsr #2
   2ddd0:	mov	sl, r1
   2ddd4:	adds	r0, sl, r2
   2ddd8:	adc	r1, ip, r3
   2dddc:	mov	sl, r0
   2dde0:	mov	fp, r1
   2dde4:	umull	r0, r1, r2, r6
   2dde8:	mla	r1, r6, r3, r1
   2ddec:	lsl	ip, r1, #30
   2ddf0:	orr	r7, ip, r0, lsr #2
   2ddf4:	lsl	r0, r0, #30
   2ddf8:	orr	r6, r0, r1, lsr #2
   2ddfc:	mov	r0, sl
   2de00:	mov	r1, fp
   2de04:	eor	r0, r0, r4
   2de08:	ldrd	sl, [sp]
   2de0c:	adds	r0, r0, r6
   2de10:	eor	r1, r1, r5
   2de14:	adc	r1, r1, r7
   2de18:	eor	r2, r2, r0
   2de1c:	adds	sl, sl, r2
   2de20:	eor	r3, r3, r1
   2de24:	adc	fp, fp, r3
   2de28:	strd	sl, [sp, #72]	; 0x48
   2de2c:	sub	r3, r8, r9
   2de30:	cmp	r3, #7
   2de34:	ble	2de84 <cmetrohash64_2@@Base+0x464>
   2de38:	mov	r0, r9
   2de3c:	bl	2d458 <flatcc_emitter_copy_buffer@@Base+0xb0>
   2de40:	ldr	r3, [pc, #-172]	; 2dd9c <cmetrohash64_2@@Base+0x37c>
   2de44:	ldr	lr, [pc, #-172]	; 2dda0 <cmetrohash64_2@@Base+0x380>
   2de48:	add	r9, r9, #8
   2de4c:	umull	r4, r5, r0, r3
   2de50:	mla	r5, r3, r1, r5
   2de54:	ldrd	r2, [sp, #72]	; 0x48
   2de58:	adds	r4, r4, r2
   2de5c:	adc	r5, r5, r3
   2de60:	lsl	r2, r4, #28
   2de64:	orr	r2, r2, r5, lsr #4
   2de68:	lsl	ip, r5, #28
   2de6c:	umull	r2, r3, r2, lr
   2de70:	orr	ip, ip, r4, lsr #4
   2de74:	eor	r2, r2, r4
   2de78:	mla	r3, lr, ip, r3
   2de7c:	eor	r3, r3, r5
   2de80:	strd	r2, [sp, #72]	; 0x48
   2de84:	sub	r3, r8, r9
   2de88:	cmp	r3, #3
   2de8c:	ble	2ded0 <cmetrohash64_2@@Base+0x4b0>
   2de90:	ldr	r0, [r9], #4
   2de94:	ldrd	r2, [sp, #72]	; 0x48
   2de98:	ldr	r1, [pc, #-260]	; 2dd9c <cmetrohash64_2@@Base+0x37c>
   2de9c:	ldr	lr, [pc, #-260]	; 2dda0 <cmetrohash64_2@@Base+0x380>
   2dea0:	umlal	r2, r3, r1, r0
   2dea4:	mov	r0, r2
   2dea8:	lsr	r2, r2, #15
   2deac:	orr	r2, r2, r3, lsl #17
   2deb0:	mov	r1, r3
   2deb4:	lsr	ip, r3, #15
   2deb8:	umull	r2, r3, r2, lr
   2debc:	orr	ip, ip, r0, lsl #17
   2dec0:	eor	r2, r2, r0
   2dec4:	mla	r3, lr, ip, r3
   2dec8:	eor	r3, r3, r1
   2decc:	strd	r2, [sp, #72]	; 0x48
   2ded0:	sub	r3, r8, r9
   2ded4:	cmp	r3, #1
   2ded8:	ble	2df1c <cmetrohash64_2@@Base+0x4fc>
   2dedc:	ldrh	r0, [r9], #2
   2dee0:	ldrd	r2, [sp, #72]	; 0x48
   2dee4:	ldr	r1, [pc, #-336]	; 2dd9c <cmetrohash64_2@@Base+0x37c>
   2dee8:	ldr	lr, [pc, #-336]	; 2dda0 <cmetrohash64_2@@Base+0x380>
   2deec:	umlal	r2, r3, r1, r0
   2def0:	mov	r0, r2
   2def4:	lsr	r2, r2, #15
   2def8:	orr	r2, r2, r3, lsl #17
   2defc:	mov	r1, r3
   2df00:	lsr	ip, r3, #15
   2df04:	umull	r2, r3, r2, lr
   2df08:	orr	ip, ip, r0, lsl #17
   2df0c:	eor	r2, r2, r0
   2df10:	mla	r3, lr, ip, r3
   2df14:	eor	r3, r3, r1
   2df18:	strd	r2, [sp, #72]	; 0x48
   2df1c:	sub	r3, r8, r9
   2df20:	cmp	r3, #0
   2df24:	ble	2df68 <cmetrohash64_2@@Base+0x548>
   2df28:	ldrb	r2, [r9]
   2df2c:	ldr	r0, [pc, #-408]	; 2dd9c <cmetrohash64_2@@Base+0x37c>
   2df30:	ldr	lr, [pc, #-408]	; 2dda0 <cmetrohash64_2@@Base+0x380>
   2df34:	umull	r2, r3, r2, r0
   2df38:	ldrd	r0, [sp, #72]	; 0x48
   2df3c:	adds	r0, r0, r2
   2df40:	adc	r1, r1, r3
   2df44:	lsr	r2, r0, #23
   2df48:	orr	r2, r2, r1, lsl #9
   2df4c:	lsr	ip, r1, #23
   2df50:	umull	r2, r3, r2, lr
   2df54:	orr	ip, ip, r0, lsl #9
   2df58:	eor	r2, r2, r0
   2df5c:	mla	r3, lr, ip, r3
   2df60:	eor	r3, r3, r1
   2df64:	strd	r2, [sp, #72]	; 0x48
   2df68:	ldrd	r0, [sp, #72]	; 0x48
   2df6c:	lsr	ip, r0, #28
   2df70:	orr	r2, ip, r1, lsl #4
   2df74:	lsr	ip, r1, #28
   2df78:	orr	r3, ip, r0, lsl #4
   2df7c:	ldr	ip, [pc, #-480]	; 2dda4 <cmetrohash64_2@@Base+0x384>
   2df80:	eor	r2, r2, r0
   2df84:	eor	r3, r3, r1
   2df88:	umull	r0, r1, r2, ip
   2df8c:	mla	r1, ip, r3, r1
   2df90:	lsr	ip, r0, #29
   2df94:	orr	r2, ip, r1, lsl #3
   2df98:	lsr	ip, r1, #29
   2df9c:	orr	r3, ip, r0, lsl #3
   2dfa0:	eor	r1, r1, r3
   2dfa4:	eor	r0, r0, r2
   2dfa8:	add	r3, sp, #80	; 0x50
   2dfac:	strd	r0, [r3, #-8]!
   2dfb0:	ldm	r3!, {r0, r1}
   2dfb4:	ldr	r3, [sp, #124]	; 0x7c
   2dfb8:	str	r0, [r3]
   2dfbc:	str	r1, [r3, #4]
   2dfc0:	add	sp, sp, #84	; 0x54
   2dfc4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2dfc8:	push	{r4, r5, r6, r7, r8, lr}
   2dfcc:	mov	r5, r0
   2dfd0:	ldr	r6, [r0]
   2dfd4:	mov	r7, r1
   2dfd8:	mov	r8, r2
   2dfdc:	mov	r4, #0
   2dfe0:	ldr	r3, [r5, #12]
   2dfe4:	cmp	r4, r3
   2dfe8:	bcc	2dff0 <cmetrohash64_2@@Base+0x5d0>
   2dfec:	pop	{r4, r5, r6, r7, r8, pc}
   2dff0:	ldr	r1, [r6, r4, lsl #2]
   2dff4:	cmp	r1, #0
   2dff8:	cmpne	r1, #2
   2dffc:	beq	2e008 <cmetrohash64_2@@Base+0x5e8>
   2e000:	mov	r0, r8
   2e004:	blx	r7
   2e008:	add	r4, r4, #1
   2e00c:	b	2dfe0 <cmetrohash64_2@@Base+0x5c0>
   2e010:	push	{r4, lr}
   2e014:	mov	r4, r0
   2e018:	ldr	r0, [r0]
   2e01c:	cmp	r0, #0
   2e020:	beq	2e028 <cmetrohash64_2@@Base+0x608>
   2e024:	bl	13f14 <free@plt>
   2e028:	mov	r0, r4
   2e02c:	mov	r2, #16
   2e030:	mov	r1, #0
   2e034:	pop	{r4, lr}
   2e038:	b	13fec <memset@plt>
   2e03c:	push	{r0, r1, r2, r3, r4, lr}
   2e040:	add	r3, sp, #8
   2e044:	str	r3, [sp, #4]
   2e048:	ldr	r3, [pc, #24]	; 2e068 <cmetrohash64_2@@Base+0x648>
   2e04c:	mov	r2, r1
   2e050:	str	r3, [sp]
   2e054:	mov	r3, #0
   2e058:	bl	2d494 <cmetrohash64_1@@Base>
   2e05c:	ldr	r0, [sp, #8]
   2e060:	add	sp, sp, #20
   2e064:	pop	{pc}		; (ldr pc, [sp], #4)
   2e068:	svccs	0x00693b52
   2e06c:	ldr	ip, [r2, #12]
   2e070:	cmp	ip, r1
   2e074:	bne	2e098 <cmetrohash64_2@@Base+0x678>
   2e078:	mov	r3, r2
   2e07c:	push	{r4, lr}
   2e080:	mov	r2, ip
   2e084:	ldr	r1, [r3, #8]
   2e088:	bl	13f38 <memcmp@plt>
   2e08c:	clz	r0, r0
   2e090:	lsr	r0, r0, #5
   2e094:	pop	{r4, pc}
   2e098:	mov	r0, #0
   2e09c:	bx	lr
   2e0a0:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2e0a4:	subs	r8, r3, #0
   2e0a8:	str	r1, [sp]
   2e0ac:	bne	2e0c4 <cmetrohash64_2@@Base+0x6a4>
   2e0b0:	ldr	r3, [pc, #372]	; 2e22c <cmetrohash64_2@@Base+0x80c>
   2e0b4:	ldr	r1, [pc, #372]	; 2e230 <cmetrohash64_2@@Base+0x810>
   2e0b8:	ldr	r0, [pc, #372]	; 2e234 <cmetrohash64_2@@Base+0x814>
   2e0bc:	mov	r2, #114	; 0x72
   2e0c0:	bl	14094 <__assert_fail@plt>
   2e0c4:	cmp	r8, #2
   2e0c8:	ldreq	r3, [pc, #348]	; 2e22c <cmetrohash64_2@@Base+0x80c>
   2e0cc:	moveq	r2, #115	; 0x73
   2e0d0:	ldreq	r1, [pc, #344]	; 2e230 <cmetrohash64_2@@Base+0x810>
   2e0d4:	ldreq	r0, [pc, #348]	; 2e238 <cmetrohash64_2@@Base+0x818>
   2e0d8:	beq	2e0c0 <cmetrohash64_2@@Base+0x6a0>
   2e0dc:	cmp	r8, #1
   2e0e0:	ldreq	r3, [pc, #324]	; 2e22c <cmetrohash64_2@@Base+0x80c>
   2e0e4:	moveq	r2, #116	; 0x74
   2e0e8:	ldreq	r1, [pc, #320]	; 2e230 <cmetrohash64_2@@Base+0x810>
   2e0ec:	ldreq	r0, [pc, #328]	; 2e23c <cmetrohash64_2@@Base+0x81c>
   2e0f0:	beq	2e0c0 <cmetrohash64_2@@Base+0x6a0>
   2e0f4:	mov	fp, r2
   2e0f8:	ldr	r2, [r0, #12]
   2e0fc:	mov	r3, #179	; 0xb3
   2e100:	ldr	r1, [r0, #8]
   2e104:	mul	r3, r3, r2
   2e108:	mov	r6, r0
   2e10c:	cmp	r1, r3, lsr #8
   2e110:	bcc	2e140 <cmetrohash64_2@@Base+0x720>
   2e114:	lsl	r1, r1, #1
   2e118:	bl	2e24c <cmetrohash64_2@@Base+0x82c>
   2e11c:	cmp	r0, #0
   2e120:	beq	2e140 <cmetrohash64_2@@Base+0x720>
   2e124:	ldr	r3, [pc, #276]	; 2e240 <cmetrohash64_2@@Base+0x820>
   2e128:	ldr	r2, [pc, #276]	; 2e244 <cmetrohash64_2@@Base+0x824>
   2e12c:	ldr	r1, [pc, #276]	; 2e248 <cmetrohash64_2@@Base+0x828>
   2e130:	ldr	r0, [r3]
   2e134:	bl	13fd4 <fprintf@plt>
   2e138:	mov	r0, #1
   2e13c:	bl	13fbc <exit@plt>
   2e140:	mov	r1, fp
   2e144:	ldr	r0, [sp]
   2e148:	ldr	r9, [r6, #12]
   2e14c:	ldr	sl, [r6]
   2e150:	bl	2e03c <cmetrohash64_2@@Base+0x61c>
   2e154:	ldr	r3, [sp, #48]	; 0x30
   2e158:	sub	r9, r9, #1
   2e15c:	sub	r3, r3, #2
   2e160:	cmp	r3, #1
   2e164:	movhi	r7, #0
   2e168:	ldrls	r3, [r6, #8]
   2e16c:	addls	r3, r3, #1
   2e170:	strls	r3, [r6, #8]
   2e174:	and	r2, r9, r0
   2e178:	add	r4, r0, #1
   2e17c:	bls	2e1b4 <cmetrohash64_2@@Base+0x794>
   2e180:	ldr	r5, [sl, r2, lsl #2]
   2e184:	add	r3, sl, r2, lsl #2
   2e188:	cmp	r5, #0
   2e18c:	bne	2e1d8 <cmetrohash64_2@@Base+0x7b8>
   2e190:	cmp	r7, #0
   2e194:	moveq	r7, r3
   2e198:	ldr	r3, [r6, #8]
   2e19c:	add	r3, r3, #1
   2e1a0:	str	r3, [r6, #8]
   2e1a4:	str	r8, [r7]
   2e1a8:	b	2e220 <cmetrohash64_2@@Base+0x800>
   2e1ac:	and	r2, r4, r9
   2e1b0:	add	r4, r4, #1
   2e1b4:	ldr	r5, [sl, r2, lsl #2]
   2e1b8:	add	r3, sl, r2, lsl #2
   2e1bc:	cmp	r5, #0
   2e1c0:	cmpne	r5, #2
   2e1c4:	movne	r5, #1
   2e1c8:	moveq	r5, #0
   2e1cc:	bne	2e1ac <cmetrohash64_2@@Base+0x78c>
   2e1d0:	str	r8, [r3]
   2e1d4:	b	2e220 <cmetrohash64_2@@Base+0x800>
   2e1d8:	cmp	r5, #2
   2e1dc:	bne	2e1f4 <cmetrohash64_2@@Base+0x7d4>
   2e1e0:	cmp	r7, #0
   2e1e4:	moveq	r7, r3
   2e1e8:	and	r2, r9, r4
   2e1ec:	add	r4, r4, #1
   2e1f0:	b	2e180 <cmetrohash64_2@@Base+0x760>
   2e1f4:	mov	r2, r5
   2e1f8:	mov	r1, fp
   2e1fc:	ldr	r0, [sp]
   2e200:	str	r3, [sp, #4]
   2e204:	bl	2e06c <cmetrohash64_2@@Base+0x64c>
   2e208:	ldr	r3, [sp, #4]
   2e20c:	cmp	r0, #0
   2e210:	beq	2e1e8 <cmetrohash64_2@@Base+0x7c8>
   2e214:	ldr	r2, [sp, #48]	; 0x30
   2e218:	cmp	r2, #0
   2e21c:	beq	2e1d0 <cmetrohash64_2@@Base+0x7b0>
   2e220:	mov	r0, r5
   2e224:	add	sp, sp, #12
   2e228:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2e22c:	andeq	sl, r4, ip, ror #3
   2e230:	andeq	r6, r4, r0, lsr lr
   2e234:	andeq	r6, r4, r0, lsl #29
   2e238:	muleq	r4, r7, lr
   2e23c:	andeq	r6, r4, lr, lsr #29
   2e240:	strheq	fp, [r5], -r0
   2e244:	andeq	r6, r4, r3, asr #29
   2e248:	strdeq	r6, [r4], -r6	; <UNPREDICTABLE>
   2e24c:	ldr	r3, [r0, #8]
   2e250:	push	{r4, r5, r6, r7, lr}
   2e254:	cmp	r1, r3
   2e258:	ldr	r7, [r0]
   2e25c:	sub	sp, sp, #28
   2e260:	mov	r4, r0
   2e264:	movcc	r1, r3
   2e268:	mov	r6, #4
   2e26c:	mov	r2, #179	; 0xb3
   2e270:	mul	r3, r2, r6
   2e274:	cmp	r1, r3, lsr #8
   2e278:	bhi	2e2f4 <cmetrohash64_2@@Base+0x8d4>
   2e27c:	mov	r1, #4
   2e280:	mov	r0, r6
   2e284:	bl	13ee4 <calloc@plt>
   2e288:	cmp	r0, #0
   2e28c:	str	r0, [sp, #8]
   2e290:	mvneq	r0, #0
   2e294:	beq	2e2ec <cmetrohash64_2@@Base+0x8cc>
   2e298:	str	r6, [sp, #20]
   2e29c:	mov	r6, #3
   2e2a0:	mov	r5, #0
   2e2a4:	str	r5, [sp, #12]
   2e2a8:	str	r5, [sp, #16]
   2e2ac:	ldr	r3, [r4, #12]
   2e2b0:	cmp	r5, r3
   2e2b4:	bcc	2e2fc <cmetrohash64_2@@Base+0x8dc>
   2e2b8:	mov	r0, r4
   2e2bc:	bl	2e010 <cmetrohash64_2@@Base+0x5f0>
   2e2c0:	add	r2, sp, #8
   2e2c4:	add	ip, sp, #24
   2e2c8:	mov	r3, r2
   2e2cc:	add	r4, r4, #8
   2e2d0:	ldm	r3!, {r0, r1}
   2e2d4:	cmp	r3, ip
   2e2d8:	str	r0, [r4, #-8]
   2e2dc:	str	r1, [r4, #-4]
   2e2e0:	mov	r2, r3
   2e2e4:	bne	2e2c8 <cmetrohash64_2@@Base+0x8a8>
   2e2e8:	mov	r0, #0
   2e2ec:	add	sp, sp, #28
   2e2f0:	pop	{r4, r5, r6, r7, pc}
   2e2f4:	lsl	r6, r6, #1
   2e2f8:	b	2e270 <cmetrohash64_2@@Base+0x850>
   2e2fc:	ldr	r3, [r7, r5, lsl #2]
   2e300:	cmp	r3, #0
   2e304:	cmpne	r3, #2
   2e308:	beq	2e320 <cmetrohash64_2@@Base+0x900>
   2e30c:	str	r6, [sp]
   2e310:	add	r0, sp, #8
   2e314:	ldr	r2, [r3, #12]
   2e318:	ldr	r1, [r3, #8]
   2e31c:	bl	2e0a0 <cmetrohash64_2@@Base+0x680>
   2e320:	add	r5, r5, #1
   2e324:	b	2e2ac <cmetrohash64_2@@Base+0x88c>
   2e328:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2e32c:	ldr	r9, [r0]
   2e330:	cmp	r9, #0
   2e334:	bne	2e344 <cmetrohash64_2@@Base+0x924>
   2e338:	mov	r5, #0
   2e33c:	mov	r0, r5
   2e340:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2e344:	mov	r7, r1
   2e348:	ldr	r6, [r0, #12]
   2e34c:	mov	r1, r2
   2e350:	mov	r0, r7
   2e354:	mov	r8, r2
   2e358:	bl	2e03c <cmetrohash64_2@@Base+0x61c>
   2e35c:	sub	r6, r6, #1
   2e360:	and	r3, r6, r0
   2e364:	add	r4, r0, #1
   2e368:	ldr	r5, [r9, r3, lsl #2]
   2e36c:	cmp	r5, #0
   2e370:	beq	2e338 <cmetrohash64_2@@Base+0x918>
   2e374:	cmp	r5, #2
   2e378:	beq	2e394 <cmetrohash64_2@@Base+0x974>
   2e37c:	mov	r2, r5
   2e380:	mov	r1, r8
   2e384:	mov	r0, r7
   2e388:	bl	2e06c <cmetrohash64_2@@Base+0x64c>
   2e38c:	cmp	r0, #0
   2e390:	bne	2e33c <cmetrohash64_2@@Base+0x91c>
   2e394:	and	r3, r6, r4
   2e398:	add	r4, r4, #1
   2e39c:	b	2e368 <cmetrohash64_2@@Base+0x948>
   2e3a0:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2e3a4:	ldr	sl, [r0]
   2e3a8:	cmp	sl, #0
   2e3ac:	bne	2e3bc <cmetrohash64_2@@Base+0x99c>
   2e3b0:	mov	r6, #0
   2e3b4:	mov	r0, r6
   2e3b8:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2e3bc:	mov	r8, r1
   2e3c0:	ldr	r7, [r0, #12]
   2e3c4:	mov	r5, r0
   2e3c8:	mov	r1, r2
   2e3cc:	mov	r0, r8
   2e3d0:	mov	r9, r2
   2e3d4:	bl	2e03c <cmetrohash64_2@@Base+0x61c>
   2e3d8:	sub	r7, r7, #1
   2e3dc:	and	r3, r7, r0
   2e3e0:	add	r4, r0, #1
   2e3e4:	ldr	r6, [sl, r3, lsl #2]
   2e3e8:	add	fp, sl, r3, lsl #2
   2e3ec:	cmp	r6, #0
   2e3f0:	beq	2e3b0 <cmetrohash64_2@@Base+0x990>
   2e3f4:	cmp	r6, #2
   2e3f8:	beq	2e42c <cmetrohash64_2@@Base+0xa0c>
   2e3fc:	mov	r2, r6
   2e400:	mov	r1, r9
   2e404:	mov	r0, r8
   2e408:	bl	2e06c <cmetrohash64_2@@Base+0x64c>
   2e40c:	cmp	r0, #0
   2e410:	beq	2e42c <cmetrohash64_2@@Base+0xa0c>
   2e414:	mov	r3, #2
   2e418:	str	r3, [fp]
   2e41c:	ldr	r3, [r5, #8]
   2e420:	sub	r3, r3, #1
   2e424:	str	r3, [r5, #8]
   2e428:	b	2e3b4 <cmetrohash64_2@@Base+0x994>
   2e42c:	and	r3, r7, r4
   2e430:	add	r4, r4, #1
   2e434:	b	2e3e4 <cmetrohash64_2@@Base+0x9c4>

0002e438 <fb_name_table_clear@@Base>:
   2e438:	b	2e010 <cmetrohash64_2@@Base+0x5f0>

0002e43c <fb_name_table_destroy@@Base>:
   2e43c:	cmp	r1, #0
   2e440:	push	{r4, lr}
   2e444:	mov	r4, r0
   2e448:	beq	2e450 <fb_name_table_destroy@@Base+0x14>
   2e44c:	bl	2dfc8 <cmetrohash64_2@@Base+0x5a8>
   2e450:	mov	r0, r4
   2e454:	pop	{r4, lr}
   2e458:	b	2e010 <cmetrohash64_2@@Base+0x5f0>

0002e45c <fb_name_table_init@@Base>:
   2e45c:	push	{r4, r5, r6, lr}
   2e460:	mov	r2, #179	; 0xb3
   2e464:	mov	r5, r0
   2e468:	mov	r4, #4
   2e46c:	mul	r3, r2, r4
   2e470:	cmp	r1, r3, lsr #8
   2e474:	bhi	2e4a4 <fb_name_table_init@@Base+0x48>
   2e478:	mov	r1, #4
   2e47c:	mov	r0, r4
   2e480:	bl	13ee4 <calloc@plt>
   2e484:	cmp	r0, #0
   2e488:	str	r0, [r5]
   2e48c:	movne	r0, #0
   2e490:	strne	r0, [r5, #4]
   2e494:	strne	r4, [r5, #12]
   2e498:	strne	r0, [r5, #8]
   2e49c:	mvneq	r0, #0
   2e4a0:	pop	{r4, r5, r6, pc}
   2e4a4:	lsl	r4, r4, #1
   2e4a8:	b	2e46c <fb_name_table_init@@Base+0x10>

0002e4ac <fb_name_table_resize@@Base>:
   2e4ac:	b	2e24c <cmetrohash64_2@@Base+0x82c>

0002e4b0 <fb_name_table_insert@@Base>:
   2e4b0:	b	2e0a0 <cmetrohash64_2@@Base+0x680>

0002e4b4 <fb_name_table_insert_item@@Base>:
   2e4b4:	push	{r0, r1, r2, lr}
   2e4b8:	mov	r3, r1
   2e4bc:	str	r2, [sp]
   2e4c0:	ldr	r2, [r1, #12]
   2e4c4:	ldr	r1, [r1, #8]
   2e4c8:	bl	2e0a0 <cmetrohash64_2@@Base+0x680>
   2e4cc:	add	sp, sp, #12
   2e4d0:	pop	{pc}		; (ldr pc, [sp], #4)

0002e4d4 <fb_name_table_find@@Base>:
   2e4d4:	b	2e328 <cmetrohash64_2@@Base+0x908>

0002e4d8 <fb_name_table_find_item@@Base>:
   2e4d8:	ldr	r2, [r1, #12]
   2e4dc:	ldr	r1, [r1, #8]
   2e4e0:	b	2e328 <cmetrohash64_2@@Base+0x908>

0002e4e4 <fb_name_table_remove@@Base>:
   2e4e4:	b	2e3a0 <cmetrohash64_2@@Base+0x980>

0002e4e8 <fb_name_table_remove_item@@Base>:
   2e4e8:	ldr	r2, [r1, #12]
   2e4ec:	ldr	r1, [r1, #8]
   2e4f0:	b	2e3a0 <cmetrohash64_2@@Base+0x980>

0002e4f4 <fb_name_table_visit@@Base>:
   2e4f4:	b	2dfc8 <cmetrohash64_2@@Base+0x5a8>
   2e4f8:	push	{r4, r5, r6, r7, r8, lr}
   2e4fc:	mov	r5, r0
   2e500:	ldr	r6, [r0]
   2e504:	mov	r7, r1
   2e508:	mov	r8, r2
   2e50c:	mov	r4, #0
   2e510:	ldr	r3, [r5, #12]
   2e514:	cmp	r4, r3
   2e518:	bcc	2e520 <fb_name_table_visit@@Base+0x2c>
   2e51c:	pop	{r4, r5, r6, r7, r8, pc}
   2e520:	ldr	r1, [r6, r4, lsl #2]
   2e524:	cmp	r1, #0
   2e528:	cmpne	r1, #2
   2e52c:	beq	2e538 <fb_name_table_visit@@Base+0x44>
   2e530:	mov	r0, r8
   2e534:	blx	r7
   2e538:	add	r4, r4, #1
   2e53c:	b	2e510 <fb_name_table_visit@@Base+0x1c>
   2e540:	push	{r4, lr}
   2e544:	mov	r4, r0
   2e548:	ldr	r0, [r0]
   2e54c:	cmp	r0, #0
   2e550:	beq	2e558 <fb_name_table_visit@@Base+0x64>
   2e554:	bl	13f14 <free@plt>
   2e558:	mov	r0, r4
   2e55c:	mov	r2, #16
   2e560:	mov	r1, #0
   2e564:	pop	{r4, lr}
   2e568:	b	13fec <memset@plt>
   2e56c:	ldrh	r3, [r0, #8]
   2e570:	cmp	r3, #5
   2e574:	beq	2e598 <fb_name_table_visit@@Base+0xa4>
   2e578:	cmp	r3, #6
   2e57c:	beq	2e5b0 <fb_name_table_visit@@Base+0xbc>
   2e580:	cmp	r3, #4
   2e584:	ldreq	r2, [r0]
   2e588:	ldreq	r3, [pc, #44]	; 2e5bc <fb_name_table_visit@@Base+0xc8>
   2e58c:	beq	2e5a0 <fb_name_table_visit@@Base+0xac>
   2e590:	mov	r0, #0
   2e594:	bx	lr
   2e598:	ldr	r2, [r0]
   2e59c:	ldr	r3, [pc, #28]	; 2e5c0 <fb_name_table_visit@@Base+0xcc>
   2e5a0:	ldr	r0, [pc, #28]	; 2e5c4 <fb_name_table_visit@@Base+0xd0>
   2e5a4:	eor	r3, r3, r2
   2e5a8:	mul	r0, r0, r3
   2e5ac:	bx	lr
   2e5b0:	ldrb	r2, [r0]
   2e5b4:	ldr	r3, [pc, #12]	; 2e5c8 <fb_name_table_visit@@Base+0xd4>
   2e5b8:	b	2e5a0 <fb_name_table_visit@@Base+0xac>
   2e5bc:	svccs	0x00693b56
   2e5c0:	svccs	0x00693b57
   2e5c4:			; <UNDEFINED> instruction: 0x9e3779b1
   2e5c8:	svccs	0x00693b54
   2e5cc:	ldrh	r2, [r0, #8]
   2e5d0:	ldrh	r3, [r1, #8]
   2e5d4:	cmp	r3, r2
   2e5d8:	bne	2e62c <fb_name_table_visit@@Base+0x138>
   2e5dc:	cmp	r3, #5
   2e5e0:	push	{r4, r5, lr}
   2e5e4:	beq	2e5f8 <fb_name_table_visit@@Base+0x104>
   2e5e8:	cmp	r3, #6
   2e5ec:	beq	2e614 <fb_name_table_visit@@Base+0x120>
   2e5f0:	cmp	r3, #4
   2e5f4:	bne	2e634 <fb_name_table_visit@@Base+0x140>
   2e5f8:	ldrd	r4, [r0]
   2e5fc:	ldrd	r2, [r1]
   2e600:	cmp	r5, r3
   2e604:	cmpeq	r4, r2
   2e608:	moveq	r0, #1
   2e60c:	movne	r0, #0
   2e610:	pop	{r4, r5, pc}
   2e614:	ldrb	r0, [r0]
   2e618:	ldrb	r3, [r1]
   2e61c:	sub	r0, r0, r3
   2e620:	clz	r0, r0
   2e624:	lsr	r0, r0, #5
   2e628:	pop	{r4, r5, pc}
   2e62c:	mov	r0, #0
   2e630:	bx	lr
   2e634:	mov	r0, #0
   2e638:	pop	{r4, r5, pc}
   2e63c:	push	{r4, r5, r6, r7, r8, lr}
   2e640:	ldr	r8, [r0]
   2e644:	cmp	r8, #0
   2e648:	moveq	r5, r8
   2e64c:	beq	2e678 <fb_name_table_visit@@Base+0x184>
   2e650:	ldr	r6, [r0, #12]
   2e654:	mov	r0, r1
   2e658:	mov	r7, r1
   2e65c:	bl	2e56c <fb_name_table_visit@@Base+0x78>
   2e660:	sub	r6, r6, #1
   2e664:	and	r3, r6, r0
   2e668:	add	r4, r0, #1
   2e66c:	ldr	r5, [r8, r3, lsl #2]
   2e670:	cmp	r5, #0
   2e674:	bne	2e680 <fb_name_table_visit@@Base+0x18c>
   2e678:	mov	r0, r5
   2e67c:	pop	{r4, r5, r6, r7, r8, pc}
   2e680:	cmp	r5, #2
   2e684:	beq	2e69c <fb_name_table_visit@@Base+0x1a8>
   2e688:	mov	r1, r5
   2e68c:	mov	r0, r7
   2e690:	bl	2e5cc <fb_name_table_visit@@Base+0xd8>
   2e694:	cmp	r0, #0
   2e698:	bne	2e678 <fb_name_table_visit@@Base+0x184>
   2e69c:	and	r3, r6, r4
   2e6a0:	add	r4, r4, #1
   2e6a4:	b	2e66c <fb_name_table_visit@@Base+0x178>
   2e6a8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2e6ac:	ldr	r7, [r0]
   2e6b0:	cmp	r7, #0
   2e6b4:	moveq	r6, r7
   2e6b8:	beq	2e71c <fb_name_table_visit@@Base+0x228>
   2e6bc:	ldr	r9, [r0, #12]
   2e6c0:	mov	r5, r0
   2e6c4:	mov	r0, r1
   2e6c8:	mov	r8, r1
   2e6cc:	bl	2e56c <fb_name_table_visit@@Base+0x78>
   2e6d0:	sub	r9, r9, #1
   2e6d4:	and	r3, r9, r0
   2e6d8:	add	r4, r0, #1
   2e6dc:	ldr	r6, [r7, r3, lsl #2]
   2e6e0:	add	sl, r7, r3, lsl #2
   2e6e4:	cmp	r6, #0
   2e6e8:	beq	2e71c <fb_name_table_visit@@Base+0x228>
   2e6ec:	cmp	r6, #2
   2e6f0:	beq	2e724 <fb_name_table_visit@@Base+0x230>
   2e6f4:	mov	r1, r6
   2e6f8:	mov	r0, r8
   2e6fc:	bl	2e5cc <fb_name_table_visit@@Base+0xd8>
   2e700:	cmp	r0, #0
   2e704:	beq	2e724 <fb_name_table_visit@@Base+0x230>
   2e708:	mov	r3, #2
   2e70c:	str	r3, [sl]
   2e710:	ldr	r3, [r5, #8]
   2e714:	sub	r3, r3, #1
   2e718:	str	r3, [r5, #8]
   2e71c:	mov	r0, r6
   2e720:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2e724:	and	r3, r9, r4
   2e728:	add	r4, r4, #1
   2e72c:	b	2e6dc <fb_name_table_visit@@Base+0x1e8>
   2e730:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2e734:	subs	r7, r2, #0
   2e738:	bne	2e750 <fb_name_table_visit@@Base+0x25c>
   2e73c:	ldr	r3, [pc, #364]	; 2e8b0 <fb_name_table_visit@@Base+0x3bc>
   2e740:	ldr	r1, [pc, #364]	; 2e8b4 <fb_name_table_visit@@Base+0x3c0>
   2e744:	ldr	r0, [pc, #364]	; 2e8b8 <fb_name_table_visit@@Base+0x3c4>
   2e748:	mov	r2, #114	; 0x72
   2e74c:	bl	14094 <__assert_fail@plt>
   2e750:	cmp	r7, #2
   2e754:	ldreq	r3, [pc, #340]	; 2e8b0 <fb_name_table_visit@@Base+0x3bc>
   2e758:	moveq	r2, #115	; 0x73
   2e75c:	ldreq	r1, [pc, #336]	; 2e8b4 <fb_name_table_visit@@Base+0x3c0>
   2e760:	ldreq	r0, [pc, #340]	; 2e8bc <fb_name_table_visit@@Base+0x3c8>
   2e764:	beq	2e74c <fb_name_table_visit@@Base+0x258>
   2e768:	cmp	r7, #1
   2e76c:	ldreq	r3, [pc, #316]	; 2e8b0 <fb_name_table_visit@@Base+0x3bc>
   2e770:	moveq	r2, #116	; 0x74
   2e774:	ldreq	r1, [pc, #312]	; 2e8b4 <fb_name_table_visit@@Base+0x3c0>
   2e778:	ldreq	r0, [pc, #320]	; 2e8c0 <fb_name_table_visit@@Base+0x3cc>
   2e77c:	beq	2e74c <fb_name_table_visit@@Base+0x258>
   2e780:	ldr	r2, [r0, #12]
   2e784:	mov	sl, r3
   2e788:	mov	r3, #179	; 0xb3
   2e78c:	mov	r9, r1
   2e790:	mul	r3, r3, r2
   2e794:	ldr	r1, [r0, #8]
   2e798:	mov	r6, r0
   2e79c:	cmp	r1, r3, lsr #8
   2e7a0:	bcc	2e7d0 <fb_name_table_visit@@Base+0x2dc>
   2e7a4:	lsl	r1, r1, #1
   2e7a8:	bl	2e8d0 <fb_name_table_visit@@Base+0x3dc>
   2e7ac:	cmp	r0, #0
   2e7b0:	beq	2e7d0 <fb_name_table_visit@@Base+0x2dc>
   2e7b4:	ldr	r3, [pc, #264]	; 2e8c4 <fb_name_table_visit@@Base+0x3d0>
   2e7b8:	ldr	r2, [pc, #264]	; 2e8c8 <fb_name_table_visit@@Base+0x3d4>
   2e7bc:	ldr	r1, [pc, #264]	; 2e8cc <fb_name_table_visit@@Base+0x3d8>
   2e7c0:	ldr	r0, [r3]
   2e7c4:	bl	13fd4 <fprintf@plt>
   2e7c8:	mov	r0, #1
   2e7cc:	bl	13fbc <exit@plt>
   2e7d0:	mov	r0, r9
   2e7d4:	bl	2e56c <fb_name_table_visit@@Base+0x78>
   2e7d8:	sub	r3, sl, #2
   2e7dc:	cmp	r3, #1
   2e7e0:	ldr	r8, [r6, #12]
   2e7e4:	ldrls	r3, [r6, #8]
   2e7e8:	sub	r8, r8, #1
   2e7ec:	addls	r3, r3, #1
   2e7f0:	ldr	fp, [r6]
   2e7f4:	movhi	r3, #0
   2e7f8:	strls	r3, [r6, #8]
   2e7fc:	and	r1, r8, r0
   2e800:	add	r4, r0, #1
   2e804:	bls	2e838 <fb_name_table_visit@@Base+0x344>
   2e808:	ldr	r5, [fp, r1, lsl #2]
   2e80c:	add	r2, fp, r1, lsl #2
   2e810:	cmp	r5, #0
   2e814:	bne	2e85c <fb_name_table_visit@@Base+0x368>
   2e818:	cmp	r3, #0
   2e81c:	moveq	r3, r2
   2e820:	ldr	r2, [r6, #8]
   2e824:	add	r2, r2, #1
   2e828:	str	r2, [r6, #8]
   2e82c:	b	2e854 <fb_name_table_visit@@Base+0x360>
   2e830:	and	r1, r8, r4
   2e834:	add	r4, r4, #1
   2e838:	ldr	r5, [fp, r1, lsl #2]
   2e83c:	add	r3, fp, r1, lsl #2
   2e840:	cmp	r5, #0
   2e844:	cmpne	r5, #2
   2e848:	movne	r5, #1
   2e84c:	moveq	r5, #0
   2e850:	bne	2e830 <fb_name_table_visit@@Base+0x33c>
   2e854:	str	r7, [r3]
   2e858:	b	2e8a4 <fb_name_table_visit@@Base+0x3b0>
   2e85c:	cmp	r5, #2
   2e860:	bne	2e878 <fb_name_table_visit@@Base+0x384>
   2e864:	cmp	r3, #0
   2e868:	moveq	r3, r2
   2e86c:	and	r1, r8, r4
   2e870:	add	r4, r4, #1
   2e874:	b	2e808 <fb_name_table_visit@@Base+0x314>
   2e878:	mov	r1, r5
   2e87c:	mov	r0, r9
   2e880:	str	r2, [sp, #4]
   2e884:	str	r3, [sp]
   2e888:	bl	2e5cc <fb_name_table_visit@@Base+0xd8>
   2e88c:	ldr	r3, [sp]
   2e890:	ldr	r2, [sp, #4]
   2e894:	cmp	r0, #0
   2e898:	beq	2e86c <fb_name_table_visit@@Base+0x378>
   2e89c:	cmp	sl, #0
   2e8a0:	streq	r7, [r2]
   2e8a4:	mov	r0, r5
   2e8a8:	add	sp, sp, #12
   2e8ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2e8b0:	andeq	sl, r4, r4, lsl #4
   2e8b4:	andeq	r6, r4, r0, lsr lr
   2e8b8:	andeq	r6, r4, r0, lsl #29
   2e8bc:	muleq	r4, r7, lr
   2e8c0:	andeq	r6, r4, lr, lsr #29
   2e8c4:	strheq	fp, [r5], -r0
   2e8c8:	andeq	r6, r4, r3, asr #29
   2e8cc:	strdeq	r6, [r4], -r6	; <UNPREDICTABLE>
   2e8d0:	ldr	r3, [r0, #8]
   2e8d4:	push	{r4, r5, r6, r7, lr}
   2e8d8:	cmp	r1, r3
   2e8dc:	ldr	r7, [r0]
   2e8e0:	sub	sp, sp, #20
   2e8e4:	mov	r4, r0
   2e8e8:	movcc	r1, r3
   2e8ec:	mov	r6, #4
   2e8f0:	mov	r2, #179	; 0xb3
   2e8f4:	mul	r3, r2, r6
   2e8f8:	cmp	r1, r3, lsr #8
   2e8fc:	bhi	2e978 <fb_name_table_visit@@Base+0x484>
   2e900:	mov	r1, #4
   2e904:	mov	r0, r6
   2e908:	bl	13ee4 <calloc@plt>
   2e90c:	cmp	r0, #0
   2e910:	str	r0, [sp]
   2e914:	mvneq	r0, #0
   2e918:	beq	2e970 <fb_name_table_visit@@Base+0x47c>
   2e91c:	str	r6, [sp, #12]
   2e920:	mov	r6, #3
   2e924:	mov	r5, #0
   2e928:	str	r5, [sp, #4]
   2e92c:	str	r5, [sp, #8]
   2e930:	ldr	r3, [r4, #12]
   2e934:	cmp	r5, r3
   2e938:	bcc	2e980 <fb_name_table_visit@@Base+0x48c>
   2e93c:	mov	r0, r4
   2e940:	bl	2e540 <fb_name_table_visit@@Base+0x4c>
   2e944:	mov	r2, sp
   2e948:	add	ip, sp, #16
   2e94c:	mov	r3, r2
   2e950:	add	r4, r4, #8
   2e954:	ldm	r3!, {r0, r1}
   2e958:	cmp	r3, ip
   2e95c:	str	r0, [r4, #-8]
   2e960:	str	r1, [r4, #-4]
   2e964:	mov	r2, r3
   2e968:	bne	2e94c <fb_name_table_visit@@Base+0x458>
   2e96c:	mov	r0, #0
   2e970:	add	sp, sp, #20
   2e974:	pop	{r4, r5, r6, r7, pc}
   2e978:	lsl	r6, r6, #1
   2e97c:	b	2e8f4 <fb_name_table_visit@@Base+0x400>
   2e980:	ldr	r2, [r7, r5, lsl #2]
   2e984:	cmp	r2, #0
   2e988:	cmpne	r2, #2
   2e98c:	beq	2e9a0 <fb_name_table_visit@@Base+0x4ac>
   2e990:	mov	r3, r6
   2e994:	mov	r1, r2
   2e998:	mov	r0, sp
   2e99c:	bl	2e730 <fb_name_table_visit@@Base+0x23c>
   2e9a0:	add	r5, r5, #1
   2e9a4:	b	2e930 <fb_name_table_visit@@Base+0x43c>

0002e9a8 <fb_value_set_clear@@Base>:
   2e9a8:	b	2e540 <fb_name_table_visit@@Base+0x4c>

0002e9ac <fb_value_set_destroy@@Base>:
   2e9ac:	cmp	r1, #0
   2e9b0:	push	{r4, lr}
   2e9b4:	mov	r4, r0
   2e9b8:	beq	2e9c0 <fb_value_set_destroy@@Base+0x14>
   2e9bc:	bl	2e4f8 <fb_name_table_visit@@Base+0x4>
   2e9c0:	mov	r0, r4
   2e9c4:	pop	{r4, lr}
   2e9c8:	b	2e540 <fb_name_table_visit@@Base+0x4c>

0002e9cc <fb_value_set_init@@Base>:
   2e9cc:	push	{r4, r5, r6, lr}
   2e9d0:	mov	r2, #179	; 0xb3
   2e9d4:	mov	r5, r0
   2e9d8:	mov	r4, #4
   2e9dc:	mul	r3, r2, r4
   2e9e0:	cmp	r1, r3, lsr #8
   2e9e4:	bhi	2ea14 <fb_value_set_init@@Base+0x48>
   2e9e8:	mov	r1, #4
   2e9ec:	mov	r0, r4
   2e9f0:	bl	13ee4 <calloc@plt>
   2e9f4:	cmp	r0, #0
   2e9f8:	str	r0, [r5]
   2e9fc:	movne	r0, #0
   2ea00:	strne	r0, [r5, #4]
   2ea04:	strne	r4, [r5, #12]
   2ea08:	strne	r0, [r5, #8]
   2ea0c:	mvneq	r0, #0
   2ea10:	pop	{r4, r5, r6, pc}
   2ea14:	lsl	r4, r4, #1
   2ea18:	b	2e9dc <fb_value_set_init@@Base+0x10>

0002ea1c <fb_value_set_resize@@Base>:
   2ea1c:	b	2e8d0 <fb_name_table_visit@@Base+0x3dc>

0002ea20 <fb_value_set_insert@@Base>:
   2ea20:	mov	r2, r3
   2ea24:	ldr	r3, [sp]
   2ea28:	b	2e730 <fb_name_table_visit@@Base+0x23c>

0002ea2c <fb_value_set_insert_item@@Base>:
   2ea2c:	mov	r3, r2
   2ea30:	mov	r2, r1
   2ea34:	b	2e730 <fb_name_table_visit@@Base+0x23c>

0002ea38 <fb_value_set_find@@Base>:
   2ea38:	b	2e63c <fb_name_table_visit@@Base+0x148>

0002ea3c <fb_value_set_find_item@@Base>:
   2ea3c:	b	2e63c <fb_name_table_visit@@Base+0x148>

0002ea40 <fb_value_set_remove@@Base>:
   2ea40:	b	2e6a8 <fb_name_table_visit@@Base+0x1b4>

0002ea44 <fb_value_set_remove_item@@Base>:
   2ea44:	b	2e6a8 <fb_name_table_visit@@Base+0x1b4>

0002ea48 <fb_value_set_visit@@Base>:
   2ea48:	b	2e4f8 <fb_name_table_visit@@Base+0x4>
   2ea4c:	subs	r2, r1, #1
   2ea50:	bxeq	lr
   2ea54:	bcc	2ec2c <fb_value_set_visit@@Base+0x1e4>
   2ea58:	cmp	r0, r1
   2ea5c:	bls	2ec10 <fb_value_set_visit@@Base+0x1c8>
   2ea60:	tst	r1, r2
   2ea64:	beq	2ec1c <fb_value_set_visit@@Base+0x1d4>
   2ea68:	clz	r3, r0
   2ea6c:	clz	r2, r1
   2ea70:	sub	r3, r2, r3
   2ea74:	rsbs	r3, r3, #31
   2ea78:	addne	r3, r3, r3, lsl #1
   2ea7c:	mov	r2, #0
   2ea80:	addne	pc, pc, r3, lsl #2
   2ea84:	nop			; (mov r0, r0)
   2ea88:	cmp	r0, r1, lsl #31
   2ea8c:	adc	r2, r2, r2
   2ea90:	subcs	r0, r0, r1, lsl #31
   2ea94:	cmp	r0, r1, lsl #30
   2ea98:	adc	r2, r2, r2
   2ea9c:	subcs	r0, r0, r1, lsl #30
   2eaa0:	cmp	r0, r1, lsl #29
   2eaa4:	adc	r2, r2, r2
   2eaa8:	subcs	r0, r0, r1, lsl #29
   2eaac:	cmp	r0, r1, lsl #28
   2eab0:	adc	r2, r2, r2
   2eab4:	subcs	r0, r0, r1, lsl #28
   2eab8:	cmp	r0, r1, lsl #27
   2eabc:	adc	r2, r2, r2
   2eac0:	subcs	r0, r0, r1, lsl #27
   2eac4:	cmp	r0, r1, lsl #26
   2eac8:	adc	r2, r2, r2
   2eacc:	subcs	r0, r0, r1, lsl #26
   2ead0:	cmp	r0, r1, lsl #25
   2ead4:	adc	r2, r2, r2
   2ead8:	subcs	r0, r0, r1, lsl #25
   2eadc:	cmp	r0, r1, lsl #24
   2eae0:	adc	r2, r2, r2
   2eae4:	subcs	r0, r0, r1, lsl #24
   2eae8:	cmp	r0, r1, lsl #23
   2eaec:	adc	r2, r2, r2
   2eaf0:	subcs	r0, r0, r1, lsl #23
   2eaf4:	cmp	r0, r1, lsl #22
   2eaf8:	adc	r2, r2, r2
   2eafc:	subcs	r0, r0, r1, lsl #22
   2eb00:	cmp	r0, r1, lsl #21
   2eb04:	adc	r2, r2, r2
   2eb08:	subcs	r0, r0, r1, lsl #21
   2eb0c:	cmp	r0, r1, lsl #20
   2eb10:	adc	r2, r2, r2
   2eb14:	subcs	r0, r0, r1, lsl #20
   2eb18:	cmp	r0, r1, lsl #19
   2eb1c:	adc	r2, r2, r2
   2eb20:	subcs	r0, r0, r1, lsl #19
   2eb24:	cmp	r0, r1, lsl #18
   2eb28:	adc	r2, r2, r2
   2eb2c:	subcs	r0, r0, r1, lsl #18
   2eb30:	cmp	r0, r1, lsl #17
   2eb34:	adc	r2, r2, r2
   2eb38:	subcs	r0, r0, r1, lsl #17
   2eb3c:	cmp	r0, r1, lsl #16
   2eb40:	adc	r2, r2, r2
   2eb44:	subcs	r0, r0, r1, lsl #16
   2eb48:	cmp	r0, r1, lsl #15
   2eb4c:	adc	r2, r2, r2
   2eb50:	subcs	r0, r0, r1, lsl #15
   2eb54:	cmp	r0, r1, lsl #14
   2eb58:	adc	r2, r2, r2
   2eb5c:	subcs	r0, r0, r1, lsl #14
   2eb60:	cmp	r0, r1, lsl #13
   2eb64:	adc	r2, r2, r2
   2eb68:	subcs	r0, r0, r1, lsl #13
   2eb6c:	cmp	r0, r1, lsl #12
   2eb70:	adc	r2, r2, r2
   2eb74:	subcs	r0, r0, r1, lsl #12
   2eb78:	cmp	r0, r1, lsl #11
   2eb7c:	adc	r2, r2, r2
   2eb80:	subcs	r0, r0, r1, lsl #11
   2eb84:	cmp	r0, r1, lsl #10
   2eb88:	adc	r2, r2, r2
   2eb8c:	subcs	r0, r0, r1, lsl #10
   2eb90:	cmp	r0, r1, lsl #9
   2eb94:	adc	r2, r2, r2
   2eb98:	subcs	r0, r0, r1, lsl #9
   2eb9c:	cmp	r0, r1, lsl #8
   2eba0:	adc	r2, r2, r2
   2eba4:	subcs	r0, r0, r1, lsl #8
   2eba8:	cmp	r0, r1, lsl #7
   2ebac:	adc	r2, r2, r2
   2ebb0:	subcs	r0, r0, r1, lsl #7
   2ebb4:	cmp	r0, r1, lsl #6
   2ebb8:	adc	r2, r2, r2
   2ebbc:	subcs	r0, r0, r1, lsl #6
   2ebc0:	cmp	r0, r1, lsl #5
   2ebc4:	adc	r2, r2, r2
   2ebc8:	subcs	r0, r0, r1, lsl #5
   2ebcc:	cmp	r0, r1, lsl #4
   2ebd0:	adc	r2, r2, r2
   2ebd4:	subcs	r0, r0, r1, lsl #4
   2ebd8:	cmp	r0, r1, lsl #3
   2ebdc:	adc	r2, r2, r2
   2ebe0:	subcs	r0, r0, r1, lsl #3
   2ebe4:	cmp	r0, r1, lsl #2
   2ebe8:	adc	r2, r2, r2
   2ebec:	subcs	r0, r0, r1, lsl #2
   2ebf0:	cmp	r0, r1, lsl #1
   2ebf4:	adc	r2, r2, r2
   2ebf8:	subcs	r0, r0, r1, lsl #1
   2ebfc:	cmp	r0, r1
   2ec00:	adc	r2, r2, r2
   2ec04:	subcs	r0, r0, r1
   2ec08:	mov	r0, r2
   2ec0c:	bx	lr
   2ec10:	moveq	r0, #1
   2ec14:	movne	r0, #0
   2ec18:	bx	lr
   2ec1c:	clz	r2, r1
   2ec20:	rsb	r2, r2, #31
   2ec24:	lsr	r0, r0, r2
   2ec28:	bx	lr
   2ec2c:	cmp	r0, #0
   2ec30:	mvnne	r0, #0
   2ec34:	b	2f2b8 <fb_value_set_visit@@Base+0x870>
   2ec38:	cmp	r1, #0
   2ec3c:	beq	2ec2c <fb_value_set_visit@@Base+0x1e4>
   2ec40:	push	{r0, r1, lr}
   2ec44:	bl	2ea4c <fb_value_set_visit@@Base+0x4>
   2ec48:	pop	{r1, r2, lr}
   2ec4c:	mul	r3, r2, r0
   2ec50:	sub	r1, r1, r3
   2ec54:	bx	lr
   2ec58:	subs	r3, r2, #32
   2ec5c:	rsb	ip, r2, #32
   2ec60:	lslmi	r1, r1, r2
   2ec64:	lslpl	r1, r0, r3
   2ec68:	orrmi	r1, r1, r0, lsr ip
   2ec6c:	lsl	r0, r0, r2
   2ec70:	bx	lr
   2ec74:	eor	r1, r1, #-2147483648	; 0x80000000
   2ec78:	b	2ec80 <fb_value_set_visit@@Base+0x238>
   2ec7c:	eor	r3, r3, #-2147483648	; 0x80000000
   2ec80:	push	{r4, r5, lr}
   2ec84:	lsl	r4, r1, #1
   2ec88:	lsl	r5, r3, #1
   2ec8c:	teq	r4, r5
   2ec90:	teqeq	r0, r2
   2ec94:	orrsne	ip, r4, r0
   2ec98:	orrsne	ip, r5, r2
   2ec9c:	mvnsne	ip, r4, asr #21
   2eca0:	mvnsne	ip, r5, asr #21
   2eca4:	beq	2ee90 <fb_value_set_visit@@Base+0x448>
   2eca8:	lsr	r4, r4, #21
   2ecac:	rsbs	r5, r4, r5, lsr #21
   2ecb0:	rsblt	r5, r5, #0
   2ecb4:	ble	2ecd4 <fb_value_set_visit@@Base+0x28c>
   2ecb8:	add	r4, r4, r5
   2ecbc:	eor	r2, r0, r2
   2ecc0:	eor	r3, r1, r3
   2ecc4:	eor	r0, r2, r0
   2ecc8:	eor	r1, r3, r1
   2eccc:	eor	r2, r0, r2
   2ecd0:	eor	r3, r1, r3
   2ecd4:	cmp	r5, #54	; 0x36
   2ecd8:	pophi	{r4, r5, pc}
   2ecdc:	tst	r1, #-2147483648	; 0x80000000
   2ece0:	lsl	r1, r1, #12
   2ece4:	mov	ip, #1048576	; 0x100000
   2ece8:	orr	r1, ip, r1, lsr #12
   2ecec:	beq	2ecf8 <fb_value_set_visit@@Base+0x2b0>
   2ecf0:	rsbs	r0, r0, #0
   2ecf4:	rsc	r1, r1, #0
   2ecf8:	tst	r3, #-2147483648	; 0x80000000
   2ecfc:	lsl	r3, r3, #12
   2ed00:	orr	r3, ip, r3, lsr #12
   2ed04:	beq	2ed10 <fb_value_set_visit@@Base+0x2c8>
   2ed08:	rsbs	r2, r2, #0
   2ed0c:	rsc	r3, r3, #0
   2ed10:	teq	r4, r5
   2ed14:	beq	2ee78 <fb_value_set_visit@@Base+0x430>
   2ed18:	sub	r4, r4, #1
   2ed1c:	rsbs	lr, r5, #32
   2ed20:	blt	2ed3c <fb_value_set_visit@@Base+0x2f4>
   2ed24:	lsl	ip, r2, lr
   2ed28:	adds	r0, r0, r2, lsr r5
   2ed2c:	adc	r1, r1, #0
   2ed30:	adds	r0, r0, r3, lsl lr
   2ed34:	adcs	r1, r1, r3, asr r5
   2ed38:	b	2ed58 <fb_value_set_visit@@Base+0x310>
   2ed3c:	sub	r5, r5, #32
   2ed40:	add	lr, lr, #32
   2ed44:	cmp	r2, #1
   2ed48:	lsl	ip, r3, lr
   2ed4c:	orrcs	ip, ip, #2
   2ed50:	adds	r0, r0, r3, asr r5
   2ed54:	adcs	r1, r1, r3, asr #31
   2ed58:	and	r5, r1, #-2147483648	; 0x80000000
   2ed5c:	bpl	2ed6c <fb_value_set_visit@@Base+0x324>
   2ed60:	rsbs	ip, ip, #0
   2ed64:	rscs	r0, r0, #0
   2ed68:	rsc	r1, r1, #0
   2ed6c:	cmp	r1, #1048576	; 0x100000
   2ed70:	bcc	2edb0 <fb_value_set_visit@@Base+0x368>
   2ed74:	cmp	r1, #2097152	; 0x200000
   2ed78:	bcc	2ed98 <fb_value_set_visit@@Base+0x350>
   2ed7c:	lsrs	r1, r1, #1
   2ed80:	rrxs	r0, r0
   2ed84:	rrx	ip, ip
   2ed88:	add	r4, r4, #1
   2ed8c:	lsl	r2, r4, #21
   2ed90:	cmn	r2, #4194304	; 0x400000
   2ed94:	bcs	2eef0 <fb_value_set_visit@@Base+0x4a8>
   2ed98:	cmp	ip, #-2147483648	; 0x80000000
   2ed9c:	lsrseq	ip, r0, #1
   2eda0:	adcs	r0, r0, #0
   2eda4:	adc	r1, r1, r4, lsl #20
   2eda8:	orr	r1, r1, r5
   2edac:	pop	{r4, r5, pc}
   2edb0:	lsls	ip, ip, #1
   2edb4:	adcs	r0, r0, r0
   2edb8:	adc	r1, r1, r1
   2edbc:	tst	r1, #1048576	; 0x100000
   2edc0:	sub	r4, r4, #1
   2edc4:	bne	2ed98 <fb_value_set_visit@@Base+0x350>
   2edc8:	teq	r1, #0
   2edcc:	moveq	r1, r0
   2edd0:	moveq	r0, #0
   2edd4:	clz	r3, r1
   2edd8:	addeq	r3, r3, #32
   2eddc:	sub	r3, r3, #11
   2ede0:	subs	r2, r3, #32
   2ede4:	bge	2ee08 <fb_value_set_visit@@Base+0x3c0>
   2ede8:	adds	r2, r2, #12
   2edec:	ble	2ee04 <fb_value_set_visit@@Base+0x3bc>
   2edf0:	add	ip, r2, #20
   2edf4:	rsb	r2, r2, #12
   2edf8:	lsl	r0, r1, ip
   2edfc:	lsr	r1, r1, r2
   2ee00:	b	2ee18 <fb_value_set_visit@@Base+0x3d0>
   2ee04:	add	r2, r2, #20
   2ee08:	rsble	ip, r2, #32
   2ee0c:	lsl	r1, r1, r2
   2ee10:	orrle	r1, r1, r0, lsr ip
   2ee14:	lslle	r0, r0, r2
   2ee18:	subs	r4, r4, r3
   2ee1c:	addge	r1, r1, r4, lsl #20
   2ee20:	orrge	r1, r1, r5
   2ee24:	popge	{r4, r5, pc}
   2ee28:	mvn	r4, r4
   2ee2c:	subs	r4, r4, #31
   2ee30:	bge	2ee6c <fb_value_set_visit@@Base+0x424>
   2ee34:	adds	r4, r4, #12
   2ee38:	bgt	2ee54 <fb_value_set_visit@@Base+0x40c>
   2ee3c:	add	r4, r4, #20
   2ee40:	rsb	r2, r4, #32
   2ee44:	lsr	r0, r0, r4
   2ee48:	orr	r0, r0, r1, lsl r2
   2ee4c:	orr	r1, r5, r1, lsr r4
   2ee50:	pop	{r4, r5, pc}
   2ee54:	rsb	r4, r4, #12
   2ee58:	rsb	r2, r4, #32
   2ee5c:	lsr	r0, r0, r2
   2ee60:	orr	r0, r0, r1, lsl r4
   2ee64:	mov	r1, r5
   2ee68:	pop	{r4, r5, pc}
   2ee6c:	lsr	r0, r1, r4
   2ee70:	mov	r1, r5
   2ee74:	pop	{r4, r5, pc}
   2ee78:	teq	r4, #0
   2ee7c:	eor	r3, r3, #1048576	; 0x100000
   2ee80:	eoreq	r1, r1, #1048576	; 0x100000
   2ee84:	addeq	r4, r4, #1
   2ee88:	subne	r5, r5, #1
   2ee8c:	b	2ed18 <fb_value_set_visit@@Base+0x2d0>
   2ee90:	mvns	ip, r4, asr #21
   2ee94:	mvnsne	ip, r5, asr #21
   2ee98:	beq	2ef00 <fb_value_set_visit@@Base+0x4b8>
   2ee9c:	teq	r4, r5
   2eea0:	teqeq	r0, r2
   2eea4:	beq	2eeb8 <fb_value_set_visit@@Base+0x470>
   2eea8:	orrs	ip, r4, r0
   2eeac:	moveq	r1, r3
   2eeb0:	moveq	r0, r2
   2eeb4:	pop	{r4, r5, pc}
   2eeb8:	teq	r1, r3
   2eebc:	movne	r1, #0
   2eec0:	movne	r0, #0
   2eec4:	popne	{r4, r5, pc}
   2eec8:	lsrs	ip, r4, #21
   2eecc:	bne	2eee0 <fb_value_set_visit@@Base+0x498>
   2eed0:	lsls	r0, r0, #1
   2eed4:	adcs	r1, r1, r1
   2eed8:	orrcs	r1, r1, #-2147483648	; 0x80000000
   2eedc:	pop	{r4, r5, pc}
   2eee0:	adds	r4, r4, #4194304	; 0x400000
   2eee4:	addcc	r1, r1, #1048576	; 0x100000
   2eee8:	popcc	{r4, r5, pc}
   2eeec:	and	r5, r1, #-2147483648	; 0x80000000
   2eef0:	orr	r1, r5, #2130706432	; 0x7f000000
   2eef4:	orr	r1, r1, #15728640	; 0xf00000
   2eef8:	mov	r0, #0
   2eefc:	pop	{r4, r5, pc}
   2ef00:	mvns	ip, r4, asr #21
   2ef04:	movne	r1, r3
   2ef08:	movne	r0, r2
   2ef0c:	mvnseq	ip, r5, asr #21
   2ef10:	movne	r3, r1
   2ef14:	movne	r2, r0
   2ef18:	orrs	r4, r0, r1, lsl #12
   2ef1c:	orrseq	r5, r2, r3, lsl #12
   2ef20:	teqeq	r1, r3
   2ef24:	orrne	r1, r1, #524288	; 0x80000
   2ef28:	pop	{r4, r5, pc}
   2ef2c:	teq	r0, #0
   2ef30:	moveq	r1, #0
   2ef34:	bxeq	lr
   2ef38:	push	{r4, r5, lr}
   2ef3c:	mov	r4, #1024	; 0x400
   2ef40:	add	r4, r4, #50	; 0x32
   2ef44:	mov	r5, #0
   2ef48:	mov	r1, #0
   2ef4c:	b	2edc8 <fb_value_set_visit@@Base+0x380>
   2ef50:	teq	r0, #0
   2ef54:	moveq	r1, #0
   2ef58:	bxeq	lr
   2ef5c:	push	{r4, r5, lr}
   2ef60:	mov	r4, #1024	; 0x400
   2ef64:	add	r4, r4, #50	; 0x32
   2ef68:	ands	r5, r0, #-2147483648	; 0x80000000
   2ef6c:	rsbmi	r0, r0, #0
   2ef70:	mov	r1, #0
   2ef74:	b	2edc8 <fb_value_set_visit@@Base+0x380>
   2ef78:	lsls	r2, r0, #1
   2ef7c:	asr	r1, r2, #3
   2ef80:	rrx	r1, r1
   2ef84:	lsl	r0, r2, #28
   2ef88:	andsne	r3, r2, #-16777216	; 0xff000000
   2ef8c:	teqne	r3, #-16777216	; 0xff000000
   2ef90:	eorne	r1, r1, #939524096	; 0x38000000
   2ef94:	bxne	lr
   2ef98:	teq	r2, #0
   2ef9c:	teqne	r3, #-16777216	; 0xff000000
   2efa0:	bxeq	lr
   2efa4:	push	{r4, r5, lr}
   2efa8:	mov	r4, #896	; 0x380
   2efac:	and	r5, r1, #-2147483648	; 0x80000000
   2efb0:	bic	r1, r1, #-2147483648	; 0x80000000
   2efb4:	b	2edc8 <fb_value_set_visit@@Base+0x380>
   2efb8:	orrs	r2, r0, r1
   2efbc:	bxeq	lr
   2efc0:	push	{r4, r5, lr}
   2efc4:	mov	r5, #0
   2efc8:	b	2efe8 <fb_value_set_visit@@Base+0x5a0>
   2efcc:	orrs	r2, r0, r1
   2efd0:	bxeq	lr
   2efd4:	push	{r4, r5, lr}
   2efd8:	ands	r5, r1, #-2147483648	; 0x80000000
   2efdc:	bpl	2efe8 <fb_value_set_visit@@Base+0x5a0>
   2efe0:	rsbs	r0, r0, #0
   2efe4:	rsc	r1, r1, #0
   2efe8:	mov	r4, #1024	; 0x400
   2efec:	add	r4, r4, #50	; 0x32
   2eff0:	lsrs	ip, r1, #22
   2eff4:	beq	2ed6c <fb_value_set_visit@@Base+0x324>
   2eff8:	mov	r2, #3
   2effc:	lsrs	ip, ip, #3
   2f000:	addne	r2, r2, #3
   2f004:	lsrs	ip, ip, #3
   2f008:	addne	r2, r2, #3
   2f00c:	add	r2, r2, ip, lsr #3
   2f010:	rsb	r3, r2, #32
   2f014:	lsl	ip, r0, r3
   2f018:	lsr	r0, r0, r2
   2f01c:	orr	r0, r0, r1, lsl r3
   2f020:	lsr	r1, r1, r2
   2f024:	add	r4, r4, r2
   2f028:	b	2ed6c <fb_value_set_visit@@Base+0x324>
   2f02c:	eor	r0, r0, #-2147483648	; 0x80000000
   2f030:	b	2f038 <fb_value_set_visit@@Base+0x5f0>
   2f034:	eor	r1, r1, #-2147483648	; 0x80000000
   2f038:	lsls	r2, r0, #1
   2f03c:	lslsne	r3, r1, #1
   2f040:	teqne	r2, r3
   2f044:	mvnsne	ip, r2, asr #24
   2f048:	mvnsne	ip, r3, asr #24
   2f04c:	beq	2f144 <fb_value_set_visit@@Base+0x6fc>
   2f050:	lsr	r2, r2, #24
   2f054:	rsbs	r3, r2, r3, lsr #24
   2f058:	addgt	r2, r2, r3
   2f05c:	eorgt	r1, r0, r1
   2f060:	eorgt	r0, r1, r0
   2f064:	eorgt	r1, r0, r1
   2f068:	rsblt	r3, r3, #0
   2f06c:	cmp	r3, #25
   2f070:	bxhi	lr
   2f074:	tst	r0, #-2147483648	; 0x80000000
   2f078:	orr	r0, r0, #8388608	; 0x800000
   2f07c:	bic	r0, r0, #-16777216	; 0xff000000
   2f080:	rsbne	r0, r0, #0
   2f084:	tst	r1, #-2147483648	; 0x80000000
   2f088:	orr	r1, r1, #8388608	; 0x800000
   2f08c:	bic	r1, r1, #-16777216	; 0xff000000
   2f090:	rsbne	r1, r1, #0
   2f094:	teq	r2, r3
   2f098:	beq	2f12c <fb_value_set_visit@@Base+0x6e4>
   2f09c:	sub	r2, r2, #1
   2f0a0:	adds	r0, r0, r1, asr r3
   2f0a4:	rsb	r3, r3, #32
   2f0a8:	lsl	r1, r1, r3
   2f0ac:	and	r3, r0, #-2147483648	; 0x80000000
   2f0b0:	bpl	2f0bc <fb_value_set_visit@@Base+0x674>
   2f0b4:	rsbs	r1, r1, #0
   2f0b8:	rsc	r0, r0, #0
   2f0bc:	cmp	r0, #8388608	; 0x800000
   2f0c0:	bcc	2f0f4 <fb_value_set_visit@@Base+0x6ac>
   2f0c4:	cmp	r0, #16777216	; 0x1000000
   2f0c8:	bcc	2f0e0 <fb_value_set_visit@@Base+0x698>
   2f0cc:	lsrs	r0, r0, #1
   2f0d0:	rrx	r1, r1
   2f0d4:	add	r2, r2, #1
   2f0d8:	cmp	r2, #254	; 0xfe
   2f0dc:	bcs	2f198 <fb_value_set_visit@@Base+0x750>
   2f0e0:	cmp	r1, #-2147483648	; 0x80000000
   2f0e4:	adc	r0, r0, r2, lsl #23
   2f0e8:	biceq	r0, r0, #1
   2f0ec:	orr	r0, r0, r3
   2f0f0:	bx	lr
   2f0f4:	lsls	r1, r1, #1
   2f0f8:	adc	r0, r0, r0
   2f0fc:	tst	r0, #8388608	; 0x800000
   2f100:	sub	r2, r2, #1
   2f104:	bne	2f0e0 <fb_value_set_visit@@Base+0x698>
   2f108:	clz	ip, r0
   2f10c:	sub	ip, ip, #8
   2f110:	subs	r2, r2, ip
   2f114:	lsl	r0, r0, ip
   2f118:	addge	r0, r0, r2, lsl #23
   2f11c:	rsblt	r2, r2, #0
   2f120:	orrge	r0, r0, r3
   2f124:	orrlt	r0, r3, r0, lsr r2
   2f128:	bx	lr
   2f12c:	teq	r2, #0
   2f130:	eor	r1, r1, #8388608	; 0x800000
   2f134:	eoreq	r0, r0, #8388608	; 0x800000
   2f138:	addeq	r2, r2, #1
   2f13c:	subne	r3, r3, #1
   2f140:	b	2f09c <fb_value_set_visit@@Base+0x654>
   2f144:	lsl	r3, r1, #1
   2f148:	mvns	ip, r2, asr #24
   2f14c:	mvnsne	ip, r3, asr #24
   2f150:	beq	2f1a4 <fb_value_set_visit@@Base+0x75c>
   2f154:	teq	r2, r3
   2f158:	beq	2f168 <fb_value_set_visit@@Base+0x720>
   2f15c:	teq	r2, #0
   2f160:	moveq	r0, r1
   2f164:	bx	lr
   2f168:	teq	r0, r1
   2f16c:	movne	r0, #0
   2f170:	bxne	lr
   2f174:	tst	r2, #-16777216	; 0xff000000
   2f178:	bne	2f188 <fb_value_set_visit@@Base+0x740>
   2f17c:	lsls	r0, r0, #1
   2f180:	orrcs	r0, r0, #-2147483648	; 0x80000000
   2f184:	bx	lr
   2f188:	adds	r2, r2, #33554432	; 0x2000000
   2f18c:	addcc	r0, r0, #8388608	; 0x800000
   2f190:	bxcc	lr
   2f194:	and	r3, r0, #-2147483648	; 0x80000000
   2f198:	orr	r0, r3, #2130706432	; 0x7f000000
   2f19c:	orr	r0, r0, #8388608	; 0x800000
   2f1a0:	bx	lr
   2f1a4:	mvns	r2, r2, asr #24
   2f1a8:	movne	r0, r1
   2f1ac:	mvnseq	r3, r3, asr #24
   2f1b0:	movne	r1, r0
   2f1b4:	lsls	r2, r0, #9
   2f1b8:	lslseq	r3, r1, #9
   2f1bc:	teqeq	r0, r1
   2f1c0:	orrne	r0, r0, #4194304	; 0x400000
   2f1c4:	bx	lr
   2f1c8:	mov	r3, #0
   2f1cc:	b	2f1d8 <fb_value_set_visit@@Base+0x790>
   2f1d0:	ands	r3, r0, #-2147483648	; 0x80000000
   2f1d4:	rsbmi	r0, r0, #0
   2f1d8:	movs	ip, r0
   2f1dc:	bxeq	lr
   2f1e0:	orr	r3, r3, #1258291200	; 0x4b000000
   2f1e4:	mov	r1, r0
   2f1e8:	mov	r0, #0
   2f1ec:	b	2f230 <fb_value_set_visit@@Base+0x7e8>
   2f1f0:	orrs	r2, r0, r1
   2f1f4:	bxeq	lr
   2f1f8:	mov	r3, #0
   2f1fc:	b	2f218 <fb_value_set_visit@@Base+0x7d0>
   2f200:	orrs	r2, r0, r1
   2f204:	bxeq	lr
   2f208:	ands	r3, r1, #-2147483648	; 0x80000000
   2f20c:	bpl	2f218 <fb_value_set_visit@@Base+0x7d0>
   2f210:	rsbs	r0, r0, #0
   2f214:	rsc	r1, r1, #0
   2f218:	movs	ip, r1
   2f21c:	moveq	ip, r0
   2f220:	moveq	r1, r0
   2f224:	moveq	r0, #0
   2f228:	orr	r3, r3, #1526726656	; 0x5b000000
   2f22c:	subeq	r3, r3, #268435456	; 0x10000000
   2f230:	sub	r3, r3, #8388608	; 0x800000
   2f234:	clz	r2, ip
   2f238:	subs	r2, r2, #8
   2f23c:	sub	r3, r3, r2, lsl #23
   2f240:	blt	2f260 <fb_value_set_visit@@Base+0x818>
   2f244:	add	r3, r3, r1, lsl r2
   2f248:	lsl	ip, r0, r2
   2f24c:	rsb	r2, r2, #32
   2f250:	cmp	ip, #-2147483648	; 0x80000000
   2f254:	adc	r0, r3, r0, lsr r2
   2f258:	biceq	r0, r0, #1
   2f25c:	bx	lr
   2f260:	add	r2, r2, #32
   2f264:	lsl	ip, r1, r2
   2f268:	rsb	r2, r2, #32
   2f26c:	orrs	r0, r0, ip, lsl #1
   2f270:	adc	r0, r3, r1, lsr r2
   2f274:	biceq	r0, r0, ip, lsr #31
   2f278:	bx	lr
   2f27c:	cmp	r3, #0
   2f280:	cmpeq	r2, #0
   2f284:	bne	2f29c <fb_value_set_visit@@Base+0x854>
   2f288:	cmp	r1, #0
   2f28c:	cmpeq	r0, #0
   2f290:	mvnne	r1, #0
   2f294:	mvnne	r0, #0
   2f298:	b	2f2b8 <fb_value_set_visit@@Base+0x870>
   2f29c:	sub	sp, sp, #8
   2f2a0:	push	{sp, lr}
   2f2a4:	bl	2f3b0 <fb_value_set_visit@@Base+0x968>
   2f2a8:	ldr	lr, [sp, #4]
   2f2ac:	add	sp, sp, #8
   2f2b0:	pop	{r2, r3}
   2f2b4:	bx	lr
   2f2b8:	push	{r1, lr}
   2f2bc:	mov	r0, #8
   2f2c0:	bl	13ef0 <raise@plt>
   2f2c4:	pop	{r1, pc}
   2f2c8:	vmov	s15, r0
   2f2cc:	vcmpe.f32	s15, #0.0
   2f2d0:	vmrs	APSR_nzcv, fpscr
   2f2d4:	bmi	2f2dc <fb_value_set_visit@@Base+0x894>
   2f2d8:	b	2f320 <fb_value_set_visit@@Base+0x8d8>
   2f2dc:	push	{r4, lr}
   2f2e0:	eor	r0, r0, #-2147483648	; 0x80000000
   2f2e4:	bl	2f320 <fb_value_set_visit@@Base+0x8d8>
   2f2e8:	rsbs	r0, r0, #0
   2f2ec:	rsc	r1, r1, #0
   2f2f0:	pop	{r4, pc}
   2f2f4:	vmov	d7, r0, r1
   2f2f8:	vcmpe.f64	d7, #0.0
   2f2fc:	vmrs	APSR_nzcv, fpscr
   2f300:	bmi	2f308 <fb_value_set_visit@@Base+0x8c0>
   2f304:	b	2f368 <fb_value_set_visit@@Base+0x920>
   2f308:	push	{r4, lr}
   2f30c:	eor	r1, r1, #-2147483648	; 0x80000000
   2f310:	bl	2f368 <fb_value_set_visit@@Base+0x920>
   2f314:	rsbs	r0, r0, #0
   2f318:	rsc	r1, r1, #0
   2f31c:	pop	{r4, pc}
   2f320:	vmov	s15, r0
   2f324:	vldr	d6, [pc, #44]	; 2f358 <fb_value_set_visit@@Base+0x910>
   2f328:	vldr	d5, [pc, #48]	; 2f360 <fb_value_set_visit@@Base+0x918>
   2f32c:	mov	r0, #0
   2f330:	vcvt.f64.f32	d7, s15
   2f334:	vmul.f64	d6, d7, d6
   2f338:	vcvt.u32.f64	s12, d6
   2f33c:	vcvt.f64.u32	d4, s12
   2f340:	vmov	r1, s12
   2f344:	vmls.f64	d7, d4, d5
   2f348:	vcvt.u32.f64	s14, d7
   2f34c:	vmov	r3, s14
   2f350:	orr	r0, r0, r3
   2f354:	bx	lr
   2f358:	andeq	r0, r0, r0
   2f35c:	ldclcc	0, cr0, [r0]
   2f360:	andeq	r0, r0, r0
   2f364:	mvnsmi	r0, r0
   2f368:	vmov	d7, r0, r1
   2f36c:	vldr	d6, [pc, #44]	; 2f3a0 <fb_value_set_visit@@Base+0x958>
   2f370:	vldr	d5, [pc, #48]	; 2f3a8 <fb_value_set_visit@@Base+0x960>
   2f374:	mov	r0, #0
   2f378:	vmul.f64	d6, d7, d6
   2f37c:	vcvt.u32.f64	s12, d6
   2f380:	vcvt.f64.u32	d4, s12
   2f384:	vmov	r1, s12
   2f388:	vmls.f64	d7, d4, d5
   2f38c:	vcvt.u32.f64	s14, d7
   2f390:	vmov	r3, s14
   2f394:	orr	r0, r0, r3
   2f398:	bx	lr
   2f39c:	nop			; (mov r0, r0)
   2f3a0:	andeq	r0, r0, r0
   2f3a4:	ldclcc	0, cr0, [r0]
   2f3a8:	andeq	r0, r0, r0
   2f3ac:	mvnsmi	r0, r0
   2f3b0:	cmp	r1, r3
   2f3b4:	push	{r4, r5, r6, r7, r8, r9, lr}
   2f3b8:	cmpeq	r0, r2
   2f3bc:	mov	r4, r0
   2f3c0:	mov	r5, r1
   2f3c4:	ldr	r9, [sp, #28]
   2f3c8:	movcc	r0, #0
   2f3cc:	movcc	r1, #0
   2f3d0:	bcc	2f4c8 <fb_value_set_visit@@Base+0xa80>
   2f3d4:	cmp	r3, #0
   2f3d8:	clzeq	ip, r2
   2f3dc:	clzne	ip, r3
   2f3e0:	addeq	ip, ip, #32
   2f3e4:	cmp	r5, #0
   2f3e8:	clzeq	r1, r4
   2f3ec:	addeq	r1, r1, #32
   2f3f0:	clzne	r1, r5
   2f3f4:	sub	ip, ip, r1
   2f3f8:	sub	lr, ip, #32
   2f3fc:	lsl	r7, r3, ip
   2f400:	rsb	r8, ip, #32
   2f404:	orr	r7, r7, r2, lsl lr
   2f408:	orr	r7, r7, r2, lsr r8
   2f40c:	lsl	r6, r2, ip
   2f410:	cmp	r5, r7
   2f414:	cmpeq	r4, r6
   2f418:	movcc	r0, #0
   2f41c:	movcc	r1, #0
   2f420:	bcc	2f43c <fb_value_set_visit@@Base+0x9f4>
   2f424:	mov	r3, #1
   2f428:	subs	r4, r4, r6
   2f42c:	lsl	r1, r3, lr
   2f430:	lsl	r0, r3, ip
   2f434:	orr	r1, r1, r3, lsr r8
   2f438:	sbc	r5, r5, r7
   2f43c:	cmp	ip, #0
   2f440:	beq	2f4c8 <fb_value_set_visit@@Base+0xa80>
   2f444:	lsrs	r3, r7, #1
   2f448:	rrx	r2, r6
   2f44c:	mov	r6, ip
   2f450:	b	2f474 <fb_value_set_visit@@Base+0xa2c>
   2f454:	subs	r4, r4, r2
   2f458:	sbc	r5, r5, r3
   2f45c:	adds	r4, r4, r4
   2f460:	adc	r5, r5, r5
   2f464:	adds	r4, r4, #1
   2f468:	adc	r5, r5, #0
   2f46c:	subs	r6, r6, #1
   2f470:	beq	2f490 <fb_value_set_visit@@Base+0xa48>
   2f474:	cmp	r5, r3
   2f478:	cmpeq	r4, r2
   2f47c:	bcs	2f454 <fb_value_set_visit@@Base+0xa0c>
   2f480:	adds	r4, r4, r4
   2f484:	adc	r5, r5, r5
   2f488:	subs	r6, r6, #1
   2f48c:	bne	2f474 <fb_value_set_visit@@Base+0xa2c>
   2f490:	lsr	r6, r4, ip
   2f494:	lsr	r7, r5, ip
   2f498:	orr	r6, r6, r5, lsl r8
   2f49c:	adds	r2, r0, r4
   2f4a0:	orr	r6, r6, r5, lsr lr
   2f4a4:	adc	r3, r1, r5
   2f4a8:	lsl	r1, r7, ip
   2f4ac:	orr	r1, r1, r6, lsl lr
   2f4b0:	lsl	r0, r6, ip
   2f4b4:	orr	r1, r1, r6, lsr r8
   2f4b8:	subs	r0, r2, r0
   2f4bc:	mov	r4, r6
   2f4c0:	mov	r5, r7
   2f4c4:	sbc	r1, r3, r1
   2f4c8:	cmp	r9, #0
   2f4cc:	popeq	{r4, r5, r6, r7, r8, r9, pc}
   2f4d0:	strd	r4, [r9]
   2f4d4:	pop	{r4, r5, r6, r7, r8, r9, pc}

0002f4d8 <__libc_csu_init@@Base>:
   2f4d8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2f4dc:	mov	r7, r0
   2f4e0:	ldr	r6, [pc, #72]	; 2f530 <__libc_csu_init@@Base+0x58>
   2f4e4:	ldr	r5, [pc, #72]	; 2f534 <__libc_csu_init@@Base+0x5c>
   2f4e8:	add	r6, pc, r6
   2f4ec:	add	r5, pc, r5
   2f4f0:	sub	r6, r6, r5
   2f4f4:	mov	r8, r1
   2f4f8:	mov	r9, r2
   2f4fc:	bl	13ec4 <calloc@plt-0x20>
   2f500:	asrs	r6, r6, #2
   2f504:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   2f508:	mov	r4, #0
   2f50c:	add	r4, r4, #1
   2f510:	ldr	r3, [r5], #4
   2f514:	mov	r2, r9
   2f518:	mov	r1, r8
   2f51c:	mov	r0, r7
   2f520:	blx	r3
   2f524:	cmp	r6, r4
   2f528:	bne	2f50c <__libc_csu_init@@Base+0x34>
   2f52c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2f530:	andeq	fp, r2, r0, lsr #20
   2f534:	andeq	fp, r2, r8, lsl sl

0002f538 <__libc_csu_fini@@Base>:
   2f538:	bx	lr

Disassembly of section .fini:

0002f53c <.fini>:
   2f53c:	push	{r3, lr}
   2f540:	pop	{r3, pc}
