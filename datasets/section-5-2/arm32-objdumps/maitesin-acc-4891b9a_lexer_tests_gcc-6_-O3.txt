
../repos/maitesin-acc-4891b9a/bin/lexer_tests:     file format elf32-littlearm


Disassembly of section .init:

00011fa0 <.init>:
   11fa0:	push	{r3, lr}
   11fa4:	bl	1283c <_start@@Base+0x3c>
   11fa8:	pop	{r3, pc}

Disassembly of section .plt:

00011fac <fdopen@plt-0x14>:
   11fac:	push	{lr}		; (str lr, [sp, #-4]!)
   11fb0:	ldr	lr, [pc, #4]	; 11fbc <fdopen@plt-0x4>
   11fb4:	add	lr, pc, lr
   11fb8:	ldr	pc, [lr, #8]!
   11fbc:	andeq	ip, r1, r4, asr #32

00011fc0 <fdopen@plt>:
   11fc0:	add	ip, pc, #0, 12
   11fc4:	add	ip, ip, #28, 20	; 0x1c000
   11fc8:	ldr	pc, [ip, #68]!	; 0x44

00011fcc <raise@plt>:
   11fcc:	add	ip, pc, #0, 12
   11fd0:	add	ip, ip, #28, 20	; 0x1c000
   11fd4:	ldr	pc, [ip, #60]!	; 0x3c

00011fd8 <setbuf@plt>:
   11fd8:	add	ip, pc, #0, 12
   11fdc:	add	ip, ip, #28, 20	; 0x1c000
   11fe0:	ldr	pc, [ip, #52]!	; 0x34

00011fe4 <strtol@plt>:
   11fe4:	add	ip, pc, #0, 12
   11fe8:	add	ip, ip, #28, 20	; 0x1c000
   11fec:	ldr	pc, [ip, #44]!	; 0x2c

00011ff0 <longjmp@plt>:
   11ff0:	add	ip, pc, #0, 12
   11ff4:	add	ip, ip, #28, 20	; 0x1c000
   11ff8:	ldr	pc, [ip, #36]!	; 0x24

00011ffc <_setjmp@plt>:
   11ffc:	add	ip, pc, #0, 12
   12000:	add	ip, ip, #28, 20	; 0x1c000
   12004:	ldr	pc, [ip, #28]!

00012008 <free@plt>:
   12008:	add	ip, pc, #0, 12
   1200c:	add	ip, ip, #28, 20	; 0x1c000
   12010:	ldr	pc, [ip, #20]!

00012014 <memcpy@plt>:
   12014:	add	ip, pc, #0, 12
   12018:	add	ip, ip, #28, 20	; 0x1c000
   1201c:	ldr	pc, [ip, #12]!

00012020 <ftell@plt>:
   12020:	add	ip, pc, #0, 12
   12024:	add	ip, ip, #28, 20	; 0x1c000
   12028:	ldr	pc, [ip, #4]!

0001202c <fwrite@plt>:
   1202c:	add	ip, pc, #0, 12
   12030:	add	ip, ip, #110592	; 0x1b000
   12034:	ldr	pc, [ip, #4092]!	; 0xffc

00012038 <strcpy@plt>:
   12038:	add	ip, pc, #0, 12
   1203c:	add	ip, ip, #110592	; 0x1b000
   12040:	ldr	pc, [ip, #4084]!	; 0xff4

00012044 <fread@plt>:
   12044:	add	ip, pc, #0, 12
   12048:	add	ip, ip, #110592	; 0x1b000
   1204c:	ldr	pc, [ip, #4076]!	; 0xfec

00012050 <getenv@plt>:
   12050:	add	ip, pc, #0, 12
   12054:	add	ip, ip, #110592	; 0x1b000
   12058:	ldr	pc, [ip, #4068]!	; 0xfe4

0001205c <malloc@plt>:
   1205c:	add	ip, pc, #0, 12
   12060:	add	ip, ip, #110592	; 0x1b000
   12064:	ldr	pc, [ip, #4060]!	; 0xfdc

00012068 <__libc_start_main@plt>:
   12068:	add	ip, pc, #0, 12
   1206c:	add	ip, ip, #110592	; 0x1b000
   12070:	ldr	pc, [ip, #4052]!	; 0xfd4

00012074 <__fxstat@plt>:
   12074:	add	ip, pc, #0, 12
   12078:	add	ip, ip, #110592	; 0x1b000
   1207c:	ldr	pc, [ip, #4044]!	; 0xfcc

00012080 <__gmon_start__@plt>:
   12080:	add	ip, pc, #0, 12
   12084:	add	ip, ip, #110592	; 0x1b000
   12088:	ldr	pc, [ip, #4036]!	; 0xfc4

0001208c <open@plt>:
   1208c:	add	ip, pc, #0, 12
   12090:	add	ip, ip, #110592	; 0x1b000
   12094:	ldr	pc, [ip, #4028]!	; 0xfbc

00012098 <getpid@plt>:
   12098:	add	ip, pc, #0, 12
   1209c:	add	ip, ip, #110592	; 0x1b000
   120a0:	ldr	pc, [ip, #4020]!	; 0xfb4

000120a4 <exit@plt>:
   120a4:	add	ip, pc, #0, 12
   120a8:	add	ip, ip, #110592	; 0x1b000
   120ac:	ldr	pc, [ip, #4012]!	; 0xfac

000120b0 <strlen@plt>:
   120b0:	add	ip, pc, #0, 12
   120b4:	add	ip, ip, #110592	; 0x1b000
   120b8:	ldr	pc, [ip, #4004]!	; 0xfa4

000120bc <fprintf@plt>:
   120bc:	add	ip, pc, #0, 12
   120c0:	add	ip, ip, #110592	; 0x1b000
   120c4:	ldr	pc, [ip, #3996]!	; 0xf9c

000120c8 <__errno_location@plt>:
   120c8:	add	ip, pc, #0, 12
   120cc:	add	ip, ip, #110592	; 0x1b000
   120d0:	ldr	pc, [ip, #3988]!	; 0xf94

000120d4 <__cxa_atexit@plt>:
   120d4:	add	ip, pc, #0, 12
   120d8:	add	ip, ip, #110592	; 0x1b000
   120dc:	ldr	pc, [ip, #3980]!	; 0xf8c

000120e0 <mkdir@plt>:
   120e0:	add	ip, pc, #0, 12
   120e4:	add	ip, ip, #110592	; 0x1b000
   120e8:	ldr	pc, [ip, #3972]!	; 0xf84

000120ec <fcntl@plt>:
   120ec:	add	ip, pc, #0, 12
   120f0:	add	ip, ip, #110592	; 0x1b000
   120f4:	ldr	pc, [ip, #3964]!	; 0xf7c

000120f8 <memset@plt>:
   120f8:	add	ip, pc, #0, 12
   120fc:	add	ip, ip, #110592	; 0x1b000
   12100:	ldr	pc, [ip, #3956]!	; 0xf74

00012104 <strncpy@plt>:
   12104:	add	ip, pc, #0, 12
   12108:	add	ip, ip, #110592	; 0x1b000
   1210c:	ldr	pc, [ip, #3948]!	; 0xf6c

00012110 <access@plt>:
   12110:	add	ip, pc, #0, 12
   12114:	add	ip, ip, #110592	; 0x1b000
   12118:	ldr	pc, [ip, #3940]!	; 0xf64

0001211c <fclose@plt>:
   1211c:	add	ip, pc, #0, 12
   12120:	add	ip, ip, #110592	; 0x1b000
   12124:	ldr	pc, [ip, #3932]!	; 0xf5c

00012128 <vfprintf@plt>:
   12128:	add	ip, pc, #0, 12
   1212c:	add	ip, ip, #110592	; 0x1b000
   12130:	ldr	pc, [ip, #3924]!	; 0xf54

00012134 <putc@plt>:
   12134:	add	ip, pc, #0, 12
   12138:	add	ip, ip, #110592	; 0x1b000
   1213c:	ldr	pc, [ip, #3916]!	; 0xf4c

00012140 <atoi@plt>:
   12140:	add	ip, pc, #0, 12
   12144:	add	ip, ip, #110592	; 0x1b000
   12148:	ldr	pc, [ip, #3908]!	; 0xf44

0001214c <fseek@plt>:
   1214c:	add	ip, pc, #0, 12
   12150:	add	ip, ip, #110592	; 0x1b000
   12154:	ldr	pc, [ip, #3900]!	; 0xf3c

00012158 <abort@plt>:
   12158:	add	ip, pc, #0, 12
   1215c:	add	ip, ip, #110592	; 0x1b000
   12160:	ldr	pc, [ip, #3892]!	; 0xf34

00012164 <close@plt>:
   12164:	add	ip, pc, #0, 12
   12168:	add	ip, ip, #110592	; 0x1b000
   1216c:	ldr	pc, [ip, #3884]!	; 0xf2c

Disassembly of section .text:

00012170 <main@@Base-0x184>:
   12170:	ldr	ip, [pc, #356]	; 122dc <close@plt+0x178>
   12174:	push	{r4, r5, r6, r7, r8, lr}
   12178:	mov	r5, r0
   1217c:	ldrd	r2, [ip, #160]	; 0xa0
   12180:	ldr	r0, [pc, #344]	; 122e0 <close@plt+0x17c>
   12184:	mov	r4, r1
   12188:	adds	r2, r2, #1
   1218c:	adc	r3, r3, #0
   12190:	mov	r6, ip
   12194:	strd	r2, [ip, #160]	; 0xa0
   12198:	bl	14b30 <UnityPrint@@Base>
   1219c:	cmp	r5, #0
   121a0:	beq	1220c <close@plt+0xa8>
   121a4:	ldrd	r2, [r6, #168]	; 0xa8
   121a8:	ldr	r7, [pc, #308]	; 122e4 <close@plt+0x180>
   121ac:	mov	r0, #39	; 0x27
   121b0:	adds	r2, r2, #1
   121b4:	adc	r3, r3, #0
   121b8:	ldr	r1, [r7]
   121bc:	strd	r2, [r6, #168]	; 0xa8
   121c0:	bl	12134 <putc@plt>
   121c4:	ldrd	r2, [r6, #184]	; 0xb8
   121c8:	mov	r0, r5
   121cc:	adds	r2, r2, #1
   121d0:	adc	r3, r3, #0
   121d4:	strd	r2, [r6, #184]	; 0xb8
   121d8:	bl	14b30 <UnityPrint@@Base>
   121dc:	ldrd	r2, [r6, #192]	; 0xc0
   121e0:	ldr	r1, [r7]
   121e4:	mov	r0, #39	; 0x27
   121e8:	adds	r2, r2, #1
   121ec:	adc	r3, r3, #0
   121f0:	strd	r2, [r6, #192]	; 0xc0
   121f4:	bl	12134 <putc@plt>
   121f8:	ldrd	r2, [r6, #200]	; 0xc8
   121fc:	adds	r2, r2, #1
   12200:	adc	r3, r3, #0
   12204:	strd	r2, [r6, #200]	; 0xc8
   12208:	b	12234 <close@plt+0xd0>
   1220c:	ldrd	r2, [r6, #176]	; 0xb0
   12210:	ldr	r0, [pc, #208]	; 122e8 <close@plt+0x184>
   12214:	adds	r2, r2, #1
   12218:	adc	r3, r3, #0
   1221c:	strd	r2, [r6, #176]	; 0xb0
   12220:	bl	14b30 <UnityPrint@@Base>
   12224:	ldrd	r2, [r6, #208]	; 0xd0
   12228:	adds	r2, r2, #1
   1222c:	adc	r3, r3, #0
   12230:	strd	r2, [r6, #208]	; 0xd0
   12234:	ldr	r0, [pc, #176]	; 122ec <close@plt+0x188>
   12238:	bl	14b30 <UnityPrint@@Base>
   1223c:	cmp	r4, #0
   12240:	beq	122ac <close@plt+0x148>
   12244:	ldrd	r2, [r6, #216]	; 0xd8
   12248:	ldr	r5, [pc, #148]	; 122e4 <close@plt+0x180>
   1224c:	mov	r0, #39	; 0x27
   12250:	adds	r2, r2, #1
   12254:	adc	r3, r3, #0
   12258:	ldr	r1, [r5]
   1225c:	strd	r2, [r6, #216]	; 0xd8
   12260:	bl	12134 <putc@plt>
   12264:	ldrd	r2, [r6, #232]	; 0xe8
   12268:	mov	r0, r4
   1226c:	adds	r2, r2, #1
   12270:	adc	r3, r3, #0
   12274:	strd	r2, [r6, #232]	; 0xe8
   12278:	bl	14b30 <UnityPrint@@Base>
   1227c:	ldrd	r2, [r6, #240]	; 0xf0
   12280:	ldr	r1, [r5]
   12284:	mov	r0, #39	; 0x27
   12288:	adds	r2, r2, #1
   1228c:	adc	r3, r3, #0
   12290:	strd	r2, [r6, #240]	; 0xf0
   12294:	bl	12134 <putc@plt>
   12298:	ldrd	r2, [r6, #248]	; 0xf8
   1229c:	adds	r2, r2, #1
   122a0:	adc	r3, r3, #0
   122a4:	strd	r2, [r6, #248]	; 0xf8
   122a8:	pop	{r4, r5, r6, r7, r8, pc}
   122ac:	ldrd	r2, [r6, #224]	; 0xe0
   122b0:	ldr	r0, [pc, #48]	; 122e8 <close@plt+0x184>
   122b4:	adds	r2, r2, #1
   122b8:	adc	r3, r3, #0
   122bc:	strd	r2, [r6, #224]	; 0xe0
   122c0:	bl	14b30 <UnityPrint@@Base>
   122c4:	ldr	r1, [pc, #36]	; 122f0 <close@plt+0x18c>
   122c8:	ldrd	r2, [r1]
   122cc:	adds	r2, r2, #1
   122d0:	adc	r3, r3, #0
   122d4:	strd	r2, [r1]
   122d8:	pop	{r4, r5, r6, r7, r8, pc}
   122dc:	andeq	pc, r2, r0, lsl #10
   122e0:	andeq	sp, r1, r0, ror #4
   122e4:	andeq	lr, r2, r4, asr #24
   122e8:	andeq	sp, r1, ip, ror #4
   122ec:	andeq	sp, r1, r4, ror r2
   122f0:	andeq	pc, r2, r0, lsl #12

000122f4 <main@@Base>:
   122f4:	push	{r4, r6, r7, lr}
   122f8:	ldr	r4, [pc, #924]	; 1269c <main@@Base+0x3a8>
   122fc:	ldr	r0, [pc, #924]	; 126a0 <main@@Base+0x3ac>
   12300:	ldrd	r2, [r4]
   12304:	adds	r2, r2, #1
   12308:	adc	r3, r3, #0
   1230c:	strd	r2, [r4]
   12310:	bl	18eb8 <UnityBegin@@Base>
   12314:	ldrd	r6, [r4, #8]
   12318:	ldr	r2, [pc, #900]	; 126a4 <main@@Base+0x3b0>
   1231c:	ldr	r1, [pc, #900]	; 126a8 <main@@Base+0x3b4>
   12320:	adds	r6, r6, #1
   12324:	adc	r7, r7, #0
   12328:	ldr	r0, [pc, #892]	; 126ac <main@@Base+0x3b8>
   1232c:	strd	r6, [r4, #8]
   12330:	bl	18d78 <UnityDefaultTestRun@@Base>
   12334:	ldrd	r6, [r4, #16]
   12338:	ldr	r2, [pc, #880]	; 126b0 <main@@Base+0x3bc>
   1233c:	ldr	r1, [pc, #880]	; 126b4 <main@@Base+0x3c0>
   12340:	adds	r6, r6, #1
   12344:	adc	r7, r7, #0
   12348:	ldr	r0, [pc, #872]	; 126b8 <main@@Base+0x3c4>
   1234c:	strd	r6, [r4, #16]
   12350:	bl	18d78 <UnityDefaultTestRun@@Base>
   12354:	ldrd	r6, [r4, #24]
   12358:	ldr	r2, [pc, #860]	; 126bc <main@@Base+0x3c8>
   1235c:	ldr	r1, [pc, #860]	; 126c0 <main@@Base+0x3cc>
   12360:	adds	r6, r6, #1
   12364:	adc	r7, r7, #0
   12368:	ldr	r0, [pc, #852]	; 126c4 <main@@Base+0x3d0>
   1236c:	strd	r6, [r4, #24]
   12370:	bl	18d78 <UnityDefaultTestRun@@Base>
   12374:	ldrd	r6, [r4, #32]
   12378:	mov	r2, #632	; 0x278
   1237c:	ldr	r1, [pc, #836]	; 126c8 <main@@Base+0x3d4>
   12380:	adds	r6, r6, #1
   12384:	adc	r7, r7, #0
   12388:	ldr	r0, [pc, #828]	; 126cc <main@@Base+0x3d8>
   1238c:	strd	r6, [r4, #32]
   12390:	bl	18d78 <UnityDefaultTestRun@@Base>
   12394:	ldrd	r6, [r4, #40]	; 0x28
   12398:	ldr	r2, [pc, #816]	; 126d0 <main@@Base+0x3dc>
   1239c:	ldr	r1, [pc, #816]	; 126d4 <main@@Base+0x3e0>
   123a0:	adds	r6, r6, #1
   123a4:	adc	r7, r7, #0
   123a8:	ldr	r0, [pc, #808]	; 126d8 <main@@Base+0x3e4>
   123ac:	strd	r6, [r4, #40]	; 0x28
   123b0:	bl	18d78 <UnityDefaultTestRun@@Base>
   123b4:	ldrd	r6, [r4, #48]	; 0x30
   123b8:	ldr	r2, [pc, #796]	; 126dc <main@@Base+0x3e8>
   123bc:	ldr	r1, [pc, #796]	; 126e0 <main@@Base+0x3ec>
   123c0:	adds	r6, r6, #1
   123c4:	adc	r7, r7, #0
   123c8:	ldr	r0, [pc, #788]	; 126e4 <main@@Base+0x3f0>
   123cc:	strd	r6, [r4, #48]	; 0x30
   123d0:	bl	18d78 <UnityDefaultTestRun@@Base>
   123d4:	ldrd	r6, [r4, #56]	; 0x38
   123d8:	ldr	r2, [pc, #776]	; 126e8 <main@@Base+0x3f4>
   123dc:	ldr	r1, [pc, #776]	; 126ec <main@@Base+0x3f8>
   123e0:	adds	r6, r6, #1
   123e4:	adc	r7, r7, #0
   123e8:	ldr	r0, [pc, #768]	; 126f0 <main@@Base+0x3fc>
   123ec:	strd	r6, [r4, #56]	; 0x38
   123f0:	bl	18d78 <UnityDefaultTestRun@@Base>
   123f4:	ldrd	r6, [r4, #64]	; 0x40
   123f8:	mov	r2, #636	; 0x27c
   123fc:	ldr	r1, [pc, #752]	; 126f4 <main@@Base+0x400>
   12400:	adds	r6, r6, #1
   12404:	adc	r7, r7, #0
   12408:	ldr	r0, [pc, #744]	; 126f8 <main@@Base+0x404>
   1240c:	strd	r6, [r4, #64]	; 0x40
   12410:	bl	18d78 <UnityDefaultTestRun@@Base>
   12414:	ldrd	r6, [r4, #72]	; 0x48
   12418:	ldr	r2, [pc, #732]	; 126fc <main@@Base+0x408>
   1241c:	ldr	r1, [pc, #732]	; 12700 <main@@Base+0x40c>
   12420:	adds	r6, r6, #1
   12424:	adc	r7, r7, #0
   12428:	ldr	r0, [pc, #724]	; 12704 <main@@Base+0x410>
   1242c:	strd	r6, [r4, #72]	; 0x48
   12430:	bl	18d78 <UnityDefaultTestRun@@Base>
   12434:	ldrd	r6, [r4, #80]	; 0x50
   12438:	ldr	r2, [pc, #712]	; 12708 <main@@Base+0x414>
   1243c:	ldr	r1, [pc, #712]	; 1270c <main@@Base+0x418>
   12440:	adds	r6, r6, #1
   12444:	adc	r7, r7, #0
   12448:	ldr	r0, [pc, #704]	; 12710 <main@@Base+0x41c>
   1244c:	strd	r6, [r4, #80]	; 0x50
   12450:	bl	18d78 <UnityDefaultTestRun@@Base>
   12454:	ldrd	r6, [r4, #88]	; 0x58
   12458:	ldr	r2, [pc, #692]	; 12714 <main@@Base+0x420>
   1245c:	ldr	r1, [pc, #692]	; 12718 <main@@Base+0x424>
   12460:	adds	r6, r6, #1
   12464:	adc	r7, r7, #0
   12468:	ldr	r0, [pc, #684]	; 1271c <main@@Base+0x428>
   1246c:	strd	r6, [r4, #88]	; 0x58
   12470:	bl	18d78 <UnityDefaultTestRun@@Base>
   12474:	ldrd	r6, [r4, #96]	; 0x60
   12478:	mov	r2, #640	; 0x280
   1247c:	ldr	r1, [pc, #668]	; 12720 <main@@Base+0x42c>
   12480:	adds	r6, r6, #1
   12484:	adc	r7, r7, #0
   12488:	ldr	r0, [pc, #660]	; 12724 <main@@Base+0x430>
   1248c:	strd	r6, [r4, #96]	; 0x60
   12490:	bl	18d78 <UnityDefaultTestRun@@Base>
   12494:	ldrd	r6, [r4, #104]	; 0x68
   12498:	ldr	r2, [pc, #648]	; 12728 <main@@Base+0x434>
   1249c:	ldr	r1, [pc, #648]	; 1272c <main@@Base+0x438>
   124a0:	adds	r6, r6, #1
   124a4:	adc	r7, r7, #0
   124a8:	ldr	r0, [pc, #640]	; 12730 <main@@Base+0x43c>
   124ac:	strd	r6, [r4, #104]	; 0x68
   124b0:	bl	18d78 <UnityDefaultTestRun@@Base>
   124b4:	ldrd	r6, [r4, #112]	; 0x70
   124b8:	ldr	r2, [pc, #628]	; 12734 <main@@Base+0x440>
   124bc:	ldr	r1, [pc, #628]	; 12738 <main@@Base+0x444>
   124c0:	adds	r6, r6, #1
   124c4:	adc	r7, r7, #0
   124c8:	ldr	r0, [pc, #620]	; 1273c <main@@Base+0x448>
   124cc:	strd	r6, [r4, #112]	; 0x70
   124d0:	bl	18d78 <UnityDefaultTestRun@@Base>
   124d4:	ldrd	r6, [r4, #120]	; 0x78
   124d8:	ldr	r2, [pc, #608]	; 12740 <main@@Base+0x44c>
   124dc:	ldr	r1, [pc, #608]	; 12744 <main@@Base+0x450>
   124e0:	adds	r6, r6, #1
   124e4:	adc	r7, r7, #0
   124e8:	ldr	r0, [pc, #600]	; 12748 <main@@Base+0x454>
   124ec:	strd	r6, [r4, #120]	; 0x78
   124f0:	bl	18d78 <UnityDefaultTestRun@@Base>
   124f4:	ldrd	r6, [r4, #128]	; 0x80
   124f8:	mov	r2, #644	; 0x284
   124fc:	ldr	r1, [pc, #584]	; 1274c <main@@Base+0x458>
   12500:	adds	r6, r6, #1
   12504:	adc	r7, r7, #0
   12508:	ldr	r0, [pc, #576]	; 12750 <main@@Base+0x45c>
   1250c:	strd	r6, [r4, #128]	; 0x80
   12510:	bl	18d78 <UnityDefaultTestRun@@Base>
   12514:	ldrd	r6, [r4, #136]	; 0x88
   12518:	ldr	r2, [pc, #564]	; 12754 <main@@Base+0x460>
   1251c:	ldr	r1, [pc, #564]	; 12758 <main@@Base+0x464>
   12520:	adds	r6, r6, #1
   12524:	adc	r7, r7, #0
   12528:	ldr	r0, [pc, #556]	; 1275c <main@@Base+0x468>
   1252c:	strd	r6, [r4, #136]	; 0x88
   12530:	bl	18d78 <UnityDefaultTestRun@@Base>
   12534:	ldrd	r6, [r4, #144]	; 0x90
   12538:	ldr	r2, [pc, #544]	; 12760 <main@@Base+0x46c>
   1253c:	ldr	r1, [pc, #544]	; 12764 <main@@Base+0x470>
   12540:	adds	r6, r6, #1
   12544:	adc	r7, r7, #0
   12548:	ldr	r0, [pc, #536]	; 12768 <main@@Base+0x474>
   1254c:	strd	r6, [r4, #144]	; 0x90
   12550:	bl	18d78 <UnityDefaultTestRun@@Base>
   12554:	ldrd	r6, [r4, #152]	; 0x98
   12558:	ldr	r2, [pc, #524]	; 1276c <main@@Base+0x478>
   1255c:	ldr	r1, [pc, #524]	; 12770 <main@@Base+0x47c>
   12560:	adds	r6, r6, #1
   12564:	adc	r7, r7, #0
   12568:	ldr	r0, [pc, #516]	; 12774 <main@@Base+0x480>
   1256c:	strd	r6, [r4, #152]	; 0x98
   12570:	bl	18d78 <UnityDefaultTestRun@@Base>
   12574:	ldrd	r6, [r4, #160]	; 0xa0
   12578:	mov	r2, #648	; 0x288
   1257c:	ldr	r1, [pc, #500]	; 12778 <main@@Base+0x484>
   12580:	adds	r6, r6, #1
   12584:	adc	r7, r7, #0
   12588:	ldr	r0, [pc, #492]	; 1277c <main@@Base+0x488>
   1258c:	strd	r6, [r4, #160]	; 0xa0
   12590:	bl	18d78 <UnityDefaultTestRun@@Base>
   12594:	ldrd	r6, [r4, #168]	; 0xa8
   12598:	ldr	r2, [pc, #480]	; 12780 <main@@Base+0x48c>
   1259c:	ldr	r1, [pc, #480]	; 12784 <main@@Base+0x490>
   125a0:	adds	r6, r6, #1
   125a4:	adc	r7, r7, #0
   125a8:	ldr	r0, [pc, #472]	; 12788 <main@@Base+0x494>
   125ac:	strd	r6, [r4, #168]	; 0xa8
   125b0:	bl	18d78 <UnityDefaultTestRun@@Base>
   125b4:	ldrd	r6, [r4, #176]	; 0xb0
   125b8:	ldr	r2, [pc, #460]	; 1278c <main@@Base+0x498>
   125bc:	ldr	r1, [pc, #460]	; 12790 <main@@Base+0x49c>
   125c0:	adds	r6, r6, #1
   125c4:	adc	r7, r7, #0
   125c8:	ldr	r0, [pc, #452]	; 12794 <main@@Base+0x4a0>
   125cc:	strd	r6, [r4, #176]	; 0xb0
   125d0:	bl	18d78 <UnityDefaultTestRun@@Base>
   125d4:	ldrd	r6, [r4, #184]	; 0xb8
   125d8:	ldr	r2, [pc, #440]	; 12798 <main@@Base+0x4a4>
   125dc:	ldr	r1, [pc, #440]	; 1279c <main@@Base+0x4a8>
   125e0:	adds	r6, r6, #1
   125e4:	adc	r7, r7, #0
   125e8:	ldr	r0, [pc, #432]	; 127a0 <main@@Base+0x4ac>
   125ec:	strd	r6, [r4, #184]	; 0xb8
   125f0:	bl	18d78 <UnityDefaultTestRun@@Base>
   125f4:	ldrd	r6, [r4, #192]	; 0xc0
   125f8:	mov	r2, #652	; 0x28c
   125fc:	ldr	r1, [pc, #416]	; 127a4 <main@@Base+0x4b0>
   12600:	adds	r6, r6, #1
   12604:	adc	r7, r7, #0
   12608:	ldr	r0, [pc, #408]	; 127a8 <main@@Base+0x4b4>
   1260c:	strd	r6, [r4, #192]	; 0xc0
   12610:	bl	18d78 <UnityDefaultTestRun@@Base>
   12614:	ldrd	r6, [r4, #200]	; 0xc8
   12618:	ldr	r2, [pc, #396]	; 127ac <main@@Base+0x4b8>
   1261c:	ldr	r1, [pc, #396]	; 127b0 <main@@Base+0x4bc>
   12620:	adds	r6, r6, #1
   12624:	adc	r7, r7, #0
   12628:	ldr	r0, [pc, #388]	; 127b4 <main@@Base+0x4c0>
   1262c:	strd	r6, [r4, #200]	; 0xc8
   12630:	bl	18d78 <UnityDefaultTestRun@@Base>
   12634:	ldrd	r6, [r4, #208]	; 0xd0
   12638:	ldr	r2, [pc, #376]	; 127b8 <main@@Base+0x4c4>
   1263c:	ldr	r1, [pc, #376]	; 127bc <main@@Base+0x4c8>
   12640:	adds	r6, r6, #1
   12644:	adc	r7, r7, #0
   12648:	ldr	r0, [pc, #368]	; 127c0 <main@@Base+0x4cc>
   1264c:	strd	r6, [r4, #208]	; 0xd0
   12650:	bl	18d78 <UnityDefaultTestRun@@Base>
   12654:	ldrd	r6, [r4, #216]	; 0xd8
   12658:	ldr	r1, [pc, #356]	; 127c4 <main@@Base+0x4d0>
   1265c:	ldr	r2, [pc, #356]	; 127c8 <main@@Base+0x4d4>
   12660:	adds	r6, r6, #1
   12664:	adc	r7, r7, #0
   12668:	ldr	r0, [pc, #348]	; 127cc <main@@Base+0x4d8>
   1266c:	strd	r6, [r4, #216]	; 0xd8
   12670:	bl	18d78 <UnityDefaultTestRun@@Base>
   12674:	ldrd	r2, [r4, #224]	; 0xe0
   12678:	adds	r2, r2, #1
   1267c:	adc	r3, r3, #0
   12680:	strd	r2, [r4, #224]	; 0xe0
   12684:	bl	18f0c <UnityEnd@@Base>
   12688:	ldrd	r2, [r4, #232]	; 0xe8
   1268c:	adds	r2, r2, #1
   12690:	adc	r3, r3, #0
   12694:	strd	r2, [r4, #232]	; 0xe8
   12698:	pop	{r4, r6, r7, pc}
   1269c:	andeq	pc, r2, r0, lsl r4	; <UNPREDICTABLE>
   126a0:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   126a4:	andeq	r0, r0, r5, ror r2
   126a8:	ldrdeq	ip, [r1], -r8
   126ac:	muleq	r1, r4, r4
   126b0:	andeq	r0, r0, r6, ror r2
   126b4:	strdeq	ip, [r1], -r0
   126b8:	andeq	r4, r1, r8, ror #18
   126bc:	andeq	r0, r0, r7, ror r2
   126c0:	andeq	sp, r1, r4
   126c4:	andeq	r4, r1, ip, asr #16
   126c8:	andeq	sp, r1, r0, lsr #32
   126cc:	andeq	r4, r1, r8, ror r7
   126d0:	andeq	r0, r0, r9, ror r2
   126d4:	andeq	sp, r1, ip, lsr r0
   126d8:	andeq	r3, r1, r4, lsr #29
   126dc:	andeq	r0, r0, sl, ror r2
   126e0:	andeq	sp, r1, ip, asr #32
   126e4:	andeq	r3, r1, r0, ror #13
   126e8:	andeq	r0, r0, fp, ror r2
   126ec:	andeq	sp, r1, ip, asr r0
   126f0:	andeq	r3, r1, r8, lsr r6
   126f4:	andeq	sp, r1, r0, ror r0
   126f8:	muleq	r1, r4, r5
   126fc:	andeq	r0, r0, sp, ror r2
   12700:	andeq	sp, r1, r8, lsl #1
   12704:	andeq	r3, r1, ip, ror #9
   12708:	andeq	r0, r0, lr, ror r2
   1270c:	muleq	r1, ip, r0
   12710:	andeq	r3, r1, r4, asr #8
   12714:	andeq	r0, r0, pc, ror r2
   12718:	andeq	sp, r1, ip, lsr #1
   1271c:	muleq	r1, ip, r3
   12720:	strheq	sp, [r1], -ip
   12724:	strdeq	r3, [r1], -r8
   12728:	andeq	r0, r0, r1, lsl #5
   1272c:	andeq	sp, r1, ip, asr #1
   12730:	andeq	r3, r1, r0, asr r2
   12734:	andeq	r0, r0, r2, lsl #5
   12738:	ldrdeq	sp, [r1], -ip
   1273c:	andeq	r3, r1, r8, lsr #3
   12740:	andeq	r0, r0, r3, lsl #5
   12744:	strdeq	sp, [r1], -r0
   12748:	andeq	r3, r1, r4, lsl #2
   1274c:	andeq	sp, r1, r8, lsl #2
   12750:	andeq	r3, r1, ip, asr r0
   12754:	andeq	r0, r0, r5, lsl #5
   12758:	andeq	sp, r1, r8, lsl r1
   1275c:			; <UNDEFINED> instruction: 0x00012fb4
   12760:	andeq	r0, r0, r6, lsl #5
   12764:	andeq	sp, r1, r8, lsr #2
   12768:	andeq	r2, r1, ip, lsl #30
   1276c:	andeq	r0, r0, r7, lsl #5
   12770:	andeq	sp, r1, r8, lsr r1
   12774:	andeq	r2, r1, r8, ror #28
   12778:	andeq	sp, r1, r0, asr r1
   1277c:	andeq	r2, r1, r0, asr #27
   12780:	andeq	r0, r0, r9, lsl #5
   12784:	andeq	sp, r1, r4, ror #2
   12788:	andeq	r2, r1, r0, lsl sp
   1278c:	andeq	r0, r0, sl, lsl #5
   12790:	andeq	sp, r1, r0, lsl #3
   12794:	andeq	r2, r1, ip, lsl fp
   12798:	andeq	r0, r0, fp, lsl #5
   1279c:	muleq	r1, ip, r1
   127a0:	andeq	r2, r1, r8, ror #24
   127a4:	andeq	sp, r1, ip, lsr #3
   127a8:	andeq	r2, r1, r4, asr #23
   127ac:	andeq	r0, r0, sp, lsl #5
   127b0:	andeq	sp, r1, r0, asr #3
   127b4:	andeq	r2, r1, r4, ror sl
   127b8:	andeq	r0, r0, lr, lsl #5
   127bc:	ldrdeq	sp, [r1], -r4
   127c0:	andeq	r2, r1, ip, asr #19
   127c4:	andeq	sp, r1, ip, ror #3
   127c8:	andeq	r0, r0, pc, lsl #5
   127cc:	andeq	r2, r1, r8, lsr #18
   127d0:	ldr	r0, [pc]	; 127d8 <main@@Base+0x4e4>
   127d4:	b	1c8c4 <__gcov_sort_n_vals@@Base+0x458>
   127d8:	strheq	lr, [r2], -r4
   127dc:	ldr	r0, [pc]	; 127e4 <main@@Base+0x4f0>
   127e0:	b	1c8c4 <__gcov_sort_n_vals@@Base+0x458>
   127e4:	andeq	lr, r2, r4, lsl #8
   127e8:	ldr	r0, [pc]	; 127f0 <main@@Base+0x4fc>
   127ec:	b	1c8c4 <__gcov_sort_n_vals@@Base+0x458>
   127f0:	strdeq	lr, [r2], -ip
   127f4:	ldr	r0, [pc]	; 127fc <main@@Base+0x508>
   127f8:	b	1c8c4 <__gcov_sort_n_vals@@Base+0x458>
   127fc:	andeq	lr, r2, r4, lsl fp

00012800 <_start@@Base>:
   12800:	mov	fp, #0
   12804:	mov	lr, #0
   12808:	pop	{r1}		; (ldr r1, [sp], #4)
   1280c:	mov	r2, sp
   12810:	push	{r2}		; (str r2, [sp, #-4]!)
   12814:	push	{r0}		; (str r0, [sp, #-4]!)
   12818:	ldr	ip, [pc, #16]	; 12830 <_start@@Base+0x30>
   1281c:	push	{ip}		; (str ip, [sp, #-4]!)
   12820:	ldr	r0, [pc, #12]	; 12834 <_start@@Base+0x34>
   12824:	ldr	r3, [pc, #12]	; 12838 <_start@@Base+0x38>
   12828:	bl	12068 <__libc_start_main@plt>
   1282c:	bl	12158 <abort@plt>
   12830:	andeq	ip, r1, ip, asr lr
   12834:	strdeq	r2, [r1], -r4
   12838:	strdeq	ip, [r1], -ip	; <UNPREDICTABLE>
   1283c:	ldr	r3, [pc, #20]	; 12858 <_start@@Base+0x58>
   12840:	ldr	r2, [pc, #20]	; 1285c <_start@@Base+0x5c>
   12844:	add	r3, pc, r3
   12848:	ldr	r2, [r3, r2]
   1284c:	cmp	r2, #0
   12850:	bxeq	lr
   12854:	b	12080 <__gmon_start__@plt>
   12858:			; <UNDEFINED> instruction: 0x0001b7b4
   1285c:	andeq	r0, r0, r0, lsr #1
   12860:	ldr	r3, [pc, #28]	; 12884 <_start@@Base+0x84>
   12864:	ldr	r0, [pc, #28]	; 12888 <_start@@Base+0x88>
   12868:	sub	r3, r3, r0
   1286c:	cmp	r3, #6
   12870:	bxls	lr
   12874:	ldr	r3, [pc, #16]	; 1288c <_start@@Base+0x8c>
   12878:	cmp	r3, #0
   1287c:	bxeq	lr
   12880:	bx	r3
   12884:	andeq	lr, r2, pc, lsr ip
   12888:	andeq	lr, r2, ip, lsr ip
   1288c:	andeq	r0, r0, r0
   12890:	ldr	r1, [pc, #36]	; 128bc <_start@@Base+0xbc>
   12894:	ldr	r0, [pc, #36]	; 128c0 <_start@@Base+0xc0>
   12898:	sub	r1, r1, r0
   1289c:	asr	r1, r1, #2
   128a0:	add	r1, r1, r1, lsr #31
   128a4:	asrs	r1, r1, #1
   128a8:	bxeq	lr
   128ac:	ldr	r3, [pc, #16]	; 128c4 <_start@@Base+0xc4>
   128b0:	cmp	r3, #0
   128b4:	bxeq	lr
   128b8:	bx	r3
   128bc:	andeq	lr, r2, ip, lsr ip
   128c0:	andeq	lr, r2, ip, lsr ip
   128c4:	andeq	r0, r0, r0
   128c8:	push	{r4, lr}
   128cc:	ldr	r4, [pc, #24]	; 128ec <_start@@Base+0xec>
   128d0:	ldrb	r3, [r4]
   128d4:	cmp	r3, #0
   128d8:	popne	{r4, pc}
   128dc:	bl	12860 <_start@@Base+0x60>
   128e0:	mov	r3, #1
   128e4:	strb	r3, [r4]
   128e8:	pop	{r4, pc}
   128ec:	andeq	lr, r2, r8, asr #24
   128f0:	ldr	r0, [pc, #40]	; 12920 <_start@@Base+0x120>
   128f4:	ldr	r3, [r0]
   128f8:	cmp	r3, #0
   128fc:	bne	12904 <_start@@Base+0x104>
   12900:	b	12890 <_start@@Base+0x90>
   12904:	ldr	r3, [pc, #24]	; 12924 <_start@@Base+0x124>
   12908:	cmp	r3, #0
   1290c:	beq	12900 <_start@@Base+0x100>
   12910:	push	{r4, lr}
   12914:	blx	r3
   12918:	pop	{r4, lr}
   1291c:	b	12890 <_start@@Base+0x90>
   12920:	andeq	sp, r2, r4, lsl pc
   12924:	andeq	r0, r0, r0

00012928 <read_token_not@@Base>:
   12928:	push	{r4, r6, r7, lr}
   1292c:	sub	sp, sp, #24
   12930:	ldr	r4, [pc, #140]	; 129c4 <read_token_not@@Base+0x9c>
   12934:	add	r0, sp, #12
   12938:	ldr	r1, [pc, #136]	; 129c8 <read_token_not@@Base+0xa0>
   1293c:	ldrd	r2, [r4]
   12940:	adds	r2, r2, #1
   12944:	adc	r3, r3, #0
   12948:	strd	r2, [r4]
   1294c:	bl	19448 <init_lexer@@Base>
   12950:	ldrd	r2, [r4, #8]
   12954:	add	r0, sp, #12
   12958:	adds	r2, r2, #1
   1295c:	adc	r3, r3, #0
   12960:	strd	r2, [r4, #8]
   12964:	bl	1965c <next@@Base>
   12968:	ldrd	r6, [r4, #16]
   1296c:	mov	ip, #148	; 0x94
   12970:	mov	r3, #620	; 0x26c
   12974:	adds	r6, r6, #1
   12978:	adc	r7, r7, #0
   1297c:	mov	r2, #0
   12980:	strd	r6, [r4, #16]
   12984:	ldr	r1, [r0]
   12988:	str	ip, [sp]
   1298c:	mov	r0, #12
   12990:	bl	15e24 <UnityAssertEqualNumber@@Base>
   12994:	ldrd	r2, [r4, #24]
   12998:	add	r0, sp, #12
   1299c:	adds	r2, r2, #1
   129a0:	adc	r3, r3, #0
   129a4:	strd	r2, [r4, #24]
   129a8:	bl	19474 <destroy_lexer@@Base>
   129ac:	ldrd	r2, [r4, #32]
   129b0:	adds	r2, r2, #1
   129b4:	adc	r3, r3, #0
   129b8:	strd	r2, [r4, #32]
   129bc:	add	sp, sp, #24
   129c0:	pop	{r4, r6, r7, pc}
   129c4:	andeq	lr, r2, r0, asr ip
   129c8:	muleq	r1, r4, lr

000129cc <read_token_greaterthan@@Base>:
   129cc:	push	{r4, r6, r7, lr}
   129d0:	sub	sp, sp, #24
   129d4:	ldr	r4, [pc, #140]	; 12a68 <read_token_greaterthan@@Base+0x9c>
   129d8:	add	r0, sp, #12
   129dc:	ldr	r1, [pc, #136]	; 12a6c <read_token_greaterthan@@Base+0xa0>
   129e0:	ldrd	r2, [r4, #40]	; 0x28
   129e4:	adds	r2, r2, #1
   129e8:	adc	r3, r3, #0
   129ec:	strd	r2, [r4, #40]	; 0x28
   129f0:	bl	19448 <init_lexer@@Base>
   129f4:	ldrd	r2, [r4, #48]	; 0x30
   129f8:	add	r0, sp, #12
   129fc:	adds	r2, r2, #1
   12a00:	adc	r3, r3, #0
   12a04:	strd	r2, [r4, #48]	; 0x30
   12a08:	bl	1965c <next@@Base>
   12a0c:	ldrd	r6, [r4, #56]	; 0x38
   12a10:	mov	ip, #148	; 0x94
   12a14:	ldr	r3, [pc, #84]	; 12a70 <read_token_greaterthan@@Base+0xa4>
   12a18:	adds	r6, r6, #1
   12a1c:	adc	r7, r7, #0
   12a20:	mov	r2, #0
   12a24:	strd	r6, [r4, #56]	; 0x38
   12a28:	ldr	r1, [r0]
   12a2c:	str	ip, [sp]
   12a30:	mov	r0, #12
   12a34:	bl	15e24 <UnityAssertEqualNumber@@Base>
   12a38:	ldrd	r2, [r4, #64]	; 0x40
   12a3c:	add	r0, sp, #12
   12a40:	adds	r2, r2, #1
   12a44:	adc	r3, r3, #0
   12a48:	strd	r2, [r4, #64]	; 0x40
   12a4c:	bl	19474 <destroy_lexer@@Base>
   12a50:	ldrd	r2, [r4, #72]	; 0x48
   12a54:	adds	r2, r2, #1
   12a58:	adc	r3, r3, #0
   12a5c:	strd	r2, [r4, #72]	; 0x48
   12a60:	add	sp, sp, #24
   12a64:	pop	{r4, r6, r7, pc}
   12a68:	andeq	lr, r2, r0, asr ip
   12a6c:	muleq	r1, r8, lr
   12a70:	andeq	r0, r0, fp, asr r2

00012a74 <read_token_lessthan@@Base>:
   12a74:	push	{r4, r6, r7, lr}
   12a78:	sub	sp, sp, #24
   12a7c:	ldr	r4, [pc, #140]	; 12b10 <read_token_lessthan@@Base+0x9c>
   12a80:	add	r0, sp, #12
   12a84:	ldr	r1, [pc, #136]	; 12b14 <read_token_lessthan@@Base+0xa0>
   12a88:	ldrd	r2, [r4, #80]	; 0x50
   12a8c:	adds	r2, r2, #1
   12a90:	adc	r3, r3, #0
   12a94:	strd	r2, [r4, #80]	; 0x50
   12a98:	bl	19448 <init_lexer@@Base>
   12a9c:	ldrd	r2, [r4, #88]	; 0x58
   12aa0:	add	r0, sp, #12
   12aa4:	adds	r2, r2, #1
   12aa8:	adc	r3, r3, #0
   12aac:	strd	r2, [r4, #88]	; 0x58
   12ab0:	bl	1965c <next@@Base>
   12ab4:	ldrd	r6, [r4, #96]	; 0x60
   12ab8:	mov	ip, #148	; 0x94
   12abc:	ldr	r3, [pc, #84]	; 12b18 <read_token_lessthan@@Base+0xa4>
   12ac0:	adds	r6, r6, #1
   12ac4:	adc	r7, r7, #0
   12ac8:	mov	r2, #0
   12acc:	strd	r6, [r4, #96]	; 0x60
   12ad0:	ldr	r1, [r0]
   12ad4:	str	ip, [sp]
   12ad8:	mov	r0, #12
   12adc:	bl	15e24 <UnityAssertEqualNumber@@Base>
   12ae0:	ldrd	r2, [r4, #104]	; 0x68
   12ae4:	add	r0, sp, #12
   12ae8:	adds	r2, r2, #1
   12aec:	adc	r3, r3, #0
   12af0:	strd	r2, [r4, #104]	; 0x68
   12af4:	bl	19474 <destroy_lexer@@Base>
   12af8:	ldrd	r2, [r4, #112]	; 0x70
   12afc:	adds	r2, r2, #1
   12b00:	adc	r3, r3, #0
   12b04:	strd	r2, [r4, #112]	; 0x70
   12b08:	add	sp, sp, #24
   12b0c:	pop	{r4, r6, r7, pc}
   12b10:	andeq	lr, r2, r0, asr ip
   12b14:	muleq	r1, ip, lr
   12b18:	andeq	r0, r0, sl, asr #4

00012b1c <read_token_greaterequalthan@@Base>:
   12b1c:	push	{r4, r6, r7, lr}
   12b20:	sub	sp, sp, #24
   12b24:	ldr	r4, [pc, #140]	; 12bb8 <read_token_greaterequalthan@@Base+0x9c>
   12b28:	add	r0, sp, #12
   12b2c:	ldr	r1, [pc, #136]	; 12bbc <read_token_greaterequalthan@@Base+0xa0>
   12b30:	ldrd	r2, [r4, #120]	; 0x78
   12b34:	adds	r2, r2, #1
   12b38:	adc	r3, r3, #0
   12b3c:	strd	r2, [r4, #120]	; 0x78
   12b40:	bl	19448 <init_lexer@@Base>
   12b44:	ldrd	r2, [r4, #128]	; 0x80
   12b48:	add	r0, sp, #12
   12b4c:	adds	r2, r2, #1
   12b50:	adc	r3, r3, #0
   12b54:	strd	r2, [r4, #128]	; 0x80
   12b58:	bl	1965c <next@@Base>
   12b5c:	ldrd	r6, [r4, #136]	; 0x88
   12b60:	mov	ip, #148	; 0x94
   12b64:	ldr	r3, [pc, #84]	; 12bc0 <read_token_greaterequalthan@@Base+0xa4>
   12b68:	adds	r6, r6, #1
   12b6c:	adc	r7, r7, #0
   12b70:	mov	r2, #0
   12b74:	strd	r6, [r4, #136]	; 0x88
   12b78:	ldr	r1, [r0]
   12b7c:	str	ip, [sp]
   12b80:	mov	r0, #12
   12b84:	bl	15e24 <UnityAssertEqualNumber@@Base>
   12b88:	ldrd	r2, [r4, #144]	; 0x90
   12b8c:	add	r0, sp, #12
   12b90:	adds	r2, r2, #1
   12b94:	adc	r3, r3, #0
   12b98:	strd	r2, [r4, #144]	; 0x90
   12b9c:	bl	19474 <destroy_lexer@@Base>
   12ba0:	ldrd	r2, [r4, #152]	; 0x98
   12ba4:	adds	r2, r2, #1
   12ba8:	adc	r3, r3, #0
   12bac:	strd	r2, [r4, #152]	; 0x98
   12bb0:	add	sp, sp, #24
   12bb4:	pop	{r4, r6, r7, pc}
   12bb8:	andeq	lr, r2, r0, asr ip
   12bbc:	andeq	ip, r1, r0, lsr #29
   12bc0:	andeq	r0, r0, r9, lsr r2

00012bc4 <read_token_andand@@Base>:
   12bc4:	push	{r4, r6, r7, lr}
   12bc8:	sub	sp, sp, #24
   12bcc:	ldr	r4, [pc, #140]	; 12c60 <read_token_andand@@Base+0x9c>
   12bd0:	add	r0, sp, #12
   12bd4:	ldr	r1, [pc, #136]	; 12c64 <read_token_andand@@Base+0xa0>
   12bd8:	ldrd	r2, [r4, #160]	; 0xa0
   12bdc:	adds	r2, r2, #1
   12be0:	adc	r3, r3, #0
   12be4:	strd	r2, [r4, #160]	; 0xa0
   12be8:	bl	19448 <init_lexer@@Base>
   12bec:	ldrd	r2, [r4, #168]	; 0xa8
   12bf0:	add	r0, sp, #12
   12bf4:	adds	r2, r2, #1
   12bf8:	adc	r3, r3, #0
   12bfc:	strd	r2, [r4, #168]	; 0xa8
   12c00:	bl	1965c <next@@Base>
   12c04:	ldrd	r6, [r4, #176]	; 0xb0
   12c08:	mov	ip, #148	; 0x94
   12c0c:	mov	r3, #552	; 0x228
   12c10:	adds	r6, r6, #1
   12c14:	adc	r7, r7, #0
   12c18:	mov	r2, #0
   12c1c:	strd	r6, [r4, #176]	; 0xb0
   12c20:	ldr	r1, [r0]
   12c24:	str	ip, [sp]
   12c28:	mov	r0, #12
   12c2c:	bl	15e24 <UnityAssertEqualNumber@@Base>
   12c30:	ldrd	r2, [r4, #184]	; 0xb8
   12c34:	add	r0, sp, #12
   12c38:	adds	r2, r2, #1
   12c3c:	adc	r3, r3, #0
   12c40:	strd	r2, [r4, #184]	; 0xb8
   12c44:	bl	19474 <destroy_lexer@@Base>
   12c48:	ldrd	r2, [r4, #192]	; 0xc0
   12c4c:	adds	r2, r2, #1
   12c50:	adc	r3, r3, #0
   12c54:	strd	r2, [r4, #192]	; 0xc0
   12c58:	add	sp, sp, #24
   12c5c:	pop	{r4, r6, r7, pc}
   12c60:	andeq	lr, r2, r0, asr ip
   12c64:	andeq	ip, r1, r4, lsr #29

00012c68 <read_token_oror@@Base>:
   12c68:	push	{r4, r6, r7, lr}
   12c6c:	sub	sp, sp, #24
   12c70:	ldr	r4, [pc, #140]	; 12d04 <read_token_oror@@Base+0x9c>
   12c74:	add	r0, sp, #12
   12c78:	ldr	r1, [pc, #136]	; 12d08 <read_token_oror@@Base+0xa0>
   12c7c:	ldrd	r2, [r4, #200]	; 0xc8
   12c80:	adds	r2, r2, #1
   12c84:	adc	r3, r3, #0
   12c88:	strd	r2, [r4, #200]	; 0xc8
   12c8c:	bl	19448 <init_lexer@@Base>
   12c90:	ldrd	r2, [r4, #208]	; 0xd0
   12c94:	add	r0, sp, #12
   12c98:	adds	r2, r2, #1
   12c9c:	adc	r3, r3, #0
   12ca0:	strd	r2, [r4, #208]	; 0xd0
   12ca4:	bl	1965c <next@@Base>
   12ca8:	ldrd	r6, [r4, #216]	; 0xd8
   12cac:	mov	ip, #148	; 0x94
   12cb0:	ldr	r3, [pc, #84]	; 12d0c <read_token_oror@@Base+0xa4>
   12cb4:	adds	r6, r6, #1
   12cb8:	adc	r7, r7, #0
   12cbc:	mov	r2, #0
   12cc0:	strd	r6, [r4, #216]	; 0xd8
   12cc4:	ldr	r1, [r0]
   12cc8:	str	ip, [sp]
   12ccc:	mov	r0, #12
   12cd0:	bl	15e24 <UnityAssertEqualNumber@@Base>
   12cd4:	ldrd	r2, [r4, #224]	; 0xe0
   12cd8:	add	r0, sp, #12
   12cdc:	adds	r2, r2, #1
   12ce0:	adc	r3, r3, #0
   12ce4:	strd	r2, [r4, #224]	; 0xe0
   12ce8:	bl	19474 <destroy_lexer@@Base>
   12cec:	ldrd	r2, [r4, #232]	; 0xe8
   12cf0:	adds	r2, r2, #1
   12cf4:	adc	r3, r3, #0
   12cf8:	strd	r2, [r4, #232]	; 0xe8
   12cfc:	add	sp, sp, #24
   12d00:	pop	{r4, r6, r7, pc}
   12d04:	andeq	lr, r2, r0, asr ip
   12d08:	andeq	ip, r1, r8, lsr #29
   12d0c:	andeq	r0, r0, r7, lsl r2

00012d10 <read_token_lessequalthan@@Base>:
   12d10:	push	{r4, r5, r6, r7, lr}
   12d14:	sub	sp, sp, #28
   12d18:	ldr	r4, [pc, #148]	; 12db4 <read_token_lessequalthan@@Base+0xa4>
   12d1c:	add	r0, sp, #12
   12d20:	ldr	r1, [pc, #144]	; 12db8 <read_token_lessequalthan@@Base+0xa8>
   12d24:	ldrd	r2, [r4, #240]	; 0xf0
   12d28:	add	r5, r4, #272	; 0x110
   12d2c:	add	r4, r4, #256	; 0x100
   12d30:	adds	r2, r2, #1
   12d34:	adc	r3, r3, #0
   12d38:	strd	r2, [r4, #-16]
   12d3c:	bl	19448 <init_lexer@@Base>
   12d40:	ldrd	r2, [r4, #-8]
   12d44:	add	r0, sp, #12
   12d48:	adds	r2, r2, #1
   12d4c:	adc	r3, r3, #0
   12d50:	strd	r2, [r4, #-8]
   12d54:	bl	1965c <next@@Base>
   12d58:	ldrd	r6, [r4]
   12d5c:	mov	ip, #148	; 0x94
   12d60:	ldr	r3, [pc, #84]	; 12dbc <read_token_lessequalthan@@Base+0xac>
   12d64:	adds	r6, r6, #1
   12d68:	adc	r7, r7, #0
   12d6c:	mov	r2, #0
   12d70:	strd	r6, [r4]
   12d74:	ldr	r1, [r0]
   12d78:	str	ip, [sp]
   12d7c:	mov	r0, #12
   12d80:	bl	15e24 <UnityAssertEqualNumber@@Base>
   12d84:	ldrd	r2, [r5, #-8]
   12d88:	add	r0, sp, #12
   12d8c:	adds	r2, r2, #1
   12d90:	adc	r3, r3, #0
   12d94:	strd	r2, [r5, #-8]
   12d98:	bl	19474 <destroy_lexer@@Base>
   12d9c:	ldrd	r2, [r5]
   12da0:	adds	r2, r2, #1
   12da4:	adc	r3, r3, #0
   12da8:	strd	r2, [r5]
   12dac:	add	sp, sp, #28
   12db0:	pop	{r4, r5, r6, r7, pc}
   12db4:	andeq	lr, r2, r0, asr ip
   12db8:	andeq	ip, r1, ip, lsr #29
   12dbc:	andeq	r0, r0, r6, lsl #4

00012dc0 <read_token_notequal@@Base>:
   12dc0:	push	{r4, r6, r7, lr}
   12dc4:	sub	sp, sp, #24
   12dc8:	ldr	r4, [pc, #140]	; 12e5c <read_token_notequal@@Base+0x9c>
   12dcc:	add	r0, sp, #12
   12dd0:	ldr	r1, [pc, #136]	; 12e60 <read_token_notequal@@Base+0xa0>
   12dd4:	ldrd	r2, [r4, #-8]
   12dd8:	adds	r2, r2, #1
   12ddc:	adc	r3, r3, #0
   12de0:	strd	r2, [r4, #-8]
   12de4:	bl	19448 <init_lexer@@Base>
   12de8:	ldrd	r2, [r4]
   12dec:	add	r0, sp, #12
   12df0:	adds	r2, r2, #1
   12df4:	adc	r3, r3, #0
   12df8:	strd	r2, [r4]
   12dfc:	bl	1965c <next@@Base>
   12e00:	ldrd	r6, [r4, #8]
   12e04:	mov	ip, #148	; 0x94
   12e08:	ldr	r3, [pc, #84]	; 12e64 <read_token_notequal@@Base+0xa4>
   12e0c:	adds	r6, r6, #1
   12e10:	adc	r7, r7, #0
   12e14:	mov	r2, #0
   12e18:	strd	r6, [r4, #8]
   12e1c:	ldr	r1, [r0]
   12e20:	str	ip, [sp]
   12e24:	mov	r0, #12
   12e28:	bl	15e24 <UnityAssertEqualNumber@@Base>
   12e2c:	ldrd	r2, [r4, #16]
   12e30:	add	r0, sp, #12
   12e34:	adds	r2, r2, #1
   12e38:	adc	r3, r3, #0
   12e3c:	strd	r2, [r4, #16]
   12e40:	bl	19474 <destroy_lexer@@Base>
   12e44:	ldrd	r2, [r4, #24]
   12e48:	adds	r2, r2, #1
   12e4c:	adc	r3, r3, #0
   12e50:	strd	r2, [r4, #24]
   12e54:	add	sp, sp, #24
   12e58:	pop	{r4, r6, r7, pc}
   12e5c:	andeq	lr, r2, r0, ror sp
   12e60:			; <UNDEFINED> instruction: 0x0001ceb0
   12e64:	strdeq	r0, [r0], -r5

00012e68 <read_token_equalequal@@Base>:
   12e68:	push	{r4, r6, r7, lr}
   12e6c:	sub	sp, sp, #24
   12e70:	ldr	r4, [pc, #140]	; 12f04 <read_token_equalequal@@Base+0x9c>
   12e74:	add	r0, sp, #12
   12e78:	ldr	r1, [pc, #136]	; 12f08 <read_token_equalequal@@Base+0xa0>
   12e7c:	ldrd	r2, [r4]
   12e80:	adds	r2, r2, #1
   12e84:	adc	r3, r3, #0
   12e88:	strd	r2, [r4]
   12e8c:	bl	19448 <init_lexer@@Base>
   12e90:	ldrd	r2, [r4, #8]
   12e94:	add	r0, sp, #12
   12e98:	adds	r2, r2, #1
   12e9c:	adc	r3, r3, #0
   12ea0:	strd	r2, [r4, #8]
   12ea4:	bl	1965c <next@@Base>
   12ea8:	ldrd	r6, [r4, #16]
   12eac:	mov	ip, #148	; 0x94
   12eb0:	mov	r3, #484	; 0x1e4
   12eb4:	adds	r6, r6, #1
   12eb8:	adc	r7, r7, #0
   12ebc:	mov	r2, #0
   12ec0:	strd	r6, [r4, #16]
   12ec4:	ldr	r1, [r0]
   12ec8:	str	ip, [sp]
   12ecc:	mov	r0, #12
   12ed0:	bl	15e24 <UnityAssertEqualNumber@@Base>
   12ed4:	ldrd	r2, [r4, #24]
   12ed8:	add	r0, sp, #12
   12edc:	adds	r2, r2, #1
   12ee0:	adc	r3, r3, #0
   12ee4:	strd	r2, [r4, #24]
   12ee8:	bl	19474 <destroy_lexer@@Base>
   12eec:	ldrd	r2, [r4, #32]
   12ef0:	adds	r2, r2, #1
   12ef4:	adc	r3, r3, #0
   12ef8:	strd	r2, [r4, #32]
   12efc:	add	sp, sp, #24
   12f00:	pop	{r4, r6, r7, pc}
   12f04:	muleq	r2, r0, sp
   12f08:			; <UNDEFINED> instruction: 0x0001ceb4

00012f0c <read_token_else@@Base>:
   12f0c:	push	{r4, r6, r7, lr}
   12f10:	sub	sp, sp, #24
   12f14:	ldr	r4, [pc, #140]	; 12fa8 <read_token_else@@Base+0x9c>
   12f18:	add	r0, sp, #12
   12f1c:	ldr	r1, [pc, #136]	; 12fac <read_token_else@@Base+0xa0>
   12f20:	ldrd	r2, [r4, #-8]
   12f24:	adds	r2, r2, #1
   12f28:	adc	r3, r3, #0
   12f2c:	strd	r2, [r4, #-8]
   12f30:	bl	19448 <init_lexer@@Base>
   12f34:	ldrd	r2, [r4]
   12f38:	add	r0, sp, #12
   12f3c:	adds	r2, r2, #1
   12f40:	adc	r3, r3, #0
   12f44:	strd	r2, [r4]
   12f48:	bl	1965c <next@@Base>
   12f4c:	ldrd	r6, [r4, #8]
   12f50:	mov	ip, #148	; 0x94
   12f54:	ldr	r3, [pc, #84]	; 12fb0 <read_token_else@@Base+0xa4>
   12f58:	adds	r6, r6, #1
   12f5c:	adc	r7, r7, #0
   12f60:	mov	r2, #0
   12f64:	strd	r6, [r4, #8]
   12f68:	ldr	r1, [r0]
   12f6c:	str	ip, [sp]
   12f70:	mov	r0, #11
   12f74:	bl	15e24 <UnityAssertEqualNumber@@Base>
   12f78:	ldrd	r2, [r4, #16]
   12f7c:	add	r0, sp, #12
   12f80:	adds	r2, r2, #1
   12f84:	adc	r3, r3, #0
   12f88:	strd	r2, [r4, #16]
   12f8c:	bl	19474 <destroy_lexer@@Base>
   12f90:	ldrd	r2, [r4, #24]
   12f94:	adds	r2, r2, #1
   12f98:	adc	r3, r3, #0
   12f9c:	strd	r2, [r4, #24]
   12fa0:	add	sp, sp, #24
   12fa4:	pop	{r4, r6, r7, pc}
   12fa8:	andeq	lr, r2, r0, asr #27
   12fac:	andeq	sp, r1, r4, asr r0
   12fb0:	ldrdeq	r0, [r0], -r3

00012fb4 <read_token_if@@Base>:
   12fb4:	push	{r4, r6, r7, lr}
   12fb8:	sub	sp, sp, #24
   12fbc:	ldr	r4, [pc, #140]	; 13050 <read_token_if@@Base+0x9c>
   12fc0:	add	r0, sp, #12
   12fc4:	ldr	r1, [pc, #136]	; 13054 <read_token_if@@Base+0xa0>
   12fc8:	ldrd	r2, [r4]
   12fcc:	adds	r2, r2, #1
   12fd0:	adc	r3, r3, #0
   12fd4:	strd	r2, [r4]
   12fd8:	bl	19448 <init_lexer@@Base>
   12fdc:	ldrd	r2, [r4, #8]
   12fe0:	add	r0, sp, #12
   12fe4:	adds	r2, r2, #1
   12fe8:	adc	r3, r3, #0
   12fec:	strd	r2, [r4, #8]
   12ff0:	bl	1965c <next@@Base>
   12ff4:	ldrd	r6, [r4, #16]
   12ff8:	mov	ip, #148	; 0x94
   12ffc:	ldr	r3, [pc, #84]	; 13058 <read_token_if@@Base+0xa4>
   13000:	adds	r6, r6, #1
   13004:	adc	r7, r7, #0
   13008:	mov	r2, #0
   1300c:	strd	r6, [r4, #16]
   13010:	ldr	r1, [r0]
   13014:	str	ip, [sp]
   13018:	mov	r0, #10
   1301c:	bl	15e24 <UnityAssertEqualNumber@@Base>
   13020:	ldrd	r2, [r4, #24]
   13024:	add	r0, sp, #12
   13028:	adds	r2, r2, #1
   1302c:	adc	r3, r3, #0
   13030:	strd	r2, [r4, #24]
   13034:	bl	19474 <destroy_lexer@@Base>
   13038:	ldrd	r2, [r4, #32]
   1303c:	adds	r2, r2, #1
   13040:	adc	r3, r3, #0
   13044:	strd	r2, [r4, #32]
   13048:	add	sp, sp, #24
   1304c:	pop	{r4, r6, r7, pc}
   13050:	andeq	lr, r2, r0, ror #27
   13054:			; <UNDEFINED> instruction: 0x0001ceb8
   13058:	andeq	r0, r0, r2, asr #3

0001305c <read_token_eof@@Base>:
   1305c:	push	{r4, r6, r7, lr}
   13060:	sub	sp, sp, #24
   13064:	ldr	r4, [pc, #140]	; 130f8 <read_token_eof@@Base+0x9c>
   13068:	add	r0, sp, #12
   1306c:	ldr	r1, [pc, #136]	; 130fc <read_token_eof@@Base+0xa0>
   13070:	ldrd	r2, [r4, #-8]
   13074:	adds	r2, r2, #1
   13078:	adc	r3, r3, #0
   1307c:	strd	r2, [r4, #-8]
   13080:	bl	19448 <init_lexer@@Base>
   13084:	ldrd	r2, [r4]
   13088:	add	r0, sp, #12
   1308c:	adds	r2, r2, #1
   13090:	adc	r3, r3, #0
   13094:	strd	r2, [r4]
   13098:	bl	1965c <next@@Base>
   1309c:	ldrd	r6, [r4, #8]
   130a0:	mov	ip, #148	; 0x94
   130a4:	ldr	r3, [pc, #84]	; 13100 <read_token_eof@@Base+0xa4>
   130a8:	adds	r6, r6, #1
   130ac:	adc	r7, r7, #0
   130b0:	mov	r2, #0
   130b4:	strd	r6, [r4, #8]
   130b8:	ldr	r1, [r0]
   130bc:	str	ip, [sp]
   130c0:	mov	r0, #9
   130c4:	bl	15e24 <UnityAssertEqualNumber@@Base>
   130c8:	ldrd	r2, [r4, #16]
   130cc:	add	r0, sp, #12
   130d0:	adds	r2, r2, #1
   130d4:	adc	r3, r3, #0
   130d8:	strd	r2, [r4, #16]
   130dc:	bl	19474 <destroy_lexer@@Base>
   130e0:	ldrd	r2, [r4, #24]
   130e4:	adds	r2, r2, #1
   130e8:	adc	r3, r3, #0
   130ec:	strd	r2, [r4, #24]
   130f0:	add	sp, sp, #24
   130f4:	pop	{r4, r6, r7, pc}
   130f8:	andeq	lr, r2, r0, lsl lr
   130fc:	andeq	sp, r1, r8, lsl #14
   13100:			; <UNDEFINED> instruction: 0x000001b1

00013104 <read_token_semicolon@@Base>:
   13104:	push	{r4, r6, r7, lr}
   13108:	sub	sp, sp, #24
   1310c:	ldr	r4, [pc, #140]	; 131a0 <read_token_semicolon@@Base+0x9c>
   13110:	add	r0, sp, #12
   13114:	ldr	r1, [pc, #136]	; 131a4 <read_token_semicolon@@Base+0xa0>
   13118:	ldrd	r2, [r4]
   1311c:	adds	r2, r2, #1
   13120:	adc	r3, r3, #0
   13124:	strd	r2, [r4]
   13128:	bl	19448 <init_lexer@@Base>
   1312c:	ldrd	r2, [r4, #8]
   13130:	add	r0, sp, #12
   13134:	adds	r2, r2, #1
   13138:	adc	r3, r3, #0
   1313c:	strd	r2, [r4, #8]
   13140:	bl	1965c <next@@Base>
   13144:	ldrd	r6, [r4, #16]
   13148:	mov	ip, #148	; 0x94
   1314c:	mov	r3, #416	; 0x1a0
   13150:	adds	r6, r6, #1
   13154:	adc	r7, r7, #0
   13158:	mov	r2, #0
   1315c:	strd	r6, [r4, #16]
   13160:	ldr	r1, [r0]
   13164:	str	ip, [sp]
   13168:	mov	r0, #8
   1316c:	bl	15e24 <UnityAssertEqualNumber@@Base>
   13170:	ldrd	r2, [r4, #24]
   13174:	add	r0, sp, #12
   13178:	adds	r2, r2, #1
   1317c:	adc	r3, r3, #0
   13180:	strd	r2, [r4, #24]
   13184:	bl	19474 <destroy_lexer@@Base>
   13188:	ldrd	r2, [r4, #32]
   1318c:	adds	r2, r2, #1
   13190:	adc	r3, r3, #0
   13194:	strd	r2, [r4, #32]
   13198:	add	sp, sp, #24
   1319c:	pop	{r4, r6, r7, pc}
   131a0:	andeq	lr, r2, r0, lsr lr
   131a4:			; <UNDEFINED> instruction: 0x0001cebc

000131a8 <read_token_return@@Base>:
   131a8:	push	{r4, r6, r7, lr}
   131ac:	sub	sp, sp, #24
   131b0:	ldr	r4, [pc, #140]	; 13244 <read_token_return@@Base+0x9c>
   131b4:	add	r0, sp, #12
   131b8:	ldr	r1, [pc, #136]	; 13248 <read_token_return@@Base+0xa0>
   131bc:	ldrd	r2, [r4, #-8]
   131c0:	adds	r2, r2, #1
   131c4:	adc	r3, r3, #0
   131c8:	strd	r2, [r4, #-8]
   131cc:	bl	19448 <init_lexer@@Base>
   131d0:	ldrd	r2, [r4]
   131d4:	add	r0, sp, #12
   131d8:	adds	r2, r2, #1
   131dc:	adc	r3, r3, #0
   131e0:	strd	r2, [r4]
   131e4:	bl	1965c <next@@Base>
   131e8:	ldrd	r6, [r4, #8]
   131ec:	mov	ip, #148	; 0x94
   131f0:	ldr	r3, [pc, #84]	; 1324c <read_token_return@@Base+0xa4>
   131f4:	adds	r6, r6, #1
   131f8:	adc	r7, r7, #0
   131fc:	mov	r2, #0
   13200:	strd	r6, [r4, #8]
   13204:	ldr	r1, [r0]
   13208:	str	ip, [sp]
   1320c:	mov	r0, #7
   13210:	bl	15e24 <UnityAssertEqualNumber@@Base>
   13214:	ldrd	r2, [r4, #16]
   13218:	add	r0, sp, #12
   1321c:	adds	r2, r2, #1
   13220:	adc	r3, r3, #0
   13224:	strd	r2, [r4, #16]
   13228:	bl	19474 <destroy_lexer@@Base>
   1322c:	ldrd	r2, [r4, #24]
   13230:	adds	r2, r2, #1
   13234:	adc	r3, r3, #0
   13238:	strd	r2, [r4, #24]
   1323c:	add	sp, sp, #24
   13240:	pop	{r4, r6, r7, pc}
   13244:	andeq	lr, r2, r0, ror #28
   13248:	andeq	ip, r1, r0, asr #29
   1324c:	andeq	r0, r0, pc, lsl #3

00013250 <read_token_cbra@@Base>:
   13250:	push	{r4, r6, r7, lr}
   13254:	sub	sp, sp, #24
   13258:	ldr	r4, [pc, #140]	; 132ec <read_token_cbra@@Base+0x9c>
   1325c:	add	r0, sp, #12
   13260:	ldr	r1, [pc, #136]	; 132f0 <read_token_cbra@@Base+0xa0>
   13264:	ldrd	r2, [r4]
   13268:	adds	r2, r2, #1
   1326c:	adc	r3, r3, #0
   13270:	strd	r2, [r4]
   13274:	bl	19448 <init_lexer@@Base>
   13278:	ldrd	r2, [r4, #8]
   1327c:	add	r0, sp, #12
   13280:	adds	r2, r2, #1
   13284:	adc	r3, r3, #0
   13288:	strd	r2, [r4, #8]
   1328c:	bl	1965c <next@@Base>
   13290:	ldrd	r6, [r4, #16]
   13294:	mov	ip, #148	; 0x94
   13298:	ldr	r3, [pc, #84]	; 132f4 <read_token_cbra@@Base+0xa4>
   1329c:	adds	r6, r6, #1
   132a0:	adc	r7, r7, #0
   132a4:	mov	r2, #0
   132a8:	strd	r6, [r4, #16]
   132ac:	ldr	r1, [r0]
   132b0:	str	ip, [sp]
   132b4:	mov	r0, #6
   132b8:	bl	15e24 <UnityAssertEqualNumber@@Base>
   132bc:	ldrd	r2, [r4, #24]
   132c0:	add	r0, sp, #12
   132c4:	adds	r2, r2, #1
   132c8:	adc	r3, r3, #0
   132cc:	strd	r2, [r4, #24]
   132d0:	bl	19474 <destroy_lexer@@Base>
   132d4:	ldrd	r2, [r4, #32]
   132d8:	adds	r2, r2, #1
   132dc:	adc	r3, r3, #0
   132e0:	strd	r2, [r4, #32]
   132e4:	add	sp, sp, #24
   132e8:	pop	{r4, r6, r7, pc}
   132ec:	andeq	lr, r2, r0, lsl #29
   132f0:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   132f4:	andeq	r0, r0, lr, ror r1

000132f8 <read_token_obra@@Base>:
   132f8:	push	{r4, r6, r7, lr}
   132fc:	sub	sp, sp, #24
   13300:	ldr	r4, [pc, #140]	; 13394 <read_token_obra@@Base+0x9c>
   13304:	add	r0, sp, #12
   13308:	ldr	r1, [pc, #136]	; 13398 <read_token_obra@@Base+0xa0>
   1330c:	ldrd	r2, [r4, #-8]
   13310:	adds	r2, r2, #1
   13314:	adc	r3, r3, #0
   13318:	strd	r2, [r4, #-8]
   1331c:	bl	19448 <init_lexer@@Base>
   13320:	ldrd	r2, [r4]
   13324:	add	r0, sp, #12
   13328:	adds	r2, r2, #1
   1332c:	adc	r3, r3, #0
   13330:	strd	r2, [r4]
   13334:	bl	1965c <next@@Base>
   13338:	ldrd	r6, [r4, #8]
   1333c:	mov	ip, #148	; 0x94
   13340:	mov	r3, #364	; 0x16c
   13344:	adds	r6, r6, #1
   13348:	adc	r7, r7, #0
   1334c:	mov	r2, #0
   13350:	strd	r6, [r4, #8]
   13354:	ldr	r1, [r0]
   13358:	str	ip, [sp]
   1335c:	mov	r0, #5
   13360:	bl	15e24 <UnityAssertEqualNumber@@Base>
   13364:	ldrd	r2, [r4, #16]
   13368:	add	r0, sp, #12
   1336c:	adds	r2, r2, #1
   13370:	adc	r3, r3, #0
   13374:	strd	r2, [r4, #16]
   13378:	bl	19474 <destroy_lexer@@Base>
   1337c:	ldrd	r2, [r4, #24]
   13380:	adds	r2, r2, #1
   13384:	adc	r3, r3, #0
   13388:	strd	r2, [r4, #24]
   1338c:	add	sp, sp, #24
   13390:	pop	{r4, r6, r7, pc}
   13394:			; <UNDEFINED> instruction: 0x0002eeb0
   13398:	andeq	ip, r1, r8, asr #29

0001339c <read_token_cpar@@Base>:
   1339c:	push	{r4, r6, r7, lr}
   133a0:	sub	sp, sp, #24
   133a4:	ldr	r4, [pc, #140]	; 13438 <read_token_cpar@@Base+0x9c>
   133a8:	add	r0, sp, #12
   133ac:	ldr	r1, [pc, #136]	; 1343c <read_token_cpar@@Base+0xa0>
   133b0:	ldrd	r2, [r4]
   133b4:	adds	r2, r2, #1
   133b8:	adc	r3, r3, #0
   133bc:	strd	r2, [r4]
   133c0:	bl	19448 <init_lexer@@Base>
   133c4:	ldrd	r2, [r4, #8]
   133c8:	add	r0, sp, #12
   133cc:	adds	r2, r2, #1
   133d0:	adc	r3, r3, #0
   133d4:	strd	r2, [r4, #8]
   133d8:	bl	1965c <next@@Base>
   133dc:	ldrd	r6, [r4, #16]
   133e0:	mov	ip, #148	; 0x94
   133e4:	ldr	r3, [pc, #84]	; 13440 <read_token_cpar@@Base+0xa4>
   133e8:	adds	r6, r6, #1
   133ec:	adc	r7, r7, #0
   133f0:	mov	r2, #0
   133f4:	strd	r6, [r4, #16]
   133f8:	ldr	r1, [r0]
   133fc:	str	ip, [sp]
   13400:	mov	r0, #4
   13404:	bl	15e24 <UnityAssertEqualNumber@@Base>
   13408:	ldrd	r2, [r4, #24]
   1340c:	add	r0, sp, #12
   13410:	adds	r2, r2, #1
   13414:	adc	r3, r3, #0
   13418:	strd	r2, [r4, #24]
   1341c:	bl	19474 <destroy_lexer@@Base>
   13420:	ldrd	r2, [r4, #32]
   13424:	adds	r2, r2, #1
   13428:	adc	r3, r3, #0
   1342c:	strd	r2, [r4, #32]
   13430:	add	sp, sp, #24
   13434:	pop	{r4, r6, r7, pc}
   13438:	ldrdeq	lr, [r2], -r0
   1343c:	andeq	ip, r1, ip, asr #29
   13440:	andeq	r0, r0, fp, asr r1

00013444 <read_token_opar@@Base>:
   13444:	push	{r4, r6, r7, lr}
   13448:	sub	sp, sp, #24
   1344c:	ldr	r4, [pc, #140]	; 134e0 <read_token_opar@@Base+0x9c>
   13450:	add	r0, sp, #12
   13454:	ldr	r1, [pc, #136]	; 134e4 <read_token_opar@@Base+0xa0>
   13458:	ldrd	r2, [r4, #-8]
   1345c:	adds	r2, r2, #1
   13460:	adc	r3, r3, #0
   13464:	strd	r2, [r4, #-8]
   13468:	bl	19448 <init_lexer@@Base>
   1346c:	ldrd	r2, [r4]
   13470:	add	r0, sp, #12
   13474:	adds	r2, r2, #1
   13478:	adc	r3, r3, #0
   1347c:	strd	r2, [r4]
   13480:	bl	1965c <next@@Base>
   13484:	ldrd	r6, [r4, #8]
   13488:	mov	ip, #148	; 0x94
   1348c:	ldr	r3, [pc, #84]	; 134e8 <read_token_opar@@Base+0xa4>
   13490:	adds	r6, r6, #1
   13494:	adc	r7, r7, #0
   13498:	mov	r2, #0
   1349c:	strd	r6, [r4, #8]
   134a0:	ldr	r1, [r0]
   134a4:	str	ip, [sp]
   134a8:	mov	r0, #3
   134ac:	bl	15e24 <UnityAssertEqualNumber@@Base>
   134b0:	ldrd	r2, [r4, #16]
   134b4:	add	r0, sp, #12
   134b8:	adds	r2, r2, #1
   134bc:	adc	r3, r3, #0
   134c0:	strd	r2, [r4, #16]
   134c4:	bl	19474 <destroy_lexer@@Base>
   134c8:	ldrd	r2, [r4, #24]
   134cc:	adds	r2, r2, #1
   134d0:	adc	r3, r3, #0
   134d4:	strd	r2, [r4, #24]
   134d8:	add	sp, sp, #24
   134dc:	pop	{r4, r6, r7, pc}
   134e0:	andeq	lr, r2, r0, lsl #30
   134e4:	ldrdeq	ip, [r1], -r0
   134e8:	andeq	r0, r0, sl, asr #2

000134ec <read_token_function@@Base>:
   134ec:	push	{r4, r6, r7, lr}
   134f0:	sub	sp, sp, #24
   134f4:	ldr	r4, [pc, #140]	; 13588 <read_token_function@@Base+0x9c>
   134f8:	add	r0, sp, #12
   134fc:	ldr	r1, [pc, #136]	; 1358c <read_token_function@@Base+0xa0>
   13500:	ldrd	r2, [r4]
   13504:	adds	r2, r2, #1
   13508:	adc	r3, r3, #0
   1350c:	strd	r2, [r4]
   13510:	bl	19448 <init_lexer@@Base>
   13514:	ldrd	r2, [r4, #8]
   13518:	add	r0, sp, #12
   1351c:	adds	r2, r2, #1
   13520:	adc	r3, r3, #0
   13524:	strd	r2, [r4, #8]
   13528:	bl	1965c <next@@Base>
   1352c:	ldrd	r6, [r4, #16]
   13530:	mov	ip, #148	; 0x94
   13534:	ldr	r3, [pc, #84]	; 13590 <read_token_function@@Base+0xa4>
   13538:	adds	r6, r6, #1
   1353c:	adc	r7, r7, #0
   13540:	mov	r2, #0
   13544:	strd	r6, [r4, #16]
   13548:	ldr	r1, [r0]
   1354c:	str	ip, [sp]
   13550:	mov	r0, #2
   13554:	bl	15e24 <UnityAssertEqualNumber@@Base>
   13558:	ldrd	r2, [r4, #24]
   1355c:	add	r0, sp, #12
   13560:	adds	r2, r2, #1
   13564:	adc	r3, r3, #0
   13568:	strd	r2, [r4, #24]
   1356c:	bl	19474 <destroy_lexer@@Base>
   13570:	ldrd	r2, [r4, #32]
   13574:	adds	r2, r2, #1
   13578:	adc	r3, r3, #0
   1357c:	strd	r2, [r4, #32]
   13580:	add	sp, sp, #24
   13584:	pop	{r4, r6, r7, pc}
   13588:	andeq	lr, r2, r0, lsr #30
   1358c:	ldrdeq	ip, [r1], -r4
   13590:	andeq	r0, r0, r9, lsr r1

00013594 <read_token_int_value@@Base>:
   13594:	push	{r4, r6, r7, lr}
   13598:	sub	sp, sp, #24
   1359c:	ldr	r4, [pc, #140]	; 13630 <read_token_int_value@@Base+0x9c>
   135a0:	add	r0, sp, #12
   135a4:	ldr	r1, [pc, #136]	; 13634 <read_token_int_value@@Base+0xa0>
   135a8:	ldrd	r2, [r4, #-8]
   135ac:	adds	r2, r2, #1
   135b0:	adc	r3, r3, #0
   135b4:	strd	r2, [r4, #-8]
   135b8:	bl	19448 <init_lexer@@Base>
   135bc:	ldrd	r2, [r4]
   135c0:	add	r0, sp, #12
   135c4:	adds	r2, r2, #1
   135c8:	adc	r3, r3, #0
   135cc:	strd	r2, [r4]
   135d0:	bl	1965c <next@@Base>
   135d4:	ldrd	r6, [r4, #8]
   135d8:	mov	ip, #148	; 0x94
   135dc:	mov	r3, #296	; 0x128
   135e0:	adds	r6, r6, #1
   135e4:	adc	r7, r7, #0
   135e8:	mov	r2, #0
   135ec:	strd	r6, [r4, #8]
   135f0:	ldr	r1, [r0]
   135f4:	str	ip, [sp]
   135f8:	mov	r0, #1
   135fc:	bl	15e24 <UnityAssertEqualNumber@@Base>
   13600:	ldrd	r2, [r4, #16]
   13604:	add	r0, sp, #12
   13608:	adds	r2, r2, #1
   1360c:	adc	r3, r3, #0
   13610:	strd	r2, [r4, #16]
   13614:	bl	19474 <destroy_lexer@@Base>
   13618:	ldrd	r2, [r4, #24]
   1361c:	adds	r2, r2, #1
   13620:	adc	r3, r3, #0
   13624:	strd	r2, [r4, #24]
   13628:	add	sp, sp, #24
   1362c:	pop	{r4, r6, r7, pc}
   13630:	andeq	lr, r2, r0, asr pc
   13634:	ldrdeq	ip, [r1], -ip	; <UNPREDICTABLE>

00013638 <read_token_int_type@@Base>:
   13638:	push	{r4, r6, r7, lr}
   1363c:	sub	sp, sp, #24
   13640:	ldr	r4, [pc, #140]	; 136d4 <read_token_int_type@@Base+0x9c>
   13644:	add	r0, sp, #12
   13648:	ldr	r1, [pc, #136]	; 136d8 <read_token_int_type@@Base+0xa0>
   1364c:	ldrd	r2, [r4]
   13650:	adds	r2, r2, #1
   13654:	adc	r3, r3, #0
   13658:	strd	r2, [r4]
   1365c:	bl	19448 <init_lexer@@Base>
   13660:	ldrd	r2, [r4, #8]
   13664:	add	r0, sp, #12
   13668:	adds	r2, r2, #1
   1366c:	adc	r3, r3, #0
   13670:	strd	r2, [r4, #8]
   13674:	bl	1965c <next@@Base>
   13678:	ldrd	r6, [r4, #16]
   1367c:	mov	ip, #148	; 0x94
   13680:	mov	r2, #0
   13684:	adds	r6, r6, #1
   13688:	adc	r7, r7, #0
   1368c:	ldr	r3, [pc, #72]	; 136dc <read_token_int_type@@Base+0xa4>
   13690:	strd	r6, [r4, #16]
   13694:	ldr	r1, [r0]
   13698:	str	ip, [sp]
   1369c:	mov	r0, r2
   136a0:	bl	15e24 <UnityAssertEqualNumber@@Base>
   136a4:	ldrd	r2, [r4, #24]
   136a8:	add	r0, sp, #12
   136ac:	adds	r2, r2, #1
   136b0:	adc	r3, r3, #0
   136b4:	strd	r2, [r4, #24]
   136b8:	bl	19474 <destroy_lexer@@Base>
   136bc:	ldrd	r2, [r4, #32]
   136c0:	adds	r2, r2, #1
   136c4:	adc	r3, r3, #0
   136c8:	strd	r2, [r4, #32]
   136cc:	add	sp, sp, #24
   136d0:	pop	{r4, r6, r7, pc}
   136d4:	andeq	lr, r2, r0, ror pc
   136d8:	andeq	ip, r1, r4, ror #29
   136dc:	andeq	r0, r0, r7, lsl r1

000136e0 <if_with_else@@Base>:
   136e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   136e4:	sub	sp, sp, #28
   136e8:	ldr	r8, [pc, #1956]	; 13e94 <if_with_else@@Base+0x7b4>
   136ec:	add	r0, sp, #12
   136f0:	add	r4, r8, #848	; 0x350
   136f4:	ldr	r1, [pc, #1948]	; 13e98 <if_with_else@@Base+0x7b8>
   136f8:	ldrd	r2, [r4, #-8]
   136fc:	mov	r5, #148	; 0x94
   13700:	add	r9, r8, #1120	; 0x460
   13704:	adds	r6, r2, #1
   13708:	adc	r7, r3, #0
   1370c:	strd	r6, [r4, #-8]
   13710:	bl	19448 <init_lexer@@Base>
   13714:	ldrd	r2, [r4]
   13718:	add	r0, sp, #12
   1371c:	adds	r6, r2, #1
   13720:	adc	r7, r3, #0
   13724:	strd	r6, [r4]
   13728:	bl	1965c <next@@Base>
   1372c:	ldrd	r6, [r4, #8]
   13730:	mov	r2, #0
   13734:	mov	r3, #210	; 0xd2
   13738:	adds	sl, r6, #1
   1373c:	adc	fp, r7, #0
   13740:	strd	sl, [r4, #8]
   13744:	add	fp, r8, #1136	; 0x470
   13748:	add	sl, r8, #1152	; 0x480
   1374c:	ldr	r1, [r0]
   13750:	str	r5, [sp]
   13754:	mov	r0, r2
   13758:	bl	15e24 <UnityAssertEqualNumber@@Base>
   1375c:	ldrd	r2, [r4, #16]
   13760:	add	r0, sp, #12
   13764:	adds	r6, r2, #1
   13768:	adc	r7, r3, #0
   1376c:	strd	r6, [r4, #16]
   13770:	bl	1965c <next@@Base>
   13774:	ldrd	r6, [r4, #24]
   13778:	mov	r3, #212	; 0xd4
   1377c:	mov	r2, #0
   13780:	adds	r6, r6, #1
   13784:	adc	r7, r7, #0
   13788:	strd	r6, [r4, #24]
   1378c:	ldr	r1, [r0]
   13790:	str	r5, [sp]
   13794:	mov	r0, #2
   13798:	bl	15e24 <UnityAssertEqualNumber@@Base>
   1379c:	ldrd	r2, [r4, #32]
   137a0:	add	r0, sp, #12
   137a4:	adds	r6, r2, #1
   137a8:	adc	r7, r3, #0
   137ac:	strd	r6, [r4, #32]
   137b0:	bl	1965c <next@@Base>
   137b4:	ldrd	r6, [r4, #40]	; 0x28
   137b8:	mov	r3, #214	; 0xd6
   137bc:	mov	r2, #0
   137c0:	adds	r6, r6, #1
   137c4:	adc	r7, r7, #0
   137c8:	strd	r6, [r4, #40]	; 0x28
   137cc:	ldr	r1, [r0]
   137d0:	str	r5, [sp]
   137d4:	mov	r0, #3
   137d8:	bl	15e24 <UnityAssertEqualNumber@@Base>
   137dc:	ldrd	r2, [r4, #48]	; 0x30
   137e0:	add	r0, sp, #12
   137e4:	adds	r6, r2, #1
   137e8:	adc	r7, r3, #0
   137ec:	strd	r6, [r4, #48]	; 0x30
   137f0:	bl	1965c <next@@Base>
   137f4:	ldrd	r6, [r4, #56]	; 0x38
   137f8:	mov	r3, #216	; 0xd8
   137fc:	mov	r2, #0
   13800:	adds	r6, r6, #1
   13804:	adc	r7, r7, #0
   13808:	strd	r6, [r4, #56]	; 0x38
   1380c:	ldr	r1, [r0]
   13810:	str	r5, [sp]
   13814:	mov	r0, #4
   13818:	bl	15e24 <UnityAssertEqualNumber@@Base>
   1381c:	ldrd	r2, [r4, #64]	; 0x40
   13820:	add	r0, sp, #12
   13824:	adds	r6, r2, #1
   13828:	adc	r7, r3, #0
   1382c:	strd	r6, [r4, #64]	; 0x40
   13830:	bl	1965c <next@@Base>
   13834:	ldrd	r6, [r4, #72]	; 0x48
   13838:	mov	r3, #218	; 0xda
   1383c:	mov	r2, #0
   13840:	adds	r6, r6, #1
   13844:	adc	r7, r7, #0
   13848:	strd	r6, [r4, #72]	; 0x48
   1384c:	ldr	r1, [r0]
   13850:	str	r5, [sp]
   13854:	mov	r0, #5
   13858:	bl	15e24 <UnityAssertEqualNumber@@Base>
   1385c:	ldrd	r2, [r4, #80]	; 0x50
   13860:	add	r0, sp, #12
   13864:	adds	r6, r2, #1
   13868:	adc	r7, r3, #0
   1386c:	strd	r6, [r4, #80]	; 0x50
   13870:	bl	1965c <next@@Base>
   13874:	ldrd	r6, [r4, #88]	; 0x58
   13878:	mov	r3, #220	; 0xdc
   1387c:	mov	r2, #0
   13880:	adds	r6, r6, #1
   13884:	adc	r7, r7, #0
   13888:	strd	r6, [r4, #88]	; 0x58
   1388c:	ldr	r1, [r0]
   13890:	str	r5, [sp]
   13894:	mov	r0, #10
   13898:	bl	15e24 <UnityAssertEqualNumber@@Base>
   1389c:	ldrd	r2, [r4, #96]	; 0x60
   138a0:	add	r0, sp, #12
   138a4:	adds	r6, r2, #1
   138a8:	adc	r7, r3, #0
   138ac:	strd	r6, [r4, #96]	; 0x60
   138b0:	bl	1965c <next@@Base>
   138b4:	ldrd	r6, [r4, #104]	; 0x68
   138b8:	mov	r3, #222	; 0xde
   138bc:	mov	r2, #0
   138c0:	adds	r6, r6, #1
   138c4:	adc	r7, r7, #0
   138c8:	strd	r6, [r4, #104]	; 0x68
   138cc:	ldr	r1, [r0]
   138d0:	str	r5, [sp]
   138d4:	mov	r0, #3
   138d8:	bl	15e24 <UnityAssertEqualNumber@@Base>
   138dc:	ldrd	r2, [r4, #112]	; 0x70
   138e0:	add	r0, sp, #12
   138e4:	adds	r6, r2, #1
   138e8:	adc	r7, r3, #0
   138ec:	strd	r6, [r4, #112]	; 0x70
   138f0:	bl	1965c <next@@Base>
   138f4:	ldrd	r6, [r4, #120]	; 0x78
   138f8:	mov	r3, #224	; 0xe0
   138fc:	mov	r2, #0
   13900:	adds	r6, r6, #1
   13904:	adc	r7, r7, #0
   13908:	strd	r6, [r4, #120]	; 0x78
   1390c:	ldr	r1, [r0]
   13910:	str	r5, [sp]
   13914:	mov	r0, #1
   13918:	bl	15e24 <UnityAssertEqualNumber@@Base>
   1391c:	ldrd	r2, [r4, #128]	; 0x80
   13920:	add	r0, sp, #12
   13924:	adds	r6, r2, #1
   13928:	adc	r7, r3, #0
   1392c:	strd	r6, [r4, #128]	; 0x80
   13930:	bl	1965c <next@@Base>
   13934:	ldrd	r6, [r4, #136]	; 0x88
   13938:	mov	r3, #226	; 0xe2
   1393c:	mov	r2, #0
   13940:	adds	r6, r6, #1
   13944:	adc	r7, r7, #0
   13948:	strd	r6, [r4, #136]	; 0x88
   1394c:	ldr	r1, [r0]
   13950:	str	r5, [sp]
   13954:	mov	r0, #12
   13958:	bl	15e24 <UnityAssertEqualNumber@@Base>
   1395c:	ldrd	r2, [r4, #144]	; 0x90
   13960:	add	r0, sp, #12
   13964:	adds	r6, r2, #1
   13968:	adc	r7, r3, #0
   1396c:	strd	r6, [r4, #144]	; 0x90
   13970:	bl	1965c <next@@Base>
   13974:	ldrd	r6, [r4, #152]	; 0x98
   13978:	mov	r3, #228	; 0xe4
   1397c:	mov	r2, #0
   13980:	adds	r6, r6, #1
   13984:	adc	r7, r7, #0
   13988:	strd	r6, [r4, #152]	; 0x98
   1398c:	ldr	r1, [r0]
   13990:	str	r5, [sp]
   13994:	mov	r0, #1
   13998:	bl	15e24 <UnityAssertEqualNumber@@Base>
   1399c:	ldrd	r2, [r4, #160]	; 0xa0
   139a0:	add	r0, sp, #12
   139a4:	adds	r6, r2, #1
   139a8:	adc	r7, r3, #0
   139ac:	strd	r6, [r4, #160]	; 0xa0
   139b0:	bl	1965c <next@@Base>
   139b4:	ldrd	r6, [r4, #168]	; 0xa8
   139b8:	mov	r3, #230	; 0xe6
   139bc:	mov	r2, #0
   139c0:	adds	r6, r6, #1
   139c4:	adc	r7, r7, #0
   139c8:	strd	r6, [r4, #168]	; 0xa8
   139cc:	ldr	r1, [r0]
   139d0:	str	r5, [sp]
   139d4:	mov	r0, #4
   139d8:	bl	15e24 <UnityAssertEqualNumber@@Base>
   139dc:	ldrd	r2, [r4, #176]	; 0xb0
   139e0:	add	r0, sp, #12
   139e4:	adds	r6, r2, #1
   139e8:	adc	r7, r3, #0
   139ec:	strd	r6, [r4, #176]	; 0xb0
   139f0:	bl	1965c <next@@Base>
   139f4:	ldrd	r6, [r4, #184]	; 0xb8
   139f8:	mov	r3, #232	; 0xe8
   139fc:	mov	r2, #0
   13a00:	adds	r6, r6, #1
   13a04:	adc	r7, r7, #0
   13a08:	strd	r6, [r4, #184]	; 0xb8
   13a0c:	ldr	r1, [r0]
   13a10:	str	r5, [sp]
   13a14:	mov	r0, #5
   13a18:	bl	15e24 <UnityAssertEqualNumber@@Base>
   13a1c:	ldrd	r2, [r4, #192]	; 0xc0
   13a20:	add	r0, sp, #12
   13a24:	adds	r6, r2, #1
   13a28:	adc	r7, r3, #0
   13a2c:	strd	r6, [r4, #192]	; 0xc0
   13a30:	bl	1965c <next@@Base>
   13a34:	ldrd	r6, [r4, #200]	; 0xc8
   13a38:	mov	r3, #234	; 0xea
   13a3c:	mov	r2, #0
   13a40:	adds	r6, r6, #1
   13a44:	adc	r7, r7, #0
   13a48:	strd	r6, [r4, #200]	; 0xc8
   13a4c:	ldr	r1, [r0]
   13a50:	str	r5, [sp]
   13a54:	mov	r0, #7
   13a58:	bl	15e24 <UnityAssertEqualNumber@@Base>
   13a5c:	ldrd	r2, [r4, #208]	; 0xd0
   13a60:	add	r0, sp, #12
   13a64:	adds	r6, r2, #1
   13a68:	adc	r7, r3, #0
   13a6c:	strd	r6, [r4, #208]	; 0xd0
   13a70:	bl	1965c <next@@Base>
   13a74:	ldrd	r6, [r4, #216]	; 0xd8
   13a78:	mov	r3, #236	; 0xec
   13a7c:	mov	r2, #0
   13a80:	adds	r6, r6, #1
   13a84:	adc	r7, r7, #0
   13a88:	strd	r6, [r4, #216]	; 0xd8
   13a8c:	ldr	r1, [r0]
   13a90:	str	r5, [sp]
   13a94:	mov	r0, #1
   13a98:	bl	15e24 <UnityAssertEqualNumber@@Base>
   13a9c:	ldrd	r2, [r4, #224]	; 0xe0
   13aa0:	add	r0, sp, #12
   13aa4:	adds	r6, r2, #1
   13aa8:	adc	r7, r3, #0
   13aac:	strd	r6, [r4, #224]	; 0xe0
   13ab0:	bl	1965c <next@@Base>
   13ab4:	ldrd	r6, [r4, #232]	; 0xe8
   13ab8:	mov	r3, #238	; 0xee
   13abc:	mov	r2, #0
   13ac0:	adds	r6, r6, #1
   13ac4:	adc	r7, r7, #0
   13ac8:	strd	r6, [r4, #232]	; 0xe8
   13acc:	ldr	r1, [r0]
   13ad0:	str	r5, [sp]
   13ad4:	mov	r0, #8
   13ad8:	bl	15e24 <UnityAssertEqualNumber@@Base>
   13adc:	ldrd	r2, [r4, #240]	; 0xf0
   13ae0:	add	r0, sp, #12
   13ae4:	adds	r6, r2, #1
   13ae8:	adc	r7, r3, #0
   13aec:	strd	r6, [r4, #240]	; 0xf0
   13af0:	bl	1965c <next@@Base>
   13af4:	ldrd	r2, [r4, #248]	; 0xf8
   13af8:	adds	r6, r2, #1
   13afc:	adc	r7, r3, #0
   13b00:	mov	r2, #0
   13b04:	strd	r6, [r4, #248]	; 0xf8
   13b08:	mov	r3, #240	; 0xf0
   13b0c:	ldr	r1, [r0]
   13b10:	str	r5, [sp]
   13b14:	mov	r0, #6
   13b18:	bl	15e24 <UnityAssertEqualNumber@@Base>
   13b1c:	add	r1, r8, #1104	; 0x450
   13b20:	add	r0, sp, #12
   13b24:	ldrd	r2, [r1]
   13b28:	adds	r6, r2, #1
   13b2c:	adc	r7, r3, #0
   13b30:	strd	r6, [r1]
   13b34:	bl	1965c <next@@Base>
   13b38:	ldrd	r6, [r9, #-8]
   13b3c:	mov	r3, #242	; 0xf2
   13b40:	mov	r2, #0
   13b44:	adds	r6, r6, #1
   13b48:	adc	r7, r7, #0
   13b4c:	strd	r6, [r9, #-8]
   13b50:	ldr	r1, [r0]
   13b54:	str	r5, [sp]
   13b58:	mov	r0, #11
   13b5c:	bl	15e24 <UnityAssertEqualNumber@@Base>
   13b60:	ldrd	r2, [r9]
   13b64:	add	r0, sp, #12
   13b68:	adds	r6, r2, #1
   13b6c:	adc	r7, r3, #0
   13b70:	strd	r6, [r9]
   13b74:	bl	1965c <next@@Base>
   13b78:	ldrd	r6, [fp, #-8]
   13b7c:	mov	r3, #244	; 0xf4
   13b80:	mov	r2, #0
   13b84:	adds	r6, r6, #1
   13b88:	adc	r7, r7, #0
   13b8c:	strd	r6, [fp, #-8]
   13b90:	ldr	r1, [r0]
   13b94:	str	r5, [sp]
   13b98:	mov	r0, #5
   13b9c:	bl	15e24 <UnityAssertEqualNumber@@Base>
   13ba0:	ldrd	r2, [fp]
   13ba4:	add	r0, sp, #12
   13ba8:	adds	r6, r2, #1
   13bac:	adc	r7, r3, #0
   13bb0:	strd	r6, [fp]
   13bb4:	bl	1965c <next@@Base>
   13bb8:	ldrd	r6, [sl, #-8]
   13bbc:	mov	r3, #246	; 0xf6
   13bc0:	mov	r2, #0
   13bc4:	adds	r6, r6, #1
   13bc8:	adc	r7, r7, #0
   13bcc:	strd	r6, [sl, #-8]
   13bd0:	ldr	r1, [r0]
   13bd4:	str	r5, [sp]
   13bd8:	mov	r0, #7
   13bdc:	bl	15e24 <UnityAssertEqualNumber@@Base>
   13be0:	ldrd	r2, [sl]
   13be4:	add	r0, sp, #12
   13be8:	adds	r6, r2, #1
   13bec:	adc	r7, r3, #0
   13bf0:	strd	r6, [sl]
   13bf4:	bl	1965c <next@@Base>
   13bf8:	add	r3, r4, #320	; 0x140
   13bfc:	add	r2, r4, #320	; 0x140
   13c00:	ldrd	sl, [r3, #-8]
   13c04:	mov	r3, #248	; 0xf8
   13c08:	adds	r6, sl, #1
   13c0c:	adc	r7, fp, #0
   13c10:	strd	r6, [r2, #-8]
   13c14:	mov	r2, #0
   13c18:	ldr	r1, [r0]
   13c1c:	str	r5, [sp]
   13c20:	mov	r0, #1
   13c24:	bl	15e24 <UnityAssertEqualNumber@@Base>
   13c28:	add	r3, r4, #320	; 0x140
   13c2c:	add	r0, sp, #12
   13c30:	ldrd	r2, [r3]
   13c34:	adds	r6, r2, #1
   13c38:	adc	r7, r3, #0
   13c3c:	add	r3, r4, #320	; 0x140
   13c40:	strd	r6, [r3]
   13c44:	bl	1965c <next@@Base>
   13c48:	add	r3, r4, #336	; 0x150
   13c4c:	add	r2, r4, #336	; 0x150
   13c50:	ldrd	sl, [r3, #-8]
   13c54:	mov	r3, #250	; 0xfa
   13c58:	adds	r6, sl, #1
   13c5c:	adc	r7, fp, #0
   13c60:	strd	r6, [r2, #-8]
   13c64:	mov	r2, #0
   13c68:	ldr	r1, [r0]
   13c6c:	str	r5, [sp]
   13c70:	mov	r0, #8
   13c74:	bl	15e24 <UnityAssertEqualNumber@@Base>
   13c78:	add	r3, r4, #336	; 0x150
   13c7c:	add	r0, sp, #12
   13c80:	ldrd	r2, [r3]
   13c84:	adds	r6, r2, #1
   13c88:	adc	r7, r3, #0
   13c8c:	add	r3, r4, #336	; 0x150
   13c90:	strd	r6, [r3]
   13c94:	bl	1965c <next@@Base>
   13c98:	add	r3, r4, #352	; 0x160
   13c9c:	add	r2, r4, #352	; 0x160
   13ca0:	ldrd	sl, [r3, #-8]
   13ca4:	mov	r3, #252	; 0xfc
   13ca8:	adds	r6, sl, #1
   13cac:	adc	r7, fp, #0
   13cb0:	strd	r6, [r2, #-8]
   13cb4:	mov	r2, #0
   13cb8:	ldr	r1, [r0]
   13cbc:	str	r5, [sp]
   13cc0:	mov	r0, #6
   13cc4:	bl	15e24 <UnityAssertEqualNumber@@Base>
   13cc8:	add	r3, r4, #352	; 0x160
   13ccc:	add	r0, sp, #12
   13cd0:	ldrd	r2, [r3]
   13cd4:	adds	r6, r2, #1
   13cd8:	adc	r7, r3, #0
   13cdc:	add	r3, r4, #352	; 0x160
   13ce0:	strd	r6, [r3]
   13ce4:	bl	1965c <next@@Base>
   13ce8:	add	r3, r4, #368	; 0x170
   13cec:	add	r2, r4, #368	; 0x170
   13cf0:	ldrd	sl, [r3, #-8]
   13cf4:	mov	r3, #254	; 0xfe
   13cf8:	adds	r6, sl, #1
   13cfc:	adc	r7, fp, #0
   13d00:	strd	r6, [r2, #-8]
   13d04:	mov	r2, #0
   13d08:	ldr	r1, [r0]
   13d0c:	str	r5, [sp]
   13d10:	mov	r0, #7
   13d14:	bl	15e24 <UnityAssertEqualNumber@@Base>
   13d18:	add	r3, r4, #368	; 0x170
   13d1c:	add	r0, sp, #12
   13d20:	ldrd	r2, [r3]
   13d24:	adds	r6, r2, #1
   13d28:	adc	r7, r3, #0
   13d2c:	add	r3, r4, #368	; 0x170
   13d30:	strd	r6, [r3]
   13d34:	bl	1965c <next@@Base>
   13d38:	add	r3, r4, #384	; 0x180
   13d3c:	add	r2, r4, #384	; 0x180
   13d40:	ldrd	sl, [r3, #-8]
   13d44:	mov	r3, #256	; 0x100
   13d48:	adds	r6, sl, #1
   13d4c:	adc	r7, fp, #0
   13d50:	strd	r6, [r2, #-8]
   13d54:	mov	r2, #0
   13d58:	ldr	r1, [r0]
   13d5c:	str	r5, [sp]
   13d60:	mov	r0, #1
   13d64:	bl	15e24 <UnityAssertEqualNumber@@Base>
   13d68:	add	r3, r4, #384	; 0x180
   13d6c:	add	r0, sp, #12
   13d70:	ldrd	r2, [r3]
   13d74:	adds	r6, r2, #1
   13d78:	adc	r7, r3, #0
   13d7c:	add	r3, r4, #384	; 0x180
   13d80:	strd	r6, [r3]
   13d84:	bl	1965c <next@@Base>
   13d88:	add	r3, r4, #400	; 0x190
   13d8c:	add	r2, r4, #400	; 0x190
   13d90:	ldrd	sl, [r3, #-8]
   13d94:	ldr	r3, [pc, #256]	; 13e9c <if_with_else@@Base+0x7bc>
   13d98:	adds	r6, sl, #1
   13d9c:	adc	r7, fp, #0
   13da0:	strd	r6, [r2, #-8]
   13da4:	mov	r2, #0
   13da8:	ldr	r1, [r0]
   13dac:	str	r5, [sp]
   13db0:	mov	r0, #8
   13db4:	bl	15e24 <UnityAssertEqualNumber@@Base>
   13db8:	add	r3, r4, #400	; 0x190
   13dbc:	add	r0, sp, #12
   13dc0:	ldrd	r2, [r3]
   13dc4:	adds	r6, r2, #1
   13dc8:	adc	r7, r3, #0
   13dcc:	add	r3, r4, #400	; 0x190
   13dd0:	strd	r6, [r3]
   13dd4:	bl	1965c <next@@Base>
   13dd8:	add	r3, r4, #416	; 0x1a0
   13ddc:	add	r1, r4, #416	; 0x1a0
   13de0:	ldrd	sl, [r3, #-8]
   13de4:	mov	r2, #0
   13de8:	mov	r3, #260	; 0x104
   13dec:	adds	r6, sl, #1
   13df0:	adc	r7, fp, #0
   13df4:	strd	r6, [r1, #-8]
   13df8:	ldr	r1, [r0]
   13dfc:	str	r5, [sp]
   13e00:	mov	r0, #6
   13e04:	bl	15e24 <UnityAssertEqualNumber@@Base>
   13e08:	add	r3, r4, #416	; 0x1a0
   13e0c:	add	r0, sp, #12
   13e10:	ldrd	r2, [r3]
   13e14:	adds	r6, r2, #1
   13e18:	adc	r7, r3, #0
   13e1c:	add	r3, r4, #416	; 0x1a0
   13e20:	strd	r6, [r3]
   13e24:	bl	1965c <next@@Base>
   13e28:	add	r3, r4, #432	; 0x1b0
   13e2c:	add	r1, r4, #432	; 0x1b0
   13e30:	ldrd	r6, [r3, #-8]
   13e34:	mov	r2, #0
   13e38:	ldr	r3, [pc, #96]	; 13ea0 <if_with_else@@Base+0x7c0>
   13e3c:	adds	sl, r6, #1
   13e40:	adc	fp, r7, #0
   13e44:	strd	sl, [r1, #-8]
   13e48:	ldr	r1, [r0]
   13e4c:	str	r5, [sp]
   13e50:	mov	r0, #9
   13e54:	bl	15e24 <UnityAssertEqualNumber@@Base>
   13e58:	add	r3, r4, #432	; 0x1b0
   13e5c:	add	r0, sp, #12
   13e60:	ldrd	r2, [r3]
   13e64:	adds	r4, r2, #1
   13e68:	adc	r5, r3, #0
   13e6c:	add	r3, r8, #1280	; 0x500
   13e70:	add	r8, r8, #1296	; 0x510
   13e74:	strd	r4, [r3]
   13e78:	bl	19474 <destroy_lexer@@Base>
   13e7c:	ldrd	r2, [r8, #-8]
   13e80:	adds	r0, r2, #1
   13e84:	adc	r1, r3, #0
   13e88:	strd	r0, [r8, #-8]
   13e8c:	add	sp, sp, #28
   13e90:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13e94:	andeq	lr, r2, r0, asr ip
   13e98:	andeq	ip, r1, r8, ror #29
   13e9c:	andeq	r0, r0, r2, lsl #2
   13ea0:	andeq	r0, r0, r6, lsl #2

00013ea4 <if_without_else@@Base>:
   13ea4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13ea8:	sub	sp, sp, #28
   13eac:	ldr	r8, [pc, #1496]	; 1448c <if_without_else@@Base+0x5e8>
   13eb0:	add	r0, sp, #12
   13eb4:	add	r4, r8, #1296	; 0x510
   13eb8:	ldr	r1, [pc, #1488]	; 14490 <if_without_else@@Base+0x5ec>
   13ebc:	ldrd	r2, [r4]
   13ec0:	mov	r5, #148	; 0x94
   13ec4:	add	r9, r8, #1632	; 0x660
   13ec8:	adds	r6, r2, #1
   13ecc:	adc	r7, r3, #0
   13ed0:	strd	r6, [r4]
   13ed4:	bl	19448 <init_lexer@@Base>
   13ed8:	ldrd	r2, [r4, #8]
   13edc:	add	r0, sp, #12
   13ee0:	adds	r6, r2, #1
   13ee4:	adc	r7, r3, #0
   13ee8:	strd	r6, [r4, #8]
   13eec:	bl	1965c <next@@Base>
   13ef0:	ldrd	r6, [r4, #16]
   13ef4:	mov	r2, #0
   13ef8:	mov	r3, #140	; 0x8c
   13efc:	adds	sl, r6, #1
   13f00:	adc	fp, r7, #0
   13f04:	mov	r6, sl
   13f08:	mov	r7, fp
   13f0c:	add	fp, r8, #1584	; 0x630
   13f10:	strd	r6, [r4, #16]
   13f14:	add	r8, r8, #1552	; 0x610
   13f18:	ldr	r1, [r0]
   13f1c:	str	r5, [sp]
   13f20:	mov	r0, r2
   13f24:	bl	15e24 <UnityAssertEqualNumber@@Base>
   13f28:	ldrd	r2, [r4, #24]
   13f2c:	add	r0, sp, #12
   13f30:	adds	r6, r2, #1
   13f34:	adc	r7, r3, #0
   13f38:	strd	r6, [r4, #24]
   13f3c:	bl	1965c <next@@Base>
   13f40:	ldrd	r6, [r4, #32]
   13f44:	mov	r3, #142	; 0x8e
   13f48:	mov	r2, #0
   13f4c:	adds	r6, r6, #1
   13f50:	adc	r7, r7, #0
   13f54:	strd	r6, [r4, #32]
   13f58:	ldr	r1, [r0]
   13f5c:	str	r5, [sp]
   13f60:	mov	r0, #2
   13f64:	bl	15e24 <UnityAssertEqualNumber@@Base>
   13f68:	ldrd	r2, [r4, #40]	; 0x28
   13f6c:	add	r0, sp, #12
   13f70:	adds	r6, r2, #1
   13f74:	adc	r7, r3, #0
   13f78:	strd	r6, [r4, #40]	; 0x28
   13f7c:	bl	1965c <next@@Base>
   13f80:	ldrd	r6, [r4, #48]	; 0x30
   13f84:	mov	r3, #144	; 0x90
   13f88:	mov	r2, #0
   13f8c:	adds	r6, r6, #1
   13f90:	adc	r7, r7, #0
   13f94:	strd	r6, [r4, #48]	; 0x30
   13f98:	ldr	r1, [r0]
   13f9c:	str	r5, [sp]
   13fa0:	mov	r0, #3
   13fa4:	bl	15e24 <UnityAssertEqualNumber@@Base>
   13fa8:	ldrd	r2, [r4, #56]	; 0x38
   13fac:	add	r0, sp, #12
   13fb0:	adds	r6, r2, #1
   13fb4:	adc	r7, r3, #0
   13fb8:	strd	r6, [r4, #56]	; 0x38
   13fbc:	bl	1965c <next@@Base>
   13fc0:	ldrd	r6, [r4, #64]	; 0x40
   13fc4:	mov	r3, #146	; 0x92
   13fc8:	mov	r2, #0
   13fcc:	adds	r6, r6, #1
   13fd0:	adc	r7, r7, #0
   13fd4:	strd	r6, [r4, #64]	; 0x40
   13fd8:	ldr	r1, [r0]
   13fdc:	str	r5, [sp]
   13fe0:	mov	r0, #4
   13fe4:	bl	15e24 <UnityAssertEqualNumber@@Base>
   13fe8:	ldrd	r2, [r4, #72]	; 0x48
   13fec:	add	r0, sp, #12
   13ff0:	adds	r6, r2, #1
   13ff4:	adc	r7, r3, #0
   13ff8:	strd	r6, [r4, #72]	; 0x48
   13ffc:	bl	1965c <next@@Base>
   14000:	ldrd	r6, [r4, #80]	; 0x50
   14004:	mov	r3, r5
   14008:	mov	r2, #0
   1400c:	adds	r6, r6, #1
   14010:	adc	r7, r7, #0
   14014:	strd	r6, [r4, #80]	; 0x50
   14018:	ldr	r1, [r0]
   1401c:	str	r5, [sp]
   14020:	mov	r0, #5
   14024:	bl	15e24 <UnityAssertEqualNumber@@Base>
   14028:	ldrd	r2, [r4, #88]	; 0x58
   1402c:	add	r0, sp, #12
   14030:	adds	r6, r2, #1
   14034:	adc	r7, r3, #0
   14038:	strd	r6, [r4, #88]	; 0x58
   1403c:	bl	1965c <next@@Base>
   14040:	ldrd	r6, [r4, #96]	; 0x60
   14044:	mov	r3, #150	; 0x96
   14048:	mov	r2, #0
   1404c:	adds	r6, r6, #1
   14050:	adc	r7, r7, #0
   14054:	strd	r6, [r4, #96]	; 0x60
   14058:	ldr	r1, [r0]
   1405c:	str	r5, [sp]
   14060:	mov	r0, #10
   14064:	bl	15e24 <UnityAssertEqualNumber@@Base>
   14068:	ldrd	r2, [r4, #104]	; 0x68
   1406c:	add	r0, sp, #12
   14070:	adds	r6, r2, #1
   14074:	adc	r7, r3, #0
   14078:	strd	r6, [r4, #104]	; 0x68
   1407c:	bl	1965c <next@@Base>
   14080:	ldrd	r6, [r4, #112]	; 0x70
   14084:	mov	r3, #152	; 0x98
   14088:	mov	r2, #0
   1408c:	adds	r6, r6, #1
   14090:	adc	r7, r7, #0
   14094:	strd	r6, [r4, #112]	; 0x70
   14098:	ldr	r1, [r0]
   1409c:	str	r5, [sp]
   140a0:	mov	r0, #3
   140a4:	bl	15e24 <UnityAssertEqualNumber@@Base>
   140a8:	ldrd	r2, [r4, #120]	; 0x78
   140ac:	add	r0, sp, #12
   140b0:	adds	r6, r2, #1
   140b4:	adc	r7, r3, #0
   140b8:	strd	r6, [r4, #120]	; 0x78
   140bc:	bl	1965c <next@@Base>
   140c0:	ldrd	r6, [r4, #128]	; 0x80
   140c4:	mov	r3, #154	; 0x9a
   140c8:	mov	r2, #0
   140cc:	adds	r6, r6, #1
   140d0:	adc	r7, r7, #0
   140d4:	strd	r6, [r4, #128]	; 0x80
   140d8:	ldr	r1, [r0]
   140dc:	str	r5, [sp]
   140e0:	mov	r0, #1
   140e4:	bl	15e24 <UnityAssertEqualNumber@@Base>
   140e8:	ldrd	r2, [r4, #136]	; 0x88
   140ec:	add	r0, sp, #12
   140f0:	adds	r6, r2, #1
   140f4:	adc	r7, r3, #0
   140f8:	strd	r6, [r4, #136]	; 0x88
   140fc:	bl	1965c <next@@Base>
   14100:	ldrd	r6, [r4, #144]	; 0x90
   14104:	mov	r3, #156	; 0x9c
   14108:	mov	r2, #0
   1410c:	adds	r6, r6, #1
   14110:	adc	r7, r7, #0
   14114:	strd	r6, [r4, #144]	; 0x90
   14118:	ldr	r1, [r0]
   1411c:	str	r5, [sp]
   14120:	mov	r0, #12
   14124:	bl	15e24 <UnityAssertEqualNumber@@Base>
   14128:	ldrd	r2, [r4, #152]	; 0x98
   1412c:	add	r0, sp, #12
   14130:	adds	r6, r2, #1
   14134:	adc	r7, r3, #0
   14138:	strd	r6, [r4, #152]	; 0x98
   1413c:	bl	1965c <next@@Base>
   14140:	ldrd	r6, [r4, #160]	; 0xa0
   14144:	mov	r3, #158	; 0x9e
   14148:	mov	r2, #0
   1414c:	adds	r6, r6, #1
   14150:	adc	r7, r7, #0
   14154:	strd	r6, [r4, #160]	; 0xa0
   14158:	ldr	r1, [r0]
   1415c:	str	r5, [sp]
   14160:	mov	r0, #1
   14164:	bl	15e24 <UnityAssertEqualNumber@@Base>
   14168:	ldrd	r2, [r4, #168]	; 0xa8
   1416c:	add	r0, sp, #12
   14170:	adds	r6, r2, #1
   14174:	adc	r7, r3, #0
   14178:	strd	r6, [r4, #168]	; 0xa8
   1417c:	bl	1965c <next@@Base>
   14180:	ldrd	r6, [r4, #176]	; 0xb0
   14184:	mov	r3, #160	; 0xa0
   14188:	mov	r2, #0
   1418c:	adds	r6, r6, #1
   14190:	adc	r7, r7, #0
   14194:	strd	r6, [r4, #176]	; 0xb0
   14198:	ldr	r1, [r0]
   1419c:	str	r5, [sp]
   141a0:	mov	r0, #4
   141a4:	bl	15e24 <UnityAssertEqualNumber@@Base>
   141a8:	ldrd	r2, [r4, #184]	; 0xb8
   141ac:	add	r0, sp, #12
   141b0:	adds	r6, r2, #1
   141b4:	adc	r7, r3, #0
   141b8:	strd	r6, [r4, #184]	; 0xb8
   141bc:	bl	1965c <next@@Base>
   141c0:	ldrd	r6, [r4, #192]	; 0xc0
   141c4:	mov	r3, #162	; 0xa2
   141c8:	mov	r2, #0
   141cc:	adds	r6, r6, #1
   141d0:	adc	r7, r7, #0
   141d4:	strd	r6, [r4, #192]	; 0xc0
   141d8:	ldr	r1, [r0]
   141dc:	str	r5, [sp]
   141e0:	mov	r0, #5
   141e4:	bl	15e24 <UnityAssertEqualNumber@@Base>
   141e8:	ldrd	r2, [r4, #200]	; 0xc8
   141ec:	add	r0, sp, #12
   141f0:	adds	r6, r2, #1
   141f4:	adc	r7, r3, #0
   141f8:	strd	r6, [r4, #200]	; 0xc8
   141fc:	bl	1965c <next@@Base>
   14200:	ldrd	r6, [r4, #208]	; 0xd0
   14204:	mov	r3, #164	; 0xa4
   14208:	mov	r2, #0
   1420c:	adds	r6, r6, #1
   14210:	adc	r7, r7, #0
   14214:	strd	r6, [r4, #208]	; 0xd0
   14218:	ldr	r1, [r0]
   1421c:	str	r5, [sp]
   14220:	mov	r0, #7
   14224:	bl	15e24 <UnityAssertEqualNumber@@Base>
   14228:	ldrd	r2, [r4, #216]	; 0xd8
   1422c:	add	r0, sp, #12
   14230:	adds	r6, r2, #1
   14234:	adc	r7, r3, #0
   14238:	strd	r6, [r4, #216]	; 0xd8
   1423c:	bl	1965c <next@@Base>
   14240:	ldrd	r6, [r4, #224]	; 0xe0
   14244:	mov	r3, #166	; 0xa6
   14248:	mov	r2, #0
   1424c:	adds	r6, r6, #1
   14250:	adc	r7, r7, #0
   14254:	strd	r6, [r4, #224]	; 0xe0
   14258:	ldr	r1, [r0]
   1425c:	str	r5, [sp]
   14260:	mov	r0, #1
   14264:	bl	15e24 <UnityAssertEqualNumber@@Base>
   14268:	ldrd	r2, [r4, #232]	; 0xe8
   1426c:	add	r0, sp, #12
   14270:	adds	r6, r2, #1
   14274:	adc	r7, r3, #0
   14278:	strd	r6, [r4, #232]	; 0xe8
   1427c:	bl	1965c <next@@Base>
   14280:	ldrd	r6, [r4, #240]	; 0xf0
   14284:	mov	r3, #168	; 0xa8
   14288:	mov	r2, #0
   1428c:	adds	r6, r6, #1
   14290:	adc	r7, r7, #0
   14294:	strd	r6, [r4, #240]	; 0xf0
   14298:	ldr	r1, [r0]
   1429c:	str	r5, [sp]
   142a0:	mov	r0, #8
   142a4:	bl	15e24 <UnityAssertEqualNumber@@Base>
   142a8:	ldrd	r2, [r4, #248]	; 0xf8
   142ac:	adds	r0, r2, #1
   142b0:	adc	r1, r3, #0
   142b4:	strd	r0, [r4, #248]	; 0xf8
   142b8:	add	r0, sp, #12
   142bc:	bl	1965c <next@@Base>
   142c0:	ldrd	r2, [r8]
   142c4:	adds	r6, r2, #1
   142c8:	adc	r7, r3, #0
   142cc:	mov	r2, #0
   142d0:	strd	r6, [r8]
   142d4:	mov	r3, #170	; 0xaa
   142d8:	ldr	r1, [r0]
   142dc:	str	r5, [sp]
   142e0:	mov	r0, #6
   142e4:	bl	15e24 <UnityAssertEqualNumber@@Base>
   142e8:	add	r3, r4, #272	; 0x110
   142ec:	add	r0, sp, #12
   142f0:	ldrd	r2, [r3, #-8]
   142f4:	adds	r6, r2, #1
   142f8:	adc	r7, r3, #0
   142fc:	add	r3, r4, #272	; 0x110
   14300:	strd	r6, [r3, #-8]
   14304:	bl	1965c <next@@Base>
   14308:	add	r3, r4, #272	; 0x110
   1430c:	ldrd	r2, [r3]
   14310:	adds	r6, r2, #1
   14314:	adc	r7, r3, #0
   14318:	add	r3, r4, #272	; 0x110
   1431c:	mov	r2, #0
   14320:	strd	r6, [r3]
   14324:	mov	r3, #172	; 0xac
   14328:	ldr	r1, [r0]
   1432c:	str	r5, [sp]
   14330:	mov	r0, #7
   14334:	bl	15e24 <UnityAssertEqualNumber@@Base>
   14338:	ldrd	r2, [fp, #-8]
   1433c:	add	r0, sp, #12
   14340:	adds	r6, r2, #1
   14344:	adc	r7, r3, #0
   14348:	strd	r6, [fp, #-8]
   1434c:	bl	1965c <next@@Base>
   14350:	ldrd	r6, [fp]
   14354:	mov	r3, #174	; 0xae
   14358:	mov	r2, #0
   1435c:	adds	r6, r6, #1
   14360:	adc	r7, r7, #0
   14364:	strd	r6, [fp]
   14368:	ldr	r1, [r0]
   1436c:	str	r5, [sp]
   14370:	mov	r0, #1
   14374:	bl	15e24 <UnityAssertEqualNumber@@Base>
   14378:	add	r3, r4, #304	; 0x130
   1437c:	add	r0, sp, #12
   14380:	ldrd	r2, [r3, #-8]
   14384:	adds	r6, r2, #1
   14388:	adc	r7, r3, #0
   1438c:	add	r3, r4, #304	; 0x130
   14390:	strd	r6, [r3, #-8]
   14394:	bl	1965c <next@@Base>
   14398:	add	r3, r4, #304	; 0x130
   1439c:	add	r2, r4, #304	; 0x130
   143a0:	ldrd	sl, [r3]
   143a4:	mov	r3, #176	; 0xb0
   143a8:	adds	r6, sl, #1
   143ac:	adc	r7, fp, #0
   143b0:	strd	r6, [r2]
   143b4:	mov	r2, #0
   143b8:	ldr	r1, [r0]
   143bc:	str	r5, [sp]
   143c0:	mov	r0, #8
   143c4:	bl	15e24 <UnityAssertEqualNumber@@Base>
   143c8:	add	r3, r4, #320	; 0x140
   143cc:	add	r0, sp, #12
   143d0:	ldrd	r2, [r3, #-8]
   143d4:	adds	r6, r2, #1
   143d8:	adc	r7, r3, #0
   143dc:	add	r3, r4, #320	; 0x140
   143e0:	strd	r6, [r3, #-8]
   143e4:	bl	1965c <next@@Base>
   143e8:	add	r3, r4, #320	; 0x140
   143ec:	add	r1, r4, #320	; 0x140
   143f0:	ldrd	sl, [r3]
   143f4:	mov	r2, #0
   143f8:	mov	r3, #178	; 0xb2
   143fc:	adds	r6, sl, #1
   14400:	adc	r7, fp, #0
   14404:	strd	r6, [r1]
   14408:	ldr	r1, [r0]
   1440c:	str	r5, [sp]
   14410:	mov	r0, #6
   14414:	bl	15e24 <UnityAssertEqualNumber@@Base>
   14418:	ldrd	r2, [r9, #-8]
   1441c:	add	r0, sp, #12
   14420:	adds	r6, r2, #1
   14424:	adc	r7, r3, #0
   14428:	strd	r6, [r9, #-8]
   1442c:	bl	1965c <next@@Base>
   14430:	ldrd	r6, [r9]
   14434:	mov	r3, #180	; 0xb4
   14438:	mov	r2, #0
   1443c:	adds	sl, r6, #1
   14440:	adc	fp, r7, #0
   14444:	strd	sl, [r9]
   14448:	ldr	r1, [r0]
   1444c:	str	r5, [sp]
   14450:	mov	r0, #9
   14454:	bl	15e24 <UnityAssertEqualNumber@@Base>
   14458:	add	r3, r4, #352	; 0x160
   1445c:	add	r0, sp, #12
   14460:	ldrd	r2, [r3, #-8]
   14464:	adds	r4, r2, #1
   14468:	adc	r5, r3, #0
   1446c:	strd	r4, [r8, #88]	; 0x58
   14470:	bl	19474 <destroy_lexer@@Base>
   14474:	ldrd	r2, [r8, #96]	; 0x60
   14478:	adds	r0, r2, #1
   1447c:	adc	r1, r3, #0
   14480:	strd	r0, [r8, #96]	; 0x60
   14484:	add	sp, sp, #28
   14488:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1448c:	andeq	lr, r2, r0, asr ip
   14490:	andeq	ip, r1, ip, lsr pc

00014494 <simple_file_only_main@@Base>:
   14494:	push	{r4, r5, r6, r7, lr}
   14498:	sub	sp, sp, #28
   1449c:	ldr	r4, [pc, #716]	; 14770 <simple_file_only_main@@Base+0x2dc>
   144a0:	add	r0, sp, #12
   144a4:	ldr	r1, [pc, #712]	; 14774 <simple_file_only_main@@Base+0x2e0>
   144a8:	ldrd	r2, [r4, #-8]
   144ac:	mov	r5, #148	; 0x94
   144b0:	adds	r2, r2, #1
   144b4:	adc	r3, r3, #0
   144b8:	strd	r2, [r4, #-8]
   144bc:	bl	19448 <init_lexer@@Base>
   144c0:	ldrd	r2, [r4]
   144c4:	add	r0, sp, #12
   144c8:	adds	r2, r2, #1
   144cc:	adc	r3, r3, #0
   144d0:	strd	r2, [r4]
   144d4:	bl	1965c <next@@Base>
   144d8:	ldrd	r6, [r4, #8]
   144dc:	mov	r2, #0
   144e0:	mov	r3, #23
   144e4:	adds	r6, r6, #1
   144e8:	adc	r7, r7, #0
   144ec:	strd	r6, [r4, #8]
   144f0:	ldr	r1, [r0]
   144f4:	mov	r0, r2
   144f8:	str	r5, [sp]
   144fc:	bl	15e24 <UnityAssertEqualNumber@@Base>
   14500:	ldrd	r2, [r4, #16]
   14504:	add	r0, sp, #12
   14508:	adds	r2, r2, #1
   1450c:	adc	r3, r3, #0
   14510:	strd	r2, [r4, #16]
   14514:	bl	1965c <next@@Base>
   14518:	ldrd	r6, [r4, #24]
   1451c:	mov	r3, #25
   14520:	mov	r2, #0
   14524:	adds	r6, r6, #1
   14528:	adc	r7, r7, #0
   1452c:	strd	r6, [r4, #24]
   14530:	ldr	r1, [r0]
   14534:	str	r5, [sp]
   14538:	mov	r0, #2
   1453c:	bl	15e24 <UnityAssertEqualNumber@@Base>
   14540:	ldrd	r2, [r4, #32]
   14544:	add	r0, sp, #12
   14548:	adds	r2, r2, #1
   1454c:	adc	r3, r3, #0
   14550:	strd	r2, [r4, #32]
   14554:	bl	1965c <next@@Base>
   14558:	ldrd	r6, [r4, #40]	; 0x28
   1455c:	mov	r3, #27
   14560:	mov	r2, #0
   14564:	adds	r6, r6, #1
   14568:	adc	r7, r7, #0
   1456c:	strd	r6, [r4, #40]	; 0x28
   14570:	ldr	r1, [r0]
   14574:	str	r5, [sp]
   14578:	mov	r0, #3
   1457c:	bl	15e24 <UnityAssertEqualNumber@@Base>
   14580:	ldrd	r2, [r4, #48]	; 0x30
   14584:	add	r0, sp, #12
   14588:	adds	r2, r2, #1
   1458c:	adc	r3, r3, #0
   14590:	strd	r2, [r4, #48]	; 0x30
   14594:	bl	1965c <next@@Base>
   14598:	ldrd	r6, [r4, #56]	; 0x38
   1459c:	mov	r3, #29
   145a0:	mov	r2, #0
   145a4:	adds	r6, r6, #1
   145a8:	adc	r7, r7, #0
   145ac:	strd	r6, [r4, #56]	; 0x38
   145b0:	ldr	r1, [r0]
   145b4:	str	r5, [sp]
   145b8:	mov	r0, #4
   145bc:	bl	15e24 <UnityAssertEqualNumber@@Base>
   145c0:	ldrd	r2, [r4, #64]	; 0x40
   145c4:	add	r0, sp, #12
   145c8:	adds	r2, r2, #1
   145cc:	adc	r3, r3, #0
   145d0:	strd	r2, [r4, #64]	; 0x40
   145d4:	bl	1965c <next@@Base>
   145d8:	ldrd	r6, [r4, #72]	; 0x48
   145dc:	mov	r3, #31
   145e0:	mov	r2, #0
   145e4:	adds	r6, r6, #1
   145e8:	adc	r7, r7, #0
   145ec:	strd	r6, [r4, #72]	; 0x48
   145f0:	ldr	r1, [r0]
   145f4:	str	r5, [sp]
   145f8:	mov	r0, #5
   145fc:	bl	15e24 <UnityAssertEqualNumber@@Base>
   14600:	ldrd	r2, [r4, #80]	; 0x50
   14604:	add	r0, sp, #12
   14608:	adds	r2, r2, #1
   1460c:	adc	r3, r3, #0
   14610:	strd	r2, [r4, #80]	; 0x50
   14614:	bl	1965c <next@@Base>
   14618:	ldrd	r6, [r4, #88]	; 0x58
   1461c:	mov	r3, #33	; 0x21
   14620:	mov	r2, #0
   14624:	adds	r6, r6, #1
   14628:	adc	r7, r7, #0
   1462c:	strd	r6, [r4, #88]	; 0x58
   14630:	ldr	r1, [r0]
   14634:	str	r5, [sp]
   14638:	mov	r0, #7
   1463c:	bl	15e24 <UnityAssertEqualNumber@@Base>
   14640:	ldrd	r2, [r4, #96]	; 0x60
   14644:	add	r0, sp, #12
   14648:	adds	r2, r2, #1
   1464c:	adc	r3, r3, #0
   14650:	strd	r2, [r4, #96]	; 0x60
   14654:	bl	1965c <next@@Base>
   14658:	ldrd	r6, [r4, #104]	; 0x68
   1465c:	mov	r3, #35	; 0x23
   14660:	mov	r2, #0
   14664:	adds	r6, r6, #1
   14668:	adc	r7, r7, #0
   1466c:	strd	r6, [r4, #104]	; 0x68
   14670:	ldr	r1, [r0]
   14674:	str	r5, [sp]
   14678:	mov	r0, #1
   1467c:	bl	15e24 <UnityAssertEqualNumber@@Base>
   14680:	ldrd	r2, [r4, #112]	; 0x70
   14684:	add	r0, sp, #12
   14688:	adds	r2, r2, #1
   1468c:	adc	r3, r3, #0
   14690:	strd	r2, [r4, #112]	; 0x70
   14694:	bl	1965c <next@@Base>
   14698:	ldrd	r6, [r4, #120]	; 0x78
   1469c:	mov	r3, #37	; 0x25
   146a0:	mov	r2, #0
   146a4:	adds	r6, r6, #1
   146a8:	adc	r7, r7, #0
   146ac:	strd	r6, [r4, #120]	; 0x78
   146b0:	ldr	r1, [r0]
   146b4:	str	r5, [sp]
   146b8:	mov	r0, #8
   146bc:	bl	15e24 <UnityAssertEqualNumber@@Base>
   146c0:	ldrd	r2, [r4, #128]	; 0x80
   146c4:	add	r0, sp, #12
   146c8:	adds	r2, r2, #1
   146cc:	adc	r3, r3, #0
   146d0:	strd	r2, [r4, #128]	; 0x80
   146d4:	bl	1965c <next@@Base>
   146d8:	ldrd	r6, [r4, #136]	; 0x88
   146dc:	mov	r3, #39	; 0x27
   146e0:	mov	r2, #0
   146e4:	adds	r6, r6, #1
   146e8:	adc	r7, r7, #0
   146ec:	strd	r6, [r4, #136]	; 0x88
   146f0:	ldr	r1, [r0]
   146f4:	str	r5, [sp]
   146f8:	mov	r0, #6
   146fc:	bl	15e24 <UnityAssertEqualNumber@@Base>
   14700:	ldrd	r2, [r4, #144]	; 0x90
   14704:	add	r0, sp, #12
   14708:	adds	r2, r2, #1
   1470c:	adc	r3, r3, #0
   14710:	strd	r2, [r4, #144]	; 0x90
   14714:	bl	1965c <next@@Base>
   14718:	ldrd	r6, [r4, #152]	; 0x98
   1471c:	mov	r3, #41	; 0x29
   14720:	mov	r2, #0
   14724:	adds	r6, r6, #1
   14728:	adc	r7, r7, #0
   1472c:	strd	r6, [r4, #152]	; 0x98
   14730:	ldr	r1, [r0]
   14734:	str	r5, [sp]
   14738:	mov	r0, #9
   1473c:	bl	15e24 <UnityAssertEqualNumber@@Base>
   14740:	ldrd	r2, [r4, #160]	; 0xa0
   14744:	add	r0, sp, #12
   14748:	adds	r2, r2, #1
   1474c:	adc	r3, r3, #0
   14750:	strd	r2, [r4, #160]	; 0xa0
   14754:	bl	19474 <destroy_lexer@@Base>
   14758:	ldrd	r2, [r4, #168]	; 0xa8
   1475c:	adds	r2, r2, #1
   14760:	adc	r3, r3, #0
   14764:	strd	r2, [r4, #168]	; 0xa8
   14768:	add	sp, sp, #28
   1476c:	pop	{r4, r5, r6, r7, pc}
   14770:	ldrdeq	pc, [r2], -r0
   14774:	andeq	ip, r1, r8, ror pc

00014778 <push_token_and_call_next@@Base>:
   14778:	push	{r4, r5, r6, r7, lr}
   1477c:	sub	sp, sp, #28
   14780:	ldr	r4, [pc, #188]	; 14844 <push_token_and_call_next@@Base+0xcc>
   14784:	add	r0, sp, #12
   14788:	ldr	r1, [pc, #184]	; 14848 <push_token_and_call_next@@Base+0xd0>
   1478c:	ldrd	r2, [r4]
   14790:	adds	r2, r2, #1
   14794:	adc	r3, r3, #0
   14798:	strd	r2, [r4]
   1479c:	bl	19448 <init_lexer@@Base>
   147a0:	ldrd	r2, [r4, #8]
   147a4:	mov	r0, #8
   147a8:	adds	r2, r2, #1
   147ac:	adc	r3, r3, #0
   147b0:	strd	r2, [r4, #8]
   147b4:	bl	1205c <malloc@plt>
   147b8:	mov	r5, r0
   147bc:	mov	r1, r0
   147c0:	add	r0, sp, #12
   147c4:	bl	194d0 <push_back@@Base>
   147c8:	ldrd	r2, [r4, #16]
   147cc:	add	r0, sp, #12
   147d0:	adds	r2, r2, #1
   147d4:	adc	r3, r3, #0
   147d8:	strd	r2, [r4, #16]
   147dc:	bl	1965c <next@@Base>
   147e0:	ldrd	r6, [r4, #24]
   147e4:	mov	r1, #148	; 0x94
   147e8:	str	r1, [sp]
   147ec:	adds	r6, r6, #1
   147f0:	adc	r7, r7, #0
   147f4:	mov	r3, #113	; 0x71
   147f8:	mov	r2, #0
   147fc:	strd	r6, [r4, #24]
   14800:	mov	r1, r0
   14804:	mov	r0, r5
   14808:	bl	15e24 <UnityAssertEqualNumber@@Base>
   1480c:	ldrd	r2, [r4, #32]
   14810:	add	r0, sp, #12
   14814:	adds	r2, r2, #1
   14818:	adc	r3, r3, #0
   1481c:	strd	r2, [r4, #32]
   14820:	bl	19474 <destroy_lexer@@Base>
   14824:	ldrd	r2, [r4, #40]	; 0x28
   14828:	mov	r0, r5
   1482c:	adds	r2, r2, #1
   14830:	adc	r3, r3, #0
   14834:	strd	r2, [r4, #40]	; 0x28
   14838:	add	sp, sp, #28
   1483c:	pop	{r4, r5, r6, r7, lr}
   14840:	b	12008 <free@plt>
   14844:	andeq	pc, r2, r0, lsl #7
   14848:	andeq	ip, r1, r8, ror pc

0001484c <push_two_tokens_to_stack@@Base>:
   1484c:	push	{r4, r5, r6, r7, r8, r9, lr}
   14850:	sub	sp, sp, #28
   14854:	ldr	r4, [pc, #260]	; 14960 <push_two_tokens_to_stack@@Base+0x114>
   14858:	ldr	r1, [pc, #260]	; 14964 <push_two_tokens_to_stack@@Base+0x118>
   1485c:	add	r0, sp, #12
   14860:	ldrd	r2, [r4]
   14864:	mov	r7, #148	; 0x94
   14868:	adds	r2, r2, #1
   1486c:	adc	r3, r3, #0
   14870:	strd	r2, [r4]
   14874:	bl	19448 <init_lexer@@Base>
   14878:	ldrd	r2, [r4, #8]
   1487c:	mov	r0, #8
   14880:	adds	r2, r2, #1
   14884:	adc	r3, r3, #0
   14888:	strd	r2, [r4, #8]
   1488c:	bl	1205c <malloc@plt>
   14890:	mov	r6, r0
   14894:	mov	r0, #8
   14898:	bl	1205c <malloc@plt>
   1489c:	mov	r1, r6
   148a0:	mov	r5, r0
   148a4:	add	r0, sp, #12
   148a8:	bl	194d0 <push_back@@Base>
   148ac:	ldrd	r8, [r4, #16]
   148b0:	ldr	r0, [sp, #16]
   148b4:	mov	r1, r6
   148b8:	adds	r8, r8, #1
   148bc:	adc	r9, r9, #0
   148c0:	ldr	r0, [r0, #4]
   148c4:	mov	r3, #86	; 0x56
   148c8:	str	r7, [sp]
   148cc:	mov	r2, #0
   148d0:	strd	r8, [r4, #16]
   148d4:	bl	15e24 <UnityAssertEqualNumber@@Base>
   148d8:	ldrd	r2, [r4, #24]
   148dc:	mov	r1, r5
   148e0:	add	r0, sp, #12
   148e4:	adds	r2, r2, #1
   148e8:	adc	r3, r3, #0
   148ec:	strd	r2, [r4, #24]
   148f0:	bl	194d0 <push_back@@Base>
   148f4:	ldrd	r8, [r4, #32]
   148f8:	ldr	r3, [sp, #16]
   148fc:	mov	r1, r5
   14900:	adds	r8, r8, #1
   14904:	adc	r9, r9, #0
   14908:	ldr	r0, [r3, #4]
   1490c:	mov	r2, #0
   14910:	str	r7, [sp]
   14914:	mov	r3, #88	; 0x58
   14918:	strd	r8, [r4, #32]
   1491c:	bl	15e24 <UnityAssertEqualNumber@@Base>
   14920:	ldrd	r2, [r4, #40]	; 0x28
   14924:	add	r0, sp, #12
   14928:	adds	r2, r2, #1
   1492c:	adc	r3, r3, #0
   14930:	strd	r2, [r4, #40]	; 0x28
   14934:	bl	19474 <destroy_lexer@@Base>
   14938:	ldrd	r2, [r4, #48]	; 0x30
   1493c:	mov	r0, r6
   14940:	adds	r2, r2, #1
   14944:	adc	r3, r3, #0
   14948:	strd	r2, [r4, #48]	; 0x30
   1494c:	bl	12008 <free@plt>
   14950:	mov	r0, r5
   14954:	add	sp, sp, #28
   14958:	pop	{r4, r5, r6, r7, r8, r9, lr}
   1495c:	b	12008 <free@plt>
   14960:			; <UNDEFINED> instruction: 0x0002f3b0
   14964:	andeq	ip, r1, r8, ror pc

00014968 <push_token_to_stack@@Base>:
   14968:	push	{r4, r5, r6, r7, lr}
   1496c:	sub	sp, sp, #28
   14970:	ldr	r4, [pc, #168]	; 14a20 <push_token_to_stack@@Base+0xb8>
   14974:	add	r0, sp, #12
   14978:	ldr	r1, [pc, #164]	; 14a24 <push_token_to_stack@@Base+0xbc>
   1497c:	ldrd	r2, [r4, #-8]
   14980:	adds	r2, r2, #1
   14984:	adc	r3, r3, #0
   14988:	strd	r2, [r4, #-8]
   1498c:	bl	19448 <init_lexer@@Base>
   14990:	ldrd	r2, [r4]
   14994:	mov	r0, #8
   14998:	adds	r2, r2, #1
   1499c:	adc	r3, r3, #0
   149a0:	strd	r2, [r4]
   149a4:	bl	1205c <malloc@plt>
   149a8:	mov	r5, r0
   149ac:	mov	r1, r0
   149b0:	add	r0, sp, #12
   149b4:	bl	194d0 <push_back@@Base>
   149b8:	ldrd	r6, [r4, #8]
   149bc:	ldr	r0, [sp, #16]
   149c0:	mov	r1, #148	; 0x94
   149c4:	adds	r6, r6, #1
   149c8:	adc	r7, r7, #0
   149cc:	ldr	r0, [r0, #4]
   149d0:	mov	r3, #62	; 0x3e
   149d4:	str	r1, [sp]
   149d8:	mov	r2, #0
   149dc:	mov	r1, r5
   149e0:	strd	r6, [r4, #8]
   149e4:	bl	15e24 <UnityAssertEqualNumber@@Base>
   149e8:	ldrd	r2, [r4, #16]
   149ec:	add	r0, sp, #12
   149f0:	adds	r2, r2, #1
   149f4:	adc	r3, r3, #0
   149f8:	strd	r2, [r4, #16]
   149fc:	bl	19474 <destroy_lexer@@Base>
   14a00:	ldrd	r2, [r4, #24]
   14a04:	mov	r0, r5
   14a08:	adds	r2, r2, #1
   14a0c:	adc	r3, r3, #0
   14a10:	strd	r2, [r4, #24]
   14a14:	add	sp, sp, #28
   14a18:	pop	{r4, r5, r6, r7, lr}
   14a1c:	b	12008 <free@plt>
   14a20:	strdeq	pc, [r2], -r0
   14a24:	andeq	ip, r1, r8, ror pc
   14a28:	push	{r4, r5, r6, r7, r8, lr}
   14a2c:	mov	r6, r0
   14a30:	ldr	r7, [pc, #240]	; 14b28 <push_token_to_stack@@Base+0x1c0>
   14a34:	ldr	r5, [pc, #240]	; 14b2c <push_token_to_stack@@Base+0x1c4>
   14a38:	mov	r0, #48	; 0x30
   14a3c:	ldrd	r2, [r7]
   14a40:	ldr	r1, [r5]
   14a44:	mov	r8, #1
   14a48:	adds	r2, r2, #1
   14a4c:	adc	r3, r3, #0
   14a50:	mov	r4, #2
   14a54:	strd	r2, [r7]
   14a58:	bl	12134 <putc@plt>
   14a5c:	ldrd	r2, [r7, #8]
   14a60:	ldr	r1, [r5]
   14a64:	mov	r0, #120	; 0x78
   14a68:	adds	r2, r2, #1
   14a6c:	adc	r3, r3, #0
   14a70:	strd	r2, [r7, #8]
   14a74:	bl	12134 <putc@plt>
   14a78:	b	14aa0 <push_token_to_stack@@Base+0x138>
   14a7c:	ldr	r1, [r5]
   14a80:	bl	12134 <putc@plt>
   14a84:	ldrd	r2, [r7, #32]
   14a88:	adds	r2, r2, #1
   14a8c:	adc	r3, r3, #0
   14a90:	cmp	r4, #0
   14a94:	strd	r2, [r7, #32]
   14a98:	beq	14b14 <push_token_to_stack@@Base+0x1ac>
   14a9c:	mov	r4, r8
   14aa0:	sub	r4, r4, #1
   14aa4:	ldrd	r2, [r7, #40]	; 0x28
   14aa8:	uxtb	r4, r4
   14aac:	lsl	r1, r4, #2
   14ab0:	adds	r2, r2, #1
   14ab4:	lsr	r1, r6, r1
   14ab8:	adc	r3, r3, #0
   14abc:	and	r1, r1, #15
   14ac0:	cmp	r1, #9
   14ac4:	add	r0, r1, #48	; 0x30
   14ac8:	strd	r2, [r7, #40]	; 0x28
   14acc:	bls	14a7c <push_token_to_stack@@Base+0x114>
   14ad0:	ldrd	r2, [r7, #16]
   14ad4:	add	r0, r1, #55	; 0x37
   14ad8:	ldr	r1, [r5]
   14adc:	adds	r2, r2, #1
   14ae0:	adc	r3, r3, #0
   14ae4:	strd	r2, [r7, #16]
   14ae8:	bl	12134 <putc@plt>
   14aec:	ldrd	r0, [r7, #24]
   14af0:	ldrd	r2, [r7, #32]
   14af4:	adds	r0, r0, #1
   14af8:	adc	r1, r1, #0
   14afc:	adds	r2, r2, #1
   14b00:	adc	r3, r3, #0
   14b04:	cmp	r4, #0
   14b08:	strd	r0, [r7, #24]
   14b0c:	strd	r2, [r7, #32]
   14b10:	bne	14a9c <push_token_to_stack@@Base+0x134>
   14b14:	ldrd	r2, [r7, #48]	; 0x30
   14b18:	adds	r2, r2, #1
   14b1c:	adc	r3, r3, #0
   14b20:	strd	r2, [r7, #48]	; 0x30
   14b24:	pop	{r4, r5, r6, r7, r8, pc}
   14b28:	andeq	pc, r2, r0, lsl #10
   14b2c:	andeq	lr, r2, r4, asr #24

00014b30 <UnityPrint@@Base>:
   14b30:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14b34:	ldr	r4, [pc, #380]	; 14cb8 <UnityPrint@@Base+0x188>
   14b38:	ldrd	r2, [r4, #56]	; 0x38
   14b3c:	adds	r2, r2, #1
   14b40:	adc	r3, r3, #0
   14b44:	subs	r5, r0, #0
   14b48:	strd	r2, [r4, #56]	; 0x38
   14b4c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   14b50:	ldrd	r2, [r4, #64]	; 0x40
   14b54:	ldrb	r1, [r5]
   14b58:	adds	r2, r2, #1
   14b5c:	adc	r3, r3, #0
   14b60:	cmp	r1, #0
   14b64:	strd	r2, [r4, #64]	; 0x40
   14b68:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   14b6c:	ldr	r7, [pc, #328]	; 14cbc <UnityPrint@@Base+0x18c>
   14b70:	mov	r6, #92	; 0x5c
   14b74:	mov	r8, #110	; 0x6e
   14b78:	mov	r9, #114	; 0x72
   14b7c:	b	14bec <UnityPrint@@Base+0xbc>
   14b80:	cmp	r1, #13
   14b84:	beq	14c6c <UnityPrint@@Base+0x13c>
   14b88:	cmp	r1, #10
   14b8c:	beq	14c1c <UnityPrint@@Base+0xec>
   14b90:	ldrd	r2, [r4, #104]	; 0x68
   14b94:	ldr	r1, [r7]
   14b98:	adds	r2, r2, #1
   14b9c:	adc	r3, r3, #0
   14ba0:	strd	r2, [r4, #104]	; 0x68
   14ba4:	bl	12134 <putc@plt>
   14ba8:	ldrd	r2, [r4, #128]	; 0x80
   14bac:	ldrb	r0, [r5]
   14bb0:	adds	r2, r2, #1
   14bb4:	adc	r3, r3, #0
   14bb8:	strd	r2, [r4, #128]	; 0x80
   14bbc:	bl	14a28 <push_token_to_stack@@Base+0xc0>
   14bc0:	ldrd	r2, [r4, #136]	; 0x88
   14bc4:	adds	r2, r2, #1
   14bc8:	adc	r3, r3, #0
   14bcc:	strd	r2, [r4, #136]	; 0x88
   14bd0:	ldrd	r2, [r4, #144]	; 0x90
   14bd4:	ldrb	r1, [r5, #1]!
   14bd8:	adds	r2, r2, #1
   14bdc:	adc	r3, r3, #0
   14be0:	cmp	r1, #0
   14be4:	strd	r2, [r4, #144]	; 0x90
   14be8:	beq	14c68 <UnityPrint@@Base+0x138>
   14bec:	ldrd	r2, [r4, #152]	; 0x98
   14bf0:	sub	ip, r1, #32
   14bf4:	mov	r0, r6
   14bf8:	adds	r2, r2, #1
   14bfc:	adc	r3, r3, #0
   14c00:	cmp	ip, #94	; 0x5e
   14c04:	strd	r2, [r4, #152]	; 0x98
   14c08:	bhi	14b80 <UnityPrint@@Base+0x50>
   14c0c:	mov	r0, r1
   14c10:	ldr	r1, [r7]
   14c14:	bl	12134 <putc@plt>
   14c18:	b	14bd0 <UnityPrint@@Base+0xa0>
   14c1c:	ldrd	r2, [r4, #96]	; 0x60
   14c20:	ldr	r1, [r7]
   14c24:	mov	r0, r6
   14c28:	adds	r2, r2, #1
   14c2c:	adc	r3, r3, #0
   14c30:	strd	r2, [r4, #96]	; 0x60
   14c34:	bl	12134 <putc@plt>
   14c38:	ldrd	r2, [r4, #112]	; 0x70
   14c3c:	ldr	r1, [r7]
   14c40:	mov	r0, r8
   14c44:	adds	r2, r2, #1
   14c48:	adc	r3, r3, #0
   14c4c:	strd	r2, [r4, #112]	; 0x70
   14c50:	bl	12134 <putc@plt>
   14c54:	ldrd	r2, [r4, #120]	; 0x78
   14c58:	adds	r2, r2, #1
   14c5c:	adc	r3, r3, #0
   14c60:	strd	r2, [r4, #120]	; 0x78
   14c64:	b	14bd0 <UnityPrint@@Base+0xa0>
   14c68:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14c6c:	ldrd	r2, [r4, #72]	; 0x48
   14c70:	ldr	r1, [r7]
   14c74:	mov	r0, r6
   14c78:	adds	r2, r2, #1
   14c7c:	adc	r3, r3, #0
   14c80:	strd	r2, [r4, #72]	; 0x48
   14c84:	bl	12134 <putc@plt>
   14c88:	ldrd	r2, [r4, #80]	; 0x50
   14c8c:	ldr	r1, [r7]
   14c90:	mov	r0, r9
   14c94:	adds	r2, r2, #1
   14c98:	adc	r3, r3, #0
   14c9c:	strd	r2, [r4, #80]	; 0x50
   14ca0:	bl	12134 <putc@plt>
   14ca4:	ldrd	r2, [r4, #88]	; 0x58
   14ca8:	adds	r2, r2, #1
   14cac:	adc	r3, r3, #0
   14cb0:	strd	r2, [r4, #88]	; 0x58
   14cb4:	b	14bd0 <UnityPrint@@Base+0xa0>
   14cb8:	andeq	pc, r2, r0, lsl #10
   14cbc:	andeq	lr, r2, r4, asr #24
   14cc0:	push	{r4, r5, r6, lr}
   14cc4:	ldr	r4, [pc, #268]	; 14dd8 <UnityPrint@@Base+0x2a8>
   14cc8:	ldrd	r2, [r4, #-8]
   14ccc:	adds	r2, r2, #1
   14cd0:	adc	r3, r3, #0
   14cd4:	subs	r6, r0, #0
   14cd8:	strd	r2, [r4, #-8]
   14cdc:	popeq	{r4, r5, r6, pc}
   14ce0:	ldrd	r2, [r4]
   14ce4:	ldr	r0, [pc, #240]	; 14ddc <UnityPrint@@Base+0x2ac>
   14ce8:	ldr	r5, [pc, #240]	; 14de0 <UnityPrint@@Base+0x2b0>
   14cec:	adds	r2, r2, #1
   14cf0:	adc	r3, r3, #0
   14cf4:	strd	r2, [r4]
   14cf8:	bl	14b30 <UnityPrint@@Base>
   14cfc:	ldrd	r2, [r4, #8]
   14d00:	ldr	r1, [r5, #8]
   14d04:	adds	r2, r2, #1
   14d08:	adc	r3, r3, #0
   14d0c:	cmp	r1, #0
   14d10:	strd	r2, [r4, #8]
   14d14:	beq	14dbc <UnityPrint@@Base+0x28c>
   14d18:	ldrd	r2, [r4, #16]
   14d1c:	ldr	r0, [pc, #192]	; 14de4 <UnityPrint@@Base+0x2b4>
   14d20:	adds	r2, r2, #1
   14d24:	adc	r3, r3, #0
   14d28:	strd	r2, [r4, #16]
   14d2c:	bl	14b30 <UnityPrint@@Base>
   14d30:	ldrd	r2, [r4, #24]
   14d34:	ldr	r0, [r5, #8]
   14d38:	adds	r2, r2, #1
   14d3c:	adc	r3, r3, #0
   14d40:	strd	r2, [r4, #24]
   14d44:	bl	14b30 <UnityPrint@@Base>
   14d48:	ldrd	r2, [r4, #32]
   14d4c:	ldr	r1, [r5, #12]
   14d50:	adds	r2, r2, #1
   14d54:	adc	r3, r3, #0
   14d58:	cmp	r1, #0
   14d5c:	strd	r2, [r4, #32]
   14d60:	beq	14da4 <UnityPrint@@Base+0x274>
   14d64:	ldrd	r2, [r4, #40]	; 0x28
   14d68:	ldr	r0, [pc, #120]	; 14de8 <UnityPrint@@Base+0x2b8>
   14d6c:	adds	r2, r2, #1
   14d70:	adc	r3, r3, #0
   14d74:	strd	r2, [r4, #40]	; 0x28
   14d78:	bl	14b30 <UnityPrint@@Base>
   14d7c:	ldrd	r2, [r4, #48]	; 0x30
   14d80:	ldr	r0, [r5, #12]
   14d84:	adds	r2, r2, #1
   14d88:	adc	r3, r3, #0
   14d8c:	strd	r2, [r4, #48]	; 0x30
   14d90:	bl	14b30 <UnityPrint@@Base>
   14d94:	ldrd	r2, [r4, #56]	; 0x38
   14d98:	adds	r2, r2, #1
   14d9c:	adc	r3, r3, #0
   14da0:	strd	r2, [r4, #56]	; 0x38
   14da4:	ldr	r0, [pc, #48]	; 14ddc <UnityPrint@@Base+0x2ac>
   14da8:	bl	14b30 <UnityPrint@@Base>
   14dac:	ldrd	r2, [r4, #64]	; 0x40
   14db0:	adds	r2, r2, #1
   14db4:	adc	r3, r3, #0
   14db8:	strd	r2, [r4, #64]	; 0x40
   14dbc:	mov	r0, r6
   14dc0:	bl	14b30 <UnityPrint@@Base>
   14dc4:	ldrd	r2, [r4, #72]	; 0x48
   14dc8:	adds	r2, r2, #1
   14dcc:	adc	r3, r3, #0
   14dd0:	strd	r2, [r4, #72]	; 0x48
   14dd4:	pop	{r4, r5, r6, pc}
   14dd8:	andeq	pc, r2, r0, lsl r6	; <UNPREDICTABLE>
   14ddc:	andeq	sp, r1, ip, ror r2
   14de0:	andeq	r0, r3, r0, ror #8
   14de4:	andeq	sp, r1, r0, lsl #5
   14de8:	andeq	sp, r1, ip, lsl #5

00014dec <UnityPrintLen@@Base>:
   14dec:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14df0:	ldr	r4, [pc, #440]	; 14fb0 <UnityPrintLen@@Base+0x1c4>
   14df4:	ldrd	r2, [r4]
   14df8:	adds	r2, r2, #1
   14dfc:	adc	r3, r3, #0
   14e00:	subs	r5, r0, #0
   14e04:	strd	r2, [r4]
   14e08:	popeq	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14e0c:	ldrd	r2, [r4, #8]
   14e10:	mov	r8, r1
   14e14:	ldrb	r1, [r5]
   14e18:	adds	r2, r2, #1
   14e1c:	adc	r3, r3, #0
   14e20:	cmp	r1, #0
   14e24:	strd	r2, [r4, #8]
   14e28:	popeq	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14e2c:	ldrd	r2, [r4, #96]	; 0x60
   14e30:	mov	r9, r5
   14e34:	adds	r2, r2, #1
   14e38:	adc	r3, r3, #0
   14e3c:	cmp	r8, #0
   14e40:	strd	r2, [r4, #96]	; 0x60
   14e44:	popeq	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14e48:	ldr	r7, [pc, #356]	; 14fb4 <UnityPrintLen@@Base+0x1c8>
   14e4c:	mov	r6, #92	; 0x5c
   14e50:	mov	sl, #110	; 0x6e
   14e54:	mov	fp, #114	; 0x72
   14e58:	b	14ee4 <UnityPrintLen@@Base+0xf8>
   14e5c:	cmp	r1, #13
   14e60:	beq	14f64 <UnityPrintLen@@Base+0x178>
   14e64:	cmp	r1, #10
   14e68:	beq	14f14 <UnityPrintLen@@Base+0x128>
   14e6c:	ldrd	r2, [r4, #48]	; 0x30
   14e70:	ldr	r1, [r7]
   14e74:	adds	r2, r2, #1
   14e78:	adc	r3, r3, #0
   14e7c:	strd	r2, [r4, #48]	; 0x30
   14e80:	bl	12134 <putc@plt>
   14e84:	ldrd	r2, [r4, #72]	; 0x48
   14e88:	ldrb	r0, [r5]
   14e8c:	adds	r2, r2, #1
   14e90:	adc	r3, r3, #0
   14e94:	strd	r2, [r4, #72]	; 0x48
   14e98:	bl	14a28 <push_token_to_stack@@Base+0xc0>
   14e9c:	ldrd	r2, [r4, #80]	; 0x50
   14ea0:	adds	r2, r2, #1
   14ea4:	adc	r3, r3, #0
   14ea8:	strd	r2, [r4, #80]	; 0x50
   14eac:	ldrd	r2, [r4, #88]	; 0x58
   14eb0:	ldrb	r1, [r5, #1]!
   14eb4:	adds	r2, r2, #1
   14eb8:	adc	r3, r3, #0
   14ebc:	cmp	r1, #0
   14ec0:	sub	r0, r5, r9
   14ec4:	strd	r2, [r4, #88]	; 0x58
   14ec8:	popeq	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14ecc:	ldrd	r2, [r4, #96]	; 0x60
   14ed0:	adds	r2, r2, #1
   14ed4:	adc	r3, r3, #0
   14ed8:	cmp	r0, r8
   14edc:	strd	r2, [r4, #96]	; 0x60
   14ee0:	bcs	14f60 <UnityPrintLen@@Base+0x174>
   14ee4:	ldrd	r2, [r4, #104]	; 0x68
   14ee8:	sub	ip, r1, #32
   14eec:	mov	r0, r6
   14ef0:	adds	r2, r2, #1
   14ef4:	adc	r3, r3, #0
   14ef8:	cmp	ip, #94	; 0x5e
   14efc:	strd	r2, [r4, #104]	; 0x68
   14f00:	bhi	14e5c <UnityPrintLen@@Base+0x70>
   14f04:	mov	r0, r1
   14f08:	ldr	r1, [r7]
   14f0c:	bl	12134 <putc@plt>
   14f10:	b	14eac <UnityPrintLen@@Base+0xc0>
   14f14:	ldrd	r2, [r4, #40]	; 0x28
   14f18:	ldr	r1, [r7]
   14f1c:	mov	r0, r6
   14f20:	adds	r2, r2, #1
   14f24:	adc	r3, r3, #0
   14f28:	strd	r2, [r4, #40]	; 0x28
   14f2c:	bl	12134 <putc@plt>
   14f30:	ldrd	r2, [r4, #56]	; 0x38
   14f34:	ldr	r1, [r7]
   14f38:	mov	r0, sl
   14f3c:	adds	r2, r2, #1
   14f40:	adc	r3, r3, #0
   14f44:	strd	r2, [r4, #56]	; 0x38
   14f48:	bl	12134 <putc@plt>
   14f4c:	ldrd	r2, [r4, #64]	; 0x40
   14f50:	adds	r2, r2, #1
   14f54:	adc	r3, r3, #0
   14f58:	strd	r2, [r4, #64]	; 0x40
   14f5c:	b	14eac <UnityPrintLen@@Base+0xc0>
   14f60:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14f64:	ldrd	r2, [r4, #16]
   14f68:	ldr	r1, [r7]
   14f6c:	mov	r0, r6
   14f70:	adds	r2, r2, #1
   14f74:	adc	r3, r3, #0
   14f78:	strd	r2, [r4, #16]
   14f7c:	bl	12134 <putc@plt>
   14f80:	ldrd	r2, [r4, #24]
   14f84:	ldr	r1, [r7]
   14f88:	mov	r0, fp
   14f8c:	adds	r2, r2, #1
   14f90:	adc	r3, r3, #0
   14f94:	strd	r2, [r4, #24]
   14f98:	bl	12134 <putc@plt>
   14f9c:	ldrd	r2, [r4, #32]
   14fa0:	adds	r2, r2, #1
   14fa4:	adc	r3, r3, #0
   14fa8:	strd	r2, [r4, #32]
   14fac:	b	14eac <UnityPrintLen@@Base+0xc0>
   14fb0:	andeq	pc, r2, r0, ror #12
   14fb4:	andeq	lr, r2, r4, asr #24

00014fb8 <UnityPrintNumber@@Base>:
   14fb8:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14fbc:	subs	r4, r0, #0
   14fc0:	ldr	r8, [pc, #508]	; 151c4 <UnityPrintNumber@@Base+0x20c>
   14fc4:	ldr	r5, [pc, #508]	; 151c8 <UnityPrintNumber@@Base+0x210>
   14fc8:	blt	15158 <UnityPrintNumber@@Base+0x1a0>
   14fcc:	ldrd	r2, [r8, #8]
   14fd0:	adds	r2, r2, #1
   14fd4:	adc	r3, r3, #0
   14fd8:	strd	r2, [r8, #8]
   14fdc:	cmp	r4, #9
   14fe0:	bls	1517c <UnityPrintNumber@@Base+0x1c4>
   14fe4:	ldrd	r0, [r8, #24]
   14fe8:	ldrd	r2, [r8, #16]
   14fec:	adds	r6, r0, #1
   14ff0:	adc	r7, r1, #0
   14ff4:	adds	sl, r2, #1
   14ff8:	adc	fp, r3, #0
   14ffc:	cmp	r4, #99	; 0x63
   15000:	strd	r6, [r8, #24]
   15004:	bls	15184 <UnityPrintNumber@@Base+0x1cc>
   15008:	adds	r6, r0, #2
   1500c:	adc	r7, r1, #0
   15010:	adds	sl, r2, #2
   15014:	adc	fp, r3, #0
   15018:	cmp	r4, #1000	; 0x3e8
   1501c:	bcc	1518c <UnityPrintNumber@@Base+0x1d4>
   15020:	adds	r6, r0, #3
   15024:	ldr	ip, [pc, #416]	; 151cc <UnityPrintNumber@@Base+0x214>
   15028:	adc	r7, r1, #0
   1502c:	adds	sl, r2, #3
   15030:	adc	fp, r3, #0
   15034:	cmp	r4, ip
   15038:	bls	15194 <UnityPrintNumber@@Base+0x1dc>
   1503c:	adds	r6, r0, #4
   15040:	ldr	ip, [pc, #392]	; 151d0 <UnityPrintNumber@@Base+0x218>
   15044:	adc	r7, r1, #0
   15048:	adds	sl, r2, #4
   1504c:	adc	fp, r3, #0
   15050:	cmp	r4, ip
   15054:	bls	1519c <UnityPrintNumber@@Base+0x1e4>
   15058:	adds	r6, r0, #5
   1505c:	ldr	ip, [pc, #368]	; 151d4 <UnityPrintNumber@@Base+0x21c>
   15060:	adc	r7, r1, #0
   15064:	adds	sl, r2, #5
   15068:	adc	fp, r3, #0
   1506c:	cmp	r4, ip
   15070:	bls	151a4 <UnityPrintNumber@@Base+0x1ec>
   15074:	adds	r6, r0, #6
   15078:	ldr	ip, [pc, #344]	; 151d8 <UnityPrintNumber@@Base+0x220>
   1507c:	adc	r7, r1, #0
   15080:	adds	sl, r2, #6
   15084:	adc	fp, r3, #0
   15088:	cmp	r4, ip
   1508c:	bls	151ac <UnityPrintNumber@@Base+0x1f4>
   15090:	adds	r6, r0, #7
   15094:	ldr	ip, [pc, #320]	; 151dc <UnityPrintNumber@@Base+0x224>
   15098:	adc	r7, r1, #0
   1509c:	adds	sl, r2, #7
   150a0:	adc	fp, r3, #0
   150a4:	cmp	r4, ip
   150a8:	bls	151b4 <UnityPrintNumber@@Base+0x1fc>
   150ac:	adds	r6, r0, #8
   150b0:	ldr	ip, [pc, #296]	; 151e0 <UnityPrintNumber@@Base+0x228>
   150b4:	adc	r7, r1, #0
   150b8:	adds	sl, r2, #8
   150bc:	adc	fp, r3, #0
   150c0:	cmp	r4, ip
   150c4:	bls	151bc <UnityPrintNumber@@Base+0x204>
   150c8:	adds	r6, r0, #9
   150cc:	adc	r7, r1, #0
   150d0:	ldr	r9, [pc, #268]	; 151e4 <UnityPrintNumber@@Base+0x22c>
   150d4:	adds	sl, r2, #9
   150d8:	adc	fp, r3, #0
   150dc:	strd	r6, [r8, #24]
   150e0:	strd	sl, [r8, #16]
   150e4:	ldrd	r2, [r8, #32]
   150e8:	ldr	r6, [pc, #248]	; 151e8 <UnityPrintNumber@@Base+0x230>
   150ec:	adds	r2, r2, #1
   150f0:	adc	r3, r3, #0
   150f4:	strd	r2, [r8, #32]
   150f8:	b	1510c <UnityPrintNumber@@Base+0x154>
   150fc:	ldrd	r2, [r8, #48]	; 0x30
   15100:	adds	r2, r2, #1
   15104:	adc	r3, r3, #0
   15108:	strd	r2, [r8, #48]	; 0x30
   1510c:	mov	r1, r9
   15110:	mov	r0, r4
   15114:	bl	1c9a0 <__gcov_sort_n_vals@@Base+0x534>
   15118:	ldr	r1, [r5]
   1511c:	umull	r2, r3, r6, r0
   15120:	lsr	r3, r3, #3
   15124:	add	r3, r3, r3, lsl #2
   15128:	sub	r0, r0, r3, lsl #1
   1512c:	umull	r3, r9, r6, r9
   15130:	add	r0, r0, #48	; 0x30
   15134:	uxtb	r0, r0
   15138:	bl	12134 <putc@plt>
   1513c:	lsrs	r9, r9, #3
   15140:	bne	150fc <UnityPrintNumber@@Base+0x144>
   15144:	ldrd	r2, [r8, #40]	; 0x28
   15148:	adds	r2, r2, #1
   1514c:	adc	r3, r3, #0
   15150:	strd	r2, [r8, #40]	; 0x28
   15154:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15158:	ldrd	r2, [r8]
   1515c:	ldr	r1, [r5]
   15160:	mov	r0, #45	; 0x2d
   15164:	adds	r2, r2, #1
   15168:	adc	r3, r3, #0
   1516c:	rsb	r4, r4, #0
   15170:	strd	r2, [r8]
   15174:	bl	12134 <putc@plt>
   15178:	b	14fdc <UnityPrintNumber@@Base+0x24>
   1517c:	mov	r9, #1
   15180:	b	150e4 <UnityPrintNumber@@Base+0x12c>
   15184:	mov	r9, #10
   15188:	b	150e0 <UnityPrintNumber@@Base+0x128>
   1518c:	mov	r9, #100	; 0x64
   15190:	b	150dc <UnityPrintNumber@@Base+0x124>
   15194:	mov	r9, #1000	; 0x3e8
   15198:	b	150dc <UnityPrintNumber@@Base+0x124>
   1519c:	ldr	r9, [pc, #72]	; 151ec <UnityPrintNumber@@Base+0x234>
   151a0:	b	150dc <UnityPrintNumber@@Base+0x124>
   151a4:	ldr	r9, [pc, #68]	; 151f0 <UnityPrintNumber@@Base+0x238>
   151a8:	b	150dc <UnityPrintNumber@@Base+0x124>
   151ac:	ldr	r9, [pc, #64]	; 151f4 <UnityPrintNumber@@Base+0x23c>
   151b0:	b	150dc <UnityPrintNumber@@Base+0x124>
   151b4:	ldr	r9, [pc, #60]	; 151f8 <UnityPrintNumber@@Base+0x240>
   151b8:	b	150dc <UnityPrintNumber@@Base+0x124>
   151bc:	ldr	r9, [pc, #56]	; 151fc <UnityPrintNumber@@Base+0x244>
   151c0:	b	150dc <UnityPrintNumber@@Base+0x124>
   151c4:	ldrdeq	pc, [r2], -r0
   151c8:	andeq	lr, r2, r4, asr #24
   151cc:	andeq	r2, r0, pc, lsl #14
   151d0:	muleq	r1, pc, r6	; <UNPREDICTABLE>
   151d4:	andeq	r4, pc, pc, lsr r2	; <UNPREDICTABLE>
   151d8:	addseq	r9, r8, pc, ror r6
   151dc:	ldrbeq	lr, [r5, #255]!	; 0xff
   151e0:	blcc	fe6c79e4 <__bss_end__@@Base+0xfe6963a4>
   151e4:	blcc	fe6c79ec <__bss_end__@@Base+0xfe6963ac>
   151e8:	stclgt	12, cr12, [ip], {205}	; 0xcd
   151ec:	andeq	r2, r0, r0, lsl r7
   151f0:	andeq	r8, r1, r0, lsr #13
   151f4:	andeq	r4, pc, r0, asr #4
   151f8:	addseq	r9, r8, r0, lsl #13
   151fc:	ldrbeq	lr, [r5, #256]!	; 0x100
   15200:	push	{r4, r5, r6, lr}
   15204:	mov	r6, r1
   15208:	ldr	r4, [pc, #176]	; 152c0 <UnityPrintNumber@@Base+0x308>
   1520c:	ldr	r5, [pc, #176]	; 152c4 <UnityPrintNumber@@Base+0x30c>
   15210:	ldrd	r2, [r4, #-8]
   15214:	adds	r2, r2, #1
   15218:	adc	r3, r3, #0
   1521c:	strd	r2, [r4, #-8]
   15220:	bl	14b30 <UnityPrint@@Base>
   15224:	ldrd	r2, [r4]
   15228:	ldr	r1, [r5]
   1522c:	mov	r0, #58	; 0x3a
   15230:	adds	r2, r2, #1
   15234:	adc	r3, r3, #0
   15238:	strd	r2, [r4]
   1523c:	bl	12134 <putc@plt>
   15240:	ldrd	r2, [r4, #8]
   15244:	mov	r0, r6
   15248:	adds	r2, r2, #1
   1524c:	adc	r3, r3, #0
   15250:	strd	r2, [r4, #8]
   15254:	bl	14fb8 <UnityPrintNumber@@Base>
   15258:	ldrd	r2, [r4, #16]
   1525c:	ldr	r1, [r5]
   15260:	mov	r0, #58	; 0x3a
   15264:	adds	r2, r2, #1
   15268:	adc	r3, r3, #0
   1526c:	strd	r2, [r4, #16]
   15270:	bl	12134 <putc@plt>
   15274:	ldrd	r2, [r4, #24]
   15278:	ldr	r1, [pc, #72]	; 152c8 <UnityPrintNumber@@Base+0x310>
   1527c:	adds	r2, r2, #1
   15280:	adc	r3, r3, #0
   15284:	ldr	r0, [r1, #4]
   15288:	strd	r2, [r4, #24]
   1528c:	bl	14b30 <UnityPrint@@Base>
   15290:	ldrd	r2, [r4, #32]
   15294:	ldr	r1, [r5]
   15298:	mov	r0, #58	; 0x3a
   1529c:	adds	r2, r2, #1
   152a0:	adc	r3, r3, #0
   152a4:	strd	r2, [r4, #32]
   152a8:	bl	12134 <putc@plt>
   152ac:	ldrd	r2, [r4, #40]	; 0x28
   152b0:	adds	r2, r2, #1
   152b4:	adc	r3, r3, #0
   152b8:	strd	r2, [r4, #40]	; 0x28
   152bc:	pop	{r4, r5, r6, pc}
   152c0:	andeq	pc, r2, r0, lsl r7	; <UNPREDICTABLE>
   152c4:	andeq	lr, r2, r4, asr #24
   152c8:	andeq	r0, r3, r0, ror #8
   152cc:	push	{r4, lr}
   152d0:	mov	r1, r0
   152d4:	ldr	r4, [pc, #100]	; 15340 <UnityPrintNumber@@Base+0x388>
   152d8:	ldr	ip, [pc, #100]	; 15344 <UnityPrintNumber@@Base+0x38c>
   152dc:	ldrd	r2, [r4]
   152e0:	ldr	r0, [ip]
   152e4:	adds	r2, r2, #1
   152e8:	adc	r3, r3, #0
   152ec:	strd	r2, [r4]
   152f0:	bl	15200 <UnityPrintNumber@@Base+0x248>
   152f4:	ldrd	r2, [r4, #8]
   152f8:	ldr	r0, [pc, #72]	; 15348 <UnityPrintNumber@@Base+0x390>
   152fc:	adds	r2, r2, #1
   15300:	adc	r3, r3, #0
   15304:	strd	r2, [r4, #8]
   15308:	bl	14b30 <UnityPrint@@Base>
   1530c:	ldrd	r2, [r4, #16]
   15310:	ldr	r1, [pc, #52]	; 1534c <UnityPrintNumber@@Base+0x394>
   15314:	mov	r0, #58	; 0x3a
   15318:	adds	r2, r2, #1
   1531c:	adc	r3, r3, #0
   15320:	ldr	r1, [r1]
   15324:	strd	r2, [r4, #16]
   15328:	bl	12134 <putc@plt>
   1532c:	ldrd	r2, [r4, #24]
   15330:	adds	r2, r2, #1
   15334:	adc	r3, r3, #0
   15338:	strd	r2, [r4, #24]
   1533c:	pop	{r4, pc}
   15340:	andeq	pc, r2, r0, asr #14
   15344:	andeq	r0, r3, r0, ror #8
   15348:	muleq	r1, r8, r2
   1534c:	andeq	lr, r2, r4, asr #24
   15350:	push	{r4, r6, r7, lr}
   15354:	sub	sp, sp, #8
   15358:	ldr	r4, [pc, #328]	; 154a8 <UnityPrintNumber@@Base+0x4f0>
   1535c:	ldrd	r6, [r4]
   15360:	adds	r6, r6, #1
   15364:	adc	r7, r7, #0
   15368:	cmp	r0, #0
   1536c:	cmpeq	r1, #0
   15370:	moveq	ip, #1
   15374:	movne	ip, #0
   15378:	strd	r6, [r4]
   1537c:	beq	153ac <UnityPrintNumber@@Base+0x3f4>
   15380:	cmp	r0, #0
   15384:	beq	15430 <UnityPrintNumber@@Base+0x478>
   15388:	ldrd	r6, [r4, #16]
   1538c:	adds	r6, r6, #1
   15390:	adc	r7, r7, #0
   15394:	cmp	r1, #0
   15398:	strd	r6, [r4, #16]
   1539c:	movne	r0, ip
   153a0:	beq	153b8 <UnityPrintNumber@@Base+0x400>
   153a4:	add	sp, sp, #8
   153a8:	pop	{r4, r6, r7, pc}
   153ac:	mov	r0, #1
   153b0:	add	sp, sp, #8
   153b4:	pop	{r4, r6, r7, pc}
   153b8:	ldrd	r6, [r4, #48]	; 0x30
   153bc:	mov	r0, r2
   153c0:	str	r3, [sp, #4]
   153c4:	adds	r6, r6, #1
   153c8:	adc	r7, r7, #0
   153cc:	strd	r6, [r4, #48]	; 0x30
   153d0:	bl	152cc <UnityPrintNumber@@Base+0x314>
   153d4:	ldrd	r6, [r4, #56]	; 0x38
   153d8:	ldr	r0, [pc, #204]	; 154ac <UnityPrintNumber@@Base+0x4f4>
   153dc:	adds	r6, r6, #1
   153e0:	adc	r7, r7, #0
   153e4:	strd	r6, [r4, #56]	; 0x38
   153e8:	bl	14b30 <UnityPrint@@Base>
   153ec:	ldrd	r6, [r4, #64]	; 0x40
   153f0:	ldr	r3, [sp, #4]
   153f4:	adds	r6, r6, #1
   153f8:	adc	r7, r7, #0
   153fc:	mov	r0, r3
   15400:	strd	r6, [r4, #64]	; 0x40
   15404:	bl	14cc0 <UnityPrint@@Base+0x190>
   15408:	ldrd	r2, [r4, #72]	; 0x48
   1540c:	ldr	ip, [pc, #156]	; 154b0 <UnityPrintNumber@@Base+0x4f8>
   15410:	mov	lr, #1
   15414:	adds	r2, r2, #1
   15418:	adc	r3, r3, #0
   1541c:	add	r0, ip, #40	; 0x28
   15420:	mov	r1, lr
   15424:	strd	r2, [r4, #72]	; 0x48
   15428:	str	lr, [ip, #32]
   1542c:	bl	11ff0 <longjmp@plt>
   15430:	ldrd	r6, [r4, #8]
   15434:	mov	r0, r2
   15438:	str	r3, [sp, #4]
   1543c:	adds	r6, r6, #1
   15440:	adc	r7, r7, #0
   15444:	strd	r6, [r4, #8]
   15448:	bl	152cc <UnityPrintNumber@@Base+0x314>
   1544c:	ldrd	r6, [r4, #24]
   15450:	ldr	r0, [pc, #92]	; 154b4 <UnityPrintNumber@@Base+0x4fc>
   15454:	adds	r6, r6, #1
   15458:	adc	r7, r7, #0
   1545c:	strd	r6, [r4, #24]
   15460:	bl	14b30 <UnityPrint@@Base>
   15464:	ldrd	r6, [r4, #32]
   15468:	ldr	r3, [sp, #4]
   1546c:	adds	r6, r6, #1
   15470:	adc	r7, r7, #0
   15474:	mov	r0, r3
   15478:	strd	r6, [r4, #32]
   1547c:	bl	14cc0 <UnityPrint@@Base+0x190>
   15480:	ldrd	r2, [r4, #40]	; 0x28
   15484:	ldr	ip, [pc, #36]	; 154b0 <UnityPrintNumber@@Base+0x4f8>
   15488:	mov	lr, #1
   1548c:	adds	r2, r2, #1
   15490:	adc	r3, r3, #0
   15494:	add	r0, ip, #40	; 0x28
   15498:	mov	r1, lr
   1549c:	strd	r2, [r4, #40]	; 0x28
   154a0:	str	lr, [ip, #32]
   154a4:	bl	11ff0 <longjmp@plt>
   154a8:	andeq	pc, r2, r0, ror #14
   154ac:	andeq	sp, r1, r0, asr #5
   154b0:	andeq	r0, r3, r0, ror #8
   154b4:	andeq	sp, r1, r0, lsr #5

000154b8 <UnityPrintNumberUnsigned@@Base>:
   154b8:	cmp	r0, #9
   154bc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   154c0:	mov	r4, r0
   154c4:	ldr	r5, [pc, #448]	; 1568c <UnityPrintNumberUnsigned@@Base+0x1d4>
   154c8:	bls	15644 <UnityPrintNumberUnsigned@@Base+0x18c>
   154cc:	ldrd	r0, [r5, #8]
   154d0:	ldrd	r2, [r5]
   154d4:	adds	r8, r0, #1
   154d8:	adc	r9, r1, #0
   154dc:	adds	r6, r2, #1
   154e0:	adc	r7, r3, #0
   154e4:	cmp	r4, #99	; 0x63
   154e8:	strd	r8, [r5, #8]
   154ec:	bls	1564c <UnityPrintNumberUnsigned@@Base+0x194>
   154f0:	adds	r8, r0, #2
   154f4:	adc	r9, r1, #0
   154f8:	adds	r6, r2, #2
   154fc:	adc	r7, r3, #0
   15500:	cmp	r4, #1000	; 0x3e8
   15504:	bcc	15654 <UnityPrintNumberUnsigned@@Base+0x19c>
   15508:	adds	r8, r0, #3
   1550c:	ldr	ip, [pc, #380]	; 15690 <UnityPrintNumberUnsigned@@Base+0x1d8>
   15510:	adc	r9, r1, #0
   15514:	adds	r6, r2, #3
   15518:	adc	r7, r3, #0
   1551c:	cmp	r4, ip
   15520:	bls	1565c <UnityPrintNumberUnsigned@@Base+0x1a4>
   15524:	adds	r8, r0, #4
   15528:	ldr	ip, [pc, #356]	; 15694 <UnityPrintNumberUnsigned@@Base+0x1dc>
   1552c:	adc	r9, r1, #0
   15530:	adds	r6, r2, #4
   15534:	adc	r7, r3, #0
   15538:	cmp	r4, ip
   1553c:	bls	15664 <UnityPrintNumberUnsigned@@Base+0x1ac>
   15540:	adds	r8, r0, #5
   15544:	ldr	ip, [pc, #332]	; 15698 <UnityPrintNumberUnsigned@@Base+0x1e0>
   15548:	adc	r9, r1, #0
   1554c:	adds	r6, r2, #5
   15550:	adc	r7, r3, #0
   15554:	cmp	r4, ip
   15558:	bls	1566c <UnityPrintNumberUnsigned@@Base+0x1b4>
   1555c:	adds	r8, r0, #6
   15560:	ldr	ip, [pc, #308]	; 1569c <UnityPrintNumberUnsigned@@Base+0x1e4>
   15564:	adc	r9, r1, #0
   15568:	adds	r6, r2, #6
   1556c:	adc	r7, r3, #0
   15570:	cmp	r4, ip
   15574:	bls	15674 <UnityPrintNumberUnsigned@@Base+0x1bc>
   15578:	adds	r8, r0, #7
   1557c:	ldr	ip, [pc, #284]	; 156a0 <UnityPrintNumberUnsigned@@Base+0x1e8>
   15580:	adc	r9, r1, #0
   15584:	adds	r6, r2, #7
   15588:	adc	r7, r3, #0
   1558c:	cmp	r4, ip
   15590:	bls	1567c <UnityPrintNumberUnsigned@@Base+0x1c4>
   15594:	adds	r8, r0, #8
   15598:	ldr	ip, [pc, #260]	; 156a4 <UnityPrintNumberUnsigned@@Base+0x1ec>
   1559c:	adc	r9, r1, #0
   155a0:	adds	r6, r2, #8
   155a4:	adc	r7, r3, #0
   155a8:	cmp	r4, ip
   155ac:	bls	15684 <UnityPrintNumberUnsigned@@Base+0x1cc>
   155b0:	adds	r8, r0, #9
   155b4:	adc	r9, r1, #0
   155b8:	ldr	sl, [pc, #232]	; 156a8 <UnityPrintNumberUnsigned@@Base+0x1f0>
   155bc:	adds	r6, r2, #9
   155c0:	adc	r7, r3, #0
   155c4:	strd	r8, [r5, #8]
   155c8:	strd	r6, [r5]
   155cc:	ldrd	r2, [r5, #16]
   155d0:	ldr	r7, [pc, #212]	; 156ac <UnityPrintNumberUnsigned@@Base+0x1f4>
   155d4:	ldr	r6, [pc, #212]	; 156b0 <UnityPrintNumberUnsigned@@Base+0x1f8>
   155d8:	adds	r2, r2, #1
   155dc:	adc	r3, r3, #0
   155e0:	strd	r2, [r5, #16]
   155e4:	b	155f8 <UnityPrintNumberUnsigned@@Base+0x140>
   155e8:	ldrd	r2, [r5, #32]
   155ec:	adds	r2, r2, #1
   155f0:	adc	r3, r3, #0
   155f4:	strd	r2, [r5, #32]
   155f8:	mov	r1, sl
   155fc:	mov	r0, r4
   15600:	bl	1c9a0 <__gcov_sort_n_vals@@Base+0x534>
   15604:	ldr	r1, [r7]
   15608:	umull	r2, r3, r6, r0
   1560c:	lsr	r3, r3, #3
   15610:	add	r3, r3, r3, lsl #2
   15614:	sub	r0, r0, r3, lsl #1
   15618:	umull	r3, sl, r6, sl
   1561c:	add	r0, r0, #48	; 0x30
   15620:	uxtb	r0, r0
   15624:	bl	12134 <putc@plt>
   15628:	lsrs	sl, sl, #3
   1562c:	bne	155e8 <UnityPrintNumberUnsigned@@Base+0x130>
   15630:	ldrd	r2, [r5, #24]
   15634:	adds	r2, r2, #1
   15638:	adc	r3, r3, #0
   1563c:	strd	r2, [r5, #24]
   15640:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15644:	mov	sl, #1
   15648:	b	155cc <UnityPrintNumberUnsigned@@Base+0x114>
   1564c:	mov	sl, #10
   15650:	b	155c8 <UnityPrintNumberUnsigned@@Base+0x110>
   15654:	mov	sl, #100	; 0x64
   15658:	b	155c4 <UnityPrintNumberUnsigned@@Base+0x10c>
   1565c:	mov	sl, #1000	; 0x3e8
   15660:	b	155c4 <UnityPrintNumberUnsigned@@Base+0x10c>
   15664:	ldr	sl, [pc, #72]	; 156b4 <UnityPrintNumberUnsigned@@Base+0x1fc>
   15668:	b	155c4 <UnityPrintNumberUnsigned@@Base+0x10c>
   1566c:	ldr	sl, [pc, #68]	; 156b8 <UnityPrintNumberUnsigned@@Base+0x200>
   15670:	b	155c4 <UnityPrintNumberUnsigned@@Base+0x10c>
   15674:	ldr	sl, [pc, #64]	; 156bc <UnityPrintNumberUnsigned@@Base+0x204>
   15678:	b	155c4 <UnityPrintNumberUnsigned@@Base+0x10c>
   1567c:	ldr	sl, [pc, #60]	; 156c0 <UnityPrintNumberUnsigned@@Base+0x208>
   15680:	b	155c4 <UnityPrintNumberUnsigned@@Base+0x10c>
   15684:	ldr	sl, [pc, #56]	; 156c4 <UnityPrintNumberUnsigned@@Base+0x20c>
   15688:	b	155c4 <UnityPrintNumberUnsigned@@Base+0x10c>
   1568c:			; <UNDEFINED> instruction: 0x0002f7b0
   15690:	andeq	r2, r0, pc, lsl #14
   15694:	muleq	r1, pc, r6	; <UNPREDICTABLE>
   15698:	andeq	r4, pc, pc, lsr r2	; <UNPREDICTABLE>
   1569c:	addseq	r9, r8, pc, ror r6
   156a0:	ldrbeq	lr, [r5, #255]!	; 0xff
   156a4:	blcc	fe6c7ea8 <__bss_end__@@Base+0xfe696868>
   156a8:	blcc	fe6c7eb0 <__bss_end__@@Base+0xfe696870>
   156ac:	andeq	lr, r2, r4, asr #24
   156b0:	stclgt	12, cr12, [ip], {205}	; 0xcd
   156b4:	andeq	r2, r0, r0, lsl r7
   156b8:	andeq	r8, r1, r0, lsr #13
   156bc:	andeq	r4, pc, r0, asr #4
   156c0:	addseq	r9, r8, r0, lsl #13
   156c4:	ldrbeq	lr, [r5, #256]!	; 0x100

000156c8 <UnityPrintNumberHex@@Base>:
   156c8:	push	{r4, r5, r6, r7, r8, lr}
   156cc:	mov	r7, r1
   156d0:	ldr	r6, [pc, #248]	; 157d0 <UnityPrintNumberHex@@Base+0x108>
   156d4:	ldr	r4, [pc, #248]	; 157d4 <UnityPrintNumberHex@@Base+0x10c>
   156d8:	mov	r5, r0
   156dc:	ldrd	r2, [r6]
   156e0:	ldr	r1, [r4]
   156e4:	mov	r0, #48	; 0x30
   156e8:	adds	r2, r2, #1
   156ec:	adc	r3, r3, #0
   156f0:	strd	r2, [r6]
   156f4:	bl	12134 <putc@plt>
   156f8:	ldrd	r2, [r6, #8]
   156fc:	ldr	r1, [r4]
   15700:	mov	r0, #120	; 0x78
   15704:	adds	r2, r2, #1
   15708:	adc	r3, r3, #0
   1570c:	strd	r2, [r6, #8]
   15710:	bl	12134 <putc@plt>
   15714:	cmp	r7, #0
   15718:	subne	r7, r7, #1
   1571c:	uxtbne	r7, r7
   15720:	lslne	r7, r7, #2
   15724:	beq	15770 <UnityPrintNumberHex@@Base+0xa8>
   15728:	ldrd	r2, [r6, #40]	; 0x28
   1572c:	lsr	r1, r5, r7
   15730:	adds	r2, r2, #1
   15734:	adc	r3, r3, #0
   15738:	and	r1, r1, #15
   1573c:	cmp	r1, #9
   15740:	add	r0, r1, #48	; 0x30
   15744:	strd	r2, [r6, #40]	; 0x28
   15748:	bhi	15784 <UnityPrintNumberHex@@Base+0xbc>
   1574c:	ldr	r1, [r4]
   15750:	bl	12134 <putc@plt>
   15754:	ldrd	r2, [r6, #32]
   15758:	sub	r7, r7, #4
   1575c:	adds	r2, r2, #1
   15760:	adc	r3, r3, #0
   15764:	cmn	r7, #4
   15768:	strd	r2, [r6, #32]
   1576c:	bne	15728 <UnityPrintNumberHex@@Base+0x60>
   15770:	ldrd	r2, [r6, #48]	; 0x30
   15774:	adds	r2, r2, #1
   15778:	adc	r3, r3, #0
   1577c:	strd	r2, [r6, #48]	; 0x30
   15780:	pop	{r4, r5, r6, r7, r8, pc}
   15784:	ldrd	r2, [r6, #16]
   15788:	add	r0, r1, #55	; 0x37
   1578c:	ldr	r1, [r4]
   15790:	adds	r2, r2, #1
   15794:	adc	r3, r3, #0
   15798:	sub	r7, r7, #4
   1579c:	strd	r2, [r6, #16]
   157a0:	bl	12134 <putc@plt>
   157a4:	ldrd	r2, [r6, #24]
   157a8:	ldrd	r0, [r6, #32]
   157ac:	adds	r2, r2, #1
   157b0:	adc	r3, r3, #0
   157b4:	adds	r0, r0, #1
   157b8:	adc	r1, r1, #0
   157bc:	cmn	r7, #4
   157c0:	strd	r2, [r6, #24]
   157c4:	strd	r0, [r6, #32]
   157c8:	bne	15728 <UnityPrintNumberHex@@Base+0x60>
   157cc:	b	15770 <UnityPrintNumberHex@@Base+0xa8>
   157d0:	andeq	pc, r2, r0, lsl #10
   157d4:	andeq	lr, r2, r4, asr #24

000157d8 <UnityPrintNumberByStyle@@Base>:
   157d8:	tst	r1, #16
   157dc:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   157e0:	bne	159e0 <UnityPrintNumberByStyle@@Base+0x208>
   157e4:	tst	r1, #32
   157e8:	bne	15820 <UnityPrintNumberByStyle@@Base+0x48>
   157ec:	ldr	r4, [pc, #612]	; 15a58 <UnityPrintNumberByStyle@@Base+0x280>
   157f0:	lsl	r1, r1, #1
   157f4:	and	r1, r1, #30
   157f8:	ldrd	r2, [r4, #16]
   157fc:	adds	r2, r2, #1
   15800:	adc	r3, r3, #0
   15804:	strd	r2, [r4, #16]
   15808:	bl	156c8 <UnityPrintNumberHex@@Base>
   1580c:	ldrd	r2, [r4, #32]
   15810:	adds	r2, r2, #1
   15814:	adc	r3, r3, #0
   15818:	strd	r2, [r4, #32]
   1581c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15820:	ldr	r5, [pc, #560]	; 15a58 <UnityPrintNumberByStyle@@Base+0x280>
   15824:	ldr	r3, [pc, #560]	; 15a5c <UnityPrintNumberByStyle@@Base+0x284>
   15828:	and	r1, r1, #15
   1582c:	mov	r4, r0
   15830:	add	r1, r3, r1, lsl #2
   15834:	ldrd	r2, [r5, #8]
   15838:	ldr	r1, [r1, #120]	; 0x78
   1583c:	adds	r2, r2, #1
   15840:	adc	r3, r3, #0
   15844:	and	r4, r4, r1
   15848:	cmp	r4, #9
   1584c:	strd	r2, [r5, #8]
   15850:	bls	15a0c <UnityPrintNumberByStyle@@Base+0x234>
   15854:	sub	r8, r5, #48	; 0x30
   15858:	ldrd	r0, [r8, #8]
   1585c:	ldrd	r2, [r8]
   15860:	adds	r6, r0, #1
   15864:	adc	r7, r1, #0
   15868:	adds	sl, r2, #1
   1586c:	adc	fp, r3, #0
   15870:	cmp	r4, #99	; 0x63
   15874:	strd	r6, [r8, #8]
   15878:	bls	15a18 <UnityPrintNumberByStyle@@Base+0x240>
   1587c:	adds	r6, r0, #2
   15880:	adc	r7, r1, #0
   15884:	adds	sl, r2, #2
   15888:	adc	fp, r3, #0
   1588c:	cmp	r4, #1000	; 0x3e8
   15890:	bcc	15a20 <UnityPrintNumberByStyle@@Base+0x248>
   15894:	adds	r6, r0, #3
   15898:	ldr	ip, [pc, #448]	; 15a60 <UnityPrintNumberByStyle@@Base+0x288>
   1589c:	adc	r7, r1, #0
   158a0:	adds	sl, r2, #3
   158a4:	adc	fp, r3, #0
   158a8:	cmp	r4, ip
   158ac:	bls	15a28 <UnityPrintNumberByStyle@@Base+0x250>
   158b0:	adds	r6, r0, #4
   158b4:	ldr	ip, [pc, #424]	; 15a64 <UnityPrintNumberByStyle@@Base+0x28c>
   158b8:	adc	r7, r1, #0
   158bc:	adds	sl, r2, #4
   158c0:	adc	fp, r3, #0
   158c4:	cmp	r4, ip
   158c8:	bls	15a30 <UnityPrintNumberByStyle@@Base+0x258>
   158cc:	adds	r6, r0, #5
   158d0:	ldr	ip, [pc, #400]	; 15a68 <UnityPrintNumberByStyle@@Base+0x290>
   158d4:	adc	r7, r1, #0
   158d8:	adds	sl, r2, #5
   158dc:	adc	fp, r3, #0
   158e0:	cmp	r4, ip
   158e4:	bls	15a38 <UnityPrintNumberByStyle@@Base+0x260>
   158e8:	adds	r6, r0, #6
   158ec:	ldr	ip, [pc, #376]	; 15a6c <UnityPrintNumberByStyle@@Base+0x294>
   158f0:	adc	r7, r1, #0
   158f4:	adds	sl, r2, #6
   158f8:	adc	fp, r3, #0
   158fc:	cmp	r4, ip
   15900:	bls	15a40 <UnityPrintNumberByStyle@@Base+0x268>
   15904:	adds	r6, r0, #7
   15908:	ldr	ip, [pc, #352]	; 15a70 <UnityPrintNumberByStyle@@Base+0x298>
   1590c:	adc	r7, r1, #0
   15910:	adds	sl, r2, #7
   15914:	adc	fp, r3, #0
   15918:	cmp	r4, ip
   1591c:	bls	15a48 <UnityPrintNumberByStyle@@Base+0x270>
   15920:	adds	r6, r0, #8
   15924:	ldr	ip, [pc, #328]	; 15a74 <UnityPrintNumberByStyle@@Base+0x29c>
   15928:	adc	r7, r1, #0
   1592c:	adds	sl, r2, #8
   15930:	adc	fp, r3, #0
   15934:	cmp	r4, ip
   15938:	bls	15a50 <UnityPrintNumberByStyle@@Base+0x278>
   1593c:	adds	r6, r0, #9
   15940:	adc	r7, r1, #0
   15944:	ldr	r9, [pc, #300]	; 15a78 <UnityPrintNumberByStyle@@Base+0x2a0>
   15948:	adds	sl, r2, #9
   1594c:	adc	fp, r3, #0
   15950:	strd	r6, [r8, #8]
   15954:	strd	sl, [r8]
   15958:	ldrd	r2, [r8, #16]
   1595c:	ldr	r7, [pc, #280]	; 15a7c <UnityPrintNumberByStyle@@Base+0x2a4>
   15960:	ldr	r6, [pc, #280]	; 15a80 <UnityPrintNumberByStyle@@Base+0x2a8>
   15964:	adds	r2, r2, #1
   15968:	adc	r3, r3, #0
   1596c:	strd	r2, [r8, #16]
   15970:	b	15984 <UnityPrintNumberByStyle@@Base+0x1ac>
   15974:	ldrd	r2, [r8, #32]
   15978:	adds	r2, r2, #1
   1597c:	adc	r3, r3, #0
   15980:	strd	r2, [r8, #32]
   15984:	mov	r1, r9
   15988:	mov	r0, r4
   1598c:	bl	1c9a0 <__gcov_sort_n_vals@@Base+0x534>
   15990:	ldr	r1, [r7]
   15994:	umull	r2, r3, r6, r0
   15998:	lsr	r3, r3, #3
   1599c:	add	r3, r3, r3, lsl #2
   159a0:	sub	r0, r0, r3, lsl #1
   159a4:	umull	r3, r9, r6, r9
   159a8:	add	r0, r0, #48	; 0x30
   159ac:	uxtb	r0, r0
   159b0:	bl	12134 <putc@plt>
   159b4:	lsrs	r9, r9, #3
   159b8:	bne	15974 <UnityPrintNumberByStyle@@Base+0x19c>
   159bc:	ldrd	r2, [r8, #24]
   159c0:	ldrd	r0, [r5, #24]
   159c4:	adds	r2, r2, #1
   159c8:	adc	r3, r3, #0
   159cc:	adds	r0, r0, #1
   159d0:	adc	r1, r1, #0
   159d4:	strd	r2, [r8, #24]
   159d8:	strd	r0, [r5, #24]
   159dc:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   159e0:	ldr	r4, [pc, #112]	; 15a58 <UnityPrintNumberByStyle@@Base+0x280>
   159e4:	ldrd	r2, [r4, #-8]
   159e8:	adds	r2, r2, #1
   159ec:	adc	r3, r3, #0
   159f0:	strd	r2, [r4, #-8]
   159f4:	bl	14fb8 <UnityPrintNumber@@Base>
   159f8:	ldrd	r2, [r4]
   159fc:	adds	r2, r2, #1
   15a00:	adc	r3, r3, #0
   15a04:	strd	r2, [r4]
   15a08:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15a0c:	mov	r9, #1
   15a10:	sub	r8, r5, #48	; 0x30
   15a14:	b	15958 <UnityPrintNumberByStyle@@Base+0x180>
   15a18:	mov	r9, #10
   15a1c:	b	15954 <UnityPrintNumberByStyle@@Base+0x17c>
   15a20:	mov	r9, #100	; 0x64
   15a24:	b	15950 <UnityPrintNumberByStyle@@Base+0x178>
   15a28:	mov	r9, #1000	; 0x3e8
   15a2c:	b	15950 <UnityPrintNumberByStyle@@Base+0x178>
   15a30:	ldr	r9, [pc, #76]	; 15a84 <UnityPrintNumberByStyle@@Base+0x2ac>
   15a34:	b	15950 <UnityPrintNumberByStyle@@Base+0x178>
   15a38:	ldr	r9, [pc, #72]	; 15a88 <UnityPrintNumberByStyle@@Base+0x2b0>
   15a3c:	b	15950 <UnityPrintNumberByStyle@@Base+0x178>
   15a40:	ldr	r9, [pc, #68]	; 15a8c <UnityPrintNumberByStyle@@Base+0x2b4>
   15a44:	b	15950 <UnityPrintNumberByStyle@@Base+0x178>
   15a48:	ldr	r9, [pc, #64]	; 15a90 <UnityPrintNumberByStyle@@Base+0x2b8>
   15a4c:	b	15950 <UnityPrintNumberByStyle@@Base+0x178>
   15a50:	ldr	r9, [pc, #60]	; 15a94 <UnityPrintNumberByStyle@@Base+0x2bc>
   15a54:	b	15950 <UnityPrintNumberByStyle@@Base+0x178>
   15a58:	andeq	pc, r2, r0, ror #15
   15a5c:	andeq	sp, r1, r0, ror #4
   15a60:	andeq	r2, r0, pc, lsl #14
   15a64:	muleq	r1, pc, r6	; <UNPREDICTABLE>
   15a68:	andeq	r4, pc, pc, lsr r2	; <UNPREDICTABLE>
   15a6c:	addseq	r9, r8, pc, ror r6
   15a70:	ldrbeq	lr, [r5, #255]!	; 0xff
   15a74:	blcc	fe6c8278 <__bss_end__@@Base+0xfe696c38>
   15a78:	blcc	fe6c8280 <__bss_end__@@Base+0xfe696c40>
   15a7c:	andeq	lr, r2, r4, asr #24
   15a80:	stclgt	12, cr12, [ip], {205}	; 0xcd
   15a84:	andeq	r2, r0, r0, lsl r7
   15a88:	andeq	r8, r1, r0, lsr #13
   15a8c:	andeq	r4, pc, r0, asr #4
   15a90:	addseq	r9, r8, r0, lsl #13
   15a94:	ldrbeq	lr, [r5, #256]!	; 0x100

00015a98 <UnityPrintMask@@Base>:
   15a98:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15a9c:	mov	r7, r0
   15aa0:	ldr	r4, [pc, #212]	; 15b7c <UnityPrintMask@@Base+0xe4>
   15aa4:	ldr	r8, [pc, #212]	; 15b80 <UnityPrintMask@@Base+0xe8>
   15aa8:	mov	r9, r1
   15aac:	mov	r6, #32
   15ab0:	mov	r5, #-2147483648	; 0x80000000
   15ab4:	mov	sl, #48	; 0x30
   15ab8:	mov	fp, #49	; 0x31
   15abc:	b	15af8 <UnityPrintMask@@Base+0x60>
   15ac0:	ldrd	r2, [r4, #-8]
   15ac4:	ldr	r1, [r8]
   15ac8:	mov	r0, fp
   15acc:	adds	r2, r2, #1
   15ad0:	adc	r3, r3, #0
   15ad4:	strd	r2, [r4, #-8]
   15ad8:	bl	12134 <putc@plt>
   15adc:	ldrd	r2, [r4, #24]
   15ae0:	lsr	r5, r5, #1
   15ae4:	adds	r2, r2, #1
   15ae8:	adc	r3, r3, #0
   15aec:	subs	r6, r6, #1
   15af0:	strd	r2, [r4, #24]
   15af4:	beq	15b68 <UnityPrintMask@@Base+0xd0>
   15af8:	ldrd	r2, [r4, #32]
   15afc:	adds	r2, r2, #1
   15b00:	adc	r3, r3, #0
   15b04:	tst	r7, r5
   15b08:	strd	r2, [r4, #32]
   15b0c:	beq	15b48 <UnityPrintMask@@Base+0xb0>
   15b10:	tst	r9, r5
   15b14:	mov	r0, sl
   15b18:	bne	15ac0 <UnityPrintMask@@Base+0x28>
   15b1c:	ldrd	r2, [r4]
   15b20:	ldr	r1, [r8]
   15b24:	adds	r2, r2, #1
   15b28:	adc	r3, r3, #0
   15b2c:	strd	r2, [r4]
   15b30:	bl	12134 <putc@plt>
   15b34:	ldrd	r2, [r4, #8]
   15b38:	adds	r2, r2, #1
   15b3c:	adc	r3, r3, #0
   15b40:	strd	r2, [r4, #8]
   15b44:	b	15adc <UnityPrintMask@@Base+0x44>
   15b48:	ldr	r1, [r8]
   15b4c:	mov	r0, #88	; 0x58
   15b50:	bl	12134 <putc@plt>
   15b54:	ldrd	r2, [r4, #16]
   15b58:	adds	r2, r2, #1
   15b5c:	adc	r3, r3, #0
   15b60:	strd	r2, [r4, #16]
   15b64:	b	15adc <UnityPrintMask@@Base+0x44>
   15b68:	ldrd	r2, [r4, #40]	; 0x28
   15b6c:	adds	r2, r2, #1
   15b70:	adc	r3, r3, #0
   15b74:	strd	r2, [r4, #40]	; 0x28
   15b78:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15b7c:	andeq	pc, r2, r0, lsl r8	; <UNPREDICTABLE>
   15b80:	andeq	lr, r2, r4, asr #24

00015b84 <UnityPrintFail@@Base>:
   15b84:	push	{r4, lr}
   15b88:	ldr	r4, [pc, #40]	; 15bb8 <UnityPrintFail@@Base+0x34>
   15b8c:	ldr	r0, [pc, #40]	; 15bbc <UnityPrintFail@@Base+0x38>
   15b90:	ldrd	r2, [r4]
   15b94:	adds	r2, r2, #1
   15b98:	adc	r3, r3, #0
   15b9c:	strd	r2, [r4]
   15ba0:	bl	14b30 <UnityPrint@@Base>
   15ba4:	ldrd	r2, [r4, #8]
   15ba8:	adds	r2, r2, #1
   15bac:	adc	r3, r3, #0
   15bb0:	strd	r2, [r4, #8]
   15bb4:	pop	{r4, pc}
   15bb8:	andeq	pc, r2, r0, asr #16
   15bbc:	muleq	r1, r8, r2

00015bc0 <UnityPrintOk@@Base>:
   15bc0:	push	{r4, lr}
   15bc4:	ldr	r4, [pc, #40]	; 15bf4 <UnityPrintOk@@Base+0x34>
   15bc8:	ldr	r0, [pc, #40]	; 15bf8 <UnityPrintOk@@Base+0x38>
   15bcc:	ldrd	r2, [r4]
   15bd0:	adds	r2, r2, #1
   15bd4:	adc	r3, r3, #0
   15bd8:	strd	r2, [r4]
   15bdc:	bl	14b30 <UnityPrint@@Base>
   15be0:	ldrd	r2, [r4, #8]
   15be4:	adds	r2, r2, #1
   15be8:	adc	r3, r3, #0
   15bec:	strd	r2, [r4, #8]
   15bf0:	pop	{r4, pc}
   15bf4:	andeq	pc, r2, r0, asr r8	; <UNPREDICTABLE>
   15bf8:	strdeq	sp, [r1], -r8

00015bfc <UnityConcludeTest@@Base>:
   15bfc:	push	{r4, r5, r6, lr}
   15c00:	ldr	r4, [pc, #208]	; 15cd8 <UnityConcludeTest@@Base+0xdc>
   15c04:	ldr	r3, [r4, #36]	; 0x24
   15c08:	cmp	r3, #0
   15c0c:	bne	15c6c <UnityConcludeTest@@Base+0x70>
   15c10:	ldr	r3, [r4, #32]
   15c14:	ldr	r5, [pc, #192]	; 15cdc <UnityConcludeTest@@Base+0xe0>
   15c18:	cmp	r3, #0
   15c1c:	beq	15c90 <UnityConcludeTest@@Base+0x94>
   15c20:	ldrd	r2, [r5, #32]
   15c24:	ldr	r1, [r4, #24]
   15c28:	adds	r2, r2, #1
   15c2c:	adc	r3, r3, #0
   15c30:	add	r1, r1, #1
   15c34:	str	r1, [r4, #24]
   15c38:	strd	r2, [r5, #32]
   15c3c:	ldr	r2, [pc, #156]	; 15ce0 <UnityConcludeTest@@Base+0xe4>
   15c40:	mov	r3, #0
   15c44:	mov	r0, #10
   15c48:	ldr	r1, [r2]
   15c4c:	str	r3, [r4, #32]
   15c50:	str	r3, [r4, #36]	; 0x24
   15c54:	bl	12134 <putc@plt>
   15c58:	ldrd	r2, [r5, #40]	; 0x28
   15c5c:	adds	r2, r2, #1
   15c60:	adc	r3, r3, #0
   15c64:	strd	r2, [r5, #40]	; 0x28
   15c68:	pop	{r4, r5, r6, pc}
   15c6c:	ldr	r5, [pc, #104]	; 15cdc <UnityConcludeTest@@Base+0xe0>
   15c70:	ldr	r1, [r4, #28]
   15c74:	ldrd	r2, [r5]
   15c78:	add	r1, r1, #1
   15c7c:	str	r1, [r4, #28]
   15c80:	adds	r2, r2, #1
   15c84:	adc	r3, r3, #0
   15c88:	strd	r2, [r5]
   15c8c:	b	15c3c <UnityConcludeTest@@Base+0x40>
   15c90:	ldrd	r2, [r5, #8]
   15c94:	ldr	r1, [r4, #16]
   15c98:	ldr	r0, [r4]
   15c9c:	adds	r2, r2, #1
   15ca0:	adc	r3, r3, #0
   15ca4:	strd	r2, [r5, #8]
   15ca8:	bl	15200 <UnityPrintNumber@@Base+0x248>
   15cac:	ldrd	r2, [r5, #16]
   15cb0:	ldr	r0, [pc, #44]	; 15ce4 <UnityConcludeTest@@Base+0xe8>
   15cb4:	adds	r2, r2, #1
   15cb8:	adc	r3, r3, #0
   15cbc:	strd	r2, [r5, #16]
   15cc0:	bl	14b30 <UnityPrint@@Base>
   15cc4:	ldrd	r2, [r5, #24]
   15cc8:	adds	r2, r2, #1
   15ccc:	adc	r3, r3, #0
   15cd0:	strd	r2, [r5, #24]
   15cd4:	b	15c3c <UnityConcludeTest@@Base+0x40>
   15cd8:	andeq	r0, r3, r0, ror #8
   15cdc:	andeq	pc, r2, r0, ror #16
   15ce0:	andeq	lr, r2, r4, asr #24
   15ce4:	strdeq	sp, [r1], -ip

00015ce8 <UnityAssertBits@@Base>:
   15ce8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15cec:	ldr	r4, [pc, #288]	; 15e14 <UnityAssertBits@@Base+0x12c>
   15cf0:	ldr	r5, [pc, #288]	; 15e18 <UnityAssertBits@@Base+0x130>
   15cf4:	ldrd	r6, [r4]
   15cf8:	ldr	ip, [r5, #32]
   15cfc:	adds	r6, r6, #1
   15d00:	adc	r7, r7, #0
   15d04:	cmp	ip, #0
   15d08:	strd	r6, [r4]
   15d0c:	popne	{r4, r5, r6, r7, r8, r9, sl, pc}
   15d10:	ldrd	r6, [r4, #8]
   15d14:	ldr	ip, [r5, #36]	; 0x24
   15d18:	adds	r6, r6, #1
   15d1c:	adc	r7, r7, #0
   15d20:	cmp	ip, #0
   15d24:	strd	r6, [r4, #8]
   15d28:	popne	{r4, r5, r6, r7, r8, r9, sl, pc}
   15d2c:	ldrd	r6, [r4, #16]
   15d30:	eor	ip, r1, r2
   15d34:	adds	r6, r6, #1
   15d38:	adc	r7, r7, #0
   15d3c:	tst	ip, r0
   15d40:	strd	r6, [r4, #16]
   15d44:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   15d48:	mov	r8, r3
   15d4c:	mov	r7, r2
   15d50:	ldrd	r2, [r4, #24]
   15d54:	mov	r6, r0
   15d58:	ldr	r0, [sp, #32]
   15d5c:	adds	r2, r2, #1
   15d60:	adc	r3, r3, #0
   15d64:	mov	r9, r1
   15d68:	strd	r2, [r4, #24]
   15d6c:	bl	152cc <UnityPrintNumber@@Base+0x314>
   15d70:	ldrd	r2, [r4, #32]
   15d74:	ldr	r0, [pc, #160]	; 15e1c <UnityAssertBits@@Base+0x134>
   15d78:	adds	r2, r2, #1
   15d7c:	adc	r3, r3, #0
   15d80:	strd	r2, [r4, #32]
   15d84:	bl	14b30 <UnityPrint@@Base>
   15d88:	ldrd	r2, [r4, #40]	; 0x28
   15d8c:	mov	r1, r9
   15d90:	mov	r0, r6
   15d94:	adds	r2, r2, #1
   15d98:	adc	r3, r3, #0
   15d9c:	strd	r2, [r4, #40]	; 0x28
   15da0:	bl	15a98 <UnityPrintMask@@Base>
   15da4:	ldrd	r2, [r4, #48]	; 0x30
   15da8:	ldr	r0, [pc, #112]	; 15e20 <UnityAssertBits@@Base+0x138>
   15dac:	adds	r2, r2, #1
   15db0:	adc	r3, r3, #0
   15db4:	strd	r2, [r4, #48]	; 0x30
   15db8:	bl	14b30 <UnityPrint@@Base>
   15dbc:	ldrd	r2, [r4, #56]	; 0x38
   15dc0:	mov	r1, r7
   15dc4:	mov	r0, r6
   15dc8:	adds	r2, r2, #1
   15dcc:	adc	r3, r3, #0
   15dd0:	strd	r2, [r4, #56]	; 0x38
   15dd4:	bl	15a98 <UnityPrintMask@@Base>
   15dd8:	ldrd	r2, [r4, #64]	; 0x40
   15ddc:	mov	r0, r8
   15de0:	adds	r2, r2, #1
   15de4:	adc	r3, r3, #0
   15de8:	strd	r2, [r4, #64]	; 0x40
   15dec:	bl	14cc0 <UnityPrint@@Base+0x190>
   15df0:	ldrd	r2, [r4, #72]	; 0x48
   15df4:	mov	ip, #1
   15df8:	mov	r1, ip
   15dfc:	adds	r2, r2, #1
   15e00:	adc	r3, r3, #0
   15e04:	add	r0, r5, #40	; 0x28
   15e08:	strd	r2, [r4, #72]	; 0x48
   15e0c:	str	ip, [r5, #32]
   15e10:	bl	11ff0 <longjmp@plt>
   15e14:	muleq	r2, r0, r8
   15e18:	andeq	r0, r3, r0, ror #8
   15e1c:	andeq	sp, r1, r0, ror #4
   15e20:	andeq	sp, r1, r4, ror r2

00015e24 <UnityAssertEqualNumber@@Base>:
   15e24:	push	{r4, r5, r6, r7, r8, lr}
   15e28:	ldr	r4, [pc, #288]	; 15f50 <UnityAssertEqualNumber@@Base+0x12c>
   15e2c:	ldr	r5, [pc, #288]	; 15f54 <UnityAssertEqualNumber@@Base+0x130>
   15e30:	ldrd	r6, [r4]
   15e34:	ldr	ip, [r5, #32]
   15e38:	adds	r6, r6, #1
   15e3c:	adc	r7, r7, #0
   15e40:	cmp	ip, #0
   15e44:	strd	r6, [r4]
   15e48:	popne	{r4, r5, r6, r7, r8, pc}
   15e4c:	mov	lr, r2
   15e50:	mov	ip, r3
   15e54:	ldrd	r2, [r4, #8]
   15e58:	ldr	r6, [r5, #36]	; 0x24
   15e5c:	adds	r2, r2, #1
   15e60:	adc	r3, r3, #0
   15e64:	cmp	r6, #0
   15e68:	strd	r2, [r4, #8]
   15e6c:	popne	{r4, r5, r6, r7, r8, pc}
   15e70:	ldrd	r2, [r4, #16]
   15e74:	adds	r2, r2, #1
   15e78:	adc	r3, r3, #0
   15e7c:	cmp	r0, r1
   15e80:	strd	r2, [r4, #16]
   15e84:	popeq	{r4, r5, r6, r7, r8, pc}
   15e88:	ldrd	r2, [r4, #24]
   15e8c:	mov	r8, r0
   15e90:	mov	r0, ip
   15e94:	adds	r2, r2, #1
   15e98:	adc	r3, r3, #0
   15e9c:	mov	r7, lr
   15ea0:	mov	r6, r1
   15ea4:	strd	r2, [r4, #24]
   15ea8:	bl	152cc <UnityPrintNumber@@Base+0x314>
   15eac:	ldrd	r2, [r4, #32]
   15eb0:	ldr	r0, [pc, #160]	; 15f58 <UnityAssertEqualNumber@@Base+0x134>
   15eb4:	adds	r2, r2, #1
   15eb8:	adc	r3, r3, #0
   15ebc:	strd	r2, [r4, #32]
   15ec0:	bl	14b30 <UnityPrint@@Base>
   15ec4:	ldrd	r2, [r4, #40]	; 0x28
   15ec8:	ldr	r1, [sp, #24]
   15ecc:	mov	r0, r8
   15ed0:	adds	r2, r2, #1
   15ed4:	adc	r3, r3, #0
   15ed8:	strd	r2, [r4, #40]	; 0x28
   15edc:	bl	157d8 <UnityPrintNumberByStyle@@Base>
   15ee0:	ldrd	r2, [r4, #48]	; 0x30
   15ee4:	ldr	r0, [pc, #112]	; 15f5c <UnityAssertEqualNumber@@Base+0x138>
   15ee8:	adds	r2, r2, #1
   15eec:	adc	r3, r3, #0
   15ef0:	strd	r2, [r4, #48]	; 0x30
   15ef4:	bl	14b30 <UnityPrint@@Base>
   15ef8:	ldrd	r2, [r4, #56]	; 0x38
   15efc:	ldr	r1, [sp, #24]
   15f00:	mov	r0, r6
   15f04:	adds	r2, r2, #1
   15f08:	adc	r3, r3, #0
   15f0c:	strd	r2, [r4, #56]	; 0x38
   15f10:	bl	157d8 <UnityPrintNumberByStyle@@Base>
   15f14:	ldrd	r2, [r4, #64]	; 0x40
   15f18:	mov	r0, r7
   15f1c:	adds	r2, r2, #1
   15f20:	adc	r3, r3, #0
   15f24:	strd	r2, [r4, #64]	; 0x40
   15f28:	bl	14cc0 <UnityPrint@@Base+0x190>
   15f2c:	ldrd	r2, [r4, #72]	; 0x48
   15f30:	mov	ip, #1
   15f34:	mov	r1, ip
   15f38:	adds	r2, r2, #1
   15f3c:	adc	r3, r3, #0
   15f40:	add	r0, r5, #40	; 0x28
   15f44:	strd	r2, [r4, #72]	; 0x48
   15f48:	str	ip, [r5, #32]
   15f4c:	bl	11ff0 <longjmp@plt>
   15f50:	andeq	pc, r2, r0, ror #17
   15f54:	andeq	r0, r3, r0, ror #8
   15f58:	andeq	sp, r1, r0, ror #4
   15f5c:	andeq	sp, r1, r4, ror r2

00015f60 <UnityAssertEqualIntArray@@Base>:
   15f60:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15f64:	mov	r9, r2
   15f68:	ldr	r8, [pc, #2012]	; 1674c <UnityAssertEqualIntArray@@Base+0x7ec>
   15f6c:	ldr	r2, [pc, #2012]	; 16750 <UnityAssertEqualIntArray@@Base+0x7f0>
   15f70:	sub	sp, sp, #20
   15f74:	ldrd	r4, [r8]
   15f78:	ldr	r2, [r2, #32]
   15f7c:	str	r3, [sp, #8]
   15f80:	adds	r6, r4, #1
   15f84:	adc	r7, r5, #0
   15f88:	cmp	r2, #0
   15f8c:	strd	r6, [r8]
   15f90:	bne	161bc <UnityAssertEqualIntArray@@Base+0x25c>
   15f94:	ldrd	r6, [r8, #8]
   15f98:	ldr	r2, [pc, #1968]	; 16750 <UnityAssertEqualIntArray@@Base+0x7f0>
   15f9c:	adds	sl, r6, #1
   15fa0:	adc	fp, r7, #0
   15fa4:	ldr	r2, [r2, #36]	; 0x24
   15fa8:	mov	r6, sl
   15fac:	mov	r7, fp
   15fb0:	cmp	r2, #0
   15fb4:	strd	r6, [r8, #8]
   15fb8:	bne	161bc <UnityAssertEqualIntArray@@Base+0x25c>
   15fbc:	cmp	r9, #0
   15fc0:	beq	166a8 <UnityAssertEqualIntArray@@Base+0x748>
   15fc4:	ldrd	r6, [r8, #24]
   15fc8:	ldr	r2, [sp, #56]	; 0x38
   15fcc:	mov	r5, r0
   15fd0:	adds	sl, r6, #1
   15fd4:	adc	fp, r7, #0
   15fd8:	mov	r6, sl
   15fdc:	mov	r7, fp
   15fe0:	mov	r4, r1
   15fe4:	strd	r6, [r8, #24]
   15fe8:	bl	15350 <UnityPrintNumber@@Base+0x398>
   15fec:	ldrd	r2, [r8, #56]	; 0x38
   15ff0:	adds	r6, r2, #1
   15ff4:	adc	r7, r3, #0
   15ff8:	strd	r6, [r8, #56]	; 0x38
   15ffc:	cmp	r0, #1
   16000:	beq	161bc <UnityAssertEqualIntArray@@Base+0x25c>
   16004:	ldr	r3, [sp, #60]	; 0x3c
   16008:	bic	r3, r3, #128	; 0x80
   1600c:	sub	r3, r3, #17
   16010:	cmp	r3, #49	; 0x31
   16014:	ldrls	pc, [pc, r3, lsl #2]
   16018:	b	160e4 <UnityAssertEqualIntArray@@Base+0x184>
   1601c:	muleq	r1, r8, r2
   16020:	andeq	r6, r1, r4, asr #3
   16024:	andeq	r6, r1, r4, ror #1
   16028:	andeq	r6, r1, r4, ror #1
   1602c:	andeq	r6, r1, r4, ror #1
   16030:	andeq	r6, r1, r4, ror #1
   16034:	andeq	r6, r1, r4, ror #1
   16038:	andeq	r6, r1, r4, ror #1
   1603c:	andeq	r6, r1, r4, ror #1
   16040:	andeq	r6, r1, r4, ror #1
   16044:	andeq	r6, r1, r4, ror #1
   16048:	andeq	r6, r1, r4, ror #1
   1604c:	andeq	r6, r1, r4, ror #1
   16050:	andeq	r6, r1, r4, ror #1
   16054:	andeq	r6, r1, r4, ror #1
   16058:	andeq	r6, r1, r4, ror #1
   1605c:	muleq	r1, r8, r2
   16060:	andeq	r6, r1, r4, asr #3
   16064:	andeq	r6, r1, r4, ror #1
   16068:	andeq	r6, r1, r4, ror #1
   1606c:	andeq	r6, r1, r4, ror #1
   16070:	andeq	r6, r1, r4, ror #1
   16074:	andeq	r6, r1, r4, ror #1
   16078:	andeq	r6, r1, r4, ror #1
   1607c:	andeq	r6, r1, r4, ror #1
   16080:	andeq	r6, r1, r4, ror #1
   16084:	andeq	r6, r1, r4, ror #1
   16088:	andeq	r6, r1, r4, ror #1
   1608c:	andeq	r6, r1, r4, ror #1
   16090:	andeq	r6, r1, r4, ror #1
   16094:	andeq	r6, r1, r4, ror #1
   16098:	andeq	r6, r1, r4, ror #1
   1609c:	andeq	r6, r1, r4, ror #1
   160a0:	andeq	r6, r1, r4, ror #1
   160a4:	andeq	r6, r1, r4, ror #1
   160a8:	andeq	r6, r1, r4, ror #1
   160ac:	andeq	r6, r1, r4, ror #1
   160b0:	andeq	r6, r1, r4, ror #1
   160b4:	andeq	r6, r1, r4, ror #1
   160b8:	andeq	r6, r1, r4, ror #1
   160bc:	andeq	r6, r1, r4, ror #1
   160c0:	andeq	r6, r1, r4, ror #1
   160c4:	andeq	r6, r1, r4, ror #1
   160c8:	andeq	r6, r1, r4, ror #1
   160cc:	andeq	r6, r1, r4, ror #1
   160d0:	andeq	r6, r1, r4, ror #1
   160d4:	andeq	r6, r1, r4, ror #1
   160d8:	andeq	r6, r1, r4, ror #1
   160dc:	muleq	r1, r8, r2
   160e0:	andeq	r6, r1, r4, asr #3
   160e4:	sub	r3, r9, #1
   160e8:	str	r3, [sp, #12]
   160ec:	ldr	r3, [pc, #1632]	; 16754 <UnityAssertEqualIntArray@@Base+0x7f4>
   160f0:	ldrd	r0, [r8, #80]	; 0x50
   160f4:	ldr	lr, [r5]
   160f8:	ldrd	r6, [r3]
   160fc:	adds	r2, r0, #1
   16100:	adc	r3, r1, #0
   16104:	mov	sl, r2
   16108:	ldr	r1, [pc, #1604]	; 16754 <UnityAssertEqualIntArray@@Base+0x7f4>
   1610c:	adds	r2, r6, #1
   16110:	mov	fp, r3
   16114:	adc	r3, r7, #0
   16118:	ldr	ip, [r4]
   1611c:	strd	r2, [r1]
   16120:	mov	r0, sl
   16124:	mov	r1, fp
   16128:	cmp	lr, ip
   1612c:	strd	r0, [r8, #80]	; 0x50
   16130:	bne	16744 <UnityAssertEqualIntArray@@Base+0x7e4>
   16134:	ldr	r1, [pc, #1560]	; 16754 <UnityAssertEqualIntArray@@Base+0x7f4>
   16138:	add	lr, r5, #4
   1613c:	add	ip, r4, #4
   16140:	ldrd	r0, [r1, #-8]
   16144:	mov	r9, #1
   16148:	ldr	r5, [sp, #8]
   1614c:	subs	r0, r0, r6
   16150:	sbc	r1, r1, r7
   16154:	mov	r7, #0
   16158:	ldr	r6, [sp, #12]
   1615c:	mov	r4, r7
   16160:	b	16188 <UnityAssertEqualIntArray@@Base+0x228>
   16164:	ldr	lr, [lr]
   16168:	ldr	ip, [ip]
   1616c:	adds	r2, r2, #1
   16170:	adc	r3, r3, #0
   16174:	cmp	lr, ip
   16178:	mov	r4, r9
   1617c:	add	lr, fp, #4
   16180:	add	ip, r7, #4
   16184:	bne	1646c <UnityAssertEqualIntArray@@Base+0x50c>
   16188:	adds	sl, r0, r2
   1618c:	adc	fp, r1, r3
   16190:	sub	r6, r6, #1
   16194:	cmn	r6, #1
   16198:	strd	sl, [sp]
   1619c:	mov	r7, ip
   161a0:	mov	fp, lr
   161a4:	bne	16164 <UnityAssertEqualIntArray@@Base+0x204>
   161a8:	cmp	r4, #0
   161ac:	bne	16730 <UnityAssertEqualIntArray@@Base+0x7d0>
   161b0:	ldr	r1, [pc, #1436]	; 16754 <UnityAssertEqualIntArray@@Base+0x7f4>
   161b4:	ldrd	r2, [sp]
   161b8:	strd	r2, [r1, #-8]
   161bc:	add	sp, sp, #20
   161c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   161c4:	ldrd	r2, [r8, #64]	; 0x40
   161c8:	ldrd	r0, [r8, #240]	; 0xf0
   161cc:	ldrsh	lr, [r5]
   161d0:	adds	r6, r2, #1
   161d4:	adc	r7, r3, #0
   161d8:	ldrsh	ip, [r4]
   161dc:	mov	sl, r6
   161e0:	mov	fp, r7
   161e4:	adds	r6, r0, #1
   161e8:	sub	r3, r9, #1
   161ec:	adc	r7, r1, #0
   161f0:	str	r3, [sp, #12]
   161f4:	mov	r2, sl
   161f8:	mov	r3, fp
   161fc:	cmp	lr, ip
   16200:	strd	r2, [r8, #64]	; 0x40
   16204:	strd	r6, [r8, #240]	; 0xf0
   16208:	bne	1673c <UnityAssertEqualIntArray@@Base+0x7dc>
   1620c:	add	r2, r5, #2
   16210:	add	r3, r4, #2
   16214:	ldrd	r4, [r8, #232]	; 0xe8
   16218:	mov	ip, #0
   1621c:	ldr	r9, [sp, #12]
   16220:	subs	r4, r4, r0
   16224:	sbc	r5, r5, r1
   16228:	mov	r0, r4
   1622c:	mov	r1, r5
   16230:	mov	lr, #1
   16234:	mov	r4, ip
   16238:	ldr	r5, [sp, #8]
   1623c:	b	16264 <UnityAssertEqualIntArray@@Base+0x304>
   16240:	ldrsh	r4, [r2]
   16244:	ldrsh	r3, [r3]
   16248:	adds	r6, r6, #1
   1624c:	adc	r7, r7, #0
   16250:	cmp	r4, r3
   16254:	add	r2, fp, #2
   16258:	add	r3, ip, #2
   1625c:	mov	r4, lr
   16260:	bne	1636c <UnityAssertEqualIntArray@@Base+0x40c>
   16264:	adds	sl, r0, r6
   16268:	adc	fp, r1, r7
   1626c:	sub	r9, r9, #1
   16270:	cmn	r9, #1
   16274:	strd	sl, [sp]
   16278:	mov	ip, r3
   1627c:	mov	fp, r2
   16280:	bne	16240 <UnityAssertEqualIntArray@@Base+0x2e0>
   16284:	cmp	r4, #0
   16288:	bne	16718 <UnityAssertEqualIntArray@@Base+0x7b8>
   1628c:	ldrd	r2, [sp]
   16290:	strd	r2, [r8, #232]	; 0xe8
   16294:	b	161bc <UnityAssertEqualIntArray@@Base+0x25c>
   16298:	ldrd	r2, [r8, #72]	; 0x48
   1629c:	ldrd	r0, [r8, #160]	; 0xa0
   162a0:	ldrsb	lr, [r4]
   162a4:	adds	r6, r2, #1
   162a8:	adc	r7, r3, #0
   162ac:	ldrsb	ip, [r5]
   162b0:	mov	sl, r6
   162b4:	mov	fp, r7
   162b8:	adds	r6, r0, #1
   162bc:	sub	r3, r9, #1
   162c0:	adc	r7, r1, #0
   162c4:	str	r3, [sp, #12]
   162c8:	mov	r2, sl
   162cc:	mov	r3, fp
   162d0:	cmp	lr, ip
   162d4:	strd	r2, [r8, #72]	; 0x48
   162d8:	strd	r6, [r8, #160]	; 0xa0
   162dc:	bne	16728 <UnityAssertEqualIntArray@@Base+0x7c8>
   162e0:	add	r2, r5, #1
   162e4:	add	r3, r4, #1
   162e8:	ldrd	r4, [r8, #152]	; 0x98
   162ec:	mov	ip, #0
   162f0:	ldr	r9, [sp, #12]
   162f4:	subs	r4, r4, r0
   162f8:	sbc	r5, r5, r1
   162fc:	mov	r0, r4
   16300:	mov	r1, r5
   16304:	mov	lr, #1
   16308:	mov	r4, ip
   1630c:	ldr	r5, [sp, #8]
   16310:	b	16338 <UnityAssertEqualIntArray@@Base+0x3d8>
   16314:	ldrsb	r4, [r2]
   16318:	ldrsb	r3, [r3]
   1631c:	adds	r6, r6, #1
   16320:	adc	r7, r7, #0
   16324:	cmp	r4, r3
   16328:	add	r2, fp, #1
   1632c:	add	r3, ip, #1
   16330:	mov	r4, lr
   16334:	bne	165a8 <UnityAssertEqualIntArray@@Base+0x648>
   16338:	adds	sl, r0, r6
   1633c:	adc	fp, r1, r7
   16340:	sub	r9, r9, #1
   16344:	cmn	r9, #1
   16348:	strd	sl, [sp]
   1634c:	mov	ip, r3
   16350:	mov	fp, r2
   16354:	bne	16314 <UnityAssertEqualIntArray@@Base+0x3b4>
   16358:	cmp	r4, #0
   1635c:	bne	16720 <UnityAssertEqualIntArray@@Base+0x7c0>
   16360:	ldrd	r2, [sp]
   16364:	strd	r2, [r8, #152]	; 0x98
   16368:	b	161bc <UnityAssertEqualIntArray@@Base+0x25c>
   1636c:	mov	r3, r5
   16370:	str	r3, [sp, #8]
   16374:	ldrd	r2, [sp]
   16378:	mov	r4, ip
   1637c:	mov	r5, fp
   16380:	strd	r6, [r8, #240]	; 0xf0
   16384:	strd	r2, [r8, #232]	; 0xe8
   16388:	ldr	r0, [sp, #56]	; 0x38
   1638c:	bl	152cc <UnityPrintNumber@@Base+0x314>
   16390:	ldrd	r2, [r8, #168]	; 0xa8
   16394:	ldr	r0, [pc, #956]	; 16758 <UnityAssertEqualIntArray@@Base+0x7f8>
   16398:	adds	r6, r2, #1
   1639c:	adc	r7, r3, #0
   163a0:	strd	r6, [r8, #168]	; 0xa8
   163a4:	bl	14b30 <UnityPrint@@Base>
   163a8:	ldrd	r2, [r8, #176]	; 0xb0
   163ac:	ldr	r1, [sp, #12]
   163b0:	adds	r6, r2, #1
   163b4:	adc	r7, r3, #0
   163b8:	sub	r0, r1, r9
   163bc:	strd	r6, [r8, #176]	; 0xb0
   163c0:	bl	154b8 <UnityPrintNumberUnsigned@@Base>
   163c4:	ldrd	r2, [r8, #184]	; 0xb8
   163c8:	ldr	r0, [pc, #908]	; 1675c <UnityAssertEqualIntArray@@Base+0x7fc>
   163cc:	adds	r6, r2, #1
   163d0:	adc	r7, r3, #0
   163d4:	strd	r6, [r8, #184]	; 0xb8
   163d8:	bl	14b30 <UnityPrint@@Base>
   163dc:	ldrd	r2, [r8, #192]	; 0xc0
   163e0:	ldrsh	r0, [r5]
   163e4:	ldr	r1, [sp, #60]	; 0x3c
   163e8:	adds	r6, r2, #1
   163ec:	adc	r7, r3, #0
   163f0:	strd	r6, [r8, #192]	; 0xc0
   163f4:	bl	157d8 <UnityPrintNumberByStyle@@Base>
   163f8:	ldrd	r2, [r8, #200]	; 0xc8
   163fc:	ldr	r0, [pc, #860]	; 16760 <UnityAssertEqualIntArray@@Base+0x800>
   16400:	adds	r6, r2, #1
   16404:	adc	r7, r3, #0
   16408:	strd	r6, [r8, #200]	; 0xc8
   1640c:	bl	14b30 <UnityPrint@@Base>
   16410:	ldrd	r2, [r8, #208]	; 0xd0
   16414:	ldrsh	r0, [r4]
   16418:	ldr	r1, [sp, #60]	; 0x3c
   1641c:	adds	r4, r2, #1
   16420:	adc	r5, r3, #0
   16424:	strd	r4, [r8, #208]	; 0xd0
   16428:	bl	157d8 <UnityPrintNumberByStyle@@Base>
   1642c:	ldrd	r2, [r8, #216]	; 0xd8
   16430:	ldr	r0, [sp, #8]
   16434:	adds	r4, r2, #1
   16438:	adc	r5, r3, #0
   1643c:	strd	r4, [r8, #216]	; 0xd8
   16440:	bl	14cc0 <UnityPrint@@Base+0x190>
   16444:	ldrd	r2, [r8, #224]	; 0xe0
   16448:	ldr	r0, [pc, #788]	; 16764 <UnityAssertEqualIntArray@@Base+0x804>
   1644c:	mov	ip, #1
   16450:	adds	r4, r2, #1
   16454:	adc	r5, r3, #0
   16458:	sub	r3, r0, #40	; 0x28
   1645c:	mov	r1, ip
   16460:	strd	r4, [r8, #224]	; 0xe0
   16464:	str	ip, [r3, #32]
   16468:	bl	11ff0 <longjmp@plt>
   1646c:	mov	r1, r5
   16470:	str	r1, [sp, #8]
   16474:	ldr	r1, [pc, #728]	; 16754 <UnityAssertEqualIntArray@@Base+0x7f4>
   16478:	mov	r4, r7
   1647c:	mov	r5, fp
   16480:	strd	r2, [r1]
   16484:	ldrd	r2, [sp]
   16488:	strd	r2, [r1, #-8]
   1648c:	ldr	r0, [sp, #56]	; 0x38
   16490:	bl	152cc <UnityPrintNumber@@Base+0x314>
   16494:	ldrd	r2, [r8, #248]	; 0xf8
   16498:	ldr	r9, [pc, #712]	; 16768 <UnityAssertEqualIntArray@@Base+0x808>
   1649c:	adds	r0, r2, #1
   164a0:	adc	r1, r3, #0
   164a4:	mov	r2, r0
   164a8:	mov	r3, r1
   164ac:	ldr	r0, [pc, #676]	; 16758 <UnityAssertEqualIntArray@@Base+0x7f8>
   164b0:	strd	r2, [r8, #248]	; 0xf8
   164b4:	bl	14b30 <UnityPrint@@Base>
   164b8:	ldrd	r2, [r9]
   164bc:	ldr	r1, [sp, #12]
   164c0:	mov	r7, r9
   164c4:	adds	sl, r2, #1
   164c8:	adc	fp, r3, #0
   164cc:	mov	r2, sl
   164d0:	mov	r3, fp
   164d4:	sub	r0, r1, r6
   164d8:	strd	r2, [r7], #16
   164dc:	bl	154b8 <UnityPrintNumberUnsigned@@Base>
   164e0:	ldrd	r2, [r7, #-8]
   164e4:	ldr	r0, [pc, #624]	; 1675c <UnityAssertEqualIntArray@@Base+0x7fc>
   164e8:	add	r6, r9, #32
   164ec:	adds	sl, r2, #1
   164f0:	adc	fp, r3, #0
   164f4:	mov	r2, sl
   164f8:	mov	r3, fp
   164fc:	add	r9, r9, #48	; 0x30
   16500:	strd	r2, [r7, #-8]
   16504:	bl	14b30 <UnityPrint@@Base>
   16508:	ldrd	r2, [r7]
   1650c:	ldr	r0, [r5]
   16510:	ldr	r1, [sp, #60]	; 0x3c
   16514:	adds	sl, r2, #1
   16518:	adc	fp, r3, #0
   1651c:	mov	r2, sl
   16520:	mov	r3, fp
   16524:	strd	r2, [r7]
   16528:	bl	157d8 <UnityPrintNumberByStyle@@Base>
   1652c:	ldrd	r2, [r6, #-8]
   16530:	ldr	r0, [pc, #552]	; 16760 <UnityAssertEqualIntArray@@Base+0x800>
   16534:	adds	sl, r2, #1
   16538:	adc	fp, r3, #0
   1653c:	mov	r2, sl
   16540:	mov	r3, fp
   16544:	strd	r2, [r6, #-8]
   16548:	bl	14b30 <UnityPrint@@Base>
   1654c:	ldrd	r2, [r6]
   16550:	ldr	r0, [r4]
   16554:	ldr	r1, [sp, #60]	; 0x3c
   16558:	adds	r4, r2, #1
   1655c:	adc	r5, r3, #0
   16560:	strd	r4, [r6]
   16564:	bl	157d8 <UnityPrintNumberByStyle@@Base>
   16568:	ldrd	r2, [r9, #-8]
   1656c:	ldr	r0, [sp, #8]
   16570:	adds	r4, r2, #1
   16574:	adc	r5, r3, #0
   16578:	strd	r4, [r9, #-8]
   1657c:	bl	14cc0 <UnityPrint@@Base+0x190>
   16580:	ldrd	r2, [r9]
   16584:	ldr	r0, [pc, #472]	; 16764 <UnityAssertEqualIntArray@@Base+0x804>
   16588:	mov	ip, #1
   1658c:	adds	r4, r2, #1
   16590:	adc	r5, r3, #0
   16594:	sub	r3, r0, #40	; 0x28
   16598:	mov	r1, ip
   1659c:	strd	r4, [r9]
   165a0:	str	ip, [r3, #32]
   165a4:	bl	11ff0 <longjmp@plt>
   165a8:	mov	r3, r5
   165ac:	str	r3, [sp, #8]
   165b0:	ldrd	r2, [sp]
   165b4:	mov	r4, ip
   165b8:	mov	r5, fp
   165bc:	strd	r6, [r8, #160]	; 0xa0
   165c0:	strd	r2, [r8, #152]	; 0x98
   165c4:	ldr	r0, [sp, #56]	; 0x38
   165c8:	bl	152cc <UnityPrintNumber@@Base+0x314>
   165cc:	ldrd	r2, [r8, #88]	; 0x58
   165d0:	ldr	r0, [pc, #384]	; 16758 <UnityAssertEqualIntArray@@Base+0x7f8>
   165d4:	adds	r6, r2, #1
   165d8:	adc	r7, r3, #0
   165dc:	strd	r6, [r8, #88]	; 0x58
   165e0:	bl	14b30 <UnityPrint@@Base>
   165e4:	ldrd	r2, [r8, #96]	; 0x60
   165e8:	ldr	r1, [sp, #12]
   165ec:	adds	r6, r2, #1
   165f0:	adc	r7, r3, #0
   165f4:	sub	r0, r1, r9
   165f8:	strd	r6, [r8, #96]	; 0x60
   165fc:	bl	154b8 <UnityPrintNumberUnsigned@@Base>
   16600:	ldrd	r2, [r8, #104]	; 0x68
   16604:	ldr	r0, [pc, #336]	; 1675c <UnityAssertEqualIntArray@@Base+0x7fc>
   16608:	adds	r6, r2, #1
   1660c:	adc	r7, r3, #0
   16610:	strd	r6, [r8, #104]	; 0x68
   16614:	bl	14b30 <UnityPrint@@Base>
   16618:	ldrd	r2, [r8, #112]	; 0x70
   1661c:	ldrsb	r0, [r5]
   16620:	ldr	r1, [sp, #60]	; 0x3c
   16624:	adds	r6, r2, #1
   16628:	adc	r7, r3, #0
   1662c:	strd	r6, [r8, #112]	; 0x70
   16630:	bl	157d8 <UnityPrintNumberByStyle@@Base>
   16634:	ldrd	r2, [r8, #120]	; 0x78
   16638:	ldr	r0, [pc, #288]	; 16760 <UnityAssertEqualIntArray@@Base+0x800>
   1663c:	adds	r6, r2, #1
   16640:	adc	r7, r3, #0
   16644:	strd	r6, [r8, #120]	; 0x78
   16648:	bl	14b30 <UnityPrint@@Base>
   1664c:	ldrd	r2, [r8, #128]	; 0x80
   16650:	ldrsb	r0, [r4]
   16654:	ldr	r1, [sp, #60]	; 0x3c
   16658:	adds	r4, r2, #1
   1665c:	adc	r5, r3, #0
   16660:	strd	r4, [r8, #128]	; 0x80
   16664:	bl	157d8 <UnityPrintNumberByStyle@@Base>
   16668:	ldrd	r2, [r8, #136]	; 0x88
   1666c:	ldr	r0, [sp, #8]
   16670:	adds	r4, r2, #1
   16674:	adc	r5, r3, #0
   16678:	strd	r4, [r8, #136]	; 0x88
   1667c:	bl	14cc0 <UnityPrint@@Base+0x190>
   16680:	ldrd	r2, [r8, #144]	; 0x90
   16684:	ldr	r0, [pc, #216]	; 16764 <UnityAssertEqualIntArray@@Base+0x804>
   16688:	mov	ip, #1
   1668c:	adds	r4, r2, #1
   16690:	adc	r5, r3, #0
   16694:	sub	r3, r0, #40	; 0x28
   16698:	mov	r1, ip
   1669c:	strd	r4, [r8, #144]	; 0x90
   166a0:	str	ip, [r3, #32]
   166a4:	bl	11ff0 <longjmp@plt>
   166a8:	ldrd	r2, [r8, #16]
   166ac:	ldr	r0, [sp, #56]	; 0x38
   166b0:	adds	r4, r2, #1
   166b4:	adc	r5, r3, #0
   166b8:	strd	r4, [r8, #16]
   166bc:	bl	152cc <UnityPrintNumber@@Base+0x314>
   166c0:	ldrd	r2, [r8, #32]
   166c4:	ldr	r0, [pc, #160]	; 1676c <UnityAssertEqualIntArray@@Base+0x80c>
   166c8:	adds	r4, r2, #1
   166cc:	adc	r5, r3, #0
   166d0:	strd	r4, [r8, #32]
   166d4:	bl	14b30 <UnityPrint@@Base>
   166d8:	ldrd	r2, [r8, #40]	; 0x28
   166dc:	ldr	r0, [sp, #8]
   166e0:	adds	r4, r2, #1
   166e4:	adc	r5, r3, #0
   166e8:	strd	r4, [r8, #40]	; 0x28
   166ec:	bl	14cc0 <UnityPrint@@Base+0x190>
   166f0:	ldrd	r2, [r8, #48]	; 0x30
   166f4:	mov	ip, #1
   166f8:	mov	r1, ip
   166fc:	adds	r4, r2, #1
   16700:	adc	r5, r3, #0
   16704:	ldr	r3, [pc, #68]	; 16750 <UnityAssertEqualIntArray@@Base+0x7f0>
   16708:	strd	r4, [r8, #48]	; 0x30
   1670c:	add	r0, r3, #40	; 0x28
   16710:	str	ip, [r3, #32]
   16714:	bl	11ff0 <longjmp@plt>
   16718:	strd	r6, [r8, #240]	; 0xf0
   1671c:	b	1628c <UnityAssertEqualIntArray@@Base+0x32c>
   16720:	strd	r6, [r8, #160]	; 0xa0
   16724:	b	16360 <UnityAssertEqualIntArray@@Base+0x400>
   16728:	ldr	r9, [sp, #12]
   1672c:	b	165c4 <UnityAssertEqualIntArray@@Base+0x664>
   16730:	ldr	r1, [pc, #28]	; 16754 <UnityAssertEqualIntArray@@Base+0x7f4>
   16734:	strd	r2, [r1]
   16738:	b	161b0 <UnityAssertEqualIntArray@@Base+0x250>
   1673c:	ldr	r9, [sp, #12]
   16740:	b	16388 <UnityAssertEqualIntArray@@Base+0x428>
   16744:	ldr	r6, [sp, #12]
   16748:	b	1648c <UnityAssertEqualIntArray@@Base+0x52c>
   1674c:	andeq	pc, r2, r0, lsr r9	; <UNPREDICTABLE>
   16750:	andeq	r0, r3, r0, ror #8
   16754:	andeq	pc, r2, r0, ror sl	; <UNPREDICTABLE>
   16758:	andeq	sp, r1, ip, lsr r3
   1675c:	andeq	sp, r1, r0, ror #4
   16760:	andeq	sp, r1, r4, ror r2
   16764:	andeq	r0, r3, r8, lsl #9
   16768:	andeq	pc, r2, r0, lsr sl	; <UNPREDICTABLE>
   1676c:	andeq	sp, r1, r4, lsl #6

00016770 <UnityAssertEqualFloatArray@@Base>:
   16770:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16774:	sub	sp, sp, #36	; 0x24
   16778:	ldr	r8, [pc, #468]	; 16954 <UnityAssertEqualFloatArray@@Base+0x1e4>
   1677c:	ldr	ip, [pc, #528]	; 16994 <UnityAssertEqualFloatArray@@Base+0x224>
   16780:	ldrd	r4, [r8, #-8]
   16784:	ldr	ip, [ip, #32]
   16788:	adds	r6, r4, #1
   1678c:	adc	r7, r5, #0
   16790:	cmp	ip, #0
   16794:	strd	r6, [r8, #-8]
   16798:	bne	16944 <UnityAssertEqualFloatArray@@Base+0x1d4>
   1679c:	ldrd	r6, [r8]
   167a0:	ldr	r5, [pc, #492]	; 16994 <UnityAssertEqualFloatArray@@Base+0x224>
   167a4:	adds	sl, r6, #1
   167a8:	adc	fp, r7, #0
   167ac:	ldr	r5, [r5, #36]	; 0x24
   167b0:	mov	r6, sl
   167b4:	mov	r7, fp
   167b8:	cmp	r5, #0
   167bc:	strd	r6, [r8]
   167c0:	bne	16944 <UnityAssertEqualFloatArray@@Base+0x1d4>
   167c4:	cmp	r2, #0
   167c8:	str	r3, [sp, #24]
   167cc:	str	r1, [sp]
   167d0:	mov	r9, r2
   167d4:	beq	16d28 <UnityAssertEqualFloatArray@@Base+0x5b8>
   167d8:	ldrd	r6, [r8, #16]
   167dc:	ldr	r2, [sp, #72]	; 0x48
   167e0:	mov	r4, r0
   167e4:	adds	sl, r6, #1
   167e8:	adc	fp, r7, #0
   167ec:	mov	r6, sl
   167f0:	mov	r7, fp
   167f4:	strd	r6, [r8, #16]
   167f8:	bl	15350 <UnityPrintNumber@@Base+0x398>
   167fc:	ldrd	r2, [r8, #48]	; 0x30
   16800:	adds	r6, r2, #1
   16804:	adc	r7, r3, #0
   16808:	strd	r6, [r8, #48]	; 0x30
   1680c:	cmp	r0, #1
   16810:	beq	16944 <UnityAssertEqualFloatArray@@Base+0x1d4>
   16814:	ldrd	r0, [r8, #64]	; 0x40
   16818:	mov	lr, r5
   1681c:	sub	ip, r9, #1
   16820:	strd	r0, [sp, #16]
   16824:	mov	r9, r4
   16828:	ldrd	r0, [r8, #72]	; 0x48
   1682c:	ldrd	r4, [r8, #56]	; 0x38
   16830:	ldr	sl, [sp]
   16834:	strd	r0, [sp, #8]
   16838:	adds	r4, r4, #1
   1683c:	ldrd	r0, [r8, #80]	; 0x50
   16840:	adc	r5, r5, #0
   16844:	vldr	s13, [pc, #256]	; 1694c <UnityAssertEqualFloatArray@@Base+0x1dc>
   16848:	strd	r4, [r8, #56]	; 0x38
   1684c:	vldr	s11, [pc, #252]	; 16950 <UnityAssertEqualFloatArray@@Base+0x1e0>
   16850:	str	ip, [sp, #28]
   16854:	ldrd	r2, [r8, #136]	; 0x88
   16858:	ldrd	r6, [r8, #128]	; 0x80
   1685c:	mov	fp, lr
   16860:	mov	r5, lr
   16864:	mov	r4, #1
   16868:	strd	r0, [sp]
   1686c:	b	168c4 <UnityAssertEqualFloatArray@@Base+0x154>
   16870:	vmul.f32	s15, s15, s11
   16874:	vcmpe.f32	s15, s13
   16878:	vmrs	APSR_nzcv, fpscr
   1687c:	bmi	1690c <UnityAssertEqualFloatArray@@Base+0x19c>
   16880:	vmul.f32	s12, s14, s13
   16884:	vcmp.f32	s12, s13
   16888:	vmrs	APSR_nzcv, fpscr
   1688c:	bne	169ac <UnityAssertEqualFloatArray@@Base+0x23c>
   16890:	ldrd	r0, [sp]
   16894:	vcmpe.f32	s14, s15
   16898:	adds	r0, r0, #1
   1689c:	adc	r1, r1, #0
   168a0:	vmrs	APSR_nzcv, fpscr
   168a4:	strd	r0, [sp]
   168a8:	bgt	16cc4 <UnityAssertEqualFloatArray@@Base+0x554>
   168ac:	adds	r6, r6, #1
   168b0:	sub	ip, ip, #1
   168b4:	adc	r7, r7, #0
   168b8:	cmn	ip, #1
   168bc:	mov	lr, r4
   168c0:	beq	16928 <UnityAssertEqualFloatArray@@Base+0x1b8>
   168c4:	vldmia	r9!, {s15}
   168c8:	vldmia	sl!, {s14}
   168cc:	adds	r2, r2, #1
   168d0:	adc	r3, r3, #0
   168d4:	vsub.f32	s14, s15, s14
   168d8:	vcmpe.f32	s14, s13
   168dc:	vmrs	APSR_nzcv, fpscr
   168e0:	bpl	16870 <UnityAssertEqualFloatArray@@Base+0x100>
   168e4:	vmul.f32	s15, s15, s11
   168e8:	ldrd	r0, [sp, #16]
   168ec:	vsub.f32	s14, s13, s14
   168f0:	mov	r5, r4
   168f4:	adds	r0, r0, #1
   168f8:	adc	r1, r1, #0
   168fc:	strd	r0, [sp, #16]
   16900:	vcmpe.f32	s15, s13
   16904:	vmrs	APSR_nzcv, fpscr
   16908:	bpl	16880 <UnityAssertEqualFloatArray@@Base+0x110>
   1690c:	ldrd	r0, [sp, #8]
   16910:	vsub.f32	s15, s13, s15
   16914:	mov	fp, r4
   16918:	adds	r0, r0, #1
   1691c:	adc	r1, r1, #0
   16920:	strd	r0, [sp, #8]
   16924:	b	16880 <UnityAssertEqualFloatArray@@Base+0x110>
   16928:	cmp	r5, #0
   1692c:	strd	r2, [r8, #136]	; 0x88
   16930:	bne	16cfc <UnityAssertEqualFloatArray@@Base+0x58c>
   16934:	cmp	fp, #0
   16938:	bne	16d1c <UnityAssertEqualFloatArray@@Base+0x5ac>
   1693c:	strd	r0, [r8, #80]	; 0x50
   16940:	strd	r6, [r8, #128]	; 0x80
   16944:	add	sp, sp, #36	; 0x24
   16948:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1694c:	andeq	r0, r0, r0
   16950:	strcc	ip, [r7, -ip, lsr #11]!
   16954:	andeq	pc, r2, r0, lsl #21
   16958:	andeq	pc, r2, r0, asr #14
   1695c:	muleq	r1, r8, r2
   16960:	andeq	lr, r2, r4, asr #24
   16964:	andeq	sp, r1, ip, lsr r3
   16968:	andeq	r2, r0, pc, lsl #14
   1696c:	muleq	r1, pc, r6	; <UNPREDICTABLE>
   16970:	andeq	r4, pc, pc, lsr r2	; <UNPREDICTABLE>
   16974:	addseq	r9, r8, pc, ror r6
   16978:	ldrbeq	lr, [r5, #255]!	; 0xff
   1697c:	blcc	fe6c9180 <__bss_end__@@Base+0xfe697b40>
   16980:	blcc	fe6c9188 <__bss_end__@@Base+0xfe697b48>
   16984:	stclgt	12, cr12, [ip], {205}	; 0xcd
   16988:	andeq	sp, r1, r8, asr #6
   1698c:	andeq	r0, r3, r8, lsl #9
   16990:	andeq	sp, r1, r4, lsl #6
   16994:	andeq	r0, r3, r0, ror #8
   16998:	ldrbeq	lr, [r5, #256]!	; 0x100
   1699c:	addseq	r9, r8, r0, lsl #13
   169a0:	andeq	r4, pc, r0, asr #4
   169a4:	andeq	r8, r1, r0, lsr #13
   169a8:	andeq	r2, r0, r0, lsl r7
   169ac:	cmp	r5, #0
   169b0:	ldrd	r0, [sp]
   169b4:	strd	r2, [r8, #136]	; 0x88
   169b8:	bne	16d10 <UnityAssertEqualFloatArray@@Base+0x5a0>
   169bc:	cmp	fp, #0
   169c0:	ldrdne	r2, [sp, #8]
   169c4:	strdne	r2, [r8, #72]	; 0x48
   169c8:	cmp	lr, #0
   169cc:	bne	16d08 <UnityAssertEqualFloatArray@@Base+0x598>
   169d0:	ldr	r4, [pc, #-128]	; 16958 <UnityAssertEqualFloatArray@@Base+0x1e8>
   169d4:	ldr	r3, [pc, #-72]	; 16994 <UnityAssertEqualFloatArray@@Base+0x224>
   169d8:	ldr	lr, [sp, #28]
   169dc:	ldr	r1, [sp, #72]	; 0x48
   169e0:	ldr	r0, [r3]
   169e4:	ldrd	r2, [r4]
   169e8:	sub	r9, lr, ip
   169ec:	add	r4, r4, #112	; 0x70
   169f0:	adds	r6, r2, #1
   169f4:	adc	r7, r3, #0
   169f8:	strd	r6, [r4, #-112]	; 0xffffff90
   169fc:	bl	15200 <UnityPrintNumber@@Base+0x248>
   16a00:	ldrd	r2, [r4, #-104]	; 0xffffff98
   16a04:	ldr	r0, [pc, #-176]	; 1695c <UnityAssertEqualFloatArray@@Base+0x1ec>
   16a08:	ldr	r6, [pc, #-176]	; 16960 <UnityAssertEqualFloatArray@@Base+0x1f0>
   16a0c:	adds	sl, r2, #1
   16a10:	adc	fp, r3, #0
   16a14:	mov	r2, sl
   16a18:	mov	r3, fp
   16a1c:	strd	r2, [r4, #-104]	; 0xffffff98
   16a20:	bl	14b30 <UnityPrint@@Base>
   16a24:	ldrd	r2, [r4, #-96]	; 0xffffffa0
   16a28:	ldr	r1, [r6]
   16a2c:	mov	r0, #58	; 0x3a
   16a30:	adds	sl, r2, #1
   16a34:	adc	fp, r3, #0
   16a38:	mov	r2, sl
   16a3c:	mov	r3, fp
   16a40:	strd	r2, [r4, #-96]	; 0xffffffa0
   16a44:	bl	12134 <putc@plt>
   16a48:	ldrd	r2, [r4, #-88]	; 0xffffffa8
   16a4c:	ldrd	r0, [r8, #88]	; 0x58
   16a50:	adds	sl, r2, #1
   16a54:	adc	fp, r3, #0
   16a58:	adds	r2, r0, #1
   16a5c:	adc	r3, r1, #0
   16a60:	ldr	r0, [pc, #-260]	; 16964 <UnityAssertEqualFloatArray@@Base+0x1f4>
   16a64:	strd	r2, [r8, #88]	; 0x58
   16a68:	mov	r2, sl
   16a6c:	mov	r3, fp
   16a70:	strd	r2, [r4, #-88]	; 0xffffffa8
   16a74:	bl	14b30 <UnityPrint@@Base>
   16a78:	ldrd	r2, [r8, #96]	; 0x60
   16a7c:	adds	r0, r2, #1
   16a80:	adc	r1, r3, #0
   16a84:	cmp	r9, #9
   16a88:	strd	r0, [r8, #96]	; 0x60
   16a8c:	movls	r7, #1
   16a90:	bls	16bfc <UnityAssertEqualFloatArray@@Base+0x48c>
   16a94:	ldrd	r2, [r4, #8]
   16a98:	mov	sl, r2
   16a9c:	mov	fp, r3
   16aa0:	ldrd	r2, [r4]
   16aa4:	strd	sl, [sp, #8]
   16aa8:	adds	sl, sl, #1
   16aac:	adc	fp, fp, #0
   16ab0:	mov	r0, r2
   16ab4:	adds	r2, r2, #1
   16ab8:	mov	r1, r3
   16abc:	adc	r3, r3, #0
   16ac0:	cmp	r9, #99	; 0x63
   16ac4:	strd	r2, [sp]
   16ac8:	strd	sl, [r4, #8]
   16acc:	bls	16dd0 <UnityAssertEqualFloatArray@@Base+0x660>
   16ad0:	ldrd	sl, [sp, #8]
   16ad4:	strd	r0, [sp, #8]
   16ad8:	adds	r2, sl, #2
   16adc:	adc	r3, fp, #0
   16ae0:	adds	r0, r0, #2
   16ae4:	adc	r1, r1, #0
   16ae8:	cmp	r9, #1000	; 0x3e8
   16aec:	strd	r0, [sp]
   16af0:	bcc	16dc8 <UnityAssertEqualFloatArray@@Base+0x658>
   16af4:	adds	r0, sl, #3
   16af8:	adc	r1, fp, #0
   16afc:	mov	r2, r0
   16b00:	mov	r3, r1
   16b04:	ldrd	r0, [sp, #8]
   16b08:	ldr	ip, [pc, #-424]	; 16968 <UnityAssertEqualFloatArray@@Base+0x1f8>
   16b0c:	adds	r0, r0, #3
   16b10:	adc	r1, r1, #0
   16b14:	cmp	r9, ip
   16b18:	strd	r0, [sp]
   16b1c:	bls	16dc0 <UnityAssertEqualFloatArray@@Base+0x650>
   16b20:	ldrd	r0, [sp, #8]
   16b24:	adds	r2, sl, #4
   16b28:	ldr	ip, [pc, #-452]	; 1696c <UnityAssertEqualFloatArray@@Base+0x1fc>
   16b2c:	adc	r3, fp, #0
   16b30:	adds	r0, r0, #4
   16b34:	adc	r1, r1, #0
   16b38:	cmp	r9, ip
   16b3c:	strd	r0, [sp]
   16b40:	bls	16db8 <UnityAssertEqualFloatArray@@Base+0x648>
   16b44:	ldrd	r0, [sp, #8]
   16b48:	adds	r2, sl, #5
   16b4c:	ldr	ip, [pc, #-484]	; 16970 <UnityAssertEqualFloatArray@@Base+0x200>
   16b50:	adc	r3, fp, #0
   16b54:	adds	r0, r0, #5
   16b58:	adc	r1, r1, #0
   16b5c:	cmp	r9, ip
   16b60:	strd	r0, [sp]
   16b64:	bls	16db0 <UnityAssertEqualFloatArray@@Base+0x640>
   16b68:	ldrd	r0, [sp, #8]
   16b6c:	adds	r2, sl, #6
   16b70:	ldr	ip, [pc, #-516]	; 16974 <UnityAssertEqualFloatArray@@Base+0x204>
   16b74:	adc	r3, fp, #0
   16b78:	adds	r0, r0, #6
   16b7c:	adc	r1, r1, #0
   16b80:	cmp	r9, ip
   16b84:	strd	r0, [sp]
   16b88:	bls	16da8 <UnityAssertEqualFloatArray@@Base+0x638>
   16b8c:	ldrd	r0, [sp, #8]
   16b90:	adds	r2, sl, #7
   16b94:	ldr	ip, [pc, #-548]	; 16978 <UnityAssertEqualFloatArray@@Base+0x208>
   16b98:	adc	r3, fp, #0
   16b9c:	adds	r0, r0, #7
   16ba0:	adc	r1, r1, #0
   16ba4:	cmp	r9, ip
   16ba8:	strd	r0, [sp]
   16bac:	bls	16da0 <UnityAssertEqualFloatArray@@Base+0x630>
   16bb0:	ldrd	r0, [sp, #8]
   16bb4:	adds	r2, sl, #8
   16bb8:	ldr	ip, [pc, #-580]	; 1697c <UnityAssertEqualFloatArray@@Base+0x20c>
   16bbc:	adc	r3, fp, #0
   16bc0:	adds	r0, r0, #8
   16bc4:	adc	r1, r1, #0
   16bc8:	cmp	r9, ip
   16bcc:	strd	r0, [sp]
   16bd0:	bls	16d98 <UnityAssertEqualFloatArray@@Base+0x628>
   16bd4:	ldrd	r0, [sp, #8]
   16bd8:	adds	r2, sl, #9
   16bdc:	adc	r3, fp, #0
   16be0:	ldr	r7, [pc, #-616]	; 16980 <UnityAssertEqualFloatArray@@Base+0x210>
   16be4:	adds	r0, r0, #9
   16be8:	adc	r1, r1, #0
   16bec:	strd	r0, [sp]
   16bf0:	strd	r2, [r4, #8]
   16bf4:	ldrd	r2, [sp]
   16bf8:	strd	r2, [r4]
   16bfc:	ldrd	r2, [r4, #16]
   16c00:	ldr	r5, [pc, #-644]	; 16984 <UnityAssertEqualFloatArray@@Base+0x214>
   16c04:	adds	r0, r2, #1
   16c08:	adc	r1, r3, #0
   16c0c:	strd	r0, [r4, #16]
   16c10:	b	16c24 <UnityAssertEqualFloatArray@@Base+0x4b4>
   16c14:	ldrd	r2, [r4, #32]
   16c18:	adds	r0, r2, #1
   16c1c:	adc	r1, r3, #0
   16c20:	strd	r0, [r4, #32]
   16c24:	mov	r1, r7
   16c28:	mov	r0, r9
   16c2c:	bl	1c9a0 <__gcov_sort_n_vals@@Base+0x534>
   16c30:	ldr	r1, [r6]
   16c34:	umull	r2, r3, r5, r0
   16c38:	lsr	r3, r3, #3
   16c3c:	add	r3, r3, r3, lsl #2
   16c40:	sub	r0, r0, r3, lsl #1
   16c44:	umull	r3, r7, r5, r7
   16c48:	add	r0, r0, #48	; 0x30
   16c4c:	uxtb	r0, r0
   16c50:	bl	12134 <putc@plt>
   16c54:	lsrs	r7, r7, #3
   16c58:	bne	16c14 <UnityAssertEqualFloatArray@@Base+0x4a4>
   16c5c:	ldrd	r2, [r4, #24]
   16c60:	ldrd	r6, [r8, #104]	; 0x68
   16c64:	adds	r0, r2, #1
   16c68:	adc	r1, r3, #0
   16c6c:	adds	r2, r6, #1
   16c70:	adc	r3, r7, #0
   16c74:	strd	r0, [r4, #24]
   16c78:	ldr	r0, [pc, #-760]	; 16988 <UnityAssertEqualFloatArray@@Base+0x218>
   16c7c:	strd	r2, [r8, #104]	; 0x68
   16c80:	bl	14b30 <UnityPrint@@Base>
   16c84:	ldrd	r2, [r8, #112]	; 0x70
   16c88:	ldr	r0, [sp, #24]
   16c8c:	adds	r4, r2, #1
   16c90:	adc	r5, r3, #0
   16c94:	strd	r4, [r8, #112]	; 0x70
   16c98:	bl	14cc0 <UnityPrint@@Base+0x190>
   16c9c:	ldrd	r2, [r8, #120]	; 0x78
   16ca0:	ldr	r0, [pc, #-796]	; 1698c <UnityAssertEqualFloatArray@@Base+0x21c>
   16ca4:	mov	ip, #1
   16ca8:	adds	r4, r2, #1
   16cac:	adc	r5, r3, #0
   16cb0:	sub	r3, r0, #40	; 0x28
   16cb4:	mov	r1, ip
   16cb8:	strd	r4, [r8, #120]	; 0x78
   16cbc:	str	ip, [r3, #32]
   16cc0:	bl	11ff0 <longjmp@plt>
   16cc4:	cmp	r5, #0
   16cc8:	strd	r2, [r8, #136]	; 0x88
   16ccc:	bne	16cf0 <UnityAssertEqualFloatArray@@Base+0x580>
   16cd0:	cmp	fp, #0
   16cd4:	ldrdne	r2, [sp, #8]
   16cd8:	strdne	r2, [r8, #72]	; 0x48
   16cdc:	cmp	lr, #0
   16ce0:	strd	r0, [r8, #80]	; 0x50
   16ce4:	beq	169d0 <UnityAssertEqualFloatArray@@Base+0x260>
   16ce8:	strd	r6, [r8, #128]	; 0x80
   16cec:	b	169d0 <UnityAssertEqualFloatArray@@Base+0x260>
   16cf0:	ldrd	r2, [sp, #16]
   16cf4:	strd	r2, [r8, #64]	; 0x40
   16cf8:	b	16cd0 <UnityAssertEqualFloatArray@@Base+0x560>
   16cfc:	ldrd	r2, [sp, #16]
   16d00:	strd	r2, [r8, #64]	; 0x40
   16d04:	b	16934 <UnityAssertEqualFloatArray@@Base+0x1c4>
   16d08:	strd	r0, [r8, #80]	; 0x50
   16d0c:	b	16ce8 <UnityAssertEqualFloatArray@@Base+0x578>
   16d10:	ldrd	r2, [sp, #16]
   16d14:	strd	r2, [r8, #64]	; 0x40
   16d18:	b	169bc <UnityAssertEqualFloatArray@@Base+0x24c>
   16d1c:	ldrd	r2, [sp, #8]
   16d20:	strd	r2, [r8, #72]	; 0x48
   16d24:	b	1693c <UnityAssertEqualFloatArray@@Base+0x1cc>
   16d28:	ldrd	r2, [r8, #8]
   16d2c:	ldr	r0, [sp, #72]	; 0x48
   16d30:	adds	r4, r2, #1
   16d34:	adc	r5, r3, #0
   16d38:	strd	r4, [r8, #8]
   16d3c:	bl	152cc <UnityPrintNumber@@Base+0x314>
   16d40:	ldrd	r2, [r8, #24]
   16d44:	ldr	r0, [pc, #-956]	; 16990 <UnityAssertEqualFloatArray@@Base+0x220>
   16d48:	adds	r4, r2, #1
   16d4c:	adc	r5, r3, #0
   16d50:	strd	r4, [r8, #24]
   16d54:	bl	14b30 <UnityPrint@@Base>
   16d58:	ldrd	r2, [r8, #32]
   16d5c:	ldr	r0, [sp, #24]
   16d60:	adds	r4, r2, #1
   16d64:	adc	r5, r3, #0
   16d68:	strd	r4, [r8, #32]
   16d6c:	bl	14cc0 <UnityPrint@@Base+0x190>
   16d70:	ldrd	r2, [r8, #40]	; 0x28
   16d74:	mov	ip, #1
   16d78:	mov	r1, ip
   16d7c:	adds	r4, r2, #1
   16d80:	adc	r5, r3, #0
   16d84:	ldr	r3, [pc, #-1016]	; 16994 <UnityAssertEqualFloatArray@@Base+0x224>
   16d88:	strd	r4, [r8, #40]	; 0x28
   16d8c:	add	r0, r3, #40	; 0x28
   16d90:	str	ip, [r3, #32]
   16d94:	bl	11ff0 <longjmp@plt>
   16d98:	ldr	r7, [pc, #-1032]	; 16998 <UnityAssertEqualFloatArray@@Base+0x228>
   16d9c:	b	16bf0 <UnityAssertEqualFloatArray@@Base+0x480>
   16da0:	ldr	r7, [pc, #-1036]	; 1699c <UnityAssertEqualFloatArray@@Base+0x22c>
   16da4:	b	16bf0 <UnityAssertEqualFloatArray@@Base+0x480>
   16da8:	ldr	r7, [pc, #-1040]	; 169a0 <UnityAssertEqualFloatArray@@Base+0x230>
   16dac:	b	16bf0 <UnityAssertEqualFloatArray@@Base+0x480>
   16db0:	ldr	r7, [pc, #-1044]	; 169a4 <UnityAssertEqualFloatArray@@Base+0x234>
   16db4:	b	16bf0 <UnityAssertEqualFloatArray@@Base+0x480>
   16db8:	ldr	r7, [pc, #-1048]	; 169a8 <UnityAssertEqualFloatArray@@Base+0x238>
   16dbc:	b	16bf0 <UnityAssertEqualFloatArray@@Base+0x480>
   16dc0:	mov	r7, #1000	; 0x3e8
   16dc4:	b	16bf0 <UnityAssertEqualFloatArray@@Base+0x480>
   16dc8:	mov	r7, #100	; 0x64
   16dcc:	b	16bf0 <UnityAssertEqualFloatArray@@Base+0x480>
   16dd0:	mov	r7, #10
   16dd4:	b	16bf8 <UnityAssertEqualFloatArray@@Base+0x488>

00016dd8 <UnityAssertFloatsWithin@@Base>:
   16dd8:	push	{r4, r5, r6, lr}
   16ddc:	ldr	r4, [pc, #336]	; 16f34 <UnityAssertFloatsWithin@@Base+0x15c>
   16de0:	ldr	r5, [pc, #336]	; 16f38 <UnityAssertFloatsWithin@@Base+0x160>
   16de4:	ldrd	r2, [r4]
   16de8:	ldr	ip, [r5, #32]
   16dec:	adds	r2, r2, #1
   16df0:	adc	r3, r3, #0
   16df4:	cmp	ip, #0
   16df8:	strd	r2, [r4]
   16dfc:	popne	{r4, r5, r6, pc}
   16e00:	ldrd	r2, [r4, #8]
   16e04:	ldr	ip, [r5, #36]	; 0x24
   16e08:	adds	r2, r2, #1
   16e0c:	adc	r3, r3, #0
   16e10:	cmp	ip, #0
   16e14:	strd	r2, [r4, #8]
   16e18:	popne	{r4, r5, r6, pc}
   16e1c:	vsub.f32	s2, s2, s1
   16e20:	vldr	s15, [pc, #264]	; 16f30 <UnityAssertFloatsWithin@@Base+0x158>
   16e24:	ldrd	r2, [r4, #16]
   16e28:	adds	r2, r2, #1
   16e2c:	adc	r3, r3, #0
   16e30:	vcmpe.f32	s2, s15
   16e34:	strd	r2, [r4, #16]
   16e38:	vmrs	APSR_nzcv, fpscr
   16e3c:	bmi	16e94 <UnityAssertFloatsWithin@@Base+0xbc>
   16e40:	vldr	s15, [pc, #232]	; 16f30 <UnityAssertFloatsWithin@@Base+0x158>
   16e44:	vcmpe.f32	s0, s15
   16e48:	vmrs	APSR_nzcv, fpscr
   16e4c:	bmi	16eb8 <UnityAssertFloatsWithin@@Base+0xe0>
   16e50:	vldr	s15, [pc, #216]	; 16f30 <UnityAssertFloatsWithin@@Base+0x158>
   16e54:	vmul.f32	s14, s2, s15
   16e58:	vcmp.f32	s14, s15
   16e5c:	vmrs	APSR_nzcv, fpscr
   16e60:	bne	16ed0 <UnityAssertFloatsWithin@@Base+0xf8>
   16e64:	ldrd	r2, [r4, #40]	; 0x28
   16e68:	vcmpe.f32	s2, s0
   16e6c:	adds	r2, r2, #1
   16e70:	adc	r3, r3, #0
   16e74:	vmrs	APSR_nzcv, fpscr
   16e78:	strd	r2, [r4, #40]	; 0x28
   16e7c:	bgt	16ed0 <UnityAssertFloatsWithin@@Base+0xf8>
   16e80:	ldrd	r2, [r4, #48]	; 0x30
   16e84:	adds	r2, r2, #1
   16e88:	adc	r3, r3, #0
   16e8c:	strd	r2, [r4, #48]	; 0x30
   16e90:	pop	{r4, r5, r6, pc}
   16e94:	vsub.f32	s2, s15, s2
   16e98:	vldr	s15, [pc, #144]	; 16f30 <UnityAssertFloatsWithin@@Base+0x158>
   16e9c:	ldrd	r2, [r4, #24]
   16ea0:	vcmpe.f32	s0, s15
   16ea4:	adds	r2, r2, #1
   16ea8:	adc	r3, r3, #0
   16eac:	vmrs	APSR_nzcv, fpscr
   16eb0:	strd	r2, [r4, #24]
   16eb4:	bpl	16e50 <UnityAssertFloatsWithin@@Base+0x78>
   16eb8:	ldrd	r2, [r4, #32]
   16ebc:	vsub.f32	s0, s15, s0
   16ec0:	adds	r2, r2, #1
   16ec4:	adc	r3, r3, #0
   16ec8:	strd	r2, [r4, #32]
   16ecc:	b	16e50 <UnityAssertFloatsWithin@@Base+0x78>
   16ed0:	mov	r6, r0
   16ed4:	mov	r0, r1
   16ed8:	bl	152cc <UnityPrintNumber@@Base+0x314>
   16edc:	ldrd	r2, [r4, #56]	; 0x38
   16ee0:	ldr	r0, [pc, #84]	; 16f3c <UnityAssertFloatsWithin@@Base+0x164>
   16ee4:	adds	r2, r2, #1
   16ee8:	adc	r3, r3, #0
   16eec:	strd	r2, [r4, #56]	; 0x38
   16ef0:	bl	14b30 <UnityPrint@@Base>
   16ef4:	ldrd	r2, [r4, #64]	; 0x40
   16ef8:	mov	r0, r6
   16efc:	adds	r2, r2, #1
   16f00:	adc	r3, r3, #0
   16f04:	strd	r2, [r4, #64]	; 0x40
   16f08:	bl	14cc0 <UnityPrint@@Base+0x190>
   16f0c:	ldrd	r2, [r4, #72]	; 0x48
   16f10:	mov	ip, #1
   16f14:	mov	r1, ip
   16f18:	adds	r2, r2, #1
   16f1c:	adc	r3, r3, #0
   16f20:	ldr	r0, [pc, #24]	; 16f40 <UnityAssertFloatsWithin@@Base+0x168>
   16f24:	strd	r2, [r4, #72]	; 0x48
   16f28:	str	ip, [r5, #32]
   16f2c:	bl	11ff0 <longjmp@plt>
   16f30:	andeq	r0, r0, r0
   16f34:	andeq	pc, r2, r0, lsl fp	; <UNPREDICTABLE>
   16f38:	andeq	r0, r3, r0, ror #8
   16f3c:	andeq	sp, r1, r8, asr #6
   16f40:	andeq	r0, r3, r8, lsl #9

00016f44 <UnityAssertFloatSpecial@@Base>:
   16f44:	ldr	r3, [pc, #956]	; 17308 <UnityAssertFloatSpecial@@Base+0x3c4>
   16f48:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16f4c:	mov	r9, r0
   16f50:	ldr	r5, [pc, #948]	; 1730c <UnityAssertFloatSpecial@@Base+0x3c8>
   16f54:	mov	lr, r1
   16f58:	mov	r8, r2
   16f5c:	ldm	r3, {r0, r1, r2, r3}
   16f60:	sub	sp, sp, #20
   16f64:	ldr	r4, [r5, #32]
   16f68:	add	ip, sp, #16
   16f6c:	cmp	r4, #0
   16f70:	stmdb	ip, {r0, r1, r2, r3}
   16f74:	ldr	r4, [pc, #916]	; 17310 <UnityAssertFloatSpecial@@Base+0x3cc>
   16f78:	bne	16f98 <UnityAssertFloatSpecial@@Base+0x54>
   16f7c:	ldrd	r2, [r4]
   16f80:	ldr	r0, [r5, #36]	; 0x24
   16f84:	adds	r2, r2, #1
   16f88:	adc	r3, r3, #0
   16f8c:	cmp	r0, #0
   16f90:	strd	r2, [r4]
   16f94:	beq	16fb0 <UnityAssertFloatSpecial@@Base+0x6c>
   16f98:	ldrd	r2, [r4, #192]	; 0xc0
   16f9c:	adds	r2, r2, #1
   16fa0:	adc	r3, r3, #0
   16fa4:	strd	r2, [r4, #192]	; 0xc0
   16fa8:	add	sp, sp, #20
   16fac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16fb0:	mvn	r1, r8
   16fb4:	lsr	r7, r8, #1
   16fb8:	cmp	r8, #7
   16fbc:	ldrls	pc, [pc, r8, lsl #2]
   16fc0:	b	17110 <UnityAssertFloatSpecial@@Base+0x1cc>
   16fc4:	strheq	r7, [r1], -r8
   16fc8:	strheq	r7, [r1], -r8
   16fcc:	andeq	r7, r1, r0, rrx
   16fd0:	andeq	r7, r1, r0, rrx
   16fd4:	andeq	r7, r1, ip, lsl r0
   16fd8:	andeq	r7, r1, ip, lsl r0
   16fdc:	andeq	r6, r1, r4, ror #31
   16fe0:	andeq	r6, r1, r4, ror #31
   16fe4:	vabs.f32	s15, s0
   16fe8:	vldr	s14, [pc, #788]	; 17304 <UnityAssertFloatSpecial@@Base+0x3c0>
   16fec:	vcmp.f32	s15, s14
   16ff0:	vmrs	APSR_nzcv, fpscr
   16ff4:	bgt	17134 <UnityAssertFloatSpecial@@Base+0x1f0>
   16ff8:	vcmp.f32	s0, s0
   16ffc:	vmrs	APSR_nzcv, fpscr
   17000:	bvs	171a4 <UnityAssertFloatSpecial@@Base+0x260>
   17004:	ldrd	r2, [r4, #80]	; 0x50
   17008:	mov	r1, #1
   1700c:	adds	r2, r2, #1
   17010:	adc	r3, r3, #0
   17014:	strd	r2, [r4, #80]	; 0x50
   17018:	b	1703c <UnityAssertFloatSpecial@@Base+0xf8>
   1701c:	vcmp.f32	s0, s0
   17020:	ldrd	r2, [r4, #56]	; 0x38
   17024:	vmrs	APSR_nzcv, fpscr
   17028:	movvs	r1, #1
   1702c:	movvc	r1, #0
   17030:	adds	r2, r2, #1
   17034:	adc	r3, r3, #0
   17038:	strd	r2, [r4, #56]	; 0x38
   1703c:	and	r8, r8, #1
   17040:	cmp	r1, r8
   17044:	bne	171ac <UnityAssertFloatSpecial@@Base+0x268>
   17048:	ldrd	r2, [r4, #184]	; 0xb8
   1704c:	adds	r2, r2, #1
   17050:	adc	r3, r3, #0
   17054:	strd	r2, [r4, #184]	; 0xb8
   17058:	add	sp, sp, #20
   1705c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17060:	vabs.f32	s15, s0
   17064:	vldr	s14, [pc, #664]	; 17304 <UnityAssertFloatSpecial@@Base+0x3c0>
   17068:	vcmp.f32	s15, s14
   1706c:	vmrs	APSR_nzcv, fpscr
   17070:	movle	r1, #0
   17074:	ble	170a4 <UnityAssertFloatSpecial@@Base+0x160>
   17078:	ldrd	r2, [r4, #32]
   1707c:	vmov	r1, s0
   17080:	vcmpe.f32	s0, #0.0
   17084:	adds	r2, r2, #1
   17088:	adc	r3, r3, #0
   1708c:	cmp	r1, #0
   17090:	strd	r2, [r4, #32]
   17094:	bge	17184 <UnityAssertFloatSpecial@@Base+0x240>
   17098:	vmrs	APSR_nzcv, fpscr
   1709c:	movmi	r1, #1
   170a0:	movpl	r1, #0
   170a4:	ldrd	r2, [r4, #48]	; 0x30
   170a8:	adds	r2, r2, #1
   170ac:	adc	r3, r3, #0
   170b0:	strd	r2, [r4, #48]	; 0x30
   170b4:	b	1703c <UnityAssertFloatSpecial@@Base+0xf8>
   170b8:	vabs.f32	s15, s0
   170bc:	vldr	s14, [pc, #576]	; 17304 <UnityAssertFloatSpecial@@Base+0x3c0>
   170c0:	vcmp.f32	s15, s14
   170c4:	vmrs	APSR_nzcv, fpscr
   170c8:	movle	r1, #0
   170cc:	ble	170fc <UnityAssertFloatSpecial@@Base+0x1b8>
   170d0:	ldrd	r2, [r4, #8]
   170d4:	vmov	r1, s0
   170d8:	vcmpe.f32	s0, #0.0
   170dc:	adds	r2, r2, #1
   170e0:	adc	r3, r3, #0
   170e4:	cmp	r1, #0
   170e8:	strd	r2, [r4, #8]
   170ec:	bge	17164 <UnityAssertFloatSpecial@@Base+0x220>
   170f0:	vmrs	APSR_nzcv, fpscr
   170f4:	movgt	r1, #1
   170f8:	movle	r1, #0
   170fc:	ldrd	r2, [r4, #24]
   17100:	adds	r2, r2, #1
   17104:	adc	r3, r3, #0
   17108:	strd	r2, [r4, #24]
   1710c:	b	1703c <UnityAssertFloatSpecial@@Base+0xf8>
   17110:	ldrd	r2, [r4, #88]	; 0x58
   17114:	ldr	r0, [pc, #504]	; 17314 <UnityAssertFloatSpecial@@Base+0x3d0>
   17118:	and	r1, r1, #1
   1711c:	adds	r2, r2, #1
   17120:	adc	r3, r3, #0
   17124:	str	r0, [sp]
   17128:	strd	r2, [r4, #88]	; 0x58
   1712c:	mov	r7, #0
   17130:	b	1703c <UnityAssertFloatSpecial@@Base+0xf8>
   17134:	ldrd	r2, [r4, #64]	; 0x40
   17138:	vmov	r1, s0
   1713c:	adds	r2, r2, #1
   17140:	adc	r3, r3, #0
   17144:	ands	r1, r1, #-2147483648	; 0x80000000
   17148:	strd	r2, [r4, #64]	; 0x40
   1714c:	bne	171a4 <UnityAssertFloatSpecial@@Base+0x260>
   17150:	ldrd	r2, [r4, #72]	; 0x48
   17154:	adds	r2, r2, #1
   17158:	adc	r3, r3, #0
   1715c:	strd	r2, [r4, #72]	; 0x48
   17160:	b	1703c <UnityAssertFloatSpecial@@Base+0xf8>
   17164:	ldrd	r2, [r4, #16]
   17168:	adds	r2, r2, #1
   1716c:	adc	r3, r3, #0
   17170:	vmrs	APSR_nzcv, fpscr
   17174:	strd	r2, [r4, #16]
   17178:	movgt	r1, #1
   1717c:	movle	r1, #0
   17180:	b	170fc <UnityAssertFloatSpecial@@Base+0x1b8>
   17184:	ldrd	r2, [r4, #40]	; 0x28
   17188:	adds	r2, r2, #1
   1718c:	adc	r3, r3, #0
   17190:	vmrs	APSR_nzcv, fpscr
   17194:	strd	r2, [r4, #40]	; 0x28
   17198:	movmi	r1, #1
   1719c:	movpl	r1, #0
   171a0:	b	170a4 <UnityAssertFloatSpecial@@Base+0x160>
   171a4:	mov	r1, #0
   171a8:	b	1703c <UnityAssertFloatSpecial@@Base+0xf8>
   171ac:	ldrd	r2, [r4, #96]	; 0x60
   171b0:	mov	r0, lr
   171b4:	adds	r2, r2, #1
   171b8:	adc	r3, r3, #0
   171bc:	strd	r2, [r4, #96]	; 0x60
   171c0:	bl	152cc <UnityPrintNumber@@Base+0x314>
   171c4:	ldrd	r2, [r4, #104]	; 0x68
   171c8:	ldr	r0, [pc, #328]	; 17318 <UnityAssertFloatSpecial@@Base+0x3d4>
   171cc:	adds	r2, r2, #1
   171d0:	adc	r3, r3, #0
   171d4:	strd	r2, [r4, #104]	; 0x68
   171d8:	bl	14b30 <UnityPrint@@Base>
   171dc:	ldrd	r2, [r4, #112]	; 0x70
   171e0:	adds	r2, r2, #1
   171e4:	adc	r3, r3, #0
   171e8:	cmp	r8, #0
   171ec:	strd	r2, [r4, #112]	; 0x70
   171f0:	beq	1729c <UnityAssertFloatSpecial@@Base+0x358>
   171f4:	add	r3, sp, #16
   171f8:	add	r7, r3, r7, lsl #2
   171fc:	ldr	r6, [r7, #-16]
   17200:	mov	r0, r6
   17204:	bl	14b30 <UnityPrint@@Base>
   17208:	ldrd	r2, [r4, #136]	; 0x88
   1720c:	ldr	r0, [pc, #264]	; 1731c <UnityAssertFloatSpecial@@Base+0x3d8>
   17210:	adds	r2, r2, #1
   17214:	adc	r3, r3, #0
   17218:	strd	r2, [r4, #136]	; 0x88
   1721c:	bl	14b30 <UnityPrint@@Base>
   17220:	ldrd	r2, [r4, #144]	; 0x90
   17224:	ldrd	sl, [r4, #152]	; 0x98
   17228:	ldr	r0, [pc, #240]	; 17320 <UnityAssertFloatSpecial@@Base+0x3dc>
   1722c:	adds	r2, r2, #1
   17230:	adc	r3, r3, #0
   17234:	adds	sl, sl, #1
   17238:	adc	fp, fp, #0
   1723c:	strd	r2, [r4, #144]	; 0x90
   17240:	strd	sl, [r4, #152]	; 0x98
   17244:	bl	14b30 <UnityPrint@@Base>
   17248:	ldrd	r2, [r4, #160]	; 0xa0
   1724c:	adds	r2, r2, #1
   17250:	adc	r3, r3, #0
   17254:	strd	r2, [r4, #160]	; 0xa0
   17258:	mov	r0, r6
   1725c:	bl	14b30 <UnityPrint@@Base>
   17260:	ldrd	r2, [r4, #168]	; 0xa8
   17264:	mov	r0, r9
   17268:	adds	r2, r2, #1
   1726c:	adc	r3, r3, #0
   17270:	strd	r2, [r4, #168]	; 0xa8
   17274:	bl	14cc0 <UnityPrint@@Base+0x190>
   17278:	ldrd	r2, [r4, #176]	; 0xb0
   1727c:	mov	ip, #1
   17280:	mov	r1, ip
   17284:	adds	r2, r2, #1
   17288:	adc	r3, r3, #0
   1728c:	ldr	r0, [pc, #144]	; 17324 <UnityAssertFloatSpecial@@Base+0x3e0>
   17290:	strd	r2, [r4, #176]	; 0xb0
   17294:	str	ip, [r5, #32]
   17298:	bl	11ff0 <longjmp@plt>
   1729c:	ldrd	r2, [r4, #120]	; 0x78
   172a0:	ldr	r0, [pc, #120]	; 17320 <UnityAssertFloatSpecial@@Base+0x3dc>
   172a4:	adds	r2, r2, #1
   172a8:	adc	r3, r3, #0
   172ac:	strd	r2, [r4, #120]	; 0x78
   172b0:	bl	14b30 <UnityPrint@@Base>
   172b4:	add	r3, sp, #16
   172b8:	add	r7, r3, r7, lsl #2
   172bc:	ldrd	r2, [r4, #128]	; 0x80
   172c0:	ldr	r6, [r7, #-16]
   172c4:	adds	r2, r2, #1
   172c8:	adc	r3, r3, #0
   172cc:	mov	r0, r6
   172d0:	strd	r2, [r4, #128]	; 0x80
   172d4:	bl	14b30 <UnityPrint@@Base>
   172d8:	ldrd	r2, [r4, #136]	; 0x88
   172dc:	ldr	r0, [pc, #56]	; 1731c <UnityAssertFloatSpecial@@Base+0x3d8>
   172e0:	adds	r2, r2, #1
   172e4:	adc	r3, r3, #0
   172e8:	strd	r2, [r4, #136]	; 0x88
   172ec:	bl	14b30 <UnityPrint@@Base>
   172f0:	ldrd	r2, [r4, #144]	; 0x90
   172f4:	adds	r2, r2, #1
   172f8:	adc	r3, r3, #0
   172fc:	strd	r2, [r4, #144]	; 0x90
   17300:	b	17258 <UnityAssertFloatSpecial@@Base+0x314>
   17304:	svcvc	0x007fffff
   17308:	andeq	sp, r1, r4, ror #6
   1730c:	andeq	r0, r3, r0, ror #8
   17310:	andeq	pc, r2, r0, ror #22
   17314:	andeq	sp, r1, r4, ror r3
   17318:	andeq	sp, r1, r0, ror #4
   1731c:	andeq	sp, r1, r4, ror r2
   17320:	andeq	sp, r1, r8, lsl #7
   17324:	andeq	r0, r3, r8, lsl #9

00017328 <UnityAssertNumbersWithin@@Base>:
   17328:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1732c:	ldr	r4, [pc, #504]	; 1752c <UnityAssertNumbersWithin@@Base+0x204>
   17330:	ldr	r5, [pc, #504]	; 17530 <UnityAssertNumbersWithin@@Base+0x208>
   17334:	ldrd	r6, [r4, #-8]
   17338:	ldr	ip, [r5, #32]
   1733c:	adds	r6, r6, #1
   17340:	adc	r7, r7, #0
   17344:	cmp	ip, #0
   17348:	strd	r6, [r4, #-8]
   1734c:	popne	{r4, r5, r6, r7, r8, r9, sl, pc}
   17350:	ldrd	r6, [r4]
   17354:	ldr	ip, [r5, #36]	; 0x24
   17358:	adds	r6, r6, #1
   1735c:	adc	r7, r7, #0
   17360:	cmp	ip, #0
   17364:	strd	r6, [r4]
   17368:	popne	{r4, r5, r6, r7, r8, r9, sl, pc}
   1736c:	ldr	ip, [sp, #36]	; 0x24
   17370:	tst	ip, #16
   17374:	bne	174ac <UnityAssertNumbersWithin@@Base+0x184>
   17378:	cmp	r2, r1
   1737c:	bls	174dc <UnityAssertNumbersWithin@@Base+0x1b4>
   17380:	ldrd	r6, [r4, #24]
   17384:	sub	ip, r2, r1
   17388:	cmp	r0, ip
   1738c:	movcs	ip, #0
   17390:	movcc	ip, #1
   17394:	adds	r6, r6, #1
   17398:	adc	r7, r7, #0
   1739c:	str	ip, [r5, #32]
   173a0:	strd	r6, [r4, #24]
   173a4:	cmp	ip, #0
   173a8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   173ac:	mov	r9, r3
   173b0:	mov	r7, r2
   173b4:	ldrd	r2, [r4, #40]	; 0x28
   173b8:	mov	r8, r0
   173bc:	ldr	r0, [sp, #32]
   173c0:	adds	r2, r2, #1
   173c4:	adc	r3, r3, #0
   173c8:	mov	r6, r1
   173cc:	strd	r2, [r4, #40]	; 0x28
   173d0:	bl	152cc <UnityPrintNumber@@Base+0x314>
   173d4:	ldrd	r2, [r4, #48]	; 0x30
   173d8:	ldr	r0, [pc, #340]	; 17534 <UnityAssertNumbersWithin@@Base+0x20c>
   173dc:	adds	r2, r2, #1
   173e0:	adc	r3, r3, #0
   173e4:	strd	r2, [r4, #48]	; 0x30
   173e8:	bl	14b30 <UnityPrint@@Base>
   173ec:	ldrd	r2, [r4, #56]	; 0x38
   173f0:	ldr	r1, [sp, #36]	; 0x24
   173f4:	mov	r0, r8
   173f8:	adds	r2, r2, #1
   173fc:	adc	r3, r3, #0
   17400:	strd	r2, [r4, #56]	; 0x38
   17404:	bl	157d8 <UnityPrintNumberByStyle@@Base>
   17408:	ldrd	r2, [r4, #64]	; 0x40
   1740c:	ldr	r0, [pc, #292]	; 17538 <UnityAssertNumbersWithin@@Base+0x210>
   17410:	adds	r2, r2, #1
   17414:	adc	r3, r3, #0
   17418:	strd	r2, [r4, #64]	; 0x40
   1741c:	bl	14b30 <UnityPrint@@Base>
   17420:	ldrd	r2, [r4, #72]	; 0x48
   17424:	ldr	r1, [sp, #36]	; 0x24
   17428:	mov	r0, r6
   1742c:	adds	r2, r2, #1
   17430:	adc	r3, r3, #0
   17434:	strd	r2, [r4, #72]	; 0x48
   17438:	bl	157d8 <UnityPrintNumberByStyle@@Base>
   1743c:	ldrd	r2, [r4, #80]	; 0x50
   17440:	ldr	r0, [pc, #244]	; 1753c <UnityAssertNumbersWithin@@Base+0x214>
   17444:	adds	r2, r2, #1
   17448:	adc	r3, r3, #0
   1744c:	strd	r2, [r4, #80]	; 0x50
   17450:	bl	14b30 <UnityPrint@@Base>
   17454:	ldrd	r2, [r4, #88]	; 0x58
   17458:	ldr	r1, [sp, #36]	; 0x24
   1745c:	mov	r0, r7
   17460:	adds	r2, r2, #1
   17464:	adc	r3, r3, #0
   17468:	strd	r2, [r4, #88]	; 0x58
   1746c:	bl	157d8 <UnityPrintNumberByStyle@@Base>
   17470:	ldrd	r2, [r4, #96]	; 0x60
   17474:	mov	r0, r9
   17478:	adds	r2, r2, #1
   1747c:	adc	r3, r3, #0
   17480:	strd	r2, [r4, #96]	; 0x60
   17484:	bl	14cc0 <UnityPrint@@Base+0x190>
   17488:	ldrd	r2, [r4, #104]	; 0x68
   1748c:	mov	ip, #1
   17490:	mov	r1, ip
   17494:	adds	r2, r2, #1
   17498:	adc	r3, r3, #0
   1749c:	ldr	r0, [pc, #156]	; 17540 <UnityAssertNumbersWithin@@Base+0x218>
   174a0:	strd	r2, [r4, #104]	; 0x68
   174a4:	str	ip, [r5, #32]
   174a8:	bl	11ff0 <longjmp@plt>
   174ac:	cmp	r2, r1
   174b0:	ble	17504 <UnityAssertNumbersWithin@@Base+0x1dc>
   174b4:	ldrd	r6, [r4, #8]
   174b8:	sub	ip, r2, r1
   174bc:	cmp	r0, ip
   174c0:	movcs	ip, #0
   174c4:	movcc	ip, #1
   174c8:	adds	r6, r6, #1
   174cc:	adc	r7, r7, #0
   174d0:	str	ip, [r5, #32]
   174d4:	strd	r6, [r4, #8]
   174d8:	b	173a4 <UnityAssertNumbersWithin@@Base+0x7c>
   174dc:	ldrd	r6, [r4, #32]
   174e0:	sub	ip, r1, r2
   174e4:	cmp	r0, ip
   174e8:	movcs	ip, #0
   174ec:	movcc	ip, #1
   174f0:	adds	r6, r6, #1
   174f4:	adc	r7, r7, #0
   174f8:	str	ip, [r5, #32]
   174fc:	strd	r6, [r4, #32]
   17500:	b	173a4 <UnityAssertNumbersWithin@@Base+0x7c>
   17504:	ldrd	r6, [r4, #16]
   17508:	sub	ip, r1, r2
   1750c:	cmp	ip, r0
   17510:	movls	ip, #0
   17514:	movhi	ip, #1
   17518:	adds	r6, r6, #1
   1751c:	adc	r7, r7, #0
   17520:	str	ip, [r5, #32]
   17524:	strd	r6, [r4, #16]
   17528:	b	173a4 <UnityAssertNumbersWithin@@Base+0x7c>
   1752c:	andeq	pc, r2, r0, lsr ip	; <UNPREDICTABLE>
   17530:	andeq	r0, r3, r0, ror #8
   17534:	andeq	sp, r1, r8, asr #6
   17538:	andeq	sp, r1, r0, ror #4
   1753c:	andeq	sp, r1, r4, ror r2
   17540:	andeq	r0, r3, r8, lsl #9

00017544 <UnityAssertEqualString@@Base>:
   17544:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17548:	sub	sp, sp, #20
   1754c:	ldr	r4, [pc, #448]	; 17714 <UnityAssertEqualString@@Base+0x1d0>
   17550:	ldr	r5, [pc, #448]	; 17718 <UnityAssertEqualString@@Base+0x1d4>
   17554:	str	r0, [sp, #4]
   17558:	ldrd	r6, [r4]
   1755c:	ldr	ip, [r5, #32]
   17560:	str	r2, [sp, #8]
   17564:	adds	r6, r6, #1
   17568:	adc	r7, r7, #0
   1756c:	cmp	ip, #0
   17570:	str	r3, [sp, #12]
   17574:	strd	r6, [r4]
   17578:	bne	17624 <UnityAssertEqualString@@Base+0xe0>
   1757c:	ldrd	r2, [r4, #8]
   17580:	ldr	r6, [r5, #36]	; 0x24
   17584:	adds	r2, r2, #1
   17588:	adc	r3, r3, #0
   1758c:	cmp	r6, #0
   17590:	strd	r2, [r4, #8]
   17594:	bne	17624 <UnityAssertEqualString@@Base+0xe0>
   17598:	cmp	r0, #0
   1759c:	cmpne	r1, #0
   175a0:	movne	r8, #1
   175a4:	moveq	r8, #0
   175a8:	beq	1762c <UnityAssertEqualString@@Base+0xe8>
   175ac:	ldrd	r2, [r4, #24]
   175b0:	ldrd	sl, [r4, #40]	; 0x28
   175b4:	mov	lr, r6
   175b8:	adds	r2, r2, #1
   175bc:	adc	r3, r3, #0
   175c0:	sub	r7, r1, #1
   175c4:	strd	r2, [r4, #24]
   175c8:	sub	r2, r0, #1
   175cc:	ldrb	r3, [r2, #1]!
   175d0:	mov	ip, sl
   175d4:	mov	r9, fp
   175d8:	cmp	r3, #0
   175dc:	bne	176dc <UnityAssertEqualString@@Base+0x198>
   175e0:	cmp	r6, #0
   175e4:	bne	176fc <UnityAssertEqualString@@Base+0x1b8>
   175e8:	ldrd	r2, [r4, #48]	; 0x30
   175ec:	ldrb	lr, [r1, lr]
   175f0:	adds	r2, r2, #1
   175f4:	adc	r3, r3, #0
   175f8:	cmp	lr, #0
   175fc:	strd	r2, [r4, #48]	; 0x30
   17600:	beq	17624 <UnityAssertEqualString@@Base+0xe0>
   17604:	ldrd	r2, [r4, #32]
   17608:	mov	lr, #1
   1760c:	str	lr, [r5, #32]
   17610:	adds	r2, r2, #1
   17614:	adc	r3, r3, #0
   17618:	ldr	r9, [sp, #4]
   1761c:	strd	r2, [r4, #32]
   17620:	b	17660 <UnityAssertEqualString@@Base+0x11c>
   17624:	add	sp, sp, #20
   17628:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1762c:	ldrd	r2, [r4, #16]
   17630:	adds	r2, r2, #1
   17634:	adc	r3, r3, #0
   17638:	cmp	r0, r1
   1763c:	strd	r2, [r4, #16]
   17640:	beq	17624 <UnityAssertEqualString@@Base+0xe0>
   17644:	ldrd	r2, [r4, #56]	; 0x38
   17648:	mov	r9, r0
   1764c:	mov	lr, #1
   17650:	adds	r2, r2, #1
   17654:	adc	r3, r3, #0
   17658:	str	lr, [r5, #32]
   1765c:	strd	r2, [r4, #56]	; 0x38
   17660:	ldrd	r6, [r4, #64]	; 0x40
   17664:	ldr	ip, [sp, #12]
   17668:	ldr	r8, [sp, #8]
   1766c:	adds	r6, r6, #1
   17670:	adc	r7, r7, #0
   17674:	mov	r0, ip
   17678:	mov	sl, r1
   1767c:	strd	r6, [r4, #64]	; 0x40
   17680:	bl	152cc <UnityPrintNumber@@Base+0x314>
   17684:	ldrd	r6, [r4, #72]	; 0x48
   17688:	mov	r1, sl
   1768c:	mov	r0, r9
   17690:	adds	r6, r6, #1
   17694:	adc	r7, r7, #0
   17698:	strd	r6, [r4, #72]	; 0x48
   1769c:	bl	12170 <close@plt+0xc>
   176a0:	ldrd	r6, [r4, #80]	; 0x50
   176a4:	mov	r0, r8
   176a8:	adds	r6, r6, #1
   176ac:	adc	r7, r7, #0
   176b0:	strd	r6, [r4, #80]	; 0x50
   176b4:	bl	14cc0 <UnityPrint@@Base+0x190>
   176b8:	ldrd	r2, [r4, #88]	; 0x58
   176bc:	mov	ip, #1
   176c0:	mov	r1, ip
   176c4:	adds	r2, r2, #1
   176c8:	adc	r3, r3, #0
   176cc:	ldr	r0, [pc, #72]	; 1771c <UnityAssertEqualString@@Base+0x1d8>
   176d0:	strd	r2, [r4, #88]	; 0x58
   176d4:	str	ip, [r5, #32]
   176d8:	bl	11ff0 <longjmp@plt>
   176dc:	ldrb	r0, [r7, #1]!
   176e0:	adds	sl, sl, #1
   176e4:	adc	fp, fp, #0
   176e8:	cmp	r0, r3
   176ec:	bne	17704 <UnityAssertEqualString@@Base+0x1c0>
   176f0:	add	lr, lr, #1
   176f4:	mov	r6, r8
   176f8:	b	175cc <UnityAssertEqualString@@Base+0x88>
   176fc:	strd	sl, [r4, #40]	; 0x28
   17700:	b	175e8 <UnityAssertEqualString@@Base+0xa4>
   17704:	cmp	r6, #0
   17708:	strne	ip, [r4, #40]	; 0x28
   1770c:	strne	r9, [r4, #44]	; 0x2c
   17710:	b	17604 <UnityAssertEqualString@@Base+0xc0>
   17714:	andeq	pc, r2, r0, lsr #25
   17718:	andeq	r0, r3, r0, ror #8
   1771c:	andeq	r0, r3, r8, lsl #9

00017720 <UnityAssertEqualStringLen@@Base>:
   17720:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17724:	sub	sp, sp, #52	; 0x34
   17728:	ldr	r4, [pc, #1088]	; 17b70 <UnityAssertEqualStringLen@@Base+0x450>
   1772c:	ldr	r6, [pc, #1088]	; 17b74 <UnityAssertEqualStringLen@@Base+0x454>
   17730:	ldrd	r8, [r4]
   17734:	ldr	ip, [r6, #32]
   17738:	adds	r8, r8, #1
   1773c:	adc	r9, r9, #0
   17740:	cmp	ip, #0
   17744:	strd	r8, [r4]
   17748:	bne	1786c <UnityAssertEqualStringLen@@Base+0x14c>
   1774c:	ldrd	r8, [r4, #8]
   17750:	ldr	r5, [r6, #36]	; 0x24
   17754:	adds	r8, r8, #1
   17758:	adc	r9, r9, #0
   1775c:	cmp	r5, #0
   17760:	strd	r8, [r4, #8]
   17764:	bne	1786c <UnityAssertEqualStringLen@@Base+0x14c>
   17768:	mov	r7, r1
   1776c:	cmp	r0, #0
   17770:	cmpne	r7, #0
   17774:	str	r3, [sp, #44]	; 0x2c
   17778:	mov	lr, r2
   1777c:	str	r2, [sp, #40]	; 0x28
   17780:	str	r0, [sp, #36]	; 0x24
   17784:	movne	sl, #1
   17788:	moveq	sl, #0
   1778c:	beq	17874 <UnityAssertEqualStringLen@@Base+0x154>
   17790:	ldrd	r2, [r4, #24]
   17794:	ldrd	r8, [r4, #40]	; 0x28
   17798:	add	fp, r7, lr
   1779c:	adds	r2, r2, #1
   177a0:	adc	r3, r3, #0
   177a4:	strd	r8, [sp]
   177a8:	strd	r2, [r4, #24]
   177ac:	str	fp, [sp, #12]
   177b0:	ldrd	r8, [r4, #48]	; 0x30
   177b4:	ldrd	r2, [r4, #32]
   177b8:	sub	ip, r0, #1
   177bc:	mov	r1, r7
   177c0:	mov	fp, r5
   177c4:	str	r7, [sp, #32]
   177c8:	b	177f8 <UnityAssertEqualStringLen@@Base+0xd8>
   177cc:	ldr	lr, [sp, #12]
   177d0:	cmp	r1, lr
   177d4:	beq	17aec <UnityAssertEqualStringLen@@Base+0x3cc>
   177d8:	ldrb	lr, [r1], #1
   177dc:	adds	r8, r8, #1
   177e0:	adc	r9, r9, #0
   177e4:	adds	r2, r2, #1
   177e8:	adc	r3, r3, #0
   177ec:	cmp	r0, lr
   177f0:	bne	17a98 <UnityAssertEqualStringLen@@Base+0x378>
   177f4:	mov	fp, sl
   177f8:	ldrb	r0, [ip, #1]!
   177fc:	mov	r7, r2
   17800:	mov	r5, r3
   17804:	cmp	r0, #0
   17808:	bne	177cc <UnityAssertEqualStringLen@@Base+0xac>
   1780c:	strd	r8, [sp, #16]
   17810:	strd	r2, [sp, #24]
   17814:	mov	r8, r2
   17818:	mov	r9, r3
   1781c:	ldrd	r2, [sp]
   17820:	ldrb	r0, [r1]
   17824:	mov	r5, fp
   17828:	adds	r2, r2, #1
   1782c:	adc	r3, r3, #0
   17830:	cmp	r0, #0
   17834:	ldr	fp, [sp, #12]
   17838:	ldr	r7, [sp, #32]
   1783c:	strd	r2, [sp]
   17840:	beq	17a88 <UnityAssertEqualStringLen@@Base+0x368>
   17844:	cmp	r1, fp
   17848:	bne	17a10 <UnityAssertEqualStringLen@@Base+0x2f0>
   1784c:	cmp	r5, #0
   17850:	bne	17b5c <UnityAssertEqualStringLen@@Base+0x43c>
   17854:	cmp	sl, #0
   17858:	bne	17b50 <UnityAssertEqualStringLen@@Base+0x430>
   1785c:	ldrd	r2, [r4, #56]	; 0x38
   17860:	adds	r2, r2, #1
   17864:	adc	r3, r3, #0
   17868:	strd	r2, [r4, #56]	; 0x38
   1786c:	add	sp, sp, #52	; 0x34
   17870:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17874:	ldrd	r2, [r4, #16]
   17878:	mov	r8, r0
   1787c:	adds	r2, r2, #1
   17880:	adc	r3, r3, #0
   17884:	cmp	r0, r7
   17888:	strd	r2, [r4, #16]
   1788c:	beq	1786c <UnityAssertEqualStringLen@@Base+0x14c>
   17890:	ldrd	r0, [r4, #64]	; 0x40
   17894:	ldrd	r2, [r4, #72]	; 0x48
   17898:	add	r5, r4, #112	; 0x70
   1789c:	adds	r0, r0, #1
   178a0:	adc	r1, r1, #0
   178a4:	adds	r2, r2, #1
   178a8:	adc	r3, r3, #0
   178ac:	strd	r0, [r4, #64]	; 0x40
   178b0:	mov	r1, #1
   178b4:	ldr	r0, [sp, #88]	; 0x58
   178b8:	strd	r2, [r4, #72]	; 0x48
   178bc:	str	r1, [r6, #32]
   178c0:	bl	152cc <UnityPrintNumber@@Base+0x314>
   178c4:	ldrd	r0, [r5, #-8]
   178c8:	ldrd	r2, [r4, #80]	; 0x50
   178cc:	adds	r0, r0, #1
   178d0:	adc	r1, r1, #0
   178d4:	adds	r2, r2, #1
   178d8:	adc	r3, r3, #0
   178dc:	strd	r0, [r5, #-8]
   178e0:	ldr	r0, [pc, #656]	; 17b78 <UnityAssertEqualStringLen@@Base+0x458>
   178e4:	strd	r2, [r4, #80]	; 0x50
   178e8:	bl	14b30 <UnityPrint@@Base>
   178ec:	cmp	r8, #0
   178f0:	beq	17b18 <UnityAssertEqualStringLen@@Base+0x3f8>
   178f4:	ldrd	r2, [r5]
   178f8:	ldr	r8, [pc, #636]	; 17b7c <UnityAssertEqualStringLen@@Base+0x45c>
   178fc:	mov	r0, #39	; 0x27
   17900:	adds	r2, r2, #1
   17904:	adc	r3, r3, #0
   17908:	ldr	r1, [r8]
   1790c:	strd	r2, [r5]
   17910:	bl	12134 <putc@plt>
   17914:	ldrd	r2, [r5, #16]
   17918:	ldr	r0, [sp, #36]	; 0x24
   1791c:	ldr	r1, [sp, #40]	; 0x28
   17920:	adds	r2, r2, #1
   17924:	adc	r3, r3, #0
   17928:	strd	r2, [r5, #16]
   1792c:	bl	14dec <UnityPrintLen@@Base>
   17930:	ldrd	r2, [r5, #24]
   17934:	ldr	r1, [r8]
   17938:	mov	r0, #39	; 0x27
   1793c:	adds	r2, r2, #1
   17940:	adc	r3, r3, #0
   17944:	strd	r2, [r5, #24]
   17948:	bl	12134 <putc@plt>
   1794c:	ldrd	r2, [r5, #32]
   17950:	adds	r2, r2, #1
   17954:	adc	r3, r3, #0
   17958:	strd	r2, [r5, #32]
   1795c:	ldr	r0, [pc, #540]	; 17b80 <UnityAssertEqualStringLen@@Base+0x460>
   17960:	bl	14b30 <UnityPrint@@Base>
   17964:	cmp	r7, #0
   17968:	beq	17ac0 <UnityAssertEqualStringLen@@Base+0x3a0>
   1796c:	ldrd	r2, [r5, #48]	; 0x30
   17970:	ldr	r8, [pc, #516]	; 17b7c <UnityAssertEqualStringLen@@Base+0x45c>
   17974:	mov	r0, #39	; 0x27
   17978:	adds	r2, r2, #1
   1797c:	adc	r3, r3, #0
   17980:	ldr	r1, [r8]
   17984:	strd	r2, [r5, #48]	; 0x30
   17988:	bl	12134 <putc@plt>
   1798c:	ldrd	r2, [r5, #64]	; 0x40
   17990:	ldr	r1, [sp, #40]	; 0x28
   17994:	mov	r0, r7
   17998:	adds	r2, r2, #1
   1799c:	adc	r3, r3, #0
   179a0:	strd	r2, [r5, #64]	; 0x40
   179a4:	bl	14dec <UnityPrintLen@@Base>
   179a8:	ldrd	r2, [r5, #72]	; 0x48
   179ac:	ldr	r1, [r8]
   179b0:	mov	r0, #39	; 0x27
   179b4:	adds	r2, r2, #1
   179b8:	adc	r3, r3, #0
   179bc:	strd	r2, [r5, #72]	; 0x48
   179c0:	bl	12134 <putc@plt>
   179c4:	ldrd	r2, [r5, #80]	; 0x50
   179c8:	adds	r2, r2, #1
   179cc:	adc	r3, r3, #0
   179d0:	strd	r2, [r5, #80]	; 0x50
   179d4:	ldrd	r2, [r4, #88]	; 0x58
   179d8:	ldr	r0, [sp, #44]	; 0x2c
   179dc:	adds	r2, r2, #1
   179e0:	adc	r3, r3, #0
   179e4:	strd	r2, [r4, #88]	; 0x58
   179e8:	bl	14cc0 <UnityPrint@@Base+0x190>
   179ec:	ldrd	r2, [r4, #96]	; 0x60
   179f0:	mov	ip, #1
   179f4:	mov	r1, ip
   179f8:	adds	r2, r2, #1
   179fc:	adc	r3, r3, #0
   17a00:	ldr	r0, [pc, #380]	; 17b84 <UnityAssertEqualStringLen@@Base+0x464>
   17a04:	strd	r2, [r4, #96]	; 0x60
   17a08:	str	ip, [r6, #32]
   17a0c:	bl	11ff0 <longjmp@plt>
   17a10:	ldrd	r2, [sp, #16]
   17a14:	adds	r2, r2, #1
   17a18:	adc	r3, r3, #0
   17a1c:	cmp	r5, #0
   17a20:	strd	r2, [r4, #48]	; 0x30
   17a24:	beq	17b44 <UnityAssertEqualStringLen@@Base+0x424>
   17a28:	cmp	r5, #0
   17a2c:	str	r8, [r4, #32]
   17a30:	str	r9, [r4, #36]	; 0x24
   17a34:	bne	17b44 <UnityAssertEqualStringLen@@Base+0x424>
   17a38:	ldrd	r2, [r4, #72]	; 0x48
   17a3c:	ldr	r5, [pc, #324]	; 17b88 <UnityAssertEqualStringLen@@Base+0x468>
   17a40:	mov	r1, #1
   17a44:	adds	r2, r2, #1
   17a48:	adc	r3, r3, #0
   17a4c:	ldr	r0, [sp, #88]	; 0x58
   17a50:	str	r1, [r6, #32]
   17a54:	strd	r2, [r4, #72]	; 0x48
   17a58:	bl	152cc <UnityPrintNumber@@Base+0x314>
   17a5c:	ldrd	r0, [r5, #-8]
   17a60:	ldrd	r2, [r4, #80]	; 0x50
   17a64:	adds	r0, r0, #1
   17a68:	adc	r1, r1, #0
   17a6c:	adds	r2, r2, #1
   17a70:	adc	r3, r3, #0
   17a74:	strd	r0, [r5, #-8]
   17a78:	ldr	r0, [pc, #248]	; 17b78 <UnityAssertEqualStringLen@@Base+0x458>
   17a7c:	strd	r2, [r4, #80]	; 0x50
   17a80:	bl	14b30 <UnityPrint@@Base>
   17a84:	b	178f4 <UnityAssertEqualStringLen@@Base+0x1d4>
   17a88:	cmp	r5, #0
   17a8c:	bne	17b00 <UnityAssertEqualStringLen@@Base+0x3e0>
   17a90:	strd	r2, [r4, #40]	; 0x28
   17a94:	b	1786c <UnityAssertEqualStringLen@@Base+0x14c>
   17a98:	mov	r2, r8
   17a9c:	mov	r3, r9
   17aa0:	cmp	fp, #0
   17aa4:	mov	r8, r7
   17aa8:	mov	r9, r5
   17aac:	ldr	r7, [sp, #32]
   17ab0:	strd	r2, [r4, #48]	; 0x30
   17ab4:	beq	17a38 <UnityAssertEqualStringLen@@Base+0x318>
   17ab8:	mov	r5, #0
   17abc:	b	17a28 <UnityAssertEqualStringLen@@Base+0x308>
   17ac0:	ldrd	r2, [r5, #56]	; 0x38
   17ac4:	ldr	r0, [pc, #192]	; 17b8c <UnityAssertEqualStringLen@@Base+0x46c>
   17ac8:	adds	r2, r2, #1
   17acc:	adc	r3, r3, #0
   17ad0:	strd	r2, [r5, #56]	; 0x38
   17ad4:	bl	14b30 <UnityPrint@@Base>
   17ad8:	ldrd	r2, [r5, #88]	; 0x58
   17adc:	adds	r2, r2, #1
   17ae0:	adc	r3, r3, #0
   17ae4:	strd	r2, [r5, #88]	; 0x58
   17ae8:	b	179d4 <UnityAssertEqualStringLen@@Base+0x2b4>
   17aec:	strd	r8, [sp, #16]
   17af0:	strd	r2, [sp, #24]
   17af4:	mov	r5, fp
   17af8:	mov	sl, #0
   17afc:	b	1784c <UnityAssertEqualStringLen@@Base+0x12c>
   17b00:	ldrd	r2, [sp, #16]
   17b04:	strd	r2, [r4, #48]	; 0x30
   17b08:	ldrd	r2, [sp, #24]
   17b0c:	strd	r2, [r4, #32]
   17b10:	ldrd	r2, [sp]
   17b14:	b	17a90 <UnityAssertEqualStringLen@@Base+0x370>
   17b18:	ldrd	r2, [r5, #8]
   17b1c:	ldr	r0, [pc, #104]	; 17b8c <UnityAssertEqualStringLen@@Base+0x46c>
   17b20:	adds	r2, r2, #1
   17b24:	adc	r3, r3, #0
   17b28:	strd	r2, [r5, #8]
   17b2c:	bl	14b30 <UnityPrint@@Base>
   17b30:	ldrd	r2, [r5, #40]	; 0x28
   17b34:	adds	r2, r2, #1
   17b38:	adc	r3, r3, #0
   17b3c:	strd	r2, [r5, #40]	; 0x28
   17b40:	b	1795c <UnityAssertEqualStringLen@@Base+0x23c>
   17b44:	ldrd	r2, [sp]
   17b48:	strd	r2, [r4, #40]	; 0x28
   17b4c:	b	17a38 <UnityAssertEqualStringLen@@Base+0x318>
   17b50:	ldrd	r2, [sp]
   17b54:	strd	r2, [r4, #40]	; 0x28
   17b58:	b	1785c <UnityAssertEqualStringLen@@Base+0x13c>
   17b5c:	ldrd	r2, [sp, #16]
   17b60:	strd	r2, [r4, #48]	; 0x30
   17b64:	ldrd	r2, [sp, #24]
   17b68:	strd	r2, [r4, #32]
   17b6c:	b	17854 <UnityAssertEqualStringLen@@Base+0x134>
   17b70:	andeq	pc, r2, r0, lsl #26
   17b74:	andeq	r0, r3, r0, ror #8
   17b78:	andeq	sp, r1, r0, ror #4
   17b7c:	andeq	lr, r2, r4, asr #24
   17b80:	andeq	sp, r1, r4, ror r2
   17b84:	andeq	r0, r3, r8, lsl #9
   17b88:	andeq	pc, r2, r0, ror sp	; <UNPREDICTABLE>
   17b8c:	andeq	sp, r1, ip, ror #4

00017b90 <UnityAssertEqualStringArray@@Base>:
   17b90:	ldr	ip, [pc, #1400]	; 18110 <UnityAssertEqualStringArray@@Base+0x580>
   17b94:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17b98:	add	r4, ip, #2256	; 0x8d0
   17b9c:	ldr	r5, [pc, #1392]	; 18114 <UnityAssertEqualStringArray@@Base+0x584>
   17ba0:	ldrd	r6, [r4]
   17ba4:	sub	sp, sp, #92	; 0x5c
   17ba8:	ldr	ip, [r5, #32]
   17bac:	adds	r6, r6, #1
   17bb0:	adc	r7, r7, #0
   17bb4:	cmp	ip, #0
   17bb8:	strd	r6, [r4]
   17bbc:	bne	17ea0 <UnityAssertEqualStringArray@@Base+0x310>
   17bc0:	ldrd	r6, [r4, #8]
   17bc4:	ldr	r8, [r5, #36]	; 0x24
   17bc8:	adds	r6, r6, #1
   17bcc:	adc	r7, r7, #0
   17bd0:	cmp	r8, #0
   17bd4:	strd	r6, [r4, #8]
   17bd8:	bne	17ea0 <UnityAssertEqualStringArray@@Base+0x310>
   17bdc:	cmp	r2, #0
   17be0:	str	r3, [sp, #84]	; 0x54
   17be4:	str	r2, [sp, #80]	; 0x50
   17be8:	beq	17fc0 <UnityAssertEqualStringArray@@Base+0x430>
   17bec:	ldrd	r6, [r4, #24]
   17bf0:	ldr	r2, [sp, #128]	; 0x80
   17bf4:	mov	fp, r0
   17bf8:	adds	r6, r6, #1
   17bfc:	adc	r7, r7, #0
   17c00:	mov	r9, r1
   17c04:	strd	r6, [r4, #24]
   17c08:	bl	15350 <UnityPrintNumber@@Base+0x398>
   17c0c:	ldrd	r2, [r4, #56]	; 0x38
   17c10:	adds	r2, r2, #1
   17c14:	adc	r3, r3, #0
   17c18:	strd	r2, [r4, #56]	; 0x38
   17c1c:	cmp	r0, #1
   17c20:	beq	17ea0 <UnityAssertEqualStringArray@@Base+0x310>
   17c24:	ldr	r3, [pc, #1252]	; 18110 <UnityAssertEqualStringArray@@Base+0x580>
   17c28:	mov	lr, r8
   17c2c:	str	r8, [sp, #56]	; 0x38
   17c30:	ldr	r1, [r3, #2376]	; 0x948
   17c34:	ldrd	r2, [r4, #176]	; 0xb0
   17c38:	str	r1, [sp, #60]	; 0x3c
   17c3c:	str	r1, [sp, #8]
   17c40:	ldrd	r0, [r4, #64]	; 0x40
   17c44:	strd	r2, [sp, #16]
   17c48:	ldr	r3, [pc, #1216]	; 18110 <UnityAssertEqualStringArray@@Base+0x580>
   17c4c:	strd	r0, [sp, #24]
   17c50:	ldrd	r0, [r4, #72]	; 0x48
   17c54:	ldr	r3, [r3, #2380]	; 0x94c
   17c58:	str	fp, [sp, #40]	; 0x28
   17c5c:	strd	r0, [sp, #32]
   17c60:	ldrd	r0, [r4, #96]	; 0x60
   17c64:	str	r3, [sp, #12]
   17c68:	mov	fp, r9
   17c6c:	ldr	r3, [sp, #80]	; 0x50
   17c70:	str	r8, [sp, #72]	; 0x48
   17c74:	mov	ip, r8
   17c78:	ldrd	r8, [sp, #16]
   17c7c:	strd	r0, [sp]
   17c80:	ldr	r1, [r5, #32]
   17c84:	sub	r3, r3, #1
   17c88:	adds	r8, r8, r3
   17c8c:	str	r1, [sp, #76]	; 0x4c
   17c90:	ldr	r1, [pc, #1144]	; 18110 <UnityAssertEqualStringArray@@Base+0x580>
   17c94:	adc	r9, r9, #0
   17c98:	strd	r8, [sp, #48]	; 0x30
   17c9c:	ldr	r7, [r1, #2344]	; 0x928
   17ca0:	mov	r8, #1
   17ca4:	ldr	r1, [r1, #2348]	; 0x92c
   17ca8:	mov	r9, lr
   17cac:	str	r1, [sp, #44]	; 0x2c
   17cb0:	ldr	r3, [sp, #40]	; 0x28
   17cb4:	ldr	r2, [sp, #60]	; 0x3c
   17cb8:	str	r3, [sp, #64]	; 0x40
   17cbc:	ldr	r6, [r3]
   17cc0:	add	r3, r3, #4
   17cc4:	str	r3, [sp, #40]	; 0x28
   17cc8:	ldr	r3, [sp, #8]
   17ccc:	cmp	r6, #0
   17cd0:	sub	r3, r3, r2
   17cd4:	str	r3, [sp, #68]	; 0x44
   17cd8:	beq	17f20 <UnityAssertEqualStringArray@@Base+0x390>
   17cdc:	ldrd	r2, [sp, #24]
   17ce0:	ldr	sl, [fp]
   17ce4:	adds	r2, r2, #1
   17ce8:	adc	r3, r3, #0
   17cec:	cmp	sl, #0
   17cf0:	strd	r2, [sp, #24]
   17cf4:	beq	17f98 <UnityAssertEqualStringArray@@Base+0x408>
   17cf8:	ldrd	r0, [sp, #32]
   17cfc:	rsb	r9, r7, #0
   17d00:	ldr	r3, [sp, #44]	; 0x2c
   17d04:	adds	r0, r0, #1
   17d08:	adc	r1, r1, #0
   17d0c:	add	r6, r6, r9
   17d10:	mov	r2, r7
   17d14:	add	r9, sl, r9
   17d18:	strd	r0, [sp, #32]
   17d1c:	ldrb	r1, [r6, r2]
   17d20:	mov	r0, r2
   17d24:	sub	ip, r2, r7
   17d28:	cmp	r1, #0
   17d2c:	bne	17ea8 <UnityAssertEqualStringArray@@Base+0x318>
   17d30:	ldrd	r6, [sp]
   17d34:	ldrb	r1, [sl, ip]
   17d38:	adds	r6, r6, #1
   17d3c:	adc	r7, r7, #0
   17d40:	cmp	r1, #0
   17d44:	strd	r6, [sp]
   17d48:	beq	17ec4 <UnityAssertEqualStringArray@@Base+0x334>
   17d4c:	cmp	lr, #0
   17d50:	bne	1802c <UnityAssertEqualStringArray@@Base+0x49c>
   17d54:	ldr	r3, [sp, #56]	; 0x38
   17d58:	cmp	r3, #0
   17d5c:	ldrd	r2, [sp, #24]
   17d60:	strd	r2, [r4, #64]	; 0x40
   17d64:	ldrd	r2, [sp, #32]
   17d68:	strd	r2, [r4, #72]	; 0x48
   17d6c:	ldrd	r2, [sp]
   17d70:	strd	r2, [r4, #96]	; 0x60
   17d74:	bne	18068 <UnityAssertEqualStringArray@@Base+0x4d8>
   17d78:	ldrd	r2, [r4, #80]	; 0x50
   17d7c:	mov	r1, #1
   17d80:	str	r1, [r5, #32]
   17d84:	adds	r2, r2, #1
   17d88:	adc	r3, r3, #0
   17d8c:	strd	r2, [r4, #80]	; 0x50
   17d90:	ldrd	r2, [r4, #112]	; 0x70
   17d94:	ldr	r0, [sp, #128]	; 0x80
   17d98:	adds	r2, r2, #1
   17d9c:	adc	r3, r3, #0
   17da0:	strd	r2, [r4, #112]	; 0x70
   17da4:	bl	152cc <UnityPrintNumber@@Base+0x314>
   17da8:	ldrd	r2, [r4, #128]	; 0x80
   17dac:	ldr	r1, [sp, #80]	; 0x50
   17db0:	adds	r2, r2, #1
   17db4:	adc	r3, r3, #0
   17db8:	cmp	r1, #1
   17dbc:	strd	r2, [r4, #128]	; 0x80
   17dc0:	bls	17e04 <UnityAssertEqualStringArray@@Base+0x274>
   17dc4:	ldrd	r2, [r4, #136]	; 0x88
   17dc8:	ldr	r0, [pc, #840]	; 18118 <UnityAssertEqualStringArray@@Base+0x588>
   17dcc:	adds	r2, r2, #1
   17dd0:	adc	r3, r3, #0
   17dd4:	strd	r2, [r4, #136]	; 0x88
   17dd8:	bl	14b30 <UnityPrint@@Base>
   17ddc:	ldrd	r2, [r4, #144]	; 0x90
   17de0:	ldr	r0, [sp, #68]	; 0x44
   17de4:	adds	r2, r2, #1
   17de8:	adc	r3, r3, #0
   17dec:	strd	r2, [r4, #144]	; 0x90
   17df0:	bl	154b8 <UnityPrintNumberUnsigned@@Base>
   17df4:	ldrd	r2, [r4, #152]	; 0x98
   17df8:	adds	r2, r2, #1
   17dfc:	adc	r3, r3, #0
   17e00:	strd	r2, [r4, #152]	; 0x98
   17e04:	ldr	r3, [sp, #64]	; 0x40
   17e08:	ldr	r1, [fp]
   17e0c:	ldr	r0, [r3]
   17e10:	bl	12170 <close@plt+0xc>
   17e14:	ldrd	r2, [r4, #160]	; 0xa0
   17e18:	ldr	r0, [sp, #84]	; 0x54
   17e1c:	adds	r2, r2, #1
   17e20:	adc	r3, r3, #0
   17e24:	strd	r2, [r4, #160]	; 0xa0
   17e28:	bl	14cc0 <UnityPrint@@Base+0x190>
   17e2c:	ldrd	r2, [r4, #168]	; 0xa8
   17e30:	mov	ip, #1
   17e34:	mov	r1, ip
   17e38:	adds	r2, r2, #1
   17e3c:	adc	r3, r3, #0
   17e40:	ldr	r0, [pc, #724]	; 1811c <UnityAssertEqualStringArray@@Base+0x58c>
   17e44:	strd	r2, [r4, #168]	; 0xa8
   17e48:	str	ip, [r5, #32]
   17e4c:	bl	11ff0 <longjmp@plt>
   17e50:	cmp	lr, #0
   17e54:	ldr	r1, [sp, #44]	; 0x2c
   17e58:	ldrne	r3, [pc, #688]	; 18110 <UnityAssertEqualStringArray@@Base+0x580>
   17e5c:	mov	r0, r9
   17e60:	strne	r7, [r3, #2344]	; 0x928
   17e64:	strne	r1, [r3, #2348]	; 0x92c
   17e68:	cmp	ip, #0
   17e6c:	bne	180f8 <UnityAssertEqualStringArray@@Base+0x568>
   17e70:	cmp	r0, #0
   17e74:	bne	18104 <UnityAssertEqualStringArray@@Base+0x574>
   17e78:	ldr	r3, [sp, #72]	; 0x48
   17e7c:	cmp	r3, #0
   17e80:	ldrdne	r2, [sp]
   17e84:	strdne	r2, [r4, #96]	; 0x60
   17e88:	ldr	r3, [sp, #56]	; 0x38
   17e8c:	cmp	r3, #0
   17e90:	ldrd	r2, [sp, #8]
   17e94:	strd	r2, [r4, #120]	; 0x78
   17e98:	ldrdne	r2, [sp, #16]
   17e9c:	strdne	r2, [r4, #176]	; 0xb0
   17ea0:	add	sp, sp, #92	; 0x5c
   17ea4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17ea8:	ldrb	r0, [r9, r0]
   17eac:	cmp	r0, r1
   17eb0:	bne	18034 <UnityAssertEqualStringArray@@Base+0x4a4>
   17eb4:	adds	r2, r2, #1
   17eb8:	adc	r3, r3, #0
   17ebc:	mov	lr, r8
   17ec0:	b	17d1c <UnityAssertEqualStringArray@@Base+0x18c>
   17ec4:	mov	r9, #1
   17ec8:	mov	ip, r9
   17ecc:	mov	r7, r2
   17ed0:	str	r3, [sp, #44]	; 0x2c
   17ed4:	str	r8, [sp, #72]	; 0x48
   17ed8:	ldr	r3, [sp, #76]	; 0x4c
   17edc:	cmp	r3, #0
   17ee0:	bne	1807c <UnityAssertEqualStringArray@@Base+0x4ec>
   17ee4:	ldrd	r2, [sp, #8]
   17ee8:	ldrd	r0, [sp, #48]	; 0x30
   17eec:	add	fp, fp, #4
   17ef0:	adds	r2, r2, #1
   17ef4:	adc	r3, r3, #0
   17ef8:	strd	r2, [sp, #8]
   17efc:	ldrd	r2, [sp, #16]
   17f00:	cmp	r3, r1
   17f04:	cmpeq	r2, r0
   17f08:	beq	17e50 <UnityAssertEqualStringArray@@Base+0x2c0>
   17f0c:	adds	r2, r2, #1
   17f10:	adc	r3, r3, #0
   17f14:	str	r8, [sp, #56]	; 0x38
   17f18:	strd	r2, [sp, #16]
   17f1c:	b	17cb0 <UnityAssertEqualStringArray@@Base+0x120>
   17f20:	ldr	r3, [fp]
   17f24:	cmp	r3, #0
   17f28:	beq	17ed8 <UnityAssertEqualStringArray@@Base+0x348>
   17f2c:	cmp	lr, #0
   17f30:	ldr	r1, [sp, #44]	; 0x2c
   17f34:	ldrne	r3, [pc, #468]	; 18110 <UnityAssertEqualStringArray@@Base+0x580>
   17f38:	mov	r0, r9
   17f3c:	strne	r7, [r3, #2344]	; 0x928
   17f40:	strne	r1, [r3, #2348]	; 0x92c
   17f44:	cmp	ip, #0
   17f48:	bne	180d8 <UnityAssertEqualStringArray@@Base+0x548>
   17f4c:	cmp	r0, #0
   17f50:	bne	17fb4 <UnityAssertEqualStringArray@@Base+0x424>
   17f54:	ldr	r3, [sp, #72]	; 0x48
   17f58:	cmp	r3, #0
   17f5c:	ldrdne	r2, [sp]
   17f60:	strdne	r2, [r4, #96]	; 0x60
   17f64:	ldr	r3, [sp, #56]	; 0x38
   17f68:	cmp	r3, #0
   17f6c:	ldrdne	r2, [sp, #8]
   17f70:	strdne	r2, [r4, #120]	; 0x78
   17f74:	ldrdne	r2, [sp, #16]
   17f78:	strdne	r2, [r4, #176]	; 0xb0
   17f7c:	ldrd	r2, [r4, #104]	; 0x68
   17f80:	mov	r1, #1
   17f84:	str	r1, [r5, #32]
   17f88:	adds	r2, r2, #1
   17f8c:	adc	r3, r3, #0
   17f90:	strd	r2, [r4, #104]	; 0x68
   17f94:	b	17d90 <UnityAssertEqualStringArray@@Base+0x200>
   17f98:	cmp	lr, #0
   17f9c:	mov	r0, r9
   17fa0:	ldr	r1, [sp, #44]	; 0x2c
   17fa4:	bne	180e4 <UnityAssertEqualStringArray@@Base+0x554>
   17fa8:	cmp	r0, #0
   17fac:	strd	r2, [r4, #64]	; 0x40
   17fb0:	beq	17f54 <UnityAssertEqualStringArray@@Base+0x3c4>
   17fb4:	ldrd	r2, [sp, #32]
   17fb8:	strd	r2, [r4, #72]	; 0x48
   17fbc:	b	17f54 <UnityAssertEqualStringArray@@Base+0x3c4>
   17fc0:	ldrd	r2, [r4, #16]
   17fc4:	ldr	r0, [sp, #128]	; 0x80
   17fc8:	adds	r2, r2, #1
   17fcc:	adc	r3, r3, #0
   17fd0:	strd	r2, [r4, #16]
   17fd4:	bl	152cc <UnityPrintNumber@@Base+0x314>
   17fd8:	ldrd	r2, [r4, #32]
   17fdc:	ldr	r0, [pc, #316]	; 18120 <UnityAssertEqualStringArray@@Base+0x590>
   17fe0:	adds	r2, r2, #1
   17fe4:	adc	r3, r3, #0
   17fe8:	strd	r2, [r4, #32]
   17fec:	bl	14b30 <UnityPrint@@Base>
   17ff0:	ldrd	r2, [r4, #40]	; 0x28
   17ff4:	ldr	r0, [sp, #84]	; 0x54
   17ff8:	adds	r2, r2, #1
   17ffc:	adc	r3, r3, #0
   18000:	strd	r2, [r4, #40]	; 0x28
   18004:	bl	14cc0 <UnityPrint@@Base+0x190>
   18008:	ldrd	r2, [r4, #48]	; 0x30
   1800c:	mov	ip, #1
   18010:	mov	r1, ip
   18014:	adds	r2, r2, #1
   18018:	adc	r3, r3, #0
   1801c:	add	r0, r5, #40	; 0x28
   18020:	strd	r2, [r4, #48]	; 0x30
   18024:	str	ip, [r5, #32]
   18028:	bl	11ff0 <longjmp@plt>
   1802c:	strd	r2, [r4, #88]	; 0x58
   18030:	b	17d54 <UnityAssertEqualStringArray@@Base+0x1c4>
   18034:	cmp	lr, #0
   18038:	strdne	r2, [r4, #88]	; 0x58
   1803c:	ldr	r3, [sp, #72]	; 0x48
   18040:	cmp	r3, #0
   18044:	ldrd	r2, [sp, #24]
   18048:	strd	r2, [r4, #64]	; 0x40
   1804c:	ldrd	r2, [sp, #32]
   18050:	strd	r2, [r4, #72]	; 0x48
   18054:	ldrdne	r2, [sp]
   18058:	strdne	r2, [r4, #96]	; 0x60
   1805c:	ldr	r3, [sp, #56]	; 0x38
   18060:	cmp	r3, #0
   18064:	beq	17d78 <UnityAssertEqualStringArray@@Base+0x1e8>
   18068:	ldrd	r2, [sp, #8]
   1806c:	strd	r2, [r4, #120]	; 0x78
   18070:	ldrd	r2, [sp, #16]
   18074:	strd	r2, [r4, #176]	; 0xb0
   18078:	b	17d78 <UnityAssertEqualStringArray@@Base+0x1e8>
   1807c:	cmp	lr, #0
   18080:	ldr	r1, [sp, #44]	; 0x2c
   18084:	ldrne	r3, [pc, #132]	; 18110 <UnityAssertEqualStringArray@@Base+0x580>
   18088:	mov	r0, r9
   1808c:	strne	r7, [r3, #2344]	; 0x928
   18090:	strne	r1, [r3, #2348]	; 0x92c
   18094:	cmp	ip, #0
   18098:	ldrdne	r2, [sp, #24]
   1809c:	strdne	r2, [r4, #64]	; 0x40
   180a0:	cmp	r0, #0
   180a4:	ldrdne	r2, [sp, #32]
   180a8:	strdne	r2, [r4, #72]	; 0x48
   180ac:	ldr	r3, [sp, #72]	; 0x48
   180b0:	cmp	r3, #0
   180b4:	ldrdne	r2, [sp]
   180b8:	strdne	r2, [r4, #96]	; 0x60
   180bc:	ldr	r3, [sp, #56]	; 0x38
   180c0:	cmp	r3, #0
   180c4:	ldrdne	r2, [sp, #8]
   180c8:	strdne	r2, [r4, #120]	; 0x78
   180cc:	ldrdne	r2, [sp, #16]
   180d0:	strdne	r2, [r4, #176]	; 0xb0
   180d4:	b	17d90 <UnityAssertEqualStringArray@@Base+0x200>
   180d8:	ldrd	r2, [sp, #24]
   180dc:	strd	r2, [r4, #64]	; 0x40
   180e0:	b	17f4c <UnityAssertEqualStringArray@@Base+0x3bc>
   180e4:	ldr	r3, [pc, #36]	; 18110 <UnityAssertEqualStringArray@@Base+0x580>
   180e8:	str	r7, [r3, #2344]	; 0x928
   180ec:	str	r1, [r3, #2348]	; 0x92c
   180f0:	ldrd	r2, [sp, #24]
   180f4:	b	17fa8 <UnityAssertEqualStringArray@@Base+0x418>
   180f8:	ldrd	r2, [sp, #24]
   180fc:	strd	r2, [r4, #64]	; 0x40
   18100:	b	17e70 <UnityAssertEqualStringArray@@Base+0x2e0>
   18104:	ldrd	r2, [sp, #32]
   18108:	strd	r2, [r4, #72]	; 0x48
   1810c:	b	17e78 <UnityAssertEqualStringArray@@Base+0x2e8>
   18110:	andeq	pc, r2, r0, lsl #10
   18114:	andeq	r0, r3, r0, ror #8
   18118:	andeq	sp, r1, ip, lsr r3
   1811c:	andeq	r0, r3, r8, lsl #9
   18120:	andeq	sp, r1, r4, lsl #6

00018124 <UnityAssertEqualMemory@@Base>:
   18124:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18128:	sub	sp, sp, #44	; 0x2c
   1812c:	ldr	r9, [pc, #2192]	; 189c4 <UnityAssertEqualMemory@@Base+0x8a0>
   18130:	ldr	ip, [pc, #2192]	; 189c8 <UnityAssertEqualMemory@@Base+0x8a4>
   18134:	ldrd	r6, [r9, #-8]
   18138:	ldr	ip, [ip, #32]
   1813c:	adds	r6, r6, #1
   18140:	adc	r7, r7, #0
   18144:	cmp	ip, #0
   18148:	strd	r6, [r9, #-8]
   1814c:	bne	182a0 <UnityAssertEqualMemory@@Base+0x17c>
   18150:	ldrd	sl, [r9]
   18154:	ldr	ip, [pc, #2156]	; 189c8 <UnityAssertEqualMemory@@Base+0x8a4>
   18158:	adds	sl, sl, #1
   1815c:	ldr	ip, [ip, #36]	; 0x24
   18160:	adc	fp, fp, #0
   18164:	cmp	ip, #0
   18168:	strd	sl, [r9]
   1816c:	bne	182a0 <UnityAssertEqualMemory@@Base+0x17c>
   18170:	cmp	r2, #0
   18174:	cmpne	r3, #0
   18178:	str	r3, [sp, #24]
   1817c:	mov	r4, r2
   18180:	moveq	r8, #1
   18184:	movne	r8, #0
   18188:	beq	18920 <UnityAssertEqualMemory@@Base+0x7fc>
   1818c:	ldrd	sl, [r9, #16]
   18190:	ldr	r3, [sp, #80]	; 0x50
   18194:	ldr	r2, [sp, #84]	; 0x54
   18198:	adds	sl, sl, #1
   1819c:	adc	fp, fp, #0
   181a0:	mov	r5, r0
   181a4:	mov	r6, r1
   181a8:	strd	sl, [r9, #16]
   181ac:	bl	15350 <UnityPrintNumber@@Base+0x398>
   181b0:	ldrd	r2, [r9, #48]	; 0x30
   181b4:	adds	r2, r2, #1
   181b8:	adc	r3, r3, #0
   181bc:	strd	r2, [r9, #48]	; 0x30
   181c0:	cmp	r0, #1
   181c4:	beq	182a0 <UnityAssertEqualMemory@@Base+0x17c>
   181c8:	ldrd	r2, [r9, #168]	; 0xa8
   181cc:	ldr	r1, [sp, #24]
   181d0:	ldrd	sl, [r9, #152]	; 0x98
   181d4:	sub	r7, r1, #1
   181d8:	ldrd	r0, [r9, #176]	; 0xb0
   181dc:	adds	r2, r2, #1
   181e0:	adc	r3, r3, #0
   181e4:	strd	r0, [sp, #16]
   181e8:	strd	r2, [r9, #168]	; 0xa8
   181ec:	ldrd	r0, [r9, #160]	; 0xa0
   181f0:	str	r8, [sp]
   181f4:	str	r9, [sp, #32]
   181f8:	ldrd	r8, [sp, #16]
   181fc:	mov	lr, #1
   18200:	sub	ip, r4, #1
   18204:	str	r7, [sp, #36]	; 0x24
   18208:	str	ip, [sp, #8]
   1820c:	ldrb	r2, [r5]
   18210:	ldrb	r3, [r6]
   18214:	adds	r8, r8, #1
   18218:	adc	r9, r9, #0
   1821c:	adds	sl, sl, #1
   18220:	adc	fp, fp, #0
   18224:	cmp	r2, r3
   18228:	bne	18994 <UnityAssertEqualMemory@@Base+0x870>
   1822c:	add	r2, r5, #1
   18230:	add	r3, r6, #1
   18234:	ldr	r4, [sp, #8]
   18238:	b	1825c <UnityAssertEqualMemory@@Base+0x138>
   1823c:	ldrb	ip, [r2]
   18240:	ldrb	r3, [r3]
   18244:	adds	sl, sl, #1
   18248:	adc	fp, fp, #0
   1824c:	cmp	ip, r3
   18250:	add	r2, r5, #1
   18254:	add	r3, r6, #1
   18258:	bne	182a8 <UnityAssertEqualMemory@@Base+0x184>
   1825c:	sub	r4, r4, #1
   18260:	cmn	r4, #1
   18264:	mov	r5, r2
   18268:	mov	r6, r3
   1826c:	bne	1823c <UnityAssertEqualMemory@@Base+0x118>
   18270:	adds	r0, r0, #1
   18274:	sub	r7, r7, #1
   18278:	adc	r1, r1, #0
   1827c:	cmn	r7, #1
   18280:	str	lr, [sp]
   18284:	bne	1820c <UnityAssertEqualMemory@@Base+0xe8>
   18288:	mov	r3, r9
   1828c:	ldr	r9, [sp, #32]
   18290:	mov	r2, r8
   18294:	strd	sl, [r9, #152]	; 0x98
   18298:	strd	r0, [r9, #160]	; 0xa0
   1829c:	strd	r2, [r9, #176]	; 0xb0
   182a0:	add	sp, sp, #44	; 0x2c
   182a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   182a8:	strd	r8, [sp, #16]
   182ac:	ldr	r8, [sp]
   182b0:	ldr	r9, [sp, #32]
   182b4:	cmp	r8, #0
   182b8:	strd	sl, [r9, #152]	; 0x98
   182bc:	bne	18918 <UnityAssertEqualMemory@@Base+0x7f4>
   182c0:	ldrd	r2, [sp, #16]
   182c4:	strd	r2, [r9, #176]	; 0xb0
   182c8:	ldr	r8, [pc, #1788]	; 189cc <UnityAssertEqualMemory@@Base+0x8a8>
   182cc:	ldr	r3, [pc, #1780]	; 189c8 <UnityAssertEqualMemory@@Base+0x8a4>
   182d0:	ldr	r1, [sp, #84]	; 0x54
   182d4:	ldr	r0, [r3]
   182d8:	ldrd	r2, [r8]
   182dc:	adds	r2, r2, #1
   182e0:	adc	r3, r3, #0
   182e4:	strd	r2, [r8]
   182e8:	bl	15200 <UnityPrintNumber@@Base+0x248>
   182ec:	ldrd	r2, [r8, #8]
   182f0:	ldr	r0, [pc, #1752]	; 189d0 <UnityAssertEqualMemory@@Base+0x8ac>
   182f4:	adds	r2, r2, #1
   182f8:	adc	r3, r3, #0
   182fc:	strd	r2, [r8, #8]
   18300:	bl	14b30 <UnityPrint@@Base>
   18304:	ldrd	r2, [r8, #16]
   18308:	ldr	r1, [pc, #1732]	; 189d4 <UnityAssertEqualMemory@@Base+0x8b0>
   1830c:	mov	r0, #58	; 0x3a
   18310:	adds	r2, r2, #1
   18314:	adc	r3, r3, #0
   18318:	ldr	r1, [r1]
   1831c:	strd	r2, [r8, #16]
   18320:	bl	12134 <putc@plt>
   18324:	ldrd	r0, [r8, #24]
   18328:	ldrd	r2, [r9, #56]	; 0x38
   1832c:	adds	r0, r0, #1
   18330:	adc	r1, r1, #0
   18334:	adds	r2, r2, #1
   18338:	adc	r3, r3, #0
   1833c:	strd	r0, [r8, #24]
   18340:	ldr	r0, [pc, #1680]	; 189d8 <UnityAssertEqualMemory@@Base+0x8b4>
   18344:	strd	r2, [r9, #56]	; 0x38
   18348:	bl	14b30 <UnityPrint@@Base>
   1834c:	ldrd	r2, [r9, #64]	; 0x40
   18350:	ldr	r1, [sp, #24]
   18354:	adds	r2, r2, #1
   18358:	adc	r3, r3, #0
   1835c:	cmp	r1, #1
   18360:	strd	r2, [r9, #64]	; 0x40
   18364:	addls	r8, r8, #112	; 0x70
   18368:	bls	185b4 <UnityAssertEqualMemory@@Base+0x490>
   1836c:	ldrd	r2, [r9, #72]	; 0x48
   18370:	ldr	r1, [sp, #36]	; 0x24
   18374:	ldr	r0, [pc, #1632]	; 189dc <UnityAssertEqualMemory@@Base+0x8b8>
   18378:	adds	r2, r2, #1
   1837c:	adc	r3, r3, #0
   18380:	sub	r7, r1, r7
   18384:	strd	r2, [r9, #72]	; 0x48
   18388:	bl	14b30 <UnityPrint@@Base>
   1838c:	ldrd	r0, [r9, #80]	; 0x50
   18390:	add	r8, r8, #112	; 0x70
   18394:	adds	r0, r0, #1
   18398:	adc	r1, r1, #0
   1839c:	cmp	r7, #9
   183a0:	strd	r0, [r9, #80]	; 0x50
   183a4:	bls	188d0 <UnityAssertEqualMemory@@Base+0x7ac>
   183a8:	ldrd	r2, [r8, #8]
   183ac:	mov	r0, r2
   183b0:	mov	r1, r3
   183b4:	ldrd	r2, [r8]
   183b8:	mov	sl, r2
   183bc:	mov	fp, r3
   183c0:	mov	r2, r0
   183c4:	adds	r0, r0, #1
   183c8:	strd	sl, [sp, #16]
   183cc:	mov	r3, r1
   183d0:	adc	r1, r1, #0
   183d4:	adds	sl, sl, #1
   183d8:	adc	fp, fp, #0
   183dc:	cmp	r7, #99	; 0x63
   183e0:	strd	sl, [sp]
   183e4:	strd	r0, [r8, #8]
   183e8:	bls	188c8 <UnityAssertEqualMemory@@Base+0x7a4>
   183ec:	ldrd	sl, [sp, #16]
   183f0:	adds	r0, r2, #2
   183f4:	adc	r1, r3, #0
   183f8:	adds	sl, sl, #2
   183fc:	adc	fp, fp, #0
   18400:	cmp	r7, #1000	; 0x3e8
   18404:	strd	r2, [sp, #24]
   18408:	strd	sl, [sp]
   1840c:	bcc	188c0 <UnityAssertEqualMemory@@Base+0x79c>
   18410:	ldrd	sl, [sp, #16]
   18414:	mov	r0, r2
   18418:	adds	r0, r0, #3
   1841c:	ldr	r2, [pc, #1468]	; 189e0 <UnityAssertEqualMemory@@Base+0x8bc>
   18420:	adc	r1, r3, #0
   18424:	adds	sl, sl, #3
   18428:	adc	fp, fp, #0
   1842c:	cmp	r7, r2
   18430:	strd	sl, [sp]
   18434:	bls	188b8 <UnityAssertEqualMemory@@Base+0x794>
   18438:	ldrd	r0, [sp, #24]
   1843c:	ldrd	sl, [sp, #16]
   18440:	ldr	r2, [pc, #1436]	; 189e4 <UnityAssertEqualMemory@@Base+0x8c0>
   18444:	adds	r0, r0, #4
   18448:	adc	r1, r1, #0
   1844c:	adds	sl, sl, #4
   18450:	adc	fp, fp, #0
   18454:	cmp	r7, r2
   18458:	strd	sl, [sp]
   1845c:	bls	188b0 <UnityAssertEqualMemory@@Base+0x78c>
   18460:	ldrd	r0, [sp, #24]
   18464:	ldrd	sl, [sp, #16]
   18468:	ldr	r2, [pc, #1400]	; 189e8 <UnityAssertEqualMemory@@Base+0x8c4>
   1846c:	adds	r0, r0, #5
   18470:	adc	r1, r1, #0
   18474:	adds	sl, sl, #5
   18478:	adc	fp, fp, #0
   1847c:	cmp	r7, r2
   18480:	strd	sl, [sp]
   18484:	bls	188a8 <UnityAssertEqualMemory@@Base+0x784>
   18488:	ldrd	r0, [sp, #24]
   1848c:	ldrd	sl, [sp, #16]
   18490:	ldr	r2, [pc, #1364]	; 189ec <UnityAssertEqualMemory@@Base+0x8c8>
   18494:	adds	r0, r0, #6
   18498:	adc	r1, r1, #0
   1849c:	adds	sl, sl, #6
   184a0:	adc	fp, fp, #0
   184a4:	cmp	r7, r2
   184a8:	strd	sl, [sp]
   184ac:	bls	188a0 <UnityAssertEqualMemory@@Base+0x77c>
   184b0:	ldrd	r0, [sp, #24]
   184b4:	ldrd	sl, [sp, #16]
   184b8:	ldr	r2, [pc, #1328]	; 189f0 <UnityAssertEqualMemory@@Base+0x8cc>
   184bc:	adds	r0, r0, #7
   184c0:	adc	r1, r1, #0
   184c4:	adds	sl, sl, #7
   184c8:	adc	fp, fp, #0
   184cc:	cmp	r7, r2
   184d0:	strd	sl, [sp]
   184d4:	bls	18898 <UnityAssertEqualMemory@@Base+0x774>
   184d8:	ldrd	r0, [sp, #24]
   184dc:	ldrd	sl, [sp, #16]
   184e0:	ldr	r2, [pc, #1292]	; 189f4 <UnityAssertEqualMemory@@Base+0x8d0>
   184e4:	adds	r0, r0, #8
   184e8:	adc	r1, r1, #0
   184ec:	adds	sl, sl, #8
   184f0:	adc	fp, fp, #0
   184f4:	cmp	r7, r2
   184f8:	strd	sl, [sp]
   184fc:	bls	18890 <UnityAssertEqualMemory@@Base+0x76c>
   18500:	ldrd	r0, [sp, #24]
   18504:	ldrd	sl, [sp, #16]
   18508:	adds	r0, r0, #9
   1850c:	adc	r1, r1, #0
   18510:	adds	sl, sl, #9
   18514:	adc	fp, fp, #0
   18518:	strd	sl, [sp]
   1851c:	ldr	fp, [pc, #1236]	; 189f8 <UnityAssertEqualMemory@@Base+0x8d4>
   18520:	strd	r0, [r8, #8]
   18524:	ldrd	r2, [sp]
   18528:	strd	r2, [r8]
   1852c:	ldrd	r0, [r8, #16]
   18530:	adds	r0, r0, #1
   18534:	adc	r1, r1, #0
   18538:	strd	r0, [r8, #16]
   1853c:	b	18550 <UnityAssertEqualMemory@@Base+0x42c>
   18540:	ldrd	r2, [r8, #32]
   18544:	adds	r2, r2, #1
   18548:	adc	r3, r3, #0
   1854c:	strd	r2, [r8, #32]
   18550:	mov	r1, fp
   18554:	mov	r0, r7
   18558:	bl	1c9a0 <__gcov_sort_n_vals@@Base+0x534>
   1855c:	ldr	r3, [pc, #1136]	; 189d4 <UnityAssertEqualMemory@@Base+0x8b0>
   18560:	ldr	r1, [r3]
   18564:	ldr	r3, [pc, #1168]	; 189fc <UnityAssertEqualMemory@@Base+0x8d8>
   18568:	umull	r2, r3, r3, r0
   1856c:	lsr	r3, r3, #3
   18570:	add	r3, r3, r3, lsl #2
   18574:	sub	r0, r0, r3, lsl #1
   18578:	add	r0, r0, #48	; 0x30
   1857c:	uxtb	r0, r0
   18580:	bl	12134 <putc@plt>
   18584:	ldr	r3, [pc, #1136]	; 189fc <UnityAssertEqualMemory@@Base+0x8d8>
   18588:	umull	r3, fp, r3, fp
   1858c:	lsrs	fp, fp, #3
   18590:	bne	18540 <UnityAssertEqualMemory@@Base+0x41c>
   18594:	ldrd	r0, [r8, #24]
   18598:	ldrd	r2, [r9, #88]	; 0x58
   1859c:	adds	r0, r0, #1
   185a0:	adc	r1, r1, #0
   185a4:	adds	r2, r2, #1
   185a8:	adc	r3, r3, #0
   185ac:	strd	r0, [r8, #24]
   185b0:	strd	r2, [r9, #88]	; 0x58
   185b4:	ldr	r0, [pc, #1092]	; 18a00 <UnityAssertEqualMemory@@Base+0x8dc>
   185b8:	bl	14b30 <UnityPrint@@Base>
   185bc:	ldrd	r2, [r9, #96]	; 0x60
   185c0:	ldr	r1, [sp, #8]
   185c4:	adds	r2, r2, #1
   185c8:	adc	r3, r3, #0
   185cc:	sub	r4, r1, r4
   185d0:	cmp	r4, #9
   185d4:	strd	r2, [r9, #96]	; 0x60
   185d8:	bls	18900 <UnityAssertEqualMemory@@Base+0x7dc>
   185dc:	ldrd	r2, [r8]
   185e0:	ldrd	r0, [r8, #8]
   185e4:	mov	sl, r2
   185e8:	mov	fp, r3
   185ec:	adds	r2, r0, #1
   185f0:	adc	r3, r1, #0
   185f4:	strd	sl, [sp, #8]
   185f8:	adds	sl, sl, #1
   185fc:	adc	fp, fp, #0
   18600:	cmp	r4, #99	; 0x63
   18604:	strd	sl, [sp]
   18608:	strd	r2, [r8, #8]
   1860c:	bls	18910 <UnityAssertEqualMemory@@Base+0x7ec>
   18610:	ldrd	sl, [sp, #8]
   18614:	adds	r2, r0, #2
   18618:	adc	r3, r1, #0
   1861c:	adds	sl, sl, #2
   18620:	adc	fp, fp, #0
   18624:	cmp	r4, #1000	; 0x3e8
   18628:	strd	sl, [sp]
   1862c:	bcc	18908 <UnityAssertEqualMemory@@Base+0x7e4>
   18630:	ldrd	sl, [sp, #8]
   18634:	adds	r2, r0, #3
   18638:	ldr	ip, [pc, #928]	; 189e0 <UnityAssertEqualMemory@@Base+0x8bc>
   1863c:	adc	r3, r1, #0
   18640:	adds	sl, sl, #3
   18644:	adc	fp, fp, #0
   18648:	cmp	r4, ip
   1864c:	strd	sl, [sp]
   18650:	bls	188f0 <UnityAssertEqualMemory@@Base+0x7cc>
   18654:	ldrd	sl, [sp, #8]
   18658:	adds	r2, r0, #4
   1865c:	ldr	ip, [pc, #896]	; 189e4 <UnityAssertEqualMemory@@Base+0x8c0>
   18660:	adc	r3, r1, #0
   18664:	adds	sl, sl, #4
   18668:	adc	fp, fp, #0
   1866c:	cmp	r4, ip
   18670:	strd	sl, [sp]
   18674:	bls	188e8 <UnityAssertEqualMemory@@Base+0x7c4>
   18678:	ldrd	sl, [sp, #8]
   1867c:	adds	r2, r0, #5
   18680:	ldr	ip, [pc, #864]	; 189e8 <UnityAssertEqualMemory@@Base+0x8c4>
   18684:	adc	r3, r1, #0
   18688:	adds	sl, sl, #5
   1868c:	adc	fp, fp, #0
   18690:	cmp	r4, ip
   18694:	strd	sl, [sp]
   18698:	bls	189bc <UnityAssertEqualMemory@@Base+0x898>
   1869c:	ldrd	sl, [sp, #8]
   186a0:	adds	r2, r0, #6
   186a4:	ldr	ip, [pc, #832]	; 189ec <UnityAssertEqualMemory@@Base+0x8c8>
   186a8:	adc	r3, r1, #0
   186ac:	adds	sl, sl, #6
   186b0:	adc	fp, fp, #0
   186b4:	cmp	r4, ip
   186b8:	strd	sl, [sp]
   186bc:	bls	188e0 <UnityAssertEqualMemory@@Base+0x7bc>
   186c0:	ldrd	sl, [sp, #8]
   186c4:	adds	r2, r0, #7
   186c8:	ldr	ip, [pc, #800]	; 189f0 <UnityAssertEqualMemory@@Base+0x8cc>
   186cc:	adc	r3, r1, #0
   186d0:	adds	sl, sl, #7
   186d4:	adc	fp, fp, #0
   186d8:	cmp	r4, ip
   186dc:	strd	sl, [sp]
   186e0:	bls	188d8 <UnityAssertEqualMemory@@Base+0x7b4>
   186e4:	ldrd	sl, [sp, #8]
   186e8:	adds	r2, r0, #8
   186ec:	ldr	ip, [pc, #768]	; 189f4 <UnityAssertEqualMemory@@Base+0x8d0>
   186f0:	adc	r3, r1, #0
   186f4:	adds	sl, sl, #8
   186f8:	adc	fp, fp, #0
   186fc:	cmp	r4, ip
   18700:	strd	sl, [sp]
   18704:	bls	188f8 <UnityAssertEqualMemory@@Base+0x7d4>
   18708:	ldrd	sl, [sp, #8]
   1870c:	adds	r2, r0, #9
   18710:	adc	r3, r1, #0
   18714:	adds	sl, sl, #9
   18718:	adc	fp, fp, #0
   1871c:	strd	sl, [sp]
   18720:	ldr	fp, [pc, #720]	; 189f8 <UnityAssertEqualMemory@@Base+0x8d4>
   18724:	strd	r2, [r8, #8]
   18728:	ldrd	r2, [sp]
   1872c:	strd	r2, [r8]
   18730:	ldrd	r2, [r8, #16]
   18734:	ldr	r7, [pc, #704]	; 189fc <UnityAssertEqualMemory@@Base+0x8d8>
   18738:	adds	r2, r2, #1
   1873c:	adc	r3, r3, #0
   18740:	strd	r2, [r8, #16]
   18744:	b	18758 <UnityAssertEqualMemory@@Base+0x634>
   18748:	ldrd	r2, [r8, #32]
   1874c:	adds	r2, r2, #1
   18750:	adc	r3, r3, #0
   18754:	strd	r2, [r8, #32]
   18758:	mov	r1, fp
   1875c:	mov	r0, r4
   18760:	bl	1c9a0 <__gcov_sort_n_vals@@Base+0x534>
   18764:	ldr	r3, [pc, #616]	; 189d4 <UnityAssertEqualMemory@@Base+0x8b0>
   18768:	ldr	r1, [r3]
   1876c:	umull	r2, r3, r7, r0
   18770:	lsr	r3, r3, #3
   18774:	add	r3, r3, r3, lsl #2
   18778:	sub	r0, r0, r3, lsl #1
   1877c:	umull	r3, fp, r7, fp
   18780:	add	r0, r0, #48	; 0x30
   18784:	uxtb	r0, r0
   18788:	bl	12134 <putc@plt>
   1878c:	lsrs	fp, fp, #3
   18790:	bne	18748 <UnityAssertEqualMemory@@Base+0x624>
   18794:	ldrd	r0, [r8, #24]
   18798:	ldrd	r2, [r9, #104]	; 0x68
   1879c:	ldr	r4, [pc, #608]	; 18a04 <UnityAssertEqualMemory@@Base+0x8e0>
   187a0:	adds	r0, r0, #1
   187a4:	adc	r1, r1, #0
   187a8:	adds	r2, r2, #1
   187ac:	adc	r3, r3, #0
   187b0:	strd	r0, [r8, #24]
   187b4:	ldr	r0, [pc, #588]	; 18a08 <UnityAssertEqualMemory@@Base+0x8e4>
   187b8:	strd	r2, [r9, #104]	; 0x68
   187bc:	bl	14b30 <UnityPrint@@Base>
   187c0:	ldrd	sl, [r4, #16]
   187c4:	ldrd	r2, [r9, #112]	; 0x70
   187c8:	mov	r1, #2
   187cc:	adds	sl, sl, #1
   187d0:	adc	fp, fp, #0
   187d4:	adds	r2, r2, #1
   187d8:	adc	r3, r3, #0
   187dc:	ldrb	r0, [r5]
   187e0:	strd	sl, [r4, #16]
   187e4:	strd	r2, [r9, #112]	; 0x70
   187e8:	bl	156c8 <UnityPrintNumberHex@@Base>
   187ec:	ldrd	r2, [r4, #32]
   187f0:	ldrd	sl, [r9, #120]	; 0x78
   187f4:	ldr	r0, [pc, #528]	; 18a0c <UnityAssertEqualMemory@@Base+0x8e8>
   187f8:	adds	r2, r2, #1
   187fc:	adc	r3, r3, #0
   18800:	adds	sl, sl, #1
   18804:	adc	fp, fp, #0
   18808:	strd	r2, [r4, #32]
   1880c:	strd	sl, [r9, #120]	; 0x78
   18810:	bl	14b30 <UnityPrint@@Base>
   18814:	ldrd	r2, [r4, #16]
   18818:	ldrd	sl, [r9, #128]	; 0x80
   1881c:	ldrb	r0, [r6]
   18820:	adds	r2, r2, #1
   18824:	adc	r3, r3, #0
   18828:	adds	sl, sl, #1
   1882c:	adc	fp, fp, #0
   18830:	mov	r1, #2
   18834:	strd	r2, [r4, #16]
   18838:	strd	sl, [r9, #128]	; 0x80
   1883c:	bl	156c8 <UnityPrintNumberHex@@Base>
   18840:	ldrd	r2, [r4, #32]
   18844:	ldrd	r6, [r9, #136]	; 0x88
   18848:	ldr	r0, [sp, #80]	; 0x50
   1884c:	adds	r2, r2, #1
   18850:	adc	r3, r3, #0
   18854:	adds	r6, r6, #1
   18858:	adc	r7, r7, #0
   1885c:	strd	r2, [r4, #32]
   18860:	strd	r6, [r9, #136]	; 0x88
   18864:	bl	14cc0 <UnityPrint@@Base+0x190>
   18868:	ldrd	r2, [r9, #144]	; 0x90
   1886c:	ldr	r0, [pc, #412]	; 18a10 <UnityAssertEqualMemory@@Base+0x8ec>
   18870:	mov	ip, #1
   18874:	adds	r2, r2, #1
   18878:	adc	r3, r3, #0
   1887c:	mov	r1, ip
   18880:	strd	r2, [r9, #144]	; 0x90
   18884:	sub	r3, r0, #40	; 0x28
   18888:	str	ip, [r3, #32]
   1888c:	bl	11ff0 <longjmp@plt>
   18890:	ldr	fp, [pc, #380]	; 18a14 <UnityAssertEqualMemory@@Base+0x8f0>
   18894:	b	18520 <UnityAssertEqualMemory@@Base+0x3fc>
   18898:	ldr	fp, [pc, #376]	; 18a18 <UnityAssertEqualMemory@@Base+0x8f4>
   1889c:	b	18520 <UnityAssertEqualMemory@@Base+0x3fc>
   188a0:	ldr	fp, [pc, #372]	; 18a1c <UnityAssertEqualMemory@@Base+0x8f8>
   188a4:	b	18520 <UnityAssertEqualMemory@@Base+0x3fc>
   188a8:	ldr	fp, [pc, #368]	; 18a20 <UnityAssertEqualMemory@@Base+0x8fc>
   188ac:	b	18520 <UnityAssertEqualMemory@@Base+0x3fc>
   188b0:	ldr	fp, [pc, #364]	; 18a24 <UnityAssertEqualMemory@@Base+0x900>
   188b4:	b	18520 <UnityAssertEqualMemory@@Base+0x3fc>
   188b8:	mov	fp, #1000	; 0x3e8
   188bc:	b	18520 <UnityAssertEqualMemory@@Base+0x3fc>
   188c0:	mov	fp, #100	; 0x64
   188c4:	b	18520 <UnityAssertEqualMemory@@Base+0x3fc>
   188c8:	mov	fp, #10
   188cc:	b	18524 <UnityAssertEqualMemory@@Base+0x400>
   188d0:	mov	fp, #1
   188d4:	b	1852c <UnityAssertEqualMemory@@Base+0x408>
   188d8:	ldr	fp, [pc, #312]	; 18a18 <UnityAssertEqualMemory@@Base+0x8f4>
   188dc:	b	18724 <UnityAssertEqualMemory@@Base+0x600>
   188e0:	ldr	fp, [pc, #308]	; 18a1c <UnityAssertEqualMemory@@Base+0x8f8>
   188e4:	b	18724 <UnityAssertEqualMemory@@Base+0x600>
   188e8:	ldr	fp, [pc, #308]	; 18a24 <UnityAssertEqualMemory@@Base+0x900>
   188ec:	b	18724 <UnityAssertEqualMemory@@Base+0x600>
   188f0:	mov	fp, #1000	; 0x3e8
   188f4:	b	18724 <UnityAssertEqualMemory@@Base+0x600>
   188f8:	ldr	fp, [pc, #276]	; 18a14 <UnityAssertEqualMemory@@Base+0x8f0>
   188fc:	b	18724 <UnityAssertEqualMemory@@Base+0x600>
   18900:	mov	fp, #1
   18904:	b	18730 <UnityAssertEqualMemory@@Base+0x60c>
   18908:	mov	fp, #100	; 0x64
   1890c:	b	18724 <UnityAssertEqualMemory@@Base+0x600>
   18910:	mov	fp, #10
   18914:	b	18728 <UnityAssertEqualMemory@@Base+0x604>
   18918:	strd	r0, [r9, #160]	; 0xa0
   1891c:	b	182c0 <UnityAssertEqualMemory@@Base+0x19c>
   18920:	ldrd	r2, [r9, #8]
   18924:	ldr	r0, [sp, #84]	; 0x54
   18928:	adds	r2, r2, #1
   1892c:	adc	r3, r3, #0
   18930:	strd	r2, [r9, #8]
   18934:	bl	152cc <UnityPrintNumber@@Base+0x314>
   18938:	ldrd	r2, [r9, #24]
   1893c:	ldr	r0, [pc, #228]	; 18a28 <UnityAssertEqualMemory@@Base+0x904>
   18940:	adds	r2, r2, #1
   18944:	adc	r3, r3, #0
   18948:	strd	r2, [r9, #24]
   1894c:	bl	14b30 <UnityPrint@@Base>
   18950:	ldrd	r2, [r9, #32]
   18954:	ldr	r0, [sp, #80]	; 0x50
   18958:	adds	r2, r2, #1
   1895c:	adc	r3, r3, #0
   18960:	strd	r2, [r9, #32]
   18964:	bl	14cc0 <UnityPrint@@Base+0x190>
   18968:	ldrd	r2, [r9, #40]	; 0x28
   1896c:	ldr	r0, [pc, #84]	; 189c8 <UnityAssertEqualMemory@@Base+0x8a4>
   18970:	mov	ip, #1
   18974:	adds	r2, r2, #1
   18978:	adc	r3, r3, #0
   1897c:	add	r0, r0, #40	; 0x28
   18980:	strd	r2, [r9, #40]	; 0x28
   18984:	sub	r3, r0, #40	; 0x28
   18988:	mov	r1, ip
   1898c:	str	ip, [r3, #32]
   18990:	bl	11ff0 <longjmp@plt>
   18994:	strd	r8, [sp, #16]
   18998:	ldr	r8, [sp]
   1899c:	ldr	r9, [sp, #32]
   189a0:	cmp	r8, #0
   189a4:	strd	sl, [r9, #152]	; 0x98
   189a8:	strdne	r0, [r9, #160]	; 0xa0
   189ac:	ldrd	r2, [sp, #16]
   189b0:	ldr	r4, [sp, #8]
   189b4:	strd	r2, [r9, #176]	; 0xb0
   189b8:	b	182c8 <UnityAssertEqualMemory@@Base+0x1a4>
   189bc:	ldr	fp, [pc, #92]	; 18a20 <UnityAssertEqualMemory@@Base+0x8fc>
   189c0:	b	18724 <UnityAssertEqualMemory@@Base+0x600>
   189c4:	muleq	r2, r0, lr
   189c8:	andeq	r0, r3, r0, ror #8
   189cc:	andeq	pc, r2, r0, asr #14
   189d0:	muleq	r1, r8, r2
   189d4:	andeq	lr, r2, r4, asr #24
   189d8:	muleq	r1, r0, r3
   189dc:	andeq	sp, r1, ip, lsr r3
   189e0:	andeq	r2, r0, pc, lsl #14
   189e4:	muleq	r1, pc, r6	; <UNPREDICTABLE>
   189e8:	andeq	r4, pc, pc, lsr r2	; <UNPREDICTABLE>
   189ec:	addseq	r9, r8, pc, ror r6
   189f0:	ldrbeq	lr, [r5, #255]!	; 0xff
   189f4:	blcc	fe6cb1f8 <__bss_end__@@Base+0xfe699bb8>
   189f8:	blcc	fe6cb200 <__bss_end__@@Base+0xfe699bc0>
   189fc:	stclgt	12, cr12, [ip], {205}	; 0xcd
   18a00:	andeq	sp, r1, r4, lsr #7
   18a04:	andeq	pc, r2, r0, ror #15
   18a08:	andeq	sp, r1, r0, ror #4
   18a0c:	andeq	sp, r1, r4, ror r2
   18a10:	andeq	r0, r3, r8, lsl #9
   18a14:	ldrbeq	lr, [r5, #256]!	; 0x100
   18a18:	addseq	r9, r8, r0, lsl #13
   18a1c:	andeq	r4, pc, r0, asr #4
   18a20:	andeq	r8, r1, r0, lsr #13
   18a24:	andeq	r2, r0, r0, lsl r7
   18a28:	andeq	sp, r1, r4, lsl #6

00018a2c <UnityFail@@Base>:
   18a2c:	push	{r4, r5, r6, r7, r8, lr}
   18a30:	ldr	r4, [pc, #460]	; 18c04 <UnityFail@@Base+0x1d8>
   18a34:	ldr	r5, [pc, #460]	; 18c08 <UnityFail@@Base+0x1dc>
   18a38:	ldrd	r2, [r4, #-8]
   18a3c:	ldr	ip, [r5, #32]
   18a40:	adds	r2, r2, #1
   18a44:	adc	r3, r3, #0
   18a48:	cmp	ip, #0
   18a4c:	strd	r2, [r4, #-8]
   18a50:	popne	{r4, r5, r6, r7, r8, pc}
   18a54:	ldrd	r2, [r4]
   18a58:	ldr	ip, [r5, #36]	; 0x24
   18a5c:	adds	r2, r2, #1
   18a60:	adc	r3, r3, #0
   18a64:	cmp	ip, #0
   18a68:	strd	r2, [r4]
   18a6c:	popne	{r4, r5, r6, r7, r8, pc}
   18a70:	ldrd	r2, [r4, #8]
   18a74:	mov	r6, r0
   18a78:	ldr	r0, [r5]
   18a7c:	adds	r2, r2, #1
   18a80:	adc	r3, r3, #0
   18a84:	strd	r2, [r4, #8]
   18a88:	bl	15200 <UnityPrintNumber@@Base+0x248>
   18a8c:	ldrd	r2, [r4, #16]
   18a90:	ldr	r0, [pc, #372]	; 18c0c <UnityFail@@Base+0x1e0>
   18a94:	adds	r2, r2, #1
   18a98:	adc	r3, r3, #0
   18a9c:	strd	r2, [r4, #16]
   18aa0:	bl	14b30 <UnityPrint@@Base>
   18aa4:	ldrd	r2, [r4, #24]
   18aa8:	adds	r2, r2, #1
   18aac:	adc	r3, r3, #0
   18ab0:	cmp	r6, #0
   18ab4:	strd	r2, [r4, #24]
   18ab8:	beq	18bc0 <UnityFail@@Base+0x194>
   18abc:	ldrd	r2, [r4, #32]
   18ac0:	ldr	r7, [pc, #328]	; 18c10 <UnityFail@@Base+0x1e4>
   18ac4:	mov	r0, #58	; 0x3a
   18ac8:	adds	r2, r2, #1
   18acc:	adc	r3, r3, #0
   18ad0:	ldr	r1, [r7]
   18ad4:	strd	r2, [r4, #32]
   18ad8:	bl	12134 <putc@plt>
   18adc:	ldrd	r2, [r4, #40]	; 0x28
   18ae0:	ldr	r1, [r5, #8]
   18ae4:	adds	r2, r2, #1
   18ae8:	adc	r3, r3, #0
   18aec:	cmp	r1, #0
   18af0:	strd	r2, [r4, #40]	; 0x28
   18af4:	beq	18b8c <UnityFail@@Base+0x160>
   18af8:	ldrd	r2, [r4, #48]	; 0x30
   18afc:	ldr	r0, [pc, #272]	; 18c14 <UnityFail@@Base+0x1e8>
   18b00:	adds	r2, r2, #1
   18b04:	adc	r3, r3, #0
   18b08:	strd	r2, [r4, #48]	; 0x30
   18b0c:	bl	14b30 <UnityPrint@@Base>
   18b10:	ldrd	r2, [r4, #56]	; 0x38
   18b14:	ldr	r0, [r5, #8]
   18b18:	adds	r2, r2, #1
   18b1c:	adc	r3, r3, #0
   18b20:	strd	r2, [r4, #56]	; 0x38
   18b24:	bl	14b30 <UnityPrint@@Base>
   18b28:	ldrd	r2, [r4, #64]	; 0x40
   18b2c:	ldr	r1, [r5, #12]
   18b30:	adds	r2, r2, #1
   18b34:	adc	r3, r3, #0
   18b38:	cmp	r1, #0
   18b3c:	strd	r2, [r4, #64]	; 0x40
   18b40:	beq	18b84 <UnityFail@@Base+0x158>
   18b44:	ldrd	r2, [r4, #72]	; 0x48
   18b48:	ldr	r0, [pc, #200]	; 18c18 <UnityFail@@Base+0x1ec>
   18b4c:	adds	r2, r2, #1
   18b50:	adc	r3, r3, #0
   18b54:	strd	r2, [r4, #72]	; 0x48
   18b58:	bl	14b30 <UnityPrint@@Base>
   18b5c:	ldrd	r2, [r4, #80]	; 0x50
   18b60:	ldr	r0, [r5, #12]
   18b64:	adds	r2, r2, #1
   18b68:	adc	r3, r3, #0
   18b6c:	strd	r2, [r4, #80]	; 0x50
   18b70:	bl	14b30 <UnityPrint@@Base>
   18b74:	ldrd	r2, [r4, #88]	; 0x58
   18b78:	adds	r2, r2, #1
   18b7c:	adc	r3, r3, #0
   18b80:	strd	r2, [r4, #88]	; 0x58
   18b84:	ldr	r0, [pc, #144]	; 18c1c <UnityFail@@Base+0x1f0>
   18b88:	bl	14b30 <UnityPrint@@Base>
   18b8c:	ldrb	r3, [r6]
   18b90:	cmp	r3, #32
   18b94:	bne	18bd4 <UnityFail@@Base+0x1a8>
   18b98:	ldrd	r2, [r4, #104]	; 0x68
   18b9c:	adds	r2, r2, #1
   18ba0:	adc	r3, r3, #0
   18ba4:	strd	r2, [r4, #104]	; 0x68
   18ba8:	mov	r0, r6
   18bac:	bl	14b30 <UnityPrint@@Base>
   18bb0:	ldrd	r2, [r4, #120]	; 0x78
   18bb4:	adds	r2, r2, #1
   18bb8:	adc	r3, r3, #0
   18bbc:	strd	r2, [r4, #120]	; 0x78
   18bc0:	mov	r3, #1
   18bc4:	mov	r1, r3
   18bc8:	ldr	r0, [pc, #80]	; 18c20 <UnityFail@@Base+0x1f4>
   18bcc:	str	r3, [r5, #32]
   18bd0:	bl	11ff0 <longjmp@plt>
   18bd4:	ldrd	r2, [r4, #96]	; 0x60
   18bd8:	ldr	r1, [r7]
   18bdc:	mov	r0, #32
   18be0:	adds	r2, r2, #1
   18be4:	adc	r3, r3, #0
   18be8:	strd	r2, [r4, #96]	; 0x60
   18bec:	bl	12134 <putc@plt>
   18bf0:	ldrd	r2, [r4, #112]	; 0x70
   18bf4:	adds	r2, r2, #1
   18bf8:	adc	r3, r3, #0
   18bfc:	strd	r2, [r4, #112]	; 0x70
   18c00:	b	18ba8 <UnityFail@@Base+0x17c>
   18c04:	andeq	pc, r2, r0, asr pc	; <UNPREDICTABLE>
   18c08:	andeq	r0, r3, r0, ror #8
   18c0c:	muleq	r1, r8, r2
   18c10:	andeq	lr, r2, r4, asr #24
   18c14:	andeq	sp, r1, r0, lsl #5
   18c18:	andeq	sp, r1, ip, lsl #5
   18c1c:	andeq	sp, r1, ip, ror r2
   18c20:	andeq	r0, r3, r8, lsl #9

00018c24 <UnityIgnore@@Base>:
   18c24:	push	{r4, r5, r6, r7, r8, lr}
   18c28:	ldr	r4, [pc, #252]	; 18d2c <UnityIgnore@@Base+0x108>
   18c2c:	ldr	r5, [pc, #252]	; 18d30 <UnityIgnore@@Base+0x10c>
   18c30:	ldrd	r2, [r4]
   18c34:	ldr	ip, [r5, #32]
   18c38:	adds	r2, r2, #1
   18c3c:	adc	r3, r3, #0
   18c40:	cmp	ip, #0
   18c44:	strd	r2, [r4]
   18c48:	popne	{r4, r5, r6, r7, r8, pc}
   18c4c:	ldrd	r2, [r4, #8]
   18c50:	ldr	ip, [r5, #36]	; 0x24
   18c54:	adds	r2, r2, #1
   18c58:	adc	r3, r3, #0
   18c5c:	cmp	ip, #0
   18c60:	strd	r2, [r4, #8]
   18c64:	popne	{r4, r5, r6, r7, r8, pc}
   18c68:	ldrd	r2, [r4, #16]
   18c6c:	mov	r6, r0
   18c70:	ldr	r0, [r5]
   18c74:	adds	r2, r2, #1
   18c78:	adc	r3, r3, #0
   18c7c:	strd	r2, [r4, #16]
   18c80:	bl	15200 <UnityPrintNumber@@Base+0x248>
   18c84:	ldrd	r2, [r4, #24]
   18c88:	ldr	r0, [pc, #164]	; 18d34 <UnityIgnore@@Base+0x110>
   18c8c:	adds	r2, r2, #1
   18c90:	adc	r3, r3, #0
   18c94:	strd	r2, [r4, #24]
   18c98:	bl	14b30 <UnityPrint@@Base>
   18c9c:	ldrd	r2, [r4, #32]
   18ca0:	adds	r2, r2, #1
   18ca4:	adc	r3, r3, #0
   18ca8:	cmp	r6, #0
   18cac:	strd	r2, [r4, #32]
   18cb0:	beq	18d18 <UnityIgnore@@Base+0xf4>
   18cb4:	ldrd	r2, [r4, #40]	; 0x28
   18cb8:	ldr	r7, [pc, #120]	; 18d38 <UnityIgnore@@Base+0x114>
   18cbc:	mov	r0, #58	; 0x3a
   18cc0:	adds	r2, r2, #1
   18cc4:	adc	r3, r3, #0
   18cc8:	ldr	r1, [r7]
   18ccc:	strd	r2, [r4, #40]	; 0x28
   18cd0:	bl	12134 <putc@plt>
   18cd4:	ldrd	r2, [r4, #48]	; 0x30
   18cd8:	ldr	r1, [r7]
   18cdc:	mov	r0, #32
   18ce0:	adds	r2, r2, #1
   18ce4:	adc	r3, r3, #0
   18ce8:	strd	r2, [r4, #48]	; 0x30
   18cec:	bl	12134 <putc@plt>
   18cf0:	ldrd	r2, [r4, #56]	; 0x38
   18cf4:	mov	r0, r6
   18cf8:	adds	r2, r2, #1
   18cfc:	adc	r3, r3, #0
   18d00:	strd	r2, [r4, #56]	; 0x38
   18d04:	bl	14b30 <UnityPrint@@Base>
   18d08:	ldrd	r2, [r4, #64]	; 0x40
   18d0c:	adds	r2, r2, #1
   18d10:	adc	r3, r3, #0
   18d14:	strd	r2, [r4, #64]	; 0x40
   18d18:	mov	r3, #1
   18d1c:	mov	r1, r3
   18d20:	ldr	r0, [pc, #20]	; 18d3c <UnityIgnore@@Base+0x118>
   18d24:	str	r3, [r5, #36]	; 0x24
   18d28:	bl	11ff0 <longjmp@plt>
   18d2c:	ldrdeq	pc, [r2], -r0
   18d30:	andeq	r0, r3, r0, ror #8
   18d34:	andeq	sp, r1, ip, lsr #7
   18d38:	andeq	lr, r2, r4, asr #24
   18d3c:	andeq	r0, r3, r8, lsl #9

00018d40 <setUp@@Base>:
   18d40:	ldr	r1, [pc, #16]	; 18d58 <setUp@@Base+0x18>
   18d44:	ldrd	r2, [r1, #-8]
   18d48:	adds	r2, r2, #1
   18d4c:	adc	r3, r3, #0
   18d50:	strd	r2, [r1, #-8]
   18d54:	bx	lr
   18d58:	andeq	r0, r3, r0, lsr #32

00018d5c <tearDown@@Base>:
   18d5c:	ldr	r1, [pc, #16]	; 18d74 <tearDown@@Base+0x18>
   18d60:	ldrd	r2, [r1]
   18d64:	adds	r2, r2, #1
   18d68:	adc	r3, r3, #0
   18d6c:	strd	r2, [r1]
   18d70:	bx	lr
   18d74:	andeq	r0, r3, r0, lsr #32

00018d78 <UnityDefaultTestRun@@Base>:
   18d78:	ldr	ip, [pc, #300]	; 18eac <UnityDefaultTestRun@@Base+0x134>
   18d7c:	push	{r4, r5, lr}
   18d80:	sub	sp, sp, #12
   18d84:	ldrd	r4, [ip, #-8]
   18d88:	ldr	r3, [pc, #288]	; 18eb0 <UnityDefaultTestRun@@Base+0x138>
   18d8c:	str	r0, [sp, #4]
   18d90:	adds	r4, r4, #1
   18d94:	ldr	r0, [r3, #20]
   18d98:	adc	r5, r5, #0
   18d9c:	str	r1, [r3, #4]
   18da0:	strd	r4, [ip, #-8]
   18da4:	add	r1, r0, #1
   18da8:	mov	ip, #0
   18dac:	add	r0, r3, #40	; 0x28
   18db0:	str	r2, [r3, #16]
   18db4:	str	r1, [r3, #20]
   18db8:	str	ip, [r3, #8]
   18dbc:	str	ip, [r3, #12]
   18dc0:	bl	11ffc <_setjmp@plt>
   18dc4:	ldr	r4, [pc, #224]	; 18eac <UnityDefaultTestRun@@Base+0x134>
   18dc8:	ldrd	r2, [r4]
   18dcc:	adds	r2, r2, #1
   18dd0:	adc	r3, r3, #0
   18dd4:	strd	r2, [r4]
   18dd8:	cmp	r0, #0
   18ddc:	beq	18e44 <UnityDefaultTestRun@@Base+0xcc>
   18de0:	ldr	r0, [pc, #204]	; 18eb4 <UnityDefaultTestRun@@Base+0x13c>
   18de4:	bl	11ffc <_setjmp@plt>
   18de8:	ldr	r4, [pc, #188]	; 18eac <UnityDefaultTestRun@@Base+0x134>
   18dec:	ldrd	r2, [r4, #32]
   18df0:	adds	r2, r2, #1
   18df4:	adc	r3, r3, #0
   18df8:	strd	r2, [r4, #32]
   18dfc:	cmp	r0, #0
   18e00:	bne	18e24 <UnityDefaultTestRun@@Base+0xac>
   18e04:	ldrd	r2, [r4, #40]	; 0x28
   18e08:	ldr	r1, [pc, #160]	; 18eb0 <UnityDefaultTestRun@@Base+0x138>
   18e0c:	adds	r2, r2, #1
   18e10:	ldr	r1, [r1, #36]	; 0x24
   18e14:	adc	r3, r3, #0
   18e18:	cmp	r1, #0
   18e1c:	strd	r2, [r4, #40]	; 0x28
   18e20:	beq	18e84 <UnityDefaultTestRun@@Base+0x10c>
   18e24:	bl	15bfc <UnityConcludeTest@@Base>
   18e28:	ldr	r1, [pc, #124]	; 18eac <UnityDefaultTestRun@@Base+0x134>
   18e2c:	ldrd	r2, [r1, #64]	; 0x40
   18e30:	adds	r2, r2, #1
   18e34:	adc	r3, r3, #0
   18e38:	strd	r2, [r1, #64]	; 0x40
   18e3c:	add	sp, sp, #12
   18e40:	pop	{r4, r5, pc}
   18e44:	ldrd	r2, [r4, #8]
   18e48:	adds	r2, r2, #1
   18e4c:	adc	r3, r3, #0
   18e50:	strd	r2, [r4, #8]
   18e54:	bl	18d40 <setUp@@Base>
   18e58:	ldrd	r2, [r4, #16]
   18e5c:	adds	r2, r2, #1
   18e60:	adc	r3, r3, #0
   18e64:	strd	r2, [r4, #16]
   18e68:	ldr	r3, [sp, #4]
   18e6c:	blx	r3
   18e70:	ldrd	r2, [r4, #24]
   18e74:	adds	r2, r2, #1
   18e78:	adc	r3, r3, #0
   18e7c:	strd	r2, [r4, #24]
   18e80:	b	18de0 <UnityDefaultTestRun@@Base+0x68>
   18e84:	ldrd	r2, [r4, #48]	; 0x30
   18e88:	adds	r2, r2, #1
   18e8c:	adc	r3, r3, #0
   18e90:	strd	r2, [r4, #48]	; 0x30
   18e94:	bl	18d5c <tearDown@@Base>
   18e98:	ldrd	r2, [r4, #56]	; 0x38
   18e9c:	adds	r2, r2, #1
   18ea0:	adc	r3, r3, #0
   18ea4:	strd	r2, [r4, #56]	; 0x38
   18ea8:	b	18e24 <UnityDefaultTestRun@@Base+0xac>
   18eac:	andeq	r0, r3, r0, lsr r0
   18eb0:	andeq	r0, r3, r0, ror #8
   18eb4:	andeq	r0, r3, r8, lsl #9

00018eb8 <UnityBegin@@Base>:
   18eb8:	ldr	r1, [pc, #68]	; 18f04 <UnityBegin@@Base+0x4c>
   18ebc:	push	{r4, r5}
   18ec0:	mov	r2, #0
   18ec4:	ldrd	r4, [r1, #-8]
   18ec8:	ldr	r3, [pc, #56]	; 18f08 <UnityBegin@@Base+0x50>
   18ecc:	adds	r4, r4, #1
   18ed0:	adc	r5, r5, #0
   18ed4:	stm	r3, {r0, r2}
   18ed8:	strd	r4, [r1, #-8]
   18edc:	str	r2, [r3, #16]
   18ee0:	str	r2, [r3, #20]
   18ee4:	str	r2, [r3, #24]
   18ee8:	str	r2, [r3, #28]
   18eec:	str	r2, [r3, #32]
   18ef0:	str	r2, [r3, #36]	; 0x24
   18ef4:	str	r2, [r3, #8]
   18ef8:	str	r2, [r3, #12]
   18efc:	pop	{r4, r5}
   18f00:	bx	lr
   18f04:	andeq	r0, r3, r0, lsl #1
   18f08:	andeq	r0, r3, r0, ror #8

00018f0c <UnityEnd@@Base>:
   18f0c:	push	{r4, r5, r6, lr}
   18f10:	mov	r0, #10
   18f14:	ldr	r4, [pc, #384]	; 1909c <UnityEnd@@Base+0x190>
   18f18:	ldr	r6, [pc, #384]	; 190a0 <UnityEnd@@Base+0x194>
   18f1c:	ldr	r5, [pc, #384]	; 190a4 <UnityEnd@@Base+0x198>
   18f20:	ldrd	r2, [r4]
   18f24:	ldr	r1, [r6]
   18f28:	adds	r2, r2, #1
   18f2c:	adc	r3, r3, #0
   18f30:	strd	r2, [r4]
   18f34:	bl	12134 <putc@plt>
   18f38:	ldrd	r2, [r4, #8]
   18f3c:	ldr	r0, [pc, #356]	; 190a8 <UnityEnd@@Base+0x19c>
   18f40:	adds	r2, r2, #1
   18f44:	adc	r3, r3, #0
   18f48:	strd	r2, [r4, #8]
   18f4c:	bl	14b30 <UnityPrint@@Base>
   18f50:	ldrd	r2, [r4, #16]
   18f54:	ldr	r1, [r6]
   18f58:	mov	r0, #10
   18f5c:	adds	r2, r2, #1
   18f60:	adc	r3, r3, #0
   18f64:	strd	r2, [r4, #16]
   18f68:	bl	12134 <putc@plt>
   18f6c:	ldrd	r2, [r4, #24]
   18f70:	ldr	r0, [r5, #20]
   18f74:	adds	r2, r2, #1
   18f78:	adc	r3, r3, #0
   18f7c:	strd	r2, [r4, #24]
   18f80:	bl	14fb8 <UnityPrintNumber@@Base>
   18f84:	ldrd	r2, [r4, #32]
   18f88:	ldr	r0, [pc, #284]	; 190ac <UnityEnd@@Base+0x1a0>
   18f8c:	adds	r2, r2, #1
   18f90:	adc	r3, r3, #0
   18f94:	strd	r2, [r4, #32]
   18f98:	bl	14b30 <UnityPrint@@Base>
   18f9c:	ldrd	r2, [r4, #40]	; 0x28
   18fa0:	ldr	r0, [r5, #24]
   18fa4:	adds	r2, r2, #1
   18fa8:	adc	r3, r3, #0
   18fac:	strd	r2, [r4, #40]	; 0x28
   18fb0:	bl	14fb8 <UnityPrintNumber@@Base>
   18fb4:	ldrd	r2, [r4, #48]	; 0x30
   18fb8:	ldr	r0, [pc, #240]	; 190b0 <UnityEnd@@Base+0x1a4>
   18fbc:	adds	r2, r2, #1
   18fc0:	adc	r3, r3, #0
   18fc4:	strd	r2, [r4, #48]	; 0x30
   18fc8:	bl	14b30 <UnityPrint@@Base>
   18fcc:	ldrd	r2, [r4, #56]	; 0x38
   18fd0:	ldr	r0, [r5, #28]
   18fd4:	adds	r2, r2, #1
   18fd8:	adc	r3, r3, #0
   18fdc:	strd	r2, [r4, #56]	; 0x38
   18fe0:	bl	14fb8 <UnityPrintNumber@@Base>
   18fe4:	ldrd	r2, [r4, #64]	; 0x40
   18fe8:	ldr	r0, [pc, #196]	; 190b4 <UnityEnd@@Base+0x1a8>
   18fec:	adds	r2, r2, #1
   18ff0:	adc	r3, r3, #0
   18ff4:	strd	r2, [r4, #64]	; 0x40
   18ff8:	bl	14b30 <UnityPrint@@Base>
   18ffc:	ldrd	r2, [r4, #72]	; 0x48
   19000:	ldr	r1, [r6]
   19004:	mov	r0, #10
   19008:	adds	r2, r2, #1
   1900c:	adc	r3, r3, #0
   19010:	strd	r2, [r4, #72]	; 0x48
   19014:	bl	12134 <putc@plt>
   19018:	ldr	r3, [r5, #24]
   1901c:	cmp	r3, #0
   19020:	beq	19070 <UnityEnd@@Base+0x164>
   19024:	ldrd	r2, [r4, #88]	; 0x58
   19028:	ldr	r0, [pc, #136]	; 190b8 <UnityEnd@@Base+0x1ac>
   1902c:	adds	r2, r2, #1
   19030:	adc	r3, r3, #0
   19034:	strd	r2, [r4, #88]	; 0x58
   19038:	bl	14b30 <UnityPrint@@Base>
   1903c:	ldrd	r2, [r4, #104]	; 0x68
   19040:	adds	r2, r2, #1
   19044:	adc	r3, r3, #0
   19048:	strd	r2, [r4, #104]	; 0x68
   1904c:	ldr	r1, [r6]
   19050:	mov	r0, #10
   19054:	bl	12134 <putc@plt>
   19058:	ldrd	r2, [r4, #112]	; 0x70
   1905c:	ldr	r0, [r5, #24]
   19060:	adds	r2, r2, #1
   19064:	adc	r3, r3, #0
   19068:	strd	r2, [r4, #112]	; 0x70
   1906c:	pop	{r4, r5, r6, pc}
   19070:	ldrd	r2, [r4, #80]	; 0x50
   19074:	ldr	r0, [pc, #64]	; 190bc <UnityEnd@@Base+0x1b0>
   19078:	adds	r2, r2, #1
   1907c:	adc	r3, r3, #0
   19080:	strd	r2, [r4, #80]	; 0x50
   19084:	bl	14b30 <UnityPrint@@Base>
   19088:	ldrd	r2, [r4, #96]	; 0x60
   1908c:	adds	r2, r2, #1
   19090:	adc	r3, r3, #0
   19094:	strd	r2, [r4, #96]	; 0x60
   19098:	b	1904c <UnityEnd@@Base+0x140>
   1909c:	andeq	r0, r3, r0, lsl #1
   190a0:	andeq	lr, r2, r4, asr #24
   190a4:	andeq	r0, r3, r0, ror #8
   190a8:			; <UNDEFINED> instruction: 0x0001d3b4
   190ac:	andeq	sp, r1, ip, asr #7
   190b0:	ldrdeq	sp, [r1], -r4
   190b4:	andeq	sp, r1, r0, ror #7
   190b8:	muleq	r1, r8, r2
   190bc:	strdeq	sp, [r1], -r8

000190c0 <init_token_int_type@@Base>:
   190c0:	ldr	r1, [pc, #24]	; 190e0 <init_token_int_type@@Base+0x20>
   190c4:	mov	ip, #0
   190c8:	str	ip, [r0]
   190cc:	ldrd	r2, [r1]
   190d0:	adds	r2, r2, #1
   190d4:	adc	r3, r3, #0
   190d8:	strd	r2, [r1]
   190dc:	bx	lr
   190e0:	strdeq	r0, [r3], -r8

000190e4 <init_token_int_value@@Base>:
   190e4:	ldr	ip, [pc, #32]	; 1910c <init_token_int_value@@Base+0x28>
   190e8:	push	{lr}		; (str lr, [sp, #-4]!)
   190ec:	mov	lr, #1
   190f0:	ldrd	r2, [ip, #8]
   190f4:	str	r1, [r0, #4]
   190f8:	str	lr, [r0]
   190fc:	adds	r2, r2, #1
   19100:	adc	r3, r3, #0
   19104:	strd	r2, [ip, #8]
   19108:	pop	{pc}		; (ldr pc, [sp], #4)
   1910c:	strdeq	r0, [r3], -r8

00019110 <init_token_function@@Base>:
   19110:	ldr	ip, [pc, #32]	; 19138 <init_token_function@@Base+0x28>
   19114:	push	{lr}		; (str lr, [sp, #-4]!)
   19118:	mov	lr, #2
   1911c:	ldrd	r2, [ip, #16]
   19120:	str	r1, [r0, #4]
   19124:	str	lr, [r0]
   19128:	adds	r2, r2, #1
   1912c:	adc	r3, r3, #0
   19130:	strd	r2, [ip, #16]
   19134:	pop	{pc}		; (ldr pc, [sp], #4)
   19138:	strdeq	r0, [r3], -r8

0001913c <init_token_opar@@Base>:
   1913c:	ldr	r1, [pc, #24]	; 1915c <init_token_opar@@Base+0x20>
   19140:	mov	r3, #3
   19144:	str	r3, [r0]
   19148:	ldrd	r2, [r1, #24]
   1914c:	adds	r2, r2, #1
   19150:	adc	r3, r3, #0
   19154:	strd	r2, [r1, #24]
   19158:	bx	lr
   1915c:	strdeq	r0, [r3], -r8

00019160 <init_token_cpar@@Base>:
   19160:	ldr	r1, [pc, #24]	; 19180 <init_token_cpar@@Base+0x20>
   19164:	mov	r3, #4
   19168:	str	r3, [r0]
   1916c:	ldrd	r2, [r1, #32]
   19170:	adds	r2, r2, #1
   19174:	adc	r3, r3, #0
   19178:	strd	r2, [r1, #32]
   1917c:	bx	lr
   19180:	strdeq	r0, [r3], -r8

00019184 <init_token_obra@@Base>:
   19184:	ldr	r1, [pc, #24]	; 191a4 <init_token_obra@@Base+0x20>
   19188:	mov	r3, #5
   1918c:	str	r3, [r0]
   19190:	ldrd	r2, [r1, #40]	; 0x28
   19194:	adds	r2, r2, #1
   19198:	adc	r3, r3, #0
   1919c:	strd	r2, [r1, #40]	; 0x28
   191a0:	bx	lr
   191a4:	strdeq	r0, [r3], -r8

000191a8 <init_token_cbra@@Base>:
   191a8:	ldr	r1, [pc, #24]	; 191c8 <init_token_cbra@@Base+0x20>
   191ac:	mov	r3, #6
   191b0:	str	r3, [r0]
   191b4:	ldrd	r2, [r1, #48]	; 0x30
   191b8:	adds	r2, r2, #1
   191bc:	adc	r3, r3, #0
   191c0:	strd	r2, [r1, #48]	; 0x30
   191c4:	bx	lr
   191c8:	strdeq	r0, [r3], -r8

000191cc <init_token_return@@Base>:
   191cc:	ldr	r1, [pc, #24]	; 191ec <init_token_return@@Base+0x20>
   191d0:	mov	r3, #7
   191d4:	str	r3, [r0]
   191d8:	ldrd	r2, [r1, #56]	; 0x38
   191dc:	adds	r2, r2, #1
   191e0:	adc	r3, r3, #0
   191e4:	strd	r2, [r1, #56]	; 0x38
   191e8:	bx	lr
   191ec:	strdeq	r0, [r3], -r8

000191f0 <init_token_semicolon@@Base>:
   191f0:	ldr	r1, [pc, #24]	; 19210 <init_token_semicolon@@Base+0x20>
   191f4:	mov	r3, #8
   191f8:	str	r3, [r0]
   191fc:	ldrd	r2, [r1, #64]	; 0x40
   19200:	adds	r2, r2, #1
   19204:	adc	r3, r3, #0
   19208:	strd	r2, [r1, #64]	; 0x40
   1920c:	bx	lr
   19210:	strdeq	r0, [r3], -r8

00019214 <init_token_eof@@Base>:
   19214:	ldr	r1, [pc, #24]	; 19234 <init_token_eof@@Base+0x20>
   19218:	mov	r3, #9
   1921c:	str	r3, [r0]
   19220:	ldrd	r2, [r1, #72]	; 0x48
   19224:	adds	r2, r2, #1
   19228:	adc	r3, r3, #0
   1922c:	strd	r2, [r1, #72]	; 0x48
   19230:	bx	lr
   19234:	strdeq	r0, [r3], -r8

00019238 <init_token_if@@Base>:
   19238:	ldr	r1, [pc, #24]	; 19258 <init_token_if@@Base+0x20>
   1923c:	mov	r3, #10
   19240:	str	r3, [r0]
   19244:	ldrd	r2, [r1, #80]	; 0x50
   19248:	adds	r2, r2, #1
   1924c:	adc	r3, r3, #0
   19250:	strd	r2, [r1, #80]	; 0x50
   19254:	bx	lr
   19258:	strdeq	r0, [r3], -r8

0001925c <init_token_else@@Base>:
   1925c:	ldr	r1, [pc, #24]	; 1927c <init_token_else@@Base+0x20>
   19260:	mov	r3, #11
   19264:	str	r3, [r0]
   19268:	ldrd	r2, [r1, #88]	; 0x58
   1926c:	adds	r2, r2, #1
   19270:	adc	r3, r3, #0
   19274:	strd	r2, [r1, #88]	; 0x58
   19278:	bx	lr
   1927c:	strdeq	r0, [r3], -r8

00019280 <init_token_boolean_op@@Base>:
   19280:	ldr	ip, [pc, #32]	; 192a8 <init_token_boolean_op@@Base+0x28>
   19284:	push	{lr}		; (str lr, [sp, #-4]!)
   19288:	mov	lr, #12
   1928c:	ldrd	r2, [ip, #96]	; 0x60
   19290:	str	r1, [r0, #4]
   19294:	str	lr, [r0]
   19298:	adds	r2, r2, #1
   1929c:	adc	r3, r3, #0
   192a0:	strd	r2, [ip, #96]	; 0x60
   192a4:	pop	{pc}		; (ldr pc, [sp], #4)
   192a8:	strdeq	r0, [r3], -r8

000192ac <free_token_int_type@@Base>:
   192ac:	ldr	r1, [pc, #16]	; 192c4 <free_token_int_type@@Base+0x18>
   192b0:	ldrd	r2, [r1, #104]	; 0x68
   192b4:	adds	r2, r2, #1
   192b8:	adc	r3, r3, #0
   192bc:	strd	r2, [r1, #104]	; 0x68
   192c0:	b	12008 <free@plt>
   192c4:	strdeq	r0, [r3], -r8

000192c8 <free_token_int_value@@Base>:
   192c8:	ldr	r1, [pc, #16]	; 192e0 <free_token_int_value@@Base+0x18>
   192cc:	ldrd	r2, [r1, #112]	; 0x70
   192d0:	adds	r2, r2, #1
   192d4:	adc	r3, r3, #0
   192d8:	strd	r2, [r1, #112]	; 0x70
   192dc:	b	12008 <free@plt>
   192e0:	strdeq	r0, [r3], -r8

000192e4 <free_token_function@@Base>:
   192e4:	ldr	r1, [pc, #16]	; 192fc <free_token_function@@Base+0x18>
   192e8:	ldrd	r2, [r1, #120]	; 0x78
   192ec:	adds	r2, r2, #1
   192f0:	adc	r3, r3, #0
   192f4:	strd	r2, [r1, #120]	; 0x78
   192f8:	b	12008 <free@plt>
   192fc:	strdeq	r0, [r3], -r8

00019300 <free_token_opar@@Base>:
   19300:	ldr	r1, [pc, #16]	; 19318 <free_token_opar@@Base+0x18>
   19304:	ldrd	r2, [r1, #128]	; 0x80
   19308:	adds	r2, r2, #1
   1930c:	adc	r3, r3, #0
   19310:	strd	r2, [r1, #128]	; 0x80
   19314:	b	12008 <free@plt>
   19318:	strdeq	r0, [r3], -r8

0001931c <free_token_cpar@@Base>:
   1931c:	ldr	r1, [pc, #16]	; 19334 <free_token_cpar@@Base+0x18>
   19320:	ldrd	r2, [r1, #136]	; 0x88
   19324:	adds	r2, r2, #1
   19328:	adc	r3, r3, #0
   1932c:	strd	r2, [r1, #136]	; 0x88
   19330:	b	12008 <free@plt>
   19334:	strdeq	r0, [r3], -r8

00019338 <free_token_obra@@Base>:
   19338:	ldr	r1, [pc, #16]	; 19350 <free_token_obra@@Base+0x18>
   1933c:	ldrd	r2, [r1, #144]	; 0x90
   19340:	adds	r2, r2, #1
   19344:	adc	r3, r3, #0
   19348:	strd	r2, [r1, #144]	; 0x90
   1934c:	b	12008 <free@plt>
   19350:	strdeq	r0, [r3], -r8

00019354 <free_token_cbra@@Base>:
   19354:	ldr	r1, [pc, #16]	; 1936c <free_token_cbra@@Base+0x18>
   19358:	ldrd	r2, [r1, #152]	; 0x98
   1935c:	adds	r2, r2, #1
   19360:	adc	r3, r3, #0
   19364:	strd	r2, [r1, #152]	; 0x98
   19368:	b	12008 <free@plt>
   1936c:	strdeq	r0, [r3], -r8

00019370 <free_token_return@@Base>:
   19370:	ldr	r1, [pc, #16]	; 19388 <free_token_return@@Base+0x18>
   19374:	ldrd	r2, [r1, #160]	; 0xa0
   19378:	adds	r2, r2, #1
   1937c:	adc	r3, r3, #0
   19380:	strd	r2, [r1, #160]	; 0xa0
   19384:	b	12008 <free@plt>
   19388:	strdeq	r0, [r3], -r8

0001938c <free_token_semicolon@@Base>:
   1938c:	ldr	r1, [pc, #16]	; 193a4 <free_token_semicolon@@Base+0x18>
   19390:	ldrd	r2, [r1, #168]	; 0xa8
   19394:	adds	r2, r2, #1
   19398:	adc	r3, r3, #0
   1939c:	strd	r2, [r1, #168]	; 0xa8
   193a0:	b	12008 <free@plt>
   193a4:	strdeq	r0, [r3], -r8

000193a8 <free_token_eof@@Base>:
   193a8:	ldr	r1, [pc, #16]	; 193c0 <free_token_eof@@Base+0x18>
   193ac:	ldrd	r2, [r1, #176]	; 0xb0
   193b0:	adds	r2, r2, #1
   193b4:	adc	r3, r3, #0
   193b8:	strd	r2, [r1, #176]	; 0xb0
   193bc:	b	12008 <free@plt>
   193c0:	strdeq	r0, [r3], -r8

000193c4 <free_token_if@@Base>:
   193c4:	ldr	r1, [pc, #16]	; 193dc <free_token_if@@Base+0x18>
   193c8:	ldrd	r2, [r1, #184]	; 0xb8
   193cc:	adds	r2, r2, #1
   193d0:	adc	r3, r3, #0
   193d4:	strd	r2, [r1, #184]	; 0xb8
   193d8:	b	12008 <free@plt>
   193dc:	strdeq	r0, [r3], -r8

000193e0 <free_token_else@@Base>:
   193e0:	ldr	r1, [pc, #16]	; 193f8 <free_token_else@@Base+0x18>
   193e4:	ldrd	r2, [r1, #192]	; 0xc0
   193e8:	adds	r2, r2, #1
   193ec:	adc	r3, r3, #0
   193f0:	strd	r2, [r1, #192]	; 0xc0
   193f4:	b	12008 <free@plt>
   193f8:	strdeq	r0, [r3], -r8

000193fc <free_token_boolean_op@@Base>:
   193fc:	push	{r4, r5, r6, lr}
   19400:	mov	r5, r0
   19404:	ldr	r4, [pc, #56]	; 19444 <free_token_boolean_op@@Base+0x48>
   19408:	ldr	r0, [r0, #4]
   1940c:	ldrd	r2, [r4, #200]	; 0xc8
   19410:	adds	r2, r2, #1
   19414:	adc	r3, r3, #0
   19418:	cmp	r0, #0
   1941c:	strd	r2, [r4, #200]	; 0xc8
   19420:	beq	19438 <free_token_boolean_op@@Base+0x3c>
   19424:	bl	12008 <free@plt>
   19428:	ldrd	r2, [r4, #208]	; 0xd0
   1942c:	adds	r2, r2, #1
   19430:	adc	r3, r3, #0
   19434:	strd	r2, [r4, #208]	; 0xd0
   19438:	mov	r0, r5
   1943c:	pop	{r4, r5, r6, lr}
   19440:	b	12008 <free@plt>
   19444:	strdeq	r0, [r3], -r8

00019448 <init_lexer@@Base>:
   19448:	ldr	ip, [pc, #32]	; 19470 <init_lexer@@Base+0x28>
   1944c:	push	{lr}		; (str lr, [sp, #-4]!)
   19450:	mov	lr, #0
   19454:	ldrd	r2, [ip]
   19458:	stm	r0, {r1, lr}
   1945c:	str	lr, [r0, #8]
   19460:	adds	r2, r2, #1
   19464:	adc	r3, r3, #0
   19468:	strd	r2, [ip]
   1946c:	pop	{pc}		; (ldr pc, [sp], #4)
   19470:	ldrdeq	r0, [r3], -r0	; <UNPREDICTABLE>

00019474 <destroy_lexer@@Base>:
   19474:	push	{r4, lr}
   19478:	ldr	r4, [pc, #48]	; 194b0 <destroy_lexer@@Base+0x3c>
   1947c:	ldr	r0, [r0, #4]
   19480:	ldrd	r2, [r4, #8]
   19484:	adds	r2, r2, #1
   19488:	adc	r3, r3, #0
   1948c:	cmp	r0, #0
   19490:	strd	r2, [r4, #8]
   19494:	popeq	{r4, pc}
   19498:	bl	12008 <free@plt>
   1949c:	ldrd	r2, [r4, #16]
   194a0:	adds	r2, r2, #1
   194a4:	adc	r3, r3, #0
   194a8:	strd	r2, [r4, #16]
   194ac:	pop	{r4, pc}
   194b0:	ldrdeq	r0, [r3], -r0	; <UNPREDICTABLE>

000194b4 <free_stack_base@@Base>:
   194b4:	ldr	r1, [pc, #16]	; 194cc <free_stack_base@@Base+0x18>
   194b8:	ldrd	r2, [r1, #24]
   194bc:	adds	r2, r2, #1
   194c0:	adc	r3, r3, #0
   194c4:	strd	r2, [r1, #24]
   194c8:	b	12008 <free@plt>
   194cc:	ldrdeq	r0, [r3], -r0	; <UNPREDICTABLE>

000194d0 <push_back@@Base>:
   194d0:	ldr	ip, [pc, #48]	; 19508 <push_back@@Base+0x38>
   194d4:	push	{r4, r5, r6, lr}
   194d8:	mov	r4, r0
   194dc:	ldrd	r2, [ip, #32]
   194e0:	mov	r0, #8
   194e4:	mov	r5, r1
   194e8:	adds	r2, r2, #1
   194ec:	adc	r3, r3, #0
   194f0:	strd	r2, [ip, #32]
   194f4:	bl	1205c <malloc@plt>
   194f8:	ldr	r3, [r4, #4]
   194fc:	str	r0, [r4, #4]
   19500:	stm	r0, {r3, r5}
   19504:	pop	{r4, r5, r6, pc}
   19508:	ldrdeq	r0, [r3], -r0	; <UNPREDICTABLE>

0001950c <get_char@@Base>:
   1950c:	ldr	ip, [pc, #40]	; 1953c <get_char@@Base+0x30>
   19510:	push	{r4, lr}
   19514:	ldrd	r2, [ip, #40]	; 0x28
   19518:	ldr	r1, [r0, #8]
   1951c:	ldr	lr, [r0]
   19520:	adds	r2, r2, #1
   19524:	adc	r3, r3, #0
   19528:	add	r4, r1, #1
   1952c:	str	r4, [r0, #8]
   19530:	strd	r2, [ip, #40]	; 0x28
   19534:	ldrb	r0, [lr, r1]
   19538:	pop	{r4, pc}
   1953c:	ldrdeq	r0, [r3], -r0	; <UNPREDICTABLE>

00019540 <push_back_chars@@Base>:
   19540:	ldr	r3, [r0, #8]
   19544:	cmp	r3, r1
   19548:	bcc	1956c <push_back_chars@@Base+0x2c>
   1954c:	ldr	ip, [pc, #96]	; 195b4 <push_back_chars@@Base+0x74>
   19550:	sub	r3, r3, r1
   19554:	str	r3, [r0, #8]
   19558:	ldrd	r2, [ip, #48]	; 0x30
   1955c:	adds	r2, r2, #1
   19560:	adc	r3, r3, #0
   19564:	strd	r2, [ip, #48]	; 0x30
   19568:	bx	lr
   1956c:	push	{r4, r6, r7, lr}
   19570:	mov	r2, #32
   19574:	ldr	r4, [pc, #56]	; 195b4 <push_back_chars@@Base+0x74>
   19578:	ldr	r3, [pc, #56]	; 195b8 <push_back_chars@@Base+0x78>
   1957c:	mov	r1, #1
   19580:	ldrd	r6, [r4, #56]	; 0x38
   19584:	ldr	r3, [r3]
   19588:	ldr	r0, [pc, #44]	; 195bc <push_back_chars@@Base+0x7c>
   1958c:	adds	r6, r6, #1
   19590:	adc	r7, r7, #0
   19594:	strd	r6, [r4, #56]	; 0x38
   19598:	bl	1202c <fwrite@plt>
   1959c:	ldrd	r2, [r4, #64]	; 0x40
   195a0:	mov	r0, #1
   195a4:	adds	r2, r2, #1
   195a8:	adc	r3, r3, #0
   195ac:	strd	r2, [r4, #64]	; 0x40
   195b0:	bl	120a4 <exit@plt>
   195b4:	ldrdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   195b8:	andeq	lr, r2, r0, asr #24
   195bc:	andeq	sp, r1, ip, lsr r5

000195c0 <push_back_one_char@@Base>:
   195c0:	push	{r4, r6, r7, lr}
   195c4:	ldr	r4, [pc, #132]	; 19650 <push_back_one_char@@Base+0x90>
   195c8:	ldr	r1, [r0, #8]
   195cc:	ldrd	r2, [r4, #72]	; 0x48
   195d0:	adds	r2, r2, #1
   195d4:	adc	r3, r3, #0
   195d8:	cmp	r1, #0
   195dc:	strd	r2, [r4, #72]	; 0x48
   195e0:	beq	19610 <push_back_one_char@@Base+0x50>
   195e4:	ldrd	r6, [r4, #48]	; 0x30
   195e8:	ldrd	r2, [r4, #80]	; 0x50
   195ec:	sub	r1, r1, #1
   195f0:	adds	r6, r6, #1
   195f4:	adc	r7, r7, #0
   195f8:	adds	r2, r2, #1
   195fc:	adc	r3, r3, #0
   19600:	str	r1, [r0, #8]
   19604:	strd	r6, [r4, #48]	; 0x30
   19608:	strd	r2, [r4, #80]	; 0x50
   1960c:	pop	{r4, r6, r7, pc}
   19610:	ldrd	r6, [r4, #56]	; 0x38
   19614:	ldr	r3, [pc, #56]	; 19654 <push_back_one_char@@Base+0x94>
   19618:	mov	r2, #32
   1961c:	adds	r6, r6, #1
   19620:	adc	r7, r7, #0
   19624:	ldr	r3, [r3]
   19628:	mov	r1, #1
   1962c:	ldr	r0, [pc, #36]	; 19658 <push_back_one_char@@Base+0x98>
   19630:	strd	r6, [r4, #56]	; 0x38
   19634:	bl	1202c <fwrite@plt>
   19638:	ldrd	r2, [r4, #64]	; 0x40
   1963c:	mov	r0, #1
   19640:	adds	r2, r2, #1
   19644:	adc	r3, r3, #0
   19648:	strd	r2, [r4, #64]	; 0x40
   1964c:	bl	120a4 <exit@plt>
   19650:	ldrdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   19654:	andeq	lr, r2, r0, asr #24
   19658:	andeq	sp, r1, ip, lsr r5

0001965c <next@@Base>:
   1965c:	ldr	r1, [r0, #4]
   19660:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19664:	cmp	r1, #0
   19668:	sub	sp, sp, #620	; 0x26c
   1966c:	mov	r7, r0
   19670:	beq	196a8 <next@@Base+0x4c>
   19674:	ldr	r3, [r1]
   19678:	mov	r0, r1
   1967c:	str	r3, [r7, #4]
   19680:	ldr	r4, [r1, #4]
   19684:	bl	12008 <free@plt>
   19688:	ldr	r1, [pc, #2924]	; 1a1fc <next@@Base+0xba0>
   1968c:	mov	r0, r4
   19690:	ldrd	r2, [r1, #88]	; 0x58
   19694:	adds	r2, r2, #1
   19698:	adc	r3, r3, #0
   1969c:	strd	r2, [r1, #88]	; 0x58
   196a0:	add	sp, sp, #620	; 0x26c
   196a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   196a8:	ldr	fp, [pc, #2892]	; 1a1fc <next@@Base+0xba0>
   196ac:	ldr	lr, [r0, #8]
   196b0:	add	r3, fp, #624	; 0x270
   196b4:	add	r2, fp, #608	; 0x260
   196b8:	ldrd	r8, [r3, #-8]
   196bc:	ldr	ip, [r0]
   196c0:	mov	sl, r1
   196c4:	mov	r4, r8
   196c8:	mov	r5, r9
   196cc:	ldrd	r8, [r2]
   196d0:	strd	r4, [sp]
   196d4:	mov	r2, lr
   196d8:	subs	r4, r8, r4
   196dc:	sbc	r5, r9, r5
   196e0:	add	lr, lr, #1
   196e4:	strd	r4, [sp, #16]
   196e8:	ldrd	r4, [r3]
   196ec:	str	lr, [r7, #8]
   196f0:	mov	r8, r1
   196f4:	strd	r4, [sp, #8]
   196f8:	ldrd	r4, [fp, #96]	; 0x60
   196fc:	ldrb	r6, [ip, r2]
   19700:	mov	r9, r1
   19704:	strd	r4, [sp, #40]	; 0x28
   19708:	ldrd	r4, [fp, #224]	; 0xe0
   1970c:	mov	r2, r1
   19710:	str	r1, [sp, #100]	; 0x64
   19714:	strd	r4, [sp, #80]	; 0x50
   19718:	ldrd	r4, [fp, #216]	; 0xd8
   1971c:	str	r1, [sp, #96]	; 0x60
   19720:	str	r1, [sp, #92]	; 0x5c
   19724:	strd	r4, [sp, #72]	; 0x48
   19728:	ldrd	r4, [fp, #208]	; 0xd0
   1972c:	str	r1, [sp, #28]
   19730:	str	r1, [sp, #88]	; 0x58
   19734:	strd	r4, [sp, #64]	; 0x40
   19738:	ldrd	r4, [fp, #200]	; 0xc8
   1973c:	strd	r4, [sp, #56]	; 0x38
   19740:	ldrd	r4, [fp, #112]	; 0x70
   19744:	strd	r4, [sp, #48]	; 0x30
   19748:	ldrd	r0, [sp]
   1974c:	ldrd	r4, [sp, #16]
   19750:	adds	r4, r4, r0
   19754:	adc	r5, r5, r1
   19758:	strd	r4, [sp, #32]
   1975c:	adds	r4, r0, #1
   19760:	adc	r5, r1, #0
   19764:	cmp	r6, #0
   19768:	strd	r4, [sp]
   1976c:	beq	19ec8 <next@@Base+0x86c>
   19770:	ldrd	r0, [sp, #8]
   19774:	sub	r9, r9, #1
   19778:	adds	r0, r0, #1
   1977c:	adc	r1, r1, #0
   19780:	strd	r0, [sp, #8]
   19784:	cmp	r9, #4
   19788:	ldrls	pc, [pc, r9, lsl #2]
   1978c:	b	19c8c <next@@Base+0x630>
   19790:	strdeq	r9, [r1], -r8
   19794:	andeq	r9, r1, r4, lsr #20
   19798:	andeq	r9, r1, r8, ror #17
   1979c:	andeq	r9, r1, r4, lsr #15
   197a0:	andeq	r9, r1, ip, lsr #26
   197a4:	ldrd	r4, [sp, #8]
   197a8:	cmp	r2, #0
   197ac:	ldr	r1, [sp, #28]
   197b0:	ldr	r0, [sp, #88]	; 0x58
   197b4:	strd	r4, [r3]
   197b8:	bne	1a638 <next@@Base+0xfdc>
   197bc:	ldr	r2, [sp, #92]	; 0x5c
   197c0:	cmp	r2, #0
   197c4:	bne	1a644 <next@@Base+0xfe8>
   197c8:	ldr	r2, [sp, #96]	; 0x60
   197cc:	cmp	r2, #0
   197d0:	ldrdne	r4, [sp, #56]	; 0x38
   197d4:	strdne	r4, [fp, #200]	; 0xc8
   197d8:	ldr	r2, [sp, #100]	; 0x64
   197dc:	cmp	r2, #0
   197e0:	ldrdne	r4, [sp, #64]	; 0x40
   197e4:	strdne	r4, [fp, #208]	; 0xd0
   197e8:	cmp	sl, #0
   197ec:	ldrdne	r4, [sp, #72]	; 0x48
   197f0:	strdne	r4, [fp, #216]	; 0xd8
   197f4:	cmp	r0, #0
   197f8:	ldrdne	r4, [sp, #80]	; 0x50
   197fc:	strdne	r4, [fp, #224]	; 0xe0
   19800:	cmp	r8, #0
   19804:	ldrdne	r4, [sp, #32]
   19808:	ldrne	r2, [pc, #2592]	; 1a230 <next@@Base+0xbd4>
   1980c:	strdne	r4, [r2]
   19810:	ldrd	r4, [sp]
   19814:	cmp	r6, #101	; 0x65
   19818:	strd	r4, [r3, #-8]
   1981c:	ldrne	r1, [pc, #2524]	; 1a200 <next@@Base+0xba4>
   19820:	bne	1a138 <next@@Base+0xadc>
   19824:	add	r3, sp, #616	; 0x268
   19828:	add	r3, r3, r1
   1982c:	add	r2, lr, #1
   19830:	strb	r6, [r3, #-512]	; 0xfffffe00
   19834:	str	r2, [r7, #8]
   19838:	ldrb	r4, [ip, lr]
   1983c:	add	r3, r1, #1
   19840:	cmp	r4, #116	; 0x74
   19844:	ldrne	r1, [pc, #2488]	; 1a204 <next@@Base+0xba8>
   19848:	bne	1a110 <next@@Base+0xab4>
   1984c:	add	r0, sp, #616	; 0x268
   19850:	add	r3, r0, r3
   19854:	add	r0, lr, #2
   19858:	strb	r4, [r3, #-512]	; 0xfffffe00
   1985c:	str	r0, [r7, #8]
   19860:	ldrb	r4, [ip, r2]
   19864:	add	r3, r1, #2
   19868:	cmp	r4, #117	; 0x75
   1986c:	ldrne	r1, [pc, #2448]	; 1a204 <next@@Base+0xba8>
   19870:	bne	1a138 <next@@Base+0xadc>
   19874:	add	r2, sp, #616	; 0x268
   19878:	add	r3, r2, r3
   1987c:	add	r2, lr, #3
   19880:	strb	r4, [r3, #-512]	; 0xfffffe00
   19884:	str	r2, [r7, #8]
   19888:	ldrb	r0, [ip, r0]
   1988c:	add	r3, r1, #3
   19890:	cmp	r0, #114	; 0x72
   19894:	ldrne	r1, [pc, #2412]	; 1a208 <next@@Base+0xbac>
   19898:	bne	1a110 <next@@Base+0xab4>
   1989c:	add	r1, sp, #616	; 0x268
   198a0:	add	r3, r1, r3
   198a4:	add	lr, lr, #4
   198a8:	strb	r0, [r3, #-512]	; 0xfffffe00
   198ac:	str	lr, [r7, #8]
   198b0:	ldrb	r3, [ip, r2]
   198b4:	cmp	r3, #110	; 0x6e
   198b8:	ldrne	r1, [pc, #2376]	; 1a208 <next@@Base+0xbac>
   198bc:	bne	1a138 <next@@Base+0xadc>
   198c0:	ldr	r4, [pc, #2372]	; 1a20c <next@@Base+0xbb0>
   198c4:	mov	r0, #4
   198c8:	ldrd	r2, [r4, #-8]
   198cc:	adds	r2, r2, #1
   198d0:	adc	r3, r3, #0
   198d4:	strd	r2, [r4, #-8]
   198d8:	bl	1205c <malloc@plt>
   198dc:	mov	r5, r0
   198e0:	bl	191cc <init_token_return@@Base>
   198e4:	b	19f64 <next@@Base+0x908>
   198e8:	ldrd	r4, [sp, #8]
   198ec:	cmp	r2, #0
   198f0:	ldr	r1, [sp, #28]
   198f4:	ldr	r0, [sp, #88]	; 0x58
   198f8:	strd	r4, [r3]
   198fc:	bne	1a62c <next@@Base+0xfd0>
   19900:	ldr	r2, [sp, #92]	; 0x5c
   19904:	cmp	r2, #0
   19908:	ldrdne	r4, [sp, #48]	; 0x30
   1990c:	strdne	r4, [fp, #112]	; 0x70
   19910:	ldr	r2, [sp, #96]	; 0x60
   19914:	cmp	r2, #0
   19918:	ldrdne	r4, [sp, #56]	; 0x38
   1991c:	strdne	r4, [fp, #200]	; 0xc8
   19920:	ldr	r2, [sp, #100]	; 0x64
   19924:	cmp	r2, #0
   19928:	ldrdne	r4, [sp, #64]	; 0x40
   1992c:	strdne	r4, [fp, #208]	; 0xd0
   19930:	cmp	sl, #0
   19934:	ldrdne	r4, [sp, #72]	; 0x48
   19938:	strdne	r4, [fp, #216]	; 0xd8
   1993c:	cmp	r0, #0
   19940:	ldrdne	r4, [sp, #80]	; 0x50
   19944:	strdne	r4, [fp, #224]	; 0xe0
   19948:	cmp	r8, #0
   1994c:	ldrdne	r4, [sp, #32]
   19950:	ldrne	r2, [pc, #2264]	; 1a230 <next@@Base+0xbd4>
   19954:	strdne	r4, [r2]
   19958:	ldrd	r4, [sp]
   1995c:	cmp	r6, #97	; 0x61
   19960:	strd	r4, [r3, #-8]
   19964:	ldrne	r1, [pc, #2212]	; 1a210 <next@@Base+0xbb4>
   19968:	bne	1a110 <next@@Base+0xab4>
   1996c:	add	r3, sp, #616	; 0x268
   19970:	add	r3, r3, r1
   19974:	add	r2, lr, #1
   19978:	strb	r6, [r3, #-512]	; 0xfffffe00
   1997c:	str	r2, [r7, #8]
   19980:	ldrb	r0, [ip, lr]
   19984:	add	r3, r1, #1
   19988:	cmp	r0, #105	; 0x69
   1998c:	ldrne	r1, [pc, #2172]	; 1a210 <next@@Base+0xbb4>
   19990:	bne	1a138 <next@@Base+0xadc>
   19994:	add	r4, sp, #616	; 0x268
   19998:	add	r3, r4, r3
   1999c:	add	lr, lr, #2
   199a0:	strb	r0, [r3, #-512]	; 0xfffffe00
   199a4:	str	lr, [r7, #8]
   199a8:	ldrb	lr, [ip, r2]
   199ac:	add	ip, r1, #2
   199b0:	cmp	lr, #110	; 0x6e
   199b4:	ldrne	r1, [pc, #2136]	; 1a214 <next@@Base+0xbb8>
   199b8:	bne	1a110 <next@@Base+0xab4>
   199bc:	ldr	r4, [pc, #2128]	; 1a214 <next@@Base+0xbb8>
   199c0:	add	r3, sp, #616	; 0x268
   199c4:	add	ip, r3, ip
   199c8:	ldrd	r2, [r4]
   199cc:	add	r5, r1, #3
   199d0:	add	r0, sp, #616	; 0x268
   199d4:	adds	r2, r2, #1
   199d8:	adc	r3, r3, #0
   199dc:	add	r6, r0, r5
   199e0:	mov	r7, #0
   199e4:	add	r0, r1, #4
   199e8:	strb	lr, [ip, #-512]	; 0xfffffe00
   199ec:	strd	r2, [r4], #16
   199f0:	strb	r7, [r6, #-512]	; 0xfffffe00
   199f4:	bl	1205c <malloc@plt>
   199f8:	mov	r2, r5
   199fc:	add	r1, sp, #104	; 0x68
   19a00:	mov	r6, r0
   19a04:	bl	12104 <strncpy@plt>
   19a08:	strb	r7, [r6, r5]
   19a0c:	mov	r0, #8
   19a10:	bl	1205c <malloc@plt>
   19a14:	mov	r1, r6
   19a18:	mov	r5, r0
   19a1c:	bl	19110 <init_token_function@@Base>
   19a20:	b	1a740 <next@@Base+0x10e4>
   19a24:	ldrd	r4, [sp, #8]
   19a28:	cmp	r2, #0
   19a2c:	ldr	r1, [sp, #28]
   19a30:	ldr	r0, [sp, #88]	; 0x58
   19a34:	strd	r4, [r3]
   19a38:	bne	1a984 <next@@Base+0x1328>
   19a3c:	ldr	r2, [sp, #92]	; 0x5c
   19a40:	cmp	r2, #0
   19a44:	ldrdne	r4, [sp, #48]	; 0x30
   19a48:	strdne	r4, [fp, #112]	; 0x70
   19a4c:	ldr	r2, [sp, #96]	; 0x60
   19a50:	cmp	r2, #0
   19a54:	ldrdne	r4, [sp, #56]	; 0x38
   19a58:	strdne	r4, [fp, #200]	; 0xc8
   19a5c:	ldr	r2, [sp, #100]	; 0x64
   19a60:	cmp	r2, #0
   19a64:	ldrdne	r4, [sp, #64]	; 0x40
   19a68:	strdne	r4, [fp, #208]	; 0xd0
   19a6c:	cmp	sl, #0
   19a70:	ldrdne	r4, [sp, #72]	; 0x48
   19a74:	strdne	r4, [fp, #216]	; 0xd8
   19a78:	cmp	r0, #0
   19a7c:	ldrdne	r4, [sp, #80]	; 0x50
   19a80:	strdne	r4, [fp, #224]	; 0xe0
   19a84:	cmp	r8, #0
   19a88:	ldrdne	r4, [sp, #32]
   19a8c:	ldrne	r2, [pc, #1948]	; 1a230 <next@@Base+0xbd4>
   19a90:	strdne	r4, [r2]
   19a94:	ldrd	r4, [sp]
   19a98:	cmp	r6, #102	; 0x66
   19a9c:	strd	r4, [r3, #-8]
   19aa0:	beq	1a8ec <next@@Base+0x1290>
   19aa4:	cmp	r6, #110	; 0x6e
   19aa8:	bne	1a93c <next@@Base+0x12e0>
   19aac:	add	r3, sp, #616	; 0x268
   19ab0:	add	r1, r3, r1
   19ab4:	add	r3, lr, #1
   19ab8:	strb	r6, [r1, #-512]	; 0xfffffe00
   19abc:	str	r3, [r7, #8]
   19ac0:	ldrb	r3, [ip, lr]
   19ac4:	cmp	r3, #116	; 0x74
   19ac8:	bne	1a10c <next@@Base+0xab0>
   19acc:	ldr	r3, [pc, #1860]	; 1a218 <next@@Base+0xbbc>
   19ad0:	mov	r0, #4
   19ad4:	mov	r4, r3
   19ad8:	ldrd	r2, [r3]
   19adc:	adds	r2, r2, #1
   19ae0:	adc	r3, r3, #0
   19ae4:	strd	r2, [r4], #16
   19ae8:	bl	1205c <malloc@plt>
   19aec:	mov	r5, r0
   19af0:	bl	190c0 <init_token_int_type@@Base>
   19af4:	b	1a740 <next@@Base+0x10e4>
   19af8:	ldrd	r4, [sp, #8]
   19afc:	cmp	r2, #0
   19b00:	ldr	r1, [sp, #28]
   19b04:	ldr	r0, [sp, #88]	; 0x58
   19b08:	strd	r4, [r3]
   19b0c:	bne	1a8e0 <next@@Base+0x1284>
   19b10:	ldr	r2, [sp, #92]	; 0x5c
   19b14:	cmp	r2, #0
   19b18:	ldrdne	r4, [sp, #48]	; 0x30
   19b1c:	strdne	r4, [fp, #112]	; 0x70
   19b20:	ldr	r2, [sp, #96]	; 0x60
   19b24:	cmp	r2, #0
   19b28:	ldrdne	r4, [sp, #56]	; 0x38
   19b2c:	strdne	r4, [fp, #200]	; 0xc8
   19b30:	ldr	r2, [sp, #100]	; 0x64
   19b34:	cmp	r2, #0
   19b38:	ldrdne	r4, [sp, #64]	; 0x40
   19b3c:	strdne	r4, [fp, #208]	; 0xd0
   19b40:	cmp	sl, #0
   19b44:	ldrdne	r4, [sp, #72]	; 0x48
   19b48:	strdne	r4, [fp, #216]	; 0xd8
   19b4c:	cmp	r0, #0
   19b50:	ldrdne	r4, [sp, #80]	; 0x50
   19b54:	strdne	r4, [fp, #224]	; 0xe0
   19b58:	cmp	r8, #0
   19b5c:	ldrdne	r4, [sp, #32]
   19b60:	ldrne	r2, [pc, #1736]	; 1a230 <next@@Base+0xbd4>
   19b64:	strdne	r4, [r2]
   19b68:	ldrd	r4, [sp]
   19b6c:	sub	r2, r6, #48	; 0x30
   19b70:	cmp	r2, #9
   19b74:	strd	r4, [r3, #-8]
   19b78:	movhi	r3, lr
   19b7c:	bhi	19be4 <next@@Base+0x588>
   19b80:	ldr	r3, [pc, #1684]	; 1a21c <next@@Base+0xbc0>
   19b84:	sub	r2, lr, #1
   19b88:	add	r2, ip, r2
   19b8c:	ldrd	r4, [r3]
   19b90:	add	r3, sp, #104	; 0x68
   19b94:	add	r0, r3, r1
   19b98:	adds	r4, r4, #1
   19b9c:	adc	r5, r5, #0
   19ba0:	mov	sl, r1
   19ba4:	add	r1, r1, #1
   19ba8:	add	r3, r1, lr
   19bac:	sub	r3, r3, sl
   19bb0:	strb	r6, [r0], #1
   19bb4:	str	r3, [r7, #8]
   19bb8:	ldrb	r6, [r2, #1]!
   19bbc:	mov	r9, r4
   19bc0:	adds	r4, r4, #1
   19bc4:	sub	ip, r6, #48	; 0x30
   19bc8:	mov	r8, r5
   19bcc:	adc	r5, r5, #0
   19bd0:	cmp	ip, #9
   19bd4:	bls	19ba4 <next@@Base+0x548>
   19bd8:	ldr	r2, [pc, #1596]	; 1a21c <next@@Base+0xbc0>
   19bdc:	str	r9, [r2]
   19be0:	str	r8, [r2, #4]
   19be4:	ldr	r2, [pc, #1588]	; 1a220 <next@@Base+0xbc4>
   19be8:	ldrd	r4, [r2, #-8]
   19bec:	adds	r4, r4, #1
   19bf0:	adc	r5, r5, #0
   19bf4:	cmp	r3, #0
   19bf8:	strd	r4, [r2, #-8]
   19bfc:	beq	1a944 <next@@Base+0x12e8>
   19c00:	ldrd	r4, [fp, #48]	; 0x30
   19c04:	ldrd	r8, [r2]
   19c08:	add	r0, sp, #616	; 0x268
   19c0c:	adds	r4, r4, #1
   19c10:	sub	r3, r3, #1
   19c14:	add	r0, r0, r1
   19c18:	adc	r5, r5, #0
   19c1c:	adds	r8, r8, #1
   19c20:	mov	r6, r2
   19c24:	adc	r9, r9, #0
   19c28:	str	r3, [r7, #8]
   19c2c:	mov	r7, #0
   19c30:	strb	r7, [r0, #-512]	; 0xfffffe00
   19c34:	mov	r0, #8
   19c38:	strd	r8, [r6], #16
   19c3c:	strd	r4, [fp, #48]	; 0x30
   19c40:	bl	1205c <malloc@plt>
   19c44:	mov	r1, r7
   19c48:	mov	r2, #10
   19c4c:	mov	r4, r0
   19c50:	add	r0, sp, #104	; 0x68
   19c54:	bl	11fe4 <strtol@plt>
   19c58:	ldrd	r2, [r6, #-8]
   19c5c:	adds	r2, r2, #1
   19c60:	adc	r3, r3, #0
   19c64:	strd	r2, [r6, #-8]
   19c68:	mov	r1, r0
   19c6c:	mov	r0, r4
   19c70:	bl	190e4 <init_token_int_value@@Base>
   19c74:	ldrd	r2, [r6]
   19c78:	mov	r0, r4
   19c7c:	adds	r2, r2, #1
   19c80:	adc	r3, r3, #0
   19c84:	strd	r2, [r6]
   19c88:	b	196a0 <next@@Base+0x44>
   19c8c:	cmp	r6, #32
   19c90:	cmpne	r6, #9
   19c94:	beq	19d10 <next@@Base+0x6b4>
   19c98:	ldrd	r0, [sp, #40]	; 0x28
   19c9c:	adds	r0, r0, #1
   19ca0:	adc	r1, r1, #0
   19ca4:	cmp	r6, #10
   19ca8:	strd	r0, [sp, #40]	; 0x28
   19cac:	beq	19d0c <next@@Base+0x6b0>
   19cb0:	cmp	r6, #48	; 0x30
   19cb4:	beq	1a058 <next@@Base+0x9fc>
   19cb8:	sub	r2, r6, #49	; 0x31
   19cbc:	cmp	r2, #8
   19cc0:	bhi	19e38 <next@@Base+0x7dc>
   19cc4:	ldrd	r0, [sp, #48]	; 0x30
   19cc8:	ldr	r4, [sp, #28]
   19ccc:	add	r2, sp, #616	; 0x268
   19cd0:	adds	r0, r0, #1
   19cd4:	adc	r1, r1, #0
   19cd8:	add	r9, r2, r4
   19cdc:	mov	r8, lr
   19ce0:	mov	r2, #1
   19ce4:	add	lr, lr, #1
   19ce8:	strd	r0, [sp, #48]	; 0x30
   19cec:	add	r1, r4, r2
   19cf0:	strb	r6, [r9, #-512]	; 0xfffffe00
   19cf4:	str	lr, [r7, #8]
   19cf8:	str	r1, [sp, #28]
   19cfc:	ldrb	r6, [ip, r8]
   19d00:	mov	r9, r2
   19d04:	str	r2, [sp, #92]	; 0x5c
   19d08:	b	19d24 <next@@Base+0x6c8>
   19d0c:	mov	r2, #1
   19d10:	mov	r6, lr
   19d14:	add	lr, lr, #1
   19d18:	str	lr, [r7, #8]
   19d1c:	ldrb	r6, [ip, r6]
   19d20:	mov	r9, #0
   19d24:	mov	r8, #1
   19d28:	b	19748 <next@@Base+0xec>
   19d2c:	ldrd	r4, [sp, #8]
   19d30:	cmp	r2, #0
   19d34:	ldr	r1, [sp, #28]
   19d38:	ldr	r0, [sp, #88]	; 0x58
   19d3c:	strd	r4, [r3]
   19d40:	bne	1a128 <next@@Base+0xacc>
   19d44:	ldr	r2, [sp, #92]	; 0x5c
   19d48:	cmp	r2, #0
   19d4c:	ldrdne	r4, [sp, #48]	; 0x30
   19d50:	strdne	r4, [fp, #112]	; 0x70
   19d54:	ldr	r2, [sp, #96]	; 0x60
   19d58:	cmp	r2, #0
   19d5c:	ldrdne	r4, [sp, #56]	; 0x38
   19d60:	strdne	r4, [fp, #200]	; 0xc8
   19d64:	ldr	r2, [sp, #100]	; 0x64
   19d68:	cmp	r2, #0
   19d6c:	ldrdne	r4, [sp, #64]	; 0x40
   19d70:	strdne	r4, [fp, #208]	; 0xd0
   19d74:	cmp	sl, #0
   19d78:	ldrdne	r4, [sp, #72]	; 0x48
   19d7c:	strdne	r4, [fp, #216]	; 0xd8
   19d80:	cmp	r0, #0
   19d84:	ldrdne	r4, [sp, #80]	; 0x50
   19d88:	strdne	r4, [fp, #224]	; 0xe0
   19d8c:	cmp	r8, #0
   19d90:	ldrdne	r4, [sp, #32]
   19d94:	ldrne	r2, [pc, #1172]	; 1a230 <next@@Base+0xbd4>
   19d98:	strdne	r4, [r2]
   19d9c:	ldrd	r4, [sp]
   19da0:	cmp	r6, #108	; 0x6c
   19da4:	strd	r4, [r3, #-8]
   19da8:	ldrne	r1, [pc, #1140]	; 1a224 <next@@Base+0xbc8>
   19dac:	bne	1a110 <next@@Base+0xab4>
   19db0:	add	r3, sp, #616	; 0x268
   19db4:	add	r3, r3, r1
   19db8:	add	r2, lr, #1
   19dbc:	strb	r6, [r3, #-512]	; 0xfffffe00
   19dc0:	str	r2, [r7, #8]
   19dc4:	ldrb	r0, [ip, lr]
   19dc8:	add	r3, r1, #1
   19dcc:	cmp	r0, #115	; 0x73
   19dd0:	bne	1a134 <next@@Base+0xad8>
   19dd4:	add	r1, sp, #616	; 0x268
   19dd8:	add	r3, r1, r3
   19ddc:	add	lr, lr, #2
   19de0:	strb	r0, [r3, #-512]	; 0xfffffe00
   19de4:	str	lr, [r7, #8]
   19de8:	ldrb	r3, [ip, r2]
   19dec:	ldr	r1, [pc, #1076]	; 1a228 <next@@Base+0xbcc>
   19df0:	cmp	r3, #101	; 0x65
   19df4:	bne	1a110 <next@@Base+0xab4>
   19df8:	ldrd	r2, [r1]
   19dfc:	mov	r0, #4
   19e00:	adds	r2, r2, #1
   19e04:	adc	r3, r3, #0
   19e08:	strd	r2, [r1]
   19e0c:	bl	1205c <malloc@plt>
   19e10:	mov	r5, r0
   19e14:	bl	1925c <init_token_else@@Base>
   19e18:	ldr	r3, [pc, #1040]	; 1a230 <next@@Base+0xbd4>
   19e1c:	ldr	r1, [pc, #1036]	; 1a230 <next@@Base+0xbd4>
   19e20:	mov	r0, r5
   19e24:	ldrd	r2, [r3, #-8]
   19e28:	adds	r2, r2, #1
   19e2c:	adc	r3, r3, #0
   19e30:	strd	r2, [r1, #-8]
   19e34:	b	196a0 <next@@Base+0x44>
   19e38:	cmp	r6, #40	; 0x28
   19e3c:	beq	1a3bc <next@@Base+0xd60>
   19e40:	cmp	r6, #41	; 0x29
   19e44:	beq	1a310 <next@@Base+0xcb4>
   19e48:	cmp	r6, #123	; 0x7b
   19e4c:	beq	1a264 <next@@Base+0xc08>
   19e50:	cmp	r6, #125	; 0x7d
   19e54:	beq	1a150 <next@@Base+0xaf4>
   19e58:	cmp	r6, #59	; 0x3b
   19e5c:	beq	1a468 <next@@Base+0xe0c>
   19e60:	cmp	r6, #101	; 0x65
   19e64:	beq	19f7c <next@@Base+0x920>
   19e68:	cmp	r6, #105	; 0x69
   19e6c:	beq	19fc8 <next@@Base+0x96c>
   19e70:	cmp	r6, #109	; 0x6d
   19e74:	beq	1a010 <next@@Base+0x9b4>
   19e78:	cmp	r6, #114	; 0x72
   19e7c:	bne	1a514 <next@@Base+0xeb8>
   19e80:	ldrd	r4, [sp, #80]	; 0x50
   19e84:	ldr	r8, [sp, #28]
   19e88:	add	r1, sp, #616	; 0x268
   19e8c:	mov	r2, lr
   19e90:	add	r0, r1, r8
   19e94:	adds	r4, r4, #1
   19e98:	add	lr, lr, #1
   19e9c:	adc	r5, r5, #0
   19ea0:	str	lr, [r7, #8]
   19ea4:	strb	r6, [r0, #-512]	; 0xfffffe00
   19ea8:	add	r1, r8, #1
   19eac:	ldrb	r6, [ip, r2]
   19eb0:	mov	r2, #1
   19eb4:	strd	r4, [sp, #80]	; 0x50
   19eb8:	str	r1, [sp, #28]
   19ebc:	str	r2, [sp, #88]	; 0x58
   19ec0:	mov	r9, #4
   19ec4:	b	19d24 <next@@Base+0x6c8>
   19ec8:	cmp	r8, #0
   19ecc:	ldr	r0, [sp, #88]	; 0x58
   19ed0:	bne	1a100 <next@@Base+0xaa4>
   19ed4:	cmp	r2, #0
   19ed8:	ldrdne	r4, [sp, #40]	; 0x28
   19edc:	strdne	r4, [fp, #96]	; 0x60
   19ee0:	ldr	r2, [sp, #92]	; 0x5c
   19ee4:	cmp	r2, #0
   19ee8:	ldrdne	r4, [sp, #48]	; 0x30
   19eec:	strdne	r4, [fp, #112]	; 0x70
   19ef0:	ldr	r2, [sp, #96]	; 0x60
   19ef4:	cmp	r2, #0
   19ef8:	ldrdne	r4, [sp, #56]	; 0x38
   19efc:	strdne	r4, [fp, #200]	; 0xc8
   19f00:	ldr	r2, [sp, #100]	; 0x64
   19f04:	cmp	r2, #0
   19f08:	ldrdne	r4, [sp, #64]	; 0x40
   19f0c:	strdne	r4, [fp, #208]	; 0xd0
   19f10:	cmp	sl, #0
   19f14:	ldrdne	r4, [sp, #72]	; 0x48
   19f18:	strdne	r4, [fp, #216]	; 0xd8
   19f1c:	cmp	r0, #0
   19f20:	ldrdne	r0, [sp, #80]	; 0x50
   19f24:	strdne	r0, [fp, #224]	; 0xe0
   19f28:	cmp	r8, #0
   19f2c:	ldrdne	r0, [sp, #32]
   19f30:	ldrne	r2, [pc, #760]	; 1a230 <next@@Base+0xbd4>
   19f34:	strdne	r0, [r2]
   19f38:	ldr	r4, [pc, #748]	; 1a22c <next@@Base+0xbd0>
   19f3c:	ldrd	r6, [sp]
   19f40:	mov	r0, #4
   19f44:	strd	r6, [r3, #-8]
   19f48:	ldrd	r2, [r4, #-8]
   19f4c:	adds	r2, r2, #1
   19f50:	adc	r3, r3, #0
   19f54:	strd	r2, [r4, #-8]
   19f58:	bl	1205c <malloc@plt>
   19f5c:	mov	r5, r0
   19f60:	bl	19214 <init_token_eof@@Base>
   19f64:	ldrd	r2, [r4]
   19f68:	mov	r0, r5
   19f6c:	adds	r2, r2, #1
   19f70:	adc	r3, r3, #0
   19f74:	strd	r2, [r4]
   19f78:	b	196a0 <next@@Base+0x44>
   19f7c:	ldr	r4, [sp, #28]
   19f80:	add	r1, sp, #616	; 0x268
   19f84:	add	r6, r1, r4
   19f88:	ldrd	r0, [sp, #56]	; 0x38
   19f8c:	mov	r2, lr
   19f90:	add	lr, lr, #1
   19f94:	adds	r0, r0, #1
   19f98:	adc	r1, r1, #0
   19f9c:	str	lr, [r7, #8]
   19fa0:	strd	r0, [sp, #56]	; 0x38
   19fa4:	mov	r1, #101	; 0x65
   19fa8:	strb	r1, [r6, #-512]	; 0xfffffe00
   19fac:	add	r1, r4, #1
   19fb0:	ldrb	r6, [ip, r2]
   19fb4:	mov	r2, #1
   19fb8:	str	r1, [sp, #28]
   19fbc:	str	r2, [sp, #96]	; 0x60
   19fc0:	mov	r9, #5
   19fc4:	b	19d24 <next@@Base+0x6c8>
   19fc8:	ldr	r4, [sp, #28]
   19fcc:	add	r1, sp, #616	; 0x268
   19fd0:	add	r8, r1, r4
   19fd4:	ldrd	r0, [sp, #64]	; 0x40
   19fd8:	mov	r2, lr
   19fdc:	add	lr, lr, #1
   19fe0:	adds	r0, r0, #1
   19fe4:	adc	r1, r1, #0
   19fe8:	str	lr, [r7, #8]
   19fec:	strd	r0, [sp, #64]	; 0x40
   19ff0:	strb	r6, [r8, #-512]	; 0xfffffe00
   19ff4:	add	r1, r4, #1
   19ff8:	ldrb	r6, [ip, r2]
   19ffc:	mov	r2, #1
   1a000:	str	r1, [sp, #28]
   1a004:	str	r2, [sp, #100]	; 0x64
   1a008:	mov	r9, #2
   1a00c:	b	19d24 <next@@Base+0x6c8>
   1a010:	ldr	r4, [sp, #28]
   1a014:	add	r1, sp, #616	; 0x268
   1a018:	add	r8, r1, r4
   1a01c:	ldrd	r0, [sp, #72]	; 0x48
   1a020:	mov	r2, lr
   1a024:	mov	sl, #1
   1a028:	adds	r0, r0, #1
   1a02c:	adc	r1, r1, #0
   1a030:	add	lr, lr, #1
   1a034:	strd	r0, [sp, #72]	; 0x48
   1a038:	add	r1, r4, #1
   1a03c:	str	lr, [r7, #8]
   1a040:	strb	r6, [r8, #-512]	; 0xfffffe00
   1a044:	str	r1, [sp, #28]
   1a048:	ldrb	r6, [ip, r2]
   1a04c:	mov	r9, #3
   1a050:	mov	r2, sl
   1a054:	b	19d24 <next@@Base+0x6c8>
   1a058:	ldrd	r4, [sp, #8]
   1a05c:	ldr	r2, [sp, #92]	; 0x5c
   1a060:	ldr	r0, [sp, #88]	; 0x58
   1a064:	strd	r4, [r3]
   1a068:	ldrd	r4, [sp, #40]	; 0x28
   1a06c:	cmp	r2, #0
   1a070:	strd	r4, [fp, #96]	; 0x60
   1a074:	bne	1a0f4 <next@@Base+0xa98>
   1a078:	ldr	r2, [sp, #96]	; 0x60
   1a07c:	cmp	r2, #0
   1a080:	ldrdne	r4, [sp, #56]	; 0x38
   1a084:	strdne	r4, [fp, #200]	; 0xc8
   1a088:	ldr	r2, [sp, #100]	; 0x64
   1a08c:	cmp	r2, #0
   1a090:	ldrdne	r4, [sp, #64]	; 0x40
   1a094:	strdne	r4, [fp, #208]	; 0xd0
   1a098:	cmp	sl, #0
   1a09c:	ldrdne	r4, [sp, #72]	; 0x48
   1a0a0:	strdne	r4, [fp, #216]	; 0xd8
   1a0a4:	cmp	r0, #0
   1a0a8:	ldrdne	r0, [sp, #80]	; 0x50
   1a0ac:	strdne	r0, [fp, #224]	; 0xe0
   1a0b0:	cmp	r8, #0
   1a0b4:	ldrdne	r0, [sp, #32]
   1a0b8:	ldrne	r2, [pc, #368]	; 1a230 <next@@Base+0xbd4>
   1a0bc:	strdne	r0, [r2]
   1a0c0:	ldrd	r4, [sp]
   1a0c4:	mov	r0, #8
   1a0c8:	strd	r4, [r3, #-8]
   1a0cc:	bl	1205c <malloc@plt>
   1a0d0:	mov	r1, #0
   1a0d4:	mov	r4, r0
   1a0d8:	bl	190e4 <init_token_int_value@@Base>
   1a0dc:	ldrd	r2, [fp, #104]	; 0x68
   1a0e0:	mov	r0, r4
   1a0e4:	adds	r2, r2, #1
   1a0e8:	adc	r3, r3, #0
   1a0ec:	strd	r2, [fp, #104]	; 0x68
   1a0f0:	b	196a0 <next@@Base+0x44>
   1a0f4:	ldrd	r4, [sp, #48]	; 0x30
   1a0f8:	strd	r4, [fp, #112]	; 0x70
   1a0fc:	b	1a078 <next@@Base+0xa1c>
   1a100:	ldrd	r4, [sp, #8]
   1a104:	strd	r4, [r3]
   1a108:	b	19ed4 <next@@Base+0x878>
   1a10c:	ldr	r1, [pc, #260]	; 1a218 <next@@Base+0xbbc>
   1a110:	ldrd	r2, [r1, #-8]
   1a114:	mov	r0, #1
   1a118:	adds	r2, r2, #1
   1a11c:	adc	r3, r3, #0
   1a120:	strd	r2, [r1, #-8]
   1a124:	bl	120a4 <exit@plt>
   1a128:	ldrd	r4, [sp, #40]	; 0x28
   1a12c:	strd	r4, [fp, #96]	; 0x60
   1a130:	b	19d44 <next@@Base+0x6e8>
   1a134:	ldr	r1, [pc, #232]	; 1a224 <next@@Base+0xbc8>
   1a138:	ldrd	r2, [r1]
   1a13c:	mov	r0, #1
   1a140:	adds	r2, r2, #1
   1a144:	adc	r3, r3, #0
   1a148:	strd	r2, [r1]
   1a14c:	bl	120a4 <exit@plt>
   1a150:	ldrd	r4, [sp, #8]
   1a154:	ldr	r2, [sp, #92]	; 0x5c
   1a158:	ldr	r0, [sp, #88]	; 0x58
   1a15c:	strd	r4, [r3]
   1a160:	ldrd	r4, [sp, #40]	; 0x28
   1a164:	cmp	r2, #0
   1a168:	strd	r4, [fp, #96]	; 0x60
   1a16c:	ldrdne	r4, [sp, #48]	; 0x30
   1a170:	strdne	r4, [fp, #112]	; 0x70
   1a174:	ldr	r2, [sp, #96]	; 0x60
   1a178:	cmp	r2, #0
   1a17c:	ldrdne	r4, [sp, #56]	; 0x38
   1a180:	strdne	r4, [fp, #200]	; 0xc8
   1a184:	ldr	r2, [sp, #100]	; 0x64
   1a188:	cmp	r2, #0
   1a18c:	ldrdne	r4, [sp, #64]	; 0x40
   1a190:	strdne	r4, [fp, #208]	; 0xd0
   1a194:	cmp	sl, #0
   1a198:	ldrdne	r4, [sp, #72]	; 0x48
   1a19c:	strdne	r4, [fp, #216]	; 0xd8
   1a1a0:	cmp	r0, #0
   1a1a4:	ldrdne	r0, [sp, #80]	; 0x50
   1a1a8:	strdne	r0, [fp, #224]	; 0xe0
   1a1ac:	cmp	r8, #0
   1a1b0:	ldrdne	r0, [sp, #32]
   1a1b4:	ldrne	r2, [pc, #116]	; 1a230 <next@@Base+0xbd4>
   1a1b8:	strdne	r0, [r2]
   1a1bc:	ldrd	r4, [fp, #168]	; 0xa8
   1a1c0:	ldrd	r6, [sp]
   1a1c4:	mov	r0, #4
   1a1c8:	adds	r4, r4, #1
   1a1cc:	adc	r5, r5, #0
   1a1d0:	strd	r6, [r3, #-8]
   1a1d4:	strd	r4, [fp, #168]	; 0xa8
   1a1d8:	bl	1205c <malloc@plt>
   1a1dc:	mov	r4, r0
   1a1e0:	bl	191a8 <init_token_cbra@@Base>
   1a1e4:	ldrd	r2, [fp, #176]	; 0xb0
   1a1e8:	mov	r0, r4
   1a1ec:	adds	r2, r2, #1
   1a1f0:	adc	r3, r3, #0
   1a1f4:	strd	r2, [fp, #176]	; 0xb0
   1a1f8:	b	196a0 <next@@Base+0x44>
   1a1fc:	ldrdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   1a200:	ldrdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   1a204:	andeq	r0, r3, r0, ror #7
   1a208:	strdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   1a20c:	andeq	r0, r3, r0, lsl #8
   1a210:			; <UNDEFINED> instruction: 0x000303b0
   1a214:	andeq	r0, r3, r0, asr #7
   1a218:	muleq	r3, r0, r3
   1a21c:	andeq	r0, r3, r0, asr r3
   1a220:	andeq	r0, r3, r0, ror #6
   1a224:	andeq	r0, r3, r0, lsl r4
   1a228:	andeq	r0, r3, r0, lsr #8
   1a22c:	andeq	r0, r3, r0, asr r4
   1a230:	andeq	r0, r3, r0, lsr r4
   1a234:	andeq	r0, r3, r0, asr #6
   1a238:	andeq	r0, r3, r0, lsr r3
   1a23c:	andeq	sp, r1, r0, ror #10
   1a240:	andeq	r0, r3, r0, lsl r3
   1a244:	andeq	r0, r3, r0, lsr #6
   1a248:	andeq	r0, r3, r0, lsl #6
   1a24c:	andeq	r0, r3, r0, ror #5
   1a250:	ldrdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   1a254:	strdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   1a258:	andeq	r0, r3, r0, lsl #7
   1a25c:	andeq	lr, r2, r0, asr #24
   1a260:	andeq	sp, r1, ip, lsr r5
   1a264:	ldrd	r4, [sp, #8]
   1a268:	ldr	r2, [sp, #92]	; 0x5c
   1a26c:	ldr	r0, [sp, #88]	; 0x58
   1a270:	strd	r4, [r3]
   1a274:	ldrd	r4, [sp, #40]	; 0x28
   1a278:	cmp	r2, #0
   1a27c:	strd	r4, [fp, #96]	; 0x60
   1a280:	ldrdne	r4, [sp, #48]	; 0x30
   1a284:	strdne	r4, [fp, #112]	; 0x70
   1a288:	ldr	r2, [sp, #96]	; 0x60
   1a28c:	cmp	r2, #0
   1a290:	ldrdne	r4, [sp, #56]	; 0x38
   1a294:	strdne	r4, [fp, #200]	; 0xc8
   1a298:	ldr	r2, [sp, #100]	; 0x64
   1a29c:	cmp	r2, #0
   1a2a0:	ldrdne	r4, [sp, #64]	; 0x40
   1a2a4:	strdne	r4, [fp, #208]	; 0xd0
   1a2a8:	cmp	sl, #0
   1a2ac:	ldrdne	r4, [sp, #72]	; 0x48
   1a2b0:	strdne	r4, [fp, #216]	; 0xd8
   1a2b4:	cmp	r0, #0
   1a2b8:	ldrdne	r0, [sp, #80]	; 0x50
   1a2bc:	strdne	r0, [fp, #224]	; 0xe0
   1a2c0:	cmp	r8, #0
   1a2c4:	ldrdne	r0, [sp, #32]
   1a2c8:	ldrne	r2, [pc, #-160]	; 1a230 <next@@Base+0xbd4>
   1a2cc:	strdne	r0, [r2]
   1a2d0:	ldrd	r4, [fp, #152]	; 0x98
   1a2d4:	ldrd	r6, [sp]
   1a2d8:	mov	r0, #4
   1a2dc:	adds	r4, r4, #1
   1a2e0:	adc	r5, r5, #0
   1a2e4:	strd	r6, [r3, #-8]
   1a2e8:	strd	r4, [fp, #152]	; 0x98
   1a2ec:	bl	1205c <malloc@plt>
   1a2f0:	mov	r4, r0
   1a2f4:	bl	19184 <init_token_obra@@Base>
   1a2f8:	ldrd	r2, [fp, #160]	; 0xa0
   1a2fc:	mov	r0, r4
   1a300:	adds	r2, r2, #1
   1a304:	adc	r3, r3, #0
   1a308:	strd	r2, [fp, #160]	; 0xa0
   1a30c:	b	196a0 <next@@Base+0x44>
   1a310:	ldrd	r4, [sp, #8]
   1a314:	ldr	r2, [sp, #92]	; 0x5c
   1a318:	ldr	r0, [sp, #88]	; 0x58
   1a31c:	strd	r4, [r3]
   1a320:	ldrd	r4, [sp, #40]	; 0x28
   1a324:	cmp	r2, #0
   1a328:	strd	r4, [fp, #96]	; 0x60
   1a32c:	ldrdne	r4, [sp, #48]	; 0x30
   1a330:	strdne	r4, [fp, #112]	; 0x70
   1a334:	ldr	r2, [sp, #96]	; 0x60
   1a338:	cmp	r2, #0
   1a33c:	ldrdne	r4, [sp, #56]	; 0x38
   1a340:	strdne	r4, [fp, #200]	; 0xc8
   1a344:	ldr	r2, [sp, #100]	; 0x64
   1a348:	cmp	r2, #0
   1a34c:	ldrdne	r4, [sp, #64]	; 0x40
   1a350:	strdne	r4, [fp, #208]	; 0xd0
   1a354:	cmp	sl, #0
   1a358:	ldrdne	r4, [sp, #72]	; 0x48
   1a35c:	strdne	r4, [fp, #216]	; 0xd8
   1a360:	cmp	r0, #0
   1a364:	ldrdne	r0, [sp, #80]	; 0x50
   1a368:	strdne	r0, [fp, #224]	; 0xe0
   1a36c:	cmp	r8, #0
   1a370:	ldrdne	r0, [sp, #32]
   1a374:	ldrne	r2, [pc, #-332]	; 1a230 <next@@Base+0xbd4>
   1a378:	strdne	r0, [r2]
   1a37c:	ldrd	r4, [fp, #136]	; 0x88
   1a380:	ldrd	r6, [sp]
   1a384:	mov	r0, #4
   1a388:	adds	r4, r4, #1
   1a38c:	adc	r5, r5, #0
   1a390:	strd	r6, [r3, #-8]
   1a394:	strd	r4, [fp, #136]	; 0x88
   1a398:	bl	1205c <malloc@plt>
   1a39c:	mov	r4, r0
   1a3a0:	bl	19160 <init_token_cpar@@Base>
   1a3a4:	ldrd	r2, [fp, #144]	; 0x90
   1a3a8:	mov	r0, r4
   1a3ac:	adds	r2, r2, #1
   1a3b0:	adc	r3, r3, #0
   1a3b4:	strd	r2, [fp, #144]	; 0x90
   1a3b8:	b	196a0 <next@@Base+0x44>
   1a3bc:	ldrd	r4, [sp, #8]
   1a3c0:	ldr	r2, [sp, #92]	; 0x5c
   1a3c4:	ldr	r0, [sp, #88]	; 0x58
   1a3c8:	strd	r4, [r3]
   1a3cc:	ldrd	r4, [sp, #40]	; 0x28
   1a3d0:	cmp	r2, #0
   1a3d4:	strd	r4, [fp, #96]	; 0x60
   1a3d8:	ldrdne	r4, [sp, #48]	; 0x30
   1a3dc:	strdne	r4, [fp, #112]	; 0x70
   1a3e0:	ldr	r2, [sp, #96]	; 0x60
   1a3e4:	cmp	r2, #0
   1a3e8:	ldrdne	r4, [sp, #56]	; 0x38
   1a3ec:	strdne	r4, [fp, #200]	; 0xc8
   1a3f0:	ldr	r2, [sp, #100]	; 0x64
   1a3f4:	cmp	r2, #0
   1a3f8:	ldrdne	r4, [sp, #64]	; 0x40
   1a3fc:	strdne	r4, [fp, #208]	; 0xd0
   1a400:	cmp	sl, #0
   1a404:	ldrdne	r4, [sp, #72]	; 0x48
   1a408:	strdne	r4, [fp, #216]	; 0xd8
   1a40c:	cmp	r0, #0
   1a410:	ldrdne	r0, [sp, #80]	; 0x50
   1a414:	strdne	r0, [fp, #224]	; 0xe0
   1a418:	cmp	r8, #0
   1a41c:	ldrdne	r0, [sp, #32]
   1a420:	ldrne	r2, [pc, #-504]	; 1a230 <next@@Base+0xbd4>
   1a424:	strdne	r0, [r2]
   1a428:	ldrd	r4, [fp, #120]	; 0x78
   1a42c:	ldrd	r6, [sp]
   1a430:	mov	r0, #4
   1a434:	adds	r4, r4, #1
   1a438:	adc	r5, r5, #0
   1a43c:	strd	r6, [r3, #-8]
   1a440:	strd	r4, [fp, #120]	; 0x78
   1a444:	bl	1205c <malloc@plt>
   1a448:	mov	r4, r0
   1a44c:	bl	1913c <init_token_opar@@Base>
   1a450:	ldrd	r2, [fp, #128]	; 0x80
   1a454:	mov	r0, r4
   1a458:	adds	r2, r2, #1
   1a45c:	adc	r3, r3, #0
   1a460:	strd	r2, [fp, #128]	; 0x80
   1a464:	b	196a0 <next@@Base+0x44>
   1a468:	ldrd	r4, [sp, #8]
   1a46c:	ldr	r2, [sp, #92]	; 0x5c
   1a470:	ldr	r0, [sp, #88]	; 0x58
   1a474:	strd	r4, [r3]
   1a478:	ldrd	r4, [sp, #40]	; 0x28
   1a47c:	cmp	r2, #0
   1a480:	strd	r4, [fp, #96]	; 0x60
   1a484:	ldrdne	r4, [sp, #48]	; 0x30
   1a488:	strdne	r4, [fp, #112]	; 0x70
   1a48c:	ldr	r2, [sp, #96]	; 0x60
   1a490:	cmp	r2, #0
   1a494:	ldrdne	r4, [sp, #56]	; 0x38
   1a498:	strdne	r4, [fp, #200]	; 0xc8
   1a49c:	ldr	r2, [sp, #100]	; 0x64
   1a4a0:	cmp	r2, #0
   1a4a4:	ldrdne	r4, [sp, #64]	; 0x40
   1a4a8:	strdne	r4, [fp, #208]	; 0xd0
   1a4ac:	cmp	sl, #0
   1a4b0:	ldrdne	r4, [sp, #72]	; 0x48
   1a4b4:	strdne	r4, [fp, #216]	; 0xd8
   1a4b8:	cmp	r0, #0
   1a4bc:	ldrdne	r0, [sp, #80]	; 0x50
   1a4c0:	strdne	r0, [fp, #224]	; 0xe0
   1a4c4:	cmp	r8, #0
   1a4c8:	ldrdne	r0, [sp, #32]
   1a4cc:	ldrne	r2, [pc, #-676]	; 1a230 <next@@Base+0xbd4>
   1a4d0:	strdne	r0, [r2]
   1a4d4:	ldrd	r4, [fp, #184]	; 0xb8
   1a4d8:	ldrd	r6, [sp]
   1a4dc:	mov	r0, #4
   1a4e0:	adds	r4, r4, #1
   1a4e4:	adc	r5, r5, #0
   1a4e8:	strd	r6, [r3, #-8]
   1a4ec:	strd	r4, [fp, #184]	; 0xb8
   1a4f0:	bl	1205c <malloc@plt>
   1a4f4:	mov	r4, r0
   1a4f8:	bl	191f0 <init_token_semicolon@@Base>
   1a4fc:	ldrd	r2, [fp, #192]	; 0xc0
   1a500:	mov	r0, r4
   1a504:	adds	r2, r2, #1
   1a508:	adc	r3, r3, #0
   1a50c:	strd	r2, [fp, #192]	; 0xc0
   1a510:	b	196a0 <next@@Base+0x44>
   1a514:	ldrd	r4, [sp, #8]
   1a518:	ldr	r2, [sp, #92]	; 0x5c
   1a51c:	ldr	r1, [sp, #28]
   1a520:	strd	r4, [r3]
   1a524:	ldrd	r4, [sp, #40]	; 0x28
   1a528:	cmp	r2, #0
   1a52c:	ldr	r0, [sp, #88]	; 0x58
   1a530:	strd	r4, [fp, #96]	; 0x60
   1a534:	ldrdne	r4, [sp, #48]	; 0x30
   1a538:	strdne	r4, [fp, #112]	; 0x70
   1a53c:	ldr	r2, [sp, #96]	; 0x60
   1a540:	cmp	r2, #0
   1a544:	ldrdne	r4, [sp, #56]	; 0x38
   1a548:	strdne	r4, [fp, #200]	; 0xc8
   1a54c:	ldr	r2, [sp, #100]	; 0x64
   1a550:	cmp	r2, #0
   1a554:	ldrdne	r4, [sp, #64]	; 0x40
   1a558:	strdne	r4, [fp, #208]	; 0xd0
   1a55c:	cmp	sl, #0
   1a560:	ldrdne	r4, [sp, #72]	; 0x48
   1a564:	strdne	r4, [fp, #216]	; 0xd8
   1a568:	cmp	r0, #0
   1a56c:	ldrdne	r4, [sp, #80]	; 0x50
   1a570:	strdne	r4, [fp, #224]	; 0xe0
   1a574:	cmp	r8, #0
   1a578:	ldrdne	r4, [sp, #32]
   1a57c:	ldrne	r2, [pc, #-852]	; 1a230 <next@@Base+0xbd4>
   1a580:	strdne	r4, [r2]
   1a584:	ldrd	r4, [sp]
   1a588:	cmp	r6, #33	; 0x21
   1a58c:	strd	r4, [r3, #-8]
   1a590:	beq	1a7e4 <next@@Base+0x1188>
   1a594:	and	r3, r6, #253	; 0xfd
   1a598:	cmp	r3, #60	; 0x3c
   1a59c:	beq	1a75c <next@@Base+0x1100>
   1a5a0:	cmp	r6, #61	; 0x3d
   1a5a4:	beq	1a6cc <next@@Base+0x1070>
   1a5a8:	cmp	r6, #124	; 0x7c
   1a5ac:	beq	1a694 <next@@Base+0x1038>
   1a5b0:	cmp	r6, #38	; 0x26
   1a5b4:	bne	1a650 <next@@Base+0xff4>
   1a5b8:	add	r3, sp, #616	; 0x268
   1a5bc:	add	r1, r3, r1
   1a5c0:	add	r3, lr, #1
   1a5c4:	str	r3, [r7, #8]
   1a5c8:	mov	r0, #8
   1a5cc:	strb	r6, [r1, #-512]	; 0xfffffe00
   1a5d0:	ldrb	r4, [ip, lr]
   1a5d4:	bl	1205c <malloc@plt>
   1a5d8:	cmp	r4, #38	; 0x26
   1a5dc:	ldrne	r1, [pc, #-940]	; 1a238 <next@@Base+0xbdc>
   1a5e0:	mov	r5, r0
   1a5e4:	bne	1a138 <next@@Base+0xadc>
   1a5e8:	ldr	r4, [pc, #-956]	; 1a234 <next@@Base+0xbd8>
   1a5ec:	ldrd	r2, [r4, #-8]
   1a5f0:	mov	r0, #3
   1a5f4:	adds	r2, r2, #1
   1a5f8:	adc	r3, r3, #0
   1a5fc:	strd	r2, [r4, #-8]
   1a600:	bl	1205c <malloc@plt>
   1a604:	ldrb	ip, [sp, #104]	; 0x68
   1a608:	mov	r2, #0
   1a60c:	mov	r3, r0
   1a610:	mov	r1, r0
   1a614:	strb	r6, [r3, #1]
   1a618:	mov	r0, r5
   1a61c:	strb	ip, [r3]
   1a620:	strb	r2, [r3, #2]
   1a624:	bl	19280 <init_token_boolean_op@@Base>
   1a628:	b	19f64 <next@@Base+0x908>
   1a62c:	ldrd	r4, [sp, #40]	; 0x28
   1a630:	strd	r4, [fp, #96]	; 0x60
   1a634:	b	19900 <next@@Base+0x2a4>
   1a638:	ldrd	r4, [sp, #40]	; 0x28
   1a63c:	strd	r4, [fp, #96]	; 0x60
   1a640:	b	197bc <next@@Base+0x160>
   1a644:	ldrd	r4, [sp, #48]	; 0x30
   1a648:	strd	r4, [fp, #112]	; 0x70
   1a64c:	b	197c8 <next@@Base+0x16c>
   1a650:	ldr	r4, [pc, #-1056]	; 1a238 <next@@Base+0xbdc>
   1a654:	mov	r2, r6
   1a658:	ldr	r3, [pc, #-1028]	; 1a25c <next@@Base+0xc00>
   1a65c:	ldrd	r6, [r4, #-8]
   1a660:	add	r4, r4, #32
   1a664:	ldr	r0, [r3]
   1a668:	adds	r6, r6, #1
   1a66c:	adc	r7, r7, #0
   1a670:	ldr	r1, [pc, #-1084]	; 1a23c <next@@Base+0xbe0>
   1a674:	strd	r6, [r4, #-40]	; 0xffffffd8
   1a678:	bl	120bc <fprintf@plt>
   1a67c:	ldrd	r2, [r4, #-8]
   1a680:	mov	r0, #1
   1a684:	adds	r2, r2, #1
   1a688:	adc	r3, r3, #0
   1a68c:	strd	r2, [r4, #-8]
   1a690:	bl	120a4 <exit@plt>
   1a694:	add	r3, sp, #616	; 0x268
   1a698:	add	r1, r3, r1
   1a69c:	add	r3, lr, #1
   1a6a0:	str	r3, [r7, #8]
   1a6a4:	mov	r0, #8
   1a6a8:	strb	r6, [r1, #-512]	; 0xfffffe00
   1a6ac:	ldrb	r4, [ip, lr]
   1a6b0:	bl	1205c <malloc@plt>
   1a6b4:	cmp	r4, #124	; 0x7c
   1a6b8:	ldrne	r1, [pc, #-1152]	; 1a240 <next@@Base+0xbe4>
   1a6bc:	mov	r5, r0
   1a6c0:	bne	1a138 <next@@Base+0xadc>
   1a6c4:	ldr	r4, [pc, #-1160]	; 1a244 <next@@Base+0xbe8>
   1a6c8:	b	1a5ec <next@@Base+0xf90>
   1a6cc:	add	r3, sp, #616	; 0x268
   1a6d0:	add	r1, r3, r1
   1a6d4:	add	r3, lr, #1
   1a6d8:	str	r3, [r7, #8]
   1a6dc:	mov	r0, #8
   1a6e0:	strb	r6, [r1, #-512]	; 0xfffffe00
   1a6e4:	ldrb	r4, [ip, lr]
   1a6e8:	bl	1205c <malloc@plt>
   1a6ec:	cmp	r4, #61	; 0x3d
   1a6f0:	ldrne	r1, [pc, #-1200]	; 1a248 <next@@Base+0xbec>
   1a6f4:	mov	r5, r0
   1a6f8:	bne	1a110 <next@@Base+0xab4>
   1a6fc:	ldr	r3, [pc, #-1212]	; 1a248 <next@@Base+0xbec>
   1a700:	mov	r0, #3
   1a704:	mov	r4, r3
   1a708:	ldrd	r2, [r3]
   1a70c:	adds	r2, r2, #1
   1a710:	adc	r3, r3, #0
   1a714:	strd	r2, [r4], #16
   1a718:	bl	1205c <malloc@plt>
   1a71c:	ldrb	ip, [sp, #104]	; 0x68
   1a720:	mov	r2, #0
   1a724:	mov	r3, r0
   1a728:	mov	r1, r0
   1a72c:	strb	r6, [r3, #1]
   1a730:	mov	r0, r5
   1a734:	strb	ip, [r3]
   1a738:	strb	r2, [r3, #2]
   1a73c:	bl	19280 <init_token_boolean_op@@Base>
   1a740:	ldrd	r2, [r4, #-8]
   1a744:	mov	r0, r5
   1a748:	adds	r2, r2, #1
   1a74c:	adc	r3, r3, #0
   1a750:	strd	r2, [r4, #-8]
   1a754:	add	sp, sp, #620	; 0x26c
   1a758:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a75c:	add	r3, sp, #616	; 0x268
   1a760:	add	r1, r3, r1
   1a764:	add	r3, lr, #1
   1a768:	str	r3, [r7, #8]
   1a76c:	mov	r0, #8
   1a770:	strb	r6, [r1, #-512]	; 0xfffffe00
   1a774:	ldrb	r6, [ip, lr]
   1a778:	bl	1205c <malloc@plt>
   1a77c:	cmp	r6, #61	; 0x3d
   1a780:	mov	r5, r0
   1a784:	beq	1a87c <next@@Base+0x1220>
   1a788:	ldr	r6, [pc, #-1348]	; 1a24c <next@@Base+0xbf0>
   1a78c:	mov	r1, #1
   1a790:	mov	r0, r7
   1a794:	ldrd	r2, [r6, #-8]
   1a798:	mov	r4, r6
   1a79c:	adds	r2, r2, #1
   1a7a0:	adc	r3, r3, #0
   1a7a4:	strd	r2, [r6, #-8]
   1a7a8:	bl	19540 <push_back_chars@@Base>
   1a7ac:	mov	r0, #2
   1a7b0:	bl	1205c <malloc@plt>
   1a7b4:	ldrd	r2, [r6]
   1a7b8:	ldrb	ip, [sp, #104]	; 0x68
   1a7bc:	mov	r1, #0
   1a7c0:	adds	r2, r2, #1
   1a7c4:	adc	r3, r3, #0
   1a7c8:	strd	r2, [r4], #16
   1a7cc:	strb	ip, [r0]
   1a7d0:	strb	r1, [r0, #1]
   1a7d4:	mov	r1, r0
   1a7d8:	mov	r0, r5
   1a7dc:	bl	19280 <init_token_boolean_op@@Base>
   1a7e0:	b	19f64 <next@@Base+0x908>
   1a7e4:	add	r3, sp, #616	; 0x268
   1a7e8:	add	r1, r3, r1
   1a7ec:	add	r3, lr, #1
   1a7f0:	str	r3, [r7, #8]
   1a7f4:	mov	r0, #8
   1a7f8:	strb	r6, [r1, #-512]	; 0xfffffe00
   1a7fc:	ldrb	r5, [ip, lr]
   1a800:	bl	1205c <malloc@plt>
   1a804:	cmp	r5, #61	; 0x3d
   1a808:	mov	r4, r0
   1a80c:	beq	1a8b0 <next@@Base+0x1254>
   1a810:	ldrd	r2, [fp, #232]	; 0xe8
   1a814:	mov	r1, #1
   1a818:	mov	r0, r7
   1a81c:	adds	r2, r2, #1
   1a820:	adc	r3, r3, #0
   1a824:	strd	r2, [fp, #232]	; 0xe8
   1a828:	bl	19540 <push_back_chars@@Base>
   1a82c:	mov	r0, #2
   1a830:	bl	1205c <malloc@plt>
   1a834:	ldrd	r2, [fp, #240]	; 0xf0
   1a838:	ldrb	ip, [sp, #104]	; 0x68
   1a83c:	mov	r1, #0
   1a840:	adds	r2, r2, #1
   1a844:	adc	r3, r3, #0
   1a848:	strd	r2, [fp, #240]	; 0xf0
   1a84c:	strb	ip, [r0]
   1a850:	strb	r1, [r0, #1]
   1a854:	mov	r1, r0
   1a858:	mov	r0, r4
   1a85c:	bl	19280 <init_token_boolean_op@@Base>
   1a860:	ldr	r1, [pc, #-1560]	; 1a250 <next@@Base+0xbf4>
   1a864:	mov	r0, r4
   1a868:	ldrd	r2, [r1]
   1a86c:	adds	r2, r2, #1
   1a870:	adc	r3, r3, #0
   1a874:	strd	r2, [r1]
   1a878:	b	196a0 <next@@Base+0x44>
   1a87c:	mov	r0, #3
   1a880:	bl	1205c <malloc@plt>
   1a884:	ldr	r4, [pc, #-1592]	; 1a254 <next@@Base+0xbf8>
   1a888:	ldrb	ip, [sp, #104]	; 0x68
   1a88c:	mov	r1, #0
   1a890:	ldrd	r2, [r4, #-8]
   1a894:	adds	r2, r2, #1
   1a898:	adc	r3, r3, #0
   1a89c:	strd	r2, [r4, #-8]
   1a8a0:	strb	r6, [r0, #1]
   1a8a4:	strb	ip, [r0]
   1a8a8:	strb	r1, [r0, #2]
   1a8ac:	b	1a7d4 <next@@Base+0x1178>
   1a8b0:	mov	r0, #3
   1a8b4:	bl	1205c <malloc@plt>
   1a8b8:	ldrd	r2, [fp, #248]	; 0xf8
   1a8bc:	ldrb	ip, [sp, #104]	; 0x68
   1a8c0:	mov	r1, #0
   1a8c4:	adds	r2, r2, #1
   1a8c8:	adc	r3, r3, #0
   1a8cc:	strd	r2, [fp, #248]	; 0xf8
   1a8d0:	strb	r5, [r0, #1]
   1a8d4:	strb	ip, [r0]
   1a8d8:	strb	r1, [r0, #2]
   1a8dc:	b	1a854 <next@@Base+0x11f8>
   1a8e0:	ldrd	r4, [sp, #40]	; 0x28
   1a8e4:	strd	r4, [fp, #96]	; 0x60
   1a8e8:	b	19b10 <next@@Base+0x4b4>
   1a8ec:	ldr	r4, [pc, #-1692]	; 1a258 <next@@Base+0xbfc>
   1a8f0:	add	r3, sp, #616	; 0x268
   1a8f4:	add	r1, r3, r1
   1a8f8:	ldrd	r2, [r4]
   1a8fc:	mov	ip, #0
   1a900:	mov	r0, #4
   1a904:	adds	r2, r2, #1
   1a908:	adc	r3, r3, #0
   1a90c:	strb	r6, [r1, #-512]	; 0xfffffe00
   1a910:	strd	r2, [r4]
   1a914:	strb	ip, [r1, #-511]	; 0xfffffe01
   1a918:	bl	1205c <malloc@plt>
   1a91c:	mov	r5, r0
   1a920:	bl	19238 <init_token_if@@Base>
   1a924:	ldrd	r2, [r4, #32]!
   1a928:	mov	r0, r5
   1a92c:	adds	r2, r2, #1
   1a930:	adc	r3, r3, #0
   1a934:	strd	r2, [r4]
   1a938:	b	196a0 <next@@Base+0x44>
   1a93c:	ldr	r1, [pc, #-1772]	; 1a258 <next@@Base+0xbfc>
   1a940:	b	1a110 <next@@Base+0xab4>
   1a944:	ldrd	r4, [fp, #56]	; 0x38
   1a948:	ldr	r3, [pc, #-1780]	; 1a25c <next@@Base+0xc00>
   1a94c:	mov	r2, #32
   1a950:	adds	r4, r4, #1
   1a954:	adc	r5, r5, #0
   1a958:	ldr	r3, [r3]
   1a95c:	mov	r1, #1
   1a960:	ldr	r0, [pc, #-1800]	; 1a260 <next@@Base+0xc04>
   1a964:	strd	r4, [fp, #56]	; 0x38
   1a968:	bl	1202c <fwrite@plt>
   1a96c:	ldrd	r2, [fp, #64]	; 0x40
   1a970:	mov	r0, #1
   1a974:	adds	r2, r2, #1
   1a978:	adc	r3, r3, #0
   1a97c:	strd	r2, [fp, #64]	; 0x40
   1a980:	bl	120a4 <exit@plt>
   1a984:	ldrd	r4, [sp, #40]	; 0x28
   1a988:	strd	r4, [fp, #96]	; 0x60
   1a98c:	b	19a3c <next@@Base+0x3e0>
   1a990:	b	1bbbc <next@@Base+0x2560>
   1a994:	push	{r4, r5, r6, lr}
   1a998:	subs	r5, r1, #0
   1a99c:	popeq	{r4, r5, r6, pc}
   1a9a0:	mov	r4, r0
   1a9a4:	bl	1a990 <next@@Base+0x1334>
   1a9a8:	ldrd	r2, [r4]
   1a9ac:	adds	r0, r0, r2
   1a9b0:	adc	r1, r1, r3
   1a9b4:	subs	r5, r5, #1
   1a9b8:	strd	r0, [r4], #8
   1a9bc:	bne	1a9a4 <next@@Base+0x1348>
   1a9c0:	pop	{r4, r5, r6, pc}
   1a9c4:	ldr	r3, [pc, #20]	; 1a9e0 <next@@Base+0x1384>
   1a9c8:	ldr	r2, [pc, #20]	; 1a9e4 <next@@Base+0x1388>
   1a9cc:	add	r3, pc, r3
   1a9d0:	ldr	r3, [r3, r2]
   1a9d4:	ldmib	r3, {r0, r3}
   1a9d8:	add	r0, r0, r3
   1a9dc:	bx	lr
   1a9e0:	andeq	r3, r1, ip, lsr #12
   1a9e4:	andeq	r0, r0, r8, lsr #1
   1a9e8:	ldr	r3, [pc, #28]	; 1aa0c <next@@Base+0x13b0>
   1a9ec:	ldr	r2, [pc, #28]	; 1aa10 <next@@Base+0x13b4>
   1a9f0:	add	r3, pc, r3
   1a9f4:	ldr	r3, [r3, r2]
   1a9f8:	ldr	r2, [r3]
   1a9fc:	cmp	r2, #0
   1aa00:	ldrne	r0, [r3, #20]
   1aa04:	moveq	r0, #1
   1aa08:	bx	lr
   1aa0c:	andeq	r3, r1, r8, lsl #12
   1aa10:	andeq	r0, r0, r8, lsr #1
   1aa14:	bx	lr
   1aa18:	ldr	ip, [pc, #32]	; 1aa40 <next@@Base+0x13e4>
   1aa1c:	mov	r3, #32
   1aa20:	teq	r0, r1
   1aa24:	movmi	r2, ip
   1aa28:	movpl	r2, #0
   1aa2c:	subs	r3, r3, #1
   1aa30:	lsl	r1, r1, #1
   1aa34:	eor	r0, r2, r0, lsl #1
   1aa38:	bne	1aa20 <next@@Base+0x13c4>
   1aa3c:	bx	lr
   1aa40:	strbeq	r1, [r1], #3511	; 0xdb7
   1aa44:	ldr	r3, [pc, #76]	; 1aa98 <next@@Base+0x143c>
   1aa48:	ldr	r1, [pc, #76]	; 1aa9c <next@@Base+0x1440>
   1aa4c:	add	r3, pc, r3
   1aa50:	push	{r4, r5, r6, lr}
   1aa54:	mov	r5, r0
   1aa58:	ldr	r4, [r3, r1]
   1aa5c:	lsl	r1, r0, #2
   1aa60:	mov	r0, r4
   1aa64:	mov	r2, #1
   1aa68:	ldr	r3, [r0], #28
   1aa6c:	bl	1202c <fwrite@plt>
   1aa70:	cmp	r0, #1
   1aa74:	movne	r3, #1
   1aa78:	ldr	r0, [r4, #8]
   1aa7c:	strne	r3, [r4, #20]
   1aa80:	ldr	r3, [r4, #4]
   1aa84:	sub	r0, r0, r5
   1aa88:	add	r3, r3, r5
   1aa8c:	str	r3, [r4, #4]
   1aa90:	str	r0, [r4, #8]
   1aa94:	pop	{r4, r5, r6, pc}
   1aa98:	andeq	r3, r1, ip, lsr #11
   1aa9c:	andeq	r0, r0, r8, lsr #1
   1aaa0:	ldr	r3, [pc, #76]	; 1aaf4 <next@@Base+0x1498>
   1aaa4:	ldr	r2, [pc, #76]	; 1aaf8 <next@@Base+0x149c>
   1aaa8:	add	r3, pc, r3
   1aaac:	push	{r4, r5, r6, lr}
   1aab0:	mov	r5, r0
   1aab4:	ldr	r4, [r3, r2]
   1aab8:	ldr	r3, [r4, #8]
   1aabc:	cmp	r3, #1024	; 0x400
   1aac0:	bcc	1aae0 <next@@Base+0x1484>
   1aac4:	mov	r0, #1024	; 0x400
   1aac8:	bl	1aa44 <next@@Base+0x13e8>
   1aacc:	ldr	r3, [r4, #8]
   1aad0:	cmp	r3, #0
   1aad4:	addne	r2, r4, #4096	; 0x1000
   1aad8:	ldrne	r2, [r2, #28]
   1aadc:	strne	r2, [r4, #28]
   1aae0:	add	r0, r3, #7
   1aae4:	add	r3, r5, r3
   1aae8:	str	r3, [r4, #8]
   1aaec:	add	r0, r4, r0, lsl #2
   1aaf0:	pop	{r4, r5, r6, pc}
   1aaf4:	andeq	r3, r1, r0, asr r5
   1aaf8:	andeq	r0, r0, r8, lsr #1
   1aafc:	ldr	r3, [pc, #172]	; 1abb0 <next@@Base+0x1554>
   1ab00:	ldr	r2, [pc, #172]	; 1abb4 <next@@Base+0x1558>
   1ab04:	add	r3, pc, r3
   1ab08:	push	{r4, r5, r6, lr}
   1ab0c:	mov	r5, r0
   1ab10:	ldr	r4, [r3, r2]
   1ab14:	ldr	r3, [r4, #8]
   1ab18:	ldr	ip, [r4, #12]
   1ab1c:	sub	ip, ip, r3
   1ab20:	cmp	ip, r0
   1ab24:	bcs	1ab80 <next@@Base+0x1524>
   1ab28:	ldr	r2, [r4, #4]
   1ab2c:	cmp	ip, #0
   1ab30:	add	r2, r2, r3
   1ab34:	str	r2, [r4, #4]
   1ab38:	addne	r2, r4, #28
   1ab3c:	mov	r0, r4
   1ab40:	ldrne	r3, [r2, r3, lsl #2]
   1ab44:	mov	r6, #0
   1ab48:	strne	r3, [r4, #28]
   1ab4c:	ldr	r3, [r0], #28
   1ab50:	mov	r2, #4096	; 0x1000
   1ab54:	add	r0, r0, ip, lsl #2
   1ab58:	mov	r1, #1
   1ab5c:	str	ip, [r4, #12]
   1ab60:	str	r6, [r4, #8]
   1ab64:	bl	12044 <fread@plt>
   1ab68:	ldr	r3, [r4, #12]
   1ab6c:	add	r0, r3, r0, lsr #2
   1ab70:	cmp	r5, r0
   1ab74:	str	r0, [r4, #12]
   1ab78:	bhi	1ab94 <next@@Base+0x1538>
   1ab7c:	ldr	r3, [r4, #8]
   1ab80:	add	r0, r3, #7
   1ab84:	add	r5, r5, r3
   1ab88:	add	r0, r4, r0, lsl #2
   1ab8c:	str	r5, [r4, #8]
   1ab90:	pop	{r4, r5, r6, pc}
   1ab94:	ldr	r3, [r4, #16]
   1ab98:	str	r6, [r4, #12]
   1ab9c:	add	r5, r5, r3
   1aba0:	sub	r5, r5, r0
   1aba4:	str	r5, [r4, #16]
   1aba8:	mov	r0, r6
   1abac:	pop	{r4, r5, r6, pc}
   1abb0:	strdeq	r3, [r1], -r4
   1abb4:	andeq	r0, r0, r8, lsr #1
   1abb8:	push	{r0, r1, r2, r3}
   1abbc:	ldr	r3, [pc, #52]	; 1abf8 <next@@Base+0x159c>
   1abc0:	ldr	r1, [pc, #52]	; 1abfc <next@@Base+0x15a0>
   1abc4:	push	{lr}		; (str lr, [sp, #-4]!)
   1abc8:	add	r3, pc, r3
   1abcc:	sub	sp, sp, #12
   1abd0:	add	r2, sp, #20
   1abd4:	str	r2, [sp, #4]
   1abd8:	ldr	r0, [r3, r1]
   1abdc:	ldr	r1, [sp, #16]
   1abe0:	ldr	r0, [r0]
   1abe4:	bl	12128 <vfprintf@plt>
   1abe8:	add	sp, sp, #12
   1abec:	pop	{lr}		; (ldr lr, [sp], #4)
   1abf0:	add	sp, sp, #16
   1abf4:	bx	lr
   1abf8:	andeq	r3, r1, r0, lsr r4
   1abfc:	muleq	r0, ip, r0
   1ac00:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1ac04:	subs	r6, r1, #0
   1ac08:	beq	1ac64 <next@@Base+0x1608>
   1ac0c:	cmp	r2, #0
   1ac10:	movne	r3, #0
   1ac14:	mov	r7, r2
   1ac18:	ldr	r8, [r6]
   1ac1c:	addne	r5, r0, #12
   1ac20:	movne	r4, r3
   1ac24:	beq	1ac54 <next@@Base+0x15f8>
   1ac28:	ldr	r0, [r5, #4]!
   1ac2c:	add	r2, r6, r3, lsl #3
   1ac30:	cmp	r0, #0
   1ac34:	add	r9, r3, #1
   1ac38:	add	r4, r4, #1
   1ac3c:	beq	1ac4c <next@@Base+0x15f0>
   1ac40:	ldr	r0, [r2, #28]
   1ac44:	bl	12008 <free@plt>
   1ac48:	mov	r3, r9
   1ac4c:	cmp	r7, r4
   1ac50:	bne	1ac28 <next@@Base+0x15cc>
   1ac54:	mov	r0, r6
   1ac58:	bl	12008 <free@plt>
   1ac5c:	mov	r0, r8
   1ac60:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1ac64:	mov	r8, r6
   1ac68:	b	1ac5c <next@@Base+0x1600>
   1ac6c:	push	{r4, r5}
   1ac70:	mov	r4, r0
   1ac74:	mov	r5, r1
   1ac78:	orrs	r3, r4, r5
   1ac7c:	beq	1acc0 <next@@Base+0x1664>
   1ac80:	cmp	r1, #0
   1ac84:	clzeq	r1, r0
   1ac88:	addeq	r1, r1, #32
   1ac8c:	clzne	r1, r1
   1ac90:	rsb	r3, r1, #63	; 0x3f
   1ac94:	cmp	r3, #1
   1ac98:	bls	1acc0 <next@@Base+0x1664>
   1ac9c:	rsb	r2, r1, #61	; 0x3d
   1aca0:	rsb	r0, r2, #32
   1aca4:	lsr	r3, r4, r2
   1aca8:	sub	r2, r2, #32
   1acac:	orr	r3, r3, r5, lsl r0
   1acb0:	orr	r3, r3, r5, lsr r2
   1acb4:	rsb	r1, r1, #1073741886	; 0x4000003e
   1acb8:	and	r0, r3, #3
   1acbc:	add	r0, r0, r1, lsl #2
   1acc0:	pop	{r4, r5}
   1acc4:	bx	lr
   1acc8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1accc:	mov	r1, r3
   1acd0:	mov	sl, r0
   1acd4:	mov	r0, r2
   1acd8:	mov	r8, r2
   1acdc:	mov	r9, r3
   1ace0:	bl	1ac6c <next@@Base+0x1610>
   1ace4:	add	r0, r0, r0, lsl #1
   1ace8:	lsl	r0, r0, #3
   1acec:	add	r3, sl, r0
   1acf0:	ldr	r2, [sl, r0]
   1acf4:	ldrd	r4, [r3, #16]
   1acf8:	ldrd	r6, [r3, #8]
   1acfc:	add	r2, r2, #1
   1ad00:	adds	r4, r4, r8
   1ad04:	adc	r5, r5, r9
   1ad08:	cmp	r8, r6
   1ad0c:	sbcs	r1, r9, r7
   1ad10:	str	r2, [sl, r0]
   1ad14:	strd	r4, [r3, #16]
   1ad18:	strdlt	r8, [r3, #8]
   1ad1c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1ad20:	ldr	r3, [r1, #8]
   1ad24:	cmp	r3, #0
   1ad28:	bxeq	lr
   1ad2c:	push	{r4, r5, r6, r7, r8, lr}
   1ad30:	add	r2, r1, #6016	; 0x1780
   1ad34:	mov	r8, r1
   1ad38:	mov	r7, r0
   1ad3c:	ldrd	r0, [r1, #24]
   1ad40:	add	r2, r2, #32
   1ad44:	mov	r3, r8
   1ad48:	mov	ip, #0
   1ad4c:	mov	r4, #0
   1ad50:	mov	r5, #0
   1ad54:	str	ip, [r3, #40]	; 0x28
   1ad58:	strd	r0, [r3, #48]	; 0x30
   1ad5c:	strd	r4, [r3, #56]	; 0x38
   1ad60:	add	r3, r3, #24
   1ad64:	cmp	r2, r3
   1ad68:	bne	1ad54 <next@@Base+0x16f8>
   1ad6c:	cmp	r7, #0
   1ad70:	popeq	{r4, r5, r6, r7, r8, pc}
   1ad74:	add	r8, r8, #40	; 0x28
   1ad78:	ldr	r3, [r7, #16]
   1ad7c:	cmp	r3, #0
   1ad80:	beq	1ae08 <next@@Base+0x17ac>
   1ad84:	ldr	r2, [r7, #56]	; 0x38
   1ad88:	cmp	r2, #0
   1ad8c:	beq	1ae08 <next@@Base+0x17ac>
   1ad90:	mov	r6, #0
   1ad94:	b	1ada4 <next@@Base+0x1748>
   1ad98:	add	r6, r6, #1
   1ad9c:	cmp	r2, r6
   1ada0:	beq	1ae08 <next@@Base+0x17ac>
   1ada4:	ldr	r3, [r7, #60]	; 0x3c
   1ada8:	ldr	r4, [r3, r6, lsl #2]
   1adac:	cmp	r4, #0
   1adb0:	beq	1ad98 <next@@Base+0x173c>
   1adb4:	ldr	r3, [r4]
   1adb8:	cmp	r3, r7
   1adbc:	bne	1ad98 <next@@Base+0x173c>
   1adc0:	ldr	r3, [r4, #16]
   1adc4:	cmp	r3, #0
   1adc8:	beq	1ad98 <next@@Base+0x173c>
   1adcc:	mov	r5, #0
   1add0:	ldr	r2, [r4, #20]
   1add4:	lsl	r3, r5, #3
   1add8:	add	r2, r2, r3
   1addc:	mov	r0, r8
   1ade0:	ldrd	r2, [r2]
   1ade4:	bl	1acc8 <next@@Base+0x166c>
   1ade8:	ldr	r3, [r4, #16]
   1adec:	add	r5, r5, #1
   1adf0:	cmp	r3, r5
   1adf4:	bhi	1add0 <next@@Base+0x1774>
   1adf8:	ldr	r2, [r7, #56]	; 0x38
   1adfc:	add	r6, r6, #1
   1ae00:	cmp	r2, r6
   1ae04:	bne	1ada4 <next@@Base+0x1748>
   1ae08:	ldr	r7, [r7, #4]
   1ae0c:	cmp	r7, #0
   1ae10:	bne	1ad78 <next@@Base+0x171c>
   1ae14:	pop	{r4, r5, r6, r7, r8, pc}
   1ae18:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ae1c:	sub	sp, sp, #12
   1ae20:	mov	r5, r0
   1ae24:	str	r0, [sp, #4]
   1ae28:	mov	r6, r2
   1ae2c:	str	r2, [sp]
   1ae30:	mov	r0, r1
   1ae34:	mov	r4, r1
   1ae38:	ldr	r2, [pc, #344]	; 1af98 <next@@Base+0x193c>
   1ae3c:	mov	r1, #0
   1ae40:	bl	120f8 <memset@plt>
   1ae44:	subs	r3, r5, #0
   1ae48:	mov	r5, #0
   1ae4c:	str	r5, [r6]
   1ae50:	beq	1af7c <next@@Base+0x1920>
   1ae54:	mov	r7, r5
   1ae58:	mov	r9, r5
   1ae5c:	mov	r8, r3
   1ae60:	ldr	r0, [r8, #12]
   1ae64:	bl	120b0 <strlen@plt>
   1ae68:	cmp	r5, r0
   1ae6c:	ldrcc	r3, [sp]
   1ae70:	strcc	r0, [r3]
   1ae74:	mov	r0, r7
   1ae78:	ldr	r1, [r8, #8]
   1ae7c:	bl	1aa18 <next@@Base+0x13bc>
   1ae80:	ldr	r6, [r8, #56]	; 0x38
   1ae84:	mov	r1, r6
   1ae88:	bl	1aa18 <next@@Base+0x13bc>
   1ae8c:	cmp	r6, #0
   1ae90:	mov	r7, r0
   1ae94:	beq	1af64 <next@@Base+0x1908>
   1ae98:	ldr	r5, [r8, #60]	; 0x3c
   1ae9c:	add	r6, r5, r6, lsl #2
   1aea0:	b	1aec4 <next@@Base+0x1868>
   1aea4:	mov	r0, r7
   1aea8:	mov	r1, r9
   1aeac:	bl	1aa18 <next@@Base+0x13bc>
   1aeb0:	mov	r1, r9
   1aeb4:	bl	1aa18 <next@@Base+0x13bc>
   1aeb8:	mov	r7, r0
   1aebc:	cmp	r6, r5
   1aec0:	beq	1af64 <next@@Base+0x1908>
   1aec4:	ldr	fp, [r5], #4
   1aec8:	cmp	fp, #0
   1aecc:	beq	1aea4 <next@@Base+0x1848>
   1aed0:	ldr	r3, [fp]
   1aed4:	cmp	r3, r8
   1aed8:	bne	1aea4 <next@@Base+0x1848>
   1aedc:	mov	r0, r7
   1aee0:	ldr	r1, [fp, #12]
   1aee4:	bl	1aa18 <next@@Base+0x13bc>
   1aee8:	ldr	r1, [fp, #8]
   1aeec:	bl	1aa18 <next@@Base+0x13bc>
   1aef0:	ldr	r3, [r8, #16]
   1aef4:	cmp	r3, #0
   1aef8:	mov	r7, r0
   1aefc:	beq	1aebc <next@@Base+0x1860>
   1af00:	ldr	sl, [fp, #16]
   1af04:	ldr	r3, [r4, #8]
   1af08:	mov	r1, sl
   1af0c:	add	r3, r3, sl
   1af10:	str	r3, [r4, #8]
   1af14:	bl	1aa18 <next@@Base+0x13bc>
   1af18:	cmp	sl, #0
   1af1c:	mov	r7, r0
   1af20:	beq	1aebc <next@@Base+0x1860>
   1af24:	ldr	ip, [fp, #20]
   1af28:	ldrd	r2, [r4, #16]
   1af2c:	add	lr, ip, sl, lsl #3
   1af30:	ldrd	r0, [ip]
   1af34:	ldrd	sl, [r4, #24]
   1af38:	adds	r2, r2, r0
   1af3c:	adc	r3, r3, r1
   1af40:	strd	r2, [r4, #16]
   1af44:	ldrd	r0, [ip], #8
   1af48:	cmp	sl, r0
   1af4c:	sbcs	sl, fp, r1
   1af50:	strdlt	r0, [r4, #24]
   1af54:	cmp	lr, ip
   1af58:	bne	1af30 <next@@Base+0x18d4>
   1af5c:	cmp	r6, r5
   1af60:	bne	1aec4 <next@@Base+0x1868>
   1af64:	ldr	r8, [r8, #4]
   1af68:	cmp	r8, #0
   1af6c:	beq	1af80 <next@@Base+0x1924>
   1af70:	ldr	r3, [sp]
   1af74:	ldr	r5, [r3]
   1af78:	b	1ae60 <next@@Base+0x1804>
   1af7c:	ldr	r7, [sp, #4]
   1af80:	ldr	r0, [sp, #4]
   1af84:	mov	r1, r4
   1af88:	bl	1ad20 <next@@Base+0x16c4>
   1af8c:	mov	r0, r7
   1af90:	add	sp, sp, #12
   1af94:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1af98:	andeq	r1, r0, r8, asr #15
   1af9c:	push	{r4, r5, r6, lr}
   1afa0:	mov	r4, r0
   1afa4:	ldr	r0, [pc, #172]	; 1b058 <next@@Base+0x19fc>
   1afa8:	add	r0, pc, r0
   1afac:	bl	12050 <getenv@plt>
   1afb0:	subs	r3, r0, #0
   1afb4:	beq	1afc0 <next@@Base+0x1964>
   1afb8:	bl	12140 <atoi@plt>
   1afbc:	bic	r3, r0, r0, asr #31
   1afc0:	ldr	r0, [pc, #148]	; 1b05c <next@@Base+0x1a00>
   1afc4:	str	r3, [r4, #8]
   1afc8:	add	r0, pc, r0
   1afcc:	bl	12050 <getenv@plt>
   1afd0:	subs	r6, r0, #0
   1afd4:	beq	1b028 <next@@Base+0x19cc>
   1afd8:	bl	120b0 <strlen@plt>
   1afdc:	subs	r5, r0, #0
   1afe0:	beq	1b028 <next@@Base+0x19cc>
   1afe4:	sub	r3, r5, #1
   1afe8:	ldrb	r2, [r6, r3]
   1afec:	cmp	r2, #47	; 0x2f
   1aff0:	beq	1b01c <next@@Base+0x19c0>
   1aff4:	ldr	r0, [r4, #4]
   1aff8:	str	r5, [r4, #12]
   1affc:	add	r0, r0, #2
   1b000:	add	r0, r0, r5
   1b004:	bl	1205c <malloc@plt>
   1b008:	mov	r2, r5
   1b00c:	mov	r1, r6
   1b010:	str	r0, [r4]
   1b014:	pop	{r4, r5, r6, lr}
   1b018:	b	12014 <memcpy@plt>
   1b01c:	cmp	r3, #0
   1b020:	movne	r5, r3
   1b024:	bne	1aff4 <next@@Base+0x1998>
   1b028:	ldr	r3, [r4, #8]
   1b02c:	cmp	r3, #0
   1b030:	ldrne	r6, [pc, #40]	; 1b060 <next@@Base+0x1a04>
   1b034:	movne	r5, #1
   1b038:	addne	r6, pc, r6
   1b03c:	bne	1aff4 <next@@Base+0x1998>
   1b040:	ldr	r0, [r4, #4]
   1b044:	str	r3, [r4, #12]
   1b048:	add	r0, r0, #2
   1b04c:	bl	1205c <malloc@plt>
   1b050:	str	r0, [r4]
   1b054:	pop	{r4, r5, r6, pc}
   1b058:	andeq	r2, r0, r4, lsr r6
   1b05c:	andeq	r2, r0, r8, lsr #12
   1b060:	andeq	r2, r0, r0, lsr #11
   1b064:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b068:	sub	sp, sp, #6080	; 0x17c0
   1b06c:	sub	sp, sp, #44	; 0x2c
   1b070:	add	r3, sp, #72	; 0x48
   1b074:	mov	r4, r0
   1b078:	str	r0, [sp, #64]	; 0x40
   1b07c:	str	r1, [sp, #60]	; 0x3c
   1b080:	mov	r0, r3
   1b084:	ldr	r2, [pc, #1068]	; 1b4b8 <next@@Base+0x1e5c>
   1b088:	mov	r1, #0
   1b08c:	str	r3, [sp, #68]	; 0x44
   1b090:	bl	120f8 <memset@plt>
   1b094:	add	r3, r4, #6016	; 0x1780
   1b098:	add	r3, r3, #8
   1b09c:	add	r2, sp, #2016	; 0x7e0
   1b0a0:	mov	sl, #251	; 0xfb
   1b0a4:	add	r2, r2, #8
   1b0a8:	mov	fp, #0
   1b0ac:	str	r3, [sp, #56]	; 0x38
   1b0b0:	add	r3, sp, #72	; 0x48
   1b0b4:	str	r2, [sp, #44]	; 0x2c
   1b0b8:	str	r3, [sp, #48]	; 0x30
   1b0bc:	mov	r2, #0
   1b0c0:	mov	r3, #0
   1b0c4:	mov	r5, sl
   1b0c8:	mov	r0, fp
   1b0cc:	strd	r2, [sp, #24]
   1b0d0:	str	sl, [sp, #52]	; 0x34
   1b0d4:	ldr	r9, [sp, #56]	; 0x38
   1b0d8:	str	r5, [sp, #40]	; 0x28
   1b0dc:	ldr	sl, [sp, #60]	; 0x3c
   1b0e0:	ldrd	r2, [r9, #16]
   1b0e4:	ldr	r4, [r9]
   1b0e8:	str	r4, [sp, #4]
   1b0ec:	strd	r2, [sp, #8]
   1b0f0:	ldr	r3, [sp, #4]
   1b0f4:	cmp	r3, #0
   1b0f8:	beq	1b3a4 <next@@Base+0x1d48>
   1b0fc:	cmp	fp, #0
   1b100:	bne	1b288 <next@@Base+0x1c2c>
   1b104:	ldr	r5, [sp, #40]	; 0x28
   1b108:	cmp	r5, #0
   1b10c:	blt	1b494 <next@@Base+0x1e38>
   1b110:	add	ip, r5, r5, lsl #1
   1b114:	ldr	fp, [sl, ip, lsl #3]
   1b118:	add	ip, sl, ip, lsl #3
   1b11c:	cmp	fp, #0
   1b120:	bne	1b488 <next@@Base+0x1e2c>
   1b124:	mov	r3, ip
   1b128:	ldr	r4, [sp, #4]
   1b12c:	b	1b140 <next@@Base+0x1ae4>
   1b130:	ldr	fp, [r3]
   1b134:	mov	ip, r3
   1b138:	cmp	fp, #0
   1b13c:	bne	1b480 <next@@Base+0x1e24>
   1b140:	subs	r5, r5, #1
   1b144:	sub	r3, r3, #24
   1b148:	bcs	1b130 <next@@Base+0x1ad4>
   1b14c:	ldr	sl, [sp, #52]	; 0x34
   1b150:	mov	r8, r0
   1b154:	mov	r5, r4
   1b158:	lsl	r4, sl, #1
   1b15c:	ldr	r3, [sp, #44]	; 0x2c
   1b160:	add	lr, r4, sl
   1b164:	sub	ip, r3, #1952	; 0x7a0
   1b168:	lsl	lr, lr, #3
   1b16c:	add	ip, ip, lr
   1b170:	ldrd	r0, [sp, #8]
   1b174:	add	lr, r3, lr
   1b178:	ldrd	r2, [ip, #16]
   1b17c:	ldr	r6, [lr, #-1952]	; 0xfffff860
   1b180:	adds	r0, r0, r2
   1b184:	adc	r1, r1, r3
   1b188:	mov	r2, r0
   1b18c:	mov	r3, r1
   1b190:	ldrd	r0, [ip, #8]
   1b194:	strd	r2, [ip, #16]
   1b198:	ldr	r3, [sp, #56]	; 0x38
   1b19c:	add	r5, r6, r5
   1b1a0:	str	r5, [lr, #-1952]	; 0xfffff860
   1b1a4:	orrs	lr, r0, r1
   1b1a8:	ldrd	r2, [r3, #8]
   1b1ac:	beq	1b1bc <next@@Base+0x1b60>
   1b1b0:	cmp	r2, r0
   1b1b4:	sbcs	r1, r3, r1
   1b1b8:	bge	1b1d0 <next@@Base+0x1b74>
   1b1bc:	ldr	r1, [sp, #44]	; 0x2c
   1b1c0:	add	r0, r4, sl
   1b1c4:	sub	r1, r1, #1952	; 0x7a0
   1b1c8:	add	r1, r1, r0, lsl #3
   1b1cc:	strd	r2, [r1, #8]
   1b1d0:	add	lr, r4, sl
   1b1d4:	ldr	r3, [sp, #68]	; 0x44
   1b1d8:	lsl	lr, lr, #3
   1b1dc:	add	ip, r3, lr
   1b1e0:	ldr	r3, [sp, #64]	; 0x40
   1b1e4:	add	lr, r3, lr
   1b1e8:	b	1b238 <next@@Base+0x1bdc>
   1b1ec:	ldrd	r0, [ip, #-8]
   1b1f0:	ldrd	r2, [lr, #-8]
   1b1f4:	ldrd	r4, [ip, #-16]
   1b1f8:	adds	r6, r0, r2
   1b1fc:	adc	r7, r1, r3
   1b200:	ldr	r2, [lr, #-24]	; 0xffffffe8
   1b204:	ldr	r3, [ip, #-24]	; 0xffffffe8
   1b208:	orrs	r1, r4, r5
   1b20c:	add	r3, r3, r2
   1b210:	str	r3, [ip, #-24]	; 0xffffffe8
   1b214:	strd	r6, [ip, #-8]
   1b218:	ldrd	r2, [lr, #-16]
   1b21c:	beq	1b22c <next@@Base+0x1bd0>
   1b220:	cmp	r2, r4
   1b224:	sbcs	r1, r3, r5
   1b228:	bge	1b230 <next@@Base+0x1bd4>
   1b22c:	strd	r2, [ip, #-16]
   1b230:	sub	ip, ip, #24
   1b234:	sub	lr, lr, #24
   1b238:	subs	sl, sl, #1
   1b23c:	bpl	1b1ec <next@@Base+0x1b90>
   1b240:	ldr	r3, [sp, #44]	; 0x2c
   1b244:	add	r0, r8, r8, lsl #1
   1b248:	sub	r3, r3, #1952	; 0x7a0
   1b24c:	add	r3, r3, r0, lsl #3
   1b250:	ldrd	r6, [sp, #24]
   1b254:	ldrd	r4, [r3, #16]
   1b258:	ldr	r1, [sp, #68]	; 0x44
   1b25c:	ldr	r0, [sp, #64]	; 0x40
   1b260:	adds	r6, r6, r4
   1b264:	adc	r7, r7, r5
   1b268:	mov	r4, r6
   1b26c:	mov	r5, r7
   1b270:	ldr	r2, [pc, #576]	; 1b4b8 <next@@Base+0x1e5c>
   1b274:	strd	r4, [r3, #16]
   1b278:	bl	12014 <memcpy@plt>
   1b27c:	add	sp, sp, #6080	; 0x17c0
   1b280:	add	sp, sp, #44	; 0x2c
   1b284:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b288:	ldr	r3, [sp, #40]	; 0x28
   1b28c:	add	ip, r3, r3, lsl #1
   1b290:	add	ip, sl, ip, lsl #3
   1b294:	ldr	lr, [sp, #4]
   1b298:	cmp	fp, lr
   1b29c:	bcc	1b414 <next@@Base+0x1db8>
   1b2a0:	ldrd	r2, [r9, #8]
   1b2a4:	ldrd	r0, [ip, #8]
   1b2a8:	adds	r4, r2, r0
   1b2ac:	adc	r5, r3, r1
   1b2b0:	cmp	fp, lr
   1b2b4:	strd	r4, [sp, #16]
   1b2b8:	bls	1b4a4 <next@@Base+0x1e48>
   1b2bc:	ldrd	r6, [sp, #24]
   1b2c0:	mov	r2, fp
   1b2c4:	mov	r3, #0
   1b2c8:	umull	r0, r1, lr, r6
   1b2cc:	mla	r1, lr, r7, r1
   1b2d0:	bl	1cbac <__gcov_sort_n_vals@@Base+0x740>
   1b2d4:	mov	r2, r0
   1b2d8:	subs	r0, r6, r2
   1b2dc:	mov	r3, r1
   1b2e0:	sbc	r1, r7, r3
   1b2e4:	strd	r0, [sp, #24]
   1b2e8:	ldr	r1, [sp, #4]
   1b2ec:	mov	r0, #0
   1b2f0:	sub	fp, fp, r1
   1b2f4:	mov	r8, r1
   1b2f8:	mov	r1, #0
   1b2fc:	str	r1, [sp, #4]
   1b300:	mov	r1, #0
   1b304:	ldrd	r6, [sp, #8]
   1b308:	strd	r0, [sp, #8]
   1b30c:	adds	r4, r2, r6
   1b310:	adc	r5, r3, r7
   1b314:	ldrd	r0, [sp, #16]
   1b318:	strd	r4, [sp, #32]
   1b31c:	bl	1ac6c <next@@Base+0x1610>
   1b320:	ldr	r3, [sp, #48]	; 0x30
   1b324:	ldrd	r4, [sp, #32]
   1b328:	add	r1, r0, r0, lsl #1
   1b32c:	lsl	r1, r1, #3
   1b330:	add	ip, r3, r1
   1b334:	ldr	r3, [sp, #44]	; 0x2c
   1b338:	ldrd	r6, [ip, #8]
   1b33c:	add	r1, r3, r1
   1b340:	ldrd	r2, [ip, #16]
   1b344:	adds	r2, r2, r4
   1b348:	adc	r3, r3, r5
   1b34c:	strd	r2, [sp, #32]
   1b350:	ldrd	r2, [sp, #16]
   1b354:	cmp	r2, r6
   1b358:	sbcs	lr, r3, r7
   1b35c:	movlt	lr, #1
   1b360:	movge	lr, #0
   1b364:	orrs	r4, r6, r7
   1b368:	ldr	r4, [r1, #-1952]	; 0xfffff860
   1b36c:	orreq	lr, lr, #1
   1b370:	add	r8, r4, r8
   1b374:	ldrd	r4, [sp, #32]
   1b378:	cmp	lr, #0
   1b37c:	str	r8, [r1, #-1952]	; 0xfffff860
   1b380:	strd	r4, [ip, #16]
   1b384:	strdne	r2, [ip, #8]
   1b388:	cmp	fp, #0
   1b38c:	ldreq	r3, [sp, #40]	; 0x28
   1b390:	subeq	r3, r3, #1
   1b394:	streq	r3, [sp, #40]	; 0x28
   1b398:	ldr	r3, [sp, #4]
   1b39c:	cmp	r3, #0
   1b3a0:	bne	1b0fc <next@@Base+0x1aa0>
   1b3a4:	ldr	r3, [sp, #52]	; 0x34
   1b3a8:	ldr	r5, [sp, #40]	; 0x28
   1b3ac:	sub	r3, r3, #1
   1b3b0:	str	r3, [sp, #52]	; 0x34
   1b3b4:	cmn	r3, #1
   1b3b8:	ldr	r3, [sp, #56]	; 0x38
   1b3bc:	sub	r3, r3, #24
   1b3c0:	str	r3, [sp, #56]	; 0x38
   1b3c4:	bne	1b0d4 <next@@Base+0x1a78>
   1b3c8:	cmp	fp, #0
   1b3cc:	mov	r9, r5
   1b3d0:	subne	r9, r5, #1
   1b3d4:	cmp	r9, #0
   1b3d8:	mov	r8, r0
   1b3dc:	blt	1b240 <next@@Base+0x1be4>
   1b3e0:	ldr	r2, [sp, #60]	; 0x3c
   1b3e4:	add	r3, r9, r9, lsl #1
   1b3e8:	sub	r0, r2, #24
   1b3ec:	add	r1, r2, r3, lsl #3
   1b3f0:	ldrd	r2, [sp, #24]
   1b3f4:	ldrd	r4, [r1, #16]
   1b3f8:	sub	r1, r1, #24
   1b3fc:	adds	r2, r2, r4
   1b400:	adc	r3, r3, r5
   1b404:	cmp	r0, r1
   1b408:	bne	1b3f4 <next@@Base+0x1d98>
   1b40c:	strd	r2, [sp, #24]
   1b410:	b	1b240 <next@@Base+0x1be4>
   1b414:	ldrd	r2, [sp, #8]
   1b418:	ldrd	r6, [ip, #8]
   1b41c:	ldrd	r4, [r9, #8]
   1b420:	umull	r0, r1, fp, r2
   1b424:	ldr	r8, [sp, #4]
   1b428:	adds	r4, r4, r6
   1b42c:	adc	r5, r5, r7
   1b430:	mla	r1, fp, r3, r1
   1b434:	mov	r2, r8
   1b438:	mov	r3, #0
   1b43c:	strd	r4, [sp, #16]
   1b440:	bl	1cbac <__gcov_sort_n_vals@@Base+0x740>
   1b444:	sub	r3, r8, fp
   1b448:	str	r3, [sp, #4]
   1b44c:	ldrd	r2, [sp, #8]
   1b450:	mov	r8, fp
   1b454:	mov	fp, #0
   1b458:	subs	r2, r2, r0
   1b45c:	sbc	r3, r3, r1
   1b460:	mov	r6, r0
   1b464:	mov	r7, r1
   1b468:	mov	r0, #0
   1b46c:	mov	r1, #0
   1b470:	strd	r2, [sp, #8]
   1b474:	ldrd	r2, [sp, #24]
   1b478:	strd	r0, [sp, #24]
   1b47c:	b	1b30c <next@@Base+0x1cb0>
   1b480:	str	r5, [sp, #40]	; 0x28
   1b484:	str	r4, [sp, #4]
   1b488:	ldrd	r2, [ip, #16]
   1b48c:	strd	r2, [sp, #24]
   1b490:	b	1b294 <next@@Base+0x1c38>
   1b494:	ldr	sl, [sp, #52]	; 0x34
   1b498:	mov	r8, r0
   1b49c:	ldr	r5, [sp, #4]
   1b4a0:	b	1b158 <next@@Base+0x1afc>
   1b4a4:	mov	r0, #0
   1b4a8:	mov	r1, #0
   1b4ac:	ldrd	r2, [sp, #24]
   1b4b0:	strd	r0, [sp, #24]
   1b4b4:	b	1b2e8 <next@@Base+0x1c8c>
   1b4b8:	andeq	r1, r0, r0, lsr #15
   1b4bc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1b4c0:	ldrb	r4, [r0]
   1b4c4:	cmp	r4, #47	; 0x2f
   1b4c8:	addeq	r5, r0, #1
   1b4cc:	ldrbeq	r4, [r0, #1]
   1b4d0:	movne	r5, r0
   1b4d4:	cmp	r4, #0
   1b4d8:	beq	1b52c <next@@Base+0x1ed0>
   1b4dc:	mov	r6, r0
   1b4e0:	ldr	sl, [pc, #144]	; 1b578 <next@@Base+0x1f1c>
   1b4e4:	mov	r8, #0
   1b4e8:	mov	r7, #47	; 0x2f
   1b4ec:	b	1b4fc <next@@Base+0x1ea0>
   1b4f0:	ldrb	r4, [r5, #1]!
   1b4f4:	cmp	r4, #0
   1b4f8:	beq	1b52c <next@@Base+0x1ed0>
   1b4fc:	cmp	r4, #47	; 0x2f
   1b500:	bne	1b4f0 <next@@Base+0x1e94>
   1b504:	strb	r8, [r5]
   1b508:	mov	r1, #0
   1b50c:	mov	r0, r6
   1b510:	bl	12110 <access@plt>
   1b514:	cmn	r0, #1
   1b518:	beq	1b538 <next@@Base+0x1edc>
   1b51c:	strb	r7, [r5]
   1b520:	ldrb	r4, [r5, #1]!
   1b524:	cmp	r4, #0
   1b528:	bne	1b4fc <next@@Base+0x1ea0>
   1b52c:	mov	r9, #0
   1b530:	mov	r0, r9
   1b534:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1b538:	mov	r1, sl
   1b53c:	mov	r0, r6
   1b540:	bl	120e0 <mkdir@plt>
   1b544:	cmn	r0, #1
   1b548:	mov	r9, r0
   1b54c:	bne	1b51c <next@@Base+0x1ec0>
   1b550:	bl	120c8 <__errno_location@plt>
   1b554:	ldr	r3, [r0]
   1b558:	cmp	r3, #17
   1b55c:	beq	1b51c <next@@Base+0x1ec0>
   1b560:	ldr	r0, [pc, #20]	; 1b57c <next@@Base+0x1f20>
   1b564:	mov	r1, r6
   1b568:	add	r0, pc, r0
   1b56c:	bl	1abb8 <next@@Base+0x155c>
   1b570:	strb	r4, [r5]
   1b574:	b	1b530 <next@@Base+0x1ed4>
   1b578:	andeq	r0, r0, sp, ror #3
   1b57c:	muleq	r0, r4, r0
   1b580:	ldr	r3, [pc, #124]	; 1b604 <next@@Base+0x1fa8>
   1b584:	cmp	r1, r3
   1b588:	beq	1b5fc <next@@Base+0x1fa0>
   1b58c:	cmp	r2, #0
   1b590:	push	{r4, r5, lr}
   1b594:	sub	sp, sp, #12
   1b598:	ldreq	r2, [r0]
   1b59c:	lsr	r3, r1, #24
   1b5a0:	ldr	r0, [pc, #96]	; 1b608 <next@@Base+0x1fac>
   1b5a4:	lsr	r5, r1, #16
   1b5a8:	lsr	r4, r1, #8
   1b5ac:	strb	r1, [sp, #3]
   1b5b0:	strb	r3, [sp]
   1b5b4:	mov	r1, #53	; 0x35
   1b5b8:	mov	r3, #42	; 0x2a
   1b5bc:	mov	lr, #54	; 0x36
   1b5c0:	mov	ip, #48	; 0x30
   1b5c4:	strb	r1, [sp, #6]
   1b5c8:	strb	r3, [sp, #7]
   1b5cc:	mov	r1, r2
   1b5d0:	mov	r3, sp
   1b5d4:	add	r2, sp, #4
   1b5d8:	add	r0, pc, r0
   1b5dc:	strb	r5, [sp, #1]
   1b5e0:	strb	r4, [sp, #2]
   1b5e4:	strb	lr, [sp, #4]
   1b5e8:	strb	ip, [sp, #5]
   1b5ec:	bl	1abb8 <next@@Base+0x155c>
   1b5f0:	mov	r0, #0
   1b5f4:	add	sp, sp, #12
   1b5f8:	pop	{r4, r5, pc}
   1b5fc:	mov	r0, #1
   1b600:	bx	lr
   1b604:	ldrtcc	r3, [r0], -sl, lsr #10
   1b608:	andeq	r2, r0, ip, asr #32
   1b60c:	ldr	r2, [r2, #16]
   1b610:	push	{r4, r5, r6, lr}
   1b614:	cmp	r2, #0
   1b618:	mov	r6, r3
   1b61c:	ldr	ip, [sp, #16]
   1b620:	beq	1b6ec <next@@Base+0x2090>
   1b624:	ldr	r3, [r3, #12]
   1b628:	cmp	r1, #0
   1b62c:	addeq	r2, r3, #1
   1b630:	streq	r2, [r6, #12]
   1b634:	cmp	r3, #0
   1b638:	beq	1b690 <next@@Base+0x2034>
   1b63c:	ldrd	r0, [ip, #16]
   1b640:	ldrd	r2, [r6, #16]
   1b644:	ldrd	r4, [r6, #24]
   1b648:	adds	r2, r2, r0
   1b64c:	adc	r3, r3, r1
   1b650:	strd	r2, [r6, #16]
   1b654:	ldrd	r0, [ip, #24]
   1b658:	cmp	r4, r0
   1b65c:	sbcs	r3, r5, r1
   1b660:	blt	1b710 <next@@Base+0x20b4>
   1b664:	ldrd	r2, [r6, #32]
   1b668:	adds	r2, r2, r0
   1b66c:	adc	r3, r3, r1
   1b670:	strd	r2, [r6, #32]
   1b674:	add	r1, ip, #40	; 0x28
   1b678:	add	r0, r6, #40	; 0x28
   1b67c:	bl	1b064 <next@@Base+0x1a08>
   1b680:	ldr	r3, [sp, #20]
   1b684:	mov	r0, #0
   1b688:	str	r3, [r6]
   1b68c:	pop	{r4, r5, r6, pc}
   1b690:	ldr	r1, [ip, #8]
   1b694:	ldrd	r2, [r6, #16]
   1b698:	str	r1, [r6, #8]
   1b69c:	ldrd	r0, [ip, #16]
   1b6a0:	ldrd	r4, [r6, #24]
   1b6a4:	adds	r2, r2, r0
   1b6a8:	adc	r3, r3, r1
   1b6ac:	strd	r2, [r6, #16]
   1b6b0:	ldrd	r0, [ip, #24]
   1b6b4:	cmp	r4, r0
   1b6b8:	sbcs	r3, r5, r1
   1b6bc:	bge	1b72c <next@@Base+0x20d0>
   1b6c0:	ldrd	r2, [r6, #32]
   1b6c4:	strd	r0, [r6, #24]
   1b6c8:	ldrd	r0, [ip, #24]
   1b6cc:	adds	r2, r2, r0
   1b6d0:	adc	r3, r3, r1
   1b6d4:	strd	r2, [r6, #32]
   1b6d8:	add	r1, ip, #40	; 0x28
   1b6dc:	ldr	r2, [pc, #92]	; 1b740 <next@@Base+0x20e4>
   1b6e0:	add	r0, r6, #40	; 0x28
   1b6e4:	bl	12014 <memcpy@plt>
   1b6e8:	b	1b680 <next@@Base+0x2024>
   1b6ec:	ldr	r3, [r3, #12]
   1b6f0:	cmp	r3, #0
   1b6f4:	beq	1b680 <next@@Base+0x2024>
   1b6f8:	mov	r1, r0
   1b6fc:	ldr	r0, [pc, #64]	; 1b744 <next@@Base+0x20e8>
   1b700:	add	r0, pc, r0
   1b704:	bl	1abb8 <next@@Base+0x155c>
   1b708:	mvn	r0, #0
   1b70c:	pop	{r4, r5, r6, pc}
   1b710:	ldrd	r2, [r6, #32]
   1b714:	strd	r0, [r6, #24]
   1b718:	ldrd	r0, [ip, #24]
   1b71c:	adds	r2, r2, r0
   1b720:	adc	r3, r3, r1
   1b724:	strd	r2, [r6, #32]
   1b728:	b	1b674 <next@@Base+0x2018>
   1b72c:	ldrd	r2, [r6, #32]
   1b730:	adds	r2, r2, r0
   1b734:	adc	r3, r3, r1
   1b738:	strd	r2, [r6, #32]
   1b73c:	b	1b6d8 <next@@Base+0x207c>
   1b740:	andeq	r1, r0, r0, lsr #15
   1b744:	andeq	r1, r0, ip, asr pc
   1b748:	ldr	ip, [pc, #52]	; 1b784 <next@@Base+0x2128>
   1b74c:	ldr	r3, [pc, #52]	; 1b788 <next@@Base+0x212c>
   1b750:	add	ip, pc, ip
   1b754:	push	{r4, lr}
   1b758:	mov	lr, #0
   1b75c:	ldr	r3, [ip, r3]
   1b760:	mvn	r4, #0
   1b764:	mov	r2, lr
   1b768:	mov	r1, lr
   1b76c:	str	r4, [r3, #24]
   1b770:	str	lr, [r3, #4]
   1b774:	str	lr, [r3, #8]
   1b778:	ldr	r0, [r3]
   1b77c:	pop	{r4, lr}
   1b780:	b	1214c <fseek@plt>
   1b784:	andeq	r2, r1, r8, lsr #17
   1b788:	andeq	r0, r0, r8, lsr #1
   1b78c:	push	{r4, r5, r6, r7, lr}
   1b790:	sub	sp, sp, #108	; 0x6c
   1b794:	mov	r4, #0
   1b798:	mov	r7, r0
   1b79c:	strh	r4, [sp, #2]
   1b7a0:	str	r4, [sp, #4]
   1b7a4:	str	r4, [sp, #8]
   1b7a8:	bl	12098 <getpid@plt>
   1b7ac:	ldr	r3, [pc, #240]	; 1b8a4 <next@@Base+0x2248>
   1b7b0:	ldr	ip, [pc, #240]	; 1b8a8 <next@@Base+0x224c>
   1b7b4:	add	r3, pc, r3
   1b7b8:	mvn	lr, #0
   1b7bc:	mov	r6, #1
   1b7c0:	ldr	r2, [pc, #228]	; 1b8ac <next@@Base+0x2250>
   1b7c4:	mov	r1, #66	; 0x42
   1b7c8:	str	r0, [sp, #12]
   1b7cc:	ldr	r5, [r3, ip]
   1b7d0:	mov	r0, r7
   1b7d4:	strh	r6, [sp]
   1b7d8:	str	r4, [r5, #4]
   1b7dc:	str	r4, [r5, #12]
   1b7e0:	str	r4, [r5, #8]
   1b7e4:	str	r4, [r5, #20]
   1b7e8:	str	lr, [r5, #16]
   1b7ec:	bl	1208c <open@plt>
   1b7f0:	subs	r6, r0, #0
   1b7f4:	movlt	r0, r4
   1b7f8:	blt	1b878 <next@@Base+0x221c>
   1b7fc:	mov	r7, sp
   1b800:	mov	r4, #7
   1b804:	mov	r2, r7
   1b808:	mov	r1, r4
   1b80c:	mov	r0, r6
   1b810:	bl	120ec <fcntl@plt>
   1b814:	cmp	r0, #0
   1b818:	beq	1b82c <next@@Base+0x21d0>
   1b81c:	bl	120c8 <__errno_location@plt>
   1b820:	ldr	r3, [r0]
   1b824:	cmp	r3, #4
   1b828:	beq	1b804 <next@@Base+0x21a8>
   1b82c:	ldr	r1, [pc, #124]	; 1b8b0 <next@@Base+0x2254>
   1b830:	mov	r0, r6
   1b834:	add	r1, pc, r1
   1b838:	bl	11fc0 <fdopen@plt>
   1b83c:	mov	r4, r0
   1b840:	cmp	r4, #0
   1b844:	mov	r0, r6
   1b848:	str	r4, [r5]
   1b84c:	beq	1b880 <next@@Base+0x2224>
   1b850:	add	r1, sp, #16
   1b854:	bl	1ce78 <__libc_csu_fini@@Base+0x1c>
   1b858:	cmp	r0, #0
   1b85c:	blt	1b88c <next@@Base+0x2230>
   1b860:	mov	r4, #1
   1b864:	ldr	r0, [r5]
   1b868:	mov	r1, #0
   1b86c:	str	r4, [r5, #24]
   1b870:	bl	11fd8 <setbuf@plt>
   1b874:	mov	r0, r4
   1b878:	add	sp, sp, #108	; 0x6c
   1b87c:	pop	{r4, r5, r6, r7, pc}
   1b880:	bl	12164 <close@plt>
   1b884:	mov	r0, r4
   1b888:	b	1b878 <next@@Base+0x221c>
   1b88c:	mov	r4, #0
   1b890:	ldr	r0, [r5]
   1b894:	bl	1211c <fclose@plt>
   1b898:	str	r4, [r5]
   1b89c:	mov	r0, r4
   1b8a0:	b	1b878 <next@@Base+0x221c>
   1b8a4:	andeq	r2, r1, r4, asr #16
   1b8a8:	andeq	r0, r0, r8, lsr #1
   1b8ac:			; <UNDEFINED> instruction: 0x000001b6
   1b8b0:	andeq	r1, r0, r4, asr lr
   1b8b4:	push	{r4, r5, r6, lr}
   1b8b8:	mov	r4, r1
   1b8bc:	ldr	r5, [pc, #244]	; 1b9b8 <next@@Base+0x235c>
   1b8c0:	ldr	ip, [r4, #8]
   1b8c4:	ldr	lr, [r4, #12]
   1b8c8:	ldr	r6, [r4]
   1b8cc:	cmp	ip, #0
   1b8d0:	mov	r1, r0
   1b8d4:	add	r5, pc, r5
   1b8d8:	add	r0, r6, lr
   1b8dc:	ble	1b918 <next@@Base+0x22bc>
   1b8e0:	ldrb	r3, [r1]
   1b8e4:	cmp	r3, #47	; 0x2f
   1b8e8:	addeq	r2, r1, #1
   1b8ec:	ldrbeq	r3, [r1, #1]
   1b8f0:	movne	r2, r1
   1b8f4:	cmp	r3, #0
   1b8f8:	beq	1b918 <next@@Base+0x22bc>
   1b8fc:	cmp	r3, #47	; 0x2f
   1b900:	moveq	r1, r2
   1b904:	ldrb	r3, [r2, #1]!
   1b908:	subeq	ip, ip, #1
   1b90c:	cmp	r3, #0
   1b910:	cmpne	ip, #0
   1b914:	bne	1b8fc <next@@Base+0x22a0>
   1b918:	cmp	lr, #0
   1b91c:	beq	1b934 <next@@Base+0x22d8>
   1b920:	ldrb	r3, [r1]
   1b924:	cmp	r3, #47	; 0x2f
   1b928:	addne	r0, r0, #1
   1b92c:	movne	r3, #47	; 0x2f
   1b930:	strbne	r3, [r6, lr]
   1b934:	bl	12038 <strcpy@plt>
   1b938:	ldr	r0, [r4]
   1b93c:	bl	1b78c <next@@Base+0x2130>
   1b940:	cmp	r0, #0
   1b944:	beq	1b950 <next@@Base+0x22f4>
   1b948:	mov	r0, #0
   1b94c:	pop	{r4, r5, r6, pc}
   1b950:	ldr	r0, [r4]
   1b954:	bl	1b4bc <next@@Base+0x1e60>
   1b958:	cmp	r0, #0
   1b95c:	bne	1b994 <next@@Base+0x2338>
   1b960:	ldr	r0, [r4]
   1b964:	bl	1b78c <next@@Base+0x2130>
   1b968:	cmp	r0, #0
   1b96c:	bne	1b948 <next@@Base+0x22ec>
   1b970:	ldr	r3, [pc, #68]	; 1b9bc <next@@Base+0x2360>
   1b974:	ldr	r1, [pc, #68]	; 1b9c0 <next@@Base+0x2364>
   1b978:	ldr	r2, [r4]
   1b97c:	ldr	r3, [r5, r3]
   1b980:	add	r1, pc, r1
   1b984:	ldr	r0, [r3]
   1b988:	bl	120bc <fprintf@plt>
   1b98c:	mvn	r0, #0
   1b990:	pop	{r4, r5, r6, pc}
   1b994:	ldr	r3, [pc, #32]	; 1b9bc <next@@Base+0x2360>
   1b998:	ldr	r1, [pc, #36]	; 1b9c4 <next@@Base+0x2368>
   1b99c:	ldr	r2, [r4]
   1b9a0:	ldr	r3, [r5, r3]
   1b9a4:	add	r1, pc, r1
   1b9a8:	ldr	r0, [r3]
   1b9ac:	bl	120bc <fprintf@plt>
   1b9b0:	mvn	r0, #0
   1b9b4:	pop	{r4, r5, r6, pc}
   1b9b8:	andeq	r2, r1, r4, lsr #14
   1b9bc:	muleq	r0, ip, r0
   1b9c0:	andeq	r1, r0, r0, lsr #26
   1b9c4:	andeq	r1, r0, r8, ror #25
   1b9c8:	ldr	r3, [pc, #96]	; 1ba30 <next@@Base+0x23d4>
   1b9cc:	ldr	r2, [pc, #96]	; 1ba34 <next@@Base+0x23d8>
   1b9d0:	add	r3, pc, r3
   1b9d4:	push	{r4, lr}
   1b9d8:	ldr	r4, [r3, r2]
   1b9dc:	ldr	r0, [r4]
   1b9e0:	cmp	r0, #0
   1b9e4:	beq	1ba04 <next@@Base+0x23a8>
   1b9e8:	ldr	r3, [r4, #8]
   1b9ec:	cmp	r3, #0
   1b9f0:	bne	1ba14 <next@@Base+0x23b8>
   1b9f4:	bl	1211c <fclose@plt>
   1b9f8:	mov	r3, #0
   1b9fc:	str	r3, [r4]
   1ba00:	str	r3, [r4, #12]
   1ba04:	mov	r3, #0
   1ba08:	str	r3, [r4, #24]
   1ba0c:	ldr	r0, [r4, #20]
   1ba10:	pop	{r4, pc}
   1ba14:	ldr	r2, [r4, #24]
   1ba18:	cmp	r2, #0
   1ba1c:	bge	1b9f4 <next@@Base+0x2398>
   1ba20:	mov	r0, r3
   1ba24:	bl	1aa44 <next@@Base+0x13e8>
   1ba28:	ldr	r0, [r4]
   1ba2c:	b	1b9f4 <next@@Base+0x2398>
   1ba30:	andeq	r2, r1, r8, lsr #12
   1ba34:	andeq	r0, r0, r8, lsr #1
   1ba38:	push	{r4, lr}
   1ba3c:	mov	r4, r0
   1ba40:	mov	r0, #1
   1ba44:	bl	1aaa0 <next@@Base+0x1444>
   1ba48:	str	r4, [r0]
   1ba4c:	pop	{r4, pc}
   1ba50:	push	{r4, r5, r6, lr}
   1ba54:	mov	r5, r0
   1ba58:	mov	r0, #2
   1ba5c:	mov	r4, r1
   1ba60:	bl	1aaa0 <next@@Base+0x1444>
   1ba64:	str	r5, [r0]
   1ba68:	str	r4, [r0, #4]
   1ba6c:	pop	{r4, r5, r6, pc}
   1ba70:	push	{r4, r5, r6, lr}
   1ba74:	mov	r5, r0
   1ba78:	mov	r0, #2
   1ba7c:	mov	r4, r1
   1ba80:	bl	1aaa0 <next@@Base+0x1444>
   1ba84:	str	r5, [r0]
   1ba88:	str	r4, [r0, #4]
   1ba8c:	pop	{r4, r5, r6, pc}
   1ba90:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1ba94:	sub	sp, sp, #32
   1ba98:	mov	r7, sp
   1ba9c:	mov	r5, r1
   1baa0:	mov	r6, sp
   1baa4:	add	r2, sp, #32
   1baa8:	mov	r3, #0
   1baac:	str	r3, [r6], #4
   1bab0:	cmp	r2, r6
   1bab4:	bne	1baac <next@@Base+0x2450>
   1bab8:	mov	r8, #0
   1babc:	mov	r3, r8
   1bac0:	mov	r4, r5
   1bac4:	mov	r1, r5
   1bac8:	mov	r9, #1
   1bacc:	lsr	r2, r3, #5
   1bad0:	ldr	lr, [r1, #40]	; 0x28
   1bad4:	add	ip, sp, #32
   1bad8:	cmp	lr, #0
   1badc:	add	r2, ip, r2, lsl #2
   1bae0:	and	sl, r3, #31
   1bae4:	ldrne	ip, [r2, #-32]	; 0xffffffe0
   1bae8:	add	r3, r3, #1
   1baec:	orrne	ip, ip, r9, lsl sl
   1baf0:	addne	r8, r8, #1
   1baf4:	strne	ip, [r2, #-32]	; 0xffffffe0
   1baf8:	cmp	r3, #252	; 0xfc
   1bafc:	add	r1, r1, #24
   1bb00:	bne	1bacc <next@@Base+0x2470>
   1bb04:	add	r8, r8, r8, lsl #2
   1bb08:	add	r1, r8, #17
   1bb0c:	bl	1ba70 <next@@Base+0x2414>
   1bb10:	ldr	r0, [r5]
   1bb14:	bl	1ba38 <next@@Base+0x23dc>
   1bb18:	ldr	r0, [r5, #8]
   1bb1c:	bl	1ba38 <next@@Base+0x23dc>
   1bb20:	ldr	r0, [r5, #12]
   1bb24:	bl	1ba38 <next@@Base+0x23dc>
   1bb28:	ldrd	r0, [r5, #16]
   1bb2c:	bl	1ba50 <next@@Base+0x23f4>
   1bb30:	ldrd	r0, [r5, #24]
   1bb34:	bl	1ba50 <next@@Base+0x23f4>
   1bb38:	ldrd	r0, [r5, #32]
   1bb3c:	bl	1ba50 <next@@Base+0x23f4>
   1bb40:	ldr	r0, [r7], #4
   1bb44:	bl	1ba38 <next@@Base+0x23dc>
   1bb48:	cmp	r7, r6
   1bb4c:	bne	1bb40 <next@@Base+0x24e4>
   1bb50:	add	r5, r5, #6016	; 0x1780
   1bb54:	add	r5, r5, #32
   1bb58:	b	1bb68 <next@@Base+0x250c>
   1bb5c:	add	r4, r4, #24
   1bb60:	cmp	r4, r5
   1bb64:	beq	1bb94 <next@@Base+0x2538>
   1bb68:	ldr	r0, [r4, #40]	; 0x28
   1bb6c:	cmp	r0, #0
   1bb70:	beq	1bb5c <next@@Base+0x2500>
   1bb74:	bl	1ba38 <next@@Base+0x23dc>
   1bb78:	ldrd	r0, [r4, #48]	; 0x30
   1bb7c:	bl	1ba50 <next@@Base+0x23f4>
   1bb80:	add	r4, r4, #24
   1bb84:	ldrd	r0, [r4, #32]
   1bb88:	bl	1ba50 <next@@Base+0x23f4>
   1bb8c:	cmp	r4, r5
   1bb90:	bne	1bb68 <next@@Base+0x250c>
   1bb94:	add	sp, sp, #32
   1bb98:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1bb9c:	push	{r4, lr}
   1bba0:	mov	r0, #1
   1bba4:	bl	1aafc <next@@Base+0x14a0>
   1bba8:	subs	r3, r0, #0
   1bbac:	popeq	{r4, pc}
   1bbb0:	ldr	r0, [r3]
   1bbb4:	pop	{r4, lr}
   1bbb8:	b	1aa14 <next@@Base+0x13b8>
   1bbbc:	push	{r4, r5, r6, lr}
   1bbc0:	mov	r0, #2
   1bbc4:	bl	1aafc <next@@Base+0x14a0>
   1bbc8:	subs	r3, r0, #0
   1bbcc:	beq	1bbfc <next@@Base+0x25a0>
   1bbd0:	ldr	r0, [r3]
   1bbd4:	bl	1aa14 <next@@Base+0x13b8>
   1bbd8:	mov	r5, #0
   1bbdc:	mov	r4, r0
   1bbe0:	ldr	r0, [r3, #4]
   1bbe4:	bl	1aa14 <next@@Base+0x13b8>
   1bbe8:	mov	r2, #0
   1bbec:	mov	r3, r0
   1bbf0:	orr	r1, r3, r5
   1bbf4:	orr	r0, r2, r4
   1bbf8:	pop	{r4, r5, r6, pc}
   1bbfc:	mov	r0, #0
   1bc00:	mov	r1, #0
   1bc04:	pop	{r4, r5, r6, pc}
   1bc08:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1bc0c:	sub	sp, sp, #28
   1bc10:	mov	r4, #0
   1bc14:	str	r1, [sp, #8]
   1bc18:	str	r3, [sp, #12]
   1bc1c:	add	r3, r1, #56	; 0x38
   1bc20:	add	r1, r1, #16
   1bc24:	str	r0, [sp, #16]
   1bc28:	str	r2, [sp, #20]
   1bc2c:	ldr	r2, [r3, #-4]!
   1bc30:	cmp	r2, #0
   1bc34:	addne	r4, r4, #1
   1bc38:	cmp	r3, r1
   1bc3c:	bne	1bc2c <next@@Base+0x25d0>
   1bc40:	add	r4, r4, #4
   1bc44:	lsl	r4, r4, #3
   1bc48:	mov	r0, r4
   1bc4c:	bl	1205c <malloc@plt>
   1bc50:	subs	r8, r0, #0
   1bc54:	beq	1bd18 <next@@Base+0x26bc>
   1bc58:	ldr	r3, [sp, #12]
   1bc5c:	mov	r4, #0
   1bc60:	str	r3, [r8, #4]
   1bc64:	str	r4, [r8]
   1bc68:	bl	1bb9c <next@@Base+0x2540>
   1bc6c:	ldr	r3, [sp, #8]
   1bc70:	ldr	r5, [pc, #272]	; 1bd88 <next@@Base+0x272c>
   1bc74:	add	r6, r3, #12
   1bc78:	mov	r7, r4
   1bc7c:	str	r0, [r8, #12]
   1bc80:	bl	1bb9c <next@@Base+0x2540>
   1bc84:	str	r0, [r8, #16]
   1bc88:	bl	1bb9c <next@@Base+0x2540>
   1bc8c:	str	r0, [r8, #20]
   1bc90:	ldr	r3, [r6, #4]!
   1bc94:	cmp	r3, #0
   1bc98:	beq	1bcf4 <next@@Base+0x2698>
   1bc9c:	bl	1bb9c <next@@Base+0x2540>
   1bca0:	cmp	r5, r0
   1bca4:	bne	1bd6c <next@@Base+0x2710>
   1bca8:	bl	1bb9c <next@@Base+0x2540>
   1bcac:	lsr	r9, r0, #1
   1bcb0:	lsl	fp, r9, #3
   1bcb4:	mov	r0, fp
   1bcb8:	bl	1205c <malloc@plt>
   1bcbc:	subs	sl, r0, #0
   1bcc0:	beq	1bd7c <next@@Base+0x2720>
   1bcc4:	add	r3, r8, r7, lsl #3
   1bcc8:	cmp	r9, #0
   1bccc:	str	r9, [r3, #24]
   1bcd0:	str	sl, [r3, #28]
   1bcd4:	sub	r9, r9, #1
   1bcd8:	beq	1bcf0 <next@@Base+0x2694>
   1bcdc:	bl	1bbbc <next@@Base+0x2560>
   1bce0:	sub	r9, r9, #1
   1bce4:	cmn	r9, #1
   1bce8:	strd	r0, [sl], #8
   1bcec:	bne	1bcdc <next@@Base+0x2680>
   1bcf0:	add	r7, r7, #1
   1bcf4:	add	r4, r4, #1
   1bcf8:	cmp	r4, #10
   1bcfc:	add	r5, r5, #131072	; 0x20000
   1bd00:	bne	1bc90 <next@@Base+0x2634>
   1bd04:	ldr	r3, [sp, #20]
   1bd08:	mov	r0, r8
   1bd0c:	str	r8, [r3]
   1bd10:	add	sp, sp, #28
   1bd14:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bd18:	mvn	r5, #0
   1bd1c:	cmp	r4, #0
   1bd20:	beq	1bd5c <next@@Base+0x2700>
   1bd24:	ldr	r3, [pc, #96]	; 1bd8c <next@@Base+0x2730>
   1bd28:	add	r3, pc, r3
   1bd2c:	ldr	r0, [pc, #92]	; 1bd90 <next@@Base+0x2734>
   1bd30:	ldr	r2, [sp, #12]
   1bd34:	ldr	r1, [sp, #16]
   1bd38:	str	r4, [sp]
   1bd3c:	add	r0, pc, r0
   1bd40:	bl	1abb8 <next@@Base+0x155c>
   1bd44:	mov	r2, r5
   1bd48:	mov	r1, r8
   1bd4c:	ldr	r0, [sp, #8]
   1bd50:	add	sp, sp, #28
   1bd54:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1bd58:	b	1ac00 <next@@Base+0x15a4>
   1bd5c:	ldr	r3, [pc, #48]	; 1bd94 <next@@Base+0x2738>
   1bd60:	mov	r4, r5
   1bd64:	add	r3, pc, r3
   1bd68:	b	1bd2c <next@@Base+0x26d0>
   1bd6c:	ldr	r3, [pc, #36]	; 1bd98 <next@@Base+0x273c>
   1bd70:	mov	r5, r4
   1bd74:	add	r3, pc, r3
   1bd78:	b	1bd2c <next@@Base+0x26d0>
   1bd7c:	mov	r5, r4
   1bd80:	mov	r4, fp
   1bd84:	b	1bd1c <next@@Base+0x26c0>
   1bd88:			; <UNDEFINED> instruction: 0x01a10000
   1bd8c:	muleq	r0, r4, r9
   1bd90:	andeq	r1, r0, r4, lsr #19
   1bd94:	andeq	r1, r0, r8, ror #18
   1bd98:	andeq	r1, r0, r8, asr r9
   1bd9c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1bda0:	sub	sp, sp, #44	; 0x2c
   1bda4:	mov	r9, r0
   1bda8:	bl	1bb9c <next@@Base+0x2540>
   1bdac:	mov	r7, #0
   1bdb0:	add	sl, sp, #8
   1bdb4:	mov	r4, sl
   1bdb8:	add	r5, sp, #40	; 0x28
   1bdbc:	str	r0, [r9]
   1bdc0:	bl	1bb9c <next@@Base+0x2540>
   1bdc4:	str	r0, [r9, #8]
   1bdc8:	bl	1bb9c <next@@Base+0x2540>
   1bdcc:	str	r0, [r9, #12]
   1bdd0:	bl	1bbbc <next@@Base+0x2560>
   1bdd4:	strd	r0, [r9, #16]
   1bdd8:	bl	1bbbc <next@@Base+0x2560>
   1bddc:	strd	r0, [r9, #24]
   1bde0:	bl	1bbbc <next@@Base+0x2560>
   1bde4:	ldr	r2, [pc, #244]	; 1bee0 <next@@Base+0x2884>
   1bde8:	strd	r0, [r9, #32]
   1bdec:	add	r0, r9, #40	; 0x28
   1bdf0:	mov	r1, r7
   1bdf4:	bl	120f8 <memset@plt>
   1bdf8:	bl	1bb9c <next@@Base+0x2540>
   1bdfc:	str	r0, [r4], #4
   1be00:	bl	1cc90 <__gcov_sort_n_vals@@Base+0x824>
   1be04:	cmp	r5, r4
   1be08:	add	r7, r7, r0
   1be0c:	bne	1bdf8 <next@@Base+0x279c>
   1be10:	cmp	r7, #0
   1be14:	sub	r7, r7, #1
   1be18:	beq	1becc <next@@Base+0x2870>
   1be1c:	ldr	r8, [pc, #192]	; 1bee4 <next@@Base+0x2888>
   1be20:	mov	r4, #0
   1be24:	ldr	r3, [pc, #188]	; 1bee8 <next@@Base+0x288c>
   1be28:	add	r8, pc, r8
   1be2c:	mov	r5, r4
   1be30:	mov	r6, r4
   1be34:	add	r3, pc, r3
   1be38:	str	r3, [sp, #4]
   1be3c:	cmp	r4, #0
   1be40:	addeq	r6, sl, r5, lsl #2
   1be44:	beq	1be50 <next@@Base+0x27f4>
   1be48:	b	1be78 <next@@Base+0x281c>
   1be4c:	mov	r5, r3
   1be50:	cmp	r5, #7
   1be54:	bls	1be60 <next@@Base+0x2804>
   1be58:	mov	r0, r8
   1be5c:	bl	1abb8 <next@@Base+0x155c>
   1be60:	ldr	r4, [r6], #4
   1be64:	add	r3, r5, #1
   1be68:	cmp	r4, #0
   1be6c:	beq	1be4c <next@@Base+0x27f0>
   1be70:	lsl	r6, r5, #5
   1be74:	mov	r5, r3
   1be78:	tst	r4, #1
   1be7c:	bne	1be90 <next@@Base+0x2834>
   1be80:	lsr	r4, r4, #1
   1be84:	tst	r4, #1
   1be88:	add	r6, r6, #1
   1be8c:	beq	1be80 <next@@Base+0x2824>
   1be90:	cmp	r6, #251	; 0xfb
   1be94:	bhi	1bed4 <next@@Base+0x2878>
   1be98:	bl	1bb9c <next@@Base+0x2540>
   1be9c:	add	r3, r6, r6, lsl #1
   1bea0:	sub	r7, r7, #1
   1bea4:	add	fp, r9, r3, lsl #3
   1bea8:	lsr	r4, r4, #1
   1beac:	add	r6, r6, #1
   1beb0:	str	r0, [fp, #40]	; 0x28
   1beb4:	bl	1bbbc <next@@Base+0x2560>
   1beb8:	strd	r0, [fp, #48]	; 0x30
   1bebc:	bl	1bbbc <next@@Base+0x2560>
   1bec0:	cmn	r7, #1
   1bec4:	strd	r0, [fp, #56]	; 0x38
   1bec8:	bne	1be3c <next@@Base+0x27e0>
   1becc:	add	sp, sp, #44	; 0x2c
   1bed0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bed4:	ldr	r0, [sp, #4]
   1bed8:	bl	1abb8 <next@@Base+0x155c>
   1bedc:	b	1be98 <next@@Base+0x283c>
   1bee0:	andeq	r1, r0, r0, lsr #15
   1bee4:	andeq	r1, r0, r8, lsl r9
   1bee8:	ldrdeq	r1, [r0], -r0
   1beec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1bef0:	sub	sp, sp, #6080	; 0x17c0
   1bef4:	sub	sp, sp, #28
   1bef8:	mov	r4, r1
   1befc:	stmib	sp, {r2, r3}
   1bf00:	add	r3, sp, #6144	; 0x1800
   1bf04:	mov	sl, r0
   1bf08:	ldr	r7, [r3]
   1bf0c:	add	r3, sp, #6144	; 0x1800
   1bf10:	add	r3, r3, #4
   1bf14:	ldr	r6, [r3]
   1bf18:	bl	1bb9c <next@@Base+0x2540>
   1bf1c:	add	r3, r4, #12
   1bf20:	mov	r2, sl
   1bf24:	str	r3, [sp, #12]
   1bf28:	mov	r1, r0
   1bf2c:	mov	r0, r3
   1bf30:	bl	1b580 <next@@Base+0x1f24>
   1bf34:	cmp	r0, #0
   1bf38:	beq	1c1b8 <next@@Base+0x2b5c>
   1bf3c:	bl	1bb9c <next@@Base+0x2540>
   1bf40:	ldr	r3, [r4, #8]
   1bf44:	cmp	r0, r3
   1bf48:	beq	1bf5c <next@@Base+0x2900>
   1bf4c:	mov	r0, #0
   1bf50:	add	sp, sp, #6080	; 0x17c0
   1bf54:	add	sp, sp, #28
   1bf58:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bf5c:	ldr	fp, [pc, #628]	; 1c1d8 <next@@Base+0x2b7c>
   1bf60:	add	r9, sp, #2000	; 0x7d0
   1bf64:	add	r5, sp, #16
   1bf68:	add	fp, pc, fp
   1bf6c:	add	r9, r9, #8
   1bf70:	bl	1a9c4 <next@@Base+0x1368>
   1bf74:	str	r0, [r6]
   1bf78:	bl	1bb9c <next@@Base+0x2540>
   1bf7c:	cmp	r0, #-1560281088	; 0xa3000000
   1bf80:	bne	1c024 <next@@Base+0x29c8>
   1bf84:	bl	1bb9c <next@@Base+0x2540>
   1bf88:	mov	r0, r5
   1bf8c:	bl	1bd9c <next@@Base+0x2740>
   1bf90:	bl	1a9e8 <next@@Base+0x138c>
   1bf94:	subs	r8, r0, #0
   1bf98:	bne	1c158 <next@@Base+0x2afc>
   1bf9c:	ldr	r3, [r7]
   1bfa0:	cmp	r3, #0
   1bfa4:	bne	1bff0 <next@@Base+0x2994>
   1bfa8:	add	r2, sp, #6144	; 0x1800
   1bfac:	add	r2, r2, #8
   1bfb0:	ldr	r3, [r9, #-1992]	; 0xfffff838
   1bfb4:	ldr	r2, [r2]
   1bfb8:	cmp	r3, r2
   1bfbc:	bne	1bf70 <next@@Base+0x2914>
   1bfc0:	ldr	r3, [sp, #8]
   1bfc4:	ldr	ip, [r9, #-1984]	; 0xfffff840
   1bfc8:	ldr	r2, [pc, #524]	; 1c1dc <next@@Base+0x2b80>
   1bfcc:	ldr	r3, [r3, #8]
   1bfd0:	mov	r1, r5
   1bfd4:	cmp	ip, r3
   1bfd8:	ldr	r0, [sp, #4]
   1bfdc:	bne	1bf70 <next@@Base+0x2914>
   1bfe0:	bl	12014 <memcpy@plt>
   1bfe4:	ldr	r3, [r6]
   1bfe8:	str	r3, [r7]
   1bfec:	b	1bf70 <next@@Base+0x2914>
   1bff0:	ldr	r0, [pc, #488]	; 1c1e0 <next@@Base+0x2b84>
   1bff4:	bl	1205c <malloc@plt>
   1bff8:	ldr	r2, [pc, #476]	; 1c1dc <next@@Base+0x2b80>
   1bffc:	mov	r1, r5
   1c000:	mov	r3, r0
   1c004:	str	r0, [fp]
   1c008:	add	r0, r0, #8
   1c00c:	str	r3, [sp]
   1c010:	bl	12014 <memcpy@plt>
   1c014:	ldr	r3, [sp]
   1c018:	str	r8, [r3]
   1c01c:	ldr	fp, [fp]
   1c020:	b	1bf70 <next@@Base+0x2914>
   1c024:	ldr	r5, [r4, #56]	; 0x38
   1c028:	cmp	r5, #0
   1c02c:	beq	1c1c0 <next@@Base+0x2b64>
   1c030:	ldr	r3, [r4, #60]	; 0x3c
   1c034:	cmp	r0, #16777216	; 0x1000000
   1c038:	ldr	r8, [r3]
   1c03c:	bne	1c188 <next@@Base+0x2b2c>
   1c040:	ldr	r6, [pc, #412]	; 1c1e4 <next@@Base+0x2b88>
   1c044:	mov	r5, #0
   1c048:	add	r6, pc, r6
   1c04c:	add	r6, r6, #4
   1c050:	b	1c094 <next@@Base+0x2a38>
   1c054:	mov	r2, r6
   1c058:	mov	r3, r5
   1c05c:	mov	r1, r4
   1c060:	mov	r0, sl
   1c064:	bl	1bc08 <next@@Base+0x25ac>
   1c068:	subs	r6, r0, #0
   1c06c:	beq	1c18c <next@@Base+0x2b30>
   1c070:	bl	1bb9c <next@@Base+0x2540>
   1c074:	ldr	r3, [r4, #56]	; 0x38
   1c078:	add	r5, r5, #1
   1c07c:	cmp	r3, r5
   1c080:	beq	1c1c0 <next@@Base+0x2b64>
   1c084:	ldr	r3, [r4, #60]	; 0x3c
   1c088:	cmp	r0, #16777216	; 0x1000000
   1c08c:	ldr	r8, [r3, r5, lsl #2]
   1c090:	bne	1c18c <next@@Base+0x2b30>
   1c094:	bl	1bb9c <next@@Base+0x2540>
   1c098:	cmp	r0, #0
   1c09c:	beq	1c070 <next@@Base+0x2a14>
   1c0a0:	cmp	r0, #3
   1c0a4:	bne	1c18c <next@@Base+0x2b30>
   1c0a8:	cmp	r8, #0
   1c0ac:	beq	1c054 <next@@Base+0x29f8>
   1c0b0:	ldr	r3, [r8]
   1c0b4:	cmp	r4, r3
   1c0b8:	bne	1c054 <next@@Base+0x29f8>
   1c0bc:	bl	1bb9c <next@@Base+0x2540>
   1c0c0:	ldr	r3, [r8, #4]
   1c0c4:	cmp	r0, r3
   1c0c8:	bne	1c18c <next@@Base+0x2b30>
   1c0cc:	bl	1bb9c <next@@Base+0x2540>
   1c0d0:	ldr	r3, [r8, #8]
   1c0d4:	cmp	r0, r3
   1c0d8:	bne	1c18c <next@@Base+0x2b30>
   1c0dc:	bl	1bb9c <next@@Base+0x2540>
   1c0e0:	ldr	r3, [r8, #12]
   1c0e4:	cmp	r0, r3
   1c0e8:	bne	1c18c <next@@Base+0x2b30>
   1c0ec:	ldr	r7, [pc, #244]	; 1c1e8 <next@@Base+0x2b8c>
   1c0f0:	ldr	fp, [sp, #12]
   1c0f4:	add	r8, r8, #16
   1c0f8:	ldr	r9, [fp, #4]!
   1c0fc:	cmp	r9, #0
   1c100:	beq	1c138 <next@@Base+0x2adc>
   1c104:	bl	1bb9c <next@@Base+0x2540>
   1c108:	str	r0, [sp]
   1c10c:	bl	1bb9c <next@@Base+0x2540>
   1c110:	ldr	r3, [sp]
   1c114:	cmp	r3, r7
   1c118:	bne	1c18c <next@@Base+0x2b30>
   1c11c:	ldr	r3, [r8]
   1c120:	mov	r1, r3
   1c124:	cmp	r0, r3, lsl #1
   1c128:	bne	1c18c <next@@Base+0x2b30>
   1c12c:	ldr	r0, [r8, #4]
   1c130:	blx	r9
   1c134:	add	r8, r8, #8
   1c138:	ldr	r3, [pc, #172]	; 1c1ec <next@@Base+0x2b90>
   1c13c:	add	r7, r7, #131072	; 0x20000
   1c140:	cmp	r7, r3
   1c144:	bne	1c0f8 <next@@Base+0x2a9c>
   1c148:	bl	1a9e8 <next@@Base+0x138c>
   1c14c:	cmp	r0, #0
   1c150:	beq	1c070 <next@@Base+0x2a14>
   1c154:	mov	r8, r0
   1c158:	cmp	r8, #0
   1c15c:	blt	1c1cc <next@@Base+0x2b70>
   1c160:	ldr	r2, [pc, #136]	; 1c1f0 <next@@Base+0x2b94>
   1c164:	add	r2, pc, r2
   1c168:	ldr	r0, [pc, #132]	; 1c1f4 <next@@Base+0x2b98>
   1c16c:	mov	r1, sl
   1c170:	add	r0, pc, r0
   1c174:	bl	1abb8 <next@@Base+0x155c>
   1c178:	mvn	r0, #0
   1c17c:	add	sp, sp, #6080	; 0x17c0
   1c180:	add	sp, sp, #28
   1c184:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c188:	mov	r5, #0
   1c18c:	ldr	r2, [pc, #100]	; 1c1f8 <next@@Base+0x2b9c>
   1c190:	ldr	r0, [pc, #100]	; 1c1fc <next@@Base+0x2ba0>
   1c194:	mov	r3, r5
   1c198:	mov	r1, sl
   1c19c:	add	r2, pc, r2
   1c1a0:	add	r0, pc, r0
   1c1a4:	bl	1abb8 <next@@Base+0x155c>
   1c1a8:	mvn	r0, #0
   1c1ac:	add	sp, sp, #6080	; 0x17c0
   1c1b0:	add	sp, sp, #28
   1c1b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c1b8:	mvn	r0, #0
   1c1bc:	b	1bf50 <next@@Base+0x28f4>
   1c1c0:	cmp	r0, #0
   1c1c4:	beq	1bf4c <next@@Base+0x28f0>
   1c1c8:	b	1c18c <next@@Base+0x2b30>
   1c1cc:	ldr	r2, [pc, #44]	; 1c200 <next@@Base+0x2ba4>
   1c1d0:	add	r2, pc, r2
   1c1d4:	b	1c168 <next@@Base+0x2b0c>
   1c1d8:	andeq	r4, r1, r8, ror #9
   1c1dc:	andeq	r1, r0, r8, asr #15
   1c1e0:	ldrdeq	r1, [r0], -r0
   1c1e4:	andeq	r4, r1, r8, lsl #8
   1c1e8:			; <UNDEFINED> instruction: 0x01a10000
   1c1ec:			; <UNDEFINED> instruction: 0x01b50000
   1c1f0:	andeq	r1, r0, r8, lsr #12
   1c1f4:	andeq	r1, r0, r8, asr r6
   1c1f8:	strdeq	r1, [r0], -r8
   1c1fc:	andeq	r1, r0, r0, lsl #12
   1c200:			; <UNDEFINED> instruction: 0x000015b0
   1c204:	ldr	r3, [pc, #68]	; 1c250 <next@@Base+0x2bf4>
   1c208:	ldr	r2, [pc, #68]	; 1c254 <next@@Base+0x2bf8>
   1c20c:	add	r3, pc, r3
   1c210:	push	{r4, r5, r6, lr}
   1c214:	mov	r5, r0
   1c218:	ldr	r4, [r3, r2]
   1c21c:	ldr	r0, [r4, #8]
   1c220:	cmp	r0, #0
   1c224:	beq	1c22c <next@@Base+0x2bd0>
   1c228:	bl	1aa44 <next@@Base+0x13e8>
   1c22c:	lsl	r1, r5, #2
   1c230:	mov	r2, #0
   1c234:	ldr	r0, [r4]
   1c238:	bl	1214c <fseek@plt>
   1c23c:	ldr	r0, [r4]
   1c240:	bl	12020 <ftell@plt>
   1c244:	asr	r0, r0, #2
   1c248:	str	r0, [r4, #4]
   1c24c:	pop	{r4, r5, r6, pc}
   1c250:	andeq	r1, r1, ip, ror #27
   1c254:	andeq	r0, r0, r8, lsr #1
   1c258:	cmp	r2, #0
   1c25c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c260:	mov	r9, r0
   1c264:	sub	sp, sp, #20
   1c268:	mov	r5, r1
   1c26c:	mov	r4, r3
   1c270:	beq	1c428 <next@@Base+0x2dcc>
   1c274:	cmp	r4, #0
   1c278:	bne	1c444 <next@@Base+0x2de8>
   1c27c:	mov	r1, r5
   1c280:	ldr	r5, [pc, #456]	; 1c450 <next@@Base+0x2df4>
   1c284:	mov	r0, #-1560281088	; 0xa3000000
   1c288:	add	r5, pc, r5
   1c28c:	bl	1ba90 <next@@Base+0x2434>
   1c290:	ldr	r4, [r5]
   1c294:	cmp	r4, #0
   1c298:	movne	r6, #-1560281088	; 0xa3000000
   1c29c:	beq	1c2c8 <next@@Base+0x2c6c>
   1c2a0:	add	r1, r4, #8
   1c2a4:	mov	r0, r6
   1c2a8:	bl	1ba90 <next@@Base+0x2434>
   1c2ac:	ldr	r3, [r5]
   1c2b0:	mov	r0, r3
   1c2b4:	ldr	r4, [r3]
   1c2b8:	bl	12008 <free@plt>
   1c2bc:	cmp	r4, #0
   1c2c0:	str	r4, [r5]
   1c2c4:	bne	1c2a0 <next@@Base+0x2c44>
   1c2c8:	ldr	r3, [r9, #56]	; 0x38
   1c2cc:	cmp	r3, #0
   1c2d0:	beq	1c40c <next@@Base+0x2db0>
   1c2d4:	ldr	r3, [pc, #376]	; 1c454 <next@@Base+0x2df8>
   1c2d8:	ldr	r8, [pc, #376]	; 1c458 <next@@Base+0x2dfc>
   1c2dc:	add	r3, pc, r3
   1c2e0:	str	r3, [sp, #4]
   1c2e4:	ldr	r3, [pc, #368]	; 1c45c <next@@Base+0x2e00>
   1c2e8:	mov	r7, #0
   1c2ec:	add	r3, pc, r3
   1c2f0:	str	r3, [sp, #12]
   1c2f4:	b	1c330 <next@@Base+0x2cd4>
   1c2f8:	ldr	r3, [r9, #60]	; 0x3c
   1c2fc:	ldr	r4, [r3, r7, lsl #2]
   1c300:	cmp	r4, #0
   1c304:	beq	1c314 <next@@Base+0x2cb8>
   1c308:	ldr	r3, [r4]
   1c30c:	cmp	r9, r3
   1c310:	beq	1c41c <next@@Base+0x2dc0>
   1c314:	mov	r1, #0
   1c318:	mov	r0, #16777216	; 0x1000000
   1c31c:	bl	1ba70 <next@@Base+0x2414>
   1c320:	ldr	r3, [r9, #56]	; 0x38
   1c324:	add	r7, r7, #1
   1c328:	cmp	r3, r7
   1c32c:	beq	1c40c <next@@Base+0x2db0>
   1c330:	ldr	r3, [sp, #4]
   1c334:	ldr	r4, [r3, #4]
   1c338:	cmp	r4, #0
   1c33c:	beq	1c2f8 <next@@Base+0x2c9c>
   1c340:	ldr	r3, [r4, #4]
   1c344:	cmp	r3, r7
   1c348:	moveq	r3, #1
   1c34c:	addeq	r4, r4, #8
   1c350:	streq	r3, [sp, #8]
   1c354:	bne	1c2f8 <next@@Base+0x2c9c>
   1c358:	mov	r1, #3
   1c35c:	mov	r0, #16777216	; 0x1000000
   1c360:	bl	1ba70 <next@@Base+0x2414>
   1c364:	ldr	r0, [r4, #4]
   1c368:	bl	1ba38 <next@@Base+0x23dc>
   1c36c:	ldr	r0, [r4, #8]
   1c370:	bl	1ba38 <next@@Base+0x23dc>
   1c374:	ldr	r0, [r4, #12]
   1c378:	bl	1ba38 <next@@Base+0x23dc>
   1c37c:	ldr	r5, [pc, #220]	; 1c460 <next@@Base+0x2e04>
   1c380:	add	r4, r4, #16
   1c384:	add	r6, r9, #12
   1c388:	ldr	r3, [r6, #4]!
   1c38c:	cmp	r3, #0
   1c390:	beq	1c3cc <next@@Base+0x2d70>
   1c394:	ldr	fp, [r4]
   1c398:	mov	r0, r5
   1c39c:	sub	sl, fp, #1
   1c3a0:	lsl	r1, fp, #1
   1c3a4:	bl	1ba70 <next@@Base+0x2414>
   1c3a8:	cmp	fp, #0
   1c3ac:	ldr	fp, [r4, #4]
   1c3b0:	beq	1c3c8 <next@@Base+0x2d6c>
   1c3b4:	sub	sl, sl, #1
   1c3b8:	ldrd	r0, [fp], #8
   1c3bc:	bl	1ba50 <next@@Base+0x23f4>
   1c3c0:	cmn	sl, #1
   1c3c4:	bne	1c3b4 <next@@Base+0x2d58>
   1c3c8:	add	r4, r4, #8
   1c3cc:	add	r5, r5, #131072	; 0x20000
   1c3d0:	cmp	r5, r8
   1c3d4:	bne	1c388 <next@@Base+0x2d2c>
   1c3d8:	ldr	r3, [sp, #8]
   1c3dc:	cmp	r3, #0
   1c3e0:	beq	1c320 <next@@Base+0x2cc4>
   1c3e4:	ldr	r4, [sp, #12]
   1c3e8:	mov	r2, #10
   1c3ec:	mov	r0, r9
   1c3f0:	ldr	r1, [r4, #4]
   1c3f4:	bl	1ac00 <next@@Base+0x15a4>
   1c3f8:	ldr	r3, [r9, #56]	; 0x38
   1c3fc:	add	r7, r7, #1
   1c400:	cmp	r3, r7
   1c404:	str	r0, [r4, #4]
   1c408:	bne	1c330 <next@@Base+0x2cd4>
   1c40c:	mov	r0, #0
   1c410:	add	sp, sp, #20
   1c414:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c418:	b	1ba38 <next@@Base+0x23dc>
   1c41c:	mov	r3, #0
   1c420:	str	r3, [sp, #8]
   1c424:	b	1c358 <next@@Base+0x2cfc>
   1c428:	ldr	r1, [pc, #52]	; 1c464 <next@@Base+0x2e08>
   1c42c:	ldr	r0, [pc, #52]	; 1c468 <next@@Base+0x2e0c>
   1c430:	bl	1ba70 <next@@Base+0x2414>
   1c434:	ldr	r0, [r9, #8]
   1c438:	bl	1ba38 <next@@Base+0x23dc>
   1c43c:	cmp	r4, #0
   1c440:	beq	1c27c <next@@Base+0x2c20>
   1c444:	mov	r0, r4
   1c448:	bl	1c204 <next@@Base+0x2ba8>
   1c44c:	b	1c27c <next@@Base+0x2c20>
   1c450:	andeq	r4, r1, r8, asr #3
   1c454:	andeq	r4, r1, r4, ror r1
   1c458:			; <UNDEFINED> instruction: 0x01b50000
   1c45c:	andeq	r4, r1, r4, ror #2
   1c460:			; <UNDEFINED> instruction: 0x01a10000
   1c464:	ldrtcc	r3, [r0], -sl, lsr #10
   1c468:	strbvs	r6, [r3, -r1, ror #8]!

0001c46c <__gcov_sort_n_vals@@Base>:
   1c46c:	cmp	r1, #2
   1c470:	bxle	lr
   1c474:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c478:	sub	lr, r1, #3
   1c47c:	mov	ip, #0
   1c480:	lsr	lr, lr, #1
   1c484:	add	r1, r0, #8
   1c488:	add	lr, r0, lr, lsl #4
   1c48c:	add	lr, lr, #24
   1c490:	ldrd	r4, [r1, #16]
   1c494:	ldrd	r6, [r1]
   1c498:	ldrd	r8, [r1, #8]
   1c49c:	mov	r2, ip
   1c4a0:	cmp	r6, r4
   1c4a4:	sbcs	r3, r7, r5
   1c4a8:	mov	fp, ip
   1c4ac:	bge	1c4f4 <__gcov_sort_n_vals@@Base+0x88>
   1c4b0:	add	r3, r1, #8
   1c4b4:	mov	sl, #0
   1c4b8:	b	1c4d0 <__gcov_sort_n_vals@@Base+0x64>
   1c4bc:	ldrd	r6, [r3, #-24]	; 0xffffffe8
   1c4c0:	sub	r3, r3, #16
   1c4c4:	cmp	r6, r4
   1c4c8:	sbcs	r6, r7, r5
   1c4cc:	bge	1c4f4 <__gcov_sort_n_vals@@Base+0x88>
   1c4d0:	ldrd	r6, [r3, #-16]
   1c4d4:	subs	r2, r2, #2
   1c4d8:	mov	fp, r2
   1c4dc:	strd	r6, [r3]
   1c4e0:	ldrd	r6, [r1, sl]
   1c4e4:	sub	sl, sl, #16
   1c4e8:	strd	r6, [r3, #8]
   1c4ec:	mov	r6, r3
   1c4f0:	bpl	1c4bc <__gcov_sort_n_vals@@Base+0x50>
   1c4f4:	add	fp, fp, #2
   1c4f8:	mov	r3, r0
   1c4fc:	add	r1, r1, #16
   1c500:	lsl	fp, fp, #3
   1c504:	cmp	lr, r1
   1c508:	strd	r8, [r3, fp]!
   1c50c:	add	ip, ip, #2
   1c510:	strd	r4, [r3, #8]
   1c514:	bne	1c490 <__gcov_sort_n_vals@@Base+0x24>
   1c518:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c51c:	push	{r4, r5, r6, r7, r8, lr}
   1c520:	ldr	r6, [r0]
   1c524:	ldr	r4, [pc, #76]	; 1c578 <__gcov_sort_n_vals@@Base+0x10c>
   1c528:	smull	r2, r3, r4, r6
   1c52c:	asr	r4, r6, #31
   1c530:	rsb	r4, r4, r3, asr #1
   1c534:	add	r4, r4, r4, lsl #3
   1c538:	subs	r4, r6, r4
   1c53c:	bne	1c574 <__gcov_sort_n_vals@@Base+0x108>
   1c540:	cmp	r6, #0
   1c544:	ldr	r5, [r0, #4]
   1c548:	pople	{r4, r5, r6, r7, r8, pc}
   1c54c:	add	r5, r5, #8
   1c550:	mov	r7, #8
   1c554:	mov	r0, r5
   1c558:	add	r4, r4, #9
   1c55c:	mov	r1, r7
   1c560:	bl	1c46c <__gcov_sort_n_vals@@Base>
   1c564:	cmp	r6, r4
   1c568:	add	r5, r5, #72	; 0x48
   1c56c:	bgt	1c554 <__gcov_sort_n_vals@@Base+0xe8>
   1c570:	pop	{r4, r5, r6, r7, r8, pc}
   1c574:	bl	12158 <abort@plt>
   1c578:	stmiacc	r3!, {r0, r3, r4, r5, r9, sl, fp, pc}^
   1c57c:	ldr	r3, [r0, #52]	; 0x34
   1c580:	cmp	r3, #0
   1c584:	bxeq	lr
   1c588:	ldr	ip, [r0, #56]	; 0x38
   1c58c:	cmp	ip, #0
   1c590:	bxeq	lr
   1c594:	push	{r4, r5, r6, lr}
   1c598:	mov	r5, r0
   1c59c:	mov	r4, #0
   1c5a0:	add	r6, r0, #12
   1c5a4:	ldr	r1, [r5, #60]	; 0x3c
   1c5a8:	mov	r2, r6
   1c5ac:	mov	r3, #0
   1c5b0:	ldr	r0, [r1, r4, lsl #2]
   1c5b4:	add	r0, r0, #16
   1c5b8:	ldr	r1, [r2, #4]!
   1c5bc:	cmp	r1, #0
   1c5c0:	beq	1c5d0 <__gcov_sort_n_vals@@Base+0x164>
   1c5c4:	cmp	r3, #9
   1c5c8:	beq	1c5ec <__gcov_sort_n_vals@@Base+0x180>
   1c5cc:	add	r0, r0, #8
   1c5d0:	add	r3, r3, #1
   1c5d4:	cmp	r3, #10
   1c5d8:	bne	1c5b8 <__gcov_sort_n_vals@@Base+0x14c>
   1c5dc:	add	r4, r4, #1
   1c5e0:	cmp	ip, r4
   1c5e4:	bne	1c5a4 <__gcov_sort_n_vals@@Base+0x138>
   1c5e8:	pop	{r4, r5, r6, pc}
   1c5ec:	bl	1c51c <__gcov_sort_n_vals@@Base+0xb0>
   1c5f0:	ldr	ip, [r5, #56]	; 0x38
   1c5f4:	add	r4, r4, #1
   1c5f8:	cmp	ip, r4
   1c5fc:	bne	1c5a4 <__gcov_sort_n_vals@@Base+0x138>
   1c600:	b	1c5e8 <__gcov_sort_n_vals@@Base+0x17c>
   1c604:	push	{r4, r5, r6, r7, r8, r9, lr}
   1c608:	sub	sp, sp, #6080	; 0x17c0
   1c60c:	ldr	ip, [pc, #388]	; 1c798 <__gcov_sort_n_vals@@Base+0x32c>
   1c610:	sub	sp, sp, #36	; 0x24
   1c614:	add	ip, pc, ip
   1c618:	add	r5, sp, #2016	; 0x7e0
   1c61c:	mov	r4, r0
   1c620:	mov	r7, r1
   1c624:	mov	r1, #0
   1c628:	str	r1, [ip, #4]
   1c62c:	str	r1, [ip]
   1c630:	mov	r8, r2
   1c634:	mov	r6, r3
   1c638:	str	r1, [r5, #-2000]	; 0xfffff830
   1c63c:	str	r1, [r5, #-1996]	; 0xfffff834
   1c640:	bl	1c57c <__gcov_sort_n_vals@@Base+0x110>
   1c644:	mov	r1, r7
   1c648:	ldr	r0, [r4, #12]
   1c64c:	bl	1b8b4 <next@@Base+0x2258>
   1c650:	cmn	r0, #1
   1c654:	beq	1c6d4 <__gcov_sort_n_vals@@Base+0x268>
   1c658:	bl	1bb9c <next@@Base+0x2540>
   1c65c:	cmp	r0, #0
   1c660:	beq	1c6e0 <__gcov_sort_n_vals@@Base+0x274>
   1c664:	ldr	r3, [pc, #304]	; 1c79c <__gcov_sort_n_vals@@Base+0x330>
   1c668:	cmp	r0, r3
   1c66c:	beq	1c738 <__gcov_sort_n_vals@@Base+0x2cc>
   1c670:	ldr	r0, [pc, #296]	; 1c7a0 <__gcov_sort_n_vals@@Base+0x334>
   1c674:	ldr	r1, [r7]
   1c678:	add	r0, pc, r0
   1c67c:	bl	1abb8 <next@@Base+0x155c>
   1c680:	ldr	r5, [pc, #284]	; 1c7a4 <__gcov_sort_n_vals@@Base+0x338>
   1c684:	add	r5, pc, r5
   1c688:	ldr	r1, [r5, #4]
   1c68c:	cmp	r1, #0
   1c690:	movne	r6, #10
   1c694:	beq	1c6b4 <__gcov_sort_n_vals@@Base+0x248>
   1c698:	mov	r2, r6
   1c69c:	mov	r0, r4
   1c6a0:	bl	1ac00 <next@@Base+0x15a4>
   1c6a4:	cmp	r0, #0
   1c6a8:	mov	r1, r0
   1c6ac:	str	r0, [r5, #4]
   1c6b0:	bne	1c698 <__gcov_sort_n_vals@@Base+0x22c>
   1c6b4:	bl	1b9c8 <next@@Base+0x236c>
   1c6b8:	cmp	r0, #0
   1c6bc:	beq	1c6d4 <__gcov_sort_n_vals@@Base+0x268>
   1c6c0:	blt	1c774 <__gcov_sort_n_vals@@Base+0x308>
   1c6c4:	ldr	r0, [pc, #220]	; 1c7a8 <__gcov_sort_n_vals@@Base+0x33c>
   1c6c8:	add	r0, pc, r0
   1c6cc:	ldr	r1, [r7]
   1c6d0:	bl	1abb8 <next@@Base+0x155c>
   1c6d4:	add	sp, sp, #6080	; 0x17c0
   1c6d8:	add	sp, sp, #36	; 0x24
   1c6dc:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1c6e0:	add	r9, sp, #24
   1c6e4:	bl	1b748 <next@@Base+0x20ec>
   1c6e8:	ldr	r1, [r5, #-2000]	; 0xfffff830
   1c6ec:	cmp	r1, #0
   1c6f0:	beq	1c780 <__gcov_sort_n_vals@@Base+0x314>
   1c6f4:	add	r3, sp, #6144	; 0x1800
   1c6f8:	ldr	r0, [r7]
   1c6fc:	str	r6, [sp, #4]
   1c700:	ldr	r3, [r3]
   1c704:	mov	r1, r8
   1c708:	str	r3, [sp]
   1c70c:	mov	r2, r4
   1c710:	mov	r3, r9
   1c714:	bl	1b60c <next@@Base+0x1fb0>
   1c718:	cmn	r0, #1
   1c71c:	beq	1c680 <__gcov_sort_n_vals@@Base+0x214>
   1c720:	mov	r1, r9
   1c724:	ldr	r3, [r5, #-2000]	; 0xfffff830
   1c728:	ldr	r2, [r5, #-1996]	; 0xfffff834
   1c72c:	mov	r0, r4
   1c730:	bl	1c258 <next@@Base+0x2bfc>
   1c734:	b	1c680 <__gcov_sort_n_vals@@Base+0x214>
   1c738:	add	r3, sp, #16
   1c73c:	ldr	r0, [r7]
   1c740:	str	r3, [sp]
   1c744:	add	r3, sp, #6144	; 0x1800
   1c748:	add	r1, sp, #20
   1c74c:	add	r9, sp, #24
   1c750:	str	r1, [sp, #4]
   1c754:	str	r6, [sp, #8]
   1c758:	mov	r2, r9
   1c75c:	ldr	r3, [r3]
   1c760:	mov	r1, r4
   1c764:	bl	1beec <next@@Base+0x2890>
   1c768:	cmn	r0, #1
   1c76c:	bne	1c6e4 <__gcov_sort_n_vals@@Base+0x278>
   1c770:	b	1c680 <__gcov_sort_n_vals@@Base+0x214>
   1c774:	ldr	r0, [pc, #48]	; 1c7ac <__gcov_sort_n_vals@@Base+0x340>
   1c778:	add	r0, pc, r0
   1c77c:	b	1c6cc <__gcov_sort_n_vals@@Base+0x260>
   1c780:	ldr	r2, [pc, #40]	; 1c7b0 <__gcov_sort_n_vals@@Base+0x344>
   1c784:	mov	r0, r9
   1c788:	bl	120f8 <memset@plt>
   1c78c:	ldr	r3, [r5, #-1996]	; 0xfffff834
   1c790:	str	r3, [r5, #-2000]	; 0xfffff830
   1c794:	b	1c6f4 <__gcov_sort_n_vals@@Base+0x288>
   1c798:	andeq	r3, r1, ip, lsr lr
   1c79c:	strbvs	r6, [r3, -r1, ror #8]!
   1c7a0:	andeq	r1, r0, r8, lsr #3
   1c7a4:	andeq	r3, r1, ip, asr #27
   1c7a8:	andeq	r1, r0, ip, lsr r1
   1c7ac:	andeq	r1, r0, ip, rrx
   1c7b0:	andeq	r1, r0, r8, asr #15
   1c7b4:	push	{r4, r5, r6, r7, r8, lr}
   1c7b8:	sub	sp, sp, #6080	; 0x17c0
   1c7bc:	sub	sp, sp, #32
   1c7c0:	add	r6, sp, #24
   1c7c4:	add	r2, sp, #12
   1c7c8:	mov	r8, r1
   1c7cc:	mov	r1, r6
   1c7d0:	mov	r4, r0
   1c7d4:	bl	1ae18 <next@@Base+0x17bc>
   1c7d8:	add	r5, sp, #8
   1c7dc:	mov	r7, r0
   1c7e0:	mov	r0, r5
   1c7e4:	bl	1af9c <next@@Base+0x1940>
   1c7e8:	cmp	r4, #0
   1c7ec:	beq	1c814 <__gcov_sort_n_vals@@Base+0x3a8>
   1c7f0:	mov	r0, r4
   1c7f4:	str	r6, [sp]
   1c7f8:	mov	r3, r7
   1c7fc:	mov	r2, r8
   1c800:	mov	r1, r5
   1c804:	bl	1c604 <__gcov_sort_n_vals@@Base+0x198>
   1c808:	ldr	r4, [r4, #4]
   1c80c:	cmp	r4, #0
   1c810:	bne	1c7f0 <__gcov_sort_n_vals@@Base+0x384>
   1c814:	ldr	r0, [sp, #8]
   1c818:	bl	12008 <free@plt>
   1c81c:	add	sp, sp, #6080	; 0x17c0
   1c820:	add	sp, sp, #32
   1c824:	pop	{r4, r5, r6, r7, r8, pc}
   1c828:	ldrb	r1, [r0, #4]
   1c82c:	tst	r1, #1
   1c830:	bxne	lr
   1c834:	push	{r4, lr}
   1c838:	lsr	r1, r1, #1
   1c83c:	mov	r4, r0
   1c840:	and	r1, r1, #1
   1c844:	ldr	r0, [r0]
   1c848:	bl	1c7b4 <__gcov_sort_n_vals@@Base+0x348>
   1c84c:	ldrb	r3, [r4, #4]
   1c850:	orr	r3, r3, #3
   1c854:	strb	r3, [r4, #4]
   1c858:	pop	{r4, pc}
   1c85c:	push	{r4, r5, r6, lr}
   1c860:	ldr	r4, [pc, #76]	; 1c8b4 <__gcov_sort_n_vals@@Base+0x448>
   1c864:	ldr	r5, [pc, #76]	; 1c8b8 <__gcov_sort_n_vals@@Base+0x44c>
   1c868:	add	r4, pc, r4
   1c86c:	mov	r0, r4
   1c870:	bl	1c828 <__gcov_sort_n_vals@@Base+0x3bc>
   1c874:	ldr	r3, [r4, #8]
   1c878:	add	r5, pc, r5
   1c87c:	cmp	r3, #0
   1c880:	ldrne	r2, [r4, #12]
   1c884:	strne	r2, [r3, #12]
   1c888:	ldr	r2, [pc, #44]	; 1c8bc <__gcov_sort_n_vals@@Base+0x450>
   1c88c:	add	r2, pc, r2
   1c890:	ldr	r2, [r2, #12]
   1c894:	cmp	r2, #0
   1c898:	beq	1c8a4 <__gcov_sort_n_vals@@Base+0x438>
   1c89c:	str	r3, [r2, #8]
   1c8a0:	pop	{r4, r5, r6, pc}
   1c8a4:	ldr	r2, [pc, #20]	; 1c8c0 <__gcov_sort_n_vals@@Base+0x454>
   1c8a8:	ldr	r2, [r5, r2]
   1c8ac:	str	r3, [r2, #4]
   1c8b0:	pop	{r4, r5, r6, pc}
   1c8b4:	andeq	r3, r1, r0, lsr #27
   1c8b8:	andeq	r1, r1, r0, lsl #15
   1c8bc:	andeq	r3, r1, ip, ror sp
   1c8c0:	andeq	r0, r0, r4, lsr #1
   1c8c4:	ldr	r1, [r0]
   1c8c8:	push	{r4, r5, r6, lr}
   1c8cc:	cmp	r1, #0
   1c8d0:	ldr	r5, [pc, #168]	; 1c980 <__gcov_sort_n_vals@@Base+0x514>
   1c8d4:	add	r5, pc, r5
   1c8d8:	popeq	{r4, r5, r6, pc}
   1c8dc:	ldr	r3, [r0, #56]	; 0x38
   1c8e0:	cmp	r3, #0
   1c8e4:	popeq	{r4, r5, r6, pc}
   1c8e8:	mov	r4, r0
   1c8ec:	mov	r2, #0
   1c8f0:	add	r0, r0, #12
   1c8f4:	bl	1b580 <next@@Base+0x1f24>
   1c8f8:	cmp	r0, #0
   1c8fc:	popeq	{r4, r5, r6, pc}
   1c900:	ldr	r6, [pc, #124]	; 1c984 <__gcov_sort_n_vals@@Base+0x518>
   1c904:	add	r6, pc, r6
   1c908:	ldr	r2, [r6]
   1c90c:	cmp	r2, #0
   1c910:	beq	1c928 <__gcov_sort_n_vals@@Base+0x4bc>
   1c914:	ldr	r3, [pc, #108]	; 1c988 <__gcov_sort_n_vals@@Base+0x51c>
   1c918:	str	r2, [r4, #4]
   1c91c:	add	r3, pc, r3
   1c920:	str	r4, [r3]
   1c924:	pop	{r4, r5, r6, pc}
   1c928:	ldr	r3, [pc, #92]	; 1c98c <__gcov_sort_n_vals@@Base+0x520>
   1c92c:	ldr	r2, [pc, #92]	; 1c990 <__gcov_sort_n_vals@@Base+0x524>
   1c930:	mov	r0, #12
   1c934:	ldr	r5, [r5, r3]
   1c938:	add	r2, pc, r2
   1c93c:	ldr	r1, [r5]
   1c940:	bl	1b580 <next@@Base+0x1f24>
   1c944:	cmp	r0, #0
   1c948:	beq	1c968 <__gcov_sort_n_vals@@Base+0x4fc>
   1c94c:	ldr	r3, [r5, #4]
   1c950:	cmp	r3, #0
   1c954:	str	r3, [r6, #8]
   1c958:	strne	r6, [r3, #12]
   1c95c:	ldr	r3, [pc, #48]	; 1c994 <__gcov_sort_n_vals@@Base+0x528>
   1c960:	add	r3, pc, r3
   1c964:	str	r3, [r5, #4]
   1c968:	ldr	r0, [pc, #40]	; 1c998 <__gcov_sort_n_vals@@Base+0x52c>
   1c96c:	add	r0, pc, r0
   1c970:	bl	1ce60 <__libc_csu_fini@@Base+0x4>
   1c974:	ldr	r3, [pc, #32]	; 1c99c <__gcov_sort_n_vals@@Base+0x530>
   1c978:	ldr	r2, [pc, r3]
   1c97c:	b	1c914 <__gcov_sort_n_vals@@Base+0x4a8>
   1c980:	andeq	r1, r1, r4, lsr #14
   1c984:	andeq	r3, r1, r4, lsl #26
   1c988:	andeq	r3, r1, ip, ror #25
   1c98c:	andeq	r0, r0, r4, lsr #1
   1c990:	andeq	r0, r0, ip, lsl #30
   1c994:	andeq	r3, r1, r8, lsr #25
   1c998:			; <UNDEFINED> instruction: 0xfffffee8
   1c99c:	muleq	r1, r0, ip
   1c9a0:	subs	r2, r1, #1
   1c9a4:	bxeq	lr
   1c9a8:	bcc	1cb80 <__gcov_sort_n_vals@@Base+0x714>
   1c9ac:	cmp	r0, r1
   1c9b0:	bls	1cb64 <__gcov_sort_n_vals@@Base+0x6f8>
   1c9b4:	tst	r1, r2
   1c9b8:	beq	1cb70 <__gcov_sort_n_vals@@Base+0x704>
   1c9bc:	clz	r3, r0
   1c9c0:	clz	r2, r1
   1c9c4:	sub	r3, r2, r3
   1c9c8:	rsbs	r3, r3, #31
   1c9cc:	addne	r3, r3, r3, lsl #1
   1c9d0:	mov	r2, #0
   1c9d4:	addne	pc, pc, r3, lsl #2
   1c9d8:	nop			; (mov r0, r0)
   1c9dc:	cmp	r0, r1, lsl #31
   1c9e0:	adc	r2, r2, r2
   1c9e4:	subcs	r0, r0, r1, lsl #31
   1c9e8:	cmp	r0, r1, lsl #30
   1c9ec:	adc	r2, r2, r2
   1c9f0:	subcs	r0, r0, r1, lsl #30
   1c9f4:	cmp	r0, r1, lsl #29
   1c9f8:	adc	r2, r2, r2
   1c9fc:	subcs	r0, r0, r1, lsl #29
   1ca00:	cmp	r0, r1, lsl #28
   1ca04:	adc	r2, r2, r2
   1ca08:	subcs	r0, r0, r1, lsl #28
   1ca0c:	cmp	r0, r1, lsl #27
   1ca10:	adc	r2, r2, r2
   1ca14:	subcs	r0, r0, r1, lsl #27
   1ca18:	cmp	r0, r1, lsl #26
   1ca1c:	adc	r2, r2, r2
   1ca20:	subcs	r0, r0, r1, lsl #26
   1ca24:	cmp	r0, r1, lsl #25
   1ca28:	adc	r2, r2, r2
   1ca2c:	subcs	r0, r0, r1, lsl #25
   1ca30:	cmp	r0, r1, lsl #24
   1ca34:	adc	r2, r2, r2
   1ca38:	subcs	r0, r0, r1, lsl #24
   1ca3c:	cmp	r0, r1, lsl #23
   1ca40:	adc	r2, r2, r2
   1ca44:	subcs	r0, r0, r1, lsl #23
   1ca48:	cmp	r0, r1, lsl #22
   1ca4c:	adc	r2, r2, r2
   1ca50:	subcs	r0, r0, r1, lsl #22
   1ca54:	cmp	r0, r1, lsl #21
   1ca58:	adc	r2, r2, r2
   1ca5c:	subcs	r0, r0, r1, lsl #21
   1ca60:	cmp	r0, r1, lsl #20
   1ca64:	adc	r2, r2, r2
   1ca68:	subcs	r0, r0, r1, lsl #20
   1ca6c:	cmp	r0, r1, lsl #19
   1ca70:	adc	r2, r2, r2
   1ca74:	subcs	r0, r0, r1, lsl #19
   1ca78:	cmp	r0, r1, lsl #18
   1ca7c:	adc	r2, r2, r2
   1ca80:	subcs	r0, r0, r1, lsl #18
   1ca84:	cmp	r0, r1, lsl #17
   1ca88:	adc	r2, r2, r2
   1ca8c:	subcs	r0, r0, r1, lsl #17
   1ca90:	cmp	r0, r1, lsl #16
   1ca94:	adc	r2, r2, r2
   1ca98:	subcs	r0, r0, r1, lsl #16
   1ca9c:	cmp	r0, r1, lsl #15
   1caa0:	adc	r2, r2, r2
   1caa4:	subcs	r0, r0, r1, lsl #15
   1caa8:	cmp	r0, r1, lsl #14
   1caac:	adc	r2, r2, r2
   1cab0:	subcs	r0, r0, r1, lsl #14
   1cab4:	cmp	r0, r1, lsl #13
   1cab8:	adc	r2, r2, r2
   1cabc:	subcs	r0, r0, r1, lsl #13
   1cac0:	cmp	r0, r1, lsl #12
   1cac4:	adc	r2, r2, r2
   1cac8:	subcs	r0, r0, r1, lsl #12
   1cacc:	cmp	r0, r1, lsl #11
   1cad0:	adc	r2, r2, r2
   1cad4:	subcs	r0, r0, r1, lsl #11
   1cad8:	cmp	r0, r1, lsl #10
   1cadc:	adc	r2, r2, r2
   1cae0:	subcs	r0, r0, r1, lsl #10
   1cae4:	cmp	r0, r1, lsl #9
   1cae8:	adc	r2, r2, r2
   1caec:	subcs	r0, r0, r1, lsl #9
   1caf0:	cmp	r0, r1, lsl #8
   1caf4:	adc	r2, r2, r2
   1caf8:	subcs	r0, r0, r1, lsl #8
   1cafc:	cmp	r0, r1, lsl #7
   1cb00:	adc	r2, r2, r2
   1cb04:	subcs	r0, r0, r1, lsl #7
   1cb08:	cmp	r0, r1, lsl #6
   1cb0c:	adc	r2, r2, r2
   1cb10:	subcs	r0, r0, r1, lsl #6
   1cb14:	cmp	r0, r1, lsl #5
   1cb18:	adc	r2, r2, r2
   1cb1c:	subcs	r0, r0, r1, lsl #5
   1cb20:	cmp	r0, r1, lsl #4
   1cb24:	adc	r2, r2, r2
   1cb28:	subcs	r0, r0, r1, lsl #4
   1cb2c:	cmp	r0, r1, lsl #3
   1cb30:	adc	r2, r2, r2
   1cb34:	subcs	r0, r0, r1, lsl #3
   1cb38:	cmp	r0, r1, lsl #2
   1cb3c:	adc	r2, r2, r2
   1cb40:	subcs	r0, r0, r1, lsl #2
   1cb44:	cmp	r0, r1, lsl #1
   1cb48:	adc	r2, r2, r2
   1cb4c:	subcs	r0, r0, r1, lsl #1
   1cb50:	cmp	r0, r1
   1cb54:	adc	r2, r2, r2
   1cb58:	subcs	r0, r0, r1
   1cb5c:	mov	r0, r2
   1cb60:	bx	lr
   1cb64:	moveq	r0, #1
   1cb68:	movne	r0, #0
   1cb6c:	bx	lr
   1cb70:	clz	r2, r1
   1cb74:	rsb	r2, r2, #31
   1cb78:	lsr	r0, r0, r2
   1cb7c:	bx	lr
   1cb80:	cmp	r0, #0
   1cb84:	mvnne	r0, #0
   1cb88:	b	1cc80 <__gcov_sort_n_vals@@Base+0x814>
   1cb8c:	cmp	r1, #0
   1cb90:	beq	1cb80 <__gcov_sort_n_vals@@Base+0x714>
   1cb94:	push	{r0, r1, lr}
   1cb98:	bl	1c9a0 <__gcov_sort_n_vals@@Base+0x534>
   1cb9c:	pop	{r1, r2, lr}
   1cba0:	mul	r3, r2, r0
   1cba4:	sub	r1, r1, r3
   1cba8:	bx	lr
   1cbac:	cmp	r3, #0
   1cbb0:	cmpeq	r2, #0
   1cbb4:	bne	1cbd8 <__gcov_sort_n_vals@@Base+0x76c>
   1cbb8:	cmp	r1, #0
   1cbbc:	movlt	r1, #-2147483648	; 0x80000000
   1cbc0:	movlt	r0, #0
   1cbc4:	blt	1cbd4 <__gcov_sort_n_vals@@Base+0x768>
   1cbc8:	cmpeq	r0, #0
   1cbcc:	mvnne	r1, #-2147483648	; 0x80000000
   1cbd0:	mvnne	r0, #0
   1cbd4:	b	1cc80 <__gcov_sort_n_vals@@Base+0x814>
   1cbd8:	sub	sp, sp, #8
   1cbdc:	push	{sp, lr}
   1cbe0:	cmp	r1, #0
   1cbe4:	blt	1cc04 <__gcov_sort_n_vals@@Base+0x798>
   1cbe8:	cmp	r3, #0
   1cbec:	blt	1cc38 <__gcov_sort_n_vals@@Base+0x7cc>
   1cbf0:	bl	1ccd4 <__gcov_sort_n_vals@@Base+0x868>
   1cbf4:	ldr	lr, [sp, #4]
   1cbf8:	add	sp, sp, #8
   1cbfc:	pop	{r2, r3}
   1cc00:	bx	lr
   1cc04:	rsbs	r0, r0, #0
   1cc08:	sbc	r1, r1, r1, lsl #1
   1cc0c:	cmp	r3, #0
   1cc10:	blt	1cc5c <__gcov_sort_n_vals@@Base+0x7f0>
   1cc14:	bl	1ccd4 <__gcov_sort_n_vals@@Base+0x868>
   1cc18:	ldr	lr, [sp, #4]
   1cc1c:	add	sp, sp, #8
   1cc20:	pop	{r2, r3}
   1cc24:	rsbs	r0, r0, #0
   1cc28:	sbc	r1, r1, r1, lsl #1
   1cc2c:	rsbs	r2, r2, #0
   1cc30:	sbc	r3, r3, r3, lsl #1
   1cc34:	bx	lr
   1cc38:	rsbs	r2, r2, #0
   1cc3c:	sbc	r3, r3, r3, lsl #1
   1cc40:	bl	1ccd4 <__gcov_sort_n_vals@@Base+0x868>
   1cc44:	ldr	lr, [sp, #4]
   1cc48:	add	sp, sp, #8
   1cc4c:	pop	{r2, r3}
   1cc50:	rsbs	r0, r0, #0
   1cc54:	sbc	r1, r1, r1, lsl #1
   1cc58:	bx	lr
   1cc5c:	rsbs	r2, r2, #0
   1cc60:	sbc	r3, r3, r3, lsl #1
   1cc64:	bl	1ccd4 <__gcov_sort_n_vals@@Base+0x868>
   1cc68:	ldr	lr, [sp, #4]
   1cc6c:	add	sp, sp, #8
   1cc70:	pop	{r2, r3}
   1cc74:	rsbs	r2, r2, #0
   1cc78:	sbc	r3, r3, r3, lsl #1
   1cc7c:	bx	lr
   1cc80:	push	{r1, lr}
   1cc84:	mov	r0, #8
   1cc88:	bl	11fcc <raise@plt>
   1cc8c:	pop	{r1, pc}
   1cc90:	ldr	r3, [pc, #48]	; 1ccc8 <__gcov_sort_n_vals@@Base+0x85c>
   1cc94:	ldr	r2, [pc, #48]	; 1cccc <__gcov_sort_n_vals@@Base+0x860>
   1cc98:	and	r3, r3, r0, lsr #1
   1cc9c:	sub	r0, r0, r3
   1cca0:	and	r3, r0, r2
   1cca4:	and	r0, r2, r0, lsr #2
   1cca8:	add	r3, r3, r0
   1ccac:	ldr	r0, [pc, #28]	; 1ccd0 <__gcov_sort_n_vals@@Base+0x864>
   1ccb0:	add	r3, r3, r3, lsr #4
   1ccb4:	and	r0, r0, r3
   1ccb8:	add	r0, r0, r0, lsl #8
   1ccbc:	add	r0, r0, r0, lsl #16
   1ccc0:	lsr	r0, r0, #24
   1ccc4:	bx	lr
   1ccc8:	ldrbpl	r5, [r5, #-1365]	; 0xfffffaab
   1cccc:	teqcc	r3, #-872415232	; 0xcc000000
   1ccd0:	svceq	0x000f0f0f
   1ccd4:	cmp	r1, r3
   1ccd8:	push	{r4, r5, r6, r7, r8, r9, lr}
   1ccdc:	cmpeq	r0, r2
   1cce0:	mov	r4, r0
   1cce4:	mov	r5, r1
   1cce8:	ldr	r9, [sp, #28]
   1ccec:	movcc	r0, #0
   1ccf0:	movcc	r1, #0
   1ccf4:	bcc	1cdec <__gcov_sort_n_vals@@Base+0x980>
   1ccf8:	cmp	r3, #0
   1ccfc:	clzeq	ip, r2
   1cd00:	clzne	ip, r3
   1cd04:	addeq	ip, ip, #32
   1cd08:	cmp	r5, #0
   1cd0c:	clzeq	r1, r4
   1cd10:	addeq	r1, r1, #32
   1cd14:	clzne	r1, r5
   1cd18:	sub	ip, ip, r1
   1cd1c:	sub	lr, ip, #32
   1cd20:	lsl	r7, r3, ip
   1cd24:	rsb	r8, ip, #32
   1cd28:	orr	r7, r7, r2, lsl lr
   1cd2c:	orr	r7, r7, r2, lsr r8
   1cd30:	lsl	r6, r2, ip
   1cd34:	cmp	r5, r7
   1cd38:	cmpeq	r4, r6
   1cd3c:	movcc	r0, #0
   1cd40:	movcc	r1, #0
   1cd44:	bcc	1cd60 <__gcov_sort_n_vals@@Base+0x8f4>
   1cd48:	mov	r3, #1
   1cd4c:	subs	r4, r4, r6
   1cd50:	lsl	r1, r3, lr
   1cd54:	lsl	r0, r3, ip
   1cd58:	orr	r1, r1, r3, lsr r8
   1cd5c:	sbc	r5, r5, r7
   1cd60:	cmp	ip, #0
   1cd64:	beq	1cdec <__gcov_sort_n_vals@@Base+0x980>
   1cd68:	lsrs	r3, r7, #1
   1cd6c:	rrx	r2, r6
   1cd70:	mov	r6, ip
   1cd74:	b	1cd98 <__gcov_sort_n_vals@@Base+0x92c>
   1cd78:	subs	r4, r4, r2
   1cd7c:	sbc	r5, r5, r3
   1cd80:	adds	r4, r4, r4
   1cd84:	adc	r5, r5, r5
   1cd88:	adds	r4, r4, #1
   1cd8c:	adc	r5, r5, #0
   1cd90:	subs	r6, r6, #1
   1cd94:	beq	1cdb4 <__gcov_sort_n_vals@@Base+0x948>
   1cd98:	cmp	r5, r3
   1cd9c:	cmpeq	r4, r2
   1cda0:	bcs	1cd78 <__gcov_sort_n_vals@@Base+0x90c>
   1cda4:	adds	r4, r4, r4
   1cda8:	adc	r5, r5, r5
   1cdac:	subs	r6, r6, #1
   1cdb0:	bne	1cd98 <__gcov_sort_n_vals@@Base+0x92c>
   1cdb4:	lsr	r6, r4, ip
   1cdb8:	lsr	r7, r5, ip
   1cdbc:	orr	r6, r6, r5, lsl r8
   1cdc0:	adds	r2, r0, r4
   1cdc4:	orr	r6, r6, r5, lsr lr
   1cdc8:	adc	r3, r1, r5
   1cdcc:	lsl	r1, r7, ip
   1cdd0:	orr	r1, r1, r6, lsl lr
   1cdd4:	lsl	r0, r6, ip
   1cdd8:	orr	r1, r1, r6, lsr r8
   1cddc:	subs	r0, r2, r0
   1cde0:	mov	r4, r6
   1cde4:	mov	r5, r7
   1cde8:	sbc	r1, r3, r1
   1cdec:	cmp	r9, #0
   1cdf0:	popeq	{r4, r5, r6, r7, r8, r9, pc}
   1cdf4:	strd	r4, [r9]
   1cdf8:	pop	{r4, r5, r6, r7, r8, r9, pc}

0001cdfc <__libc_csu_init@@Base>:
   1cdfc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1ce00:	mov	r7, r0
   1ce04:	ldr	r6, [pc, #72]	; 1ce54 <__libc_csu_init@@Base+0x58>
   1ce08:	ldr	r5, [pc, #72]	; 1ce58 <__libc_csu_init@@Base+0x5c>
   1ce0c:	add	r6, pc, r6
   1ce10:	add	r5, pc, r5
   1ce14:	sub	r6, r6, r5
   1ce18:	mov	r8, r1
   1ce1c:	mov	r9, r2
   1ce20:	bl	11fa0 <fdopen@plt-0x20>
   1ce24:	asrs	r6, r6, #2
   1ce28:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1ce2c:	mov	r4, #0
   1ce30:	add	r4, r4, #1
   1ce34:	ldr	r3, [r5], #4
   1ce38:	mov	r2, r9
   1ce3c:	mov	r1, r8
   1ce40:	mov	r0, r7
   1ce44:	blx	r3
   1ce48:	cmp	r6, r4
   1ce4c:	bne	1ce30 <__libc_csu_init@@Base+0x34>
   1ce50:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1ce54:	strdeq	r1, [r1], -ip
   1ce58:	andeq	r1, r1, r4, ror #1

0001ce5c <__libc_csu_fini@@Base>:
   1ce5c:	bx	lr
   1ce60:	ldr	r3, [pc, #12]	; 1ce74 <__libc_csu_fini@@Base+0x18>
   1ce64:	mov	r1, #0
   1ce68:	add	r3, pc, r3
   1ce6c:	ldr	r2, [r3]
   1ce70:	b	120d4 <__cxa_atexit@plt>
   1ce74:	andeq	r1, r1, r0, asr #4
   1ce78:	mov	r2, r1
   1ce7c:	mov	r1, r0
   1ce80:	mov	r0, #3
   1ce84:	b	12074 <__fxstat@plt>

Disassembly of section .fini:

0001ce88 <.fini>:
   1ce88:	push	{r3, lr}
   1ce8c:	pop	{r3, pc}
