
../repos/prog2/MT2E2-2:     file format elf32-littlearm


Disassembly of section .init:

00010c50 <.init>:
   10c50:	push	{r3, lr}
   10c54:	bl	10fe8 <_start@@Base+0x3c>
   10c58:	pop	{r3, pc}

Disassembly of section .plt:

00010c5c <calloc@plt-0x14>:
   10c5c:	push	{lr}		; (str lr, [sp, #-4]!)
   10c60:	ldr	lr, [pc, #4]	; 10c6c <calloc@plt-0x4>
   10c64:	add	lr, pc, lr
   10c68:	ldr	pc, [lr, #8]!
   10c6c:	muleq	r1, r4, r3

00010c70 <calloc@plt>:
   10c70:	add	ip, pc, #0, 12
   10c74:	add	ip, ip, #73728	; 0x12000
   10c78:	ldr	pc, [ip, #916]!	; 0x394

00010c7c <raise@plt>:
   10c7c:	add	ip, pc, #0, 12
   10c80:	add	ip, ip, #73728	; 0x12000
   10c84:	ldr	pc, [ip, #908]!	; 0x38c

00010c88 <strcmp@plt>:
   10c88:	add	ip, pc, #0, 12
   10c8c:	add	ip, ip, #73728	; 0x12000
   10c90:	ldr	pc, [ip, #900]!	; 0x384

00010c94 <strtol@plt>:
   10c94:	add	ip, pc, #0, 12
   10c98:	add	ip, ip, #73728	; 0x12000
   10c9c:	ldr	pc, [ip, #892]!	; 0x37c

00010ca0 <printf@plt>:
   10ca0:	add	ip, pc, #0, 12
   10ca4:	add	ip, ip, #73728	; 0x12000
   10ca8:	ldr	pc, [ip, #884]!	; 0x374

00010cac <__isoc99_fscanf@plt>:
   10cac:	add	ip, pc, #0, 12
   10cb0:	add	ip, ip, #73728	; 0x12000
   10cb4:	ldr	pc, [ip, #876]!	; 0x36c

00010cb8 <fopen@plt>:
   10cb8:	add	ip, pc, #0, 12
   10cbc:	add	ip, ip, #73728	; 0x12000
   10cc0:	ldr	pc, [ip, #868]!	; 0x364

00010cc4 <free@plt>:
   10cc4:	add	ip, pc, #0, 12
   10cc8:	add	ip, ip, #73728	; 0x12000
   10ccc:	ldr	pc, [ip, #860]!	; 0x35c

00010cd0 <memcpy@plt>:
   10cd0:	add	ip, pc, #0, 12
   10cd4:	add	ip, ip, #73728	; 0x12000
   10cd8:	ldr	pc, [ip, #852]!	; 0x354

00010cdc <realloc@plt>:
   10cdc:	add	ip, pc, #0, 12
   10ce0:	add	ip, ip, #73728	; 0x12000
   10ce4:	ldr	pc, [ip, #844]!	; 0x34c

00010ce8 <strcpy@plt>:
   10ce8:	add	ip, pc, #0, 12
   10cec:	add	ip, ip, #73728	; 0x12000
   10cf0:	ldr	pc, [ip, #836]!	; 0x344

00010cf4 <puts@plt>:
   10cf4:	add	ip, pc, #0, 12
   10cf8:	add	ip, ip, #73728	; 0x12000
   10cfc:	ldr	pc, [ip, #828]!	; 0x33c

00010d00 <malloc@plt>:
   10d00:	add	ip, pc, #0, 12
   10d04:	add	ip, ip, #73728	; 0x12000
   10d08:	ldr	pc, [ip, #820]!	; 0x334

00010d0c <__libc_start_main@plt>:
   10d0c:	add	ip, pc, #0, 12
   10d10:	add	ip, ip, #73728	; 0x12000
   10d14:	ldr	pc, [ip, #812]!	; 0x32c

00010d18 <__gmon_start__@plt>:
   10d18:	add	ip, pc, #0, 12
   10d1c:	add	ip, ip, #73728	; 0x12000
   10d20:	ldr	pc, [ip, #804]!	; 0x324

00010d24 <strlen@plt>:
   10d24:	add	ip, pc, #0, 12
   10d28:	add	ip, ip, #73728	; 0x12000
   10d2c:	ldr	pc, [ip, #796]!	; 0x31c

00010d30 <putchar@plt>:
   10d30:	add	ip, pc, #0, 12
   10d34:	add	ip, ip, #73728	; 0x12000
   10d38:	ldr	pc, [ip, #788]!	; 0x314

00010d3c <fclose@plt>:
   10d3c:	add	ip, pc, #0, 12
   10d40:	add	ip, ip, #73728	; 0x12000
   10d44:	ldr	pc, [ip, #780]!	; 0x30c

00010d48 <sprintf@plt>:
   10d48:	add	ip, pc, #0, 12
   10d4c:	add	ip, ip, #73728	; 0x12000
   10d50:	ldr	pc, [ip, #772]!	; 0x304

00010d54 <abort@plt>:
   10d54:	add	ip, pc, #0, 12
   10d58:	add	ip, ip, #73728	; 0x12000
   10d5c:	ldr	pc, [ip, #764]!	; 0x2fc

Disassembly of section .text:

00010d60 <main@@Base>:
   10d60:	ldr	r0, [pc, #544]	; 10f88 <main@@Base+0x228>
   10d64:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10d68:	add	r0, pc, r0
   10d6c:	sub	sp, sp, #32
   10d70:	bl	10cf4 <puts@plt>
   10d74:	mov	r1, #1
   10d78:	mov	r0, #8
   10d7c:	bl	11304 <grafo_novo@@Base>
   10d80:	mov	r2, #3
   10d84:	mov	r1, #1
   10d88:	ldr	r7, [pc, #508]	; 10f8c <main@@Base+0x22c>
   10d8c:	mov	r4, #0
   10d90:	add	r7, pc, r7
   10d94:	mov	r6, r0
   10d98:	bl	1154c <grafo_adiciona@@Base>
   10d9c:	mov	r0, r6
   10da0:	mov	r2, #3
   10da4:	mov	r1, #2
   10da8:	bl	1154c <grafo_adiciona@@Base>
   10dac:	mov	r0, r6
   10db0:	mov	r2, #4
   10db4:	mov	r1, #2
   10db8:	bl	1154c <grafo_adiciona@@Base>
   10dbc:	mov	r0, r6
   10dc0:	mov	r2, #5
   10dc4:	mov	r1, #2
   10dc8:	bl	1154c <grafo_adiciona@@Base>
   10dcc:	mov	r0, r6
   10dd0:	mov	r2, #2
   10dd4:	mov	r1, #3
   10dd8:	bl	1154c <grafo_adiciona@@Base>
   10ddc:	mov	r0, r6
   10de0:	mov	r2, #4
   10de4:	mov	r1, #3
   10de8:	bl	1154c <grafo_adiciona@@Base>
   10dec:	mov	r0, r6
   10df0:	mov	r2, #6
   10df4:	mov	r1, #4
   10df8:	bl	1154c <grafo_adiciona@@Base>
   10dfc:	mov	r0, r6
   10e00:	mov	r2, #7
   10e04:	mov	r1, #4
   10e08:	bl	1154c <grafo_adiciona@@Base>
   10e0c:	mov	r0, r6
   10e10:	mov	r2, #4
   10e14:	mov	r1, #5
   10e18:	bl	1154c <grafo_adiciona@@Base>
   10e1c:	mov	r0, r6
   10e20:	mov	r2, #6
   10e24:	mov	r1, #5
   10e28:	bl	1154c <grafo_adiciona@@Base>
   10e2c:	mov	r0, r6
   10e30:	mov	r2, #7
   10e34:	mov	r1, #5
   10e38:	bl	1154c <grafo_adiciona@@Base>
   10e3c:	mov	r0, r6
   10e40:	mov	r2, #7
   10e44:	mov	r1, #6
   10e48:	bl	1154c <grafo_adiciona@@Base>
   10e4c:	mov	r3, #5
   10e50:	mov	r2, #7
   10e54:	mov	r1, #1
   10e58:	mov	r0, r6
   10e5c:	bl	110d4 <descobre_caminho@@Base>
   10e60:	mov	r5, r0
   10e64:	ldr	r0, [pc, #292]	; 10f90 <main@@Base+0x230>
   10e68:	add	r0, pc, r0
   10e6c:	bl	10ca0 <printf@plt>
   10e70:	b	10e84 <main@@Base+0x124>
   10e74:	bl	11ebc <lista_elemento@@Base>
   10e78:	mov	r1, r0
   10e7c:	mov	r0, r7
   10e80:	bl	10ca0 <printf@plt>
   10e84:	mov	r0, r5
   10e88:	bl	11eac <lista_tamanho@@Base>
   10e8c:	mov	r1, r4
   10e90:	cmp	r4, r0
   10e94:	mov	r0, r5
   10e98:	add	r4, r4, #1
   10e9c:	blt	10e74 <main@@Base+0x114>
   10ea0:	ldr	r0, [pc, #236]	; 10f94 <main@@Base+0x234>
   10ea4:	ldr	sl, [pc, #236]	; 10f98 <main@@Base+0x238>
   10ea8:	add	r0, pc, r0
   10eac:	bl	10cf4 <puts@plt>
   10eb0:	mov	r0, r6
   10eb4:	bl	1135c <grafo_apaga@@Base>
   10eb8:	mov	r0, r5
   10ebc:	bl	11e6c <lista_apaga@@Base>
   10ec0:	ldr	r0, [pc, #212]	; 10f9c <main@@Base+0x23c>
   10ec4:	mov	r6, sp
   10ec8:	add	r0, pc, r0
   10ecc:	bl	10cf4 <puts@plt>
   10ed0:	ldr	r1, [pc, #200]	; 10fa0 <main@@Base+0x240>
   10ed4:	ldr	r0, [pc, #200]	; 10fa4 <main@@Base+0x244>
   10ed8:	add	r1, pc, r1
   10edc:	add	r0, pc, r0
   10ee0:	bl	10cb8 <fopen@plt>
   10ee4:	add	r4, sp, #8
   10ee8:	add	sl, pc, sl
   10eec:	mvn	r5, #0
   10ef0:	mov	r8, r0
   10ef4:	bl	11e4c <lista_nova@@Base>
   10ef8:	mov	r7, r0
   10efc:	bl	11e4c <lista_nova@@Base>
   10f00:	mov	r9, r0
   10f04:	b	10f1c <main@@Base+0x1bc>
   10f08:	bl	11f90 <lista_insere@@Base>
   10f0c:	mov	r2, r5
   10f10:	mov	r1, r6
   10f14:	mov	r0, r9
   10f18:	bl	11f90 <lista_insere@@Base>
   10f1c:	mov	r2, r4
   10f20:	mov	r1, sl
   10f24:	mov	r3, r6
   10f28:	mov	r0, r8
   10f2c:	bl	10cac <__isoc99_fscanf@plt>
   10f30:	mov	r2, r5
   10f34:	mov	r1, r4
   10f38:	cmp	r0, #2
   10f3c:	mov	r0, r7
   10f40:	beq	10f08 <main@@Base+0x1a8>
   10f44:	mov	r2, #4
   10f48:	mov	r1, r9
   10f4c:	bl	111fc <simula_acontecimentos@@Base>
   10f50:	cmp	r0, #0
   10f54:	bne	10f64 <main@@Base+0x204>
   10f58:	ldr	r0, [pc, #72]	; 10fa8 <main@@Base+0x248>
   10f5c:	add	r0, pc, r0
   10f60:	bl	10cf4 <puts@plt>
   10f64:	mov	r0, r7
   10f68:	bl	11e6c <lista_apaga@@Base>
   10f6c:	mov	r0, r9
   10f70:	bl	11e6c <lista_apaga@@Base>
   10f74:	mov	r0, r8
   10f78:	bl	10d3c <fclose@plt>
   10f7c:	mov	r0, #0
   10f80:	add	sp, sp, #32
   10f84:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10f88:	andeq	r1, r0, r8, asr #17
   10f8c:	strdeq	r1, [r0], -r4
   10f90:	ldrdeq	r1, [r0], -ip
   10f94:	andeq	r1, r0, r0, ror #15
   10f98:	andeq	r1, r0, r8, asr #15
   10f9c:	andeq	r1, r0, r4, asr #15
   10fa0:	andeq	r1, r0, r8, asr #15
   10fa4:	andeq	r1, r0, r8, asr #15
   10fa8:	andeq	r1, r0, ip, asr r7

00010fac <_start@@Base>:
   10fac:	mov	fp, #0
   10fb0:	mov	lr, #0
   10fb4:	pop	{r1}		; (ldr r1, [sp], #4)
   10fb8:	mov	r2, sp
   10fbc:	push	{r2}		; (str r2, [sp, #-4]!)
   10fc0:	push	{r0}		; (str r0, [sp, #-4]!)
   10fc4:	ldr	ip, [pc, #16]	; 10fdc <_start@@Base+0x30>
   10fc8:	push	{ip}		; (str ip, [sp, #-4]!)
   10fcc:	ldr	r0, [pc, #12]	; 10fe0 <_start@@Base+0x34>
   10fd0:	ldr	r3, [pc, #12]	; 10fe4 <_start@@Base+0x38>
   10fd4:	bl	10d0c <__libc_start_main@plt>
   10fd8:	bl	10d54 <abort@plt>
   10fdc:	andeq	r2, r1, ip, lsl r6
   10fe0:	andeq	r0, r1, r0, ror #26
   10fe4:			; <UNDEFINED> instruction: 0x000125bc
   10fe8:	ldr	r3, [pc, #20]	; 11004 <_start@@Base+0x58>
   10fec:	ldr	r2, [pc, #20]	; 11008 <_start@@Base+0x5c>
   10ff0:	add	r3, pc, r3
   10ff4:	ldr	r2, [r3, r2]
   10ff8:	cmp	r2, #0
   10ffc:	bxeq	lr
   11000:	b	10d18 <__gmon_start__@plt>
   11004:	andeq	r2, r1, r8
   11008:	andeq	r0, r0, ip, asr r0
   1100c:	ldr	r3, [pc, #28]	; 11030 <_start@@Base+0x84>
   11010:	ldr	r0, [pc, #28]	; 11034 <_start@@Base+0x88>
   11014:	sub	r3, r3, r0
   11018:	cmp	r3, #6
   1101c:	bxls	lr
   11020:	ldr	r3, [pc, #16]	; 11038 <_start@@Base+0x8c>
   11024:	cmp	r3, #0
   11028:	bxeq	lr
   1102c:	bx	r3
   11030:	andeq	r3, r2, fp, rrx
   11034:	andeq	r3, r2, r8, rrx
   11038:	andeq	r0, r0, r0
   1103c:	ldr	r1, [pc, #36]	; 11068 <_start@@Base+0xbc>
   11040:	ldr	r0, [pc, #36]	; 1106c <_start@@Base+0xc0>
   11044:	sub	r1, r1, r0
   11048:	asr	r1, r1, #2
   1104c:	add	r1, r1, r1, lsr #31
   11050:	asrs	r1, r1, #1
   11054:	bxeq	lr
   11058:	ldr	r3, [pc, #16]	; 11070 <_start@@Base+0xc4>
   1105c:	cmp	r3, #0
   11060:	bxeq	lr
   11064:	bx	r3
   11068:	andeq	r3, r2, r8, rrx
   1106c:	andeq	r3, r2, r8, rrx
   11070:	andeq	r0, r0, r0
   11074:	push	{r4, lr}
   11078:	ldr	r4, [pc, #24]	; 11098 <_start@@Base+0xec>
   1107c:	ldrb	r3, [r4]
   11080:	cmp	r3, #0
   11084:	popne	{r4, pc}
   11088:	bl	1100c <_start@@Base+0x60>
   1108c:	mov	r3, #1
   11090:	strb	r3, [r4]
   11094:	pop	{r4, pc}
   11098:	andeq	r3, r2, r8, rrx
   1109c:	ldr	r0, [pc, #40]	; 110cc <_start@@Base+0x120>
   110a0:	ldr	r3, [r0]
   110a4:	cmp	r3, #0
   110a8:	bne	110b0 <_start@@Base+0x104>
   110ac:	b	1103c <_start@@Base+0x90>
   110b0:	ldr	r3, [pc, #24]	; 110d0 <_start@@Base+0x124>
   110b4:	cmp	r3, #0
   110b8:	beq	110ac <_start@@Base+0x100>
   110bc:	push	{r4, lr}
   110c0:	blx	r3
   110c4:	pop	{r4, lr}
   110c8:	b	1103c <_start@@Base+0x90>
   110cc:	andeq	r2, r2, r4, lsl pc
   110d0:	andeq	r0, r0, r0

000110d4 <descobre_caminho@@Base>:
   110d4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   110d8:	sub	sp, sp, #28
   110dc:	mov	fp, r3
   110e0:	mov	r5, r0
   110e4:	mov	r4, r1
   110e8:	str	r2, [sp, #12]
   110ec:	str	r0, [sp, #8]
   110f0:	bl	11e4c <lista_nova@@Base>
   110f4:	add	sl, sp, #20
   110f8:	mov	r3, sl
   110fc:	mov	r1, r4
   11100:	mov	r2, fp
   11104:	mov	r6, r0
   11108:	mov	r0, r5
   1110c:	bl	1184c <grafo_bfs@@Base>
   11110:	ldr	r3, [sp, #20]
   11114:	cmp	r3, #0
   11118:	str	r0, [sp, #4]
   1111c:	ble	1116c <descobre_caminho@@Base+0x98>
   11120:	ldr	r8, [pc, #204]	; 111f4 <descobre_caminho@@Base+0x120>
   11124:	ldr	r3, [sp, #4]
   11128:	add	r8, pc, r8
   1112c:	sub	r9, r3, #4
   11130:	mov	r5, #0
   11134:	add	r4, sp, #16
   11138:	mvn	r7, #0
   1113c:	ldr	r2, [r9, #4]!
   11140:	mov	r1, r8
   11144:	mov	r0, r4
   11148:	bl	10d48 <sprintf@plt>
   1114c:	mov	r2, r7
   11150:	mov	r1, r4
   11154:	mov	r0, r6
   11158:	bl	11f90 <lista_insere@@Base>
   1115c:	ldr	r3, [sp, #20]
   11160:	add	r5, r5, #1
   11164:	cmp	r3, r5
   11168:	bgt	1113c <descobre_caminho@@Base+0x68>
   1116c:	mov	r3, sl
   11170:	ldr	r2, [sp, #12]
   11174:	mov	r1, fp
   11178:	ldr	r0, [sp, #8]
   1117c:	bl	1184c <grafo_bfs@@Base>
   11180:	ldr	r3, [sp, #20]
   11184:	cmp	r3, #1
   11188:	mov	sl, r0
   1118c:	ble	111d8 <descobre_caminho@@Base+0x104>
   11190:	ldr	r9, [pc, #96]	; 111f8 <descobre_caminho@@Base+0x124>
   11194:	mov	r7, r0
   11198:	add	r9, pc, r9
   1119c:	mov	r5, #1
   111a0:	add	r4, sp, #16
   111a4:	mvn	r8, #0
   111a8:	ldr	r2, [r7, #4]!
   111ac:	mov	r1, r9
   111b0:	mov	r0, r4
   111b4:	bl	10d48 <sprintf@plt>
   111b8:	mov	r2, r8
   111bc:	mov	r1, r4
   111c0:	mov	r0, r6
   111c4:	bl	11f90 <lista_insere@@Base>
   111c8:	ldr	r3, [sp, #20]
   111cc:	add	r5, r5, #1
   111d0:	cmp	r3, r5
   111d4:	bgt	111a8 <descobre_caminho@@Base+0xd4>
   111d8:	mov	r0, sl
   111dc:	bl	10cc4 <free@plt>
   111e0:	ldr	r0, [sp, #4]
   111e4:	bl	10cc4 <free@plt>
   111e8:	mov	r0, r6
   111ec:	add	sp, sp, #28
   111f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   111f4:	strdeq	r1, [r0], -ip
   111f8:	andeq	r1, r0, ip, lsl #9

000111fc <simula_acontecimentos@@Base>:
   111fc:	cmp	r2, #20
   11200:	ble	1120c <simula_acontecimentos@@Base+0x10>
   11204:	mov	r0, #0
   11208:	bx	lr
   1120c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11210:	mov	r8, r0
   11214:	sub	sp, sp, #28
   11218:	mov	r0, r2
   1121c:	mov	r6, r2
   11220:	mov	r9, r1
   11224:	bl	11a14 <heap_nova@@Base>
   11228:	cmp	r6, #0
   1122c:	movgt	r4, #0
   11230:	movgt	fp, r4
   11234:	addgt	r5, sp, #4
   11238:	movgt	sl, #10
   1123c:	mov	r7, r0
   11240:	ble	112c8 <simula_acontecimentos@@Base+0xcc>
   11244:	mov	r1, r4
   11248:	mov	r0, r8
   1124c:	bl	11ebc <lista_elemento@@Base>
   11250:	mov	r1, r0
   11254:	mov	r0, r5
   11258:	bl	10ce8 <strcpy@plt>
   1125c:	mov	r1, r4
   11260:	mov	r0, r9
   11264:	bl	11ebc <lista_elemento@@Base>
   11268:	mov	r2, sl
   1126c:	mov	r1, fp
   11270:	bl	10c94 <strtol@plt>
   11274:	add	r4, r4, #1
   11278:	mov	r1, r5
   1127c:	mov	r2, r0
   11280:	mov	r0, r7
   11284:	bl	11c58 <heap_insere@@Base>
   11288:	cmp	r6, r4
   1128c:	bne	11244 <simula_acontecimentos@@Base+0x48>
   11290:	ldr	r8, [pc, #68]	; 112dc <simula_acontecimentos@@Base+0xe0>
   11294:	mov	r6, #0
   11298:	add	r8, pc, r8
   1129c:	mov	r5, r6
   112a0:	ldr	r3, [r7, #8]
   112a4:	add	r5, r5, #1
   112a8:	mov	r1, r5
   112ac:	ldr	r3, [r3, r6]
   112b0:	mov	r0, r8
   112b4:	add	r6, r6, #4
   112b8:	ldr	r2, [r3, #4]
   112bc:	bl	10ca0 <printf@plt>
   112c0:	cmp	r4, r5
   112c4:	bne	112a0 <simula_acontecimentos@@Base+0xa4>
   112c8:	mov	r0, r7
   112cc:	bl	11a6c <heap_apaga@@Base>
   112d0:	mov	r0, #1
   112d4:	add	sp, sp, #28
   112d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   112dc:	muleq	r0, r0, r3

000112e0 <cria_no@@Base>:
   112e0:	push	{r4, lr}
   112e4:	mov	r4, r0
   112e8:	mov	r0, #8
   112ec:	bl	10d00 <malloc@plt>
   112f0:	cmp	r0, #0
   112f4:	movne	r3, #0
   112f8:	strne	r4, [r0]
   112fc:	strne	r3, [r0, #4]
   11300:	pop	{r4, pc}

00011304 <grafo_novo@@Base>:
   11304:	push	{r4, r5, r6, lr}
   11308:	mov	r5, r0
   1130c:	mov	r0, #12
   11310:	mov	r6, r1
   11314:	bl	10d00 <malloc@plt>
   11318:	subs	r4, r0, #0
   1131c:	beq	11344 <grafo_novo@@Base+0x40>
   11320:	str	r5, [r4, #4]
   11324:	mov	r0, r5
   11328:	str	r6, [r4]
   1132c:	mov	r1, #8
   11330:	bl	10c70 <calloc@plt>
   11334:	cmp	r0, #0
   11338:	mov	r5, r0
   1133c:	str	r0, [r4, #8]
   11340:	beq	1134c <grafo_novo@@Base+0x48>
   11344:	mov	r0, r4
   11348:	pop	{r4, r5, r6, pc}
   1134c:	mov	r0, r4
   11350:	bl	10cc4 <free@plt>
   11354:	mov	r4, r5
   11358:	b	11344 <grafo_novo@@Base+0x40>

0001135c <grafo_apaga@@Base>:
   1135c:	push	{r4, r5, r6, lr}
   11360:	subs	r5, r0, #0
   11364:	popeq	{r4, r5, r6, pc}
   11368:	ldr	r2, [r5, #8]
   1136c:	cmp	r2, #0
   11370:	beq	113d0 <grafo_apaga@@Base+0x74>
   11374:	ldr	r1, [r5, #4]
   11378:	cmp	r1, #0
   1137c:	movgt	r6, #0
   11380:	ble	113c8 <grafo_apaga@@Base+0x6c>
   11384:	lsl	r4, r6, #3
   11388:	add	r3, r2, r4
   1138c:	ldr	r0, [r3, #4]
   11390:	cmp	r0, #0
   11394:	beq	113bc <grafo_apaga@@Base+0x60>
   11398:	ldr	r2, [r0, #4]
   1139c:	str	r2, [r3, #4]
   113a0:	bl	10cc4 <free@plt>
   113a4:	ldr	r2, [r5, #8]
   113a8:	add	r3, r2, r4
   113ac:	ldr	r0, [r3, #4]
   113b0:	cmp	r0, #0
   113b4:	bne	11398 <grafo_apaga@@Base+0x3c>
   113b8:	ldr	r1, [r5, #4]
   113bc:	add	r6, r6, #1
   113c0:	cmp	r1, r6
   113c4:	bgt	11384 <grafo_apaga@@Base+0x28>
   113c8:	mov	r0, r2
   113cc:	bl	10cc4 <free@plt>
   113d0:	mov	r0, r5
   113d4:	pop	{r4, r5, r6, lr}
   113d8:	b	10cc4 <free@plt>

000113dc <grafo_remove@@Base>:
   113dc:	push	{r4, r5, r6, lr}
   113e0:	subs	r6, r0, #0
   113e4:	popeq	{r4, r5, r6, pc}
   113e8:	ldr	r3, [r6, #8]
   113ec:	add	r3, r3, r1, lsl #3
   113f0:	ldr	ip, [r3, #4]
   113f4:	cmp	ip, #0
   113f8:	popeq	{r4, r5, r6, pc}
   113fc:	mov	r4, r2
   11400:	ldr	r2, [ip]
   11404:	mov	r5, r1
   11408:	cmp	r2, r4
   1140c:	beq	114d8 <grafo_remove@@Base+0xfc>
   11410:	ldr	r3, [ip, #4]
   11414:	cmp	r3, #0
   11418:	beq	11448 <grafo_remove@@Base+0x6c>
   1141c:	ldr	r2, [r3]
   11420:	cmp	r4, r2
   11424:	bne	1143c <grafo_remove@@Base+0x60>
   11428:	b	114a8 <grafo_remove@@Base+0xcc>
   1142c:	ldr	ip, [r0]
   11430:	cmp	r4, ip
   11434:	beq	114b0 <grafo_remove@@Base+0xd4>
   11438:	mov	r3, r0
   1143c:	ldr	r0, [r3, #4]
   11440:	cmp	r0, #0
   11444:	bne	1142c <grafo_remove@@Base+0x50>
   11448:	ldr	r3, [r6]
   1144c:	cmp	r3, #0
   11450:	popne	{r4, r5, r6, pc}
   11454:	ldr	r3, [r6, #8]
   11458:	add	r4, r3, r4, lsl #3
   1145c:	ldr	r2, [r4, #4]
   11460:	ldr	r3, [r2]
   11464:	cmp	r5, r3
   11468:	ldr	r3, [r2, #4]
   1146c:	beq	114ec <grafo_remove@@Base+0x110>
   11470:	cmp	r3, #0
   11474:	popeq	{r4, r5, r6, pc}
   11478:	ldr	r1, [r3]
   1147c:	cmp	r5, r1
   11480:	bne	11498 <grafo_remove@@Base+0xbc>
   11484:	b	114c0 <grafo_remove@@Base+0xe4>
   11488:	ldr	r2, [r0]
   1148c:	cmp	r5, r2
   11490:	beq	114c8 <grafo_remove@@Base+0xec>
   11494:	mov	r3, r0
   11498:	ldr	r0, [r3, #4]
   1149c:	cmp	r0, #0
   114a0:	bne	11488 <grafo_remove@@Base+0xac>
   114a4:	pop	{r4, r5, r6, pc}
   114a8:	mov	r0, r3
   114ac:	mov	r3, ip
   114b0:	ldr	r2, [r0, #4]
   114b4:	str	r2, [r3, #4]
   114b8:	bl	10cc4 <free@plt>
   114bc:	b	11448 <grafo_remove@@Base+0x6c>
   114c0:	mov	r0, r3
   114c4:	mov	r3, r2
   114c8:	ldr	r2, [r0, #4]
   114cc:	pop	{r4, r5, r6, lr}
   114d0:	str	r2, [r3, #4]
   114d4:	b	10cc4 <free@plt>
   114d8:	ldr	r2, [ip, #4]
   114dc:	mov	r0, ip
   114e0:	str	r2, [r3, #4]
   114e4:	bl	10cc4 <free@plt>
   114e8:	b	11448 <grafo_remove@@Base+0x6c>
   114ec:	str	r3, [r4, #4]
   114f0:	mov	r0, r2
   114f4:	pop	{r4, r5, r6, lr}
   114f8:	b	10cc4 <free@plt>

000114fc <grafo_existe@@Base>:
   114fc:	cmp	r0, #0
   11500:	bxeq	lr
   11504:	ldr	r3, [r0, #8]
   11508:	add	r1, r3, r1, lsl #3
   1150c:	ldr	r0, [r1, #4]
   11510:	cmp	r0, #0
   11514:	bxeq	lr
   11518:	ldr	r3, [r0]
   1151c:	cmp	r2, r3
   11520:	bne	11534 <grafo_existe@@Base+0x38>
   11524:	b	11544 <grafo_existe@@Base+0x48>
   11528:	ldr	r3, [r0]
   1152c:	cmp	r3, r2
   11530:	beq	11544 <grafo_existe@@Base+0x48>
   11534:	ldr	r0, [r0, #4]
   11538:	cmp	r0, #0
   1153c:	bne	11528 <grafo_existe@@Base+0x2c>
   11540:	bx	lr
   11544:	mov	r0, #1
   11548:	bx	lr

0001154c <grafo_adiciona@@Base>:
   1154c:	subs	r3, r0, #0
   11550:	bxeq	lr
   11554:	push	{r4, r5, r6, lr}
   11558:	mov	r4, r1
   1155c:	mov	r6, r2
   11560:	mov	r5, r3
   11564:	bl	114fc <grafo_existe@@Base>
   11568:	cmp	r0, #0
   1156c:	popne	{r4, r5, r6, pc}
   11570:	mov	r0, r6
   11574:	bl	112e0 <cria_no@@Base>
   11578:	ldr	r3, [r5, #8]
   1157c:	ldr	lr, [r5]
   11580:	add	r1, r3, r4, lsl #3
   11584:	ldr	r2, [r3, r4, lsl #3]
   11588:	ldr	ip, [r1, #4]
   1158c:	cmp	lr, #0
   11590:	add	r2, r2, #1
   11594:	str	ip, [r0, #4]
   11598:	str	r0, [r1, #4]
   1159c:	str	r2, [r3, r4, lsl #3]
   115a0:	popne	{r4, r5, r6, pc}
   115a4:	mov	r0, r4
   115a8:	bl	112e0 <cria_no@@Base>
   115ac:	ldr	r3, [r5, #8]
   115b0:	add	r1, r3, r6, lsl #3
   115b4:	ldr	r2, [r3, r6, lsl #3]
   115b8:	ldr	ip, [r1, #4]
   115bc:	add	r2, r2, #1
   115c0:	str	ip, [r0, #4]
   115c4:	str	r0, [r1, #4]
   115c8:	str	r2, [r3, r6, lsl #3]
   115cc:	pop	{r4, r5, r6, pc}

000115d0 <grafo_imprime@@Base>:
   115d0:	ldr	r3, [r0, #4]
   115d4:	cmp	r3, #0
   115d8:	bxle	lr
   115dc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   115e0:	mov	r7, r0
   115e4:	ldr	r9, [pc, #132]	; 11670 <grafo_imprime@@Base+0xa0>
   115e8:	ldr	sl, [pc, #132]	; 11674 <grafo_imprime@@Base+0xa4>
   115ec:	ldr	r5, [pc, #132]	; 11678 <grafo_imprime@@Base+0xa8>
   115f0:	add	r9, pc, r9
   115f4:	add	sl, pc, sl
   115f8:	add	r5, pc, r5
   115fc:	mov	r6, #0
   11600:	mov	r8, #10
   11604:	ldr	r3, [r7, #8]
   11608:	mov	r1, r6
   1160c:	add	r3, r3, r6, lsl #3
   11610:	mov	r0, r9
   11614:	ldr	r4, [r3, #4]
   11618:	bl	10ca0 <printf@plt>
   1161c:	cmp	r4, #0
   11620:	beq	11654 <grafo_imprime@@Base+0x84>
   11624:	ldr	r1, [r4]
   11628:	mov	r0, sl
   1162c:	bl	10ca0 <printf@plt>
   11630:	ldr	r4, [r4, #4]
   11634:	cmp	r4, #0
   11638:	beq	11654 <grafo_imprime@@Base+0x84>
   1163c:	ldr	r1, [r4]
   11640:	mov	r0, r5
   11644:	bl	10ca0 <printf@plt>
   11648:	ldr	r4, [r4, #4]
   1164c:	cmp	r4, #0
   11650:	bne	1163c <grafo_imprime@@Base+0x6c>
   11654:	mov	r0, r8
   11658:	bl	10d30 <putchar@plt>
   1165c:	ldr	r3, [r7, #4]
   11660:	add	r6, r6, #1
   11664:	cmp	r3, r6
   11668:	bgt	11604 <grafo_imprime@@Base+0x34>
   1166c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11670:	andeq	r1, r0, r4, ror #1
   11674:	andeq	r1, r0, r0, lsr r0
   11678:	andeq	r1, r0, r4, ror #1

0001167c <dfs_helper@@Base>:
   1167c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11680:	sub	sp, sp, #8
   11684:	ldr	r8, [sp, #40]	; 0x28
   11688:	ldr	sl, [r8, r1, lsl #2]
   1168c:	cmp	sl, #0
   11690:	movne	sl, #0
   11694:	bne	11718 <dfs_helper@@Base+0x9c>
   11698:	cmp	r1, r2
   1169c:	str	r3, [r8, r1, lsl #2]
   116a0:	moveq	sl, r3
   116a4:	beq	11718 <dfs_helper@@Base+0x9c>
   116a8:	mov	r9, r2
   116ac:	ldr	r2, [r0, #4]
   116b0:	mov	r5, r0
   116b4:	cmp	r2, #0
   116b8:	mov	r6, r1
   116bc:	addgt	r7, r3, #1
   116c0:	movgt	r4, sl
   116c4:	bgt	116dc <dfs_helper@@Base+0x60>
   116c8:	b	11724 <dfs_helper@@Base+0xa8>
   116cc:	ldr	r3, [r5, #4]
   116d0:	add	r4, r4, #1
   116d4:	cmp	r3, r4
   116d8:	ble	11724 <dfs_helper@@Base+0xa8>
   116dc:	mov	r2, r4
   116e0:	mov	r1, r6
   116e4:	mov	r0, r5
   116e8:	bl	114fc <grafo_existe@@Base>
   116ec:	cmp	r0, #0
   116f0:	beq	116cc <dfs_helper@@Base+0x50>
   116f4:	str	r8, [sp]
   116f8:	mov	r3, r7
   116fc:	mov	r2, r9
   11700:	mov	r1, r4
   11704:	mov	r0, r5
   11708:	bl	1167c <dfs_helper@@Base>
   1170c:	cmp	r0, #0
   11710:	beq	116cc <dfs_helper@@Base+0x50>
   11714:	mov	sl, r0
   11718:	mov	r0, sl
   1171c:	add	sp, sp, #8
   11720:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11724:	mov	r3, #0
   11728:	mov	r0, sl
   1172c:	str	r3, [r8, r6, lsl #2]
   11730:	add	sp, sp, #8
   11734:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

00011738 <grafo_dfs@@Base>:
   11738:	push	{r4, r5, r6, r7, r8, lr}
   1173c:	subs	r4, r0, #0
   11740:	sub	sp, sp, #8
   11744:	beq	11844 <grafo_dfs@@Base+0x10c>
   11748:	mov	r7, r1
   1174c:	ldr	r0, [r4, #4]
   11750:	mov	r1, #4
   11754:	mov	r6, r3
   11758:	mov	r8, r2
   1175c:	bl	10c70 <calloc@plt>
   11760:	mov	r1, r7
   11764:	mov	r2, r8
   11768:	mov	r3, #1
   1176c:	str	r0, [sp]
   11770:	mov	r5, r0
   11774:	mov	r0, r4
   11778:	bl	1167c <dfs_helper@@Base>
   1177c:	subs	r7, r0, #0
   11780:	beq	11828 <grafo_dfs@@Base+0xf0>
   11784:	mov	r1, #4
   11788:	bl	10c70 <calloc@plt>
   1178c:	cmp	r7, #0
   11790:	mov	r8, r0
   11794:	ble	117f4 <grafo_dfs@@Base+0xbc>
   11798:	ldr	lr, [r4, #4]
   1179c:	mov	ip, #1
   117a0:	mov	r4, r0
   117a4:	cmp	lr, #0
   117a8:	movle	r3, ip
   117ac:	ble	117e4 <grafo_dfs@@Base+0xac>
   117b0:	ldr	r2, [r5]
   117b4:	mov	r3, ip
   117b8:	cmp	r2, ip
   117bc:	movne	r1, r5
   117c0:	movne	r2, #0
   117c4:	bne	117d8 <grafo_dfs@@Base+0xa0>
   117c8:	b	1180c <grafo_dfs@@Base+0xd4>
   117cc:	ldr	r0, [r1, #4]!
   117d0:	cmp	r0, ip
   117d4:	beq	11810 <grafo_dfs@@Base+0xd8>
   117d8:	add	r2, r2, #1
   117dc:	cmp	r2, lr
   117e0:	bne	117cc <grafo_dfs@@Base+0x94>
   117e4:	cmp	r3, r7
   117e8:	add	ip, ip, #1
   117ec:	add	r4, r4, #4
   117f0:	blt	117a4 <grafo_dfs@@Base+0x6c>
   117f4:	str	r7, [r6]
   117f8:	mov	r0, r5
   117fc:	bl	10cc4 <free@plt>
   11800:	mov	r0, r8
   11804:	add	sp, sp, #8
   11808:	pop	{r4, r5, r6, r7, r8, pc}
   1180c:	mov	r2, #0
   11810:	cmp	r3, r7
   11814:	str	r2, [r4]
   11818:	add	ip, ip, #1
   1181c:	add	r4, r4, #4
   11820:	blt	117a4 <grafo_dfs@@Base+0x6c>
   11824:	b	117f4 <grafo_dfs@@Base+0xbc>
   11828:	mov	r0, r5
   1182c:	bl	10cc4 <free@plt>
   11830:	mov	r8, r7
   11834:	mov	r0, r8
   11838:	str	r7, [r6]
   1183c:	add	sp, sp, #8
   11840:	pop	{r4, r5, r6, r7, r8, pc}
   11844:	mov	r8, r4
   11848:	b	11800 <grafo_dfs@@Base+0xc8>

0001184c <grafo_bfs@@Base>:
   1184c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11850:	sub	sp, sp, #28
   11854:	subs	r5, r0, #0
   11858:	str	r2, [sp, #12]
   1185c:	str	r3, [sp, #20]
   11860:	beq	11a0c <grafo_bfs@@Base+0x1c0>
   11864:	ldr	r4, [r5, #4]
   11868:	mov	r6, r1
   1186c:	mov	r0, r4
   11870:	mov	r1, #4
   11874:	bl	10c70 <calloc@plt>
   11878:	mov	r1, #4
   1187c:	mov	r9, r0
   11880:	mov	r0, r4
   11884:	bl	10c70 <calloc@plt>
   11888:	cmp	r4, #0
   1188c:	movgt	r3, r9
   11890:	addgt	r1, r9, r4, lsl #2
   11894:	mvngt	r2, #0
   11898:	str	r0, [sp, #8]
   1189c:	ble	118ac <grafo_bfs@@Base+0x60>
   118a0:	str	r2, [r3], #4
   118a4:	cmp	r1, r3
   118a8:	bne	118a0 <grafo_bfs@@Base+0x54>
   118ac:	ldr	r3, [sp, #8]
   118b0:	mov	r7, #1
   118b4:	mov	r8, #0
   118b8:	mov	fp, r3
   118bc:	str	r6, [r9, r6, lsl #2]
   118c0:	str	r6, [r3]
   118c4:	str	r9, [sp, #4]
   118c8:	add	r0, r8, #1
   118cc:	mov	r1, r4
   118d0:	bl	1258c <lista_inverte@@Base+0x274>
   118d4:	cmp	r4, #0
   118d8:	ldr	sl, [fp, r8, lsl #2]
   118dc:	mov	r8, r1
   118e0:	ble	11954 <grafo_bfs@@Base+0x108>
   118e4:	ldr	r6, [sp, #4]
   118e8:	mov	r4, #0
   118ec:	b	11904 <grafo_bfs@@Base+0xb8>
   118f0:	ldr	r9, [r5, #4]
   118f4:	add	r4, r4, #1
   118f8:	cmp	r4, r9
   118fc:	add	r6, r6, #4
   11900:	bge	11954 <grafo_bfs@@Base+0x108>
   11904:	mov	r2, r4
   11908:	mov	r1, sl
   1190c:	mov	r0, r5
   11910:	bl	114fc <grafo_existe@@Base>
   11914:	cmp	r0, #0
   11918:	beq	118f0 <grafo_bfs@@Base+0xa4>
   1191c:	ldr	r3, [r6]
   11920:	ldr	r9, [r5, #4]
   11924:	cmn	r3, #1
   11928:	bne	118f4 <grafo_bfs@@Base+0xa8>
   1192c:	str	r4, [fp, r7, lsl #2]
   11930:	add	r0, r7, #1
   11934:	str	sl, [r6]
   11938:	mov	r1, r9
   1193c:	bl	1258c <lista_inverte@@Base+0x274>
   11940:	add	r4, r4, #1
   11944:	cmp	r4, r9
   11948:	add	r6, r6, #4
   1194c:	mov	r7, r1
   11950:	blt	11904 <grafo_bfs@@Base+0xb8>
   11954:	cmp	r8, r7
   11958:	ldrne	r4, [r5, #4]
   1195c:	bne	118c8 <grafo_bfs@@Base+0x7c>
   11960:	ldr	r9, [sp, #4]
   11964:	ldr	r3, [sp, #12]
   11968:	ldr	r5, [r9, r3, lsl #2]
   1196c:	cmp	r5, #0
   11970:	movlt	r6, #0
   11974:	blt	119d0 <grafo_bfs@@Base+0x184>
   11978:	cmp	r3, r5
   1197c:	beq	119f4 <grafo_bfs@@Base+0x1a8>
   11980:	mov	r3, r5
   11984:	mov	r6, #1
   11988:	ldr	r2, [r9, r3, lsl #2]
   1198c:	add	r6, r6, #1
   11990:	cmp	r2, r3
   11994:	mov	r3, r2
   11998:	bne	11988 <grafo_bfs@@Base+0x13c>
   1199c:	lsl	r4, r6, #2
   119a0:	mov	r0, r4
   119a4:	bl	10d00 <malloc@plt>
   119a8:	str	r0, [sp, #16]
   119ac:	ldr	r1, [sp, #16]
   119b0:	ldr	r2, [sp, #12]
   119b4:	add	r3, r1, r4
   119b8:	b	119c4 <grafo_bfs@@Base+0x178>
   119bc:	mov	r2, r5
   119c0:	ldr	r5, [r9, r5, lsl #2]
   119c4:	str	r2, [r3, #-4]!
   119c8:	cmp	r3, r1
   119cc:	bne	119bc <grafo_bfs@@Base+0x170>
   119d0:	ldr	r0, [sp, #8]
   119d4:	bl	10cc4 <free@plt>
   119d8:	mov	r0, r9
   119dc:	bl	10cc4 <free@plt>
   119e0:	ldr	r3, [sp, #20]
   119e4:	str	r6, [r3]
   119e8:	ldr	r0, [sp, #16]
   119ec:	add	sp, sp, #28
   119f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   119f4:	mov	r0, #4
   119f8:	bl	10d00 <malloc@plt>
   119fc:	mov	r6, #1
   11a00:	mov	r4, #4
   11a04:	str	r0, [sp, #16]
   11a08:	b	119ac <grafo_bfs@@Base+0x160>
   11a0c:	str	r5, [sp, #16]
   11a10:	b	119e8 <grafo_bfs@@Base+0x19c>

00011a14 <heap_nova@@Base>:
   11a14:	push	{r4, r5, r6, lr}
   11a18:	mov	r5, r0
   11a1c:	mov	r0, #12
   11a20:	bl	10d00 <malloc@plt>
   11a24:	subs	r4, r0, #0
   11a28:	beq	11a54 <heap_nova@@Base+0x40>
   11a2c:	mov	r3, #0
   11a30:	str	r5, [r4, #4]
   11a34:	mov	r0, r5
   11a38:	str	r3, [r4]
   11a3c:	mov	r1, #4
   11a40:	bl	10c70 <calloc@plt>
   11a44:	cmp	r0, #0
   11a48:	mov	r5, r0
   11a4c:	str	r0, [r4, #8]
   11a50:	beq	11a5c <heap_nova@@Base+0x48>
   11a54:	mov	r0, r4
   11a58:	pop	{r4, r5, r6, pc}
   11a5c:	mov	r0, r4
   11a60:	bl	10cc4 <free@plt>
   11a64:	mov	r4, r5
   11a68:	b	11a54 <heap_nova@@Base+0x40>

00011a6c <heap_apaga@@Base>:
   11a6c:	push	{r4, r5, r6, lr}
   11a70:	subs	r5, r0, #0
   11a74:	popeq	{r4, r5, r6, pc}
   11a78:	ldr	r3, [r5]
   11a7c:	cmp	r3, #0
   11a80:	ldrle	r0, [r5, #8]
   11a84:	ble	11ac4 <heap_apaga@@Base+0x58>
   11a88:	mov	r4, #0
   11a8c:	ldr	r0, [r5, #8]
   11a90:	mov	r6, r4
   11a94:	ldr	r3, [r0, r4, lsl #2]
   11a98:	ldr	r0, [r3, #4]
   11a9c:	bl	10cc4 <free@plt>
   11aa0:	ldr	r3, [r5, #8]
   11aa4:	ldr	r0, [r3, r4, lsl #2]
   11aa8:	bl	10cc4 <free@plt>
   11aac:	ldr	r0, [r5, #8]
   11ab0:	ldr	r3, [r5]
   11ab4:	str	r6, [r0, r4, lsl #2]
   11ab8:	add	r4, r4, #1
   11abc:	cmp	r3, r4
   11ac0:	bgt	11a94 <heap_apaga@@Base+0x28>
   11ac4:	bl	10cc4 <free@plt>
   11ac8:	mov	r0, r5
   11acc:	pop	{r4, r5, r6, lr}
   11ad0:	b	10cc4 <free@plt>

00011ad4 <elemento_cria@@Base>:
   11ad4:	push	{r4, r5, r6, r7, r8, lr}
   11ad8:	mov	r8, r0
   11adc:	mov	r0, #8
   11ae0:	mov	r5, r1
   11ae4:	bl	10d00 <malloc@plt>
   11ae8:	subs	r4, r0, #0
   11aec:	beq	11b28 <elemento_cria@@Base+0x54>
   11af0:	mov	r0, r5
   11af4:	bl	10d24 <strlen@plt>
   11af8:	mov	r1, #1
   11afc:	add	r7, r0, r1
   11b00:	mov	r0, r7
   11b04:	bl	10c70 <calloc@plt>
   11b08:	cmp	r0, #0
   11b0c:	mov	r6, r0
   11b10:	str	r0, [r4, #4]
   11b14:	beq	11b30 <elemento_cria@@Base+0x5c>
   11b18:	mov	r2, r7
   11b1c:	mov	r1, r5
   11b20:	bl	10cd0 <memcpy@plt>
   11b24:	str	r8, [r4]
   11b28:	mov	r0, r4
   11b2c:	pop	{r4, r5, r6, r7, r8, pc}
   11b30:	mov	r0, r4
   11b34:	bl	10cc4 <free@plt>
   11b38:	mov	r4, r6
   11b3c:	b	11b28 <elemento_cria@@Base+0x54>

00011b40 <mostraHeap@@Base>:
   11b40:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11b44:	mov	r8, r0
   11b48:	ldr	r6, [pc, #208]	; 11c20 <mostraHeap@@Base+0xe0>
   11b4c:	ldr	r9, [pc, #208]	; 11c24 <mostraHeap@@Base+0xe4>
   11b50:	add	r6, pc, r6
   11b54:	add	r9, pc, r9
   11b58:	mov	r7, r1
   11b5c:	ldr	r3, [r8]
   11b60:	cmp	r3, r7
   11b64:	bgt	11b74 <mostraHeap@@Base+0x34>
   11b68:	mov	r0, #10
   11b6c:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   11b70:	b	10d30 <putchar@plt>
   11b74:	cmp	r7, #0
   11b78:	ble	11be0 <mostraHeap@@Base+0xa0>
   11b7c:	mov	r4, r7
   11b80:	mov	r5, #0
   11b84:	sub	r4, r4, #1
   11b88:	add	r5, r5, #1
   11b8c:	asrs	r4, r4, #1
   11b90:	bne	11b84 <mostraHeap@@Base+0x44>
   11b94:	lsl	r1, r7, #1
   11b98:	add	r1, r1, #1
   11b9c:	mov	r0, r8
   11ba0:	bl	11b40 <mostraHeap@@Base>
   11ba4:	add	r5, r5, r5, lsl #1
   11ba8:	add	r4, r4, #1
   11bac:	mov	r0, r6
   11bb0:	bl	10ca0 <printf@plt>
   11bb4:	cmp	r4, r5
   11bb8:	bne	11ba8 <mostraHeap@@Base+0x68>
   11bbc:	ldr	r3, [r8, #8]
   11bc0:	mov	r0, r9
   11bc4:	ldr	r3, [r3, r7, lsl #2]
   11bc8:	add	r7, r7, #1
   11bcc:	ldr	r2, [r3]
   11bd0:	ldr	r1, [r3, #4]
   11bd4:	bl	10ca0 <printf@plt>
   11bd8:	lsl	r7, r7, #1
   11bdc:	b	11b5c <mostraHeap@@Base+0x1c>
   11be0:	lsl	r1, r7, #1
   11be4:	mov	r0, r8
   11be8:	add	r1, r1, #1
   11bec:	bl	11b40 <mostraHeap@@Base>
   11bf0:	ldr	r3, [r8, #8]
   11bf4:	ldr	r0, [pc, #44]	; 11c28 <mostraHeap@@Base+0xe8>
   11bf8:	ldr	r3, [r3, r7, lsl #2]
   11bfc:	add	r0, pc, r0
   11c00:	ldr	r1, [r3, #4]
   11c04:	ldr	r2, [r3]
   11c08:	bl	10ca0 <printf@plt>
   11c0c:	add	r1, r7, #1
   11c10:	mov	r0, r8
   11c14:	lsl	r1, r1, #1
   11c18:	bl	11b40 <mostraHeap@@Base>
   11c1c:	b	11b68 <mostraHeap@@Base+0x28>
   11c20:	muleq	r0, r4, fp
   11c24:	muleq	r0, r8, fp
   11c28:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>

00011c2c <menor_que@@Base>:
   11c2c:	cmp	r1, #0
   11c30:	cmpne	r0, #0
   11c34:	beq	11c50 <menor_que@@Base+0x24>
   11c38:	ldr	r0, [r0]
   11c3c:	ldr	r3, [r1]
   11c40:	cmp	r0, r3
   11c44:	movge	r0, #0
   11c48:	movlt	r0, #1
   11c4c:	bx	lr
   11c50:	mov	r0, #0
   11c54:	bx	lr

00011c58 <heap_insere@@Base>:
   11c58:	ldr	ip, [r0]
   11c5c:	ldr	r3, [r0, #4]
   11c60:	cmp	ip, r3
   11c64:	blt	11c70 <heap_insere@@Base+0x18>
   11c68:	mov	r0, #0
   11c6c:	bx	lr
   11c70:	push	{r4, r5, r6, lr}
   11c74:	mov	r6, r0
   11c78:	mov	r0, r2
   11c7c:	bl	11ad4 <elemento_cria@@Base>
   11c80:	cmp	r0, #0
   11c84:	beq	11cf8 <heap_insere@@Base+0xa0>
   11c88:	ldr	r4, [r6]
   11c8c:	ldr	r3, [r6, #8]
   11c90:	add	r2, r4, #1
   11c94:	cmp	r4, #0
   11c98:	str	r0, [r3, r4, lsl #2]
   11c9c:	str	r2, [r6]
   11ca0:	beq	11cf0 <heap_insere@@Base+0x98>
   11ca4:	lsl	r2, r4, #2
   11ca8:	b	11ccc <heap_insere@@Base+0x74>
   11cac:	ldr	r3, [r6, #8]
   11cb0:	cmp	r4, #0
   11cb4:	ldr	r1, [r3, r4, lsl #2]
   11cb8:	ldr	r0, [r3, r5]
   11cbc:	str	r0, [r3, r4, lsl #2]
   11cc0:	str	r1, [r3, r5]
   11cc4:	beq	11cf0 <heap_insere@@Base+0x98>
   11cc8:	ldr	r0, [r3, r2]
   11ccc:	sub	r4, r4, #1
   11cd0:	mov	r5, r2
   11cd4:	add	r4, r4, r4, lsr #31
   11cd8:	asr	r4, r4, #1
   11cdc:	ldr	r1, [r3, r4, lsl #2]
   11ce0:	bl	11c2c <menor_que@@Base>
   11ce4:	lsl	r2, r4, #2
   11ce8:	cmp	r0, #0
   11cec:	bne	11cac <heap_insere@@Base+0x54>
   11cf0:	mov	r0, #1
   11cf4:	pop	{r4, r5, r6, pc}
   11cf8:	mov	r0, #0
   11cfc:	pop	{r4, r5, r6, pc}

00011d00 <heap_remove@@Base>:
   11d00:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11d04:	subs	r8, r0, #0
   11d08:	beq	11dd8 <heap_remove@@Base+0xd8>
   11d0c:	ldr	r3, [r8]
   11d10:	cmp	r3, #0
   11d14:	ble	11dd8 <heap_remove@@Base+0xd8>
   11d18:	ldr	r3, [r8, #8]
   11d1c:	mov	r4, #0
   11d20:	ldr	r3, [r3]
   11d24:	mov	r0, r3
   11d28:	ldr	r7, [r3, #4]
   11d2c:	bl	10cc4 <free@plt>
   11d30:	ldr	r2, [r8]
   11d34:	ldr	r3, [r8, #8]
   11d38:	sub	r2, r2, #1
   11d3c:	cmp	r2, #1
   11d40:	ldr	r1, [r3, r2, lsl #2]
   11d44:	str	r2, [r8]
   11d48:	str	r1, [r3]
   11d4c:	str	r4, [r3, r2, lsl #2]
   11d50:	ble	11ddc <heap_remove@@Base+0xdc>
   11d54:	mov	r5, #1
   11d58:	b	11d98 <heap_remove@@Base+0x98>
   11d5c:	ldr	r1, [r3, r9, lsl #2]
   11d60:	ldr	r0, [r3, r4, lsl #2]
   11d64:	bl	11c2c <menor_que@@Base>
   11d68:	lsl	r5, r4, #1
   11d6c:	add	r5, r5, #1
   11d70:	cmp	r0, #0
   11d74:	beq	11ddc <heap_remove@@Base+0xdc>
   11d78:	ldr	r3, [r8, #8]
   11d7c:	ldr	r2, [r8]
   11d80:	ldr	r1, [r3, r4, lsl #2]
   11d84:	ldr	r0, [r3, r9, lsl #2]
   11d88:	cmp	r5, r2
   11d8c:	str	r0, [r3, r4, lsl #2]
   11d90:	str	r1, [r3, r9, lsl #2]
   11d94:	bge	11ddc <heap_remove@@Base+0xdc>
   11d98:	add	r1, r4, #1
   11d9c:	mov	r9, r4
   11da0:	lsl	r6, r1, #1
   11da4:	cmp	r6, r2
   11da8:	movge	r4, r5
   11dac:	bge	11d5c <heap_remove@@Base+0x5c>
   11db0:	add	r2, r3, r1, lsl #3
   11db4:	ldr	r0, [r3, r1, lsl #3]
   11db8:	ldr	r1, [r2, #-4]
   11dbc:	bl	11c2c <menor_que@@Base>
   11dc0:	mov	r9, r4
   11dc4:	ldr	r3, [r8, #8]
   11dc8:	mov	r4, r6
   11dcc:	cmp	r0, #0
   11dd0:	moveq	r4, r5
   11dd4:	b	11d5c <heap_remove@@Base+0x5c>
   11dd8:	mov	r7, #0
   11ddc:	mov	r0, r7
   11de0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

00011de4 <novo_str@@Base>:
   11de4:	push	{r4, r5, r6, r7, r8, lr}
   11de8:	mov	r5, r0
   11dec:	mov	r0, #8
   11df0:	bl	10d00 <malloc@plt>
   11df4:	subs	r4, r0, #0
   11df8:	beq	11e34 <novo_str@@Base+0x50>
   11dfc:	mov	r0, r5
   11e00:	bl	10d24 <strlen@plt>
   11e04:	add	r7, r0, #1
   11e08:	mov	r0, r7
   11e0c:	bl	10d00 <malloc@plt>
   11e10:	cmp	r0, #0
   11e14:	mov	r6, r0
   11e18:	str	r0, [r4]
   11e1c:	beq	11e3c <novo_str@@Base+0x58>
   11e20:	mov	r2, r7
   11e24:	mov	r1, r5
   11e28:	bl	10cd0 <memcpy@plt>
   11e2c:	mov	r3, #0
   11e30:	str	r3, [r4, #4]
   11e34:	mov	r0, r4
   11e38:	pop	{r4, r5, r6, r7, r8, pc}
   11e3c:	mov	r0, r4
   11e40:	bl	10cc4 <free@plt>
   11e44:	mov	r4, r6
   11e48:	b	11e34 <novo_str@@Base+0x50>

00011e4c <lista_nova@@Base>:
   11e4c:	push	{r4, lr}
   11e50:	mov	r0, #8
   11e54:	bl	10d00 <malloc@plt>
   11e58:	cmp	r0, #0
   11e5c:	movne	r3, #0
   11e60:	strne	r3, [r0]
   11e64:	strne	r3, [r0, #4]
   11e68:	pop	{r4, pc}

00011e6c <lista_apaga@@Base>:
   11e6c:	push	{r4, r5, r6, lr}
   11e70:	subs	r5, r0, #0
   11e74:	bne	11e90 <lista_apaga@@Base+0x24>
   11e78:	b	11ea8 <lista_apaga@@Base+0x3c>
   11e7c:	ldm	r4, {r0, r3}
   11e80:	str	r3, [r5]
   11e84:	bl	10cc4 <free@plt>
   11e88:	mov	r0, r4
   11e8c:	bl	10cc4 <free@plt>
   11e90:	ldr	r4, [r5]
   11e94:	cmp	r4, #0
   11e98:	bne	11e7c <lista_apaga@@Base+0x10>
   11e9c:	mov	r0, r5
   11ea0:	pop	{r4, r5, r6, lr}
   11ea4:	b	10cc4 <free@plt>
   11ea8:	pop	{r4, r5, r6, pc}

00011eac <lista_tamanho@@Base>:
   11eac:	cmp	r0, #0
   11eb0:	ldrne	r0, [r0, #4]
   11eb4:	mvneq	r0, #0
   11eb8:	bx	lr

00011ebc <lista_elemento@@Base>:
   11ebc:	lsr	r3, r1, #31
   11ec0:	cmp	r0, #0
   11ec4:	orreq	r3, r3, #1
   11ec8:	cmp	r3, #0
   11ecc:	bne	11f04 <lista_elemento@@Base+0x48>
   11ed0:	ldr	r2, [r0]
   11ed4:	cmp	r2, #0
   11ed8:	cmpne	r1, #0
   11edc:	ble	11ef4 <lista_elemento@@Base+0x38>
   11ee0:	ldr	r2, [r2, #4]
   11ee4:	add	r3, r3, #1
   11ee8:	cmp	r2, #0
   11eec:	cmpne	r1, r3
   11ef0:	bgt	11ee0 <lista_elemento@@Base+0x24>
   11ef4:	cmp	r2, #0
   11ef8:	beq	11f04 <lista_elemento@@Base+0x48>
   11efc:	ldr	r0, [r2]
   11f00:	bx	lr
   11f04:	mov	r0, #0
   11f08:	bx	lr

00011f0c <lista_atribui@@Base>:
   11f0c:	lsr	r3, r1, #31
   11f10:	cmp	r0, #0
   11f14:	orreq	r3, r3, #1
   11f18:	cmp	r3, #0
   11f1c:	bne	11f80 <lista_atribui@@Base+0x74>
   11f20:	push	{r4, r5, r6, lr}
   11f24:	ldr	r4, [r0]
   11f28:	cmp	r4, #0
   11f2c:	cmpne	r1, #0
   11f30:	ble	11f48 <lista_atribui@@Base+0x3c>
   11f34:	ldr	r4, [r4, #4]
   11f38:	add	r3, r3, #1
   11f3c:	cmp	r4, #0
   11f40:	cmpne	r1, r3
   11f44:	bgt	11f34 <lista_atribui@@Base+0x28>
   11f48:	cmp	r4, #0
   11f4c:	beq	11f88 <lista_atribui@@Base+0x7c>
   11f50:	mov	r0, r2
   11f54:	mov	r6, r2
   11f58:	mov	r5, r1
   11f5c:	bl	10d24 <strlen@plt>
   11f60:	add	r1, r0, #1
   11f64:	ldr	r0, [r4]
   11f68:	bl	10cdc <realloc@plt>
   11f6c:	mov	r1, r6
   11f70:	str	r0, [r4]
   11f74:	bl	10ce8 <strcpy@plt>
   11f78:	mov	r0, r5
   11f7c:	pop	{r4, r5, r6, pc}
   11f80:	mvn	r0, #0
   11f84:	bx	lr
   11f88:	mvn	r0, #0
   11f8c:	pop	{r4, r5, r6, pc}

00011f90 <lista_insere@@Base>:
   11f90:	cmn	r2, #1
   11f94:	movge	r3, #0
   11f98:	movlt	r3, #1
   11f9c:	push	{r4, r5, r6, r7, r8, lr}
   11fa0:	cmp	r0, #0
   11fa4:	movne	r5, r3
   11fa8:	orreq	r5, r3, #1
   11fac:	cmp	r5, #0
   11fb0:	bne	1209c <lista_insere@@Base+0x10c>
   11fb4:	cmp	r2, #0
   11fb8:	mov	r7, r0
   11fbc:	mov	r6, r2
   11fc0:	mov	r0, r1
   11fc4:	beq	12070 <lista_insere@@Base+0xe0>
   11fc8:	ldr	r3, [r7, #4]
   11fcc:	cmp	r2, r3
   11fd0:	bge	1209c <lista_insere@@Base+0x10c>
   11fd4:	ldr	r4, [r7]
   11fd8:	bl	11de4 <novo_str@@Base>
   11fdc:	subs	r1, r0, #0
   11fe0:	beq	1209c <lista_insere@@Base+0x10c>
   11fe4:	ldr	r0, [r7, #4]
   11fe8:	cmn	r6, #1
   11fec:	add	r3, r0, #1
   11ff0:	str	r3, [r7, #4]
   11ff4:	beq	12040 <lista_insere@@Base+0xb0>
   11ff8:	cmp	r6, #1
   11ffc:	beq	1202c <lista_insere@@Base+0x9c>
   12000:	cmp	r4, #0
   12004:	beq	12064 <lista_insere@@Base+0xd4>
   12008:	mov	r3, r5
   1200c:	sub	r2, r6, #1
   12010:	b	1201c <lista_insere@@Base+0x8c>
   12014:	cmp	r4, #0
   12018:	beq	12064 <lista_insere@@Base+0xd4>
   1201c:	add	r3, r3, #1
   12020:	cmp	r3, r2
   12024:	ldr	r4, [r4, #4]
   12028:	bne	12014 <lista_insere@@Base+0x84>
   1202c:	ldr	r3, [r4, #4]
   12030:	mov	r0, r6
   12034:	str	r3, [r1, #4]
   12038:	str	r1, [r4, #4]
   1203c:	pop	{r4, r5, r6, r7, r8, pc}
   12040:	cmp	r4, #0
   12044:	bne	12050 <lista_insere@@Base+0xc0>
   12048:	b	120a4 <lista_insere@@Base+0x114>
   1204c:	mov	r4, r3
   12050:	ldr	r3, [r4, #4]
   12054:	cmp	r3, #0
   12058:	bne	1204c <lista_insere@@Base+0xbc>
   1205c:	str	r1, [r4, #4]
   12060:	pop	{r4, r5, r6, r7, r8, pc}
   12064:	mov	r3, #0
   12068:	ldr	r3, [r3, #4]
   1206c:	udf	#0
   12070:	ldr	r4, [r7]
   12074:	bl	11de4 <novo_str@@Base>
   12078:	subs	r2, r0, #0
   1207c:	beq	1209c <lista_insere@@Base+0x10c>
   12080:	ldr	r3, [r7, #4]
   12084:	mov	r0, r6
   12088:	add	r3, r3, #1
   1208c:	str	r3, [r7, #4]
   12090:	str	r4, [r2, #4]
   12094:	str	r2, [r7]
   12098:	pop	{r4, r5, r6, r7, r8, pc}
   1209c:	mvn	r0, #0
   120a0:	pop	{r4, r5, r6, r7, r8, pc}
   120a4:	str	r1, [r7]
   120a8:	pop	{r4, r5, r6, r7, r8, pc}

000120ac <lista_remove@@Base>:
   120ac:	lsr	r3, r1, #31
   120b0:	cmp	r0, #0
   120b4:	orreq	r3, r3, #1
   120b8:	cmp	r3, #0
   120bc:	bne	12168 <lista_remove@@Base+0xbc>
   120c0:	ldr	ip, [r0, #4]
   120c4:	cmp	r1, ip
   120c8:	bge	12168 <lista_remove@@Base+0xbc>
   120cc:	sub	ip, ip, #1
   120d0:	cmp	r1, #0
   120d4:	push	{r4, r5, r6, lr}
   120d8:	mov	r2, r0
   120dc:	mov	r5, r1
   120e0:	str	ip, [r0, #4]
   120e4:	ldr	r6, [r0]
   120e8:	beq	1214c <lista_remove@@Base+0xa0>
   120ec:	ldrle	r2, [r6, #4]
   120f0:	movle	r4, r6
   120f4:	ble	12130 <lista_remove@@Base+0x84>
   120f8:	ldr	r4, [r6, #4]
   120fc:	cmp	r4, #0
   12100:	moveq	r2, r4
   12104:	moveq	r4, r6
   12108:	bne	12120 <lista_remove@@Base+0x74>
   1210c:	b	12130 <lista_remove@@Base+0x84>
   12110:	cmp	r2, #0
   12114:	beq	12130 <lista_remove@@Base+0x84>
   12118:	mov	r6, r4
   1211c:	mov	r4, r2
   12120:	add	r3, r3, #1
   12124:	cmp	r5, r3
   12128:	ldr	r2, [r4, #4]
   1212c:	bne	12110 <lista_remove@@Base+0x64>
   12130:	str	r2, [r6, #4]
   12134:	ldr	r0, [r4]
   12138:	bl	10cc4 <free@plt>
   1213c:	mov	r0, r4
   12140:	bl	10cc4 <free@plt>
   12144:	mov	r0, #0
   12148:	pop	{r4, r5, r6, pc}
   1214c:	ldm	r6, {r0, r3}
   12150:	str	r3, [r2]
   12154:	bl	10cc4 <free@plt>
   12158:	mov	r0, r6
   1215c:	bl	10cc4 <free@plt>
   12160:	mov	r0, r5
   12164:	pop	{r4, r5, r6, pc}
   12168:	mvn	r0, #0
   1216c:	bx	lr

00012170 <lista_pesquisa@@Base>:
   12170:	cmp	r0, #0
   12174:	push	{r4, r5, r6, r7, r8, lr}
   12178:	beq	121e0 <lista_pesquisa@@Base+0x70>
   1217c:	ldr	r4, [r0]
   12180:	cmp	r4, #0
   12184:	beq	121e0 <lista_pesquisa@@Base+0x70>
   12188:	mov	r7, r2
   1218c:	mov	r6, r1
   12190:	mvn	r8, #0
   12194:	mov	r5, #0
   12198:	mov	r1, r6
   1219c:	ldr	r0, [r4]
   121a0:	bl	10c88 <strcmp@plt>
   121a4:	cmp	r0, #0
   121a8:	bne	121bc <lista_pesquisa@@Base+0x4c>
   121ac:	cmp	r7, #0
   121b0:	beq	121d4 <lista_pesquisa@@Base+0x64>
   121b4:	cmn	r7, #1
   121b8:	moveq	r8, r5
   121bc:	ldr	r4, [r4, #4]
   121c0:	add	r5, r5, #1
   121c4:	cmp	r4, #0
   121c8:	bne	12198 <lista_pesquisa@@Base+0x28>
   121cc:	mov	r0, r8
   121d0:	pop	{r4, r5, r6, r7, r8, pc}
   121d4:	mov	r8, r5
   121d8:	mov	r0, r8
   121dc:	pop	{r4, r5, r6, r7, r8, pc}
   121e0:	mvn	r8, #0
   121e4:	b	121cc <lista_pesquisa@@Base+0x5c>

000121e8 <lista_ordena@@Base>:
   121e8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   121ec:	subs	sl, r0, #0
   121f0:	beq	12288 <lista_ordena@@Base+0xa0>
   121f4:	ldr	r8, [sl]
   121f8:	ldr	r7, [r8, #4]
   121fc:	cmp	r7, #0
   12200:	beq	12278 <lista_ordena@@Base+0x90>
   12204:	ldr	r5, [r7]
   12208:	ldr	r0, [r8]
   1220c:	mov	r1, r5
   12210:	bl	10c88 <strcmp@plt>
   12214:	cmp	r0, #0
   12218:	ble	12280 <lista_ordena@@Base+0x98>
   1221c:	ldr	r3, [r7, #4]
   12220:	ldr	r9, [sl]
   12224:	str	r3, [r8, #4]
   12228:	ldr	r3, [r7, #4]
   1222c:	cmp	r3, r8
   12230:	beq	121f8 <lista_ordena@@Base+0x10>
   12234:	mov	r6, r9
   12238:	mov	r4, r9
   1223c:	b	12248 <lista_ordena@@Base+0x60>
   12240:	mov	r6, r4
   12244:	ldr	r4, [r4, #4]
   12248:	mov	r1, r5
   1224c:	ldr	r0, [r4]
   12250:	bl	10c88 <strcmp@plt>
   12254:	cmp	r0, #0
   12258:	ble	12240 <lista_ordena@@Base+0x58>
   1225c:	cmp	r9, r4
   12260:	str	r4, [r7, #4]
   12264:	streq	r7, [sl]
   12268:	strne	r7, [r6, #4]
   1226c:	ldr	r7, [r8, #4]
   12270:	cmp	r7, #0
   12274:	bne	12204 <lista_ordena@@Base+0x1c>
   12278:	mov	r0, #0
   1227c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12280:	ldr	r8, [r8, #4]
   12284:	b	121f8 <lista_ordena@@Base+0x10>
   12288:	mvn	r0, #0
   1228c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

00012290 <lista_compara@@Base>:
   12290:	cmp	r1, #0
   12294:	cmpne	r0, #0
   12298:	moveq	r3, #1
   1229c:	movne	r3, #0
   122a0:	beq	12310 <lista_compara@@Base+0x80>
   122a4:	ldr	ip, [r0, #4]
   122a8:	ldr	r2, [r1, #4]
   122ac:	cmp	ip, r2
   122b0:	beq	122bc <lista_compara@@Base+0x2c>
   122b4:	mov	r0, r3
   122b8:	bx	lr
   122bc:	push	{r4, r5, r6, lr}
   122c0:	ldr	r4, [r0]
   122c4:	ldr	r5, [r1]
   122c8:	cmp	r4, #0
   122cc:	bne	122e4 <lista_compara@@Base+0x54>
   122d0:	b	12300 <lista_compara@@Base+0x70>
   122d4:	ldr	r4, [r4, #4]
   122d8:	ldr	r5, [r5, #4]
   122dc:	cmp	r4, #0
   122e0:	beq	12300 <lista_compara@@Base+0x70>
   122e4:	ldr	r1, [r5]
   122e8:	ldr	r0, [r4]
   122ec:	bl	10c88 <strcmp@plt>
   122f0:	cmp	r0, #0
   122f4:	beq	122d4 <lista_compara@@Base+0x44>
   122f8:	mov	r0, #0
   122fc:	pop	{r4, r5, r6, pc}
   12300:	cmp	r5, #0
   12304:	mvnne	r0, #0
   12308:	moveq	r0, #1
   1230c:	pop	{r4, r5, r6, pc}
   12310:	mvn	r0, #0
   12314:	bx	lr

00012318 <lista_inverte@@Base>:
   12318:	push	{r4, r5, r6, lr}
   1231c:	subs	r4, r0, #0
   12320:	beq	12364 <lista_inverte@@Base+0x4c>
   12324:	bl	11e4c <lista_nova@@Base>
   12328:	subs	r5, r0, #0
   1232c:	beq	12364 <lista_inverte@@Base+0x4c>
   12330:	ldr	r4, [r4]
   12334:	cmp	r4, #0
   12338:	beq	1235c <lista_inverte@@Base+0x44>
   1233c:	mov	r6, #0
   12340:	ldr	r1, [r4]
   12344:	mov	r2, r6
   12348:	mov	r0, r5
   1234c:	bl	11f90 <lista_insere@@Base>
   12350:	ldr	r4, [r4, #4]
   12354:	cmp	r4, #0
   12358:	bne	12340 <lista_inverte@@Base+0x28>
   1235c:	mov	r0, r5
   12360:	pop	{r4, r5, r6, pc}
   12364:	mov	r5, #0
   12368:	b	1235c <lista_inverte@@Base+0x44>
   1236c:	cmp	r1, #0
   12370:	beq	1257c <lista_inverte@@Base+0x264>
   12374:	eor	ip, r0, r1
   12378:	rsbmi	r1, r1, #0
   1237c:	subs	r2, r1, #1
   12380:	beq	12548 <lista_inverte@@Base+0x230>
   12384:	movs	r3, r0
   12388:	rsbmi	r3, r0, #0
   1238c:	cmp	r3, r1
   12390:	bls	12554 <lista_inverte@@Base+0x23c>
   12394:	tst	r1, r2
   12398:	beq	12564 <lista_inverte@@Base+0x24c>
   1239c:	clz	r2, r3
   123a0:	clz	r0, r1
   123a4:	sub	r2, r0, r2
   123a8:	rsbs	r2, r2, #31
   123ac:	addne	r2, r2, r2, lsl #1
   123b0:	mov	r0, #0
   123b4:	addne	pc, pc, r2, lsl #2
   123b8:	nop			; (mov r0, r0)
   123bc:	cmp	r3, r1, lsl #31
   123c0:	adc	r0, r0, r0
   123c4:	subcs	r3, r3, r1, lsl #31
   123c8:	cmp	r3, r1, lsl #30
   123cc:	adc	r0, r0, r0
   123d0:	subcs	r3, r3, r1, lsl #30
   123d4:	cmp	r3, r1, lsl #29
   123d8:	adc	r0, r0, r0
   123dc:	subcs	r3, r3, r1, lsl #29
   123e0:	cmp	r3, r1, lsl #28
   123e4:	adc	r0, r0, r0
   123e8:	subcs	r3, r3, r1, lsl #28
   123ec:	cmp	r3, r1, lsl #27
   123f0:	adc	r0, r0, r0
   123f4:	subcs	r3, r3, r1, lsl #27
   123f8:	cmp	r3, r1, lsl #26
   123fc:	adc	r0, r0, r0
   12400:	subcs	r3, r3, r1, lsl #26
   12404:	cmp	r3, r1, lsl #25
   12408:	adc	r0, r0, r0
   1240c:	subcs	r3, r3, r1, lsl #25
   12410:	cmp	r3, r1, lsl #24
   12414:	adc	r0, r0, r0
   12418:	subcs	r3, r3, r1, lsl #24
   1241c:	cmp	r3, r1, lsl #23
   12420:	adc	r0, r0, r0
   12424:	subcs	r3, r3, r1, lsl #23
   12428:	cmp	r3, r1, lsl #22
   1242c:	adc	r0, r0, r0
   12430:	subcs	r3, r3, r1, lsl #22
   12434:	cmp	r3, r1, lsl #21
   12438:	adc	r0, r0, r0
   1243c:	subcs	r3, r3, r1, lsl #21
   12440:	cmp	r3, r1, lsl #20
   12444:	adc	r0, r0, r0
   12448:	subcs	r3, r3, r1, lsl #20
   1244c:	cmp	r3, r1, lsl #19
   12450:	adc	r0, r0, r0
   12454:	subcs	r3, r3, r1, lsl #19
   12458:	cmp	r3, r1, lsl #18
   1245c:	adc	r0, r0, r0
   12460:	subcs	r3, r3, r1, lsl #18
   12464:	cmp	r3, r1, lsl #17
   12468:	adc	r0, r0, r0
   1246c:	subcs	r3, r3, r1, lsl #17
   12470:	cmp	r3, r1, lsl #16
   12474:	adc	r0, r0, r0
   12478:	subcs	r3, r3, r1, lsl #16
   1247c:	cmp	r3, r1, lsl #15
   12480:	adc	r0, r0, r0
   12484:	subcs	r3, r3, r1, lsl #15
   12488:	cmp	r3, r1, lsl #14
   1248c:	adc	r0, r0, r0
   12490:	subcs	r3, r3, r1, lsl #14
   12494:	cmp	r3, r1, lsl #13
   12498:	adc	r0, r0, r0
   1249c:	subcs	r3, r3, r1, lsl #13
   124a0:	cmp	r3, r1, lsl #12
   124a4:	adc	r0, r0, r0
   124a8:	subcs	r3, r3, r1, lsl #12
   124ac:	cmp	r3, r1, lsl #11
   124b0:	adc	r0, r0, r0
   124b4:	subcs	r3, r3, r1, lsl #11
   124b8:	cmp	r3, r1, lsl #10
   124bc:	adc	r0, r0, r0
   124c0:	subcs	r3, r3, r1, lsl #10
   124c4:	cmp	r3, r1, lsl #9
   124c8:	adc	r0, r0, r0
   124cc:	subcs	r3, r3, r1, lsl #9
   124d0:	cmp	r3, r1, lsl #8
   124d4:	adc	r0, r0, r0
   124d8:	subcs	r3, r3, r1, lsl #8
   124dc:	cmp	r3, r1, lsl #7
   124e0:	adc	r0, r0, r0
   124e4:	subcs	r3, r3, r1, lsl #7
   124e8:	cmp	r3, r1, lsl #6
   124ec:	adc	r0, r0, r0
   124f0:	subcs	r3, r3, r1, lsl #6
   124f4:	cmp	r3, r1, lsl #5
   124f8:	adc	r0, r0, r0
   124fc:	subcs	r3, r3, r1, lsl #5
   12500:	cmp	r3, r1, lsl #4
   12504:	adc	r0, r0, r0
   12508:	subcs	r3, r3, r1, lsl #4
   1250c:	cmp	r3, r1, lsl #3
   12510:	adc	r0, r0, r0
   12514:	subcs	r3, r3, r1, lsl #3
   12518:	cmp	r3, r1, lsl #2
   1251c:	adc	r0, r0, r0
   12520:	subcs	r3, r3, r1, lsl #2
   12524:	cmp	r3, r1, lsl #1
   12528:	adc	r0, r0, r0
   1252c:	subcs	r3, r3, r1, lsl #1
   12530:	cmp	r3, r1
   12534:	adc	r0, r0, r0
   12538:	subcs	r3, r3, r1
   1253c:	cmp	ip, #0
   12540:	rsbmi	r0, r0, #0
   12544:	bx	lr
   12548:	teq	ip, r0
   1254c:	rsbmi	r0, r0, #0
   12550:	bx	lr
   12554:	movcc	r0, #0
   12558:	asreq	r0, ip, #31
   1255c:	orreq	r0, r0, #1
   12560:	bx	lr
   12564:	clz	r2, r1
   12568:	rsb	r2, r2, #31
   1256c:	cmp	ip, #0
   12570:	lsr	r0, r3, r2
   12574:	rsbmi	r0, r0, #0
   12578:	bx	lr
   1257c:	cmp	r0, #0
   12580:	mvngt	r0, #-2147483648	; 0x80000000
   12584:	movlt	r0, #-2147483648	; 0x80000000
   12588:	b	125ac <lista_inverte@@Base+0x294>
   1258c:	cmp	r1, #0
   12590:	beq	1257c <lista_inverte@@Base+0x264>
   12594:	push	{r0, r1, lr}
   12598:	bl	12374 <lista_inverte@@Base+0x5c>
   1259c:	pop	{r1, r2, lr}
   125a0:	mul	r3, r2, r0
   125a4:	sub	r1, r1, r3
   125a8:	bx	lr
   125ac:	push	{r1, lr}
   125b0:	mov	r0, #8
   125b4:	bl	10c7c <raise@plt>
   125b8:	pop	{r1, pc}

000125bc <__libc_csu_init@@Base>:
   125bc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   125c0:	mov	r7, r0
   125c4:	ldr	r6, [pc, #72]	; 12614 <__libc_csu_init@@Base+0x58>
   125c8:	ldr	r5, [pc, #72]	; 12618 <__libc_csu_init@@Base+0x5c>
   125cc:	add	r6, pc, r6
   125d0:	add	r5, pc, r5
   125d4:	sub	r6, r6, r5
   125d8:	mov	r8, r1
   125dc:	mov	r9, r2
   125e0:	bl	10c50 <calloc@plt-0x20>
   125e4:	asrs	r6, r6, #2
   125e8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   125ec:	mov	r4, #0
   125f0:	add	r4, r4, #1
   125f4:	ldr	r3, [r5], #4
   125f8:	mov	r2, r9
   125fc:	mov	r1, r8
   12600:	mov	r0, r7
   12604:	blx	r3
   12608:	cmp	r6, r4
   1260c:	bne	125f0 <__libc_csu_init@@Base+0x34>
   12610:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12614:	andeq	r0, r1, ip, lsr r9
   12618:	andeq	r0, r1, r4, lsr r9

0001261c <__libc_csu_fini@@Base>:
   1261c:	bx	lr

Disassembly of section .fini:

00012620 <.fini>:
   12620:	push	{r3, lr}
   12624:	pop	{r3, pc}
