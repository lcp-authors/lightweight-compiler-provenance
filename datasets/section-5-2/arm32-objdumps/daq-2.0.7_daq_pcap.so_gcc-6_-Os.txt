
../repos/daq-2.0.7/os-daq-modules/.libs/daq_pcap.so:     file format elf32-littlearm


Disassembly of section .init:

00000884 <_init>:
 884:	push	{r3, lr}
 888:	bl	a54 <call_weak_fn>
 88c:	pop	{r3, pc}

Disassembly of section .plt:

00000890 <.plt>:
 890:	push	{lr}		; (str lr, [sp, #-4]!)
 894:	ldr	lr, [pc, #4]	; 8a0 <.plt+0x10>
 898:	add	lr, pc, lr
 89c:	ldr	pc, [lr, #8]!
 8a0:	.word	0x00011760

000008a4 <calloc@plt>:
 8a4:	add	ip, pc, #0, 12
 8a8:	add	ip, ip, #69632	; 0x11000
 8ac:	ldr	pc, [ip, #1888]!	; 0x760

000008b0 <raise@plt>:
 8b0:	add	ip, pc, #0, 12
 8b4:	add	ip, ip, #69632	; 0x11000
 8b8:	ldr	pc, [ip, #1880]!	; 0x758

000008bc <strcmp@plt>:
 8bc:	add	ip, pc, #0, 12
 8c0:	add	ip, ip, #69632	; 0x11000
 8c4:	ldr	pc, [ip, #1872]!	; 0x750

000008c8 <__cxa_finalize@plt>:
 8c8:	add	ip, pc, #0, 12
 8cc:	add	ip, ip, #69632	; 0x11000
 8d0:	ldr	pc, [ip, #1864]!	; 0x748

000008d4 <pcap_activate@plt>:
 8d4:	add	ip, pc, #0, 12
 8d8:	add	ip, ip, #69632	; 0x11000
 8dc:	ldr	pc, [ip, #1856]!	; 0x740

000008e0 <strtol@plt>:
 8e0:	add	ip, pc, #0, 12
 8e4:	add	ip, ip, #69632	; 0x11000
 8e8:	ldr	pc, [ip, #1848]!	; 0x738

000008ec <pcap_setfilter@plt>:
 8ec:	add	ip, pc, #0, 12
 8f0:	add	ip, ip, #69632	; 0x11000
 8f4:	ldr	pc, [ip, #1840]!	; 0x730

000008f8 <printf@plt>:
 8f8:	add	ip, pc, #0, 12
 8fc:	add	ip, ip, #69632	; 0x11000
 900:	ldr	pc, [ip, #1832]!	; 0x728

00000904 <free@plt>:
 904:	add	ip, pc, #0, 12
 908:	add	ip, ip, #69632	; 0x11000
 90c:	ldr	pc, [ip, #1824]!	; 0x720

00000910 <memcpy@plt>:
 910:	add	ip, pc, #0, 12
 914:	add	ip, ip, #69632	; 0x11000
 918:	ldr	pc, [ip, #1816]!	; 0x718

0000091c <pcap_set_timeout@plt>:
 91c:	add	ip, pc, #0, 12
 920:	add	ip, ip, #69632	; 0x11000
 924:	ldr	pc, [ip, #1808]!	; 0x710

00000928 <strdup@plt>:
 928:	add	ip, pc, #0, 12
 92c:	add	ip, ip, #69632	; 0x11000
 930:	ldr	pc, [ip, #1800]!	; 0x708

00000934 <pcap_create@plt>:
 934:	add	ip, pc, #0, 12
 938:	add	ip, ip, #69632	; 0x11000
 93c:	ldr	pc, [ip, #1792]!	; 0x700

00000940 <pcap_close@plt>:
 940:	add	ip, pc, #0, 12
 944:	add	ip, ip, #69632	; 0x11000
 948:	ldr	pc, [ip, #1784]!	; 0x6f8

0000094c <pcap_stats@plt>:
 94c:	add	ip, pc, #0, 12
 950:	add	ip, ip, #69632	; 0x11000
 954:	ldr	pc, [ip, #1776]!	; 0x6f0

00000958 <pcap_open_dead@plt>:
 958:	add	ip, pc, #0, 12
 95c:	add	ip, ip, #69632	; 0x11000
 960:	ldr	pc, [ip, #1768]!	; 0x6e8

00000964 <pcap_set_snaplen@plt>:
 964:	add	ip, pc, #0, 12
 968:	add	ip, ip, #69632	; 0x11000
 96c:	ldr	pc, [ip, #1760]!	; 0x6e0

00000970 <pcap_breakloop@plt>:
 970:	add	ip, pc, #0, 12
 974:	add	ip, ip, #69632	; 0x11000
 978:	ldr	pc, [ip, #1752]!	; 0x6d8

0000097c <getenv@plt>:
 97c:	add	ip, pc, #0, 12
 980:	add	ip, ip, #69632	; 0x11000
 984:	ldr	pc, [ip, #1744]!	; 0x6d0

00000988 <pcap_geterr@plt>:
 988:	add	ip, pc, #0, 12
 98c:	add	ip, ip, #69632	; 0x11000
 990:	ldr	pc, [ip, #1736]!	; 0x6c8

00000994 <pcap_set_promisc@plt>:
 994:	add	ip, pc, #0, 12
 998:	add	ip, ip, #69632	; 0x11000
 99c:	ldr	pc, [ip, #1728]!	; 0x6c0

000009a0 <pcap_open_offline@plt>:
 9a0:	add	ip, pc, #0, 12
 9a4:	add	ip, ip, #69632	; 0x11000
 9a8:	ldr	pc, [ip, #1720]!	; 0x6b8

000009ac <__gmon_start__@plt>:
 9ac:	add	ip, pc, #0, 12
 9b0:	add	ip, ip, #69632	; 0x11000
 9b4:	ldr	pc, [ip, #1712]!	; 0x6b0

000009b8 <getpagesize@plt>:
 9b8:	add	ip, pc, #0, 12
 9bc:	add	ip, ip, #69632	; 0x11000
 9c0:	ldr	pc, [ip, #1704]!	; 0x6a8

000009c4 <snprintf@plt>:
 9c4:	add	ip, pc, #0, 12
 9c8:	add	ip, ip, #69632	; 0x11000
 9cc:	ldr	pc, [ip, #1696]!	; 0x6a0

000009d0 <memset@plt>:
 9d0:	add	ip, pc, #0, 12
 9d4:	add	ip, ip, #69632	; 0x11000
 9d8:	ldr	pc, [ip, #1688]!	; 0x698

000009dc <pcap_inject@plt>:
 9dc:	add	ip, pc, #0, 12
 9e0:	add	ip, ip, #69632	; 0x11000
 9e4:	ldr	pc, [ip, #1680]!	; 0x690

000009e8 <pcap_compile@plt>:
 9e8:	add	ip, pc, #0, 12
 9ec:	add	ip, ip, #69632	; 0x11000
 9f0:	ldr	pc, [ip, #1672]!	; 0x688

000009f4 <pcap_snapshot@plt>:
 9f4:	add	ip, pc, #0, 12
 9f8:	add	ip, ip, #69632	; 0x11000
 9fc:	ldr	pc, [ip, #1664]!	; 0x680

00000a00 <pcap_freecode@plt>:
 a00:	add	ip, pc, #0, 12
 a04:	add	ip, ip, #69632	; 0x11000
 a08:	ldr	pc, [ip, #1656]!	; 0x678

00000a0c <pcap_statustostr@plt>:
 a0c:	add	ip, pc, #0, 12
 a10:	add	ip, ip, #69632	; 0x11000
 a14:	ldr	pc, [ip, #1648]!	; 0x670

00000a18 <pcap_datalink@plt>:
 a18:	add	ip, pc, #0, 12
 a1c:	add	ip, ip, #69632	; 0x11000
 a20:	ldr	pc, [ip, #1640]!	; 0x668

00000a24 <pcap_lookupnet@plt>:
 a24:	add	ip, pc, #0, 12
 a28:	add	ip, ip, #69632	; 0x11000
 a2c:	ldr	pc, [ip, #1632]!	; 0x660

00000a30 <strncmp@plt>:
 a30:	add	ip, pc, #0, 12
 a34:	add	ip, ip, #69632	; 0x11000
 a38:	ldr	pc, [ip, #1624]!	; 0x658

00000a3c <pcap_dispatch@plt>:
 a3c:	add	ip, pc, #0, 12
 a40:	add	ip, ip, #69632	; 0x11000
 a44:	ldr	pc, [ip, #1616]!	; 0x650

00000a48 <pcap_set_buffer_size@plt>:
 a48:	add	ip, pc, #0, 12
 a4c:	add	ip, ip, #69632	; 0x11000
 a50:	ldr	pc, [ip, #1608]!	; 0x648

Disassembly of section .text:

00000a54 <call_weak_fn>:
     a54:	ldr	r3, [pc, #20]	; a70 <call_weak_fn+0x1c>
     a58:	ldr	r2, [pc, #20]	; a74 <call_weak_fn+0x20>
     a5c:	add	r3, pc, r3
     a60:	ldr	r2, [r3, r2]
     a64:	cmp	r2, #0
     a68:	bxeq	lr
     a6c:	b	9ac <__gmon_start__@plt>
     a70:	.word	0x0001159c
     a74:	.word	0x000000a4

00000a78 <deregister_tm_clones>:
     a78:	ldr	r3, [pc, #52]	; ab4 <deregister_tm_clones+0x3c>
     a7c:	ldr	r0, [pc, #52]	; ab8 <deregister_tm_clones+0x40>
     a80:	add	r3, pc, r3
     a84:	add	r0, pc, r0
     a88:	add	r3, r3, #3
     a8c:	sub	r3, r3, r0
     a90:	cmp	r3, #6
     a94:	ldr	r3, [pc, #32]	; abc <deregister_tm_clones+0x44>
     a98:	add	r3, pc, r3
     a9c:	bxls	lr
     aa0:	ldr	r2, [pc, #24]	; ac0 <deregister_tm_clones+0x48>
     aa4:	ldr	r3, [r3, r2]
     aa8:	cmp	r3, #0
     aac:	bxeq	lr
     ab0:	bx	r3
     ab4:	.word	0x0001162c
     ab8:	.word	0x00011628
     abc:	.word	0x00011560
     ac0:	.word	0x000000a0

00000ac4 <register_tm_clones>:
     ac4:	ldr	r1, [pc, #56]	; b04 <register_tm_clones+0x40>
     ac8:	ldr	r0, [pc, #56]	; b08 <register_tm_clones+0x44>
     acc:	add	r1, pc, r1
     ad0:	add	r0, pc, r0
     ad4:	sub	r1, r1, r0
     ad8:	ldr	r3, [pc, #44]	; b0c <register_tm_clones+0x48>
     adc:	asr	r1, r1, #2
     ae0:	add	r3, pc, r3
     ae4:	add	r1, r1, r1, lsr #31
     ae8:	asrs	r1, r1, #1
     aec:	bxeq	lr
     af0:	ldr	r2, [pc, #24]	; b10 <register_tm_clones+0x4c>
     af4:	ldr	r3, [r3, r2]
     af8:	cmp	r3, #0
     afc:	bxeq	lr
     b00:	bx	r3
     b04:	.word	0x000115e0
     b08:	.word	0x000115dc
     b0c:	.word	0x00011518
     b10:	.word	0x000000ac

00000b14 <__do_global_dtors_aux>:
     b14:	ldr	r3, [pc, #76]	; b68 <__do_global_dtors_aux+0x54>
     b18:	ldr	r2, [pc, #76]	; b6c <__do_global_dtors_aux+0x58>
     b1c:	add	r3, pc, r3
     b20:	add	r2, pc, r2
     b24:	ldrb	r3, [r3]
     b28:	cmp	r3, #0
     b2c:	bxne	lr
     b30:	ldr	r3, [pc, #56]	; b70 <__do_global_dtors_aux+0x5c>
     b34:	push	{r4, lr}
     b38:	ldr	r3, [r2, r3]
     b3c:	cmp	r3, #0
     b40:	beq	b50 <__do_global_dtors_aux+0x3c>
     b44:	ldr	r3, [pc, #40]	; b74 <__do_global_dtors_aux+0x60>
     b48:	ldr	r0, [pc, r3]
     b4c:	bl	8c8 <__cxa_finalize@plt>
     b50:	bl	a78 <deregister_tm_clones>
     b54:	ldr	r3, [pc, #28]	; b78 <__do_global_dtors_aux+0x64>
     b58:	mov	r2, #1
     b5c:	add	r3, pc, r3
     b60:	strb	r2, [r3]
     b64:	pop	{r4, pc}
     b68:	.word	0x00011590
     b6c:	.word	0x000114d8
     b70:	.word	0x0000009c
     b74:	.word	0x00011560
     b78:	.word	0x00011550

00000b7c <frame_dummy>:
     b7c:	ldr	r0, [pc, #56]	; bbc <frame_dummy+0x40>
     b80:	ldr	r3, [pc, #56]	; bc0 <frame_dummy+0x44>
     b84:	add	r0, pc, r0
     b88:	ldr	r2, [r0]
     b8c:	add	r3, pc, r3
     b90:	cmp	r2, #0
     b94:	bne	b9c <frame_dummy+0x20>
     b98:	b	ac4 <register_tm_clones>
     b9c:	ldr	r2, [pc, #32]	; bc4 <frame_dummy+0x48>
     ba0:	ldr	r3, [r3, r2]
     ba4:	cmp	r3, #0
     ba8:	beq	b98 <frame_dummy+0x1c>
     bac:	push	{r4, lr}
     bb0:	blx	r3
     bb4:	pop	{r4, lr}
     bb8:	b	ac4 <register_tm_clones>
     bbc:	.word	0x00011318
     bc0:	.word	0x0001146c
     bc4:	.word	0x000000a8

00000bc8 <pcap_process_loop>:
     bc8:	push	{r4, r5, lr}
     bcc:	sub	sp, sp, #60	; 0x3c
     bd0:	ldr	r3, [r1, #8]
     bd4:	mov	r4, r0
     bd8:	str	r3, [sp, #12]
     bdc:	ldr	r3, [r1, #12]
     be0:	ldm	r1, {r0, r1}
     be4:	str	r3, [sp, #16]
     be8:	add	r3, sp, #4
     bec:	add	ip, r4, #336	; 0x150
     bf0:	stm	r3, {r0, r1}
     bf4:	mvn	r1, #0
     bf8:	str	r1, [sp, #20]
     bfc:	str	r1, [sp, #24]
     c00:	str	r1, [sp, #28]
     c04:	str	r1, [sp, #32]
     c08:	mov	r1, #0
     c0c:	str	r1, [sp, #36]	; 0x24
     c10:	strh	r1, [sp, #52]	; 0x34
     c14:	ldr	r1, [r4, #288]	; 0x120
     c18:	add	r1, r1, #1
     c1c:	str	r1, [r4, #288]	; 0x120
     c20:	ldrd	r0, [ip, #-8]
     c24:	adds	r0, r0, #1
     c28:	adc	r1, r1, #0
     c2c:	strd	r0, [ip, #-8]
     c30:	mov	r1, r3
     c34:	ldr	r5, [r4, #296]	; 0x128
     c38:	ldr	r0, [r4, #300]	; 0x12c
     c3c:	blx	r5
     c40:	cmp	r0, #6
     c44:	movhi	r0, #0
     c48:	add	r4, r4, r0, lsl #3
     c4c:	add	r4, r4, #352	; 0x160
     c50:	ldrd	r2, [r4]
     c54:	adds	r2, r2, #1
     c58:	adc	r3, r3, #0
     c5c:	strd	r2, [r4]
     c60:	add	sp, sp, #60	; 0x3c
     c64:	pop	{r4, r5, pc}

00000c68 <pcap_daq_check_status>:
     c68:	ldr	r0, [r0, #440]	; 0x1b8
     c6c:	bx	lr

00000c70 <pcap_daq_get_capabilities>:
     c70:	ldr	r3, [r0]
     c74:	ldr	r2, [r0, #292]	; 0x124
     c78:	cmp	r3, #0
     c7c:	moveq	r3, #128	; 0x80
     c80:	movne	r3, #132	; 0x84
     c84:	cmp	r2, #0
     c88:	orrne	r0, r3, #64	; 0x40
     c8c:	orreq	r0, r3, #96	; 0x60
     c90:	bx	lr

00000c94 <pcap_daq_get_errbuf>:
     c94:	add	r0, r0, #20
     c98:	bx	lr

00000c9c <pcap_daq_get_device_index>:
     c9c:	mvn	r0, #3
     ca0:	bx	lr

00000ca4 <pcap_daq_set_errbuf>:
     ca4:	subs	r3, r1, #0
     ca8:	bxeq	lr
     cac:	ldr	r2, [pc, #12]	; cc0 <pcap_daq_set_errbuf+0x1c>
     cb0:	mov	r1, #256	; 0x100
     cb4:	add	r2, pc, r2
     cb8:	add	r0, r0, #20
     cbc:	b	9c4 <snprintf@plt>
     cc0:	.word	0x00000c72

00000cc4 <pcap_daq_get_datalink_type>:
     cc4:	ldr	r0, [r0, #16]
     cc8:	cmp	r0, #0
     ccc:	bxeq	lr
     cd0:	b	a18 <pcap_datalink@plt>

00000cd4 <pcap_daq_get_snaplen>:
     cd4:	mov	r3, r0
     cd8:	ldr	r0, [r0, #16]
     cdc:	cmp	r0, #0
     ce0:	beq	ce8 <pcap_daq_get_snaplen+0x14>
     ce4:	b	9f4 <pcap_snapshot@plt>
     ce8:	ldr	r0, [r3, #12]
     cec:	bx	lr

00000cf0 <pcap_daq_reset_stats>:
     cf0:	push	{r0, r1, r2, r3, r4, lr}
     cf4:	mov	r4, r0
     cf8:	mov	r2, #96	; 0x60
     cfc:	mov	r1, #0
     d00:	add	r0, r0, #312	; 0x138
     d04:	bl	9d0 <memset@plt>
     d08:	ldr	r0, [r4, #16]
     d0c:	cmp	r0, #0
     d10:	beq	d54 <pcap_daq_reset_stats+0x64>
     d14:	mov	r3, #0
     d18:	str	r3, [sp, #4]
     d1c:	str	r3, [sp, #8]
     d20:	str	r3, [sp, #12]
     d24:	ldr	r3, [r4]
     d28:	cmp	r3, #0
     d2c:	beq	d54 <pcap_daq_reset_stats+0x64>
     d30:	add	r1, sp, #4
     d34:	bl	94c <pcap_stats@plt>
     d38:	cmp	r0, #0
     d3c:	ldreq	r3, [sp, #4]
     d40:	streq	r3, [r4, #432]	; 0x1b0
     d44:	streq	r3, [r4, #408]	; 0x198
     d48:	ldreq	r3, [sp, #8]
     d4c:	streq	r3, [r4, #436]	; 0x1b4
     d50:	streq	r3, [r4, #412]	; 0x19c
     d54:	add	sp, sp, #16
     d58:	pop	{r4, pc}

00000d5c <update_hw_stats>:
     d5c:	push	{r4, r5, lr}
     d60:	sub	sp, sp, #20
     d64:	ldr	r3, [r0, #16]
     d68:	cmp	r3, #0
     d6c:	moveq	r5, r3
     d70:	beq	dcc <update_hw_stats+0x70>
     d74:	ldr	r5, [r0]
     d78:	cmp	r5, #0
     d7c:	beq	dcc <update_hw_stats+0x70>
     d80:	mov	r2, #0
     d84:	mov	r4, r0
     d88:	add	r1, sp, #4
     d8c:	mov	r0, r3
     d90:	str	r2, [sp, #4]
     d94:	str	r2, [sp, #8]
     d98:	str	r2, [sp, #12]
     d9c:	bl	94c <pcap_stats@plt>
     da0:	cmn	r0, #1
     da4:	mov	r5, r0
     da8:	bne	dd8 <update_hw_stats+0x7c>
     dac:	ldr	r0, [r4, #16]
     db0:	bl	988 <pcap_geterr@plt>
     db4:	ldr	r2, [pc, #176]	; e6c <update_hw_stats+0x110>
     db8:	mov	r1, #256	; 0x100
     dbc:	add	r2, pc, r2
     dc0:	mov	r3, r0
     dc4:	add	r0, r4, #20
     dc8:	bl	9c4 <snprintf@plt>
     dcc:	mov	r0, r5
     dd0:	add	sp, sp, #20
     dd4:	pop	{r4, r5, pc}
     dd8:	ldr	r2, [sp, #4]
     ddc:	ldr	r3, [r4, #432]	; 0x1b0
     de0:	add	r5, r4, #416	; 0x1a0
     de4:	cmp	r2, r3
     de8:	bcs	dfc <update_hw_stats+0xa0>
     dec:	ldrd	r0, [r5]
     df0:	subs	r0, r0, #1
     df4:	adc	r1, r1, #0
     df8:	strd	r0, [r5]
     dfc:	ldr	r3, [r4, #436]	; 0x1b4
     e00:	ldr	ip, [sp, #8]
     e04:	cmp	ip, r3
     e08:	add	r3, r4, #432	; 0x1b0
     e0c:	bcs	e20 <update_hw_stats+0xc4>
     e10:	ldrd	r0, [r3, #-8]
     e14:	subs	r0, r0, #1
     e18:	adc	r1, r1, #0
     e1c:	strd	r0, [r3, #-8]
     e20:	str	r2, [r4, #432]	; 0x1b0
     e24:	str	ip, [r4, #436]	; 0x1b4
     e28:	ldrd	r0, [r5]
     e2c:	add	lr, r4, #320	; 0x140
     e30:	mov	r5, #0
     e34:	adds	r0, r0, r2
     e38:	ldr	r2, [r4, #408]	; 0x198
     e3c:	adc	r1, r1, #0
     e40:	subs	r0, r0, r2
     e44:	sbc	r1, r1, #0
     e48:	strd	r0, [lr, #-8]
     e4c:	ldrd	r2, [r3, #-8]
     e50:	ldr	r1, [r4, #412]	; 0x19c
     e54:	adds	r2, r2, ip
     e58:	adc	r3, r3, #0
     e5c:	subs	r2, r2, r1
     e60:	sbc	r3, r3, #0
     e64:	strd	r2, [lr]
     e68:	b	dcc <update_hw_stats+0x70>
     e6c:	.word	0x00000b6a

00000e70 <pcap_daq_get_stats>:
     e70:	push	{r4, r5, r6, lr}
     e74:	mov	r6, r0
     e78:	mov	r5, r1
     e7c:	bl	d5c <update_hw_stats>
     e80:	subs	r4, r0, #0
     e84:	mvnne	r4, #0
     e88:	bne	e9c <pcap_daq_get_stats+0x2c>
     e8c:	mov	r2, #96	; 0x60
     e90:	add	r1, r6, #312	; 0x138
     e94:	mov	r0, r5
     e98:	bl	910 <memcpy@plt>
     e9c:	mov	r0, r4
     ea0:	pop	{r4, r5, r6, pc}

00000ea4 <pcap_daq_stop>:
     ea4:	push	{r4, lr}
     ea8:	mov	r4, r0
     eac:	ldr	r3, [r0, #16]
     eb0:	cmp	r3, #0
     eb4:	beq	ecc <pcap_daq_stop+0x28>
     eb8:	bl	d5c <update_hw_stats>
     ebc:	ldr	r0, [r4, #16]
     ec0:	bl	940 <pcap_close@plt>
     ec4:	mov	r3, #0
     ec8:	str	r3, [r4, #16]
     ecc:	mov	r3, #3
     ed0:	str	r3, [r4, #440]	; 0x1b8
     ed4:	mov	r0, #0
     ed8:	pop	{r4, pc}

00000edc <pcap_daq_shutdown>:
     edc:	push	{r4, lr}
     ee0:	mov	r4, r0
     ee4:	ldr	r0, [r0, #16]
     ee8:	cmp	r0, #0
     eec:	beq	ef4 <pcap_daq_shutdown+0x18>
     ef0:	bl	940 <pcap_close@plt>
     ef4:	ldr	r0, [r4]
     ef8:	cmp	r0, #0
     efc:	beq	f04 <pcap_daq_shutdown+0x28>
     f00:	bl	904 <free@plt>
     f04:	ldr	r0, [r4, #4]
     f08:	cmp	r0, #0
     f0c:	beq	f14 <pcap_daq_shutdown+0x38>
     f10:	bl	904 <free@plt>
     f14:	ldr	r0, [r4, #8]
     f18:	cmp	r0, #0
     f1c:	beq	f24 <pcap_daq_shutdown+0x48>
     f20:	bl	904 <free@plt>
     f24:	mov	r0, r4
     f28:	pop	{r4, lr}
     f2c:	b	904 <free@plt>

00000f30 <pcap_daq_breakloop>:
     f30:	ldr	r0, [r0, #16]
     f34:	cmp	r0, #0
     f38:	beq	f4c <pcap_daq_breakloop+0x1c>
     f3c:	push	{r4, lr}
     f40:	bl	970 <pcap_breakloop@plt>
     f44:	mov	r0, #0
     f48:	pop	{r4, pc}
     f4c:	mvn	r0, #0
     f50:	bx	lr

00000f54 <pcap_daq_acquire>:
     f54:	push	{r4, r5, r6, r7, r8, lr}
     f58:	mov	r4, r0
     f5c:	ldr	r8, [pc, #180]	; 1018 <pcap_daq_acquire+0xc4>
     f60:	ldr	r3, [sp, #24]
     f64:	mov	r6, r1
     f68:	mvn	r7, #0
     f6c:	add	r8, pc, r8
     f70:	str	r3, [r0, #300]	; 0x12c
     f74:	mov	r3, #0
     f78:	str	r2, [r0, #296]	; 0x128
     f7c:	str	r3, [r0, #288]	; 0x120
     f80:	ldr	r1, [r4, #288]	; 0x120
     f84:	cmp	r1, r6
     f88:	cmpge	r6, #0
     f8c:	bgt	1008 <pcap_daq_acquire+0xb4>
     f90:	cmp	r6, #0
     f94:	subgt	r1, r6, r1
     f98:	movle	r1, r7
     f9c:	ldr	r0, [r4, #16]
     fa0:	mov	r3, r4
     fa4:	mov	r2, r8
     fa8:	bl	a3c <pcap_dispatch@plt>
     fac:	cmn	r0, #1
     fb0:	mov	r5, r0
     fb4:	bne	fe0 <pcap_daq_acquire+0x8c>
     fb8:	ldr	r0, [r4, #16]
     fbc:	bl	988 <pcap_geterr@plt>
     fc0:	ldr	r2, [pc, #84]	; 101c <pcap_daq_acquire+0xc8>
     fc4:	mov	r1, #256	; 0x100
     fc8:	add	r2, pc, r2
     fcc:	mov	r3, r0
     fd0:	add	r0, r4, #20
     fd4:	bl	9c4 <snprintf@plt>
     fd8:	mov	r0, r5
     fdc:	pop	{r4, r5, r6, r7, r8, pc}
     fe0:	ldr	r3, [r4, #4]
     fe4:	adds	r3, r3, #0
     fe8:	movne	r3, #1
     fec:	cmp	r0, #0
     ff0:	movne	r3, #0
     ff4:	cmp	r3, #0
     ff8:	bne	1010 <pcap_daq_acquire+0xbc>
     ffc:	add	r5, r0, #2
    1000:	bics	r3, r5, #2
    1004:	bne	f80 <pcap_daq_acquire+0x2c>
    1008:	mov	r5, #0
    100c:	b	fd8 <pcap_daq_acquire+0x84>
    1010:	mvn	r5, #41	; 0x29
    1014:	b	fd8 <pcap_daq_acquire+0x84>
    1018:	.word	0xfffffc54
    101c:	.word	0x0000095e

00001020 <pcap_daq_set_filter>:
    1020:	push	{r4, r5, r6, r7, lr}
    1024:	mov	r4, r0
    1028:	ldr	r0, [r0, #16]
    102c:	sub	sp, sp, #20
    1030:	cmp	r0, #0
    1034:	mov	r6, r1
    1038:	beq	10dc <pcap_daq_set_filter+0xbc>
    103c:	ldr	r3, [r4, #304]	; 0x130
    1040:	add	r5, sp, #8
    1044:	str	r3, [sp]
    1048:	mov	r2, r1
    104c:	mov	r3, #1
    1050:	mov	r1, r5
    1054:	bl	9e8 <pcap_compile@plt>
    1058:	cmp	r0, #0
    105c:	bge	1094 <pcap_daq_set_filter+0x74>
    1060:	ldr	r0, [r4, #16]
    1064:	bl	988 <pcap_geterr@plt>
    1068:	ldr	r3, [pc, #304]	; 11a0 <pcap_daq_set_filter+0x180>
    106c:	ldr	r2, [pc, #304]	; 11a4 <pcap_daq_set_filter+0x184>
    1070:	add	r3, pc, r3
    1074:	add	r2, pc, r2
    1078:	str	r0, [sp]
    107c:	mov	r1, #256	; 0x100
    1080:	add	r0, r4, #20
    1084:	bl	9c4 <snprintf@plt>
    1088:	mvn	r0, #0
    108c:	add	sp, sp, #20
    1090:	pop	{r4, r5, r6, r7, pc}
    1094:	mov	r1, r5
    1098:	ldr	r0, [r4, #16]
    109c:	bl	8ec <pcap_setfilter@plt>
    10a0:	cmp	r0, #0
    10a4:	mov	r0, r5
    10a8:	bge	10d0 <pcap_daq_set_filter+0xb0>
    10ac:	bl	a00 <pcap_freecode@plt>
    10b0:	ldr	r0, [r4, #16]
    10b4:	bl	988 <pcap_geterr@plt>
    10b8:	ldr	r3, [pc, #232]	; 11a8 <pcap_daq_set_filter+0x188>
    10bc:	ldr	r2, [pc, #232]	; 11ac <pcap_daq_set_filter+0x18c>
    10c0:	add	r3, pc, r3
    10c4:	add	r2, pc, r2
    10c8:	str	r0, [sp]
    10cc:	b	107c <pcap_daq_set_filter+0x5c>
    10d0:	bl	a00 <pcap_freecode@plt>
    10d4:	mov	r0, #0
    10d8:	b	108c <pcap_daq_set_filter+0x6c>
    10dc:	ldr	r1, [r4, #12]
    10e0:	mov	r0, #1
    10e4:	bl	958 <pcap_open_dead@plt>
    10e8:	subs	r5, r0, #0
    10ec:	bne	1114 <pcap_daq_set_filter+0xf4>
    10f0:	ldr	r3, [pc, #184]	; 11b0 <pcap_daq_set_filter+0x190>
    10f4:	ldr	r2, [pc, #184]	; 11b4 <pcap_daq_set_filter+0x194>
    10f8:	add	r3, pc, r3
    10fc:	add	r2, pc, r2
    1100:	mov	r1, #256	; 0x100
    1104:	add	r0, r4, #20
    1108:	bl	9c4 <snprintf@plt>
    110c:	mvn	r0, #1
    1110:	b	108c <pcap_daq_set_filter+0x6c>
    1114:	ldr	r3, [r4, #304]	; 0x130
    1118:	add	r7, sp, #8
    111c:	str	r3, [sp]
    1120:	mov	r2, r6
    1124:	mov	r3, #1
    1128:	mov	r1, r7
    112c:	bl	9e8 <pcap_compile@plt>
    1130:	cmp	r0, #0
    1134:	bge	1158 <pcap_daq_set_filter+0x138>
    1138:	mov	r0, r5
    113c:	bl	988 <pcap_geterr@plt>
    1140:	ldr	r3, [pc, #112]	; 11b8 <pcap_daq_set_filter+0x198>
    1144:	ldr	r2, [pc, #112]	; 11bc <pcap_daq_set_filter+0x19c>
    1148:	add	r3, pc, r3
    114c:	add	r2, pc, r2
    1150:	str	r0, [sp]
    1154:	b	107c <pcap_daq_set_filter+0x5c>
    1158:	mov	r0, r7
    115c:	bl	a00 <pcap_freecode@plt>
    1160:	mov	r0, r5
    1164:	bl	940 <pcap_close@plt>
    1168:	ldr	r0, [r4, #8]
    116c:	cmp	r0, #0
    1170:	beq	1178 <pcap_daq_set_filter+0x158>
    1174:	bl	904 <free@plt>
    1178:	mov	r0, r6
    117c:	bl	928 <strdup@plt>
    1180:	cmp	r0, #0
    1184:	str	r0, [r4, #8]
    1188:	bne	10d4 <pcap_daq_set_filter+0xb4>
    118c:	ldr	r3, [pc, #44]	; 11c0 <pcap_daq_set_filter+0x1a0>
    1190:	ldr	r2, [pc, #44]	; 11c4 <pcap_daq_set_filter+0x1a4>
    1194:	add	r3, pc, r3
    1198:	add	r2, pc, r2
    119c:	b	1100 <pcap_daq_set_filter+0xe0>
    11a0:	.word	0x0000087c
    11a4:	.word	0x000008a0
    11a8:	.word	0x0000082c
    11ac:	.word	0x00000865
    11b0:	.word	0x000007f4
    11b4:	.word	0x00000844
    11b8:	.word	0x000007a4
    11bc:	.word	0x000007c8
    11c0:	.word	0x00000758
    11c4:	.word	0x000007d3

000011c8 <pcap_daq_inject>:
    11c8:	push	{r4, lr}
    11cc:	mov	r1, r2
    11d0:	mov	r4, r0
    11d4:	mov	r2, r3
    11d8:	ldr	r0, [r0, #16]
    11dc:	bl	9dc <pcap_inject@plt>
    11e0:	cmp	r0, #0
    11e4:	bge	1210 <pcap_daq_inject+0x48>
    11e8:	ldr	r0, [r4, #16]
    11ec:	bl	988 <pcap_geterr@plt>
    11f0:	ldr	r2, [pc, #52]	; 122c <pcap_daq_inject+0x64>
    11f4:	mov	r1, #256	; 0x100
    11f8:	add	r2, pc, r2
    11fc:	mov	r3, r0
    1200:	add	r0, r4, #20
    1204:	bl	9c4 <snprintf@plt>
    1208:	mvn	r0, #0
    120c:	pop	{r4, pc}
    1210:	add	r4, r4, #352	; 0x160
    1214:	mov	r0, #0
    1218:	ldrd	r2, [r4, #-8]
    121c:	adds	r2, r2, #1
    1220:	adc	r3, r3, #0
    1224:	strd	r2, [r4, #-8]
    1228:	pop	{r4, pc}
    122c:	.word	0x0000072e

00001230 <pcap_daq_open.part.1>:
    1230:	push	{r0, r1, r2, r3, r4, r5, r6, lr}
    1234:	mov	r5, r0
    1238:	mov	r4, r0
    123c:	ldr	r0, [r5], #20
    1240:	cmp	r0, #0
    1244:	mov	r1, r5
    1248:	beq	12f0 <pcap_daq_open.part.1+0xc0>
    124c:	bl	934 <pcap_create@plt>
    1250:	cmp	r0, #0
    1254:	str	r0, [r4, #16]
    1258:	bne	1264 <pcap_daq_open.part.1+0x34>
    125c:	mvn	r0, #0
    1260:	b	12e8 <pcap_daq_open.part.1+0xb8>
    1264:	ldr	r1, [r4, #12]
    1268:	bl	964 <pcap_set_snaplen@plt>
    126c:	cmp	r0, #0
    1270:	blt	1308 <pcap_daq_open.part.1+0xd8>
    1274:	ldr	r1, [r4, #276]	; 0x114
    1278:	ldr	r0, [r4, #16]
    127c:	adds	r1, r1, #0
    1280:	movne	r1, #1
    1284:	bl	994 <pcap_set_promisc@plt>
    1288:	cmp	r0, #0
    128c:	blt	1308 <pcap_daq_open.part.1+0xd8>
    1290:	ldr	r1, [r4, #280]	; 0x118
    1294:	ldr	r0, [r4, #16]
    1298:	bl	91c <pcap_set_timeout@plt>
    129c:	cmp	r0, #0
    12a0:	blt	1308 <pcap_daq_open.part.1+0xd8>
    12a4:	ldr	r1, [r4, #284]	; 0x11c
    12a8:	ldr	r0, [r4, #16]
    12ac:	bl	a48 <pcap_set_buffer_size@plt>
    12b0:	cmp	r0, #0
    12b4:	blt	1308 <pcap_daq_open.part.1+0xd8>
    12b8:	ldr	r0, [r4, #16]
    12bc:	bl	8d4 <pcap_activate@plt>
    12c0:	cmp	r0, #0
    12c4:	blt	1308 <pcap_daq_open.part.1+0xd8>
    12c8:	mov	r3, r5
    12cc:	add	r2, sp, #12
    12d0:	add	r1, sp, #8
    12d4:	ldr	r0, [r4]
    12d8:	bl	a24 <pcap_lookupnet@plt>
    12dc:	mov	r0, #0
    12e0:	mvn	r3, #-16777216	; 0xff000000
    12e4:	str	r3, [r4, #304]	; 0x130
    12e8:	add	sp, sp, #16
    12ec:	pop	{r4, r5, r6, pc}
    12f0:	ldr	r0, [r4, #4]
    12f4:	bl	9a0 <pcap_open_offline@plt>
    12f8:	cmp	r0, #0
    12fc:	str	r0, [r4, #16]
    1300:	bne	12dc <pcap_daq_open.part.1+0xac>
    1304:	b	125c <pcap_daq_open.part.1+0x2c>
    1308:	bic	r3, r0, #4
    130c:	cmn	r3, #5
    1310:	cmnne	r0, #8
    1314:	bne	134c <pcap_daq_open.part.1+0x11c>
    1318:	ldr	r0, [r4, #16]
    131c:	bl	988 <pcap_geterr@plt>
    1320:	ldr	r2, [pc, #76]	; 1374 <pcap_daq_open.part.1+0x144>
    1324:	mov	r1, #256	; 0x100
    1328:	add	r2, pc, r2
    132c:	mov	r3, r0
    1330:	mov	r0, r5
    1334:	bl	9c4 <snprintf@plt>
    1338:	ldr	r0, [r4, #16]
    133c:	bl	940 <pcap_close@plt>
    1340:	mov	r3, #0
    1344:	str	r3, [r4, #16]
    1348:	b	125c <pcap_daq_open.part.1+0x2c>
    134c:	ldr	r6, [r4]
    1350:	bl	a0c <pcap_statustostr@plt>
    1354:	ldr	r2, [pc, #28]	; 1378 <pcap_daq_open.part.1+0x148>
    1358:	mov	r3, r6
    135c:	add	r2, pc, r2
    1360:	mov	r1, #256	; 0x100
    1364:	str	r0, [sp]
    1368:	mov	r0, r5
    136c:	bl	9c4 <snprintf@plt>
    1370:	b	1338 <pcap_daq_open.part.1+0x108>
    1374:	.word	0x000005fe
    1378:	.word	0x00000652

0000137c <pcap_daq_initialize>:
    137c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1380:	sub	sp, sp, #20
    1384:	mov	r5, r0
    1388:	str	r1, [sp, #12]
    138c:	mov	r0, #1
    1390:	mov	r1, #448	; 0x1c0
    1394:	mov	r8, r2
    1398:	mov	r9, r3
    139c:	bl	8a4 <calloc@plt>
    13a0:	subs	r4, r0, #0
    13a4:	bne	13d4 <pcap_daq_initialize+0x58>
    13a8:	ldr	r3, [pc, #592]	; 1600 <pcap_daq_initialize+0x284>
    13ac:	ldr	r2, [pc, #592]	; 1604 <pcap_daq_initialize+0x288>
    13b0:	add	r3, pc, r3
    13b4:	add	r3, r3, #20
    13b8:	add	r2, pc, r2
    13bc:	mov	r1, r9
    13c0:	mov	r0, r8
    13c4:	bl	9c4 <snprintf@plt>
    13c8:	mvn	r0, #1
    13cc:	add	sp, sp, #20
    13d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    13d4:	ldr	r3, [r5, #4]
    13d8:	ldr	r6, [pc, #552]	; 1608 <pcap_daq_initialize+0x28c>
    13dc:	str	r3, [r4, #12]
    13e0:	ldr	r3, [r5, #16]
    13e4:	ldr	fp, [r5, #20]
    13e8:	and	r3, r3, #1
    13ec:	str	r3, [r4, #276]	; 0x114
    13f0:	add	r6, pc, r6
    13f4:	ldr	r3, [r5, #8]
    13f8:	mov	r7, #10
    13fc:	mov	sl, #0
    1400:	str	r3, [r4, #280]	; 0x118
    1404:	cmp	fp, #0
    1408:	bne	1528 <pcap_daq_initialize+0x1ac>
    140c:	ldr	sl, [r4, #284]	; 0x11c
    1410:	cmp	sl, #0
    1414:	bne	14d8 <pcap_daq_initialize+0x15c>
    1418:	ldr	r0, [pc, #492]	; 160c <pcap_daq_initialize+0x290>
    141c:	ldr	r6, [r4, #12]
    1420:	add	r0, pc, r0
    1424:	bl	97c <getenv@plt>
    1428:	subs	fp, r0, #0
    142c:	beq	14d4 <pcap_daq_initialize+0x158>
    1430:	bl	9b8 <getpagesize@plt>
    1434:	add	r6, r6, #99	; 0x63
    1438:	bic	r6, r6, #15
    143c:	mov	r7, r0
    1440:	cmp	r6, r7
    1444:	bgt	1558 <pcap_daq_initialize+0x1dc>
    1448:	mov	r1, r6
    144c:	mov	r0, r7
    1450:	bl	169c <__divsi3>
    1454:	ldr	r1, [pc, #436]	; 1610 <pcap_daq_initialize+0x294>
    1458:	mov	r2, #3
    145c:	add	r1, pc, r1
    1460:	str	r0, [sp, #8]
    1464:	mov	r0, fp
    1468:	bl	a30 <strncmp@plt>
    146c:	cmp	r0, #0
    1470:	beq	1560 <pcap_daq_initialize+0x1e4>
    1474:	ldr	r1, [pc, #408]	; 1614 <pcap_daq_initialize+0x298>
    1478:	mov	r2, #3
    147c:	add	r1, pc, r1
    1480:	mov	r0, fp
    1484:	bl	a30 <strncmp@plt>
    1488:	cmp	r0, #0
    148c:	beq	1560 <pcap_daq_initialize+0x1e4>
    1490:	mov	r0, fp
    1494:	mov	r2, #10
    1498:	mov	r1, #0
    149c:	bl	8e0 <strtol@plt>
    14a0:	mov	fp, r0
    14a4:	ldr	r1, [sp, #8]
    14a8:	mul	r0, fp, r7
    14ac:	bl	169c <__divsi3>
    14b0:	str	r6, [sp, #4]
    14b4:	ldr	r3, [sp, #8]
    14b8:	mov	r2, r7
    14bc:	mov	r1, fp
    14c0:	mov	sl, r0
    14c4:	str	r0, [sp]
    14c8:	ldr	r0, [pc, #328]	; 1618 <pcap_daq_initialize+0x29c>
    14cc:	add	r0, pc, r0
    14d0:	bl	8f8 <printf@plt>
    14d4:	str	sl, [r4, #284]	; 0x11c
    14d8:	ldr	r3, [r5, #12]
    14dc:	ldr	r0, [r5]
    14e0:	cmp	r3, #2
    14e4:	bne	1568 <pcap_daq_initialize+0x1ec>
    14e8:	bl	928 <strdup@plt>
    14ec:	cmp	r0, #0
    14f0:	str	r0, [r4, #4]
    14f4:	movne	r3, #0
    14f8:	bne	1594 <pcap_daq_initialize+0x218>
    14fc:	ldr	r3, [pc, #280]	; 161c <pcap_daq_initialize+0x2a0>
    1500:	ldr	r2, [pc, #280]	; 1620 <pcap_daq_initialize+0x2a4>
    1504:	add	r3, pc, r3
    1508:	add	r3, r3, #20
    150c:	add	r2, pc, r2
    1510:	mov	r1, r9
    1514:	mov	r0, r8
    1518:	bl	9c4 <snprintf@plt>
    151c:	mov	r0, r4
    1520:	bl	904 <free@plt>
    1524:	b	13c8 <pcap_daq_initialize+0x4c>
    1528:	mov	r1, r6
    152c:	ldr	r0, [fp]
    1530:	bl	8bc <strcmp@plt>
    1534:	cmp	r0, #0
    1538:	bne	1550 <pcap_daq_initialize+0x1d4>
    153c:	mov	r2, r7
    1540:	mov	r1, sl
    1544:	ldr	r0, [fp, #4]
    1548:	bl	8e0 <strtol@plt>
    154c:	str	r0, [r4, #284]	; 0x11c
    1550:	ldr	fp, [fp, #8]
    1554:	b	1404 <pcap_daq_initialize+0x88>
    1558:	lsl	r7, r7, #1
    155c:	b	1440 <pcap_daq_initialize+0xc4>
    1560:	mov	fp, #32768	; 0x8000
    1564:	b	14a4 <pcap_daq_initialize+0x128>
    1568:	bl	928 <strdup@plt>
    156c:	cmp	r0, #0
    1570:	str	r0, [r4]
    1574:	movne	r3, #1
    1578:	bne	1594 <pcap_daq_initialize+0x218>
    157c:	ldr	r3, [pc, #160]	; 1624 <pcap_daq_initialize+0x2a8>
    1580:	ldr	r2, [pc, #160]	; 1628 <pcap_daq_initialize+0x2ac>
    1584:	add	r3, pc, r3
    1588:	add	r3, r3, #20
    158c:	add	r2, pc, r2
    1590:	b	1510 <pcap_daq_initialize+0x194>
    1594:	str	r3, [r4, #292]	; 0x124
    1598:	ldr	r3, [r4, #292]	; 0x124
    159c:	cmp	r3, #0
    15a0:	bne	15e8 <pcap_daq_initialize+0x26c>
    15a4:	ldr	r3, [r4, #16]
    15a8:	cmp	r3, #0
    15ac:	bne	15e8 <pcap_daq_initialize+0x26c>
    15b0:	mov	r0, r4
    15b4:	bl	1230 <pcap_daq_open.part.1>
    15b8:	cmp	r0, #0
    15bc:	beq	15e8 <pcap_daq_initialize+0x26c>
    15c0:	ldr	r2, [pc, #100]	; 162c <pcap_daq_initialize+0x2b0>
    15c4:	add	r3, r4, #20
    15c8:	add	r2, pc, r2
    15cc:	mov	r1, r9
    15d0:	mov	r0, r8
    15d4:	bl	9c4 <snprintf@plt>
    15d8:	mov	r0, r4
    15dc:	bl	904 <free@plt>
    15e0:	mvn	r0, #0
    15e4:	b	13cc <pcap_daq_initialize+0x50>
    15e8:	mov	r3, #1
    15ec:	str	r3, [r4, #440]	; 0x1b8
    15f0:	ldr	r3, [sp, #12]
    15f4:	mov	r0, #0
    15f8:	str	r4, [r3]
    15fc:	b	13cc <pcap_daq_initialize+0x50>
    1600:	.word	0x0000053c
    1604:	.word	0x000005fd
    1608:	.word	0x000005fc
    160c:	.word	0x000005d8
    1610:	.word	0x000005a8
    1614:	.word	0x0000058c
    1618:	.word	0x00000540
    161c:	.word	0x000003e8
    1620:	.word	0x00000527
    1624:	.word	0x00000368
    1628:	.word	0x000004dd
    162c:	.word	0x0000035e

00001630 <pcap_daq_start>:
    1630:	push	{r4, r5, r6, lr}
    1634:	mov	r4, r0
    1638:	ldr	r3, [r0, #16]
    163c:	cmp	r3, #0
    1640:	beq	1668 <pcap_daq_start+0x38>
    1644:	mov	r0, r4
    1648:	bl	cf0 <pcap_daq_reset_stats>
    164c:	ldr	r1, [r4, #8]
    1650:	cmp	r1, #0
    1654:	bne	167c <pcap_daq_start+0x4c>
    1658:	mov	r3, #2
    165c:	str	r3, [r4, #440]	; 0x1b8
    1660:	mov	r0, #0
    1664:	pop	{r4, r5, r6, pc}
    1668:	bl	1230 <pcap_daq_open.part.1>
    166c:	cmp	r0, #0
    1670:	beq	1644 <pcap_daq_start+0x14>
    1674:	mvn	r0, #0
    1678:	pop	{r4, r5, r6, pc}
    167c:	mov	r0, r4
    1680:	bl	1020 <pcap_daq_set_filter>
    1684:	subs	r5, r0, #0
    1688:	bne	1674 <pcap_daq_start+0x44>
    168c:	ldr	r0, [r4, #8]
    1690:	bl	904 <free@plt>
    1694:	str	r5, [r4, #8]
    1698:	b	1658 <pcap_daq_start+0x28>

0000169c <__divsi3>:
    169c:	cmp	r1, #0
    16a0:	beq	18ac <.divsi3_skip_div0_test+0x208>

000016a4 <.divsi3_skip_div0_test>:
    16a4:	eor	ip, r0, r1
    16a8:	rsbmi	r1, r1, #0
    16ac:	subs	r2, r1, #1
    16b0:	beq	1878 <.divsi3_skip_div0_test+0x1d4>
    16b4:	movs	r3, r0
    16b8:	rsbmi	r3, r0, #0
    16bc:	cmp	r3, r1
    16c0:	bls	1884 <.divsi3_skip_div0_test+0x1e0>
    16c4:	tst	r1, r2
    16c8:	beq	1894 <.divsi3_skip_div0_test+0x1f0>
    16cc:	clz	r2, r3
    16d0:	clz	r0, r1
    16d4:	sub	r2, r0, r2
    16d8:	rsbs	r2, r2, #31
    16dc:	addne	r2, r2, r2, lsl #1
    16e0:	mov	r0, #0
    16e4:	addne	pc, pc, r2, lsl #2
    16e8:	nop			; (mov r0, r0)
    16ec:	cmp	r3, r1, lsl #31
    16f0:	adc	r0, r0, r0
    16f4:	subcs	r3, r3, r1, lsl #31
    16f8:	cmp	r3, r1, lsl #30
    16fc:	adc	r0, r0, r0
    1700:	subcs	r3, r3, r1, lsl #30
    1704:	cmp	r3, r1, lsl #29
    1708:	adc	r0, r0, r0
    170c:	subcs	r3, r3, r1, lsl #29
    1710:	cmp	r3, r1, lsl #28
    1714:	adc	r0, r0, r0
    1718:	subcs	r3, r3, r1, lsl #28
    171c:	cmp	r3, r1, lsl #27
    1720:	adc	r0, r0, r0
    1724:	subcs	r3, r3, r1, lsl #27
    1728:	cmp	r3, r1, lsl #26
    172c:	adc	r0, r0, r0
    1730:	subcs	r3, r3, r1, lsl #26
    1734:	cmp	r3, r1, lsl #25
    1738:	adc	r0, r0, r0
    173c:	subcs	r3, r3, r1, lsl #25
    1740:	cmp	r3, r1, lsl #24
    1744:	adc	r0, r0, r0
    1748:	subcs	r3, r3, r1, lsl #24
    174c:	cmp	r3, r1, lsl #23
    1750:	adc	r0, r0, r0
    1754:	subcs	r3, r3, r1, lsl #23
    1758:	cmp	r3, r1, lsl #22
    175c:	adc	r0, r0, r0
    1760:	subcs	r3, r3, r1, lsl #22
    1764:	cmp	r3, r1, lsl #21
    1768:	adc	r0, r0, r0
    176c:	subcs	r3, r3, r1, lsl #21
    1770:	cmp	r3, r1, lsl #20
    1774:	adc	r0, r0, r0
    1778:	subcs	r3, r3, r1, lsl #20
    177c:	cmp	r3, r1, lsl #19
    1780:	adc	r0, r0, r0
    1784:	subcs	r3, r3, r1, lsl #19
    1788:	cmp	r3, r1, lsl #18
    178c:	adc	r0, r0, r0
    1790:	subcs	r3, r3, r1, lsl #18
    1794:	cmp	r3, r1, lsl #17
    1798:	adc	r0, r0, r0
    179c:	subcs	r3, r3, r1, lsl #17
    17a0:	cmp	r3, r1, lsl #16
    17a4:	adc	r0, r0, r0
    17a8:	subcs	r3, r3, r1, lsl #16
    17ac:	cmp	r3, r1, lsl #15
    17b0:	adc	r0, r0, r0
    17b4:	subcs	r3, r3, r1, lsl #15
    17b8:	cmp	r3, r1, lsl #14
    17bc:	adc	r0, r0, r0
    17c0:	subcs	r3, r3, r1, lsl #14
    17c4:	cmp	r3, r1, lsl #13
    17c8:	adc	r0, r0, r0
    17cc:	subcs	r3, r3, r1, lsl #13
    17d0:	cmp	r3, r1, lsl #12
    17d4:	adc	r0, r0, r0
    17d8:	subcs	r3, r3, r1, lsl #12
    17dc:	cmp	r3, r1, lsl #11
    17e0:	adc	r0, r0, r0
    17e4:	subcs	r3, r3, r1, lsl #11
    17e8:	cmp	r3, r1, lsl #10
    17ec:	adc	r0, r0, r0
    17f0:	subcs	r3, r3, r1, lsl #10
    17f4:	cmp	r3, r1, lsl #9
    17f8:	adc	r0, r0, r0
    17fc:	subcs	r3, r3, r1, lsl #9
    1800:	cmp	r3, r1, lsl #8
    1804:	adc	r0, r0, r0
    1808:	subcs	r3, r3, r1, lsl #8
    180c:	cmp	r3, r1, lsl #7
    1810:	adc	r0, r0, r0
    1814:	subcs	r3, r3, r1, lsl #7
    1818:	cmp	r3, r1, lsl #6
    181c:	adc	r0, r0, r0
    1820:	subcs	r3, r3, r1, lsl #6
    1824:	cmp	r3, r1, lsl #5
    1828:	adc	r0, r0, r0
    182c:	subcs	r3, r3, r1, lsl #5
    1830:	cmp	r3, r1, lsl #4
    1834:	adc	r0, r0, r0
    1838:	subcs	r3, r3, r1, lsl #4
    183c:	cmp	r3, r1, lsl #3
    1840:	adc	r0, r0, r0
    1844:	subcs	r3, r3, r1, lsl #3
    1848:	cmp	r3, r1, lsl #2
    184c:	adc	r0, r0, r0
    1850:	subcs	r3, r3, r1, lsl #2
    1854:	cmp	r3, r1, lsl #1
    1858:	adc	r0, r0, r0
    185c:	subcs	r3, r3, r1, lsl #1
    1860:	cmp	r3, r1
    1864:	adc	r0, r0, r0
    1868:	subcs	r3, r3, r1
    186c:	cmp	ip, #0
    1870:	rsbmi	r0, r0, #0
    1874:	bx	lr
    1878:	teq	ip, r0
    187c:	rsbmi	r0, r0, #0
    1880:	bx	lr
    1884:	movcc	r0, #0
    1888:	asreq	r0, ip, #31
    188c:	orreq	r0, r0, #1
    1890:	bx	lr
    1894:	clz	r2, r1
    1898:	rsb	r2, r2, #31
    189c:	cmp	ip, #0
    18a0:	lsr	r0, r3, r2
    18a4:	rsbmi	r0, r0, #0
    18a8:	bx	lr
    18ac:	cmp	r0, #0
    18b0:	mvngt	r0, #-2147483648	; 0x80000000
    18b4:	movlt	r0, #-2147483648	; 0x80000000
    18b8:	b	18dc <__aeabi_idiv0>

000018bc <__aeabi_idivmod>:
    18bc:	cmp	r1, #0
    18c0:	beq	18ac <.divsi3_skip_div0_test+0x208>
    18c4:	push	{r0, r1, lr}
    18c8:	bl	16a4 <.divsi3_skip_div0_test>
    18cc:	pop	{r1, r2, lr}
    18d0:	mul	r3, r2, r0
    18d4:	sub	r1, r1, r3
    18d8:	bx	lr

000018dc <__aeabi_idiv0>:
    18dc:	push	{r1, lr}
    18e0:	mov	r0, #8
    18e4:	bl	8b0 <raise@plt>
    18e8:	pop	{r1, pc}

Disassembly of section .fini:

000018ec <_fini>:
    18ec:	push	{r3, lr}
    18f0:	pop	{r3, pc}
