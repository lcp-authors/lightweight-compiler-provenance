
../repos/dvidelabs-flatcc-3b39ef7/bin/flatcc:     file format elf32-littlearm


Disassembly of section .init:

00013f84 <.init>:
   13f84:	push	{r3, lr}
   13f88:	bl	146ec <_start@@Base+0x3c>
   13f8c:	pop	{r3, pc}

Disassembly of section .plt:

00013f90 <calloc@plt-0x14>:
   13f90:	push	{lr}		; (str lr, [sp, #-4]!)
   13f94:	ldr	lr, [pc, #4]	; 13fa0 <calloc@plt-0x4>
   13f98:	add	lr, pc, lr
   13f9c:	ldr	pc, [lr, #8]!
   13fa0:	andeq	fp, r5, r0, rrx

00013fa4 <calloc@plt>:
   13fa4:	add	ip, pc, #0, 12
   13fa8:	add	ip, ip, #372736	; 0x5b000
   13fac:	ldr	pc, [ip, #96]!	; 0x60

00013fb0 <raise@plt>:
   13fb0:	add	ip, pc, #0, 12
   13fb4:	add	ip, ip, #372736	; 0x5b000
   13fb8:	ldr	pc, [ip, #88]!	; 0x58

00013fbc <strcmp@plt>:
   13fbc:	add	ip, pc, #0, 12
   13fc0:	add	ip, ip, #372736	; 0x5b000
   13fc4:	ldr	pc, [ip, #80]!	; 0x50

00013fc8 <fopen@plt>:
   13fc8:	add	ip, pc, #0, 12
   13fcc:	add	ip, ip, #372736	; 0x5b000
   13fd0:	ldr	pc, [ip, #72]!	; 0x48

00013fd4 <free@plt>:
   13fd4:	add	ip, pc, #0, 12
   13fd8:	add	ip, ip, #372736	; 0x5b000
   13fdc:	ldr	pc, [ip, #64]!	; 0x40

00013fe0 <memcpy@plt>:
   13fe0:	add	ip, pc, #0, 12
   13fe4:	add	ip, ip, #372736	; 0x5b000
   13fe8:	ldr	pc, [ip, #56]!	; 0x38

00013fec <ftell@plt>:
   13fec:	add	ip, pc, #0, 12
   13ff0:	add	ip, ip, #372736	; 0x5b000
   13ff4:	ldr	pc, [ip, #48]!	; 0x30

00013ff8 <memcmp@plt>:
   13ff8:	add	ip, pc, #0, 12
   13ffc:	add	ip, ip, #372736	; 0x5b000
   14000:	ldr	pc, [ip, #40]!	; 0x28

00014004 <rewind@plt>:
   14004:	add	ip, pc, #0, 12
   14008:	add	ip, ip, #372736	; 0x5b000
   1400c:	ldr	pc, [ip, #32]!

00014010 <realloc@plt>:
   14010:	add	ip, pc, #0, 12
   14014:	add	ip, ip, #372736	; 0x5b000
   14018:	ldr	pc, [ip, #24]!

0001401c <fwrite@plt>:
   1401c:	add	ip, pc, #0, 12
   14020:	add	ip, ip, #372736	; 0x5b000
   14024:	ldr	pc, [ip, #16]!

00014028 <fread@plt>:
   14028:	add	ip, pc, #0, 12
   1402c:	add	ip, ip, #372736	; 0x5b000
   14030:	ldr	pc, [ip, #8]!

00014034 <puts@plt>:
   14034:	add	ip, pc, #0, 12
   14038:	add	ip, ip, #372736	; 0x5b000
   1403c:	ldr	pc, [ip, #0]!

00014040 <malloc@plt>:
   14040:	add	ip, pc, #0, 12
   14044:	add	ip, ip, #368640	; 0x5a000
   14048:	ldr	pc, [ip, #4088]!	; 0xff8

0001404c <__libc_start_main@plt>:
   1404c:	add	ip, pc, #0, 12
   14050:	add	ip, ip, #368640	; 0x5a000
   14054:	ldr	pc, [ip, #4080]!	; 0xff0

00014058 <__ctype_toupper_loc@plt>:
   14058:	add	ip, pc, #0, 12
   1405c:	add	ip, ip, #368640	; 0x5a000
   14060:	ldr	pc, [ip, #4072]!	; 0xfe8

00014064 <__gmon_start__@plt>:
   14064:	add	ip, pc, #0, 12
   14068:	add	ip, ip, #368640	; 0x5a000
   1406c:	ldr	pc, [ip, #4064]!	; 0xfe0

00014070 <exit@plt>:
   14070:	add	ip, pc, #0, 12
   14074:	add	ip, ip, #368640	; 0x5a000
   14078:	ldr	pc, [ip, #4056]!	; 0xfd8

0001407c <strlen@plt>:
   1407c:	add	ip, pc, #0, 12
   14080:	add	ip, ip, #368640	; 0x5a000
   14084:	ldr	pc, [ip, #4048]!	; 0xfd0

00014088 <strchr@plt>:
   14088:	add	ip, pc, #0, 12
   1408c:	add	ip, ip, #368640	; 0x5a000
   14090:	ldr	pc, [ip, #4040]!	; 0xfc8

00014094 <fprintf@plt>:
   14094:	add	ip, pc, #0, 12
   14098:	add	ip, ip, #368640	; 0x5a000
   1409c:	ldr	pc, [ip, #4032]!	; 0xfc0

000140a0 <posix_memalign@plt>:
   140a0:	add	ip, pc, #0, 12
   140a4:	add	ip, ip, #368640	; 0x5a000
   140a8:	ldr	pc, [ip, #4024]!	; 0xfb8

000140ac <memset@plt>:
   140ac:	add	ip, pc, #0, 12
   140b0:	add	ip, ip, #368640	; 0x5a000
   140b4:	ldr	pc, [ip, #4016]!	; 0xfb0

000140b8 <strncpy@plt>:
   140b8:	add	ip, pc, #0, 12
   140bc:	add	ip, ip, #368640	; 0x5a000
   140c0:	ldr	pc, [ip, #4008]!	; 0xfa8

000140c4 <strtod@plt>:
   140c4:	add	ip, pc, #0, 12
   140c8:	add	ip, ip, #368640	; 0x5a000
   140cc:	ldr	pc, [ip, #4000]!	; 0xfa0

000140d0 <memchr@plt>:
   140d0:	add	ip, pc, #0, 12
   140d4:	add	ip, ip, #368640	; 0x5a000
   140d8:	ldr	pc, [ip, #3992]!	; 0xf98

000140dc <fclose@plt>:
   140dc:	add	ip, pc, #0, 12
   140e0:	add	ip, ip, #368640	; 0x5a000
   140e4:	ldr	pc, [ip, #3984]!	; 0xf90

000140e8 <vfprintf@plt>:
   140e8:	add	ip, pc, #0, 12
   140ec:	add	ip, ip, #368640	; 0x5a000
   140f0:	ldr	pc, [ip, #3976]!	; 0xf88

000140f4 <fputc@plt>:
   140f4:	add	ip, pc, #0, 12
   140f8:	add	ip, ip, #368640	; 0x5a000
   140fc:	ldr	pc, [ip, #3968]!	; 0xf80

00014100 <sprintf@plt>:
   14100:	add	ip, pc, #0, 12
   14104:	add	ip, ip, #368640	; 0x5a000
   14108:	ldr	pc, [ip, #3960]!	; 0xf78

0001410c <vsnprintf@plt>:
   1410c:	add	ip, pc, #0, 12
   14110:	add	ip, ip, #368640	; 0x5a000
   14114:	ldr	pc, [ip, #3952]!	; 0xf70

00014118 <qsort@plt>:
   14118:	add	ip, pc, #0, 12
   1411c:	add	ip, ip, #368640	; 0x5a000
   14120:	ldr	pc, [ip, #3944]!	; 0xf68

00014124 <fseek@plt>:
   14124:	add	ip, pc, #0, 12
   14128:	add	ip, ip, #368640	; 0x5a000
   1412c:	ldr	pc, [ip, #3936]!	; 0xf60

00014130 <strncmp@plt>:
   14130:	add	ip, pc, #0, 12
   14134:	add	ip, ip, #368640	; 0x5a000
   14138:	ldr	pc, [ip, #3928]!	; 0xf58

0001413c <abort@plt>:
   1413c:	add	ip, pc, #0, 12
   14140:	add	ip, ip, #368640	; 0x5a000
   14144:	ldr	pc, [ip, #3920]!	; 0xf50

00014148 <__assert_fail@plt>:
   14148:	add	ip, pc, #0, 12
   1414c:	add	ip, ip, #368640	; 0x5a000
   14150:	ldr	pc, [ip, #3912]!	; 0xf48

Disassembly of section .text:

00014158 <main@@Base-0x1b0>:
   14158:	ldr	r3, [pc, #28]	; 1417c <__assert_fail@plt+0x34>
   1415c:	push	{r4, lr}
   14160:	mov	r2, #34	; 0x22
   14164:	mov	r1, #1
   14168:	ldr	r3, [r3]
   1416c:	ldr	r0, [pc, #12]	; 14180 <__assert_fail@plt+0x38>
   14170:	bl	1401c <fwrite@plt>
   14174:	mov	r0, #1
   14178:	bl	14070 <exit@plt>
   1417c:	andeq	pc, r6, r8, lsr #1
   14180:	andeq	r3, r4, r0, lsr lr
   14184:	push	{r4, lr}
   14188:	mov	r2, #195	; 0xc3
   1418c:	ldr	r3, [pc, #8]	; 1419c <__assert_fail@plt+0x54>
   14190:	ldr	r1, [pc, #8]	; 141a0 <__assert_fail@plt+0x58>
   14194:	ldr	r0, [pc, #8]	; 141a4 <__assert_fail@plt+0x5c>
   14198:	bl	14148 <__assert_fail@plt>
   1419c:	andeq	sl, r5, r4, ror #14
   141a0:	andeq	sl, r5, r8, lsl #17
   141a4:	andeq	sl, r5, r8, ror #17
   141a8:	ldr	r3, [pc, #28]	; 141cc <__assert_fail@plt+0x84>
   141ac:	push	{r4, lr}
   141b0:	mov	r2, #34	; 0x22
   141b4:	mov	r1, #1
   141b8:	ldr	r3, [r3]
   141bc:	ldr	r0, [pc, #12]	; 141d0 <__assert_fail@plt+0x88>
   141c0:	bl	1401c <fwrite@plt>
   141c4:	mov	r0, #1
   141c8:	bl	14070 <exit@plt>
   141cc:	andeq	pc, r6, r8, lsr #1
   141d0:	andeq	r3, r4, r0, lsr lr
   141d4:	push	{r4, lr}
   141d8:	mov	r2, #108	; 0x6c
   141dc:	ldr	r3, [pc, #8]	; 141ec <__assert_fail@plt+0xa4>
   141e0:	ldr	r1, [pc, #8]	; 141f0 <__assert_fail@plt+0xa8>
   141e4:	ldr	r0, [pc, #8]	; 141f4 <__assert_fail@plt+0xac>
   141e8:	bl	14148 <__assert_fail@plt>
   141ec:	andeq	fp, r5, r8, ror #24
   141f0:	strdeq	fp, [r5], -ip
   141f4:	andeq	fp, r5, r8, asr #28
   141f8:	push	{r4, lr}
   141fc:	mov	r2, #308	; 0x134
   14200:	ldr	r3, [pc, #8]	; 14210 <__assert_fail@plt+0xc8>
   14204:	ldr	r1, [pc, #8]	; 14214 <__assert_fail@plt+0xcc>
   14208:	ldr	r0, [pc, #8]	; 14218 <__assert_fail@plt+0xd0>
   1420c:	bl	14148 <__assert_fail@plt>
   14210:	andeq	sp, r5, ip, lsl #17
   14214:	ldrdeq	sp, [r5], -ip
   14218:	andeq	sp, r4, r4, ror r2
   1421c:	push	{r4, lr}
   14220:	ldr	r3, [pc, #12]	; 14234 <__assert_fail@plt+0xec>
   14224:	ldr	r2, [pc, #12]	; 14238 <__assert_fail@plt+0xf0>
   14228:	ldr	r1, [pc, #12]	; 1423c <__assert_fail@plt+0xf4>
   1422c:	ldr	r0, [pc, #12]	; 14240 <__assert_fail@plt+0xf8>
   14230:	bl	14148 <__assert_fail@plt>
   14234:	muleq	r5, ip, r8
   14238:	andeq	r0, r0, r1, lsr #5
   1423c:	ldrdeq	sp, [r5], -ip
   14240:	andeq	sp, r4, r4, ror r2
   14244:	push	{r4, lr}
   14248:	ldr	r3, [pc, #12]	; 1425c <__assert_fail@plt+0x114>
   1424c:	ldr	r2, [pc, #12]	; 14260 <__assert_fail@plt+0x118>
   14250:	ldr	r1, [pc, #12]	; 14264 <__assert_fail@plt+0x11c>
   14254:	ldr	r0, [pc, #12]	; 14268 <__assert_fail@plt+0x120>
   14258:	bl	14148 <__assert_fail@plt>
   1425c:	andeq	sp, r5, r8, lsr #17
   14260:	andeq	r0, r0, r7, lsl #5
   14264:	ldrdeq	sp, [r5], -ip
   14268:	andeq	sp, r4, r4, ror r2
   1426c:	push	{r4, lr}
   14270:	mov	r2, #892	; 0x37c
   14274:	ldr	r3, [pc, #8]	; 14284 <__assert_fail@plt+0x13c>
   14278:	ldr	r1, [pc, #8]	; 14288 <__assert_fail@plt+0x140>
   1427c:	ldr	r0, [pc, #8]	; 1428c <__assert_fail@plt+0x144>
   14280:	bl	14148 <__assert_fail@plt>
   14284:			; <UNDEFINED> instruction: 0x0005d8b4
   14288:	ldrdeq	sp, [r5], -ip
   1428c:	andeq	lr, r5, r4, lsr #32
   14290:	push	{r4, lr}
   14294:	ldr	r3, [pc, #12]	; 142a8 <__assert_fail@plt+0x160>
   14298:	ldr	r2, [pc, #12]	; 142ac <__assert_fail@plt+0x164>
   1429c:	ldr	r1, [pc, #12]	; 142b0 <__assert_fail@plt+0x168>
   142a0:	ldr	r0, [pc, #12]	; 142b4 <__assert_fail@plt+0x16c>
   142a4:	bl	14148 <__assert_fail@plt>
   142a8:	andeq	sp, r5, r8, asr #17
   142ac:	andeq	r0, r0, lr, lsl r2
   142b0:	ldrdeq	sp, [r5], -ip
   142b4:	andeq	lr, r5, r0, asr #32
   142b8:	push	{r4, lr}
   142bc:	ldr	r3, [pc, #12]	; 142d0 <__assert_fail@plt+0x188>
   142c0:	ldr	r2, [pc, #12]	; 142d4 <__assert_fail@plt+0x18c>
   142c4:	ldr	r1, [pc, #12]	; 142d8 <__assert_fail@plt+0x190>
   142c8:	ldr	r0, [pc, #12]	; 142dc <__assert_fail@plt+0x194>
   142cc:	bl	14148 <__assert_fail@plt>
   142d0:	andeq	sp, r5, r8, ror #17
   142d4:	andeq	r0, r0, r6, asr #7
   142d8:	ldrdeq	sp, [r5], -ip
   142dc:	andeq	lr, r5, ip, asr r0
   142e0:	push	{r4, lr}
   142e4:	ldr	r3, [pc, #12]	; 142f8 <__assert_fail@plt+0x1b0>
   142e8:	ldr	r2, [pc, #12]	; 142fc <__assert_fail@plt+0x1b4>
   142ec:	ldr	r1, [pc, #12]	; 14300 <__assert_fail@plt+0x1b8>
   142f0:	ldr	r0, [pc, #12]	; 14304 <__assert_fail@plt+0x1bc>
   142f4:	bl	14148 <__assert_fail@plt>
   142f8:	andeq	sp, r5, r8, lsl #18
   142fc:	andeq	r0, r0, r6, lsl #15
   14300:	ldrdeq	sp, [r5], -ip
   14304:	andeq	lr, r5, r8, lsl #1

00014308 <main@@Base>:
   14308:	cmp	r0, #1
   1430c:	push	{r4, r5, r6, r7, r8, lr}
   14310:	sub	sp, sp, #224	; 0xe0
   14314:	ble	14678 <main@@Base+0x370>
   14318:	mov	r4, r0
   1431c:	mov	r0, sp
   14320:	lsl	r5, r4, #2
   14324:	mov	r6, r1
   14328:	bl	162c0 <flatcc_init_options@@Base>
   1432c:	mov	r0, r5
   14330:	bl	14040 <malloc@plt>
   14334:	cmp	r0, #0
   14338:	str	r0, [sp, #200]	; 0xc8
   1433c:	beq	14658 <main@@Base+0x350>
   14340:	mov	r0, r5
   14344:	bl	14040 <malloc@plt>
   14348:	cmp	r0, #0
   1434c:	str	r0, [sp, #204]	; 0xcc
   14350:	beq	14630 <main@@Base+0x328>
   14354:	mov	r1, r6
   14358:	mov	r0, r4
   1435c:	mov	r2, sp
   14360:	bl	15970 <parse_opts@@Base>
   14364:	ldr	r3, [sp, #156]	; 0x9c
   14368:	cmp	r3, #0
   1436c:	beq	14520 <main@@Base+0x218>
   14370:	ldr	r1, [sp, #144]	; 0x90
   14374:	cmp	r1, #0
   14378:	bne	1448c <main@@Base+0x184>
   1437c:	ldr	r2, [sp, #212]	; 0xd4
   14380:	str	r1, [sp, #148]	; 0x94
   14384:	cmp	r2, #0
   14388:	beq	1453c <main@@Base+0x234>
   1438c:	ldr	r0, [sp, #152]	; 0x98
   14390:	orrs	r0, r3, r0
   14394:	bne	143a4 <main@@Base+0x9c>
   14398:	ldr	r0, [sp, #160]	; 0xa0
   1439c:	cmp	r0, #0
   143a0:	beq	14558 <main@@Base+0x250>
   143a4:	ldr	r1, [sp, #180]	; 0xb4
   143a8:	cmp	r1, #0
   143ac:	beq	145a8 <main@@Base+0x2a0>
   143b0:	ldr	r3, [sp, #108]	; 0x6c
   143b4:	cmp	r3, #0
   143b8:	bne	145f8 <main@@Base+0x2f0>
   143bc:	ldr	r3, [sp, #124]	; 0x7c
   143c0:	cmp	r3, #0
   143c4:	bne	145c0 <main@@Base+0x2b8>
   143c8:	ldr	r3, [sp, #120]	; 0x78
   143cc:	cmp	r3, #0
   143d0:	beq	143f8 <main@@Base+0xf0>
   143d4:	ldr	r3, [sp, #116]	; 0x74
   143d8:	cmp	r3, #0
   143dc:	beq	14614 <main@@Base+0x30c>
   143e0:	ldr	r3, [sp, #108]	; 0x6c
   143e4:	cmp	r3, #0
   143e8:	beq	143f8 <main@@Base+0xf0>
   143ec:	ldr	r3, [sp, #124]	; 0x7c
   143f0:	cmp	r3, #0
   143f4:	bne	145dc <main@@Base+0x2d4>
   143f8:	cmp	r2, #0
   143fc:	ldr	r4, [sp, #204]	; 0xcc
   14400:	ble	144d8 <main@@Base+0x1d0>
   14404:	mov	r6, #0
   14408:	sub	r4, r4, #4
   1440c:	mov	r7, r6
   14410:	mov	r8, #1
   14414:	b	14454 <main@@Base+0x14c>
   14418:	ldr	r1, [r4, #4]!
   1441c:	bl	1646c <flatcc_parse_file@@Base>
   14420:	cmp	r0, #0
   14424:	bne	144f8 <main@@Base+0x1f0>
   14428:	mov	r0, r5
   1442c:	bl	16a64 <flatcc_generate_files@@Base>
   14430:	cmp	r0, #0
   14434:	bne	144f8 <main@@Base+0x1f0>
   14438:	mov	r0, r5
   1443c:	bl	16b8c <flatcc_destroy_context@@Base>
   14440:	ldr	r3, [sp, #212]	; 0xd4
   14444:	add	r6, r6, #1
   14448:	cmp	r3, r6
   1444c:	str	r8, [sp, #128]	; 0x80
   14450:	ble	144d8 <main@@Base+0x1d0>
   14454:	mov	r3, r7
   14458:	mov	r2, #0
   1445c:	ldr	r1, [r4, #4]
   14460:	mov	r0, sp
   14464:	bl	16378 <flatcc_create_context@@Base>
   14468:	subs	r5, r0, #0
   1446c:	bne	14418 <main@@Base+0x110>
   14470:	ldr	r4, [pc, #532]	; 1468c <main@@Base+0x384>
   14474:	mov	r2, #49	; 0x31
   14478:	mov	r1, #1
   1447c:	ldr	r3, [r4]
   14480:	ldr	r0, [pc, #520]	; 14690 <main@@Base+0x388>
   14484:	bl	1401c <fwrite@plt>
   14488:	b	14504 <main@@Base+0x1fc>
   1448c:	ldr	r2, [sp, #212]	; 0xd4
   14490:	mov	r1, #1
   14494:	cmp	r2, #0
   14498:	str	r1, [sp, #148]	; 0x94
   1449c:	bne	1438c <main@@Base+0x84>
   144a0:	ldr	r3, [sp, #180]	; 0xb4
   144a4:	cmp	r3, #0
   144a8:	bne	1453c <main@@Base+0x234>
   144ac:	mov	r0, sp
   144b0:	mov	r2, r3
   144b4:	mov	r1, r3
   144b8:	bl	16378 <flatcc_create_context@@Base>
   144bc:	subs	r5, r0, #0
   144c0:	beq	14470 <main@@Base+0x168>
   144c4:	bl	16a64 <flatcc_generate_files@@Base>
   144c8:	cmp	r0, #0
   144cc:	bne	144f8 <main@@Base+0x1f0>
   144d0:	mov	r0, r5
   144d4:	bl	16b8c <flatcc_destroy_context@@Base>
   144d8:	mov	r4, #0
   144dc:	ldr	r0, [sp, #200]	; 0xc8
   144e0:	bl	13fd4 <free@plt>
   144e4:	ldr	r0, [sp, #204]	; 0xcc
   144e8:	bl	13fd4 <free@plt>
   144ec:	mov	r0, r4
   144f0:	add	sp, sp, #224	; 0xe0
   144f4:	pop	{r4, r5, r6, r7, r8, pc}
   144f8:	mov	r0, r5
   144fc:	bl	16b8c <flatcc_destroy_context@@Base>
   14500:	ldr	r4, [pc, #388]	; 1468c <main@@Base+0x384>
   14504:	ldr	r3, [r4]
   14508:	mov	r2, #14
   1450c:	mov	r1, #1
   14510:	ldr	r0, [pc, #380]	; 14694 <main@@Base+0x38c>
   14514:	bl	1401c <fwrite@plt>
   14518:	mvn	r4, #0
   1451c:	b	144dc <main@@Base+0x1d4>
   14520:	ldr	r2, [sp, #212]	; 0xd4
   14524:	str	r3, [sp, #148]	; 0x94
   14528:	cmp	r2, #0
   1452c:	bne	145a0 <main@@Base+0x298>
   14530:	ldr	r3, [sp, #144]	; 0x90
   14534:	cmp	r3, #0
   14538:	bne	144a0 <main@@Base+0x198>
   1453c:	ldr	r4, [pc, #328]	; 1468c <main@@Base+0x384>
   14540:	mov	r2, #17
   14544:	mov	r1, #1
   14548:	ldr	r3, [r4]
   1454c:	ldr	r0, [pc, #324]	; 14698 <main@@Base+0x390>
   14550:	bl	1401c <fwrite@plt>
   14554:	b	14504 <main@@Base+0x1fc>
   14558:	ldr	r0, [sp, #144]	; 0x90
   1455c:	orrs	r1, r1, r0
   14560:	bne	143a4 <main@@Base+0x9c>
   14564:	ldr	r1, [sp, #164]	; 0xa4
   14568:	cmp	r1, #0
   1456c:	bne	143a4 <main@@Base+0x9c>
   14570:	ldr	r1, [sp, #168]	; 0xa8
   14574:	cmp	r1, #0
   14578:	bne	143a4 <main@@Base+0x9c>
   1457c:	ldr	r3, [sp, #180]	; 0xb4
   14580:	cmp	r3, #0
   14584:	bne	14590 <main@@Base+0x288>
   14588:	mov	r3, #1
   1458c:	str	r3, [sp, #152]	; 0x98
   14590:	ldr	r3, [sp, #120]	; 0x78
   14594:	cmp	r3, #0
   14598:	bne	143d4 <main@@Base+0xcc>
   1459c:	b	143e0 <main@@Base+0xd8>
   145a0:	mov	r1, r3
   145a4:	b	1438c <main@@Base+0x84>
   145a8:	cmp	r3, #0
   145ac:	bne	14588 <main@@Base+0x280>
   145b0:	ldr	r3, [sp, #160]	; 0xa0
   145b4:	cmp	r3, #0
   145b8:	beq	14590 <main@@Base+0x288>
   145bc:	b	14588 <main@@Base+0x280>
   145c0:	ldr	r4, [pc, #196]	; 1468c <main@@Base+0x384>
   145c4:	mov	r2, #58	; 0x3a
   145c8:	mov	r1, #1
   145cc:	ldr	r3, [r4]
   145d0:	ldr	r0, [pc, #196]	; 1469c <main@@Base+0x394>
   145d4:	bl	1401c <fwrite@plt>
   145d8:	b	14504 <main@@Base+0x1fc>
   145dc:	ldr	r4, [pc, #168]	; 1468c <main@@Base+0x384>
   145e0:	mov	r2, #38	; 0x26
   145e4:	mov	r1, #1
   145e8:	ldr	r3, [r4]
   145ec:	ldr	r0, [pc, #172]	; 146a0 <main@@Base+0x398>
   145f0:	bl	1401c <fwrite@plt>
   145f4:	b	14504 <main@@Base+0x1fc>
   145f8:	ldr	r4, [pc, #140]	; 1468c <main@@Base+0x384>
   145fc:	mov	r2, #57	; 0x39
   14600:	mov	r1, #1
   14604:	ldr	r3, [r4]
   14608:	ldr	r0, [pc, #148]	; 146a4 <main@@Base+0x39c>
   1460c:	bl	1401c <fwrite@plt>
   14610:	b	14504 <main@@Base+0x1fc>
   14614:	ldr	r4, [pc, #112]	; 1468c <main@@Base+0x384>
   14618:	mov	r2, #44	; 0x2c
   1461c:	mov	r1, #1
   14620:	ldr	r3, [r4]
   14624:	ldr	r0, [pc, #124]	; 146a8 <main@@Base+0x3a0>
   14628:	bl	1401c <fwrite@plt>
   1462c:	b	14504 <main@@Base+0x1fc>
   14630:	ldr	r3, [pc, #84]	; 1468c <main@@Base+0x384>
   14634:	mov	r2, #26
   14638:	mov	r1, #1
   1463c:	ldr	r3, [r3]
   14640:	ldr	r0, [pc, #100]	; 146ac <main@@Base+0x3a4>
   14644:	bl	1401c <fwrite@plt>
   14648:	ldr	r0, [sp, #200]	; 0xc8
   1464c:	bl	13fd4 <free@plt>
   14650:	mvn	r0, #0
   14654:	bl	14070 <exit@plt>
   14658:	ldr	r3, [pc, #44]	; 1468c <main@@Base+0x384>
   1465c:	mov	r2, #26
   14660:	mov	r1, #1
   14664:	ldr	r3, [r3]
   14668:	ldr	r0, [pc, #60]	; 146ac <main@@Base+0x3a4>
   1466c:	bl	1401c <fwrite@plt>
   14670:	mvn	r0, #0
   14674:	bl	14070 <exit@plt>
   14678:	ldr	r3, [pc, #12]	; 1468c <main@@Base+0x384>
   1467c:	ldr	r0, [r3]
   14680:	bl	147d8 <usage@@Base>
   14684:	mvn	r0, #0
   14688:	bl	14070 <exit@plt>
   1468c:	andeq	pc, r6, r8, lsr #1
   14690:	andeq	r3, r4, r0, lsl #26
   14694:	andeq	r3, r4, r4, lsl #28
   14698:	andeq	r3, r4, ip, ror #25
   1469c:	andeq	r3, r4, r0, ror sp
   146a0:	ldrdeq	r3, [r4], -ip
   146a4:	andeq	r3, r4, r4, lsr sp
   146a8:	andeq	r3, r4, ip, lsr #27
   146ac:	ldrdeq	r3, [r4], -r0

000146b0 <_start@@Base>:
   146b0:	mov	fp, #0
   146b4:	mov	lr, #0
   146b8:	pop	{r1}		; (ldr r1, [sp], #4)
   146bc:	mov	r2, sp
   146c0:	push	{r2}		; (str r2, [sp, #-4]!)
   146c4:	push	{r0}		; (str r0, [sp, #-4]!)
   146c8:	ldr	ip, [pc, #16]	; 146e0 <_start@@Base+0x30>
   146cc:	push	{ip}		; (str ip, [sp, #-4]!)
   146d0:	ldr	r0, [pc, #12]	; 146e4 <_start@@Base+0x34>
   146d4:	ldr	r3, [pc, #12]	; 146e8 <_start@@Base+0x38>
   146d8:	bl	1404c <__libc_start_main@plt>
   146dc:	bl	1413c <abort@plt>
   146e0:	andeq	r2, r4, r0, asr r7
   146e4:	andeq	r4, r1, r8, lsl #6
   146e8:	strdeq	r2, [r4], -r0
   146ec:	ldr	r3, [pc, #20]	; 14708 <_start@@Base+0x58>
   146f0:	ldr	r2, [pc, #20]	; 1470c <_start@@Base+0x5c>
   146f4:	add	r3, pc, r3
   146f8:	ldr	r2, [r3, r2]
   146fc:	cmp	r2, #0
   14700:	bxeq	lr
   14704:	b	14064 <__gmon_start__@plt>
   14708:	andeq	sl, r5, r4, lsl #18
   1470c:	muleq	r0, ip, r0
   14710:	ldr	r3, [pc, #28]	; 14734 <_start@@Base+0x84>
   14714:	ldr	r0, [pc, #28]	; 14738 <_start@@Base+0x88>
   14718:	sub	r3, r3, r0
   1471c:	cmp	r3, #6
   14720:	bxls	lr
   14724:	ldr	r3, [pc, #16]	; 1473c <_start@@Base+0x8c>
   14728:	cmp	r3, #0
   1472c:	bxeq	lr
   14730:	bx	r3
   14734:	andeq	pc, r6, fp, lsr #1
   14738:	andeq	pc, r6, r8, lsr #1
   1473c:	andeq	r0, r0, r0
   14740:	ldr	r1, [pc, #36]	; 1476c <_start@@Base+0xbc>
   14744:	ldr	r0, [pc, #36]	; 14770 <_start@@Base+0xc0>
   14748:	sub	r1, r1, r0
   1474c:	asr	r1, r1, #2
   14750:	add	r1, r1, r1, lsr #31
   14754:	asrs	r1, r1, #1
   14758:	bxeq	lr
   1475c:	ldr	r3, [pc, #16]	; 14774 <_start@@Base+0xc4>
   14760:	cmp	r3, #0
   14764:	bxeq	lr
   14768:	bx	r3
   1476c:	andeq	pc, r6, r8, lsr #1
   14770:	andeq	pc, r6, r8, lsr #1
   14774:	andeq	r0, r0, r0
   14778:	push	{r4, lr}
   1477c:	ldr	r4, [pc, #24]	; 1479c <_start@@Base+0xec>
   14780:	ldrb	r3, [r4]
   14784:	cmp	r3, #0
   14788:	popne	{r4, pc}
   1478c:	bl	14710 <_start@@Base+0x60>
   14790:	mov	r3, #1
   14794:	strb	r3, [r4]
   14798:	pop	{r4, pc}
   1479c:	strheq	pc, [r6], -r0	; <UNPREDICTABLE>
   147a0:	ldr	r0, [pc, #40]	; 147d0 <_start@@Base+0x120>
   147a4:	ldr	r3, [r0]
   147a8:	cmp	r3, #0
   147ac:	bne	147b4 <_start@@Base+0x104>
   147b0:	b	14740 <_start@@Base+0x90>
   147b4:	ldr	r3, [pc, #24]	; 147d4 <_start@@Base+0x124>
   147b8:	cmp	r3, #0
   147bc:	beq	147b0 <_start@@Base+0x100>
   147c0:	push	{r4, lr}
   147c4:	blx	r3
   147c8:	pop	{r4, lr}
   147cc:	b	14740 <_start@@Base+0x90>
   147d0:	andeq	lr, r6, r4, lsl pc
   147d4:	andeq	r0, r0, r0

000147d8 <usage@@Base>:
   147d8:	push	{r4, lr}
   147dc:	mov	r4, r0
   147e0:	ldr	r2, [pc, #64]	; 14828 <usage@@Base+0x50>
   147e4:	ldr	r1, [pc, #64]	; 1482c <usage@@Base+0x54>
   147e8:	bl	14094 <fprintf@plt>
   147ec:	mov	r0, r4
   147f0:	ldr	r2, [pc, #56]	; 14830 <usage@@Base+0x58>
   147f4:	ldr	r1, [pc, #56]	; 14834 <usage@@Base+0x5c>
   147f8:	bl	14094 <fprintf@plt>
   147fc:	mov	r3, r4
   14800:	mov	r2, #35	; 0x23
   14804:	mov	r1, #1
   14808:	ldr	r0, [pc, #40]	; 14838 <usage@@Base+0x60>
   1480c:	bl	1401c <fwrite@plt>
   14810:	mov	r3, r4
   14814:	ldr	r2, [pc, #32]	; 1483c <usage@@Base+0x64>
   14818:	mov	r1, #1
   1481c:	ldr	r0, [pc, #28]	; 14840 <usage@@Base+0x68>
   14820:	pop	{r4, lr}
   14824:	b	1401c <fwrite@plt>
   14828:	andeq	r2, r4, r4, ror #14
   1482c:			; <UNDEFINED> instruction: 0x00043ebc
   14830:	muleq	r4, ip, r7
   14834:	andeq	r2, r4, r4, lsr #15
   14838:			; <UNDEFINED> instruction: 0x000427b4
   1483c:	andeq	r0, r0, r1, lsl #11
   14840:	ldrdeq	r2, [r4], -r8

00014844 <help@@Base>:
   14844:	push	{r4, lr}
   14848:	mov	r4, r0
   1484c:	ldr	r2, [pc, #84]	; 148a8 <help@@Base+0x64>
   14850:	ldr	r1, [pc, #84]	; 148ac <help@@Base+0x68>
   14854:	bl	14094 <fprintf@plt>
   14858:	mov	r0, r4
   1485c:	ldr	r2, [pc, #76]	; 148b0 <help@@Base+0x6c>
   14860:	ldr	r1, [pc, #76]	; 148b4 <help@@Base+0x70>
   14864:	bl	14094 <fprintf@plt>
   14868:	mov	r3, r4
   1486c:	mov	r2, #35	; 0x23
   14870:	mov	r1, #1
   14874:	ldr	r0, [pc, #60]	; 148b8 <help@@Base+0x74>
   14878:	bl	1401c <fwrite@plt>
   1487c:	mov	r3, r4
   14880:	ldr	r2, [pc, #52]	; 148bc <help@@Base+0x78>
   14884:	mov	r1, #1
   14888:	ldr	r0, [pc, #48]	; 148c0 <help@@Base+0x7c>
   1488c:	bl	1401c <fwrite@plt>
   14890:	mov	r3, r4
   14894:	ldr	r2, [pc, #40]	; 148c4 <help@@Base+0x80>
   14898:	mov	r1, #1
   1489c:	ldr	r0, [pc, #36]	; 148c8 <help@@Base+0x84>
   148a0:	pop	{r4, lr}
   148a4:	b	1401c <fwrite@plt>
   148a8:	andeq	r2, r4, r4, ror #14
   148ac:			; <UNDEFINED> instruction: 0x00043ebc
   148b0:	muleq	r4, ip, r7
   148b4:	andeq	r2, r4, r4, lsr #15
   148b8:			; <UNDEFINED> instruction: 0x000427b4
   148bc:	andeq	r0, r0, r1, lsl #11
   148c0:	ldrdeq	r2, [r4], -r8
   148c4:	andeq	r0, r0, r4, asr #24
   148c8:	andeq	r2, r4, ip, asr sp

000148cc <parse_bool_arg@@Base>:
   148cc:	push	{r4, lr}
   148d0:	mov	r4, r0
   148d4:	ldr	r1, [pc, #104]	; 14944 <parse_bool_arg@@Base+0x78>
   148d8:	bl	13fbc <strcmp@plt>
   148dc:	cmp	r0, #0
   148e0:	popeq	{r4, pc}
   148e4:	ldr	r1, [pc, #92]	; 14948 <parse_bool_arg@@Base+0x7c>
   148e8:	mov	r0, r4
   148ec:	bl	13fbc <strcmp@plt>
   148f0:	cmp	r0, #0
   148f4:	popeq	{r4, pc}
   148f8:	ldr	r1, [pc, #76]	; 1494c <parse_bool_arg@@Base+0x80>
   148fc:	mov	r0, r4
   14900:	bl	13fbc <strcmp@plt>
   14904:	cmp	r0, #0
   14908:	beq	14920 <parse_bool_arg@@Base+0x54>
   1490c:	ldr	r1, [pc, #60]	; 14950 <parse_bool_arg@@Base+0x84>
   14910:	mov	r0, r4
   14914:	bl	13fbc <strcmp@plt>
   14918:	cmp	r0, #0
   1491c:	bne	14928 <parse_bool_arg@@Base+0x5c>
   14920:	mov	r0, #1
   14924:	pop	{r4, pc}
   14928:	ldr	r3, [pc, #36]	; 14954 <parse_bool_arg@@Base+0x88>
   1492c:	mov	r2, r4
   14930:	ldr	r1, [pc, #32]	; 14958 <parse_bool_arg@@Base+0x8c>
   14934:	ldr	r0, [r3]
   14938:	bl	14094 <fprintf@plt>
   1493c:	mvn	r0, #0
   14940:	pop	{r4, pc}
   14944:	andeq	sp, r4, r4, ror r2
   14948:	andeq	r3, r4, r4, lsr #19
   1494c:	andeq	r2, r4, r0, lsr #15
   14950:	andeq	r3, r4, r8, lsr #19
   14954:	andeq	pc, r6, r8, lsr #1
   14958:	andeq	r3, r4, ip, lsr #19

0001495c <match_long_arg@@Base>:
   1495c:	push	{r4, r5, r6, lr}
   14960:	mov	r5, r0
   14964:	mov	r4, r2
   14968:	bl	14130 <strncmp@plt>
   1496c:	cmp	r0, #0
   14970:	bne	1498c <match_long_arg@@Base+0x30>
   14974:	mov	r0, r5
   14978:	bl	1407c <strlen@plt>
   1497c:	sub	r0, r4, r0
   14980:	clz	r0, r0
   14984:	lsr	r0, r0, #5
   14988:	pop	{r4, r5, r6, pc}
   1498c:	mov	r0, #0
   14990:	pop	{r4, r5, r6, pc}

00014994 <set_opt@@Base>:
   14994:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14998:	mov	r8, r0
   1499c:	mov	r0, r1
   149a0:	mov	r4, r1
   149a4:	mov	r7, r2
   149a8:	bl	1407c <strlen@plt>
   149ac:	mov	r1, #61	; 0x3d
   149b0:	mov	r6, r0
   149b4:	mov	r0, r4
   149b8:	bl	14088 <strchr@plt>
   149bc:	ldrb	r9, [r4]
   149c0:	subs	r5, r0, #0
   149c4:	addne	r7, r5, #1
   149c8:	subne	r6, r5, r4
   149cc:	cmp	r9, #104	; 0x68
   149d0:	beq	14d34 <set_opt@@Base+0x3a0>
   149d4:	mov	r1, r4
   149d8:	ldr	r0, [pc, #1580]	; 1500c <set_opt@@Base+0x678>
   149dc:	bl	13fbc <strcmp@plt>
   149e0:	cmp	r0, #0
   149e4:	beq	14d34 <set_opt@@Base+0x3a0>
   149e8:	mov	r1, r4
   149ec:	ldr	r0, [pc, #1564]	; 15010 <set_opt@@Base+0x67c>
   149f0:	bl	13fbc <strcmp@plt>
   149f4:	subs	sl, r0, #0
   149f8:	beq	14d48 <set_opt@@Base+0x3b4>
   149fc:	mov	r1, r4
   14a00:	ldr	r0, [pc, #1548]	; 15014 <set_opt@@Base+0x680>
   14a04:	bl	13fbc <strcmp@plt>
   14a08:	cmp	r0, #0
   14a0c:	beq	14b70 <set_opt@@Base+0x1dc>
   14a10:	mov	r1, r4
   14a14:	ldr	r0, [pc, #1532]	; 15018 <set_opt@@Base+0x684>
   14a18:	bl	13fbc <strcmp@plt>
   14a1c:	cmp	r0, #0
   14a20:	beq	14b64 <set_opt@@Base+0x1d0>
   14a24:	mov	r1, r4
   14a28:	ldr	r0, [pc, #1516]	; 1501c <set_opt@@Base+0x688>
   14a2c:	bl	13fbc <strcmp@plt>
   14a30:	cmp	r0, #0
   14a34:	beq	14b88 <set_opt@@Base+0x1f4>
   14a38:	mov	r1, r4
   14a3c:	ldr	r0, [pc, #1500]	; 15020 <set_opt@@Base+0x68c>
   14a40:	bl	13fbc <strcmp@plt>
   14a44:	cmp	r0, #0
   14a48:	beq	14b7c <set_opt@@Base+0x1e8>
   14a4c:	mov	r1, r4
   14a50:	ldr	r0, [pc, #1484]	; 15024 <set_opt@@Base+0x690>
   14a54:	bl	13fbc <strcmp@plt>
   14a58:	cmp	r0, #0
   14a5c:	beq	14b94 <set_opt@@Base+0x200>
   14a60:	mov	r2, r6
   14a64:	mov	r1, r4
   14a68:	ldr	r0, [pc, #1464]	; 15028 <set_opt@@Base+0x694>
   14a6c:	bl	14130 <strncmp@plt>
   14a70:	cmp	r0, #0
   14a74:	cmpeq	r6, #17
   14a78:	beq	14c34 <set_opt@@Base+0x2a0>
   14a7c:	mov	r2, r6
   14a80:	mov	r1, r4
   14a84:	ldr	r0, [pc, #1440]	; 1502c <set_opt@@Base+0x698>
   14a88:	bl	14130 <strncmp@plt>
   14a8c:	sub	sl, r6, #14
   14a90:	clz	sl, sl
   14a94:	lsr	sl, sl, #5
   14a98:	cmp	r0, #0
   14a9c:	cmpeq	r6, #14
   14aa0:	beq	14bc8 <set_opt@@Base+0x234>
   14aa4:	mov	r2, r6
   14aa8:	mov	r1, r4
   14aac:	ldr	r0, [pc, #1404]	; 15030 <set_opt@@Base+0x69c>
   14ab0:	bl	14130 <strncmp@plt>
   14ab4:	sub	fp, r6, #8
   14ab8:	clz	fp, fp
   14abc:	lsr	fp, fp, #5
   14ac0:	cmp	r0, #0
   14ac4:	cmpeq	r6, #8
   14ac8:	beq	14ba4 <set_opt@@Base+0x210>
   14acc:	mov	r2, r6
   14ad0:	mov	r1, r4
   14ad4:	ldr	r0, [pc, #1368]	; 15034 <set_opt@@Base+0x6a0>
   14ad8:	bl	14130 <strncmp@plt>
   14adc:	cmp	r0, #0
   14ae0:	cmpeq	r6, #10
   14ae4:	beq	14cb8 <set_opt@@Base+0x324>
   14ae8:	mov	r2, r6
   14aec:	mov	r1, r4
   14af0:	ldr	r0, [pc, #1344]	; 15038 <set_opt@@Base+0x6a4>
   14af4:	bl	14130 <strncmp@plt>
   14af8:	cmp	r0, #0
   14afc:	movne	r0, #0
   14b00:	andeq	r0, fp, #1
   14b04:	cmp	r0, #0
   14b08:	bne	14cd0 <set_opt@@Base+0x33c>
   14b0c:	mov	r2, r6
   14b10:	mov	r1, r4
   14b14:	ldr	r0, [pc, #1312]	; 1503c <set_opt@@Base+0x6a8>
   14b18:	bl	14130 <strncmp@plt>
   14b1c:	cmp	r0, #0
   14b20:	movne	r0, #0
   14b24:	andeq	r0, sl, #1
   14b28:	cmp	r0, #0
   14b2c:	bne	14ce8 <set_opt@@Base+0x354>
   14b30:	mov	r2, r6
   14b34:	mov	r1, r4
   14b38:	ldr	r0, [pc, #1280]	; 15040 <set_opt@@Base+0x6ac>
   14b3c:	bl	1495c <match_long_arg@@Base>
   14b40:	cmp	r0, #0
   14b44:	beq	14d00 <set_opt@@Base+0x36c>
   14b48:	cmp	r7, #0
   14b4c:	beq	14ed0 <set_opt@@Base+0x53c>
   14b50:	cmp	r5, #0
   14b54:	str	r7, [r8, #192]	; 0xc0
   14b58:	beq	14bc0 <set_opt@@Base+0x22c>
   14b5c:	mov	r0, #0
   14b60:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14b64:	mov	r3, #1
   14b68:	str	r3, [r8, #180]	; 0xb4
   14b6c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14b70:	mov	r3, #1
   14b74:	str	r3, [r8, #108]	; 0x6c
   14b78:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14b7c:	mov	r3, #1
   14b80:	str	r3, [r8, #168]	; 0xa8
   14b84:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14b88:	mov	r3, #1
   14b8c:	str	r3, [r8, #164]	; 0xa4
   14b90:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14b94:	mov	r3, #1
   14b98:	str	r3, [r8, #164]	; 0xa4
   14b9c:	str	r3, [r8, #168]	; 0xa8
   14ba0:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14ba4:	cmp	r7, #0
   14ba8:	beq	14ef0 <set_opt@@Base+0x55c>
   14bac:	mov	r3, #1
   14bb0:	cmp	r5, #0
   14bb4:	str	r7, [r8, #116]	; 0x74
   14bb8:	str	r3, [r8, #112]	; 0x70
   14bbc:	bne	14b5c <set_opt@@Base+0x1c8>
   14bc0:	mov	r0, #2
   14bc4:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14bc8:	cmp	r7, #0
   14bcc:	beq	14fd0 <set_opt@@Base+0x63c>
   14bd0:	ldr	r1, [pc, #1132]	; 15044 <set_opt@@Base+0x6b0>
   14bd4:	mov	r0, r7
   14bd8:	bl	13fbc <strcmp@plt>
   14bdc:	cmp	r0, #0
   14be0:	beq	14c24 <set_opt@@Base+0x290>
   14be4:	ldr	r1, [pc, #1116]	; 15048 <set_opt@@Base+0x6b4>
   14be8:	mov	r0, r7
   14bec:	bl	13fbc <strcmp@plt>
   14bf0:	cmp	r0, #0
   14bf4:	beq	14c24 <set_opt@@Base+0x290>
   14bf8:	ldr	r1, [pc, #1100]	; 1504c <set_opt@@Base+0x6b8>
   14bfc:	mov	r0, r7
   14c00:	bl	13fbc <strcmp@plt>
   14c04:	cmp	r0, #0
   14c08:	beq	14c20 <set_opt@@Base+0x28c>
   14c0c:	ldr	r1, [pc, #1084]	; 15050 <set_opt@@Base+0x6bc>
   14c10:	mov	r0, r7
   14c14:	bl	13fbc <strcmp@plt>
   14c18:	cmp	r0, #0
   14c1c:	bne	14db8 <set_opt@@Base+0x424>
   14c20:	mov	r0, #1
   14c24:	cmp	r5, #0
   14c28:	str	r0, [r8, #188]	; 0xbc
   14c2c:	bne	14b5c <set_opt@@Base+0x1c8>
   14c30:	b	14bc0 <set_opt@@Base+0x22c>
   14c34:	ldr	r4, [pc, #1048]	; 15054 <set_opt@@Base+0x6c0>
   14c38:	mov	r2, #112	; 0x70
   14c3c:	mov	r1, #1
   14c40:	ldr	r3, [r4]
   14c44:	ldr	r0, [pc, #1036]	; 15058 <set_opt@@Base+0x6c4>
   14c48:	bl	1401c <fwrite@plt>
   14c4c:	cmp	r7, #0
   14c50:	beq	14ff0 <set_opt@@Base+0x65c>
   14c54:	ldr	r1, [pc, #1000]	; 15044 <set_opt@@Base+0x6b0>
   14c58:	mov	r0, r7
   14c5c:	bl	13fbc <strcmp@plt>
   14c60:	cmp	r0, #0
   14c64:	beq	14ca8 <set_opt@@Base+0x314>
   14c68:	ldr	r1, [pc, #984]	; 15048 <set_opt@@Base+0x6b4>
   14c6c:	mov	r0, r7
   14c70:	bl	13fbc <strcmp@plt>
   14c74:	cmp	r0, #0
   14c78:	beq	14ca8 <set_opt@@Base+0x314>
   14c7c:	ldr	r1, [pc, #968]	; 1504c <set_opt@@Base+0x6b8>
   14c80:	mov	r0, r7
   14c84:	bl	13fbc <strcmp@plt>
   14c88:	cmp	r0, #0
   14c8c:	beq	14ca4 <set_opt@@Base+0x310>
   14c90:	ldr	r1, [pc, #952]	; 15050 <set_opt@@Base+0x6bc>
   14c94:	mov	r0, r7
   14c98:	bl	13fbc <strcmp@plt>
   14c9c:	cmp	r0, #0
   14ca0:	bne	14d9c <set_opt@@Base+0x408>
   14ca4:	mov	r0, #1
   14ca8:	cmp	r5, #0
   14cac:	str	r0, [r8, #184]	; 0xb8
   14cb0:	bne	14b5c <set_opt@@Base+0x1c8>
   14cb4:	b	14bc0 <set_opt@@Base+0x22c>
   14cb8:	cmp	r7, #0
   14cbc:	beq	14f50 <set_opt@@Base+0x5bc>
   14cc0:	cmp	r5, #0
   14cc4:	str	r7, [r8, #120]	; 0x78
   14cc8:	bne	14b5c <set_opt@@Base+0x1c8>
   14ccc:	b	14bc0 <set_opt@@Base+0x22c>
   14cd0:	cmp	r7, #0
   14cd4:	beq	14f90 <set_opt@@Base+0x5fc>
   14cd8:	cmp	r5, #0
   14cdc:	str	r7, [r8, #124]	; 0x7c
   14ce0:	bne	14b5c <set_opt@@Base+0x1c8>
   14ce4:	b	14bc0 <set_opt@@Base+0x22c>
   14ce8:	cmp	r7, #0
   14cec:	beq	14fb0 <set_opt@@Base+0x61c>
   14cf0:	cmp	r5, #0
   14cf4:	str	r7, [r8, #196]	; 0xc4
   14cf8:	bne	14b5c <set_opt@@Base+0x1c8>
   14cfc:	b	14bc0 <set_opt@@Base+0x22c>
   14d00:	cmp	r9, #100	; 0x64
   14d04:	beq	14e2c <set_opt@@Base+0x498>
   14d08:	bhi	14d74 <set_opt@@Base+0x3e0>
   14d0c:	cmp	r9, #73	; 0x49
   14d10:	beq	14e5c <set_opt@@Base+0x4c8>
   14d14:	bls	14e38 <set_opt@@Base+0x4a4>
   14d18:	cmp	r9, #97	; 0x61
   14d1c:	beq	14eb0 <set_opt@@Base+0x51c>
   14d20:	cmp	r9, #99	; 0x63
   14d24:	bne	14e94 <set_opt@@Base+0x500>
   14d28:	mov	r3, #1
   14d2c:	str	r3, [r8, #144]	; 0x90
   14d30:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14d34:	ldr	r3, [pc, #800]	; 1505c <set_opt@@Base+0x6c8>
   14d38:	ldr	r0, [r3]
   14d3c:	bl	14844 <help@@Base>
   14d40:	mov	r0, #0
   14d44:	bl	14070 <exit@plt>
   14d48:	ldr	r4, [pc, #772]	; 15054 <set_opt@@Base+0x6c0>
   14d4c:	ldr	r2, [pc, #780]	; 15060 <set_opt@@Base+0x6cc>
   14d50:	ldr	r1, [pc, #780]	; 15064 <set_opt@@Base+0x6d0>
   14d54:	ldr	r0, [r4]
   14d58:	bl	14094 <fprintf@plt>
   14d5c:	ldr	r0, [r4]
   14d60:	ldr	r2, [pc, #768]	; 15068 <set_opt@@Base+0x6d4>
   14d64:	ldr	r1, [pc, #768]	; 1506c <set_opt@@Base+0x6d8>
   14d68:	bl	14094 <fprintf@plt>
   14d6c:	mov	r0, sl
   14d70:	bl	14070 <exit@plt>
   14d74:	cmp	r9, #114	; 0x72
   14d78:	beq	14e20 <set_opt@@Base+0x48c>
   14d7c:	bls	14de4 <set_opt@@Base+0x450>
   14d80:	cmp	r9, #118	; 0x76
   14d84:	beq	14dd8 <set_opt@@Base+0x444>
   14d88:	cmp	r9, #119	; 0x77
   14d8c:	bne	14e94 <set_opt@@Base+0x500>
   14d90:	mov	r3, #1
   14d94:	str	r3, [r8, #156]	; 0x9c
   14d98:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14d9c:	mov	r2, r7
   14da0:	ldr	r0, [r4]
   14da4:	ldr	r1, [pc, #708]	; 15070 <set_opt@@Base+0x6dc>
   14da8:	bl	14094 <fprintf@plt>
   14dac:	mvn	r0, #0
   14db0:	str	r0, [r8, #184]	; 0xb8
   14db4:	bl	14070 <exit@plt>
   14db8:	ldr	r3, [pc, #660]	; 15054 <set_opt@@Base+0x6c0>
   14dbc:	mov	r2, r7
   14dc0:	ldr	r1, [pc, #680]	; 15070 <set_opt@@Base+0x6dc>
   14dc4:	ldr	r0, [r3]
   14dc8:	bl	14094 <fprintf@plt>
   14dcc:	mvn	r0, #0
   14dd0:	str	r0, [r8, #188]	; 0xbc
   14dd4:	bl	14070 <exit@plt>
   14dd8:	mov	r3, #1
   14ddc:	str	r3, [r8, #160]	; 0xa0
   14de0:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14de4:	cmp	r9, #111	; 0x6f
   14de8:	bne	14e94 <set_opt@@Base+0x500>
   14dec:	ldr	r3, [r8, #216]	; 0xd8
   14df0:	cmp	r3, #0
   14df4:	bne	14f10 <set_opt@@Base+0x57c>
   14df8:	ldrb	r3, [r4, #1]
   14dfc:	cmp	r3, #0
   14e00:	addne	r7, r4, #1
   14e04:	movne	r0, #1
   14e08:	bne	14e18 <set_opt@@Base+0x484>
   14e0c:	cmp	r7, #0
   14e10:	movne	r0, #2
   14e14:	beq	14f30 <set_opt@@Base+0x59c>
   14e18:	str	r7, [r8, #216]	; 0xd8
   14e1c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14e20:	mov	r3, #1
   14e24:	str	r3, [r8, #172]	; 0xac
   14e28:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14e2c:	mov	r3, #1
   14e30:	str	r3, [r8, #112]	; 0x70
   14e34:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14e38:	cmp	r9, #45	; 0x2d
   14e3c:	bne	14e94 <set_opt@@Base+0x500>
   14e40:	ldr	r3, [pc, #524]	; 15054 <set_opt@@Base+0x6c0>
   14e44:	mov	r2, r4
   14e48:	ldr	r1, [pc, #548]	; 15074 <set_opt@@Base+0x6e0>
   14e4c:	ldr	r0, [r3]
   14e50:	bl	14094 <fprintf@plt>
   14e54:	mvn	r0, #0
   14e58:	bl	14070 <exit@plt>
   14e5c:	ldrb	r3, [r4, #1]
   14e60:	cmp	r3, #0
   14e64:	addne	r7, r4, #1
   14e68:	movne	r0, #1
   14e6c:	bne	14e7c <set_opt@@Base+0x4e8>
   14e70:	cmp	r7, #0
   14e74:	movne	r0, #2
   14e78:	beq	14f70 <set_opt@@Base+0x5dc>
   14e7c:	ldr	r3, [r8, #208]	; 0xd0
   14e80:	ldr	r2, [r8, #200]	; 0xc8
   14e84:	add	r1, r3, #1
   14e88:	str	r1, [r8, #208]	; 0xd0
   14e8c:	str	r7, [r2, r3, lsl #2]
   14e90:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14e94:	ldr	r3, [pc, #440]	; 15054 <set_opt@@Base+0x6c0>
   14e98:	mov	r2, r9
   14e9c:	ldr	r1, [pc, #468]	; 15078 <set_opt@@Base+0x6e4>
   14ea0:	ldr	r0, [r3]
   14ea4:	bl	14094 <fprintf@plt>
   14ea8:	mvn	r0, #0
   14eac:	bl	14070 <exit@plt>
   14eb0:	mov	r3, #1
   14eb4:	str	r3, [r8, #152]	; 0x98
   14eb8:	str	r3, [r8, #156]	; 0x9c
   14ebc:	str	r3, [r8, #160]	; 0xa0
   14ec0:	str	r3, [r8, #144]	; 0x90
   14ec4:	str	r3, [r8, #148]	; 0x94
   14ec8:	str	r3, [r8, #172]	; 0xac
   14ecc:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14ed0:	ldr	r3, [pc, #380]	; 15054 <set_opt@@Base+0x6c0>
   14ed4:	mov	r2, #28
   14ed8:	mov	r1, #1
   14edc:	ldr	r3, [r3]
   14ee0:	ldr	r0, [pc, #404]	; 1507c <set_opt@@Base+0x6e8>
   14ee4:	bl	1401c <fwrite@plt>
   14ee8:	mvn	r0, #0
   14eec:	bl	14070 <exit@plt>
   14ef0:	ldr	r3, [pc, #348]	; 15054 <set_opt@@Base+0x6c0>
   14ef4:	mov	r2, #35	; 0x23
   14ef8:	mov	r1, #1
   14efc:	ldr	r3, [r3]
   14f00:	ldr	r0, [pc, #376]	; 15080 <set_opt@@Base+0x6ec>
   14f04:	bl	1401c <fwrite@plt>
   14f08:	mvn	r0, #0
   14f0c:	bl	14070 <exit@plt>
   14f10:	ldr	r3, [pc, #316]	; 15054 <set_opt@@Base+0x6c0>
   14f14:	mov	r2, #37	; 0x25
   14f18:	mov	r1, #1
   14f1c:	ldr	r3, [r3]
   14f20:	ldr	r0, [pc, #348]	; 15084 <set_opt@@Base+0x6f0>
   14f24:	bl	1401c <fwrite@plt>
   14f28:	mvn	r0, #0
   14f2c:	bl	14070 <exit@plt>
   14f30:	ldr	r3, [pc, #284]	; 15054 <set_opt@@Base+0x6c0>
   14f34:	mov	r2, #28
   14f38:	mov	r1, #1
   14f3c:	ldr	r3, [r3]
   14f40:	ldr	r0, [pc, #320]	; 15088 <set_opt@@Base+0x6f4>
   14f44:	bl	1401c <fwrite@plt>
   14f48:	mvn	r0, #0
   14f4c:	bl	14070 <exit@plt>
   14f50:	ldr	r3, [pc, #252]	; 15054 <set_opt@@Base+0x6c0>
   14f54:	mov	r2, #37	; 0x25
   14f58:	mov	r1, #1
   14f5c:	ldr	r3, [r3]
   14f60:	ldr	r0, [pc, #292]	; 1508c <set_opt@@Base+0x6f8>
   14f64:	bl	1401c <fwrite@plt>
   14f68:	mvn	r0, #0
   14f6c:	bl	14070 <exit@plt>
   14f70:	ldr	r3, [pc, #220]	; 15054 <set_opt@@Base+0x6c0>
   14f74:	mov	r2, #28
   14f78:	mov	r1, #1
   14f7c:	ldr	r3, [r3]
   14f80:	ldr	r0, [pc, #264]	; 15090 <set_opt@@Base+0x6fc>
   14f84:	bl	1401c <fwrite@plt>
   14f88:	mvn	r0, #0
   14f8c:	bl	14070 <exit@plt>
   14f90:	ldr	r3, [pc, #188]	; 15054 <set_opt@@Base+0x6c0>
   14f94:	mov	r2, #35	; 0x23
   14f98:	mov	r1, #1
   14f9c:	ldr	r3, [r3]
   14fa0:	ldr	r0, [pc, #236]	; 15094 <set_opt@@Base+0x700>
   14fa4:	bl	1401c <fwrite@plt>
   14fa8:	mvn	r0, #0
   14fac:	bl	14070 <exit@plt>
   14fb0:	ldr	r3, [pc, #156]	; 15054 <set_opt@@Base+0x6c0>
   14fb4:	mov	r2, #41	; 0x29
   14fb8:	mov	r1, #1
   14fbc:	ldr	r3, [r3]
   14fc0:	ldr	r0, [pc, #208]	; 15098 <set_opt@@Base+0x704>
   14fc4:	bl	1401c <fwrite@plt>
   14fc8:	mvn	r0, #0
   14fcc:	bl	14070 <exit@plt>
   14fd0:	ldr	r3, [pc, #124]	; 15054 <set_opt@@Base+0x6c0>
   14fd4:	mov	r2, #41	; 0x29
   14fd8:	mov	r1, #1
   14fdc:	ldr	r3, [r3]
   14fe0:	ldr	r0, [pc, #180]	; 1509c <set_opt@@Base+0x708>
   14fe4:	bl	1401c <fwrite@plt>
   14fe8:	mvn	r0, #0
   14fec:	bl	14070 <exit@plt>
   14ff0:	ldr	r3, [r4]
   14ff4:	mov	r2, #44	; 0x2c
   14ff8:	mov	r1, #1
   14ffc:	ldr	r0, [pc, #156]	; 150a0 <set_opt@@Base+0x70c>
   15000:	bl	1401c <fwrite@plt>
   15004:	mvn	r0, #0
   15008:	bl	14070 <exit@plt>
   1500c:	strdeq	r3, [r4], -r0
   15010:	strdeq	r3, [r4], -r8
   15014:	andeq	r3, r4, r4, lsl #20
   15018:	andeq	r3, r4, ip, lsl #20
   1501c:	andeq	r3, r4, r4, lsl sl
   15020:	andeq	r3, r4, r4, lsr #20
   15024:	andeq	r3, r4, r4, lsr sl
   15028:	andeq	r3, r4, ip, lsr sl
   1502c:	andeq	r3, r4, r4, ror ip
   15030:	ldrdeq	r3, [r4], -r0
   15034:	andeq	r3, r4, r4, lsl #25
   15038:	muleq	r4, r0, ip
   1503c:	muleq	r4, ip, ip
   15040:	andeq	r3, r4, ip, lsr #25
   15044:	andeq	sp, r4, r4, ror r2
   15048:	andeq	r3, r4, r4, lsr #19
   1504c:	andeq	r2, r4, r0, lsr #15
   15050:	andeq	r3, r4, r8, lsr #19
   15054:	andeq	pc, r6, r8, lsr #1
   15058:	andeq	r3, r4, r0, lsl #24
   1505c:	andeq	pc, r6, ip, lsr #1
   15060:	andeq	r2, r4, r4, ror #14
   15064:			; <UNDEFINED> instruction: 0x00043ebc
   15068:	muleq	r4, ip, r7
   1506c:	andeq	r2, r4, r4, lsr #15
   15070:	andeq	r3, r4, ip, lsr #19
   15074:	andeq	r3, r4, r8, ror #22
   15078:	andeq	r3, r4, r8, ror #23
   1507c:	andeq	r3, r4, r8, asr #22
   15080:	andeq	r3, r4, ip, lsr #21
   15084:	andeq	r3, r4, r0, lsr #23
   15088:	andeq	r3, r4, r8, asr #23
   1508c:	ldrdeq	r3, [r4], -r0
   15090:	andeq	r3, r4, r0, lsl #23
   15094:	strdeq	r3, [r4], -r8
   15098:	andeq	r3, r4, ip, lsl fp
   1509c:	andeq	r3, r4, r0, lsl #21
   150a0:	andeq	r3, r4, r0, asr sl

000150a4 <get_opt@@Base>:
   150a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   150a8:	sub	sp, sp, #20
   150ac:	ldrb	r5, [r1, #1]
   150b0:	str	r2, [sp, #8]
   150b4:	cmp	r5, #45	; 0x2d
   150b8:	beq	15310 <get_opt@@Base+0x26c>
   150bc:	cmp	r5, #0
   150c0:	add	r4, r1, #1
   150c4:	beq	15714 <get_opt@@Base+0x670>
   150c8:	ldr	r9, [pc, #2052]	; 158d4 <get_opt@@Base+0x830>
   150cc:	ldr	fp, [pc, #2052]	; 158d8 <get_opt@@Base+0x834>
   150d0:	ldr	sl, [pc, #2052]	; 158dc <get_opt@@Base+0x838>
   150d4:	mov	r8, r0
   150d8:	mov	r0, r4
   150dc:	bl	1407c <strlen@plt>
   150e0:	mov	r1, #61	; 0x3d
   150e4:	mov	r7, r0
   150e8:	mov	r0, r4
   150ec:	bl	14088 <strchr@plt>
   150f0:	subs	r6, r0, #0
   150f4:	addne	r3, r6, #1
   150f8:	ldreq	r3, [sp, #8]
   150fc:	strne	r3, [sp, #4]
   15100:	subne	r7, r6, r4
   15104:	streq	r3, [sp, #4]
   15108:	cmp	r5, #104	; 0x68
   1510c:	beq	156cc <get_opt@@Base+0x628>
   15110:	mov	r1, r4
   15114:	mov	r0, r9
   15118:	bl	13fbc <strcmp@plt>
   1511c:	cmp	r0, #0
   15120:	beq	156cc <get_opt@@Base+0x628>
   15124:	mov	r1, r4
   15128:	mov	r0, fp
   1512c:	bl	13fbc <strcmp@plt>
   15130:	cmp	r0, #0
   15134:	beq	156e0 <get_opt@@Base+0x63c>
   15138:	mov	r1, r4
   1513c:	mov	r0, sl
   15140:	bl	13fbc <strcmp@plt>
   15144:	cmp	r0, #0
   15148:	moveq	r3, #1
   1514c:	streq	r3, [r8, #108]	; 0x6c
   15150:	beq	152ec <get_opt@@Base+0x248>
   15154:	mov	r1, r4
   15158:	ldr	r0, [pc, #1920]	; 158e0 <get_opt@@Base+0x83c>
   1515c:	bl	13fbc <strcmp@plt>
   15160:	cmp	r0, #0
   15164:	moveq	r3, #1
   15168:	streq	r3, [r8, #180]	; 0xb4
   1516c:	beq	152ec <get_opt@@Base+0x248>
   15170:	mov	r1, r4
   15174:	ldr	r0, [pc, #1896]	; 158e4 <get_opt@@Base+0x840>
   15178:	bl	13fbc <strcmp@plt>
   1517c:	cmp	r0, #0
   15180:	moveq	r3, #1
   15184:	streq	r3, [r8, #164]	; 0xa4
   15188:	beq	152ec <get_opt@@Base+0x248>
   1518c:	mov	r1, r4
   15190:	ldr	r0, [pc, #1872]	; 158e8 <get_opt@@Base+0x844>
   15194:	bl	13fbc <strcmp@plt>
   15198:	cmp	r0, #0
   1519c:	moveq	r3, #1
   151a0:	streq	r3, [r8, #168]	; 0xa8
   151a4:	beq	152ec <get_opt@@Base+0x248>
   151a8:	mov	r1, r4
   151ac:	ldr	r0, [pc, #1848]	; 158ec <get_opt@@Base+0x848>
   151b0:	bl	13fbc <strcmp@plt>
   151b4:	cmp	r0, #0
   151b8:	beq	15300 <get_opt@@Base+0x25c>
   151bc:	mov	r2, r7
   151c0:	mov	r1, r4
   151c4:	ldr	r0, [pc, #1828]	; 158f0 <get_opt@@Base+0x84c>
   151c8:	bl	14130 <strncmp@plt>
   151cc:	cmp	r7, #17
   151d0:	cmpeq	r0, #0
   151d4:	beq	153bc <get_opt@@Base+0x318>
   151d8:	mov	r2, r7
   151dc:	mov	r1, r4
   151e0:	ldr	r0, [pc, #1804]	; 158f4 <get_opt@@Base+0x850>
   151e4:	bl	14130 <strncmp@plt>
   151e8:	sub	r3, r7, #14
   151ec:	clz	r3, r3
   151f0:	lsr	r3, r3, #5
   151f4:	str	r3, [sp, #12]
   151f8:	cmp	r0, #0
   151fc:	cmpeq	r7, #14
   15200:	beq	1532c <get_opt@@Base+0x288>
   15204:	mov	r2, r7
   15208:	mov	r1, r4
   1520c:	ldr	r0, [pc, #1764]	; 158f8 <get_opt@@Base+0x854>
   15210:	bl	14130 <strncmp@plt>
   15214:	sub	r3, r7, #8
   15218:	clz	r3, r3
   1521c:	lsr	r3, r3, #5
   15220:	str	r3, [sp, #12]
   15224:	cmp	r0, #0
   15228:	cmpeq	r7, #8
   1522c:	beq	15448 <get_opt@@Base+0x3a4>
   15230:	mov	r2, r7
   15234:	mov	r1, r4
   15238:	ldr	r0, [pc, #1724]	; 158fc <get_opt@@Base+0x858>
   1523c:	bl	14130 <strncmp@plt>
   15240:	cmp	r0, #0
   15244:	cmpeq	r7, #10
   15248:	beq	153a0 <get_opt@@Base+0x2fc>
   1524c:	mov	r2, r7
   15250:	mov	r1, r4
   15254:	ldr	r0, [pc, #1700]	; 15900 <get_opt@@Base+0x85c>
   15258:	bl	14130 <strncmp@plt>
   1525c:	sub	r3, r7, #8
   15260:	clz	r3, r3
   15264:	lsr	r3, r3, #5
   15268:	cmp	r0, #0
   1526c:	movne	r3, #0
   15270:	andeq	r3, r3, #1
   15274:	cmp	r3, #0
   15278:	bne	15470 <get_opt@@Base+0x3cc>
   1527c:	mov	r2, r7
   15280:	mov	r1, r4
   15284:	ldr	r0, [pc, #1656]	; 15904 <get_opt@@Base+0x860>
   15288:	bl	14130 <strncmp@plt>
   1528c:	sub	r3, r7, #14
   15290:	clz	r3, r3
   15294:	lsr	r3, r3, #5
   15298:	cmp	r0, #0
   1529c:	movne	r3, #0
   152a0:	andeq	r3, r3, #1
   152a4:	cmp	r3, #0
   152a8:	bne	1548c <get_opt@@Base+0x3e8>
   152ac:	mov	r2, r7
   152b0:	mov	r1, r4
   152b4:	ldr	r0, [pc, #1612]	; 15908 <get_opt@@Base+0x864>
   152b8:	bl	1495c <match_long_arg@@Base>
   152bc:	cmp	r0, #0
   152c0:	beq	154a8 <get_opt@@Base+0x404>
   152c4:	ldr	r3, [sp, #4]
   152c8:	cmp	r3, #0
   152cc:	beq	157ec <get_opt@@Base+0x748>
   152d0:	cmp	r6, #0
   152d4:	str	r3, [r8, #192]	; 0xc0
   152d8:	bne	152ec <get_opt@@Base+0x248>
   152dc:	mov	r0, #1
   152e0:	b	15324 <get_opt@@Base+0x280>
   152e4:	mov	r3, #1
   152e8:	str	r3, [r8, #112]	; 0x70
   152ec:	ldrb	r5, [r4, #1]!
   152f0:	cmp	r5, #0
   152f4:	bne	150d8 <get_opt@@Base+0x34>
   152f8:	mov	r0, r5
   152fc:	b	15324 <get_opt@@Base+0x280>
   15300:	mov	r3, #1
   15304:	str	r3, [r8, #164]	; 0xa4
   15308:	str	r3, [r8, #168]	; 0xa8
   1530c:	b	152ec <get_opt@@Base+0x248>
   15310:	add	r1, r1, #1
   15314:	bl	14994 <set_opt@@Base>
   15318:	sub	r0, r0, #2
   1531c:	clz	r0, r0
   15320:	lsr	r0, r0, #5
   15324:	add	sp, sp, #20
   15328:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1532c:	ldr	r3, [sp, #4]
   15330:	cmp	r3, #0
   15334:	beq	1578c <get_opt@@Base+0x6e8>
   15338:	ldr	r1, [pc, #1484]	; 1590c <get_opt@@Base+0x868>
   1533c:	mov	r0, r3
   15340:	mov	r5, r3
   15344:	bl	13fbc <strcmp@plt>
   15348:	cmp	r0, #0
   1534c:	beq	15390 <get_opt@@Base+0x2ec>
   15350:	ldr	r1, [pc, #1464]	; 15910 <get_opt@@Base+0x86c>
   15354:	mov	r0, r5
   15358:	bl	13fbc <strcmp@plt>
   1535c:	cmp	r0, #0
   15360:	beq	15390 <get_opt@@Base+0x2ec>
   15364:	ldr	r1, [pc, #1448]	; 15914 <get_opt@@Base+0x870>
   15368:	mov	r0, r5
   1536c:	bl	13fbc <strcmp@plt>
   15370:	cmp	r0, #0
   15374:	beq	1538c <get_opt@@Base+0x2e8>
   15378:	ldr	r1, [pc, #1432]	; 15918 <get_opt@@Base+0x874>
   1537c:	mov	r0, r5
   15380:	bl	13fbc <strcmp@plt>
   15384:	cmp	r0, #0
   15388:	bne	1576c <get_opt@@Base+0x6c8>
   1538c:	mov	r0, #1
   15390:	cmp	r6, #0
   15394:	str	r0, [r8, #188]	; 0xbc
   15398:	bne	152ec <get_opt@@Base+0x248>
   1539c:	b	152dc <get_opt@@Base+0x238>
   153a0:	ldr	r3, [sp, #4]
   153a4:	cmp	r3, #0
   153a8:	beq	15894 <get_opt@@Base+0x7f0>
   153ac:	cmp	r6, #0
   153b0:	str	r3, [r8, #120]	; 0x78
   153b4:	bne	152ec <get_opt@@Base+0x248>
   153b8:	b	152dc <get_opt@@Base+0x238>
   153bc:	ldr	r5, [pc, #1368]	; 1591c <get_opt@@Base+0x878>
   153c0:	mov	r2, #112	; 0x70
   153c4:	mov	r1, #1
   153c8:	ldr	r3, [r5]
   153cc:	ldr	r0, [pc, #1356]	; 15920 <get_opt@@Base+0x87c>
   153d0:	bl	1401c <fwrite@plt>
   153d4:	ldr	r3, [sp, #4]
   153d8:	cmp	r3, #0
   153dc:	beq	1582c <get_opt@@Base+0x788>
   153e0:	ldr	r1, [pc, #1316]	; 1590c <get_opt@@Base+0x868>
   153e4:	mov	r0, r3
   153e8:	mov	r7, r3
   153ec:	bl	13fbc <strcmp@plt>
   153f0:	cmp	r0, #0
   153f4:	beq	15438 <get_opt@@Base+0x394>
   153f8:	ldr	r1, [pc, #1296]	; 15910 <get_opt@@Base+0x86c>
   153fc:	mov	r0, r7
   15400:	bl	13fbc <strcmp@plt>
   15404:	cmp	r0, #0
   15408:	beq	15438 <get_opt@@Base+0x394>
   1540c:	ldr	r1, [pc, #1280]	; 15914 <get_opt@@Base+0x870>
   15410:	mov	r0, r7
   15414:	bl	13fbc <strcmp@plt>
   15418:	cmp	r0, #0
   1541c:	beq	15434 <get_opt@@Base+0x390>
   15420:	ldr	r1, [pc, #1264]	; 15918 <get_opt@@Base+0x874>
   15424:	mov	r0, r7
   15428:	bl	13fbc <strcmp@plt>
   1542c:	cmp	r0, #0
   15430:	bne	15734 <get_opt@@Base+0x690>
   15434:	mov	r0, #1
   15438:	cmp	r6, #0
   1543c:	str	r0, [r8, #184]	; 0xb8
   15440:	bne	152ec <get_opt@@Base+0x248>
   15444:	b	152dc <get_opt@@Base+0x238>
   15448:	ldr	r3, [sp, #4]
   1544c:	cmp	r3, #0
   15450:	beq	157ac <get_opt@@Base+0x708>
   15454:	mov	r2, r3
   15458:	cmp	r6, #0
   1545c:	mov	r3, #1
   15460:	str	r2, [r8, #116]	; 0x74
   15464:	str	r3, [r8, #112]	; 0x70
   15468:	bne	152ec <get_opt@@Base+0x248>
   1546c:	b	152dc <get_opt@@Base+0x238>
   15470:	ldr	r3, [sp, #4]
   15474:	cmp	r3, #0
   15478:	beq	157cc <get_opt@@Base+0x728>
   1547c:	cmp	r6, #0
   15480:	str	r3, [r8, #124]	; 0x7c
   15484:	bne	152ec <get_opt@@Base+0x248>
   15488:	b	152dc <get_opt@@Base+0x238>
   1548c:	ldr	r3, [sp, #4]
   15490:	cmp	r3, #0
   15494:	beq	1580c <get_opt@@Base+0x768>
   15498:	cmp	r6, #0
   1549c:	str	r3, [r8, #196]	; 0xc4
   154a0:	bne	152ec <get_opt@@Base+0x248>
   154a4:	b	152dc <get_opt@@Base+0x238>
   154a8:	sub	r3, r5, #45	; 0x2d
   154ac:	cmp	r3, #74	; 0x4a
   154b0:	ldrls	pc, [pc, r3, lsl #2]
   154b4:	b	15750 <get_opt@@Base+0x6ac>
   154b8:			; <UNDEFINED> instruction: 0x000156b0
   154bc:	andeq	r5, r1, r0, asr r7
   154c0:	andeq	r5, r1, r0, asr r7
   154c4:	andeq	r5, r1, r0, asr r7
   154c8:	andeq	r5, r1, r0, asr r7
   154cc:	andeq	r5, r1, r0, asr r7
   154d0:	andeq	r5, r1, r0, asr r7
   154d4:	andeq	r5, r1, r0, asr r7
   154d8:	andeq	r5, r1, r0, asr r7
   154dc:	andeq	r5, r1, r0, asr r7
   154e0:	andeq	r5, r1, r0, asr r7
   154e4:	andeq	r5, r1, r0, asr r7
   154e8:	andeq	r5, r1, r0, asr r7
   154ec:	andeq	r5, r1, r0, asr r7
   154f0:	andeq	r5, r1, r0, asr r7
   154f4:	andeq	r5, r1, r0, asr r7
   154f8:	andeq	r5, r1, r0, asr r7
   154fc:	andeq	r5, r1, r0, asr r7
   15500:	andeq	r5, r1, r0, asr r7
   15504:	andeq	r5, r1, r0, asr r7
   15508:	andeq	r5, r1, r0, asr r7
   1550c:	andeq	r5, r1, r0, asr r7
   15510:	andeq	r5, r1, r0, asr r7
   15514:	andeq	r5, r1, r0, asr r7
   15518:	andeq	r5, r1, r0, asr r7
   1551c:	andeq	r5, r1, r0, asr r7
   15520:	andeq	r5, r1, r0, asr r7
   15524:	andeq	r5, r1, r0, asr r7
   15528:	andeq	r5, r1, r8, lsl #13
   1552c:	andeq	r5, r1, r0, asr r7
   15530:	andeq	r5, r1, r0, asr r7
   15534:	andeq	r5, r1, r0, asr r7
   15538:	andeq	r5, r1, r0, asr r7
   1553c:	andeq	r5, r1, r0, asr r7
   15540:	andeq	r5, r1, r0, asr r7
   15544:	andeq	r5, r1, r0, asr r7
   15548:	andeq	r5, r1, r0, asr r7
   1554c:	andeq	r5, r1, r0, asr r7
   15550:	andeq	r5, r1, r0, asr r7
   15554:	andeq	r5, r1, r0, asr r7
   15558:	andeq	r5, r1, r0, asr r7
   1555c:	andeq	r5, r1, r0, asr r7
   15560:	andeq	r5, r1, r0, asr r7
   15564:	andeq	r5, r1, r0, asr r7
   15568:	andeq	r5, r1, r0, asr r7
   1556c:	andeq	r5, r1, r0, asr r7
   15570:	andeq	r5, r1, r0, asr r7
   15574:	andeq	r5, r1, r0, asr r7
   15578:	andeq	r5, r1, r0, asr r7
   1557c:	andeq	r5, r1, r0, asr r7
   15580:	andeq	r5, r1, r0, asr r7
   15584:	andeq	r5, r1, r0, asr r7
   15588:	andeq	r5, r1, r8, ror #12
   1558c:	andeq	r5, r1, r0, asr r7
   15590:	andeq	r5, r1, ip, asr r6
   15594:	andeq	r5, r1, r4, ror #5
   15598:	andeq	r5, r1, r0, asr r7
   1559c:	andeq	r5, r1, r0, asr r7
   155a0:	andeq	r5, r1, r0, asr r7
   155a4:	andeq	r5, r1, r0, asr r7
   155a8:	andeq	r5, r1, r0, asr r7
   155ac:	andeq	r5, r1, r0, asr r7
   155b0:	andeq	r5, r1, r0, asr r7
   155b4:	andeq	r5, r1, r0, asr r7
   155b8:	andeq	r5, r1, r0, asr r7
   155bc:	andeq	r5, r1, r0, asr r7
   155c0:	andeq	r5, r1, r8, lsl #12
   155c4:	andeq	r5, r1, r0, asr r7
   155c8:	andeq	r5, r1, r0, asr r7
   155cc:	strdeq	r5, [r1], -ip
   155d0:	andeq	r5, r1, r0, asr r7
   155d4:	andeq	r5, r1, r0, asr r7
   155d8:	andeq	r5, r1, r0, asr r7
   155dc:	strdeq	r5, [r1], -r0
   155e0:	andeq	r5, r1, r4, ror #11
   155e4:	mov	r3, #1
   155e8:	str	r3, [r8, #156]	; 0x9c
   155ec:	b	152ec <get_opt@@Base+0x248>
   155f0:	mov	r3, #1
   155f4:	str	r3, [r8, #160]	; 0xa0
   155f8:	b	152ec <get_opt@@Base+0x248>
   155fc:	mov	r3, #1
   15600:	str	r3, [r8, #172]	; 0xac
   15604:	b	152ec <get_opt@@Base+0x248>
   15608:	ldr	r3, [r8, #216]	; 0xd8
   1560c:	cmp	r3, #0
   15610:	bne	15874 <get_opt@@Base+0x7d0>
   15614:	ldrb	r3, [r4, #1]
   15618:	cmp	r3, #0
   1561c:	addne	r4, r4, #1
   15620:	strne	r4, [r8, #216]	; 0xd8
   15624:	bne	15324 <get_opt@@Base+0x280>
   15628:	ldr	r3, [sp, #4]
   1562c:	cmp	r3, #0
   15630:	ldrne	r3, [sp, #4]
   15634:	strne	r3, [r8, #216]	; 0xd8
   15638:	bne	152dc <get_opt@@Base+0x238>
   1563c:	ldr	r3, [pc, #728]	; 1591c <get_opt@@Base+0x878>
   15640:	mov	r2, #28
   15644:	mov	r1, #1
   15648:	ldr	r3, [r3]
   1564c:	ldr	r0, [pc, #720]	; 15924 <get_opt@@Base+0x880>
   15650:	bl	1401c <fwrite@plt>
   15654:	mvn	r0, #0
   15658:	bl	14070 <exit@plt>
   1565c:	mov	r3, #1
   15660:	str	r3, [r8, #144]	; 0x90
   15664:	b	152ec <get_opt@@Base+0x248>
   15668:	mov	r3, #1
   1566c:	str	r3, [r8, #152]	; 0x98
   15670:	str	r3, [r8, #156]	; 0x9c
   15674:	str	r3, [r8, #160]	; 0xa0
   15678:	str	r3, [r8, #144]	; 0x90
   1567c:	str	r3, [r8, #148]	; 0x94
   15680:	str	r3, [r8, #172]	; 0xac
   15684:	b	152ec <get_opt@@Base+0x248>
   15688:	ldrb	r3, [r4, #1]
   1568c:	cmp	r3, #0
   15690:	beq	15848 <get_opt@@Base+0x7a4>
   15694:	ldr	r3, [r8, #208]	; 0xd0
   15698:	ldr	r2, [r8, #200]	; 0xc8
   1569c:	add	r4, r4, #1
   156a0:	add	r1, r3, #1
   156a4:	str	r1, [r8, #208]	; 0xd0
   156a8:	str	r4, [r2, r3, lsl #2]
   156ac:	b	15324 <get_opt@@Base+0x280>
   156b0:	ldr	r3, [pc, #612]	; 1591c <get_opt@@Base+0x878>
   156b4:	mov	r2, r4
   156b8:	ldr	r1, [pc, #616]	; 15928 <get_opt@@Base+0x884>
   156bc:	ldr	r0, [r3]
   156c0:	bl	14094 <fprintf@plt>
   156c4:	mvn	r0, #0
   156c8:	bl	14070 <exit@plt>
   156cc:	ldr	r3, [pc, #600]	; 1592c <get_opt@@Base+0x888>
   156d0:	ldr	r0, [r3]
   156d4:	bl	14844 <help@@Base>
   156d8:	mov	r0, #0
   156dc:	bl	14070 <exit@plt>
   156e0:	ldr	r4, [pc, #564]	; 1591c <get_opt@@Base+0x878>
   156e4:	str	r0, [sp, #4]
   156e8:	ldr	r2, [pc, #576]	; 15930 <get_opt@@Base+0x88c>
   156ec:	ldr	r1, [pc, #576]	; 15934 <get_opt@@Base+0x890>
   156f0:	ldr	r0, [r4]
   156f4:	bl	14094 <fprintf@plt>
   156f8:	ldr	r0, [r4]
   156fc:	ldr	r2, [pc, #564]	; 15938 <get_opt@@Base+0x894>
   15700:	ldr	r1, [pc, #564]	; 1593c <get_opt@@Base+0x898>
   15704:	bl	14094 <fprintf@plt>
   15708:	ldr	r3, [sp, #4]
   1570c:	mov	r0, r3
   15710:	bl	14070 <exit@plt>
   15714:	ldr	r3, [pc, #512]	; 1591c <get_opt@@Base+0x878>
   15718:	mov	r2, #24
   1571c:	mov	r1, #1
   15720:	ldr	r3, [r3]
   15724:	ldr	r0, [pc, #532]	; 15940 <get_opt@@Base+0x89c>
   15728:	bl	1401c <fwrite@plt>
   1572c:	mvn	r0, #0
   15730:	bl	14070 <exit@plt>
   15734:	ldr	r2, [sp, #4]
   15738:	ldr	r0, [r5]
   1573c:	ldr	r1, [pc, #512]	; 15944 <get_opt@@Base+0x8a0>
   15740:	bl	14094 <fprintf@plt>
   15744:	mvn	r0, #0
   15748:	str	r0, [r8, #184]	; 0xb8
   1574c:	bl	14070 <exit@plt>
   15750:	ldr	r3, [pc, #452]	; 1591c <get_opt@@Base+0x878>
   15754:	mov	r2, r5
   15758:	ldr	r1, [pc, #488]	; 15948 <get_opt@@Base+0x8a4>
   1575c:	ldr	r0, [r3]
   15760:	bl	14094 <fprintf@plt>
   15764:	mvn	r0, #0
   15768:	bl	14070 <exit@plt>
   1576c:	ldr	r3, [pc, #424]	; 1591c <get_opt@@Base+0x878>
   15770:	ldr	r2, [sp, #4]
   15774:	ldr	r1, [pc, #456]	; 15944 <get_opt@@Base+0x8a0>
   15778:	ldr	r0, [r3]
   1577c:	bl	14094 <fprintf@plt>
   15780:	mvn	r0, #0
   15784:	str	r0, [r8, #188]	; 0xbc
   15788:	bl	14070 <exit@plt>
   1578c:	ldr	r3, [pc, #392]	; 1591c <get_opt@@Base+0x878>
   15790:	mov	r2, #41	; 0x29
   15794:	mov	r1, #1
   15798:	ldr	r3, [r3]
   1579c:	ldr	r0, [pc, #424]	; 1594c <get_opt@@Base+0x8a8>
   157a0:	bl	1401c <fwrite@plt>
   157a4:	mvn	r0, #0
   157a8:	bl	14070 <exit@plt>
   157ac:	ldr	r3, [pc, #360]	; 1591c <get_opt@@Base+0x878>
   157b0:	mov	r2, #35	; 0x23
   157b4:	mov	r1, #1
   157b8:	ldr	r3, [r3]
   157bc:	ldr	r0, [pc, #396]	; 15950 <get_opt@@Base+0x8ac>
   157c0:	bl	1401c <fwrite@plt>
   157c4:	mvn	r0, #0
   157c8:	bl	14070 <exit@plt>
   157cc:	ldr	r3, [pc, #328]	; 1591c <get_opt@@Base+0x878>
   157d0:	mov	r2, #35	; 0x23
   157d4:	mov	r1, #1
   157d8:	ldr	r3, [r3]
   157dc:	ldr	r0, [pc, #368]	; 15954 <get_opt@@Base+0x8b0>
   157e0:	bl	1401c <fwrite@plt>
   157e4:	mvn	r0, #0
   157e8:	bl	14070 <exit@plt>
   157ec:	ldr	r3, [pc, #296]	; 1591c <get_opt@@Base+0x878>
   157f0:	mov	r2, #28
   157f4:	mov	r1, #1
   157f8:	ldr	r3, [r3]
   157fc:	ldr	r0, [pc, #340]	; 15958 <get_opt@@Base+0x8b4>
   15800:	bl	1401c <fwrite@plt>
   15804:	mvn	r0, #0
   15808:	bl	14070 <exit@plt>
   1580c:	ldr	r3, [pc, #264]	; 1591c <get_opt@@Base+0x878>
   15810:	mov	r2, #41	; 0x29
   15814:	mov	r1, #1
   15818:	ldr	r3, [r3]
   1581c:	ldr	r0, [pc, #312]	; 1595c <get_opt@@Base+0x8b8>
   15820:	bl	1401c <fwrite@plt>
   15824:	mvn	r0, #0
   15828:	bl	14070 <exit@plt>
   1582c:	ldr	r3, [r5]
   15830:	mov	r2, #44	; 0x2c
   15834:	mov	r1, #1
   15838:	ldr	r0, [pc, #288]	; 15960 <get_opt@@Base+0x8bc>
   1583c:	bl	1401c <fwrite@plt>
   15840:	mvn	r0, #0
   15844:	bl	14070 <exit@plt>
   15848:	ldr	r3, [sp, #4]
   1584c:	cmp	r3, #0
   15850:	beq	158b4 <get_opt@@Base+0x810>
   15854:	ldr	r3, [r8, #208]	; 0xd0
   15858:	mov	r0, #1
   1585c:	add	r1, r3, r0
   15860:	ldr	r2, [r8, #200]	; 0xc8
   15864:	str	r1, [r8, #208]	; 0xd0
   15868:	ldr	r1, [sp, #4]
   1586c:	str	r1, [r2, r3, lsl #2]
   15870:	b	15324 <get_opt@@Base+0x280>
   15874:	ldr	r3, [pc, #160]	; 1591c <get_opt@@Base+0x878>
   15878:	mov	r2, #37	; 0x25
   1587c:	mov	r1, #1
   15880:	ldr	r3, [r3]
   15884:	ldr	r0, [pc, #216]	; 15964 <get_opt@@Base+0x8c0>
   15888:	bl	1401c <fwrite@plt>
   1588c:	mvn	r0, #0
   15890:	bl	14070 <exit@plt>
   15894:	ldr	r3, [pc, #128]	; 1591c <get_opt@@Base+0x878>
   15898:	mov	r2, #37	; 0x25
   1589c:	mov	r1, #1
   158a0:	ldr	r3, [r3]
   158a4:	ldr	r0, [pc, #188]	; 15968 <get_opt@@Base+0x8c4>
   158a8:	bl	1401c <fwrite@plt>
   158ac:	mvn	r0, #0
   158b0:	bl	14070 <exit@plt>
   158b4:	ldr	r3, [pc, #96]	; 1591c <get_opt@@Base+0x878>
   158b8:	mov	r2, #28
   158bc:	mov	r1, #1
   158c0:	ldr	r3, [r3]
   158c4:	ldr	r0, [pc, #160]	; 1596c <get_opt@@Base+0x8c8>
   158c8:	bl	1401c <fwrite@plt>
   158cc:	mvn	r0, #0
   158d0:	bl	14070 <exit@plt>
   158d4:	strdeq	r3, [r4], -r0
   158d8:	strdeq	r3, [r4], -r8
   158dc:	andeq	r3, r4, r4, lsl #20
   158e0:	andeq	r3, r4, ip, lsl #20
   158e4:	andeq	r3, r4, r4, lsl sl
   158e8:	andeq	r3, r4, r4, lsr #20
   158ec:	andeq	r3, r4, r4, lsr sl
   158f0:	andeq	r3, r4, ip, lsr sl
   158f4:	andeq	r3, r4, r4, ror ip
   158f8:	ldrdeq	r3, [r4], -r0
   158fc:	andeq	r3, r4, r4, lsl #25
   15900:	muleq	r4, r0, ip
   15904:	muleq	r4, ip, ip
   15908:	andeq	r3, r4, ip, lsr #25
   1590c:	andeq	sp, r4, r4, ror r2
   15910:	andeq	r3, r4, r4, lsr #19
   15914:	andeq	r2, r4, r0, lsr #15
   15918:	andeq	r3, r4, r8, lsr #19
   1591c:	andeq	pc, r6, r8, lsr #1
   15920:	andeq	r3, r4, r0, lsl #24
   15924:	andeq	r3, r4, r8, asr #23
   15928:	andeq	r3, r4, r8, ror #22
   1592c:	andeq	pc, r6, ip, lsr #1
   15930:	andeq	r2, r4, r4, ror #14
   15934:			; <UNDEFINED> instruction: 0x00043ebc
   15938:	muleq	r4, ip, r7
   1593c:	andeq	r2, r4, r4, lsr #15
   15940:			; <UNDEFINED> instruction: 0x00043cb4
   15944:	andeq	r3, r4, ip, lsr #19
   15948:	andeq	r3, r4, r8, ror #23
   1594c:	andeq	r3, r4, r0, lsl #21
   15950:	andeq	r3, r4, ip, lsr #21
   15954:	strdeq	r3, [r4], -r8
   15958:	andeq	r3, r4, r8, asr #22
   1595c:	andeq	r3, r4, ip, lsl fp
   15960:	andeq	r3, r4, r0, asr sl
   15964:	andeq	r3, r4, r0, lsr #23
   15968:	ldrdeq	r3, [r4], -r0
   1596c:	andeq	r3, r4, r0, lsl #23

00015970 <parse_opts@@Base>:
   15970:	cmp	r0, #1
   15974:	bxle	lr
   15978:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1597c:	mov	r5, r2
   15980:	sub	sp, sp, #20
   15984:	mov	r9, r1
   15988:	mov	sl, r0
   1598c:	mov	r7, #1
   15990:	b	159b8 <parse_opts@@Base+0x48>
   15994:	ldr	r3, [r5, #212]	; 0xd4
   15998:	ldr	r2, [r5, #204]	; 0xcc
   1599c:	add	r6, r7, #1
   159a0:	add	r1, r3, #1
   159a4:	str	r1, [r5, #212]	; 0xd4
   159a8:	str	r4, [r2, r3, lsl #2]
   159ac:	cmp	sl, r6
   159b0:	mov	r7, r6
   159b4:	ble	15d30 <parse_opts@@Base+0x3c0>
   159b8:	ldr	r4, [r9, r7, lsl #2]
   159bc:	lsl	r2, r7, #2
   159c0:	ldrb	r3, [r4]
   159c4:	cmp	r3, #45	; 0x2d
   159c8:	bne	15994 <parse_opts@@Base+0x24>
   159cc:	add	r6, r7, #1
   159d0:	cmp	sl, r6
   159d4:	addgt	r2, r9, r2
   159d8:	ldrb	fp, [r4, #1]
   159dc:	ldrgt	r3, [r2, #4]
   159e0:	movle	r3, #0
   159e4:	cmp	fp, #45	; 0x2d
   159e8:	str	r3, [sp]
   159ec:	beq	15d54 <parse_opts@@Base+0x3e4>
   159f0:	cmp	fp, #0
   159f4:	add	r4, r4, #1
   159f8:	beq	16034 <parse_opts@@Base+0x6c4>
   159fc:	stmib	sp, {r6, sl}
   15a00:	mov	r0, r4
   15a04:	bl	1407c <strlen@plt>
   15a08:	mov	r1, #61	; 0x3d
   15a0c:	mov	r7, r0
   15a10:	mov	r0, r4
   15a14:	bl	14088 <strchr@plt>
   15a18:	subs	r6, r0, #0
   15a1c:	addne	sl, r6, #1
   15a20:	subne	r7, r6, r4
   15a24:	ldreq	sl, [sp]
   15a28:	cmp	fp, #104	; 0x68
   15a2c:	beq	15fec <parse_opts@@Base+0x67c>
   15a30:	mov	r1, r4
   15a34:	ldr	r0, [pc, #1968]	; 161ec <parse_opts@@Base+0x87c>
   15a38:	bl	13fbc <strcmp@plt>
   15a3c:	cmp	r0, #0
   15a40:	beq	15fec <parse_opts@@Base+0x67c>
   15a44:	mov	r1, r4
   15a48:	ldr	r0, [pc, #1952]	; 161f0 <parse_opts@@Base+0x880>
   15a4c:	bl	13fbc <strcmp@plt>
   15a50:	cmp	r0, #0
   15a54:	beq	16000 <parse_opts@@Base+0x690>
   15a58:	mov	r1, r4
   15a5c:	ldr	r0, [pc, #1936]	; 161f4 <parse_opts@@Base+0x884>
   15a60:	bl	13fbc <strcmp@plt>
   15a64:	cmp	r0, #0
   15a68:	moveq	r3, #1
   15a6c:	streq	r3, [r5, #108]	; 0x6c
   15a70:	beq	15d1c <parse_opts@@Base+0x3ac>
   15a74:	mov	r1, r4
   15a78:	ldr	r0, [pc, #1912]	; 161f8 <parse_opts@@Base+0x888>
   15a7c:	bl	13fbc <strcmp@plt>
   15a80:	cmp	r0, #0
   15a84:	moveq	r3, #1
   15a88:	streq	r3, [r5, #180]	; 0xb4
   15a8c:	beq	15d1c <parse_opts@@Base+0x3ac>
   15a90:	mov	r1, r4
   15a94:	ldr	r0, [pc, #1888]	; 161fc <parse_opts@@Base+0x88c>
   15a98:	bl	13fbc <strcmp@plt>
   15a9c:	cmp	r0, #0
   15aa0:	moveq	r3, #1
   15aa4:	streq	r3, [r5, #164]	; 0xa4
   15aa8:	beq	15d1c <parse_opts@@Base+0x3ac>
   15aac:	mov	r1, r4
   15ab0:	ldr	r0, [pc, #1864]	; 16200 <parse_opts@@Base+0x890>
   15ab4:	bl	13fbc <strcmp@plt>
   15ab8:	cmp	r0, #0
   15abc:	moveq	r3, #1
   15ac0:	streq	r3, [r5, #168]	; 0xa8
   15ac4:	beq	15d1c <parse_opts@@Base+0x3ac>
   15ac8:	mov	r1, r4
   15acc:	ldr	r0, [pc, #1840]	; 16204 <parse_opts@@Base+0x894>
   15ad0:	bl	13fbc <strcmp@plt>
   15ad4:	cmp	r0, #0
   15ad8:	beq	15d38 <parse_opts@@Base+0x3c8>
   15adc:	mov	r2, r7
   15ae0:	mov	r1, r4
   15ae4:	ldr	r0, [pc, #1820]	; 16208 <parse_opts@@Base+0x898>
   15ae8:	bl	14130 <strncmp@plt>
   15aec:	cmp	r7, #17
   15af0:	cmpeq	r0, #0
   15af4:	beq	15e08 <parse_opts@@Base+0x498>
   15af8:	mov	r2, r7
   15afc:	mov	r1, r4
   15b00:	ldr	r0, [pc, #1796]	; 1620c <parse_opts@@Base+0x89c>
   15b04:	bl	14130 <strncmp@plt>
   15b08:	sub	r8, r7, #14
   15b0c:	clz	r8, r8
   15b10:	lsr	r8, r8, #5
   15b14:	cmp	r0, #0
   15b18:	cmpeq	r7, #14
   15b1c:	beq	15d74 <parse_opts@@Base+0x404>
   15b20:	mov	r2, r7
   15b24:	mov	r1, r4
   15b28:	ldr	r0, [pc, #1760]	; 16210 <parse_opts@@Base+0x8a0>
   15b2c:	bl	14130 <strncmp@plt>
   15b30:	sub	r3, r7, #8
   15b34:	clz	r3, r3
   15b38:	lsr	r3, r3, #5
   15b3c:	str	r3, [sp, #12]
   15b40:	cmp	r0, #0
   15b44:	cmpeq	r7, #8
   15b48:	beq	15e8c <parse_opts@@Base+0x51c>
   15b4c:	mov	r2, r7
   15b50:	mov	r1, r4
   15b54:	ldr	r0, [pc, #1720]	; 16214 <parse_opts@@Base+0x8a4>
   15b58:	bl	14130 <strncmp@plt>
   15b5c:	cmp	r0, #0
   15b60:	cmpeq	r7, #10
   15b64:	beq	15eb4 <parse_opts@@Base+0x544>
   15b68:	mov	r2, r7
   15b6c:	mov	r1, r4
   15b70:	ldr	r0, [pc, #1696]	; 16218 <parse_opts@@Base+0x8a8>
   15b74:	bl	14130 <strncmp@plt>
   15b78:	sub	r3, r7, #8
   15b7c:	clz	r3, r3
   15b80:	lsr	r3, r3, #5
   15b84:	cmp	r0, #0
   15b88:	movne	r3, #0
   15b8c:	andeq	r3, r3, #1
   15b90:	cmp	r3, #0
   15b94:	bne	15fbc <parse_opts@@Base+0x64c>
   15b98:	mov	r2, r7
   15b9c:	mov	r1, r4
   15ba0:	ldr	r0, [pc, #1652]	; 1621c <parse_opts@@Base+0x8ac>
   15ba4:	bl	14130 <strncmp@plt>
   15ba8:	cmp	r0, #0
   15bac:	movne	r0, #0
   15bb0:	andeq	r0, r8, #1
   15bb4:	cmp	r0, #0
   15bb8:	bne	15ecc <parse_opts@@Base+0x55c>
   15bbc:	mov	r2, r7
   15bc0:	mov	r1, r4
   15bc4:	ldr	r0, [pc, #1620]	; 16220 <parse_opts@@Base+0x8b0>
   15bc8:	bl	14130 <strncmp@plt>
   15bcc:	cmp	r0, #0
   15bd0:	cmpeq	r7, #7
   15bd4:	beq	15fd4 <parse_opts@@Base+0x664>
   15bd8:	sub	r3, fp, #45	; 0x2d
   15bdc:	cmp	r3, #74	; 0x4a
   15be0:	ldrls	pc, [pc, r3, lsl #2]
   15be4:	b	161b0 <parse_opts@@Base+0x840>
   15be8:	andeq	r5, r1, r8, lsl #31
   15bec:			; <UNDEFINED> instruction: 0x000161b0
   15bf0:			; <UNDEFINED> instruction: 0x000161b0
   15bf4:			; <UNDEFINED> instruction: 0x000161b0
   15bf8:			; <UNDEFINED> instruction: 0x000161b0
   15bfc:			; <UNDEFINED> instruction: 0x000161b0
   15c00:			; <UNDEFINED> instruction: 0x000161b0
   15c04:			; <UNDEFINED> instruction: 0x000161b0
   15c08:			; <UNDEFINED> instruction: 0x000161b0
   15c0c:			; <UNDEFINED> instruction: 0x000161b0
   15c10:			; <UNDEFINED> instruction: 0x000161b0
   15c14:			; <UNDEFINED> instruction: 0x000161b0
   15c18:			; <UNDEFINED> instruction: 0x000161b0
   15c1c:			; <UNDEFINED> instruction: 0x000161b0
   15c20:			; <UNDEFINED> instruction: 0x000161b0
   15c24:			; <UNDEFINED> instruction: 0x000161b0
   15c28:			; <UNDEFINED> instruction: 0x000161b0
   15c2c:			; <UNDEFINED> instruction: 0x000161b0
   15c30:			; <UNDEFINED> instruction: 0x000161b0
   15c34:			; <UNDEFINED> instruction: 0x000161b0
   15c38:			; <UNDEFINED> instruction: 0x000161b0
   15c3c:			; <UNDEFINED> instruction: 0x000161b0
   15c40:			; <UNDEFINED> instruction: 0x000161b0
   15c44:			; <UNDEFINED> instruction: 0x000161b0
   15c48:			; <UNDEFINED> instruction: 0x000161b0
   15c4c:			; <UNDEFINED> instruction: 0x000161b0
   15c50:			; <UNDEFINED> instruction: 0x000161b0
   15c54:			; <UNDEFINED> instruction: 0x000161b0
   15c58:	andeq	r5, r1, r8, asr pc
   15c5c:			; <UNDEFINED> instruction: 0x000161b0
   15c60:			; <UNDEFINED> instruction: 0x000161b0
   15c64:			; <UNDEFINED> instruction: 0x000161b0
   15c68:			; <UNDEFINED> instruction: 0x000161b0
   15c6c:			; <UNDEFINED> instruction: 0x000161b0
   15c70:			; <UNDEFINED> instruction: 0x000161b0
   15c74:			; <UNDEFINED> instruction: 0x000161b0
   15c78:			; <UNDEFINED> instruction: 0x000161b0
   15c7c:			; <UNDEFINED> instruction: 0x000161b0
   15c80:			; <UNDEFINED> instruction: 0x000161b0
   15c84:			; <UNDEFINED> instruction: 0x000161b0
   15c88:			; <UNDEFINED> instruction: 0x000161b0
   15c8c:			; <UNDEFINED> instruction: 0x000161b0
   15c90:			; <UNDEFINED> instruction: 0x000161b0
   15c94:			; <UNDEFINED> instruction: 0x000161b0
   15c98:			; <UNDEFINED> instruction: 0x000161b0
   15c9c:			; <UNDEFINED> instruction: 0x000161b0
   15ca0:			; <UNDEFINED> instruction: 0x000161b0
   15ca4:			; <UNDEFINED> instruction: 0x000161b0
   15ca8:			; <UNDEFINED> instruction: 0x000161b0
   15cac:			; <UNDEFINED> instruction: 0x000161b0
   15cb0:			; <UNDEFINED> instruction: 0x000161b0
   15cb4:			; <UNDEFINED> instruction: 0x000161b0
   15cb8:	andeq	r5, r1, r8, lsr pc
   15cbc:			; <UNDEFINED> instruction: 0x000161b0
   15cc0:	andeq	r5, r1, ip, lsr #30
   15cc4:	andeq	r5, r1, r4, lsl sp
   15cc8:			; <UNDEFINED> instruction: 0x000161b0
   15ccc:			; <UNDEFINED> instruction: 0x000161b0
   15cd0:			; <UNDEFINED> instruction: 0x000161b0
   15cd4:			; <UNDEFINED> instruction: 0x000161b0
   15cd8:			; <UNDEFINED> instruction: 0x000161b0
   15cdc:			; <UNDEFINED> instruction: 0x000161b0
   15ce0:			; <UNDEFINED> instruction: 0x000161b0
   15ce4:			; <UNDEFINED> instruction: 0x000161b0
   15ce8:			; <UNDEFINED> instruction: 0x000161b0
   15cec:			; <UNDEFINED> instruction: 0x000161b0
   15cf0:	strdeq	r5, [r1], -r0
   15cf4:			; <UNDEFINED> instruction: 0x000161b0
   15cf8:			; <UNDEFINED> instruction: 0x000161b0
   15cfc:			; <UNDEFINED> instruction: 0x00015fb0
   15d00:			; <UNDEFINED> instruction: 0x000161b0
   15d04:			; <UNDEFINED> instruction: 0x000161b0
   15d08:			; <UNDEFINED> instruction: 0x000161b0
   15d0c:	andeq	r5, r1, r4, lsr #31
   15d10:	andeq	r5, r1, r4, ror #29
   15d14:	mov	r3, #1
   15d18:	str	r3, [r5, #112]	; 0x70
   15d1c:	ldrb	fp, [r4, #1]!
   15d20:	cmp	fp, #0
   15d24:	bne	15a00 <parse_opts@@Base+0x90>
   15d28:	ldmib	sp, {r6, sl}
   15d2c:	b	159ac <parse_opts@@Base+0x3c>
   15d30:	add	sp, sp, #20
   15d34:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15d38:	mov	r3, #1
   15d3c:	str	r3, [r5, #164]	; 0xa4
   15d40:	str	r3, [r5, #168]	; 0xa8
   15d44:	ldrb	fp, [r4, #1]!
   15d48:	cmp	fp, #0
   15d4c:	bne	15a00 <parse_opts@@Base+0x90>
   15d50:	b	15d28 <parse_opts@@Base+0x3b8>
   15d54:	ldr	r2, [sp]
   15d58:	add	r1, r4, #1
   15d5c:	mov	r0, r5
   15d60:	bl	14994 <set_opt@@Base>
   15d64:	cmp	r0, #2
   15d68:	addeq	r7, r7, #1
   15d6c:	add	r6, r7, #1
   15d70:	b	159ac <parse_opts@@Base+0x3c>
   15d74:	cmp	sl, #0
   15d78:	beq	16098 <parse_opts@@Base+0x728>
   15d7c:	ldr	r1, [pc, #1184]	; 16224 <parse_opts@@Base+0x8b4>
   15d80:	mov	r0, sl
   15d84:	bl	13fbc <strcmp@plt>
   15d88:	cmp	r0, #0
   15d8c:	beq	15df0 <parse_opts@@Base+0x480>
   15d90:	ldr	r1, [pc, #1168]	; 16228 <parse_opts@@Base+0x8b8>
   15d94:	mov	r0, sl
   15d98:	bl	13fbc <strcmp@plt>
   15d9c:	cmp	r0, #0
   15da0:	beq	15df0 <parse_opts@@Base+0x480>
   15da4:	ldr	r1, [pc, #1152]	; 1622c <parse_opts@@Base+0x8bc>
   15da8:	mov	r0, sl
   15dac:	bl	13fbc <strcmp@plt>
   15db0:	cmp	r0, #0
   15db4:	beq	15dec <parse_opts@@Base+0x47c>
   15db8:	ldr	r1, [pc, #1136]	; 16230 <parse_opts@@Base+0x8c0>
   15dbc:	mov	r0, sl
   15dc0:	bl	13fbc <strcmp@plt>
   15dc4:	cmp	r0, #0
   15dc8:	beq	15dec <parse_opts@@Base+0x47c>
   15dcc:	ldr	r3, [pc, #1120]	; 16234 <parse_opts@@Base+0x8c4>
   15dd0:	mov	r2, sl
   15dd4:	ldr	r1, [pc, #1116]	; 16238 <parse_opts@@Base+0x8c8>
   15dd8:	ldr	r0, [r3]
   15ddc:	bl	14094 <fprintf@plt>
   15de0:	mvn	r0, #0
   15de4:	str	r0, [r5, #188]	; 0xbc
   15de8:	bl	14070 <exit@plt>
   15dec:	mov	r0, #1
   15df0:	cmp	r6, #0
   15df4:	str	r0, [r5, #188]	; 0xbc
   15df8:	bne	15d1c <parse_opts@@Base+0x3ac>
   15dfc:	ldmib	sp, {r6, sl}
   15e00:	add	r6, r6, #1
   15e04:	b	159ac <parse_opts@@Base+0x3c>
   15e08:	ldr	r8, [pc, #1060]	; 16234 <parse_opts@@Base+0x8c4>
   15e0c:	mov	r2, #112	; 0x70
   15e10:	mov	r1, #1
   15e14:	ldr	r3, [r8]
   15e18:	ldr	r0, [pc, #1052]	; 1623c <parse_opts@@Base+0x8cc>
   15e1c:	bl	1401c <fwrite@plt>
   15e20:	cmp	sl, #0
   15e24:	beq	16154 <parse_opts@@Base+0x7e4>
   15e28:	ldr	r1, [pc, #1012]	; 16224 <parse_opts@@Base+0x8b4>
   15e2c:	mov	r0, sl
   15e30:	bl	13fbc <strcmp@plt>
   15e34:	cmp	r0, #0
   15e38:	beq	15e7c <parse_opts@@Base+0x50c>
   15e3c:	ldr	r1, [pc, #996]	; 16228 <parse_opts@@Base+0x8b8>
   15e40:	mov	r0, sl
   15e44:	bl	13fbc <strcmp@plt>
   15e48:	cmp	r0, #0
   15e4c:	beq	15e7c <parse_opts@@Base+0x50c>
   15e50:	ldr	r1, [pc, #980]	; 1622c <parse_opts@@Base+0x8bc>
   15e54:	mov	r0, sl
   15e58:	bl	13fbc <strcmp@plt>
   15e5c:	cmp	r0, #0
   15e60:	beq	15e78 <parse_opts@@Base+0x508>
   15e64:	ldr	r1, [pc, #964]	; 16230 <parse_opts@@Base+0x8c0>
   15e68:	mov	r0, sl
   15e6c:	bl	13fbc <strcmp@plt>
   15e70:	cmp	r0, #0
   15e74:	bne	16138 <parse_opts@@Base+0x7c8>
   15e78:	mov	r0, #1
   15e7c:	cmp	r6, #0
   15e80:	str	r0, [r5, #184]	; 0xb8
   15e84:	bne	15d1c <parse_opts@@Base+0x3ac>
   15e88:	b	15dfc <parse_opts@@Base+0x48c>
   15e8c:	cmp	sl, #0
   15e90:	beq	160f8 <parse_opts@@Base+0x788>
   15e94:	mov	r3, #1
   15e98:	cmp	r6, #0
   15e9c:	str	sl, [r5, #116]	; 0x74
   15ea0:	str	r3, [r5, #112]	; 0x70
   15ea4:	bne	15d1c <parse_opts@@Base+0x3ac>
   15ea8:	ldmib	sp, {r6, sl}
   15eac:	add	r6, r6, r3
   15eb0:	b	159ac <parse_opts@@Base+0x3c>
   15eb4:	cmp	sl, #0
   15eb8:	beq	160b8 <parse_opts@@Base+0x748>
   15ebc:	cmp	r6, #0
   15ec0:	str	sl, [r5, #120]	; 0x78
   15ec4:	bne	15d1c <parse_opts@@Base+0x3ac>
   15ec8:	b	15dfc <parse_opts@@Base+0x48c>
   15ecc:	cmp	sl, #0
   15ed0:	beq	16118 <parse_opts@@Base+0x7a8>
   15ed4:	cmp	r6, #0
   15ed8:	str	sl, [r5, #196]	; 0xc4
   15edc:	bne	15d1c <parse_opts@@Base+0x3ac>
   15ee0:	b	15dfc <parse_opts@@Base+0x48c>
   15ee4:	mov	r3, #1
   15ee8:	str	r3, [r5, #156]	; 0x9c
   15eec:	b	15d1c <parse_opts@@Base+0x3ac>
   15ef0:	ldr	r3, [r5, #216]	; 0xd8
   15ef4:	mov	r0, sl
   15ef8:	cmp	r3, #0
   15efc:	ldmib	sp, {r6, sl}
   15f00:	bne	16190 <parse_opts@@Base+0x820>
   15f04:	ldrb	r3, [r4, #1]
   15f08:	cmp	r3, #0
   15f0c:	addne	r4, r4, #1
   15f10:	strne	r4, [r5, #216]	; 0xd8
   15f14:	bne	159ac <parse_opts@@Base+0x3c>
   15f18:	cmp	r0, #0
   15f1c:	beq	16170 <parse_opts@@Base+0x800>
   15f20:	str	r0, [r5, #216]	; 0xd8
   15f24:	add	r6, r6, #1
   15f28:	b	159ac <parse_opts@@Base+0x3c>
   15f2c:	mov	r3, #1
   15f30:	str	r3, [r5, #144]	; 0x90
   15f34:	b	15d1c <parse_opts@@Base+0x3ac>
   15f38:	mov	r3, #1
   15f3c:	str	r3, [r5, #152]	; 0x98
   15f40:	str	r3, [r5, #156]	; 0x9c
   15f44:	str	r3, [r5, #160]	; 0xa0
   15f48:	str	r3, [r5, #144]	; 0x90
   15f4c:	str	r3, [r5, #148]	; 0x94
   15f50:	str	r3, [r5, #172]	; 0xac
   15f54:	b	15d1c <parse_opts@@Base+0x3ac>
   15f58:	ldrb	r3, [r4, #1]
   15f5c:	mov	r0, sl
   15f60:	ldmib	sp, {r6, sl}
   15f64:	cmp	r3, #0
   15f68:	beq	16074 <parse_opts@@Base+0x704>
   15f6c:	ldr	r3, [r5, #208]	; 0xd0
   15f70:	ldr	r2, [r5, #200]	; 0xc8
   15f74:	add	r4, r4, #1
   15f78:	add	r1, r3, #1
   15f7c:	str	r1, [r5, #208]	; 0xd0
   15f80:	str	r4, [r2, r3, lsl #2]
   15f84:	b	159ac <parse_opts@@Base+0x3c>
   15f88:	ldr	r3, [pc, #676]	; 16234 <parse_opts@@Base+0x8c4>
   15f8c:	mov	r2, r4
   15f90:	ldr	r1, [pc, #680]	; 16240 <parse_opts@@Base+0x8d0>
   15f94:	ldr	r0, [r3]
   15f98:	bl	14094 <fprintf@plt>
   15f9c:	mvn	r0, #0
   15fa0:	bl	14070 <exit@plt>
   15fa4:	mov	r3, #1
   15fa8:	str	r3, [r5, #160]	; 0xa0
   15fac:	b	15d1c <parse_opts@@Base+0x3ac>
   15fb0:	mov	r3, #1
   15fb4:	str	r3, [r5, #172]	; 0xac
   15fb8:	b	15d1c <parse_opts@@Base+0x3ac>
   15fbc:	cmp	sl, #0
   15fc0:	beq	161cc <parse_opts@@Base+0x85c>
   15fc4:	cmp	r6, #0
   15fc8:	str	sl, [r5, #124]	; 0x7c
   15fcc:	bne	15d1c <parse_opts@@Base+0x3ac>
   15fd0:	b	15dfc <parse_opts@@Base+0x48c>
   15fd4:	cmp	sl, #0
   15fd8:	beq	16054 <parse_opts@@Base+0x6e4>
   15fdc:	cmp	r6, #0
   15fe0:	str	sl, [r5, #192]	; 0xc0
   15fe4:	bne	15d1c <parse_opts@@Base+0x3ac>
   15fe8:	b	15dfc <parse_opts@@Base+0x48c>
   15fec:	ldr	r3, [pc, #592]	; 16244 <parse_opts@@Base+0x8d4>
   15ff0:	ldr	r0, [r3]
   15ff4:	bl	14844 <help@@Base>
   15ff8:	mov	r0, #0
   15ffc:	bl	14070 <exit@plt>
   16000:	ldr	r4, [pc, #556]	; 16234 <parse_opts@@Base+0x8c4>
   16004:	str	r0, [sp]
   16008:	ldr	r2, [pc, #568]	; 16248 <parse_opts@@Base+0x8d8>
   1600c:	ldr	r1, [pc, #568]	; 1624c <parse_opts@@Base+0x8dc>
   16010:	ldr	r0, [r4]
   16014:	bl	14094 <fprintf@plt>
   16018:	ldr	r0, [r4]
   1601c:	ldr	r2, [pc, #556]	; 16250 <parse_opts@@Base+0x8e0>
   16020:	ldr	r1, [pc, #556]	; 16254 <parse_opts@@Base+0x8e4>
   16024:	bl	14094 <fprintf@plt>
   16028:	ldr	r3, [sp]
   1602c:	mov	r0, r3
   16030:	bl	14070 <exit@plt>
   16034:	ldr	r3, [pc, #504]	; 16234 <parse_opts@@Base+0x8c4>
   16038:	mov	r2, #24
   1603c:	mov	r1, #1
   16040:	ldr	r3, [r3]
   16044:	ldr	r0, [pc, #524]	; 16258 <parse_opts@@Base+0x8e8>
   16048:	bl	1401c <fwrite@plt>
   1604c:	mvn	r0, #0
   16050:	bl	14070 <exit@plt>
   16054:	ldr	r3, [pc, #472]	; 16234 <parse_opts@@Base+0x8c4>
   16058:	mov	r2, #28
   1605c:	mov	r1, #1
   16060:	ldr	r3, [r3]
   16064:	ldr	r0, [pc, #496]	; 1625c <parse_opts@@Base+0x8ec>
   16068:	bl	1401c <fwrite@plt>
   1606c:	mvn	r0, #0
   16070:	bl	14070 <exit@plt>
   16074:	cmp	r0, #0
   16078:	beq	160d8 <parse_opts@@Base+0x768>
   1607c:	ldr	r3, [r5, #208]	; 0xd0
   16080:	ldr	r2, [r5, #200]	; 0xc8
   16084:	add	r1, r3, #1
   16088:	str	r1, [r5, #208]	; 0xd0
   1608c:	add	r6, r6, #1
   16090:	str	r0, [r2, r3, lsl #2]
   16094:	b	159ac <parse_opts@@Base+0x3c>
   16098:	ldr	r3, [pc, #404]	; 16234 <parse_opts@@Base+0x8c4>
   1609c:	mov	r2, #41	; 0x29
   160a0:	mov	r1, #1
   160a4:	ldr	r3, [r3]
   160a8:	ldr	r0, [pc, #432]	; 16260 <parse_opts@@Base+0x8f0>
   160ac:	bl	1401c <fwrite@plt>
   160b0:	mvn	r0, #0
   160b4:	bl	14070 <exit@plt>
   160b8:	ldr	r3, [pc, #372]	; 16234 <parse_opts@@Base+0x8c4>
   160bc:	mov	r2, #37	; 0x25
   160c0:	mov	r1, #1
   160c4:	ldr	r3, [r3]
   160c8:	ldr	r0, [pc, #404]	; 16264 <parse_opts@@Base+0x8f4>
   160cc:	bl	1401c <fwrite@plt>
   160d0:	mvn	r0, #0
   160d4:	bl	14070 <exit@plt>
   160d8:	ldr	r3, [pc, #340]	; 16234 <parse_opts@@Base+0x8c4>
   160dc:	mov	r2, #28
   160e0:	mov	r1, #1
   160e4:	ldr	r3, [r3]
   160e8:	ldr	r0, [pc, #376]	; 16268 <parse_opts@@Base+0x8f8>
   160ec:	bl	1401c <fwrite@plt>
   160f0:	mvn	r0, #0
   160f4:	bl	14070 <exit@plt>
   160f8:	ldr	r3, [pc, #308]	; 16234 <parse_opts@@Base+0x8c4>
   160fc:	mov	r2, #35	; 0x23
   16100:	mov	r1, #1
   16104:	ldr	r3, [r3]
   16108:	ldr	r0, [pc, #348]	; 1626c <parse_opts@@Base+0x8fc>
   1610c:	bl	1401c <fwrite@plt>
   16110:	mvn	r0, #0
   16114:	bl	14070 <exit@plt>
   16118:	ldr	r3, [pc, #276]	; 16234 <parse_opts@@Base+0x8c4>
   1611c:	mov	r2, #41	; 0x29
   16120:	mov	r1, #1
   16124:	ldr	r3, [r3]
   16128:	ldr	r0, [pc, #320]	; 16270 <parse_opts@@Base+0x900>
   1612c:	bl	1401c <fwrite@plt>
   16130:	mvn	r0, #0
   16134:	bl	14070 <exit@plt>
   16138:	mov	r2, sl
   1613c:	ldr	r0, [r8]
   16140:	ldr	r1, [pc, #240]	; 16238 <parse_opts@@Base+0x8c8>
   16144:	bl	14094 <fprintf@plt>
   16148:	mvn	r0, #0
   1614c:	str	r0, [r5, #184]	; 0xb8
   16150:	bl	14070 <exit@plt>
   16154:	ldr	r3, [r8]
   16158:	mov	r2, #44	; 0x2c
   1615c:	mov	r1, #1
   16160:	ldr	r0, [pc, #268]	; 16274 <parse_opts@@Base+0x904>
   16164:	bl	1401c <fwrite@plt>
   16168:	mvn	r0, #0
   1616c:	bl	14070 <exit@plt>
   16170:	ldr	r3, [pc, #188]	; 16234 <parse_opts@@Base+0x8c4>
   16174:	mov	r2, #28
   16178:	mov	r1, #1
   1617c:	ldr	r3, [r3]
   16180:	ldr	r0, [pc, #240]	; 16278 <parse_opts@@Base+0x908>
   16184:	bl	1401c <fwrite@plt>
   16188:	mvn	r0, #0
   1618c:	bl	14070 <exit@plt>
   16190:	ldr	r3, [pc, #156]	; 16234 <parse_opts@@Base+0x8c4>
   16194:	mov	r2, #37	; 0x25
   16198:	mov	r1, #1
   1619c:	ldr	r3, [r3]
   161a0:	ldr	r0, [pc, #212]	; 1627c <parse_opts@@Base+0x90c>
   161a4:	bl	1401c <fwrite@plt>
   161a8:	mvn	r0, #0
   161ac:	bl	14070 <exit@plt>
   161b0:	ldr	r3, [pc, #124]	; 16234 <parse_opts@@Base+0x8c4>
   161b4:	mov	r2, fp
   161b8:	ldr	r1, [pc, #192]	; 16280 <parse_opts@@Base+0x910>
   161bc:	ldr	r0, [r3]
   161c0:	bl	14094 <fprintf@plt>
   161c4:	mvn	r0, #0
   161c8:	bl	14070 <exit@plt>
   161cc:	ldr	r3, [pc, #96]	; 16234 <parse_opts@@Base+0x8c4>
   161d0:	mov	r2, #35	; 0x23
   161d4:	mov	r1, #1
   161d8:	ldr	r3, [r3]
   161dc:	ldr	r0, [pc, #160]	; 16284 <parse_opts@@Base+0x914>
   161e0:	bl	1401c <fwrite@plt>
   161e4:	mvn	r0, #0
   161e8:	bl	14070 <exit@plt>
   161ec:	strdeq	r3, [r4], -r0
   161f0:	strdeq	r3, [r4], -r8
   161f4:	andeq	r3, r4, r4, lsl #20
   161f8:	andeq	r3, r4, ip, lsl #20
   161fc:	andeq	r3, r4, r4, lsl sl
   16200:	andeq	r3, r4, r4, lsr #20
   16204:	andeq	r3, r4, r4, lsr sl
   16208:	andeq	r3, r4, ip, lsr sl
   1620c:	andeq	r3, r4, r4, ror ip
   16210:	ldrdeq	r3, [r4], -r0
   16214:	andeq	r3, r4, r4, lsl #25
   16218:	muleq	r4, r0, ip
   1621c:	muleq	r4, ip, ip
   16220:	andeq	r3, r4, ip, lsr #25
   16224:	andeq	sp, r4, r4, ror r2
   16228:	andeq	r3, r4, r4, lsr #19
   1622c:	andeq	r2, r4, r0, lsr #15
   16230:	andeq	r3, r4, r8, lsr #19
   16234:	andeq	pc, r6, r8, lsr #1
   16238:	andeq	r3, r4, ip, lsr #19
   1623c:	andeq	r3, r4, r0, lsl #24
   16240:	andeq	r3, r4, r8, ror #22
   16244:	andeq	pc, r6, ip, lsr #1
   16248:	andeq	r2, r4, r4, ror #14
   1624c:			; <UNDEFINED> instruction: 0x00043ebc
   16250:	muleq	r4, ip, r7
   16254:	andeq	r2, r4, r4, lsr #15
   16258:			; <UNDEFINED> instruction: 0x00043cb4
   1625c:	andeq	r3, r4, r8, asr #22
   16260:	andeq	r3, r4, r0, lsl #21
   16264:	ldrdeq	r3, [r4], -r0
   16268:	andeq	r3, r4, r0, lsl #23
   1626c:	andeq	r3, r4, ip, lsr #21
   16270:	andeq	r3, r4, ip, lsl fp
   16274:	andeq	r3, r4, r0, asr sl
   16278:	andeq	r3, r4, r8, asr #23
   1627c:	andeq	r3, r4, r0, lsr #23
   16280:	andeq	r3, r4, r8, ror #23
   16284:	strdeq	r3, [r4], -r8
   16288:	add	r0, r0, #172	; 0xac
   1628c:	mov	r2, #1
   16290:	b	29318 <ptr_set_insert_item@@Base>
   16294:	ldr	r3, [pc, #28]	; 162b8 <parse_opts@@Base+0x948>
   16298:	push	{r4, lr}
   1629c:	mov	r2, #34	; 0x22
   162a0:	mov	r1, #1
   162a4:	ldr	r3, [r3]
   162a8:	ldr	r0, [pc, #12]	; 162bc <parse_opts@@Base+0x94c>
   162ac:	bl	1401c <fwrite@plt>
   162b0:	mov	r0, #1
   162b4:	bl	14070 <exit@plt>
   162b8:	andeq	pc, r6, r8, lsr #1
   162bc:	andeq	r3, r4, r0, lsr lr

000162c0 <flatcc_init_options@@Base>:
   162c0:	push	{r4, r6, r7, lr}
   162c4:	mov	r2, #224	; 0xe0
   162c8:	mov	r4, r0
   162cc:	mov	r1, #0
   162d0:	ldr	r6, [pc, #144]	; 16368 <flatcc_init_options@@Base+0xa8>
   162d4:	bl	140ac <memset@plt>
   162d8:	mov	r7, #0
   162dc:	mov	r2, #65536	; 0x10000
   162e0:	mov	r3, #2
   162e4:	ldr	lr, [pc, #128]	; 1636c <flatcc_init_options@@Base+0xac>
   162e8:	ldr	ip, [pc, #128]	; 16370 <flatcc_init_options@@Base+0xb0>
   162ec:	ldr	r0, [pc, #128]	; 16374 <flatcc_init_options@@Base+0xb4>
   162f0:	mov	r1, #100	; 0x64
   162f4:	str	r2, [r4]
   162f8:	str	r3, [r4, #68]	; 0x44
   162fc:	mov	r2, #4
   16300:	mov	r3, #1
   16304:	strd	r6, [r4, #88]	; 0x58
   16308:	str	lr, [r4, #96]	; 0x60
   1630c:	str	ip, [r4, #100]	; 0x64
   16310:	str	r0, [r4, #104]	; 0x68
   16314:	str	r1, [r4, #4]
   16318:	str	r1, [r4, #8]
   1631c:	str	r3, [r4, #16]
   16320:	str	r3, [r4, #20]
   16324:	str	r3, [r4, #24]
   16328:	str	r3, [r4, #28]
   1632c:	str	r3, [r4, #32]
   16330:	str	r3, [r4, #36]	; 0x24
   16334:	str	r3, [r4, #40]	; 0x28
   16338:	str	r3, [r4, #44]	; 0x2c
   1633c:	str	r3, [r4, #48]	; 0x30
   16340:	str	r3, [r4, #52]	; 0x34
   16344:	str	r3, [r4, #72]	; 0x48
   16348:	str	r3, [r4, #76]	; 0x4c
   1634c:	str	r3, [r4, #84]	; 0x54
   16350:	str	r3, [r4, #136]	; 0x88
   16354:	str	r3, [r4, #140]	; 0x8c
   16358:	str	r3, [r4, #184]	; 0xb8
   1635c:	str	r2, [r4, #64]	; 0x40
   16360:	str	r2, [r4, #176]	; 0xb0
   16364:	pop	{r4, r6, r7, pc}
   16368:	strdeq	pc, [r0], -lr
   1636c:	andeq	r3, r4, r4, asr lr
   16370:	andeq	r3, r4, ip, asr lr
   16374:	andeq	r3, r4, r4, ror #28

00016378 <flatcc_create_context@@Base>:
   16378:	push	{r4, r5, r6, r7, r8, r9, lr}
   1637c:	mov	r5, r0
   16380:	sub	sp, sp, #12
   16384:	mov	r0, #560	; 0x230
   16388:	mov	r6, r1
   1638c:	mov	r7, r2
   16390:	mov	r8, r3
   16394:	bl	14040 <malloc@plt>
   16398:	subs	r4, r0, #0
   1639c:	beq	163d0 <flatcc_create_context@@Base+0x58>
   163a0:	mov	r9, #0
   163a4:	str	r8, [sp]
   163a8:	mov	r3, r7
   163ac:	mov	r2, r6
   163b0:	mov	r1, r5
   163b4:	str	r9, [sp, #4]
   163b8:	bl	315d4 <__flatcc_fb_init_parser@@Base>
   163bc:	cmp	r0, r9
   163c0:	mov	r0, r4
   163c4:	bne	163d8 <flatcc_create_context@@Base+0x60>
   163c8:	add	sp, sp, #12
   163cc:	pop	{r4, r5, r6, r7, r8, r9, pc}
   163d0:	mov	r0, r4
   163d4:	b	163c8 <flatcc_create_context@@Base+0x50>
   163d8:	bl	13fd4 <free@plt>
   163dc:	mov	r0, r9
   163e0:	b	163c8 <flatcc_create_context@@Base+0x50>

000163e4 <flatcc_parse_buffer@@Base>:
   163e4:	ldr	r3, [r0, #128]	; 0x80
   163e8:	push	{r4, r5, r6, r7, r8, lr}
   163ec:	mov	r6, r2
   163f0:	cmp	r3, #0
   163f4:	cmpne	r3, r6
   163f8:	mov	r2, #1
   163fc:	movcc	r4, #1
   16400:	movcs	r4, #0
   16404:	str	r2, [r0, #140]	; 0x8c
   16408:	bcc	16458 <flatcc_parse_buffer@@Base+0x74>
   1640c:	mov	r5, r0
   16410:	mov	r7, r1
   16414:	add	r1, r0, #352	; 0x160
   16418:	add	r0, r0, #524	; 0x20c
   1641c:	bl	29318 <ptr_set_insert_item@@Base>
   16420:	mov	r3, r4
   16424:	mov	r2, r6
   16428:	mov	r1, r7
   1642c:	mov	r0, r5
   16430:	bl	31888 <__flatcc_fb_parse@@Base>
   16434:	cmp	r0, #0
   16438:	bne	16450 <flatcc_parse_buffer@@Base+0x6c>
   1643c:	mov	r0, r5
   16440:	bl	37b88 <__flatcc_fb_build_schema@@Base>
   16444:	adds	r0, r0, #0
   16448:	mvnne	r0, #0
   1644c:	pop	{r4, r5, r6, r7, r8, pc}
   16450:	mvn	r0, #0
   16454:	pop	{r4, r5, r6, r7, r8, pc}
   16458:	ldr	r1, [pc, #8]	; 16468 <flatcc_parse_buffer@@Base+0x84>
   1645c:	bl	2f508 <__flatcc_fb_print_error@@Base>
   16460:	mvn	r0, #0
   16464:	pop	{r4, r5, r6, r7, r8, pc}
   16468:	andeq	r3, r4, ip, ror #28

0001646c <flatcc_parse_file@@Base>:
   1646c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16470:	mov	r5, r0
   16474:	sub	sp, sp, #28
   16478:	mov	r0, r1
   1647c:	mov	r7, r1
   16480:	bl	1407c <strlen@plt>
   16484:	add	r9, r5, #352	; 0x160
   16488:	mov	r1, r9
   1648c:	mov	r2, #1
   16490:	mov	r8, r0
   16494:	ldr	r0, [r5, #412]	; 0x19c
   16498:	add	r0, r0, #32
   1649c:	bl	2b7b4 <fb_schema_table_insert_item@@Base>
   164a0:	cmp	r0, #0
   164a4:	beq	164b8 <flatcc_parse_file@@Base+0x4c>
   164a8:	mov	sl, #0
   164ac:	mov	r0, sl
   164b0:	add	sp, sp, #28
   164b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   164b8:	ldr	r3, [r5, #552]	; 0x228
   164bc:	cmp	r3, #0
   164c0:	str	r3, [sp, #12]
   164c4:	str	r3, [sp, #8]
   164c8:	beq	16904 <flatcc_parse_file@@Base+0x498>
   164cc:	ldr	r3, [r5, #336]	; 0x150
   164d0:	cmp	r3, #0
   164d4:	ble	1697c <flatcc_parse_file@@Base+0x510>
   164d8:	ldr	sl, [pc, #1272]	; 169d8 <flatcc_parse_file@@Base+0x56c>
   164dc:	mov	r4, #0
   164e0:	mov	fp, #1
   164e4:	ldr	r3, [r5, #328]	; 0x148
   164e8:	ldr	r6, [r3, r4, lsl #2]
   164ec:	mov	r0, r6
   164f0:	bl	1407c <strlen@plt>
   164f4:	stm	sp, {sl, fp}
   164f8:	mov	r3, r8
   164fc:	mov	r2, r7
   16500:	mov	r1, r0
   16504:	mov	r0, r6
   16508:	bl	2bc30 <__flatcc_fb_create_join_path_n@@Base>
   1650c:	subs	r6, r0, #0
   16510:	beq	16934 <flatcc_parse_file@@Base+0x4c8>
   16514:	add	r2, sp, #20
   16518:	ldr	r1, [r5, #128]	; 0x80
   1651c:	bl	2c278 <__flatcc_fb_read_file@@Base>
   16520:	cmp	r0, #0
   16524:	beq	16798 <flatcc_parse_file@@Base+0x32c>
   16528:	mov	r1, r0
   1652c:	ldr	r0, [r5, #412]	; 0x19c
   16530:	ldr	ip, [sp, #20]
   16534:	ldr	r3, [r0, #56]	; 0x38
   16538:	mov	r2, ip
   1653c:	add	r3, r3, ip
   16540:	str	r3, [r0, #56]	; 0x38
   16544:	mov	r3, #1
   16548:	str	r6, [r5, #548]	; 0x224
   1654c:	mov	r0, r5
   16550:	bl	31888 <__flatcc_fb_parse@@Base>
   16554:	subs	sl, r0, #0
   16558:	bne	164a8 <flatcc_parse_file@@Base+0x3c>
   1655c:	ldr	r7, [r5, #352]	; 0x160
   16560:	cmp	r7, #0
   16564:	beq	1663c <flatcc_parse_file@@Base+0x1d0>
   16568:	add	r3, r5, #128	; 0x80
   1656c:	str	sl, [sp, #8]
   16570:	mov	fp, #560	; 0x230
   16574:	mov	sl, r3
   16578:	ldr	r1, [r7, #12]
   1657c:	ldr	r0, [r7, #8]
   16580:	bl	2bb60 <__flatcc_fb_copy_path_n@@Base>
   16584:	subs	r8, r0, #0
   16588:	beq	16934 <flatcc_parse_file@@Base+0x4c8>
   1658c:	ldr	r6, [r5, #412]	; 0x19c
   16590:	ldr	r3, [r5, #132]	; 0x84
   16594:	ldr	r2, [r6, #52]	; 0x34
   16598:	cmp	r2, r3
   1659c:	cmpge	r3, #0
   165a0:	bgt	168f0 <flatcc_parse_file@@Base+0x484>
   165a4:	ldr	r3, [r5, #136]	; 0x88
   165a8:	ldr	r2, [r6, #48]	; 0x30
   165ac:	cmp	r2, r3
   165b0:	cmpge	r3, #0
   165b4:	bgt	168dc <flatcc_parse_file@@Base+0x470>
   165b8:	mov	r0, fp
   165bc:	bl	14040 <malloc@plt>
   165c0:	subs	r4, r0, #0
   165c4:	beq	168b4 <flatcc_parse_file@@Base+0x448>
   165c8:	ldr	r2, [r5, #12]
   165cc:	ldr	r3, [r5, #8]
   165d0:	mov	r1, sl
   165d4:	stm	sp, {r2, r6}
   165d8:	mov	r2, r8
   165dc:	bl	315d4 <__flatcc_fb_init_parser@@Base>
   165e0:	cmp	r0, #0
   165e4:	bne	168cc <flatcc_parse_file@@Base+0x460>
   165e8:	add	r1, r4, #352	; 0x160
   165ec:	add	r0, r6, #32
   165f0:	bl	2b890 <fb_schema_table_find_item@@Base>
   165f4:	cmp	r0, #0
   165f8:	beq	16860 <flatcc_parse_file@@Base+0x3f4>
   165fc:	add	r0, r0, #172	; 0xac
   16600:	mov	r2, r9
   16604:	ldr	r1, [pc, #976]	; 169dc <flatcc_parse_file@@Base+0x570>
   16608:	bl	295ac <ptr_set_visit@@Base>
   1660c:	mov	r0, r4
   16610:	ldr	r6, [r4]
   16614:	bl	34c44 <__flatcc_fb_clear_parser@@Base>
   16618:	mov	r0, r4
   1661c:	bl	13fd4 <free@plt>
   16620:	subs	r4, r6, #0
   16624:	bne	1660c <flatcc_parse_file@@Base+0x1a0>
   16628:	mov	r0, r8
   1662c:	bl	13fd4 <free@plt>
   16630:	ldr	r7, [r7]
   16634:	cmp	r7, #0
   16638:	bne	16578 <flatcc_parse_file@@Base+0x10c>
   1663c:	mov	r1, r9
   16640:	mov	r2, #1
   16644:	add	r0, r5, #524	; 0x20c
   16648:	bl	29318 <ptr_set_insert_item@@Base>
   1664c:	mov	r0, r5
   16650:	bl	37b88 <__flatcc_fb_build_schema@@Base>
   16654:	subs	sl, r0, #0
   16658:	bne	164a8 <flatcc_parse_file@@Base+0x3c>
   1665c:	ldr	r3, [r5, #240]	; 0xf0
   16660:	ldr	r2, [sp, #12]
   16664:	adds	r3, r3, #0
   16668:	movne	r3, #1
   1666c:	cmp	r2, #0
   16670:	movne	r3, #0
   16674:	cmp	r3, #0
   16678:	beq	164a8 <flatcc_parse_file@@Base+0x3c>
   1667c:	ldr	r3, [r5, #552]	; 0x228
   16680:	cmp	r3, #0
   16684:	bne	169c4 <flatcc_parse_file@@Base+0x558>
   16688:	ldr	r4, [r5, #344]	; 0x158
   1668c:	ldr	r2, [pc, #836]	; 169d8 <flatcc_parse_file@@Base+0x56c>
   16690:	ldr	r1, [r5, #244]	; 0xf4
   16694:	cmp	r4, #0
   16698:	moveq	r4, r2
   1669c:	ldr	r8, [r5, #512]	; 0x200
   166a0:	cmp	r1, #0
   166a4:	ldr	r3, [r5, #248]	; 0xf8
   166a8:	moveq	r0, r4
   166ac:	moveq	r1, r8
   166b0:	ldreq	r2, [pc, #808]	; 169e0 <flatcc_parse_file@@Base+0x574>
   166b4:	movne	r0, r2
   166b8:	cmp	r3, #0
   166bc:	beq	169ac <flatcc_parse_file@@Base+0x540>
   166c0:	ldr	r4, [pc, #784]	; 169d8 <flatcc_parse_file@@Base+0x56c>
   166c4:	mov	r8, r3
   166c8:	mov	r7, r4
   166cc:	mov	r3, #1
   166d0:	bl	2bd74 <__flatcc_fb_create_join_path@@Base>
   166d4:	subs	r6, r0, #0
   166d8:	beq	16934 <flatcc_parse_file@@Base+0x4c8>
   166dc:	mov	r0, r4
   166e0:	mov	r2, r7
   166e4:	mov	r1, r8
   166e8:	mov	r3, #1
   166ec:	bl	2bd74 <__flatcc_fb_create_join_path@@Base>
   166f0:	subs	r4, r0, #0
   166f4:	beq	16934 <flatcc_parse_file@@Base+0x4c8>
   166f8:	bl	2c13c <__flatcc_fb_create_make_path@@Base>
   166fc:	subs	r7, r0, #0
   16700:	beq	16934 <flatcc_parse_file@@Base+0x4c8>
   16704:	mov	r0, r4
   16708:	bl	13fd4 <free@plt>
   1670c:	ldr	r1, [pc, #720]	; 169e4 <flatcc_parse_file@@Base+0x578>
   16710:	mov	r0, r6
   16714:	bl	13fc8 <fopen@plt>
   16718:	subs	r8, r0, #0
   1671c:	beq	16988 <flatcc_parse_file@@Base+0x51c>
   16720:	mov	r2, r7
   16724:	ldr	r1, [pc, #700]	; 169e8 <flatcc_parse_file@@Base+0x57c>
   16728:	bl	14094 <fprintf@plt>
   1672c:	ldr	r4, [r5]
   16730:	cmp	r4, #0
   16734:	ldrne	r9, [pc, #688]	; 169ec <flatcc_parse_file@@Base+0x580>
   16738:	beq	16770 <flatcc_parse_file@@Base+0x304>
   1673c:	ldr	r0, [r4, #548]	; 0x224
   16740:	bl	2c13c <__flatcc_fb_create_make_path@@Base>
   16744:	subs	r5, r0, #0
   16748:	beq	16934 <flatcc_parse_file@@Base+0x4c8>
   1674c:	mov	r2, r5
   16750:	mov	r1, r9
   16754:	mov	r0, r8
   16758:	bl	14094 <fprintf@plt>
   1675c:	ldr	r4, [r4]
   16760:	mov	r0, r5
   16764:	bl	13fd4 <free@plt>
   16768:	cmp	r4, #0
   1676c:	bne	1673c <flatcc_parse_file@@Base+0x2d0>
   16770:	mov	r1, r8
   16774:	mov	r0, #10
   16778:	bl	140f4 <fputc@plt>
   1677c:	mov	r0, r6
   16780:	bl	13fd4 <free@plt>
   16784:	mov	r0, r7
   16788:	bl	13fd4 <free@plt>
   1678c:	mov	r0, r8
   16790:	bl	140dc <fclose@plt>
   16794:	b	164ac <flatcc_parse_file@@Base+0x40>
   16798:	mov	r0, r6
   1679c:	bl	13fd4 <free@plt>
   167a0:	ldr	r3, [r5, #128]	; 0x80
   167a4:	ldr	r2, [sp, #20]
   167a8:	cmp	r3, #0
   167ac:	cmpne	r3, r2
   167b0:	bcc	16938 <flatcc_parse_file@@Base+0x4cc>
   167b4:	ldr	r3, [r5, #336]	; 0x150
   167b8:	add	r4, r4, #1
   167bc:	cmp	r3, r4
   167c0:	bgt	164e4 <flatcc_parse_file@@Base+0x78>
   167c4:	ldr	r3, [sp, #8]
   167c8:	cmp	r3, #0
   167cc:	beq	16848 <flatcc_parse_file@@Base+0x3dc>
   167d0:	ldr	r3, [r5, #552]	; 0x228
   167d4:	mov	r4, r3
   167d8:	str	r3, [sp, #8]
   167dc:	mov	r0, r4
   167e0:	bl	1407c <strlen@plt>
   167e4:	mov	r1, r0
   167e8:	mov	r0, r4
   167ec:	bl	2c158 <__flatcc_fb_find_basename@@Base>
   167f0:	mov	r2, #1
   167f4:	str	r2, [sp, #4]
   167f8:	str	sl, [sp]
   167fc:	mov	r3, r8
   16800:	mov	r2, r7
   16804:	mov	r1, r0
   16808:	mov	r0, r4
   1680c:	bl	2bc30 <__flatcc_fb_create_join_path_n@@Base>
   16810:	subs	r6, r0, #0
   16814:	beq	16934 <flatcc_parse_file@@Base+0x4c8>
   16818:	ldr	r1, [r5, #128]	; 0x80
   1681c:	add	r2, sp, #20
   16820:	bl	2c278 <__flatcc_fb_read_file@@Base>
   16824:	subs	r1, r0, #0
   16828:	bne	1652c <flatcc_parse_file@@Base+0xc0>
   1682c:	mov	r0, r6
   16830:	bl	13fd4 <free@plt>
   16834:	ldr	r3, [r5, #128]	; 0x80
   16838:	ldr	r2, [sp, #20]
   1683c:	cmp	r3, #0
   16840:	cmpne	r3, r2
   16844:	bcc	16938 <flatcc_parse_file@@Base+0x4cc>
   16848:	mov	r2, r7
   1684c:	mov	r0, r5
   16850:	ldr	r1, [pc, #408]	; 169f0 <flatcc_parse_file@@Base+0x584>
   16854:	bl	2f508 <__flatcc_fb_print_error@@Base>
   16858:	mvn	sl, #0
   1685c:	b	164ac <flatcc_parse_file@@Base+0x40>
   16860:	ldr	r1, [r5]
   16864:	ldr	r2, [r6, #52]	; 0x34
   16868:	ldr	r3, [r6, #48]	; 0x30
   1686c:	str	r1, [r4]
   16870:	ldr	r1, [r5, #548]	; 0x224
   16874:	add	r2, r2, #1
   16878:	add	r3, r3, #1
   1687c:	str	r1, [r4, #552]	; 0x228
   16880:	str	r4, [r5]
   16884:	mov	r1, r8
   16888:	str	r2, [r6, #52]	; 0x34
   1688c:	str	r3, [r6, #48]	; 0x30
   16890:	mov	r0, r4
   16894:	bl	1646c <flatcc_parse_file@@Base>
   16898:	cmp	r0, #0
   1689c:	bne	168b4 <flatcc_parse_file@@Base+0x448>
   168a0:	add	r0, r4, #524	; 0x20c
   168a4:	mov	r2, r9
   168a8:	ldr	r1, [pc, #300]	; 169dc <flatcc_parse_file@@Base+0x570>
   168ac:	bl	295ac <ptr_set_visit@@Base>
   168b0:	b	16628 <flatcc_parse_file@@Base+0x1bc>
   168b4:	ldr	sl, [sp, #8]
   168b8:	mov	r0, r8
   168bc:	bl	13fd4 <free@plt>
   168c0:	mov	r0, sl
   168c4:	add	sp, sp, #28
   168c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   168cc:	mov	r0, r4
   168d0:	ldr	sl, [sp, #8]
   168d4:	bl	13fd4 <free@plt>
   168d8:	b	168b8 <flatcc_parse_file@@Base+0x44c>
   168dc:	mov	r0, r5
   168e0:	ldr	r1, [pc, #268]	; 169f4 <flatcc_parse_file@@Base+0x588>
   168e4:	ldr	sl, [sp, #8]
   168e8:	bl	2f508 <__flatcc_fb_print_error@@Base>
   168ec:	b	168b8 <flatcc_parse_file@@Base+0x44c>
   168f0:	mov	r0, r5
   168f4:	ldr	r1, [pc, #252]	; 169f8 <flatcc_parse_file@@Base+0x58c>
   168f8:	ldr	sl, [sp, #8]
   168fc:	bl	2f508 <__flatcc_fb_print_error@@Base>
   16900:	b	168b8 <flatcc_parse_file@@Base+0x44c>
   16904:	ldr	r1, [r5, #128]	; 0x80
   16908:	add	r2, sp, #20
   1690c:	mov	r0, r7
   16910:	bl	2c278 <__flatcc_fb_read_file@@Base>
   16914:	subs	r1, r0, #0
   16918:	beq	1694c <flatcc_parse_file@@Base+0x4e0>
   1691c:	mov	r0, r7
   16920:	str	r1, [sp, #8]
   16924:	bl	2bbac <__flatcc_fb_copy_path@@Base>
   16928:	ldr	r1, [sp, #8]
   1692c:	subs	r6, r0, #0
   16930:	bne	1652c <flatcc_parse_file@@Base+0xc0>
   16934:	bl	16294 <parse_opts@@Base+0x924>
   16938:	mov	r0, r5
   1693c:	ldr	r1, [pc, #184]	; 169fc <flatcc_parse_file@@Base+0x590>
   16940:	bl	2f508 <__flatcc_fb_print_error@@Base>
   16944:	mvn	sl, #0
   16948:	b	164ac <flatcc_parse_file@@Base+0x40>
   1694c:	ldr	r3, [r5, #412]	; 0x19c
   16950:	ldr	r1, [sp, #20]
   16954:	ldr	r2, [r5, #128]	; 0x80
   16958:	ldr	r3, [r3, #56]	; 0x38
   1695c:	add	r3, r3, r1
   16960:	cmp	r2, #0
   16964:	cmpne	r3, r2
   16968:	bhi	16938 <flatcc_parse_file@@Base+0x4cc>
   1696c:	ldr	r3, [r5, #336]	; 0x150
   16970:	cmp	r3, #0
   16974:	ble	16848 <flatcc_parse_file@@Base+0x3dc>
   16978:	b	164d8 <flatcc_parse_file@@Base+0x6c>
   1697c:	ldr	sl, [pc, #84]	; 169d8 <flatcc_parse_file@@Base+0x56c>
   16980:	ldr	r4, [sp, #8]
   16984:	b	167dc <flatcc_parse_file@@Base+0x370>
   16988:	mov	r2, r6
   1698c:	ldr	r1, [pc, #108]	; 16a00 <flatcc_parse_file@@Base+0x594>
   16990:	mov	r0, r5
   16994:	bl	2f508 <__flatcc_fb_print_error@@Base>
   16998:	mov	r0, r6
   1699c:	bl	13fd4 <free@plt>
   169a0:	mov	r0, r7
   169a4:	bl	13fd4 <free@plt>
   169a8:	b	164ac <flatcc_parse_file@@Base+0x40>
   169ac:	ldr	ip, [r5, #308]	; 0x134
   169b0:	ldr	r3, [pc, #76]	; 16a04 <flatcc_parse_file@@Base+0x598>
   169b4:	cmp	ip, #0
   169b8:	ldr	r7, [pc, #72]	; 16a08 <flatcc_parse_file@@Base+0x59c>
   169bc:	movne	r7, r3
   169c0:	b	166cc <flatcc_parse_file@@Base+0x260>
   169c4:	ldr	r3, [pc, #64]	; 16a0c <flatcc_parse_file@@Base+0x5a0>
   169c8:	mov	r2, #220	; 0xdc
   169cc:	ldr	r1, [pc, #60]	; 16a10 <flatcc_parse_file@@Base+0x5a4>
   169d0:	ldr	r0, [pc, #60]	; 16a14 <flatcc_parse_file@@Base+0x5a8>
   169d4:	bl	14148 <__assert_fail@plt>
   169d8:	andeq	lr, r4, ip, asr #2
   169dc:	andeq	r6, r1, r8, lsl #5
   169e0:	muleq	r4, r0, lr
   169e4:	andeq	r3, r4, r0, ror #30
   169e8:	muleq	r4, r4, pc	; <UNPREDICTABLE>
   169ec:	muleq	r4, r8, pc	; <UNPREDICTABLE>
   169f0:	muleq	r4, r8, lr
   169f4:	andeq	r3, r4, r0, ror #29
   169f8:	andeq	r3, r4, r0, asr #29
   169fc:	andeq	r3, r4, ip, ror #28
   16a00:	andeq	r3, r4, r4, ror #30
   16a04:	andeq	r3, r4, ip, asr lr
   16a08:	ldrdeq	sl, [r5], -ip
   16a0c:	andeq	r3, r4, r4, lsl lr
   16a10:	andeq	r3, r4, r0, lsl #30
   16a14:	andeq	r3, r4, r8, asr #30

00016a18 <flatcc_generate_binary_schema_to_buffer@@Base>:
   16a18:	push	{lr}		; (str lr, [sp, #-4]!)
   16a1c:	sub	sp, sp, #12
   16a20:	add	r3, sp, #8
   16a24:	mov	ip, r0
   16a28:	str	r2, [r3, #-4]!
   16a2c:	add	r0, r0, #128	; 0x80
   16a30:	mov	r2, r1
   16a34:	add	r1, ip, #352	; 0x160
   16a38:	bl	2849c <__flatcc_fb_codegen_bfbs_to_buffer@@Base>
   16a3c:	cmp	r0, #0
   16a40:	mvneq	r0, #0
   16a44:	ldrne	r0, [sp, #4]
   16a48:	add	sp, sp, #12
   16a4c:	pop	{pc}		; (ldr pc, [sp], #4)

00016a50 <flatcc_generate_binary_schema@@Base>:
   16a50:	mov	r3, r0
   16a54:	mov	r2, r1
   16a58:	add	r0, r0, #128	; 0x80
   16a5c:	add	r1, r3, #352	; 0x160
   16a60:	b	28510 <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base>

00016a64 <flatcc_generate_files@@Base>:
   16a64:	push	{r4, r5, r6, lr}
   16a68:	subs	r5, r0, #0
   16a6c:	sub	sp, sp, #232	; 0xe8
   16a70:	beq	16b20 <flatcc_generate_files@@Base+0xbc>
   16a74:	ldr	r2, [r5, #108]	; 0x6c
   16a78:	cmp	r2, #0
   16a7c:	bne	16b20 <flatcc_generate_files@@Base+0xbc>
   16a80:	mov	r4, r5
   16a84:	b	16a8c <flatcc_generate_files@@Base+0x28>
   16a88:	mov	r4, r3
   16a8c:	ldr	r3, [r4]
   16a90:	str	r2, [r4, #4]
   16a94:	cmp	r3, #0
   16a98:	mov	r2, r4
   16a9c:	bne	16a88 <flatcc_generate_files@@Base+0x24>
   16aa0:	ldr	r3, [r5, #308]	; 0x134
   16aa4:	add	r6, r5, #128	; 0x80
   16aa8:	cmp	r3, #0
   16aac:	bne	16b0c <flatcc_generate_files@@Base+0xa8>
   16ab0:	mov	r1, r6
   16ab4:	mov	r0, sp
   16ab8:	bl	16d10 <__flatcc_fb_init_output_c@@Base>
   16abc:	cmp	r0, #0
   16ac0:	bne	16b20 <flatcc_generate_files@@Base+0xbc>
   16ac4:	ldr	r3, [r5, #256]	; 0x100
   16ac8:	cmp	r3, #0
   16acc:	beq	16b64 <flatcc_generate_files@@Base+0x100>
   16ad0:	ldr	r6, [r5, #120]	; 0x78
   16ad4:	cmp	r6, #0
   16ad8:	beq	16af8 <flatcc_generate_files@@Base+0x94>
   16adc:	ldr	r3, [r5, #300]	; 0x12c
   16ae0:	cmp	r3, #0
   16ae4:	beq	16b78 <flatcc_generate_files@@Base+0x114>
   16ae8:	ldr	r3, [r4, #108]	; 0x6c
   16aec:	cmp	r3, #0
   16af0:	beq	16b30 <flatcc_generate_files@@Base+0xcc>
   16af4:	mov	r6, #1
   16af8:	mov	r0, sp
   16afc:	bl	16cdc <__flatcc_fb_end_output_c@@Base>
   16b00:	mov	r0, r6
   16b04:	add	sp, sp, #232	; 0xe8
   16b08:	pop	{r4, r5, r6, pc}
   16b0c:	mov	r0, r6
   16b10:	add	r1, r5, #352	; 0x160
   16b14:	bl	28578 <__flatcc_fb_codegen_bfbs_to_file@@Base>
   16b18:	cmp	r0, #0
   16b1c:	beq	16ab0 <flatcc_generate_files@@Base+0x4c>
   16b20:	mvn	r6, #0
   16b24:	mov	r0, r6
   16b28:	add	sp, sp, #232	; 0xe8
   16b2c:	pop	{r4, r5, r6, pc}
   16b30:	add	r1, r4, #352	; 0x160
   16b34:	mov	r0, sp
   16b38:	bl	173fc <__flatcc_fb_codegen_c@@Base>
   16b3c:	ldr	r4, [r4, #4]
   16b40:	cmp	r4, #0
   16b44:	clz	r3, r0
   16b48:	lsr	r3, r3, #5
   16b4c:	moveq	r3, #0
   16b50:	cmp	r3, #0
   16b54:	bne	16ae8 <flatcc_generate_files@@Base+0x84>
   16b58:	adds	r6, r0, #0
   16b5c:	movne	r6, #1
   16b60:	b	16af8 <flatcc_generate_files@@Base+0x94>
   16b64:	mov	r0, sp
   16b68:	bl	17214 <__flatcc_fb_codegen_common_c@@Base>
   16b6c:	subs	r6, r0, #0
   16b70:	bne	16af8 <flatcc_generate_files@@Base+0x94>
   16b74:	b	16ad0 <flatcc_generate_files@@Base+0x6c>
   16b78:	add	r1, r5, #352	; 0x160
   16b7c:	mov	r0, sp
   16b80:	bl	173fc <__flatcc_fb_codegen_c@@Base>
   16b84:	mov	r6, r0
   16b88:	b	16af8 <flatcc_generate_files@@Base+0x94>

00016b8c <flatcc_destroy_context@@Base>:
   16b8c:	push	{r4, r5, r6, lr}
   16b90:	subs	r4, r0, #0
   16b94:	popeq	{r4, r5, r6, pc}
   16b98:	mov	r0, r4
   16b9c:	ldr	r5, [r4]
   16ba0:	bl	34c44 <__flatcc_fb_clear_parser@@Base>
   16ba4:	mov	r0, r4
   16ba8:	bl	13fd4 <free@plt>
   16bac:	subs	r4, r5, #0
   16bb0:	bne	16b98 <flatcc_destroy_context@@Base+0xc>
   16bb4:	pop	{r4, r5, r6, pc}
   16bb8:	mov	r0, r1
   16bbc:	b	13fd4 <free@plt>

00016bc0 <__flatcc_fb_open_output_file@@Base>:
   16bc0:	push	{r4, r5, r6, r7, r8, r9, lr}
   16bc4:	mov	r7, r1
   16bc8:	ldr	r1, [r0, #212]	; 0xd4
   16bcc:	mov	r6, r0
   16bd0:	sub	sp, sp, #12
   16bd4:	ldr	r5, [r1, #216]	; 0xd8
   16bd8:	mov	r8, r2
   16bdc:	subs	r0, r5, #0
   16be0:	mov	r9, r3
   16be4:	beq	16c08 <__flatcc_fb_open_output_file@@Base+0x48>
   16be8:	bl	1407c <strlen@plt>
   16bec:	ldr	r4, [r6, #204]	; 0xcc
   16bf0:	cmp	r4, #0
   16bf4:	movne	r4, #0
   16bf8:	beq	16c1c <__flatcc_fb_open_output_file@@Base+0x5c>
   16bfc:	mov	r0, r4
   16c00:	add	sp, sp, #12
   16c04:	pop	{r4, r5, r6, r7, r8, r9, pc}
   16c08:	ldr	r4, [r6, #204]	; 0xcc
   16c0c:	ldr	r5, [pc, #120]	; 16c8c <__flatcc_fb_open_output_file@@Base+0xcc>
   16c10:	cmp	r4, #0
   16c14:	movne	r4, #0
   16c18:	bne	16bfc <__flatcc_fb_open_output_file@@Base+0x3c>
   16c1c:	mov	ip, #1
   16c20:	mov	r1, r0
   16c24:	str	r9, [sp]
   16c28:	mov	r0, r5
   16c2c:	mov	r3, r8
   16c30:	mov	r2, r7
   16c34:	str	ip, [sp, #4]
   16c38:	bl	2bc30 <__flatcc_fb_create_join_path_n@@Base>
   16c3c:	subs	r5, r0, #0
   16c40:	beq	16c88 <__flatcc_fb_open_output_file@@Base+0xc8>
   16c44:	ldr	r1, [pc, #68]	; 16c90 <__flatcc_fb_open_output_file@@Base+0xd0>
   16c48:	bl	13fc8 <fopen@plt>
   16c4c:	cmp	r0, #0
   16c50:	str	r0, [r6, #204]	; 0xcc
   16c54:	beq	16c6c <__flatcc_fb_open_output_file@@Base+0xac>
   16c58:	mov	r0, r5
   16c5c:	bl	13fd4 <free@plt>
   16c60:	mov	r0, r4
   16c64:	add	sp, sp, #12
   16c68:	pop	{r4, r5, r6, r7, r8, r9, pc}
   16c6c:	ldr	r3, [pc, #32]	; 16c94 <__flatcc_fb_open_output_file@@Base+0xd4>
   16c70:	mov	r2, r5
   16c74:	ldr	r1, [pc, #28]	; 16c98 <__flatcc_fb_open_output_file@@Base+0xd8>
   16c78:	ldr	r0, [r3]
   16c7c:	bl	14094 <fprintf@plt>
   16c80:	mvn	r4, #0
   16c84:	b	16c58 <__flatcc_fb_open_output_file@@Base+0x98>
   16c88:	bl	14158 <__assert_fail@plt+0x10>
   16c8c:	andeq	lr, r4, ip, asr #2
   16c90:	andeq	r3, r4, r0, ror #30
   16c94:	andeq	pc, r6, r8, lsr #1
   16c98:	muleq	r4, ip, pc	; <UNPREDICTABLE>

00016c9c <__flatcc_fb_close_output_file@@Base>:
   16c9c:	ldr	r3, [r0, #212]	; 0xd4
   16ca0:	ldr	r2, [r3, #124]	; 0x7c
   16ca4:	cmp	r2, #0
   16ca8:	bxne	lr
   16cac:	push	{r4, r5, r6, lr}
   16cb0:	ldr	r5, [r3, #108]	; 0x6c
   16cb4:	cmp	r5, #0
   16cb8:	popne	{r4, r5, r6, pc}
   16cbc:	ldr	r3, [r0, #204]	; 0xcc
   16cc0:	cmp	r3, #0
   16cc4:	popeq	{r4, r5, r6, pc}
   16cc8:	mov	r4, r0
   16ccc:	mov	r0, r3
   16cd0:	bl	140dc <fclose@plt>
   16cd4:	str	r5, [r4, #204]	; 0xcc
   16cd8:	pop	{r4, r5, r6, pc}

00016cdc <__flatcc_fb_end_output_c@@Base>:
   16cdc:	ldr	r3, [pc, #40]	; 16d0c <__flatcc_fb_end_output_c@@Base+0x30>
   16ce0:	push	{r4, lr}
   16ce4:	mov	r4, r0
   16ce8:	ldr	r3, [r3]
   16cec:	ldr	r0, [r0, #204]	; 0xcc
   16cf0:	cmp	r3, r0
   16cf4:	cmpne	r0, #0
   16cf8:	beq	16d00 <__flatcc_fb_end_output_c@@Base+0x24>
   16cfc:	bl	140dc <fclose@plt>
   16d00:	mov	r3, #0
   16d04:	str	r3, [r4, #204]	; 0xcc
   16d08:	pop	{r4, pc}
   16d0c:	andeq	pc, r6, ip, lsr #1

00016d10 <__flatcc_fb_init_output_c@@Base>:
   16d10:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   16d14:	mov	r7, r1
   16d18:	ldr	ip, [r1, #128]	; 0x80
   16d1c:	ldr	r1, [pc, #420]	; 16ec8 <__flatcc_fb_init_output_c@@Base+0x1b8>
   16d20:	ldr	r8, [r7, #216]	; 0xd8
   16d24:	cmp	ip, #0
   16d28:	ldr	r3, [pc, #412]	; 16ecc <__flatcc_fb_init_output_c@@Base+0x1bc>
   16d2c:	ldr	r9, [pc, #412]	; 16ed0 <__flatcc_fb_init_output_c@@Base+0x1c0>
   16d30:	movne	r9, r1
   16d34:	mov	r1, #0
   16d38:	cmp	r8, r1
   16d3c:	mov	r2, #232	; 0xe8
   16d40:	moveq	r8, r3
   16d44:	mov	r6, r0
   16d48:	bl	140ac <memset@plt>
   16d4c:	ldr	r4, [r7, #196]	; 0xc4
   16d50:	str	r7, [r6, #212]	; 0xd4
   16d54:	cmp	r4, #0
   16d58:	beq	16e6c <__flatcc_fb_init_output_c@@Base+0x15c>
   16d5c:	mov	r0, r4
   16d60:	bl	1407c <strlen@plt>
   16d64:	cmp	r0, #100	; 0x64
   16d68:	mov	sl, r0
   16d6c:	bhi	16ea8 <__flatcc_fb_init_output_c@@Base+0x198>
   16d70:	mov	r1, r4
   16d74:	mov	r2, #100	; 0x64
   16d78:	mov	r0, r6
   16d7c:	bl	140b8 <strncpy@plt>
   16d80:	mov	r3, #0
   16d84:	cmp	sl, #0
   16d88:	strb	r3, [r6, #100]	; 0x64
   16d8c:	bne	16e34 <__flatcc_fb_init_output_c@@Base+0x124>
   16d90:	ldrb	r4, [r6]
   16d94:	add	r5, r6, #102	; 0x66
   16d98:	cmp	r4, #0
   16d9c:	beq	16e64 <__flatcc_fb_init_output_c@@Base+0x154>
   16da0:	bl	14058 <__ctype_toupper_loc@plt>
   16da4:	mov	r3, r5
   16da8:	mov	r2, r6
   16dac:	ldr	r1, [r0]
   16db0:	ldr	r1, [r1, r4, lsl #2]
   16db4:	strb	r1, [r3], #1
   16db8:	ldrb	r4, [r2, #1]!
   16dbc:	cmp	r4, #0
   16dc0:	bne	16dac <__flatcc_fb_init_output_c@@Base+0x9c>
   16dc4:	add	sl, r6, sl
   16dc8:	mov	r2, #0
   16dcc:	strb	r2, [r3]
   16dd0:	strb	r2, [sl, #102]	; 0x66
   16dd4:	ldr	r4, [r7, #108]	; 0x6c
   16dd8:	ldr	r3, [r7, #176]	; 0xb0
   16ddc:	cmp	r4, r2
   16de0:	str	r3, [r6, #224]	; 0xe0
   16de4:	bne	16e4c <__flatcc_fb_init_output_c@@Base+0x13c>
   16de8:	ldr	r3, [r6, #212]	; 0xd4
   16dec:	ldr	r1, [r3, #124]	; 0x7c
   16df0:	cmp	r1, #0
   16df4:	beq	16e2c <__flatcc_fb_init_output_c@@Base+0x11c>
   16df8:	mov	r0, r8
   16dfc:	mov	r3, #1
   16e00:	ldr	r2, [pc, #196]	; 16ecc <__flatcc_fb_init_output_c@@Base+0x1bc>
   16e04:	bl	2bd74 <__flatcc_fb_create_join_path@@Base>
   16e08:	subs	r5, r0, #0
   16e0c:	beq	16ec4 <__flatcc_fb_init_output_c@@Base+0x1b4>
   16e10:	mov	r1, r9
   16e14:	bl	13fc8 <fopen@plt>
   16e18:	cmp	r0, #0
   16e1c:	str	r0, [r6, #204]	; 0xcc
   16e20:	beq	16e8c <__flatcc_fb_init_output_c@@Base+0x17c>
   16e24:	mov	r0, r5
   16e28:	bl	13fd4 <free@plt>
   16e2c:	mov	r0, r4
   16e30:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   16e34:	add	r1, sl, #1
   16e38:	mov	r2, #95	; 0x5f
   16e3c:	mov	r3, #0
   16e40:	strb	r2, [r6, sl]
   16e44:	strb	r3, [r6, r1]
   16e48:	b	16d90 <__flatcc_fb_init_output_c@@Base+0x80>
   16e4c:	ldr	r3, [pc, #128]	; 16ed4 <__flatcc_fb_init_output_c@@Base+0x1c4>
   16e50:	mov	r4, r2
   16e54:	mov	r0, r4
   16e58:	ldr	r3, [r3]
   16e5c:	str	r3, [r6, #204]	; 0xcc
   16e60:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   16e64:	mov	r3, r5
   16e68:	b	16dc4 <__flatcc_fb_init_output_c@@Base+0xb4>
   16e6c:	ldr	r1, [pc, #100]	; 16ed8 <__flatcc_fb_init_output_c@@Base+0x1c8>
   16e70:	mov	r2, #100	; 0x64
   16e74:	mov	r0, r6
   16e78:	bl	140b8 <strncpy@plt>
   16e7c:	mov	sl, #11
   16e80:	strb	r4, [r6, #100]	; 0x64
   16e84:	mov	r1, #12
   16e88:	b	16e38 <__flatcc_fb_init_output_c@@Base+0x128>
   16e8c:	ldr	r3, [pc, #72]	; 16edc <__flatcc_fb_init_output_c@@Base+0x1cc>
   16e90:	mov	r2, r5
   16e94:	ldr	r1, [pc, #68]	; 16ee0 <__flatcc_fb_init_output_c@@Base+0x1d0>
   16e98:	ldr	r0, [r3]
   16e9c:	bl	14094 <fprintf@plt>
   16ea0:	mvn	r4, #0
   16ea4:	b	16e24 <__flatcc_fb_init_output_c@@Base+0x114>
   16ea8:	ldr	r3, [pc, #44]	; 16edc <__flatcc_fb_init_output_c@@Base+0x1cc>
   16eac:	mov	r2, #100	; 0x64
   16eb0:	ldr	r1, [pc, #44]	; 16ee4 <__flatcc_fb_init_output_c@@Base+0x1d4>
   16eb4:	ldr	r0, [r3]
   16eb8:	bl	14094 <fprintf@plt>
   16ebc:	mvn	r4, #0
   16ec0:	b	16e2c <__flatcc_fb_init_output_c@@Base+0x11c>
   16ec4:	bl	14158 <__assert_fail@plt+0x10>
   16ec8:	andeq	r3, r4, r0, asr #31
   16ecc:	andeq	lr, r4, ip, asr #2
   16ed0:	andeq	r3, r4, r0, ror #30
   16ed4:	andeq	pc, r6, ip, lsr #1
   16ed8:	strdeq	r3, [r4], -ip
   16edc:	andeq	pc, r6, r8, lsr #1
   16ee0:	muleq	r4, ip, pc	; <UNPREDICTABLE>
   16ee4:	andeq	r3, r4, r4, asr #31

00016ee8 <__flatcc_fb_gen_c_includes@@Base>:
   16ee8:	ldr	ip, [r0, #208]	; 0xd0
   16eec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16ef0:	sub	sp, sp, #28
   16ef4:	mov	r3, #0
   16ef8:	mov	r7, r0
   16efc:	ldr	r0, [ip, #164]	; 0xa4
   16f00:	ldr	r5, [ip]
   16f04:	mov	sl, r1
   16f08:	mov	fp, r2
   16f0c:	str	r3, [sp, #12]
   16f10:	str	r3, [sp, #8]
   16f14:	str	r3, [sp, #16]
   16f18:	str	r3, [sp, #20]
   16f1c:	bl	2bbac <__flatcc_fb_copy_path@@Base>
   16f20:	mov	r2, #1
   16f24:	mov	r1, r0
   16f28:	add	r0, sp, #8
   16f2c:	bl	28b94 <str_set_insert_item@@Base>
   16f30:	cmp	r5, #0
   16f34:	beq	16fc4 <__flatcc_fb_gen_c_includes@@Base+0xdc>
   16f38:	mov	r8, #1
   16f3c:	ldr	r3, [r7, #212]	; 0xd4
   16f40:	ldr	r1, [r5, #12]
   16f44:	ldr	r0, [r5, #8]
   16f48:	ldr	r2, [r3, #96]	; 0x60
   16f4c:	bl	2c1b4 <__flatcc_fb_create_basename@@Base>
   16f50:	subs	r6, r0, #0
   16f54:	beq	17008 <__flatcc_fb_gen_c_includes@@Base+0x120>
   16f58:	ldr	r5, [r5]
   16f5c:	bl	2bbac <__flatcc_fb_copy_path@@Base>
   16f60:	subs	r9, r0, #0
   16f64:	beq	17008 <__flatcc_fb_gen_c_includes@@Base+0x120>
   16f68:	ldrb	r4, [r9]
   16f6c:	cmp	r4, #0
   16f70:	beq	16f94 <__flatcc_fb_gen_c_includes@@Base+0xac>
   16f74:	bl	14058 <__ctype_toupper_loc@plt>
   16f78:	mov	r2, r9
   16f7c:	ldr	r1, [r0]
   16f80:	ldr	r1, [r1, r4, lsl #2]
   16f84:	strb	r1, [r2]
   16f88:	ldrb	r4, [r2, #1]!
   16f8c:	cmp	r4, #0
   16f90:	bne	16f7c <__flatcc_fb_gen_c_includes@@Base+0x94>
   16f94:	mov	r2, r8
   16f98:	mov	r1, r9
   16f9c:	add	r0, sp, #8
   16fa0:	bl	28b94 <str_set_insert_item@@Base>
   16fa4:	cmp	r0, #0
   16fa8:	beq	16fdc <__flatcc_fb_gen_c_includes@@Base+0xf4>
   16fac:	mov	r0, r9
   16fb0:	bl	13fd4 <free@plt>
   16fb4:	mov	r0, r6
   16fb8:	bl	13fd4 <free@plt>
   16fbc:	cmp	r5, #0
   16fc0:	bne	16f3c <__flatcc_fb_gen_c_includes@@Base+0x54>
   16fc4:	add	r0, sp, #8
   16fc8:	mov	r2, #0
   16fcc:	ldr	r1, [pc, #56]	; 1700c <__flatcc_fb_gen_c_includes@@Base+0x124>
   16fd0:	bl	28ab0 <str_set_destroy@@Base>
   16fd4:	add	sp, sp, #28
   16fd8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16fdc:	ldr	r0, [r7, #204]	; 0xcc
   16fe0:	mov	r2, r9
   16fe4:	mov	r3, fp
   16fe8:	ldr	r1, [pc, #32]	; 17010 <__flatcc_fb_gen_c_includes@@Base+0x128>
   16fec:	stm	sp, {r6, sl}
   16ff0:	bl	14094 <fprintf@plt>
   16ff4:	mov	r0, r6
   16ff8:	bl	13fd4 <free@plt>
   16ffc:	cmp	r5, #0
   17000:	bne	16f3c <__flatcc_fb_gen_c_includes@@Base+0x54>
   17004:	b	16fc4 <__flatcc_fb_gen_c_includes@@Base+0xdc>
   17008:	bl	14158 <__assert_fail@plt+0x10>
   1700c:			; <UNDEFINED> instruction: 0x00016bb8
   17010:	andeq	r4, r4, r8

00017014 <__flatcc_fb_copy_scope@@Base>:
   17014:	ldr	r3, [r0]
   17018:	push	{r4, r5, r6, r7, r8, lr}
   1701c:	cmp	r3, #0
   17020:	ldr	r6, [r0, #24]
   17024:	mov	ip, r6
   17028:	beq	17048 <__flatcc_fb_copy_scope@@Base+0x34>
   1702c:	ldr	r2, [r3, #4]
   17030:	ldr	r3, [r3]
   17034:	ldr	r2, [r2, #4]
   17038:	cmp	r3, #0
   1703c:	add	r2, r2, #1
   17040:	add	ip, ip, r2
   17044:	bne	1702c <__flatcc_fb_copy_scope@@Base+0x18>
   17048:	cmp	ip, #101	; 0x65
   1704c:	bhi	170b4 <__flatcc_fb_copy_scope@@Base+0xa0>
   17050:	mov	r7, r1
   17054:	mov	r4, r0
   17058:	ldr	r1, [r0, #20]
   1705c:	mov	r2, r6
   17060:	mov	r0, r7
   17064:	bl	13fe0 <memcpy@plt>
   17068:	ldr	r5, [r4]
   1706c:	cmp	r5, #0
   17070:	beq	170a4 <__flatcc_fb_copy_scope@@Base+0x90>
   17074:	mov	r8, #95	; 0x5f
   17078:	ldr	r3, [r5, #4]
   1707c:	add	r0, r7, r6
   17080:	ldm	r3, {r1, r4}
   17084:	mov	r2, r4
   17088:	add	r4, r4, r6
   1708c:	bl	13fe0 <memcpy@plt>
   17090:	strb	r8, [r7, r4]
   17094:	ldr	r5, [r5]
   17098:	add	r6, r4, #1
   1709c:	cmp	r5, #0
   170a0:	bne	17078 <__flatcc_fb_copy_scope@@Base+0x64>
   170a4:	mov	r3, #0
   170a8:	mov	r0, r6
   170ac:	strb	r3, [r7, r6]
   170b0:	pop	{r4, r5, r6, r7, r8, pc}
   170b4:	mov	r3, #0
   170b8:	strb	r3, [r1]
   170bc:	mvn	r0, #0
   170c0:	pop	{r4, r5, r6, r7, r8, pc}

000170c4 <__flatcc_fb_scoped_symbol_name@@Base>:
   170c4:	ldr	r3, [r2, #204]	; 0xcc
   170c8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   170cc:	cmp	r3, r0
   170d0:	mov	r6, r2
   170d4:	ldr	r7, [r1, #4]
   170d8:	beq	17200 <__flatcc_fb_scoped_symbol_name@@Base+0x13c>
   170dc:	ldr	r3, [r0]
   170e0:	ldr	r8, [r0, #24]
   170e4:	cmp	r3, #0
   170e8:	mov	r4, r0
   170ec:	mov	r1, r8
   170f0:	beq	17110 <__flatcc_fb_scoped_symbol_name@@Base+0x4c>
   170f4:	ldr	r2, [r3, #4]
   170f8:	ldr	r3, [r3]
   170fc:	ldr	r2, [r2, #4]
   17100:	cmp	r3, #0
   17104:	add	r2, r2, #1
   17108:	add	r1, r1, r2
   1710c:	bne	170f4 <__flatcc_fb_scoped_symbol_name@@Base+0x30>
   17110:	cmp	r1, #101	; 0x65
   17114:	movhi	r3, #0
   17118:	strbhi	r3, [r6]
   1711c:	bhi	171e0 <__flatcc_fb_scoped_symbol_name@@Base+0x11c>
   17120:	mov	r2, r8
   17124:	ldr	r1, [r4, #20]
   17128:	mov	r0, r6
   1712c:	bl	13fe0 <memcpy@plt>
   17130:	ldr	r5, [r4]
   17134:	cmp	r5, #0
   17138:	beq	1716c <__flatcc_fb_scoped_symbol_name@@Base+0xa8>
   1713c:	mov	r9, #95	; 0x5f
   17140:	ldr	r3, [r5, #4]
   17144:	add	r0, r6, r8
   17148:	ldm	r3, {r1, r4}
   1714c:	mov	r2, r4
   17150:	add	r4, r4, r8
   17154:	bl	13fe0 <memcpy@plt>
   17158:	strb	r9, [r6, r4]
   1715c:	ldr	r5, [r5]
   17160:	add	r8, r4, #1
   17164:	cmp	r5, #0
   17168:	bne	17140 <__flatcc_fb_scoped_symbol_name@@Base+0x7c>
   1716c:	mov	r3, #0
   17170:	cmp	r8, r3
   17174:	strb	r3, [r6, r8]
   17178:	mov	r0, r8
   1717c:	str	r8, [r6, #208]	; 0xd0
   17180:	blt	171e0 <__flatcc_fb_scoped_symbol_name@@Base+0x11c>
   17184:	ldr	r2, [r7, #4]
   17188:	add	r3, r2, r0
   1718c:	cmp	r3, #203	; 0xcb
   17190:	str	r2, [r6, #212]	; 0xd4
   17194:	str	r3, [r6, #216]	; 0xd8
   17198:	ble	171c4 <__flatcc_fb_scoped_symbol_name@@Base+0x100>
   1719c:	ldr	r1, [pc, #100]	; 17208 <__flatcc_fb_scoped_symbol_name@@Base+0x144>
   171a0:	ldr	r3, [r7]
   171a4:	ldr	r0, [r1]
   171a8:	ldr	r1, [pc, #92]	; 1720c <__flatcc_fb_scoped_symbol_name@@Base+0x148>
   171ac:	bl	14094 <fprintf@plt>
   171b0:	ldr	r0, [r6, #208]	; 0xd0
   171b4:	mov	r3, #203	; 0xcb
   171b8:	sub	r2, r3, r0
   171bc:	str	r2, [r6, #212]	; 0xd4
   171c0:	str	r3, [r6, #216]	; 0xd8
   171c4:	ldr	r1, [r7]
   171c8:	add	r0, r6, r0
   171cc:	bl	13fe0 <memcpy@plt>
   171d0:	ldr	r3, [r6, #216]	; 0xd8
   171d4:	mov	r2, #0
   171d8:	strb	r2, [r6, r3]
   171dc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   171e0:	ldr	r3, [pc, #32]	; 17208 <__flatcc_fb_scoped_symbol_name@@Base+0x144>
   171e4:	mov	r2, #0
   171e8:	str	r2, [r6, #208]	; 0xd0
   171ec:	ldr	r3, [r3]
   171f0:	mov	r2, #28
   171f4:	mov	r1, #1
   171f8:	ldr	r0, [pc, #16]	; 17210 <__flatcc_fb_scoped_symbol_name@@Base+0x14c>
   171fc:	bl	1401c <fwrite@plt>
   17200:	ldr	r0, [r6, #208]	; 0xd0
   17204:	b	17184 <__flatcc_fb_scoped_symbol_name@@Base+0xc0>
   17208:	andeq	pc, r6, r8, lsr #1
   1720c:	andeq	r4, r4, r0, asr r0
   17210:	andeq	r4, r4, r0, lsr r0

00017214 <__flatcc_fb_codegen_common_c@@Base>:
   17214:	push	{r4, r5, r6, r7, lr}
   17218:	sub	sp, sp, #12
   1721c:	mov	r4, r0
   17220:	bl	1407c <strlen@plt>
   17224:	ldr	r3, [r4, #212]	; 0xd4
   17228:	ldr	r2, [r3, #144]	; 0x90
   1722c:	cmp	r2, #0
   17230:	sub	r6, r0, #1
   17234:	bne	172ac <__flatcc_fb_codegen_common_c@@Base+0x98>
   17238:	ldr	r2, [r3, #148]	; 0x94
   1723c:	cmp	r2, #0
   17240:	bne	17254 <__flatcc_fb_codegen_common_c@@Base+0x40>
   17244:	mov	r5, #0
   17248:	mov	r0, r5
   1724c:	add	sp, sp, #12
   17250:	pop	{r4, r5, r6, r7, pc}
   17254:	ldr	r5, [r3, #216]	; 0xd8
   17258:	subs	r0, r5, #0
   1725c:	beq	172f4 <__flatcc_fb_codegen_common_c@@Base+0xe0>
   17260:	bl	1407c <strlen@plt>
   17264:	ldr	r3, [r4, #204]	; 0xcc
   17268:	cmp	r3, #0
   1726c:	beq	17370 <__flatcc_fb_codegen_common_c@@Base+0x15c>
   17270:	mov	r0, r4
   17274:	bl	1e66c <__flatcc_fb_gen_common_c_builder_header@@Base>
   17278:	ldr	r3, [r4, #212]	; 0xd4
   1727c:	ldr	r2, [r3, #124]	; 0x7c
   17280:	cmp	r2, #0
   17284:	bne	17244 <__flatcc_fb_codegen_common_c@@Base+0x30>
   17288:	ldr	r5, [r3, #108]	; 0x6c
   1728c:	cmp	r5, #0
   17290:	bne	17244 <__flatcc_fb_codegen_common_c@@Base+0x30>
   17294:	ldr	r0, [r4, #204]	; 0xcc
   17298:	cmp	r0, #0
   1729c:	beq	17244 <__flatcc_fb_codegen_common_c@@Base+0x30>
   172a0:	bl	140dc <fclose@plt>
   172a4:	str	r5, [r4, #204]	; 0xcc
   172a8:	b	17248 <__flatcc_fb_codegen_common_c@@Base+0x34>
   172ac:	ldr	r5, [r3, #216]	; 0xd8
   172b0:	subs	r0, r5, #0
   172b4:	beq	172fc <__flatcc_fb_codegen_common_c@@Base+0xe8>
   172b8:	bl	1407c <strlen@plt>
   172bc:	ldr	r3, [r4, #204]	; 0xcc
   172c0:	cmp	r3, #0
   172c4:	beq	17328 <__flatcc_fb_codegen_common_c@@Base+0x114>
   172c8:	mov	r0, r4
   172cc:	bl	1a6d8 <__flatcc_fb_gen_common_c_header@@Base>
   172d0:	ldr	r3, [r4, #212]	; 0xd4
   172d4:	ldr	r2, [r3, #124]	; 0x7c
   172d8:	cmp	r2, #0
   172dc:	mov	r5, r0
   172e0:	beq	17304 <__flatcc_fb_codegen_common_c@@Base+0xf0>
   172e4:	cmp	r5, #0
   172e8:	bne	17248 <__flatcc_fb_codegen_common_c@@Base+0x34>
   172ec:	ldr	r3, [r4, #212]	; 0xd4
   172f0:	b	17238 <__flatcc_fb_codegen_common_c@@Base+0x24>
   172f4:	ldr	r5, [pc, #232]	; 173e4 <__flatcc_fb_codegen_common_c@@Base+0x1d0>
   172f8:	b	17264 <__flatcc_fb_codegen_common_c@@Base+0x50>
   172fc:	ldr	r5, [pc, #224]	; 173e4 <__flatcc_fb_codegen_common_c@@Base+0x1d0>
   17300:	b	172bc <__flatcc_fb_codegen_common_c@@Base+0xa8>
   17304:	ldr	r7, [r3, #108]	; 0x6c
   17308:	cmp	r7, #0
   1730c:	bne	172e4 <__flatcc_fb_codegen_common_c@@Base+0xd0>
   17310:	ldr	r0, [r4, #204]	; 0xcc
   17314:	cmp	r0, #0
   17318:	beq	172e4 <__flatcc_fb_codegen_common_c@@Base+0xd0>
   1731c:	bl	140dc <fclose@plt>
   17320:	str	r7, [r4, #204]	; 0xcc
   17324:	b	172e4 <__flatcc_fb_codegen_common_c@@Base+0xd0>
   17328:	ldr	r2, [pc, #184]	; 173e8 <__flatcc_fb_codegen_common_c@@Base+0x1d4>
   1732c:	mov	r3, #1
   17330:	mov	r1, r0
   17334:	stm	sp, {r2, r3}
   17338:	mov	r0, r5
   1733c:	mov	r3, r6
   17340:	mov	r2, r4
   17344:	bl	2bc30 <__flatcc_fb_create_join_path_n@@Base>
   17348:	subs	r5, r0, #0
   1734c:	beq	173e0 <__flatcc_fb_codegen_common_c@@Base+0x1cc>
   17350:	ldr	r1, [pc, #148]	; 173ec <__flatcc_fb_codegen_common_c@@Base+0x1d8>
   17354:	bl	13fc8 <fopen@plt>
   17358:	cmp	r0, #0
   1735c:	str	r0, [r4, #204]	; 0xcc
   17360:	beq	173bc <__flatcc_fb_codegen_common_c@@Base+0x1a8>
   17364:	mov	r0, r5
   17368:	bl	13fd4 <free@plt>
   1736c:	b	172c8 <__flatcc_fb_codegen_common_c@@Base+0xb4>
   17370:	ldr	ip, [pc, #120]	; 173f0 <__flatcc_fb_codegen_common_c@@Base+0x1dc>
   17374:	mov	r2, #1
   17378:	mov	r1, r0
   1737c:	str	r2, [sp, #4]
   17380:	mov	r0, r5
   17384:	mov	r3, r6
   17388:	str	ip, [sp]
   1738c:	mov	r2, r4
   17390:	bl	2bc30 <__flatcc_fb_create_join_path_n@@Base>
   17394:	subs	r5, r0, #0
   17398:	beq	173e0 <__flatcc_fb_codegen_common_c@@Base+0x1cc>
   1739c:	ldr	r1, [pc, #72]	; 173ec <__flatcc_fb_codegen_common_c@@Base+0x1d8>
   173a0:	bl	13fc8 <fopen@plt>
   173a4:	cmp	r0, #0
   173a8:	str	r0, [r4, #204]	; 0xcc
   173ac:	beq	173bc <__flatcc_fb_codegen_common_c@@Base+0x1a8>
   173b0:	mov	r0, r5
   173b4:	bl	13fd4 <free@plt>
   173b8:	b	17270 <__flatcc_fb_codegen_common_c@@Base+0x5c>
   173bc:	ldr	r3, [pc, #48]	; 173f4 <__flatcc_fb_codegen_common_c@@Base+0x1e0>
   173c0:	mov	r2, r5
   173c4:	ldr	r1, [pc, #44]	; 173f8 <__flatcc_fb_codegen_common_c@@Base+0x1e4>
   173c8:	ldr	r0, [r3]
   173cc:	bl	14094 <fprintf@plt>
   173d0:	mov	r0, r5
   173d4:	bl	13fd4 <free@plt>
   173d8:	mvn	r5, #0
   173dc:	b	17248 <__flatcc_fb_codegen_common_c@@Base+0x34>
   173e0:	bl	14158 <__assert_fail@plt+0x10>
   173e4:	andeq	lr, r4, ip, asr #2
   173e8:	andeq	r4, r4, r8, ror r0
   173ec:	andeq	r3, r4, r0, ror #30
   173f0:	andeq	r4, r4, ip, lsl #1
   173f4:	andeq	pc, r6, r8, lsr #1
   173f8:	muleq	r4, ip, pc	; <UNPREDICTABLE>

000173fc <__flatcc_fb_codegen_c@@Base>:
   173fc:	mov	r2, #0
   17400:	push	{r4, r5, r6, r7, lr}
   17404:	mov	r4, r0
   17408:	str	r1, [r0, #208]	; 0xd0
   1740c:	sub	sp, sp, #12
   17410:	ldr	r0, [r1, #60]	; 0x3c
   17414:	mov	r1, r2
   17418:	bl	2a880 <fb_scope_table_find@@Base>
   1741c:	ldr	r3, [r4, #208]	; 0xd0
   17420:	ldr	r5, [r3, #160]	; 0xa0
   17424:	str	r0, [r4, #216]	; 0xd8
   17428:	mov	r0, r5
   1742c:	bl	1407c <strlen@plt>
   17430:	ldr	r3, [r4, #212]	; 0xd4
   17434:	ldr	r2, [r3, #152]	; 0x98
   17438:	cmp	r2, #0
   1743c:	mov	r6, r0
   17440:	bne	174e4 <__flatcc_fb_codegen_c@@Base+0xe8>
   17444:	ldr	r2, [r3, #156]	; 0x9c
   17448:	cmp	r2, #0
   1744c:	bne	17548 <__flatcc_fb_codegen_c@@Base+0x14c>
   17450:	ldr	r2, [r3, #160]	; 0xa0
   17454:	cmp	r2, #0
   17458:	bne	175ac <__flatcc_fb_codegen_c@@Base+0x1b0>
   1745c:	ldr	r2, [r3, #164]	; 0xa4
   17460:	cmp	r2, #0
   17464:	bne	17610 <__flatcc_fb_codegen_c@@Base+0x214>
   17468:	ldr	r2, [r3, #168]	; 0xa8
   1746c:	cmp	r2, #0
   17470:	bne	17484 <__flatcc_fb_codegen_c@@Base+0x88>
   17474:	mov	r5, #0
   17478:	mov	r0, r5
   1747c:	add	sp, sp, #12
   17480:	pop	{r4, r5, r6, r7, pc}
   17484:	ldr	r5, [r3, #216]	; 0xd8
   17488:	subs	r0, r5, #0
   1748c:	beq	17674 <__flatcc_fb_codegen_c@@Base+0x278>
   17490:	bl	1407c <strlen@plt>
   17494:	ldr	r3, [r4, #204]	; 0xcc
   17498:	cmp	r3, #0
   1749c:	beq	17738 <__flatcc_fb_codegen_c@@Base+0x33c>
   174a0:	mov	r0, r4
   174a4:	bl	26730 <__flatcc_fb_gen_c_json_printer@@Base>
   174a8:	subs	r5, r0, #0
   174ac:	bne	17478 <__flatcc_fb_codegen_c@@Base+0x7c>
   174b0:	ldr	r3, [r4, #212]	; 0xd4
   174b4:	ldr	r2, [r3, #124]	; 0x7c
   174b8:	cmp	r2, #0
   174bc:	bne	17474 <__flatcc_fb_codegen_c@@Base+0x78>
   174c0:	ldr	r5, [r3, #108]	; 0x6c
   174c4:	cmp	r5, #0
   174c8:	bne	17474 <__flatcc_fb_codegen_c@@Base+0x78>
   174cc:	ldr	r0, [r4, #204]	; 0xcc
   174d0:	cmp	r0, #0
   174d4:	beq	17474 <__flatcc_fb_codegen_c@@Base+0x78>
   174d8:	bl	140dc <fclose@plt>
   174dc:	str	r5, [r4, #204]	; 0xcc
   174e0:	b	17478 <__flatcc_fb_codegen_c@@Base+0x7c>
   174e4:	ldr	r7, [r3, #216]	; 0xd8
   174e8:	subs	r0, r7, #0
   174ec:	beq	17684 <__flatcc_fb_codegen_c@@Base+0x288>
   174f0:	bl	1407c <strlen@plt>
   174f4:	ldr	r3, [r4, #204]	; 0xcc
   174f8:	cmp	r3, #0
   174fc:	beq	17694 <__flatcc_fb_codegen_c@@Base+0x298>
   17500:	mov	r0, r4
   17504:	bl	1b334 <__flatcc_fb_gen_c_reader@@Base>
   17508:	subs	r5, r0, #0
   1750c:	bne	17478 <__flatcc_fb_codegen_c@@Base+0x7c>
   17510:	ldr	r3, [r4, #212]	; 0xd4
   17514:	ldr	r2, [r3, #124]	; 0x7c
   17518:	cmp	r2, #0
   1751c:	bne	17444 <__flatcc_fb_codegen_c@@Base+0x48>
   17520:	ldr	r5, [r3, #108]	; 0x6c
   17524:	cmp	r5, #0
   17528:	bne	17444 <__flatcc_fb_codegen_c@@Base+0x48>
   1752c:	ldr	r0, [r4, #204]	; 0xcc
   17530:	cmp	r0, #0
   17534:	beq	17444 <__flatcc_fb_codegen_c@@Base+0x48>
   17538:	bl	140dc <fclose@plt>
   1753c:	ldr	r3, [r4, #212]	; 0xd4
   17540:	str	r5, [r4, #204]	; 0xcc
   17544:	b	17444 <__flatcc_fb_codegen_c@@Base+0x48>
   17548:	ldr	r5, [r3, #216]	; 0xd8
   1754c:	subs	r0, r5, #0
   17550:	beq	1768c <__flatcc_fb_codegen_c@@Base+0x290>
   17554:	bl	1407c <strlen@plt>
   17558:	ldr	r3, [r4, #204]	; 0xcc
   1755c:	cmp	r3, #0
   17560:	beq	176e8 <__flatcc_fb_codegen_c@@Base+0x2ec>
   17564:	mov	r0, r4
   17568:	bl	1ef28 <__flatcc_fb_gen_c_builder@@Base>
   1756c:	subs	r5, r0, #0
   17570:	bne	17478 <__flatcc_fb_codegen_c@@Base+0x7c>
   17574:	ldr	r3, [r4, #212]	; 0xd4
   17578:	ldr	r2, [r3, #124]	; 0x7c
   1757c:	cmp	r2, #0
   17580:	bne	17450 <__flatcc_fb_codegen_c@@Base+0x54>
   17584:	ldr	r5, [r3, #108]	; 0x6c
   17588:	cmp	r5, #0
   1758c:	bne	17450 <__flatcc_fb_codegen_c@@Base+0x54>
   17590:	ldr	r0, [r4, #204]	; 0xcc
   17594:	cmp	r0, #0
   17598:	beq	17450 <__flatcc_fb_codegen_c@@Base+0x54>
   1759c:	bl	140dc <fclose@plt>
   175a0:	ldr	r3, [r4, #212]	; 0xd4
   175a4:	str	r5, [r4, #204]	; 0xcc
   175a8:	b	17450 <__flatcc_fb_codegen_c@@Base+0x54>
   175ac:	ldr	r5, [r3, #216]	; 0xd8
   175b0:	subs	r0, r5, #0
   175b4:	beq	1767c <__flatcc_fb_codegen_c@@Base+0x280>
   175b8:	bl	1407c <strlen@plt>
   175bc:	ldr	r3, [r4, #204]	; 0xcc
   175c0:	cmp	r3, #0
   175c4:	beq	17788 <__flatcc_fb_codegen_c@@Base+0x38c>
   175c8:	mov	r0, r4
   175cc:	bl	20414 <__flatcc_fb_gen_c_verifier@@Base>
   175d0:	subs	r5, r0, #0
   175d4:	bne	17478 <__flatcc_fb_codegen_c@@Base+0x7c>
   175d8:	ldr	r3, [r4, #212]	; 0xd4
   175dc:	ldr	r2, [r3, #124]	; 0x7c
   175e0:	cmp	r2, #0
   175e4:	bne	1745c <__flatcc_fb_codegen_c@@Base+0x60>
   175e8:	ldr	r5, [r3, #108]	; 0x6c
   175ec:	cmp	r5, #0
   175f0:	bne	1745c <__flatcc_fb_codegen_c@@Base+0x60>
   175f4:	ldr	r0, [r4, #204]	; 0xcc
   175f8:	cmp	r0, #0
   175fc:	beq	1745c <__flatcc_fb_codegen_c@@Base+0x60>
   17600:	bl	140dc <fclose@plt>
   17604:	ldr	r3, [r4, #212]	; 0xd4
   17608:	str	r5, [r4, #204]	; 0xcc
   1760c:	b	1745c <__flatcc_fb_codegen_c@@Base+0x60>
   17610:	ldr	r5, [r3, #216]	; 0xd8
   17614:	subs	r0, r5, #0
   17618:	beq	176e0 <__flatcc_fb_codegen_c@@Base+0x2e4>
   1761c:	bl	1407c <strlen@plt>
   17620:	ldr	r3, [r4, #204]	; 0xcc
   17624:	cmp	r3, #0
   17628:	beq	177d8 <__flatcc_fb_codegen_c@@Base+0x3dc>
   1762c:	mov	r0, r4
   17630:	bl	238b0 <__flatcc_fb_gen_c_json_parser@@Base>
   17634:	subs	r5, r0, #0
   17638:	bne	17478 <__flatcc_fb_codegen_c@@Base+0x7c>
   1763c:	ldr	r3, [r4, #212]	; 0xd4
   17640:	ldr	r2, [r3, #124]	; 0x7c
   17644:	cmp	r2, #0
   17648:	bne	17468 <__flatcc_fb_codegen_c@@Base+0x6c>
   1764c:	ldr	r5, [r3, #108]	; 0x6c
   17650:	cmp	r5, #0
   17654:	bne	17468 <__flatcc_fb_codegen_c@@Base+0x6c>
   17658:	ldr	r0, [r4, #204]	; 0xcc
   1765c:	cmp	r0, #0
   17660:	beq	17468 <__flatcc_fb_codegen_c@@Base+0x6c>
   17664:	bl	140dc <fclose@plt>
   17668:	ldr	r3, [r4, #212]	; 0xd4
   1766c:	str	r5, [r4, #204]	; 0xcc
   17670:	b	17468 <__flatcc_fb_codegen_c@@Base+0x6c>
   17674:	ldr	r5, [pc, #468]	; 17850 <__flatcc_fb_codegen_c@@Base+0x454>
   17678:	b	17494 <__flatcc_fb_codegen_c@@Base+0x98>
   1767c:	ldr	r5, [pc, #460]	; 17850 <__flatcc_fb_codegen_c@@Base+0x454>
   17680:	b	175bc <__flatcc_fb_codegen_c@@Base+0x1c0>
   17684:	ldr	r7, [pc, #452]	; 17850 <__flatcc_fb_codegen_c@@Base+0x454>
   17688:	b	174f4 <__flatcc_fb_codegen_c@@Base+0xf8>
   1768c:	ldr	r5, [pc, #444]	; 17850 <__flatcc_fb_codegen_c@@Base+0x454>
   17690:	b	17558 <__flatcc_fb_codegen_c@@Base+0x15c>
   17694:	ldr	ip, [pc, #440]	; 17854 <__flatcc_fb_codegen_c@@Base+0x458>
   17698:	mov	r3, #1
   1769c:	mov	r2, r5
   176a0:	mov	r1, r0
   176a4:	str	r3, [sp, #4]
   176a8:	mov	r0, r7
   176ac:	str	ip, [sp]
   176b0:	mov	r3, r6
   176b4:	bl	2bc30 <__flatcc_fb_create_join_path_n@@Base>
   176b8:	subs	r5, r0, #0
   176bc:	beq	1784c <__flatcc_fb_codegen_c@@Base+0x450>
   176c0:	ldr	r1, [pc, #400]	; 17858 <__flatcc_fb_codegen_c@@Base+0x45c>
   176c4:	bl	13fc8 <fopen@plt>
   176c8:	cmp	r0, #0
   176cc:	str	r0, [r4, #204]	; 0xcc
   176d0:	beq	17828 <__flatcc_fb_codegen_c@@Base+0x42c>
   176d4:	mov	r0, r5
   176d8:	bl	13fd4 <free@plt>
   176dc:	b	17500 <__flatcc_fb_codegen_c@@Base+0x104>
   176e0:	ldr	r5, [pc, #360]	; 17850 <__flatcc_fb_codegen_c@@Base+0x454>
   176e4:	b	17620 <__flatcc_fb_codegen_c@@Base+0x224>
   176e8:	ldr	r2, [r4, #208]	; 0xd0
   176ec:	ldr	ip, [pc, #360]	; 1785c <__flatcc_fb_codegen_c@@Base+0x460>
   176f0:	mov	r3, #1
   176f4:	ldr	r2, [r2, #160]	; 0xa0
   176f8:	mov	r1, r0
   176fc:	str	r3, [sp, #4]
   17700:	mov	r0, r5
   17704:	str	ip, [sp]
   17708:	mov	r3, r6
   1770c:	bl	2bc30 <__flatcc_fb_create_join_path_n@@Base>
   17710:	subs	r5, r0, #0
   17714:	beq	1784c <__flatcc_fb_codegen_c@@Base+0x450>
   17718:	ldr	r1, [pc, #312]	; 17858 <__flatcc_fb_codegen_c@@Base+0x45c>
   1771c:	bl	13fc8 <fopen@plt>
   17720:	cmp	r0, #0
   17724:	str	r0, [r4, #204]	; 0xcc
   17728:	beq	17828 <__flatcc_fb_codegen_c@@Base+0x42c>
   1772c:	mov	r0, r5
   17730:	bl	13fd4 <free@plt>
   17734:	b	17564 <__flatcc_fb_codegen_c@@Base+0x168>
   17738:	ldr	r3, [r4, #208]	; 0xd0
   1773c:	ldr	lr, [pc, #284]	; 17860 <__flatcc_fb_codegen_c@@Base+0x464>
   17740:	mov	ip, #1
   17744:	ldr	r2, [r3, #160]	; 0xa0
   17748:	mov	r1, r0
   1774c:	mov	r3, r6
   17750:	mov	r0, r5
   17754:	str	lr, [sp]
   17758:	str	ip, [sp, #4]
   1775c:	bl	2bc30 <__flatcc_fb_create_join_path_n@@Base>
   17760:	subs	r5, r0, #0
   17764:	beq	1784c <__flatcc_fb_codegen_c@@Base+0x450>
   17768:	ldr	r1, [pc, #232]	; 17858 <__flatcc_fb_codegen_c@@Base+0x45c>
   1776c:	bl	13fc8 <fopen@plt>
   17770:	cmp	r0, #0
   17774:	str	r0, [r4, #204]	; 0xcc
   17778:	beq	17828 <__flatcc_fb_codegen_c@@Base+0x42c>
   1777c:	mov	r0, r5
   17780:	bl	13fd4 <free@plt>
   17784:	b	174a0 <__flatcc_fb_codegen_c@@Base+0xa4>
   17788:	ldr	r2, [r4, #208]	; 0xd0
   1778c:	ldr	ip, [pc, #208]	; 17864 <__flatcc_fb_codegen_c@@Base+0x468>
   17790:	mov	r3, #1
   17794:	ldr	r2, [r2, #160]	; 0xa0
   17798:	mov	r1, r0
   1779c:	str	r3, [sp, #4]
   177a0:	mov	r0, r5
   177a4:	str	ip, [sp]
   177a8:	mov	r3, r6
   177ac:	bl	2bc30 <__flatcc_fb_create_join_path_n@@Base>
   177b0:	subs	r5, r0, #0
   177b4:	beq	1784c <__flatcc_fb_codegen_c@@Base+0x450>
   177b8:	ldr	r1, [pc, #152]	; 17858 <__flatcc_fb_codegen_c@@Base+0x45c>
   177bc:	bl	13fc8 <fopen@plt>
   177c0:	cmp	r0, #0
   177c4:	str	r0, [r4, #204]	; 0xcc
   177c8:	beq	17828 <__flatcc_fb_codegen_c@@Base+0x42c>
   177cc:	mov	r0, r5
   177d0:	bl	13fd4 <free@plt>
   177d4:	b	175c8 <__flatcc_fb_codegen_c@@Base+0x1cc>
   177d8:	ldr	r2, [r4, #208]	; 0xd0
   177dc:	ldr	ip, [pc, #132]	; 17868 <__flatcc_fb_codegen_c@@Base+0x46c>
   177e0:	mov	r3, #1
   177e4:	ldr	r2, [r2, #160]	; 0xa0
   177e8:	mov	r1, r0
   177ec:	str	r3, [sp, #4]
   177f0:	mov	r0, r5
   177f4:	str	ip, [sp]
   177f8:	mov	r3, r6
   177fc:	bl	2bc30 <__flatcc_fb_create_join_path_n@@Base>
   17800:	subs	r5, r0, #0
   17804:	beq	1784c <__flatcc_fb_codegen_c@@Base+0x450>
   17808:	ldr	r1, [pc, #72]	; 17858 <__flatcc_fb_codegen_c@@Base+0x45c>
   1780c:	bl	13fc8 <fopen@plt>
   17810:	cmp	r0, #0
   17814:	str	r0, [r4, #204]	; 0xcc
   17818:	beq	17828 <__flatcc_fb_codegen_c@@Base+0x42c>
   1781c:	mov	r0, r5
   17820:	bl	13fd4 <free@plt>
   17824:	b	1762c <__flatcc_fb_codegen_c@@Base+0x230>
   17828:	ldr	r3, [pc, #60]	; 1786c <__flatcc_fb_codegen_c@@Base+0x470>
   1782c:	mov	r2, r5
   17830:	ldr	r1, [pc, #56]	; 17870 <__flatcc_fb_codegen_c@@Base+0x474>
   17834:	ldr	r0, [r3]
   17838:	bl	14094 <fprintf@plt>
   1783c:	mov	r0, r5
   17840:	bl	13fd4 <free@plt>
   17844:	mvn	r5, #0
   17848:	b	17478 <__flatcc_fb_codegen_c@@Base+0x7c>
   1784c:	bl	14158 <__assert_fail@plt+0x10>
   17850:	andeq	lr, r4, ip, asr #2
   17854:	ldrdeq	sl, [r5], -ip
   17858:	andeq	r3, r4, r0, ror #30
   1785c:	andeq	sl, r5, r4, ror #18
   17860:	strheq	r4, [r4], -ip
   17864:	andeq	r4, r4, r0, lsr #1
   17868:	andeq	r4, r4, ip, lsr #1
   1786c:	andeq	pc, r6, r8, lsr #1
   17870:	muleq	r4, ip, pc	; <UNPREDICTABLE>
   17874:	push	{r4, r5, lr}
   17878:	mov	r4, r1
   1787c:	sub	sp, sp, #228	; 0xe4
   17880:	mov	r5, r0
   17884:	mov	r2, #220	; 0xdc
   17888:	add	r0, sp, #4
   1788c:	mov	r1, #0
   17890:	bl	140ac <memset@plt>
   17894:	ldrh	r3, [r4, #8]
   17898:	cmp	r3, #1
   1789c:	bhi	1798c <__flatcc_fb_codegen_c@@Base+0x590>
   178a0:	add	r2, sp, #4
   178a4:	mov	r1, r4
   178a8:	ldr	r0, [r4, #12]
   178ac:	bl	170c4 <__flatcc_fb_scoped_symbol_name@@Base>
   178b0:	ldrh	r3, [r4, #8]
   178b4:	cmp	r3, #1
   178b8:	beq	17900 <__flatcc_fb_codegen_c@@Base+0x504>
   178bc:	add	r3, sp, #4
   178c0:	mov	r2, r3
   178c4:	ldr	r1, [pc, #212]	; 179a0 <__flatcc_fb_codegen_c@@Base+0x5a4>
   178c8:	ldr	r0, [r5, #204]	; 0xcc
   178cc:	bl	14094 <fprintf@plt>
   178d0:	add	r3, sp, #4
   178d4:	mov	r2, r5
   178d8:	ldr	r1, [pc, #196]	; 179a4 <__flatcc_fb_codegen_c@@Base+0x5a8>
   178dc:	ldr	r0, [r5, #204]	; 0xcc
   178e0:	bl	14094 <fprintf@plt>
   178e4:	add	r3, sp, #4
   178e8:	mov	r2, r5
   178ec:	ldr	r0, [r5, #204]	; 0xcc
   178f0:	ldr	r1, [pc, #176]	; 179a8 <__flatcc_fb_codegen_c@@Base+0x5ac>
   178f4:	bl	14094 <fprintf@plt>
   178f8:	add	sp, sp, #228	; 0xe4
   178fc:	pop	{r4, r5, pc}
   17900:	ldrd	r2, [r4, #112]	; 0x70
   17904:	orrs	r3, r2, r3
   17908:	bne	17974 <__flatcc_fb_codegen_c@@Base+0x578>
   1790c:	add	r2, sp, #4
   17910:	ldr	r1, [pc, #148]	; 179ac <__flatcc_fb_codegen_c@@Base+0x5b0>
   17914:	ldr	r0, [r5, #204]	; 0xcc
   17918:	bl	14094 <fprintf@plt>
   1791c:	add	r3, sp, #4
   17920:	mov	r2, r3
   17924:	ldr	r1, [pc, #132]	; 179b0 <__flatcc_fb_codegen_c@@Base+0x5b4>
   17928:	ldr	r0, [r5, #204]	; 0xcc
   1792c:	bl	14094 <fprintf@plt>
   17930:	add	r3, sp, #4
   17934:	mov	r2, r3
   17938:	ldr	r1, [pc, #116]	; 179b4 <__flatcc_fb_codegen_c@@Base+0x5b8>
   1793c:	ldr	r0, [r5, #204]	; 0xcc
   17940:	bl	14094 <fprintf@plt>
   17944:	add	r3, sp, #4
   17948:	mov	r2, r3
   1794c:	ldr	r1, [pc, #100]	; 179b8 <__flatcc_fb_codegen_c@@Base+0x5bc>
   17950:	ldr	r0, [r5, #204]	; 0xcc
   17954:	bl	14094 <fprintf@plt>
   17958:	add	r3, sp, #4
   1795c:	mov	r2, r3
   17960:	ldr	r0, [r5, #204]	; 0xcc
   17964:	ldr	r1, [pc, #80]	; 179bc <__flatcc_fb_codegen_c@@Base+0x5c0>
   17968:	bl	14094 <fprintf@plt>
   1796c:	add	sp, sp, #228	; 0xe4
   17970:	pop	{r4, r5, pc}
   17974:	add	r3, sp, #4
   17978:	mov	r2, r3
   1797c:	ldr	r1, [pc, #60]	; 179c0 <__flatcc_fb_codegen_c@@Base+0x5c4>
   17980:	ldr	r0, [r5, #204]	; 0xcc
   17984:	bl	14094 <fprintf@plt>
   17988:	b	1791c <__flatcc_fb_codegen_c@@Base+0x520>
   1798c:	ldr	r3, [pc, #48]	; 179c4 <__flatcc_fb_codegen_c@@Base+0x5c8>
   17990:	ldr	r2, [pc, #48]	; 179c8 <__flatcc_fb_codegen_c@@Base+0x5cc>
   17994:	ldr	r1, [pc, #48]	; 179cc <__flatcc_fb_codegen_c@@Base+0x5d0>
   17998:	ldr	r0, [pc, #48]	; 179d0 <__flatcc_fb_codegen_c@@Base+0x5d4>
   1799c:	bl	14148 <__assert_fail@plt>
   179a0:	strdeq	r4, [r4], -r0
   179a4:	andeq	r4, r4, ip, lsl r3
   179a8:	andeq	r4, r4, r4, asr #6
   179ac:	andeq	r4, r4, r0, lsr #4
   179b0:	andeq	r4, r4, r4, ror #4
   179b4:	andeq	r4, r4, r8, lsl #5
   179b8:	andeq	r4, r4, ip, lsr #5
   179bc:	andeq	r4, r4, ip, asr #5
   179c0:	andeq	r4, r4, r8, asr #4
   179c4:	andeq	r4, r4, ip, asr #1
   179c8:	andeq	r0, r0, pc, asr r3
   179cc:	andeq	r4, r4, ip, lsl #3
   179d0:	ldrdeq	r4, [r4], -ip
   179d4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   179d8:	sub	sp, sp, #364	; 0x16c
   179dc:	mov	fp, r1
   179e0:	add	r8, sp, #140	; 0x8c
   179e4:	mov	r4, r0
   179e8:	mov	r2, #220	; 0xdc
   179ec:	mov	r0, r8
   179f0:	mov	r1, #0
   179f4:	bl	140ac <memset@plt>
   179f8:	ldrh	r3, [fp, #8]
   179fc:	str	r3, [sp, #28]
   17a00:	sub	r3, r3, #3
   17a04:	cmp	r3, #1
   17a08:	bhi	182f4 <__flatcc_fb_codegen_c@@Base+0xef8>
   17a0c:	ldrh	r3, [fp, #48]	; 0x30
   17a10:	cmp	r3, #8
   17a14:	bne	182e0 <__flatcc_fb_codegen_c@@Base+0xee4>
   17a18:	ldr	r3, [fp, #40]	; 0x28
   17a1c:	cmp	r3, #5
   17a20:	beq	17a60 <__flatcc_fb_codegen_c@@Base+0x664>
   17a24:	sub	r3, r3, #1
   17a28:	cmp	r3, #10
   17a2c:	ldrls	pc, [pc, r3, lsl #2]
   17a30:	b	181a4 <__flatcc_fb_codegen_c@@Base+0xda8>
   17a34:	ldrdeq	r8, [r1], -r4
   17a38:	andeq	r8, r1, r0, asr #1
   17a3c:	andeq	r8, r1, r8, ror #1
   17a40:	andeq	r8, r1, r4, lsl #1
   17a44:	andeq	r8, r1, r4, lsr #3
   17a48:	andeq	r8, r1, ip, lsr #1
   17a4c:	andeq	r8, r1, r4, lsr r0
   17a50:	andeq	r8, r1, r8, asr #32
   17a54:	andeq	r8, r1, ip, asr r0
   17a58:	andeq	r8, r1, r0, ror r0
   17a5c:	muleq	r1, r8, r0
   17a60:	ldr	r3, [pc, #2208]	; 18308 <__flatcc_fb_codegen_c@@Base+0xf0c>
   17a64:	str	r4, [sp, #32]
   17a68:	str	r3, [sp, #24]
   17a6c:	ldr	r3, [fp, #112]	; 0x70
   17a70:	ldr	r2, [sp, #28]
   17a74:	mov	r1, fp
   17a78:	cmp	r2, #3
   17a7c:	lsl	r3, r3, #3
   17a80:	str	r3, [sp, #36]	; 0x24
   17a84:	mov	r2, r8
   17a88:	ldr	r0, [fp, #12]
   17a8c:	beq	17fbc <__flatcc_fb_codegen_c@@Base+0xbc0>
   17a90:	bl	170c4 <__flatcc_fb_scoped_symbol_name@@Base>
   17a94:	ldr	r5, [fp, #32]
   17a98:	cmp	r5, #0
   17a9c:	beq	18260 <__flatcc_fb_codegen_c@@Base+0xe64>
   17aa0:	ldr	r3, [pc, #2148]	; 1830c <__flatcc_fb_codegen_c@@Base+0xf10>
   17aa4:	str	r3, [sp, #20]
   17aa8:	mov	r3, #0
   17aac:	ldr	r9, [pc, #2140]	; 18310 <__flatcc_fb_codegen_c@@Base+0xf14>
   17ab0:	ldr	sl, [pc, #2140]	; 18314 <__flatcc_fb_codegen_c@@Base+0xf18>
   17ab4:	ldr	r7, [pc, #2140]	; 18318 <__flatcc_fb_codegen_c@@Base+0xf1c>
   17ab8:	mov	r6, r3
   17abc:	mov	r0, #1
   17ac0:	ldr	r2, [r5, #4]
   17ac4:	ldr	r1, [r2, #8]
   17ac8:	cmp	r1, r3
   17acc:	beq	17aec <__flatcc_fb_codegen_c@@Base+0x6f0>
   17ad0:	cmp	r0, #0
   17ad4:	mov	r2, r9
   17ad8:	movne	r1, sl
   17adc:	ldreq	r1, [pc, #2104]	; 1831c <__flatcc_fb_codegen_c@@Base+0xf20>
   17ae0:	ldr	r0, [r4, #204]	; 0xcc
   17ae4:	bl	14094 <fprintf@plt>
   17ae8:	ldr	r2, [r5, #4]
   17aec:	ldr	r3, [r2]
   17af0:	mov	r1, r7
   17af4:	ldr	r2, [r2, #4]
   17af8:	ldr	r0, [r4, #204]	; 0xcc
   17afc:	bl	14094 <fprintf@plt>
   17b00:	ldr	r3, [r5, #4]
   17b04:	ldr	r5, [r5]
   17b08:	mov	r0, r6
   17b0c:	cmp	r5, #0
   17b10:	ldr	r3, [r3, #8]
   17b14:	bne	17ac0 <__flatcc_fb_codegen_c@@Base+0x6c4>
   17b18:	ldr	r3, [r4, #204]	; 0xcc
   17b1c:	mov	r2, #4
   17b20:	mov	r1, #1
   17b24:	ldr	r0, [pc, #2036]	; 18320 <__flatcc_fb_codegen_c@@Base+0xf24>
   17b28:	bl	1401c <fwrite@plt>
   17b2c:	ldr	r5, [sp, #20]
   17b30:	ldr	r0, [r4, #204]	; 0xcc
   17b34:	ldr	r3, [sp, #24]
   17b38:	ldr	r2, [sp, #32]
   17b3c:	ldr	r1, [pc, #2016]	; 18324 <__flatcc_fb_codegen_c@@Base+0xf28>
   17b40:	str	r5, [sp, #4]
   17b44:	str	r8, [sp]
   17b48:	bl	14094 <fprintf@plt>
   17b4c:	ldr	r3, [sp, #36]	; 0x24
   17b50:	ldr	r0, [r4, #204]	; 0xcc
   17b54:	mov	r2, r4
   17b58:	str	r3, [sp, #8]
   17b5c:	str	r5, [sp, #4]
   17b60:	mov	r3, r8
   17b64:	str	r8, [sp]
   17b68:	ldr	r1, [pc, #1976]	; 18328 <__flatcc_fb_codegen_c@@Base+0xf2c>
   17b6c:	bl	14094 <fprintf@plt>
   17b70:	ldr	r3, [sp, #28]
   17b74:	cmp	r3, #3
   17b78:	beq	17f24 <__flatcc_fb_codegen_c@@Base+0xb28>
   17b7c:	ldr	r0, [r4, #204]	; 0xcc
   17b80:	mov	r3, r4
   17b84:	str	r8, [sp]
   17b88:	mov	r2, r4
   17b8c:	ldr	r1, [pc, #1944]	; 1832c <__flatcc_fb_codegen_c@@Base+0xf30>
   17b90:	bl	14094 <fprintf@plt>
   17b94:	ldr	r7, [fp, #20]
   17b98:	cmp	r7, #0
   17b9c:	beq	182ac <__flatcc_fb_codegen_c@@Base+0xeb0>
   17ba0:	ldr	r6, [pc, #1896]	; 18310 <__flatcc_fb_codegen_c@@Base+0xf14>
   17ba4:	ldr	r5, [pc, #1900]	; 18318 <__flatcc_fb_codegen_c@@Base+0xf1c>
   17ba8:	str	fp, [sp, #24]
   17bac:	ldr	r9, [r7, #68]	; 0x44
   17bb0:	cmp	r9, #0
   17bb4:	beq	17c30 <__flatcc_fb_codegen_c@@Base+0x834>
   17bb8:	mov	r3, #0
   17bbc:	mov	sl, r3
   17bc0:	mov	r0, #1
   17bc4:	ldr	r2, [r9, #4]
   17bc8:	ldr	r1, [r2, #8]
   17bcc:	cmp	r1, r3
   17bd0:	beq	17bf0 <__flatcc_fb_codegen_c@@Base+0x7f4>
   17bd4:	cmp	r0, #0
   17bd8:	mov	r2, r6
   17bdc:	ldrne	r1, [pc, #1840]	; 18314 <__flatcc_fb_codegen_c@@Base+0xf18>
   17be0:	ldreq	r1, [pc, #1844]	; 1831c <__flatcc_fb_codegen_c@@Base+0xf20>
   17be4:	ldr	r0, [r4, #204]	; 0xcc
   17be8:	bl	14094 <fprintf@plt>
   17bec:	ldr	r2, [r9, #4]
   17bf0:	ldr	r3, [r2]
   17bf4:	mov	r1, r5
   17bf8:	ldr	r2, [r2, #4]
   17bfc:	ldr	r0, [r4, #204]	; 0xcc
   17c00:	bl	14094 <fprintf@plt>
   17c04:	ldr	r3, [r9, #4]
   17c08:	ldr	r9, [r9]
   17c0c:	mov	r0, sl
   17c10:	cmp	r9, #0
   17c14:	ldr	r3, [r3, #8]
   17c18:	bne	17bc4 <__flatcc_fb_codegen_c@@Base+0x7c8>
   17c1c:	ldr	r3, [r4, #204]	; 0xcc
   17c20:	mov	r2, #4
   17c24:	mov	r1, #1
   17c28:	ldr	r0, [pc, #1776]	; 18320 <__flatcc_fb_codegen_c@@Base+0xf24>
   17c2c:	bl	1401c <fwrite@plt>
   17c30:	ldrh	r3, [r7, #56]	; 0x38
   17c34:	ldr	r1, [r7, #4]
   17c38:	ldr	r2, [sp, #24]
   17c3c:	sub	r3, r3, #3
   17c40:	ldr	fp, [r1]
   17c44:	ldr	r2, [r2, #40]	; 0x28
   17c48:	ldr	sl, [r1, #4]
   17c4c:	cmp	r3, #3
   17c50:	ldrls	pc, [pc, r3, lsl #2]
   17c54:	b	17ea8 <__flatcc_fb_codegen_c@@Base+0xaac>
   17c58:	andeq	r7, r1, r4, lsl #26
   17c5c:	ldrdeq	r7, [r1], -r0
   17c60:	muleq	r1, ip, ip
   17c64:	andeq	r7, r1, r8, ror #24
   17c68:	sub	r2, r2, #1
   17c6c:	cmp	r2, #8
   17c70:	ldrls	pc, [pc, r2, lsl #2]
   17c74:	b	18208 <__flatcc_fb_codegen_c@@Base+0xe0c>
   17c78:	andeq	r8, r1, r4, lsr r1
   17c7c:	andeq	r8, r1, r4, lsl #2
   17c80:	andeq	r8, r1, ip, lsr #2
   17c84:	andeq	r8, r1, r8, lsl r0
   17c88:	andeq	r8, r1, r8, lsl r0
   17c8c:	andeq	r8, r1, ip, lsl r1
   17c90:	andeq	r8, r1, ip, asr #2
   17c94:	andeq	r8, r1, r4, asr #2
   17c98:	andeq	r8, r1, r4, lsr #2
   17c9c:	sub	r2, r2, #1
   17ca0:	cmp	r2, #8
   17ca4:	ldrls	pc, [pc, r2, lsl #2]
   17ca8:	b	18208 <__flatcc_fb_codegen_c@@Base+0xe0c>
   17cac:	andeq	r8, r1, ip, lsr r1
   17cb0:	andeq	r8, r1, ip, lsl #2
   17cb4:	andeq	r8, r1, ip, asr r1
   17cb8:	strdeq	r7, [r1], -r8
   17cbc:	strdeq	r7, [r1], -r8
   17cc0:	andeq	r8, r1, r4, lsl r1
   17cc4:	andeq	r8, r1, r4, ror r1
   17cc8:	andeq	r8, r1, ip, ror #2
   17ccc:	andeq	r8, r1, r4, asr r1
   17cd0:	sub	r2, r2, #1
   17cd4:	cmp	r2, #8
   17cd8:	ldrls	pc, [pc, r2, lsl #2]
   17cdc:	b	18208 <__flatcc_fb_codegen_c@@Base+0xe0c>
   17ce0:	andeq	r8, r1, r4, ror #2
   17ce4:	strdeq	r8, [r1], -ip
   17ce8:	andeq	r8, r1, ip, lsl #3
   17cec:	ldrdeq	r7, [r1], -r8
   17cf0:	ldrdeq	r7, [r1], -r8
   17cf4:	andeq	r8, r1, ip, ror r1
   17cf8:	muleq	r1, ip, r1
   17cfc:	muleq	r1, r4, r1
   17d00:	andeq	r8, r1, r4, lsl #3
   17d04:	cmp	r2, #11
   17d08:	beq	1823c <__flatcc_fb_codegen_c@@Base+0xe40>
   17d0c:	add	r9, sp, #40	; 0x28
   17d10:	mov	r0, r9
   17d14:	ldrd	r2, [r7, #48]	; 0x30
   17d18:	ldr	r1, [pc, #1552]	; 18330 <__flatcc_fb_codegen_c@@Base+0xf34>
   17d1c:	bl	14100 <sprintf@plt>
   17d20:	ldr	r3, [sp, #20]
   17d24:	ldr	r0, [r4, #204]	; 0xcc
   17d28:	mov	r2, r8
   17d2c:	str	r3, [sp, #8]
   17d30:	str	r9, [sp, #12]
   17d34:	str	r8, [sp, #4]
   17d38:	str	fp, [sp]
   17d3c:	mov	r3, sl
   17d40:	ldr	r1, [pc, #1516]	; 18334 <__flatcc_fb_codegen_c@@Base+0xf38>
   17d44:	bl	14094 <fprintf@plt>
   17d48:	ldr	r7, [r7]
   17d4c:	cmp	r7, #0
   17d50:	bne	17bac <__flatcc_fb_codegen_c@@Base+0x7b0>
   17d54:	ldr	r1, [r4, #204]	; 0xcc
   17d58:	mov	r0, #10
   17d5c:	ldr	fp, [sp, #24]
   17d60:	bl	140f4 <fputc@plt>
   17d64:	ldr	r3, [sp, #28]
   17d68:	cmp	r3, #3
   17d6c:	beq	17f3c <__flatcc_fb_codegen_c@@Base+0xb40>
   17d70:	mov	r3, r8
   17d74:	mov	r2, r8
   17d78:	ldr	r1, [pc, #1464]	; 18338 <__flatcc_fb_codegen_c@@Base+0xf3c>
   17d7c:	ldr	r0, [r4, #204]	; 0xcc
   17d80:	bl	14094 <fprintf@plt>
   17d84:	ldr	r3, [r4, #204]	; 0xcc
   17d88:	mov	r2, #20
   17d8c:	mov	r1, #1
   17d90:	ldr	r0, [pc, #1444]	; 1833c <__flatcc_fb_codegen_c@@Base+0xf40>
   17d94:	bl	1401c <fwrite@plt>
   17d98:	ldr	r5, [fp, #20]
   17d9c:	cmp	r5, #0
   17da0:	beq	182bc <__flatcc_fb_codegen_c@@Base+0xec0>
   17da4:	ldr	r7, [pc, #1428]	; 18340 <__flatcc_fb_codegen_c@@Base+0xf44>
   17da8:	ldr	r6, [pc, #1428]	; 18344 <__flatcc_fb_codegen_c@@Base+0xf48>
   17dac:	ldrh	r2, [r5, #10]
   17db0:	ldr	r3, [r5, #4]
   17db4:	ldr	r0, [r4, #204]	; 0xcc
   17db8:	tst	r2, #4
   17dbc:	ldm	r3, {r2, r3}
   17dc0:	str	r2, [sp, #8]
   17dc4:	stm	sp, {r2, r3}
   17dc8:	mov	r2, r8
   17dcc:	beq	181d8 <__flatcc_fb_codegen_c@@Base+0xddc>
   17dd0:	mov	r1, r6
   17dd4:	bl	14094 <fprintf@plt>
   17dd8:	ldr	r5, [r5]
   17ddc:	cmp	r5, #0
   17de0:	bne	17dac <__flatcc_fb_codegen_c@@Base+0x9b0>
   17de4:	ldr	r3, [r4, #204]	; 0xcc
   17de8:	mov	r2, #32
   17dec:	mov	r1, #1
   17df0:	ldr	r0, [pc, #1360]	; 18348 <__flatcc_fb_codegen_c@@Base+0xf4c>
   17df4:	bl	1401c <fwrite@plt>
   17df8:	ldr	r1, [r4, #204]	; 0xcc
   17dfc:	mov	r0, #10
   17e00:	bl	140f4 <fputc@plt>
   17e04:	ldr	r3, [sp, #28]
   17e08:	cmp	r3, #3
   17e0c:	beq	17f90 <__flatcc_fb_codegen_c@@Base+0xb94>
   17e10:	mov	r3, r8
   17e14:	mov	r2, r8
   17e18:	ldr	r1, [pc, #1324]	; 1834c <__flatcc_fb_codegen_c@@Base+0xf50>
   17e1c:	ldr	r0, [r4, #204]	; 0xcc
   17e20:	bl	14094 <fprintf@plt>
   17e24:	ldr	r3, [r4, #204]	; 0xcc
   17e28:	mov	r2, #20
   17e2c:	mov	r1, #1
   17e30:	ldr	r0, [pc, #1284]	; 1833c <__flatcc_fb_codegen_c@@Base+0xf40>
   17e34:	bl	1401c <fwrite@plt>
   17e38:	ldr	r5, [fp, #20]
   17e3c:	cmp	r5, #0
   17e40:	beq	17e80 <__flatcc_fb_codegen_c@@Base+0xa84>
   17e44:	ldr	r7, [pc, #1284]	; 18350 <__flatcc_fb_codegen_c@@Base+0xf54>
   17e48:	ldr	r6, [pc, #1284]	; 18354 <__flatcc_fb_codegen_c@@Base+0xf58>
   17e4c:	ldrh	r2, [r5, #10]
   17e50:	ldr	r3, [r5, #4]
   17e54:	ldr	r0, [r4, #204]	; 0xcc
   17e58:	tst	r2, #4
   17e5c:	ldm	r3, {r2, r3}
   17e60:	str	r2, [sp]
   17e64:	mov	r2, r8
   17e68:	beq	181f0 <__flatcc_fb_codegen_c@@Base+0xdf4>
   17e6c:	mov	r1, r6
   17e70:	bl	14094 <fprintf@plt>
   17e74:	ldr	r5, [r5]
   17e78:	cmp	r5, #0
   17e7c:	bne	17e4c <__flatcc_fb_codegen_c@@Base+0xa50>
   17e80:	ldr	r3, [r4, #204]	; 0xcc
   17e84:	mov	r2, #31
   17e88:	mov	r1, #1
   17e8c:	ldr	r0, [pc, #1220]	; 18358 <__flatcc_fb_codegen_c@@Base+0xf5c>
   17e90:	bl	1401c <fwrite@plt>
   17e94:	ldr	r1, [r4, #204]	; 0xcc
   17e98:	mov	r0, #10
   17e9c:	bl	140f4 <fputc@plt>
   17ea0:	add	sp, sp, #364	; 0x16c
   17ea4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17ea8:	ldr	r1, [pc, #1196]	; 1835c <__flatcc_fb_codegen_c@@Base+0xf60>
   17eac:	ldr	r2, [pc, #1196]	; 18360 <__flatcc_fb_codegen_c@@Base+0xf64>
   17eb0:	mov	r3, #260	; 0x104
   17eb4:	ldr	r0, [r1]
   17eb8:	str	r2, [sp]
   17ebc:	ldr	r1, [pc, #1184]	; 18364 <__flatcc_fb_codegen_c@@Base+0xf68>
   17ec0:	ldr	r2, [pc, #1184]	; 18368 <__flatcc_fb_codegen_c@@Base+0xf6c>
   17ec4:	bl	14094 <fprintf@plt>
   17ec8:	ldr	r3, [pc, #1180]	; 1836c <__flatcc_fb_codegen_c@@Base+0xf70>
   17ecc:	mov	r2, #260	; 0x104
   17ed0:	ldr	r1, [pc, #1168]	; 18368 <__flatcc_fb_codegen_c@@Base+0xf6c>
   17ed4:	ldr	r0, [pc, #1172]	; 18370 <__flatcc_fb_codegen_c@@Base+0xf74>
   17ed8:	bl	14148 <__assert_fail@plt>
   17edc:	ldr	r5, [pc, #1168]	; 18374 <__flatcc_fb_codegen_c@@Base+0xf78>
   17ee0:	ldr	r0, [r4, #204]	; 0xcc
   17ee4:	ldr	r3, [sp, #24]
   17ee8:	ldr	r2, [sp, #32]
   17eec:	ldr	r1, [pc, #1072]	; 18324 <__flatcc_fb_codegen_c@@Base+0xf28>
   17ef0:	str	r8, [sp]
   17ef4:	str	r5, [sp, #4]
   17ef8:	bl	14094 <fprintf@plt>
   17efc:	ldr	r3, [sp, #36]	; 0x24
   17f00:	ldr	r0, [r4, #204]	; 0xcc
   17f04:	mov	r2, r4
   17f08:	str	r3, [sp, #8]
   17f0c:	str	r5, [sp, #4]
   17f10:	str	r8, [sp]
   17f14:	mov	r3, r8
   17f18:	ldr	r1, [pc, #1032]	; 18328 <__flatcc_fb_codegen_c@@Base+0xf2c>
   17f1c:	str	r5, [sp, #20]
   17f20:	bl	14094 <fprintf@plt>
   17f24:	ldr	r7, [fp, #20]
   17f28:	cmp	r7, #0
   17f2c:	bne	17ba0 <__flatcc_fb_codegen_c@@Base+0x7a4>
   17f30:	ldr	r1, [r4, #204]	; 0xcc
   17f34:	mov	r0, #10
   17f38:	bl	140f4 <fputc@plt>
   17f3c:	mov	r3, r8
   17f40:	mov	r2, r8
   17f44:	ldr	r1, [pc, #1068]	; 18378 <__flatcc_fb_codegen_c@@Base+0xf7c>
   17f48:	ldr	r0, [r4, #204]	; 0xcc
   17f4c:	bl	14094 <fprintf@plt>
   17f50:	ldr	r3, [r4, #204]	; 0xcc
   17f54:	mov	r2, #21
   17f58:	mov	r1, #1
   17f5c:	ldr	r0, [pc, #1048]	; 1837c <__flatcc_fb_codegen_c@@Base+0xf80>
   17f60:	bl	1401c <fwrite@plt>
   17f64:	ldr	r5, [fp, #20]
   17f68:	cmp	r5, #0
   17f6c:	bne	17da4 <__flatcc_fb_codegen_c@@Base+0x9a8>
   17f70:	mov	r1, #1
   17f74:	ldr	r3, [r4, #204]	; 0xcc
   17f78:	mov	r2, #32
   17f7c:	ldr	r0, [pc, #964]	; 18348 <__flatcc_fb_codegen_c@@Base+0xf4c>
   17f80:	bl	1401c <fwrite@plt>
   17f84:	ldr	r1, [r4, #204]	; 0xcc
   17f88:	mov	r0, #10
   17f8c:	bl	140f4 <fputc@plt>
   17f90:	mov	r3, r8
   17f94:	mov	r2, r8
   17f98:	ldr	r1, [pc, #992]	; 18380 <__flatcc_fb_codegen_c@@Base+0xf84>
   17f9c:	ldr	r0, [r4, #204]	; 0xcc
   17fa0:	bl	14094 <fprintf@plt>
   17fa4:	ldr	r3, [r4, #204]	; 0xcc
   17fa8:	mov	r2, #21
   17fac:	mov	r1, #1
   17fb0:	ldr	r0, [pc, #964]	; 1837c <__flatcc_fb_codegen_c@@Base+0xf80>
   17fb4:	bl	1401c <fwrite@plt>
   17fb8:	b	17e38 <__flatcc_fb_codegen_c@@Base+0xa3c>
   17fbc:	bl	170c4 <__flatcc_fb_scoped_symbol_name@@Base>
   17fc0:	ldr	r5, [fp, #32]
   17fc4:	cmp	r5, #0
   17fc8:	beq	17edc <__flatcc_fb_codegen_c@@Base+0xae0>
   17fcc:	ldr	r3, [pc, #928]	; 18374 <__flatcc_fb_codegen_c@@Base+0xf78>
   17fd0:	str	r3, [sp, #20]
   17fd4:	b	17aa8 <__flatcc_fb_codegen_c@@Base+0x6ac>
   17fd8:	ldr	r2, [pc, #932]	; 18384 <__flatcc_fb_codegen_c@@Base+0xf88>
   17fdc:	ldrd	r0, [r7, #48]	; 0x30
   17fe0:	add	r9, sp, #40	; 0x28
   17fe4:	strd	r0, [sp]
   17fe8:	mov	r0, r9
   17fec:	ldr	r1, [pc, #916]	; 18388 <__flatcc_fb_codegen_c@@Base+0xf8c>
   17ff0:	bl	14100 <sprintf@plt>
   17ff4:	b	17d20 <__flatcc_fb_codegen_c@@Base+0x924>
   17ff8:	ldr	r2, [pc, #900]	; 18384 <__flatcc_fb_codegen_c@@Base+0xf88>
   17ffc:	ldrd	r0, [r7, #48]	; 0x30
   18000:	add	r9, sp, #40	; 0x28
   18004:	strd	r0, [sp]
   18008:	mov	r0, r9
   1800c:	ldr	r1, [pc, #888]	; 1838c <__flatcc_fb_codegen_c@@Base+0xf90>
   18010:	bl	14100 <sprintf@plt>
   18014:	b	17d20 <__flatcc_fb_codegen_c@@Base+0x924>
   18018:	ldr	r2, [pc, #868]	; 18384 <__flatcc_fb_codegen_c@@Base+0xf88>
   1801c:	add	r9, sp, #40	; 0x28
   18020:	mov	r0, r9
   18024:	ldrb	r3, [r7, #48]	; 0x30
   18028:	ldr	r1, [pc, #864]	; 18390 <__flatcc_fb_codegen_c@@Base+0xf94>
   1802c:	bl	14100 <sprintf@plt>
   18030:	b	17d20 <__flatcc_fb_codegen_c@@Base+0x924>
   18034:	ldr	r3, [pc, #724]	; 18310 <__flatcc_fb_codegen_c@@Base+0xf14>
   18038:	str	r3, [sp, #32]
   1803c:	ldr	r3, [pc, #848]	; 18394 <__flatcc_fb_codegen_c@@Base+0xf98>
   18040:	str	r3, [sp, #24]
   18044:	b	17a6c <__flatcc_fb_codegen_c@@Base+0x670>
   18048:	ldr	r3, [pc, #704]	; 18310 <__flatcc_fb_codegen_c@@Base+0xf14>
   1804c:	str	r3, [sp, #32]
   18050:	ldr	r3, [pc, #832]	; 18398 <__flatcc_fb_codegen_c@@Base+0xf9c>
   18054:	str	r3, [sp, #24]
   18058:	b	17a6c <__flatcc_fb_codegen_c@@Base+0x670>
   1805c:	ldr	r3, [pc, #684]	; 18310 <__flatcc_fb_codegen_c@@Base+0xf14>
   18060:	str	r3, [sp, #32]
   18064:	ldr	r3, [pc, #816]	; 1839c <__flatcc_fb_codegen_c@@Base+0xfa0>
   18068:	str	r3, [sp, #24]
   1806c:	b	17a6c <__flatcc_fb_codegen_c@@Base+0x670>
   18070:	ldr	r3, [pc, #664]	; 18310 <__flatcc_fb_codegen_c@@Base+0xf14>
   18074:	str	r3, [sp, #32]
   18078:	ldr	r3, [pc, #800]	; 183a0 <__flatcc_fb_codegen_c@@Base+0xfa4>
   1807c:	str	r3, [sp, #24]
   18080:	b	17a6c <__flatcc_fb_codegen_c@@Base+0x670>
   18084:	ldr	r3, [pc, #644]	; 18310 <__flatcc_fb_codegen_c@@Base+0xf14>
   18088:	str	r3, [sp, #32]
   1808c:	ldr	r3, [pc, #784]	; 183a4 <__flatcc_fb_codegen_c@@Base+0xfa8>
   18090:	str	r3, [sp, #24]
   18094:	b	17a6c <__flatcc_fb_codegen_c@@Base+0x670>
   18098:	ldr	r3, [pc, #624]	; 18310 <__flatcc_fb_codegen_c@@Base+0xf14>
   1809c:	str	r3, [sp, #32]
   180a0:	ldr	r3, [pc, #768]	; 183a8 <__flatcc_fb_codegen_c@@Base+0xfac>
   180a4:	str	r3, [sp, #24]
   180a8:	b	17a6c <__flatcc_fb_codegen_c@@Base+0x670>
   180ac:	ldr	r3, [pc, #604]	; 18310 <__flatcc_fb_codegen_c@@Base+0xf14>
   180b0:	str	r3, [sp, #32]
   180b4:	ldr	r3, [pc, #752]	; 183ac <__flatcc_fb_codegen_c@@Base+0xfb0>
   180b8:	str	r3, [sp, #24]
   180bc:	b	17a6c <__flatcc_fb_codegen_c@@Base+0x670>
   180c0:	ldr	r3, [pc, #584]	; 18310 <__flatcc_fb_codegen_c@@Base+0xf14>
   180c4:	str	r3, [sp, #32]
   180c8:	ldr	r3, [pc, #736]	; 183b0 <__flatcc_fb_codegen_c@@Base+0xfb4>
   180cc:	str	r3, [sp, #24]
   180d0:	b	17a6c <__flatcc_fb_codegen_c@@Base+0x670>
   180d4:	ldr	r3, [pc, #564]	; 18310 <__flatcc_fb_codegen_c@@Base+0xf14>
   180d8:	str	r3, [sp, #32]
   180dc:	ldr	r3, [pc, #720]	; 183b4 <__flatcc_fb_codegen_c@@Base+0xfb8>
   180e0:	str	r3, [sp, #24]
   180e4:	b	17a6c <__flatcc_fb_codegen_c@@Base+0x670>
   180e8:	ldr	r3, [pc, #544]	; 18310 <__flatcc_fb_codegen_c@@Base+0xf14>
   180ec:	str	r3, [sp, #32]
   180f0:	ldr	r3, [pc, #704]	; 183b8 <__flatcc_fb_codegen_c@@Base+0xfbc>
   180f4:	str	r3, [sp, #24]
   180f8:	b	17a6c <__flatcc_fb_codegen_c@@Base+0x670>
   180fc:	ldr	r2, [pc, #696]	; 183bc <__flatcc_fb_codegen_c@@Base+0xfc0>
   18100:	b	17fdc <__flatcc_fb_codegen_c@@Base+0xbe0>
   18104:	ldr	r2, [pc, #688]	; 183bc <__flatcc_fb_codegen_c@@Base+0xfc0>
   18108:	b	1801c <__flatcc_fb_codegen_c@@Base+0xc20>
   1810c:	ldr	r2, [pc, #680]	; 183bc <__flatcc_fb_codegen_c@@Base+0xfc0>
   18110:	b	17ffc <__flatcc_fb_codegen_c@@Base+0xc00>
   18114:	ldr	r2, [pc, #676]	; 183c0 <__flatcc_fb_codegen_c@@Base+0xfc4>
   18118:	b	17ffc <__flatcc_fb_codegen_c@@Base+0xc00>
   1811c:	ldr	r2, [pc, #668]	; 183c0 <__flatcc_fb_codegen_c@@Base+0xfc4>
   18120:	b	1801c <__flatcc_fb_codegen_c@@Base+0xc20>
   18124:	ldr	r2, [pc, #664]	; 183c4 <__flatcc_fb_codegen_c@@Base+0xfc8>
   18128:	b	1801c <__flatcc_fb_codegen_c@@Base+0xc20>
   1812c:	ldr	r2, [pc, #660]	; 183c8 <__flatcc_fb_codegen_c@@Base+0xfcc>
   18130:	b	1801c <__flatcc_fb_codegen_c@@Base+0xc20>
   18134:	ldr	r2, [pc, #656]	; 183cc <__flatcc_fb_codegen_c@@Base+0xfd0>
   18138:	b	1801c <__flatcc_fb_codegen_c@@Base+0xc20>
   1813c:	ldr	r2, [pc, #648]	; 183cc <__flatcc_fb_codegen_c@@Base+0xfd0>
   18140:	b	17ffc <__flatcc_fb_codegen_c@@Base+0xc00>
   18144:	ldr	r2, [pc, #644]	; 183d0 <__flatcc_fb_codegen_c@@Base+0xfd4>
   18148:	b	1801c <__flatcc_fb_codegen_c@@Base+0xc20>
   1814c:	ldr	r2, [pc, #640]	; 183d4 <__flatcc_fb_codegen_c@@Base+0xfd8>
   18150:	b	1801c <__flatcc_fb_codegen_c@@Base+0xc20>
   18154:	ldr	r2, [pc, #616]	; 183c4 <__flatcc_fb_codegen_c@@Base+0xfc8>
   18158:	b	17ffc <__flatcc_fb_codegen_c@@Base+0xc00>
   1815c:	ldr	r2, [pc, #612]	; 183c8 <__flatcc_fb_codegen_c@@Base+0xfcc>
   18160:	b	17ffc <__flatcc_fb_codegen_c@@Base+0xc00>
   18164:	ldr	r2, [pc, #608]	; 183cc <__flatcc_fb_codegen_c@@Base+0xfd0>
   18168:	b	17fdc <__flatcc_fb_codegen_c@@Base+0xbe0>
   1816c:	ldr	r2, [pc, #604]	; 183d0 <__flatcc_fb_codegen_c@@Base+0xfd4>
   18170:	b	17ffc <__flatcc_fb_codegen_c@@Base+0xc00>
   18174:	ldr	r2, [pc, #600]	; 183d4 <__flatcc_fb_codegen_c@@Base+0xfd8>
   18178:	b	17ffc <__flatcc_fb_codegen_c@@Base+0xc00>
   1817c:	ldr	r2, [pc, #572]	; 183c0 <__flatcc_fb_codegen_c@@Base+0xfc4>
   18180:	b	17fdc <__flatcc_fb_codegen_c@@Base+0xbe0>
   18184:	ldr	r2, [pc, #568]	; 183c4 <__flatcc_fb_codegen_c@@Base+0xfc8>
   18188:	b	17fdc <__flatcc_fb_codegen_c@@Base+0xbe0>
   1818c:	ldr	r2, [pc, #564]	; 183c8 <__flatcc_fb_codegen_c@@Base+0xfcc>
   18190:	b	17fdc <__flatcc_fb_codegen_c@@Base+0xbe0>
   18194:	ldr	r2, [pc, #564]	; 183d0 <__flatcc_fb_codegen_c@@Base+0xfd4>
   18198:	b	17fdc <__flatcc_fb_codegen_c@@Base+0xbe0>
   1819c:	ldr	r2, [pc, #560]	; 183d4 <__flatcc_fb_codegen_c@@Base+0xfd8>
   181a0:	b	17fdc <__flatcc_fb_codegen_c@@Base+0xbe0>
   181a4:	ldr	r1, [pc, #432]	; 1835c <__flatcc_fb_codegen_c@@Base+0xf60>
   181a8:	ldr	r2, [pc, #432]	; 18360 <__flatcc_fb_codegen_c@@Base+0xf64>
   181ac:	mov	r3, #141	; 0x8d
   181b0:	ldr	r0, [r1]
   181b4:	str	r2, [sp]
   181b8:	ldr	r1, [pc, #420]	; 18364 <__flatcc_fb_codegen_c@@Base+0xf68>
   181bc:	ldr	r2, [pc, #420]	; 18368 <__flatcc_fb_codegen_c@@Base+0xf6c>
   181c0:	bl	14094 <fprintf@plt>
   181c4:	ldr	r3, [pc, #524]	; 183d8 <__flatcc_fb_codegen_c@@Base+0xfdc>
   181c8:	mov	r2, #141	; 0x8d
   181cc:	ldr	r1, [pc, #404]	; 18368 <__flatcc_fb_codegen_c@@Base+0xf6c>
   181d0:	ldr	r0, [pc, #408]	; 18370 <__flatcc_fb_codegen_c@@Base+0xf74>
   181d4:	bl	14148 <__assert_fail@plt>
   181d8:	mov	r1, r7
   181dc:	bl	14094 <fprintf@plt>
   181e0:	ldr	r5, [r5]
   181e4:	cmp	r5, #0
   181e8:	bne	17dac <__flatcc_fb_codegen_c@@Base+0x9b0>
   181ec:	b	17de4 <__flatcc_fb_codegen_c@@Base+0x9e8>
   181f0:	mov	r1, r7
   181f4:	bl	14094 <fprintf@plt>
   181f8:	ldr	r5, [r5]
   181fc:	cmp	r5, #0
   18200:	bne	17e4c <__flatcc_fb_codegen_c@@Base+0xa50>
   18204:	b	17e80 <__flatcc_fb_codegen_c@@Base+0xa84>
   18208:	ldr	r1, [pc, #332]	; 1835c <__flatcc_fb_codegen_c@@Base+0xf60>
   1820c:	ldr	r2, [pc, #332]	; 18360 <__flatcc_fb_codegen_c@@Base+0xf64>
   18210:	mov	r3, #226	; 0xe2
   18214:	ldr	r0, [r1]
   18218:	str	r2, [sp]
   1821c:	ldr	r1, [pc, #320]	; 18364 <__flatcc_fb_codegen_c@@Base+0xf68>
   18220:	ldr	r2, [pc, #320]	; 18368 <__flatcc_fb_codegen_c@@Base+0xf6c>
   18224:	bl	14094 <fprintf@plt>
   18228:	ldr	r3, [pc, #428]	; 183dc <__flatcc_fb_codegen_c@@Base+0xfe0>
   1822c:	mov	r2, #226	; 0xe2
   18230:	ldr	r1, [pc, #304]	; 18368 <__flatcc_fb_codegen_c@@Base+0xf6c>
   18234:	ldr	r0, [pc, #308]	; 18370 <__flatcc_fb_codegen_c@@Base+0xf74>
   18238:	bl	14148 <__assert_fail@plt>
   1823c:	vldr	d7, [r7, #48]	; 0x30
   18240:	add	r9, sp, #40	; 0x28
   18244:	mov	r0, r9
   18248:	ldr	r1, [pc, #400]	; 183e0 <__flatcc_fb_codegen_c@@Base+0xfe4>
   1824c:	vcvt.f32.f64	s14, d7
   18250:	vcvt.f64.f32	d7, s14
   18254:	vmov	r2, r3, d7
   18258:	bl	14100 <sprintf@plt>
   1825c:	b	17d20 <__flatcc_fb_codegen_c@@Base+0x924>
   18260:	ldr	r5, [pc, #164]	; 1830c <__flatcc_fb_codegen_c@@Base+0xf10>
   18264:	ldr	r0, [r4, #204]	; 0xcc
   18268:	ldr	r3, [sp, #24]
   1826c:	ldr	r2, [sp, #32]
   18270:	str	r8, [sp]
   18274:	str	r5, [sp, #4]
   18278:	ldr	r1, [pc, #164]	; 18324 <__flatcc_fb_codegen_c@@Base+0xf28>
   1827c:	bl	14094 <fprintf@plt>
   18280:	ldr	r3, [sp, #36]	; 0x24
   18284:	ldr	r0, [r4, #204]	; 0xcc
   18288:	mov	r2, r4
   1828c:	str	r3, [sp, #8]
   18290:	str	r5, [sp, #4]
   18294:	str	r8, [sp]
   18298:	mov	r3, r8
   1829c:	ldr	r1, [pc, #132]	; 18328 <__flatcc_fb_codegen_c@@Base+0xf2c>
   182a0:	str	r5, [sp, #20]
   182a4:	bl	14094 <fprintf@plt>
   182a8:	b	17b7c <__flatcc_fb_codegen_c@@Base+0x780>
   182ac:	ldr	r1, [r4, #204]	; 0xcc
   182b0:	mov	r0, #10
   182b4:	bl	140f4 <fputc@plt>
   182b8:	b	17d70 <__flatcc_fb_codegen_c@@Base+0x974>
   182bc:	ldr	r3, [r4, #204]	; 0xcc
   182c0:	mov	r2, #32
   182c4:	mov	r1, #1
   182c8:	ldr	r0, [pc, #120]	; 18348 <__flatcc_fb_codegen_c@@Base+0xf4c>
   182cc:	bl	1401c <fwrite@plt>
   182d0:	ldr	r1, [r4, #204]	; 0xcc
   182d4:	mov	r0, #10
   182d8:	bl	140f4 <fputc@plt>
   182dc:	b	17e10 <__flatcc_fb_codegen_c@@Base+0xa14>
   182e0:	ldr	r3, [pc, #252]	; 183e4 <__flatcc_fb_codegen_c@@Base+0xfe8>
   182e4:	ldr	r2, [pc, #252]	; 183e8 <__flatcc_fb_codegen_c@@Base+0xfec>
   182e8:	ldr	r1, [pc, #252]	; 183ec <__flatcc_fb_codegen_c@@Base+0xff0>
   182ec:	ldr	r0, [pc, #252]	; 183f0 <__flatcc_fb_codegen_c@@Base+0xff4>
   182f0:	bl	14148 <__assert_fail@plt>
   182f4:	ldr	r3, [pc, #232]	; 183e4 <__flatcc_fb_codegen_c@@Base+0xfe8>
   182f8:	ldr	r2, [pc, #244]	; 183f4 <__flatcc_fb_codegen_c@@Base+0xff8>
   182fc:	ldr	r1, [pc, #232]	; 183ec <__flatcc_fb_codegen_c@@Base+0xff0>
   18300:	ldr	r0, [pc, #240]	; 183f8 <__flatcc_fb_codegen_c@@Base+0xffc>
   18304:	bl	14148 <__assert_fail@plt>
   18308:	muleq	r4, r8, r3
   1830c:	ldrdeq	r4, [r4], -r8
   18310:	andeq	lr, r4, ip, asr #2
   18314:	andeq	r4, r4, r0, lsr #10
   18318:	andeq	sp, r4, r4, asr r2
   1831c:	andeq	r4, r4, r8, lsr #10
   18320:	andeq	r4, r4, r4, asr pc
   18324:	andeq	r4, r4, r0, lsr r5
   18328:	andeq	r4, r4, r8, asr #10
   1832c:	andeq	r4, r4, r4, ror r5
   18330:			; <UNDEFINED> instruction: 0x000445b4
   18334:			; <UNDEFINED> instruction: 0x000445b8
   18338:	ldrdeq	r4, [r4], -r8
   1833c:	andeq	r4, r4, r8, lsl r6
   18340:			; <UNDEFINED> instruction: 0x000446b4
   18344:	andeq	r4, r4, r0, lsl #13
   18348:	ldrdeq	r4, [r4], -r8
   1834c:	strdeq	r4, [r4], -ip
   18350:	andeq	r4, r4, r0, asr #15
   18354:	muleq	r4, r0, r7
   18358:	andeq	r4, r4, r0, ror r7
   1835c:	andeq	pc, r6, r8, lsr #1
   18360:	andeq	r4, r4, r8, ror #9
   18364:	ldrdeq	r4, [r4], -ip
   18368:	muleq	r4, r0, r4
   1836c:	andeq	r4, r4, ip, lsl #2
   18370:	andeq	sp, r4, r4, ror r2
   18374:	ldrdeq	r4, [r4], -r0
   18378:	andeq	r4, r4, r0, lsr r6
   1837c:	andeq	r4, r4, r8, ror #12
   18380:	andeq	r4, r4, r8, lsr r7
   18384:	andeq	r4, r4, r8, lsl #8
   18388:	muleq	r4, ip, r5
   1838c:	muleq	r4, r0, r5
   18390:	andeq	r4, r4, r8, lsr #11
   18394:	andeq	r4, r4, r8, lsr #7
   18398:			; <UNDEFINED> instruction: 0x000443b0
   1839c:			; <UNDEFINED> instruction: 0x000443b8
   183a0:	andeq	r4, r4, r8, asr #7
   183a4:	muleq	r4, r0, r3
   183a8:	andeq	r4, r4, r0, asr #7
   183ac:	andeq	r4, r4, r0, lsr #7
   183b0:	andeq	r4, r4, r8, ror r3
   183b4:	andeq	r4, r4, ip, ror #6
   183b8:	andeq	r4, r4, r4, lsl #7
   183bc:	strdeq	r4, [r4], -r0
   183c0:	andeq	r4, r4, r0, lsl r4
   183c4:	andeq	r4, r4, r8, lsr #8
   183c8:	strdeq	r4, [r4], -ip
   183cc:	andeq	r4, r4, r4, ror #7
   183d0:	andeq	r4, r4, r0, lsr #8
   183d4:	andeq	r4, r4, r8, lsl r4
   183d8:	andeq	r4, r4, ip, ror #1
   183dc:	andeq	r4, r4, r0, lsl #2
   183e0:			; <UNDEFINED> instruction: 0x000445b0
   183e4:	andeq	r4, r4, r0, ror #1
   183e8:			; <UNDEFINED> instruction: 0x000004b5
   183ec:	andeq	r4, r4, ip, lsl #3
   183f0:	andeq	r4, r4, r0, ror r4
   183f4:			; <UNDEFINED> instruction: 0x000004b4
   183f8:	andeq	r4, r4, r0, lsr r4
   183fc:	ldr	r3, [r0, #212]	; 0xd4
   18400:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18404:	sub	sp, sp, #492	; 0x1ec
   18408:	ldr	r3, [r3, #132]	; 0x84
   1840c:	mov	fp, r1
   18410:	mov	r2, #220	; 0xdc
   18414:	mov	r1, #0
   18418:	mov	r4, r0
   1841c:	add	r0, sp, #48	; 0x30
   18420:	str	r3, [sp, #28]
   18424:	bl	140ac <memset@plt>
   18428:	add	r0, sp, #268	; 0x10c
   1842c:	mov	r2, #220	; 0xdc
   18430:	mov	r1, #0
   18434:	bl	140ac <memset@plt>
   18438:	ldrh	r3, [fp, #8]
   1843c:	cmp	r3, #1
   18440:	bne	18f0c <__flatcc_fb_codegen_c@@Base+0x1b10>
   18444:	ldrh	r3, [fp, #104]	; 0x68
   18448:	cmp	r3, #0
   1844c:	bne	18834 <__flatcc_fb_codegen_c@@Base+0x1438>
   18450:	ldrd	r2, [fp, #96]	; 0x60
   18454:	orrs	r3, r2, r3
   18458:	bne	18ef8 <__flatcc_fb_codegen_c@@Base+0x1afc>
   1845c:	add	r2, sp, #48	; 0x30
   18460:	mov	r1, fp
   18464:	ldr	r0, [fp, #12]
   18468:	bl	170c4 <__flatcc_fb_scoped_symbol_name@@Base>
   1846c:	ldr	r5, [fp, #32]
   18470:	cmp	r5, #0
   18474:	beq	18500 <__flatcc_fb_codegen_c@@Base+0x1104>
   18478:	mov	r3, #0
   1847c:	ldr	r8, [pc, #2716]	; 18f20 <__flatcc_fb_codegen_c@@Base+0x1b24>
   18480:	ldr	sl, [pc, #2716]	; 18f24 <__flatcc_fb_codegen_c@@Base+0x1b28>
   18484:	ldr	r9, [pc, #2716]	; 18f28 <__flatcc_fb_codegen_c@@Base+0x1b2c>
   18488:	ldr	r7, [pc, #2716]	; 18f2c <__flatcc_fb_codegen_c@@Base+0x1b30>
   1848c:	mov	r6, r3
   18490:	mov	r0, #1
   18494:	ldr	r2, [r5, #4]
   18498:	ldr	r1, [r2, #8]
   1849c:	cmp	r1, r3
   184a0:	beq	184c0 <__flatcc_fb_codegen_c@@Base+0x10c4>
   184a4:	cmp	r0, #0
   184a8:	mov	r2, r8
   184ac:	movne	r1, r9
   184b0:	moveq	r1, sl
   184b4:	ldr	r0, [r4, #204]	; 0xcc
   184b8:	bl	14094 <fprintf@plt>
   184bc:	ldr	r2, [r5, #4]
   184c0:	ldr	r3, [r2]
   184c4:	mov	r1, r7
   184c8:	ldr	r2, [r2, #4]
   184cc:	ldr	r0, [r4, #204]	; 0xcc
   184d0:	bl	14094 <fprintf@plt>
   184d4:	ldr	r3, [r5, #4]
   184d8:	ldr	r5, [r5]
   184dc:	mov	r0, r6
   184e0:	cmp	r5, #0
   184e4:	ldr	r3, [r3, #8]
   184e8:	bne	18494 <__flatcc_fb_codegen_c@@Base+0x1098>
   184ec:	ldr	r3, [r4, #204]	; 0xcc
   184f0:	mov	r2, #4
   184f4:	mov	r1, #1
   184f8:	ldr	r0, [pc, #2608]	; 18f30 <__flatcc_fb_codegen_c@@Base+0x1b34>
   184fc:	bl	1401c <fwrite@plt>
   18500:	ldrd	r2, [fp, #112]	; 0x70
   18504:	orrs	r3, r2, r3
   18508:	beq	18898 <__flatcc_fb_codegen_c@@Base+0x149c>
   1850c:	ldr	r3, [sp, #28]
   18510:	cmp	r3, #0
   18514:	bne	18a4c <__flatcc_fb_codegen_c@@Base+0x1650>
   18518:	add	r2, sp, #48	; 0x30
   1851c:	ldr	r1, [pc, #2576]	; 18f34 <__flatcc_fb_codegen_c@@Base+0x1b38>
   18520:	ldr	r0, [r4, #204]	; 0xcc
   18524:	bl	14094 <fprintf@plt>
   18528:	ldr	r5, [fp, #20]
   1852c:	cmp	r5, #0
   18530:	beq	1866c <__flatcc_fb_codegen_c@@Base+0x1270>
   18534:	mov	r3, #0
   18538:	ldr	r8, [pc, #2552]	; 18f38 <__flatcc_fb_codegen_c@@Base+0x1b3c>
   1853c:	ldr	r7, [pc, #2532]	; 18f28 <__flatcc_fb_codegen_c@@Base+0x1b2c>
   18540:	ldr	r6, [pc, #2532]	; 18f2c <__flatcc_fb_codegen_c@@Base+0x1b30>
   18544:	mov	r9, r3
   18548:	str	r3, [sp, #36]	; 0x24
   1854c:	str	r3, [sp, #44]	; 0x2c
   18550:	str	fp, [sp, #40]	; 0x28
   18554:	ldr	sl, [r5, #68]	; 0x44
   18558:	cmp	sl, #0
   1855c:	beq	185d8 <__flatcc_fb_codegen_c@@Base+0x11dc>
   18560:	mov	r3, #0
   18564:	mov	fp, r3
   18568:	mov	r0, #1
   1856c:	ldr	r2, [sl, #4]
   18570:	ldr	r1, [r2, #8]
   18574:	cmp	r1, r3
   18578:	beq	18598 <__flatcc_fb_codegen_c@@Base+0x119c>
   1857c:	cmp	r0, #0
   18580:	mov	r2, r8
   18584:	movne	r1, r7
   18588:	ldreq	r1, [pc, #2452]	; 18f24 <__flatcc_fb_codegen_c@@Base+0x1b28>
   1858c:	ldr	r0, [r4, #204]	; 0xcc
   18590:	bl	14094 <fprintf@plt>
   18594:	ldr	r2, [sl, #4]
   18598:	ldr	r3, [r2]
   1859c:	mov	r1, r6
   185a0:	ldr	r2, [r2, #4]
   185a4:	ldr	r0, [r4, #204]	; 0xcc
   185a8:	bl	14094 <fprintf@plt>
   185ac:	ldr	r3, [sl, #4]
   185b0:	ldr	sl, [sl]
   185b4:	mov	r0, fp
   185b8:	cmp	sl, #0
   185bc:	ldr	r3, [r3, #8]
   185c0:	bne	1856c <__flatcc_fb_codegen_c@@Base+0x1170>
   185c4:	ldr	r3, [r4, #204]	; 0xcc
   185c8:	mov	r2, #4
   185cc:	mov	r1, #1
   185d0:	ldr	r0, [pc, #2392]	; 18f30 <__flatcc_fb_codegen_c@@Base+0x1b34>
   185d4:	bl	1401c <fwrite@plt>
   185d8:	ldr	r3, [r5, #4]
   185dc:	cmp	r9, #0
   185e0:	ldm	r3, {sl, fp}
   185e4:	ldreq	r3, [sp, #40]	; 0x28
   185e8:	ldrhne	r3, [r5, #74]	; 0x4a
   185ec:	ldrheq	r3, [r3, #104]	; 0x68
   185f0:	str	r3, [sp, #32]
   185f4:	ldr	r3, [sp, #28]
   185f8:	cmp	r3, #0
   185fc:	beq	186e8 <__flatcc_fb_codegen_c@@Base+0x12ec>
   18600:	ldr	r3, [r5, #80]	; 0x50
   18604:	subs	r3, r3, r9
   18608:	bne	18878 <__flatcc_fb_codegen_c@@Base+0x147c>
   1860c:	ldrh	r3, [r5, #72]	; 0x48
   18610:	tst	r3, #4
   18614:	beq	18728 <__flatcc_fb_codegen_c@@Base+0x132c>
   18618:	ldr	r1, [sp, #36]	; 0x24
   1861c:	ldr	r3, [r5, #88]	; 0x58
   18620:	ldr	r0, [r4, #204]	; 0xcc
   18624:	add	ip, r1, #1
   18628:	mov	r2, r1
   1862c:	str	sl, [sp, #4]
   18630:	str	fp, [sp]
   18634:	ldr	r1, [pc, #2304]	; 18f3c <__flatcc_fb_codegen_c@@Base+0x1b40>
   18638:	str	ip, [sp, #36]	; 0x24
   1863c:	bl	14094 <fprintf@plt>
   18640:	ldr	r9, [r5, #80]	; 0x50
   18644:	ldr	r3, [r5, #88]	; 0x58
   18648:	ldr	r5, [r5]
   1864c:	add	r9, r9, r3
   18650:	cmp	r5, #0
   18654:	bne	18554 <__flatcc_fb_codegen_c@@Base+0x1158>
   18658:	ldr	r3, [sp, #28]
   1865c:	mov	r2, r9
   18660:	cmp	r3, #0
   18664:	ldr	fp, [sp, #40]	; 0x28
   18668:	bne	18a84 <__flatcc_fb_codegen_c@@Base+0x1688>
   1866c:	ldr	r3, [r4, #204]	; 0xcc
   18670:	mov	r2, #3
   18674:	mov	r1, #1
   18678:	ldr	r0, [pc, #2240]	; 18f40 <__flatcc_fb_codegen_c@@Base+0x1b44>
   1867c:	bl	1401c <fwrite@plt>
   18680:	ldrd	r6, [fp, #112]	; 0x70
   18684:	ldr	r0, [r4, #204]	; 0xcc
   18688:	add	r2, sp, #48	; 0x30
   1868c:	strd	r6, [sp]
   18690:	ldr	r1, [pc, #2220]	; 18f44 <__flatcc_fb_codegen_c@@Base+0x1b48>
   18694:	bl	14094 <fprintf@plt>
   18698:	add	r3, sp, #48	; 0x30
   1869c:	ldr	r0, [r4, #204]	; 0xcc
   186a0:	mov	r2, r3
   186a4:	str	r3, [sp]
   186a8:	ldr	r1, [pc, #2200]	; 18f48 <__flatcc_fb_codegen_c@@Base+0x1b4c>
   186ac:	bl	14094 <fprintf@plt>
   186b0:	add	r3, sp, #48	; 0x30
   186b4:	ldr	r0, [r4, #204]	; 0xcc
   186b8:	mov	r2, r3
   186bc:	str	r3, [sp]
   186c0:	ldr	r1, [pc, #2180]	; 18f4c <__flatcc_fb_codegen_c@@Base+0x1b50>
   186c4:	bl	14094 <fprintf@plt>
   186c8:	add	r3, sp, #48	; 0x30
   186cc:	ldr	r0, [r4, #204]	; 0xcc
   186d0:	mov	r2, r3
   186d4:	str	r4, [sp, #4]
   186d8:	str	r3, [sp]
   186dc:	ldr	r1, [pc, #2156]	; 18f50 <__flatcc_fb_codegen_c@@Base+0x1b54>
   186e0:	bl	14094 <fprintf@plt>
   186e4:	b	188f0 <__flatcc_fb_codegen_c@@Base+0x14f4>
   186e8:	ldrh	r3, [r5, #72]	; 0x48
   186ec:	tst	r3, #4
   186f0:	beq	18728 <__flatcc_fb_codegen_c@@Base+0x132c>
   186f4:	ldr	r1, [sp, #36]	; 0x24
   186f8:	str	sl, [sp, #8]
   186fc:	str	fp, [sp, #4]
   18700:	ldr	r3, [r5, #88]	; 0x58
   18704:	add	ip, r1, #1
   18708:	ldr	r0, [r4, #204]	; 0xcc
   1870c:	ldr	r2, [sp, #32]
   18710:	str	r3, [sp]
   18714:	mov	r3, r1
   18718:	ldr	r1, [pc, #2100]	; 18f54 <__flatcc_fb_codegen_c@@Base+0x1b58>
   1871c:	str	ip, [sp, #36]	; 0x24
   18720:	bl	14094 <fprintf@plt>
   18724:	b	18640 <__flatcc_fb_codegen_c@@Base+0x1244>
   18728:	ldrh	r3, [r5, #24]
   1872c:	cmp	r3, #8
   18730:	beq	187a8 <__flatcc_fb_codegen_c@@Base+0x13ac>
   18734:	cmp	r3, #14
   18738:	bne	187f0 <__flatcc_fb_codegen_c@@Base+0x13f4>
   1873c:	ldr	r1, [r5, #16]
   18740:	ldrh	r3, [r1, #8]
   18744:	bic	r2, r3, #2
   18748:	cmp	r2, #1
   1874c:	bne	18ee4 <__flatcc_fb_codegen_c@@Base+0x1ae8>
   18750:	ldr	r0, [pc, #1992]	; 18f20 <__flatcc_fb_codegen_c@@Base+0x1b24>
   18754:	cmp	r3, #1
   18758:	ldr	r9, [pc, #2040]	; 18f58 <__flatcc_fb_codegen_c@@Base+0x1b5c>
   1875c:	add	r2, sp, #268	; 0x10c
   18760:	moveq	r9, r0
   18764:	ldr	r0, [r1, #12]
   18768:	bl	170c4 <__flatcc_fb_scoped_symbol_name@@Base>
   1876c:	ldr	r3, [sp, #28]
   18770:	cmp	r3, #0
   18774:	bne	18860 <__flatcc_fb_codegen_c@@Base+0x1464>
   18778:	ldr	r0, [r4, #204]	; 0xcc
   1877c:	ldr	r2, [sp, #32]
   18780:	str	r9, [sp]
   18784:	add	r3, sp, #268	; 0x10c
   18788:	ldr	r1, [pc, #1996]	; 18f5c <__flatcc_fb_codegen_c@@Base+0x1b60>
   1878c:	bl	14094 <fprintf@plt>
   18790:	mov	r3, sl
   18794:	mov	r2, fp
   18798:	ldr	r1, [pc, #1984]	; 18f60 <__flatcc_fb_codegen_c@@Base+0x1b64>
   1879c:	ldr	r0, [r4, #204]	; 0xcc
   187a0:	bl	14094 <fprintf@plt>
   187a4:	b	18640 <__flatcc_fb_codegen_c@@Base+0x1244>
   187a8:	ldr	r3, [r5, #16]
   187ac:	cmp	r3, #5
   187b0:	beq	18c08 <__flatcc_fb_codegen_c@@Base+0x180c>
   187b4:	sub	r3, r3, #1
   187b8:	cmp	r3, #10
   187bc:	ldrls	pc, [pc, r3, lsl #2]
   187c0:	b	18c80 <__flatcc_fb_codegen_c@@Base+0x1884>
   187c4:	andeq	r8, r1, r0, asr #26
   187c8:	andeq	r8, r1, ip, asr #26
   187cc:	andeq	r8, r1, r4, lsr sp
   187d0:	andeq	r8, r1, r0, asr ip
   187d4:	andeq	r8, r1, r0, lsl #25
   187d8:	andeq	r8, r1, r8, lsr ip
   187dc:	andeq	r8, r1, ip, lsr #24
   187e0:	andeq	r8, r1, r4, ror ip
   187e4:	andeq	r8, r1, r8, ror #24
   187e8:	andeq	r8, r1, ip, asr ip
   187ec:	andeq	r8, r1, r4, asr #24
   187f0:	ldr	r2, [pc, #1900]	; 18f64 <__flatcc_fb_codegen_c@@Base+0x1b68>
   187f4:	ldr	r1, [pc, #1900]	; 18f68 <__flatcc_fb_codegen_c@@Base+0x1b6c>
   187f8:	ldr	r0, [r4, #204]	; 0xcc
   187fc:	bl	14094 <fprintf@plt>
   18800:	ldr	r1, [pc, #1892]	; 18f6c <__flatcc_fb_codegen_c@@Base+0x1b70>
   18804:	ldr	r2, [pc, #1892]	; 18f70 <__flatcc_fb_codegen_c@@Base+0x1b74>
   18808:	ldr	r3, [pc, #1892]	; 18f74 <__flatcc_fb_codegen_c@@Base+0x1b78>
   1880c:	ldr	r0, [r1]
   18810:	str	r2, [sp]
   18814:	ldr	r1, [pc, #1884]	; 18f78 <__flatcc_fb_codegen_c@@Base+0x1b7c>
   18818:	ldr	r2, [pc, #1884]	; 18f7c <__flatcc_fb_codegen_c@@Base+0x1b80>
   1881c:	bl	14094 <fprintf@plt>
   18820:	ldr	r3, [pc, #1880]	; 18f80 <__flatcc_fb_codegen_c@@Base+0x1b84>
   18824:	ldr	r2, [pc, #1864]	; 18f74 <__flatcc_fb_codegen_c@@Base+0x1b78>
   18828:	ldr	r1, [pc, #1868]	; 18f7c <__flatcc_fb_codegen_c@@Base+0x1b80>
   1882c:	ldr	r0, [pc, #1872]	; 18f84 <__flatcc_fb_codegen_c@@Base+0x1b88>
   18830:	bl	14148 <__assert_fail@plt>
   18834:	ldrd	r2, [fp, #112]	; 0x70
   18838:	orrs	r3, r2, r3
   1883c:	bne	1845c <__flatcc_fb_codegen_c@@Base+0x1060>
   18840:	ldrd	r2, [fp, #96]	; 0x60
   18844:	orrs	r3, r2, r3
   18848:	beq	1845c <__flatcc_fb_codegen_c@@Base+0x1060>
   1884c:	ldr	r3, [pc, #1836]	; 18f80 <__flatcc_fb_codegen_c@@Base+0x1b84>
   18850:	ldr	r2, [pc, #1840]	; 18f88 <__flatcc_fb_codegen_c@@Base+0x1b8c>
   18854:	ldr	r1, [pc, #1824]	; 18f7c <__flatcc_fb_codegen_c@@Base+0x1b80>
   18858:	ldr	r0, [pc, #1836]	; 18f8c <__flatcc_fb_codegen_c@@Base+0x1b90>
   1885c:	bl	14148 <__assert_fail@plt>
   18860:	mov	r3, r9
   18864:	add	r2, sp, #268	; 0x10c
   18868:	ldr	r1, [pc, #1824]	; 18f90 <__flatcc_fb_codegen_c@@Base+0x1b94>
   1886c:	ldr	r0, [r4, #204]	; 0xcc
   18870:	bl	14094 <fprintf@plt>
   18874:	b	18790 <__flatcc_fb_codegen_c@@Base+0x1394>
   18878:	ldr	r1, [sp, #44]	; 0x2c
   1887c:	ldr	r0, [r4, #204]	; 0xcc
   18880:	add	ip, r1, #1
   18884:	mov	r2, r1
   18888:	ldr	r1, [pc, #1796]	; 18f94 <__flatcc_fb_codegen_c@@Base+0x1b98>
   1888c:	str	ip, [sp, #44]	; 0x2c
   18890:	bl	14094 <fprintf@plt>
   18894:	b	1860c <__flatcc_fb_codegen_c@@Base+0x1210>
   18898:	add	r2, sp, #48	; 0x30
   1889c:	ldr	r1, [pc, #1780]	; 18f98 <__flatcc_fb_codegen_c@@Base+0x1b9c>
   188a0:	ldr	r0, [r4, #204]	; 0xcc
   188a4:	bl	14094 <fprintf@plt>
   188a8:	add	r3, sp, #48	; 0x30
   188ac:	mov	r2, r3
   188b0:	ldr	r0, [r4, #204]	; 0xcc
   188b4:	ldr	r1, [pc, #1760]	; 18f9c <__flatcc_fb_codegen_c@@Base+0x1ba0>
   188b8:	str	r3, [sp]
   188bc:	bl	14094 <fprintf@plt>
   188c0:	add	r3, sp, #48	; 0x30
   188c4:	mov	r2, r3
   188c8:	ldr	r0, [r4, #204]	; 0xcc
   188cc:	ldr	r1, [pc, #1740]	; 18fa0 <__flatcc_fb_codegen_c@@Base+0x1ba4>
   188d0:	str	r3, [sp]
   188d4:	bl	14094 <fprintf@plt>
   188d8:	add	r3, sp, #48	; 0x30
   188dc:	ldr	r0, [r4, #204]	; 0xcc
   188e0:	mov	r2, r3
   188e4:	str	r3, [sp]
   188e8:	ldr	r1, [pc, #1716]	; 18fa4 <__flatcc_fb_codegen_c@@Base+0x1ba8>
   188ec:	bl	14094 <fprintf@plt>
   188f0:	ldrd	r6, [fp, #112]	; 0x70
   188f4:	ldr	r0, [r4, #204]	; 0xcc
   188f8:	add	r2, sp, #48	; 0x30
   188fc:	ldr	r1, [pc, #1700]	; 18fa8 <__flatcc_fb_codegen_c@@Base+0x1bac>
   18900:	strd	r6, [sp]
   18904:	bl	14094 <fprintf@plt>
   18908:	add	r3, sp, #48	; 0x30
   1890c:	mov	r2, r3
   18910:	ldr	r0, [r4, #204]	; 0xcc
   18914:	ldr	r1, [pc, #1680]	; 18fac <__flatcc_fb_codegen_c@@Base+0x1bb0>
   18918:	str	r4, [sp]
   1891c:	bl	14094 <fprintf@plt>
   18920:	add	r3, sp, #48	; 0x30
   18924:	mov	r2, r4
   18928:	ldr	r1, [pc, #1664]	; 18fb0 <__flatcc_fb_codegen_c@@Base+0x1bb4>
   1892c:	ldr	r0, [r4, #204]	; 0xcc
   18930:	bl	14094 <fprintf@plt>
   18934:	ldr	r1, [r4, #204]	; 0xcc
   18938:	mov	r0, #10
   1893c:	bl	140f4 <fputc@plt>
   18940:	ldr	r5, [fp, #20]
   18944:	cmp	r5, #0
   18948:	beq	189d4 <__flatcc_fb_codegen_c@@Base+0x15d8>
   1894c:	mov	r8, #0
   18950:	ldr	fp, [pc, #1628]	; 18fb4 <__flatcc_fb_codegen_c@@Base+0x1bb8>
   18954:	ldr	sl, [pc, #1476]	; 18f20 <__flatcc_fb_codegen_c@@Base+0x1b24>
   18958:	mov	r9, r8
   1895c:	ldrh	r3, [r5, #72]	; 0x48
   18960:	tst	r3, #4
   18964:	bne	189c8 <__flatcc_fb_codegen_c@@Base+0x15cc>
   18968:	ldrh	r1, [r5, #24]
   1896c:	ldr	r2, [r5, #4]
   18970:	cmp	r1, #8
   18974:	ldr	r7, [r2]
   18978:	ldr	r6, [r2, #4]
   1897c:	beq	189e8 <__flatcc_fb_codegen_c@@Base+0x15ec>
   18980:	cmp	r1, #14
   18984:	bne	189b4 <__flatcc_fb_codegen_c@@Base+0x15b8>
   18988:	ldr	r1, [r5, #16]
   1898c:	add	r2, sp, #268	; 0x10c
   18990:	ldr	r0, [r1, #12]
   18994:	bl	170c4 <__flatcc_fb_scoped_symbol_name@@Base>
   18998:	ldr	r2, [r5, #16]
   1899c:	ldrh	r3, [r2, #8]
   189a0:	cmp	r3, #1
   189a4:	beq	18cd0 <__flatcc_fb_codegen_c@@Base+0x18d4>
   189a8:	cmp	r3, #3
   189ac:	beq	18abc <__flatcc_fb_codegen_c@@Base+0x16c0>
   189b0:	ldrh	r3, [r5, #72]	; 0x48
   189b4:	and	r3, r3, #128	; 0x80
   189b8:	cmp	r3, #0
   189bc:	beq	189c8 <__flatcc_fb_codegen_c@@Base+0x15cc>
   189c0:	cmp	r9, #0
   189c4:	beq	18a30 <__flatcc_fb_codegen_c@@Base+0x1634>
   189c8:	ldr	r5, [r5]
   189cc:	cmp	r5, #0
   189d0:	bne	1895c <__flatcc_fb_codegen_c@@Base+0x1560>
   189d4:	ldr	r1, [r4, #204]	; 0xcc
   189d8:	mov	r0, #10
   189dc:	bl	140f4 <fputc@plt>
   189e0:	add	sp, sp, #492	; 0x1ec
   189e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   189e8:	ldr	r3, [r5, #16]
   189ec:	cmp	r3, #5
   189f0:	beq	18cf4 <__flatcc_fb_codegen_c@@Base+0x18f8>
   189f4:	sub	r3, r3, #1
   189f8:	cmp	r3, #10
   189fc:	ldrls	pc, [pc, r3, lsl #2]
   18a00:	b	18c80 <__flatcc_fb_codegen_c@@Base+0x1884>
   18a04:	andeq	r8, r1, r8, asr #27
   18a08:	ldrdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   18a0c:	andeq	r8, r1, r8, ror #27
   18a10:			; <UNDEFINED> instruction: 0x00018db8
   18a14:	andeq	r8, r1, r0, lsl #25
   18a18:	andeq	r8, r1, r8, lsl #27
   18a1c:	muleq	r1, r8, sp
   18a20:	andeq	r8, r1, r8, lsr #27
   18a24:	andeq	r8, r1, r8, asr sp
   18a28:	andeq	r8, r1, r8, ror #26
   18a2c:	andeq	r8, r1, r8, ror sp
   18a30:	ldr	r3, [r4, #204]	; 0xcc
   18a34:	mov	r2, #84	; 0x54
   18a38:	mov	r1, #1
   18a3c:	mov	r0, fp
   18a40:	bl	1401c <fwrite@plt>
   18a44:	mov	r8, #1
   18a48:	b	189c8 <__flatcc_fb_codegen_c@@Base+0x15cc>
   18a4c:	ldr	r3, [r4, #204]	; 0xcc
   18a50:	mov	r2, #16
   18a54:	mov	r1, #1
   18a58:	ldr	r0, [pc, #1368]	; 18fb8 <__flatcc_fb_codegen_c@@Base+0x1bbc>
   18a5c:	bl	1401c <fwrite@plt>
   18a60:	add	r2, sp, #48	; 0x30
   18a64:	ldr	r1, [pc, #1224]	; 18f34 <__flatcc_fb_codegen_c@@Base+0x1b38>
   18a68:	ldr	r0, [r4, #204]	; 0xcc
   18a6c:	bl	14094 <fprintf@plt>
   18a70:	ldr	r5, [fp, #20]
   18a74:	cmp	r5, #0
   18a78:	bne	18534 <__flatcc_fb_codegen_c@@Base+0x1138>
   18a7c:	mov	r2, r5
   18a80:	str	r5, [sp, #44]	; 0x2c
   18a84:	ldr	r3, [fp, #112]	; 0x70
   18a88:	subs	r3, r3, r2
   18a8c:	bne	18df8 <__flatcc_fb_codegen_c@@Base+0x19fc>
   18a90:	ldr	r3, [r4, #204]	; 0xcc
   18a94:	mov	r2, #3
   18a98:	mov	r1, #1
   18a9c:	ldr	r0, [pc, #1180]	; 18f40 <__flatcc_fb_codegen_c@@Base+0x1b44>
   18aa0:	bl	1401c <fwrite@plt>
   18aa4:	ldr	r3, [r4, #204]	; 0xcc
   18aa8:	mov	r2, #15
   18aac:	mov	r1, #1
   18ab0:	ldr	r0, [pc, #1284]	; 18fbc <__flatcc_fb_codegen_c@@Base+0x1bc0>
   18ab4:	bl	1401c <fwrite@plt>
   18ab8:	b	18680 <__flatcc_fb_codegen_c@@Base+0x1284>
   18abc:	ldr	r3, [r2, #40]	; 0x28
   18ac0:	sub	r3, r3, #1
   18ac4:	cmp	r3, #10
   18ac8:	bhi	18e8c <__flatcc_fb_codegen_c@@Base+0x1a90>
   18acc:	add	r3, sp, #268	; 0x10c
   18ad0:	ldr	r0, [r4, #204]	; 0xcc
   18ad4:	mov	r2, r4
   18ad8:	str	r3, [sp, #12]
   18adc:	str	r3, [sp, #8]
   18ae0:	stm	sp, {r6, r7}
   18ae4:	add	r3, sp, #48	; 0x30
   18ae8:	ldr	r1, [pc, #1232]	; 18fc0 <__flatcc_fb_codegen_c@@Base+0x1bc4>
   18aec:	bl	14094 <fprintf@plt>
   18af0:	ldr	r3, [r4, #212]	; 0xd4
   18af4:	ldr	r3, [r3, #32]
   18af8:	cmp	r3, #0
   18afc:	bne	18b2c <__flatcc_fb_codegen_c@@Base+0x1730>
   18b00:	ldrh	r3, [r5, #72]	; 0x48
   18b04:	tst	r3, #128	; 0x80
   18b08:	beq	189c8 <__flatcc_fb_codegen_c@@Base+0x15cc>
   18b0c:	add	r3, sp, #268	; 0x10c
   18b10:	ldr	r0, [r4, #204]	; 0xcc
   18b14:	mov	r2, r4
   18b18:	str	r3, [sp, #8]
   18b1c:	stm	sp, {r6, r7}
   18b20:	add	r3, sp, #48	; 0x30
   18b24:	ldr	r1, [pc, #1176]	; 18fc4 <__flatcc_fb_codegen_c@@Base+0x1bc8>
   18b28:	bl	14094 <fprintf@plt>
   18b2c:	ldrh	r3, [r5, #72]	; 0x48
   18b30:	tst	r3, #128	; 0x80
   18b34:	beq	189c8 <__flatcc_fb_codegen_c@@Base+0x15cc>
   18b38:	cmp	r8, #0
   18b3c:	ldr	r3, [r4, #204]	; 0xcc
   18b40:	bne	18e0c <__flatcc_fb_codegen_c@@Base+0x1a10>
   18b44:	mov	r2, #61	; 0x3d
   18b48:	mov	r1, #1
   18b4c:	ldr	r0, [pc, #1140]	; 18fc8 <__flatcc_fb_codegen_c@@Base+0x1bcc>
   18b50:	bl	1401c <fwrite@plt>
   18b54:	add	r3, sp, #268	; 0x10c
   18b58:	ldr	r0, [r4, #204]	; 0xcc
   18b5c:	mov	r2, r4
   18b60:	str	r3, [sp, #8]
   18b64:	stm	sp, {r6, r7}
   18b68:	add	r3, sp, #48	; 0x30
   18b6c:	ldr	r1, [pc, #1112]	; 18fcc <__flatcc_fb_codegen_c@@Base+0x1bd0>
   18b70:	bl	14094 <fprintf@plt>
   18b74:	ldr	r3, [r4, #212]	; 0xd4
   18b78:	ldr	r3, [r3, #136]	; 0x88
   18b7c:	cmp	r3, #0
   18b80:	beq	18bac <__flatcc_fb_codegen_c@@Base+0x17b0>
   18b84:	add	r3, sp, #48	; 0x30
   18b88:	ldr	r0, [r4, #204]	; 0xcc
   18b8c:	str	r3, [sp, #12]
   18b90:	add	r3, sp, #268	; 0x10c
   18b94:	str	r3, [sp, #8]
   18b98:	stm	sp, {r6, r7}
   18b9c:	add	r3, sp, #48	; 0x30
   18ba0:	mov	r2, r4
   18ba4:	ldr	r1, [pc, #1060]	; 18fd0 <__flatcc_fb_codegen_c@@Base+0x1bd4>
   18ba8:	bl	14094 <fprintf@plt>
   18bac:	add	r3, sp, #268	; 0x10c
   18bb0:	ldr	r0, [r4, #204]	; 0xcc
   18bb4:	mov	r2, r4
   18bb8:	str	r3, [sp, #8]
   18bbc:	ldr	r1, [pc, #1040]	; 18fd4 <__flatcc_fb_codegen_c@@Base+0x1bd8>
   18bc0:	add	r3, sp, #48	; 0x30
   18bc4:	stm	sp, {r6, r7}
   18bc8:	bl	14094 <fprintf@plt>
   18bcc:	add	r3, sp, #268	; 0x10c
   18bd0:	ldr	r0, [r4, #204]	; 0xcc
   18bd4:	mov	r2, r4
   18bd8:	str	r3, [sp, #8]
   18bdc:	stm	sp, {r6, r7}
   18be0:	add	r3, sp, #48	; 0x30
   18be4:	ldr	r1, [pc, #1004]	; 18fd8 <__flatcc_fb_codegen_c@@Base+0x1bdc>
   18be8:	bl	14094 <fprintf@plt>
   18bec:	ldr	r3, [r4, #212]	; 0xd4
   18bf0:	ldr	r3, [r3, #136]	; 0x88
   18bf4:	cmp	r3, #0
   18bf8:	bne	18ec0 <__flatcc_fb_codegen_c@@Base+0x1ac4>
   18bfc:	mov	r8, #1
   18c00:	mov	r9, r8
   18c04:	b	189c8 <__flatcc_fb_codegen_c@@Base+0x15cc>
   18c08:	ldr	r3, [pc, #972]	; 18fdc <__flatcc_fb_codegen_c@@Base+0x1be0>
   18c0c:	mov	r2, r4
   18c10:	ldr	r1, [sp, #28]
   18c14:	cmp	r1, #0
   18c18:	beq	18cb4 <__flatcc_fb_codegen_c@@Base+0x18b8>
   18c1c:	ldr	r1, [pc, #956]	; 18fe0 <__flatcc_fb_codegen_c@@Base+0x1be4>
   18c20:	ldr	r0, [r4, #204]	; 0xcc
   18c24:	bl	14094 <fprintf@plt>
   18c28:	b	18790 <__flatcc_fb_codegen_c@@Base+0x1394>
   18c2c:	ldr	r2, [pc, #748]	; 18f20 <__flatcc_fb_codegen_c@@Base+0x1b24>
   18c30:	ldr	r3, [pc, #940]	; 18fe4 <__flatcc_fb_codegen_c@@Base+0x1be8>
   18c34:	b	18c10 <__flatcc_fb_codegen_c@@Base+0x1814>
   18c38:	ldr	r2, [pc, #736]	; 18f20 <__flatcc_fb_codegen_c@@Base+0x1b24>
   18c3c:	ldr	r3, [pc, #932]	; 18fe8 <__flatcc_fb_codegen_c@@Base+0x1bec>
   18c40:	b	18c10 <__flatcc_fb_codegen_c@@Base+0x1814>
   18c44:	ldr	r2, [pc, #724]	; 18f20 <__flatcc_fb_codegen_c@@Base+0x1b24>
   18c48:	ldr	r3, [pc, #924]	; 18fec <__flatcc_fb_codegen_c@@Base+0x1bf0>
   18c4c:	b	18c10 <__flatcc_fb_codegen_c@@Base+0x1814>
   18c50:	ldr	r2, [pc, #712]	; 18f20 <__flatcc_fb_codegen_c@@Base+0x1b24>
   18c54:	ldr	r3, [pc, #916]	; 18ff0 <__flatcc_fb_codegen_c@@Base+0x1bf4>
   18c58:	b	18c10 <__flatcc_fb_codegen_c@@Base+0x1814>
   18c5c:	ldr	r2, [pc, #700]	; 18f20 <__flatcc_fb_codegen_c@@Base+0x1b24>
   18c60:	ldr	r3, [pc, #908]	; 18ff4 <__flatcc_fb_codegen_c@@Base+0x1bf8>
   18c64:	b	18c10 <__flatcc_fb_codegen_c@@Base+0x1814>
   18c68:	ldr	r2, [pc, #688]	; 18f20 <__flatcc_fb_codegen_c@@Base+0x1b24>
   18c6c:	ldr	r3, [pc, #900]	; 18ff8 <__flatcc_fb_codegen_c@@Base+0x1bfc>
   18c70:	b	18c10 <__flatcc_fb_codegen_c@@Base+0x1814>
   18c74:	ldr	r2, [pc, #676]	; 18f20 <__flatcc_fb_codegen_c@@Base+0x1b24>
   18c78:	ldr	r3, [pc, #892]	; 18ffc <__flatcc_fb_codegen_c@@Base+0x1c00>
   18c7c:	b	18c10 <__flatcc_fb_codegen_c@@Base+0x1814>
   18c80:	ldr	r1, [pc, #740]	; 18f6c <__flatcc_fb_codegen_c@@Base+0x1b70>
   18c84:	ldr	r2, [pc, #740]	; 18f70 <__flatcc_fb_codegen_c@@Base+0x1b74>
   18c88:	mov	r3, #141	; 0x8d
   18c8c:	ldr	r0, [r1]
   18c90:	str	r2, [sp]
   18c94:	ldr	r1, [pc, #732]	; 18f78 <__flatcc_fb_codegen_c@@Base+0x1b7c>
   18c98:	ldr	r2, [pc, #864]	; 19000 <__flatcc_fb_codegen_c@@Base+0x1c04>
   18c9c:	bl	14094 <fprintf@plt>
   18ca0:	ldr	r3, [pc, #860]	; 19004 <__flatcc_fb_codegen_c@@Base+0x1c08>
   18ca4:	mov	r2, #141	; 0x8d
   18ca8:	ldr	r1, [pc, #848]	; 19000 <__flatcc_fb_codegen_c@@Base+0x1c04>
   18cac:	ldr	r0, [pc, #720]	; 18f84 <__flatcc_fb_codegen_c@@Base+0x1b88>
   18cb0:	bl	14148 <__assert_fail@plt>
   18cb4:	ldr	r0, [r4, #204]	; 0xcc
   18cb8:	ldr	r1, [pc, #840]	; 19008 <__flatcc_fb_codegen_c@@Base+0x1c0c>
   18cbc:	str	r3, [sp]
   18cc0:	mov	r3, r2
   18cc4:	ldr	r2, [sp, #32]
   18cc8:	bl	14094 <fprintf@plt>
   18ccc:	b	18790 <__flatcc_fb_codegen_c@@Base+0x1394>
   18cd0:	add	r3, sp, #268	; 0x10c
   18cd4:	ldr	r0, [r4, #204]	; 0xcc
   18cd8:	mov	r2, r4
   18cdc:	str	r3, [sp, #8]
   18ce0:	stm	sp, {r6, r7}
   18ce4:	add	r3, sp, #48	; 0x30
   18ce8:	ldr	r1, [pc, #796]	; 1900c <__flatcc_fb_codegen_c@@Base+0x1c10>
   18cec:	bl	14094 <fprintf@plt>
   18cf0:	b	189b0 <__flatcc_fb_codegen_c@@Base+0x15b4>
   18cf4:	ldr	r1, [pc, #736]	; 18fdc <__flatcc_fb_codegen_c@@Base+0x1be0>
   18cf8:	ldr	r3, [pc, #784]	; 19010 <__flatcc_fb_codegen_c@@Base+0x1c14>
   18cfc:	mov	r2, r4
   18d00:	ldr	r0, [r4, #204]	; 0xcc
   18d04:	str	r1, [sp, #20]
   18d08:	str	r2, [sp, #16]
   18d0c:	str	r3, [sp, #12]
   18d10:	str	r4, [sp, #8]
   18d14:	add	r3, sp, #48	; 0x30
   18d18:	stm	sp, {r6, r7}
   18d1c:	mov	r2, r4
   18d20:	ldr	r1, [pc, #748]	; 19014 <__flatcc_fb_codegen_c@@Base+0x1c18>
   18d24:	bl	14094 <fprintf@plt>
   18d28:	ldrh	r3, [r5, #72]	; 0x48
   18d2c:	and	r3, r3, #128	; 0x80
   18d30:	b	189b8 <__flatcc_fb_codegen_c@@Base+0x15bc>
   18d34:	ldr	r2, [pc, #484]	; 18f20 <__flatcc_fb_codegen_c@@Base+0x1b24>
   18d38:	ldr	r3, [pc, #728]	; 19018 <__flatcc_fb_codegen_c@@Base+0x1c1c>
   18d3c:	b	18c10 <__flatcc_fb_codegen_c@@Base+0x1814>
   18d40:	ldr	r2, [pc, #472]	; 18f20 <__flatcc_fb_codegen_c@@Base+0x1b24>
   18d44:	ldr	r3, [pc, #720]	; 1901c <__flatcc_fb_codegen_c@@Base+0x1c20>
   18d48:	b	18c10 <__flatcc_fb_codegen_c@@Base+0x1814>
   18d4c:	ldr	r2, [pc, #460]	; 18f20 <__flatcc_fb_codegen_c@@Base+0x1b24>
   18d50:	ldr	r3, [pc, #712]	; 19020 <__flatcc_fb_codegen_c@@Base+0x1c24>
   18d54:	b	18c10 <__flatcc_fb_codegen_c@@Base+0x1814>
   18d58:	ldr	r1, [pc, #664]	; 18ff8 <__flatcc_fb_codegen_c@@Base+0x1bfc>
   18d5c:	mov	r2, sl
   18d60:	ldr	r3, [pc, #700]	; 19024 <__flatcc_fb_codegen_c@@Base+0x1c28>
   18d64:	b	18d00 <__flatcc_fb_codegen_c@@Base+0x1904>
   18d68:	ldr	r1, [pc, #644]	; 18ff4 <__flatcc_fb_codegen_c@@Base+0x1bf8>
   18d6c:	mov	r2, sl
   18d70:	mov	r3, r1
   18d74:	b	18d00 <__flatcc_fb_codegen_c@@Base+0x1904>
   18d78:	ldr	r1, [pc, #620]	; 18fec <__flatcc_fb_codegen_c@@Base+0x1bf0>
   18d7c:	mov	r2, sl
   18d80:	mov	r3, r1
   18d84:	b	18d00 <__flatcc_fb_codegen_c@@Base+0x1904>
   18d88:	ldr	r1, [pc, #600]	; 18fe8 <__flatcc_fb_codegen_c@@Base+0x1bec>
   18d8c:	mov	r2, sl
   18d90:	ldr	r3, [pc, #656]	; 19028 <__flatcc_fb_codegen_c@@Base+0x1c2c>
   18d94:	b	18d00 <__flatcc_fb_codegen_c@@Base+0x1904>
   18d98:	ldr	r1, [pc, #580]	; 18fe4 <__flatcc_fb_codegen_c@@Base+0x1be8>
   18d9c:	mov	r2, sl
   18da0:	ldr	r3, [pc, #644]	; 1902c <__flatcc_fb_codegen_c@@Base+0x1c30>
   18da4:	b	18d00 <__flatcc_fb_codegen_c@@Base+0x1904>
   18da8:	ldr	r1, [pc, #588]	; 18ffc <__flatcc_fb_codegen_c@@Base+0x1c00>
   18dac:	mov	r2, sl
   18db0:	ldr	r3, [pc, #632]	; 19030 <__flatcc_fb_codegen_c@@Base+0x1c34>
   18db4:	b	18d00 <__flatcc_fb_codegen_c@@Base+0x1904>
   18db8:	ldr	r1, [pc, #560]	; 18ff0 <__flatcc_fb_codegen_c@@Base+0x1bf4>
   18dbc:	mov	r2, sl
   18dc0:	ldr	r3, [pc, #620]	; 19034 <__flatcc_fb_codegen_c@@Base+0x1c38>
   18dc4:	b	18d00 <__flatcc_fb_codegen_c@@Base+0x1904>
   18dc8:	ldr	r1, [pc, #588]	; 1901c <__flatcc_fb_codegen_c@@Base+0x1c20>
   18dcc:	mov	r2, sl
   18dd0:	ldr	r3, [pc, #608]	; 19038 <__flatcc_fb_codegen_c@@Base+0x1c3c>
   18dd4:	b	18d00 <__flatcc_fb_codegen_c@@Base+0x1904>
   18dd8:	ldr	r1, [pc, #576]	; 19020 <__flatcc_fb_codegen_c@@Base+0x1c24>
   18ddc:	mov	r2, sl
   18de0:	ldr	r3, [pc, #596]	; 1903c <__flatcc_fb_codegen_c@@Base+0x1c40>
   18de4:	b	18d00 <__flatcc_fb_codegen_c@@Base+0x1904>
   18de8:	ldr	r1, [pc, #552]	; 19018 <__flatcc_fb_codegen_c@@Base+0x1c1c>
   18dec:	ldr	r3, [pc, #588]	; 19040 <__flatcc_fb_codegen_c@@Base+0x1c44>
   18df0:	mov	r2, sl
   18df4:	b	18d00 <__flatcc_fb_codegen_c@@Base+0x1904>
   18df8:	ldr	r2, [sp, #44]	; 0x2c
   18dfc:	ldr	r1, [pc, #400]	; 18f94 <__flatcc_fb_codegen_c@@Base+0x1b98>
   18e00:	ldr	r0, [r4, #204]	; 0xcc
   18e04:	bl	14094 <fprintf@plt>
   18e08:	b	18a90 <__flatcc_fb_codegen_c@@Base+0x1694>
   18e0c:	mov	r2, #66	; 0x42
   18e10:	mov	r1, #1
   18e14:	ldr	r0, [pc, #552]	; 19044 <__flatcc_fb_codegen_c@@Base+0x1c48>
   18e18:	bl	1401c <fwrite@plt>
   18e1c:	ldr	r3, [r4, #204]	; 0xcc
   18e20:	mov	r2, #61	; 0x3d
   18e24:	mov	r1, #1
   18e28:	ldr	r0, [pc, #408]	; 18fc8 <__flatcc_fb_codegen_c@@Base+0x1bcc>
   18e2c:	bl	1401c <fwrite@plt>
   18e30:	add	r3, sp, #268	; 0x10c
   18e34:	ldr	r0, [r4, #204]	; 0xcc
   18e38:	mov	r2, r4
   18e3c:	str	r3, [sp, #8]
   18e40:	stm	sp, {r6, r7}
   18e44:	add	r3, sp, #48	; 0x30
   18e48:	ldr	r1, [pc, #380]	; 18fcc <__flatcc_fb_codegen_c@@Base+0x1bd0>
   18e4c:	bl	14094 <fprintf@plt>
   18e50:	ldr	r3, [r4, #212]	; 0xd4
   18e54:	ldr	r3, [r3, #136]	; 0x88
   18e58:	cmp	r3, #0
   18e5c:	beq	18bfc <__flatcc_fb_codegen_c@@Base+0x1800>
   18e60:	add	r3, sp, #48	; 0x30
   18e64:	ldr	r0, [r4, #204]	; 0xcc
   18e68:	str	r3, [sp, #12]
   18e6c:	add	r3, sp, #268	; 0x10c
   18e70:	str	r3, [sp, #8]
   18e74:	stm	sp, {r6, r7}
   18e78:	add	r3, sp, #48	; 0x30
   18e7c:	mov	r2, r4
   18e80:	ldr	r1, [pc, #328]	; 18fd0 <__flatcc_fb_codegen_c@@Base+0x1bd4>
   18e84:	bl	14094 <fprintf@plt>
   18e88:	b	18bfc <__flatcc_fb_codegen_c@@Base+0x1800>
   18e8c:	ldr	r1, [pc, #216]	; 18f6c <__flatcc_fb_codegen_c@@Base+0x1b70>
   18e90:	ldr	r2, [pc, #216]	; 18f70 <__flatcc_fb_codegen_c@@Base+0x1b74>
   18e94:	mov	r3, #96	; 0x60
   18e98:	ldr	r0, [r1]
   18e9c:	str	r2, [sp]
   18ea0:	ldr	r1, [pc, #208]	; 18f78 <__flatcc_fb_codegen_c@@Base+0x1b7c>
   18ea4:	ldr	r2, [pc, #340]	; 19000 <__flatcc_fb_codegen_c@@Base+0x1c04>
   18ea8:	bl	14094 <fprintf@plt>
   18eac:	ldr	r3, [pc, #404]	; 19048 <__flatcc_fb_codegen_c@@Base+0x1c4c>
   18eb0:	mov	r2, #96	; 0x60
   18eb4:	ldr	r1, [pc, #324]	; 19000 <__flatcc_fb_codegen_c@@Base+0x1c04>
   18eb8:	ldr	r0, [pc, #196]	; 18f84 <__flatcc_fb_codegen_c@@Base+0x1b88>
   18ebc:	bl	14148 <__assert_fail@plt>
   18ec0:	add	r3, sp, #48	; 0x30
   18ec4:	ldr	r0, [r4, #204]	; 0xcc
   18ec8:	mov	r2, r3
   18ecc:	stm	sp, {r6, r7}
   18ed0:	ldr	r1, [pc, #372]	; 1904c <__flatcc_fb_codegen_c@@Base+0x1c50>
   18ed4:	mov	r8, #1
   18ed8:	bl	14094 <fprintf@plt>
   18edc:	mov	r9, r8
   18ee0:	b	189c8 <__flatcc_fb_codegen_c@@Base+0x15cc>
   18ee4:	ldr	r3, [pc, #148]	; 18f80 <__flatcc_fb_codegen_c@@Base+0x1b84>
   18ee8:	ldr	r2, [pc, #352]	; 19050 <__flatcc_fb_codegen_c@@Base+0x1c54>
   18eec:	ldr	r1, [pc, #136]	; 18f7c <__flatcc_fb_codegen_c@@Base+0x1b80>
   18ef0:	ldr	r0, [pc, #348]	; 19054 <__flatcc_fb_codegen_c@@Base+0x1c58>
   18ef4:	bl	14148 <__assert_fail@plt>
   18ef8:	ldr	r3, [pc, #128]	; 18f80 <__flatcc_fb_codegen_c@@Base+0x1b84>
   18efc:	ldr	r2, [pc, #340]	; 19058 <__flatcc_fb_codegen_c@@Base+0x1c5c>
   18f00:	ldr	r1, [pc, #116]	; 18f7c <__flatcc_fb_codegen_c@@Base+0x1b80>
   18f04:	ldr	r0, [pc, #336]	; 1905c <__flatcc_fb_codegen_c@@Base+0x1c60>
   18f08:	bl	14148 <__assert_fail@plt>
   18f0c:	ldr	r3, [pc, #108]	; 18f80 <__flatcc_fb_codegen_c@@Base+0x1b84>
   18f10:	mov	r2, #936	; 0x3a8
   18f14:	ldr	r1, [pc, #96]	; 18f7c <__flatcc_fb_codegen_c@@Base+0x1b80>
   18f18:	ldr	r0, [pc, #320]	; 19060 <__flatcc_fb_codegen_c@@Base+0x1c64>
   18f1c:	bl	14148 <__assert_fail@plt>
   18f20:	andeq	lr, r4, ip, asr #2
   18f24:	andeq	r4, r4, r8, lsr #10
   18f28:	andeq	r4, r4, r0, lsr #10
   18f2c:	andeq	sp, r4, r4, asr r2
   18f30:	andeq	r4, r4, r4, asr pc
   18f34:	andeq	r4, r4, r8, ror #19
   18f38:	strdeq	r4, [r4], -r8
   18f3c:	andeq	r4, r4, ip, ror #30
   18f40:	ldrdeq	ip, [r4], -r0
   18f44:	strdeq	r4, [r4], -r4	; <UNPREDICTABLE>
   18f48:	andeq	r4, r4, r4, lsr fp
   18f4c:	andeq	r4, r4, ip, lsl #23
   18f50:	ldrdeq	r4, [r4], -r4	; <UNPREDICTABLE>
   18f54:	andeq	r4, r4, r0, lsr #31
   18f58:	andeq	r4, r4, r0, ror #15
   18f5c:	andeq	r4, r4, ip, lsr #21
   18f60:	andeq	r4, r4, ip, ror #21
   18f64:	andeq	r4, r4, r4, asr #21
   18f68:	andeq	r4, r4, r4, ror #21
   18f6c:	andeq	pc, r6, r8, lsr #1
   18f70:	andeq	r4, r4, r8, ror #9
   18f74:	andeq	r0, r0, r5, lsl #8
   18f78:	ldrdeq	r4, [r4], -ip
   18f7c:	andeq	r4, r4, ip, lsl #3
   18f80:	andeq	r4, r4, ip, lsl r1
   18f84:	andeq	sp, r4, r4, ror r2
   18f88:	andeq	r0, r0, sl, lsr #7
   18f8c:	andeq	r4, r4, r8, ror #16
   18f90:	andeq	r4, r4, r0, lsr #21
   18f94:	andeq	r4, r4, r0, lsl #20
   18f98:	andeq	r4, r4, r8, lsl #17
   18f9c:	andeq	r4, r4, ip, ror #17
   18fa0:	andeq	r4, r4, r0, asr #18
   18fa4:	andeq	r4, r4, r4, lsl #19
   18fa8:	andeq	r4, r4, ip, lsr #24
   18fac:	andeq	r4, r4, r0, ror #24
   18fb0:	andeq	r4, r4, r0, lsr #25
   18fb4:	andeq	r4, r4, r4, lsl #30
   18fb8:	ldrdeq	r4, [r4], -r4	; <UNPREDICTABLE>
   18fbc:	andeq	r4, r4, ip, asr pc
   18fc0:	strdeq	r4, [r4], -r0
   18fc4:	andeq	r4, r4, ip, lsr #26
   18fc8:	andeq	r4, r4, r8, lsr #27
   18fcc:	andeq	r4, r4, r8, ror #27
   18fd0:	andeq	r4, r4, r0, ror #31
   18fd4:	andeq	r4, r4, r0, lsr #28
   18fd8:	andeq	r4, r4, r0, ror #28
   18fdc:	muleq	r4, r8, r3
   18fe0:	andeq	r4, r4, r0, lsr #20
   18fe4:	andeq	r4, r4, r8, lsr #7
   18fe8:	andeq	r4, r4, r0, lsr #7
   18fec:	andeq	r4, r4, r0, asr #7
   18ff0:	muleq	r4, r0, r3
   18ff4:	andeq	r4, r4, r8, asr #7
   18ff8:			; <UNDEFINED> instruction: 0x000443b8
   18ffc:			; <UNDEFINED> instruction: 0x000443b0
   19000:	muleq	r4, r0, r4
   19004:	andeq	r4, r4, ip, ror #1
   19008:	andeq	r4, r4, ip, lsr #20
   1900c:	andeq	r4, r4, ip, asr #29
   19010:	ldrdeq	ip, [r5], -r0
   19014:			; <UNDEFINED> instruction: 0x00044cb8
   19018:	andeq	r4, r4, r4, lsl #7
   1901c:	andeq	r4, r4, ip, ror #6
   19020:	andeq	r4, r4, r8, ror r3
   19024:	andeq	r4, r4, r0, lsr #16
   19028:	andeq	r4, r4, r8, lsl #16
   1902c:	andeq	r4, r4, r0, lsl r8
   19030:	andeq	r4, r4, r8, lsl r8
   19034:	andeq	r4, r4, r0, lsl #16
   19038:	andeq	r4, r4, r8, ror #15
   1903c:	strdeq	r4, [r4], -r0
   19040:	strdeq	r4, [r4], -r8
   19044:	andeq	r4, r4, r4, ror #26
   19048:	andeq	r4, r4, r8, lsr #2
   1904c:	andeq	r4, r4, r0, lsr #29
   19050:	strdeq	r0, [r0], -sl
   19054:	andeq	r4, r4, r4, asr #20
   19058:	andeq	r0, r0, r9, lsr #7
   1905c:	andeq	r4, r4, r8, asr #16
   19060:	andeq	r4, r4, r8, lsr #16
   19064:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19068:	sub	sp, sp, #1040	; 0x410
   1906c:	ldrh	r6, [r1, #8]
   19070:	sub	sp, sp, #12
   19074:	cmp	r6, #0
   19078:	str	r1, [sp, #40]	; 0x28
   1907c:	bne	1a648 <__flatcc_fb_codegen_c@@Base+0x324c>
   19080:	mov	r4, r0
   19084:	mov	r2, #220	; 0xdc
   19088:	mov	r1, r6
   1908c:	add	r0, sp, #168	; 0xa8
   19090:	bl	140ac <memset@plt>
   19094:	mov	r2, #220	; 0xdc
   19098:	mov	r1, r6
   1909c:	add	r0, sp, #388	; 0x184
   190a0:	bl	140ac <memset@plt>
   190a4:	ldr	r1, [r4, #204]	; 0xcc
   190a8:	mov	r0, #10
   190ac:	bl	140f4 <fputc@plt>
   190b0:	ldr	r5, [sp, #40]	; 0x28
   190b4:	add	r2, sp, #168	; 0xa8
   190b8:	mov	r1, r5
   190bc:	ldr	r0, [r5, #12]
   190c0:	bl	170c4 <__flatcc_fb_scoped_symbol_name@@Base>
   190c4:	ldr	r5, [r5, #32]
   190c8:	cmp	r5, #0
   190cc:	beq	19154 <__flatcc_fb_codegen_c@@Base+0x1d58>
   190d0:	ldr	r8, [pc, #3964]	; 1a054 <__flatcc_fb_codegen_c@@Base+0x2c58>
   190d4:	ldr	sl, [pc, #3964]	; 1a058 <__flatcc_fb_codegen_c@@Base+0x2c5c>
   190d8:	ldr	r9, [pc, #3964]	; 1a05c <__flatcc_fb_codegen_c@@Base+0x2c60>
   190dc:	ldr	r7, [pc, #3964]	; 1a060 <__flatcc_fb_codegen_c@@Base+0x2c64>
   190e0:	mov	r1, r6
   190e4:	mov	r0, #1
   190e8:	ldr	r2, [r5, #4]
   190ec:	ldr	r3, [r2, #8]
   190f0:	cmp	r3, r1
   190f4:	beq	19114 <__flatcc_fb_codegen_c@@Base+0x1d18>
   190f8:	cmp	r0, #0
   190fc:	mov	r2, r8
   19100:	movne	r1, r9
   19104:	moveq	r1, sl
   19108:	ldr	r0, [r4, #204]	; 0xcc
   1910c:	bl	14094 <fprintf@plt>
   19110:	ldr	r2, [r5, #4]
   19114:	ldr	r3, [r2]
   19118:	mov	r1, r7
   1911c:	ldr	r2, [r2, #4]
   19120:	ldr	r0, [r4, #204]	; 0xcc
   19124:	bl	14094 <fprintf@plt>
   19128:	ldr	r3, [r5, #4]
   1912c:	ldr	r5, [r5]
   19130:	mov	r0, r6
   19134:	cmp	r5, #0
   19138:	ldr	r1, [r3, #8]
   1913c:	bne	190e8 <__flatcc_fb_codegen_c@@Base+0x1cec>
   19140:	ldr	r3, [r4, #204]	; 0xcc
   19144:	mov	r2, #4
   19148:	mov	r1, #1
   1914c:	ldr	r0, [pc, #3856]	; 1a064 <__flatcc_fb_codegen_c@@Base+0x2c68>
   19150:	bl	1401c <fwrite@plt>
   19154:	add	r2, sp, #168	; 0xa8
   19158:	ldr	r1, [pc, #3848]	; 1a068 <__flatcc_fb_codegen_c@@Base+0x2c6c>
   1915c:	ldr	r0, [r4, #204]	; 0xcc
   19160:	bl	14094 <fprintf@plt>
   19164:	add	r3, sp, #168	; 0xa8
   19168:	mov	r2, r3
   1916c:	ldr	r0, [r4, #204]	; 0xcc
   19170:	ldr	r1, [pc, #3828]	; 1a06c <__flatcc_fb_codegen_c@@Base+0x2c70>
   19174:	str	r4, [sp]
   19178:	bl	14094 <fprintf@plt>
   1917c:	add	r3, sp, #168	; 0xa8
   19180:	ldr	r0, [r4, #204]	; 0xcc
   19184:	mov	r2, r3
   19188:	str	r3, [sp, #8]
   1918c:	stm	sp, {r3, r4}
   19190:	ldr	r1, [pc, #3800]	; 1a070 <__flatcc_fb_codegen_c@@Base+0x2c74>
   19194:	bl	14094 <fprintf@plt>
   19198:	add	r3, sp, #168	; 0xa8
   1919c:	mov	r2, r4
   191a0:	ldr	r1, [pc, #3788]	; 1a074 <__flatcc_fb_codegen_c@@Base+0x2c78>
   191a4:	ldr	r0, [r4, #204]	; 0xcc
   191a8:	bl	14094 <fprintf@plt>
   191ac:	ldr	r1, [r4, #204]	; 0xcc
   191b0:	mov	r0, #10
   191b4:	bl	140f4 <fputc@plt>
   191b8:	ldr	r3, [sp, #40]	; 0x28
   191bc:	ldr	r5, [r3, #20]
   191c0:	cmp	r5, #0
   191c4:	beq	192dc <__flatcc_fb_codegen_c@@Base+0x1ee0>
   191c8:	ldr	r8, [pc, #3716]	; 1a054 <__flatcc_fb_codegen_c@@Base+0x2c58>
   191cc:	ldr	sl, [pc, #3716]	; 1a058 <__flatcc_fb_codegen_c@@Base+0x2c5c>
   191d0:	ldr	fp, [pc, #3716]	; 1a05c <__flatcc_fb_codegen_c@@Base+0x2c60>
   191d4:	ldr	r9, [pc, #3716]	; 1a060 <__flatcc_fb_codegen_c@@Base+0x2c64>
   191d8:	mov	r3, #0
   191dc:	str	r3, [sp, #44]	; 0x2c
   191e0:	ldr	r6, [r5, #68]	; 0x44
   191e4:	cmp	r6, #0
   191e8:	beq	19264 <__flatcc_fb_codegen_c@@Base+0x1e68>
   191ec:	mov	r3, #0
   191f0:	mov	r7, r3
   191f4:	mov	r0, #1
   191f8:	ldr	r2, [r6, #4]
   191fc:	ldr	r1, [r2, #8]
   19200:	cmp	r1, r3
   19204:	beq	19224 <__flatcc_fb_codegen_c@@Base+0x1e28>
   19208:	cmp	r0, #0
   1920c:	mov	r2, r8
   19210:	movne	r1, fp
   19214:	moveq	r1, sl
   19218:	ldr	r0, [r4, #204]	; 0xcc
   1921c:	bl	14094 <fprintf@plt>
   19220:	ldr	r2, [r6, #4]
   19224:	ldr	r3, [r2]
   19228:	mov	r1, r9
   1922c:	ldr	r2, [r2, #4]
   19230:	ldr	r0, [r4, #204]	; 0xcc
   19234:	bl	14094 <fprintf@plt>
   19238:	ldr	r3, [r6, #4]
   1923c:	ldr	r6, [r6]
   19240:	mov	r0, r7
   19244:	cmp	r6, #0
   19248:	ldr	r3, [r3, #8]
   1924c:	bne	191f8 <__flatcc_fb_codegen_c@@Base+0x1dfc>
   19250:	ldr	r3, [r4, #204]	; 0xcc
   19254:	mov	r2, #4
   19258:	mov	r1, #1
   1925c:	ldr	r0, [pc, #3584]	; 1a064 <__flatcc_fb_codegen_c@@Base+0x2c68>
   19260:	bl	1401c <fwrite@plt>
   19264:	ldrh	r3, [r5, #72]	; 0x48
   19268:	ldr	r2, [r5, #4]
   1926c:	tst	r3, #4
   19270:	ldm	r2, {r6, r7}
   19274:	bne	192b8 <__flatcc_fb_codegen_c@@Base+0x1ebc>
   19278:	ldrh	r2, [r5, #24]
   1927c:	lsr	r3, r3, #8
   19280:	and	r3, r3, #1
   19284:	sub	r2, r2, #7
   19288:	cmp	r2, #8
   1928c:	ldrls	pc, [pc, r2, lsl #2]
   19290:	b	195a4 <__flatcc_fb_codegen_c@@Base+0x21a8>
   19294:	andeq	r9, r1, r4, ror #10
   19298:	andeq	r9, r1, ip, lsl r5
   1929c:	andeq	r9, r1, r0, ror #9
   192a0:	andeq	r9, r1, ip, asr #7
   192a4:	andeq	r9, r1, r4, lsr #11
   192a8:	andeq	r9, r1, r4, lsr #11
   192ac:	andeq	r9, r1, r4, lsr #11
   192b0:	andeq	r9, r1, ip, lsl #7
   192b4:	andeq	r9, r1, r8, ror #5
   192b8:	ldr	r0, [r4, #204]	; 0xcc
   192bc:	mov	r3, r7
   192c0:	str	r6, [sp]
   192c4:	add	r2, sp, #168	; 0xa8
   192c8:	ldr	r1, [pc, #3496]	; 1a078 <__flatcc_fb_codegen_c@@Base+0x2c7c>
   192cc:	bl	14094 <fprintf@plt>
   192d0:	ldr	r5, [r5]
   192d4:	cmp	r5, #0
   192d8:	bne	191e0 <__flatcc_fb_codegen_c@@Base+0x1de4>
   192dc:	add	sp, sp, #1040	; 0x410
   192e0:	add	sp, sp, #12
   192e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   192e8:	ldr	r1, [r5, #16]
   192ec:	add	r2, sp, #388	; 0x184
   192f0:	str	r3, [sp, #48]	; 0x30
   192f4:	ldr	r0, [r1, #12]
   192f8:	bl	170c4 <__flatcc_fb_scoped_symbol_name@@Base>
   192fc:	ldr	r2, [r5, #16]
   19300:	ldrh	r2, [r2, #8]
   19304:	cmp	r2, #4
   19308:	bhi	1a5d4 <__flatcc_fb_codegen_c@@Base+0x31d8>
   1930c:	mov	r1, #1
   19310:	ldr	r3, [sp, #48]	; 0x30
   19314:	lsl	r1, r1, r2
   19318:	tst	r1, #27
   1931c:	beq	1a5d4 <__flatcc_fb_codegen_c@@Base+0x31d8>
   19320:	str	r3, [sp, #24]
   19324:	add	r3, sp, #388	; 0x184
   19328:	str	r3, [sp, #20]
   1932c:	cmp	r2, #4
   19330:	add	r3, sp, #168	; 0xa8
   19334:	str	r6, [sp, #16]
   19338:	str	r7, [sp, #12]
   1933c:	str	r3, [sp, #8]
   19340:	ldrd	r6, [r5, #96]	; 0x60
   19344:	ldr	r0, [r4, #204]	; 0xcc
   19348:	beq	19ae8 <__flatcc_fb_codegen_c@@Base+0x26ec>
   1934c:	mov	r2, r4
   19350:	strd	r6, [sp]
   19354:	ldr	r1, [pc, #3360]	; 1a07c <__flatcc_fb_codegen_c@@Base+0x2c80>
   19358:	bl	14094 <fprintf@plt>
   1935c:	ldrh	r3, [r5, #72]	; 0x48
   19360:	and	r3, r3, #128	; 0x80
   19364:	cmp	r3, #0
   19368:	beq	192d0 <__flatcc_fb_codegen_c@@Base+0x1ed4>
   1936c:	ldr	r3, [r4, #204]	; 0xcc
   19370:	mov	r2, #84	; 0x54
   19374:	mov	r1, #1
   19378:	ldr	r0, [pc, #3328]	; 1a080 <__flatcc_fb_codegen_c@@Base+0x2c84>
   1937c:	bl	1401c <fwrite@plt>
   19380:	mov	r3, #1
   19384:	str	r3, [sp, #44]	; 0x2c
   19388:	b	192d0 <__flatcc_fb_codegen_c@@Base+0x1ed4>
   1938c:	ldr	r1, [r5, #16]
   19390:	add	r2, sp, #388	; 0x184
   19394:	str	r3, [sp, #48]	; 0x30
   19398:	ldr	r0, [r1, #12]
   1939c:	bl	170c4 <__flatcc_fb_scoped_symbol_name@@Base>
   193a0:	ldr	r1, [r5, #16]
   193a4:	ldr	r3, [sp, #48]	; 0x30
   193a8:	ldrh	r2, [r1, #8]
   193ac:	cmp	r2, #4
   193b0:	ldrls	pc, [pc, r2, lsl #2]
   193b4:	b	19814 <__flatcc_fb_codegen_c@@Base+0x2418>
   193b8:	andeq	r9, r1, r4, lsl #13
   193bc:	andeq	r9, r1, r4, asr #12
   193c0:	andeq	r9, r1, r4, lsl r8
   193c4:	andeq	r9, r1, ip, lsl r6
   193c8:	ldrdeq	r9, [r1], -r8
   193cc:	str	r3, [sp, #20]
   193d0:	add	r3, sp, #168	; 0xa8
   193d4:	str	r6, [sp, #16]
   193d8:	str	r7, [sp, #12]
   193dc:	str	r3, [sp, #8]
   193e0:	ldrd	r0, [r5, #96]	; 0x60
   193e4:	ldr	r3, [r4, #204]	; 0xcc
   193e8:	mov	r2, r4
   193ec:	strd	r0, [sp]
   193f0:	mov	r0, r3
   193f4:	ldr	r1, [pc, #3208]	; 1a084 <__flatcc_fb_codegen_c@@Base+0x2c88>
   193f8:	bl	14094 <fprintf@plt>
   193fc:	ldr	r3, [r4, #212]	; 0xd4
   19400:	ldr	r3, [r3, #32]
   19404:	cmp	r3, #0
   19408:	bne	19434 <__flatcc_fb_codegen_c@@Base+0x2038>
   1940c:	ldrh	r3, [r5, #72]	; 0x48
   19410:	tst	r3, #128	; 0x80
   19414:	beq	192d0 <__flatcc_fb_codegen_c@@Base+0x1ed4>
   19418:	ldr	r0, [r4, #204]	; 0xcc
   1941c:	add	r3, sp, #168	; 0xa8
   19420:	str	r6, [sp, #4]
   19424:	str	r7, [sp]
   19428:	mov	r2, r4
   1942c:	ldr	r1, [pc, #3156]	; 1a088 <__flatcc_fb_codegen_c@@Base+0x2c8c>
   19430:	bl	14094 <fprintf@plt>
   19434:	ldrh	r3, [r5, #72]	; 0x48
   19438:	tst	r3, #128	; 0x80
   1943c:	beq	192d0 <__flatcc_fb_codegen_c@@Base+0x1ed4>
   19440:	ldr	r3, [sp, #44]	; 0x2c
   19444:	cmp	r3, #0
   19448:	bne	197b4 <__flatcc_fb_codegen_c@@Base+0x23b8>
   1944c:	ldr	r0, [r4, #204]	; 0xcc
   19450:	add	r3, sp, #168	; 0xa8
   19454:	str	r6, [sp, #4]
   19458:	str	r7, [sp]
   1945c:	mov	r2, r4
   19460:	ldr	r1, [pc, #3108]	; 1a08c <__flatcc_fb_codegen_c@@Base+0x2c90>
   19464:	bl	14094 <fprintf@plt>
   19468:	ldr	r3, [r4, #212]	; 0xd4
   1946c:	ldr	r3, [r3, #136]	; 0x88
   19470:	cmp	r3, #0
   19474:	beq	19494 <__flatcc_fb_codegen_c@@Base+0x2098>
   19478:	ldr	r0, [r4, #204]	; 0xcc
   1947c:	add	r3, sp, #168	; 0xa8
   19480:	str	r6, [sp, #4]
   19484:	str	r7, [sp]
   19488:	mov	r2, r4
   1948c:	ldr	r1, [pc, #3068]	; 1a090 <__flatcc_fb_codegen_c@@Base+0x2c94>
   19490:	bl	14094 <fprintf@plt>
   19494:	ldr	r0, [r4, #204]	; 0xcc
   19498:	add	r3, sp, #168	; 0xa8
   1949c:	mov	r2, r4
   194a0:	ldr	r1, [pc, #3052]	; 1a094 <__flatcc_fb_codegen_c@@Base+0x2c98>
   194a4:	str	r6, [sp, #4]
   194a8:	str	r7, [sp]
   194ac:	bl	14094 <fprintf@plt>
   194b0:	ldr	r0, [r4, #204]	; 0xcc
   194b4:	add	r3, sp, #168	; 0xa8
   194b8:	str	r6, [sp, #4]
   194bc:	str	r7, [sp]
   194c0:	mov	r2, r4
   194c4:	ldr	r1, [pc, #3020]	; 1a098 <__flatcc_fb_codegen_c@@Base+0x2c9c>
   194c8:	bl	14094 <fprintf@plt>
   194cc:	ldr	r3, [r4, #212]	; 0xd4
   194d0:	ldr	r3, [r3, #136]	; 0x88
   194d4:	cmp	r3, #0
   194d8:	beq	19380 <__flatcc_fb_codegen_c@@Base+0x1f84>
   194dc:	b	19f18 <__flatcc_fb_codegen_c@@Base+0x2b1c>
   194e0:	str	r3, [sp, #24]
   194e4:	add	r3, sp, #168	; 0xa8
   194e8:	str	r3, [sp, #8]
   194ec:	str	r4, [sp, #20]
   194f0:	str	r6, [sp, #16]
   194f4:	str	r7, [sp, #12]
   194f8:	ldrd	r6, [r5, #96]	; 0x60
   194fc:	ldr	r0, [r4, #204]	; 0xcc
   19500:	mov	r2, r4
   19504:	strd	r6, [sp]
   19508:	ldr	r1, [pc, #2956]	; 1a09c <__flatcc_fb_codegen_c@@Base+0x2ca0>
   1950c:	bl	14094 <fprintf@plt>
   19510:	ldrh	r3, [r5, #72]	; 0x48
   19514:	and	r3, r3, #128	; 0x80
   19518:	b	19364 <__flatcc_fb_codegen_c@@Base+0x1f68>
   1951c:	ldr	r2, [r5, #16]
   19520:	cmp	r2, #5
   19524:	beq	19848 <__flatcc_fb_codegen_c@@Base+0x244c>
   19528:	sub	r3, r2, #1
   1952c:	cmp	r3, #10
   19530:	ldrls	pc, [pc, r3, lsl #2]
   19534:	b	19f88 <__flatcc_fb_codegen_c@@Base+0x2b8c>
   19538:	strdeq	r9, [r1], -r4
   1953c:	ldrdeq	r9, [r1], -r8
   19540:	muleq	r1, ip, ip
   19544:	andeq	r9, r1, r4, lsl #25
   19548:	andeq	r9, r1, r8, lsl #31
   1954c:	andeq	r9, r1, r4, asr ip
   19550:	andeq	r9, r1, ip, ror #24
   19554:	andeq	r9, r1, ip, lsl #24
   19558:	andeq	r9, r1, r0, lsr ip
   1955c:			; <UNDEFINED> instruction: 0x00019cb4
   19560:	ldrdeq	r9, [r1], -r0
   19564:	ldr	r2, [r5, #16]
   19568:	sub	r2, r2, #1
   1956c:	cmp	r2, #10
   19570:	ldrls	pc, [pc, r2, lsl #2]
   19574:	b	1a4f4 <__flatcc_fb_codegen_c@@Base+0x30f8>
   19578:	andeq	r9, r1, r8, asr #23
   1957c:	andeq	r9, r1, r8, lsl #23
   19580:			; <UNDEFINED> instruction: 0x00019bb0
   19584:	andeq	r9, r1, r4, asr #13
   19588:	andeq	r9, r1, r4, asr #13
   1958c:	andeq	r9, r1, r0, asr #23
   19590:	muleq	r1, r0, fp
   19594:	muleq	r1, r8, fp
   19598:	andeq	r9, r1, r0, lsr #23
   1959c:	andeq	r9, r1, r8, lsr #23
   195a0:			; <UNDEFINED> instruction: 0x00019bb8
   195a4:	ldr	r1, [pc, #3084]	; 1a1b8 <__flatcc_fb_codegen_c@@Base+0x2dbc>
   195a8:	ldr	r2, [pc, #2800]	; 1a0a0 <__flatcc_fb_codegen_c@@Base+0x2ca4>
   195ac:	ldr	r3, [pc, #2800]	; 1a0a4 <__flatcc_fb_codegen_c@@Base+0x2ca8>
   195b0:	ldr	r0, [r1]
   195b4:	str	r2, [sp]
   195b8:	ldr	r1, [pc, #3072]	; 1a1c0 <__flatcc_fb_codegen_c@@Base+0x2dc4>
   195bc:	ldr	r2, [pc, #3092]	; 1a1d8 <__flatcc_fb_codegen_c@@Base+0x2ddc>
   195c0:	bl	14094 <fprintf@plt>
   195c4:	ldr	r3, [pc, #3068]	; 1a1c8 <__flatcc_fb_codegen_c@@Base+0x2dcc>
   195c8:	ldr	r2, [pc, #2772]	; 1a0a4 <__flatcc_fb_codegen_c@@Base+0x2ca8>
   195cc:	ldr	r1, [pc, #3076]	; 1a1d8 <__flatcc_fb_codegen_c@@Base+0x2ddc>
   195d0:	ldr	r0, [pc, #3052]	; 1a1c4 <__flatcc_fb_codegen_c@@Base+0x2dc8>
   195d4:	bl	14148 <__assert_fail@plt>
   195d8:	str	r3, [sp, #24]
   195dc:	add	r3, sp, #388	; 0x184
   195e0:	str	r3, [sp, #20]
   195e4:	add	r3, sp, #168	; 0xa8
   195e8:	str	r3, [sp, #8]
   195ec:	str	r6, [sp, #16]
   195f0:	str	r7, [sp, #12]
   195f4:	ldrd	r6, [r5, #96]	; 0x60
   195f8:	ldr	r0, [r4, #204]	; 0xcc
   195fc:	mov	r3, r4
   19600:	strd	r6, [sp]
   19604:	mov	r2, r4
   19608:	ldr	r1, [pc, #2712]	; 1a0a8 <__flatcc_fb_codegen_c@@Base+0x2cac>
   1960c:	bl	14094 <fprintf@plt>
   19610:	ldrh	r3, [r5, #72]	; 0x48
   19614:	and	r3, r3, #128	; 0x80
   19618:	b	19364 <__flatcc_fb_codegen_c@@Base+0x1f68>
   1961c:	ldrh	r2, [r5, #56]	; 0x38
   19620:	ldr	r3, [r1, #40]	; 0x28
   19624:	sub	r2, r2, #3
   19628:	cmp	r2, #3
   1962c:	ldrls	pc, [pc, r2, lsl #2]
   19630:	b	19b18 <__flatcc_fb_codegen_c@@Base+0x271c>
   19634:	muleq	r1, r8, sp
   19638:	andeq	r9, r1, r4, ror #26
   1963c:	andeq	r9, r1, r0, lsr sp
   19640:	strdeq	r9, [r1], -ip
   19644:	str	r3, [sp, #24]
   19648:	add	r3, sp, #388	; 0x184
   1964c:	str	r3, [sp, #20]
   19650:	add	r3, sp, #168	; 0xa8
   19654:	str	r3, [sp, #8]
   19658:	str	r6, [sp, #16]
   1965c:	str	r7, [sp, #12]
   19660:	ldrd	r6, [r5, #96]	; 0x60
   19664:	ldr	r0, [r4, #204]	; 0xcc
   19668:	mov	r2, r4
   1966c:	strd	r6, [sp]
   19670:	ldr	r1, [pc, #2612]	; 1a0ac <__flatcc_fb_codegen_c@@Base+0x2cb0>
   19674:	bl	14094 <fprintf@plt>
   19678:	ldrh	r3, [r5, #72]	; 0x48
   1967c:	and	r3, r3, #128	; 0x80
   19680:	b	19364 <__flatcc_fb_codegen_c@@Base+0x1f68>
   19684:	str	r3, [sp, #24]
   19688:	add	r3, sp, #388	; 0x184
   1968c:	str	r3, [sp, #20]
   19690:	add	r3, sp, #168	; 0xa8
   19694:	str	r3, [sp, #8]
   19698:	str	r6, [sp, #16]
   1969c:	str	r7, [sp, #12]
   196a0:	ldrd	r6, [r5, #96]	; 0x60
   196a4:	ldr	r0, [r4, #204]	; 0xcc
   196a8:	mov	r2, r4
   196ac:	strd	r6, [sp]
   196b0:	ldr	r1, [pc, #2552]	; 1a0b0 <__flatcc_fb_codegen_c@@Base+0x2cb4>
   196b4:	bl	14094 <fprintf@plt>
   196b8:	ldrh	r3, [r5, #72]	; 0x48
   196bc:	and	r3, r3, #128	; 0x80
   196c0:	b	19364 <__flatcc_fb_codegen_c@@Base+0x1f68>
   196c4:	ldr	r2, [pc, #2536]	; 1a0b4 <__flatcc_fb_codegen_c@@Base+0x2cb8>
   196c8:	str	r3, [sp, #28]
   196cc:	add	r3, sp, #168	; 0xa8
   196d0:	str	r2, [sp, #24]
   196d4:	str	r4, [sp, #20]
   196d8:	str	r6, [sp, #16]
   196dc:	str	r7, [sp, #12]
   196e0:	str	r3, [sp, #8]
   196e4:	ldrd	r6, [r5, #96]	; 0x60
   196e8:	ldr	r0, [r4, #204]	; 0xcc
   196ec:	mov	r2, r4
   196f0:	strd	r6, [sp]
   196f4:	ldr	r1, [pc, #2492]	; 1a0b8 <__flatcc_fb_codegen_c@@Base+0x2cbc>
   196f8:	bl	14094 <fprintf@plt>
   196fc:	ldr	r7, [r5, #104]	; 0x68
   19700:	cmp	r7, #0
   19704:	beq	19b08 <__flatcc_fb_codegen_c@@Base+0x270c>
   19708:	mov	r2, #220	; 0xdc
   1970c:	mov	r1, #0
   19710:	add	r0, sp, #608	; 0x260
   19714:	bl	140ac <memset@plt>
   19718:	add	r0, sp, #828	; 0x33c
   1971c:	mov	r2, #220	; 0xdc
   19720:	mov	r1, #0
   19724:	bl	140ac <memset@plt>
   19728:	ldrh	r3, [r7, #8]
   1972c:	cmp	r3, #0
   19730:	beq	19b4c <__flatcc_fb_codegen_c@@Base+0x2750>
   19734:	cmp	r3, #1
   19738:	bne	19b54 <__flatcc_fb_codegen_c@@Base+0x2758>
   1973c:	ldr	r6, [pc, #2424]	; 1a0bc <__flatcc_fb_codegen_c@@Base+0x2cc0>
   19740:	add	r2, sp, #608	; 0x260
   19744:	mov	r1, r7
   19748:	ldr	r0, [r7, #12]
   1974c:	bl	170c4 <__flatcc_fb_scoped_symbol_name@@Base>
   19750:	ldr	r3, [sp, #40]	; 0x28
   19754:	ldrh	r3, [r3, #8]
   19758:	cmp	r3, #0
   1975c:	bne	1a664 <__flatcc_fb_codegen_c@@Base+0x3268>
   19760:	ldr	r3, [sp, #40]	; 0x28
   19764:	add	r2, sp, #828	; 0x33c
   19768:	mov	r1, r3
   1976c:	ldr	r0, [r3, #12]
   19770:	bl	170c4 <__flatcc_fb_scoped_symbol_name@@Base>
   19774:	ldr	r3, [r5, #4]
   19778:	add	r2, sp, #608	; 0x260
   1977c:	str	r6, [sp, #12]
   19780:	str	r2, [sp, #8]
   19784:	ldr	r2, [r3]
   19788:	ldr	r0, [r4, #204]	; 0xcc
   1978c:	str	r2, [sp, #4]
   19790:	ldr	r2, [r3, #4]
   19794:	ldr	r1, [pc, #2340]	; 1a0c0 <__flatcc_fb_codegen_c@@Base+0x2cc4>
   19798:	add	r3, sp, #828	; 0x33c
   1979c:	str	r2, [sp]
   197a0:	mov	r2, r4
   197a4:	bl	14094 <fprintf@plt>
   197a8:	ldrh	r3, [r5, #72]	; 0x48
   197ac:	and	r3, r3, #128	; 0x80
   197b0:	b	19364 <__flatcc_fb_codegen_c@@Base+0x1f68>
   197b4:	ldr	r3, [r4, #204]	; 0xcc
   197b8:	mov	r2, #66	; 0x42
   197bc:	mov	r1, #1
   197c0:	ldr	r0, [pc, #2524]	; 1a1a4 <__flatcc_fb_codegen_c@@Base+0x2da8>
   197c4:	bl	1401c <fwrite@plt>
   197c8:	ldr	r0, [r4, #204]	; 0xcc
   197cc:	add	r3, sp, #168	; 0xa8
   197d0:	str	r6, [sp, #4]
   197d4:	str	r7, [sp]
   197d8:	mov	r2, r4
   197dc:	ldr	r1, [pc, #2216]	; 1a08c <__flatcc_fb_codegen_c@@Base+0x2c90>
   197e0:	bl	14094 <fprintf@plt>
   197e4:	ldr	r3, [r4, #212]	; 0xd4
   197e8:	ldr	r3, [r3, #136]	; 0x88
   197ec:	cmp	r3, #0
   197f0:	beq	19380 <__flatcc_fb_codegen_c@@Base+0x1f84>
   197f4:	ldr	r0, [r4, #204]	; 0xcc
   197f8:	add	r3, sp, #168	; 0xa8
   197fc:	str	r6, [sp, #4]
   19800:	str	r7, [sp]
   19804:	mov	r2, r4
   19808:	ldr	r1, [pc, #2176]	; 1a090 <__flatcc_fb_codegen_c@@Base+0x2c94>
   1980c:	bl	14094 <fprintf@plt>
   19810:	b	19380 <__flatcc_fb_codegen_c@@Base+0x1f84>
   19814:	ldr	r1, [pc, #2460]	; 1a1b8 <__flatcc_fb_codegen_c@@Base+0x2dbc>
   19818:	ldr	r2, [pc, #2212]	; 1a0c4 <__flatcc_fb_codegen_c@@Base+0x2cc8>
   1981c:	mov	r3, #1568	; 0x620
   19820:	ldr	r0, [r1]
   19824:	str	r2, [sp]
   19828:	ldr	r1, [pc, #2448]	; 1a1c0 <__flatcc_fb_codegen_c@@Base+0x2dc4>
   1982c:	ldr	r2, [pc, #2468]	; 1a1d8 <__flatcc_fb_codegen_c@@Base+0x2ddc>
   19830:	bl	14094 <fprintf@plt>
   19834:	ldr	r3, [pc, #2444]	; 1a1c8 <__flatcc_fb_codegen_c@@Base+0x2dcc>
   19838:	mov	r2, #1568	; 0x620
   1983c:	ldr	r1, [pc, #2452]	; 1a1d8 <__flatcc_fb_codegen_c@@Base+0x2ddc>
   19840:	ldr	r0, [pc, #2428]	; 1a1c4 <__flatcc_fb_codegen_c@@Base+0x2dc8>
   19844:	bl	14148 <__assert_fail@plt>
   19848:	ldr	r3, [pc, #2168]	; 1a0c8 <__flatcc_fb_codegen_c@@Base+0x2ccc>
   1984c:	str	r4, [sp, #52]	; 0x34
   19850:	str	r3, [sp, #48]	; 0x30
   19854:	ldr	r3, [pc, #2160]	; 1a0cc <__flatcc_fb_codegen_c@@Base+0x2cd0>
   19858:	str	r3, [sp, #56]	; 0x38
   1985c:	ldrh	r3, [r5, #56]	; 0x38
   19860:	sub	r3, r3, #3
   19864:	cmp	r3, #3
   19868:	ldrls	pc, [pc, r3, lsl #2]
   1986c:	b	19b18 <__flatcc_fb_codegen_c@@Base+0x271c>
   19870:	andeq	r9, r1, r8, asr #17
   19874:			; <UNDEFINED> instruction: 0x00019ab4
   19878:	andeq	r9, r1, r0, lsl #21
   1987c:	andeq	r9, r1, r0, lsl #17
   19880:	sub	r3, r2, #1
   19884:	cmp	r3, #8
   19888:	ldrls	pc, [pc, r3, lsl #2]
   1988c:	b	1a368 <__flatcc_fb_codegen_c@@Base+0x2f6c>
   19890:	andeq	sl, r1, r0, lsr #5
   19894:	muleq	r1, r8, r2
   19898:	andeq	sl, r1, ip, asr r2
   1989c:	strdeq	r9, [r1], -r4
   198a0:	strdeq	r9, [r1], -r4
   198a4:	andeq	sl, r1, ip, asr #32
   198a8:	andeq	sl, r1, r4, asr #32
   198ac:	andeq	sl, r1, r8, ror r2
   198b0:	andeq	sl, r1, r4, lsl r2
   198b4:	ldr	r3, [pc, #2212]	; 1a160 <__flatcc_fb_codegen_c@@Base+0x2d64>
   198b8:	str	r3, [sp, #48]	; 0x30
   198bc:	ldr	r3, [pc, #2208]	; 1a164 <__flatcc_fb_codegen_c@@Base+0x2d68>
   198c0:	str	r3, [sp, #56]	; 0x38
   198c4:	str	r8, [sp, #52]	; 0x34
   198c8:	add	r3, sp, #68	; 0x44
   198cc:	str	r3, [sp, #60]	; 0x3c
   198d0:	mov	r0, r3
   198d4:	ldr	r1, [pc, #2036]	; 1a0d0 <__flatcc_fb_codegen_c@@Base+0x2cd4>
   198d8:	ldrd	r2, [r5, #48]	; 0x30
   198dc:	bl	14100 <sprintf@plt>
   198e0:	ldr	r3, [sp, #60]	; 0x3c
   198e4:	str	r4, [sp, #20]
   198e8:	str	r3, [sp, #36]	; 0x24
   198ec:	ldr	r3, [sp, #48]	; 0x30
   198f0:	str	r6, [sp, #16]
   198f4:	str	r3, [sp, #32]
   198f8:	ldr	r3, [sp, #52]	; 0x34
   198fc:	str	r7, [sp, #12]
   19900:	str	r3, [sp, #28]
   19904:	ldr	r3, [sp, #56]	; 0x38
   19908:	mov	r2, r4
   1990c:	str	r3, [sp, #24]
   19910:	add	r3, sp, #168	; 0xa8
   19914:	str	r3, [sp, #8]
   19918:	ldrd	r0, [r5, #96]	; 0x60
   1991c:	ldr	r3, [r4, #204]	; 0xcc
   19920:	strd	r0, [sp]
   19924:	mov	r0, r3
   19928:	ldr	r1, [pc, #1956]	; 1a0d4 <__flatcc_fb_codegen_c@@Base+0x2cd8>
   1992c:	bl	14094 <fprintf@plt>
   19930:	ldr	r3, [r4, #212]	; 0xd4
   19934:	ldr	r3, [r3, #32]
   19938:	cmp	r3, #0
   1993c:	bne	19978 <__flatcc_fb_codegen_c@@Base+0x257c>
   19940:	ldrh	r3, [r5, #72]	; 0x48
   19944:	tst	r3, #128	; 0x80
   19948:	beq	192d0 <__flatcc_fb_codegen_c@@Base+0x1ed4>
   1994c:	ldr	r3, [sp, #48]	; 0x30
   19950:	ldr	r0, [r4, #204]	; 0xcc
   19954:	str	r3, [sp, #12]
   19958:	ldr	r3, [sp, #52]	; 0x34
   1995c:	str	r6, [sp, #4]
   19960:	str	r3, [sp, #8]
   19964:	str	r7, [sp]
   19968:	add	r3, sp, #168	; 0xa8
   1996c:	mov	r2, r4
   19970:	ldr	r1, [pc, #1888]	; 1a0d8 <__flatcc_fb_codegen_c@@Base+0x2cdc>
   19974:	bl	14094 <fprintf@plt>
   19978:	ldrh	r3, [r5, #72]	; 0x48
   1997c:	tst	r3, #128	; 0x80
   19980:	beq	192d0 <__flatcc_fb_codegen_c@@Base+0x1ed4>
   19984:	ldr	r3, [sp, #44]	; 0x2c
   19988:	cmp	r3, #0
   1998c:	ldr	r3, [r4, #204]	; 0xcc
   19990:	bne	1a460 <__flatcc_fb_codegen_c@@Base+0x3064>
   19994:	mov	r2, #61	; 0x3d
   19998:	mov	r1, #1
   1999c:	ldr	r0, [pc, #2052]	; 1a1a8 <__flatcc_fb_codegen_c@@Base+0x2dac>
   199a0:	bl	1401c <fwrite@plt>
   199a4:	ldr	r3, [sp, #48]	; 0x30
   199a8:	ldr	r0, [r4, #204]	; 0xcc
   199ac:	str	r3, [sp, #12]
   199b0:	ldr	r3, [sp, #52]	; 0x34
   199b4:	str	r6, [sp, #4]
   199b8:	str	r3, [sp, #8]
   199bc:	str	r7, [sp]
   199c0:	add	r3, sp, #168	; 0xa8
   199c4:	mov	r2, r4
   199c8:	ldr	r1, [pc, #1984]	; 1a190 <__flatcc_fb_codegen_c@@Base+0x2d94>
   199cc:	bl	14094 <fprintf@plt>
   199d0:	ldr	r3, [r4, #212]	; 0xd4
   199d4:	ldr	r3, [r3, #136]	; 0x88
   199d8:	cmp	r3, #0
   199dc:	beq	19a10 <__flatcc_fb_codegen_c@@Base+0x2614>
   199e0:	ldr	r3, [sp, #48]	; 0x30
   199e4:	ldr	r0, [r4, #204]	; 0xcc
   199e8:	str	r3, [sp, #12]
   199ec:	ldr	r3, [sp, #52]	; 0x34
   199f0:	str	r4, [sp, #16]
   199f4:	str	r3, [sp, #8]
   199f8:	str	r6, [sp, #4]
   199fc:	str	r7, [sp]
   19a00:	add	r3, sp, #168	; 0xa8
   19a04:	mov	r2, r4
   19a08:	ldr	r1, [pc, #1924]	; 1a194 <__flatcc_fb_codegen_c@@Base+0x2d98>
   19a0c:	bl	14094 <fprintf@plt>
   19a10:	ldr	r3, [sp, #48]	; 0x30
   19a14:	ldr	r2, [sp, #52]	; 0x34
   19a18:	add	r1, sp, #168	; 0xa8
   19a1c:	ldr	r0, [r4, #204]	; 0xcc
   19a20:	str	r3, [sp, #12]
   19a24:	str	r2, [sp, #8]
   19a28:	mov	r3, r1
   19a2c:	mov	r2, r4
   19a30:	ldr	r1, [pc, #1700]	; 1a0dc <__flatcc_fb_codegen_c@@Base+0x2ce0>
   19a34:	str	r6, [sp, #4]
   19a38:	str	r7, [sp]
   19a3c:	bl	14094 <fprintf@plt>
   19a40:	ldr	r3, [sp, #48]	; 0x30
   19a44:	ldr	r2, [sp, #52]	; 0x34
   19a48:	ldr	r0, [r4, #204]	; 0xcc
   19a4c:	ldr	r1, [pc, #1676]	; 1a0e0 <__flatcc_fb_codegen_c@@Base+0x2ce4>
   19a50:	str	r3, [sp, #12]
   19a54:	str	r2, [sp, #8]
   19a58:	add	r3, sp, #168	; 0xa8
   19a5c:	str	r6, [sp, #4]
   19a60:	str	r7, [sp]
   19a64:	mov	r2, r4
   19a68:	bl	14094 <fprintf@plt>
   19a6c:	ldr	r3, [r4, #212]	; 0xd4
   19a70:	ldr	r3, [r3, #136]	; 0x88
   19a74:	cmp	r3, #0
   19a78:	beq	19380 <__flatcc_fb_codegen_c@@Base+0x1f84>
   19a7c:	b	19f18 <__flatcc_fb_codegen_c@@Base+0x2b1c>
   19a80:	sub	r3, r2, #1
   19a84:	cmp	r3, #8
   19a88:	ldrls	pc, [pc, r3, lsl #2]
   19a8c:	b	1a368 <__flatcc_fb_codegen_c@@Base+0x2f6c>
   19a90:	andeq	sl, r1, ip, lsr r0
   19a94:	andeq	sl, r1, r0, lsr #6
   19a98:	andeq	sl, r1, r8, lsl r3
   19a9c:	andeq	r9, r1, r0, asr #30
   19aa0:	andeq	r9, r1, r0, asr #30
   19aa4:	andeq	sl, r1, r4, asr r2
   19aa8:	andeq	sl, r1, ip, asr #4
   19aac:	andeq	sl, r1, r8, ror #5
   19ab0:	strdeq	sl, [r1], -r0
   19ab4:	sub	r3, r2, #1
   19ab8:	cmp	r3, #8
   19abc:	ldrls	pc, [pc, r3, lsl #2]
   19ac0:	b	1a368 <__flatcc_fb_codegen_c@@Base+0x2f6c>
   19ac4:	andeq	sl, r1, r0, ror #5
   19ac8:	ldrdeq	sl, [r1], -r8
   19acc:	ldrdeq	sl, [r1], -r0
   19ad0:	andeq	r9, r1, r4, ror #30
   19ad4:	andeq	r9, r1, r4, ror #30
   19ad8:	andeq	sl, r1, r8, lsl #6
   19adc:	andeq	sl, r1, r0, lsl #6
   19ae0:	andeq	sl, r1, r0, lsl r3
   19ae4:	strdeq	sl, [r1], -r8
   19ae8:	mov	r3, r4
   19aec:	strd	r6, [sp]
   19af0:	mov	r2, r4
   19af4:	ldr	r1, [pc, #1512]	; 1a0e4 <__flatcc_fb_codegen_c@@Base+0x2ce8>
   19af8:	bl	14094 <fprintf@plt>
   19afc:	ldrh	r3, [r5, #72]	; 0x48
   19b00:	and	r3, r3, #128	; 0x80
   19b04:	b	19364 <__flatcc_fb_codegen_c@@Base+0x1f68>
   19b08:	ldrh	r3, [r5, #72]	; 0x48
   19b0c:	tst	r3, #128	; 0x80
   19b10:	bne	1936c <__flatcc_fb_codegen_c@@Base+0x1f70>
   19b14:	b	192d0 <__flatcc_fb_codegen_c@@Base+0x1ed4>
   19b18:	ldr	r1, [pc, #1688]	; 1a1b8 <__flatcc_fb_codegen_c@@Base+0x2dbc>
   19b1c:	ldr	r2, [pc, #1652]	; 1a198 <__flatcc_fb_codegen_c@@Base+0x2d9c>
   19b20:	mov	r3, #260	; 0x104
   19b24:	ldr	r0, [r1]
   19b28:	str	r2, [sp]
   19b2c:	ldr	r1, [pc, #1676]	; 1a1c0 <__flatcc_fb_codegen_c@@Base+0x2dc4>
   19b30:	ldr	r2, [pc, #1640]	; 1a1a0 <__flatcc_fb_codegen_c@@Base+0x2da4>
   19b34:	bl	14094 <fprintf@plt>
   19b38:	ldr	r3, [pc, #1448]	; 1a0e8 <__flatcc_fb_codegen_c@@Base+0x2cec>
   19b3c:	mov	r2, #260	; 0x104
   19b40:	ldr	r1, [pc, #1624]	; 1a1a0 <__flatcc_fb_codegen_c@@Base+0x2da4>
   19b44:	ldr	r0, [pc, #1656]	; 1a1c4 <__flatcc_fb_codegen_c@@Base+0x2dc8>
   19b48:	bl	14148 <__assert_fail@plt>
   19b4c:	ldr	r6, [pc, #1432]	; 1a0ec <__flatcc_fb_codegen_c@@Base+0x2cf0>
   19b50:	b	19740 <__flatcc_fb_codegen_c@@Base+0x2344>
   19b54:	ldr	r1, [pc, #1628]	; 1a1b8 <__flatcc_fb_codegen_c@@Base+0x2dbc>
   19b58:	ldr	r2, [pc, #1424]	; 1a0f0 <__flatcc_fb_codegen_c@@Base+0x2cf4>
   19b5c:	ldr	r3, [pc, #1424]	; 1a0f4 <__flatcc_fb_codegen_c@@Base+0x2cf8>
   19b60:	ldr	r0, [r1]
   19b64:	str	r2, [sp]
   19b68:	ldr	r1, [pc, #1616]	; 1a1c0 <__flatcc_fb_codegen_c@@Base+0x2dc4>
   19b6c:	ldr	r2, [pc, #1636]	; 1a1d8 <__flatcc_fb_codegen_c@@Base+0x2ddc>
   19b70:	bl	14094 <fprintf@plt>
   19b74:	ldr	r3, [pc, #1636]	; 1a1e0 <__flatcc_fb_codegen_c@@Base+0x2de4>
   19b78:	ldr	r2, [pc, #1396]	; 1a0f4 <__flatcc_fb_codegen_c@@Base+0x2cf8>
   19b7c:	ldr	r1, [pc, #1620]	; 1a1d8 <__flatcc_fb_codegen_c@@Base+0x2ddc>
   19b80:	ldr	r0, [pc, #1596]	; 1a1c4 <__flatcc_fb_codegen_c@@Base+0x2dc8>
   19b84:	bl	14148 <__assert_fail@plt>
   19b88:	ldr	r2, [pc, #1384]	; 1a0f8 <__flatcc_fb_codegen_c@@Base+0x2cfc>
   19b8c:	b	196c8 <__flatcc_fb_codegen_c@@Base+0x22cc>
   19b90:	ldr	r2, [pc, #1380]	; 1a0fc <__flatcc_fb_codegen_c@@Base+0x2d00>
   19b94:	b	196c8 <__flatcc_fb_codegen_c@@Base+0x22cc>
   19b98:	ldr	r2, [pc, #1376]	; 1a100 <__flatcc_fb_codegen_c@@Base+0x2d04>
   19b9c:	b	196c8 <__flatcc_fb_codegen_c@@Base+0x22cc>
   19ba0:	ldr	r2, [pc, #1372]	; 1a104 <__flatcc_fb_codegen_c@@Base+0x2d08>
   19ba4:	b	196c8 <__flatcc_fb_codegen_c@@Base+0x22cc>
   19ba8:	ldr	r2, [pc, #1368]	; 1a108 <__flatcc_fb_codegen_c@@Base+0x2d0c>
   19bac:	b	196c8 <__flatcc_fb_codegen_c@@Base+0x22cc>
   19bb0:	ldr	r2, [pc, #1364]	; 1a10c <__flatcc_fb_codegen_c@@Base+0x2d10>
   19bb4:	b	196c8 <__flatcc_fb_codegen_c@@Base+0x22cc>
   19bb8:	ldr	r2, [pc, #1360]	; 1a110 <__flatcc_fb_codegen_c@@Base+0x2d14>
   19bbc:	b	196c8 <__flatcc_fb_codegen_c@@Base+0x22cc>
   19bc0:	ldr	r2, [pc, #1356]	; 1a114 <__flatcc_fb_codegen_c@@Base+0x2d18>
   19bc4:	b	196c8 <__flatcc_fb_codegen_c@@Base+0x22cc>
   19bc8:	ldr	r2, [pc, #1352]	; 1a118 <__flatcc_fb_codegen_c@@Base+0x2d1c>
   19bcc:	b	196c8 <__flatcc_fb_codegen_c@@Base+0x22cc>
   19bd0:	ldrh	r2, [r5, #56]	; 0x38
   19bd4:	sub	r2, r2, #3
   19bd8:	cmp	r2, #3
   19bdc:	ldrls	pc, [pc, r2, lsl #2]
   19be0:	b	19b18 <__flatcc_fb_codegen_c@@Base+0x271c>
   19be4:			; <UNDEFINED> instruction: 0x00019fbc
   19be8:	andeq	sl, r1, r4, lsl r0
   19bec:	andeq	sl, r1, r8, lsr #32
   19bf0:	andeq	sl, r1, r8, ror #6
   19bf4:	ldr	r3, [pc, #1312]	; 1a11c <__flatcc_fb_codegen_c@@Base+0x2d20>
   19bf8:	str	r8, [sp, #52]	; 0x34
   19bfc:	str	r3, [sp, #48]	; 0x30
   19c00:	ldr	r3, [pc, #1304]	; 1a120 <__flatcc_fb_codegen_c@@Base+0x2d24>
   19c04:	str	r3, [sp, #56]	; 0x38
   19c08:	b	1985c <__flatcc_fb_codegen_c@@Base+0x2460>
   19c0c:	ldrh	r2, [r5, #56]	; 0x38
   19c10:	sub	r2, r2, #3
   19c14:	cmp	r2, #3
   19c18:	ldrls	pc, [pc, r2, lsl #2]
   19c1c:	b	19b18 <__flatcc_fb_codegen_c@@Base+0x271c>
   19c20:	andeq	sl, r1, r4, asr r3
   19c24:	andeq	sl, r1, ip, lsr r3
   19c28:	andeq	sl, r1, r0, lsl #5
   19c2c:	andeq	sl, r1, r4, ror #4
   19c30:	ldrh	r2, [r5, #56]	; 0x38
   19c34:	sub	r2, r2, #3
   19c38:	cmp	r2, #3
   19c3c:	ldrls	pc, [pc, r2, lsl #2]
   19c40:	b	19b18 <__flatcc_fb_codegen_c@@Base+0x271c>
   19c44:			; <UNDEFINED> instruction: 0x000198b4
   19c48:	andeq	sl, r1, r4, lsr r2
   19c4c:	andeq	sl, r1, ip, lsl r2
   19c50:	andeq	sl, r1, r0, lsl #4
   19c54:	ldr	r3, [pc, #1224]	; 1a124 <__flatcc_fb_codegen_c@@Base+0x2d28>
   19c58:	str	r8, [sp, #52]	; 0x34
   19c5c:	str	r3, [sp, #48]	; 0x30
   19c60:	ldr	r3, [pc, #1216]	; 1a128 <__flatcc_fb_codegen_c@@Base+0x2d2c>
   19c64:	str	r3, [sp, #56]	; 0x38
   19c68:	b	1985c <__flatcc_fb_codegen_c@@Base+0x2460>
   19c6c:	ldr	r3, [pc, #1208]	; 1a12c <__flatcc_fb_codegen_c@@Base+0x2d30>
   19c70:	str	r8, [sp, #52]	; 0x34
   19c74:	str	r3, [sp, #48]	; 0x30
   19c78:	ldr	r3, [pc, #1200]	; 1a130 <__flatcc_fb_codegen_c@@Base+0x2d34>
   19c7c:	str	r3, [sp, #56]	; 0x38
   19c80:	b	1985c <__flatcc_fb_codegen_c@@Base+0x2460>
   19c84:	ldr	r3, [pc, #1192]	; 1a134 <__flatcc_fb_codegen_c@@Base+0x2d38>
   19c88:	str	r8, [sp, #52]	; 0x34
   19c8c:	str	r3, [sp, #48]	; 0x30
   19c90:	ldr	r3, [pc, #1184]	; 1a138 <__flatcc_fb_codegen_c@@Base+0x2d3c>
   19c94:	str	r3, [sp, #56]	; 0x38
   19c98:	b	1985c <__flatcc_fb_codegen_c@@Base+0x2460>
   19c9c:	ldr	r3, [pc, #1176]	; 1a13c <__flatcc_fb_codegen_c@@Base+0x2d40>
   19ca0:	str	r8, [sp, #52]	; 0x34
   19ca4:	str	r3, [sp, #48]	; 0x30
   19ca8:	ldr	r3, [pc, #1168]	; 1a140 <__flatcc_fb_codegen_c@@Base+0x2d44>
   19cac:	str	r3, [sp, #56]	; 0x38
   19cb0:	b	1985c <__flatcc_fb_codegen_c@@Base+0x2460>
   19cb4:	ldrh	r2, [r5, #56]	; 0x38
   19cb8:	sub	r2, r2, #3
   19cbc:	cmp	r2, #3
   19cc0:	ldrls	pc, [pc, r2, lsl #2]
   19cc4:	b	19b18 <__flatcc_fb_codegen_c@@Base+0x271c>
   19cc8:			; <UNDEFINED> instruction: 0x0001a2bc
   19ccc:	andeq	sl, r1, r8, lsr #5
   19cd0:	andeq	sl, r1, r8, lsr #6
   19cd4:	andeq	sl, r1, r8, ror #6
   19cd8:	ldrh	r2, [r5, #56]	; 0x38
   19cdc:	sub	r2, r2, #3
   19ce0:	cmp	r2, #3
   19ce4:	ldrls	pc, [pc, r2, lsl #2]
   19ce8:	b	19b18 <__flatcc_fb_codegen_c@@Base+0x271c>
   19cec:	andeq	sl, r1, r4, ror #7
   19cf0:	andeq	sl, r1, ip, asr #7
   19cf4:			; <UNDEFINED> instruction: 0x0001a3b4
   19cf8:	muleq	r1, ip, r3
   19cfc:	sub	r3, r3, #1
   19d00:	cmp	r3, #8
   19d04:	ldrls	pc, [pc, r3, lsl #2]
   19d08:	b	1a368 <__flatcc_fb_codegen_c@@Base+0x2f6c>
   19d0c:	ldrdeq	sl, [r1], -r0
   19d10:	andeq	sl, r1, r8, asr #13
   19d14:	andeq	sl, r1, r0, asr #13
   19d18:	andeq	sl, r1, r0, asr #8
   19d1c:	andeq	sl, r1, r0, asr #8
   19d20:	andeq	sl, r1, ip, asr r6
   19d24:			; <UNDEFINED> instruction: 0x0001a6b0
   19d28:	andeq	sl, r1, r8, lsr #13
   19d2c:			; <UNDEFINED> instruction: 0x0001a6b8
   19d30:	sub	r3, r3, #1
   19d34:	cmp	r3, #8
   19d38:	ldrls	pc, [pc, r3, lsl #2]
   19d3c:	b	1a368 <__flatcc_fb_codegen_c@@Base+0x2f6c>
   19d40:	muleq	r1, r0, r6
   19d44:	andeq	sl, r1, r8, lsl #13
   19d48:	andeq	sl, r1, r0, lsl #13
   19d4c:	strdeq	sl, [r1], -r8
   19d50:	strdeq	sl, [r1], -r8
   19d54:	andeq	sl, r1, r8, lsl #12
   19d58:	andeq	sl, r1, r0, lsr #13
   19d5c:	muleq	r1, r8, r6
   19d60:	andeq	sl, r1, r8, ror r6
   19d64:	sub	r3, r3, #1
   19d68:	cmp	r3, #8
   19d6c:	ldrls	pc, [pc, r3, lsl #2]
   19d70:	b	1a368 <__flatcc_fb_codegen_c@@Base+0x2f6c>
   19d74:	andeq	sl, r1, r0, asr #12
   19d78:	andeq	sl, r1, r8, lsr r6
   19d7c:	andeq	sl, r1, r0, lsr r6
   19d80:	andeq	sl, r1, ip, lsl r4
   19d84:	andeq	sl, r1, ip, lsl r4
   19d88:	andeq	sl, r1, r0, lsl r6
   19d8c:	andeq	sl, r1, r0, lsr #12
   19d90:	andeq	sl, r1, r8, lsl r6
   19d94:	andeq	sl, r1, r8, lsr #12
   19d98:	cmp	r3, #11
   19d9c:	beq	1a5ac <__flatcc_fb_codegen_c@@Base+0x31b0>
   19da0:	add	r3, sp, #68	; 0x44
   19da4:	str	r3, [sp, #60]	; 0x3c
   19da8:	mov	r0, r3
   19dac:	ldr	r1, [pc, #796]	; 1a0d0 <__flatcc_fb_codegen_c@@Base+0x2cd4>
   19db0:	ldrd	r2, [r5, #48]	; 0x30
   19db4:	bl	14100 <sprintf@plt>
   19db8:	ldr	r3, [sp, #60]	; 0x3c
   19dbc:	str	r6, [sp, #16]
   19dc0:	str	r3, [sp, #28]
   19dc4:	add	r3, sp, #388	; 0x184
   19dc8:	str	r3, [sp, #24]
   19dcc:	str	r3, [sp, #20]
   19dd0:	add	r3, sp, #168	; 0xa8
   19dd4:	str	r7, [sp, #12]
   19dd8:	str	r3, [sp, #8]
   19ddc:	ldrd	r0, [r5, #96]	; 0x60
   19de0:	ldr	r3, [r4, #204]	; 0xcc
   19de4:	mov	r2, r4
   19de8:	strd	r0, [sp]
   19dec:	mov	r0, r3
   19df0:	ldr	r1, [pc, #844]	; 1a144 <__flatcc_fb_codegen_c@@Base+0x2d48>
   19df4:	bl	14094 <fprintf@plt>
   19df8:	ldr	r3, [r4, #212]	; 0xd4
   19dfc:	ldr	r3, [r3, #32]
   19e00:	cmp	r3, #0
   19e04:	bne	19e38 <__flatcc_fb_codegen_c@@Base+0x2a3c>
   19e08:	ldrh	r3, [r5, #72]	; 0x48
   19e0c:	tst	r3, #128	; 0x80
   19e10:	beq	192d0 <__flatcc_fb_codegen_c@@Base+0x1ed4>
   19e14:	add	r3, sp, #388	; 0x184
   19e18:	ldr	r0, [r4, #204]	; 0xcc
   19e1c:	mov	r2, r4
   19e20:	str	r3, [sp, #8]
   19e24:	str	r6, [sp, #4]
   19e28:	str	r7, [sp]
   19e2c:	add	r3, sp, #168	; 0xa8
   19e30:	ldr	r1, [pc, #784]	; 1a148 <__flatcc_fb_codegen_c@@Base+0x2d4c>
   19e34:	bl	14094 <fprintf@plt>
   19e38:	ldrh	r3, [r5, #72]	; 0x48
   19e3c:	tst	r3, #128	; 0x80
   19e40:	beq	192d0 <__flatcc_fb_codegen_c@@Base+0x1ed4>
   19e44:	ldr	r3, [sp, #44]	; 0x2c
   19e48:	cmp	r3, #0
   19e4c:	ldr	r3, [r4, #204]	; 0xcc
   19e50:	bne	1a528 <__flatcc_fb_codegen_c@@Base+0x312c>
   19e54:	mov	r2, #61	; 0x3d
   19e58:	mov	r1, #1
   19e5c:	ldr	r0, [pc, #836]	; 1a1a8 <__flatcc_fb_codegen_c@@Base+0x2dac>
   19e60:	bl	1401c <fwrite@plt>
   19e64:	add	r3, sp, #388	; 0x184
   19e68:	ldr	r0, [r4, #204]	; 0xcc
   19e6c:	mov	r2, r4
   19e70:	str	r3, [sp, #8]
   19e74:	str	r6, [sp, #4]
   19e78:	add	r3, sp, #168	; 0xa8
   19e7c:	str	r7, [sp]
   19e80:	ldr	r1, [pc, #804]	; 1a1ac <__flatcc_fb_codegen_c@@Base+0x2db0>
   19e84:	bl	14094 <fprintf@plt>
   19e88:	ldr	r3, [r4, #212]	; 0xd4
   19e8c:	ldr	r3, [r3, #136]	; 0x88
   19e90:	cmp	r3, #0
   19e94:	beq	19ec0 <__flatcc_fb_codegen_c@@Base+0x2ac4>
   19e98:	add	r3, sp, #388	; 0x184
   19e9c:	ldr	r0, [r4, #204]	; 0xcc
   19ea0:	mov	r2, r4
   19ea4:	str	r3, [sp, #8]
   19ea8:	str	r4, [sp, #12]
   19eac:	str	r6, [sp, #4]
   19eb0:	str	r7, [sp]
   19eb4:	add	r3, sp, #168	; 0xa8
   19eb8:	ldr	r1, [pc, #752]	; 1a1b0 <__flatcc_fb_codegen_c@@Base+0x2db4>
   19ebc:	bl	14094 <fprintf@plt>
   19ec0:	add	r3, sp, #388	; 0x184
   19ec4:	ldr	r0, [r4, #204]	; 0xcc
   19ec8:	mov	r2, r4
   19ecc:	str	r3, [sp, #8]
   19ed0:	ldr	r1, [pc, #628]	; 1a14c <__flatcc_fb_codegen_c@@Base+0x2d50>
   19ed4:	add	r3, sp, #168	; 0xa8
   19ed8:	str	r6, [sp, #4]
   19edc:	str	r7, [sp]
   19ee0:	bl	14094 <fprintf@plt>
   19ee4:	add	r3, sp, #388	; 0x184
   19ee8:	ldr	r0, [r4, #204]	; 0xcc
   19eec:	mov	r2, r4
   19ef0:	str	r3, [sp, #8]
   19ef4:	str	r6, [sp, #4]
   19ef8:	add	r3, sp, #168	; 0xa8
   19efc:	str	r7, [sp]
   19f00:	ldr	r1, [pc, #584]	; 1a150 <__flatcc_fb_codegen_c@@Base+0x2d54>
   19f04:	bl	14094 <fprintf@plt>
   19f08:	ldr	r3, [r4, #212]	; 0xd4
   19f0c:	ldr	r3, [r3, #136]	; 0x88
   19f10:	cmp	r3, #0
   19f14:	beq	19380 <__flatcc_fb_codegen_c@@Base+0x1f84>
   19f18:	add	r3, sp, #168	; 0xa8
   19f1c:	ldr	r0, [r4, #204]	; 0xcc
   19f20:	mov	r2, r3
   19f24:	str	r6, [sp, #4]
   19f28:	str	r7, [sp]
   19f2c:	ldr	r1, [pc, #544]	; 1a154 <__flatcc_fb_codegen_c@@Base+0x2d58>
   19f30:	bl	14094 <fprintf@plt>
   19f34:	mov	r3, #1
   19f38:	str	r3, [sp, #44]	; 0x2c
   19f3c:	b	192d0 <__flatcc_fb_codegen_c@@Base+0x1ed4>
   19f40:	ldr	r2, [pc, #576]	; 1a188 <__flatcc_fb_codegen_c@@Base+0x2d8c>
   19f44:	ldrd	r0, [r5, #48]	; 0x30
   19f48:	add	r3, sp, #68	; 0x44
   19f4c:	str	r3, [sp, #60]	; 0x3c
   19f50:	strd	r0, [sp]
   19f54:	mov	r0, r3
   19f58:	ldr	r1, [pc, #544]	; 1a180 <__flatcc_fb_codegen_c@@Base+0x2d84>
   19f5c:	bl	14100 <sprintf@plt>
   19f60:	b	198e0 <__flatcc_fb_codegen_c@@Base+0x24e4>
   19f64:	ldr	r2, [pc, #540]	; 1a188 <__flatcc_fb_codegen_c@@Base+0x2d8c>
   19f68:	ldrd	r0, [r5, #48]	; 0x30
   19f6c:	add	r3, sp, #68	; 0x44
   19f70:	str	r3, [sp, #60]	; 0x3c
   19f74:	strd	r0, [sp]
   19f78:	mov	r0, r3
   19f7c:	ldr	r1, [pc, #512]	; 1a184 <__flatcc_fb_codegen_c@@Base+0x2d88>
   19f80:	bl	14100 <sprintf@plt>
   19f84:	b	198e0 <__flatcc_fb_codegen_c@@Base+0x24e4>
   19f88:	ldr	r1, [pc, #552]	; 1a1b8 <__flatcc_fb_codegen_c@@Base+0x2dbc>
   19f8c:	ldr	r2, [pc, #516]	; 1a198 <__flatcc_fb_codegen_c@@Base+0x2d9c>
   19f90:	mov	r3, #141	; 0x8d
   19f94:	ldr	r0, [r1]
   19f98:	str	r2, [sp]
   19f9c:	ldr	r1, [pc, #540]	; 1a1c0 <__flatcc_fb_codegen_c@@Base+0x2dc4>
   19fa0:	ldr	r2, [pc, #504]	; 1a1a0 <__flatcc_fb_codegen_c@@Base+0x2da4>
   19fa4:	bl	14094 <fprintf@plt>
   19fa8:	ldr	r3, [pc, #424]	; 1a158 <__flatcc_fb_codegen_c@@Base+0x2d5c>
   19fac:	mov	r2, #141	; 0x8d
   19fb0:	ldr	r1, [pc, #488]	; 1a1a0 <__flatcc_fb_codegen_c@@Base+0x2da4>
   19fb4:	ldr	r0, [pc, #520]	; 1a1c4 <__flatcc_fb_codegen_c@@Base+0x2dc8>
   19fb8:	bl	14148 <__assert_fail@plt>
   19fbc:	vldr	d7, [r5, #48]	; 0x30
   19fc0:	add	r3, sp, #68	; 0x44
   19fc4:	str	r3, [sp, #60]	; 0x3c
   19fc8:	mov	r0, r3
   19fcc:	vcvt.f32.f64	s14, d7
   19fd0:	ldr	r3, [pc, #388]	; 1a15c <__flatcc_fb_codegen_c@@Base+0x2d60>
   19fd4:	ldr	r1, [pc, #472]	; 1a1b4 <__flatcc_fb_codegen_c@@Base+0x2db8>
   19fd8:	str	r3, [sp, #48]	; 0x30
   19fdc:	str	r3, [sp, #56]	; 0x38
   19fe0:	str	r8, [sp, #52]	; 0x34
   19fe4:	vcvt.f64.f32	d7, s14
   19fe8:	vmov	r2, r3, d7
   19fec:	bl	14100 <sprintf@plt>
   19ff0:	b	198e0 <__flatcc_fb_codegen_c@@Base+0x24e4>
   19ff4:	ldr	r2, [pc, #396]	; 1a188 <__flatcc_fb_codegen_c@@Base+0x2d8c>
   19ff8:	add	r3, sp, #68	; 0x44
   19ffc:	str	r3, [sp, #60]	; 0x3c
   1a000:	mov	r0, r3
   1a004:	ldr	r1, [pc, #384]	; 1a18c <__flatcc_fb_codegen_c@@Base+0x2d90>
   1a008:	ldrb	r3, [r5, #48]	; 0x30
   1a00c:	bl	14100 <sprintf@plt>
   1a010:	b	198e0 <__flatcc_fb_codegen_c@@Base+0x24e4>
   1a014:	ldr	r2, [pc, #320]	; 1a15c <__flatcc_fb_codegen_c@@Base+0x2d60>
   1a018:	str	r8, [sp, #52]	; 0x34
   1a01c:	str	r2, [sp, #48]	; 0x30
   1a020:	str	r2, [sp, #56]	; 0x38
   1a024:	b	19ab8 <__flatcc_fb_codegen_c@@Base+0x26bc>
   1a028:	ldr	r2, [pc, #300]	; 1a15c <__flatcc_fb_codegen_c@@Base+0x2d60>
   1a02c:	str	r8, [sp, #52]	; 0x34
   1a030:	str	r2, [sp, #48]	; 0x30
   1a034:	str	r2, [sp, #56]	; 0x38
   1a038:	b	19a84 <__flatcc_fb_codegen_c@@Base+0x2688>
   1a03c:	ldr	r2, [pc, #440]	; 1a1fc <__flatcc_fb_codegen_c@@Base+0x2e00>
   1a040:	b	19f44 <__flatcc_fb_codegen_c@@Base+0x2b48>
   1a044:	ldr	r2, [pc, #412]	; 1a1e8 <__flatcc_fb_codegen_c@@Base+0x2dec>
   1a048:	b	19ff8 <__flatcc_fb_codegen_c@@Base+0x2bfc>
   1a04c:	ldr	r2, [pc, #412]	; 1a1f0 <__flatcc_fb_codegen_c@@Base+0x2df4>
   1a050:	b	19ff8 <__flatcc_fb_codegen_c@@Base+0x2bfc>
   1a054:	andeq	lr, r4, ip, asr #2
   1a058:	andeq	r4, r4, r8, lsr #10
   1a05c:	andeq	r4, r4, r0, lsr #10
   1a060:	andeq	sp, r4, r4, asr r2
   1a064:	andeq	r4, r4, r4, asr pc
   1a068:	ldrdeq	r5, [r4], -r4
   1a06c:	andeq	r4, r4, r0, ror #24
   1a070:	andeq	r5, r4, r0, lsl #2
   1a074:	andeq	r5, r4, r8, ror #2
   1a078:	andeq	r5, r4, r0, lsl #3
   1a07c:	andeq	r5, r4, ip, lsr r6
   1a080:	andeq	r4, r4, r4, lsl #30
   1a084:	andeq	r5, r4, r0, asr r3
   1a088:	andeq	r5, r4, r0, lsl #7
   1a08c:	andeq	r5, r4, ip, lsr #7
   1a090:	andeq	r5, r4, ip, lsr #14
   1a094:	ldrdeq	r5, [r4], -r8
   1a098:	andeq	r5, r4, ip, lsl #8
   1a09c:	andeq	r5, r4, r0, asr #8
   1a0a0:	andeq	r5, r4, r4, ror r6
   1a0a4:	andeq	r0, r0, pc, lsr r6
   1a0a8:	andeq	r5, r4, r0, lsr r5
   1a0ac:	andeq	r5, r4, r0, lsl #9
   1a0b0:			; <UNDEFINED> instruction: 0x000454bc
   1a0b4:	andeq	r5, r4, r8, ror r0
   1a0b8:			; <UNDEFINED> instruction: 0x000456b8
   1a0bc:	andeq	r5, r4, r4, lsr #32
   1a0c0:	andeq	r5, r4, r0, lsr #6
   1a0c4:	andeq	r5, r4, r4, ror #10
   1a0c8:	muleq	r4, r8, r3
   1a0cc:	ldrdeq	ip, [r5], -r0
   1a0d0:			; <UNDEFINED> instruction: 0x000445b4
   1a0d4:			; <UNDEFINED> instruction: 0x000451b0
   1a0d8:	andeq	r5, r4, ip, ror #3
   1a0dc:	andeq	r5, r4, r4, asr r2
   1a0e0:	muleq	r4, r0, r2
   1a0e4:	andeq	r5, r4, r0, lsl #12
   1a0e8:	andeq	r4, r4, ip, lsl #2
   1a0ec:	andeq	r5, r4, ip, lsl r0
   1a0f0:	andeq	r5, r4, ip, asr #5
   1a0f4:	andeq	r0, r0, fp, lsr r5
   1a0f8:	muleq	r4, r4, r0
   1a0fc:	andeq	r5, r4, r0, rrx
   1a100:	andeq	r5, r4, r4, asr r0
   1a104:	andeq	r5, r4, r8, asr #32
   1a108:	andeq	r5, r4, ip, lsr #32
   1a10c:	andeq	r5, r4, r4, lsl #1
   1a110:	andeq	r5, r4, ip, lsr r0
   1a114:	andeq	r5, r4, ip, rrx
   1a118:	andeq	r5, r4, r4, lsr #1
   1a11c:	andeq	r4, r4, ip, ror #6
   1a120:	andeq	r4, r4, r8, ror #15
   1a124:	andeq	r4, r4, r0, lsr #7
   1a128:	andeq	r4, r4, r8, lsl #16
   1a12c:	andeq	r4, r4, r8, lsr #7
   1a130:	andeq	r4, r4, r0, lsl r8
   1a134:	muleq	r4, r0, r3
   1a138:	andeq	r4, r4, r0, lsl #16
   1a13c:	andeq	r4, r4, r4, lsl #7
   1a140:	strdeq	r4, [r4], -r8
   1a144:	strdeq	r5, [r4], -r4
   1a148:	andeq	r4, r4, ip, lsr #26
   1a14c:	andeq	r4, r4, r0, lsr #28
   1a150:	andeq	r4, r4, r0, ror #28
   1a154:	andeq	r4, r4, r0, lsr #29
   1a158:	andeq	r4, r4, ip, ror #1
   1a15c:	andeq	r4, r4, r0, asr #7
   1a160:			; <UNDEFINED> instruction: 0x000443b8
   1a164:	andeq	r4, r4, r0, lsr #16
   1a168:	andeq	r4, r4, r8, asr #7
   1a16c:			; <UNDEFINED> instruction: 0x000443b0
   1a170:	andeq	r4, r4, r8, lsl r8
   1a174:	andeq	r4, r4, r0, lsl #2
   1a178:	andeq	r4, r4, r8, ror r3
   1a17c:	strdeq	r4, [r4], -r0
   1a180:	muleq	r4, r0, r5
   1a184:	muleq	r4, ip, r5
   1a188:	andeq	r4, r4, r8, lsl #8
   1a18c:	andeq	r4, r4, r8, lsr #11
   1a190:	andeq	r5, r4, r0, lsr #4
   1a194:	andeq	r5, r4, ip, ror #13
   1a198:	andeq	r4, r4, r8, ror #9
   1a19c:	andeq	r4, r4, r8, asr #2
   1a1a0:	muleq	r4, r0, r4
   1a1a4:	andeq	r4, r4, r4, ror #26
   1a1a8:	andeq	r4, r4, r8, lsr #27
   1a1ac:	andeq	r4, r4, r8, ror #27
   1a1b0:	andeq	r5, r4, r8, asr r7
   1a1b4:			; <UNDEFINED> instruction: 0x000445b0
   1a1b8:	andeq	pc, r6, r8, lsr #1
   1a1bc:			; <UNDEFINED> instruction: 0x000455b0
   1a1c0:	ldrdeq	r4, [r4], -ip
   1a1c4:	andeq	sp, r4, r4, ror r2
   1a1c8:	andeq	r4, r4, ip, lsr r1
   1a1cc:	andeq	r0, r0, r2, asr r5
   1a1d0:	strheq	r5, [r4], -r4
   1a1d4:	andeq	r0, r0, pc, lsr r5
   1a1d8:	andeq	r4, r4, ip, lsl #3
   1a1dc:	andeq	r5, r4, r0, lsl #6
   1a1e0:	andeq	r4, r4, r0, ror #2
   1a1e4:	andeq	r4, r4, r0, lsr #8
   1a1e8:	andeq	r4, r4, r8, lsl r4
   1a1ec:	andeq	r4, r4, r8, lsr #8
   1a1f0:	andeq	r4, r4, r0, lsl r4
   1a1f4:	strdeq	r4, [r4], -ip
   1a1f8:	strdeq	r4, [r4], -r0
   1a1fc:	andeq	r4, r4, r4, ror #7
   1a200:	ldr	r3, [pc, #-168]	; 1a160 <__flatcc_fb_codegen_c@@Base+0x2d64>
   1a204:	str	r8, [sp, #52]	; 0x34
   1a208:	str	r3, [sp, #48]	; 0x30
   1a20c:	ldr	r3, [pc, #-176]	; 1a164 <__flatcc_fb_codegen_c@@Base+0x2d68>
   1a210:	str	r3, [sp, #56]	; 0x38
   1a214:	ldr	r2, [pc, #-48]	; 1a1ec <__flatcc_fb_codegen_c@@Base+0x2df0>
   1a218:	b	19ff8 <__flatcc_fb_codegen_c@@Base+0x2bfc>
   1a21c:	ldr	r2, [pc, #-196]	; 1a160 <__flatcc_fb_codegen_c@@Base+0x2d64>
   1a220:	str	r8, [sp, #52]	; 0x34
   1a224:	str	r2, [sp, #48]	; 0x30
   1a228:	ldr	r2, [pc, #-204]	; 1a164 <__flatcc_fb_codegen_c@@Base+0x2d68>
   1a22c:	str	r2, [sp, #56]	; 0x38
   1a230:	b	19a84 <__flatcc_fb_codegen_c@@Base+0x2688>
   1a234:	ldr	r2, [pc, #-220]	; 1a160 <__flatcc_fb_codegen_c@@Base+0x2d64>
   1a238:	str	r8, [sp, #52]	; 0x34
   1a23c:	str	r2, [sp, #48]	; 0x30
   1a240:	ldr	r2, [pc, #-228]	; 1a164 <__flatcc_fb_codegen_c@@Base+0x2d68>
   1a244:	str	r2, [sp, #56]	; 0x38
   1a248:	b	19ab8 <__flatcc_fb_codegen_c@@Base+0x26bc>
   1a24c:	ldr	r2, [pc, #-108]	; 1a1e8 <__flatcc_fb_codegen_c@@Base+0x2dec>
   1a250:	b	19f44 <__flatcc_fb_codegen_c@@Base+0x2b48>
   1a254:	ldr	r2, [pc, #-108]	; 1a1f0 <__flatcc_fb_codegen_c@@Base+0x2df4>
   1a258:	b	19f44 <__flatcc_fb_codegen_c@@Base+0x2b48>
   1a25c:	ldr	r2, [pc, #-112]	; 1a1f4 <__flatcc_fb_codegen_c@@Base+0x2df8>
   1a260:	b	19ff8 <__flatcc_fb_codegen_c@@Base+0x2bfc>
   1a264:	ldr	r3, [pc, #-256]	; 1a16c <__flatcc_fb_codegen_c@@Base+0x2d70>
   1a268:	str	r8, [sp, #52]	; 0x34
   1a26c:	str	r3, [sp, #48]	; 0x30
   1a270:	ldr	r3, [pc, #-264]	; 1a170 <__flatcc_fb_codegen_c@@Base+0x2d74>
   1a274:	str	r3, [sp, #56]	; 0x38
   1a278:	ldr	r2, [pc, #-156]	; 1a1e4 <__flatcc_fb_codegen_c@@Base+0x2de8>
   1a27c:	b	19ff8 <__flatcc_fb_codegen_c@@Base+0x2bfc>
   1a280:	ldr	r2, [pc, #-284]	; 1a16c <__flatcc_fb_codegen_c@@Base+0x2d70>
   1a284:	str	r8, [sp, #52]	; 0x34
   1a288:	str	r2, [sp, #48]	; 0x30
   1a28c:	ldr	r2, [pc, #-292]	; 1a170 <__flatcc_fb_codegen_c@@Base+0x2d74>
   1a290:	str	r2, [sp, #56]	; 0x38
   1a294:	b	19a84 <__flatcc_fb_codegen_c@@Base+0x2688>
   1a298:	ldr	r2, [pc, #-168]	; 1a1f8 <__flatcc_fb_codegen_c@@Base+0x2dfc>
   1a29c:	b	19ff8 <__flatcc_fb_codegen_c@@Base+0x2bfc>
   1a2a0:	ldr	r2, [pc, #-172]	; 1a1fc <__flatcc_fb_codegen_c@@Base+0x2e00>
   1a2a4:	b	19ff8 <__flatcc_fb_codegen_c@@Base+0x2bfc>
   1a2a8:	ldr	r2, [pc, #-328]	; 1a168 <__flatcc_fb_codegen_c@@Base+0x2d6c>
   1a2ac:	str	r8, [sp, #52]	; 0x34
   1a2b0:	str	r2, [sp, #48]	; 0x30
   1a2b4:	str	r2, [sp, #56]	; 0x38
   1a2b8:	b	19ab8 <__flatcc_fb_codegen_c@@Base+0x26bc>
   1a2bc:	ldr	r3, [pc, #-348]	; 1a168 <__flatcc_fb_codegen_c@@Base+0x2d6c>
   1a2c0:	str	r8, [sp, #52]	; 0x34
   1a2c4:	str	r3, [sp, #48]	; 0x30
   1a2c8:	str	r3, [sp, #56]	; 0x38
   1a2cc:	b	198c8 <__flatcc_fb_codegen_c@@Base+0x24cc>
   1a2d0:	ldr	r2, [pc, #-228]	; 1a1f4 <__flatcc_fb_codegen_c@@Base+0x2df8>
   1a2d4:	b	19f68 <__flatcc_fb_codegen_c@@Base+0x2b6c>
   1a2d8:	ldr	r2, [pc, #-232]	; 1a1f8 <__flatcc_fb_codegen_c@@Base+0x2dfc>
   1a2dc:	b	19f68 <__flatcc_fb_codegen_c@@Base+0x2b6c>
   1a2e0:	ldr	r2, [pc, #-236]	; 1a1fc <__flatcc_fb_codegen_c@@Base+0x2e00>
   1a2e4:	b	19f68 <__flatcc_fb_codegen_c@@Base+0x2b6c>
   1a2e8:	ldr	r2, [pc, #-268]	; 1a1e4 <__flatcc_fb_codegen_c@@Base+0x2de8>
   1a2ec:	b	19f44 <__flatcc_fb_codegen_c@@Base+0x2b48>
   1a2f0:	ldr	r2, [pc, #-268]	; 1a1ec <__flatcc_fb_codegen_c@@Base+0x2df0>
   1a2f4:	b	19f44 <__flatcc_fb_codegen_c@@Base+0x2b48>
   1a2f8:	ldr	r2, [pc, #-276]	; 1a1ec <__flatcc_fb_codegen_c@@Base+0x2df0>
   1a2fc:	b	19f68 <__flatcc_fb_codegen_c@@Base+0x2b6c>
   1a300:	ldr	r2, [pc, #-288]	; 1a1e8 <__flatcc_fb_codegen_c@@Base+0x2dec>
   1a304:	b	19f68 <__flatcc_fb_codegen_c@@Base+0x2b6c>
   1a308:	ldr	r2, [pc, #-288]	; 1a1f0 <__flatcc_fb_codegen_c@@Base+0x2df4>
   1a30c:	b	19f68 <__flatcc_fb_codegen_c@@Base+0x2b6c>
   1a310:	ldr	r2, [pc, #-308]	; 1a1e4 <__flatcc_fb_codegen_c@@Base+0x2de8>
   1a314:	b	19f68 <__flatcc_fb_codegen_c@@Base+0x2b6c>
   1a318:	ldr	r2, [pc, #-300]	; 1a1f4 <__flatcc_fb_codegen_c@@Base+0x2df8>
   1a31c:	b	19f44 <__flatcc_fb_codegen_c@@Base+0x2b48>
   1a320:	ldr	r2, [pc, #-304]	; 1a1f8 <__flatcc_fb_codegen_c@@Base+0x2dfc>
   1a324:	b	19f44 <__flatcc_fb_codegen_c@@Base+0x2b48>
   1a328:	ldr	r2, [pc, #-456]	; 1a168 <__flatcc_fb_codegen_c@@Base+0x2d6c>
   1a32c:	str	r8, [sp, #52]	; 0x34
   1a330:	str	r2, [sp, #48]	; 0x30
   1a334:	str	r2, [sp, #56]	; 0x38
   1a338:	b	19a84 <__flatcc_fb_codegen_c@@Base+0x2688>
   1a33c:	ldr	r2, [pc, #-472]	; 1a16c <__flatcc_fb_codegen_c@@Base+0x2d70>
   1a340:	str	r8, [sp, #52]	; 0x34
   1a344:	str	r2, [sp, #48]	; 0x30
   1a348:	ldr	r2, [pc, #-480]	; 1a170 <__flatcc_fb_codegen_c@@Base+0x2d74>
   1a34c:	str	r2, [sp, #56]	; 0x38
   1a350:	b	19ab8 <__flatcc_fb_codegen_c@@Base+0x26bc>
   1a354:	ldr	r3, [pc, #-496]	; 1a16c <__flatcc_fb_codegen_c@@Base+0x2d70>
   1a358:	str	r3, [sp, #48]	; 0x30
   1a35c:	ldr	r3, [pc, #-500]	; 1a170 <__flatcc_fb_codegen_c@@Base+0x2d74>
   1a360:	str	r3, [sp, #56]	; 0x38
   1a364:	b	198c4 <__flatcc_fb_codegen_c@@Base+0x24c8>
   1a368:	ldr	r1, [pc, #-440]	; 1a1b8 <__flatcc_fb_codegen_c@@Base+0x2dbc>
   1a36c:	ldr	r2, [pc, #-476]	; 1a198 <__flatcc_fb_codegen_c@@Base+0x2d9c>
   1a370:	mov	r3, #226	; 0xe2
   1a374:	ldr	r0, [r1]
   1a378:	str	r2, [sp]
   1a37c:	ldr	r1, [pc, #-452]	; 1a1c0 <__flatcc_fb_codegen_c@@Base+0x2dc4>
   1a380:	ldr	r2, [pc, #-488]	; 1a1a0 <__flatcc_fb_codegen_c@@Base+0x2da4>
   1a384:	bl	14094 <fprintf@plt>
   1a388:	ldr	r3, [pc, #-540]	; 1a174 <__flatcc_fb_codegen_c@@Base+0x2d78>
   1a38c:	mov	r2, #226	; 0xe2
   1a390:	ldr	r1, [pc, #-504]	; 1a1a0 <__flatcc_fb_codegen_c@@Base+0x2da4>
   1a394:	ldr	r0, [pc, #-472]	; 1a1c4 <__flatcc_fb_codegen_c@@Base+0x2dc8>
   1a398:	bl	14148 <__assert_fail@plt>
   1a39c:	ldr	r2, [pc, #-556]	; 1a178 <__flatcc_fb_codegen_c@@Base+0x2d7c>
   1a3a0:	str	r8, [sp, #52]	; 0x34
   1a3a4:	str	r2, [sp, #48]	; 0x30
   1a3a8:	ldr	r2, [pc, #-564]	; 1a17c <__flatcc_fb_codegen_c@@Base+0x2d80>
   1a3ac:	str	r2, [sp, #56]	; 0x38
   1a3b0:	b	19884 <__flatcc_fb_codegen_c@@Base+0x2488>
   1a3b4:	ldr	r2, [pc, #-580]	; 1a178 <__flatcc_fb_codegen_c@@Base+0x2d7c>
   1a3b8:	str	r8, [sp, #52]	; 0x34
   1a3bc:	str	r2, [sp, #48]	; 0x30
   1a3c0:	ldr	r2, [pc, #-588]	; 1a17c <__flatcc_fb_codegen_c@@Base+0x2d80>
   1a3c4:	str	r2, [sp, #56]	; 0x38
   1a3c8:	b	19a84 <__flatcc_fb_codegen_c@@Base+0x2688>
   1a3cc:	ldr	r2, [pc, #-604]	; 1a178 <__flatcc_fb_codegen_c@@Base+0x2d7c>
   1a3d0:	str	r8, [sp, #52]	; 0x34
   1a3d4:	str	r2, [sp, #48]	; 0x30
   1a3d8:	ldr	r2, [pc, #-612]	; 1a17c <__flatcc_fb_codegen_c@@Base+0x2d80>
   1a3dc:	str	r2, [sp, #56]	; 0x38
   1a3e0:	b	19ab8 <__flatcc_fb_codegen_c@@Base+0x26bc>
   1a3e4:	ldr	r3, [pc, #-628]	; 1a178 <__flatcc_fb_codegen_c@@Base+0x2d7c>
   1a3e8:	str	r3, [sp, #48]	; 0x30
   1a3ec:	ldr	r3, [pc, #-632]	; 1a17c <__flatcc_fb_codegen_c@@Base+0x2d80>
   1a3f0:	str	r3, [sp, #56]	; 0x38
   1a3f4:	b	198c4 <__flatcc_fb_codegen_c@@Base+0x24c8>
   1a3f8:	ldr	r2, [pc, #-632]	; 1a188 <__flatcc_fb_codegen_c@@Base+0x2d8c>
   1a3fc:	ldrd	r0, [r5, #48]	; 0x30
   1a400:	add	r3, sp, #68	; 0x44
   1a404:	str	r3, [sp, #60]	; 0x3c
   1a408:	strd	r0, [sp]
   1a40c:	mov	r0, r3
   1a410:	ldr	r1, [pc, #-664]	; 1a180 <__flatcc_fb_codegen_c@@Base+0x2d84>
   1a414:	bl	14100 <sprintf@plt>
   1a418:	b	19db8 <__flatcc_fb_codegen_c@@Base+0x29bc>
   1a41c:	ldr	r2, [pc, #-668]	; 1a188 <__flatcc_fb_codegen_c@@Base+0x2d8c>
   1a420:	ldrd	r0, [r5, #48]	; 0x30
   1a424:	add	r3, sp, #68	; 0x44
   1a428:	str	r3, [sp, #60]	; 0x3c
   1a42c:	strd	r0, [sp]
   1a430:	mov	r0, r3
   1a434:	ldr	r1, [pc, #-696]	; 1a184 <__flatcc_fb_codegen_c@@Base+0x2d88>
   1a438:	bl	14100 <sprintf@plt>
   1a43c:	b	19db8 <__flatcc_fb_codegen_c@@Base+0x29bc>
   1a440:	ldr	r2, [pc, #-704]	; 1a188 <__flatcc_fb_codegen_c@@Base+0x2d8c>
   1a444:	add	r3, sp, #68	; 0x44
   1a448:	str	r3, [sp, #60]	; 0x3c
   1a44c:	mov	r0, r3
   1a450:	ldr	r1, [pc, #-716]	; 1a18c <__flatcc_fb_codegen_c@@Base+0x2d90>
   1a454:	ldrb	r3, [r5, #48]	; 0x30
   1a458:	bl	14100 <sprintf@plt>
   1a45c:	b	19db8 <__flatcc_fb_codegen_c@@Base+0x29bc>
   1a460:	mov	r2, #66	; 0x42
   1a464:	mov	r1, #1
   1a468:	ldr	r0, [pc, #-716]	; 1a1a4 <__flatcc_fb_codegen_c@@Base+0x2da8>
   1a46c:	bl	1401c <fwrite@plt>
   1a470:	ldr	r3, [r4, #204]	; 0xcc
   1a474:	mov	r2, #61	; 0x3d
   1a478:	mov	r1, #1
   1a47c:	ldr	r0, [pc, #-732]	; 1a1a8 <__flatcc_fb_codegen_c@@Base+0x2dac>
   1a480:	bl	1401c <fwrite@plt>
   1a484:	ldr	r3, [sp, #48]	; 0x30
   1a488:	ldr	r0, [r4, #204]	; 0xcc
   1a48c:	str	r3, [sp, #12]
   1a490:	ldr	r3, [sp, #52]	; 0x34
   1a494:	str	r6, [sp, #4]
   1a498:	str	r3, [sp, #8]
   1a49c:	str	r7, [sp]
   1a4a0:	add	r3, sp, #168	; 0xa8
   1a4a4:	mov	r2, r4
   1a4a8:	ldr	r1, [pc, #-800]	; 1a190 <__flatcc_fb_codegen_c@@Base+0x2d94>
   1a4ac:	bl	14094 <fprintf@plt>
   1a4b0:	ldr	r3, [r4, #212]	; 0xd4
   1a4b4:	ldr	r3, [r3, #136]	; 0x88
   1a4b8:	cmp	r3, #0
   1a4bc:	beq	19380 <__flatcc_fb_codegen_c@@Base+0x1f84>
   1a4c0:	ldr	r3, [sp, #48]	; 0x30
   1a4c4:	ldr	r0, [r4, #204]	; 0xcc
   1a4c8:	str	r3, [sp, #12]
   1a4cc:	ldr	r3, [sp, #52]	; 0x34
   1a4d0:	str	r4, [sp, #16]
   1a4d4:	str	r3, [sp, #8]
   1a4d8:	str	r6, [sp, #4]
   1a4dc:	str	r7, [sp]
   1a4e0:	add	r3, sp, #168	; 0xa8
   1a4e4:	mov	r2, r4
   1a4e8:	ldr	r1, [pc, #-860]	; 1a194 <__flatcc_fb_codegen_c@@Base+0x2d98>
   1a4ec:	bl	14094 <fprintf@plt>
   1a4f0:	b	19380 <__flatcc_fb_codegen_c@@Base+0x1f84>
   1a4f4:	ldr	r1, [pc, #-836]	; 1a1b8 <__flatcc_fb_codegen_c@@Base+0x2dbc>
   1a4f8:	ldr	r2, [pc, #-872]	; 1a198 <__flatcc_fb_codegen_c@@Base+0x2d9c>
   1a4fc:	mov	r3, #186	; 0xba
   1a500:	ldr	r0, [r1]
   1a504:	str	r2, [sp]
   1a508:	ldr	r1, [pc, #-848]	; 1a1c0 <__flatcc_fb_codegen_c@@Base+0x2dc4>
   1a50c:	ldr	r2, [pc, #-884]	; 1a1a0 <__flatcc_fb_codegen_c@@Base+0x2da4>
   1a510:	bl	14094 <fprintf@plt>
   1a514:	ldr	r3, [pc, #-896]	; 1a19c <__flatcc_fb_codegen_c@@Base+0x2da0>
   1a518:	mov	r2, #186	; 0xba
   1a51c:	ldr	r1, [pc, #-900]	; 1a1a0 <__flatcc_fb_codegen_c@@Base+0x2da4>
   1a520:	ldr	r0, [pc, #-868]	; 1a1c4 <__flatcc_fb_codegen_c@@Base+0x2dc8>
   1a524:	bl	14148 <__assert_fail@plt>
   1a528:	mov	r2, #66	; 0x42
   1a52c:	mov	r1, #1
   1a530:	ldr	r0, [pc, #-916]	; 1a1a4 <__flatcc_fb_codegen_c@@Base+0x2da8>
   1a534:	bl	1401c <fwrite@plt>
   1a538:	ldr	r3, [r4, #204]	; 0xcc
   1a53c:	mov	r2, #61	; 0x3d
   1a540:	mov	r1, #1
   1a544:	ldr	r0, [pc, #-932]	; 1a1a8 <__flatcc_fb_codegen_c@@Base+0x2dac>
   1a548:	bl	1401c <fwrite@plt>
   1a54c:	add	r3, sp, #388	; 0x184
   1a550:	ldr	r0, [r4, #204]	; 0xcc
   1a554:	mov	r2, r4
   1a558:	str	r3, [sp, #8]
   1a55c:	str	r6, [sp, #4]
   1a560:	add	r3, sp, #168	; 0xa8
   1a564:	str	r7, [sp]
   1a568:	ldr	r1, [pc, #-964]	; 1a1ac <__flatcc_fb_codegen_c@@Base+0x2db0>
   1a56c:	bl	14094 <fprintf@plt>
   1a570:	ldr	r3, [r4, #212]	; 0xd4
   1a574:	ldr	r3, [r3, #136]	; 0x88
   1a578:	cmp	r3, #0
   1a57c:	beq	19380 <__flatcc_fb_codegen_c@@Base+0x1f84>
   1a580:	add	r3, sp, #388	; 0x184
   1a584:	ldr	r0, [r4, #204]	; 0xcc
   1a588:	mov	r2, r4
   1a58c:	str	r3, [sp, #8]
   1a590:	str	r4, [sp, #12]
   1a594:	str	r6, [sp, #4]
   1a598:	str	r7, [sp]
   1a59c:	add	r3, sp, #168	; 0xa8
   1a5a0:	ldr	r1, [pc, #-1016]	; 1a1b0 <__flatcc_fb_codegen_c@@Base+0x2db4>
   1a5a4:	bl	14094 <fprintf@plt>
   1a5a8:	b	19380 <__flatcc_fb_codegen_c@@Base+0x1f84>
   1a5ac:	vldr	d7, [r5, #48]	; 0x30
   1a5b0:	add	r3, sp, #68	; 0x44
   1a5b4:	str	r3, [sp, #60]	; 0x3c
   1a5b8:	mov	r0, r3
   1a5bc:	vcvt.f32.f64	s14, d7
   1a5c0:	ldr	r1, [pc, #-1044]	; 1a1b4 <__flatcc_fb_codegen_c@@Base+0x2db8>
   1a5c4:	vcvt.f64.f32	d7, s14
   1a5c8:	vmov	r2, r3, d7
   1a5cc:	bl	14100 <sprintf@plt>
   1a5d0:	b	19db8 <__flatcc_fb_codegen_c@@Base+0x29bc>
   1a5d4:	ldr	r1, [pc, #-1060]	; 1a1b8 <__flatcc_fb_codegen_c@@Base+0x2dbc>
   1a5d8:	ldr	r2, [pc, #-1060]	; 1a1bc <__flatcc_fb_codegen_c@@Base+0x2dc0>
   1a5dc:	mov	r3, #1584	; 0x630
   1a5e0:	ldr	r0, [r1]
   1a5e4:	str	r2, [sp]
   1a5e8:	ldr	r1, [pc, #-1072]	; 1a1c0 <__flatcc_fb_codegen_c@@Base+0x2dc4>
   1a5ec:	ldr	r2, [pc, #-1052]	; 1a1d8 <__flatcc_fb_codegen_c@@Base+0x2ddc>
   1a5f0:	bl	14094 <fprintf@plt>
   1a5f4:	ldr	r3, [pc, #-1076]	; 1a1c8 <__flatcc_fb_codegen_c@@Base+0x2dcc>
   1a5f8:	mov	r2, #1584	; 0x630
   1a5fc:	ldr	r1, [pc, #-1068]	; 1a1d8 <__flatcc_fb_codegen_c@@Base+0x2ddc>
   1a600:	ldr	r0, [pc, #-1092]	; 1a1c4 <__flatcc_fb_codegen_c@@Base+0x2dc8>
   1a604:	bl	14148 <__assert_fail@plt>
   1a608:	ldr	r2, [pc, #-1056]	; 1a1f0 <__flatcc_fb_codegen_c@@Base+0x2df4>
   1a60c:	b	1a3fc <__flatcc_fb_codegen_c@@Base+0x3000>
   1a610:	ldr	r2, [pc, #-1064]	; 1a1f0 <__flatcc_fb_codegen_c@@Base+0x2df4>
   1a614:	b	1a420 <__flatcc_fb_codegen_c@@Base+0x3024>
   1a618:	ldr	r2, [pc, #-1084]	; 1a1e4 <__flatcc_fb_codegen_c@@Base+0x2de8>
   1a61c:	b	1a420 <__flatcc_fb_codegen_c@@Base+0x3024>
   1a620:	ldr	r2, [pc, #-1088]	; 1a1e8 <__flatcc_fb_codegen_c@@Base+0x2dec>
   1a624:	b	1a420 <__flatcc_fb_codegen_c@@Base+0x3024>
   1a628:	ldr	r2, [pc, #-1092]	; 1a1ec <__flatcc_fb_codegen_c@@Base+0x2df0>
   1a62c:	b	1a420 <__flatcc_fb_codegen_c@@Base+0x3024>
   1a630:	ldr	r2, [pc, #-1092]	; 1a1f4 <__flatcc_fb_codegen_c@@Base+0x2df8>
   1a634:	b	1a420 <__flatcc_fb_codegen_c@@Base+0x3024>
   1a638:	ldr	r2, [pc, #-1096]	; 1a1f8 <__flatcc_fb_codegen_c@@Base+0x2dfc>
   1a63c:	b	1a420 <__flatcc_fb_codegen_c@@Base+0x3024>
   1a640:	ldr	r2, [pc, #-1100]	; 1a1fc <__flatcc_fb_codegen_c@@Base+0x2e00>
   1a644:	b	1a420 <__flatcc_fb_codegen_c@@Base+0x3024>
   1a648:	ldr	r3, [pc, #-1160]	; 1a1c8 <__flatcc_fb_codegen_c@@Base+0x2dcc>
   1a64c:	ldr	r2, [pc, #-1160]	; 1a1cc <__flatcc_fb_codegen_c@@Base+0x2dd0>
   1a650:	ldr	r1, [pc, #-1152]	; 1a1d8 <__flatcc_fb_codegen_c@@Base+0x2ddc>
   1a654:	ldr	r0, [pc, #-1164]	; 1a1d0 <__flatcc_fb_codegen_c@@Base+0x2dd4>
   1a658:	bl	14148 <__assert_fail@plt>
   1a65c:	ldr	r2, [pc, #-1140]	; 1a1f0 <__flatcc_fb_codegen_c@@Base+0x2df4>
   1a660:	b	1a444 <__flatcc_fb_codegen_c@@Base+0x3048>
   1a664:	ldr	r3, [pc, #-1164]	; 1a1e0 <__flatcc_fb_codegen_c@@Base+0x2de4>
   1a668:	ldr	r2, [pc, #-1180]	; 1a1d4 <__flatcc_fb_codegen_c@@Base+0x2dd8>
   1a66c:	ldr	r1, [pc, #-1180]	; 1a1d8 <__flatcc_fb_codegen_c@@Base+0x2ddc>
   1a670:	ldr	r0, [pc, #-1180]	; 1a1dc <__flatcc_fb_codegen_c@@Base+0x2de0>
   1a674:	bl	14148 <__assert_fail@plt>
   1a678:	ldr	r2, [pc, #-1172]	; 1a1ec <__flatcc_fb_codegen_c@@Base+0x2df0>
   1a67c:	b	1a3fc <__flatcc_fb_codegen_c@@Base+0x3000>
   1a680:	ldr	r2, [pc, #-1172]	; 1a1f4 <__flatcc_fb_codegen_c@@Base+0x2df8>
   1a684:	b	1a3fc <__flatcc_fb_codegen_c@@Base+0x3000>
   1a688:	ldr	r2, [pc, #-1176]	; 1a1f8 <__flatcc_fb_codegen_c@@Base+0x2dfc>
   1a68c:	b	1a3fc <__flatcc_fb_codegen_c@@Base+0x3000>
   1a690:	ldr	r2, [pc, #-1180]	; 1a1fc <__flatcc_fb_codegen_c@@Base+0x2e00>
   1a694:	b	1a3fc <__flatcc_fb_codegen_c@@Base+0x3000>
   1a698:	ldr	r2, [pc, #-1212]	; 1a1e4 <__flatcc_fb_codegen_c@@Base+0x2de8>
   1a69c:	b	1a3fc <__flatcc_fb_codegen_c@@Base+0x3000>
   1a6a0:	ldr	r2, [pc, #-1216]	; 1a1e8 <__flatcc_fb_codegen_c@@Base+0x2dec>
   1a6a4:	b	1a3fc <__flatcc_fb_codegen_c@@Base+0x3000>
   1a6a8:	ldr	r2, [pc, #-1228]	; 1a1e4 <__flatcc_fb_codegen_c@@Base+0x2de8>
   1a6ac:	b	1a444 <__flatcc_fb_codegen_c@@Base+0x3048>
   1a6b0:	ldr	r2, [pc, #-1232]	; 1a1e8 <__flatcc_fb_codegen_c@@Base+0x2dec>
   1a6b4:	b	1a444 <__flatcc_fb_codegen_c@@Base+0x3048>
   1a6b8:	ldr	r2, [pc, #-1236]	; 1a1ec <__flatcc_fb_codegen_c@@Base+0x2df0>
   1a6bc:	b	1a444 <__flatcc_fb_codegen_c@@Base+0x3048>
   1a6c0:	ldr	r2, [pc, #-1236]	; 1a1f4 <__flatcc_fb_codegen_c@@Base+0x2df8>
   1a6c4:	b	1a444 <__flatcc_fb_codegen_c@@Base+0x3048>
   1a6c8:	ldr	r2, [pc, #-1240]	; 1a1f8 <__flatcc_fb_codegen_c@@Base+0x2dfc>
   1a6cc:	b	1a444 <__flatcc_fb_codegen_c@@Base+0x3048>
   1a6d0:	ldr	r2, [pc, #-1244]	; 1a1fc <__flatcc_fb_codegen_c@@Base+0x2e00>
   1a6d4:	b	1a444 <__flatcc_fb_codegen_c@@Base+0x3048>

0001a6d8 <__flatcc_fb_gen_common_c_header@@Base>:
   1a6d8:	push	{r4, r5, lr}
   1a6dc:	mov	r4, r0
   1a6e0:	add	r5, r0, #102	; 0x66
   1a6e4:	sub	sp, sp, #236	; 0xec
   1a6e8:	mov	r3, r5
   1a6ec:	mov	r2, r5
   1a6f0:	ldr	r1, [pc, #2812]	; 1b1f4 <__flatcc_fb_gen_common_c_header@@Base+0xb1c>
   1a6f4:	ldr	r0, [r0, #204]	; 0xcc
   1a6f8:	bl	14094 <fprintf@plt>
   1a6fc:	ldr	r3, [r4, #204]	; 0xcc
   1a700:	mov	r2, #81	; 0x51
   1a704:	mov	r1, #1
   1a708:	ldr	r0, [pc, #2792]	; 1b1f8 <__flatcc_fb_gen_common_c_header@@Base+0xb20>
   1a70c:	bl	1401c <fwrite@plt>
   1a710:	ldr	r3, [r4, #204]	; 0xcc
   1a714:	mov	r2, #52	; 0x34
   1a718:	mov	r1, #1
   1a71c:	ldr	r0, [pc, #2776]	; 1b1fc <__flatcc_fb_gen_common_c_header@@Base+0xb24>
   1a720:	bl	1401c <fwrite@plt>
   1a724:	ldr	r3, [r4, #212]	; 0xd4
   1a728:	ldr	r2, [r3, #136]	; 0x88
   1a72c:	cmp	r2, #0
   1a730:	beq	1b1d8 <__flatcc_fb_gen_common_c_header@@Base+0xb00>
   1a734:	ldr	r2, [r3, #140]	; 0x8c
   1a738:	ldr	r3, [r4, #204]	; 0xcc
   1a73c:	cmp	r2, #0
   1a740:	bne	1b1c0 <__flatcc_fb_gen_common_c_header@@Base+0xae8>
   1a744:	mov	r2, #41	; 0x29
   1a748:	mov	r1, #1
   1a74c:	ldr	r0, [pc, #2732]	; 1b200 <__flatcc_fb_gen_common_c_header@@Base+0xb28>
   1a750:	bl	1401c <fwrite@plt>
   1a754:	ldr	r1, [pc, #2728]	; 1b204 <__flatcc_fb_gen_common_c_header@@Base+0xb2c>
   1a758:	mov	r0, r4
   1a75c:	bl	13fbc <strcmp@plt>
   1a760:	cmp	r0, #0
   1a764:	bne	1b14c <__flatcc_fb_gen_common_c_header@@Base+0xa74>
   1a768:	mov	r3, r4
   1a76c:	mov	r2, r4
   1a770:	ldr	r1, [pc, #2704]	; 1b208 <__flatcc_fb_gen_common_c_header@@Base+0xb30>
   1a774:	ldr	r0, [r4, #204]	; 0xcc
   1a778:	bl	14094 <fprintf@plt>
   1a77c:	ldr	r0, [r4, #204]	; 0xcc
   1a780:	mov	r3, r4
   1a784:	mov	r2, r4
   1a788:	ldr	r1, [pc, #2684]	; 1b20c <__flatcc_fb_gen_common_c_header@@Base+0xb34>
   1a78c:	str	r4, [sp, #16]
   1a790:	str	r4, [sp, #12]
   1a794:	str	r4, [sp, #8]
   1a798:	str	r4, [sp, #4]
   1a79c:	str	r4, [sp]
   1a7a0:	bl	14094 <fprintf@plt>
   1a7a4:	mov	r3, r4
   1a7a8:	mov	r2, r4
   1a7ac:	ldr	r1, [pc, #2652]	; 1b210 <__flatcc_fb_gen_common_c_header@@Base+0xb38>
   1a7b0:	ldr	r0, [r4, #204]	; 0xcc
   1a7b4:	bl	14094 <fprintf@plt>
   1a7b8:	ldr	r0, [r4, #204]	; 0xcc
   1a7bc:	mov	r3, r4
   1a7c0:	str	r4, [sp, #4]
   1a7c4:	str	r4, [sp]
   1a7c8:	mov	r2, r4
   1a7cc:	ldr	r1, [pc, #2624]	; 1b214 <__flatcc_fb_gen_common_c_header@@Base+0xb3c>
   1a7d0:	bl	14094 <fprintf@plt>
   1a7d4:	ldr	r3, [r4, #212]	; 0xd4
   1a7d8:	ldr	r3, [r3, #32]
   1a7dc:	cmp	r3, #0
   1a7e0:	beq	1b114 <__flatcc_fb_gen_common_c_header@@Base+0xa3c>
   1a7e4:	mov	r2, r4
   1a7e8:	ldr	r1, [pc, #2600]	; 1b218 <__flatcc_fb_gen_common_c_header@@Base+0xb40>
   1a7ec:	ldr	r0, [r4, #204]	; 0xcc
   1a7f0:	bl	14094 <fprintf@plt>
   1a7f4:	mov	r3, r4
   1a7f8:	mov	r2, r4
   1a7fc:	ldr	r1, [pc, #2584]	; 1b21c <__flatcc_fb_gen_common_c_header@@Base+0xb44>
   1a800:	ldr	r0, [r4, #204]	; 0xcc
   1a804:	bl	14094 <fprintf@plt>
   1a808:	ldr	r0, [r4, #204]	; 0xcc
   1a80c:	mov	r3, r4
   1a810:	mov	r2, r4
   1a814:	ldr	r1, [pc, #2564]	; 1b220 <__flatcc_fb_gen_common_c_header@@Base+0xb48>
   1a818:	str	r4, [sp, #8]
   1a81c:	str	r4, [sp, #4]
   1a820:	str	r4, [sp]
   1a824:	bl	14094 <fprintf@plt>
   1a828:	ldr	r0, [r4, #204]	; 0xcc
   1a82c:	mov	r3, r4
   1a830:	mov	r2, r4
   1a834:	ldr	r1, [pc, #2536]	; 1b224 <__flatcc_fb_gen_common_c_header@@Base+0xb4c>
   1a838:	str	r4, [sp, #8]
   1a83c:	str	r4, [sp, #4]
   1a840:	str	r4, [sp]
   1a844:	bl	14094 <fprintf@plt>
   1a848:	ldr	r0, [r4, #204]	; 0xcc
   1a84c:	mov	r3, r4
   1a850:	mov	r2, r4
   1a854:	ldr	r1, [pc, #2508]	; 1b228 <__flatcc_fb_gen_common_c_header@@Base+0xb50>
   1a858:	str	r4, [sp]
   1a85c:	bl	14094 <fprintf@plt>
   1a860:	ldr	r0, [r4, #204]	; 0xcc
   1a864:	mov	r3, r4
   1a868:	mov	r2, r4
   1a86c:	ldr	r1, [pc, #2488]	; 1b22c <__flatcc_fb_gen_common_c_header@@Base+0xb54>
   1a870:	str	r4, [sp]
   1a874:	bl	14094 <fprintf@plt>
   1a878:	ldr	r0, [r4, #204]	; 0xcc
   1a87c:	mov	r3, r4
   1a880:	mov	r2, r4
   1a884:	ldr	r1, [pc, #2468]	; 1b230 <__flatcc_fb_gen_common_c_header@@Base+0xb58>
   1a888:	str	r4, [sp]
   1a88c:	bl	14094 <fprintf@plt>
   1a890:	ldr	r0, [r4, #204]	; 0xcc
   1a894:	mov	r3, r4
   1a898:	str	r4, [sp, #8]
   1a89c:	str	r4, [sp, #4]
   1a8a0:	str	r4, [sp]
   1a8a4:	mov	r2, r4
   1a8a8:	ldr	r1, [pc, #2436]	; 1b234 <__flatcc_fb_gen_common_c_header@@Base+0xb5c>
   1a8ac:	bl	14094 <fprintf@plt>
   1a8b0:	ldr	r3, [r4, #212]	; 0xd4
   1a8b4:	ldr	r3, [r3, #32]
   1a8b8:	cmp	r3, #0
   1a8bc:	beq	1b104 <__flatcc_fb_gen_common_c_header@@Base+0xa2c>
   1a8c0:	mov	r2, r4
   1a8c4:	ldr	r1, [pc, #2412]	; 1b238 <__flatcc_fb_gen_common_c_header@@Base+0xb60>
   1a8c8:	ldr	r0, [r4, #204]	; 0xcc
   1a8cc:	bl	14094 <fprintf@plt>
   1a8d0:	ldr	r0, [r4, #204]	; 0xcc
   1a8d4:	mov	r3, r4
   1a8d8:	mov	r2, r4
   1a8dc:	ldr	r1, [pc, #2392]	; 1b23c <__flatcc_fb_gen_common_c_header@@Base+0xb64>
   1a8e0:	str	r4, [sp, #4]
   1a8e4:	str	r4, [sp]
   1a8e8:	bl	14094 <fprintf@plt>
   1a8ec:	mov	r3, r4
   1a8f0:	mov	r2, r4
   1a8f4:	ldr	r1, [pc, #2372]	; 1b240 <__flatcc_fb_gen_common_c_header@@Base+0xb68>
   1a8f8:	ldr	r0, [r4, #204]	; 0xcc
   1a8fc:	bl	14094 <fprintf@plt>
   1a900:	ldr	r0, [r4, #204]	; 0xcc
   1a904:	mov	r3, r4
   1a908:	mov	r2, r4
   1a90c:	ldr	r1, [pc, #2352]	; 1b244 <__flatcc_fb_gen_common_c_header@@Base+0xb6c>
   1a910:	str	r4, [sp]
   1a914:	bl	14094 <fprintf@plt>
   1a918:	mov	r3, r4
   1a91c:	mov	r2, r4
   1a920:	ldr	r1, [pc, #2336]	; 1b248 <__flatcc_fb_gen_common_c_header@@Base+0xb70>
   1a924:	ldr	r0, [r4, #204]	; 0xcc
   1a928:	bl	14094 <fprintf@plt>
   1a92c:	ldr	r0, [r4, #204]	; 0xcc
   1a930:	mov	r3, r4
   1a934:	mov	r2, r4
   1a938:	ldr	r1, [pc, #2316]	; 1b24c <__flatcc_fb_gen_common_c_header@@Base+0xb74>
   1a93c:	str	r4, [sp, #4]
   1a940:	str	r4, [sp]
   1a944:	bl	14094 <fprintf@plt>
   1a948:	mov	r3, r4
   1a94c:	mov	r2, r4
   1a950:	ldr	r1, [pc, #2296]	; 1b250 <__flatcc_fb_gen_common_c_header@@Base+0xb78>
   1a954:	ldr	r0, [r4, #204]	; 0xcc
   1a958:	bl	14094 <fprintf@plt>
   1a95c:	mov	r3, r4
   1a960:	mov	r2, r4
   1a964:	ldr	r1, [pc, #2280]	; 1b254 <__flatcc_fb_gen_common_c_header@@Base+0xb7c>
   1a968:	ldr	r0, [r4, #204]	; 0xcc
   1a96c:	bl	14094 <fprintf@plt>
   1a970:	ldr	r0, [r4, #204]	; 0xcc
   1a974:	mov	r3, r4
   1a978:	mov	r2, r4
   1a97c:	ldr	r1, [pc, #2260]	; 1b258 <__flatcc_fb_gen_common_c_header@@Base+0xb80>
   1a980:	str	r4, [sp, #4]
   1a984:	str	r4, [sp]
   1a988:	bl	14094 <fprintf@plt>
   1a98c:	ldr	r0, [r4, #204]	; 0xcc
   1a990:	mov	r3, r4
   1a994:	mov	r2, r4
   1a998:	ldr	r1, [pc, #2236]	; 1b25c <__flatcc_fb_gen_common_c_header@@Base+0xb84>
   1a99c:	str	r4, [sp, #36]	; 0x24
   1a9a0:	str	r4, [sp, #32]
   1a9a4:	str	r4, [sp, #28]
   1a9a8:	str	r4, [sp, #24]
   1a9ac:	str	r4, [sp, #20]
   1a9b0:	str	r4, [sp, #16]
   1a9b4:	str	r4, [sp, #12]
   1a9b8:	str	r4, [sp, #8]
   1a9bc:	str	r4, [sp, #4]
   1a9c0:	str	r4, [sp]
   1a9c4:	bl	14094 <fprintf@plt>
   1a9c8:	mov	r2, r4
   1a9cc:	ldr	r1, [pc, #2188]	; 1b260 <__flatcc_fb_gen_common_c_header@@Base+0xb88>
   1a9d0:	ldr	r0, [r4, #204]	; 0xcc
   1a9d4:	bl	14094 <fprintf@plt>
   1a9d8:	ldr	r0, [r4, #204]	; 0xcc
   1a9dc:	mov	r3, r4
   1a9e0:	mov	r2, r4
   1a9e4:	ldr	r1, [pc, #2168]	; 1b264 <__flatcc_fb_gen_common_c_header@@Base+0xb8c>
   1a9e8:	str	r4, [sp, #4]
   1a9ec:	str	r4, [sp]
   1a9f0:	bl	14094 <fprintf@plt>
   1a9f4:	ldr	r0, [r4, #204]	; 0xcc
   1a9f8:	mov	r3, r4
   1a9fc:	mov	r2, r4
   1aa00:	ldr	r1, [pc, #2144]	; 1b268 <__flatcc_fb_gen_common_c_header@@Base+0xb90>
   1aa04:	str	r4, [sp, #56]	; 0x38
   1aa08:	str	r4, [sp, #52]	; 0x34
   1aa0c:	str	r4, [sp, #48]	; 0x30
   1aa10:	str	r4, [sp, #44]	; 0x2c
   1aa14:	str	r4, [sp, #40]	; 0x28
   1aa18:	str	r4, [sp, #36]	; 0x24
   1aa1c:	str	r4, [sp, #32]
   1aa20:	str	r4, [sp, #28]
   1aa24:	str	r4, [sp, #24]
   1aa28:	str	r4, [sp, #20]
   1aa2c:	str	r4, [sp, #16]
   1aa30:	str	r4, [sp, #12]
   1aa34:	str	r4, [sp, #8]
   1aa38:	str	r4, [sp, #4]
   1aa3c:	str	r4, [sp]
   1aa40:	bl	14094 <fprintf@plt>
   1aa44:	ldr	r0, [r4, #204]	; 0xcc
   1aa48:	mov	r3, r4
   1aa4c:	mov	r2, r4
   1aa50:	ldr	r1, [pc, #2068]	; 1b26c <__flatcc_fb_gen_common_c_header@@Base+0xb94>
   1aa54:	str	r4, [sp, #20]
   1aa58:	str	r4, [sp, #16]
   1aa5c:	str	r4, [sp, #12]
   1aa60:	str	r4, [sp, #8]
   1aa64:	str	r4, [sp, #4]
   1aa68:	str	r4, [sp]
   1aa6c:	bl	14094 <fprintf@plt>
   1aa70:	ldr	r0, [r4, #204]	; 0xcc
   1aa74:	mov	r3, r4
   1aa78:	mov	r2, r4
   1aa7c:	ldr	r1, [pc, #2028]	; 1b270 <__flatcc_fb_gen_common_c_header@@Base+0xb98>
   1aa80:	str	r4, [sp, #4]
   1aa84:	str	r4, [sp]
   1aa88:	bl	14094 <fprintf@plt>
   1aa8c:	mov	r3, r4
   1aa90:	ldr	r0, [r4, #204]	; 0xcc
   1aa94:	mov	r2, r4
   1aa98:	ldr	r1, [pc, #2004]	; 1b274 <__flatcc_fb_gen_common_c_header@@Base+0xb9c>
   1aa9c:	str	r4, [sp, #4]
   1aaa0:	str	r4, [sp]
   1aaa4:	bl	14094 <fprintf@plt>
   1aaa8:	mov	r2, r4
   1aaac:	ldr	r1, [pc, #1988]	; 1b278 <__flatcc_fb_gen_common_c_header@@Base+0xba0>
   1aab0:	ldr	r0, [r4, #204]	; 0xcc
   1aab4:	bl	14094 <fprintf@plt>
   1aab8:	mov	r2, r4
   1aabc:	ldr	r1, [pc, #1976]	; 1b27c <__flatcc_fb_gen_common_c_header@@Base+0xba4>
   1aac0:	ldr	r0, [r4, #204]	; 0xcc
   1aac4:	bl	14094 <fprintf@plt>
   1aac8:	mov	r2, r4
   1aacc:	ldr	r1, [pc, #1964]	; 1b280 <__flatcc_fb_gen_common_c_header@@Base+0xba8>
   1aad0:	ldr	r0, [r4, #204]	; 0xcc
   1aad4:	bl	14094 <fprintf@plt>
   1aad8:	mov	r2, r4
   1aadc:	ldr	r1, [pc, #1952]	; 1b284 <__flatcc_fb_gen_common_c_header@@Base+0xbac>
   1aae0:	ldr	r0, [r4, #204]	; 0xcc
   1aae4:	bl	14094 <fprintf@plt>
   1aae8:	mov	r2, r4
   1aaec:	ldr	r1, [pc, #1940]	; 1b288 <__flatcc_fb_gen_common_c_header@@Base+0xbb0>
   1aaf0:	ldr	r0, [r4, #204]	; 0xcc
   1aaf4:	bl	14094 <fprintf@plt>
   1aaf8:	ldr	r0, [r4, #204]	; 0xcc
   1aafc:	mov	r3, r4
   1ab00:	mov	r2, r4
   1ab04:	ldr	r1, [pc, #1920]	; 1b28c <__flatcc_fb_gen_common_c_header@@Base+0xbb4>
   1ab08:	str	r4, [sp, #4]
   1ab0c:	str	r4, [sp]
   1ab10:	bl	14094 <fprintf@plt>
   1ab14:	ldr	r0, [r4, #204]	; 0xcc
   1ab18:	mov	r3, r4
   1ab1c:	mov	r2, r4
   1ab20:	ldr	r1, [pc, #1896]	; 1b290 <__flatcc_fb_gen_common_c_header@@Base+0xbb8>
   1ab24:	str	r4, [sp, #12]
   1ab28:	str	r4, [sp, #8]
   1ab2c:	str	r4, [sp, #4]
   1ab30:	str	r4, [sp]
   1ab34:	bl	14094 <fprintf@plt>
   1ab38:	ldr	r0, [r4, #204]	; 0xcc
   1ab3c:	mov	r3, r4
   1ab40:	mov	r2, r4
   1ab44:	ldr	r1, [pc, #1864]	; 1b294 <__flatcc_fb_gen_common_c_header@@Base+0xbbc>
   1ab48:	str	r4, [sp]
   1ab4c:	bl	14094 <fprintf@plt>
   1ab50:	ldr	r0, [r4, #204]	; 0xcc
   1ab54:	mov	r3, r4
   1ab58:	mov	r2, r4
   1ab5c:	ldr	r1, [pc, #1844]	; 1b298 <__flatcc_fb_gen_common_c_header@@Base+0xbc0>
   1ab60:	str	r4, [sp, #32]
   1ab64:	str	r4, [sp, #28]
   1ab68:	str	r4, [sp, #24]
   1ab6c:	str	r4, [sp, #20]
   1ab70:	str	r4, [sp, #16]
   1ab74:	str	r4, [sp, #12]
   1ab78:	str	r4, [sp, #8]
   1ab7c:	str	r4, [sp, #4]
   1ab80:	str	r4, [sp]
   1ab84:	bl	14094 <fprintf@plt>
   1ab88:	mov	r3, r4
   1ab8c:	mov	r2, r4
   1ab90:	ldr	r1, [pc, #1796]	; 1b29c <__flatcc_fb_gen_common_c_header@@Base+0xbc4>
   1ab94:	ldr	r0, [r4, #204]	; 0xcc
   1ab98:	bl	14094 <fprintf@plt>
   1ab9c:	ldr	r0, [r4, #204]	; 0xcc
   1aba0:	mov	r3, r4
   1aba4:	mov	r2, r4
   1aba8:	ldr	r1, [pc, #1776]	; 1b2a0 <__flatcc_fb_gen_common_c_header@@Base+0xbc8>
   1abac:	str	r4, [sp]
   1abb0:	bl	14094 <fprintf@plt>
   1abb4:	mov	r3, r4
   1abb8:	ldr	r0, [r4, #204]	; 0xcc
   1abbc:	mov	r2, r4
   1abc0:	ldr	r1, [pc, #1756]	; 1b2a4 <__flatcc_fb_gen_common_c_header@@Base+0xbcc>
   1abc4:	str	r4, [sp]
   1abc8:	bl	14094 <fprintf@plt>
   1abcc:	mov	r2, r4
   1abd0:	ldr	r1, [pc, #1744]	; 1b2a8 <__flatcc_fb_gen_common_c_header@@Base+0xbd0>
   1abd4:	ldr	r0, [r4, #204]	; 0xcc
   1abd8:	bl	14094 <fprintf@plt>
   1abdc:	mov	r2, r4
   1abe0:	ldr	r1, [pc, #1732]	; 1b2ac <__flatcc_fb_gen_common_c_header@@Base+0xbd4>
   1abe4:	ldr	r0, [r4, #204]	; 0xcc
   1abe8:	bl	14094 <fprintf@plt>
   1abec:	mov	r3, r4
   1abf0:	mov	r2, r4
   1abf4:	ldr	r1, [pc, #1716]	; 1b2b0 <__flatcc_fb_gen_common_c_header@@Base+0xbd8>
   1abf8:	ldr	r0, [r4, #204]	; 0xcc
   1abfc:	bl	14094 <fprintf@plt>
   1ac00:	mov	r3, r4
   1ac04:	mov	r2, r4
   1ac08:	ldr	r1, [pc, #1700]	; 1b2b4 <__flatcc_fb_gen_common_c_header@@Base+0xbdc>
   1ac0c:	ldr	r0, [r4, #204]	; 0xcc
   1ac10:	bl	14094 <fprintf@plt>
   1ac14:	ldr	r0, [r4, #204]	; 0xcc
   1ac18:	mov	r3, r4
   1ac1c:	mov	r2, r4
   1ac20:	ldr	r1, [pc, #1680]	; 1b2b8 <__flatcc_fb_gen_common_c_header@@Base+0xbe0>
   1ac24:	str	r4, [sp, #32]
   1ac28:	str	r4, [sp, #28]
   1ac2c:	str	r4, [sp, #24]
   1ac30:	str	r4, [sp, #20]
   1ac34:	str	r4, [sp, #16]
   1ac38:	str	r4, [sp, #12]
   1ac3c:	str	r4, [sp, #8]
   1ac40:	str	r4, [sp, #4]
   1ac44:	str	r4, [sp]
   1ac48:	bl	14094 <fprintf@plt>
   1ac4c:	ldr	r0, [r4, #204]	; 0xcc
   1ac50:	mov	r3, r4
   1ac54:	mov	r2, r4
   1ac58:	ldr	r1, [pc, #1628]	; 1b2bc <__flatcc_fb_gen_common_c_header@@Base+0xbe4>
   1ac5c:	str	r4, [sp, #32]
   1ac60:	str	r4, [sp, #28]
   1ac64:	str	r4, [sp, #24]
   1ac68:	str	r4, [sp, #20]
   1ac6c:	str	r4, [sp, #16]
   1ac70:	str	r4, [sp, #12]
   1ac74:	str	r4, [sp, #8]
   1ac78:	str	r4, [sp, #4]
   1ac7c:	str	r4, [sp]
   1ac80:	bl	14094 <fprintf@plt>
   1ac84:	ldr	r0, [r4, #204]	; 0xcc
   1ac88:	mov	r3, r4
   1ac8c:	mov	r2, r4
   1ac90:	ldr	r1, [pc, #1576]	; 1b2c0 <__flatcc_fb_gen_common_c_header@@Base+0xbe8>
   1ac94:	str	r4, [sp, #16]
   1ac98:	str	r4, [sp, #12]
   1ac9c:	str	r4, [sp, #8]
   1aca0:	str	r4, [sp, #4]
   1aca4:	str	r4, [sp]
   1aca8:	bl	14094 <fprintf@plt>
   1acac:	ldr	r0, [r4, #204]	; 0xcc
   1acb0:	mov	r3, r4
   1acb4:	mov	r2, r4
   1acb8:	ldr	r1, [pc, #1540]	; 1b2c4 <__flatcc_fb_gen_common_c_header@@Base+0xbec>
   1acbc:	str	r4, [sp, #32]
   1acc0:	str	r4, [sp, #28]
   1acc4:	str	r4, [sp, #24]
   1acc8:	str	r4, [sp, #20]
   1accc:	str	r4, [sp, #16]
   1acd0:	str	r4, [sp, #12]
   1acd4:	str	r4, [sp, #8]
   1acd8:	str	r4, [sp, #4]
   1acdc:	str	r4, [sp]
   1ace0:	bl	14094 <fprintf@plt>
   1ace4:	ldr	r0, [r4, #204]	; 0xcc
   1ace8:	mov	r3, r4
   1acec:	mov	r2, r4
   1acf0:	ldr	r1, [pc, #1488]	; 1b2c8 <__flatcc_fb_gen_common_c_header@@Base+0xbf0>
   1acf4:	str	r4, [sp, #40]	; 0x28
   1acf8:	str	r4, [sp, #36]	; 0x24
   1acfc:	str	r4, [sp, #32]
   1ad00:	str	r4, [sp, #28]
   1ad04:	str	r4, [sp, #24]
   1ad08:	str	r4, [sp, #20]
   1ad0c:	str	r4, [sp, #16]
   1ad10:	str	r4, [sp, #12]
   1ad14:	str	r4, [sp, #8]
   1ad18:	str	r4, [sp, #4]
   1ad1c:	str	r4, [sp]
   1ad20:	bl	14094 <fprintf@plt>
   1ad24:	mov	r2, r4
   1ad28:	ldr	r1, [pc, #1436]	; 1b2cc <__flatcc_fb_gen_common_c_header@@Base+0xbf4>
   1ad2c:	ldr	r0, [r4, #204]	; 0xcc
   1ad30:	bl	14094 <fprintf@plt>
   1ad34:	mov	r2, r4
   1ad38:	ldr	r1, [pc, #1424]	; 1b2d0 <__flatcc_fb_gen_common_c_header@@Base+0xbf8>
   1ad3c:	ldr	r0, [r4, #204]	; 0xcc
   1ad40:	bl	14094 <fprintf@plt>
   1ad44:	ldr	r3, [r4, #212]	; 0xd4
   1ad48:	ldr	r3, [r3, #136]	; 0x88
   1ad4c:	cmp	r3, #0
   1ad50:	beq	1b0ec <__flatcc_fb_gen_common_c_header@@Base+0xa14>
   1ad54:	mov	r0, r4
   1ad58:	bl	1b914 <__flatcc_gen_sort@@Base>
   1ad5c:	ldr	r0, [r4, #204]	; 0xcc
   1ad60:	mov	r3, r4
   1ad64:	str	r4, [sp, #8]
   1ad68:	str	r4, [sp, #4]
   1ad6c:	str	r4, [sp]
   1ad70:	mov	r2, r4
   1ad74:	ldr	r1, [pc, #1368]	; 1b2d4 <__flatcc_fb_gen_common_c_header@@Base+0xbfc>
   1ad78:	bl	14094 <fprintf@plt>
   1ad7c:	ldr	r3, [r4, #212]	; 0xd4
   1ad80:	ldr	r3, [r3, #136]	; 0x88
   1ad84:	cmp	r3, #0
   1ad88:	beq	1b0dc <__flatcc_fb_gen_common_c_header@@Base+0xa04>
   1ad8c:	mov	r2, r4
   1ad90:	ldr	r1, [pc, #1344]	; 1b2d8 <__flatcc_fb_gen_common_c_header@@Base+0xc00>
   1ad94:	ldr	r0, [r4, #204]	; 0xcc
   1ad98:	bl	14094 <fprintf@plt>
   1ad9c:	ldr	r1, [r4, #204]	; 0xcc
   1ada0:	mov	r0, #10
   1ada4:	bl	140f4 <fputc@plt>
   1ada8:	ldr	r0, [r4, #204]	; 0xcc
   1adac:	mov	r3, r4
   1adb0:	mov	r2, r4
   1adb4:	ldr	r1, [pc, #1312]	; 1b2dc <__flatcc_fb_gen_common_c_header@@Base+0xc04>
   1adb8:	str	r4, [sp]
   1adbc:	bl	14094 <fprintf@plt>
   1adc0:	ldr	r0, [r4, #204]	; 0xcc
   1adc4:	mov	r3, r4
   1adc8:	mov	r2, r4
   1adcc:	ldr	r1, [pc, #1292]	; 1b2e0 <__flatcc_fb_gen_common_c_header@@Base+0xc08>
   1add0:	str	r4, [sp, #24]
   1add4:	str	r4, [sp, #20]
   1add8:	str	r4, [sp, #16]
   1addc:	str	r4, [sp, #12]
   1ade0:	str	r4, [sp, #8]
   1ade4:	str	r4, [sp, #4]
   1ade8:	str	r4, [sp]
   1adec:	str	r4, [sp, #92]	; 0x5c
   1adf0:	str	r4, [sp, #88]	; 0x58
   1adf4:	str	r4, [sp, #84]	; 0x54
   1adf8:	str	r4, [sp, #80]	; 0x50
   1adfc:	str	r4, [sp, #76]	; 0x4c
   1ae00:	str	r4, [sp, #72]	; 0x48
   1ae04:	str	r4, [sp, #68]	; 0x44
   1ae08:	str	r4, [sp, #64]	; 0x40
   1ae0c:	str	r4, [sp, #60]	; 0x3c
   1ae10:	str	r4, [sp, #56]	; 0x38
   1ae14:	str	r4, [sp, #52]	; 0x34
   1ae18:	str	r4, [sp, #48]	; 0x30
   1ae1c:	str	r4, [sp, #44]	; 0x2c
   1ae20:	str	r4, [sp, #40]	; 0x28
   1ae24:	str	r4, [sp, #36]	; 0x24
   1ae28:	str	r4, [sp, #32]
   1ae2c:	str	r4, [sp, #28]
   1ae30:	bl	14094 <fprintf@plt>
   1ae34:	ldr	r0, [r4, #204]	; 0xcc
   1ae38:	mov	r3, r4
   1ae3c:	mov	r2, r4
   1ae40:	ldr	r1, [pc, #1180]	; 1b2e4 <__flatcc_fb_gen_common_c_header@@Base+0xc0c>
   1ae44:	str	r4, [sp, #36]	; 0x24
   1ae48:	str	r4, [sp, #32]
   1ae4c:	str	r4, [sp, #28]
   1ae50:	str	r4, [sp, #24]
   1ae54:	str	r4, [sp, #20]
   1ae58:	str	r4, [sp, #16]
   1ae5c:	str	r4, [sp, #12]
   1ae60:	str	r4, [sp, #8]
   1ae64:	str	r4, [sp, #4]
   1ae68:	str	r4, [sp]
   1ae6c:	bl	14094 <fprintf@plt>
   1ae70:	ldr	r0, [r4, #204]	; 0xcc
   1ae74:	mov	r3, r4
   1ae78:	str	r4, [sp, #228]	; 0xe4
   1ae7c:	str	r4, [sp, #224]	; 0xe0
   1ae80:	str	r4, [sp, #220]	; 0xdc
   1ae84:	str	r4, [sp, #216]	; 0xd8
   1ae88:	str	r4, [sp, #212]	; 0xd4
   1ae8c:	str	r4, [sp, #208]	; 0xd0
   1ae90:	str	r4, [sp, #204]	; 0xcc
   1ae94:	str	r4, [sp, #200]	; 0xc8
   1ae98:	str	r4, [sp, #196]	; 0xc4
   1ae9c:	str	r4, [sp, #192]	; 0xc0
   1aea0:	str	r4, [sp, #188]	; 0xbc
   1aea4:	str	r4, [sp, #184]	; 0xb8
   1aea8:	str	r4, [sp, #180]	; 0xb4
   1aeac:	str	r4, [sp, #176]	; 0xb0
   1aeb0:	str	r4, [sp, #172]	; 0xac
   1aeb4:	str	r4, [sp, #168]	; 0xa8
   1aeb8:	str	r4, [sp, #164]	; 0xa4
   1aebc:	str	r4, [sp, #160]	; 0xa0
   1aec0:	str	r4, [sp, #156]	; 0x9c
   1aec4:	str	r4, [sp, #152]	; 0x98
   1aec8:	str	r4, [sp, #148]	; 0x94
   1aecc:	str	r4, [sp, #144]	; 0x90
   1aed0:	str	r4, [sp, #140]	; 0x8c
   1aed4:	str	r4, [sp, #136]	; 0x88
   1aed8:	str	r4, [sp, #132]	; 0x84
   1aedc:	str	r4, [sp, #128]	; 0x80
   1aee0:	str	r4, [sp, #124]	; 0x7c
   1aee4:	str	r4, [sp, #120]	; 0x78
   1aee8:	str	r4, [sp, #116]	; 0x74
   1aeec:	str	r4, [sp, #112]	; 0x70
   1aef0:	str	r4, [sp, #108]	; 0x6c
   1aef4:	mov	r2, r4
   1aef8:	str	r4, [sp, #104]	; 0x68
   1aefc:	ldr	r1, [pc, #996]	; 1b2e8 <__flatcc_fb_gen_common_c_header@@Base+0xc10>
   1af00:	str	r4, [sp, #20]
   1af04:	str	r4, [sp, #16]
   1af08:	str	r4, [sp, #12]
   1af0c:	str	r4, [sp, #8]
   1af10:	str	r4, [sp, #4]
   1af14:	str	r4, [sp]
   1af18:	str	r4, [sp, #100]	; 0x64
   1af1c:	str	r4, [sp, #96]	; 0x60
   1af20:	str	r4, [sp, #92]	; 0x5c
   1af24:	str	r4, [sp, #88]	; 0x58
   1af28:	str	r4, [sp, #84]	; 0x54
   1af2c:	str	r4, [sp, #80]	; 0x50
   1af30:	str	r4, [sp, #76]	; 0x4c
   1af34:	str	r4, [sp, #72]	; 0x48
   1af38:	str	r4, [sp, #68]	; 0x44
   1af3c:	str	r4, [sp, #64]	; 0x40
   1af40:	str	r4, [sp, #60]	; 0x3c
   1af44:	str	r4, [sp, #56]	; 0x38
   1af48:	str	r4, [sp, #52]	; 0x34
   1af4c:	str	r4, [sp, #48]	; 0x30
   1af50:	str	r4, [sp, #44]	; 0x2c
   1af54:	str	r4, [sp, #40]	; 0x28
   1af58:	str	r4, [sp, #36]	; 0x24
   1af5c:	str	r4, [sp, #32]
   1af60:	str	r4, [sp, #28]
   1af64:	str	r4, [sp, #24]
   1af68:	bl	14094 <fprintf@plt>
   1af6c:	ldr	r3, [r4, #212]	; 0xd4
   1af70:	ldr	r3, [r3, #136]	; 0x88
   1af74:	cmp	r3, #0
   1af78:	bne	1b138 <__flatcc_fb_gen_common_c_header@@Base+0xa60>
   1af7c:	mov	r3, r4
   1af80:	mov	r2, r4
   1af84:	ldr	r1, [pc, #864]	; 1b2ec <__flatcc_fb_gen_common_c_header@@Base+0xc14>
   1af88:	ldr	r0, [r4, #204]	; 0xcc
   1af8c:	bl	14094 <fprintf@plt>
   1af90:	ldr	r3, [r4, #212]	; 0xd4
   1af94:	ldr	r3, [r3, #32]
   1af98:	cmp	r3, #0
   1af9c:	bne	1b124 <__flatcc_fb_gen_common_c_header@@Base+0xa4c>
   1afa0:	ldr	r1, [r4, #204]	; 0xcc
   1afa4:	mov	r0, #10
   1afa8:	bl	140f4 <fputc@plt>
   1afac:	mov	r2, r4
   1afb0:	ldr	r1, [pc, #824]	; 1b2f0 <__flatcc_fb_gen_common_c_header@@Base+0xc18>
   1afb4:	ldr	r0, [r4, #204]	; 0xcc
   1afb8:	bl	14094 <fprintf@plt>
   1afbc:	ldr	r0, [r4, #204]	; 0xcc
   1afc0:	mov	r3, r4
   1afc4:	mov	r2, r4
   1afc8:	ldr	r1, [pc, #804]	; 1b2f4 <__flatcc_fb_gen_common_c_header@@Base+0xc1c>
   1afcc:	str	r4, [sp, #44]	; 0x2c
   1afd0:	str	r4, [sp, #40]	; 0x28
   1afd4:	str	r4, [sp, #36]	; 0x24
   1afd8:	str	r4, [sp, #32]
   1afdc:	str	r4, [sp, #28]
   1afe0:	str	r4, [sp, #24]
   1afe4:	str	r4, [sp, #20]
   1afe8:	str	r4, [sp, #16]
   1afec:	str	r4, [sp, #12]
   1aff0:	str	r4, [sp, #8]
   1aff4:	str	r4, [sp, #4]
   1aff8:	str	r4, [sp]
   1affc:	bl	14094 <fprintf@plt>
   1b000:	ldr	r0, [r4, #204]	; 0xcc
   1b004:	mov	r3, r4
   1b008:	mov	r2, r4
   1b00c:	ldr	r1, [pc, #740]	; 1b2f8 <__flatcc_fb_gen_common_c_header@@Base+0xc20>
   1b010:	str	r4, [sp]
   1b014:	bl	14094 <fprintf@plt>
   1b018:	ldr	r0, [r4, #204]	; 0xcc
   1b01c:	mov	r3, r4
   1b020:	mov	r2, r4
   1b024:	ldr	r1, [pc, #720]	; 1b2fc <__flatcc_fb_gen_common_c_header@@Base+0xc24>
   1b028:	str	r4, [sp, #12]
   1b02c:	str	r4, [sp, #8]
   1b030:	str	r4, [sp, #4]
   1b034:	str	r4, [sp]
   1b038:	bl	14094 <fprintf@plt>
   1b03c:	ldr	r0, [r4, #204]	; 0xcc
   1b040:	mov	r3, r4
   1b044:	mov	r2, r4
   1b048:	ldr	r1, [pc, #688]	; 1b300 <__flatcc_fb_gen_common_c_header@@Base+0xc28>
   1b04c:	str	r4, [sp, #4]
   1b050:	str	r4, [sp]
   1b054:	bl	14094 <fprintf@plt>
   1b058:	ldr	r0, [r4, #204]	; 0xcc
   1b05c:	mov	r3, r4
   1b060:	mov	r2, r4
   1b064:	ldr	r1, [pc, #664]	; 1b304 <__flatcc_fb_gen_common_c_header@@Base+0xc2c>
   1b068:	str	r4, [sp, #28]
   1b06c:	str	r4, [sp, #24]
   1b070:	str	r4, [sp, #20]
   1b074:	str	r4, [sp, #16]
   1b078:	str	r4, [sp, #12]
   1b07c:	str	r4, [sp, #8]
   1b080:	str	r4, [sp, #4]
   1b084:	str	r4, [sp]
   1b088:	bl	14094 <fprintf@plt>
   1b08c:	ldr	r1, [r4, #204]	; 0xcc
   1b090:	mov	r0, #10
   1b094:	bl	140f4 <fputc@plt>
   1b098:	ldr	r3, [r4, #212]	; 0xd4
   1b09c:	ldr	r0, [r4, #204]	; 0xcc
   1b0a0:	ldr	r3, [r3, #140]	; 0x8c
   1b0a4:	cmp	r3, #0
   1b0a8:	beq	1b0c4 <__flatcc_fb_gen_common_c_header@@Base+0x9ec>
   1b0ac:	mov	r3, r0
   1b0b0:	mov	r2, #36	; 0x24
   1b0b4:	mov	r1, #1
   1b0b8:	ldr	r0, [pc, #584]	; 1b308 <__flatcc_fb_gen_common_c_header@@Base+0xc30>
   1b0bc:	bl	1401c <fwrite@plt>
   1b0c0:	ldr	r0, [r4, #204]	; 0xcc
   1b0c4:	mov	r2, r5
   1b0c8:	ldr	r1, [pc, #572]	; 1b30c <__flatcc_fb_gen_common_c_header@@Base+0xc34>
   1b0cc:	bl	14094 <fprintf@plt>
   1b0d0:	mov	r0, #0
   1b0d4:	add	sp, sp, #236	; 0xec
   1b0d8:	pop	{r4, r5, pc}
   1b0dc:	ldr	r1, [r4, #204]	; 0xcc
   1b0e0:	mov	r0, #10
   1b0e4:	bl	140f4 <fputc@plt>
   1b0e8:	b	1ad9c <__flatcc_fb_gen_common_c_header@@Base+0x6c4>
   1b0ec:	ldr	r3, [r4, #204]	; 0xcc
   1b0f0:	mov	r2, #20
   1b0f4:	mov	r1, #1
   1b0f8:	ldr	r0, [pc, #528]	; 1b310 <__flatcc_fb_gen_common_c_header@@Base+0xc38>
   1b0fc:	bl	1401c <fwrite@plt>
   1b100:	b	1ad5c <__flatcc_fb_gen_common_c_header@@Base+0x684>
   1b104:	ldr	r1, [r4, #204]	; 0xcc
   1b108:	mov	r0, #10
   1b10c:	bl	140f4 <fputc@plt>
   1b110:	b	1a8d0 <__flatcc_fb_gen_common_c_header@@Base+0x1f8>
   1b114:	ldr	r1, [r4, #204]	; 0xcc
   1b118:	mov	r0, #10
   1b11c:	bl	140f4 <fputc@plt>
   1b120:	b	1a7f4 <__flatcc_fb_gen_common_c_header@@Base+0x11c>
   1b124:	mov	r2, r4
   1b128:	ldr	r1, [pc, #232]	; 1b218 <__flatcc_fb_gen_common_c_header@@Base+0xb40>
   1b12c:	ldr	r0, [r4, #204]	; 0xcc
   1b130:	bl	14094 <fprintf@plt>
   1b134:	b	1afac <__flatcc_fb_gen_common_c_header@@Base+0x8d4>
   1b138:	mov	r2, r4
   1b13c:	ldr	r1, [pc, #464]	; 1b314 <__flatcc_fb_gen_common_c_header@@Base+0xc3c>
   1b140:	ldr	r0, [r4, #204]	; 0xcc
   1b144:	bl	14094 <fprintf@plt>
   1b148:	b	1af7c <__flatcc_fb_gen_common_c_header@@Base+0x8a4>
   1b14c:	ldr	r0, [r4, #204]	; 0xcc
   1b150:	mov	r3, r4
   1b154:	mov	r2, r4
   1b158:	str	r4, [sp, #8]
   1b15c:	str	r4, [sp, #4]
   1b160:	str	r4, [sp]
   1b164:	ldr	r1, [pc, #428]	; 1b318 <__flatcc_fb_gen_common_c_header@@Base+0xc40>
   1b168:	bl	14094 <fprintf@plt>
   1b16c:	ldr	r0, [r4, #204]	; 0xcc
   1b170:	mov	r3, r4
   1b174:	str	r4, [sp, #4]
   1b178:	str	r4, [sp]
   1b17c:	ldr	r2, [pc, #408]	; 1b31c <__flatcc_fb_gen_common_c_header@@Base+0xc44>
   1b180:	ldr	r1, [pc, #408]	; 1b320 <__flatcc_fb_gen_common_c_header@@Base+0xc48>
   1b184:	bl	14094 <fprintf@plt>
   1b188:	ldr	r0, [r4, #204]	; 0xcc
   1b18c:	mov	r3, r4
   1b190:	mov	r2, r4
   1b194:	str	r4, [sp, #8]
   1b198:	str	r4, [sp, #4]
   1b19c:	str	r4, [sp]
   1b1a0:	ldr	r1, [pc, #380]	; 1b324 <__flatcc_fb_gen_common_c_header@@Base+0xc4c>
   1b1a4:	bl	14094 <fprintf@plt>
   1b1a8:	mov	r3, r5
   1b1ac:	mov	r2, r5
   1b1b0:	ldr	r1, [pc, #368]	; 1b328 <__flatcc_fb_gen_common_c_header@@Base+0xc50>
   1b1b4:	ldr	r0, [r4, #204]	; 0xcc
   1b1b8:	bl	14094 <fprintf@plt>
   1b1bc:	b	1a768 <__flatcc_fb_gen_common_c_header@@Base+0x90>
   1b1c0:	mov	r2, #36	; 0x24
   1b1c4:	mov	r1, #1
   1b1c8:	ldr	r0, [pc, #348]	; 1b32c <__flatcc_fb_gen_common_c_header@@Base+0xc54>
   1b1cc:	bl	1401c <fwrite@plt>
   1b1d0:	ldr	r3, [r4, #204]	; 0xcc
   1b1d4:	b	1a744 <__flatcc_fb_gen_common_c_header@@Base+0x6c>
   1b1d8:	ldr	r3, [r4, #204]	; 0xcc
   1b1dc:	mov	r2, #135	; 0x87
   1b1e0:	mov	r1, #1
   1b1e4:	ldr	r0, [pc, #324]	; 1b330 <__flatcc_fb_gen_common_c_header@@Base+0xc58>
   1b1e8:	bl	1401c <fwrite@plt>
   1b1ec:	ldr	r3, [r4, #212]	; 0xd4
   1b1f0:	b	1a734 <__flatcc_fb_gen_common_c_header@@Base+0x5c>
   1b1f4:	muleq	r4, ip, r7
   1b1f8:	ldrdeq	r5, [r4], -r4
   1b1fc:	andeq	r5, r4, r8, lsr #16
   1b200:	andeq	r5, r4, r0, lsl r9
   1b204:	andeq	r5, r4, ip, lsr r9
   1b208:	andeq	r5, r4, ip, lsr #28
   1b20c:			; <UNDEFINED> instruction: 0x00045ebc
   1b210:	andeq	r6, r4, r0, lsr r0
   1b214:	andeq	r6, r4, r8, lsl #1
   1b218:			; <UNDEFINED> instruction: 0x000461b0
   1b21c:	andeq	r6, r4, r0, ror #3
   1b220:			; <UNDEFINED> instruction: 0x000462b4
   1b224:	andeq	r6, r4, r0, ror #8
   1b228:	andeq	r6, r4, r0, lsl #10
   1b22c:	ldrdeq	r6, [r4], -ip
   1b230:			; <UNDEFINED> instruction: 0x000466b8
   1b234:	muleq	r4, r0, r7
   1b238:	andeq	r6, r4, r8, ror r8
   1b23c:	andeq	r6, r4, r4, lsr #17
   1b240:	andeq	r6, r4, r4, asr #18
   1b244:	andeq	r6, r4, r8, lsl #19
   1b248:	andeq	r6, r4, r4, lsl sl
   1b24c:	andeq	r6, r4, r8, lsl #21
   1b250:	andeq	r6, r4, r8, lsr #23
   1b254:	andeq	r6, r4, r0, lsr #24
   1b258:	andeq	r6, r4, r0, lsr #25
   1b25c:	andeq	r6, r4, r4, lsl #26
   1b260:	andeq	r6, r4, r8, lsr #28
   1b264:	andeq	r6, r4, ip, asr #28
   1b268:	ldrdeq	r6, [r4], -r4
   1b26c:	andeq	r7, r4, r4, lsl #1
   1b270:	andeq	r7, r4, r8, asr #2
   1b274:	andeq	r7, r4, r4, ror #3
   1b278:	andeq	r7, r4, ip, asr r2
   1b27c:	andeq	r7, r4, r0, lsr r5
   1b280:	andeq	r7, r4, r4, asr #15
   1b284:	andeq	r7, r4, r8, asr #16
   1b288:			; <UNDEFINED> instruction: 0x000478b8
   1b28c:	muleq	r4, ip, sl
   1b290:	andeq	r7, r4, r8, asr #22
   1b294:	andeq	r7, r4, r4, lsr #26
   1b298:	andeq	r7, r4, r0, asr #30
   1b29c:	muleq	r4, r8, r0
   1b2a0:	andeq	r8, r4, r8, ror #2
   1b2a4:	andeq	r8, r4, r0, lsr #4
   1b2a8:	ldrdeq	r8, [r4], -r8	; <UNPREDICTABLE>
   1b2ac:	andeq	r8, r4, r4, lsl #9
   1b2b0:			; <UNDEFINED> instruction: 0x000485b4
   1b2b4:	andeq	r8, r4, r4, lsl #14
   1b2b8:	ldrdeq	r8, [r4], -r8	; <UNPREDICTABLE>
   1b2bc:	andeq	r8, r4, r4, asr r9
   1b2c0:	ldrdeq	r8, [r4], -r8	; <UNPREDICTABLE>
   1b2c4:	andeq	r8, r4, r0, lsr lr
   1b2c8:	andeq	r9, r4, r0, asr r1
   1b2cc:	andeq	r9, r4, ip, lsl r8
   1b2d0:	andeq	r9, r4, ip, ror #20
   1b2d4:	andeq	r9, r4, r8, asr #30
   1b2d8:	andeq	sl, r4, ip, lsr #32
   1b2dc:	andeq	sl, r4, ip, asr #32
   1b2e0:	andeq	sl, r4, ip, asr #1
   1b2e4:	andeq	sl, r4, r0, ror #5
   1b2e8:	andeq	sl, r4, ip, lsr #8
   1b2ec:	andeq	sl, r4, r4, lsl #22
   1b2f0:	andeq	sl, r4, r0, lsr #23
   1b2f4:	andeq	sl, r4, r0, lsr #24
   1b2f8:	andeq	sl, r4, ip, ror #30
   1b2fc:	andeq	fp, r4, r4, lsr #32
   1b300:	andeq	fp, r4, ip, ror #3
   1b304:	andeq	fp, r4, r8, ror #8
   1b308:	andeq	fp, r4, ip, asr #14
   1b30c:	andeq	fp, r4, r4, ror r7
   1b310:	andeq	r9, r4, r0, lsr pc
   1b314:	andeq	sl, r4, r8, ror #21
   1b318:	andeq	r5, r4, ip, asr #18
   1b31c:	andeq	r5, r4, r8, lsr r9
   1b320:	andeq	r5, r4, ip, lsl sl
   1b324:	andeq	r5, r4, r4, ror fp
   1b328:	ldrdeq	r5, [r4], -ip
   1b32c:	andeq	r5, r4, r8, ror #17
   1b330:	andeq	r5, r4, r0, ror #16

0001b334 <__flatcc_fb_gen_c_reader@@Base>:
   1b334:	ldr	r3, [r0, #208]	; 0xd0
   1b338:	ldr	r2, [r0, #212]	; 0xd4
   1b33c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b340:	mov	r4, r0
   1b344:	ldr	r3, [r3, #164]	; 0xa4
   1b348:	ldr	r5, [r2, #132]	; 0x84
   1b34c:	sub	sp, sp, #252	; 0xfc
   1b350:	mov	r2, r3
   1b354:	ldr	r1, [pc, #1360]	; 1b8ac <__flatcc_fb_gen_c_reader@@Base+0x578>
   1b358:	ldr	r0, [r0, #204]	; 0xcc
   1b35c:	bl	14094 <fprintf@plt>
   1b360:	ldr	r3, [r4, #204]	; 0xcc
   1b364:	mov	r2, #81	; 0x51
   1b368:	mov	r1, #1
   1b36c:	ldr	r0, [pc, #1340]	; 1b8b0 <__flatcc_fb_gen_c_reader@@Base+0x57c>
   1b370:	bl	1401c <fwrite@plt>
   1b374:	cmp	r5, #0
   1b378:	add	r5, r4, #102	; 0x66
   1b37c:	bne	1b85c <__flatcc_fb_gen_c_reader@@Base+0x528>
   1b380:	mov	r3, r4
   1b384:	mov	r2, r5
   1b388:	ldr	r1, [pc, #1316]	; 1b8b4 <__flatcc_fb_gen_c_reader@@Base+0x580>
   1b38c:	ldr	r0, [r4, #204]	; 0xcc
   1b390:	bl	14094 <fprintf@plt>
   1b394:	ldr	r2, [pc, #1308]	; 1b8b8 <__flatcc_fb_gen_c_reader@@Base+0x584>
   1b398:	ldr	r1, [pc, #1308]	; 1b8bc <__flatcc_fb_gen_c_reader@@Base+0x588>
   1b39c:	mov	r0, r4
   1b3a0:	bl	16ee8 <__flatcc_fb_gen_c_includes@@Base>
   1b3a4:	ldr	r3, [r4, #204]	; 0xcc
   1b3a8:	mov	r2, #39	; 0x27
   1b3ac:	mov	r1, #1
   1b3b0:	ldr	r0, [pc, #1288]	; 1b8c0 <__flatcc_fb_gen_c_reader@@Base+0x58c>
   1b3b4:	bl	1401c <fwrite@plt>
   1b3b8:	ldr	r3, [r4, #204]	; 0xcc
   1b3bc:	mov	r2, #58	; 0x3a
   1b3c0:	mov	r1, #1
   1b3c4:	ldr	r0, [pc, #1272]	; 1b8c4 <__flatcc_fb_gen_c_reader@@Base+0x590>
   1b3c8:	bl	1401c <fwrite@plt>
   1b3cc:	ldr	r3, [r4, #212]	; 0xd4
   1b3d0:	ldr	r0, [r4, #204]	; 0xcc
   1b3d4:	ldr	r3, [r3, #140]	; 0x8c
   1b3d8:	cmp	r3, #0
   1b3dc:	bne	1b7dc <__flatcc_fb_gen_c_reader@@Base+0x4a8>
   1b3e0:	ldr	r3, [r4, #208]	; 0xd0
   1b3e4:	ldrh	r2, [r3, #16]
   1b3e8:	cmp	r2, #2
   1b3ec:	beq	1b804 <__flatcc_fb_gen_c_reader@@Base+0x4d0>
   1b3f0:	mov	r3, r4
   1b3f4:	mov	r2, r4
   1b3f8:	ldr	r1, [pc, #1224]	; 1b8c8 <__flatcc_fb_gen_c_reader@@Base+0x594>
   1b3fc:	bl	14094 <fprintf@plt>
   1b400:	ldr	r3, [r4, #208]	; 0xd0
   1b404:	ldrh	r2, [r3, #32]
   1b408:	cmp	r2, #2
   1b40c:	beq	1b834 <__flatcc_fb_gen_c_reader@@Base+0x500>
   1b410:	ldr	r2, [r4, #212]	; 0xd4
   1b414:	ldr	r0, [r4, #204]	; 0xcc
   1b418:	mov	r3, r4
   1b41c:	ldr	r2, [r2, #104]	; 0x68
   1b420:	ldr	r1, [pc, #1188]	; 1b8cc <__flatcc_fb_gen_c_reader@@Base+0x598>
   1b424:	str	r2, [sp]
   1b428:	mov	r2, r4
   1b42c:	bl	14094 <fprintf@plt>
   1b430:	ldr	r1, [r4, #204]	; 0xcc
   1b434:	mov	r0, #10
   1b438:	bl	140f4 <fputc@plt>
   1b43c:	ldr	r3, [r4, #208]	; 0xd0
   1b440:	ldr	r5, [r3, #44]	; 0x2c
   1b444:	cmp	r5, #0
   1b448:	beq	1b464 <__flatcc_fb_gen_c_reader@@Base+0x130>
   1b44c:	mov	r1, r5
   1b450:	mov	r0, r4
   1b454:	bl	17874 <__flatcc_fb_codegen_c@@Base+0x478>
   1b458:	ldr	r5, [r5, #120]	; 0x78
   1b45c:	cmp	r5, #0
   1b460:	bne	1b44c <__flatcc_fb_gen_c_reader@@Base+0x118>
   1b464:	ldr	r1, [r4, #204]	; 0xcc
   1b468:	mov	r0, #10
   1b46c:	bl	140f4 <fputc@plt>
   1b470:	ldr	r3, [r4, #208]	; 0xd0
   1b474:	ldr	r5, [r3, #40]	; 0x28
   1b478:	cmp	r5, #0
   1b47c:	bne	1b490 <__flatcc_fb_gen_c_reader@@Base+0x15c>
   1b480:	b	1b668 <__flatcc_fb_gen_c_reader@@Base+0x334>
   1b484:	ldr	r5, [r5]
   1b488:	cmp	r5, #0
   1b48c:	beq	1b4b4 <__flatcc_fb_gen_c_reader@@Base+0x180>
   1b490:	ldrh	r3, [r5, #8]
   1b494:	cmp	r3, #0
   1b498:	bne	1b484 <__flatcc_fb_gen_c_reader@@Base+0x150>
   1b49c:	mov	r1, r5
   1b4a0:	mov	r0, r4
   1b4a4:	bl	17874 <__flatcc_fb_codegen_c@@Base+0x478>
   1b4a8:	ldr	r5, [r5]
   1b4ac:	cmp	r5, #0
   1b4b0:	bne	1b490 <__flatcc_fb_gen_c_reader@@Base+0x15c>
   1b4b4:	ldr	r3, [r4, #208]	; 0xd0
   1b4b8:	ldr	r6, [r3, #40]	; 0x28
   1b4bc:	cmp	r6, #0
   1b4c0:	beq	1b668 <__flatcc_fb_gen_c_reader@@Base+0x334>
   1b4c4:	ldr	sl, [pc, #1028]	; 1b8d0 <__flatcc_fb_gen_c_reader@@Base+0x59c>
   1b4c8:	ldr	r9, [pc, #1028]	; 1b8d4 <__flatcc_fb_gen_c_reader@@Base+0x5a0>
   1b4cc:	ldr	r8, [pc, #1028]	; 1b8d8 <__flatcc_fb_gen_c_reader@@Base+0x5a4>
   1b4d0:	mov	fp, #220	; 0xdc
   1b4d4:	b	1b4e4 <__flatcc_fb_gen_c_reader@@Base+0x1b0>
   1b4d8:	ldr	r6, [r6]
   1b4dc:	cmp	r6, #0
   1b4e0:	beq	1b668 <__flatcc_fb_gen_c_reader@@Base+0x334>
   1b4e4:	ldrh	r3, [r6, #8]
   1b4e8:	cmp	r3, #1
   1b4ec:	bhi	1b4d8 <__flatcc_fb_gen_c_reader@@Base+0x1a4>
   1b4f0:	mov	r2, fp
   1b4f4:	mov	r1, r5
   1b4f8:	add	r0, sp, #28
   1b4fc:	bl	140ac <memset@plt>
   1b500:	mov	r1, r6
   1b504:	ldr	r0, [r6, #12]
   1b508:	add	r2, sp, #28
   1b50c:	bl	170c4 <__flatcc_fb_scoped_symbol_name@@Base>
   1b510:	ldr	r7, [r6, #88]	; 0x58
   1b514:	add	r3, sp, #28
   1b518:	mov	r2, r3
   1b51c:	ldr	r0, [r4, #204]	; 0xcc
   1b520:	mov	r1, sl
   1b524:	str	r4, [sp]
   1b528:	bl	14094 <fprintf@plt>
   1b52c:	mov	r1, r9
   1b530:	ldr	r0, [r4, #204]	; 0xcc
   1b534:	mov	r3, r4
   1b538:	str	r7, [sp]
   1b53c:	add	r2, sp, #28
   1b540:	bl	14094 <fprintf@plt>
   1b544:	lsr	r2, r7, #4
   1b548:	and	r2, r2, #15
   1b54c:	cmp	r2, #9
   1b550:	lsr	lr, r7, #8
   1b554:	and	lr, lr, #15
   1b558:	movls	r1, #48	; 0x30
   1b55c:	movhi	r1, #87	; 0x57
   1b560:	lsr	ip, r7, #12
   1b564:	cmp	lr, #9
   1b568:	and	ip, ip, #15
   1b56c:	lsr	r0, r7, #16
   1b570:	and	r0, r0, #15
   1b574:	lsr	r3, r7, #20
   1b578:	and	r3, r3, #15
   1b57c:	strb	r5, [sp, #24]
   1b580:	add	r1, r2, r1
   1b584:	strb	r1, [sp, #10]
   1b588:	movls	r1, #48	; 0x30
   1b58c:	movhi	r1, #87	; 0x57
   1b590:	add	lr, lr, r1
   1b594:	cmp	ip, #9
   1b598:	strb	lr, [sp, #15]
   1b59c:	movls	lr, #48	; 0x30
   1b5a0:	movhi	lr, #87	; 0x57
   1b5a4:	add	ip, ip, lr
   1b5a8:	cmp	r0, #9
   1b5ac:	lsr	r2, r7, #24
   1b5b0:	strb	ip, [sp, #14]
   1b5b4:	and	r2, r2, #15
   1b5b8:	movls	ip, #48	; 0x30
   1b5bc:	movhi	ip, #87	; 0x57
   1b5c0:	cmp	r3, #9
   1b5c4:	add	r0, r0, ip
   1b5c8:	and	r1, r7, #15
   1b5cc:	movls	ip, #48	; 0x30
   1b5d0:	movhi	ip, #87	; 0x57
   1b5d4:	cmp	r2, #9
   1b5d8:	add	r3, r3, ip
   1b5dc:	lsr	r7, r7, #28
   1b5e0:	movls	ip, #48	; 0x30
   1b5e4:	movhi	ip, #87	; 0x57
   1b5e8:	cmp	r1, #9
   1b5ec:	add	r2, r2, ip
   1b5f0:	movls	ip, #48	; 0x30
   1b5f4:	movhi	ip, #87	; 0x57
   1b5f8:	cmp	r7, #9
   1b5fc:	add	r1, r1, ip
   1b600:	movls	ip, #48	; 0x30
   1b604:	movhi	ip, #87	; 0x57
   1b608:	mov	lr, #92	; 0x5c
   1b60c:	add	r7, r7, ip
   1b610:	strb	r0, [sp, #19]
   1b614:	mov	ip, #120	; 0x78
   1b618:	strb	r3, [sp, #18]
   1b61c:	strb	r2, [sp, #23]
   1b620:	strb	r1, [sp, #11]
   1b624:	add	r3, sp, #8
   1b628:	add	r2, sp, #28
   1b62c:	mov	r1, r8
   1b630:	ldr	r0, [r4, #204]	; 0xcc
   1b634:	strb	r7, [sp, #22]
   1b638:	strb	lr, [sp, #8]
   1b63c:	strb	lr, [sp, #12]
   1b640:	strb	lr, [sp, #16]
   1b644:	strb	lr, [sp, #20]
   1b648:	strb	ip, [sp, #9]
   1b64c:	strb	ip, [sp, #13]
   1b650:	strb	ip, [sp, #17]
   1b654:	strb	ip, [sp, #21]
   1b658:	bl	14094 <fprintf@plt>
   1b65c:	ldr	r6, [r6]
   1b660:	cmp	r6, #0
   1b664:	bne	1b4e4 <__flatcc_fb_gen_c_reader@@Base+0x1b0>
   1b668:	ldr	r1, [r4, #204]	; 0xcc
   1b66c:	mov	r0, #10
   1b670:	bl	140f4 <fputc@plt>
   1b674:	ldr	r3, [r4, #208]	; 0xd0
   1b678:	ldr	r5, [r3, #40]	; 0x28
   1b67c:	cmp	r5, #0
   1b680:	bne	1b694 <__flatcc_fb_gen_c_reader@@Base+0x360>
   1b684:	b	1b6b8 <__flatcc_fb_gen_c_reader@@Base+0x384>
   1b688:	ldr	r5, [r5]
   1b68c:	cmp	r5, #0
   1b690:	beq	1b6b8 <__flatcc_fb_gen_c_reader@@Base+0x384>
   1b694:	ldrh	r3, [r5, #8]
   1b698:	cmp	r3, #3
   1b69c:	bne	1b688 <__flatcc_fb_gen_c_reader@@Base+0x354>
   1b6a0:	mov	r1, r5
   1b6a4:	mov	r0, r4
   1b6a8:	bl	179d4 <__flatcc_fb_codegen_c@@Base+0x5d8>
   1b6ac:	ldr	r5, [r5]
   1b6b0:	cmp	r5, #0
   1b6b4:	bne	1b694 <__flatcc_fb_gen_c_reader@@Base+0x360>
   1b6b8:	ldr	r1, [r4, #204]	; 0xcc
   1b6bc:	mov	r0, #10
   1b6c0:	bl	140f4 <fputc@plt>
   1b6c4:	ldr	r3, [r4, #208]	; 0xd0
   1b6c8:	ldr	r5, [r3, #44]	; 0x2c
   1b6cc:	cmp	r5, #0
   1b6d0:	beq	1b6f0 <__flatcc_fb_gen_c_reader@@Base+0x3bc>
   1b6d4:	mov	r1, r5
   1b6d8:	mov	r0, r4
   1b6dc:	bl	183fc <__flatcc_fb_codegen_c@@Base+0x1000>
   1b6e0:	ldr	r5, [r5, #120]	; 0x78
   1b6e4:	cmp	r5, #0
   1b6e8:	bne	1b6d4 <__flatcc_fb_gen_c_reader@@Base+0x3a0>
   1b6ec:	ldr	r3, [r4, #208]	; 0xd0
   1b6f0:	ldr	r5, [r3, #40]	; 0x28
   1b6f4:	cmp	r5, #0
   1b6f8:	beq	1b738 <__flatcc_fb_gen_c_reader@@Base+0x404>
   1b6fc:	ldrh	r3, [r5, #8]
   1b700:	cmp	r3, #4
   1b704:	ldrls	pc, [pc, r3, lsl #2]
   1b708:	b	1b7a8 <__flatcc_fb_gen_c_reader@@Base+0x474>
   1b70c:	andeq	fp, r1, ip, lsl #15
   1b710:	andeq	fp, r1, ip, lsr #14
   1b714:	andeq	fp, r1, ip, lsr #14
   1b718:	andeq	fp, r1, ip, lsr #14
   1b71c:	andeq	fp, r1, r0, lsr #14
   1b720:	mov	r1, r5
   1b724:	mov	r0, r4
   1b728:	bl	179d4 <__flatcc_fb_codegen_c@@Base+0x5d8>
   1b72c:	ldr	r5, [r5]
   1b730:	cmp	r5, #0
   1b734:	bne	1b6fc <__flatcc_fb_gen_c_reader@@Base+0x3c8>
   1b738:	ldr	r1, [r4, #204]	; 0xcc
   1b73c:	mov	r0, #10
   1b740:	bl	140f4 <fputc@plt>
   1b744:	ldr	r3, [r4, #212]	; 0xd4
   1b748:	ldr	r0, [r4, #204]	; 0xcc
   1b74c:	ldr	r3, [r3, #140]	; 0x8c
   1b750:	cmp	r3, #0
   1b754:	beq	1b770 <__flatcc_fb_gen_c_reader@@Base+0x43c>
   1b758:	mov	r3, r0
   1b75c:	mov	r2, #36	; 0x24
   1b760:	mov	r1, #1
   1b764:	ldr	r0, [pc, #368]	; 1b8dc <__flatcc_fb_gen_c_reader@@Base+0x5a8>
   1b768:	bl	1401c <fwrite@plt>
   1b76c:	ldr	r0, [r4, #204]	; 0xcc
   1b770:	ldr	r3, [r4, #208]	; 0xd0
   1b774:	ldr	r1, [pc, #356]	; 1b8e0 <__flatcc_fb_gen_c_reader@@Base+0x5ac>
   1b778:	ldr	r2, [r3, #164]	; 0xa4
   1b77c:	bl	14094 <fprintf@plt>
   1b780:	mov	r0, #0
   1b784:	add	sp, sp, #252	; 0xfc
   1b788:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b78c:	mov	r1, r5
   1b790:	mov	r0, r4
   1b794:	bl	19064 <__flatcc_fb_codegen_c@@Base+0x1c68>
   1b798:	ldr	r5, [r5]
   1b79c:	cmp	r5, #0
   1b7a0:	bne	1b6fc <__flatcc_fb_gen_c_reader@@Base+0x3c8>
   1b7a4:	b	1b738 <__flatcc_fb_gen_c_reader@@Base+0x404>
   1b7a8:	ldr	r1, [pc, #308]	; 1b8e4 <__flatcc_fb_gen_c_reader@@Base+0x5b0>
   1b7ac:	ldr	r2, [pc, #308]	; 1b8e8 <__flatcc_fb_gen_c_reader@@Base+0x5b4>
   1b7b0:	ldr	r3, [pc, #308]	; 1b8ec <__flatcc_fb_gen_c_reader@@Base+0x5b8>
   1b7b4:	ldr	r0, [r1]
   1b7b8:	str	r2, [sp]
   1b7bc:	ldr	r1, [pc, #300]	; 1b8f0 <__flatcc_fb_gen_c_reader@@Base+0x5bc>
   1b7c0:	ldr	r2, [pc, #300]	; 1b8f4 <__flatcc_fb_gen_c_reader@@Base+0x5c0>
   1b7c4:	bl	14094 <fprintf@plt>
   1b7c8:	ldr	r3, [pc, #296]	; 1b8f8 <__flatcc_fb_gen_c_reader@@Base+0x5c4>
   1b7cc:	ldr	r2, [pc, #280]	; 1b8ec <__flatcc_fb_gen_c_reader@@Base+0x5b8>
   1b7d0:	ldr	r1, [pc, #284]	; 1b8f4 <__flatcc_fb_gen_c_reader@@Base+0x5c0>
   1b7d4:	ldr	r0, [pc, #288]	; 1b8fc <__flatcc_fb_gen_c_reader@@Base+0x5c8>
   1b7d8:	bl	14148 <__assert_fail@plt>
   1b7dc:	mov	r3, r0
   1b7e0:	mov	r2, #36	; 0x24
   1b7e4:	mov	r1, #1
   1b7e8:	ldr	r0, [pc, #272]	; 1b900 <__flatcc_fb_gen_c_reader@@Base+0x5cc>
   1b7ec:	bl	1401c <fwrite@plt>
   1b7f0:	ldr	r3, [r4, #208]	; 0xd0
   1b7f4:	ldr	r0, [r4, #204]	; 0xcc
   1b7f8:	ldrh	r2, [r3, #16]
   1b7fc:	cmp	r2, #2
   1b800:	bne	1b3f0 <__flatcc_fb_gen_c_reader@@Base+0xbc>
   1b804:	ldr	r2, [r3, #8]
   1b808:	ldr	r1, [pc, #244]	; 1b904 <__flatcc_fb_gen_c_reader@@Base+0x5d0>
   1b80c:	str	r2, [sp, #4]
   1b810:	ldr	r2, [r3, #12]
   1b814:	mov	r3, r4
   1b818:	str	r2, [sp]
   1b81c:	mov	r2, r4
   1b820:	bl	14094 <fprintf@plt>
   1b824:	ldr	r3, [r4, #208]	; 0xd0
   1b828:	ldrh	r2, [r3, #32]
   1b82c:	cmp	r2, #2
   1b830:	bne	1b410 <__flatcc_fb_gen_c_reader@@Base+0xdc>
   1b834:	ldr	r2, [r3, #24]
   1b838:	ldr	r0, [r4, #204]	; 0xcc
   1b83c:	str	r2, [sp, #4]
   1b840:	ldr	r3, [r3, #28]
   1b844:	mov	r2, r4
   1b848:	str	r3, [sp]
   1b84c:	ldr	r1, [pc, #180]	; 1b908 <__flatcc_fb_gen_c_reader@@Base+0x5d4>
   1b850:	mov	r3, r4
   1b854:	bl	14094 <fprintf@plt>
   1b858:	b	1b430 <__flatcc_fb_gen_c_reader@@Base+0xfc>
   1b85c:	ldr	r3, [r4, #204]	; 0xcc
   1b860:	ldr	r2, [pc, #164]	; 1b90c <__flatcc_fb_gen_c_reader@@Base+0x5d8>
   1b864:	mov	r1, #1
   1b868:	ldr	r0, [pc, #160]	; 1b910 <__flatcc_fb_gen_c_reader@@Base+0x5dc>
   1b86c:	bl	1401c <fwrite@plt>
   1b870:	mov	r3, r4
   1b874:	mov	r2, r5
   1b878:	ldr	r1, [pc, #52]	; 1b8b4 <__flatcc_fb_gen_c_reader@@Base+0x580>
   1b87c:	ldr	r0, [r4, #204]	; 0xcc
   1b880:	bl	14094 <fprintf@plt>
   1b884:	mov	r0, r4
   1b888:	ldr	r2, [pc, #40]	; 1b8b8 <__flatcc_fb_gen_c_reader@@Base+0x584>
   1b88c:	ldr	r1, [pc, #40]	; 1b8bc <__flatcc_fb_gen_c_reader@@Base+0x588>
   1b890:	bl	16ee8 <__flatcc_fb_gen_c_includes@@Base>
   1b894:	ldr	r3, [r4, #204]	; 0xcc
   1b898:	mov	r2, #39	; 0x27
   1b89c:	mov	r1, #1
   1b8a0:	ldr	r0, [pc, #24]	; 1b8c0 <__flatcc_fb_gen_c_reader@@Base+0x58c>
   1b8a4:	bl	1401c <fwrite@plt>
   1b8a8:	b	1b3cc <__flatcc_fb_gen_c_reader@@Base+0x98>
   1b8ac:	muleq	r4, r0, r7
   1b8b0:	ldrdeq	r5, [r4], -r4
   1b8b4:	andeq	fp, r4, r8, ror r9
   1b8b8:			; <UNDEFINED> instruction: 0x0004b9b8
   1b8bc:	ldrdeq	sl, [r5], -ip
   1b8c0:	andeq	fp, r4, r4, asr #19
   1b8c4:	muleq	r4, r8, fp
   1b8c8:	andeq	fp, r4, r0, lsr #20
   1b8cc:	andeq	fp, r4, r4, lsl #21
   1b8d0:			; <UNDEFINED> instruction: 0x0004babc
   1b8d4:	andeq	fp, r4, r0, lsl #22
   1b8d8:	andeq	fp, r4, ip, lsr #22
   1b8dc:	andeq	fp, r4, ip, asr #14
   1b8e0:	andeq	fp, r4, ip, ror fp
   1b8e4:	andeq	pc, r6, r8, lsr #1
   1b8e8:	andeq	fp, r4, r0, asr fp
   1b8ec:	andeq	r0, r0, r8, lsl #13
   1b8f0:	ldrdeq	r4, [r4], -ip
   1b8f4:	andeq	r4, r4, ip, lsl #3
   1b8f8:	andeq	r4, r4, r0, ror r1
   1b8fc:	andeq	sp, r4, r4, ror r2
   1b900:	andeq	r5, r4, r8, ror #17
   1b904:	andeq	fp, r4, ip, ror #19
   1b908:	andeq	fp, r4, r4, asr sl
   1b90c:			; <UNDEFINED> instruction: 0x000001bb
   1b910:			; <UNDEFINED> instruction: 0x0004b7bc

0001b914 <__flatcc_gen_sort@@Base>:
   1b914:	push	{r4, lr}
   1b918:	mov	r4, r0
   1b91c:	sub	sp, sp, #24
   1b920:	mov	r2, r0
   1b924:	ldr	r1, [pc, #240]	; 1ba1c <__flatcc_gen_sort@@Base+0x108>
   1b928:	ldr	r0, [r0, #204]	; 0xcc
   1b92c:	bl	14094 <fprintf@plt>
   1b930:	mov	r3, r4
   1b934:	mov	r2, r4
   1b938:	ldr	r0, [r4, #204]	; 0xcc
   1b93c:	ldr	r1, [pc, #220]	; 1ba20 <__flatcc_gen_sort@@Base+0x10c>
   1b940:	bl	14094 <fprintf@plt>
   1b944:	ldr	r0, [r4, #204]	; 0xcc
   1b948:	mov	r3, r4
   1b94c:	mov	r2, r4
   1b950:	str	r4, [sp]
   1b954:	ldr	r1, [pc, #200]	; 1ba24 <__flatcc_gen_sort@@Base+0x110>
   1b958:	bl	14094 <fprintf@plt>
   1b95c:	ldr	r0, [r4, #204]	; 0xcc
   1b960:	mov	r3, r4
   1b964:	mov	r2, r4
   1b968:	str	r4, [sp, #4]
   1b96c:	str	r4, [sp]
   1b970:	ldr	r1, [pc, #176]	; 1ba28 <__flatcc_gen_sort@@Base+0x114>
   1b974:	bl	14094 <fprintf@plt>
   1b978:	mov	r3, r4
   1b97c:	mov	r2, r4
   1b980:	ldr	r0, [r4, #204]	; 0xcc
   1b984:	ldr	r1, [pc, #160]	; 1ba2c <__flatcc_gen_sort@@Base+0x118>
   1b988:	bl	14094 <fprintf@plt>
   1b98c:	ldr	r0, [r4, #204]	; 0xcc
   1b990:	mov	r3, r4
   1b994:	mov	r2, r4
   1b998:	str	r4, [sp, #4]
   1b99c:	str	r4, [sp]
   1b9a0:	ldr	r1, [pc, #136]	; 1ba30 <__flatcc_gen_sort@@Base+0x11c>
   1b9a4:	bl	14094 <fprintf@plt>
   1b9a8:	ldr	r0, [r4, #204]	; 0xcc
   1b9ac:	mov	r3, r4
   1b9b0:	mov	r2, r4
   1b9b4:	str	r4, [sp, #12]
   1b9b8:	str	r4, [sp, #8]
   1b9bc:	str	r4, [sp, #4]
   1b9c0:	str	r4, [sp]
   1b9c4:	ldr	r1, [pc, #104]	; 1ba34 <__flatcc_gen_sort@@Base+0x120>
   1b9c8:	bl	14094 <fprintf@plt>
   1b9cc:	ldr	r0, [r4, #204]	; 0xcc
   1b9d0:	mov	r3, r4
   1b9d4:	mov	r2, r4
   1b9d8:	str	r4, [sp, #4]
   1b9dc:	str	r4, [sp]
   1b9e0:	ldr	r1, [pc, #80]	; 1ba38 <__flatcc_gen_sort@@Base+0x124>
   1b9e4:	bl	14094 <fprintf@plt>
   1b9e8:	ldr	r0, [r4, #204]	; 0xcc
   1b9ec:	mov	r3, r4
   1b9f0:	str	r4, [sp, #16]
   1b9f4:	str	r4, [sp, #12]
   1b9f8:	str	r4, [sp, #8]
   1b9fc:	str	r4, [sp, #4]
   1ba00:	str	r4, [sp]
   1ba04:	mov	r2, r4
   1ba08:	ldr	r1, [pc, #44]	; 1ba3c <__flatcc_gen_sort@@Base+0x128>
   1ba0c:	bl	14094 <fprintf@plt>
   1ba10:	mov	r0, #0
   1ba14:	add	sp, sp, #24
   1ba18:	pop	{r4, pc}
   1ba1c:	ldrdeq	fp, [r4], -r4
   1ba20:	andeq	fp, r4, r4, lsr #31
   1ba24:	strheq	ip, [r4], -r4
   1ba28:	andeq	ip, r4, r8, lsl #3
   1ba2c:	andeq	ip, r4, ip, lsl r2
   1ba30:			; <UNDEFINED> instruction: 0x0004c3b4
   1ba34:	andeq	ip, r4, ip, lsr r4
   1ba38:	andeq	ip, r4, ip, asr #9
   1ba3c:	andeq	ip, r4, r0, lsr r5
   1ba40:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ba44:	sub	sp, sp, #484	; 0x1e4
   1ba48:	ldr	ip, [pc, #476]	; 1bc2c <__flatcc_gen_sort@@Base+0x318>
   1ba4c:	ldr	lr, [sp, #524]	; 0x20c
   1ba50:	ldr	r4, [sp, #520]	; 0x208
   1ba54:	mov	r8, r1
   1ba58:	mov	r1, #0
   1ba5c:	cmp	lr, r1
   1ba60:	mov	r5, r0
   1ba64:	mov	r9, r2
   1ba68:	add	r0, sp, #40	; 0x28
   1ba6c:	mov	r2, #220	; 0xdc
   1ba70:	mov	sl, r3
   1ba74:	ldr	r6, [pc, #436]	; 1bc30 <__flatcc_gen_sort@@Base+0x31c>
   1ba78:	moveq	r6, ip
   1ba7c:	bl	140ac <memset@plt>
   1ba80:	mov	r2, #220	; 0xdc
   1ba84:	mov	r1, #0
   1ba88:	add	r0, sp, #260	; 0x104
   1ba8c:	bl	140ac <memset@plt>
   1ba90:	mov	r1, r4
   1ba94:	ldr	r0, [r4, #12]
   1ba98:	add	r2, sp, #40	; 0x28
   1ba9c:	bl	170c4 <__flatcc_fb_scoped_symbol_name@@Base>
   1baa0:	ldr	r4, [r4, #20]
   1baa4:	cmp	r4, #0
   1baa8:	beq	1bb74 <__flatcc_gen_sort@@Base+0x260>
   1baac:	ldr	fp, [pc, #384]	; 1bc34 <__flatcc_gen_sort@@Base+0x320>
   1bab0:	ldrh	r2, [r4, #24]
   1bab4:	ldr	r1, [r4, #4]
   1bab8:	cmp	r2, #10
   1babc:	ldm	r1, {r3, r7}
   1bac0:	beq	1bb80 <__flatcc_gen_sort@@Base+0x26c>
   1bac4:	cmp	r2, #14
   1bac8:	beq	1bb08 <__flatcc_gen_sort@@Base+0x1f4>
   1bacc:	cmp	r2, #0
   1bad0:	beq	1bb68 <__flatcc_gen_sort@@Base+0x254>
   1bad4:	ldr	r1, [pc, #348]	; 1bc38 <__flatcc_gen_sort@@Base+0x324>
   1bad8:	ldr	r2, [pc, #348]	; 1bc3c <__flatcc_gen_sort@@Base+0x328>
   1badc:	ldr	r3, [pc, #348]	; 1bc40 <__flatcc_gen_sort@@Base+0x32c>
   1bae0:	ldr	r0, [r1]
   1bae4:	str	r2, [sp]
   1bae8:	ldr	r1, [pc, #340]	; 1bc44 <__flatcc_gen_sort@@Base+0x330>
   1baec:	ldr	r2, [pc, #340]	; 1bc48 <__flatcc_gen_sort@@Base+0x334>
   1baf0:	bl	14094 <fprintf@plt>
   1baf4:	ldr	r3, [pc, #336]	; 1bc4c <__flatcc_gen_sort@@Base+0x338>
   1baf8:	ldr	r2, [pc, #320]	; 1bc40 <__flatcc_gen_sort@@Base+0x32c>
   1bafc:	ldr	r1, [pc, #324]	; 1bc48 <__flatcc_gen_sort@@Base+0x334>
   1bb00:	ldr	r0, [pc, #328]	; 1bc50 <__flatcc_gen_sort@@Base+0x33c>
   1bb04:	bl	14148 <__assert_fail@plt>
   1bb08:	ldr	r1, [r4, #16]
   1bb0c:	add	r2, sp, #260	; 0x104
   1bb10:	str	r3, [sp, #36]	; 0x24
   1bb14:	ldr	r0, [r1, #12]
   1bb18:	bl	170c4 <__flatcc_fb_scoped_symbol_name@@Base>
   1bb1c:	ldr	r2, [r4, #16]
   1bb20:	ldr	r3, [sp, #36]	; 0x24
   1bb24:	ldrh	r2, [r2, #8]
   1bb28:	cmp	r2, #0
   1bb2c:	beq	1bbb8 <__flatcc_gen_sort@@Base+0x2a4>
   1bb30:	cmp	r2, #1
   1bb34:	bne	1bbf8 <__flatcc_gen_sort@@Base+0x2e4>
   1bb38:	ldr	r0, [r5, #204]	; 0xcc
   1bb3c:	add	r2, sp, #260	; 0x104
   1bb40:	str	r3, [sp, #24]
   1bb44:	add	r3, sp, #40	; 0x28
   1bb48:	str	r2, [sp, #28]
   1bb4c:	str	r3, [sp, #16]
   1bb50:	str	r7, [sp, #20]
   1bb54:	stm	sp, {r5, r8, r9, sl}
   1bb58:	mov	r3, r6
   1bb5c:	mov	r2, r5
   1bb60:	ldr	r1, [pc, #236]	; 1bc54 <__flatcc_gen_sort@@Base+0x340>
   1bb64:	bl	14094 <fprintf@plt>
   1bb68:	ldr	r4, [r4]
   1bb6c:	cmp	r4, #0
   1bb70:	bne	1bab0 <__flatcc_gen_sort@@Base+0x19c>
   1bb74:	mov	r0, #0
   1bb78:	add	sp, sp, #484	; 0x1e4
   1bb7c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bb80:	ldr	r0, [r5, #204]	; 0xcc
   1bb84:	str	r3, [sp, #24]
   1bb88:	add	r3, sp, #40	; 0x28
   1bb8c:	str	r3, [sp, #16]
   1bb90:	str	r7, [sp, #20]
   1bb94:	stm	sp, {r5, r8, r9, sl}
   1bb98:	mov	r3, r6
   1bb9c:	mov	r2, r5
   1bba0:	mov	r1, fp
   1bba4:	bl	14094 <fprintf@plt>
   1bba8:	ldr	r4, [r4]
   1bbac:	cmp	r4, #0
   1bbb0:	bne	1bab0 <__flatcc_gen_sort@@Base+0x19c>
   1bbb4:	b	1bb74 <__flatcc_gen_sort@@Base+0x260>
   1bbb8:	ldr	r0, [r5, #204]	; 0xcc
   1bbbc:	add	r2, sp, #260	; 0x104
   1bbc0:	str	r3, [sp, #24]
   1bbc4:	add	r3, sp, #40	; 0x28
   1bbc8:	str	r2, [sp, #28]
   1bbcc:	str	r3, [sp, #16]
   1bbd0:	str	r7, [sp, #20]
   1bbd4:	stm	sp, {r5, r8, r9, sl}
   1bbd8:	mov	r3, r6
   1bbdc:	mov	r2, r5
   1bbe0:	ldr	r1, [pc, #112]	; 1bc58 <__flatcc_gen_sort@@Base+0x344>
   1bbe4:	bl	14094 <fprintf@plt>
   1bbe8:	ldr	r4, [r4]
   1bbec:	cmp	r4, #0
   1bbf0:	bne	1bab0 <__flatcc_gen_sort@@Base+0x19c>
   1bbf4:	b	1bb74 <__flatcc_gen_sort@@Base+0x260>
   1bbf8:	ldr	r1, [pc, #56]	; 1bc38 <__flatcc_gen_sort@@Base+0x324>
   1bbfc:	ldr	r2, [pc, #88]	; 1bc5c <__flatcc_gen_sort@@Base+0x348>
   1bc00:	ldr	r3, [pc, #88]	; 1bc60 <__flatcc_gen_sort@@Base+0x34c>
   1bc04:	ldr	r0, [r1]
   1bc08:	str	r2, [sp]
   1bc0c:	ldr	r1, [pc, #48]	; 1bc44 <__flatcc_gen_sort@@Base+0x330>
   1bc10:	ldr	r2, [pc, #48]	; 1bc48 <__flatcc_gen_sort@@Base+0x334>
   1bc14:	bl	14094 <fprintf@plt>
   1bc18:	ldr	r3, [pc, #44]	; 1bc4c <__flatcc_gen_sort@@Base+0x338>
   1bc1c:	ldr	r2, [pc, #60]	; 1bc60 <__flatcc_gen_sort@@Base+0x34c>
   1bc20:	ldr	r1, [pc, #32]	; 1bc48 <__flatcc_gen_sort@@Base+0x334>
   1bc24:	ldr	r0, [pc, #36]	; 1bc50 <__flatcc_gen_sort@@Base+0x33c>
   1bc28:	bl	14148 <__assert_fail@plt>
   1bc2c:	muleq	r4, ip, r6
   1bc30:	andeq	ip, r4, ip, lsl #13
   1bc34:	andeq	ip, r4, r8, lsr #15
   1bc38:	andeq	pc, r6, r8, lsr #1
   1bc3c:	andeq	ip, r4, r0, ror #15
   1bc40:	andeq	r0, r0, r8, asr r5
   1bc44:	ldrdeq	r4, [r4], -ip
   1bc48:	andeq	ip, r4, ip, lsl r7
   1bc4c:	andeq	ip, r4, r8, lsr #11
   1bc50:	andeq	sp, r4, r4, ror r2
   1bc54:	andeq	ip, r4, r0, ror #13
   1bc58:	andeq	ip, r4, r4, lsr #13
   1bc5c:	andeq	ip, r4, r0, ror r7
   1bc60:	andeq	r0, r0, lr, asr #10
   1bc64:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1bc68:	mov	r4, r1
   1bc6c:	sub	sp, sp, #236	; 0xec
   1bc70:	mov	r6, r0
   1bc74:	mov	r5, r2
   1bc78:	add	r0, sp, #12
   1bc7c:	mov	r2, #220	; 0xdc
   1bc80:	mov	r1, #0
   1bc84:	mov	r8, r3
   1bc88:	bl	140ac <memset@plt>
   1bc8c:	ldr	r4, [r4]
   1bc90:	cmp	r4, #0
   1bc94:	beq	1bd58 <__flatcc_gen_sort@@Base+0x444>
   1bc98:	ldr	r2, [sp, #272]	; 0x110
   1bc9c:	ldr	r3, [pc, #680]	; 1bf4c <__flatcc_gen_sort@@Base+0x638>
   1bca0:	cmp	r2, #0
   1bca4:	ldr	r9, [pc, #676]	; 1bf50 <__flatcc_gen_sort@@Base+0x63c>
   1bca8:	ldr	fp, [pc, #676]	; 1bf54 <__flatcc_gen_sort@@Base+0x640>
   1bcac:	ldr	sl, [pc, #676]	; 1bf58 <__flatcc_gen_sort@@Base+0x644>
   1bcb0:	ldr	r7, [pc, #676]	; 1bf5c <__flatcc_gen_sort@@Base+0x648>
   1bcb4:	moveq	r7, r3
   1bcb8:	ldrh	r3, [r4, #72]	; 0x48
   1bcbc:	tst	r3, #4
   1bcc0:	bne	1bd4c <__flatcc_gen_sort@@Base+0x438>
   1bcc4:	ldrh	r3, [r4, #24]
   1bcc8:	cmp	r3, #8
   1bccc:	beq	1bd98 <__flatcc_gen_sort@@Base+0x484>
   1bcd0:	cmp	r3, #14
   1bcd4:	bne	1bd64 <__flatcc_gen_sort@@Base+0x450>
   1bcd8:	ldr	r1, [r4, #16]
   1bcdc:	ldrh	r3, [r1, #8]
   1bce0:	cmp	r3, #1
   1bce4:	beq	1be5c <__flatcc_gen_sort@@Base+0x548>
   1bce8:	cmp	r8, #0
   1bcec:	beq	1bd24 <__flatcc_gen_sort@@Base+0x410>
   1bcf0:	cmp	r5, #0
   1bcf4:	beq	1be80 <__flatcc_gen_sort@@Base+0x56c>
   1bcf8:	tst	r5, #3
   1bcfc:	bne	1bd0c <__flatcc_gen_sort@@Base+0x3f8>
   1bd00:	sub	r3, r8, r5
   1bd04:	cmp	r3, #2
   1bd08:	bgt	1be88 <__flatcc_gen_sort@@Base+0x574>
   1bd0c:	mov	r1, #1
   1bd10:	ldr	r3, [r6, #204]	; 0xcc
   1bd14:	mov	r2, #2
   1bd18:	ldr	r0, [pc, #576]	; 1bf60 <__flatcc_gen_sort@@Base+0x64c>
   1bd1c:	bl	1401c <fwrite@plt>
   1bd20:	ldr	r1, [r4, #16]
   1bd24:	ldr	r0, [r1, #12]
   1bd28:	add	r2, sp, #12
   1bd2c:	bl	170c4 <__flatcc_fb_scoped_symbol_name@@Base>
   1bd30:	add	ip, r5, #1
   1bd34:	mov	r3, r5
   1bd38:	add	r2, sp, #12
   1bd3c:	ldr	r1, [pc, #544]	; 1bf64 <__flatcc_gen_sort@@Base+0x650>
   1bd40:	ldr	r0, [r6, #204]	; 0xcc
   1bd44:	mov	r5, ip
   1bd48:	bl	14094 <fprintf@plt>
   1bd4c:	ldr	r4, [r4]
   1bd50:	cmp	r4, #0
   1bd54:	bne	1bcb8 <__flatcc_gen_sort@@Base+0x3a4>
   1bd58:	mov	r0, r5
   1bd5c:	add	sp, sp, #236	; 0xec
   1bd60:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bd64:	ldr	r1, [pc, #508]	; 1bf68 <__flatcc_gen_sort@@Base+0x654>
   1bd68:	ldr	r2, [pc, #508]	; 1bf6c <__flatcc_gen_sort@@Base+0x658>
   1bd6c:	ldr	r3, [pc, #508]	; 1bf70 <__flatcc_gen_sort@@Base+0x65c>
   1bd70:	ldr	r0, [r1]
   1bd74:	str	r2, [sp]
   1bd78:	ldr	r1, [pc, #500]	; 1bf74 <__flatcc_gen_sort@@Base+0x660>
   1bd7c:	ldr	r2, [pc, #500]	; 1bf78 <__flatcc_gen_sort@@Base+0x664>
   1bd80:	bl	14094 <fprintf@plt>
   1bd84:	ldr	r3, [pc, #496]	; 1bf7c <__flatcc_gen_sort@@Base+0x668>
   1bd88:	ldr	r2, [pc, #480]	; 1bf70 <__flatcc_gen_sort@@Base+0x65c>
   1bd8c:	ldr	r1, [pc, #484]	; 1bf78 <__flatcc_gen_sort@@Base+0x664>
   1bd90:	ldr	r0, [pc, #488]	; 1bf80 <__flatcc_gen_sort@@Base+0x66c>
   1bd94:	bl	14148 <__assert_fail@plt>
   1bd98:	cmp	r8, #0
   1bd9c:	beq	1bdc4 <__flatcc_gen_sort@@Base+0x4b0>
   1bda0:	cmp	r5, #0
   1bda4:	bne	1be0c <__flatcc_gen_sort@@Base+0x4f8>
   1bda8:	cmp	r8, #4
   1bdac:	bgt	1be20 <__flatcc_gen_sort@@Base+0x50c>
   1bdb0:	ldr	r3, [r6, #204]	; 0xcc
   1bdb4:	mov	r2, #2
   1bdb8:	mov	r1, #1
   1bdbc:	ldr	r0, [pc, #412]	; 1bf60 <__flatcc_gen_sort@@Base+0x64c>
   1bdc0:	bl	1401c <fwrite@plt>
   1bdc4:	ldr	r3, [r4, #16]
   1bdc8:	cmp	r3, #5
   1bdcc:	beq	1be3c <__flatcc_gen_sort@@Base+0x528>
   1bdd0:	sub	r3, r3, #1
   1bdd4:	cmp	r3, #10
   1bdd8:	ldrls	pc, [pc, r3, lsl #2]
   1bddc:	b	1bf00 <__flatcc_gen_sort@@Base+0x5ec>
   1bde0:	andeq	fp, r1, r0, asr #30
   1bde4:	andeq	fp, r1, r4, lsr pc
   1bde8:	strdeq	fp, [r1], -r4
   1bdec:	andeq	fp, r1, ip, lsr #29
   1bdf0:	andeq	fp, r1, r0, lsl #30
   1bdf4:	andeq	fp, r1, r4, asr #29
   1bdf8:	ldrdeq	fp, [r1], -r0
   1bdfc:	ldrdeq	fp, [r1], -ip
   1be00:	andeq	fp, r1, r8, ror #29
   1be04:	andeq	fp, r1, r0, lsr #29
   1be08:			; <UNDEFINED> instruction: 0x0001beb8
   1be0c:	tst	r5, #3
   1be10:	bne	1bdb0 <__flatcc_gen_sort@@Base+0x49c>
   1be14:	sub	r3, r8, r5
   1be18:	cmp	r3, #2
   1be1c:	ble	1bdb0 <__flatcc_gen_sort@@Base+0x49c>
   1be20:	mov	r2, r7
   1be24:	ldr	r1, [pc, #344]	; 1bf84 <__flatcc_gen_sort@@Base+0x670>
   1be28:	ldr	r0, [r6, #204]	; 0xcc
   1be2c:	bl	14094 <fprintf@plt>
   1be30:	ldr	r3, [r4, #16]
   1be34:	cmp	r3, #5
   1be38:	bne	1bdd0 <__flatcc_gen_sort@@Base+0x4bc>
   1be3c:	mov	r2, r6
   1be40:	mov	r3, fp
   1be44:	ldr	r0, [r6, #204]	; 0xcc
   1be48:	mov	r1, r9
   1be4c:	str	r5, [sp]
   1be50:	add	r5, r5, #1
   1be54:	bl	14094 <fprintf@plt>
   1be58:	b	1bd4c <__flatcc_gen_sort@@Base+0x438>
   1be5c:	ldr	r3, [sp, #272]	; 0x110
   1be60:	mov	r2, r5
   1be64:	str	r3, [sp]
   1be68:	add	r1, r1, #20
   1be6c:	mov	r3, r8
   1be70:	mov	r0, r6
   1be74:	bl	1bc64 <__flatcc_gen_sort@@Base+0x350>
   1be78:	mov	r5, r0
   1be7c:	b	1bd4c <__flatcc_gen_sort@@Base+0x438>
   1be80:	cmp	r8, #4
   1be84:	ble	1bd0c <__flatcc_gen_sort@@Base+0x3f8>
   1be88:	ldr	r1, [pc, #244]	; 1bf84 <__flatcc_gen_sort@@Base+0x670>
   1be8c:	mov	r2, r7
   1be90:	ldr	r0, [r6, #204]	; 0xcc
   1be94:	bl	14094 <fprintf@plt>
   1be98:	ldr	r1, [r4, #16]
   1be9c:	b	1bd24 <__flatcc_gen_sort@@Base+0x410>
   1bea0:	mov	r2, sl
   1bea4:	ldr	r3, [pc, #220]	; 1bf88 <__flatcc_gen_sort@@Base+0x674>
   1bea8:	b	1be44 <__flatcc_gen_sort@@Base+0x530>
   1beac:	mov	r2, sl
   1beb0:	ldr	r3, [pc, #212]	; 1bf8c <__flatcc_gen_sort@@Base+0x678>
   1beb4:	b	1be44 <__flatcc_gen_sort@@Base+0x530>
   1beb8:	mov	r2, sl
   1bebc:	ldr	r3, [pc, #204]	; 1bf90 <__flatcc_gen_sort@@Base+0x67c>
   1bec0:	b	1be44 <__flatcc_gen_sort@@Base+0x530>
   1bec4:	mov	r2, sl
   1bec8:	ldr	r3, [pc, #196]	; 1bf94 <__flatcc_gen_sort@@Base+0x680>
   1becc:	b	1be44 <__flatcc_gen_sort@@Base+0x530>
   1bed0:	mov	r2, sl
   1bed4:	ldr	r3, [pc, #188]	; 1bf98 <__flatcc_gen_sort@@Base+0x684>
   1bed8:	b	1be44 <__flatcc_gen_sort@@Base+0x530>
   1bedc:	mov	r2, sl
   1bee0:	ldr	r3, [pc, #180]	; 1bf9c <__flatcc_gen_sort@@Base+0x688>
   1bee4:	b	1be44 <__flatcc_gen_sort@@Base+0x530>
   1bee8:	mov	r2, sl
   1beec:	ldr	r3, [pc, #172]	; 1bfa0 <__flatcc_gen_sort@@Base+0x68c>
   1bef0:	b	1be44 <__flatcc_gen_sort@@Base+0x530>
   1bef4:	mov	r2, sl
   1bef8:	ldr	r3, [pc, #164]	; 1bfa4 <__flatcc_gen_sort@@Base+0x690>
   1befc:	b	1be44 <__flatcc_gen_sort@@Base+0x530>
   1bf00:	ldr	r1, [pc, #96]	; 1bf68 <__flatcc_gen_sort@@Base+0x654>
   1bf04:	ldr	r2, [pc, #156]	; 1bfa8 <__flatcc_gen_sort@@Base+0x694>
   1bf08:	mov	r3, #141	; 0x8d
   1bf0c:	ldr	r0, [r1]
   1bf10:	str	r2, [sp]
   1bf14:	ldr	r1, [pc, #88]	; 1bf74 <__flatcc_gen_sort@@Base+0x660>
   1bf18:	ldr	r2, [pc, #140]	; 1bfac <__flatcc_gen_sort@@Base+0x698>
   1bf1c:	bl	14094 <fprintf@plt>
   1bf20:	ldr	r3, [pc, #136]	; 1bfb0 <__flatcc_gen_sort@@Base+0x69c>
   1bf24:	mov	r2, #141	; 0x8d
   1bf28:	ldr	r1, [pc, #124]	; 1bfac <__flatcc_gen_sort@@Base+0x698>
   1bf2c:	ldr	r0, [pc, #76]	; 1bf80 <__flatcc_gen_sort@@Base+0x66c>
   1bf30:	bl	14148 <__assert_fail@plt>
   1bf34:	mov	r2, sl
   1bf38:	ldr	r3, [pc, #116]	; 1bfb4 <__flatcc_gen_sort@@Base+0x6a0>
   1bf3c:	b	1be44 <__flatcc_gen_sort@@Base+0x530>
   1bf40:	mov	r2, sl
   1bf44:	ldr	r3, [pc, #108]	; 1bfb8 <__flatcc_gen_sort@@Base+0x6a4>
   1bf48:	b	1be44 <__flatcc_gen_sort@@Base+0x530>
   1bf4c:	andeq	r5, r4, r8, lsr r9
   1bf50:	andeq	ip, r4, ip, lsr #16
   1bf54:	muleq	r4, r8, r3
   1bf58:	andeq	lr, r4, ip, asr #2
   1bf5c:	andeq	r7, r4, r0, lsl #1
   1bf60:	andeq	ip, r4, r8, lsl r8
   1bf64:	andeq	ip, r4, ip, lsl r8
   1bf68:	andeq	pc, r6, r8, lsr #1
   1bf6c:	andeq	ip, r4, r8, lsr r8
   1bf70:	andeq	r0, r0, r2, asr r3
   1bf74:	ldrdeq	r4, [r4], -ip
   1bf78:	andeq	ip, r4, ip, lsl r7
   1bf7c:	ldrdeq	ip, [r4], -r0
   1bf80:	andeq	sp, r4, r4, ror r2
   1bf84:	andeq	ip, r4, r0, lsl r8
   1bf88:	andeq	r4, r4, r8, asr #7
   1bf8c:	muleq	r4, r0, r3
   1bf90:	andeq	r4, r4, r0, asr #7
   1bf94:	andeq	r4, r4, r0, lsr #7
   1bf98:	andeq	r4, r4, r8, lsr #7
   1bf9c:			; <UNDEFINED> instruction: 0x000443b0
   1bfa0:			; <UNDEFINED> instruction: 0x000443b8
   1bfa4:	andeq	r4, r4, r4, lsl #7
   1bfa8:	andeq	r4, r4, r8, ror #9
   1bfac:	muleq	r4, r0, r4
   1bfb0:			; <UNDEFINED> instruction: 0x0004c5bc
   1bfb4:	andeq	r4, r4, r8, ror r3
   1bfb8:	andeq	r4, r4, ip, ror #6
   1bfbc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1bfc0:	sub	sp, sp, #612	; 0x264
   1bfc4:	add	r8, sp, #168	; 0xa8
   1bfc8:	mov	r4, r1
   1bfcc:	mov	r2, #220	; 0xdc
   1bfd0:	mov	r1, #0
   1bfd4:	mov	r5, r0
   1bfd8:	mov	r0, r8
   1bfdc:	bl	140ac <memset@plt>
   1bfe0:	mov	r2, #220	; 0xdc
   1bfe4:	mov	r1, #0
   1bfe8:	add	r0, sp, #388	; 0x184
   1bfec:	bl	140ac <memset@plt>
   1bff0:	mov	r1, r4
   1bff4:	ldr	r0, [r4, #12]
   1bff8:	mov	r2, r8
   1bffc:	bl	170c4 <__flatcc_fb_scoped_symbol_name@@Base>
   1c000:	ldr	r4, [r4, #20]
   1c004:	cmp	r4, #0
   1c008:	beq	1c080 <__flatcc_gen_sort@@Base+0x76c>
   1c00c:	ldr	r9, [pc, #3768]	; 1cecc <__flatcc_gen_sort@@Base+0x15b8>
   1c010:	ldrh	r2, [r4, #72]	; 0x48
   1c014:	ldr	r3, [r4, #4]
   1c018:	tst	r2, #4
   1c01c:	ldm	r3, {r6, r7}
   1c020:	bne	1c05c <__flatcc_gen_sort@@Base+0x748>
   1c024:	ldrh	r3, [r4, #24]
   1c028:	sub	r3, r3, #7
   1c02c:	cmp	r3, #8
   1c030:	ldrls	pc, [pc, r3, lsl #2]
   1c034:	b	1c1f0 <__flatcc_gen_sort@@Base+0x8dc>
   1c038:	andeq	ip, r1, r8, lsr #3
   1c03c:	andeq	ip, r1, r0, ror #2
   1c040:	andeq	ip, r1, r4, lsr r1
   1c044:	andeq	ip, r1, r8, lsl #2
   1c048:	strdeq	ip, [r1], -r0
   1c04c:	strdeq	ip, [r1], -r0
   1c050:	strdeq	ip, [r1], -r0
   1c054:	ldrdeq	ip, [r1], -r0
   1c058:	muleq	r1, r8, r0
   1c05c:	ldr	r0, [r5, #204]	; 0xcc
   1c060:	mov	r3, r7
   1c064:	str	r6, [sp]
   1c068:	mov	r2, r8
   1c06c:	ldr	r1, [pc, #3676]	; 1ced0 <__flatcc_gen_sort@@Base+0x15bc>
   1c070:	bl	14094 <fprintf@plt>
   1c074:	ldr	r4, [r4]
   1c078:	cmp	r4, #0
   1c07c:	bne	1c010 <__flatcc_gen_sort@@Base+0x6fc>
   1c080:	ldr	r1, [r5, #204]	; 0xcc
   1c084:	mov	r0, #10
   1c088:	bl	140f4 <fputc@plt>
   1c08c:	mov	r0, #0
   1c090:	add	sp, sp, #612	; 0x264
   1c094:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c098:	ldr	r1, [r4, #16]
   1c09c:	add	r2, sp, #388	; 0x184
   1c0a0:	ldr	r0, [r1, #12]
   1c0a4:	bl	170c4 <__flatcc_fb_scoped_symbol_name@@Base>
   1c0a8:	ldr	r2, [r4, #16]
   1c0ac:	ldrh	r3, [r2, #8]
   1c0b0:	cmp	r3, #4
   1c0b4:	ldrls	pc, [pc, r3, lsl #2]
   1c0b8:	b	1c410 <__flatcc_gen_sort@@Base+0xafc>
   1c0bc:	andeq	ip, r1, r4, ror #6
   1c0c0:	andeq	ip, r1, r0, lsr #6
   1c0c4:	andeq	ip, r1, r0, lsl r4
   1c0c8:	andeq	ip, r1, r8, ror #5
   1c0cc:	andeq	ip, r1, r4, lsr #7
   1c0d0:	ldr	r1, [r4, #16]
   1c0d4:	add	r2, sp, #388	; 0x184
   1c0d8:	ldr	r0, [r1, #12]
   1c0dc:	bl	170c4 <__flatcc_fb_scoped_symbol_name@@Base>
   1c0e0:	ldr	r2, [r4, #16]
   1c0e4:	ldrh	r3, [r2, #8]
   1c0e8:	cmp	r3, #4
   1c0ec:	ldrls	pc, [pc, r3, lsl #2]
   1c0f0:	b	1c444 <__flatcc_gen_sort@@Base+0xb30>
   1c0f4:	ldrdeq	ip, [r1], -ip	; <UNPREDICTABLE>
   1c0f8:	andeq	ip, r1, r4, lsr #5
   1c0fc:	andeq	ip, r1, r4, asr #8
   1c100:	andeq	ip, r1, ip, ror r2
   1c104:	andeq	ip, r1, r4, lsr #4
   1c108:	str	r6, [sp, #20]
   1c10c:	str	r7, [sp, #16]
   1c110:	str	r8, [sp, #12]
   1c114:	str	r5, [sp, #8]
   1c118:	ldrd	r6, [r4, #96]	; 0x60
   1c11c:	ldr	r0, [r5, #204]	; 0xcc
   1c120:	mov	r2, r5
   1c124:	strd	r6, [sp]
   1c128:	ldr	r1, [pc, #3492]	; 1ced4 <__flatcc_gen_sort@@Base+0x15c0>
   1c12c:	bl	14094 <fprintf@plt>
   1c130:	b	1c074 <__flatcc_gen_sort@@Base+0x760>
   1c134:	str	r6, [sp, #20]
   1c138:	str	r7, [sp, #16]
   1c13c:	str	r8, [sp, #12]
   1c140:	str	r5, [sp, #8]
   1c144:	ldrd	r6, [r4, #96]	; 0x60
   1c148:	ldr	r0, [r5, #204]	; 0xcc
   1c14c:	mov	r2, r5
   1c150:	strd	r6, [sp]
   1c154:	ldr	r1, [pc, #3452]	; 1ced8 <__flatcc_gen_sort@@Base+0x15c4>
   1c158:	bl	14094 <fprintf@plt>
   1c15c:	b	1c074 <__flatcc_gen_sort@@Base+0x760>
   1c160:	ldr	r2, [r4, #16]
   1c164:	cmp	r2, #5
   1c168:	beq	1c4ac <__flatcc_gen_sort@@Base+0xb98>
   1c16c:	sub	r3, r2, #1
   1c170:	cmp	r3, #10
   1c174:	ldrls	pc, [pc, r3, lsl #2]
   1c178:	b	1c478 <__flatcc_gen_sort@@Base+0xb64>
   1c17c:	andeq	ip, r1, r8, lsr #18
   1c180:	andeq	ip, r1, r8, lsl #17
   1c184:	ldrdeq	ip, [r1], -r8
   1c188:	andeq	ip, r1, ip, lsr #17
   1c18c:	andeq	ip, r1, r8, ror r4
   1c190:	andeq	ip, r1, r4, lsl r8
   1c194:	andeq	ip, r1, r8, lsl #15
   1c198:	andeq	ip, r1, r4, ror #16
   1c19c:	andeq	ip, r1, r0, asr #16
   1c1a0:	strdeq	ip, [r1], -r4
   1c1a4:	andeq	ip, r1, r4, ror #14
   1c1a8:	ldr	r3, [r4, #16]
   1c1ac:	cmp	r3, #5
   1c1b0:	beq	1c5a0 <__flatcc_gen_sort@@Base+0xc8c>
   1c1b4:	sub	r3, r3, #1
   1c1b8:	cmp	r3, #10
   1c1bc:	ldrls	pc, [pc, r3, lsl #2]
   1c1c0:	b	1c478 <__flatcc_gen_sort@@Base+0xb64>
   1c1c4:	andeq	ip, r1, r0, lsr r8
   1c1c8:	andeq	ip, r1, r8, lsl r9
   1c1cc:	andeq	ip, r1, r4, lsr #15
   1c1d0:			; <UNDEFINED> instruction: 0x0001c7b4
   1c1d4:	andeq	ip, r1, r8, ror r4
   1c1d8:	ldrdeq	ip, [r1], -r4
   1c1dc:	andeq	ip, r1, r8, asr #17
   1c1e0:	andeq	ip, r1, r4, ror #15
   1c1e4:	strdeq	ip, [r1], -r4
   1c1e8:	andeq	ip, r1, r4, lsl #16
   1c1ec:	andeq	ip, r1, r4, asr #15
   1c1f0:	ldr	r1, [pc, #3300]	; 1cedc <__flatcc_gen_sort@@Base+0x15c8>
   1c1f4:	ldr	r2, [pc, #3300]	; 1cee0 <__flatcc_gen_sort@@Base+0x15cc>
   1c1f8:	ldr	r3, [pc, #3300]	; 1cee4 <__flatcc_gen_sort@@Base+0x15d0>
   1c1fc:	ldr	r0, [r1]
   1c200:	str	r2, [sp]
   1c204:	ldr	r1, [pc, #3292]	; 1cee8 <__flatcc_gen_sort@@Base+0x15d4>
   1c208:	ldr	r2, [pc, #3292]	; 1ceec <__flatcc_gen_sort@@Base+0x15d8>
   1c20c:	bl	14094 <fprintf@plt>
   1c210:	ldr	r3, [pc, #3288]	; 1cef0 <__flatcc_gen_sort@@Base+0x15dc>
   1c214:	ldr	r2, [pc, #3272]	; 1cee4 <__flatcc_gen_sort@@Base+0x15d0>
   1c218:	ldr	r1, [pc, #3276]	; 1ceec <__flatcc_gen_sort@@Base+0x15d8>
   1c21c:	ldr	r0, [pc, #3280]	; 1cef4 <__flatcc_gen_sort@@Base+0x15e0>
   1c220:	bl	14148 <__assert_fail@plt>
   1c224:	add	r3, sp, #388	; 0x184
   1c228:	str	r3, [sp, #24]
   1c22c:	str	r6, [sp, #20]
   1c230:	str	r7, [sp, #16]
   1c234:	str	r8, [sp, #12]
   1c238:	str	r5, [sp, #8]
   1c23c:	ldrd	sl, [r4, #96]	; 0x60
   1c240:	ldr	r0, [r5, #204]	; 0xcc
   1c244:	mov	r2, r5
   1c248:	strd	sl, [sp]
   1c24c:	ldr	r1, [pc, #3236]	; 1cef8 <__flatcc_gen_sort@@Base+0x15e4>
   1c250:	bl	14094 <fprintf@plt>
   1c254:	mov	r3, #0
   1c258:	str	r3, [sp, #4]
   1c25c:	ldr	r1, [r4, #16]
   1c260:	mov	r3, r6
   1c264:	str	r1, [sp]
   1c268:	mov	r2, r7
   1c26c:	mov	r1, r8
   1c270:	mov	r0, r5
   1c274:	bl	1ba40 <__flatcc_gen_sort@@Base+0x12c>
   1c278:	b	1c074 <__flatcc_gen_sort@@Base+0x760>
   1c27c:	ldrh	r3, [r4, #56]	; 0x38
   1c280:	ldr	r2, [r2, #40]	; 0x28
   1c284:	sub	r3, r3, #3
   1c288:	cmp	r3, #3
   1c28c:	ldrls	pc, [pc, r3, lsl #2]
   1c290:	b	1c6c8 <__flatcc_gen_sort@@Base+0xdb4>
   1c294:	andeq	ip, r1, r0, ror #19
   1c298:	andeq	ip, r1, ip, lsr #19
   1c29c:	andeq	ip, r1, r8, ror r9
   1c2a0:	andeq	ip, r1, r4, asr #18
   1c2a4:	ldrh	r3, [r4, #74]	; 0x4a
   1c2a8:	ldr	r0, [r5, #204]	; 0xcc
   1c2ac:	add	r1, sp, #388	; 0x184
   1c2b0:	str	r3, [sp, #40]	; 0x28
   1c2b4:	ldrd	r2, [r4, #88]	; 0x58
   1c2b8:	str	r1, [sp, #24]
   1c2bc:	str	r6, [sp, #20]
   1c2c0:	strd	r2, [sp, #32]
   1c2c4:	str	r7, [sp, #16]
   1c2c8:	str	r8, [sp, #12]
   1c2cc:	str	r5, [sp, #8]
   1c2d0:	ldrd	r6, [r4, #96]	; 0x60
   1c2d4:	mov	r2, r5
   1c2d8:	ldr	r1, [pc, #3100]	; 1cefc <__flatcc_gen_sort@@Base+0x15e8>
   1c2dc:	strd	r6, [sp]
   1c2e0:	bl	14094 <fprintf@plt>
   1c2e4:	b	1c074 <__flatcc_gen_sort@@Base+0x760>
   1c2e8:	add	r3, sp, #388	; 0x184
   1c2ec:	str	r3, [sp, #28]
   1c2f0:	str	r3, [sp, #24]
   1c2f4:	str	r6, [sp, #20]
   1c2f8:	str	r7, [sp, #16]
   1c2fc:	str	r8, [sp, #12]
   1c300:	str	r5, [sp, #8]
   1c304:	ldrd	r6, [r4, #96]	; 0x60
   1c308:	ldr	r0, [r5, #204]	; 0xcc
   1c30c:	mov	r2, r5
   1c310:	strd	r6, [sp]
   1c314:	mov	r1, r9
   1c318:	bl	14094 <fprintf@plt>
   1c31c:	b	1c074 <__flatcc_gen_sort@@Base+0x760>
   1c320:	ldrh	r3, [r2, #10]
   1c324:	tst	r3, #8
   1c328:	bne	1ce8c <__flatcc_gen_sort@@Base+0x1578>
   1c32c:	add	r3, sp, #388	; 0x184
   1c330:	str	r3, [sp, #28]
   1c334:	str	r3, [sp, #24]
   1c338:	str	r6, [sp, #20]
   1c33c:	str	r7, [sp, #16]
   1c340:	str	r8, [sp, #12]
   1c344:	str	r5, [sp, #8]
   1c348:	ldrd	r6, [r4, #96]	; 0x60
   1c34c:	ldr	r0, [r5, #204]	; 0xcc
   1c350:	mov	r2, r5
   1c354:	strd	r6, [sp]
   1c358:	ldr	r1, [pc, #2976]	; 1cf00 <__flatcc_gen_sort@@Base+0x15ec>
   1c35c:	bl	14094 <fprintf@plt>
   1c360:	b	1c074 <__flatcc_gen_sort@@Base+0x760>
   1c364:	ldrh	r3, [r2, #10]
   1c368:	tst	r3, #8
   1c36c:	bne	1ce74 <__flatcc_gen_sort@@Base+0x1560>
   1c370:	add	r3, sp, #388	; 0x184
   1c374:	str	r3, [sp, #24]
   1c378:	str	r6, [sp, #20]
   1c37c:	str	r7, [sp, #16]
   1c380:	str	r8, [sp, #12]
   1c384:	str	r5, [sp, #8]
   1c388:	ldrd	r6, [r4, #96]	; 0x60
   1c38c:	ldr	r0, [r5, #204]	; 0xcc
   1c390:	mov	r2, r5
   1c394:	strd	r6, [sp]
   1c398:	ldr	r1, [pc, #2916]	; 1cf04 <__flatcc_gen_sort@@Base+0x15f0>
   1c39c:	bl	14094 <fprintf@plt>
   1c3a0:	b	1c074 <__flatcc_gen_sort@@Base+0x760>
   1c3a4:	add	r3, sp, #388	; 0x184
   1c3a8:	str	r3, [sp, #24]
   1c3ac:	str	r6, [sp, #20]
   1c3b0:	str	r7, [sp, #16]
   1c3b4:	str	r8, [sp, #12]
   1c3b8:	str	r5, [sp, #8]
   1c3bc:	ldrd	sl, [r4, #96]	; 0x60
   1c3c0:	ldr	r0, [r5, #204]	; 0xcc
   1c3c4:	mov	r2, r5
   1c3c8:	strd	sl, [sp]
   1c3cc:	ldr	r1, [pc, #2868]	; 1cf08 <__flatcc_gen_sort@@Base+0x15f4>
   1c3d0:	bl	14094 <fprintf@plt>
   1c3d4:	mov	r3, #1
   1c3d8:	b	1c258 <__flatcc_gen_sort@@Base+0x944>
   1c3dc:	add	r3, sp, #388	; 0x184
   1c3e0:	str	r3, [sp, #24]
   1c3e4:	str	r6, [sp, #20]
   1c3e8:	str	r7, [sp, #16]
   1c3ec:	str	r8, [sp, #12]
   1c3f0:	str	r5, [sp, #8]
   1c3f4:	ldrd	r6, [r4, #96]	; 0x60
   1c3f8:	ldr	r0, [r5, #204]	; 0xcc
   1c3fc:	mov	r2, r5
   1c400:	strd	r6, [sp]
   1c404:	ldr	r1, [pc, #2816]	; 1cf0c <__flatcc_gen_sort@@Base+0x15f8>
   1c408:	bl	14094 <fprintf@plt>
   1c40c:	b	1c074 <__flatcc_gen_sort@@Base+0x760>
   1c410:	ldr	r1, [pc, #2756]	; 1cedc <__flatcc_gen_sort@@Base+0x15c8>
   1c414:	ldr	r2, [pc, #2804]	; 1cf10 <__flatcc_gen_sort@@Base+0x15fc>
   1c418:	ldr	r3, [pc, #2804]	; 1cf14 <__flatcc_gen_sort@@Base+0x1600>
   1c41c:	ldr	r0, [r1]
   1c420:	str	r2, [sp]
   1c424:	ldr	r1, [pc, #2748]	; 1cee8 <__flatcc_gen_sort@@Base+0x15d4>
   1c428:	ldr	r2, [pc, #2748]	; 1ceec <__flatcc_gen_sort@@Base+0x15d8>
   1c42c:	bl	14094 <fprintf@plt>
   1c430:	ldr	r3, [pc, #2744]	; 1cef0 <__flatcc_gen_sort@@Base+0x15dc>
   1c434:	ldr	r2, [pc, #2776]	; 1cf14 <__flatcc_gen_sort@@Base+0x1600>
   1c438:	ldr	r1, [pc, #2732]	; 1ceec <__flatcc_gen_sort@@Base+0x15d8>
   1c43c:	ldr	r0, [pc, #2736]	; 1cef4 <__flatcc_gen_sort@@Base+0x15e0>
   1c440:	bl	14148 <__assert_fail@plt>
   1c444:	ldr	r1, [pc, #2704]	; 1cedc <__flatcc_gen_sort@@Base+0x15c8>
   1c448:	ldr	r2, [pc, #2760]	; 1cf18 <__flatcc_gen_sort@@Base+0x1604>
   1c44c:	mov	r3, #1472	; 0x5c0
   1c450:	ldr	r0, [r1]
   1c454:	str	r2, [sp]
   1c458:	ldr	r1, [pc, #2696]	; 1cee8 <__flatcc_gen_sort@@Base+0x15d4>
   1c45c:	ldr	r2, [pc, #2696]	; 1ceec <__flatcc_gen_sort@@Base+0x15d8>
   1c460:	bl	14094 <fprintf@plt>
   1c464:	ldr	r3, [pc, #2692]	; 1cef0 <__flatcc_gen_sort@@Base+0x15dc>
   1c468:	mov	r2, #1472	; 0x5c0
   1c46c:	ldr	r1, [pc, #2680]	; 1ceec <__flatcc_gen_sort@@Base+0x15d8>
   1c470:	ldr	r0, [pc, #2684]	; 1cef4 <__flatcc_gen_sort@@Base+0x15e0>
   1c474:	bl	14148 <__assert_fail@plt>
   1c478:	ldr	r1, [pc, #2652]	; 1cedc <__flatcc_gen_sort@@Base+0x15c8>
   1c47c:	ldr	r2, [pc, #2712]	; 1cf1c <__flatcc_gen_sort@@Base+0x1608>
   1c480:	mov	r3, #141	; 0x8d
   1c484:	ldr	r0, [r1]
   1c488:	str	r2, [sp]
   1c48c:	ldr	r1, [pc, #2644]	; 1cee8 <__flatcc_gen_sort@@Base+0x15d4>
   1c490:	ldr	r2, [pc, #2696]	; 1cf20 <__flatcc_gen_sort@@Base+0x160c>
   1c494:	bl	14094 <fprintf@plt>
   1c498:	ldr	r3, [pc, #2692]	; 1cf24 <__flatcc_gen_sort@@Base+0x1610>
   1c49c:	mov	r2, #141	; 0x8d
   1c4a0:	ldr	r1, [pc, #2680]	; 1cf20 <__flatcc_gen_sort@@Base+0x160c>
   1c4a4:	ldr	r0, [pc, #2632]	; 1cef4 <__flatcc_gen_sort@@Base+0x15e0>
   1c4a8:	bl	14148 <__assert_fail@plt>
   1c4ac:	ldr	r3, [pc, #2676]	; 1cf28 <__flatcc_gen_sort@@Base+0x1614>
   1c4b0:	mov	sl, r5
   1c4b4:	mov	fp, r3
   1c4b8:	ldr	r3, [pc, #2668]	; 1cf2c <__flatcc_gen_sort@@Base+0x1618>
   1c4bc:	str	r3, [sp, #56]	; 0x38
   1c4c0:	ldrh	r3, [r4, #56]	; 0x38
   1c4c4:	sub	r3, r3, #3
   1c4c8:	cmp	r3, #3
   1c4cc:	ldrls	pc, [pc, r3, lsl #2]
   1c4d0:	b	1c6c8 <__flatcc_gen_sort@@Base+0xdb4>
   1c4d4:	andeq	ip, r1, r0, lsr r5
   1c4d8:	andeq	ip, r1, r0, lsr r7
   1c4dc:	strdeq	ip, [r1], -ip	; <UNPREDICTABLE>
   1c4e0:	andeq	ip, r1, r4, ror #9
   1c4e4:	sub	r3, r2, #1
   1c4e8:	cmp	r3, #8
   1c4ec:	ldrls	pc, [pc, r3, lsl #2]
   1c4f0:	b	1cd30 <__flatcc_gen_sort@@Base+0x141c>
   1c4f4:	andeq	ip, r1, r8, lsl sp
   1c4f8:	andeq	ip, r1, r0, lsl sp
   1c4fc:	andeq	ip, r1, r8, lsl #26
   1c500:	muleq	r1, r8, sl
   1c504:	muleq	r1, r8, sl
   1c508:	andeq	ip, r1, r8, lsr #26
   1c50c:	andeq	ip, r1, r0, lsr #26
   1c510:	andeq	ip, r1, r8, ror fp
   1c514:	andeq	ip, r1, r8, asr fp
   1c518:	ldr	r3, [pc, #2576]	; 1cf30 <__flatcc_gen_sort@@Base+0x161c>
   1c51c:	mov	fp, r3
   1c520:	ldr	r3, [pc, #2572]	; 1cf34 <__flatcc_gen_sort@@Base+0x1620>
   1c524:	str	r3, [sp, #56]	; 0x38
   1c528:	ldr	r3, [pc, #2568]	; 1cf38 <__flatcc_gen_sort@@Base+0x1624>
   1c52c:	mov	sl, r3
   1c530:	add	r3, sp, #68	; 0x44
   1c534:	str	r3, [sp, #60]	; 0x3c
   1c538:	mov	r0, r3
   1c53c:	ldr	r1, [pc, #2552]	; 1cf3c <__flatcc_gen_sort@@Base+0x1628>
   1c540:	ldrd	r2, [r4, #48]	; 0x30
   1c544:	bl	14100 <sprintf@plt>
   1c548:	ldr	r3, [sp, #60]	; 0x3c
   1c54c:	ldr	r1, [pc, #2540]	; 1cf40 <__flatcc_gen_sort@@Base+0x162c>
   1c550:	str	r3, [sp, #52]	; 0x34
   1c554:	ldrh	r3, [r4, #74]	; 0x4a
   1c558:	ldr	r0, [r5, #204]	; 0xcc
   1c55c:	str	r3, [sp, #48]	; 0x30
   1c560:	ldrd	r2, [r4, #88]	; 0x58
   1c564:	str	fp, [sp, #36]	; 0x24
   1c568:	str	sl, [sp, #32]
   1c56c:	strd	r2, [sp, #40]	; 0x28
   1c570:	ldr	r3, [sp, #56]	; 0x38
   1c574:	str	r5, [sp, #24]
   1c578:	str	r3, [sp, #28]
   1c57c:	str	r6, [sp, #20]
   1c580:	str	r7, [sp, #16]
   1c584:	str	r8, [sp, #12]
   1c588:	str	r5, [sp, #8]
   1c58c:	ldrd	r6, [r4, #96]	; 0x60
   1c590:	mov	r2, r5
   1c594:	strd	r6, [sp]
   1c598:	bl	14094 <fprintf@plt>
   1c59c:	b	1c074 <__flatcc_gen_sort@@Base+0x760>
   1c5a0:	ldr	r3, [pc, #2432]	; 1cf28 <__flatcc_gen_sort@@Base+0x1614>
   1c5a4:	ldr	r2, [pc, #2432]	; 1cf2c <__flatcc_gen_sort@@Base+0x1618>
   1c5a8:	mov	r1, r5
   1c5ac:	str	r1, [sp, #32]
   1c5b0:	str	r2, [sp, #28]
   1c5b4:	str	r3, [sp, #36]	; 0x24
   1c5b8:	str	r5, [sp, #24]
   1c5bc:	str	r6, [sp, #20]
   1c5c0:	str	r7, [sp, #16]
   1c5c4:	str	r8, [sp, #12]
   1c5c8:	str	r5, [sp, #8]
   1c5cc:	ldrd	sl, [r4, #96]	; 0x60
   1c5d0:	ldr	r0, [r5, #204]	; 0xcc
   1c5d4:	ldr	r1, [pc, #2408]	; 1cf44 <__flatcc_gen_sort@@Base+0x1630>
   1c5d8:	mov	r2, r5
   1c5dc:	strd	sl, [sp]
   1c5e0:	bl	14094 <fprintf@plt>
   1c5e4:	ldr	r1, [r4, #104]	; 0x68
   1c5e8:	cmp	r1, #0
   1c5ec:	beq	1c074 <__flatcc_gen_sort@@Base+0x760>
   1c5f0:	ldrh	r3, [r1, #8]
   1c5f4:	cmp	r3, #0
   1c5f8:	beq	1c654 <__flatcc_gen_sort@@Base+0xd40>
   1c5fc:	cmp	r3, #1
   1c600:	bne	1c694 <__flatcc_gen_sort@@Base+0xd80>
   1c604:	add	r2, sp, #388	; 0x184
   1c608:	ldr	r0, [r1, #12]
   1c60c:	bl	170c4 <__flatcc_fb_scoped_symbol_name@@Base>
   1c610:	add	r3, sp, #388	; 0x184
   1c614:	str	r3, [sp, #24]
   1c618:	str	r3, [sp, #20]
   1c61c:	ldr	r2, [r4, #104]	; 0x68
   1c620:	add	r1, sp, #388	; 0x184
   1c624:	ldr	r0, [r5, #204]	; 0xcc
   1c628:	ldrh	r2, [r2, #104]	; 0x68
   1c62c:	mov	r3, r5
   1c630:	str	r1, [sp, #12]
   1c634:	str	r2, [sp, #16]
   1c638:	str	r6, [sp, #8]
   1c63c:	str	r7, [sp, #4]
   1c640:	str	r8, [sp]
   1c644:	mov	r2, r5
   1c648:	ldr	r1, [pc, #2296]	; 1cf48 <__flatcc_gen_sort@@Base+0x1634>
   1c64c:	bl	14094 <fprintf@plt>
   1c650:	b	1c074 <__flatcc_gen_sort@@Base+0x760>
   1c654:	add	r2, sp, #388	; 0x184
   1c658:	ldr	r0, [r1, #12]
   1c65c:	bl	170c4 <__flatcc_fb_scoped_symbol_name@@Base>
   1c660:	add	r3, sp, #388	; 0x184
   1c664:	ldr	r0, [r5, #204]	; 0xcc
   1c668:	mov	r2, r5
   1c66c:	str	r3, [sp, #20]
   1c670:	str	r3, [sp, #16]
   1c674:	str	r3, [sp, #12]
   1c678:	str	r6, [sp, #8]
   1c67c:	str	r7, [sp, #4]
   1c680:	str	r8, [sp]
   1c684:	mov	r3, r5
   1c688:	ldr	r1, [pc, #2236]	; 1cf4c <__flatcc_gen_sort@@Base+0x1638>
   1c68c:	bl	14094 <fprintf@plt>
   1c690:	b	1c074 <__flatcc_gen_sort@@Base+0x760>
   1c694:	ldr	r1, [pc, #2112]	; 1cedc <__flatcc_gen_sort@@Base+0x15c8>
   1c698:	ldr	r2, [pc, #2224]	; 1cf50 <__flatcc_gen_sort@@Base+0x163c>
   1c69c:	ldr	r3, [pc, #2224]	; 1cf54 <__flatcc_gen_sort@@Base+0x1640>
   1c6a0:	ldr	r0, [r1]
   1c6a4:	str	r2, [sp]
   1c6a8:	ldr	r1, [pc, #2104]	; 1cee8 <__flatcc_gen_sort@@Base+0x15d4>
   1c6ac:	ldr	r2, [pc, #2104]	; 1ceec <__flatcc_gen_sort@@Base+0x15d8>
   1c6b0:	bl	14094 <fprintf@plt>
   1c6b4:	ldr	r3, [pc, #2100]	; 1cef0 <__flatcc_gen_sort@@Base+0x15dc>
   1c6b8:	ldr	r2, [pc, #2196]	; 1cf54 <__flatcc_gen_sort@@Base+0x1640>
   1c6bc:	ldr	r1, [pc, #2088]	; 1ceec <__flatcc_gen_sort@@Base+0x15d8>
   1c6c0:	ldr	r0, [pc, #2092]	; 1cef4 <__flatcc_gen_sort@@Base+0x15e0>
   1c6c4:	bl	14148 <__assert_fail@plt>
   1c6c8:	ldr	r1, [pc, #2060]	; 1cedc <__flatcc_gen_sort@@Base+0x15c8>
   1c6cc:	ldr	r2, [pc, #2120]	; 1cf1c <__flatcc_gen_sort@@Base+0x1608>
   1c6d0:	mov	r3, #260	; 0x104
   1c6d4:	ldr	r0, [r1]
   1c6d8:	str	r2, [sp]
   1c6dc:	ldr	r1, [pc, #2052]	; 1cee8 <__flatcc_gen_sort@@Base+0x15d4>
   1c6e0:	ldr	r2, [pc, #2104]	; 1cf20 <__flatcc_gen_sort@@Base+0x160c>
   1c6e4:	bl	14094 <fprintf@plt>
   1c6e8:	ldr	r3, [pc, #2152]	; 1cf58 <__flatcc_gen_sort@@Base+0x1644>
   1c6ec:	mov	r2, #260	; 0x104
   1c6f0:	ldr	r1, [pc, #2088]	; 1cf20 <__flatcc_gen_sort@@Base+0x160c>
   1c6f4:	ldr	r0, [pc, #2040]	; 1cef4 <__flatcc_gen_sort@@Base+0x15e0>
   1c6f8:	bl	14148 <__assert_fail@plt>
   1c6fc:	sub	r3, r2, #1
   1c700:	cmp	r3, #8
   1c704:	ldrls	pc, [pc, r3, lsl #2]
   1c708:	b	1cd30 <__flatcc_gen_sort@@Base+0x141c>
   1c70c:	ldrdeq	ip, [r1], -r8
   1c710:	ldrdeq	ip, [r1], -r0
   1c714:	strdeq	ip, [r1], -r0
   1c718:	andeq	ip, r1, r4, ror sl
   1c71c:	andeq	ip, r1, r4, ror sl
   1c720:	andeq	ip, r1, r0, ror #23
   1c724:	andeq	ip, r1, r0, lsl #24
   1c728:	strdeq	ip, [r1], -r8
   1c72c:	andeq	ip, r1, r8, ror #23
   1c730:	sub	r3, r2, #1
   1c734:	cmp	r3, #8
   1c738:	ldrls	pc, [pc, r3, lsl #2]
   1c73c:	b	1cd30 <__flatcc_gen_sort@@Base+0x141c>
   1c740:	andeq	ip, r1, r8, lsl #24
   1c744:	andeq	ip, r1, r8, asr #23
   1c748:	andeq	ip, r1, r8, lsl ip
   1c74c:	andeq	ip, r1, r0, asr sl
   1c750:	andeq	ip, r1, r0, asr sl
   1c754:	andeq	ip, r1, r0, lsr ip
   1c758:	andeq	ip, r1, r8, lsr #24
   1c75c:	andeq	ip, r1, r0, lsr #24
   1c760:	andeq	ip, r1, r0, lsl ip
   1c764:	ldrh	r2, [r4, #56]	; 0x38
   1c768:	sub	r2, r2, #3
   1c76c:	cmp	r2, #3
   1c770:	ldrls	pc, [pc, r2, lsl #2]
   1c774:	b	1c6c8 <__flatcc_gen_sort@@Base+0xdb4>
   1c778:			; <UNDEFINED> instruction: 0x0001cab8
   1c77c:	strdeq	ip, [r1], -r4
   1c780:	andeq	ip, r1, ip, lsl #22
   1c784:	andeq	ip, r1, r0, lsr sp
   1c788:	ldr	r3, [pc, #1996]	; 1cf5c <__flatcc_gen_sort@@Base+0x1648>
   1c78c:	mov	fp, r3
   1c790:	ldr	r3, [pc, #1952]	; 1cf38 <__flatcc_gen_sort@@Base+0x1624>
   1c794:	mov	sl, r3
   1c798:	ldr	r3, [pc, #1984]	; 1cf60 <__flatcc_gen_sort@@Base+0x164c>
   1c79c:	str	r3, [sp, #56]	; 0x38
   1c7a0:	b	1c4c0 <__flatcc_gen_sort@@Base+0xbac>
   1c7a4:	ldr	r3, [pc, #1976]	; 1cf64 <__flatcc_gen_sort@@Base+0x1650>
   1c7a8:	ldr	r1, [pc, #1928]	; 1cf38 <__flatcc_gen_sort@@Base+0x1624>
   1c7ac:	ldr	r2, [pc, #1972]	; 1cf68 <__flatcc_gen_sort@@Base+0x1654>
   1c7b0:	b	1c5ac <__flatcc_gen_sort@@Base+0xc98>
   1c7b4:	ldr	r3, [pc, #1968]	; 1cf6c <__flatcc_gen_sort@@Base+0x1658>
   1c7b8:	ldr	r1, [pc, #1912]	; 1cf38 <__flatcc_gen_sort@@Base+0x1624>
   1c7bc:	ldr	r2, [pc, #1964]	; 1cf70 <__flatcc_gen_sort@@Base+0x165c>
   1c7c0:	b	1c5ac <__flatcc_gen_sort@@Base+0xc98>
   1c7c4:	ldr	r3, [pc, #1960]	; 1cf74 <__flatcc_gen_sort@@Base+0x1660>
   1c7c8:	ldr	r1, [pc, #1896]	; 1cf38 <__flatcc_gen_sort@@Base+0x1624>
   1c7cc:	mov	r2, r3
   1c7d0:	b	1c5ac <__flatcc_gen_sort@@Base+0xc98>
   1c7d4:	ldr	r3, [pc, #1948]	; 1cf78 <__flatcc_gen_sort@@Base+0x1664>
   1c7d8:	ldr	r1, [pc, #1880]	; 1cf38 <__flatcc_gen_sort@@Base+0x1624>
   1c7dc:	ldr	r2, [pc, #1944]	; 1cf7c <__flatcc_gen_sort@@Base+0x1668>
   1c7e0:	b	1c5ac <__flatcc_gen_sort@@Base+0xc98>
   1c7e4:	ldr	r3, [pc, #1860]	; 1cf30 <__flatcc_gen_sort@@Base+0x161c>
   1c7e8:	ldr	r1, [pc, #1864]	; 1cf38 <__flatcc_gen_sort@@Base+0x1624>
   1c7ec:	ldr	r2, [pc, #1856]	; 1cf34 <__flatcc_gen_sort@@Base+0x1620>
   1c7f0:	b	1c5ac <__flatcc_gen_sort@@Base+0xc98>
   1c7f4:	ldr	r3, [pc, #1924]	; 1cf80 <__flatcc_gen_sort@@Base+0x166c>
   1c7f8:	ldr	r1, [pc, #1848]	; 1cf38 <__flatcc_gen_sort@@Base+0x1624>
   1c7fc:	ldr	r2, [pc, #1920]	; 1cf84 <__flatcc_gen_sort@@Base+0x1670>
   1c800:	b	1c5ac <__flatcc_gen_sort@@Base+0xc98>
   1c804:	ldr	r3, [pc, #1916]	; 1cf88 <__flatcc_gen_sort@@Base+0x1674>
   1c808:	ldr	r1, [pc, #1832]	; 1cf38 <__flatcc_gen_sort@@Base+0x1624>
   1c80c:	mov	r2, r3
   1c810:	b	1c5ac <__flatcc_gen_sort@@Base+0xc98>
   1c814:	ldr	r3, [pc, #1884]	; 1cf78 <__flatcc_gen_sort@@Base+0x1664>
   1c818:	mov	fp, r3
   1c81c:	ldr	r3, [pc, #1812]	; 1cf38 <__flatcc_gen_sort@@Base+0x1624>
   1c820:	mov	sl, r3
   1c824:	ldr	r3, [pc, #1872]	; 1cf7c <__flatcc_gen_sort@@Base+0x1668>
   1c828:	str	r3, [sp, #56]	; 0x38
   1c82c:	b	1c4c0 <__flatcc_gen_sort@@Base+0xbac>
   1c830:	ldr	r3, [pc, #1876]	; 1cf8c <__flatcc_gen_sort@@Base+0x1678>
   1c834:	ldr	r1, [pc, #1788]	; 1cf38 <__flatcc_gen_sort@@Base+0x1624>
   1c838:	ldr	r2, [pc, #1872]	; 1cf90 <__flatcc_gen_sort@@Base+0x167c>
   1c83c:	b	1c5ac <__flatcc_gen_sort@@Base+0xc98>
   1c840:	ldrh	r2, [r4, #56]	; 0x38
   1c844:	sub	r2, r2, #3
   1c848:	cmp	r2, #3
   1c84c:	ldrls	pc, [pc, r2, lsl #2]
   1c850:	b	1c6c8 <__flatcc_gen_sort@@Base+0xdb4>
   1c854:	strdeq	ip, [r1], -r4
   1c858:	ldrdeq	ip, [r1], -r8
   1c85c:			; <UNDEFINED> instruction: 0x0001ccbc
   1c860:	andeq	ip, r1, r0, asr #22
   1c864:	ldrh	r2, [r4, #56]	; 0x38
   1c868:	sub	r2, r2, #3
   1c86c:	cmp	r2, #3
   1c870:	ldrls	pc, [pc, r2, lsl #2]
   1c874:	b	1c6c8 <__flatcc_gen_sort@@Base+0xdb4>
   1c878:	andeq	ip, r1, r8, lsl r5
   1c87c:	andeq	ip, r1, r4, asr ip
   1c880:	andeq	ip, r1, r8, lsr ip
   1c884:	andeq	ip, r1, r0, ror #22
   1c888:	ldrh	r2, [r4, #56]	; 0x38
   1c88c:	sub	r2, r2, #3
   1c890:	cmp	r2, #3
   1c894:	ldrls	pc, [pc, r2, lsl #2]
   1c898:	b	1c6c8 <__flatcc_gen_sort@@Base+0xdb4>
   1c89c:	andeq	ip, r1, ip, lsl #25
   1c8a0:	andeq	ip, r1, r0, ror ip
   1c8a4:	andeq	ip, r1, r0, lsr #25
   1c8a8:	andeq	ip, r1, r4, lsr #22
   1c8ac:	ldr	r3, [pc, #1720]	; 1cf6c <__flatcc_gen_sort@@Base+0x1658>
   1c8b0:	mov	fp, r3
   1c8b4:	ldr	r3, [pc, #1660]	; 1cf38 <__flatcc_gen_sort@@Base+0x1624>
   1c8b8:	mov	sl, r3
   1c8bc:	ldr	r3, [pc, #1708]	; 1cf70 <__flatcc_gen_sort@@Base+0x165c>
   1c8c0:	str	r3, [sp, #56]	; 0x38
   1c8c4:	b	1c4c0 <__flatcc_gen_sort@@Base+0xbac>
   1c8c8:	ldr	r3, [pc, #1676]	; 1cf5c <__flatcc_gen_sort@@Base+0x1648>
   1c8cc:	ldr	r1, [pc, #1636]	; 1cf38 <__flatcc_gen_sort@@Base+0x1624>
   1c8d0:	ldr	r2, [pc, #1672]	; 1cf60 <__flatcc_gen_sort@@Base+0x164c>
   1c8d4:	b	1c5ac <__flatcc_gen_sort@@Base+0xc98>
   1c8d8:	ldr	r3, [pc, #1668]	; 1cf64 <__flatcc_gen_sort@@Base+0x1650>
   1c8dc:	mov	fp, r3
   1c8e0:	ldr	r3, [pc, #1616]	; 1cf38 <__flatcc_gen_sort@@Base+0x1624>
   1c8e4:	mov	sl, r3
   1c8e8:	ldr	r3, [pc, #1656]	; 1cf68 <__flatcc_gen_sort@@Base+0x1654>
   1c8ec:	str	r3, [sp, #56]	; 0x38
   1c8f0:	b	1c4c0 <__flatcc_gen_sort@@Base+0xbac>
   1c8f4:	ldrh	r2, [r4, #56]	; 0x38
   1c8f8:	sub	r2, r2, #3
   1c8fc:	cmp	r2, #3
   1c900:	ldrls	pc, [pc, r2, lsl #2]
   1c904:	b	1c6c8 <__flatcc_gen_sort@@Base+0xdb4>
   1c908:			; <UNDEFINED> instruction: 0x0001cbb0
   1c90c:	muleq	r1, r8, fp
   1c910:	andeq	ip, r1, r0, lsl #23
   1c914:	andeq	ip, r1, r0, lsr sp
   1c918:	ldr	r3, [pc, #1652]	; 1cf94 <__flatcc_gen_sort@@Base+0x1680>
   1c91c:	ldr	r1, [pc, #1556]	; 1cf38 <__flatcc_gen_sort@@Base+0x1624>
   1c920:	ldr	r2, [pc, #1648]	; 1cf98 <__flatcc_gen_sort@@Base+0x1684>
   1c924:	b	1c5ac <__flatcc_gen_sort@@Base+0xc98>
   1c928:	ldr	r3, [pc, #1628]	; 1cf8c <__flatcc_gen_sort@@Base+0x1678>
   1c92c:	mov	fp, r3
   1c930:	ldr	r3, [pc, #1536]	; 1cf38 <__flatcc_gen_sort@@Base+0x1624>
   1c934:	mov	sl, r3
   1c938:	ldr	r3, [pc, #1616]	; 1cf90 <__flatcc_gen_sort@@Base+0x167c>
   1c93c:	str	r3, [sp, #56]	; 0x38
   1c940:	b	1c4c0 <__flatcc_gen_sort@@Base+0xbac>
   1c944:	sub	r2, r2, #1
   1c948:	cmp	r2, #8
   1c94c:	ldrls	pc, [pc, r2, lsl #2]
   1c950:	b	1cd30 <__flatcc_gen_sort@@Base+0x141c>
   1c954:	strdeq	ip, [r1], -ip	; <UNPREDICTABLE>
   1c958:	strdeq	ip, [r1], -r4
   1c95c:	andeq	ip, r1, ip, ror #27
   1c960:	andeq	ip, r1, r4, ror #26
   1c964:	andeq	ip, r1, r4, ror #26
   1c968:	andeq	ip, r1, ip, asr #27
   1c96c:	ldrdeq	ip, [r1], -ip	; <UNPREDICTABLE>
   1c970:	ldrdeq	ip, [r1], -r4
   1c974:	andeq	ip, r1, r4, ror #27
   1c978:	sub	r2, r2, #1
   1c97c:	cmp	r2, #8
   1c980:	ldrls	pc, [pc, r2, lsl #2]
   1c984:	b	1cd30 <__flatcc_gen_sort@@Base+0x141c>
   1c988:	andeq	ip, r1, ip, ror #28
   1c98c:	andeq	ip, r1, r4, ror #28
   1c990:	andeq	ip, r1, ip, asr #28
   1c994:	andeq	ip, r1, r4, lsl #27
   1c998:	andeq	ip, r1, r4, lsl #27
   1c99c:	andeq	ip, r1, r4, lsl #28
   1c9a0:	andeq	ip, r1, ip, asr lr
   1c9a4:	andeq	ip, r1, r4, asr lr
   1c9a8:	andeq	ip, r1, r4, asr #28
   1c9ac:	sub	r2, r2, #1
   1c9b0:	cmp	r2, #8
   1c9b4:	ldrls	pc, [pc, r2, lsl #2]
   1c9b8:	b	1cd30 <__flatcc_gen_sort@@Base+0x141c>
   1c9bc:	andeq	ip, r1, ip, lsr lr
   1c9c0:	andeq	ip, r1, r4, lsr lr
   1c9c4:	andeq	ip, r1, ip, lsr #28
   1c9c8:	andeq	ip, r1, r8, lsr #27
   1c9cc:	andeq	ip, r1, r8, lsr #27
   1c9d0:	andeq	ip, r1, ip, lsl #28
   1c9d4:	andeq	ip, r1, ip, lsl lr
   1c9d8:	andeq	ip, r1, r4, lsl lr
   1c9dc:	andeq	ip, r1, r4, lsr #28
   1c9e0:	cmp	r2, #11
   1c9e4:	beq	1cea4 <__flatcc_gen_sort@@Base+0x1590>
   1c9e8:	add	r3, sp, #68	; 0x44
   1c9ec:	str	r3, [sp, #60]	; 0x3c
   1c9f0:	mov	r0, r3
   1c9f4:	ldr	r1, [pc, #1344]	; 1cf3c <__flatcc_gen_sort@@Base+0x1628>
   1c9f8:	ldrd	r2, [r4, #48]	; 0x30
   1c9fc:	bl	14100 <sprintf@plt>
   1ca00:	ldr	r3, [sp, #60]	; 0x3c
   1ca04:	add	r1, sp, #388	; 0x184
   1ca08:	str	r3, [sp, #44]	; 0x2c
   1ca0c:	ldrh	r3, [r4, #74]	; 0x4a
   1ca10:	ldr	r0, [r5, #204]	; 0xcc
   1ca14:	str	r3, [sp, #40]	; 0x28
   1ca18:	ldrd	r2, [r4, #88]	; 0x58
   1ca1c:	str	r1, [sp, #28]
   1ca20:	str	r1, [sp, #24]
   1ca24:	strd	r2, [sp, #32]
   1ca28:	str	r6, [sp, #20]
   1ca2c:	str	r7, [sp, #16]
   1ca30:	str	r8, [sp, #12]
   1ca34:	str	r5, [sp, #8]
   1ca38:	ldrd	r6, [r4, #96]	; 0x60
   1ca3c:	mov	r2, r5
   1ca40:	ldr	r1, [pc, #1364]	; 1cf9c <__flatcc_gen_sort@@Base+0x1688>
   1ca44:	strd	r6, [sp]
   1ca48:	bl	14094 <fprintf@plt>
   1ca4c:	b	1c074 <__flatcc_gen_sort@@Base+0x760>
   1ca50:	ldr	r2, [pc, #1352]	; 1cfa0 <__flatcc_gen_sort@@Base+0x168c>
   1ca54:	ldrd	r0, [r4, #48]	; 0x30
   1ca58:	add	r3, sp, #68	; 0x44
   1ca5c:	str	r3, [sp, #60]	; 0x3c
   1ca60:	strd	r0, [sp]
   1ca64:	mov	r0, r3
   1ca68:	ldr	r1, [pc, #1332]	; 1cfa4 <__flatcc_gen_sort@@Base+0x1690>
   1ca6c:	bl	14100 <sprintf@plt>
   1ca70:	b	1c548 <__flatcc_gen_sort@@Base+0xc34>
   1ca74:	ldr	r2, [pc, #1316]	; 1cfa0 <__flatcc_gen_sort@@Base+0x168c>
   1ca78:	ldrd	r0, [r4, #48]	; 0x30
   1ca7c:	add	r3, sp, #68	; 0x44
   1ca80:	str	r3, [sp, #60]	; 0x3c
   1ca84:	strd	r0, [sp]
   1ca88:	mov	r0, r3
   1ca8c:	ldr	r1, [pc, #1300]	; 1cfa8 <__flatcc_gen_sort@@Base+0x1694>
   1ca90:	bl	14100 <sprintf@plt>
   1ca94:	b	1c548 <__flatcc_gen_sort@@Base+0xc34>
   1ca98:	ldr	r2, [pc, #1280]	; 1cfa0 <__flatcc_gen_sort@@Base+0x168c>
   1ca9c:	add	r3, sp, #68	; 0x44
   1caa0:	str	r3, [sp, #60]	; 0x3c
   1caa4:	mov	r0, r3
   1caa8:	ldr	r1, [pc, #1276]	; 1cfac <__flatcc_gen_sort@@Base+0x1698>
   1caac:	ldrb	r3, [r4, #48]	; 0x30
   1cab0:	bl	14100 <sprintf@plt>
   1cab4:	b	1c548 <__flatcc_gen_sort@@Base+0xc34>
   1cab8:	vldr	d7, [r4, #48]	; 0x30
   1cabc:	add	r3, sp, #68	; 0x44
   1cac0:	str	r3, [sp, #60]	; 0x3c
   1cac4:	ldr	r2, [pc, #1132]	; 1cf38 <__flatcc_gen_sort@@Base+0x1624>
   1cac8:	vcvt.f32.f64	s14, d7
   1cacc:	mov	r0, r3
   1cad0:	ldr	r3, [pc, #1180]	; 1cf74 <__flatcc_gen_sort@@Base+0x1660>
   1cad4:	mov	sl, r2
   1cad8:	mov	fp, r3
   1cadc:	str	r3, [sp, #56]	; 0x38
   1cae0:	ldr	r1, [pc, #1224]	; 1cfb0 <__flatcc_gen_sort@@Base+0x169c>
   1cae4:	vcvt.f64.f32	d7, s14
   1cae8:	vmov	r2, r3, d7
   1caec:	bl	14100 <sprintf@plt>
   1caf0:	b	1c548 <__flatcc_gen_sort@@Base+0xc34>
   1caf4:	ldr	r2, [pc, #1144]	; 1cf74 <__flatcc_gen_sort@@Base+0x1660>
   1caf8:	ldr	r1, [pc, #1080]	; 1cf38 <__flatcc_gen_sort@@Base+0x1624>
   1cafc:	mov	fp, r2
   1cb00:	mov	sl, r1
   1cb04:	str	r2, [sp, #56]	; 0x38
   1cb08:	b	1c734 <__flatcc_gen_sort@@Base+0xe20>
   1cb0c:	ldr	r2, [pc, #1120]	; 1cf74 <__flatcc_gen_sort@@Base+0x1660>
   1cb10:	ldr	r1, [pc, #1056]	; 1cf38 <__flatcc_gen_sort@@Base+0x1624>
   1cb14:	mov	fp, r2
   1cb18:	mov	sl, r1
   1cb1c:	str	r2, [sp, #56]	; 0x38
   1cb20:	b	1c700 <__flatcc_gen_sort@@Base+0xdec>
   1cb24:	ldr	r2, [pc, #1128]	; 1cf94 <__flatcc_gen_sort@@Base+0x1680>
   1cb28:	mov	fp, r2
   1cb2c:	ldr	r2, [pc, #1124]	; 1cf98 <__flatcc_gen_sort@@Base+0x1684>
   1cb30:	str	r2, [sp, #56]	; 0x38
   1cb34:	ldr	r2, [pc, #1020]	; 1cf38 <__flatcc_gen_sort@@Base+0x1624>
   1cb38:	mov	sl, r2
   1cb3c:	b	1c4e8 <__flatcc_gen_sort@@Base+0xbd4>
   1cb40:	ldr	r3, [pc, #1080]	; 1cf80 <__flatcc_gen_sort@@Base+0x166c>
   1cb44:	mov	fp, r3
   1cb48:	ldr	r3, [pc, #1076]	; 1cf84 <__flatcc_gen_sort@@Base+0x1670>
   1cb4c:	str	r3, [sp, #56]	; 0x38
   1cb50:	ldr	r3, [pc, #992]	; 1cf38 <__flatcc_gen_sort@@Base+0x1624>
   1cb54:	mov	sl, r3
   1cb58:	ldr	r2, [pc, #1108]	; 1cfb4 <__flatcc_gen_sort@@Base+0x16a0>
   1cb5c:	b	1ca9c <__flatcc_gen_sort@@Base+0x1188>
   1cb60:	ldr	r3, [pc, #968]	; 1cf30 <__flatcc_gen_sort@@Base+0x161c>
   1cb64:	mov	fp, r3
   1cb68:	ldr	r3, [pc, #964]	; 1cf34 <__flatcc_gen_sort@@Base+0x1620>
   1cb6c:	str	r3, [sp, #56]	; 0x38
   1cb70:	ldr	r3, [pc, #960]	; 1cf38 <__flatcc_gen_sort@@Base+0x1624>
   1cb74:	mov	sl, r3
   1cb78:	ldr	r2, [pc, #1080]	; 1cfb8 <__flatcc_gen_sort@@Base+0x16a4>
   1cb7c:	b	1ca9c <__flatcc_gen_sort@@Base+0x1188>
   1cb80:	ldr	r2, [pc, #1024]	; 1cf88 <__flatcc_gen_sort@@Base+0x1674>
   1cb84:	ldr	r1, [pc, #940]	; 1cf38 <__flatcc_gen_sort@@Base+0x1624>
   1cb88:	mov	fp, r2
   1cb8c:	mov	sl, r1
   1cb90:	str	r2, [sp, #56]	; 0x38
   1cb94:	b	1c700 <__flatcc_gen_sort@@Base+0xdec>
   1cb98:	ldr	r2, [pc, #1000]	; 1cf88 <__flatcc_gen_sort@@Base+0x1674>
   1cb9c:	ldr	r1, [pc, #916]	; 1cf38 <__flatcc_gen_sort@@Base+0x1624>
   1cba0:	mov	fp, r2
   1cba4:	mov	sl, r1
   1cba8:	str	r2, [sp, #56]	; 0x38
   1cbac:	b	1c734 <__flatcc_gen_sort@@Base+0xe20>
   1cbb0:	ldr	r3, [pc, #976]	; 1cf88 <__flatcc_gen_sort@@Base+0x1674>
   1cbb4:	ldr	r2, [pc, #892]	; 1cf38 <__flatcc_gen_sort@@Base+0x1624>
   1cbb8:	mov	fp, r3
   1cbbc:	mov	sl, r2
   1cbc0:	str	r3, [sp, #56]	; 0x38
   1cbc4:	b	1c530 <__flatcc_gen_sort@@Base+0xc1c>
   1cbc8:	ldr	r2, [pc, #1004]	; 1cfbc <__flatcc_gen_sort@@Base+0x16a8>
   1cbcc:	b	1ca54 <__flatcc_gen_sort@@Base+0x1140>
   1cbd0:	ldr	r2, [pc, #996]	; 1cfbc <__flatcc_gen_sort@@Base+0x16a8>
   1cbd4:	b	1ca78 <__flatcc_gen_sort@@Base+0x1164>
   1cbd8:	ldr	r2, [pc, #992]	; 1cfc0 <__flatcc_gen_sort@@Base+0x16ac>
   1cbdc:	b	1ca78 <__flatcc_gen_sort@@Base+0x1164>
   1cbe0:	ldr	r2, [pc, #988]	; 1cfc4 <__flatcc_gen_sort@@Base+0x16b0>
   1cbe4:	b	1ca78 <__flatcc_gen_sort@@Base+0x1164>
   1cbe8:	ldr	r2, [pc, #964]	; 1cfb4 <__flatcc_gen_sort@@Base+0x16a0>
   1cbec:	b	1ca78 <__flatcc_gen_sort@@Base+0x1164>
   1cbf0:	ldr	r2, [pc, #976]	; 1cfc8 <__flatcc_gen_sort@@Base+0x16b4>
   1cbf4:	b	1ca78 <__flatcc_gen_sort@@Base+0x1164>
   1cbf8:	ldr	r2, [pc, #952]	; 1cfb8 <__flatcc_gen_sort@@Base+0x16a4>
   1cbfc:	b	1ca78 <__flatcc_gen_sort@@Base+0x1164>
   1cc00:	ldr	r2, [pc, #964]	; 1cfcc <__flatcc_gen_sort@@Base+0x16b8>
   1cc04:	b	1ca78 <__flatcc_gen_sort@@Base+0x1164>
   1cc08:	ldr	r2, [pc, #944]	; 1cfc0 <__flatcc_gen_sort@@Base+0x16ac>
   1cc0c:	b	1ca54 <__flatcc_gen_sort@@Base+0x1140>
   1cc10:	ldr	r2, [pc, #924]	; 1cfb4 <__flatcc_gen_sort@@Base+0x16a0>
   1cc14:	b	1ca54 <__flatcc_gen_sort@@Base+0x1140>
   1cc18:	ldr	r2, [pc, #936]	; 1cfc8 <__flatcc_gen_sort@@Base+0x16b4>
   1cc1c:	b	1ca54 <__flatcc_gen_sort@@Base+0x1140>
   1cc20:	ldr	r2, [pc, #912]	; 1cfb8 <__flatcc_gen_sort@@Base+0x16a4>
   1cc24:	b	1ca54 <__flatcc_gen_sort@@Base+0x1140>
   1cc28:	ldr	r2, [pc, #924]	; 1cfcc <__flatcc_gen_sort@@Base+0x16b8>
   1cc2c:	b	1ca54 <__flatcc_gen_sort@@Base+0x1140>
   1cc30:	ldr	r2, [pc, #908]	; 1cfc4 <__flatcc_gen_sort@@Base+0x16b0>
   1cc34:	b	1ca54 <__flatcc_gen_sort@@Base+0x1140>
   1cc38:	ldr	r2, [pc, #752]	; 1cf30 <__flatcc_gen_sort@@Base+0x161c>
   1cc3c:	mov	fp, r2
   1cc40:	ldr	r2, [pc, #748]	; 1cf34 <__flatcc_gen_sort@@Base+0x1620>
   1cc44:	str	r2, [sp, #56]	; 0x38
   1cc48:	ldr	r2, [pc, #744]	; 1cf38 <__flatcc_gen_sort@@Base+0x1624>
   1cc4c:	mov	sl, r2
   1cc50:	b	1c700 <__flatcc_gen_sort@@Base+0xdec>
   1cc54:	ldr	r2, [pc, #724]	; 1cf30 <__flatcc_gen_sort@@Base+0x161c>
   1cc58:	mov	fp, r2
   1cc5c:	ldr	r2, [pc, #720]	; 1cf34 <__flatcc_gen_sort@@Base+0x1620>
   1cc60:	str	r2, [sp, #56]	; 0x38
   1cc64:	ldr	r2, [pc, #716]	; 1cf38 <__flatcc_gen_sort@@Base+0x1624>
   1cc68:	mov	sl, r2
   1cc6c:	b	1c734 <__flatcc_gen_sort@@Base+0xe20>
   1cc70:	ldr	r2, [pc, #796]	; 1cf94 <__flatcc_gen_sort@@Base+0x1680>
   1cc74:	mov	fp, r2
   1cc78:	ldr	r2, [pc, #792]	; 1cf98 <__flatcc_gen_sort@@Base+0x1684>
   1cc7c:	str	r2, [sp, #56]	; 0x38
   1cc80:	ldr	r2, [pc, #688]	; 1cf38 <__flatcc_gen_sort@@Base+0x1624>
   1cc84:	mov	sl, r2
   1cc88:	b	1c734 <__flatcc_gen_sort@@Base+0xe20>
   1cc8c:	ldr	r3, [pc, #768]	; 1cf94 <__flatcc_gen_sort@@Base+0x1680>
   1cc90:	mov	fp, r3
   1cc94:	ldr	r3, [pc, #764]	; 1cf98 <__flatcc_gen_sort@@Base+0x1684>
   1cc98:	str	r3, [sp, #56]	; 0x38
   1cc9c:	b	1c528 <__flatcc_gen_sort@@Base+0xc14>
   1cca0:	ldr	r2, [pc, #748]	; 1cf94 <__flatcc_gen_sort@@Base+0x1680>
   1cca4:	mov	fp, r2
   1cca8:	ldr	r2, [pc, #744]	; 1cf98 <__flatcc_gen_sort@@Base+0x1684>
   1ccac:	str	r2, [sp, #56]	; 0x38
   1ccb0:	ldr	r2, [pc, #640]	; 1cf38 <__flatcc_gen_sort@@Base+0x1624>
   1ccb4:	mov	sl, r2
   1ccb8:	b	1c700 <__flatcc_gen_sort@@Base+0xdec>
   1ccbc:	ldr	r2, [pc, #700]	; 1cf80 <__flatcc_gen_sort@@Base+0x166c>
   1ccc0:	mov	fp, r2
   1ccc4:	ldr	r2, [pc, #696]	; 1cf84 <__flatcc_gen_sort@@Base+0x1670>
   1ccc8:	str	r2, [sp, #56]	; 0x38
   1cccc:	ldr	r2, [pc, #612]	; 1cf38 <__flatcc_gen_sort@@Base+0x1624>
   1ccd0:	mov	sl, r2
   1ccd4:	b	1c700 <__flatcc_gen_sort@@Base+0xdec>
   1ccd8:	ldr	r2, [pc, #672]	; 1cf80 <__flatcc_gen_sort@@Base+0x166c>
   1ccdc:	mov	fp, r2
   1cce0:	ldr	r2, [pc, #668]	; 1cf84 <__flatcc_gen_sort@@Base+0x1670>
   1cce4:	str	r2, [sp, #56]	; 0x38
   1cce8:	ldr	r2, [pc, #584]	; 1cf38 <__flatcc_gen_sort@@Base+0x1624>
   1ccec:	mov	sl, r2
   1ccf0:	b	1c734 <__flatcc_gen_sort@@Base+0xe20>
   1ccf4:	ldr	r3, [pc, #644]	; 1cf80 <__flatcc_gen_sort@@Base+0x166c>
   1ccf8:	mov	fp, r3
   1ccfc:	ldr	r3, [pc, #640]	; 1cf84 <__flatcc_gen_sort@@Base+0x1670>
   1cd00:	str	r3, [sp, #56]	; 0x38
   1cd04:	b	1c528 <__flatcc_gen_sort@@Base+0xc14>
   1cd08:	ldr	r2, [pc, #696]	; 1cfc8 <__flatcc_gen_sort@@Base+0x16b4>
   1cd0c:	b	1ca9c <__flatcc_gen_sort@@Base+0x1188>
   1cd10:	ldr	r2, [pc, #676]	; 1cfbc <__flatcc_gen_sort@@Base+0x16a8>
   1cd14:	b	1ca9c <__flatcc_gen_sort@@Base+0x1188>
   1cd18:	ldr	r2, [pc, #672]	; 1cfc0 <__flatcc_gen_sort@@Base+0x16ac>
   1cd1c:	b	1ca9c <__flatcc_gen_sort@@Base+0x1188>
   1cd20:	ldr	r2, [pc, #676]	; 1cfcc <__flatcc_gen_sort@@Base+0x16b8>
   1cd24:	b	1ca9c <__flatcc_gen_sort@@Base+0x1188>
   1cd28:	ldr	r2, [pc, #660]	; 1cfc4 <__flatcc_gen_sort@@Base+0x16b0>
   1cd2c:	b	1ca9c <__flatcc_gen_sort@@Base+0x1188>
   1cd30:	ldr	r1, [pc, #420]	; 1cedc <__flatcc_gen_sort@@Base+0x15c8>
   1cd34:	ldr	r2, [pc, #480]	; 1cf1c <__flatcc_gen_sort@@Base+0x1608>
   1cd38:	mov	r3, #226	; 0xe2
   1cd3c:	ldr	r0, [r1]
   1cd40:	str	r2, [sp]
   1cd44:	ldr	r1, [pc, #412]	; 1cee8 <__flatcc_gen_sort@@Base+0x15d4>
   1cd48:	ldr	r2, [pc, #464]	; 1cf20 <__flatcc_gen_sort@@Base+0x160c>
   1cd4c:	bl	14094 <fprintf@plt>
   1cd50:	ldr	r3, [pc, #632]	; 1cfd0 <__flatcc_gen_sort@@Base+0x16bc>
   1cd54:	mov	r2, #226	; 0xe2
   1cd58:	ldr	r1, [pc, #448]	; 1cf20 <__flatcc_gen_sort@@Base+0x160c>
   1cd5c:	ldr	r0, [pc, #400]	; 1cef4 <__flatcc_gen_sort@@Base+0x15e0>
   1cd60:	bl	14148 <__assert_fail@plt>
   1cd64:	ldr	r2, [pc, #564]	; 1cfa0 <__flatcc_gen_sort@@Base+0x168c>
   1cd68:	add	r3, sp, #68	; 0x44
   1cd6c:	str	r3, [sp, #60]	; 0x3c
   1cd70:	mov	r0, r3
   1cd74:	ldr	r1, [pc, #560]	; 1cfac <__flatcc_gen_sort@@Base+0x1698>
   1cd78:	ldrb	r3, [r4, #48]	; 0x30
   1cd7c:	bl	14100 <sprintf@plt>
   1cd80:	b	1ca00 <__flatcc_gen_sort@@Base+0x10ec>
   1cd84:	ldr	r2, [pc, #532]	; 1cfa0 <__flatcc_gen_sort@@Base+0x168c>
   1cd88:	ldrd	r0, [r4, #48]	; 0x30
   1cd8c:	add	r3, sp, #68	; 0x44
   1cd90:	str	r3, [sp, #60]	; 0x3c
   1cd94:	strd	r0, [sp]
   1cd98:	mov	r0, r3
   1cd9c:	ldr	r1, [pc, #516]	; 1cfa8 <__flatcc_gen_sort@@Base+0x1694>
   1cda0:	bl	14100 <sprintf@plt>
   1cda4:	b	1ca00 <__flatcc_gen_sort@@Base+0x10ec>
   1cda8:	ldr	r2, [pc, #496]	; 1cfa0 <__flatcc_gen_sort@@Base+0x168c>
   1cdac:	ldrd	r0, [r4, #48]	; 0x30
   1cdb0:	add	r3, sp, #68	; 0x44
   1cdb4:	str	r3, [sp, #60]	; 0x3c
   1cdb8:	strd	r0, [sp]
   1cdbc:	mov	r0, r3
   1cdc0:	ldr	r1, [pc, #476]	; 1cfa4 <__flatcc_gen_sort@@Base+0x1690>
   1cdc4:	bl	14100 <sprintf@plt>
   1cdc8:	b	1ca00 <__flatcc_gen_sort@@Base+0x10ec>
   1cdcc:	ldr	r2, [pc, #496]	; 1cfc4 <__flatcc_gen_sort@@Base+0x16b0>
   1cdd0:	b	1cd68 <__flatcc_gen_sort@@Base+0x1454>
   1cdd4:	ldr	r2, [pc, #476]	; 1cfb8 <__flatcc_gen_sort@@Base+0x16a4>
   1cdd8:	b	1cd68 <__flatcc_gen_sort@@Base+0x1454>
   1cddc:	ldr	r2, [pc, #488]	; 1cfcc <__flatcc_gen_sort@@Base+0x16b8>
   1cde0:	b	1cd68 <__flatcc_gen_sort@@Base+0x1454>
   1cde4:	ldr	r2, [pc, #456]	; 1cfb4 <__flatcc_gen_sort@@Base+0x16a0>
   1cde8:	b	1cd68 <__flatcc_gen_sort@@Base+0x1454>
   1cdec:	ldr	r2, [pc, #468]	; 1cfc8 <__flatcc_gen_sort@@Base+0x16b4>
   1cdf0:	b	1cd68 <__flatcc_gen_sort@@Base+0x1454>
   1cdf4:	ldr	r2, [pc, #448]	; 1cfbc <__flatcc_gen_sort@@Base+0x16a8>
   1cdf8:	b	1cd68 <__flatcc_gen_sort@@Base+0x1454>
   1cdfc:	ldr	r2, [pc, #444]	; 1cfc0 <__flatcc_gen_sort@@Base+0x16ac>
   1ce00:	b	1cd68 <__flatcc_gen_sort@@Base+0x1454>
   1ce04:	ldr	r2, [pc, #440]	; 1cfc4 <__flatcc_gen_sort@@Base+0x16b0>
   1ce08:	b	1cd88 <__flatcc_gen_sort@@Base+0x1474>
   1ce0c:	ldr	r2, [pc, #432]	; 1cfc4 <__flatcc_gen_sort@@Base+0x16b0>
   1ce10:	b	1cdac <__flatcc_gen_sort@@Base+0x1498>
   1ce14:	ldr	r2, [pc, #412]	; 1cfb8 <__flatcc_gen_sort@@Base+0x16a4>
   1ce18:	b	1cdac <__flatcc_gen_sort@@Base+0x1498>
   1ce1c:	ldr	r2, [pc, #424]	; 1cfcc <__flatcc_gen_sort@@Base+0x16b8>
   1ce20:	b	1cdac <__flatcc_gen_sort@@Base+0x1498>
   1ce24:	ldr	r2, [pc, #392]	; 1cfb4 <__flatcc_gen_sort@@Base+0x16a0>
   1ce28:	b	1cdac <__flatcc_gen_sort@@Base+0x1498>
   1ce2c:	ldr	r2, [pc, #404]	; 1cfc8 <__flatcc_gen_sort@@Base+0x16b4>
   1ce30:	b	1cdac <__flatcc_gen_sort@@Base+0x1498>
   1ce34:	ldr	r2, [pc, #384]	; 1cfbc <__flatcc_gen_sort@@Base+0x16a8>
   1ce38:	b	1cdac <__flatcc_gen_sort@@Base+0x1498>
   1ce3c:	ldr	r2, [pc, #380]	; 1cfc0 <__flatcc_gen_sort@@Base+0x16ac>
   1ce40:	b	1cdac <__flatcc_gen_sort@@Base+0x1498>
   1ce44:	ldr	r2, [pc, #360]	; 1cfb4 <__flatcc_gen_sort@@Base+0x16a0>
   1ce48:	b	1cd88 <__flatcc_gen_sort@@Base+0x1474>
   1ce4c:	ldr	r2, [pc, #372]	; 1cfc8 <__flatcc_gen_sort@@Base+0x16b4>
   1ce50:	b	1cd88 <__flatcc_gen_sort@@Base+0x1474>
   1ce54:	ldr	r2, [pc, #348]	; 1cfb8 <__flatcc_gen_sort@@Base+0x16a4>
   1ce58:	b	1cd88 <__flatcc_gen_sort@@Base+0x1474>
   1ce5c:	ldr	r2, [pc, #360]	; 1cfcc <__flatcc_gen_sort@@Base+0x16b8>
   1ce60:	b	1cd88 <__flatcc_gen_sort@@Base+0x1474>
   1ce64:	ldr	r2, [pc, #336]	; 1cfbc <__flatcc_gen_sort@@Base+0x16a8>
   1ce68:	b	1cd88 <__flatcc_gen_sort@@Base+0x1474>
   1ce6c:	ldr	r2, [pc, #332]	; 1cfc0 <__flatcc_gen_sort@@Base+0x16ac>
   1ce70:	b	1cd88 <__flatcc_gen_sort@@Base+0x1474>
   1ce74:	ldr	r3, [r5, #204]	; 0xcc
   1ce78:	mov	r2, #32
   1ce7c:	mov	r1, #1
   1ce80:	ldr	r0, [pc, #332]	; 1cfd4 <__flatcc_gen_sort@@Base+0x16c0>
   1ce84:	bl	1401c <fwrite@plt>
   1ce88:	b	1c370 <__flatcc_gen_sort@@Base+0xa5c>
   1ce8c:	ldr	r3, [r5, #204]	; 0xcc
   1ce90:	mov	r2, #32
   1ce94:	mov	r1, #1
   1ce98:	ldr	r0, [pc, #308]	; 1cfd4 <__flatcc_gen_sort@@Base+0x16c0>
   1ce9c:	bl	1401c <fwrite@plt>
   1cea0:	b	1c32c <__flatcc_gen_sort@@Base+0xa18>
   1cea4:	vldr	d7, [r4, #48]	; 0x30
   1cea8:	add	r3, sp, #68	; 0x44
   1ceac:	str	r3, [sp, #60]	; 0x3c
   1ceb0:	mov	r0, r3
   1ceb4:	vcvt.f32.f64	s14, d7
   1ceb8:	ldr	r1, [pc, #240]	; 1cfb0 <__flatcc_gen_sort@@Base+0x169c>
   1cebc:	vcvt.f64.f32	d7, s14
   1cec0:	vmov	r2, r3, d7
   1cec4:	bl	14100 <sprintf@plt>
   1cec8:	b	1ca00 <__flatcc_gen_sort@@Base+0x10ec>
   1cecc:	andeq	ip, r4, ip, asr #23
   1ced0:	andeq	ip, r4, r8, ror #16
   1ced4:	strdeq	ip, [r4], -r4
   1ced8:	andeq	ip, r4, r0, lsr #20
   1cedc:	andeq	pc, r6, r8, lsr #1
   1cee0:	andeq	r5, r4, r4, ror r6
   1cee4:	andeq	r0, r0, r8, ror #11
   1cee8:	ldrdeq	r4, [r4], -ip
   1ceec:	andeq	ip, r4, ip, lsl r7
   1cef0:	andeq	ip, r4, r4, lsl #12
   1cef4:	andeq	sp, r4, r4, ror r2
   1cef8:	andeq	ip, r4, r8, lsl #22
   1cefc:	andeq	ip, r4, r4, asr sl
   1cf00:	andeq	ip, r4, ip, asr fp
   1cf04:	muleq	r4, r4, fp
   1cf08:	andeq	ip, r4, r8, lsl #24
   1cf0c:	muleq	r4, r0, sl
   1cf10:			; <UNDEFINED> instruction: 0x000455b0
   1cf14:	andeq	r0, r0, r3, ror #11
   1cf18:	andeq	r5, r4, r4, ror #10
   1cf1c:	andeq	r4, r4, r8, ror #9
   1cf20:	muleq	r4, r0, r4
   1cf24:			; <UNDEFINED> instruction: 0x0004c5bc
   1cf28:	muleq	r4, r8, r3
   1cf2c:	ldrdeq	ip, [r5], -r0
   1cf30:			; <UNDEFINED> instruction: 0x000443b0
   1cf34:	andeq	r4, r4, r8, lsl r8
   1cf38:	andeq	lr, r4, ip, asr #2
   1cf3c:			; <UNDEFINED> instruction: 0x000445b4
   1cf40:	andeq	ip, r4, r0, lsr #17
   1cf44:	andeq	ip, r4, r8, ror #17
   1cf48:	andeq	ip, r4, r4, ror r9
   1cf4c:	andeq	ip, r4, r0, lsr #18
   1cf50:	andeq	ip, r4, ip, asr #19
   1cf54:	muleq	r0, r6, r5
   1cf58:	strdeq	ip, [r4], -r4
   1cf5c:	andeq	r4, r4, r8, lsr #7
   1cf60:	andeq	r4, r4, r0, lsl r8
   1cf64:	andeq	r4, r4, r4, lsl #7
   1cf68:	strdeq	r4, [r4], -r8
   1cf6c:	muleq	r4, r0, r3
   1cf70:	andeq	r4, r4, r0, lsl #16
   1cf74:	andeq	r4, r4, r0, asr #7
   1cf78:	andeq	r4, r4, r0, lsr #7
   1cf7c:	andeq	r4, r4, r8, lsl #16
   1cf80:			; <UNDEFINED> instruction: 0x000443b8
   1cf84:	andeq	r4, r4, r0, lsr #16
   1cf88:	andeq	r4, r4, r8, asr #7
   1cf8c:	andeq	r4, r4, ip, ror #6
   1cf90:	andeq	r4, r4, r8, ror #15
   1cf94:	andeq	r4, r4, r8, ror r3
   1cf98:	strdeq	r4, [r4], -r0
   1cf9c:	andeq	ip, r4, r0, asr #21
   1cfa0:	andeq	r4, r4, r8, lsl #8
   1cfa4:	muleq	r4, ip, r5
   1cfa8:	muleq	r4, r0, r5
   1cfac:	andeq	r4, r4, r8, lsr #11
   1cfb0:			; <UNDEFINED> instruction: 0x000445b0
   1cfb4:	andeq	r4, r4, r8, lsr #8
   1cfb8:	andeq	r4, r4, r0, lsr #8
   1cfbc:	strdeq	r4, [r4], -r0
   1cfc0:	andeq	r4, r4, r4, ror #7
   1cfc4:	andeq	r4, r4, r0, lsl r4
   1cfc8:	strdeq	r4, [r4], -ip
   1cfcc:	andeq	r4, r4, r8, lsl r4
   1cfd0:	andeq	ip, r4, r8, ror #11
   1cfd4:	andeq	ip, r4, r8, lsr fp
   1cfd8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1cfdc:	sub	sp, sp, #484	; 0x1e4
   1cfe0:	mov	r8, r0
   1cfe4:	add	r9, sp, #260	; 0x104
   1cfe8:	mov	r0, r9
   1cfec:	mov	r2, #220	; 0xdc
   1cff0:	mov	r1, #0
   1cff4:	bl	140ac <memset@plt>
   1cff8:	ldr	r3, [r8, #208]	; 0xd0
   1cffc:	ldr	fp, [r3, #40]	; 0x28
   1d000:	cmp	fp, #0
   1d004:	beq	1d22c <__flatcc_gen_sort@@Base+0x1918>
   1d008:	ldr	r6, [pc, #3532]	; 1dddc <__flatcc_gen_sort@@Base+0x24c8>
   1d00c:	mov	r2, #0
   1d010:	mov	r5, #1
   1d014:	b	1d024 <__flatcc_gen_sort@@Base+0x1710>
   1d018:	ldr	fp, [fp]
   1d01c:	cmp	fp, #0
   1d020:	beq	1d068 <__flatcc_gen_sort@@Base+0x1754>
   1d024:	ldrh	r3, [fp, #8]
   1d028:	cmp	r3, #4
   1d02c:	bne	1d018 <__flatcc_gen_sort@@Base+0x1704>
   1d030:	mov	r1, fp
   1d034:	ldr	r0, [fp, #12]
   1d038:	mov	r2, r9
   1d03c:	bl	170c4 <__flatcc_fb_scoped_symbol_name@@Base>
   1d040:	ldr	r0, [r8, #204]	; 0xcc
   1d044:	mov	r2, r8
   1d048:	stm	sp, {r8, r9}
   1d04c:	mov	r3, r9
   1d050:	mov	r1, r6
   1d054:	bl	14094 <fprintf@plt>
   1d058:	ldr	fp, [fp]
   1d05c:	mov	r2, r5
   1d060:	cmp	fp, #0
   1d064:	bne	1d024 <__flatcc_gen_sort@@Base+0x1710>
   1d068:	cmp	r2, #0
   1d06c:	beq	1d07c <__flatcc_gen_sort@@Base+0x1768>
   1d070:	ldr	r1, [r8, #204]	; 0xcc
   1d074:	mov	r0, #10
   1d078:	bl	140f4 <fputc@plt>
   1d07c:	ldr	r3, [r8, #208]	; 0xd0
   1d080:	ldr	r7, [r3, #40]	; 0x28
   1d084:	cmp	r7, #0
   1d088:	beq	1ddd4 <__flatcc_gen_sort@@Base+0x24c0>
   1d08c:	ldr	sl, [pc, #3404]	; 1dde0 <__flatcc_gen_sort@@Base+0x24cc>
   1d090:	mov	fp, #0
   1d094:	b	1d0a4 <__flatcc_gen_sort@@Base+0x1790>
   1d098:	ldr	r7, [r7]
   1d09c:	cmp	r7, #0
   1d0a0:	beq	1d1f8 <__flatcc_gen_sort@@Base+0x18e4>
   1d0a4:	ldrh	r6, [r7, #8]
   1d0a8:	cmp	r6, #0
   1d0ac:	bne	1d098 <__flatcc_gen_sort@@Base+0x1784>
   1d0b0:	mov	r2, #220	; 0xdc
   1d0b4:	mov	r1, r6
   1d0b8:	mov	r0, r9
   1d0bc:	bl	140ac <memset@plt>
   1d0c0:	ldr	r4, [r7, #20]
   1d0c4:	cmp	r4, #0
   1d0c8:	beq	1d3d4 <__flatcc_gen_sort@@Base+0x1ac0>
   1d0cc:	ldrh	r3, [r4, #72]	; 0x48
   1d0d0:	ldr	r4, [r4]
   1d0d4:	tst	r3, #4
   1d0d8:	moveq	r3, #1
   1d0dc:	movne	r3, #0
   1d0e0:	cmp	r4, #0
   1d0e4:	add	r6, r6, r3
   1d0e8:	bne	1d0cc <__flatcc_gen_sort@@Base+0x17b8>
   1d0ec:	mov	r2, r9
   1d0f0:	mov	r1, r7
   1d0f4:	ldr	r0, [r7, #12]
   1d0f8:	bl	170c4 <__flatcc_fb_scoped_symbol_name@@Base>
   1d0fc:	mov	r3, r9
   1d100:	mov	r2, r8
   1d104:	ldr	r1, [pc, #3288]	; 1dde4 <__flatcc_gen_sort@@Base+0x24d0>
   1d108:	ldr	r0, [r8, #204]	; 0xcc
   1d10c:	bl	14094 <fprintf@plt>
   1d110:	ldr	r5, [r7, #20]
   1d114:	cmp	r5, #0
   1d118:	beq	1d404 <__flatcc_gen_sort@@Base+0x1af0>
   1d11c:	cmp	r6, #0
   1d120:	beq	1d41c <__flatcc_gen_sort@@Base+0x1b08>
   1d124:	ldr	fp, [pc, #3260]	; 1dde8 <__flatcc_gen_sort@@Base+0x24d4>
   1d128:	ldrh	r3, [r5, #72]	; 0x48
   1d12c:	tst	r3, #4
   1d130:	bne	1d180 <__flatcc_gen_sort@@Base+0x186c>
   1d134:	tst	r3, #256	; 0x100
   1d138:	beq	1d180 <__flatcc_gen_sort@@Base+0x186c>
   1d13c:	cmp	r4, #0
   1d140:	beq	1d3c4 <__flatcc_gen_sort@@Base+0x1ab0>
   1d144:	tst	r4, #3
   1d148:	bne	1d158 <__flatcc_gen_sort@@Base+0x1844>
   1d14c:	sub	r3, r6, r4
   1d150:	cmp	r3, #2
   1d154:	bgt	1d778 <__flatcc_gen_sort@@Base+0x1e64>
   1d158:	ldr	r3, [r8, #204]	; 0xcc
   1d15c:	mov	r2, #2
   1d160:	mov	r1, #1
   1d164:	mov	r0, fp
   1d168:	bl	1401c <fwrite@plt>
   1d16c:	ldr	r2, [r5, #96]	; 0x60
   1d170:	mov	r1, sl
   1d174:	ldr	r0, [r8, #204]	; 0xcc
   1d178:	add	r4, r4, #1
   1d17c:	bl	14094 <fprintf@plt>
   1d180:	ldr	r5, [r5]
   1d184:	cmp	r5, #0
   1d188:	bne	1d128 <__flatcc_gen_sort@@Base+0x1814>
   1d18c:	cmp	r4, #0
   1d190:	beq	1d404 <__flatcc_gen_sort@@Base+0x1af0>
   1d194:	ldr	r3, [r8, #204]	; 0xcc
   1d198:	mov	r2, #7
   1d19c:	mov	r1, #1
   1d1a0:	ldr	r0, [pc, #3140]	; 1ddec <__flatcc_gen_sort@@Base+0x24d8>
   1d1a4:	bl	1401c <fwrite@plt>
   1d1a8:	mov	r2, #220	; 0xdc
   1d1ac:	mov	r1, #0
   1d1b0:	mov	r0, r9
   1d1b4:	bl	140ac <memset@plt>
   1d1b8:	mov	r1, r7
   1d1bc:	ldr	r0, [r7, #12]
   1d1c0:	mov	r2, r9
   1d1c4:	bl	170c4 <__flatcc_fb_scoped_symbol_name@@Base>
   1d1c8:	ldrd	r2, [r7, #96]	; 0x60
   1d1cc:	ldr	r0, [r8, #204]	; 0xcc
   1d1d0:	ldr	r1, [pc, #3096]	; 1ddf0 <__flatcc_gen_sort@@Base+0x24dc>
   1d1d4:	strd	r2, [sp, #8]
   1d1d8:	str	r9, [sp]
   1d1dc:	mov	r3, r8
   1d1e0:	mov	r2, r8
   1d1e4:	bl	14094 <fprintf@plt>
   1d1e8:	ldr	r7, [r7]
   1d1ec:	mov	fp, #1
   1d1f0:	cmp	r7, #0
   1d1f4:	bne	1d0a4 <__flatcc_gen_sort@@Base+0x1790>
   1d1f8:	ldr	r3, [r8, #208]	; 0xd0
   1d1fc:	ldr	r7, [r3, #40]	; 0x28
   1d200:	cmp	r7, #0
   1d204:	beq	1d9d0 <__flatcc_gen_sort@@Base+0x20bc>
   1d208:	ldrh	r5, [r7, #8]
   1d20c:	cmp	r5, #0
   1d210:	beq	1d464 <__flatcc_gen_sort@@Base+0x1b50>
   1d214:	ldr	r7, [r7]
   1d218:	cmp	r7, #0
   1d21c:	bne	1d208 <__flatcc_gen_sort@@Base+0x18f4>
   1d220:	cmp	fp, #0
   1d224:	bne	1d9d8 <__flatcc_gen_sort@@Base+0x20c4>
   1d228:	ldr	r3, [r8, #208]	; 0xd0
   1d22c:	ldr	r4, [r3, #40]	; 0x28
   1d230:	cmp	r4, #0
   1d234:	beq	1d274 <__flatcc_gen_sort@@Base+0x1960>
   1d238:	ldr	sl, [pc, #2996]	; 1ddf4 <__flatcc_gen_sort@@Base+0x24e0>
   1d23c:	mov	r2, #0
   1d240:	add	r6, sp, #40	; 0x28
   1d244:	mov	r7, #220	; 0xdc
   1d248:	ldrh	r3, [r4, #8]
   1d24c:	cmp	r3, #4
   1d250:	beq	1d7c0 <__flatcc_gen_sort@@Base+0x1eac>
   1d254:	ldr	r4, [r4]
   1d258:	cmp	r4, #0
   1d25c:	bne	1d248 <__flatcc_gen_sort@@Base+0x1934>
   1d260:	cmp	r2, #0
   1d264:	beq	1d274 <__flatcc_gen_sort@@Base+0x1960>
   1d268:	ldr	r1, [r8, #204]	; 0xcc
   1d26c:	mov	r0, #10
   1d270:	bl	140f4 <fputc@plt>
   1d274:	cmp	fp, #0
   1d278:	beq	1db1c <__flatcc_gen_sort@@Base+0x2208>
   1d27c:	ldr	r3, [r8, #208]	; 0xd0
   1d280:	ldr	r5, [r3, #40]	; 0x28
   1d284:	cmp	r5, #0
   1d288:	beq	1db1c <__flatcc_gen_sort@@Base+0x2208>
   1d28c:	ldr	r6, [pc, #2916]	; 1ddf8 <__flatcc_gen_sort@@Base+0x24e4>
   1d290:	b	1d2a0 <__flatcc_gen_sort@@Base+0x198c>
   1d294:	ldr	r5, [r5]
   1d298:	cmp	r5, #0
   1d29c:	beq	1db1c <__flatcc_gen_sort@@Base+0x2208>
   1d2a0:	ldrh	r4, [r5, #8]
   1d2a4:	cmp	r4, #0
   1d2a8:	bne	1d294 <__flatcc_gen_sort@@Base+0x1980>
   1d2ac:	mov	r1, r5
   1d2b0:	mov	r0, r8
   1d2b4:	bl	1bfbc <__flatcc_gen_sort@@Base+0x6a8>
   1d2b8:	mov	r1, r4
   1d2bc:	mov	r2, #220	; 0xdc
   1d2c0:	mov	r0, r9
   1d2c4:	ldrh	r7, [r5, #92]	; 0x5c
   1d2c8:	bl	140ac <memset@plt>
   1d2cc:	mov	r2, r9
   1d2d0:	mov	r1, r5
   1d2d4:	ldr	r0, [r5, #12]
   1d2d8:	bl	170c4 <__flatcc_fb_scoped_symbol_name@@Base>
   1d2dc:	ldr	r0, [r8, #204]	; 0xcc
   1d2e0:	mov	r3, r9
   1d2e4:	mov	r2, r9
   1d2e8:	ldr	r1, [pc, #2828]	; 1ddfc <__flatcc_gen_sort@@Base+0x24e8>
   1d2ec:	stm	sp, {r8, r9}
   1d2f0:	bl	14094 <fprintf@plt>
   1d2f4:	mov	r2, r9
   1d2f8:	ldr	r1, [pc, #2816]	; 1de00 <__flatcc_gen_sort@@Base+0x24ec>
   1d2fc:	ldr	r0, [r8, #204]	; 0xcc
   1d300:	bl	14094 <fprintf@plt>
   1d304:	ldr	r4, [r5, #24]
   1d308:	and	r7, r7, #8
   1d30c:	cmp	r4, #0
   1d310:	beq	1d364 <__flatcc_gen_sort@@Base+0x1a50>
   1d314:	cmp	r7, #0
   1d318:	beq	1dca0 <__flatcc_gen_sort@@Base+0x238c>
   1d31c:	mov	r7, fp
   1d320:	ldrh	r3, [r4, #72]	; 0x48
   1d324:	tst	r3, #4
   1d328:	bne	1d354 <__flatcc_gen_sort@@Base+0x1a40>
   1d32c:	ldr	r1, [r4, #4]
   1d330:	ldrd	sl, [r4, #96]	; 0x60
   1d334:	ldr	r0, [r8, #204]	; 0xcc
   1d338:	ldr	r3, [r1, #4]
   1d33c:	strd	sl, [sp, #8]
   1d340:	ldr	r2, [r1]
   1d344:	mov	r1, r6
   1d348:	str	r2, [sp]
   1d34c:	mov	r2, r9
   1d350:	bl	14094 <fprintf@plt>
   1d354:	ldr	r4, [r4, #108]	; 0x6c
   1d358:	cmp	r4, #0
   1d35c:	bne	1d320 <__flatcc_gen_sort@@Base+0x1a0c>
   1d360:	mov	fp, r7
   1d364:	mov	r2, r9
   1d368:	ldr	r1, [pc, #2708]	; 1de04 <__flatcc_gen_sort@@Base+0x24f0>
   1d36c:	ldr	r0, [r8, #204]	; 0xcc
   1d370:	bl	14094 <fprintf@plt>
   1d374:	mov	r2, #220	; 0xdc
   1d378:	mov	r1, #0
   1d37c:	mov	r0, r9
   1d380:	bl	140ac <memset@plt>
   1d384:	mov	r2, r9
   1d388:	mov	r1, r5
   1d38c:	ldr	r0, [r5, #12]
   1d390:	bl	170c4 <__flatcc_fb_scoped_symbol_name@@Base>
   1d394:	ldr	r0, [r8, #204]	; 0xcc
   1d398:	mov	r3, r8
   1d39c:	str	r9, [sp, #8]
   1d3a0:	str	r9, [sp, #4]
   1d3a4:	str	r9, [sp]
   1d3a8:	mov	r2, r8
   1d3ac:	ldr	r1, [pc, #2644]	; 1de08 <__flatcc_gen_sort@@Base+0x24f4>
   1d3b0:	bl	14094 <fprintf@plt>
   1d3b4:	ldr	r1, [r8, #204]	; 0xcc
   1d3b8:	mov	r0, #10
   1d3bc:	bl	140f4 <fputc@plt>
   1d3c0:	b	1d294 <__flatcc_gen_sort@@Base+0x1980>
   1d3c4:	ldr	r1, [r8, #204]	; 0xcc
   1d3c8:	mov	r0, #32
   1d3cc:	bl	140f4 <fputc@plt>
   1d3d0:	b	1d16c <__flatcc_gen_sort@@Base+0x1858>
   1d3d4:	mov	r2, r9
   1d3d8:	mov	r1, r7
   1d3dc:	ldr	r0, [r7, #12]
   1d3e0:	bl	170c4 <__flatcc_fb_scoped_symbol_name@@Base>
   1d3e4:	mov	r3, r9
   1d3e8:	mov	r2, r8
   1d3ec:	ldr	r1, [pc, #2544]	; 1dde4 <__flatcc_gen_sort@@Base+0x24d0>
   1d3f0:	ldr	r0, [r8, #204]	; 0xcc
   1d3f4:	bl	14094 <fprintf@plt>
   1d3f8:	ldr	r5, [r7, #20]
   1d3fc:	cmp	r5, #0
   1d400:	bne	1d41c <__flatcc_gen_sort@@Base+0x1b08>
   1d404:	ldr	r3, [r8, #204]	; 0xcc
   1d408:	mov	r2, #6
   1d40c:	mov	r1, #1
   1d410:	ldr	r0, [pc, #2548]	; 1de0c <__flatcc_gen_sort@@Base+0x24f8>
   1d414:	bl	1401c <fwrite@plt>
   1d418:	b	1d1a8 <__flatcc_gen_sort@@Base+0x1894>
   1d41c:	mov	r4, #0
   1d420:	mov	r6, #32
   1d424:	ldrh	r3, [r5, #72]	; 0x48
   1d428:	tst	r3, #4
   1d42c:	bne	1d454 <__flatcc_gen_sort@@Base+0x1b40>
   1d430:	tst	r3, #256	; 0x100
   1d434:	beq	1d454 <__flatcc_gen_sort@@Base+0x1b40>
   1d438:	cmp	r4, #0
   1d43c:	beq	1d590 <__flatcc_gen_sort@@Base+0x1c7c>
   1d440:	ldr	r2, [r5, #96]	; 0x60
   1d444:	mov	r1, sl
   1d448:	ldr	r0, [r8, #204]	; 0xcc
   1d44c:	bl	14094 <fprintf@plt>
   1d450:	add	r4, r4, #1
   1d454:	ldr	r5, [r5]
   1d458:	cmp	r5, #0
   1d45c:	bne	1d424 <__flatcc_gen_sort@@Base+0x1b10>
   1d460:	b	1d18c <__flatcc_gen_sort@@Base+0x1878>
   1d464:	mov	r2, #220	; 0xdc
   1d468:	mov	r1, r5
   1d46c:	add	r0, sp, #40	; 0x28
   1d470:	bl	140ac <memset@plt>
   1d474:	add	r2, sp, #40	; 0x28
   1d478:	mov	r1, r7
   1d47c:	ldr	r0, [r7, #12]
   1d480:	bl	170c4 <__flatcc_fb_scoped_symbol_name@@Base>
   1d484:	ldr	r3, [r7, #20]
   1d488:	cmp	r3, #0
   1d48c:	beq	1db4c <__flatcc_gen_sort@@Base+0x2238>
   1d490:	ldrh	r2, [r3, #72]	; 0x48
   1d494:	ldr	r3, [r3]
   1d498:	tst	r2, #4
   1d49c:	moveq	r2, #1
   1d4a0:	movne	r2, #0
   1d4a4:	cmp	r3, #0
   1d4a8:	add	r5, r5, r2
   1d4ac:	bne	1d490 <__flatcc_gen_sort@@Base+0x1b7c>
   1d4b0:	add	r2, sp, #40	; 0x28
   1d4b4:	ldr	r1, [pc, #2388]	; 1de10 <__flatcc_gen_sort@@Base+0x24fc>
   1d4b8:	ldr	r0, [r8, #204]	; 0xcc
   1d4bc:	bl	14094 <fprintf@plt>
   1d4c0:	mov	r2, #220	; 0xdc
   1d4c4:	mov	r1, #0
   1d4c8:	mov	r0, r9
   1d4cc:	bl	140ac <memset@plt>
   1d4d0:	ldr	r4, [r7, #20]
   1d4d4:	cmp	r4, #0
   1d4d8:	movne	r2, #0
   1d4dc:	strne	fp, [sp, #36]	; 0x24
   1d4e0:	bne	1d4f4 <__flatcc_gen_sort@@Base+0x1be0>
   1d4e4:	b	1d63c <__flatcc_gen_sort@@Base+0x1d28>
   1d4e8:	ldr	r4, [r4]
   1d4ec:	cmp	r4, #0
   1d4f0:	beq	1d638 <__flatcc_gen_sort@@Base+0x1d24>
   1d4f4:	ldrh	r3, [r4, #72]	; 0x48
   1d4f8:	tst	r3, #4
   1d4fc:	bne	1d4e8 <__flatcc_gen_sort@@Base+0x1bd4>
   1d500:	cmp	r5, #0
   1d504:	add	r6, r2, #1
   1d508:	beq	1d530 <__flatcc_gen_sort@@Base+0x1c1c>
   1d50c:	cmp	r2, #0
   1d510:	bne	1d568 <__flatcc_gen_sort@@Base+0x1c54>
   1d514:	cmp	r5, #4
   1d518:	bgt	1d57c <__flatcc_gen_sort@@Base+0x1c68>
   1d51c:	ldr	r3, [r8, #204]	; 0xcc
   1d520:	mov	r2, #2
   1d524:	mov	r1, #1
   1d528:	ldr	r0, [pc, #2232]	; 1dde8 <__flatcc_gen_sort@@Base+0x24d4>
   1d52c:	bl	1401c <fwrite@plt>
   1d530:	ldrh	r3, [r4, #24]
   1d534:	sub	r3, r3, #7
   1d538:	cmp	r3, #8
   1d53c:	ldrls	pc, [pc, r3, lsl #2]
   1d540:	b	1d78c <__flatcc_gen_sort@@Base+0x1e78>
   1d544:	andeq	sp, r1, r8, lsr r7
   1d548:	strdeq	sp, [r1], -r0
   1d54c:	ldrdeq	sp, [r1], -r0
   1d550:	andeq	sp, r1, r0, lsl r6
   1d554:	andeq	sp, r1, ip, lsl #15
   1d558:	andeq	sp, r1, ip, lsl #15
   1d55c:	andeq	sp, r1, ip, lsl #15
   1d560:	ldrdeq	sp, [r1], -r8
   1d564:	andeq	sp, r1, r0, lsr #11
   1d568:	tst	r2, #3
   1d56c:	bne	1d51c <__flatcc_gen_sort@@Base+0x1c08>
   1d570:	sub	r2, r5, r2
   1d574:	cmp	r2, #2
   1d578:	ble	1d51c <__flatcc_gen_sort@@Base+0x1c08>
   1d57c:	ldr	r2, [pc, #2192]	; 1de14 <__flatcc_gen_sort@@Base+0x2500>
   1d580:	ldr	r1, [pc, #2192]	; 1de18 <__flatcc_gen_sort@@Base+0x2504>
   1d584:	ldr	r0, [r8, #204]	; 0xcc
   1d588:	bl	14094 <fprintf@plt>
   1d58c:	b	1d530 <__flatcc_gen_sort@@Base+0x1c1c>
   1d590:	ldr	r1, [r8, #204]	; 0xcc
   1d594:	mov	r0, r6
   1d598:	bl	140f4 <fputc@plt>
   1d59c:	b	1d440 <__flatcc_gen_sort@@Base+0x1b2c>
   1d5a0:	ldr	r1, [r4, #16]
   1d5a4:	mov	r2, r9
   1d5a8:	ldr	r0, [r1, #12]
   1d5ac:	bl	170c4 <__flatcc_fb_scoped_symbol_name@@Base>
   1d5b0:	ldr	r3, [r4, #16]
   1d5b4:	ldrh	r3, [r3, #8]
   1d5b8:	cmp	r3, #4
   1d5bc:	ldrls	pc, [pc, r3, lsl #2]
   1d5c0:	b	1da6c <__flatcc_gen_sort@@Base+0x2158>
   1d5c4:	andeq	sp, r1, r8, ror #18
   1d5c8:	andeq	sp, r1, r8, ror #18
   1d5cc:	andeq	sp, r1, ip, ror #20
   1d5d0:	andeq	sp, r1, r8, ror #18
   1d5d4:	andeq	sp, r1, r8, asr #18
   1d5d8:	ldr	r1, [r4, #16]
   1d5dc:	mov	r2, r9
   1d5e0:	ldr	r0, [r1, #12]
   1d5e4:	bl	170c4 <__flatcc_fb_scoped_symbol_name@@Base>
   1d5e8:	ldr	r3, [r4, #16]
   1d5ec:	ldrh	r3, [r3, #8]
   1d5f0:	cmp	r3, #4
   1d5f4:	ldrls	pc, [pc, r3, lsl #2]
   1d5f8:	b	1dad4 <__flatcc_gen_sort@@Base+0x21c0>
   1d5fc:	andeq	sp, r1, ip, asr #20
   1d600:	andeq	sp, r1, ip, lsr #20
   1d604:	ldrdeq	sp, [r1], -r4
   1d608:	andeq	sp, r1, ip, lsl #20
   1d60c:	andeq	sp, r1, ip, ror #19
   1d610:	ldrd	sl, [r4, #96]	; 0x60
   1d614:	ldr	r0, [r8, #204]	; 0xcc
   1d618:	mov	r2, r8
   1d61c:	strd	sl, [sp]
   1d620:	ldr	r1, [pc, #2036]	; 1de1c <__flatcc_gen_sort@@Base+0x2508>
   1d624:	bl	14094 <fprintf@plt>
   1d628:	ldr	r4, [r4]
   1d62c:	mov	r2, r6
   1d630:	cmp	r4, #0
   1d634:	bne	1d4f4 <__flatcc_gen_sort@@Base+0x1be0>
   1d638:	ldr	fp, [sp, #36]	; 0x24
   1d63c:	add	r2, sp, #40	; 0x28
   1d640:	ldr	r1, [pc, #2008]	; 1de20 <__flatcc_gen_sort@@Base+0x250c>
   1d644:	ldr	r0, [r8, #204]	; 0xcc
   1d648:	bl	14094 <fprintf@plt>
   1d64c:	ldr	r4, [r7, #20]
   1d650:	cmp	r4, #0
   1d654:	beq	1d84c <__flatcc_gen_sort@@Base+0x1f38>
   1d658:	cmp	r5, #0
   1d65c:	beq	1daa0 <__flatcc_gen_sort@@Base+0x218c>
   1d660:	cmp	r5, #4
   1d664:	mov	r6, #0
   1d668:	bgt	1d9c0 <__flatcc_gen_sort@@Base+0x20ac>
   1d66c:	b	1d67c <__flatcc_gen_sort@@Base+0x1d68>
   1d670:	ldr	r4, [r4]
   1d674:	cmp	r4, #0
   1d678:	beq	1d84c <__flatcc_gen_sort@@Base+0x1f38>
   1d67c:	ldrh	r3, [r4, #72]	; 0x48
   1d680:	tst	r3, #4
   1d684:	bne	1d670 <__flatcc_gen_sort@@Base+0x1d5c>
   1d688:	cmp	r6, #0
   1d68c:	beq	1d6a4 <__flatcc_gen_sort@@Base+0x1d90>
   1d690:	tst	r6, #3
   1d694:	bne	1d6a4 <__flatcc_gen_sort@@Base+0x1d90>
   1d698:	sub	r3, r5, r6
   1d69c:	cmp	r3, #3
   1d6a0:	beq	1db08 <__flatcc_gen_sort@@Base+0x21f4>
   1d6a4:	ldr	r3, [r8, #204]	; 0xcc
   1d6a8:	mov	r2, #2
   1d6ac:	mov	r1, #1
   1d6b0:	ldr	r0, [pc, #1840]	; 1dde8 <__flatcc_gen_sort@@Base+0x24d4>
   1d6b4:	bl	1401c <fwrite@plt>
   1d6b8:	ldrd	r2, [r4, #96]	; 0x60
   1d6bc:	ldr	r1, [pc, #1888]	; 1de24 <__flatcc_gen_sort@@Base+0x2510>
   1d6c0:	ldr	r0, [r8, #204]	; 0xcc
   1d6c4:	bl	14094 <fprintf@plt>
   1d6c8:	add	r6, r6, #1
   1d6cc:	b	1d670 <__flatcc_gen_sort@@Base+0x1d5c>
   1d6d0:	ldrd	sl, [r4, #96]	; 0x60
   1d6d4:	ldr	r0, [r8, #204]	; 0xcc
   1d6d8:	mov	r2, r8
   1d6dc:	strd	sl, [sp]
   1d6e0:	ldr	r1, [pc, #1856]	; 1de28 <__flatcc_gen_sort@@Base+0x2514>
   1d6e4:	bl	14094 <fprintf@plt>
   1d6e8:	mov	r2, r6
   1d6ec:	b	1d4e8 <__flatcc_gen_sort@@Base+0x1bd4>
   1d6f0:	ldr	r3, [r4, #16]
   1d6f4:	cmp	r3, #5
   1d6f8:	beq	1db28 <__flatcc_gen_sort@@Base+0x2214>
   1d6fc:	sub	r3, r3, #1
   1d700:	cmp	r3, #10
   1d704:	ldrls	pc, [pc, r3, lsl #2]
   1d708:	b	1dc6c <__flatcc_gen_sort@@Base+0x2358>
   1d70c:	andeq	sp, r1, r8, asr #24
   1d710:	andeq	sp, r1, r4, asr ip
   1d714:	andeq	sp, r1, r0, ror #24
   1d718:	andeq	sp, r1, r8, lsl ip
   1d71c:	andeq	sp, r1, ip, ror #24
   1d720:	andeq	sp, r1, r0, lsr ip
   1d724:	andeq	sp, r1, ip, lsr ip
   1d728:	strdeq	sp, [r1], -r4
   1d72c:	andeq	sp, r1, r0, lsl #24
   1d730:	andeq	sp, r1, ip, lsl #24
   1d734:	andeq	sp, r1, r4, lsr #24
   1d738:	ldr	r3, [r4, #16]
   1d73c:	sub	r3, r3, #1
   1d740:	cmp	r3, #10
   1d744:	ldrls	pc, [pc, r3, lsl #2]
   1d748:	b	1dd7c <__flatcc_gen_sort@@Base+0x2468>
   1d74c:	andeq	sp, r1, r4, lsr #23
   1d750:	andeq	sp, r1, r0, lsl #23
   1d754:	andeq	sp, r1, ip, asr #23
   1d758:	ldrdeq	sp, [r1], -r4
   1d75c:	andeq	sp, r1, ip, lsr #23
   1d760:			; <UNDEFINED> instruction: 0x0001dbb4
   1d764:	andeq	sp, r1, r4, ror #23
   1d768:	andeq	sp, r1, ip, ror #23
   1d76c:			; <UNDEFINED> instruction: 0x0001dbbc
   1d770:	andeq	sp, r1, r4, asr #23
   1d774:	ldrdeq	sp, [r1], -ip
   1d778:	ldr	r2, [pc, #1708]	; 1de2c <__flatcc_gen_sort@@Base+0x2518>
   1d77c:	ldr	r1, [pc, #1684]	; 1de18 <__flatcc_gen_sort@@Base+0x2504>
   1d780:	ldr	r0, [r8, #204]	; 0xcc
   1d784:	bl	14094 <fprintf@plt>
   1d788:	b	1d16c <__flatcc_gen_sort@@Base+0x1858>
   1d78c:	ldr	r1, [pc, #1692]	; 1de30 <__flatcc_gen_sort@@Base+0x251c>
   1d790:	ldr	r2, [pc, #1692]	; 1de34 <__flatcc_gen_sort@@Base+0x2520>
   1d794:	ldr	r3, [pc, #1692]	; 1de38 <__flatcc_gen_sort@@Base+0x2524>
   1d798:	ldr	r0, [r1]
   1d79c:	str	r2, [sp]
   1d7a0:	ldr	r1, [pc, #1684]	; 1de3c <__flatcc_gen_sort@@Base+0x2528>
   1d7a4:	ldr	r2, [pc, #1684]	; 1de40 <__flatcc_gen_sort@@Base+0x252c>
   1d7a8:	bl	14094 <fprintf@plt>
   1d7ac:	ldr	r3, [pc, #1680]	; 1de44 <__flatcc_gen_sort@@Base+0x2530>
   1d7b0:	ldr	r2, [pc, #1664]	; 1de38 <__flatcc_gen_sort@@Base+0x2524>
   1d7b4:	ldr	r1, [pc, #1668]	; 1de40 <__flatcc_gen_sort@@Base+0x252c>
   1d7b8:	ldr	r0, [pc, #1672]	; 1de48 <__flatcc_gen_sort@@Base+0x2534>
   1d7bc:	bl	14148 <__assert_fail@plt>
   1d7c0:	mov	r2, r7
   1d7c4:	mov	r1, #0
   1d7c8:	mov	r0, r6
   1d7cc:	bl	140ac <memset@plt>
   1d7d0:	mov	r2, r7
   1d7d4:	mov	r1, #0
   1d7d8:	mov	r0, r9
   1d7dc:	bl	140ac <memset@plt>
   1d7e0:	mov	r2, r6
   1d7e4:	mov	r1, r4
   1d7e8:	ldr	r0, [r4, #12]
   1d7ec:	bl	170c4 <__flatcc_fb_scoped_symbol_name@@Base>
   1d7f0:	ldr	r5, [r4, #20]
   1d7f4:	cmp	r5, #0
   1d7f8:	beq	1d8a0 <__flatcc_gen_sort@@Base+0x1f8c>
   1d7fc:	ldrh	r3, [r5, #24]
   1d800:	cmp	r3, #10
   1d804:	beq	1d90c <__flatcc_gen_sort@@Base+0x1ff8>
   1d808:	cmp	r3, #14
   1d80c:	beq	1d8c0 <__flatcc_gen_sort@@Base+0x1fac>
   1d810:	cmp	r3, #0
   1d814:	beq	1d878 <__flatcc_gen_sort@@Base+0x1f64>
   1d818:	ldr	r1, [pc, #1552]	; 1de30 <__flatcc_gen_sort@@Base+0x251c>
   1d81c:	ldr	r2, [pc, #1576]	; 1de4c <__flatcc_gen_sort@@Base+0x2538>
   1d820:	ldr	r3, [pc, #1576]	; 1de50 <__flatcc_gen_sort@@Base+0x253c>
   1d824:	ldr	r0, [r1]
   1d828:	str	r2, [sp]
   1d82c:	ldr	r1, [pc, #1544]	; 1de3c <__flatcc_gen_sort@@Base+0x2528>
   1d830:	ldr	r2, [pc, #1544]	; 1de40 <__flatcc_gen_sort@@Base+0x252c>
   1d834:	bl	14094 <fprintf@plt>
   1d838:	ldr	r3, [pc, #1556]	; 1de54 <__flatcc_gen_sort@@Base+0x2540>
   1d83c:	ldr	r2, [pc, #1548]	; 1de50 <__flatcc_gen_sort@@Base+0x253c>
   1d840:	ldr	r1, [pc, #1528]	; 1de40 <__flatcc_gen_sort@@Base+0x252c>
   1d844:	ldr	r0, [pc, #1532]	; 1de48 <__flatcc_gen_sort@@Base+0x2534>
   1d848:	bl	14148 <__assert_fail@plt>
   1d84c:	ldr	r1, [r8, #204]	; 0xcc
   1d850:	mov	r0, #10
   1d854:	bl	140f4 <fputc@plt>
   1d858:	add	r3, sp, #40	; 0x28
   1d85c:	ldr	r0, [r8, #204]	; 0xcc
   1d860:	mov	r2, r3
   1d864:	str	r3, [sp, #4]
   1d868:	str	r8, [sp]
   1d86c:	ldr	r1, [pc, #1508]	; 1de58 <__flatcc_gen_sort@@Base+0x2544>
   1d870:	bl	14094 <fprintf@plt>
   1d874:	b	1d214 <__flatcc_gen_sort@@Base+0x1900>
   1d878:	ldr	r0, [r8, #204]	; 0xcc
   1d87c:	mov	r3, r6
   1d880:	str	r6, [sp, #4]
   1d884:	str	r6, [sp]
   1d888:	mov	r2, r6
   1d88c:	mov	r1, sl
   1d890:	bl	14094 <fprintf@plt>
   1d894:	ldr	r5, [r5]
   1d898:	cmp	r5, #0
   1d89c:	bne	1d7fc <__flatcc_gen_sort@@Base+0x1ee8>
   1d8a0:	ldr	r0, [r8, #204]	; 0xcc
   1d8a4:	mov	r2, r8
   1d8a8:	str	r6, [sp]
   1d8ac:	mov	r3, r8
   1d8b0:	ldr	r1, [pc, #1444]	; 1de5c <__flatcc_gen_sort@@Base+0x2548>
   1d8b4:	bl	14094 <fprintf@plt>
   1d8b8:	mov	r2, #1
   1d8bc:	b	1d254 <__flatcc_gen_sort@@Base+0x1940>
   1d8c0:	ldr	r1, [r5, #16]
   1d8c4:	mov	r2, r9
   1d8c8:	ldr	r0, [r1, #12]
   1d8cc:	bl	170c4 <__flatcc_fb_scoped_symbol_name@@Base>
   1d8d0:	ldr	r2, [r5, #4]
   1d8d4:	ldr	r0, [r8, #204]	; 0xcc
   1d8d8:	mov	r3, r6
   1d8dc:	ldm	r2, {r1, r2}
   1d8e0:	str	r6, [sp, #16]
   1d8e4:	str	r6, [sp, #12]
   1d8e8:	str	r1, [sp, #24]
   1d8ec:	str	r2, [sp, #20]
   1d8f0:	str	r1, [sp, #4]
   1d8f4:	str	r2, [sp]
   1d8f8:	str	r9, [sp, #8]
   1d8fc:	mov	r2, r6
   1d900:	ldr	r1, [pc, #1368]	; 1de60 <__flatcc_gen_sort@@Base+0x254c>
   1d904:	bl	14094 <fprintf@plt>
   1d908:	b	1d894 <__flatcc_gen_sort@@Base+0x1f80>
   1d90c:	ldr	r2, [r5, #4]
   1d910:	ldr	r0, [r8, #204]	; 0xcc
   1d914:	mov	r3, r6
   1d918:	ldm	r2, {r1, r2}
   1d91c:	str	r6, [sp, #16]
   1d920:	str	r6, [sp, #12]
   1d924:	str	r1, [sp, #24]
   1d928:	str	r2, [sp, #20]
   1d92c:	str	r1, [sp, #4]
   1d930:	str	r2, [sp]
   1d934:	str	r8, [sp, #8]
   1d938:	mov	r2, r6
   1d93c:	ldr	r1, [pc, #1312]	; 1de64 <__flatcc_gen_sort@@Base+0x2550>
   1d940:	bl	14094 <fprintf@plt>
   1d944:	b	1d894 <__flatcc_gen_sort@@Base+0x1f80>
   1d948:	ldrd	sl, [r4, #96]	; 0x60
   1d94c:	ldr	r0, [r8, #204]	; 0xcc
   1d950:	mov	r2, r9
   1d954:	strd	sl, [sp]
   1d958:	ldr	r1, [pc, #1288]	; 1de68 <__flatcc_gen_sort@@Base+0x2554>
   1d95c:	bl	14094 <fprintf@plt>
   1d960:	mov	r2, r6
   1d964:	b	1d4e8 <__flatcc_gen_sort@@Base+0x1bd4>
   1d968:	ldrd	sl, [r4, #96]	; 0x60
   1d96c:	ldr	r0, [r8, #204]	; 0xcc
   1d970:	mov	r2, r9
   1d974:	strd	sl, [sp]
   1d978:	ldr	r1, [pc, #1260]	; 1de6c <__flatcc_gen_sort@@Base+0x2558>
   1d97c:	bl	14094 <fprintf@plt>
   1d980:	mov	r2, r6
   1d984:	b	1d4e8 <__flatcc_gen_sort@@Base+0x1bd4>
   1d988:	cmp	r6, #0
   1d98c:	bne	1db54 <__flatcc_gen_sort@@Base+0x2240>
   1d990:	ldr	r2, [pc, #1148]	; 1de14 <__flatcc_gen_sort@@Base+0x2500>
   1d994:	ldr	r1, [pc, #1148]	; 1de18 <__flatcc_gen_sort@@Base+0x2504>
   1d998:	ldr	r0, [r8, #204]	; 0xcc
   1d99c:	bl	14094 <fprintf@plt>
   1d9a0:	ldrd	r2, [r4, #96]	; 0x60
   1d9a4:	ldr	r1, [pc, #1144]	; 1de24 <__flatcc_gen_sort@@Base+0x2510>
   1d9a8:	ldr	r0, [r8, #204]	; 0xcc
   1d9ac:	add	r6, r6, #1
   1d9b0:	bl	14094 <fprintf@plt>
   1d9b4:	ldr	r4, [r4]
   1d9b8:	cmp	r4, #0
   1d9bc:	beq	1d84c <__flatcc_gen_sort@@Base+0x1f38>
   1d9c0:	ldrh	r3, [r4, #72]	; 0x48
   1d9c4:	tst	r3, #4
   1d9c8:	bne	1d9b4 <__flatcc_gen_sort@@Base+0x20a0>
   1d9cc:	b	1d988 <__flatcc_gen_sort@@Base+0x2074>
   1d9d0:	cmp	fp, #0
   1d9d4:	beq	1db1c <__flatcc_gen_sort@@Base+0x2208>
   1d9d8:	ldr	r1, [r8, #204]	; 0xcc
   1d9dc:	mov	r0, #10
   1d9e0:	bl	140f4 <fputc@plt>
   1d9e4:	mov	fp, #1
   1d9e8:	b	1d228 <__flatcc_gen_sort@@Base+0x1914>
   1d9ec:	ldrd	sl, [r4, #96]	; 0x60
   1d9f0:	ldr	r0, [r8, #204]	; 0xcc
   1d9f4:	mov	r2, r9
   1d9f8:	strd	sl, [sp]
   1d9fc:	ldr	r1, [pc, #1132]	; 1de70 <__flatcc_gen_sort@@Base+0x255c>
   1da00:	bl	14094 <fprintf@plt>
   1da04:	mov	r2, r6
   1da08:	b	1d4e8 <__flatcc_gen_sort@@Base+0x1bd4>
   1da0c:	ldrd	sl, [r4, #96]	; 0x60
   1da10:	ldr	r0, [r8, #204]	; 0xcc
   1da14:	mov	r2, r9
   1da18:	strd	sl, [sp]
   1da1c:	ldr	r1, [pc, #1104]	; 1de74 <__flatcc_gen_sort@@Base+0x2560>
   1da20:	bl	14094 <fprintf@plt>
   1da24:	mov	r2, r6
   1da28:	b	1d4e8 <__flatcc_gen_sort@@Base+0x1bd4>
   1da2c:	ldrd	sl, [r4, #96]	; 0x60
   1da30:	ldr	r0, [r8, #204]	; 0xcc
   1da34:	mov	r2, r9
   1da38:	strd	sl, [sp]
   1da3c:	ldr	r1, [pc, #1076]	; 1de78 <__flatcc_gen_sort@@Base+0x2564>
   1da40:	bl	14094 <fprintf@plt>
   1da44:	mov	r2, r6
   1da48:	b	1d4e8 <__flatcc_gen_sort@@Base+0x1bd4>
   1da4c:	ldrd	sl, [r4, #96]	; 0x60
   1da50:	ldr	r0, [r8, #204]	; 0xcc
   1da54:	mov	r2, r9
   1da58:	strd	sl, [sp]
   1da5c:	ldr	r1, [pc, #1048]	; 1de7c <__flatcc_gen_sort@@Base+0x2568>
   1da60:	bl	14094 <fprintf@plt>
   1da64:	mov	r2, r6
   1da68:	b	1d4e8 <__flatcc_gen_sort@@Base+0x1bd4>
   1da6c:	ldr	r1, [pc, #956]	; 1de30 <__flatcc_gen_sort@@Base+0x251c>
   1da70:	ldr	r2, [pc, #1032]	; 1de80 <__flatcc_gen_sort@@Base+0x256c>
   1da74:	ldr	r3, [pc, #1032]	; 1de84 <__flatcc_gen_sort@@Base+0x2570>
   1da78:	ldr	r0, [r1]
   1da7c:	str	r2, [sp]
   1da80:	ldr	r1, [pc, #948]	; 1de3c <__flatcc_gen_sort@@Base+0x2528>
   1da84:	ldr	r2, [pc, #948]	; 1de40 <__flatcc_gen_sort@@Base+0x252c>
   1da88:	bl	14094 <fprintf@plt>
   1da8c:	ldr	r3, [pc, #944]	; 1de44 <__flatcc_gen_sort@@Base+0x2530>
   1da90:	ldr	r2, [pc, #1004]	; 1de84 <__flatcc_gen_sort@@Base+0x2570>
   1da94:	ldr	r1, [pc, #932]	; 1de40 <__flatcc_gen_sort@@Base+0x252c>
   1da98:	ldr	r0, [pc, #936]	; 1de48 <__flatcc_gen_sort@@Base+0x2534>
   1da9c:	bl	14148 <__assert_fail@plt>
   1daa0:	ldr	r5, [pc, #892]	; 1de24 <__flatcc_gen_sort@@Base+0x2510>
   1daa4:	b	1dab4 <__flatcc_gen_sort@@Base+0x21a0>
   1daa8:	ldr	r4, [r4]
   1daac:	cmp	r4, #0
   1dab0:	beq	1d84c <__flatcc_gen_sort@@Base+0x1f38>
   1dab4:	ldrh	r3, [r4, #72]	; 0x48
   1dab8:	tst	r3, #4
   1dabc:	bne	1daa8 <__flatcc_gen_sort@@Base+0x2194>
   1dac0:	ldrd	r2, [r4, #96]	; 0x60
   1dac4:	mov	r1, r5
   1dac8:	ldr	r0, [r8, #204]	; 0xcc
   1dacc:	bl	14094 <fprintf@plt>
   1dad0:	b	1daa8 <__flatcc_gen_sort@@Base+0x2194>
   1dad4:	ldr	r1, [pc, #852]	; 1de30 <__flatcc_gen_sort@@Base+0x251c>
   1dad8:	ldr	r2, [pc, #936]	; 1de88 <__flatcc_gen_sort@@Base+0x2574>
   1dadc:	ldr	r3, [pc, #936]	; 1de8c <__flatcc_gen_sort@@Base+0x2578>
   1dae0:	ldr	r0, [r1]
   1dae4:	str	r2, [sp]
   1dae8:	ldr	r1, [pc, #844]	; 1de3c <__flatcc_gen_sort@@Base+0x2528>
   1daec:	ldr	r2, [pc, #844]	; 1de40 <__flatcc_gen_sort@@Base+0x252c>
   1daf0:	bl	14094 <fprintf@plt>
   1daf4:	ldr	r3, [pc, #840]	; 1de44 <__flatcc_gen_sort@@Base+0x2530>
   1daf8:	ldr	r2, [pc, #908]	; 1de8c <__flatcc_gen_sort@@Base+0x2578>
   1dafc:	ldr	r1, [pc, #828]	; 1de40 <__flatcc_gen_sort@@Base+0x252c>
   1db00:	ldr	r0, [pc, #832]	; 1de48 <__flatcc_gen_sort@@Base+0x2534>
   1db04:	bl	14148 <__assert_fail@plt>
   1db08:	ldr	r2, [pc, #772]	; 1de14 <__flatcc_gen_sort@@Base+0x2500>
   1db0c:	ldr	r1, [pc, #772]	; 1de18 <__flatcc_gen_sort@@Base+0x2504>
   1db10:	ldr	r0, [r8, #204]	; 0xcc
   1db14:	bl	14094 <fprintf@plt>
   1db18:	b	1d6b8 <__flatcc_gen_sort@@Base+0x1da4>
   1db1c:	mov	r0, #0
   1db20:	add	sp, sp, #484	; 0x1e4
   1db24:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1db28:	ldr	r3, [pc, #864]	; 1de90 <__flatcc_gen_sort@@Base+0x257c>
   1db2c:	mov	r2, r8
   1db30:	ldrd	sl, [r4, #96]	; 0x60
   1db34:	ldr	r0, [r8, #204]	; 0xcc
   1db38:	ldr	r1, [pc, #852]	; 1de94 <__flatcc_gen_sort@@Base+0x2580>
   1db3c:	strd	sl, [sp]
   1db40:	bl	14094 <fprintf@plt>
   1db44:	mov	r2, r6
   1db48:	b	1d4e8 <__flatcc_gen_sort@@Base+0x1bd4>
   1db4c:	mov	r5, r3
   1db50:	b	1d4b0 <__flatcc_gen_sort@@Base+0x1b9c>
   1db54:	tst	r6, #3
   1db58:	bne	1db68 <__flatcc_gen_sort@@Base+0x2254>
   1db5c:	sub	r3, r5, r6
   1db60:	cmp	r3, #2
   1db64:	bgt	1d990 <__flatcc_gen_sort@@Base+0x207c>
   1db68:	ldr	r3, [r8, #204]	; 0xcc
   1db6c:	mov	r2, #2
   1db70:	mov	r1, #1
   1db74:	ldr	r0, [pc, #620]	; 1dde8 <__flatcc_gen_sort@@Base+0x24d4>
   1db78:	bl	1401c <fwrite@plt>
   1db7c:	b	1d9a0 <__flatcc_gen_sort@@Base+0x208c>
   1db80:	ldr	r3, [pc, #784]	; 1de98 <__flatcc_gen_sort@@Base+0x2584>
   1db84:	ldrd	sl, [r4, #96]	; 0x60
   1db88:	ldr	r0, [r8, #204]	; 0xcc
   1db8c:	mov	r2, r8
   1db90:	strd	sl, [sp]
   1db94:	ldr	r1, [pc, #768]	; 1de9c <__flatcc_gen_sort@@Base+0x2588>
   1db98:	bl	14094 <fprintf@plt>
   1db9c:	mov	r2, r6
   1dba0:	b	1d4e8 <__flatcc_gen_sort@@Base+0x1bd4>
   1dba4:	ldr	r3, [pc, #756]	; 1dea0 <__flatcc_gen_sort@@Base+0x258c>
   1dba8:	b	1db84 <__flatcc_gen_sort@@Base+0x2270>
   1dbac:	ldr	r3, [pc, #752]	; 1dea4 <__flatcc_gen_sort@@Base+0x2590>
   1dbb0:	b	1db84 <__flatcc_gen_sort@@Base+0x2270>
   1dbb4:	ldr	r3, [pc, #748]	; 1dea8 <__flatcc_gen_sort@@Base+0x2594>
   1dbb8:	b	1db84 <__flatcc_gen_sort@@Base+0x2270>
   1dbbc:	ldr	r3, [pc, #744]	; 1deac <__flatcc_gen_sort@@Base+0x2598>
   1dbc0:	b	1db84 <__flatcc_gen_sort@@Base+0x2270>
   1dbc4:	ldr	r3, [pc, #740]	; 1deb0 <__flatcc_gen_sort@@Base+0x259c>
   1dbc8:	b	1db84 <__flatcc_gen_sort@@Base+0x2270>
   1dbcc:	ldr	r3, [pc, #736]	; 1deb4 <__flatcc_gen_sort@@Base+0x25a0>
   1dbd0:	b	1db84 <__flatcc_gen_sort@@Base+0x2270>
   1dbd4:	ldr	r3, [pc, #732]	; 1deb8 <__flatcc_gen_sort@@Base+0x25a4>
   1dbd8:	b	1db84 <__flatcc_gen_sort@@Base+0x2270>
   1dbdc:	ldr	r3, [pc, #728]	; 1debc <__flatcc_gen_sort@@Base+0x25a8>
   1dbe0:	b	1db84 <__flatcc_gen_sort@@Base+0x2270>
   1dbe4:	ldr	r3, [pc, #724]	; 1dec0 <__flatcc_gen_sort@@Base+0x25ac>
   1dbe8:	b	1db84 <__flatcc_gen_sort@@Base+0x2270>
   1dbec:	ldr	r3, [pc, #720]	; 1dec4 <__flatcc_gen_sort@@Base+0x25b0>
   1dbf0:	b	1db84 <__flatcc_gen_sort@@Base+0x2270>
   1dbf4:	ldr	r2, [pc, #716]	; 1dec8 <__flatcc_gen_sort@@Base+0x25b4>
   1dbf8:	ldr	r3, [pc, #716]	; 1decc <__flatcc_gen_sort@@Base+0x25b8>
   1dbfc:	b	1db30 <__flatcc_gen_sort@@Base+0x221c>
   1dc00:	ldr	r2, [pc, #704]	; 1dec8 <__flatcc_gen_sort@@Base+0x25b4>
   1dc04:	ldr	r3, [pc, #708]	; 1ded0 <__flatcc_gen_sort@@Base+0x25bc>
   1dc08:	b	1db30 <__flatcc_gen_sort@@Base+0x221c>
   1dc0c:	ldr	r2, [pc, #692]	; 1dec8 <__flatcc_gen_sort@@Base+0x25b4>
   1dc10:	ldr	r3, [pc, #664]	; 1deb0 <__flatcc_gen_sort@@Base+0x259c>
   1dc14:	b	1db30 <__flatcc_gen_sort@@Base+0x221c>
   1dc18:	ldr	r2, [pc, #680]	; 1dec8 <__flatcc_gen_sort@@Base+0x25b4>
   1dc1c:	ldr	r3, [pc, #688]	; 1ded4 <__flatcc_gen_sort@@Base+0x25c0>
   1dc20:	b	1db30 <__flatcc_gen_sort@@Base+0x221c>
   1dc24:	ldr	r2, [pc, #668]	; 1dec8 <__flatcc_gen_sort@@Base+0x25b4>
   1dc28:	ldr	r3, [pc, #652]	; 1debc <__flatcc_gen_sort@@Base+0x25a8>
   1dc2c:	b	1db30 <__flatcc_gen_sort@@Base+0x221c>
   1dc30:	ldr	r2, [pc, #656]	; 1dec8 <__flatcc_gen_sort@@Base+0x25b4>
   1dc34:	ldr	r3, [pc, #668]	; 1ded8 <__flatcc_gen_sort@@Base+0x25c4>
   1dc38:	b	1db30 <__flatcc_gen_sort@@Base+0x221c>
   1dc3c:	ldr	r2, [pc, #644]	; 1dec8 <__flatcc_gen_sort@@Base+0x25b4>
   1dc40:	ldr	r3, [pc, #660]	; 1dedc <__flatcc_gen_sort@@Base+0x25c8>
   1dc44:	b	1db30 <__flatcc_gen_sort@@Base+0x221c>
   1dc48:	ldr	r2, [pc, #632]	; 1dec8 <__flatcc_gen_sort@@Base+0x25b4>
   1dc4c:	ldr	r3, [pc, #652]	; 1dee0 <__flatcc_gen_sort@@Base+0x25cc>
   1dc50:	b	1db30 <__flatcc_gen_sort@@Base+0x221c>
   1dc54:	ldr	r2, [pc, #620]	; 1dec8 <__flatcc_gen_sort@@Base+0x25b4>
   1dc58:	ldr	r3, [pc, #644]	; 1dee4 <__flatcc_gen_sort@@Base+0x25d0>
   1dc5c:	b	1db30 <__flatcc_gen_sort@@Base+0x221c>
   1dc60:	ldr	r2, [pc, #608]	; 1dec8 <__flatcc_gen_sort@@Base+0x25b4>
   1dc64:	ldr	r3, [pc, #636]	; 1dee8 <__flatcc_gen_sort@@Base+0x25d4>
   1dc68:	b	1db30 <__flatcc_gen_sort@@Base+0x221c>
   1dc6c:	ldr	r1, [pc, #444]	; 1de30 <__flatcc_gen_sort@@Base+0x251c>
   1dc70:	ldr	r2, [pc, #628]	; 1deec <__flatcc_gen_sort@@Base+0x25d8>
   1dc74:	mov	r3, #141	; 0x8d
   1dc78:	ldr	r0, [r1]
   1dc7c:	str	r2, [sp]
   1dc80:	ldr	r1, [pc, #436]	; 1de3c <__flatcc_gen_sort@@Base+0x2528>
   1dc84:	ldr	r2, [pc, #612]	; 1def0 <__flatcc_gen_sort@@Base+0x25dc>
   1dc88:	bl	14094 <fprintf@plt>
   1dc8c:	ldr	r3, [pc, #608]	; 1def4 <__flatcc_gen_sort@@Base+0x25e0>
   1dc90:	mov	r2, #141	; 0x8d
   1dc94:	ldr	r1, [pc, #596]	; 1def0 <__flatcc_gen_sort@@Base+0x25dc>
   1dc98:	ldr	r0, [pc, #424]	; 1de48 <__flatcc_gen_sort@@Base+0x2534>
   1dc9c:	bl	14148 <__assert_fail@plt>
   1dca0:	str	fp, [sp, #36]	; 0x24
   1dca4:	ldrh	r3, [r4, #72]	; 0x48
   1dca8:	tst	r3, #4
   1dcac:	bne	1dcf0 <__flatcc_gen_sort@@Base+0x23dc>
   1dcb0:	ldrh	r2, [r4, #24]
   1dcb4:	ldr	r3, [r4, #4]
   1dcb8:	cmp	r2, #14
   1dcbc:	ldm	r3, {r2, r3}
   1dcc0:	bne	1dcd4 <__flatcc_gen_sort@@Base+0x23c0>
   1dcc4:	ldr	r1, [r4, #16]
   1dcc8:	ldrh	r1, [r1, #8]
   1dccc:	cmp	r1, #4
   1dcd0:	beq	1ddb0 <__flatcc_gen_sort@@Base+0x249c>
   1dcd4:	ldrd	sl, [r4, #96]	; 0x60
   1dcd8:	ldr	r0, [r8, #204]	; 0xcc
   1dcdc:	mov	r1, r6
   1dce0:	str	r2, [sp]
   1dce4:	strd	sl, [sp, #8]
   1dce8:	mov	r2, r9
   1dcec:	bl	14094 <fprintf@plt>
   1dcf0:	ldr	r4, [r4, #108]	; 0x6c
   1dcf4:	cmp	r4, #0
   1dcf8:	bne	1dca4 <__flatcc_gen_sort@@Base+0x2390>
   1dcfc:	tst	r7, #1
   1dd00:	ldr	fp, [sp, #36]	; 0x24
   1dd04:	beq	1d364 <__flatcc_gen_sort@@Base+0x1a50>
   1dd08:	ldr	r4, [r5, #24]
   1dd0c:	cmp	r4, #0
   1dd10:	bne	1dd24 <__flatcc_gen_sort@@Base+0x2410>
   1dd14:	b	1d364 <__flatcc_gen_sort@@Base+0x1a50>
   1dd18:	ldr	r4, [r4, #108]	; 0x6c
   1dd1c:	cmp	r4, #0
   1dd20:	beq	1d364 <__flatcc_gen_sort@@Base+0x1a50>
   1dd24:	ldrh	r3, [r4, #72]	; 0x48
   1dd28:	tst	r3, #4
   1dd2c:	bne	1dd18 <__flatcc_gen_sort@@Base+0x2404>
   1dd30:	ldrh	r3, [r4, #24]
   1dd34:	cmp	r3, #14
   1dd38:	bne	1dd18 <__flatcc_gen_sort@@Base+0x2404>
   1dd3c:	ldr	r3, [r4, #16]
   1dd40:	ldrh	r3, [r3, #8]
   1dd44:	cmp	r3, #4
   1dd48:	bne	1dd18 <__flatcc_gen_sort@@Base+0x2404>
   1dd4c:	ldr	r1, [r4, #4]
   1dd50:	ldrd	r2, [r4, #96]	; 0x60
   1dd54:	ldr	r0, [r8, #204]	; 0xcc
   1dd58:	ldr	ip, [r1, #4]
   1dd5c:	strd	r2, [sp, #8]
   1dd60:	ldr	r2, [r1]
   1dd64:	mov	r3, ip
   1dd68:	str	r2, [sp]
   1dd6c:	ldr	r1, [pc, #388]	; 1def8 <__flatcc_gen_sort@@Base+0x25e4>
   1dd70:	mov	r2, r9
   1dd74:	bl	14094 <fprintf@plt>
   1dd78:	b	1dd18 <__flatcc_gen_sort@@Base+0x2404>
   1dd7c:	ldr	r1, [pc, #172]	; 1de30 <__flatcc_gen_sort@@Base+0x251c>
   1dd80:	ldr	r2, [pc, #356]	; 1deec <__flatcc_gen_sort@@Base+0x25d8>
   1dd84:	mov	r3, #96	; 0x60
   1dd88:	ldr	r0, [r1]
   1dd8c:	str	r2, [sp]
   1dd90:	ldr	r1, [pc, #164]	; 1de3c <__flatcc_gen_sort@@Base+0x2528>
   1dd94:	ldr	r2, [pc, #340]	; 1def0 <__flatcc_gen_sort@@Base+0x25dc>
   1dd98:	bl	14094 <fprintf@plt>
   1dd9c:	ldr	r3, [pc, #344]	; 1defc <__flatcc_gen_sort@@Base+0x25e8>
   1dda0:	mov	r2, #96	; 0x60
   1dda4:	ldr	r1, [pc, #324]	; 1def0 <__flatcc_gen_sort@@Base+0x25dc>
   1dda8:	ldr	r0, [pc, #152]	; 1de48 <__flatcc_gen_sort@@Base+0x2534>
   1ddac:	bl	14148 <__assert_fail@plt>
   1ddb0:	ldrd	sl, [r4, #96]	; 0x60
   1ddb4:	ldr	r0, [r8, #204]	; 0xcc
   1ddb8:	ldr	r1, [pc, #320]	; 1df00 <__flatcc_gen_sort@@Base+0x25ec>
   1ddbc:	str	r2, [sp]
   1ddc0:	strd	sl, [sp, #8]
   1ddc4:	mov	r2, r9
   1ddc8:	bl	14094 <fprintf@plt>
   1ddcc:	ldr	r7, [sp, #36]	; 0x24
   1ddd0:	b	1dcf0 <__flatcc_gen_sort@@Base+0x23dc>
   1ddd4:	mov	fp, r7
   1ddd8:	b	1d22c <__flatcc_gen_sort@@Base+0x1918>
   1dddc:	andeq	ip, r4, r0, asr #24
   1dde0:	andeq	ip, r4, r8, asr #25
   1dde4:	muleq	r4, r8, ip
   1dde8:	andeq	ip, r4, r8, lsl r8
   1ddec:	andeq	ip, r4, ip, asr #25
   1ddf0:	ldrdeq	ip, [r4], -ip	; <UNPREDICTABLE>
   1ddf4:	ldrdeq	ip, [r4], -r4
   1ddf8:	andeq	sp, r4, r0, asr r1
   1ddfc:	andeq	sp, r4, r8, ror r0
   1de00:	strheq	sp, [r4], -ip
   1de04:	ldrdeq	sp, [r4], -r4
   1de08:	andeq	sp, r4, ip, lsl #2
   1de0c:	ldrdeq	ip, [r4], -r4
   1de10:	strdeq	ip, [r4], -ip	; <UNPREDICTABLE>
   1de14:	andeq	r7, r4, r0, lsl #1
   1de18:	andeq	ip, r4, r0, lsl r8
   1de1c:	andeq	ip, r4, r4, lsr #28
   1de20:	andeq	ip, r4, r8, lsl sp
   1de24:	muleq	r4, ip, lr
   1de28:	andeq	ip, r4, ip, lsr lr
   1de2c:	andeq	r5, r4, r8, lsr r9
   1de30:	andeq	pc, r6, r8, lsr #1
   1de34:	andeq	ip, r4, r8, lsr r8
   1de38:			; <UNDEFINED> instruction: 0x000004b9
   1de3c:	ldrdeq	r4, [r4], -ip
   1de40:	andeq	ip, r4, ip, lsl r7
   1de44:	andeq	ip, r4, r0, lsr #12
   1de48:	andeq	sp, r4, r4, ror r2
   1de4c:	andeq	sp, r4, ip, asr #32
   1de50:	andeq	r0, r0, r8, asr #12
   1de54:	andeq	ip, r4, ip, asr #12
   1de58:	andeq	ip, r4, r8, asr lr
   1de5c:	andeq	ip, r4, r4, lsr #29
   1de60:	andeq	ip, r4, r4, asr #29
   1de64:	andeq	ip, r4, r8, asr #30
   1de68:			; <UNDEFINED> instruction: 0x0004cdb8
   1de6c:	andeq	ip, r4, r4, lsr #27
   1de70:	andeq	ip, r4, r0, ror #26
   1de74:	andeq	ip, r4, r0, asr #26
   1de78:	andeq	ip, r4, r4, lsr sp
   1de7c:	andeq	ip, r4, r0, asr sp
   1de80:	ldrdeq	ip, [r4], -r4
   1de84:	andeq	r0, r0, r5, lsr #9
   1de88:	andeq	ip, r4, r8, ror sp
   1de8c:	muleq	r0, r5, r4
   1de90:	muleq	r4, r8, r3
   1de94:	andeq	ip, r4, r0, lsl #28
   1de98:	strdeq	r4, [r4], -r0
   1de9c:	andeq	ip, r4, ip, lsl #28
   1dea0:	andeq	r4, r4, r8, ror #15
   1dea4:	ldrdeq	ip, [r5], -r0
   1dea8:	andeq	r4, r4, r8, lsl #16
   1deac:	andeq	r4, r4, r0, lsr #16
   1deb0:	andeq	r4, r4, r8, asr #7
   1deb4:	strdeq	r4, [r4], -r8
   1deb8:	andeq	r4, r4, r0, lsl #16
   1debc:	andeq	r4, r4, r0, asr #7
   1dec0:	andeq	r4, r4, r0, lsl r8
   1dec4:	andeq	r4, r4, r8, lsl r8
   1dec8:	andeq	lr, r4, ip, asr #2
   1decc:			; <UNDEFINED> instruction: 0x000443b0
   1ded0:			; <UNDEFINED> instruction: 0x000443b8
   1ded4:	muleq	r4, r0, r3
   1ded8:	andeq	r4, r4, r0, lsr #7
   1dedc:	andeq	r4, r4, r8, lsr #7
   1dee0:	andeq	r4, r4, ip, ror #6
   1dee4:	andeq	r4, r4, r8, ror r3
   1dee8:	andeq	r4, r4, r4, lsl #7
   1deec:	andeq	r4, r4, r8, ror #9
   1def0:	muleq	r4, r0, r4
   1def4:			; <UNDEFINED> instruction: 0x0004c5bc
   1def8:	muleq	r4, ip, r1
   1defc:	andeq	ip, r4, r8, lsr r6
   1df00:	andeq	sp, r4, r4, ror r1
   1df04:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1df08:	subs	r4, r0, #0
   1df0c:	beq	1dff4 <__flatcc_gen_sort@@Base+0x26e0>
   1df10:	mov	r7, #0
   1df14:	ldrh	r3, [r4, #72]	; 0x48
   1df18:	ands	r3, r3, #4
   1df1c:	bne	1df40 <__flatcc_gen_sort@@Base+0x262c>
   1df20:	ldrh	r2, [r4, #24]
   1df24:	cmp	r2, #14
   1df28:	bne	1df3c <__flatcc_gen_sort@@Base+0x2628>
   1df2c:	ldr	r2, [r4, #16]
   1df30:	ldrh	r1, [r2, #8]
   1df34:	cmp	r1, #1
   1df38:	beq	1df54 <__flatcc_gen_sort@@Base+0x2640>
   1df3c:	add	r7, r7, #1
   1df40:	ldr	r4, [r4]
   1df44:	cmp	r4, #0
   1df48:	bne	1df14 <__flatcc_gen_sort@@Base+0x2600>
   1df4c:	mov	r0, r7
   1df50:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1df54:	ldr	r5, [r2, #20]
   1df58:	cmp	r5, #0
   1df5c:	beq	1e00c <__flatcc_gen_sort@@Base+0x26f8>
   1df60:	mov	r9, r3
   1df64:	ldrh	r2, [r5, #72]	; 0x48
   1df68:	ands	r2, r2, #4
   1df6c:	bne	1df90 <__flatcc_gen_sort@@Base+0x267c>
   1df70:	ldrh	r1, [r5, #24]
   1df74:	cmp	r1, #14
   1df78:	bne	1df8c <__flatcc_gen_sort@@Base+0x2678>
   1df7c:	ldr	r1, [r5, #16]
   1df80:	ldrh	r0, [r1, #8]
   1df84:	cmp	r0, #1
   1df88:	beq	1dfa4 <__flatcc_gen_sort@@Base+0x2690>
   1df8c:	add	r9, r9, #1
   1df90:	ldr	r5, [r5]
   1df94:	cmp	r5, #0
   1df98:	bne	1df64 <__flatcc_gen_sort@@Base+0x2650>
   1df9c:	add	r7, r7, r9
   1dfa0:	b	1df40 <__flatcc_gen_sort@@Base+0x262c>
   1dfa4:	ldr	r8, [r1, #20]
   1dfa8:	cmp	r8, #0
   1dfac:	beq	1e014 <__flatcc_gen_sort@@Base+0x2700>
   1dfb0:	mov	r6, r2
   1dfb4:	ldrh	r2, [r8, #72]	; 0x48
   1dfb8:	tst	r2, #4
   1dfbc:	bne	1dfe0 <__flatcc_gen_sort@@Base+0x26cc>
   1dfc0:	ldrh	r2, [r8, #24]
   1dfc4:	cmp	r2, #14
   1dfc8:	bne	1dfdc <__flatcc_gen_sort@@Base+0x26c8>
   1dfcc:	ldr	r2, [r8, #16]
   1dfd0:	ldrh	r1, [r2, #8]
   1dfd4:	cmp	r1, #1
   1dfd8:	beq	1dffc <__flatcc_gen_sort@@Base+0x26e8>
   1dfdc:	add	r6, r6, #1
   1dfe0:	ldr	r8, [r8]
   1dfe4:	cmp	r8, #0
   1dfe8:	bne	1dfb4 <__flatcc_gen_sort@@Base+0x26a0>
   1dfec:	add	r9, r9, r6
   1dff0:	b	1df90 <__flatcc_gen_sort@@Base+0x267c>
   1dff4:	mov	r7, r4
   1dff8:	b	1df4c <__flatcc_gen_sort@@Base+0x2638>
   1dffc:	ldr	r0, [r2, #20]
   1e000:	bl	1df04 <__flatcc_gen_sort@@Base+0x25f0>
   1e004:	add	r6, r6, r0
   1e008:	b	1dfe0 <__flatcc_gen_sort@@Base+0x26cc>
   1e00c:	mov	r9, r5
   1e010:	b	1df9c <__flatcc_gen_sort@@Base+0x2688>
   1e014:	mov	r6, r8
   1e018:	b	1dfec <__flatcc_gen_sort@@Base+0x26d8>
   1e01c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e020:	sub	sp, sp, #260	; 0x104
   1e024:	mov	r7, r3
   1e028:	str	r2, [sp, #20]
   1e02c:	mov	r8, r0
   1e030:	mov	r4, r1
   1e034:	add	r0, sp, #36	; 0x24
   1e038:	mov	r2, #220	; 0xdc
   1e03c:	mov	r1, #0
   1e040:	bl	140ac <memset@plt>
   1e044:	cmp	r7, #1
   1e048:	beq	1e214 <__flatcc_gen_sort@@Base+0x2900>
   1e04c:	ldr	r3, [pc, #1384]	; 1e5bc <__flatcc_gen_sort@@Base+0x2ca8>
   1e050:	ldr	r2, [pc, #1384]	; 1e5c0 <__flatcc_gen_sort@@Base+0x2cac>
   1e054:	cmp	r7, #2
   1e058:	movne	r2, r3
   1e05c:	str	r2, [sp, #24]
   1e060:	ldr	fp, [r4]
   1e064:	cmp	fp, #0
   1e068:	moveq	sl, fp
   1e06c:	beq	1e3a4 <__flatcc_gen_sort@@Base+0x2a90>
   1e070:	ldr	r3, [fp, #4]
   1e074:	mov	r9, #0
   1e078:	mov	sl, r9
   1e07c:	ldr	r6, [r3]
   1e080:	ldr	r5, [r3, #4]
   1e084:	ldrh	r3, [fp, #24]
   1e088:	cmp	r3, #8
   1e08c:	beq	1e110 <__flatcc_gen_sort@@Base+0x27fc>
   1e090:	cmp	r3, #14
   1e094:	bne	1e150 <__flatcc_gen_sort@@Base+0x283c>
   1e098:	ldr	r1, [fp, #16]
   1e09c:	add	r2, sp, #36	; 0x24
   1e0a0:	ldr	r0, [r1, #12]
   1e0a4:	bl	170c4 <__flatcc_fb_scoped_symbol_name@@Base>
   1e0a8:	ldr	r3, [fp, #16]
   1e0ac:	ldrh	r4, [r3, #8]
   1e0b0:	ldrh	r3, [fp, #72]	; 0x48
   1e0b4:	cmp	r4, #1
   1e0b8:	beq	1e220 <__flatcc_gen_sort@@Base+0x290c>
   1e0bc:	tst	r3, #4
   1e0c0:	bne	1e184 <__flatcc_gen_sort@@Base+0x2870>
   1e0c4:	ldrd	r2, [fp, #88]	; 0x58
   1e0c8:	cmp	r3, #0
   1e0cc:	cmpeq	r2, #1
   1e0d0:	beq	1e1e8 <__flatcc_gen_sort@@Base+0x28d4>
   1e0d4:	cmp	r7, #1
   1e0d8:	beq	1e378 <__flatcc_gen_sort@@Base+0x2a64>
   1e0dc:	cmp	r7, #2
   1e0e0:	bne	1e1e8 <__flatcc_gen_sort@@Base+0x28d4>
   1e0e4:	ldr	r3, [sp, #296]	; 0x128
   1e0e8:	ldr	r0, [r8, #204]	; 0xcc
   1e0ec:	cmp	r3, #0
   1e0f0:	beq	1e4bc <__flatcc_gen_sort@@Base+0x2ba8>
   1e0f4:	stmib	sp, {r5, r6}
   1e0f8:	str	r6, [sp]
   1e0fc:	mov	r3, r5
   1e100:	add	r2, sp, #36	; 0x24
   1e104:	ldr	r1, [pc, #1208]	; 1e5c4 <__flatcc_gen_sort@@Base+0x2cb0>
   1e108:	bl	14094 <fprintf@plt>
   1e10c:	b	1e20c <__flatcc_gen_sort@@Base+0x28f8>
   1e110:	ldr	r3, [fp, #16]
   1e114:	sub	r3, r3, #1
   1e118:	cmp	r3, #10
   1e11c:	ldrls	pc, [pc, r3, lsl #2]
   1e120:	b	1e4ec <__flatcc_gen_sort@@Base+0x2bd8>
   1e124:	andeq	lr, r1, r8, lsl r3
   1e128:	strdeq	lr, [r1], -r0
   1e12c:	andeq	lr, r1, r4, ror r2
   1e130:	andeq	lr, r1, r0, ror #5
   1e134:	ldrdeq	lr, [r1], -r0
   1e138:	ldrdeq	lr, [r1], -r8
   1e13c:	andeq	lr, r1, r0, lsl r3
   1e140:	strdeq	lr, [r1], -r8
   1e144:	andeq	lr, r1, r0, lsl #6
   1e148:	andeq	lr, r1, r8, lsl #6
   1e14c:	andeq	lr, r1, r8, ror #5
   1e150:	ldr	r1, [pc, #1136]	; 1e5c8 <__flatcc_gen_sort@@Base+0x2cb4>
   1e154:	ldr	r2, [pc, #1136]	; 1e5cc <__flatcc_gen_sort@@Base+0x2cb8>
   1e158:	ldr	r3, [pc, #1136]	; 1e5d0 <__flatcc_gen_sort@@Base+0x2cbc>
   1e15c:	ldr	r0, [r1]
   1e160:	str	r2, [sp]
   1e164:	ldr	r1, [pc, #1128]	; 1e5d4 <__flatcc_gen_sort@@Base+0x2cc0>
   1e168:	ldr	r2, [pc, #1128]	; 1e5d8 <__flatcc_gen_sort@@Base+0x2cc4>
   1e16c:	bl	14094 <fprintf@plt>
   1e170:	ldr	r3, [pc, #1124]	; 1e5dc <__flatcc_gen_sort@@Base+0x2cc8>
   1e174:	ldr	r2, [pc, #1108]	; 1e5d0 <__flatcc_gen_sort@@Base+0x2cbc>
   1e178:	ldr	r1, [pc, #1112]	; 1e5d8 <__flatcc_gen_sort@@Base+0x2cc4>
   1e17c:	ldr	r0, [pc, #1116]	; 1e5e0 <__flatcc_gen_sort@@Base+0x2ccc>
   1e180:	bl	14148 <__assert_fail@plt>
   1e184:	add	r3, r9, #1
   1e188:	mov	r2, r9
   1e18c:	ldr	r1, [pc, #1104]	; 1e5e4 <__flatcc_gen_sort@@Base+0x2cd0>
   1e190:	ldr	r0, [r8, #204]	; 0xcc
   1e194:	add	sl, sl, #1
   1e198:	mov	r9, r3
   1e19c:	bl	14094 <fprintf@plt>
   1e1a0:	ldr	fp, [fp]
   1e1a4:	cmp	fp, #0
   1e1a8:	beq	1e3a4 <__flatcc_gen_sort@@Base+0x2a90>
   1e1ac:	ldr	r3, [fp, #4]
   1e1b0:	cmp	sl, #0
   1e1b4:	ldr	r6, [r3]
   1e1b8:	ldr	r5, [r3, #4]
   1e1bc:	ble	1e084 <__flatcc_gen_sort@@Base+0x2770>
   1e1c0:	tst	sl, #3
   1e1c4:	ldr	r3, [r8, #204]	; 0xcc
   1e1c8:	moveq	r2, #4
   1e1cc:	moveq	r1, #1
   1e1d0:	ldreq	r0, [pc, #1040]	; 1e5e8 <__flatcc_gen_sort@@Base+0x2cd4>
   1e1d4:	movne	r2, #2
   1e1d8:	movne	r1, #1
   1e1dc:	ldrne	r0, [pc, #1032]	; 1e5ec <__flatcc_gen_sort@@Base+0x2cd8>
   1e1e0:	bl	1401c <fwrite@plt>
   1e1e4:	b	1e084 <__flatcc_gen_sort@@Base+0x2770>
   1e1e8:	ldr	r3, [sp, #296]	; 0x128
   1e1ec:	ldr	r0, [r8, #204]	; 0xcc
   1e1f0:	cmp	r3, #0
   1e1f4:	bne	1e25c <__flatcc_gen_sort@@Base+0x2948>
   1e1f8:	str	sl, [sp]
   1e1fc:	mov	r3, r6
   1e200:	mov	r2, r5
   1e204:	ldr	r1, [pc, #996]	; 1e5f0 <__flatcc_gen_sort@@Base+0x2cdc>
   1e208:	bl	14094 <fprintf@plt>
   1e20c:	add	sl, sl, #1
   1e210:	b	1e1a0 <__flatcc_gen_sort@@Base+0x288c>
   1e214:	ldr	r3, [pc, #984]	; 1e5f4 <__flatcc_gen_sort@@Base+0x2ce0>
   1e218:	str	r3, [sp, #24]
   1e21c:	b	1e060 <__flatcc_gen_sort@@Base+0x274c>
   1e220:	tst	r3, #4
   1e224:	bne	1e320 <__flatcc_gen_sort@@Base+0x2a0c>
   1e228:	ldr	r3, [sp, #296]	; 0x128
   1e22c:	ldr	r0, [r8, #204]	; 0xcc
   1e230:	cmp	r3, #0
   1e234:	beq	1e3f8 <__flatcc_gen_sort@@Base+0x2ae4>
   1e238:	str	r6, [sp, #12]
   1e23c:	str	r5, [sp, #8]
   1e240:	stm	sp, {r5, r6}
   1e244:	ldr	r3, [sp, #24]
   1e248:	add	r2, sp, #36	; 0x24
   1e24c:	ldr	r1, [pc, #932]	; 1e5f8 <__flatcc_gen_sort@@Base+0x2ce4>
   1e250:	add	sl, sl, #1
   1e254:	bl	14094 <fprintf@plt>
   1e258:	b	1e1a0 <__flatcc_gen_sort@@Base+0x288c>
   1e25c:	stm	sp, {r5, r6}
   1e260:	mov	r3, r6
   1e264:	mov	r2, r5
   1e268:	ldr	r1, [pc, #908]	; 1e5fc <__flatcc_gen_sort@@Base+0x2ce8>
   1e26c:	bl	14094 <fprintf@plt>
   1e270:	b	1e20c <__flatcc_gen_sort@@Base+0x28f8>
   1e274:	ldr	r3, [pc, #900]	; 1e600 <__flatcc_gen_sort@@Base+0x2cec>
   1e278:	ldrh	r2, [fp, #72]	; 0x48
   1e27c:	tst	r2, #4
   1e280:	bne	1e184 <__flatcc_gen_sort@@Base+0x2870>
   1e284:	ldrd	r0, [fp, #88]	; 0x58
   1e288:	cmp	r1, #0
   1e28c:	cmpeq	r0, #1
   1e290:	beq	1e1e8 <__flatcc_gen_sort@@Base+0x28d4>
   1e294:	cmp	r7, #1
   1e298:	beq	1e34c <__flatcc_gen_sort@@Base+0x2a38>
   1e29c:	cmp	r7, #2
   1e2a0:	bne	1e1e8 <__flatcc_gen_sort@@Base+0x28d4>
   1e2a4:	ldr	r2, [sp, #296]	; 0x128
   1e2a8:	ldr	r0, [r8, #204]	; 0xcc
   1e2ac:	cmp	r2, #0
   1e2b0:	beq	1e3d0 <__flatcc_gen_sort@@Base+0x2abc>
   1e2b4:	str	r6, [sp, #12]
   1e2b8:	str	r5, [sp, #8]
   1e2bc:	stm	sp, {r5, r6}
   1e2c0:	mov	r2, r8
   1e2c4:	ldr	r1, [pc, #824]	; 1e604 <__flatcc_gen_sort@@Base+0x2cf0>
   1e2c8:	bl	14094 <fprintf@plt>
   1e2cc:	b	1e20c <__flatcc_gen_sort@@Base+0x28f8>
   1e2d0:	ldr	r3, [pc, #816]	; 1e608 <__flatcc_gen_sort@@Base+0x2cf4>
   1e2d4:	b	1e278 <__flatcc_gen_sort@@Base+0x2964>
   1e2d8:	ldr	r3, [pc, #812]	; 1e60c <__flatcc_gen_sort@@Base+0x2cf8>
   1e2dc:	b	1e278 <__flatcc_gen_sort@@Base+0x2964>
   1e2e0:	ldr	r3, [pc, #808]	; 1e610 <__flatcc_gen_sort@@Base+0x2cfc>
   1e2e4:	b	1e278 <__flatcc_gen_sort@@Base+0x2964>
   1e2e8:	ldr	r3, [pc, #804]	; 1e614 <__flatcc_gen_sort@@Base+0x2d00>
   1e2ec:	b	1e278 <__flatcc_gen_sort@@Base+0x2964>
   1e2f0:	ldr	r3, [pc, #800]	; 1e618 <__flatcc_gen_sort@@Base+0x2d04>
   1e2f4:	b	1e278 <__flatcc_gen_sort@@Base+0x2964>
   1e2f8:	ldr	r3, [pc, #796]	; 1e61c <__flatcc_gen_sort@@Base+0x2d08>
   1e2fc:	b	1e278 <__flatcc_gen_sort@@Base+0x2964>
   1e300:	ldr	r3, [pc, #792]	; 1e620 <__flatcc_gen_sort@@Base+0x2d0c>
   1e304:	b	1e278 <__flatcc_gen_sort@@Base+0x2964>
   1e308:	ldr	r3, [pc, #788]	; 1e624 <__flatcc_gen_sort@@Base+0x2d10>
   1e30c:	b	1e278 <__flatcc_gen_sort@@Base+0x2964>
   1e310:	ldr	r3, [pc, #784]	; 1e628 <__flatcc_gen_sort@@Base+0x2d14>
   1e314:	b	1e278 <__flatcc_gen_sort@@Base+0x2964>
   1e318:	ldr	r3, [pc, #780]	; 1e62c <__flatcc_gen_sort@@Base+0x2d18>
   1e31c:	b	1e278 <__flatcc_gen_sort@@Base+0x2964>
   1e320:	mov	r3, r9
   1e324:	mov	r2, r9
   1e328:	ldr	r1, [pc, #768]	; 1e630 <__flatcc_gen_sort@@Base+0x2d1c>
   1e32c:	ldr	r0, [r8, #204]	; 0xcc
   1e330:	bl	14094 <fprintf@plt>
   1e334:	ldr	r3, [fp, #16]
   1e338:	add	r9, r9, #1
   1e33c:	ldr	r0, [r3, #20]
   1e340:	bl	1df04 <__flatcc_gen_sort@@Base+0x25f0>
   1e344:	add	sl, sl, r0
   1e348:	b	1e1a0 <__flatcc_gen_sort@@Base+0x288c>
   1e34c:	ldr	r2, [sp, #296]	; 0x128
   1e350:	ldr	r0, [r8, #204]	; 0xcc
   1e354:	cmp	r2, #0
   1e358:	beq	1e3e4 <__flatcc_gen_sort@@Base+0x2ad0>
   1e35c:	str	r6, [sp, #12]
   1e360:	str	r5, [sp, #8]
   1e364:	stm	sp, {r5, r6}
   1e368:	mov	r2, r8
   1e36c:	ldr	r1, [pc, #704]	; 1e634 <__flatcc_gen_sort@@Base+0x2d20>
   1e370:	bl	14094 <fprintf@plt>
   1e374:	b	1e20c <__flatcc_gen_sort@@Base+0x28f8>
   1e378:	ldr	r3, [sp, #296]	; 0x128
   1e37c:	ldr	r0, [r8, #204]	; 0xcc
   1e380:	cmp	r3, #0
   1e384:	beq	1e4d4 <__flatcc_gen_sort@@Base+0x2bc0>
   1e388:	stmib	sp, {r5, r6}
   1e38c:	str	r6, [sp]
   1e390:	mov	r3, r5
   1e394:	add	r2, sp, #36	; 0x24
   1e398:	ldr	r1, [pc, #664]	; 1e638 <__flatcc_gen_sort@@Base+0x2d24>
   1e39c:	bl	14094 <fprintf@plt>
   1e3a0:	b	1e20c <__flatcc_gen_sort@@Base+0x28f8>
   1e3a4:	ldr	r3, [sp, #20]
   1e3a8:	cmp	r3, #0
   1e3ac:	ble	1e3c4 <__flatcc_gen_sort@@Base+0x2ab0>
   1e3b0:	ldr	r3, [r8, #204]	; 0xcc
   1e3b4:	mov	r2, #4
   1e3b8:	mov	r1, #1
   1e3bc:	ldr	r0, [pc, #548]	; 1e5e8 <__flatcc_gen_sort@@Base+0x2cd4>
   1e3c0:	bl	1401c <fwrite@plt>
   1e3c4:	mov	r0, sl
   1e3c8:	add	sp, sp, #260	; 0x104
   1e3cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e3d0:	stm	sp, {r5, r6, sl}
   1e3d4:	mov	r2, r8
   1e3d8:	ldr	r1, [pc, #604]	; 1e63c <__flatcc_gen_sort@@Base+0x2d28>
   1e3dc:	bl	14094 <fprintf@plt>
   1e3e0:	b	1e20c <__flatcc_gen_sort@@Base+0x28f8>
   1e3e4:	stm	sp, {r5, r6, sl}
   1e3e8:	mov	r2, r8
   1e3ec:	ldr	r1, [pc, #588]	; 1e640 <__flatcc_gen_sort@@Base+0x2d2c>
   1e3f0:	bl	14094 <fprintf@plt>
   1e3f4:	b	1e20c <__flatcc_gen_sort@@Base+0x28f8>
   1e3f8:	stm	sp, {r5, r6}
   1e3fc:	ldr	r3, [sp, #24]
   1e400:	add	r2, sp, #36	; 0x24
   1e404:	ldr	r1, [pc, #568]	; 1e644 <__flatcc_gen_sort@@Base+0x2d30>
   1e408:	bl	14094 <fprintf@plt>
   1e40c:	ldr	r3, [fp, #16]
   1e410:	ldr	r0, [r3, #20]
   1e414:	bl	1df04 <__flatcc_gen_sort@@Base+0x25f0>
   1e418:	subs	r6, r0, #0
   1e41c:	ble	1e4ac <__flatcc_gen_sort@@Base+0x2b98>
   1e420:	ldr	r3, [sp, #20]
   1e424:	cmp	r3, #0
   1e428:	beq	1e588 <__flatcc_gen_sort@@Base+0x2c74>
   1e42c:	cmp	r3, #4
   1e430:	str	r4, [sp, #28]
   1e434:	ldr	r4, [sp, #296]	; 0x128
   1e438:	bgt	1e54c <__flatcc_gen_sort@@Base+0x2c38>
   1e43c:	b	1e470 <__flatcc_gen_sort@@Base+0x2b5c>
   1e440:	ldr	r3, [r8, #204]	; 0xcc
   1e444:	mov	r2, #2
   1e448:	ldr	r1, [sp, #28]
   1e44c:	ldr	r0, [pc, #500]	; 1e648 <__flatcc_gen_sort@@Base+0x2d34>
   1e450:	bl	1401c <fwrite@plt>
   1e454:	mov	r2, r5
   1e458:	add	r4, r4, #1
   1e45c:	ldr	r1, [pc, #488]	; 1e64c <__flatcc_gen_sort@@Base+0x2d38>
   1e460:	ldr	r0, [r8, #204]	; 0xcc
   1e464:	bl	14094 <fprintf@plt>
   1e468:	cmp	r6, r4
   1e46c:	beq	1e4a8 <__flatcc_gen_sort@@Base+0x2b94>
   1e470:	cmp	r4, #0
   1e474:	add	r5, r4, sl
   1e478:	beq	1e440 <__flatcc_gen_sort@@Base+0x2b2c>
   1e47c:	tst	r4, #3
   1e480:	bne	1e440 <__flatcc_gen_sort@@Base+0x2b2c>
   1e484:	ldr	r3, [sp, #20]
   1e488:	sub	r3, r3, r4
   1e48c:	cmp	r3, #2
   1e490:	ble	1e440 <__flatcc_gen_sort@@Base+0x2b2c>
   1e494:	ldr	r2, [pc, #436]	; 1e650 <__flatcc_gen_sort@@Base+0x2d3c>
   1e498:	ldr	r1, [pc, #436]	; 1e654 <__flatcc_gen_sort@@Base+0x2d40>
   1e49c:	ldr	r0, [r8, #204]	; 0xcc
   1e4a0:	bl	14094 <fprintf@plt>
   1e4a4:	b	1e454 <__flatcc_gen_sort@@Base+0x2b40>
   1e4a8:	add	sl, r6, sl
   1e4ac:	ldr	r1, [r8, #204]	; 0xcc
   1e4b0:	mov	r0, #41	; 0x29
   1e4b4:	bl	140f4 <fputc@plt>
   1e4b8:	b	1e1a0 <__flatcc_gen_sort@@Base+0x288c>
   1e4bc:	stm	sp, {r6, sl}
   1e4c0:	mov	r3, r5
   1e4c4:	add	r2, sp, #36	; 0x24
   1e4c8:	ldr	r1, [pc, #392]	; 1e658 <__flatcc_gen_sort@@Base+0x2d44>
   1e4cc:	bl	14094 <fprintf@plt>
   1e4d0:	b	1e20c <__flatcc_gen_sort@@Base+0x28f8>
   1e4d4:	stm	sp, {r6, sl}
   1e4d8:	mov	r3, r5
   1e4dc:	add	r2, sp, #36	; 0x24
   1e4e0:	ldr	r1, [pc, #372]	; 1e65c <__flatcc_gen_sort@@Base+0x2d48>
   1e4e4:	bl	14094 <fprintf@plt>
   1e4e8:	b	1e20c <__flatcc_gen_sort@@Base+0x28f8>
   1e4ec:	ldr	r1, [pc, #212]	; 1e5c8 <__flatcc_gen_sort@@Base+0x2cb4>
   1e4f0:	ldr	r2, [pc, #360]	; 1e660 <__flatcc_gen_sort@@Base+0x2d4c>
   1e4f4:	mov	r3, #96	; 0x60
   1e4f8:	ldr	r0, [r1]
   1e4fc:	str	r2, [sp]
   1e500:	ldr	r1, [pc, #204]	; 1e5d4 <__flatcc_gen_sort@@Base+0x2cc0>
   1e504:	ldr	r2, [pc, #344]	; 1e664 <__flatcc_gen_sort@@Base+0x2d50>
   1e508:	bl	14094 <fprintf@plt>
   1e50c:	ldr	r3, [pc, #340]	; 1e668 <__flatcc_gen_sort@@Base+0x2d54>
   1e510:	mov	r2, #96	; 0x60
   1e514:	ldr	r1, [pc, #328]	; 1e664 <__flatcc_gen_sort@@Base+0x2d50>
   1e518:	ldr	r0, [pc, #192]	; 1e5e0 <__flatcc_gen_sort@@Base+0x2ccc>
   1e51c:	bl	14148 <__assert_fail@plt>
   1e520:	ldr	r2, [pc, #296]	; 1e650 <__flatcc_gen_sort@@Base+0x2d3c>
   1e524:	ldr	r1, [pc, #296]	; 1e654 <__flatcc_gen_sort@@Base+0x2d40>
   1e528:	ldr	r0, [r8, #204]	; 0xcc
   1e52c:	bl	14094 <fprintf@plt>
   1e530:	mov	r2, r5
   1e534:	add	r4, r4, #1
   1e538:	ldr	r1, [pc, #268]	; 1e64c <__flatcc_gen_sort@@Base+0x2d38>
   1e53c:	ldr	r0, [r8, #204]	; 0xcc
   1e540:	bl	14094 <fprintf@plt>
   1e544:	cmp	r4, r6
   1e548:	beq	1e5b4 <__flatcc_gen_sort@@Base+0x2ca0>
   1e54c:	cmp	r4, #0
   1e550:	add	r5, r4, sl
   1e554:	beq	1e520 <__flatcc_gen_sort@@Base+0x2c0c>
   1e558:	tst	r4, #3
   1e55c:	bne	1e570 <__flatcc_gen_sort@@Base+0x2c5c>
   1e560:	ldr	r3, [sp, #20]
   1e564:	sub	r3, r3, r4
   1e568:	cmp	r3, #2
   1e56c:	bgt	1e520 <__flatcc_gen_sort@@Base+0x2c0c>
   1e570:	ldr	r3, [r8, #204]	; 0xcc
   1e574:	mov	r2, #2
   1e578:	ldr	r1, [sp, #28]
   1e57c:	ldr	r0, [pc, #196]	; 1e648 <__flatcc_gen_sort@@Base+0x2d34>
   1e580:	bl	1401c <fwrite@plt>
   1e584:	b	1e530 <__flatcc_gen_sort@@Base+0x2c1c>
   1e588:	ldr	r4, [pc, #188]	; 1e64c <__flatcc_gen_sort@@Base+0x2d38>
   1e58c:	add	r6, r6, sl
   1e590:	mov	r2, sl
   1e594:	add	sl, sl, #1
   1e598:	mov	r1, r4
   1e59c:	ldr	r0, [r8, #204]	; 0xcc
   1e5a0:	bl	14094 <fprintf@plt>
   1e5a4:	cmp	sl, r6
   1e5a8:	mov	r2, sl
   1e5ac:	bne	1e594 <__flatcc_gen_sort@@Base+0x2c80>
   1e5b0:	b	1e4ac <__flatcc_gen_sort@@Base+0x2b98>
   1e5b4:	add	sl, r4, sl
   1e5b8:	b	1e4ac <__flatcc_gen_sort@@Base+0x2b98>
   1e5bc:	andeq	lr, r4, ip, asr #2
   1e5c0:	andeq	sp, r4, r8, asr #3
   1e5c4:	andeq	sp, r4, r4, asr #5
   1e5c8:	andeq	pc, r6, r8, lsr #1
   1e5cc:	andeq	sp, r4, r4, asr #7
   1e5d0:	andeq	r0, r0, r1, ror #7
   1e5d4:	ldrdeq	r4, [r4], -ip
   1e5d8:	andeq	ip, r4, ip, lsl r7
   1e5dc:	andeq	ip, r4, r8, asr r6
   1e5e0:	andeq	sp, r4, r4, ror r2
   1e5e4:	andeq	sp, r4, r0, ror #4
   1e5e8:	ldrdeq	sp, [r4], -ip
   1e5ec:	andeq	sp, r4, r4, ror #3
   1e5f0:	andeq	sp, r4, ip, lsl r3
   1e5f4:	ldrdeq	sp, [r4], -r0
   1e5f8:	andeq	sp, r4, r4, lsr #4
   1e5fc:	andeq	sp, r4, r8, lsl #6
   1e600:	strdeq	r4, [r4], -r8
   1e604:	andeq	sp, r4, r8, ror r3
   1e608:	ldrdeq	ip, [r5], -r0
   1e60c:	andeq	r4, r4, r8, lsl #16
   1e610:	andeq	r4, r4, r0, lsl #16
   1e614:	andeq	r4, r4, r0, asr #7
   1e618:	strdeq	r4, [r4], -r0
   1e61c:	andeq	r4, r4, r8, lsl r8
   1e620:	andeq	r4, r4, r0, lsr #16
   1e624:	andeq	r4, r4, r8, asr #7
   1e628:	andeq	r4, r4, r0, lsl r8
   1e62c:	andeq	r4, r4, r8, ror #15
   1e630:	andeq	sp, r4, r8, ror #3
   1e634:	andeq	sp, r4, ip, lsr #6
   1e638:	andeq	sp, r4, r8, ror r2
   1e63c:	andeq	sp, r4, r0, lsr #7
   1e640:	andeq	sp, r4, r4, asr r3
   1e644:	andeq	sp, r4, r4, asr #4
   1e648:	andeq	ip, r4, r8, lsl r8
   1e64c:	andeq	sp, r4, ip, asr r2
   1e650:	andeq	r5, r4, r8, lsr r9
   1e654:	andeq	ip, r4, r0, lsl r8
   1e658:	andeq	sp, r4, r8, ror #5
   1e65c:	andeq	sp, r4, r0, lsr #5
   1e660:	andeq	r4, r4, r8, ror #9
   1e664:	muleq	r4, r0, r4
   1e668:	andeq	ip, r4, r8, lsr r6

0001e66c <__flatcc_fb_gen_common_c_builder_header@@Base>:
   1e66c:	push	{r4, r5, lr}
   1e670:	mov	r4, r0
   1e674:	add	r5, r0, #102	; 0x66
   1e678:	sub	sp, sp, #12
   1e67c:	mov	r2, r5
   1e680:	ldr	r1, [pc, #1836]	; 1edb4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x748>
   1e684:	ldr	r0, [r0, #204]	; 0xcc
   1e688:	bl	14094 <fprintf@plt>
   1e68c:	mov	r2, r5
   1e690:	ldr	r1, [pc, #1824]	; 1edb8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x74c>
   1e694:	ldr	r0, [r4, #204]	; 0xcc
   1e698:	bl	14094 <fprintf@plt>
   1e69c:	ldr	r3, [r4, #204]	; 0xcc
   1e6a0:	mov	r2, #81	; 0x51
   1e6a4:	mov	r1, #1
   1e6a8:	ldr	r0, [pc, #1804]	; 1edbc <__flatcc_fb_gen_common_c_builder_header@@Base+0x750>
   1e6ac:	bl	1401c <fwrite@plt>
   1e6b0:	ldr	r3, [r4, #204]	; 0xcc
   1e6b4:	mov	r2, #53	; 0x35
   1e6b8:	mov	r1, #1
   1e6bc:	ldr	r0, [pc, #1788]	; 1edc0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x754>
   1e6c0:	bl	1401c <fwrite@plt>
   1e6c4:	ldr	r2, [r4, #212]	; 0xd4
   1e6c8:	ldr	r3, [r4, #204]	; 0xcc
   1e6cc:	ldr	r2, [r2, #140]	; 0x8c
   1e6d0:	cmp	r2, #0
   1e6d4:	bne	1ed9c <__flatcc_fb_gen_common_c_builder_header@@Base+0x730>
   1e6d8:	mov	r2, #22
   1e6dc:	mov	r1, #1
   1e6e0:	ldr	r0, [pc, #1756]	; 1edc4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x758>
   1e6e4:	bl	1401c <fwrite@plt>
   1e6e8:	ldr	r3, [r4, #204]	; 0xcc
   1e6ec:	mov	r2, #35	; 0x23
   1e6f0:	mov	r1, #1
   1e6f4:	ldr	r0, [pc, #1740]	; 1edc8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x75c>
   1e6f8:	bl	1401c <fwrite@plt>
   1e6fc:	ldr	r3, [r4, #204]	; 0xcc
   1e700:	mov	r2, #7
   1e704:	mov	r1, #1
   1e708:	ldr	r0, [pc, #1724]	; 1edcc <__flatcc_fb_gen_common_c_builder_header@@Base+0x760>
   1e70c:	bl	1401c <fwrite@plt>
   1e710:	ldr	r1, [pc, #1720]	; 1edd0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x764>
   1e714:	mov	r0, r4
   1e718:	bl	13fbc <strcmp@plt>
   1e71c:	cmp	r0, #0
   1e720:	bne	1ed38 <__flatcc_fb_gen_common_c_builder_header@@Base+0x6cc>
   1e724:	mov	r3, r4
   1e728:	mov	r2, r4
   1e72c:	ldr	r1, [pc, #1696]	; 1edd4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x768>
   1e730:	ldr	r0, [r4, #204]	; 0xcc
   1e734:	bl	14094 <fprintf@plt>
   1e738:	mov	r3, r4
   1e73c:	mov	r2, r4
   1e740:	ldr	r1, [pc, #1680]	; 1edd8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x76c>
   1e744:	ldr	r0, [r4, #204]	; 0xcc
   1e748:	bl	14094 <fprintf@plt>
   1e74c:	ldr	r1, [pc, #1672]	; 1eddc <__flatcc_fb_gen_common_c_builder_header@@Base+0x770>
   1e750:	mov	r0, r4
   1e754:	bl	13fbc <strcmp@plt>
   1e758:	cmp	r0, #0
   1e75c:	bne	1ed14 <__flatcc_fb_gen_common_c_builder_header@@Base+0x6a8>
   1e760:	ldr	r1, [r4, #204]	; 0xcc
   1e764:	mov	r0, #10
   1e768:	bl	140f4 <fputc@plt>
   1e76c:	mov	r2, r4
   1e770:	ldr	r1, [pc, #1640]	; 1ede0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x774>
   1e774:	ldr	r0, [r4, #204]	; 0xcc
   1e778:	bl	14094 <fprintf@plt>
   1e77c:	mov	r2, r4
   1e780:	ldr	r1, [pc, #1628]	; 1ede4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x778>
   1e784:	ldr	r0, [r4, #204]	; 0xcc
   1e788:	bl	14094 <fprintf@plt>
   1e78c:	mov	r3, r4
   1e790:	ldr	r0, [r4, #204]	; 0xcc
   1e794:	mov	r2, r4
   1e798:	ldr	r1, [pc, #1608]	; 1ede8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x77c>
   1e79c:	str	r4, [sp]
   1e7a0:	bl	14094 <fprintf@plt>
   1e7a4:	mov	r2, r4
   1e7a8:	ldr	r1, [pc, #1596]	; 1edec <__flatcc_fb_gen_common_c_builder_header@@Base+0x780>
   1e7ac:	ldr	r0, [r4, #204]	; 0xcc
   1e7b0:	bl	14094 <fprintf@plt>
   1e7b4:	mov	r2, r4
   1e7b8:	ldr	r1, [pc, #1584]	; 1edf0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x784>
   1e7bc:	ldr	r0, [r4, #204]	; 0xcc
   1e7c0:	bl	14094 <fprintf@plt>
   1e7c4:	mov	r2, r4
   1e7c8:	ldr	r1, [pc, #1572]	; 1edf4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x788>
   1e7cc:	ldr	r0, [r4, #204]	; 0xcc
   1e7d0:	bl	14094 <fprintf@plt>
   1e7d4:	mov	r2, r4
   1e7d8:	ldr	r1, [pc, #1560]	; 1edf8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x78c>
   1e7dc:	ldr	r0, [r4, #204]	; 0xcc
   1e7e0:	bl	14094 <fprintf@plt>
   1e7e4:	mov	r3, r4
   1e7e8:	mov	r2, r4
   1e7ec:	ldr	r1, [pc, #1544]	; 1edfc <__flatcc_fb_gen_common_c_builder_header@@Base+0x790>
   1e7f0:	ldr	r0, [r4, #204]	; 0xcc
   1e7f4:	bl	14094 <fprintf@plt>
   1e7f8:	mov	r3, r4
   1e7fc:	ldr	r0, [r4, #204]	; 0xcc
   1e800:	mov	r2, r4
   1e804:	ldr	r1, [pc, #1524]	; 1ee00 <__flatcc_fb_gen_common_c_builder_header@@Base+0x794>
   1e808:	str	r4, [sp]
   1e80c:	bl	14094 <fprintf@plt>
   1e810:	mov	r2, r4
   1e814:	ldr	r1, [pc, #1512]	; 1ee04 <__flatcc_fb_gen_common_c_builder_header@@Base+0x798>
   1e818:	ldr	r0, [r4, #204]	; 0xcc
   1e81c:	bl	14094 <fprintf@plt>
   1e820:	mov	r2, r4
   1e824:	ldr	r1, [pc, #1500]	; 1ee08 <__flatcc_fb_gen_common_c_builder_header@@Base+0x79c>
   1e828:	ldr	r0, [r4, #204]	; 0xcc
   1e82c:	bl	14094 <fprintf@plt>
   1e830:	mov	r2, r4
   1e834:	ldr	r1, [pc, #1488]	; 1ee0c <__flatcc_fb_gen_common_c_builder_header@@Base+0x7a0>
   1e838:	ldr	r0, [r4, #204]	; 0xcc
   1e83c:	bl	14094 <fprintf@plt>
   1e840:	mov	r3, r4
   1e844:	mov	r2, r4
   1e848:	ldr	r1, [pc, #1472]	; 1ee10 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7a4>
   1e84c:	ldr	r0, [r4, #204]	; 0xcc
   1e850:	bl	14094 <fprintf@plt>
   1e854:	mov	r2, r4
   1e858:	ldr	r1, [pc, #1460]	; 1ee14 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7a8>
   1e85c:	ldr	r0, [r4, #204]	; 0xcc
   1e860:	bl	14094 <fprintf@plt>
   1e864:	ldr	r0, [r4, #204]	; 0xcc
   1e868:	mov	r3, r4
   1e86c:	mov	r2, r4
   1e870:	ldr	r1, [pc, #1440]	; 1ee18 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7ac>
   1e874:	str	r4, [sp]
   1e878:	bl	14094 <fprintf@plt>
   1e87c:	ldr	r0, [r4, #204]	; 0xcc
   1e880:	mov	r3, r4
   1e884:	mov	r2, r4
   1e888:	ldr	r1, [pc, #1420]	; 1ee1c <__flatcc_fb_gen_common_c_builder_header@@Base+0x7b0>
   1e88c:	str	r4, [sp, #4]
   1e890:	str	r4, [sp]
   1e894:	bl	14094 <fprintf@plt>
   1e898:	mov	r3, r4
   1e89c:	mov	r2, r4
   1e8a0:	ldr	r1, [pc, #1400]	; 1ee20 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7b4>
   1e8a4:	ldr	r0, [r4, #204]	; 0xcc
   1e8a8:	bl	14094 <fprintf@plt>
   1e8ac:	ldr	r0, [r4, #204]	; 0xcc
   1e8b0:	mov	r3, r4
   1e8b4:	mov	r2, r4
   1e8b8:	ldr	r1, [pc, #1380]	; 1ee24 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7b8>
   1e8bc:	str	r4, [sp, #4]
   1e8c0:	str	r4, [sp]
   1e8c4:	bl	14094 <fprintf@plt>
   1e8c8:	mov	r3, r4
   1e8cc:	mov	r2, r4
   1e8d0:	ldr	r1, [pc, #1360]	; 1ee28 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7bc>
   1e8d4:	ldr	r0, [r4, #204]	; 0xcc
   1e8d8:	bl	14094 <fprintf@plt>
   1e8dc:	mov	r2, r4
   1e8e0:	ldr	r1, [pc, #1348]	; 1ee2c <__flatcc_fb_gen_common_c_builder_header@@Base+0x7c0>
   1e8e4:	ldr	r0, [r4, #204]	; 0xcc
   1e8e8:	bl	14094 <fprintf@plt>
   1e8ec:	mov	r2, r4
   1e8f0:	ldr	r1, [pc, #1336]	; 1ee30 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7c4>
   1e8f4:	ldr	r0, [r4, #204]	; 0xcc
   1e8f8:	bl	14094 <fprintf@plt>
   1e8fc:	mov	r2, r4
   1e900:	ldr	r1, [pc, #1324]	; 1ee34 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7c8>
   1e904:	ldr	r0, [r4, #204]	; 0xcc
   1e908:	bl	14094 <fprintf@plt>
   1e90c:	mov	r2, r4
   1e910:	ldr	r1, [pc, #1312]	; 1ee38 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7cc>
   1e914:	ldr	r0, [r4, #204]	; 0xcc
   1e918:	bl	14094 <fprintf@plt>
   1e91c:	mov	r3, r4
   1e920:	mov	r2, r4
   1e924:	ldr	r1, [pc, #1296]	; 1ee3c <__flatcc_fb_gen_common_c_builder_header@@Base+0x7d0>
   1e928:	ldr	r0, [r4, #204]	; 0xcc
   1e92c:	bl	14094 <fprintf@plt>
   1e930:	mov	r2, r4
   1e934:	ldr	r1, [pc, #1284]	; 1ee40 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7d4>
   1e938:	ldr	r0, [r4, #204]	; 0xcc
   1e93c:	bl	14094 <fprintf@plt>
   1e940:	mov	r2, r4
   1e944:	ldr	r1, [pc, #1272]	; 1ee44 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7d8>
   1e948:	ldr	r0, [r4, #204]	; 0xcc
   1e94c:	bl	14094 <fprintf@plt>
   1e950:	mov	r3, r4
   1e954:	mov	r2, r4
   1e958:	ldr	r1, [pc, #1256]	; 1ee48 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7dc>
   1e95c:	ldr	r0, [r4, #204]	; 0xcc
   1e960:	bl	14094 <fprintf@plt>
   1e964:	mov	r3, r4
   1e968:	mov	r2, r4
   1e96c:	ldr	r1, [pc, #1240]	; 1ee4c <__flatcc_fb_gen_common_c_builder_header@@Base+0x7e0>
   1e970:	ldr	r0, [r4, #204]	; 0xcc
   1e974:	bl	14094 <fprintf@plt>
   1e978:	mov	r3, r4
   1e97c:	mov	r2, r4
   1e980:	ldr	r1, [pc, #1224]	; 1ee50 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7e4>
   1e984:	ldr	r0, [r4, #204]	; 0xcc
   1e988:	bl	14094 <fprintf@plt>
   1e98c:	mov	r3, r4
   1e990:	mov	r2, r4
   1e994:	ldr	r1, [pc, #1208]	; 1ee54 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7e8>
   1e998:	ldr	r0, [r4, #204]	; 0xcc
   1e99c:	bl	14094 <fprintf@plt>
   1e9a0:	ldr	r0, [r4, #204]	; 0xcc
   1e9a4:	mov	r3, r4
   1e9a8:	mov	r2, r4
   1e9ac:	ldr	r1, [pc, #1188]	; 1ee58 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7ec>
   1e9b0:	str	r4, [sp]
   1e9b4:	bl	14094 <fprintf@plt>
   1e9b8:	mov	r3, r4
   1e9bc:	mov	r2, r4
   1e9c0:	ldr	r1, [pc, #1172]	; 1ee5c <__flatcc_fb_gen_common_c_builder_header@@Base+0x7f0>
   1e9c4:	ldr	r0, [r4, #204]	; 0xcc
   1e9c8:	bl	14094 <fprintf@plt>
   1e9cc:	mov	r2, r4
   1e9d0:	ldr	r1, [pc, #1160]	; 1ee60 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7f4>
   1e9d4:	ldr	r0, [r4, #204]	; 0xcc
   1e9d8:	bl	14094 <fprintf@plt>
   1e9dc:	mov	r2, r4
   1e9e0:	ldr	r1, [pc, #1148]	; 1ee64 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7f8>
   1e9e4:	ldr	r0, [r4, #204]	; 0xcc
   1e9e8:	bl	14094 <fprintf@plt>
   1e9ec:	mov	r2, r4
   1e9f0:	ldr	r1, [pc, #1136]	; 1ee68 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7fc>
   1e9f4:	ldr	r0, [r4, #204]	; 0xcc
   1e9f8:	bl	14094 <fprintf@plt>
   1e9fc:	mov	r3, r4
   1ea00:	ldr	r0, [r4, #204]	; 0xcc
   1ea04:	mov	r2, r4
   1ea08:	ldr	r1, [pc, #1116]	; 1ee6c <__flatcc_fb_gen_common_c_builder_header@@Base+0x800>
   1ea0c:	str	r4, [sp]
   1ea10:	bl	14094 <fprintf@plt>
   1ea14:	mov	r2, r4
   1ea18:	ldr	r1, [pc, #1104]	; 1ee70 <__flatcc_fb_gen_common_c_builder_header@@Base+0x804>
   1ea1c:	ldr	r0, [r4, #204]	; 0xcc
   1ea20:	bl	14094 <fprintf@plt>
   1ea24:	mov	r2, r4
   1ea28:	ldr	r1, [pc, #1092]	; 1ee74 <__flatcc_fb_gen_common_c_builder_header@@Base+0x808>
   1ea2c:	ldr	r0, [r4, #204]	; 0xcc
   1ea30:	bl	14094 <fprintf@plt>
   1ea34:	mov	r2, r4
   1ea38:	ldr	r1, [pc, #1080]	; 1ee78 <__flatcc_fb_gen_common_c_builder_header@@Base+0x80c>
   1ea3c:	ldr	r0, [r4, #204]	; 0xcc
   1ea40:	bl	14094 <fprintf@plt>
   1ea44:	mov	r2, r4
   1ea48:	ldr	r1, [pc, #1068]	; 1ee7c <__flatcc_fb_gen_common_c_builder_header@@Base+0x810>
   1ea4c:	ldr	r0, [r4, #204]	; 0xcc
   1ea50:	bl	14094 <fprintf@plt>
   1ea54:	mov	r3, r4
   1ea58:	mov	r2, r4
   1ea5c:	ldr	r1, [pc, #1052]	; 1ee80 <__flatcc_fb_gen_common_c_builder_header@@Base+0x814>
   1ea60:	ldr	r0, [r4, #204]	; 0xcc
   1ea64:	bl	14094 <fprintf@plt>
   1ea68:	mov	r2, r4
   1ea6c:	ldr	r1, [pc, #1040]	; 1ee84 <__flatcc_fb_gen_common_c_builder_header@@Base+0x818>
   1ea70:	ldr	r0, [r4, #204]	; 0xcc
   1ea74:	bl	14094 <fprintf@plt>
   1ea78:	mov	r2, r4
   1ea7c:	ldr	r1, [pc, #1028]	; 1ee88 <__flatcc_fb_gen_common_c_builder_header@@Base+0x81c>
   1ea80:	ldr	r0, [r4, #204]	; 0xcc
   1ea84:	bl	14094 <fprintf@plt>
   1ea88:	mov	r2, r4
   1ea8c:	ldr	r1, [pc, #1016]	; 1ee8c <__flatcc_fb_gen_common_c_builder_header@@Base+0x820>
   1ea90:	ldr	r0, [r4, #204]	; 0xcc
   1ea94:	bl	14094 <fprintf@plt>
   1ea98:	mov	r2, r4
   1ea9c:	ldr	r1, [pc, #1004]	; 1ee90 <__flatcc_fb_gen_common_c_builder_header@@Base+0x824>
   1eaa0:	ldr	r0, [r4, #204]	; 0xcc
   1eaa4:	bl	14094 <fprintf@plt>
   1eaa8:	mov	r2, r4
   1eaac:	ldr	r1, [pc, #992]	; 1ee94 <__flatcc_fb_gen_common_c_builder_header@@Base+0x828>
   1eab0:	ldr	r0, [r4, #204]	; 0xcc
   1eab4:	bl	14094 <fprintf@plt>
   1eab8:	mov	r2, r4
   1eabc:	ldr	r1, [pc, #980]	; 1ee98 <__flatcc_fb_gen_common_c_builder_header@@Base+0x82c>
   1eac0:	ldr	r0, [r4, #204]	; 0xcc
   1eac4:	bl	14094 <fprintf@plt>
   1eac8:	mov	r2, r4
   1eacc:	ldr	r1, [pc, #968]	; 1ee9c <__flatcc_fb_gen_common_c_builder_header@@Base+0x830>
   1ead0:	ldr	r0, [r4, #204]	; 0xcc
   1ead4:	bl	14094 <fprintf@plt>
   1ead8:	mov	r2, r4
   1eadc:	ldr	r1, [pc, #956]	; 1eea0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x834>
   1eae0:	ldr	r0, [r4, #204]	; 0xcc
   1eae4:	bl	14094 <fprintf@plt>
   1eae8:	mov	r2, r4
   1eaec:	ldr	r1, [pc, #944]	; 1eea4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x838>
   1eaf0:	ldr	r0, [r4, #204]	; 0xcc
   1eaf4:	bl	14094 <fprintf@plt>
   1eaf8:	mov	r2, r4
   1eafc:	ldr	r1, [pc, #932]	; 1eea8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x83c>
   1eb00:	ldr	r0, [r4, #204]	; 0xcc
   1eb04:	bl	14094 <fprintf@plt>
   1eb08:	mov	r2, r4
   1eb0c:	ldr	r1, [pc, #920]	; 1eeac <__flatcc_fb_gen_common_c_builder_header@@Base+0x840>
   1eb10:	ldr	r0, [r4, #204]	; 0xcc
   1eb14:	bl	14094 <fprintf@plt>
   1eb18:	mov	r2, r4
   1eb1c:	ldr	r1, [pc, #908]	; 1eeb0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x844>
   1eb20:	ldr	r0, [r4, #204]	; 0xcc
   1eb24:	bl	14094 <fprintf@plt>
   1eb28:	mov	r2, r4
   1eb2c:	ldr	r1, [pc, #896]	; 1eeb4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x848>
   1eb30:	ldr	r0, [r4, #204]	; 0xcc
   1eb34:	bl	14094 <fprintf@plt>
   1eb38:	mov	r2, r4
   1eb3c:	ldr	r1, [pc, #884]	; 1eeb8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x84c>
   1eb40:	ldr	r0, [r4, #204]	; 0xcc
   1eb44:	bl	14094 <fprintf@plt>
   1eb48:	mov	r2, r4
   1eb4c:	ldr	r1, [pc, #872]	; 1eebc <__flatcc_fb_gen_common_c_builder_header@@Base+0x850>
   1eb50:	ldr	r0, [r4, #204]	; 0xcc
   1eb54:	bl	14094 <fprintf@plt>
   1eb58:	mov	r2, r4
   1eb5c:	ldr	r1, [pc, #860]	; 1eec0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x854>
   1eb60:	ldr	r0, [r4, #204]	; 0xcc
   1eb64:	bl	14094 <fprintf@plt>
   1eb68:	mov	r2, r4
   1eb6c:	ldr	r1, [pc, #848]	; 1eec4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x858>
   1eb70:	ldr	r0, [r4, #204]	; 0xcc
   1eb74:	bl	14094 <fprintf@plt>
   1eb78:	ldr	r1, [r4, #204]	; 0xcc
   1eb7c:	mov	r0, #10
   1eb80:	bl	140f4 <fputc@plt>
   1eb84:	ldr	r0, [r4, #204]	; 0xcc
   1eb88:	mov	r3, r4
   1eb8c:	mov	r2, r4
   1eb90:	ldr	r1, [pc, #816]	; 1eec8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x85c>
   1eb94:	str	r4, [sp]
   1eb98:	bl	14094 <fprintf@plt>
   1eb9c:	ldr	r0, [r4, #204]	; 0xcc
   1eba0:	mov	r3, r4
   1eba4:	mov	r2, r4
   1eba8:	ldr	r1, [pc, #796]	; 1eecc <__flatcc_fb_gen_common_c_builder_header@@Base+0x860>
   1ebac:	str	r4, [sp]
   1ebb0:	bl	14094 <fprintf@plt>
   1ebb4:	ldr	r0, [r4, #204]	; 0xcc
   1ebb8:	mov	r3, r4
   1ebbc:	mov	r2, r4
   1ebc0:	ldr	r1, [pc, #776]	; 1eed0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x864>
   1ebc4:	str	r4, [sp, #4]
   1ebc8:	str	r4, [sp]
   1ebcc:	bl	14094 <fprintf@plt>
   1ebd0:	ldr	r0, [r4, #204]	; 0xcc
   1ebd4:	mov	r3, r4
   1ebd8:	mov	r2, r4
   1ebdc:	ldr	r1, [pc, #752]	; 1eed4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x868>
   1ebe0:	str	r4, [sp]
   1ebe4:	bl	14094 <fprintf@plt>
   1ebe8:	ldr	r0, [r4, #204]	; 0xcc
   1ebec:	mov	r3, r4
   1ebf0:	mov	r2, r4
   1ebf4:	ldr	r1, [pc, #732]	; 1eed8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x86c>
   1ebf8:	str	r4, [sp]
   1ebfc:	bl	14094 <fprintf@plt>
   1ec00:	ldr	r0, [r4, #204]	; 0xcc
   1ec04:	mov	r3, r4
   1ec08:	mov	r2, r4
   1ec0c:	ldr	r1, [pc, #712]	; 1eedc <__flatcc_fb_gen_common_c_builder_header@@Base+0x870>
   1ec10:	str	r4, [sp]
   1ec14:	bl	14094 <fprintf@plt>
   1ec18:	ldr	r0, [r4, #204]	; 0xcc
   1ec1c:	mov	r3, r4
   1ec20:	mov	r2, r4
   1ec24:	ldr	r1, [pc, #692]	; 1eee0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x874>
   1ec28:	str	r4, [sp]
   1ec2c:	bl	14094 <fprintf@plt>
   1ec30:	ldr	r0, [r4, #204]	; 0xcc
   1ec34:	mov	r3, r4
   1ec38:	mov	r2, r4
   1ec3c:	ldr	r1, [pc, #672]	; 1eee4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x878>
   1ec40:	str	r4, [sp]
   1ec44:	bl	14094 <fprintf@plt>
   1ec48:	ldr	r0, [r4, #204]	; 0xcc
   1ec4c:	mov	r3, r4
   1ec50:	mov	r2, r4
   1ec54:	ldr	r1, [pc, #652]	; 1eee8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x87c>
   1ec58:	str	r4, [sp]
   1ec5c:	bl	14094 <fprintf@plt>
   1ec60:	ldr	r0, [r4, #204]	; 0xcc
   1ec64:	mov	r3, r4
   1ec68:	mov	r2, r4
   1ec6c:	ldr	r1, [pc, #632]	; 1eeec <__flatcc_fb_gen_common_c_builder_header@@Base+0x880>
   1ec70:	str	r4, [sp]
   1ec74:	bl	14094 <fprintf@plt>
   1ec78:	mov	r3, r4
   1ec7c:	mov	r2, r4
   1ec80:	ldr	r0, [r4, #204]	; 0xcc
   1ec84:	ldr	r1, [pc, #612]	; 1eef0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x884>
   1ec88:	str	r4, [sp]
   1ec8c:	bl	14094 <fprintf@plt>
   1ec90:	ldr	r1, [r4, #204]	; 0xcc
   1ec94:	mov	r0, #10
   1ec98:	bl	140f4 <fputc@plt>
   1ec9c:	mov	r3, r4
   1eca0:	mov	r2, r4
   1eca4:	ldr	r1, [pc, #584]	; 1eef4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x888>
   1eca8:	ldr	r0, [r4, #204]	; 0xcc
   1ecac:	bl	14094 <fprintf@plt>
   1ecb0:	ldr	r1, [r4, #204]	; 0xcc
   1ecb4:	mov	r0, #10
   1ecb8:	bl	140f4 <fputc@plt>
   1ecbc:	mov	r3, r4
   1ecc0:	mov	r2, r4
   1ecc4:	ldr	r1, [pc, #556]	; 1eef8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x88c>
   1ecc8:	ldr	r0, [r4, #204]	; 0xcc
   1eccc:	bl	14094 <fprintf@plt>
   1ecd0:	ldr	r3, [r4, #212]	; 0xd4
   1ecd4:	ldr	r0, [r4, #204]	; 0xcc
   1ecd8:	ldr	r3, [r3, #140]	; 0x8c
   1ecdc:	cmp	r3, #0
   1ece0:	beq	1ecfc <__flatcc_fb_gen_common_c_builder_header@@Base+0x690>
   1ece4:	mov	r3, r0
   1ece8:	mov	r2, #36	; 0x24
   1ecec:	mov	r1, #1
   1ecf0:	ldr	r0, [pc, #516]	; 1eefc <__flatcc_fb_gen_common_c_builder_header@@Base+0x890>
   1ecf4:	bl	1401c <fwrite@plt>
   1ecf8:	ldr	r0, [r4, #204]	; 0xcc
   1ecfc:	mov	r2, r5
   1ed00:	ldr	r1, [pc, #504]	; 1ef00 <__flatcc_fb_gen_common_c_builder_header@@Base+0x894>
   1ed04:	bl	14094 <fprintf@plt>
   1ed08:	mov	r0, #0
   1ed0c:	add	sp, sp, #12
   1ed10:	pop	{r4, r5, pc}
   1ed14:	mov	r2, r4
   1ed18:	ldr	r1, [pc, #484]	; 1ef04 <__flatcc_fb_gen_common_c_builder_header@@Base+0x898>
   1ed1c:	ldr	r0, [r4, #204]	; 0xcc
   1ed20:	bl	14094 <fprintf@plt>
   1ed24:	mov	r2, r4
   1ed28:	ldr	r1, [pc, #472]	; 1ef08 <__flatcc_fb_gen_common_c_builder_header@@Base+0x89c>
   1ed2c:	ldr	r0, [r4, #204]	; 0xcc
   1ed30:	bl	14094 <fprintf@plt>
   1ed34:	b	1e760 <__flatcc_fb_gen_common_c_builder_header@@Base+0xf4>
   1ed38:	mov	r2, r4
   1ed3c:	ldr	r1, [pc, #456]	; 1ef0c <__flatcc_fb_gen_common_c_builder_header@@Base+0x8a0>
   1ed40:	ldr	r0, [r4, #204]	; 0xcc
   1ed44:	bl	14094 <fprintf@plt>
   1ed48:	mov	r2, r4
   1ed4c:	ldr	r1, [pc, #444]	; 1ef10 <__flatcc_fb_gen_common_c_builder_header@@Base+0x8a4>
   1ed50:	ldr	r0, [r4, #204]	; 0xcc
   1ed54:	bl	14094 <fprintf@plt>
   1ed58:	mov	r2, r4
   1ed5c:	ldr	r1, [pc, #432]	; 1ef14 <__flatcc_fb_gen_common_c_builder_header@@Base+0x8a8>
   1ed60:	ldr	r0, [r4, #204]	; 0xcc
   1ed64:	bl	14094 <fprintf@plt>
   1ed68:	mov	r2, r4
   1ed6c:	ldr	r1, [pc, #420]	; 1ef18 <__flatcc_fb_gen_common_c_builder_header@@Base+0x8ac>
   1ed70:	ldr	r0, [r4, #204]	; 0xcc
   1ed74:	bl	14094 <fprintf@plt>
   1ed78:	mov	r2, r4
   1ed7c:	ldr	r1, [pc, #408]	; 1ef1c <__flatcc_fb_gen_common_c_builder_header@@Base+0x8b0>
   1ed80:	ldr	r0, [r4, #204]	; 0xcc
   1ed84:	bl	14094 <fprintf@plt>
   1ed88:	mov	r2, r4
   1ed8c:	ldr	r1, [pc, #396]	; 1ef20 <__flatcc_fb_gen_common_c_builder_header@@Base+0x8b4>
   1ed90:	ldr	r0, [r4, #204]	; 0xcc
   1ed94:	bl	14094 <fprintf@plt>
   1ed98:	b	1e724 <__flatcc_fb_gen_common_c_builder_header@@Base+0xb8>
   1ed9c:	mov	r2, #36	; 0x24
   1eda0:	mov	r1, #1
   1eda4:	ldr	r0, [pc, #376]	; 1ef24 <__flatcc_fb_gen_common_c_builder_header@@Base+0x8b8>
   1eda8:	bl	1401c <fwrite@plt>
   1edac:	ldr	r3, [r4, #204]	; 0xcc
   1edb0:	b	1e6d8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x6c>
   1edb4:	andeq	sp, r4, r0, ror #7
   1edb8:	andeq	sp, r4, r0, lsl #8
   1edbc:	ldrdeq	r5, [r4], -r4
   1edc0:	andeq	sp, r4, r0, lsr #8
   1edc4:	andeq	sp, r4, r8, asr r4
   1edc8:	andeq	sp, r4, r0, ror r4
   1edcc:			; <UNDEFINED> instruction: 0x0004b9b0
   1edd0:	muleq	r4, r4, r4
   1edd4:	andeq	sp, r4, r8, ror #11
   1edd8:	andeq	sp, r4, r4, lsl #12
   1eddc:	andeq	r5, r4, ip, lsr r9
   1ede0:	andeq	sp, r4, r4, lsl #13
   1ede4:	strdeq	sp, [r4], -r8
   1ede8:	andeq	lr, r4, r4, asr #1
   1edec:	andeq	lr, r4, r0, asr r1
   1edf0:	andeq	lr, r4, ip, lsl #24
   1edf4:	andeq	lr, r4, r8, ror #31
   1edf8:	andeq	pc, r4, r0, lsr #12
   1edfc:	muleq	r4, ip, sl
   1ee00:	andeq	r0, r5, r0, lsl r2
   1ee04:	andeq	r0, r5, r8, asr r7
   1ee08:	ldrdeq	r0, [r5], -r8
   1ee0c:	andeq	r0, r5, r8, ror #26
   1ee10:	andeq	r1, r5, r4, asr #1
   1ee14:	andeq	r1, r5, ip, asr #5
   1ee18:	andeq	r1, r5, r8, lsr r6
   1ee1c:	andeq	r1, r5, r4, lsr fp
   1ee20:	andeq	r1, r5, r0, asr #24
   1ee24:	andeq	r1, r5, r8, lsr #31
   1ee28:	andeq	r2, r5, r8, lsr #11
   1ee2c:	andeq	r2, r5, ip, asr r7
   1ee30:	andeq	r2, r5, r4, lsl #19
   1ee34:	andeq	r2, r5, r4, asr #26
   1ee38:	andeq	r3, r5, r4
   1ee3c:	andeq	r3, r5, r8, lsl r4
   1ee40:	andeq	r3, r5, r4, lsl #10
   1ee44:	andeq	r3, r5, r8, ror #14
   1ee48:	andeq	r3, r5, r0, ror #21
   1ee4c:	andeq	r3, r5, r0, lsr pc
   1ee50:	andeq	r4, r5, r8, asr #3
   1ee54:	andeq	r4, r5, r4, asr #11
   1ee58:	ldrdeq	r4, [r5], -r0
   1ee5c:	andeq	r4, r5, ip, asr r7
   1ee60:	andeq	r4, r5, r8, lsr #21
   1ee64:	andeq	r4, r5, r0, lsr sp
   1ee68:	andeq	r4, r5, r0, asr #31
   1ee6c:	andeq	r5, r5, r8, ror r5
   1ee70:	andeq	r5, r5, r8, lsl #12
   1ee74:	andeq	r5, r5, r4, lsr r6
   1ee78:	andeq	r5, r5, r8, asr r6
   1ee7c:	andeq	r5, r5, r4, lsl #13
   1ee80:	andeq	r5, r5, r8, lsr #13
   1ee84:	ldrdeq	r5, [r5], -r4
   1ee88:	strdeq	r5, [r5], -r8
   1ee8c:	andeq	r5, r5, r8, lsr #14
   1ee90:	andeq	r5, r5, ip, asr #14
   1ee94:	andeq	r5, r5, ip, ror r7
   1ee98:	andeq	r5, r5, r0, lsr #15
   1ee9c:	ldrdeq	r5, [r5], -r0
   1eea0:	strdeq	r5, [r5], -r4
   1eea4:	andeq	r5, r5, r0, lsr #16
   1eea8:	andeq	r5, r5, r4, asr #16
   1eeac:	andeq	r5, r5, r0, ror r8
   1eeb0:	muleq	r5, r4, r8
   1eeb4:	andeq	r5, r5, r0, asr #17
   1eeb8:	andeq	r5, r5, r4, ror #17
   1eebc:	andeq	r5, r5, r0, lsl r9
   1eec0:	andeq	r5, r5, r4, lsr r9
   1eec4:	andeq	r5, r5, r0, ror #18
   1eec8:	andeq	r5, r5, r4, lsl #19
   1eecc:	andeq	r5, r5, ip, lsr #19
   1eed0:	ldrdeq	r5, [r5], -r4
   1eed4:	strdeq	r5, [r5], -ip
   1eed8:	andeq	r5, r5, r8, lsr #20
   1eedc:	andeq	r5, r5, r4, asr sl
   1eee0:	andeq	r5, r5, r0, lsl #21
   1eee4:	andeq	r5, r5, r8, lsr #21
   1eee8:	ldrdeq	r5, [r5], -r0
   1eeec:	strdeq	r5, [r5], -r8
   1eef0:	andeq	r5, r5, r0, lsr #22
   1eef4:	andeq	r5, r5, r8, asr #22
   1eef8:	andeq	r5, r5, r0, ror #22
   1eefc:	andeq	fp, r4, ip, asr #14
   1ef00:	andeq	r5, r5, r8, ror fp
   1ef04:	andeq	sp, r4, ip, lsr #12
   1ef08:	andeq	sp, r4, r0, ror #12
   1ef0c:	andeq	sp, r4, r4, lsr #9
   1ef10:	andeq	sp, r4, ip, asr #9
   1ef14:	strdeq	sp, [r4], -r4
   1ef18:	andeq	sp, r4, r0, lsr #10
   1ef1c:	andeq	sp, r4, r4, asr r5
   1ef20:	muleq	r4, r0, r5
   1ef24:	andeq	r5, r4, r8, ror #17

0001ef28 <__flatcc_fb_gen_c_builder@@Base>:
   1ef28:	ldr	r3, [r0, #208]	; 0xd0
   1ef2c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ef30:	mov	fp, r0
   1ef34:	ldr	r3, [r3, #164]	; 0xa4
   1ef38:	sub	sp, sp, #308	; 0x134
   1ef3c:	mov	r2, r3
   1ef40:	ldr	r1, [pc, #3380]	; 1fc7c <__flatcc_fb_gen_c_builder@@Base+0xd54>
   1ef44:	ldr	r0, [r0, #204]	; 0xcc
   1ef48:	bl	14094 <fprintf@plt>
   1ef4c:	ldr	r3, [fp, #204]	; 0xcc
   1ef50:	mov	r2, #81	; 0x51
   1ef54:	mov	r1, #1
   1ef58:	ldr	r0, [pc, #3360]	; 1fc80 <__flatcc_fb_gen_c_builder@@Base+0xd58>
   1ef5c:	bl	1401c <fwrite@plt>
   1ef60:	ldr	r3, [fp, #208]	; 0xd0
   1ef64:	ldr	r1, [pc, #3352]	; 1fc84 <__flatcc_fb_gen_c_builder@@Base+0xd5c>
   1ef68:	ldr	r0, [fp, #204]	; 0xcc
   1ef6c:	ldr	r2, [r3, #164]	; 0xa4
   1ef70:	bl	14094 <fprintf@plt>
   1ef74:	ldr	r3, [fp, #208]	; 0xd0
   1ef78:	ldr	r1, [pc, #3336]	; 1fc88 <__flatcc_fb_gen_c_builder@@Base+0xd60>
   1ef7c:	ldr	r0, [fp, #204]	; 0xcc
   1ef80:	ldr	r2, [r3, #160]	; 0xa0
   1ef84:	bl	14094 <fprintf@plt>
   1ef88:	ldr	r3, [fp, #204]	; 0xcc
   1ef8c:	mov	r2, #7
   1ef90:	mov	r1, #1
   1ef94:	ldr	r0, [pc, #3312]	; 1fc8c <__flatcc_fb_gen_c_builder@@Base+0xd64>
   1ef98:	bl	1401c <fwrite@plt>
   1ef9c:	add	r2, fp, #102	; 0x66
   1efa0:	ldr	r1, [pc, #3304]	; 1fc90 <__flatcc_fb_gen_c_builder@@Base+0xd68>
   1efa4:	ldr	r0, [fp, #204]	; 0xcc
   1efa8:	bl	14094 <fprintf@plt>
   1efac:	mov	r2, fp
   1efb0:	ldr	r1, [pc, #3292]	; 1fc94 <__flatcc_fb_gen_c_builder@@Base+0xd6c>
   1efb4:	ldr	r0, [fp, #204]	; 0xcc
   1efb8:	bl	14094 <fprintf@plt>
   1efbc:	ldr	r3, [fp, #204]	; 0xcc
   1efc0:	mov	r2, #7
   1efc4:	mov	r1, #1
   1efc8:	ldr	r0, [pc, #3260]	; 1fc8c <__flatcc_fb_gen_c_builder@@Base+0xd64>
   1efcc:	bl	1401c <fwrite@plt>
   1efd0:	mov	r0, fp
   1efd4:	ldr	r2, [pc, #3260]	; 1fc98 <__flatcc_fb_gen_c_builder@@Base+0xd70>
   1efd8:	ldr	r1, [pc, #3260]	; 1fc9c <__flatcc_fb_gen_c_builder@@Base+0xd74>
   1efdc:	bl	16ee8 <__flatcc_fb_gen_c_includes@@Base>
   1efe0:	ldr	r3, [fp, #212]	; 0xd4
   1efe4:	ldr	r0, [fp, #204]	; 0xcc
   1efe8:	ldr	r3, [r3, #140]	; 0x8c
   1efec:	cmp	r3, #0
   1eff0:	bne	1f8d0 <__flatcc_fb_gen_c_builder@@Base+0x9a8>
   1eff4:	ldr	r3, [fp, #208]	; 0xd0
   1eff8:	ldrh	r2, [r3, #16]
   1effc:	cmp	r2, #2
   1f000:	beq	1f8f8 <__flatcc_fb_gen_c_builder@@Base+0x9d0>
   1f004:	mov	r3, fp
   1f008:	mov	r2, fp
   1f00c:	ldr	r1, [pc, #3212]	; 1fca0 <__flatcc_fb_gen_c_builder@@Base+0xd78>
   1f010:	bl	14094 <fprintf@plt>
   1f014:	ldr	r3, [fp, #208]	; 0xd0
   1f018:	ldrh	r2, [r3, #32]
   1f01c:	cmp	r2, #2
   1f020:	beq	1f928 <__flatcc_fb_gen_c_builder@@Base+0xa00>
   1f024:	ldr	r2, [fp, #212]	; 0xd4
   1f028:	ldr	r0, [fp, #204]	; 0xcc
   1f02c:	mov	r3, fp
   1f030:	ldr	r2, [r2, #104]	; 0x68
   1f034:	ldr	r1, [pc, #3176]	; 1fca4 <__flatcc_fb_gen_c_builder@@Base+0xd7c>
   1f038:	str	r2, [sp]
   1f03c:	mov	r2, fp
   1f040:	bl	14094 <fprintf@plt>
   1f044:	ldr	r1, [fp, #204]	; 0xcc
   1f048:	mov	r0, #10
   1f04c:	add	sl, sp, #84	; 0x54
   1f050:	bl	140f4 <fputc@plt>
   1f054:	mov	r0, sl
   1f058:	mov	r2, #220	; 0xdc
   1f05c:	mov	r1, #0
   1f060:	bl	140ac <memset@plt>
   1f064:	ldr	r3, [fp, #208]	; 0xd0
   1f068:	ldr	r4, [r3, #40]	; 0x28
   1f06c:	cmp	r4, #0
   1f070:	beq	1f10c <__flatcc_fb_gen_c_builder@@Base+0x1e4>
   1f074:	ldr	r7, [pc, #3116]	; 1fca8 <__flatcc_fb_gen_c_builder@@Base+0xd80>
   1f078:	ldr	r6, [pc, #3116]	; 1fcac <__flatcc_fb_gen_c_builder@@Base+0xd84>
   1f07c:	mov	r2, #0
   1f080:	mov	r5, #1
   1f084:	b	1f094 <__flatcc_fb_gen_c_builder@@Base+0x16c>
   1f088:	ldr	r4, [r4]
   1f08c:	cmp	r4, #0
   1f090:	beq	1f0f4 <__flatcc_fb_gen_c_builder@@Base+0x1cc>
   1f094:	ldrh	r3, [r4, #8]
   1f098:	cmp	r3, #3
   1f09c:	bne	1f088 <__flatcc_fb_gen_c_builder@@Base+0x160>
   1f0a0:	mov	r1, r4
   1f0a4:	ldr	r0, [r4, #12]
   1f0a8:	mov	r2, sl
   1f0ac:	bl	170c4 <__flatcc_fb_scoped_symbol_name@@Base>
   1f0b0:	ldr	r0, [fp, #204]	; 0xcc
   1f0b4:	mov	r3, sl
   1f0b8:	mov	r2, sl
   1f0bc:	mov	r1, r7
   1f0c0:	str	sl, [sp]
   1f0c4:	bl	14094 <fprintf@plt>
   1f0c8:	ldr	r0, [fp, #204]	; 0xcc
   1f0cc:	mov	r2, fp
   1f0d0:	str	sl, [sp, #4]
   1f0d4:	str	sl, [sp]
   1f0d8:	mov	r3, fp
   1f0dc:	mov	r1, r6
   1f0e0:	bl	14094 <fprintf@plt>
   1f0e4:	ldr	r4, [r4]
   1f0e8:	mov	r2, r5
   1f0ec:	cmp	r4, #0
   1f0f0:	bne	1f094 <__flatcc_fb_gen_c_builder@@Base+0x16c>
   1f0f4:	cmp	r2, #0
   1f0f8:	beq	1f108 <__flatcc_fb_gen_c_builder@@Base+0x1e0>
   1f0fc:	ldr	r1, [fp, #204]	; 0xcc
   1f100:	mov	r0, #10
   1f104:	bl	140f4 <fputc@plt>
   1f108:	ldr	r3, [fp, #208]	; 0xd0
   1f10c:	ldr	r3, [r3, #44]	; 0x2c
   1f110:	cmp	r3, #0
   1f114:	str	r3, [sp, #36]	; 0x24
   1f118:	movne	r9, fp
   1f11c:	beq	1f620 <__flatcc_fb_gen_c_builder@@Base+0x6f8>
   1f120:	mov	r2, #220	; 0xdc
   1f124:	mov	r1, #0
   1f128:	mov	r0, sl
   1f12c:	bl	140ac <memset@plt>
   1f130:	ldr	r3, [sp, #36]	; 0x24
   1f134:	ldrh	r3, [r3, #8]
   1f138:	cmp	r3, #1
   1f13c:	bne	1fc60 <__flatcc_fb_gen_c_builder@@Base+0xd38>
   1f140:	ldr	r4, [sp, #36]	; 0x24
   1f144:	mov	r2, sl
   1f148:	mov	r1, r4
   1f14c:	ldr	r0, [r4, #12]
   1f150:	bl	170c4 <__flatcc_fb_scoped_symbol_name@@Base>
   1f154:	ldr	r4, [r4, #20]
   1f158:	cmp	r4, #0
   1f15c:	beq	1f7f0 <__flatcc_fb_gen_c_builder@@Base+0x8c8>
   1f160:	mov	fp, #0
   1f164:	str	r9, [sp, #40]	; 0x28
   1f168:	ldrh	r3, [r4, #72]	; 0x48
   1f16c:	ands	r3, r3, #4
   1f170:	bne	1f194 <__flatcc_fb_gen_c_builder@@Base+0x26c>
   1f174:	ldrh	r2, [r4, #24]
   1f178:	cmp	r2, #14
   1f17c:	bne	1f190 <__flatcc_fb_gen_c_builder@@Base+0x268>
   1f180:	ldr	r2, [r4, #16]
   1f184:	ldrh	r1, [r2, #8]
   1f188:	cmp	r1, #1
   1f18c:	beq	1f6d4 <__flatcc_fb_gen_c_builder@@Base+0x7ac>
   1f190:	add	fp, fp, #1
   1f194:	ldr	r4, [r4]
   1f198:	cmp	r4, #0
   1f19c:	bne	1f168 <__flatcc_fb_gen_c_builder@@Base+0x240>
   1f1a0:	ldr	r9, [sp, #40]	; 0x28
   1f1a4:	mov	r2, sl
   1f1a8:	ldr	r1, [pc, #2816]	; 1fcb0 <__flatcc_fb_gen_c_builder@@Base+0xd88>
   1f1ac:	ldr	r0, [r9, #204]	; 0xcc
   1f1b0:	bl	14094 <fprintf@plt>
   1f1b4:	ldr	r4, [sp, #36]	; 0x24
   1f1b8:	mov	r2, #0
   1f1bc:	add	r3, r4, #20
   1f1c0:	mov	r1, r3
   1f1c4:	str	r3, [sp, #40]	; 0x28
   1f1c8:	mov	r3, #1
   1f1cc:	str	r3, [sp]
   1f1d0:	mov	r0, r9
   1f1d4:	mov	r3, fp
   1f1d8:	bl	1bc64 <__flatcc_gen_sort@@Base+0x350>
   1f1dc:	ldr	r0, [r9, #204]	; 0xcc
   1f1e0:	mov	r2, sl
   1f1e4:	ldr	r1, [pc, #2760]	; 1fcb4 <__flatcc_fb_gen_c_builder@@Base+0xd8c>
   1f1e8:	bl	14094 <fprintf@plt>
   1f1ec:	ldr	r4, [r4, #20]
   1f1f0:	cmp	r4, #0
   1f1f4:	movne	r8, #0
   1f1f8:	strne	r9, [sp, #48]	; 0x30
   1f1fc:	strne	fp, [sp, #44]	; 0x2c
   1f200:	movne	r9, r8
   1f204:	beq	1f350 <__flatcc_fb_gen_c_builder@@Base+0x428>
   1f208:	ldrh	r3, [r4, #72]	; 0x48
   1f20c:	ands	r3, r3, #4
   1f210:	bne	1f234 <__flatcc_fb_gen_c_builder@@Base+0x30c>
   1f214:	ldrh	r2, [r4, #24]
   1f218:	cmp	r2, #14
   1f21c:	bne	1f230 <__flatcc_fb_gen_c_builder@@Base+0x308>
   1f220:	ldr	r2, [r4, #16]
   1f224:	ldrh	r1, [r2, #8]
   1f228:	cmp	r1, #1
   1f22c:	beq	1f670 <__flatcc_fb_gen_c_builder@@Base+0x748>
   1f230:	add	r9, r9, #1
   1f234:	ldr	r4, [r4]
   1f238:	cmp	r4, #0
   1f23c:	bne	1f208 <__flatcc_fb_gen_c_builder@@Base+0x2e0>
   1f240:	mov	r8, r9
   1f244:	cmp	r8, #0
   1f248:	ldr	fp, [sp, #44]	; 0x2c
   1f24c:	ldr	r9, [sp, #48]	; 0x30
   1f250:	ble	1f350 <__flatcc_fb_gen_c_builder@@Base+0x428>
   1f254:	cmp	fp, #0
   1f258:	beq	1f330 <__flatcc_fb_gen_c_builder@@Base+0x408>
   1f25c:	cmp	fp, #4
   1f260:	mov	r6, #2
   1f264:	mov	r5, #1
   1f268:	bgt	1f2fc <__flatcc_fb_gen_c_builder@@Base+0x3d4>
   1f26c:	b	1f2a0 <__flatcc_fb_gen_c_builder@@Base+0x378>
   1f270:	ldr	r3, [r9, #204]	; 0xcc
   1f274:	mov	r2, r6
   1f278:	mov	r1, r5
   1f27c:	ldr	r0, [pc, #2612]	; 1fcb8 <__flatcc_fb_gen_c_builder@@Base+0xd90>
   1f280:	bl	1401c <fwrite@plt>
   1f284:	mov	r2, r4
   1f288:	ldr	r1, [pc, #2604]	; 1fcbc <__flatcc_fb_gen_c_builder@@Base+0xd94>
   1f28c:	add	r4, r4, #1
   1f290:	ldr	r0, [r9, #204]	; 0xcc
   1f294:	bl	14094 <fprintf@plt>
   1f298:	cmp	r8, r4
   1f29c:	beq	1f350 <__flatcc_fb_gen_c_builder@@Base+0x428>
   1f2a0:	cmp	r4, #0
   1f2a4:	beq	1f270 <__flatcc_fb_gen_c_builder@@Base+0x348>
   1f2a8:	tst	r4, #3
   1f2ac:	bne	1f270 <__flatcc_fb_gen_c_builder@@Base+0x348>
   1f2b0:	sub	r3, fp, r4
   1f2b4:	cmp	r3, #2
   1f2b8:	ble	1f270 <__flatcc_fb_gen_c_builder@@Base+0x348>
   1f2bc:	ldr	r2, [pc, #2556]	; 1fcc0 <__flatcc_fb_gen_c_builder@@Base+0xd98>
   1f2c0:	ldr	r1, [pc, #2556]	; 1fcc4 <__flatcc_fb_gen_c_builder@@Base+0xd9c>
   1f2c4:	ldr	r0, [r9, #204]	; 0xcc
   1f2c8:	bl	14094 <fprintf@plt>
   1f2cc:	b	1f284 <__flatcc_fb_gen_c_builder@@Base+0x35c>
   1f2d0:	ldr	r2, [pc, #2536]	; 1fcc0 <__flatcc_fb_gen_c_builder@@Base+0xd98>
   1f2d4:	ldr	r1, [pc, #2536]	; 1fcc4 <__flatcc_fb_gen_c_builder@@Base+0xd9c>
   1f2d8:	ldr	r0, [r9, #204]	; 0xcc
   1f2dc:	bl	14094 <fprintf@plt>
   1f2e0:	mov	r2, r4
   1f2e4:	ldr	r1, [pc, #2512]	; 1fcbc <__flatcc_fb_gen_c_builder@@Base+0xd94>
   1f2e8:	add	r4, r4, #1
   1f2ec:	ldr	r0, [r9, #204]	; 0xcc
   1f2f0:	bl	14094 <fprintf@plt>
   1f2f4:	cmp	r8, r4
   1f2f8:	beq	1f350 <__flatcc_fb_gen_c_builder@@Base+0x428>
   1f2fc:	cmp	r4, #0
   1f300:	beq	1f2d0 <__flatcc_fb_gen_c_builder@@Base+0x3a8>
   1f304:	tst	r4, #3
   1f308:	bne	1f318 <__flatcc_fb_gen_c_builder@@Base+0x3f0>
   1f30c:	sub	r3, fp, r4
   1f310:	cmp	r3, #2
   1f314:	bgt	1f2d0 <__flatcc_fb_gen_c_builder@@Base+0x3a8>
   1f318:	ldr	r3, [r9, #204]	; 0xcc
   1f31c:	mov	r2, r6
   1f320:	mov	r1, r5
   1f324:	ldr	r0, [pc, #2444]	; 1fcb8 <__flatcc_fb_gen_c_builder@@Base+0xd90>
   1f328:	bl	1401c <fwrite@plt>
   1f32c:	b	1f2e0 <__flatcc_fb_gen_c_builder@@Base+0x3b8>
   1f330:	mov	r2, fp
   1f334:	add	r4, r2, #1
   1f338:	ldr	r1, [pc, #2428]	; 1fcbc <__flatcc_fb_gen_c_builder@@Base+0xd94>
   1f33c:	ldr	r0, [r9, #204]	; 0xcc
   1f340:	bl	14094 <fprintf@plt>
   1f344:	cmp	r4, r8
   1f348:	mov	r2, r4
   1f34c:	bne	1f334 <__flatcc_fb_gen_c_builder@@Base+0x40c>
   1f350:	ldr	r1, [r9, #204]	; 0xcc
   1f354:	mov	r0, #10
   1f358:	bl	140f4 <fputc@plt>
   1f35c:	ldr	r0, [r9, #204]	; 0xcc
   1f360:	mov	r3, sl
   1f364:	mov	r2, sl
   1f368:	ldr	r1, [pc, #2392]	; 1fcc8 <__flatcc_fb_gen_c_builder@@Base+0xda0>
   1f36c:	str	sl, [sp]
   1f370:	bl	14094 <fprintf@plt>
   1f374:	ldr	r6, [sp, #40]	; 0x28
   1f378:	mov	r5, #0
   1f37c:	mov	r2, r5
   1f380:	mov	r1, r6
   1f384:	str	r5, [sp]
   1f388:	mov	r3, fp
   1f38c:	mov	r0, r9
   1f390:	bl	1bc64 <__flatcc_gen_sort@@Base+0x350>
   1f394:	ldr	r3, [r9, #204]	; 0xcc
   1f398:	mov	r2, #4
   1f39c:	mov	r1, #1
   1f3a0:	ldr	r0, [pc, #2340]	; 1fccc <__flatcc_fb_gen_c_builder@@Base+0xda4>
   1f3a4:	bl	1401c <fwrite@plt>
   1f3a8:	mov	r3, r5
   1f3ac:	mov	r1, r6
   1f3b0:	str	r5, [sp]
   1f3b4:	mov	r2, fp
   1f3b8:	mov	r0, r9
   1f3bc:	bl	1e01c <__flatcc_gen_sort@@Base+0x2708>
   1f3c0:	ldr	r3, [r9, #204]	; 0xcc
   1f3c4:	mov	r2, #12
   1f3c8:	mov	r1, #1
   1f3cc:	ldr	r0, [pc, #2300]	; 1fcd0 <__flatcc_fb_gen_c_builder@@Base+0xda8>
   1f3d0:	mov	r4, #1
   1f3d4:	bl	1401c <fwrite@plt>
   1f3d8:	ldr	r0, [r9, #204]	; 0xcc
   1f3dc:	mov	r3, sl
   1f3e0:	mov	r2, sl
   1f3e4:	ldr	r1, [pc, #2280]	; 1fcd4 <__flatcc_fb_gen_c_builder@@Base+0xdac>
   1f3e8:	str	sl, [sp, #4]
   1f3ec:	str	sl, [sp]
   1f3f0:	bl	14094 <fprintf@plt>
   1f3f4:	mov	r1, r4
   1f3f8:	ldr	r3, [r9, #204]	; 0xcc
   1f3fc:	mov	r2, #2
   1f400:	ldr	r0, [pc, #2256]	; 1fcd8 <__flatcc_fb_gen_c_builder@@Base+0xdb0>
   1f404:	bl	1401c <fwrite@plt>
   1f408:	mov	r3, r5
   1f40c:	mov	r1, r6
   1f410:	str	r4, [sp]
   1f414:	mov	r2, fp
   1f418:	mov	r0, r9
   1f41c:	bl	1e01c <__flatcc_gen_sort@@Base+0x2708>
   1f420:	mov	r1, r4
   1f424:	ldr	r3, [r9, #204]	; 0xcc
   1f428:	mov	r2, #12
   1f42c:	ldr	r0, [pc, #2204]	; 1fcd0 <__flatcc_fb_gen_c_builder@@Base+0xda8>
   1f430:	bl	1401c <fwrite@plt>
   1f434:	ldr	r0, [r9, #204]	; 0xcc
   1f438:	mov	r3, sl
   1f43c:	mov	r2, sl
   1f440:	ldr	r1, [pc, #2196]	; 1fcdc <__flatcc_fb_gen_c_builder@@Base+0xdb4>
   1f444:	str	sl, [sp]
   1f448:	bl	14094 <fprintf@plt>
   1f44c:	mov	r2, r5
   1f450:	mov	r1, r6
   1f454:	str	r5, [sp]
   1f458:	mov	r3, fp
   1f45c:	mov	r0, r9
   1f460:	bl	1bc64 <__flatcc_gen_sort@@Base+0x350>
   1f464:	mov	r1, r4
   1f468:	ldr	r3, [r9, #204]	; 0xcc
   1f46c:	mov	r2, #4
   1f470:	ldr	r0, [pc, #2132]	; 1fccc <__flatcc_fb_gen_c_builder@@Base+0xda4>
   1f474:	bl	1401c <fwrite@plt>
   1f478:	mov	r1, r6
   1f47c:	str	r5, [sp]
   1f480:	mov	r3, #2
   1f484:	mov	r2, fp
   1f488:	mov	r0, r9
   1f48c:	bl	1e01c <__flatcc_gen_sort@@Base+0x2708>
   1f490:	mov	r1, r4
   1f494:	ldr	r3, [r9, #204]	; 0xcc
   1f498:	mov	r2, #12
   1f49c:	ldr	r0, [pc, #2092]	; 1fcd0 <__flatcc_fb_gen_c_builder@@Base+0xda8>
   1f4a0:	bl	1401c <fwrite@plt>
   1f4a4:	ldr	r0, [r9, #204]	; 0xcc
   1f4a8:	mov	r3, sl
   1f4ac:	mov	r2, sl
   1f4b0:	ldr	r1, [pc, #2088]	; 1fce0 <__flatcc_fb_gen_c_builder@@Base+0xdb8>
   1f4b4:	str	sl, [sp, #4]
   1f4b8:	str	sl, [sp]
   1f4bc:	bl	14094 <fprintf@plt>
   1f4c0:	mov	r1, r4
   1f4c4:	ldr	r3, [r9, #204]	; 0xcc
   1f4c8:	mov	r2, #2
   1f4cc:	ldr	r0, [pc, #2052]	; 1fcd8 <__flatcc_fb_gen_c_builder@@Base+0xdb0>
   1f4d0:	bl	1401c <fwrite@plt>
   1f4d4:	mov	r1, r6
   1f4d8:	str	r4, [sp]
   1f4dc:	mov	r3, #2
   1f4e0:	mov	r2, fp
   1f4e4:	mov	r0, r9
   1f4e8:	bl	1e01c <__flatcc_gen_sort@@Base+0x2708>
   1f4ec:	mov	r1, r4
   1f4f0:	ldr	r3, [r9, #204]	; 0xcc
   1f4f4:	mov	r2, #12
   1f4f8:	ldr	r0, [pc, #2000]	; 1fcd0 <__flatcc_fb_gen_c_builder@@Base+0xda8>
   1f4fc:	bl	1401c <fwrite@plt>
   1f500:	ldr	r0, [r9, #204]	; 0xcc
   1f504:	mov	r3, sl
   1f508:	mov	r2, sl
   1f50c:	ldr	r1, [pc, #2000]	; 1fce4 <__flatcc_fb_gen_c_builder@@Base+0xdbc>
   1f510:	str	sl, [sp]
   1f514:	bl	14094 <fprintf@plt>
   1f518:	mov	r2, r5
   1f51c:	mov	r1, r6
   1f520:	str	r5, [sp]
   1f524:	mov	r3, fp
   1f528:	mov	r0, r9
   1f52c:	bl	1bc64 <__flatcc_gen_sort@@Base+0x350>
   1f530:	mov	r1, r4
   1f534:	ldr	r3, [r9, #204]	; 0xcc
   1f538:	mov	r2, #4
   1f53c:	ldr	r0, [pc, #1928]	; 1fccc <__flatcc_fb_gen_c_builder@@Base+0xda4>
   1f540:	bl	1401c <fwrite@plt>
   1f544:	mov	r3, r4
   1f548:	mov	r1, r6
   1f54c:	str	r5, [sp]
   1f550:	mov	r2, fp
   1f554:	mov	r0, r9
   1f558:	bl	1e01c <__flatcc_gen_sort@@Base+0x2708>
   1f55c:	mov	r1, r4
   1f560:	ldr	r3, [r9, #204]	; 0xcc
   1f564:	mov	r2, #12
   1f568:	ldr	r0, [pc, #1888]	; 1fcd0 <__flatcc_fb_gen_c_builder@@Base+0xda8>
   1f56c:	bl	1401c <fwrite@plt>
   1f570:	ldr	r0, [r9, #204]	; 0xcc
   1f574:	mov	r3, sl
   1f578:	mov	r2, sl
   1f57c:	ldr	r1, [pc, #1892]	; 1fce8 <__flatcc_fb_gen_c_builder@@Base+0xdc0>
   1f580:	str	sl, [sp, #4]
   1f584:	str	sl, [sp]
   1f588:	bl	14094 <fprintf@plt>
   1f58c:	mov	r1, r4
   1f590:	ldr	r3, [r9, #204]	; 0xcc
   1f594:	mov	r2, #2
   1f598:	ldr	r0, [pc, #1848]	; 1fcd8 <__flatcc_fb_gen_c_builder@@Base+0xdb0>
   1f59c:	bl	1401c <fwrite@plt>
   1f5a0:	mov	r1, r6
   1f5a4:	mov	r3, r4
   1f5a8:	str	r4, [sp]
   1f5ac:	mov	r2, fp
   1f5b0:	mov	r0, r9
   1f5b4:	bl	1e01c <__flatcc_gen_sort@@Base+0x2708>
   1f5b8:	mov	r1, r4
   1f5bc:	ldr	r3, [r9, #204]	; 0xcc
   1f5c0:	mov	r2, #12
   1f5c4:	ldr	r0, [pc, #1796]	; 1fcd0 <__flatcc_fb_gen_c_builder@@Base+0xda8>
   1f5c8:	bl	1401c <fwrite@plt>
   1f5cc:	ldr	r6, [sp, #36]	; 0x24
   1f5d0:	str	sl, [sp, #24]
   1f5d4:	str	sl, [sp, #20]
   1f5d8:	ldrh	r2, [r6, #104]	; 0x68
   1f5dc:	ldr	r0, [r9, #204]	; 0xcc
   1f5e0:	mov	r3, r9
   1f5e4:	str	r2, [sp, #16]
   1f5e8:	ldrd	r4, [r6, #112]	; 0x70
   1f5ec:	mov	r2, r9
   1f5f0:	ldr	r1, [pc, #1780]	; 1fcec <__flatcc_fb_gen_c_builder@@Base+0xdc4>
   1f5f4:	str	sl, [sp]
   1f5f8:	strd	r4, [sp, #8]
   1f5fc:	bl	14094 <fprintf@plt>
   1f600:	ldr	r1, [r9, #204]	; 0xcc
   1f604:	mov	r0, #10
   1f608:	bl	140f4 <fputc@plt>
   1f60c:	ldr	r3, [r6, #120]	; 0x78
   1f610:	cmp	r3, #0
   1f614:	str	r3, [sp, #36]	; 0x24
   1f618:	bne	1f120 <__flatcc_fb_gen_c_builder@@Base+0x1f8>
   1f61c:	mov	fp, r9
   1f620:	mov	r0, fp
   1f624:	bl	1cfd8 <__flatcc_gen_sort@@Base+0x16c4>
   1f628:	ldr	r3, [fp, #212]	; 0xd4
   1f62c:	ldr	r0, [fp, #204]	; 0xcc
   1f630:	ldr	r3, [r3, #140]	; 0x8c
   1f634:	cmp	r3, #0
   1f638:	beq	1f654 <__flatcc_fb_gen_c_builder@@Base+0x72c>
   1f63c:	mov	r3, r0
   1f640:	mov	r2, #36	; 0x24
   1f644:	mov	r1, #1
   1f648:	ldr	r0, [pc, #1696]	; 1fcf0 <__flatcc_fb_gen_c_builder@@Base+0xdc8>
   1f64c:	bl	1401c <fwrite@plt>
   1f650:	ldr	r0, [fp, #204]	; 0xcc
   1f654:	ldr	r3, [fp, #208]	; 0xd0
   1f658:	ldr	r1, [pc, #1684]	; 1fcf4 <__flatcc_fb_gen_c_builder@@Base+0xdcc>
   1f65c:	ldr	r2, [r3, #164]	; 0xa4
   1f660:	bl	14094 <fprintf@plt>
   1f664:	mov	r0, #0
   1f668:	add	sp, sp, #308	; 0x134
   1f66c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f670:	ldr	fp, [r2, #20]
   1f674:	cmp	fp, #0
   1f678:	beq	1f8c8 <__flatcc_fb_gen_c_builder@@Base+0x9a0>
   1f67c:	str	r9, [sp, #56]	; 0x38
   1f680:	mov	r9, r3
   1f684:	str	r4, [sp, #52]	; 0x34
   1f688:	ldrh	r3, [fp, #72]	; 0x48
   1f68c:	ands	r3, r3, #4
   1f690:	bne	1f6b4 <__flatcc_fb_gen_c_builder@@Base+0x78c>
   1f694:	ldrh	r2, [fp, #24]
   1f698:	cmp	r2, #14
   1f69c:	bne	1f6b0 <__flatcc_fb_gen_c_builder@@Base+0x788>
   1f6a0:	ldr	r2, [fp, #16]
   1f6a4:	ldrh	r1, [r2, #8]
   1f6a8:	cmp	r1, #1
   1f6ac:	beq	1f738 <__flatcc_fb_gen_c_builder@@Base+0x810>
   1f6b0:	add	r9, r9, #1
   1f6b4:	ldr	fp, [fp]
   1f6b8:	cmp	fp, #0
   1f6bc:	bne	1f688 <__flatcc_fb_gen_c_builder@@Base+0x760>
   1f6c0:	mov	r1, r9
   1f6c4:	ldr	r4, [sp, #52]	; 0x34
   1f6c8:	ldr	r9, [sp, #56]	; 0x38
   1f6cc:	add	r9, r9, r1
   1f6d0:	b	1f234 <__flatcc_fb_gen_c_builder@@Base+0x30c>
   1f6d4:	ldr	r9, [r2, #20]
   1f6d8:	cmp	r9, #0
   1f6dc:	beq	1f8c0 <__flatcc_fb_gen_c_builder@@Base+0x998>
   1f6e0:	str	fp, [sp, #48]	; 0x30
   1f6e4:	mov	fp, r3
   1f6e8:	str	r4, [sp, #44]	; 0x2c
   1f6ec:	ldrh	r3, [r9, #72]	; 0x48
   1f6f0:	ands	r3, r3, #4
   1f6f4:	bne	1f718 <__flatcc_fb_gen_c_builder@@Base+0x7f0>
   1f6f8:	ldrh	r2, [r9, #24]
   1f6fc:	cmp	r2, #14
   1f700:	bne	1f714 <__flatcc_fb_gen_c_builder@@Base+0x7ec>
   1f704:	ldr	r2, [r9, #16]
   1f708:	ldrh	r1, [r2, #8]
   1f70c:	cmp	r1, #1
   1f710:	beq	1f790 <__flatcc_fb_gen_c_builder@@Base+0x868>
   1f714:	add	fp, fp, #1
   1f718:	ldr	r9, [r9]
   1f71c:	cmp	r9, #0
   1f720:	bne	1f6ec <__flatcc_fb_gen_c_builder@@Base+0x7c4>
   1f724:	mov	r1, fp
   1f728:	ldr	r4, [sp, #44]	; 0x2c
   1f72c:	ldr	fp, [sp, #48]	; 0x30
   1f730:	add	fp, fp, r1
   1f734:	b	1f194 <__flatcc_fb_gen_c_builder@@Base+0x26c>
   1f738:	ldr	r4, [r2, #20]
   1f73c:	cmp	r4, #0
   1f740:	beq	1fa08 <__flatcc_fb_gen_c_builder@@Base+0xae0>
   1f744:	mov	r1, r3
   1f748:	str	r9, [sp, #60]	; 0x3c
   1f74c:	ldrh	r5, [r4, #72]	; 0x48
   1f750:	ands	r5, r5, #4
   1f754:	bne	1f778 <__flatcc_fb_gen_c_builder@@Base+0x850>
   1f758:	ldrh	r3, [r4, #24]
   1f75c:	cmp	r3, #14
   1f760:	bne	1f774 <__flatcc_fb_gen_c_builder@@Base+0x84c>
   1f764:	ldr	r3, [r4, #16]
   1f768:	ldrh	r2, [r3, #8]
   1f76c:	cmp	r2, #1
   1f770:	beq	1f85c <__flatcc_fb_gen_c_builder@@Base+0x934>
   1f774:	add	r1, r1, #1
   1f778:	ldr	r4, [r4]
   1f77c:	cmp	r4, #0
   1f780:	bne	1f74c <__flatcc_fb_gen_c_builder@@Base+0x824>
   1f784:	ldr	r9, [sp, #60]	; 0x3c
   1f788:	add	r9, r9, r1
   1f78c:	b	1f6b4 <__flatcc_fb_gen_c_builder@@Base+0x78c>
   1f790:	ldr	r4, [r2, #20]
   1f794:	cmp	r4, #0
   1f798:	beq	1fa10 <__flatcc_fb_gen_c_builder@@Base+0xae8>
   1f79c:	str	fp, [sp, #52]	; 0x34
   1f7a0:	mov	r1, r3
   1f7a4:	mov	fp, r9
   1f7a8:	ldrh	r5, [r4, #72]	; 0x48
   1f7ac:	ands	r5, r5, #4
   1f7b0:	bne	1f7d4 <__flatcc_fb_gen_c_builder@@Base+0x8ac>
   1f7b4:	ldrh	r3, [r4, #24]
   1f7b8:	cmp	r3, #14
   1f7bc:	bne	1f7d0 <__flatcc_fb_gen_c_builder@@Base+0x8a8>
   1f7c0:	ldr	r3, [r4, #16]
   1f7c4:	ldrh	r2, [r3, #8]
   1f7c8:	cmp	r2, #1
   1f7cc:	beq	1f7f8 <__flatcc_fb_gen_c_builder@@Base+0x8d0>
   1f7d0:	add	r1, r1, #1
   1f7d4:	ldr	r4, [r4]
   1f7d8:	cmp	r4, #0
   1f7dc:	bne	1f7a8 <__flatcc_fb_gen_c_builder@@Base+0x880>
   1f7e0:	mov	r9, fp
   1f7e4:	ldr	fp, [sp, #52]	; 0x34
   1f7e8:	add	fp, fp, r1
   1f7ec:	b	1f718 <__flatcc_fb_gen_c_builder@@Base+0x7f0>
   1f7f0:	mov	fp, r4
   1f7f4:	b	1f1a4 <__flatcc_fb_gen_c_builder@@Base+0x27c>
   1f7f8:	ldr	r6, [r3, #20]
   1f7fc:	cmp	r6, #0
   1f800:	beq	1fb20 <__flatcc_fb_gen_c_builder@@Base+0xbf8>
   1f804:	str	r1, [sp, #56]	; 0x38
   1f808:	mov	r2, fp
   1f80c:	mov	r1, r4
   1f810:	ldrh	r7, [r6, #72]	; 0x48
   1f814:	ands	r7, r7, #4
   1f818:	bne	1f83c <__flatcc_fb_gen_c_builder@@Base+0x914>
   1f81c:	ldrh	r3, [r6, #24]
   1f820:	cmp	r3, #14
   1f824:	bne	1f838 <__flatcc_fb_gen_c_builder@@Base+0x910>
   1f828:	ldr	r3, [r6, #16]
   1f82c:	ldrh	r0, [r3, #8]
   1f830:	cmp	r0, #1
   1f834:	beq	1f950 <__flatcc_fb_gen_c_builder@@Base+0xa28>
   1f838:	add	r5, r5, #1
   1f83c:	ldr	r6, [r6]
   1f840:	cmp	r6, #0
   1f844:	bne	1f810 <__flatcc_fb_gen_c_builder@@Base+0x8e8>
   1f848:	mov	r4, r1
   1f84c:	ldr	r1, [sp, #56]	; 0x38
   1f850:	mov	fp, r2
   1f854:	add	r1, r1, r5
   1f858:	b	1f7d4 <__flatcc_fb_gen_c_builder@@Base+0x8ac>
   1f85c:	ldr	r6, [r3, #20]
   1f860:	cmp	r6, #0
   1f864:	beq	1fb18 <__flatcc_fb_gen_c_builder@@Base+0xbf0>
   1f868:	str	r1, [sp, #64]	; 0x40
   1f86c:	mov	r2, fp
   1f870:	mov	r1, r4
   1f874:	ldrh	r7, [r6, #72]	; 0x48
   1f878:	ands	r7, r7, #4
   1f87c:	bne	1f8a0 <__flatcc_fb_gen_c_builder@@Base+0x978>
   1f880:	ldrh	r3, [r6, #24]
   1f884:	cmp	r3, #14
   1f888:	bne	1f89c <__flatcc_fb_gen_c_builder@@Base+0x974>
   1f88c:	ldr	r3, [r6, #16]
   1f890:	ldrh	r0, [r3, #8]
   1f894:	cmp	r0, #1
   1f898:	beq	1f9ac <__flatcc_fb_gen_c_builder@@Base+0xa84>
   1f89c:	add	r5, r5, #1
   1f8a0:	ldr	r6, [r6]
   1f8a4:	cmp	r6, #0
   1f8a8:	bne	1f874 <__flatcc_fb_gen_c_builder@@Base+0x94c>
   1f8ac:	mov	r4, r1
   1f8b0:	ldr	r1, [sp, #64]	; 0x40
   1f8b4:	mov	fp, r2
   1f8b8:	add	r1, r1, r5
   1f8bc:	b	1f778 <__flatcc_fb_gen_c_builder@@Base+0x850>
   1f8c0:	mov	r1, r9
   1f8c4:	b	1f730 <__flatcc_fb_gen_c_builder@@Base+0x808>
   1f8c8:	mov	r1, fp
   1f8cc:	b	1f6cc <__flatcc_fb_gen_c_builder@@Base+0x7a4>
   1f8d0:	mov	r3, r0
   1f8d4:	mov	r2, #36	; 0x24
   1f8d8:	mov	r1, #1
   1f8dc:	ldr	r0, [pc, #1044]	; 1fcf8 <__flatcc_fb_gen_c_builder@@Base+0xdd0>
   1f8e0:	bl	1401c <fwrite@plt>
   1f8e4:	ldr	r3, [fp, #208]	; 0xd0
   1f8e8:	ldr	r0, [fp, #204]	; 0xcc
   1f8ec:	ldrh	r2, [r3, #16]
   1f8f0:	cmp	r2, #2
   1f8f4:	bne	1f004 <__flatcc_fb_gen_c_builder@@Base+0xdc>
   1f8f8:	ldr	r2, [r3, #8]
   1f8fc:	ldr	r1, [pc, #1016]	; 1fcfc <__flatcc_fb_gen_c_builder@@Base+0xdd4>
   1f900:	str	r2, [sp, #4]
   1f904:	ldr	r2, [r3, #12]
   1f908:	mov	r3, fp
   1f90c:	str	r2, [sp]
   1f910:	mov	r2, fp
   1f914:	bl	14094 <fprintf@plt>
   1f918:	ldr	r3, [fp, #208]	; 0xd0
   1f91c:	ldrh	r2, [r3, #32]
   1f920:	cmp	r2, #2
   1f924:	bne	1f024 <__flatcc_fb_gen_c_builder@@Base+0xfc>
   1f928:	ldr	r2, [r3, #24]
   1f92c:	ldr	r0, [fp, #204]	; 0xcc
   1f930:	str	r2, [sp, #4]
   1f934:	ldr	r3, [r3, #28]
   1f938:	mov	r2, fp
   1f93c:	str	r3, [sp]
   1f940:	ldr	r1, [pc, #952]	; 1fd00 <__flatcc_fb_gen_c_builder@@Base+0xdd8>
   1f944:	mov	r3, fp
   1f948:	bl	14094 <fprintf@plt>
   1f94c:	b	1f044 <__flatcc_fb_gen_c_builder@@Base+0x11c>
   1f950:	ldr	r8, [r3, #20]
   1f954:	cmp	r8, #0
   1f958:	beq	1fc40 <__flatcc_fb_gen_c_builder@@Base+0xd18>
   1f95c:	mov	r9, r2
   1f960:	mov	fp, r1
   1f964:	ldrh	r3, [r8, #72]	; 0x48
   1f968:	ands	r3, r3, #4
   1f96c:	bne	1f990 <__flatcc_fb_gen_c_builder@@Base+0xa68>
   1f970:	ldrh	r2, [r8, #24]
   1f974:	cmp	r2, #14
   1f978:	bne	1f98c <__flatcc_fb_gen_c_builder@@Base+0xa64>
   1f97c:	ldr	r2, [r8, #16]
   1f980:	ldrh	r1, [r2, #8]
   1f984:	cmp	r1, #1
   1f988:	beq	1fa98 <__flatcc_fb_gen_c_builder@@Base+0xb70>
   1f98c:	add	r7, r7, #1
   1f990:	ldr	r8, [r8]
   1f994:	cmp	r8, #0
   1f998:	bne	1f964 <__flatcc_fb_gen_c_builder@@Base+0xa3c>
   1f99c:	mov	r2, r9
   1f9a0:	mov	r1, fp
   1f9a4:	add	r5, r5, r7
   1f9a8:	b	1f83c <__flatcc_fb_gen_c_builder@@Base+0x914>
   1f9ac:	ldr	r8, [r3, #20]
   1f9b0:	cmp	r8, #0
   1f9b4:	beq	1fc38 <__flatcc_fb_gen_c_builder@@Base+0xd10>
   1f9b8:	mov	r9, r2
   1f9bc:	mov	fp, r1
   1f9c0:	ldrh	r3, [r8, #72]	; 0x48
   1f9c4:	ands	r3, r3, #4
   1f9c8:	bne	1f9ec <__flatcc_fb_gen_c_builder@@Base+0xac4>
   1f9cc:	ldrh	r2, [r8, #24]
   1f9d0:	cmp	r2, #14
   1f9d4:	bne	1f9e8 <__flatcc_fb_gen_c_builder@@Base+0xac0>
   1f9d8:	ldr	r2, [r8, #16]
   1f9dc:	ldrh	r1, [r2, #8]
   1f9e0:	cmp	r1, #1
   1f9e4:	beq	1fa18 <__flatcc_fb_gen_c_builder@@Base+0xaf0>
   1f9e8:	add	r7, r7, #1
   1f9ec:	ldr	r8, [r8]
   1f9f0:	cmp	r8, #0
   1f9f4:	bne	1f9c0 <__flatcc_fb_gen_c_builder@@Base+0xa98>
   1f9f8:	mov	r2, r9
   1f9fc:	mov	r1, fp
   1fa00:	add	r5, r5, r7
   1fa04:	b	1f8a0 <__flatcc_fb_gen_c_builder@@Base+0x978>
   1fa08:	mov	r1, r4
   1fa0c:	b	1f788 <__flatcc_fb_gen_c_builder@@Base+0x860>
   1fa10:	mov	r1, r4
   1fa14:	b	1f7e8 <__flatcc_fb_gen_c_builder@@Base+0x8c0>
   1fa18:	ldr	r2, [r2, #20]
   1fa1c:	cmp	r2, #0
   1fa20:	beq	1fc58 <__flatcc_fb_gen_c_builder@@Base+0xd30>
   1fa24:	mov	r4, r3
   1fa28:	mov	r3, r2
   1fa2c:	mov	r1, r7
   1fa30:	mov	r2, r8
   1fa34:	mov	r7, r6
   1fa38:	mov	r8, r5
   1fa3c:	mov	r6, r4
   1fa40:	mov	r5, r3
   1fa44:	ldrh	r3, [r5, #72]	; 0x48
   1fa48:	ands	r4, r3, #4
   1fa4c:	bne	1fa70 <__flatcc_fb_gen_c_builder@@Base+0xb48>
   1fa50:	ldrh	r3, [r5, #24]
   1fa54:	cmp	r3, #14
   1fa58:	bne	1fa6c <__flatcc_fb_gen_c_builder@@Base+0xb44>
   1fa5c:	ldr	r3, [r5, #16]
   1fa60:	ldrh	r0, [r3, #8]
   1fa64:	cmp	r0, #1
   1fa68:	beq	1fb9c <__flatcc_fb_gen_c_builder@@Base+0xc74>
   1fa6c:	add	r6, r6, #1
   1fa70:	ldr	r5, [r5]
   1fa74:	cmp	r5, #0
   1fa78:	bne	1fa44 <__flatcc_fb_gen_c_builder@@Base+0xb1c>
   1fa7c:	mov	r5, r8
   1fa80:	mov	r4, r6
   1fa84:	mov	r8, r2
   1fa88:	mov	r6, r7
   1fa8c:	mov	r7, r1
   1fa90:	add	r7, r7, r4
   1fa94:	b	1f9ec <__flatcc_fb_gen_c_builder@@Base+0xac4>
   1fa98:	ldr	r2, [r2, #20]
   1fa9c:	cmp	r2, #0
   1faa0:	beq	1fc74 <__flatcc_fb_gen_c_builder@@Base+0xd4c>
   1faa4:	mov	r4, r3
   1faa8:	mov	r3, r8
   1faac:	mov	r1, r7
   1fab0:	mov	r8, r5
   1fab4:	mov	r7, r6
   1fab8:	mov	r5, r2
   1fabc:	mov	r6, r4
   1fac0:	mov	r2, r3
   1fac4:	ldrh	r3, [r5, #72]	; 0x48
   1fac8:	ands	r4, r3, #4
   1facc:	bne	1faf0 <__flatcc_fb_gen_c_builder@@Base+0xbc8>
   1fad0:	ldrh	r3, [r5, #24]
   1fad4:	cmp	r3, #14
   1fad8:	bne	1faec <__flatcc_fb_gen_c_builder@@Base+0xbc4>
   1fadc:	ldr	r3, [r5, #16]
   1fae0:	ldrh	r0, [r3, #8]
   1fae4:	cmp	r0, #1
   1fae8:	beq	1fb28 <__flatcc_fb_gen_c_builder@@Base+0xc00>
   1faec:	add	r6, r6, #1
   1faf0:	ldr	r5, [r5]
   1faf4:	cmp	r5, #0
   1faf8:	bne	1fac4 <__flatcc_fb_gen_c_builder@@Base+0xb9c>
   1fafc:	mov	r4, r6
   1fb00:	mov	r5, r8
   1fb04:	mov	r6, r7
   1fb08:	mov	r8, r2
   1fb0c:	mov	r7, r1
   1fb10:	add	r7, r7, r4
   1fb14:	b	1f990 <__flatcc_fb_gen_c_builder@@Base+0xa68>
   1fb18:	mov	r5, r6
   1fb1c:	b	1f8b8 <__flatcc_fb_gen_c_builder@@Base+0x990>
   1fb20:	mov	r5, r6
   1fb24:	b	1f854 <__flatcc_fb_gen_c_builder@@Base+0x92c>
   1fb28:	ldr	r3, [r3, #20]
   1fb2c:	cmp	r3, #0
   1fb30:	beq	1fc48 <__flatcc_fb_gen_c_builder@@Base+0xd20>
   1fb34:	str	r5, [sp, #60]	; 0x3c
   1fb38:	mov	r5, r4
   1fb3c:	mov	r4, r3
   1fb40:	b	1fb54 <__flatcc_fb_gen_c_builder@@Base+0xc2c>
   1fb44:	add	r5, r5, #1
   1fb48:	ldr	r4, [r4]
   1fb4c:	cmp	r4, #0
   1fb50:	beq	1fc28 <__flatcc_fb_gen_c_builder@@Base+0xd00>
   1fb54:	ldrh	r0, [r4, #72]	; 0x48
   1fb58:	tst	r0, #4
   1fb5c:	bne	1fb48 <__flatcc_fb_gen_c_builder@@Base+0xc20>
   1fb60:	ldrh	r0, [r4, #24]
   1fb64:	cmp	r0, #14
   1fb68:	bne	1fb44 <__flatcc_fb_gen_c_builder@@Base+0xc1c>
   1fb6c:	ldr	r0, [r4, #16]
   1fb70:	ldrh	ip, [r0, #8]
   1fb74:	cmp	ip, #1
   1fb78:	bne	1fb44 <__flatcc_fb_gen_c_builder@@Base+0xc1c>
   1fb7c:	ldr	r0, [r0, #20]
   1fb80:	str	r1, [sp, #68]	; 0x44
   1fb84:	str	r2, [sp, #64]	; 0x40
   1fb88:	bl	1df04 <__flatcc_gen_sort@@Base+0x25f0>
   1fb8c:	ldr	r2, [sp, #64]	; 0x40
   1fb90:	ldr	r1, [sp, #68]	; 0x44
   1fb94:	add	r5, r5, r0
   1fb98:	b	1fb48 <__flatcc_fb_gen_c_builder@@Base+0xc20>
   1fb9c:	ldr	r3, [r3, #20]
   1fba0:	cmp	r3, #0
   1fba4:	beq	1fc50 <__flatcc_fb_gen_c_builder@@Base+0xd28>
   1fba8:	str	r5, [sp, #68]	; 0x44
   1fbac:	str	r6, [sp, #72]	; 0x48
   1fbb0:	mov	r5, r4
   1fbb4:	mov	r6, r2
   1fbb8:	mov	r4, r3
   1fbbc:	b	1fbd0 <__flatcc_fb_gen_c_builder@@Base+0xca8>
   1fbc0:	add	r5, r5, #1
   1fbc4:	ldr	r4, [r4]
   1fbc8:	cmp	r4, #0
   1fbcc:	beq	1fc10 <__flatcc_fb_gen_c_builder@@Base+0xce8>
   1fbd0:	ldrh	r0, [r4, #72]	; 0x48
   1fbd4:	tst	r0, #4
   1fbd8:	bne	1fbc4 <__flatcc_fb_gen_c_builder@@Base+0xc9c>
   1fbdc:	ldrh	r0, [r4, #24]
   1fbe0:	cmp	r0, #14
   1fbe4:	bne	1fbc0 <__flatcc_fb_gen_c_builder@@Base+0xc98>
   1fbe8:	ldr	r0, [r4, #16]
   1fbec:	ldrh	ip, [r0, #8]
   1fbf0:	cmp	ip, #1
   1fbf4:	bne	1fbc0 <__flatcc_fb_gen_c_builder@@Base+0xc98>
   1fbf8:	ldr	r0, [r0, #20]
   1fbfc:	str	r1, [sp, #76]	; 0x4c
   1fc00:	bl	1df04 <__flatcc_gen_sort@@Base+0x25f0>
   1fc04:	ldr	r1, [sp, #76]	; 0x4c
   1fc08:	add	r5, r5, r0
   1fc0c:	b	1fbc4 <__flatcc_fb_gen_c_builder@@Base+0xc9c>
   1fc10:	mov	r2, r6
   1fc14:	mov	r4, r5
   1fc18:	ldr	r6, [sp, #72]	; 0x48
   1fc1c:	ldr	r5, [sp, #68]	; 0x44
   1fc20:	add	r6, r6, r4
   1fc24:	b	1fa70 <__flatcc_fb_gen_c_builder@@Base+0xb48>
   1fc28:	mov	r4, r5
   1fc2c:	ldr	r5, [sp, #60]	; 0x3c
   1fc30:	add	r6, r6, r4
   1fc34:	b	1faf0 <__flatcc_fb_gen_c_builder@@Base+0xbc8>
   1fc38:	mov	r7, r8
   1fc3c:	b	1fa00 <__flatcc_fb_gen_c_builder@@Base+0xad8>
   1fc40:	mov	r7, r8
   1fc44:	b	1f9a4 <__flatcc_fb_gen_c_builder@@Base+0xa7c>
   1fc48:	mov	r4, r3
   1fc4c:	b	1fc30 <__flatcc_fb_gen_c_builder@@Base+0xd08>
   1fc50:	mov	r4, r3
   1fc54:	b	1fc20 <__flatcc_fb_gen_c_builder@@Base+0xcf8>
   1fc58:	mov	r4, r2
   1fc5c:	b	1fa90 <__flatcc_fb_gen_c_builder@@Base+0xb68>
   1fc60:	ldr	r3, [pc, #156]	; 1fd04 <__flatcc_fb_gen_c_builder@@Base+0xddc>
   1fc64:	ldr	r2, [pc, #156]	; 1fd08 <__flatcc_fb_gen_c_builder@@Base+0xde0>
   1fc68:	ldr	r1, [pc, #156]	; 1fd0c <__flatcc_fb_gen_c_builder@@Base+0xde4>
   1fc6c:	ldr	r0, [pc, #156]	; 1fd10 <__flatcc_fb_gen_c_builder@@Base+0xde8>
   1fc70:	bl	14148 <__assert_fail@plt>
   1fc74:	mov	r4, r2
   1fc78:	b	1fb10 <__flatcc_fb_gen_c_builder@@Base+0xbe8>
   1fc7c:	muleq	r5, ip, fp
   1fc80:	ldrdeq	r5, [r4], -r4
   1fc84:	andeq	r5, r5, r8, asr #23
   1fc88:	andeq	r5, r5, r0, ror #23
   1fc8c:			; <UNDEFINED> instruction: 0x0004b9b0
   1fc90:	andeq	sp, r4, r0, ror #7
   1fc94:	strdeq	r5, [r5], -r8
   1fc98:	andeq	r5, r5, r8, lsl ip
   1fc9c:	andeq	sl, r5, r4, ror #18
   1fca0:	andeq	fp, r4, r0, lsr #20
   1fca4:	andeq	fp, r4, r4, lsl #21
   1fca8:	andeq	r5, r5, r4, lsr #24
   1fcac:	andeq	r5, r5, ip, ror #24
   1fcb0:	strdeq	ip, [r4], -ip	; <UNPREDICTABLE>
   1fcb4:	andeq	ip, r4, r8, lsl sp
   1fcb8:	andeq	ip, r4, r8, lsl r8
   1fcbc:	andeq	sp, r4, ip, asr r2
   1fcc0:	andeq	r7, r4, r0, lsl #1
   1fcc4:	andeq	ip, r4, r0, lsl r8
   1fcc8:	muleq	r5, r4, ip
   1fccc:			; <UNDEFINED> instruction: 0x00055cbc
   1fcd0:	andeq	r5, r5, r4, asr #25
   1fcd4:	ldrdeq	r5, [r5], -r4
   1fcd8:	andeq	r5, r5, ip, lsl #26
   1fcdc:	andeq	r5, r5, r0, lsl sp
   1fce0:	andeq	r5, r5, ip, lsr sp
   1fce4:	andeq	r5, r5, r8, ror sp
   1fce8:	andeq	r5, r5, r8, lsr #27
   1fcec:	andeq	r5, r5, r8, ror #27
   1fcf0:	andeq	fp, r4, ip, asr #14
   1fcf4:	andeq	r5, r5, r0, lsr lr
   1fcf8:	andeq	r5, r4, r8, ror #17
   1fcfc:	andeq	fp, r4, ip, ror #19
   1fd00:	andeq	fp, r4, r4, asr sl
   1fd04:	andeq	ip, r4, r8, ror r6
   1fd08:	strdeq	r0, [r0], -r2
   1fd0c:	andeq	ip, r4, ip, lsl r7
   1fd10:	andeq	r4, r4, r8, lsr #16
   1fd14:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1fd18:	sub	sp, sp, #492	; 0x1ec
   1fd1c:	mov	r4, r1
   1fd20:	mov	r8, r0
   1fd24:	mov	r2, #220	; 0xdc
   1fd28:	mov	r1, #0
   1fd2c:	add	r0, sp, #48	; 0x30
   1fd30:	bl	140ac <memset@plt>
   1fd34:	mov	r2, #220	; 0xdc
   1fd38:	mov	r1, #0
   1fd3c:	add	r0, sp, #268	; 0x10c
   1fd40:	bl	140ac <memset@plt>
   1fd44:	mov	r1, r4
   1fd48:	ldr	r0, [r4, #12]
   1fd4c:	add	r2, sp, #48	; 0x30
   1fd50:	bl	170c4 <__flatcc_fb_scoped_symbol_name@@Base>
   1fd54:	add	r2, sp, #48	; 0x30
   1fd58:	ldr	r0, [r8, #204]	; 0xcc
   1fd5c:	ldr	r1, [pc, #1100]	; 201b0 <__flatcc_fb_gen_c_builder@@Base+0x1288>
   1fd60:	bl	14094 <fprintf@plt>
   1fd64:	ldr	r4, [r4, #20]
   1fd68:	cmp	r4, #0
   1fd6c:	beq	1fe84 <__flatcc_fb_gen_c_builder@@Base+0xf5c>
   1fd70:	ldr	sl, [pc, #1084]	; 201b4 <__flatcc_fb_gen_c_builder@@Base+0x128c>
   1fd74:	ldr	r9, [pc, #1084]	; 201b8 <__flatcc_fb_gen_c_builder@@Base+0x1290>
   1fd78:	ldr	fp, [pc, #1084]	; 201bc <__flatcc_fb_gen_c_builder@@Base+0x1294>
   1fd7c:	mov	r2, #1
   1fd80:	ldrh	r3, [r4, #72]	; 0x48
   1fd84:	tst	r3, #4
   1fd88:	bne	1fe70 <__flatcc_fb_gen_c_builder@@Base+0xf48>
   1fd8c:	cmp	r2, #0
   1fd90:	beq	20070 <__flatcc_fb_gen_c_builder@@Base+0x1148>
   1fd94:	ldr	r3, [r8, #204]	; 0xcc
   1fd98:	mov	r2, #28
   1fd9c:	mov	r1, #1
   1fda0:	ldr	r0, [pc, #1048]	; 201c0 <__flatcc_fb_gen_c_builder@@Base+0x1298>
   1fda4:	bl	1401c <fwrite@plt>
   1fda8:	ldrh	r2, [r4, #72]	; 0x48
   1fdac:	ldrh	r3, [r4, #24]
   1fdb0:	lsr	r2, r2, #8
   1fdb4:	sub	r3, r3, #7
   1fdb8:	and	r5, r2, #1
   1fdbc:	cmp	r3, #8
   1fdc0:	ldrls	pc, [pc, r3, lsl #2]
   1fdc4:	b	1fe0c <__flatcc_fb_gen_c_builder@@Base+0xee4>
   1fdc8:	andeq	pc, r1, r8, lsl pc	; <UNPREDICTABLE>
   1fdcc:	andeq	pc, r1, ip, ror #27
   1fdd0:			; <UNDEFINED> instruction: 0x0001ffb8
   1fdd4:	andeq	pc, r1, r0, lsr #31
   1fdd8:	andeq	pc, r1, ip, lsl #28
   1fddc:	andeq	pc, r1, ip, lsl #28
   1fde0:	andeq	pc, r1, ip, lsl #28
   1fde4:	ldrdeq	pc, [r1], -r0
   1fde8:	andeq	pc, r1, r8, ror #30
   1fdec:	ldrh	r1, [r4, #74]	; 0x4a
   1fdf0:	ldrd	r2, [r4, #96]	; 0x60
   1fdf4:	ldr	r0, [r8, #204]	; 0xcc
   1fdf8:	str	r1, [sp, #8]
   1fdfc:	ldrd	r6, [r4, #88]	; 0x58
   1fe00:	ldr	r1, [pc, #956]	; 201c4 <__flatcc_fb_gen_c_builder@@Base+0x129c>
   1fe04:	strd	r6, [sp]
   1fe08:	bl	14094 <fprintf@plt>
   1fe0c:	ldr	r2, [r4, #4]
   1fe10:	mov	r1, sl
   1fe14:	ldr	r0, [r8, #204]	; 0xcc
   1fe18:	ldr	r3, [r2]
   1fe1c:	ldr	r2, [r2, #4]
   1fe20:	bl	14094 <fprintf@plt>
   1fe24:	ldr	r4, [r4]
   1fe28:	cmp	r4, #0
   1fe2c:	beq	20198 <__flatcc_fb_gen_c_builder@@Base+0x1270>
   1fe30:	ldrh	r3, [r4, #72]	; 0x48
   1fe34:	tst	r3, #4
   1fe38:	beq	20070 <__flatcc_fb_gen_c_builder@@Base+0x1148>
   1fe3c:	ldr	r4, [r4]
   1fe40:	cmp	r4, #0
   1fe44:	beq	20198 <__flatcc_fb_gen_c_builder@@Base+0x1270>
   1fe48:	ldrh	r3, [r4, #72]	; 0x48
   1fe4c:	tst	r3, #4
   1fe50:	beq	20070 <__flatcc_fb_gen_c_builder@@Base+0x1148>
   1fe54:	ldr	r4, [r4]
   1fe58:	cmp	r4, #0
   1fe5c:	beq	20198 <__flatcc_fb_gen_c_builder@@Base+0x1270>
   1fe60:	ldrh	r3, [r4, #72]	; 0x48
   1fe64:	tst	r3, #4
   1fe68:	beq	20070 <__flatcc_fb_gen_c_builder@@Base+0x1148>
   1fe6c:	mov	r2, #0
   1fe70:	ldr	r4, [r4]
   1fe74:	cmp	r4, #0
   1fe78:	bne	1fd80 <__flatcc_fb_gen_c_builder@@Base+0xe58>
   1fe7c:	cmp	r2, #0
   1fe80:	beq	20198 <__flatcc_fb_gen_c_builder@@Base+0x1270>
   1fe84:	ldr	r3, [r8, #204]	; 0xcc
   1fe88:	mov	r2, #29
   1fe8c:	mov	r1, #1
   1fe90:	ldr	r0, [pc, #816]	; 201c8 <__flatcc_fb_gen_c_builder@@Base+0x12a0>
   1fe94:	bl	1401c <fwrite@plt>
   1fe98:	ldr	r3, [r8, #204]	; 0xcc
   1fe9c:	mov	r2, #3
   1fea0:	mov	r1, #1
   1fea4:	ldr	r0, [pc, #800]	; 201cc <__flatcc_fb_gen_c_builder@@Base+0x12a4>
   1fea8:	bl	1401c <fwrite@plt>
   1feac:	add	r3, sp, #48	; 0x30
   1feb0:	ldr	r0, [r8, #204]	; 0xcc
   1feb4:	mov	r2, r3
   1feb8:	str	r3, [sp]
   1febc:	ldr	r1, [pc, #780]	; 201d0 <__flatcc_fb_gen_c_builder@@Base+0x12a8>
   1fec0:	bl	14094 <fprintf@plt>
   1fec4:	add	r3, sp, #48	; 0x30
   1fec8:	ldr	r0, [r8, #204]	; 0xcc
   1fecc:	mov	r2, r3
   1fed0:	str	r3, [sp]
   1fed4:	ldr	r1, [pc, #760]	; 201d4 <__flatcc_fb_gen_c_builder@@Base+0x12ac>
   1fed8:	bl	14094 <fprintf@plt>
   1fedc:	add	r3, sp, #48	; 0x30
   1fee0:	mov	r2, r3
   1fee4:	ldr	r1, [pc, #748]	; 201d8 <__flatcc_fb_gen_c_builder@@Base+0x12b0>
   1fee8:	ldr	r0, [r8, #204]	; 0xcc
   1feec:	bl	14094 <fprintf@plt>
   1fef0:	add	r3, sp, #48	; 0x30
   1fef4:	ldr	r0, [r8, #204]	; 0xcc
   1fef8:	mov	r2, r3
   1fefc:	str	r3, [sp]
   1ff00:	ldr	r1, [pc, #724]	; 201dc <__flatcc_fb_gen_c_builder@@Base+0x12b4>
   1ff04:	mov	r3, r8
   1ff08:	bl	14094 <fprintf@plt>
   1ff0c:	mov	r0, #0
   1ff10:	add	sp, sp, #492	; 0x1ec
   1ff14:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ff18:	ldr	r1, [r4, #104]	; 0x68
   1ff1c:	cmp	r1, #0
   1ff20:	beq	20008 <__flatcc_fb_gen_c_builder@@Base+0x10e0>
   1ff24:	add	r2, sp, #268	; 0x10c
   1ff28:	ldr	r0, [r1, #12]
   1ff2c:	bl	170c4 <__flatcc_fb_scoped_symbol_name@@Base>
   1ff30:	ldr	r3, [r4, #104]	; 0x68
   1ff34:	ldrh	r3, [r3, #8]
   1ff38:	cmp	r3, #0
   1ff3c:	bne	20088 <__flatcc_fb_gen_c_builder@@Base+0x1160>
   1ff40:	add	r1, sp, #268	; 0x10c
   1ff44:	ldrd	r2, [r4, #96]	; 0x60
   1ff48:	str	r1, [sp, #8]
   1ff4c:	ldrh	r1, [r4, #74]	; 0x4a
   1ff50:	ldr	r0, [r8, #204]	; 0xcc
   1ff54:	str	r5, [sp]
   1ff58:	str	r1, [sp, #4]
   1ff5c:	ldr	r1, [pc, #636]	; 201e0 <__flatcc_fb_gen_c_builder@@Base+0x12b8>
   1ff60:	bl	14094 <fprintf@plt>
   1ff64:	b	1fe0c <__flatcc_fb_gen_c_builder@@Base+0xee4>
   1ff68:	ldr	r1, [r4, #16]
   1ff6c:	add	r2, sp, #268	; 0x10c
   1ff70:	ldr	r0, [r1, #12]
   1ff74:	bl	170c4 <__flatcc_fb_scoped_symbol_name@@Base>
   1ff78:	ldr	r3, [r4, #16]
   1ff7c:	ldrh	r3, [r3, #8]
   1ff80:	cmp	r3, #4
   1ff84:	ldrls	pc, [pc, r3, lsl #2]
   1ff88:	b	20164 <__flatcc_fb_gen_c_builder@@Base+0x123c>
   1ff8c:	andeq	r0, r2, r0, lsl r1
   1ff90:	andeq	r0, r2, r8
   1ff94:	andeq	r0, r2, r4, ror #2
   1ff98:	andeq	r0, r2, r8
   1ff9c:	strdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   1ffa0:	ldrd	r2, [r4, #96]	; 0x60
   1ffa4:	ldr	r0, [r8, #204]	; 0xcc
   1ffa8:	ldr	r1, [pc, #564]	; 201e4 <__flatcc_fb_gen_c_builder@@Base+0x12bc>
   1ffac:	str	r5, [sp]
   1ffb0:	bl	14094 <fprintf@plt>
   1ffb4:	b	1fe0c <__flatcc_fb_gen_c_builder@@Base+0xee4>
   1ffb8:	ldrd	r2, [r4, #96]	; 0x60
   1ffbc:	ldr	r0, [r8, #204]	; 0xcc
   1ffc0:	ldr	r1, [pc, #544]	; 201e8 <__flatcc_fb_gen_c_builder@@Base+0x12c0>
   1ffc4:	str	r5, [sp]
   1ffc8:	bl	14094 <fprintf@plt>
   1ffcc:	b	1fe0c <__flatcc_fb_gen_c_builder@@Base+0xee4>
   1ffd0:	ldr	r1, [r4, #16]
   1ffd4:	add	r2, sp, #268	; 0x10c
   1ffd8:	ldr	r0, [r1, #12]
   1ffdc:	bl	170c4 <__flatcc_fb_scoped_symbol_name@@Base>
   1ffe0:	ldr	r3, [r4, #16]
   1ffe4:	ldrh	r3, [r3, #8]
   1ffe8:	cmp	r3, #4
   1ffec:	ldrls	pc, [pc, r3, lsl #2]
   1fff0:	b	20130 <__flatcc_fb_gen_c_builder@@Base+0x1208>
   1fff4:	ldrdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   1fff8:	andeq	pc, r1, ip, ror #27
   1fffc:	andeq	r0, r2, r0, lsr r1
   20000:	andeq	pc, r1, ip, ror #27
   20004:	strheq	r0, [r2], -r0	; <UNPREDICTABLE>
   20008:	ldr	r3, [r8, #204]	; 0xcc
   2000c:	ldrd	r6, [r4, #88]	; 0x58
   20010:	str	r3, [sp, #40]	; 0x28
   20014:	ldrd	r2, [r4, #96]	; 0x60
   20018:	strd	r2, [sp, #32]
   2001c:	orrs	r3, r6, r7
   20020:	ldrh	r3, [r4, #74]	; 0x4a
   20024:	mvneq	r0, #0
   20028:	moveq	r1, #0
   2002c:	str	r3, [sp, #44]	; 0x2c
   20030:	beq	2004c <__flatcc_fb_gen_c_builder@@Base+0x1124>
   20034:	mov	r3, r7
   20038:	mov	r2, r6
   2003c:	mvn	r0, #0
   20040:	mov	r1, #0
   20044:	bl	42490 <fb_value_set_visit@@Base+0x668>
   20048:	ldr	r3, [sp, #44]	; 0x2c
   2004c:	strd	r0, [sp, #24]
   20050:	str	r3, [sp, #16]
   20054:	strd	r6, [sp, #8]
   20058:	str	r5, [sp]
   2005c:	ldrd	r2, [sp, #32]
   20060:	ldr	r0, [sp, #40]	; 0x28
   20064:	mov	r1, r9
   20068:	bl	14094 <fprintf@plt>
   2006c:	b	1fe0c <__flatcc_fb_gen_c_builder@@Base+0xee4>
   20070:	ldr	r3, [r8, #204]	; 0xcc
   20074:	mov	r2, #30
   20078:	mov	r1, #1
   2007c:	ldr	r0, [pc, #360]	; 201ec <__flatcc_fb_gen_c_builder@@Base+0x12c4>
   20080:	bl	1401c <fwrite@plt>
   20084:	b	1fda8 <__flatcc_fb_gen_c_builder@@Base+0xe80>
   20088:	ldrh	r1, [r4, #74]	; 0x4a
   2008c:	ldrd	r2, [r4, #96]	; 0x60
   20090:	ldr	r0, [r8, #204]	; 0xcc
   20094:	str	r1, [sp, #16]
   20098:	ldrd	r6, [r4, #88]	; 0x58
   2009c:	ldr	r1, [pc, #332]	; 201f0 <__flatcc_fb_gen_c_builder@@Base+0x12c8>
   200a0:	str	r5, [sp]
   200a4:	strd	r6, [sp, #8]
   200a8:	bl	14094 <fprintf@plt>
   200ac:	b	1fe0c <__flatcc_fb_gen_c_builder@@Base+0xee4>
   200b0:	add	r1, sp, #268	; 0x10c
   200b4:	ldrd	r2, [r4, #96]	; 0x60
   200b8:	ldr	r0, [r8, #204]	; 0xcc
   200bc:	str	r1, [sp, #4]
   200c0:	str	r5, [sp]
   200c4:	ldr	r1, [pc, #296]	; 201f4 <__flatcc_fb_gen_c_builder@@Base+0x12cc>
   200c8:	bl	14094 <fprintf@plt>
   200cc:	b	1fe0c <__flatcc_fb_gen_c_builder@@Base+0xee4>
   200d0:	add	r1, sp, #268	; 0x10c
   200d4:	ldrd	r2, [r4, #96]	; 0x60
   200d8:	ldr	r0, [r8, #204]	; 0xcc
   200dc:	str	r1, [sp, #4]
   200e0:	str	r5, [sp]
   200e4:	ldr	r1, [pc, #268]	; 201f8 <__flatcc_fb_gen_c_builder@@Base+0x12d0>
   200e8:	bl	14094 <fprintf@plt>
   200ec:	b	1fe0c <__flatcc_fb_gen_c_builder@@Base+0xee4>
   200f0:	add	r1, sp, #268	; 0x10c
   200f4:	ldrd	r2, [r4, #96]	; 0x60
   200f8:	ldr	r0, [r8, #204]	; 0xcc
   200fc:	str	r1, [sp, #4]
   20100:	str	r5, [sp]
   20104:	ldr	r1, [pc, #240]	; 201fc <__flatcc_fb_gen_c_builder@@Base+0x12d4>
   20108:	bl	14094 <fprintf@plt>
   2010c:	b	1fe0c <__flatcc_fb_gen_c_builder@@Base+0xee4>
   20110:	add	r1, sp, #268	; 0x10c
   20114:	ldrd	r2, [r4, #96]	; 0x60
   20118:	ldr	r0, [r8, #204]	; 0xcc
   2011c:	str	r1, [sp, #4]
   20120:	str	r5, [sp]
   20124:	mov	r1, fp
   20128:	bl	14094 <fprintf@plt>
   2012c:	b	1fe0c <__flatcc_fb_gen_c_builder@@Base+0xee4>
   20130:	ldr	r1, [pc, #200]	; 20200 <__flatcc_fb_gen_c_builder@@Base+0x12d8>
   20134:	ldr	r2, [pc, #200]	; 20204 <__flatcc_fb_gen_c_builder@@Base+0x12dc>
   20138:	mov	r3, #178	; 0xb2
   2013c:	ldr	r0, [r1]
   20140:	str	r2, [sp]
   20144:	ldr	r1, [pc, #188]	; 20208 <__flatcc_fb_gen_c_builder@@Base+0x12e0>
   20148:	ldr	r2, [pc, #188]	; 2020c <__flatcc_fb_gen_c_builder@@Base+0x12e4>
   2014c:	bl	14094 <fprintf@plt>
   20150:	ldr	r3, [pc, #184]	; 20210 <__flatcc_fb_gen_c_builder@@Base+0x12e8>
   20154:	mov	r2, #178	; 0xb2
   20158:	ldr	r1, [pc, #172]	; 2020c <__flatcc_fb_gen_c_builder@@Base+0x12e4>
   2015c:	ldr	r0, [pc, #176]	; 20214 <__flatcc_fb_gen_c_builder@@Base+0x12ec>
   20160:	bl	14148 <__assert_fail@plt>
   20164:	ldr	r1, [pc, #148]	; 20200 <__flatcc_fb_gen_c_builder@@Base+0x12d8>
   20168:	ldr	r2, [pc, #168]	; 20218 <__flatcc_fb_gen_c_builder@@Base+0x12f0>
   2016c:	mov	r3, #202	; 0xca
   20170:	ldr	r0, [r1]
   20174:	str	r2, [sp]
   20178:	ldr	r1, [pc, #136]	; 20208 <__flatcc_fb_gen_c_builder@@Base+0x12e0>
   2017c:	ldr	r2, [pc, #136]	; 2020c <__flatcc_fb_gen_c_builder@@Base+0x12e4>
   20180:	bl	14094 <fprintf@plt>
   20184:	ldr	r3, [pc, #132]	; 20210 <__flatcc_fb_gen_c_builder@@Base+0x12e8>
   20188:	mov	r2, #202	; 0xca
   2018c:	ldr	r1, [pc, #120]	; 2020c <__flatcc_fb_gen_c_builder@@Base+0x12e4>
   20190:	ldr	r0, [pc, #124]	; 20214 <__flatcc_fb_gen_c_builder@@Base+0x12ec>
   20194:	bl	14148 <__assert_fail@plt>
   20198:	ldr	r3, [r8, #204]	; 0xcc
   2019c:	mov	r2, #15
   201a0:	mov	r1, #1
   201a4:	ldr	r0, [pc, #112]	; 2021c <__flatcc_fb_gen_c_builder@@Base+0x12f4>
   201a8:	bl	1401c <fwrite@plt>
   201ac:	b	1fe84 <__flatcc_fb_gen_c_builder@@Base+0xf5c>
   201b0:	andeq	r5, r5, r4, ror lr
   201b4:	andeq	r7, r5, r8, lsl r1
   201b8:			; <UNDEFINED> instruction: 0x00055fb0
   201bc:	andeq	r6, r5, r8, asr r1
   201c0:			; <UNDEFINED> instruction: 0x00055ebc
   201c4:	strdeq	r5, [r5], -ip
   201c8:	andeq	r6, r5, r4, lsr r2
   201cc:	strdeq	r6, [r5], -r0
   201d0:	andeq	r6, r5, r4, asr r2
   201d4:	strdeq	r6, [r5], -r4
   201d8:	andeq	r6, r5, r0, lsr #7
   201dc:	andeq	r6, r5, r8, asr r4
   201e0:	andeq	r5, r5, r4, lsr #30
   201e4:	strdeq	r5, [r5], -r4
   201e8:	andeq	r6, r5, r0, lsr #32
   201ec:	ldrdeq	r5, [r5], -ip
   201f0:	andeq	r5, r5, r0, ror pc
   201f4:	andeq	r6, r5, ip, lsl #1
   201f8:	andeq	r6, r5, r0, asr r0
   201fc:	muleq	r5, ip, r1
   20200:	andeq	pc, r6, r8, lsr #1
   20204:	andeq	r6, r5, ip, lsl r1
   20208:	ldrdeq	r4, [r4], -ip
   2020c:	andeq	r6, r5, r8, asr #1
   20210:	andeq	r5, r5, ip, asr #28
   20214:	andeq	sp, r4, r4, ror r2
   20218:	andeq	r6, r5, r0, ror #3
   2021c:	andeq	r6, r5, r4, lsr #4
   20220:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   20224:	sub	sp, sp, #464	; 0x1d0
   20228:	mov	r4, r1
   2022c:	mov	r5, r0
   20230:	mov	r2, #220	; 0xdc
   20234:	mov	r1, #0
   20238:	add	r0, sp, #24
   2023c:	bl	140ac <memset@plt>
   20240:	mov	r2, #220	; 0xdc
   20244:	mov	r1, #0
   20248:	add	r0, sp, #244	; 0xf4
   2024c:	bl	140ac <memset@plt>
   20250:	mov	r1, r4
   20254:	ldr	r0, [r4, #12]
   20258:	add	r2, sp, #24
   2025c:	bl	170c4 <__flatcc_fb_scoped_symbol_name@@Base>
   20260:	add	r2, sp, #24
   20264:	ldr	r0, [r5]
   20268:	ldr	r1, [pc, #372]	; 203e4 <__flatcc_fb_gen_c_builder@@Base+0x14bc>
   2026c:	bl	14094 <fprintf@plt>
   20270:	ldr	r4, [r4, #20]
   20274:	cmp	r4, #0
   20278:	beq	2033c <__flatcc_fb_gen_c_builder@@Base+0x1414>
   2027c:	ldr	r8, [pc, #356]	; 203e8 <__flatcc_fb_gen_c_builder@@Base+0x14c0>
   20280:	ldr	sl, [pc, #356]	; 203ec <__flatcc_fb_gen_c_builder@@Base+0x14c4>
   20284:	ldr	r9, [pc, #356]	; 203f0 <__flatcc_fb_gen_c_builder@@Base+0x14c8>
   20288:	ldrh	r2, [r4, #24]
   2028c:	ldr	r3, [r4, #4]
   20290:	cmp	r2, #10
   20294:	ldm	r3, {r6, r7}
   20298:	beq	2035c <__flatcc_fb_gen_c_builder@@Base+0x1434>
   2029c:	cmp	r2, #14
   202a0:	beq	202e0 <__flatcc_fb_gen_c_builder@@Base+0x13b8>
   202a4:	cmp	r2, #0
   202a8:	beq	20330 <__flatcc_fb_gen_c_builder@@Base+0x1408>
   202ac:	ldr	r1, [pc, #320]	; 203f4 <__flatcc_fb_gen_c_builder@@Base+0x14cc>
   202b0:	ldr	r2, [pc, #320]	; 203f8 <__flatcc_fb_gen_c_builder@@Base+0x14d0>
   202b4:	mov	r3, #83	; 0x53
   202b8:	ldr	r0, [r1]
   202bc:	str	r2, [sp]
   202c0:	ldr	r1, [pc, #308]	; 203fc <__flatcc_fb_gen_c_builder@@Base+0x14d4>
   202c4:	ldr	r2, [pc, #308]	; 20400 <__flatcc_fb_gen_c_builder@@Base+0x14d8>
   202c8:	bl	14094 <fprintf@plt>
   202cc:	ldr	r3, [pc, #304]	; 20404 <__flatcc_fb_gen_c_builder@@Base+0x14dc>
   202d0:	mov	r2, #83	; 0x53
   202d4:	ldr	r1, [pc, #292]	; 20400 <__flatcc_fb_gen_c_builder@@Base+0x14d8>
   202d8:	ldr	r0, [pc, #296]	; 20408 <__flatcc_fb_gen_c_builder@@Base+0x14e0>
   202dc:	bl	14148 <__assert_fail@plt>
   202e0:	ldr	r1, [r4, #16]
   202e4:	add	r2, sp, #244	; 0xf4
   202e8:	ldr	r0, [r1, #12]
   202ec:	bl	170c4 <__flatcc_fb_scoped_symbol_name@@Base>
   202f0:	ldr	r1, [r4, #16]
   202f4:	ldrh	r3, [r1, #8]
   202f8:	cmp	r3, #0
   202fc:	beq	20384 <__flatcc_fb_gen_c_builder@@Base+0x145c>
   20300:	cmp	r3, #1
   20304:	bne	203b0 <__flatcc_fb_gen_c_builder@@Base+0x1488>
   20308:	ldr	r2, [r4, #48]	; 0x30
   2030c:	str	r6, [sp, #16]
   20310:	str	r7, [sp, #12]
   20314:	ldrh	r3, [r1, #104]	; 0x68
   20318:	ldr	r0, [r5]
   2031c:	str	r3, [sp, #8]
   20320:	ldrd	r6, [r1, #112]	; 0x70
   20324:	mov	r1, r9
   20328:	strd	r6, [sp]
   2032c:	bl	14094 <fprintf@plt>
   20330:	ldr	r4, [r4]
   20334:	cmp	r4, #0
   20338:	bne	20288 <__flatcc_fb_gen_c_builder@@Base+0x1360>
   2033c:	ldr	r3, [r5]
   20340:	mov	r2, #47	; 0x2f
   20344:	mov	r1, #1
   20348:	ldr	r0, [pc, #188]	; 2040c <__flatcc_fb_gen_c_builder@@Base+0x14e4>
   2034c:	bl	1401c <fwrite@plt>
   20350:	mov	r0, #0
   20354:	add	sp, sp, #464	; 0x1d0
   20358:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2035c:	ldr	r2, [r4, #48]	; 0x30
   20360:	ldr	r0, [r5]
   20364:	mov	r3, r7
   20368:	str	r6, [sp]
   2036c:	mov	r1, r8
   20370:	bl	14094 <fprintf@plt>
   20374:	ldr	r4, [r4]
   20378:	cmp	r4, #0
   2037c:	bne	20288 <__flatcc_fb_gen_c_builder@@Base+0x1360>
   20380:	b	2033c <__flatcc_fb_gen_c_builder@@Base+0x1414>
   20384:	ldr	r2, [r4, #48]	; 0x30
   20388:	ldr	r0, [r5]
   2038c:	add	r3, sp, #244	; 0xf4
   20390:	str	r6, [sp, #4]
   20394:	str	r7, [sp]
   20398:	mov	r1, sl
   2039c:	bl	14094 <fprintf@plt>
   203a0:	ldr	r4, [r4]
   203a4:	cmp	r4, #0
   203a8:	bne	20288 <__flatcc_fb_gen_c_builder@@Base+0x1360>
   203ac:	b	2033c <__flatcc_fb_gen_c_builder@@Base+0x1414>
   203b0:	ldr	r1, [pc, #60]	; 203f4 <__flatcc_fb_gen_c_builder@@Base+0x14cc>
   203b4:	ldr	r2, [pc, #84]	; 20410 <__flatcc_fb_gen_c_builder@@Base+0x14e8>
   203b8:	mov	r3, #74	; 0x4a
   203bc:	ldr	r0, [r1]
   203c0:	str	r2, [sp]
   203c4:	ldr	r1, [pc, #48]	; 203fc <__flatcc_fb_gen_c_builder@@Base+0x14d4>
   203c8:	ldr	r2, [pc, #48]	; 20400 <__flatcc_fb_gen_c_builder@@Base+0x14d8>
   203cc:	bl	14094 <fprintf@plt>
   203d0:	ldr	r3, [pc, #44]	; 20404 <__flatcc_fb_gen_c_builder@@Base+0x14dc>
   203d4:	mov	r2, #74	; 0x4a
   203d8:	ldr	r1, [pc, #32]	; 20400 <__flatcc_fb_gen_c_builder@@Base+0x14d8>
   203dc:	ldr	r0, [pc, #36]	; 20408 <__flatcc_fb_gen_c_builder@@Base+0x14e0>
   203e0:	bl	14148 <__assert_fail@plt>
   203e4:	andeq	r6, r5, r8, lsl r5
   203e8:	andeq	r6, r5, r0, lsl #13
   203ec:	andeq	r6, r5, r8, lsr #11
   203f0:	strdeq	r6, [r5], -r8
   203f4:	andeq	pc, r6, r8, lsr #1
   203f8:	andeq	r6, r5, r0, asr #13
   203fc:	ldrdeq	r4, [r4], -ip
   20400:	andeq	r6, r5, r8, asr #1
   20404:	andeq	r5, r5, r0, ror #28
   20408:	andeq	sp, r4, r4, ror r2
   2040c:	andeq	r6, r5, r8, ror r5
   20410:	andeq	r6, r5, r4, asr #12

00020414 <__flatcc_fb_gen_c_verifier@@Base>:
   20414:	ldr	r3, [r0, #208]	; 0xd0
   20418:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2041c:	mov	r6, r0
   20420:	ldr	r3, [r3, #164]	; 0xa4
   20424:	sub	sp, sp, #244	; 0xf4
   20428:	mov	r2, r3
   2042c:	ldr	r1, [pc, #744]	; 2071c <__flatcc_fb_gen_c_verifier@@Base+0x308>
   20430:	ldr	r0, [r0, #204]	; 0xcc
   20434:	bl	14094 <fprintf@plt>
   20438:	ldr	r3, [r6, #204]	; 0xcc
   2043c:	mov	r2, #81	; 0x51
   20440:	mov	r1, #1
   20444:	ldr	r0, [pc, #724]	; 20720 <__flatcc_fb_gen_c_verifier@@Base+0x30c>
   20448:	bl	1401c <fwrite@plt>
   2044c:	ldr	r3, [r6, #208]	; 0xd0
   20450:	ldr	r1, [pc, #716]	; 20724 <__flatcc_fb_gen_c_verifier@@Base+0x310>
   20454:	ldr	r0, [r6, #204]	; 0xcc
   20458:	ldr	r2, [r3, #164]	; 0xa4
   2045c:	bl	14094 <fprintf@plt>
   20460:	ldr	r3, [r6, #208]	; 0xd0
   20464:	ldr	r1, [pc, #700]	; 20728 <__flatcc_fb_gen_c_verifier@@Base+0x314>
   20468:	ldr	r0, [r6, #204]	; 0xcc
   2046c:	ldr	r2, [r3, #160]	; 0xa0
   20470:	bl	14094 <fprintf@plt>
   20474:	ldr	r3, [r6, #204]	; 0xcc
   20478:	mov	r2, #7
   2047c:	mov	r1, #1
   20480:	ldr	r0, [pc, #676]	; 2072c <__flatcc_fb_gen_c_verifier@@Base+0x318>
   20484:	bl	1401c <fwrite@plt>
   20488:	ldr	r3, [r6, #204]	; 0xcc
   2048c:	mov	r2, #36	; 0x24
   20490:	mov	r1, #1
   20494:	ldr	r0, [pc, #660]	; 20730 <__flatcc_fb_gen_c_verifier@@Base+0x31c>
   20498:	bl	1401c <fwrite@plt>
   2049c:	ldr	r1, [pc, #656]	; 20734 <__flatcc_fb_gen_c_verifier@@Base+0x320>
   204a0:	mov	r0, r6
   204a4:	ldr	r2, [pc, #652]	; 20738 <__flatcc_fb_gen_c_verifier@@Base+0x324>
   204a8:	bl	16ee8 <__flatcc_fb_gen_c_includes@@Base>
   204ac:	ldr	r3, [r6, #212]	; 0xd4
   204b0:	ldr	r1, [r6, #204]	; 0xcc
   204b4:	ldr	r3, [r3, #140]	; 0x8c
   204b8:	cmp	r3, #0
   204bc:	beq	204d8 <__flatcc_fb_gen_c_verifier@@Base+0xc4>
   204c0:	mov	r3, r1
   204c4:	mov	r2, #36	; 0x24
   204c8:	mov	r1, #1
   204cc:	ldr	r0, [pc, #616]	; 2073c <__flatcc_fb_gen_c_verifier@@Base+0x328>
   204d0:	bl	1401c <fwrite@plt>
   204d4:	ldr	r1, [r6, #204]	; 0xcc
   204d8:	mov	r0, #10
   204dc:	bl	140f4 <fputc@plt>
   204e0:	add	r0, sp, #20
   204e4:	mov	r2, #220	; 0xdc
   204e8:	mov	r1, #0
   204ec:	bl	140ac <memset@plt>
   204f0:	ldr	r3, [r6, #208]	; 0xd0
   204f4:	ldr	r4, [r3, #40]	; 0x28
   204f8:	cmp	r4, #0
   204fc:	ldrne	r5, [pc, #572]	; 20740 <__flatcc_fb_gen_c_verifier@@Base+0x32c>
   20500:	bne	20514 <__flatcc_fb_gen_c_verifier@@Base+0x100>
   20504:	b	2054c <__flatcc_fb_gen_c_verifier@@Base+0x138>
   20508:	ldr	r4, [r4]
   2050c:	cmp	r4, #0
   20510:	beq	2054c <__flatcc_fb_gen_c_verifier@@Base+0x138>
   20514:	ldrh	r3, [r4, #8]
   20518:	cmp	r3, #0
   2051c:	bne	20508 <__flatcc_fb_gen_c_verifier@@Base+0xf4>
   20520:	mov	r1, r4
   20524:	ldr	r0, [r4, #12]
   20528:	add	r2, sp, #20
   2052c:	bl	170c4 <__flatcc_fb_scoped_symbol_name@@Base>
   20530:	add	r2, sp, #20
   20534:	mov	r1, r5
   20538:	ldr	r0, [r6, #204]	; 0xcc
   2053c:	bl	14094 <fprintf@plt>
   20540:	ldr	r4, [r4]
   20544:	cmp	r4, #0
   20548:	bne	20514 <__flatcc_fb_gen_c_verifier@@Base+0x100>
   2054c:	ldr	r1, [r6, #204]	; 0xcc
   20550:	mov	r0, #10
   20554:	bl	140f4 <fputc@plt>
   20558:	ldr	r3, [r6, #208]	; 0xd0
   2055c:	ldr	r5, [r3, #40]	; 0x28
   20560:	cmp	r5, #0
   20564:	addne	r4, r6, #204	; 0xcc
   20568:	bne	2057c <__flatcc_fb_gen_c_verifier@@Base+0x168>
   2056c:	b	206d4 <__flatcc_fb_gen_c_verifier@@Base+0x2c0>
   20570:	ldr	r5, [r5]
   20574:	cmp	r5, #0
   20578:	beq	205a0 <__flatcc_fb_gen_c_verifier@@Base+0x18c>
   2057c:	ldrh	r3, [r5, #8]
   20580:	cmp	r3, #4
   20584:	bne	20570 <__flatcc_fb_gen_c_verifier@@Base+0x15c>
   20588:	mov	r1, r5
   2058c:	mov	r0, r4
   20590:	bl	20220 <__flatcc_fb_gen_c_builder@@Base+0x12f8>
   20594:	ldr	r5, [r5]
   20598:	cmp	r5, #0
   2059c:	bne	2057c <__flatcc_fb_gen_c_verifier@@Base+0x168>
   205a0:	ldr	r3, [r6, #208]	; 0xd0
   205a4:	ldr	r4, [r3, #40]	; 0x28
   205a8:	cmp	r4, #0
   205ac:	beq	206d4 <__flatcc_fb_gen_c_verifier@@Base+0x2c0>
   205b0:	ldr	fp, [pc, #396]	; 20744 <__flatcc_fb_gen_c_verifier@@Base+0x330>
   205b4:	ldr	sl, [pc, #396]	; 20748 <__flatcc_fb_gen_c_verifier@@Base+0x334>
   205b8:	mov	r7, #220	; 0xdc
   205bc:	b	205cc <__flatcc_fb_gen_c_verifier@@Base+0x1b8>
   205c0:	ldr	r4, [r4]
   205c4:	cmp	r4, #0
   205c8:	beq	20690 <__flatcc_fb_gen_c_verifier@@Base+0x27c>
   205cc:	ldrh	r3, [r4, #8]
   205d0:	cmp	r3, #1
   205d4:	bne	205c0 <__flatcc_fb_gen_c_verifier@@Base+0x1ac>
   205d8:	mov	r2, r7
   205dc:	mov	r1, r5
   205e0:	add	r0, sp, #20
   205e4:	bl	140ac <memset@plt>
   205e8:	mov	r1, r4
   205ec:	ldr	r0, [r4, #12]
   205f0:	add	r2, sp, #20
   205f4:	bl	170c4 <__flatcc_fb_scoped_symbol_name@@Base>
   205f8:	ldrh	r2, [r4, #104]	; 0x68
   205fc:	ldr	r0, [r6, #204]	; 0xcc
   20600:	add	r3, sp, #20
   20604:	str	r2, [sp, #8]
   20608:	ldrd	r8, [r4, #112]	; 0x70
   2060c:	mov	r2, r3
   20610:	mov	r1, fp
   20614:	strd	r8, [sp]
   20618:	bl	14094 <fprintf@plt>
   2061c:	ldrh	r2, [r4, #104]	; 0x68
   20620:	ldr	r0, [r6, #204]	; 0xcc
   20624:	add	r3, sp, #20
   20628:	str	r2, [sp, #8]
   2062c:	ldrd	r8, [r4, #112]	; 0x70
   20630:	mov	r2, r3
   20634:	mov	r1, sl
   20638:	strd	r8, [sp]
   2063c:	bl	14094 <fprintf@plt>
   20640:	ldrh	r2, [r4, #104]	; 0x68
   20644:	ldr	r0, [r6, #204]	; 0xcc
   20648:	mov	r3, r6
   2064c:	str	r2, [sp, #8]
   20650:	ldrd	r8, [r4, #112]	; 0x70
   20654:	add	r2, sp, #20
   20658:	ldr	r1, [pc, #236]	; 2074c <__flatcc_fb_gen_c_verifier@@Base+0x338>
   2065c:	strd	r8, [sp]
   20660:	bl	14094 <fprintf@plt>
   20664:	ldrh	r3, [r4, #104]	; 0x68
   20668:	ldr	r0, [r6, #204]	; 0xcc
   2066c:	add	r2, sp, #20
   20670:	str	r3, [sp, #8]
   20674:	ldrd	r8, [r4, #112]	; 0x70
   20678:	ldr	r1, [pc, #208]	; 20750 <__flatcc_fb_gen_c_verifier@@Base+0x33c>
   2067c:	strd	r8, [sp]
   20680:	bl	14094 <fprintf@plt>
   20684:	ldr	r4, [r4]
   20688:	cmp	r4, #0
   2068c:	bne	205cc <__flatcc_fb_gen_c_verifier@@Base+0x1b8>
   20690:	ldr	r3, [r6, #208]	; 0xd0
   20694:	ldr	r4, [r3, #40]	; 0x28
   20698:	cmp	r4, #0
   2069c:	bne	206b0 <__flatcc_fb_gen_c_verifier@@Base+0x29c>
   206a0:	b	206d4 <__flatcc_fb_gen_c_verifier@@Base+0x2c0>
   206a4:	ldr	r4, [r4]
   206a8:	cmp	r4, #0
   206ac:	beq	206d4 <__flatcc_fb_gen_c_verifier@@Base+0x2c0>
   206b0:	ldrh	r3, [r4, #8]
   206b4:	cmp	r3, #0
   206b8:	bne	206a4 <__flatcc_fb_gen_c_verifier@@Base+0x290>
   206bc:	mov	r1, r4
   206c0:	mov	r0, r6
   206c4:	bl	1fd14 <__flatcc_fb_gen_c_builder@@Base+0xdec>
   206c8:	ldr	r4, [r4]
   206cc:	cmp	r4, #0
   206d0:	bne	206b0 <__flatcc_fb_gen_c_verifier@@Base+0x29c>
   206d4:	ldr	r3, [r6, #212]	; 0xd4
   206d8:	ldr	r0, [r6, #204]	; 0xcc
   206dc:	ldr	r3, [r3, #140]	; 0x8c
   206e0:	cmp	r3, #0
   206e4:	beq	20700 <__flatcc_fb_gen_c_verifier@@Base+0x2ec>
   206e8:	mov	r3, r0
   206ec:	mov	r2, #36	; 0x24
   206f0:	mov	r1, #1
   206f4:	ldr	r0, [pc, #88]	; 20754 <__flatcc_fb_gen_c_verifier@@Base+0x340>
   206f8:	bl	1401c <fwrite@plt>
   206fc:	ldr	r0, [r6, #204]	; 0xcc
   20700:	ldr	r3, [r6, #208]	; 0xd0
   20704:	ldr	r1, [pc, #76]	; 20758 <__flatcc_fb_gen_c_verifier@@Base+0x344>
   20708:	ldr	r2, [r3, #164]	; 0xa4
   2070c:	bl	14094 <fprintf@plt>
   20710:	mov	r0, #0
   20714:	add	sp, sp, #244	; 0xf4
   20718:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2071c:	strdeq	r6, [r5], -r4
   20720:	ldrdeq	r5, [r4], -r4
   20724:	andeq	r5, r5, r8, asr #23
   20728:	andeq	r5, r5, r0, ror #23
   2072c:			; <UNDEFINED> instruction: 0x0004b9b0
   20730:	andeq	r6, r5, r4, lsr #14
   20734:	andeq	r4, r4, r0, lsr #1
   20738:	andeq	r6, r5, ip, asr #14
   2073c:	andeq	r5, r4, r8, ror #17
   20740:	andeq	r6, r5, r8, asr r7
   20744:	andeq	r6, r5, r0, lsr #15
   20748:	andeq	r6, r5, ip, lsr r8
   2074c:	andeq	r6, r5, r0, ror #17
   20750:	muleq	r5, r8, r9
   20754:	andeq	fp, r4, ip, asr #14
   20758:	andeq	r6, r5, r8, asr #20
   2075c:	push	{r1, r2, r3}
   20760:	ldr	r3, [pc, #216]	; 20840 <__flatcc_fb_gen_c_verifier@@Base+0x42c>
   20764:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   20768:	sub	sp, sp, #12
   2076c:	ldrb	r1, [r3]
   20770:	ldr	r2, [r0, #212]	; 0xd4
   20774:	mov	r5, r0
   20778:	cmp	r1, #0
   2077c:	ldr	sl, [sp, #44]	; 0x2c
   20780:	ldr	r4, [r0, #220]	; 0xdc
   20784:	ldr	r6, [r2, #176]	; 0xb0
   20788:	beq	2082c <__flatcc_fb_gen_c_verifier@@Base+0x418>
   2078c:	ldrb	r3, [sl]
   20790:	cmp	r3, #0
   20794:	beq	20810 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   20798:	mul	r6, r6, r4
   2079c:	cmp	r6, #64	; 0x40
   207a0:	ble	207e4 <__flatcc_fb_gen_c_verifier@@Base+0x3d0>
   207a4:	ldr	r9, [pc, #148]	; 20840 <__flatcc_fb_gen_c_verifier@@Base+0x42c>
   207a8:	ldr	r8, [pc, #148]	; 20844 <__flatcc_fb_gen_c_verifier@@Base+0x430>
   207ac:	mov	r4, r6
   207b0:	mov	r7, #64	; 0x40
   207b4:	sub	r4, r4, #64	; 0x40
   207b8:	mov	r3, r9
   207bc:	mov	r2, r7
   207c0:	mov	r1, r8
   207c4:	ldr	r0, [r5, #204]	; 0xcc
   207c8:	bl	14094 <fprintf@plt>
   207cc:	cmp	r4, #64	; 0x40
   207d0:	bgt	207b4 <__flatcc_fb_gen_c_verifier@@Base+0x3a0>
   207d4:	sub	r3, r6, #65	; 0x41
   207d8:	bic	r3, r3, #63	; 0x3f
   207dc:	sub	r6, r6, #64	; 0x40
   207e0:	sub	r6, r6, r3
   207e4:	mov	r2, r6
   207e8:	ldr	r3, [pc, #80]	; 20840 <__flatcc_fb_gen_c_verifier@@Base+0x42c>
   207ec:	ldr	r1, [pc, #80]	; 20844 <__flatcc_fb_gen_c_verifier@@Base+0x430>
   207f0:	ldr	r0, [r5, #204]	; 0xcc
   207f4:	bl	14094 <fprintf@plt>
   207f8:	add	r3, sp, #48	; 0x30
   207fc:	mov	r1, sl
   20800:	mov	r2, r3
   20804:	ldr	r0, [r5, #204]	; 0xcc
   20808:	str	r3, [sp, #4]
   2080c:	bl	140e8 <vfprintf@plt>
   20810:	ldr	r1, [r5, #204]	; 0xcc
   20814:	mov	r0, #10
   20818:	bl	140f4 <fputc@plt>
   2081c:	add	sp, sp, #12
   20820:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   20824:	add	sp, sp, #12
   20828:	bx	lr
   2082c:	mov	r0, r3
   20830:	mov	r2, #64	; 0x40
   20834:	mov	r1, #32
   20838:	bl	140ac <memset@plt>
   2083c:	b	2078c <__flatcc_fb_gen_c_verifier@@Base+0x378>
   20840:	strheq	pc, [r6], -r4	; <UNPREDICTABLE>
   20844:	andeq	sp, r4, r4, asr r2
   20848:	ldr	r1, [pc]	; 20850 <__flatcc_fb_gen_c_verifier@@Base+0x43c>
   2084c:	b	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   20850:	andeq	r6, r5, r8, lsl #24
   20854:	ldr	r1, [pc]	; 2085c <__flatcc_fb_gen_c_verifier@@Base+0x448>
   20858:	b	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   2085c:	andeq	r6, r5, ip, lsl ip
   20860:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20864:	sub	r7, r3, r2
   20868:	add	r7, r7, #1
   2086c:	sub	sp, sp, #44	; 0x2c
   20870:	add	r7, r7, r7, lsr #31
   20874:	str	r2, [sp, #24]
   20878:	add	r7, r2, r7, asr #1
   2087c:	ldr	r2, [sp, #80]	; 0x50
   20880:	str	r3, [sp, #28]
   20884:	ldr	r3, [r1]
   20888:	str	r1, [sp, #20]
   2088c:	str	r2, [sp, #32]
   20890:	mov	r1, r2
   20894:	lsl	r2, r7, #4
   20898:	str	r2, [sp, #36]	; 0x24
   2089c:	add	r2, r3, r2
   208a0:	mov	r6, r0
   208a4:	ldr	r8, [r2, #4]
   208a8:	ldr	r2, [sp, #84]	; 0x54
   208ac:	cmp	r1, r8
   208b0:	str	r2, [sp, #16]
   208b4:	bgt	20a08 <__flatcc_fb_gen_c_verifier@@Base+0x5f4>
   208b8:	sub	r8, r8, r1
   208bc:	cmp	r8, #8
   208c0:	movge	r8, #8
   208c4:	ldr	r9, [r3, r7, lsl #4]
   208c8:	cmp	r8, #0
   208cc:	add	r9, r9, r1
   208d0:	beq	20bac <__flatcc_fb_gen_c_verifier@@Base+0x798>
   208d4:	rsb	ip, r8, #8
   208d8:	add	r2, r9, r8
   208dc:	lsl	ip, ip, #3
   208e0:	mov	r3, ip
   208e4:	mov	sl, #0
   208e8:	mov	fp, #0
   208ec:	ldrb	r0, [r2, #-1]!
   208f0:	sub	r1, r3, #32
   208f4:	lsl	r5, r0, r1
   208f8:	rsb	r1, r3, #32
   208fc:	lsl	r4, r0, r3
   20900:	orr	r5, r5, r0, lsr r1
   20904:	add	r3, r3, #8
   20908:	cmp	r3, #64	; 0x40
   2090c:	orr	sl, sl, r4
   20910:	orr	fp, fp, r5
   20914:	bne	208ec <__flatcc_fb_gen_c_verifier@@Base+0x4d8>
   20918:	cmp	r8, #8
   2091c:	bne	20b88 <__flatcc_fb_gen_c_verifier@@Base+0x774>
   20920:	mov	r3, fp
   20924:	stm	sp, {r8, r9}
   20928:	mov	r2, sl
   2092c:	ldr	r1, [pc, #792]	; 20c4c <__flatcc_fb_gen_c_verifier@@Base+0x838>
   20930:	mov	r0, r6
   20934:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   20938:	ldr	r3, [r6, #220]	; 0xdc
   2093c:	add	r3, r3, #1
   20940:	str	r3, [r6, #220]	; 0xdc
   20944:	ldr	r3, [sp, #24]
   20948:	cmp	r3, r7
   2094c:	bne	20a50 <__flatcc_fb_gen_c_verifier@@Base+0x63c>
   20950:	ldr	r0, [sp, #20]
   20954:	ldr	r3, [sp, #36]	; 0x24
   20958:	ldr	r2, [r0]
   2095c:	ldr	r1, [r0, #12]
   20960:	add	r2, r2, r3
   20964:	ldr	r3, [r2, #12]
   20968:	ldr	r2, [r2, #8]
   2096c:	str	r8, [sp]
   20970:	ldr	r4, [r0, #4]
   20974:	mov	r0, r6
   20978:	blx	r4
   2097c:	ldr	r3, [sp, #16]
   20980:	cmp	r3, #0
   20984:	ble	20bd4 <__flatcc_fb_gen_c_verifier@@Base+0x7c0>
   20988:	mov	r2, r3
   2098c:	ldr	r1, [pc, #700]	; 20c50 <__flatcc_fb_gen_c_verifier@@Base+0x83c>
   20990:	mov	r0, r6
   20994:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   20998:	ldr	r3, [r6, #220]	; 0xdc
   2099c:	cmp	r3, #0
   209a0:	beq	20c10 <__flatcc_fb_gen_c_verifier@@Base+0x7fc>
   209a4:	sub	r3, r3, #1
   209a8:	str	r3, [r6, #220]	; 0xdc
   209ac:	ldr	r1, [pc, #672]	; 20c54 <__flatcc_fb_gen_c_verifier@@Base+0x840>
   209b0:	mov	r0, r6
   209b4:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   209b8:	ldr	r3, [r6, #220]	; 0xdc
   209bc:	cmp	r3, #0
   209c0:	beq	20c38 <__flatcc_fb_gen_c_verifier@@Base+0x824>
   209c4:	sub	r3, r3, #1
   209c8:	str	r3, [r6, #220]	; 0xdc
   209cc:	mov	r2, r8
   209d0:	mov	r3, r9
   209d4:	ldr	r1, [pc, #636]	; 20c58 <__flatcc_fb_gen_c_verifier@@Base+0x844>
   209d8:	mov	r0, r6
   209dc:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   209e0:	ldr	r3, [r6, #220]	; 0xdc
   209e4:	ldr	r2, [sp, #16]
   209e8:	add	r3, r3, #1
   209ec:	cmp	r2, #0
   209f0:	str	r3, [r6, #220]	; 0xdc
   209f4:	ble	20bc0 <__flatcc_fb_gen_c_verifier@@Base+0x7ac>
   209f8:	ldr	r1, [pc, #592]	; 20c50 <__flatcc_fb_gen_c_verifier@@Base+0x83c>
   209fc:	mov	r0, r6
   20a00:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   20a04:	b	20ad8 <__flatcc_fb_gen_c_verifier@@Base+0x6c4>
   20a08:	mov	r2, #0
   20a0c:	mov	r3, #0
   20a10:	mov	r8, #0
   20a14:	mov	sl, r2
   20a18:	mov	fp, r3
   20a1c:	mov	r9, r8
   20a20:	str	r9, [sp, #12]
   20a24:	str	r8, [sp, #8]
   20a28:	strd	sl, [sp]
   20a2c:	ldr	r1, [pc, #552]	; 20c5c <__flatcc_fb_gen_c_verifier@@Base+0x848>
   20a30:	mov	r0, r6
   20a34:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   20a38:	ldr	r3, [r6, #220]	; 0xdc
   20a3c:	add	r3, r3, #1
   20a40:	str	r3, [r6, #220]	; 0xdc
   20a44:	ldr	r3, [sp, #24]
   20a48:	cmp	r3, r7
   20a4c:	beq	20950 <__flatcc_fb_gen_c_verifier@@Base+0x53c>
   20a50:	ldr	r3, [sp, #28]
   20a54:	cmp	r3, r7
   20a58:	beq	20b08 <__flatcc_fb_gen_c_verifier@@Base+0x6f4>
   20a5c:	ldr	r3, [sp, #16]
   20a60:	mov	r2, r7
   20a64:	str	r3, [sp, #4]
   20a68:	ldr	r3, [sp, #32]
   20a6c:	ldr	r1, [sp, #20]
   20a70:	str	r3, [sp]
   20a74:	mov	r0, r6
   20a78:	ldr	r3, [sp, #28]
   20a7c:	bl	20860 <__flatcc_fb_gen_c_verifier@@Base+0x44c>
   20a80:	ldr	r3, [r6, #220]	; 0xdc
   20a84:	cmp	r3, #0
   20a88:	beq	20be8 <__flatcc_fb_gen_c_verifier@@Base+0x7d4>
   20a8c:	sub	r3, r3, #1
   20a90:	str	r3, [r6, #220]	; 0xdc
   20a94:	mov	r2, r8
   20a98:	mov	r3, r9
   20a9c:	ldr	r1, [pc, #436]	; 20c58 <__flatcc_fb_gen_c_verifier@@Base+0x844>
   20aa0:	mov	r0, r6
   20aa4:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   20aa8:	ldr	r3, [sp, #16]
   20aac:	ldr	r0, [r6, #220]	; 0xdc
   20ab0:	str	r3, [sp, #4]
   20ab4:	ldr	r3, [sp, #32]
   20ab8:	add	r0, r0, #1
   20abc:	str	r3, [sp]
   20ac0:	ldr	r2, [sp, #24]
   20ac4:	str	r0, [r6, #220]	; 0xdc
   20ac8:	sub	r3, r7, #1
   20acc:	ldr	r1, [sp, #20]
   20ad0:	mov	r0, r6
   20ad4:	bl	20860 <__flatcc_fb_gen_c_verifier@@Base+0x44c>
   20ad8:	ldr	r3, [r6, #220]	; 0xdc
   20adc:	cmp	r3, #0
   20ae0:	beq	20bfc <__flatcc_fb_gen_c_verifier@@Base+0x7e8>
   20ae4:	sub	r3, r3, #1
   20ae8:	str	r3, [r6, #220]	; 0xdc
   20aec:	mov	r2, r8
   20af0:	mov	r3, r9
   20af4:	mov	r0, r6
   20af8:	ldr	r1, [pc, #352]	; 20c60 <__flatcc_fb_gen_c_verifier@@Base+0x84c>
   20afc:	add	sp, sp, #44	; 0x2c
   20b00:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20b04:	b	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   20b08:	ldr	r0, [sp, #20]
   20b0c:	ldr	r3, [sp, #36]	; 0x24
   20b10:	ldr	r2, [r0]
   20b14:	ldr	r1, [r0, #12]
   20b18:	add	r2, r2, r3
   20b1c:	ldr	r3, [r2, #12]
   20b20:	ldr	r2, [r2, #8]
   20b24:	str	r8, [sp]
   20b28:	ldr	r4, [r0, #4]
   20b2c:	mov	r0, r6
   20b30:	blx	r4
   20b34:	ldr	r3, [sp, #16]
   20b38:	cmp	r3, #0
   20b3c:	ble	20b74 <__flatcc_fb_gen_c_verifier@@Base+0x760>
   20b40:	mov	r2, r3
   20b44:	ldr	r1, [pc, #260]	; 20c50 <__flatcc_fb_gen_c_verifier@@Base+0x83c>
   20b48:	mov	r0, r6
   20b4c:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   20b50:	ldr	r3, [r6, #220]	; 0xdc
   20b54:	cmp	r3, #0
   20b58:	beq	20c24 <__flatcc_fb_gen_c_verifier@@Base+0x810>
   20b5c:	sub	r3, r3, #1
   20b60:	str	r3, [r6, #220]	; 0xdc
   20b64:	ldr	r1, [pc, #232]	; 20c54 <__flatcc_fb_gen_c_verifier@@Base+0x840>
   20b68:	mov	r0, r6
   20b6c:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   20b70:	b	20a80 <__flatcc_fb_gen_c_verifier@@Base+0x66c>
   20b74:	ldr	r3, [sp, #20]
   20b78:	mov	r0, r6
   20b7c:	ldr	r3, [r3, #8]
   20b80:	blx	r3
   20b84:	b	20b50 <__flatcc_fb_gen_c_verifier@@Base+0x73c>
   20b88:	mov	r3, #1
   20b8c:	sub	r2, ip, #32
   20b90:	lsl	r0, r3, ip
   20b94:	lsl	r1, r3, r2
   20b98:	rsb	r2, ip, #32
   20b9c:	orr	r1, r1, r3, lsr r2
   20ba0:	rsbs	r2, r0, #0
   20ba4:	rsc	r3, r1, #0
   20ba8:	b	20a20 <__flatcc_fb_gen_c_verifier@@Base+0x60c>
   20bac:	mov	r2, #0
   20bb0:	mov	r3, #0
   20bb4:	mov	sl, r2
   20bb8:	mov	fp, r3
   20bbc:	b	20a20 <__flatcc_fb_gen_c_verifier@@Base+0x60c>
   20bc0:	ldr	r3, [sp, #20]
   20bc4:	mov	r0, r6
   20bc8:	ldr	r3, [r3, #8]
   20bcc:	blx	r3
   20bd0:	b	20ad8 <__flatcc_fb_gen_c_verifier@@Base+0x6c4>
   20bd4:	ldr	r3, [sp, #20]
   20bd8:	mov	r0, r6
   20bdc:	ldr	r3, [r3, #8]
   20be0:	blx	r3
   20be4:	b	20998 <__flatcc_fb_gen_c_verifier@@Base+0x584>
   20be8:	ldr	r3, [pc, #116]	; 20c64 <__flatcc_fb_gen_c_verifier@@Base+0x850>
   20bec:	ldr	r2, [pc, #116]	; 20c68 <__flatcc_fb_gen_c_verifier@@Base+0x854>
   20bf0:	ldr	r1, [pc, #116]	; 20c6c <__flatcc_fb_gen_c_verifier@@Base+0x858>
   20bf4:	ldr	r0, [pc, #116]	; 20c70 <__flatcc_fb_gen_c_verifier@@Base+0x85c>
   20bf8:	bl	14148 <__assert_fail@plt>
   20bfc:	ldr	r3, [pc, #96]	; 20c64 <__flatcc_fb_gen_c_verifier@@Base+0x850>
   20c00:	ldr	r2, [pc, #108]	; 20c74 <__flatcc_fb_gen_c_verifier@@Base+0x860>
   20c04:	ldr	r1, [pc, #96]	; 20c6c <__flatcc_fb_gen_c_verifier@@Base+0x858>
   20c08:	ldr	r0, [pc, #96]	; 20c70 <__flatcc_fb_gen_c_verifier@@Base+0x85c>
   20c0c:	bl	14148 <__assert_fail@plt>
   20c10:	ldr	r3, [pc, #76]	; 20c64 <__flatcc_fb_gen_c_verifier@@Base+0x850>
   20c14:	mov	r2, #888	; 0x378
   20c18:	ldr	r1, [pc, #76]	; 20c6c <__flatcc_fb_gen_c_verifier@@Base+0x858>
   20c1c:	ldr	r0, [pc, #76]	; 20c70 <__flatcc_fb_gen_c_verifier@@Base+0x85c>
   20c20:	bl	14148 <__assert_fail@plt>
   20c24:	ldr	r3, [pc, #56]	; 20c64 <__flatcc_fb_gen_c_verifier@@Base+0x850>
   20c28:	ldr	r2, [pc, #72]	; 20c78 <__flatcc_fb_gen_c_verifier@@Base+0x864>
   20c2c:	ldr	r1, [pc, #56]	; 20c6c <__flatcc_fb_gen_c_verifier@@Base+0x858>
   20c30:	ldr	r0, [pc, #56]	; 20c70 <__flatcc_fb_gen_c_verifier@@Base+0x85c>
   20c34:	bl	14148 <__assert_fail@plt>
   20c38:	ldr	r3, [pc, #36]	; 20c64 <__flatcc_fb_gen_c_verifier@@Base+0x850>
   20c3c:	ldr	r2, [pc, #56]	; 20c7c <__flatcc_fb_gen_c_verifier@@Base+0x868>
   20c40:	ldr	r1, [pc, #36]	; 20c6c <__flatcc_fb_gen_c_verifier@@Base+0x858>
   20c44:	ldr	r0, [pc, #36]	; 20c70 <__flatcc_fb_gen_c_verifier@@Base+0x85c>
   20c48:	bl	14148 <__assert_fail@plt>
   20c4c:	andeq	r6, r5, r8, asr ip
   20c50:	andeq	r6, r5, r4, lsr #25
   20c54:	andeq	r6, r5, r8, lsl sp
   20c58:	andeq	r6, r5, ip, lsl sp
   20c5c:	andeq	r6, r5, r8, ror ip
   20c60:	andeq	r6, r5, r4, lsr sp
   20c64:	andeq	r6, r5, r4, ror #20
   20c68:	andeq	r0, r0, fp, lsl #7
   20c6c:			; <UNDEFINED> instruction: 0x00056cb4
   20c70:	andeq	r6, r5, ip, lsl #26
   20c74:	andeq	r0, r0, lr, lsl #7
   20c78:	andeq	r0, r0, r7, lsl #7
   20c7c:	andeq	r0, r0, r9, ror r3
   20c80:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20c84:	sub	sp, sp, #124	; 0x7c
   20c88:	str	r1, [sp, #72]	; 0x48
   20c8c:	ldr	r1, [r1]
   20c90:	str	r2, [sp, #48]	; 0x30
   20c94:	add	r2, r1, r2, lsl #4
   20c98:	ldr	fp, [sp, #160]	; 0xa0
   20c9c:	str	r2, [sp, #84]	; 0x54
   20ca0:	ldr	r2, [r2, #4]
   20ca4:	str	r1, [sp, #76]	; 0x4c
   20ca8:	add	r1, fp, #7
   20cac:	cmp	r1, r2
   20cb0:	str	r1, [sp, #80]	; 0x50
   20cb4:	str	r0, [sp, #68]	; 0x44
   20cb8:	str	r3, [sp, #64]	; 0x40
   20cbc:	bge	21184 <__flatcc_fb_gen_c_verifier@@Base+0xd70>
   20cc0:	sub	r2, r2, fp
   20cc4:	cmp	r2, #8
   20cc8:	beq	21184 <__flatcc_fb_gen_c_verifier@@Base+0xd70>
   20ccc:	ldr	r2, [sp, #48]	; 0x30
   20cd0:	ldr	r3, [sp, #64]	; 0x40
   20cd4:	sub	r3, r3, r2
   20cd8:	add	r3, r3, r3, lsr #31
   20cdc:	add	r3, r2, r3, asr #1
   20ce0:	cmp	r2, r3
   20ce4:	str	r3, [sp, #52]	; 0x34
   20ce8:	bge	20eb8 <__flatcc_fb_gen_c_verifier@@Base+0xaa4>
   20cec:	mov	r1, #0
   20cf0:	mov	r0, #0
   20cf4:	ldr	r2, [sp, #76]	; 0x4c
   20cf8:	strd	r0, [sp, #24]
   20cfc:	strd	r0, [sp, #32]
   20d00:	mov	lr, fp
   20d04:	strd	r8, [sp, #88]	; 0x58
   20d08:	add	r1, r2, r3, lsl #4
   20d0c:	mov	sl, #0
   20d10:	mov	fp, #0
   20d14:	mov	r9, r3
   20d18:	strd	r4, [sp, #16]
   20d1c:	ldr	r3, [r1, #-12]
   20d20:	cmp	lr, r3
   20d24:	bgt	20dfc <__flatcc_fb_gen_c_verifier@@Base+0x9e8>
   20d28:	sub	r3, r3, lr
   20d2c:	cmp	r3, #8
   20d30:	movge	r3, #8
   20d34:	cmp	r3, #0
   20d38:	beq	21334 <__flatcc_fb_gen_c_verifier@@Base+0xf20>
   20d3c:	rsb	r2, r3, #8
   20d40:	ldr	ip, [r1, #-16]
   20d44:	add	r3, r3, lr
   20d48:	str	r2, [sp, #24]
   20d4c:	add	ip, ip, r3
   20d50:	lsl	r0, r2, #3
   20d54:	mov	r3, #0
   20d58:	mov	r2, #0
   20d5c:	strd	r6, [sp, #56]	; 0x38
   20d60:	mov	r8, r2
   20d64:	mov	r7, lr
   20d68:	mov	lr, r1
   20d6c:	mov	r1, r9
   20d70:	mov	r9, r3
   20d74:	ldrb	r2, [ip, #-1]!
   20d78:	sub	r3, r0, #32
   20d7c:	lsl	r5, r2, r3
   20d80:	rsb	r3, r0, #32
   20d84:	lsl	r4, r2, r0
   20d88:	orr	r5, r5, r2, lsr r3
   20d8c:	add	r0, r0, #8
   20d90:	cmp	r0, #64	; 0x40
   20d94:	orr	r8, r8, r4
   20d98:	orr	r9, r9, r5
   20d9c:	bne	20d74 <__flatcc_fb_gen_c_verifier@@Base+0x960>
   20da0:	strd	r8, [sp, #32]
   20da4:	ldr	r3, [sp, #24]
   20da8:	mov	r9, r1
   20dac:	mov	r1, lr
   20db0:	mov	lr, r7
   20db4:	ldrd	r6, [sp, #56]	; 0x38
   20db8:	strd	r4, [sp, #16]
   20dbc:	lsl	r3, r3, #3
   20dc0:	sub	r2, r3, #32
   20dc4:	mov	r0, #1
   20dc8:	mov	ip, #1
   20dcc:	lsl	r2, r0, r2
   20dd0:	str	r2, [sp, #12]
   20dd4:	ldr	r0, [sp, #12]
   20dd8:	rsb	r2, r3, #32
   20ddc:	lsl	r3, ip, r3
   20de0:	orr	r2, r0, ip, lsr r2
   20de4:	str	r3, [sp, #8]
   20de8:	str	r2, [sp, #12]
   20dec:	ldrd	r2, [sp, #8]
   20df0:	rsbs	r2, r2, #0
   20df4:	rsc	r3, r3, #0
   20df8:	strd	r2, [sp, #24]
   20dfc:	ldr	r3, [r1, #4]
   20e00:	ldr	ip, [r1]
   20e04:	cmp	lr, r3
   20e08:	str	r3, [sp, #56]	; 0x38
   20e0c:	mov	r8, ip
   20e10:	bgt	20e74 <__flatcc_fb_gen_c_verifier@@Base+0xa60>
   20e14:	sub	r3, r3, lr
   20e18:	cmp	r3, #8
   20e1c:	movge	r3, #8
   20e20:	cmp	r3, #0
   20e24:	beq	21328 <__flatcc_fb_gen_c_verifier@@Base+0xf14>
   20e28:	rsb	r2, r3, #8
   20e2c:	ldrd	r4, [sp, #16]
   20e30:	add	r3, r3, lr
   20e34:	lsl	r0, r2, #3
   20e38:	add	ip, ip, r3
   20e3c:	mov	sl, #0
   20e40:	mov	fp, #0
   20e44:	ldrb	r2, [ip, #-1]!
   20e48:	sub	r3, r0, #32
   20e4c:	lsl	r7, r2, r3
   20e50:	rsb	r3, r0, #32
   20e54:	lsl	r6, r2, r0
   20e58:	orr	r7, r7, r2, lsr r3
   20e5c:	add	r0, r0, #8
   20e60:	cmp	r0, #64	; 0x40
   20e64:	orr	sl, sl, r6
   20e68:	orr	fp, fp, r7
   20e6c:	bne	20e44 <__flatcc_fb_gen_c_verifier@@Base+0xa30>
   20e70:	strd	r4, [sp, #16]
   20e74:	ldrd	r2, [sp, #32]
   20e78:	ldrd	r4, [sp, #24]
   20e7c:	eor	r2, r2, sl
   20e80:	eor	r3, r3, fp
   20e84:	and	r4, r4, r2
   20e88:	and	r5, r5, r3
   20e8c:	mov	r2, r4
   20e90:	mov	r3, r5
   20e94:	orrs	r3, r2, r3
   20e98:	bne	21248 <__flatcc_fb_gen_c_verifier@@Base+0xe34>
   20e9c:	ldr	r3, [sp, #48]	; 0x30
   20ea0:	sub	r9, r9, #1
   20ea4:	cmp	r3, r9
   20ea8:	sub	r1, r1, #16
   20eac:	bne	20d1c <__flatcc_fb_gen_c_verifier@@Base+0x908>
   20eb0:	ldrd	r8, [sp, #88]	; 0x58
   20eb4:	mov	fp, lr
   20eb8:	ldr	r3, [sp, #64]	; 0x40
   20ebc:	ldr	r2, [sp, #52]	; 0x34
   20ec0:	cmp	r3, r2
   20ec4:	movle	r3, r2
   20ec8:	ble	21054 <__flatcc_fb_gen_c_verifier@@Base+0xc40>
   20ecc:	ldr	r3, [sp, #76]	; 0x4c
   20ed0:	mov	r0, #0
   20ed4:	mov	r1, #0
   20ed8:	mov	r4, r0
   20edc:	mov	r5, r1
   20ee0:	add	ip, r3, r2, lsl #4
   20ee4:	strd	r0, [sp, #16]
   20ee8:	str	fp, [sp, #8]
   20eec:	ldr	lr, [ip, #4]
   20ef0:	ldr	r6, [sp, #8]
   20ef4:	cmp	r6, lr
   20ef8:	bgt	20fa4 <__flatcc_fb_gen_c_verifier@@Base+0xb90>
   20efc:	sub	lr, lr, r6
   20f00:	cmp	lr, #8
   20f04:	movge	lr, #8
   20f08:	cmp	lr, #0
   20f0c:	mov	r5, r6
   20f10:	beq	213b8 <__flatcc_fb_gen_c_verifier@@Base+0xfa4>
   20f14:	rsb	r6, lr, #8
   20f18:	ldr	r4, [ip]
   20f1c:	add	lr, lr, r5
   20f20:	add	fp, r4, lr
   20f24:	mov	sl, r6
   20f28:	lsl	lr, r6, #3
   20f2c:	mov	r4, #0
   20f30:	mov	r5, #0
   20f34:	ldrb	r6, [fp, #-1]!
   20f38:	sub	r7, lr, #32
   20f3c:	lsl	r9, r6, r7
   20f40:	rsb	r7, lr, #32
   20f44:	lsl	r8, r6, lr
   20f48:	orr	r9, r9, r6, lsr r7
   20f4c:	add	lr, lr, #8
   20f50:	cmp	lr, #64	; 0x40
   20f54:	orr	r4, r4, r8
   20f58:	orr	r5, r5, r9
   20f5c:	bne	20f34 <__flatcc_fb_gen_c_verifier@@Base+0xb20>
   20f60:	lsl	lr, sl, #3
   20f64:	sub	r6, lr, #32
   20f68:	mov	r7, #1
   20f6c:	mov	sl, #1
   20f70:	lsl	r6, r7, r6
   20f74:	str	r6, [sp, #44]	; 0x2c
   20f78:	ldr	r7, [sp, #44]	; 0x2c
   20f7c:	rsb	r6, lr, #32
   20f80:	lsl	lr, sl, lr
   20f84:	orr	r6, r7, sl, lsr r6
   20f88:	str	lr, [sp, #40]	; 0x28
   20f8c:	str	r6, [sp, #44]	; 0x2c
   20f90:	ldrd	r6, [sp, #40]	; 0x28
   20f94:	rsbs	r6, r6, #0
   20f98:	rsc	r7, r7, #0
   20f9c:	strd	r6, [sp, #16]
   20fa0:	ldr	r6, [sp, #8]
   20fa4:	ldr	lr, [ip, #20]
   20fa8:	cmp	r6, lr
   20fac:	bgt	2100c <__flatcc_fb_gen_c_verifier@@Base+0xbf8>
   20fb0:	sub	r1, lr, r6
   20fb4:	cmp	r1, #8
   20fb8:	movge	r1, #8
   20fbc:	cmp	r1, #0
   20fc0:	beq	213ac <__flatcc_fb_gen_c_verifier@@Base+0xf98>
   20fc4:	ldr	r0, [ip, #16]
   20fc8:	rsb	lr, r1, #8
   20fcc:	add	r1, r1, r6
   20fd0:	add	fp, r0, r1
   20fd4:	lsl	lr, lr, #3
   20fd8:	mov	r0, #0
   20fdc:	mov	r1, #0
   20fe0:	ldrb	r6, [fp, #-1]!
   20fe4:	sub	r7, lr, #32
   20fe8:	lsl	r3, r6, r7
   20fec:	rsb	r7, lr, #32
   20ff0:	lsl	r2, r6, lr
   20ff4:	orr	r3, r3, r6, lsr r7
   20ff8:	add	lr, lr, #8
   20ffc:	cmp	lr, #64	; 0x40
   21000:	orr	r0, r0, r2
   21004:	orr	r1, r1, r3
   21008:	bne	20fe0 <__flatcc_fb_gen_c_verifier@@Base+0xbcc>
   2100c:	ldrd	sl, [sp, #16]
   21010:	eor	r6, r4, r0
   21014:	eor	r7, r5, r1
   21018:	and	sl, sl, r6
   2101c:	and	fp, fp, r7
   21020:	mov	r6, sl
   21024:	mov	r7, fp
   21028:	orrs	lr, r6, r7
   2102c:	bne	214a0 <__flatcc_fb_gen_c_verifier@@Base+0x108c>
   21030:	ldr	lr, [sp, #52]	; 0x34
   21034:	ldr	r6, [sp, #64]	; 0x40
   21038:	add	lr, lr, #1
   2103c:	cmp	r6, lr
   21040:	str	lr, [sp, #52]	; 0x34
   21044:	add	ip, ip, #16
   21048:	bne	20eec <__flatcc_fb_gen_c_verifier@@Base+0xad8>
   2104c:	ldr	fp, [sp, #8]
   21050:	mov	r3, lr
   21054:	add	r5, r3, #1
   21058:	ldr	r4, [sp, #48]	; 0x30
   2105c:	cmp	r4, r5
   21060:	bge	21618 <__flatcc_fb_gen_c_verifier@@Base+0x1204>
   21064:	ldr	r3, [sp, #84]	; 0x54
   21068:	ldr	r1, [sp, #80]	; 0x50
   2106c:	ldr	r2, [r3, #4]
   21070:	cmp	r1, r2
   21074:	bge	21084 <__flatcc_fb_gen_c_verifier@@Base+0xc70>
   21078:	sub	r0, r2, fp
   2107c:	cmp	r0, #8
   21080:	bgt	213c8 <__flatcc_fb_gen_c_verifier@@Base+0xfb4>
   21084:	add	r4, r4, #1
   21088:	cmp	r4, r5
   2108c:	add	r3, r3, #16
   21090:	bne	2106c <__flatcc_fb_gen_c_verifier@@Base+0xc58>
   21094:	ldr	sl, [pc, #1616]	; 216ec <__flatcc_fb_gen_c_verifier@@Base+0x12d8>
   21098:	mov	r8, r4
   2109c:	mov	r6, #0
   210a0:	ldr	r3, [sp, #48]	; 0x30
   210a4:	ldr	r2, [sp, #64]	; 0x40
   210a8:	cmp	r2, r5
   210ac:	cmpge	r4, r3
   210b0:	movgt	r9, #1
   210b4:	movle	r9, #0
   210b8:	ble	211ec <__flatcc_fb_gen_c_verifier@@Base+0xdd8>
   210bc:	ldr	r3, [sp, #72]	; 0x48
   210c0:	ldr	r2, [sp, #48]	; 0x30
   210c4:	mov	r1, r3
   210c8:	ldr	r7, [r3, #24]
   210cc:	add	r7, r7, #1
   210d0:	str	r7, [r3, #24]
   210d4:	str	r7, [sp, #4]
   210d8:	str	fp, [sp]
   210dc:	sub	r3, r4, #1
   210e0:	ldr	r0, [sp, #68]	; 0x44
   210e4:	bl	20860 <__flatcc_fb_gen_c_verifier@@Base+0x44c>
   210e8:	cmp	r9, #0
   210ec:	beq	211f4 <__flatcc_fb_gen_c_verifier@@Base+0xde0>
   210f0:	ldr	r9, [sp, #68]	; 0x44
   210f4:	mov	r2, r7
   210f8:	ldr	r1, [pc, #1520]	; 216f0 <__flatcc_fb_gen_c_verifier@@Base+0x12dc>
   210fc:	mov	r0, r9
   21100:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   21104:	ldr	r3, [r9, #220]	; 0xdc
   21108:	mov	r4, #0
   2110c:	str	r3, [r9, #228]	; 0xe4
   21110:	mov	r2, r7
   21114:	ldr	r1, [pc, #1496]	; 216f4 <__flatcc_fb_gen_c_verifier@@Base+0x12e0>
   21118:	mov	r0, r9
   2111c:	str	r4, [r9, #220]	; 0xdc
   21120:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   21124:	ldr	r2, [r9, #228]	; 0xe4
   21128:	ldr	r3, [sp, #64]	; 0x40
   2112c:	str	fp, [sp]
   21130:	ldr	r1, [sp, #72]	; 0x48
   21134:	mov	r0, r9
   21138:	str	r2, [r9, #220]	; 0xdc
   2113c:	mov	r2, r5
   21140:	bl	20c80 <__flatcc_fb_gen_c_verifier@@Base+0x86c>
   21144:	ldr	r3, [r9, #220]	; 0xdc
   21148:	mov	r2, r7
   2114c:	mov	r0, r9
   21150:	str	r3, [r9, #228]	; 0xe4
   21154:	ldr	r1, [pc, #1436]	; 216f8 <__flatcc_fb_gen_c_verifier@@Base+0x12e4>
   21158:	str	r4, [r9, #220]	; 0xdc
   2115c:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   21160:	ldr	r3, [r9, #228]	; 0xe4
   21164:	mov	r0, r9
   21168:	ldr	r1, [pc, #1420]	; 216fc <__flatcc_fb_gen_c_verifier@@Base+0x12e8>
   2116c:	str	r3, [r9, #220]	; 0xdc
   21170:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   21174:	cmp	r5, r8
   21178:	bgt	21214 <__flatcc_fb_gen_c_verifier@@Base+0xe00>
   2117c:	add	sp, sp, #124	; 0x7c
   21180:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21184:	ldr	r3, [sp, #48]	; 0x30
   21188:	ldr	r2, [sp, #64]	; 0x40
   2118c:	cmp	r3, r2
   21190:	beq	211c4 <__flatcc_fb_gen_c_verifier@@Base+0xdb0>
   21194:	add	r3, r3, #1
   21198:	cmp	r2, r3
   2119c:	bne	20ccc <__flatcc_fb_gen_c_verifier@@Base+0x8b8>
   211a0:	ldr	r3, [sp, #76]	; 0x4c
   211a4:	add	r3, r3, r2, lsl #4
   211a8:	ldr	r2, [sp, #80]	; 0x50
   211ac:	ldr	r3, [r3, #4]
   211b0:	cmp	r2, r3
   211b4:	bge	211c4 <__flatcc_fb_gen_c_verifier@@Base+0xdb0>
   211b8:	sub	r3, r3, fp
   211bc:	cmp	r3, #8
   211c0:	bne	20ccc <__flatcc_fb_gen_c_verifier@@Base+0x8b8>
   211c4:	mov	ip, #0
   211c8:	str	fp, [sp]
   211cc:	ldr	r3, [sp, #64]	; 0x40
   211d0:	ldr	r2, [sp, #48]	; 0x30
   211d4:	ldr	r1, [sp, #72]	; 0x48
   211d8:	ldr	r0, [sp, #68]	; 0x44
   211dc:	str	ip, [sp, #4]
   211e0:	bl	20860 <__flatcc_fb_gen_c_verifier@@Base+0x44c>
   211e4:	add	sp, sp, #124	; 0x7c
   211e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   211ec:	cmp	r4, r3
   211f0:	bgt	216a0 <__flatcc_fb_gen_c_verifier@@Base+0x128c>
   211f4:	ldr	r3, [sp, #64]	; 0x40
   211f8:	cmp	r3, r5
   211fc:	bge	21674 <__flatcc_fb_gen_c_verifier@@Base+0x1260>
   21200:	ldr	r3, [sp, #48]	; 0x30
   21204:	cmp	r4, r3
   21208:	ble	21630 <__flatcc_fb_gen_c_verifier@@Base+0x121c>
   2120c:	cmp	r5, r8
   21210:	ble	2117c <__flatcc_fb_gen_c_verifier@@Base+0xd68>
   21214:	ldr	r3, [sp, #68]	; 0x44
   21218:	ldr	r3, [r3, #220]	; 0xdc
   2121c:	cmp	r3, #0
   21220:	beq	2168c <__flatcc_fb_gen_c_verifier@@Base+0x1278>
   21224:	ldr	r0, [sp, #68]	; 0x44
   21228:	sub	r3, r3, #1
   2122c:	mov	r2, r6
   21230:	str	r3, [r0, #220]	; 0xdc
   21234:	ldr	r1, [pc, #1220]	; 21700 <__flatcc_fb_gen_c_verifier@@Base+0x12ec>
   21238:	mov	r3, sl
   2123c:	add	sp, sp, #124	; 0x7c
   21240:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21244:	b	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   21248:	ldr	r0, [sp, #56]	; 0x38
   2124c:	mov	ip, r8
   21250:	cmp	lr, r0
   21254:	mov	r8, r9
   21258:	mov	fp, lr
   2125c:	ble	2134c <__flatcc_fb_gen_c_verifier@@Base+0xf38>
   21260:	mov	r5, #0
   21264:	mov	r4, r5
   21268:	mov	r2, #0
   2126c:	mov	r3, #0
   21270:	ldr	r6, [sp, #68]	; 0x44
   21274:	ldr	r1, [pc, #1160]	; 21704 <__flatcc_fb_gen_c_verifier@@Base+0x12f0>
   21278:	mov	r0, r6
   2127c:	stm	sp, {r4, r5}
   21280:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   21284:	ldr	r3, [r6, #220]	; 0xdc
   21288:	ldr	r2, [sp, #48]	; 0x30
   2128c:	add	r3, r3, #1
   21290:	str	fp, [sp]
   21294:	ldr	r1, [sp, #72]	; 0x48
   21298:	str	r3, [r6, #220]	; 0xdc
   2129c:	mov	r0, r6
   212a0:	sub	r3, r8, #1
   212a4:	bl	20c80 <__flatcc_fb_gen_c_verifier@@Base+0x86c>
   212a8:	ldr	r3, [r6, #220]	; 0xdc
   212ac:	cmp	r3, #0
   212b0:	beq	216d8 <__flatcc_fb_gen_c_verifier@@Base+0x12c4>
   212b4:	ldr	r6, [sp, #68]	; 0x44
   212b8:	sub	r3, r3, #1
   212bc:	mov	r2, r4
   212c0:	str	r3, [r6, #220]	; 0xdc
   212c4:	ldr	r1, [pc, #1084]	; 21708 <__flatcc_fb_gen_c_verifier@@Base+0x12f4>
   212c8:	mov	r3, r5
   212cc:	mov	r0, r6
   212d0:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   212d4:	ldr	r0, [r6, #220]	; 0xdc
   212d8:	ldr	r3, [sp, #64]	; 0x40
   212dc:	add	r0, r0, #1
   212e0:	str	fp, [sp]
   212e4:	mov	r2, r8
   212e8:	str	r0, [r6, #220]	; 0xdc
   212ec:	ldr	r1, [sp, #72]	; 0x48
   212f0:	mov	r0, r6
   212f4:	bl	20c80 <__flatcc_fb_gen_c_verifier@@Base+0x86c>
   212f8:	ldr	r3, [r6, #220]	; 0xdc
   212fc:	cmp	r3, #0
   21300:	beq	216c4 <__flatcc_fb_gen_c_verifier@@Base+0x12b0>
   21304:	ldr	r0, [sp, #68]	; 0x44
   21308:	sub	r3, r3, #1
   2130c:	mov	r2, r4
   21310:	str	r3, [r0, #220]	; 0xdc
   21314:	ldr	r1, [pc, #1008]	; 2170c <__flatcc_fb_gen_c_verifier@@Base+0x12f8>
   21318:	mov	r3, r5
   2131c:	add	sp, sp, #124	; 0x7c
   21320:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21324:	b	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   21328:	mov	sl, #0
   2132c:	mov	fp, #0
   21330:	b	20e74 <__flatcc_fb_gen_c_verifier@@Base+0xa60>
   21334:	mov	r3, #0
   21338:	mov	r2, #0
   2133c:	strd	r2, [sp, #32]
   21340:	mov	r3, #8
   21344:	str	r3, [sp, #24]
   21348:	b	20dbc <__flatcc_fb_gen_c_verifier@@Base+0x9a8>
   2134c:	sub	r0, r0, fp
   21350:	cmp	r0, #8
   21354:	movlt	r4, r0
   21358:	movge	r4, #8
   2135c:	cmp	r4, #0
   21360:	add	r5, ip, fp
   21364:	beq	21268 <__flatcc_fb_gen_c_verifier@@Base+0xe54>
   21368:	rsb	ip, r4, #8
   2136c:	add	lr, r5, r4
   21370:	lsl	ip, ip, #3
   21374:	mov	r2, #0
   21378:	mov	r3, #0
   2137c:	ldrb	r6, [lr, #-1]!
   21380:	sub	r7, ip, #32
   21384:	lsl	r1, r6, r7
   21388:	rsb	r7, ip, #32
   2138c:	lsl	r0, r6, ip
   21390:	orr	r1, r1, r6, lsr r7
   21394:	add	ip, ip, #8
   21398:	cmp	ip, #64	; 0x40
   2139c:	orr	r2, r2, r0
   213a0:	orr	r3, r3, r1
   213a4:	bne	2137c <__flatcc_fb_gen_c_verifier@@Base+0xf68>
   213a8:	b	21270 <__flatcc_fb_gen_c_verifier@@Base+0xe5c>
   213ac:	mov	r0, #0
   213b0:	mov	r1, #0
   213b4:	b	2100c <__flatcc_fb_gen_c_verifier@@Base+0xbf8>
   213b8:	mov	r4, #0
   213bc:	mov	r5, #0
   213c0:	mov	sl, #8
   213c4:	b	20f60 <__flatcc_fb_gen_c_verifier@@Base+0xb4c>
   213c8:	ldr	r1, [sp, #48]	; 0x30
   213cc:	cmp	r1, r4
   213d0:	blt	214b0 <__flatcc_fb_gen_c_verifier@@Base+0x109c>
   213d4:	add	r8, fp, #8
   213d8:	cmp	fp, r2
   213dc:	ldr	sl, [r3]
   213e0:	movle	r7, #0
   213e4:	ble	214e4 <__flatcc_fb_gen_c_verifier@@Base+0x10d0>
   213e8:	ldr	r7, [sp, #68]	; 0x44
   213ec:	mov	r6, #0
   213f0:	mov	r3, #0
   213f4:	str	r6, [sp, #4]
   213f8:	str	r6, [sp]
   213fc:	mov	r2, #0
   21400:	ldr	r1, [pc, #776]	; 21710 <__flatcc_fb_gen_c_verifier@@Base+0x12fc>
   21404:	mov	r0, r7
   21408:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   2140c:	ldr	r3, [r7, #220]	; 0xdc
   21410:	mov	sl, r6
   21414:	add	r3, r3, #1
   21418:	str	r3, [r7, #220]	; 0xdc
   2141c:	ldr	r7, [sp, #68]	; 0x44
   21420:	ldr	r1, [pc, #748]	; 21714 <__flatcc_fb_gen_c_verifier@@Base+0x1300>
   21424:	mov	r0, r7
   21428:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   2142c:	mov	r0, r7
   21430:	ldr	r1, [pc, #736]	; 21718 <__flatcc_fb_gen_c_verifier@@Base+0x1304>
   21434:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   21438:	mov	r0, r7
   2143c:	str	r8, [sp]
   21440:	ldr	r3, [sp, #52]	; 0x34
   21444:	mov	r2, r4
   21448:	ldr	r1, [sp, #72]	; 0x48
   2144c:	bl	20c80 <__flatcc_fb_gen_c_verifier@@Base+0x86c>
   21450:	mov	r7, r4
   21454:	ldr	r3, [sp, #68]	; 0x44
   21458:	ldr	r3, [r3, #220]	; 0xdc
   2145c:	cmp	r3, #0
   21460:	beq	216b0 <__flatcc_fb_gen_c_verifier@@Base+0x129c>
   21464:	ldr	r8, [sp, #68]	; 0x44
   21468:	sub	r3, r3, #1
   2146c:	mov	r2, r6
   21470:	str	r3, [r8, #220]	; 0xdc
   21474:	mov	r0, r8
   21478:	mov	r3, sl
   2147c:	ldr	r1, [pc, #664]	; 2171c <__flatcc_fb_gen_c_verifier@@Base+0x1308>
   21480:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   21484:	ldr	r3, [r8, #220]	; 0xdc
   21488:	mov	r2, r8
   2148c:	add	r3, r3, #1
   21490:	mov	r8, r4
   21494:	str	r3, [r2, #220]	; 0xdc
   21498:	mov	r4, r7
   2149c:	b	210a0 <__flatcc_fb_gen_c_verifier@@Base+0xc8c>
   214a0:	ldr	r3, [sp, #52]	; 0x34
   214a4:	ldr	fp, [sp, #8]
   214a8:	add	r5, r3, #1
   214ac:	b	21058 <__flatcc_fb_gen_c_verifier@@Base+0xc44>
   214b0:	ldr	r1, [sp, #76]	; 0x4c
   214b4:	add	r8, fp, #8
   214b8:	add	r1, r1, r4, lsl #4
   214bc:	ldr	r1, [r1, #-12]
   214c0:	cmp	r1, r8
   214c4:	bgt	213d8 <__flatcc_fb_gen_c_verifier@@Base+0xfc4>
   214c8:	sub	r1, r1, fp
   214cc:	cmp	fp, r2
   214d0:	sub	r7, r1, #8
   214d4:	ldr	sl, [r3]
   214d8:	clz	r7, r7
   214dc:	lsr	r7, r7, #5
   214e0:	bgt	21644 <__flatcc_fb_gen_c_verifier@@Base+0x1230>
   214e4:	add	sl, sl, fp
   214e8:	str	r8, [sp, #8]
   214ec:	add	lr, sl, #8
   214f0:	mov	ip, #0
   214f4:	mov	r2, #0
   214f8:	mov	r3, #0
   214fc:	mov	r8, r7
   21500:	ldrb	r6, [lr, #-1]!
   21504:	sub	r7, ip, #32
   21508:	rsb	r9, ip, #32
   2150c:	lsl	r1, r6, r7
   21510:	lsl	r0, r6, ip
   21514:	orr	r1, r1, r6, lsr r9
   21518:	add	ip, ip, #8
   2151c:	cmp	ip, #64	; 0x40
   21520:	orr	r2, r2, r0
   21524:	orr	r3, r3, r1
   21528:	bne	21500 <__flatcc_fb_gen_c_verifier@@Base+0x10ec>
   2152c:	mov	r7, r8
   21530:	ldr	r8, [sp, #8]
   21534:	mov	r6, #8
   21538:	ldr	r9, [sp, #68]	; 0x44
   2153c:	stm	sp, {r6, sl}
   21540:	ldr	r1, [pc, #456]	; 21710 <__flatcc_fb_gen_c_verifier@@Base+0x12fc>
   21544:	mov	r0, r9
   21548:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   2154c:	ldr	r3, [r9, #220]	; 0xdc
   21550:	cmp	r7, #0
   21554:	add	r3, r3, #1
   21558:	str	r3, [r9, #220]	; 0xdc
   2155c:	beq	2141c <__flatcc_fb_gen_c_verifier@@Base+0x1008>
   21560:	mov	r3, sl
   21564:	mov	r2, r6
   21568:	ldr	r1, [pc, #432]	; 21720 <__flatcc_fb_gen_c_verifier@@Base+0x130c>
   2156c:	mov	r0, r9
   21570:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   21574:	ldr	ip, [sp, #72]	; 0x48
   21578:	sub	r3, r4, #-268435455	; 0xf0000001
   2157c:	mov	r0, #8
   21580:	ldr	r2, [ip]
   21584:	ldr	r1, [ip, #12]
   21588:	add	r2, r2, r3, lsl #4
   2158c:	ldr	r3, [r2, #12]
   21590:	ldr	r2, [r2, #8]
   21594:	str	r0, [sp]
   21598:	mov	r0, r9
   2159c:	ldr	r7, [ip, #4]
   215a0:	blx	r7
   215a4:	mov	r3, sl
   215a8:	mov	r2, r6
   215ac:	ldr	r1, [pc, #368]	; 21724 <__flatcc_fb_gen_c_verifier@@Base+0x1310>
   215b0:	mov	r0, r9
   215b4:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   215b8:	ldr	r1, [pc, #340]	; 21714 <__flatcc_fb_gen_c_verifier@@Base+0x1300>
   215bc:	mov	r0, r9
   215c0:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   215c4:	ldr	r1, [pc, #332]	; 21718 <__flatcc_fb_gen_c_verifier@@Base+0x1304>
   215c8:	mov	r0, r9
   215cc:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   215d0:	ldr	r3, [sp, #52]	; 0x34
   215d4:	str	r8, [sp]
   215d8:	mov	r2, r4
   215dc:	ldr	r1, [sp, #72]	; 0x48
   215e0:	mov	r0, r9
   215e4:	bl	20c80 <__flatcc_fb_gen_c_verifier@@Base+0x86c>
   215e8:	ldr	r3, [r9, #220]	; 0xdc
   215ec:	cmp	r3, #0
   215f0:	beq	21658 <__flatcc_fb_gen_c_verifier@@Base+0x1244>
   215f4:	ldr	r0, [sp, #68]	; 0x44
   215f8:	sub	r3, r3, #1
   215fc:	mov	r2, r6
   21600:	str	r3, [r0, #220]	; 0xdc
   21604:	ldr	r1, [pc, #284]	; 21728 <__flatcc_fb_gen_c_verifier@@Base+0x1314>
   21608:	mov	r3, sl
   2160c:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   21610:	sub	r7, r4, #1
   21614:	b	21454 <__flatcc_fb_gen_c_verifier@@Base+0x1040>
   21618:	ldr	r3, [sp, #64]	; 0x40
   2161c:	mov	r8, r4
   21620:	cmp	r3, r5
   21624:	bge	2166c <__flatcc_fb_gen_c_verifier@@Base+0x1258>
   21628:	ldr	sl, [pc, #188]	; 216ec <__flatcc_fb_gen_c_verifier@@Base+0x12d8>
   2162c:	mov	r6, #0
   21630:	ldr	r3, [sp, #72]	; 0x48
   21634:	ldr	r0, [sp, #68]	; 0x44
   21638:	ldr	r3, [r3, #8]
   2163c:	blx	r3
   21640:	b	2120c <__flatcc_fb_gen_c_verifier@@Base+0xdf8>
   21644:	mov	sl, #0
   21648:	mov	r6, sl
   2164c:	mov	r2, #0
   21650:	mov	r3, #0
   21654:	b	21538 <__flatcc_fb_gen_c_verifier@@Base+0x1124>
   21658:	ldr	r3, [pc, #204]	; 2172c <__flatcc_fb_gen_c_verifier@@Base+0x1318>
   2165c:	mov	r2, #1040	; 0x410
   21660:	ldr	r1, [pc, #200]	; 21730 <__flatcc_fb_gen_c_verifier@@Base+0x131c>
   21664:	ldr	r0, [pc, #200]	; 21734 <__flatcc_fb_gen_c_verifier@@Base+0x1320>
   21668:	bl	14148 <__assert_fail@plt>
   2166c:	ldr	sl, [pc, #120]	; 216ec <__flatcc_fb_gen_c_verifier@@Base+0x12d8>
   21670:	mov	r6, #0
   21674:	str	fp, [sp]
   21678:	ldr	r1, [sp, #72]	; 0x48
   2167c:	mov	r2, r5
   21680:	ldr	r0, [sp, #68]	; 0x44
   21684:	bl	20c80 <__flatcc_fb_gen_c_verifier@@Base+0x86c>
   21688:	b	2120c <__flatcc_fb_gen_c_verifier@@Base+0xdf8>
   2168c:	ldr	r3, [pc, #152]	; 2172c <__flatcc_fb_gen_c_verifier@@Base+0x1318>
   21690:	mov	r2, #1072	; 0x430
   21694:	ldr	r1, [pc, #148]	; 21730 <__flatcc_fb_gen_c_verifier@@Base+0x131c>
   21698:	ldr	r0, [pc, #148]	; 21734 <__flatcc_fb_gen_c_verifier@@Base+0x1320>
   2169c:	bl	14148 <__assert_fail@plt>
   216a0:	mov	r7, r9
   216a4:	mov	r2, r3
   216a8:	ldr	r1, [sp, #72]	; 0x48
   216ac:	b	210d4 <__flatcc_fb_gen_c_verifier@@Base+0xcc0>
   216b0:	ldr	r3, [pc, #116]	; 2172c <__flatcc_fb_gen_c_verifier@@Base+0x1318>
   216b4:	ldr	r2, [pc, #124]	; 21738 <__flatcc_fb_gen_c_verifier@@Base+0x1324>
   216b8:	ldr	r1, [pc, #112]	; 21730 <__flatcc_fb_gen_c_verifier@@Base+0x131c>
   216bc:	ldr	r0, [pc, #112]	; 21734 <__flatcc_fb_gen_c_verifier@@Base+0x1320>
   216c0:	bl	14148 <__assert_fail@plt>
   216c4:	ldr	r3, [pc, #96]	; 2172c <__flatcc_fb_gen_c_verifier@@Base+0x1318>
   216c8:	ldr	r2, [pc, #108]	; 2173c <__flatcc_fb_gen_c_verifier@@Base+0x1328>
   216cc:	ldr	r1, [pc, #92]	; 21730 <__flatcc_fb_gen_c_verifier@@Base+0x131c>
   216d0:	ldr	r0, [pc, #92]	; 21734 <__flatcc_fb_gen_c_verifier@@Base+0x1320>
   216d4:	bl	14148 <__assert_fail@plt>
   216d8:	ldr	r3, [pc, #76]	; 2172c <__flatcc_fb_gen_c_verifier@@Base+0x1318>
   216dc:	ldr	r2, [pc, #92]	; 21740 <__flatcc_fb_gen_c_verifier@@Base+0x132c>
   216e0:	ldr	r1, [pc, #72]	; 21730 <__flatcc_fb_gen_c_verifier@@Base+0x131c>
   216e4:	ldr	r0, [pc, #72]	; 21734 <__flatcc_fb_gen_c_verifier@@Base+0x1320>
   216e8:	bl	14148 <__assert_fail@plt>
   216ec:	andeq	lr, r4, ip, asr #2
   216f0:	andeq	r6, r5, r4, lsl #29
   216f4:	muleq	r5, r8, lr
   216f8:	andeq	r6, r5, r4, lsr #29
   216fc:			; <UNDEFINED> instruction: 0x00056eb4
   21700:	andeq	r6, r5, r0, asr #29
   21704:	andeq	r6, r5, r4, asr #26
   21708:	andeq	r6, r5, ip, ror #26
   2170c:	andeq	r6, r5, ip, lsl #27
   21710:	andeq	r6, r5, r4, lsr #27
   21714:	andeq	r6, r5, r8, lsl #28
   21718:	andeq	r6, r5, r4, lsl lr
   2171c:	andeq	r6, r5, r4, ror #28
   21720:	andeq	r6, r5, ip, asr #27
   21724:	andeq	r6, r5, ip, ror #27
   21728:	andeq	r6, r5, r4, asr #28
   2172c:	andeq	r6, r5, r4, ror sl
   21730:			; <UNDEFINED> instruction: 0x00056cb4
   21734:	andeq	r6, r5, ip, lsl #26
   21738:	andeq	r0, r0, r4, lsl r4
   2173c:	andeq	r0, r0, pc, asr #7
   21740:	andeq	r0, r0, sp, asr #7
   21744:	push	{r4, lr}
   21748:	mov	r4, r0
   2174c:	sub	sp, sp, #208	; 0xd0
   21750:	mov	r0, r1
   21754:	add	r1, sp, #4
   21758:	bl	17014 <__flatcc_fb_copy_scope@@Base>
   2175c:	ldr	r2, [r4, #208]	; 0xd0
   21760:	add	r3, sp, #4
   21764:	mov	r0, r4
   21768:	ldr	r2, [r2, #160]	; 0xa0
   2176c:	ldr	r1, [pc, #20]	; 21788 <__flatcc_fb_gen_c_verifier@@Base+0x1374>
   21770:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   21774:	mov	r0, r4
   21778:	ldr	r1, [pc, #12]	; 2178c <__flatcc_fb_gen_c_verifier@@Base+0x1378>
   2177c:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   21780:	add	sp, sp, #208	; 0xd0
   21784:	pop	{r4, pc}
   21788:	ldrdeq	r6, [r5], -r8
   2178c:	andeq	r6, r5, r4, asr #30
   21790:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21794:	sub	sp, sp, #460	; 0x1cc
   21798:	mov	r4, r0
   2179c:	mov	r5, r1
   217a0:	mov	r2, #220	; 0xdc
   217a4:	mov	r1, #0
   217a8:	add	r0, sp, #16
   217ac:	bl	140ac <memset@plt>
   217b0:	mov	r2, #220	; 0xdc
   217b4:	mov	r1, #0
   217b8:	add	r0, sp, #236	; 0xec
   217bc:	bl	140ac <memset@plt>
   217c0:	add	r2, sp, #16
   217c4:	mov	r1, r5
   217c8:	ldr	r0, [r5, #12]
   217cc:	bl	170c4 <__flatcc_fb_scoped_symbol_name@@Base>
   217d0:	add	r2, sp, #16
   217d4:	mov	r0, r4
   217d8:	ldr	r1, [pc, #1008]	; 21bd0 <__flatcc_fb_gen_c_verifier@@Base+0x17bc>
   217dc:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   217e0:	mov	r0, r4
   217e4:	ldr	r1, [pc, #1000]	; 21bd4 <__flatcc_fb_gen_c_verifier@@Base+0x17c0>
   217e8:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   217ec:	ldr	r3, [r4, #220]	; 0xdc
   217f0:	mov	r0, r4
   217f4:	add	r3, r3, #1
   217f8:	str	r3, [r4, #220]	; 0xdc
   217fc:	ldr	r1, [pc, #980]	; 21bd8 <__flatcc_fb_gen_c_verifier@@Base+0x17c4>
   21800:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   21804:	mov	r0, r4
   21808:	ldr	r1, [pc, #972]	; 21bdc <__flatcc_fb_gen_c_verifier@@Base+0x17c8>
   2180c:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   21810:	mov	r0, r4
   21814:	ldr	r1, [pc, #964]	; 21be0 <__flatcc_fb_gen_c_verifier@@Base+0x17cc>
   21818:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   2181c:	mov	r0, r4
   21820:	ldr	r1, [pc, #956]	; 21be4 <__flatcc_fb_gen_c_verifier@@Base+0x17d0>
   21824:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   21828:	ldr	r3, [r4, #220]	; 0xdc
   2182c:	mov	r0, r4
   21830:	add	r3, r3, #1
   21834:	str	r3, [r4, #220]	; 0xdc
   21838:	ldr	r1, [pc, #936]	; 21be8 <__flatcc_fb_gen_c_verifier@@Base+0x17d4>
   2183c:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   21840:	ldr	r3, [r4, #220]	; 0xdc
   21844:	cmp	r3, #0
   21848:	beq	21b44 <__flatcc_fb_gen_c_verifier@@Base+0x1730>
   2184c:	ldr	r5, [r5, #20]
   21850:	sub	r3, r3, #1
   21854:	cmp	r5, #0
   21858:	str	r3, [r4, #220]	; 0xdc
   2185c:	beq	21928 <__flatcc_fb_gen_c_verifier@@Base+0x1514>
   21860:	ldr	r7, [pc, #900]	; 21bec <__flatcc_fb_gen_c_verifier@@Base+0x17d8>
   21864:	ldr	r9, [pc, #900]	; 21bf0 <__flatcc_fb_gen_c_verifier@@Base+0x17dc>
   21868:	ldr	r8, [pc, #900]	; 21bf4 <__flatcc_fb_gen_c_verifier@@Base+0x17e0>
   2186c:	ldr	fp, [pc, #900]	; 21bf8 <__flatcc_fb_gen_c_verifier@@Base+0x17e4>
   21870:	ldr	sl, [pc, #900]	; 21bfc <__flatcc_fb_gen_c_verifier@@Base+0x17e8>
   21874:	ldrh	r2, [r5, #24]
   21878:	ldr	r3, [r5, #4]
   2187c:	cmp	r2, #10
   21880:	ldr	r6, [r3]
   21884:	ldr	r3, [r3, #4]
   21888:	beq	218d0 <__flatcc_fb_gen_c_verifier@@Base+0x14bc>
   2188c:	cmp	r2, #14
   21890:	beq	21a70 <__flatcc_fb_gen_c_verifier@@Base+0x165c>
   21894:	cmp	r2, #0
   21898:	beq	2191c <__flatcc_fb_gen_c_verifier@@Base+0x1508>
   2189c:	ldr	r1, [pc, #860]	; 21c00 <__flatcc_fb_gen_c_verifier@@Base+0x17ec>
   218a0:	ldr	r2, [pc, #860]	; 21c04 <__flatcc_fb_gen_c_verifier@@Base+0x17f0>
   218a4:	ldr	r3, [pc, #860]	; 21c08 <__flatcc_fb_gen_c_verifier@@Base+0x17f4>
   218a8:	ldr	r0, [r1]
   218ac:	str	r2, [sp]
   218b0:	ldr	r1, [pc, #852]	; 21c0c <__flatcc_fb_gen_c_verifier@@Base+0x17f8>
   218b4:	ldr	r2, [pc, #852]	; 21c10 <__flatcc_fb_gen_c_verifier@@Base+0x17fc>
   218b8:	bl	14094 <fprintf@plt>
   218bc:	ldr	r3, [pc, #848]	; 21c14 <__flatcc_fb_gen_c_verifier@@Base+0x1800>
   218c0:	ldr	r2, [pc, #832]	; 21c08 <__flatcc_fb_gen_c_verifier@@Base+0x17f4>
   218c4:	ldr	r1, [pc, #836]	; 21c10 <__flatcc_fb_gen_c_verifier@@Base+0x17fc>
   218c8:	ldr	r0, [pc, #840]	; 21c18 <__flatcc_fb_gen_c_verifier@@Base+0x1804>
   218cc:	bl	14148 <__assert_fail@plt>
   218d0:	ldr	r2, [r5, #48]	; 0x30
   218d4:	mov	r1, r7
   218d8:	mov	r0, r4
   218dc:	str	r6, [sp]
   218e0:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   218e4:	ldr	r3, [r4, #220]	; 0xdc
   218e8:	mov	r1, r9
   218ec:	add	r3, r3, #1
   218f0:	str	r3, [r4, #220]	; 0xdc
   218f4:	mov	r0, r4
   218f8:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   218fc:	mov	r1, r8
   21900:	mov	r0, r4
   21904:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   21908:	ldr	r3, [r4, #220]	; 0xdc
   2190c:	cmp	r3, #0
   21910:	beq	21bbc <__flatcc_fb_gen_c_verifier@@Base+0x17a8>
   21914:	sub	r3, r3, #1
   21918:	str	r3, [r4, #220]	; 0xdc
   2191c:	ldr	r5, [r5]
   21920:	cmp	r5, #0
   21924:	bne	21874 <__flatcc_fb_gen_c_verifier@@Base+0x1460>
   21928:	ldr	r1, [pc, #748]	; 21c1c <__flatcc_fb_gen_c_verifier@@Base+0x1808>
   2192c:	mov	r0, r4
   21930:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   21934:	ldr	r3, [r4, #220]	; 0xdc
   21938:	ldr	r1, [pc, #736]	; 21c20 <__flatcc_fb_gen_c_verifier@@Base+0x180c>
   2193c:	add	r3, r3, #1
   21940:	str	r3, [r4, #220]	; 0xdc
   21944:	mov	r0, r4
   21948:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   2194c:	ldr	r3, [r4, #220]	; 0xdc
   21950:	ldr	r1, [pc, #716]	; 21c24 <__flatcc_fb_gen_c_verifier@@Base+0x1810>
   21954:	add	r3, r3, #1
   21958:	str	r3, [r4, #220]	; 0xdc
   2195c:	mov	r0, r4
   21960:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   21964:	ldr	r3, [r4, #220]	; 0xdc
   21968:	cmp	r3, #0
   2196c:	beq	21ba8 <__flatcc_fb_gen_c_verifier@@Base+0x1794>
   21970:	sub	r3, r3, #1
   21974:	str	r3, [r4, #220]	; 0xdc
   21978:	ldr	r1, [pc, #680]	; 21c28 <__flatcc_fb_gen_c_verifier@@Base+0x1814>
   2197c:	mov	r0, r4
   21980:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   21984:	ldr	r3, [r4, #220]	; 0xdc
   21988:	ldr	r1, [pc, #668]	; 21c2c <__flatcc_fb_gen_c_verifier@@Base+0x1818>
   2198c:	add	r3, r3, #1
   21990:	str	r3, [r4, #220]	; 0xdc
   21994:	mov	r0, r4
   21998:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   2199c:	ldr	r3, [r4, #220]	; 0xdc
   219a0:	cmp	r3, #0
   219a4:	beq	21b94 <__flatcc_fb_gen_c_verifier@@Base+0x1780>
   219a8:	sub	r3, r3, #1
   219ac:	str	r3, [r4, #220]	; 0xdc
   219b0:	ldr	r1, [pc, #632]	; 21c30 <__flatcc_fb_gen_c_verifier@@Base+0x181c>
   219b4:	mov	r0, r4
   219b8:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   219bc:	ldr	r3, [r4, #220]	; 0xdc
   219c0:	cmp	r3, #0
   219c4:	beq	21b80 <__flatcc_fb_gen_c_verifier@@Base+0x176c>
   219c8:	sub	r3, r3, #1
   219cc:	str	r3, [r4, #220]	; 0xdc
   219d0:	ldr	r1, [pc, #600]	; 21c30 <__flatcc_fb_gen_c_verifier@@Base+0x181c>
   219d4:	mov	r0, r4
   219d8:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   219dc:	ldr	r1, [pc, #592]	; 21c34 <__flatcc_fb_gen_c_verifier@@Base+0x1820>
   219e0:	mov	r0, r4
   219e4:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   219e8:	ldr	r1, [pc, #584]	; 21c38 <__flatcc_fb_gen_c_verifier@@Base+0x1824>
   219ec:	mov	r0, r4
   219f0:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   219f4:	ldr	r3, [r4, #220]	; 0xdc
   219f8:	ldr	r1, [pc, #572]	; 21c3c <__flatcc_fb_gen_c_verifier@@Base+0x1828>
   219fc:	add	r3, r3, #1
   21a00:	str	r3, [r4, #220]	; 0xdc
   21a04:	mov	r0, r4
   21a08:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   21a0c:	ldr	r3, [r4, #220]	; 0xdc
   21a10:	cmp	r3, #0
   21a14:	beq	21b6c <__flatcc_fb_gen_c_verifier@@Base+0x1758>
   21a18:	sub	r3, r3, #1
   21a1c:	str	r3, [r4, #220]	; 0xdc
   21a20:	ldr	r1, [pc, #520]	; 21c30 <__flatcc_fb_gen_c_verifier@@Base+0x181c>
   21a24:	mov	r0, r4
   21a28:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   21a2c:	ldr	r1, [pc, #524]	; 21c40 <__flatcc_fb_gen_c_verifier@@Base+0x182c>
   21a30:	mov	r0, r4
   21a34:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   21a38:	ldr	r3, [r4, #220]	; 0xdc
   21a3c:	cmp	r3, #0
   21a40:	beq	21b58 <__flatcc_fb_gen_c_verifier@@Base+0x1744>
   21a44:	sub	r3, r3, #1
   21a48:	str	r3, [r4, #220]	; 0xdc
   21a4c:	mov	r0, r4
   21a50:	ldr	r1, [pc, #472]	; 21c30 <__flatcc_fb_gen_c_verifier@@Base+0x181c>
   21a54:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   21a58:	mov	r0, r4
   21a5c:	ldr	r1, [pc, #372]	; 21bd8 <__flatcc_fb_gen_c_verifier@@Base+0x17c4>
   21a60:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   21a64:	mov	r0, #0
   21a68:	add	sp, sp, #460	; 0x1cc
   21a6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21a70:	ldr	r1, [r5, #16]
   21a74:	add	r2, sp, #236	; 0xec
   21a78:	str	r3, [sp, #12]
   21a7c:	ldr	r0, [r1, #12]
   21a80:	bl	170c4 <__flatcc_fb_scoped_symbol_name@@Base>
   21a84:	ldr	r2, [r5, #48]	; 0x30
   21a88:	ldr	r3, [sp, #12]
   21a8c:	str	r6, [sp]
   21a90:	mov	r1, r7
   21a94:	mov	r0, r4
   21a98:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   21a9c:	ldr	r3, [r4, #220]	; 0xdc
   21aa0:	add	r3, r3, #1
   21aa4:	str	r3, [r4, #220]	; 0xdc
   21aa8:	ldr	r3, [r5, #16]
   21aac:	ldrh	r3, [r3, #8]
   21ab0:	cmp	r3, #0
   21ab4:	beq	21afc <__flatcc_fb_gen_c_verifier@@Base+0x16e8>
   21ab8:	cmp	r3, #1
   21abc:	bne	21b10 <__flatcc_fb_gen_c_verifier@@Base+0x16fc>
   21ac0:	add	r2, sp, #236	; 0xec
   21ac4:	mov	r1, sl
   21ac8:	mov	r0, r4
   21acc:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   21ad0:	mov	r1, r8
   21ad4:	mov	r0, r4
   21ad8:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   21adc:	ldr	r3, [r4, #220]	; 0xdc
   21ae0:	cmp	r3, #0
   21ae4:	bne	21914 <__flatcc_fb_gen_c_verifier@@Base+0x1500>
   21ae8:	ldr	r3, [pc, #292]	; 21c14 <__flatcc_fb_gen_c_verifier@@Base+0x1800>
   21aec:	ldr	r2, [pc, #336]	; 21c44 <__flatcc_fb_gen_c_verifier@@Base+0x1830>
   21af0:	ldr	r1, [pc, #280]	; 21c10 <__flatcc_fb_gen_c_verifier@@Base+0x17fc>
   21af4:	ldr	r0, [pc, #332]	; 21c48 <__flatcc_fb_gen_c_verifier@@Base+0x1834>
   21af8:	bl	14148 <__assert_fail@plt>
   21afc:	add	r2, sp, #236	; 0xec
   21b00:	mov	r1, fp
   21b04:	mov	r0, r4
   21b08:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   21b0c:	b	21ad0 <__flatcc_fb_gen_c_verifier@@Base+0x16bc>
   21b10:	ldr	r1, [pc, #232]	; 21c00 <__flatcc_fb_gen_c_verifier@@Base+0x17ec>
   21b14:	ldr	r2, [pc, #304]	; 21c4c <__flatcc_fb_gen_c_verifier@@Base+0x1838>
   21b18:	ldr	r3, [pc, #304]	; 21c50 <__flatcc_fb_gen_c_verifier@@Base+0x183c>
   21b1c:	ldr	r0, [r1]
   21b20:	str	r2, [sp]
   21b24:	ldr	r1, [pc, #224]	; 21c0c <__flatcc_fb_gen_c_verifier@@Base+0x17f8>
   21b28:	ldr	r2, [pc, #224]	; 21c10 <__flatcc_fb_gen_c_verifier@@Base+0x17fc>
   21b2c:	bl	14094 <fprintf@plt>
   21b30:	ldr	r3, [pc, #220]	; 21c14 <__flatcc_fb_gen_c_verifier@@Base+0x1800>
   21b34:	ldr	r2, [pc, #276]	; 21c50 <__flatcc_fb_gen_c_verifier@@Base+0x183c>
   21b38:	ldr	r1, [pc, #208]	; 21c10 <__flatcc_fb_gen_c_verifier@@Base+0x17fc>
   21b3c:	ldr	r0, [pc, #212]	; 21c18 <__flatcc_fb_gen_c_verifier@@Base+0x1804>
   21b40:	bl	14148 <__assert_fail@plt>
   21b44:	ldr	r3, [pc, #200]	; 21c14 <__flatcc_fb_gen_c_verifier@@Base+0x1800>
   21b48:	ldr	r2, [pc, #260]	; 21c54 <__flatcc_fb_gen_c_verifier@@Base+0x1840>
   21b4c:	ldr	r1, [pc, #188]	; 21c10 <__flatcc_fb_gen_c_verifier@@Base+0x17fc>
   21b50:	ldr	r0, [pc, #240]	; 21c48 <__flatcc_fb_gen_c_verifier@@Base+0x1834>
   21b54:	bl	14148 <__assert_fail@plt>
   21b58:	ldr	r3, [pc, #180]	; 21c14 <__flatcc_fb_gen_c_verifier@@Base+0x1800>
   21b5c:	mov	r2, #1552	; 0x610
   21b60:	ldr	r1, [pc, #168]	; 21c10 <__flatcc_fb_gen_c_verifier@@Base+0x17fc>
   21b64:	ldr	r0, [pc, #220]	; 21c48 <__flatcc_fb_gen_c_verifier@@Base+0x1834>
   21b68:	bl	14148 <__assert_fail@plt>
   21b6c:	ldr	r3, [pc, #160]	; 21c14 <__flatcc_fb_gen_c_verifier@@Base+0x1800>
   21b70:	ldr	r2, [pc, #224]	; 21c58 <__flatcc_fb_gen_c_verifier@@Base+0x1844>
   21b74:	ldr	r1, [pc, #148]	; 21c10 <__flatcc_fb_gen_c_verifier@@Base+0x17fc>
   21b78:	ldr	r0, [pc, #200]	; 21c48 <__flatcc_fb_gen_c_verifier@@Base+0x1834>
   21b7c:	bl	14148 <__assert_fail@plt>
   21b80:	ldr	r3, [pc, #140]	; 21c14 <__flatcc_fb_gen_c_verifier@@Base+0x1800>
   21b84:	ldr	r2, [pc, #208]	; 21c5c <__flatcc_fb_gen_c_verifier@@Base+0x1848>
   21b88:	ldr	r1, [pc, #128]	; 21c10 <__flatcc_fb_gen_c_verifier@@Base+0x17fc>
   21b8c:	ldr	r0, [pc, #180]	; 21c48 <__flatcc_fb_gen_c_verifier@@Base+0x1834>
   21b90:	bl	14148 <__assert_fail@plt>
   21b94:	ldr	r3, [pc, #120]	; 21c14 <__flatcc_fb_gen_c_verifier@@Base+0x1800>
   21b98:	ldr	r2, [pc, #192]	; 21c60 <__flatcc_fb_gen_c_verifier@@Base+0x184c>
   21b9c:	ldr	r1, [pc, #108]	; 21c10 <__flatcc_fb_gen_c_verifier@@Base+0x17fc>
   21ba0:	ldr	r0, [pc, #160]	; 21c48 <__flatcc_fb_gen_c_verifier@@Base+0x1834>
   21ba4:	bl	14148 <__assert_fail@plt>
   21ba8:	ldr	r3, [pc, #100]	; 21c14 <__flatcc_fb_gen_c_verifier@@Base+0x1800>
   21bac:	ldr	r2, [pc, #176]	; 21c64 <__flatcc_fb_gen_c_verifier@@Base+0x1850>
   21bb0:	ldr	r1, [pc, #88]	; 21c10 <__flatcc_fb_gen_c_verifier@@Base+0x17fc>
   21bb4:	ldr	r0, [pc, #140]	; 21c48 <__flatcc_fb_gen_c_verifier@@Base+0x1834>
   21bb8:	bl	14148 <__assert_fail@plt>
   21bbc:	ldr	r3, [pc, #80]	; 21c14 <__flatcc_fb_gen_c_verifier@@Base+0x1800>
   21bc0:	ldr	r2, [pc, #160]	; 21c68 <__flatcc_fb_gen_c_verifier@@Base+0x1854>
   21bc4:	ldr	r1, [pc, #68]	; 21c10 <__flatcc_fb_gen_c_verifier@@Base+0x17fc>
   21bc8:	ldr	r0, [pc, #120]	; 21c48 <__flatcc_fb_gen_c_verifier@@Base+0x1834>
   21bcc:	bl	14148 <__assert_fail@plt>
   21bd0:	andeq	r6, r5, r8, ror pc
   21bd4:	andeq	r9, r5, r0, lsr r9
   21bd8:	andeq	lr, r4, ip, asr #2
   21bdc:	andeq	r7, r5, r8
   21be0:	andeq	r7, r5, r8, lsl r0
   21be4:	andeq	r7, r5, r8, lsr #32
   21be8:	andeq	r7, r5, ip, lsr r0
   21bec:	andeq	r7, r5, r0, lsl r1
   21bf0:	andeq	r7, r5, ip, asr #3
   21bf4:	andeq	r7, r5, r4, asr #3
   21bf8:	andeq	r7, r5, r4, lsr #2
   21bfc:	andeq	r7, r5, r8, asr r1
   21c00:	andeq	pc, r6, r8, lsr #1
   21c04:	andeq	r7, r5, ip, lsl #4
   21c08:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   21c0c:	ldrdeq	r4, [r4], -ip
   21c10:			; <UNDEFINED> instruction: 0x00056cb4
   21c14:	andeq	r6, r5, r0, lsl #21
   21c18:	andeq	sp, r4, r4, ror r2
   21c1c:	andeq	r7, r5, ip, rrx
   21c20:	andeq	r7, r5, r8, ror r0
   21c24:	strheq	r7, [r5], -r4
   21c28:	andeq	r7, r5, ip, lsr r2
   21c2c:	andeq	r7, r5, r8, asr #4
   21c30:	andeq	r6, r5, r8, lsl sp
   21c34:	andeq	r7, r5, r0, lsl #5
   21c38:	muleq	r5, ip, r2
   21c3c:	andeq	r7, r5, ip, lsr #5
   21c40:	muleq	r5, r0, r2
   21c44:	strdeq	r0, [r0], -r6
   21c48:	andeq	r6, r5, ip, lsl #26
   21c4c:	andeq	r7, r5, ip, lsl #3
   21c50:	strdeq	r0, [r0], -r2
   21c54:	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   21c58:	andeq	r0, r0, lr, lsl #12
   21c5c:	andeq	r0, r0, sl, lsl #12
   21c60:	andeq	r0, r0, r9, lsl #12
   21c64:	andeq	r0, r0, r7, lsl #12
   21c68:	strdeq	r0, [r0], -ip
   21c6c:	push	{r4, r5, r6, r7, lr}
   21c70:	sub	sp, sp, #452	; 0x1c4
   21c74:	mov	r5, r0
   21c78:	mov	r4, r1
   21c7c:	mov	r2, #220	; 0xdc
   21c80:	mov	r1, #0
   21c84:	add	r0, sp, #8
   21c88:	bl	140ac <memset@plt>
   21c8c:	mov	r2, #220	; 0xdc
   21c90:	mov	r1, #0
   21c94:	add	r0, sp, #228	; 0xe4
   21c98:	bl	140ac <memset@plt>
   21c9c:	mov	r1, r4
   21ca0:	ldr	r0, [r4, #12]
   21ca4:	add	r2, sp, #8
   21ca8:	bl	170c4 <__flatcc_fb_scoped_symbol_name@@Base>
   21cac:	add	r2, sp, #8
   21cb0:	mov	r0, r5
   21cb4:	ldr	r1, [pc, #280]	; 21dd4 <__flatcc_fb_gen_c_verifier@@Base+0x19c0>
   21cb8:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   21cbc:	mov	r0, r5
   21cc0:	ldr	r1, [pc, #272]	; 21dd8 <__flatcc_fb_gen_c_verifier@@Base+0x19c4>
   21cc4:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   21cc8:	ldr	r3, [r5, #220]	; 0xdc
   21ccc:	mov	r0, r5
   21cd0:	add	r3, r3, #1
   21cd4:	str	r3, [r5, #220]	; 0xdc
   21cd8:	ldr	r1, [pc, #252]	; 21ddc <__flatcc_fb_gen_c_verifier@@Base+0x19c8>
   21cdc:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   21ce0:	ldr	r4, [r4, #20]
   21ce4:	cmp	r4, #0
   21ce8:	beq	21d18 <__flatcc_fb_gen_c_verifier@@Base+0x1904>
   21cec:	ldr	r7, [pc, #236]	; 21de0 <__flatcc_fb_gen_c_verifier@@Base+0x19cc>
   21cf0:	ldr	r6, [pc, #236]	; 21de4 <__flatcc_fb_gen_c_verifier@@Base+0x19d0>
   21cf4:	ldrh	r3, [r4, #24]
   21cf8:	cmp	r3, #0
   21cfc:	bne	21d80 <__flatcc_fb_gen_c_verifier@@Base+0x196c>
   21d00:	mov	r1, r6
   21d04:	mov	r0, r5
   21d08:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   21d0c:	ldr	r4, [r4]
   21d10:	cmp	r4, #0
   21d14:	bne	21cf4 <__flatcc_fb_gen_c_verifier@@Base+0x18e0>
   21d18:	ldr	r1, [pc, #200]	; 21de8 <__flatcc_fb_gen_c_verifier@@Base+0x19d4>
   21d1c:	mov	r0, r5
   21d20:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   21d24:	ldr	r3, [r5, #220]	; 0xdc
   21d28:	add	r2, r3, #1
   21d2c:	cmp	r2, #0
   21d30:	str	r2, [r5, #220]	; 0xdc
   21d34:	beq	21dac <__flatcc_fb_gen_c_verifier@@Base+0x1998>
   21d38:	str	r3, [r5, #220]	; 0xdc
   21d3c:	ldr	r1, [pc, #168]	; 21dec <__flatcc_fb_gen_c_verifier@@Base+0x19d8>
   21d40:	mov	r0, r5
   21d44:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   21d48:	ldr	r3, [r5, #220]	; 0xdc
   21d4c:	cmp	r3, #0
   21d50:	beq	21dc0 <__flatcc_fb_gen_c_verifier@@Base+0x19ac>
   21d54:	sub	r3, r3, #1
   21d58:	str	r3, [r5, #220]	; 0xdc
   21d5c:	mov	r0, r5
   21d60:	ldr	r1, [pc, #132]	; 21dec <__flatcc_fb_gen_c_verifier@@Base+0x19d8>
   21d64:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   21d68:	mov	r0, r5
   21d6c:	ldr	r1, [pc, #124]	; 21df0 <__flatcc_fb_gen_c_verifier@@Base+0x19dc>
   21d70:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   21d74:	mov	r0, #0
   21d78:	add	sp, sp, #452	; 0x1c4
   21d7c:	pop	{r4, r5, r6, r7, pc}
   21d80:	ldr	r0, [r4, #4]
   21d84:	ldr	r2, [r4, #48]	; 0x30
   21d88:	mov	r1, r7
   21d8c:	ldm	r0, {r0, r3}
   21d90:	str	r0, [sp]
   21d94:	mov	r0, r5
   21d98:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   21d9c:	ldr	r4, [r4]
   21da0:	cmp	r4, #0
   21da4:	bne	21cf4 <__flatcc_fb_gen_c_verifier@@Base+0x18e0>
   21da8:	b	21d18 <__flatcc_fb_gen_c_verifier@@Base+0x1904>
   21dac:	ldr	r3, [pc, #64]	; 21df4 <__flatcc_fb_gen_c_verifier@@Base+0x19e0>
   21db0:	ldr	r2, [pc, #64]	; 21df8 <__flatcc_fb_gen_c_verifier@@Base+0x19e4>
   21db4:	ldr	r1, [pc, #64]	; 21dfc <__flatcc_fb_gen_c_verifier@@Base+0x19e8>
   21db8:	ldr	r0, [pc, #64]	; 21e00 <__flatcc_fb_gen_c_verifier@@Base+0x19ec>
   21dbc:	bl	14148 <__assert_fail@plt>
   21dc0:	ldr	r3, [pc, #44]	; 21df4 <__flatcc_fb_gen_c_verifier@@Base+0x19e0>
   21dc4:	ldr	r2, [pc, #56]	; 21e04 <__flatcc_fb_gen_c_verifier@@Base+0x19f0>
   21dc8:	ldr	r1, [pc, #44]	; 21dfc <__flatcc_fb_gen_c_verifier@@Base+0x19e8>
   21dcc:	ldr	r0, [pc, #44]	; 21e00 <__flatcc_fb_gen_c_verifier@@Base+0x19ec>
   21dd0:	bl	14148 <__assert_fail@plt>
   21dd4:	andeq	r7, r5, r4, lsl #6
   21dd8:	andeq	r9, r5, r0, lsr r9
   21ddc:	andeq	r7, r5, r8, lsl r0
   21de0:	andeq	r7, r5, ip, ror #6
   21de4:	andeq	r7, r5, ip, asr #6
   21de8:	andeq	r7, r5, r8, lsr r3
   21dec:	andeq	r6, r5, r8, lsl sp
   21df0:	andeq	lr, r4, ip, asr #2
   21df4:	muleq	r5, r4, sl
   21df8:	andeq	r0, r0, lr, lsr #12
   21dfc:			; <UNDEFINED> instruction: 0x00056cb4
   21e00:	andeq	r6, r5, ip, lsl #26
   21e04:	andeq	r0, r0, pc, lsr #12
   21e08:	add	r3, r1, #4
   21e0c:	mov	r2, r0
   21e10:	ldr	r1, [pc, #4]	; 21e1c <__flatcc_fb_gen_c_verifier@@Base+0x1a08>
   21e14:	mov	r0, r3
   21e18:	b	29dcc <fb_symbol_table_visit@@Base>
   21e1c:			; <UNDEFINED> instruction: 0x000222bc
   21e20:	add	r3, r1, #4
   21e24:	mov	r2, r0
   21e28:	ldr	r1, [pc, #4]	; 21e34 <__flatcc_fb_gen_c_verifier@@Base+0x1a20>
   21e2c:	mov	r0, r3
   21e30:	b	29dcc <fb_symbol_table_visit@@Base>
   21e34:	strdeq	r1, [r2], -r4
   21e38:	push	{r4, r5, r6, lr}
   21e3c:	ldr	r5, [r0, #4]
   21e40:	ldr	r4, [r1, #4]
   21e44:	ldr	r0, [r0]
   21e48:	cmp	r5, r4
   21e4c:	movlt	r2, r5
   21e50:	movge	r2, r4
   21e54:	ldr	r1, [r1]
   21e58:	bl	13ff8 <memcmp@plt>
   21e5c:	cmp	r0, #0
   21e60:	subeq	r0, r5, r4
   21e64:	pop	{r4, r5, r6, pc}
   21e68:	ldrh	r3, [r1, #8]
   21e6c:	sub	r3, r3, #3
   21e70:	cmp	r3, #1
   21e74:	bxhi	lr
   21e78:	push	{r4, r5, r6, lr}
   21e7c:	mov	r5, r0
   21e80:	ldr	r0, [r0, #4]
   21e84:	mov	r4, r1
   21e88:	add	r0, r0, #172	; 0xac
   21e8c:	ldr	r1, [r1, #16]
   21e90:	bl	293b4 <ptr_set_find_item@@Base>
   21e94:	cmp	r0, #0
   21e98:	popeq	{r4, r5, r6, pc}
   21e9c:	ldr	r2, [r4, #4]
   21ea0:	ldr	r3, [r5, #8]
   21ea4:	ldm	r2, {r0, r1}
   21ea8:	add	r2, r3, #16
   21eac:	stm	r3, {r0, r1, r4}
   21eb0:	str	r2, [r5, #8]
   21eb4:	pop	{r4, r5, r6, pc}
   21eb8:	ldrh	r3, [r1, #8]
   21ebc:	sub	r3, r3, #3
   21ec0:	cmp	r3, #1
   21ec4:	bxhi	lr
   21ec8:	push	{r4, lr}
   21ecc:	mov	r4, r0
   21ed0:	ldr	r0, [r0, #4]
   21ed4:	ldr	r1, [r1, #16]
   21ed8:	add	r0, r0, #172	; 0xac
   21edc:	bl	293b4 <ptr_set_find_item@@Base>
   21ee0:	cmp	r0, #0
   21ee4:	ldrne	r3, [r4]
   21ee8:	addne	r3, r3, #1
   21eec:	strne	r3, [r4]
   21ef0:	pop	{r4, pc}
   21ef4:	ldrh	r3, [r1, #8]
   21ef8:	cmp	r3, #4
   21efc:	bxhi	lr
   21f00:	push	{r4, r5, r6, lr}
   21f04:	mov	r4, r0
   21f08:	ldr	r0, [r0, #40]	; 0x28
   21f0c:	mov	r5, r1
   21f10:	add	r0, r0, #172	; 0xac
   21f14:	ldr	r1, [r1, #16]
   21f18:	bl	293b4 <ptr_set_find_item@@Base>
   21f1c:	cmp	r0, #0
   21f20:	beq	21fc4 <__flatcc_fb_gen_c_verifier@@Base+0x1bb0>
   21f24:	ldr	ip, [r4]
   21f28:	cmp	ip, #0
   21f2c:	beq	21f60 <__flatcc_fb_gen_c_verifier@@Base+0x1b4c>
   21f30:	ldr	r3, [r5, #12]
   21f34:	ldr	r3, [r3]
   21f38:	cmp	r3, #0
   21f3c:	beq	21fc8 <__flatcc_fb_gen_c_verifier@@Base+0x1bb4>
   21f40:	mov	ip, #0
   21f44:	ldr	r2, [r3, #4]
   21f48:	ldr	r3, [r3]
   21f4c:	ldr	r2, [r2, #4]
   21f50:	cmp	r3, #0
   21f54:	add	r2, r2, #1
   21f58:	add	ip, ip, r2
   21f5c:	bne	21f44 <__flatcc_fb_gen_c_verifier@@Base+0x1b30>
   21f60:	ldr	r3, [r5, #4]
   21f64:	ldr	r1, [r4, #12]
   21f68:	ldrh	r2, [r5, #8]
   21f6c:	ldr	r3, [r3, #4]
   21f70:	add	r3, r3, r1
   21f74:	add	r3, r3, #1
   21f78:	add	ip, r3, ip
   21f7c:	str	ip, [r4, #12]
   21f80:	cmp	r2, #4
   21f84:	ldrls	pc, [pc, r2, lsl #2]
   21f88:	b	21fc0 <__flatcc_fb_gen_c_verifier@@Base+0x1bac>
   21f8c:			; <UNDEFINED> instruction: 0x00021fb0
   21f90:			; <UNDEFINED> instruction: 0x00021fb0
   21f94:	andeq	r1, r2, r0, asr #31
   21f98:	andeq	r1, r2, r0, lsr #31
   21f9c:	andeq	r1, r2, r0, lsr #31
   21fa0:	ldr	r3, [r4, #8]
   21fa4:	add	r3, r3, #1
   21fa8:	str	r3, [r4, #8]
   21fac:	pop	{r4, r5, r6, pc}
   21fb0:	ldr	r3, [r4, #4]
   21fb4:	add	r3, r3, #1
   21fb8:	str	r3, [r4, #4]
   21fbc:	pop	{r4, r5, r6, pc}
   21fc0:	pop	{r4, r5, r6, pc}
   21fc4:	pop	{r4, r5, r6, pc}
   21fc8:	mov	ip, r3
   21fcc:	b	21f60 <__flatcc_fb_gen_c_verifier@@Base+0x1b4c>
   21fd0:	push	{r4, r5, r6, r7, lr}
   21fd4:	mov	r4, r0
   21fd8:	sub	sp, sp, #260	; 0x104
   21fdc:	mov	r5, #0
   21fe0:	mov	r0, r1
   21fe4:	add	r1, sp, #52	; 0x34
   21fe8:	add	r7, r0, #4
   21fec:	str	r5, [sp, #28]
   21ff0:	str	r5, [sp, #24]
   21ff4:	str	r5, [sp, #32]
   21ff8:	str	r5, [sp, #36]	; 0x24
   21ffc:	str	r5, [sp, #40]	; 0x28
   22000:	str	r5, [sp, #44]	; 0x2c
   22004:	str	r5, [sp, #48]	; 0x30
   22008:	bl	17014 <__flatcc_fb_copy_scope@@Base>
   2200c:	ldr	r3, [r4, #208]	; 0xd0
   22010:	mov	r0, r7
   22014:	add	r2, sp, #12
   22018:	ldr	r1, [pc, #560]	; 22250 <__flatcc_fb_gen_c_verifier@@Base+0x1e3c>
   2201c:	str	r5, [sp, #12]
   22020:	str	r5, [sp, #20]
   22024:	str	r3, [sp, #16]
   22028:	bl	29dcc <fb_symbol_table_visit@@Base>
   2202c:	ldr	r5, [sp, #12]
   22030:	cmp	r5, #0
   22034:	beq	221e0 <__flatcc_fb_gen_c_verifier@@Base+0x1dcc>
   22038:	lsl	r0, r5, #4
   2203c:	bl	14040 <malloc@plt>
   22040:	subs	r6, r0, #0
   22044:	beq	221e8 <__flatcc_fb_gen_c_verifier@@Base+0x1dd4>
   22048:	add	r2, sp, #12
   2204c:	mov	r0, r7
   22050:	ldr	r1, [pc, #508]	; 22254 <__flatcc_fb_gen_c_verifier@@Base+0x1e40>
   22054:	str	r6, [sp, #20]
   22058:	bl	29dcc <fb_symbol_table_visit@@Base>
   2205c:	ldr	r3, [pc, #500]	; 22258 <__flatcc_fb_gen_c_verifier@@Base+0x1e44>
   22060:	mov	r2, #16
   22064:	ldr	r1, [sp, #12]
   22068:	mov	r0, r6
   2206c:	bl	14118 <qsort@plt>
   22070:	str	r6, [sp, #24]
   22074:	ldr	r2, [r4, #208]	; 0xd0
   22078:	ldr	r1, [pc, #476]	; 2225c <__flatcc_fb_gen_c_verifier@@Base+0x1e48>
   2207c:	ldr	r0, [pc, #476]	; 22260 <__flatcc_fb_gen_c_verifier@@Base+0x1e4c>
   22080:	mov	ip, #3
   22084:	add	r3, sp, #52	; 0x34
   22088:	ldr	r2, [r2, #160]	; 0xa0
   2208c:	mov	r6, #0
   22090:	str	r1, [sp, #28]
   22094:	str	r0, [sp, #32]
   22098:	ldr	r1, [pc, #452]	; 22264 <__flatcc_fb_gen_c_verifier@@Base+0x1e50>
   2209c:	mov	r0, r4
   220a0:	str	ip, [sp, #40]	; 0x28
   220a4:	str	r6, [sp, #36]	; 0x24
   220a8:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   220ac:	ldr	r3, [r4, #220]	; 0xdc
   220b0:	ldr	r1, [pc, #432]	; 22268 <__flatcc_fb_gen_c_verifier@@Base+0x1e54>
   220b4:	add	r3, r3, #2
   220b8:	str	r3, [r4, #220]	; 0xdc
   220bc:	mov	r0, r4
   220c0:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   220c4:	ldr	r3, [r4, #220]	; 0xdc
   220c8:	cmp	r3, r6
   220cc:	beq	22228 <__flatcc_fb_gen_c_verifier@@Base+0x1e14>
   220d0:	cmp	r3, #1
   220d4:	streq	r6, [r4, #220]	; 0xdc
   220d8:	beq	22228 <__flatcc_fb_gen_c_verifier@@Base+0x1e14>
   220dc:	sub	r3, r3, #2
   220e0:	str	r3, [r4, #220]	; 0xdc
   220e4:	ldr	r1, [pc, #384]	; 2226c <__flatcc_fb_gen_c_verifier@@Base+0x1e58>
   220e8:	mov	r0, r4
   220ec:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   220f0:	ldr	r3, [r4, #220]	; 0xdc
   220f4:	cmp	r5, #0
   220f8:	add	r3, r3, #1
   220fc:	str	r3, [r4, #220]	; 0xdc
   22100:	beq	221a8 <__flatcc_fb_gen_c_verifier@@Base+0x1d94>
   22104:	ldr	r1, [pc, #356]	; 22270 <__flatcc_fb_gen_c_verifier@@Base+0x1e5c>
   22108:	mov	r0, r4
   2210c:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22110:	ldr	r1, [pc, #348]	; 22274 <__flatcc_fb_gen_c_verifier@@Base+0x1e60>
   22114:	mov	r0, r4
   22118:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   2211c:	ldr	r1, [pc, #340]	; 22278 <__flatcc_fb_gen_c_verifier@@Base+0x1e64>
   22120:	mov	r0, r4
   22124:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22128:	ldr	r1, [pc, #332]	; 2227c <__flatcc_fb_gen_c_verifier@@Base+0x1e68>
   2212c:	mov	r0, r4
   22130:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22134:	ldr	r1, [pc, #324]	; 22280 <__flatcc_fb_gen_c_verifier@@Base+0x1e6c>
   22138:	mov	r0, r4
   2213c:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22140:	sub	r3, r5, #1
   22144:	mov	r2, r6
   22148:	add	r1, sp, #24
   2214c:	mov	r0, r4
   22150:	str	r6, [sp]
   22154:	bl	20c80 <__flatcc_fb_gen_c_verifier@@Base+0x86c>
   22158:	ldr	r1, [pc, #292]	; 22284 <__flatcc_fb_gen_c_verifier@@Base+0x1e70>
   2215c:	mov	r0, r4
   22160:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22164:	ldr	r3, [r4, #220]	; 0xdc
   22168:	cmp	r3, #0
   2216c:	beq	2223c <__flatcc_fb_gen_c_verifier@@Base+0x1e28>
   22170:	sub	r3, r3, #1
   22174:	str	r3, [r4, #220]	; 0xdc
   22178:	ldr	r1, [pc, #264]	; 22288 <__flatcc_fb_gen_c_verifier@@Base+0x1e74>
   2217c:	mov	r0, r4
   22180:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22184:	mov	r0, r4
   22188:	ldr	r1, [pc, #236]	; 2227c <__flatcc_fb_gen_c_verifier@@Base+0x1e68>
   2218c:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22190:	ldr	r0, [sp, #24]
   22194:	cmp	r0, #0
   22198:	beq	221a0 <__flatcc_fb_gen_c_verifier@@Base+0x1d8c>
   2219c:	bl	13fd4 <free@plt>
   221a0:	add	sp, sp, #260	; 0x104
   221a4:	pop	{r4, r5, r6, r7, pc}
   221a8:	ldr	r1, [pc, #220]	; 2228c <__flatcc_fb_gen_c_verifier@@Base+0x1e78>
   221ac:	mov	r0, r4
   221b0:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   221b4:	ldr	r1, [pc, #212]	; 22290 <__flatcc_fb_gen_c_verifier@@Base+0x1e7c>
   221b8:	mov	r0, r4
   221bc:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   221c0:	ldr	r3, [r4, #220]	; 0xdc
   221c4:	cmp	r3, #0
   221c8:	bne	22170 <__flatcc_fb_gen_c_verifier@@Base+0x1d5c>
   221cc:	ldr	r3, [pc, #192]	; 22294 <__flatcc_fb_gen_c_verifier@@Base+0x1e80>
   221d0:	ldr	r2, [pc, #192]	; 22298 <__flatcc_fb_gen_c_verifier@@Base+0x1e84>
   221d4:	ldr	r1, [pc, #192]	; 2229c <__flatcc_fb_gen_c_verifier@@Base+0x1e88>
   221d8:	ldr	r0, [pc, #192]	; 222a0 <__flatcc_fb_gen_c_verifier@@Base+0x1e8c>
   221dc:	bl	14148 <__assert_fail@plt>
   221e0:	str	r5, [sp, #24]
   221e4:	b	22074 <__flatcc_fb_gen_c_verifier@@Base+0x1c60>
   221e8:	cmp	r5, #0
   221ec:	str	r6, [sp, #24]
   221f0:	ble	22074 <__flatcc_fb_gen_c_verifier@@Base+0x1c60>
   221f4:	ldr	r1, [pc, #168]	; 222a4 <__flatcc_fb_gen_c_verifier@@Base+0x1e90>
   221f8:	ldr	r2, [pc, #168]	; 222a8 <__flatcc_fb_gen_c_verifier@@Base+0x1e94>
   221fc:	ldr	r3, [pc, #168]	; 222ac <__flatcc_fb_gen_c_verifier@@Base+0x1e98>
   22200:	ldr	r0, [r1]
   22204:	str	r2, [sp]
   22208:	ldr	r1, [pc, #160]	; 222b0 <__flatcc_fb_gen_c_verifier@@Base+0x1e9c>
   2220c:	ldr	r2, [pc, #136]	; 2229c <__flatcc_fb_gen_c_verifier@@Base+0x1e88>
   22210:	bl	14094 <fprintf@plt>
   22214:	ldr	r3, [pc, #120]	; 22294 <__flatcc_fb_gen_c_verifier@@Base+0x1e80>
   22218:	ldr	r2, [pc, #140]	; 222ac <__flatcc_fb_gen_c_verifier@@Base+0x1e98>
   2221c:	ldr	r1, [pc, #120]	; 2229c <__flatcc_fb_gen_c_verifier@@Base+0x1e88>
   22220:	ldr	r0, [pc, #140]	; 222b4 <__flatcc_fb_gen_c_verifier@@Base+0x1ea0>
   22224:	bl	14148 <__assert_fail@plt>
   22228:	ldr	r3, [pc, #100]	; 22294 <__flatcc_fb_gen_c_verifier@@Base+0x1e80>
   2222c:	mov	r2, #1152	; 0x480
   22230:	ldr	r1, [pc, #100]	; 2229c <__flatcc_fb_gen_c_verifier@@Base+0x1e88>
   22234:	ldr	r0, [pc, #100]	; 222a0 <__flatcc_fb_gen_c_verifier@@Base+0x1e8c>
   22238:	bl	14148 <__assert_fail@plt>
   2223c:	ldr	r3, [pc, #80]	; 22294 <__flatcc_fb_gen_c_verifier@@Base+0x1e80>
   22240:	ldr	r2, [pc, #112]	; 222b8 <__flatcc_fb_gen_c_verifier@@Base+0x1ea4>
   22244:	ldr	r1, [pc, #80]	; 2229c <__flatcc_fb_gen_c_verifier@@Base+0x1e88>
   22248:	ldr	r0, [pc, #80]	; 222a0 <__flatcc_fb_gen_c_verifier@@Base+0x1e8c>
   2224c:	bl	14148 <__assert_fail@plt>
   22250:			; <UNDEFINED> instruction: 0x00021eb8
   22254:	andeq	r1, r2, r8, ror #28
   22258:	andeq	r1, r2, r8, lsr lr
   2225c:	andeq	r2, r2, r4, lsr #10
   22260:	andeq	r0, r2, r8, asr #16
   22264:	ldrdeq	r6, [r5], -r8
   22268:	andeq	r7, r5, r8, asr #7
   2226c:	andeq	r9, r5, r0, lsr r9
   22270:	andeq	r7, r5, r0, asr r4
   22274:	andeq	r7, r5, r0, ror r4
   22278:	andeq	r7, r5, r4, lsl #9
   2227c:	andeq	lr, r4, ip, asr #2
   22280:	andeq	r6, r5, r4, lsl lr
   22284:	muleq	r5, r0, r2
   22288:	andeq	r6, r5, r8, lsl sp
   2228c:	strdeq	r7, [r5], -ip
   22290:	andeq	r7, r5, r0, lsr r4
   22294:	andeq	r6, r5, ip, lsr #21
   22298:	andeq	r0, r0, r5, lsl #9
   2229c:			; <UNDEFINED> instruction: 0x00056cb4
   222a0:	andeq	r6, r5, ip, lsl #26
   222a4:	andeq	pc, r6, r8, lsr #1
   222a8:	andeq	r7, r5, ip, lsl #7
   222ac:	andeq	r0, r0, r4, ror r4
   222b0:	ldrdeq	r4, [r4], -ip
   222b4:	andeq	sp, r4, r4, ror r2
   222b8:	andeq	r0, r0, lr, lsl #9
   222bc:	ldrh	r3, [r1, #8]
   222c0:	cmp	r3, #4
   222c4:	bxhi	lr
   222c8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   222cc:	mov	r6, r0
   222d0:	ldr	r0, [r0, #40]	; 0x28
   222d4:	mov	r7, r1
   222d8:	add	r0, r0, #172	; 0xac
   222dc:	ldr	r1, [r1, #16]
   222e0:	bl	293b4 <ptr_set_find_item@@Base>
   222e4:	cmp	r0, #0
   222e8:	beq	223bc <__flatcc_fb_gen_c_verifier@@Base+0x1fa8>
   222ec:	ldr	r3, [r6]
   222f0:	ldr	r9, [r6, #36]	; 0x24
   222f4:	cmp	r3, #0
   222f8:	moveq	r3, r9
   222fc:	beq	22344 <__flatcc_fb_gen_c_verifier@@Base+0x1f30>
   22300:	ldr	r3, [r7, #12]
   22304:	ldr	r5, [r3]
   22308:	mov	r3, r9
   2230c:	cmp	r5, #0
   22310:	beq	22344 <__flatcc_fb_gen_c_verifier@@Base+0x1f30>
   22314:	mov	r8, #46	; 0x2e
   22318:	ldr	r2, [r5, #4]
   2231c:	mov	r0, r3
   22320:	ldm	r2, {r1, r4}
   22324:	mov	r2, r4
   22328:	bl	13fe0 <memcpy@plt>
   2232c:	add	r4, r0, r4
   22330:	add	r3, r4, #1
   22334:	strb	r8, [r4]
   22338:	ldr	r5, [r5]
   2233c:	cmp	r5, #0
   22340:	bne	22318 <__flatcc_fb_gen_c_verifier@@Base+0x1f04>
   22344:	ldr	r2, [r7, #4]
   22348:	mov	r0, r3
   2234c:	ldm	r2, {r1, r4}
   22350:	mov	r2, r4
   22354:	bl	13fe0 <memcpy@plt>
   22358:	mov	r2, #0
   2235c:	strb	r2, [r0, r4]
   22360:	ldrh	r2, [r7, #8]
   22364:	add	r3, r0, r4
   22368:	add	r3, r3, #1
   2236c:	str	r3, [r6, #36]	; 0x24
   22370:	cmp	r2, #4
   22374:	ldrls	pc, [pc, r2, lsl #2]
   22378:	b	223b8 <__flatcc_fb_gen_c_verifier@@Base+0x1fa4>
   2237c:	andeq	r2, r2, r4, lsr #7
   22380:	andeq	r2, r2, r4, lsr #7
   22384:			; <UNDEFINED> instruction: 0x000223b8
   22388:	muleq	r2, r0, r3
   2238c:	muleq	r2, r0, r3
   22390:	ldr	r3, [r6, #32]
   22394:	add	r2, r3, #8
   22398:	stm	r3, {r7, r9}
   2239c:	str	r2, [r6, #32]
   223a0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   223a4:	ldr	r3, [r6, #28]
   223a8:	add	r2, r3, #8
   223ac:	stm	r3, {r7, r9}
   223b0:	str	r2, [r6, #28]
   223b4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   223b8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   223bc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   223c0:	ldr	r1, [r1, #4]
   223c4:	ldr	r0, [r0, #4]
   223c8:	b	13fbc <strcmp@plt>
   223cc:	push	{r4, r5, r6, lr}
   223d0:	sub	sp, sp, #8
   223d4:	mov	r4, r0
   223d8:	mov	r5, r1
   223dc:	mov	r6, r2
   223e0:	ldr	r1, [pc, #256]	; 224e8 <__flatcc_fb_gen_c_verifier@@Base+0x20d4>
   223e4:	ldr	r2, [sp, #24]
   223e8:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   223ec:	mov	r0, r4
   223f0:	ldr	r1, [pc, #244]	; 224ec <__flatcc_fb_gen_c_verifier@@Base+0x20d8>
   223f4:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   223f8:	ldr	r3, [r4, #220]	; 0xdc
   223fc:	add	r3, r3, #1
   22400:	str	r3, [r4, #220]	; 0xdc
   22404:	ldr	r3, [r5, #40]	; 0x28
   22408:	sub	r3, r3, #1
   2240c:	cmp	r3, #8
   22410:	ldrls	pc, [pc, r3, lsl #2]
   22414:	b	224a0 <__flatcc_fb_gen_c_verifier@@Base+0x208c>
   22418:	andeq	r2, r2, ip, lsl #9
   2241c:	andeq	r2, r2, ip, lsl #9
   22420:	andeq	r2, r2, ip, lsl #9
   22424:	andeq	r2, r2, ip, lsl #9
   22428:	andeq	r2, r2, ip, lsl #9
   2242c:	andeq	r2, r2, ip, lsr r4
   22430:	andeq	r2, r2, ip, lsr r4
   22434:	andeq	r2, r2, ip, lsr r4
   22438:	andeq	r2, r2, ip, lsr r4
   2243c:	ldrd	r2, [r6, #48]	; 0x30
   22440:	mov	r0, r4
   22444:	cmp	r2, #0
   22448:	sbcs	r1, r3, #0
   2244c:	ldrlt	r1, [pc, #156]	; 224f0 <__flatcc_fb_gen_c_verifier@@Base+0x20dc>
   22450:	ldrge	r1, [pc, #156]	; 224f4 <__flatcc_fb_gen_c_verifier@@Base+0x20e0>
   22454:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22458:	ldr	r3, [r4, #220]	; 0xdc
   2245c:	cmp	r3, #0
   22460:	beq	224d4 <__flatcc_fb_gen_c_verifier@@Base+0x20c0>
   22464:	sub	r3, r3, #1
   22468:	str	r3, [r4, #220]	; 0xdc
   2246c:	ldr	r1, [pc, #132]	; 224f8 <__flatcc_fb_gen_c_verifier@@Base+0x20e4>
   22470:	mov	r0, r4
   22474:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22478:	ldr	r3, [r4, #220]	; 0xdc
   2247c:	add	r3, r3, #1
   22480:	str	r3, [r4, #220]	; 0xdc
   22484:	add	sp, sp, #8
   22488:	pop	{r4, r5, r6, pc}
   2248c:	ldrd	r2, [r6, #48]	; 0x30
   22490:	ldr	r1, [pc, #92]	; 224f4 <__flatcc_fb_gen_c_verifier@@Base+0x20e0>
   22494:	mov	r0, r4
   22498:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   2249c:	b	22458 <__flatcc_fb_gen_c_verifier@@Base+0x2044>
   224a0:	ldr	r1, [pc, #84]	; 224fc <__flatcc_fb_gen_c_verifier@@Base+0x20e8>
   224a4:	ldr	r2, [pc, #84]	; 22500 <__flatcc_fb_gen_c_verifier@@Base+0x20ec>
   224a8:	ldr	r3, [pc, #84]	; 22504 <__flatcc_fb_gen_c_verifier@@Base+0x20f0>
   224ac:	ldr	r0, [r1]
   224b0:	str	r2, [sp]
   224b4:	ldr	r1, [pc, #76]	; 22508 <__flatcc_fb_gen_c_verifier@@Base+0x20f4>
   224b8:	ldr	r2, [pc, #76]	; 2250c <__flatcc_fb_gen_c_verifier@@Base+0x20f8>
   224bc:	bl	14094 <fprintf@plt>
   224c0:	ldr	r3, [pc, #72]	; 22510 <__flatcc_fb_gen_c_verifier@@Base+0x20fc>
   224c4:	ldr	r2, [pc, #56]	; 22504 <__flatcc_fb_gen_c_verifier@@Base+0x20f0>
   224c8:	ldr	r1, [pc, #60]	; 2250c <__flatcc_fb_gen_c_verifier@@Base+0x20f8>
   224cc:	ldr	r0, [pc, #64]	; 22514 <__flatcc_fb_gen_c_verifier@@Base+0x2100>
   224d0:	bl	14148 <__assert_fail@plt>
   224d4:	ldr	r3, [pc, #60]	; 22518 <__flatcc_fb_gen_c_verifier@@Base+0x2104>
   224d8:	ldr	r2, [pc, #60]	; 2251c <__flatcc_fb_gen_c_verifier@@Base+0x2108>
   224dc:	ldr	r1, [pc, #40]	; 2250c <__flatcc_fb_gen_c_verifier@@Base+0x20f8>
   224e0:	ldr	r0, [pc, #56]	; 22520 <__flatcc_fb_gen_c_verifier@@Base+0x210c>
   224e4:	bl	14148 <__assert_fail@plt>
   224e8:	muleq	r5, r0, r4
   224ec:	andeq	r7, r5, r0, ror #9
   224f0:	andeq	r7, r5, r0, lsr #10
   224f4:	strdeq	r7, [r5], -r4
   224f8:	andeq	r7, r5, ip, lsr r2
   224fc:	andeq	pc, r6, r8, lsr #1
   22500:	andeq	r7, r5, ip, asr #10
   22504:	andeq	r0, r0, r6, asr #5
   22508:	ldrdeq	r4, [r4], -ip
   2250c:			; <UNDEFINED> instruction: 0x00056cb4
   22510:	andeq	r6, r5, r4, asr #21
   22514:	andeq	sp, r4, r4, ror r2
   22518:	ldrdeq	r6, [r5], -ip
   2251c:	andeq	r0, r0, pc, asr #5
   22520:	andeq	r6, r5, ip, lsl #26
   22524:	push	{r4, r5, lr}
   22528:	sub	sp, sp, #228	; 0xe4
   2252c:	mov	r4, r0
   22530:	mov	r5, r2
   22534:	ldr	r1, [pc, #184]	; 225f4 <__flatcc_fb_gen_c_verifier@@Base+0x21e0>
   22538:	ldr	r2, [sp, #240]	; 0xf0
   2253c:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22540:	mov	r0, r4
   22544:	ldr	r1, [pc, #172]	; 225f8 <__flatcc_fb_gen_c_verifier@@Base+0x21e4>
   22548:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   2254c:	ldrh	r2, [r5, #8]
   22550:	ldr	r3, [r4, #220]	; 0xdc
   22554:	sub	r2, r2, #3
   22558:	add	r3, r3, #1
   2255c:	cmp	r2, #1
   22560:	str	r3, [r4, #220]	; 0xdc
   22564:	bhi	225cc <__flatcc_fb_gen_c_verifier@@Base+0x21b8>
   22568:	mov	r2, #220	; 0xdc
   2256c:	mov	r1, #0
   22570:	add	r0, sp, #4
   22574:	bl	140ac <memset@plt>
   22578:	add	r2, sp, #4
   2257c:	mov	r1, r5
   22580:	ldr	r0, [r5, #12]
   22584:	bl	170c4 <__flatcc_fb_scoped_symbol_name@@Base>
   22588:	add	r2, sp, #4
   2258c:	ldr	r1, [pc, #104]	; 225fc <__flatcc_fb_gen_c_verifier@@Base+0x21e8>
   22590:	mov	r0, r4
   22594:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22598:	ldr	r3, [r4, #220]	; 0xdc
   2259c:	cmp	r3, #0
   225a0:	beq	225e0 <__flatcc_fb_gen_c_verifier@@Base+0x21cc>
   225a4:	sub	r3, r3, #1
   225a8:	str	r3, [r4, #220]	; 0xdc
   225ac:	ldr	r1, [pc, #76]	; 22600 <__flatcc_fb_gen_c_verifier@@Base+0x21ec>
   225b0:	mov	r0, r4
   225b4:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   225b8:	ldr	r3, [r4, #220]	; 0xdc
   225bc:	add	r3, r3, #1
   225c0:	str	r3, [r4, #220]	; 0xdc
   225c4:	add	sp, sp, #228	; 0xe4
   225c8:	pop	{r4, r5, pc}
   225cc:	ldr	r3, [pc, #48]	; 22604 <__flatcc_fb_gen_c_verifier@@Base+0x21f0>
   225d0:	ldr	r2, [pc, #48]	; 22608 <__flatcc_fb_gen_c_verifier@@Base+0x21f4>
   225d4:	ldr	r1, [pc, #48]	; 2260c <__flatcc_fb_gen_c_verifier@@Base+0x21f8>
   225d8:	ldr	r0, [pc, #48]	; 22610 <__flatcc_fb_gen_c_verifier@@Base+0x21fc>
   225dc:	bl	14148 <__assert_fail@plt>
   225e0:	ldr	r3, [pc, #44]	; 22614 <__flatcc_fb_gen_c_verifier@@Base+0x2200>
   225e4:	ldr	r2, [pc, #44]	; 22618 <__flatcc_fb_gen_c_verifier@@Base+0x2204>
   225e8:	ldr	r1, [pc, #28]	; 2260c <__flatcc_fb_gen_c_verifier@@Base+0x21f8>
   225ec:	ldr	r0, [pc, #40]	; 2261c <__flatcc_fb_gen_c_verifier@@Base+0x2208>
   225f0:	bl	14148 <__assert_fail@plt>
   225f4:	andeq	r7, r5, r0, ror r5
   225f8:	andeq	r7, r5, r0, ror #9
   225fc:			; <UNDEFINED> instruction: 0x000575b4
   22600:	andeq	r7, r5, ip, lsr r2
   22604:	andeq	r6, r5, ip, ror #21
   22608:	ldrdeq	r0, [r0], -r9
   2260c:			; <UNDEFINED> instruction: 0x00056cb4
   22610:	andeq	r4, r4, r0, lsr r4
   22614:	andeq	r6, r5, r4, lsl #22
   22618:	andeq	r0, r0, r6, ror #5
   2261c:	andeq	r6, r5, ip, lsl #26
   22620:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22624:	mov	r6, r2
   22628:	sub	sp, sp, #500	; 0x1f4
   2262c:	mov	r5, r1
   22630:	mov	r2, #220	; 0xdc
   22634:	mov	r1, #0
   22638:	mov	r4, r0
   2263c:	add	r0, sp, #276	; 0x114
   22640:	mov	r7, r3
   22644:	bl	140ac <memset@plt>
   22648:	ldr	r0, [r6]
   2264c:	add	r1, sp, #72	; 0x48
   22650:	bl	17014 <__flatcc_fb_copy_scope@@Base>
   22654:	ldrh	r3, [r5]
   22658:	mov	r2, r3
   2265c:	str	r3, [sp, #16]
   22660:	ldrh	r3, [r7, #24]
   22664:	sub	r2, r2, #1
   22668:	clz	r2, r2
   2266c:	cmp	r3, #15
   22670:	lsr	r2, r2, #5
   22674:	movhi	r5, #0
   22678:	str	r2, [sp, #52]	; 0x34
   2267c:	movhi	r2, r5
   22680:	bhi	2269c <__flatcc_fb_gen_c_verifier@@Base+0x2288>
   22684:	ldr	r2, [pc, #2984]	; 23234 <__flatcc_fb_gen_c_verifier@@Base+0x2e20>
   22688:	mov	r1, #1
   2268c:	ands	r2, r2, r1, lsl r3
   22690:	movne	r2, r1
   22694:	moveq	r2, #0
   22698:	mov	r5, r2
   2269c:	sub	r3, r3, #7
   226a0:	cmp	r3, #8
   226a4:	ldrls	pc, [pc, r3, lsl #2]
   226a8:	b	22b88 <__flatcc_fb_gen_c_verifier@@Base+0x2774>
   226ac:	andeq	r2, r2, r8, asr #20
   226b0:	andeq	r2, r2, r4, lsl sl
   226b4:	ldrdeq	r2, [r2], -r0
   226b8:	ldrdeq	r2, [r2], -r0
   226bc:	andeq	r2, r2, r8, lsl #23
   226c0:	andeq	r2, r2, r8, lsl #23
   226c4:	andeq	r2, r2, r8, lsl #23
   226c8:	andeq	r2, r2, r4, lsl fp
   226cc:	andeq	r2, r2, r4, lsl fp
   226d0:	mov	r3, #0
   226d4:	str	r3, [sp, #24]
   226d8:	mov	r9, r3
   226dc:	str	r3, [sp, #20]
   226e0:	mov	r6, r3
   226e4:	str	r3, [sp, #48]	; 0x30
   226e8:	mov	r3, #1
   226ec:	str	r3, [sp, #40]	; 0x28
   226f0:	mov	r3, #0
   226f4:	str	r3, [sp, #32]
   226f8:	str	r3, [sp, #64]	; 0x40
   226fc:	mov	fp, r3
   22700:	and	r3, r5, #1
   22704:	str	r3, [sp, #44]	; 0x2c
   22708:	ldr	r3, [sp, #536]	; 0x218
   2270c:	cmp	r3, #0
   22710:	beq	22abc <__flatcc_fb_gen_c_verifier@@Base+0x26a8>
   22714:	ldr	r3, [sp, #44]	; 0x2c
   22718:	cmp	r3, #0
   2271c:	beq	231cc <__flatcc_fb_gen_c_verifier@@Base+0x2db8>
   22720:	mov	r6, #0
   22724:	mov	r5, r6
   22728:	mov	r3, #1
   2272c:	str	r6, [sp, #56]	; 0x38
   22730:	str	r6, [sp, #60]	; 0x3c
   22734:	str	r3, [sp, #68]	; 0x44
   22738:	cmp	fp, #1
   2273c:	beq	22af8 <__flatcc_fb_gen_c_verifier@@Base+0x26e4>
   22740:	ldr	r8, [pc, #2800]	; 23238 <__flatcc_fb_gen_c_verifier@@Base+0x2e24>
   22744:	cmp	fp, #2
   22748:	str	r8, [sp, #36]	; 0x24
   2274c:	beq	228e0 <__flatcc_fb_gen_c_verifier@@Base+0x24cc>
   22750:	ldr	r3, [sp, #536]	; 0x218
   22754:	orr	sl, r6, r9
   22758:	cmp	r6, #0
   2275c:	orr	sl, sl, r3
   22760:	bne	22ba8 <__flatcc_fb_gen_c_verifier@@Base+0x2794>
   22764:	cmp	r5, #0
   22768:	moveq	r6, r5
   2276c:	beq	22800 <__flatcc_fb_gen_c_verifier@@Base+0x23ec>
   22770:	cmp	sl, #0
   22774:	beq	22c08 <__flatcc_fb_gen_c_verifier@@Base+0x27f4>
   22778:	ldrd	r2, [r7, #88]	; 0x58
   2277c:	ldrsh	r5, [r7, #74]	; 0x4a
   22780:	mvn	r0, #0
   22784:	orrs	r1, r2, r3
   22788:	strd	r2, [sp, #24]
   2278c:	mov	r1, #0
   22790:	beq	2279c <__flatcc_fb_gen_c_verifier@@Base+0x2388>
   22794:	bl	42490 <fb_value_set_visit@@Base+0x668>
   22798:	ldrd	r2, [sp, #24]
   2279c:	strd	r0, [sp, #8]
   227a0:	str	r5, [sp]
   227a4:	ldr	r1, [pc, #2704]	; 2323c <__flatcc_fb_gen_c_verifier@@Base+0x2e28>
   227a8:	mov	r0, r4
   227ac:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   227b0:	ldr	r1, [pc, #2696]	; 23240 <__flatcc_fb_gen_c_verifier@@Base+0x2e2c>
   227b4:	mov	r0, r4
   227b8:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   227bc:	ldr	r1, [pc, #2688]	; 23244 <__flatcc_fb_gen_c_verifier@@Base+0x2e30>
   227c0:	mov	r0, r4
   227c4:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   227c8:	ldr	r3, [r4, #220]	; 0xdc
   227cc:	cmp	r6, #0
   227d0:	add	r3, r3, #1
   227d4:	str	r3, [r4, #220]	; 0xdc
   227d8:	moveq	r5, #1
   227dc:	bne	22c2c <__flatcc_fb_gen_c_verifier@@Base+0x2818>
   227e0:	cmp	sl, #0
   227e4:	moveq	r3, #0
   227e8:	andne	r3, r5, #1
   227ec:	cmp	r3, #0
   227f0:	beq	22800 <__flatcc_fb_gen_c_verifier@@Base+0x23ec>
   227f4:	ldr	r1, [pc, #2636]	; 23248 <__flatcc_fb_gen_c_verifier@@Base+0x2e34>
   227f8:	mov	r0, r4
   227fc:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22800:	ldr	r3, [sp, #16]
   22804:	cmp	r3, #1
   22808:	beq	22960 <__flatcc_fb_gen_c_verifier@@Base+0x254c>
   2280c:	eor	r3, r5, #1
   22810:	tst	r3, r9
   22814:	bne	22dc8 <__flatcc_fb_gen_c_verifier@@Base+0x29b4>
   22818:	cmp	r6, #0
   2281c:	bne	22978 <__flatcc_fb_gen_c_verifier@@Base+0x2564>
   22820:	cmp	r9, #0
   22824:	bne	22dec <__flatcc_fb_gen_c_verifier@@Base+0x29d8>
   22828:	ldr	r3, [sp, #40]	; 0x28
   2282c:	cmp	r3, #0
   22830:	bne	22e00 <__flatcc_fb_gen_c_verifier@@Base+0x29ec>
   22834:	ldr	r3, [sp, #32]
   22838:	cmp	r3, #0
   2283c:	bne	22e64 <__flatcc_fb_gen_c_verifier@@Base+0x2a50>
   22840:	ldr	r3, [sp, #20]
   22844:	cmp	r3, #0
   22848:	bne	22efc <__flatcc_fb_gen_c_verifier@@Base+0x2ae8>
   2284c:	ldr	r3, [sp, #56]	; 0x38
   22850:	cmp	r3, #0
   22854:	beq	22e94 <__flatcc_fb_gen_c_verifier@@Base+0x2a80>
   22858:	ldr	r3, [sp, #60]	; 0x3c
   2285c:	ldrd	r0, [r7, #96]	; 0x60
   22860:	cmp	r3, #0
   22864:	add	r3, sp, #276	; 0x114
   22868:	ldr	r2, [r7, #112]	; 0x70
   2286c:	strd	r0, [sp]
   22870:	str	r3, [sp, #8]
   22874:	ldrne	r1, [pc, #2512]	; 2324c <__flatcc_fb_gen_c_verifier@@Base+0x2e38>
   22878:	ldrne	r3, [sp, #20]
   2287c:	ldreq	r3, [sp, #60]	; 0x3c
   22880:	ldreq	r1, [pc, #2504]	; 23250 <__flatcc_fb_gen_c_verifier@@Base+0x2e3c>
   22884:	mov	r0, r4
   22888:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   2288c:	cmp	r5, #0
   22890:	beq	228d4 <__flatcc_fb_gen_c_verifier@@Base+0x24c0>
   22894:	cmp	sl, #0
   22898:	beq	22e10 <__flatcc_fb_gen_c_verifier@@Base+0x29fc>
   2289c:	ldr	r1, [pc, #2480]	; 23254 <__flatcc_fb_gen_c_verifier@@Base+0x2e40>
   228a0:	mov	r0, r4
   228a4:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   228a8:	ldr	r3, [r4, #220]	; 0xdc
   228ac:	cmp	r3, #0
   228b0:	beq	22e80 <__flatcc_fb_gen_c_verifier@@Base+0x2a6c>
   228b4:	sub	r3, r3, #1
   228b8:	ldr	r1, [pc, #2456]	; 23258 <__flatcc_fb_gen_c_verifier@@Base+0x2e44>
   228bc:	mov	r0, r4
   228c0:	str	r3, [r4, #220]	; 0xdc
   228c4:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   228c8:	ldr	r1, [pc, #2444]	; 2325c <__flatcc_fb_gen_c_verifier@@Base+0x2e48>
   228cc:	mov	r0, r4
   228d0:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   228d4:	cmp	fp, #1
   228d8:	bne	22d4c <__flatcc_fb_gen_c_verifier@@Base+0x2938>
   228dc:	mov	fp, #2
   228e0:	ldr	r3, [r4, #220]	; 0xdc
   228e4:	cmp	r3, #0
   228e8:	beq	23188 <__flatcc_fb_gen_c_verifier@@Base+0x2d74>
   228ec:	sub	r3, r3, #1
   228f0:	str	r3, [r4, #220]	; 0xdc
   228f4:	ldr	r1, [pc, #2404]	; 23260 <__flatcc_fb_gen_c_verifier@@Base+0x2e4c>
   228f8:	mov	r0, r4
   228fc:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22900:	ldr	r1, [r7, #104]	; 0x68
   22904:	ldr	r3, [r4, #220]	; 0xdc
   22908:	add	r2, sp, #276	; 0x114
   2290c:	add	r3, r3, #1
   22910:	ldr	r0, [r1, #12]
   22914:	str	r3, [r4, #220]	; 0xdc
   22918:	bl	170c4 <__flatcc_fb_scoped_symbol_name@@Base>
   2291c:	ldr	r3, [r7, #104]	; 0x68
   22920:	mov	r5, #0
   22924:	ldr	r1, [pc, #2360]	; 23264 <__flatcc_fb_gen_c_verifier@@Base+0x2e50>
   22928:	ldrh	r3, [r3, #8]
   2292c:	mov	r0, r4
   22930:	mov	r6, r5
   22934:	cmp	r3, r5
   22938:	ldr	r3, [sp, #20]
   2293c:	moveq	r3, #1
   22940:	str	r3, [sp, #20]
   22944:	ldr	r3, [sp, #536]	; 0x218
   22948:	movne	r9, #1
   2294c:	orr	sl, r3, r9
   22950:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22954:	ldr	r3, [sp, #16]
   22958:	cmp	r3, #1
   2295c:	bne	2280c <__flatcc_fb_gen_c_verifier@@Base+0x23f8>
   22960:	ldrd	r2, [r7, #80]	; 0x50
   22964:	ldr	r1, [pc, #2300]	; 23268 <__flatcc_fb_gen_c_verifier@@Base+0x2e54>
   22968:	mov	r0, r4
   2296c:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22970:	cmp	r6, #0
   22974:	beq	22820 <__flatcc_fb_gen_c_verifier@@Base+0x240c>
   22978:	mov	r2, r8
   2297c:	ldr	r1, [pc, #2280]	; 2326c <__flatcc_fb_gen_c_verifier@@Base+0x2e58>
   22980:	mov	r0, r4
   22984:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22988:	ldr	r1, [pc, #2272]	; 23270 <__flatcc_fb_gen_c_verifier@@Base+0x2e5c>
   2298c:	mov	r0, r4
   22990:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22994:	ldr	r3, [r4, #220]	; 0xdc
   22998:	mov	r2, r8
   2299c:	add	r3, r3, #1
   229a0:	str	r3, [r4, #220]	; 0xdc
   229a4:	ldr	r1, [pc, #2248]	; 23274 <__flatcc_fb_gen_c_verifier@@Base+0x2e60>
   229a8:	mov	r0, r4
   229ac:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   229b0:	ldr	r1, [pc, #2240]	; 23278 <__flatcc_fb_gen_c_verifier@@Base+0x2e64>
   229b4:	mov	r0, r4
   229b8:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   229bc:	ldr	r3, [r4, #220]	; 0xdc
   229c0:	cmp	r3, #0
   229c4:	beq	23174 <__flatcc_fb_gen_c_verifier@@Base+0x2d60>
   229c8:	sub	r3, r3, #1
   229cc:	str	r3, [r4, #220]	; 0xdc
   229d0:	ldr	r3, [sp, #52]	; 0x34
   229d4:	ldr	r1, [pc, #2172]	; 23258 <__flatcc_fb_gen_c_verifier@@Base+0x2e44>
   229d8:	mov	r0, r4
   229dc:	orr	r6, r3, r5
   229e0:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   229e4:	ldr	r3, [sp, #32]
   229e8:	orrs	r3, r6, r3
   229ec:	bne	22edc <__flatcc_fb_gen_c_verifier@@Base+0x2ac8>
   229f0:	ldrh	r3, [r7, #56]	; 0x38
   229f4:	sub	r3, r3, #3
   229f8:	cmp	r3, #3
   229fc:	ldrls	pc, [pc, r3, lsl #2]
   22a00:	b	22f10 <__flatcc_fb_gen_c_verifier@@Base+0x2afc>
   22a04:	andeq	r2, r2, r8, lsr #27
   22a08:	muleq	r2, ip, sp
   22a0c:	ldrdeq	r2, [r2], -r4
   22a10:	ldrdeq	r2, [r2], -r4
   22a14:	ldr	r3, [r7, #16]
   22a18:	mov	fp, #0
   22a1c:	str	fp, [sp, #64]	; 0x40
   22a20:	str	r3, [sp, #24]
   22a24:	mov	r9, #0
   22a28:	and	r3, r5, #1
   22a2c:	str	r9, [sp, #20]
   22a30:	str	r9, [sp, #40]	; 0x28
   22a34:	str	r9, [sp, #48]	; 0x30
   22a38:	str	r9, [sp, #32]
   22a3c:	str	r3, [sp, #44]	; 0x2c
   22a40:	mov	r6, #1
   22a44:	b	22708 <__flatcc_fb_gen_c_verifier@@Base+0x22f4>
   22a48:	ldrh	r3, [r7, #72]	; 0x48
   22a4c:	ldr	r1, [r7, #104]	; 0x68
   22a50:	ldr	r0, [r7, #16]
   22a54:	adds	fp, r1, #0
   22a58:	movne	fp, #1
   22a5c:	ands	r1, r3, #3072	; 0xc00
   22a60:	and	r3, r3, #1024	; 0x400
   22a64:	str	r0, [sp, #24]
   22a68:	str	r1, [sp, #32]
   22a6c:	str	r3, [sp, #64]	; 0x40
   22a70:	beq	22a24 <__flatcc_fb_gen_c_verifier@@Base+0x2610>
   22a74:	eor	r2, r2, #1
   22a78:	cmp	r0, #4
   22a7c:	orrne	r2, r2, #1
   22a80:	cmp	r2, #0
   22a84:	str	r2, [sp, #44]	; 0x2c
   22a88:	bne	23200 <__flatcc_fb_gen_c_verifier@@Base+0x2dec>
   22a8c:	ldr	r3, [sp, #536]	; 0x218
   22a90:	mov	r5, r2
   22a94:	mov	r9, r2
   22a98:	str	r2, [sp, #20]
   22a9c:	str	r2, [sp, #40]	; 0x28
   22aa0:	str	r2, [sp, #48]	; 0x30
   22aa4:	cmp	r3, #0
   22aa8:	mov	r2, #4
   22aac:	str	r2, [sp, #24]
   22ab0:	mov	fp, r5
   22ab4:	mov	r6, r5
   22ab8:	bne	22714 <__flatcc_fb_gen_c_verifier@@Base+0x2300>
   22abc:	str	r3, [sp, #56]	; 0x38
   22ac0:	ldr	r2, [sp, #44]	; 0x2c
   22ac4:	ands	r3, r2, r3
   22ac8:	str	r3, [sp, #44]	; 0x2c
   22acc:	streq	r3, [sp, #68]	; 0x44
   22ad0:	streq	r3, [sp, #60]	; 0x3c
   22ad4:	beq	22738 <__flatcc_fb_gen_c_verifier@@Base+0x2324>
   22ad8:	mov	r3, #0
   22adc:	str	r3, [sp, #44]	; 0x2c
   22ae0:	str	r3, [sp, #68]	; 0x44
   22ae4:	mov	r5, r3
   22ae8:	cmp	fp, #1
   22aec:	mov	r3, #1
   22af0:	str	r3, [sp, #60]	; 0x3c
   22af4:	bne	22740 <__flatcc_fb_gen_c_verifier@@Base+0x232c>
   22af8:	ldr	r1, [pc, #1916]	; 2327c <__flatcc_fb_gen_c_verifier@@Base+0x2e68>
   22afc:	mov	r0, r4
   22b00:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22b04:	ldr	r3, [r4, #220]	; 0xdc
   22b08:	add	r3, r3, #1
   22b0c:	str	r3, [r4, #220]	; 0xdc
   22b10:	b	22740 <__flatcc_fb_gen_c_verifier@@Base+0x232c>
   22b14:	ldr	r1, [r7, #16]
   22b18:	add	r2, sp, #276	; 0x114
   22b1c:	ldr	r0, [r1, #12]
   22b20:	bl	170c4 <__flatcc_fb_scoped_symbol_name@@Base>
   22b24:	ldr	r1, [r7, #16]
   22b28:	ldrh	r2, [r1, #8]
   22b2c:	clz	r3, r2
   22b30:	lsr	r3, r3, #5
   22b34:	str	r3, [sp, #20]
   22b38:	sub	r3, r2, #3
   22b3c:	clz	r3, r3
   22b40:	lsr	r3, r3, #5
   22b44:	str	r3, [sp, #48]	; 0x30
   22b48:	ldr	r3, [sp, #536]	; 0x218
   22b4c:	sub	r9, r2, #1
   22b50:	cmp	r3, #0
   22b54:	cmpeq	r2, #4
   22b58:	clz	r9, r9
   22b5c:	moveq	r3, #1
   22b60:	lsr	r9, r9, #5
   22b64:	movne	r3, #0
   22b68:	beq	230d4 <__flatcc_fb_gen_c_verifier@@Base+0x2cc0>
   22b6c:	cmp	r2, #3
   22b70:	beq	23104 <__flatcc_fb_gen_c_verifier@@Base+0x2cf0>
   22b74:	str	r3, [sp, #24]
   22b78:	mov	r6, r3
   22b7c:	str	r3, [sp, #48]	; 0x30
   22b80:	str	r3, [sp, #40]	; 0x28
   22b84:	b	226f0 <__flatcc_fb_gen_c_verifier@@Base+0x22dc>
   22b88:	mov	r3, #0
   22b8c:	str	r3, [sp, #24]
   22b90:	mov	r9, r3
   22b94:	str	r3, [sp, #20]
   22b98:	mov	r6, r3
   22b9c:	str	r3, [sp, #48]	; 0x30
   22ba0:	str	r3, [sp, #40]	; 0x28
   22ba4:	b	226f0 <__flatcc_fb_gen_c_verifier@@Base+0x22dc>
   22ba8:	ldr	r3, [sp, #24]
   22bac:	sub	r3, r3, #1
   22bb0:	cmp	r3, #10
   22bb4:	ldrls	pc, [pc, r3, lsl #2]
   22bb8:	b	23004 <__flatcc_fb_gen_c_verifier@@Base+0x2bf0>
   22bbc:	andeq	r2, r2, r4, asr #25
   22bc0:	andeq	r3, r2, r8, lsr #1
   22bc4:	andeq	r2, r2, r8, lsl ip
   22bc8:	muleq	r2, r8, r0
   22bcc:	andeq	r2, r2, r8, ror #23
   22bd0:	andeq	r3, r2, r8, lsl #1
   22bd4:	andeq	r3, r2, r8, ror r0
   22bd8:	andeq	r3, r2, r8, rrx
   22bdc:	andeq	r3, r2, r8, asr r0
   22be0:	andeq	r3, r2, r8, asr #32
   22be4:	andeq	r3, r2, r8, lsr r0
   22be8:	cmp	r5, #0
   22bec:	beq	22f44 <__flatcc_fb_gen_c_verifier@@Base+0x2b30>
   22bf0:	ldr	r3, [pc, #1672]	; 23280 <__flatcc_fb_gen_c_verifier@@Base+0x2e6c>
   22bf4:	cmp	sl, #0
   22bf8:	mov	r6, r5
   22bfc:	ldr	r8, [pc, #1664]	; 23284 <__flatcc_fb_gen_c_verifier@@Base+0x2e70>
   22c00:	str	r3, [sp, #36]	; 0x24
   22c04:	bne	22778 <__flatcc_fb_gen_c_verifier@@Base+0x2364>
   22c08:	ldr	r1, [pc, #1656]	; 23288 <__flatcc_fb_gen_c_verifier@@Base+0x2e74>
   22c0c:	mov	r0, r4
   22c10:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22c14:	b	227b0 <__flatcc_fb_gen_c_verifier@@Base+0x239c>
   22c18:	ldr	r8, [pc, #1644]	; 2328c <__flatcc_fb_gen_c_verifier@@Base+0x2e78>
   22c1c:	ldr	r3, [pc, #1644]	; 23290 <__flatcc_fb_gen_c_verifier@@Base+0x2e7c>
   22c20:	str	r3, [sp, #36]	; 0x24
   22c24:	subs	r6, r5, #0
   22c28:	bne	22770 <__flatcc_fb_gen_c_verifier@@Base+0x235c>
   22c2c:	ldr	r2, [sp, #36]	; 0x24
   22c30:	ldr	r1, [pc, #1628]	; 23294 <__flatcc_fb_gen_c_verifier@@Base+0x2e80>
   22c34:	mov	r0, r4
   22c38:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22c3c:	ldr	r1, [pc, #1620]	; 23298 <__flatcc_fb_gen_c_verifier@@Base+0x2e84>
   22c40:	mov	r0, r4
   22c44:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22c48:	ldr	r3, [r4, #220]	; 0xdc
   22c4c:	ldr	r2, [sp, #48]	; 0x30
   22c50:	add	r3, r3, #2
   22c54:	cmp	r2, #0
   22c58:	str	r3, [r4, #220]	; 0xdc
   22c5c:	beq	22c70 <__flatcc_fb_gen_c_verifier@@Base+0x285c>
   22c60:	add	r2, sp, #276	; 0x114
   22c64:	ldr	r1, [pc, #1584]	; 2329c <__flatcc_fb_gen_c_verifier@@Base+0x2e88>
   22c68:	mov	r0, r4
   22c6c:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22c70:	ldr	r2, [r4, #208]	; 0xd0
   22c74:	add	r3, sp, #72	; 0x48
   22c78:	ldr	r1, [pc, #1568]	; 232a0 <__flatcc_fb_gen_c_verifier@@Base+0x2e8c>
   22c7c:	ldr	r2, [r2, #160]	; 0xa0
   22c80:	mov	r0, r4
   22c84:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22c88:	ldr	r3, [r4, #208]	; 0xd0
   22c8c:	ldr	r1, [pc, #1552]	; 232a4 <__flatcc_fb_gen_c_verifier@@Base+0x2e90>
   22c90:	mov	r0, r4
   22c94:	ldr	r2, [r3, #160]	; 0xa0
   22c98:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22c9c:	ldr	r3, [r4, #220]	; 0xdc
   22ca0:	cmp	r3, #0
   22ca4:	beq	23160 <__flatcc_fb_gen_c_verifier@@Base+0x2d4c>
   22ca8:	cmp	r3, #1
   22cac:	beq	23158 <__flatcc_fb_gen_c_verifier@@Base+0x2d44>
   22cb0:	sub	r3, r3, #2
   22cb4:	mov	r5, r6
   22cb8:	str	r3, [r4, #220]	; 0xdc
   22cbc:	mov	r6, #1
   22cc0:	b	227e0 <__flatcc_fb_gen_c_verifier@@Base+0x23cc>
   22cc4:	ldr	r3, [pc, #1500]	; 232a8 <__flatcc_fb_gen_c_verifier@@Base+0x2e94>
   22cc8:	ldr	r8, [pc, #1500]	; 232ac <__flatcc_fb_gen_c_verifier@@Base+0x2e98>
   22ccc:	str	r3, [sp, #36]	; 0x24
   22cd0:	b	22c24 <__flatcc_fb_gen_c_verifier@@Base+0x2810>
   22cd4:	ldrd	r2, [r7, #48]	; 0x30
   22cd8:	ldr	r1, [pc, #1488]	; 232b0 <__flatcc_fb_gen_c_verifier@@Base+0x2e9c>
   22cdc:	mov	r0, r4
   22ce0:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22ce4:	ldr	r3, [r4, #220]	; 0xdc
   22ce8:	add	r3, r3, #1
   22cec:	str	r3, [r4, #220]	; 0xdc
   22cf0:	ldrd	r0, [r7, #88]	; 0x58
   22cf4:	ldrsh	ip, [r7, #74]	; 0x4a
   22cf8:	ldrd	r2, [r7, #96]	; 0x60
   22cfc:	strd	r0, [sp]
   22d00:	str	ip, [sp, #8]
   22d04:	ldr	r1, [pc, #1448]	; 232b4 <__flatcc_fb_gen_c_verifier@@Base+0x2ea0>
   22d08:	mov	r0, r4
   22d0c:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22d10:	mov	r3, r8
   22d14:	mov	r2, r4
   22d18:	ldr	r1, [pc, #1432]	; 232b8 <__flatcc_fb_gen_c_verifier@@Base+0x2ea4>
   22d1c:	mov	r0, r4
   22d20:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22d24:	ldr	r3, [r4, #220]	; 0xdc
   22d28:	cmp	r3, #0
   22d2c:	beq	231ec <__flatcc_fb_gen_c_verifier@@Base+0x2dd8>
   22d30:	sub	r3, r3, #1
   22d34:	str	r3, [r4, #220]	; 0xdc
   22d38:	ldr	r1, [pc, #1304]	; 23258 <__flatcc_fb_gen_c_verifier@@Base+0x2e44>
   22d3c:	mov	r0, r4
   22d40:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22d44:	cmp	fp, #1
   22d48:	beq	228dc <__flatcc_fb_gen_c_verifier@@Base+0x24c8>
   22d4c:	cmp	fp, #2
   22d50:	beq	2311c <__flatcc_fb_gen_c_verifier@@Base+0x2d08>
   22d54:	ldr	r2, [sp, #40]	; 0x28
   22d58:	ldr	r3, [sp, #32]
   22d5c:	orr	r3, r3, r2
   22d60:	ldr	r2, [sp, #20]
   22d64:	orr	r3, r3, fp
   22d68:	orr	r3, r3, r2
   22d6c:	orrs	r3, r3, r5
   22d70:	beq	22d90 <__flatcc_fb_gen_c_verifier@@Base+0x297c>
   22d74:	ldr	r1, [pc, #1344]	; 232bc <__flatcc_fb_gen_c_verifier@@Base+0x2ea8>
   22d78:	mov	r0, r4
   22d7c:	ldrd	r2, [r7, #96]	; 0x60
   22d80:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22d84:	mov	r0, r4
   22d88:	ldr	r1, [pc, #1328]	; 232c0 <__flatcc_fb_gen_c_verifier@@Base+0x2eac>
   22d8c:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22d90:	mov	r0, #0
   22d94:	add	sp, sp, #500	; 0x1f4
   22d98:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22d9c:	ldrd	r2, [r7, #48]	; 0x30
   22da0:	ldr	r1, [pc, #1308]	; 232c4 <__flatcc_fb_gen_c_verifier@@Base+0x2eb0>
   22da4:	b	22cdc <__flatcc_fb_gen_c_verifier@@Base+0x28c8>
   22da8:	ldrd	r2, [r7, #48]	; 0x30
   22dac:	ldr	r1, [pc, #1300]	; 232c8 <__flatcc_fb_gen_c_verifier@@Base+0x2eb4>
   22db0:	mov	r0, r4
   22db4:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22db8:	ldr	r3, [r4, #220]	; 0xdc
   22dbc:	add	r3, r3, #1
   22dc0:	str	r3, [r4, #220]	; 0xdc
   22dc4:	b	22cf0 <__flatcc_fb_gen_c_verifier@@Base+0x28dc>
   22dc8:	ldrd	r0, [r7, #88]	; 0x58
   22dcc:	ldrh	ip, [r7, #74]	; 0x4a
   22dd0:	ldrd	r2, [r7, #96]	; 0x60
   22dd4:	strd	r0, [sp]
   22dd8:	str	ip, [sp, #8]
   22ddc:	ldr	r1, [pc, #1256]	; 232cc <__flatcc_fb_gen_c_verifier@@Base+0x2eb8>
   22de0:	mov	r0, r4
   22de4:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22de8:	b	22818 <__flatcc_fb_gen_c_verifier@@Base+0x2404>
   22dec:	add	r2, sp, #276	; 0x114
   22df0:	ldr	r1, [pc, #1240]	; 232d0 <__flatcc_fb_gen_c_verifier@@Base+0x2ebc>
   22df4:	mov	r0, r4
   22df8:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22dfc:	b	2288c <__flatcc_fb_gen_c_verifier@@Base+0x2478>
   22e00:	ldr	r1, [pc, #1228]	; 232d4 <__flatcc_fb_gen_c_verifier@@Base+0x2ec0>
   22e04:	mov	r0, r4
   22e08:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22e0c:	b	2288c <__flatcc_fb_gen_c_verifier@@Base+0x2478>
   22e10:	ldr	r1, [pc, #1216]	; 232d8 <__flatcc_fb_gen_c_verifier@@Base+0x2ec4>
   22e14:	mov	r0, r4
   22e18:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22e1c:	ldr	r1, [pc, #1180]	; 232c0 <__flatcc_fb_gen_c_verifier@@Base+0x2eac>
   22e20:	mov	r0, r4
   22e24:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22e28:	ldr	r1, [pc, #1060]	; 23254 <__flatcc_fb_gen_c_verifier@@Base+0x2e40>
   22e2c:	mov	r0, r4
   22e30:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22e34:	ldr	r3, [r4, #220]	; 0xdc
   22e38:	cmp	r3, #0
   22e3c:	beq	22e80 <__flatcc_fb_gen_c_verifier@@Base+0x2a6c>
   22e40:	sub	r3, r3, #1
   22e44:	mov	r0, r4
   22e48:	str	r3, [r4, #220]	; 0xdc
   22e4c:	ldr	r1, [pc, #1028]	; 23258 <__flatcc_fb_gen_c_verifier@@Base+0x2e44>
   22e50:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22e54:	ldr	r1, [pc, #1152]	; 232dc <__flatcc_fb_gen_c_verifier@@Base+0x2ec8>
   22e58:	mov	r0, r4
   22e5c:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22e60:	b	228d4 <__flatcc_fb_gen_c_verifier@@Base+0x24c0>
   22e64:	ldr	r3, [sp, #64]	; 0x40
   22e68:	ldr	r1, [pc, #1136]	; 232e0 <__flatcc_fb_gen_c_verifier@@Base+0x2ecc>
   22e6c:	clz	r2, r3
   22e70:	mov	r0, r4
   22e74:	lsr	r2, r2, #5
   22e78:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22e7c:	b	2288c <__flatcc_fb_gen_c_verifier@@Base+0x2478>
   22e80:	ldr	r3, [pc, #1116]	; 232e4 <__flatcc_fb_gen_c_verifier@@Base+0x2ed0>
   22e84:	ldr	r2, [pc, #1116]	; 232e8 <__flatcc_fb_gen_c_verifier@@Base+0x2ed4>
   22e88:	ldr	r1, [pc, #1116]	; 232ec <__flatcc_fb_gen_c_verifier@@Base+0x2ed8>
   22e8c:	ldr	r0, [pc, #1116]	; 232f0 <__flatcc_fb_gen_c_verifier@@Base+0x2edc>
   22e90:	bl	14148 <__assert_fail@plt>
   22e94:	ldr	r3, [sp, #44]	; 0x2c
   22e98:	cmp	r3, #0
   22e9c:	bne	22f5c <__flatcc_fb_gen_c_verifier@@Base+0x2b48>
   22ea0:	cmp	r5, #0
   22ea4:	bne	22894 <__flatcc_fb_gen_c_verifier@@Base+0x2480>
   22ea8:	ldr	r1, [pc, #1092]	; 232f4 <__flatcc_fb_gen_c_verifier@@Base+0x2ee0>
   22eac:	ldr	r2, [pc, #1092]	; 232f8 <__flatcc_fb_gen_c_verifier@@Base+0x2ee4>
   22eb0:	mov	r3, #636	; 0x27c
   22eb4:	ldr	r0, [r1]
   22eb8:	str	r2, [sp]
   22ebc:	ldr	r1, [pc, #1080]	; 232fc <__flatcc_fb_gen_c_verifier@@Base+0x2ee8>
   22ec0:	ldr	r2, [pc, #1060]	; 232ec <__flatcc_fb_gen_c_verifier@@Base+0x2ed8>
   22ec4:	bl	14094 <fprintf@plt>
   22ec8:	ldr	r3, [pc, #1044]	; 232e4 <__flatcc_fb_gen_c_verifier@@Base+0x2ed0>
   22ecc:	mov	r2, #636	; 0x27c
   22ed0:	ldr	r1, [pc, #1044]	; 232ec <__flatcc_fb_gen_c_verifier@@Base+0x2ed8>
   22ed4:	ldr	r0, [pc, #1060]	; 23300 <__flatcc_fb_gen_c_verifier@@Base+0x2eec>
   22ed8:	bl	14148 <__assert_fail@plt>
   22edc:	mov	r3, r8
   22ee0:	mov	r2, r4
   22ee4:	ldr	r1, [pc, #972]	; 232b8 <__flatcc_fb_gen_c_verifier@@Base+0x2ea4>
   22ee8:	mov	r0, r4
   22eec:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22ef0:	cmp	r6, #0
   22ef4:	bne	2288c <__flatcc_fb_gen_c_verifier@@Base+0x2478>
   22ef8:	b	22d24 <__flatcc_fb_gen_c_verifier@@Base+0x2910>
   22efc:	add	r2, sp, #276	; 0x114
   22f00:	ldr	r1, [pc, #1020]	; 23304 <__flatcc_fb_gen_c_verifier@@Base+0x2ef0>
   22f04:	mov	r0, r4
   22f08:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22f0c:	b	2288c <__flatcc_fb_gen_c_verifier@@Base+0x2478>
   22f10:	ldr	r1, [pc, #988]	; 232f4 <__flatcc_fb_gen_c_verifier@@Base+0x2ee0>
   22f14:	ldr	r2, [pc, #1004]	; 23308 <__flatcc_fb_gen_c_verifier@@Base+0x2ef4>
   22f18:	ldr	r3, [pc, #1004]	; 2330c <__flatcc_fb_gen_c_verifier@@Base+0x2ef8>
   22f1c:	ldr	r0, [r1]
   22f20:	str	r2, [sp]
   22f24:	ldr	r1, [pc, #976]	; 232fc <__flatcc_fb_gen_c_verifier@@Base+0x2ee8>
   22f28:	ldr	r2, [pc, #956]	; 232ec <__flatcc_fb_gen_c_verifier@@Base+0x2ed8>
   22f2c:	bl	14094 <fprintf@plt>
   22f30:	ldr	r3, [pc, #940]	; 232e4 <__flatcc_fb_gen_c_verifier@@Base+0x2ed0>
   22f34:	ldr	r2, [pc, #976]	; 2330c <__flatcc_fb_gen_c_verifier@@Base+0x2ef8>
   22f38:	ldr	r1, [pc, #940]	; 232ec <__flatcc_fb_gen_c_verifier@@Base+0x2ed8>
   22f3c:	ldr	r0, [pc, #956]	; 23300 <__flatcc_fb_gen_c_verifier@@Base+0x2eec>
   22f40:	bl	14148 <__assert_fail@plt>
   22f44:	ldr	r3, [pc, #820]	; 23280 <__flatcc_fb_gen_c_verifier@@Base+0x2e6c>
   22f48:	ldr	r8, [pc, #820]	; 23284 <__flatcc_fb_gen_c_verifier@@Base+0x2e70>
   22f4c:	str	r3, [sp, #36]	; 0x24
   22f50:	mov	r6, r5
   22f54:	mov	r2, r3
   22f58:	b	22c30 <__flatcc_fb_gen_c_verifier@@Base+0x281c>
   22f5c:	ldr	r1, [pc, #820]	; 23298 <__flatcc_fb_gen_c_verifier@@Base+0x2e84>
   22f60:	mov	r0, r4
   22f64:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22f68:	ldr	r3, [r4, #220]	; 0xdc
   22f6c:	add	r2, sp, #276	; 0x114
   22f70:	add	r3, r3, #2
   22f74:	str	r3, [r4, #220]	; 0xdc
   22f78:	ldr	r1, [pc, #796]	; 2329c <__flatcc_fb_gen_c_verifier@@Base+0x2e88>
   22f7c:	mov	r0, r4
   22f80:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22f84:	ldr	r2, [r4, #208]	; 0xd0
   22f88:	add	r3, sp, #72	; 0x48
   22f8c:	ldr	r1, [pc, #780]	; 232a0 <__flatcc_fb_gen_c_verifier@@Base+0x2e8c>
   22f90:	ldr	r2, [r2, #160]	; 0xa0
   22f94:	mov	r0, r4
   22f98:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22f9c:	ldr	r3, [r4, #208]	; 0xd0
   22fa0:	ldr	r1, [pc, #764]	; 232a4 <__flatcc_fb_gen_c_verifier@@Base+0x2e90>
   22fa4:	mov	r0, r4
   22fa8:	ldr	r2, [r3, #160]	; 0xa0
   22fac:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   22fb0:	ldr	r3, [r4, #220]	; 0xdc
   22fb4:	cmp	r3, #0
   22fb8:	beq	231b8 <__flatcc_fb_gen_c_verifier@@Base+0x2da4>
   22fbc:	cmp	r3, #1
   22fc0:	beq	231b0 <__flatcc_fb_gen_c_verifier@@Base+0x2d9c>
   22fc4:	ldr	r2, [sp, #68]	; 0x44
   22fc8:	sub	r3, r3, #2
   22fcc:	cmp	r2, #0
   22fd0:	str	r3, [r4, #220]	; 0xdc
   22fd4:	ldrd	r0, [r7, #96]	; 0x60
   22fd8:	ldr	r2, [r7, #112]	; 0x70
   22fdc:	add	r3, sp, #276	; 0x114
   22fe0:	beq	230b8 <__flatcc_fb_gen_c_verifier@@Base+0x2ca4>
   22fe4:	strd	r0, [sp]
   22fe8:	str	r3, [sp, #12]
   22fec:	str	r3, [sp, #8]
   22ff0:	ldr	r1, [pc, #792]	; 23310 <__flatcc_fb_gen_c_verifier@@Base+0x2efc>
   22ff4:	mov	r3, #0
   22ff8:	mov	r0, r4
   22ffc:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   23000:	b	2288c <__flatcc_fb_gen_c_verifier@@Base+0x2478>
   23004:	ldr	r1, [pc, #744]	; 232f4 <__flatcc_fb_gen_c_verifier@@Base+0x2ee0>
   23008:	ldr	r2, [pc, #772]	; 23314 <__flatcc_fb_gen_c_verifier@@Base+0x2f00>
   2300c:	mov	r3, #96	; 0x60
   23010:	ldr	r0, [r1]
   23014:	str	r2, [sp]
   23018:	ldr	r1, [pc, #732]	; 232fc <__flatcc_fb_gen_c_verifier@@Base+0x2ee8>
   2301c:	ldr	r2, [pc, #756]	; 23318 <__flatcc_fb_gen_c_verifier@@Base+0x2f04>
   23020:	bl	14094 <fprintf@plt>
   23024:	ldr	r3, [pc, #752]	; 2331c <__flatcc_fb_gen_c_verifier@@Base+0x2f08>
   23028:	mov	r2, #96	; 0x60
   2302c:	ldr	r1, [pc, #740]	; 23318 <__flatcc_fb_gen_c_verifier@@Base+0x2f04>
   23030:	ldr	r0, [pc, #712]	; 23300 <__flatcc_fb_gen_c_verifier@@Base+0x2eec>
   23034:	bl	14148 <__assert_fail@plt>
   23038:	ldr	r3, [pc, #736]	; 23320 <__flatcc_fb_gen_c_verifier@@Base+0x2f0c>
   2303c:	str	r3, [sp, #36]	; 0x24
   23040:	mov	r8, r3
   23044:	b	22c24 <__flatcc_fb_gen_c_verifier@@Base+0x2810>
   23048:	ldr	r3, [pc, #724]	; 23324 <__flatcc_fb_gen_c_verifier@@Base+0x2f10>
   2304c:	str	r3, [sp, #36]	; 0x24
   23050:	mov	r8, r3
   23054:	b	22c24 <__flatcc_fb_gen_c_verifier@@Base+0x2810>
   23058:	ldr	r3, [pc, #712]	; 23328 <__flatcc_fb_gen_c_verifier@@Base+0x2f14>
   2305c:	ldr	r8, [pc, #712]	; 2332c <__flatcc_fb_gen_c_verifier@@Base+0x2f18>
   23060:	str	r3, [sp, #36]	; 0x24
   23064:	b	22c24 <__flatcc_fb_gen_c_verifier@@Base+0x2810>
   23068:	ldr	r3, [pc, #704]	; 23330 <__flatcc_fb_gen_c_verifier@@Base+0x2f1c>
   2306c:	ldr	r8, [pc, #704]	; 23334 <__flatcc_fb_gen_c_verifier@@Base+0x2f20>
   23070:	str	r3, [sp, #36]	; 0x24
   23074:	b	22c24 <__flatcc_fb_gen_c_verifier@@Base+0x2810>
   23078:	ldr	r3, [pc, #696]	; 23338 <__flatcc_fb_gen_c_verifier@@Base+0x2f24>
   2307c:	ldr	r8, [pc, #696]	; 2333c <__flatcc_fb_gen_c_verifier@@Base+0x2f28>
   23080:	str	r3, [sp, #36]	; 0x24
   23084:	b	22c24 <__flatcc_fb_gen_c_verifier@@Base+0x2810>
   23088:	ldr	r3, [pc, #688]	; 23340 <__flatcc_fb_gen_c_verifier@@Base+0x2f2c>
   2308c:	ldr	r8, [pc, #688]	; 23344 <__flatcc_fb_gen_c_verifier@@Base+0x2f30>
   23090:	str	r3, [sp, #36]	; 0x24
   23094:	b	22c24 <__flatcc_fb_gen_c_verifier@@Base+0x2810>
   23098:	ldr	r3, [pc, #480]	; 23280 <__flatcc_fb_gen_c_verifier@@Base+0x2e6c>
   2309c:	ldr	r8, [pc, #676]	; 23348 <__flatcc_fb_gen_c_verifier@@Base+0x2f34>
   230a0:	str	r3, [sp, #36]	; 0x24
   230a4:	b	22c24 <__flatcc_fb_gen_c_verifier@@Base+0x2810>
   230a8:	ldr	r3, [pc, #668]	; 2334c <__flatcc_fb_gen_c_verifier@@Base+0x2f38>
   230ac:	ldr	r8, [pc, #668]	; 23350 <__flatcc_fb_gen_c_verifier@@Base+0x2f3c>
   230b0:	str	r3, [sp, #36]	; 0x24
   230b4:	b	22c24 <__flatcc_fb_gen_c_verifier@@Base+0x2810>
   230b8:	strd	r0, [sp]
   230bc:	str	r3, [sp, #8]
   230c0:	ldr	r1, [pc, #652]	; 23354 <__flatcc_fb_gen_c_verifier@@Base+0x2f40>
   230c4:	mov	r3, #0
   230c8:	mov	r0, r4
   230cc:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   230d0:	b	2288c <__flatcc_fb_gen_c_verifier@@Base+0x2478>
   230d4:	mov	r2, #0
   230d8:	mov	r6, r2
   230dc:	str	r2, [sp, #40]	; 0x28
   230e0:	str	r2, [sp, #24]
   230e4:	str	r2, [sp, #32]
   230e8:	str	r2, [sp, #64]	; 0x40
   230ec:	mov	fp, r2
   230f0:	and	r2, r5, #1
   230f4:	str	r2, [sp, #44]	; 0x2c
   230f8:	mov	r2, #1
   230fc:	str	r2, [sp, #56]	; 0x38
   23100:	b	22ac0 <__flatcc_fb_gen_c_verifier@@Base+0x26ac>
   23104:	ldr	r2, [r1, #40]	; 0x28
   23108:	mov	r6, #1
   2310c:	str	r2, [sp, #24]
   23110:	str	r3, [sp, #40]	; 0x28
   23114:	str	r6, [sp, #48]	; 0x30
   23118:	b	226f0 <__flatcc_fb_gen_c_verifier@@Base+0x22dc>
   2311c:	ldr	r1, [pc, #564]	; 23358 <__flatcc_fb_gen_c_verifier@@Base+0x2f44>
   23120:	mov	r0, r4
   23124:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   23128:	ldr	r1, [pc, #556]	; 2335c <__flatcc_fb_gen_c_verifier@@Base+0x2f48>
   2312c:	mov	r0, r4
   23130:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   23134:	ldr	r3, [r4, #220]	; 0xdc
   23138:	cmp	r3, #0
   2313c:	beq	2319c <__flatcc_fb_gen_c_verifier@@Base+0x2d88>
   23140:	sub	r3, r3, #1
   23144:	str	r3, [r4, #220]	; 0xdc
   23148:	ldr	r1, [pc, #528]	; 23360 <__flatcc_fb_gen_c_verifier@@Base+0x2f4c>
   2314c:	mov	r0, r4
   23150:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   23154:	b	22d54 <__flatcc_fb_gen_c_verifier@@Base+0x2940>
   23158:	mov	r3, #0
   2315c:	str	r3, [r4, #220]	; 0xdc
   23160:	ldr	r3, [pc, #380]	; 232e4 <__flatcc_fb_gen_c_verifier@@Base+0x2ed0>
   23164:	ldr	r2, [pc, #504]	; 23364 <__flatcc_fb_gen_c_verifier@@Base+0x2f50>
   23168:	ldr	r1, [pc, #380]	; 232ec <__flatcc_fb_gen_c_verifier@@Base+0x2ed8>
   2316c:	ldr	r0, [pc, #380]	; 232f0 <__flatcc_fb_gen_c_verifier@@Base+0x2edc>
   23170:	bl	14148 <__assert_fail@plt>
   23174:	ldr	r3, [pc, #360]	; 232e4 <__flatcc_fb_gen_c_verifier@@Base+0x2ed0>
   23178:	ldr	r2, [pc, #488]	; 23368 <__flatcc_fb_gen_c_verifier@@Base+0x2f54>
   2317c:	ldr	r1, [pc, #360]	; 232ec <__flatcc_fb_gen_c_verifier@@Base+0x2ed8>
   23180:	ldr	r0, [pc, #360]	; 232f0 <__flatcc_fb_gen_c_verifier@@Base+0x2edc>
   23184:	bl	14148 <__assert_fail@plt>
   23188:	ldr	r3, [pc, #340]	; 232e4 <__flatcc_fb_gen_c_verifier@@Base+0x2ed0>
   2318c:	ldr	r2, [pc, #472]	; 2336c <__flatcc_fb_gen_c_verifier@@Base+0x2f58>
   23190:	ldr	r1, [pc, #340]	; 232ec <__flatcc_fb_gen_c_verifier@@Base+0x2ed8>
   23194:	ldr	r0, [pc, #340]	; 232f0 <__flatcc_fb_gen_c_verifier@@Base+0x2edc>
   23198:	bl	14148 <__assert_fail@plt>
   2319c:	ldr	r3, [pc, #320]	; 232e4 <__flatcc_fb_gen_c_verifier@@Base+0x2ed0>
   231a0:	ldr	r2, [pc, #456]	; 23370 <__flatcc_fb_gen_c_verifier@@Base+0x2f5c>
   231a4:	ldr	r1, [pc, #320]	; 232ec <__flatcc_fb_gen_c_verifier@@Base+0x2ed8>
   231a8:	ldr	r0, [pc, #320]	; 232f0 <__flatcc_fb_gen_c_verifier@@Base+0x2edc>
   231ac:	bl	14148 <__assert_fail@plt>
   231b0:	ldr	r3, [sp, #56]	; 0x38
   231b4:	str	r3, [r4, #220]	; 0xdc
   231b8:	ldr	r3, [pc, #292]	; 232e4 <__flatcc_fb_gen_c_verifier@@Base+0x2ed0>
   231bc:	ldr	r2, [pc, #432]	; 23374 <__flatcc_fb_gen_c_verifier@@Base+0x2f60>
   231c0:	ldr	r1, [pc, #292]	; 232ec <__flatcc_fb_gen_c_verifier@@Base+0x2ed8>
   231c4:	ldr	r0, [pc, #292]	; 232f0 <__flatcc_fb_gen_c_verifier@@Base+0x2edc>
   231c8:	bl	14148 <__assert_fail@plt>
   231cc:	ldr	r3, [sp, #44]	; 0x2c
   231d0:	str	r3, [sp, #56]	; 0x38
   231d4:	mov	r6, r3
   231d8:	str	r3, [sp, #68]	; 0x44
   231dc:	str	r3, [sp, #60]	; 0x3c
   231e0:	mov	r3, #1
   231e4:	str	r3, [sp, #44]	; 0x2c
   231e8:	b	22738 <__flatcc_fb_gen_c_verifier@@Base+0x2324>
   231ec:	ldr	r3, [pc, #240]	; 232e4 <__flatcc_fb_gen_c_verifier@@Base+0x2ed0>
   231f0:	ldr	r2, [pc, #384]	; 23378 <__flatcc_fb_gen_c_verifier@@Base+0x2f64>
   231f4:	ldr	r1, [pc, #240]	; 232ec <__flatcc_fb_gen_c_verifier@@Base+0x2ed8>
   231f8:	ldr	r0, [pc, #240]	; 232f0 <__flatcc_fb_gen_c_verifier@@Base+0x2edc>
   231fc:	bl	14148 <__assert_fail@plt>
   23200:	ldr	r1, [pc, #236]	; 232f4 <__flatcc_fb_gen_c_verifier@@Base+0x2ee0>
   23204:	ldr	r2, [pc, #368]	; 2337c <__flatcc_fb_gen_c_verifier@@Base+0x2f68>
   23208:	ldr	r3, [pc, #368]	; 23380 <__flatcc_fb_gen_c_verifier@@Base+0x2f6c>
   2320c:	ldr	r0, [r1]
   23210:	str	r2, [sp]
   23214:	ldr	r1, [pc, #224]	; 232fc <__flatcc_fb_gen_c_verifier@@Base+0x2ee8>
   23218:	ldr	r2, [pc, #204]	; 232ec <__flatcc_fb_gen_c_verifier@@Base+0x2ed8>
   2321c:	bl	14094 <fprintf@plt>
   23220:	ldr	r3, [pc, #188]	; 232e4 <__flatcc_fb_gen_c_verifier@@Base+0x2ed0>
   23224:	ldr	r2, [pc, #340]	; 23380 <__flatcc_fb_gen_c_verifier@@Base+0x2f6c>
   23228:	ldr	r1, [pc, #188]	; 232ec <__flatcc_fb_gen_c_verifier@@Base+0x2ed8>
   2322c:	ldr	r0, [pc, #204]	; 23300 <__flatcc_fb_gen_c_verifier@@Base+0x2eec>
   23230:	bl	14148 <__assert_fail@plt>
   23234:	andeq	r8, r0, r0, lsl #5
   23238:	strdeq	r7, [r5], -ip
   2323c:	andeq	r7, r5, ip, lsl #14
   23240:	andeq	r7, r5, r0, ror #14
   23244:	muleq	r5, ip, r7
   23248:	andeq	r7, r5, r4, asr r8
   2324c:	andeq	r7, r5, r0, asr ip
   23250:			; <UNDEFINED> instruction: 0x00057cb4
   23254:			; <UNDEFINED> instruction: 0x00057eb4
   23258:	andeq	r6, r5, r8, lsl sp
   2325c:	ldrdeq	r7, [r5], -r4
   23260:	andeq	r7, r5, r0, ror r6
   23264:	andeq	r7, r5, r8, lsl #13
   23268:	muleq	r5, ip, r8
   2326c:	andeq	r7, r5, ip, lsl r9
   23270:	andeq	r7, r5, r8, asr r9
   23274:	andeq	r7, r5, ip, ror #18
   23278:	andeq	r7, r5, r4, asr #19
   2327c:	andeq	r7, r5, ip, lsr r6
   23280:	muleq	r4, r0, r3
   23284:	ldrdeq	ip, [r5], -r0
   23288:	andeq	r7, r5, ip, asr #13
   2328c:	strdeq	r4, [r4], -r8
   23290:	andeq	r4, r4, r4, lsl #7
   23294:	andeq	r7, r5, ip, lsr #15
   23298:			; <UNDEFINED> instruction: 0x000577b8
   2329c:	strdeq	r7, [r5], -ip
   232a0:	andeq	r7, r5, r0, lsl r8
   232a4:	andeq	r7, r5, r0, lsr r8
   232a8:	andeq	r4, r4, ip, ror #6
   232ac:	andeq	r4, r4, r8, ror #15
   232b0:	strdeq	r7, [r5], -r0
   232b4:	andeq	r7, r5, ip, ror #21
   232b8:	andeq	r7, r5, ip, lsr fp
   232bc:	andeq	r7, r5, ip, asr #30
   232c0:	andeq	r7, r5, r4, lsr #29
   232c4:	andeq	r7, r5, r4, lsr sl
   232c8:	andeq	r7, r5, r8, ror sl
   232cc:	andeq	r7, r5, ip, asr #17
   232d0:	andeq	r7, r5, ip, asr fp
   232d4:	muleq	r5, r4, fp
   232d8:	andeq	r7, r5, ip, asr #28
   232dc:	andeq	r7, r5, r0, lsr #31
   232e0:	ldrdeq	r7, [r5], -r0
   232e4:	andeq	r6, r5, r4, lsl fp
   232e8:	andeq	r0, r0, r7, lsl #5
   232ec:			; <UNDEFINED> instruction: 0x00056cb4
   232f0:	andeq	r6, r5, ip, lsl #26
   232f4:	andeq	pc, r6, r8, lsr #1
   232f8:	andeq	r7, r5, r8, lsl lr
   232fc:	ldrdeq	r4, [r4], -ip
   23300:	andeq	sp, r4, r4, ror r2
   23304:	andeq	r7, r5, r0, lsr #24
   23308:			; <UNDEFINED> instruction: 0x00057abc
   2330c:	andeq	r0, r0, lr, asr #4
   23310:	andeq	r7, r5, r0, lsl sp
   23314:	andeq	r4, r4, r8, ror #9
   23318:	muleq	r4, r0, r4
   2331c:	andeq	r6, r5, ip, lsr #22
   23320:	andeq	r4, r4, r0, asr #7
   23324:	andeq	r4, r4, r8, asr #7
   23328:			; <UNDEFINED> instruction: 0x000443b8
   2332c:	andeq	r4, r4, r0, lsr #16
   23330:			; <UNDEFINED> instruction: 0x000443b0
   23334:	andeq	r4, r4, r8, lsl r8
   23338:	andeq	r4, r4, r8, lsr #7
   2333c:	andeq	r4, r4, r0, lsl r8
   23340:	andeq	r4, r4, r0, lsr #7
   23344:	andeq	r4, r4, r8, lsl #16
   23348:	andeq	r4, r4, r0, lsl #16
   2334c:	andeq	r4, r4, r8, ror r3
   23350:	strdeq	r4, [r4], -r0
   23354:	andeq	r7, r5, r4, lsr #27
   23358:	strdeq	r7, [r5], -r0
   2335c:	andeq	r7, r5, r8, lsl #30
   23360:	andeq	r7, r5, r8, lsr pc
   23364:	andeq	r0, r0, fp, lsl r2
   23368:	andeq	r0, r0, pc, lsr #4
   2336c:	andeq	r0, r0, sl, ror #3
   23370:	muleq	r0, r5, r2
   23374:	andeq	r0, r0, r3, ror r2
   23378:	andeq	r0, r0, sl, asr r2
   2337c:	andeq	r7, r5, r0, lsl #12
   23380:	ldrdeq	r0, [r0], -r2
   23384:	push	{r4, r5, r6, r7, lr}
   23388:	sub	sp, sp, #12
   2338c:	mov	r4, r0
   23390:	mov	r5, r1
   23394:	mov	r6, r2
   23398:	ldr	r1, [pc, #128]	; 23420 <__flatcc_fb_gen_c_verifier@@Base+0x300c>
   2339c:	ldr	r2, [sp, #32]
   233a0:	mov	r7, r3
   233a4:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   233a8:	mov	r0, r4
   233ac:	ldr	r1, [pc, #112]	; 23424 <__flatcc_fb_gen_c_verifier@@Base+0x3010>
   233b0:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   233b4:	ldr	r2, [r4, #220]	; 0xdc
   233b8:	mov	r3, r6
   233bc:	add	r2, r2, #1
   233c0:	str	r7, [sp]
   233c4:	add	r1, r5, #8
   233c8:	str	r2, [r4, #220]	; 0xdc
   233cc:	mov	r0, r4
   233d0:	add	r2, r5, #12
   233d4:	bl	22620 <__flatcc_fb_gen_c_verifier@@Base+0x220c>
   233d8:	ldr	r3, [r4, #220]	; 0xdc
   233dc:	cmp	r3, #0
   233e0:	beq	2340c <__flatcc_fb_gen_c_verifier@@Base+0x2ff8>
   233e4:	sub	r3, r3, #1
   233e8:	str	r3, [r4, #220]	; 0xdc
   233ec:	ldr	r1, [pc, #52]	; 23428 <__flatcc_fb_gen_c_verifier@@Base+0x3014>
   233f0:	mov	r0, r4
   233f4:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   233f8:	ldr	r3, [r4, #220]	; 0xdc
   233fc:	add	r3, r3, #1
   23400:	str	r3, [r4, #220]	; 0xdc
   23404:	add	sp, sp, #12
   23408:	pop	{r4, r5, r6, r7, pc}
   2340c:	ldr	r3, [pc, #24]	; 2342c <__flatcc_fb_gen_c_verifier@@Base+0x3018>
   23410:	ldr	r2, [pc, #24]	; 23430 <__flatcc_fb_gen_c_verifier@@Base+0x301c>
   23414:	ldr	r1, [pc, #24]	; 23434 <__flatcc_fb_gen_c_verifier@@Base+0x3020>
   23418:	ldr	r0, [pc, #24]	; 23438 <__flatcc_fb_gen_c_verifier@@Base+0x3024>
   2341c:	bl	14148 <__assert_fail@plt>
   23420:	andeq	r8, r5, r0
   23424:	andeq	r8, r5, r4, asr #32
   23428:	andeq	r7, r5, ip, lsr r2
   2342c:	andeq	r6, r5, r0, asr #22
   23430:	andeq	r0, r0, r3, lsr #5
   23434:			; <UNDEFINED> instruction: 0x00056cb4
   23438:	andeq	r6, r5, ip, lsl #26
   2343c:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23440:	subs	r5, r0, #0
   23444:	beq	235ac <__flatcc_fb_gen_c_verifier@@Base+0x3198>
   23448:	mov	r0, #0
   2344c:	mov	r6, r0
   23450:	mov	r4, r5
   23454:	b	23468 <__flatcc_fb_gen_c_verifier@@Base+0x3054>
   23458:	add	r6, r6, #1
   2345c:	ldr	r4, [r4]
   23460:	cmp	r4, #0
   23464:	beq	234ac <__flatcc_fb_gen_c_verifier@@Base+0x3098>
   23468:	ldrh	r3, [r4, #72]	; 0x48
   2346c:	tst	r3, #4
   23470:	bne	2345c <__flatcc_fb_gen_c_verifier@@Base+0x3048>
   23474:	ldrh	r3, [r4, #24]
   23478:	sub	r3, r3, #14
   2347c:	cmp	r3, #1
   23480:	bhi	23458 <__flatcc_fb_gen_c_verifier@@Base+0x3044>
   23484:	ldr	r3, [r4, #16]
   23488:	ldrh	r3, [r3, #8]
   2348c:	cmp	r3, #4
   23490:	bne	23458 <__flatcc_fb_gen_c_verifier@@Base+0x3044>
   23494:	ldr	r3, [r4, #4]
   23498:	add	r6, r6, #1
   2349c:	ldr	r3, [r3, #4]
   234a0:	add	r3, r3, #6
   234a4:	add	r0, r0, r3
   234a8:	b	23458 <__flatcc_fb_gen_c_verifier@@Base+0x3044>
   234ac:	cmp	r6, #0
   234b0:	str	r6, [r1]
   234b4:	beq	235a0 <__flatcc_fb_gen_c_verifier@@Base+0x318c>
   234b8:	lsl	r7, r6, #4
   234bc:	add	r0, r0, r7
   234c0:	bl	14040 <malloc@plt>
   234c4:	subs	r8, r0, #0
   234c8:	beq	235a0 <__flatcc_fb_gen_c_verifier@@Base+0x318c>
   234cc:	ldr	r9, [pc, #228]	; 235b8 <__flatcc_fb_gen_c_verifier@@Base+0x31a4>
   234d0:	add	r7, r8, r7
   234d4:	mov	fp, r8
   234d8:	mov	sl, #1
   234dc:	b	234f0 <__flatcc_fb_gen_c_verifier@@Base+0x30dc>
   234e0:	mov	fp, ip
   234e4:	ldr	r5, [r5]
   234e8:	cmp	r5, #0
   234ec:	beq	23584 <__flatcc_fb_gen_c_verifier@@Base+0x3170>
   234f0:	ldrh	r3, [r5, #72]	; 0x48
   234f4:	add	ip, fp, #16
   234f8:	ands	r3, r3, #4
   234fc:	bne	234e4 <__flatcc_fb_gen_c_verifier@@Base+0x30d0>
   23500:	ldr	r2, [r5, #4]
   23504:	ldrh	r0, [r5, #24]
   23508:	ldm	r2, {r1, r2}
   2350c:	sub	r0, r0, #14
   23510:	cmp	r0, #1
   23514:	stm	fp, {r1, r2, r5}
   23518:	str	r3, [fp, #12]
   2351c:	bhi	234e0 <__flatcc_fb_gen_c_verifier@@Base+0x30cc>
   23520:	ldr	r3, [r5, #16]
   23524:	ldrh	r3, [r3, #8]
   23528:	cmp	r3, #4
   2352c:	bne	234e0 <__flatcc_fb_gen_c_verifier@@Base+0x30cc>
   23530:	add	r3, r2, #5
   23534:	str	r4, [r5, #112]	; 0x70
   23538:	mov	r0, r7
   2353c:	str	r7, [fp, #16]
   23540:	str	r3, [fp, #20]
   23544:	bl	13fe0 <memcpy@plt>
   23548:	ldr	r2, [r5, #4]
   2354c:	ldrh	r3, [r9, #4]
   23550:	ldr	r0, [r9]
   23554:	ldr	r1, [r2, #4]
   23558:	add	r4, r4, #1
   2355c:	add	r2, r7, r1
   23560:	str	r0, [r7, r1]
   23564:	strh	r3, [r2, #4]
   23568:	str	r5, [fp, #24]
   2356c:	ldr	r5, [r5]
   23570:	str	sl, [fp, #28]
   23574:	cmp	r5, #0
   23578:	add	r7, r2, #6
   2357c:	add	fp, fp, #32
   23580:	bne	234f0 <__flatcc_fb_gen_c_verifier@@Base+0x30dc>
   23584:	mov	r1, r6
   23588:	ldr	r3, [pc, #44]	; 235bc <__flatcc_fb_gen_c_verifier@@Base+0x31a8>
   2358c:	mov	r2, #16
   23590:	mov	r0, r8
   23594:	bl	14118 <qsort@plt>
   23598:	mov	r0, r8
   2359c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   235a0:	mov	r8, #0
   235a4:	mov	r0, r8
   235a8:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   235ac:	mov	r8, r5
   235b0:	str	r5, [r1]
   235b4:	b	23598 <__flatcc_fb_gen_c_verifier@@Base+0x3184>
   235b8:	andeq	fp, r5, r8, lsl #2
   235bc:	andeq	r1, r2, r8, lsr lr
   235c0:	ldrh	r2, [r1, #8]
   235c4:	push	{r4, r5, lr}
   235c8:	sub	sp, sp, #268	; 0x10c
   235cc:	sub	r2, r2, #3
   235d0:	mov	r3, #0
   235d4:	cmp	r2, #1
   235d8:	str	r3, [sp, #20]
   235dc:	str	r3, [sp, #12]
   235e0:	str	r3, [sp, #16]
   235e4:	str	r3, [sp, #24]
   235e8:	str	r3, [sp, #28]
   235ec:	str	r3, [sp, #32]
   235f0:	str	r3, [sp, #36]	; 0x24
   235f4:	str	r3, [sp, #40]	; 0x28
   235f8:	bhi	2380c <__flatcc_fb_gen_c_verifier@@Base+0x33f8>
   235fc:	mov	r5, r1
   23600:	mov	r4, r0
   23604:	add	r1, sp, #12
   23608:	ldr	r0, [r5, #20]
   2360c:	bl	2343c <__flatcc_fb_gen_c_verifier@@Base+0x3028>
   23610:	cmp	r0, #0
   23614:	str	r0, [sp, #16]
   23618:	beq	237b8 <__flatcc_fb_gen_c_verifier@@Base+0x33a4>
   2361c:	ldr	r2, [pc, #528]	; 23834 <__flatcc_fb_gen_c_verifier@@Base+0x3420>
   23620:	ldr	r1, [pc, #528]	; 23838 <__flatcc_fb_gen_c_verifier@@Base+0x3424>
   23624:	mov	r3, #2
   23628:	str	r2, [sp, #20]
   2362c:	str	r1, [sp, #24]
   23630:	mov	r2, #220	; 0xdc
   23634:	mov	r1, #0
   23638:	add	r0, sp, #44	; 0x2c
   2363c:	str	r3, [sp, #32]
   23640:	str	r5, [sp, #28]
   23644:	bl	140ac <memset@plt>
   23648:	add	r2, sp, #44	; 0x2c
   2364c:	mov	r1, r5
   23650:	ldr	r0, [r5, #12]
   23654:	bl	170c4 <__flatcc_fb_scoped_symbol_name@@Base>
   23658:	add	r2, sp, #44	; 0x2c
   2365c:	ldr	r1, [pc, #472]	; 2383c <__flatcc_fb_gen_c_verifier@@Base+0x3428>
   23660:	mov	r0, r4
   23664:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   23668:	ldr	r3, [r4, #220]	; 0xdc
   2366c:	ldr	r1, [pc, #460]	; 23840 <__flatcc_fb_gen_c_verifier@@Base+0x342c>
   23670:	add	r3, r3, #2
   23674:	str	r3, [r4, #220]	; 0xdc
   23678:	mov	r0, r4
   2367c:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   23680:	ldr	r3, [r4, #220]	; 0xdc
   23684:	cmp	r3, #0
   23688:	beq	237f8 <__flatcc_fb_gen_c_verifier@@Base+0x33e4>
   2368c:	cmp	r3, #1
   23690:	moveq	r3, #0
   23694:	streq	r3, [r4, #220]	; 0xdc
   23698:	beq	237f8 <__flatcc_fb_gen_c_verifier@@Base+0x33e4>
   2369c:	sub	r3, r3, #2
   236a0:	str	r3, [r4, #220]	; 0xdc
   236a4:	ldr	r1, [pc, #408]	; 23844 <__flatcc_fb_gen_c_verifier@@Base+0x3430>
   236a8:	mov	r0, r4
   236ac:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   236b0:	ldr	r3, [r4, #220]	; 0xdc
   236b4:	ldr	r2, [sp, #12]
   236b8:	add	r3, r3, #1
   236bc:	cmp	r2, #0
   236c0:	str	r3, [r4, #220]	; 0xdc
   236c4:	beq	23774 <__flatcc_fb_gen_c_verifier@@Base+0x3360>
   236c8:	ldr	r1, [pc, #376]	; 23848 <__flatcc_fb_gen_c_verifier@@Base+0x3434>
   236cc:	mov	r0, r4
   236d0:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   236d4:	ldr	r1, [pc, #368]	; 2384c <__flatcc_fb_gen_c_verifier@@Base+0x3438>
   236d8:	mov	r0, r4
   236dc:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   236e0:	ldr	r1, [pc, #360]	; 23850 <__flatcc_fb_gen_c_verifier@@Base+0x343c>
   236e4:	mov	r0, r4
   236e8:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   236ec:	ldr	r1, [pc, #352]	; 23854 <__flatcc_fb_gen_c_verifier@@Base+0x3440>
   236f0:	mov	r0, r4
   236f4:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   236f8:	ldr	r1, [pc, #344]	; 23858 <__flatcc_fb_gen_c_verifier@@Base+0x3444>
   236fc:	mov	r0, r4
   23700:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   23704:	ldr	r3, [sp, #12]
   23708:	mov	r2, #0
   2370c:	sub	r3, r3, #1
   23710:	add	r1, sp, #16
   23714:	str	r2, [sp]
   23718:	mov	r0, r4
   2371c:	bl	20c80 <__flatcc_fb_gen_c_verifier@@Base+0x86c>
   23720:	ldr	r1, [pc, #308]	; 2385c <__flatcc_fb_gen_c_verifier@@Base+0x3448>
   23724:	mov	r0, r4
   23728:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   2372c:	ldr	r3, [r4, #220]	; 0xdc
   23730:	cmp	r3, #0
   23734:	beq	23820 <__flatcc_fb_gen_c_verifier@@Base+0x340c>
   23738:	sub	r3, r3, #1
   2373c:	str	r3, [r4, #220]	; 0xdc
   23740:	ldr	r1, [pc, #280]	; 23860 <__flatcc_fb_gen_c_verifier@@Base+0x344c>
   23744:	mov	r0, r4
   23748:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   2374c:	mov	r0, r4
   23750:	ldr	r1, [pc, #252]	; 23854 <__flatcc_fb_gen_c_verifier@@Base+0x3440>
   23754:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   23758:	ldr	r0, [sp, #16]
   2375c:	cmp	r0, #0
   23760:	beq	23768 <__flatcc_fb_gen_c_verifier@@Base+0x3354>
   23764:	bl	13fd4 <free@plt>
   23768:	mov	r0, #0
   2376c:	add	sp, sp, #268	; 0x10c
   23770:	pop	{r4, r5, pc}
   23774:	ldr	r1, [pc, #232]	; 23864 <__flatcc_fb_gen_c_verifier@@Base+0x3450>
   23778:	mov	r0, r4
   2377c:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   23780:	ldr	r1, [pc, #224]	; 23868 <__flatcc_fb_gen_c_verifier@@Base+0x3454>
   23784:	mov	r0, r4
   23788:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   2378c:	ldr	r1, [pc, #216]	; 2386c <__flatcc_fb_gen_c_verifier@@Base+0x3458>
   23790:	mov	r0, r4
   23794:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   23798:	ldr	r3, [r4, #220]	; 0xdc
   2379c:	cmp	r3, #0
   237a0:	bne	23738 <__flatcc_fb_gen_c_verifier@@Base+0x3324>
   237a4:	ldr	r3, [pc, #196]	; 23870 <__flatcc_fb_gen_c_verifier@@Base+0x345c>
   237a8:	ldr	r2, [pc, #196]	; 23874 <__flatcc_fb_gen_c_verifier@@Base+0x3460>
   237ac:	ldr	r1, [pc, #196]	; 23878 <__flatcc_fb_gen_c_verifier@@Base+0x3464>
   237b0:	ldr	r0, [pc, #196]	; 2387c <__flatcc_fb_gen_c_verifier@@Base+0x3468>
   237b4:	bl	14148 <__assert_fail@plt>
   237b8:	ldr	r3, [sp, #12]
   237bc:	cmp	r3, #0
   237c0:	ble	2361c <__flatcc_fb_gen_c_verifier@@Base+0x3208>
   237c4:	ldr	r1, [pc, #180]	; 23880 <__flatcc_fb_gen_c_verifier@@Base+0x346c>
   237c8:	ldr	r2, [pc, #180]	; 23884 <__flatcc_fb_gen_c_verifier@@Base+0x3470>
   237cc:	ldr	r3, [pc, #180]	; 23888 <__flatcc_fb_gen_c_verifier@@Base+0x3474>
   237d0:	ldr	r0, [r1]
   237d4:	str	r2, [sp]
   237d8:	ldr	r1, [pc, #172]	; 2388c <__flatcc_fb_gen_c_verifier@@Base+0x3478>
   237dc:	ldr	r2, [pc, #148]	; 23878 <__flatcc_fb_gen_c_verifier@@Base+0x3464>
   237e0:	bl	14094 <fprintf@plt>
   237e4:	ldr	r3, [pc, #132]	; 23870 <__flatcc_fb_gen_c_verifier@@Base+0x345c>
   237e8:	ldr	r2, [pc, #152]	; 23888 <__flatcc_fb_gen_c_verifier@@Base+0x3474>
   237ec:	ldr	r1, [pc, #132]	; 23878 <__flatcc_fb_gen_c_verifier@@Base+0x3464>
   237f0:	ldr	r0, [pc, #152]	; 23890 <__flatcc_fb_gen_c_verifier@@Base+0x347c>
   237f4:	bl	14148 <__assert_fail@plt>
   237f8:	ldr	r3, [pc, #112]	; 23870 <__flatcc_fb_gen_c_verifier@@Base+0x345c>
   237fc:	ldr	r2, [pc, #144]	; 23894 <__flatcc_fb_gen_c_verifier@@Base+0x3480>
   23800:	ldr	r1, [pc, #112]	; 23878 <__flatcc_fb_gen_c_verifier@@Base+0x3464>
   23804:	ldr	r0, [pc, #112]	; 2387c <__flatcc_fb_gen_c_verifier@@Base+0x3468>
   23808:	bl	14148 <__assert_fail@plt>
   2380c:	ldr	r3, [pc, #92]	; 23870 <__flatcc_fb_gen_c_verifier@@Base+0x345c>
   23810:	ldr	r2, [pc, #128]	; 23898 <__flatcc_fb_gen_c_verifier@@Base+0x3484>
   23814:	ldr	r1, [pc, #92]	; 23878 <__flatcc_fb_gen_c_verifier@@Base+0x3464>
   23818:	ldr	r0, [pc, #124]	; 2389c <__flatcc_fb_gen_c_verifier@@Base+0x3488>
   2381c:	bl	14148 <__assert_fail@plt>
   23820:	ldr	r3, [pc, #72]	; 23870 <__flatcc_fb_gen_c_verifier@@Base+0x345c>
   23824:	ldr	r2, [pc, #116]	; 238a0 <__flatcc_fb_gen_c_verifier@@Base+0x348c>
   23828:	ldr	r1, [pc, #72]	; 23878 <__flatcc_fb_gen_c_verifier@@Base+0x3464>
   2382c:	ldr	r0, [pc, #72]	; 2387c <__flatcc_fb_gen_c_verifier@@Base+0x3468>
   23830:	bl	14148 <__assert_fail@plt>
   23834:	andeq	r2, r2, ip, asr #7
   23838:	andeq	r3, r2, r4, lsr #17
   2383c:	andeq	r8, r5, r8, asr r0
   23840:	strheq	r8, [r5], -ip
   23844:	andeq	r9, r5, r0, lsr r9
   23848:	andeq	r7, r5, r0, asr r4
   2384c:	andeq	r7, r5, r0, ror r4
   23850:	andeq	r7, r5, r4, lsl #9
   23854:	andeq	lr, r4, ip, asr #2
   23858:	andeq	r6, r5, r4, lsl lr
   2385c:	muleq	r5, r0, r2
   23860:	andeq	r6, r5, r8, lsl sp
   23864:	strdeq	r8, [r5], -r0
   23868:	andeq	r8, r5, ip, lsl #2
   2386c:	andeq	r7, r5, r0, lsr r4
   23870:	andeq	r6, r5, r0, asr fp
   23874:	strdeq	r0, [r0], -r5
   23878:			; <UNDEFINED> instruction: 0x00056cb4
   2387c:	andeq	r6, r5, ip, lsl #26
   23880:	andeq	pc, r6, r8, lsr #1
   23884:	andeq	r7, r5, ip, lsl #7
   23888:	andeq	r0, r0, r1, ror #9
   2388c:	ldrdeq	r4, [r4], -ip
   23890:	andeq	sp, r4, r4, ror r2
   23894:	andeq	r0, r0, pc, ror #9
   23898:	ldrdeq	r0, [r0], -lr
   2389c:	andeq	r4, r4, r0, lsr r4
   238a0:	strdeq	r0, [r0], -lr
   238a4:	ldr	r1, [pc]	; 238ac <__flatcc_fb_gen_c_verifier@@Base+0x3498>
   238a8:	b	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   238ac:	andeq	r6, r5, r8, lsl #24

000238b0 <__flatcc_fb_gen_c_json_parser@@Base>:
   238b0:	ldr	r3, [r0, #208]	; 0xd0
   238b4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   238b8:	mov	r4, r0
   238bc:	sub	sp, sp, #276	; 0x114
   238c0:	ldr	r2, [r3, #164]	; 0xa4
   238c4:	ldr	r1, [pc, #4068]	; 248b0 <__flatcc_fb_gen_c_json_parser@@Base+0x1000>
   238c8:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   238cc:	ldr	r3, [r4, #208]	; 0xd0
   238d0:	mov	r0, r4
   238d4:	ldr	r1, [pc, #4056]	; 248b4 <__flatcc_fb_gen_c_json_parser@@Base+0x1004>
   238d8:	ldr	r2, [r3, #164]	; 0xa4
   238dc:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   238e0:	mov	r0, r4
   238e4:	ldr	r1, [pc, #4044]	; 248b8 <__flatcc_fb_gen_c_json_parser@@Base+0x1008>
   238e8:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   238ec:	mov	r0, r4
   238f0:	ldr	r1, [pc, #4036]	; 248bc <__flatcc_fb_gen_c_json_parser@@Base+0x100c>
   238f4:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   238f8:	mov	r0, r4
   238fc:	ldr	r1, [pc, #4020]	; 248b8 <__flatcc_fb_gen_c_json_parser@@Base+0x1008>
   23900:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   23904:	mov	r0, r4
   23908:	ldr	r1, [pc, #4016]	; 248c0 <__flatcc_fb_gen_c_json_parser@@Base+0x1010>
   2390c:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   23910:	mov	r0, r4
   23914:	ldr	r2, [pc, #4008]	; 248c4 <__flatcc_fb_gen_c_json_parser@@Base+0x1014>
   23918:	ldr	r1, [pc, #4008]	; 248c8 <__flatcc_fb_gen_c_json_parser@@Base+0x1018>
   2391c:	bl	16ee8 <__flatcc_fb_gen_c_includes@@Base>
   23920:	ldr	r3, [r4, #212]	; 0xd4
   23924:	ldr	r3, [r3, #140]	; 0x8c
   23928:	cmp	r3, #0
   2392c:	beq	23944 <__flatcc_fb_gen_c_json_parser@@Base+0x94>
   23930:	ldr	r3, [r4, #204]	; 0xcc
   23934:	mov	r2, #36	; 0x24
   23938:	mov	r1, #1
   2393c:	ldr	r0, [pc, #3976]	; 248cc <__flatcc_fb_gen_c_json_parser@@Base+0x101c>
   23940:	bl	1401c <fwrite@plt>
   23944:	ldr	r1, [pc, #3948]	; 248b8 <__flatcc_fb_gen_c_json_parser@@Base+0x1008>
   23948:	mov	r0, r4
   2394c:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   23950:	ldr	r6, [r4, #208]	; 0xd0
   23954:	add	r0, sp, #52	; 0x34
   23958:	mov	r2, #220	; 0xdc
   2395c:	ldr	r5, [r6, #52]	; 0x34
   23960:	mov	r1, #0
   23964:	bl	140ac <memset@plt>
   23968:	cmp	r5, #0
   2396c:	beq	2397c <__flatcc_fb_gen_c_json_parser@@Base+0xcc>
   23970:	ldrh	r3, [r5, #8]
   23974:	cmp	r3, #1
   23978:	bls	24dd0 <__flatcc_fb_gen_c_json_parser@@Base+0x1520>
   2397c:	ldr	r5, [r6, #40]	; 0x28
   23980:	cmp	r5, #0
   23984:	beq	23a48 <__flatcc_fb_gen_c_json_parser@@Base+0x198>
   23988:	ldr	r7, [pc, #3904]	; 248d0 <__flatcc_fb_gen_c_json_parser@@Base+0x1020>
   2398c:	ldr	r6, [pc, #3904]	; 248d4 <__flatcc_fb_gen_c_json_parser@@Base+0x1024>
   23990:	ldr	fp, [pc, #3904]	; 248d8 <__flatcc_fb_gen_c_json_parser@@Base+0x1028>
   23994:	ldr	sl, [pc, #3904]	; 248dc <__flatcc_fb_gen_c_json_parser@@Base+0x102c>
   23998:	ldr	r9, [pc, #3904]	; 248e0 <__flatcc_fb_gen_c_json_parser@@Base+0x1030>
   2399c:	ldr	r8, [pc, #3904]	; 248e4 <__flatcc_fb_gen_c_json_parser@@Base+0x1034>
   239a0:	ldrh	r3, [r5, #8]
   239a4:	cmp	r3, #4
   239a8:	ldrls	pc, [pc, r3, lsl #2]
   239ac:	b	23a38 <__flatcc_fb_gen_c_json_parser@@Base+0x188>
   239b0:	muleq	r2, r4, fp
   239b4:	strdeq	r3, [r2], -r4
   239b8:	andeq	r3, r2, r8, lsr sl
   239bc:	andeq	r3, r2, r8, lsr #22
   239c0:	andeq	r3, r2, r4, asr #19
   239c4:	add	r2, sp, #52	; 0x34
   239c8:	mov	r1, r5
   239cc:	ldr	r0, [r5, #12]
   239d0:	bl	170c4 <__flatcc_fb_scoped_symbol_name@@Base>
   239d4:	add	r2, sp, #52	; 0x34
   239d8:	mov	r1, r8
   239dc:	mov	r0, r4
   239e0:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   239e4:	add	r2, sp, #52	; 0x34
   239e8:	ldr	r1, [pc, #3832]	; 248e8 <__flatcc_fb_gen_c_json_parser@@Base+0x1038>
   239ec:	mov	r0, r4
   239f0:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   239f4:	add	r2, sp, #52	; 0x34
   239f8:	mov	r1, r7
   239fc:	mov	r0, r4
   23a00:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   23a04:	ldr	r3, [r4, #220]	; 0xdc
   23a08:	mov	r1, r6
   23a0c:	add	r3, r3, #2
   23a10:	str	r3, [r4, #220]	; 0xdc
   23a14:	mov	r0, r4
   23a18:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   23a1c:	ldr	r3, [r4, #220]	; 0xdc
   23a20:	cmp	r3, #0
   23a24:	beq	24f90 <__flatcc_fb_gen_c_json_parser@@Base+0x16e0>
   23a28:	cmp	r3, #1
   23a2c:	beq	24f88 <__flatcc_fb_gen_c_json_parser@@Base+0x16d8>
   23a30:	sub	r3, r3, #2
   23a34:	str	r3, [r4, #220]	; 0xdc
   23a38:	ldr	r5, [r5]
   23a3c:	cmp	r5, #0
   23a40:	bne	239a0 <__flatcc_fb_gen_c_json_parser@@Base+0xf0>
   23a44:	ldr	r6, [r4, #208]	; 0xd0
   23a48:	ldr	r0, [r6, #60]	; 0x3c
   23a4c:	mov	r2, r4
   23a50:	ldr	r1, [pc, #3732]	; 248ec <__flatcc_fb_gen_c_json_parser@@Base+0x103c>
   23a54:	bl	2b300 <fb_scope_table_visit@@Base>
   23a58:	ldr	r3, [r4, #208]	; 0xd0
   23a5c:	ldr	r1, [pc, #3724]	; 248f0 <__flatcc_fb_gen_c_json_parser@@Base+0x1040>
   23a60:	mov	r0, r4
   23a64:	ldr	r2, [r3, #160]	; 0xa0
   23a68:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   23a6c:	ldr	r3, [r4, #220]	; 0xdc
   23a70:	ldr	r1, [pc, #3676]	; 248d4 <__flatcc_fb_gen_c_json_parser@@Base+0x1024>
   23a74:	add	r3, r3, #2
   23a78:	str	r3, [r4, #220]	; 0xdc
   23a7c:	mov	r0, r4
   23a80:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   23a84:	ldr	r3, [r4, #220]	; 0xdc
   23a88:	cmp	r3, #0
   23a8c:	beq	25064 <__flatcc_fb_gen_c_json_parser@@Base+0x17b4>
   23a90:	cmp	r3, #1
   23a94:	moveq	r3, #0
   23a98:	streq	r3, [r4, #220]	; 0xdc
   23a9c:	beq	25064 <__flatcc_fb_gen_c_json_parser@@Base+0x17b4>
   23aa0:	sub	r3, r3, #2
   23aa4:	str	r3, [r4, #220]	; 0xdc
   23aa8:	ldr	r1, [pc, #3592]	; 248b8 <__flatcc_fb_gen_c_json_parser@@Base+0x1008>
   23aac:	mov	r0, r4
   23ab0:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   23ab4:	ldr	r3, [r4, #208]	; 0xd0
   23ab8:	ldr	r9, [r3, #40]	; 0x28
   23abc:	cmp	r9, #0
   23ac0:	addeq	fp, sp, #24
   23ac4:	beq	23bec <__flatcc_fb_gen_c_json_parser@@Base+0x33c>
   23ac8:	ldr	sl, [pc, #3560]	; 248b8 <__flatcc_fb_gen_c_json_parser@@Base+0x1008>
   23acc:	add	fp, sp, #24
   23ad0:	ldrh	r3, [r9, #8]
   23ad4:	cmp	r3, #4
   23ad8:	ldrls	pc, [pc, r3, lsl #2]
   23adc:	b	23bdc <__flatcc_fb_gen_c_json_parser@@Base+0x32c>
   23ae0:	andeq	r4, r2, ip, ror #8
   23ae4:	andeq	r4, r2, ip, ror #1
   23ae8:	ldrdeq	r3, [r2], -ip
   23aec:	andeq	r4, r2, ip, asr r4
   23af0:			; <UNDEFINED> instruction: 0x00023bb8
   23af4:	add	r2, sp, #52	; 0x34
   23af8:	mov	r1, r5
   23afc:	ldr	r0, [r5, #12]
   23b00:	bl	170c4 <__flatcc_fb_scoped_symbol_name@@Base>
   23b04:	add	r2, sp, #52	; 0x34
   23b08:	mov	r1, sl
   23b0c:	mov	r0, r4
   23b10:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   23b14:	add	r2, sp, #52	; 0x34
   23b18:	mov	r1, r9
   23b1c:	mov	r0, r4
   23b20:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   23b24:	b	23a38 <__flatcc_fb_gen_c_json_parser@@Base+0x188>
   23b28:	add	r2, sp, #52	; 0x34
   23b2c:	mov	r1, r5
   23b30:	ldr	r0, [r5, #12]
   23b34:	bl	170c4 <__flatcc_fb_scoped_symbol_name@@Base>
   23b38:	add	r2, sp, #52	; 0x34
   23b3c:	mov	r1, r7
   23b40:	mov	r0, r4
   23b44:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   23b48:	ldr	r3, [r4, #220]	; 0xdc
   23b4c:	add	r2, sp, #52	; 0x34
   23b50:	add	r3, r3, #2
   23b54:	str	r3, [r4, #220]	; 0xdc
   23b58:	mov	r1, r6
   23b5c:	mov	r0, r4
   23b60:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   23b64:	ldr	r3, [r4, #220]	; 0xdc
   23b68:	cmp	r3, #0
   23b6c:	beq	23b80 <__flatcc_fb_gen_c_json_parser@@Base+0x2d0>
   23b70:	cmp	r3, #1
   23b74:	bne	23a30 <__flatcc_fb_gen_c_json_parser@@Base+0x180>
   23b78:	mov	r3, #0
   23b7c:	str	r3, [r4, #220]	; 0xdc
   23b80:	ldr	r3, [pc, #3896]	; 24ac0 <__flatcc_fb_gen_c_json_parser@@Base+0x1210>
   23b84:	ldr	r2, [pc, #3432]	; 248f4 <__flatcc_fb_gen_c_json_parser@@Base+0x1044>
   23b88:	ldr	r1, [pc, #3916]	; 24adc <__flatcc_fb_gen_c_json_parser@@Base+0x122c>
   23b8c:	ldr	r0, [pc, #3916]	; 24ae0 <__flatcc_fb_gen_c_json_parser@@Base+0x1230>
   23b90:	bl	14148 <__assert_fail@plt>
   23b94:	add	r2, sp, #52	; 0x34
   23b98:	mov	r1, r5
   23b9c:	ldr	r0, [r5, #12]
   23ba0:	bl	170c4 <__flatcc_fb_scoped_symbol_name@@Base>
   23ba4:	add	r2, sp, #52	; 0x34
   23ba8:	mov	r1, fp
   23bac:	mov	r0, r4
   23bb0:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   23bb4:	b	23a38 <__flatcc_fb_gen_c_json_parser@@Base+0x188>
   23bb8:	mov	r1, r9
   23bbc:	mov	r0, r4
   23bc0:	bl	21790 <__flatcc_fb_gen_c_verifier@@Base+0x137c>
   23bc4:	mov	r1, r9
   23bc8:	mov	r0, r4
   23bcc:	bl	21c6c <__flatcc_fb_gen_c_verifier@@Base+0x1858>
   23bd0:	mov	r1, r9
   23bd4:	mov	r0, r4
   23bd8:	bl	235c0 <__flatcc_fb_gen_c_verifier@@Base+0x31ac>
   23bdc:	ldr	r9, [r9]
   23be0:	cmp	r9, #0
   23be4:	bne	23ad0 <__flatcc_fb_gen_c_json_parser@@Base+0x220>
   23be8:	ldr	r3, [r4, #208]	; 0xd0
   23bec:	ldr	r0, [r3, #60]	; 0x3c
   23bf0:	mov	r2, r4
   23bf4:	ldr	r1, [pc, #3324]	; 248f8 <__flatcc_fb_gen_c_json_parser@@Base+0x1048>
   23bf8:	bl	2b300 <fb_scope_table_visit@@Base>
   23bfc:	ldr	r5, [r4, #208]	; 0xd0
   23c00:	mov	r1, #0
   23c04:	str	r1, [sp, #24]
   23c08:	str	r1, [fp, #4]
   23c0c:	str	r1, [fp, #8]
   23c10:	str	r1, [fp, #12]
   23c14:	str	r1, [fp, #16]
   23c18:	str	r1, [fp, #20]
   23c1c:	str	r1, [fp, #24]
   23c20:	ldr	r7, [r5, #60]	; 0x3c
   23c24:	mov	r2, #44	; 0x2c
   23c28:	add	r0, sp, #52	; 0x34
   23c2c:	bl	140ac <memset@plt>
   23c30:	mov	r3, #1
   23c34:	add	r2, sp, #52	; 0x34
   23c38:	mov	r0, r7
   23c3c:	ldr	r1, [pc, #3256]	; 248fc <__flatcc_fb_gen_c_json_parser@@Base+0x104c>
   23c40:	str	r3, [sp, #52]	; 0x34
   23c44:	str	r5, [sp, #92]	; 0x5c
   23c48:	bl	2b300 <fb_scope_table_visit@@Base>
   23c4c:	ldr	r5, [sp, #56]	; 0x38
   23c50:	mov	r1, #8
   23c54:	mov	r0, r5
   23c58:	bl	13fa4 <calloc@plt>
   23c5c:	ldr	sl, [sp, #60]	; 0x3c
   23c60:	mov	r1, #8
   23c64:	mov	r6, r0
   23c68:	mov	r0, sl
   23c6c:	str	r6, [sp, #68]	; 0x44
   23c70:	bl	13fa4 <calloc@plt>
   23c74:	ldr	r3, [sp, #64]	; 0x40
   23c78:	str	r3, [sp, #12]
   23c7c:	mov	r9, r0
   23c80:	str	r0, [sp, #72]	; 0x48
   23c84:	mov	r0, r3
   23c88:	bl	14040 <malloc@plt>
   23c8c:	cmp	r5, #0
   23c90:	movle	r5, #0
   23c94:	movgt	r5, #1
   23c98:	cmp	r6, #0
   23c9c:	movne	r5, #0
   23ca0:	cmp	r5, #0
   23ca4:	str	r6, [sp, #80]	; 0x50
   23ca8:	str	r9, [sp, #84]	; 0x54
   23cac:	mov	r8, r0
   23cb0:	str	r0, [sp, #76]	; 0x4c
   23cb4:	str	r0, [sp, #88]	; 0x58
   23cb8:	bne	24f68 <__flatcc_fb_gen_c_json_parser@@Base+0x16b8>
   23cbc:	cmp	sl, #0
   23cc0:	movle	sl, #0
   23cc4:	movgt	sl, #1
   23cc8:	cmp	r9, #0
   23ccc:	movne	sl, #0
   23cd0:	cmp	sl, #0
   23cd4:	bne	24f58 <__flatcc_fb_gen_c_json_parser@@Base+0x16a8>
   23cd8:	ldr	r3, [sp, #12]
   23cdc:	clz	r5, r0
   23ce0:	cmp	r3, #0
   23ce4:	lsr	r5, r5, #5
   23ce8:	moveq	r5, #0
   23cec:	cmp	r5, #0
   23cf0:	bne	24f58 <__flatcc_fb_gen_c_json_parser@@Base+0x16a8>
   23cf4:	mov	r0, r7
   23cf8:	add	r2, sp, #52	; 0x34
   23cfc:	ldr	r1, [pc, #3068]	; 24900 <__flatcc_fb_gen_c_json_parser@@Base+0x1050>
   23d00:	bl	2b300 <fb_scope_table_visit@@Base>
   23d04:	ldr	r6, [sp, #56]	; 0x38
   23d08:	ldr	r7, [sp, #68]	; 0x44
   23d0c:	ldr	r3, [pc, #3056]	; 24904 <__flatcc_fb_gen_c_json_parser@@Base+0x1054>
   23d10:	mov	r0, r7
   23d14:	mov	r1, r6
   23d18:	mov	r2, #8
   23d1c:	bl	14118 <qsort@plt>
   23d20:	cmp	r6, #0
   23d24:	movgt	r3, r5
   23d28:	ble	23d40 <__flatcc_fb_gen_c_json_parser@@Base+0x490>
   23d2c:	ldr	r2, [r7, r3, lsl #3]
   23d30:	str	r3, [r2, #124]	; 0x7c
   23d34:	add	r3, r3, #1
   23d38:	cmp	r6, r3
   23d3c:	bne	23d2c <__flatcc_fb_gen_c_json_parser@@Base+0x47c>
   23d40:	ldr	r5, [sp, #60]	; 0x3c
   23d44:	ldr	r6, [sp, #72]	; 0x48
   23d48:	ldr	r3, [pc, #2996]	; 24904 <__flatcc_fb_gen_c_json_parser@@Base+0x1054>
   23d4c:	mov	r0, r6
   23d50:	mov	r1, r5
   23d54:	mov	r2, #8
   23d58:	bl	14118 <qsort@plt>
   23d5c:	cmp	r5, #0
   23d60:	movgt	r3, #0
   23d64:	ble	23d7c <__flatcc_fb_gen_c_json_parser@@Base+0x4cc>
   23d68:	ldr	r2, [r6, r3, lsl #3]
   23d6c:	str	r3, [r2, #124]	; 0x7c
   23d70:	add	r3, r3, #1
   23d74:	cmp	r5, r3
   23d78:	bne	23d68 <__flatcc_fb_gen_c_json_parser@@Base+0x4b8>
   23d7c:	ldr	r9, [sp, #60]	; 0x3c
   23d80:	cmp	r9, #0
   23d84:	beq	24ea0 <__flatcc_fb_gen_c_json_parser@@Base+0x15f0>
   23d88:	lsl	r7, r9, #4
   23d8c:	mov	r0, r7
   23d90:	bl	14040 <malloc@plt>
   23d94:	subs	sl, r0, #0
   23d98:	beq	24ed8 <__flatcc_fb_gen_c_json_parser@@Base+0x1628>
   23d9c:	cmp	r9, #0
   23da0:	ble	23dd4 <__flatcc_fb_gen_c_json_parser@@Base+0x524>
   23da4:	ldr	r6, [sp, #72]	; 0x48
   23da8:	add	r7, sl, r7
   23dac:	mov	r5, sl
   23db0:	mov	r8, #0
   23db4:	ldr	r0, [r6, #4]
   23db8:	str	r0, [r5]
   23dbc:	bl	1407c <strlen@plt>
   23dc0:	ldr	r3, [r6], #8
   23dc4:	stmib	r5, {r0, r3, r8}
   23dc8:	add	r5, r5, #16
   23dcc:	cmp	r7, r5
   23dd0:	bne	23db4 <__flatcc_fb_gen_c_json_parser@@Base+0x504>
   23dd4:	mov	r1, r9
   23dd8:	ldr	r3, [pc, #2856]	; 24908 <__flatcc_fb_gen_c_json_parser@@Base+0x1058>
   23ddc:	mov	r2, #16
   23de0:	mov	r0, sl
   23de4:	bl	14118 <qsort@plt>
   23de8:	ldr	r9, [sp, #60]	; 0x3c
   23dec:	str	sl, [sp, #24]
   23df0:	ldr	r3, [r4, #208]	; 0xd0
   23df4:	ldr	r1, [pc, #2832]	; 2490c <__flatcc_fb_gen_c_json_parser@@Base+0x105c>
   23df8:	ldr	r0, [pc, #2832]	; 24910 <__flatcc_fb_gen_c_json_parser@@Base+0x1060>
   23dfc:	ldr	r2, [r3, #160]	; 0xa0
   23e00:	mov	r5, #0
   23e04:	mov	r3, #4
   23e08:	str	r1, [sp, #28]
   23e0c:	str	r0, [sp, #32]
   23e10:	ldr	r1, [pc, #2776]	; 248f0 <__flatcc_fb_gen_c_json_parser@@Base+0x1040>
   23e14:	mov	r0, r4
   23e18:	str	r3, [sp, #40]	; 0x28
   23e1c:	str	r5, [sp, #36]	; 0x24
   23e20:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   23e24:	ldr	r3, [r4, #220]	; 0xdc
   23e28:	ldr	r1, [pc, #2788]	; 24914 <__flatcc_fb_gen_c_json_parser@@Base+0x1064>
   23e2c:	add	r3, r3, #2
   23e30:	str	r3, [r4, #220]	; 0xdc
   23e34:	mov	r0, r4
   23e38:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   23e3c:	ldr	r3, [r4, #220]	; 0xdc
   23e40:	cmp	r3, r5
   23e44:	beq	25104 <__flatcc_fb_gen_c_json_parser@@Base+0x1854>
   23e48:	cmp	r3, #1
   23e4c:	streq	r5, [r4, #220]	; 0xdc
   23e50:	beq	25104 <__flatcc_fb_gen_c_json_parser@@Base+0x1854>
   23e54:	sub	r3, r3, #2
   23e58:	str	r3, [r4, #220]	; 0xdc
   23e5c:	ldr	r1, [pc, #2948]	; 249e8 <__flatcc_fb_gen_c_json_parser@@Base+0x1138>
   23e60:	mov	r0, r4
   23e64:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   23e68:	ldr	r3, [r4, #220]	; 0xdc
   23e6c:	cmp	r9, #0
   23e70:	add	r3, r3, #1
   23e74:	str	r3, [r4, #220]	; 0xdc
   23e78:	bne	24bb0 <__flatcc_fb_gen_c_json_parser@@Base+0x1300>
   23e7c:	ldr	r1, [pc, #2708]	; 24918 <__flatcc_fb_gen_c_json_parser@@Base+0x1068>
   23e80:	mov	r0, r4
   23e84:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   23e88:	ldr	r1, [pc, #2700]	; 2491c <__flatcc_fb_gen_c_json_parser@@Base+0x106c>
   23e8c:	mov	r0, r4
   23e90:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   23e94:	ldr	r3, [r4, #220]	; 0xdc
   23e98:	cmp	r3, #0
   23e9c:	beq	25118 <__flatcc_fb_gen_c_json_parser@@Base+0x1868>
   23ea0:	sub	r3, r3, #1
   23ea4:	str	r3, [r4, #220]	; 0xdc
   23ea8:	ldr	r1, [pc, #2908]	; 24a0c <__flatcc_fb_gen_c_json_parser@@Base+0x115c>
   23eac:	mov	r0, r4
   23eb0:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   23eb4:	mov	r0, r4
   23eb8:	ldr	r1, [pc, #2552]	; 248b8 <__flatcc_fb_gen_c_json_parser@@Base+0x1008>
   23ebc:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   23ec0:	ldr	r0, [sp, #24]
   23ec4:	cmp	r0, #0
   23ec8:	beq	23ed0 <__flatcc_fb_gen_c_json_parser@@Base+0x620>
   23ecc:	bl	13fd4 <free@plt>
   23ed0:	ldr	r0, [sp, #68]	; 0x44
   23ed4:	cmp	r0, #0
   23ed8:	beq	23ee0 <__flatcc_fb_gen_c_json_parser@@Base+0x630>
   23edc:	bl	13fd4 <free@plt>
   23ee0:	ldr	r0, [sp, #72]	; 0x48
   23ee4:	cmp	r0, #0
   23ee8:	beq	23ef0 <__flatcc_fb_gen_c_json_parser@@Base+0x640>
   23eec:	bl	13fd4 <free@plt>
   23ef0:	ldr	r0, [sp, #76]	; 0x4c
   23ef4:	cmp	r0, #0
   23ef8:	beq	23f00 <__flatcc_fb_gen_c_json_parser@@Base+0x650>
   23efc:	bl	13fd4 <free@plt>
   23f00:	ldr	r3, [r4, #208]	; 0xd0
   23f04:	ldr	r5, [r3, #52]	; 0x34
   23f08:	cmp	r5, #0
   23f0c:	beq	240a8 <__flatcc_fb_gen_c_json_parser@@Base+0x7f8>
   23f10:	ldrh	r6, [r5, #8]
   23f14:	cmp	r6, #0
   23f18:	beq	24c5c <__flatcc_fb_gen_c_json_parser@@Base+0x13ac>
   23f1c:	cmp	r6, #1
   23f20:	bne	240a8 <__flatcc_fb_gen_c_json_parser@@Base+0x7f8>
   23f24:	mov	r2, #220	; 0xdc
   23f28:	mov	r1, #0
   23f2c:	add	r0, sp, #52	; 0x34
   23f30:	bl	140ac <memset@plt>
   23f34:	add	r2, sp, #52	; 0x34
   23f38:	mov	r1, r5
   23f3c:	ldr	r0, [r5, #12]
   23f40:	bl	170c4 <__flatcc_fb_scoped_symbol_name@@Base>
   23f44:	ldr	r3, [r4, #208]	; 0xd0
   23f48:	ldr	r1, [pc, #2804]	; 24a44 <__flatcc_fb_gen_c_json_parser@@Base+0x1194>
   23f4c:	mov	r0, r4
   23f50:	ldr	r2, [r3, #160]	; 0xa0
   23f54:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   23f58:	ldr	r3, [r4, #220]	; 0xdc
   23f5c:	ldr	r1, [pc, #2688]	; 249e4 <__flatcc_fb_gen_c_json_parser@@Base+0x1134>
   23f60:	add	r3, r3, #2
   23f64:	str	r3, [r4, #220]	; 0xdc
   23f68:	mov	r0, r4
   23f6c:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   23f70:	ldr	r3, [r4, #220]	; 0xdc
   23f74:	cmp	r3, #0
   23f78:	beq	2512c <__flatcc_fb_gen_c_json_parser@@Base+0x187c>
   23f7c:	cmp	r3, #1
   23f80:	moveq	r3, #0
   23f84:	streq	r3, [r4, #220]	; 0xdc
   23f88:	beq	2512c <__flatcc_fb_gen_c_json_parser@@Base+0x187c>
   23f8c:	sub	r3, r3, #2
   23f90:	str	r3, [r4, #220]	; 0xdc
   23f94:	ldr	r1, [pc, #2636]	; 249e8 <__flatcc_fb_gen_c_json_parser@@Base+0x1138>
   23f98:	mov	r0, r4
   23f9c:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   23fa0:	ldr	r3, [r4, #220]	; 0xdc
   23fa4:	ldr	r1, [pc, #2420]	; 24920 <__flatcc_fb_gen_c_json_parser@@Base+0x1070>
   23fa8:	add	r3, r3, #1
   23fac:	str	r3, [r4, #220]	; 0xdc
   23fb0:	mov	r0, r4
   23fb4:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   23fb8:	ldr	r1, [pc, #2608]	; 249f0 <__flatcc_fb_gen_c_json_parser@@Base+0x1140>
   23fbc:	mov	r0, r4
   23fc0:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   23fc4:	ldr	r1, [pc, #2284]	; 248b8 <__flatcc_fb_gen_c_json_parser@@Base+0x1008>
   23fc8:	mov	r0, r4
   23fcc:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   23fd0:	ldr	r1, [pc, #2380]	; 24924 <__flatcc_fb_gen_c_json_parser@@Base+0x1074>
   23fd4:	mov	r0, r4
   23fd8:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   23fdc:	ldr	r1, [pc, #2580]	; 249f8 <__flatcc_fb_gen_c_json_parser@@Base+0x1148>
   23fe0:	mov	r0, r4
   23fe4:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   23fe8:	ldr	r2, [r4, #208]	; 0xd0
   23fec:	ldrh	r3, [r2, #16]
   23ff0:	cmp	r3, #2
   23ff4:	beq	24ec0 <__flatcc_fb_gen_c_json_parser@@Base+0x1610>
   23ff8:	ldr	r1, [pc, #2556]	; 249fc <__flatcc_fb_gen_c_json_parser@@Base+0x114c>
   23ffc:	mov	r0, r4
   24000:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   24004:	add	r2, sp, #52	; 0x34
   24008:	ldr	r1, [pc, #2328]	; 24928 <__flatcc_fb_gen_c_json_parser@@Base+0x1078>
   2400c:	mov	r0, r4
   24010:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   24014:	ldr	r1, [pc, #2536]	; 24a04 <__flatcc_fb_gen_c_json_parser@@Base+0x1154>
   24018:	mov	r0, r4
   2401c:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   24020:	ldr	r3, [r4, #220]	; 0xdc
   24024:	ldr	r1, [pc, #2524]	; 24a08 <__flatcc_fb_gen_c_json_parser@@Base+0x1158>
   24028:	add	r3, r3, #1
   2402c:	str	r3, [r4, #220]	; 0xdc
   24030:	mov	r0, r4
   24034:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   24038:	ldr	r3, [r4, #220]	; 0xdc
   2403c:	cmp	r3, #0
   24040:	beq	25014 <__flatcc_fb_gen_c_json_parser@@Base+0x1764>
   24044:	sub	r3, r3, #1
   24048:	str	r3, [r4, #220]	; 0xdc
   2404c:	ldr	r1, [pc, #2488]	; 24a0c <__flatcc_fb_gen_c_json_parser@@Base+0x115c>
   24050:	mov	r0, r4
   24054:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   24058:	ldr	r1, [pc, #2480]	; 24a10 <__flatcc_fb_gen_c_json_parser@@Base+0x1160>
   2405c:	mov	r0, r4
   24060:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   24064:	ldr	r1, [pc, #2472]	; 24a14 <__flatcc_fb_gen_c_json_parser@@Base+0x1164>
   24068:	mov	r0, r4
   2406c:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   24070:	ldr	r1, [pc, #2464]	; 24a18 <__flatcc_fb_gen_c_json_parser@@Base+0x1168>
   24074:	mov	r0, r4
   24078:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   2407c:	ldr	r3, [r4, #220]	; 0xdc
   24080:	cmp	r3, #0
   24084:	beq	25028 <__flatcc_fb_gen_c_json_parser@@Base+0x1778>
   24088:	sub	r3, r3, #1
   2408c:	ldr	r1, [pc, #2424]	; 24a0c <__flatcc_fb_gen_c_json_parser@@Base+0x115c>
   24090:	mov	r0, r4
   24094:	str	r3, [r4, #220]	; 0xdc
   24098:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   2409c:	ldr	r1, [pc, #2068]	; 248b8 <__flatcc_fb_gen_c_json_parser@@Base+0x1008>
   240a0:	mov	r0, r4
   240a4:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   240a8:	ldr	r3, [r4, #212]	; 0xd4
   240ac:	ldr	r3, [r3, #140]	; 0x8c
   240b0:	cmp	r3, #0
   240b4:	beq	240cc <__flatcc_fb_gen_c_json_parser@@Base+0x81c>
   240b8:	ldr	r3, [r4, #204]	; 0xcc
   240bc:	mov	r2, #36	; 0x24
   240c0:	mov	r1, #1
   240c4:	ldr	r0, [pc, #2144]	; 2492c <__flatcc_fb_gen_c_json_parser@@Base+0x107c>
   240c8:	bl	1401c <fwrite@plt>
   240cc:	ldr	r3, [r4, #208]	; 0xd0
   240d0:	mov	r0, r4
   240d4:	ldr	r1, [pc, #2132]	; 24930 <__flatcc_fb_gen_c_json_parser@@Base+0x1080>
   240d8:	ldr	r2, [r3, #164]	; 0xa4
   240dc:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   240e0:	mov	r0, #0
   240e4:	add	sp, sp, #276	; 0x114
   240e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   240ec:	mov	r3, #0
   240f0:	str	r3, [fp]
   240f4:	str	r3, [fp, #4]
   240f8:	str	r3, [fp, #8]
   240fc:	str	r3, [fp, #12]
   24100:	str	r3, [fp, #16]
   24104:	str	r3, [fp, #20]
   24108:	str	r3, [fp, #24]
   2410c:	ldrh	r3, [r9, #8]
   24110:	cmp	r3, #1
   24114:	bne	25050 <__flatcc_fb_gen_c_json_parser@@Base+0x17a0>
   24118:	add	r1, sp, #20
   2411c:	ldr	r0, [r9, #20]
   24120:	bl	2343c <__flatcc_fb_gen_c_verifier@@Base+0x3028>
   24124:	cmp	r0, #0
   24128:	str	r0, [sp, #24]
   2412c:	beq	24b20 <__flatcc_fb_gen_c_json_parser@@Base+0x1270>
   24130:	ldr	r1, [pc, #2212]	; 249dc <__flatcc_fb_gen_c_json_parser@@Base+0x112c>
   24134:	ldr	r0, [pc, #2212]	; 249e0 <__flatcc_fb_gen_c_json_parser@@Base+0x1130>
   24138:	mov	r3, #1
   2413c:	mov	r2, #220	; 0xdc
   24140:	str	r1, [sp, #28]
   24144:	str	r0, [sp, #32]
   24148:	mov	r1, #0
   2414c:	add	r0, sp, #52	; 0x34
   24150:	str	r3, [sp, #40]	; 0x28
   24154:	str	r9, [sp, #36]	; 0x24
   24158:	bl	140ac <memset@plt>
   2415c:	add	r2, sp, #52	; 0x34
   24160:	mov	r1, r9
   24164:	ldr	r0, [r9, #12]
   24168:	bl	170c4 <__flatcc_fb_scoped_symbol_name@@Base>
   2416c:	add	r2, sp, #52	; 0x34
   24170:	ldr	r1, [pc, #1980]	; 24934 <__flatcc_fb_gen_c_json_parser@@Base+0x1084>
   24174:	mov	r0, r4
   24178:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   2417c:	ldr	r1, [pc, #2148]	; 249e8 <__flatcc_fb_gen_c_json_parser@@Base+0x1138>
   24180:	mov	r0, r4
   24184:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   24188:	ldr	r3, [r4, #220]	; 0xdc
   2418c:	ldr	r1, [pc, #1956]	; 24938 <__flatcc_fb_gen_c_json_parser@@Base+0x1088>
   24190:	add	r3, r3, #1
   24194:	str	r3, [r4, #220]	; 0xdc
   24198:	mov	r0, r4
   2419c:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   241a0:	ldr	r3, [sp, #20]
   241a4:	cmp	r3, #0
   241a8:	ble	241dc <__flatcc_fb_gen_c_json_parser@@Base+0x92c>
   241ac:	ldr	r1, [pc, #1928]	; 2493c <__flatcc_fb_gen_c_json_parser@@Base+0x108c>
   241b0:	mov	r0, r4
   241b4:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   241b8:	ldr	r1, [pc, #1920]	; 24940 <__flatcc_fb_gen_c_json_parser@@Base+0x1090>
   241bc:	mov	r0, r4
   241c0:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   241c4:	ldr	r1, [pc, #2044]	; 249c8 <__flatcc_fb_gen_c_json_parser@@Base+0x1118>
   241c8:	mov	r0, r4
   241cc:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   241d0:	ldr	r1, [pc, #2036]	; 249cc <__flatcc_fb_gen_c_json_parser@@Base+0x111c>
   241d4:	mov	r0, r4
   241d8:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   241dc:	mov	r1, sl
   241e0:	mov	r0, r4
   241e4:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   241e8:	ldr	r1, [pc, #1876]	; 24944 <__flatcc_fb_gen_c_json_parser@@Base+0x1094>
   241ec:	mov	r0, r4
   241f0:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   241f4:	ldr	r1, [pc, #1868]	; 24948 <__flatcc_fb_gen_c_json_parser@@Base+0x1098>
   241f8:	mov	r0, r4
   241fc:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   24200:	ldr	r3, [r4, #220]	; 0xdc
   24204:	ldr	r2, [sp, #20]
   24208:	add	r3, r3, #1
   2420c:	cmp	r2, #0
   24210:	str	r3, [r4, #220]	; 0xdc
   24214:	bne	24ae8 <__flatcc_fb_gen_c_json_parser@@Base+0x1238>
   24218:	ldr	r1, [pc, #1836]	; 2494c <__flatcc_fb_gen_c_json_parser@@Base+0x109c>
   2421c:	mov	r0, r4
   24220:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   24224:	ldr	r1, [pc, #1940]	; 249c0 <__flatcc_fb_gen_c_json_parser@@Base+0x1110>
   24228:	mov	r0, r4
   2422c:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   24230:	ldr	r1, [pc, #1816]	; 24950 <__flatcc_fb_gen_c_json_parser@@Base+0x10a0>
   24234:	mov	r0, r4
   24238:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   2423c:	ldr	r3, [r4, #220]	; 0xdc
   24240:	cmp	r3, #0
   24244:	beq	250dc <__flatcc_fb_gen_c_json_parser@@Base+0x182c>
   24248:	sub	r3, r3, #1
   2424c:	str	r3, [r4, #220]	; 0xdc
   24250:	ldr	r1, [pc, #1972]	; 24a0c <__flatcc_fb_gen_c_json_parser@@Base+0x115c>
   24254:	mov	r0, r4
   24258:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   2425c:	ldr	r1, [pc, #1904]	; 249d4 <__flatcc_fb_gen_c_json_parser@@Base+0x1124>
   24260:	mov	r0, r4
   24264:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   24268:	ldr	r3, [sp, #20]
   2426c:	cmp	r3, #0
   24270:	ble	242a4 <__flatcc_fb_gen_c_json_parser@@Base+0x9f4>
   24274:	ldr	r2, [r4, #220]	; 0xdc
   24278:	mov	r3, #0
   2427c:	str	r3, [r4, #220]	; 0xdc
   24280:	ldr	r1, [pc, #1740]	; 24954 <__flatcc_fb_gen_c_json_parser@@Base+0x10a4>
   24284:	mov	r0, r4
   24288:	str	r2, [r4, #228]	; 0xe4
   2428c:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   24290:	ldr	r3, [r4, #228]	; 0xe4
   24294:	ldr	r1, [pc, #1724]	; 24958 <__flatcc_fb_gen_c_json_parser@@Base+0x10a8>
   24298:	str	r3, [r4, #220]	; 0xdc
   2429c:	mov	r0, r4
   242a0:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   242a4:	ldr	r3, [r4, #220]	; 0xdc
   242a8:	cmp	r3, #0
   242ac:	beq	250c8 <__flatcc_fb_gen_c_json_parser@@Base+0x1818>
   242b0:	sub	r3, r3, #1
   242b4:	str	r3, [r4, #220]	; 0xdc
   242b8:	ldr	r1, [pc, #1868]	; 24a0c <__flatcc_fb_gen_c_json_parser@@Base+0x115c>
   242bc:	mov	r0, r4
   242c0:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   242c4:	mov	r0, r4
   242c8:	mov	r1, sl
   242cc:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   242d0:	ldr	r0, [sp, #24]
   242d4:	cmp	r0, #0
   242d8:	beq	242e0 <__flatcc_fb_gen_c_json_parser@@Base+0xa30>
   242dc:	bl	13fd4 <free@plt>
   242e0:	ldrh	r3, [r9, #8]
   242e4:	cmp	r3, #1
   242e8:	bne	250b4 <__flatcc_fb_gen_c_json_parser@@Base+0x1804>
   242ec:	mov	r2, #220	; 0xdc
   242f0:	mov	r1, #0
   242f4:	add	r0, sp, #52	; 0x34
   242f8:	bl	140ac <memset@plt>
   242fc:	add	r2, sp, #52	; 0x34
   24300:	mov	r1, r9
   24304:	ldr	r0, [r9, #12]
   24308:	bl	170c4 <__flatcc_fb_scoped_symbol_name@@Base>
   2430c:	add	r2, sp, #52	; 0x34
   24310:	ldr	r1, [pc, #1604]	; 2495c <__flatcc_fb_gen_c_json_parser@@Base+0x10ac>
   24314:	mov	r0, r4
   24318:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   2431c:	ldr	r1, [pc, #1732]	; 249e8 <__flatcc_fb_gen_c_json_parser@@Base+0x1138>
   24320:	mov	r0, r4
   24324:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   24328:	ldr	r3, [r4, #220]	; 0xdc
   2432c:	ldr	r1, [pc, #1548]	; 24940 <__flatcc_fb_gen_c_json_parser@@Base+0x1090>
   24330:	add	r3, r3, #1
   24334:	str	r3, [r4, #220]	; 0xdc
   24338:	mov	r0, r4
   2433c:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   24340:	mov	r1, sl
   24344:	mov	r0, r4
   24348:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   2434c:	ldr	r1, [pc, #1548]	; 24960 <__flatcc_fb_gen_c_json_parser@@Base+0x10b0>
   24350:	mov	r0, r4
   24354:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   24358:	ldrh	r0, [r9, #104]	; 0x68
   2435c:	ldrd	r2, [r9, #112]	; 0x70
   24360:	ldr	r1, [pc, #1532]	; 24964 <__flatcc_fb_gen_c_json_parser@@Base+0x10b4>
   24364:	str	r0, [sp]
   24368:	mov	r0, r4
   2436c:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   24370:	add	r2, sp, #52	; 0x34
   24374:	ldr	r1, [pc, #1516]	; 24968 <__flatcc_fb_gen_c_json_parser@@Base+0x10b8>
   24378:	mov	r0, r4
   2437c:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   24380:	ldr	r1, [pc, #1508]	; 2496c <__flatcc_fb_gen_c_json_parser@@Base+0x10bc>
   24384:	mov	r0, r4
   24388:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   2438c:	ldr	r1, [pc, #1600]	; 249d4 <__flatcc_fb_gen_c_json_parser@@Base+0x1124>
   24390:	mov	r0, r4
   24394:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   24398:	ldr	r2, [r4, #220]	; 0xdc
   2439c:	mov	r3, #0
   243a0:	str	r2, [r4, #228]	; 0xe4
   243a4:	str	r3, [r4, #220]	; 0xdc
   243a8:	ldr	r1, [pc, #1444]	; 24954 <__flatcc_fb_gen_c_json_parser@@Base+0x10a4>
   243ac:	mov	r0, r4
   243b0:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   243b4:	ldr	r3, [r4, #228]	; 0xe4
   243b8:	ldr	r1, [pc, #1432]	; 24958 <__flatcc_fb_gen_c_json_parser@@Base+0x10a8>
   243bc:	str	r3, [r4, #220]	; 0xdc
   243c0:	mov	r0, r4
   243c4:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   243c8:	ldr	r3, [r4, #220]	; 0xdc
   243cc:	cmp	r3, #0
   243d0:	beq	250a0 <__flatcc_fb_gen_c_json_parser@@Base+0x17f0>
   243d4:	sub	r3, r3, #1
   243d8:	str	r3, [r4, #220]	; 0xdc
   243dc:	ldr	r1, [pc, #1576]	; 24a0c <__flatcc_fb_gen_c_json_parser@@Base+0x115c>
   243e0:	mov	r0, r4
   243e4:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   243e8:	mov	r1, sl
   243ec:	mov	r0, r4
   243f0:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   243f4:	add	r2, sp, #52	; 0x34
   243f8:	ldr	r1, [pc, #1392]	; 24970 <__flatcc_fb_gen_c_json_parser@@Base+0x10c0>
   243fc:	mov	r0, r4
   24400:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   24404:	ldr	r1, [pc, #1500]	; 249e8 <__flatcc_fb_gen_c_json_parser@@Base+0x1138>
   24408:	mov	r0, r4
   2440c:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   24410:	ldr	r3, [r4, #220]	; 0xdc
   24414:	add	r2, sp, #52	; 0x34
   24418:	add	r3, r3, #1
   2441c:	str	r3, [r4, #220]	; 0xdc
   24420:	ldr	r1, [pc, #1356]	; 24974 <__flatcc_fb_gen_c_json_parser@@Base+0x10c4>
   24424:	mov	r0, r4
   24428:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   2442c:	ldr	r3, [r4, #220]	; 0xdc
   24430:	cmp	r3, #0
   24434:	beq	2508c <__flatcc_fb_gen_c_json_parser@@Base+0x17dc>
   24438:	sub	r3, r3, #1
   2443c:	mov	r0, r4
   24440:	str	r3, [r4, #220]	; 0xdc
   24444:	ldr	r1, [pc, #1472]	; 24a0c <__flatcc_fb_gen_c_json_parser@@Base+0x115c>
   24448:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   2444c:	mov	r1, sl
   24450:	mov	r0, r4
   24454:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   24458:	b	23bdc <__flatcc_fb_gen_c_json_parser@@Base+0x32c>
   2445c:	mov	r1, r9
   24460:	mov	r0, r4
   24464:	bl	235c0 <__flatcc_fb_gen_c_verifier@@Base+0x31ac>
   24468:	b	23bdc <__flatcc_fb_gen_c_json_parser@@Base+0x32c>
   2446c:	mov	r3, #0
   24470:	str	r3, [fp]
   24474:	str	r3, [fp, #4]
   24478:	str	r3, [fp, #8]
   2447c:	str	r3, [fp, #12]
   24480:	str	r3, [fp, #16]
   24484:	str	r3, [fp, #20]
   24488:	str	r3, [fp, #24]
   2448c:	ldrh	r5, [r9, #8]
   24490:	cmp	r5, r3
   24494:	bne	25078 <__flatcc_fb_gen_c_json_parser@@Base+0x17c8>
   24498:	add	r1, sp, #20
   2449c:	ldr	r0, [r9, #20]
   244a0:	bl	2343c <__flatcc_fb_gen_c_verifier@@Base+0x3028>
   244a4:	cmp	r0, #0
   244a8:	str	r0, [sp, #24]
   244ac:	beq	24c30 <__flatcc_fb_gen_c_json_parser@@Base+0x1380>
   244b0:	ldr	r1, [sp, #20]
   244b4:	ldr	r2, [pc, #1312]	; 249dc <__flatcc_fb_gen_c_json_parser@@Base+0x112c>
   244b8:	ldr	r3, [pc, #1312]	; 249e0 <__flatcc_fb_gen_c_json_parser@@Base+0x1130>
   244bc:	cmp	r1, #0
   244c0:	str	r9, [sp, #36]	; 0x24
   244c4:	str	r5, [sp, #40]	; 0x28
   244c8:	str	r5, [sp, #44]	; 0x2c
   244cc:	str	r2, [sp, #28]
   244d0:	str	r3, [sp, #32]
   244d4:	ble	244fc <__flatcc_fb_gen_c_json_parser@@Base+0xc4c>
   244d8:	add	r1, r0, r1, lsl #4
   244dc:	mov	r3, r5
   244e0:	ldr	r2, [r0, #12]
   244e4:	add	r0, r0, #16
   244e8:	cmp	r2, #0
   244ec:	addne	r3, r3, #1
   244f0:	cmp	r1, r0
   244f4:	bne	244e0 <__flatcc_fb_gen_c_json_parser@@Base+0xc30>
   244f8:	str	r3, [sp, #44]	; 0x2c
   244fc:	mov	r2, #220	; 0xdc
   24500:	mov	r1, #0
   24504:	add	r0, sp, #52	; 0x34
   24508:	bl	140ac <memset@plt>
   2450c:	add	r2, sp, #52	; 0x34
   24510:	mov	r1, r9
   24514:	ldr	r0, [r9, #12]
   24518:	bl	170c4 <__flatcc_fb_scoped_symbol_name@@Base>
   2451c:	add	r2, sp, #52	; 0x34
   24520:	ldr	r1, [pc, #1104]	; 24978 <__flatcc_fb_gen_c_json_parser@@Base+0x10c8>
   24524:	mov	r0, r4
   24528:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   2452c:	ldr	r1, [pc, #1204]	; 249e8 <__flatcc_fb_gen_c_json_parser@@Base+0x1138>
   24530:	mov	r0, r4
   24534:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   24538:	ldr	r3, [r4, #220]	; 0xdc
   2453c:	ldr	r1, [pc, #1012]	; 24938 <__flatcc_fb_gen_c_json_parser@@Base+0x1088>
   24540:	add	r3, r3, #1
   24544:	str	r3, [r4, #220]	; 0xdc
   24548:	mov	r0, r4
   2454c:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   24550:	ldr	r3, [sp, #20]
   24554:	cmp	r3, #0
   24558:	ble	2458c <__flatcc_fb_gen_c_json_parser@@Base+0xcdc>
   2455c:	ldr	r1, [pc, #988]	; 24940 <__flatcc_fb_gen_c_json_parser@@Base+0x1090>
   24560:	mov	r0, r4
   24564:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   24568:	ldr	r1, [pc, #1036]	; 2497c <__flatcc_fb_gen_c_json_parser@@Base+0x10cc>
   2456c:	mov	r0, r4
   24570:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   24574:	ldr	r1, [pc, #1100]	; 249c8 <__flatcc_fb_gen_c_json_parser@@Base+0x1118>
   24578:	mov	r0, r4
   2457c:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   24580:	ldr	r1, [pc, #1092]	; 249cc <__flatcc_fb_gen_c_json_parser@@Base+0x111c>
   24584:	mov	r0, r4
   24588:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   2458c:	ldr	r3, [sp, #44]	; 0x2c
   24590:	cmp	r3, #0
   24594:	bne	24b60 <__flatcc_fb_gen_c_json_parser@@Base+0x12b0>
   24598:	mov	r1, sl
   2459c:	mov	r0, r4
   245a0:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   245a4:	ldr	r1, [pc, #948]	; 24960 <__flatcc_fb_gen_c_json_parser@@Base+0x10b0>
   245a8:	mov	r0, r4
   245ac:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   245b0:	ldrd	r2, [r9, #96]	; 0x60
   245b4:	ldr	r1, [pc, #964]	; 24980 <__flatcc_fb_gen_c_json_parser@@Base+0x10d0>
   245b8:	mov	r0, r4
   245bc:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   245c0:	ldr	r2, [sp, #44]	; 0x2c
   245c4:	cmp	r2, #0
   245c8:	bne	24b80 <__flatcc_fb_gen_c_json_parser@@Base+0x12d0>
   245cc:	ldr	r1, [pc, #880]	; 24944 <__flatcc_fb_gen_c_json_parser@@Base+0x1094>
   245d0:	mov	r0, r4
   245d4:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   245d8:	ldr	r1, [pc, #872]	; 24948 <__flatcc_fb_gen_c_json_parser@@Base+0x1098>
   245dc:	mov	r0, r4
   245e0:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   245e4:	ldr	r3, [r4, #220]	; 0xdc
   245e8:	ldr	r1, [pc, #952]	; 249a8 <__flatcc_fb_gen_c_json_parser@@Base+0x10f8>
   245ec:	add	r3, r3, #1
   245f0:	str	r3, [r4, #220]	; 0xdc
   245f4:	mov	r0, r4
   245f8:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   245fc:	ldr	r3, [sp, #20]
   24600:	cmp	r3, #0
   24604:	ble	24b94 <__flatcc_fb_gen_c_json_parser@@Base+0x12e4>
   24608:	ldr	r1, [pc, #960]	; 249d0 <__flatcc_fb_gen_c_json_parser@@Base+0x1120>
   2460c:	mov	r0, r4
   24610:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   24614:	ldr	r3, [sp, #20]
   24618:	mov	r2, #0
   2461c:	sub	r3, r3, #1
   24620:	str	r2, [sp]
   24624:	mov	r1, fp
   24628:	mov	r0, r4
   2462c:	bl	20c80 <__flatcc_fb_gen_c_verifier@@Base+0x86c>
   24630:	ldr	r1, [pc, #844]	; 24984 <__flatcc_fb_gen_c_json_parser@@Base+0x10d4>
   24634:	mov	r0, r4
   24638:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   2463c:	ldr	r3, [r4, #220]	; 0xdc
   24640:	cmp	r3, #0
   24644:	beq	2503c <__flatcc_fb_gen_c_json_parser@@Base+0x178c>
   24648:	sub	r3, r3, #1
   2464c:	str	r3, [r4, #220]	; 0xdc
   24650:	ldr	r1, [pc, #948]	; 24a0c <__flatcc_fb_gen_c_json_parser@@Base+0x115c>
   24654:	mov	r0, r4
   24658:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   2465c:	mov	r0, r4
   24660:	ldr	r1, [pc, #800]	; 24988 <__flatcc_fb_gen_c_json_parser@@Base+0x10d8>
   24664:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   24668:	ldr	r0, [sp, #20]
   2466c:	cmp	r0, #0
   24670:	ble	247b8 <__flatcc_fb_gen_c_json_parser@@Base+0xf08>
   24674:	mov	r5, #0
   24678:	mov	r7, r5
   2467c:	mov	r6, #1
   24680:	str	r9, [sp, #12]
   24684:	b	246c4 <__flatcc_fb_gen_c_json_parser@@Base+0xe14>
   24688:	subs	r8, r2, r8
   2468c:	sbc	r9, r3, r9
   24690:	mov	r3, r9
   24694:	mov	r0, r4
   24698:	ldr	r1, [pc, #748]	; 2498c <__flatcc_fb_gen_c_json_parser@@Base+0x10dc>
   2469c:	mov	r2, r8
   246a0:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   246a4:	ldr	r3, [r4, #220]	; 0xdc
   246a8:	ldr	r0, [sp, #20]
   246ac:	mov	r6, r7
   246b0:	add	r3, r3, #1
   246b4:	str	r3, [r4, #220]	; 0xdc
   246b8:	add	r5, r5, #1
   246bc:	cmp	r5, r0
   246c0:	bge	24748 <__flatcc_fb_gen_c_json_parser@@Base+0xe98>
   246c4:	ldr	r3, [sp, #24]
   246c8:	add	r3, r3, r5, lsl #4
   246cc:	ldr	r3, [r3, #8]
   246d0:	ldrh	r1, [r3, #72]	; 0x48
   246d4:	tst	r1, #4
   246d8:	bne	246b8 <__flatcc_fb_gen_c_json_parser@@Base+0xe08>
   246dc:	ldrh	r2, [r3, #24]
   246e0:	mov	r9, #0
   246e4:	sub	r2, r2, #14
   246e8:	cmp	r2, #1
   246ec:	movhi	r2, r7
   246f0:	ldrls	r2, [r3, #16]
   246f4:	ldrhls	r2, [r2, #8]
   246f8:	subls	r2, r2, #4
   246fc:	clzls	r2, r2
   24700:	lsrls	r2, r2, #5
   24704:	tst	r1, #256	; 0x100
   24708:	uxtb	r8, r2
   2470c:	beq	246b8 <__flatcc_fb_gen_c_json_parser@@Base+0xe08>
   24710:	cmp	r6, #0
   24714:	ldrd	r2, [r3, #96]	; 0x60
   24718:	bne	24688 <__flatcc_fb_gen_c_json_parser@@Base+0xdd8>
   2471c:	subs	r8, r2, r8
   24720:	sbc	r9, r3, r9
   24724:	mov	r0, r4
   24728:	ldr	r1, [pc, #608]	; 24990 <__flatcc_fb_gen_c_json_parser@@Base+0x10e0>
   2472c:	mov	r2, r8
   24730:	mov	r3, r9
   24734:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   24738:	ldr	r0, [sp, #20]
   2473c:	add	r5, r5, #1
   24740:	cmp	r5, r0
   24744:	blt	246c4 <__flatcc_fb_gen_c_json_parser@@Base+0xe14>
   24748:	cmp	r6, #0
   2474c:	ldr	r9, [sp, #12]
   24750:	bne	247b8 <__flatcc_fb_gen_c_json_parser@@Base+0xf08>
   24754:	ldr	r3, [r4, #220]	; 0xdc
   24758:	cmp	r3, #0
   2475c:	beq	25154 <__flatcc_fb_gen_c_json_parser@@Base+0x18a4>
   24760:	sub	r3, r3, #1
   24764:	str	r3, [r4, #220]	; 0xdc
   24768:	ldr	r1, [pc, #548]	; 24994 <__flatcc_fb_gen_c_json_parser@@Base+0x10e4>
   2476c:	mov	r0, r4
   24770:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   24774:	ldr	r3, [r4, #220]	; 0xdc
   24778:	ldr	r1, [pc, #536]	; 24998 <__flatcc_fb_gen_c_json_parser@@Base+0x10e8>
   2477c:	add	r3, r3, #1
   24780:	str	r3, [r4, #220]	; 0xdc
   24784:	mov	r0, r4
   24788:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   2478c:	ldr	r1, [pc, #520]	; 2499c <__flatcc_fb_gen_c_json_parser@@Base+0x10ec>
   24790:	mov	r0, r4
   24794:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   24798:	ldr	r3, [r4, #220]	; 0xdc
   2479c:	cmp	r3, #0
   247a0:	beq	250f0 <__flatcc_fb_gen_c_json_parser@@Base+0x1840>
   247a4:	sub	r3, r3, #1
   247a8:	str	r3, [r4, #220]	; 0xdc
   247ac:	ldr	r1, [pc, #600]	; 24a0c <__flatcc_fb_gen_c_json_parser@@Base+0x115c>
   247b0:	mov	r0, r4
   247b4:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   247b8:	ldr	r3, [sp, #44]	; 0x2c
   247bc:	cmp	r3, #0
   247c0:	bne	24b70 <__flatcc_fb_gen_c_json_parser@@Base+0x12c0>
   247c4:	ldr	r1, [pc, #468]	; 249a0 <__flatcc_fb_gen_c_json_parser@@Base+0x10f0>
   247c8:	mov	r0, r4
   247cc:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   247d0:	ldr	r1, [pc, #508]	; 249d4 <__flatcc_fb_gen_c_json_parser@@Base+0x1124>
   247d4:	mov	r0, r4
   247d8:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   247dc:	ldr	r2, [r4, #220]	; 0xdc
   247e0:	mov	r3, #0
   247e4:	str	r2, [r4, #228]	; 0xe4
   247e8:	str	r3, [r4, #220]	; 0xdc
   247ec:	ldr	r1, [pc, #352]	; 24954 <__flatcc_fb_gen_c_json_parser@@Base+0x10a4>
   247f0:	mov	r0, r4
   247f4:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   247f8:	ldr	r3, [r4, #228]	; 0xe4
   247fc:	ldr	r1, [pc, #340]	; 24958 <__flatcc_fb_gen_c_json_parser@@Base+0x10a8>
   24800:	str	r3, [r4, #220]	; 0xdc
   24804:	mov	r0, r4
   24808:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   2480c:	ldr	r3, [r4, #220]	; 0xdc
   24810:	cmp	r3, #0
   24814:	beq	24fa4 <__flatcc_fb_gen_c_json_parser@@Base+0x16f4>
   24818:	sub	r3, r3, #1
   2481c:	str	r3, [r4, #220]	; 0xdc
   24820:	ldr	r1, [pc, #484]	; 24a0c <__flatcc_fb_gen_c_json_parser@@Base+0x115c>
   24824:	mov	r0, r4
   24828:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   2482c:	mov	r1, sl
   24830:	mov	r0, r4
   24834:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   24838:	add	r2, sp, #52	; 0x34
   2483c:	ldr	r1, [pc, #300]	; 24970 <__flatcc_fb_gen_c_json_parser@@Base+0x10c0>
   24840:	mov	r0, r4
   24844:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   24848:	ldr	r1, [pc, #408]	; 249e8 <__flatcc_fb_gen_c_json_parser@@Base+0x1138>
   2484c:	mov	r0, r4
   24850:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   24854:	ldr	r3, [r4, #220]	; 0xdc
   24858:	add	r2, sp, #52	; 0x34
   2485c:	add	r3, r3, #1
   24860:	str	r3, [r4, #220]	; 0xdc
   24864:	ldr	r1, [pc, #312]	; 249a4 <__flatcc_fb_gen_c_json_parser@@Base+0x10f4>
   24868:	mov	r0, r4
   2486c:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   24870:	ldr	r3, [r4, #220]	; 0xdc
   24874:	cmp	r3, #0
   24878:	beq	25168 <__flatcc_fb_gen_c_json_parser@@Base+0x18b8>
   2487c:	sub	r3, r3, #1
   24880:	str	r3, [r4, #220]	; 0xdc
   24884:	ldr	r1, [pc, #384]	; 24a0c <__flatcc_fb_gen_c_json_parser@@Base+0x115c>
   24888:	mov	r0, r4
   2488c:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   24890:	mov	r0, r4
   24894:	mov	r1, sl
   24898:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   2489c:	ldr	r0, [sp, #24]
   248a0:	cmp	r0, #0
   248a4:	beq	23bdc <__flatcc_fb_gen_c_json_parser@@Base+0x32c>
   248a8:	bl	13fd4 <free@plt>
   248ac:	b	23bdc <__flatcc_fb_gen_c_json_parser@@Base+0x32c>
   248b0:	andeq	r8, r5, ip, lsl r1
   248b4:	andeq	r8, r5, r8, lsr r1
   248b8:	andeq	lr, r4, ip, asr #2
   248bc:	andeq	r8, r5, r4, asr r1
   248c0:	andeq	r8, r5, r4, lsr #3
   248c4:	andeq	r8, r5, ip, asr #3
   248c8:	andeq	r4, r4, ip, lsr #1
   248cc:	andeq	r5, r4, r8, ror #17
   248d0:	andeq	r8, r5, r8, asr r0
   248d4:	andeq	r6, r5, r4, asr #30
   248d8:	andeq	r8, r5, r8, lsr #11
   248dc:	andeq	r8, r5, r4, lsr #9
   248e0:	andeq	r8, r5, r4, lsr #10
   248e4:	andeq	r8, r5, r0, ror #7
   248e8:	andeq	r8, r5, r0, ror r4
   248ec:	andeq	r1, r2, r4, asr #14
   248f0:	andeq	r8, r5, ip, lsr #12
   248f4:	ldrdeq	r0, [r0], -r3
   248f8:	ldrdeq	r1, [r2], -r0
   248fc:	andeq	r1, r2, r0, lsr #28
   24900:	andeq	r1, r2, r8, lsl #28
   24904:	andeq	r2, r2, r0, asr #7
   24908:	andeq	r1, r2, r8, lsr lr
   2490c:	andeq	r2, r2, r4, lsr #10
   24910:	andeq	r0, r2, r8, asr #16
   24914:	andeq	r7, r5, r8, asr #7
   24918:	andeq	r8, r5, r0, asr #27
   2491c:	andeq	r7, r5, r0, lsr r4
   24920:	andeq	r8, r5, r4, ror #31
   24924:	andeq	r9, r5, r0
   24928:	andeq	r9, r5, ip, lsl r0
   2492c:	andeq	fp, r4, ip, asr #14
   24930:	andeq	r9, r5, r8, asr r0
   24934:	muleq	r5, r8, r6
   24938:	andeq	r8, r5, r8, lsl r7
   2493c:	andeq	r8, r5, r4, lsr #14
   24940:	andeq	r8, r5, r0, asr #14
   24944:	andeq	r8, r5, ip, asr #14
   24948:	muleq	r5, ip, r7
   2494c:	andeq	r8, r5, ip, lsl #15
   24950:	ldrdeq	r8, [r5], -r8	; <UNPREDICTABLE>
   24954:	andeq	r8, r5, r4, lsl r8
   24958:	andeq	r7, r5, ip, lsr #5
   2495c:	andeq	r8, r5, ip, lsl r8
   24960:	andeq	r7, r5, r8
   24964:	andeq	r8, r5, r0, lsr #17
   24968:	andeq	r7, r5, ip, asr fp
   2496c:	andeq	r8, r5, ip, ror #17
   24970:	andeq	r8, r5, r0, asr #18
   24974:	ldrdeq	r8, [r5], -r4
   24978:	andeq	r8, r5, r8, lsr sl
   2497c:			; <UNDEFINED> instruction: 0x00058abc
   24980:	strdeq	r8, [r5], -r4
   24984:	andeq	r8, r5, ip, lsr #23
   24988:	andeq	r8, r5, r8, ror #23
   2498c:	andeq	r8, r5, r8, lsl #24
   24990:	andeq	r8, r5, r4, asr #24
   24994:	andeq	r7, r5, r4, ror sl
   24998:	andeq	r8, r5, r0, lsl #25
   2499c:	muleq	r5, r4, lr
   249a0:	andeq	r8, r5, ip, lsl sp
   249a4:	andeq	r8, r5, r0, ror #26
   249a8:	andeq	r8, r5, r0, lsr #15
   249ac:	andeq	r8, r5, r0, ror #21
   249b0:	andeq	r0, r0, r7, lsl r5
   249b4:	ldrdeq	r8, [r5], -r8	; <UNPREDICTABLE>
   249b8:	andeq	r8, r5, r4, lsr fp
   249bc:	muleq	r5, r0, fp
   249c0:	andeq	r6, r5, ip, lsl ip
   249c4:	andeq	r7, r5, r0, asr r4
   249c8:	andeq	r7, r5, r0, ror r4
   249cc:	andeq	r7, r5, r4, lsl #9
   249d0:	andeq	r6, r5, r4, lsl lr
   249d4:	muleq	r5, r0, r2
   249d8:	andeq	r0, r0, r3, asr #9
   249dc:	andeq	r3, r2, r4, lsl #7
   249e0:	andeq	r0, r2, r4, asr r8
   249e4:	strdeq	r8, [r5], -ip
   249e8:	andeq	r9, r5, r0, lsr r9
   249ec:	andeq	r8, r5, r8, lsr #28
   249f0:	andeq	r8, r5, r8, asr #28
   249f4:	andeq	r8, r5, r4, ror #28
   249f8:	andeq	r8, r5, r0, lsl #29
   249fc:	strdeq	r8, [r5], -ip
   24a00:	andeq	r8, r5, r4, lsr pc
   24a04:	andeq	r8, r5, r8, ror #30
   24a08:	andeq	r8, r5, ip, ror pc
   24a0c:	andeq	r6, r5, r8, lsl sp
   24a10:	muleq	r5, r0, pc	; <UNPREDICTABLE>
   24a14:	andeq	r8, r5, r4, asr #31
   24a18:	ldrdeq	r8, [r5], -r8	; <UNPREDICTABLE>
   24a1c:	andeq	r0, r0, lr, asr r6
   24a20:	ldrdeq	r8, [r5], -ip
   24a24:	andeq	r8, r5, r0, ror #3
   24a28:	andeq	r8, r5, r8, lsr r2
   24a2c:	andeq	r8, r5, ip, lsr r2
   24a30:	andeq	r8, r5, r0, lsl #5
   24a34:			; <UNDEFINED> instruction: 0x000582b8
   24a38:	andeq	r8, r5, r0, ror #5
   24a3c:	andeq	r8, r5, r8, lsr #6
   24a40:	andeq	r6, r5, r4, ror ip
   24a44:	andeq	r8, r5, r8, ror #6
   24a48:			; <UNDEFINED> instruction: 0x000583b4
   24a4c:	andeq	lr, r4, ip, asr #2
   24a50:			; <UNDEFINED> instruction: 0x00058ebc
   24a54:	andeq	r0, r0, sl, lsr #9
   24a58:	andeq	r0, r0, r3, asr #13
   24a5c:	andeq	r0, r0, r1, asr #11
   24a60:			; <UNDEFINED> instruction: 0x000006b4
   24a64:	andeq	r7, r5, ip, lsl #7
   24a68:	andeq	pc, r6, r8, lsr #1
   24a6c:	ldrdeq	r4, [r4], -ip
   24a70:	andeq	sp, r4, r4, ror r2
   24a74:	andeq	r0, r0, sl, asr #12
   24a78:	andeq	r0, r0, sp, ror r6
   24a7c:	andeq	r0, r0, r1, lsl #13
   24a80:	muleq	r0, lr, r5
   24a84:	andeq	r0, r0, r5, lsl r5
   24a88:	ldrdeq	r0, [r0], -fp
   24a8c:	andeq	r0, r0, lr, ror #10
   24a90:	strheq	r5, [r4], -r4
   24a94:	andeq	r0, r0, sl, asr r5
   24a98:	andeq	r0, r0, r9, asr #10
   24a9c:	andeq	r4, r4, r8, lsr #16
   24aa0:	muleq	r5, r8, fp
   24aa4:	andeq	r0, r0, pc, lsr r5
   24aa8:	andeq	r6, r5, ip, ror fp
   24aac:	andeq	r0, r0, r6, lsr r5
   24ab0:			; <UNDEFINED> instruction: 0x000005b5
   24ab4:			; <UNDEFINED> instruction: 0x000004b5
   24ab8:	andeq	r6, r5, r0, asr #23
   24abc:			; <UNDEFINED> instruction: 0x000004ba
   24ac0:	andeq	r6, r5, r0, ror #22
   24ac4:	andeq	r0, r0, sp, ror #12
   24ac8:	strdeq	r6, [r5], -r0
   24acc:	andeq	r0, r0, sl, asr r6
   24ad0:			; <UNDEFINED> instruction: 0x000005b2
   24ad4:	andeq	r6, r5, ip, lsr #23
   24ad8:	andeq	r0, r0, r7, asr #11
   24adc:			; <UNDEFINED> instruction: 0x00056cb4
   24ae0:	andeq	r6, r5, ip, lsl #26
   24ae4:	ldrdeq	r6, [r5], -r8
   24ae8:	mov	r0, r4
   24aec:	ldr	r1, [pc, #-332]	; 249a8 <__flatcc_fb_gen_c_json_parser@@Base+0x10f8>
   24af0:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   24af4:	mov	r0, r4
   24af8:	ldr	r1, [pc, #-304]	; 249d0 <__flatcc_fb_gen_c_json_parser@@Base+0x1120>
   24afc:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   24b00:	ldr	r3, [sp, #20]
   24b04:	mov	r2, #0
   24b08:	sub	r3, r3, #1
   24b0c:	str	r2, [sp]
   24b10:	mov	r1, fp
   24b14:	mov	r0, r4
   24b18:	bl	20c80 <__flatcc_fb_gen_c_verifier@@Base+0x86c>
   24b1c:	b	24230 <__flatcc_fb_gen_c_json_parser@@Base+0x980>
   24b20:	ldr	r3, [sp, #20]
   24b24:	cmp	r3, #0
   24b28:	ble	24130 <__flatcc_fb_gen_c_json_parser@@Base+0x880>
   24b2c:	ldr	r1, [pc, #-204]	; 24a68 <__flatcc_fb_gen_c_json_parser@@Base+0x11b8>
   24b30:	ldr	r2, [pc, #-212]	; 24a64 <__flatcc_fb_gen_c_json_parser@@Base+0x11b4>
   24b34:	ldr	r3, [pc, #-396]	; 249b0 <__flatcc_fb_gen_c_json_parser@@Base+0x1100>
   24b38:	ldr	r0, [r1]
   24b3c:	str	r2, [sp]
   24b40:	ldr	r1, [pc, #-220]	; 24a6c <__flatcc_fb_gen_c_json_parser@@Base+0x11bc>
   24b44:	ldr	r2, [pc, #-112]	; 24adc <__flatcc_fb_gen_c_json_parser@@Base+0x122c>
   24b48:	bl	14094 <fprintf@plt>
   24b4c:	ldr	r3, [pc, #-172]	; 24aa8 <__flatcc_fb_gen_c_json_parser@@Base+0x11f8>
   24b50:	ldr	r2, [pc, #-424]	; 249b0 <__flatcc_fb_gen_c_json_parser@@Base+0x1100>
   24b54:	ldr	r1, [pc, #-128]	; 24adc <__flatcc_fb_gen_c_json_parser@@Base+0x122c>
   24b58:	ldr	r0, [pc, #-240]	; 24a70 <__flatcc_fb_gen_c_json_parser@@Base+0x11c0>
   24b5c:	bl	14148 <__assert_fail@plt>
   24b60:	ldr	r1, [pc, #-444]	; 249ac <__flatcc_fb_gen_c_json_parser@@Base+0x10fc>
   24b64:	mov	r0, r4
   24b68:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   24b6c:	b	24598 <__flatcc_fb_gen_c_json_parser@@Base+0xce8>
   24b70:	ldr	r1, [pc, #-452]	; 249b4 <__flatcc_fb_gen_c_json_parser@@Base+0x1104>
   24b74:	mov	r0, r4
   24b78:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   24b7c:	b	247c4 <__flatcc_fb_gen_c_json_parser@@Base+0xf14>
   24b80:	asr	r3, r2, #31
   24b84:	ldr	r1, [pc, #-468]	; 249b8 <__flatcc_fb_gen_c_json_parser@@Base+0x1108>
   24b88:	mov	r0, r4
   24b8c:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   24b90:	b	245cc <__flatcc_fb_gen_c_json_parser@@Base+0xd1c>
   24b94:	mov	r0, r4
   24b98:	ldr	r1, [pc, #-484]	; 249bc <__flatcc_fb_gen_c_json_parser@@Base+0x110c>
   24b9c:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   24ba0:	ldr	r1, [pc, #-488]	; 249c0 <__flatcc_fb_gen_c_json_parser@@Base+0x1110>
   24ba4:	mov	r0, r4
   24ba8:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   24bac:	b	24630 <__flatcc_fb_gen_c_json_parser@@Base+0xd80>
   24bb0:	ldr	r1, [pc, #-500]	; 249c4 <__flatcc_fb_gen_c_json_parser@@Base+0x1114>
   24bb4:	mov	r0, r4
   24bb8:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   24bbc:	ldr	r1, [pc, #-508]	; 249c8 <__flatcc_fb_gen_c_json_parser@@Base+0x1118>
   24bc0:	mov	r0, r4
   24bc4:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   24bc8:	ldr	r1, [pc, #-516]	; 249cc <__flatcc_fb_gen_c_json_parser@@Base+0x111c>
   24bcc:	mov	r0, r4
   24bd0:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   24bd4:	ldr	r1, [pc, #-400]	; 24a4c <__flatcc_fb_gen_c_json_parser@@Base+0x119c>
   24bd8:	mov	r0, r4
   24bdc:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   24be0:	ldr	r1, [pc, #-536]	; 249d0 <__flatcc_fb_gen_c_json_parser@@Base+0x1120>
   24be4:	mov	r0, r4
   24be8:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   24bec:	sub	r3, r9, #1
   24bf0:	mov	r2, r5
   24bf4:	mov	r1, fp
   24bf8:	mov	r0, r4
   24bfc:	str	r5, [sp]
   24c00:	bl	20c80 <__flatcc_fb_gen_c_verifier@@Base+0x86c>
   24c04:	ldr	r1, [pc, #-568]	; 249d4 <__flatcc_fb_gen_c_json_parser@@Base+0x1124>
   24c08:	mov	r0, r4
   24c0c:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   24c10:	ldr	r3, [r4, #220]	; 0xdc
   24c14:	cmp	r3, #0
   24c18:	bne	23ea0 <__flatcc_fb_gen_c_json_parser@@Base+0x5f0>
   24c1c:	ldr	r3, [pc, #-364]	; 24ab8 <__flatcc_fb_gen_c_json_parser@@Base+0x1208>
   24c20:	ldr	r2, [pc, #-592]	; 249d8 <__flatcc_fb_gen_c_json_parser@@Base+0x1128>
   24c24:	ldr	r1, [pc, #-336]	; 24adc <__flatcc_fb_gen_c_json_parser@@Base+0x122c>
   24c28:	ldr	r0, [pc, #-336]	; 24ae0 <__flatcc_fb_gen_c_json_parser@@Base+0x1230>
   24c2c:	bl	14148 <__assert_fail@plt>
   24c30:	ldr	r3, [sp, #20]
   24c34:	cmp	r3, #0
   24c38:	bgt	24fcc <__flatcc_fb_gen_c_json_parser@@Base+0x171c>
   24c3c:	ldr	r2, [pc, #-616]	; 249dc <__flatcc_fb_gen_c_json_parser@@Base+0x112c>
   24c40:	ldr	r3, [pc, #-616]	; 249e0 <__flatcc_fb_gen_c_json_parser@@Base+0x1130>
   24c44:	str	r9, [sp, #36]	; 0x24
   24c48:	str	r0, [sp, #40]	; 0x28
   24c4c:	str	r0, [sp, #44]	; 0x2c
   24c50:	str	r2, [sp, #28]
   24c54:	str	r3, [sp, #32]
   24c58:	b	244fc <__flatcc_fb_gen_c_json_parser@@Base+0xc4c>
   24c5c:	mov	r2, #220	; 0xdc
   24c60:	mov	r1, r6
   24c64:	add	r0, sp, #52	; 0x34
   24c68:	bl	140ac <memset@plt>
   24c6c:	add	r2, sp, #52	; 0x34
   24c70:	mov	r1, r5
   24c74:	ldr	r0, [r5, #12]
   24c78:	bl	170c4 <__flatcc_fb_scoped_symbol_name@@Base>
   24c7c:	ldr	r3, [r4, #208]	; 0xd0
   24c80:	ldr	r1, [pc, #-580]	; 24a44 <__flatcc_fb_gen_c_json_parser@@Base+0x1194>
   24c84:	mov	r0, r4
   24c88:	ldr	r2, [r3, #160]	; 0xa0
   24c8c:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   24c90:	ldr	r3, [r4, #220]	; 0xdc
   24c94:	ldr	r1, [pc, #-696]	; 249e4 <__flatcc_fb_gen_c_json_parser@@Base+0x1134>
   24c98:	add	r3, r3, #2
   24c9c:	str	r3, [r4, #220]	; 0xdc
   24ca0:	mov	r0, r4
   24ca4:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   24ca8:	ldr	r3, [r4, #220]	; 0xdc
   24cac:	cmp	r3, #0
   24cb0:	beq	25000 <__flatcc_fb_gen_c_json_parser@@Base+0x1750>
   24cb4:	cmp	r3, #1
   24cb8:	streq	r6, [r4, #220]	; 0xdc
   24cbc:	beq	25000 <__flatcc_fb_gen_c_json_parser@@Base+0x1750>
   24cc0:	sub	r3, r3, #2
   24cc4:	str	r3, [r4, #220]	; 0xdc
   24cc8:	ldr	r1, [pc, #-744]	; 249e8 <__flatcc_fb_gen_c_json_parser@@Base+0x1138>
   24ccc:	mov	r0, r4
   24cd0:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   24cd4:	ldr	r3, [r4, #220]	; 0xdc
   24cd8:	ldr	r1, [pc, #-756]	; 249ec <__flatcc_fb_gen_c_json_parser@@Base+0x113c>
   24cdc:	add	r3, r3, #1
   24ce0:	str	r3, [r4, #220]	; 0xdc
   24ce4:	mov	r0, r4
   24ce8:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   24cec:	ldr	r1, [pc, #-772]	; 249f0 <__flatcc_fb_gen_c_json_parser@@Base+0x1140>
   24cf0:	mov	r0, r4
   24cf4:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   24cf8:	ldr	r1, [pc, #-692]	; 24a4c <__flatcc_fb_gen_c_json_parser@@Base+0x119c>
   24cfc:	mov	r0, r4
   24d00:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   24d04:	ldr	r1, [pc, #-792]	; 249f4 <__flatcc_fb_gen_c_json_parser@@Base+0x1144>
   24d08:	mov	r0, r4
   24d0c:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   24d10:	ldr	r1, [pc, #-800]	; 249f8 <__flatcc_fb_gen_c_json_parser@@Base+0x1148>
   24d14:	mov	r0, r4
   24d18:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   24d1c:	ldr	r2, [r4, #208]	; 0xd0
   24d20:	ldrh	r3, [r2, #16]
   24d24:	cmp	r3, #2
   24d28:	beq	24ea8 <__flatcc_fb_gen_c_json_parser@@Base+0x15f8>
   24d2c:	ldr	r1, [pc, #-824]	; 249fc <__flatcc_fb_gen_c_json_parser@@Base+0x114c>
   24d30:	mov	r0, r4
   24d34:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   24d38:	add	r2, sp, #52	; 0x34
   24d3c:	ldr	r1, [pc, #-836]	; 24a00 <__flatcc_fb_gen_c_json_parser@@Base+0x1150>
   24d40:	mov	r0, r4
   24d44:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   24d48:	ldr	r1, [pc, #-844]	; 24a04 <__flatcc_fb_gen_c_json_parser@@Base+0x1154>
   24d4c:	mov	r0, r4
   24d50:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   24d54:	ldr	r3, [r4, #220]	; 0xdc
   24d58:	ldr	r1, [pc, #-856]	; 24a08 <__flatcc_fb_gen_c_json_parser@@Base+0x1158>
   24d5c:	add	r3, r3, #1
   24d60:	str	r3, [r4, #220]	; 0xdc
   24d64:	mov	r0, r4
   24d68:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   24d6c:	ldr	r3, [r4, #220]	; 0xdc
   24d70:	cmp	r3, #0
   24d74:	beq	25140 <__flatcc_fb_gen_c_json_parser@@Base+0x1890>
   24d78:	sub	r3, r3, #1
   24d7c:	str	r3, [r4, #220]	; 0xdc
   24d80:	ldr	r1, [pc, #-892]	; 24a0c <__flatcc_fb_gen_c_json_parser@@Base+0x115c>
   24d84:	mov	r0, r4
   24d88:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   24d8c:	ldr	r1, [pc, #-900]	; 24a10 <__flatcc_fb_gen_c_json_parser@@Base+0x1160>
   24d90:	mov	r0, r4
   24d94:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   24d98:	ldr	r1, [pc, #-908]	; 24a14 <__flatcc_fb_gen_c_json_parser@@Base+0x1164>
   24d9c:	mov	r0, r4
   24da0:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   24da4:	ldr	r1, [pc, #-916]	; 24a18 <__flatcc_fb_gen_c_json_parser@@Base+0x1168>
   24da8:	mov	r0, r4
   24dac:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   24db0:	ldr	r3, [r4, #220]	; 0xdc
   24db4:	cmp	r3, #0
   24db8:	bne	24088 <__flatcc_fb_gen_c_json_parser@@Base+0x7d8>
   24dbc:	ldr	r3, [pc, #-736]	; 24ae4 <__flatcc_fb_gen_c_json_parser@@Base+0x1234>
   24dc0:	ldr	r2, [pc, #-940]	; 24a1c <__flatcc_fb_gen_c_json_parser@@Base+0x116c>
   24dc4:	ldr	r1, [pc, #-752]	; 24adc <__flatcc_fb_gen_c_json_parser@@Base+0x122c>
   24dc8:	ldr	r0, [pc, #-752]	; 24ae0 <__flatcc_fb_gen_c_json_parser@@Base+0x1230>
   24dcc:	bl	14148 <__assert_fail@plt>
   24dd0:	ldr	r1, [pc, #-952]	; 24a20 <__flatcc_fb_gen_c_json_parser@@Base+0x1170>
   24dd4:	mov	r0, r4
   24dd8:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   24ddc:	ldr	r1, [pc, #-960]	; 24a24 <__flatcc_fb_gen_c_json_parser@@Base+0x1174>
   24de0:	mov	r0, r4
   24de4:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   24de8:	ldr	r1, [pc, #-968]	; 24a28 <__flatcc_fb_gen_c_json_parser@@Base+0x1178>
   24dec:	mov	r0, r4
   24df0:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   24df4:	ldr	r1, [pc, #-976]	; 24a2c <__flatcc_fb_gen_c_json_parser@@Base+0x117c>
   24df8:	mov	r0, r4
   24dfc:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   24e00:	ldr	r1, [pc, #-984]	; 24a30 <__flatcc_fb_gen_c_json_parser@@Base+0x1180>
   24e04:	mov	r0, r4
   24e08:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   24e0c:	ldr	r1, [pc, #-992]	; 24a34 <__flatcc_fb_gen_c_json_parser@@Base+0x1184>
   24e10:	mov	r0, r4
   24e14:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   24e18:	ldr	r1, [pc, #-1000]	; 24a38 <__flatcc_fb_gen_c_json_parser@@Base+0x1188>
   24e1c:	mov	r0, r4
   24e20:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   24e24:	ldr	r1, [pc, #-1008]	; 24a3c <__flatcc_fb_gen_c_json_parser@@Base+0x118c>
   24e28:	mov	r0, r4
   24e2c:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   24e30:	ldr	r1, [pc, #-1016]	; 24a40 <__flatcc_fb_gen_c_json_parser@@Base+0x1190>
   24e34:	mov	r0, r4
   24e38:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   24e3c:	ldr	r3, [r4, #208]	; 0xd0
   24e40:	ldr	r1, [pc, #-1028]	; 24a44 <__flatcc_fb_gen_c_json_parser@@Base+0x1194>
   24e44:	mov	r0, r4
   24e48:	ldr	r2, [r3, #160]	; 0xa0
   24e4c:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   24e50:	ldr	r3, [r4, #220]	; 0xdc
   24e54:	ldr	r1, [pc, #-1044]	; 24a48 <__flatcc_fb_gen_c_json_parser@@Base+0x1198>
   24e58:	add	r3, r3, #2
   24e5c:	str	r3, [r4, #220]	; 0xdc
   24e60:	mov	r0, r4
   24e64:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   24e68:	ldr	r3, [r4, #220]	; 0xdc
   24e6c:	cmp	r3, #0
   24e70:	beq	24fb8 <__flatcc_fb_gen_c_json_parser@@Base+0x1708>
   24e74:	cmp	r3, #1
   24e78:	moveq	r3, #0
   24e7c:	streq	r3, [r4, #220]	; 0xdc
   24e80:	beq	24fb8 <__flatcc_fb_gen_c_json_parser@@Base+0x1708>
   24e84:	sub	r3, r3, #2
   24e88:	str	r3, [r4, #220]	; 0xdc
   24e8c:	ldr	r1, [pc, #-1096]	; 24a4c <__flatcc_fb_gen_c_json_parser@@Base+0x119c>
   24e90:	mov	r0, r4
   24e94:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   24e98:	ldr	r6, [r4, #208]	; 0xd0
   24e9c:	b	2397c <__flatcc_fb_gen_c_json_parser@@Base+0xcc>
   24ea0:	str	r9, [sp, #24]
   24ea4:	b	23df0 <__flatcc_fb_gen_c_json_parser@@Base+0x540>
   24ea8:	ldr	r3, [r2, #8]
   24eac:	ldr	r1, [pc, #-1124]	; 24a50 <__flatcc_fb_gen_c_json_parser@@Base+0x11a0>
   24eb0:	ldr	r2, [r2, #12]
   24eb4:	mov	r0, r4
   24eb8:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   24ebc:	b	24d38 <__flatcc_fb_gen_c_json_parser@@Base+0x1488>
   24ec0:	ldr	r3, [r2, #8]
   24ec4:	ldr	r1, [pc, #-1148]	; 24a50 <__flatcc_fb_gen_c_json_parser@@Base+0x11a0>
   24ec8:	ldr	r2, [r2, #12]
   24ecc:	mov	r0, r4
   24ed0:	bl	2075c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   24ed4:	b	24004 <__flatcc_fb_gen_c_json_parser@@Base+0x754>
   24ed8:	cmp	r9, #0
   24edc:	str	sl, [sp, #24]
   24ee0:	ble	23df0 <__flatcc_fb_gen_c_json_parser@@Base+0x540>
   24ee4:	ldr	r0, [sp, #68]	; 0x44
   24ee8:	cmp	r0, #0
   24eec:	beq	24ef4 <__flatcc_fb_gen_c_json_parser@@Base+0x1644>
   24ef0:	bl	13fd4 <free@plt>
   24ef4:	ldr	r0, [sp, #72]	; 0x48
   24ef8:	cmp	r0, #0
   24efc:	beq	24f04 <__flatcc_fb_gen_c_json_parser@@Base+0x1654>
   24f00:	bl	13fd4 <free@plt>
   24f04:	ldr	r0, [sp, #76]	; 0x4c
   24f08:	cmp	r0, #0
   24f0c:	beq	24f14 <__flatcc_fb_gen_c_json_parser@@Base+0x1664>
   24f10:	bl	13fd4 <free@plt>
   24f14:	mov	r2, #44	; 0x2c
   24f18:	mov	r1, #0
   24f1c:	add	r0, sp, #52	; 0x34
   24f20:	bl	140ac <memset@plt>
   24f24:	ldr	r1, [pc, #-1220]	; 24a68 <__flatcc_fb_gen_c_json_parser@@Base+0x11b8>
   24f28:	ldr	r2, [pc, #-1228]	; 24a64 <__flatcc_fb_gen_c_json_parser@@Base+0x11b4>
   24f2c:	ldr	r3, [pc, #-1248]	; 24a54 <__flatcc_fb_gen_c_json_parser@@Base+0x11a4>
   24f30:	ldr	r0, [r1]
   24f34:	str	r2, [sp]
   24f38:	ldr	r1, [pc, #-1236]	; 24a6c <__flatcc_fb_gen_c_json_parser@@Base+0x11bc>
   24f3c:	ldr	r2, [pc, #-1128]	; 24adc <__flatcc_fb_gen_c_json_parser@@Base+0x122c>
   24f40:	bl	14094 <fprintf@plt>
   24f44:	ldr	r3, [pc, #-1172]	; 24ab8 <__flatcc_fb_gen_c_json_parser@@Base+0x1208>
   24f48:	ldr	r2, [pc, #-1276]	; 24a54 <__flatcc_fb_gen_c_json_parser@@Base+0x11a4>
   24f4c:	ldr	r1, [pc, #-1144]	; 24adc <__flatcc_fb_gen_c_json_parser@@Base+0x122c>
   24f50:	ldr	r0, [pc, #-1256]	; 24a70 <__flatcc_fb_gen_c_json_parser@@Base+0x11c0>
   24f54:	bl	14148 <__assert_fail@plt>
   24f58:	cmp	r6, #0
   24f5c:	beq	24f68 <__flatcc_fb_gen_c_json_parser@@Base+0x16b8>
   24f60:	mov	r0, r6
   24f64:	bl	13fd4 <free@plt>
   24f68:	cmp	r9, #0
   24f6c:	beq	24f78 <__flatcc_fb_gen_c_json_parser@@Base+0x16c8>
   24f70:	mov	r0, r9
   24f74:	bl	13fd4 <free@plt>
   24f78:	cmp	r8, #0
   24f7c:	beq	23f00 <__flatcc_fb_gen_c_json_parser@@Base+0x650>
   24f80:	mov	r0, r8
   24f84:	b	23efc <__flatcc_fb_gen_c_json_parser@@Base+0x64c>
   24f88:	mov	r3, #0
   24f8c:	str	r3, [r4, #220]	; 0xdc
   24f90:	ldr	r3, [pc, #-1240]	; 24ac0 <__flatcc_fb_gen_c_json_parser@@Base+0x1210>
   24f94:	ldr	r2, [pc, #-1348]	; 24a58 <__flatcc_fb_gen_c_json_parser@@Base+0x11a8>
   24f98:	ldr	r1, [pc, #-1220]	; 24adc <__flatcc_fb_gen_c_json_parser@@Base+0x122c>
   24f9c:	ldr	r0, [pc, #-1220]	; 24ae0 <__flatcc_fb_gen_c_json_parser@@Base+0x1230>
   24fa0:	bl	14148 <__assert_fail@plt>
   24fa4:	ldr	r3, [pc, #-1240]	; 24ad4 <__flatcc_fb_gen_c_json_parser@@Base+0x1224>
   24fa8:	ldr	r2, [pc, #-1364]	; 24a5c <__flatcc_fb_gen_c_json_parser@@Base+0x11ac>
   24fac:	ldr	r1, [pc, #-1240]	; 24adc <__flatcc_fb_gen_c_json_parser@@Base+0x122c>
   24fb0:	ldr	r0, [pc, #-1240]	; 24ae0 <__flatcc_fb_gen_c_json_parser@@Base+0x1230>
   24fb4:	bl	14148 <__assert_fail@plt>
   24fb8:	ldr	r3, [pc, #-1280]	; 24ac0 <__flatcc_fb_gen_c_json_parser@@Base+0x1210>
   24fbc:	ldr	r2, [pc, #-1380]	; 24a60 <__flatcc_fb_gen_c_json_parser@@Base+0x11b0>
   24fc0:	ldr	r1, [pc, #-1260]	; 24adc <__flatcc_fb_gen_c_json_parser@@Base+0x122c>
   24fc4:	ldr	r0, [pc, #-1260]	; 24ae0 <__flatcc_fb_gen_c_json_parser@@Base+0x1230>
   24fc8:	bl	14148 <__assert_fail@plt>
   24fcc:	ldr	r1, [pc, #-1388]	; 24a68 <__flatcc_fb_gen_c_json_parser@@Base+0x11b8>
   24fd0:	ldr	r2, [pc, #-1396]	; 24a64 <__flatcc_fb_gen_c_json_parser@@Base+0x11b4>
   24fd4:	mov	r3, #1392	; 0x570
   24fd8:	ldr	r0, [r1]
   24fdc:	str	r2, [sp]
   24fe0:	ldr	r1, [pc, #-1404]	; 24a6c <__flatcc_fb_gen_c_json_parser@@Base+0x11bc>
   24fe4:	ldr	r2, [pc, #-1296]	; 24adc <__flatcc_fb_gen_c_json_parser@@Base+0x122c>
   24fe8:	bl	14094 <fprintf@plt>
   24fec:	ldr	r3, [pc, #-1312]	; 24ad4 <__flatcc_fb_gen_c_json_parser@@Base+0x1224>
   24ff0:	mov	r2, #1392	; 0x570
   24ff4:	ldr	r1, [pc, #-1312]	; 24adc <__flatcc_fb_gen_c_json_parser@@Base+0x122c>
   24ff8:	ldr	r0, [pc, #-1424]	; 24a70 <__flatcc_fb_gen_c_json_parser@@Base+0x11c0>
   24ffc:	bl	14148 <__assert_fail@plt>
   25000:	ldr	r3, [pc, #-1316]	; 24ae4 <__flatcc_fb_gen_c_json_parser@@Base+0x1234>
   25004:	ldr	r2, [pc, #-1432]	; 24a74 <__flatcc_fb_gen_c_json_parser@@Base+0x11c4>
   25008:	ldr	r1, [pc, #-1332]	; 24adc <__flatcc_fb_gen_c_json_parser@@Base+0x122c>
   2500c:	ldr	r0, [pc, #-1332]	; 24ae0 <__flatcc_fb_gen_c_json_parser@@Base+0x1230>
   25010:	bl	14148 <__assert_fail@plt>
   25014:	ldr	r3, [pc, #-1364]	; 24ac8 <__flatcc_fb_gen_c_json_parser@@Base+0x1218>
   25018:	ldr	r2, [pc, #-1448]	; 24a78 <__flatcc_fb_gen_c_json_parser@@Base+0x11c8>
   2501c:	ldr	r1, [pc, #-1352]	; 24adc <__flatcc_fb_gen_c_json_parser@@Base+0x122c>
   25020:	ldr	r0, [pc, #-1352]	; 24ae0 <__flatcc_fb_gen_c_json_parser@@Base+0x1230>
   25024:	bl	14148 <__assert_fail@plt>
   25028:	ldr	r3, [pc, #-1384]	; 24ac8 <__flatcc_fb_gen_c_json_parser@@Base+0x1218>
   2502c:	ldr	r2, [pc, #-1464]	; 24a7c <__flatcc_fb_gen_c_json_parser@@Base+0x11cc>
   25030:	ldr	r1, [pc, #-1372]	; 24adc <__flatcc_fb_gen_c_json_parser@@Base+0x122c>
   25034:	ldr	r0, [pc, #-1372]	; 24ae0 <__flatcc_fb_gen_c_json_parser@@Base+0x1230>
   25038:	bl	14148 <__assert_fail@plt>
   2503c:	ldr	r3, [pc, #-1392]	; 24ad4 <__flatcc_fb_gen_c_json_parser@@Base+0x1224>
   25040:	ldr	r2, [pc, #-1480]	; 24a80 <__flatcc_fb_gen_c_json_parser@@Base+0x11d0>
   25044:	ldr	r1, [pc, #-1392]	; 24adc <__flatcc_fb_gen_c_json_parser@@Base+0x122c>
   25048:	ldr	r0, [pc, #-1392]	; 24ae0 <__flatcc_fb_gen_c_json_parser@@Base+0x1230>
   2504c:	bl	14148 <__assert_fail@plt>
   25050:	ldr	r3, [pc, #-1456]	; 24aa8 <__flatcc_fb_gen_c_json_parser@@Base+0x11f8>
   25054:	ldr	r2, [pc, #-1496]	; 24a84 <__flatcc_fb_gen_c_json_parser@@Base+0x11d4>
   25058:	ldr	r1, [pc, #-1412]	; 24adc <__flatcc_fb_gen_c_json_parser@@Base+0x122c>
   2505c:	ldr	r0, [pc, #-1480]	; 24a9c <__flatcc_fb_gen_c_json_parser@@Base+0x11ec>
   25060:	bl	14148 <__assert_fail@plt>
   25064:	ldr	r3, [pc, #-1452]	; 24ac0 <__flatcc_fb_gen_c_json_parser@@Base+0x1210>
   25068:	ldr	r2, [pc, #-1512]	; 24a88 <__flatcc_fb_gen_c_json_parser@@Base+0x11d8>
   2506c:	ldr	r1, [pc, #-1432]	; 24adc <__flatcc_fb_gen_c_json_parser@@Base+0x122c>
   25070:	ldr	r0, [pc, #-1432]	; 24ae0 <__flatcc_fb_gen_c_json_parser@@Base+0x1230>
   25074:	bl	14148 <__assert_fail@plt>
   25078:	ldr	r3, [pc, #-1452]	; 24ad4 <__flatcc_fb_gen_c_json_parser@@Base+0x1224>
   2507c:	ldr	r2, [pc, #-1528]	; 24a8c <__flatcc_fb_gen_c_json_parser@@Base+0x11dc>
   25080:	ldr	r1, [pc, #-1452]	; 24adc <__flatcc_fb_gen_c_json_parser@@Base+0x122c>
   25084:	ldr	r0, [pc, #-1532]	; 24a90 <__flatcc_fb_gen_c_json_parser@@Base+0x11e0>
   25088:	bl	14148 <__assert_fail@plt>
   2508c:	ldr	r3, [pc, #-1524]	; 24aa0 <__flatcc_fb_gen_c_json_parser@@Base+0x11f0>
   25090:	mov	r2, #1376	; 0x560
   25094:	ldr	r1, [pc, #-1472]	; 24adc <__flatcc_fb_gen_c_json_parser@@Base+0x122c>
   25098:	ldr	r0, [pc, #-1472]	; 24ae0 <__flatcc_fb_gen_c_json_parser@@Base+0x1230>
   2509c:	bl	14148 <__assert_fail@plt>
   250a0:	ldr	r3, [pc, #-1544]	; 24aa0 <__flatcc_fb_gen_c_json_parser@@Base+0x11f0>
   250a4:	ldr	r2, [pc, #-1560]	; 24a94 <__flatcc_fb_gen_c_json_parser@@Base+0x11e4>
   250a8:	ldr	r1, [pc, #-1492]	; 24adc <__flatcc_fb_gen_c_json_parser@@Base+0x122c>
   250ac:	ldr	r0, [pc, #-1492]	; 24ae0 <__flatcc_fb_gen_c_json_parser@@Base+0x1230>
   250b0:	bl	14148 <__assert_fail@plt>
   250b4:	ldr	r3, [pc, #-1564]	; 24aa0 <__flatcc_fb_gen_c_json_parser@@Base+0x11f0>
   250b8:	ldr	r2, [pc, #-1576]	; 24a98 <__flatcc_fb_gen_c_json_parser@@Base+0x11e8>
   250bc:	ldr	r1, [pc, #-1512]	; 24adc <__flatcc_fb_gen_c_json_parser@@Base+0x122c>
   250c0:	ldr	r0, [pc, #-1580]	; 24a9c <__flatcc_fb_gen_c_json_parser@@Base+0x11ec>
   250c4:	bl	14148 <__assert_fail@plt>
   250c8:	ldr	r3, [pc, #-1576]	; 24aa8 <__flatcc_fb_gen_c_json_parser@@Base+0x11f8>
   250cc:	ldr	r2, [pc, #-1584]	; 24aa4 <__flatcc_fb_gen_c_json_parser@@Base+0x11f4>
   250d0:	ldr	r1, [pc, #-1532]	; 24adc <__flatcc_fb_gen_c_json_parser@@Base+0x122c>
   250d4:	ldr	r0, [pc, #-1532]	; 24ae0 <__flatcc_fb_gen_c_json_parser@@Base+0x1230>
   250d8:	bl	14148 <__assert_fail@plt>
   250dc:	ldr	r3, [pc, #-1596]	; 24aa8 <__flatcc_fb_gen_c_json_parser@@Base+0x11f8>
   250e0:	ldr	r2, [pc, #-1596]	; 24aac <__flatcc_fb_gen_c_json_parser@@Base+0x11fc>
   250e4:	ldr	r1, [pc, #-1552]	; 24adc <__flatcc_fb_gen_c_json_parser@@Base+0x122c>
   250e8:	ldr	r0, [pc, #-1552]	; 24ae0 <__flatcc_fb_gen_c_json_parser@@Base+0x1230>
   250ec:	bl	14148 <__assert_fail@plt>
   250f0:	ldr	r3, [pc, #-1572]	; 24ad4 <__flatcc_fb_gen_c_json_parser@@Base+0x1224>
   250f4:	ldr	r2, [pc, #-1612]	; 24ab0 <__flatcc_fb_gen_c_json_parser@@Base+0x1200>
   250f8:	ldr	r1, [pc, #-1572]	; 24adc <__flatcc_fb_gen_c_json_parser@@Base+0x122c>
   250fc:	ldr	r0, [pc, #-1572]	; 24ae0 <__flatcc_fb_gen_c_json_parser@@Base+0x1230>
   25100:	bl	14148 <__assert_fail@plt>
   25104:	ldr	r3, [pc, #-1620]	; 24ab8 <__flatcc_fb_gen_c_json_parser@@Base+0x1208>
   25108:	ldr	r2, [pc, #-1628]	; 24ab4 <__flatcc_fb_gen_c_json_parser@@Base+0x1204>
   2510c:	ldr	r1, [pc, #-1592]	; 24adc <__flatcc_fb_gen_c_json_parser@@Base+0x122c>
   25110:	ldr	r0, [pc, #-1592]	; 24ae0 <__flatcc_fb_gen_c_json_parser@@Base+0x1230>
   25114:	bl	14148 <__assert_fail@plt>
   25118:	ldr	r3, [pc, #-1640]	; 24ab8 <__flatcc_fb_gen_c_json_parser@@Base+0x1208>
   2511c:	ldr	r2, [pc, #-1640]	; 24abc <__flatcc_fb_gen_c_json_parser@@Base+0x120c>
   25120:	ldr	r1, [pc, #-1612]	; 24adc <__flatcc_fb_gen_c_json_parser@@Base+0x122c>
   25124:	ldr	r0, [pc, #-1612]	; 24ae0 <__flatcc_fb_gen_c_json_parser@@Base+0x1230>
   25128:	bl	14148 <__assert_fail@plt>
   2512c:	ldr	r3, [pc, #-1644]	; 24ac8 <__flatcc_fb_gen_c_json_parser@@Base+0x1218>
   25130:	ldr	r2, [pc, #-1652]	; 24ac4 <__flatcc_fb_gen_c_json_parser@@Base+0x1214>
   25134:	ldr	r1, [pc, #-1632]	; 24adc <__flatcc_fb_gen_c_json_parser@@Base+0x122c>
   25138:	ldr	r0, [pc, #-1632]	; 24ae0 <__flatcc_fb_gen_c_json_parser@@Base+0x1230>
   2513c:	bl	14148 <__assert_fail@plt>
   25140:	ldr	r3, [pc, #-1636]	; 24ae4 <__flatcc_fb_gen_c_json_parser@@Base+0x1234>
   25144:	ldr	r2, [pc, #-1664]	; 24acc <__flatcc_fb_gen_c_json_parser@@Base+0x121c>
   25148:	ldr	r1, [pc, #-1652]	; 24adc <__flatcc_fb_gen_c_json_parser@@Base+0x122c>
   2514c:	ldr	r0, [pc, #-1652]	; 24ae0 <__flatcc_fb_gen_c_json_parser@@Base+0x1230>
   25150:	bl	14148 <__assert_fail@plt>
   25154:	ldr	r3, [pc, #-1672]	; 24ad4 <__flatcc_fb_gen_c_json_parser@@Base+0x1224>
   25158:	ldr	r2, [pc, #-1680]	; 24ad0 <__flatcc_fb_gen_c_json_parser@@Base+0x1220>
   2515c:	ldr	r1, [pc, #-1672]	; 24adc <__flatcc_fb_gen_c_json_parser@@Base+0x122c>
   25160:	ldr	r0, [pc, #-1672]	; 24ae0 <__flatcc_fb_gen_c_json_parser@@Base+0x1230>
   25164:	bl	14148 <__assert_fail@plt>
   25168:	ldr	r3, [pc, #-1692]	; 24ad4 <__flatcc_fb_gen_c_json_parser@@Base+0x1224>
   2516c:	ldr	r2, [pc, #-1692]	; 24ad8 <__flatcc_fb_gen_c_json_parser@@Base+0x1228>
   25170:	ldr	r1, [pc, #-1692]	; 24adc <__flatcc_fb_gen_c_json_parser@@Base+0x122c>
   25174:	ldr	r0, [pc, #-1692]	; 24ae0 <__flatcc_fb_gen_c_json_parser@@Base+0x1230>
   25178:	bl	14148 <__assert_fail@plt>
   2517c:	push	{r4, r5, r6, r7, r8, lr}
   25180:	sub	sp, sp, #448	; 0x1c0
   25184:	mov	r4, r1
   25188:	mov	r5, r0
   2518c:	mov	r2, #220	; 0xdc
   25190:	mov	r1, #0
   25194:	add	r0, sp, #8
   25198:	bl	140ac <memset@plt>
   2519c:	mov	r2, #220	; 0xdc
   251a0:	mov	r1, #0
   251a4:	add	r0, sp, #228	; 0xe4
   251a8:	bl	140ac <memset@plt>
   251ac:	mov	r1, r4
   251b0:	ldr	r0, [r4, #12]
   251b4:	add	r2, sp, #8
   251b8:	bl	170c4 <__flatcc_fb_scoped_symbol_name@@Base>
   251bc:	add	r2, sp, #8
   251c0:	ldr	r0, [r5]
   251c4:	ldr	r1, [pc, #348]	; 25328 <__flatcc_fb_gen_c_json_parser@@Base+0x1a78>
   251c8:	bl	14094 <fprintf@plt>
   251cc:	ldr	r4, [r4, #20]
   251d0:	cmp	r4, #0
   251d4:	beq	2527c <__flatcc_fb_gen_c_json_parser@@Base+0x19cc>
   251d8:	ldr	r6, [pc, #332]	; 2532c <__flatcc_fb_gen_c_json_parser@@Base+0x1a7c>
   251dc:	ldr	r8, [pc, #332]	; 25330 <__flatcc_fb_gen_c_json_parser@@Base+0x1a80>
   251e0:	ldr	r7, [pc, #332]	; 25334 <__flatcc_fb_gen_c_json_parser@@Base+0x1a84>
   251e4:	ldrh	r3, [r4, #24]
   251e8:	cmp	r3, #10
   251ec:	beq	252b0 <__flatcc_fb_gen_c_json_parser@@Base+0x1a00>
   251f0:	cmp	r3, #14
   251f4:	beq	25234 <__flatcc_fb_gen_c_json_parser@@Base+0x1984>
   251f8:	cmp	r3, #0
   251fc:	beq	25270 <__flatcc_fb_gen_c_json_parser@@Base+0x19c0>
   25200:	ldr	r1, [pc, #304]	; 25338 <__flatcc_fb_gen_c_json_parser@@Base+0x1a88>
   25204:	ldr	r2, [pc, #304]	; 2533c <__flatcc_fb_gen_c_json_parser@@Base+0x1a8c>
   25208:	mov	r3, #251	; 0xfb
   2520c:	ldr	r0, [r1]
   25210:	str	r2, [sp]
   25214:	ldr	r1, [pc, #292]	; 25340 <__flatcc_fb_gen_c_json_parser@@Base+0x1a90>
   25218:	ldr	r2, [pc, #292]	; 25344 <__flatcc_fb_gen_c_json_parser@@Base+0x1a94>
   2521c:	bl	14094 <fprintf@plt>
   25220:	ldr	r3, [pc, #288]	; 25348 <__flatcc_fb_gen_c_json_parser@@Base+0x1a98>
   25224:	mov	r2, #251	; 0xfb
   25228:	ldr	r1, [pc, #276]	; 25344 <__flatcc_fb_gen_c_json_parser@@Base+0x1a94>
   2522c:	ldr	r0, [pc, #280]	; 2534c <__flatcc_fb_gen_c_json_parser@@Base+0x1a9c>
   25230:	bl	14148 <__assert_fail@plt>
   25234:	ldr	r1, [r4, #16]
   25238:	add	r2, sp, #228	; 0xe4
   2523c:	ldr	r0, [r1, #12]
   25240:	bl	170c4 <__flatcc_fb_scoped_symbol_name@@Base>
   25244:	ldr	r3, [r4, #16]
   25248:	ldrh	r3, [r3, #8]
   2524c:	cmp	r3, #0
   25250:	beq	252d0 <__flatcc_fb_gen_c_json_parser@@Base+0x1a20>
   25254:	cmp	r3, #1
   25258:	bne	252f4 <__flatcc_fb_gen_c_json_parser@@Base+0x1a44>
   2525c:	add	r3, sp, #228	; 0xe4
   25260:	ldr	r2, [r4, #48]	; 0x30
   25264:	mov	r1, r7
   25268:	ldr	r0, [r5]
   2526c:	bl	14094 <fprintf@plt>
   25270:	ldr	r4, [r4]
   25274:	cmp	r4, #0
   25278:	bne	251e4 <__flatcc_fb_gen_c_json_parser@@Base+0x1934>
   2527c:	ldr	r3, [r5]
   25280:	mov	r2, #28
   25284:	mov	r1, #1
   25288:	ldr	r0, [pc, #192]	; 25350 <__flatcc_fb_gen_c_json_parser@@Base+0x1aa0>
   2528c:	bl	1401c <fwrite@plt>
   25290:	ldr	r3, [r5]
   25294:	mov	r2, #9
   25298:	mov	r1, #1
   2529c:	ldr	r0, [pc, #176]	; 25354 <__flatcc_fb_gen_c_json_parser@@Base+0x1aa4>
   252a0:	bl	1401c <fwrite@plt>
   252a4:	mov	r0, #0
   252a8:	add	sp, sp, #448	; 0x1c0
   252ac:	pop	{r4, r5, r6, r7, r8, pc}
   252b0:	ldr	r2, [r4, #48]	; 0x30
   252b4:	mov	r1, r6
   252b8:	ldr	r0, [r5]
   252bc:	bl	14094 <fprintf@plt>
   252c0:	ldr	r4, [r4]
   252c4:	cmp	r4, #0
   252c8:	bne	251e4 <__flatcc_fb_gen_c_json_parser@@Base+0x1934>
   252cc:	b	2527c <__flatcc_fb_gen_c_json_parser@@Base+0x19cc>
   252d0:	ldr	r2, [r4, #48]	; 0x30
   252d4:	add	r3, sp, #228	; 0xe4
   252d8:	mov	r1, r8
   252dc:	ldr	r0, [r5]
   252e0:	bl	14094 <fprintf@plt>
   252e4:	ldr	r4, [r4]
   252e8:	cmp	r4, #0
   252ec:	bne	251e4 <__flatcc_fb_gen_c_json_parser@@Base+0x1934>
   252f0:	b	2527c <__flatcc_fb_gen_c_json_parser@@Base+0x19cc>
   252f4:	ldr	r1, [pc, #60]	; 25338 <__flatcc_fb_gen_c_json_parser@@Base+0x1a88>
   252f8:	ldr	r2, [pc, #60]	; 2533c <__flatcc_fb_gen_c_json_parser@@Base+0x1a8c>
   252fc:	mov	r3, #240	; 0xf0
   25300:	ldr	r0, [r1]
   25304:	str	r2, [sp]
   25308:	ldr	r1, [pc, #48]	; 25340 <__flatcc_fb_gen_c_json_parser@@Base+0x1a90>
   2530c:	ldr	r2, [pc, #48]	; 25344 <__flatcc_fb_gen_c_json_parser@@Base+0x1a94>
   25310:	bl	14094 <fprintf@plt>
   25314:	ldr	r3, [pc, #44]	; 25348 <__flatcc_fb_gen_c_json_parser@@Base+0x1a98>
   25318:	mov	r2, #240	; 0xf0
   2531c:	ldr	r1, [pc, #32]	; 25344 <__flatcc_fb_gen_c_json_parser@@Base+0x1a94>
   25320:	ldr	r0, [pc, #36]	; 2534c <__flatcc_fb_gen_c_json_parser@@Base+0x1a9c>
   25324:	bl	14148 <__assert_fail@plt>
   25328:	andeq	r9, r5, r0, lsr #2
   2532c:	andeq	r9, r5, ip, lsl r3
   25330:	ldrdeq	r9, [r5], -r0
   25334:	andeq	r9, r5, r4, lsr r2
   25338:	andeq	pc, r6, r8, lsr #1
   2533c:	strdeq	r9, [r5], -r4
   25340:	ldrdeq	r4, [r4], -ip
   25344:	muleq	r5, ip, r2
   25348:	andeq	r9, r5, r8, ror r0
   2534c:	andeq	sp, r4, r4, ror r2
   25350:	andeq	r9, r5, r4, lsr #3
   25354:	andeq	r9, r5, r4, asr #3
   25358:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2535c:	sub	sp, sp, #468	; 0x1d4
   25360:	mov	r4, r1
   25364:	mov	r6, r0
   25368:	mov	r2, #220	; 0xdc
   2536c:	mov	r1, #0
   25370:	add	r0, sp, #24
   25374:	bl	140ac <memset@plt>
   25378:	mov	r2, #220	; 0xdc
   2537c:	mov	r1, #0
   25380:	add	r0, sp, #244	; 0xf4
   25384:	bl	140ac <memset@plt>
   25388:	mov	r1, r4
   2538c:	ldr	r0, [r4, #12]
   25390:	add	r2, sp, #24
   25394:	bl	170c4 <__flatcc_fb_scoped_symbol_name@@Base>
   25398:	add	r2, sp, #24
   2539c:	ldr	r0, [r6]
   253a0:	ldr	r1, [pc, #716]	; 25674 <__flatcc_fb_gen_c_json_parser@@Base+0x1dc4>
   253a4:	bl	14094 <fprintf@plt>
   253a8:	ldr	r4, [r4, #20]
   253ac:	cmp	r4, #0
   253b0:	beq	25490 <__flatcc_fb_gen_c_json_parser@@Base+0x1be0>
   253b4:	ldr	r7, [pc, #700]	; 25678 <__flatcc_fb_gen_c_json_parser@@Base+0x1dc8>
   253b8:	ldr	r8, [pc, #700]	; 2567c <__flatcc_fb_gen_c_json_parser@@Base+0x1dcc>
   253bc:	ldr	r9, [pc, #700]	; 25680 <__flatcc_fb_gen_c_json_parser@@Base+0x1dd0>
   253c0:	mov	r5, #0
   253c4:	ldrh	r3, [r4, #72]	; 0x48
   253c8:	tst	r3, #4
   253cc:	bne	25480 <__flatcc_fb_gen_c_json_parser@@Base+0x1bd0>
   253d0:	ldrh	r3, [r4, #24]
   253d4:	cmp	r3, #8
   253d8:	beq	254c4 <__flatcc_fb_gen_c_json_parser@@Base+0x1c14>
   253dc:	cmp	r3, #14
   253e0:	bne	25480 <__flatcc_fb_gen_c_json_parser@@Base+0x1bd0>
   253e4:	ldr	r1, [r4, #16]
   253e8:	add	r2, sp, #244	; 0xf4
   253ec:	ldr	r0, [r1, #12]
   253f0:	bl	170c4 <__flatcc_fb_scoped_symbol_name@@Base>
   253f4:	ldr	r2, [r4, #16]
   253f8:	ldrh	r3, [r2, #8]
   253fc:	cmp	r3, #1
   25400:	beq	25504 <__flatcc_fb_gen_c_json_parser@@Base+0x1c54>
   25404:	cmp	r3, #3
   25408:	bne	25480 <__flatcc_fb_gen_c_json_parser@@Base+0x1bd0>
   2540c:	ldr	r3, [r2, #40]	; 0x28
   25410:	sub	r3, r3, #1
   25414:	cmp	r3, #10
   25418:	ldrls	pc, [pc, r3, lsl #2]
   2541c:	b	255a0 <__flatcc_fb_gen_c_json_parser@@Base+0x1cf0>
   25420:	andeq	r5, r2, r4, lsr #12
   25424:	andeq	r5, r2, ip, ror #12
   25428:	ldrdeq	r5, [r2], -r4
   2542c:	andeq	r5, r2, ip, asr r6
   25430:	andeq	r5, r2, r4, ror #12
   25434:	andeq	r5, r2, ip, lsr r6
   25438:	andeq	r5, r2, r4, asr #12
   2543c:	andeq	r5, r2, ip, asr #12
   25440:	andeq	r5, r2, r4, asr r6
   25444:	andeq	r5, r2, ip, lsr #12
   25448:	andeq	r5, r2, r4, lsr r6
   2544c:	mov	r2, r8
   25450:	ldr	r1, [r4, #4]
   25454:	ldr	r0, [r6]
   25458:	ldr	r3, [r1, #4]
   2545c:	str	r3, [sp, #16]
   25460:	ldr	r1, [r1]
   25464:	str	r3, [sp, #8]
   25468:	str	r1, [sp, #12]
   2546c:	ldrd	sl, [r4, #80]	; 0x50
   25470:	mov	r3, r5
   25474:	mov	r1, r7
   25478:	strd	sl, [sp]
   2547c:	bl	14094 <fprintf@plt>
   25480:	ldr	r4, [r4]
   25484:	add	r5, r5, #1
   25488:	cmp	r4, #0
   2548c:	bne	253c4 <__flatcc_fb_gen_c_json_parser@@Base+0x1b14>
   25490:	ldr	r3, [r6]
   25494:	mov	r2, #3
   25498:	mov	r1, #1
   2549c:	ldr	r0, [pc, #480]	; 25684 <__flatcc_fb_gen_c_json_parser@@Base+0x1dd4>
   254a0:	bl	1401c <fwrite@plt>
   254a4:	add	r3, sp, #24
   254a8:	mov	r2, r3
   254ac:	ldr	r0, [r6]
   254b0:	ldr	r1, [pc, #464]	; 25688 <__flatcc_fb_gen_c_json_parser@@Base+0x1dd8>
   254b4:	bl	14094 <fprintf@plt>
   254b8:	mov	r0, #0
   254bc:	add	sp, sp, #468	; 0x1d4
   254c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   254c4:	ldr	r3, [r4, #16]
   254c8:	sub	r3, r3, #1
   254cc:	cmp	r3, #10
   254d0:	ldrls	pc, [pc, r3, lsl #2]
   254d4:	b	255a0 <__flatcc_fb_gen_c_json_parser@@Base+0x1cf0>
   254d8:	andeq	r5, r2, r0, ror r5
   254dc:	andeq	r5, r2, r8, ror r5
   254e0:	andeq	r5, r2, ip, asr #8
   254e4:	andeq	r5, r2, r0, asr r5
   254e8:	andeq	r5, r2, r8, asr r5
   254ec:	andeq	r5, r2, r0, ror #10
   254f0:	andeq	r5, r2, r8, ror #10
   254f4:	andeq	r5, r2, r0, lsl #11
   254f8:	andeq	r5, r2, r8, lsl #11
   254fc:	muleq	r2, r0, r5
   25500:	muleq	r2, r8, r5
   25504:	ldr	r1, [r4, #4]
   25508:	add	ip, sp, #244	; 0xf4
   2550c:	ldr	r0, [r6]
   25510:	ldr	r3, [r1, #4]
   25514:	str	ip, [sp, #20]
   25518:	str	r3, [sp, #16]
   2551c:	ldr	r1, [r1]
   25520:	str	r3, [sp, #8]
   25524:	str	r1, [sp, #12]
   25528:	ldrd	sl, [r4, #80]	; 0x50
   2552c:	mov	r2, r5
   25530:	ldr	r1, [pc, #340]	; 2568c <__flatcc_fb_gen_c_json_parser@@Base+0x1ddc>
   25534:	strd	sl, [sp]
   25538:	bl	14094 <fprintf@plt>
   2553c:	ldr	r4, [r4]
   25540:	add	r5, r5, #1
   25544:	cmp	r4, #0
   25548:	bne	253c4 <__flatcc_fb_gen_c_json_parser@@Base+0x1b14>
   2554c:	b	25490 <__flatcc_fb_gen_c_json_parser@@Base+0x1be0>
   25550:	ldr	r2, [pc, #312]	; 25690 <__flatcc_fb_gen_c_json_parser@@Base+0x1de0>
   25554:	b	25450 <__flatcc_fb_gen_c_json_parser@@Base+0x1ba0>
   25558:	ldr	r2, [pc, #308]	; 25694 <__flatcc_fb_gen_c_json_parser@@Base+0x1de4>
   2555c:	b	25450 <__flatcc_fb_gen_c_json_parser@@Base+0x1ba0>
   25560:	ldr	r2, [pc, #304]	; 25698 <__flatcc_fb_gen_c_json_parser@@Base+0x1de8>
   25564:	b	25450 <__flatcc_fb_gen_c_json_parser@@Base+0x1ba0>
   25568:	ldr	r2, [pc, #300]	; 2569c <__flatcc_fb_gen_c_json_parser@@Base+0x1dec>
   2556c:	b	25450 <__flatcc_fb_gen_c_json_parser@@Base+0x1ba0>
   25570:	ldr	r2, [pc, #296]	; 256a0 <__flatcc_fb_gen_c_json_parser@@Base+0x1df0>
   25574:	b	25450 <__flatcc_fb_gen_c_json_parser@@Base+0x1ba0>
   25578:	ldr	r2, [pc, #292]	; 256a4 <__flatcc_fb_gen_c_json_parser@@Base+0x1df4>
   2557c:	b	25450 <__flatcc_fb_gen_c_json_parser@@Base+0x1ba0>
   25580:	ldr	r2, [pc, #288]	; 256a8 <__flatcc_fb_gen_c_json_parser@@Base+0x1df8>
   25584:	b	25450 <__flatcc_fb_gen_c_json_parser@@Base+0x1ba0>
   25588:	ldr	r2, [pc, #284]	; 256ac <__flatcc_fb_gen_c_json_parser@@Base+0x1dfc>
   2558c:	b	25450 <__flatcc_fb_gen_c_json_parser@@Base+0x1ba0>
   25590:	ldr	r2, [pc, #280]	; 256b0 <__flatcc_fb_gen_c_json_parser@@Base+0x1e00>
   25594:	b	25450 <__flatcc_fb_gen_c_json_parser@@Base+0x1ba0>
   25598:	mov	r2, r9
   2559c:	b	25450 <__flatcc_fb_gen_c_json_parser@@Base+0x1ba0>
   255a0:	ldr	r1, [pc, #268]	; 256b4 <__flatcc_fb_gen_c_json_parser@@Base+0x1e04>
   255a4:	ldr	r2, [pc, #268]	; 256b8 <__flatcc_fb_gen_c_json_parser@@Base+0x1e08>
   255a8:	mov	r3, #96	; 0x60
   255ac:	ldr	r0, [r1]
   255b0:	str	r2, [sp]
   255b4:	ldr	r1, [pc, #256]	; 256bc <__flatcc_fb_gen_c_json_parser@@Base+0x1e0c>
   255b8:	ldr	r2, [pc, #256]	; 256c0 <__flatcc_fb_gen_c_json_parser@@Base+0x1e10>
   255bc:	bl	14094 <fprintf@plt>
   255c0:	ldr	r3, [pc, #252]	; 256c4 <__flatcc_fb_gen_c_json_parser@@Base+0x1e14>
   255c4:	mov	r2, #96	; 0x60
   255c8:	ldr	r1, [pc, #240]	; 256c0 <__flatcc_fb_gen_c_json_parser@@Base+0x1e10>
   255cc:	ldr	r0, [pc, #244]	; 256c8 <__flatcc_fb_gen_c_json_parser@@Base+0x1e18>
   255d0:	bl	14148 <__assert_fail@plt>
   255d4:	mov	r2, r8
   255d8:	ldr	r1, [r4, #4]
   255dc:	add	ip, sp, #244	; 0xf4
   255e0:	ldr	r0, [r6]
   255e4:	ldr	r3, [r1, #4]
   255e8:	str	ip, [sp, #20]
   255ec:	str	r3, [sp, #16]
   255f0:	ldr	r1, [r1]
   255f4:	str	r3, [sp, #8]
   255f8:	str	r1, [sp, #12]
   255fc:	ldrd	sl, [r4, #80]	; 0x50
   25600:	mov	r3, r5
   25604:	ldr	r1, [pc, #192]	; 256cc <__flatcc_fb_gen_c_json_parser@@Base+0x1e1c>
   25608:	strd	sl, [sp]
   2560c:	bl	14094 <fprintf@plt>
   25610:	ldr	r4, [r4]
   25614:	add	r5, r5, #1
   25618:	cmp	r4, #0
   2561c:	bne	253c4 <__flatcc_fb_gen_c_json_parser@@Base+0x1b14>
   25620:	b	25490 <__flatcc_fb_gen_c_json_parser@@Base+0x1be0>
   25624:	ldr	r2, [pc, #116]	; 256a0 <__flatcc_fb_gen_c_json_parser@@Base+0x1df0>
   25628:	b	255d8 <__flatcc_fb_gen_c_json_parser@@Base+0x1d28>
   2562c:	ldr	r2, [pc, #124]	; 256b0 <__flatcc_fb_gen_c_json_parser@@Base+0x1e00>
   25630:	b	255d8 <__flatcc_fb_gen_c_json_parser@@Base+0x1d28>
   25634:	mov	r2, r9
   25638:	b	255d8 <__flatcc_fb_gen_c_json_parser@@Base+0x1d28>
   2563c:	ldr	r2, [pc, #84]	; 25698 <__flatcc_fb_gen_c_json_parser@@Base+0x1de8>
   25640:	b	255d8 <__flatcc_fb_gen_c_json_parser@@Base+0x1d28>
   25644:	ldr	r2, [pc, #80]	; 2569c <__flatcc_fb_gen_c_json_parser@@Base+0x1dec>
   25648:	b	255d8 <__flatcc_fb_gen_c_json_parser@@Base+0x1d28>
   2564c:	ldr	r2, [pc, #84]	; 256a8 <__flatcc_fb_gen_c_json_parser@@Base+0x1df8>
   25650:	b	255d8 <__flatcc_fb_gen_c_json_parser@@Base+0x1d28>
   25654:	ldr	r2, [pc, #80]	; 256ac <__flatcc_fb_gen_c_json_parser@@Base+0x1dfc>
   25658:	b	255d8 <__flatcc_fb_gen_c_json_parser@@Base+0x1d28>
   2565c:	ldr	r2, [pc, #44]	; 25690 <__flatcc_fb_gen_c_json_parser@@Base+0x1de0>
   25660:	b	255d8 <__flatcc_fb_gen_c_json_parser@@Base+0x1d28>
   25664:	ldr	r2, [pc, #40]	; 25694 <__flatcc_fb_gen_c_json_parser@@Base+0x1de4>
   25668:	b	255d8 <__flatcc_fb_gen_c_json_parser@@Base+0x1d28>
   2566c:	ldr	r2, [pc, #48]	; 256a4 <__flatcc_fb_gen_c_json_parser@@Base+0x1df4>
   25670:	b	255d8 <__flatcc_fb_gen_c_json_parser@@Base+0x1d28>
   25674:	andeq	r9, r5, ip, ror #6
   25678:	muleq	r5, r4, r4
   2567c:	strdeq	r4, [r4], -r8
   25680:	andeq	r4, r4, r0, asr #7
   25684:	strdeq	r6, [r5], -r0
   25688:			; <UNDEFINED> instruction: 0x000593bc
   2568c:	andeq	r9, r5, r4, asr #10
   25690:	andeq	r4, r4, r0, lsl #16
   25694:	ldrdeq	ip, [r5], -r0
   25698:	andeq	r4, r4, r8, lsl #16
   2569c:	andeq	r4, r4, r0, lsl r8
   256a0:	andeq	r4, r4, r8, ror #15
   256a4:	strdeq	r4, [r4], -r0
   256a8:	andeq	r4, r4, r8, lsl r8
   256ac:	andeq	r4, r4, r0, lsr #16
   256b0:	andeq	r4, r4, r8, asr #7
   256b4:	andeq	pc, r6, r8, lsr #1
   256b8:	andeq	r4, r4, r8, ror #9
   256bc:	ldrdeq	r4, [r4], -ip
   256c0:	muleq	r4, r0, r4
   256c4:	muleq	r5, r8, r0
   256c8:	andeq	sp, r4, r4, ror r2
   256cc:	andeq	r9, r5, r0, ror #9
   256d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   256d4:	sub	sp, sp, #460	; 0x1cc
   256d8:	mov	r7, r1
   256dc:	mov	r2, #220	; 0xdc
   256e0:	mov	r1, #0
   256e4:	mov	r6, r0
   256e8:	add	r0, sp, #16
   256ec:	bl	140ac <memset@plt>
   256f0:	mov	r2, #220	; 0xdc
   256f4:	mov	r1, #0
   256f8:	add	r0, sp, #236	; 0xec
   256fc:	bl	140ac <memset@plt>
   25700:	add	r2, sp, #16
   25704:	mov	r1, r7
   25708:	ldr	r0, [r7, #12]
   2570c:	bl	170c4 <__flatcc_fb_scoped_symbol_name@@Base>
   25710:	ldr	r3, [r7, #40]	; 0x28
   25714:	sub	r3, r3, #1
   25718:	cmp	r3, #10
   2571c:	ldrls	pc, [pc, r3, lsl #2]
   25720:	b	25b64 <__flatcc_fb_gen_c_json_parser@@Base+0x22b4>
   25724:	strdeq	r5, [r2], -r4
   25728:	andeq	r5, r2, r4, asr #17
   2572c:	andeq	r5, r2, r0, asr r7
   25730:	ldrdeq	r5, [r2], -r4
   25734:	andeq	r5, r2, r4, ror #17
   25738:	andeq	r5, r2, r4, lsr #18
   2573c:	andeq	r5, r2, r4, lsr r9
   25740:	andeq	r5, r2, r4, asr #18
   25744:	andeq	r5, r2, r4, asr r9
   25748:	andeq	r5, r2, r4, lsl #18
   2574c:	andeq	r5, r2, r4, lsl r9
   25750:	ldr	fp, [pc, #1088]	; 25b98 <__flatcc_fb_gen_c_json_parser@@Base+0x22e8>
   25754:	ldr	r8, [pc, #1088]	; 25b9c <__flatcc_fb_gen_c_json_parser@@Base+0x22ec>
   25758:	ldr	r1, [pc, #1088]	; 25ba0 <__flatcc_fb_gen_c_json_parser@@Base+0x22f0>
   2575c:	ldrh	r3, [r7, #92]	; 0x5c
   25760:	tst	r3, #32
   25764:	beq	259f8 <__flatcc_fb_gen_c_json_parser@@Base+0x2148>
   25768:	ldrd	r2, [r7, #112]	; 0x70
   2576c:	subs	r2, r2, #1
   25770:	sbc	r3, r3, #0
   25774:	cmp	r3, #0
   25778:	cmpeq	r2, #3
   2577c:	bhi	25aa0 <__flatcc_fb_gen_c_json_parser@@Base+0x21f0>
   25780:	ldr	r3, [pc, #1052]	; 25ba4 <__flatcc_fb_gen_c_json_parser@@Base+0x22f4>
   25784:	add	r0, r3, r2, lsl #3
   25788:	add	r2, r3, r2, lsl #2
   2578c:	ldrd	r4, [r0, #56]	; 0x38
   25790:	ldr	r9, [r2, #88]	; 0x58
   25794:	ldr	sl, [r2, #104]	; 0x68
   25798:	ldr	r0, [r7, #20]
   2579c:	cmp	r0, #0
   257a0:	bne	257c4 <__flatcc_fb_gen_c_json_parser@@Base+0x1f14>
   257a4:	b	257e8 <__flatcc_fb_gen_c_json_parser@@Base+0x1f38>
   257a8:	cmp	r3, #6
   257ac:	beq	25964 <__flatcc_fb_gen_c_json_parser@@Base+0x20b4>
   257b0:	cmp	r3, #4
   257b4:	beq	257d0 <__flatcc_fb_gen_c_json_parser@@Base+0x1f20>
   257b8:	ldr	r0, [r0]
   257bc:	cmp	r0, #0
   257c0:	beq	257e8 <__flatcc_fb_gen_c_json_parser@@Base+0x1f38>
   257c4:	ldrh	r3, [r0, #56]	; 0x38
   257c8:	cmp	r3, #5
   257cc:	bne	257a8 <__flatcc_fb_gen_c_json_parser@@Base+0x1ef8>
   257d0:	ldrd	r2, [r0, #48]	; 0x30
   257d4:	ldr	r0, [r0]
   257d8:	cmp	r0, #0
   257dc:	bic	r4, r4, r2
   257e0:	bic	r5, r5, r3
   257e4:	bne	257c4 <__flatcc_fb_gen_c_json_parser@@Base+0x1f14>
   257e8:	mov	r3, r1
   257ec:	ldr	r0, [r6, #204]	; 0xcc
   257f0:	add	r2, sp, #16
   257f4:	ldr	r1, [pc, #940]	; 25ba8 <__flatcc_fb_gen_c_json_parser@@Base+0x22f8>
   257f8:	str	r8, [sp]
   257fc:	bl	14094 <fprintf@plt>
   25800:	mov	r1, r8
   25804:	mov	r0, sl
   25808:	bl	13fbc <strcmp@plt>
   2580c:	cmp	r0, #0
   25810:	beq	25a8c <__flatcc_fb_gen_c_json_parser@@Base+0x21dc>
   25814:	mov	r3, sl
   25818:	mov	r2, sl
   2581c:	ldr	r1, [pc, #904]	; 25bac <__flatcc_fb_gen_c_json_parser@@Base+0x22fc>
   25820:	ldr	r0, [r6, #204]	; 0xcc
   25824:	bl	14094 <fprintf@plt>
   25828:	ldr	r3, [r6, #204]	; 0xcc
   2582c:	mov	r2, #54	; 0x36
   25830:	mov	r1, #1
   25834:	ldr	r0, [pc, #884]	; 25bb0 <__flatcc_fb_gen_c_json_parser@@Base+0x2300>
   25838:	bl	1401c <fwrite@plt>
   2583c:	ldr	r1, [r6, #204]	; 0xcc
   25840:	mov	r0, #10
   25844:	bl	140f4 <fputc@plt>
   25848:	orrs	r3, r4, r5
   2584c:	bne	25b48 <__flatcc_fb_gen_c_json_parser@@Base+0x2298>
   25850:	ldr	r3, [r6, #204]	; 0xcc
   25854:	mov	r2, #59	; 0x3b
   25858:	mov	r1, #1
   2585c:	ldr	r0, [pc, #848]	; 25bb4 <__flatcc_fb_gen_c_json_parser@@Base+0x2304>
   25860:	bl	1401c <fwrite@plt>
   25864:	ldr	r4, [r7, #20]
   25868:	cmp	r4, #0
   2586c:	ldrne	r5, [pc, #836]	; 25bb8 <__flatcc_fb_gen_c_json_parser@@Base+0x2308>
   25870:	beq	259ac <__flatcc_fb_gen_c_json_parser@@Base+0x20fc>
   25874:	ldrh	r3, [r4, #56]	; 0x38
   25878:	cmp	r3, #5
   2587c:	beq	25978 <__flatcc_fb_gen_c_json_parser@@Base+0x20c8>
   25880:	cmp	r3, #6
   25884:	beq	259e0 <__flatcc_fb_gen_c_json_parser@@Base+0x2130>
   25888:	cmp	r3, #4
   2588c:	beq	25978 <__flatcc_fb_gen_c_json_parser@@Base+0x20c8>
   25890:	ldr	r1, [pc, #804]	; 25bbc <__flatcc_fb_gen_c_json_parser@@Base+0x230c>
   25894:	ldr	r2, [pc, #804]	; 25bc0 <__flatcc_fb_gen_c_json_parser@@Base+0x2310>
   25898:	mov	r3, #134	; 0x86
   2589c:	ldr	r0, [r1]
   258a0:	str	r2, [sp]
   258a4:	ldr	r1, [pc, #792]	; 25bc4 <__flatcc_fb_gen_c_json_parser@@Base+0x2314>
   258a8:	ldr	r2, [pc, #792]	; 25bc8 <__flatcc_fb_gen_c_json_parser@@Base+0x2318>
   258ac:	bl	14094 <fprintf@plt>
   258b0:	ldr	r3, [pc, #788]	; 25bcc <__flatcc_fb_gen_c_json_parser@@Base+0x231c>
   258b4:	mov	r2, #134	; 0x86
   258b8:	ldr	r1, [pc, #776]	; 25bc8 <__flatcc_fb_gen_c_json_parser@@Base+0x2318>
   258bc:	ldr	r0, [pc, #780]	; 25bd0 <__flatcc_fb_gen_c_json_parser@@Base+0x2320>
   258c0:	bl	14148 <__assert_fail@plt>
   258c4:	ldr	fp, [pc, #776]	; 25bd4 <__flatcc_fb_gen_c_json_parser@@Base+0x2324>
   258c8:	ldr	r8, [pc, #776]	; 25bd8 <__flatcc_fb_gen_c_json_parser@@Base+0x2328>
   258cc:	ldr	r1, [pc, #716]	; 25ba0 <__flatcc_fb_gen_c_json_parser@@Base+0x22f0>
   258d0:	b	2575c <__flatcc_fb_gen_c_json_parser@@Base+0x1eac>
   258d4:	ldr	fp, [pc, #768]	; 25bdc <__flatcc_fb_gen_c_json_parser@@Base+0x232c>
   258d8:	ldr	r8, [pc, #768]	; 25be0 <__flatcc_fb_gen_c_json_parser@@Base+0x2330>
   258dc:	ldr	r1, [pc, #700]	; 25ba0 <__flatcc_fb_gen_c_json_parser@@Base+0x22f0>
   258e0:	b	2575c <__flatcc_fb_gen_c_json_parser@@Base+0x1eac>
   258e4:	mov	r1, r6
   258e8:	ldr	fp, [pc, #756]	; 25be4 <__flatcc_fb_gen_c_json_parser@@Base+0x2334>
   258ec:	ldr	r8, [pc, #756]	; 25be8 <__flatcc_fb_gen_c_json_parser@@Base+0x2338>
   258f0:	b	2575c <__flatcc_fb_gen_c_json_parser@@Base+0x1eac>
   258f4:	ldr	fp, [pc, #752]	; 25bec <__flatcc_fb_gen_c_json_parser@@Base+0x233c>
   258f8:	ldr	r8, [pc, #752]	; 25bf0 <__flatcc_fb_gen_c_json_parser@@Base+0x2340>
   258fc:	ldr	r1, [pc, #668]	; 25ba0 <__flatcc_fb_gen_c_json_parser@@Base+0x22f0>
   25900:	b	2575c <__flatcc_fb_gen_c_json_parser@@Base+0x1eac>
   25904:	ldr	fp, [pc, #744]	; 25bf4 <__flatcc_fb_gen_c_json_parser@@Base+0x2344>
   25908:	ldr	r1, [pc, #656]	; 25ba0 <__flatcc_fb_gen_c_json_parser@@Base+0x22f0>
   2590c:	mov	r8, fp
   25910:	b	2575c <__flatcc_fb_gen_c_json_parser@@Base+0x1eac>
   25914:	ldr	fp, [pc, #732]	; 25bf8 <__flatcc_fb_gen_c_json_parser@@Base+0x2348>
   25918:	ldr	r1, [pc, #640]	; 25ba0 <__flatcc_fb_gen_c_json_parser@@Base+0x22f0>
   2591c:	mov	r8, fp
   25920:	b	2575c <__flatcc_fb_gen_c_json_parser@@Base+0x1eac>
   25924:	ldr	fp, [pc, #720]	; 25bfc <__flatcc_fb_gen_c_json_parser@@Base+0x234c>
   25928:	ldr	r8, [pc, #720]	; 25c00 <__flatcc_fb_gen_c_json_parser@@Base+0x2350>
   2592c:	ldr	r1, [pc, #620]	; 25ba0 <__flatcc_fb_gen_c_json_parser@@Base+0x22f0>
   25930:	b	2575c <__flatcc_fb_gen_c_json_parser@@Base+0x1eac>
   25934:	ldr	fp, [pc, #712]	; 25c04 <__flatcc_fb_gen_c_json_parser@@Base+0x2354>
   25938:	ldr	r8, [pc, #712]	; 25c08 <__flatcc_fb_gen_c_json_parser@@Base+0x2358>
   2593c:	ldr	r1, [pc, #604]	; 25ba0 <__flatcc_fb_gen_c_json_parser@@Base+0x22f0>
   25940:	b	2575c <__flatcc_fb_gen_c_json_parser@@Base+0x1eac>
   25944:	ldr	fp, [pc, #704]	; 25c0c <__flatcc_fb_gen_c_json_parser@@Base+0x235c>
   25948:	ldr	r8, [pc, #704]	; 25c10 <__flatcc_fb_gen_c_json_parser@@Base+0x2360>
   2594c:	ldr	r1, [pc, #588]	; 25ba0 <__flatcc_fb_gen_c_json_parser@@Base+0x22f0>
   25950:	b	2575c <__flatcc_fb_gen_c_json_parser@@Base+0x1eac>
   25954:	ldr	fp, [pc, #696]	; 25c14 <__flatcc_fb_gen_c_json_parser@@Base+0x2364>
   25958:	ldr	r8, [pc, #696]	; 25c18 <__flatcc_fb_gen_c_json_parser@@Base+0x2368>
   2595c:	ldr	r1, [pc, #572]	; 25ba0 <__flatcc_fb_gen_c_json_parser@@Base+0x22f0>
   25960:	b	2575c <__flatcc_fb_gen_c_json_parser@@Base+0x1eac>
   25964:	ldrb	r2, [r0, #48]	; 0x30
   25968:	mov	r3, #0
   2596c:	bic	r5, r5, r3
   25970:	bic	r4, r4, r2
   25974:	b	257b8 <__flatcc_fb_gen_c_json_parser@@Base+0x1f08>
   25978:	ldr	ip, [r4, #4]
   2597c:	ldrd	r2, [r4, #48]	; 0x30
   25980:	ldr	r0, [r6, #204]	; 0xcc
   25984:	ldr	r1, [ip, #4]
   25988:	str	r1, [sp, #12]
   2598c:	ldr	ip, [ip]
   25990:	str	r9, [sp]
   25994:	stmib	sp, {r1, ip}
   25998:	mov	r1, r5
   2599c:	bl	14094 <fprintf@plt>
   259a0:	ldr	r4, [r4]
   259a4:	cmp	r4, #0
   259a8:	bne	25874 <__flatcc_fb_gen_c_json_parser@@Base+0x1fc4>
   259ac:	ldr	r3, [r6, #204]	; 0xcc
   259b0:	mov	r2, #59	; 0x3b
   259b4:	mov	r1, #1
   259b8:	ldr	r0, [pc, #500]	; 25bb4 <__flatcc_fb_gen_c_json_parser@@Base+0x2304>
   259bc:	bl	1401c <fwrite@plt>
   259c0:	ldr	r3, [r6, #204]	; 0xcc
   259c4:	mov	r2, #3
   259c8:	mov	r1, #1
   259cc:	ldr	r0, [pc, #584]	; 25c1c <__flatcc_fb_gen_c_json_parser@@Base+0x236c>
   259d0:	bl	1401c <fwrite@plt>
   259d4:	mov	r0, #0
   259d8:	add	sp, sp, #460	; 0x1cc
   259dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   259e0:	ldr	ip, [r4, #4]
   259e4:	ldrb	r2, [r4, #48]	; 0x30
   259e8:	mov	r3, #0
   259ec:	ldr	r1, [ip, #4]
   259f0:	ldr	r0, [r6, #204]	; 0xcc
   259f4:	b	25988 <__flatcc_fb_gen_c_json_parser@@Base+0x20d8>
   259f8:	mov	r3, r1
   259fc:	ldr	r0, [r6, #204]	; 0xcc
   25a00:	add	r2, sp, #16
   25a04:	ldr	r1, [pc, #412]	; 25ba8 <__flatcc_fb_gen_c_json_parser@@Base+0x22f8>
   25a08:	str	r8, [sp]
   25a0c:	bl	14094 <fprintf@plt>
   25a10:	ldr	r3, [r6, #204]	; 0xcc
   25a14:	mov	r2, #18
   25a18:	mov	r1, #1
   25a1c:	ldr	r0, [pc, #508]	; 25c20 <__flatcc_fb_gen_c_json_parser@@Base+0x2370>
   25a20:	bl	1401c <fwrite@plt>
   25a24:	ldr	r4, [r7, #20]
   25a28:	cmp	r4, #0
   25a2c:	beq	25ae4 <__flatcc_fb_gen_c_json_parser@@Base+0x2234>
   25a30:	ldr	r8, [pc, #492]	; 25c24 <__flatcc_fb_gen_c_json_parser@@Base+0x2374>
   25a34:	ldr	r7, [pc, #492]	; 25c28 <__flatcc_fb_gen_c_json_parser@@Base+0x2378>
   25a38:	ldr	r5, [pc, #492]	; 25c2c <__flatcc_fb_gen_c_json_parser@@Base+0x237c>
   25a3c:	ldrh	r3, [r4, #56]	; 0x38
   25a40:	cmp	r3, #5
   25a44:	beq	25b20 <__flatcc_fb_gen_c_json_parser@@Base+0x2270>
   25a48:	cmp	r3, #6
   25a4c:	beq	25af8 <__flatcc_fb_gen_c_json_parser@@Base+0x2248>
   25a50:	cmp	r3, #4
   25a54:	beq	25ab4 <__flatcc_fb_gen_c_json_parser@@Base+0x2204>
   25a58:	ldr	r1, [pc, #348]	; 25bbc <__flatcc_fb_gen_c_json_parser@@Base+0x230c>
   25a5c:	ldr	r2, [pc, #348]	; 25bc0 <__flatcc_fb_gen_c_json_parser@@Base+0x2310>
   25a60:	mov	r3, #157	; 0x9d
   25a64:	ldr	r0, [r1]
   25a68:	str	r2, [sp]
   25a6c:	ldr	r1, [pc, #336]	; 25bc4 <__flatcc_fb_gen_c_json_parser@@Base+0x2314>
   25a70:	ldr	r2, [pc, #336]	; 25bc8 <__flatcc_fb_gen_c_json_parser@@Base+0x2318>
   25a74:	bl	14094 <fprintf@plt>
   25a78:	ldr	r3, [pc, #332]	; 25bcc <__flatcc_fb_gen_c_json_parser@@Base+0x231c>
   25a7c:	mov	r2, #157	; 0x9d
   25a80:	ldr	r1, [pc, #320]	; 25bc8 <__flatcc_fb_gen_c_json_parser@@Base+0x2318>
   25a84:	ldr	r0, [pc, #324]	; 25bd0 <__flatcc_fb_gen_c_json_parser@@Base+0x2320>
   25a88:	bl	14148 <__assert_fail@plt>
   25a8c:	mov	r2, sl
   25a90:	ldr	r1, [pc, #408]	; 25c30 <__flatcc_fb_gen_c_json_parser@@Base+0x2380>
   25a94:	ldr	r0, [r6, #204]	; 0xcc
   25a98:	bl	14094 <fprintf@plt>
   25a9c:	b	25828 <__flatcc_fb_gen_c_json_parser@@Base+0x1f78>
   25aa0:	ldr	sl, [pc, #328]	; 25bf0 <__flatcc_fb_gen_c_json_parser@@Base+0x2340>
   25aa4:	ldr	r9, [pc, #392]	; 25c34 <__flatcc_fb_gen_c_json_parser@@Base+0x2384>
   25aa8:	mvn	r4, #0
   25aac:	mvn	r5, #0
   25ab0:	b	25798 <__flatcc_fb_gen_c_json_parser@@Base+0x1ee8>
   25ab4:	ldr	ip, [r4, #4]
   25ab8:	ldrd	r2, [r4, #48]	; 0x30
   25abc:	ldr	r0, [r6, #204]	; 0xcc
   25ac0:	ldr	r1, [ip, #4]
   25ac4:	str	r1, [sp, #8]
   25ac8:	ldr	ip, [ip]
   25acc:	stm	sp, {r1, ip}
   25ad0:	mov	r1, r5
   25ad4:	bl	14094 <fprintf@plt>
   25ad8:	ldr	r4, [r4]
   25adc:	cmp	r4, #0
   25ae0:	bne	25a3c <__flatcc_fb_gen_c_json_parser@@Base+0x218c>
   25ae4:	mov	r2, fp
   25ae8:	ldr	r1, [pc, #328]	; 25c38 <__flatcc_fb_gen_c_json_parser@@Base+0x2388>
   25aec:	ldr	r0, [r6, #204]	; 0xcc
   25af0:	bl	14094 <fprintf@plt>
   25af4:	b	259c0 <__flatcc_fb_gen_c_json_parser@@Base+0x2110>
   25af8:	ldr	r1, [r4, #4]
   25afc:	ldrb	r2, [r4, #48]	; 0x30
   25b00:	ldr	r0, [r6, #204]	; 0xcc
   25b04:	ldr	r3, [r1, #4]
   25b08:	str	r3, [sp, #4]
   25b0c:	ldr	r1, [r1]
   25b10:	str	r1, [sp]
   25b14:	mov	r1, r7
   25b18:	bl	14094 <fprintf@plt>
   25b1c:	b	25ad8 <__flatcc_fb_gen_c_json_parser@@Base+0x2228>
   25b20:	ldr	ip, [r4, #4]
   25b24:	ldrd	r2, [r4, #48]	; 0x30
   25b28:	ldr	r0, [r6, #204]	; 0xcc
   25b2c:	ldr	r1, [ip, #4]
   25b30:	str	r1, [sp, #8]
   25b34:	ldr	ip, [ip]
   25b38:	stm	sp, {r1, ip}
   25b3c:	mov	r1, r8
   25b40:	bl	14094 <fprintf@plt>
   25b44:	b	25ad8 <__flatcc_fb_gen_c_json_parser@@Base+0x2228>
   25b48:	ldr	r0, [r6, #204]	; 0xcc
   25b4c:	mov	r2, r4
   25b50:	str	fp, [sp]
   25b54:	mov	r3, r5
   25b58:	ldr	r1, [pc, #220]	; 25c3c <__flatcc_fb_gen_c_json_parser@@Base+0x238c>
   25b5c:	bl	14094 <fprintf@plt>
   25b60:	b	25850 <__flatcc_fb_gen_c_json_parser@@Base+0x1fa0>
   25b64:	ldr	r1, [pc, #80]	; 25bbc <__flatcc_fb_gen_c_json_parser@@Base+0x230c>
   25b68:	ldr	r2, [pc, #208]	; 25c40 <__flatcc_fb_gen_c_json_parser@@Base+0x2390>
   25b6c:	mov	r3, #96	; 0x60
   25b70:	ldr	r0, [r1]
   25b74:	str	r2, [sp]
   25b78:	ldr	r1, [pc, #68]	; 25bc4 <__flatcc_fb_gen_c_json_parser@@Base+0x2314>
   25b7c:	ldr	r2, [pc, #192]	; 25c44 <__flatcc_fb_gen_c_json_parser@@Base+0x2394>
   25b80:	bl	14094 <fprintf@plt>
   25b84:	ldr	r3, [pc, #188]	; 25c48 <__flatcc_fb_gen_c_json_parser@@Base+0x2398>
   25b88:	mov	r2, #96	; 0x60
   25b8c:	ldr	r1, [pc, #176]	; 25c44 <__flatcc_fb_gen_c_json_parser@@Base+0x2394>
   25b90:	ldr	r0, [pc, #56]	; 25bd0 <__flatcc_fb_gen_c_json_parser@@Base+0x2320>
   25b94:	bl	14148 <__assert_fail@plt>
   25b98:	strdeq	r4, [r4], -r8
   25b9c:	andeq	r4, r4, r4, lsl #7
   25ba0:	andeq	lr, r4, ip, asr #2
   25ba4:	andeq	r9, r5, r8, ror r0
   25ba8:	andeq	r9, r5, r0, asr #16
   25bac:			; <UNDEFINED> instruction: 0x000595b0
   25bb0:	ldrdeq	r9, [r5], -r4
   25bb4:	andeq	r9, r5, r0, ror r6
   25bb8:	andeq	r9, r5, ip, lsr #13
   25bbc:	andeq	pc, r6, r8, lsr #1
   25bc0:	strdeq	r9, [r5], -ip
   25bc4:	ldrdeq	r4, [r4], -ip
   25bc8:	muleq	r5, ip, r2
   25bcc:	strdeq	r9, [r5], -r0
   25bd0:	andeq	sp, r4, r4, ror r2
   25bd4:	strdeq	r4, [r4], -r0
   25bd8:	andeq	r4, r4, r8, ror r3
   25bdc:	andeq	r4, r4, r0, lsl #16
   25be0:	muleq	r4, r0, r3
   25be4:	ldrdeq	ip, [r5], -r0
   25be8:	muleq	r4, r8, r3
   25bec:	andeq	r4, r4, r8, ror #15
   25bf0:	andeq	r4, r4, ip, ror #6
   25bf4:	andeq	r4, r4, r8, asr #7
   25bf8:	andeq	r4, r4, r0, asr #7
   25bfc:	andeq	r4, r4, r8, lsl #16
   25c00:	andeq	r4, r4, r0, lsr #7
   25c04:	andeq	r4, r4, r0, lsl r8
   25c08:	andeq	r4, r4, r8, lsr #7
   25c0c:	andeq	r4, r4, r8, lsl r8
   25c10:			; <UNDEFINED> instruction: 0x000443b0
   25c14:	andeq	r4, r4, r0, lsr #16
   25c18:			; <UNDEFINED> instruction: 0x000443b8
   25c1c:	strdeq	r6, [r5], -r0
   25c20:	andeq	r9, r5, r8, lsl #17
   25c24:	andeq	r9, r5, r8, lsr r7
   25c28:	andeq	r9, r5, r0, asr #15
   25c2c:	andeq	r9, r5, ip, ror r7
   25c30:	andeq	r9, r5, r4, asr #11
   25c34:	andeq	r9, r5, ip, lsr #11
   25c38:	andeq	r9, r5, r4, lsl #16
   25c3c:	andeq	r9, r5, ip, lsl #12
   25c40:	andeq	r4, r4, r8, ror #9
   25c44:	muleq	r4, r0, r4
   25c48:	muleq	r5, r8, r0
   25c4c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   25c50:	sub	sp, sp, #492	; 0x1ec
   25c54:	mov	sl, r1
   25c58:	mov	r2, #220	; 0xdc
   25c5c:	mov	r1, #0
   25c60:	mov	r9, r0
   25c64:	add	r0, sp, #48	; 0x30
   25c68:	bl	140ac <memset@plt>
   25c6c:	mov	r2, #220	; 0xdc
   25c70:	mov	r1, #0
   25c74:	add	r0, sp, #268	; 0x10c
   25c78:	bl	140ac <memset@plt>
   25c7c:	add	r2, sp, #48	; 0x30
   25c80:	mov	r1, sl
   25c84:	ldr	r0, [sl, #12]
   25c88:	bl	170c4 <__flatcc_fb_scoped_symbol_name@@Base>
   25c8c:	ldr	r4, [sl, #96]	; 0x60
   25c90:	mov	r1, #4
   25c94:	mov	r0, r4
   25c98:	ldr	r5, [sl, #100]	; 0x64
   25c9c:	bl	13fa4 <calloc@plt>
   25ca0:	orrs	r3, r4, r5
   25ca4:	movne	r3, #1
   25ca8:	moveq	r3, #0
   25cac:	cmp	r0, #0
   25cb0:	movne	r3, #0
   25cb4:	andeq	r3, r3, #1
   25cb8:	cmp	r3, #0
   25cbc:	bne	26634 <__flatcc_fb_gen_c_json_parser@@Base+0x2d84>
   25cc0:	ldr	r3, [sl, #20]
   25cc4:	mov	r8, r0
   25cc8:	cmp	r3, #0
   25ccc:	beq	25ce4 <__flatcc_fb_gen_c_json_parser@@Base+0x2434>
   25cd0:	ldr	r2, [r3, #96]	; 0x60
   25cd4:	str	r3, [r8, r2, lsl #2]
   25cd8:	ldr	r3, [r3]
   25cdc:	cmp	r3, #0
   25ce0:	bne	25cd0 <__flatcc_fb_gen_c_json_parser@@Base+0x2420>
   25ce4:	ldr	r1, [pc, #2428]	; 26668 <__flatcc_fb_gen_c_json_parser@@Base+0x2db8>
   25ce8:	add	r2, sp, #48	; 0x30
   25cec:	ldr	r0, [r9]
   25cf0:	bl	14094 <fprintf@plt>
   25cf4:	ldrd	r0, [sl, #96]	; 0x60
   25cf8:	orrs	r3, r0, r1
   25cfc:	subne	r5, r8, #4
   25d00:	movne	r6, #0
   25d04:	movne	r7, #0
   25d08:	strne	sl, [sp, #44]	; 0x2c
   25d0c:	bne	25d28 <__flatcc_fb_gen_c_json_parser@@Base+0x2478>
   25d10:	b	25f48 <__flatcc_fb_gen_c_json_parser@@Base+0x2698>
   25d14:	adds	r6, r6, #1
   25d18:	adc	r7, r7, #0
   25d1c:	cmp	r7, r1
   25d20:	cmpeq	r6, r0
   25d24:	bcs	25f48 <__flatcc_fb_gen_c_json_parser@@Base+0x2698>
   25d28:	ldr	r4, [r5, #4]!
   25d2c:	cmp	r4, #0
   25d30:	beq	25d14 <__flatcc_fb_gen_c_json_parser@@Base+0x2464>
   25d34:	ldrh	r3, [r4, #72]	; 0x48
   25d38:	tst	r3, #4
   25d3c:	bne	25d14 <__flatcc_fb_gen_c_json_parser@@Base+0x2464>
   25d40:	ldr	r3, [r9]
   25d44:	mov	r2, #5
   25d48:	mov	r1, #1
   25d4c:	ldr	r0, [pc, #2328]	; 2666c <__flatcc_fb_gen_c_json_parser@@Base+0x2dbc>
   25d50:	bl	1401c <fwrite@plt>
   25d54:	ldrh	r3, [r4, #24]
   25d58:	sub	r3, r3, #7
   25d5c:	cmp	r3, #8
   25d60:	ldrls	pc, [pc, r3, lsl #2]
   25d64:	b	25f3c <__flatcc_fb_gen_c_json_parser@@Base+0x268c>
   25d68:	muleq	r2, ip, lr
   25d6c:	andeq	r5, r2, ip, asr lr
   25d70:	andeq	r5, r2, ip, lsr #28
   25d74:	strdeq	r5, [r2], -ip
   25d78:	andeq	r5, r2, ip, lsr pc
   25d7c:	andeq	r5, r2, ip, lsr pc
   25d80:	andeq	r5, r2, ip, lsr pc
   25d84:	andeq	r5, r2, r4, asr #27
   25d88:	andeq	r5, r2, ip, lsl #27
   25d8c:	ldr	r1, [r4, #16]
   25d90:	add	r2, sp, #268	; 0x10c
   25d94:	ldr	r0, [r1, #12]
   25d98:	bl	170c4 <__flatcc_fb_scoped_symbol_name@@Base>
   25d9c:	ldr	r2, [r4, #16]
   25da0:	ldrh	r3, [r2, #8]
   25da4:	cmp	r3, #4
   25da8:	ldrls	pc, [pc, r3, lsl #2]
   25dac:	b	261ac <__flatcc_fb_gen_c_json_parser@@Base+0x28fc>
   25db0:	andeq	r6, r2, r8, lsl r0
   25db4:	andeq	r5, r2, r8, lsl #30
   25db8:	andeq	r6, r2, ip, lsr #3
   25dbc:	andeq	r6, r2, r0, asr r0
   25dc0:	andeq	r6, r2, ip, lsl #1
   25dc4:	ldr	r1, [r4, #16]
   25dc8:	add	r2, sp, #268	; 0x10c
   25dcc:	ldr	r0, [r1, #12]
   25dd0:	bl	170c4 <__flatcc_fb_scoped_symbol_name@@Base>
   25dd4:	ldr	r2, [r4, #16]
   25dd8:	ldrh	r3, [r2, #8]
   25ddc:	cmp	r3, #4
   25de0:	ldrls	pc, [pc, r3, lsl #2]
   25de4:	b	26178 <__flatcc_fb_gen_c_json_parser@@Base+0x28c8>
   25de8:	andeq	r6, r2, r8, asr #1
   25dec:	andeq	r6, r2, r0, lsl #2
   25df0:	andeq	r6, r2, r8, ror r1
   25df4:	andeq	r6, r2, r8, lsr r1
   25df8:	ldrdeq	r5, [r2], -ip
   25dfc:	ldr	ip, [r4, #4]
   25e00:	ldrd	r2, [r4, #96]	; 0x60
   25e04:	ldr	r0, [r9]
   25e08:	ldr	r1, [ip, #4]
   25e0c:	str	r1, [sp, #8]
   25e10:	ldr	ip, [ip]
   25e14:	stm	sp, {r1, ip}
   25e18:	ldr	r1, [pc, #2128]	; 26670 <__flatcc_fb_gen_c_json_parser@@Base+0x2dc0>
   25e1c:	bl	14094 <fprintf@plt>
   25e20:	ldr	r3, [sp, #44]	; 0x2c
   25e24:	ldrd	r0, [r3, #96]	; 0x60
   25e28:	b	25d14 <__flatcc_fb_gen_c_json_parser@@Base+0x2464>
   25e2c:	ldr	ip, [r4, #4]
   25e30:	ldrd	r2, [r4, #96]	; 0x60
   25e34:	ldr	r0, [r9]
   25e38:	ldr	r1, [ip, #4]
   25e3c:	str	r1, [sp, #8]
   25e40:	ldr	ip, [ip]
   25e44:	stm	sp, {r1, ip}
   25e48:	ldr	r1, [pc, #2084]	; 26674 <__flatcc_fb_gen_c_json_parser@@Base+0x2dc4>
   25e4c:	bl	14094 <fprintf@plt>
   25e50:	ldr	r3, [sp, #44]	; 0x2c
   25e54:	ldrd	r0, [r3, #96]	; 0x60
   25e58:	b	25d14 <__flatcc_fb_gen_c_json_parser@@Base+0x2464>
   25e5c:	ldr	r3, [r4, #16]
   25e60:	sub	r3, r3, #1
   25e64:	cmp	r3, #10
   25e68:	ldrls	pc, [pc, r3, lsl #2]
   25e6c:	b	2639c <__flatcc_fb_gen_c_json_parser@@Base+0x2aec>
   25e70:	andeq	r6, r2, r8, lsr r3
   25e74:	andeq	r6, r2, r0, lsr #4
   25e78:	andeq	r6, r2, r0, asr #6
   25e7c:	andeq	r6, r2, r8, lsl r3
   25e80:	andeq	r6, r2, r0, lsr #6
   25e84:	andeq	r6, r2, r8, lsr #6
   25e88:	andeq	r6, r2, r0, lsr r3
   25e8c:	andeq	r6, r2, r8, asr #6
   25e90:	andeq	r6, r2, r0, asr r3
   25e94:	andeq	r6, r2, r8, asr r3
   25e98:	andeq	r6, r2, r0, ror #6
   25e9c:	ldrh	r3, [r4, #72]	; 0x48
   25ea0:	tst	r3, #3072	; 0xc00
   25ea4:	bne	25f8c <__flatcc_fb_gen_c_json_parser@@Base+0x26dc>
   25ea8:	ldr	r1, [r4, #104]	; 0x68
   25eac:	cmp	r1, #0
   25eb0:	beq	261e0 <__flatcc_fb_gen_c_json_parser@@Base+0x2930>
   25eb4:	ldr	r0, [r1, #12]
   25eb8:	add	r2, sp, #268	; 0x10c
   25ebc:	bl	170c4 <__flatcc_fb_scoped_symbol_name@@Base>
   25ec0:	ldr	r3, [r4, #104]	; 0x68
   25ec4:	ldr	ip, [r4, #4]
   25ec8:	add	lr, sp, #268	; 0x10c
   25ecc:	ldrh	r3, [r3, #8]
   25ed0:	ldr	r1, [ip, #4]
   25ed4:	ldr	r0, [r9]
   25ed8:	cmp	r3, #0
   25edc:	ldrd	r2, [r4, #96]	; 0x60
   25ee0:	str	r1, [sp, #8]
   25ee4:	str	lr, [sp, #12]
   25ee8:	ldr	ip, [ip]
   25eec:	stm	sp, {r1, ip}
   25ef0:	ldreq	r1, [pc, #1920]	; 26678 <__flatcc_fb_gen_c_json_parser@@Base+0x2dc8>
   25ef4:	ldrne	r1, [pc, #1920]	; 2667c <__flatcc_fb_gen_c_json_parser@@Base+0x2dcc>
   25ef8:	bl	14094 <fprintf@plt>
   25efc:	ldr	r3, [sp, #44]	; 0x2c
   25f00:	ldrd	r0, [r3, #96]	; 0x60
   25f04:	b	25d14 <__flatcc_fb_gen_c_json_parser@@Base+0x2464>
   25f08:	ldr	ip, [r4, #4]
   25f0c:	add	lr, sp, #268	; 0x10c
   25f10:	ldrd	r2, [r4, #96]	; 0x60
   25f14:	ldr	r1, [ip, #4]
   25f18:	ldr	r0, [r9]
   25f1c:	str	lr, [sp, #24]
   25f20:	ldrd	sl, [r4, #88]	; 0x58
   25f24:	str	r1, [sp, #8]
   25f28:	strd	sl, [sp, #16]
   25f2c:	ldr	ip, [ip]
   25f30:	stm	sp, {r1, ip}
   25f34:	ldr	r1, [pc, #1860]	; 26680 <__flatcc_fb_gen_c_json_parser@@Base+0x2dd0>
   25f38:	bl	14094 <fprintf@plt>
   25f3c:	ldr	r3, [sp, #44]	; 0x2c
   25f40:	ldrd	r0, [r3, #96]	; 0x60
   25f44:	b	25d14 <__flatcc_fb_gen_c_json_parser@@Base+0x2464>
   25f48:	ldr	r3, [r9]
   25f4c:	mov	r2, #4
   25f50:	mov	r1, #1
   25f54:	ldr	r0, [pc, #1832]	; 26684 <__flatcc_fb_gen_c_json_parser@@Base+0x2dd4>
   25f58:	bl	1401c <fwrite@plt>
   25f5c:	add	r3, sp, #48	; 0x30
   25f60:	mov	r2, r3
   25f64:	ldr	r0, [r9]
   25f68:	ldr	r1, [pc, #1816]	; 26688 <__flatcc_fb_gen_c_json_parser@@Base+0x2dd8>
   25f6c:	bl	14094 <fprintf@plt>
   25f70:	cmp	r8, #0
   25f74:	beq	25f80 <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   25f78:	mov	r0, r8
   25f7c:	bl	13fd4 <free@plt>
   25f80:	mov	r0, #0
   25f84:	add	sp, sp, #492	; 0x1ec
   25f88:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   25f8c:	ldr	r2, [r4, #4]
   25f90:	lsr	r3, r3, #10
   25f94:	eor	r3, r3, #1
   25f98:	ldr	ip, [r2, #4]
   25f9c:	ldrd	r0, [r4, #96]	; 0x60
   25fa0:	and	r3, r3, #1
   25fa4:	str	r3, [sp, #12]
   25fa8:	str	ip, [sp, #8]
   25fac:	ldr	lr, [r9]
   25fb0:	ldr	r4, [r2]
   25fb4:	mov	r3, r1
   25fb8:	mov	r2, r0
   25fbc:	ldr	r1, [pc, #1736]	; 2668c <__flatcc_fb_gen_c_json_parser@@Base+0x2ddc>
   25fc0:	str	r4, [sp, #4]
   25fc4:	str	ip, [sp]
   25fc8:	mov	r0, lr
   25fcc:	bl	14094 <fprintf@plt>
   25fd0:	ldr	r3, [sp, #44]	; 0x2c
   25fd4:	ldrd	r0, [r3, #96]	; 0x60
   25fd8:	b	25d14 <__flatcc_fb_gen_c_json_parser@@Base+0x2464>
   25fdc:	ldr	ip, [r4, #4]
   25fe0:	add	lr, sp, #268	; 0x10c
   25fe4:	ldrd	r2, [r4, #96]	; 0x60
   25fe8:	ldr	r1, [ip, #4]
   25fec:	ldr	r0, [r9]
   25ff0:	str	r1, [sp, #8]
   25ff4:	str	lr, [sp, #16]
   25ff8:	str	lr, [sp, #12]
   25ffc:	ldr	ip, [ip]
   26000:	stm	sp, {r1, ip}
   26004:	ldr	r1, [pc, #1668]	; 26690 <__flatcc_fb_gen_c_json_parser@@Base+0x2de0>
   26008:	bl	14094 <fprintf@plt>
   2600c:	ldr	r3, [sp, #44]	; 0x2c
   26010:	ldrd	r0, [r3, #96]	; 0x60
   26014:	b	25d14 <__flatcc_fb_gen_c_json_parser@@Base+0x2464>
   26018:	ldr	ip, [r4, #4]
   2601c:	add	lr, sp, #268	; 0x10c
   26020:	ldrd	r2, [r4, #96]	; 0x60
   26024:	ldr	r1, [ip, #4]
   26028:	ldr	r0, [r9]
   2602c:	str	r1, [sp, #8]
   26030:	str	lr, [sp, #12]
   26034:	ldr	ip, [ip]
   26038:	stm	sp, {r1, ip}
   2603c:	ldr	r1, [pc, #1616]	; 26694 <__flatcc_fb_gen_c_json_parser@@Base+0x2de4>
   26040:	bl	14094 <fprintf@plt>
   26044:	ldr	r3, [sp, #44]	; 0x2c
   26048:	ldrd	r0, [r3, #96]	; 0x60
   2604c:	b	25d14 <__flatcc_fb_gen_c_json_parser@@Base+0x2464>
   26050:	sub	r2, r2, #1
   26054:	cmp	r2, #10
   26058:	ldrls	pc, [pc, r2, lsl #2]
   2605c:	b	2639c <__flatcc_fb_gen_c_json_parser@@Base+0x2aec>
   26060:	andeq	r6, r2, r4, lsr #10
   26064:	andeq	r6, r2, ip, lsl r5
   26068:	andeq	r6, r2, r4, lsl r5
   2606c:	andeq	r6, r2, ip, lsl #10
   26070:	andeq	r6, r2, r4, lsl #10
   26074:	strdeq	r6, [r2], -ip
   26078:	strdeq	r6, [r2], -r4
   2607c:	andeq	r6, r2, ip, ror #9
   26080:	andeq	r6, r2, r4, ror #9
   26084:	ldrdeq	r6, [r2], -ip
   26088:	andeq	r6, r2, r4, lsl #9
   2608c:	ldr	ip, [r4, #4]
   26090:	add	lr, sp, #268	; 0x10c
   26094:	ldrd	r2, [r4, #96]	; 0x60
   26098:	ldr	r1, [ip, #4]
   2609c:	ldr	r0, [r9]
   260a0:	str	r1, [sp, #8]
   260a4:	str	lr, [sp, #16]
   260a8:	str	lr, [sp, #12]
   260ac:	ldr	ip, [ip]
   260b0:	stm	sp, {r1, ip}
   260b4:	ldr	r1, [pc, #1500]	; 26698 <__flatcc_fb_gen_c_json_parser@@Base+0x2de8>
   260b8:	bl	14094 <fprintf@plt>
   260bc:	ldr	r3, [sp, #44]	; 0x2c
   260c0:	ldrd	r0, [r3, #96]	; 0x60
   260c4:	b	25d14 <__flatcc_fb_gen_c_json_parser@@Base+0x2464>
   260c8:	ldr	ip, [r4, #4]
   260cc:	add	lr, sp, #268	; 0x10c
   260d0:	ldrd	r2, [r4, #96]	; 0x60
   260d4:	ldr	r1, [ip, #4]
   260d8:	ldr	r0, [r9]
   260dc:	str	r1, [sp, #8]
   260e0:	str	lr, [sp, #12]
   260e4:	ldr	ip, [ip]
   260e8:	stm	sp, {r1, ip}
   260ec:	ldr	r1, [pc, #1448]	; 2669c <__flatcc_fb_gen_c_json_parser@@Base+0x2dec>
   260f0:	bl	14094 <fprintf@plt>
   260f4:	ldr	r3, [sp, #44]	; 0x2c
   260f8:	ldrd	r0, [r3, #96]	; 0x60
   260fc:	b	25d14 <__flatcc_fb_gen_c_json_parser@@Base+0x2464>
   26100:	ldr	ip, [r4, #4]
   26104:	add	lr, sp, #268	; 0x10c
   26108:	ldrd	r2, [r4, #96]	; 0x60
   2610c:	ldr	r1, [ip, #4]
   26110:	ldr	r0, [r9]
   26114:	str	r1, [sp, #8]
   26118:	str	lr, [sp, #12]
   2611c:	ldr	ip, [ip]
   26120:	stm	sp, {r1, ip}
   26124:	ldr	r1, [pc, #1396]	; 266a0 <__flatcc_fb_gen_c_json_parser@@Base+0x2df0>
   26128:	bl	14094 <fprintf@plt>
   2612c:	ldr	r3, [sp, #44]	; 0x2c
   26130:	ldrd	r0, [r3, #96]	; 0x60
   26134:	b	25d14 <__flatcc_fb_gen_c_json_parser@@Base+0x2464>
   26138:	ldr	r3, [r2, #40]	; 0x28
   2613c:	sub	r3, r3, #1
   26140:	cmp	r3, #10
   26144:	ldrls	pc, [pc, r3, lsl #2]
   26148:	b	2639c <__flatcc_fb_gen_c_json_parser@@Base+0x2aec>
   2614c:	andeq	r6, r2, ip, ror r4
   26150:	andeq	r6, r2, r4, ror r4
   26154:	andeq	r6, r2, ip, ror #8
   26158:	andeq	r6, r2, r4, ror #8
   2615c:	andeq	r6, r2, ip, asr r4
   26160:	andeq	r6, r2, r4, asr r4
   26164:	andeq	r6, r2, ip, asr #8
   26168:	andeq	r6, r2, r4, asr #8
   2616c:	andeq	r6, r2, ip, lsr r4
   26170:	andeq	r6, r2, r4, lsr r4
   26174:	ldrdeq	r6, [r2], -r0
   26178:	ldr	r1, [pc, #1316]	; 266a4 <__flatcc_fb_gen_c_json_parser@@Base+0x2df4>
   2617c:	ldr	r2, [pc, #1316]	; 266a8 <__flatcc_fb_gen_c_json_parser@@Base+0x2df8>
   26180:	mov	r3, #504	; 0x1f8
   26184:	ldr	r0, [r1]
   26188:	str	r2, [sp]
   2618c:	ldr	r1, [pc, #1304]	; 266ac <__flatcc_fb_gen_c_json_parser@@Base+0x2dfc>
   26190:	ldr	r2, [pc, #1304]	; 266b0 <__flatcc_fb_gen_c_json_parser@@Base+0x2e00>
   26194:	bl	14094 <fprintf@plt>
   26198:	ldr	r3, [pc, #1300]	; 266b4 <__flatcc_fb_gen_c_json_parser@@Base+0x2e04>
   2619c:	mov	r2, #504	; 0x1f8
   261a0:	ldr	r1, [pc, #1288]	; 266b0 <__flatcc_fb_gen_c_json_parser@@Base+0x2e00>
   261a4:	ldr	r0, [pc, #1292]	; 266b8 <__flatcc_fb_gen_c_json_parser@@Base+0x2e08>
   261a8:	bl	14148 <__assert_fail@plt>
   261ac:	ldr	r1, [pc, #1264]	; 266a4 <__flatcc_fb_gen_c_json_parser@@Base+0x2df4>
   261b0:	ldr	r2, [pc, #1284]	; 266bc <__flatcc_fb_gen_c_json_parser@@Base+0x2e0c>
   261b4:	ldr	r3, [pc, #1284]	; 266c0 <__flatcc_fb_gen_c_json_parser@@Base+0x2e10>
   261b8:	ldr	r0, [r1]
   261bc:	str	r2, [sp]
   261c0:	ldr	r1, [pc, #1252]	; 266ac <__flatcc_fb_gen_c_json_parser@@Base+0x2dfc>
   261c4:	ldr	r2, [pc, #1252]	; 266b0 <__flatcc_fb_gen_c_json_parser@@Base+0x2e00>
   261c8:	bl	14094 <fprintf@plt>
   261cc:	ldr	r3, [pc, #1248]	; 266b4 <__flatcc_fb_gen_c_json_parser@@Base+0x2e04>
   261d0:	ldr	r2, [pc, #1256]	; 266c0 <__flatcc_fb_gen_c_json_parser@@Base+0x2e10>
   261d4:	ldr	r1, [pc, #1236]	; 266b0 <__flatcc_fb_gen_c_json_parser@@Base+0x2e00>
   261d8:	ldr	r0, [pc, #1240]	; 266b8 <__flatcc_fb_gen_c_json_parser@@Base+0x2e08>
   261dc:	bl	14148 <__assert_fail@plt>
   261e0:	ldr	r3, [r4, #16]
   261e4:	sub	r3, r3, #1
   261e8:	cmp	r3, #10
   261ec:	ldrls	pc, [pc, r3, lsl #2]
   261f0:	b	2639c <__flatcc_fb_gen_c_json_parser@@Base+0x2aec>
   261f4:			; <UNDEFINED> instruction: 0x000265b0
   261f8:	andeq	r6, r2, r8, lsr #11
   261fc:	andeq	r6, r2, r0, lsr #11
   26200:	muleq	r2, r8, r5
   26204:	muleq	r2, r0, r5
   26208:	andeq	r6, r2, r8, lsl #11
   2620c:	andeq	r6, r2, r0, lsl #11
   26210:	andeq	r6, r2, r8, ror r5
   26214:	andeq	r6, r2, r0, ror r5
   26218:	andeq	r6, r2, r8, ror #10
   2621c:	andeq	r6, r2, ip, lsr #10
   26220:	ldr	r2, [pc, #1180]	; 266c4 <__flatcc_fb_gen_c_json_parser@@Base+0x2e14>
   26224:	ldrh	r3, [r4, #56]	; 0x38
   26228:	sub	r3, r3, #3
   2622c:	cmp	r3, #3
   26230:	ldrls	pc, [pc, r3, lsl #2]
   26234:	b	26368 <__flatcc_fb_gen_c_json_parser@@Base+0x2ab8>
   26238:	ldrdeq	r6, [r2], -r8
   2623c:	muleq	r2, r0, r2
   26240:	andeq	r6, r2, r8, asr #4
   26244:	andeq	r6, r2, r8, asr #4
   26248:	ldr	ip, [r4, #4]
   2624c:	ldrd	r0, [r4, #48]	; 0x30
   26250:	ldr	r3, [ip, #4]
   26254:	strd	r0, [sp, #24]
   26258:	str	r3, [sp, #16]
   2625c:	ldr	r1, [ip]
   26260:	str	r3, [sp, #8]
   26264:	str	r1, [sp, #12]
   26268:	ldrd	r0, [r4, #96]	; 0x60
   2626c:	mov	sl, r0
   26270:	mov	fp, r1
   26274:	ldr	r0, [r9]
   26278:	ldr	r1, [pc, #1096]	; 266c8 <__flatcc_fb_gen_c_json_parser@@Base+0x2e18>
   2627c:	strd	sl, [sp]
   26280:	bl	14094 <fprintf@plt>
   26284:	ldr	r3, [sp, #44]	; 0x2c
   26288:	ldrd	r0, [r3, #96]	; 0x60
   2628c:	b	25d14 <__flatcc_fb_gen_c_json_parser@@Base+0x2464>
   26290:	ldr	ip, [r4, #4]
   26294:	ldrd	r0, [r4, #48]	; 0x30
   26298:	ldr	r3, [ip, #4]
   2629c:	strd	r0, [sp, #24]
   262a0:	str	r3, [sp, #16]
   262a4:	ldr	r1, [ip]
   262a8:	str	r3, [sp, #8]
   262ac:	str	r1, [sp, #12]
   262b0:	ldrd	r0, [r4, #96]	; 0x60
   262b4:	mov	sl, r0
   262b8:	mov	fp, r1
   262bc:	ldr	r0, [r9]
   262c0:	ldr	r1, [pc, #1028]	; 266cc <__flatcc_fb_gen_c_json_parser@@Base+0x2e1c>
   262c4:	strd	sl, [sp]
   262c8:	bl	14094 <fprintf@plt>
   262cc:	ldr	r3, [sp, #44]	; 0x2c
   262d0:	ldrd	r0, [r3, #96]	; 0x60
   262d4:	b	25d14 <__flatcc_fb_gen_c_json_parser@@Base+0x2464>
   262d8:	vldr	d7, [r4, #48]	; 0x30
   262dc:	ldr	ip, [r4, #4]
   262e0:	ldr	r0, [r9]
   262e4:	ldr	r1, [pc, #996]	; 266d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2e20>
   262e8:	ldr	r3, [ip, #4]
   262ec:	vstr	d7, [sp, #24]
   262f0:	str	r3, [sp, #16]
   262f4:	ldr	ip, [ip]
   262f8:	str	r3, [sp, #8]
   262fc:	str	ip, [sp, #12]
   26300:	ldrd	sl, [r4, #96]	; 0x60
   26304:	strd	sl, [sp]
   26308:	bl	14094 <fprintf@plt>
   2630c:	ldr	r3, [sp, #44]	; 0x2c
   26310:	ldrd	r0, [r3, #96]	; 0x60
   26314:	b	25d14 <__flatcc_fb_gen_c_json_parser@@Base+0x2464>
   26318:	ldr	r2, [pc, #948]	; 266d4 <__flatcc_fb_gen_c_json_parser@@Base+0x2e24>
   2631c:	b	26224 <__flatcc_fb_gen_c_json_parser@@Base+0x2974>
   26320:	ldr	r2, [pc, #944]	; 266d8 <__flatcc_fb_gen_c_json_parser@@Base+0x2e28>
   26324:	b	26224 <__flatcc_fb_gen_c_json_parser@@Base+0x2974>
   26328:	ldr	r2, [pc, #940]	; 266dc <__flatcc_fb_gen_c_json_parser@@Base+0x2e2c>
   2632c:	b	26224 <__flatcc_fb_gen_c_json_parser@@Base+0x2974>
   26330:	ldr	r2, [pc, #936]	; 266e0 <__flatcc_fb_gen_c_json_parser@@Base+0x2e30>
   26334:	b	26224 <__flatcc_fb_gen_c_json_parser@@Base+0x2974>
   26338:	ldr	r2, [pc, #932]	; 266e4 <__flatcc_fb_gen_c_json_parser@@Base+0x2e34>
   2633c:	b	26224 <__flatcc_fb_gen_c_json_parser@@Base+0x2974>
   26340:	ldr	r2, [pc, #928]	; 266e8 <__flatcc_fb_gen_c_json_parser@@Base+0x2e38>
   26344:	b	26224 <__flatcc_fb_gen_c_json_parser@@Base+0x2974>
   26348:	ldr	r2, [pc, #924]	; 266ec <__flatcc_fb_gen_c_json_parser@@Base+0x2e3c>
   2634c:	b	26224 <__flatcc_fb_gen_c_json_parser@@Base+0x2974>
   26350:	ldr	r2, [pc, #920]	; 266f0 <__flatcc_fb_gen_c_json_parser@@Base+0x2e40>
   26354:	b	26224 <__flatcc_fb_gen_c_json_parser@@Base+0x2974>
   26358:	ldr	r2, [pc, #916]	; 266f4 <__flatcc_fb_gen_c_json_parser@@Base+0x2e44>
   2635c:	b	26224 <__flatcc_fb_gen_c_json_parser@@Base+0x2974>
   26360:	ldr	r2, [pc, #912]	; 266f8 <__flatcc_fb_gen_c_json_parser@@Base+0x2e48>
   26364:	b	26224 <__flatcc_fb_gen_c_json_parser@@Base+0x2974>
   26368:	ldr	r1, [pc, #820]	; 266a4 <__flatcc_fb_gen_c_json_parser@@Base+0x2df4>
   2636c:	ldr	r2, [pc, #904]	; 266fc <__flatcc_fb_gen_c_json_parser@@Base+0x2e4c>
   26370:	ldr	r3, [pc, #904]	; 26700 <__flatcc_fb_gen_c_json_parser@@Base+0x2e50>
   26374:	ldr	r0, [r1]
   26378:	str	r2, [sp]
   2637c:	ldr	r1, [pc, #808]	; 266ac <__flatcc_fb_gen_c_json_parser@@Base+0x2dfc>
   26380:	ldr	r2, [pc, #808]	; 266b0 <__flatcc_fb_gen_c_json_parser@@Base+0x2e00>
   26384:	bl	14094 <fprintf@plt>
   26388:	ldr	r3, [pc, #804]	; 266b4 <__flatcc_fb_gen_c_json_parser@@Base+0x2e04>
   2638c:	ldr	r2, [pc, #876]	; 26700 <__flatcc_fb_gen_c_json_parser@@Base+0x2e50>
   26390:	ldr	r1, [pc, #792]	; 266b0 <__flatcc_fb_gen_c_json_parser@@Base+0x2e00>
   26394:	ldr	r0, [pc, #796]	; 266b8 <__flatcc_fb_gen_c_json_parser@@Base+0x2e08>
   26398:	bl	14148 <__assert_fail@plt>
   2639c:	ldr	r1, [pc, #768]	; 266a4 <__flatcc_fb_gen_c_json_parser@@Base+0x2df4>
   263a0:	ldr	r2, [pc, #860]	; 26704 <__flatcc_fb_gen_c_json_parser@@Base+0x2e54>
   263a4:	mov	r3, #96	; 0x60
   263a8:	ldr	r0, [r1]
   263ac:	str	r2, [sp]
   263b0:	ldr	r1, [pc, #756]	; 266ac <__flatcc_fb_gen_c_json_parser@@Base+0x2dfc>
   263b4:	ldr	r2, [pc, #844]	; 26708 <__flatcc_fb_gen_c_json_parser@@Base+0x2e58>
   263b8:	bl	14094 <fprintf@plt>
   263bc:	ldr	r3, [pc, #840]	; 2670c <__flatcc_fb_gen_c_json_parser@@Base+0x2e5c>
   263c0:	mov	r2, #96	; 0x60
   263c4:	ldr	r1, [pc, #828]	; 26708 <__flatcc_fb_gen_c_json_parser@@Base+0x2e58>
   263c8:	ldr	r0, [pc, #744]	; 266b8 <__flatcc_fb_gen_c_json_parser@@Base+0x2e08>
   263cc:	bl	14148 <__assert_fail@plt>
   263d0:	ldr	r2, [pc, #800]	; 266f8 <__flatcc_fb_gen_c_json_parser@@Base+0x2e48>
   263d4:	ldrh	r3, [r4, #56]	; 0x38
   263d8:	cmp	r3, #4
   263dc:	beq	265ec <__flatcc_fb_gen_c_json_parser@@Base+0x2d3c>
   263e0:	bcc	265b8 <__flatcc_fb_gen_c_json_parser@@Base+0x2d08>
   263e4:	cmp	r3, #6
   263e8:	bhi	265b8 <__flatcc_fb_gen_c_json_parser@@Base+0x2d08>
   263ec:	ldr	r1, [r4, #4]
   263f0:	add	ip, sp, #268	; 0x10c
   263f4:	ldr	r0, [r9]
   263f8:	ldr	r3, [r1, #4]
   263fc:	str	ip, [sp, #32]
   26400:	ldrd	sl, [r4, #48]	; 0x30
   26404:	str	r3, [sp, #16]
   26408:	strd	sl, [sp, #24]
   2640c:	ldr	r1, [r1]
   26410:	str	r3, [sp, #8]
   26414:	str	r1, [sp, #12]
   26418:	ldrd	sl, [r4, #96]	; 0x60
   2641c:	ldr	r1, [pc, #748]	; 26710 <__flatcc_fb_gen_c_json_parser@@Base+0x2e60>
   26420:	strd	sl, [sp]
   26424:	bl	14094 <fprintf@plt>
   26428:	ldr	r3, [sp, #44]	; 0x2c
   2642c:	ldrd	r0, [r3, #96]	; 0x60
   26430:	b	25d14 <__flatcc_fb_gen_c_json_parser@@Base+0x2464>
   26434:	ldr	r2, [pc, #696]	; 266f4 <__flatcc_fb_gen_c_json_parser@@Base+0x2e44>
   26438:	b	263d4 <__flatcc_fb_gen_c_json_parser@@Base+0x2b24>
   2643c:	ldr	r2, [pc, #684]	; 266f0 <__flatcc_fb_gen_c_json_parser@@Base+0x2e40>
   26440:	b	263d4 <__flatcc_fb_gen_c_json_parser@@Base+0x2b24>
   26444:	ldr	r2, [pc, #672]	; 266ec <__flatcc_fb_gen_c_json_parser@@Base+0x2e3c>
   26448:	b	263d4 <__flatcc_fb_gen_c_json_parser@@Base+0x2b24>
   2644c:	ldr	r2, [pc, #652]	; 266e0 <__flatcc_fb_gen_c_json_parser@@Base+0x2e30>
   26450:	b	263d4 <__flatcc_fb_gen_c_json_parser@@Base+0x2b24>
   26454:	ldr	r2, [pc, #640]	; 266dc <__flatcc_fb_gen_c_json_parser@@Base+0x2e2c>
   26458:	b	263d4 <__flatcc_fb_gen_c_json_parser@@Base+0x2b24>
   2645c:	ldr	r2, [pc, #628]	; 266d8 <__flatcc_fb_gen_c_json_parser@@Base+0x2e28>
   26460:	b	263d4 <__flatcc_fb_gen_c_json_parser@@Base+0x2b24>
   26464:	ldr	r2, [pc, #616]	; 266d4 <__flatcc_fb_gen_c_json_parser@@Base+0x2e24>
   26468:	b	263d4 <__flatcc_fb_gen_c_json_parser@@Base+0x2b24>
   2646c:	ldr	r2, [pc, #628]	; 266e8 <__flatcc_fb_gen_c_json_parser@@Base+0x2e38>
   26470:	b	263d4 <__flatcc_fb_gen_c_json_parser@@Base+0x2b24>
   26474:	ldr	r2, [pc, #584]	; 266c4 <__flatcc_fb_gen_c_json_parser@@Base+0x2e14>
   26478:	b	263d4 <__flatcc_fb_gen_c_json_parser@@Base+0x2b24>
   2647c:	ldr	r2, [pc, #608]	; 266e4 <__flatcc_fb_gen_c_json_parser@@Base+0x2e34>
   26480:	b	263d4 <__flatcc_fb_gen_c_json_parser@@Base+0x2b24>
   26484:	ldr	r2, [pc, #620]	; 266f8 <__flatcc_fb_gen_c_json_parser@@Base+0x2e48>
   26488:	ldr	r3, [sp, #44]	; 0x2c
   2648c:	ldr	ip, [r4, #4]
   26490:	add	lr, sp, #268	; 0x10c
   26494:	ldrd	r0, [r3, #112]	; 0x70
   26498:	ldr	r3, [ip, #4]
   2649c:	str	lr, [sp, #32]
   264a0:	str	r3, [sp, #16]
   264a4:	strd	r0, [sp, #24]
   264a8:	ldr	r1, [ip]
   264ac:	str	r3, [sp, #8]
   264b0:	str	r1, [sp, #12]
   264b4:	ldrd	r0, [r4, #96]	; 0x60
   264b8:	mov	sl, r0
   264bc:	mov	fp, r1
   264c0:	ldr	r0, [r9]
   264c4:	ldr	r1, [pc, #584]	; 26714 <__flatcc_fb_gen_c_json_parser@@Base+0x2e64>
   264c8:	strd	sl, [sp]
   264cc:	bl	14094 <fprintf@plt>
   264d0:	ldr	r3, [sp, #44]	; 0x2c
   264d4:	ldrd	r0, [r3, #96]	; 0x60
   264d8:	b	25d14 <__flatcc_fb_gen_c_json_parser@@Base+0x2464>
   264dc:	ldr	r2, [pc, #528]	; 266f4 <__flatcc_fb_gen_c_json_parser@@Base+0x2e44>
   264e0:	b	26488 <__flatcc_fb_gen_c_json_parser@@Base+0x2bd8>
   264e4:	ldr	r2, [pc, #516]	; 266f0 <__flatcc_fb_gen_c_json_parser@@Base+0x2e40>
   264e8:	b	26488 <__flatcc_fb_gen_c_json_parser@@Base+0x2bd8>
   264ec:	ldr	r2, [pc, #504]	; 266ec <__flatcc_fb_gen_c_json_parser@@Base+0x2e3c>
   264f0:	b	26488 <__flatcc_fb_gen_c_json_parser@@Base+0x2bd8>
   264f4:	ldr	r2, [pc, #484]	; 266e0 <__flatcc_fb_gen_c_json_parser@@Base+0x2e30>
   264f8:	b	26488 <__flatcc_fb_gen_c_json_parser@@Base+0x2bd8>
   264fc:	ldr	r2, [pc, #472]	; 266dc <__flatcc_fb_gen_c_json_parser@@Base+0x2e2c>
   26500:	b	26488 <__flatcc_fb_gen_c_json_parser@@Base+0x2bd8>
   26504:	ldr	r2, [pc, #460]	; 266d8 <__flatcc_fb_gen_c_json_parser@@Base+0x2e28>
   26508:	b	26488 <__flatcc_fb_gen_c_json_parser@@Base+0x2bd8>
   2650c:	ldr	r2, [pc, #448]	; 266d4 <__flatcc_fb_gen_c_json_parser@@Base+0x2e24>
   26510:	b	26488 <__flatcc_fb_gen_c_json_parser@@Base+0x2bd8>
   26514:	ldr	r2, [pc, #460]	; 266e8 <__flatcc_fb_gen_c_json_parser@@Base+0x2e38>
   26518:	b	26488 <__flatcc_fb_gen_c_json_parser@@Base+0x2bd8>
   2651c:	ldr	r2, [pc, #416]	; 266c4 <__flatcc_fb_gen_c_json_parser@@Base+0x2e14>
   26520:	b	26488 <__flatcc_fb_gen_c_json_parser@@Base+0x2bd8>
   26524:	ldr	r2, [pc, #440]	; 266e4 <__flatcc_fb_gen_c_json_parser@@Base+0x2e34>
   26528:	b	26488 <__flatcc_fb_gen_c_json_parser@@Base+0x2bd8>
   2652c:	ldr	r2, [pc, #452]	; 266f8 <__flatcc_fb_gen_c_json_parser@@Base+0x2e48>
   26530:	ldr	r1, [r4, #4]
   26534:	ldr	r0, [r9]
   26538:	ldr	r3, [r1, #4]
   2653c:	str	r3, [sp, #16]
   26540:	ldr	r1, [r1]
   26544:	str	r3, [sp, #8]
   26548:	str	r1, [sp, #12]
   2654c:	ldrd	sl, [r4, #96]	; 0x60
   26550:	ldr	r1, [pc, #448]	; 26718 <__flatcc_fb_gen_c_json_parser@@Base+0x2e68>
   26554:	strd	sl, [sp]
   26558:	bl	14094 <fprintf@plt>
   2655c:	ldr	r3, [sp, #44]	; 0x2c
   26560:	ldrd	r0, [r3, #96]	; 0x60
   26564:	b	25d14 <__flatcc_fb_gen_c_json_parser@@Base+0x2464>
   26568:	ldr	r2, [pc, #388]	; 266f4 <__flatcc_fb_gen_c_json_parser@@Base+0x2e44>
   2656c:	b	26530 <__flatcc_fb_gen_c_json_parser@@Base+0x2c80>
   26570:	ldr	r2, [pc, #376]	; 266f0 <__flatcc_fb_gen_c_json_parser@@Base+0x2e40>
   26574:	b	26530 <__flatcc_fb_gen_c_json_parser@@Base+0x2c80>
   26578:	ldr	r2, [pc, #364]	; 266ec <__flatcc_fb_gen_c_json_parser@@Base+0x2e3c>
   2657c:	b	26530 <__flatcc_fb_gen_c_json_parser@@Base+0x2c80>
   26580:	ldr	r2, [pc, #344]	; 266e0 <__flatcc_fb_gen_c_json_parser@@Base+0x2e30>
   26584:	b	26530 <__flatcc_fb_gen_c_json_parser@@Base+0x2c80>
   26588:	ldr	r2, [pc, #332]	; 266dc <__flatcc_fb_gen_c_json_parser@@Base+0x2e2c>
   2658c:	b	26530 <__flatcc_fb_gen_c_json_parser@@Base+0x2c80>
   26590:	ldr	r2, [pc, #320]	; 266d8 <__flatcc_fb_gen_c_json_parser@@Base+0x2e28>
   26594:	b	26530 <__flatcc_fb_gen_c_json_parser@@Base+0x2c80>
   26598:	ldr	r2, [pc, #308]	; 266d4 <__flatcc_fb_gen_c_json_parser@@Base+0x2e24>
   2659c:	b	26530 <__flatcc_fb_gen_c_json_parser@@Base+0x2c80>
   265a0:	ldr	r2, [pc, #320]	; 266e8 <__flatcc_fb_gen_c_json_parser@@Base+0x2e38>
   265a4:	b	26530 <__flatcc_fb_gen_c_json_parser@@Base+0x2c80>
   265a8:	ldr	r2, [pc, #276]	; 266c4 <__flatcc_fb_gen_c_json_parser@@Base+0x2e14>
   265ac:	b	26530 <__flatcc_fb_gen_c_json_parser@@Base+0x2c80>
   265b0:	ldr	r2, [pc, #300]	; 266e4 <__flatcc_fb_gen_c_json_parser@@Base+0x2e34>
   265b4:	b	26530 <__flatcc_fb_gen_c_json_parser@@Base+0x2c80>
   265b8:	ldr	r1, [pc, #228]	; 266a4 <__flatcc_fb_gen_c_json_parser@@Base+0x2df4>
   265bc:	ldr	r2, [pc, #344]	; 2671c <__flatcc_fb_gen_c_json_parser@@Base+0x2e6c>
   265c0:	ldr	r3, [pc, #344]	; 26720 <__flatcc_fb_gen_c_json_parser@@Base+0x2e70>
   265c4:	ldr	r0, [r1]
   265c8:	str	r2, [sp]
   265cc:	ldr	r1, [pc, #216]	; 266ac <__flatcc_fb_gen_c_json_parser@@Base+0x2dfc>
   265d0:	ldr	r2, [pc, #216]	; 266b0 <__flatcc_fb_gen_c_json_parser@@Base+0x2e00>
   265d4:	bl	14094 <fprintf@plt>
   265d8:	ldr	r3, [pc, #212]	; 266b4 <__flatcc_fb_gen_c_json_parser@@Base+0x2e04>
   265dc:	ldr	r2, [pc, #316]	; 26720 <__flatcc_fb_gen_c_json_parser@@Base+0x2e70>
   265e0:	ldr	r1, [pc, #200]	; 266b0 <__flatcc_fb_gen_c_json_parser@@Base+0x2e00>
   265e4:	ldr	r0, [pc, #204]	; 266b8 <__flatcc_fb_gen_c_json_parser@@Base+0x2e08>
   265e8:	bl	14148 <__assert_fail@plt>
   265ec:	ldr	r1, [r4, #4]
   265f0:	add	ip, sp, #268	; 0x10c
   265f4:	ldr	r0, [r9]
   265f8:	ldr	r3, [r1, #4]
   265fc:	str	ip, [sp, #32]
   26600:	ldrd	sl, [r4, #48]	; 0x30
   26604:	str	r3, [sp, #16]
   26608:	strd	sl, [sp, #24]
   2660c:	ldr	r1, [r1]
   26610:	str	r3, [sp, #8]
   26614:	str	r1, [sp, #12]
   26618:	ldrd	sl, [r4, #96]	; 0x60
   2661c:	ldr	r1, [pc, #256]	; 26724 <__flatcc_fb_gen_c_json_parser@@Base+0x2e74>
   26620:	strd	sl, [sp]
   26624:	bl	14094 <fprintf@plt>
   26628:	ldr	r3, [sp, #44]	; 0x2c
   2662c:	ldrd	r0, [r3, #96]	; 0x60
   26630:	b	25d14 <__flatcc_fb_gen_c_json_parser@@Base+0x2464>
   26634:	ldr	r1, [pc, #104]	; 266a4 <__flatcc_fb_gen_c_json_parser@@Base+0x2df4>
   26638:	ldr	r2, [pc, #232]	; 26728 <__flatcc_fb_gen_c_json_parser@@Base+0x2e78>
   2663c:	ldr	r3, [pc, #232]	; 2672c <__flatcc_fb_gen_c_json_parser@@Base+0x2e7c>
   26640:	ldr	r0, [r1]
   26644:	str	r2, [sp]
   26648:	ldr	r1, [pc, #92]	; 266ac <__flatcc_fb_gen_c_json_parser@@Base+0x2dfc>
   2664c:	ldr	r2, [pc, #92]	; 266b0 <__flatcc_fb_gen_c_json_parser@@Base+0x2e00>
   26650:	bl	14094 <fprintf@plt>
   26654:	ldr	r3, [pc, #88]	; 266b4 <__flatcc_fb_gen_c_json_parser@@Base+0x2e04>
   26658:	ldr	r2, [pc, #204]	; 2672c <__flatcc_fb_gen_c_json_parser@@Base+0x2e7c>
   2665c:	ldr	r1, [pc, #76]	; 266b0 <__flatcc_fb_gen_c_json_parser@@Base+0x2e00>
   26660:	ldr	r0, [pc, #80]	; 266b8 <__flatcc_fb_gen_c_json_parser@@Base+0x2e08>
   26664:	bl	14148 <__assert_fail@plt>
   26668:	andeq	r9, r5, r8, asr #17
   2666c:	andeq	r9, r5, ip, lsl #20
   26670:	andeq	r9, r5, r8, lsr #24
   26674:	andeq	r9, r5, r8, ror #24
   26678:	andeq	r9, r5, r4, lsr #22
   2667c:	andeq	r9, r5, r4, lsl #23
   26680:			; <UNDEFINED> instruction: 0x00059fb0
   26684:	andeq	r9, r5, r4, lsl #20
   26688:	andeq	r9, r5, r4, lsr r9
   2668c:	ldrdeq	r9, [r5], -r4
   26690:	andeq	r9, r5, r8, asr #28
   26694:	strdeq	r9, [r5], -r4
   26698:	andeq	sl, r5, r4, lsl r0
   2669c:	strdeq	r9, [r5], -r4
   266a0:	andeq	r9, r5, r0, lsr #27
   266a4:	andeq	pc, r6, r8, lsr #1
   266a8:			; <UNDEFINED> instruction: 0x00059eb4
   266ac:	ldrdeq	r4, [r4], -ip
   266b0:	muleq	r5, ip, r2
   266b4:	andeq	r9, r5, r8, lsl #2
   266b8:	andeq	sp, r4, r4, ror r2
   266bc:	andeq	sl, r5, r8, lsl #1
   266c0:	andeq	r0, r0, pc, lsl r2
   266c4:	strdeq	r4, [r4], -r0
   266c8:	andeq	r9, r5, r4, lsl sl
   266cc:	andeq	r9, r5, r4, asr sl
   266d0:	muleq	r5, r4, sl
   266d4:	andeq	r4, r4, r0, lsl #16
   266d8:	ldrdeq	ip, [r5], -r0
   266dc:	andeq	r4, r4, r8, lsl #16
   266e0:	andeq	r4, r4, r0, lsl r8
   266e4:	andeq	r4, r4, r8, ror #15
   266e8:	strdeq	r4, [r4], -r8
   266ec:	andeq	r4, r4, r8, lsl r8
   266f0:	andeq	r4, r4, r0, lsr #16
   266f4:	andeq	r4, r4, r8, asr #7
   266f8:	andeq	r4, r4, r0, asr #7
   266fc:			; <UNDEFINED> instruction: 0x00057abc
   26700:	muleq	r0, r6, r1
   26704:	andeq	r4, r4, r8, ror #9
   26708:	muleq	r4, r0, r4
   2670c:	muleq	r5, r8, r0
   26710:			; <UNDEFINED> instruction: 0x00059cb0
   26714:	andeq	r9, r5, r0, asr pc
   26718:	andeq	r9, r5, r4, ror #23
   2671c:	andeq	r9, r5, r8, ror #26
   26720:	andeq	r0, r0, r3, ror #3
   26724:	andeq	r9, r5, ip, lsl #26
   26728:	muleq	r5, ip, r8
   2672c:	andeq	r0, r0, r9, ror #2

00026730 <__flatcc_fb_gen_c_json_printer@@Base>:
   26730:	ldr	r3, [r0, #208]	; 0xd0
   26734:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   26738:	mov	r6, r0
   2673c:	ldr	r3, [r3, #164]	; 0xa4
   26740:	sub	sp, sp, #236	; 0xec
   26744:	mov	r2, r3
   26748:	ldr	r1, [pc, #1108]	; 26ba4 <__flatcc_fb_gen_c_json_printer@@Base+0x474>
   2674c:	ldr	r0, [r0, #204]	; 0xcc
   26750:	bl	14094 <fprintf@plt>
   26754:	ldr	r3, [r6, #204]	; 0xcc
   26758:	mov	r2, #81	; 0x51
   2675c:	mov	r1, #1
   26760:	ldr	r0, [pc, #1088]	; 26ba8 <__flatcc_fb_gen_c_json_printer@@Base+0x478>
   26764:	bl	1401c <fwrite@plt>
   26768:	ldr	r3, [r6, #204]	; 0xcc
   2676c:	mov	r2, #40	; 0x28
   26770:	mov	r1, #1
   26774:	ldr	r0, [pc, #1072]	; 26bac <__flatcc_fb_gen_c_json_printer@@Base+0x47c>
   26778:	bl	1401c <fwrite@plt>
   2677c:	ldr	r1, [pc, #1068]	; 26bb0 <__flatcc_fb_gen_c_json_printer@@Base+0x480>
   26780:	mov	r0, r6
   26784:	ldr	r2, [pc, #1064]	; 26bb4 <__flatcc_fb_gen_c_json_printer@@Base+0x484>
   26788:	bl	16ee8 <__flatcc_fb_gen_c_includes@@Base>
   2678c:	ldr	r3, [r6, #212]	; 0xd4
   26790:	ldr	r1, [r6, #204]	; 0xcc
   26794:	ldr	r3, [r3, #140]	; 0x8c
   26798:	cmp	r3, #0
   2679c:	beq	267b8 <__flatcc_fb_gen_c_json_printer@@Base+0x88>
   267a0:	mov	r3, r1
   267a4:	mov	r2, #36	; 0x24
   267a8:	mov	r1, #1
   267ac:	ldr	r0, [pc, #1028]	; 26bb8 <__flatcc_fb_gen_c_json_printer@@Base+0x488>
   267b0:	bl	1401c <fwrite@plt>
   267b4:	ldr	r1, [r6, #204]	; 0xcc
   267b8:	mov	r0, #10
   267bc:	bl	140f4 <fputc@plt>
   267c0:	ldr	r4, [r6, #208]	; 0xd0
   267c4:	add	r0, sp, #12
   267c8:	mov	r2, #220	; 0xdc
   267cc:	ldr	r5, [r4, #52]	; 0x34
   267d0:	mov	r1, #0
   267d4:	bl	140ac <memset@plt>
   267d8:	cmp	r5, #0
   267dc:	beq	267ec <__flatcc_fb_gen_c_json_printer@@Base+0xbc>
   267e0:	ldrh	r3, [r5, #8]
   267e4:	cmp	r3, #1
   267e8:	bls	26b5c <__flatcc_fb_gen_c_json_printer@@Base+0x42c>
   267ec:	ldr	r4, [r4, #40]	; 0x28
   267f0:	cmp	r4, #0
   267f4:	beq	26874 <__flatcc_fb_gen_c_json_printer@@Base+0x144>
   267f8:	ldr	r8, [pc, #956]	; 26bbc <__flatcc_fb_gen_c_json_printer@@Base+0x48c>
   267fc:	ldr	r7, [pc, #956]	; 26bc0 <__flatcc_fb_gen_c_json_printer@@Base+0x490>
   26800:	ldr	r5, [pc, #956]	; 26bc4 <__flatcc_fb_gen_c_json_printer@@Base+0x494>
   26804:	b	2683c <__flatcc_fb_gen_c_json_printer@@Base+0x10c>
   26808:	bcc	26ac0 <__flatcc_fb_gen_c_json_printer@@Base+0x390>
   2680c:	cmp	r3, #4
   26810:	bne	26830 <__flatcc_fb_gen_c_json_printer@@Base+0x100>
   26814:	ldr	r0, [r4, #12]
   26818:	bl	170c4 <__flatcc_fb_scoped_symbol_name@@Base>
   2681c:	add	r3, sp, #12
   26820:	mov	r2, r3
   26824:	mov	r1, r5
   26828:	ldr	r0, [r6, #204]	; 0xcc
   2682c:	bl	14094 <fprintf@plt>
   26830:	ldr	r4, [r4]
   26834:	cmp	r4, #0
   26838:	beq	26874 <__flatcc_fb_gen_c_json_printer@@Base+0x144>
   2683c:	ldrh	r3, [r4, #8]
   26840:	add	r2, sp, #12
   26844:	mov	r1, r4
   26848:	cmp	r3, #1
   2684c:	bne	26808 <__flatcc_fb_gen_c_json_printer@@Base+0xd8>
   26850:	ldr	r0, [r4, #12]
   26854:	bl	170c4 <__flatcc_fb_scoped_symbol_name@@Base>
   26858:	add	r2, sp, #12
   2685c:	mov	r1, r8
   26860:	ldr	r0, [r6, #204]	; 0xcc
   26864:	bl	14094 <fprintf@plt>
   26868:	ldr	r4, [r4]
   2686c:	cmp	r4, #0
   26870:	bne	2683c <__flatcc_fb_gen_c_json_printer@@Base+0x10c>
   26874:	ldr	r1, [r6, #204]	; 0xcc
   26878:	mov	r0, #10
   2687c:	bl	140f4 <fputc@plt>
   26880:	ldr	r3, [r6, #208]	; 0xd0
   26884:	ldr	r4, [r3, #40]	; 0x28
   26888:	cmp	r4, #0
   2688c:	bne	268a0 <__flatcc_fb_gen_c_json_printer@@Base+0x170>
   26890:	b	26a60 <__flatcc_fb_gen_c_json_printer@@Base+0x330>
   26894:	ldr	r4, [r4]
   26898:	cmp	r4, #0
   2689c:	beq	268c4 <__flatcc_fb_gen_c_json_printer@@Base+0x194>
   268a0:	ldrh	r3, [r4, #8]
   268a4:	cmp	r3, #3
   268a8:	bne	26894 <__flatcc_fb_gen_c_json_printer@@Base+0x164>
   268ac:	mov	r1, r4
   268b0:	mov	r0, r6
   268b4:	bl	256d0 <__flatcc_fb_gen_c_json_parser@@Base+0x1e20>
   268b8:	ldr	r4, [r4]
   268bc:	cmp	r4, #0
   268c0:	bne	268a0 <__flatcc_fb_gen_c_json_printer@@Base+0x170>
   268c4:	ldr	r3, [r6, #208]	; 0xd0
   268c8:	ldr	r5, [r3, #40]	; 0x28
   268cc:	cmp	r5, #0
   268d0:	beq	26a60 <__flatcc_fb_gen_c_json_printer@@Base+0x330>
   268d4:	ldr	fp, [pc, #748]	; 26bc8 <__flatcc_fb_gen_c_json_printer@@Base+0x498>
   268d8:	ldr	r7, [pc, #748]	; 26bcc <__flatcc_fb_gen_c_json_printer@@Base+0x49c>
   268dc:	ldr	sl, [pc, #748]	; 26bd0 <__flatcc_fb_gen_c_json_printer@@Base+0x4a0>
   268e0:	ldr	r9, [pc, #748]	; 26bd4 <__flatcc_fb_gen_c_json_printer@@Base+0x4a4>
   268e4:	add	r8, r6, #204	; 0xcc
   268e8:	b	268f8 <__flatcc_fb_gen_c_json_printer@@Base+0x1c8>
   268ec:	ldr	r5, [r5]
   268f0:	cmp	r5, #0
   268f4:	beq	269cc <__flatcc_fb_gen_c_json_printer@@Base+0x29c>
   268f8:	ldrh	r3, [r5, #8]
   268fc:	cmp	r3, #4
   26900:	bne	268ec <__flatcc_fb_gen_c_json_printer@@Base+0x1bc>
   26904:	mov	r2, #220	; 0xdc
   26908:	mov	r1, #0
   2690c:	add	r0, sp, #12
   26910:	bl	140ac <memset@plt>
   26914:	add	r2, sp, #12
   26918:	mov	r1, r5
   2691c:	ldr	r0, [r5, #12]
   26920:	bl	170c4 <__flatcc_fb_scoped_symbol_name@@Base>
   26924:	add	r2, sp, #12
   26928:	mov	r1, fp
   2692c:	ldr	r0, [r6, #204]	; 0xcc
   26930:	bl	14094 <fprintf@plt>
   26934:	ldr	r4, [r5, #20]
   26938:	cmp	r4, #0
   2693c:	bne	26950 <__flatcc_fb_gen_c_json_printer@@Base+0x220>
   26940:	b	2698c <__flatcc_fb_gen_c_json_printer@@Base+0x25c>
   26944:	ldr	r4, [r4]
   26948:	cmp	r4, #0
   2694c:	beq	2698c <__flatcc_fb_gen_c_json_printer@@Base+0x25c>
   26950:	ldrh	r3, [r4, #24]
   26954:	cmp	r3, #0
   26958:	beq	26944 <__flatcc_fb_gen_c_json_printer@@Base+0x214>
   2695c:	ldr	r1, [r4, #4]
   26960:	ldr	r2, [r4, #48]	; 0x30
   26964:	ldr	r0, [r6, #204]	; 0xcc
   26968:	ldr	r3, [r1, #4]
   2696c:	str	r3, [sp, #4]
   26970:	ldr	r1, [r1]
   26974:	str	r1, [sp]
   26978:	mov	r1, r7
   2697c:	bl	14094 <fprintf@plt>
   26980:	ldr	r4, [r4]
   26984:	cmp	r4, #0
   26988:	bne	26950 <__flatcc_fb_gen_c_json_printer@@Base+0x220>
   2698c:	ldr	r3, [r6, #204]	; 0xcc
   26990:	mov	r2, #78	; 0x4e
   26994:	mov	r1, #1
   26998:	mov	r0, sl
   2699c:	bl	1401c <fwrite@plt>
   269a0:	ldr	r3, [r6, #204]	; 0xcc
   269a4:	mov	r2, #9
   269a8:	mov	r1, #1
   269ac:	mov	r0, r9
   269b0:	bl	1401c <fwrite@plt>
   269b4:	mov	r1, r5
   269b8:	mov	r0, r8
   269bc:	bl	2517c <__flatcc_fb_gen_c_json_parser@@Base+0x18cc>
   269c0:	ldr	r5, [r5]
   269c4:	cmp	r5, #0
   269c8:	bne	268f8 <__flatcc_fb_gen_c_json_printer@@Base+0x1c8>
   269cc:	ldr	r3, [r6, #208]	; 0xd0
   269d0:	ldr	r4, [r3, #40]	; 0x28
   269d4:	cmp	r4, #0
   269d8:	beq	26a60 <__flatcc_fb_gen_c_json_printer@@Base+0x330>
   269dc:	add	r5, r6, #204	; 0xcc
   269e0:	b	269f0 <__flatcc_fb_gen_c_json_printer@@Base+0x2c0>
   269e4:	ldr	r4, [r4]
   269e8:	cmp	r4, #0
   269ec:	beq	26a14 <__flatcc_fb_gen_c_json_printer@@Base+0x2e4>
   269f0:	ldrh	r3, [r4, #8]
   269f4:	cmp	r3, #1
   269f8:	bne	269e4 <__flatcc_fb_gen_c_json_printer@@Base+0x2b4>
   269fc:	mov	r1, r4
   26a00:	mov	r0, r5
   26a04:	bl	25358 <__flatcc_fb_gen_c_json_parser@@Base+0x1aa8>
   26a08:	ldr	r4, [r4]
   26a0c:	cmp	r4, #0
   26a10:	bne	269f0 <__flatcc_fb_gen_c_json_printer@@Base+0x2c0>
   26a14:	ldr	r3, [r6, #208]	; 0xd0
   26a18:	ldr	r4, [r3, #40]	; 0x28
   26a1c:	cmp	r4, #0
   26a20:	beq	26a60 <__flatcc_fb_gen_c_json_printer@@Base+0x330>
   26a24:	add	r5, r6, #204	; 0xcc
   26a28:	b	26a38 <__flatcc_fb_gen_c_json_printer@@Base+0x308>
   26a2c:	ldr	r4, [r4]
   26a30:	cmp	r4, #0
   26a34:	beq	26a5c <__flatcc_fb_gen_c_json_printer@@Base+0x32c>
   26a38:	ldrh	r3, [r4, #8]
   26a3c:	cmp	r3, #0
   26a40:	bne	26a2c <__flatcc_fb_gen_c_json_printer@@Base+0x2fc>
   26a44:	mov	r1, r4
   26a48:	mov	r0, r5
   26a4c:	bl	25c4c <__flatcc_fb_gen_c_json_parser@@Base+0x239c>
   26a50:	ldr	r4, [r4]
   26a54:	cmp	r4, #0
   26a58:	bne	26a38 <__flatcc_fb_gen_c_json_printer@@Base+0x308>
   26a5c:	ldr	r3, [r6, #208]	; 0xd0
   26a60:	ldr	r4, [r3, #52]	; 0x34
   26a64:	cmp	r4, #0
   26a68:	beq	26a78 <__flatcc_fb_gen_c_json_printer@@Base+0x348>
   26a6c:	ldrh	r3, [r4, #8]
   26a70:	cmp	r3, #1
   26a74:	bls	26adc <__flatcc_fb_gen_c_json_printer@@Base+0x3ac>
   26a78:	ldr	r3, [r6, #212]	; 0xd4
   26a7c:	ldr	r0, [r6, #204]	; 0xcc
   26a80:	ldr	r3, [r3, #140]	; 0x8c
   26a84:	cmp	r3, #0
   26a88:	beq	26aa4 <__flatcc_fb_gen_c_json_printer@@Base+0x374>
   26a8c:	mov	r3, r0
   26a90:	mov	r2, #36	; 0x24
   26a94:	mov	r1, #1
   26a98:	ldr	r0, [pc, #312]	; 26bd8 <__flatcc_fb_gen_c_json_printer@@Base+0x4a8>
   26a9c:	bl	1401c <fwrite@plt>
   26aa0:	ldr	r0, [r6, #204]	; 0xcc
   26aa4:	ldr	r3, [r6, #208]	; 0xd0
   26aa8:	ldr	r1, [pc, #300]	; 26bdc <__flatcc_fb_gen_c_json_printer@@Base+0x4ac>
   26aac:	ldr	r2, [r3, #164]	; 0xa4
   26ab0:	bl	14094 <fprintf@plt>
   26ab4:	mov	r0, #0
   26ab8:	add	sp, sp, #236	; 0xec
   26abc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   26ac0:	ldr	r0, [r4, #12]
   26ac4:	bl	170c4 <__flatcc_fb_scoped_symbol_name@@Base>
   26ac8:	add	r2, sp, #12
   26acc:	mov	r1, r7
   26ad0:	ldr	r0, [r6, #204]	; 0xcc
   26ad4:	bl	14094 <fprintf@plt>
   26ad8:	b	26830 <__flatcc_fb_gen_c_json_printer@@Base+0x100>
   26adc:	mov	r2, #220	; 0xdc
   26ae0:	mov	r1, #0
   26ae4:	add	r0, sp, #12
   26ae8:	bl	140ac <memset@plt>
   26aec:	add	r2, sp, #12
   26af0:	mov	r1, r4
   26af4:	ldr	r0, [r4, #12]
   26af8:	bl	170c4 <__flatcc_fb_scoped_symbol_name@@Base>
   26afc:	ldr	r3, [r6, #208]	; 0xd0
   26b00:	ldr	r1, [pc, #216]	; 26be0 <__flatcc_fb_gen_c_json_printer@@Base+0x4b0>
   26b04:	ldr	r0, [r6, #204]	; 0xcc
   26b08:	ldr	r2, [r3, #160]	; 0xa0
   26b0c:	bl	14094 <fprintf@plt>
   26b10:	add	r2, sp, #12
   26b14:	ldr	r1, [pc, #200]	; 26be4 <__flatcc_fb_gen_c_json_printer@@Base+0x4b4>
   26b18:	ldr	r0, [r6, #204]	; 0xcc
   26b1c:	bl	14094 <fprintf@plt>
   26b20:	ldr	r2, [r6, #208]	; 0xd0
   26b24:	ldrh	r3, [r2, #16]
   26b28:	cmp	r3, #2
   26b2c:	beq	26b8c <__flatcc_fb_gen_c_json_printer@@Base+0x45c>
   26b30:	ldr	r3, [r6, #204]	; 0xcc
   26b34:	mov	r2, #3
   26b38:	mov	r1, #1
   26b3c:	ldr	r0, [pc, #164]	; 26be8 <__flatcc_fb_gen_c_json_printer@@Base+0x4b8>
   26b40:	bl	1401c <fwrite@plt>
   26b44:	ldr	r3, [r6, #204]	; 0xcc
   26b48:	mov	r2, #3
   26b4c:	mov	r1, #1
   26b50:	ldr	r0, [pc, #148]	; 26bec <__flatcc_fb_gen_c_json_printer@@Base+0x4bc>
   26b54:	bl	1401c <fwrite@plt>
   26b58:	b	26a78 <__flatcc_fb_gen_c_json_printer@@Base+0x348>
   26b5c:	ldr	r3, [r6, #204]	; 0xcc
   26b60:	ldr	r2, [pc, #136]	; 26bf0 <__flatcc_fb_gen_c_json_printer@@Base+0x4c0>
   26b64:	mov	r1, #1
   26b68:	ldr	r0, [pc, #132]	; 26bf4 <__flatcc_fb_gen_c_json_printer@@Base+0x4c4>
   26b6c:	bl	1401c <fwrite@plt>
   26b70:	ldr	r3, [r6, #208]	; 0xd0
   26b74:	ldr	r1, [pc, #124]	; 26bf8 <__flatcc_fb_gen_c_json_printer@@Base+0x4c8>
   26b78:	ldr	r0, [r6, #204]	; 0xcc
   26b7c:	ldr	r2, [r3, #160]	; 0xa0
   26b80:	bl	14094 <fprintf@plt>
   26b84:	ldr	r4, [r6, #208]	; 0xd0
   26b88:	b	267ec <__flatcc_fb_gen_c_json_printer@@Base+0xbc>
   26b8c:	ldr	r3, [r2, #8]
   26b90:	ldr	r1, [pc, #100]	; 26bfc <__flatcc_fb_gen_c_json_printer@@Base+0x4cc>
   26b94:	ldr	r2, [r2, #12]
   26b98:	ldr	r0, [r6, #204]	; 0xcc
   26b9c:	bl	14094 <fprintf@plt>
   26ba0:	b	26b44 <__flatcc_fb_gen_c_json_printer@@Base+0x414>
   26ba4:	ldrdeq	sl, [r5], -r0
   26ba8:	ldrdeq	r5, [r4], -r4
   26bac:	andeq	sl, r5, r8, lsl #2
   26bb0:	strheq	r4, [r4], -ip
   26bb4:	andeq	sl, r5, r4, lsr r1
   26bb8:	andeq	r5, r4, r8, ror #17
   26bbc:			; <UNDEFINED> instruction: 0x0005a4b4
   26bc0:	andeq	sl, r5, r8, asr #8
   26bc4:	andeq	sl, r5, r0, lsl #7
   26bc8:	andeq	sl, r5, r4, lsl #10
   26bcc:	andeq	sl, r5, r8, asr #11
   26bd0:	andeq	sl, r5, r8, ror r5
   26bd4:	andeq	r9, r5, r4, asr #3
   26bd8:	andeq	fp, r4, ip, asr #14
   26bdc:	andeq	sl, r5, ip, lsr r7
   26be0:	andeq	sl, r5, ip, lsl r6
   26be4:	andeq	sl, r5, r4, ror r6
   26be8:	andeq	sl, r5, r8, lsr r7
   26bec:	strdeq	r6, [r5], -r0
   26bf0:	andeq	r0, r0, r2, ror #3
   26bf4:	andeq	sl, r5, r4, asr #2
   26bf8:	andeq	sl, r5, r8, lsr #6
   26bfc:	andeq	sl, r5, ip, lsr #14
   26c00:	add	r3, r1, #4
   26c04:	mov	r2, r0
   26c08:	ldr	r1, [pc, #4]	; 26c14 <__flatcc_fb_gen_c_json_printer@@Base+0x4e4>
   26c0c:	mov	r0, r3
   26c10:	b	29dcc <fb_symbol_table_visit@@Base>
   26c14:	andeq	r6, r2, r0, lsr ip
   26c18:	add	r3, r1, #4
   26c1c:	mov	r2, r0
   26c20:	ldr	r1, [pc, #4]	; 26c2c <__flatcc_fb_gen_c_json_printer@@Base+0x4fc>
   26c24:	mov	r0, r3
   26c28:	b	29dcc <fb_symbol_table_visit@@Base>
   26c2c:	andeq	r6, r2, r4, lsr sp
   26c30:	ldrh	r3, [r1, #8]
   26c34:	cmp	r3, #4
   26c38:	bxhi	lr
   26c3c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   26c40:	mov	r6, r0
   26c44:	ldr	r0, [r0, #40]	; 0x28
   26c48:	mov	r7, r1
   26c4c:	add	r0, r0, #172	; 0xac
   26c50:	ldr	r1, [r1, #16]
   26c54:	bl	293b4 <ptr_set_find_item@@Base>
   26c58:	cmp	r0, #0
   26c5c:	beq	26d30 <__flatcc_fb_gen_c_json_printer@@Base+0x600>
   26c60:	ldr	r3, [r6]
   26c64:	ldr	r9, [r6, #36]	; 0x24
   26c68:	cmp	r3, #0
   26c6c:	moveq	r3, r9
   26c70:	beq	26cb8 <__flatcc_fb_gen_c_json_printer@@Base+0x588>
   26c74:	ldr	r3, [r7, #12]
   26c78:	ldr	r5, [r3]
   26c7c:	mov	r3, r9
   26c80:	cmp	r5, #0
   26c84:	beq	26cb8 <__flatcc_fb_gen_c_json_printer@@Base+0x588>
   26c88:	mov	r8, #46	; 0x2e
   26c8c:	ldr	r2, [r5, #4]
   26c90:	mov	r0, r3
   26c94:	ldm	r2, {r1, r4}
   26c98:	mov	r2, r4
   26c9c:	bl	13fe0 <memcpy@plt>
   26ca0:	add	r4, r0, r4
   26ca4:	add	r3, r4, #1
   26ca8:	strb	r8, [r4]
   26cac:	ldr	r5, [r5]
   26cb0:	cmp	r5, #0
   26cb4:	bne	26c8c <__flatcc_fb_gen_c_json_printer@@Base+0x55c>
   26cb8:	ldr	r2, [r7, #4]
   26cbc:	mov	r0, r3
   26cc0:	ldm	r2, {r1, r4}
   26cc4:	mov	r2, r4
   26cc8:	bl	13fe0 <memcpy@plt>
   26ccc:	mov	r2, #0
   26cd0:	strb	r2, [r0, r4]
   26cd4:	ldrh	r2, [r7, #8]
   26cd8:	add	r3, r0, r4
   26cdc:	add	r3, r3, #1
   26ce0:	str	r3, [r6, #36]	; 0x24
   26ce4:	cmp	r2, #4
   26ce8:	ldrls	pc, [pc, r2, lsl #2]
   26cec:	b	26d2c <__flatcc_fb_gen_c_json_printer@@Base+0x5fc>
   26cf0:	andeq	r6, r2, r8, lsl sp
   26cf4:	andeq	r6, r2, r8, lsl sp
   26cf8:	andeq	r6, r2, ip, lsr #26
   26cfc:	andeq	r6, r2, r4, lsl #26
   26d00:	andeq	r6, r2, r4, lsl #26
   26d04:	ldr	r3, [r6, #32]
   26d08:	add	r2, r3, #8
   26d0c:	stm	r3, {r7, r9}
   26d10:	str	r2, [r6, #32]
   26d14:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   26d18:	ldr	r3, [r6, #28]
   26d1c:	add	r2, r3, #8
   26d20:	stm	r3, {r7, r9}
   26d24:	str	r2, [r6, #28]
   26d28:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   26d2c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   26d30:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   26d34:	ldrh	r3, [r1, #8]
   26d38:	cmp	r3, #4
   26d3c:	bxhi	lr
   26d40:	push	{r4, r5, r6, lr}
   26d44:	mov	r4, r0
   26d48:	ldr	r0, [r0, #40]	; 0x28
   26d4c:	mov	r5, r1
   26d50:	add	r0, r0, #172	; 0xac
   26d54:	ldr	r1, [r1, #16]
   26d58:	bl	293b4 <ptr_set_find_item@@Base>
   26d5c:	cmp	r0, #0
   26d60:	beq	26e04 <__flatcc_fb_gen_c_json_printer@@Base+0x6d4>
   26d64:	ldr	ip, [r4]
   26d68:	cmp	ip, #0
   26d6c:	beq	26da0 <__flatcc_fb_gen_c_json_printer@@Base+0x670>
   26d70:	ldr	r3, [r5, #12]
   26d74:	ldr	r3, [r3]
   26d78:	cmp	r3, #0
   26d7c:	beq	26e08 <__flatcc_fb_gen_c_json_printer@@Base+0x6d8>
   26d80:	mov	ip, #0
   26d84:	ldr	r2, [r3, #4]
   26d88:	ldr	r3, [r3]
   26d8c:	ldr	r2, [r2, #4]
   26d90:	cmp	r3, #0
   26d94:	add	r2, r2, #1
   26d98:	add	ip, ip, r2
   26d9c:	bne	26d84 <__flatcc_fb_gen_c_json_printer@@Base+0x654>
   26da0:	ldr	r3, [r5, #4]
   26da4:	ldr	r1, [r4, #12]
   26da8:	ldrh	r2, [r5, #8]
   26dac:	ldr	r3, [r3, #4]
   26db0:	add	r3, r3, r1
   26db4:	add	r3, r3, #1
   26db8:	add	ip, r3, ip
   26dbc:	str	ip, [r4, #12]
   26dc0:	cmp	r2, #4
   26dc4:	ldrls	pc, [pc, r2, lsl #2]
   26dc8:	b	26e00 <__flatcc_fb_gen_c_json_printer@@Base+0x6d0>
   26dcc:	strdeq	r6, [r2], -r0
   26dd0:	strdeq	r6, [r2], -r0
   26dd4:	andeq	r6, r2, r0, lsl #28
   26dd8:	andeq	r6, r2, r0, ror #27
   26ddc:	andeq	r6, r2, r0, ror #27
   26de0:	ldr	r3, [r4, #8]
   26de4:	add	r3, r3, #1
   26de8:	str	r3, [r4, #8]
   26dec:	pop	{r4, r5, r6, pc}
   26df0:	ldr	r3, [r4, #4]
   26df4:	add	r3, r3, #1
   26df8:	str	r3, [r4, #4]
   26dfc:	pop	{r4, r5, r6, pc}
   26e00:	pop	{r4, r5, r6, pc}
   26e04:	pop	{r4, r5, r6, pc}
   26e08:	mov	ip, r3
   26e0c:	b	26da0 <__flatcc_fb_gen_c_json_printer@@Base+0x670>
   26e10:	ldr	r1, [r1, #4]
   26e14:	ldr	r0, [r0, #4]
   26e18:	b	13fbc <strcmp@plt>
   26e1c:	sub	r2, r2, #2
   26e20:	push	{r4, r5, r6, r7, r8, lr}
   26e24:	mov	r4, r0
   26e28:	cmp	r2, #13
   26e2c:	ldrls	pc, [pc, r2, lsl #2]
   26e30:	b	26fa4 <__flatcc_fb_gen_c_json_printer@@Base+0x874>
   26e34:	muleq	r2, r4, pc	; <UNPREDICTABLE>
   26e38:	andeq	r6, r2, r4, lsr #31
   26e3c:	andeq	r6, r2, r4, lsr #31
   26e40:	andeq	r6, r2, r4, lsr #31
   26e44:	andeq	r6, r2, r4, lsr #31
   26e48:	andeq	r6, r2, r8, ror #29
   26e4c:	andeq	r6, r2, r4, lsr pc
   26e50:	andeq	r6, r2, ip, ror #28
   26e54:	andeq	r6, r2, r4, lsr #31
   26e58:	andeq	r6, r2, r4, lsr #31
   26e5c:	andeq	r6, r2, r4, lsr #31
   26e60:	andeq	r6, r2, r4, lsr #31
   26e64:	andeq	r6, r2, ip, asr #30
   26e68:	andeq	r6, r2, r4, ror pc
   26e6c:	mvn	r6, #0
   26e70:	mov	r7, #13
   26e74:	mov	r5, #14
   26e78:	mov	r1, #3
   26e7c:	mov	r0, r4
   26e80:	bl	3cb9c <flatcc_builder_start_table@@Base>
   26e84:	cmp	r0, #0
   26e88:	bne	26fc4 <__flatcc_fb_gen_c_json_printer@@Base+0x894>
   26e8c:	cmn	r6, #1
   26e90:	beq	26eb4 <__flatcc_fb_gen_c_json_printer@@Base+0x784>
   26e94:	mov	r3, #4
   26e98:	mov	r2, r3
   26e9c:	mov	r1, #2
   26ea0:	mov	r0, r4
   26ea4:	bl	3ed08 <flatcc_builder_table_add@@Base>
   26ea8:	cmp	r0, #0
   26eac:	strne	r6, [r0]
   26eb0:	beq	26fc4 <__flatcc_fb_gen_c_json_printer@@Base+0x894>
   26eb4:	cmp	r5, #0
   26eb8:	bne	26fcc <__flatcc_fb_gen_c_json_printer@@Base+0x89c>
   26ebc:	cmp	r7, #0
   26ec0:	bne	26ff0 <__flatcc_fb_gen_c_json_printer@@Base+0x8c0>
   26ec4:	mov	r2, #0
   26ec8:	ldr	r1, [pc, #384]	; 27050 <__flatcc_fb_gen_c_json_printer@@Base+0x920>
   26ecc:	mov	r0, r4
   26ed0:	bl	3d544 <flatcc_builder_check_required@@Base>
   26ed4:	cmp	r0, #0
   26ed8:	beq	2703c <__flatcc_fb_gen_c_json_printer@@Base+0x90c>
   26edc:	mov	r0, r4
   26ee0:	pop	{r4, r5, r6, r7, r8, lr}
   26ee4:	b	3d5dc <flatcc_builder_end_table@@Base>
   26ee8:	mvn	r6, #0
   26eec:	sub	r1, r1, #1
   26ef0:	cmp	r1, #10
   26ef4:	movhi	r7, #0
   26ef8:	movhi	r5, #14
   26efc:	bhi	26e78 <__flatcc_fb_gen_c_json_printer@@Base+0x748>
   26f00:	mov	r2, #14
   26f04:	ldr	r3, [pc, #328]	; 27054 <__flatcc_fb_gen_c_json_printer@@Base+0x924>
   26f08:	cmp	r2, #0
   26f0c:	add	r1, r3, r1
   26f10:	ldrsb	r5, [r1, #24]
   26f14:	beq	26f2c <__flatcc_fb_gen_c_json_printer@@Base+0x7fc>
   26f18:	cmp	r2, #14
   26f1c:	moveq	r7, r5
   26f20:	moveq	r5, r2
   26f24:	beq	26e78 <__flatcc_fb_gen_c_json_printer@@Base+0x748>
   26f28:	mov	r5, r2
   26f2c:	mov	r7, #0
   26f30:	b	26e78 <__flatcc_fb_gen_c_json_printer@@Base+0x748>
   26f34:	mvn	r6, #0
   26f38:	sub	r1, r1, #1
   26f3c:	cmp	r1, #10
   26f40:	movls	r2, #0
   26f44:	bls	26f04 <__flatcc_fb_gen_c_json_printer@@Base+0x7d4>
   26f48:	b	26fa8 <__flatcc_fb_gen_c_json_printer@@Base+0x878>
   26f4c:	ldrh	r3, [r1, #8]
   26f50:	ldr	r6, [r1, #124]	; 0x7c
   26f54:	cmp	r3, #4
   26f58:	ldrls	pc, [pc, r3, lsl #2]
   26f5c:	b	26fb4 <__flatcc_fb_gen_c_json_printer@@Base+0x884>
   26f60:	andeq	r7, r2, r0, lsr #32
   26f64:	andeq	r7, r2, r0, lsr #32
   26f68:			; <UNDEFINED> instruction: 0x00026fb4
   26f6c:	andeq	r7, r2, r8, lsr #32
   26f70:	andeq	r7, r2, r4, lsl r0
   26f74:	ldrh	r3, [r1, #8]
   26f78:	ldr	r6, [r1, #124]	; 0x7c
   26f7c:	cmp	r3, #1
   26f80:	bls	27030 <__flatcc_fb_gen_c_json_printer@@Base+0x900>
   26f84:	cmp	r3, #3
   26f88:	bne	26fa8 <__flatcc_fb_gen_c_json_printer@@Base+0x878>
   26f8c:	ldr	r1, [r1, #40]	; 0x28
   26f90:	b	26eec <__flatcc_fb_gen_c_json_printer@@Base+0x7bc>
   26f94:	mvn	r6, #0
   26f98:	mov	r7, #0
   26f9c:	mov	r5, #13
   26fa0:	b	26e78 <__flatcc_fb_gen_c_json_printer@@Base+0x748>
   26fa4:	mvn	r6, #0
   26fa8:	mov	r7, #0
   26fac:	mov	r5, r7
   26fb0:	b	26e78 <__flatcc_fb_gen_c_json_printer@@Base+0x748>
   26fb4:	mov	r1, #3
   26fb8:	bl	3cb9c <flatcc_builder_start_table@@Base>
   26fbc:	cmp	r0, #0
   26fc0:	beq	26ec4 <__flatcc_fb_gen_c_json_printer@@Base+0x794>
   26fc4:	mov	r0, #0
   26fc8:	pop	{r4, r5, r6, r7, r8, pc}
   26fcc:	mov	r3, #1
   26fd0:	mov	r2, r3
   26fd4:	mov	r1, #0
   26fd8:	mov	r0, r4
   26fdc:	bl	3ed08 <flatcc_builder_table_add@@Base>
   26fe0:	cmp	r0, #0
   26fe4:	strbne	r5, [r0]
   26fe8:	bne	26ebc <__flatcc_fb_gen_c_json_printer@@Base+0x78c>
   26fec:	b	26fc4 <__flatcc_fb_gen_c_json_printer@@Base+0x894>
   26ff0:	mov	r3, #1
   26ff4:	mov	r2, r3
   26ff8:	mov	r1, r3
   26ffc:	mov	r0, r4
   27000:	bl	3ed08 <flatcc_builder_table_add@@Base>
   27004:	cmp	r0, #0
   27008:	strbne	r7, [r0]
   2700c:	bne	26ec4 <__flatcc_fb_gen_c_json_printer@@Base+0x794>
   27010:	b	26fc4 <__flatcc_fb_gen_c_json_printer@@Base+0x894>
   27014:	mov	r7, #0
   27018:	mov	r5, #16
   2701c:	b	26e78 <__flatcc_fb_gen_c_json_printer@@Base+0x748>
   27020:	mov	r2, #15
   27024:	b	26f28 <__flatcc_fb_gen_c_json_printer@@Base+0x7f8>
   27028:	ldr	r1, [r1, #40]	; 0x28
   2702c:	b	26f38 <__flatcc_fb_gen_c_json_printer@@Base+0x808>
   27030:	mov	r7, #15
   27034:	mov	r5, #14
   27038:	b	26e78 <__flatcc_fb_gen_c_json_printer@@Base+0x748>
   2703c:	ldr	r3, [pc, #20]	; 27058 <__flatcc_fb_gen_c_json_printer@@Base+0x928>
   27040:	mov	r2, #23
   27044:	ldr	r1, [pc, #16]	; 2705c <__flatcc_fb_gen_c_json_printer@@Base+0x92c>
   27048:	ldr	r0, [pc, #16]	; 27060 <__flatcc_fb_gen_c_json_printer@@Base+0x930>
   2704c:	bl	14148 <__assert_fail@plt>
   27050:	muleq	r5, ip, r7
   27054:	andeq	sl, r5, r4, ror #14
   27058:	andeq	sl, r5, r8, lsl #15
   2705c:	andeq	sl, r5, r0, lsl r9
   27060:	andeq	sl, r5, r0, ror r9
   27064:	cmp	r0, #0
   27068:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2706c:	sub	sp, sp, #36	; 0x24
   27070:	beq	27084 <__flatcc_fb_gen_c_json_printer@@Base+0x954>
   27074:	ldr	r3, [pc, #1660]	; 276f8 <__flatcc_fb_gen_c_json_printer@@Base+0xfc8>
   27078:	ldr	r2, [r0, #4]
   2707c:	cmp	r2, r3
   27080:	beq	27098 <__flatcc_fb_gen_c_json_printer@@Base+0x968>
   27084:	ldr	r3, [pc, #1648]	; 276fc <__flatcc_fb_gen_c_json_printer@@Base+0xfcc>
   27088:	mov	r2, #237	; 0xed
   2708c:	ldr	r1, [pc, #1644]	; 27700 <__flatcc_fb_gen_c_json_printer@@Base+0xfd0>
   27090:	ldr	r0, [pc, #1644]	; 27704 <__flatcc_fb_gen_c_json_printer@@Base+0xfd4>
   27094:	bl	14148 <__assert_fail@plt>
   27098:	ldr	r2, [r0]
   2709c:	adds	r3, r0, r2
   270a0:	beq	27084 <__flatcc_fb_gen_c_json_printer@@Base+0x954>
   270a4:	ldr	r2, [r0, r2]
   270a8:	sub	r2, r3, r2
   270ac:	ldrh	r1, [r2]
   270b0:	cmp	r1, #5
   270b4:	bhi	270cc <__flatcc_fb_gen_c_json_printer@@Base+0x99c>
   270b8:	ldr	r3, [pc, #1596]	; 276fc <__flatcc_fb_gen_c_json_printer@@Base+0xfcc>
   270bc:	mov	r2, #237	; 0xed
   270c0:	ldr	r1, [pc, #1592]	; 27700 <__flatcc_fb_gen_c_json_printer@@Base+0xfd0>
   270c4:	ldr	r0, [pc, #1596]	; 27708 <__flatcc_fb_gen_c_json_printer@@Base+0xfd8>
   270c8:	bl	14148 <__assert_fail@plt>
   270cc:	ldrh	r1, [r2, #4]
   270d0:	cmp	r1, #0
   270d4:	beq	270b8 <__flatcc_fb_gen_c_json_printer@@Base+0x988>
   270d8:	ldr	r2, [r3, r1]
   270dc:	add	r3, r3, r1
   270e0:	add	r2, r2, #4
   270e4:	adds	r1, r3, r2
   270e8:	mov	r0, r1
   270ec:	str	r1, [sp, #16]
   270f0:	beq	27468 <__flatcc_fb_gen_c_json_printer@@Base+0xd38>
   270f4:	ldr	r1, [r1, #-4]
   270f8:	cmp	r1, #0
   270fc:	beq	27468 <__flatcc_fb_gen_c_json_printer@@Base+0xd38>
   27100:	ldr	r3, [r3, r2]
   27104:	adds	r2, r0, r3
   27108:	beq	276e4 <__flatcc_fb_gen_c_json_printer@@Base+0xfb4>
   2710c:	ldr	r3, [r0, r3]
   27110:	sub	r3, r2, r3
   27114:	ldrh	r0, [r3]
   27118:	cmp	r0, #7
   2711c:	bls	27454 <__flatcc_fb_gen_c_json_printer@@Base+0xd24>
   27120:	ldrh	r3, [r3, #6]
   27124:	cmp	r3, #0
   27128:	beq	27454 <__flatcc_fb_gen_c_json_printer@@Base+0xd24>
   2712c:	mov	r0, #0
   27130:	str	r0, [sp, #20]
   27134:	ldr	r0, [sp, #16]
   27138:	add	r0, r0, #4
   2713c:	str	r0, [sp, #28]
   27140:	ldr	r0, [r2, r3]
   27144:	add	r6, r2, r3
   27148:	add	r3, r0, #4
   2714c:	adds	r6, r6, r3
   27150:	beq	27404 <__flatcc_fb_gen_c_json_printer@@Base+0xcd4>
   27154:	ldr	r3, [r6, #-4]
   27158:	cmp	r3, #0
   2715c:	str	r3, [sp, #24]
   27160:	beq	27404 <__flatcc_fb_gen_c_json_printer@@Base+0xcd4>
   27164:	lsr	r2, r3, #1
   27168:	sub	r3, r3, #1
   2716c:	str	r3, [sp]
   27170:	lsl	r3, r2, #1
   27174:	str	r2, [sp, #12]
   27178:	str	r3, [sp, #8]
   2717c:	b	2727c <__flatcc_fb_gen_c_json_printer@@Base+0xb4c>
   27180:	ldr	r8, [r6, #-4]
   27184:	mov	r5, r9
   27188:	lsl	fp, r4, #2
   2718c:	cmp	r8, r4
   27190:	add	r2, r6, fp
   27194:	bls	276d0 <__flatcc_fb_gen_c_json_printer@@Base+0xfa0>
   27198:	ldr	r7, [r6, r4, lsl #2]
   2719c:	adds	r3, r2, r7
   271a0:	beq	276cc <__flatcc_fb_gen_c_json_printer@@Base+0xf9c>
   271a4:	ldr	r2, [r2, r7]
   271a8:	sub	r2, r3, r2
   271ac:	ldrh	r1, [r2]
   271b0:	cmp	r1, #5
   271b4:	bls	27378 <__flatcc_fb_gen_c_json_printer@@Base+0xc48>
   271b8:	ldrh	r0, [r2, #4]
   271bc:	cmp	r0, #0
   271c0:	beq	27378 <__flatcc_fb_gen_c_json_printer@@Base+0xc48>
   271c4:	ldr	r2, [r3, r0]
   271c8:	cmp	r5, r8
   271cc:	add	r2, r2, #4
   271d0:	add	r0, r3, r0
   271d4:	lsl	r3, r5, #2
   271d8:	add	r0, r0, r2
   271dc:	add	r2, r6, r3
   271e0:	bcs	276d0 <__flatcc_fb_gen_c_json_printer@@Base+0xfa0>
   271e4:	ldr	r8, [r6, r5, lsl #2]
   271e8:	adds	r1, r2, r8
   271ec:	beq	276cc <__flatcc_fb_gen_c_json_printer@@Base+0xf9c>
   271f0:	ldr	r2, [r2, r8]
   271f4:	sub	r2, r1, r2
   271f8:	ldrh	ip, [r2]
   271fc:	cmp	ip, #5
   27200:	bls	27378 <__flatcc_fb_gen_c_json_printer@@Base+0xc48>
   27204:	ldrh	ip, [r2, #4]
   27208:	cmp	ip, #0
   2720c:	beq	27378 <__flatcc_fb_gen_c_json_printer@@Base+0xc48>
   27210:	ldr	r2, [r1, ip]
   27214:	add	r1, r1, ip
   27218:	add	r2, r2, #4
   2721c:	adds	r1, r1, r2
   27220:	moveq	sl, #0
   27224:	ldrne	sl, [r1, #-4]
   27228:	cmp	r0, #0
   2722c:	beq	273d0 <__flatcc_fb_gen_c_json_printer@@Base+0xca0>
   27230:	ldr	r9, [r0, #-4]
   27234:	str	r3, [sp, #4]
   27238:	cmp	sl, r9
   2723c:	movcc	r2, sl
   27240:	movcs	r2, r9
   27244:	bl	14130 <strncmp@plt>
   27248:	ldr	r3, [sp, #4]
   2724c:	cmp	r0, #0
   27250:	bne	2738c <__flatcc_fb_gen_c_json_printer@@Base+0xc5c>
   27254:	cmp	sl, r9
   27258:	bhi	27390 <__flatcc_fb_gen_c_json_printer@@Base+0xc60>
   2725c:	ldr	r3, [sp, #12]
   27260:	sub	r3, r3, #1
   27264:	str	r3, [sp, #12]
   27268:	cmn	r3, #1
   2726c:	ldr	r3, [sp, #8]
   27270:	sub	r3, r3, #2
   27274:	str	r3, [sp, #8]
   27278:	beq	27470 <__flatcc_fb_gen_c_json_printer@@Base+0xd40>
   2727c:	ldr	r2, [sp, #8]
   27280:	ldr	r3, [sp]
   27284:	cmp	r3, r2
   27288:	movcs	r9, r2
   2728c:	ldrcs	r4, [sp, #12]
   27290:	bcc	2725c <__flatcc_fb_gen_c_json_printer@@Base+0xb2c>
   27294:	ldr	r3, [sp]
   27298:	cmp	r3, r9
   2729c:	bls	27180 <__flatcc_fb_gen_c_json_printer@@Base+0xa50>
   272a0:	ldr	r8, [r6, #-4]
   272a4:	lsl	r3, r9, #2
   272a8:	cmp	r8, r9
   272ac:	add	r1, r6, r3
   272b0:	bls	276d0 <__flatcc_fb_gen_c_json_printer@@Base+0xfa0>
   272b4:	ldr	r0, [r6, r9, lsl #2]
   272b8:	adds	r2, r1, r0
   272bc:	beq	276cc <__flatcc_fb_gen_c_json_printer@@Base+0xf9c>
   272c0:	ldr	r1, [r1, r0]
   272c4:	sub	r1, r2, r1
   272c8:	ldrh	r0, [r1]
   272cc:	cmp	r0, #5
   272d0:	bls	27378 <__flatcc_fb_gen_c_json_printer@@Base+0xc48>
   272d4:	ldrh	r1, [r1, #4]
   272d8:	cmp	r1, #0
   272dc:	beq	27378 <__flatcc_fb_gen_c_json_printer@@Base+0xc48>
   272e0:	ldr	r0, [r2, r1]
   272e4:	add	r5, r9, #1
   272e8:	add	r2, r2, r1
   272ec:	add	r3, r3, #4
   272f0:	add	r0, r0, #4
   272f4:	cmp	r8, r5
   272f8:	add	r0, r2, r0
   272fc:	add	r2, r6, r3
   27300:	bls	276d0 <__flatcc_fb_gen_c_json_printer@@Base+0xfa0>
   27304:	ldr	r3, [r6, r3]
   27308:	adds	r1, r2, r3
   2730c:	beq	276cc <__flatcc_fb_gen_c_json_printer@@Base+0xf9c>
   27310:	ldr	r3, [r2, r3]
   27314:	sub	r3, r1, r3
   27318:	ldrh	r2, [r3]
   2731c:	cmp	r2, #5
   27320:	bls	27378 <__flatcc_fb_gen_c_json_printer@@Base+0xc48>
   27324:	ldrh	r2, [r3, #4]
   27328:	cmp	r2, #0
   2732c:	beq	27378 <__flatcc_fb_gen_c_json_printer@@Base+0xc48>
   27330:	ldr	r3, [r1, r2]
   27334:	add	r1, r1, r2
   27338:	add	r3, r3, #4
   2733c:	adds	r1, r1, r3
   27340:	beq	27370 <__flatcc_fb_gen_c_json_printer@@Base+0xc40>
   27344:	cmp	r0, #0
   27348:	ldr	sl, [r1, #-4]
   2734c:	beq	273c0 <__flatcc_fb_gen_c_json_printer@@Base+0xc90>
   27350:	ldr	r7, [r0, #-4]
   27354:	cmp	sl, r7
   27358:	movcc	r2, sl
   2735c:	movcs	r2, r7
   27360:	bl	14130 <strncmp@plt>
   27364:	cmp	r0, #0
   27368:	beq	273c4 <__flatcc_fb_gen_c_json_printer@@Base+0xc94>
   2736c:	blt	27188 <__flatcc_fb_gen_c_json_printer@@Base+0xa58>
   27370:	mov	r5, r9
   27374:	b	27188 <__flatcc_fb_gen_c_json_printer@@Base+0xa58>
   27378:	ldr	r3, [pc, #908]	; 2770c <__flatcc_fb_gen_c_json_printer@@Base+0xfdc>
   2737c:	mov	r2, #195	; 0xc3
   27380:	ldr	r1, [pc, #888]	; 27700 <__flatcc_fb_gen_c_json_printer@@Base+0xfd0>
   27384:	ldr	r0, [pc, #892]	; 27708 <__flatcc_fb_gen_c_json_printer@@Base+0xfd8>
   27388:	bl	14148 <__assert_fail@plt>
   2738c:	bge	2725c <__flatcc_fb_gen_c_json_printer@@Base+0xb2c>
   27390:	sub	r4, r4, r5
   27394:	ldr	r2, [sp]
   27398:	lsl	r4, r4, #2
   2739c:	lsl	r9, r5, #1
   273a0:	sub	r8, r8, r4
   273a4:	add	r7, r7, r4
   273a8:	cmp	r2, r9
   273ac:	str	r8, [r6, fp]
   273b0:	mov	r4, r5
   273b4:	str	r7, [r6, r3]
   273b8:	bcs	27294 <__flatcc_fb_gen_c_json_printer@@Base+0xb64>
   273bc:	b	2725c <__flatcc_fb_gen_c_json_printer@@Base+0xb2c>
   273c0:	mov	r7, #0
   273c4:	cmp	sl, r7
   273c8:	movls	r5, r9
   273cc:	b	27188 <__flatcc_fb_gen_c_json_printer@@Base+0xa58>
   273d0:	mov	r9, #0
   273d4:	b	27254 <__flatcc_fb_gen_c_json_printer@@Base+0xb24>
   273d8:	ldr	r3, [sp, #8]
   273dc:	cmp	fp, r3
   273e0:	bhi	27670 <__flatcc_fb_gen_c_json_printer@@Base+0xf40>
   273e4:	ldr	r3, [sp]
   273e8:	cmp	r3, #0
   273ec:	ldr	r3, [sp, #4]
   273f0:	add	r3, r3, #4
   273f4:	str	r3, [sp, #4]
   273f8:	bne	27498 <__flatcc_fb_gen_c_json_printer@@Base+0xd68>
   273fc:	ldr	r3, [sp, #16]
   27400:	ldr	r1, [r3, #-4]
   27404:	ldr	r3, [sp, #20]
   27408:	add	r3, r3, #1
   2740c:	cmp	r3, r1
   27410:	str	r3, [sp, #20]
   27414:	bcs	27468 <__flatcc_fb_gen_c_json_printer@@Base+0xd38>
   27418:	ldr	r2, [sp, #28]
   2741c:	mov	r3, r2
   27420:	add	r2, r2, #4
   27424:	ldr	r0, [r3]
   27428:	str	r2, [sp, #28]
   2742c:	adds	r2, r3, r0
   27430:	beq	276e4 <__flatcc_fb_gen_c_json_printer@@Base+0xfb4>
   27434:	ldr	r3, [r3, r0]
   27438:	sub	r3, r2, r3
   2743c:	ldrh	r0, [r3]
   27440:	cmp	r0, #7
   27444:	bls	27454 <__flatcc_fb_gen_c_json_printer@@Base+0xd24>
   27448:	ldrh	r3, [r3, #6]
   2744c:	cmp	r3, #0
   27450:	bne	27140 <__flatcc_fb_gen_c_json_printer@@Base+0xa10>
   27454:	ldr	r3, [pc, #692]	; 27710 <__flatcc_fb_gen_c_json_printer@@Base+0xfe0>
   27458:	mov	r2, #224	; 0xe0
   2745c:	ldr	r1, [pc, #668]	; 27700 <__flatcc_fb_gen_c_json_printer@@Base+0xfd0>
   27460:	ldr	r0, [pc, #672]	; 27708 <__flatcc_fb_gen_c_json_printer@@Base+0xfd8>
   27464:	bl	14148 <__assert_fail@plt>
   27468:	add	sp, sp, #36	; 0x24
   2746c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27470:	ldr	r3, [sp]
   27474:	cmp	r3, #0
   27478:	beq	273fc <__flatcc_fb_gen_c_json_printer@@Base+0xccc>
   2747c:	ldr	r2, [sp, #24]
   27480:	rsb	r3, r2, r2, lsl #30
   27484:	add	r2, r6, r2, lsl #2
   27488:	lsl	r3, r3, #2
   2748c:	add	r3, r3, #4
   27490:	str	r2, [sp, #12]
   27494:	str	r3, [sp, #4]
   27498:	ldr	r1, [sp, #12]
   2749c:	ldr	r0, [sp]
   274a0:	ldr	r3, [r6]
   274a4:	sub	r0, r0, #1
   274a8:	ldr	r2, [r1, #-4]
   274ac:	str	r0, [sp]
   274b0:	ldr	r0, [sp, #4]
   274b4:	mov	r5, #0
   274b8:	sub	r2, r2, r0
   274bc:	str	r2, [r6]
   274c0:	mov	r2, r1
   274c4:	add	r3, r0, r3
   274c8:	str	r3, [r2, #-4]!
   274cc:	mov	fp, r5
   274d0:	str	r2, [sp, #12]
   274d4:	ldr	r3, [sp]
   274d8:	b	2769c <__flatcc_fb_gen_c_json_printer@@Base+0xf6c>
   274dc:	lsl	r3, fp, #2
   274e0:	cmp	r8, fp
   274e4:	add	r0, r6, r3
   274e8:	bls	276d0 <__flatcc_fb_gen_c_json_printer@@Base+0xfa0>
   274ec:	ldr	r1, [r6, fp, lsl #2]
   274f0:	adds	r2, r0, r1
   274f4:	beq	276cc <__flatcc_fb_gen_c_json_printer@@Base+0xf9c>
   274f8:	ldr	r1, [r0, r1]
   274fc:	sub	r1, r2, r1
   27500:	ldrh	r0, [r1]
   27504:	cmp	r0, #5
   27508:	bls	27378 <__flatcc_fb_gen_c_json_printer@@Base+0xc48>
   2750c:	ldrh	r1, [r1, #4]
   27510:	cmp	r1, #0
   27514:	beq	27378 <__flatcc_fb_gen_c_json_printer@@Base+0xc48>
   27518:	ldr	r0, [r2, r1]
   2751c:	add	r4, fp, #1
   27520:	add	r2, r2, r1
   27524:	add	r3, r3, #4
   27528:	add	r0, r0, #4
   2752c:	cmp	r8, r4
   27530:	add	r0, r2, r0
   27534:	add	r2, r6, r3
   27538:	bls	276d0 <__flatcc_fb_gen_c_json_printer@@Base+0xfa0>
   2753c:	ldr	r3, [r6, r3]
   27540:	adds	r1, r2, r3
   27544:	beq	276cc <__flatcc_fb_gen_c_json_printer@@Base+0xf9c>
   27548:	ldr	r3, [r2, r3]
   2754c:	sub	r3, r1, r3
   27550:	ldrh	r2, [r3]
   27554:	cmp	r2, #5
   27558:	bls	27378 <__flatcc_fb_gen_c_json_printer@@Base+0xc48>
   2755c:	ldrh	r2, [r3, #4]
   27560:	cmp	r2, #0
   27564:	beq	27378 <__flatcc_fb_gen_c_json_printer@@Base+0xc48>
   27568:	ldr	r3, [r1, r2]
   2756c:	add	r1, r1, r2
   27570:	add	r3, r3, #4
   27574:	adds	r1, r1, r3
   27578:	beq	276a8 <__flatcc_fb_gen_c_json_printer@@Base+0xf78>
   2757c:	cmp	r0, #0
   27580:	ldr	r7, [r1, #-4]
   27584:	beq	276b0 <__flatcc_fb_gen_c_json_printer@@Base+0xf80>
   27588:	ldr	r9, [r0, #-4]
   2758c:	cmp	r7, r9
   27590:	movcc	r2, r7
   27594:	movcs	r2, r9
   27598:	bl	14130 <strncmp@plt>
   2759c:	cmp	r0, #0
   275a0:	beq	276b4 <__flatcc_fb_gen_c_json_printer@@Base+0xf84>
   275a4:	bge	276a8 <__flatcc_fb_gen_c_json_printer@@Base+0xf78>
   275a8:	cmp	r8, r5
   275ac:	add	r9, r6, r5, lsl #2
   275b0:	bls	276d0 <__flatcc_fb_gen_c_json_printer@@Base+0xfa0>
   275b4:	ldr	r7, [r9]
   275b8:	adds	r3, r9, r7
   275bc:	beq	276cc <__flatcc_fb_gen_c_json_printer@@Base+0xf9c>
   275c0:	ldr	r2, [r9, r7]
   275c4:	sub	r2, r3, r2
   275c8:	ldrh	r1, [r2]
   275cc:	cmp	r1, #5
   275d0:	bls	27378 <__flatcc_fb_gen_c_json_printer@@Base+0xc48>
   275d4:	ldrh	r2, [r2, #4]
   275d8:	cmp	r2, #0
   275dc:	beq	27378 <__flatcc_fb_gen_c_json_printer@@Base+0xc48>
   275e0:	ldr	r0, [r3, r2]
   275e4:	lsl	sl, r4, #2
   275e8:	add	r3, r3, r2
   275ec:	add	r0, r0, #4
   275f0:	cmp	r8, r4
   275f4:	add	r0, r3, r0
   275f8:	add	r3, r6, sl
   275fc:	bls	276d0 <__flatcc_fb_gen_c_json_printer@@Base+0xfa0>
   27600:	ldr	r8, [r6, r4, lsl #2]
   27604:	adds	r1, r3, r8
   27608:	beq	276cc <__flatcc_fb_gen_c_json_printer@@Base+0xf9c>
   2760c:	ldr	r3, [r3, r8]
   27610:	sub	r3, r1, r3
   27614:	ldrh	r2, [r3]
   27618:	cmp	r2, #5
   2761c:	bls	27378 <__flatcc_fb_gen_c_json_printer@@Base+0xc48>
   27620:	ldrh	r2, [r3, #4]
   27624:	cmp	r2, #0
   27628:	beq	27378 <__flatcc_fb_gen_c_json_printer@@Base+0xc48>
   2762c:	ldr	r3, [r1, r2]
   27630:	add	r1, r1, r2
   27634:	add	r3, r3, #4
   27638:	adds	r1, r1, r3
   2763c:	beq	273e4 <__flatcc_fb_gen_c_json_printer@@Base+0xcb4>
   27640:	cmp	r0, #0
   27644:	ldr	fp, [r1, #-4]
   27648:	beq	276c4 <__flatcc_fb_gen_c_json_printer@@Base+0xf94>
   2764c:	ldr	r3, [r0, #-4]
   27650:	cmp	fp, r3
   27654:	movcc	r2, fp
   27658:	movcs	r2, r3
   2765c:	str	r3, [sp, #8]
   27660:	bl	14130 <strncmp@plt>
   27664:	cmp	r0, #0
   27668:	beq	273d8 <__flatcc_fb_gen_c_json_printer@@Base+0xca8>
   2766c:	bge	273e4 <__flatcc_fb_gen_c_json_printer@@Base+0xcb4>
   27670:	sub	r5, r5, r4
   27674:	ldr	r3, [sp]
   27678:	lsl	r5, r5, #2
   2767c:	lsl	fp, r4, #1
   27680:	sub	r8, r8, r5
   27684:	add	r7, r7, r5
   27688:	cmp	r3, fp
   2768c:	str	r8, [r9]
   27690:	mov	r5, r4
   27694:	str	r7, [r6, sl]
   27698:	bcc	273e4 <__flatcc_fb_gen_c_json_printer@@Base+0xcb4>
   2769c:	cmp	r3, fp
   276a0:	ldr	r8, [r6, #-4]
   276a4:	bhi	274dc <__flatcc_fb_gen_c_json_printer@@Base+0xdac>
   276a8:	mov	r4, fp
   276ac:	b	275a8 <__flatcc_fb_gen_c_json_printer@@Base+0xe78>
   276b0:	mov	r9, #0
   276b4:	cmp	r7, r9
   276b8:	movhi	fp, r4
   276bc:	mov	r4, fp
   276c0:	b	275a8 <__flatcc_fb_gen_c_json_printer@@Base+0xe78>
   276c4:	mov	r3, #0
   276c8:	b	273dc <__flatcc_fb_gen_c_json_printer@@Base+0xcac>
   276cc:	bl	14184 <__assert_fail@plt+0x3c>
   276d0:	ldr	r3, [pc, #60]	; 27714 <__flatcc_fb_gen_c_json_printer@@Base+0xfe4>
   276d4:	mov	r2, #192	; 0xc0
   276d8:	ldr	r1, [pc, #32]	; 27700 <__flatcc_fb_gen_c_json_printer@@Base+0xfd0>
   276dc:	ldr	r0, [pc, #52]	; 27718 <__flatcc_fb_gen_c_json_printer@@Base+0xfe8>
   276e0:	bl	14148 <__assert_fail@plt>
   276e4:	ldr	r3, [pc, #36]	; 27710 <__flatcc_fb_gen_c_json_printer@@Base+0xfe0>
   276e8:	mov	r2, #224	; 0xe0
   276ec:	ldr	r1, [pc, #12]	; 27700 <__flatcc_fb_gen_c_json_printer@@Base+0xfd0>
   276f0:	ldr	r0, [pc, #12]	; 27704 <__flatcc_fb_gen_c_json_printer@@Base+0xfd4>
   276f4:	bl	14148 <__assert_fail@plt>
   276f8:	movtpl	r4, #9794	; 0x2642
   276fc:	andeq	sl, r5, r0, lsr #15
   27700:	andeq	sl, r5, r8, lsl #17
   27704:	andeq	sl, r5, r8, ror #17
   27708:	andeq	sl, r5, r0, lsl #20
   2770c:	andeq	sl, r5, r4, ror #14
   27710:			; <UNDEFINED> instruction: 0x0005a7bc
   27714:	ldrdeq	sl, [r5], -r8
   27718:	andeq	sl, r5, r4, lsr #20
   2771c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   27720:	vpush	{d8-d9}
   27724:	ldr	r5, [r3, #60]	; 0x3c
   27728:	mov	r4, r1
   2772c:	mov	r9, r0
   27730:	sub	sp, sp, #100	; 0x64
   27734:	mov	r1, #0
   27738:	str	r2, [sp]
   2773c:	add	r0, sp, #52	; 0x34
   27740:	mov	r2, #44	; 0x2c
   27744:	mov	r6, r3
   27748:	str	r3, [sp, #44]	; 0x2c
   2774c:	bl	140ac <memset@plt>
   27750:	add	r2, sp, #52	; 0x34
   27754:	mov	r0, r5
   27758:	ldr	r1, [pc, #1272]	; 27c58 <__flatcc_fb_gen_c_json_printer@@Base+0x1528>
   2775c:	str	r4, [sp, #52]	; 0x34
   27760:	str	r6, [sp, #92]	; 0x5c
   27764:	bl	2b300 <fb_scope_table_visit@@Base>
   27768:	ldr	r4, [sp, #56]	; 0x38
   2776c:	mov	r1, #8
   27770:	mov	r0, r4
   27774:	bl	13fa4 <calloc@plt>
   27778:	ldr	fp, [sp, #60]	; 0x3c
   2777c:	mov	r1, #8
   27780:	mov	r6, r0
   27784:	mov	r0, fp
   27788:	str	r6, [sp, #68]	; 0x44
   2778c:	bl	13fa4 <calloc@plt>
   27790:	ldr	sl, [sp, #64]	; 0x40
   27794:	mov	r8, r0
   27798:	str	r0, [sp, #72]	; 0x48
   2779c:	mov	r0, sl
   277a0:	bl	14040 <malloc@plt>
   277a4:	cmp	r4, #0
   277a8:	clz	r3, r6
   277ac:	lsr	r3, r3, #5
   277b0:	movle	r3, #0
   277b4:	cmp	r3, #0
   277b8:	str	r6, [sp, #80]	; 0x50
   277bc:	str	r8, [sp, #84]	; 0x54
   277c0:	mov	r7, r0
   277c4:	str	r0, [sp, #76]	; 0x4c
   277c8:	str	r0, [sp, #88]	; 0x58
   277cc:	bne	283d8 <__flatcc_fb_gen_c_json_printer@@Base+0x1ca8>
   277d0:	cmp	fp, #0
   277d4:	clz	r3, r8
   277d8:	lsr	r3, r3, #5
   277dc:	movle	r3, #0
   277e0:	cmp	r3, #0
   277e4:	bne	283c8 <__flatcc_fb_gen_c_json_printer@@Base+0x1c98>
   277e8:	cmp	sl, #0
   277ec:	clz	r4, r0
   277f0:	lsr	r4, r4, #5
   277f4:	moveq	r4, #0
   277f8:	cmp	r4, #0
   277fc:	bne	283c8 <__flatcc_fb_gen_c_json_printer@@Base+0x1c98>
   27800:	mov	r0, r5
   27804:	add	r2, sp, #52	; 0x34
   27808:	ldr	r1, [pc, #1100]	; 27c5c <__flatcc_fb_gen_c_json_printer@@Base+0x152c>
   2780c:	bl	2b300 <fb_scope_table_visit@@Base>
   27810:	ldr	r6, [sp, #56]	; 0x38
   27814:	ldr	r7, [sp, #68]	; 0x44
   27818:	ldr	r3, [pc, #1088]	; 27c60 <__flatcc_fb_gen_c_json_printer@@Base+0x1530>
   2781c:	mov	r0, r7
   27820:	mov	r1, r6
   27824:	mov	r2, #8
   27828:	bl	14118 <qsort@plt>
   2782c:	cmp	r6, #0
   27830:	movgt	r3, r4
   27834:	ble	2784c <__flatcc_fb_gen_c_json_printer@@Base+0x111c>
   27838:	ldr	r2, [r7, r3, lsl #3]
   2783c:	str	r3, [r2, #124]	; 0x7c
   27840:	add	r3, r3, #1
   27844:	cmp	r6, r3
   27848:	bne	27838 <__flatcc_fb_gen_c_json_printer@@Base+0x1108>
   2784c:	ldr	r4, [sp, #60]	; 0x3c
   27850:	ldr	r6, [sp, #72]	; 0x48
   27854:	ldr	r3, [pc, #1028]	; 27c60 <__flatcc_fb_gen_c_json_printer@@Base+0x1530>
   27858:	mov	r0, r6
   2785c:	mov	r1, r4
   27860:	mov	r2, #8
   27864:	bl	14118 <qsort@plt>
   27868:	cmp	r4, #0
   2786c:	movgt	r3, #0
   27870:	ble	27888 <__flatcc_fb_gen_c_json_printer@@Base+0x1158>
   27874:	ldr	r2, [r6, r3, lsl #3]
   27878:	str	r3, [r2, #124]	; 0x7c
   2787c:	add	r3, r3, #1
   27880:	cmp	r4, r3
   27884:	bne	27874 <__flatcc_fb_gen_c_json_printer@@Base+0x1144>
   27888:	ldr	r0, [sp, #56]	; 0x38
   2788c:	cmp	r0, #0
   27890:	movle	r3, #0
   27894:	strle	r3, [sp, #20]
   27898:	ble	278b0 <__flatcc_fb_gen_c_json_printer@@Base+0x1180>
   2789c:	lsl	r0, r0, #2
   278a0:	bl	14040 <malloc@plt>
   278a4:	subs	r3, r0, #0
   278a8:	str	r3, [sp, #20]
   278ac:	beq	28414 <__flatcc_fb_gen_c_json_printer@@Base+0x1ce4>
   278b0:	ldr	r3, [sp]
   278b4:	mov	r2, #0
   278b8:	ldr	r1, [pc, #932]	; 27c64 <__flatcc_fb_gen_c_json_printer@@Base+0x1534>
   278bc:	ldr	r3, [r3]
   278c0:	mov	r0, r9
   278c4:	cmp	r3, #0
   278c8:	movne	r3, #2
   278cc:	bl	3afbc <flatcc_builder_start_buffer@@Base>
   278d0:	cmp	r0, #0
   278d4:	bne	278e4 <__flatcc_fb_gen_c_json_printer@@Base+0x11b4>
   278d8:	mov	r1, #5
   278dc:	mov	r0, r9
   278e0:	bl	3cb9c <flatcc_builder_start_table@@Base>
   278e4:	ldr	r3, [sp, #44]	; 0x2c
   278e8:	ldrh	r4, [r3, #16]
   278ec:	cmp	r4, #2
   278f0:	beq	28384 <__flatcc_fb_gen_c_json_printer@@Base+0x1c54>
   278f4:	ldr	r3, [sp, #44]	; 0x2c
   278f8:	ldrh	r3, [r3, #32]
   278fc:	cmp	r3, #2
   27900:	beq	28350 <__flatcc_fb_gen_c_json_printer@@Base+0x1c20>
   27904:	ldr	r3, [sp, #56]	; 0x38
   27908:	ldr	r2, [sp, #68]	; 0x44
   2790c:	cmp	r3, #0
   27910:	str	r3, [sp, #36]	; 0x24
   27914:	str	r2, [sp, #40]	; 0x28
   27918:	ble	27eac <__flatcc_fb_gen_c_json_printer@@Base+0x177c>
   2791c:	ldr	r3, [sp, #20]
   27920:	vldr	d9, [pc, #808]	; 27c50 <__flatcc_fb_gen_c_json_printer@@Base+0x1520>
   27924:	sub	r3, r3, #4
   27928:	str	r3, [sp, #32]
   2792c:	mov	r3, #0
   27930:	str	r2, [sp, #28]
   27934:	str	r3, [sp, #24]
   27938:	ldr	r2, [sp, #24]
   2793c:	ldr	r3, [sp, #40]	; 0x28
   27940:	mov	r1, #5
   27944:	mov	r0, r9
   27948:	ldr	r3, [r3, r2, lsl #3]
   2794c:	str	r3, [sp]
   27950:	bl	3cb9c <flatcc_builder_start_table@@Base>
   27954:	ldr	r3, [sp, #28]
   27958:	mov	r0, r9
   2795c:	ldr	r1, [r3, #4]
   27960:	bl	3e94c <flatcc_builder_create_string_str@@Base>
   27964:	subs	r4, r0, #0
   27968:	beq	27980 <__flatcc_fb_gen_c_json_printer@@Base+0x1250>
   2796c:	mov	r1, #0
   27970:	mov	r0, r9
   27974:	bl	3f0a4 <flatcc_builder_table_add_offset@@Base>
   27978:	cmp	r0, #0
   2797c:	strne	r4, [r0]
   27980:	mov	r0, r9
   27984:	bl	3c554 <flatcc_builder_start_offset_vector@@Base>
   27988:	ldr	r3, [sp]
   2798c:	ldr	r4, [r3, #20]
   27990:	cmp	r4, #0
   27994:	movne	sl, #0
   27998:	movne	fp, sl
   2799c:	bne	27a8c <__flatcc_fb_gen_c_json_printer@@Base+0x135c>
   279a0:	b	27dfc <__flatcc_fb_gen_c_json_printer@@Base+0x16cc>
   279a4:	tst	r5, #128	; 0x80
   279a8:	beq	27a98 <__flatcc_fb_gen_c_json_printer@@Base+0x1368>
   279ac:	mov	r7, #1
   279b0:	str	r7, [sp, #4]
   279b4:	ldrh	r3, [r4, #24]
   279b8:	ands	r8, r5, #4
   279bc:	movne	r2, #1
   279c0:	moveq	r2, #0
   279c4:	cmp	r3, #14
   279c8:	str	r2, [sp, #16]
   279cc:	beq	27cb8 <__flatcc_fb_gen_c_json_printer@@Base+0x1588>
   279d0:	mov	r1, #9
   279d4:	mov	r0, r9
   279d8:	bl	3cb9c <flatcc_builder_start_table@@Base>
   279dc:	ldr	r3, [r4, #4]
   279e0:	mov	r0, r9
   279e4:	ldm	r3, {r1, r2}
   279e8:	bl	3e868 <flatcc_builder_create_string@@Base>
   279ec:	subs	r6, r0, #0
   279f0:	beq	27a08 <__flatcc_fb_gen_c_json_printer@@Base+0x12d8>
   279f4:	mov	r1, fp
   279f8:	mov	r0, r9
   279fc:	bl	3f0a4 <flatcc_builder_table_add_offset@@Base>
   27a00:	cmp	r0, #0
   27a04:	strne	r6, [r0]
   27a08:	ldrh	r2, [r4, #24]
   27a0c:	ldr	r1, [r4, #16]
   27a10:	mov	r0, r9
   27a14:	bl	26e1c <__flatcc_fb_gen_c_json_printer@@Base+0x6ec>
   27a18:	subs	r6, r0, #0
   27a1c:	bne	27c38 <__flatcc_fb_gen_c_json_printer@@Base+0x1508>
   27a20:	ldr	r3, [sp]
   27a24:	ldrh	r3, [r3, #8]
   27a28:	cmp	r3, #0
   27a2c:	beq	27aa8 <__flatcc_fb_gen_c_json_printer@@Base+0x1378>
   27a30:	cmp	r3, #1
   27a34:	bne	27a44 <__flatcc_fb_gen_c_json_printer@@Base+0x1314>
   27a38:	ldrh	r5, [r4, #80]	; 0x50
   27a3c:	cmp	r5, #0
   27a40:	bne	280a4 <__flatcc_fb_gen_c_json_printer@@Base+0x1974>
   27a44:	cmp	r8, #0
   27a48:	bne	27b68 <__flatcc_fb_gen_c_json_printer@@Base+0x1438>
   27a4c:	mov	r2, #2
   27a50:	ldr	r1, [pc, #536]	; 27c70 <__flatcc_fb_gen_c_json_printer@@Base+0x1540>
   27a54:	mov	r0, r9
   27a58:	bl	3d544 <flatcc_builder_check_required@@Base>
   27a5c:	cmp	r0, #0
   27a60:	beq	283b4 <__flatcc_fb_gen_c_json_printer@@Base+0x1c84>
   27a64:	mov	r0, r9
   27a68:	bl	3d5dc <flatcc_builder_end_table@@Base>
   27a6c:	subs	r1, r0, #0
   27a70:	beq	27a7c <__flatcc_fb_gen_c_json_printer@@Base+0x134c>
   27a74:	mov	r0, r9
   27a78:	bl	3bc84 <flatcc_builder_offset_vector_push@@Base>
   27a7c:	ldr	r4, [r4]
   27a80:	orr	sl, sl, r7
   27a84:	cmp	r4, #0
   27a88:	beq	27dfc <__flatcc_fb_gen_c_json_printer@@Base+0x16cc>
   27a8c:	cmp	sl, #0
   27a90:	ldrh	r5, [r4, #72]	; 0x48
   27a94:	beq	279a4 <__flatcc_fb_gen_c_json_printer@@Base+0x1274>
   27a98:	mov	r3, #0
   27a9c:	mov	r7, fp
   27aa0:	str	r3, [sp, #4]
   27aa4:	b	279b4 <__flatcc_fb_gen_c_json_printer@@Base+0x1284>
   27aa8:	ldrh	r3, [r4, #56]	; 0x38
   27aac:	sub	r3, r3, #3
   27ab0:	cmp	r3, #3
   27ab4:	ldrls	pc, [pc, r3, lsl #2]
   27ab8:	b	28458 <__flatcc_fb_gen_c_json_printer@@Base+0x1d28>
   27abc:	andeq	r7, r2, ip, lsl #23
   27ac0:	andeq	r7, r2, ip, asr #21
   27ac4:	andeq	r7, r2, ip, asr #21
   27ac8:	andeq	r7, r2, r0, lsl #24
   27acc:	ldrd	r2, [r4, #48]	; 0x30
   27ad0:	strd	r2, [sp, #8]
   27ad4:	orrs	r3, r2, r3
   27ad8:	bne	27c14 <__flatcc_fb_gen_c_json_printer@@Base+0x14e4>
   27adc:	ldrh	r6, [r4, #96]	; 0x60
   27ae0:	cmp	r6, #0
   27ae4:	moveq	r6, #4
   27ae8:	bne	27bc8 <__flatcc_fb_gen_c_json_printer@@Base+0x1498>
   27aec:	mov	r3, #2
   27af0:	mov	r2, r3
   27af4:	mov	r1, #3
   27af8:	mov	r0, r9
   27afc:	bl	3ed08 <flatcc_builder_table_add@@Base>
   27b00:	cmp	r0, #0
   27b04:	strhne	r6, [r0]
   27b08:	ldr	r3, [sp, #4]
   27b0c:	cmp	r3, #0
   27b10:	beq	27b34 <__flatcc_fb_gen_c_json_printer@@Base+0x1404>
   27b14:	mov	r3, #1
   27b18:	mov	r2, r3
   27b1c:	mov	r1, #8
   27b20:	mov	r0, r9
   27b24:	bl	3ed08 <flatcc_builder_table_add@@Base>
   27b28:	cmp	r0, #0
   27b2c:	movne	r3, #1
   27b30:	strbne	r3, [r0]
   27b34:	tst	r5, #256	; 0x100
   27b38:	beq	27a44 <__flatcc_fb_gen_c_json_printer@@Base+0x1314>
   27b3c:	mov	r3, #1
   27b40:	mov	r2, r3
   27b44:	mov	r1, #7
   27b48:	mov	r0, r9
   27b4c:	bl	3ed08 <flatcc_builder_table_add@@Base>
   27b50:	cmp	r0, #0
   27b54:	beq	27a44 <__flatcc_fb_gen_c_json_printer@@Base+0x1314>
   27b58:	mov	r3, #1
   27b5c:	cmp	r8, #0
   27b60:	strb	r3, [r0]
   27b64:	beq	27a4c <__flatcc_fb_gen_c_json_printer@@Base+0x131c>
   27b68:	mov	r3, #1
   27b6c:	mov	r2, r3
   27b70:	mov	r1, #6
   27b74:	mov	r0, r9
   27b78:	bl	3ed08 <flatcc_builder_table_add@@Base>
   27b7c:	cmp	r0, #0
   27b80:	ldrbne	r3, [sp, #16]
   27b84:	strbne	r3, [r0]
   27b88:	b	27a4c <__flatcc_fb_gen_c_json_printer@@Base+0x131c>
   27b8c:	vldr	d8, [r4, #48]	; 0x30
   27b90:	vcmp.f64	d8, d9
   27b94:	vmrs	APSR_nzcv, fpscr
   27b98:	beq	27adc <__flatcc_fb_gen_c_json_printer@@Base+0x13ac>
   27b9c:	mov	r3, #8
   27ba0:	mov	r2, r3
   27ba4:	mov	r1, #5
   27ba8:	mov	r0, r9
   27bac:	bl	3ed08 <flatcc_builder_table_add@@Base>
   27bb0:	ldrh	r6, [r4, #96]	; 0x60
   27bb4:	cmp	r0, #0
   27bb8:	vstrne	d8, [r0]
   27bbc:	cmp	r6, #0
   27bc0:	moveq	r6, #4
   27bc4:	beq	27aec <__flatcc_fb_gen_c_json_printer@@Base+0x13bc>
   27bc8:	mov	r3, #2
   27bcc:	mov	r2, r3
   27bd0:	mov	r1, r3
   27bd4:	mov	r0, r9
   27bd8:	bl	3ed08 <flatcc_builder_table_add@@Base>
   27bdc:	cmp	r0, #0
   27be0:	strhne	r6, [r0]
   27be4:	ldrh	r6, [r4, #96]	; 0x60
   27be8:	add	r6, r6, #2
   27bec:	lsl	r6, r6, #1
   27bf0:	uxth	r6, r6
   27bf4:	cmp	r6, #0
   27bf8:	beq	27b08 <__flatcc_fb_gen_c_json_printer@@Base+0x13d8>
   27bfc:	b	27aec <__flatcc_fb_gen_c_json_printer@@Base+0x13bc>
   27c00:	ldrb	r2, [r4, #48]	; 0x30
   27c04:	mov	r3, #0
   27c08:	strd	r2, [sp, #8]
   27c0c:	orrs	r3, r2, r3
   27c10:	beq	27adc <__flatcc_fb_gen_c_json_printer@@Base+0x13ac>
   27c14:	mov	r3, #8
   27c18:	mov	r2, r3
   27c1c:	mov	r1, #4
   27c20:	mov	r0, r9
   27c24:	bl	3ed08 <flatcc_builder_table_add@@Base>
   27c28:	cmp	r0, #0
   27c2c:	ldrdne	r2, [sp, #8]
   27c30:	strdne	r2, [r0]
   27c34:	b	27adc <__flatcc_fb_gen_c_json_printer@@Base+0x13ac>
   27c38:	mov	r1, #1
   27c3c:	mov	r0, r9
   27c40:	bl	3f0a4 <flatcc_builder_table_add_offset@@Base>
   27c44:	cmp	r0, #0
   27c48:	strne	r6, [r0]
   27c4c:	b	27a20 <__flatcc_fb_gen_c_json_printer@@Base+0x12f0>
	...
   27c58:	andeq	r6, r2, r8, lsl ip
   27c5c:	andeq	r6, r2, r0, lsl #24
   27c60:	andeq	r6, r2, r0, lsl lr
   27c64:	andeq	sl, r5, ip, asr sl
   27c68:	andeq	fp, r5, r8, lsl #2
   27c6c:	muleq	r5, ip, r7
   27c70:	strdeq	sl, [r5], -r0
   27c74:	andeq	sl, r5, r0, lsl r8
   27c78:	andeq	sl, r5, r0, lsr r8
   27c7c:	andeq	sl, r5, ip, asr #16
   27c80:	andeq	sl, r5, r8, ror #16
   27c84:	strdeq	sl, [r5], -r8
   27c88:	andeq	sl, r5, r4, ror #20
   27c8c:	andeq	sl, r5, r4, lsr r8
   27c90:	andeq	sl, r5, r8, lsl #23
   27c94:	andeq	sl, r5, r4, asr r8
   27c98:	andeq	sl, r5, r0, lsr #24
   27c9c:	andeq	sl, r5, r8, lsl r8
   27ca0:	strdeq	sl, [r5], -r4
   27ca4:	andeq	sl, r5, r0, ror r8
   27ca8:			; <UNDEFINED> instruction: 0x0005acb0
   27cac:	andeq	sl, r5, r8, lsl #15
   27cb0:	andeq	sl, r5, r0, lsl r9
   27cb4:	andeq	sl, r5, r0, ror r9
   27cb8:	ldr	r3, [r4, #16]
   27cbc:	ldrh	r3, [r3, #8]
   27cc0:	cmp	r3, #4
   27cc4:	bne	279d0 <__flatcc_fb_gen_c_json_printer@@Base+0x12a0>
   27cc8:	mov	r1, #9
   27ccc:	mov	r0, r9
   27cd0:	bl	3cb9c <flatcc_builder_start_table@@Base>
   27cd4:	mov	r0, r9
   27cd8:	bl	3c950 <flatcc_builder_start_string@@Base>
   27cdc:	ldr	r3, [r4, #4]
   27ce0:	mov	r0, r9
   27ce4:	ldm	r3, {r1, r2}
   27ce8:	bl	3bf74 <flatcc_builder_append_string@@Base>
   27cec:	mov	r2, #5
   27cf0:	ldr	r1, [pc, #-144]	; 27c68 <__flatcc_fb_gen_c_json_printer@@Base+0x1538>
   27cf4:	mov	r0, r9
   27cf8:	bl	3bf74 <flatcc_builder_append_string@@Base>
   27cfc:	mov	r0, r9
   27d00:	bl	3eb38 <flatcc_builder_end_string@@Base>
   27d04:	subs	r6, r0, #0
   27d08:	beq	27d20 <__flatcc_fb_gen_c_json_printer@@Base+0x15f0>
   27d0c:	mov	r1, fp
   27d10:	mov	r0, r9
   27d14:	bl	3f0a4 <flatcc_builder_table_add_offset@@Base>
   27d18:	cmp	r0, #0
   27d1c:	strne	r6, [r0]
   27d20:	mov	r1, #3
   27d24:	mov	r0, r9
   27d28:	bl	3cb9c <flatcc_builder_start_table@@Base>
   27d2c:	cmp	r0, #0
   27d30:	bne	27d94 <__flatcc_fb_gen_c_json_printer@@Base+0x1664>
   27d34:	mov	r3, #1
   27d38:	mov	r2, r3
   27d3c:	mov	r1, fp
   27d40:	mov	r0, r9
   27d44:	bl	3ed08 <flatcc_builder_table_add@@Base>
   27d48:	cmp	r0, #0
   27d4c:	beq	27d94 <__flatcc_fb_gen_c_json_printer@@Base+0x1664>
   27d50:	mov	r3, #1
   27d54:	strb	r3, [r0]
   27d58:	mov	r2, fp
   27d5c:	ldr	r1, [pc, #-248]	; 27c6c <__flatcc_fb_gen_c_json_printer@@Base+0x153c>
   27d60:	mov	r0, r9
   27d64:	bl	3d544 <flatcc_builder_check_required@@Base>
   27d68:	cmp	r0, #0
   27d6c:	beq	28488 <__flatcc_fb_gen_c_json_printer@@Base+0x1d58>
   27d70:	mov	r0, r9
   27d74:	bl	3d5dc <flatcc_builder_end_table@@Base>
   27d78:	subs	r6, r0, #0
   27d7c:	beq	27d94 <__flatcc_fb_gen_c_json_printer@@Base+0x1664>
   27d80:	mov	r1, #1
   27d84:	mov	r0, r9
   27d88:	bl	3f0a4 <flatcc_builder_table_add_offset@@Base>
   27d8c:	cmp	r0, #0
   27d90:	strne	r6, [r0]
   27d94:	ldrh	r6, [r4, #96]	; 0x60
   27d98:	add	r3, r6, #1
   27d9c:	lsl	r3, r3, #1
   27da0:	uxth	r3, r3
   27da4:	cmp	r3, #0
   27da8:	str	r3, [sp, #8]
   27dac:	bne	28308 <__flatcc_fb_gen_c_json_printer@@Base+0x1bd8>
   27db0:	sub	r6, r6, #1
   27db4:	uxth	r6, r6
   27db8:	cmp	r6, #0
   27dbc:	bne	282c0 <__flatcc_fb_gen_c_json_printer@@Base+0x1b90>
   27dc0:	cmp	r8, #0
   27dc4:	bne	282e4 <__flatcc_fb_gen_c_json_printer@@Base+0x1bb4>
   27dc8:	mov	r2, #2
   27dcc:	ldr	r1, [pc, #-356]	; 27c70 <__flatcc_fb_gen_c_json_printer@@Base+0x1540>
   27dd0:	mov	r0, r9
   27dd4:	bl	3d544 <flatcc_builder_check_required@@Base>
   27dd8:	cmp	r0, #0
   27ddc:	beq	283b4 <__flatcc_fb_gen_c_json_printer@@Base+0x1c84>
   27de0:	mov	r0, r9
   27de4:	bl	3d5dc <flatcc_builder_end_table@@Base>
   27de8:	subs	r1, r0, #0
   27dec:	beq	279d0 <__flatcc_fb_gen_c_json_printer@@Base+0x12a0>
   27df0:	mov	r0, r9
   27df4:	bl	3bc84 <flatcc_builder_offset_vector_push@@Base>
   27df8:	b	279d0 <__flatcc_fb_gen_c_json_printer@@Base+0x12a0>
   27dfc:	mov	r0, r9
   27e00:	bl	3dafc <flatcc_builder_end_offset_vector@@Base>
   27e04:	subs	r4, r0, #0
   27e08:	beq	27e20 <__flatcc_fb_gen_c_json_printer@@Base+0x16f0>
   27e0c:	mov	r1, #1
   27e10:	mov	r0, r9
   27e14:	bl	3f0a4 <flatcc_builder_table_add_offset@@Base>
   27e18:	cmp	r0, #0
   27e1c:	strne	r4, [r0]
   27e20:	ldr	r3, [sp]
   27e24:	ldrh	r3, [r3, #8]
   27e28:	cmp	r3, #1
   27e2c:	beq	2828c <__flatcc_fb_gen_c_json_printer@@Base+0x1b5c>
   27e30:	ldr	r3, [sp]
   27e34:	ldrh	r4, [r3, #104]	; 0x68
   27e38:	cmp	r4, #0
   27e3c:	beq	27e5c <__flatcc_fb_gen_c_json_printer@@Base+0x172c>
   27e40:	mov	r3, #4
   27e44:	mov	r2, r3
   27e48:	mov	r1, #3
   27e4c:	mov	r0, r9
   27e50:	bl	3ed08 <flatcc_builder_table_add@@Base>
   27e54:	cmp	r0, #0
   27e58:	strne	r4, [r0]
   27e5c:	mov	r2, #2
   27e60:	ldr	r1, [pc, #-500]	; 27c74 <__flatcc_fb_gen_c_json_printer@@Base+0x1544>
   27e64:	mov	r0, r9
   27e68:	bl	3d544 <flatcc_builder_check_required@@Base>
   27e6c:	cmp	r0, #0
   27e70:	beq	28460 <__flatcc_fb_gen_c_json_printer@@Base+0x1d30>
   27e74:	mov	r0, r9
   27e78:	bl	3d5dc <flatcc_builder_end_table@@Base>
   27e7c:	ldr	r3, [sp, #24]
   27e80:	ldr	r2, [sp, #36]	; 0x24
   27e84:	add	r3, r3, #1
   27e88:	str	r3, [sp, #24]
   27e8c:	cmp	r2, r3
   27e90:	ldr	r3, [sp, #28]
   27e94:	add	r3, r3, #8
   27e98:	str	r3, [sp, #28]
   27e9c:	ldr	r3, [sp, #32]
   27ea0:	str	r0, [r3, #4]!
   27ea4:	str	r3, [sp, #32]
   27ea8:	bne	27938 <__flatcc_fb_gen_c_json_printer@@Base+0x1208>
   27eac:	ldr	r2, [sp, #36]	; 0x24
   27eb0:	ldr	r1, [sp, #20]
   27eb4:	mov	r0, r9
   27eb8:	bl	3c698 <flatcc_builder_create_offset_vector@@Base>
   27ebc:	subs	r4, r0, #0
   27ec0:	beq	27ed8 <__flatcc_fb_gen_c_json_printer@@Base+0x17a8>
   27ec4:	mov	r1, #0
   27ec8:	mov	r0, r9
   27ecc:	bl	3f0a4 <flatcc_builder_table_add_offset@@Base>
   27ed0:	cmp	r0, #0
   27ed4:	strne	r4, [r0]
   27ed8:	ldr	r3, [sp, #60]	; 0x3c
   27edc:	mov	r0, r9
   27ee0:	mov	r4, r3
   27ee4:	str	r3, [sp, #24]
   27ee8:	ldr	r3, [sp, #72]	; 0x48
   27eec:	str	r3, [sp, #8]
   27ef0:	bl	3c554 <flatcc_builder_start_offset_vector@@Base>
   27ef4:	cmp	r4, #0
   27ef8:	ble	28180 <__flatcc_fb_gen_c_json_printer@@Base+0x1a50>
   27efc:	mov	r3, #0
   27f00:	ldr	sl, [pc, #-656]	; 27c78 <__flatcc_fb_gen_c_json_printer@@Base+0x1548>
   27f04:	str	r3, [sp]
   27f08:	mov	fp, #3
   27f0c:	ldr	r3, [sp, #8]
   27f10:	str	r3, [sp, #4]
   27f14:	ldr	r2, [sp]
   27f18:	ldr	r3, [sp, #8]
   27f1c:	mov	r1, #4
   27f20:	mov	r0, r9
   27f24:	ldr	r3, [r3, r2, lsl #3]
   27f28:	str	r3, [sp, #16]
   27f2c:	ldrh	r8, [r3, #8]
   27f30:	bl	3cb9c <flatcc_builder_start_table@@Base>
   27f34:	ldr	r3, [sp, #4]
   27f38:	mov	r0, r9
   27f3c:	ldr	r1, [r3, #4]
   27f40:	bl	3e94c <flatcc_builder_create_string_str@@Base>
   27f44:	subs	r4, r0, #0
   27f48:	beq	27f60 <__flatcc_fb_gen_c_json_printer@@Base+0x1830>
   27f4c:	mov	r1, #0
   27f50:	mov	r0, r9
   27f54:	bl	3f0a4 <flatcc_builder_table_add_offset@@Base>
   27f58:	cmp	r0, #0
   27f5c:	strne	r4, [r0]
   27f60:	mov	r0, r9
   27f64:	bl	3c554 <flatcc_builder_start_offset_vector@@Base>
   27f68:	ldr	r3, [sp, #16]
   27f6c:	ldr	r4, [r3, #20]
   27f70:	cmp	r4, #0
   27f74:	movne	r5, #1
   27f78:	bne	27fbc <__flatcc_fb_gen_c_json_printer@@Base+0x188c>
   27f7c:	b	280c4 <__flatcc_fb_gen_c_json_printer@@Base+0x1994>
   27f80:	mov	r2, r5
   27f84:	mov	r1, sl
   27f88:	mov	r0, r9
   27f8c:	bl	3d544 <flatcc_builder_check_required@@Base>
   27f90:	cmp	r0, #0
   27f94:	beq	28400 <__flatcc_fb_gen_c_json_printer@@Base+0x1cd0>
   27f98:	mov	r0, r9
   27f9c:	bl	3d5dc <flatcc_builder_end_table@@Base>
   27fa0:	subs	r1, r0, #0
   27fa4:	beq	27fb0 <__flatcc_fb_gen_c_json_printer@@Base+0x1880>
   27fa8:	mov	r0, r9
   27fac:	bl	3bc84 <flatcc_builder_offset_vector_push@@Base>
   27fb0:	ldr	r4, [r4]
   27fb4:	cmp	r4, #0
   27fb8:	beq	280c4 <__flatcc_fb_gen_c_json_printer@@Base+0x1994>
   27fbc:	cmp	r8, #4
   27fc0:	mov	r1, fp
   27fc4:	mov	r0, r9
   27fc8:	beq	2802c <__flatcc_fb_gen_c_json_printer@@Base+0x18fc>
   27fcc:	bl	3cb9c <flatcc_builder_start_table@@Base>
   27fd0:	ldr	r3, [r4, #4]
   27fd4:	mov	r0, r9
   27fd8:	ldm	r3, {r1, r2}
   27fdc:	bl	3e868 <flatcc_builder_create_string@@Base>
   27fe0:	subs	r6, r0, #0
   27fe4:	beq	28000 <__flatcc_fb_gen_c_json_printer@@Base+0x18d0>
   27fe8:	mov	r1, #0
   27fec:	mov	r0, r9
   27ff0:	bl	3f0a4 <flatcc_builder_table_add_offset@@Base>
   27ff4:	cmp	r0, #0
   27ff8:	beq	28000 <__flatcc_fb_gen_c_json_printer@@Base+0x18d0>
   27ffc:	str	r6, [r0]
   28000:	ldrd	r6, [r4, #48]	; 0x30
   28004:	orrs	r3, r6, r7
   28008:	beq	27f80 <__flatcc_fb_gen_c_json_printer@@Base+0x1850>
   2800c:	mov	r3, #8
   28010:	mov	r2, r3
   28014:	mov	r1, r5
   28018:	mov	r0, r9
   2801c:	bl	3ed08 <flatcc_builder_table_add@@Base>
   28020:	cmp	r0, #0
   28024:	strdne	r6, [r0]
   28028:	b	27f80 <__flatcc_fb_gen_c_json_printer@@Base+0x1850>
   2802c:	bl	3cb9c <flatcc_builder_start_table@@Base>
   28030:	ldr	r3, [r4, #4]
   28034:	mov	r0, r9
   28038:	ldm	r3, {r1, r2}
   2803c:	bl	3e868 <flatcc_builder_create_string@@Base>
   28040:	subs	r6, r0, #0
   28044:	beq	2805c <__flatcc_fb_gen_c_json_printer@@Base+0x192c>
   28048:	mov	r1, #0
   2804c:	mov	r0, r9
   28050:	bl	3f0a4 <flatcc_builder_table_add_offset@@Base>
   28054:	cmp	r0, #0
   28058:	strne	r6, [r0]
   2805c:	ldr	r3, [sp, #20]
   28060:	cmp	r3, #0
   28064:	beq	28000 <__flatcc_fb_gen_c_json_printer@@Base+0x18d0>
   28068:	ldrh	r3, [r4, #24]
   2806c:	cmp	r3, #14
   28070:	bne	28000 <__flatcc_fb_gen_c_json_printer@@Base+0x18d0>
   28074:	ldr	r3, [r4, #16]
   28078:	ldr	r2, [sp, #20]
   2807c:	ldr	r3, [r3, #124]	; 0x7c
   28080:	ldr	r6, [r2, r3, lsl #2]
   28084:	cmp	r6, #0
   28088:	beq	28000 <__flatcc_fb_gen_c_json_printer@@Base+0x18d0>
   2808c:	mov	r1, #2
   28090:	mov	r0, r9
   28094:	bl	3f0a4 <flatcc_builder_table_add_offset@@Base>
   28098:	cmp	r0, #0
   2809c:	bne	27ffc <__flatcc_fb_gen_c_json_printer@@Base+0x18cc>
   280a0:	b	28000 <__flatcc_fb_gen_c_json_printer@@Base+0x18d0>
   280a4:	mov	r3, #2
   280a8:	mov	r2, r3
   280ac:	mov	r1, #3
   280b0:	mov	r0, r9
   280b4:	bl	3ed08 <flatcc_builder_table_add@@Base>
   280b8:	cmp	r0, #0
   280bc:	strhne	r5, [r0]
   280c0:	b	27a44 <__flatcc_fb_gen_c_json_printer@@Base+0x1314>
   280c4:	mov	r0, r9
   280c8:	bl	3dafc <flatcc_builder_end_offset_vector@@Base>
   280cc:	subs	r4, r0, #0
   280d0:	beq	280e8 <__flatcc_fb_gen_c_json_printer@@Base+0x19b8>
   280d4:	mov	r1, #1
   280d8:	mov	r0, r9
   280dc:	bl	3f0a4 <flatcc_builder_table_add_offset@@Base>
   280e0:	cmp	r0, #0
   280e4:	strne	r4, [r0]
   280e8:	cmp	r8, #4
   280ec:	bne	28110 <__flatcc_fb_gen_c_json_printer@@Base+0x19e0>
   280f0:	mov	r3, #1
   280f4:	mov	r2, r3
   280f8:	mov	r1, #2
   280fc:	mov	r0, r9
   28100:	bl	3ed08 <flatcc_builder_table_add@@Base>
   28104:	cmp	r0, #0
   28108:	movne	r3, #1
   2810c:	strbne	r3, [r0]
   28110:	ldr	r3, [sp, #16]
   28114:	mov	r0, r9
   28118:	ldrh	r2, [r3, #48]	; 0x30
   2811c:	ldr	r1, [r3, #40]	; 0x28
   28120:	bl	26e1c <__flatcc_fb_gen_c_json_printer@@Base+0x6ec>
   28124:	subs	r4, r0, #0
   28128:	bne	28274 <__flatcc_fb_gen_c_json_printer@@Base+0x1b44>
   2812c:	mov	r2, fp
   28130:	ldr	r1, [pc, #-1212]	; 27c7c <__flatcc_fb_gen_c_json_printer@@Base+0x154c>
   28134:	mov	r0, r9
   28138:	bl	3d544 <flatcc_builder_check_required@@Base>
   2813c:	cmp	r0, #0
   28140:	beq	28444 <__flatcc_fb_gen_c_json_printer@@Base+0x1d14>
   28144:	mov	r0, r9
   28148:	bl	3d5dc <flatcc_builder_end_table@@Base>
   2814c:	subs	r1, r0, #0
   28150:	beq	2815c <__flatcc_fb_gen_c_json_printer@@Base+0x1a2c>
   28154:	mov	r0, r9
   28158:	bl	3bc84 <flatcc_builder_offset_vector_push@@Base>
   2815c:	ldr	r3, [sp]
   28160:	ldr	r2, [sp, #24]
   28164:	add	r3, r3, #1
   28168:	str	r3, [sp]
   2816c:	cmp	r2, r3
   28170:	ldr	r3, [sp, #4]
   28174:	add	r3, r3, #8
   28178:	str	r3, [sp, #4]
   2817c:	bne	27f14 <__flatcc_fb_gen_c_json_printer@@Base+0x17e4>
   28180:	mov	r0, r9
   28184:	bl	3dafc <flatcc_builder_end_offset_vector@@Base>
   28188:	subs	r4, r0, #0
   2818c:	beq	281a4 <__flatcc_fb_gen_c_json_printer@@Base+0x1a74>
   28190:	mov	r1, #1
   28194:	mov	r0, r9
   28198:	bl	3f0a4 <flatcc_builder_table_add_offset@@Base>
   2819c:	cmp	r0, #0
   281a0:	strne	r4, [r0]
   281a4:	ldr	r3, [sp, #44]	; 0x2c
   281a8:	ldr	r3, [r3, #52]	; 0x34
   281ac:	cmp	r3, #0
   281b0:	beq	281e8 <__flatcc_fb_gen_c_json_printer@@Base+0x1ab8>
   281b4:	ldrh	r2, [r3, #8]
   281b8:	cmp	r2, #0
   281bc:	bne	281e8 <__flatcc_fb_gen_c_json_printer@@Base+0x1ab8>
   281c0:	ldr	r3, [r3, #124]	; 0x7c
   281c4:	ldr	r2, [sp, #20]
   281c8:	ldr	r4, [r2, r3, lsl #2]
   281cc:	cmp	r4, #0
   281d0:	beq	281e8 <__flatcc_fb_gen_c_json_printer@@Base+0x1ab8>
   281d4:	mov	r1, #4
   281d8:	mov	r0, r9
   281dc:	bl	3f0a4 <flatcc_builder_table_add_offset@@Base>
   281e0:	cmp	r0, #0
   281e4:	strne	r4, [r0]
   281e8:	mov	r2, #2
   281ec:	ldr	r1, [pc, #-1396]	; 27c80 <__flatcc_fb_gen_c_json_printer@@Base+0x1550>
   281f0:	mov	r0, r9
   281f4:	bl	3d544 <flatcc_builder_check_required@@Base>
   281f8:	cmp	r0, #0
   281fc:	beq	28474 <__flatcc_fb_gen_c_json_printer@@Base+0x1d44>
   28200:	mov	r0, r9
   28204:	bl	3d5dc <flatcc_builder_end_table@@Base>
   28208:	mov	r1, r0
   2820c:	mov	r0, r9
   28210:	bl	3b148 <flatcc_builder_end_buffer@@Base>
   28214:	ldr	r0, [sp, #68]	; 0x44
   28218:	cmp	r0, #0
   2821c:	beq	28224 <__flatcc_fb_gen_c_json_printer@@Base+0x1af4>
   28220:	bl	13fd4 <free@plt>
   28224:	ldr	r0, [sp, #72]	; 0x48
   28228:	cmp	r0, #0
   2822c:	beq	28234 <__flatcc_fb_gen_c_json_printer@@Base+0x1b04>
   28230:	bl	13fd4 <free@plt>
   28234:	ldr	r0, [sp, #76]	; 0x4c
   28238:	cmp	r0, #0
   2823c:	beq	28244 <__flatcc_fb_gen_c_json_printer@@Base+0x1b14>
   28240:	bl	13fd4 <free@plt>
   28244:	add	r0, sp, #52	; 0x34
   28248:	mov	r2, #44	; 0x2c
   2824c:	mov	r1, #0
   28250:	bl	140ac <memset@plt>
   28254:	ldr	r3, [sp, #20]
   28258:	subs	r0, r3, #0
   2825c:	beq	28268 <__flatcc_fb_gen_c_json_printer@@Base+0x1b38>
   28260:	bl	13fd4 <free@plt>
   28264:	mov	r0, #0
   28268:	add	sp, sp, #100	; 0x64
   2826c:	vpop	{d8-d9}
   28270:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28274:	mov	r1, fp
   28278:	mov	r0, r9
   2827c:	bl	3f0a4 <flatcc_builder_table_add_offset@@Base>
   28280:	cmp	r0, #0
   28284:	strne	r4, [r0]
   28288:	b	2812c <__flatcc_fb_gen_c_json_printer@@Base+0x19fc>
   2828c:	ldr	r3, [sp]
   28290:	ldr	r4, [r3, #112]	; 0x70
   28294:	cmp	r4, #0
   28298:	bne	28330 <__flatcc_fb_gen_c_json_printer@@Base+0x1c00>
   2829c:	mov	r3, #1
   282a0:	mov	r2, r3
   282a4:	mov	r1, #2
   282a8:	mov	r0, r9
   282ac:	bl	3ed08 <flatcc_builder_table_add@@Base>
   282b0:	cmp	r0, #0
   282b4:	movne	r3, #1
   282b8:	strbne	r3, [r0]
   282bc:	b	27e30 <__flatcc_fb_gen_c_json_printer@@Base+0x1700>
   282c0:	mov	r3, #2
   282c4:	mov	r2, r3
   282c8:	mov	r1, r3
   282cc:	mov	r0, r9
   282d0:	bl	3ed08 <flatcc_builder_table_add@@Base>
   282d4:	cmp	r0, #0
   282d8:	strhne	r6, [r0]
   282dc:	cmp	r8, #0
   282e0:	beq	27dc8 <__flatcc_fb_gen_c_json_printer@@Base+0x1698>
   282e4:	mov	r3, #1
   282e8:	mov	r2, r3
   282ec:	mov	r1, #6
   282f0:	mov	r0, r9
   282f4:	bl	3ed08 <flatcc_builder_table_add@@Base>
   282f8:	cmp	r0, #0
   282fc:	ldrbne	r3, [sp, #16]
   28300:	strbne	r3, [r0]
   28304:	b	27dc8 <__flatcc_fb_gen_c_json_printer@@Base+0x1698>
   28308:	mov	r3, #2
   2830c:	mov	r2, r3
   28310:	mov	r1, #3
   28314:	mov	r0, r9
   28318:	bl	3ed08 <flatcc_builder_table_add@@Base>
   2831c:	ldrh	r6, [r4, #96]	; 0x60
   28320:	cmp	r0, #0
   28324:	ldrhne	r3, [sp, #8]
   28328:	strhne	r3, [r0]
   2832c:	b	27db0 <__flatcc_fb_gen_c_json_printer@@Base+0x1680>
   28330:	mov	r3, #4
   28334:	mov	r2, r3
   28338:	mov	r1, r3
   2833c:	mov	r0, r9
   28340:	bl	3ed08 <flatcc_builder_table_add@@Base>
   28344:	cmp	r0, #0
   28348:	strne	r4, [r0]
   2834c:	b	2829c <__flatcc_fb_gen_c_json_printer@@Base+0x1b6c>
   28350:	ldr	r3, [sp, #44]	; 0x2c
   28354:	mov	r0, r9
   28358:	ldr	r2, [r3, #28]
   2835c:	ldr	r1, [r3, #24]
   28360:	bl	3e868 <flatcc_builder_create_string@@Base>
   28364:	subs	r4, r0, #0
   28368:	beq	27904 <__flatcc_fb_gen_c_json_printer@@Base+0x11d4>
   2836c:	mov	r1, #3
   28370:	mov	r0, r9
   28374:	bl	3f0a4 <flatcc_builder_table_add_offset@@Base>
   28378:	cmp	r0, #0
   2837c:	strne	r4, [r0]
   28380:	b	27904 <__flatcc_fb_gen_c_json_printer@@Base+0x11d4>
   28384:	ldr	r2, [r3, #12]
   28388:	ldr	r1, [r3, #8]
   2838c:	mov	r0, r9
   28390:	bl	3e868 <flatcc_builder_create_string@@Base>
   28394:	subs	r5, r0, #0
   28398:	beq	278f4 <__flatcc_fb_gen_c_json_printer@@Base+0x11c4>
   2839c:	mov	r1, r4
   283a0:	mov	r0, r9
   283a4:	bl	3f0a4 <flatcc_builder_table_add_offset@@Base>
   283a8:	cmp	r0, #0
   283ac:	strne	r5, [r0]
   283b0:	b	278f4 <__flatcc_fb_gen_c_json_printer@@Base+0x11c4>
   283b4:	ldr	r3, [pc, #-1848]	; 27c84 <__flatcc_fb_gen_c_json_printer@@Base+0x1554>
   283b8:	mov	r2, #29
   283bc:	ldr	r1, [pc, #-1812]	; 27cb0 <__flatcc_fb_gen_c_json_printer@@Base+0x1580>
   283c0:	ldr	r0, [pc, #-1856]	; 27c88 <__flatcc_fb_gen_c_json_printer@@Base+0x1558>
   283c4:	bl	14148 <__assert_fail@plt>
   283c8:	cmp	r6, #0
   283cc:	beq	283d8 <__flatcc_fb_gen_c_json_printer@@Base+0x1ca8>
   283d0:	mov	r0, r6
   283d4:	bl	13fd4 <free@plt>
   283d8:	cmp	r8, #0
   283dc:	beq	283e8 <__flatcc_fb_gen_c_json_printer@@Base+0x1cb8>
   283e0:	mov	r0, r8
   283e4:	bl	13fd4 <free@plt>
   283e8:	cmp	r7, #0
   283ec:	beq	283f8 <__flatcc_fb_gen_c_json_printer@@Base+0x1cc8>
   283f0:	mov	r0, r7
   283f4:	bl	13fd4 <free@plt>
   283f8:	mvn	r0, #0
   283fc:	b	28268 <__flatcc_fb_gen_c_json_printer@@Base+0x1b38>
   28400:	ldr	r3, [pc, #-1916]	; 27c8c <__flatcc_fb_gen_c_json_printer@@Base+0x155c>
   28404:	mov	r2, #25
   28408:	ldr	r1, [pc, #-1888]	; 27cb0 <__flatcc_fb_gen_c_json_printer@@Base+0x1580>
   2840c:	ldr	r0, [pc, #-1924]	; 27c90 <__flatcc_fb_gen_c_json_printer@@Base+0x1560>
   28410:	bl	14148 <__assert_fail@plt>
   28414:	ldr	r0, [sp, #68]	; 0x44
   28418:	cmp	r0, #0
   2841c:	beq	28424 <__flatcc_fb_gen_c_json_printer@@Base+0x1cf4>
   28420:	bl	13fd4 <free@plt>
   28424:	ldr	r0, [sp, #72]	; 0x48
   28428:	cmp	r0, #0
   2842c:	beq	28434 <__flatcc_fb_gen_c_json_printer@@Base+0x1d04>
   28430:	bl	13fd4 <free@plt>
   28434:	ldr	r0, [sp, #76]	; 0x4c
   28438:	cmp	r0, #0
   2843c:	bne	283f4 <__flatcc_fb_gen_c_json_printer@@Base+0x1cc4>
   28440:	b	283f8 <__flatcc_fb_gen_c_json_printer@@Base+0x1cc8>
   28444:	ldr	r3, [pc, #-1976]	; 27c94 <__flatcc_fb_gen_c_json_printer@@Base+0x1564>
   28448:	mov	r2, #27
   2844c:	ldr	r1, [pc, #-1956]	; 27cb0 <__flatcc_fb_gen_c_json_printer@@Base+0x1580>
   28450:	ldr	r0, [pc, #-1984]	; 27c98 <__flatcc_fb_gen_c_json_printer@@Base+0x1568>
   28454:	bl	14148 <__assert_fail@plt>
   28458:	vmov.f64	d8, d9
   2845c:	b	27b90 <__flatcc_fb_gen_c_json_printer@@Base+0x1460>
   28460:	ldr	r3, [pc, #-1996]	; 27c9c <__flatcc_fb_gen_c_json_printer@@Base+0x156c>
   28464:	mov	r2, #31
   28468:	ldr	r1, [pc, #-1984]	; 27cb0 <__flatcc_fb_gen_c_json_printer@@Base+0x1580>
   2846c:	ldr	r0, [pc, #-2004]	; 27ca0 <__flatcc_fb_gen_c_json_printer@@Base+0x1570>
   28470:	bl	14148 <__assert_fail@plt>
   28474:	ldr	r3, [pc, #-2008]	; 27ca4 <__flatcc_fb_gen_c_json_printer@@Base+0x1574>
   28478:	mov	r2, #33	; 0x21
   2847c:	ldr	r1, [pc, #-2004]	; 27cb0 <__flatcc_fb_gen_c_json_printer@@Base+0x1580>
   28480:	ldr	r0, [pc, #-2016]	; 27ca8 <__flatcc_fb_gen_c_json_printer@@Base+0x1578>
   28484:	bl	14148 <__assert_fail@plt>
   28488:	ldr	r3, [pc, #-2020]	; 27cac <__flatcc_fb_gen_c_json_printer@@Base+0x157c>
   2848c:	mov	r2, #23
   28490:	ldr	r1, [pc, #-2024]	; 27cb0 <__flatcc_fb_gen_c_json_printer@@Base+0x1580>
   28494:	ldr	r0, [pc, #-2024]	; 27cb4 <__flatcc_fb_gen_c_json_printer@@Base+0x1584>
   28498:	bl	14148 <__assert_fail@plt>

0002849c <__flatcc_fb_codegen_bfbs_to_buffer@@Base>:
   2849c:	push	{r4, r5, r6, r7, lr}
   284a0:	mov	r6, r0
   284a4:	sub	sp, sp, #236	; 0xec
   284a8:	mov	r7, r1
   284ac:	mov	r5, r3
   284b0:	mov	r0, sp
   284b4:	mov	r4, r2
   284b8:	bl	3a4cc <flatcc_builder_init@@Base>
   284bc:	mov	r3, r7
   284c0:	add	r2, r6, #188	; 0xbc
   284c4:	ldr	r1, [r6, #184]	; 0xb8
   284c8:	mov	r0, sp
   284cc:	bl	2771c <__flatcc_fb_gen_c_json_printer@@Base+0xfec>
   284d0:	ldr	r2, [r5]
   284d4:	mov	r1, r4
   284d8:	mov	r0, sp
   284dc:	bl	3f6bc <flatcc_builder_copy_buffer@@Base>
   284e0:	cmp	r0, #0
   284e4:	beq	284f0 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x54>
   284e8:	mov	r0, r4
   284ec:	bl	27064 <__flatcc_fb_gen_c_json_printer@@Base+0x934>
   284f0:	mov	r0, sp
   284f4:	bl	3f5f0 <flatcc_builder_get_buffer_size@@Base>
   284f8:	str	r0, [r5]
   284fc:	mov	r0, sp
   28500:	bl	3a738 <flatcc_builder_clear@@Base>
   28504:	mov	r0, r4
   28508:	add	sp, sp, #236	; 0xec
   2850c:	pop	{r4, r5, r6, r7, pc}

00028510 <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base>:
   28510:	push	{r4, r5, r6, lr}
   28514:	mov	r4, r0
   28518:	sub	sp, sp, #232	; 0xe8
   2851c:	mov	r5, r1
   28520:	mov	r0, sp
   28524:	mov	r6, r2
   28528:	bl	3a4cc <flatcc_builder_init@@Base>
   2852c:	add	r2, r4, #188	; 0xbc
   28530:	ldr	r1, [r4, #184]	; 0xb8
   28534:	mov	r3, r5
   28538:	mov	r0, sp
   2853c:	bl	2771c <__flatcc_fb_gen_c_json_printer@@Base+0xfec>
   28540:	cmp	r0, #0
   28544:	movne	r4, #0
   28548:	bne	28564 <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base+0x54>
   2854c:	mov	r1, r6
   28550:	mov	r0, sp
   28554:	bl	3f6e8 <flatcc_builder_finalize_buffer@@Base>
   28558:	subs	r4, r0, #0
   2855c:	beq	28564 <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base+0x54>
   28560:	bl	27064 <__flatcc_fb_gen_c_json_printer@@Base+0x934>
   28564:	mov	r0, sp
   28568:	bl	3a738 <flatcc_builder_clear@@Base>
   2856c:	mov	r0, r4
   28570:	add	sp, sp, #232	; 0xe8
   28574:	pop	{r4, r5, r6, pc}

00028578 <__flatcc_fb_codegen_bfbs_to_file@@Base>:
   28578:	push	{r4, r5, r6, r7, r8, r9, lr}
   2857c:	mov	r4, r0
   28580:	ldr	r5, [r0, #216]	; 0xd8
   28584:	sub	sp, sp, #252	; 0xfc
   28588:	cmp	r5, #0
   2858c:	mov	r6, r1
   28590:	ldr	r8, [r0, #108]	; 0x6c
   28594:	ldr	r7, [r1, #160]	; 0xa0
   28598:	beq	286d4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x15c>
   2859c:	mov	r0, r5
   285a0:	bl	1407c <strlen@plt>
   285a4:	mov	r9, r0
   285a8:	mov	r0, r7
   285ac:	bl	1407c <strlen@plt>
   285b0:	cmp	r8, #0
   285b4:	beq	28674 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xfc>
   285b8:	ldr	r3, [pc, #352]	; 28720 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1a8>
   285bc:	ldr	r5, [r3]
   285c0:	cmp	r5, #0
   285c4:	beq	286f8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x180>
   285c8:	add	r0, sp, #16
   285cc:	bl	3a4cc <flatcc_builder_init@@Base>
   285d0:	add	r2, r4, #188	; 0xbc
   285d4:	ldr	r1, [r4, #184]	; 0xb8
   285d8:	mov	r3, r6
   285dc:	add	r0, sp, #16
   285e0:	bl	2771c <__flatcc_fb_gen_c_json_printer@@Base+0xfec>
   285e4:	subs	r4, r0, #0
   285e8:	bne	286bc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x144>
   285ec:	add	r1, sp, #12
   285f0:	add	r0, sp, #16
   285f4:	bl	3f6e8 <flatcc_builder_finalize_buffer@@Base>
   285f8:	subs	r6, r0, #0
   285fc:	beq	286bc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x144>
   28600:	bl	27064 <__flatcc_fb_gen_c_json_printer@@Base+0x934>
   28604:	add	r0, sp, #16
   28608:	bl	3a738 <flatcc_builder_clear@@Base>
   2860c:	mov	r3, r5
   28610:	ldr	r2, [sp, #12]
   28614:	mov	r1, #1
   28618:	mov	r0, r6
   2861c:	bl	1401c <fwrite@plt>
   28620:	ldr	r3, [sp, #12]
   28624:	cmp	r0, r3
   28628:	beq	28648 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xd0>
   2862c:	ldr	r3, [pc, #240]	; 28724 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1ac>
   28630:	mov	r2, #38	; 0x26
   28634:	mov	r1, #1
   28638:	ldr	r3, [r3]
   2863c:	ldr	r0, [pc, #228]	; 28728 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1b0>
   28640:	bl	1401c <fwrite@plt>
   28644:	mvn	r4, #0
   28648:	mov	r0, r6
   2864c:	bl	13fd4 <free@plt>
   28650:	ldr	r3, [pc, #200]	; 28720 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1a8>
   28654:	ldr	r3, [r3]
   28658:	cmp	r3, r5
   2865c:	beq	28668 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xf0>
   28660:	mov	r0, r5
   28664:	bl	140dc <fclose@plt>
   28668:	mov	r0, r4
   2866c:	add	sp, sp, #252	; 0xfc
   28670:	pop	{r4, r5, r6, r7, r8, r9, pc}
   28674:	ldr	ip, [pc, #176]	; 2872c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1b4>
   28678:	mov	r8, #1
   2867c:	mov	r3, r0
   28680:	mov	r2, r7
   28684:	mov	r1, r9
   28688:	mov	r0, r5
   2868c:	str	ip, [sp]
   28690:	str	r8, [sp, #4]
   28694:	bl	2bc30 <__flatcc_fb_create_join_path_n@@Base>
   28698:	subs	r7, r0, #0
   2869c:	beq	28700 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x188>
   286a0:	ldr	r1, [pc, #136]	; 28730 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1b8>
   286a4:	bl	13fc8 <fopen@plt>
   286a8:	subs	r5, r0, #0
   286ac:	beq	286e0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x168>
   286b0:	mov	r0, r7
   286b4:	bl	13fd4 <free@plt>
   286b8:	b	285c0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x48>
   286bc:	add	r0, sp, #16
   286c0:	bl	3a738 <flatcc_builder_clear@@Base>
   286c4:	ldr	r0, [pc, #104]	; 28734 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1bc>
   286c8:	bl	14034 <puts@plt>
   286cc:	mvn	r4, #0
   286d0:	b	28650 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xd8>
   286d4:	mov	r9, r5
   286d8:	ldr	r5, [pc, #88]	; 28738 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1c0>
   286dc:	b	285a8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x30>
   286e0:	ldr	r3, [pc, #60]	; 28724 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1ac>
   286e4:	mov	r2, r7
   286e8:	ldr	r1, [pc, #76]	; 2873c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1c4>
   286ec:	ldr	r0, [r3]
   286f0:	bl	14094 <fprintf@plt>
   286f4:	b	286b0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x138>
   286f8:	mvn	r4, #0
   286fc:	b	28668 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xf0>
   28700:	ldr	r3, [pc, #28]	; 28724 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1ac>
   28704:	mov	r2, #34	; 0x22
   28708:	mov	r1, r8
   2870c:	ldr	r3, [r3]
   28710:	ldr	r0, [pc, #40]	; 28740 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1c8>
   28714:	bl	1401c <fwrite@plt>
   28718:	mov	r0, r8
   2871c:	bl	14070 <exit@plt>
   28720:	andeq	pc, r6, ip, lsr #1
   28724:	andeq	pc, r6, r8, lsr #1
   28728:	andeq	sl, r5, r8, ror sp
   2872c:	andeq	r3, r4, ip, asr lr
   28730:	andeq	r3, r4, r0, ror #30
   28734:	andeq	sl, r5, r0, lsr #27
   28738:	andeq	lr, r4, ip, asr #2
   2873c:	andeq	sl, r5, r4, asr #26
   28740:	andeq	r3, r4, r0, lsr lr
   28744:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   28748:	sub	sp, sp, #28
   2874c:	cmp	r3, #0
   28750:	str	r3, [sp, #8]
   28754:	str	r0, [sp, #12]
   28758:	beq	28934 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3bc>
   2875c:	cmp	r3, #2
   28760:	beq	28904 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x38c>
   28764:	cmp	r3, #1
   28768:	beq	288f0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x378>
   2876c:	ldr	r7, [r0, #12]
   28770:	mov	r3, #179	; 0xb3
   28774:	mov	r8, r1
   28778:	mul	r3, r3, r7
   2877c:	ldr	r1, [r0, #8]
   28780:	mov	r9, r2
   28784:	cmp	r1, r3, lsr #8
   28788:	mov	r4, r0
   2878c:	bcc	287a4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x22c>
   28790:	lsl	r1, r1, #1
   28794:	bl	2896c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3f4>
   28798:	cmp	r0, #0
   2879c:	bne	28918 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3a0>
   287a0:	ldr	r7, [r4, #12]
   287a4:	ldr	r2, [pc, #412]	; 28948 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3d0>
   287a8:	add	r3, sp, #16
   287ac:	ldr	r1, [sp, #12]
   287b0:	stm	sp, {r2, r3}
   287b4:	mov	r0, r8
   287b8:	mov	r2, r9
   287bc:	mov	r3, #0
   287c0:	ldr	r6, [r1]
   287c4:	bl	3fe60 <cmetrohash64_1@@Base>
   287c8:	ldr	r2, [sp, #64]	; 0x40
   287cc:	ldr	r3, [sp, #16]
   287d0:	sub	r2, r2, #2
   287d4:	sub	r7, r7, #1
   287d8:	cmp	r2, #1
   287dc:	and	r4, r7, r3
   287e0:	bls	28898 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x320>
   287e4:	ldr	r5, [r6, r4, lsl #2]
   287e8:	add	r4, r6, r4, lsl #2
   287ec:	cmp	r5, #0
   287f0:	moveq	sl, r4
   287f4:	beq	28850 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x2d8>
   287f8:	add	fp, r3, #1
   287fc:	mov	sl, #0
   28800:	b	28834 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x2bc>
   28804:	mov	r2, r9
   28808:	mov	r1, r5
   2880c:	mov	r0, r8
   28810:	bl	14130 <strncmp@plt>
   28814:	cmp	r0, #0
   28818:	beq	28878 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x300>
   2881c:	and	r4, r7, fp
   28820:	add	fp, fp, #1
   28824:	ldr	r5, [r6, r4, lsl #2]
   28828:	add	r4, r6, r4, lsl #2
   2882c:	cmp	r5, #0
   28830:	beq	28848 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x2d0>
   28834:	cmp	r5, #2
   28838:	bne	28804 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x28c>
   2883c:	cmp	sl, #0
   28840:	moveq	sl, r4
   28844:	b	2881c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x2a4>
   28848:	cmp	sl, #0
   2884c:	moveq	sl, r4
   28850:	ldr	r2, [sp, #12]
   28854:	mov	r5, #0
   28858:	ldr	r3, [r2, #8]
   2885c:	add	r3, r3, #1
   28860:	str	r3, [r2, #8]
   28864:	ldr	r3, [sp, #8]
   28868:	str	r3, [sl]
   2886c:	mov	r0, r5
   28870:	add	sp, sp, #28
   28874:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28878:	ldr	r3, [sp, #64]	; 0x40
   2887c:	cmp	r3, #0
   28880:	bne	2886c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x2f4>
   28884:	ldr	r3, [sp, #8]
   28888:	mov	r0, r5
   2888c:	str	r3, [r4]
   28890:	add	sp, sp, #28
   28894:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28898:	ldr	r0, [sp, #12]
   2889c:	ldr	r1, [r6, r4, lsl #2]
   288a0:	add	r4, r6, r4, lsl #2
   288a4:	ldr	r2, [r0, #8]
   288a8:	cmp	r1, #0
   288ac:	cmpne	r1, #2
   288b0:	add	r2, r2, #1
   288b4:	str	r2, [r0, #8]
   288b8:	beq	288e0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x368>
   288bc:	add	r3, r3, #1
   288c0:	and	r2, r7, r3
   288c4:	add	r3, r3, #1
   288c8:	ldr	r1, [r6, r2, lsl #2]
   288cc:	add	r2, r6, r2, lsl #2
   288d0:	cmp	r1, #0
   288d4:	cmpne	r1, #2
   288d8:	bne	288c0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x348>
   288dc:	mov	r4, r2
   288e0:	ldr	r3, [sp, #8]
   288e4:	mov	r5, #0
   288e8:	str	r3, [r4]
   288ec:	b	2886c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x2f4>
   288f0:	ldr	r3, [pc, #84]	; 2894c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3d4>
   288f4:	mov	r2, #116	; 0x74
   288f8:	ldr	r1, [pc, #80]	; 28950 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3d8>
   288fc:	ldr	r0, [pc, #80]	; 28954 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3dc>
   28900:	bl	14148 <__assert_fail@plt>
   28904:	ldr	r3, [pc, #64]	; 2894c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3d4>
   28908:	mov	r2, #115	; 0x73
   2890c:	ldr	r1, [pc, #60]	; 28950 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3d8>
   28910:	ldr	r0, [pc, #64]	; 28958 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3e0>
   28914:	bl	14148 <__assert_fail@plt>
   28918:	ldr	r3, [pc, #60]	; 2895c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3e4>
   2891c:	ldr	r2, [pc, #60]	; 28960 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3e8>
   28920:	ldr	r1, [pc, #60]	; 28964 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3ec>
   28924:	ldr	r0, [r3]
   28928:	bl	14094 <fprintf@plt>
   2892c:	mov	r0, #1
   28930:	bl	14070 <exit@plt>
   28934:	ldr	r3, [pc, #16]	; 2894c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3d4>
   28938:	mov	r2, #114	; 0x72
   2893c:	ldr	r1, [pc, #12]	; 28950 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3d8>
   28940:	ldr	r0, [pc, #32]	; 28968 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3f0>
   28944:	bl	14148 <__assert_fail@plt>
   28948:	svccs	0x00693b52
   2894c:	andeq	sl, r5, r4, asr #27
   28950:	ldrdeq	sl, [r5], -ip
   28954:	andeq	sl, r5, ip, asr lr
   28958:	andeq	sl, r5, r4, asr #28
   2895c:	andeq	pc, r6, r8, lsr #1
   28960:	andeq	sl, r5, r4, ror lr
   28964:	andeq	sl, r5, r8, lsr #29
   28968:	andeq	sl, r5, ip, lsr #28
   2896c:	ldr	r3, [r0, #8]
   28970:	push	{r4, r5, r6, r7, r8, r9, lr}
   28974:	cmp	r1, r3
   28978:	movcc	r1, r3
   2897c:	cmp	r1, #2
   28980:	sub	sp, sp, #28
   28984:	mov	r7, r0
   28988:	ldr	r6, [r0]
   2898c:	mov	r4, #4
   28990:	bls	289a8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x430>
   28994:	mov	r2, #179	; 0xb3
   28998:	lsl	r4, r4, #1
   2899c:	mul	r3, r2, r4
   289a0:	cmp	r1, r3, lsr #8
   289a4:	bhi	28998 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x420>
   289a8:	mov	r1, #4
   289ac:	mov	r0, r4
   289b0:	bl	13fa4 <calloc@plt>
   289b4:	cmp	r0, #0
   289b8:	str	r0, [sp, #8]
   289bc:	beq	28a78 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x500>
   289c0:	ldr	r3, [r7, #12]
   289c4:	mov	r5, #0
   289c8:	cmp	r3, r5
   289cc:	str	r4, [sp, #20]
   289d0:	str	r5, [sp, #12]
   289d4:	str	r5, [sp, #16]
   289d8:	beq	28a6c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4f4>
   289dc:	sub	r6, r6, #4
   289e0:	add	r8, sp, #8
   289e4:	mov	r9, #3
   289e8:	b	289f4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x47c>
   289ec:	cmp	r5, r3
   289f0:	bcs	28a34 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4bc>
   289f4:	ldr	r4, [r6, #4]!
   289f8:	add	r5, r5, #1
   289fc:	cmp	r4, #0
   28a00:	cmpne	r4, #2
   28a04:	beq	289ec <__flatcc_fb_codegen_bfbs_to_file@@Base+0x474>
   28a08:	mov	r0, r4
   28a0c:	bl	1407c <strlen@plt>
   28a10:	mov	r3, r4
   28a14:	str	r9, [sp]
   28a18:	mov	r1, r4
   28a1c:	mov	r2, r0
   28a20:	mov	r0, r8
   28a24:	bl	28744 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1cc>
   28a28:	ldr	r3, [r7, #12]
   28a2c:	cmp	r5, r3
   28a30:	bcc	289f4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x47c>
   28a34:	ldr	r0, [r7]
   28a38:	cmp	r0, #0
   28a3c:	beq	28a44 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4cc>
   28a40:	bl	13fd4 <free@plt>
   28a44:	mov	ip, r8
   28a48:	mov	lr, #0
   28a4c:	ldm	ip!, {r0, r1, r2, r3}
   28a50:	str	r0, [r7]
   28a54:	str	r1, [r7, #4]
   28a58:	str	r2, [r7, #8]
   28a5c:	str	r3, [r7, #12]
   28a60:	mov	r0, lr
   28a64:	add	sp, sp, #28
   28a68:	pop	{r4, r5, r6, r7, r8, r9, pc}
   28a6c:	mov	r0, r6
   28a70:	add	r8, sp, #8
   28a74:	b	28a38 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4c0>
   28a78:	mvn	lr, #0
   28a7c:	b	28a60 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4e8>

00028a80 <str_set_clear@@Base>:
   28a80:	push	{r4, lr}
   28a84:	mov	r4, r0
   28a88:	ldr	r0, [r0]
   28a8c:	cmp	r0, #0
   28a90:	beq	28a98 <str_set_clear@@Base+0x18>
   28a94:	bl	13fd4 <free@plt>
   28a98:	mov	r3, #0
   28a9c:	str	r3, [r4]
   28aa0:	str	r3, [r4, #4]
   28aa4:	str	r3, [r4, #8]
   28aa8:	str	r3, [r4, #12]
   28aac:	pop	{r4, pc}

00028ab0 <str_set_destroy@@Base>:
   28ab0:	push	{r4, r5, r6, r7, r8, lr}
   28ab4:	subs	r7, r1, #0
   28ab8:	mov	r6, r0
   28abc:	beq	28b10 <str_set_destroy@@Base+0x60>
   28ac0:	ldr	r3, [r0, #12]
   28ac4:	ldr	r0, [r0]
   28ac8:	cmp	r3, #0
   28acc:	beq	28b14 <str_set_destroy@@Base+0x64>
   28ad0:	mov	r8, r2
   28ad4:	sub	r5, r0, #4
   28ad8:	mov	r4, #0
   28adc:	b	28ae8 <str_set_destroy@@Base+0x38>
   28ae0:	cmp	r4, r3
   28ae4:	bcs	28b10 <str_set_destroy@@Base+0x60>
   28ae8:	ldr	r1, [r5, #4]!
   28aec:	add	r4, r4, #1
   28af0:	cmp	r1, #0
   28af4:	cmpne	r1, #2
   28af8:	beq	28ae0 <str_set_destroy@@Base+0x30>
   28afc:	mov	r0, r8
   28b00:	blx	r7
   28b04:	ldr	r3, [r6, #12]
   28b08:	cmp	r4, r3
   28b0c:	bcc	28ae8 <str_set_destroy@@Base+0x38>
   28b10:	ldr	r0, [r6]
   28b14:	cmp	r0, #0
   28b18:	beq	28b20 <str_set_destroy@@Base+0x70>
   28b1c:	bl	13fd4 <free@plt>
   28b20:	mov	r3, #0
   28b24:	str	r3, [r6]
   28b28:	str	r3, [r6, #4]
   28b2c:	str	r3, [r6, #8]
   28b30:	str	r3, [r6, #12]
   28b34:	pop	{r4, r5, r6, r7, r8, pc}

00028b38 <str_set_init@@Base>:
   28b38:	cmp	r1, #2
   28b3c:	push	{r4, r5, r6, lr}
   28b40:	mov	r4, #4
   28b44:	mov	r5, r0
   28b48:	bls	28b60 <str_set_init@@Base+0x28>
   28b4c:	mov	r2, #179	; 0xb3
   28b50:	lsl	r4, r4, #1
   28b54:	mul	r3, r2, r4
   28b58:	cmp	r1, r3, lsr #8
   28b5c:	bhi	28b50 <str_set_init@@Base+0x18>
   28b60:	mov	r1, #4
   28b64:	mov	r0, r4
   28b68:	bl	13fa4 <calloc@plt>
   28b6c:	cmp	r0, #0
   28b70:	str	r0, [r5]
   28b74:	movne	r0, #0
   28b78:	strne	r4, [r5, #12]
   28b7c:	strne	r0, [r5, #4]
   28b80:	strne	r0, [r5, #8]
   28b84:	mvneq	r0, #0
   28b88:	pop	{r4, r5, r6, pc}

00028b8c <str_set_resize@@Base>:
   28b8c:	b	2896c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3f4>

00028b90 <str_set_insert@@Base>:
   28b90:	b	28744 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1cc>

00028b94 <str_set_insert_item@@Base>:
   28b94:	push	{r4, r5, r6, lr}
   28b98:	mov	r5, r0
   28b9c:	sub	sp, sp, #8
   28ba0:	mov	r0, r1
   28ba4:	mov	r4, r1
   28ba8:	mov	r6, r2
   28bac:	bl	1407c <strlen@plt>
   28bb0:	str	r6, [sp]
   28bb4:	mov	r3, r4
   28bb8:	mov	r1, r4
   28bbc:	mov	r2, r0
   28bc0:	mov	r0, r5
   28bc4:	bl	28744 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1cc>
   28bc8:	add	sp, sp, #8
   28bcc:	pop	{r4, r5, r6, pc}

00028bd0 <str_set_find@@Base>:
   28bd0:	push	{r4, r5, r6, r7, r8, r9, lr}
   28bd4:	sub	sp, sp, #20
   28bd8:	ldr	r9, [r0]
   28bdc:	cmp	r9, #0
   28be0:	beq	28c58 <str_set_find@@Base+0x88>
   28be4:	mov	r6, r1
   28be8:	ldr	r1, [pc, #120]	; 28c68 <str_set_find@@Base+0x98>
   28bec:	add	r3, sp, #8
   28bf0:	ldr	r7, [r0, #12]
   28bf4:	stm	sp, {r1, r3}
   28bf8:	mov	r0, r6
   28bfc:	mov	r3, #0
   28c00:	mov	r8, r2
   28c04:	bl	3fe60 <cmetrohash64_1@@Base>
   28c08:	ldr	r5, [sp, #8]
   28c0c:	sub	r7, r7, #1
   28c10:	and	r3, r7, r5
   28c14:	ldr	r4, [r9, r3, lsl #2]
   28c18:	cmp	r4, #0
   28c1c:	beq	28c58 <str_set_find@@Base+0x88>
   28c20:	add	r5, r5, #1
   28c24:	cmp	r4, #2
   28c28:	mov	r1, r4
   28c2c:	mov	r2, r8
   28c30:	mov	r0, r6
   28c34:	beq	28c44 <str_set_find@@Base+0x74>
   28c38:	bl	14130 <strncmp@plt>
   28c3c:	cmp	r0, #0
   28c40:	beq	28c5c <str_set_find@@Base+0x8c>
   28c44:	and	r3, r7, r5
   28c48:	add	r5, r5, #1
   28c4c:	ldr	r4, [r9, r3, lsl #2]
   28c50:	cmp	r4, #0
   28c54:	bne	28c24 <str_set_find@@Base+0x54>
   28c58:	mov	r4, #0
   28c5c:	mov	r0, r4
   28c60:	add	sp, sp, #20
   28c64:	pop	{r4, r5, r6, r7, r8, r9, pc}
   28c68:	svccs	0x00693b52

00028c6c <str_set_find_item@@Base>:
   28c6c:	push	{r4, r5, r6, r7, r8, r9, lr}
   28c70:	mov	r4, r0
   28c74:	sub	sp, sp, #20
   28c78:	mov	r0, r1
   28c7c:	mov	r7, r1
   28c80:	bl	1407c <strlen@plt>
   28c84:	ldr	r8, [r4]
   28c88:	cmp	r8, #0
   28c8c:	beq	28d04 <str_set_find_item@@Base+0x98>
   28c90:	ldr	r2, [pc, #124]	; 28d14 <str_set_find_item@@Base+0xa8>
   28c94:	add	r3, sp, #8
   28c98:	ldr	r6, [r4, #12]
   28c9c:	mov	r9, r0
   28ca0:	stm	sp, {r2, r3}
   28ca4:	mov	r2, r0
   28ca8:	mov	r3, #0
   28cac:	mov	r0, r7
   28cb0:	bl	3fe60 <cmetrohash64_1@@Base>
   28cb4:	ldr	r5, [sp, #8]
   28cb8:	sub	r6, r6, #1
   28cbc:	and	r3, r6, r5
   28cc0:	ldr	r4, [r8, r3, lsl #2]
   28cc4:	cmp	r4, #0
   28cc8:	beq	28d04 <str_set_find_item@@Base+0x98>
   28ccc:	add	r5, r5, #1
   28cd0:	cmp	r4, #2
   28cd4:	mov	r1, r4
   28cd8:	mov	r2, r9
   28cdc:	mov	r0, r7
   28ce0:	beq	28cf0 <str_set_find_item@@Base+0x84>
   28ce4:	bl	14130 <strncmp@plt>
   28ce8:	cmp	r0, #0
   28cec:	beq	28d08 <str_set_find_item@@Base+0x9c>
   28cf0:	and	r3, r6, r5
   28cf4:	add	r5, r5, #1
   28cf8:	ldr	r4, [r8, r3, lsl #2]
   28cfc:	cmp	r4, #0
   28d00:	bne	28cd0 <str_set_find_item@@Base+0x64>
   28d04:	mov	r4, #0
   28d08:	mov	r0, r4
   28d0c:	add	sp, sp, #20
   28d10:	pop	{r4, r5, r6, r7, r8, r9, pc}
   28d14:	svccs	0x00693b52

00028d18 <str_set_remove@@Base>:
   28d18:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   28d1c:	sub	sp, sp, #20
   28d20:	ldr	r5, [r0]
   28d24:	cmp	r5, #0
   28d28:	beq	28dac <str_set_remove@@Base+0x94>
   28d2c:	mov	r6, r1
   28d30:	ldr	r1, [pc, #164]	; 28ddc <str_set_remove@@Base+0xc4>
   28d34:	add	r3, sp, #8
   28d38:	ldr	r7, [r0, #12]
   28d3c:	mov	r9, r0
   28d40:	stm	sp, {r1, r3}
   28d44:	mov	r0, r6
   28d48:	mov	r3, #0
   28d4c:	mov	r8, r2
   28d50:	bl	3fe60 <cmetrohash64_1@@Base>
   28d54:	ldr	sl, [sp, #8]
   28d58:	sub	r7, r7, #1
   28d5c:	and	r3, r7, sl
   28d60:	ldr	fp, [r5, r3, lsl #2]
   28d64:	add	r4, r5, r3, lsl #2
   28d68:	cmp	fp, #0
   28d6c:	beq	28dac <str_set_remove@@Base+0x94>
   28d70:	add	sl, sl, #1
   28d74:	cmp	fp, #2
   28d78:	mov	r1, fp
   28d7c:	mov	r2, r8
   28d80:	mov	r0, r6
   28d84:	beq	28d94 <str_set_remove@@Base+0x7c>
   28d88:	bl	14130 <strncmp@plt>
   28d8c:	cmp	r0, #0
   28d90:	beq	28dbc <str_set_remove@@Base+0xa4>
   28d94:	and	r3, r7, sl
   28d98:	add	sl, sl, #1
   28d9c:	ldr	fp, [r5, r3, lsl #2]
   28da0:	add	r4, r5, r3, lsl #2
   28da4:	cmp	fp, #0
   28da8:	bne	28d74 <str_set_remove@@Base+0x5c>
   28dac:	mov	fp, #0
   28db0:	mov	r0, fp
   28db4:	add	sp, sp, #20
   28db8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28dbc:	ldr	r3, [r9, #8]
   28dc0:	mov	r2, #2
   28dc4:	sub	r3, r3, #1
   28dc8:	str	r2, [r4]
   28dcc:	mov	r0, fp
   28dd0:	str	r3, [r9, #8]
   28dd4:	add	sp, sp, #20
   28dd8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28ddc:	svccs	0x00693b52

00028de0 <str_set_remove_item@@Base>:
   28de0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   28de4:	mov	r9, r0
   28de8:	sub	sp, sp, #20
   28dec:	mov	r0, r1
   28df0:	mov	r7, r1
   28df4:	bl	1407c <strlen@plt>
   28df8:	ldr	r5, [r9]
   28dfc:	cmp	r5, #0
   28e00:	beq	28e80 <str_set_remove_item@@Base+0xa0>
   28e04:	ldr	r2, [pc, #164]	; 28eb0 <str_set_remove_item@@Base+0xd0>
   28e08:	add	r3, sp, #8
   28e0c:	ldr	r6, [r9, #12]
   28e10:	mov	r8, r0
   28e14:	stm	sp, {r2, r3}
   28e18:	mov	r2, r0
   28e1c:	mov	r3, #0
   28e20:	mov	r0, r7
   28e24:	bl	3fe60 <cmetrohash64_1@@Base>
   28e28:	ldr	sl, [sp, #8]
   28e2c:	sub	r6, r6, #1
   28e30:	and	r3, r6, sl
   28e34:	ldr	fp, [r5, r3, lsl #2]
   28e38:	add	r4, r5, r3, lsl #2
   28e3c:	cmp	fp, #0
   28e40:	beq	28e80 <str_set_remove_item@@Base+0xa0>
   28e44:	add	sl, sl, #1
   28e48:	cmp	fp, #2
   28e4c:	mov	r1, fp
   28e50:	mov	r2, r8
   28e54:	mov	r0, r7
   28e58:	beq	28e68 <str_set_remove_item@@Base+0x88>
   28e5c:	bl	14130 <strncmp@plt>
   28e60:	cmp	r0, #0
   28e64:	beq	28e90 <str_set_remove_item@@Base+0xb0>
   28e68:	and	r3, r6, sl
   28e6c:	add	sl, sl, #1
   28e70:	ldr	fp, [r5, r3, lsl #2]
   28e74:	add	r4, r5, r3, lsl #2
   28e78:	cmp	fp, #0
   28e7c:	bne	28e48 <str_set_remove_item@@Base+0x68>
   28e80:	mov	fp, #0
   28e84:	mov	r0, fp
   28e88:	add	sp, sp, #20
   28e8c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28e90:	ldr	r3, [r9, #8]
   28e94:	mov	r2, #2
   28e98:	sub	r3, r3, #1
   28e9c:	str	r2, [r4]
   28ea0:	mov	r0, fp
   28ea4:	str	r3, [r9, #8]
   28ea8:	add	sp, sp, #20
   28eac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28eb0:	svccs	0x00693b52

00028eb4 <str_set_visit@@Base>:
   28eb4:	ldr	r3, [r0, #12]
   28eb8:	push	{r4, r5, r6, r7, r8, lr}
   28ebc:	cmp	r3, #0
   28ec0:	ldr	r5, [r0]
   28ec4:	popeq	{r4, r5, r6, r7, r8, pc}
   28ec8:	mov	r7, r2
   28ecc:	mov	r6, r1
   28ed0:	mov	r8, r0
   28ed4:	sub	r5, r5, #4
   28ed8:	mov	r4, #0
   28edc:	b	28ee8 <str_set_visit@@Base+0x34>
   28ee0:	cmp	r4, r3
   28ee4:	bcs	28f10 <str_set_visit@@Base+0x5c>
   28ee8:	ldr	r1, [r5, #4]!
   28eec:	add	r4, r4, #1
   28ef0:	cmp	r1, #0
   28ef4:	cmpne	r1, #2
   28ef8:	beq	28ee0 <str_set_visit@@Base+0x2c>
   28efc:	mov	r0, r7
   28f00:	blx	r6
   28f04:	ldr	r3, [r8, #12]
   28f08:	cmp	r4, r3
   28f0c:	bcc	28ee8 <str_set_visit@@Base+0x34>
   28f10:	pop	{r4, r5, r6, r7, r8, pc}
   28f14:	push	{r4, r5, r6, r7, r8, r9, lr}
   28f18:	subs	r7, r2, #0
   28f1c:	sub	sp, sp, #28
   28f20:	beq	290c0 <str_set_visit@@Base+0x20c>
   28f24:	cmp	r7, #2
   28f28:	beq	29090 <str_set_visit@@Base+0x1dc>
   28f2c:	cmp	r7, #1
   28f30:	beq	2907c <str_set_visit@@Base+0x1c8>
   28f34:	ldr	r9, [r0, #12]
   28f38:	mov	r8, r3
   28f3c:	mov	r3, #179	; 0xb3
   28f40:	mov	r5, r1
   28f44:	mul	r3, r3, r9
   28f48:	ldr	r1, [r0, #8]
   28f4c:	mov	r6, r0
   28f50:	cmp	r1, r3, lsr #8
   28f54:	bcc	28f6c <str_set_visit@@Base+0xb8>
   28f58:	lsl	r1, r1, #1
   28f5c:	bl	290f8 <str_set_visit@@Base+0x244>
   28f60:	cmp	r0, #0
   28f64:	bne	290a4 <str_set_visit@@Base+0x1f0>
   28f68:	ldr	r9, [r6, #12]
   28f6c:	ldr	r2, [pc, #352]	; 290d4 <str_set_visit@@Base+0x220>
   28f70:	add	r0, sp, #24
   28f74:	add	r3, sp, #16
   28f78:	str	r5, [r0, #-12]!
   28f7c:	stm	sp, {r2, r3}
   28f80:	mov	r2, #4
   28f84:	mov	r3, #0
   28f88:	ldr	r4, [r6]
   28f8c:	bl	3fe60 <cmetrohash64_1@@Base>
   28f90:	sub	r3, r8, #2
   28f94:	ldr	r2, [sp, #16]
   28f98:	sub	r9, r9, #1
   28f9c:	cmp	r3, #1
   28fa0:	and	r3, r9, r2
   28fa4:	bls	29030 <str_set_visit@@Base+0x17c>
   28fa8:	ldr	r0, [r4, r3, lsl #2]
   28fac:	add	r3, r4, r3, lsl #2
   28fb0:	cmp	r0, #0
   28fb4:	moveq	r1, r3
   28fb8:	beq	29004 <str_set_visit@@Base+0x150>
   28fbc:	add	r2, r2, #1
   28fc0:	mov	r1, #0
   28fc4:	b	28fe8 <str_set_visit@@Base+0x134>
   28fc8:	cmp	r5, r0
   28fcc:	beq	29020 <str_set_visit@@Base+0x16c>
   28fd0:	and	r3, r9, r2
   28fd4:	add	r2, r2, #1
   28fd8:	ldr	r0, [r4, r3, lsl #2]
   28fdc:	add	r3, r4, r3, lsl #2
   28fe0:	cmp	r0, #0
   28fe4:	beq	28ffc <str_set_visit@@Base+0x148>
   28fe8:	cmp	r0, #2
   28fec:	bne	28fc8 <str_set_visit@@Base+0x114>
   28ff0:	cmp	r1, #0
   28ff4:	moveq	r1, r3
   28ff8:	b	28fd0 <str_set_visit@@Base+0x11c>
   28ffc:	cmp	r1, #0
   29000:	moveq	r1, r3
   29004:	ldr	r3, [r6, #8]
   29008:	mov	r0, #0
   2900c:	add	r3, r3, #1
   29010:	str	r3, [r6, #8]
   29014:	str	r7, [r1]
   29018:	add	sp, sp, #28
   2901c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   29020:	cmp	r8, #0
   29024:	streq	r7, [r3]
   29028:	add	sp, sp, #28
   2902c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   29030:	ldr	r0, [r4, r3, lsl #2]
   29034:	ldr	r1, [r6, #8]
   29038:	cmp	r0, #0
   2903c:	cmpne	r0, #2
   29040:	add	r1, r1, #1
   29044:	str	r1, [r6, #8]
   29048:	add	r3, r4, r3, lsl #2
   2904c:	beq	29070 <str_set_visit@@Base+0x1bc>
   29050:	add	r2, r2, #1
   29054:	and	r3, r9, r2
   29058:	add	r2, r2, #1
   2905c:	ldr	r1, [r4, r3, lsl #2]
   29060:	add	r3, r4, r3, lsl #2
   29064:	cmp	r1, #0
   29068:	cmpne	r1, #2
   2906c:	bne	29054 <str_set_visit@@Base+0x1a0>
   29070:	str	r7, [r3]
   29074:	mov	r0, #0
   29078:	b	29018 <str_set_visit@@Base+0x164>
   2907c:	ldr	r3, [pc, #84]	; 290d8 <str_set_visit@@Base+0x224>
   29080:	mov	r2, #116	; 0x74
   29084:	ldr	r1, [pc, #80]	; 290dc <str_set_visit@@Base+0x228>
   29088:	ldr	r0, [pc, #80]	; 290e0 <str_set_visit@@Base+0x22c>
   2908c:	bl	14148 <__assert_fail@plt>
   29090:	ldr	r3, [pc, #64]	; 290d8 <str_set_visit@@Base+0x224>
   29094:	mov	r2, #115	; 0x73
   29098:	ldr	r1, [pc, #60]	; 290dc <str_set_visit@@Base+0x228>
   2909c:	ldr	r0, [pc, #64]	; 290e4 <str_set_visit@@Base+0x230>
   290a0:	bl	14148 <__assert_fail@plt>
   290a4:	ldr	r3, [pc, #60]	; 290e8 <str_set_visit@@Base+0x234>
   290a8:	ldr	r2, [pc, #60]	; 290ec <str_set_visit@@Base+0x238>
   290ac:	ldr	r1, [pc, #60]	; 290f0 <str_set_visit@@Base+0x23c>
   290b0:	ldr	r0, [r3]
   290b4:	bl	14094 <fprintf@plt>
   290b8:	mov	r0, #1
   290bc:	bl	14070 <exit@plt>
   290c0:	ldr	r3, [pc, #16]	; 290d8 <str_set_visit@@Base+0x224>
   290c4:	mov	r2, #114	; 0x72
   290c8:	ldr	r1, [pc, #12]	; 290dc <str_set_visit@@Base+0x228>
   290cc:	ldr	r0, [pc, #32]	; 290f4 <str_set_visit@@Base+0x240>
   290d0:	bl	14148 <__assert_fail@plt>
   290d4:	svccs	0x00693b52
   290d8:	andeq	sl, r5, r0, asr #29
   290dc:	ldrdeq	sl, [r5], -ip
   290e0:	andeq	sl, r5, ip, asr lr
   290e4:	andeq	sl, r5, r4, asr #28
   290e8:	andeq	pc, r6, r8, lsr #1
   290ec:	andeq	sl, r5, r4, ror lr
   290f0:	andeq	sl, r5, r8, lsr #29
   290f4:	andeq	sl, r5, ip, lsr #28
   290f8:	ldr	r3, [r0, #8]
   290fc:	push	{r4, r5, r6, r7, r8, lr}
   29100:	cmp	r1, r3
   29104:	movcc	r1, r3
   29108:	cmp	r1, #2
   2910c:	sub	sp, sp, #16
   29110:	mov	r7, r0
   29114:	ldr	r6, [r0]
   29118:	mov	r5, #4
   2911c:	bls	29134 <str_set_visit@@Base+0x280>
   29120:	mov	r2, #179	; 0xb3
   29124:	lsl	r5, r5, #1
   29128:	mul	r3, r2, r5
   2912c:	cmp	r1, r3, lsr #8
   29130:	bhi	29124 <str_set_visit@@Base+0x270>
   29134:	mov	r1, #4
   29138:	mov	r0, r5
   2913c:	bl	13fa4 <calloc@plt>
   29140:	cmp	r0, #0
   29144:	str	r0, [sp]
   29148:	beq	291f4 <str_set_visit@@Base+0x340>
   2914c:	ldr	r3, [r7, #12]
   29150:	mov	r4, #0
   29154:	cmp	r3, r4
   29158:	str	r5, [sp, #12]
   2915c:	str	r4, [sp, #4]
   29160:	str	r4, [sp, #8]
   29164:	beq	291e8 <str_set_visit@@Base+0x334>
   29168:	sub	r5, r6, #4
   2916c:	mov	r8, sp
   29170:	mov	r6, #3
   29174:	b	29180 <str_set_visit@@Base+0x2cc>
   29178:	cmp	r4, r3
   2917c:	bcs	291b0 <str_set_visit@@Base+0x2fc>
   29180:	ldr	r2, [r5, #4]!
   29184:	add	r4, r4, #1
   29188:	cmp	r2, #0
   2918c:	cmpne	r2, #2
   29190:	beq	29178 <str_set_visit@@Base+0x2c4>
   29194:	mov	r3, r6
   29198:	mov	r1, r2
   2919c:	mov	r0, r8
   291a0:	bl	28f14 <str_set_visit@@Base+0x60>
   291a4:	ldr	r3, [r7, #12]
   291a8:	cmp	r4, r3
   291ac:	bcc	29180 <str_set_visit@@Base+0x2cc>
   291b0:	ldr	r0, [r7]
   291b4:	cmp	r0, #0
   291b8:	beq	291c0 <str_set_visit@@Base+0x30c>
   291bc:	bl	13fd4 <free@plt>
   291c0:	mov	ip, r8
   291c4:	mov	lr, #0
   291c8:	ldm	ip!, {r0, r1, r2, r3}
   291cc:	str	r0, [r7]
   291d0:	str	r1, [r7, #4]
   291d4:	str	r2, [r7, #8]
   291d8:	str	r3, [r7, #12]
   291dc:	mov	r0, lr
   291e0:	add	sp, sp, #16
   291e4:	pop	{r4, r5, r6, r7, r8, pc}
   291e8:	mov	r0, r6
   291ec:	mov	r8, sp
   291f0:	b	291b4 <str_set_visit@@Base+0x300>
   291f4:	mvn	lr, #0
   291f8:	b	291dc <str_set_visit@@Base+0x328>

000291fc <ptr_set_clear@@Base>:
   291fc:	push	{r4, lr}
   29200:	mov	r4, r0
   29204:	ldr	r0, [r0]
   29208:	cmp	r0, #0
   2920c:	beq	29214 <ptr_set_clear@@Base+0x18>
   29210:	bl	13fd4 <free@plt>
   29214:	mov	r3, #0
   29218:	str	r3, [r4]
   2921c:	str	r3, [r4, #4]
   29220:	str	r3, [r4, #8]
   29224:	str	r3, [r4, #12]
   29228:	pop	{r4, pc}

0002922c <ptr_set_destroy@@Base>:
   2922c:	push	{r4, r5, r6, r7, r8, lr}
   29230:	subs	r7, r1, #0
   29234:	mov	r6, r0
   29238:	beq	2928c <ptr_set_destroy@@Base+0x60>
   2923c:	ldr	r3, [r0, #12]
   29240:	ldr	r0, [r0]
   29244:	cmp	r3, #0
   29248:	beq	29290 <ptr_set_destroy@@Base+0x64>
   2924c:	mov	r8, r2
   29250:	sub	r5, r0, #4
   29254:	mov	r4, #0
   29258:	b	29264 <ptr_set_destroy@@Base+0x38>
   2925c:	cmp	r4, r3
   29260:	bcs	2928c <ptr_set_destroy@@Base+0x60>
   29264:	ldr	r1, [r5, #4]!
   29268:	add	r4, r4, #1
   2926c:	cmp	r1, #0
   29270:	cmpne	r1, #2
   29274:	beq	2925c <ptr_set_destroy@@Base+0x30>
   29278:	mov	r0, r8
   2927c:	blx	r7
   29280:	ldr	r3, [r6, #12]
   29284:	cmp	r4, r3
   29288:	bcc	29264 <ptr_set_destroy@@Base+0x38>
   2928c:	ldr	r0, [r6]
   29290:	cmp	r0, #0
   29294:	beq	2929c <ptr_set_destroy@@Base+0x70>
   29298:	bl	13fd4 <free@plt>
   2929c:	mov	r3, #0
   292a0:	str	r3, [r6]
   292a4:	str	r3, [r6, #4]
   292a8:	str	r3, [r6, #8]
   292ac:	str	r3, [r6, #12]
   292b0:	pop	{r4, r5, r6, r7, r8, pc}

000292b4 <ptr_set_init@@Base>:
   292b4:	cmp	r1, #2
   292b8:	push	{r4, r5, r6, lr}
   292bc:	mov	r4, #4
   292c0:	mov	r5, r0
   292c4:	bls	292dc <ptr_set_init@@Base+0x28>
   292c8:	mov	r2, #179	; 0xb3
   292cc:	lsl	r4, r4, #1
   292d0:	mul	r3, r2, r4
   292d4:	cmp	r1, r3, lsr #8
   292d8:	bhi	292cc <ptr_set_init@@Base+0x18>
   292dc:	mov	r1, #4
   292e0:	mov	r0, r4
   292e4:	bl	13fa4 <calloc@plt>
   292e8:	cmp	r0, #0
   292ec:	str	r0, [r5]
   292f0:	movne	r0, #0
   292f4:	strne	r4, [r5, #12]
   292f8:	strne	r0, [r5, #4]
   292fc:	strne	r0, [r5, #8]
   29300:	mvneq	r0, #0
   29304:	pop	{r4, r5, r6, pc}

00029308 <ptr_set_resize@@Base>:
   29308:	b	290f8 <str_set_visit@@Base+0x244>

0002930c <ptr_set_insert@@Base>:
   2930c:	mov	r2, r3
   29310:	ldr	r3, [sp]
   29314:	b	28f14 <str_set_visit@@Base+0x60>

00029318 <ptr_set_insert_item@@Base>:
   29318:	mov	r3, r2
   2931c:	mov	r2, r1
   29320:	b	28f14 <str_set_visit@@Base+0x60>

00029324 <ptr_set_find@@Base>:
   29324:	push	{r4, r5, r6, lr}
   29328:	sub	sp, sp, #24
   2932c:	ldr	r5, [r0]
   29330:	cmp	r5, #0
   29334:	beq	293a4 <ptr_set_find@@Base+0x80>
   29338:	mov	r3, r0
   2933c:	ldr	r2, [pc, #108]	; 293b0 <ptr_set_find@@Base+0x8c>
   29340:	ldr	r4, [r3, #12]
   29344:	add	r0, sp, #24
   29348:	add	r3, sp, #16
   2934c:	str	r1, [r0, #-12]!
   29350:	stm	sp, {r2, r3}
   29354:	mov	r2, #4
   29358:	mov	r3, #0
   2935c:	mov	r6, r1
   29360:	bl	3fe60 <cmetrohash64_1@@Base>
   29364:	ldr	r3, [sp, #16]
   29368:	sub	r4, r4, #1
   2936c:	and	r2, r4, r3
   29370:	ldr	r0, [r5, r2, lsl #2]
   29374:	cmp	r0, #0
   29378:	beq	293a4 <ptr_set_find@@Base+0x80>
   2937c:	add	r3, r3, #1
   29380:	cmp	r0, #2
   29384:	and	r2, r4, r3
   29388:	beq	29394 <ptr_set_find@@Base+0x70>
   2938c:	cmp	r6, r0
   29390:	beq	293a8 <ptr_set_find@@Base+0x84>
   29394:	ldr	r0, [r5, r2, lsl #2]
   29398:	add	r3, r3, #1
   2939c:	cmp	r0, #0
   293a0:	bne	29380 <ptr_set_find@@Base+0x5c>
   293a4:	mov	r0, #0
   293a8:	add	sp, sp, #24
   293ac:	pop	{r4, r5, r6, pc}
   293b0:	svccs	0x00693b52

000293b4 <ptr_set_find_item@@Base>:
   293b4:	push	{r4, r5, r6, lr}
   293b8:	sub	sp, sp, #24
   293bc:	ldr	r5, [r0]
   293c0:	cmp	r5, #0
   293c4:	beq	29434 <ptr_set_find_item@@Base+0x80>
   293c8:	mov	r3, r0
   293cc:	ldr	r2, [pc, #108]	; 29440 <ptr_set_find_item@@Base+0x8c>
   293d0:	ldr	r4, [r3, #12]
   293d4:	add	r0, sp, #24
   293d8:	add	r3, sp, #16
   293dc:	str	r1, [r0, #-12]!
   293e0:	stm	sp, {r2, r3}
   293e4:	mov	r2, #4
   293e8:	mov	r3, #0
   293ec:	mov	r6, r1
   293f0:	bl	3fe60 <cmetrohash64_1@@Base>
   293f4:	ldr	r3, [sp, #16]
   293f8:	sub	r4, r4, #1
   293fc:	and	r2, r4, r3
   29400:	ldr	r0, [r5, r2, lsl #2]
   29404:	cmp	r0, #0
   29408:	beq	29434 <ptr_set_find_item@@Base+0x80>
   2940c:	add	r3, r3, #1
   29410:	cmp	r0, #2
   29414:	and	r2, r4, r3
   29418:	beq	29424 <ptr_set_find_item@@Base+0x70>
   2941c:	cmp	r6, r0
   29420:	beq	29438 <ptr_set_find_item@@Base+0x84>
   29424:	ldr	r0, [r5, r2, lsl #2]
   29428:	add	r3, r3, #1
   2942c:	cmp	r0, #0
   29430:	bne	29410 <ptr_set_find_item@@Base+0x5c>
   29434:	mov	r0, #0
   29438:	add	sp, sp, #24
   2943c:	pop	{r4, r5, r6, pc}
   29440:	svccs	0x00693b52

00029444 <ptr_set_remove@@Base>:
   29444:	push	{r4, r5, r6, r7, lr}
   29448:	sub	sp, sp, #28
   2944c:	ldr	r4, [r0]
   29450:	cmp	r4, #0
   29454:	beq	294cc <ptr_set_remove@@Base+0x88>
   29458:	ldr	r2, [pc, #148]	; 294f4 <ptr_set_remove@@Base+0xb0>
   2945c:	mov	r7, r0
   29460:	add	r3, sp, #16
   29464:	add	r0, sp, #24
   29468:	ldr	r5, [r7, #12]
   2946c:	str	r1, [r0, #-12]!
   29470:	stm	sp, {r2, r3}
   29474:	mov	r3, #0
   29478:	mov	r2, #4
   2947c:	mov	r6, r1
   29480:	bl	3fe60 <cmetrohash64_1@@Base>
   29484:	ldr	r3, [sp, #16]
   29488:	sub	r5, r5, #1
   2948c:	and	ip, r5, r3
   29490:	ldr	r0, [r4, ip, lsl #2]
   29494:	add	ip, r4, ip, lsl #2
   29498:	cmp	r0, #0
   2949c:	beq	294cc <ptr_set_remove@@Base+0x88>
   294a0:	add	r3, r3, #1
   294a4:	cmp	r0, #2
   294a8:	and	r2, r5, r3
   294ac:	beq	294b8 <ptr_set_remove@@Base+0x74>
   294b0:	cmp	r6, r0
   294b4:	beq	294d8 <ptr_set_remove@@Base+0x94>
   294b8:	ldr	r0, [r4, r2, lsl #2]
   294bc:	add	r3, r3, #1
   294c0:	cmp	r0, #0
   294c4:	add	ip, r4, r2, lsl #2
   294c8:	bne	294a4 <ptr_set_remove@@Base+0x60>
   294cc:	mov	r0, #0
   294d0:	add	sp, sp, #28
   294d4:	pop	{r4, r5, r6, r7, pc}
   294d8:	ldr	r3, [r7, #8]
   294dc:	mov	r2, #2
   294e0:	sub	r3, r3, #1
   294e4:	str	r2, [ip]
   294e8:	str	r3, [r7, #8]
   294ec:	add	sp, sp, #28
   294f0:	pop	{r4, r5, r6, r7, pc}
   294f4:	svccs	0x00693b52

000294f8 <ptr_set_remove_item@@Base>:
   294f8:	push	{r4, r5, r6, r7, lr}
   294fc:	sub	sp, sp, #28
   29500:	ldr	r4, [r0]
   29504:	cmp	r4, #0
   29508:	beq	29580 <ptr_set_remove_item@@Base+0x88>
   2950c:	ldr	r2, [pc, #148]	; 295a8 <ptr_set_remove_item@@Base+0xb0>
   29510:	mov	r7, r0
   29514:	add	r3, sp, #16
   29518:	add	r0, sp, #24
   2951c:	ldr	r5, [r7, #12]
   29520:	str	r1, [r0, #-12]!
   29524:	stm	sp, {r2, r3}
   29528:	mov	r3, #0
   2952c:	mov	r2, #4
   29530:	mov	r6, r1
   29534:	bl	3fe60 <cmetrohash64_1@@Base>
   29538:	ldr	r3, [sp, #16]
   2953c:	sub	r5, r5, #1
   29540:	and	ip, r5, r3
   29544:	ldr	r0, [r4, ip, lsl #2]
   29548:	add	ip, r4, ip, lsl #2
   2954c:	cmp	r0, #0
   29550:	beq	29580 <ptr_set_remove_item@@Base+0x88>
   29554:	add	r3, r3, #1
   29558:	cmp	r0, #2
   2955c:	and	r2, r5, r3
   29560:	beq	2956c <ptr_set_remove_item@@Base+0x74>
   29564:	cmp	r6, r0
   29568:	beq	2958c <ptr_set_remove_item@@Base+0x94>
   2956c:	ldr	r0, [r4, r2, lsl #2]
   29570:	add	r3, r3, #1
   29574:	cmp	r0, #0
   29578:	add	ip, r4, r2, lsl #2
   2957c:	bne	29558 <ptr_set_remove_item@@Base+0x60>
   29580:	mov	r0, #0
   29584:	add	sp, sp, #28
   29588:	pop	{r4, r5, r6, r7, pc}
   2958c:	ldr	r3, [r7, #8]
   29590:	mov	r2, #2
   29594:	sub	r3, r3, #1
   29598:	str	r2, [ip]
   2959c:	str	r3, [r7, #8]
   295a0:	add	sp, sp, #28
   295a4:	pop	{r4, r5, r6, r7, pc}
   295a8:	svccs	0x00693b52

000295ac <ptr_set_visit@@Base>:
   295ac:	ldr	r3, [r0, #12]
   295b0:	push	{r4, r5, r6, r7, r8, lr}
   295b4:	cmp	r3, #0
   295b8:	ldr	r5, [r0]
   295bc:	popeq	{r4, r5, r6, r7, r8, pc}
   295c0:	mov	r7, r2
   295c4:	mov	r6, r1
   295c8:	mov	r8, r0
   295cc:	sub	r5, r5, #4
   295d0:	mov	r4, #0
   295d4:	b	295e0 <ptr_set_visit@@Base+0x34>
   295d8:	cmp	r4, r3
   295dc:	bcs	29608 <ptr_set_visit@@Base+0x5c>
   295e0:	ldr	r1, [r5, #4]!
   295e4:	add	r4, r4, #1
   295e8:	cmp	r1, #0
   295ec:	cmpne	r1, #2
   295f0:	beq	295d8 <ptr_set_visit@@Base+0x2c>
   295f4:	mov	r0, r7
   295f8:	blx	r6
   295fc:	ldr	r3, [r8, #12]
   29600:	cmp	r4, r3
   29604:	bcc	295e0 <ptr_set_visit@@Base+0x34>
   29608:	pop	{r4, r5, r6, r7, r8, pc}
   2960c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   29610:	sub	sp, sp, #36	; 0x24
   29614:	cmp	r3, #0
   29618:	str	r3, [sp, #12]
   2961c:	str	r1, [sp, #16]
   29620:	beq	29810 <ptr_set_visit@@Base+0x264>
   29624:	cmp	r3, #2
   29628:	beq	297e0 <ptr_set_visit@@Base+0x234>
   2962c:	cmp	r3, #1
   29630:	beq	297cc <ptr_set_visit@@Base+0x220>
   29634:	ldr	r8, [r0, #12]
   29638:	mov	r3, #179	; 0xb3
   2963c:	ldr	r1, [r0, #8]
   29640:	mul	r3, r3, r8
   29644:	mov	r9, r2
   29648:	mov	sl, r0
   2964c:	cmp	r1, r3, lsr #8
   29650:	bcc	29668 <ptr_set_visit@@Base+0xbc>
   29654:	lsl	r1, r1, #1
   29658:	bl	29848 <ptr_set_visit@@Base+0x29c>
   2965c:	cmp	r0, #0
   29660:	bne	297f4 <ptr_set_visit@@Base+0x248>
   29664:	ldr	r8, [sl, #12]
   29668:	ldr	r2, [pc, #436]	; 29824 <ptr_set_visit@@Base+0x278>
   2966c:	add	r3, sp, #24
   29670:	ldr	r0, [sp, #16]
   29674:	stm	sp, {r2, r3}
   29678:	mov	r3, #0
   2967c:	mov	r2, r9
   29680:	ldr	r7, [sl]
   29684:	bl	3fe60 <cmetrohash64_1@@Base>
   29688:	ldr	r3, [sp, #72]	; 0x48
   2968c:	ldr	r6, [sp, #24]
   29690:	sub	r3, r3, #2
   29694:	sub	r8, r8, #1
   29698:	cmp	r3, #1
   2969c:	and	r4, r8, r6
   296a0:	bls	29778 <ptr_set_visit@@Base+0x1cc>
   296a4:	ldr	r5, [r7, r4, lsl #2]
   296a8:	add	r4, r7, r4, lsl #2
   296ac:	cmp	r5, #0
   296b0:	moveq	fp, r4
   296b4:	beq	29754 <ptr_set_visit@@Base+0x1a8>
   296b8:	str	sl, [sp, #20]
   296bc:	add	r6, r6, #1
   296c0:	mov	sl, r5
   296c4:	mov	fp, #0
   296c8:	ldr	r5, [sp, #16]
   296cc:	b	296e8 <ptr_set_visit@@Base+0x13c>
   296d0:	and	r4, r8, r6
   296d4:	add	r6, r6, #1
   296d8:	ldr	sl, [r7, r4, lsl #2]
   296dc:	add	r4, r7, r4, lsl #2
   296e0:	cmp	sl, #0
   296e4:	beq	29748 <ptr_set_visit@@Base+0x19c>
   296e8:	cmp	sl, #2
   296ec:	beq	2973c <ptr_set_visit@@Base+0x190>
   296f0:	ldr	r2, [sl, #4]
   296f4:	ldr	r1, [r2, #4]
   296f8:	cmp	r9, r1
   296fc:	bne	296d0 <ptr_set_visit@@Base+0x124>
   29700:	ldr	r1, [r2]
   29704:	mov	r0, r5
   29708:	mov	r2, r9
   2970c:	bl	13ff8 <memcmp@plt>
   29710:	cmp	r0, #0
   29714:	bne	296d0 <ptr_set_visit@@Base+0x124>
   29718:	ldr	r3, [sp, #72]	; 0x48
   2971c:	mov	r5, sl
   29720:	cmp	r3, #0
   29724:	bne	2976c <ptr_set_visit@@Base+0x1c0>
   29728:	ldr	r3, [sp, #12]
   2972c:	mov	r0, r5
   29730:	str	r3, [r4]
   29734:	add	sp, sp, #36	; 0x24
   29738:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2973c:	cmp	fp, #0
   29740:	moveq	fp, r4
   29744:	b	296d0 <ptr_set_visit@@Base+0x124>
   29748:	cmp	fp, #0
   2974c:	ldr	sl, [sp, #20]
   29750:	moveq	fp, r4
   29754:	ldr	r2, [sl, #8]
   29758:	ldr	r3, [sp, #12]
   2975c:	mov	r5, #0
   29760:	add	r2, r2, #1
   29764:	str	r2, [sl, #8]
   29768:	str	r3, [fp]
   2976c:	mov	r0, r5
   29770:	add	sp, sp, #36	; 0x24
   29774:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   29778:	ldr	r2, [r7, r4, lsl #2]
   2977c:	ldr	r3, [sl, #8]
   29780:	cmp	r2, #0
   29784:	cmpne	r2, #2
   29788:	add	r3, r3, #1
   2978c:	str	r3, [sl, #8]
   29790:	add	r4, r7, r4, lsl #2
   29794:	beq	297bc <ptr_set_visit@@Base+0x210>
   29798:	add	r6, r6, #1
   2979c:	and	r3, r8, r6
   297a0:	add	r6, r6, #1
   297a4:	ldr	r2, [r7, r3, lsl #2]
   297a8:	add	r3, r7, r3, lsl #2
   297ac:	cmp	r2, #0
   297b0:	cmpne	r2, #2
   297b4:	bne	2979c <ptr_set_visit@@Base+0x1f0>
   297b8:	mov	r4, r3
   297bc:	ldr	r3, [sp, #12]
   297c0:	mov	r5, #0
   297c4:	str	r3, [r4]
   297c8:	b	2976c <ptr_set_visit@@Base+0x1c0>
   297cc:	ldr	r3, [pc, #84]	; 29828 <ptr_set_visit@@Base+0x27c>
   297d0:	mov	r2, #116	; 0x74
   297d4:	ldr	r1, [pc, #80]	; 2982c <ptr_set_visit@@Base+0x280>
   297d8:	ldr	r0, [pc, #80]	; 29830 <ptr_set_visit@@Base+0x284>
   297dc:	bl	14148 <__assert_fail@plt>
   297e0:	ldr	r3, [pc, #64]	; 29828 <ptr_set_visit@@Base+0x27c>
   297e4:	mov	r2, #115	; 0x73
   297e8:	ldr	r1, [pc, #60]	; 2982c <ptr_set_visit@@Base+0x280>
   297ec:	ldr	r0, [pc, #64]	; 29834 <ptr_set_visit@@Base+0x288>
   297f0:	bl	14148 <__assert_fail@plt>
   297f4:	ldr	r3, [pc, #60]	; 29838 <ptr_set_visit@@Base+0x28c>
   297f8:	ldr	r2, [pc, #60]	; 2983c <ptr_set_visit@@Base+0x290>
   297fc:	ldr	r1, [pc, #60]	; 29840 <ptr_set_visit@@Base+0x294>
   29800:	ldr	r0, [r3]
   29804:	bl	14094 <fprintf@plt>
   29808:	mov	r0, #1
   2980c:	bl	14070 <exit@plt>
   29810:	ldr	r3, [pc, #16]	; 29828 <ptr_set_visit@@Base+0x27c>
   29814:	mov	r2, #114	; 0x72
   29818:	ldr	r1, [pc, #12]	; 2982c <ptr_set_visit@@Base+0x280>
   2981c:	ldr	r0, [pc, #32]	; 29844 <ptr_set_visit@@Base+0x298>
   29820:	bl	14148 <__assert_fail@plt>
   29824:	svccs	0x00693b52
   29828:	ldrdeq	sl, [r5], -r8
   2982c:	ldrdeq	sl, [r5], -ip
   29830:	andeq	sl, r5, ip, asr lr
   29834:	andeq	sl, r5, r4, asr #28
   29838:	andeq	pc, r6, r8, lsr #1
   2983c:	andeq	sl, r5, r4, ror lr
   29840:	andeq	sl, r5, r8, lsr #29
   29844:	andeq	sl, r5, ip, lsr #28
   29848:	ldr	r3, [r0, #8]
   2984c:	push	{r4, r5, r6, r7, r8, lr}
   29850:	cmp	r1, r3
   29854:	movcc	r1, r3
   29858:	cmp	r1, #2
   2985c:	sub	sp, sp, #24
   29860:	mov	r6, r0
   29864:	ldr	r7, [r0]
   29868:	mov	r5, #4
   2986c:	bls	29884 <ptr_set_visit@@Base+0x2d8>
   29870:	mov	r2, #179	; 0xb3
   29874:	lsl	r5, r5, #1
   29878:	mul	r3, r2, r5
   2987c:	cmp	r1, r3, lsr #8
   29880:	bhi	29874 <ptr_set_visit@@Base+0x2c8>
   29884:	mov	r1, #4
   29888:	mov	r0, r5
   2988c:	bl	13fa4 <calloc@plt>
   29890:	cmp	r0, #0
   29894:	str	r0, [sp, #8]
   29898:	beq	29948 <ptr_set_visit@@Base+0x39c>
   2989c:	ldr	r2, [r6, #12]
   298a0:	mov	r4, #0
   298a4:	cmp	r2, r4
   298a8:	str	r5, [sp, #20]
   298ac:	str	r4, [sp, #12]
   298b0:	str	r4, [sp, #16]
   298b4:	beq	2993c <ptr_set_visit@@Base+0x390>
   298b8:	sub	r5, r7, #4
   298bc:	mov	r8, #3
   298c0:	add	r7, sp, #8
   298c4:	b	298d0 <ptr_set_visit@@Base+0x324>
   298c8:	cmp	r4, r2
   298cc:	bcs	29904 <ptr_set_visit@@Base+0x358>
   298d0:	ldr	r3, [r5, #4]!
   298d4:	add	r4, r4, #1
   298d8:	cmp	r3, #0
   298dc:	cmpne	r3, #2
   298e0:	beq	298c8 <ptr_set_visit@@Base+0x31c>
   298e4:	ldr	r1, [r3, #4]
   298e8:	mov	r0, r7
   298ec:	ldm	r1, {r1, r2}
   298f0:	str	r8, [sp]
   298f4:	bl	2960c <ptr_set_visit@@Base+0x60>
   298f8:	ldr	r2, [r6, #12]
   298fc:	cmp	r4, r2
   29900:	bcc	298d0 <ptr_set_visit@@Base+0x324>
   29904:	ldr	r0, [r6]
   29908:	cmp	r0, #0
   2990c:	beq	29914 <ptr_set_visit@@Base+0x368>
   29910:	bl	13fd4 <free@plt>
   29914:	mov	ip, r7
   29918:	mov	lr, #0
   2991c:	ldm	ip!, {r0, r1, r2, r3}
   29920:	str	r0, [r6]
   29924:	str	r1, [r6, #4]
   29928:	str	r2, [r6, #8]
   2992c:	str	r3, [r6, #12]
   29930:	mov	r0, lr
   29934:	add	sp, sp, #24
   29938:	pop	{r4, r5, r6, r7, r8, pc}
   2993c:	mov	r0, r7
   29940:	add	r7, sp, #8
   29944:	b	29908 <ptr_set_visit@@Base+0x35c>
   29948:	mvn	lr, #0
   2994c:	b	29930 <ptr_set_visit@@Base+0x384>

00029950 <fb_symbol_table_clear@@Base>:
   29950:	push	{r4, lr}
   29954:	mov	r4, r0
   29958:	ldr	r0, [r0]
   2995c:	cmp	r0, #0
   29960:	beq	29968 <fb_symbol_table_clear@@Base+0x18>
   29964:	bl	13fd4 <free@plt>
   29968:	mov	r3, #0
   2996c:	str	r3, [r4]
   29970:	str	r3, [r4, #4]
   29974:	str	r3, [r4, #8]
   29978:	str	r3, [r4, #12]
   2997c:	pop	{r4, pc}

00029980 <fb_symbol_table_destroy@@Base>:
   29980:	push	{r4, r5, r6, r7, r8, lr}
   29984:	subs	r7, r1, #0
   29988:	mov	r6, r0
   2998c:	beq	299e0 <fb_symbol_table_destroy@@Base+0x60>
   29990:	ldr	r3, [r0, #12]
   29994:	ldr	r0, [r0]
   29998:	cmp	r3, #0
   2999c:	beq	299e4 <fb_symbol_table_destroy@@Base+0x64>
   299a0:	mov	r8, r2
   299a4:	sub	r5, r0, #4
   299a8:	mov	r4, #0
   299ac:	b	299b8 <fb_symbol_table_destroy@@Base+0x38>
   299b0:	cmp	r4, r3
   299b4:	bcs	299e0 <fb_symbol_table_destroy@@Base+0x60>
   299b8:	ldr	r1, [r5, #4]!
   299bc:	add	r4, r4, #1
   299c0:	cmp	r1, #0
   299c4:	cmpne	r1, #2
   299c8:	beq	299b0 <fb_symbol_table_destroy@@Base+0x30>
   299cc:	mov	r0, r8
   299d0:	blx	r7
   299d4:	ldr	r3, [r6, #12]
   299d8:	cmp	r4, r3
   299dc:	bcc	299b8 <fb_symbol_table_destroy@@Base+0x38>
   299e0:	ldr	r0, [r6]
   299e4:	cmp	r0, #0
   299e8:	beq	299f0 <fb_symbol_table_destroy@@Base+0x70>
   299ec:	bl	13fd4 <free@plt>
   299f0:	mov	r3, #0
   299f4:	str	r3, [r6]
   299f8:	str	r3, [r6, #4]
   299fc:	str	r3, [r6, #8]
   29a00:	str	r3, [r6, #12]
   29a04:	pop	{r4, r5, r6, r7, r8, pc}

00029a08 <fb_symbol_table_init@@Base>:
   29a08:	cmp	r1, #2
   29a0c:	push	{r4, r5, r6, lr}
   29a10:	mov	r4, #4
   29a14:	mov	r5, r0
   29a18:	bls	29a30 <fb_symbol_table_init@@Base+0x28>
   29a1c:	mov	r2, #179	; 0xb3
   29a20:	lsl	r4, r4, #1
   29a24:	mul	r3, r2, r4
   29a28:	cmp	r1, r3, lsr #8
   29a2c:	bhi	29a20 <fb_symbol_table_init@@Base+0x18>
   29a30:	mov	r1, #4
   29a34:	mov	r0, r4
   29a38:	bl	13fa4 <calloc@plt>
   29a3c:	cmp	r0, #0
   29a40:	str	r0, [r5]
   29a44:	movne	r0, #0
   29a48:	strne	r4, [r5, #12]
   29a4c:	strne	r0, [r5, #4]
   29a50:	strne	r0, [r5, #8]
   29a54:	mvneq	r0, #0
   29a58:	pop	{r4, r5, r6, pc}

00029a5c <fb_symbol_table_resize@@Base>:
   29a5c:	b	29848 <ptr_set_visit@@Base+0x29c>

00029a60 <fb_symbol_table_insert@@Base>:
   29a60:	b	2960c <ptr_set_visit@@Base+0x60>

00029a64 <fb_symbol_table_insert_item@@Base>:
   29a64:	mov	r3, r1
   29a68:	ldr	r1, [r1, #4]
   29a6c:	push	{lr}		; (str lr, [sp, #-4]!)
   29a70:	sub	sp, sp, #12
   29a74:	ldm	r1, {r1, ip}
   29a78:	str	r2, [sp]
   29a7c:	mov	r2, ip
   29a80:	bl	2960c <ptr_set_visit@@Base+0x60>
   29a84:	add	sp, sp, #12
   29a88:	pop	{pc}		; (ldr pc, [sp], #4)

00029a8c <fb_symbol_table_find@@Base>:
   29a8c:	push	{r4, r5, r6, r7, r8, r9, lr}
   29a90:	sub	sp, sp, #20
   29a94:	ldr	r8, [r0]
   29a98:	cmp	r8, #0
   29a9c:	beq	29b34 <fb_symbol_table_find@@Base+0xa8>
   29aa0:	mov	r9, r1
   29aa4:	ldr	r1, [pc, #152]	; 29b44 <fb_symbol_table_find@@Base+0xb8>
   29aa8:	add	r3, sp, #8
   29aac:	ldr	r7, [r0, #12]
   29ab0:	stm	sp, {r1, r3}
   29ab4:	mov	r0, r9
   29ab8:	mov	r3, #0
   29abc:	mov	r6, r2
   29ac0:	bl	3fe60 <cmetrohash64_1@@Base>
   29ac4:	ldr	r5, [sp, #8]
   29ac8:	sub	r7, r7, #1
   29acc:	and	r3, r7, r5
   29ad0:	ldr	r4, [r8, r3, lsl #2]
   29ad4:	cmp	r4, #0
   29ad8:	beq	29b34 <fb_symbol_table_find@@Base+0xa8>
   29adc:	add	r5, r5, #1
   29ae0:	b	29af8 <fb_symbol_table_find@@Base+0x6c>
   29ae4:	and	r3, r7, r5
   29ae8:	add	r5, r5, #1
   29aec:	ldr	r4, [r8, r3, lsl #2]
   29af0:	cmp	r4, #0
   29af4:	beq	29b34 <fb_symbol_table_find@@Base+0xa8>
   29af8:	cmp	r4, #2
   29afc:	beq	29ae4 <fb_symbol_table_find@@Base+0x58>
   29b00:	ldr	r3, [r4, #4]
   29b04:	ldr	r2, [r3, #4]
   29b08:	cmp	r6, r2
   29b0c:	bne	29ae4 <fb_symbol_table_find@@Base+0x58>
   29b10:	ldr	r1, [r3]
   29b14:	mov	r2, r6
   29b18:	mov	r0, r9
   29b1c:	bl	13ff8 <memcmp@plt>
   29b20:	cmp	r0, #0
   29b24:	bne	29ae4 <fb_symbol_table_find@@Base+0x58>
   29b28:	mov	r0, r4
   29b2c:	add	sp, sp, #20
   29b30:	pop	{r4, r5, r6, r7, r8, r9, pc}
   29b34:	mov	r4, #0
   29b38:	mov	r0, r4
   29b3c:	add	sp, sp, #20
   29b40:	pop	{r4, r5, r6, r7, r8, r9, pc}
   29b44:	svccs	0x00693b52

00029b48 <fb_symbol_table_find_item@@Base>:
   29b48:	push	{r4, r5, r6, r7, r8, r9, lr}
   29b4c:	sub	sp, sp, #20
   29b50:	ldr	r3, [r1, #4]
   29b54:	ldr	r8, [r0]
   29b58:	cmp	r8, #0
   29b5c:	ldr	r9, [r3]
   29b60:	ldr	r7, [r3, #4]
   29b64:	beq	29bf8 <fb_symbol_table_find_item@@Base+0xb0>
   29b68:	ldr	r2, [pc, #152]	; 29c08 <fb_symbol_table_find_item@@Base+0xc0>
   29b6c:	add	r3, sp, #8
   29b70:	ldr	r6, [r0, #12]
   29b74:	stm	sp, {r2, r3}
   29b78:	mov	r0, r9
   29b7c:	mov	r3, #0
   29b80:	mov	r2, r7
   29b84:	bl	3fe60 <cmetrohash64_1@@Base>
   29b88:	ldr	r5, [sp, #8]
   29b8c:	sub	r6, r6, #1
   29b90:	and	r3, r6, r5
   29b94:	ldr	r4, [r8, r3, lsl #2]
   29b98:	cmp	r4, #0
   29b9c:	beq	29bf8 <fb_symbol_table_find_item@@Base+0xb0>
   29ba0:	add	r5, r5, #1
   29ba4:	b	29bbc <fb_symbol_table_find_item@@Base+0x74>
   29ba8:	and	r3, r6, r5
   29bac:	add	r5, r5, #1
   29bb0:	ldr	r4, [r8, r3, lsl #2]
   29bb4:	cmp	r4, #0
   29bb8:	beq	29bf8 <fb_symbol_table_find_item@@Base+0xb0>
   29bbc:	cmp	r4, #2
   29bc0:	beq	29ba8 <fb_symbol_table_find_item@@Base+0x60>
   29bc4:	ldr	r3, [r4, #4]
   29bc8:	ldr	r2, [r3, #4]
   29bcc:	cmp	r7, r2
   29bd0:	bne	29ba8 <fb_symbol_table_find_item@@Base+0x60>
   29bd4:	ldr	r1, [r3]
   29bd8:	mov	r2, r7
   29bdc:	mov	r0, r9
   29be0:	bl	13ff8 <memcmp@plt>
   29be4:	cmp	r0, #0
   29be8:	bne	29ba8 <fb_symbol_table_find_item@@Base+0x60>
   29bec:	mov	r0, r4
   29bf0:	add	sp, sp, #20
   29bf4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   29bf8:	mov	r4, #0
   29bfc:	mov	r0, r4
   29c00:	add	sp, sp, #20
   29c04:	pop	{r4, r5, r6, r7, r8, r9, pc}
   29c08:	svccs	0x00693b52

00029c0c <fb_symbol_table_remove@@Base>:
   29c0c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   29c10:	sub	sp, sp, #20
   29c14:	ldr	r5, [r0]
   29c18:	cmp	r5, #0
   29c1c:	beq	29cd4 <fb_symbol_table_remove@@Base+0xc8>
   29c20:	mov	r8, r1
   29c24:	ldr	r1, [pc, #184]	; 29ce4 <fb_symbol_table_remove@@Base+0xd8>
   29c28:	add	r3, sp, #8
   29c2c:	ldr	r7, [r0, #12]
   29c30:	mov	r9, r0
   29c34:	stm	sp, {r1, r3}
   29c38:	mov	r0, r8
   29c3c:	mov	r3, #0
   29c40:	mov	r6, r2
   29c44:	bl	3fe60 <cmetrohash64_1@@Base>
   29c48:	ldr	sl, [sp, #8]
   29c4c:	sub	r7, r7, #1
   29c50:	and	r3, r7, sl
   29c54:	ldr	fp, [r5, r3, lsl #2]
   29c58:	add	r4, r5, r3, lsl #2
   29c5c:	cmp	fp, #0
   29c60:	beq	29cd4 <fb_symbol_table_remove@@Base+0xc8>
   29c64:	add	sl, sl, #1
   29c68:	b	29c84 <fb_symbol_table_remove@@Base+0x78>
   29c6c:	and	r3, r7, sl
   29c70:	add	sl, sl, #1
   29c74:	ldr	fp, [r5, r3, lsl #2]
   29c78:	add	r4, r5, r3, lsl #2
   29c7c:	cmp	fp, #0
   29c80:	beq	29cd4 <fb_symbol_table_remove@@Base+0xc8>
   29c84:	cmp	fp, #2
   29c88:	beq	29c6c <fb_symbol_table_remove@@Base+0x60>
   29c8c:	ldr	r3, [fp, #4]
   29c90:	ldr	r2, [r3, #4]
   29c94:	cmp	r6, r2
   29c98:	bne	29c6c <fb_symbol_table_remove@@Base+0x60>
   29c9c:	ldr	r1, [r3]
   29ca0:	mov	r2, r6
   29ca4:	mov	r0, r8
   29ca8:	bl	13ff8 <memcmp@plt>
   29cac:	cmp	r0, #0
   29cb0:	bne	29c6c <fb_symbol_table_remove@@Base+0x60>
   29cb4:	ldr	r3, [r9, #8]
   29cb8:	mov	r2, #2
   29cbc:	sub	r3, r3, #1
   29cc0:	str	r2, [r4]
   29cc4:	mov	r0, fp
   29cc8:	str	r3, [r9, #8]
   29ccc:	add	sp, sp, #20
   29cd0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   29cd4:	mov	fp, #0
   29cd8:	mov	r0, fp
   29cdc:	add	sp, sp, #20
   29ce0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   29ce4:	svccs	0x00693b52

00029ce8 <fb_symbol_table_remove_item@@Base>:
   29ce8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   29cec:	sub	sp, sp, #20
   29cf0:	ldr	r3, [r1, #4]
   29cf4:	ldr	r5, [r0]
   29cf8:	cmp	r5, #0
   29cfc:	ldr	r9, [r3]
   29d00:	ldr	r7, [r3, #4]
   29d04:	beq	29db8 <fb_symbol_table_remove_item@@Base+0xd0>
   29d08:	ldr	r2, [pc, #184]	; 29dc8 <fb_symbol_table_remove_item@@Base+0xe0>
   29d0c:	add	r3, sp, #8
   29d10:	ldr	r6, [r0, #12]
   29d14:	mov	r8, r0
   29d18:	stm	sp, {r2, r3}
   29d1c:	mov	r0, r9
   29d20:	mov	r3, #0
   29d24:	mov	r2, r7
   29d28:	bl	3fe60 <cmetrohash64_1@@Base>
   29d2c:	ldr	sl, [sp, #8]
   29d30:	sub	r6, r6, #1
   29d34:	and	r3, r6, sl
   29d38:	ldr	fp, [r5, r3, lsl #2]
   29d3c:	add	r4, r5, r3, lsl #2
   29d40:	cmp	fp, #0
   29d44:	beq	29db8 <fb_symbol_table_remove_item@@Base+0xd0>
   29d48:	add	sl, sl, #1
   29d4c:	b	29d68 <fb_symbol_table_remove_item@@Base+0x80>
   29d50:	and	r3, r6, sl
   29d54:	add	sl, sl, #1
   29d58:	ldr	fp, [r5, r3, lsl #2]
   29d5c:	add	r4, r5, r3, lsl #2
   29d60:	cmp	fp, #0
   29d64:	beq	29db8 <fb_symbol_table_remove_item@@Base+0xd0>
   29d68:	cmp	fp, #2
   29d6c:	beq	29d50 <fb_symbol_table_remove_item@@Base+0x68>
   29d70:	ldr	r3, [fp, #4]
   29d74:	ldr	r2, [r3, #4]
   29d78:	cmp	r7, r2
   29d7c:	bne	29d50 <fb_symbol_table_remove_item@@Base+0x68>
   29d80:	ldr	r1, [r3]
   29d84:	mov	r2, r7
   29d88:	mov	r0, r9
   29d8c:	bl	13ff8 <memcmp@plt>
   29d90:	cmp	r0, #0
   29d94:	bne	29d50 <fb_symbol_table_remove_item@@Base+0x68>
   29d98:	ldr	r3, [r8, #8]
   29d9c:	mov	r2, #2
   29da0:	sub	r3, r3, #1
   29da4:	str	r2, [r4]
   29da8:	mov	r0, fp
   29dac:	str	r3, [r8, #8]
   29db0:	add	sp, sp, #20
   29db4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   29db8:	mov	fp, #0
   29dbc:	mov	r0, fp
   29dc0:	add	sp, sp, #20
   29dc4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   29dc8:	svccs	0x00693b52

00029dcc <fb_symbol_table_visit@@Base>:
   29dcc:	ldr	r3, [r0, #12]
   29dd0:	push	{r4, r5, r6, r7, r8, lr}
   29dd4:	cmp	r3, #0
   29dd8:	ldr	r5, [r0]
   29ddc:	popeq	{r4, r5, r6, r7, r8, pc}
   29de0:	mov	r7, r2
   29de4:	mov	r6, r1
   29de8:	mov	r8, r0
   29dec:	sub	r5, r5, #4
   29df0:	mov	r4, #0
   29df4:	b	29e00 <fb_symbol_table_visit@@Base+0x34>
   29df8:	cmp	r4, r3
   29dfc:	bcs	29e28 <fb_symbol_table_visit@@Base+0x5c>
   29e00:	ldr	r1, [r5, #4]!
   29e04:	add	r4, r4, #1
   29e08:	cmp	r1, #0
   29e0c:	cmpne	r1, #2
   29e10:	beq	29df8 <fb_symbol_table_visit@@Base+0x2c>
   29e14:	mov	r0, r7
   29e18:	blx	r6
   29e1c:	ldr	r3, [r8, #12]
   29e20:	cmp	r4, r3
   29e24:	bcc	29e00 <fb_symbol_table_visit@@Base+0x34>
   29e28:	pop	{r4, r5, r6, r7, r8, pc}
   29e2c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   29e30:	sub	sp, sp, #20
   29e34:	cmp	r2, #0
   29e38:	str	r2, [sp, #4]
   29e3c:	str	r3, [sp, #12]
   29e40:	str	r0, [sp, #8]
   29e44:	beq	2a10c <fb_symbol_table_visit@@Base+0x340>
   29e48:	cmp	r2, #2
   29e4c:	beq	2a0f8 <fb_symbol_table_visit@@Base+0x32c>
   29e50:	cmp	r2, #1
   29e54:	beq	2a0e4 <fb_symbol_table_visit@@Base+0x318>
   29e58:	ldr	sl, [r0, #12]
   29e5c:	mov	r3, #179	; 0xb3
   29e60:	mov	r8, r1
   29e64:	mul	r3, r3, sl
   29e68:	ldr	r1, [r0, #8]
   29e6c:	mov	r4, r0
   29e70:	cmp	r1, r3, lsr #8
   29e74:	bcc	29e8c <fb_symbol_table_visit@@Base+0xc0>
   29e78:	lsl	r1, r1, #1
   29e7c:	bl	2a14c <fb_symbol_table_visit@@Base+0x380>
   29e80:	cmp	r0, #0
   29e84:	bne	2a0c8 <fb_symbol_table_visit@@Base+0x2fc>
   29e88:	ldr	sl, [r4, #12]
   29e8c:	sub	r3, sl, #1
   29e90:	str	r3, [sp]
   29e94:	ldr	r3, [sp, #8]
   29e98:	cmp	r8, #0
   29e9c:	ldr	r9, [r3]
   29ea0:	beq	2a064 <fb_symbol_table_visit@@Base+0x298>
   29ea4:	ldr	r6, [pc, #628]	; 2a120 <fb_symbol_table_visit@@Base+0x354>
   29ea8:	ldr	r5, [pc, #628]	; 2a124 <fb_symbol_table_visit@@Base+0x358>
   29eac:	ldr	lr, [pc, #628]	; 2a128 <fb_symbol_table_visit@@Base+0x35c>
   29eb0:	mov	ip, r8
   29eb4:	mov	r4, #0
   29eb8:	ldr	r2, [ip, #4]
   29ebc:	ldm	r2, {r0, r3}
   29ec0:	subs	r3, r3, #1
   29ec4:	beq	2a028 <fb_symbol_table_visit@@Base+0x25c>
   29ec8:	ldrb	r2, [r0]
   29ecc:	add	r1, r0, #1
   29ed0:	cmp	r2, #0
   29ed4:	beq	2a028 <fb_symbol_table_visit@@Base+0x25c>
   29ed8:	add	r0, r0, r3
   29edc:	mov	r3, r6
   29ee0:	b	29ef0 <fb_symbol_table_visit@@Base+0x124>
   29ee4:	ldrb	r2, [r1], #1
   29ee8:	cmp	r2, #0
   29eec:	beq	29f00 <fb_symbol_table_visit@@Base+0x134>
   29ef0:	add	r3, r3, r3, lsl #5
   29ef4:	cmp	r1, r0
   29ef8:	eor	r3, r3, r2
   29efc:	bne	29ee4 <fb_symbol_table_visit@@Base+0x118>
   29f00:	eor	r4, r4, r5
   29f04:	ldr	ip, [ip]
   29f08:	eor	r3, r3, r4
   29f0c:	cmp	ip, #0
   29f10:	mul	r4, lr, r3
   29f14:	bne	29eb8 <fb_symbol_table_visit@@Base+0xec>
   29f18:	ldr	r3, [sp]
   29f1c:	and	r6, r3, r4
   29f20:	lsl	r6, r6, #2
   29f24:	ldr	r3, [sp, #12]
   29f28:	sub	r3, r3, #2
   29f2c:	cmp	r3, #1
   29f30:	bls	2a070 <fb_symbol_table_visit@@Base+0x2a4>
   29f34:	ldr	r7, [r9, r6]
   29f38:	add	r6, r9, r6
   29f3c:	cmp	r7, #0
   29f40:	moveq	fp, r6
   29f44:	beq	2a000 <fb_symbol_table_visit@@Base+0x234>
   29f48:	add	r4, r4, #1
   29f4c:	mov	fp, #0
   29f50:	cmp	r7, #2
   29f54:	beq	2a030 <fb_symbol_table_visit@@Base+0x264>
   29f58:	ldr	r5, [r7]
   29f5c:	adds	r1, r8, #0
   29f60:	movne	r1, #1
   29f64:	adds	r2, r5, #0
   29f68:	movne	r2, #1
   29f6c:	tst	r2, r1
   29f70:	beq	2a03c <fb_symbol_table_visit@@Base+0x270>
   29f74:	ldr	r0, [r5, #4]
   29f78:	ldr	r1, [r8, #4]
   29f7c:	ldr	r2, [r0, #4]
   29f80:	ldr	r3, [r1, #4]
   29f84:	cmp	r3, r2
   29f88:	bne	29fdc <fb_symbol_table_visit@@Base+0x210>
   29f8c:	mov	sl, r8
   29f90:	ldr	r1, [r1]
   29f94:	ldr	r0, [r0]
   29f98:	bl	14130 <strncmp@plt>
   29f9c:	cmp	r0, #0
   29fa0:	bne	29fdc <fb_symbol_table_visit@@Base+0x210>
   29fa4:	ldr	r5, [r5]
   29fa8:	ldr	sl, [sl]
   29fac:	adds	r2, r5, #0
   29fb0:	movne	r2, #1
   29fb4:	adds	r1, sl, #0
   29fb8:	movne	r1, #1
   29fbc:	tst	r2, r1
   29fc0:	beq	2a03c <fb_symbol_table_visit@@Base+0x270>
   29fc4:	ldr	r0, [r5, #4]
   29fc8:	ldr	r1, [sl, #4]
   29fcc:	ldr	r2, [r0, #4]
   29fd0:	ldr	r3, [r1, #4]
   29fd4:	cmp	r2, r3
   29fd8:	beq	29f90 <fb_symbol_table_visit@@Base+0x1c4>
   29fdc:	ldr	r3, [sp]
   29fe0:	and	r6, r3, r4
   29fe4:	add	r4, r4, #1
   29fe8:	ldr	r7, [r9, r6, lsl #2]
   29fec:	add	r6, r9, r6, lsl #2
   29ff0:	cmp	r7, #0
   29ff4:	bne	29f50 <fb_symbol_table_visit@@Base+0x184>
   29ff8:	cmp	fp, #0
   29ffc:	moveq	fp, r6
   2a000:	ldr	r2, [sp, #8]
   2a004:	mov	r7, #0
   2a008:	ldr	r3, [r2, #8]
   2a00c:	add	r3, r3, #1
   2a010:	str	r3, [r2, #8]
   2a014:	ldr	r3, [sp, #4]
   2a018:	str	r3, [fp]
   2a01c:	mov	r0, r7
   2a020:	add	sp, sp, #20
   2a024:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2a028:	mov	r3, r6
   2a02c:	b	29f00 <fb_symbol_table_visit@@Base+0x134>
   2a030:	cmp	fp, #0
   2a034:	moveq	fp, r6
   2a038:	b	29fdc <fb_symbol_table_visit@@Base+0x210>
   2a03c:	orrs	r3, r1, r2
   2a040:	bne	29fdc <fb_symbol_table_visit@@Base+0x210>
   2a044:	ldr	r3, [sp, #12]
   2a048:	cmp	r3, #0
   2a04c:	bne	2a01c <fb_symbol_table_visit@@Base+0x250>
   2a050:	ldr	r3, [sp, #4]
   2a054:	mov	r0, r7
   2a058:	str	r3, [r6]
   2a05c:	add	sp, sp, #20
   2a060:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2a064:	mov	r6, r8
   2a068:	mov	r4, r8
   2a06c:	b	29f24 <fb_symbol_table_visit@@Base+0x158>
   2a070:	ldr	r1, [sp, #8]
   2a074:	ldr	r2, [r9, r6]
   2a078:	add	r6, r9, r6
   2a07c:	ldr	r3, [r1, #8]
   2a080:	cmp	r2, #0
   2a084:	cmpne	r2, #2
   2a088:	add	r3, r3, #1
   2a08c:	str	r3, [r1, #8]
   2a090:	beq	2a0b8 <fb_symbol_table_visit@@Base+0x2ec>
   2a094:	ldr	r1, [sp]
   2a098:	add	r4, r4, #1
   2a09c:	and	r3, r1, r4
   2a0a0:	add	r4, r4, #1
   2a0a4:	ldr	r2, [r9, r3, lsl #2]
   2a0a8:	add	r6, r9, r3, lsl #2
   2a0ac:	cmp	r2, #0
   2a0b0:	cmpne	r2, #2
   2a0b4:	bne	2a09c <fb_symbol_table_visit@@Base+0x2d0>
   2a0b8:	ldr	r3, [sp, #4]
   2a0bc:	mov	r7, #0
   2a0c0:	str	r3, [r6]
   2a0c4:	b	2a01c <fb_symbol_table_visit@@Base+0x250>
   2a0c8:	ldr	r3, [pc, #92]	; 2a12c <fb_symbol_table_visit@@Base+0x360>
   2a0cc:	ldr	r2, [pc, #92]	; 2a130 <fb_symbol_table_visit@@Base+0x364>
   2a0d0:	ldr	r1, [pc, #92]	; 2a134 <fb_symbol_table_visit@@Base+0x368>
   2a0d4:	ldr	r0, [r3]
   2a0d8:	bl	14094 <fprintf@plt>
   2a0dc:	mov	r0, #1
   2a0e0:	bl	14070 <exit@plt>
   2a0e4:	ldr	r3, [pc, #76]	; 2a138 <fb_symbol_table_visit@@Base+0x36c>
   2a0e8:	mov	r2, #116	; 0x74
   2a0ec:	ldr	r1, [pc, #72]	; 2a13c <fb_symbol_table_visit@@Base+0x370>
   2a0f0:	ldr	r0, [pc, #72]	; 2a140 <fb_symbol_table_visit@@Base+0x374>
   2a0f4:	bl	14148 <__assert_fail@plt>
   2a0f8:	ldr	r3, [pc, #56]	; 2a138 <fb_symbol_table_visit@@Base+0x36c>
   2a0fc:	mov	r2, #115	; 0x73
   2a100:	ldr	r1, [pc, #52]	; 2a13c <fb_symbol_table_visit@@Base+0x370>
   2a104:	ldr	r0, [pc, #56]	; 2a144 <fb_symbol_table_visit@@Base+0x378>
   2a108:	bl	14148 <__assert_fail@plt>
   2a10c:	ldr	r3, [pc, #36]	; 2a138 <fb_symbol_table_visit@@Base+0x36c>
   2a110:	mov	r2, #114	; 0x72
   2a114:	ldr	r1, [pc, #32]	; 2a13c <fb_symbol_table_visit@@Base+0x370>
   2a118:	ldr	r0, [pc, #40]	; 2a148 <fb_symbol_table_visit@@Base+0x37c>
   2a11c:	bl	14148 <__assert_fail@plt>
   2a120:	svccs	0x00692e57
   2a124:	svccs	0x00693b52
   2a128:			; <UNDEFINED> instruction: 0x9e3779b1
   2a12c:	andeq	pc, r6, r8, lsr #1
   2a130:	andeq	sl, r5, r4, ror lr
   2a134:	andeq	sl, r5, r8, lsr #29
   2a138:	strdeq	sl, [r5], -r0
   2a13c:	ldrdeq	sl, [r5], -ip
   2a140:	andeq	sl, r5, ip, asr lr
   2a144:	andeq	sl, r5, r4, asr #28
   2a148:	andeq	sl, r5, ip, lsr #28
   2a14c:	ldr	r3, [r0, #8]
   2a150:	push	{r4, r5, r6, r7, r8, lr}
   2a154:	cmp	r1, r3
   2a158:	movcc	r1, r3
   2a15c:	cmp	r1, #2
   2a160:	sub	sp, sp, #16
   2a164:	mov	r7, r0
   2a168:	ldr	r6, [r0]
   2a16c:	mov	r5, #4
   2a170:	bls	2a188 <fb_symbol_table_visit@@Base+0x3bc>
   2a174:	mov	r2, #179	; 0xb3
   2a178:	lsl	r5, r5, #1
   2a17c:	mul	r3, r2, r5
   2a180:	cmp	r1, r3, lsr #8
   2a184:	bhi	2a178 <fb_symbol_table_visit@@Base+0x3ac>
   2a188:	mov	r1, #4
   2a18c:	mov	r0, r5
   2a190:	bl	13fa4 <calloc@plt>
   2a194:	cmp	r0, #0
   2a198:	str	r0, [sp]
   2a19c:	beq	2a248 <fb_symbol_table_visit@@Base+0x47c>
   2a1a0:	ldr	r3, [r7, #12]
   2a1a4:	mov	r4, #0
   2a1a8:	cmp	r3, r4
   2a1ac:	str	r5, [sp, #12]
   2a1b0:	str	r4, [sp, #4]
   2a1b4:	str	r4, [sp, #8]
   2a1b8:	beq	2a23c <fb_symbol_table_visit@@Base+0x470>
   2a1bc:	sub	r5, r6, #4
   2a1c0:	mov	r8, sp
   2a1c4:	mov	r6, #3
   2a1c8:	b	2a1d4 <fb_symbol_table_visit@@Base+0x408>
   2a1cc:	cmp	r4, r3
   2a1d0:	bcs	2a204 <fb_symbol_table_visit@@Base+0x438>
   2a1d4:	ldr	r2, [r5, #4]!
   2a1d8:	add	r4, r4, #1
   2a1dc:	cmp	r2, #0
   2a1e0:	cmpne	r2, #2
   2a1e4:	beq	2a1cc <fb_symbol_table_visit@@Base+0x400>
   2a1e8:	mov	r3, r6
   2a1ec:	ldr	r1, [r2]
   2a1f0:	mov	r0, r8
   2a1f4:	bl	29e2c <fb_symbol_table_visit@@Base+0x60>
   2a1f8:	ldr	r3, [r7, #12]
   2a1fc:	cmp	r4, r3
   2a200:	bcc	2a1d4 <fb_symbol_table_visit@@Base+0x408>
   2a204:	ldr	r0, [r7]
   2a208:	cmp	r0, #0
   2a20c:	beq	2a214 <fb_symbol_table_visit@@Base+0x448>
   2a210:	bl	13fd4 <free@plt>
   2a214:	mov	ip, r8
   2a218:	mov	lr, #0
   2a21c:	ldm	ip!, {r0, r1, r2, r3}
   2a220:	str	r0, [r7]
   2a224:	str	r1, [r7, #4]
   2a228:	str	r2, [r7, #8]
   2a22c:	str	r3, [r7, #12]
   2a230:	mov	r0, lr
   2a234:	add	sp, sp, #16
   2a238:	pop	{r4, r5, r6, r7, r8, pc}
   2a23c:	mov	r0, r6
   2a240:	mov	r8, sp
   2a244:	b	2a208 <fb_symbol_table_visit@@Base+0x43c>
   2a248:	mvn	lr, #0
   2a24c:	b	2a230 <fb_symbol_table_visit@@Base+0x464>

0002a250 <fb_scope_table_clear@@Base>:
   2a250:	push	{r4, lr}
   2a254:	mov	r4, r0
   2a258:	ldr	r0, [r0]
   2a25c:	cmp	r0, #0
   2a260:	beq	2a268 <fb_scope_table_clear@@Base+0x18>
   2a264:	bl	13fd4 <free@plt>
   2a268:	mov	r3, #0
   2a26c:	str	r3, [r4]
   2a270:	str	r3, [r4, #4]
   2a274:	str	r3, [r4, #8]
   2a278:	str	r3, [r4, #12]
   2a27c:	pop	{r4, pc}

0002a280 <fb_scope_table_destroy@@Base>:
   2a280:	push	{r4, r5, r6, r7, r8, lr}
   2a284:	subs	r7, r1, #0
   2a288:	mov	r6, r0
   2a28c:	beq	2a2e0 <fb_scope_table_destroy@@Base+0x60>
   2a290:	ldr	r3, [r0, #12]
   2a294:	ldr	r0, [r0]
   2a298:	cmp	r3, #0
   2a29c:	beq	2a2e4 <fb_scope_table_destroy@@Base+0x64>
   2a2a0:	mov	r8, r2
   2a2a4:	sub	r5, r0, #4
   2a2a8:	mov	r4, #0
   2a2ac:	b	2a2b8 <fb_scope_table_destroy@@Base+0x38>
   2a2b0:	cmp	r4, r3
   2a2b4:	bcs	2a2e0 <fb_scope_table_destroy@@Base+0x60>
   2a2b8:	ldr	r1, [r5, #4]!
   2a2bc:	add	r4, r4, #1
   2a2c0:	cmp	r1, #0
   2a2c4:	cmpne	r1, #2
   2a2c8:	beq	2a2b0 <fb_scope_table_destroy@@Base+0x30>
   2a2cc:	mov	r0, r8
   2a2d0:	blx	r7
   2a2d4:	ldr	r3, [r6, #12]
   2a2d8:	cmp	r4, r3
   2a2dc:	bcc	2a2b8 <fb_scope_table_destroy@@Base+0x38>
   2a2e0:	ldr	r0, [r6]
   2a2e4:	cmp	r0, #0
   2a2e8:	beq	2a2f0 <fb_scope_table_destroy@@Base+0x70>
   2a2ec:	bl	13fd4 <free@plt>
   2a2f0:	mov	r3, #0
   2a2f4:	str	r3, [r6]
   2a2f8:	str	r3, [r6, #4]
   2a2fc:	str	r3, [r6, #8]
   2a300:	str	r3, [r6, #12]
   2a304:	pop	{r4, r5, r6, r7, r8, pc}

0002a308 <fb_scope_table_init@@Base>:
   2a308:	cmp	r1, #2
   2a30c:	push	{r4, r5, r6, lr}
   2a310:	mov	r4, #4
   2a314:	mov	r5, r0
   2a318:	bls	2a330 <fb_scope_table_init@@Base+0x28>
   2a31c:	mov	r2, #179	; 0xb3
   2a320:	lsl	r4, r4, #1
   2a324:	mul	r3, r2, r4
   2a328:	cmp	r1, r3, lsr #8
   2a32c:	bhi	2a320 <fb_scope_table_init@@Base+0x18>
   2a330:	mov	r1, #4
   2a334:	mov	r0, r4
   2a338:	bl	13fa4 <calloc@plt>
   2a33c:	cmp	r0, #0
   2a340:	str	r0, [r5]
   2a344:	movne	r0, #0
   2a348:	strne	r4, [r5, #12]
   2a34c:	strne	r0, [r5, #4]
   2a350:	strne	r0, [r5, #8]
   2a354:	mvneq	r0, #0
   2a358:	pop	{r4, r5, r6, pc}

0002a35c <fb_scope_table_resize@@Base>:
   2a35c:	b	2a14c <fb_symbol_table_visit@@Base+0x380>

0002a360 <fb_scope_table_insert@@Base>:
   2a360:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2a364:	sub	sp, sp, #28
   2a368:	cmp	r3, #0
   2a36c:	str	r3, [sp, #12]
   2a370:	str	r1, [sp, #4]
   2a374:	str	r2, [sp, #20]
   2a378:	str	r0, [sp, #16]
   2a37c:	beq	2a7e8 <fb_scope_table_insert@@Base+0x488>
   2a380:	cmp	r3, #2
   2a384:	beq	2a810 <fb_scope_table_insert@@Base+0x4b0>
   2a388:	cmp	r3, #1
   2a38c:	beq	2a7fc <fb_scope_table_insert@@Base+0x49c>
   2a390:	ldr	r2, [r0, #12]
   2a394:	mov	r3, #179	; 0xb3
   2a398:	ldr	r1, [r0, #8]
   2a39c:	mul	r3, r3, r2
   2a3a0:	mov	r4, r0
   2a3a4:	cmp	r1, r3, lsr #8
   2a3a8:	bcc	2a3c0 <fb_scope_table_insert@@Base+0x60>
   2a3ac:	lsl	r1, r1, #1
   2a3b0:	bl	2a14c <fb_symbol_table_visit@@Base+0x380>
   2a3b4:	cmp	r0, #0
   2a3b8:	bne	2a824 <fb_scope_table_insert@@Base+0x4c4>
   2a3bc:	ldr	r2, [r4, #12]
   2a3c0:	sub	r2, r2, #1
   2a3c4:	ldr	r3, [sp, #20]
   2a3c8:	str	r2, [sp]
   2a3cc:	ldr	r2, [sp, #16]
   2a3d0:	cmp	r3, #0
   2a3d4:	ldr	r7, [r2]
   2a3d8:	ble	2a6e4 <fb_scope_table_insert@@Base+0x384>
   2a3dc:	mov	r4, #0
   2a3e0:	ldr	r5, [sp, #4]
   2a3e4:	ldr	r9, [pc, #1108]	; 2a840 <fb_scope_table_insert@@Base+0x4e0>
   2a3e8:	ldr	sl, [pc, #1108]	; 2a844 <fb_scope_table_insert@@Base+0x4e4>
   2a3ec:	ldr	r8, [pc, #1108]	; 2a848 <fb_scope_table_insert@@Base+0x4e8>
   2a3f0:	mov	r6, r4
   2a3f4:	mov	lr, r3
   2a3f8:	mvn	fp, #0
   2a3fc:	cmp	lr, #0
   2a400:	ldrb	r1, [r5]
   2a404:	moveq	r2, r6
   2a408:	moveq	r0, fp
   2a40c:	beq	2a454 <fb_scope_table_insert@@Base+0xf4>
   2a410:	cmp	r1, #46	; 0x2e
   2a414:	addeq	ip, r5, #1
   2a418:	moveq	r0, fp
   2a41c:	moveq	r2, r6
   2a420:	beq	2a460 <fb_scope_table_insert@@Base+0x100>
   2a424:	mov	r3, r5
   2a428:	mov	r0, r6
   2a42c:	b	2a440 <fb_scope_table_insert@@Base+0xe0>
   2a430:	ldrb	ip, [r3, #1]!
   2a434:	cmp	ip, #46	; 0x2e
   2a438:	beq	2a4b0 <fb_scope_table_insert@@Base+0x150>
   2a43c:	mov	r0, r2
   2a440:	add	r2, r0, #1
   2a444:	cmp	r2, lr
   2a448:	bne	2a430 <fb_scope_table_insert@@Base+0xd0>
   2a44c:	cmp	r0, #0
   2a450:	beq	2a4d4 <fb_scope_table_insert@@Base+0x174>
   2a454:	cmp	r1, #0
   2a458:	add	ip, r5, #1
   2a45c:	beq	2a4d4 <fb_scope_table_insert@@Base+0x174>
   2a460:	add	r0, r5, r0
   2a464:	mov	r3, r9
   2a468:	b	2a478 <fb_scope_table_insert@@Base+0x118>
   2a46c:	ldrb	r1, [ip], #1
   2a470:	cmp	r1, #0
   2a474:	beq	2a488 <fb_scope_table_insert@@Base+0x128>
   2a478:	add	r3, r3, r3, lsl #5
   2a47c:	cmp	ip, r0
   2a480:	eor	r3, r3, r1
   2a484:	bne	2a46c <fb_scope_table_insert@@Base+0x10c>
   2a488:	eor	r4, r4, sl
   2a48c:	eor	r3, r3, r4
   2a490:	cmp	lr, r2
   2a494:	mul	r4, r8, r3
   2a498:	beq	2a4e4 <fb_scope_table_insert@@Base+0x184>
   2a49c:	mvn	r3, r2
   2a4a0:	add	r2, r2, #1
   2a4a4:	add	lr, lr, r3
   2a4a8:	add	r5, r5, r2
   2a4ac:	b	2a3fc <fb_scope_table_insert@@Base+0x9c>
   2a4b0:	cmp	r0, #0
   2a4b4:	beq	2a4c4 <fb_scope_table_insert@@Base+0x164>
   2a4b8:	cmp	r1, #0
   2a4bc:	add	ip, r5, #1
   2a4c0:	bne	2a460 <fb_scope_table_insert@@Base+0x100>
   2a4c4:	eor	r4, r4, #5376	; 0x1500
   2a4c8:	eor	r4, r4, #5
   2a4cc:	mul	r4, r8, r4
   2a4d0:	b	2a49c <fb_scope_table_insert@@Base+0x13c>
   2a4d4:	eor	r4, r4, #5376	; 0x1500
   2a4d8:	ldr	r3, [pc, #872]	; 2a848 <fb_scope_table_insert@@Base+0x4e8>
   2a4dc:	eor	r4, r4, #5
   2a4e0:	mul	r4, r3, r4
   2a4e4:	ldr	r3, [sp]
   2a4e8:	and	r5, r3, r4
   2a4ec:	lsl	r5, r5, #2
   2a4f0:	ldr	r3, [sp, #64]	; 0x40
   2a4f4:	sub	r3, r3, #2
   2a4f8:	cmp	r3, #1
   2a4fc:	bls	2a790 <fb_scope_table_insert@@Base+0x430>
   2a500:	ldr	r6, [r7, r5]
   2a504:	add	r5, r7, r5
   2a508:	cmp	r6, #0
   2a50c:	moveq	r8, r5
   2a510:	beq	2a600 <fb_scope_table_insert@@Base+0x2a0>
   2a514:	mov	r8, #0
   2a518:	str	r8, [sp, #8]
   2a51c:	ldr	r8, [sp, #20]
   2a520:	add	r4, r4, #1
   2a524:	cmp	r6, #2
   2a528:	beq	2a628 <fb_scope_table_insert@@Base+0x2c8>
   2a52c:	cmp	r8, #0
   2a530:	ldr	r9, [r6]
   2a534:	ble	2a63c <fb_scope_table_insert@@Base+0x2dc>
   2a538:	cmp	r9, #0
   2a53c:	beq	2a5d8 <fb_scope_table_insert@@Base+0x278>
   2a540:	ldr	r3, [r9, #4]
   2a544:	ldm	r3, {r2, lr}
   2a548:	cmp	r8, lr
   2a54c:	bcc	2a5d8 <fb_scope_table_insert@@Base+0x278>
   2a550:	ldr	sl, [sp, #4]
   2a554:	mov	fp, r8
   2a558:	cmp	lr, #0
   2a55c:	beq	2a6dc <fb_scope_table_insert@@Base+0x37c>
   2a560:	ldrb	r1, [sl]
   2a564:	ldrb	r3, [r2]
   2a568:	cmp	r1, r3
   2a56c:	bne	2a5d8 <fb_scope_table_insert@@Base+0x278>
   2a570:	mov	r1, sl
   2a574:	mov	r3, #0
   2a578:	b	2a58c <fb_scope_table_insert@@Base+0x22c>
   2a57c:	ldrb	ip, [r2, #1]!
   2a580:	ldrb	r0, [r1, #1]!
   2a584:	cmp	ip, r0
   2a588:	bne	2a5d8 <fb_scope_table_insert@@Base+0x278>
   2a58c:	add	r3, r3, #1
   2a590:	cmp	r3, lr
   2a594:	bne	2a57c <fb_scope_table_insert@@Base+0x21c>
   2a598:	cmp	lr, fp
   2a59c:	beq	2a6c4 <fb_scope_table_insert@@Base+0x364>
   2a5a0:	ldrb	r3, [sl, r3]
   2a5a4:	cmp	r3, #46	; 0x2e
   2a5a8:	bne	2a5d8 <fb_scope_table_insert@@Base+0x278>
   2a5ac:	ldr	r9, [r9]
   2a5b0:	mvn	r3, lr
   2a5b4:	cmp	r9, #0
   2a5b8:	add	lr, lr, #1
   2a5bc:	add	fp, fp, r3
   2a5c0:	add	sl, sl, lr
   2a5c4:	beq	2a5d8 <fb_scope_table_insert@@Base+0x278>
   2a5c8:	ldr	r3, [r9, #4]
   2a5cc:	ldm	r3, {r2, lr}
   2a5d0:	cmp	lr, fp
   2a5d4:	bls	2a558 <fb_scope_table_insert@@Base+0x1f8>
   2a5d8:	ldr	r3, [sp]
   2a5dc:	and	r5, r3, r4
   2a5e0:	add	r4, r4, #1
   2a5e4:	ldr	r6, [r7, r5, lsl #2]
   2a5e8:	add	r5, r7, r5, lsl #2
   2a5ec:	cmp	r6, #0
   2a5f0:	bne	2a524 <fb_scope_table_insert@@Base+0x1c4>
   2a5f4:	ldr	r8, [sp, #8]
   2a5f8:	cmp	r8, #0
   2a5fc:	moveq	r8, r5
   2a600:	ldr	r2, [sp, #16]
   2a604:	mov	r6, #0
   2a608:	ldr	r3, [r2, #8]
   2a60c:	add	r3, r3, #1
   2a610:	str	r3, [r2, #8]
   2a614:	ldr	r3, [sp, #12]
   2a618:	str	r3, [r8]
   2a61c:	mov	r0, r6
   2a620:	add	sp, sp, #28
   2a624:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2a628:	ldr	r2, [sp, #8]
   2a62c:	subs	r3, r2, #0
   2a630:	moveq	r3, r5
   2a634:	str	r3, [sp, #8]
   2a638:	b	2a5d8 <fb_scope_table_insert@@Base+0x278>
   2a63c:	ldr	sl, [sp, #4]
   2a640:	mov	fp, r8
   2a644:	b	2a684 <fb_scope_table_insert@@Base+0x324>
   2a648:	ldr	r3, [r9, #4]
   2a64c:	ldr	r1, [sl, #4]
   2a650:	ldr	r2, [r3, #4]
   2a654:	ldr	r0, [r1, #4]
   2a658:	cmp	r2, r0
   2a65c:	bne	2a5d8 <fb_scope_table_insert@@Base+0x278>
   2a660:	ldr	r1, [r1]
   2a664:	ldr	r0, [r3]
   2a668:	bl	14130 <strncmp@plt>
   2a66c:	cmp	r0, #0
   2a670:	bne	2a5d8 <fb_scope_table_insert@@Base+0x278>
   2a674:	adds	fp, fp, #1
   2a678:	ldr	r9, [r9]
   2a67c:	ldr	sl, [sl]
   2a680:	beq	2a6c8 <fb_scope_table_insert@@Base+0x368>
   2a684:	adds	r2, r9, #0
   2a688:	movne	r2, #1
   2a68c:	adds	r3, sl, #0
   2a690:	movne	r3, #1
   2a694:	tst	r2, r3
   2a698:	bne	2a648 <fb_scope_table_insert@@Base+0x2e8>
   2a69c:	orrs	r3, r2, r3
   2a6a0:	bne	2a5d8 <fb_scope_table_insert@@Base+0x278>
   2a6a4:	ldr	r3, [sp, #64]	; 0x40
   2a6a8:	cmp	r3, #0
   2a6ac:	bne	2a61c <fb_scope_table_insert@@Base+0x2bc>
   2a6b0:	ldr	r3, [sp, #12]
   2a6b4:	mov	r0, r6
   2a6b8:	str	r3, [r5]
   2a6bc:	add	sp, sp, #28
   2a6c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2a6c4:	ldr	r9, [r9]
   2a6c8:	clz	r9, r9
   2a6cc:	lsr	r9, r9, #5
   2a6d0:	cmp	r9, #0
   2a6d4:	bne	2a6a4 <fb_scope_table_insert@@Base+0x344>
   2a6d8:	b	2a5d8 <fb_scope_table_insert@@Base+0x278>
   2a6dc:	mov	r3, lr
   2a6e0:	b	2a598 <fb_scope_table_insert@@Base+0x238>
   2a6e4:	ldr	r3, [sp, #4]
   2a6e8:	cmp	r3, #0
   2a6ec:	moveq	r4, r3
   2a6f0:	moveq	r5, r4
   2a6f4:	beq	2a4f0 <fb_scope_table_insert@@Base+0x190>
   2a6f8:	mov	ip, r3
   2a6fc:	ldr	r8, [pc, #316]	; 2a840 <fb_scope_table_insert@@Base+0x4e0>
   2a700:	ldr	r2, [ip, #4]
   2a704:	ldr	r6, [pc, #312]	; 2a844 <fb_scope_table_insert@@Base+0x4e4>
   2a708:	ldr	r5, [pc, #312]	; 2a848 <fb_scope_table_insert@@Base+0x4e8>
   2a70c:	ldm	r2, {r0, r3}
   2a710:	ldr	lr, [sp, #20]
   2a714:	mov	r4, #0
   2a718:	subs	r3, r3, #1
   2a71c:	beq	2a788 <fb_scope_table_insert@@Base+0x428>
   2a720:	ldrb	r2, [r0]
   2a724:	add	r1, r0, #1
   2a728:	cmp	r2, #0
   2a72c:	beq	2a788 <fb_scope_table_insert@@Base+0x428>
   2a730:	add	r0, r0, r3
   2a734:	mov	r3, r8
   2a738:	b	2a748 <fb_scope_table_insert@@Base+0x3e8>
   2a73c:	ldrb	r2, [r1], #1
   2a740:	cmp	r2, #0
   2a744:	beq	2a758 <fb_scope_table_insert@@Base+0x3f8>
   2a748:	add	r3, r3, r3, lsl #5
   2a74c:	cmp	r1, r0
   2a750:	eor	r3, r3, r2
   2a754:	bne	2a73c <fb_scope_table_insert@@Base+0x3dc>
   2a758:	eor	r4, r4, r6
   2a75c:	eor	r3, r3, r4
   2a760:	adds	lr, lr, #1
   2a764:	mul	r4, r5, r3
   2a768:	ldr	ip, [ip]
   2a76c:	beq	2a4e4 <fb_scope_table_insert@@Base+0x184>
   2a770:	cmp	ip, #0
   2a774:	beq	2a4e4 <fb_scope_table_insert@@Base+0x184>
   2a778:	ldr	r2, [ip, #4]
   2a77c:	ldm	r2, {r0, r3}
   2a780:	subs	r3, r3, #1
   2a784:	bne	2a720 <fb_scope_table_insert@@Base+0x3c0>
   2a788:	mov	r3, r8
   2a78c:	b	2a758 <fb_scope_table_insert@@Base+0x3f8>
   2a790:	ldr	r1, [sp, #16]
   2a794:	ldr	r2, [r7, r5]
   2a798:	add	r5, r7, r5
   2a79c:	ldr	r3, [r1, #8]
   2a7a0:	cmp	r2, #2
   2a7a4:	cmpne	r2, #0
   2a7a8:	add	r3, r3, #1
   2a7ac:	str	r3, [r1, #8]
   2a7b0:	beq	2a7d8 <fb_scope_table_insert@@Base+0x478>
   2a7b4:	ldr	r1, [sp]
   2a7b8:	add	r4, r4, #1
   2a7bc:	and	r3, r1, r4
   2a7c0:	add	r4, r4, #1
   2a7c4:	ldr	r2, [r7, r3, lsl #2]
   2a7c8:	add	r5, r7, r3, lsl #2
   2a7cc:	cmp	r2, #0
   2a7d0:	cmpne	r2, #2
   2a7d4:	bne	2a7bc <fb_scope_table_insert@@Base+0x45c>
   2a7d8:	ldr	r3, [sp, #12]
   2a7dc:	mov	r6, #0
   2a7e0:	str	r3, [r5]
   2a7e4:	b	2a61c <fb_scope_table_insert@@Base+0x2bc>
   2a7e8:	ldr	r3, [pc, #92]	; 2a84c <fb_scope_table_insert@@Base+0x4ec>
   2a7ec:	mov	r2, #114	; 0x72
   2a7f0:	ldr	r1, [pc, #88]	; 2a850 <fb_scope_table_insert@@Base+0x4f0>
   2a7f4:	ldr	r0, [pc, #88]	; 2a854 <fb_scope_table_insert@@Base+0x4f4>
   2a7f8:	bl	14148 <__assert_fail@plt>
   2a7fc:	ldr	r3, [pc, #72]	; 2a84c <fb_scope_table_insert@@Base+0x4ec>
   2a800:	mov	r2, #116	; 0x74
   2a804:	ldr	r1, [pc, #68]	; 2a850 <fb_scope_table_insert@@Base+0x4f0>
   2a808:	ldr	r0, [pc, #72]	; 2a858 <fb_scope_table_insert@@Base+0x4f8>
   2a80c:	bl	14148 <__assert_fail@plt>
   2a810:	ldr	r3, [pc, #52]	; 2a84c <fb_scope_table_insert@@Base+0x4ec>
   2a814:	mov	r2, #115	; 0x73
   2a818:	ldr	r1, [pc, #48]	; 2a850 <fb_scope_table_insert@@Base+0x4f0>
   2a81c:	ldr	r0, [pc, #56]	; 2a85c <fb_scope_table_insert@@Base+0x4fc>
   2a820:	bl	14148 <__assert_fail@plt>
   2a824:	ldr	r3, [pc, #52]	; 2a860 <fb_scope_table_insert@@Base+0x500>
   2a828:	ldr	r2, [pc, #52]	; 2a864 <fb_scope_table_insert@@Base+0x504>
   2a82c:	ldr	r1, [pc, #52]	; 2a868 <fb_scope_table_insert@@Base+0x508>
   2a830:	ldr	r0, [r3]
   2a834:	bl	14094 <fprintf@plt>
   2a838:	mov	r0, #1
   2a83c:	bl	14070 <exit@plt>
   2a840:	svccs	0x00692e57
   2a844:	svccs	0x00693b52
   2a848:			; <UNDEFINED> instruction: 0x9e3779b1
   2a84c:	strdeq	sl, [r5], -r0
   2a850:	ldrdeq	sl, [r5], -ip
   2a854:	andeq	sl, r5, ip, lsr #28
   2a858:	andeq	sl, r5, ip, asr lr
   2a85c:	andeq	sl, r5, r4, asr #28
   2a860:	andeq	pc, r6, r8, lsr #1
   2a864:	andeq	sl, r5, r4, ror lr
   2a868:	andeq	sl, r5, r8, lsr #29

0002a86c <fb_scope_table_insert_item@@Base>:
   2a86c:	mov	ip, r1
   2a870:	mov	r3, r2
   2a874:	ldr	r1, [r1]
   2a878:	mov	r2, ip
   2a87c:	b	29e2c <fb_symbol_table_visit@@Base+0x60>

0002a880 <fb_scope_table_find@@Base>:
   2a880:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2a884:	sub	sp, sp, #12
   2a888:	ldr	r7, [r0]
   2a88c:	str	r1, [sp]
   2a890:	cmp	r7, #0
   2a894:	beq	2abe4 <fb_scope_table_find@@Base+0x364>
   2a898:	ldr	r3, [r0, #12]
   2a89c:	cmp	r2, #0
   2a8a0:	sub	r3, r3, #1
   2a8a4:	mov	fp, r2
   2a8a8:	str	r3, [sp, #4]
   2a8ac:	ble	2ab44 <fb_scope_table_find@@Base+0x2c4>
   2a8b0:	mov	r4, #0
   2a8b4:	ldr	sl, [pc, #816]	; 2abec <fb_scope_table_find@@Base+0x36c>
   2a8b8:	ldr	r9, [pc, #816]	; 2abf0 <fb_scope_table_find@@Base+0x370>
   2a8bc:	ldr	r8, [pc, #816]	; 2abf4 <fb_scope_table_find@@Base+0x374>
   2a8c0:	mov	r6, r4
   2a8c4:	mov	r5, r1
   2a8c8:	mov	lr, r2
   2a8cc:	cmp	lr, #0
   2a8d0:	ldrb	r1, [r5]
   2a8d4:	moveq	r2, r6
   2a8d8:	mvneq	r0, #0
   2a8dc:	beq	2a924 <fb_scope_table_find@@Base+0xa4>
   2a8e0:	cmp	r1, #46	; 0x2e
   2a8e4:	addeq	ip, r5, #1
   2a8e8:	mvneq	r0, #0
   2a8ec:	moveq	r2, r6
   2a8f0:	beq	2a930 <fb_scope_table_find@@Base+0xb0>
   2a8f4:	mov	r3, r5
   2a8f8:	mov	r0, r6
   2a8fc:	b	2a910 <fb_scope_table_find@@Base+0x90>
   2a900:	ldrb	ip, [r3, #1]!
   2a904:	cmp	ip, #46	; 0x2e
   2a908:	beq	2a980 <fb_scope_table_find@@Base+0x100>
   2a90c:	mov	r0, r2
   2a910:	add	r2, r0, #1
   2a914:	cmp	r2, lr
   2a918:	bne	2a900 <fb_scope_table_find@@Base+0x80>
   2a91c:	cmp	r0, #0
   2a920:	beq	2a9a4 <fb_scope_table_find@@Base+0x124>
   2a924:	cmp	r1, #0
   2a928:	add	ip, r5, #1
   2a92c:	beq	2a9a4 <fb_scope_table_find@@Base+0x124>
   2a930:	add	r0, r5, r0
   2a934:	mov	r3, sl
   2a938:	b	2a948 <fb_scope_table_find@@Base+0xc8>
   2a93c:	ldrb	r1, [ip], #1
   2a940:	cmp	r1, #0
   2a944:	beq	2a958 <fb_scope_table_find@@Base+0xd8>
   2a948:	add	r3, r3, r3, lsl #5
   2a94c:	cmp	ip, r0
   2a950:	eor	r3, r3, r1
   2a954:	bne	2a93c <fb_scope_table_find@@Base+0xbc>
   2a958:	eor	r4, r4, r9
   2a95c:	eor	r3, r3, r4
   2a960:	cmp	lr, r2
   2a964:	mul	r4, r8, r3
   2a968:	beq	2a9b4 <fb_scope_table_find@@Base+0x134>
   2a96c:	mvn	r3, r2
   2a970:	add	r2, r2, #1
   2a974:	add	lr, lr, r3
   2a978:	add	r5, r5, r2
   2a97c:	b	2a8cc <fb_scope_table_find@@Base+0x4c>
   2a980:	cmp	r0, #0
   2a984:	beq	2a994 <fb_scope_table_find@@Base+0x114>
   2a988:	cmp	r1, #0
   2a98c:	add	ip, r5, #1
   2a990:	bne	2a930 <fb_scope_table_find@@Base+0xb0>
   2a994:	eor	r4, r4, #5376	; 0x1500
   2a998:	eor	r4, r4, #5
   2a99c:	mul	r4, r8, r4
   2a9a0:	b	2a96c <fb_scope_table_find@@Base+0xec>
   2a9a4:	eor	r4, r4, #5376	; 0x1500
   2a9a8:	ldr	r3, [pc, #580]	; 2abf4 <fb_scope_table_find@@Base+0x374>
   2a9ac:	eor	r4, r4, #5
   2a9b0:	mul	r4, r3, r4
   2a9b4:	ldr	r3, [sp, #4]
   2a9b8:	and	r3, r3, r4
   2a9bc:	lsl	r3, r3, #2
   2a9c0:	ldr	r5, [r7, r3]
   2a9c4:	cmp	r5, #0
   2a9c8:	beq	2aaa0 <fb_scope_table_find@@Base+0x220>
   2a9cc:	ldr	r8, [sp, #4]
   2a9d0:	mov	r6, fp
   2a9d4:	add	r4, r4, #1
   2a9d8:	cmp	r5, #2
   2a9dc:	beq	2aa8c <fb_scope_table_find@@Base+0x20c>
   2a9e0:	cmp	r6, #0
   2a9e4:	ldr	r9, [r5]
   2a9e8:	ble	2aaac <fb_scope_table_find@@Base+0x22c>
   2a9ec:	cmp	r9, #0
   2a9f0:	beq	2aa8c <fb_scope_table_find@@Base+0x20c>
   2a9f4:	ldr	r3, [r9, #4]
   2a9f8:	ldm	r3, {r2, lr}
   2a9fc:	cmp	r6, lr
   2aa00:	bcc	2aa8c <fb_scope_table_find@@Base+0x20c>
   2aa04:	ldr	sl, [sp]
   2aa08:	mov	fp, r6
   2aa0c:	cmp	lr, #0
   2aa10:	beq	2ab3c <fb_scope_table_find@@Base+0x2bc>
   2aa14:	ldrb	r1, [sl]
   2aa18:	ldrb	r3, [r2]
   2aa1c:	cmp	r1, r3
   2aa20:	bne	2aa8c <fb_scope_table_find@@Base+0x20c>
   2aa24:	mov	r1, sl
   2aa28:	mov	r3, #0
   2aa2c:	b	2aa40 <fb_scope_table_find@@Base+0x1c0>
   2aa30:	ldrb	ip, [r2, #1]!
   2aa34:	ldrb	r0, [r1, #1]!
   2aa38:	cmp	ip, r0
   2aa3c:	bne	2aa8c <fb_scope_table_find@@Base+0x20c>
   2aa40:	add	r3, r3, #1
   2aa44:	cmp	r3, lr
   2aa48:	bne	2aa30 <fb_scope_table_find@@Base+0x1b0>
   2aa4c:	cmp	lr, fp
   2aa50:	beq	2ab1c <fb_scope_table_find@@Base+0x29c>
   2aa54:	ldrb	r3, [sl, r3]
   2aa58:	cmp	r3, #46	; 0x2e
   2aa5c:	bne	2aa8c <fb_scope_table_find@@Base+0x20c>
   2aa60:	ldr	r9, [r9]
   2aa64:	mvn	r3, lr
   2aa68:	cmp	r9, #0
   2aa6c:	add	lr, lr, #1
   2aa70:	add	fp, fp, r3
   2aa74:	add	sl, sl, lr
   2aa78:	beq	2aa8c <fb_scope_table_find@@Base+0x20c>
   2aa7c:	ldr	r3, [r9, #4]
   2aa80:	ldm	r3, {r2, lr}
   2aa84:	cmp	lr, fp
   2aa88:	bls	2aa0c <fb_scope_table_find@@Base+0x18c>
   2aa8c:	and	r3, r8, r4
   2aa90:	add	r4, r4, #1
   2aa94:	ldr	r5, [r7, r3, lsl #2]
   2aa98:	cmp	r5, #0
   2aa9c:	bne	2a9d8 <fb_scope_table_find@@Base+0x158>
   2aaa0:	mov	r0, r5
   2aaa4:	add	sp, sp, #12
   2aaa8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2aaac:	ldr	sl, [sp]
   2aab0:	mov	fp, r6
   2aab4:	b	2aaf8 <fb_scope_table_find@@Base+0x278>
   2aab8:	ldr	r0, [r9, #4]
   2aabc:	ldr	r1, [sl, #4]
   2aac0:	ldr	r3, [r0, #4]
   2aac4:	ldr	ip, [r1, #4]
   2aac8:	mov	r2, r3
   2aacc:	cmp	r3, ip
   2aad0:	bne	2aa8c <fb_scope_table_find@@Base+0x20c>
   2aad4:	ldr	r1, [r1]
   2aad8:	ldr	r0, [r0]
   2aadc:	bl	14130 <strncmp@plt>
   2aae0:	cmp	r0, #0
   2aae4:	bne	2aa8c <fb_scope_table_find@@Base+0x20c>
   2aae8:	adds	fp, fp, #1
   2aaec:	ldr	r9, [r9]
   2aaf0:	ldr	sl, [sl]
   2aaf4:	beq	2ab20 <fb_scope_table_find@@Base+0x2a0>
   2aaf8:	adds	r2, r9, #0
   2aafc:	movne	r2, #1
   2ab00:	adds	r3, sl, #0
   2ab04:	movne	r3, #1
   2ab08:	tst	r2, r3
   2ab0c:	bne	2aab8 <fb_scope_table_find@@Base+0x238>
   2ab10:	orrs	r3, r2, r3
   2ab14:	bne	2aa8c <fb_scope_table_find@@Base+0x20c>
   2ab18:	b	2aaa0 <fb_scope_table_find@@Base+0x220>
   2ab1c:	ldr	r9, [r9]
   2ab20:	clz	r9, r9
   2ab24:	lsr	r9, r9, #5
   2ab28:	cmp	r9, #0
   2ab2c:	beq	2aa8c <fb_scope_table_find@@Base+0x20c>
   2ab30:	mov	r0, r5
   2ab34:	add	sp, sp, #12
   2ab38:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2ab3c:	mov	r3, lr
   2ab40:	b	2aa4c <fb_scope_table_find@@Base+0x1cc>
   2ab44:	cmp	r1, #0
   2ab48:	mov	r3, r1
   2ab4c:	moveq	r4, r1
   2ab50:	beq	2a9c0 <fb_scope_table_find@@Base+0x140>
   2ab54:	ldr	ip, [pc, #144]	; 2abec <fb_scope_table_find@@Base+0x36c>
   2ab58:	ldr	r5, [pc, #144]	; 2abf0 <fb_scope_table_find@@Base+0x370>
   2ab5c:	ldr	lr, [pc, #144]	; 2abf4 <fb_scope_table_find@@Base+0x374>
   2ab60:	mov	r1, r3
   2ab64:	mov	r0, fp
   2ab68:	mov	r4, #0
   2ab6c:	ldr	r2, [r1, #4]
   2ab70:	ldr	r3, [r2, #4]
   2ab74:	ldr	r8, [r2]
   2ab78:	subs	r3, r3, #1
   2ab7c:	beq	2abdc <fb_scope_table_find@@Base+0x35c>
   2ab80:	ldrb	r2, [r8]
   2ab84:	add	r6, r8, #1
   2ab88:	cmp	r2, #0
   2ab8c:	beq	2abdc <fb_scope_table_find@@Base+0x35c>
   2ab90:	add	r8, r8, r3
   2ab94:	mov	r3, ip
   2ab98:	b	2aba8 <fb_scope_table_find@@Base+0x328>
   2ab9c:	ldrb	r2, [r6], #1
   2aba0:	cmp	r2, #0
   2aba4:	beq	2abb8 <fb_scope_table_find@@Base+0x338>
   2aba8:	add	r3, r3, r3, lsl #5
   2abac:	cmp	r6, r8
   2abb0:	eor	r3, r3, r2
   2abb4:	bne	2ab9c <fb_scope_table_find@@Base+0x31c>
   2abb8:	eor	r4, r4, r5
   2abbc:	eor	r3, r3, r4
   2abc0:	adds	r0, r0, #1
   2abc4:	mul	r4, lr, r3
   2abc8:	ldr	r1, [r1]
   2abcc:	beq	2a9b4 <fb_scope_table_find@@Base+0x134>
   2abd0:	cmp	r1, #0
   2abd4:	bne	2ab6c <fb_scope_table_find@@Base+0x2ec>
   2abd8:	b	2a9b4 <fb_scope_table_find@@Base+0x134>
   2abdc:	mov	r3, ip
   2abe0:	b	2abb8 <fb_scope_table_find@@Base+0x338>
   2abe4:	mov	r5, r7
   2abe8:	b	2aaa0 <fb_scope_table_find@@Base+0x220>
   2abec:	svccs	0x00692e57
   2abf0:	svccs	0x00693b52
   2abf4:			; <UNDEFINED> instruction: 0x9e3779b1

0002abf8 <fb_scope_table_find_item@@Base>:
   2abf8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2abfc:	ldr	r7, [r0]
   2ac00:	ldr	r6, [r1]
   2ac04:	cmp	r7, #0
   2ac08:	beq	2ad64 <fb_scope_table_find_item@@Base+0x16c>
   2ac0c:	ldr	r8, [r0, #12]
   2ac10:	cmp	r6, #0
   2ac14:	sub	r8, r8, #1
   2ac18:	beq	2ad6c <fb_scope_table_find_item@@Base+0x174>
   2ac1c:	ldr	lr, [pc, #340]	; 2ad78 <fb_scope_table_find_item@@Base+0x180>
   2ac20:	ldr	r5, [pc, #340]	; 2ad7c <fb_scope_table_find_item@@Base+0x184>
   2ac24:	ldr	r4, [pc, #340]	; 2ad80 <fb_scope_table_find_item@@Base+0x188>
   2ac28:	mov	ip, r6
   2ac2c:	mov	r9, #0
   2ac30:	ldr	r2, [ip, #4]
   2ac34:	ldm	r2, {r0, r3}
   2ac38:	subs	r3, r3, #1
   2ac3c:	beq	2ad50 <fb_scope_table_find_item@@Base+0x158>
   2ac40:	ldrb	r2, [r0]
   2ac44:	add	r1, r0, #1
   2ac48:	cmp	r2, #0
   2ac4c:	beq	2ad50 <fb_scope_table_find_item@@Base+0x158>
   2ac50:	add	r0, r0, r3
   2ac54:	mov	r3, lr
   2ac58:	b	2ac68 <fb_scope_table_find_item@@Base+0x70>
   2ac5c:	ldrb	r2, [r1], #1
   2ac60:	cmp	r2, #0
   2ac64:	beq	2ac78 <fb_scope_table_find_item@@Base+0x80>
   2ac68:	add	r3, r3, r3, lsl #5
   2ac6c:	cmp	r1, r0
   2ac70:	eor	r3, r3, r2
   2ac74:	bne	2ac5c <fb_scope_table_find_item@@Base+0x64>
   2ac78:	eor	r9, r9, r5
   2ac7c:	ldr	ip, [ip]
   2ac80:	eor	r9, r9, r3
   2ac84:	cmp	ip, #0
   2ac88:	mul	r9, r4, r9
   2ac8c:	bne	2ac30 <fb_scope_table_find_item@@Base+0x38>
   2ac90:	and	r3, r8, r9
   2ac94:	lsl	r3, r3, #2
   2ac98:	ldr	sl, [r7, r3]
   2ac9c:	cmp	sl, #0
   2aca0:	beq	2ad48 <fb_scope_table_find_item@@Base+0x150>
   2aca4:	add	r9, r9, #1
   2aca8:	cmp	sl, #2
   2acac:	beq	2ad34 <fb_scope_table_find_item@@Base+0x13c>
   2acb0:	ldr	r4, [sl]
   2acb4:	adds	r2, r6, #0
   2acb8:	movne	r2, #1
   2acbc:	adds	r3, r4, #0
   2acc0:	movne	r3, #1
   2acc4:	tst	r3, r2
   2acc8:	beq	2ad58 <fb_scope_table_find_item@@Base+0x160>
   2accc:	ldr	r0, [r4, #4]
   2acd0:	ldr	r3, [r6, #4]
   2acd4:	ldr	r2, [r0, #4]
   2acd8:	ldr	r1, [r3, #4]
   2acdc:	cmp	r2, r1
   2ace0:	bne	2ad34 <fb_scope_table_find_item@@Base+0x13c>
   2ace4:	mov	r5, r6
   2ace8:	ldr	r1, [r3]
   2acec:	ldr	r0, [r0]
   2acf0:	bl	14130 <strncmp@plt>
   2acf4:	cmp	r0, #0
   2acf8:	bne	2ad34 <fb_scope_table_find_item@@Base+0x13c>
   2acfc:	ldr	r4, [r4]
   2ad00:	ldr	r5, [r5]
   2ad04:	adds	r3, r4, #0
   2ad08:	movne	r3, #1
   2ad0c:	adds	r2, r5, #0
   2ad10:	movne	r2, #1
   2ad14:	tst	r3, r2
   2ad18:	beq	2ad58 <fb_scope_table_find_item@@Base+0x160>
   2ad1c:	ldr	r0, [r4, #4]
   2ad20:	ldr	r3, [r5, #4]
   2ad24:	ldr	r2, [r0, #4]
   2ad28:	ldr	r1, [r3, #4]
   2ad2c:	cmp	r2, r1
   2ad30:	beq	2ace8 <fb_scope_table_find_item@@Base+0xf0>
   2ad34:	and	r3, r8, r9
   2ad38:	add	r9, r9, #1
   2ad3c:	ldr	sl, [r7, r3, lsl #2]
   2ad40:	cmp	sl, #0
   2ad44:	bne	2aca8 <fb_scope_table_find_item@@Base+0xb0>
   2ad48:	mov	r0, sl
   2ad4c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2ad50:	mov	r3, lr
   2ad54:	b	2ac78 <fb_scope_table_find_item@@Base+0x80>
   2ad58:	orrs	r3, r2, r3
   2ad5c:	beq	2ad48 <fb_scope_table_find_item@@Base+0x150>
   2ad60:	b	2ad34 <fb_scope_table_find_item@@Base+0x13c>
   2ad64:	mov	sl, r7
   2ad68:	b	2ad48 <fb_scope_table_find_item@@Base+0x150>
   2ad6c:	mov	r3, r6
   2ad70:	mov	r9, r6
   2ad74:	b	2ac98 <fb_scope_table_find_item@@Base+0xa0>
   2ad78:	svccs	0x00692e57
   2ad7c:	svccs	0x00693b52
   2ad80:			; <UNDEFINED> instruction: 0x9e3779b1

0002ad84 <fb_scope_table_remove@@Base>:
   2ad84:	ldr	r3, [r0]
   2ad88:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2ad8c:	sub	sp, sp, #20
   2ad90:	cmp	r3, #0
   2ad94:	str	r1, [sp, #8]
   2ad98:	str	r3, [sp, #12]
   2ad9c:	beq	2b128 <fb_scope_table_remove@@Base+0x3a4>
   2ada0:	ldr	r3, [r0, #12]
   2ada4:	cmp	r2, #0
   2ada8:	sub	r3, r3, #1
   2adac:	mov	sl, r0
   2adb0:	mov	fp, r2
   2adb4:	str	r3, [sp, #4]
   2adb8:	ble	2b07c <fb_scope_table_remove@@Base+0x2f8>
   2adbc:	mov	r4, #0
   2adc0:	ldr	r9, [pc, #872]	; 2b130 <fb_scope_table_remove@@Base+0x3ac>
   2adc4:	ldr	r8, [pc, #872]	; 2b134 <fb_scope_table_remove@@Base+0x3b0>
   2adc8:	ldr	r7, [pc, #872]	; 2b138 <fb_scope_table_remove@@Base+0x3b4>
   2adcc:	mov	r6, r4
   2add0:	mov	r5, r1
   2add4:	mov	lr, r2
   2add8:	cmp	lr, #0
   2addc:	ldrb	r1, [r5]
   2ade0:	moveq	r2, r6
   2ade4:	mvneq	r0, #0
   2ade8:	beq	2ae30 <fb_scope_table_remove@@Base+0xac>
   2adec:	cmp	r1, #46	; 0x2e
   2adf0:	addeq	ip, r5, #1
   2adf4:	mvneq	r0, #0
   2adf8:	moveq	r2, r6
   2adfc:	beq	2ae3c <fb_scope_table_remove@@Base+0xb8>
   2ae00:	mov	r3, r5
   2ae04:	mov	r0, r6
   2ae08:	b	2ae1c <fb_scope_table_remove@@Base+0x98>
   2ae0c:	ldrb	ip, [r3, #1]!
   2ae10:	cmp	ip, #46	; 0x2e
   2ae14:	beq	2ae8c <fb_scope_table_remove@@Base+0x108>
   2ae18:	mov	r0, r2
   2ae1c:	add	r2, r0, #1
   2ae20:	cmp	r2, lr
   2ae24:	bne	2ae0c <fb_scope_table_remove@@Base+0x88>
   2ae28:	cmp	r0, #0
   2ae2c:	beq	2aeb0 <fb_scope_table_remove@@Base+0x12c>
   2ae30:	cmp	r1, #0
   2ae34:	add	ip, r5, #1
   2ae38:	beq	2aeb0 <fb_scope_table_remove@@Base+0x12c>
   2ae3c:	add	r0, r5, r0
   2ae40:	mov	r3, r9
   2ae44:	b	2ae54 <fb_scope_table_remove@@Base+0xd0>
   2ae48:	ldrb	r1, [ip], #1
   2ae4c:	cmp	r1, #0
   2ae50:	beq	2ae64 <fb_scope_table_remove@@Base+0xe0>
   2ae54:	add	r3, r3, r3, lsl #5
   2ae58:	cmp	ip, r0
   2ae5c:	eor	r3, r3, r1
   2ae60:	bne	2ae48 <fb_scope_table_remove@@Base+0xc4>
   2ae64:	eor	r4, r4, r8
   2ae68:	eor	r3, r3, r4
   2ae6c:	cmp	lr, r2
   2ae70:	mul	r4, r7, r3
   2ae74:	beq	2aec0 <fb_scope_table_remove@@Base+0x13c>
   2ae78:	mvn	r3, r2
   2ae7c:	add	r2, r2, #1
   2ae80:	add	lr, lr, r3
   2ae84:	add	r5, r5, r2
   2ae88:	b	2add8 <fb_scope_table_remove@@Base+0x54>
   2ae8c:	cmp	r0, #0
   2ae90:	beq	2aea0 <fb_scope_table_remove@@Base+0x11c>
   2ae94:	cmp	r1, #0
   2ae98:	add	ip, r5, #1
   2ae9c:	bne	2ae3c <fb_scope_table_remove@@Base+0xb8>
   2aea0:	eor	r4, r4, #5376	; 0x1500
   2aea4:	eor	r4, r4, #5
   2aea8:	mul	r4, r7, r4
   2aeac:	b	2ae78 <fb_scope_table_remove@@Base+0xf4>
   2aeb0:	eor	r4, r4, #5376	; 0x1500
   2aeb4:	ldr	r3, [pc, #636]	; 2b138 <fb_scope_table_remove@@Base+0x3b4>
   2aeb8:	eor	r4, r4, #5
   2aebc:	mul	r4, r3, r4
   2aec0:	ldr	r3, [sp, #4]
   2aec4:	and	r5, r3, r4
   2aec8:	lsl	r5, r5, #2
   2aecc:	ldr	r3, [sp, #12]
   2aed0:	ldr	r6, [r3, r5]
   2aed4:	add	r5, r3, r5
   2aed8:	cmp	r6, #0
   2aedc:	beq	2afc0 <fb_scope_table_remove@@Base+0x23c>
   2aee0:	mov	r7, fp
   2aee4:	add	r4, r4, #1
   2aee8:	mov	r8, r3
   2aeec:	str	sl, [sp, #12]
   2aef0:	cmp	r6, #2
   2aef4:	beq	2afa4 <fb_scope_table_remove@@Base+0x220>
   2aef8:	cmp	r7, #0
   2aefc:	ldr	r9, [r6]
   2af00:	ble	2afcc <fb_scope_table_remove@@Base+0x248>
   2af04:	cmp	r9, #0
   2af08:	beq	2afa4 <fb_scope_table_remove@@Base+0x220>
   2af0c:	ldr	r3, [r9, #4]
   2af10:	ldm	r3, {r2, lr}
   2af14:	cmp	r7, lr
   2af18:	bcc	2afa4 <fb_scope_table_remove@@Base+0x220>
   2af1c:	ldr	sl, [sp, #8]
   2af20:	mov	fp, r7
   2af24:	cmp	lr, #0
   2af28:	beq	2b074 <fb_scope_table_remove@@Base+0x2f0>
   2af2c:	ldrb	r1, [r2]
   2af30:	ldrb	r3, [sl]
   2af34:	cmp	r1, r3
   2af38:	bne	2afa4 <fb_scope_table_remove@@Base+0x220>
   2af3c:	mov	r1, sl
   2af40:	mov	r3, #0
   2af44:	b	2af58 <fb_scope_table_remove@@Base+0x1d4>
   2af48:	ldrb	ip, [r2, #1]!
   2af4c:	ldrb	r0, [r1, #1]!
   2af50:	cmp	ip, r0
   2af54:	bne	2afa4 <fb_scope_table_remove@@Base+0x220>
   2af58:	add	r3, r3, #1
   2af5c:	cmp	r3, lr
   2af60:	bne	2af48 <fb_scope_table_remove@@Base+0x1c4>
   2af64:	cmp	lr, fp
   2af68:	beq	2b05c <fb_scope_table_remove@@Base+0x2d8>
   2af6c:	ldrb	r3, [sl, r3]
   2af70:	cmp	r3, #46	; 0x2e
   2af74:	bne	2afa4 <fb_scope_table_remove@@Base+0x220>
   2af78:	ldr	r9, [r9]
   2af7c:	mvn	r3, lr
   2af80:	cmp	r9, #0
   2af84:	add	lr, lr, #1
   2af88:	add	fp, fp, r3
   2af8c:	add	sl, sl, lr
   2af90:	beq	2afa4 <fb_scope_table_remove@@Base+0x220>
   2af94:	ldr	r3, [r9, #4]
   2af98:	ldm	r3, {r2, lr}
   2af9c:	cmp	lr, fp
   2afa0:	bls	2af24 <fb_scope_table_remove@@Base+0x1a0>
   2afa4:	ldr	r3, [sp, #4]
   2afa8:	and	r5, r3, r4
   2afac:	add	r4, r4, #1
   2afb0:	ldr	r6, [r8, r5, lsl #2]
   2afb4:	add	r5, r8, r5, lsl #2
   2afb8:	cmp	r6, #0
   2afbc:	bne	2aef0 <fb_scope_table_remove@@Base+0x16c>
   2afc0:	mov	r0, r6
   2afc4:	add	sp, sp, #20
   2afc8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2afcc:	ldr	sl, [sp, #8]
   2afd0:	mov	fp, r7
   2afd4:	b	2b018 <fb_scope_table_remove@@Base+0x294>
   2afd8:	ldr	r0, [r9, #4]
   2afdc:	ldr	r1, [sl, #4]
   2afe0:	ldr	r3, [r0, #4]
   2afe4:	ldr	ip, [r1, #4]
   2afe8:	mov	r2, r3
   2afec:	cmp	r3, ip
   2aff0:	bne	2afa4 <fb_scope_table_remove@@Base+0x220>
   2aff4:	ldr	r1, [r1]
   2aff8:	ldr	r0, [r0]
   2affc:	bl	14130 <strncmp@plt>
   2b000:	cmp	r0, #0
   2b004:	bne	2afa4 <fb_scope_table_remove@@Base+0x220>
   2b008:	adds	fp, fp, #1
   2b00c:	ldr	r9, [r9]
   2b010:	ldr	sl, [sl]
   2b014:	beq	2b060 <fb_scope_table_remove@@Base+0x2dc>
   2b018:	adds	r2, r9, #0
   2b01c:	movne	r2, #1
   2b020:	adds	r3, sl, #0
   2b024:	movne	r3, #1
   2b028:	tst	r2, r3
   2b02c:	bne	2afd8 <fb_scope_table_remove@@Base+0x254>
   2b030:	orrs	r3, r2, r3
   2b034:	bne	2afa4 <fb_scope_table_remove@@Base+0x220>
   2b038:	ldr	r1, [sp, #12]
   2b03c:	mov	r2, #2
   2b040:	mov	r0, r6
   2b044:	ldr	r3, [r1, #8]
   2b048:	str	r2, [r5]
   2b04c:	sub	r3, r3, #1
   2b050:	str	r3, [r1, #8]
   2b054:	add	sp, sp, #20
   2b058:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2b05c:	ldr	r9, [r9]
   2b060:	clz	r9, r9
   2b064:	lsr	r9, r9, #5
   2b068:	cmp	r9, #0
   2b06c:	bne	2b038 <fb_scope_table_remove@@Base+0x2b4>
   2b070:	b	2afa4 <fb_scope_table_remove@@Base+0x220>
   2b074:	mov	r3, lr
   2b078:	b	2af64 <fb_scope_table_remove@@Base+0x1e0>
   2b07c:	cmp	r1, #0
   2b080:	moveq	r4, r1
   2b084:	mov	r3, r1
   2b088:	moveq	r5, r4
   2b08c:	beq	2aecc <fb_scope_table_remove@@Base+0x148>
   2b090:	mov	ip, r3
   2b094:	ldr	r5, [pc, #148]	; 2b130 <fb_scope_table_remove@@Base+0x3ac>
   2b098:	ldr	r2, [ip, #4]
   2b09c:	ldr	r7, [pc, #144]	; 2b134 <fb_scope_table_remove@@Base+0x3b0>
   2b0a0:	ldr	r6, [pc, #144]	; 2b138 <fb_scope_table_remove@@Base+0x3b4>
   2b0a4:	ldm	r2, {r0, r3}
   2b0a8:	mov	lr, fp
   2b0ac:	mov	r4, #0
   2b0b0:	subs	r3, r3, #1
   2b0b4:	beq	2b120 <fb_scope_table_remove@@Base+0x39c>
   2b0b8:	ldrb	r2, [r0]
   2b0bc:	add	r1, r0, #1
   2b0c0:	cmp	r2, #0
   2b0c4:	beq	2b120 <fb_scope_table_remove@@Base+0x39c>
   2b0c8:	add	r0, r0, r3
   2b0cc:	mov	r3, r5
   2b0d0:	b	2b0e0 <fb_scope_table_remove@@Base+0x35c>
   2b0d4:	ldrb	r2, [r1], #1
   2b0d8:	cmp	r2, #0
   2b0dc:	beq	2b0f0 <fb_scope_table_remove@@Base+0x36c>
   2b0e0:	add	r3, r3, r3, lsl #5
   2b0e4:	cmp	r1, r0
   2b0e8:	eor	r3, r3, r2
   2b0ec:	bne	2b0d4 <fb_scope_table_remove@@Base+0x350>
   2b0f0:	eor	r4, r4, r7
   2b0f4:	eor	r3, r3, r4
   2b0f8:	adds	lr, lr, #1
   2b0fc:	mul	r4, r6, r3
   2b100:	ldr	ip, [ip]
   2b104:	beq	2aec0 <fb_scope_table_remove@@Base+0x13c>
   2b108:	cmp	ip, #0
   2b10c:	beq	2aec0 <fb_scope_table_remove@@Base+0x13c>
   2b110:	ldr	r2, [ip, #4]
   2b114:	ldm	r2, {r0, r3}
   2b118:	subs	r3, r3, #1
   2b11c:	bne	2b0b8 <fb_scope_table_remove@@Base+0x334>
   2b120:	mov	r3, r5
   2b124:	b	2b0f0 <fb_scope_table_remove@@Base+0x36c>
   2b128:	mov	r6, r3
   2b12c:	b	2afc0 <fb_scope_table_remove@@Base+0x23c>
   2b130:	svccs	0x00692e57
   2b134:	svccs	0x00693b52
   2b138:			; <UNDEFINED> instruction: 0x9e3779b1

0002b13c <fb_scope_table_remove_item@@Base>:
   2b13c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2b140:	sub	sp, sp, #12
   2b144:	ldr	r8, [r0]
   2b148:	ldr	r7, [r1]
   2b14c:	cmp	r8, #0
   2b150:	beq	2b2e0 <fb_scope_table_remove_item@@Base+0x1a4>
   2b154:	ldr	r9, [r0, #12]
   2b158:	cmp	r7, #0
   2b15c:	sub	r9, r9, #1
   2b160:	beq	2b2e8 <fb_scope_table_remove_item@@Base+0x1ac>
   2b164:	ldr	r4, [pc, #392]	; 2b2f4 <fb_scope_table_remove_item@@Base+0x1b8>
   2b168:	ldr	sl, [pc, #392]	; 2b2f8 <fb_scope_table_remove_item@@Base+0x1bc>
   2b16c:	ldr	r5, [pc, #392]	; 2b2fc <fb_scope_table_remove_item@@Base+0x1c0>
   2b170:	mov	lr, r7
   2b174:	mov	r6, #0
   2b178:	ldr	r2, [lr, #4]
   2b17c:	ldr	r3, [r2, #4]
   2b180:	ldr	ip, [r2]
   2b184:	subs	r3, r3, #1
   2b188:	beq	2b2ac <fb_scope_table_remove_item@@Base+0x170>
   2b18c:	ldrb	r2, [ip]
   2b190:	add	r1, ip, #1
   2b194:	cmp	r2, #0
   2b198:	beq	2b2ac <fb_scope_table_remove_item@@Base+0x170>
   2b19c:	add	ip, ip, r3
   2b1a0:	mov	r3, r4
   2b1a4:	b	2b1b4 <fb_scope_table_remove_item@@Base+0x78>
   2b1a8:	ldrb	r2, [r1], #1
   2b1ac:	cmp	r2, #0
   2b1b0:	beq	2b1c4 <fb_scope_table_remove_item@@Base+0x88>
   2b1b4:	add	r3, r3, r3, lsl #5
   2b1b8:	cmp	r1, ip
   2b1bc:	eor	r3, r3, r2
   2b1c0:	bne	2b1a8 <fb_scope_table_remove_item@@Base+0x6c>
   2b1c4:	eor	r6, r6, sl
   2b1c8:	ldr	lr, [lr]
   2b1cc:	eor	r6, r6, r3
   2b1d0:	cmp	lr, #0
   2b1d4:	mul	r6, r5, r6
   2b1d8:	bne	2b178 <fb_scope_table_remove_item@@Base+0x3c>
   2b1dc:	and	r5, r9, r6
   2b1e0:	lsl	r5, r5, #2
   2b1e4:	ldr	sl, [r8, r5]
   2b1e8:	add	r5, r8, r5
   2b1ec:	cmp	sl, #0
   2b1f0:	beq	2b2a0 <fb_scope_table_remove_item@@Base+0x164>
   2b1f4:	add	r6, r6, #1
   2b1f8:	str	r0, [sp, #4]
   2b1fc:	cmp	sl, #2
   2b200:	beq	2b288 <fb_scope_table_remove_item@@Base+0x14c>
   2b204:	ldr	r4, [sl]
   2b208:	adds	r2, r7, #0
   2b20c:	movne	r2, #1
   2b210:	adds	r1, r4, #0
   2b214:	movne	r1, #1
   2b218:	tst	r1, r2
   2b21c:	beq	2b2b4 <fb_scope_table_remove_item@@Base+0x178>
   2b220:	ldr	r0, [r4, #4]
   2b224:	ldr	r1, [r7, #4]
   2b228:	ldr	r2, [r0, #4]
   2b22c:	ldr	r3, [r1, #4]
   2b230:	cmp	r2, r3
   2b234:	bne	2b288 <fb_scope_table_remove_item@@Base+0x14c>
   2b238:	mov	fp, r7
   2b23c:	ldr	r1, [r1]
   2b240:	ldr	r0, [r0]
   2b244:	bl	14130 <strncmp@plt>
   2b248:	cmp	r0, #0
   2b24c:	bne	2b288 <fb_scope_table_remove_item@@Base+0x14c>
   2b250:	ldr	r4, [r4]
   2b254:	ldr	fp, [fp]
   2b258:	adds	r1, r4, #0
   2b25c:	movne	r1, #1
   2b260:	adds	r2, fp, #0
   2b264:	movne	r2, #1
   2b268:	tst	r1, r2
   2b26c:	beq	2b2b4 <fb_scope_table_remove_item@@Base+0x178>
   2b270:	ldr	r0, [r4, #4]
   2b274:	ldr	r1, [fp, #4]
   2b278:	ldr	r2, [r0, #4]
   2b27c:	ldr	ip, [r1, #4]
   2b280:	cmp	r2, ip
   2b284:	beq	2b23c <fb_scope_table_remove_item@@Base+0x100>
   2b288:	and	r5, r9, r6
   2b28c:	add	r6, r6, #1
   2b290:	ldr	sl, [r8, r5, lsl #2]
   2b294:	add	r5, r8, r5, lsl #2
   2b298:	cmp	sl, #0
   2b29c:	bne	2b1fc <fb_scope_table_remove_item@@Base+0xc0>
   2b2a0:	mov	r0, sl
   2b2a4:	add	sp, sp, #12
   2b2a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2b2ac:	mov	r3, r4
   2b2b0:	b	2b1c4 <fb_scope_table_remove_item@@Base+0x88>
   2b2b4:	orrs	r3, r1, r2
   2b2b8:	bne	2b288 <fb_scope_table_remove_item@@Base+0x14c>
   2b2bc:	ldr	r1, [sp, #4]
   2b2c0:	mov	r2, #2
   2b2c4:	mov	r0, sl
   2b2c8:	ldr	r3, [r1, #8]
   2b2cc:	str	r2, [r5]
   2b2d0:	sub	r3, r3, #1
   2b2d4:	str	r3, [r1, #8]
   2b2d8:	add	sp, sp, #12
   2b2dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2b2e0:	mov	sl, r8
   2b2e4:	b	2b2a0 <fb_scope_table_remove_item@@Base+0x164>
   2b2e8:	mov	r5, r7
   2b2ec:	mov	r6, r7
   2b2f0:	b	2b1e4 <fb_scope_table_remove_item@@Base+0xa8>
   2b2f4:	svccs	0x00692e57
   2b2f8:	svccs	0x00693b52
   2b2fc:			; <UNDEFINED> instruction: 0x9e3779b1

0002b300 <fb_scope_table_visit@@Base>:
   2b300:	ldr	r3, [r0, #12]
   2b304:	push	{r4, r5, r6, r7, r8, lr}
   2b308:	cmp	r3, #0
   2b30c:	ldr	r5, [r0]
   2b310:	popeq	{r4, r5, r6, r7, r8, pc}
   2b314:	mov	r7, r2
   2b318:	mov	r6, r1
   2b31c:	mov	r8, r0
   2b320:	sub	r5, r5, #4
   2b324:	mov	r4, #0
   2b328:	b	2b334 <fb_scope_table_visit@@Base+0x34>
   2b32c:	cmp	r4, r3
   2b330:	bcs	2b35c <fb_scope_table_visit@@Base+0x5c>
   2b334:	ldr	r1, [r5, #4]!
   2b338:	add	r4, r4, #1
   2b33c:	cmp	r1, #0
   2b340:	cmpne	r1, #2
   2b344:	beq	2b32c <fb_scope_table_visit@@Base+0x2c>
   2b348:	mov	r0, r7
   2b34c:	blx	r6
   2b350:	ldr	r3, [r8, #12]
   2b354:	cmp	r4, r3
   2b358:	bcc	2b334 <fb_scope_table_visit@@Base+0x34>
   2b35c:	pop	{r4, r5, r6, r7, r8, pc}
   2b360:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2b364:	sub	sp, sp, #36	; 0x24
   2b368:	cmp	r3, #0
   2b36c:	str	r3, [sp, #12]
   2b370:	str	r1, [sp, #16]
   2b374:	beq	2b560 <fb_scope_table_visit@@Base+0x260>
   2b378:	cmp	r3, #2
   2b37c:	beq	2b530 <fb_scope_table_visit@@Base+0x230>
   2b380:	cmp	r3, #1
   2b384:	beq	2b51c <fb_scope_table_visit@@Base+0x21c>
   2b388:	ldr	r8, [r0, #12]
   2b38c:	mov	r3, #179	; 0xb3
   2b390:	ldr	r1, [r0, #8]
   2b394:	mul	r3, r3, r8
   2b398:	mov	r9, r2
   2b39c:	mov	sl, r0
   2b3a0:	cmp	r1, r3, lsr #8
   2b3a4:	bcc	2b3bc <fb_scope_table_visit@@Base+0xbc>
   2b3a8:	lsl	r1, r1, #1
   2b3ac:	bl	2b598 <fb_scope_table_visit@@Base+0x298>
   2b3b0:	cmp	r0, #0
   2b3b4:	bne	2b544 <fb_scope_table_visit@@Base+0x244>
   2b3b8:	ldr	r8, [sl, #12]
   2b3bc:	ldr	r2, [pc, #432]	; 2b574 <fb_scope_table_visit@@Base+0x274>
   2b3c0:	add	r3, sp, #24
   2b3c4:	ldr	r0, [sp, #16]
   2b3c8:	stm	sp, {r2, r3}
   2b3cc:	mov	r3, #0
   2b3d0:	mov	r2, r9
   2b3d4:	ldr	r7, [sl]
   2b3d8:	bl	3fe60 <cmetrohash64_1@@Base>
   2b3dc:	ldr	r3, [sp, #72]	; 0x48
   2b3e0:	ldr	r6, [sp, #24]
   2b3e4:	sub	r3, r3, #2
   2b3e8:	sub	r8, r8, #1
   2b3ec:	cmp	r3, #1
   2b3f0:	and	r4, r8, r6
   2b3f4:	bls	2b4c8 <fb_scope_table_visit@@Base+0x1c8>
   2b3f8:	ldr	r5, [r7, r4, lsl #2]
   2b3fc:	add	r4, r7, r4, lsl #2
   2b400:	cmp	r5, #0
   2b404:	moveq	fp, r4
   2b408:	beq	2b4a4 <fb_scope_table_visit@@Base+0x1a4>
   2b40c:	str	sl, [sp, #20]
   2b410:	add	r6, r6, #1
   2b414:	mov	sl, r5
   2b418:	mov	fp, #0
   2b41c:	ldr	r5, [sp, #16]
   2b420:	b	2b43c <fb_scope_table_visit@@Base+0x13c>
   2b424:	and	r4, r8, r6
   2b428:	add	r6, r6, #1
   2b42c:	ldr	sl, [r7, r4, lsl #2]
   2b430:	add	r4, r7, r4, lsl #2
   2b434:	cmp	sl, #0
   2b438:	beq	2b498 <fb_scope_table_visit@@Base+0x198>
   2b43c:	cmp	sl, #2
   2b440:	beq	2b48c <fb_scope_table_visit@@Base+0x18c>
   2b444:	ldr	r2, [sl, #148]	; 0x94
   2b448:	cmp	r9, r2
   2b44c:	bne	2b424 <fb_scope_table_visit@@Base+0x124>
   2b450:	mov	r2, r9
   2b454:	ldr	r1, [sl, #144]	; 0x90
   2b458:	mov	r0, r5
   2b45c:	bl	13ff8 <memcmp@plt>
   2b460:	cmp	r0, #0
   2b464:	bne	2b424 <fb_scope_table_visit@@Base+0x124>
   2b468:	ldr	r3, [sp, #72]	; 0x48
   2b46c:	mov	r5, sl
   2b470:	cmp	r3, #0
   2b474:	bne	2b4bc <fb_scope_table_visit@@Base+0x1bc>
   2b478:	ldr	r3, [sp, #12]
   2b47c:	mov	r0, r5
   2b480:	str	r3, [r4]
   2b484:	add	sp, sp, #36	; 0x24
   2b488:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2b48c:	cmp	fp, #0
   2b490:	moveq	fp, r4
   2b494:	b	2b424 <fb_scope_table_visit@@Base+0x124>
   2b498:	cmp	fp, #0
   2b49c:	ldr	sl, [sp, #20]
   2b4a0:	moveq	fp, r4
   2b4a4:	ldr	r2, [sl, #8]
   2b4a8:	ldr	r3, [sp, #12]
   2b4ac:	mov	r5, #0
   2b4b0:	add	r2, r2, #1
   2b4b4:	str	r2, [sl, #8]
   2b4b8:	str	r3, [fp]
   2b4bc:	mov	r0, r5
   2b4c0:	add	sp, sp, #36	; 0x24
   2b4c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2b4c8:	ldr	r2, [r7, r4, lsl #2]
   2b4cc:	ldr	r3, [sl, #8]
   2b4d0:	cmp	r2, #0
   2b4d4:	cmpne	r2, #2
   2b4d8:	add	r3, r3, #1
   2b4dc:	str	r3, [sl, #8]
   2b4e0:	add	r4, r7, r4, lsl #2
   2b4e4:	beq	2b50c <fb_scope_table_visit@@Base+0x20c>
   2b4e8:	add	r6, r6, #1
   2b4ec:	and	r3, r8, r6
   2b4f0:	add	r6, r6, #1
   2b4f4:	ldr	r2, [r7, r3, lsl #2]
   2b4f8:	add	r3, r7, r3, lsl #2
   2b4fc:	cmp	r2, #0
   2b500:	cmpne	r2, #2
   2b504:	bne	2b4ec <fb_scope_table_visit@@Base+0x1ec>
   2b508:	mov	r4, r3
   2b50c:	ldr	r3, [sp, #12]
   2b510:	mov	r5, #0
   2b514:	str	r3, [r4]
   2b518:	b	2b4bc <fb_scope_table_visit@@Base+0x1bc>
   2b51c:	ldr	r3, [pc, #84]	; 2b578 <fb_scope_table_visit@@Base+0x278>
   2b520:	mov	r2, #116	; 0x74
   2b524:	ldr	r1, [pc, #80]	; 2b57c <fb_scope_table_visit@@Base+0x27c>
   2b528:	ldr	r0, [pc, #80]	; 2b580 <fb_scope_table_visit@@Base+0x280>
   2b52c:	bl	14148 <__assert_fail@plt>
   2b530:	ldr	r3, [pc, #64]	; 2b578 <fb_scope_table_visit@@Base+0x278>
   2b534:	mov	r2, #115	; 0x73
   2b538:	ldr	r1, [pc, #60]	; 2b57c <fb_scope_table_visit@@Base+0x27c>
   2b53c:	ldr	r0, [pc, #64]	; 2b584 <fb_scope_table_visit@@Base+0x284>
   2b540:	bl	14148 <__assert_fail@plt>
   2b544:	ldr	r3, [pc, #60]	; 2b588 <fb_scope_table_visit@@Base+0x288>
   2b548:	ldr	r2, [pc, #60]	; 2b58c <fb_scope_table_visit@@Base+0x28c>
   2b54c:	ldr	r1, [pc, #60]	; 2b590 <fb_scope_table_visit@@Base+0x290>
   2b550:	ldr	r0, [r3]
   2b554:	bl	14094 <fprintf@plt>
   2b558:	mov	r0, #1
   2b55c:	bl	14070 <exit@plt>
   2b560:	ldr	r3, [pc, #16]	; 2b578 <fb_scope_table_visit@@Base+0x278>
   2b564:	mov	r2, #114	; 0x72
   2b568:	ldr	r1, [pc, #12]	; 2b57c <fb_scope_table_visit@@Base+0x27c>
   2b56c:	ldr	r0, [pc, #32]	; 2b594 <fb_scope_table_visit@@Base+0x294>
   2b570:	bl	14148 <__assert_fail@plt>
   2b574:	svccs	0x00693b52
   2b578:	andeq	sl, r5, r8, lsl #30
   2b57c:	ldrdeq	sl, [r5], -ip
   2b580:	andeq	sl, r5, ip, asr lr
   2b584:	andeq	sl, r5, r4, asr #28
   2b588:	andeq	pc, r6, r8, lsr #1
   2b58c:	andeq	sl, r5, r4, ror lr
   2b590:	andeq	sl, r5, r8, lsr #29
   2b594:	andeq	sl, r5, ip, lsr #28
   2b598:	ldr	r3, [r0, #8]
   2b59c:	push	{r4, r5, r6, r7, r8, lr}
   2b5a0:	cmp	r1, r3
   2b5a4:	movcc	r1, r3
   2b5a8:	cmp	r1, #2
   2b5ac:	sub	sp, sp, #24
   2b5b0:	mov	r6, r0
   2b5b4:	ldr	r7, [r0]
   2b5b8:	mov	r5, #4
   2b5bc:	bls	2b5d4 <fb_scope_table_visit@@Base+0x2d4>
   2b5c0:	mov	r2, #179	; 0xb3
   2b5c4:	lsl	r5, r5, #1
   2b5c8:	mul	r3, r2, r5
   2b5cc:	cmp	r1, r3, lsr #8
   2b5d0:	bhi	2b5c4 <fb_scope_table_visit@@Base+0x2c4>
   2b5d4:	mov	r1, #4
   2b5d8:	mov	r0, r5
   2b5dc:	bl	13fa4 <calloc@plt>
   2b5e0:	cmp	r0, #0
   2b5e4:	str	r0, [sp, #8]
   2b5e8:	beq	2b698 <fb_scope_table_visit@@Base+0x398>
   2b5ec:	ldr	r2, [r6, #12]
   2b5f0:	mov	r4, #0
   2b5f4:	cmp	r2, r4
   2b5f8:	str	r5, [sp, #20]
   2b5fc:	str	r4, [sp, #12]
   2b600:	str	r4, [sp, #16]
   2b604:	beq	2b68c <fb_scope_table_visit@@Base+0x38c>
   2b608:	sub	r5, r7, #4
   2b60c:	mov	r8, #3
   2b610:	add	r7, sp, #8
   2b614:	b	2b620 <fb_scope_table_visit@@Base+0x320>
   2b618:	cmp	r4, r2
   2b61c:	bcs	2b654 <fb_scope_table_visit@@Base+0x354>
   2b620:	ldr	r3, [r5, #4]!
   2b624:	add	r4, r4, #1
   2b628:	cmp	r3, #0
   2b62c:	cmpne	r3, #2
   2b630:	beq	2b618 <fb_scope_table_visit@@Base+0x318>
   2b634:	ldr	r2, [r3, #148]	; 0x94
   2b638:	ldr	r1, [r3, #144]	; 0x90
   2b63c:	mov	r0, r7
   2b640:	str	r8, [sp]
   2b644:	bl	2b360 <fb_scope_table_visit@@Base+0x60>
   2b648:	ldr	r2, [r6, #12]
   2b64c:	cmp	r4, r2
   2b650:	bcc	2b620 <fb_scope_table_visit@@Base+0x320>
   2b654:	ldr	r0, [r6]
   2b658:	cmp	r0, #0
   2b65c:	beq	2b664 <fb_scope_table_visit@@Base+0x364>
   2b660:	bl	13fd4 <free@plt>
   2b664:	mov	ip, r7
   2b668:	mov	lr, #0
   2b66c:	ldm	ip!, {r0, r1, r2, r3}
   2b670:	str	r0, [r6]
   2b674:	str	r1, [r6, #4]
   2b678:	str	r2, [r6, #8]
   2b67c:	str	r3, [r6, #12]
   2b680:	mov	r0, lr
   2b684:	add	sp, sp, #24
   2b688:	pop	{r4, r5, r6, r7, r8, pc}
   2b68c:	mov	r0, r7
   2b690:	add	r7, sp, #8
   2b694:	b	2b658 <fb_scope_table_visit@@Base+0x358>
   2b698:	mvn	lr, #0
   2b69c:	b	2b680 <fb_scope_table_visit@@Base+0x380>

0002b6a0 <fb_schema_table_clear@@Base>:
   2b6a0:	push	{r4, lr}
   2b6a4:	mov	r4, r0
   2b6a8:	ldr	r0, [r0]
   2b6ac:	cmp	r0, #0
   2b6b0:	beq	2b6b8 <fb_schema_table_clear@@Base+0x18>
   2b6b4:	bl	13fd4 <free@plt>
   2b6b8:	mov	r3, #0
   2b6bc:	str	r3, [r4]
   2b6c0:	str	r3, [r4, #4]
   2b6c4:	str	r3, [r4, #8]
   2b6c8:	str	r3, [r4, #12]
   2b6cc:	pop	{r4, pc}

0002b6d0 <fb_schema_table_destroy@@Base>:
   2b6d0:	push	{r4, r5, r6, r7, r8, lr}
   2b6d4:	subs	r7, r1, #0
   2b6d8:	mov	r6, r0
   2b6dc:	beq	2b730 <fb_schema_table_destroy@@Base+0x60>
   2b6e0:	ldr	r3, [r0, #12]
   2b6e4:	ldr	r0, [r0]
   2b6e8:	cmp	r3, #0
   2b6ec:	beq	2b734 <fb_schema_table_destroy@@Base+0x64>
   2b6f0:	mov	r8, r2
   2b6f4:	sub	r5, r0, #4
   2b6f8:	mov	r4, #0
   2b6fc:	b	2b708 <fb_schema_table_destroy@@Base+0x38>
   2b700:	cmp	r4, r3
   2b704:	bcs	2b730 <fb_schema_table_destroy@@Base+0x60>
   2b708:	ldr	r1, [r5, #4]!
   2b70c:	add	r4, r4, #1
   2b710:	cmp	r1, #0
   2b714:	cmpne	r1, #2
   2b718:	beq	2b700 <fb_schema_table_destroy@@Base+0x30>
   2b71c:	mov	r0, r8
   2b720:	blx	r7
   2b724:	ldr	r3, [r6, #12]
   2b728:	cmp	r4, r3
   2b72c:	bcc	2b708 <fb_schema_table_destroy@@Base+0x38>
   2b730:	ldr	r0, [r6]
   2b734:	cmp	r0, #0
   2b738:	beq	2b740 <fb_schema_table_destroy@@Base+0x70>
   2b73c:	bl	13fd4 <free@plt>
   2b740:	mov	r3, #0
   2b744:	str	r3, [r6]
   2b748:	str	r3, [r6, #4]
   2b74c:	str	r3, [r6, #8]
   2b750:	str	r3, [r6, #12]
   2b754:	pop	{r4, r5, r6, r7, r8, pc}

0002b758 <fb_schema_table_init@@Base>:
   2b758:	cmp	r1, #2
   2b75c:	push	{r4, r5, r6, lr}
   2b760:	mov	r4, #4
   2b764:	mov	r5, r0
   2b768:	bls	2b780 <fb_schema_table_init@@Base+0x28>
   2b76c:	mov	r2, #179	; 0xb3
   2b770:	lsl	r4, r4, #1
   2b774:	mul	r3, r2, r4
   2b778:	cmp	r1, r3, lsr #8
   2b77c:	bhi	2b770 <fb_schema_table_init@@Base+0x18>
   2b780:	mov	r1, #4
   2b784:	mov	r0, r4
   2b788:	bl	13fa4 <calloc@plt>
   2b78c:	cmp	r0, #0
   2b790:	str	r0, [r5]
   2b794:	movne	r0, #0
   2b798:	strne	r4, [r5, #12]
   2b79c:	strne	r0, [r5, #4]
   2b7a0:	strne	r0, [r5, #8]
   2b7a4:	mvneq	r0, #0
   2b7a8:	pop	{r4, r5, r6, pc}

0002b7ac <fb_schema_table_resize@@Base>:
   2b7ac:	b	2b598 <fb_scope_table_visit@@Base+0x298>

0002b7b0 <fb_schema_table_insert@@Base>:
   2b7b0:	b	2b360 <fb_scope_table_visit@@Base+0x60>

0002b7b4 <fb_schema_table_insert_item@@Base>:
   2b7b4:	push	{lr}		; (str lr, [sp, #-4]!)
   2b7b8:	sub	sp, sp, #12
   2b7bc:	mov	r3, r1
   2b7c0:	str	r2, [sp]
   2b7c4:	ldr	r2, [r1, #148]	; 0x94
   2b7c8:	ldr	r1, [r1, #144]	; 0x90
   2b7cc:	bl	2b360 <fb_scope_table_visit@@Base+0x60>
   2b7d0:	add	sp, sp, #12
   2b7d4:	pop	{pc}		; (ldr pc, [sp], #4)

0002b7d8 <fb_schema_table_find@@Base>:
   2b7d8:	push	{r4, r5, r6, r7, r8, r9, lr}
   2b7dc:	sub	sp, sp, #20
   2b7e0:	ldr	r8, [r0]
   2b7e4:	cmp	r8, #0
   2b7e8:	beq	2b87c <fb_schema_table_find@@Base+0xa4>
   2b7ec:	mov	r9, r1
   2b7f0:	ldr	r1, [pc, #148]	; 2b88c <fb_schema_table_find@@Base+0xb4>
   2b7f4:	add	r3, sp, #8
   2b7f8:	ldr	r7, [r0, #12]
   2b7fc:	stm	sp, {r1, r3}
   2b800:	mov	r0, r9
   2b804:	mov	r3, #0
   2b808:	mov	r6, r2
   2b80c:	bl	3fe60 <cmetrohash64_1@@Base>
   2b810:	ldr	r5, [sp, #8]
   2b814:	sub	r7, r7, #1
   2b818:	and	r3, r7, r5
   2b81c:	ldr	r4, [r8, r3, lsl #2]
   2b820:	cmp	r4, #0
   2b824:	beq	2b87c <fb_schema_table_find@@Base+0xa4>
   2b828:	add	r5, r5, #1
   2b82c:	b	2b844 <fb_schema_table_find@@Base+0x6c>
   2b830:	and	r3, r7, r5
   2b834:	add	r5, r5, #1
   2b838:	ldr	r4, [r8, r3, lsl #2]
   2b83c:	cmp	r4, #0
   2b840:	beq	2b87c <fb_schema_table_find@@Base+0xa4>
   2b844:	cmp	r4, #2
   2b848:	beq	2b830 <fb_schema_table_find@@Base+0x58>
   2b84c:	ldr	r3, [r4, #148]	; 0x94
   2b850:	cmp	r6, r3
   2b854:	bne	2b830 <fb_schema_table_find@@Base+0x58>
   2b858:	mov	r2, r6
   2b85c:	ldr	r1, [r4, #144]	; 0x90
   2b860:	mov	r0, r9
   2b864:	bl	13ff8 <memcmp@plt>
   2b868:	cmp	r0, #0
   2b86c:	bne	2b830 <fb_schema_table_find@@Base+0x58>
   2b870:	mov	r0, r4
   2b874:	add	sp, sp, #20
   2b878:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2b87c:	mov	r4, #0
   2b880:	mov	r0, r4
   2b884:	add	sp, sp, #20
   2b888:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2b88c:	svccs	0x00693b52

0002b890 <fb_schema_table_find_item@@Base>:
   2b890:	push	{r4, r5, r6, r7, r8, r9, lr}
   2b894:	sub	sp, sp, #20
   2b898:	ldr	r8, [r0]
   2b89c:	ldr	r9, [r1, #144]	; 0x90
   2b8a0:	cmp	r8, #0
   2b8a4:	ldr	r7, [r1, #148]	; 0x94
   2b8a8:	beq	2b938 <fb_schema_table_find_item@@Base+0xa8>
   2b8ac:	ldr	r2, [pc, #148]	; 2b948 <fb_schema_table_find_item@@Base+0xb8>
   2b8b0:	add	r3, sp, #8
   2b8b4:	ldr	r6, [r0, #12]
   2b8b8:	stm	sp, {r2, r3}
   2b8bc:	mov	r0, r9
   2b8c0:	mov	r3, #0
   2b8c4:	mov	r2, r7
   2b8c8:	bl	3fe60 <cmetrohash64_1@@Base>
   2b8cc:	ldr	r5, [sp, #8]
   2b8d0:	sub	r6, r6, #1
   2b8d4:	and	r3, r6, r5
   2b8d8:	ldr	r4, [r8, r3, lsl #2]
   2b8dc:	cmp	r4, #0
   2b8e0:	beq	2b938 <fb_schema_table_find_item@@Base+0xa8>
   2b8e4:	add	r5, r5, #1
   2b8e8:	b	2b900 <fb_schema_table_find_item@@Base+0x70>
   2b8ec:	and	r3, r6, r5
   2b8f0:	add	r5, r5, #1
   2b8f4:	ldr	r4, [r8, r3, lsl #2]
   2b8f8:	cmp	r4, #0
   2b8fc:	beq	2b938 <fb_schema_table_find_item@@Base+0xa8>
   2b900:	cmp	r4, #2
   2b904:	beq	2b8ec <fb_schema_table_find_item@@Base+0x5c>
   2b908:	ldr	r3, [r4, #148]	; 0x94
   2b90c:	cmp	r7, r3
   2b910:	bne	2b8ec <fb_schema_table_find_item@@Base+0x5c>
   2b914:	mov	r2, r7
   2b918:	ldr	r1, [r4, #144]	; 0x90
   2b91c:	mov	r0, r9
   2b920:	bl	13ff8 <memcmp@plt>
   2b924:	cmp	r0, #0
   2b928:	bne	2b8ec <fb_schema_table_find_item@@Base+0x5c>
   2b92c:	mov	r0, r4
   2b930:	add	sp, sp, #20
   2b934:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2b938:	mov	r4, #0
   2b93c:	mov	r0, r4
   2b940:	add	sp, sp, #20
   2b944:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2b948:	svccs	0x00693b52

0002b94c <fb_schema_table_remove@@Base>:
   2b94c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2b950:	sub	sp, sp, #20
   2b954:	ldr	r5, [r0]
   2b958:	cmp	r5, #0
   2b95c:	beq	2ba10 <fb_schema_table_remove@@Base+0xc4>
   2b960:	mov	r8, r1
   2b964:	ldr	r1, [pc, #180]	; 2ba20 <fb_schema_table_remove@@Base+0xd4>
   2b968:	add	r3, sp, #8
   2b96c:	ldr	r7, [r0, #12]
   2b970:	mov	r9, r0
   2b974:	stm	sp, {r1, r3}
   2b978:	mov	r0, r8
   2b97c:	mov	r3, #0
   2b980:	mov	r6, r2
   2b984:	bl	3fe60 <cmetrohash64_1@@Base>
   2b988:	ldr	sl, [sp, #8]
   2b98c:	sub	r7, r7, #1
   2b990:	and	r3, r7, sl
   2b994:	ldr	fp, [r5, r3, lsl #2]
   2b998:	add	r4, r5, r3, lsl #2
   2b99c:	cmp	fp, #0
   2b9a0:	beq	2ba10 <fb_schema_table_remove@@Base+0xc4>
   2b9a4:	add	sl, sl, #1
   2b9a8:	b	2b9c4 <fb_schema_table_remove@@Base+0x78>
   2b9ac:	and	r3, r7, sl
   2b9b0:	add	sl, sl, #1
   2b9b4:	ldr	fp, [r5, r3, lsl #2]
   2b9b8:	add	r4, r5, r3, lsl #2
   2b9bc:	cmp	fp, #0
   2b9c0:	beq	2ba10 <fb_schema_table_remove@@Base+0xc4>
   2b9c4:	cmp	fp, #2
   2b9c8:	beq	2b9ac <fb_schema_table_remove@@Base+0x60>
   2b9cc:	ldr	r3, [fp, #148]	; 0x94
   2b9d0:	cmp	r6, r3
   2b9d4:	bne	2b9ac <fb_schema_table_remove@@Base+0x60>
   2b9d8:	mov	r2, r6
   2b9dc:	ldr	r1, [fp, #144]	; 0x90
   2b9e0:	mov	r0, r8
   2b9e4:	bl	13ff8 <memcmp@plt>
   2b9e8:	cmp	r0, #0
   2b9ec:	bne	2b9ac <fb_schema_table_remove@@Base+0x60>
   2b9f0:	ldr	r3, [r9, #8]
   2b9f4:	mov	r2, #2
   2b9f8:	sub	r3, r3, #1
   2b9fc:	str	r2, [r4]
   2ba00:	mov	r0, fp
   2ba04:	str	r3, [r9, #8]
   2ba08:	add	sp, sp, #20
   2ba0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2ba10:	mov	fp, #0
   2ba14:	mov	r0, fp
   2ba18:	add	sp, sp, #20
   2ba1c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2ba20:	svccs	0x00693b52

0002ba24 <fb_schema_table_remove_item@@Base>:
   2ba24:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2ba28:	sub	sp, sp, #20
   2ba2c:	ldr	r5, [r0]
   2ba30:	ldr	r9, [r1, #144]	; 0x90
   2ba34:	cmp	r5, #0
   2ba38:	ldr	r7, [r1, #148]	; 0x94
   2ba3c:	beq	2baec <fb_schema_table_remove_item@@Base+0xc8>
   2ba40:	ldr	r2, [pc, #180]	; 2bafc <fb_schema_table_remove_item@@Base+0xd8>
   2ba44:	add	r3, sp, #8
   2ba48:	ldr	r6, [r0, #12]
   2ba4c:	mov	r8, r0
   2ba50:	stm	sp, {r2, r3}
   2ba54:	mov	r0, r9
   2ba58:	mov	r3, #0
   2ba5c:	mov	r2, r7
   2ba60:	bl	3fe60 <cmetrohash64_1@@Base>
   2ba64:	ldr	sl, [sp, #8]
   2ba68:	sub	r6, r6, #1
   2ba6c:	and	r3, r6, sl
   2ba70:	ldr	fp, [r5, r3, lsl #2]
   2ba74:	add	r4, r5, r3, lsl #2
   2ba78:	cmp	fp, #0
   2ba7c:	beq	2baec <fb_schema_table_remove_item@@Base+0xc8>
   2ba80:	add	sl, sl, #1
   2ba84:	b	2baa0 <fb_schema_table_remove_item@@Base+0x7c>
   2ba88:	and	r3, r6, sl
   2ba8c:	add	sl, sl, #1
   2ba90:	ldr	fp, [r5, r3, lsl #2]
   2ba94:	add	r4, r5, r3, lsl #2
   2ba98:	cmp	fp, #0
   2ba9c:	beq	2baec <fb_schema_table_remove_item@@Base+0xc8>
   2baa0:	cmp	fp, #2
   2baa4:	beq	2ba88 <fb_schema_table_remove_item@@Base+0x64>
   2baa8:	ldr	r3, [fp, #148]	; 0x94
   2baac:	cmp	r7, r3
   2bab0:	bne	2ba88 <fb_schema_table_remove_item@@Base+0x64>
   2bab4:	mov	r2, r7
   2bab8:	ldr	r1, [fp, #144]	; 0x90
   2babc:	mov	r0, r9
   2bac0:	bl	13ff8 <memcmp@plt>
   2bac4:	cmp	r0, #0
   2bac8:	bne	2ba88 <fb_schema_table_remove_item@@Base+0x64>
   2bacc:	ldr	r3, [r8, #8]
   2bad0:	mov	r2, #2
   2bad4:	sub	r3, r3, #1
   2bad8:	str	r2, [r4]
   2badc:	mov	r0, fp
   2bae0:	str	r3, [r8, #8]
   2bae4:	add	sp, sp, #20
   2bae8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2baec:	mov	fp, #0
   2baf0:	mov	r0, fp
   2baf4:	add	sp, sp, #20
   2baf8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2bafc:	svccs	0x00693b52

0002bb00 <fb_schema_table_visit@@Base>:
   2bb00:	ldr	r3, [r0, #12]
   2bb04:	push	{r4, r5, r6, r7, r8, lr}
   2bb08:	cmp	r3, #0
   2bb0c:	ldr	r5, [r0]
   2bb10:	popeq	{r4, r5, r6, r7, r8, pc}
   2bb14:	mov	r7, r2
   2bb18:	mov	r6, r1
   2bb1c:	mov	r8, r0
   2bb20:	sub	r5, r5, #4
   2bb24:	mov	r4, #0
   2bb28:	b	2bb34 <fb_schema_table_visit@@Base+0x34>
   2bb2c:	cmp	r4, r3
   2bb30:	bcs	2bb5c <fb_schema_table_visit@@Base+0x5c>
   2bb34:	ldr	r1, [r5, #4]!
   2bb38:	add	r4, r4, #1
   2bb3c:	cmp	r1, #0
   2bb40:	cmpne	r1, #2
   2bb44:	beq	2bb2c <fb_schema_table_visit@@Base+0x2c>
   2bb48:	mov	r0, r7
   2bb4c:	blx	r6
   2bb50:	ldr	r3, [r8, #12]
   2bb54:	cmp	r4, r3
   2bb58:	bcc	2bb34 <fb_schema_table_visit@@Base+0x34>
   2bb5c:	pop	{r4, r5, r6, r7, r8, pc}

0002bb60 <__flatcc_fb_copy_path_n@@Base>:
   2bb60:	push	{r4, r5, r6, lr}
   2bb64:	mov	r2, r1
   2bb68:	mov	r4, r1
   2bb6c:	mov	r1, #0
   2bb70:	mov	r6, r0
   2bb74:	bl	140d0 <memchr@plt>
   2bb78:	cmp	r0, #0
   2bb7c:	subne	r4, r0, r6
   2bb80:	add	r0, r4, #1
   2bb84:	bl	14040 <malloc@plt>
   2bb88:	subs	r5, r0, #0
   2bb8c:	beq	2bba4 <__flatcc_fb_copy_path_n@@Base+0x44>
   2bb90:	mov	r1, r6
   2bb94:	mov	r2, r4
   2bb98:	bl	13fe0 <memcpy@plt>
   2bb9c:	mov	r3, #0
   2bba0:	strb	r3, [r5, r4]
   2bba4:	mov	r0, r5
   2bba8:	pop	{r4, r5, r6, pc}

0002bbac <__flatcc_fb_copy_path@@Base>:
   2bbac:	push	{r4, r5, r6, lr}
   2bbb0:	mov	r6, r0
   2bbb4:	bl	1407c <strlen@plt>
   2bbb8:	mov	r4, r0
   2bbbc:	add	r0, r0, #1
   2bbc0:	bl	14040 <malloc@plt>
   2bbc4:	subs	r5, r0, #0
   2bbc8:	beq	2bbe0 <__flatcc_fb_copy_path@@Base+0x34>
   2bbcc:	mov	r1, r6
   2bbd0:	mov	r2, r4
   2bbd4:	bl	13fe0 <memcpy@plt>
   2bbd8:	mov	r3, #0
   2bbdc:	strb	r3, [r5, r4]
   2bbe0:	mov	r0, r5
   2bbe4:	pop	{r4, r5, r6, pc}

0002bbe8 <__flatcc_fb_chomp@@Base>:
   2bbe8:	push	{r4, r5, r6, r7, r8, lr}
   2bbec:	subs	r5, r2, #0
   2bbf0:	mov	r4, r1
   2bbf4:	beq	2bc28 <__flatcc_fb_chomp@@Base+0x40>
   2bbf8:	mov	r7, r0
   2bbfc:	mov	r0, r5
   2bc00:	bl	1407c <strlen@plt>
   2bc04:	cmp	r0, r4
   2bc08:	mov	r2, r0
   2bc0c:	bcs	2bc28 <__flatcc_fb_chomp@@Base+0x40>
   2bc10:	sub	r6, r4, r0
   2bc14:	mov	r1, r5
   2bc18:	add	r0, r7, r6
   2bc1c:	bl	14130 <strncmp@plt>
   2bc20:	cmp	r0, #0
   2bc24:	moveq	r4, r6
   2bc28:	mov	r0, r4
   2bc2c:	pop	{r4, r5, r6, r7, r8, pc}

0002bc30 <__flatcc_fb_create_join_path_n@@Base>:
   2bc30:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2bc34:	mov	r9, r0
   2bc38:	ldr	r8, [sp, #32]
   2bc3c:	mov	r4, r1
   2bc40:	cmp	r8, #0
   2bc44:	mov	sl, r2
   2bc48:	mov	r7, r3
   2bc4c:	moveq	r5, r8
   2bc50:	beq	2bc60 <__flatcc_fb_create_join_path_n@@Base+0x30>
   2bc54:	mov	r0, r8
   2bc58:	bl	1407c <strlen@plt>
   2bc5c:	mov	r5, r0
   2bc60:	cmp	r9, #0
   2bc64:	beq	2bd28 <__flatcc_fb_create_join_path_n@@Base+0xf8>
   2bc68:	cmp	r7, #0
   2bc6c:	beq	2bc9c <__flatcc_fb_create_join_path_n@@Base+0x6c>
   2bc70:	ldrb	r3, [sl]
   2bc74:	cmp	r3, #92	; 0x5c
   2bc78:	cmpne	r3, #47	; 0x2f
   2bc7c:	moveq	r3, #1
   2bc80:	movne	r3, #0
   2bc84:	beq	2bd28 <__flatcc_fb_create_join_path_n@@Base+0xf8>
   2bc88:	cmp	r7, #1
   2bc8c:	bls	2bc9c <__flatcc_fb_create_join_path_n@@Base+0x6c>
   2bc90:	ldrb	r2, [sl, #1]
   2bc94:	cmp	r2, #58	; 0x3a
   2bc98:	beq	2bd6c <__flatcc_fb_create_join_path_n@@Base+0x13c>
   2bc9c:	ldr	r3, [sp, #36]	; 0x24
   2bca0:	cmp	r3, #0
   2bca4:	cmpne	r4, #0
   2bca8:	beq	2bcc0 <__flatcc_fb_create_join_path_n@@Base+0x90>
   2bcac:	add	r3, r9, r4
   2bcb0:	ldrb	r3, [r3, #-1]
   2bcb4:	cmp	r3, #92	; 0x5c
   2bcb8:	cmpne	r3, #47	; 0x2f
   2bcbc:	bne	2bd30 <__flatcc_fb_create_join_path_n@@Base+0x100>
   2bcc0:	add	r0, r7, #1
   2bcc4:	add	r0, r0, r5
   2bcc8:	add	r0, r0, r4
   2bccc:	bl	14040 <malloc@plt>
   2bcd0:	subs	r6, r0, #0
   2bcd4:	beq	2bd1c <__flatcc_fb_create_join_path_n@@Base+0xec>
   2bcd8:	mov	r1, r9
   2bcdc:	mov	r2, r4
   2bce0:	bl	13fe0 <memcpy@plt>
   2bce4:	mov	r1, sl
   2bce8:	mov	r2, r7
   2bcec:	add	r0, r6, r4
   2bcf0:	add	r7, r4, r7
   2bcf4:	bl	13fe0 <memcpy@plt>
   2bcf8:	mov	r2, r5
   2bcfc:	mov	r1, r8
   2bd00:	add	r0, r6, r7
   2bd04:	add	r5, r6, r5
   2bd08:	bl	13fe0 <memcpy@plt>
   2bd0c:	mov	r3, #0
   2bd10:	strb	r3, [r5, r7]
   2bd14:	mov	r0, r6
   2bd18:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2bd1c:	mov	r6, #0
   2bd20:	mov	r0, r6
   2bd24:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2bd28:	mov	r4, #0
   2bd2c:	b	2bcc0 <__flatcc_fb_create_join_path_n@@Base+0x90>
   2bd30:	ldr	r3, [sp, #36]	; 0x24
   2bd34:	add	r0, r3, r4
   2bd38:	add	r0, r0, #1
   2bd3c:	add	r0, r0, r7
   2bd40:	add	r0, r0, r5
   2bd44:	bl	14040 <malloc@plt>
   2bd48:	subs	r6, r0, #0
   2bd4c:	beq	2bd1c <__flatcc_fb_create_join_path_n@@Base+0xec>
   2bd50:	mov	r2, r4
   2bd54:	mov	r1, r9
   2bd58:	bl	13fe0 <memcpy@plt>
   2bd5c:	mov	r3, #47	; 0x2f
   2bd60:	strb	r3, [r6, r4]
   2bd64:	add	r4, r4, #1
   2bd68:	b	2bce4 <__flatcc_fb_create_join_path_n@@Base+0xb4>
   2bd6c:	mov	r4, r3
   2bd70:	b	2bcc0 <__flatcc_fb_create_join_path_n@@Base+0x90>

0002bd74 <__flatcc_fb_create_join_path@@Base>:
   2bd74:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2bd78:	subs	sl, r0, #0
   2bd7c:	mov	r7, r1
   2bd80:	mov	r9, r2
   2bd84:	mov	r6, r3
   2bd88:	moveq	r4, sl
   2bd8c:	beq	2bd98 <__flatcc_fb_create_join_path@@Base+0x24>
   2bd90:	bl	1407c <strlen@plt>
   2bd94:	mov	r4, r0
   2bd98:	cmp	r7, #0
   2bd9c:	beq	2bed0 <__flatcc_fb_create_join_path@@Base+0x15c>
   2bda0:	mov	r0, r7
   2bda4:	bl	1407c <strlen@plt>
   2bda8:	mov	r8, r0
   2bdac:	cmp	r9, #0
   2bdb0:	moveq	r5, r9
   2bdb4:	beq	2bdc4 <__flatcc_fb_create_join_path@@Base+0x50>
   2bdb8:	mov	r0, r9
   2bdbc:	bl	1407c <strlen@plt>
   2bdc0:	mov	r5, r0
   2bdc4:	cmp	sl, #0
   2bdc8:	beq	2be88 <__flatcc_fb_create_join_path@@Base+0x114>
   2bdcc:	cmp	r8, #0
   2bdd0:	beq	2be00 <__flatcc_fb_create_join_path@@Base+0x8c>
   2bdd4:	ldrb	r3, [r7]
   2bdd8:	cmp	r3, #92	; 0x5c
   2bddc:	cmpne	r3, #47	; 0x2f
   2bde0:	moveq	r3, #1
   2bde4:	movne	r3, #0
   2bde8:	beq	2be88 <__flatcc_fb_create_join_path@@Base+0x114>
   2bdec:	cmp	r8, #1
   2bdf0:	bls	2be00 <__flatcc_fb_create_join_path@@Base+0x8c>
   2bdf4:	ldrb	r2, [r7, #1]
   2bdf8:	cmp	r2, #58	; 0x3a
   2bdfc:	beq	2bec8 <__flatcc_fb_create_join_path@@Base+0x154>
   2be00:	cmp	r6, #0
   2be04:	cmpne	r4, #0
   2be08:	beq	2be20 <__flatcc_fb_create_join_path@@Base+0xac>
   2be0c:	add	r3, sl, r4
   2be10:	ldrb	r3, [r3, #-1]
   2be14:	cmp	r3, #92	; 0x5c
   2be18:	cmpne	r3, #47	; 0x2f
   2be1c:	bne	2be90 <__flatcc_fb_create_join_path@@Base+0x11c>
   2be20:	add	r0, r8, #1
   2be24:	add	r0, r0, r5
   2be28:	add	r0, r0, r4
   2be2c:	bl	14040 <malloc@plt>
   2be30:	subs	r6, r0, #0
   2be34:	beq	2be7c <__flatcc_fb_create_join_path@@Base+0x108>
   2be38:	mov	r1, sl
   2be3c:	mov	r2, r4
   2be40:	bl	13fe0 <memcpy@plt>
   2be44:	mov	r1, r7
   2be48:	mov	r2, r8
   2be4c:	add	r7, r8, r4
   2be50:	add	r0, r6, r4
   2be54:	bl	13fe0 <memcpy@plt>
   2be58:	mov	r2, r5
   2be5c:	mov	r1, r9
   2be60:	add	r0, r6, r7
   2be64:	add	r5, r6, r5
   2be68:	bl	13fe0 <memcpy@plt>
   2be6c:	mov	r3, #0
   2be70:	strb	r3, [r5, r7]
   2be74:	mov	r0, r6
   2be78:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2be7c:	mov	r6, #0
   2be80:	mov	r0, r6
   2be84:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2be88:	mov	r4, #0
   2be8c:	b	2be20 <__flatcc_fb_create_join_path@@Base+0xac>
   2be90:	add	r0, r6, #1
   2be94:	add	r0, r0, r4
   2be98:	add	r0, r0, r8
   2be9c:	add	r0, r0, r5
   2bea0:	bl	14040 <malloc@plt>
   2bea4:	subs	r6, r0, #0
   2bea8:	beq	2be7c <__flatcc_fb_create_join_path@@Base+0x108>
   2beac:	mov	r2, r4
   2beb0:	mov	r1, sl
   2beb4:	bl	13fe0 <memcpy@plt>
   2beb8:	mov	r3, #47	; 0x2f
   2bebc:	strb	r3, [r6, r4]
   2bec0:	add	r4, r4, #1
   2bec4:	b	2be44 <__flatcc_fb_create_join_path@@Base+0xd0>
   2bec8:	mov	r4, r3
   2becc:	b	2be20 <__flatcc_fb_create_join_path@@Base+0xac>
   2bed0:	mov	r8, r7
   2bed4:	b	2bdac <__flatcc_fb_create_join_path@@Base+0x38>

0002bed8 <__flatcc_fb_create_path_ext_n@@Base>:
   2bed8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2bedc:	subs	r7, r2, #0
   2bee0:	mov	r9, r0
   2bee4:	mov	r5, r1
   2bee8:	moveq	r8, r7
   2beec:	beq	2befc <__flatcc_fb_create_path_ext_n@@Base+0x24>
   2bef0:	mov	r0, r7
   2bef4:	bl	1407c <strlen@plt>
   2bef8:	mov	r8, r0
   2befc:	add	r6, r5, r8
   2bf00:	add	r0, r6, #1
   2bf04:	bl	14040 <malloc@plt>
   2bf08:	subs	r4, r0, #0
   2bf0c:	beq	2bf34 <__flatcc_fb_create_path_ext_n@@Base+0x5c>
   2bf10:	mov	r1, r9
   2bf14:	mov	r2, r5
   2bf18:	bl	13fe0 <memcpy@plt>
   2bf1c:	mov	r2, r8
   2bf20:	mov	r1, r7
   2bf24:	add	r0, r4, r5
   2bf28:	bl	13fe0 <memcpy@plt>
   2bf2c:	mov	r3, #0
   2bf30:	strb	r3, [r4, r6]
   2bf34:	mov	r0, r4
   2bf38:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

0002bf3c <__flatcc_fb_create_path_ext@@Base>:
   2bf3c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2bf40:	subs	r9, r0, #0
   2bf44:	mov	r4, r1
   2bf48:	beq	2bfac <__flatcc_fb_create_path_ext@@Base+0x70>
   2bf4c:	bl	1407c <strlen@plt>
   2bf50:	mov	r6, r0
   2bf54:	cmp	r4, #0
   2bf58:	moveq	r8, r4
   2bf5c:	beq	2bf6c <__flatcc_fb_create_path_ext@@Base+0x30>
   2bf60:	mov	r0, r4
   2bf64:	bl	1407c <strlen@plt>
   2bf68:	mov	r8, r0
   2bf6c:	add	r7, r6, r8
   2bf70:	add	r0, r7, #1
   2bf74:	bl	14040 <malloc@plt>
   2bf78:	subs	r5, r0, #0
   2bf7c:	beq	2bfa4 <__flatcc_fb_create_path_ext@@Base+0x68>
   2bf80:	mov	r1, r9
   2bf84:	mov	r2, r6
   2bf88:	bl	13fe0 <memcpy@plt>
   2bf8c:	mov	r2, r8
   2bf90:	mov	r1, r4
   2bf94:	add	r0, r5, r6
   2bf98:	bl	13fe0 <memcpy@plt>
   2bf9c:	mov	r3, #0
   2bfa0:	strb	r3, [r5, r7]
   2bfa4:	mov	r0, r5
   2bfa8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2bfac:	mov	r6, r9
   2bfb0:	b	2bf54 <__flatcc_fb_create_path_ext@@Base+0x18>

0002bfb4 <__flatcc_fb_create_make_path_n@@Base>:
   2bfb4:	cmp	r1, #1
   2bfb8:	push	{r4, r5, r6, r7, r8, lr}
   2bfbc:	mov	r5, r1
   2bfc0:	mov	r4, r0
   2bfc4:	beq	2c0ec <__flatcc_fb_create_make_path_n@@Base+0x138>
   2bfc8:	bls	2c0fc <__flatcc_fb_create_make_path_n@@Base+0x148>
   2bfcc:	sub	r6, r1, #1
   2bfd0:	mov	r2, r0
   2bfd4:	mov	r3, #1
   2bfd8:	b	2bff0 <__flatcc_fb_create_make_path_n@@Base+0x3c>
   2bfdc:	cmp	r1, #32
   2bfe0:	addeq	r5, r5, #1
   2bfe4:	cmp	ip, r6
   2bfe8:	add	r3, r3, #1
   2bfec:	bcs	2c014 <__flatcc_fb_create_make_path_n@@Base+0x60>
   2bff0:	ldrb	r1, [r2], #1
   2bff4:	mov	ip, r3
   2bff8:	cmp	r1, #92	; 0x5c
   2bffc:	ldrb	r0, [r2]
   2c000:	bne	2bfdc <__flatcc_fb_create_make_path_n@@Base+0x28>
   2c004:	cmp	r0, #32
   2c008:	mov	ip, r3
   2c00c:	addeq	r5, r5, #1
   2c010:	b	2bfdc <__flatcc_fb_create_make_path_n@@Base+0x28>
   2c014:	add	r5, r5, #1
   2c018:	cmp	r0, #32
   2c01c:	movne	r0, r5
   2c020:	addeq	r0, r5, #1
   2c024:	bl	14040 <malloc@plt>
   2c028:	subs	r7, r0, #0
   2c02c:	beq	2c0bc <__flatcc_fb_create_make_path_n@@Base+0x108>
   2c030:	mov	r0, r4
   2c034:	mov	r2, #1
   2c038:	mov	r1, #0
   2c03c:	mov	r5, #92	; 0x5c
   2c040:	b	2c070 <__flatcc_fb_create_make_path_n@@Base+0xbc>
   2c044:	cmp	r3, #32
   2c048:	strbeq	r5, [r7, r1]
   2c04c:	ldrbne	r4, [r0]
   2c050:	ldrbeq	r4, [r0]
   2c054:	addeq	ip, r1, #1
   2c058:	moveq	lr, r2
   2c05c:	cmp	r6, lr
   2c060:	strb	r3, [r7, ip]
   2c064:	add	r2, r2, #1
   2c068:	add	r1, ip, #1
   2c06c:	bls	2c0c4 <__flatcc_fb_create_make_path_n@@Base+0x110>
   2c070:	ldrb	r3, [r0], #1
   2c074:	mov	lr, r2
   2c078:	mov	ip, r1
   2c07c:	cmp	r3, #92	; 0x5c
   2c080:	bne	2c044 <__flatcc_fb_create_make_path_n@@Base+0x90>
   2c084:	ldrb	r4, [r0]
   2c088:	cmp	r4, #32
   2c08c:	strbeq	r3, [r7, r1]
   2c090:	addeq	ip, r1, #1
   2c094:	b	2c05c <__flatcc_fb_create_make_path_n@@Base+0xa8>
   2c098:	mov	r0, #3
   2c09c:	bl	14040 <malloc@plt>
   2c0a0:	subs	r7, r0, #0
   2c0a4:	beq	2c0bc <__flatcc_fb_create_make_path_n@@Base+0x108>
   2c0a8:	mov	r2, #92	; 0x5c
   2c0ac:	mov	r3, #0
   2c0b0:	strb	r6, [r7, #1]
   2c0b4:	strb	r2, [r7]
   2c0b8:	strb	r3, [r7, #2]
   2c0bc:	mov	r0, r7
   2c0c0:	pop	{r4, r5, r6, r7, r8, pc}
   2c0c4:	cmp	r4, #32
   2c0c8:	moveq	r3, #92	; 0x5c
   2c0cc:	strbeq	r3, [r7, r1]
   2c0d0:	mov	r3, r7
   2c0d4:	addeq	r1, ip, #2
   2c0d8:	mov	r2, #0
   2c0dc:	strb	r4, [r3, r1]!
   2c0e0:	mov	r0, r7
   2c0e4:	strb	r2, [r3, #1]
   2c0e8:	pop	{r4, r5, r6, r7, r8, pc}
   2c0ec:	ldrb	r6, [r0]
   2c0f0:	cmp	r6, #92	; 0x5c
   2c0f4:	cmpne	r6, #32
   2c0f8:	beq	2c098 <__flatcc_fb_create_make_path_n@@Base+0xe4>
   2c0fc:	mov	r2, r5
   2c100:	mov	r1, #0
   2c104:	mov	r0, r4
   2c108:	bl	140d0 <memchr@plt>
   2c10c:	cmp	r0, #0
   2c110:	subne	r5, r0, r4
   2c114:	add	r0, r5, #1
   2c118:	bl	14040 <malloc@plt>
   2c11c:	subs	r7, r0, #0
   2c120:	beq	2c0bc <__flatcc_fb_create_make_path_n@@Base+0x108>
   2c124:	mov	r1, r4
   2c128:	mov	r2, r5
   2c12c:	bl	13fe0 <memcpy@plt>
   2c130:	mov	r3, #0
   2c134:	strb	r3, [r7, r5]
   2c138:	b	2c0bc <__flatcc_fb_create_make_path_n@@Base+0x108>

0002c13c <__flatcc_fb_create_make_path@@Base>:
   2c13c:	push	{r4, lr}
   2c140:	mov	r4, r0
   2c144:	bl	1407c <strlen@plt>
   2c148:	mov	r1, r0
   2c14c:	mov	r0, r4
   2c150:	pop	{r4, lr}
   2c154:	b	2bfb4 <__flatcc_fb_create_make_path_n@@Base>

0002c158 <__flatcc_fb_find_basename@@Base>:
   2c158:	add	r1, r0, r1
   2c15c:	cmp	r0, r1
   2c160:	beq	2c1a4 <__flatcc_fb_find_basename@@Base+0x4c>
   2c164:	ldrb	r2, [r1, #-1]
   2c168:	sub	r3, r1, #1
   2c16c:	cmp	r2, #47	; 0x2f
   2c170:	cmpne	r2, #92	; 0x5c
   2c174:	bne	2c194 <__flatcc_fb_find_basename@@Base+0x3c>
   2c178:	b	2c1ac <__flatcc_fb_find_basename@@Base+0x54>
   2c17c:	ldrb	r2, [r3, #-1]
   2c180:	sub	r1, r3, #1
   2c184:	cmp	r2, #92	; 0x5c
   2c188:	cmpne	r2, #47	; 0x2f
   2c18c:	beq	2c19c <__flatcc_fb_find_basename@@Base+0x44>
   2c190:	mov	r3, r1
   2c194:	cmp	r0, r3
   2c198:	bne	2c17c <__flatcc_fb_find_basename@@Base+0x24>
   2c19c:	sub	r0, r3, r0
   2c1a0:	bx	lr
   2c1a4:	mov	r3, r0
   2c1a8:	b	2c19c <__flatcc_fb_find_basename@@Base+0x44>
   2c1ac:	mov	r3, r1
   2c1b0:	b	2c19c <__flatcc_fb_find_basename@@Base+0x44>

0002c1b4 <__flatcc_fb_create_basename@@Base>:
   2c1b4:	add	r3, r0, r1
   2c1b8:	cmp	r0, r3
   2c1bc:	push	{r4, r5, r6, r7, r8, lr}
   2c1c0:	mov	r6, r2
   2c1c4:	beq	2c268 <__flatcc_fb_create_basename@@Base+0xb4>
   2c1c8:	ldrb	r2, [r3, #-1]
   2c1cc:	sub	r4, r3, #1
   2c1d0:	cmp	r2, #92	; 0x5c
   2c1d4:	cmpne	r2, #47	; 0x2f
   2c1d8:	bne	2c1f8 <__flatcc_fb_create_basename@@Base+0x44>
   2c1dc:	b	2c270 <__flatcc_fb_create_basename@@Base+0xbc>
   2c1e0:	ldrb	r3, [r4, #-1]
   2c1e4:	sub	ip, r4, #1
   2c1e8:	cmp	r3, #92	; 0x5c
   2c1ec:	cmpne	r3, #47	; 0x2f
   2c1f0:	beq	2c200 <__flatcc_fb_create_basename@@Base+0x4c>
   2c1f4:	mov	r4, ip
   2c1f8:	cmp	r0, r4
   2c1fc:	bne	2c1e0 <__flatcc_fb_create_basename@@Base+0x2c>
   2c200:	sub	r0, r4, r0
   2c204:	cmp	r6, #0
   2c208:	sub	r5, r1, r0
   2c20c:	beq	2c23c <__flatcc_fb_create_basename@@Base+0x88>
   2c210:	mov	r0, r6
   2c214:	bl	1407c <strlen@plt>
   2c218:	cmp	r5, r0
   2c21c:	bls	2c23c <__flatcc_fb_create_basename@@Base+0x88>
   2c220:	sub	r7, r5, r0
   2c224:	mov	r2, r0
   2c228:	mov	r1, r6
   2c22c:	add	r0, r4, r7
   2c230:	bl	14130 <strncmp@plt>
   2c234:	cmp	r0, #0
   2c238:	moveq	r5, r7
   2c23c:	add	r0, r5, #1
   2c240:	bl	14040 <malloc@plt>
   2c244:	subs	r6, r0, #0
   2c248:	beq	2c260 <__flatcc_fb_create_basename@@Base+0xac>
   2c24c:	mov	r1, r4
   2c250:	mov	r2, r5
   2c254:	bl	13fe0 <memcpy@plt>
   2c258:	mov	r3, #0
   2c25c:	strb	r3, [r6, r5]
   2c260:	mov	r0, r6
   2c264:	pop	{r4, r5, r6, r7, r8, pc}
   2c268:	mov	r4, r0
   2c26c:	b	2c200 <__flatcc_fb_create_basename@@Base+0x4c>
   2c270:	mov	r4, r3
   2c274:	b	2c200 <__flatcc_fb_create_basename@@Base+0x4c>

0002c278 <__flatcc_fb_read_file@@Base>:
   2c278:	push	{r4, r5, r6, r7, r8, r9, lr}
   2c27c:	subs	r8, r2, #0
   2c280:	sub	sp, sp, #12
   2c284:	mov	r4, r1
   2c288:	ldr	r1, [pc, #216]	; 2c368 <__flatcc_fb_read_file@@Base+0xf0>
   2c28c:	addeq	r8, sp, #4
   2c290:	bl	13fc8 <fopen@plt>
   2c294:	subs	r6, r0, #0
   2c298:	beq	2c360 <__flatcc_fb_read_file@@Base+0xe8>
   2c29c:	mov	r2, #2
   2c2a0:	mov	r1, #0
   2c2a4:	bl	14124 <fseek@plt>
   2c2a8:	mov	r0, r6
   2c2ac:	bl	13fec <ftell@plt>
   2c2b0:	cmp	r4, #0
   2c2b4:	cmpne	r0, r4
   2c2b8:	mov	r5, r0
   2c2bc:	movhi	r4, #1
   2c2c0:	movls	r4, #0
   2c2c4:	str	r0, [r8]
   2c2c8:	bhi	2c354 <__flatcc_fb_read_file@@Base+0xdc>
   2c2cc:	mov	r0, r6
   2c2d0:	bl	14004 <rewind@plt>
   2c2d4:	cmp	r5, #0
   2c2d8:	movne	r0, r5
   2c2dc:	moveq	r0, #1
   2c2e0:	bl	14040 <malloc@plt>
   2c2e4:	subs	r7, r0, #0
   2c2e8:	beq	2c354 <__flatcc_fb_read_file@@Base+0xdc>
   2c2ec:	mov	r9, #1
   2c2f0:	b	2c2f8 <__flatcc_fb_read_file@@Base+0x80>
   2c2f4:	add	r4, r4, r0
   2c2f8:	mov	r3, r6
   2c2fc:	sub	r2, r5, r4
   2c300:	mov	r1, r9
   2c304:	add	r0, r7, r4
   2c308:	bl	14028 <fread@plt>
   2c30c:	cmp	r0, #0
   2c310:	bne	2c2f4 <__flatcc_fb_read_file@@Base+0x7c>
   2c314:	cmp	r4, r5
   2c318:	mov	r0, r6
   2c31c:	bne	2c334 <__flatcc_fb_read_file@@Base+0xbc>
   2c320:	bl	140dc <fclose@plt>
   2c324:	mov	r0, r7
   2c328:	str	r4, [r8]
   2c32c:	add	sp, sp, #12
   2c330:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2c334:	bl	140dc <fclose@plt>
   2c338:	mov	r0, r7
   2c33c:	bl	13fd4 <free@plt>
   2c340:	mov	r7, #0
   2c344:	mov	r0, r7
   2c348:	str	r5, [r8]
   2c34c:	add	sp, sp, #12
   2c350:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2c354:	mov	r0, r6
   2c358:	bl	140dc <fclose@plt>
   2c35c:	b	2c340 <__flatcc_fb_read_file@@Base+0xc8>
   2c360:	mov	r5, r6
   2c364:	b	2c340 <__flatcc_fb_read_file@@Base+0xc8>
   2c368:	andeq	sl, r5, r0, lsr #30

0002c36c <__flatcc_fb_default_error_out@@Base>:
   2c36c:	ldr	r3, [pc, #12]	; 2c380 <__flatcc_fb_default_error_out@@Base+0x14>
   2c370:	mov	r0, r1
   2c374:	mov	r1, #1
   2c378:	ldr	r3, [r3]
   2c37c:	b	1401c <fwrite@plt>
   2c380:	andeq	pc, r6, r8, lsr #1
   2c384:	add	r0, r1, #4
   2c388:	b	29950 <fb_symbol_table_clear@@Base>
   2c38c:	ldr	ip, [r0, #28]
   2c390:	push	{r4, r5, r6, r7, r8, lr}
   2c394:	mov	r4, r0
   2c398:	add	r5, ip, ip, lsl #2
   2c39c:	ldr	r0, [r0, #20]
   2c3a0:	mov	r6, r1
   2c3a4:	lsl	r5, r5, #2
   2c3a8:	ldr	r1, [r4, #40]	; 0x28
   2c3ac:	mov	r7, r2
   2c3b0:	add	r2, r0, r5
   2c3b4:	cmp	r2, r1
   2c3b8:	mov	r8, r3
   2c3bc:	str	r2, [r4, #24]
   2c3c0:	beq	2c3f8 <__flatcc_fb_default_error_out@@Base+0x8c>
   2c3c4:	ldr	r0, [r4, #60]	; 0x3c
   2c3c8:	ldr	r2, [r4, #64]	; 0x40
   2c3cc:	sub	r0, r7, r0
   2c3d0:	sub	r8, r8, r7
   2c3d4:	add	r0, r0, #1
   2c3d8:	add	r3, r1, #20
   2c3dc:	str	r8, [r1, #4]
   2c3e0:	str	r6, [r1, #16]
   2c3e4:	str	r7, [r1]
   2c3e8:	str	r0, [r1, #12]
   2c3ec:	str	r2, [r1, #8]
   2c3f0:	str	r3, [r4, #40]	; 0x28
   2c3f4:	pop	{r4, r5, r6, r7, r8, pc}
   2c3f8:	cmp	ip, #0
   2c3fc:	lslne	r3, ip, #1
   2c400:	addne	r1, r3, ip, lsl #3
   2c404:	moveq	r3, #1024	; 0x400
   2c408:	lslne	r1, r1, #2
   2c40c:	moveq	r1, #20480	; 0x5000
   2c410:	str	r3, [r4, #28]
   2c414:	bl	14010 <realloc@plt>
   2c418:	cmp	r0, #0
   2c41c:	str	r0, [r4, #20]
   2c420:	beq	2c43c <__flatcc_fb_default_error_out@@Base+0xd0>
   2c424:	ldr	r3, [r4, #28]
   2c428:	add	r1, r0, r5
   2c42c:	add	r3, r3, r3, lsl #2
   2c430:	add	r0, r0, r3, lsl #2
   2c434:	str	r0, [r4, #24]
   2c438:	b	2c3c4 <__flatcc_fb_default_error_out@@Base+0x58>
   2c43c:	bl	141a8 <__assert_fail@plt+0x60>
   2c440:	ldr	r3, [r0, #40]	; 0x28
   2c444:	push	{r4, r5, r6, r7, r8, lr}
   2c448:	add	r5, r3, #20
   2c44c:	ldr	r8, [r0, #24]
   2c450:	mov	r4, r0
   2c454:	cmp	r8, r5
   2c458:	str	r5, [r0, #40]	; 0x28
   2c45c:	beq	2c500 <__flatcc_fb_default_error_out@@Base+0x194>
   2c460:	ldr	r3, [r3, #36]	; 0x24
   2c464:	cmn	r3, #964	; 0x3c4
   2c468:	bne	2c4f8 <__flatcc_fb_default_error_out@@Base+0x18c>
   2c46c:	ldr	r3, [r0, #52]	; 0x34
   2c470:	ldr	ip, [r0, #44]	; 0x2c
   2c474:	mov	r7, #1
   2c478:	mov	r6, #65536	; 0x10000
   2c47c:	b	2c4b0 <__flatcc_fb_default_error_out@@Base+0x144>
   2c480:	ldr	r1, [r4, #36]	; 0x24
   2c484:	add	r0, r5, #20
   2c488:	cmp	r0, r8
   2c48c:	str	r3, [r4, #52]	; 0x34
   2c490:	stm	r2, {r1, r5}
   2c494:	str	r2, [r4, #36]	; 0x24
   2c498:	str	r0, [r4, #40]	; 0x28
   2c49c:	beq	2c504 <__flatcc_fb_default_error_out@@Base+0x198>
   2c4a0:	ldr	r2, [r0, #16]
   2c4a4:	cmn	r2, #964	; 0x3c4
   2c4a8:	popne	{r4, r5, r6, r7, r8, pc}
   2c4ac:	mov	r5, r0
   2c4b0:	add	r1, r3, #16
   2c4b4:	cmp	r1, ip
   2c4b8:	movls	r2, r3
   2c4bc:	movls	r3, r1
   2c4c0:	bls	2c480 <__flatcc_fb_default_error_out@@Base+0x114>
   2c4c4:	mov	r1, r7
   2c4c8:	mov	r0, r6
   2c4cc:	bl	13fa4 <calloc@plt>
   2c4d0:	cmp	r0, #0
   2c4d4:	beq	2c51c <__flatcc_fb_default_error_out@@Base+0x1b0>
   2c4d8:	ldr	r3, [r4, #48]	; 0x30
   2c4dc:	add	ip, r0, #65536	; 0x10000
   2c4e0:	str	r3, [r0]
   2c4e4:	str	r0, [r4, #48]	; 0x30
   2c4e8:	str	ip, [r4, #44]	; 0x2c
   2c4ec:	add	r2, r0, #16
   2c4f0:	add	r3, r0, #32
   2c4f4:	b	2c480 <__flatcc_fb_default_error_out@@Base+0x114>
   2c4f8:	mov	r0, r5
   2c4fc:	pop	{r4, r5, r6, r7, r8, pc}
   2c500:	mov	r5, r3
   2c504:	str	r5, [r4, #40]	; 0x28
   2c508:	ldr	r3, [pc, #16]	; 2c520 <__flatcc_fb_default_error_out@@Base+0x1b4>
   2c50c:	ldr	r2, [pc, #16]	; 2c524 <__flatcc_fb_default_error_out@@Base+0x1b8>
   2c510:	ldr	r1, [pc, #16]	; 2c528 <__flatcc_fb_default_error_out@@Base+0x1bc>
   2c514:	ldr	r0, [pc, #16]	; 2c52c <__flatcc_fb_default_error_out@@Base+0x1c0>
   2c518:	bl	14148 <__assert_fail@plt>
   2c51c:	bl	141a8 <__assert_fail@plt+0x60>
   2c520:	andeq	sl, r5, r4, lsr #30
   2c524:	andeq	r0, r0, r5, asr r1
   2c528:	andeq	fp, r5, ip, asr #32
   2c52c:	andeq	sp, r4, r4, ror r2
   2c530:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2c534:	mov	r8, r0
   2c538:	sub	sp, sp, #12
   2c53c:	add	r9, r0, r1
   2c540:	mov	sl, r2
   2c544:	cmp	r9, r8
   2c548:	beq	2ee84 <__flatcc_fb_default_error_out@@Base+0x2b18>
   2c54c:	ldrb	r4, [r8]
   2c550:	cmp	r4, #126	; 0x7e
   2c554:	ldrls	pc, [pc, r4, lsl #2]
   2c558:	b	2d15c <__flatcc_fb_default_error_out@@Base+0xdf0>
   2c55c:	andeq	ip, r2, r0, asr #15
   2c560:	andeq	sp, r2, ip, asr r1
   2c564:	andeq	sp, r2, ip, asr r1
   2c568:	andeq	sp, r2, ip, asr r1
   2c56c:	andeq	sp, r2, ip, asr r1
   2c570:	andeq	sp, r2, ip, asr r1
   2c574:	andeq	sp, r2, ip, asr r1
   2c578:	andeq	sp, r2, ip, asr r1
   2c57c:	andeq	sp, r2, ip, asr r1
   2c580:	andeq	ip, r2, r0, lsr #16
   2c584:	andeq	ip, r2, r4, asr #17
   2c588:	andeq	sp, r2, ip, asr r1
   2c58c:	andeq	sp, r2, ip, asr r1
   2c590:	strdeq	ip, [r2], -r4
   2c594:	andeq	sp, r2, ip, asr r1
   2c598:	andeq	sp, r2, ip, asr r1
   2c59c:	andeq	sp, r2, ip, asr r1
   2c5a0:	andeq	sp, r2, ip, asr r1
   2c5a4:	andeq	sp, r2, ip, asr r1
   2c5a8:	andeq	sp, r2, ip, asr r1
   2c5ac:	andeq	sp, r2, ip, asr r1
   2c5b0:	andeq	sp, r2, ip, asr r1
   2c5b4:	andeq	sp, r2, ip, asr r1
   2c5b8:	andeq	sp, r2, ip, asr r1
   2c5bc:	andeq	sp, r2, ip, asr r1
   2c5c0:	andeq	sp, r2, ip, asr r1
   2c5c4:	andeq	sp, r2, ip, asr r1
   2c5c8:	andeq	sp, r2, ip, asr r1
   2c5cc:	andeq	sp, r2, ip, asr r1
   2c5d0:	andeq	sp, r2, ip, asr r1
   2c5d4:	andeq	sp, r2, ip, asr r1
   2c5d8:	andeq	sp, r2, ip, asr r1
   2c5dc:	andeq	ip, r2, r0, lsr #16
   2c5e0:	andeq	ip, r2, r4, lsl r9
   2c5e4:	andeq	ip, r2, r8, lsl #19
   2c5e8:	andeq	sp, r2, ip, asr r1
   2c5ec:	andeq	sp, r2, ip, asr r1
   2c5f0:	andeq	ip, r2, r4, lsl r9
   2c5f4:	andeq	ip, r2, r8, asr lr
   2c5f8:	andeq	sp, r2, ip, asr r1
   2c5fc:	andeq	ip, r2, r0, asr #29
   2c600:	andeq	ip, r2, r0, asr #29
   2c604:	andeq	ip, r2, ip, lsr ip
   2c608:	andeq	ip, r2, r0, asr #25
   2c60c:	andeq	ip, r2, r0, asr #29
   2c610:	andeq	ip, r2, r0, lsr sp
   2c614:	muleq	r2, ip, sp
   2c618:	andeq	ip, r2, r8, lsl #22
   2c61c:	andeq	ip, r2, ip, ror fp
   2c620:	andeq	ip, r2, r4, asr #23
   2c624:	andeq	ip, r2, r4, asr #23
   2c628:	andeq	ip, r2, r4, asr #23
   2c62c:	andeq	ip, r2, r4, asr #23
   2c630:	andeq	ip, r2, r4, asr #23
   2c634:	andeq	ip, r2, r4, asr #23
   2c638:	andeq	ip, r2, r4, asr #23
   2c63c:	andeq	ip, r2, r4, asr #23
   2c640:	andeq	ip, r2, r4, asr #23
   2c644:	andeq	ip, r2, ip, asr #23
   2c648:	andeq	ip, r2, r0, asr #29
   2c64c:	ldrdeq	ip, [r2], -r8
   2c650:	andeq	ip, r2, r4, asr #30
   2c654:			; <UNDEFINED> instruction: 0x0002cfb0
   2c658:	andeq	ip, r2, r0, asr #29
   2c65c:	andeq	sp, r2, ip, asr r1
   2c660:	andeq	sp, r2, r0, lsr #32
   2c664:	andeq	sp, r2, r0, lsr #32
   2c668:	andeq	sp, r2, r0, lsr #32
   2c66c:	andeq	sp, r2, r0, lsr #32
   2c670:	andeq	sp, r2, r0, lsr #32
   2c674:	andeq	sp, r2, r0, lsr #32
   2c678:	andeq	sp, r2, r0, lsr #32
   2c67c:	andeq	sp, r2, r0, lsr #32
   2c680:	andeq	sp, r2, r0, lsr #32
   2c684:	andeq	sp, r2, r0, lsr #32
   2c688:	andeq	sp, r2, r0, lsr #32
   2c68c:	andeq	sp, r2, r0, lsr #32
   2c690:	andeq	sp, r2, r0, lsr #32
   2c694:	andeq	sp, r2, r0, lsr #32
   2c698:	andeq	sp, r2, r0, lsr #32
   2c69c:	andeq	sp, r2, r0, lsr #32
   2c6a0:	andeq	sp, r2, r0, lsr #32
   2c6a4:	andeq	sp, r2, r0, lsr #32
   2c6a8:	andeq	sp, r2, r0, lsr #32
   2c6ac:	andeq	sp, r2, r0, lsr #32
   2c6b0:	andeq	sp, r2, r0, lsr #32
   2c6b4:	andeq	sp, r2, r0, lsr #32
   2c6b8:	andeq	sp, r2, r0, lsr #32
   2c6bc:	andeq	sp, r2, r0, lsr #32
   2c6c0:	andeq	sp, r2, r0, lsr #32
   2c6c4:	andeq	sp, r2, r0, lsr #32
   2c6c8:	andeq	ip, r2, r0, asr #29
   2c6cc:	andeq	ip, r2, r0, asr #29
   2c6d0:	andeq	ip, r2, r0, asr #29
   2c6d4:	andeq	ip, r2, r4, lsl r9
   2c6d8:	andeq	sp, r2, r0, lsr #32
   2c6dc:	andeq	sp, r2, ip, asr r1
   2c6e0:	andeq	sp, r2, r0, lsr #32
   2c6e4:	andeq	sp, r2, r0, lsr #32
   2c6e8:	andeq	sp, r2, r0, lsr #32
   2c6ec:	andeq	sp, r2, r0, lsr #32
   2c6f0:	andeq	sp, r2, r0, lsr #32
   2c6f4:	andeq	sp, r2, r0, lsr #32
   2c6f8:	andeq	sp, r2, r0, lsr #32
   2c6fc:	andeq	sp, r2, r0, lsr #32
   2c700:	andeq	sp, r2, r0, lsr #32
   2c704:	andeq	sp, r2, r0, lsr #32
   2c708:	andeq	sp, r2, r0, lsr #32
   2c70c:	andeq	sp, r2, r0, lsr #32
   2c710:	andeq	sp, r2, r0, lsr #32
   2c714:	andeq	sp, r2, r0, lsr #32
   2c718:	andeq	sp, r2, r0, lsr #32
   2c71c:	andeq	sp, r2, r0, lsr #32
   2c720:	andeq	sp, r2, r0, lsr #32
   2c724:	andeq	sp, r2, r0, lsr #32
   2c728:	andeq	sp, r2, r0, lsr #32
   2c72c:	andeq	sp, r2, r0, lsr #32
   2c730:	andeq	sp, r2, r0, lsr #32
   2c734:	andeq	sp, r2, r0, lsr #32
   2c738:	andeq	sp, r2, r0, lsr #32
   2c73c:	andeq	sp, r2, r0, lsr #32
   2c740:	andeq	sp, r2, r0, lsr #32
   2c744:	andeq	sp, r2, r0, lsr #32
   2c748:	andeq	ip, r2, r0, asr #29
   2c74c:	andeq	ip, r2, r8, asr r7
   2c750:	andeq	ip, r2, r0, asr #29
   2c754:	andeq	ip, r2, r4, lsl r9
   2c758:	add	r4, r8, #1
   2c75c:	cmp	r9, r4
   2c760:	beq	2ee64 <__flatcc_fb_default_error_out@@Base+0x2af8>
   2c764:	ldrb	r3, [r8, #1]
   2c768:	ldr	r2, [sl, #28]
   2c76c:	ldr	r0, [sl, #20]
   2c770:	cmp	r3, #61	; 0x3d
   2c774:	beq	2df28 <__flatcc_fb_default_error_out@@Base+0x1bbc>
   2c778:	cmp	r3, #124	; 0x7c
   2c77c:	beq	2d7d4 <__flatcc_fb_default_error_out@@Base+0x1468>
   2c780:	add	r5, r2, r2, lsl #2
   2c784:	ldr	r1, [sl, #40]	; 0x28
   2c788:	lsl	r5, r5, #2
   2c78c:	add	r3, r0, r5
   2c790:	cmp	r1, r3
   2c794:	str	r3, [sl, #24]
   2c798:	beq	2e668 <__flatcc_fb_default_error_out@@Base+0x22fc>
   2c79c:	ldr	r3, [sl, #60]	; 0x3c
   2c7a0:	ldr	r0, [sl, #64]	; 0x40
   2c7a4:	sub	r3, r8, r3
   2c7a8:	str	r8, [r1]
   2c7ac:	sub	r8, r4, r8
   2c7b0:	add	r3, r3, #1
   2c7b4:	str	r8, [r1, #4]
   2c7b8:	mov	r2, #124	; 0x7c
   2c7bc:	b	2ce3c <__flatcc_fb_default_error_out@@Base+0xad0>
   2c7c0:	ldr	r3, [sl, #28]
   2c7c4:	ldr	r0, [sl, #20]
   2c7c8:	ldr	r2, [sl, #40]	; 0x28
   2c7cc:	add	r4, r3, r3, lsl #2
   2c7d0:	lsl	r4, r4, #2
   2c7d4:	add	r1, r0, r4
   2c7d8:	cmp	r1, r2
   2c7dc:	str	r1, [sl, #24]
   2c7e0:	beq	2e558 <__flatcc_fb_default_error_out@@Base+0x21ec>
   2c7e4:	ldr	r3, [sl, #60]	; 0x3c
   2c7e8:	ldr	r0, [sl, #64]	; 0x40
   2c7ec:	sub	r3, r8, r3
   2c7f0:	mov	r4, #0
   2c7f4:	add	r3, r3, #1
   2c7f8:	add	r1, r2, #20
   2c7fc:	str	r8, [r2]
   2c800:	str	r3, [r2, #12]
   2c804:	str	r0, [r2, #8]
   2c808:	str	r4, [r2, #16]
   2c80c:	str	r4, [r2, #4]
   2c810:	str	r1, [sl, #40]	; 0x28
   2c814:	mov	r0, r4
   2c818:	add	sp, sp, #12
   2c81c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2c820:	add	r3, r8, #1
   2c824:	b	2c838 <__flatcc_fb_default_error_out@@Base+0x4cc>
   2c828:	ldrb	r4, [r3], #1
   2c82c:	cmp	r4, #9
   2c830:	cmpne	r4, #32
   2c834:	bne	2d58c <__flatcc_fb_default_error_out@@Base+0x1220>
   2c838:	cmp	r9, r3
   2c83c:	mov	r2, r3
   2c840:	bne	2c828 <__flatcc_fb_default_error_out@@Base+0x4bc>
   2c844:	ldr	ip, [sl, #28]
   2c848:	ldr	r0, [sl, #20]
   2c84c:	ldr	r1, [sl, #40]	; 0x28
   2c850:	add	r5, ip, ip, lsl #2
   2c854:	mov	r6, r8
   2c858:	lsl	r5, r5, #2
   2c85c:	add	r2, r0, r5
   2c860:	mov	r8, r9
   2c864:	mov	r4, #0
   2c868:	cmp	r9, r8
   2c86c:	beq	2c87c <__flatcc_fb_default_error_out@@Base+0x510>
   2c870:	ldrb	r3, [r8]
   2c874:	cmp	r3, #0
   2c878:	beq	2d548 <__flatcc_fb_default_error_out@@Base+0x11dc>
   2c87c:	cmp	r2, r1
   2c880:	str	r2, [sl, #24]
   2c884:	beq	2d594 <__flatcc_fb_default_error_out@@Base+0x1228>
   2c888:	ldr	r3, [sl, #60]	; 0x3c
   2c88c:	ldr	ip, [sl, #64]	; 0x40
   2c890:	sub	r3, r8, r3
   2c894:	mov	r2, #0
   2c898:	add	r0, r1, #20
   2c89c:	add	r3, r3, #1
   2c8a0:	str	r8, [r1]
   2c8a4:	str	r3, [r1, #12]
   2c8a8:	str	ip, [r1, #8]
   2c8ac:	str	r2, [r1, #16]
   2c8b0:	str	r2, [r1, #4]
   2c8b4:	str	r0, [sl, #40]	; 0x28
   2c8b8:	mov	r0, r4
   2c8bc:	add	sp, sp, #12
   2c8c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2c8c4:	add	r3, r8, #1
   2c8c8:	cmp	r9, r3
   2c8cc:	beq	2c8dc <__flatcc_fb_default_error_out@@Base+0x570>
   2c8d0:	ldrb	r2, [r8, #1]
   2c8d4:	cmp	r2, #13
   2c8d8:	beq	2c90c <__flatcc_fb_default_error_out@@Base+0x5a0>
   2c8dc:	ldr	r2, [sl, #64]	; 0x40
   2c8e0:	str	r3, [sl, #60]	; 0x3c
   2c8e4:	add	r2, r2, #1
   2c8e8:	mov	r8, r3
   2c8ec:	str	r2, [sl, #64]	; 0x40
   2c8f0:	b	2c544 <__flatcc_fb_default_error_out@@Base+0x1d8>
   2c8f4:	add	r3, r8, #1
   2c8f8:	cmp	r9, r3
   2c8fc:	beq	2c8dc <__flatcc_fb_default_error_out@@Base+0x570>
   2c900:	ldrb	r2, [r8, #1]
   2c904:	cmp	r2, #10
   2c908:	bne	2c8dc <__flatcc_fb_default_error_out@@Base+0x570>
   2c90c:	add	r3, r8, #2
   2c910:	b	2c8dc <__flatcc_fb_default_error_out@@Base+0x570>
   2c914:	add	r5, r8, #1
   2c918:	cmp	r9, r5
   2c91c:	beq	2c92c <__flatcc_fb_default_error_out@@Base+0x5c0>
   2c920:	ldrb	r3, [r8, #1]
   2c924:	cmp	r3, #61	; 0x3d
   2c928:	beq	2e780 <__flatcc_fb_default_error_out@@Base+0x2414>
   2c92c:	ldr	r2, [sl, #28]
   2c930:	ldr	r0, [sl, #20]
   2c934:	ldr	r1, [sl, #40]	; 0x28
   2c938:	add	r6, r2, r2, lsl #2
   2c93c:	lsl	r6, r6, #2
   2c940:	add	r3, r0, r6
   2c944:	cmp	r3, r1
   2c948:	str	r3, [sl, #24]
   2c94c:	beq	2dd1c <__flatcc_fb_default_error_out@@Base+0x19b0>
   2c950:	ldr	r3, [sl, #60]	; 0x3c
   2c954:	str	r4, [r1, #16]
   2c958:	sub	r3, r8, r3
   2c95c:	ldr	r0, [sl, #64]	; 0x40
   2c960:	add	r3, r3, #1
   2c964:	str	r3, [r1, #12]
   2c968:	mov	r2, #1
   2c96c:	add	r3, r1, #20
   2c970:	str	r8, [r1]
   2c974:	str	r0, [r1, #8]
   2c978:	str	r2, [r1, #4]
   2c97c:	mov	r8, r5
   2c980:	str	r3, [sl, #40]	; 0x28
   2c984:	b	2c544 <__flatcc_fb_default_error_out@@Base+0x1d8>
   2c988:	ldr	r3, [sl, #28]
   2c98c:	ldr	r0, [sl, #20]
   2c990:	ldr	lr, [sl, #40]	; 0x28
   2c994:	lsl	ip, r3, #2
   2c998:	add	r5, ip, r3
   2c99c:	mov	fp, r3
   2c9a0:	lsl	r5, r5, #2
   2c9a4:	add	r3, r0, r5
   2c9a8:	cmp	r3, lr
   2c9ac:	add	r4, r8, #1
   2c9b0:	str	r3, [sl, #24]
   2c9b4:	beq	2e4c4 <__flatcc_fb_default_error_out@@Base+0x2158>
   2c9b8:	ldr	r1, [sl, #60]	; 0x3c
   2c9bc:	ldr	r5, [sl, #64]	; 0x40
   2c9c0:	sub	r1, r8, r1
   2c9c4:	str	r5, [lr, #8]
   2c9c8:	mov	r5, r4
   2c9cc:	add	r1, r1, #1
   2c9d0:	mov	r6, #19
   2c9d4:	mov	r2, #1
   2c9d8:	add	r3, lr, #20
   2c9dc:	str	r8, [lr]
   2c9e0:	str	r1, [lr, #12]
   2c9e4:	str	r6, [lr, #16]
   2c9e8:	str	r2, [lr, #4]
   2c9ec:	str	r3, [sl, #40]	; 0x28
   2c9f0:	sub	r4, r4, #1
   2c9f4:	b	2ca18 <__flatcc_fb_default_error_out@@Base+0x6ac>
   2c9f8:	ldrb	r1, [r4, #1]
   2c9fc:	cmp	r1, #92	; 0x5c
   2ca00:	cmpne	r1, #34	; 0x22
   2ca04:	beq	2ca28 <__flatcc_fb_default_error_out@@Base+0x6bc>
   2ca08:	cmp	r1, #127	; 0x7f
   2ca0c:	cmpne	r1, #31
   2ca10:	bls	2ca28 <__flatcc_fb_default_error_out@@Base+0x6bc>
   2ca14:	mov	r4, r8
   2ca18:	add	r8, r4, #1
   2ca1c:	cmp	r9, r8
   2ca20:	bne	2c9f8 <__flatcc_fb_default_error_out@@Base+0x68c>
   2ca24:	mov	r8, r9
   2ca28:	cmp	r5, r8
   2ca2c:	addeq	r7, ip, fp
   2ca30:	lsleq	r7, r7, #2
   2ca34:	addeq	r1, r0, r7
   2ca38:	beq	2ca94 <__flatcc_fb_default_error_out@@Base+0x728>
   2ca3c:	add	r6, ip, fp
   2ca40:	lsl	r6, r6, #2
   2ca44:	add	r1, r0, r6
   2ca48:	cmp	r1, r3
   2ca4c:	str	r1, [sl, #24]
   2ca50:	mov	r7, r6
   2ca54:	beq	2d29c <__flatcc_fb_default_error_out@@Base+0xf30>
   2ca58:	ldr	lr, [sl, #60]	; 0x3c
   2ca5c:	ldr	r6, [sl, #64]	; 0x40
   2ca60:	sub	lr, r5, lr
   2ca64:	add	lr, lr, #1
   2ca68:	str	lr, [sp, #4]
   2ca6c:	mov	lr, #20
   2ca70:	str	lr, [r3, #16]
   2ca74:	ldr	lr, [sp, #4]
   2ca78:	str	r5, [r3]
   2ca7c:	sub	r5, r8, r5
   2ca80:	str	r5, [r3, #4]
   2ca84:	str	lr, [r3, #12]
   2ca88:	str	r6, [r3, #8]
   2ca8c:	add	r3, r3, #20
   2ca90:	str	r3, [sl, #40]	; 0x28
   2ca94:	ldrb	lr, [r8]
   2ca98:	cmp	lr, #34	; 0x22
   2ca9c:	beq	2d4e0 <__flatcc_fb_default_error_out@@Base+0x1174>
   2caa0:	cmp	r9, r8
   2caa4:	cmpne	lr, #0
   2caa8:	beq	2d3d8 <__flatcc_fb_default_error_out@@Base+0x106c>
   2caac:	cmp	lr, #92	; 0x5c
   2cab0:	beq	2d2f4 <__flatcc_fb_default_error_out@@Base+0xf88>
   2cab4:	cmp	lr, #13
   2cab8:	cmpne	lr, #10
   2cabc:	beq	2d3d8 <__flatcc_fb_default_error_out@@Base+0x106c>
   2cac0:	cmp	r3, r1
   2cac4:	str	r1, [sl, #24]
   2cac8:	add	r4, r8, #1
   2cacc:	beq	2d24c <__flatcc_fb_default_error_out@@Base+0xee0>
   2cad0:	ldr	r1, [sl, #60]	; 0x3c
   2cad4:	ldr	lr, [sl, #64]	; 0x40
   2cad8:	sub	r1, r8, r1
   2cadc:	mov	r5, #6
   2cae0:	add	r1, r1, #1
   2cae4:	str	r5, [r3, #16]
   2cae8:	str	r8, [r3]
   2caec:	str	r2, [r3, #4]
   2caf0:	str	r1, [r3, #12]
   2caf4:	str	lr, [r3, #8]
   2caf8:	add	r3, r3, #20
   2cafc:	str	r3, [sl, #40]	; 0x28
   2cb00:	mov	r5, r4
   2cb04:	b	2c9f0 <__flatcc_fb_default_error_out@@Base+0x684>
   2cb08:	add	r4, r8, #1
   2cb0c:	cmp	r9, r4
   2cb10:	beq	2cb30 <__flatcc_fb_default_error_out@@Base+0x7c4>
   2cb14:	ldrb	r3, [r8, #1]
   2cb18:	cmp	r3, #47	; 0x2f
   2cb1c:	beq	2e09c <__flatcc_fb_default_error_out@@Base+0x1d30>
   2cb20:	cmp	r3, #61	; 0x3d
   2cb24:	beq	2e3cc <__flatcc_fb_default_error_out@@Base+0x2060>
   2cb28:	cmp	r3, #42	; 0x2a
   2cb2c:	beq	2d964 <__flatcc_fb_default_error_out@@Base+0x15f8>
   2cb30:	ldr	r2, [sl, #28]
   2cb34:	ldr	r0, [sl, #20]
   2cb38:	ldr	r3, [sl, #40]	; 0x28
   2cb3c:	add	r5, r2, r2, lsl #2
   2cb40:	lsl	r5, r5, #2
   2cb44:	add	r1, r0, r5
   2cb48:	cmp	r1, r3
   2cb4c:	str	r1, [sl, #24]
   2cb50:	beq	2ea5c <__flatcc_fb_default_error_out@@Base+0x26f0>
   2cb54:	ldr	r2, [sl, #60]	; 0x3c
   2cb58:	ldr	ip, [sl, #64]	; 0x40
   2cb5c:	sub	r2, r8, r2
   2cb60:	add	r2, r2, #1
   2cb64:	str	r8, [r3]
   2cb68:	mov	r0, #47	; 0x2f
   2cb6c:	mov	r8, r4
   2cb70:	str	r2, [r3, #12]
   2cb74:	mov	r1, #1
   2cb78:	b	2d404 <__flatcc_fb_default_error_out@@Base+0x1098>
   2cb7c:	add	r3, r8, #1
   2cb80:	cmp	r9, r3
   2cb84:	beq	2cbb4 <__flatcc_fb_default_error_out@@Base+0x848>
   2cb88:	ldrb	r2, [r8, #1]
   2cb8c:	cmp	r2, #88	; 0x58
   2cb90:	beq	2d644 <__flatcc_fb_default_error_out@@Base+0x12d8>
   2cb94:	cmp	r2, #120	; 0x78
   2cb98:	bne	2cbb4 <__flatcc_fb_default_error_out@@Base+0x848>
   2cb9c:	b	2d644 <__flatcc_fb_default_error_out@@Base+0x12d8>
   2cba0:	ldrb	r2, [r3]
   2cba4:	add	r3, r4, #1
   2cba8:	sub	r1, r2, #48	; 0x30
   2cbac:	cmp	r1, #9
   2cbb0:	bhi	2d41c <__flatcc_fb_default_error_out@@Base+0x10b0>
   2cbb4:	subs	r4, r3, #0
   2cbb8:	bne	2cba0 <__flatcc_fb_default_error_out@@Base+0x834>
   2cbbc:	ldrb	r3, [r3]
   2cbc0:	udf	#0
   2cbc4:	add	r3, r8, #1
   2cbc8:	b	2cbb4 <__flatcc_fb_default_error_out@@Base+0x848>
   2cbcc:	add	r4, r8, #1
   2cbd0:	cmp	r9, r4
   2cbd4:	beq	2d74c <__flatcc_fb_default_error_out@@Base+0x13e0>
   2cbd8:	ldrb	r3, [r8, #1]
   2cbdc:	cmp	r3, #58	; 0x3a
   2cbe0:	beq	2e018 <__flatcc_fb_default_error_out@@Base+0x1cac>
   2cbe4:	cmp	r3, #61	; 0x3d
   2cbe8:	bne	2d74c <__flatcc_fb_default_error_out@@Base+0x13e0>
   2cbec:	ldr	r2, [sl, #28]
   2cbf0:	ldr	r0, [sl, #20]
   2cbf4:	ldr	r1, [sl, #40]	; 0x28
   2cbf8:	add	r5, r2, r2, lsl #2
   2cbfc:	add	r4, r8, #2
   2cc00:	lsl	r5, r5, #2
   2cc04:	add	r3, r0, r5
   2cc08:	cmp	r3, r1
   2cc0c:	str	r3, [sl, #24]
   2cc10:	beq	2edb4 <__flatcc_fb_default_error_out@@Base+0x2a48>
   2cc14:	ldr	r3, [sl, #60]	; 0x3c
   2cc18:	ldr	ip, [sl, #64]	; 0x40
   2cc1c:	sub	r3, r8, r3
   2cc20:	add	r3, r3, #1
   2cc24:	str	r8, [r1]
   2cc28:	ldr	r0, [pc, #4000]	; 2dbd0 <__flatcc_fb_default_error_out@@Base+0x1864>
   2cc2c:	mov	r8, r4
   2cc30:	str	r3, [r1, #12]
   2cc34:	mov	r2, #2
   2cc38:	b	2d1c0 <__flatcc_fb_default_error_out@@Base+0xe54>
   2cc3c:	add	r5, r8, #1
   2cc40:	cmp	r9, r5
   2cc44:	beq	2d790 <__flatcc_fb_default_error_out@@Base+0x1424>
   2cc48:	ldrb	r3, [r8, #1]
   2cc4c:	cmp	r3, #42	; 0x2a
   2cc50:	beq	2e048 <__flatcc_fb_default_error_out@@Base+0x1cdc>
   2cc54:	cmp	r3, #61	; 0x3d
   2cc58:	bne	2d790 <__flatcc_fb_default_error_out@@Base+0x1424>
   2cc5c:	ldr	r2, [sl, #28]
   2cc60:	ldr	r0, [sl, #20]
   2cc64:	ldr	r1, [sl, #40]	; 0x28
   2cc68:	add	r4, r2, r2, lsl #2
   2cc6c:	lsl	r4, r4, #2
   2cc70:	add	r3, r0, r4
   2cc74:	cmp	r3, r1
   2cc78:	str	r3, [sl, #24]
   2cc7c:	beq	2eaa0 <__flatcc_fb_default_error_out@@Base+0x2734>
   2cc80:	ldr	r3, [sl, #60]	; 0x3c
   2cc84:	ldr	ip, [sl, #64]	; 0x40
   2cc88:	ldr	r0, [pc, #3908]	; 2dbd4 <__flatcc_fb_default_error_out@@Base+0x1868>
   2cc8c:	sub	r3, r8, r3
   2cc90:	add	r3, r3, #1
   2cc94:	str	r3, [r1, #12]
   2cc98:	mov	r2, #1
   2cc9c:	add	r3, r1, #20
   2cca0:	str	r8, [r1]
   2cca4:	str	ip, [r1, #8]
   2cca8:	str	r0, [r1, #16]
   2ccac:	str	r2, [r1, #4]
   2ccb0:	str	r3, [sl, #40]	; 0x28
   2ccb4:	ldrb	r4, [r8, #1]
   2ccb8:	mov	r8, r5
   2ccbc:	b	2c550 <__flatcc_fb_default_error_out@@Base+0x1e4>
   2ccc0:	add	r4, r8, #1
   2ccc4:	cmp	r9, r4
   2ccc8:	beq	2d708 <__flatcc_fb_default_error_out@@Base+0x139c>
   2cccc:	ldrb	r3, [r8, #1]
   2ccd0:	cmp	r3, #43	; 0x2b
   2ccd4:	beq	2dfc8 <__flatcc_fb_default_error_out@@Base+0x1c5c>
   2ccd8:	cmp	r3, #61	; 0x3d
   2ccdc:	bne	2d708 <__flatcc_fb_default_error_out@@Base+0x139c>
   2cce0:	ldr	r2, [sl, #28]
   2cce4:	ldr	r0, [sl, #20]
   2cce8:	ldr	r1, [sl, #40]	; 0x28
   2ccec:	add	r5, r2, r2, lsl #2
   2ccf0:	add	r4, r8, #2
   2ccf4:	lsl	r5, r5, #2
   2ccf8:	add	r3, r0, r5
   2ccfc:	cmp	r3, r1
   2cd00:	str	r3, [sl, #24]
   2cd04:	beq	2eeec <__flatcc_fb_default_error_out@@Base+0x2b80>
   2cd08:	ldr	r3, [sl, #60]	; 0x3c
   2cd0c:	ldr	ip, [sl, #64]	; 0x40
   2cd10:	sub	r3, r8, r3
   2cd14:	add	r3, r3, #1
   2cd18:	str	r8, [r1]
   2cd1c:	ldr	r0, [pc, #3764]	; 2dbd8 <__flatcc_fb_default_error_out@@Base+0x186c>
   2cd20:	mov	r8, r4
   2cd24:	str	r3, [r1, #12]
   2cd28:	mov	r2, #2
   2cd2c:	b	2d1c0 <__flatcc_fb_default_error_out@@Base+0xe54>
   2cd30:	add	r4, r8, #1
   2cd34:	cmp	r9, r4
   2cd38:	beq	2cd58 <__flatcc_fb_default_error_out@@Base+0x9ec>
   2cd3c:	ldrb	r3, [r8, #1]
   2cd40:	cmp	r3, #61	; 0x3d
   2cd44:	beq	2e4a8 <__flatcc_fb_default_error_out@@Base+0x213c>
   2cd48:	cmp	r3, #62	; 0x3e
   2cd4c:	beq	2e48c <__flatcc_fb_default_error_out@@Base+0x2120>
   2cd50:	cmp	r3, #45	; 0x2d
   2cd54:	beq	2da90 <__flatcc_fb_default_error_out@@Base+0x1724>
   2cd58:	ldr	r2, [sl, #28]
   2cd5c:	ldr	r0, [sl, #20]
   2cd60:	ldr	r1, [sl, #40]	; 0x28
   2cd64:	add	r5, r2, r2, lsl #2
   2cd68:	lsl	r5, r5, #2
   2cd6c:	add	r3, r0, r5
   2cd70:	cmp	r3, r1
   2cd74:	str	r3, [sl, #24]
   2cd78:	beq	2ec50 <__flatcc_fb_default_error_out@@Base+0x28e4>
   2cd7c:	ldr	r3, [sl, #60]	; 0x3c
   2cd80:	ldr	ip, [sl, #64]	; 0x40
   2cd84:	sub	r3, r8, r3
   2cd88:	str	r8, [r1]
   2cd8c:	add	r3, r3, #1
   2cd90:	mov	r0, #45	; 0x2d
   2cd94:	mov	r8, r4
   2cd98:	b	2d1b8 <__flatcc_fb_default_error_out@@Base+0xe4c>
   2cd9c:	add	r4, r8, #1
   2cda0:	cmp	r9, r4
   2cda4:	beq	2d920 <__flatcc_fb_default_error_out@@Base+0x15b4>
   2cda8:	ldrb	r3, [r8, #1]
   2cdac:	cmp	r3, #46	; 0x2e
   2cdb0:	beq	2de40 <__flatcc_fb_default_error_out@@Base+0x1ad4>
   2cdb4:	bcc	2d920 <__flatcc_fb_default_error_out@@Base+0x15b4>
   2cdb8:	sub	r3, r3, #48	; 0x30
   2cdbc:	cmp	r3, #9
   2cdc0:	movls	r0, r8
   2cdc4:	bhi	2d920 <__flatcc_fb_default_error_out@@Base+0x15b4>
   2cdc8:	add	r3, r4, #1
   2cdcc:	b	2cde4 <__flatcc_fb_default_error_out@@Base+0xa78>
   2cdd0:	ldrb	r2, [r3]
   2cdd4:	add	r3, r3, #1
   2cdd8:	sub	r1, r2, #48	; 0x30
   2cddc:	cmp	r1, #9
   2cde0:	bhi	2dd0c <__flatcc_fb_default_error_out@@Base+0x19a0>
   2cde4:	cmp	r3, r9
   2cde8:	mov	r4, r3
   2cdec:	bne	2cdd0 <__flatcc_fb_default_error_out@@Base+0xa64>
   2cdf0:	cmp	r4, r0
   2cdf4:	beq	2e080 <__flatcc_fb_default_error_out@@Base+0x1d14>
   2cdf8:	ldr	r2, [sl, #28]
   2cdfc:	ldr	r0, [sl, #20]
   2ce00:	ldr	r1, [sl, #40]	; 0x28
   2ce04:	add	r5, r2, r2, lsl #2
   2ce08:	lsl	r5, r5, #2
   2ce0c:	add	r3, r0, r5
   2ce10:	cmp	r3, r1
   2ce14:	str	r3, [sl, #24]
   2ce18:	beq	2ddac <__flatcc_fb_default_error_out@@Base+0x1a40>
   2ce1c:	ldr	r3, [sl, #60]	; 0x3c
   2ce20:	mov	r2, #11
   2ce24:	sub	r3, r8, r3
   2ce28:	add	r3, r3, #1
   2ce2c:	ldr	r0, [sl, #64]	; 0x40
   2ce30:	str	r8, [r1]
   2ce34:	sub	r8, r4, r8
   2ce38:	str	r8, [r1, #4]
   2ce3c:	str	r3, [r1, #12]
   2ce40:	add	r3, r1, #20
   2ce44:	str	r0, [r1, #8]
   2ce48:	str	r2, [r1, #16]
   2ce4c:	mov	r8, r4
   2ce50:	str	r3, [sl, #40]	; 0x28
   2ce54:	b	2c544 <__flatcc_fb_default_error_out@@Base+0x1d8>
   2ce58:	add	r4, r8, #1
   2ce5c:	cmp	r9, r4
   2ce60:	beq	2e8a0 <__flatcc_fb_default_error_out@@Base+0x2534>
   2ce64:	ldrb	r3, [r8, #1]
   2ce68:	ldr	r2, [sl, #28]
   2ce6c:	ldr	r0, [sl, #20]
   2ce70:	cmp	r3, #38	; 0x26
   2ce74:	beq	2df6c <__flatcc_fb_default_error_out@@Base+0x1c00>
   2ce78:	add	r5, r2, r2, lsl #2
   2ce7c:	cmp	r3, #61	; 0x3d
   2ce80:	lslne	r5, r5, #2
   2ce84:	ldr	r1, [sl, #40]	; 0x28
   2ce88:	addne	r3, r0, r5
   2ce8c:	beq	2d830 <__flatcc_fb_default_error_out@@Base+0x14c4>
   2ce90:	cmp	r1, r3
   2ce94:	str	r3, [sl, #24]
   2ce98:	beq	2e73c <__flatcc_fb_default_error_out@@Base+0x23d0>
   2ce9c:	ldr	r3, [sl, #60]	; 0x3c
   2cea0:	ldr	r0, [sl, #64]	; 0x40
   2cea4:	sub	r3, r8, r3
   2cea8:	str	r8, [r1]
   2ceac:	sub	r8, r4, r8
   2ceb0:	add	r3, r3, #1
   2ceb4:	str	r8, [r1, #4]
   2ceb8:	mov	r2, #38	; 0x26
   2cebc:	b	2ce3c <__flatcc_fb_default_error_out@@Base+0xad0>
   2cec0:	ldr	r2, [sl, #28]
   2cec4:	ldr	r0, [sl, #20]
   2cec8:	ldr	r1, [sl, #40]	; 0x28
   2cecc:	add	r6, r2, r2, lsl #2
   2ced0:	add	r5, r8, #1
   2ced4:	b	2c93c <__flatcc_fb_default_error_out@@Base+0x5d0>
   2ced8:	add	r4, r8, #1
   2cedc:	cmp	r9, r4
   2cee0:	beq	2cf00 <__flatcc_fb_default_error_out@@Base+0xb94>
   2cee4:	ldrb	r3, [r8, #1]
   2cee8:	cmp	r3, #60	; 0x3c
   2ceec:	beq	2e450 <__flatcc_fb_default_error_out@@Base+0x20e4>
   2cef0:	cmp	r3, #61	; 0x3d
   2cef4:	beq	2e434 <__flatcc_fb_default_error_out@@Base+0x20c8>
   2cef8:	cmp	r3, #45	; 0x2d
   2cefc:	beq	2da74 <__flatcc_fb_default_error_out@@Base+0x1708>
   2cf00:	ldr	r2, [sl, #28]
   2cf04:	ldr	r0, [sl, #20]
   2cf08:	ldr	r1, [sl, #40]	; 0x28
   2cf0c:	add	r5, r2, r2, lsl #2
   2cf10:	lsl	r5, r5, #2
   2cf14:	add	r3, r0, r5
   2cf18:	cmp	r3, r1
   2cf1c:	str	r3, [sl, #24]
   2cf20:	beq	2ef74 <__flatcc_fb_default_error_out@@Base+0x2c08>
   2cf24:	ldr	r3, [sl, #60]	; 0x3c
   2cf28:	ldr	ip, [sl, #64]	; 0x40
   2cf2c:	sub	r3, r8, r3
   2cf30:	str	r8, [r1]
   2cf34:	add	r3, r3, #1
   2cf38:	mov	r0, #60	; 0x3c
   2cf3c:	mov	r8, r4
   2cf40:	b	2d1b8 <__flatcc_fb_default_error_out@@Base+0xe4c>
   2cf44:	add	r4, r8, #1
   2cf48:	cmp	r9, r4
   2cf4c:	beq	2d204 <__flatcc_fb_default_error_out@@Base+0xe98>
   2cf50:	ldrb	r3, [r8, #1]
   2cf54:	cmp	r3, #61	; 0x3d
   2cf58:	beq	2d1d8 <__flatcc_fb_default_error_out@@Base+0xe6c>
   2cf5c:	cmp	r3, #62	; 0x3e
   2cf60:	bne	2d204 <__flatcc_fb_default_error_out@@Base+0xe98>
   2cf64:	ldr	r2, [sl, #28]
   2cf68:	ldr	r0, [sl, #20]
   2cf6c:	ldr	r1, [sl, #40]	; 0x28
   2cf70:	add	r5, r2, r2, lsl #2
   2cf74:	add	r4, r8, #2
   2cf78:	lsl	r5, r5, #2
   2cf7c:	add	r3, r0, r5
   2cf80:	cmp	r3, r1
   2cf84:	str	r3, [sl, #24]
   2cf88:	beq	2ea18 <__flatcc_fb_default_error_out@@Base+0x26ac>
   2cf8c:	ldr	r3, [sl, #60]	; 0x3c
   2cf90:	ldr	r0, [sl, #64]	; 0x40
   2cf94:	sub	r3, r8, r3
   2cf98:	str	r8, [r1]
   2cf9c:	sub	r8, r4, r8
   2cfa0:	add	r3, r3, #1
   2cfa4:	str	r8, [r1, #4]
   2cfa8:	ldr	r2, [pc, #3116]	; 2dbdc <__flatcc_fb_default_error_out@@Base+0x1870>
   2cfac:	b	2ce3c <__flatcc_fb_default_error_out@@Base+0xad0>
   2cfb0:	add	r4, r8, #1
   2cfb4:	cmp	r9, r4
   2cfb8:	beq	2d6c4 <__flatcc_fb_default_error_out@@Base+0x1358>
   2cfbc:	ldrb	r3, [r8, #1]
   2cfc0:	cmp	r3, #61	; 0x3d
   2cfc4:	beq	2ddf0 <__flatcc_fb_default_error_out@@Base+0x1a84>
   2cfc8:	cmp	r3, #62	; 0x3e
   2cfcc:	bne	2d6c4 <__flatcc_fb_default_error_out@@Base+0x1358>
   2cfd0:	add	r3, r8, #2
   2cfd4:	cmp	r9, r3
   2cfd8:	beq	2e870 <__flatcc_fb_default_error_out@@Base+0x2504>
   2cfdc:	ldrb	r2, [r8, #2]
   2cfe0:	cmp	r2, #61	; 0x3d
   2cfe4:	beq	2e854 <__flatcc_fb_default_error_out@@Base+0x24e8>
   2cfe8:	cmp	r2, #62	; 0x3e
   2cfec:	bne	2e870 <__flatcc_fb_default_error_out@@Base+0x2504>
   2cff0:	add	r3, r8, #3
   2cff4:	cmp	r9, r3
   2cff8:	beq	2d008 <__flatcc_fb_default_error_out@@Base+0xc9c>
   2cffc:	ldrb	r2, [r8, #3]
   2d000:	cmp	r2, #61	; 0x3d
   2d004:	beq	2f3c0 <__flatcc_fb_default_error_out@@Base+0x3054>
   2d008:	mov	r2, r8
   2d00c:	ldr	r1, [pc, #3020]	; 2dbe0 <__flatcc_fb_default_error_out@@Base+0x1874>
   2d010:	mov	r0, sl
   2d014:	mov	r8, r3
   2d018:	bl	2c38c <__flatcc_fb_default_error_out@@Base+0x20>
   2d01c:	b	2c544 <__flatcc_fb_default_error_out@@Base+0x1d8>
   2d020:	add	r5, r8, #1
   2d024:	cmp	r9, r5
   2d028:	lsl	r0, r4, #8
   2d02c:	beq	2d04c <__flatcc_fb_default_error_out@@Base+0xce0>
   2d030:	ldrb	r3, [r8, #1]
   2d034:	ldr	r1, [pc, #2984]	; 2dbe4 <__flatcc_fb_default_error_out@@Base+0x1878>
   2d038:	add	r2, r1, r3
   2d03c:	ldrb	r2, [r2, #8]
   2d040:	cmp	r2, #0
   2d044:	orrne	r0, r0, r3, lsl #16
   2d048:	bne	2d144 <__flatcc_fb_default_error_out@@Base+0xdd8>
   2d04c:	sub	r6, r5, r8
   2d050:	orr	r3, r0, r4, lsl #24
   2d054:	uxtb	r2, r6
   2d058:	add	r2, r2, #48	; 0x30
   2d05c:	orr	r3, r2, r3
   2d060:	ldr	r2, [pc, #2944]	; 2dbe8 <__flatcc_fb_default_error_out@@Base+0x187c>
   2d064:	cmp	r3, r2
   2d068:	beq	2f1e8 <__flatcc_fb_default_error_out@@Base+0x2e7c>
   2d06c:	bhi	2d5d8 <__flatcc_fb_default_error_out@@Base+0x126c>
   2d070:	ldr	r2, [pc, #2932]	; 2dbec <__flatcc_fb_default_error_out@@Base+0x1880>
   2d074:	cmp	r3, r2
   2d078:	beq	2f2f0 <__flatcc_fb_default_error_out@@Base+0x2f84>
   2d07c:	bhi	2d86c <__flatcc_fb_default_error_out@@Base+0x1500>
   2d080:	add	r2, r2, #-67108863	; 0xfc000001
   2d084:	cmp	r3, r2
   2d088:	beq	2f270 <__flatcc_fb_default_error_out@@Base+0x2f04>
   2d08c:	bls	2e79c <__flatcc_fb_default_error_out@@Base+0x2430>
   2d090:	ldr	r2, [pc, #2904]	; 2dbf0 <__flatcc_fb_default_error_out@@Base+0x1884>
   2d094:	cmp	r3, r2
   2d098:	beq	2f250 <__flatcc_fb_default_error_out@@Base+0x2ee4>
   2d09c:	bls	2f224 <__flatcc_fb_default_error_out@@Base+0x2eb8>
   2d0a0:	ldr	r2, [pc, #2892]	; 2dbf4 <__flatcc_fb_default_error_out@@Base+0x1888>
   2d0a4:	cmp	r3, r2
   2d0a8:	beq	2f290 <__flatcc_fb_default_error_out@@Base+0x2f24>
   2d0ac:	ldr	r2, [pc, #2884]	; 2dbf8 <__flatcc_fb_default_error_out@@Base+0x188c>
   2d0b0:	cmp	r3, r2
   2d0b4:	bne	2e7c0 <__flatcc_fb_default_error_out@@Base+0x2454>
   2d0b8:	mov	r2, #5
   2d0bc:	mov	r1, r8
   2d0c0:	ldr	r0, [pc, #2868]	; 2dbfc <__flatcc_fb_default_error_out@@Base+0x1890>
   2d0c4:	bl	13ff8 <memcmp@plt>
   2d0c8:	ldr	r4, [pc, #2864]	; 2dc00 <__flatcc_fb_default_error_out@@Base+0x1894>
   2d0cc:	cmp	r0, #0
   2d0d0:	movne	r4, #9
   2d0d4:	ldr	r2, [sl, #28]
   2d0d8:	ldr	r0, [sl, #20]
   2d0dc:	ldr	r1, [sl, #40]	; 0x28
   2d0e0:	add	r7, r2, r2, lsl #2
   2d0e4:	lsl	r7, r7, #2
   2d0e8:	add	r3, r0, r7
   2d0ec:	cmp	r3, r1
   2d0f0:	str	r3, [sl, #24]
   2d0f4:	beq	2e514 <__flatcc_fb_default_error_out@@Base+0x21a8>
   2d0f8:	ldr	r3, [sl, #60]	; 0x3c
   2d0fc:	ldr	r0, [sl, #64]	; 0x40
   2d100:	sub	r3, r8, r3
   2d104:	add	r3, r3, #1
   2d108:	add	r2, r1, #20
   2d10c:	str	r8, [r1]
   2d110:	str	r4, [r1, #16]
   2d114:	str	r6, [r1, #4]
   2d118:	str	r3, [r1, #12]
   2d11c:	str	r0, [r1, #8]
   2d120:	mov	r8, r5
   2d124:	str	r2, [sl, #40]	; 0x28
   2d128:	b	2c544 <__flatcc_fb_default_error_out@@Base+0x1d8>
   2d12c:	ldrb	r3, [r5, #1]
   2d130:	add	r3, r1, r3
   2d134:	ldrb	r3, [r3, #8]
   2d138:	cmp	r3, #0
   2d13c:	beq	2e5c0 <__flatcc_fb_default_error_out@@Base+0x2254>
   2d140:	mov	r5, r2
   2d144:	add	r2, r5, #1
   2d148:	cmp	r9, r2
   2d14c:	bne	2d12c <__flatcc_fb_default_error_out@@Base+0xdc0>
   2d150:	ldrb	r4, [r5]
   2d154:	mov	r5, r9
   2d158:	b	2d04c <__flatcc_fb_default_error_out@@Base+0xce0>
   2d15c:	cmp	r4, #127	; 0x7f
   2d160:	cmpne	r4, #31
   2d164:	add	r5, r8, #1
   2d168:	bhi	2d178 <__flatcc_fb_default_error_out@@Base+0xe0c>
   2d16c:	cmp	r4, #32
   2d170:	cmpne	r4, #9
   2d174:	bne	2e5a4 <__flatcc_fb_default_error_out@@Base+0x2238>
   2d178:	ldr	r2, [sl, #28]
   2d17c:	ldr	r0, [sl, #20]
   2d180:	ldr	r1, [sl, #40]	; 0x28
   2d184:	add	r4, r2, r2, lsl #2
   2d188:	lsl	r4, r4, #2
   2d18c:	add	r3, r0, r4
   2d190:	cmp	r3, r1
   2d194:	str	r3, [sl, #24]
   2d198:	beq	2e5cc <__flatcc_fb_default_error_out@@Base+0x2260>
   2d19c:	ldr	r2, [sl, #60]	; 0x3c
   2d1a0:	ldr	ip, [sl, #64]	; 0x40
   2d1a4:	sub	r2, r8, r2
   2d1a8:	str	r8, [r1]
   2d1ac:	add	r3, r2, #1
   2d1b0:	mov	r8, r5
   2d1b4:	mov	r0, #8
   2d1b8:	mov	r2, #1
   2d1bc:	str	r3, [r1, #12]
   2d1c0:	add	r3, r1, #20
   2d1c4:	str	ip, [r1, #8]
   2d1c8:	str	r0, [r1, #16]
   2d1cc:	str	r2, [r1, #4]
   2d1d0:	str	r3, [sl, #40]	; 0x28
   2d1d4:	b	2c544 <__flatcc_fb_default_error_out@@Base+0x1d8>
   2d1d8:	add	r4, r8, #2
   2d1dc:	cmp	r9, r4
   2d1e0:	beq	2d1f0 <__flatcc_fb_default_error_out@@Base+0xe84>
   2d1e4:	ldrb	r3, [r8, #2]
   2d1e8:	cmp	r3, #61	; 0x3d
   2d1ec:	beq	2f0e0 <__flatcc_fb_default_error_out@@Base+0x2d74>
   2d1f0:	mov	r3, r4
   2d1f4:	mov	r2, r8
   2d1f8:	ldr	r1, [pc, #2564]	; 2dc04 <__flatcc_fb_default_error_out@@Base+0x1898>
   2d1fc:	mov	r0, sl
   2d200:	bl	2c38c <__flatcc_fb_default_error_out@@Base+0x20>
   2d204:	ldr	r2, [sl, #28]
   2d208:	ldr	r0, [sl, #20]
   2d20c:	ldr	r1, [sl, #40]	; 0x28
   2d210:	add	r5, r2, r2, lsl #2
   2d214:	lsl	r5, r5, #2
   2d218:	add	r3, r0, r5
   2d21c:	cmp	r3, r1
   2d220:	str	r3, [sl, #24]
   2d224:	beq	2e6f8 <__flatcc_fb_default_error_out@@Base+0x238c>
   2d228:	ldr	r3, [sl, #60]	; 0x3c
   2d22c:	ldr	r0, [sl, #64]	; 0x40
   2d230:	sub	r3, r8, r3
   2d234:	str	r8, [r1]
   2d238:	sub	r8, r4, r8
   2d23c:	add	r3, r3, #1
   2d240:	str	r8, [r1, #4]
   2d244:	mov	r2, #61	; 0x3d
   2d248:	b	2ce3c <__flatcc_fb_default_error_out@@Base+0xad0>
   2d24c:	cmp	fp, #0
   2d250:	lslne	r3, fp, #1
   2d254:	addne	r1, r3, fp, lsl #3
   2d258:	moveq	r3, #1024	; 0x400
   2d25c:	lslne	r1, r1, #2
   2d260:	moveq	r1, #20480	; 0x5000
   2d264:	str	r3, [sl, #28]
   2d268:	str	r2, [sp, #4]
   2d26c:	bl	14010 <realloc@plt>
   2d270:	cmp	r0, #0
   2d274:	str	r0, [sl, #20]
   2d278:	beq	2f3bc <__flatcc_fb_default_error_out@@Base+0x3050>
   2d27c:	ldr	fp, [sl, #28]
   2d280:	add	r3, r0, r7
   2d284:	ldr	r2, [sp, #4]
   2d288:	lsl	ip, fp, #2
   2d28c:	add	lr, ip, fp
   2d290:	add	r1, r0, lr, lsl #2
   2d294:	str	r1, [sl, #24]
   2d298:	b	2cad0 <__flatcc_fb_default_error_out@@Base+0x764>
   2d29c:	cmp	fp, #0
   2d2a0:	lslne	r3, fp, #1
   2d2a4:	addne	r1, r3, fp, lsl #3
   2d2a8:	moveq	r3, #1024	; 0x400
   2d2ac:	lslne	r1, r1, #2
   2d2b0:	moveq	r1, #20480	; 0x5000
   2d2b4:	str	r3, [sl, #28]
   2d2b8:	str	r2, [sp, #4]
   2d2bc:	bl	14010 <realloc@plt>
   2d2c0:	ldr	r2, [sp, #4]
   2d2c4:	cmp	r0, #0
   2d2c8:	str	r0, [sl, #20]
   2d2cc:	beq	2f3bc <__flatcc_fb_default_error_out@@Base+0x3050>
   2d2d0:	ldr	fp, [sl, #28]
   2d2d4:	add	r3, r0, r6
   2d2d8:	lsl	ip, fp, #2
   2d2dc:	add	lr, ip, fp
   2d2e0:	lsl	lr, lr, #2
   2d2e4:	add	r1, r0, lr
   2d2e8:	mov	r7, lr
   2d2ec:	str	r1, [sl, #24]
   2d2f0:	b	2ca58 <__flatcc_fb_default_error_out@@Base+0x6ec>
   2d2f4:	cmp	r3, r1
   2d2f8:	add	r5, r4, #2
   2d2fc:	str	r1, [sl, #24]
   2d300:	beq	2d488 <__flatcc_fb_default_error_out@@Base+0x111c>
   2d304:	ldr	lr, [sl, #60]	; 0x3c
   2d308:	ldr	r6, [sl, #64]	; 0x40
   2d30c:	sub	lr, r8, lr
   2d310:	add	lr, lr, #1
   2d314:	str	lr, [sp, #4]
   2d318:	mov	lr, #21
   2d31c:	str	lr, [r3, #16]
   2d320:	ldr	lr, [sp, #4]
   2d324:	sub	r4, r5, r8
   2d328:	str	r8, [r3]
   2d32c:	stmib	r3, {r4, r6, lr}
   2d330:	cmp	r9, r5
   2d334:	add	r3, r3, #20
   2d338:	str	r3, [sl, #40]	; 0x28
   2d33c:	beq	2ee10 <__flatcc_fb_default_error_out@@Base+0x2aa4>
   2d340:	ldrb	lr, [r8, #1]
   2d344:	cmp	lr, #0
   2d348:	beq	2ed4c <__flatcc_fb_default_error_out@@Base+0x29e0>
   2d34c:	cmp	lr, #34	; 0x22
   2d350:	cmpne	lr, #92	; 0x5c
   2d354:	addeq	r4, r8, #2
   2d358:	beq	2c9f0 <__flatcc_fb_default_error_out@@Base+0x684>
   2d35c:	cmp	lr, #10
   2d360:	beq	2d52c <__flatcc_fb_default_error_out@@Base+0x11c0>
   2d364:	cmp	lr, #13
   2d368:	movne	r8, r5
   2d36c:	bne	2cac0 <__flatcc_fb_default_error_out@@Base+0x754>
   2d370:	add	r4, r8, #2
   2d374:	cmp	r9, r4
   2d378:	beq	2d38c <__flatcc_fb_default_error_out@@Base+0x1020>
   2d37c:	ldrb	lr, [r8, #2]
   2d380:	cmp	lr, #10
   2d384:	bne	2d38c <__flatcc_fb_default_error_out@@Base+0x1020>
   2d388:	add	r4, r8, #3
   2d38c:	add	r6, r6, #1
   2d390:	cmp	r3, r1
   2d394:	str	r1, [sl, #24]
   2d398:	str	r6, [sl, #64]	; 0x40
   2d39c:	str	r4, [sl, #60]	; 0x3c
   2d3a0:	movne	r1, r4
   2d3a4:	beq	2e610 <__flatcc_fb_default_error_out@@Base+0x22a4>
   2d3a8:	sub	r1, r5, r1
   2d3ac:	add	r1, r1, #1
   2d3b0:	sub	lr, r4, r5
   2d3b4:	str	r1, [r3, #12]
   2d3b8:	mov	r1, #18
   2d3bc:	stm	r3, {r5, lr}
   2d3c0:	str	r6, [r3, #8]
   2d3c4:	str	r1, [r3, #16]
   2d3c8:	add	r3, r3, #20
   2d3cc:	str	r3, [sl, #40]	; 0x28
   2d3d0:	mov	r5, r4
   2d3d4:	b	2c9f0 <__flatcc_fb_default_error_out@@Base+0x684>
   2d3d8:	cmp	r3, r1
   2d3dc:	str	r1, [sl, #24]
   2d3e0:	beq	2dd60 <__flatcc_fb_default_error_out@@Base+0x19f4>
   2d3e4:	ldr	r2, [sl, #60]	; 0x3c
   2d3e8:	mov	r0, #23
   2d3ec:	sub	r2, r8, r2
   2d3f0:	mov	r1, #0
   2d3f4:	add	r2, r2, #1
   2d3f8:	ldr	ip, [sl, #64]	; 0x40
   2d3fc:	str	r8, [r3]
   2d400:	str	r2, [r3, #12]
   2d404:	add	r2, r3, #20
   2d408:	str	ip, [r3, #8]
   2d40c:	str	r0, [r3, #16]
   2d410:	str	r1, [r3, #4]
   2d414:	str	r2, [sl, #40]	; 0x28
   2d418:	b	2c544 <__flatcc_fb_default_error_out@@Base+0x1d8>
   2d41c:	cmp	r2, #46	; 0x2e
   2d420:	moveq	r0, r4
   2d424:	beq	2cdc8 <__flatcc_fb_default_error_out@@Base+0xa5c>
   2d428:	cmp	r9, r4
   2d42c:	beq	2e080 <__flatcc_fb_default_error_out@@Base+0x1d14>
   2d430:	and	r2, r2, #223	; 0xdf
   2d434:	cmp	r2, #69	; 0x45
   2d438:	moveq	r0, r4
   2d43c:	bne	2e080 <__flatcc_fb_default_error_out@@Base+0x1d14>
   2d440:	add	r3, r4, #1
   2d444:	cmp	r9, r3
   2d448:	beq	2d45c <__flatcc_fb_default_error_out@@Base+0x10f0>
   2d44c:	ldrb	r2, [r4, #1]
   2d450:	sub	r2, r2, #43	; 0x2b
   2d454:	tst	r2, #253	; 0xfd
   2d458:	movne	r3, r4
   2d45c:	add	r3, r3, #1
   2d460:	b	2d478 <__flatcc_fb_default_error_out@@Base+0x110c>
   2d464:	ldrb	r2, [r3]
   2d468:	add	r3, r3, #1
   2d46c:	sub	r2, r2, #48	; 0x30
   2d470:	cmp	r2, #9
   2d474:	bhi	2cdf0 <__flatcc_fb_default_error_out@@Base+0xa84>
   2d478:	cmp	r9, r3
   2d47c:	mov	r4, r3
   2d480:	bne	2d464 <__flatcc_fb_default_error_out@@Base+0x10f8>
   2d484:	b	2cdf0 <__flatcc_fb_default_error_out@@Base+0xa84>
   2d488:	cmp	fp, #0
   2d48c:	lslne	r3, fp, #1
   2d490:	addne	r1, r3, fp, lsl #3
   2d494:	moveq	r3, #1024	; 0x400
   2d498:	lslne	r1, r1, #2
   2d49c:	moveq	r1, #20480	; 0x5000
   2d4a0:	str	r3, [sl, #28]
   2d4a4:	str	r2, [sp, #4]
   2d4a8:	bl	14010 <realloc@plt>
   2d4ac:	cmp	r0, #0
   2d4b0:	str	r0, [sl, #20]
   2d4b4:	beq	2f3bc <__flatcc_fb_default_error_out@@Base+0x3050>
   2d4b8:	ldr	fp, [sl, #28]
   2d4bc:	add	r3, r0, r7
   2d4c0:	ldr	r2, [sp, #4]
   2d4c4:	lsl	ip, fp, #2
   2d4c8:	add	lr, ip, fp
   2d4cc:	lsl	lr, lr, #2
   2d4d0:	add	r1, r0, lr
   2d4d4:	mov	r7, lr
   2d4d8:	str	r1, [sl, #24]
   2d4dc:	b	2d304 <__flatcc_fb_default_error_out@@Base+0xf98>
   2d4e0:	cmp	r3, r1
   2d4e4:	add	r4, r4, #2
   2d4e8:	str	r1, [sl, #24]
   2d4ec:	beq	2e6ac <__flatcc_fb_default_error_out@@Base+0x2340>
   2d4f0:	ldr	r2, [sl, #60]	; 0x3c
   2d4f4:	mov	r1, #22
   2d4f8:	sub	r2, r8, r2
   2d4fc:	add	r2, r2, #1
   2d500:	ldr	r0, [sl, #64]	; 0x40
   2d504:	str	r8, [r3]
   2d508:	sub	r8, r4, r8
   2d50c:	str	r8, [r3, #4]
   2d510:	str	r2, [r3, #12]
   2d514:	add	r2, r3, #20
   2d518:	str	r0, [r3, #8]
   2d51c:	str	r1, [r3, #16]
   2d520:	mov	r8, r4
   2d524:	str	r2, [sl, #40]	; 0x28
   2d528:	b	2c544 <__flatcc_fb_default_error_out@@Base+0x1d8>
   2d52c:	add	r4, r8, #2
   2d530:	cmp	r9, r4
   2d534:	beq	2d38c <__flatcc_fb_default_error_out@@Base+0x1020>
   2d538:	ldrb	lr, [r8, #2]
   2d53c:	cmp	lr, #13
   2d540:	bne	2d38c <__flatcc_fb_default_error_out@@Base+0x1020>
   2d544:	b	2d388 <__flatcc_fb_default_error_out@@Base+0x101c>
   2d548:	cmp	r2, r1
   2d54c:	str	r2, [sl, #24]
   2d550:	beq	2e810 <__flatcc_fb_default_error_out@@Base+0x24a4>
   2d554:	ldr	r3, [sl, #60]	; 0x3c
   2d558:	ldr	ip, [sl, #64]	; 0x40
   2d55c:	sub	r2, r8, r6
   2d560:	sub	r3, r6, r3
   2d564:	str	r2, [r1, #4]
   2d568:	add	r3, r3, #1
   2d56c:	mov	r0, #0
   2d570:	add	r2, r1, #20
   2d574:	str	r6, [r1]
   2d578:	str	r3, [r1, #12]
   2d57c:	str	ip, [r1, #8]
   2d580:	str	r0, [r1, #16]
   2d584:	str	r2, [sl, #40]	; 0x28
   2d588:	b	2c814 <__flatcc_fb_default_error_out@@Base+0x4a8>
   2d58c:	mov	r8, r2
   2d590:	b	2c550 <__flatcc_fb_default_error_out@@Base+0x1e4>
   2d594:	cmp	ip, #0
   2d598:	lslne	r3, ip, #1
   2d59c:	addne	r1, r3, ip, lsl #3
   2d5a0:	moveq	r3, #1024	; 0x400
   2d5a4:	lslne	r1, r1, #2
   2d5a8:	moveq	r1, #20480	; 0x5000
   2d5ac:	str	r3, [sl, #28]
   2d5b0:	bl	14010 <realloc@plt>
   2d5b4:	cmp	r0, #0
   2d5b8:	str	r0, [sl, #20]
   2d5bc:	beq	2f3bc <__flatcc_fb_default_error_out@@Base+0x3050>
   2d5c0:	ldr	r3, [sl, #28]
   2d5c4:	add	r1, r0, r5
   2d5c8:	add	r3, r3, r3, lsl #2
   2d5cc:	add	r0, r0, r3, lsl #2
   2d5d0:	str	r0, [sl, #24]
   2d5d4:	b	2c888 <__flatcc_fb_default_error_out@@Base+0x51c>
   2d5d8:	ldr	r2, [pc, #1576]	; 2dc08 <__flatcc_fb_default_error_out@@Base+0x189c>
   2d5dc:	cmp	r3, r2
   2d5e0:	beq	2f188 <__flatcc_fb_default_error_out@@Base+0x2e1c>
   2d5e4:	bhi	2d8c8 <__flatcc_fb_default_error_out@@Base+0x155c>
   2d5e8:	ldr	r2, [pc, #1564]	; 2dc0c <__flatcc_fb_default_error_out@@Base+0x18a0>
   2d5ec:	cmp	r3, r2
   2d5f0:	beq	2f350 <__flatcc_fb_default_error_out@@Base+0x2fe4>
   2d5f4:	bls	2e7c8 <__flatcc_fb_default_error_out@@Base+0x245c>
   2d5f8:	ldr	r2, [pc, #1552]	; 2dc10 <__flatcc_fb_default_error_out@@Base+0x18a4>
   2d5fc:	cmp	r3, r2
   2d600:	beq	2f39c <__flatcc_fb_default_error_out@@Base+0x3030>
   2d604:	bls	2f370 <__flatcc_fb_default_error_out@@Base+0x3004>
   2d608:	ldr	r2, [pc, #1540]	; 2dc14 <__flatcc_fb_default_error_out@@Base+0x18a8>
   2d60c:	cmp	r3, r2
   2d610:	beq	2f310 <__flatcc_fb_default_error_out@@Base+0x2fa4>
   2d614:	add	r2, r2, #16711680	; 0xff0000
   2d618:	add	r2, r2, #768	; 0x300
   2d61c:	cmp	r3, r2
   2d620:	bne	2e7c0 <__flatcc_fb_default_error_out@@Base+0x2454>
   2d624:	mov	r2, #4
   2d628:	mov	r1, r8
   2d62c:	ldr	r0, [pc, #1508]	; 2dc18 <__flatcc_fb_default_error_out@@Base+0x18ac>
   2d630:	bl	13ff8 <memcmp@plt>
   2d634:	cmp	r0, #0
   2d638:	movne	r4, #9
   2d63c:	mvneq	r4, #996	; 0x3e4
   2d640:	b	2d0d4 <__flatcc_fb_default_error_out@@Base+0xd68>
   2d644:	add	r4, r8, #2
   2d648:	b	2d674 <__flatcc_fb_default_error_out@@Base+0x1308>
   2d64c:	mov	r2, r4
   2d650:	ldrb	r3, [r2], #1
   2d654:	sub	r1, r3, #48	; 0x30
   2d658:	cmp	r1, #9
   2d65c:	bls	2d670 <__flatcc_fb_default_error_out@@Base+0x1304>
   2d660:	orr	r3, r3, #32
   2d664:	sub	r3, r3, #97	; 0x61
   2d668:	cmp	r3, #5
   2d66c:	bhi	2d67c <__flatcc_fb_default_error_out@@Base+0x1310>
   2d670:	mov	r4, r2
   2d674:	cmp	r9, r4
   2d678:	bne	2d64c <__flatcc_fb_default_error_out@@Base+0x12e0>
   2d67c:	ldr	r2, [sl, #28]
   2d680:	ldr	r0, [sl, #20]
   2d684:	ldr	r1, [sl, #40]	; 0x28
   2d688:	add	r5, r2, r2, lsl #2
   2d68c:	lsl	r5, r5, #2
   2d690:	add	r3, r0, r5
   2d694:	cmp	r3, r1
   2d698:	str	r3, [sl, #24]
   2d69c:	beq	2daac <__flatcc_fb_default_error_out@@Base+0x1740>
   2d6a0:	ldr	r3, [sl, #60]	; 0x3c
   2d6a4:	ldr	r0, [sl, #64]	; 0x40
   2d6a8:	sub	r3, r8, r3
   2d6ac:	str	r8, [r1]
   2d6b0:	sub	r8, r4, r8
   2d6b4:	add	r3, r3, #1
   2d6b8:	str	r8, [r1, #4]
   2d6bc:	mov	r2, #14
   2d6c0:	b	2ce3c <__flatcc_fb_default_error_out@@Base+0xad0>
   2d6c4:	ldr	r2, [sl, #28]
   2d6c8:	ldr	r0, [sl, #20]
   2d6cc:	ldr	r1, [sl, #40]	; 0x28
   2d6d0:	add	r5, r2, r2, lsl #2
   2d6d4:	lsl	r5, r5, #2
   2d6d8:	add	r3, r0, r5
   2d6dc:	cmp	r3, r1
   2d6e0:	str	r3, [sl, #24]
   2d6e4:	beq	2eae4 <__flatcc_fb_default_error_out@@Base+0x2778>
   2d6e8:	ldr	r3, [sl, #60]	; 0x3c
   2d6ec:	ldr	ip, [sl, #64]	; 0x40
   2d6f0:	sub	r3, r8, r3
   2d6f4:	str	r8, [r1]
   2d6f8:	add	r3, r3, #1
   2d6fc:	mov	r0, #62	; 0x3e
   2d700:	mov	r8, r4
   2d704:	b	2d1b8 <__flatcc_fb_default_error_out@@Base+0xe4c>
   2d708:	ldr	r2, [sl, #28]
   2d70c:	ldr	r0, [sl, #20]
   2d710:	ldr	r1, [sl, #40]	; 0x28
   2d714:	add	r5, r2, r2, lsl #2
   2d718:	lsl	r5, r5, #2
   2d71c:	add	r3, r0, r5
   2d720:	cmp	r3, r1
   2d724:	str	r3, [sl, #24]
   2d728:	beq	2ebc8 <__flatcc_fb_default_error_out@@Base+0x285c>
   2d72c:	ldr	r3, [sl, #60]	; 0x3c
   2d730:	ldr	ip, [sl, #64]	; 0x40
   2d734:	sub	r3, r8, r3
   2d738:	str	r8, [r1]
   2d73c:	add	r3, r3, #1
   2d740:	mov	r0, #43	; 0x2b
   2d744:	mov	r8, r4
   2d748:	b	2d1b8 <__flatcc_fb_default_error_out@@Base+0xe4c>
   2d74c:	ldr	r2, [sl, #28]
   2d750:	ldr	r0, [sl, #20]
   2d754:	ldr	r1, [sl, #40]	; 0x28
   2d758:	add	r5, r2, r2, lsl #2
   2d75c:	lsl	r5, r5, #2
   2d760:	add	r3, r0, r5
   2d764:	cmp	r3, r1
   2d768:	str	r3, [sl, #24]
   2d76c:	beq	2eea8 <__flatcc_fb_default_error_out@@Base+0x2b3c>
   2d770:	ldr	r3, [sl, #60]	; 0x3c
   2d774:	ldr	ip, [sl, #64]	; 0x40
   2d778:	sub	r3, r8, r3
   2d77c:	str	r8, [r1]
   2d780:	add	r3, r3, #1
   2d784:	mov	r0, #58	; 0x3a
   2d788:	mov	r8, r4
   2d78c:	b	2d1b8 <__flatcc_fb_default_error_out@@Base+0xe4c>
   2d790:	ldr	r2, [sl, #28]
   2d794:	ldr	r0, [sl, #20]
   2d798:	ldr	r1, [sl, #40]	; 0x28
   2d79c:	add	r4, r2, r2, lsl #2
   2d7a0:	lsl	r4, r4, #2
   2d7a4:	add	r3, r0, r4
   2d7a8:	cmp	r3, r1
   2d7ac:	str	r3, [sl, #24]
   2d7b0:	beq	2e948 <__flatcc_fb_default_error_out@@Base+0x25dc>
   2d7b4:	ldr	r3, [sl, #60]	; 0x3c
   2d7b8:	ldr	ip, [sl, #64]	; 0x40
   2d7bc:	sub	r3, r8, r3
   2d7c0:	str	r8, [r1]
   2d7c4:	add	r3, r3, #1
   2d7c8:	mov	r0, #42	; 0x2a
   2d7cc:	mov	r8, r5
   2d7d0:	b	2d1b8 <__flatcc_fb_default_error_out@@Base+0xe4c>
   2d7d4:	add	r6, r2, r2, lsl #2
   2d7d8:	ldr	ip, [sl, #40]	; 0x28
   2d7dc:	lsl	r6, r6, #2
   2d7e0:	add	r3, r0, r6
   2d7e4:	cmp	r3, ip
   2d7e8:	add	r4, r8, #2
   2d7ec:	str	r3, [sl, #24]
   2d7f0:	mov	r5, r6
   2d7f4:	beq	2ec94 <__flatcc_fb_default_error_out@@Base+0x2928>
   2d7f8:	ldr	r1, [sl, #60]	; 0x3c
   2d7fc:	ldr	r6, [sl, #64]	; 0x40
   2d800:	sub	r1, r8, r1
   2d804:	add	r1, r1, #1
   2d808:	ldr	lr, [pc, #1036]	; 2dc1c <__flatcc_fb_default_error_out@@Base+0x18b0>
   2d80c:	str	r1, [ip, #12]
   2d810:	sub	r7, r4, r8
   2d814:	add	r1, ip, #20
   2d818:	str	r8, [ip]
   2d81c:	str	r6, [ip, #8]
   2d820:	str	lr, [ip, #16]
   2d824:	str	r7, [ip, #4]
   2d828:	str	r1, [sl, #40]	; 0x28
   2d82c:	b	2c790 <__flatcc_fb_default_error_out@@Base+0x424>
   2d830:	lsl	r5, r5, #2
   2d834:	add	r3, r0, r5
   2d838:	cmp	r3, r1
   2d83c:	add	r4, r8, #2
   2d840:	str	r3, [sl, #24]
   2d844:	beq	2e904 <__flatcc_fb_default_error_out@@Base+0x2598>
   2d848:	ldr	r3, [sl, #60]	; 0x3c
   2d84c:	ldr	r0, [sl, #64]	; 0x40
   2d850:	sub	r3, r8, r3
   2d854:	str	r8, [r1]
   2d858:	sub	r8, r4, r8
   2d85c:	add	r3, r3, #1
   2d860:	str	r8, [r1, #4]
   2d864:	ldr	r2, [pc, #948]	; 2dc20 <__flatcc_fb_default_error_out@@Base+0x18b4>
   2d868:	b	2ce3c <__flatcc_fb_default_error_out@@Base+0xad0>
   2d86c:	ldr	r2, [pc, #944]	; 2dc24 <__flatcc_fb_default_error_out@@Base+0x18b8>
   2d870:	cmp	r3, r2
   2d874:	beq	2f034 <__flatcc_fb_default_error_out@@Base+0x2cc8>
   2d878:	bls	2e9d0 <__flatcc_fb_default_error_out@@Base+0x2664>
   2d87c:	ldr	r2, [pc, #932]	; 2dc28 <__flatcc_fb_default_error_out@@Base+0x18bc>
   2d880:	cmp	r3, r2
   2d884:	beq	2f080 <__flatcc_fb_default_error_out@@Base+0x2d14>
   2d888:	bls	2f054 <__flatcc_fb_default_error_out@@Base+0x2ce8>
   2d88c:	ldr	r2, [pc, #920]	; 2dc2c <__flatcc_fb_default_error_out@@Base+0x18c0>
   2d890:	cmp	r3, r2
   2d894:	beq	2f014 <__flatcc_fb_default_error_out@@Base+0x2ca8>
   2d898:	add	r2, r2, #3584	; 0xe00
   2d89c:	add	r2, r2, #3
   2d8a0:	cmp	r3, r2
   2d8a4:	bne	2e7c0 <__flatcc_fb_default_error_out@@Base+0x2454>
   2d8a8:	mov	r2, #9
   2d8ac:	mov	r1, r8
   2d8b0:	ldr	r0, [pc, #888]	; 2dc30 <__flatcc_fb_default_error_out@@Base+0x18c4>
   2d8b4:	bl	13ff8 <memcmp@plt>
   2d8b8:	ldr	r4, [pc, #884]	; 2dc34 <__flatcc_fb_default_error_out@@Base+0x18c8>
   2d8bc:	cmp	r0, #0
   2d8c0:	movne	r4, #9
   2d8c4:	b	2d0d4 <__flatcc_fb_default_error_out@@Base+0xd68>
   2d8c8:	ldr	r2, [pc, #872]	; 2dc38 <__flatcc_fb_default_error_out@@Base+0x18cc>
   2d8cc:	cmp	r3, r2
   2d8d0:	beq	2f0fc <__flatcc_fb_default_error_out@@Base+0x2d90>
   2d8d4:	bls	2ed08 <__flatcc_fb_default_error_out@@Base+0x299c>
   2d8d8:	ldr	r2, [pc, #860]	; 2dc3c <__flatcc_fb_default_error_out@@Base+0x18d0>
   2d8dc:	cmp	r3, r2
   2d8e0:	beq	2f148 <__flatcc_fb_default_error_out@@Base+0x2ddc>
   2d8e4:	bls	2f11c <__flatcc_fb_default_error_out@@Base+0x2db0>
   2d8e8:	ldr	r2, [pc, #848]	; 2dc40 <__flatcc_fb_default_error_out@@Base+0x18d4>
   2d8ec:	cmp	r3, r2
   2d8f0:	beq	2f168 <__flatcc_fb_default_error_out@@Base+0x2dfc>
   2d8f4:	add	r2, r2, #65024	; 0xfe00
   2d8f8:	cmp	r3, r2
   2d8fc:	bne	2e7c0 <__flatcc_fb_default_error_out@@Base+0x2454>
   2d900:	mov	r2, #6
   2d904:	mov	r1, r8
   2d908:	ldr	r0, [pc, #820]	; 2dc44 <__flatcc_fb_default_error_out@@Base+0x18d8>
   2d90c:	bl	13ff8 <memcmp@plt>
   2d910:	cmp	r0, #0
   2d914:	movne	r4, #9
   2d918:	mvneq	r4, #972	; 0x3cc
   2d91c:	b	2d0d4 <__flatcc_fb_default_error_out@@Base+0xd68>
   2d920:	ldr	r2, [sl, #28]
   2d924:	ldr	r0, [sl, #20]
   2d928:	ldr	r1, [sl, #40]	; 0x28
   2d92c:	add	r5, r2, r2, lsl #2
   2d930:	lsl	r5, r5, #2
   2d934:	add	r3, r0, r5
   2d938:	cmp	r3, r1
   2d93c:	str	r3, [sl, #24]
   2d940:	beq	2eb84 <__flatcc_fb_default_error_out@@Base+0x2818>
   2d944:	ldr	r3, [sl, #60]	; 0x3c
   2d948:	ldr	ip, [sl, #64]	; 0x40
   2d94c:	sub	r3, r8, r3
   2d950:	str	r8, [r1]
   2d954:	add	r3, r3, #1
   2d958:	mov	r0, #46	; 0x2e
   2d95c:	mov	r8, r4
   2d960:	b	2d1b8 <__flatcc_fb_default_error_out@@Base+0xe4c>
   2d964:	add	r4, r8, #2
   2d968:	cmp	r9, r4
   2d96c:	moveq	r3, #0
   2d970:	beq	2d988 <__flatcc_fb_default_error_out@@Base+0x161c>
   2d974:	ldrb	r3, [r8, #2]
   2d978:	cmp	r3, #33	; 0x21
   2d97c:	cmpne	r3, #42	; 0x2a
   2d980:	moveq	r3, #1
   2d984:	movne	r3, #0
   2d988:	add	r4, r4, r3
   2d98c:	sub	r8, r4, r8
   2d990:	cmp	r8, #3
   2d994:	moveq	r3, #1
   2d998:	movne	r3, #0
   2d99c:	str	r3, [sl, #32]
   2d9a0:	beq	2edf8 <__flatcc_fb_default_error_out@@Base+0x2a8c>
   2d9a4:	ldr	r5, [pc, #772]	; 2dcb0 <__flatcc_fb_default_error_out@@Base+0x1944>
   2d9a8:	mov	r7, #20480	; 0x5000
   2d9ac:	mov	r6, #1024	; 0x400
   2d9b0:	mov	fp, #7
   2d9b4:	sub	r2, r4, #1
   2d9b8:	b	2d9c0 <__flatcc_fb_default_error_out@@Base+0x1654>
   2d9bc:	mov	r2, r8
   2d9c0:	add	r8, r2, #1
   2d9c4:	cmp	r9, r8
   2d9c8:	beq	2daf0 <__flatcc_fb_default_error_out@@Base+0x1784>
   2d9cc:	ldrb	r3, [r2, #1]
   2d9d0:	cmp	r3, #127	; 0x7f
   2d9d4:	cmpne	r3, #31
   2d9d8:	bls	2db60 <__flatcc_fb_default_error_out@@Base+0x17f4>
   2d9dc:	cmp	r3, #47	; 0x2f
   2d9e0:	bne	2d9bc <__flatcc_fb_default_error_out@@Base+0x1650>
   2d9e4:	ldrb	r3, [r8, #-1]
   2d9e8:	cmp	r3, #42	; 0x2a
   2d9ec:	bne	2d9bc <__flatcc_fb_default_error_out@@Base+0x1650>
   2d9f0:	cmp	r4, r2
   2d9f4:	beq	2f3f8 <__flatcc_fb_default_error_out@@Base+0x308c>
   2d9f8:	ldr	r3, [sl, #32]
   2d9fc:	mov	r8, r2
   2da00:	cmp	r3, #0
   2da04:	bne	2db08 <__flatcc_fb_default_error_out@@Base+0x179c>
   2da08:	cmp	r9, r8
   2da0c:	beq	2debc <__flatcc_fb_default_error_out@@Base+0x1b50>
   2da10:	ldrb	r3, [r8]
   2da14:	cmp	r3, #0
   2da18:	beq	2dec0 <__flatcc_fb_default_error_out@@Base+0x1b54>
   2da1c:	cmp	r3, #10
   2da20:	beq	2db78 <__flatcc_fb_default_error_out@@Base+0x180c>
   2da24:	cmp	r3, #13
   2da28:	beq	2dbb0 <__flatcc_fb_default_error_out@@Base+0x1844>
   2da2c:	cmp	r3, #127	; 0x7f
   2da30:	cmpne	r3, #31
   2da34:	movls	r2, #1
   2da38:	movhi	r2, #0
   2da3c:	bhi	2dba4 <__flatcc_fb_default_error_out@@Base+0x1838>
   2da40:	cmp	r3, #9
   2da44:	cmpne	r3, #32
   2da48:	add	r4, r8, #1
   2da4c:	bne	2dcb4 <__flatcc_fb_default_error_out@@Base+0x1948>
   2da50:	ldr	r3, [sl, #32]
   2da54:	cmp	r3, #0
   2da58:	beq	2d9b4 <__flatcc_fb_default_error_out@@Base+0x1648>
   2da5c:	mov	r2, r8
   2da60:	mov	r3, r4
   2da64:	mov	r1, r5
   2da68:	mov	r0, sl
   2da6c:	bl	2c38c <__flatcc_fb_default_error_out@@Base+0x20>
   2da70:	b	2d9b4 <__flatcc_fb_default_error_out@@Base+0x1648>
   2da74:	add	r3, r8, #2
   2da78:	mov	r2, r8
   2da7c:	ldr	r1, [pc, #452]	; 2dc48 <__flatcc_fb_default_error_out@@Base+0x18dc>
   2da80:	mov	r0, sl
   2da84:	mov	r8, r3
   2da88:	bl	2c38c <__flatcc_fb_default_error_out@@Base+0x20>
   2da8c:	b	2c544 <__flatcc_fb_default_error_out@@Base+0x1d8>
   2da90:	add	r3, r8, #2
   2da94:	mov	r2, r8
   2da98:	ldr	r1, [pc, #428]	; 2dc4c <__flatcc_fb_default_error_out@@Base+0x18e0>
   2da9c:	mov	r0, sl
   2daa0:	mov	r8, r3
   2daa4:	bl	2c38c <__flatcc_fb_default_error_out@@Base+0x20>
   2daa8:	b	2c544 <__flatcc_fb_default_error_out@@Base+0x1d8>
   2daac:	cmp	r2, #0
   2dab0:	lslne	r3, r2, #1
   2dab4:	addne	r2, r3, r2, lsl #3
   2dab8:	moveq	r3, #1024	; 0x400
   2dabc:	lslne	r1, r2, #2
   2dac0:	moveq	r1, #20480	; 0x5000
   2dac4:	str	r3, [sl, #28]
   2dac8:	bl	14010 <realloc@plt>
   2dacc:	cmp	r0, #0
   2dad0:	str	r0, [sl, #20]
   2dad4:	beq	2f3bc <__flatcc_fb_default_error_out@@Base+0x3050>
   2dad8:	ldr	r2, [sl, #28]
   2dadc:	add	r1, r0, r5
   2dae0:	add	r2, r2, r2, lsl #2
   2dae4:	add	r0, r0, r2, lsl #2
   2dae8:	str	r0, [sl, #24]
   2daec:	b	2d6a0 <__flatcc_fb_default_error_out@@Base+0x1334>
   2daf0:	cmp	r9, r4
   2daf4:	beq	2debc <__flatcc_fb_default_error_out@@Base+0x1b50>
   2daf8:	ldr	r3, [sl, #32]
   2dafc:	cmp	r3, #0
   2db00:	beq	2debc <__flatcc_fb_default_error_out@@Base+0x1b50>
   2db04:	mov	r8, r9
   2db08:	ldr	r3, [sl, #28]
   2db0c:	ldr	r0, [sl, #20]
   2db10:	ldr	r1, [sl, #40]	; 0x28
   2db14:	add	r2, r3, r3, lsl #2
   2db18:	lsl	r2, r2, #2
   2db1c:	add	ip, r0, r2
   2db20:	cmp	ip, r1
   2db24:	str	ip, [sl, #24]
   2db28:	beq	2de70 <__flatcc_fb_default_error_out@@Base+0x1b04>
   2db2c:	ldr	r3, [sl, #60]	; 0x3c
   2db30:	ldr	r0, [sl, #64]	; 0x40
   2db34:	sub	r3, r4, r3
   2db38:	str	r4, [r1]
   2db3c:	add	r3, r3, #1
   2db40:	sub	r4, r8, r4
   2db44:	add	r2, r1, #20
   2db48:	str	r5, [r1, #16]
   2db4c:	str	r4, [r1, #4]
   2db50:	str	r3, [r1, #12]
   2db54:	str	r0, [r1, #8]
   2db58:	str	r2, [sl, #40]	; 0x28
   2db5c:	b	2da08 <__flatcc_fb_default_error_out@@Base+0x169c>
   2db60:	cmp	r4, r8
   2db64:	beq	2da14 <__flatcc_fb_default_error_out@@Base+0x16a8>
   2db68:	ldr	r3, [sl, #32]
   2db6c:	cmp	r3, #0
   2db70:	beq	2da10 <__flatcc_fb_default_error_out@@Base+0x16a4>
   2db74:	b	2db08 <__flatcc_fb_default_error_out@@Base+0x179c>
   2db78:	add	r4, r8, #1
   2db7c:	cmp	r9, r4
   2db80:	beq	2db90 <__flatcc_fb_default_error_out@@Base+0x1824>
   2db84:	ldrb	r3, [r8, #1]
   2db88:	cmp	r3, #13
   2db8c:	beq	2dbc8 <__flatcc_fb_default_error_out@@Base+0x185c>
   2db90:	ldr	r3, [sl, #64]	; 0x40
   2db94:	str	r4, [sl, #60]	; 0x3c
   2db98:	add	r3, r3, #1
   2db9c:	str	r3, [sl, #64]	; 0x40
   2dba0:	b	2d9b4 <__flatcc_fb_default_error_out@@Base+0x1648>
   2dba4:	add	r8, r8, #2
   2dba8:	str	r2, [sl, #32]
   2dbac:	b	2c544 <__flatcc_fb_default_error_out@@Base+0x1d8>
   2dbb0:	add	r4, r8, #1
   2dbb4:	cmp	r9, r4
   2dbb8:	beq	2db90 <__flatcc_fb_default_error_out@@Base+0x1824>
   2dbbc:	ldrb	r3, [r8, #1]
   2dbc0:	cmp	r3, #10
   2dbc4:	bne	2db90 <__flatcc_fb_default_error_out@@Base+0x1824>
   2dbc8:	add	r4, r8, #2
   2dbcc:	b	2db90 <__flatcc_fb_default_error_out@@Base+0x1824>
   2dbd0:	andeq	r3, r0, sl, lsr sp
   2dbd4:	andeq	r3, r0, sl, lsr #26
   2dbd8:	andeq	r3, r0, fp, lsr #26
   2dbdc:	andeq	r3, r0, sp, lsr lr
   2dbe0:	eorseq	r3, lr, lr, lsr lr
   2dbe4:	andeq	sl, r5, r4, lsr #30
   2dbe8:	ldrbvs	r7, [r0, #-571]!	; 0xfffffdc5
   2dbec:	stmdacc	r9!, {r0, r2, r4, r5, r8, sl, ip, sp, lr}^
   2dbf0:	strbtcc	r6, [lr], #-2357	; 0xfffff6cb
   2dbf4:			; <UNDEFINED> instruction: 0x36697536
   2dbf8:			; <UNDEFINED> instruction: 0x366e6935
   2dbfc:	andeq	r4, r4, r8, lsl r8
   2dc00:			; <UNDEFINED> instruction: 0xfffffc20
   2dc04:	andeq	r3, r0, sp, lsr sp
   2dc08:	mcrvs	6, 3, r6, cr9, cr14, {1}
   2dc0c:			; <UNDEFINED> instruction: 0x676c7535
   2dc10:			; <UNDEFINED> instruction: 0x67747336
   2dc14:	sfmvs	f6, 2, [pc], #-208	; 2db4c <__flatcc_fb_default_error_out@@Base+0x17e0>
   2dc18:	ldrdeq	r4, [r4], -r0
   2dc1c:	andeq	r7, r0, ip, ror ip
   2dc20:	andeq	r3, r0, r6, lsr #26
   2dc24:	strbvs	r7, [r1, #-1077]!	; 0xfffffbcb
   2dc28:	strbvs	r6, [lr, #-2359]!	; 0xfffff6c9
   2dc2c:	strbvs	r6, [pc, #-1078]!	; 2d7fe <__flatcc_fb_default_error_out@@Base+0x1492>
   2dc30:	andeq	fp, r5, r4, lsl #2
   2dc34:			; <UNDEFINED> instruction: 0xfffffc38
   2dc38:	strbtvc	r7, [r9], #-1332	; 0xfffffacc
   2dc3c:	strbtvc	r6, [lr], #-2355	; 0xfffff6cd
   2dc40:	ldrbtvc	r7, [r3], #-1334	; 0xfffffaca
   2dc44:	andeq	ip, r5, r8, lsl ip
   2dc48:	andeq	r2, r0, ip, lsr sp
   2dc4c:	andeq	r2, r0, sp, lsr #26
   2dc50:	andeq	r3, r0, lr, lsr sp
   2dc54:	andeq	r2, r0, lr, lsr #28
   2dc58:	andeq	r3, r0, ip, ror sp
   2dc5c:	andeq	r2, r0, r6, lsr #12
   2dc60:	andeq	r2, r0, fp, lsr #22
   2dc64:	andeq	r3, r0, sl, lsr sl
   2dc68:	andeq	r2, r0, sl, lsr #20
   2dc6c:	andeq	r3, r0, pc, lsr #26
   2dc70:	andeq	r3, r0, ip, lsr sp
   2dc74:	eorseq	r3, sp, ip, lsr ip
   2dc78:	andeq	r3, r0, sp, lsr #28
   2dc7c:	andeq	r3, r0, sp, lsr #26
   2dc80:	rsbcc	r6, ip, #57671680	; 0x3700000
   2dc84:	rsbcc	r6, lr, #868352	; 0xd4000
   2dc88:	rsbcc	r7, r9, #226492416	; 0xd800000
   2dc8c:	ldrbvs	r6, [r4, #-313]!	; 0xfffffec7
   2dc90:	ldrbvs	r7, [r2, #-1076]!	; 0xfffffbcc
   2dc94:	strdeq	ip, [r5], -ip	; <UNPREDICTABLE>
   2dc98:			; <UNDEFINED> instruction: 0xfffffc24
   2dc9c:	eorseq	r3, sp, lr, lsr lr
   2dca0:	andeq	r3, r0, lr, lsr lr
   2dca4:	andeq	r3, r0, ip, lsr ip
   2dca8:	stmdacc	lr!, {r2, r4, r5, r8, fp, sp, lr}^
   2dcac:	andeq	r4, r4, r0, lsr #16
   2dcb0:			; <UNDEFINED> instruction: 0xfffffc3c
   2dcb4:	ldr	r3, [sl, #28]
   2dcb8:	ldr	r0, [sl, #20]
   2dcbc:	ldr	r1, [sl, #40]	; 0x28
   2dcc0:	add	r2, r3, r3, lsl #2
   2dcc4:	lsl	r2, r2, #2
   2dcc8:	add	ip, r0, r2
   2dccc:	cmp	ip, r1
   2dcd0:	str	ip, [sl, #24]
   2dcd4:	beq	2ee18 <__flatcc_fb_default_error_out@@Base+0x2aac>
   2dcd8:	ldr	r3, [sl, #60]	; 0x3c
   2dcdc:	ldr	r0, [sl, #64]	; 0x40
   2dce0:	sub	r3, r8, r3
   2dce4:	add	r3, r3, #1
   2dce8:	add	r2, r1, #20
   2dcec:	mov	ip, #1
   2dcf0:	str	fp, [r1, #16]
   2dcf4:	str	r8, [r1]
   2dcf8:	str	ip, [r1, #4]
   2dcfc:	str	r3, [r1, #12]
   2dd00:	str	r0, [r1, #8]
   2dd04:	str	r2, [sl, #40]	; 0x28
   2dd08:	b	2d9b4 <__flatcc_fb_default_error_out@@Base+0x1648>
   2dd0c:	and	r2, r2, #223	; 0xdf
   2dd10:	cmp	r2, #69	; 0x45
   2dd14:	bne	2cdf0 <__flatcc_fb_default_error_out@@Base+0xa84>
   2dd18:	b	2d440 <__flatcc_fb_default_error_out@@Base+0x10d4>
   2dd1c:	cmp	r2, #0
   2dd20:	lslne	r3, r2, #1
   2dd24:	addne	r2, r3, r2, lsl #3
   2dd28:	moveq	r3, #1024	; 0x400
   2dd2c:	lslne	r1, r2, #2
   2dd30:	moveq	r1, #20480	; 0x5000
   2dd34:	str	r3, [sl, #28]
   2dd38:	bl	14010 <realloc@plt>
   2dd3c:	cmp	r0, #0
   2dd40:	str	r0, [sl, #20]
   2dd44:	beq	2f3bc <__flatcc_fb_default_error_out@@Base+0x3050>
   2dd48:	ldr	r2, [sl, #28]
   2dd4c:	add	r1, r0, r6
   2dd50:	add	r2, r2, r2, lsl #2
   2dd54:	add	r0, r0, r2, lsl #2
   2dd58:	str	r0, [sl, #24]
   2dd5c:	b	2c950 <__flatcc_fb_default_error_out@@Base+0x5e4>
   2dd60:	cmp	fp, #0
   2dd64:	mov	r3, fp
   2dd68:	lslne	r3, fp, #1
   2dd6c:	addne	r1, r3, fp, lsl #3
   2dd70:	moveq	r3, #1024	; 0x400
   2dd74:	lslne	r1, r1, #2
   2dd78:	moveq	r1, #20480	; 0x5000
   2dd7c:	str	r3, [sl, #28]
   2dd80:	bl	14010 <realloc@plt>
   2dd84:	cmp	r0, #0
   2dd88:	str	r0, [sl, #20]
   2dd8c:	beq	2f3bc <__flatcc_fb_default_error_out@@Base+0x3050>
   2dd90:	ldr	r3, [sl, #28]
   2dd94:	mov	r2, r3
   2dd98:	add	r3, r0, r7
   2dd9c:	add	fp, r2, r2, lsl #2
   2dda0:	add	r0, r0, fp, lsl #2
   2dda4:	str	r0, [sl, #24]
   2dda8:	b	2d3e4 <__flatcc_fb_default_error_out@@Base+0x1078>
   2ddac:	cmp	r2, #0
   2ddb0:	lslne	r3, r2, #1
   2ddb4:	addne	r2, r3, r2, lsl #3
   2ddb8:	moveq	r3, #1024	; 0x400
   2ddbc:	lslne	r1, r2, #2
   2ddc0:	moveq	r1, #20480	; 0x5000
   2ddc4:	str	r3, [sl, #28]
   2ddc8:	bl	14010 <realloc@plt>
   2ddcc:	cmp	r0, #0
   2ddd0:	str	r0, [sl, #20]
   2ddd4:	beq	2f3bc <__flatcc_fb_default_error_out@@Base+0x3050>
   2ddd8:	ldr	r2, [sl, #28]
   2dddc:	add	r1, r0, r5
   2dde0:	add	r2, r2, r2, lsl #2
   2dde4:	add	r0, r0, r2, lsl #2
   2dde8:	str	r0, [sl, #24]
   2ddec:	b	2ce1c <__flatcc_fb_default_error_out@@Base+0xab0>
   2ddf0:	ldr	r2, [sl, #28]
   2ddf4:	ldr	r0, [sl, #20]
   2ddf8:	ldr	r1, [sl, #40]	; 0x28
   2ddfc:	add	r5, r2, r2, lsl #2
   2de00:	add	r4, r8, #2
   2de04:	lsl	r5, r5, #2
   2de08:	add	r3, r0, r5
   2de0c:	cmp	r3, r1
   2de10:	str	r3, [sl, #24]
   2de14:	beq	2e8c0 <__flatcc_fb_default_error_out@@Base+0x2554>
   2de18:	ldr	r3, [sl, #60]	; 0x3c
   2de1c:	ldr	ip, [sl, #64]	; 0x40
   2de20:	sub	r3, r8, r3
   2de24:	add	r3, r3, #1
   2de28:	str	r8, [r1]
   2de2c:	ldr	r0, [pc, #-484]	; 2dc50 <__flatcc_fb_default_error_out@@Base+0x18e4>
   2de30:	mov	r8, r4
   2de34:	str	r3, [r1, #12]
   2de38:	mov	r2, #2
   2de3c:	b	2d1c0 <__flatcc_fb_default_error_out@@Base+0xe54>
   2de40:	add	r3, r8, #2
   2de44:	cmp	r9, r3
   2de48:	beq	2de58 <__flatcc_fb_default_error_out@@Base+0x1aec>
   2de4c:	ldrb	r2, [r8, #2]
   2de50:	cmp	r2, #46	; 0x2e
   2de54:	beq	2efb8 <__flatcc_fb_default_error_out@@Base+0x2c4c>
   2de58:	mov	r2, r8
   2de5c:	ldr	r1, [pc, #-528]	; 2dc54 <__flatcc_fb_default_error_out@@Base+0x18e8>
   2de60:	mov	r0, sl
   2de64:	mov	r8, r3
   2de68:	bl	2c38c <__flatcc_fb_default_error_out@@Base+0x20>
   2de6c:	b	2c544 <__flatcc_fb_default_error_out@@Base+0x1d8>
   2de70:	cmp	r3, #0
   2de74:	lslne	ip, r3, #1
   2de78:	addne	r3, ip, r3, lsl #3
   2de7c:	moveq	ip, r6
   2de80:	lslne	r1, r3, #2
   2de84:	moveq	r1, r7
   2de88:	str	ip, [sl, #28]
   2de8c:	str	r2, [sp, #4]
   2de90:	bl	14010 <realloc@plt>
   2de94:	cmp	r0, #0
   2de98:	str	r0, [sl, #20]
   2de9c:	beq	2f3bc <__flatcc_fb_default_error_out@@Base+0x3050>
   2dea0:	ldr	r3, [sl, #28]
   2dea4:	ldr	r2, [sp, #4]
   2dea8:	add	r3, r3, r3, lsl #2
   2deac:	add	r1, r0, r2
   2deb0:	add	r0, r0, r3, lsl #2
   2deb4:	str	r0, [sl, #24]
   2deb8:	b	2db2c <__flatcc_fb_default_error_out@@Base+0x17c0>
   2debc:	mov	r8, r9
   2dec0:	ldr	ip, [sl, #28]
   2dec4:	ldr	r0, [sl, #20]
   2dec8:	ldr	r3, [sl, #40]	; 0x28
   2decc:	add	r4, ip, ip, lsl #2
   2ded0:	lsl	r4, r4, #2
   2ded4:	add	r2, r0, r4
   2ded8:	cmp	r2, r3
   2dedc:	str	r2, [sl, #24]
   2dee0:	mov	r5, r4
   2dee4:	beq	2ed68 <__flatcc_fb_default_error_out@@Base+0x29fc>
   2dee8:	ldr	r1, [sl, #60]	; 0x3c
   2deec:	ldr	r6, [sl, #64]	; 0x40
   2def0:	sub	r1, r8, r1
   2def4:	add	r1, r1, #1
   2def8:	mov	r4, #27
   2defc:	str	r1, [r3, #12]
   2df00:	mov	lr, #0
   2df04:	add	r1, r3, #20
   2df08:	str	r6, [r3, #8]
   2df0c:	str	r4, [r3, #16]
   2df10:	str	r8, [r3]
   2df14:	str	lr, [r3, #4]
   2df18:	mov	r6, r8
   2df1c:	str	r1, [sl, #40]	; 0x28
   2df20:	mov	r4, #7
   2df24:	b	2c868 <__flatcc_fb_default_error_out@@Base+0x4fc>
   2df28:	add	r5, r2, r2, lsl #2
   2df2c:	ldr	r3, [sl, #40]	; 0x28
   2df30:	lsl	r5, r5, #2
   2df34:	add	r1, r0, r5
   2df38:	cmp	r1, r3
   2df3c:	add	r4, r8, #2
   2df40:	str	r1, [sl, #24]
   2df44:	beq	2ef30 <__flatcc_fb_default_error_out@@Base+0x2bc4>
   2df48:	ldr	r2, [sl, #60]	; 0x3c
   2df4c:	ldr	r0, [sl, #64]	; 0x40
   2df50:	sub	r2, r8, r2
   2df54:	str	r8, [r3]
   2df58:	sub	r8, r4, r8
   2df5c:	add	r2, r2, #1
   2df60:	str	r8, [r3, #4]
   2df64:	ldr	r1, [pc, #-788]	; 2dc58 <__flatcc_fb_default_error_out@@Base+0x18ec>
   2df68:	b	2d510 <__flatcc_fb_default_error_out@@Base+0x11a4>
   2df6c:	add	r6, r2, r2, lsl #2
   2df70:	ldr	ip, [sl, #40]	; 0x28
   2df74:	lsl	r6, r6, #2
   2df78:	add	r3, r0, r6
   2df7c:	cmp	r3, ip
   2df80:	add	r4, r8, #2
   2df84:	str	r3, [sl, #24]
   2df88:	mov	r5, r6
   2df8c:	beq	2eb28 <__flatcc_fb_default_error_out@@Base+0x27bc>
   2df90:	ldr	r1, [sl, #60]	; 0x3c
   2df94:	ldr	r6, [sl, #64]	; 0x40
   2df98:	sub	r1, r8, r1
   2df9c:	add	r1, r1, #1
   2dfa0:	ldr	lr, [pc, #-844]	; 2dc5c <__flatcc_fb_default_error_out@@Base+0x18f0>
   2dfa4:	str	r1, [ip, #12]
   2dfa8:	sub	r7, r4, r8
   2dfac:	add	r1, ip, #20
   2dfb0:	str	r8, [ip]
   2dfb4:	str	r6, [ip, #8]
   2dfb8:	str	lr, [ip, #16]
   2dfbc:	str	r7, [ip, #4]
   2dfc0:	str	r1, [sl, #40]	; 0x28
   2dfc4:	b	2ce90 <__flatcc_fb_default_error_out@@Base+0xb24>
   2dfc8:	ldr	r2, [sl, #28]
   2dfcc:	ldr	r0, [sl, #20]
   2dfd0:	ldr	r1, [sl, #40]	; 0x28
   2dfd4:	add	r5, r2, r2, lsl #2
   2dfd8:	add	r4, r8, #2
   2dfdc:	lsl	r5, r5, #2
   2dfe0:	add	r3, r0, r5
   2dfe4:	cmp	r3, r1
   2dfe8:	str	r3, [sl, #24]
   2dfec:	beq	2ec0c <__flatcc_fb_default_error_out@@Base+0x28a0>
   2dff0:	ldr	r3, [sl, #60]	; 0x3c
   2dff4:	ldr	ip, [sl, #64]	; 0x40
   2dff8:	sub	r3, r8, r3
   2dffc:	add	r3, r3, #1
   2e000:	str	r8, [r1]
   2e004:	ldr	r0, [pc, #-940]	; 2dc60 <__flatcc_fb_default_error_out@@Base+0x18f4>
   2e008:	mov	r8, r4
   2e00c:	str	r3, [r1, #12]
   2e010:	mov	r2, #2
   2e014:	b	2d1c0 <__flatcc_fb_default_error_out@@Base+0xe54>
   2e018:	add	r3, r8, #2
   2e01c:	cmp	r9, r3
   2e020:	beq	2e030 <__flatcc_fb_default_error_out@@Base+0x1cc4>
   2e024:	ldrb	r2, [r8, #2]
   2e028:	cmp	r2, #61	; 0x3d
   2e02c:	beq	2f208 <__flatcc_fb_default_error_out@@Base+0x2e9c>
   2e030:	mov	r2, r8
   2e034:	ldr	r1, [pc, #-984]	; 2dc64 <__flatcc_fb_default_error_out@@Base+0x18f8>
   2e038:	mov	r0, sl
   2e03c:	mov	r8, r3
   2e040:	bl	2c38c <__flatcc_fb_default_error_out@@Base+0x20>
   2e044:	b	2c544 <__flatcc_fb_default_error_out@@Base+0x1d8>
   2e048:	ldr	r2, [sl, #28]
   2e04c:	ldr	r0, [sl, #20]
   2e050:	ldr	r1, [sl, #40]	; 0x28
   2e054:	add	r4, r2, r2, lsl #2
   2e058:	lsl	r4, r4, #2
   2e05c:	add	r3, r0, r4
   2e060:	cmp	r3, r1
   2e064:	str	r3, [sl, #24]
   2e068:	beq	2e98c <__flatcc_fb_default_error_out@@Base+0x2620>
   2e06c:	ldr	r3, [sl, #60]	; 0x3c
   2e070:	ldr	ip, [sl, #64]	; 0x40
   2e074:	sub	r3, r8, r3
   2e078:	ldr	r0, [pc, #-1048]	; 2dc68 <__flatcc_fb_default_error_out@@Base+0x18fc>
   2e07c:	b	2cc90 <__flatcc_fb_default_error_out@@Base+0x924>
   2e080:	mov	r2, r8
   2e084:	mov	r3, r4
   2e088:	mov	r1, #10
   2e08c:	mov	r0, sl
   2e090:	mov	r8, r4
   2e094:	bl	2c38c <__flatcc_fb_default_error_out@@Base+0x20>
   2e098:	b	2c544 <__flatcc_fb_default_error_out@@Base+0x1d8>
   2e09c:	add	r5, r8, #2
   2e0a0:	cmp	r9, r5
   2e0a4:	moveq	r3, #0
   2e0a8:	beq	2e0c0 <__flatcc_fb_default_error_out@@Base+0x1d54>
   2e0ac:	ldrb	r3, [r8, #2]
   2e0b0:	cmp	r3, #33	; 0x21
   2e0b4:	cmpne	r3, #47	; 0x2f
   2e0b8:	moveq	r3, #1
   2e0bc:	movne	r3, #0
   2e0c0:	add	r5, r5, r3
   2e0c4:	sub	r8, r5, r8
   2e0c8:	cmp	r8, #3
   2e0cc:	moveq	r3, #1
   2e0d0:	movne	r3, #0
   2e0d4:	str	r3, [sl, #32]
   2e0d8:	beq	2eb6c <__flatcc_fb_default_error_out@@Base+0x2800>
   2e0dc:	ldr	r3, [pc, #-1076]	; 2dcb0 <__flatcc_fb_default_error_out@@Base+0x1944>
   2e0e0:	mov	r7, #1
   2e0e4:	sub	r4, r5, #1
   2e0e8:	b	2e100 <__flatcc_fb_default_error_out@@Base+0x1d94>
   2e0ec:	ldrb	r2, [r4, #1]
   2e0f0:	cmp	r2, #127	; 0x7f
   2e0f4:	cmpne	r2, #31
   2e0f8:	bls	2e208 <__flatcc_fb_default_error_out@@Base+0x1e9c>
   2e0fc:	mov	r4, r8
   2e100:	add	r8, r4, #1
   2e104:	cmp	r9, r8
   2e108:	bne	2e0ec <__flatcc_fb_default_error_out@@Base+0x1d80>
   2e10c:	cmp	r9, r5
   2e110:	beq	2e3c0 <__flatcc_fb_default_error_out@@Base+0x2054>
   2e114:	ldr	r2, [sl, #32]
   2e118:	cmp	r2, #0
   2e11c:	beq	2e344 <__flatcc_fb_default_error_out@@Base+0x1fd8>
   2e120:	mov	r8, r9
   2e124:	ldr	fp, [sl, #28]
   2e128:	ldr	r0, [sl, #20]
   2e12c:	ldr	r2, [sl, #40]	; 0x28
   2e130:	add	r6, fp, fp, lsl #2
   2e134:	lsl	r6, r6, #2
   2e138:	add	r1, r0, r6
   2e13c:	cmp	r1, r2
   2e140:	str	r1, [sl, #24]
   2e144:	beq	2e2ac <__flatcc_fb_default_error_out@@Base+0x1f40>
   2e148:	ldr	r1, [sl, #60]	; 0x3c
   2e14c:	ldr	ip, [sl, #64]	; 0x40
   2e150:	sub	r1, r5, r1
   2e154:	str	r5, [r2]
   2e158:	add	r1, r1, #1
   2e15c:	sub	r5, r8, r5
   2e160:	add	r0, r2, #20
   2e164:	cmp	r9, r8
   2e168:	str	r3, [r2, #16]
   2e16c:	str	r5, [r2, #4]
   2e170:	str	r1, [r2, #12]
   2e174:	str	ip, [r2, #8]
   2e178:	str	r0, [sl, #40]	; 0x28
   2e17c:	beq	2e348 <__flatcc_fb_default_error_out@@Base+0x1fdc>
   2e180:	ldrb	r2, [r8]
   2e184:	cmp	r2, #0
   2e188:	beq	2e3c4 <__flatcc_fb_default_error_out@@Base+0x2058>
   2e18c:	cmp	r2, #13
   2e190:	cmpne	r2, #10
   2e194:	beq	2e3b4 <__flatcc_fb_default_error_out@@Base+0x2048>
   2e198:	cmp	r2, #9
   2e19c:	cmpne	r2, #32
   2e1a0:	add	r5, r4, #2
   2e1a4:	bne	2e220 <__flatcc_fb_default_error_out@@Base+0x1eb4>
   2e1a8:	ldr	r2, [sl, #32]
   2e1ac:	cmp	r2, #0
   2e1b0:	beq	2e0e4 <__flatcc_fb_default_error_out@@Base+0x1d78>
   2e1b4:	ldr	fp, [sl, #28]
   2e1b8:	ldr	r0, [sl, #20]
   2e1bc:	ldr	r2, [sl, #40]	; 0x28
   2e1c0:	add	r4, fp, fp, lsl #2
   2e1c4:	lsl	r4, r4, #2
   2e1c8:	add	r1, r0, r4
   2e1cc:	cmp	r1, r2
   2e1d0:	str	r1, [sl, #24]
   2e1d4:	beq	2e2f8 <__flatcc_fb_default_error_out@@Base+0x1f8c>
   2e1d8:	ldr	r1, [sl, #60]	; 0x3c
   2e1dc:	ldr	ip, [sl, #64]	; 0x40
   2e1e0:	sub	r1, r8, r1
   2e1e4:	add	r1, r1, #1
   2e1e8:	str	r3, [r2, #16]
   2e1ec:	add	r0, r2, #20
   2e1f0:	str	r8, [r2]
   2e1f4:	str	r7, [r2, #4]
   2e1f8:	str	r1, [r2, #12]
   2e1fc:	str	ip, [r2, #8]
   2e200:	str	r0, [sl, #40]	; 0x28
   2e204:	b	2e0e4 <__flatcc_fb_default_error_out@@Base+0x1d78>
   2e208:	cmp	r5, r8
   2e20c:	beq	2e180 <__flatcc_fb_default_error_out@@Base+0x1e14>
   2e210:	ldr	r2, [sl, #32]
   2e214:	cmp	r2, #0
   2e218:	beq	2e180 <__flatcc_fb_default_error_out@@Base+0x1e14>
   2e21c:	b	2e124 <__flatcc_fb_default_error_out@@Base+0x1db8>
   2e220:	ldr	fp, [sl, #28]
   2e224:	ldr	r0, [sl, #20]
   2e228:	ldr	r2, [sl, #40]	; 0x28
   2e22c:	add	r4, fp, fp, lsl #2
   2e230:	lsl	r4, r4, #2
   2e234:	add	r1, r0, r4
   2e238:	cmp	r1, r2
   2e23c:	str	r1, [sl, #24]
   2e240:	beq	2e260 <__flatcc_fb_default_error_out@@Base+0x1ef4>
   2e244:	ldr	r1, [sl, #60]	; 0x3c
   2e248:	mov	r0, #7
   2e24c:	sub	r1, r8, r1
   2e250:	ldr	ip, [sl, #64]	; 0x40
   2e254:	add	r1, r1, #1
   2e258:	str	r0, [r2, #16]
   2e25c:	b	2e1ec <__flatcc_fb_default_error_out@@Base+0x1e80>
   2e260:	cmp	fp, #0
   2e264:	lslne	r2, fp, #1
   2e268:	addne	r1, r2, fp, lsl #3
   2e26c:	moveq	r2, #1024	; 0x400
   2e270:	lslne	r1, r1, #2
   2e274:	moveq	r1, #20480	; 0x5000
   2e278:	str	r2, [sl, #28]
   2e27c:	str	r3, [sp, #4]
   2e280:	bl	14010 <realloc@plt>
   2e284:	cmp	r0, #0
   2e288:	str	r0, [sl, #20]
   2e28c:	beq	2f3bc <__flatcc_fb_default_error_out@@Base+0x3050>
   2e290:	ldr	fp, [sl, #28]
   2e294:	add	r2, r0, r4
   2e298:	ldr	r3, [sp, #4]
   2e29c:	add	fp, fp, fp, lsl #2
   2e2a0:	add	r0, r0, fp, lsl #2
   2e2a4:	str	r0, [sl, #24]
   2e2a8:	b	2e244 <__flatcc_fb_default_error_out@@Base+0x1ed8>
   2e2ac:	cmp	fp, #0
   2e2b0:	lslne	r2, fp, #1
   2e2b4:	addne	r1, r2, fp, lsl #3
   2e2b8:	moveq	r2, #1024	; 0x400
   2e2bc:	lslne	r1, r1, #2
   2e2c0:	moveq	r1, #20480	; 0x5000
   2e2c4:	str	r2, [sl, #28]
   2e2c8:	str	r3, [sp, #4]
   2e2cc:	bl	14010 <realloc@plt>
   2e2d0:	cmp	r0, #0
   2e2d4:	str	r0, [sl, #20]
   2e2d8:	beq	2f3bc <__flatcc_fb_default_error_out@@Base+0x3050>
   2e2dc:	ldr	fp, [sl, #28]
   2e2e0:	add	r2, r0, r6
   2e2e4:	ldr	r3, [sp, #4]
   2e2e8:	add	r1, fp, fp, lsl #2
   2e2ec:	add	r0, r0, r1, lsl #2
   2e2f0:	str	r0, [sl, #24]
   2e2f4:	b	2e148 <__flatcc_fb_default_error_out@@Base+0x1ddc>
   2e2f8:	cmp	fp, #0
   2e2fc:	lslne	r2, fp, #1
   2e300:	addne	r1, r2, fp, lsl #3
   2e304:	moveq	r2, #1024	; 0x400
   2e308:	lslne	r1, r1, #2
   2e30c:	moveq	r1, #20480	; 0x5000
   2e310:	str	r2, [sl, #28]
   2e314:	str	r3, [sp, #4]
   2e318:	bl	14010 <realloc@plt>
   2e31c:	cmp	r0, #0
   2e320:	str	r0, [sl, #20]
   2e324:	beq	2f3bc <__flatcc_fb_default_error_out@@Base+0x3050>
   2e328:	ldr	fp, [sl, #28]
   2e32c:	add	r2, r0, r4
   2e330:	ldr	r3, [sp, #4]
   2e334:	add	fp, fp, fp, lsl #2
   2e338:	add	r0, r0, fp, lsl #2
   2e33c:	str	r0, [sl, #24]
   2e340:	b	2e1d8 <__flatcc_fb_default_error_out@@Base+0x1e6c>
   2e344:	ldr	fp, [sl, #28]
   2e348:	mov	r8, r9
   2e34c:	add	r3, fp, fp, lsl #2
   2e350:	ldr	r0, [sl, #20]
   2e354:	lsl	r4, r3, #2
   2e358:	ldr	lr, [sl, #40]	; 0x28
   2e35c:	add	r2, r0, r4
   2e360:	cmp	r2, lr
   2e364:	str	r2, [sl, #24]
   2e368:	mov	r5, r4
   2e36c:	mov	ip, fp
   2e370:	beq	2e3e8 <__flatcc_fb_default_error_out@@Base+0x207c>
   2e374:	ldr	r3, [sl, #60]	; 0x3c
   2e378:	ldr	r1, [sl, #64]	; 0x40
   2e37c:	sub	r3, r8, r3
   2e380:	add	r3, r3, #1
   2e384:	mov	r4, #27
   2e388:	str	r3, [lr, #12]
   2e38c:	str	r1, [lr, #8]
   2e390:	mov	r3, #0
   2e394:	add	r1, lr, #20
   2e398:	str	r4, [lr, #16]
   2e39c:	str	r8, [lr]
   2e3a0:	str	r3, [lr, #4]
   2e3a4:	mov	r6, r8
   2e3a8:	str	r1, [sl, #40]	; 0x28
   2e3ac:	mov	r4, #8
   2e3b0:	b	2c868 <__flatcc_fb_default_error_out@@Base+0x4fc>
   2e3b4:	mov	r3, #0
   2e3b8:	str	r3, [sl, #32]
   2e3bc:	b	2c544 <__flatcc_fb_default_error_out@@Base+0x1d8>
   2e3c0:	mov	r8, r9
   2e3c4:	ldr	fp, [sl, #28]
   2e3c8:	b	2e34c <__flatcc_fb_default_error_out@@Base+0x1fe0>
   2e3cc:	add	r3, r8, #2
   2e3d0:	mov	r2, r8
   2e3d4:	ldr	r1, [pc, #-1904]	; 2dc6c <__flatcc_fb_default_error_out@@Base+0x1900>
   2e3d8:	mov	r0, sl
   2e3dc:	mov	r8, r3
   2e3e0:	bl	2c38c <__flatcc_fb_default_error_out@@Base+0x20>
   2e3e4:	b	2c544 <__flatcc_fb_default_error_out@@Base+0x1d8>
   2e3e8:	cmp	fp, #0
   2e3ec:	lslne	r3, fp, #1
   2e3f0:	addne	r1, r3, fp, lsl #3
   2e3f4:	moveq	r3, #1024	; 0x400
   2e3f8:	lslne	r1, r1, #2
   2e3fc:	moveq	r1, #20480	; 0x5000
   2e400:	str	r3, [sl, #28]
   2e404:	bl	14010 <realloc@plt>
   2e408:	cmp	r0, #0
   2e40c:	str	r0, [sl, #20]
   2e410:	beq	2f3bc <__flatcc_fb_default_error_out@@Base+0x3050>
   2e414:	ldr	ip, [sl, #28]
   2e418:	add	lr, r0, r4
   2e41c:	add	r3, ip, ip, lsl #2
   2e420:	lsl	r3, r3, #2
   2e424:	add	r2, r0, r3
   2e428:	mov	r5, r3
   2e42c:	str	r2, [sl, #24]
   2e430:	b	2e374 <__flatcc_fb_default_error_out@@Base+0x2008>
   2e434:	add	r3, r8, #2
   2e438:	mov	r2, r8
   2e43c:	ldr	r1, [pc, #-2004]	; 2dc70 <__flatcc_fb_default_error_out@@Base+0x1904>
   2e440:	mov	r0, sl
   2e444:	mov	r8, r3
   2e448:	bl	2c38c <__flatcc_fb_default_error_out@@Base+0x20>
   2e44c:	b	2c544 <__flatcc_fb_default_error_out@@Base+0x1d8>
   2e450:	add	r3, r8, #2
   2e454:	cmp	r9, r3
   2e458:	beq	2e888 <__flatcc_fb_default_error_out@@Base+0x251c>
   2e45c:	ldrb	r2, [r8, #2]
   2e460:	cmp	r2, #60	; 0x3c
   2e464:	beq	2ecd8 <__flatcc_fb_default_error_out@@Base+0x296c>
   2e468:	cmp	r2, #61	; 0x3d
   2e46c:	bne	2e888 <__flatcc_fb_default_error_out@@Base+0x251c>
   2e470:	add	r3, r8, #3
   2e474:	mov	r2, r8
   2e478:	ldr	r1, [pc, #-2060]	; 2dc74 <__flatcc_fb_default_error_out@@Base+0x1908>
   2e47c:	mov	r0, sl
   2e480:	mov	r8, r3
   2e484:	bl	2c38c <__flatcc_fb_default_error_out@@Base+0x20>
   2e488:	b	2c544 <__flatcc_fb_default_error_out@@Base+0x1d8>
   2e48c:	add	r3, r8, #2
   2e490:	mov	r2, r8
   2e494:	ldr	r1, [pc, #-2084]	; 2dc78 <__flatcc_fb_default_error_out@@Base+0x190c>
   2e498:	mov	r0, sl
   2e49c:	mov	r8, r3
   2e4a0:	bl	2c38c <__flatcc_fb_default_error_out@@Base+0x20>
   2e4a4:	b	2c544 <__flatcc_fb_default_error_out@@Base+0x1d8>
   2e4a8:	add	r3, r8, #2
   2e4ac:	mov	r2, r8
   2e4b0:	ldr	r1, [pc, #-2108]	; 2dc7c <__flatcc_fb_default_error_out@@Base+0x1910>
   2e4b4:	mov	r0, sl
   2e4b8:	mov	r8, r3
   2e4bc:	bl	2c38c <__flatcc_fb_default_error_out@@Base+0x20>
   2e4c0:	b	2c544 <__flatcc_fb_default_error_out@@Base+0x1d8>
   2e4c4:	cmp	fp, #0
   2e4c8:	mov	r3, fp
   2e4cc:	lslne	r3, fp, #1
   2e4d0:	addne	r1, r3, fp, lsl #3
   2e4d4:	moveq	r3, #1024	; 0x400
   2e4d8:	lslne	r1, r1, #2
   2e4dc:	moveq	r1, #20480	; 0x5000
   2e4e0:	str	r3, [sl, #28]
   2e4e4:	bl	14010 <realloc@plt>
   2e4e8:	cmp	r0, #0
   2e4ec:	str	r0, [sl, #20]
   2e4f0:	beq	2f3bc <__flatcc_fb_default_error_out@@Base+0x3050>
   2e4f4:	ldr	r2, [sl, #28]
   2e4f8:	add	lr, r0, r5
   2e4fc:	mov	fp, r2
   2e500:	lsl	ip, r2, #2
   2e504:	add	r2, ip, r2
   2e508:	add	r3, r0, r2, lsl #2
   2e50c:	str	r3, [sl, #24]
   2e510:	b	2c9b8 <__flatcc_fb_default_error_out@@Base+0x64c>
   2e514:	cmp	r2, #0
   2e518:	lslne	r3, r2, #1
   2e51c:	addne	r2, r3, r2, lsl #3
   2e520:	moveq	r3, #1024	; 0x400
   2e524:	lslne	r1, r2, #2
   2e528:	moveq	r1, #20480	; 0x5000
   2e52c:	str	r3, [sl, #28]
   2e530:	bl	14010 <realloc@plt>
   2e534:	cmp	r0, #0
   2e538:	str	r0, [sl, #20]
   2e53c:	beq	2f3bc <__flatcc_fb_default_error_out@@Base+0x3050>
   2e540:	ldr	r2, [sl, #28]
   2e544:	add	r1, r0, r7
   2e548:	add	r2, r2, r2, lsl #2
   2e54c:	add	r0, r0, r2, lsl #2
   2e550:	str	r0, [sl, #24]
   2e554:	b	2d0f8 <__flatcc_fb_default_error_out@@Base+0xd8c>
   2e558:	cmp	r3, #0
   2e55c:	lslne	r2, r3, #1
   2e560:	addne	r3, r2, r3, lsl #3
   2e564:	moveq	r2, #1024	; 0x400
   2e568:	lslne	r1, r3, #2
   2e56c:	moveq	r1, #20480	; 0x5000
   2e570:	str	r2, [sl, #28]
   2e574:	bl	14010 <realloc@plt>
   2e578:	cmp	r0, #0
   2e57c:	str	r0, [sl, #20]
   2e580:	beq	2f3bc <__flatcc_fb_default_error_out@@Base+0x3050>
   2e584:	ldr	r1, [sl, #28]
   2e588:	add	r3, r0, r4
   2e58c:	mov	r2, r3
   2e590:	add	r1, r1, r1, lsl #2
   2e594:	str	r3, [sl, #40]	; 0x28
   2e598:	add	r0, r0, r1, lsl #2
   2e59c:	str	r0, [sl, #24]
   2e5a0:	b	2c7e4 <__flatcc_fb_default_error_out@@Base+0x478>
   2e5a4:	mov	r2, r8
   2e5a8:	mov	r3, r5
   2e5ac:	mov	r1, #5
   2e5b0:	mov	r0, sl
   2e5b4:	mov	r8, r5
   2e5b8:	bl	2c38c <__flatcc_fb_default_error_out@@Base+0x20>
   2e5bc:	b	2c544 <__flatcc_fb_default_error_out@@Base+0x1d8>
   2e5c0:	ldrb	r4, [r5]
   2e5c4:	mov	r5, r2
   2e5c8:	b	2d04c <__flatcc_fb_default_error_out@@Base+0xce0>
   2e5cc:	cmp	r2, #0
   2e5d0:	lslne	r3, r2, #1
   2e5d4:	addne	r2, r3, r2, lsl #3
   2e5d8:	moveq	r3, #1024	; 0x400
   2e5dc:	lslne	r1, r2, #2
   2e5e0:	moveq	r1, #20480	; 0x5000
   2e5e4:	str	r3, [sl, #28]
   2e5e8:	bl	14010 <realloc@plt>
   2e5ec:	cmp	r0, #0
   2e5f0:	str	r0, [sl, #20]
   2e5f4:	beq	2f3bc <__flatcc_fb_default_error_out@@Base+0x3050>
   2e5f8:	ldr	r2, [sl, #28]
   2e5fc:	add	r1, r0, r4
   2e600:	add	r2, r2, r2, lsl #2
   2e604:	add	r2, r0, r2, lsl #2
   2e608:	str	r2, [sl, #24]
   2e60c:	b	2d19c <__flatcc_fb_default_error_out@@Base+0xe30>
   2e610:	cmp	fp, #0
   2e614:	lslne	r3, fp, #1
   2e618:	addne	r1, r3, fp, lsl #3
   2e61c:	moveq	r3, #1024	; 0x400
   2e620:	lslne	r1, r1, #2
   2e624:	moveq	r1, #20480	; 0x5000
   2e628:	str	r3, [sl, #28]
   2e62c:	str	r2, [sp, #4]
   2e630:	bl	14010 <realloc@plt>
   2e634:	cmp	r0, #0
   2e638:	str	r0, [sl, #20]
   2e63c:	beq	2f3bc <__flatcc_fb_default_error_out@@Base+0x3050>
   2e640:	ldr	fp, [sl, #28]
   2e644:	add	r3, r0, r7
   2e648:	ldr	r6, [sl, #64]	; 0x40
   2e64c:	lsl	ip, fp, #2
   2e650:	add	lr, ip, fp
   2e654:	ldr	r2, [sp, #4]
   2e658:	add	r1, r0, lr, lsl #2
   2e65c:	str	r1, [sl, #24]
   2e660:	ldr	r1, [sl, #60]	; 0x3c
   2e664:	b	2d3a8 <__flatcc_fb_default_error_out@@Base+0x103c>
   2e668:	cmp	r2, #0
   2e66c:	lslne	r3, r2, #1
   2e670:	addne	r2, r3, r2, lsl #3
   2e674:	moveq	r3, #1024	; 0x400
   2e678:	lslne	r1, r2, #2
   2e67c:	moveq	r1, #20480	; 0x5000
   2e680:	str	r3, [sl, #28]
   2e684:	bl	14010 <realloc@plt>
   2e688:	cmp	r0, #0
   2e68c:	str	r0, [sl, #20]
   2e690:	beq	2f3bc <__flatcc_fb_default_error_out@@Base+0x3050>
   2e694:	ldr	r2, [sl, #28]
   2e698:	add	r1, r0, r5
   2e69c:	add	r2, r2, r2, lsl #2
   2e6a0:	add	r0, r0, r2, lsl #2
   2e6a4:	str	r0, [sl, #24]
   2e6a8:	b	2c79c <__flatcc_fb_default_error_out@@Base+0x430>
   2e6ac:	cmp	fp, #0
   2e6b0:	mov	r3, fp
   2e6b4:	lslne	r3, fp, #1
   2e6b8:	addne	r1, r3, fp, lsl #3
   2e6bc:	moveq	r3, #1024	; 0x400
   2e6c0:	lslne	r1, r1, #2
   2e6c4:	moveq	r1, #20480	; 0x5000
   2e6c8:	str	r3, [sl, #28]
   2e6cc:	bl	14010 <realloc@plt>
   2e6d0:	cmp	r0, #0
   2e6d4:	str	r0, [sl, #20]
   2e6d8:	beq	2f3bc <__flatcc_fb_default_error_out@@Base+0x3050>
   2e6dc:	ldr	r3, [sl, #28]
   2e6e0:	mov	r2, r3
   2e6e4:	add	r3, r0, r7
   2e6e8:	add	fp, r2, r2, lsl #2
   2e6ec:	add	r0, r0, fp, lsl #2
   2e6f0:	str	r0, [sl, #24]
   2e6f4:	b	2d4f0 <__flatcc_fb_default_error_out@@Base+0x1184>
   2e6f8:	cmp	r2, #0
   2e6fc:	lslne	r3, r2, #1
   2e700:	addne	r2, r3, r2, lsl #3
   2e704:	moveq	r3, #1024	; 0x400
   2e708:	lslne	r1, r2, #2
   2e70c:	moveq	r1, #20480	; 0x5000
   2e710:	str	r3, [sl, #28]
   2e714:	bl	14010 <realloc@plt>
   2e718:	cmp	r0, #0
   2e71c:	str	r0, [sl, #20]
   2e720:	beq	2f3bc <__flatcc_fb_default_error_out@@Base+0x3050>
   2e724:	ldr	r2, [sl, #28]
   2e728:	add	r1, r0, r5
   2e72c:	add	r2, r2, r2, lsl #2
   2e730:	add	r0, r0, r2, lsl #2
   2e734:	str	r0, [sl, #24]
   2e738:	b	2d228 <__flatcc_fb_default_error_out@@Base+0xebc>
   2e73c:	cmp	r2, #0
   2e740:	lslne	r3, r2, #1
   2e744:	addne	r2, r3, r2, lsl #3
   2e748:	moveq	r3, #1024	; 0x400
   2e74c:	lslne	r1, r2, #2
   2e750:	moveq	r1, #20480	; 0x5000
   2e754:	str	r3, [sl, #28]
   2e758:	bl	14010 <realloc@plt>
   2e75c:	cmp	r0, #0
   2e760:	str	r0, [sl, #20]
   2e764:	beq	2f3bc <__flatcc_fb_default_error_out@@Base+0x3050>
   2e768:	ldr	r2, [sl, #28]
   2e76c:	add	r1, r0, r5
   2e770:	add	r2, r2, r2, lsl #2
   2e774:	add	r0, r0, r2, lsl #2
   2e778:	str	r0, [sl, #24]
   2e77c:	b	2ce9c <__flatcc_fb_default_error_out@@Base+0xb30>
   2e780:	add	r3, r8, #2
   2e784:	mov	r2, r8
   2e788:	orr	r1, r4, #15616	; 0x3d00
   2e78c:	mov	r0, sl
   2e790:	mov	r8, r3
   2e794:	bl	2c38c <__flatcc_fb_default_error_out@@Base+0x20>
   2e798:	b	2c544 <__flatcc_fb_default_error_out@@Base+0x1d8>
   2e79c:	ldr	r2, [pc, #-2852]	; 2dc80 <__flatcc_fb_default_error_out@@Base+0x1914>
   2e7a0:	cmp	r3, r2
   2e7a4:	beq	2f0c0 <__flatcc_fb_default_error_out@@Base+0x2d54>
   2e7a8:	ldr	r2, [pc, #-2860]	; 2dc84 <__flatcc_fb_default_error_out@@Base+0x1918>
   2e7ac:	cmp	r3, r2
   2e7b0:	beq	2f0a0 <__flatcc_fb_default_error_out@@Base+0x2d34>
   2e7b4:	ldr	r2, [pc, #-2868]	; 2dc88 <__flatcc_fb_default_error_out@@Base+0x191c>
   2e7b8:	cmp	r3, r2
   2e7bc:	beq	2f330 <__flatcc_fb_default_error_out@@Base+0x2fc4>
   2e7c0:	mov	r4, #9
   2e7c4:	b	2d0d4 <__flatcc_fb_default_error_out@@Base+0xd68>
   2e7c8:	ldr	r2, [pc, #-2884]	; 2dc8c <__flatcc_fb_default_error_out@@Base+0x1920>
   2e7cc:	cmp	r3, r2
   2e7d0:	beq	2f1c8 <__flatcc_fb_default_error_out@@Base+0x2e5c>
   2e7d4:	add	r2, r2, #327680	; 0x50000
   2e7d8:	add	r2, r2, #251	; 0xfb
   2e7dc:	cmp	r3, r2
   2e7e0:	beq	2f1a8 <__flatcc_fb_default_error_out@@Base+0x2e3c>
   2e7e4:	ldr	r2, [pc, #-2908]	; 2dc90 <__flatcc_fb_default_error_out@@Base+0x1924>
   2e7e8:	cmp	r3, r2
   2e7ec:	bne	2e7c0 <__flatcc_fb_default_error_out@@Base+0x2454>
   2e7f0:	mov	r2, #4
   2e7f4:	mov	r1, r8
   2e7f8:	ldr	r0, [pc, #-2924]	; 2dc94 <__flatcc_fb_default_error_out@@Base+0x1928>
   2e7fc:	bl	13ff8 <memcmp@plt>
   2e800:	ldr	r4, [pc, #-2928]	; 2dc98 <__flatcc_fb_default_error_out@@Base+0x192c>
   2e804:	cmp	r0, #0
   2e808:	movne	r4, #9
   2e80c:	b	2d0d4 <__flatcc_fb_default_error_out@@Base+0xd68>
   2e810:	cmp	ip, #0
   2e814:	lslne	r3, ip, #1
   2e818:	addne	r1, r3, ip, lsl #3
   2e81c:	moveq	r3, #1024	; 0x400
   2e820:	lslne	r1, r1, #2
   2e824:	moveq	r1, #20480	; 0x5000
   2e828:	str	r3, [sl, #28]
   2e82c:	bl	14010 <realloc@plt>
   2e830:	cmp	r0, #0
   2e834:	str	r0, [sl, #20]
   2e838:	beq	2f3bc <__flatcc_fb_default_error_out@@Base+0x3050>
   2e83c:	ldr	r3, [sl, #28]
   2e840:	add	r1, r0, r5
   2e844:	add	r3, r3, r3, lsl #2
   2e848:	add	r0, r0, r3, lsl #2
   2e84c:	str	r0, [sl, #24]
   2e850:	b	2d554 <__flatcc_fb_default_error_out@@Base+0x11e8>
   2e854:	add	r3, r8, #3
   2e858:	mov	r2, r8
   2e85c:	ldr	r1, [pc, #-3016]	; 2dc9c <__flatcc_fb_default_error_out@@Base+0x1930>
   2e860:	mov	r0, sl
   2e864:	mov	r8, r3
   2e868:	bl	2c38c <__flatcc_fb_default_error_out@@Base+0x20>
   2e86c:	b	2c544 <__flatcc_fb_default_error_out@@Base+0x1d8>
   2e870:	mov	r2, r8
   2e874:	ldr	r1, [pc, #-3036]	; 2dca0 <__flatcc_fb_default_error_out@@Base+0x1934>
   2e878:	mov	r0, sl
   2e87c:	mov	r8, r3
   2e880:	bl	2c38c <__flatcc_fb_default_error_out@@Base+0x20>
   2e884:	b	2c544 <__flatcc_fb_default_error_out@@Base+0x1d8>
   2e888:	mov	r2, r8
   2e88c:	ldr	r1, [pc, #-3056]	; 2dca4 <__flatcc_fb_default_error_out@@Base+0x1938>
   2e890:	mov	r0, sl
   2e894:	mov	r8, r3
   2e898:	bl	2c38c <__flatcc_fb_default_error_out@@Base+0x20>
   2e89c:	b	2c544 <__flatcc_fb_default_error_out@@Base+0x1d8>
   2e8a0:	ldr	r2, [sl, #28]
   2e8a4:	ldr	r0, [sl, #20]
   2e8a8:	ldr	r1, [sl, #40]	; 0x28
   2e8ac:	add	r5, r2, r2, lsl #2
   2e8b0:	mov	r4, r9
   2e8b4:	lsl	r5, r5, #2
   2e8b8:	add	r3, r0, r5
   2e8bc:	b	2ce90 <__flatcc_fb_default_error_out@@Base+0xb24>
   2e8c0:	cmp	r2, #0
   2e8c4:	lslne	r3, r2, #1
   2e8c8:	addne	r2, r3, r2, lsl #3
   2e8cc:	moveq	r3, #1024	; 0x400
   2e8d0:	lslne	r1, r2, #2
   2e8d4:	moveq	r1, #20480	; 0x5000
   2e8d8:	str	r3, [sl, #28]
   2e8dc:	bl	14010 <realloc@plt>
   2e8e0:	cmp	r0, #0
   2e8e4:	str	r0, [sl, #20]
   2e8e8:	beq	2f3bc <__flatcc_fb_default_error_out@@Base+0x3050>
   2e8ec:	ldr	r2, [sl, #28]
   2e8f0:	add	r1, r0, r5
   2e8f4:	add	r2, r2, r2, lsl #2
   2e8f8:	add	r0, r0, r2, lsl #2
   2e8fc:	str	r0, [sl, #24]
   2e900:	b	2de18 <__flatcc_fb_default_error_out@@Base+0x1aac>
   2e904:	cmp	r2, #0
   2e908:	lslne	r3, r2, #1
   2e90c:	addne	r2, r3, r2, lsl #3
   2e910:	moveq	r3, #1024	; 0x400
   2e914:	lslne	r1, r2, #2
   2e918:	moveq	r1, #20480	; 0x5000
   2e91c:	str	r3, [sl, #28]
   2e920:	bl	14010 <realloc@plt>
   2e924:	cmp	r0, #0
   2e928:	str	r0, [sl, #20]
   2e92c:	beq	2f3bc <__flatcc_fb_default_error_out@@Base+0x3050>
   2e930:	ldr	r2, [sl, #28]
   2e934:	add	r1, r0, r5
   2e938:	add	r2, r2, r2, lsl #2
   2e93c:	add	r0, r0, r2, lsl #2
   2e940:	str	r0, [sl, #24]
   2e944:	b	2d848 <__flatcc_fb_default_error_out@@Base+0x14dc>
   2e948:	cmp	r2, #0
   2e94c:	lslne	r3, r2, #1
   2e950:	addne	r2, r3, r2, lsl #3
   2e954:	moveq	r3, #1024	; 0x400
   2e958:	lslne	r1, r2, #2
   2e95c:	moveq	r1, #20480	; 0x5000
   2e960:	str	r3, [sl, #28]
   2e964:	bl	14010 <realloc@plt>
   2e968:	cmp	r0, #0
   2e96c:	str	r0, [sl, #20]
   2e970:	beq	2f3bc <__flatcc_fb_default_error_out@@Base+0x3050>
   2e974:	ldr	r2, [sl, #28]
   2e978:	add	r1, r0, r4
   2e97c:	add	r2, r2, r2, lsl #2
   2e980:	add	r0, r0, r2, lsl #2
   2e984:	str	r0, [sl, #24]
   2e988:	b	2d7b4 <__flatcc_fb_default_error_out@@Base+0x1448>
   2e98c:	cmp	r2, #0
   2e990:	lslne	r3, r2, #1
   2e994:	addne	r2, r3, r2, lsl #3
   2e998:	moveq	r3, #1024	; 0x400
   2e99c:	lslne	r1, r2, #2
   2e9a0:	moveq	r1, #20480	; 0x5000
   2e9a4:	str	r3, [sl, #28]
   2e9a8:	bl	14010 <realloc@plt>
   2e9ac:	cmp	r0, #0
   2e9b0:	str	r0, [sl, #20]
   2e9b4:	beq	2f3bc <__flatcc_fb_default_error_out@@Base+0x3050>
   2e9b8:	ldr	r2, [sl, #28]
   2e9bc:	add	r1, r0, r4
   2e9c0:	add	r2, r2, r2, lsl #2
   2e9c4:	add	r0, r0, r2, lsl #2
   2e9c8:	str	r0, [sl, #24]
   2e9cc:	b	2e06c <__flatcc_fb_default_error_out@@Base+0x1d00>
   2e9d0:	sub	r2, r2, #3584	; 0xe00
   2e9d4:	cmp	r3, r2
   2e9d8:	beq	2f2d0 <__flatcc_fb_default_error_out@@Base+0x2f64>
   2e9dc:	add	r2, r2, #2048	; 0x800
   2e9e0:	add	r2, r2, #4
   2e9e4:	cmp	r3, r2
   2e9e8:	beq	2f2b0 <__flatcc_fb_default_error_out@@Base+0x2f44>
   2e9ec:	ldr	r2, [pc, #-3404]	; 2dca8 <__flatcc_fb_default_error_out@@Base+0x193c>
   2e9f0:	cmp	r3, r2
   2e9f4:	bne	2e7c0 <__flatcc_fb_default_error_out@@Base+0x2454>
   2e9f8:	mov	r2, #4
   2e9fc:	mov	r1, r8
   2ea00:	ldr	r0, [pc, #-3420]	; 2dcac <__flatcc_fb_default_error_out@@Base+0x1940>
   2ea04:	bl	13ff8 <memcmp@plt>
   2ea08:	cmp	r0, #0
   2ea0c:	movne	r4, #9
   2ea10:	mvneq	r4, #992	; 0x3e0
   2ea14:	b	2d0d4 <__flatcc_fb_default_error_out@@Base+0xd68>
   2ea18:	cmp	r2, #0
   2ea1c:	lslne	r3, r2, #1
   2ea20:	addne	r2, r3, r2, lsl #3
   2ea24:	moveq	r3, #1024	; 0x400
   2ea28:	lslne	r1, r2, #2
   2ea2c:	moveq	r1, #20480	; 0x5000
   2ea30:	str	r3, [sl, #28]
   2ea34:	bl	14010 <realloc@plt>
   2ea38:	cmp	r0, #0
   2ea3c:	str	r0, [sl, #20]
   2ea40:	beq	2f3bc <__flatcc_fb_default_error_out@@Base+0x3050>
   2ea44:	ldr	r2, [sl, #28]
   2ea48:	add	r1, r0, r5
   2ea4c:	add	r2, r2, r2, lsl #2
   2ea50:	add	r0, r0, r2, lsl #2
   2ea54:	str	r0, [sl, #24]
   2ea58:	b	2cf8c <__flatcc_fb_default_error_out@@Base+0xc20>
   2ea5c:	cmp	r2, #0
   2ea60:	lslne	r3, r2, #1
   2ea64:	addne	r2, r3, r2, lsl #3
   2ea68:	moveq	r3, #1024	; 0x400
   2ea6c:	lslne	r1, r2, #2
   2ea70:	moveq	r1, #20480	; 0x5000
   2ea74:	str	r3, [sl, #28]
   2ea78:	bl	14010 <realloc@plt>
   2ea7c:	cmp	r0, #0
   2ea80:	str	r0, [sl, #20]
   2ea84:	beq	2f3bc <__flatcc_fb_default_error_out@@Base+0x3050>
   2ea88:	ldr	r2, [sl, #28]
   2ea8c:	add	r3, r0, r5
   2ea90:	add	r2, r2, r2, lsl #2
   2ea94:	add	r0, r0, r2, lsl #2
   2ea98:	str	r0, [sl, #24]
   2ea9c:	b	2cb54 <__flatcc_fb_default_error_out@@Base+0x7e8>
   2eaa0:	cmp	r2, #0
   2eaa4:	lslne	r3, r2, #1
   2eaa8:	addne	r2, r3, r2, lsl #3
   2eaac:	moveq	r3, #1024	; 0x400
   2eab0:	lslne	r1, r2, #2
   2eab4:	moveq	r1, #20480	; 0x5000
   2eab8:	str	r3, [sl, #28]
   2eabc:	bl	14010 <realloc@plt>
   2eac0:	cmp	r0, #0
   2eac4:	str	r0, [sl, #20]
   2eac8:	beq	2f3bc <__flatcc_fb_default_error_out@@Base+0x3050>
   2eacc:	ldr	r2, [sl, #28]
   2ead0:	add	r1, r0, r4
   2ead4:	add	r2, r2, r2, lsl #2
   2ead8:	add	r0, r0, r2, lsl #2
   2eadc:	str	r0, [sl, #24]
   2eae0:	b	2cc80 <__flatcc_fb_default_error_out@@Base+0x914>
   2eae4:	cmp	r2, #0
   2eae8:	lslne	r3, r2, #1
   2eaec:	addne	r2, r3, r2, lsl #3
   2eaf0:	moveq	r3, #1024	; 0x400
   2eaf4:	lslne	r1, r2, #2
   2eaf8:	moveq	r1, #20480	; 0x5000
   2eafc:	str	r3, [sl, #28]
   2eb00:	bl	14010 <realloc@plt>
   2eb04:	cmp	r0, #0
   2eb08:	str	r0, [sl, #20]
   2eb0c:	beq	2f3bc <__flatcc_fb_default_error_out@@Base+0x3050>
   2eb10:	ldr	r2, [sl, #28]
   2eb14:	add	r1, r0, r5
   2eb18:	add	r2, r2, r2, lsl #2
   2eb1c:	add	r0, r0, r2, lsl #2
   2eb20:	str	r0, [sl, #24]
   2eb24:	b	2d6e8 <__flatcc_fb_default_error_out@@Base+0x137c>
   2eb28:	cmp	r2, #0
   2eb2c:	lslne	r3, r2, #1
   2eb30:	addne	r2, r3, r2, lsl #3
   2eb34:	moveq	r3, #1024	; 0x400
   2eb38:	lslne	r1, r2, #2
   2eb3c:	moveq	r1, #20480	; 0x5000
   2eb40:	str	r3, [sl, #28]
   2eb44:	bl	14010 <realloc@plt>
   2eb48:	cmp	r0, #0
   2eb4c:	str	r0, [sl, #20]
   2eb50:	beq	2f3bc <__flatcc_fb_default_error_out@@Base+0x3050>
   2eb54:	ldr	r2, [sl, #28]
   2eb58:	add	ip, r0, r6
   2eb5c:	add	r5, r2, r2, lsl #2
   2eb60:	lsl	r5, r5, #2
   2eb64:	add	r3, r0, r5
   2eb68:	b	2df90 <__flatcc_fb_default_error_out@@Base+0x1c24>
   2eb6c:	mov	r3, r5
   2eb70:	mov	r2, r5
   2eb74:	ldr	r1, [pc, #-3788]	; 2dcb0 <__flatcc_fb_default_error_out@@Base+0x1944>
   2eb78:	mov	r0, sl
   2eb7c:	bl	2c38c <__flatcc_fb_default_error_out@@Base+0x20>
   2eb80:	b	2e0dc <__flatcc_fb_default_error_out@@Base+0x1d70>
   2eb84:	cmp	r2, #0
   2eb88:	lslne	r3, r2, #1
   2eb8c:	addne	r2, r3, r2, lsl #3
   2eb90:	moveq	r3, #1024	; 0x400
   2eb94:	lslne	r1, r2, #2
   2eb98:	moveq	r1, #20480	; 0x5000
   2eb9c:	str	r3, [sl, #28]
   2eba0:	bl	14010 <realloc@plt>
   2eba4:	cmp	r0, #0
   2eba8:	str	r0, [sl, #20]
   2ebac:	beq	2f3bc <__flatcc_fb_default_error_out@@Base+0x3050>
   2ebb0:	ldr	r2, [sl, #28]
   2ebb4:	add	r1, r0, r5
   2ebb8:	add	r2, r2, r2, lsl #2
   2ebbc:	add	r0, r0, r2, lsl #2
   2ebc0:	str	r0, [sl, #24]
   2ebc4:	b	2d944 <__flatcc_fb_default_error_out@@Base+0x15d8>
   2ebc8:	cmp	r2, #0
   2ebcc:	lslne	r3, r2, #1
   2ebd0:	addne	r2, r3, r2, lsl #3
   2ebd4:	moveq	r3, #1024	; 0x400
   2ebd8:	lslne	r1, r2, #2
   2ebdc:	moveq	r1, #20480	; 0x5000
   2ebe0:	str	r3, [sl, #28]
   2ebe4:	bl	14010 <realloc@plt>
   2ebe8:	cmp	r0, #0
   2ebec:	str	r0, [sl, #20]
   2ebf0:	beq	2f3bc <__flatcc_fb_default_error_out@@Base+0x3050>
   2ebf4:	ldr	r2, [sl, #28]
   2ebf8:	add	r1, r0, r5
   2ebfc:	add	r2, r2, r2, lsl #2
   2ec00:	add	r0, r0, r2, lsl #2
   2ec04:	str	r0, [sl, #24]
   2ec08:	b	2d72c <__flatcc_fb_default_error_out@@Base+0x13c0>
   2ec0c:	cmp	r2, #0
   2ec10:	lslne	r3, r2, #1
   2ec14:	addne	r2, r3, r2, lsl #3
   2ec18:	moveq	r3, #1024	; 0x400
   2ec1c:	lslne	r1, r2, #2
   2ec20:	moveq	r1, #20480	; 0x5000
   2ec24:	str	r3, [sl, #28]
   2ec28:	bl	14010 <realloc@plt>
   2ec2c:	cmp	r0, #0
   2ec30:	str	r0, [sl, #20]
   2ec34:	beq	2f3bc <__flatcc_fb_default_error_out@@Base+0x3050>
   2ec38:	ldr	r2, [sl, #28]
   2ec3c:	add	r1, r0, r5
   2ec40:	add	r2, r2, r2, lsl #2
   2ec44:	add	r0, r0, r2, lsl #2
   2ec48:	str	r0, [sl, #24]
   2ec4c:	b	2dff0 <__flatcc_fb_default_error_out@@Base+0x1c84>
   2ec50:	cmp	r2, #0
   2ec54:	lslne	r3, r2, #1
   2ec58:	addne	r2, r3, r2, lsl #3
   2ec5c:	moveq	r3, #1024	; 0x400
   2ec60:	lslne	r1, r2, #2
   2ec64:	moveq	r1, #20480	; 0x5000
   2ec68:	str	r3, [sl, #28]
   2ec6c:	bl	14010 <realloc@plt>
   2ec70:	cmp	r0, #0
   2ec74:	str	r0, [sl, #20]
   2ec78:	beq	2f3bc <__flatcc_fb_default_error_out@@Base+0x3050>
   2ec7c:	ldr	r2, [sl, #28]
   2ec80:	add	r1, r0, r5
   2ec84:	add	r2, r2, r2, lsl #2
   2ec88:	add	r0, r0, r2, lsl #2
   2ec8c:	str	r0, [sl, #24]
   2ec90:	b	2cd7c <__flatcc_fb_default_error_out@@Base+0xa10>
   2ec94:	cmp	r2, #0
   2ec98:	lslne	r3, r2, #1
   2ec9c:	addne	r2, r3, r2, lsl #3
   2eca0:	moveq	r3, #1024	; 0x400
   2eca4:	lslne	r1, r2, #2
   2eca8:	moveq	r1, #20480	; 0x5000
   2ecac:	str	r3, [sl, #28]
   2ecb0:	bl	14010 <realloc@plt>
   2ecb4:	cmp	r0, #0
   2ecb8:	str	r0, [sl, #20]
   2ecbc:	beq	2f3bc <__flatcc_fb_default_error_out@@Base+0x3050>
   2ecc0:	ldr	r2, [sl, #28]
   2ecc4:	add	ip, r0, r6
   2ecc8:	add	r5, r2, r2, lsl #2
   2eccc:	lsl	r5, r5, #2
   2ecd0:	add	r3, r0, r5
   2ecd4:	b	2d7f8 <__flatcc_fb_default_error_out@@Base+0x148c>
   2ecd8:	add	r3, r8, #3
   2ecdc:	cmp	r9, r3
   2ece0:	beq	2ecf0 <__flatcc_fb_default_error_out@@Base+0x2984>
   2ece4:	ldrb	r2, [r8, #3]
   2ece8:	cmp	r2, #61	; 0x3d
   2ecec:	beq	2f3dc <__flatcc_fb_default_error_out@@Base+0x3070>
   2ecf0:	mov	r2, r8
   2ecf4:	ldr	r1, [pc, #1796]	; 2f400 <__flatcc_fb_default_error_out@@Base+0x3094>
   2ecf8:	mov	r0, sl
   2ecfc:	mov	r8, r3
   2ed00:	bl	2c38c <__flatcc_fb_default_error_out@@Base+0x20>
   2ed04:	b	2c544 <__flatcc_fb_default_error_out@@Base+0x1d8>
   2ed08:	ldr	r2, [pc, #1780]	; 2f404 <__flatcc_fb_default_error_out@@Base+0x3098>
   2ed0c:	cmp	r3, r2
   2ed10:	beq	2eff4 <__flatcc_fb_default_error_out@@Base+0x2c88>
   2ed14:	ldr	r2, [pc, #1772]	; 2f408 <__flatcc_fb_default_error_out@@Base+0x309c>
   2ed18:	cmp	r3, r2
   2ed1c:	beq	2efd4 <__flatcc_fb_default_error_out@@Base+0x2c68>
   2ed20:	ldr	r2, [pc, #1764]	; 2f40c <__flatcc_fb_default_error_out@@Base+0x30a0>
   2ed24:	cmp	r3, r2
   2ed28:	bne	2e7c0 <__flatcc_fb_default_error_out@@Base+0x2454>
   2ed2c:	mov	r2, #5
   2ed30:	mov	r1, r8
   2ed34:	ldr	r0, [pc, #1748]	; 2f410 <__flatcc_fb_default_error_out@@Base+0x30a4>
   2ed38:	bl	13ff8 <memcmp@plt>
   2ed3c:	ldr	r4, [pc, #1744]	; 2f414 <__flatcc_fb_default_error_out@@Base+0x30a8>
   2ed40:	cmp	r0, #0
   2ed44:	movne	r4, #9
   2ed48:	b	2d0d4 <__flatcc_fb_default_error_out@@Base+0xd68>
   2ed4c:	mov	r8, r5
   2ed50:	mov	r3, r8
   2ed54:	mov	r2, r8
   2ed58:	mov	r1, #23
   2ed5c:	mov	r0, sl
   2ed60:	bl	2c38c <__flatcc_fb_default_error_out@@Base+0x20>
   2ed64:	b	2c544 <__flatcc_fb_default_error_out@@Base+0x1d8>
   2ed68:	cmp	ip, #0
   2ed6c:	lslne	r3, ip, #1
   2ed70:	addne	r1, r3, ip, lsl #3
   2ed74:	moveq	r3, #1024	; 0x400
   2ed78:	lslne	r1, r1, #2
   2ed7c:	moveq	r1, #20480	; 0x5000
   2ed80:	str	r3, [sl, #28]
   2ed84:	bl	14010 <realloc@plt>
   2ed88:	cmp	r0, #0
   2ed8c:	str	r0, [sl, #20]
   2ed90:	beq	2f3bc <__flatcc_fb_default_error_out@@Base+0x3050>
   2ed94:	ldr	ip, [sl, #28]
   2ed98:	add	r3, r0, r4
   2ed9c:	add	r1, ip, ip, lsl #2
   2eda0:	lsl	r1, r1, #2
   2eda4:	add	r2, r0, r1
   2eda8:	mov	r5, r1
   2edac:	str	r2, [sl, #24]
   2edb0:	b	2dee8 <__flatcc_fb_default_error_out@@Base+0x1b7c>
   2edb4:	cmp	r2, #0
   2edb8:	lslne	r3, r2, #1
   2edbc:	addne	r2, r3, r2, lsl #3
   2edc0:	moveq	r3, #1024	; 0x400
   2edc4:	lslne	r1, r2, #2
   2edc8:	moveq	r1, #20480	; 0x5000
   2edcc:	str	r3, [sl, #28]
   2edd0:	bl	14010 <realloc@plt>
   2edd4:	cmp	r0, #0
   2edd8:	str	r0, [sl, #20]
   2eddc:	beq	2f3bc <__flatcc_fb_default_error_out@@Base+0x3050>
   2ede0:	ldr	r2, [sl, #28]
   2ede4:	add	r1, r0, r5
   2ede8:	add	r2, r2, r2, lsl #2
   2edec:	add	r0, r0, r2, lsl #2
   2edf0:	str	r0, [sl, #24]
   2edf4:	b	2cc14 <__flatcc_fb_default_error_out@@Base+0x8a8>
   2edf8:	mov	r3, r4
   2edfc:	mov	r2, r4
   2ee00:	ldr	r1, [pc, #1552]	; 2f418 <__flatcc_fb_default_error_out@@Base+0x30ac>
   2ee04:	mov	r0, sl
   2ee08:	bl	2c38c <__flatcc_fb_default_error_out@@Base+0x20>
   2ee0c:	b	2d9a4 <__flatcc_fb_default_error_out@@Base+0x1638>
   2ee10:	mov	r8, r9
   2ee14:	b	2ed50 <__flatcc_fb_default_error_out@@Base+0x29e4>
   2ee18:	cmp	r3, #0
   2ee1c:	lslne	ip, r3, #1
   2ee20:	addne	r3, ip, r3, lsl #3
   2ee24:	moveq	ip, r6
   2ee28:	lslne	r1, r3, #2
   2ee2c:	moveq	r1, r7
   2ee30:	str	ip, [sl, #28]
   2ee34:	str	r2, [sp, #4]
   2ee38:	bl	14010 <realloc@plt>
   2ee3c:	cmp	r0, #0
   2ee40:	str	r0, [sl, #20]
   2ee44:	beq	2f3bc <__flatcc_fb_default_error_out@@Base+0x3050>
   2ee48:	ldr	r3, [sl, #28]
   2ee4c:	ldr	r2, [sp, #4]
   2ee50:	add	r3, r3, r3, lsl #2
   2ee54:	add	r1, r0, r2
   2ee58:	add	r3, r0, r3, lsl #2
   2ee5c:	str	r3, [sl, #24]
   2ee60:	b	2dcd8 <__flatcc_fb_default_error_out@@Base+0x196c>
   2ee64:	ldr	r2, [sl, #28]
   2ee68:	ldr	r0, [sl, #20]
   2ee6c:	ldr	r1, [sl, #40]	; 0x28
   2ee70:	add	r5, r2, r2, lsl #2
   2ee74:	mov	r4, r9
   2ee78:	lsl	r5, r5, #2
   2ee7c:	add	r3, r0, r5
   2ee80:	b	2c790 <__flatcc_fb_default_error_out@@Base+0x424>
   2ee84:	ldr	ip, [sl, #28]
   2ee88:	ldr	r0, [sl, #20]
   2ee8c:	mov	r8, r9
   2ee90:	add	r5, ip, ip, lsl #2
   2ee94:	ldr	r1, [sl, #40]	; 0x28
   2ee98:	lsl	r5, r5, #2
   2ee9c:	add	r2, r0, r5
   2eea0:	mov	r4, #0
   2eea4:	b	2c87c <__flatcc_fb_default_error_out@@Base+0x510>
   2eea8:	cmp	r2, #0
   2eeac:	lslne	r3, r2, #1
   2eeb0:	addne	r2, r3, r2, lsl #3
   2eeb4:	moveq	r3, #1024	; 0x400
   2eeb8:	lslne	r1, r2, #2
   2eebc:	moveq	r1, #20480	; 0x5000
   2eec0:	str	r3, [sl, #28]
   2eec4:	bl	14010 <realloc@plt>
   2eec8:	cmp	r0, #0
   2eecc:	str	r0, [sl, #20]
   2eed0:	beq	2f3bc <__flatcc_fb_default_error_out@@Base+0x3050>
   2eed4:	ldr	r2, [sl, #28]
   2eed8:	add	r1, r0, r5
   2eedc:	add	r2, r2, r2, lsl #2
   2eee0:	add	r0, r0, r2, lsl #2
   2eee4:	str	r0, [sl, #24]
   2eee8:	b	2d770 <__flatcc_fb_default_error_out@@Base+0x1404>
   2eeec:	cmp	r2, #0
   2eef0:	lslne	r3, r2, #1
   2eef4:	addne	r2, r3, r2, lsl #3
   2eef8:	moveq	r3, #1024	; 0x400
   2eefc:	lslne	r1, r2, #2
   2ef00:	moveq	r1, #20480	; 0x5000
   2ef04:	str	r3, [sl, #28]
   2ef08:	bl	14010 <realloc@plt>
   2ef0c:	cmp	r0, #0
   2ef10:	str	r0, [sl, #20]
   2ef14:	beq	2f3bc <__flatcc_fb_default_error_out@@Base+0x3050>
   2ef18:	ldr	r2, [sl, #28]
   2ef1c:	add	r1, r0, r5
   2ef20:	add	r2, r2, r2, lsl #2
   2ef24:	add	r0, r0, r2, lsl #2
   2ef28:	str	r0, [sl, #24]
   2ef2c:	b	2cd08 <__flatcc_fb_default_error_out@@Base+0x99c>
   2ef30:	cmp	r2, #0
   2ef34:	lslne	r3, r2, #1
   2ef38:	addne	r2, r3, r2, lsl #3
   2ef3c:	moveq	r3, #1024	; 0x400
   2ef40:	lslne	r1, r2, #2
   2ef44:	moveq	r1, #20480	; 0x5000
   2ef48:	str	r3, [sl, #28]
   2ef4c:	bl	14010 <realloc@plt>
   2ef50:	cmp	r0, #0
   2ef54:	str	r0, [sl, #20]
   2ef58:	beq	2f3bc <__flatcc_fb_default_error_out@@Base+0x3050>
   2ef5c:	ldr	r2, [sl, #28]
   2ef60:	add	r3, r0, r5
   2ef64:	add	r2, r2, r2, lsl #2
   2ef68:	add	r0, r0, r2, lsl #2
   2ef6c:	str	r0, [sl, #24]
   2ef70:	b	2df48 <__flatcc_fb_default_error_out@@Base+0x1bdc>
   2ef74:	cmp	r2, #0
   2ef78:	lslne	r3, r2, #1
   2ef7c:	addne	r2, r3, r2, lsl #3
   2ef80:	moveq	r3, #1024	; 0x400
   2ef84:	lslne	r1, r2, #2
   2ef88:	moveq	r1, #20480	; 0x5000
   2ef8c:	str	r3, [sl, #28]
   2ef90:	bl	14010 <realloc@plt>
   2ef94:	cmp	r0, #0
   2ef98:	str	r0, [sl, #20]
   2ef9c:	beq	2f3bc <__flatcc_fb_default_error_out@@Base+0x3050>
   2efa0:	ldr	r2, [sl, #28]
   2efa4:	add	r1, r0, r5
   2efa8:	add	r2, r2, r2, lsl #2
   2efac:	add	r0, r0, r2, lsl #2
   2efb0:	str	r0, [sl, #24]
   2efb4:	b	2cf24 <__flatcc_fb_default_error_out@@Base+0xbb8>
   2efb8:	add	r3, r8, #3
   2efbc:	mov	r2, r8
   2efc0:	ldr	r1, [pc, #1108]	; 2f41c <__flatcc_fb_default_error_out@@Base+0x30b0>
   2efc4:	mov	r0, sl
   2efc8:	mov	r8, r3
   2efcc:	bl	2c38c <__flatcc_fb_default_error_out@@Base+0x20>
   2efd0:	b	2c544 <__flatcc_fb_default_error_out@@Base+0x1d8>
   2efd4:	mov	r2, #5
   2efd8:	mov	r1, r8
   2efdc:	ldr	r0, [pc, #1084]	; 2f420 <__flatcc_fb_default_error_out@@Base+0x30b4>
   2efe0:	bl	13ff8 <memcmp@plt>
   2efe4:	ldr	r4, [pc, #1080]	; 2f424 <__flatcc_fb_default_error_out@@Base+0x30b8>
   2efe8:	cmp	r0, #0
   2efec:	movne	r4, #9
   2eff0:	b	2d0d4 <__flatcc_fb_default_error_out@@Base+0xd68>
   2eff4:	mov	r2, #15
   2eff8:	mov	r1, r8
   2effc:	ldr	r0, [pc, #1060]	; 2f428 <__flatcc_fb_default_error_out@@Base+0x30bc>
   2f000:	bl	13ff8 <memcmp@plt>
   2f004:	cmp	r0, #0
   2f008:	movne	r4, #9
   2f00c:	mvneq	r4, #964	; 0x3c4
   2f010:	b	2d0d4 <__flatcc_fb_default_error_out@@Base+0xd68>
   2f014:	mov	r2, #6
   2f018:	mov	r1, r8
   2f01c:	ldr	r0, [pc, #1032]	; 2f42c <__flatcc_fb_default_error_out@@Base+0x30c0>
   2f020:	bl	13ff8 <memcmp@plt>
   2f024:	ldr	r4, [pc, #1028]	; 2f430 <__flatcc_fb_default_error_out@@Base+0x30c4>
   2f028:	cmp	r0, #0
   2f02c:	movne	r4, #9
   2f030:	b	2d0d4 <__flatcc_fb_default_error_out@@Base+0xd68>
   2f034:	mov	r2, #5
   2f038:	mov	r1, r8
   2f03c:	ldr	r0, [pc, #1008]	; 2f434 <__flatcc_fb_default_error_out@@Base+0x30c8>
   2f040:	bl	13ff8 <memcmp@plt>
   2f044:	ldr	r4, [pc, #1004]	; 2f438 <__flatcc_fb_default_error_out@@Base+0x30cc>
   2f048:	cmp	r0, #0
   2f04c:	movne	r4, #9
   2f050:	b	2d0d4 <__flatcc_fb_default_error_out@@Base+0xd68>
   2f054:	ldr	r2, [pc, #992]	; 2f43c <__flatcc_fb_default_error_out@@Base+0x30d0>
   2f058:	cmp	r3, r2
   2f05c:	bne	2e7c0 <__flatcc_fb_default_error_out@@Base+0x2454>
   2f060:	mov	r2, #5
   2f064:	mov	r1, r8
   2f068:	ldr	r0, [pc, #976]	; 2f440 <__flatcc_fb_default_error_out@@Base+0x30d4>
   2f06c:	bl	13ff8 <memcmp@plt>
   2f070:	ldr	r4, [pc, #972]	; 2f444 <__flatcc_fb_default_error_out@@Base+0x30d8>
   2f074:	cmp	r0, #0
   2f078:	movne	r4, #9
   2f07c:	b	2d0d4 <__flatcc_fb_default_error_out@@Base+0xd68>
   2f080:	mov	r2, #7
   2f084:	mov	r1, r8
   2f088:	ldr	r0, [pc, #952]	; 2f448 <__flatcc_fb_default_error_out@@Base+0x30dc>
   2f08c:	bl	13ff8 <memcmp@plt>
   2f090:	ldr	r4, [pc, #948]	; 2f44c <__flatcc_fb_default_error_out@@Base+0x30e0>
   2f094:	cmp	r0, #0
   2f098:	movne	r4, #9
   2f09c:	b	2d0d4 <__flatcc_fb_default_error_out@@Base+0xd68>
   2f0a0:	mov	r2, #5
   2f0a4:	mov	r1, r8
   2f0a8:	ldr	r0, [pc, #928]	; 2f450 <__flatcc_fb_default_error_out@@Base+0x30e4>
   2f0ac:	bl	13ff8 <memcmp@plt>
   2f0b0:	ldr	r4, [pc, #924]	; 2f454 <__flatcc_fb_default_error_out@@Base+0x30e8>
   2f0b4:	cmp	r0, #0
   2f0b8:	movne	r4, #9
   2f0bc:	b	2d0d4 <__flatcc_fb_default_error_out@@Base+0xd68>
   2f0c0:	mov	r2, #7
   2f0c4:	mov	r1, r8
   2f0c8:	ldr	r0, [pc, #904]	; 2f458 <__flatcc_fb_default_error_out@@Base+0x30ec>
   2f0cc:	bl	13ff8 <memcmp@plt>
   2f0d0:	ldr	r4, [pc, #900]	; 2f45c <__flatcc_fb_default_error_out@@Base+0x30f0>
   2f0d4:	cmp	r0, #0
   2f0d8:	movne	r4, #9
   2f0dc:	b	2d0d4 <__flatcc_fb_default_error_out@@Base+0xd68>
   2f0e0:	add	r3, r8, #3
   2f0e4:	mov	r2, r8
   2f0e8:	ldr	r1, [pc, #880]	; 2f460 <__flatcc_fb_default_error_out@@Base+0x30f4>
   2f0ec:	mov	r0, sl
   2f0f0:	mov	r8, r3
   2f0f4:	bl	2c38c <__flatcc_fb_default_error_out@@Base+0x20>
   2f0f8:	b	2c544 <__flatcc_fb_default_error_out@@Base+0x1d8>
   2f0fc:	mov	r2, #4
   2f100:	mov	r1, r8
   2f104:	ldr	r0, [pc, #856]	; 2f464 <__flatcc_fb_default_error_out@@Base+0x30f8>
   2f108:	bl	13ff8 <memcmp@plt>
   2f10c:	ldr	r4, [pc, #852]	; 2f468 <__flatcc_fb_default_error_out@@Base+0x30fc>
   2f110:	cmp	r0, #0
   2f114:	movne	r4, #9
   2f118:	b	2d0d4 <__flatcc_fb_default_error_out@@Base+0xd68>
   2f11c:	ldr	r2, [pc, #840]	; 2f46c <__flatcc_fb_default_error_out@@Base+0x3100>
   2f120:	cmp	r3, r2
   2f124:	bne	2e7c0 <__flatcc_fb_default_error_out@@Base+0x2454>
   2f128:	mov	r2, #5
   2f12c:	mov	r1, r8
   2f130:	ldr	r0, [pc, #824]	; 2f470 <__flatcc_fb_default_error_out@@Base+0x3104>
   2f134:	bl	13ff8 <memcmp@plt>
   2f138:	cmp	r0, #0
   2f13c:	movne	r4, #9
   2f140:	mvneq	r4, #984	; 0x3d8
   2f144:	b	2d0d4 <__flatcc_fb_default_error_out@@Base+0xd68>
   2f148:	mov	r2, #3
   2f14c:	mov	r1, r8
   2f150:	ldr	r0, [pc, #796]	; 2f474 <__flatcc_fb_default_error_out@@Base+0x3108>
   2f154:	bl	13ff8 <memcmp@plt>
   2f158:	ldr	r4, [pc, #792]	; 2f478 <__flatcc_fb_default_error_out@@Base+0x310c>
   2f15c:	cmp	r0, #0
   2f160:	movne	r4, #9
   2f164:	b	2d0d4 <__flatcc_fb_default_error_out@@Base+0xd68>
   2f168:	mov	r2, #6
   2f16c:	mov	r1, r8
   2f170:	ldr	r0, [pc, #772]	; 2f47c <__flatcc_fb_default_error_out@@Base+0x3110>
   2f174:	bl	13ff8 <memcmp@plt>
   2f178:	ldr	r4, [pc, #768]	; 2f480 <__flatcc_fb_default_error_out@@Base+0x3114>
   2f17c:	cmp	r0, #0
   2f180:	movne	r4, #9
   2f184:	b	2d0d4 <__flatcc_fb_default_error_out@@Base+0xd68>
   2f188:	mov	r2, #14
   2f18c:	mov	r1, r8
   2f190:	ldr	r0, [pc, #748]	; 2f484 <__flatcc_fb_default_error_out@@Base+0x3118>
   2f194:	bl	13ff8 <memcmp@plt>
   2f198:	ldr	r4, [pc, #744]	; 2f488 <__flatcc_fb_default_error_out@@Base+0x311c>
   2f19c:	cmp	r0, #0
   2f1a0:	movne	r4, #9
   2f1a4:	b	2d0d4 <__flatcc_fb_default_error_out@@Base+0xd68>
   2f1a8:	mov	r2, #4
   2f1ac:	mov	r1, r8
   2f1b0:	ldr	r0, [pc, #724]	; 2f48c <__flatcc_fb_default_error_out@@Base+0x3120>
   2f1b4:	bl	13ff8 <memcmp@plt>
   2f1b8:	ldr	r4, [pc, #720]	; 2f490 <__flatcc_fb_default_error_out@@Base+0x3124>
   2f1bc:	cmp	r0, #0
   2f1c0:	movne	r4, #9
   2f1c4:	b	2d0d4 <__flatcc_fb_default_error_out@@Base+0xd68>
   2f1c8:	mov	r2, #9
   2f1cc:	mov	r1, r8
   2f1d0:	ldr	r0, [pc, #700]	; 2f494 <__flatcc_fb_default_error_out@@Base+0x3128>
   2f1d4:	bl	13ff8 <memcmp@plt>
   2f1d8:	ldr	r4, [pc, #696]	; 2f498 <__flatcc_fb_default_error_out@@Base+0x312c>
   2f1dc:	cmp	r0, #0
   2f1e0:	movne	r4, #9
   2f1e4:	b	2d0d4 <__flatcc_fb_default_error_out@@Base+0xd68>
   2f1e8:	mov	r2, #11
   2f1ec:	mov	r1, r8
   2f1f0:	ldr	r0, [pc, #676]	; 2f49c <__flatcc_fb_default_error_out@@Base+0x3130>
   2f1f4:	bl	13ff8 <memcmp@plt>
   2f1f8:	ldr	r4, [pc, #672]	; 2f4a0 <__flatcc_fb_default_error_out@@Base+0x3134>
   2f1fc:	cmp	r0, #0
   2f200:	movne	r4, #9
   2f204:	b	2d0d4 <__flatcc_fb_default_error_out@@Base+0xd68>
   2f208:	add	r3, r8, #3
   2f20c:	mov	r2, r8
   2f210:	ldr	r1, [pc, #652]	; 2f4a4 <__flatcc_fb_default_error_out@@Base+0x3138>
   2f214:	mov	r0, sl
   2f218:	mov	r8, r3
   2f21c:	bl	2c38c <__flatcc_fb_default_error_out@@Base+0x20>
   2f220:	b	2c544 <__flatcc_fb_default_error_out@@Base+0x1d8>
   2f224:	ldr	r2, [pc, #636]	; 2f4a8 <__flatcc_fb_default_error_out@@Base+0x313c>
   2f228:	cmp	r3, r2
   2f22c:	bne	2e7c0 <__flatcc_fb_default_error_out@@Base+0x2454>
   2f230:	mov	r2, #7
   2f234:	mov	r1, r8
   2f238:	ldr	r0, [pc, #620]	; 2f4ac <__flatcc_fb_default_error_out@@Base+0x3140>
   2f23c:	bl	13ff8 <memcmp@plt>
   2f240:	ldr	r4, [pc, #616]	; 2f4b0 <__flatcc_fb_default_error_out@@Base+0x3144>
   2f244:	cmp	r0, #0
   2f248:	movne	r4, #9
   2f24c:	b	2d0d4 <__flatcc_fb_default_error_out@@Base+0xd68>
   2f250:	mov	r2, #5
   2f254:	mov	r1, r8
   2f258:	ldr	r0, [pc, #596]	; 2f4b4 <__flatcc_fb_default_error_out@@Base+0x3148>
   2f25c:	bl	13ff8 <memcmp@plt>
   2f260:	ldr	r4, [pc, #592]	; 2f4b8 <__flatcc_fb_default_error_out@@Base+0x314c>
   2f264:	cmp	r0, #0
   2f268:	movne	r4, #9
   2f26c:	b	2d0d4 <__flatcc_fb_default_error_out@@Base+0xd68>
   2f270:	mov	r2, #6
   2f274:	mov	r1, r8
   2f278:	ldr	r0, [pc, #572]	; 2f4bc <__flatcc_fb_default_error_out@@Base+0x3150>
   2f27c:	bl	13ff8 <memcmp@plt>
   2f280:	ldr	r4, [pc, #568]	; 2f4c0 <__flatcc_fb_default_error_out@@Base+0x3154>
   2f284:	cmp	r0, #0
   2f288:	movne	r4, #9
   2f28c:	b	2d0d4 <__flatcc_fb_default_error_out@@Base+0xd68>
   2f290:	mov	r2, #6
   2f294:	mov	r1, r8
   2f298:	ldr	r0, [pc, #548]	; 2f4c4 <__flatcc_fb_default_error_out@@Base+0x3158>
   2f29c:	bl	13ff8 <memcmp@plt>
   2f2a0:	ldr	r4, [pc, #544]	; 2f4c8 <__flatcc_fb_default_error_out@@Base+0x315c>
   2f2a4:	cmp	r0, #0
   2f2a8:	movne	r4, #9
   2f2ac:	b	2d0d4 <__flatcc_fb_default_error_out@@Base+0xd68>
   2f2b0:	mov	r2, #9
   2f2b4:	mov	r1, r8
   2f2b8:	ldr	r0, [pc, #524]	; 2f4cc <__flatcc_fb_default_error_out@@Base+0x3160>
   2f2bc:	bl	13ff8 <memcmp@plt>
   2f2c0:	cmp	r0, #0
   2f2c4:	movne	r4, #9
   2f2c8:	mvneq	r4, #968	; 0x3c8
   2f2cc:	b	2d0d4 <__flatcc_fb_default_error_out@@Base+0xd68>
   2f2d0:	mov	r2, #5
   2f2d4:	mov	r1, r8
   2f2d8:	ldr	r0, [pc, #496]	; 2f4d0 <__flatcc_fb_default_error_out@@Base+0x3164>
   2f2dc:	bl	13ff8 <memcmp@plt>
   2f2e0:	ldr	r4, [pc, #492]	; 2f4d4 <__flatcc_fb_default_error_out@@Base+0x3168>
   2f2e4:	cmp	r0, #0
   2f2e8:	movne	r4, #9
   2f2ec:	b	2d0d4 <__flatcc_fb_default_error_out@@Base+0xd68>
   2f2f0:	mov	r2, #5
   2f2f4:	mov	r1, r8
   2f2f8:	ldr	r0, [pc, #472]	; 2f4d8 <__flatcc_fb_default_error_out@@Base+0x316c>
   2f2fc:	bl	13ff8 <memcmp@plt>
   2f300:	cmp	r0, #0
   2f304:	movne	r4, #9
   2f308:	mvneq	r4, #980	; 0x3d4
   2f30c:	b	2d0d4 <__flatcc_fb_default_error_out@@Base+0xd68>
   2f310:	mov	r2, #4
   2f314:	mov	r1, r8
   2f318:	ldr	r0, [pc, #444]	; 2f4dc <__flatcc_fb_default_error_out@@Base+0x3170>
   2f31c:	bl	13ff8 <memcmp@plt>
   2f320:	ldr	r4, [pc, #440]	; 2f4e0 <__flatcc_fb_default_error_out@@Base+0x3174>
   2f324:	cmp	r0, #0
   2f328:	movne	r4, #9
   2f32c:	b	2d0d4 <__flatcc_fb_default_error_out@@Base+0xd68>
   2f330:	mov	r2, #6
   2f334:	mov	r1, r8
   2f338:	ldr	r0, [pc, #420]	; 2f4e4 <__flatcc_fb_default_error_out@@Base+0x3178>
   2f33c:	bl	13ff8 <memcmp@plt>
   2f340:	ldr	r4, [pc, #416]	; 2f4e8 <__flatcc_fb_default_error_out@@Base+0x317c>
   2f344:	cmp	r0, #0
   2f348:	movne	r4, #9
   2f34c:	b	2d0d4 <__flatcc_fb_default_error_out@@Base+0xd68>
   2f350:	mov	r2, #5
   2f354:	mov	r1, r8
   2f358:	ldr	r0, [pc, #396]	; 2f4ec <__flatcc_fb_default_error_out@@Base+0x3180>
   2f35c:	bl	13ff8 <memcmp@plt>
   2f360:	cmp	r0, #0
   2f364:	movne	r4, #9
   2f368:	mvneq	r4, #976	; 0x3d0
   2f36c:	b	2d0d4 <__flatcc_fb_default_error_out@@Base+0xd68>
   2f370:	ldr	r2, [pc, #376]	; 2f4f0 <__flatcc_fb_default_error_out@@Base+0x3184>
   2f374:	cmp	r3, r2
   2f378:	bne	2e7c0 <__flatcc_fb_default_error_out@@Base+0x2454>
   2f37c:	mov	r2, #4
   2f380:	mov	r1, r8
   2f384:	ldr	r0, [pc, #360]	; 2f4f4 <__flatcc_fb_default_error_out@@Base+0x3188>
   2f388:	bl	13ff8 <memcmp@plt>
   2f38c:	cmp	r0, #0
   2f390:	movne	r4, #9
   2f394:	mvneq	r4, #988	; 0x3dc
   2f398:	b	2d0d4 <__flatcc_fb_default_error_out@@Base+0xd68>
   2f39c:	mov	r2, #6
   2f3a0:	mov	r1, r8
   2f3a4:	ldr	r0, [pc, #332]	; 2f4f8 <__flatcc_fb_default_error_out@@Base+0x318c>
   2f3a8:	bl	13ff8 <memcmp@plt>
   2f3ac:	ldr	r4, [pc, #328]	; 2f4fc <__flatcc_fb_default_error_out@@Base+0x3190>
   2f3b0:	cmp	r0, #0
   2f3b4:	movne	r4, #9
   2f3b8:	b	2d0d4 <__flatcc_fb_default_error_out@@Base+0xd68>
   2f3bc:	bl	141a8 <__assert_fail@plt+0x60>
   2f3c0:	add	r3, r8, #4
   2f3c4:	mov	r2, r8
   2f3c8:	ldr	r1, [pc, #304]	; 2f500 <__flatcc_fb_default_error_out@@Base+0x3194>
   2f3cc:	mov	r0, sl
   2f3d0:	mov	r8, r3
   2f3d4:	bl	2c38c <__flatcc_fb_default_error_out@@Base+0x20>
   2f3d8:	b	2c544 <__flatcc_fb_default_error_out@@Base+0x1d8>
   2f3dc:	add	r3, r8, #4
   2f3e0:	mov	r2, r8
   2f3e4:	ldr	r1, [pc, #280]	; 2f504 <__flatcc_fb_default_error_out@@Base+0x3198>
   2f3e8:	mov	r0, sl
   2f3ec:	mov	r8, r3
   2f3f0:	bl	2c38c <__flatcc_fb_default_error_out@@Base+0x20>
   2f3f4:	b	2c544 <__flatcc_fb_default_error_out@@Base+0x1d8>
   2f3f8:	mov	r8, r4
   2f3fc:	b	2da08 <__flatcc_fb_default_error_out@@Base+0x169c>
   2f400:	eorseq	r3, ip, ip, lsr ip
   2f404:	rsbvc	r6, r9, #66060288	; 0x3f00000
   2f408:	strbtvc	r7, [r8], #-821	; 0xfffffccb
   2f40c:	mcrvs	5, 3, r7, cr14, cr5, {1}
   2f410:	andeq	fp, r5, r8, asr #1
   2f414:			; <UNDEFINED> instruction: 0xfffffc30
   2f418:			; <UNDEFINED> instruction: 0xfffffc3c
   2f41c:	eoreq	r2, lr, lr, lsr #28
   2f420:	ldrdeq	fp, [r5], -r0
   2f424:			; <UNDEFINED> instruction: 0xfffffc28
   2f428:	andeq	fp, r5, ip, lsr #2
   2f42c:	andeq	r4, r4, r8, asr #7
   2f430:			; <UNDEFINED> instruction: 0xfffffc31
   2f434:	andeq	sp, r5, r8, lsl #6
   2f438:			; <UNDEFINED> instruction: 0xfffffc29
   2f43c:	strbvs	r7, [r2, #-1333]!	; 0xfffffacb
   2f440:	strheq	fp, [r5], -r8
   2f444:			; <UNDEFINED> instruction: 0xfffffc2a
   2f448:	strdeq	fp, [r5], -r0
   2f44c:			; <UNDEFINED> instruction: 0xfffffc35
   2f450:	andeq	r4, r4, r0, lsl r8
   2f454:			; <UNDEFINED> instruction: 0xfffffc21
   2f458:	andeq	fp, r5, r0, ror #1
   2f45c:			; <UNDEFINED> instruction: 0xfffffc1c
   2f460:	eorseq	r3, sp, sp, lsr sp
   2f464:	andeq	fp, r5, r8, lsr #1
   2f468:			; <UNDEFINED> instruction: 0xfffffc25
   2f46c:	strbtvc	r6, [ip], #-1589	; 0xfffff9cb
   2f470:	andeq	r4, r4, r0, asr #7
   2f474:	muleq	r5, r4, r0
   2f478:			; <UNDEFINED> instruction: 0xfffffc1e
   2f47c:	ldrdeq	fp, [r5], -r8
   2f480:			; <UNDEFINED> instruction: 0xfffffc34
   2f484:	andeq	fp, r5, ip, lsl r1
   2f488:			; <UNDEFINED> instruction: 0xfffffc3a
   2f48c:	muleq	r5, r8, r0
   2f490:			; <UNDEFINED> instruction: 0xfffffc1a
   2f494:	strdeq	fp, [r5], -r8
   2f498:			; <UNDEFINED> instruction: 0xfffffc36
   2f49c:	andeq	fp, r5, r0, lsl r1
   2f4a0:			; <UNDEFINED> instruction: 0xfffffc39
   2f4a4:	eorseq	r3, sp, sl, lsr sl
   2f4a8:	strbtcc	r6, [ip], #-1591	; 0xfffff9c9
   2f4ac:	andeq	fp, r5, r8, ror #1
   2f4b0:			; <UNDEFINED> instruction: 0xfffffc1d
   2f4b4:	andeq	r4, r4, r8, lsl #16
   2f4b8:			; <UNDEFINED> instruction: 0xfffffc22
   2f4bc:	andeq	r4, r4, r8, ror #15
   2f4c0:			; <UNDEFINED> instruction: 0xfffffc2e
   2f4c4:	strdeq	r4, [r4], -r8
   2f4c8:			; <UNDEFINED> instruction: 0xfffffc2c
   2f4cc:	andeq	r3, r4, r4, asr #20
   2f4d0:	strheq	fp, [r5], -r0
   2f4d4:			; <UNDEFINED> instruction: 0xfffffc26
   2f4d8:	andeq	r4, r4, r0, lsl #16
   2f4dc:	ldrdeq	ip, [r5], -r0
   2f4e0:			; <UNDEFINED> instruction: 0xfffffc19
   2f4e4:	strdeq	r4, [r4], -r0
   2f4e8:			; <UNDEFINED> instruction: 0xfffffc2d
   2f4ec:	andeq	fp, r5, r0, asr #1
   2f4f0:			; <UNDEFINED> instruction: 0x676f6c34
   2f4f4:	andeq	fp, r5, r0, lsr #1
   2f4f8:	andeq	fp, r5, ip, lsr #4
   2f4fc:			; <UNDEFINED> instruction: 0xfffffc32
   2f500:	ldccc	14, cr3, [lr, #-248]!	; 0xffffff08
   2f504:	ldccc	12, cr3, [ip, #-240]!	; 0xffffff10

0002f508 <__flatcc_fb_print_error@@Base>:
   2f508:	push	{r1, r2, r3}
   2f50c:	mov	r1, #200	; 0xc8
   2f510:	push	{r4, r5, lr}
   2f514:	sub	sp, sp, #208	; 0xd0
   2f518:	add	ip, sp, #224	; 0xe0
   2f51c:	mov	r3, ip
   2f520:	ldr	r2, [sp, #220]	; 0xdc
   2f524:	mov	r5, r0
   2f528:	add	r0, sp, #8
   2f52c:	str	ip, [sp, #4]
   2f530:	bl	1410c <vsnprintf@plt>
   2f534:	add	r1, sp, #8
   2f538:	cmp	r0, #199	; 0xc7
   2f53c:	movle	r4, r0
   2f540:	ldrgt	r3, [pc, #52]	; 2f57c <__flatcc_fb_print_error@@Base+0x74>
   2f544:	movgt	r4, #199	; 0xc7
   2f548:	ldrbgt	r2, [r3, #4]
   2f54c:	ldrgt	r0, [r3]
   2f550:	ldr	r3, [r5, #8]
   2f554:	strbgt	r2, [sp, #207]	; 0xcf
   2f558:	strgt	r0, [sp, #203]	; 0xcb
   2f55c:	mov	r2, r4
   2f560:	ldr	r0, [r5, #12]
   2f564:	blx	r3
   2f568:	mov	r0, r4
   2f56c:	add	sp, sp, #208	; 0xd0
   2f570:	pop	{r4, r5, lr}
   2f574:	add	sp, sp, #12
   2f578:	bx	lr
   2f57c:	andeq	fp, r5, ip, lsr r1
   2f580:	adds	ip, r1, #0
   2f584:	movne	ip, #1
   2f588:	cmp	r3, #0
   2f58c:	movne	ip, #0
   2f590:	push	{r4, lr}
   2f594:	cmp	ip, #0
   2f598:	sub	sp, sp, #16
   2f59c:	mov	r4, r0
   2f5a0:	ldr	lr, [sp, #24]
   2f5a4:	ldmne	r1, {r3, lr}
   2f5a8:	ldr	r0, [pc, #164]	; 2f654 <__flatcc_fb_print_error@@Base+0x14c>
   2f5ac:	cmp	r2, #0
   2f5b0:	moveq	r2, r0
   2f5b4:	cmp	r3, #0
   2f5b8:	moveq	lr, r3
   2f5bc:	moveq	r3, r0
   2f5c0:	cmp	r1, #0
   2f5c4:	bne	2f5e8 <__flatcc_fb_print_error@@Base+0xe0>
   2f5c8:	ldr	r1, [pc, #136]	; 2f658 <__flatcc_fb_print_error@@Base+0x150>
   2f5cc:	mov	r0, r4
   2f5d0:	bl	2f508 <__flatcc_fb_print_error@@Base>
   2f5d4:	ldr	r3, [r4, #108]	; 0x6c
   2f5d8:	add	r3, r3, #1
   2f5dc:	str	r3, [r4, #108]	; 0x6c
   2f5e0:	add	sp, sp, #16
   2f5e4:	pop	{r4, pc}
   2f5e8:	cmp	r4, #0
   2f5ec:	beq	2f618 <__flatcc_fb_print_error@@Base+0x110>
   2f5f0:	mov	r0, r4
   2f5f4:	ldr	ip, [r0, #20]
   2f5f8:	cmp	r1, ip
   2f5fc:	bcc	2f60c <__flatcc_fb_print_error@@Base+0x104>
   2f600:	ldr	ip, [r0, #24]
   2f604:	cmp	r1, ip
   2f608:	bcc	2f64c <__flatcc_fb_print_error@@Base+0x144>
   2f60c:	ldr	r0, [r0]
   2f610:	cmp	r0, #0
   2f614:	bne	2f5f4 <__flatcc_fb_print_error@@Base+0xec>
   2f618:	ldr	ip, [pc, #52]	; 2f654 <__flatcc_fb_print_error@@Base+0x14c>
   2f61c:	ldr	r0, [r1, #8]
   2f620:	str	r2, [sp, #12]
   2f624:	str	r3, [sp, #8]
   2f628:	str	lr, [sp, #4]
   2f62c:	ldr	r3, [r1, #12]
   2f630:	mov	r2, ip
   2f634:	str	r3, [sp]
   2f638:	ldr	r1, [pc, #28]	; 2f65c <__flatcc_fb_print_error@@Base+0x154>
   2f63c:	mov	r3, r0
   2f640:	mov	r0, r4
   2f644:	bl	2f508 <__flatcc_fb_print_error@@Base>
   2f648:	b	2f5d4 <__flatcc_fb_print_error@@Base+0xcc>
   2f64c:	ldr	ip, [r0, #520]	; 0x208
   2f650:	b	2f61c <__flatcc_fb_print_error@@Base+0x114>
   2f654:	andeq	lr, r4, ip, asr #2
   2f658:	andeq	fp, r5, r4, ror #2
   2f65c:	andeq	fp, r5, r4, asr #2
   2f660:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2f664:	mov	r7, r1
   2f668:	ldr	lr, [r0, #52]	; 0x34
   2f66c:	ldr	ip, [r0, #44]	; 0x2c
   2f670:	add	r1, lr, #16
   2f674:	cmp	r1, ip
   2f678:	sub	sp, sp, #8
   2f67c:	mov	r4, r0
   2f680:	ldr	r5, [r0, #40]	; 0x28
   2f684:	bhi	2f918 <__flatcc_fb_print_error@@Base+0x410>
   2f688:	ldr	r9, [r4, #24]
   2f68c:	add	r8, r5, #20
   2f690:	cmp	r8, r9
   2f694:	str	r1, [r4, #52]	; 0x34
   2f698:	str	r5, [lr, #4]
   2f69c:	str	lr, [r7]
   2f6a0:	str	r8, [r4, #40]	; 0x28
   2f6a4:	beq	2f96c <__flatcc_fb_print_error@@Base+0x464>
   2f6a8:	ldr	r3, [r5, #36]	; 0x24
   2f6ac:	cmn	r3, #964	; 0x3c4
   2f6b0:	movne	r2, r8
   2f6b4:	movne	r8, lr
   2f6b8:	bne	2f744 <__flatcc_fb_print_error@@Base+0x23c>
   2f6bc:	mov	r6, #1
   2f6c0:	mov	r5, #65536	; 0x10000
   2f6c4:	b	2f6f8 <__flatcc_fb_print_error@@Base+0x1f0>
   2f6c8:	ldr	r0, [r4, #36]	; 0x24
   2f6cc:	add	r2, r8, #20
   2f6d0:	cmp	r2, r9
   2f6d4:	str	r1, [r4, #52]	; 0x34
   2f6d8:	stm	r3, {r0, r8}
   2f6dc:	str	r3, [r4, #36]	; 0x24
   2f6e0:	str	r2, [r4, #40]	; 0x28
   2f6e4:	beq	2f970 <__flatcc_fb_print_error@@Base+0x468>
   2f6e8:	ldr	r3, [r2, #16]
   2f6ec:	cmn	r3, #964	; 0x3c4
   2f6f0:	bne	2f740 <__flatcc_fb_print_error@@Base+0x238>
   2f6f4:	mov	r8, r2
   2f6f8:	add	r2, r1, #16
   2f6fc:	cmp	r2, ip
   2f700:	movls	r3, r1
   2f704:	movls	r1, r2
   2f708:	bls	2f6c8 <__flatcc_fb_print_error@@Base+0x1c0>
   2f70c:	mov	r1, r6
   2f710:	mov	r0, r5
   2f714:	bl	13fa4 <calloc@plt>
   2f718:	cmp	r0, #0
   2f71c:	beq	2f968 <__flatcc_fb_print_error@@Base+0x460>
   2f720:	ldr	r3, [r4, #48]	; 0x30
   2f724:	add	ip, r0, #65536	; 0x10000
   2f728:	str	r3, [r0]
   2f72c:	str	r0, [r4, #48]	; 0x30
   2f730:	str	ip, [r4, #44]	; 0x2c
   2f734:	add	r3, r0, #16
   2f738:	add	r1, r0, #32
   2f73c:	b	2f6c8 <__flatcc_fb_print_error@@Base+0x1c0>
   2f740:	ldr	r8, [r7]
   2f744:	mov	r7, #1
   2f748:	mov	r6, #65536	; 0x10000
   2f74c:	cmp	r3, #46	; 0x2e
   2f750:	bne	2f910 <__flatcc_fb_print_error@@Base+0x408>
   2f754:	add	sl, r2, #20
   2f758:	cmp	sl, r9
   2f75c:	str	sl, [r4, #40]	; 0x28
   2f760:	beq	2f978 <__flatcc_fb_print_error@@Base+0x470>
   2f764:	ldr	r3, [r2, #36]	; 0x24
   2f768:	cmn	r3, #964	; 0x3c4
   2f76c:	bne	2f7f4 <__flatcc_fb_print_error@@Base+0x2ec>
   2f770:	ldr	r0, [r4, #52]	; 0x34
   2f774:	ldr	r1, [r4, #44]	; 0x2c
   2f778:	b	2f7ac <__flatcc_fb_print_error@@Base+0x2a4>
   2f77c:	ldr	r2, [r4, #36]	; 0x24
   2f780:	add	r5, sl, #20
   2f784:	cmp	r5, r9
   2f788:	str	r0, [r4, #52]	; 0x34
   2f78c:	stm	r3, {r2, sl}
   2f790:	str	r3, [r4, #36]	; 0x24
   2f794:	str	r5, [r4, #40]	; 0x28
   2f798:	beq	2f950 <__flatcc_fb_print_error@@Base+0x448>
   2f79c:	ldr	r3, [r5, #16]
   2f7a0:	cmn	r3, #964	; 0x3c4
   2f7a4:	bne	2f7f8 <__flatcc_fb_print_error@@Base+0x2f0>
   2f7a8:	mov	sl, r5
   2f7ac:	add	r2, r0, #16
   2f7b0:	cmp	r2, r1
   2f7b4:	movls	r3, r0
   2f7b8:	movls	r0, r2
   2f7bc:	bls	2f77c <__flatcc_fb_print_error@@Base+0x274>
   2f7c0:	mov	r1, r7
   2f7c4:	mov	r0, r6
   2f7c8:	bl	13fa4 <calloc@plt>
   2f7cc:	cmp	r0, #0
   2f7d0:	beq	2f968 <__flatcc_fb_print_error@@Base+0x460>
   2f7d4:	ldr	r3, [r4, #48]	; 0x30
   2f7d8:	add	r1, r0, #65536	; 0x10000
   2f7dc:	str	r3, [r0]
   2f7e0:	str	r0, [r4, #48]	; 0x30
   2f7e4:	add	r3, r0, #16
   2f7e8:	str	r1, [r4, #44]	; 0x2c
   2f7ec:	add	r0, r0, #32
   2f7f0:	b	2f77c <__flatcc_fb_print_error@@Base+0x274>
   2f7f4:	mov	r5, sl
   2f7f8:	cmp	r3, #9
   2f7fc:	bne	2f8f8 <__flatcc_fb_print_error@@Base+0x3f0>
   2f800:	ldr	r3, [r4, #52]	; 0x34
   2f804:	ldr	r1, [r4, #44]	; 0x2c
   2f808:	add	r0, r3, #16
   2f80c:	cmp	r0, r1
   2f810:	bhi	2f8c4 <__flatcc_fb_print_error@@Base+0x3bc>
   2f814:	add	sl, r5, #20
   2f818:	cmp	sl, r9
   2f81c:	str	r0, [r4, #52]	; 0x34
   2f820:	str	r5, [r3, #4]
   2f824:	str	r3, [r8]
   2f828:	mov	r8, r3
   2f82c:	str	sl, [r4, #40]	; 0x28
   2f830:	beq	2f94c <__flatcc_fb_print_error@@Base+0x444>
   2f834:	ldr	r3, [r5, #36]	; 0x24
   2f838:	cmn	r3, #964	; 0x3c4
   2f83c:	movne	r2, sl
   2f840:	beq	2f87c <__flatcc_fb_print_error@@Base+0x374>
   2f844:	b	2f74c <__flatcc_fb_print_error@@Base+0x244>
   2f848:	ldr	ip, [r4, #36]	; 0x24
   2f84c:	add	r2, sl, #20
   2f850:	cmp	r2, r9
   2f854:	str	r0, [r4, #52]	; 0x34
   2f858:	str	sl, [r3, #4]
   2f85c:	str	ip, [r3]
   2f860:	str	r3, [r4, #36]	; 0x24
   2f864:	str	r2, [r4, #40]	; 0x28
   2f868:	beq	2f950 <__flatcc_fb_print_error@@Base+0x448>
   2f86c:	ldr	r3, [r2, #16]
   2f870:	cmn	r3, #964	; 0x3c4
   2f874:	bne	2f74c <__flatcc_fb_print_error@@Base+0x244>
   2f878:	mov	sl, r2
   2f87c:	add	r2, r0, #16
   2f880:	cmp	r2, r1
   2f884:	movls	r3, r0
   2f888:	movls	r0, r2
   2f88c:	bls	2f848 <__flatcc_fb_print_error@@Base+0x340>
   2f890:	mov	r1, r7
   2f894:	mov	r0, r6
   2f898:	bl	13fa4 <calloc@plt>
   2f89c:	cmp	r0, #0
   2f8a0:	beq	2f968 <__flatcc_fb_print_error@@Base+0x460>
   2f8a4:	ldr	r3, [r4, #48]	; 0x30
   2f8a8:	add	r1, r0, #65536	; 0x10000
   2f8ac:	str	r3, [r0]
   2f8b0:	str	r0, [r4, #48]	; 0x30
   2f8b4:	add	r3, r0, #16
   2f8b8:	str	r1, [r4, #44]	; 0x2c
   2f8bc:	add	r0, r0, #32
   2f8c0:	b	2f848 <__flatcc_fb_print_error@@Base+0x340>
   2f8c4:	mov	r1, r7
   2f8c8:	mov	r0, r6
   2f8cc:	bl	13fa4 <calloc@plt>
   2f8d0:	subs	r2, r0, #0
   2f8d4:	beq	2f968 <__flatcc_fb_print_error@@Base+0x460>
   2f8d8:	ldr	ip, [r4, #48]	; 0x30
   2f8dc:	add	r1, r2, #65536	; 0x10000
   2f8e0:	add	r3, r2, #16
   2f8e4:	add	r0, r2, #32
   2f8e8:	str	ip, [r2]
   2f8ec:	str	r2, [r4, #48]	; 0x30
   2f8f0:	str	r1, [r4, #44]	; 0x2c
   2f8f4:	b	2f814 <__flatcc_fb_print_error@@Base+0x30c>
   2f8f8:	mov	r3, #0
   2f8fc:	mov	r1, r5
   2f900:	mov	r0, r4
   2f904:	str	r3, [sp]
   2f908:	ldr	r2, [pc, #112]	; 2f980 <__flatcc_fb_print_error@@Base+0x478>
   2f90c:	bl	2f580 <__flatcc_fb_print_error@@Base+0x78>
   2f910:	add	sp, sp, #8
   2f914:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2f918:	mov	r1, #1
   2f91c:	mov	r0, #65536	; 0x10000
   2f920:	bl	13fa4 <calloc@plt>
   2f924:	cmp	r0, #0
   2f928:	beq	2f968 <__flatcc_fb_print_error@@Base+0x460>
   2f92c:	ldr	r3, [r4, #48]	; 0x30
   2f930:	add	ip, r0, #65536	; 0x10000
   2f934:	add	lr, r0, #16
   2f938:	add	r1, r0, #32
   2f93c:	str	r3, [r0]
   2f940:	str	r0, [r4, #48]	; 0x30
   2f944:	str	ip, [r4, #44]	; 0x2c
   2f948:	b	2f688 <__flatcc_fb_print_error@@Base+0x180>
   2f94c:	mov	sl, r5
   2f950:	str	sl, [r4, #40]	; 0x28
   2f954:	ldr	r3, [pc, #40]	; 2f984 <__flatcc_fb_print_error@@Base+0x47c>
   2f958:	ldr	r2, [pc, #40]	; 2f988 <__flatcc_fb_print_error@@Base+0x480>
   2f95c:	ldr	r1, [pc, #40]	; 2f98c <__flatcc_fb_print_error@@Base+0x484>
   2f960:	ldr	r0, [pc, #40]	; 2f990 <__flatcc_fb_print_error@@Base+0x488>
   2f964:	bl	14148 <__assert_fail@plt>
   2f968:	bl	141a8 <__assert_fail@plt+0x60>
   2f96c:	mov	r8, r5
   2f970:	str	r8, [r4, #40]	; 0x28
   2f974:	b	2f954 <__flatcc_fb_print_error@@Base+0x44c>
   2f978:	mov	sl, r2
   2f97c:	b	2f950 <__flatcc_fb_print_error@@Base+0x448>
   2f980:	andeq	fp, r5, r0, ror r1
   2f984:	andeq	sl, r5, r4, lsr #30
   2f988:	andeq	r0, r0, r5, asr r1
   2f98c:	andeq	fp, r5, ip, asr #32
   2f990:	andeq	sp, r4, r4, ror r2
   2f994:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2f998:	mov	r8, #0
   2f99c:	mov	r7, r1
   2f9a0:	str	r8, [r1]
   2f9a4:	str	r8, [r1, #4]
   2f9a8:	ldr	sl, [pc, #720]	; 2fc80 <__flatcc_fb_print_error@@Base+0x778>
   2f9ac:	ldr	r1, [r0, #40]	; 0x28
   2f9b0:	sub	sp, sp, #12
   2f9b4:	mov	r4, r0
   2f9b8:	mov	r5, #1
   2f9bc:	mov	r3, #2
   2f9c0:	ldr	r2, [r1, #16]
   2f9c4:	strh	r3, [r7, #8]
   2f9c8:	sub	r2, r2, #6
   2f9cc:	cmp	r2, #17
   2f9d0:	ldrls	pc, [pc, r2, lsl #2]
   2f9d4:	b	2fa20 <__flatcc_fb_print_error@@Base+0x518>
   2f9d8:	andeq	pc, r2, r4, lsr ip	; <UNPREDICTABLE>
   2f9dc:	andeq	pc, r2, r0, lsr #20
   2f9e0:	andeq	pc, r2, r0, lsr #20
   2f9e4:	andeq	pc, r2, r0, lsr #20
   2f9e8:	andeq	pc, r2, r0, lsr #20
   2f9ec:	andeq	pc, r2, r0, lsr #20
   2f9f0:	andeq	pc, r2, r0, lsr #20
   2f9f4:	andeq	pc, r2, r0, lsr #20
   2f9f8:	andeq	pc, r2, r0, lsr #20
   2f9fc:	andeq	pc, r2, r0, lsr #20
   2fa00:	andeq	pc, r2, r0, lsr #20
   2fa04:	andeq	pc, r2, r0, lsr #20
   2fa08:	andeq	pc, r2, r4, lsl ip	; <UNPREDICTABLE>
   2fa0c:	andeq	pc, r2, r0, lsr #20
   2fa10:	strdeq	pc, [r2], -ip
   2fa14:	andeq	pc, r2, r4, lsr fp	; <UNPREDICTABLE>
   2fa18:	andeq	pc, r2, r0, asr #20
   2fa1c:	andeq	pc, r2, r0, asr #20
   2fa20:	mov	r3, #0
   2fa24:	str	r3, [sp]
   2fa28:	ldr	r2, [pc, #596]	; 2fc84 <__flatcc_fb_print_error@@Base+0x77c>
   2fa2c:	mov	r0, r4
   2fa30:	bl	2f580 <__flatcc_fb_print_error@@Base+0x78>
   2fa34:	ldr	r1, [r4, #40]	; 0x28
   2fa38:	mov	r3, #1
   2fa3c:	strh	r3, [r7, #8]
   2fa40:	ldr	r2, [r7]
   2fa44:	cmp	r2, #0
   2fa48:	ldrne	r3, [r1]
   2fa4c:	subne	r3, r3, r2
   2fa50:	strne	r3, [r7, #4]
   2fa54:	ldrne	r1, [r4, #40]	; 0x28
   2fa58:	ldr	r3, [r1, #16]
   2fa5c:	cmp	r3, #22
   2fa60:	bne	2fb10 <__flatcc_fb_print_error@@Base+0x608>
   2fa64:	ldr	r8, [r4, #24]
   2fa68:	add	r5, r1, #20
   2fa6c:	cmp	r5, r8
   2fa70:	str	r5, [r4, #40]	; 0x28
   2fa74:	beq	2fc74 <__flatcc_fb_print_error@@Base+0x76c>
   2fa78:	ldr	r3, [r1, #36]	; 0x24
   2fa7c:	cmn	r3, #964	; 0x3c4
   2fa80:	bne	2fb2c <__flatcc_fb_print_error@@Base+0x624>
   2fa84:	ldr	r0, [r4, #52]	; 0x34
   2fa88:	ldr	ip, [r4, #44]	; 0x2c
   2fa8c:	mov	r7, #1
   2fa90:	mov	r6, #65536	; 0x10000
   2fa94:	b	2fac8 <__flatcc_fb_print_error@@Base+0x5c0>
   2fa98:	ldr	r1, [r4, #36]	; 0x24
   2fa9c:	add	r3, r5, #20
   2faa0:	cmp	r3, r8
   2faa4:	str	r0, [r4, #52]	; 0x34
   2faa8:	stm	r2, {r1, r5}
   2faac:	str	r2, [r4, #36]	; 0x24
   2fab0:	str	r3, [r4, #40]	; 0x28
   2fab4:	beq	2fc78 <__flatcc_fb_print_error@@Base+0x770>
   2fab8:	ldr	r2, [r3, #16]
   2fabc:	cmn	r2, #964	; 0x3c4
   2fac0:	bne	2fb2c <__flatcc_fb_print_error@@Base+0x624>
   2fac4:	mov	r5, r3
   2fac8:	add	r3, r0, #16
   2facc:	cmp	r3, ip
   2fad0:	movls	r2, r0
   2fad4:	movls	r0, r3
   2fad8:	bls	2fa98 <__flatcc_fb_print_error@@Base+0x590>
   2fadc:	mov	r1, r7
   2fae0:	mov	r0, r6
   2fae4:	bl	13fa4 <calloc@plt>
   2fae8:	cmp	r0, #0
   2faec:	beq	2fc70 <__flatcc_fb_print_error@@Base+0x768>
   2faf0:	ldr	r3, [r4, #48]	; 0x30
   2faf4:	add	ip, r0, #65536	; 0x10000
   2faf8:	str	r3, [r0]
   2fafc:	str	r0, [r4, #48]	; 0x30
   2fb00:	add	r2, r0, #16
   2fb04:	str	ip, [r4, #44]	; 0x2c
   2fb08:	add	r0, r0, #32
   2fb0c:	b	2fa98 <__flatcc_fb_print_error@@Base+0x590>
   2fb10:	mov	r3, #0
   2fb14:	str	r3, [sp]
   2fb18:	mov	r0, r4
   2fb1c:	ldr	r2, [pc, #356]	; 2fc88 <__flatcc_fb_print_error@@Base+0x780>
   2fb20:	bl	2f580 <__flatcc_fb_print_error@@Base+0x78>
   2fb24:	mov	r3, #1
   2fb28:	strh	r3, [r7, #8]
   2fb2c:	add	sp, sp, #12
   2fb30:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2fb34:	strh	r5, [r7, #8]
   2fb38:	mov	r3, #0
   2fb3c:	str	r8, [sp]
   2fb40:	ldr	r2, [pc, #324]	; 2fc8c <__flatcc_fb_print_error@@Base+0x784>
   2fb44:	mov	r0, r4
   2fb48:	bl	2f580 <__flatcc_fb_print_error@@Base+0x78>
   2fb4c:	ldr	r1, [r4, #40]	; 0x28
   2fb50:	ldr	r9, [r4, #24]
   2fb54:	add	fp, r1, #20
   2fb58:	cmp	fp, r9
   2fb5c:	str	fp, [r4, #40]	; 0x28
   2fb60:	beq	2fc54 <__flatcc_fb_print_error@@Base+0x74c>
   2fb64:	ldr	r2, [r1, #36]	; 0x24
   2fb68:	cmn	r2, #964	; 0x3c4
   2fb6c:	movne	r1, fp
   2fb70:	bne	2f9c8 <__flatcc_fb_print_error@@Base+0x4c0>
   2fb74:	ldr	r0, [r4, #52]	; 0x34
   2fb78:	ldr	ip, [r4, #44]	; 0x2c
   2fb7c:	mov	r6, #65536	; 0x10000
   2fb80:	b	2fbb4 <__flatcc_fb_print_error@@Base+0x6ac>
   2fb84:	ldr	r3, [r4, #36]	; 0x24
   2fb88:	add	r1, fp, #20
   2fb8c:	cmp	r1, r9
   2fb90:	str	r0, [r4, #52]	; 0x34
   2fb94:	stm	r2, {r3, fp}
   2fb98:	str	r2, [r4, #36]	; 0x24
   2fb9c:	str	r1, [r4, #40]	; 0x28
   2fba0:	beq	2fc58 <__flatcc_fb_print_error@@Base+0x750>
   2fba4:	ldr	r2, [r1, #16]
   2fba8:	cmn	r2, #964	; 0x3c4
   2fbac:	bne	2f9c8 <__flatcc_fb_print_error@@Base+0x4c0>
   2fbb0:	mov	fp, r1
   2fbb4:	add	r3, r0, #16
   2fbb8:	cmp	r3, ip
   2fbbc:	movls	r2, r0
   2fbc0:	movls	r0, r3
   2fbc4:	bls	2fb84 <__flatcc_fb_print_error@@Base+0x67c>
   2fbc8:	mov	r1, r5
   2fbcc:	mov	r0, r6
   2fbd0:	bl	13fa4 <calloc@plt>
   2fbd4:	cmp	r0, #0
   2fbd8:	beq	2fc70 <__flatcc_fb_print_error@@Base+0x768>
   2fbdc:	ldr	r3, [r4, #48]	; 0x30
   2fbe0:	add	ip, r0, #65536	; 0x10000
   2fbe4:	str	r3, [r0]
   2fbe8:	str	r0, [r4, #48]	; 0x30
   2fbec:	add	r2, r0, #16
   2fbf0:	str	ip, [r4, #44]	; 0x2c
   2fbf4:	add	r0, r0, #32
   2fbf8:	b	2fb84 <__flatcc_fb_print_error@@Base+0x67c>
   2fbfc:	ldr	r3, [r7]
   2fc00:	cmp	r3, #0
   2fc04:	ldreq	r3, [r1]
   2fc08:	streq	r3, [r7]
   2fc0c:	ldreq	r1, [r4, #40]	; 0x28
   2fc10:	b	2fb50 <__flatcc_fb_print_error@@Base+0x648>
   2fc14:	strh	r5, [r7, #8]
   2fc18:	mov	r3, #0
   2fc1c:	str	r8, [sp]
   2fc20:	mov	r2, sl
   2fc24:	mov	r0, r4
   2fc28:	bl	2f580 <__flatcc_fb_print_error@@Base+0x78>
   2fc2c:	ldr	r1, [r4, #40]	; 0x28
   2fc30:	b	2fb50 <__flatcc_fb_print_error@@Base+0x648>
   2fc34:	strh	r5, [r7, #8]
   2fc38:	ldr	r3, [pc, #80]	; 2fc90 <__flatcc_fb_print_error@@Base+0x788>
   2fc3c:	str	r5, [sp]
   2fc40:	ldr	r2, [pc, #76]	; 2fc94 <__flatcc_fb_print_error@@Base+0x78c>
   2fc44:	mov	r0, r4
   2fc48:	bl	2f580 <__flatcc_fb_print_error@@Base+0x78>
   2fc4c:	ldr	r1, [r4, #40]	; 0x28
   2fc50:	b	2fb50 <__flatcc_fb_print_error@@Base+0x648>
   2fc54:	mov	fp, r1
   2fc58:	str	fp, [r4, #40]	; 0x28
   2fc5c:	ldr	r3, [pc, #52]	; 2fc98 <__flatcc_fb_print_error@@Base+0x790>
   2fc60:	ldr	r2, [pc, #52]	; 2fc9c <__flatcc_fb_print_error@@Base+0x794>
   2fc64:	ldr	r1, [pc, #52]	; 2fca0 <__flatcc_fb_print_error@@Base+0x798>
   2fc68:	ldr	r0, [pc, #52]	; 2fca4 <__flatcc_fb_print_error@@Base+0x79c>
   2fc6c:	bl	14148 <__assert_fail@plt>
   2fc70:	bl	141a8 <__assert_fail@plt+0x60>
   2fc74:	mov	r5, r1
   2fc78:	str	r5, [r4, #40]	; 0x28
   2fc7c:	b	2fc5c <__flatcc_fb_print_error@@Base+0x754>
   2fc80:	andeq	fp, r5, r8, ror #3
   2fc84:	andeq	fp, r5, r8, lsl #4
   2fc88:	andeq	fp, r5, r4, lsr r2
   2fc8c:	muleq	r5, r8, r1
   2fc90:			; <UNDEFINED> instruction: 0x0005b1b8
   2fc94:			; <UNDEFINED> instruction: 0x0005b1bc
   2fc98:	andeq	sl, r5, r4, lsr #30
   2fc9c:	andeq	r0, r0, r5, asr r1
   2fca0:	andeq	fp, r5, ip, asr #32
   2fca4:	andeq	sp, r4, r4, ror r2
   2fca8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2fcac:	sub	sp, sp, #52	; 0x34
   2fcb0:	ldr	r8, [r0, #40]	; 0x28
   2fcb4:	str	r3, [sp, #8]
   2fcb8:	mov	r4, r0
   2fcbc:	ldr	r3, [r8, #16]
   2fcc0:	str	r2, [sp, #12]
   2fcc4:	cmp	r3, #45	; 0x2d
   2fcc8:	mov	r9, r1
   2fccc:	beq	2feac <__flatcc_fb_print_error@@Base+0x9a4>
   2fcd0:	cmp	r3, #10
   2fcd4:	beq	30120 <__flatcc_fb_print_error@@Base+0xc18>
   2fcd8:	ble	2fd14 <__flatcc_fb_print_error@@Base+0x80c>
   2fcdc:	cmp	r3, #14
   2fce0:	beq	2fff0 <__flatcc_fb_print_error@@Base+0xae8>
   2fce4:	cmp	r3, #19
   2fce8:	beq	2fdfc <__flatcc_fb_print_error@@Base+0x8f4>
   2fcec:	cmp	r3, #11
   2fcf0:	beq	30080 <__flatcc_fb_print_error@@Base+0xb78>
   2fcf4:	mov	r3, #0
   2fcf8:	ldr	r2, [sp, #8]
   2fcfc:	mov	r1, r8
   2fd00:	mov	r0, r4
   2fd04:	str	r3, [sp]
   2fd08:	bl	2f580 <__flatcc_fb_print_error@@Base+0x78>
   2fd0c:	add	sp, sp, #52	; 0x34
   2fd10:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2fd14:	ldr	r2, [pc, #1952]	; 304bc <__flatcc_fb_print_error@@Base+0xfb4>
   2fd18:	cmp	r3, r2
   2fd1c:	beq	30108 <__flatcc_fb_print_error@@Base+0xc00>
   2fd20:	cmp	r3, #9
   2fd24:	beq	30268 <__flatcc_fb_print_error@@Base+0xd60>
   2fd28:	cmn	r3, #988	; 0x3dc
   2fd2c:	moveq	r3, #0
   2fd30:	bne	2fcf4 <__flatcc_fb_print_error@@Base+0x7ec>
   2fd34:	mov	r1, #1
   2fd38:	mov	r2, #6
   2fd3c:	strb	r1, [r9]
   2fd40:	strh	r2, [r9, #8]
   2fd44:	cmp	r3, #0
   2fd48:	bne	300e4 <__flatcc_fb_print_error@@Base+0xbdc>
   2fd4c:	ldr	r3, [r4, #40]	; 0x28
   2fd50:	ldr	r8, [r4, #24]
   2fd54:	add	r5, r3, #20
   2fd58:	cmp	r8, r5
   2fd5c:	str	r5, [r4, #40]	; 0x28
   2fd60:	beq	30418 <__flatcc_fb_print_error@@Base+0xf10>
   2fd64:	ldr	r3, [r3, #36]	; 0x24
   2fd68:	cmn	r3, #964	; 0x3c4
   2fd6c:	bne	2fd0c <__flatcc_fb_print_error@@Base+0x804>
   2fd70:	ldr	r0, [r4, #52]	; 0x34
   2fd74:	ldr	ip, [r4, #44]	; 0x2c
   2fd78:	mov	r7, #1
   2fd7c:	mov	r6, #65536	; 0x10000
   2fd80:	b	2fdb4 <__flatcc_fb_print_error@@Base+0x8ac>
   2fd84:	ldr	r1, [r4, #36]	; 0x24
   2fd88:	add	r3, r5, #20
   2fd8c:	cmp	r8, r3
   2fd90:	str	r0, [r4, #52]	; 0x34
   2fd94:	stm	r2, {r1, r5}
   2fd98:	str	r2, [r4, #36]	; 0x24
   2fd9c:	str	r3, [r4, #40]	; 0x28
   2fda0:	beq	3041c <__flatcc_fb_print_error@@Base+0xf14>
   2fda4:	ldr	r2, [r3, #16]
   2fda8:	cmn	r2, #964	; 0x3c4
   2fdac:	bne	2fd0c <__flatcc_fb_print_error@@Base+0x804>
   2fdb0:	mov	r5, r3
   2fdb4:	add	r3, r0, #16
   2fdb8:	cmp	r3, ip
   2fdbc:	movls	r2, r0
   2fdc0:	movls	r0, r3
   2fdc4:	bls	2fd84 <__flatcc_fb_print_error@@Base+0x87c>
   2fdc8:	mov	r1, r7
   2fdcc:	mov	r0, r6
   2fdd0:	bl	13fa4 <calloc@plt>
   2fdd4:	cmp	r0, #0
   2fdd8:	beq	304ac <__flatcc_fb_print_error@@Base+0xfa4>
   2fddc:	ldr	r3, [r4, #48]	; 0x30
   2fde0:	add	ip, r0, #65536	; 0x10000
   2fde4:	str	r3, [r0]
   2fde8:	str	r0, [r4, #48]	; 0x30
   2fdec:	add	r2, r0, #16
   2fdf0:	str	ip, [r4, #44]	; 0x2c
   2fdf4:	add	r0, r0, #32
   2fdf8:	b	2fd84 <__flatcc_fb_print_error@@Base+0x87c>
   2fdfc:	ldr	r5, [r0, #24]
   2fe00:	mov	sl, #0
   2fe04:	add	fp, r8, #20
   2fe08:	cmp	fp, r5
   2fe0c:	str	fp, [r4, #40]	; 0x28
   2fe10:	beq	30478 <__flatcc_fb_print_error@@Base+0xf70>
   2fe14:	ldr	r2, [r8, #36]	; 0x24
   2fe18:	cmn	r2, #964	; 0x3c4
   2fe1c:	bne	2ffac <__flatcc_fb_print_error@@Base+0xaa4>
   2fe20:	ldr	r0, [r4, #52]	; 0x34
   2fe24:	ldr	lr, [r4, #44]	; 0x2c
   2fe28:	mov	r7, #1
   2fe2c:	mov	r6, #65536	; 0x10000
   2fe30:	b	2fe64 <__flatcc_fb_print_error@@Base+0x95c>
   2fe34:	ldr	r1, [r4, #36]	; 0x24
   2fe38:	add	r3, fp, #20
   2fe3c:	cmp	r3, r5
   2fe40:	str	r0, [r4, #52]	; 0x34
   2fe44:	stm	r2, {r1, fp}
   2fe48:	str	r2, [r4, #36]	; 0x24
   2fe4c:	str	r3, [r4, #40]	; 0x28
   2fe50:	beq	3047c <__flatcc_fb_print_error@@Base+0xf74>
   2fe54:	ldr	r2, [r3, #16]
   2fe58:	cmn	r2, #964	; 0x3c4
   2fe5c:	bne	2ffac <__flatcc_fb_print_error@@Base+0xaa4>
   2fe60:	mov	fp, r3
   2fe64:	add	r3, r0, #16
   2fe68:	cmp	r3, lr
   2fe6c:	movls	r2, r0
   2fe70:	movls	r0, r3
   2fe74:	bls	2fe34 <__flatcc_fb_print_error@@Base+0x92c>
   2fe78:	mov	r1, r7
   2fe7c:	mov	r0, r6
   2fe80:	bl	13fa4 <calloc@plt>
   2fe84:	cmp	r0, #0
   2fe88:	beq	304ac <__flatcc_fb_print_error@@Base+0xfa4>
   2fe8c:	ldr	r3, [r4, #48]	; 0x30
   2fe90:	add	lr, r0, #65536	; 0x10000
   2fe94:	str	r3, [r0]
   2fe98:	str	r0, [r4, #48]	; 0x30
   2fe9c:	add	r2, r0, #16
   2fea0:	str	lr, [r4, #44]	; 0x2c
   2fea4:	add	r0, r0, #32
   2fea8:	b	2fe34 <__flatcc_fb_print_error@@Base+0x92c>
   2feac:	ldr	r5, [r0, #24]
   2feb0:	add	sl, r8, #20
   2feb4:	cmp	sl, r5
   2feb8:	str	sl, [r0, #40]	; 0x28
   2febc:	beq	304b0 <__flatcc_fb_print_error@@Base+0xfa8>
   2fec0:	ldr	r2, [r8, #36]	; 0x24
   2fec4:	cmn	r2, #964	; 0x3c4
   2fec8:	bne	2ff58 <__flatcc_fb_print_error@@Base+0xa50>
   2fecc:	ldr	r0, [r0, #52]	; 0x34
   2fed0:	ldr	ip, [r4, #44]	; 0x2c
   2fed4:	mov	r7, #1
   2fed8:	mov	r6, #65536	; 0x10000
   2fedc:	b	2ff10 <__flatcc_fb_print_error@@Base+0xa08>
   2fee0:	ldr	r2, [r4, #36]	; 0x24
   2fee4:	add	fp, sl, #20
   2fee8:	cmp	r5, fp
   2feec:	str	r0, [r4, #52]	; 0x34
   2fef0:	stm	r3, {r2, sl}
   2fef4:	str	r3, [r4, #36]	; 0x24
   2fef8:	str	fp, [r4, #40]	; 0x28
   2fefc:	beq	304b4 <__flatcc_fb_print_error@@Base+0xfac>
   2ff00:	ldr	r2, [fp, #16]
   2ff04:	cmn	r2, #964	; 0x3c4
   2ff08:	bne	2ff5c <__flatcc_fb_print_error@@Base+0xa54>
   2ff0c:	mov	sl, fp
   2ff10:	add	r2, r0, #16
   2ff14:	cmp	r2, ip
   2ff18:	movls	r3, r0
   2ff1c:	movls	r0, r2
   2ff20:	bls	2fee0 <__flatcc_fb_print_error@@Base+0x9d8>
   2ff24:	mov	r1, r7
   2ff28:	mov	r0, r6
   2ff2c:	bl	13fa4 <calloc@plt>
   2ff30:	cmp	r0, #0
   2ff34:	beq	304ac <__flatcc_fb_print_error@@Base+0xfa4>
   2ff38:	ldr	r3, [r4, #48]	; 0x30
   2ff3c:	add	ip, r0, #65536	; 0x10000
   2ff40:	str	r3, [r0]
   2ff44:	str	r0, [r4, #48]	; 0x30
   2ff48:	add	r3, r0, #16
   2ff4c:	str	ip, [r4, #44]	; 0x2c
   2ff50:	add	r0, r0, #32
   2ff54:	b	2fee0 <__flatcc_fb_print_error@@Base+0x9d8>
   2ff58:	mov	fp, sl
   2ff5c:	cmp	r2, #10
   2ff60:	beq	3040c <__flatcc_fb_print_error@@Base+0xf04>
   2ff64:	bgt	30384 <__flatcc_fb_print_error@@Base+0xe7c>
   2ff68:	ldr	r3, [pc, #1356]	; 304bc <__flatcc_fb_print_error@@Base+0xfb4>
   2ff6c:	cmp	r2, r3
   2ff70:	beq	303dc <__flatcc_fb_print_error@@Base+0xed4>
   2ff74:	cmp	r2, #9
   2ff78:	bne	303a4 <__flatcc_fb_print_error@@Base+0xe9c>
   2ff7c:	mov	r1, r9
   2ff80:	mov	r0, r4
   2ff84:	bl	2f660 <__flatcc_fb_print_error@@Base+0x158>
   2ff88:	mov	r2, #1
   2ff8c:	mov	r3, #0
   2ff90:	strh	r2, [r9, #8]
   2ff94:	mov	r1, fp
   2ff98:	mov	r0, r4
   2ff9c:	str	r3, [sp]
   2ffa0:	ldr	r2, [pc, #1304]	; 304c0 <__flatcc_fb_print_error@@Base+0xfb8>
   2ffa4:	bl	2f580 <__flatcc_fb_print_error@@Base+0x78>
   2ffa8:	b	2fd0c <__flatcc_fb_print_error@@Base+0x804>
   2ffac:	mov	r1, r9
   2ffb0:	mov	r0, r4
   2ffb4:	bl	2f994 <__flatcc_fb_print_error@@Base+0x48c>
   2ffb8:	ldr	r3, [sp, #12]
   2ffbc:	ands	r3, r3, #1
   2ffc0:	beq	30364 <__flatcc_fb_print_error@@Base+0xe5c>
   2ffc4:	cmp	sl, #0
   2ffc8:	beq	2fd0c <__flatcc_fb_print_error@@Base+0x804>
   2ffcc:	mov	r2, #1
   2ffd0:	mov	r3, #0
   2ffd4:	strh	r2, [r9, #8]
   2ffd8:	mov	r1, r8
   2ffdc:	mov	r0, r4
   2ffe0:	str	r3, [sp]
   2ffe4:	ldr	r2, [pc, #1240]	; 304c4 <__flatcc_fb_print_error@@Base+0xfbc>
   2ffe8:	bl	2f580 <__flatcc_fb_print_error@@Base+0x78>
   2ffec:	b	2fd0c <__flatcc_fb_print_error@@Base+0x804>
   2fff0:	mov	r5, #0
   2fff4:	ldr	r3, [r8]
   2fff8:	ldr	r2, [r8, #4]
   2fffc:	mov	r1, #5
   30000:	add	ip, r3, r2
   30004:	cmp	r3, ip
   30008:	strh	r1, [r9, #8]
   3000c:	beq	3003c <__flatcc_fb_print_error@@Base+0xb34>
   30010:	ldrb	lr, [r3]
   30014:	sub	r1, lr, #45	; 0x2d
   30018:	clz	r1, r1
   3001c:	lsr	r1, r1, #5
   30020:	sub	r2, r2, r1
   30024:	cmp	r2, #1
   30028:	add	r2, r3, r1
   3002c:	ble	3003c <__flatcc_fb_print_error@@Base+0xb34>
   30030:	ldrb	r3, [r3, r1]
   30034:	cmp	r3, #48	; 0x30
   30038:	beq	3029c <__flatcc_fb_print_error@@Base+0xd94>
   3003c:	mov	r2, #1
   30040:	mov	r3, #0
   30044:	strh	r2, [r9, #8]
   30048:	mov	r1, r8
   3004c:	str	r3, [sp]
   30050:	ldr	r2, [pc, #1136]	; 304c8 <__flatcc_fb_print_error@@Base+0xfc0>
   30054:	mov	r0, r4
   30058:	bl	2f580 <__flatcc_fb_print_error@@Base+0x78>
   3005c:	cmp	r5, #0
   30060:	beq	2fd4c <__flatcc_fb_print_error@@Base+0x844>
   30064:	ldrd	r2, [r9]
   30068:	mov	r1, #4
   3006c:	strh	r1, [r9, #8]
   30070:	rsbs	r2, r2, #0
   30074:	rsc	r3, r3, #0
   30078:	strd	r2, [r9]
   3007c:	b	2fd4c <__flatcc_fb_print_error@@Base+0x844>
   30080:	mov	r5, #0
   30084:	mov	r3, #3
   30088:	strh	r3, [r9, #8]
   3008c:	add	r1, sp, #44	; 0x2c
   30090:	ldr	r0, [r8]
   30094:	bl	140c4 <strtod@plt>
   30098:	ldm	r8, {r2, r3}
   3009c:	ldr	r1, [sp, #44]	; 0x2c
   300a0:	add	r3, r2, r3
   300a4:	cmp	r1, r3
   300a8:	vstr	d0, [r9]
   300ac:	beq	30248 <__flatcc_fb_print_error@@Base+0xd40>
   300b0:	mov	r2, #1
   300b4:	mov	r3, #0
   300b8:	strh	r2, [r9, #8]
   300bc:	mov	r1, r8
   300c0:	str	r3, [sp]
   300c4:	ldr	r2, [pc, #1024]	; 304cc <__flatcc_fb_print_error@@Base+0xfc4>
   300c8:	mov	r0, r4
   300cc:	bl	2f580 <__flatcc_fb_print_error@@Base+0x78>
   300d0:	cmp	r5, #0
   300d4:	beq	2fd4c <__flatcc_fb_print_error@@Base+0x844>
   300d8:	ldrh	r3, [r9, #8]
   300dc:	cmp	r3, #6
   300e0:	bne	2fd4c <__flatcc_fb_print_error@@Base+0x844>
   300e4:	mov	r2, #1
   300e8:	mov	r3, #0
   300ec:	strh	r2, [r9, #8]
   300f0:	mov	r1, r8
   300f4:	str	r3, [sp]
   300f8:	ldr	r2, [pc, #976]	; 304d0 <__flatcc_fb_print_error@@Base+0xfc8>
   300fc:	mov	r0, r4
   30100:	bl	2f580 <__flatcc_fb_print_error@@Base+0x78>
   30104:	b	2fd4c <__flatcc_fb_print_error@@Base+0x844>
   30108:	mov	r3, #0
   3010c:	mov	r1, #0
   30110:	mov	r2, #6
   30114:	strb	r1, [r9]
   30118:	strh	r2, [r9, #8]
   3011c:	b	2fd44 <__flatcc_fb_print_error@@Base+0x83c>
   30120:	mov	r3, #0
   30124:	str	r3, [sp, #8]
   30128:	ldr	r7, [r8]
   3012c:	ldr	r6, [r8, #4]
   30130:	mov	r3, #5
   30134:	add	r6, r7, r6
   30138:	cmp	r7, r6
   3013c:	strh	r3, [r9, #8]
   30140:	beq	301dc <__flatcc_fb_print_error@@Base+0xcd4>
   30144:	ldrb	fp, [r7]
   30148:	sub	r3, fp, #45	; 0x2d
   3014c:	clz	r3, r3
   30150:	lsr	r3, r3, #5
   30154:	add	sl, r7, r3
   30158:	cmp	r6, sl
   3015c:	beq	301dc <__flatcc_fb_print_error@@Base+0xcd4>
   30160:	ldrb	r0, [r7, r3]
   30164:	sub	r3, r0, #48	; 0x30
   30168:	cmp	r3, #9
   3016c:	bhi	301dc <__flatcc_fb_print_error@@Base+0xcd4>
   30170:	uxtb	r0, r0
   30174:	mov	r1, #0
   30178:	subs	r0, r0, #48	; 0x30
   3017c:	sbc	r1, r1, #0
   30180:	add	ip, sl, #1
   30184:	mov	r5, #10
   30188:	b	301c8 <__flatcc_fb_print_error@@Base+0xcc0>
   3018c:	ldrb	lr, [ip], #1
   30190:	sub	r3, lr, #48	; 0x30
   30194:	cmp	r3, #9
   30198:	bhi	30200 <__flatcc_fb_print_error@@Base+0xcf8>
   3019c:	umull	r2, r3, r0, r5
   301a0:	mla	r3, r5, r1, r3
   301a4:	subs	r2, r2, #48	; 0x30
   301a8:	sbc	r3, r3, #0
   301ac:	adds	r2, r2, lr
   301b0:	adc	r3, r3, #0
   301b4:	cmp	r3, r1
   301b8:	cmpeq	r2, r0
   301bc:	bcc	301dc <__flatcc_fb_print_error@@Base+0xcd4>
   301c0:	mov	r0, r2
   301c4:	mov	r1, r3
   301c8:	cmp	ip, r6
   301cc:	mov	r2, ip
   301d0:	bne	3018c <__flatcc_fb_print_error@@Base+0xc84>
   301d4:	cmp	sl, ip
   301d8:	bne	3022c <__flatcc_fb_print_error@@Base+0xd24>
   301dc:	mov	r2, #1
   301e0:	mov	r3, #0
   301e4:	strh	r2, [r9, #8]
   301e8:	mov	r1, r8
   301ec:	str	r3, [sp]
   301f0:	ldr	r2, [pc, #732]	; 304d4 <__flatcc_fb_print_error@@Base+0xfcc>
   301f4:	mov	r0, r4
   301f8:	bl	2f580 <__flatcc_fb_print_error@@Base+0x78>
   301fc:	b	30238 <__flatcc_fb_print_error@@Base+0xd30>
   30200:	cmp	r7, r2
   30204:	beq	301dc <__flatcc_fb_print_error@@Base+0xcd4>
   30208:	cmp	sl, r2
   3020c:	beq	301dc <__flatcc_fb_print_error@@Base+0xcd4>
   30210:	cmp	lr, #80	; 0x50
   30214:	beq	301dc <__flatcc_fb_print_error@@Base+0xcd4>
   30218:	bhi	30350 <__flatcc_fb_print_error@@Base+0xe48>
   3021c:	cmp	lr, #46	; 0x2e
   30220:	beq	301dc <__flatcc_fb_print_error@@Base+0xcd4>
   30224:	cmp	lr, #69	; 0x45
   30228:	beq	301dc <__flatcc_fb_print_error@@Base+0xcd4>
   3022c:	cmp	fp, #45	; 0x2d
   30230:	strd	r0, [r9]
   30234:	beq	301dc <__flatcc_fb_print_error@@Base+0xcd4>
   30238:	ldr	r3, [sp, #8]
   3023c:	cmp	r3, #0
   30240:	bne	30064 <__flatcc_fb_print_error@@Base+0xb5c>
   30244:	b	2fd4c <__flatcc_fb_print_error@@Base+0x844>
   30248:	ldrb	r3, [r2]
   3024c:	cmp	r3, #46	; 0x2e
   30250:	beq	30278 <__flatcc_fb_print_error@@Base+0xd70>
   30254:	cmp	r5, #0
   30258:	vnegne.f64	d0, d0
   3025c:	vstrne	d0, [r9]
   30260:	bne	300d8 <__flatcc_fb_print_error@@Base+0xbd0>
   30264:	b	2fd4c <__flatcc_fb_print_error@@Base+0x844>
   30268:	bl	2f660 <__flatcc_fb_print_error@@Base+0x158>
   3026c:	mov	r3, #13
   30270:	strh	r3, [r9, #8]
   30274:	b	2fd0c <__flatcc_fb_print_error@@Base+0x804>
   30278:	mov	r2, #1
   3027c:	mov	r3, #0
   30280:	strh	r2, [r9, #8]
   30284:	mov	r1, r8
   30288:	str	r3, [sp]
   3028c:	ldr	r2, [pc, #580]	; 304d8 <__flatcc_fb_print_error@@Base+0xfd0>
   30290:	mov	r0, r4
   30294:	bl	2f580 <__flatcc_fb_print_error@@Base+0x78>
   30298:	b	300d0 <__flatcc_fb_print_error@@Base+0xbc8>
   3029c:	ldrb	r3, [r2, #1]
   302a0:	orr	r3, r3, #32
   302a4:	cmp	r3, #120	; 0x78
   302a8:	bne	3003c <__flatcc_fb_print_error@@Base+0xb34>
   302ac:	add	fp, r2, #2
   302b0:	sub	r3, ip, fp
   302b4:	cmp	r3, #16
   302b8:	addgt	r2, r2, #18
   302bc:	movle	r2, ip
   302c0:	cmp	fp, r2
   302c4:	beq	3003c <__flatcc_fb_print_error@@Base+0xb34>
   302c8:	mov	r3, fp
   302cc:	mov	r0, #0
   302d0:	mov	r1, #0
   302d4:	str	r8, [sp, #8]
   302d8:	str	ip, [sp, #12]
   302dc:	str	lr, [sp, #16]
   302e0:	str	r9, [sp, #20]
   302e4:	b	3030c <__flatcc_fb_print_error@@Base+0xe04>
   302e8:	lsl	r7, r1, #4
   302ec:	lsl	r6, r0, #4
   302f0:	orr	r7, r7, r0, lsr #28
   302f4:	subs	r0, r6, #48	; 0x30
   302f8:	sbc	r1, r7, #0
   302fc:	adds	r0, r0, lr
   30300:	adc	r1, r1, #0
   30304:	cmp	r2, r3
   30308:	beq	303b8 <__flatcc_fb_print_error@@Base+0xeb0>
   3030c:	mov	sl, r3
   30310:	ldrb	lr, [r3], #1
   30314:	sub	ip, lr, #48	; 0x30
   30318:	cmp	ip, #9
   3031c:	bls	302e8 <__flatcc_fb_print_error@@Base+0xde0>
   30320:	orr	lr, lr, #32
   30324:	sub	ip, lr, #97	; 0x61
   30328:	cmp	ip, #5
   3032c:	bhi	30434 <__flatcc_fb_print_error@@Base+0xf2c>
   30330:	lsl	r9, r1, #4
   30334:	lsl	r8, r0, #4
   30338:	orr	r9, r9, r0, lsr #28
   3033c:	subs	r0, r8, #87	; 0x57
   30340:	sbc	r1, r9, #0
   30344:	adds	r0, r0, lr
   30348:	adc	r1, r1, #0
   3034c:	b	30304 <__flatcc_fb_print_error@@Base+0xdfc>
   30350:	cmp	lr, #101	; 0x65
   30354:	beq	301dc <__flatcc_fb_print_error@@Base+0xcd4>
   30358:	cmp	lr, #112	; 0x70
   3035c:	bne	3022c <__flatcc_fb_print_error@@Base+0xd24>
   30360:	b	301dc <__flatcc_fb_print_error@@Base+0xcd4>
   30364:	mov	ip, #1
   30368:	str	r3, [sp]
   3036c:	ldr	r2, [sp, #8]
   30370:	mov	r1, r8
   30374:	mov	r0, r4
   30378:	strh	ip, [r9, #8]
   3037c:	bl	2f580 <__flatcc_fb_print_error@@Base+0x78>
   30380:	b	2fd0c <__flatcc_fb_print_error@@Base+0x804>
   30384:	cmp	r2, #14
   30388:	beq	30400 <__flatcc_fb_print_error@@Base+0xef8>
   3038c:	cmp	r2, #19
   30390:	beq	303f4 <__flatcc_fb_print_error@@Base+0xeec>
   30394:	cmp	r2, #11
   30398:	beq	303e8 <__flatcc_fb_print_error@@Base+0xee0>
   3039c:	mov	r8, fp
   303a0:	b	2fcf4 <__flatcc_fb_print_error@@Base+0x7ec>
   303a4:	cmn	r2, #988	; 0x3dc
   303a8:	bne	3039c <__flatcc_fb_print_error@@Base+0xe94>
   303ac:	mov	r3, r8
   303b0:	mov	r8, fp
   303b4:	b	2fd34 <__flatcc_fb_print_error@@Base+0x82c>
   303b8:	add	r8, sp, #8
   303bc:	ldr	r9, [sp, #20]
   303c0:	ldm	r8, {r8, ip, lr}
   303c4:	cmp	ip, r2
   303c8:	bne	30484 <__flatcc_fb_print_error@@Base+0xf7c>
   303cc:	cmp	lr, #45	; 0x2d
   303d0:	strd	r0, [r9]
   303d4:	bne	3005c <__flatcc_fb_print_error@@Base+0xb54>
   303d8:	b	3003c <__flatcc_fb_print_error@@Base+0xb34>
   303dc:	mov	r3, r8
   303e0:	mov	r8, fp
   303e4:	b	3010c <__flatcc_fb_print_error@@Base+0xc04>
   303e8:	mov	r5, r8
   303ec:	mov	r8, fp
   303f0:	b	30084 <__flatcc_fb_print_error@@Base+0xb7c>
   303f4:	mov	sl, r8
   303f8:	mov	r8, fp
   303fc:	b	2fe04 <__flatcc_fb_print_error@@Base+0x8fc>
   30400:	mov	r5, r8
   30404:	mov	r8, fp
   30408:	b	2fff4 <__flatcc_fb_print_error@@Base+0xaec>
   3040c:	str	r8, [sp, #8]
   30410:	mov	r8, fp
   30414:	b	30128 <__flatcc_fb_print_error@@Base+0xc20>
   30418:	mov	r5, r3
   3041c:	str	r5, [r4, #40]	; 0x28
   30420:	ldr	r3, [pc, #180]	; 304dc <__flatcc_fb_print_error@@Base+0xfd4>
   30424:	ldr	r2, [pc, #180]	; 304e0 <__flatcc_fb_print_error@@Base+0xfd8>
   30428:	ldr	r1, [pc, #180]	; 304e4 <__flatcc_fb_print_error@@Base+0xfdc>
   3042c:	ldr	r0, [pc, #180]	; 304e8 <__flatcc_fb_print_error@@Base+0xfe0>
   30430:	bl	14148 <__assert_fail@plt>
   30434:	add	r8, sp, #8
   30438:	cmp	sl, fp
   3043c:	ldm	r8, {r8, ip, lr}
   30440:	ldr	r9, [sp, #20]
   30444:	beq	3003c <__flatcc_fb_print_error@@Base+0xb34>
   30448:	cmp	sl, ip
   3044c:	beq	303cc <__flatcc_fb_print_error@@Base+0xec4>
   30450:	cmp	sl, r2
   30454:	ldrb	r3, [sl]
   30458:	beq	30488 <__flatcc_fb_print_error@@Base+0xf80>
   3045c:	cmp	r3, #80	; 0x50
   30460:	beq	3003c <__flatcc_fb_print_error@@Base+0xb34>
   30464:	cmp	r3, #112	; 0x70
   30468:	beq	3003c <__flatcc_fb_print_error@@Base+0xb34>
   3046c:	cmp	r3, #46	; 0x2e
   30470:	bne	303cc <__flatcc_fb_print_error@@Base+0xec4>
   30474:	b	3003c <__flatcc_fb_print_error@@Base+0xb34>
   30478:	mov	fp, r8
   3047c:	str	fp, [r4, #40]	; 0x28
   30480:	b	30420 <__flatcc_fb_print_error@@Base+0xf18>
   30484:	ldrb	r3, [r2]
   30488:	sub	r2, r3, #48	; 0x30
   3048c:	cmp	r2, #9
   30490:	bls	3003c <__flatcc_fb_print_error@@Base+0xb34>
   30494:	orr	r3, r3, #32
   30498:	sub	r2, r3, #97	; 0x61
   3049c:	uxtb	r2, r2
   304a0:	cmp	r2, #5
   304a4:	bhi	3045c <__flatcc_fb_print_error@@Base+0xf54>
   304a8:	b	3003c <__flatcc_fb_print_error@@Base+0xb34>
   304ac:	bl	141a8 <__assert_fail@plt+0x60>
   304b0:	mov	sl, r8
   304b4:	str	sl, [r4, #40]	; 0x28
   304b8:	b	30420 <__flatcc_fb_print_error@@Base+0xf18>
   304bc:			; <UNDEFINED> instruction: 0xfffffc26
   304c0:	andeq	fp, r5, r0, ror #5
   304c4:			; <UNDEFINED> instruction: 0x0005b2bc
   304c8:	andeq	fp, r5, r8, asr #4
   304cc:	andeq	fp, r5, ip, ror r2
   304d0:	andeq	fp, r5, r0, lsl #6
   304d4:	andeq	fp, r5, r4, ror #4
   304d8:	muleq	r5, r4, r2
   304dc:	andeq	sl, r5, r4, lsr #30
   304e0:	andeq	r0, r0, r5, asr r1
   304e4:	andeq	fp, r5, ip, asr #32
   304e8:	andeq	sp, r4, r4, ror r2

000304ec <__flatcc_error_find_file_of_token@@Base>:
   304ec:	cmp	r0, #0
   304f0:	beq	30518 <__flatcc_error_find_file_of_token@@Base+0x2c>
   304f4:	ldr	r3, [r0, #20]
   304f8:	cmp	r3, r1
   304fc:	bhi	3050c <__flatcc_error_find_file_of_token@@Base+0x20>
   30500:	ldr	r3, [r0, #24]
   30504:	cmp	r1, r3
   30508:	bcc	30520 <__flatcc_error_find_file_of_token@@Base+0x34>
   3050c:	ldr	r0, [r0]
   30510:	cmp	r0, #0
   30514:	bne	304f4 <__flatcc_error_find_file_of_token@@Base+0x8>
   30518:	ldr	r0, [pc, #8]	; 30528 <__flatcc_error_find_file_of_token@@Base+0x3c>
   3051c:	bx	lr
   30520:	ldr	r0, [r0, #520]	; 0x208
   30524:	bx	lr
   30528:	andeq	lr, r4, ip, asr #2

0003052c <__flatcc_error_report@@Base>:
   3052c:	push	{r4, r5, r6, r7, r8, r9, lr}
   30530:	sub	sp, sp, #44	; 0x2c
   30534:	adds	r6, r1, #0
   30538:	ldr	ip, [sp, #72]	; 0x48
   3053c:	movne	r6, #1
   30540:	cmp	ip, #0
   30544:	movne	lr, #0
   30548:	andeq	lr, r6, #1
   3054c:	cmp	lr, #0
   30550:	mov	r4, r0
   30554:	ldrne	ip, [r1]
   30558:	ldr	r0, [pc, #540]	; 3077c <__flatcc_error_report@@Base+0x250>
   3055c:	ldr	r5, [sp, #76]	; 0x4c
   30560:	ldrne	r5, [r1, #4]
   30564:	cmp	r2, #0
   30568:	clz	lr, r3
   3056c:	moveq	r2, r0
   30570:	lsr	lr, lr, #5
   30574:	cmp	ip, #0
   30578:	moveq	r5, ip
   3057c:	moveq	ip, r0
   30580:	tst	r6, lr
   30584:	beq	305f4 <__flatcc_error_report@@Base+0xc8>
   30588:	cmp	r4, #0
   3058c:	beq	305b8 <__flatcc_error_report@@Base+0x8c>
   30590:	mov	r3, r4
   30594:	ldr	r0, [r3, #20]
   30598:	cmp	r1, r0
   3059c:	bcc	305ac <__flatcc_error_report@@Base+0x80>
   305a0:	ldr	r0, [r3, #24]
   305a4:	cmp	r1, r0
   305a8:	bcc	30740 <__flatcc_error_report@@Base+0x214>
   305ac:	ldr	r3, [r3]
   305b0:	cmp	r3, #0
   305b4:	bne	30594 <__flatcc_error_report@@Base+0x68>
   305b8:	ldr	r0, [pc, #444]	; 3077c <__flatcc_error_report@@Base+0x250>
   305bc:	ldr	r3, [r1, #8]
   305c0:	str	r2, [sp, #12]
   305c4:	stmib	sp, {r5, ip}
   305c8:	ldr	r1, [r1, #12]
   305cc:	mov	r2, r0
   305d0:	str	r1, [sp]
   305d4:	mov	r0, r4
   305d8:	ldr	r1, [pc, #416]	; 30780 <__flatcc_error_report@@Base+0x254>
   305dc:	bl	2f508 <__flatcc_fb_print_error@@Base>
   305e0:	ldr	r3, [r4, #108]	; 0x6c
   305e4:	add	r3, r3, #1
   305e8:	str	r3, [r4, #108]	; 0x6c
   305ec:	add	sp, sp, #44	; 0x2c
   305f0:	pop	{r4, r5, r6, r7, r8, r9, pc}
   305f4:	cmp	r3, #0
   305f8:	moveq	r6, #0
   305fc:	andne	r6, r6, #1
   30600:	cmp	r6, #0
   30604:	beq	306b4 <__flatcc_error_report@@Base+0x188>
   30608:	cmp	r4, #0
   3060c:	beq	30770 <__flatcc_error_report@@Base+0x244>
   30610:	mov	r0, r4
   30614:	ldr	lr, [r0, #20]
   30618:	cmp	r1, lr
   3061c:	bcc	3062c <__flatcc_error_report@@Base+0x100>
   30620:	ldr	lr, [r0, #24]
   30624:	cmp	r1, lr
   30628:	bcc	30750 <__flatcc_error_report@@Base+0x224>
   3062c:	ldr	r0, [r0]
   30630:	cmp	r0, #0
   30634:	bne	30614 <__flatcc_error_report@@Base+0xe8>
   30638:	ldr	r6, [pc, #316]	; 3077c <__flatcc_error_report@@Base+0x250>
   3063c:	mov	r0, r4
   30640:	ldr	lr, [r0, #20]
   30644:	cmp	r3, lr
   30648:	bcc	30658 <__flatcc_error_report@@Base+0x12c>
   3064c:	ldr	lr, [r0, #24]
   30650:	cmp	r3, lr
   30654:	bcc	30748 <__flatcc_error_report@@Base+0x21c>
   30658:	ldr	r0, [r0]
   3065c:	cmp	r0, #0
   30660:	bne	30640 <__flatcc_error_report@@Base+0x114>
   30664:	ldr	r9, [pc, #272]	; 3077c <__flatcc_error_report@@Base+0x250>
   30668:	ldr	r8, [r3]
   3066c:	ldr	r7, [r3, #4]
   30670:	ldr	lr, [r3, #12]
   30674:	ldr	r0, [r3, #8]
   30678:	ldr	r3, [r1, #8]
   3067c:	str	r2, [sp, #12]
   30680:	str	r0, [sp, #20]
   30684:	str	r8, [sp, #32]
   30688:	str	r9, [sp, #16]
   3068c:	stmib	sp, {r5, ip}
   30690:	str	r7, [sp, #28]
   30694:	str	lr, [sp, #24]
   30698:	ldr	r1, [r1, #12]
   3069c:	mov	r2, r6
   306a0:	str	r1, [sp]
   306a4:	mov	r0, r4
   306a8:	ldr	r1, [pc, #212]	; 30784 <__flatcc_error_report@@Base+0x258>
   306ac:	bl	2f508 <__flatcc_fb_print_error@@Base>
   306b0:	b	305e0 <__flatcc_error_report@@Base+0xb4>
   306b4:	cmp	r1, #0
   306b8:	movne	r1, #0
   306bc:	andeq	r1, lr, #1
   306c0:	cmp	r1, #0
   306c4:	bne	30730 <__flatcc_error_report@@Base+0x204>
   306c8:	cmp	r3, #0
   306cc:	beq	30760 <__flatcc_error_report@@Base+0x234>
   306d0:	cmp	r4, #0
   306d4:	beq	30700 <__flatcc_error_report@@Base+0x1d4>
   306d8:	mov	r1, r4
   306dc:	ldr	r0, [r1, #20]
   306e0:	cmp	r3, r0
   306e4:	bcc	306f4 <__flatcc_error_report@@Base+0x1c8>
   306e8:	ldr	r0, [r1, #24]
   306ec:	cmp	r3, r0
   306f0:	bcc	30758 <__flatcc_error_report@@Base+0x22c>
   306f4:	ldr	r1, [r1]
   306f8:	cmp	r1, #0
   306fc:	bne	306dc <__flatcc_error_report@@Base+0x1b0>
   30700:	ldr	r5, [pc, #116]	; 3077c <__flatcc_error_report@@Base+0x250>
   30704:	ldr	lr, [r3]
   30708:	ldr	ip, [r3, #4]
   3070c:	ldr	r0, [r3, #12]
   30710:	ldr	r1, [r3, #8]
   30714:	mov	r3, r5
   30718:	stmib	sp, {r0, ip, lr}
   3071c:	mov	r0, r4
   30720:	str	r1, [sp]
   30724:	ldr	r1, [pc, #92]	; 30788 <__flatcc_error_report@@Base+0x25c>
   30728:	bl	2f508 <__flatcc_fb_print_error@@Base>
   3072c:	b	305e0 <__flatcc_error_report@@Base+0xb4>
   30730:	ldr	r1, [pc, #84]	; 3078c <__flatcc_error_report@@Base+0x260>
   30734:	mov	r0, r4
   30738:	bl	2f508 <__flatcc_fb_print_error@@Base>
   3073c:	b	305e0 <__flatcc_error_report@@Base+0xb4>
   30740:	ldr	r0, [r3, #520]	; 0x208
   30744:	b	305bc <__flatcc_error_report@@Base+0x90>
   30748:	ldr	r9, [r0, #520]	; 0x208
   3074c:	b	30668 <__flatcc_error_report@@Base+0x13c>
   30750:	ldr	r6, [r0, #520]	; 0x208
   30754:	b	3063c <__flatcc_error_report@@Base+0x110>
   30758:	ldr	r5, [r1, #520]	; 0x208
   3075c:	b	30704 <__flatcc_error_report@@Base+0x1d8>
   30760:	ldr	r1, [pc, #40]	; 30790 <__flatcc_error_report@@Base+0x264>
   30764:	mov	r0, r4
   30768:	bl	2f508 <__flatcc_fb_print_error@@Base>
   3076c:	b	305e0 <__flatcc_error_report@@Base+0xb4>
   30770:	ldr	r6, [pc, #4]	; 3077c <__flatcc_error_report@@Base+0x250>
   30774:	mov	r9, r6
   30778:	b	30668 <__flatcc_error_report@@Base+0x13c>
   3077c:	andeq	lr, r4, ip, asr #2
   30780:	andeq	fp, r5, r4, asr #2
   30784:	andeq	fp, r5, r4, lsr #6
   30788:	andeq	fp, r5, r8, asr r3
   3078c:	andeq	fp, r5, r4, ror #2
   30790:	andeq	fp, r5, r8, ror r3
   30794:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   30798:	mov	r7, #1
   3079c:	ldr	r6, [r0, #40]	; 0x28
   307a0:	sub	sp, sp, #12
   307a4:	mov	r4, r0
   307a8:	ldr	r3, [r6, #16]
   307ac:	mov	r8, r1
   307b0:	cmp	r3, #91	; 0x5b
   307b4:	strh	r7, [r1, #8]
   307b8:	bne	30c00 <__flatcc_error_report@@Base+0x6d4>
   307bc:	ldr	fp, [r0, #24]
   307c0:	mov	r3, r6
   307c4:	mov	r5, #0
   307c8:	mov	r9, #65536	; 0x10000
   307cc:	add	sl, r3, #20
   307d0:	cmp	fp, sl
   307d4:	str	sl, [r4, #40]	; 0x28
   307d8:	beq	30e08 <__flatcc_error_report@@Base+0x8dc>
   307dc:	ldr	r2, [r3, #36]	; 0x24
   307e0:	cmn	r2, #964	; 0x3c4
   307e4:	bne	30870 <__flatcc_error_report@@Base+0x344>
   307e8:	ldr	r0, [r4, #52]	; 0x34
   307ec:	ldr	r1, [r4, #44]	; 0x2c
   307f0:	b	30828 <__flatcc_error_report@@Base+0x2fc>
   307f4:	ldr	ip, [r4, #36]	; 0x24
   307f8:	add	r3, sl, #20
   307fc:	cmp	r3, fp
   30800:	str	r0, [r4, #52]	; 0x34
   30804:	str	sl, [r2, #4]
   30808:	str	ip, [r2]
   3080c:	str	r2, [r4, #36]	; 0x24
   30810:	str	r3, [r4, #40]	; 0x28
   30814:	beq	30e0c <__flatcc_error_report@@Base+0x8e0>
   30818:	ldr	r2, [r3, #16]
   3081c:	cmn	r2, #964	; 0x3c4
   30820:	bne	30874 <__flatcc_error_report@@Base+0x348>
   30824:	mov	sl, r3
   30828:	add	r3, r0, #16
   3082c:	cmp	r3, r1
   30830:	movls	r2, r0
   30834:	movls	r0, r3
   30838:	bls	307f4 <__flatcc_error_report@@Base+0x2c8>
   3083c:	mov	r1, r7
   30840:	mov	r0, r9
   30844:	bl	13fa4 <calloc@plt>
   30848:	cmp	r0, #0
   3084c:	beq	30e14 <__flatcc_error_report@@Base+0x8e8>
   30850:	ldr	r3, [r4, #48]	; 0x30
   30854:	add	r1, r0, #65536	; 0x10000
   30858:	str	r3, [r0]
   3085c:	str	r0, [r4, #48]	; 0x30
   30860:	add	r2, r0, #16
   30864:	str	r1, [r4, #44]	; 0x2c
   30868:	add	r0, r0, #32
   3086c:	b	307f4 <__flatcc_error_report@@Base+0x2c8>
   30870:	mov	r3, sl
   30874:	cmp	r2, #91	; 0x5b
   30878:	add	r5, r5, #1
   3087c:	beq	307cc <__flatcc_error_report@@Base+0x2a0>
   30880:	cmp	r5, #1
   30884:	beq	308a8 <__flatcc_error_report@@Base+0x37c>
   30888:	mov	r3, #0
   3088c:	str	r3, [sp]
   30890:	ldr	r2, [pc, #1612]	; 30ee4 <__flatcc_error_report@@Base+0x9b8>
   30894:	mov	r1, r6
   30898:	mov	r0, r4
   3089c:	bl	2f580 <__flatcc_fb_print_error@@Base+0x78>
   308a0:	ldr	r3, [r4, #40]	; 0x28
   308a4:	ldr	r2, [r3, #16]
   308a8:	cmn	r2, #984	; 0x3d8
   308ac:	ble	30b14 <__flatcc_error_report@@Base+0x5e8>
   308b0:	ldr	r1, [pc, #1584]	; 30ee8 <__flatcc_error_report@@Base+0x9bc>
   308b4:	cmp	r2, r1
   308b8:	beq	309a8 <__flatcc_error_report@@Base+0x47c>
   308bc:	ble	30e28 <__flatcc_error_report@@Base+0x8fc>
   308c0:	cmp	r2, #9
   308c4:	beq	30aec <__flatcc_error_report@@Base+0x5c0>
   308c8:	cmp	r2, #93	; 0x5d
   308cc:	bne	30a70 <__flatcc_error_report@@Base+0x544>
   308d0:	mov	r3, #0
   308d4:	str	r3, [sp]
   308d8:	mov	r1, r3
   308dc:	ldr	r2, [pc, #1544]	; 30eec <__flatcc_error_report@@Base+0x9c0>
   308e0:	mov	r0, r4
   308e4:	bl	2f580 <__flatcc_fb_print_error@@Base+0x78>
   308e8:	ldr	r3, [r4, #40]	; 0x28
   308ec:	ldr	r2, [r3, #16]
   308f0:	mov	r8, #1
   308f4:	mov	r7, #65536	; 0x10000
   308f8:	cmp	r2, #93	; 0x5d
   308fc:	bne	30adc <__flatcc_error_report@@Base+0x5b0>
   30900:	ldr	sl, [r4, #24]
   30904:	add	r9, r3, #20
   30908:	cmp	sl, r9
   3090c:	str	r9, [r4, #40]	; 0x28
   30910:	beq	30dec <__flatcc_error_report@@Base+0x8c0>
   30914:	ldr	r2, [r3, #36]	; 0x24
   30918:	cmn	r2, #964	; 0x3c4
   3091c:	bne	30a9c <__flatcc_error_report@@Base+0x570>
   30920:	ldr	r0, [r4, #52]	; 0x34
   30924:	ldr	r1, [r4, #44]	; 0x2c
   30928:	b	30960 <__flatcc_error_report@@Base+0x434>
   3092c:	ldr	ip, [r4, #36]	; 0x24
   30930:	add	r3, r9, #20
   30934:	cmp	r3, sl
   30938:	str	r0, [r4, #52]	; 0x34
   3093c:	str	r9, [r2, #4]
   30940:	str	ip, [r2]
   30944:	str	r2, [r4, #36]	; 0x24
   30948:	str	r3, [r4, #40]	; 0x28
   3094c:	beq	30df0 <__flatcc_error_report@@Base+0x8c4>
   30950:	ldr	r2, [r3, #16]
   30954:	cmn	r2, #964	; 0x3c4
   30958:	bne	30aa0 <__flatcc_error_report@@Base+0x574>
   3095c:	mov	r9, r3
   30960:	add	r3, r0, #16
   30964:	cmp	r3, r1
   30968:	movls	r2, r0
   3096c:	movls	r0, r3
   30970:	bls	3092c <__flatcc_error_report@@Base+0x400>
   30974:	mov	r1, r8
   30978:	mov	r0, r7
   3097c:	bl	13fa4 <calloc@plt>
   30980:	cmp	r0, #0
   30984:	beq	30e14 <__flatcc_error_report@@Base+0x8e8>
   30988:	ldr	r3, [r4, #48]	; 0x30
   3098c:	add	r1, r0, #65536	; 0x10000
   30990:	str	r3, [r0]
   30994:	str	r0, [r4, #48]	; 0x30
   30998:	add	r2, r0, #16
   3099c:	str	r1, [r4, #44]	; 0x2c
   309a0:	add	r0, r0, #32
   309a4:	b	3092c <__flatcc_error_report@@Base+0x400>
   309a8:	cmp	r5, #0
   309ac:	str	r3, [r8]
   309b0:	movne	r2, #9
   309b4:	beq	30c54 <__flatcc_error_report@@Base+0x728>
   309b8:	ldr	r3, [r4, #40]	; 0x28
   309bc:	ldr	sl, [r4, #24]
   309c0:	add	r7, r3, #20
   309c4:	cmp	sl, r7
   309c8:	strh	r2, [r8, #8]
   309cc:	str	r7, [r4, #40]	; 0x28
   309d0:	beq	30eb8 <__flatcc_error_report@@Base+0x98c>
   309d4:	ldr	r2, [r3, #36]	; 0x24
   309d8:	cmn	r2, #964	; 0x3c4
   309dc:	bne	30edc <__flatcc_error_report@@Base+0x9b0>
   309e0:	ldr	r1, [r4, #52]	; 0x34
   309e4:	ldr	r0, [r4, #44]	; 0x2c
   309e8:	mov	r9, #1
   309ec:	mov	r8, #65536	; 0x10000
   309f0:	b	30a28 <__flatcc_error_report@@Base+0x4fc>
   309f4:	ldr	ip, [r4, #36]	; 0x24
   309f8:	add	r3, r7, #20
   309fc:	cmp	sl, r3
   30a00:	str	r1, [r4, #52]	; 0x34
   30a04:	str	r7, [r2, #4]
   30a08:	str	ip, [r2]
   30a0c:	str	r2, [r4, #36]	; 0x24
   30a10:	str	r3, [r4, #40]	; 0x28
   30a14:	beq	30ebc <__flatcc_error_report@@Base+0x990>
   30a18:	ldr	r2, [r3, #16]
   30a1c:	cmn	r2, #964	; 0x3c4
   30a20:	bne	308f0 <__flatcc_error_report@@Base+0x3c4>
   30a24:	mov	r7, r3
   30a28:	add	r3, r1, #16
   30a2c:	cmp	r3, r0
   30a30:	movls	r2, r1
   30a34:	movls	r1, r3
   30a38:	bls	309f4 <__flatcc_error_report@@Base+0x4c8>
   30a3c:	mov	r1, r9
   30a40:	mov	r0, r8
   30a44:	bl	13fa4 <calloc@plt>
   30a48:	subs	r1, r0, #0
   30a4c:	beq	30e14 <__flatcc_error_report@@Base+0x8e8>
   30a50:	ldr	r3, [r4, #48]	; 0x30
   30a54:	add	r0, r1, #65536	; 0x10000
   30a58:	str	r3, [r1]
   30a5c:	str	r1, [r4, #48]	; 0x30
   30a60:	add	r2, r1, #16
   30a64:	str	r0, [r4, #44]	; 0x2c
   30a68:	add	r1, r1, #32
   30a6c:	b	309f4 <__flatcc_error_report@@Base+0x4c8>
   30a70:	cmn	r2, #972	; 0x3cc
   30a74:	beq	30b40 <__flatcc_error_report@@Base+0x614>
   30a78:	mov	r3, #0
   30a7c:	str	r3, [sp]
   30a80:	mov	r1, r3
   30a84:	ldr	r2, [pc, #1124]	; 30ef0 <__flatcc_error_report@@Base+0x9c4>
   30a88:	mov	r0, r4
   30a8c:	bl	2f580 <__flatcc_fb_print_error@@Base+0x78>
   30a90:	ldr	r3, [r4, #40]	; 0x28
   30a94:	ldr	r2, [r3, #16]
   30a98:	b	308f0 <__flatcc_error_report@@Base+0x3c4>
   30a9c:	mov	r3, r9
   30aa0:	subs	r5, r5, #1
   30aa4:	bcs	308f8 <__flatcc_error_report@@Base+0x3cc>
   30aa8:	mov	r1, #0
   30aac:	mov	r3, r6
   30ab0:	str	r1, [sp, #4]
   30ab4:	str	r1, [sp]
   30ab8:	ldr	r2, [pc, #1076]	; 30ef4 <__flatcc_error_report@@Base+0x9c8>
   30abc:	mov	r0, r4
   30ac0:	bl	3052c <__flatcc_error_report@@Base>
   30ac4:	ldr	r9, [r4, #40]	; 0x28
   30ac8:	ldr	r3, [r9, #16]
   30acc:	cmp	r3, #93	; 0x5d
   30ad0:	beq	30c5c <__flatcc_error_report@@Base+0x730>
   30ad4:	add	sp, sp, #12
   30ad8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   30adc:	cmp	r5, #0
   30ae0:	bne	30aa8 <__flatcc_error_report@@Base+0x57c>
   30ae4:	add	sp, sp, #12
   30ae8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   30aec:	mov	r1, r8
   30af0:	mov	r0, r4
   30af4:	bl	2f660 <__flatcc_fb_print_error@@Base+0x158>
   30af8:	cmp	r5, #0
   30afc:	movne	r2, #11
   30b00:	beq	30c44 <__flatcc_error_report@@Base+0x718>
   30b04:	ldr	r3, [r4, #40]	; 0x28
   30b08:	strh	r2, [r8, #8]
   30b0c:	ldr	r2, [r3, #16]
   30b10:	b	308f0 <__flatcc_error_report@@Base+0x3c4>
   30b14:	mvn	r1, #984	; 0x3d8
   30b18:	cmp	r2, r1
   30b1c:	bge	30b40 <__flatcc_error_report@@Base+0x614>
   30b20:	cmn	r2, #988	; 0x3dc
   30b24:	bge	30e18 <__flatcc_error_report@@Base+0x8ec>
   30b28:	cmn	r2, #996	; 0x3e4
   30b2c:	bge	30b40 <__flatcc_error_report@@Base+0x614>
   30b30:	add	r2, r2, #996	; 0x3e4
   30b34:	add	r2, r2, #3
   30b38:	cmp	r2, #1
   30b3c:	bhi	30a78 <__flatcc_error_report@@Base+0x54c>
   30b40:	mov	r2, #7
   30b44:	str	r3, [r8]
   30b48:	ldr	r3, [r4, #40]	; 0x28
   30b4c:	ldr	sl, [r4, #24]
   30b50:	add	r7, r3, #20
   30b54:	cmp	r7, sl
   30b58:	strh	r2, [r8, #8]
   30b5c:	str	r7, [r4, #40]	; 0x28
   30b60:	beq	30eb8 <__flatcc_error_report@@Base+0x98c>
   30b64:	ldr	r2, [r3, #36]	; 0x24
   30b68:	cmn	r2, #964	; 0x3c4
   30b6c:	bne	30edc <__flatcc_error_report@@Base+0x9b0>
   30b70:	ldr	r1, [r4, #52]	; 0x34
   30b74:	ldr	r0, [r4, #44]	; 0x2c
   30b78:	mov	r9, #1
   30b7c:	mov	r8, #65536	; 0x10000
   30b80:	b	30bb8 <__flatcc_error_report@@Base+0x68c>
   30b84:	ldr	ip, [r4, #36]	; 0x24
   30b88:	add	r3, r7, #20
   30b8c:	cmp	r3, sl
   30b90:	str	r1, [r4, #52]	; 0x34
   30b94:	str	r7, [r2, #4]
   30b98:	str	ip, [r2]
   30b9c:	str	r2, [r4, #36]	; 0x24
   30ba0:	str	r3, [r4, #40]	; 0x28
   30ba4:	beq	30ebc <__flatcc_error_report@@Base+0x990>
   30ba8:	ldr	r2, [r3, #16]
   30bac:	cmn	r2, #964	; 0x3c4
   30bb0:	bne	308f0 <__flatcc_error_report@@Base+0x3c4>
   30bb4:	mov	r7, r3
   30bb8:	add	r3, r1, #16
   30bbc:	cmp	r3, r0
   30bc0:	movls	r2, r1
   30bc4:	movls	r1, r3
   30bc8:	bls	30b84 <__flatcc_error_report@@Base+0x658>
   30bcc:	mov	r1, r9
   30bd0:	mov	r0, r8
   30bd4:	bl	13fa4 <calloc@plt>
   30bd8:	subs	r1, r0, #0
   30bdc:	beq	30e14 <__flatcc_error_report@@Base+0x8e8>
   30be0:	ldr	r3, [r4, #48]	; 0x30
   30be4:	add	r0, r1, #65536	; 0x10000
   30be8:	str	r3, [r1]
   30bec:	str	r1, [r4, #48]	; 0x30
   30bf0:	add	r2, r1, #16
   30bf4:	str	r0, [r4, #44]	; 0x2c
   30bf8:	add	r1, r1, #32
   30bfc:	b	30b84 <__flatcc_error_report@@Base+0x658>
   30c00:	cmn	r3, #984	; 0x3d8
   30c04:	ble	30e88 <__flatcc_error_report@@Base+0x95c>
   30c08:	ldr	r2, [pc, #728]	; 30ee8 <__flatcc_error_report@@Base+0x9bc>
   30c0c:	cmp	r3, r2
   30c10:	beq	30c4c <__flatcc_error_report@@Base+0x720>
   30c14:	ble	30e58 <__flatcc_error_report@@Base+0x92c>
   30c18:	cmp	r3, #9
   30c1c:	beq	30c3c <__flatcc_error_report@@Base+0x710>
   30c20:	cmp	r3, #93	; 0x5d
   30c24:	moveq	r5, #0
   30c28:	beq	308d0 <__flatcc_error_report@@Base+0x3a4>
   30c2c:	cmn	r3, #972	; 0x3cc
   30c30:	beq	30e78 <__flatcc_error_report@@Base+0x94c>
   30c34:	mov	r5, #0
   30c38:	b	30a78 <__flatcc_error_report@@Base+0x54c>
   30c3c:	bl	2f660 <__flatcc_fb_print_error@@Base+0x158>
   30c40:	mov	r5, #0
   30c44:	mov	r2, #12
   30c48:	b	30b04 <__flatcc_error_report@@Base+0x5d8>
   30c4c:	mov	r5, #0
   30c50:	str	r6, [r1]
   30c54:	mov	r2, #10
   30c58:	b	309b8 <__flatcc_error_report@@Base+0x48c>
   30c5c:	ldr	sl, [r4, #24]
   30c60:	add	r5, r9, #20
   30c64:	cmp	sl, r5
   30c68:	str	r5, [r4, #40]	; 0x28
   30c6c:	beq	30ed4 <__flatcc_error_report@@Base+0x9a8>
   30c70:	ldr	r3, [r9, #36]	; 0x24
   30c74:	cmn	r3, #964	; 0x3c4
   30c78:	bne	30d08 <__flatcc_error_report@@Base+0x7dc>
   30c7c:	ldr	r3, [r4, #52]	; 0x34
   30c80:	ldr	ip, [r4, #44]	; 0x2c
   30c84:	mov	r8, #1
   30c88:	mov	r7, #65536	; 0x10000
   30c8c:	b	30cc0 <__flatcc_error_report@@Base+0x794>
   30c90:	ldr	r0, [r4, #36]	; 0x24
   30c94:	add	r2, r5, #20
   30c98:	cmp	r2, sl
   30c9c:	str	r3, [r4, #52]	; 0x34
   30ca0:	stm	r1, {r0, r5}
   30ca4:	str	r1, [r4, #36]	; 0x24
   30ca8:	str	r2, [r4, #40]	; 0x28
   30cac:	beq	30e50 <__flatcc_error_report@@Base+0x924>
   30cb0:	ldr	r1, [r2, #16]
   30cb4:	cmn	r1, #964	; 0x3c4
   30cb8:	bne	30d08 <__flatcc_error_report@@Base+0x7dc>
   30cbc:	mov	r5, r2
   30cc0:	add	r2, r3, #16
   30cc4:	cmp	r2, ip
   30cc8:	movls	r1, r3
   30ccc:	movls	r3, r2
   30cd0:	bls	30c90 <__flatcc_error_report@@Base+0x764>
   30cd4:	mov	r1, r8
   30cd8:	mov	r0, r7
   30cdc:	bl	13fa4 <calloc@plt>
   30ce0:	subs	r3, r0, #0
   30ce4:	beq	30e14 <__flatcc_error_report@@Base+0x8e8>
   30ce8:	ldr	r2, [r4, #48]	; 0x30
   30cec:	add	ip, r3, #65536	; 0x10000
   30cf0:	str	r2, [r3]
   30cf4:	str	r3, [r4, #48]	; 0x30
   30cf8:	add	r1, r3, #16
   30cfc:	str	ip, [r4, #44]	; 0x2c
   30d00:	add	r3, r3, #32
   30d04:	b	30c90 <__flatcc_error_report@@Base+0x764>
   30d08:	mov	r2, #0
   30d0c:	mov	r3, r6
   30d10:	str	r2, [sp, #4]
   30d14:	str	r2, [sp]
   30d18:	mov	r1, r9
   30d1c:	ldr	r2, [pc, #468]	; 30ef8 <__flatcc_error_report@@Base+0x9cc>
   30d20:	mov	r0, r4
   30d24:	bl	3052c <__flatcc_error_report@@Base>
   30d28:	ldr	r3, [r4, #40]	; 0x28
   30d2c:	mov	r7, #1
   30d30:	mov	r6, #65536	; 0x10000
   30d34:	ldr	r2, [r3, #16]
   30d38:	cmp	r2, #93	; 0x5d
   30d3c:	bne	30ad4 <__flatcc_error_report@@Base+0x5a8>
   30d40:	ldr	r8, [r4, #24]
   30d44:	add	r5, r3, #20
   30d48:	cmp	r8, r5
   30d4c:	str	r5, [r4, #40]	; 0x28
   30d50:	beq	30e4c <__flatcc_error_report@@Base+0x920>
   30d54:	ldr	r2, [r3, #36]	; 0x24
   30d58:	cmn	r2, #964	; 0x3c4
   30d5c:	bne	30de4 <__flatcc_error_report@@Base+0x8b8>
   30d60:	ldr	r0, [r4, #52]	; 0x34
   30d64:	ldr	ip, [r4, #44]	; 0x2c
   30d68:	b	30d9c <__flatcc_error_report@@Base+0x870>
   30d6c:	ldr	r1, [r4, #36]	; 0x24
   30d70:	add	r3, r5, #20
   30d74:	cmp	r8, r3
   30d78:	str	r0, [r4, #52]	; 0x34
   30d7c:	stm	r2, {r1, r5}
   30d80:	str	r2, [r4, #36]	; 0x24
   30d84:	str	r3, [r4, #40]	; 0x28
   30d88:	beq	30e50 <__flatcc_error_report@@Base+0x924>
   30d8c:	ldr	r2, [r3, #16]
   30d90:	cmn	r2, #964	; 0x3c4
   30d94:	bne	30d38 <__flatcc_error_report@@Base+0x80c>
   30d98:	mov	r5, r3
   30d9c:	add	r3, r0, #16
   30da0:	cmp	r3, ip
   30da4:	movls	r2, r0
   30da8:	movls	r0, r3
   30dac:	bls	30d6c <__flatcc_error_report@@Base+0x840>
   30db0:	mov	r1, r7
   30db4:	mov	r0, r6
   30db8:	bl	13fa4 <calloc@plt>
   30dbc:	cmp	r0, #0
   30dc0:	beq	30e14 <__flatcc_error_report@@Base+0x8e8>
   30dc4:	ldr	r3, [r4, #48]	; 0x30
   30dc8:	add	ip, r0, #65536	; 0x10000
   30dcc:	str	r3, [r0]
   30dd0:	str	r0, [r4, #48]	; 0x30
   30dd4:	add	r2, r0, #16
   30dd8:	str	ip, [r4, #44]	; 0x2c
   30ddc:	add	r0, r0, #32
   30de0:	b	30d6c <__flatcc_error_report@@Base+0x840>
   30de4:	mov	r3, r5
   30de8:	b	30d38 <__flatcc_error_report@@Base+0x80c>
   30dec:	mov	r9, r3
   30df0:	str	r9, [r4, #40]	; 0x28
   30df4:	ldr	r3, [pc, #256]	; 30efc <__flatcc_error_report@@Base+0x9d0>
   30df8:	ldr	r2, [pc, #256]	; 30f00 <__flatcc_error_report@@Base+0x9d4>
   30dfc:	ldr	r1, [pc, #256]	; 30f04 <__flatcc_error_report@@Base+0x9d8>
   30e00:	ldr	r0, [pc, #256]	; 30f08 <__flatcc_error_report@@Base+0x9dc>
   30e04:	bl	14148 <__assert_fail@plt>
   30e08:	mov	sl, r3
   30e0c:	str	sl, [r4, #40]	; 0x28
   30e10:	b	30df4 <__flatcc_error_report@@Base+0x8c8>
   30e14:	bl	141a8 <__assert_fail@plt+0x60>
   30e18:	ldr	r1, [pc, #236]	; 30f0c <__flatcc_error_report@@Base+0x9e0>
   30e1c:	cmp	r2, r1
   30e20:	bne	30a78 <__flatcc_error_report@@Base+0x54c>
   30e24:	b	30b40 <__flatcc_error_report@@Base+0x614>
   30e28:	sub	r1, r1, #8
   30e2c:	cmp	r2, r1
   30e30:	blt	30a78 <__flatcc_error_report@@Base+0x54c>
   30e34:	cmn	r2, #976	; 0x3d0
   30e38:	blt	30b40 <__flatcc_error_report@@Base+0x614>
   30e3c:	add	r1, r1, #7
   30e40:	cmp	r2, r1
   30e44:	bne	30a78 <__flatcc_error_report@@Base+0x54c>
   30e48:	b	30b40 <__flatcc_error_report@@Base+0x614>
   30e4c:	mov	r5, r3
   30e50:	str	r5, [r4, #40]	; 0x28
   30e54:	b	30df4 <__flatcc_error_report@@Base+0x8c8>
   30e58:	sub	r2, r2, #8
   30e5c:	cmp	r3, r2
   30e60:	blt	30c34 <__flatcc_error_report@@Base+0x708>
   30e64:	cmn	r3, #976	; 0x3d0
   30e68:	blt	30e78 <__flatcc_error_report@@Base+0x94c>
   30e6c:	add	r2, r2, #7
   30e70:	cmp	r3, r2
   30e74:	bne	30c34 <__flatcc_error_report@@Base+0x708>
   30e78:	str	r6, [r8]
   30e7c:	mov	r5, #0
   30e80:	mov	r2, #8
   30e84:	b	30b48 <__flatcc_error_report@@Base+0x61c>
   30e88:	mvn	r2, #984	; 0x3d8
   30e8c:	cmp	r3, r2
   30e90:	bge	30e78 <__flatcc_error_report@@Base+0x94c>
   30e94:	cmn	r3, #988	; 0x3dc
   30e98:	bge	30ec4 <__flatcc_error_report@@Base+0x998>
   30e9c:	cmn	r3, #996	; 0x3e4
   30ea0:	bge	30e78 <__flatcc_error_report@@Base+0x94c>
   30ea4:	add	r3, r3, #996	; 0x3e4
   30ea8:	add	r3, r3, #3
   30eac:	cmp	r3, #1
   30eb0:	bhi	30c34 <__flatcc_error_report@@Base+0x708>
   30eb4:	b	30e78 <__flatcc_error_report@@Base+0x94c>
   30eb8:	mov	r7, r3
   30ebc:	str	r7, [r4, #40]	; 0x28
   30ec0:	b	30df4 <__flatcc_error_report@@Base+0x8c8>
   30ec4:	ldr	r2, [pc, #64]	; 30f0c <__flatcc_error_report@@Base+0x9e0>
   30ec8:	cmp	r3, r2
   30ecc:	bne	30c34 <__flatcc_error_report@@Base+0x708>
   30ed0:	b	30e78 <__flatcc_error_report@@Base+0x94c>
   30ed4:	mov	r5, r9
   30ed8:	b	30e50 <__flatcc_error_report@@Base+0x924>
   30edc:	mov	r3, r7
   30ee0:	b	308f0 <__flatcc_error_report@@Base+0x3c4>
   30ee4:	muleq	r5, ip, r3
   30ee8:			; <UNDEFINED> instruction: 0xfffffc32
   30eec:	andeq	fp, r5, r4, asr #7
   30ef0:	andeq	fp, r5, r0, ror #7
   30ef4:	strdeq	fp, [r5], -r8
   30ef8:	andeq	fp, r5, ip, lsl r4
   30efc:	andeq	sl, r5, r4, lsr #30
   30f00:	andeq	r0, r0, r5, asr r1
   30f04:	andeq	fp, r5, ip, asr #32
   30f08:	andeq	sp, r4, r4, ror r2
   30f0c:			; <UNDEFINED> instruction: 0xfffffc25
   30f10:	ldr	r3, [r0, #40]	; 0x28
   30f14:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   30f18:	sub	sp, sp, #20
   30f1c:	str	r3, [sp, #12]
   30f20:	ldr	r3, [r3, #16]
   30f24:	cmp	r3, #40	; 0x28
   30f28:	beq	30f3c <__flatcc_error_report@@Base+0xa10>
   30f2c:	mov	r5, #0
   30f30:	mov	r0, r5
   30f34:	add	sp, sp, #20
   30f38:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   30f3c:	ldr	r3, [sp, #12]
   30f40:	ldr	r7, [r0, #24]
   30f44:	add	r9, r3, #20
   30f48:	cmp	r9, r7
   30f4c:	mov	r4, r0
   30f50:	str	r9, [r0, #40]	; 0x28
   30f54:	beq	314ac <__flatcc_error_report@@Base+0xf80>
   30f58:	ldr	r3, [r3, #36]	; 0x24
   30f5c:	cmn	r3, #964	; 0x3c4
   30f60:	bne	30ff0 <__flatcc_error_report@@Base+0xac4>
   30f64:	ldr	r2, [r0, #52]	; 0x34
   30f68:	mov	r8, #1
   30f6c:	ldr	r0, [r0, #44]	; 0x2c
   30f70:	mov	r5, #65536	; 0x10000
   30f74:	b	30fa8 <__flatcc_error_report@@Base+0xa7c>
   30f78:	ldr	r1, [r4, #36]	; 0x24
   30f7c:	add	r6, r9, #20
   30f80:	cmp	r6, r7
   30f84:	str	r2, [r4, #52]	; 0x34
   30f88:	stm	r3, {r1, r9}
   30f8c:	str	r3, [r4, #36]	; 0x24
   30f90:	str	r6, [r4, #40]	; 0x28
   30f94:	beq	314b0 <__flatcc_error_report@@Base+0xf84>
   30f98:	ldr	r3, [r6, #16]
   30f9c:	cmn	r3, #964	; 0x3c4
   30fa0:	bne	30ff4 <__flatcc_error_report@@Base+0xac8>
   30fa4:	mov	r9, r6
   30fa8:	add	r1, r2, #16
   30fac:	cmp	r1, r0
   30fb0:	movls	r3, r2
   30fb4:	movls	r2, r1
   30fb8:	bls	30f78 <__flatcc_error_report@@Base+0xa4c>
   30fbc:	mov	r1, r8
   30fc0:	mov	r0, r5
   30fc4:	bl	13fa4 <calloc@plt>
   30fc8:	subs	r2, r0, #0
   30fcc:	beq	3149c <__flatcc_error_report@@Base+0xf70>
   30fd0:	ldr	r3, [r4, #48]	; 0x30
   30fd4:	add	r0, r2, #65536	; 0x10000
   30fd8:	str	r3, [r2]
   30fdc:	str	r2, [r4, #48]	; 0x30
   30fe0:	add	r3, r2, #16
   30fe4:	str	r0, [r4, #44]	; 0x2c
   30fe8:	add	r2, r2, #32
   30fec:	b	30f78 <__flatcc_error_report@@Base+0xa4c>
   30ff0:	mov	r6, r9
   30ff4:	cmp	r3, #9
   30ff8:	movne	r5, #0
   30ffc:	beq	31110 <__flatcc_error_report@@Base+0xbe4>
   31000:	mov	sl, #0
   31004:	cmp	r3, #41	; 0x29
   31008:	str	sl, [r4, #36]	; 0x24
   3100c:	beq	31060 <__flatcc_error_report@@Base+0xb34>
   31010:	str	sl, [sp, #4]
   31014:	str	sl, [sp]
   31018:	ldr	r3, [sp, #12]
   3101c:	mov	r1, r6
   31020:	mov	r0, r4
   31024:	ldr	r2, [pc, #1188]	; 314d0 <__flatcc_error_report@@Base+0xfa4>
   31028:	bl	3052c <__flatcc_error_report@@Base>
   3102c:	cmp	r5, #0
   31030:	movne	r2, #0
   31034:	bne	31040 <__flatcc_error_report@@Base+0xb14>
   31038:	b	30f2c <__flatcc_error_report@@Base+0xa00>
   3103c:	mov	r5, r3
   31040:	ldr	r3, [r5]
   31044:	str	r2, [r5]
   31048:	cmp	r3, #0
   3104c:	mov	r2, r5
   31050:	bne	3103c <__flatcc_error_report@@Base+0xb10>
   31054:	mov	r0, r5
   31058:	add	sp, sp, #20
   3105c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   31060:	ldr	r9, [r4, #24]
   31064:	add	r7, r6, #20
   31068:	cmp	r9, r7
   3106c:	str	r7, [r4, #40]	; 0x28
   31070:	beq	314c4 <__flatcc_error_report@@Base+0xf98>
   31074:	ldr	r3, [r6, #36]	; 0x24
   31078:	cmn	r3, #964	; 0x3c4
   3107c:	bne	3102c <__flatcc_error_report@@Base+0xb00>
   31080:	ldr	r3, [r4, #52]	; 0x34
   31084:	ldr	ip, [r4, #44]	; 0x2c
   31088:	mov	r8, #1
   3108c:	mov	r6, #65536	; 0x10000
   31090:	b	310c8 <__flatcc_error_report@@Base+0xb9c>
   31094:	add	r2, r7, #20
   31098:	cmp	r2, r9
   3109c:	str	r3, [r4, #52]	; 0x34
   310a0:	str	r7, [r1, #4]
   310a4:	str	sl, [r1]
   310a8:	str	r1, [r4, #36]	; 0x24
   310ac:	str	r2, [r4, #40]	; 0x28
   310b0:	beq	314c8 <__flatcc_error_report@@Base+0xf9c>
   310b4:	ldr	r0, [r2, #16]
   310b8:	cmn	r0, #964	; 0x3c4
   310bc:	bne	3102c <__flatcc_error_report@@Base+0xb00>
   310c0:	mov	sl, r1
   310c4:	mov	r7, r2
   310c8:	add	r2, r3, #16
   310cc:	cmp	r2, ip
   310d0:	movls	r1, r3
   310d4:	movls	r3, r2
   310d8:	bls	31094 <__flatcc_error_report@@Base+0xb68>
   310dc:	mov	r1, r8
   310e0:	mov	r0, r6
   310e4:	bl	13fa4 <calloc@plt>
   310e8:	subs	r3, r0, #0
   310ec:	beq	3149c <__flatcc_error_report@@Base+0xf70>
   310f0:	ldr	r2, [r4, #48]	; 0x30
   310f4:	add	ip, r3, #65536	; 0x10000
   310f8:	str	r2, [r3]
   310fc:	str	r3, [r4, #48]	; 0x30
   31100:	add	r1, r3, #16
   31104:	str	ip, [r4, #44]	; 0x2c
   31108:	add	r3, r3, #32
   3110c:	b	31094 <__flatcc_error_report@@Base+0xb68>
   31110:	add	sl, r6, #20
   31114:	cmp	sl, r7
   31118:	str	sl, [r4, #40]	; 0x28
   3111c:	beq	314b8 <__flatcc_error_report@@Base+0xf8c>
   31120:	ldr	r3, [r6, #36]	; 0x24
   31124:	ldr	r5, [r4, #52]	; 0x34
   31128:	cmn	r3, #964	; 0x3c4
   3112c:	ldr	lr, [r4, #44]	; 0x2c
   31130:	bne	311b8 <__flatcc_error_report@@Base+0xc8c>
   31134:	mov	r9, #1
   31138:	mov	r8, #65536	; 0x10000
   3113c:	b	31170 <__flatcc_error_report@@Base+0xc44>
   31140:	ldr	r1, [r4, #36]	; 0x24
   31144:	add	r3, sl, #20
   31148:	cmp	r3, r7
   3114c:	str	r5, [r4, #52]	; 0x34
   31150:	stm	r2, {r1, sl}
   31154:	str	r2, [r4, #36]	; 0x24
   31158:	str	r3, [r4, #40]	; 0x28
   3115c:	beq	314bc <__flatcc_error_report@@Base+0xf90>
   31160:	ldr	r2, [r3, #16]
   31164:	cmn	r2, #964	; 0x3c4
   31168:	bne	311b8 <__flatcc_error_report@@Base+0xc8c>
   3116c:	mov	sl, r3
   31170:	add	r3, r5, #16
   31174:	cmp	r3, lr
   31178:	movls	r2, r5
   3117c:	movls	r5, r3
   31180:	bls	31140 <__flatcc_error_report@@Base+0xc14>
   31184:	mov	r1, r9
   31188:	mov	r0, r8
   3118c:	bl	13fa4 <calloc@plt>
   31190:	cmp	r0, #0
   31194:	beq	3149c <__flatcc_error_report@@Base+0xf70>
   31198:	ldr	r3, [r4, #48]	; 0x30
   3119c:	add	lr, r0, #65536	; 0x10000
   311a0:	str	r3, [r0]
   311a4:	str	r0, [r4, #48]	; 0x30
   311a8:	str	lr, [r4, #44]	; 0x2c
   311ac:	add	r2, r0, #16
   311b0:	add	r5, r0, #32
   311b4:	b	31140 <__flatcc_error_report@@Base+0xc14>
   311b8:	add	r2, r5, #32
   311bc:	cmp	r2, lr
   311c0:	mov	fp, #0
   311c4:	mov	r7, #1
   311c8:	mov	r8, #65536	; 0x10000
   311cc:	bhi	31370 <__flatcc_error_report@@Base+0xe44>
   311d0:	ldr	r1, [r4, #40]	; 0x28
   311d4:	str	r2, [r4, #52]	; 0x34
   311d8:	mov	r9, r5
   311dc:	ldr	r0, [r1, #16]
   311e0:	str	fp, [r5]
   311e4:	cmp	r0, #58	; 0x3a
   311e8:	str	r6, [r5, #4]
   311ec:	beq	313c8 <__flatcc_error_report@@Base+0xe9c>
   311f0:	ldr	r3, [r4, #108]	; 0x6c
   311f4:	cmp	r3, #9
   311f8:	bgt	30f30 <__flatcc_error_report@@Base+0xa04>
   311fc:	ldr	r6, [r4, #40]	; 0x28
   31200:	ldr	r3, [r6, #16]
   31204:	cmp	r3, #44	; 0x2c
   31208:	bne	31000 <__flatcc_error_report@@Base+0xad4>
   3120c:	ldr	sl, [r4, #24]
   31210:	add	fp, r6, #20
   31214:	cmp	fp, sl
   31218:	str	fp, [r4, #40]	; 0x28
   3121c:	beq	31480 <__flatcc_error_report@@Base+0xf54>
   31220:	ldr	r1, [r6, #36]	; 0x24
   31224:	cmn	r1, #964	; 0x3c4
   31228:	bne	312b4 <__flatcc_error_report@@Base+0xd88>
   3122c:	ldr	r0, [r4, #52]	; 0x34
   31230:	ldr	lr, [r4, #44]	; 0x2c
   31234:	b	3126c <__flatcc_error_report@@Base+0xd40>
   31238:	ldr	ip, [r4, #36]	; 0x24
   3123c:	add	r6, fp, #20
   31240:	cmp	r6, sl
   31244:	str	r0, [r4, #52]	; 0x34
   31248:	str	fp, [r1, #4]
   3124c:	str	ip, [r1]
   31250:	str	r1, [r4, #36]	; 0x24
   31254:	str	r6, [r4, #40]	; 0x28
   31258:	beq	31484 <__flatcc_error_report@@Base+0xf58>
   3125c:	ldr	r1, [r6, #16]
   31260:	cmn	r1, #964	; 0x3c4
   31264:	bne	312b8 <__flatcc_error_report@@Base+0xd8c>
   31268:	mov	fp, r6
   3126c:	add	ip, r0, #16
   31270:	cmp	ip, lr
   31274:	movls	r1, r0
   31278:	movls	r0, ip
   3127c:	bls	31238 <__flatcc_error_report@@Base+0xd0c>
   31280:	mov	r1, r7
   31284:	mov	r0, r8
   31288:	bl	13fa4 <calloc@plt>
   3128c:	cmp	r0, #0
   31290:	beq	3149c <__flatcc_error_report@@Base+0xf70>
   31294:	ldr	r1, [r4, #48]	; 0x30
   31298:	add	lr, r0, #65536	; 0x10000
   3129c:	str	r1, [r0]
   312a0:	str	r0, [r4, #48]	; 0x30
   312a4:	add	r1, r0, #16
   312a8:	str	lr, [r4, #44]	; 0x2c
   312ac:	add	r0, r0, #32
   312b0:	b	31238 <__flatcc_error_report@@Base+0xd0c>
   312b4:	mov	r6, fp
   312b8:	cmp	r1, #9
   312bc:	bne	313a4 <__flatcc_error_report@@Base+0xe78>
   312c0:	add	fp, r6, #20
   312c4:	cmp	sl, fp
   312c8:	str	fp, [r4, #40]	; 0x28
   312cc:	beq	31480 <__flatcc_error_report@@Base+0xf54>
   312d0:	ldr	r1, [r6, #36]	; 0x24
   312d4:	ldr	r5, [r4, #52]	; 0x34
   312d8:	cmn	r1, #964	; 0x3c4
   312dc:	ldr	lr, [r4, #44]	; 0x2c
   312e0:	beq	31318 <__flatcc_error_report@@Base+0xdec>
   312e4:	b	31360 <__flatcc_error_report@@Base+0xe34>
   312e8:	ldr	r0, [r4, #36]	; 0x24
   312ec:	add	r1, fp, #20
   312f0:	cmp	r1, sl
   312f4:	str	r5, [r4, #52]	; 0x34
   312f8:	stm	ip, {r0, fp}
   312fc:	str	ip, [r4, #36]	; 0x24
   31300:	str	r1, [r4, #40]	; 0x28
   31304:	beq	31484 <__flatcc_error_report@@Base+0xf58>
   31308:	ldr	r3, [r1, #16]
   3130c:	cmn	r3, #964	; 0x3c4
   31310:	bne	31360 <__flatcc_error_report@@Base+0xe34>
   31314:	mov	fp, r1
   31318:	add	r1, r5, #16
   3131c:	cmp	r1, lr
   31320:	movls	ip, r5
   31324:	movls	r5, r1
   31328:	bls	312e8 <__flatcc_error_report@@Base+0xdbc>
   3132c:	mov	r1, r7
   31330:	mov	r0, r8
   31334:	bl	13fa4 <calloc@plt>
   31338:	cmp	r0, #0
   3133c:	beq	3149c <__flatcc_error_report@@Base+0xf70>
   31340:	ldr	r1, [r4, #48]	; 0x30
   31344:	add	lr, r0, #65536	; 0x10000
   31348:	str	r1, [r0]
   3134c:	str	r0, [r4, #48]	; 0x30
   31350:	str	lr, [r4, #44]	; 0x2c
   31354:	add	ip, r0, #16
   31358:	add	r5, r0, #32
   3135c:	b	312e8 <__flatcc_error_report@@Base+0xdbc>
   31360:	add	r2, r5, #32
   31364:	cmp	r2, lr
   31368:	mov	fp, r9
   3136c:	bls	311d0 <__flatcc_error_report@@Base+0xca4>
   31370:	mov	r1, r7
   31374:	mov	r0, r8
   31378:	bl	13fa4 <calloc@plt>
   3137c:	cmp	r0, #0
   31380:	beq	3149c <__flatcc_error_report@@Base+0xf70>
   31384:	ldr	ip, [r4, #48]	; 0x30
   31388:	add	r1, r0, #65536	; 0x10000
   3138c:	add	r5, r0, #16
   31390:	add	r2, r0, #48	; 0x30
   31394:	str	ip, [r0]
   31398:	str	r0, [r4, #48]	; 0x30
   3139c:	str	r1, [r4, #44]	; 0x2c
   313a0:	b	311d0 <__flatcc_error_report@@Base+0xca4>
   313a4:	mov	r3, #0
   313a8:	mov	r1, r6
   313ac:	str	r3, [sp]
   313b0:	ldr	r2, [pc, #284]	; 314d4 <__flatcc_error_report@@Base+0xfa8>
   313b4:	mov	r0, r4
   313b8:	bl	2f580 <__flatcc_fb_print_error@@Base+0x78>
   313bc:	ldr	r6, [r4, #40]	; 0x28
   313c0:	ldr	r3, [r6, #16]
   313c4:	b	31000 <__flatcc_error_report@@Base+0xad4>
   313c8:	ldr	sl, [r4, #24]
   313cc:	add	r6, r1, #20
   313d0:	cmp	sl, r6
   313d4:	str	r6, [r4, #40]	; 0x28
   313d8:	beq	314a0 <__flatcc_error_report@@Base+0xf74>
   313dc:	ldr	r1, [r1, #36]	; 0x24
   313e0:	cmn	r1, #964	; 0x3c4
   313e4:	bne	31468 <__flatcc_error_report@@Base+0xf3c>
   313e8:	ldr	lr, [r4, #44]	; 0x2c
   313ec:	b	31420 <__flatcc_error_report@@Base+0xef4>
   313f0:	ldr	r0, [r4, #36]	; 0x24
   313f4:	add	r1, r6, #20
   313f8:	cmp	r1, sl
   313fc:	str	r2, [r4, #52]	; 0x34
   31400:	stm	ip, {r0, r6}
   31404:	str	ip, [r4, #36]	; 0x24
   31408:	str	r1, [r4, #40]	; 0x28
   3140c:	beq	314a4 <__flatcc_error_report@@Base+0xf78>
   31410:	ldr	r0, [r1, #16]
   31414:	cmn	r0, #964	; 0x3c4
   31418:	bne	31468 <__flatcc_error_report@@Base+0xf3c>
   3141c:	mov	r6, r1
   31420:	add	r1, r2, #16
   31424:	cmp	r1, lr
   31428:	movls	ip, r2
   3142c:	movls	r2, r1
   31430:	bls	313f0 <__flatcc_error_report@@Base+0xec4>
   31434:	mov	r1, r7
   31438:	mov	r0, r8
   3143c:	bl	13fa4 <calloc@plt>
   31440:	cmp	r0, #0
   31444:	beq	3149c <__flatcc_error_report@@Base+0xf70>
   31448:	ldr	r2, [r4, #48]	; 0x30
   3144c:	add	lr, r0, #65536	; 0x10000
   31450:	str	r2, [r0]
   31454:	str	r0, [r4, #48]	; 0x30
   31458:	str	lr, [r4, #44]	; 0x2c
   3145c:	add	ip, r0, #16
   31460:	add	r2, r0, #32
   31464:	b	313f0 <__flatcc_error_report@@Base+0xec4>
   31468:	ldr	r3, [pc, #104]	; 314d8 <__flatcc_error_report@@Base+0xfac>
   3146c:	mov	r2, r7
   31470:	add	r1, r5, #8
   31474:	mov	r0, r4
   31478:	bl	2fca8 <__flatcc_fb_print_error@@Base+0x7a0>
   3147c:	b	311f0 <__flatcc_error_report@@Base+0xcc4>
   31480:	mov	fp, r6
   31484:	str	fp, [r4, #40]	; 0x28
   31488:	ldr	r3, [pc, #76]	; 314dc <__flatcc_error_report@@Base+0xfb0>
   3148c:	ldr	r2, [pc, #76]	; 314e0 <__flatcc_error_report@@Base+0xfb4>
   31490:	ldr	r1, [pc, #76]	; 314e4 <__flatcc_error_report@@Base+0xfb8>
   31494:	ldr	r0, [pc, #76]	; 314e8 <__flatcc_error_report@@Base+0xfbc>
   31498:	bl	14148 <__assert_fail@plt>
   3149c:	bl	141a8 <__assert_fail@plt+0x60>
   314a0:	mov	r6, r1
   314a4:	str	r6, [r4, #40]	; 0x28
   314a8:	b	31488 <__flatcc_error_report@@Base+0xf5c>
   314ac:	mov	r9, r3
   314b0:	str	r9, [r4, #40]	; 0x28
   314b4:	b	31488 <__flatcc_error_report@@Base+0xf5c>
   314b8:	mov	sl, r6
   314bc:	str	sl, [r4, #40]	; 0x28
   314c0:	b	31488 <__flatcc_error_report@@Base+0xf5c>
   314c4:	mov	r7, r6
   314c8:	str	r7, [r4, #40]	; 0x28
   314cc:	b	31488 <__flatcc_error_report@@Base+0xf5c>
   314d0:	andeq	fp, r5, r4, ror #8
   314d4:	andeq	fp, r5, r4, lsr r4
   314d8:	andeq	fp, r5, r4, lsl #9
   314dc:	andeq	sl, r5, r4, lsr #30
   314e0:	andeq	r0, r0, r5, asr r1
   314e4:	andeq	fp, r5, ip, asr #32
   314e8:	andeq	sp, r4, r4, ror r2

000314ec <error_ref_sym@@Base>:
   314ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   314f0:	sub	sp, sp, #76	; 0x4c
   314f4:	subs	sl, r1, #0
   314f8:	str	r0, [sp, #8]
   314fc:	str	r2, [sp, #12]
   31500:	mov	r9, r3
   31504:	beq	315c0 <error_ref_sym@@Base+0xd4>
   31508:	mov	r6, sl
   3150c:	mov	fp, #0
   31510:	mov	r4, #50	; 0x32
   31514:	add	r7, sp, #20
   31518:	mov	r8, #46	; 0x2e
   3151c:	ldr	r3, [r6, #4]
   31520:	add	r0, r7, fp
   31524:	ldm	r3, {r1, r5}
   31528:	cmp	r5, r4
   3152c:	movge	r5, r4
   31530:	mov	r2, r5
   31534:	bl	13fe0 <memcpy@plt>
   31538:	add	r2, r5, fp
   3153c:	add	r3, sp, #72	; 0x48
   31540:	add	r3, r3, r2
   31544:	sub	r5, r4, r5
   31548:	strb	r8, [r3, #-52]	; 0xffffffcc
   3154c:	ldr	r6, [r6]
   31550:	sub	r4, r5, #1
   31554:	cmp	r6, #0
   31558:	cmpne	r4, #0
   3155c:	movgt	r1, #1
   31560:	movle	r1, #0
   31564:	add	fp, r2, #1
   31568:	bgt	3151c <error_ref_sym@@Base+0x30>
   3156c:	cmp	fp, #0
   31570:	movle	r2, fp
   31574:	cmp	r4, #0
   31578:	add	r3, sp, #72	; 0x48
   3157c:	add	r0, r3, fp
   31580:	ldrle	r3, [pc, #72]	; 315d0 <error_ref_sym@@Base+0xe4>
   31584:	strb	r1, [r0, #-52]	; 0xffffffcc
   31588:	movle	r2, #50	; 0x32
   3158c:	ldrle	r0, [r3, #264]	; 0x108
   31590:	strle	r0, [sp, #67]	; 0x43
   31594:	cmp	r9, #0
   31598:	ldr	r1, [sl, #4]
   3159c:	ldrne	r3, [r9, #4]
   315a0:	moveq	r3, r9
   315a4:	str	r2, [sp, #4]
   315a8:	str	r7, [sp]
   315ac:	ldr	r2, [sp, #12]
   315b0:	ldr	r0, [sp, #8]
   315b4:	bl	3052c <__flatcc_error_report@@Base>
   315b8:	add	sp, sp, #76	; 0x4c
   315bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   315c0:	add	r7, sp, #72	; 0x48
   315c4:	mov	r2, sl
   315c8:	strb	sl, [r7, #-52]!	; 0xffffffcc
   315cc:	b	31594 <error_ref_sym@@Base+0xa8>
   315d0:	andeq	sl, r5, r4, lsr #30

000315d4 <__flatcc_fb_init_parser@@Base>:
   315d4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   315d8:	sub	sp, sp, #8
   315dc:	mov	r6, r1
   315e0:	mov	r7, r2
   315e4:	mov	r1, #0
   315e8:	mov	r2, #560	; 0x230
   315ec:	mov	r8, r3
   315f0:	mov	r5, r0
   315f4:	ldr	r4, [sp, #44]	; 0x2c
   315f8:	bl	140ac <memset@plt>
   315fc:	cmp	r8, #0
   31600:	ldrne	r3, [sp, #40]	; 0x28
   31604:	ldreq	r8, [pc, #600]	; 31864 <__flatcc_fb_init_parser@@Base+0x290>
   31608:	str	r8, [r5, #8]
   3160c:	strne	r3, [r5, #12]
   31610:	cmp	r6, #0
   31614:	beq	3177c <__flatcc_fb_init_parser@@Base+0x1a8>
   31618:	mov	r2, #224	; 0xe0
   3161c:	mov	r1, r6
   31620:	add	r0, r5, #128	; 0x80
   31624:	bl	13fe0 <memcpy@plt>
   31628:	ldr	r3, [r5, #192]	; 0xc0
   3162c:	cmp	r4, #0
   31630:	addeq	r4, r5, #416	; 0x1a0
   31634:	cmp	r3, #8
   31638:	str	r4, [r5, #412]	; 0x19c
   3163c:	bhi	317d8 <__flatcc_fb_init_parser@@Base+0x204>
   31640:	mov	r2, #1
   31644:	lsl	r3, r2, r3
   31648:	tst	r3, #276	; 0x114
   3164c:	beq	317d8 <__flatcc_fb_init_parser@@Base+0x204>
   31650:	ldr	r3, [r5, #196]	; 0xc4
   31654:	cmp	r3, #8
   31658:	bhi	317f8 <__flatcc_fb_init_parser@@Base+0x224>
   3165c:	lsl	r2, r2, r3
   31660:	tst	r2, #276	; 0x114
   31664:	beq	317f8 <__flatcc_fb_init_parser@@Base+0x224>
   31668:	cmp	r7, #0
   3166c:	beq	31788 <__flatcc_fb_init_parser@@Base+0x1b4>
   31670:	mov	r0, r7
   31674:	bl	1407c <strlen@plt>
   31678:	mov	r8, r0
   3167c:	ldr	r2, [r6, #96]	; 0x60
   31680:	mov	r1, r8
   31684:	mov	r0, r7
   31688:	bl	2c1b4 <__flatcc_fb_create_basename@@Base>
   3168c:	cmp	r0, #0
   31690:	mov	r4, r0
   31694:	str	r0, [r5, #512]	; 0x200
   31698:	beq	3184c <__flatcc_fb_init_parser@@Base+0x278>
   3169c:	bl	1407c <strlen@plt>
   316a0:	mov	r1, r0
   316a4:	mov	r9, r0
   316a8:	mov	r0, r4
   316ac:	bl	2bb60 <__flatcc_fb_copy_path_n@@Base>
   316b0:	subs	sl, r0, #0
   316b4:	beq	3184c <__flatcc_fb_init_parser@@Base+0x278>
   316b8:	cmp	r9, #0
   316bc:	beq	316fc <__flatcc_fb_init_parser@@Base+0x128>
   316c0:	ldrb	r4, [sl]
   316c4:	cmp	r4, #0
   316c8:	beq	316fc <__flatcc_fb_init_parser@@Base+0x128>
   316cc:	bl	14058 <__ctype_toupper_loc@plt>
   316d0:	mov	r3, sl
   316d4:	add	r1, sl, r9
   316d8:	b	316e8 <__flatcc_fb_init_parser@@Base+0x114>
   316dc:	ldrb	r4, [r3]
   316e0:	cmp	r4, #0
   316e4:	beq	316fc <__flatcc_fb_init_parser@@Base+0x128>
   316e8:	ldr	r2, [r0]
   316ec:	ldr	r2, [r2, r4, lsl #2]
   316f0:	strb	r2, [r3], #1
   316f4:	cmp	r1, r3
   316f8:	bne	316dc <__flatcc_fb_init_parser@@Base+0x108>
   316fc:	str	sl, [r5, #516]	; 0x204
   31700:	str	sl, [r5, #496]	; 0x1f0
   31704:	str	r9, [r5, #500]	; 0x1f4
   31708:	mov	r1, r8
   3170c:	mov	r0, r7
   31710:	ldr	r2, [pc, #336]	; 31868 <__flatcc_fb_init_parser@@Base+0x294>
   31714:	bl	2c1b4 <__flatcc_fb_create_basename@@Base>
   31718:	cmp	r0, #0
   3171c:	str	r0, [r5, #520]	; 0x208
   31720:	beq	3184c <__flatcc_fb_init_parser@@Base+0x278>
   31724:	ldr	r0, [r6, #192]	; 0xc0
   31728:	cmp	r0, #0
   3172c:	beq	3173c <__flatcc_fb_init_parser@@Base+0x168>
   31730:	str	r0, [r5, #476]	; 0x1dc
   31734:	bl	1407c <strlen@plt>
   31738:	str	r0, [r5, #480]	; 0x1e0
   3173c:	mov	r2, #0
   31740:	mov	r1, r2
   31744:	ldr	r0, [r5, #412]	; 0x19c
   31748:	bl	2a880 <fb_scope_table_find@@Base>
   3174c:	subs	r4, r0, #0
   31750:	beq	31794 <__flatcc_fb_init_parser@@Base+0x1c0>
   31754:	mov	r2, #0
   31758:	str	r4, [r5, #544]	; 0x220
   3175c:	ldr	r0, [r5, #412]	; 0x19c
   31760:	mov	r1, r2
   31764:	bl	2a880 <fb_scope_table_find@@Base>
   31768:	cmp	r4, r0
   3176c:	moveq	r0, #0
   31770:	bne	31850 <__flatcc_fb_init_parser@@Base+0x27c>
   31774:	add	sp, sp, #8
   31778:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   3177c:	add	r0, r5, #128	; 0x80
   31780:	bl	162c0 <flatcc_init_options@@Base>
   31784:	b	31628 <__flatcc_fb_init_parser@@Base+0x54>
   31788:	ldr	r7, [pc, #220]	; 3186c <__flatcc_fb_init_parser@@Base+0x298>
   3178c:	mov	r8, #4
   31790:	b	3167c <__flatcc_fb_init_parser@@Base+0xa8>
   31794:	ldr	r4, [r5, #52]	; 0x34
   31798:	ldr	r3, [r5, #44]	; 0x2c
   3179c:	add	ip, r4, #32
   317a0:	cmp	ip, r3
   317a4:	bhi	31818 <__flatcc_fb_init_parser@@Base+0x244>
   317a8:	add	r2, r5, #476	; 0x1dc
   317ac:	mov	r3, r4
   317b0:	ldm	r2, {r0, r1}
   317b4:	mov	lr, #0
   317b8:	str	ip, [r5, #52]	; 0x34
   317bc:	mov	r2, #1
   317c0:	str	lr, [r3], #20
   317c4:	stm	r3, {r0, r1}
   317c8:	mov	r1, r4
   317cc:	ldr	r0, [r5, #412]	; 0x19c
   317d0:	bl	2a86c <fb_scope_table_insert_item@@Base>
   317d4:	b	31754 <__flatcc_fb_init_parser@@Base+0x180>
   317d8:	mov	r3, #0
   317dc:	mov	r0, r5
   317e0:	str	r3, [sp]
   317e4:	mov	r1, r3
   317e8:	ldr	r2, [pc, #128]	; 31870 <__flatcc_fb_init_parser@@Base+0x29c>
   317ec:	bl	2f580 <__flatcc_fb_print_error@@Base+0x78>
   317f0:	mvn	r0, #0
   317f4:	b	31774 <__flatcc_fb_init_parser@@Base+0x1a0>
   317f8:	mov	r3, #0
   317fc:	mov	r0, r5
   31800:	str	r3, [sp]
   31804:	mov	r1, r3
   31808:	ldr	r2, [pc, #100]	; 31874 <__flatcc_fb_init_parser@@Base+0x2a0>
   3180c:	bl	2f580 <__flatcc_fb_print_error@@Base+0x78>
   31810:	mvn	r0, #0
   31814:	b	31774 <__flatcc_fb_init_parser@@Base+0x1a0>
   31818:	mov	r1, #1
   3181c:	mov	r0, #65536	; 0x10000
   31820:	bl	13fa4 <calloc@plt>
   31824:	cmp	r0, #0
   31828:	beq	3184c <__flatcc_fb_init_parser@@Base+0x278>
   3182c:	ldr	r2, [r5, #48]	; 0x30
   31830:	add	r3, r0, #65536	; 0x10000
   31834:	add	r4, r0, #16
   31838:	add	ip, r0, #48	; 0x30
   3183c:	str	r2, [r0]
   31840:	str	r0, [r5, #48]	; 0x30
   31844:	str	r3, [r5, #44]	; 0x2c
   31848:	b	317a8 <__flatcc_fb_init_parser@@Base+0x1d4>
   3184c:	bl	141a8 <__assert_fail@plt+0x60>
   31850:	ldr	r3, [pc, #32]	; 31878 <__flatcc_fb_init_parser@@Base+0x2a4>
   31854:	ldr	r2, [pc, #32]	; 3187c <__flatcc_fb_init_parser@@Base+0x2a8>
   31858:	ldr	r1, [pc, #32]	; 31880 <__flatcc_fb_init_parser@@Base+0x2ac>
   3185c:	ldr	r0, [pc, #32]	; 31884 <__flatcc_fb_init_parser@@Base+0x2b0>
   31860:	bl	14148 <__assert_fail@plt>
   31864:	andeq	ip, r2, ip, ror #6
   31868:	andeq	lr, r4, ip, asr #2
   3186c:	andeq	fp, r5, r4, lsr #9
   31870:	andeq	fp, r5, ip, lsr #9
   31874:	andeq	fp, r5, r4, ror #9
   31878:	andeq	fp, r5, r4, lsr r0
   3187c:	andeq	r0, r0, r3, lsr r5
   31880:	andeq	fp, r5, ip, asr #32
   31884:	andeq	fp, r5, r0, lsr #10

00031888 <__flatcc_fb_parse@@Base>:
   31888:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3188c:	mov	r4, r0
   31890:	cmp	r3, #0
   31894:	mov	r0, r1
   31898:	ldr	lr, [pc, #4036]	; 32864 <__flatcc_fb_parse@@Base+0xfdc>
   3189c:	ldr	ip, [pc, #4036]	; 32868 <__flatcc_fb_parse@@Base+0xfe0>
   318a0:	mov	r1, #1
   318a4:	mov	r3, #9
   318a8:	ldr	r6, [pc, #4028]	; 3286c <__flatcc_fb_parse@@Base+0xfe4>
   318ac:	str	r1, [r4, #64]	; 0x40
   318b0:	str	r3, [r4, #84]	; 0x54
   318b4:	mov	r1, #5
   318b8:	mov	r3, #0
   318bc:	mov	r5, #4
   318c0:	strne	r0, [r4, #16]
   318c4:	sub	sp, sp, #36	; 0x24
   318c8:	str	lr, [r4, #104]	; 0x68
   318cc:	str	ip, [r4, #88]	; 0x58
   318d0:	str	r1, [r4, #92]	; 0x5c
   318d4:	str	r3, [r4, #80]	; 0x50
   318d8:	mov	r1, r2
   318dc:	str	r3, [r4, #76]	; 0x4c
   318e0:	str	r3, [r4, #100]	; 0x64
   318e4:	str	r3, [r4, #96]	; 0x60
   318e8:	mov	r2, r4
   318ec:	str	r0, [r4, #60]	; 0x3c
   318f0:	str	r6, [r4, #68]	; 0x44
   318f4:	str	r5, [r4, #72]	; 0x48
   318f8:	bl	2c530 <__flatcc_fb_default_error_out@@Base+0x1c4>
   318fc:	ldr	r3, [r4, #40]	; 0x28
   31900:	ldr	r9, [r4, #20]
   31904:	str	r3, [r4, #24]
   31908:	str	r9, [r4, #40]	; 0x28
   3190c:	ldr	r0, [r4, #216]	; 0xd8
   31910:	bl	14040 <malloc@plt>
   31914:	cmp	r0, #0
   31918:	str	r0, [r4, #112]	; 0x70
   3191c:	beq	3484c <__flatcc_fb_parse@@Base+0x2fc4>
   31920:	ldr	r1, [r9, #16]
   31924:	cmn	r1, #964	; 0x3c4
   31928:	beq	32f20 <__flatcc_fb_parse@@Base+0x1698>
   3192c:	ldr	r8, [pc, #3900]	; 32870 <__flatcc_fb_parse@@Base+0xfe8>
   31930:	mov	r5, r9
   31934:	mov	r7, #1
   31938:	mov	r6, #65536	; 0x10000
   3193c:	cmp	r1, r8
   31940:	bne	31ce4 <__flatcc_fb_parse@@Base+0x45c>
   31944:	ldr	sl, [r4, #24]
   31948:	add	fp, r5, #20
   3194c:	cmp	sl, fp
   31950:	str	fp, [r4, #40]	; 0x28
   31954:	beq	34c2c <__flatcc_fb_parse@@Base+0x33a4>
   31958:	ldr	r1, [r5, #36]	; 0x24
   3195c:	cmn	r1, #964	; 0x3c4
   31960:	bne	319e8 <__flatcc_fb_parse@@Base+0x160>
   31964:	ldr	r0, [r4, #52]	; 0x34
   31968:	ldr	ip, [r4, #44]	; 0x2c
   3196c:	b	319a0 <__flatcc_fb_parse@@Base+0x118>
   31970:	ldr	r2, [r4, #36]	; 0x24
   31974:	add	r5, fp, #20
   31978:	cmp	r5, sl
   3197c:	str	r0, [r4, #52]	; 0x34
   31980:	stm	r3, {r2, fp}
   31984:	str	r3, [r4, #36]	; 0x24
   31988:	str	r5, [r4, #40]	; 0x28
   3198c:	beq	32f08 <__flatcc_fb_parse@@Base+0x1680>
   31990:	ldr	r1, [r5, #16]
   31994:	cmn	r1, #964	; 0x3c4
   31998:	bne	319ec <__flatcc_fb_parse@@Base+0x164>
   3199c:	mov	fp, r5
   319a0:	add	r2, r0, #16
   319a4:	cmp	r2, ip
   319a8:	movls	r3, r0
   319ac:	movls	r0, r2
   319b0:	bls	31970 <__flatcc_fb_parse@@Base+0xe8>
   319b4:	mov	r1, r7
   319b8:	mov	r0, r6
   319bc:	bl	13fa4 <calloc@plt>
   319c0:	cmp	r0, #0
   319c4:	beq	3484c <__flatcc_fb_parse@@Base+0x2fc4>
   319c8:	ldr	r3, [r4, #48]	; 0x30
   319cc:	add	ip, r0, #65536	; 0x10000
   319d0:	str	r3, [r0]
   319d4:	str	r0, [r4, #48]	; 0x30
   319d8:	add	r3, r0, #16
   319dc:	str	ip, [r4, #44]	; 0x2c
   319e0:	add	r0, r0, #32
   319e4:	b	31970 <__flatcc_fb_parse@@Base+0xe8>
   319e8:	mov	r5, fp
   319ec:	ldr	r3, [r4, #140]	; 0x8c
   319f0:	cmp	r3, #0
   319f4:	bne	31bc8 <__flatcc_fb_parse@@Base+0x340>
   319f8:	ldr	r0, [r4, #108]	; 0x6c
   319fc:	cmp	r0, #9
   31a00:	bgt	31ce8 <__flatcc_fb_parse@@Base+0x460>
   31a04:	cmp	r1, #19
   31a08:	bne	31bec <__flatcc_fb_parse@@Base+0x364>
   31a0c:	ldr	sl, [r4, #24]
   31a10:	add	fp, r5, #20
   31a14:	cmp	sl, fp
   31a18:	str	fp, [r4, #40]	; 0x28
   31a1c:	beq	34c2c <__flatcc_fb_parse@@Base+0x33a4>
   31a20:	ldr	r3, [r5, #36]	; 0x24
   31a24:	ldr	ip, [r4, #44]	; 0x2c
   31a28:	cmn	r3, #964	; 0x3c4
   31a2c:	ldr	r3, [r4, #52]	; 0x34
   31a30:	beq	31a68 <__flatcc_fb_parse@@Base+0x1e0>
   31a34:	b	31ab8 <__flatcc_fb_parse@@Base+0x230>
   31a38:	ldr	r0, [r4, #36]	; 0x24
   31a3c:	add	r2, fp, #20
   31a40:	cmp	r2, sl
   31a44:	str	r3, [r4, #52]	; 0x34
   31a48:	stm	r1, {r0, fp}
   31a4c:	str	r1, [r4, #36]	; 0x24
   31a50:	str	r2, [r4, #40]	; 0x28
   31a54:	beq	32f08 <__flatcc_fb_parse@@Base+0x1680>
   31a58:	ldr	r1, [r2, #16]
   31a5c:	cmn	r1, #964	; 0x3c4
   31a60:	bne	31ab8 <__flatcc_fb_parse@@Base+0x230>
   31a64:	mov	fp, r2
   31a68:	add	r2, r3, #16
   31a6c:	cmp	r2, ip
   31a70:	movls	r1, r3
   31a74:	movls	r3, r2
   31a78:	bls	31a38 <__flatcc_fb_parse@@Base+0x1b0>
   31a7c:	mov	r1, r7
   31a80:	mov	r0, r6
   31a84:	bl	13fa4 <calloc@plt>
   31a88:	cmp	r0, #0
   31a8c:	beq	3484c <__flatcc_fb_parse@@Base+0x2fc4>
   31a90:	ldr	r3, [r4, #48]	; 0x30
   31a94:	add	ip, r0, #65536	; 0x10000
   31a98:	str	r3, [r0]
   31a9c:	str	r0, [r4, #48]	; 0x30
   31aa0:	str	ip, [r4, #44]	; 0x2c
   31aa4:	add	r1, r0, #16
   31aa8:	add	r3, r0, #32
   31aac:	b	31a38 <__flatcc_fb_parse@@Base+0x1b0>
   31ab0:	ldr	r3, [r4, #52]	; 0x34
   31ab4:	ldr	ip, [r4, #44]	; 0x2c
   31ab8:	add	r2, r3, #32
   31abc:	cmp	r2, ip
   31ac0:	bhi	31b94 <__flatcc_fb_parse@@Base+0x30c>
   31ac4:	ldr	r0, [r4, #352]	; 0x160
   31ac8:	add	r1, r3, #8
   31acc:	str	r2, [r4, #52]	; 0x34
   31ad0:	str	r0, [r3]
   31ad4:	str	r3, [r4, #352]	; 0x160
   31ad8:	mov	r0, r4
   31adc:	bl	2f994 <__flatcc_fb_print_error@@Base+0x48c>
   31ae0:	ldr	r1, [r4, #40]	; 0x28
   31ae4:	ldr	r3, [r1, #16]
   31ae8:	cmp	r3, #59	; 0x3b
   31aec:	bne	31cc0 <__flatcc_fb_parse@@Base+0x438>
   31af0:	ldr	sl, [r4, #24]
   31af4:	add	fp, r1, #20
   31af8:	cmp	sl, fp
   31afc:	str	fp, [r4, #40]	; 0x28
   31b00:	beq	32f04 <__flatcc_fb_parse@@Base+0x167c>
   31b04:	ldr	r1, [r1, #36]	; 0x24
   31b08:	cmn	r1, #964	; 0x3c4
   31b0c:	bne	32348 <__flatcc_fb_parse@@Base+0xac0>
   31b10:	ldr	r0, [r4, #52]	; 0x34
   31b14:	ldr	ip, [r4, #44]	; 0x2c
   31b18:	b	31b4c <__flatcc_fb_parse@@Base+0x2c4>
   31b1c:	ldr	r2, [r4, #36]	; 0x24
   31b20:	add	r5, fp, #20
   31b24:	cmp	r5, sl
   31b28:	str	r0, [r4, #52]	; 0x34
   31b2c:	stm	r3, {r2, fp}
   31b30:	str	r3, [r4, #36]	; 0x24
   31b34:	str	r5, [r4, #40]	; 0x28
   31b38:	beq	32f08 <__flatcc_fb_parse@@Base+0x1680>
   31b3c:	ldr	r1, [r5, #16]
   31b40:	cmn	r1, #964	; 0x3c4
   31b44:	bne	3193c <__flatcc_fb_parse@@Base+0xb4>
   31b48:	mov	fp, r5
   31b4c:	add	r2, r0, #16
   31b50:	cmp	r2, ip
   31b54:	movls	r3, r0
   31b58:	movls	r0, r2
   31b5c:	bls	31b1c <__flatcc_fb_parse@@Base+0x294>
   31b60:	mov	r1, r7
   31b64:	mov	r0, r6
   31b68:	bl	13fa4 <calloc@plt>
   31b6c:	cmp	r0, #0
   31b70:	beq	3484c <__flatcc_fb_parse@@Base+0x2fc4>
   31b74:	ldr	r3, [r4, #48]	; 0x30
   31b78:	add	ip, r0, #65536	; 0x10000
   31b7c:	str	r3, [r0]
   31b80:	str	r0, [r4, #48]	; 0x30
   31b84:	add	r3, r0, #16
   31b88:	str	ip, [r4, #44]	; 0x2c
   31b8c:	add	r0, r0, #32
   31b90:	b	31b1c <__flatcc_fb_parse@@Base+0x294>
   31b94:	mov	r1, r7
   31b98:	mov	r0, r6
   31b9c:	bl	13fa4 <calloc@plt>
   31ba0:	cmp	r0, #0
   31ba4:	beq	3484c <__flatcc_fb_parse@@Base+0x2fc4>
   31ba8:	ldr	r1, [r4, #48]	; 0x30
   31bac:	add	r3, r0, #16
   31bb0:	str	r1, [r0]
   31bb4:	add	r1, r0, #65536	; 0x10000
   31bb8:	add	r2, r0, #48	; 0x30
   31bbc:	str	r0, [r4, #48]	; 0x30
   31bc0:	str	r1, [r4, #44]	; 0x2c
   31bc4:	b	31ac4 <__flatcc_fb_parse@@Base+0x23c>
   31bc8:	mov	r3, #0
   31bcc:	mov	r1, r9
   31bd0:	str	r3, [sp]
   31bd4:	ldr	r2, [pc, #3224]	; 32874 <__flatcc_fb_parse@@Base+0xfec>
   31bd8:	mov	r0, r4
   31bdc:	bl	2f580 <__flatcc_fb_print_error@@Base+0x78>
   31be0:	ldr	r5, [r4, #40]	; 0x28
   31be4:	ldr	r1, [r5, #16]
   31be8:	b	319f8 <__flatcc_fb_parse@@Base+0x170>
   31bec:	mov	r3, #0
   31bf0:	ldr	r2, [pc, #3200]	; 32878 <__flatcc_fb_parse@@Base+0xff0>
   31bf4:	mov	r1, r5
   31bf8:	str	r3, [sp]
   31bfc:	mov	r0, r4
   31c00:	bl	2f580 <__flatcc_fb_print_error@@Base+0x78>
   31c04:	ldr	r2, [r4, #40]	; 0x28
   31c08:	ldr	r3, [r2, #16]
   31c0c:	cmp	r3, #0
   31c10:	beq	31ab0 <__flatcc_fb_parse@@Base+0x228>
   31c14:	cmp	r3, #59	; 0x3b
   31c18:	beq	32ee8 <__flatcc_fb_parse@@Base+0x1660>
   31c1c:	ldr	sl, [r4, #24]
   31c20:	add	r5, r2, #20
   31c24:	cmp	sl, r5
   31c28:	str	r5, [r4, #40]	; 0x28
   31c2c:	beq	34aa0 <__flatcc_fb_parse@@Base+0x3218>
   31c30:	ldr	r3, [r2, #36]	; 0x24
   31c34:	cmn	r3, #964	; 0x3c4
   31c38:	bne	32ee0 <__flatcc_fb_parse@@Base+0x1658>
   31c3c:	ldr	r0, [r4, #52]	; 0x34
   31c40:	ldr	ip, [r4, #44]	; 0x2c
   31c44:	b	31c78 <__flatcc_fb_parse@@Base+0x3f0>
   31c48:	ldr	r1, [r4, #36]	; 0x24
   31c4c:	add	r2, r5, #20
   31c50:	cmp	r2, sl
   31c54:	str	r0, [r4, #52]	; 0x34
   31c58:	stm	r3, {r1, r5}
   31c5c:	str	r3, [r4, #36]	; 0x24
   31c60:	str	r2, [r4, #40]	; 0x28
   31c64:	beq	34aa4 <__flatcc_fb_parse@@Base+0x321c>
   31c68:	ldr	r3, [r2, #16]
   31c6c:	cmn	r3, #964	; 0x3c4
   31c70:	bne	31c08 <__flatcc_fb_parse@@Base+0x380>
   31c74:	mov	r5, r2
   31c78:	add	r2, r0, #16
   31c7c:	cmp	r2, ip
   31c80:	movls	r3, r0
   31c84:	movls	r0, r2
   31c88:	bls	31c48 <__flatcc_fb_parse@@Base+0x3c0>
   31c8c:	mov	r1, r7
   31c90:	mov	r0, r6
   31c94:	bl	13fa4 <calloc@plt>
   31c98:	cmp	r0, #0
   31c9c:	beq	3484c <__flatcc_fb_parse@@Base+0x2fc4>
   31ca0:	ldr	r3, [r4, #48]	; 0x30
   31ca4:	add	ip, r0, #65536	; 0x10000
   31ca8:	str	r3, [r0]
   31cac:	str	r0, [r4, #48]	; 0x30
   31cb0:	add	r3, r0, #16
   31cb4:	str	ip, [r4, #44]	; 0x2c
   31cb8:	add	r0, r0, #32
   31cbc:	b	31c48 <__flatcc_fb_parse@@Base+0x3c0>
   31cc0:	mov	r3, #0
   31cc4:	str	r3, [sp]
   31cc8:	ldr	r2, [pc, #2988]	; 3287c <__flatcc_fb_parse@@Base+0xff4>
   31ccc:	mov	r0, r4
   31cd0:	bl	2f580 <__flatcc_fb_print_error@@Base+0x78>
   31cd4:	ldr	r5, [r4, #40]	; 0x28
   31cd8:	ldr	r1, [r5, #16]
   31cdc:	cmp	r1, r8
   31ce0:	beq	31944 <__flatcc_fb_parse@@Base+0xbc>
   31ce4:	ldr	r0, [r4, #108]	; 0x6c
   31ce8:	cmp	r1, #0
   31cec:	str	r5, [sp, #12]
   31cf0:	beq	31ea4 <__flatcc_fb_parse@@Base+0x61c>
   31cf4:	cmp	r0, #9
   31cf8:	bgt	31d70 <__flatcc_fb_parse@@Base+0x4e8>
   31cfc:	cmn	r1, #968	; 0x3c8
   31d00:	beq	32c80 <__flatcc_fb_parse@@Base+0x13f8>
   31d04:	bgt	31d78 <__flatcc_fb_parse@@Base+0x4f0>
   31d08:	mvn	r3, #972	; 0x3cc
   31d0c:	cmp	r1, r3
   31d10:	beq	32bd4 <__flatcc_fb_parse@@Base+0x134c>
   31d14:	cmn	r1, #972	; 0x3cc
   31d18:	bge	31e4c <__flatcc_fb_parse@@Base+0x5c4>
   31d1c:	sub	r3, r3, #10
   31d20:	cmp	r1, r3
   31d24:	beq	329e8 <__flatcc_fb_parse@@Base+0x1160>
   31d28:	cmn	r1, #976	; 0x3d0
   31d2c:	beq	31f48 <__flatcc_fb_parse@@Base+0x6c0>
   31d30:	mvn	r3, #996	; 0x3e4
   31d34:	cmp	r1, r3
   31d38:	beq	321c4 <__flatcc_fb_parse@@Base+0x93c>
   31d3c:	mov	r3, #0
   31d40:	mov	r1, r5
   31d44:	str	r3, [sp]
   31d48:	ldr	r2, [pc, #2864]	; 32880 <__flatcc_fb_parse@@Base+0xff8>
   31d4c:	mov	r0, r4
   31d50:	bl	2f580 <__flatcc_fb_print_error@@Base+0x78>
   31d54:	ldr	r5, [r4, #40]	; 0x28
   31d58:	ldr	r3, [sp, #12]
   31d5c:	cmp	r3, r5
   31d60:	bne	31e90 <__flatcc_fb_parse@@Base+0x608>
   31d64:	ldr	r0, [r4, #108]	; 0x6c
   31d68:	cmp	r0, #0
   31d6c:	beq	34964 <__flatcc_fb_parse@@Base+0x30dc>
   31d70:	add	sp, sp, #36	; 0x24
   31d74:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   31d78:	cmp	r1, #5
   31d7c:	beq	326e0 <__flatcc_fb_parse@@Base+0xe58>
   31d80:	bgt	31f0c <__flatcc_fb_parse@@Base+0x684>
   31d84:	ldr	r3, [pc, #2808]	; 32884 <__flatcc_fb_parse@@Base+0xffc>
   31d88:	cmp	r1, r3
   31d8c:	beq	32678 <__flatcc_fb_parse@@Base+0xdf0>
   31d90:	blt	320f8 <__flatcc_fb_parse@@Base+0x870>
   31d94:	mvn	r3, #964	; 0x3c4
   31d98:	cmp	r1, r3
   31d9c:	bne	31d3c <__flatcc_fb_parse@@Base+0x4b4>
   31da0:	ldr	r8, [r4, #24]
   31da4:	add	r6, r5, #20
   31da8:	cmp	r8, r6
   31dac:	str	r6, [r4, #40]	; 0x28
   31db0:	beq	34c20 <__flatcc_fb_parse@@Base+0x3398>
   31db4:	ldr	r2, [r5, #36]	; 0x24
   31db8:	cmn	r2, #964	; 0x3c4
   31dbc:	bne	323ec <__flatcc_fb_parse@@Base+0xb64>
   31dc0:	ldr	r3, [r4, #52]	; 0x34
   31dc4:	ldr	ip, [r4, #44]	; 0x2c
   31dc8:	mov	r7, #1
   31dcc:	mov	r5, #65536	; 0x10000
   31dd0:	b	31e04 <__flatcc_fb_parse@@Base+0x57c>
   31dd4:	ldr	r0, [r4, #36]	; 0x24
   31dd8:	add	r1, r6, #20
   31ddc:	cmp	r1, r8
   31de0:	str	r3, [r4, #52]	; 0x34
   31de4:	stm	r2, {r0, r6}
   31de8:	str	r2, [r4, #36]	; 0x24
   31dec:	str	r1, [r4, #40]	; 0x28
   31df0:	beq	34c24 <__flatcc_fb_parse@@Base+0x339c>
   31df4:	ldr	r2, [r1, #16]
   31df8:	cmn	r2, #964	; 0x3c4
   31dfc:	bne	323f0 <__flatcc_fb_parse@@Base+0xb68>
   31e00:	mov	r6, r1
   31e04:	add	r1, r3, #16
   31e08:	cmp	r1, ip
   31e0c:	movls	r2, r3
   31e10:	movls	r3, r1
   31e14:	bls	31dd4 <__flatcc_fb_parse@@Base+0x54c>
   31e18:	mov	r1, r7
   31e1c:	mov	r0, r5
   31e20:	bl	13fa4 <calloc@plt>
   31e24:	subs	r3, r0, #0
   31e28:	beq	3484c <__flatcc_fb_parse@@Base+0x2fc4>
   31e2c:	ldr	r2, [r4, #48]	; 0x30
   31e30:	add	ip, r3, #65536	; 0x10000
   31e34:	str	r2, [r3]
   31e38:	str	r3, [r4, #48]	; 0x30
   31e3c:	add	r2, r3, #16
   31e40:	str	ip, [r4, #44]	; 0x2c
   31e44:	add	r3, r3, #32
   31e48:	b	31dd4 <__flatcc_fb_parse@@Base+0x54c>
   31e4c:	ldr	r3, [pc, #2612]	; 32888 <__flatcc_fb_parse@@Base+0x1000>
   31e50:	cmp	r1, r3
   31e54:	beq	32350 <__flatcc_fb_parse@@Base+0xac8>
   31e58:	bgt	31ff4 <__flatcc_fb_parse@@Base+0x76c>
   31e5c:	sub	r3, r3, #1
   31e60:	cmp	r1, r3
   31e64:	bne	31d3c <__flatcc_fb_parse@@Base+0x4b4>
   31e68:	mov	r3, #0
   31e6c:	mov	r1, r5
   31e70:	str	r3, [sp]
   31e74:	ldr	r2, [pc, #2576]	; 3288c <__flatcc_fb_parse@@Base+0x1004>
   31e78:	mov	r0, r4
   31e7c:	bl	2f580 <__flatcc_fb_print_error@@Base+0x78>
   31e80:	ldr	r5, [r4, #40]	; 0x28
   31e84:	ldr	r3, [sp, #12]
   31e88:	cmp	r3, r5
   31e8c:	beq	31d64 <__flatcc_fb_parse@@Base+0x4dc>
   31e90:	ldr	r1, [r5, #16]
   31e94:	ldr	r0, [r4, #108]	; 0x6c
   31e98:	cmp	r1, #0
   31e9c:	str	r5, [sp, #12]
   31ea0:	bne	31cf4 <__flatcc_fb_parse@@Base+0x46c>
   31ea4:	ldr	ip, [r4, #356]	; 0x164
   31ea8:	cmp	ip, #0
   31eac:	beq	31ed0 <__flatcc_fb_parse@@Base+0x648>
   31eb0:	mov	r2, r1
   31eb4:	b	31ebc <__flatcc_fb_parse@@Base+0x634>
   31eb8:	mov	ip, r3
   31ebc:	ldr	r3, [ip]
   31ec0:	str	r2, [ip]
   31ec4:	cmp	r3, #0
   31ec8:	mov	r2, ip
   31ecc:	bne	31eb8 <__flatcc_fb_parse@@Base+0x630>
   31ed0:	ldr	r3, [r4, #392]	; 0x188
   31ed4:	str	ip, [r4, #356]	; 0x164
   31ed8:	cmp	r3, #0
   31edc:	beq	31f00 <__flatcc_fb_parse@@Base+0x678>
   31ee0:	mov	r1, #0
   31ee4:	b	31eec <__flatcc_fb_parse@@Base+0x664>
   31ee8:	mov	r3, r2
   31eec:	ldr	r2, [r3]
   31ef0:	str	r1, [r3]
   31ef4:	cmp	r2, #0
   31ef8:	mov	r1, r3
   31efc:	bne	31ee8 <__flatcc_fb_parse@@Base+0x660>
   31f00:	str	r3, [r4, #392]	; 0x188
   31f04:	add	sp, sp, #36	; 0x24
   31f08:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   31f0c:	cmp	r1, #27
   31f10:	beq	32654 <__flatcc_fb_parse@@Base+0xdcc>
   31f14:	cmp	r1, #123	; 0x7b
   31f18:	beq	321a4 <__flatcc_fb_parse@@Base+0x91c>
   31f1c:	cmp	r1, #7
   31f20:	bne	31d3c <__flatcc_fb_parse@@Base+0x4b4>
   31f24:	mov	r3, #1
   31f28:	mov	r1, r5
   31f2c:	str	r3, [sp]
   31f30:	ldr	r2, [pc, #2392]	; 32890 <__flatcc_fb_parse@@Base+0x1008>
   31f34:	ldr	r3, [pc, #2392]	; 32894 <__flatcc_fb_parse@@Base+0x100c>
   31f38:	mov	r0, r4
   31f3c:	bl	2f580 <__flatcc_fb_print_error@@Base+0x78>
   31f40:	ldr	r5, [r4, #40]	; 0x28
   31f44:	b	31e84 <__flatcc_fb_parse@@Base+0x5fc>
   31f48:	ldr	r9, [r4, #24]
   31f4c:	add	r7, r5, #20
   31f50:	cmp	r9, r7
   31f54:	str	r7, [r4, #40]	; 0x28
   31f58:	beq	34c34 <__flatcc_fb_parse@@Base+0x33ac>
   31f5c:	ldr	sl, [r5, #36]	; 0x24
   31f60:	ldr	r6, [r4, #52]	; 0x34
   31f64:	cmn	sl, #964	; 0x3c4
   31f68:	ldr	r1, [r4, #44]	; 0x2c
   31f6c:	bne	32704 <__flatcc_fb_parse@@Base+0xe7c>
   31f70:	mov	r8, #1
   31f74:	mov	r5, #65536	; 0x10000
   31f78:	b	31fac <__flatcc_fb_parse@@Base+0x724>
   31f7c:	ldr	r2, [r4, #36]	; 0x24
   31f80:	add	fp, r7, #20
   31f84:	cmp	r9, fp
   31f88:	str	r6, [r4, #52]	; 0x34
   31f8c:	stm	r3, {r2, r7}
   31f90:	str	r3, [r4, #36]	; 0x24
   31f94:	str	fp, [r4, #40]	; 0x28
   31f98:	beq	34b2c <__flatcc_fb_parse@@Base+0x32a4>
   31f9c:	ldr	sl, [fp, #16]
   31fa0:	cmn	sl, #964	; 0x3c4
   31fa4:	bne	32708 <__flatcc_fb_parse@@Base+0xe80>
   31fa8:	mov	r7, fp
   31fac:	add	r2, r6, #16
   31fb0:	cmp	r2, r1
   31fb4:	movls	r3, r6
   31fb8:	movls	r6, r2
   31fbc:	bls	31f7c <__flatcc_fb_parse@@Base+0x6f4>
   31fc0:	mov	r1, r8
   31fc4:	mov	r0, r5
   31fc8:	bl	13fa4 <calloc@plt>
   31fcc:	cmp	r0, #0
   31fd0:	beq	3484c <__flatcc_fb_parse@@Base+0x2fc4>
   31fd4:	ldr	r3, [r4, #48]	; 0x30
   31fd8:	add	r1, r0, #65536	; 0x10000
   31fdc:	str	r3, [r0]
   31fe0:	str	r0, [r4, #48]	; 0x30
   31fe4:	str	r1, [r4, #44]	; 0x2c
   31fe8:	add	r3, r0, #16
   31fec:	add	r6, r0, #32
   31ff0:	b	31f7c <__flatcc_fb_parse@@Base+0x6f4>
   31ff4:	mov	r0, r4
   31ff8:	bl	2c440 <__flatcc_fb_default_error_out@@Base+0xd4>
   31ffc:	ldr	r5, [r4, #40]	; 0x28
   32000:	mov	r6, #0
   32004:	str	r6, [sp, #24]
   32008:	ldr	r3, [r5, #16]
   3200c:	cmp	r3, #59	; 0x3b
   32010:	beq	3476c <__flatcc_fb_parse@@Base+0x2ee4>
   32014:	cmp	r3, #9
   32018:	beq	349bc <__flatcc_fb_parse@@Base+0x3134>
   3201c:	mov	r3, #0
   32020:	mov	r1, r5
   32024:	str	r3, [sp]
   32028:	ldr	r2, [pc, #2152]	; 32898 <__flatcc_fb_parse@@Base+0x1010>
   3202c:	mov	r0, r4
   32030:	bl	2f580 <__flatcc_fb_print_error@@Base+0x78>
   32034:	ldr	r5, [r4, #40]	; 0x28
   32038:	mov	r7, #1
   3203c:	mov	r6, #65536	; 0x10000
   32040:	ldr	r3, [r5, #16]
   32044:	cmp	r3, #0
   32048:	beq	31e84 <__flatcc_fb_parse@@Base+0x5fc>
   3204c:	cmp	r3, #59	; 0x3b
   32050:	beq	33ec0 <__flatcc_fb_parse@@Base+0x2638>
   32054:	ldr	r9, [r4, #24]
   32058:	add	r8, r5, #20
   3205c:	cmp	r9, r8
   32060:	str	r8, [r4, #40]	; 0x28
   32064:	beq	348a0 <__flatcc_fb_parse@@Base+0x3018>
   32068:	ldr	r3, [r5, #36]	; 0x24
   3206c:	cmn	r3, #964	; 0x3c4
   32070:	bne	34b58 <__flatcc_fb_parse@@Base+0x32d0>
   32074:	ldr	r0, [r4, #52]	; 0x34
   32078:	ldr	r1, [r4, #44]	; 0x2c
   3207c:	b	320b0 <__flatcc_fb_parse@@Base+0x828>
   32080:	ldr	r2, [r4, #36]	; 0x24
   32084:	add	r5, r8, #20
   32088:	cmp	r9, r5
   3208c:	str	r0, [r4, #52]	; 0x34
   32090:	stm	r3, {r2, r8}
   32094:	str	r3, [r4, #36]	; 0x24
   32098:	str	r5, [r4, #40]	; 0x28
   3209c:	beq	348a4 <__flatcc_fb_parse@@Base+0x301c>
   320a0:	ldr	r3, [r5, #16]
   320a4:	cmn	r3, #964	; 0x3c4
   320a8:	bne	32040 <__flatcc_fb_parse@@Base+0x7b8>
   320ac:	mov	r8, r5
   320b0:	add	r2, r0, #16
   320b4:	cmp	r2, r1
   320b8:	movls	r3, r0
   320bc:	movls	r0, r2
   320c0:	bls	32080 <__flatcc_fb_parse@@Base+0x7f8>
   320c4:	mov	r1, r7
   320c8:	mov	r0, r6
   320cc:	bl	13fa4 <calloc@plt>
   320d0:	cmp	r0, #0
   320d4:	beq	3484c <__flatcc_fb_parse@@Base+0x2fc4>
   320d8:	ldr	r3, [r4, #48]	; 0x30
   320dc:	add	r1, r0, #65536	; 0x10000
   320e0:	str	r3, [r0]
   320e4:	str	r0, [r4, #48]	; 0x30
   320e8:	add	r3, r0, #16
   320ec:	str	r1, [r4, #44]	; 0x2c
   320f0:	add	r0, r0, #32
   320f4:	b	32080 <__flatcc_fb_parse@@Base+0x7f8>
   320f8:	ldr	r9, [r4, #24]
   320fc:	add	r6, r5, #20
   32100:	cmp	r6, r9
   32104:	str	r6, [r4, #40]	; 0x28
   32108:	beq	34c20 <__flatcc_fb_parse@@Base+0x3398>
   3210c:	ldr	fp, [r5, #36]	; 0x24
   32110:	ldr	r8, [r4, #52]	; 0x34
   32114:	cmn	fp, #964	; 0x3c4
   32118:	ldr	r1, [r4, #44]	; 0x2c
   3211c:	bne	32478 <__flatcc_fb_parse@@Base+0xbf0>
   32120:	mov	r7, #1
   32124:	mov	r5, #65536	; 0x10000
   32128:	b	3215c <__flatcc_fb_parse@@Base+0x8d4>
   3212c:	ldr	r2, [r4, #36]	; 0x24
   32130:	add	sl, r6, #20
   32134:	cmp	sl, r9
   32138:	str	r8, [r4, #52]	; 0x34
   3213c:	stm	r3, {r2, r6}
   32140:	str	r3, [r4, #36]	; 0x24
   32144:	str	sl, [r4, #40]	; 0x28
   32148:	beq	34c24 <__flatcc_fb_parse@@Base+0x339c>
   3214c:	ldr	fp, [sl, #16]
   32150:	cmn	fp, #964	; 0x3c4
   32154:	bne	3247c <__flatcc_fb_parse@@Base+0xbf4>
   32158:	mov	r6, sl
   3215c:	add	r2, r8, #16
   32160:	cmp	r2, r1
   32164:	movls	r3, r8
   32168:	movls	r8, r2
   3216c:	bls	3212c <__flatcc_fb_parse@@Base+0x8a4>
   32170:	mov	r1, r7
   32174:	mov	r0, r5
   32178:	bl	13fa4 <calloc@plt>
   3217c:	cmp	r0, #0
   32180:	beq	3484c <__flatcc_fb_parse@@Base+0x2fc4>
   32184:	ldr	r3, [r4, #48]	; 0x30
   32188:	add	r1, r0, #65536	; 0x10000
   3218c:	str	r3, [r0]
   32190:	str	r0, [r4, #48]	; 0x30
   32194:	str	r1, [r4, #44]	; 0x2c
   32198:	add	r3, r0, #16
   3219c:	add	r8, r0, #32
   321a0:	b	3212c <__flatcc_fb_parse@@Base+0x8a4>
   321a4:	mov	r3, #0
   321a8:	mov	r1, r5
   321ac:	str	r3, [sp]
   321b0:	ldr	r2, [pc, #1764]	; 3289c <__flatcc_fb_parse@@Base+0x1014>
   321b4:	mov	r0, r4
   321b8:	bl	2f580 <__flatcc_fb_print_error@@Base+0x78>
   321bc:	ldr	r5, [r4, #40]	; 0x28
   321c0:	b	31e84 <__flatcc_fb_parse@@Base+0x5fc>
   321c4:	mov	r0, r4
   321c8:	bl	2c440 <__flatcc_fb_default_error_out@@Base+0xd4>
   321cc:	ldr	r8, [r4, #52]	; 0x34
   321d0:	ldr	r3, [r4, #44]	; 0x2c
   321d4:	add	r0, r8, #128	; 0x80
   321d8:	cmp	r0, r3
   321dc:	bhi	33040 <__flatcc_fb_parse@@Base+0x17b8>
   321e0:	ldr	r3, [r4, #392]	; 0x188
   321e4:	str	r0, [r4, #52]	; 0x34
   321e8:	str	r3, [r8]
   321ec:	ldr	r3, [r4, #36]	; 0x24
   321f0:	ldr	r2, [r4, #544]	; 0x220
   321f4:	mov	r1, #3
   321f8:	cmp	r3, #0
   321fc:	strh	r1, [r8, #8]
   32200:	str	r8, [r4, #392]	; 0x188
   32204:	str	r2, [r8, #12]
   32208:	beq	3222c <__flatcc_fb_parse@@Base+0x9a4>
   3220c:	mov	r1, #0
   32210:	b	32218 <__flatcc_fb_parse@@Base+0x990>
   32214:	mov	r3, r2
   32218:	ldr	r2, [r3]
   3221c:	str	r1, [r3]
   32220:	cmp	r2, #0
   32224:	mov	r1, r3
   32228:	bne	32214 <__flatcc_fb_parse@@Base+0x98c>
   3222c:	ldr	r6, [r4, #40]	; 0x28
   32230:	str	r3, [r8, #32]
   32234:	mov	r5, #0
   32238:	ldr	r3, [r6, #16]
   3223c:	str	r5, [r4, #36]	; 0x24
   32240:	cmp	r3, #9
   32244:	bne	33284 <__flatcc_fb_parse@@Base+0x19fc>
   32248:	mov	r0, r4
   3224c:	bl	2c440 <__flatcc_fb_default_error_out@@Base+0xd4>
   32250:	ldr	r3, [r4, #40]	; 0x28
   32254:	str	r6, [r8, #4]
   32258:	ldr	r3, [r3, #16]
   3225c:	cmp	r3, #58	; 0x3a
   32260:	beq	33730 <__flatcc_fb_parse@@Base+0x1ea8>
   32264:	mov	r0, r4
   32268:	bl	30f10 <__flatcc_error_report@@Base+0x9e4>
   3226c:	ldr	r3, [r4, #40]	; 0x28
   32270:	str	r3, [sp, #20]
   32274:	ldr	r3, [r3, #16]
   32278:	cmp	r3, #123	; 0x7b
   3227c:	str	r0, [r8, #28]
   32280:	bne	33550 <__flatcc_fb_parse@@Base+0x1cc8>
   32284:	mov	r0, r4
   32288:	bl	2c440 <__flatcc_fb_default_error_out@@Base+0xd4>
   3228c:	ldr	sl, [r4, #40]	; 0x28
   32290:	ldr	r3, [sl, #16]
   32294:	cmp	r3, #9
   32298:	bne	338d8 <__flatcc_fb_parse@@Base+0x2050>
   3229c:	ldr	r9, [r4, #24]
   322a0:	mov	r7, #1
   322a4:	mov	r6, #65536	; 0x10000
   322a8:	add	fp, sl, #20
   322ac:	cmp	fp, r9
   322b0:	str	fp, [r4, #40]	; 0x28
   322b4:	beq	34c3c <__flatcc_fb_parse@@Base+0x33b4>
   322b8:	ldr	r3, [sl, #36]	; 0x24
   322bc:	cmn	r3, #964	; 0x3c4
   322c0:	bne	3378c <__flatcc_fb_parse@@Base+0x1f04>
   322c4:	ldr	r0, [r4, #52]	; 0x34
   322c8:	ldr	r1, [r4, #44]	; 0x2c
   322cc:	b	32300 <__flatcc_fb_parse@@Base+0xa78>
   322d0:	ldr	r2, [r4, #36]	; 0x24
   322d4:	add	r5, fp, #20
   322d8:	cmp	r9, r5
   322dc:	str	r0, [r4, #52]	; 0x34
   322e0:	stm	r3, {r2, fp}
   322e4:	str	r3, [r4, #36]	; 0x24
   322e8:	str	r5, [r4, #40]	; 0x28
   322ec:	beq	32f08 <__flatcc_fb_parse@@Base+0x1680>
   322f0:	ldr	r3, [r5, #16]
   322f4:	cmn	r3, #964	; 0x3c4
   322f8:	bne	33790 <__flatcc_fb_parse@@Base+0x1f08>
   322fc:	mov	fp, r5
   32300:	add	r2, r0, #16
   32304:	cmp	r2, r1
   32308:	movls	r3, r0
   3230c:	movls	r0, r2
   32310:	bls	322d0 <__flatcc_fb_parse@@Base+0xa48>
   32314:	mov	r1, r7
   32318:	mov	r0, r6
   3231c:	bl	13fa4 <calloc@plt>
   32320:	cmp	r0, #0
   32324:	beq	3484c <__flatcc_fb_parse@@Base+0x2fc4>
   32328:	ldr	r3, [r4, #48]	; 0x30
   3232c:	add	r1, r0, #65536	; 0x10000
   32330:	str	r3, [r0]
   32334:	str	r0, [r4, #48]	; 0x30
   32338:	add	r3, r0, #16
   3233c:	str	r1, [r4, #44]	; 0x2c
   32340:	add	r0, r0, #32
   32344:	b	322d0 <__flatcc_fb_parse@@Base+0xa48>
   32348:	mov	r5, fp
   3234c:	b	3193c <__flatcc_fb_parse@@Base+0xb4>
   32350:	mov	r0, r4
   32354:	bl	2c440 <__flatcc_fb_default_error_out@@Base+0xd4>
   32358:	ldr	r5, [r4, #52]	; 0x34
   3235c:	ldr	r3, [r4, #44]	; 0x2c
   32360:	add	r0, r5, #32
   32364:	cmp	r0, r3
   32368:	bhi	3300c <__flatcc_fb_parse@@Base+0x1784>
   3236c:	ldr	r6, [r4, #40]	; 0x28
   32370:	ldr	r2, [r4, #356]	; 0x164
   32374:	str	r0, [r4, #52]	; 0x34
   32378:	ldr	r3, [r6, #16]
   3237c:	str	r2, [r5]
   32380:	cmp	r3, #19
   32384:	str	r5, [r4, #356]	; 0x164
   32388:	bne	3345c <__flatcc_fb_parse@@Base+0x1bd4>
   3238c:	mov	r0, r4
   32390:	bl	2c440 <__flatcc_fb_default_error_out@@Base+0xd4>
   32394:	add	r1, r5, #8
   32398:	mov	r0, r4
   3239c:	bl	2f994 <__flatcc_fb_print_error@@Base+0x48c>
   323a0:	ldr	r3, [r5, #12]
   323a4:	cmp	r3, #0
   323a8:	bne	323c0 <__flatcc_fb_parse@@Base+0xb38>
   323ac:	str	r3, [sp]
   323b0:	mov	r1, r6
   323b4:	ldr	r2, [pc, #1252]	; 328a0 <__flatcc_fb_parse@@Base+0x1018>
   323b8:	mov	r0, r4
   323bc:	bl	2f580 <__flatcc_fb_print_error@@Base+0x78>
   323c0:	ldr	r1, [r4, #40]	; 0x28
   323c4:	ldr	r3, [r1, #16]
   323c8:	cmp	r3, #59	; 0x3b
   323cc:	beq	32468 <__flatcc_fb_parse@@Base+0xbe0>
   323d0:	mov	r3, #0
   323d4:	str	r3, [sp]
   323d8:	ldr	r2, [pc, #1220]	; 328a4 <__flatcc_fb_parse@@Base+0x101c>
   323dc:	mov	r0, r4
   323e0:	bl	2f580 <__flatcc_fb_print_error@@Base+0x78>
   323e4:	ldr	r5, [r4, #40]	; 0x28
   323e8:	b	31e84 <__flatcc_fb_parse@@Base+0x5fc>
   323ec:	mov	r1, r6
   323f0:	add	r5, r4, #360	; 0x168
   323f4:	ldrh	r3, [r5, #8]
   323f8:	cmp	r3, #0
   323fc:	bne	33074 <__flatcc_fb_parse@@Base+0x17ec>
   32400:	cmp	r2, #19
   32404:	bne	33368 <__flatcc_fb_parse@@Base+0x1ae0>
   32408:	mov	r0, r4
   3240c:	bl	2c440 <__flatcc_fb_default_error_out@@Base+0xd4>
   32410:	mov	r1, r5
   32414:	mov	r0, r4
   32418:	ldr	r6, [r4, #40]	; 0x28
   3241c:	bl	2f994 <__flatcc_fb_print_error@@Base+0x48c>
   32420:	ldr	r3, [r4, #360]	; 0x168
   32424:	cmp	r3, #0
   32428:	beq	32458 <__flatcc_fb_parse@@Base+0xbd0>
   3242c:	ldr	r3, [r4, #364]	; 0x16c
   32430:	cmp	r3, #4
   32434:	beq	32458 <__flatcc_fb_parse@@Base+0xbd0>
   32438:	mov	r2, #1
   3243c:	mov	r3, #0
   32440:	strh	r2, [r5, #8]
   32444:	mov	r1, r6
   32448:	str	r3, [sp]
   3244c:	ldr	r2, [pc, #1108]	; 328a8 <__flatcc_fb_parse@@Base+0x1020>
   32450:	mov	r0, r4
   32454:	bl	2f580 <__flatcc_fb_print_error@@Base+0x78>
   32458:	ldr	r1, [r4, #40]	; 0x28
   3245c:	ldr	r3, [r1, #16]
   32460:	cmp	r3, #59	; 0x3b
   32464:	bne	33440 <__flatcc_fb_parse@@Base+0x1bb8>
   32468:	mov	r0, r4
   3246c:	bl	2c440 <__flatcc_fb_default_error_out@@Base+0xd4>
   32470:	ldr	r5, [r4, #40]	; 0x28
   32474:	b	31e84 <__flatcc_fb_parse@@Base+0x5fc>
   32478:	mov	sl, r6
   3247c:	add	r0, r8, #128	; 0x80
   32480:	cmp	r0, r1
   32484:	bhi	32fd8 <__flatcc_fb_parse@@Base+0x1750>
   32488:	ldr	r3, [r4, #392]	; 0x188
   3248c:	str	r0, [r4, #52]	; 0x34
   32490:	str	r3, [r8]
   32494:	ldr	r2, [r4, #36]	; 0x24
   32498:	ldr	r3, [r4, #544]	; 0x220
   3249c:	mov	r1, #2
   324a0:	cmp	r2, #0
   324a4:	strh	r1, [r8, #8]
   324a8:	str	r8, [r4, #392]	; 0x188
   324ac:	str	r3, [r8, #12]
   324b0:	beq	324d4 <__flatcc_fb_parse@@Base+0xc4c>
   324b4:	mov	r1, #0
   324b8:	b	324c0 <__flatcc_fb_parse@@Base+0xc38>
   324bc:	mov	r2, r3
   324c0:	ldr	r3, [r2]
   324c4:	str	r1, [r2]
   324c8:	cmp	r3, #0
   324cc:	mov	r1, r2
   324d0:	bne	324bc <__flatcc_fb_parse@@Base+0xc34>
   324d4:	mov	r5, #0
   324d8:	cmp	fp, #9
   324dc:	str	r2, [r8, #32]
   324e0:	str	r5, [r4, #36]	; 0x24
   324e4:	bne	33570 <__flatcc_fb_parse@@Base+0x1ce8>
   324e8:	mov	r0, r4
   324ec:	bl	2c440 <__flatcc_fb_default_error_out@@Base+0xd4>
   324f0:	cmp	sl, r5
   324f4:	beq	34a88 <__flatcc_fb_parse@@Base+0x3200>
   324f8:	str	sl, [r8, #4]
   324fc:	mov	r0, r4
   32500:	bl	30f10 <__flatcc_error_report@@Base+0x9e4>
   32504:	ldr	r1, [r4, #40]	; 0x28
   32508:	ldr	r3, [r1, #16]
   3250c:	cmp	r3, #123	; 0x7b
   32510:	str	r0, [r8, #28]
   32514:	bne	34944 <__flatcc_fb_parse@@Base+0x30bc>
   32518:	mov	r0, r4
   3251c:	bl	2c440 <__flatcc_fb_default_error_out@@Base+0xd4>
   32520:	ldr	r5, [r4, #40]	; 0x28
   32524:	str	r8, [sp, #16]
   32528:	ldr	sl, [r5, #16]
   3252c:	cmp	sl, #125	; 0x7d
   32530:	beq	34b20 <__flatcc_fb_parse@@Base+0x3298>
   32534:	mov	r6, #1
   32538:	ldr	r9, [r4, #52]	; 0x34
   3253c:	ldr	r3, [r4, #44]	; 0x2c
   32540:	add	r0, r9, #128	; 0x80
   32544:	cmp	r0, r3
   32548:	bhi	33e8c <__flatcc_fb_parse@@Base+0x2604>
   3254c:	ldr	r1, [sp, #16]
   32550:	mov	r3, #5
   32554:	ldr	r2, [r1, #20]
   32558:	str	r0, [r4, #52]	; 0x34
   3255c:	str	r2, [r9]
   32560:	strh	r3, [r9, #8]
   32564:	str	r9, [r1, #20]
   32568:	ldr	r2, [r4, #36]	; 0x24
   3256c:	mov	r3, r1
   32570:	cmp	r2, #0
   32574:	beq	32598 <__flatcc_fb_parse@@Base+0xd10>
   32578:	mov	r1, #0
   3257c:	b	32584 <__flatcc_fb_parse@@Base+0xcfc>
   32580:	mov	r2, r3
   32584:	ldr	r3, [r2]
   32588:	str	r1, [r2]
   3258c:	cmp	r3, #0
   32590:	mov	r1, r2
   32594:	bne	32580 <__flatcc_fb_parse@@Base+0xcf8>
   32598:	mov	fp, #0
   3259c:	cmp	sl, #9
   325a0:	str	r2, [r9, #68]	; 0x44
   325a4:	str	fp, [r4, #36]	; 0x24
   325a8:	bne	34750 <__flatcc_fb_parse@@Base+0x2ec8>
   325ac:	ldr	r8, [r4, #24]
   325b0:	add	r7, r5, #20
   325b4:	cmp	r7, r8
   325b8:	str	r7, [r4, #40]	; 0x28
   325bc:	beq	34c34 <__flatcc_fb_parse@@Base+0x33ac>
   325c0:	ldr	lr, [r5, #36]	; 0x24
   325c4:	cmn	lr, #964	; 0x3c4
   325c8:	bne	33bbc <__flatcc_fb_parse@@Base+0x2334>
   325cc:	ldr	ip, [r4, #44]	; 0x2c
   325d0:	mov	sl, #65536	; 0x10000
   325d4:	b	3260c <__flatcc_fb_parse@@Base+0xd84>
   325d8:	add	r1, r7, #20
   325dc:	cmp	r8, r1
   325e0:	str	r0, [r4, #52]	; 0x34
   325e4:	str	r7, [r3, #4]
   325e8:	str	fp, [r3]
   325ec:	str	r3, [r4, #36]	; 0x24
   325f0:	str	r1, [r4, #40]	; 0x28
   325f4:	beq	34b2c <__flatcc_fb_parse@@Base+0x32a4>
   325f8:	ldr	lr, [r1, #16]
   325fc:	cmn	lr, #964	; 0x3c4
   32600:	bne	33bc0 <__flatcc_fb_parse@@Base+0x2338>
   32604:	mov	fp, r3
   32608:	mov	r7, r1
   3260c:	add	r2, r0, #16
   32610:	cmp	r2, ip
   32614:	movls	r3, r0
   32618:	movls	r0, r2
   3261c:	bls	325d8 <__flatcc_fb_parse@@Base+0xd50>
   32620:	mov	r1, r6
   32624:	mov	r0, sl
   32628:	bl	13fa4 <calloc@plt>
   3262c:	cmp	r0, #0
   32630:	beq	3484c <__flatcc_fb_parse@@Base+0x2fc4>
   32634:	ldr	r3, [r4, #48]	; 0x30
   32638:	add	ip, r0, #65536	; 0x10000
   3263c:	str	r3, [r0]
   32640:	str	r0, [r4, #48]	; 0x30
   32644:	add	r3, r0, #16
   32648:	str	ip, [r4, #44]	; 0x2c
   3264c:	add	r0, r0, #32
   32650:	b	325d8 <__flatcc_fb_parse@@Base+0xd50>
   32654:	mov	r3, #5
   32658:	mov	r1, r5
   3265c:	str	r3, [sp]
   32660:	ldr	r2, [pc, #580]	; 328ac <__flatcc_fb_parse@@Base+0x1024>
   32664:	ldr	r3, [pc, #580]	; 328b0 <__flatcc_fb_parse@@Base+0x1028>
   32668:	mov	r0, r4
   3266c:	bl	2f580 <__flatcc_fb_print_error@@Base+0x78>
   32670:	ldr	r5, [r4, #40]	; 0x28
   32674:	b	31e84 <__flatcc_fb_parse@@Base+0x5fc>
   32678:	add	r5, r4, #376	; 0x178
   3267c:	mov	r0, r4
   32680:	bl	2c440 <__flatcc_fb_default_error_out@@Base+0xd4>
   32684:	ldrh	r3, [r5, #8]
   32688:	cmp	r3, #2
   3268c:	beq	34aac <__flatcc_fb_parse@@Base+0x3224>
   32690:	ldr	r1, [r4, #40]	; 0x28
   32694:	ldr	r3, [r1, #16]
   32698:	cmp	r3, #19
   3269c:	bne	33478 <__flatcc_fb_parse@@Base+0x1bf0>
   326a0:	mov	r0, r4
   326a4:	bl	2c440 <__flatcc_fb_default_error_out@@Base+0xd4>
   326a8:	mov	r1, r5
   326ac:	mov	r0, r4
   326b0:	bl	2f994 <__flatcc_fb_print_error@@Base+0x48c>
   326b4:	ldr	r1, [r4, #40]	; 0x28
   326b8:	ldr	r3, [r1, #16]
   326bc:	cmp	r3, #59	; 0x3b
   326c0:	beq	32468 <__flatcc_fb_parse@@Base+0xbe0>
   326c4:	mov	r3, #0
   326c8:	str	r3, [sp]
   326cc:	ldr	r2, [pc, #480]	; 328b4 <__flatcc_fb_parse@@Base+0x102c>
   326d0:	mov	r0, r4
   326d4:	bl	2f580 <__flatcc_fb_print_error@@Base+0x78>
   326d8:	ldr	r5, [r4, #40]	; 0x28
   326dc:	b	31e84 <__flatcc_fb_parse@@Base+0x5fc>
   326e0:	mov	r3, #1
   326e4:	mov	r1, r5
   326e8:	str	r3, [sp]
   326ec:	ldr	r2, [pc, #452]	; 328b8 <__flatcc_fb_parse@@Base+0x1030>
   326f0:	ldr	r3, [pc, #412]	; 32894 <__flatcc_fb_parse@@Base+0x100c>
   326f4:	mov	r0, r4
   326f8:	bl	2f580 <__flatcc_fb_print_error@@Base+0x78>
   326fc:	ldr	r5, [r4, #40]	; 0x28
   32700:	b	31e84 <__flatcc_fb_parse@@Base+0x5fc>
   32704:	mov	fp, r7
   32708:	add	r0, r6, #128	; 0x80
   3270c:	cmp	r1, r0
   32710:	bcc	32f34 <__flatcc_fb_parse@@Base+0x16ac>
   32714:	ldr	r3, [r4, #392]	; 0x188
   32718:	str	r0, [r4, #52]	; 0x34
   3271c:	str	r3, [r6]
   32720:	ldr	r3, [r4, #36]	; 0x24
   32724:	ldr	r2, [r4, #544]	; 0x220
   32728:	mov	r1, #4
   3272c:	cmp	r3, #0
   32730:	strh	r1, [r6, #8]
   32734:	str	r6, [r4, #392]	; 0x188
   32738:	str	r2, [r6, #12]
   3273c:	beq	32760 <__flatcc_fb_parse@@Base+0xed8>
   32740:	mov	r1, #0
   32744:	b	3274c <__flatcc_fb_parse@@Base+0xec4>
   32748:	mov	r3, r2
   3274c:	ldr	r2, [r3]
   32750:	str	r1, [r3]
   32754:	cmp	r2, #0
   32758:	mov	r1, r3
   3275c:	bne	32748 <__flatcc_fb_parse@@Base+0xec0>
   32760:	cmp	sl, #9
   32764:	mov	sl, #0
   32768:	str	r3, [r6, #32]
   3276c:	str	sl, [r4, #36]	; 0x24
   32770:	bne	33198 <__flatcc_fb_parse@@Base+0x1910>
   32774:	mov	r0, r4
   32778:	bl	2c440 <__flatcc_fb_default_error_out@@Base+0xd4>
   3277c:	cmp	fp, sl
   32780:	str	fp, [r6, #4]
   32784:	beq	34a44 <__flatcc_fb_parse@@Base+0x31bc>
   32788:	mov	r0, r4
   3278c:	bl	30f10 <__flatcc_error_report@@Base+0x9e4>
   32790:	ldr	r3, [r4, #40]	; 0x28
   32794:	str	r3, [sp, #16]
   32798:	ldr	r3, [r3, #16]
   3279c:	cmp	r3, #123	; 0x7b
   327a0:	str	r0, [r6, #28]
   327a4:	bne	34920 <__flatcc_fb_parse@@Base+0x3098>
   327a8:	mov	r0, r4
   327ac:	bl	2c440 <__flatcc_fb_default_error_out@@Base+0xd4>
   327b0:	ldr	r5, [r4, #40]	; 0x28
   327b4:	ldr	r3, [r5, #16]
   327b8:	cmp	r3, #9
   327bc:	bne	34a20 <__flatcc_fb_parse@@Base+0x3198>
   327c0:	ldr	r2, [r4, #108]	; 0x6c
   327c4:	cmp	r2, #9
   327c8:	movle	r9, #1
   327cc:	movle	r8, #65536	; 0x10000
   327d0:	bgt	331bc <__flatcc_fb_parse@@Base+0x1934>
   327d4:	ldr	r7, [r4, #52]	; 0x34
   327d8:	ldr	r2, [r4, #44]	; 0x2c
   327dc:	add	r3, r7, #128	; 0x80
   327e0:	cmp	r3, r2
   327e4:	bhi	33cac <__flatcc_fb_parse@@Base+0x2424>
   327e8:	ldr	r2, [r6, #20]
   327ec:	str	r3, [r4, #52]	; 0x34
   327f0:	mov	r3, #5
   327f4:	str	r2, [r7]
   327f8:	strh	r3, [r7, #8]
   327fc:	str	r7, [r6, #20]
   32800:	ldr	r3, [r4, #36]	; 0x24
   32804:	cmp	r3, #0
   32808:	beq	3282c <__flatcc_fb_parse@@Base+0xfa4>
   3280c:	mov	r1, sl
   32810:	b	32818 <__flatcc_fb_parse@@Base+0xf90>
   32814:	mov	r3, r2
   32818:	ldr	r2, [r3]
   3281c:	str	r1, [r3]
   32820:	cmp	r2, #0
   32824:	mov	r1, r3
   32828:	bne	32814 <__flatcc_fb_parse@@Base+0xf8c>
   3282c:	str	r3, [r7, #68]	; 0x44
   32830:	mov	r0, r4
   32834:	add	r1, sp, #28
   32838:	str	sl, [r4, #36]	; 0x24
   3283c:	bl	2f660 <__flatcc_fb_print_error@@Base+0x158>
   32840:	ldr	r2, [sp, #28]
   32844:	mov	r3, #12
   32848:	str	r2, [r7, #16]
   3284c:	ldr	r0, [r2]
   32850:	strh	r3, [r7, #24]
   32854:	cmp	r0, #0
   32858:	beq	3291c <__flatcc_fb_parse@@Base+0x1094>
   3285c:	mov	r2, r0
   32860:	b	3290c <__flatcc_fb_parse@@Base+0x1084>
   32864:			; <UNDEFINED> instruction: 0xfffffc2a
   32868:	strheq	fp, [r5], -r8
   3286c:	andeq	fp, r5, r4, ror r5
   32870:			; <UNDEFINED> instruction: 0xfffffc35
   32874:	andeq	fp, r5, ip, ror r5
   32878:			; <UNDEFINED> instruction: 0x0005b5b4
   3287c:	andeq	fp, r5, r4, ror #11
   32880:	andeq	fp, r5, ip, lsl #24
   32884:			; <UNDEFINED> instruction: 0xfffffc3a
   32888:			; <UNDEFINED> instruction: 0xfffffc36
   3288c:	strdeq	fp, [r5], -r4
   32890:	andeq	fp, r5, r4, asr #23
   32894:			; <UNDEFINED> instruction: 0x0005b1b8
   32898:	andeq	fp, r5, r4, lsl #12
   3289c:	andeq	fp, r5, ip, lsr #22
   328a0:	muleq	r5, ip, r7
   328a4:			; <UNDEFINED> instruction: 0x0005b7bc
   328a8:	strdeq	fp, [r5], -r0
   328ac:	strdeq	fp, [r5], -r4
   328b0:	andeq	fp, r5, ip, ror #23
   328b4:	muleq	r5, r0, r6
   328b8:	muleq	r5, r0, fp
   328bc:	andeq	fp, r5, r8, lsr r7
   328c0:	andeq	fp, r5, r0, asr r7
   328c4:	andeq	sl, r5, r4, lsr #30
   328c8:	andeq	r0, r0, r5, asr r1
   328cc:	andeq	fp, r5, ip, asr #32
   328d0:	andeq	sp, r4, r4, ror r2
   328d4:	andeq	fp, r5, ip, lsr #13
   328d8:	strdeq	fp, [r5], -r8
   328dc:	andeq	fp, r5, r0, lsr sl
   328e0:	muleq	r5, r0, r9
   328e4:	andeq	fp, r5, r8, asr #13
   328e8:	andeq	fp, r5, r8, lsl r7
   328ec:	andeq	fp, r5, r8, ror r7
   328f0:	andeq	fp, r5, r8, ror #12
   328f4:	ldrdeq	fp, [r5], -r0
   328f8:	ldrdeq	fp, [r5], -r4
   328fc:	eoreq	r0, r0, r3, lsl #16
   32900:			; <UNDEFINED> instruction: 0x0005b9b8
   32904:	strdeq	fp, [r5], -r0
   32908:	mov	r2, r3
   3290c:	ldr	r3, [r2]
   32910:	cmp	r3, #0
   32914:	bne	32908 <__flatcc_fb_parse@@Base+0x1080>
   32918:	str	r2, [sp, #28]
   3291c:	ldr	r1, [r4, #40]	; 0x28
   32920:	ldr	r2, [r2, #4]
   32924:	ldr	r3, [r1, #16]
   32928:	str	r2, [r7, #4]
   3292c:	cmp	r3, #58	; 0x3a
   32930:	beq	344bc <__flatcc_fb_parse@@Base+0x2c34>
   32934:	cmp	r3, #61	; 0x3d
   32938:	beq	34328 <__flatcc_fb_parse@@Base+0x2aa0>
   3293c:	cmp	r3, #44	; 0x2c
   32940:	bne	343f4 <__flatcc_fb_parse@@Base+0x2b6c>
   32944:	ldr	fp, [r4, #24]
   32948:	add	r7, r1, #20
   3294c:	cmp	fp, r7
   32950:	str	r7, [r4, #40]	; 0x28
   32954:	beq	34b28 <__flatcc_fb_parse@@Base+0x32a0>
   32958:	ldr	r3, [r1, #36]	; 0x24
   3295c:	cmn	r3, #964	; 0x3c4
   32960:	bne	338f8 <__flatcc_fb_parse@@Base+0x2070>
   32964:	ldr	r0, [r4, #52]	; 0x34
   32968:	ldr	r1, [r4, #44]	; 0x2c
   3296c:	b	329a0 <__flatcc_fb_parse@@Base+0x1118>
   32970:	ldr	r2, [r4, #36]	; 0x24
   32974:	add	r5, r7, #20
   32978:	cmp	fp, r5
   3297c:	str	r0, [r4, #52]	; 0x34
   32980:	stm	r3, {r2, r7}
   32984:	str	r3, [r4, #36]	; 0x24
   32988:	str	r5, [r4, #40]	; 0x28
   3298c:	beq	34b2c <__flatcc_fb_parse@@Base+0x32a4>
   32990:	ldr	r3, [r5, #16]
   32994:	cmn	r3, #964	; 0x3c4
   32998:	bne	338fc <__flatcc_fb_parse@@Base+0x2074>
   3299c:	mov	r7, r5
   329a0:	add	r2, r0, #16
   329a4:	cmp	r2, r1
   329a8:	movls	r3, r0
   329ac:	movls	r0, r2
   329b0:	bls	32970 <__flatcc_fb_parse@@Base+0x10e8>
   329b4:	mov	r1, r9
   329b8:	mov	r0, r8
   329bc:	bl	13fa4 <calloc@plt>
   329c0:	cmp	r0, #0
   329c4:	beq	3484c <__flatcc_fb_parse@@Base+0x2fc4>
   329c8:	ldr	r3, [r4, #48]	; 0x30
   329cc:	add	r1, r0, #65536	; 0x10000
   329d0:	str	r3, [r0]
   329d4:	str	r0, [r4, #48]	; 0x30
   329d8:	add	r3, r0, #16
   329dc:	str	r1, [r4, #44]	; 0x2c
   329e0:	add	r0, r0, #32
   329e4:	b	32970 <__flatcc_fb_parse@@Base+0x10e8>
   329e8:	mov	r0, r4
   329ec:	bl	2c440 <__flatcc_fb_default_error_out@@Base+0xd4>
   329f0:	ldr	r3, [r4, #52]	; 0x34
   329f4:	mov	r2, r3
   329f8:	str	r3, [sp, #16]
   329fc:	ldr	r3, [r4, #44]	; 0x2c
   32a00:	add	r0, r2, #128	; 0x80
   32a04:	cmp	r0, r3
   32a08:	bhi	32f68 <__flatcc_fb_parse@@Base+0x16e0>
   32a0c:	str	r0, [r4, #52]	; 0x34
   32a10:	ldr	r0, [sp, #16]
   32a14:	ldr	r3, [r4, #392]	; 0x188
   32a18:	mov	r1, #0
   32a1c:	str	r3, [r0]
   32a20:	ldr	r2, [r4, #36]	; 0x24
   32a24:	ldr	r3, [r4, #544]	; 0x220
   32a28:	cmp	r2, #0
   32a2c:	strh	r1, [r0, #8]
   32a30:	str	r0, [r4, #392]	; 0x188
   32a34:	str	r3, [r0, #12]
   32a38:	bne	32a44 <__flatcc_fb_parse@@Base+0x11bc>
   32a3c:	b	32a58 <__flatcc_fb_parse@@Base+0x11d0>
   32a40:	mov	r2, r3
   32a44:	ldr	r3, [r2]
   32a48:	str	r1, [r2]
   32a4c:	cmp	r3, #0
   32a50:	mov	r1, r2
   32a54:	bne	32a40 <__flatcc_fb_parse@@Base+0x11b8>
   32a58:	ldr	r6, [r4, #40]	; 0x28
   32a5c:	ldr	r7, [sp, #16]
   32a60:	mov	r5, #0
   32a64:	ldr	r3, [r6, #16]
   32a68:	str	r2, [r7, #32]
   32a6c:	cmp	r3, #9
   32a70:	str	r5, [r4, #36]	; 0x24
   32a74:	bne	33098 <__flatcc_fb_parse@@Base+0x1810>
   32a78:	mov	r0, r4
   32a7c:	bl	2c440 <__flatcc_fb_default_error_out@@Base+0xd4>
   32a80:	str	r6, [r7, #4]
   32a84:	mov	r0, r4
   32a88:	bl	30f10 <__flatcc_error_report@@Base+0x9e4>
   32a8c:	ldr	r1, [r4, #40]	; 0x28
   32a90:	ldr	r3, [r1, #16]
   32a94:	cmp	r3, #123	; 0x7b
   32a98:	str	r0, [r7, #28]
   32a9c:	bne	33178 <__flatcc_fb_parse@@Base+0x18f0>
   32aa0:	mov	r0, r4
   32aa4:	bl	2c440 <__flatcc_fb_default_error_out@@Base+0xd4>
   32aa8:	ldr	r5, [r4, #40]	; 0x28
   32aac:	mov	r7, #1
   32ab0:	mov	r6, #65536	; 0x10000
   32ab4:	ldr	fp, [r5, #16]
   32ab8:	cmp	fp, #125	; 0x7d
   32abc:	beq	347e8 <__flatcc_fb_parse@@Base+0x2f60>
   32ac0:	ldr	r8, [r4, #52]	; 0x34
   32ac4:	ldr	r3, [r4, #44]	; 0x2c
   32ac8:	add	r0, r8, #128	; 0x80
   32acc:	cmp	r0, r3
   32ad0:	bhi	33da4 <__flatcc_fb_parse@@Base+0x251c>
   32ad4:	ldr	r2, [sp, #16]
   32ad8:	ldr	r3, [r2, #20]
   32adc:	str	r0, [r4, #52]	; 0x34
   32ae0:	str	r3, [r8]
   32ae4:	mov	r3, #5
   32ae8:	strh	r3, [r8, #8]
   32aec:	str	r8, [r2, #20]
   32af0:	ldr	r3, [r4, #36]	; 0x24
   32af4:	cmp	r3, #0
   32af8:	beq	32b1c <__flatcc_fb_parse@@Base+0x1294>
   32afc:	mov	r1, #0
   32b00:	b	32b08 <__flatcc_fb_parse@@Base+0x1280>
   32b04:	mov	r3, r2
   32b08:	ldr	r2, [r3]
   32b0c:	str	r1, [r3]
   32b10:	cmp	r2, #0
   32b14:	mov	r1, r3
   32b18:	bne	32b04 <__flatcc_fb_parse@@Base+0x127c>
   32b1c:	str	r3, [r8, #68]	; 0x44
   32b20:	cmp	fp, #9
   32b24:	mov	r3, #0
   32b28:	str	r3, [r4, #36]	; 0x24
   32b2c:	bne	33ed8 <__flatcc_fb_parse@@Base+0x2650>
   32b30:	ldr	r9, [r4, #24]
   32b34:	add	fp, r5, #20
   32b38:	cmp	r9, fp
   32b3c:	str	fp, [r4, #40]	; 0x28
   32b40:	beq	34c2c <__flatcc_fb_parse@@Base+0x33a4>
   32b44:	ldr	lr, [r5, #36]	; 0x24
   32b48:	cmn	lr, #964	; 0x3c4
   32b4c:	bne	339f0 <__flatcc_fb_parse@@Base+0x2168>
   32b50:	ldr	ip, [r4, #44]	; 0x2c
   32b54:	mov	sl, r3
   32b58:	b	32b8c <__flatcc_fb_parse@@Base+0x1304>
   32b5c:	add	r1, fp, #20
   32b60:	cmp	r9, r1
   32b64:	str	r0, [r4, #52]	; 0x34
   32b68:	stm	r3, {sl, fp}
   32b6c:	str	r3, [r4, #36]	; 0x24
   32b70:	str	r1, [r4, #40]	; 0x28
   32b74:	beq	32f08 <__flatcc_fb_parse@@Base+0x1680>
   32b78:	ldr	lr, [r1, #16]
   32b7c:	cmn	lr, #964	; 0x3c4
   32b80:	bne	339f4 <__flatcc_fb_parse@@Base+0x216c>
   32b84:	mov	sl, r3
   32b88:	mov	fp, r1
   32b8c:	add	r2, r0, #16
   32b90:	cmp	r2, ip
   32b94:	movls	r3, r0
   32b98:	movls	r0, r2
   32b9c:	bls	32b5c <__flatcc_fb_parse@@Base+0x12d4>
   32ba0:	mov	r1, r7
   32ba4:	mov	r0, r6
   32ba8:	bl	13fa4 <calloc@plt>
   32bac:	cmp	r0, #0
   32bb0:	beq	3484c <__flatcc_fb_parse@@Base+0x2fc4>
   32bb4:	ldr	r3, [r4, #48]	; 0x30
   32bb8:	add	ip, r0, #65536	; 0x10000
   32bbc:	str	r3, [r0]
   32bc0:	str	r0, [r4, #48]	; 0x30
   32bc4:	add	r3, r0, #16
   32bc8:	str	ip, [r4, #44]	; 0x2c
   32bcc:	add	r0, r0, #32
   32bd0:	b	32b5c <__flatcc_fb_parse@@Base+0x12d4>
   32bd4:	ldr	r8, [r4, #24]
   32bd8:	add	r6, r5, #20
   32bdc:	cmp	r6, r8
   32be0:	str	r6, [r4, #40]	; 0x28
   32be4:	beq	34c20 <__flatcc_fb_parse@@Base+0x3398>
   32be8:	ldr	sl, [r5, #36]	; 0x24
   32bec:	ldr	r3, [r4, #52]	; 0x34
   32bf0:	cmn	sl, #964	; 0x3c4
   32bf4:	bne	34b34 <__flatcc_fb_parse@@Base+0x32ac>
   32bf8:	ldr	r1, [r4, #44]	; 0x2c
   32bfc:	mov	r7, #1
   32c00:	mov	r5, #65536	; 0x10000
   32c04:	b	32c38 <__flatcc_fb_parse@@Base+0x13b0>
   32c08:	ldr	r0, [r4, #36]	; 0x24
   32c0c:	add	r9, r6, #20
   32c10:	cmp	r9, r8
   32c14:	str	r3, [r4, #52]	; 0x34
   32c18:	stm	r2, {r0, r6}
   32c1c:	str	r2, [r4, #36]	; 0x24
   32c20:	str	r9, [r4, #40]	; 0x28
   32c24:	beq	34c24 <__flatcc_fb_parse@@Base+0x339c>
   32c28:	ldr	sl, [r9, #16]
   32c2c:	cmn	sl, #964	; 0x3c4
   32c30:	bne	32d00 <__flatcc_fb_parse@@Base+0x1478>
   32c34:	mov	r6, r9
   32c38:	add	r0, r3, #16
   32c3c:	cmp	r0, r1
   32c40:	movls	r2, r3
   32c44:	movls	r3, r0
   32c48:	bls	32c08 <__flatcc_fb_parse@@Base+0x1380>
   32c4c:	mov	r1, r7
   32c50:	mov	r0, r5
   32c54:	bl	13fa4 <calloc@plt>
   32c58:	subs	r3, r0, #0
   32c5c:	beq	3484c <__flatcc_fb_parse@@Base+0x2fc4>
   32c60:	ldr	r2, [r4, #48]	; 0x30
   32c64:	add	r1, r3, #65536	; 0x10000
   32c68:	str	r2, [r3]
   32c6c:	str	r3, [r4, #48]	; 0x30
   32c70:	add	r2, r3, #16
   32c74:	str	r1, [r4, #44]	; 0x2c
   32c78:	add	r3, r3, #32
   32c7c:	b	32c08 <__flatcc_fb_parse@@Base+0x1380>
   32c80:	mov	r0, r4
   32c84:	bl	2c440 <__flatcc_fb_default_error_out@@Base+0xd4>
   32c88:	ldr	r3, [r4, #400]	; 0x190
   32c8c:	add	r6, r4, #400	; 0x190
   32c90:	cmp	r3, #0
   32c94:	ldr	r5, [r4, #40]	; 0x28
   32c98:	beq	32cb4 <__flatcc_fb_parse@@Base+0x142c>
   32c9c:	mov	r3, #0
   32ca0:	str	r3, [sp]
   32ca4:	ldr	r2, [pc, #-1008]	; 328bc <__flatcc_fb_parse@@Base+0x1034>
   32ca8:	mov	r1, r5
   32cac:	mov	r0, r4
   32cb0:	bl	2f580 <__flatcc_fb_print_error@@Base+0x78>
   32cb4:	mov	r1, r6
   32cb8:	mov	r0, r4
   32cbc:	bl	2f660 <__flatcc_fb_print_error@@Base+0x158>
   32cc0:	ldr	r1, [r4, #40]	; 0x28
   32cc4:	ldr	r2, [r4, #544]	; 0x220
   32cc8:	ldr	r3, [r1, #16]
   32ccc:	str	r2, [r4, #408]	; 0x198
   32cd0:	cmp	r3, #59	; 0x3b
   32cd4:	mov	r3, #0
   32cd8:	str	r3, [r4, #36]	; 0x24
   32cdc:	beq	32468 <__flatcc_fb_parse@@Base+0xbe0>
   32ce0:	str	r3, [sp, #4]
   32ce4:	str	r3, [sp]
   32ce8:	ldr	r2, [pc, #-1072]	; 328c0 <__flatcc_fb_parse@@Base+0x1038>
   32cec:	mov	r3, r5
   32cf0:	mov	r0, r4
   32cf4:	bl	3052c <__flatcc_error_report@@Base>
   32cf8:	ldr	r5, [r4, #40]	; 0x28
   32cfc:	b	31e84 <__flatcc_fb_parse@@Base+0x5fc>
   32d00:	str	r3, [sp, #16]
   32d04:	add	r0, r3, #128	; 0x80
   32d08:	cmp	r0, r1
   32d0c:	bhi	32fa0 <__flatcc_fb_parse@@Base+0x1718>
   32d10:	str	r0, [r4, #52]	; 0x34
   32d14:	ldr	r0, [sp, #16]
   32d18:	ldr	r3, [r4, #392]	; 0x188
   32d1c:	mov	r1, #1
   32d20:	str	r3, [r0]
   32d24:	ldr	r2, [r4, #36]	; 0x24
   32d28:	ldr	r3, [r4, #544]	; 0x220
   32d2c:	cmp	r2, #0
   32d30:	strh	r1, [r0, #8]
   32d34:	str	r0, [r4, #392]	; 0x188
   32d38:	str	r3, [r0, #12]
   32d3c:	beq	32d60 <__flatcc_fb_parse@@Base+0x14d8>
   32d40:	mov	r1, #0
   32d44:	b	32d4c <__flatcc_fb_parse@@Base+0x14c4>
   32d48:	mov	r2, r3
   32d4c:	ldr	r3, [r2]
   32d50:	str	r1, [r2]
   32d54:	cmp	r3, #0
   32d58:	mov	r1, r2
   32d5c:	bne	32d48 <__flatcc_fb_parse@@Base+0x14c0>
   32d60:	ldr	r3, [sp, #16]
   32d64:	mov	r5, #0
   32d68:	cmp	sl, #9
   32d6c:	str	r2, [r3, #32]
   32d70:	str	r5, [r4, #36]	; 0x24
   32d74:	bne	33650 <__flatcc_fb_parse@@Base+0x1dc8>
   32d78:	mov	r0, r4
   32d7c:	bl	2c440 <__flatcc_fb_default_error_out@@Base+0xd4>
   32d80:	cmp	r9, r5
   32d84:	beq	34a94 <__flatcc_fb_parse@@Base+0x320c>
   32d88:	ldr	r6, [sp, #16]
   32d8c:	mov	r0, r4
   32d90:	str	r9, [r6, #4]
   32d94:	bl	30f10 <__flatcc_error_report@@Base+0x9e4>
   32d98:	ldr	r1, [r4, #40]	; 0x28
   32d9c:	ldr	r3, [r1, #16]
   32da0:	cmp	r3, #123	; 0x7b
   32da4:	str	r0, [r6, #28]
   32da8:	bne	34900 <__flatcc_fb_parse@@Base+0x3078>
   32dac:	mov	r0, r4
   32db0:	bl	2c440 <__flatcc_fb_default_error_out@@Base+0xd4>
   32db4:	ldr	r5, [r4, #40]	; 0x28
   32db8:	mov	r7, #1
   32dbc:	mov	r6, #65536	; 0x10000
   32dc0:	ldr	fp, [r5, #16]
   32dc4:	cmp	fp, #125	; 0x7d
   32dc8:	beq	34864 <__flatcc_fb_parse@@Base+0x2fdc>
   32dcc:	ldr	r8, [r4, #52]	; 0x34
   32dd0:	ldr	r3, [r4, #44]	; 0x2c
   32dd4:	add	r0, r8, #128	; 0x80
   32dd8:	cmp	r0, r3
   32ddc:	bhi	33dd8 <__flatcc_fb_parse@@Base+0x2550>
   32de0:	ldr	r2, [sp, #16]
   32de4:	ldr	r3, [r2, #20]
   32de8:	str	r0, [r4, #52]	; 0x34
   32dec:	str	r3, [r8]
   32df0:	mov	r3, #5
   32df4:	strh	r3, [r8, #8]
   32df8:	str	r8, [r2, #20]
   32dfc:	ldr	r3, [r4, #36]	; 0x24
   32e00:	cmp	r3, #0
   32e04:	beq	32e28 <__flatcc_fb_parse@@Base+0x15a0>
   32e08:	mov	r1, #0
   32e0c:	b	32e14 <__flatcc_fb_parse@@Base+0x158c>
   32e10:	mov	r3, r2
   32e14:	ldr	r2, [r3]
   32e18:	str	r1, [r3]
   32e1c:	cmp	r2, #0
   32e20:	mov	r1, r3
   32e24:	bne	32e10 <__flatcc_fb_parse@@Base+0x1588>
   32e28:	str	r3, [r8, #68]	; 0x44
   32e2c:	cmp	fp, #9
   32e30:	mov	r3, #0
   32e34:	str	r3, [r4, #36]	; 0x24
   32e38:	bne	3406c <__flatcc_fb_parse@@Base+0x27e4>
   32e3c:	ldr	r9, [r4, #24]
   32e40:	add	fp, r5, #20
   32e44:	cmp	fp, r9
   32e48:	str	fp, [r4, #40]	; 0x28
   32e4c:	beq	34c2c <__flatcc_fb_parse@@Base+0x33a4>
   32e50:	ldr	lr, [r5, #36]	; 0x24
   32e54:	cmn	lr, #964	; 0x3c4
   32e58:	bne	3393c <__flatcc_fb_parse@@Base+0x20b4>
   32e5c:	ldr	ip, [r4, #44]	; 0x2c
   32e60:	mov	sl, r3
   32e64:	b	32e98 <__flatcc_fb_parse@@Base+0x1610>
   32e68:	add	r1, fp, #20
   32e6c:	cmp	r1, r9
   32e70:	str	r0, [r4, #52]	; 0x34
   32e74:	stm	r3, {sl, fp}
   32e78:	str	r3, [r4, #36]	; 0x24
   32e7c:	str	r1, [r4, #40]	; 0x28
   32e80:	beq	32f08 <__flatcc_fb_parse@@Base+0x1680>
   32e84:	ldr	lr, [r1, #16]
   32e88:	cmn	lr, #964	; 0x3c4
   32e8c:	bne	33940 <__flatcc_fb_parse@@Base+0x20b8>
   32e90:	mov	sl, r3
   32e94:	mov	fp, r1
   32e98:	add	r2, r0, #16
   32e9c:	cmp	r2, ip
   32ea0:	movls	r3, r0
   32ea4:	movls	r0, r2
   32ea8:	bls	32e68 <__flatcc_fb_parse@@Base+0x15e0>
   32eac:	mov	r1, r7
   32eb0:	mov	r0, r6
   32eb4:	bl	13fa4 <calloc@plt>
   32eb8:	cmp	r0, #0
   32ebc:	beq	3484c <__flatcc_fb_parse@@Base+0x2fc4>
   32ec0:	ldr	r3, [r4, #48]	; 0x30
   32ec4:	add	ip, r0, #65536	; 0x10000
   32ec8:	str	r3, [r0]
   32ecc:	str	r0, [r4, #48]	; 0x30
   32ed0:	add	r3, r0, #16
   32ed4:	str	ip, [r4, #44]	; 0x2c
   32ed8:	add	r0, r0, #32
   32edc:	b	32e68 <__flatcc_fb_parse@@Base+0x15e0>
   32ee0:	mov	r2, r5
   32ee4:	b	31c08 <__flatcc_fb_parse@@Base+0x380>
   32ee8:	mov	r0, r4
   32eec:	bl	2c440 <__flatcc_fb_default_error_out@@Base+0xd4>
   32ef0:	mov	r3, #0
   32ef4:	str	r3, [r4, #36]	; 0x24
   32ef8:	ldr	ip, [r4, #44]	; 0x2c
   32efc:	ldr	r3, [r4, #52]	; 0x34
   32f00:	b	31ab8 <__flatcc_fb_parse@@Base+0x230>
   32f04:	mov	fp, r1
   32f08:	str	fp, [r4, #40]	; 0x28
   32f0c:	ldr	r3, [pc, #-1616]	; 328c4 <__flatcc_fb_parse@@Base+0x103c>
   32f10:	ldr	r2, [pc, #-1616]	; 328c8 <__flatcc_fb_parse@@Base+0x1040>
   32f14:	ldr	r1, [pc, #-1616]	; 328cc <__flatcc_fb_parse@@Base+0x1044>
   32f18:	ldr	r0, [pc, #-1616]	; 328d0 <__flatcc_fb_parse@@Base+0x1048>
   32f1c:	bl	14148 <__assert_fail@plt>
   32f20:	mov	r0, r4
   32f24:	bl	2c440 <__flatcc_fb_default_error_out@@Base+0xd4>
   32f28:	ldr	r9, [r4, #40]	; 0x28
   32f2c:	ldr	r1, [r9, #16]
   32f30:	b	3192c <__flatcc_fb_parse@@Base+0xa4>
   32f34:	mov	r1, #1
   32f38:	mov	r0, #65536	; 0x10000
   32f3c:	bl	13fa4 <calloc@plt>
   32f40:	cmp	r0, #0
   32f44:	beq	3484c <__flatcc_fb_parse@@Base+0x2fc4>
   32f48:	ldr	r3, [r4, #48]	; 0x30
   32f4c:	add	r6, r0, #16
   32f50:	str	r3, [r0]
   32f54:	add	r3, r0, #65536	; 0x10000
   32f58:	str	r0, [r4, #48]	; 0x30
   32f5c:	str	r3, [r4, #44]	; 0x2c
   32f60:	add	r0, r0, #144	; 0x90
   32f64:	b	32714 <__flatcc_fb_parse@@Base+0xe8c>
   32f68:	mov	r1, #1
   32f6c:	mov	r0, #65536	; 0x10000
   32f70:	bl	13fa4 <calloc@plt>
   32f74:	cmp	r0, #0
   32f78:	beq	3484c <__flatcc_fb_parse@@Base+0x2fc4>
   32f7c:	ldr	r3, [r4, #48]	; 0x30
   32f80:	add	r2, r0, #16
   32f84:	str	r3, [r0]
   32f88:	add	r3, r0, #65536	; 0x10000
   32f8c:	str	r0, [r4, #48]	; 0x30
   32f90:	str	r2, [sp, #16]
   32f94:	add	r0, r0, #144	; 0x90
   32f98:	str	r3, [r4, #44]	; 0x2c
   32f9c:	b	32a0c <__flatcc_fb_parse@@Base+0x1184>
   32fa0:	mov	r1, #1
   32fa4:	mov	r0, #65536	; 0x10000
   32fa8:	bl	13fa4 <calloc@plt>
   32fac:	cmp	r0, #0
   32fb0:	beq	3484c <__flatcc_fb_parse@@Base+0x2fc4>
   32fb4:	ldr	r3, [r4, #48]	; 0x30
   32fb8:	add	r2, r0, #16
   32fbc:	str	r3, [r0]
   32fc0:	add	r3, r0, #65536	; 0x10000
   32fc4:	str	r0, [r4, #48]	; 0x30
   32fc8:	str	r2, [sp, #16]
   32fcc:	add	r0, r0, #144	; 0x90
   32fd0:	str	r3, [r4, #44]	; 0x2c
   32fd4:	b	32d10 <__flatcc_fb_parse@@Base+0x1488>
   32fd8:	mov	r1, #1
   32fdc:	mov	r0, #65536	; 0x10000
   32fe0:	bl	13fa4 <calloc@plt>
   32fe4:	cmp	r0, #0
   32fe8:	beq	3484c <__flatcc_fb_parse@@Base+0x2fc4>
   32fec:	ldr	r3, [r4, #48]	; 0x30
   32ff0:	add	r8, r0, #16
   32ff4:	str	r3, [r0]
   32ff8:	add	r3, r0, #65536	; 0x10000
   32ffc:	str	r0, [r4, #48]	; 0x30
   33000:	str	r3, [r4, #44]	; 0x2c
   33004:	add	r0, r0, #144	; 0x90
   33008:	b	32488 <__flatcc_fb_parse@@Base+0xc00>
   3300c:	mov	r1, #1
   33010:	mov	r0, #65536	; 0x10000
   33014:	bl	13fa4 <calloc@plt>
   33018:	cmp	r0, #0
   3301c:	beq	3484c <__flatcc_fb_parse@@Base+0x2fc4>
   33020:	ldr	r3, [r4, #48]	; 0x30
   33024:	add	r5, r0, #16
   33028:	str	r3, [r0]
   3302c:	add	r3, r0, #65536	; 0x10000
   33030:	str	r0, [r4, #48]	; 0x30
   33034:	str	r3, [r4, #44]	; 0x2c
   33038:	add	r0, r0, #48	; 0x30
   3303c:	b	3236c <__flatcc_fb_parse@@Base+0xae4>
   33040:	mov	r1, #1
   33044:	mov	r0, #65536	; 0x10000
   33048:	bl	13fa4 <calloc@plt>
   3304c:	cmp	r0, #0
   33050:	beq	3484c <__flatcc_fb_parse@@Base+0x2fc4>
   33054:	ldr	r3, [r4, #48]	; 0x30
   33058:	add	r8, r0, #16
   3305c:	str	r3, [r0]
   33060:	add	r3, r0, #65536	; 0x10000
   33064:	str	r0, [r4, #48]	; 0x30
   33068:	str	r3, [r4, #44]	; 0x2c
   3306c:	add	r0, r0, #144	; 0x90
   33070:	b	321e0 <__flatcc_fb_parse@@Base+0x958>
   33074:	ldr	r2, [r4, #364]	; 0x16c
   33078:	ldr	r3, [r4, #360]	; 0x168
   3307c:	mov	r0, r4
   33080:	str	r2, [sp]
   33084:	ldr	r2, [pc, #-1976]	; 328d4 <__flatcc_fb_parse@@Base+0x104c>
   33088:	bl	2f580 <__flatcc_fb_print_error@@Base+0x78>
   3308c:	ldr	r1, [r4, #40]	; 0x28
   33090:	ldr	r2, [r1, #16]
   33094:	b	32400 <__flatcc_fb_parse@@Base+0xb78>
   33098:	str	r5, [sp]
   3309c:	mov	r3, r5
   330a0:	mov	r1, r6
   330a4:	ldr	r2, [pc, #-1972]	; 328f8 <__flatcc_fb_parse@@Base+0x1070>
   330a8:	mov	r0, r4
   330ac:	bl	2f580 <__flatcc_fb_print_error@@Base+0x78>
   330b0:	ldr	r5, [r4, #40]	; 0x28
   330b4:	ldr	fp, [r5, #16]
   330b8:	mov	r7, #1
   330bc:	mov	r6, #65536	; 0x10000
   330c0:	cmp	fp, #0
   330c4:	beq	31e84 <__flatcc_fb_parse@@Base+0x5fc>
   330c8:	cmp	fp, #125	; 0x7d
   330cc:	beq	33ec0 <__flatcc_fb_parse@@Base+0x2638>
   330d0:	ldr	r9, [r4, #24]
   330d4:	add	r8, r5, #20
   330d8:	cmp	r8, r9
   330dc:	str	r8, [r4, #40]	; 0x28
   330e0:	beq	348a0 <__flatcc_fb_parse@@Base+0x3018>
   330e4:	ldr	r3, [r5, #36]	; 0x24
   330e8:	cmn	r3, #964	; 0x3c4
   330ec:	movne	r5, r8
   330f0:	bne	33934 <__flatcc_fb_parse@@Base+0x20ac>
   330f4:	ldr	r0, [r4, #52]	; 0x34
   330f8:	ldr	r1, [r4, #44]	; 0x2c
   330fc:	b	33130 <__flatcc_fb_parse@@Base+0x18a8>
   33100:	ldr	r2, [r4, #36]	; 0x24
   33104:	add	r5, r8, #20
   33108:	cmp	r9, r5
   3310c:	str	r0, [r4, #52]	; 0x34
   33110:	stm	r3, {r2, r8}
   33114:	str	r3, [r4, #36]	; 0x24
   33118:	str	r5, [r4, #40]	; 0x28
   3311c:	beq	348a4 <__flatcc_fb_parse@@Base+0x301c>
   33120:	ldr	r3, [r5, #16]
   33124:	cmn	r3, #964	; 0x3c4
   33128:	bne	33934 <__flatcc_fb_parse@@Base+0x20ac>
   3312c:	mov	r8, r5
   33130:	add	r2, r0, #16
   33134:	cmp	r2, r1
   33138:	movls	r3, r0
   3313c:	movls	r0, r2
   33140:	bls	33100 <__flatcc_fb_parse@@Base+0x1878>
   33144:	mov	r1, r7
   33148:	mov	r0, r6
   3314c:	bl	13fa4 <calloc@plt>
   33150:	cmp	r0, #0
   33154:	beq	3484c <__flatcc_fb_parse@@Base+0x2fc4>
   33158:	ldr	r3, [r4, #48]	; 0x30
   3315c:	add	r1, r0, #65536	; 0x10000
   33160:	str	r3, [r0]
   33164:	str	r0, [r4, #48]	; 0x30
   33168:	add	r3, r0, #16
   3316c:	str	r1, [r4, #44]	; 0x2c
   33170:	add	r0, r0, #32
   33174:	b	33100 <__flatcc_fb_parse@@Base+0x1878>
   33178:	str	r5, [sp]
   3317c:	mov	r3, r5
   33180:	ldr	r2, [pc, #-2224]	; 328d8 <__flatcc_fb_parse@@Base+0x1050>
   33184:	mov	r0, r4
   33188:	bl	2f580 <__flatcc_fb_print_error@@Base+0x78>
   3318c:	ldr	r5, [r4, #40]	; 0x28
   33190:	ldr	fp, [r5, #16]
   33194:	b	330b8 <__flatcc_fb_parse@@Base+0x1830>
   33198:	mov	r3, sl
   3319c:	str	sl, [sp]
   331a0:	mov	r1, fp
   331a4:	ldr	r2, [pc, #-2256]	; 328dc <__flatcc_fb_parse@@Base+0x1054>
   331a8:	mov	r0, r4
   331ac:	bl	2f580 <__flatcc_fb_print_error@@Base+0x78>
   331b0:	ldr	r5, [r4, #40]	; 0x28
   331b4:	str	sl, [r6, #4]
   331b8:	ldr	r3, [r5, #16]
   331bc:	mov	r7, #1
   331c0:	mov	r6, #65536	; 0x10000
   331c4:	cmp	r3, #0
   331c8:	beq	31e84 <__flatcc_fb_parse@@Base+0x5fc>
   331cc:	cmp	r3, #59	; 0x3b
   331d0:	beq	33ec0 <__flatcc_fb_parse@@Base+0x2638>
   331d4:	cmp	r3, #125	; 0x7d
   331d8:	beq	34a60 <__flatcc_fb_parse@@Base+0x31d8>
   331dc:	ldr	r9, [r4, #24]
   331e0:	add	r8, r5, #20
   331e4:	cmp	r8, r9
   331e8:	str	r8, [r4, #40]	; 0x28
   331ec:	beq	348a0 <__flatcc_fb_parse@@Base+0x3018>
   331f0:	ldr	r3, [r5, #36]	; 0x24
   331f4:	cmn	r3, #964	; 0x3c4
   331f8:	movne	r5, r8
   331fc:	bne	33924 <__flatcc_fb_parse@@Base+0x209c>
   33200:	ldr	r0, [r4, #52]	; 0x34
   33204:	ldr	r1, [r4, #44]	; 0x2c
   33208:	b	3323c <__flatcc_fb_parse@@Base+0x19b4>
   3320c:	ldr	r2, [r4, #36]	; 0x24
   33210:	add	r5, r8, #20
   33214:	cmp	r9, r5
   33218:	str	r0, [r4, #52]	; 0x34
   3321c:	stm	r3, {r2, r8}
   33220:	str	r3, [r4, #36]	; 0x24
   33224:	str	r5, [r4, #40]	; 0x28
   33228:	beq	348a4 <__flatcc_fb_parse@@Base+0x301c>
   3322c:	ldr	r3, [r5, #16]
   33230:	cmn	r3, #964	; 0x3c4
   33234:	bne	33924 <__flatcc_fb_parse@@Base+0x209c>
   33238:	mov	r8, r5
   3323c:	add	r2, r0, #16
   33240:	cmp	r2, r1
   33244:	movls	r3, r0
   33248:	movls	r0, r2
   3324c:	bls	3320c <__flatcc_fb_parse@@Base+0x1984>
   33250:	mov	r1, r7
   33254:	mov	r0, r6
   33258:	bl	13fa4 <calloc@plt>
   3325c:	cmp	r0, #0
   33260:	beq	3484c <__flatcc_fb_parse@@Base+0x2fc4>
   33264:	ldr	r3, [r4, #48]	; 0x30
   33268:	add	r1, r0, #65536	; 0x10000
   3326c:	str	r3, [r0]
   33270:	str	r0, [r4, #48]	; 0x30
   33274:	add	r3, r0, #16
   33278:	str	r1, [r4, #44]	; 0x2c
   3327c:	add	r0, r0, #32
   33280:	b	3320c <__flatcc_fb_parse@@Base+0x1984>
   33284:	str	r5, [sp]
   33288:	mov	r3, r5
   3328c:	mov	r1, r6
   33290:	ldr	r2, [pc, #-2488]	; 328e0 <__flatcc_fb_parse@@Base+0x1058>
   33294:	mov	r0, r4
   33298:	bl	2f580 <__flatcc_fb_print_error@@Base+0x78>
   3329c:	str	r5, [r8, #4]
   332a0:	ldr	r5, [r4, #40]	; 0x28
   332a4:	mov	r7, #1
   332a8:	mov	r6, #65536	; 0x10000
   332ac:	ldr	r3, [r5, #16]
   332b0:	cmp	r3, #0
   332b4:	beq	31e84 <__flatcc_fb_parse@@Base+0x5fc>
   332b8:	cmp	r3, #125	; 0x7d
   332bc:	beq	33ec0 <__flatcc_fb_parse@@Base+0x2638>
   332c0:	ldr	r9, [r4, #24]
   332c4:	add	r8, r5, #20
   332c8:	cmp	r8, r9
   332cc:	str	r8, [r4, #40]	; 0x28
   332d0:	beq	348a0 <__flatcc_fb_parse@@Base+0x3018>
   332d4:	ldr	r3, [r5, #36]	; 0x24
   332d8:	cmn	r3, #964	; 0x3c4
   332dc:	movne	r5, r8
   332e0:	bne	332ac <__flatcc_fb_parse@@Base+0x1a24>
   332e4:	ldr	r0, [r4, #52]	; 0x34
   332e8:	ldr	r1, [r4, #44]	; 0x2c
   332ec:	b	33320 <__flatcc_fb_parse@@Base+0x1a98>
   332f0:	ldr	r2, [r4, #36]	; 0x24
   332f4:	add	r5, r8, #20
   332f8:	cmp	r5, r9
   332fc:	str	r0, [r4, #52]	; 0x34
   33300:	stm	r3, {r2, r8}
   33304:	str	r3, [r4, #36]	; 0x24
   33308:	str	r5, [r4, #40]	; 0x28
   3330c:	beq	348a4 <__flatcc_fb_parse@@Base+0x301c>
   33310:	ldr	r3, [r5, #16]
   33314:	cmn	r3, #964	; 0x3c4
   33318:	bne	332ac <__flatcc_fb_parse@@Base+0x1a24>
   3331c:	mov	r8, r5
   33320:	add	r2, r0, #16
   33324:	cmp	r2, r1
   33328:	movls	r3, r0
   3332c:	movls	r0, r2
   33330:	bls	332f0 <__flatcc_fb_parse@@Base+0x1a68>
   33334:	mov	r1, r7
   33338:	mov	r0, r6
   3333c:	bl	13fa4 <calloc@plt>
   33340:	cmp	r0, #0
   33344:	beq	3484c <__flatcc_fb_parse@@Base+0x2fc4>
   33348:	ldr	r3, [r4, #48]	; 0x30
   3334c:	add	r1, r0, #65536	; 0x10000
   33350:	str	r3, [r0]
   33354:	str	r0, [r4, #48]	; 0x30
   33358:	add	r3, r0, #16
   3335c:	str	r1, [r4, #44]	; 0x2c
   33360:	add	r0, r0, #32
   33364:	b	332f0 <__flatcc_fb_parse@@Base+0x1a68>
   33368:	mov	r3, #0
   3336c:	str	r3, [sp]
   33370:	ldr	r2, [pc, #-2708]	; 328e4 <__flatcc_fb_parse@@Base+0x105c>
   33374:	mov	r0, r4
   33378:	bl	2f580 <__flatcc_fb_print_error@@Base+0x78>
   3337c:	ldr	r5, [r4, #40]	; 0x28
   33380:	mov	r7, #1
   33384:	mov	r6, #65536	; 0x10000
   33388:	ldr	r3, [r5, #16]
   3338c:	cmp	r3, #0
   33390:	beq	31e84 <__flatcc_fb_parse@@Base+0x5fc>
   33394:	cmp	r3, #59	; 0x3b
   33398:	beq	33ec0 <__flatcc_fb_parse@@Base+0x2638>
   3339c:	ldr	r9, [r4, #24]
   333a0:	add	r8, r5, #20
   333a4:	cmp	r9, r8
   333a8:	str	r8, [r4, #40]	; 0x28
   333ac:	beq	348a0 <__flatcc_fb_parse@@Base+0x3018>
   333b0:	ldr	r3, [r5, #36]	; 0x24
   333b4:	cmn	r3, #964	; 0x3c4
   333b8:	bne	34b70 <__flatcc_fb_parse@@Base+0x32e8>
   333bc:	ldr	r3, [r4, #52]	; 0x34
   333c0:	ldr	r0, [r4, #44]	; 0x2c
   333c4:	b	333f8 <__flatcc_fb_parse@@Base+0x1b70>
   333c8:	ldr	r1, [r4, #36]	; 0x24
   333cc:	add	r5, r8, #20
   333d0:	cmp	r5, r9
   333d4:	str	r3, [r4, #52]	; 0x34
   333d8:	stm	r2, {r1, r8}
   333dc:	str	r2, [r4, #36]	; 0x24
   333e0:	str	r5, [r4, #40]	; 0x28
   333e4:	beq	348a4 <__flatcc_fb_parse@@Base+0x301c>
   333e8:	ldr	r2, [r5, #16]
   333ec:	cmn	r2, #964	; 0x3c4
   333f0:	bne	33388 <__flatcc_fb_parse@@Base+0x1b00>
   333f4:	mov	r8, r5
   333f8:	add	r1, r3, #16
   333fc:	cmp	r1, r0
   33400:	movls	r2, r3
   33404:	movls	r3, r1
   33408:	bls	333c8 <__flatcc_fb_parse@@Base+0x1b40>
   3340c:	mov	r1, r7
   33410:	mov	r0, r6
   33414:	bl	13fa4 <calloc@plt>
   33418:	subs	r3, r0, #0
   3341c:	beq	3484c <__flatcc_fb_parse@@Base+0x2fc4>
   33420:	ldr	r2, [r4, #48]	; 0x30
   33424:	add	r0, r3, #65536	; 0x10000
   33428:	str	r2, [r3]
   3342c:	str	r3, [r4, #48]	; 0x30
   33430:	add	r2, r3, #16
   33434:	str	r0, [r4, #44]	; 0x2c
   33438:	add	r3, r3, #32
   3343c:	b	333c8 <__flatcc_fb_parse@@Base+0x1b40>
   33440:	mov	r3, #0
   33444:	str	r3, [sp]
   33448:	ldr	r2, [pc, #-2920]	; 328e8 <__flatcc_fb_parse@@Base+0x1060>
   3344c:	mov	r0, r4
   33450:	bl	2f580 <__flatcc_fb_print_error@@Base+0x78>
   33454:	ldr	r5, [r4, #40]	; 0x28
   33458:	b	31e84 <__flatcc_fb_parse@@Base+0x5fc>
   3345c:	mov	r3, #0
   33460:	mov	r1, r6
   33464:	str	r3, [sp]
   33468:	ldr	r2, [pc, #-2948]	; 328ec <__flatcc_fb_parse@@Base+0x1064>
   3346c:	mov	r0, r4
   33470:	bl	2f580 <__flatcc_fb_print_error@@Base+0x78>
   33474:	b	323c0 <__flatcc_fb_parse@@Base+0xb38>
   33478:	mov	r3, #0
   3347c:	str	r3, [sp]
   33480:	ldr	r2, [pc, #-2968]	; 328f0 <__flatcc_fb_parse@@Base+0x1068>
   33484:	mov	r0, r4
   33488:	bl	2f580 <__flatcc_fb_print_error@@Base+0x78>
   3348c:	ldr	r5, [r4, #40]	; 0x28
   33490:	mov	r7, #1
   33494:	mov	r6, #65536	; 0x10000
   33498:	ldr	r3, [r5, #16]
   3349c:	cmp	r3, #0
   334a0:	beq	31e84 <__flatcc_fb_parse@@Base+0x5fc>
   334a4:	cmp	r3, #59	; 0x3b
   334a8:	beq	33ec0 <__flatcc_fb_parse@@Base+0x2638>
   334ac:	ldr	r9, [r4, #24]
   334b0:	add	r8, r5, #20
   334b4:	cmp	r9, r8
   334b8:	str	r8, [r4, #40]	; 0x28
   334bc:	beq	348a0 <__flatcc_fb_parse@@Base+0x3018>
   334c0:	ldr	r3, [r5, #36]	; 0x24
   334c4:	cmn	r3, #964	; 0x3c4
   334c8:	bne	34b68 <__flatcc_fb_parse@@Base+0x32e0>
   334cc:	ldr	r0, [r4, #52]	; 0x34
   334d0:	ldr	r1, [r4, #44]	; 0x2c
   334d4:	b	33508 <__flatcc_fb_parse@@Base+0x1c80>
   334d8:	ldr	r2, [r4, #36]	; 0x24
   334dc:	add	r5, r8, #20
   334e0:	cmp	r5, r9
   334e4:	str	r0, [r4, #52]	; 0x34
   334e8:	stm	r3, {r2, r8}
   334ec:	str	r3, [r4, #36]	; 0x24
   334f0:	str	r5, [r4, #40]	; 0x28
   334f4:	beq	348a4 <__flatcc_fb_parse@@Base+0x301c>
   334f8:	ldr	r3, [r5, #16]
   334fc:	cmn	r3, #964	; 0x3c4
   33500:	bne	33498 <__flatcc_fb_parse@@Base+0x1c10>
   33504:	mov	r8, r5
   33508:	add	r2, r0, #16
   3350c:	cmp	r2, r1
   33510:	movls	r3, r0
   33514:	movls	r0, r2
   33518:	bls	334d8 <__flatcc_fb_parse@@Base+0x1c50>
   3351c:	mov	r1, r7
   33520:	mov	r0, r6
   33524:	bl	13fa4 <calloc@plt>
   33528:	cmp	r0, #0
   3352c:	beq	3484c <__flatcc_fb_parse@@Base+0x2fc4>
   33530:	ldr	r3, [r4, #48]	; 0x30
   33534:	add	r1, r0, #65536	; 0x10000
   33538:	str	r3, [r0]
   3353c:	str	r0, [r4, #48]	; 0x30
   33540:	add	r3, r0, #16
   33544:	str	r1, [r4, #44]	; 0x2c
   33548:	add	r0, r0, #32
   3354c:	b	334d8 <__flatcc_fb_parse@@Base+0x1c50>
   33550:	mov	r3, #0
   33554:	ldr	r1, [sp, #20]
   33558:	str	r3, [sp]
   3355c:	ldr	r2, [pc, #-3184]	; 328f4 <__flatcc_fb_parse@@Base+0x106c>
   33560:	mov	r0, r4
   33564:	bl	2f580 <__flatcc_fb_print_error@@Base+0x78>
   33568:	ldr	r5, [r4, #40]	; 0x28
   3356c:	b	332a4 <__flatcc_fb_parse@@Base+0x1a1c>
   33570:	str	r5, [sp]
   33574:	mov	r3, r5
   33578:	mov	r1, sl
   3357c:	ldr	r2, [pc, #-3212]	; 328f8 <__flatcc_fb_parse@@Base+0x1070>
   33580:	mov	r0, r4
   33584:	bl	2f580 <__flatcc_fb_print_error@@Base+0x78>
   33588:	ldr	r5, [r4, #40]	; 0x28
   3358c:	ldr	sl, [r5, #16]
   33590:	mov	r7, #1
   33594:	mov	r6, #65536	; 0x10000
   33598:	cmp	sl, #0
   3359c:	beq	31e84 <__flatcc_fb_parse@@Base+0x5fc>
   335a0:	cmp	sl, #125	; 0x7d
   335a4:	beq	33ec0 <__flatcc_fb_parse@@Base+0x2638>
   335a8:	ldr	r9, [r4, #24]
   335ac:	add	r8, r5, #20
   335b0:	cmp	r8, r9
   335b4:	str	r8, [r4, #40]	; 0x28
   335b8:	beq	348a0 <__flatcc_fb_parse@@Base+0x3018>
   335bc:	ldr	r3, [r5, #36]	; 0x24
   335c0:	cmn	r3, #964	; 0x3c4
   335c4:	movne	r5, r8
   335c8:	bne	33aa4 <__flatcc_fb_parse@@Base+0x221c>
   335cc:	ldr	r0, [r4, #52]	; 0x34
   335d0:	ldr	r1, [r4, #44]	; 0x2c
   335d4:	b	33608 <__flatcc_fb_parse@@Base+0x1d80>
   335d8:	ldr	r2, [r4, #36]	; 0x24
   335dc:	add	r5, r8, #20
   335e0:	cmp	r5, r9
   335e4:	str	r0, [r4, #52]	; 0x34
   335e8:	stm	r3, {r2, r8}
   335ec:	str	r3, [r4, #36]	; 0x24
   335f0:	str	r5, [r4, #40]	; 0x28
   335f4:	beq	348a4 <__flatcc_fb_parse@@Base+0x301c>
   335f8:	ldr	r3, [r5, #16]
   335fc:	cmn	r3, #964	; 0x3c4
   33600:	bne	33aa4 <__flatcc_fb_parse@@Base+0x221c>
   33604:	mov	r8, r5
   33608:	add	r2, r0, #16
   3360c:	cmp	r2, r1
   33610:	movls	r3, r0
   33614:	movls	r0, r2
   33618:	bls	335d8 <__flatcc_fb_parse@@Base+0x1d50>
   3361c:	mov	r1, r7
   33620:	mov	r0, r6
   33624:	bl	13fa4 <calloc@plt>
   33628:	cmp	r0, #0
   3362c:	beq	3484c <__flatcc_fb_parse@@Base+0x2fc4>
   33630:	ldr	r3, [r4, #48]	; 0x30
   33634:	add	r1, r0, #65536	; 0x10000
   33638:	str	r3, [r0]
   3363c:	str	r0, [r4, #48]	; 0x30
   33640:	add	r3, r0, #16
   33644:	str	r1, [r4, #44]	; 0x2c
   33648:	add	r0, r0, #32
   3364c:	b	335d8 <__flatcc_fb_parse@@Base+0x1d50>
   33650:	str	r5, [sp]
   33654:	mov	r3, r5
   33658:	mov	r1, r9
   3365c:	ldr	r2, [pc, #-3436]	; 328f8 <__flatcc_fb_parse@@Base+0x1070>
   33660:	mov	r0, r4
   33664:	bl	2f580 <__flatcc_fb_print_error@@Base+0x78>
   33668:	ldr	r5, [r4, #40]	; 0x28
   3366c:	ldr	fp, [r5, #16]
   33670:	mov	r7, #1
   33674:	mov	r6, #65536	; 0x10000
   33678:	cmp	fp, #0
   3367c:	beq	31e84 <__flatcc_fb_parse@@Base+0x5fc>
   33680:	cmp	fp, #125	; 0x7d
   33684:	beq	33ec0 <__flatcc_fb_parse@@Base+0x2638>
   33688:	ldr	r9, [r4, #24]
   3368c:	add	r8, r5, #20
   33690:	cmp	r8, r9
   33694:	str	r8, [r4, #40]	; 0x28
   33698:	beq	348a0 <__flatcc_fb_parse@@Base+0x3018>
   3369c:	ldr	r3, [r5, #36]	; 0x24
   336a0:	cmn	r3, #964	; 0x3c4
   336a4:	movne	r5, r8
   336a8:	bne	3392c <__flatcc_fb_parse@@Base+0x20a4>
   336ac:	ldr	r0, [r4, #52]	; 0x34
   336b0:	ldr	r1, [r4, #44]	; 0x2c
   336b4:	b	336e8 <__flatcc_fb_parse@@Base+0x1e60>
   336b8:	ldr	r2, [r4, #36]	; 0x24
   336bc:	add	r5, r8, #20
   336c0:	cmp	r5, r9
   336c4:	str	r0, [r4, #52]	; 0x34
   336c8:	stm	r3, {r2, r8}
   336cc:	str	r3, [r4, #36]	; 0x24
   336d0:	str	r5, [r4, #40]	; 0x28
   336d4:	beq	348a4 <__flatcc_fb_parse@@Base+0x301c>
   336d8:	ldr	r3, [r5, #16]
   336dc:	cmn	r3, #964	; 0x3c4
   336e0:	bne	3392c <__flatcc_fb_parse@@Base+0x20a4>
   336e4:	mov	r8, r5
   336e8:	add	r2, r0, #16
   336ec:	cmp	r2, r1
   336f0:	movls	r3, r0
   336f4:	movls	r0, r2
   336f8:	bls	336b8 <__flatcc_fb_parse@@Base+0x1e30>
   336fc:	mov	r1, r7
   33700:	mov	r0, r6
   33704:	bl	13fa4 <calloc@plt>
   33708:	cmp	r0, #0
   3370c:	beq	3484c <__flatcc_fb_parse@@Base+0x2fc4>
   33710:	ldr	r3, [r4, #48]	; 0x30
   33714:	add	r1, r0, #65536	; 0x10000
   33718:	str	r3, [r0]
   3371c:	str	r0, [r4, #48]	; 0x30
   33720:	add	r3, r0, #16
   33724:	str	r1, [r4, #44]	; 0x2c
   33728:	add	r0, r0, #32
   3372c:	b	336b8 <__flatcc_fb_parse@@Base+0x1e30>
   33730:	mov	r0, r4
   33734:	bl	2c440 <__flatcc_fb_default_error_out@@Base+0xd4>
   33738:	add	r1, r8, #40	; 0x28
   3373c:	mov	r0, r4
   33740:	bl	30794 <__flatcc_error_report@@Base+0x268>
   33744:	ldrh	r3, [r8, #48]	; 0x30
   33748:	ldr	r1, [r8, #40]	; 0x28
   3374c:	cmp	r3, #8
   33750:	bne	348d0 <__flatcc_fb_parse@@Base+0x3048>
   33754:	ldr	r3, [r1, #16]
   33758:	add	r3, r3, #996	; 0x3e4
   3375c:	cmp	r3, #21
   33760:	bhi	32264 <__flatcc_fb_parse@@Base+0x9dc>
   33764:	mov	r0, #1
   33768:	ldr	r2, [pc, #-3700]	; 328fc <__flatcc_fb_parse@@Base+0x1074>
   3376c:	ands	r3, r2, r0, lsl r3
   33770:	beq	32264 <__flatcc_fb_parse@@Base+0x9dc>
   33774:	str	r5, [sp]
   33778:	mov	r3, r5
   3377c:	ldr	r2, [pc, #-3716]	; 32900 <__flatcc_fb_parse@@Base+0x1078>
   33780:	mov	r0, r4
   33784:	bl	2f580 <__flatcc_fb_print_error@@Base+0x78>
   33788:	b	32264 <__flatcc_fb_parse@@Base+0x9dc>
   3378c:	mov	r5, fp
   33790:	ldr	r2, [r4, #108]	; 0x6c
   33794:	cmp	r2, #9
   33798:	bgt	332a4 <__flatcc_fb_parse@@Base+0x1a1c>
   3379c:	ldr	fp, [r4, #52]	; 0x34
   337a0:	ldr	r2, [r4, #44]	; 0x2c
   337a4:	add	r0, fp, #128	; 0x80
   337a8:	cmp	r0, r2
   337ac:	bhi	33c70 <__flatcc_fb_parse@@Base+0x23e8>
   337b0:	ldr	r2, [r8, #20]
   337b4:	str	r0, [r4, #52]	; 0x34
   337b8:	str	r2, [fp]
   337bc:	mov	r2, #5
   337c0:	strh	r2, [fp, #8]
   337c4:	str	fp, [r8, #20]
   337c8:	ldr	r2, [r4, #36]	; 0x24
   337cc:	cmp	r2, #0
   337d0:	beq	337f4 <__flatcc_fb_parse@@Base+0x1f6c>
   337d4:	mov	ip, #0
   337d8:	b	337e0 <__flatcc_fb_parse@@Base+0x1f58>
   337dc:	mov	r2, r1
   337e0:	ldr	r1, [r2]
   337e4:	str	ip, [r2]
   337e8:	cmp	r1, #0
   337ec:	mov	ip, r2
   337f0:	bne	337dc <__flatcc_fb_parse@@Base+0x1f54>
   337f4:	cmp	r3, #61	; 0x3d
   337f8:	mov	r3, #0
   337fc:	str	r2, [fp, #68]	; 0x44
   33800:	str	r3, [r4, #36]	; 0x24
   33804:	str	sl, [fp, #4]
   33808:	beq	34200 <__flatcc_fb_parse@@Base+0x2978>
   3380c:	ldr	r3, [r5, #16]
   33810:	cmp	r3, #44	; 0x2c
   33814:	bne	342c4 <__flatcc_fb_parse@@Base+0x2a3c>
   33818:	ldr	r9, [r4, #24]
   3381c:	add	fp, r5, #20
   33820:	cmp	fp, r9
   33824:	str	fp, [r4, #40]	; 0x28
   33828:	beq	34c2c <__flatcc_fb_parse@@Base+0x33a4>
   3382c:	ldr	r3, [r5, #36]	; 0x24
   33830:	cmn	r3, #964	; 0x3c4
   33834:	bne	338bc <__flatcc_fb_parse@@Base+0x2034>
   33838:	ldr	r0, [r4, #52]	; 0x34
   3383c:	ldr	r1, [r4, #44]	; 0x2c
   33840:	b	33874 <__flatcc_fb_parse@@Base+0x1fec>
   33844:	ldr	r2, [r4, #36]	; 0x24
   33848:	add	sl, fp, #20
   3384c:	cmp	sl, r9
   33850:	str	r0, [r4, #52]	; 0x34
   33854:	stm	r3, {r2, fp}
   33858:	str	r3, [r4, #36]	; 0x24
   3385c:	str	sl, [r4, #40]	; 0x28
   33860:	beq	32f08 <__flatcc_fb_parse@@Base+0x1680>
   33864:	ldr	r3, [sl, #16]
   33868:	cmn	r3, #964	; 0x3c4
   3386c:	bne	338c0 <__flatcc_fb_parse@@Base+0x2038>
   33870:	mov	fp, sl
   33874:	add	r2, r0, #16
   33878:	cmp	r2, r1
   3387c:	movls	r3, r0
   33880:	movls	r0, r2
   33884:	bls	33844 <__flatcc_fb_parse@@Base+0x1fbc>
   33888:	mov	r1, r7
   3388c:	mov	r0, r6
   33890:	bl	13fa4 <calloc@plt>
   33894:	cmp	r0, #0
   33898:	beq	3484c <__flatcc_fb_parse@@Base+0x2fc4>
   3389c:	ldr	r3, [r4, #48]	; 0x30
   338a0:	add	r1, r0, #65536	; 0x10000
   338a4:	str	r3, [r0]
   338a8:	str	r0, [r4, #48]	; 0x30
   338ac:	add	r3, r0, #16
   338b0:	str	r1, [r4, #44]	; 0x2c
   338b4:	add	r0, r0, #32
   338b8:	b	33844 <__flatcc_fb_parse@@Base+0x1fbc>
   338bc:	mov	sl, fp
   338c0:	cmp	r3, #125	; 0x7d
   338c4:	beq	34a6c <__flatcc_fb_parse@@Base+0x31e4>
   338c8:	cmp	r3, #9
   338cc:	mov	r3, #0
   338d0:	str	r3, [r4, #36]	; 0x24
   338d4:	beq	322a8 <__flatcc_fb_parse@@Base+0xa20>
   338d8:	mov	r3, #0
   338dc:	mov	r1, sl
   338e0:	str	r3, [sp]
   338e4:	ldr	r2, [pc, #-4072]	; 32904 <__flatcc_fb_parse@@Base+0x107c>
   338e8:	mov	r0, r4
   338ec:	bl	2f580 <__flatcc_fb_print_error@@Base+0x78>
   338f0:	ldr	r5, [r4, #40]	; 0x28
   338f4:	b	332a4 <__flatcc_fb_parse@@Base+0x1a1c>
   338f8:	mov	r5, r7
   338fc:	cmp	r3, #125	; 0x7d
   33900:	beq	34a4c <__flatcc_fb_parse@@Base+0x31c4>
   33904:	cmp	r3, #9
   33908:	str	sl, [r4, #36]	; 0x24
   3390c:	bne	34a20 <__flatcc_fb_parse@@Base+0x3198>
   33910:	ldr	r3, [r4, #108]	; 0x6c
   33914:	cmp	r3, #9
   33918:	ble	327d4 <__flatcc_fb_parse@@Base+0xf4c>
   3391c:	ldr	r3, [r5, #16]
   33920:	b	331bc <__flatcc_fb_parse@@Base+0x1934>
   33924:	ldr	r3, [r5, #16]
   33928:	b	331c4 <__flatcc_fb_parse@@Base+0x193c>
   3392c:	ldr	fp, [r5, #16]
   33930:	b	33678 <__flatcc_fb_parse@@Base+0x1df0>
   33934:	ldr	fp, [r5, #16]
   33938:	b	330c0 <__flatcc_fb_parse@@Base+0x1838>
   3393c:	mov	r1, fp
   33940:	cmp	lr, #58	; 0x3a
   33944:	str	r5, [r8, #4]
   33948:	bne	34738 <__flatcc_fb_parse@@Base+0x2eb0>
   3394c:	add	r5, r1, #20
   33950:	cmp	r5, r9
   33954:	mov	sl, r9
   33958:	str	r5, [r4, #40]	; 0x28
   3395c:	beq	34c18 <__flatcc_fb_parse@@Base+0x3390>
   33960:	ldr	r3, [r1, #36]	; 0x24
   33964:	cmn	r3, #964	; 0x3c4
   33968:	bne	33b34 <__flatcc_fb_parse@@Base+0x22ac>
   3396c:	ldr	r0, [r4, #52]	; 0x34
   33970:	ldr	lr, [r4, #44]	; 0x2c
   33974:	b	339a8 <__flatcc_fb_parse@@Base+0x2120>
   33978:	ldr	r1, [r4, #36]	; 0x24
   3397c:	add	r3, r5, #20
   33980:	cmp	r3, sl
   33984:	str	r0, [r4, #52]	; 0x34
   33988:	stm	r2, {r1, r5}
   3398c:	str	r2, [r4, #36]	; 0x24
   33990:	str	r3, [r4, #40]	; 0x28
   33994:	beq	34aa4 <__flatcc_fb_parse@@Base+0x321c>
   33998:	ldr	r2, [r3, #16]
   3399c:	cmn	r2, #964	; 0x3c4
   339a0:	bne	33b34 <__flatcc_fb_parse@@Base+0x22ac>
   339a4:	mov	r5, r3
   339a8:	add	r3, r0, #16
   339ac:	cmp	r3, lr
   339b0:	movls	r2, r0
   339b4:	movls	r0, r3
   339b8:	bls	33978 <__flatcc_fb_parse@@Base+0x20f0>
   339bc:	mov	r1, r7
   339c0:	mov	r0, r6
   339c4:	bl	13fa4 <calloc@plt>
   339c8:	cmp	r0, #0
   339cc:	beq	3484c <__flatcc_fb_parse@@Base+0x2fc4>
   339d0:	ldr	r3, [r4, #48]	; 0x30
   339d4:	add	lr, r0, #65536	; 0x10000
   339d8:	str	r3, [r0]
   339dc:	str	r0, [r4, #48]	; 0x30
   339e0:	add	r2, r0, #16
   339e4:	str	lr, [r4, #44]	; 0x2c
   339e8:	add	r0, r0, #32
   339ec:	b	33978 <__flatcc_fb_parse@@Base+0x20f0>
   339f0:	mov	r1, fp
   339f4:	cmp	lr, #58	; 0x3a
   339f8:	str	r5, [r8, #4]
   339fc:	bne	345ac <__flatcc_fb_parse@@Base+0x2d24>
   33a00:	add	r5, r1, #20
   33a04:	cmp	r9, r5
   33a08:	mov	sl, r9
   33a0c:	str	r5, [r4, #40]	; 0x28
   33a10:	beq	34c18 <__flatcc_fb_parse@@Base+0x3390>
   33a14:	ldr	r3, [r1, #36]	; 0x24
   33a18:	cmn	r3, #964	; 0x3c4
   33a1c:	bne	33aac <__flatcc_fb_parse@@Base+0x2224>
   33a20:	ldr	r0, [r4, #52]	; 0x34
   33a24:	ldr	lr, [r4, #44]	; 0x2c
   33a28:	b	33a5c <__flatcc_fb_parse@@Base+0x21d4>
   33a2c:	ldr	r1, [r4, #36]	; 0x24
   33a30:	add	r3, r5, #20
   33a34:	cmp	sl, r3
   33a38:	str	r0, [r4, #52]	; 0x34
   33a3c:	stm	r2, {r1, r5}
   33a40:	str	r2, [r4, #36]	; 0x24
   33a44:	str	r3, [r4, #40]	; 0x28
   33a48:	beq	34aa4 <__flatcc_fb_parse@@Base+0x321c>
   33a4c:	ldr	r2, [r3, #16]
   33a50:	cmn	r2, #964	; 0x3c4
   33a54:	bne	33aac <__flatcc_fb_parse@@Base+0x2224>
   33a58:	mov	r5, r3
   33a5c:	add	r3, r0, #16
   33a60:	cmp	r3, lr
   33a64:	movls	r2, r0
   33a68:	movls	r0, r3
   33a6c:	bls	33a2c <__flatcc_fb_parse@@Base+0x21a4>
   33a70:	mov	r1, r7
   33a74:	mov	r0, r6
   33a78:	bl	13fa4 <calloc@plt>
   33a7c:	cmp	r0, #0
   33a80:	beq	3484c <__flatcc_fb_parse@@Base+0x2fc4>
   33a84:	ldr	r3, [r4, #48]	; 0x30
   33a88:	add	lr, r0, #65536	; 0x10000
   33a8c:	str	r3, [r0]
   33a90:	str	r0, [r4, #48]	; 0x30
   33a94:	add	r2, r0, #16
   33a98:	str	lr, [r4, #44]	; 0x2c
   33a9c:	add	r0, r0, #32
   33aa0:	b	33a2c <__flatcc_fb_parse@@Base+0x21a4>
   33aa4:	ldr	sl, [r5, #16]
   33aa8:	b	33598 <__flatcc_fb_parse@@Base+0x1d10>
   33aac:	add	r1, r8, #16
   33ab0:	mov	r0, r4
   33ab4:	bl	30794 <__flatcc_error_report@@Base+0x268>
   33ab8:	ldr	r3, [r4, #40]	; 0x28
   33abc:	ldr	r3, [r3, #16]
   33ac0:	cmp	r3, #61	; 0x3d
   33ac4:	bne	33ae4 <__flatcc_fb_parse@@Base+0x225c>
   33ac8:	mov	r0, r4
   33acc:	bl	2c440 <__flatcc_fb_default_error_out@@Base+0xd4>
   33ad0:	ldr	r3, [pc, #4084]	; 34acc <__flatcc_fb_parse@@Base+0x3244>
   33ad4:	mov	r2, #2
   33ad8:	add	r1, r8, #48	; 0x30
   33adc:	mov	r0, r4
   33ae0:	bl	2fca8 <__flatcc_fb_print_error@@Base+0x7a0>
   33ae4:	mov	r0, r4
   33ae8:	bl	30f10 <__flatcc_error_report@@Base+0x9e4>
   33aec:	ldr	r1, [r4, #40]	; 0x28
   33af0:	mov	r3, #0
   33af4:	ldr	r2, [r1, #16]
   33af8:	cmp	r2, #59	; 0x3b
   33afc:	str	r0, [r8, #64]	; 0x40
   33b00:	str	r3, [r4, #36]	; 0x24
   33b04:	beq	33fb8 <__flatcc_fb_parse@@Base+0x2730>
   33b08:	str	r3, [sp, #4]
   33b0c:	str	r3, [sp]
   33b10:	ldr	r2, [pc, #4024]	; 34ad0 <__flatcc_fb_parse@@Base+0x3248>
   33b14:	mov	r0, r4
   33b18:	bl	3052c <__flatcc_error_report@@Base>
   33b1c:	ldr	r5, [r4, #40]	; 0x28
   33b20:	ldr	fp, [r5, #16]
   33b24:	ldr	r3, [r4, #108]	; 0x6c
   33b28:	cmp	r3, #9
   33b2c:	ble	32ab8 <__flatcc_fb_parse@@Base+0x1230>
   33b30:	b	330b8 <__flatcc_fb_parse@@Base+0x1830>
   33b34:	add	r1, r8, #16
   33b38:	mov	r0, r4
   33b3c:	bl	30794 <__flatcc_error_report@@Base+0x268>
   33b40:	ldr	r3, [r4, #40]	; 0x28
   33b44:	ldr	r3, [r3, #16]
   33b48:	cmp	r3, #61	; 0x3d
   33b4c:	bne	33b6c <__flatcc_fb_parse@@Base+0x22e4>
   33b50:	mov	r0, r4
   33b54:	bl	2c440 <__flatcc_fb_default_error_out@@Base+0xd4>
   33b58:	ldr	r3, [pc, #3948]	; 34acc <__flatcc_fb_parse@@Base+0x3244>
   33b5c:	mov	r2, #2
   33b60:	add	r1, r8, #48	; 0x30
   33b64:	mov	r0, r4
   33b68:	bl	2fca8 <__flatcc_fb_print_error@@Base+0x7a0>
   33b6c:	mov	r0, r4
   33b70:	bl	30f10 <__flatcc_error_report@@Base+0x9e4>
   33b74:	ldr	r1, [r4, #40]	; 0x28
   33b78:	mov	r3, #0
   33b7c:	ldr	r2, [r1, #16]
   33b80:	cmp	r2, #59	; 0x3b
   33b84:	str	r0, [r8, #64]	; 0x40
   33b88:	str	r3, [r4, #36]	; 0x24
   33b8c:	beq	3414c <__flatcc_fb_parse@@Base+0x28c4>
   33b90:	str	r3, [sp, #4]
   33b94:	str	r3, [sp]
   33b98:	ldr	r2, [pc, #3888]	; 34ad0 <__flatcc_fb_parse@@Base+0x3248>
   33b9c:	mov	r0, r4
   33ba0:	bl	3052c <__flatcc_error_report@@Base>
   33ba4:	ldr	r5, [r4, #40]	; 0x28
   33ba8:	ldr	fp, [r5, #16]
   33bac:	ldr	r3, [r4, #108]	; 0x6c
   33bb0:	cmp	r3, #9
   33bb4:	ble	32dc4 <__flatcc_fb_parse@@Base+0x153c>
   33bb8:	b	33670 <__flatcc_fb_parse@@Base+0x1de8>
   33bbc:	mov	r1, r7
   33bc0:	cmp	lr, #40	; 0x28
   33bc4:	str	r5, [r9, #4]
   33bc8:	bne	34780 <__flatcc_fb_parse@@Base+0x2ef8>
   33bcc:	add	r7, r1, #20
   33bd0:	cmp	r8, r7
   33bd4:	str	r7, [r4, #40]	; 0x28
   33bd8:	beq	34b28 <__flatcc_fb_parse@@Base+0x32a0>
   33bdc:	ldr	r3, [r1, #36]	; 0x24
   33be0:	cmn	r3, #964	; 0x3c4
   33be4:	bne	33ce0 <__flatcc_fb_parse@@Base+0x2458>
   33be8:	ldr	r0, [r4, #52]	; 0x34
   33bec:	ldr	lr, [r4, #44]	; 0x2c
   33bf0:	mov	r5, #65536	; 0x10000
   33bf4:	b	33c28 <__flatcc_fb_parse@@Base+0x23a0>
   33bf8:	ldr	r1, [r4, #36]	; 0x24
   33bfc:	add	r3, r7, #20
   33c00:	cmp	r8, r3
   33c04:	str	r0, [r4, #52]	; 0x34
   33c08:	stm	r2, {r1, r7}
   33c0c:	str	r2, [r4, #36]	; 0x24
   33c10:	str	r3, [r4, #40]	; 0x28
   33c14:	beq	34b2c <__flatcc_fb_parse@@Base+0x32a4>
   33c18:	ldr	r2, [r3, #16]
   33c1c:	cmn	r2, #964	; 0x3c4
   33c20:	bne	33ce0 <__flatcc_fb_parse@@Base+0x2458>
   33c24:	mov	r7, r3
   33c28:	add	r3, r0, #16
   33c2c:	cmp	r3, lr
   33c30:	movls	r2, r0
   33c34:	movls	r0, r3
   33c38:	bls	33bf8 <__flatcc_fb_parse@@Base+0x2370>
   33c3c:	mov	r1, r6
   33c40:	mov	r0, r5
   33c44:	bl	13fa4 <calloc@plt>
   33c48:	cmp	r0, #0
   33c4c:	beq	3484c <__flatcc_fb_parse@@Base+0x2fc4>
   33c50:	ldr	r3, [r4, #48]	; 0x30
   33c54:	add	lr, r0, #65536	; 0x10000
   33c58:	str	r3, [r0]
   33c5c:	str	r0, [r4, #48]	; 0x30
   33c60:	add	r2, r0, #16
   33c64:	str	lr, [r4, #44]	; 0x2c
   33c68:	add	r0, r0, #32
   33c6c:	b	33bf8 <__flatcc_fb_parse@@Base+0x2370>
   33c70:	mov	r1, r7
   33c74:	mov	r0, r6
   33c78:	str	r3, [sp, #16]
   33c7c:	bl	13fa4 <calloc@plt>
   33c80:	cmp	r0, #0
   33c84:	beq	3484c <__flatcc_fb_parse@@Base+0x2fc4>
   33c88:	ldr	r2, [r4, #48]	; 0x30
   33c8c:	add	fp, r0, #16
   33c90:	str	r2, [r0]
   33c94:	add	r2, r0, #65536	; 0x10000
   33c98:	str	r0, [r4, #48]	; 0x30
   33c9c:	str	r2, [r4, #44]	; 0x2c
   33ca0:	add	r0, r0, #144	; 0x90
   33ca4:	ldr	r3, [sp, #16]
   33ca8:	b	337b0 <__flatcc_fb_parse@@Base+0x1f28>
   33cac:	mov	r1, r9
   33cb0:	mov	r0, r8
   33cb4:	bl	13fa4 <calloc@plt>
   33cb8:	subs	r3, r0, #0
   33cbc:	beq	3484c <__flatcc_fb_parse@@Base+0x2fc4>
   33cc0:	ldr	r2, [r4, #48]	; 0x30
   33cc4:	add	r7, r3, #16
   33cc8:	str	r2, [r3]
   33ccc:	add	r2, r3, #65536	; 0x10000
   33cd0:	str	r3, [r4, #48]	; 0x30
   33cd4:	str	r2, [r4, #44]	; 0x2c
   33cd8:	add	r3, r3, #144	; 0x90
   33cdc:	b	327e8 <__flatcc_fb_parse@@Base+0xf60>
   33ce0:	add	r1, r9, #32
   33ce4:	mov	r0, r4
   33ce8:	bl	30794 <__flatcc_error_report@@Base+0x268>
   33cec:	ldr	r1, [r4, #40]	; 0x28
   33cf0:	ldr	r3, [r1, #16]
   33cf4:	cmp	r3, #41	; 0x29
   33cf8:	bne	348ac <__flatcc_fb_parse@@Base+0x3024>
   33cfc:	ldr	r7, [r4, #24]
   33d00:	add	sl, r1, #20
   33d04:	cmp	sl, r7
   33d08:	str	sl, [r4, #40]	; 0x28
   33d0c:	beq	34b88 <__flatcc_fb_parse@@Base+0x3300>
   33d10:	ldr	r3, [r1, #36]	; 0x24
   33d14:	cmn	r3, #964	; 0x3c4
   33d18:	bne	33e0c <__flatcc_fb_parse@@Base+0x2584>
   33d1c:	ldr	r0, [r4, #52]	; 0x34
   33d20:	ldr	ip, [r4, #44]	; 0x2c
   33d24:	mov	r5, #65536	; 0x10000
   33d28:	b	33d5c <__flatcc_fb_parse@@Base+0x24d4>
   33d2c:	ldr	r2, [r4, #36]	; 0x24
   33d30:	add	r1, sl, #20
   33d34:	cmp	r7, r1
   33d38:	str	r0, [r4, #52]	; 0x34
   33d3c:	stm	r3, {r2, sl}
   33d40:	str	r3, [r4, #36]	; 0x24
   33d44:	str	r1, [r4, #40]	; 0x28
   33d48:	beq	34b8c <__flatcc_fb_parse@@Base+0x3304>
   33d4c:	ldr	r3, [r1, #16]
   33d50:	cmn	r3, #964	; 0x3c4
   33d54:	bne	33e10 <__flatcc_fb_parse@@Base+0x2588>
   33d58:	mov	sl, r1
   33d5c:	add	r2, r0, #16
   33d60:	cmp	r2, ip
   33d64:	movls	r3, r0
   33d68:	movls	r0, r2
   33d6c:	bls	33d2c <__flatcc_fb_parse@@Base+0x24a4>
   33d70:	mov	r1, r6
   33d74:	mov	r0, r5
   33d78:	bl	13fa4 <calloc@plt>
   33d7c:	cmp	r0, #0
   33d80:	beq	3484c <__flatcc_fb_parse@@Base+0x2fc4>
   33d84:	ldr	r3, [r4, #48]	; 0x30
   33d88:	add	ip, r0, #65536	; 0x10000
   33d8c:	str	r3, [r0]
   33d90:	str	r0, [r4, #48]	; 0x30
   33d94:	add	r3, r0, #16
   33d98:	str	ip, [r4, #44]	; 0x2c
   33d9c:	add	r0, r0, #32
   33da0:	b	33d2c <__flatcc_fb_parse@@Base+0x24a4>
   33da4:	mov	r1, r7
   33da8:	mov	r0, r6
   33dac:	bl	13fa4 <calloc@plt>
   33db0:	cmp	r0, #0
   33db4:	beq	3484c <__flatcc_fb_parse@@Base+0x2fc4>
   33db8:	ldr	r3, [r4, #48]	; 0x30
   33dbc:	add	r8, r0, #16
   33dc0:	str	r3, [r0]
   33dc4:	add	r3, r0, #65536	; 0x10000
   33dc8:	str	r0, [r4, #48]	; 0x30
   33dcc:	str	r3, [r4, #44]	; 0x2c
   33dd0:	add	r0, r0, #144	; 0x90
   33dd4:	b	32ad4 <__flatcc_fb_parse@@Base+0x124c>
   33dd8:	mov	r1, r7
   33ddc:	mov	r0, r6
   33de0:	bl	13fa4 <calloc@plt>
   33de4:	cmp	r0, #0
   33de8:	beq	3484c <__flatcc_fb_parse@@Base+0x2fc4>
   33dec:	ldr	r3, [r4, #48]	; 0x30
   33df0:	add	r8, r0, #16
   33df4:	str	r3, [r0]
   33df8:	add	r3, r0, #65536	; 0x10000
   33dfc:	str	r0, [r4, #48]	; 0x30
   33e00:	str	r3, [r4, #44]	; 0x2c
   33e04:	add	r0, r0, #144	; 0x90
   33e08:	b	32de0 <__flatcc_fb_parse@@Base+0x1558>
   33e0c:	mov	r1, sl
   33e10:	cmp	r3, #58	; 0x3a
   33e14:	bne	348e8 <__flatcc_fb_parse@@Base+0x3060>
   33e18:	mov	r0, r4
   33e1c:	bl	2c440 <__flatcc_fb_default_error_out@@Base+0xd4>
   33e20:	add	r1, r9, #16
   33e24:	mov	r0, r4
   33e28:	bl	30794 <__flatcc_error_report@@Base+0x268>
   33e2c:	ldr	r5, [r4, #40]	; 0x28
   33e30:	ldr	r3, [r5, #16]
   33e34:	cmp	r3, #61	; 0x3d
   33e38:	beq	345c4 <__flatcc_fb_parse@@Base+0x2d3c>
   33e3c:	mov	r0, r4
   33e40:	bl	30f10 <__flatcc_error_report@@Base+0x9e4>
   33e44:	ldr	r1, [r4, #40]	; 0x28
   33e48:	mov	r3, #0
   33e4c:	ldr	r2, [r1, #16]
   33e50:	cmp	r2, #59	; 0x3b
   33e54:	str	r0, [r9, #64]	; 0x40
   33e58:	str	r3, [r4, #36]	; 0x24
   33e5c:	beq	34b44 <__flatcc_fb_parse@@Base+0x32bc>
   33e60:	str	r3, [sp, #4]
   33e64:	str	r3, [sp]
   33e68:	ldr	r2, [pc, #3172]	; 34ad4 <__flatcc_fb_parse@@Base+0x324c>
   33e6c:	mov	r0, r4
   33e70:	bl	3052c <__flatcc_error_report@@Base>
   33e74:	ldr	r5, [r4, #40]	; 0x28
   33e78:	ldr	sl, [r5, #16]
   33e7c:	ldr	r3, [r4, #108]	; 0x6c
   33e80:	cmp	r3, #9
   33e84:	ble	3252c <__flatcc_fb_parse@@Base+0xca4>
   33e88:	b	33590 <__flatcc_fb_parse@@Base+0x1d08>
   33e8c:	mov	r1, r6
   33e90:	mov	r0, #65536	; 0x10000
   33e94:	bl	13fa4 <calloc@plt>
   33e98:	cmp	r0, #0
   33e9c:	beq	3484c <__flatcc_fb_parse@@Base+0x2fc4>
   33ea0:	ldr	r3, [r4, #48]	; 0x30
   33ea4:	add	r9, r0, #16
   33ea8:	str	r3, [r0]
   33eac:	add	r3, r0, #65536	; 0x10000
   33eb0:	str	r0, [r4, #48]	; 0x30
   33eb4:	str	r3, [r4, #44]	; 0x2c
   33eb8:	add	r0, r0, #144	; 0x90
   33ebc:	b	3254c <__flatcc_fb_parse@@Base+0xcc4>
   33ec0:	mov	r0, r4
   33ec4:	bl	2c440 <__flatcc_fb_default_error_out@@Base+0xd4>
   33ec8:	mov	r3, #0
   33ecc:	str	r3, [r4, #36]	; 0x24
   33ed0:	ldr	r5, [r4, #40]	; 0x28
   33ed4:	b	31e84 <__flatcc_fb_parse@@Base+0x5fc>
   33ed8:	mov	r3, #0
   33edc:	str	r3, [sp]
   33ee0:	mov	r1, r5
   33ee4:	ldr	r2, [pc, #3052]	; 34ad8 <__flatcc_fb_parse@@Base+0x3250>
   33ee8:	mov	r0, r4
   33eec:	bl	2f580 <__flatcc_fb_print_error@@Base+0x78>
   33ef0:	ldr	r5, [r4, #40]	; 0x28
   33ef4:	ldr	fp, [r5, #16]
   33ef8:	cmp	fp, #0
   33efc:	beq	347c4 <__flatcc_fb_parse@@Base+0x2f3c>
   33f00:	cmp	fp, #59	; 0x3b
   33f04:	beq	34830 <__flatcc_fb_parse@@Base+0x2fa8>
   33f08:	cmp	fp, #125	; 0x7d
   33f0c:	beq	347d4 <__flatcc_fb_parse@@Base+0x2f4c>
   33f10:	ldr	r9, [r4, #24]
   33f14:	add	r8, r5, #20
   33f18:	cmp	r9, r8
   33f1c:	str	r8, [r4, #40]	; 0x28
   33f20:	beq	348a0 <__flatcc_fb_parse@@Base+0x3018>
   33f24:	ldr	r3, [r5, #36]	; 0x24
   33f28:	cmn	r3, #964	; 0x3c4
   33f2c:	movne	r5, r8
   33f30:	bne	33ef4 <__flatcc_fb_parse@@Base+0x266c>
   33f34:	ldr	r0, [r4, #52]	; 0x34
   33f38:	ldr	r1, [r4, #44]	; 0x2c
   33f3c:	b	33f70 <__flatcc_fb_parse@@Base+0x26e8>
   33f40:	ldr	r2, [r4, #36]	; 0x24
   33f44:	add	r5, r8, #20
   33f48:	cmp	r9, r5
   33f4c:	str	r0, [r4, #52]	; 0x34
   33f50:	stm	r3, {r2, r8}
   33f54:	str	r3, [r4, #36]	; 0x24
   33f58:	str	r5, [r4, #40]	; 0x28
   33f5c:	beq	348a4 <__flatcc_fb_parse@@Base+0x301c>
   33f60:	ldr	r3, [r5, #16]
   33f64:	cmn	r3, #964	; 0x3c4
   33f68:	bne	33ef4 <__flatcc_fb_parse@@Base+0x266c>
   33f6c:	mov	r8, r5
   33f70:	add	r2, r0, #16
   33f74:	cmp	r2, r1
   33f78:	movls	r3, r0
   33f7c:	movls	r0, r2
   33f80:	bls	33f40 <__flatcc_fb_parse@@Base+0x26b8>
   33f84:	mov	r1, r7
   33f88:	mov	r0, r6
   33f8c:	bl	13fa4 <calloc@plt>
   33f90:	cmp	r0, #0
   33f94:	beq	3484c <__flatcc_fb_parse@@Base+0x2fc4>
   33f98:	ldr	r3, [r4, #48]	; 0x30
   33f9c:	add	r1, r0, #65536	; 0x10000
   33fa0:	str	r3, [r0]
   33fa4:	str	r0, [r4, #48]	; 0x30
   33fa8:	add	r3, r0, #16
   33fac:	str	r1, [r4, #44]	; 0x2c
   33fb0:	add	r0, r0, #32
   33fb4:	b	33f40 <__flatcc_fb_parse@@Base+0x26b8>
   33fb8:	ldr	r9, [r4, #24]
   33fbc:	add	r8, r1, #20
   33fc0:	cmp	r8, r9
   33fc4:	str	r8, [r4, #40]	; 0x28
   33fc8:	beq	32f04 <__flatcc_fb_parse@@Base+0x167c>
   33fcc:	ldr	fp, [r1, #36]	; 0x24
   33fd0:	cmn	fp, #964	; 0x3c4
   33fd4:	bne	34b78 <__flatcc_fb_parse@@Base+0x32f0>
   33fd8:	mov	sl, r3
   33fdc:	ldr	r0, [r4, #44]	; 0x2c
   33fe0:	ldr	r3, [r4, #52]	; 0x34
   33fe4:	b	3401c <__flatcc_fb_parse@@Base+0x2794>
   33fe8:	add	r5, r8, #20
   33fec:	cmp	r5, r9
   33ff0:	str	r3, [r4, #52]	; 0x34
   33ff4:	str	r8, [r2, #4]
   33ff8:	str	sl, [r2]
   33ffc:	str	r2, [r4, #36]	; 0x24
   34000:	str	r5, [r4, #40]	; 0x28
   34004:	beq	34b80 <__flatcc_fb_parse@@Base+0x32f8>
   34008:	ldr	r1, [r5, #16]
   3400c:	cmn	r1, #964	; 0x3c4
   34010:	bne	34064 <__flatcc_fb_parse@@Base+0x27dc>
   34014:	mov	sl, r2
   34018:	mov	r8, r5
   3401c:	add	r1, r3, #16
   34020:	cmp	r1, r0
   34024:	movls	r2, r3
   34028:	movls	r3, r1
   3402c:	bls	33fe8 <__flatcc_fb_parse@@Base+0x2760>
   34030:	mov	r1, r7
   34034:	mov	r0, r6
   34038:	bl	13fa4 <calloc@plt>
   3403c:	subs	r3, r0, #0
   34040:	beq	3484c <__flatcc_fb_parse@@Base+0x2fc4>
   34044:	ldr	r2, [r4, #48]	; 0x30
   34048:	add	r0, r3, #65536	; 0x10000
   3404c:	str	r2, [r3]
   34050:	str	r3, [r4, #48]	; 0x30
   34054:	add	r2, r3, #16
   34058:	str	r0, [r4, #44]	; 0x2c
   3405c:	add	r3, r3, #32
   34060:	b	33fe8 <__flatcc_fb_parse@@Base+0x2760>
   34064:	ldr	fp, [r8, #36]	; 0x24
   34068:	b	33b24 <__flatcc_fb_parse@@Base+0x229c>
   3406c:	mov	r3, #0
   34070:	str	r3, [sp]
   34074:	mov	r1, r5
   34078:	ldr	r2, [pc, #2648]	; 34ad8 <__flatcc_fb_parse@@Base+0x3250>
   3407c:	mov	r0, r4
   34080:	bl	2f580 <__flatcc_fb_print_error@@Base+0x78>
   34084:	ldr	r5, [r4, #40]	; 0x28
   34088:	ldr	fp, [r5, #16]
   3408c:	cmp	fp, #0
   34090:	beq	347b4 <__flatcc_fb_parse@@Base+0x2f2c>
   34094:	cmp	fp, #59	; 0x3b
   34098:	beq	34798 <__flatcc_fb_parse@@Base+0x2f10>
   3409c:	cmp	fp, #125	; 0x7d
   340a0:	beq	34850 <__flatcc_fb_parse@@Base+0x2fc8>
   340a4:	ldr	r9, [r4, #24]
   340a8:	add	r8, r5, #20
   340ac:	cmp	r8, r9
   340b0:	str	r8, [r4, #40]	; 0x28
   340b4:	beq	348c4 <__flatcc_fb_parse@@Base+0x303c>
   340b8:	ldr	r3, [r5, #36]	; 0x24
   340bc:	cmn	r3, #964	; 0x3c4
   340c0:	movne	r5, r8
   340c4:	bne	34088 <__flatcc_fb_parse@@Base+0x2800>
   340c8:	ldr	r0, [r4, #52]	; 0x34
   340cc:	ldr	r1, [r4, #44]	; 0x2c
   340d0:	b	34104 <__flatcc_fb_parse@@Base+0x287c>
   340d4:	ldr	r2, [r4, #36]	; 0x24
   340d8:	add	r5, r8, #20
   340dc:	cmp	r5, r9
   340e0:	str	r0, [r4, #52]	; 0x34
   340e4:	stm	r3, {r2, r8}
   340e8:	str	r3, [r4, #36]	; 0x24
   340ec:	str	r5, [r4, #40]	; 0x28
   340f0:	beq	34a80 <__flatcc_fb_parse@@Base+0x31f8>
   340f4:	ldr	r3, [r5, #16]
   340f8:	cmn	r3, #964	; 0x3c4
   340fc:	bne	34088 <__flatcc_fb_parse@@Base+0x2800>
   34100:	mov	r8, r5
   34104:	add	r2, r0, #16
   34108:	cmp	r2, r1
   3410c:	movls	r3, r0
   34110:	movls	r0, r2
   34114:	bls	340d4 <__flatcc_fb_parse@@Base+0x284c>
   34118:	mov	r1, r7
   3411c:	mov	r0, r6
   34120:	bl	13fa4 <calloc@plt>
   34124:	cmp	r0, #0
   34128:	beq	3484c <__flatcc_fb_parse@@Base+0x2fc4>
   3412c:	ldr	r3, [r4, #48]	; 0x30
   34130:	add	r1, r0, #65536	; 0x10000
   34134:	str	r3, [r0]
   34138:	str	r0, [r4, #48]	; 0x30
   3413c:	add	r3, r0, #16
   34140:	str	r1, [r4, #44]	; 0x2c
   34144:	add	r0, r0, #32
   34148:	b	340d4 <__flatcc_fb_parse@@Base+0x284c>
   3414c:	ldr	r9, [r4, #24]
   34150:	add	r8, r1, #20
   34154:	cmp	r9, r8
   34158:	str	r8, [r4, #40]	; 0x28
   3415c:	beq	32f04 <__flatcc_fb_parse@@Base+0x167c>
   34160:	ldr	fp, [r1, #36]	; 0x24
   34164:	cmn	fp, #964	; 0x3c4
   34168:	bne	34b60 <__flatcc_fb_parse@@Base+0x32d8>
   3416c:	mov	sl, r3
   34170:	ldr	r0, [r4, #44]	; 0x2c
   34174:	ldr	r3, [r4, #52]	; 0x34
   34178:	b	341b0 <__flatcc_fb_parse@@Base+0x2928>
   3417c:	add	r5, r8, #20
   34180:	cmp	r5, r9
   34184:	str	r3, [r4, #52]	; 0x34
   34188:	str	r8, [r2, #4]
   3418c:	str	sl, [r2]
   34190:	str	r2, [r4, #36]	; 0x24
   34194:	str	r5, [r4, #40]	; 0x28
   34198:	beq	34b80 <__flatcc_fb_parse@@Base+0x32f8>
   3419c:	ldr	r1, [r5, #16]
   341a0:	cmn	r1, #964	; 0x3c4
   341a4:	bne	341f8 <__flatcc_fb_parse@@Base+0x2970>
   341a8:	mov	sl, r2
   341ac:	mov	r8, r5
   341b0:	add	r1, r3, #16
   341b4:	cmp	r1, r0
   341b8:	movls	r2, r3
   341bc:	movls	r3, r1
   341c0:	bls	3417c <__flatcc_fb_parse@@Base+0x28f4>
   341c4:	mov	r1, r7
   341c8:	mov	r0, r6
   341cc:	bl	13fa4 <calloc@plt>
   341d0:	subs	r3, r0, #0
   341d4:	beq	3484c <__flatcc_fb_parse@@Base+0x2fc4>
   341d8:	ldr	r2, [r4, #48]	; 0x30
   341dc:	add	r0, r3, #65536	; 0x10000
   341e0:	str	r2, [r3]
   341e4:	str	r3, [r4, #48]	; 0x30
   341e8:	add	r2, r3, #16
   341ec:	str	r0, [r4, #44]	; 0x2c
   341f0:	add	r3, r3, #32
   341f4:	b	3417c <__flatcc_fb_parse@@Base+0x28f4>
   341f8:	ldr	fp, [r8, #36]	; 0x24
   341fc:	b	33bac <__flatcc_fb_parse@@Base+0x2324>
   34200:	add	sl, r5, #20
   34204:	cmp	r9, sl
   34208:	str	sl, [r4, #40]	; 0x28
   3420c:	beq	34c2c <__flatcc_fb_parse@@Base+0x33a4>
   34210:	ldr	r3, [r5, #36]	; 0x24
   34214:	cmn	r3, #964	; 0x3c4
   34218:	bne	342a0 <__flatcc_fb_parse@@Base+0x2a18>
   3421c:	ldr	r1, [r4, #44]	; 0x2c
   34220:	mov	r5, #0
   34224:	b	34258 <__flatcc_fb_parse@@Base+0x29d0>
   34228:	add	r3, sl, #20
   3422c:	cmp	r9, r3
   34230:	str	r0, [r4, #52]	; 0x34
   34234:	stm	r2, {r5, sl}
   34238:	str	r2, [r4, #36]	; 0x24
   3423c:	str	r3, [r4, #40]	; 0x28
   34240:	beq	34c3c <__flatcc_fb_parse@@Base+0x33b4>
   34244:	ldr	ip, [r3, #16]
   34248:	cmn	ip, #964	; 0x3c4
   3424c:	bne	342a0 <__flatcc_fb_parse@@Base+0x2a18>
   34250:	mov	r5, r2
   34254:	mov	sl, r3
   34258:	add	r3, r0, #16
   3425c:	cmp	r3, r1
   34260:	movls	r2, r0
   34264:	movls	r0, r3
   34268:	bls	34228 <__flatcc_fb_parse@@Base+0x29a0>
   3426c:	mov	r1, r7
   34270:	mov	r0, r6
   34274:	bl	13fa4 <calloc@plt>
   34278:	cmp	r0, #0
   3427c:	beq	3484c <__flatcc_fb_parse@@Base+0x2fc4>
   34280:	ldr	r3, [r4, #48]	; 0x30
   34284:	add	r1, r0, #65536	; 0x10000
   34288:	str	r3, [r0]
   3428c:	str	r0, [r4, #48]	; 0x30
   34290:	add	r2, r0, #16
   34294:	str	r1, [r4, #44]	; 0x2c
   34298:	add	r0, r0, #32
   3429c:	b	34228 <__flatcc_fb_parse@@Base+0x29a0>
   342a0:	ldr	r3, [pc, #2100]	; 34adc <__flatcc_fb_parse@@Base+0x3254>
   342a4:	add	r1, fp, #48	; 0x30
   342a8:	mov	r2, #0
   342ac:	mov	r0, r4
   342b0:	bl	2fca8 <__flatcc_fb_print_error@@Base+0x7a0>
   342b4:	ldr	r5, [r4, #40]	; 0x28
   342b8:	ldr	r3, [r5, #16]
   342bc:	cmp	r3, #44	; 0x2c
   342c0:	beq	33818 <__flatcc_fb_parse@@Base+0x1f90>
   342c4:	cmp	r3, #125	; 0x7d
   342c8:	mov	r3, #0
   342cc:	str	r3, [r4, #36]	; 0x24
   342d0:	beq	34a74 <__flatcc_fb_parse@@Base+0x31ec>
   342d4:	str	r3, [sp, #4]
   342d8:	str	r3, [sp]
   342dc:	mov	r1, r5
   342e0:	ldr	r3, [sp, #20]
   342e4:	ldr	r2, [pc, #2036]	; 34ae0 <__flatcc_fb_parse@@Base+0x3258>
   342e8:	mov	r0, r4
   342ec:	bl	3052c <__flatcc_error_report@@Base>
   342f0:	ldr	r3, [r8, #20]
   342f4:	cmp	r3, #0
   342f8:	beq	3431c <__flatcc_fb_parse@@Base+0x2a94>
   342fc:	mov	r1, #0
   34300:	b	34308 <__flatcc_fb_parse@@Base+0x2a80>
   34304:	mov	r3, r2
   34308:	ldr	r2, [r3]
   3430c:	str	r1, [r3]
   34310:	cmp	r2, #0
   34314:	mov	r1, r3
   34318:	bne	34304 <__flatcc_fb_parse@@Base+0x2a7c>
   3431c:	str	r3, [r8, #20]
   34320:	ldr	r5, [r4, #40]	; 0x28
   34324:	b	31e84 <__flatcc_fb_parse@@Base+0x5fc>
   34328:	ldr	r5, [r4, #24]
   3432c:	add	fp, r1, #20
   34330:	cmp	r5, fp
   34334:	str	fp, [r4, #40]	; 0x28
   34338:	beq	32f04 <__flatcc_fb_parse@@Base+0x167c>
   3433c:	ldr	r3, [r1, #36]	; 0x24
   34340:	cmn	r3, #964	; 0x3c4
   34344:	bne	343d0 <__flatcc_fb_parse@@Base+0x2b48>
   34348:	ldr	r3, [r4, #52]	; 0x34
   3434c:	ldr	r0, [r4, #44]	; 0x2c
   34350:	b	34388 <__flatcc_fb_parse@@Base+0x2b00>
   34354:	ldr	ip, [r4, #36]	; 0x24
   34358:	add	r2, fp, #20
   3435c:	cmp	r5, r2
   34360:	str	r3, [r4, #52]	; 0x34
   34364:	str	fp, [r1, #4]
   34368:	str	ip, [r1]
   3436c:	str	r1, [r4, #36]	; 0x24
   34370:	str	r2, [r4, #40]	; 0x28
   34374:	beq	32f08 <__flatcc_fb_parse@@Base+0x1680>
   34378:	ldr	r1, [r2, #16]
   3437c:	cmn	r1, #964	; 0x3c4
   34380:	bne	343d0 <__flatcc_fb_parse@@Base+0x2b48>
   34384:	mov	fp, r2
   34388:	add	r2, r3, #16
   3438c:	cmp	r2, r0
   34390:	movls	r1, r3
   34394:	movls	r3, r2
   34398:	bls	34354 <__flatcc_fb_parse@@Base+0x2acc>
   3439c:	mov	r1, r9
   343a0:	mov	r0, r8
   343a4:	bl	13fa4 <calloc@plt>
   343a8:	subs	r3, r0, #0
   343ac:	beq	3484c <__flatcc_fb_parse@@Base+0x2fc4>
   343b0:	ldr	r2, [r4, #48]	; 0x30
   343b4:	add	r0, r3, #65536	; 0x10000
   343b8:	str	r2, [r3]
   343bc:	str	r3, [r4, #48]	; 0x30
   343c0:	add	r1, r3, #16
   343c4:	str	r0, [r4, #44]	; 0x2c
   343c8:	add	r3, r3, #32
   343cc:	b	34354 <__flatcc_fb_parse@@Base+0x2acc>
   343d0:	add	r1, r7, #48	; 0x30
   343d4:	ldr	r3, [pc, #1792]	; 34adc <__flatcc_fb_parse@@Base+0x3254>
   343d8:	mov	r2, sl
   343dc:	mov	r0, r4
   343e0:	bl	2fca8 <__flatcc_fb_print_error@@Base+0x7a0>
   343e4:	ldr	r1, [r4, #40]	; 0x28
   343e8:	ldr	r3, [r1, #16]
   343ec:	cmp	r3, #44	; 0x2c
   343f0:	beq	32944 <__flatcc_fb_parse@@Base+0x10bc>
   343f4:	cmp	r3, #125	; 0x7d
   343f8:	mov	r3, #0
   343fc:	str	r3, [r4, #36]	; 0x24
   34400:	beq	34a54 <__flatcc_fb_parse@@Base+0x31cc>
   34404:	str	r3, [sp, #4]
   34408:	str	r3, [sp]
   3440c:	ldr	r2, [pc, #1744]	; 34ae4 <__flatcc_fb_parse@@Base+0x325c>
   34410:	ldr	r3, [sp, #16]
   34414:	mov	r0, r4
   34418:	bl	3052c <__flatcc_error_report@@Base>
   3441c:	ldr	r3, [r6, #20]
   34420:	cmp	r3, #0
   34424:	beq	34448 <__flatcc_fb_parse@@Base+0x2bc0>
   34428:	mov	r1, #0
   3442c:	b	34434 <__flatcc_fb_parse@@Base+0x2bac>
   34430:	mov	r3, r2
   34434:	ldr	r2, [r3]
   34438:	str	r1, [r3]
   3443c:	cmp	r2, #0
   34440:	mov	r1, r3
   34444:	bne	34430 <__flatcc_fb_parse@@Base+0x2ba8>
   34448:	ldr	ip, [r4, #52]	; 0x34
   3444c:	ldr	r2, [r4, #44]	; 0x2c
   34450:	add	r0, ip, #128	; 0x80
   34454:	cmp	r0, r2
   34458:	str	r3, [r6, #20]
   3445c:	bhi	34984 <__flatcc_fb_parse@@Base+0x30fc>
   34460:	mov	r2, #5
   34464:	str	r0, [r4, #52]	; 0x34
   34468:	str	r3, [ip]
   3446c:	strh	r2, [ip, #8]
   34470:	str	ip, [r6, #20]
   34474:	ldr	r3, [r4, #36]	; 0x24
   34478:	cmp	r3, #0
   3447c:	beq	344a0 <__flatcc_fb_parse@@Base+0x2c18>
   34480:	mov	r1, #0
   34484:	b	3448c <__flatcc_fb_parse@@Base+0x2c04>
   34488:	mov	r3, r2
   3448c:	ldr	r2, [r3]
   34490:	str	r1, [r3]
   34494:	cmp	r2, #0
   34498:	mov	r1, r3
   3449c:	bne	34488 <__flatcc_fb_parse@@Base+0x2c00>
   344a0:	str	r3, [ip, #68]	; 0x44
   344a4:	mov	r2, #0
   344a8:	add	r3, r4, #68	; 0x44
   344ac:	str	r2, [r4, #36]	; 0x24
   344b0:	ldr	r5, [r4, #40]	; 0x28
   344b4:	str	r3, [ip, #4]
   344b8:	b	31e84 <__flatcc_fb_parse@@Base+0x5fc>
   344bc:	ldr	r2, [r4, #24]
   344c0:	add	fp, r1, #20
   344c4:	cmp	fp, r2
   344c8:	str	fp, [r4, #40]	; 0x28
   344cc:	beq	32f04 <__flatcc_fb_parse@@Base+0x167c>
   344d0:	ldr	r3, [r1, #36]	; 0x24
   344d4:	cmn	r3, #964	; 0x3c4
   344d8:	bne	34574 <__flatcc_fb_parse@@Base+0x2cec>
   344dc:	str	r5, [sp, #20]
   344e0:	ldr	r3, [r4, #52]	; 0x34
   344e4:	ldr	lr, [r4, #44]	; 0x2c
   344e8:	mov	r5, r2
   344ec:	b	34520 <__flatcc_fb_parse@@Base+0x2c98>
   344f0:	ldr	r0, [r4, #36]	; 0x24
   344f4:	add	r1, fp, #20
   344f8:	cmp	r5, r1
   344fc:	str	r3, [r4, #52]	; 0x34
   34500:	stm	ip, {r0, fp}
   34504:	str	ip, [r4, #36]	; 0x24
   34508:	str	r1, [r4, #40]	; 0x28
   3450c:	beq	32f08 <__flatcc_fb_parse@@Base+0x1680>
   34510:	ldr	r0, [r1, #16]
   34514:	cmn	r0, #964	; 0x3c4
   34518:	bne	34568 <__flatcc_fb_parse@@Base+0x2ce0>
   3451c:	mov	fp, r1
   34520:	add	r1, r3, #16
   34524:	cmp	r1, lr
   34528:	movls	ip, r3
   3452c:	movls	r3, r1
   34530:	bls	344f0 <__flatcc_fb_parse@@Base+0x2c68>
   34534:	mov	r1, r9
   34538:	mov	r0, r8
   3453c:	bl	13fa4 <calloc@plt>
   34540:	subs	r3, r0, #0
   34544:	beq	3484c <__flatcc_fb_parse@@Base+0x2fc4>
   34548:	ldr	r1, [r4, #48]	; 0x30
   3454c:	add	lr, r3, #65536	; 0x10000
   34550:	str	r1, [r3]
   34554:	str	r3, [r4, #48]	; 0x30
   34558:	add	ip, r3, #16
   3455c:	str	lr, [r4, #44]	; 0x2c
   34560:	add	r3, r3, #32
   34564:	b	344f0 <__flatcc_fb_parse@@Base+0x2c68>
   34568:	ldr	r3, [r7, #16]
   3456c:	ldr	r5, [sp, #20]
   34570:	ldr	r0, [r3]
   34574:	cmp	r0, #0
   34578:	beq	34594 <__flatcc_fb_parse@@Base+0x2d0c>
   3457c:	str	sl, [sp]
   34580:	mov	r1, r5
   34584:	mov	r3, #0
   34588:	ldr	r2, [pc, #1368]	; 34ae8 <__flatcc_fb_parse@@Base+0x3260>
   3458c:	mov	r0, r4
   34590:	bl	2f580 <__flatcc_fb_print_error@@Base+0x78>
   34594:	add	r1, r7, #16
   34598:	mov	r0, r4
   3459c:	bl	30794 <__flatcc_error_report@@Base+0x268>
   345a0:	ldr	r1, [r4, #40]	; 0x28
   345a4:	ldr	r3, [r1, #16]
   345a8:	b	32934 <__flatcc_fb_parse@@Base+0x10ac>
   345ac:	mov	r3, #0
   345b0:	str	r3, [sp]
   345b4:	ldr	r2, [pc, #1328]	; 34aec <__flatcc_fb_parse@@Base+0x3264>
   345b8:	mov	r0, r4
   345bc:	bl	2f580 <__flatcc_fb_print_error@@Base+0x78>
   345c0:	b	33ef0 <__flatcc_fb_parse@@Base+0x2668>
   345c4:	mov	r0, r4
   345c8:	bl	2c440 <__flatcc_fb_default_error_out@@Base+0xd4>
   345cc:	mov	r3, #0
   345d0:	mov	r1, r5
   345d4:	str	r3, [sp]
   345d8:	ldr	r2, [pc, #1296]	; 34af0 <__flatcc_fb_parse@@Base+0x3268>
   345dc:	mov	r0, r4
   345e0:	bl	2f580 <__flatcc_fb_print_error@@Base+0x78>
   345e4:	ldr	r5, [r4, #40]	; 0x28
   345e8:	mov	r7, #65536	; 0x10000
   345ec:	ldr	sl, [r5, #16]
   345f0:	cmp	sl, #0
   345f4:	beq	34728 <__flatcc_fb_parse@@Base+0x2ea0>
   345f8:	cmp	sl, #59	; 0x3b
   345fc:	beq	34700 <__flatcc_fb_parse@@Base+0x2e78>
   34600:	cmp	sl, #125	; 0x7d
   34604:	beq	346b0 <__flatcc_fb_parse@@Base+0x2e28>
   34608:	ldr	r8, [r4, #24]
   3460c:	add	r9, r5, #20
   34610:	cmp	r9, r8
   34614:	str	r9, [r4, #40]	; 0x28
   34618:	beq	348c4 <__flatcc_fb_parse@@Base+0x303c>
   3461c:	ldr	r3, [r5, #36]	; 0x24
   34620:	cmn	r3, #964	; 0x3c4
   34624:	movne	r5, r9
   34628:	bne	345ec <__flatcc_fb_parse@@Base+0x2d64>
   3462c:	ldr	r0, [r4, #52]	; 0x34
   34630:	ldr	r1, [r4, #44]	; 0x2c
   34634:	b	34668 <__flatcc_fb_parse@@Base+0x2de0>
   34638:	ldr	r2, [r4, #36]	; 0x24
   3463c:	add	r5, r9, #20
   34640:	cmp	r5, r8
   34644:	str	r0, [r4, #52]	; 0x34
   34648:	stm	r3, {r2, r9}
   3464c:	str	r3, [r4, #36]	; 0x24
   34650:	str	r5, [r4, #40]	; 0x28
   34654:	beq	348c8 <__flatcc_fb_parse@@Base+0x3040>
   34658:	ldr	r3, [r5, #16]
   3465c:	cmn	r3, #964	; 0x3c4
   34660:	bne	345ec <__flatcc_fb_parse@@Base+0x2d64>
   34664:	mov	r9, r5
   34668:	add	r2, r0, #16
   3466c:	cmp	r2, r1
   34670:	movls	r3, r0
   34674:	movls	r0, r2
   34678:	bls	34638 <__flatcc_fb_parse@@Base+0x2db0>
   3467c:	mov	r1, r6
   34680:	mov	r0, r7
   34684:	bl	13fa4 <calloc@plt>
   34688:	cmp	r0, #0
   3468c:	beq	3484c <__flatcc_fb_parse@@Base+0x2fc4>
   34690:	ldr	r3, [r4, #48]	; 0x30
   34694:	add	r1, r0, #65536	; 0x10000
   34698:	str	r3, [r0]
   3469c:	str	r0, [r4, #48]	; 0x30
   346a0:	add	r3, r0, #16
   346a4:	str	r1, [r4, #44]	; 0x2c
   346a8:	add	r0, r0, #32
   346ac:	b	34638 <__flatcc_fb_parse@@Base+0x2db0>
   346b0:	ldr	r2, [r4, #108]	; 0x6c
   346b4:	mov	r3, #0
   346b8:	cmp	r2, #9
   346bc:	ldr	r8, [sp, #16]
   346c0:	str	r3, [r4, #36]	; 0x24
   346c4:	bgt	33590 <__flatcc_fb_parse@@Base+0x1d08>
   346c8:	mov	r0, r4
   346cc:	bl	2c440 <__flatcc_fb_default_error_out@@Base+0xd4>
   346d0:	ldr	r3, [r8, #20]
   346d4:	cmp	r3, #0
   346d8:	beq	3431c <__flatcc_fb_parse@@Base+0x2a94>
   346dc:	mov	r1, #0
   346e0:	b	346e8 <__flatcc_fb_parse@@Base+0x2e60>
   346e4:	mov	r3, r2
   346e8:	ldr	r2, [r3]
   346ec:	str	r1, [r3]
   346f0:	cmp	r2, #0
   346f4:	mov	r1, r3
   346f8:	bne	346e4 <__flatcc_fb_parse@@Base+0x2e5c>
   346fc:	b	3431c <__flatcc_fb_parse@@Base+0x2a94>
   34700:	mov	r0, r4
   34704:	bl	2c440 <__flatcc_fb_default_error_out@@Base+0xd4>
   34708:	mov	r3, #0
   3470c:	ldr	r5, [r4, #40]	; 0x28
   34710:	str	r3, [r4, #36]	; 0x24
   34714:	ldr	r3, [r4, #108]	; 0x6c
   34718:	ldr	sl, [r5, #16]
   3471c:	cmp	r3, #9
   34720:	ble	3252c <__flatcc_fb_parse@@Base+0xca4>
   34724:	b	33590 <__flatcc_fb_parse@@Base+0x1d08>
   34728:	ldr	r3, [r4, #108]	; 0x6c
   3472c:	cmp	r3, #9
   34730:	ble	32538 <__flatcc_fb_parse@@Base+0xcb0>
   34734:	b	33590 <__flatcc_fb_parse@@Base+0x1d08>
   34738:	mov	r3, #0
   3473c:	str	r3, [sp]
   34740:	ldr	r2, [pc, #932]	; 34aec <__flatcc_fb_parse@@Base+0x3264>
   34744:	mov	r0, r4
   34748:	bl	2f580 <__flatcc_fb_print_error@@Base+0x78>
   3474c:	b	34084 <__flatcc_fb_parse@@Base+0x27fc>
   34750:	str	fp, [sp]
   34754:	mov	r3, fp
   34758:	mov	r1, r5
   3475c:	ldr	r2, [pc, #912]	; 34af4 <__flatcc_fb_parse@@Base+0x326c>
   34760:	mov	r0, r4
   34764:	bl	2f580 <__flatcc_fb_print_error@@Base+0x78>
   34768:	b	345e4 <__flatcc_fb_parse@@Base+0x2d5c>
   3476c:	mov	r0, r4
   34770:	bl	2c440 <__flatcc_fb_default_error_out@@Base+0xd4>
   34774:	str	r6, [r4, #544]	; 0x220
   34778:	ldr	r5, [r4, #40]	; 0x28
   3477c:	b	31e84 <__flatcc_fb_parse@@Base+0x5fc>
   34780:	mov	r3, #0
   34784:	str	r3, [sp]
   34788:	ldr	r2, [pc, #872]	; 34af8 <__flatcc_fb_parse@@Base+0x3270>
   3478c:	mov	r0, r4
   34790:	bl	2f580 <__flatcc_fb_print_error@@Base+0x78>
   34794:	b	345e4 <__flatcc_fb_parse@@Base+0x2d5c>
   34798:	mov	r0, r4
   3479c:	bl	2c440 <__flatcc_fb_default_error_out@@Base+0xd4>
   347a0:	ldr	r5, [r4, #40]	; 0x28
   347a4:	mov	r3, #0
   347a8:	str	r3, [r4, #36]	; 0x24
   347ac:	ldr	fp, [r5, #16]
   347b0:	b	33bac <__flatcc_fb_parse@@Base+0x2324>
   347b4:	ldr	r3, [r4, #108]	; 0x6c
   347b8:	cmp	r3, #9
   347bc:	ble	32dcc <__flatcc_fb_parse@@Base+0x1544>
   347c0:	b	33670 <__flatcc_fb_parse@@Base+0x1de8>
   347c4:	ldr	r3, [r4, #108]	; 0x6c
   347c8:	cmp	r3, #9
   347cc:	ble	32ac0 <__flatcc_fb_parse@@Base+0x1238>
   347d0:	b	330b8 <__flatcc_fb_parse@@Base+0x1830>
   347d4:	ldr	r2, [r4, #108]	; 0x6c
   347d8:	mov	r3, #0
   347dc:	cmp	r2, #9
   347e0:	str	r3, [r4, #36]	; 0x24
   347e4:	bgt	330b8 <__flatcc_fb_parse@@Base+0x1830>
   347e8:	mov	r0, r4
   347ec:	bl	2c440 <__flatcc_fb_default_error_out@@Base+0xd4>
   347f0:	ldr	r3, [sp, #16]
   347f4:	ldr	r3, [r3, #20]
   347f8:	cmp	r3, #0
   347fc:	beq	34820 <__flatcc_fb_parse@@Base+0x2f98>
   34800:	mov	r1, #0
   34804:	b	3480c <__flatcc_fb_parse@@Base+0x2f84>
   34808:	mov	r3, r2
   3480c:	ldr	r2, [r3]
   34810:	str	r1, [r3]
   34814:	cmp	r2, #0
   34818:	mov	r1, r3
   3481c:	bne	34808 <__flatcc_fb_parse@@Base+0x2f80>
   34820:	ldr	r2, [sp, #16]
   34824:	ldr	r5, [r4, #40]	; 0x28
   34828:	str	r3, [r2, #20]
   3482c:	b	31e84 <__flatcc_fb_parse@@Base+0x5fc>
   34830:	mov	r0, r4
   34834:	bl	2c440 <__flatcc_fb_default_error_out@@Base+0xd4>
   34838:	ldr	r5, [r4, #40]	; 0x28
   3483c:	mov	r3, #0
   34840:	str	r3, [r4, #36]	; 0x24
   34844:	ldr	fp, [r5, #16]
   34848:	b	33b24 <__flatcc_fb_parse@@Base+0x229c>
   3484c:	bl	141a8 <__assert_fail@plt+0x60>
   34850:	ldr	r2, [r4, #108]	; 0x6c
   34854:	mov	r3, #0
   34858:	cmp	r2, #9
   3485c:	str	r3, [r4, #36]	; 0x24
   34860:	bgt	33670 <__flatcc_fb_parse@@Base+0x1de8>
   34864:	mov	r0, r4
   34868:	bl	2c440 <__flatcc_fb_default_error_out@@Base+0xd4>
   3486c:	ldr	r3, [sp, #16]
   34870:	ldr	r3, [r3, #20]
   34874:	cmp	r3, #0
   34878:	beq	34820 <__flatcc_fb_parse@@Base+0x2f98>
   3487c:	mov	r1, #0
   34880:	b	34888 <__flatcc_fb_parse@@Base+0x3000>
   34884:	mov	r3, r2
   34888:	ldr	r2, [r3]
   3488c:	str	r1, [r3]
   34890:	cmp	r2, #0
   34894:	mov	r1, r3
   34898:	bne	34884 <__flatcc_fb_parse@@Base+0x2ffc>
   3489c:	b	34820 <__flatcc_fb_parse@@Base+0x2f98>
   348a0:	mov	r8, r5
   348a4:	str	r8, [r4, #40]	; 0x28
   348a8:	b	32f0c <__flatcc_fb_parse@@Base+0x1684>
   348ac:	mov	r3, #0
   348b0:	str	r3, [sp]
   348b4:	ldr	r2, [pc, #576]	; 34afc <__flatcc_fb_parse@@Base+0x3274>
   348b8:	mov	r0, r4
   348bc:	bl	2f580 <__flatcc_fb_print_error@@Base+0x78>
   348c0:	b	345e4 <__flatcc_fb_parse@@Base+0x2d5c>
   348c4:	mov	r9, r5
   348c8:	str	r9, [r4, #40]	; 0x28
   348cc:	b	32f0c <__flatcc_fb_parse@@Base+0x1684>
   348d0:	mov	r3, r5
   348d4:	str	r5, [sp]
   348d8:	ldr	r2, [pc, #544]	; 34b00 <__flatcc_fb_parse@@Base+0x3278>
   348dc:	mov	r0, r4
   348e0:	bl	2f580 <__flatcc_fb_print_error@@Base+0x78>
   348e4:	b	32264 <__flatcc_fb_parse@@Base+0x9dc>
   348e8:	mov	r3, #0
   348ec:	str	r3, [sp]
   348f0:	ldr	r2, [pc, #524]	; 34b04 <__flatcc_fb_parse@@Base+0x327c>
   348f4:	mov	r0, r4
   348f8:	bl	2f580 <__flatcc_fb_print_error@@Base+0x78>
   348fc:	b	345e4 <__flatcc_fb_parse@@Base+0x2d5c>
   34900:	str	r5, [sp]
   34904:	mov	r3, r5
   34908:	ldr	r2, [pc, #504]	; 34b08 <__flatcc_fb_parse@@Base+0x3280>
   3490c:	mov	r0, r4
   34910:	bl	2f580 <__flatcc_fb_print_error@@Base+0x78>
   34914:	ldr	r5, [r4, #40]	; 0x28
   34918:	ldr	fp, [r5, #16]
   3491c:	b	33670 <__flatcc_fb_parse@@Base+0x1de8>
   34920:	mov	r3, sl
   34924:	str	sl, [sp]
   34928:	ldr	r1, [sp, #16]
   3492c:	ldr	r2, [pc, #472]	; 34b0c <__flatcc_fb_parse@@Base+0x3284>
   34930:	mov	r0, r4
   34934:	bl	2f580 <__flatcc_fb_print_error@@Base+0x78>
   34938:	ldr	r5, [r4, #40]	; 0x28
   3493c:	ldr	r3, [r5, #16]
   34940:	b	331bc <__flatcc_fb_parse@@Base+0x1934>
   34944:	str	r5, [sp]
   34948:	mov	r3, r5
   3494c:	ldr	r2, [pc, #436]	; 34b08 <__flatcc_fb_parse@@Base+0x3280>
   34950:	mov	r0, r4
   34954:	bl	2f580 <__flatcc_fb_print_error@@Base+0x78>
   34958:	ldr	r5, [r4, #40]	; 0x28
   3495c:	ldr	sl, [r5, #16]
   34960:	b	33590 <__flatcc_fb_parse@@Base+0x1d08>
   34964:	mov	r1, r3
   34968:	str	r0, [sp]
   3496c:	mov	r3, r0
   34970:	ldr	r2, [pc, #408]	; 34b10 <__flatcc_fb_parse@@Base+0x3288>
   34974:	mov	r0, r4
   34978:	bl	2f580 <__flatcc_fb_print_error@@Base+0x78>
   3497c:	ldr	r0, [r4, #108]	; 0x6c
   34980:	b	31d70 <__flatcc_fb_parse@@Base+0x4e8>
   34984:	mov	r1, #1
   34988:	mov	r0, #65536	; 0x10000
   3498c:	bl	13fa4 <calloc@plt>
   34990:	cmp	r0, #0
   34994:	beq	3484c <__flatcc_fb_parse@@Base+0x2fc4>
   34998:	ldr	r3, [r4, #48]	; 0x30
   3499c:	add	r2, r0, #65536	; 0x10000
   349a0:	str	r0, [r4, #48]	; 0x30
   349a4:	str	r3, [r0]
   349a8:	add	ip, r0, #16
   349ac:	ldr	r3, [r6, #20]
   349b0:	add	r0, r0, #144	; 0x90
   349b4:	str	r2, [r4, #44]	; 0x2c
   349b8:	b	34460 <__flatcc_fb_parse@@Base+0x2bd8>
   349bc:	add	r1, sp, #24
   349c0:	mov	r0, r4
   349c4:	bl	2f660 <__flatcc_fb_print_error@@Base+0x158>
   349c8:	ldr	r1, [r4, #40]	; 0x28
   349cc:	mov	r3, #0
   349d0:	str	r3, [r4, #36]	; 0x24
   349d4:	ldr	r2, [r1, #16]
   349d8:	cmp	r2, #59	; 0x3b
   349dc:	beq	34bd8 <__flatcc_fb_parse@@Base+0x3350>
   349e0:	str	r3, [sp, #4]
   349e4:	str	r3, [sp]
   349e8:	ldr	r2, [pc, #292]	; 34b14 <__flatcc_fb_parse@@Base+0x328c>
   349ec:	mov	r3, r5
   349f0:	mov	r0, r4
   349f4:	bl	3052c <__flatcc_error_report@@Base>
   349f8:	ldr	r6, [sp, #24]
   349fc:	mov	r2, #0
   34a00:	mov	r1, r6
   34a04:	ldr	r0, [r4, #412]	; 0x19c
   34a08:	bl	2a880 <fb_scope_table_find@@Base>
   34a0c:	cmp	r0, #0
   34a10:	beq	34b94 <__flatcc_fb_parse@@Base+0x330c>
   34a14:	str	r0, [r4, #544]	; 0x220
   34a18:	ldr	r5, [r4, #40]	; 0x28
   34a1c:	b	31e84 <__flatcc_fb_parse@@Base+0x5fc>
   34a20:	mov	r3, #0
   34a24:	mov	r1, r5
   34a28:	str	r3, [sp]
   34a2c:	ldr	r2, [pc, #228]	; 34b18 <__flatcc_fb_parse@@Base+0x3290>
   34a30:	mov	r0, r4
   34a34:	bl	2f580 <__flatcc_fb_print_error@@Base+0x78>
   34a38:	ldr	r5, [r4, #40]	; 0x28
   34a3c:	ldr	r3, [r5, #16]
   34a40:	b	331bc <__flatcc_fb_parse@@Base+0x1934>
   34a44:	ldr	r5, [r4, #40]	; 0x28
   34a48:	b	3391c <__flatcc_fb_parse@@Base+0x2094>
   34a4c:	mov	r3, #0
   34a50:	str	r3, [r4, #36]	; 0x24
   34a54:	mov	r0, r4
   34a58:	bl	2c440 <__flatcc_fb_default_error_out@@Base+0xd4>
   34a5c:	b	3441c <__flatcc_fb_parse@@Base+0x2b94>
   34a60:	mov	r3, #0
   34a64:	str	r3, [r4, #36]	; 0x24
   34a68:	b	31e84 <__flatcc_fb_parse@@Base+0x5fc>
   34a6c:	mov	r3, #0
   34a70:	str	r3, [r4, #36]	; 0x24
   34a74:	mov	r0, r4
   34a78:	bl	2c440 <__flatcc_fb_default_error_out@@Base+0xd4>
   34a7c:	b	342f0 <__flatcc_fb_parse@@Base+0x2a68>
   34a80:	mov	r9, r8
   34a84:	b	348c8 <__flatcc_fb_parse@@Base+0x3040>
   34a88:	ldr	r5, [r4, #40]	; 0x28
   34a8c:	ldr	sl, [r5, #16]
   34a90:	b	33590 <__flatcc_fb_parse@@Base+0x1d08>
   34a94:	ldr	r5, [r4, #40]	; 0x28
   34a98:	ldr	fp, [r5, #16]
   34a9c:	b	33670 <__flatcc_fb_parse@@Base+0x1de8>
   34aa0:	mov	r5, r2
   34aa4:	str	r5, [r4, #40]	; 0x28
   34aa8:	b	32f0c <__flatcc_fb_parse@@Base+0x1684>
   34aac:	ldr	r2, [r4, #380]	; 0x17c
   34ab0:	ldr	r3, [r4, #376]	; 0x178
   34ab4:	ldr	r1, [r4, #40]	; 0x28
   34ab8:	mov	r0, r4
   34abc:	str	r2, [sp]
   34ac0:	ldr	r2, [pc, #84]	; 34b1c <__flatcc_fb_parse@@Base+0x3294>
   34ac4:	bl	2f580 <__flatcc_fb_print_error@@Base+0x78>
   34ac8:	b	32690 <__flatcc_fb_parse@@Base+0xe08>
   34acc:	andeq	fp, r5, ip, asr r8
   34ad0:	andeq	fp, r5, r0, lsl #17
   34ad4:	andeq	fp, r5, ip, ror #18
   34ad8:	andeq	fp, r5, r4, lsl r8
   34adc:	andeq	fp, r5, ip, asr #24
   34ae0:	andeq	fp, r5, ip, lsl #20
   34ae4:	ldrdeq	fp, [r5], -r0
   34ae8:	muleq	r5, r4, sl
   34aec:	andeq	fp, r5, r0, lsr r8
   34af0:	andeq	fp, r5, r4, asr #18
   34af4:	andeq	fp, r5, r4, lsr #17
   34af8:	andeq	fp, r5, r0, asr #17
   34afc:	andeq	fp, r5, r8, ror #17
   34b00:			; <UNDEFINED> instruction: 0x0005b9b8
   34b04:	andeq	fp, r5, r0, lsl r9
   34b08:	strdeq	fp, [r5], -r8
   34b0c:	andeq	fp, r5, r8, asr sl
   34b10:	andeq	fp, r5, r4, lsr ip
   34b14:	andeq	fp, r5, r4, lsr #12
   34b18:	andeq	fp, r5, r8, ror sl
   34b1c:	andeq	fp, r5, ip, asr #12
   34b20:	ldr	r8, [sp, #16]
   34b24:	b	346c8 <__flatcc_fb_parse@@Base+0x2e40>
   34b28:	mov	r7, r1
   34b2c:	str	r7, [r4, #40]	; 0x28
   34b30:	b	32f0c <__flatcc_fb_parse@@Base+0x1684>
   34b34:	str	r3, [sp, #16]
   34b38:	ldr	r1, [r4, #44]	; 0x2c
   34b3c:	mov	r9, r6
   34b40:	b	32d04 <__flatcc_fb_parse@@Base+0x147c>
   34b44:	mov	r0, r4
   34b48:	bl	2c440 <__flatcc_fb_default_error_out@@Base+0xd4>
   34b4c:	ldr	r5, [r4, #40]	; 0x28
   34b50:	ldr	sl, [r5, #16]
   34b54:	b	33e7c <__flatcc_fb_parse@@Base+0x25f4>
   34b58:	mov	r5, r8
   34b5c:	b	32040 <__flatcc_fb_parse@@Base+0x7b8>
   34b60:	mov	r5, r8
   34b64:	b	33bac <__flatcc_fb_parse@@Base+0x2324>
   34b68:	mov	r5, r8
   34b6c:	b	33498 <__flatcc_fb_parse@@Base+0x1c10>
   34b70:	mov	r5, r8
   34b74:	b	33388 <__flatcc_fb_parse@@Base+0x1b00>
   34b78:	mov	r5, r8
   34b7c:	b	33b24 <__flatcc_fb_parse@@Base+0x229c>
   34b80:	mov	fp, r8
   34b84:	b	32f08 <__flatcc_fb_parse@@Base+0x1680>
   34b88:	mov	sl, r1
   34b8c:	str	sl, [r4, #40]	; 0x28
   34b90:	b	32f0c <__flatcc_fb_parse@@Base+0x1684>
   34b94:	ldr	r5, [r4, #52]	; 0x34
   34b98:	ldr	r2, [r4, #44]	; 0x2c
   34b9c:	add	r3, r5, #32
   34ba0:	cmp	r3, r2
   34ba4:	bhi	34be4 <__flatcc_fb_parse@@Base+0x335c>
   34ba8:	add	r2, r4, #476	; 0x1dc
   34bac:	mov	ip, r5
   34bb0:	ldm	r2, {r0, r1}
   34bb4:	str	r3, [r4, #52]	; 0x34
   34bb8:	mov	r2, #1
   34bbc:	str	r6, [ip], #20
   34bc0:	stm	ip, {r0, r1}
   34bc4:	mov	r1, r5
   34bc8:	ldr	r0, [r4, #412]	; 0x19c
   34bcc:	bl	2a86c <fb_scope_table_insert_item@@Base>
   34bd0:	mov	r0, r5
   34bd4:	b	34a14 <__flatcc_fb_parse@@Base+0x318c>
   34bd8:	mov	r0, r4
   34bdc:	bl	2c440 <__flatcc_fb_default_error_out@@Base+0xd4>
   34be0:	b	349f8 <__flatcc_fb_parse@@Base+0x3170>
   34be4:	mov	r1, #1
   34be8:	mov	r0, #65536	; 0x10000
   34bec:	bl	13fa4 <calloc@plt>
   34bf0:	cmp	r0, #0
   34bf4:	beq	3484c <__flatcc_fb_parse@@Base+0x2fc4>
   34bf8:	ldr	r3, [r4, #48]	; 0x30
   34bfc:	add	r2, r0, #65536	; 0x10000
   34c00:	str	r3, [r0]
   34c04:	add	r5, r0, #16
   34c08:	str	r0, [r4, #48]	; 0x30
   34c0c:	add	r3, r0, #48	; 0x30
   34c10:	str	r2, [r4, #44]	; 0x2c
   34c14:	b	34ba8 <__flatcc_fb_parse@@Base+0x3320>
   34c18:	mov	r5, r1
   34c1c:	b	34aa4 <__flatcc_fb_parse@@Base+0x321c>
   34c20:	mov	r6, r5
   34c24:	str	r6, [r4, #40]	; 0x28
   34c28:	b	32f0c <__flatcc_fb_parse@@Base+0x1684>
   34c2c:	mov	fp, r5
   34c30:	b	32f08 <__flatcc_fb_parse@@Base+0x1680>
   34c34:	mov	r7, r5
   34c38:	b	34b2c <__flatcc_fb_parse@@Base+0x32a4>
   34c3c:	mov	fp, sl
   34c40:	b	32f08 <__flatcc_fb_parse@@Base+0x1680>

00034c44 <__flatcc_fb_clear_parser@@Base>:
   34c44:	push	{r4, r5, r6, lr}
   34c48:	mov	r5, r0
   34c4c:	ldr	r4, [r0, #392]	; 0x188
   34c50:	cmp	r4, #0
   34c54:	bne	34c68 <__flatcc_fb_clear_parser@@Base+0x24>
   34c58:	b	34c90 <__flatcc_fb_clear_parser@@Base+0x4c>
   34c5c:	ldr	r4, [r4]
   34c60:	cmp	r4, #0
   34c64:	beq	34c90 <__flatcc_fb_clear_parser@@Base+0x4c>
   34c68:	ldrh	r3, [r4, #8]
   34c6c:	cmp	r3, #4
   34c70:	bhi	34c5c <__flatcc_fb_clear_parser@@Base+0x18>
   34c74:	add	r0, r4, #56	; 0x38
   34c78:	bl	29950 <fb_symbol_table_clear@@Base>
   34c7c:	add	r0, r4, #72	; 0x48
   34c80:	bl	41830 <fb_value_set_clear@@Base>
   34c84:	ldr	r4, [r4]
   34c88:	cmp	r4, #0
   34c8c:	bne	34c68 <__flatcc_fb_clear_parser@@Base+0x24>
   34c90:	add	r0, r5, #448	; 0x1c0
   34c94:	bl	2b6a0 <fb_schema_table_clear@@Base>
   34c98:	add	r0, r5, #432	; 0x1b0
   34c9c:	bl	40fe0 <fb_name_table_clear@@Base>
   34ca0:	add	r0, r5, #524	; 0x20c
   34ca4:	bl	291fc <ptr_set_clear@@Base>
   34ca8:	ldr	r0, [r5, #112]	; 0x70
   34cac:	cmp	r0, #0
   34cb0:	beq	34cb8 <__flatcc_fb_clear_parser@@Base+0x74>
   34cb4:	bl	13fd4 <free@plt>
   34cb8:	ldr	r0, [r5, #20]
   34cbc:	cmp	r0, #0
   34cc0:	beq	34cc8 <__flatcc_fb_clear_parser@@Base+0x84>
   34cc4:	bl	13fd4 <free@plt>
   34cc8:	ldr	r0, [r5, #512]	; 0x200
   34ccc:	cmp	r0, #0
   34cd0:	beq	34cd8 <__flatcc_fb_clear_parser@@Base+0x94>
   34cd4:	bl	13fd4 <free@plt>
   34cd8:	ldr	r0, [r5, #516]	; 0x204
   34cdc:	cmp	r0, #0
   34ce0:	beq	34ce8 <__flatcc_fb_clear_parser@@Base+0xa4>
   34ce4:	bl	13fd4 <free@plt>
   34ce8:	ldr	r0, [r5, #520]	; 0x208
   34cec:	cmp	r0, #0
   34cf0:	beq	34cf8 <__flatcc_fb_clear_parser@@Base+0xb4>
   34cf4:	bl	13fd4 <free@plt>
   34cf8:	ldr	r0, [r5, #548]	; 0x224
   34cfc:	cmp	r0, #0
   34d00:	beq	34d08 <__flatcc_fb_clear_parser@@Base+0xc4>
   34d04:	bl	13fd4 <free@plt>
   34d08:	add	r0, r5, #416	; 0x1a0
   34d0c:	mov	r2, #0
   34d10:	ldr	r1, [pc, #64]	; 34d58 <__flatcc_fb_clear_parser@@Base+0x114>
   34d14:	bl	2a280 <fb_scope_table_destroy@@Base>
   34d18:	ldr	r0, [r5, #48]	; 0x30
   34d1c:	cmp	r0, #0
   34d20:	beq	34d34 <__flatcc_fb_clear_parser@@Base+0xf0>
   34d24:	ldr	r4, [r0]
   34d28:	bl	13fd4 <free@plt>
   34d2c:	subs	r0, r4, #0
   34d30:	bne	34d24 <__flatcc_fb_clear_parser@@Base+0xe0>
   34d34:	ldr	r0, [r5, #16]
   34d38:	cmp	r0, #0
   34d3c:	beq	34d44 <__flatcc_fb_clear_parser@@Base+0x100>
   34d40:	bl	13fd4 <free@plt>
   34d44:	mov	r0, r5
   34d48:	mov	r2, #560	; 0x230
   34d4c:	mov	r1, #0
   34d50:	pop	{r4, r5, r6, lr}
   34d54:	b	140ac <memset@plt>
   34d58:	andeq	ip, r2, r4, lsl #7
   34d5c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   34d60:	sub	sp, sp, #20
   34d64:	ldrh	fp, [r1, #8]
   34d68:	cmp	fp, #1
   34d6c:	bne	351bc <__flatcc_fb_clear_parser@@Base+0x578>
   34d70:	ldrh	r3, [r1, #10]
   34d74:	mov	sl, r0
   34d78:	mov	r5, r1
   34d7c:	ands	r0, r3, #1
   34d80:	bne	351d0 <__flatcc_fb_clear_parser@@Base+0x58c>
   34d84:	tst	r3, #2
   34d88:	bne	34df8 <__flatcc_fb_clear_parser@@Base+0x1b4>
   34d8c:	ldr	r1, [r1, #120]	; 0x78
   34d90:	cmp	r1, #0
   34d94:	bne	351e4 <__flatcc_fb_clear_parser@@Base+0x5a0>
   34d98:	ldr	r4, [r5, #20]
   34d9c:	orr	r3, r3, #1
   34da0:	cmp	r4, #0
   34da4:	strh	r3, [r5, #10]
   34da8:	beq	35068 <__flatcc_fb_clear_parser@@Base+0x424>
   34dac:	ldr	r2, [sl, #116]	; 0x74
   34db0:	cmp	r2, #99	; 0x63
   34db4:	strle	r1, [sp, #12]
   34db8:	bgt	35020 <__flatcc_fb_clear_parser@@Base+0x3dc>
   34dbc:	ldrh	r3, [r4, #24]
   34dc0:	cmp	r3, #8
   34dc4:	beq	34ea0 <__flatcc_fb_clear_parser@@Base+0x25c>
   34dc8:	cmp	r3, #14
   34dcc:	beq	34e0c <__flatcc_fb_clear_parser@@Base+0x1c8>
   34dd0:	cmp	r3, #1
   34dd4:	beq	34e00 <__flatcc_fb_clear_parser@@Base+0x1bc>
   34dd8:	mov	r3, #0
   34ddc:	ldr	r1, [r4, #4]
   34de0:	mov	r0, sl
   34de4:	str	r3, [sp, #4]
   34de8:	str	r3, [sp]
   34dec:	ldr	r2, [pc, #1028]	; 351f8 <__flatcc_fb_clear_parser@@Base+0x5b4>
   34df0:	bl	3052c <__flatcc_error_report@@Base>
   34df4:	mvn	r0, #0
   34df8:	add	sp, sp, #20
   34dfc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   34e00:	mvn	r0, #0
   34e04:	add	sp, sp, #20
   34e08:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   34e0c:	ldr	r6, [r4, #16]
   34e10:	ldrh	r3, [r6, #8]
   34e14:	cmp	r3, #3
   34e18:	beq	34f1c <__flatcc_fb_clear_parser@@Base+0x2d8>
   34e1c:	cmp	r3, #1
   34e20:	bne	35170 <__flatcc_fb_clear_parser@@Base+0x52c>
   34e24:	ldrh	r3, [r6, #10]
   34e28:	tst	r3, #1
   34e2c:	bne	35148 <__flatcc_fb_clear_parser@@Base+0x504>
   34e30:	ands	r0, r3, #2
   34e34:	bne	34e6c <__flatcc_fb_clear_parser@@Base+0x228>
   34e38:	ldr	r3, [sl, #188]	; 0xbc
   34e3c:	cmp	r3, #0
   34e40:	bne	35044 <__flatcc_fb_clear_parser@@Base+0x400>
   34e44:	add	r2, r2, #1
   34e48:	str	r2, [sl, #116]	; 0x74
   34e4c:	mov	r1, r6
   34e50:	mov	r0, sl
   34e54:	bl	34d5c <__flatcc_fb_clear_parser@@Base+0x118>
   34e58:	ldr	r3, [sl, #116]	; 0x74
   34e5c:	sub	r3, r3, #1
   34e60:	str	r3, [sl, #116]	; 0x74
   34e64:	cmp	r0, #0
   34e68:	bne	34df8 <__flatcc_fb_clear_parser@@Base+0x1b4>
   34e6c:	ldrh	ip, [r6, #104]	; 0x68
   34e70:	ldrd	r6, [r6, #112]	; 0x70
   34e74:	strh	ip, [r4, #74]	; 0x4a
   34e78:	strd	r6, [r4, #88]	; 0x58
   34e7c:	uxth	r0, ip
   34e80:	subs	r2, r0, #1
   34e84:	mov	r1, #0
   34e88:	sbc	r3, r1, #0
   34e8c:	cmp	r3, #0
   34e90:	cmpeq	r2, #255	; 0xff
   34e94:	ldrd	r8, [r5, #112]	; 0x70
   34e98:	bls	34f30 <__flatcc_fb_clear_parser@@Base+0x2ec>
   34e9c:	bl	141d4 <__assert_fail@plt+0x8c>
   34ea0:	ldr	r3, [r4, #16]
   34ea4:	ldr	r2, [r3, #16]
   34ea8:	add	r2, r2, #996	; 0x3e4
   34eac:	add	r2, r2, #3
   34eb0:	cmp	r2, #27
   34eb4:	bls	34ee4 <__flatcc_fb_clear_parser@@Base+0x2a0>
   34eb8:	mov	r2, #0
   34ebc:	str	r2, [r4, #16]
   34ec0:	mov	r2, #0
   34ec4:	ldr	r1, [r4, #4]
   34ec8:	mov	r0, sl
   34ecc:	str	r2, [sp, #4]
   34ed0:	str	r2, [sp]
   34ed4:	ldr	r2, [pc, #796]	; 351f8 <__flatcc_fb_clear_parser@@Base+0x5b4>
   34ed8:	bl	3052c <__flatcc_error_report@@Base>
   34edc:	mvn	r0, #0
   34ee0:	b	34df8 <__flatcc_fb_clear_parser@@Base+0x1b4>
   34ee4:	ldr	r1, [pc, #784]	; 351fc <__flatcc_fb_clear_parser@@Base+0x5b8>
   34ee8:	mov	r7, #0
   34eec:	add	r2, r1, r2, lsl #2
   34ef0:	ldr	r2, [r2, #28]
   34ef4:	str	r2, [r4, #16]
   34ef8:	add	r2, r1, r2, lsl #2
   34efc:	ldr	ip, [r2, #140]	; 0x8c
   34f00:	cmp	ip, #0
   34f04:	mov	r6, ip
   34f08:	beq	34ec0 <__flatcc_fb_clear_parser@@Base+0x27c>
   34f0c:	uxth	ip, ip
   34f10:	strh	ip, [r4, #74]	; 0x4a
   34f14:	strd	r6, [r4, #88]	; 0x58
   34f18:	b	34e7c <__flatcc_fb_clear_parser@@Base+0x238>
   34f1c:	ldrd	r6, [r6, #112]	; 0x70
   34f20:	uxth	ip, r6
   34f24:	strd	r6, [r4, #88]	; 0x58
   34f28:	strh	ip, [r4, #74]	; 0x4a
   34f2c:	b	34e7c <__flatcc_fb_clear_parser@@Base+0x238>
   34f30:	cmp	r1, #0
   34f34:	cmpeq	r0, #1
   34f38:	beq	34f68 <__flatcc_fb_clear_parser@@Base+0x324>
   34f3c:	mov	r2, #2
   34f40:	mov	r3, #0
   34f44:	b	34f5c <__flatcc_fb_clear_parser@@Base+0x318>
   34f48:	adds	r2, r2, r2
   34f4c:	adc	r3, r3, r3
   34f50:	cmp	r1, r3
   34f54:	cmpeq	r0, r2
   34f58:	bcc	34e9c <__flatcc_fb_clear_parser@@Base+0x258>
   34f5c:	cmp	r1, r3
   34f60:	cmpeq	r0, r2
   34f64:	bne	34f48 <__flatcc_fb_clear_parser@@Base+0x304>
   34f68:	subs	r2, r8, #1
   34f6c:	sbc	r3, r9, #0
   34f70:	adds	r2, r2, r0
   34f74:	adc	r3, r3, r1
   34f78:	rsbs	r0, r0, #0
   34f7c:	rsc	r1, r1, #0
   34f80:	and	r1, r1, r3
   34f84:	and	r0, r0, r2
   34f88:	cmp	r9, r1
   34f8c:	cmpeq	r8, r0
   34f90:	strd	r0, [r4, #80]	; 0x50
   34f94:	bhi	35124 <__flatcc_fb_clear_parser@@Base+0x4e0>
   34f98:	adds	r6, r6, r0
   34f9c:	adc	r7, r7, r1
   34fa0:	cmp	r7, r1
   34fa4:	cmpeq	r6, r0
   34fa8:	bcc	35124 <__flatcc_fb_clear_parser@@Base+0x4e0>
   34fac:	cmp	r9, r7
   34fb0:	cmpeq	r8, r6
   34fb4:	ldr	r0, [pc, #580]	; 35200 <__flatcc_fb_clear_parser@@Base+0x5bc>
   34fb8:	mov	r1, #0
   34fbc:	movhi	r3, #1
   34fc0:	movls	r3, #0
   34fc4:	cmp	r7, r1
   34fc8:	cmpeq	r6, r0
   34fcc:	orrhi	r3, r3, #1
   34fd0:	cmp	r3, #0
   34fd4:	beq	34ffc <__flatcc_fb_clear_parser@@Base+0x3b8>
   34fd8:	ldr	r2, [sp, #12]
   34fdc:	ldr	r1, [r4, #4]
   34fe0:	mov	r3, #0
   34fe4:	str	r2, [sp, #4]
   34fe8:	str	r2, [sp]
   34fec:	mov	r0, sl
   34ff0:	ldr	r2, [pc, #524]	; 35204 <__flatcc_fb_clear_parser@@Base+0x5c0>
   34ff4:	bl	3052c <__flatcc_error_report@@Base>
   34ff8:	ldrh	ip, [r4, #74]	; 0x4a
   34ffc:	ldr	r4, [r4]
   35000:	cmp	ip, fp
   35004:	movcs	fp, ip
   35008:	cmp	r4, #0
   3500c:	strd	r6, [r5, #112]	; 0x70
   35010:	beq	35068 <__flatcc_fb_clear_parser@@Base+0x424>
   35014:	ldr	r2, [sl, #116]	; 0x74
   35018:	cmp	r2, #99	; 0x63
   3501c:	ble	34dbc <__flatcc_fb_clear_parser@@Base+0x178>
   35020:	mov	r3, #0
   35024:	mov	r0, sl
   35028:	str	r3, [sp, #4]
   3502c:	str	r3, [sp]
   35030:	mov	r1, r3
   35034:	ldr	r2, [pc, #460]	; 35208 <__flatcc_fb_clear_parser@@Base+0x5c4>
   35038:	bl	3052c <__flatcc_error_report@@Base>
   3503c:	mvn	r0, #0
   35040:	b	34df8 <__flatcc_fb_clear_parser@@Base+0x1b4>
   35044:	ldr	r3, [r6, #4]
   35048:	ldr	r1, [r4, #4]
   3504c:	ldr	r2, [pc, #440]	; 3520c <__flatcc_fb_clear_parser@@Base+0x5c8>
   35050:	str	r0, [sp, #4]
   35054:	str	r0, [sp]
   35058:	mov	r0, sl
   3505c:	bl	3052c <__flatcc_error_report@@Base>
   35060:	ldr	r2, [sl, #116]	; 0x74
   35064:	b	34e44 <__flatcc_fb_clear_parser@@Base+0x200>
   35068:	ldrh	r2, [r5, #104]	; 0x68
   3506c:	cmp	r2, #0
   35070:	moveq	r2, fp
   35074:	strheq	fp, [r5, #104]	; 0x68
   35078:	beq	35084 <__flatcc_fb_clear_parser@@Base+0x440>
   3507c:	cmp	r2, fp
   35080:	bcc	35194 <__flatcc_fb_clear_parser@@Base+0x550>
   35084:	uxth	r2, r2
   35088:	subs	r0, r2, #1
   3508c:	mov	r3, #0
   35090:	sbc	r1, r3, #0
   35094:	cmp	r1, #0
   35098:	cmpeq	r0, #255	; 0xff
   3509c:	ldrd	r6, [r5, #112]	; 0x70
   350a0:	bhi	34e9c <__flatcc_fb_clear_parser@@Base+0x258>
   350a4:	cmp	r3, #0
   350a8:	cmpeq	r2, #1
   350ac:	beq	350dc <__flatcc_fb_clear_parser@@Base+0x498>
   350b0:	mov	r0, #2
   350b4:	mov	r1, #0
   350b8:	b	350d0 <__flatcc_fb_clear_parser@@Base+0x48c>
   350bc:	adds	r0, r0, r0
   350c0:	adc	r1, r1, r1
   350c4:	cmp	r3, r1
   350c8:	cmpeq	r2, r0
   350cc:	bcc	34e9c <__flatcc_fb_clear_parser@@Base+0x258>
   350d0:	cmp	r1, r3
   350d4:	cmpeq	r0, r2
   350d8:	bne	350bc <__flatcc_fb_clear_parser@@Base+0x478>
   350dc:	subs	r0, r6, #1
   350e0:	ldrh	ip, [r5, #10]
   350e4:	sbc	r1, r7, #0
   350e8:	adds	r0, r0, r2
   350ec:	adc	r1, r1, r3
   350f0:	rsbs	r2, r2, #0
   350f4:	rsc	r3, r3, #0
   350f8:	and	r2, r2, r0
   350fc:	and	r3, r3, r1
   35100:	bic	r1, ip, #1
   35104:	ldr	ip, [sl, #396]	; 0x18c
   35108:	orr	r1, r1, #2
   3510c:	strd	r2, [r5, #112]	; 0x70
   35110:	strh	r1, [r5, #10]
   35114:	str	ip, [r5, #120]	; 0x78
   35118:	mov	r0, #0
   3511c:	str	r5, [sl, #396]	; 0x18c
   35120:	b	34df8 <__flatcc_fb_clear_parser@@Base+0x1b4>
   35124:	mov	r3, #0
   35128:	ldr	r1, [r4, #4]
   3512c:	mov	r0, sl
   35130:	str	r3, [sp, #4]
   35134:	str	r3, [sp]
   35138:	ldr	r2, [pc, #208]	; 35210 <__flatcc_fb_clear_parser@@Base+0x5cc>
   3513c:	bl	3052c <__flatcc_error_report@@Base>
   35140:	mvn	r0, #0
   35144:	b	34df8 <__flatcc_fb_clear_parser@@Base+0x1b4>
   35148:	mov	r2, #0
   3514c:	ldr	r3, [r6, #4]
   35150:	ldr	r1, [r4, #4]
   35154:	mov	r0, sl
   35158:	str	r2, [sp, #4]
   3515c:	str	r2, [sp]
   35160:	ldr	r2, [pc, #172]	; 35214 <__flatcc_fb_clear_parser@@Base+0x5d0>
   35164:	bl	3052c <__flatcc_error_report@@Base>
   35168:	mvn	r0, #0
   3516c:	b	34df8 <__flatcc_fb_clear_parser@@Base+0x1b4>
   35170:	mov	r3, #0
   35174:	ldr	r1, [r4, #4]
   35178:	mov	r0, sl
   3517c:	str	r3, [sp, #4]
   35180:	str	r3, [sp]
   35184:	ldr	r2, [pc, #140]	; 35218 <__flatcc_fb_clear_parser@@Base+0x5d4>
   35188:	bl	3052c <__flatcc_error_report@@Base>
   3518c:	mvn	r0, #0
   35190:	b	34df8 <__flatcc_fb_clear_parser@@Base+0x1b4>
   35194:	mov	r3, #0
   35198:	ldr	r1, [r5, #4]
   3519c:	ldr	r2, [pc, #120]	; 3521c <__flatcc_fb_clear_parser@@Base+0x5d8>
   351a0:	str	r3, [sp, #4]
   351a4:	str	r3, [sp]
   351a8:	mov	r0, sl
   351ac:	bl	3052c <__flatcc_error_report@@Base>
   351b0:	strh	fp, [r5, #104]	; 0x68
   351b4:	mov	r2, fp
   351b8:	b	35084 <__flatcc_fb_clear_parser@@Base+0x440>
   351bc:	ldr	r3, [pc, #92]	; 35220 <__flatcc_fb_clear_parser@@Base+0x5dc>
   351c0:	ldr	r2, [pc, #92]	; 35224 <__flatcc_fb_clear_parser@@Base+0x5e0>
   351c4:	ldr	r1, [pc, #92]	; 35228 <__flatcc_fb_clear_parser@@Base+0x5e4>
   351c8:	ldr	r0, [pc, #92]	; 3522c <__flatcc_fb_clear_parser@@Base+0x5e8>
   351cc:	bl	14148 <__assert_fail@plt>
   351d0:	ldr	r3, [pc, #72]	; 35220 <__flatcc_fb_clear_parser@@Base+0x5dc>
   351d4:	mov	r2, #504	; 0x1f8
   351d8:	ldr	r1, [pc, #72]	; 35228 <__flatcc_fb_clear_parser@@Base+0x5e4>
   351dc:	ldr	r0, [pc, #76]	; 35230 <__flatcc_fb_clear_parser@@Base+0x5ec>
   351e0:	bl	14148 <__assert_fail@plt>
   351e4:	ldr	r3, [pc, #52]	; 35220 <__flatcc_fb_clear_parser@@Base+0x5dc>
   351e8:	mov	r2, #508	; 0x1fc
   351ec:	ldr	r1, [pc, #52]	; 35228 <__flatcc_fb_clear_parser@@Base+0x5e4>
   351f0:	ldr	r0, [pc, #60]	; 35234 <__flatcc_fb_clear_parser@@Base+0x5f0>
   351f4:	bl	14148 <__assert_fail@plt>
   351f8:	andeq	fp, r5, r0, ror #29
   351fc:	andeq	fp, r5, r8, ror #24
   35200:	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
   35204:	muleq	r5, r4, pc	; <UNPREDICTABLE>
   35208:	muleq	r5, r4, lr
   3520c:	andeq	fp, r5, r0, lsl pc
   35210:	andeq	fp, r5, ip, ror pc
   35214:	strdeq	fp, [r5], -r0
   35218:	andeq	fp, r5, r8, asr pc
   3521c:	andeq	fp, r5, r8, asr #31
   35220:	andeq	fp, r5, r4, ror ip
   35224:	strdeq	r0, [r0], -r6
   35228:	strdeq	fp, [r5], -ip
   3522c:	andeq	r4, r4, r8, lsr #16
   35230:	andeq	fp, r5, r0, ror #28
   35234:	andeq	fp, r5, r8, lsl #29
   35238:	ldrh	r3, [r1, #8]
   3523c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   35240:	sub	sp, sp, #236	; 0xec
   35244:	cmp	r3, #0
   35248:	str	r1, [sp, #28]
   3524c:	bne	36ed4 <__flatcc_fb_clear_parser@@Base+0x2290>
   35250:	ldrh	r3, [r1, #48]	; 0x30
   35254:	cmp	r3, #0
   35258:	str	r3, [sp, #36]	; 0x24
   3525c:	bne	36ec0 <__flatcc_fb_clear_parser@@Base+0x227c>
   35260:	mov	r6, r3
   35264:	ldr	r3, [sp, #28]
   35268:	mov	fp, r0
   3526c:	mov	r2, #48	; 0x30
   35270:	ldr	r4, [r3, #28]
   35274:	add	r0, sp, #84	; 0x54
   35278:	mov	r1, r6
   3527c:	bl	140ac <memset@plt>
   35280:	cmp	r4, #0
   35284:	beq	36800 <__flatcc_fb_clear_parser@@Base+0x1bbc>
   35288:	ldr	r7, [pc, #3968]	; 36210 <__flatcc_fb_clear_parser@@Base+0x15cc>
   3528c:	ldr	r8, [pc, #3968]	; 36214 <__flatcc_fb_clear_parser@@Base+0x15d0>
   35290:	ldr	r9, [pc, #3968]	; 36218 <__flatcc_fb_clear_parser@@Base+0x15d4>
   35294:	ldr	sl, [pc, #3968]	; 3621c <__flatcc_fb_clear_parser@@Base+0x15d8>
   35298:	mov	r5, #100	; 0x64
   3529c:	b	35300 <__flatcc_fb_clear_parser@@Base+0x6bc>
   352a0:	mov	r2, #1
   352a4:	add	r1, sp, #84	; 0x54
   352a8:	orr	r6, r6, r2, lsl r3
   352ac:	ldr	r0, [r1, r3, lsl #2]
   352b0:	uxth	r6, r6
   352b4:	cmp	r0, #0
   352b8:	lsl	r2, r3, #2
   352bc:	beq	35358 <__flatcc_fb_clear_parser@@Base+0x714>
   352c0:	mov	r3, #0
   352c4:	ldr	r1, [r4, #4]
   352c8:	ldr	r2, [pc, #3920]	; 36220 <__flatcc_fb_clear_parser@@Base+0x15dc>
   352cc:	str	r3, [sp, #4]
   352d0:	str	r3, [sp]
   352d4:	mov	r0, fp
   352d8:	bl	3052c <__flatcc_error_report@@Base>
   352dc:	subs	r5, r5, #1
   352e0:	ldr	r4, [r4]
   352e4:	movne	r2, #1
   352e8:	moveq	r2, #0
   352ec:	cmp	r4, #0
   352f0:	moveq	r2, #0
   352f4:	andne	r2, r2, #1
   352f8:	cmp	r2, #0
   352fc:	beq	3539c <__flatcc_fb_clear_parser@@Base+0x758>
   35300:	ldr	r3, [r4, #4]
   35304:	ldr	r0, [fp, #412]	; 0x19c
   35308:	ldm	r3, {r1, r2}
   3530c:	add	r0, r0, #16
   35310:	bl	41118 <fb_name_table_find@@Base>
   35314:	cmp	r0, #0
   35318:	beq	35a70 <__flatcc_fb_clear_parser@@Base+0xe2c>
   3531c:	ldr	r3, [r0, #24]
   35320:	cmp	r3, #0
   35324:	beq	352dc <__flatcc_fb_clear_parser@@Base+0x698>
   35328:	mov	r2, #8
   3532c:	asr	r2, r2, r3
   35330:	ands	r2, r2, #1
   35334:	bne	352a0 <__flatcc_fb_clear_parser@@Base+0x65c>
   35338:	ldr	r1, [r4, #4]
   3533c:	mov	r3, r2
   35340:	str	r2, [sp, #4]
   35344:	str	r2, [sp]
   35348:	mov	r0, fp
   3534c:	ldr	r2, [pc, #3792]	; 36224 <__flatcc_fb_clear_parser@@Base+0x15e0>
   35350:	bl	3052c <__flatcc_error_report@@Base>
   35354:	b	352dc <__flatcc_fb_clear_parser@@Base+0x698>
   35358:	add	r2, r7, r2
   3535c:	add	r1, sp, #84	; 0x54
   35360:	ldr	r2, [r2, #204]	; 0xcc
   35364:	str	r4, [r1, r3, lsl #2]
   35368:	cmp	r2, #0
   3536c:	bne	35aa0 <__flatcc_fb_clear_parser@@Base+0xe5c>
   35370:	ldrh	r3, [r4, #16]
   35374:	cmp	r3, #0
   35378:	beq	352dc <__flatcc_fb_clear_parser@@Base+0x698>
   3537c:	ldr	r1, [r4, #4]
   35380:	mov	r3, r2
   35384:	str	r2, [sp, #4]
   35388:	str	r2, [sp]
   3538c:	mov	r0, fp
   35390:	ldr	r2, [pc, #3728]	; 36228 <__flatcc_fb_clear_parser@@Base+0x15e4>
   35394:	bl	3052c <__flatcc_error_report@@Base>
   35398:	b	352dc <__flatcc_fb_clear_parser@@Base+0x698>
   3539c:	cmp	r4, #0
   353a0:	beq	353c0 <__flatcc_fb_clear_parser@@Base+0x77c>
   353a4:	ldr	r1, [r4, #4]
   353a8:	mov	r3, r2
   353ac:	str	r2, [sp, #4]
   353b0:	str	r2, [sp]
   353b4:	mov	r0, fp
   353b8:	ldr	r2, [pc, #3692]	; 3622c <__flatcc_fb_clear_parser@@Base+0x15e8>
   353bc:	bl	3052c <__flatcc_error_report@@Base>
   353c0:	ldr	r2, [sp, #28]
   353c4:	ldr	r9, [r2, #20]
   353c8:	strh	r6, [r2, #92]	; 0x5c
   353cc:	cmp	r9, #0
   353d0:	beq	369d4 <__flatcc_fb_clear_parser@@Base+0x1d90>
   353d4:	mov	r3, #0
   353d8:	mov	r0, #0
   353dc:	mov	r1, #0
   353e0:	str	r3, [sp, #56]	; 0x38
   353e4:	str	r3, [sp, #32]
   353e8:	str	r3, [sp, #24]
   353ec:	str	r3, [sp, #48]	; 0x30
   353f0:	add	r3, fp, #352	; 0x160
   353f4:	strd	r0, [sp, #40]	; 0x28
   353f8:	strd	r0, [sp, #16]
   353fc:	add	sl, r2, #56	; 0x38
   35400:	str	r3, [sp, #8]
   35404:	b	35434 <__flatcc_fb_clear_parser@@Base+0x7f0>
   35408:	mov	r2, #0
   3540c:	ldr	r3, [r8, #4]
   35410:	ldr	r1, [r9, #4]
   35414:	mov	r0, fp
   35418:	str	r2, [sp, #4]
   3541c:	str	r2, [sp]
   35420:	ldr	r2, [pc, #3592]	; 36230 <__flatcc_fb_clear_parser@@Base+0x15ec>
   35424:	bl	3052c <__flatcc_error_report@@Base>
   35428:	ldr	r9, [r9]
   3542c:	cmp	r9, #0
   35430:	beq	359d8 <__flatcc_fb_clear_parser@@Base+0xd94>
   35434:	mov	r2, #1
   35438:	mov	r1, r9
   3543c:	mov	r0, sl
   35440:	bl	29a64 <fb_symbol_table_insert_item@@Base>
   35444:	subs	r8, r0, #0
   35448:	bne	35408 <__flatcc_fb_clear_parser@@Base+0x7c4>
   3544c:	ldrh	r3, [r9, #8]
   35450:	cmp	r3, #5
   35454:	bne	364a8 <__flatcc_fb_clear_parser@@Base+0x1864>
   35458:	ldrh	r3, [r9, #24]
   3545c:	cmp	r3, #1
   35460:	beq	35428 <__flatcc_fb_clear_parser@@Base+0x7e4>
   35464:	sub	r3, r3, #7
   35468:	cmp	r3, #1
   3546c:	bls	35964 <__flatcc_fb_clear_parser@@Base+0xd20>
   35470:	ldr	r4, [r9, #64]	; 0x40
   35474:	mov	r2, #48	; 0x30
   35478:	mov	r1, #0
   3547c:	add	r0, sp, #84	; 0x54
   35480:	bl	140ac <memset@plt>
   35484:	cmp	r4, #0
   35488:	beq	36450 <__flatcc_fb_clear_parser@@Base+0x180c>
   3548c:	ldr	r7, [pc, #3452]	; 36210 <__flatcc_fb_clear_parser@@Base+0x15cc>
   35490:	ldr	r6, [sp, #36]	; 0x24
   35494:	mov	r5, #100	; 0x64
   35498:	b	354fc <__flatcc_fb_clear_parser@@Base+0x8b8>
   3549c:	mov	r3, #1
   354a0:	add	r1, sp, #84	; 0x54
   354a4:	orr	r6, r6, r3, lsl r2
   354a8:	ldr	r0, [r1, r2, lsl #2]
   354ac:	uxth	r6, r6
   354b0:	cmp	r0, #0
   354b4:	lsl	r3, r2, #2
   354b8:	beq	35554 <__flatcc_fb_clear_parser@@Base+0x910>
   354bc:	mov	r3, #0
   354c0:	ldr	r1, [r4, #4]
   354c4:	ldr	r2, [pc, #3412]	; 36220 <__flatcc_fb_clear_parser@@Base+0x15dc>
   354c8:	str	r3, [sp, #4]
   354cc:	str	r3, [sp]
   354d0:	mov	r0, fp
   354d4:	bl	3052c <__flatcc_error_report@@Base>
   354d8:	subs	r5, r5, #1
   354dc:	ldr	r4, [r4]
   354e0:	movne	r2, #1
   354e4:	moveq	r2, #0
   354e8:	cmp	r4, #0
   354ec:	moveq	r2, #0
   354f0:	andne	r2, r2, #1
   354f4:	cmp	r2, #0
   354f8:	beq	35598 <__flatcc_fb_clear_parser@@Base+0x954>
   354fc:	ldr	r3, [r4, #4]
   35500:	ldr	r0, [fp, #412]	; 0x19c
   35504:	ldm	r3, {r1, r2}
   35508:	add	r0, r0, #16
   3550c:	bl	41118 <fb_name_table_find@@Base>
   35510:	cmp	r0, #0
   35514:	beq	358f0 <__flatcc_fb_clear_parser@@Base+0xcac>
   35518:	ldr	r2, [r0, #24]
   3551c:	cmp	r2, #0
   35520:	beq	354d8 <__flatcc_fb_clear_parser@@Base+0x894>
   35524:	ldr	r3, [pc, #3336]	; 36234 <__flatcc_fb_clear_parser@@Base+0x15f0>
   35528:	asr	r3, r3, r2
   3552c:	ands	r0, r3, #1
   35530:	bne	3549c <__flatcc_fb_clear_parser@@Base+0x858>
   35534:	ldr	r1, [r4, #4]
   35538:	mov	r3, r0
   3553c:	str	r0, [sp, #4]
   35540:	str	r0, [sp]
   35544:	ldr	r2, [pc, #3288]	; 36224 <__flatcc_fb_clear_parser@@Base+0x15e0>
   35548:	mov	r0, fp
   3554c:	bl	3052c <__flatcc_error_report@@Base>
   35550:	b	354d8 <__flatcc_fb_clear_parser@@Base+0x894>
   35554:	add	r3, r7, r3
   35558:	add	r1, sp, #84	; 0x54
   3555c:	str	r4, [r1, r2, lsl #2]
   35560:	ldr	r2, [r3, #204]	; 0xcc
   35564:	cmp	r2, #0
   35568:	bne	35910 <__flatcc_fb_clear_parser@@Base+0xccc>
   3556c:	ldrh	r3, [r4, #16]
   35570:	cmp	r3, #0
   35574:	beq	354d8 <__flatcc_fb_clear_parser@@Base+0x894>
   35578:	ldr	r1, [r4, #4]
   3557c:	mov	r3, r2
   35580:	str	r2, [sp, #4]
   35584:	str	r2, [sp]
   35588:	mov	r0, fp
   3558c:	ldr	r2, [pc, #3220]	; 36228 <__flatcc_fb_clear_parser@@Base+0x15e4>
   35590:	bl	3052c <__flatcc_error_report@@Base>
   35594:	b	354d8 <__flatcc_fb_clear_parser@@Base+0x894>
   35598:	cmp	r4, #0
   3559c:	beq	355bc <__flatcc_fb_clear_parser@@Base+0x978>
   355a0:	ldr	r1, [r4, #4]
   355a4:	mov	r3, r2
   355a8:	str	r2, [sp, #4]
   355ac:	str	r2, [sp]
   355b0:	mov	r0, fp
   355b4:	ldr	r2, [pc, #3184]	; 3622c <__flatcc_fb_clear_parser@@Base+0x15e8>
   355b8:	bl	3052c <__flatcc_error_report@@Base>
   355bc:	ldr	r7, [sp, #108]	; 0x6c
   355c0:	strh	r6, [r9, #72]	; 0x48
   355c4:	cmp	r7, #0
   355c8:	beq	356dc <__flatcc_fb_clear_parser@@Base+0xa98>
   355cc:	ldrh	r3, [r9, #24]
   355d0:	cmp	r3, #7
   355d4:	bne	3642c <__flatcc_fb_clear_parser@@Base+0x17e8>
   355d8:	ldr	r3, [r9, #16]
   355dc:	cmp	r3, #4
   355e0:	bne	3642c <__flatcc_fb_clear_parser@@Base+0x17e8>
   355e4:	ldrh	r3, [r7, #16]
   355e8:	cmp	r3, #2
   355ec:	bne	36420 <__flatcc_fb_clear_parser@@Base+0x17dc>
   355f0:	ldr	lr, [r7, #12]
   355f4:	ldr	ip, [r7, #8]
   355f8:	cmp	lr, #0
   355fc:	ble	36814 <__flatcc_fb_clear_parser@@Base+0x1bd0>
   35600:	sub	r6, lr, #1
   35604:	mov	r0, r6
   35608:	ldrb	r3, [ip, r6]
   3560c:	cmp	r3, #46	; 0x2e
   35610:	addne	r3, ip, r6
   35614:	movne	r2, r6
   35618:	bne	35634 <__flatcc_fb_clear_parser@@Base+0x9f0>
   3561c:	b	36808 <__flatcc_fb_clear_parser@@Base+0x1bc4>
   35620:	ldrb	r1, [r3, #-1]!
   35624:	sub	r2, r2, #1
   35628:	mov	r0, r2
   3562c:	cmp	r1, #46	; 0x2e
   35630:	beq	359c4 <__flatcc_fb_clear_parser@@Base+0xd80>
   35634:	cmp	r2, #0
   35638:	bne	35620 <__flatcc_fb_clear_parser@@Base+0x9dc>
   3563c:	mov	r6, lr
   35640:	str	ip, [sp, #12]
   35644:	ldr	r3, [sp, #28]
   35648:	ldr	r4, [r3, #12]
   3564c:	adds	r3, r4, #0
   35650:	movne	r3, #1
   35654:	cmp	r2, #0
   35658:	movne	r3, #0
   3565c:	cmp	r3, #0
   35660:	addne	r3, fp, #524	; 0x20c
   35664:	strne	r3, [sp, #52]	; 0x34
   35668:	bne	35808 <__flatcc_fb_clear_parser@@Base+0xbc4>
   3566c:	ldr	r3, [sp, #8]
   35670:	cmp	r3, #0
   35674:	beq	358b4 <__flatcc_fb_clear_parser@@Base+0xc70>
   35678:	ldr	r0, [fp, #412]	; 0x19c
   3567c:	cmp	r0, #0
   35680:	beq	358b4 <__flatcc_fb_clear_parser@@Base+0xc70>
   35684:	cmp	r2, #0
   35688:	movne	r1, ip
   3568c:	moveq	r1, #0
   35690:	bl	2a880 <fb_scope_table_find@@Base>
   35694:	cmp	r0, #0
   35698:	beq	358ac <__flatcc_fb_clear_parser@@Base+0xc68>
   3569c:	mov	r2, r6
   356a0:	ldr	r1, [sp, #12]
   356a4:	add	r0, r0, #4
   356a8:	bl	29a8c <fb_symbol_table_find@@Base>
   356ac:	subs	r3, r0, #0
   356b0:	beq	358ac <__flatcc_fb_clear_parser@@Base+0xc68>
   356b4:	ldrh	r2, [r3, #8]
   356b8:	cmp	r2, #0
   356bc:	beq	356d4 <__flatcc_fb_clear_parser@@Base+0xa90>
   356c0:	ldr	r0, [fp, #176]	; 0xb0
   356c4:	cmp	r0, #0
   356c8:	beq	36e14 <__flatcc_fb_clear_parser@@Base+0x21d0>
   356cc:	cmp	r2, #1
   356d0:	bne	36d14 <__flatcc_fb_clear_parser@@Base+0x20d0>
   356d4:	ldrh	r6, [r9, #72]	; 0x48
   356d8:	str	r3, [r9, #104]	; 0x68
   356dc:	tst	r6, #256	; 0x100
   356e0:	beq	356f0 <__flatcc_fb_clear_parser@@Base+0xaac>
   356e4:	ldrh	r3, [r9, #24]
   356e8:	cmp	r3, #8
   356ec:	beq	3645c <__flatcc_fb_clear_parser@@Base+0x1818>
   356f0:	tst	r6, #1024	; 0x400
   356f4:	beq	35724 <__flatcc_fb_clear_parser@@Base+0xae0>
   356f8:	ldrh	r3, [r9, #24]
   356fc:	cmp	r3, #7
   35700:	beq	35a90 <__flatcc_fb_clear_parser@@Base+0xe4c>
   35704:	mov	r3, #0
   35708:	ldr	r1, [r9, #4]
   3570c:	ldr	r2, [pc, #2852]	; 36238 <__flatcc_fb_clear_parser@@Base+0x15f4>
   35710:	str	r3, [sp, #4]
   35714:	str	r3, [sp]
   35718:	mov	r0, fp
   3571c:	bl	3052c <__flatcc_error_report@@Base>
   35720:	ldrh	r6, [r9, #72]	; 0x48
   35724:	tst	r6, #2048	; 0x800
   35728:	beq	35758 <__flatcc_fb_clear_parser@@Base+0xb14>
   3572c:	ldrh	r3, [r9, #24]
   35730:	cmp	r3, #7
   35734:	beq	35a38 <__flatcc_fb_clear_parser@@Base+0xdf4>
   35738:	mov	r3, #0
   3573c:	ldr	r1, [r9, #4]
   35740:	ldr	r2, [pc, #2804]	; 3623c <__flatcc_fb_clear_parser@@Base+0x15f8>
   35744:	str	r3, [sp, #4]
   35748:	str	r3, [sp]
   3574c:	mov	r0, fp
   35750:	bl	3052c <__flatcc_error_report@@Base>
   35754:	ldrh	r6, [r9, #72]	; 0x48
   35758:	and	r6, r6, #3072	; 0xc00
   3575c:	cmp	r6, #3072	; 0xc00
   35760:	beq	35a50 <__flatcc_fb_clear_parser@@Base+0xe0c>
   35764:	ldrd	r2, [sp, #16]
   35768:	ldr	r7, [sp, #88]	; 0x58
   3576c:	mov	r0, r2
   35770:	adds	r1, r7, #0
   35774:	movne	r1, #1
   35778:	orrs	r3, r0, r3
   3577c:	movne	r3, #0
   35780:	andeq	r3, r1, #1
   35784:	cmp	r3, #0
   35788:	str	r1, [sp, #12]
   3578c:	bne	35944 <__flatcc_fb_clear_parser@@Base+0xd00>
   35790:	ldr	r3, [sp, #24]
   35794:	cmp	r3, #0
   35798:	bne	357d8 <__flatcc_fb_clear_parser@@Base+0xb94>
   3579c:	ldrd	r2, [fp, #216]	; 0xd8
   357a0:	ldrd	r0, [sp, #16]
   357a4:	cmp	r3, r1
   357a8:	cmpeq	r2, r0
   357ac:	bls	363f4 <__flatcc_fb_clear_parser@@Base+0x17b0>
   357b0:	ldr	r1, [sp, #48]	; 0x30
   357b4:	cmp	r1, #0
   357b8:	ldrheq	r2, [sp, #16]
   357bc:	moveq	r3, #0
   357c0:	streq	r1, [sp, #24]
   357c4:	strdeq	r2, [r9, #96]	; 0x60
   357c8:	ldrd	r2, [sp, #16]
   357cc:	adds	r2, r2, #1
   357d0:	adc	r3, r3, #0
   357d4:	strd	r2, [sp, #16]
   357d8:	ldrh	r3, [r9, #24]
   357dc:	sub	r3, r3, #7
   357e0:	cmp	r3, #5
   357e4:	ldrls	pc, [pc, r3, lsl #2]
   357e8:	b	363cc <__flatcc_fb_clear_parser@@Base+0x1788>
   357ec:	andeq	r5, r3, r8, lsr sp
   357f0:	andeq	r5, r3, ip, asr #25
   357f4:	muleq	r3, r8, ip
   357f8:	ldrdeq	r5, [r3], -r0
   357fc:	andeq	r5, r3, ip, lsl #27
   35800:	ldrdeq	r5, [r3], -ip
   35804:	mov	r4, r0
   35808:	mov	r2, r6
   3580c:	ldr	r1, [sp, #12]
   35810:	add	r0, r4, #4
   35814:	bl	29a8c <fb_symbol_table_find@@Base>
   35818:	subs	r5, r0, #0
   3581c:	beq	3582c <__flatcc_fb_clear_parser@@Base+0xbe8>
   35820:	ldrh	r2, [r5, #8]
   35824:	cmp	r2, #4
   35828:	bls	358d4 <__flatcc_fb_clear_parser@@Base+0xc90>
   3582c:	ldr	r2, [r4]
   35830:	cmp	r2, #0
   35834:	beq	358ac <__flatcc_fb_clear_parser@@Base+0xc68>
   35838:	mov	r3, #0
   3583c:	ldr	r2, [r2]
   35840:	add	r3, r3, #1
   35844:	cmp	r2, #0
   35848:	bne	3583c <__flatcc_fb_clear_parser@@Base+0xbf8>
   3584c:	ldr	r2, [sp, #8]
   35850:	cmp	r2, #0
   35854:	beq	358ac <__flatcc_fb_clear_parser@@Base+0xc68>
   35858:	ldr	r0, [fp, #412]	; 0x19c
   3585c:	rsb	r5, r3, #1
   35860:	b	35888 <__flatcc_fb_clear_parser@@Base+0xc44>
   35864:	cmp	r0, #0
   35868:	beq	35884 <__flatcc_fb_clear_parser@@Base+0xc40>
   3586c:	mov	r2, r5
   35870:	ldr	r1, [r4]
   35874:	bl	2a880 <fb_scope_table_find@@Base>
   35878:	cmp	r0, #0
   3587c:	bne	35804 <__flatcc_fb_clear_parser@@Base+0xbc0>
   35880:	ldr	r0, [fp, #412]	; 0x19c
   35884:	add	r5, r5, #1
   35888:	cmp	r5, #0
   3588c:	bne	35864 <__flatcc_fb_clear_parser@@Base+0xc20>
   35890:	cmp	r0, #0
   35894:	beq	358ac <__flatcc_fb_clear_parser@@Base+0xc68>
   35898:	mov	r1, r5
   3589c:	mov	r2, #0
   358a0:	bl	2a880 <fb_scope_table_find@@Base>
   358a4:	subs	r4, r0, #0
   358a8:	bne	35808 <__flatcc_fb_clear_parser@@Base+0xbc4>
   358ac:	ldr	ip, [r7, #8]
   358b0:	ldr	lr, [r7, #12]
   358b4:	ldr	r1, [r7, #4]
   358b8:	mov	r3, #0
   358bc:	stm	sp, {ip, lr}
   358c0:	ldr	r2, [pc, #2424]	; 36240 <__flatcc_fb_clear_parser@@Base+0x15fc>
   358c4:	mov	r0, fp
   358c8:	bl	3052c <__flatcc_error_report@@Base>
   358cc:	ldrh	r6, [r9, #72]	; 0x48
   358d0:	b	356dc <__flatcc_fb_clear_parser@@Base+0xa98>
   358d4:	ldr	r1, [r5, #16]
   358d8:	ldr	r0, [sp, #52]	; 0x34
   358dc:	bl	293b4 <ptr_set_find_item@@Base>
   358e0:	cmp	r0, #0
   358e4:	beq	3582c <__flatcc_fb_clear_parser@@Base+0xbe8>
   358e8:	mov	r3, r5
   358ec:	b	356b4 <__flatcc_fb_clear_parser@@Base+0xa70>
   358f0:	ldr	r1, [r4, #4]
   358f4:	mov	r3, r0
   358f8:	str	r0, [sp, #4]
   358fc:	str	r0, [sp]
   35900:	ldr	r2, [pc, #2364]	; 36244 <__flatcc_fb_clear_parser@@Base+0x1600>
   35904:	mov	r0, fp
   35908:	bl	3052c <__flatcc_error_report@@Base>
   3590c:	b	354d8 <__flatcc_fb_clear_parser@@Base+0x894>
   35910:	cmp	r2, #2
   35914:	bne	35990 <__flatcc_fb_clear_parser@@Base+0xd4c>
   35918:	ldrh	r3, [r4, #16]
   3591c:	cmp	r3, #2
   35920:	beq	354d8 <__flatcc_fb_clear_parser@@Base+0x894>
   35924:	ldr	r1, [r4, #4]
   35928:	mov	r3, r0
   3592c:	str	r0, [sp, #4]
   35930:	str	r0, [sp]
   35934:	ldr	r2, [pc, #2316]	; 36248 <__flatcc_fb_clear_parser@@Base+0x1604>
   35938:	mov	r0, fp
   3593c:	bl	3052c <__flatcc_error_report@@Base>
   35940:	b	354d8 <__flatcc_fb_clear_parser@@Base+0x894>
   35944:	ldr	r0, [fp, #112]	; 0x70
   35948:	ldr	r2, [fp, #216]	; 0xd8
   3594c:	mov	r1, #0
   35950:	str	r0, [sp, #56]	; 0x38
   35954:	bl	140ac <memset@plt>
   35958:	mov	r3, #1
   3595c:	str	r3, [sp, #48]	; 0x30
   35960:	b	35790 <__flatcc_fb_clear_parser@@Base+0xb4c>
   35964:	ldr	r3, [r9, #16]
   35968:	ldr	r3, [r3, #16]
   3596c:	add	r3, r3, #996	; 0x3e4
   35970:	add	r3, r3, #3
   35974:	cmp	r3, #27
   35978:	movhi	r3, r8
   3597c:	ldrls	r2, [pc, #2188]	; 36210 <__flatcc_fb_clear_parser@@Base+0x15cc>
   35980:	addls	r3, r2, r3, lsl #2
   35984:	ldrls	r3, [r3, #28]
   35988:	str	r3, [r9, #16]
   3598c:	b	35470 <__flatcc_fb_clear_parser@@Base+0x82c>
   35990:	cmp	r2, #5
   35994:	bne	36610 <__flatcc_fb_clear_parser@@Base+0x19cc>
   35998:	ldrh	r3, [r4, #16]
   3599c:	cmp	r3, #5
   359a0:	beq	354d8 <__flatcc_fb_clear_parser@@Base+0x894>
   359a4:	ldr	r1, [r4, #4]
   359a8:	mov	r3, r0
   359ac:	str	r0, [sp, #4]
   359b0:	str	r0, [sp]
   359b4:	ldr	r2, [pc, #2144]	; 3621c <__flatcc_fb_clear_parser@@Base+0x15d8>
   359b8:	mov	r0, fp
   359bc:	bl	3052c <__flatcc_error_report@@Base>
   359c0:	b	354d8 <__flatcc_fb_clear_parser@@Base+0x894>
   359c4:	sub	r6, r6, r2
   359c8:	add	r0, r0, #1
   359cc:	add	r3, ip, r0
   359d0:	str	r3, [sp, #12]
   359d4:	b	35644 <__flatcc_fb_clear_parser@@Base+0xa00>
   359d8:	ldr	r9, [sp, #24]
   359dc:	cmp	r9, #0
   359e0:	beq	35fcc <__flatcc_fb_clear_parser@@Base+0x1388>
   359e4:	ldr	r3, [sp, #32]
   359e8:	cmp	r3, #0
   359ec:	beq	36d08 <__flatcc_fb_clear_parser@@Base+0x20c4>
   359f0:	ldr	r2, [sp, #28]
   359f4:	mov	r1, r3
   359f8:	cmp	r1, #1
   359fc:	ldrh	r3, [r2, #10]
   35a00:	orr	r3, r3, #8
   35a04:	strh	r3, [r2, #10]
   35a08:	beq	36d08 <__flatcc_fb_clear_parser@@Base+0x20c4>
   35a0c:	ldr	r3, [fp, #156]	; 0x9c
   35a10:	cmp	r3, #0
   35a14:	movne	r3, #0
   35a18:	strne	r3, [sp, #32]
   35a1c:	beq	360d8 <__flatcc_fb_clear_parser@@Base+0x1494>
   35a20:	ldr	r3, [sp, #24]
   35a24:	cmp	r3, #0
   35a28:	bne	36d08 <__flatcc_fb_clear_parser@@Base+0x20c4>
   35a2c:	ldr	r0, [sp, #32]
   35a30:	add	sp, sp, #236	; 0xec
   35a34:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   35a38:	ldr	r3, [r9, #16]
   35a3c:	cmp	r3, #4
   35a40:	bne	35738 <__flatcc_fb_clear_parser@@Base+0xaf4>
   35a44:	and	r6, r6, #3072	; 0xc00
   35a48:	cmp	r6, #3072	; 0xc00
   35a4c:	bne	35764 <__flatcc_fb_clear_parser@@Base+0xb20>
   35a50:	mov	r3, #0
   35a54:	ldr	r1, [r9, #4]
   35a58:	ldr	r2, [pc, #2028]	; 3624c <__flatcc_fb_clear_parser@@Base+0x1608>
   35a5c:	str	r3, [sp, #4]
   35a60:	str	r3, [sp]
   35a64:	mov	r0, fp
   35a68:	bl	3052c <__flatcc_error_report@@Base>
   35a6c:	b	35764 <__flatcc_fb_clear_parser@@Base+0xb20>
   35a70:	ldr	r1, [r4, #4]
   35a74:	mov	r3, r0
   35a78:	str	r0, [sp, #4]
   35a7c:	str	r0, [sp]
   35a80:	ldr	r2, [pc, #1980]	; 36244 <__flatcc_fb_clear_parser@@Base+0x1600>
   35a84:	mov	r0, fp
   35a88:	bl	3052c <__flatcc_error_report@@Base>
   35a8c:	b	352dc <__flatcc_fb_clear_parser@@Base+0x698>
   35a90:	ldr	r3, [r9, #16]
   35a94:	cmp	r3, #4
   35a98:	bne	35704 <__flatcc_fb_clear_parser@@Base+0xac0>
   35a9c:	b	35758 <__flatcc_fb_clear_parser@@Base+0xb14>
   35aa0:	cmp	r2, #2
   35aa4:	beq	36104 <__flatcc_fb_clear_parser@@Base+0x14c0>
   35aa8:	cmp	r2, #5
   35aac:	bne	365d8 <__flatcc_fb_clear_parser@@Base+0x1994>
   35ab0:	ldrh	r3, [r4, #16]
   35ab4:	cmp	r3, #5
   35ab8:	beq	352dc <__flatcc_fb_clear_parser@@Base+0x698>
   35abc:	ldr	r1, [r4, #4]
   35ac0:	mov	r3, r0
   35ac4:	str	r0, [sp, #4]
   35ac8:	str	r0, [sp]
   35acc:	mov	r2, sl
   35ad0:	mov	r0, fp
   35ad4:	bl	3052c <__flatcc_error_report@@Base>
   35ad8:	b	352dc <__flatcc_fb_clear_parser@@Base+0x698>
   35adc:	ldr	r1, [r9, #16]
   35ae0:	ldr	r3, [sp, #28]
   35ae4:	cmp	r1, #0
   35ae8:	ldr	r4, [r3, #12]
   35aec:	beq	35bb0 <__flatcc_fb_clear_parser@@Base+0xf6c>
   35af0:	mov	r6, r1
   35af4:	mov	r2, #0
   35af8:	b	35b04 <__flatcc_fb_clear_parser@@Base+0xec0>
   35afc:	mov	r2, r3
   35b00:	mov	r6, r5
   35b04:	ldr	r5, [r6]
   35b08:	add	r3, r2, #1
   35b0c:	cmp	r5, #0
   35b10:	bne	35afc <__flatcc_fb_clear_parser@@Base+0xeb8>
   35b14:	adds	r0, r4, #0
   35b18:	movne	r0, #1
   35b1c:	cmp	r3, #1
   35b20:	movne	r0, #0
   35b24:	cmp	r0, #0
   35b28:	addne	r3, fp, #524	; 0x20c
   35b2c:	strne	r3, [sp, #52]	; 0x34
   35b30:	bne	35f24 <__flatcc_fb_clear_parser@@Base+0x12e0>
   35b34:	ldr	r0, [sp, #8]
   35b38:	cmp	r3, #1
   35b3c:	movne	r3, r1
   35b40:	moveq	r3, #0
   35b44:	cmp	r0, #0
   35b48:	beq	35bb0 <__flatcc_fb_clear_parser@@Base+0xf6c>
   35b4c:	ldr	r0, [fp, #412]	; 0x19c
   35b50:	cmp	r0, #0
   35b54:	beq	35bb0 <__flatcc_fb_clear_parser@@Base+0xf6c>
   35b58:	rsb	r2, r2, #0
   35b5c:	mov	r1, r3
   35b60:	bl	2a880 <fb_scope_table_find@@Base>
   35b64:	cmp	r0, #0
   35b68:	beq	35bac <__flatcc_fb_clear_parser@@Base+0xf68>
   35b6c:	ldr	r3, [r6, #4]
   35b70:	add	r0, r0, #4
   35b74:	ldm	r3, {r1, r2}
   35b78:	bl	29a8c <fb_symbol_table_find@@Base>
   35b7c:	subs	r8, r0, #0
   35b80:	beq	35bac <__flatcc_fb_clear_parser@@Base+0xf68>
   35b84:	ldrh	r3, [r8, #8]
   35b88:	cmp	r3, #4
   35b8c:	bhi	35bac <__flatcc_fb_clear_parser@@Base+0xf68>
   35b90:	add	r3, fp, #524	; 0x20c
   35b94:	mov	r0, r3
   35b98:	ldr	r1, [r8, #16]
   35b9c:	str	r3, [sp, #52]	; 0x34
   35ba0:	bl	293b4 <ptr_set_find_item@@Base>
   35ba4:	cmp	r0, #0
   35ba8:	bne	3614c <__flatcc_fb_clear_parser@@Base+0x1508>
   35bac:	ldr	r1, [r9, #16]
   35bb0:	mov	r3, r9
   35bb4:	ldr	r2, [pc, #1684]	; 36250 <__flatcc_fb_clear_parser@@Base+0x160c>
   35bb8:	mov	r0, fp
   35bbc:	bl	314ec <error_ref_sym@@Base>
   35bc0:	mov	r3, #1
   35bc4:	strh	r3, [r9, #24]
   35bc8:	str	r3, [sp, #24]
   35bcc:	b	35428 <__flatcc_fb_clear_parser@@Base+0x7e4>
   35bd0:	ldrh	r3, [r9, #56]	; 0x38
   35bd4:	cmp	r3, #0
   35bd8:	bne	36670 <__flatcc_fb_clear_parser@@Base+0x1a2c>
   35bdc:	ldr	r6, [fp, #164]	; 0xa4
   35be0:	ldr	r3, [sp, #24]
   35be4:	cmp	r3, #0
   35be8:	bne	35c58 <__flatcc_fb_clear_parser@@Base+0x1014>
   35bec:	ldr	r3, [sp, #48]	; 0x30
   35bf0:	ldr	r2, [sp, #12]
   35bf4:	eor	r3, r3, #1
   35bf8:	ands	r2, r2, r3
   35bfc:	bne	36480 <__flatcc_fb_clear_parser@@Base+0x183c>
   35c00:	ldr	ip, [sp, #48]	; 0x30
   35c04:	cmp	r7, #0
   35c08:	movne	ip, #0
   35c0c:	andeq	ip, ip, #1
   35c10:	cmp	ip, #0
   35c14:	bne	36648 <__flatcc_fb_clear_parser@@Base+0x1a04>
   35c18:	cmp	r7, #0
   35c1c:	beq	366c8 <__flatcc_fb_clear_parser@@Base+0x1a84>
   35c20:	ldrh	r3, [r7, #16]
   35c24:	cmp	r3, #5
   35c28:	beq	36698 <__flatcc_fb_clear_parser@@Base+0x1a54>
   35c2c:	cmp	r3, #4
   35c30:	ldr	r1, [r7, #4]
   35c34:	mov	r3, ip
   35c38:	str	ip, [sp, #4]
   35c3c:	str	ip, [sp]
   35c40:	ldreq	r2, [pc, #1548]	; 36254 <__flatcc_fb_clear_parser@@Base+0x1610>
   35c44:	ldrne	r2, [pc, #1548]	; 36258 <__flatcc_fb_clear_parser@@Base+0x1614>
   35c48:	mov	r0, fp
   35c4c:	bl	3052c <__flatcc_error_report@@Base>
   35c50:	mov	r3, #1
   35c54:	str	r3, [sp, #24]
   35c58:	ldrh	r3, [r9, #72]	; 0x48
   35c5c:	tst	r3, #128	; 0x80
   35c60:	beq	35428 <__flatcc_fb_clear_parser@@Base+0x7e4>
   35c64:	ldr	r3, [sp, #32]
   35c68:	cmp	r6, #0
   35c6c:	add	r3, r3, #1
   35c70:	str	r3, [sp, #32]
   35c74:	bne	35428 <__flatcc_fb_clear_parser@@Base+0x7e4>
   35c78:	mov	r3, #0
   35c7c:	ldr	r1, [r9, #4]
   35c80:	ldr	r2, [pc, #1492]	; 3625c <__flatcc_fb_clear_parser@@Base+0x1618>
   35c84:	str	r3, [sp, #4]
   35c88:	str	r3, [sp]
   35c8c:	mov	r0, fp
   35c90:	bl	3052c <__flatcc_error_report@@Base>
   35c94:	b	35428 <__flatcc_fb_clear_parser@@Base+0x7e4>
   35c98:	ldrh	r6, [r9, #56]	; 0x38
   35c9c:	cmp	r6, #0
   35ca0:	beq	35be0 <__flatcc_fb_clear_parser@@Base+0xf9c>
   35ca4:	mov	r3, #0
   35ca8:	ldr	r1, [r9, #4]
   35cac:	ldr	r2, [pc, #1452]	; 36260 <__flatcc_fb_clear_parser@@Base+0x161c>
   35cb0:	str	r3, [sp, #4]
   35cb4:	str	r3, [sp]
   35cb8:	mov	r0, fp
   35cbc:	bl	3052c <__flatcc_error_report@@Base>
   35cc0:	mov	r3, #1
   35cc4:	strh	r3, [r9, #24]
   35cc8:	b	35428 <__flatcc_fb_clear_parser@@Base+0x7e4>
   35ccc:	ldrh	r3, [r9, #56]	; 0x38
   35cd0:	cmp	r3, #13
   35cd4:	addne	ip, r9, #48	; 0x30
   35cd8:	beq	36824 <__flatcc_fb_clear_parser@@Base+0x1be0>
   35cdc:	cmp	r3, #0
   35ce0:	bne	35cf8 <__flatcc_fb_clear_parser@@Base+0x10b4>
   35ce4:	mov	r2, #0
   35ce8:	mov	r3, #0
   35cec:	mov	r1, #5
   35cf0:	strd	r2, [r9, #48]	; 0x30
   35cf4:	strh	r1, [r9, #56]	; 0x38
   35cf8:	mov	r3, ip
   35cfc:	ldr	r2, [r9, #16]
   35d00:	mov	r1, r9
   35d04:	mov	r0, fp
   35d08:	bl	3975c <__flatcc_fb_coerce_scalar_type@@Base>
   35d0c:	cmp	r0, #0
   35d10:	bne	35d80 <__flatcc_fb_clear_parser@@Base+0x113c>
   35d14:	ldr	r2, [r9, #16]
   35d18:	ldr	r3, [pc, #1264]	; 36210 <__flatcc_fb_clear_parser@@Base+0x15cc>
   35d1c:	str	r0, [r9, #92]	; 0x5c
   35d20:	add	r3, r3, r2, lsl #2
   35d24:	mov	r6, #1
   35d28:	ldr	r3, [r3, #140]	; 0x8c
   35d2c:	str	r3, [r9, #88]	; 0x58
   35d30:	strh	r3, [r9, #74]	; 0x4a
   35d34:	b	35be0 <__flatcc_fb_clear_parser@@Base+0xf9c>
   35d38:	ldr	r2, [r9, #16]
   35d3c:	ldr	r3, [pc, #1228]	; 36210 <__flatcc_fb_clear_parser@@Base+0x15cc>
   35d40:	ldrh	r6, [r9, #56]	; 0x38
   35d44:	add	r3, r3, r2, lsl #2
   35d48:	mov	r2, #0
   35d4c:	ldr	r3, [r3, #140]	; 0x8c
   35d50:	cmp	r6, r2
   35d54:	str	r3, [r9, #88]	; 0x58
   35d58:	strh	r3, [r9, #74]	; 0x4a
   35d5c:	str	r2, [r9, #92]	; 0x5c
   35d60:	beq	35be0 <__flatcc_fb_clear_parser@@Base+0xf9c>
   35d64:	ldr	r1, [r9, #4]
   35d68:	mov	r3, r2
   35d6c:	str	r2, [sp, #4]
   35d70:	str	r2, [sp]
   35d74:	mov	r0, fp
   35d78:	ldr	r2, [pc, #1252]	; 36264 <__flatcc_fb_clear_parser@@Base+0x1620>
   35d7c:	bl	3052c <__flatcc_error_report@@Base>
   35d80:	mov	r3, #1
   35d84:	strh	r3, [r9, #24]
   35d88:	b	35428 <__flatcc_fb_clear_parser@@Base+0x7e4>
   35d8c:	ldr	r1, [r9, #16]
   35d90:	ldr	r3, [sp, #28]
   35d94:	cmp	r1, #0
   35d98:	ldr	r4, [r3, #12]
   35d9c:	beq	35e58 <__flatcc_fb_clear_parser@@Base+0x1214>
   35da0:	mov	r6, r1
   35da4:	mov	r2, #0
   35da8:	b	35db4 <__flatcc_fb_clear_parser@@Base+0x1170>
   35dac:	mov	r2, r3
   35db0:	mov	r6, r5
   35db4:	ldr	r5, [r6]
   35db8:	add	r3, r2, #1
   35dbc:	cmp	r5, #0
   35dc0:	bne	35dac <__flatcc_fb_clear_parser@@Base+0x1168>
   35dc4:	adds	r0, r4, #0
   35dc8:	movne	r0, #1
   35dcc:	cmp	r3, #1
   35dd0:	movne	r0, #0
   35dd4:	cmp	r0, #0
   35dd8:	addne	r3, fp, #524	; 0x20c
   35ddc:	strne	r3, [sp, #52]	; 0x34
   35de0:	bne	35e78 <__flatcc_fb_clear_parser@@Base+0x1234>
   35de4:	cmp	r3, #1
   35de8:	ldr	r3, [sp, #8]
   35dec:	moveq	r5, r0
   35df0:	movne	r5, r1
   35df4:	cmp	r3, #0
   35df8:	beq	35e58 <__flatcc_fb_clear_parser@@Base+0x1214>
   35dfc:	ldr	r0, [fp, #412]	; 0x19c
   35e00:	cmp	r0, #0
   35e04:	beq	35e58 <__flatcc_fb_clear_parser@@Base+0x1214>
   35e08:	rsb	r2, r2, #0
   35e0c:	mov	r1, r5
   35e10:	bl	2a880 <fb_scope_table_find@@Base>
   35e14:	cmp	r0, #0
   35e18:	beq	35e54 <__flatcc_fb_clear_parser@@Base+0x1210>
   35e1c:	ldr	r3, [r6, #4]
   35e20:	add	r0, r0, #4
   35e24:	ldm	r3, {r1, r2}
   35e28:	bl	29a8c <fb_symbol_table_find@@Base>
   35e2c:	subs	r8, r0, #0
   35e30:	beq	35e54 <__flatcc_fb_clear_parser@@Base+0x1210>
   35e34:	ldrh	r3, [r8, #8]
   35e38:	cmp	r3, #4
   35e3c:	bhi	35e54 <__flatcc_fb_clear_parser@@Base+0x1210>
   35e40:	ldr	r1, [r8, #16]
   35e44:	add	r0, fp, #524	; 0x20c
   35e48:	bl	293b4 <ptr_set_find_item@@Base>
   35e4c:	cmp	r0, #0
   35e50:	bne	36328 <__flatcc_fb_clear_parser@@Base+0x16e4>
   35e54:	ldr	r1, [r9, #16]
   35e58:	mov	r3, r9
   35e5c:	ldr	r2, [pc, #1028]	; 36268 <__flatcc_fb_clear_parser@@Base+0x1624>
   35e60:	mov	r0, fp
   35e64:	bl	314ec <error_ref_sym@@Base>
   35e68:	mov	r3, #1
   35e6c:	strh	r3, [r9, #24]
   35e70:	b	35428 <__flatcc_fb_clear_parser@@Base+0x7e4>
   35e74:	mov	r4, r0
   35e78:	ldr	r3, [r6, #4]
   35e7c:	add	r0, r4, #4
   35e80:	ldm	r3, {r1, r2}
   35e84:	bl	29a8c <fb_symbol_table_find@@Base>
   35e88:	subs	r8, r0, #0
   35e8c:	beq	35e9c <__flatcc_fb_clear_parser@@Base+0x1258>
   35e90:	ldrh	r3, [r8, #8]
   35e94:	cmp	r3, #4
   35e98:	bls	36314 <__flatcc_fb_clear_parser@@Base+0x16d0>
   35e9c:	ldr	r3, [r4]
   35ea0:	cmp	r3, #0
   35ea4:	beq	35e54 <__flatcc_fb_clear_parser@@Base+0x1210>
   35ea8:	mov	r8, #0
   35eac:	ldr	r3, [r3]
   35eb0:	add	r8, r8, #1
   35eb4:	cmp	r3, #0
   35eb8:	bne	35eac <__flatcc_fb_clear_parser@@Base+0x1268>
   35ebc:	ldr	r3, [sp, #8]
   35ec0:	cmp	r3, #0
   35ec4:	beq	35e54 <__flatcc_fb_clear_parser@@Base+0x1210>
   35ec8:	ldr	r0, [fp, #412]	; 0x19c
   35ecc:	rsb	r8, r8, #1
   35ed0:	b	35ef8 <__flatcc_fb_clear_parser@@Base+0x12b4>
   35ed4:	cmp	r0, #0
   35ed8:	beq	35ef4 <__flatcc_fb_clear_parser@@Base+0x12b0>
   35edc:	mov	r2, r8
   35ee0:	ldr	r1, [r4]
   35ee4:	bl	2a880 <fb_scope_table_find@@Base>
   35ee8:	cmp	r0, #0
   35eec:	bne	35e74 <__flatcc_fb_clear_parser@@Base+0x1230>
   35ef0:	ldr	r0, [fp, #412]	; 0x19c
   35ef4:	add	r8, r8, #1
   35ef8:	cmp	r8, #0
   35efc:	bne	35ed4 <__flatcc_fb_clear_parser@@Base+0x1290>
   35f00:	cmp	r0, #0
   35f04:	beq	35e54 <__flatcc_fb_clear_parser@@Base+0x1210>
   35f08:	mov	r1, r8
   35f0c:	mov	r2, r5
   35f10:	bl	2a880 <fb_scope_table_find@@Base>
   35f14:	subs	r4, r0, #0
   35f18:	bne	35e78 <__flatcc_fb_clear_parser@@Base+0x1234>
   35f1c:	b	35e54 <__flatcc_fb_clear_parser@@Base+0x1210>
   35f20:	mov	r4, r0
   35f24:	ldr	r3, [r6, #4]
   35f28:	add	r0, r4, #4
   35f2c:	ldm	r3, {r1, r2}
   35f30:	bl	29a8c <fb_symbol_table_find@@Base>
   35f34:	subs	r8, r0, #0
   35f38:	beq	35f48 <__flatcc_fb_clear_parser@@Base+0x1304>
   35f3c:	ldrh	r3, [r8, #8]
   35f40:	cmp	r3, #4
   35f44:	bls	36130 <__flatcc_fb_clear_parser@@Base+0x14ec>
   35f48:	ldr	r3, [r4]
   35f4c:	cmp	r3, #0
   35f50:	beq	35bac <__flatcc_fb_clear_parser@@Base+0xf68>
   35f54:	mov	r8, #0
   35f58:	ldr	r3, [r3]
   35f5c:	add	r8, r8, #1
   35f60:	cmp	r3, #0
   35f64:	bne	35f58 <__flatcc_fb_clear_parser@@Base+0x1314>
   35f68:	ldr	r3, [sp, #8]
   35f6c:	cmp	r3, #0
   35f70:	beq	35bac <__flatcc_fb_clear_parser@@Base+0xf68>
   35f74:	ldr	r0, [fp, #412]	; 0x19c
   35f78:	rsb	r8, r8, #1
   35f7c:	b	35fa4 <__flatcc_fb_clear_parser@@Base+0x1360>
   35f80:	cmp	r0, #0
   35f84:	beq	35fa0 <__flatcc_fb_clear_parser@@Base+0x135c>
   35f88:	mov	r2, r8
   35f8c:	ldr	r1, [r4]
   35f90:	bl	2a880 <fb_scope_table_find@@Base>
   35f94:	cmp	r0, #0
   35f98:	bne	35f20 <__flatcc_fb_clear_parser@@Base+0x12dc>
   35f9c:	ldr	r0, [fp, #412]	; 0x19c
   35fa0:	add	r8, r8, #1
   35fa4:	cmp	r8, #0
   35fa8:	bne	35f80 <__flatcc_fb_clear_parser@@Base+0x133c>
   35fac:	cmp	r0, #0
   35fb0:	beq	35bac <__flatcc_fb_clear_parser@@Base+0xf68>
   35fb4:	mov	r1, r8
   35fb8:	mov	r2, #0
   35fbc:	bl	2a880 <fb_scope_table_find@@Base>
   35fc0:	subs	r4, r0, #0
   35fc4:	bne	35f24 <__flatcc_fb_clear_parser@@Base+0x12e0>
   35fc8:	b	35bac <__flatcc_fb_clear_parser@@Base+0xf68>
   35fcc:	ldrd	r0, [sp, #16]
   35fd0:	ldr	r3, [sp, #48]	; 0x30
   35fd4:	ldr	ip, [sp, #28]
   35fd8:	cmp	r3, #0
   35fdc:	mov	r2, r0
   35fe0:	mov	r3, r1
   35fe4:	strd	r2, [ip, #96]	; 0x60
   35fe8:	beq	36ee8 <__flatcc_fb_clear_parser@@Base+0x22a4>
   35fec:	ldrd	r4, [sp, #40]	; 0x28
   35ff0:	mov	r3, r0
   35ff4:	orrs	r3, r3, r1
   35ff8:	movne	r3, #1
   35ffc:	moveq	r3, #0
   36000:	cmp	r1, r5
   36004:	cmpeq	r0, r4
   36008:	movhi	r3, #0
   3600c:	andls	r3, r3, #1
   36010:	cmp	r3, #0
   36014:	beq	364d8 <__flatcc_fb_clear_parser@@Base+0x1894>
   36018:	orrs	r3, r4, r5
   3601c:	beq	3609c <__flatcc_fb_clear_parser@@Base+0x1458>
   36020:	ldr	sl, [pc, #580]	; 3626c <__flatcc_fb_clear_parser@@Base+0x1628>
   36024:	ldr	r4, [sp, #56]	; 0x38
   36028:	mov	r3, #10
   3602c:	mov	r6, #0
   36030:	mov	r7, #0
   36034:	ldrb	r5, [r4], #1
   36038:	cmp	r5, #0
   3603c:	bne	36084 <__flatcc_fb_clear_parser@@Base+0x1440>
   36040:	cmp	r3, #0
   36044:	sub	r8, r3, #1
   36048:	beq	36940 <__flatcc_fb_clear_parser@@Base+0x1cfc>
   3604c:	mov	r2, r6
   36050:	mov	r3, r7
   36054:	mov	r1, sl
   36058:	add	r0, sp, #132	; 0x84
   3605c:	bl	14100 <sprintf@plt>
   36060:	ldr	r3, [sp, #28]
   36064:	add	r2, sp, #132	; 0x84
   36068:	mov	r0, fp
   3606c:	ldr	r1, [r3, #4]
   36070:	mov	r3, r9
   36074:	str	r5, [sp, #4]
   36078:	str	r5, [sp]
   3607c:	bl	3052c <__flatcc_error_report@@Base>
   36080:	mov	r3, r8
   36084:	ldrd	r0, [sp, #40]	; 0x28
   36088:	adds	r6, r6, #1
   3608c:	adc	r7, r7, #0
   36090:	cmp	r1, r7
   36094:	cmpeq	r0, r6
   36098:	bne	36034 <__flatcc_fb_clear_parser@@Base+0x13f0>
   3609c:	ldr	r3, [sp, #32]
   360a0:	cmp	r3, #0
   360a4:	beq	36d08 <__flatcc_fb_clear_parser@@Base+0x20c4>
   360a8:	ldr	r2, [sp, #28]
   360ac:	mov	r1, r3
   360b0:	cmp	r1, #1
   360b4:	ldrh	r3, [r2, #10]
   360b8:	orr	r3, r3, #8
   360bc:	strh	r3, [r2, #10]
   360c0:	beq	36d08 <__flatcc_fb_clear_parser@@Base+0x20c4>
   360c4:	ldr	r3, [fp, #156]	; 0x9c
   360c8:	cmp	r3, #0
   360cc:	moveq	r3, #1
   360d0:	streq	r3, [sp, #24]
   360d4:	bne	36d08 <__flatcc_fb_clear_parser@@Base+0x20c4>
   360d8:	ldr	r3, [sp, #28]
   360dc:	mov	r0, fp
   360e0:	ldr	r2, [pc, #392]	; 36270 <__flatcc_fb_clear_parser@@Base+0x162c>
   360e4:	ldr	r1, [r3, #4]
   360e8:	mov	r3, #0
   360ec:	str	r3, [sp, #4]
   360f0:	str	r3, [sp]
   360f4:	bl	3052c <__flatcc_error_report@@Base>
   360f8:	mvn	r3, #0
   360fc:	str	r3, [sp, #32]
   36100:	b	35a20 <__flatcc_fb_clear_parser@@Base+0xddc>
   36104:	ldrh	r3, [r4, #16]
   36108:	cmp	r3, #2
   3610c:	beq	352dc <__flatcc_fb_clear_parser@@Base+0x698>
   36110:	ldr	r1, [r4, #4]
   36114:	mov	r3, r0
   36118:	str	r0, [sp, #4]
   3611c:	str	r0, [sp]
   36120:	ldr	r2, [pc, #288]	; 36248 <__flatcc_fb_clear_parser@@Base+0x1604>
   36124:	mov	r0, fp
   36128:	bl	3052c <__flatcc_error_report@@Base>
   3612c:	b	352dc <__flatcc_fb_clear_parser@@Base+0x698>
   36130:	ldr	r1, [r8, #16]
   36134:	ldr	r0, [sp, #52]	; 0x34
   36138:	bl	293b4 <ptr_set_find_item@@Base>
   3613c:	ldr	r3, [sp, #52]	; 0x34
   36140:	cmp	r0, #0
   36144:	beq	35f48 <__flatcc_fb_clear_parser@@Base+0x1304>
   36148:	str	r3, [sp, #52]	; 0x34
   3614c:	ldrh	r3, [r8, #8]
   36150:	cmp	r3, #4
   36154:	ldrls	pc, [pc, r3, lsl #2]
   36158:	b	36740 <__flatcc_fb_clear_parser@@Base+0x1afc>
   3615c:	andeq	r6, r3, r0, ror r1
   36160:	andeq	r6, r3, r0, ror r1
   36164:	andeq	r6, r3, r4, lsr #10
   36168:	andeq	r6, r3, r0, lsl r5
   3616c:	andeq	r6, r3, r0, ror r1
   36170:	mov	r6, #0
   36174:	str	r8, [r9, #16]
   36178:	ldr	r3, [sp, #24]
   3617c:	ldrh	r0, [r8, #8]
   36180:	eor	r1, r3, #1
   36184:	ldrd	r2, [r8, #112]	; 0x70
   36188:	cmp	r0, #4
   3618c:	movne	r1, #0
   36190:	andeq	r1, r1, #1
   36194:	cmp	r1, #0
   36198:	ldrh	r1, [r8, #104]	; 0x68
   3619c:	strd	r2, [r9, #88]	; 0x58
   361a0:	mov	r3, #14
   361a4:	strh	r1, [r9, #74]	; 0x4a
   361a8:	strh	r3, [r9, #24]
   361ac:	beq	361d4 <__flatcc_fb_clear_parser@@Base+0x1590>
   361b0:	ldr	r3, [sp, #48]	; 0x30
   361b4:	cmp	r3, #0
   361b8:	ldrheq	r2, [sp, #16]
   361bc:	moveq	r3, #0
   361c0:	strdeq	r2, [r9, #96]	; 0x60
   361c4:	ldrd	r2, [sp, #16]
   361c8:	adds	r2, r2, #1
   361cc:	adc	r3, r3, #0
   361d0:	strd	r2, [sp, #16]
   361d4:	ldrh	r3, [r9, #56]	; 0x38
   361d8:	cmp	r3, #0
   361dc:	beq	36550 <__flatcc_fb_clear_parser@@Base+0x190c>
   361e0:	cmp	r0, #3
   361e4:	beq	36960 <__flatcc_fb_clear_parser@@Base+0x1d1c>
   361e8:	mov	r3, #0
   361ec:	ldr	r1, [r9, #4]
   361f0:	ldr	r2, [pc, #204]	; 362c4 <__flatcc_fb_clear_parser@@Base+0x1680>
   361f4:	str	r3, [sp, #4]
   361f8:	str	r3, [sp]
   361fc:	mov	r0, fp
   36200:	bl	3052c <__flatcc_error_report@@Base>
   36204:	mov	r3, #1
   36208:	strh	r3, [r9, #24]
   3620c:	b	35428 <__flatcc_fb_clear_parser@@Base+0x7e4>
   36210:	andeq	fp, r5, r8, ror #24
   36214:	andeq	ip, r5, ip, lsr #6
   36218:	andeq	ip, r5, r8, lsl #6
   3621c:	ldrdeq	ip, [r5], -ip	; <UNPREDICTABLE>
   36220:	andeq	ip, r5, r8, ror #4
   36224:	andeq	ip, r5, r8, lsr r2
   36228:	muleq	r5, r0, r2
   3622c:	andeq	ip, r5, r8, asr r3
   36230:	andeq	ip, r5, ip, ror #6
   36234:	andeq	r0, r0, r6, asr #31
   36238:			; <UNDEFINED> instruction: 0x0005c4b0
   3623c:	andeq	ip, r5, ip, ror #9
   36240:	strdeq	ip, [r5], -r8
   36244:	andeq	ip, r5, r8, lsl r2
   36248:			; <UNDEFINED> instruction: 0x0005c2b8
   3624c:	andeq	ip, r5, ip, lsr #10
   36250:	andeq	ip, r5, r8, lsr r6
   36254:	andeq	ip, r5, ip, lsl #18
   36258:	andeq	ip, r5, ip, lsr #18
   3625c:			; <UNDEFINED> instruction: 0x0005c9b0
   36260:	andeq	ip, r5, ip, lsl #12
   36264:			; <UNDEFINED> instruction: 0x0005c5bc
   36268:	andeq	ip, r5, r8, asr #15
   3626c:	strdeq	ip, [r5], -ip	; <UNPREDICTABLE>
   36270:	andeq	ip, r5, r0, lsr sl
   36274:	strdeq	ip, [r5], -ip	; <UNPREDICTABLE>
   36278:	andeq	ip, r5, r8, asr #16
   3627c:	andeq	ip, r5, r4, ror #10
   36280:			; <UNDEFINED> instruction: 0x0005c3b8
   36284:	andeq	ip, r5, r8, ror r4
   36288:	andeq	ip, r5, r0, ror r8
   3628c:	muleq	r5, r0, r3
   36290:	andeq	ip, r5, r0, lsr #13
   36294:	andeq	ip, r5, r0, lsl #15
   36298:	andeq	ip, r5, r8, lsl #6
   3629c:			; <UNDEFINED> instruction: 0x0005c8b0
   362a0:	andeq	ip, r5, r8, ror #11
   362a4:	andeq	ip, r5, r0, lsl #19
   362a8:	andeq	ip, r5, ip, asr #13
   362ac:			; <UNDEFINED> instruction: 0x0005c1b8
   362b0:	andeq	ip, r5, r0, ror #2
   362b4:	andeq	ip, r5, r8, asr #18
   362b8:	andeq	ip, r5, r4, ror #19
   362bc:	andeq	ip, r5, r0, asr r7
   362c0:	andeq	ip, r5, r8, lsl #11
   362c4:	strdeq	ip, [r5], -r4
   362c8:	andeq	ip, r5, r0, asr #8
   362cc:	andeq	ip, r5, ip, ror #17
   362d0:	andeq	ip, r5, r4
   362d4:	andeq	ip, r5, r4, asr r0
   362d8:	andeq	ip, r5, r8, ror #12
   362dc:	andeq	ip, r5, r4, lsl #2
   362e0:	andeq	ip, r5, r0, lsr #1
   362e4:	andeq	ip, r5, r4, lsl r4
   362e8:	andeq	ip, r5, ip, lsr #6
   362ec:	andeq	fp, r5, r4, ror #26
   362f0:	andeq	r0, r0, fp, asr r1
   362f4:	andeq	ip, r5, r4, lsl #11
   362f8:	andeq	ip, r5, r0, lsr #14
   362fc:	andeq	r0, r0, r2, lsl #6
   36300:	andeq	ip, r5, r8, lsl #4
   36304:	andeq	r0, r0, r1, lsl #6
   36308:	strdeq	fp, [r5], -ip
   3630c:	strheq	r5, [r4], -r4
   36310:	andeq	fp, r5, r4, lsr #26
   36314:	ldr	r1, [r8, #16]
   36318:	ldr	r0, [sp, #52]	; 0x34
   3631c:	bl	293b4 <ptr_set_find_item@@Base>
   36320:	cmp	r0, #0
   36324:	beq	35e9c <__flatcc_fb_clear_parser@@Base+0x1258>
   36328:	ldrh	r3, [r8, #8]
   3632c:	cmp	r3, #4
   36330:	bhi	363a0 <__flatcc_fb_clear_parser@@Base+0x175c>
   36334:	mov	r4, #1
   36338:	lsl	r3, r4, r3
   3633c:	tst	r3, #27
   36340:	beq	363a0 <__flatcc_fb_clear_parser@@Base+0x175c>
   36344:	ldrh	r6, [r9, #56]	; 0x38
   36348:	cmp	r6, #0
   3634c:	bne	36ce4 <__flatcc_fb_clear_parser@@Base+0x20a0>
   36350:	str	r8, [r9, #16]
   36354:	ldrh	r0, [r8, #8]
   36358:	ldrd	r2, [r8, #112]	; 0x70
   3635c:	ldrh	r1, [r8, #104]	; 0x68
   36360:	cmp	r0, #4
   36364:	strd	r2, [r9, #88]	; 0x58
   36368:	mov	r3, #15
   3636c:	strh	r1, [r9, #74]	; 0x4a
   36370:	strh	r3, [r9, #24]
   36374:	bne	35be0 <__flatcc_fb_clear_parser@@Base+0xf9c>
   36378:	ldr	r3, [sp, #24]
   3637c:	cmp	r3, #0
   36380:	beq	36de8 <__flatcc_fb_clear_parser@@Base+0x21a4>
   36384:	ldrh	r3, [r9, #72]	; 0x48
   36388:	tst	r3, #128	; 0x80
   3638c:	beq	35428 <__flatcc_fb_clear_parser@@Base+0x7e4>
   36390:	ldr	r3, [sp, #32]
   36394:	add	r3, r3, #1
   36398:	str	r3, [sp, #32]
   3639c:	b	35c78 <__flatcc_fb_clear_parser@@Base+0x1034>
   363a0:	mov	r2, #0
   363a4:	ldr	r3, [r9, #16]
   363a8:	ldr	r1, [r9, #4]
   363ac:	mov	r0, fp
   363b0:	str	r2, [sp, #4]
   363b4:	str	r2, [sp]
   363b8:	ldr	r2, [pc, #-332]	; 36274 <__flatcc_fb_clear_parser@@Base+0x1630>
   363bc:	bl	3052c <__flatcc_error_report@@Base>
   363c0:	mov	r3, #1
   363c4:	strh	r3, [r9, #24]
   363c8:	b	35428 <__flatcc_fb_clear_parser@@Base+0x7e4>
   363cc:	mov	r3, #0
   363d0:	ldr	r1, [r9, #4]
   363d4:	ldr	r2, [pc, #-356]	; 36278 <__flatcc_fb_clear_parser@@Base+0x1634>
   363d8:	str	r3, [sp, #4]
   363dc:	str	r3, [sp]
   363e0:	mov	r0, fp
   363e4:	bl	3052c <__flatcc_error_report@@Base>
   363e8:	mov	r3, #1
   363ec:	strh	r3, [r9, #24]
   363f0:	b	35428 <__flatcc_fb_clear_parser@@Base+0x7e4>
   363f4:	ldr	r2, [sp, #24]
   363f8:	ldr	r1, [r9, #4]
   363fc:	mov	r3, r2
   36400:	str	r2, [sp, #4]
   36404:	str	r2, [sp]
   36408:	mov	r0, fp
   3640c:	ldr	r2, [pc, #-408]	; 3627c <__flatcc_fb_clear_parser@@Base+0x1638>
   36410:	bl	3052c <__flatcc_error_report@@Base>
   36414:	mov	r3, #1
   36418:	str	r3, [sp, #24]
   3641c:	b	357c8 <__flatcc_fb_clear_parser@@Base+0xb84>
   36420:	tst	r6, #1024	; 0x400
   36424:	bne	35758 <__flatcc_fb_clear_parser@@Base+0xb14>
   36428:	b	35724 <__flatcc_fb_clear_parser@@Base+0xae0>
   3642c:	mov	r3, #0
   36430:	ldr	r1, [r7, #4]
   36434:	ldr	r2, [pc, #-444]	; 36280 <__flatcc_fb_clear_parser@@Base+0x163c>
   36438:	str	r3, [sp, #4]
   3643c:	str	r3, [sp]
   36440:	mov	r0, fp
   36444:	bl	3052c <__flatcc_error_report@@Base>
   36448:	ldrh	r6, [r9, #72]	; 0x48
   3644c:	b	356dc <__flatcc_fb_clear_parser@@Base+0xa98>
   36450:	strh	r4, [r9, #72]	; 0x48
   36454:	ldr	r6, [sp, #36]	; 0x24
   36458:	b	356f0 <__flatcc_fb_clear_parser@@Base+0xaac>
   3645c:	mov	r3, #0
   36460:	ldr	r1, [r9, #4]
   36464:	ldr	r2, [pc, #-488]	; 36284 <__flatcc_fb_clear_parser@@Base+0x1640>
   36468:	str	r3, [sp, #4]
   3646c:	str	r3, [sp]
   36470:	mov	r0, fp
   36474:	bl	3052c <__flatcc_error_report@@Base>
   36478:	ldrh	r6, [r9, #72]	; 0x48
   3647c:	b	356f0 <__flatcc_fb_clear_parser@@Base+0xaac>
   36480:	mov	r3, #0
   36484:	ldr	r1, [r7, #4]
   36488:	ldr	r2, [pc, #-520]	; 36288 <__flatcc_fb_clear_parser@@Base+0x1644>
   3648c:	str	r3, [sp, #4]
   36490:	str	r3, [sp]
   36494:	mov	r0, fp
   36498:	bl	3052c <__flatcc_error_report@@Base>
   3649c:	mov	r3, #1
   364a0:	str	r3, [sp, #24]
   364a4:	b	35c58 <__flatcc_fb_clear_parser@@Base+0x1014>
   364a8:	ldr	r1, [r9, #4]
   364ac:	mov	r3, r8
   364b0:	mov	r0, fp
   364b4:	str	r8, [sp, #4]
   364b8:	str	r8, [sp]
   364bc:	ldr	r2, [pc, #-568]	; 3628c <__flatcc_fb_clear_parser@@Base+0x1648>
   364c0:	bl	3052c <__flatcc_error_report@@Base>
   364c4:	mvn	r3, #0
   364c8:	str	r3, [sp, #32]
   364cc:	ldr	r0, [sp, #32]
   364d0:	add	sp, sp, #236	; 0xec
   364d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   364d8:	ldr	r3, [sp, #32]
   364dc:	cmp	r3, #0
   364e0:	beq	35a2c <__flatcc_fb_clear_parser@@Base+0xde8>
   364e4:	mov	r1, r3
   364e8:	ldrh	r3, [ip, #10]
   364ec:	cmp	r1, #1
   364f0:	orr	r3, r3, #8
   364f4:	strh	r3, [ip, #10]
   364f8:	beq	36508 <__flatcc_fb_clear_parser@@Base+0x18c4>
   364fc:	ldr	r3, [fp, #156]	; 0x9c
   36500:	cmp	r3, #0
   36504:	beq	360d8 <__flatcc_fb_clear_parser@@Base+0x1494>
   36508:	str	r9, [sp, #32]
   3650c:	b	35a2c <__flatcc_fb_clear_parser@@Base+0xde8>
   36510:	ldrh	r3, [r9, #72]	; 0x48
   36514:	tst	r3, #256	; 0x100
   36518:	bne	36d84 <__flatcc_fb_clear_parser@@Base+0x2140>
   3651c:	ldr	r6, [fp, #148]	; 0x94
   36520:	b	36174 <__flatcc_fb_clear_parser@@Base+0x1530>
   36524:	mov	r2, #0
   36528:	ldr	r3, [r8, #4]
   3652c:	ldr	r1, [r9, #4]
   36530:	mov	r0, fp
   36534:	str	r2, [sp, #4]
   36538:	str	r2, [sp]
   3653c:	ldr	r2, [pc, #-692]	; 36290 <__flatcc_fb_clear_parser@@Base+0x164c>
   36540:	bl	3052c <__flatcc_error_report@@Base>
   36544:	mov	r3, #1
   36548:	strh	r3, [r9, #24]
   3654c:	b	35428 <__flatcc_fb_clear_parser@@Base+0x7e4>
   36550:	cmp	r0, #3
   36554:	bne	35be0 <__flatcc_fb_clear_parser@@Base+0xf9c>
   36558:	mov	r2, #0
   3655c:	mov	r3, #0
   36560:	mov	r4, r9
   36564:	mov	r1, #5
   36568:	strh	r1, [r9, #56]	; 0x38
   3656c:	mov	r0, fp
   36570:	strd	r2, [r4, #48]!	; 0x30
   36574:	mov	r1, r8
   36578:	ldr	r2, [r8, #40]	; 0x28
   3657c:	mov	r3, r4
   36580:	bl	3975c <__flatcc_fb_coerce_scalar_type@@Base>
   36584:	cmp	r0, #0
   36588:	bne	35d80 <__flatcc_fb_clear_parser@@Base+0x113c>
   3658c:	ldr	r3, [fp, #212]	; 0xd4
   36590:	cmp	r3, #0
   36594:	beq	35be0 <__flatcc_fb_clear_parser@@Base+0xf9c>
   36598:	ldr	r0, [r9, #16]
   3659c:	mov	r1, r4
   365a0:	add	r0, r0, #72	; 0x48
   365a4:	bl	41a80 <fb_value_set_find_item@@Base>
   365a8:	cmp	r0, #0
   365ac:	bne	35be0 <__flatcc_fb_clear_parser@@Base+0xf9c>
   365b0:	ldr	r3, [r8, #4]
   365b4:	ldr	r1, [r9, #4]
   365b8:	ldr	r2, [pc, #-812]	; 36294 <__flatcc_fb_clear_parser@@Base+0x1650>
   365bc:	str	r0, [sp, #4]
   365c0:	str	r0, [sp]
   365c4:	mov	r0, fp
   365c8:	bl	3052c <__flatcc_error_report@@Base>
   365cc:	mov	r3, #1
   365d0:	strh	r3, [r9, #24]
   365d4:	b	35428 <__flatcc_fb_clear_parser@@Base+0x7e4>
   365d8:	cmp	r2, #4
   365dc:	bne	36c84 <__flatcc_fb_clear_parser@@Base+0x2040>
   365e0:	ldrh	r3, [r4, #16]
   365e4:	sub	r3, r3, #4
   365e8:	cmp	r3, #1
   365ec:	bls	352dc <__flatcc_fb_clear_parser@@Base+0x698>
   365f0:	ldr	r1, [r4, #4]
   365f4:	mov	r3, r0
   365f8:	str	r0, [sp, #4]
   365fc:	str	r0, [sp]
   36600:	mov	r2, r9
   36604:	mov	r0, fp
   36608:	bl	3052c <__flatcc_error_report@@Base>
   3660c:	b	352dc <__flatcc_fb_clear_parser@@Base+0x698>
   36610:	cmp	r2, #4
   36614:	bne	36e38 <__flatcc_fb_clear_parser@@Base+0x21f4>
   36618:	ldrh	r3, [r4, #16]
   3661c:	sub	r3, r3, #4
   36620:	cmp	r3, #1
   36624:	bls	354d8 <__flatcc_fb_clear_parser@@Base+0x894>
   36628:	ldr	r1, [r4, #4]
   3662c:	mov	r3, r0
   36630:	str	r0, [sp, #4]
   36634:	str	r0, [sp]
   36638:	ldr	r2, [pc, #-936]	; 36298 <__flatcc_fb_clear_parser@@Base+0x1654>
   3663c:	mov	r0, fp
   36640:	bl	3052c <__flatcc_error_report@@Base>
   36644:	b	354d8 <__flatcc_fb_clear_parser@@Base+0x894>
   36648:	ldr	r1, [r9, #4]
   3664c:	mov	r3, r2
   36650:	str	r2, [sp, #4]
   36654:	str	r2, [sp]
   36658:	mov	r0, fp
   3665c:	ldr	r2, [pc, #-968]	; 3629c <__flatcc_fb_clear_parser@@Base+0x1658>
   36660:	bl	3052c <__flatcc_error_report@@Base>
   36664:	mov	r3, #1
   36668:	str	r3, [sp, #24]
   3666c:	b	35c58 <__flatcc_fb_clear_parser@@Base+0x1014>
   36670:	mov	r3, #0
   36674:	ldr	r1, [r9, #4]
   36678:	ldr	r2, [pc, #-992]	; 362a0 <__flatcc_fb_clear_parser@@Base+0x165c>
   3667c:	str	r3, [sp, #4]
   36680:	str	r3, [sp]
   36684:	mov	r0, fp
   36688:	bl	3052c <__flatcc_error_report@@Base>
   3668c:	mov	r3, #1
   36690:	strh	r3, [r9, #24]
   36694:	b	35428 <__flatcc_fb_clear_parser@@Base+0x7e4>
   36698:	ldrd	r0, [r7, #8]
   3669c:	ldrd	r2, [fp, #216]	; 0xd8
   366a0:	cmp	r1, r3
   366a4:	cmpeq	r0, r2
   366a8:	bcs	36d3c <__flatcc_fb_clear_parser@@Base+0x20f8>
   366ac:	ldrd	r2, [sp, #40]	; 0x28
   366b0:	mov	r1, #0
   366b4:	uxth	r0, r0
   366b8:	cmp	r3, r1
   366bc:	cmpeq	r2, r0
   366c0:	strd	r0, [r9, #96]	; 0x60
   366c4:	strdcc	r0, [sp, #40]	; 0x28
   366c8:	ldr	r3, [sp, #48]	; 0x30
   366cc:	cmp	r3, #0
   366d0:	beq	36718 <__flatcc_fb_clear_parser@@Base+0x1ad4>
   366d4:	ldr	r3, [r9, #96]	; 0x60
   366d8:	ldr	r1, [sp, #56]	; 0x38
   366dc:	add	r2, r1, r3
   366e0:	ldrb	r3, [r1, r3]
   366e4:	cmp	r3, #2
   366e8:	beq	367d8 <__flatcc_fb_clear_parser@@Base+0x1b94>
   366ec:	cmp	r3, #0
   366f0:	moveq	r3, #1
   366f4:	strbeq	r3, [r2]
   366f8:	bne	36720 <__flatcc_fb_clear_parser@@Base+0x1adc>
   366fc:	cmp	r8, #0
   36700:	streq	r8, [sp, #24]
   36704:	beq	35c58 <__flatcc_fb_clear_parser@@Base+0x1014>
   36708:	ldrh	r3, [r8, #8]
   3670c:	cmp	r3, #4
   36710:	movne	r3, #0
   36714:	beq	3676c <__flatcc_fb_clear_parser@@Base+0x1b28>
   36718:	str	r3, [sp, #24]
   3671c:	b	35c58 <__flatcc_fb_clear_parser@@Base+0x1014>
   36720:	mov	r3, #0
   36724:	ldr	r1, [r7, #4]
   36728:	ldr	r2, [pc, #-1164]	; 362a4 <__flatcc_fb_clear_parser@@Base+0x1660>
   3672c:	str	r3, [sp, #4]
   36730:	str	r3, [sp]
   36734:	mov	r0, fp
   36738:	bl	3052c <__flatcc_error_report@@Base>
   3673c:	b	366fc <__flatcc_fb_clear_parser@@Base+0x1ab8>
   36740:	mov	r2, #0
   36744:	ldr	r3, [r8, #4]
   36748:	ldr	r1, [r9, #4]
   3674c:	mov	r0, fp
   36750:	str	r2, [sp, #4]
   36754:	str	r2, [sp]
   36758:	ldr	r2, [pc, #-1208]	; 362a8 <__flatcc_fb_clear_parser@@Base+0x1664>
   3675c:	bl	3052c <__flatcc_error_report@@Base>
   36760:	mov	r3, #1
   36764:	strh	r3, [r9, #24]
   36768:	b	35428 <__flatcc_fb_clear_parser@@Base+0x7e4>
   3676c:	ldrd	r0, [r9, #96]	; 0x60
   36770:	ldrh	r2, [r9, #24]
   36774:	cmp	r1, #0
   36778:	cmpeq	r0, #1
   3677c:	bls	36d64 <__flatcc_fb_clear_parser@@Base+0x2120>
   36780:	ldr	r3, [sp, #56]	; 0x38
   36784:	sub	r0, r0, #1
   36788:	add	r1, r3, r0
   3678c:	ldrb	r3, [r3, r0]
   36790:	cmp	r3, #2
   36794:	beq	36da4 <__flatcc_fb_clear_parser@@Base+0x2160>
   36798:	cmp	r3, #0
   3679c:	beq	36ac0 <__flatcc_fb_clear_parser@@Base+0x1e7c>
   367a0:	ldr	r1, [r7, #4]
   367a4:	ldr	r0, [pc, #-1280]	; 362ac <__flatcc_fb_clear_parser@@Base+0x1668>
   367a8:	ldr	ip, [pc, #-1280]	; 362b0 <__flatcc_fb_clear_parser@@Base+0x166c>
   367ac:	mov	r3, #0
   367b0:	cmp	r2, #11
   367b4:	moveq	r0, ip
   367b8:	mov	r2, r0
   367bc:	str	r3, [sp, #4]
   367c0:	str	r3, [sp]
   367c4:	mov	r0, fp
   367c8:	bl	3052c <__flatcc_error_report@@Base>
   367cc:	ldr	r3, [sp, #48]	; 0x30
   367d0:	str	r3, [sp, #24]
   367d4:	b	35c58 <__flatcc_fb_clear_parser@@Base+0x1014>
   367d8:	mov	r3, #0
   367dc:	ldr	r1, [r7, #4]
   367e0:	ldr	r2, [pc, #-1332]	; 362b4 <__flatcc_fb_clear_parser@@Base+0x1670>
   367e4:	str	r3, [sp, #4]
   367e8:	str	r3, [sp]
   367ec:	mov	r0, fp
   367f0:	bl	3052c <__flatcc_error_report@@Base>
   367f4:	ldr	r3, [sp, #48]	; 0x30
   367f8:	str	r3, [sp, #24]
   367fc:	b	35c58 <__flatcc_fb_clear_parser@@Base+0x1014>
   36800:	ldr	r6, [sp, #36]	; 0x24
   36804:	b	353c0 <__flatcc_fb_clear_parser@@Base+0x77c>
   36808:	mov	r2, r6
   3680c:	mov	r6, #0
   36810:	b	359c8 <__flatcc_fb_clear_parser@@Base+0xd84>
   36814:	mov	r2, lr
   36818:	str	ip, [sp, #12]
   3681c:	mov	r6, #0
   36820:	b	35644 <__flatcc_fb_clear_parser@@Base+0xa00>
   36824:	ldr	r1, [r9, #48]	; 0x30
   36828:	ldr	r3, [sp, #28]
   3682c:	cmp	r1, #0
   36830:	ldr	r4, [r3, #12]
   36834:	beq	36e6c <__flatcc_fb_clear_parser@@Base+0x2228>
   36838:	mov	r3, #0
   3683c:	mov	r2, r3
   36840:	mov	r5, r1
   36844:	mov	r0, r3
   36848:	b	36858 <__flatcc_fb_clear_parser@@Base+0x1c14>
   3684c:	mov	r0, r5
   36850:	mov	r2, r3
   36854:	mov	r5, ip
   36858:	ldr	ip, [r5]
   3685c:	add	r3, r2, #1
   36860:	cmp	ip, #0
   36864:	bne	3684c <__flatcc_fb_clear_parser@@Base+0x1c08>
   36868:	cmp	r0, #0
   3686c:	mov	r6, r0
   36870:	beq	36aa4 <__flatcc_fb_clear_parser@@Base+0x1e60>
   36874:	adds	r3, r4, #0
   36878:	movne	r3, #1
   3687c:	cmp	r2, #1
   36880:	movne	r3, #0
   36884:	cmp	r3, #0
   36888:	bne	369ec <__flatcc_fb_clear_parser@@Base+0x1da8>
   3688c:	cmp	r2, #1
   36890:	moveq	ip, r3
   36894:	ldr	r3, [sp, #8]
   36898:	movne	ip, r1
   3689c:	cmp	r3, #0
   368a0:	beq	36aa4 <__flatcc_fb_clear_parser@@Base+0x1e60>
   368a4:	ldr	r0, [fp, #412]	; 0x19c
   368a8:	cmp	r0, #0
   368ac:	beq	36aa4 <__flatcc_fb_clear_parser@@Base+0x1e60>
   368b0:	rsb	r2, r2, #1
   368b4:	mov	r1, ip
   368b8:	bl	2a880 <fb_scope_table_find@@Base>
   368bc:	cmp	r0, #0
   368c0:	beq	36aa0 <__flatcc_fb_clear_parser@@Base+0x1e5c>
   368c4:	ldr	r3, [r6, #4]
   368c8:	add	r0, r0, #4
   368cc:	ldm	r3, {r1, r2}
   368d0:	bl	29a8c <fb_symbol_table_find@@Base>
   368d4:	subs	r3, r0, #0
   368d8:	beq	36aa0 <__flatcc_fb_clear_parser@@Base+0x1e5c>
   368dc:	ldrh	r2, [r3, #8]
   368e0:	cmp	r2, #4
   368e4:	bhi	36aa0 <__flatcc_fb_clear_parser@@Base+0x1e5c>
   368e8:	ldr	r1, [r3, #16]
   368ec:	add	r0, fp, #524	; 0x20c
   368f0:	str	r3, [sp, #52]	; 0x34
   368f4:	bl	293b4 <ptr_set_find_item@@Base>
   368f8:	ldr	r3, [sp, #52]	; 0x34
   368fc:	cmp	r0, #0
   36900:	beq	36aa0 <__flatcc_fb_clear_parser@@Base+0x1e5c>
   36904:	ldrh	r2, [r3, #8]
   36908:	cmp	r2, #3
   3690c:	bne	36aa0 <__flatcc_fb_clear_parser@@Base+0x1e5c>
   36910:	ldr	r1, [r5, #4]
   36914:	add	r0, r3, #56	; 0x38
   36918:	ldm	r1, {r1, r2}
   3691c:	bl	29a8c <fb_symbol_table_find@@Base>
   36920:	subs	r3, r0, #0
   36924:	beq	36aa0 <__flatcc_fb_clear_parser@@Base+0x1e5c>
   36928:	add	r3, r3, #48	; 0x30
   3692c:	add	ip, r9, #48	; 0x30
   36930:	ldm	r3, {r0, r1, r2, r3}
   36934:	stm	ip, {r0, r1, r2, r3}
   36938:	ldrh	r3, [r9, #56]	; 0x38
   3693c:	b	35cdc <__flatcc_fb_clear_parser@@Base+0x1098>
   36940:	ldr	r2, [sp, #28]
   36944:	mov	r0, fp
   36948:	ldr	r1, [r2, #4]
   3694c:	str	r3, [sp, #4]
   36950:	str	r3, [sp]
   36954:	ldr	r2, [pc, #-1700]	; 362b8 <__flatcc_fb_clear_parser@@Base+0x1674>
   36958:	bl	3052c <__flatcc_error_report@@Base>
   3695c:	b	3609c <__flatcc_fb_clear_parser@@Base+0x1458>
   36960:	cmp	r3, #13
   36964:	beq	36ad0 <__flatcc_fb_clear_parser@@Base+0x1e8c>
   36968:	add	r4, r9, #48	; 0x30
   3696c:	mov	r3, r4
   36970:	ldr	r2, [r8, #40]	; 0x28
   36974:	mov	r1, r9
   36978:	mov	r0, fp
   3697c:	bl	3975c <__flatcc_fb_coerce_scalar_type@@Base>
   36980:	cmp	r0, #0
   36984:	bne	35d80 <__flatcc_fb_clear_parser@@Base+0x113c>
   36988:	ldr	r3, [fp, #212]	; 0xd4
   3698c:	cmp	r3, #0
   36990:	beq	35be0 <__flatcc_fb_clear_parser@@Base+0xf9c>
   36994:	ldr	r0, [r9, #16]
   36998:	mov	r1, r4
   3699c:	add	r0, r0, #72	; 0x48
   369a0:	bl	41a80 <fb_value_set_find_item@@Base>
   369a4:	cmp	r0, #0
   369a8:	bne	35be0 <__flatcc_fb_clear_parser@@Base+0xf9c>
   369ac:	ldr	r1, [r9, #4]
   369b0:	mov	r3, r0
   369b4:	str	r0, [sp, #4]
   369b8:	str	r0, [sp]
   369bc:	ldr	r2, [pc, #-1800]	; 362bc <__flatcc_fb_clear_parser@@Base+0x1678>
   369c0:	mov	r0, fp
   369c4:	bl	3052c <__flatcc_error_report@@Base>
   369c8:	mov	r3, #1
   369cc:	strh	r3, [r9, #24]
   369d0:	b	35428 <__flatcc_fb_clear_parser@@Base+0x7e4>
   369d4:	mov	r1, r2
   369d8:	mov	r3, #0
   369dc:	mov	r2, #0
   369e0:	str	r9, [sp, #32]
   369e4:	strd	r2, [r1, #96]	; 0x60
   369e8:	b	35a2c <__flatcc_fb_clear_parser@@Base+0xde8>
   369ec:	add	r3, fp, #524	; 0x20c
   369f0:	str	ip, [sp, #60]	; 0x3c
   369f4:	str	r3, [sp, #52]	; 0x34
   369f8:	str	r5, [sp, #64]	; 0x40
   369fc:	ldr	r3, [r6, #4]
   36a00:	add	r0, r4, #4
   36a04:	ldm	r3, {r1, r2}
   36a08:	bl	29a8c <fb_symbol_table_find@@Base>
   36a0c:	subs	r3, r0, #0
   36a10:	beq	36a20 <__flatcc_fb_clear_parser@@Base+0x1ddc>
   36a14:	ldrh	r2, [r3, #8]
   36a18:	cmp	r2, #4
   36a1c:	bls	36cb8 <__flatcc_fb_clear_parser@@Base+0x2074>
   36a20:	ldr	r2, [r4]
   36a24:	cmp	r2, #0
   36a28:	beq	36aa0 <__flatcc_fb_clear_parser@@Base+0x1e5c>
   36a2c:	mov	r3, #0
   36a30:	ldr	r2, [r2]
   36a34:	add	r3, r3, #1
   36a38:	cmp	r2, #0
   36a3c:	bne	36a30 <__flatcc_fb_clear_parser@@Base+0x1dec>
   36a40:	ldr	r2, [sp, #8]
   36a44:	cmp	r2, #0
   36a48:	beq	36aa0 <__flatcc_fb_clear_parser@@Base+0x1e5c>
   36a4c:	ldr	r0, [fp, #412]	; 0x19c
   36a50:	rsb	r5, r3, #1
   36a54:	b	36a7c <__flatcc_fb_clear_parser@@Base+0x1e38>
   36a58:	cmp	r0, #0
   36a5c:	beq	36a78 <__flatcc_fb_clear_parser@@Base+0x1e34>
   36a60:	mov	r2, r5
   36a64:	ldr	r1, [r4]
   36a68:	bl	2a880 <fb_scope_table_find@@Base>
   36a6c:	cmp	r0, #0
   36a70:	bne	36cdc <__flatcc_fb_clear_parser@@Base+0x2098>
   36a74:	ldr	r0, [fp, #412]	; 0x19c
   36a78:	add	r5, r5, #1
   36a7c:	cmp	r5, #0
   36a80:	bne	36a58 <__flatcc_fb_clear_parser@@Base+0x1e14>
   36a84:	cmp	r0, #0
   36a88:	beq	36aa0 <__flatcc_fb_clear_parser@@Base+0x1e5c>
   36a8c:	mov	r1, r5
   36a90:	ldr	r2, [sp, #60]	; 0x3c
   36a94:	bl	2a880 <fb_scope_table_find@@Base>
   36a98:	subs	r4, r0, #0
   36a9c:	bne	369fc <__flatcc_fb_clear_parser@@Base+0x1db8>
   36aa0:	ldr	r1, [r9, #48]	; 0x30
   36aa4:	mov	r3, r9
   36aa8:	ldr	r2, [pc, #-2032]	; 362c0 <__flatcc_fb_clear_parser@@Base+0x167c>
   36aac:	mov	r0, fp
   36ab0:	bl	314ec <error_ref_sym@@Base>
   36ab4:	mov	r3, #1
   36ab8:	strh	r3, [r9, #24]
   36abc:	b	35428 <__flatcc_fb_clear_parser@@Base+0x7e4>
   36ac0:	mov	r2, #2
   36ac4:	str	r3, [sp, #24]
   36ac8:	strb	r2, [r1]
   36acc:	b	35c58 <__flatcc_fb_clear_parser@@Base+0x1014>
   36ad0:	ldr	r3, [r9, #48]	; 0x30
   36ad4:	ldr	r2, [sp, #28]
   36ad8:	cmp	r3, #0
   36adc:	str	r3, [sp, #64]	; 0x40
   36ae0:	ldr	r4, [r2, #12]
   36ae4:	beq	36e6c <__flatcc_fb_clear_parser@@Base+0x2228>
   36ae8:	mov	r2, #0
   36aec:	b	36afc <__flatcc_fb_clear_parser@@Base+0x1eb8>
   36af0:	mov	r5, r3
   36af4:	mov	r2, r0
   36af8:	mov	r3, r1
   36afc:	ldr	r1, [r3]
   36b00:	add	r0, r2, #1
   36b04:	cmp	r1, #0
   36b08:	bne	36af0 <__flatcc_fb_clear_parser@@Base+0x1eac>
   36b0c:	cmp	r5, #0
   36b10:	str	r3, [sp, #68]	; 0x44
   36b14:	beq	36b90 <__flatcc_fb_clear_parser@@Base+0x1f4c>
   36b18:	adds	r3, r4, #0
   36b1c:	movne	r3, #1
   36b20:	cmp	r2, #1
   36b24:	movne	r3, #0
   36b28:	cmp	r3, #0
   36b2c:	strne	r1, [sp, #72]	; 0x48
   36b30:	strne	r6, [sp, #60]	; 0x3c
   36b34:	bne	36bd8 <__flatcc_fb_clear_parser@@Base+0x1f94>
   36b38:	cmp	r2, #1
   36b3c:	ldr	r1, [sp, #64]	; 0x40
   36b40:	moveq	r1, r3
   36b44:	ldr	r3, [sp, #8]
   36b48:	cmp	r3, #0
   36b4c:	beq	36b90 <__flatcc_fb_clear_parser@@Base+0x1f4c>
   36b50:	ldr	r0, [fp, #412]	; 0x19c
   36b54:	cmp	r0, #0
   36b58:	beq	36b90 <__flatcc_fb_clear_parser@@Base+0x1f4c>
   36b5c:	rsb	r2, r2, #1
   36b60:	bl	2a880 <fb_scope_table_find@@Base>
   36b64:	cmp	r0, #0
   36b68:	beq	36b90 <__flatcc_fb_clear_parser@@Base+0x1f4c>
   36b6c:	ldr	r3, [r5, #4]
   36b70:	add	r0, r0, #4
   36b74:	ldm	r3, {r1, r2}
   36b78:	bl	29a8c <fb_symbol_table_find@@Base>
   36b7c:	subs	r3, r0, #0
   36b80:	beq	36b90 <__flatcc_fb_clear_parser@@Base+0x1f4c>
   36b84:	ldrh	r2, [r3, #8]
   36b88:	cmp	r2, #4
   36b8c:	bls	36e80 <__flatcc_fb_clear_parser@@Base+0x223c>
   36b90:	ldr	r3, [sp, #64]	; 0x40
   36b94:	ldr	r3, [r3]
   36b98:	cmp	r3, #0
   36b9c:	moveq	r3, r8
   36ba0:	bne	36ea0 <__flatcc_fb_clear_parser@@Base+0x225c>
   36ba4:	ldr	r2, [sp, #68]	; 0x44
   36ba8:	add	r0, r3, #56	; 0x38
   36bac:	ldr	r1, [r2, #4]
   36bb0:	ldm	r1, {r1, r2}
   36bb4:	bl	29a8c <fb_symbol_table_find@@Base>
   36bb8:	subs	r3, r0, #0
   36bbc:	beq	36ea0 <__flatcc_fb_clear_parser@@Base+0x225c>
   36bc0:	add	r3, r3, #48	; 0x30
   36bc4:	add	ip, r9, #48	; 0x30
   36bc8:	ldm	r3, {r0, r1, r2, r3}
   36bcc:	stm	ip, {r0, r1, r2, r3}
   36bd0:	b	35be0 <__flatcc_fb_clear_parser@@Base+0xf9c>
   36bd4:	mov	r4, r0
   36bd8:	ldr	r3, [r5, #4]
   36bdc:	add	r0, r4, #4
   36be0:	ldm	r3, {r1, r2}
   36be4:	bl	29a8c <fb_symbol_table_find@@Base>
   36be8:	subs	r3, r0, #0
   36bec:	beq	36bfc <__flatcc_fb_clear_parser@@Base+0x1fb8>
   36bf0:	ldrh	r2, [r3, #8]
   36bf4:	cmp	r2, #4
   36bf8:	bls	36db8 <__flatcc_fb_clear_parser@@Base+0x2174>
   36bfc:	ldr	r2, [r4]
   36c00:	cmp	r2, #0
   36c04:	beq	36c7c <__flatcc_fb_clear_parser@@Base+0x2038>
   36c08:	mov	r3, #0
   36c0c:	ldr	r2, [r2]
   36c10:	add	r3, r3, #1
   36c14:	cmp	r2, #0
   36c18:	bne	36c0c <__flatcc_fb_clear_parser@@Base+0x1fc8>
   36c1c:	ldr	r2, [sp, #8]
   36c20:	cmp	r2, #0
   36c24:	beq	36c7c <__flatcc_fb_clear_parser@@Base+0x2038>
   36c28:	ldr	r0, [fp, #412]	; 0x19c
   36c2c:	rsb	r6, r3, #1
   36c30:	b	36c58 <__flatcc_fb_clear_parser@@Base+0x2014>
   36c34:	cmp	r0, #0
   36c38:	beq	36c54 <__flatcc_fb_clear_parser@@Base+0x2010>
   36c3c:	mov	r2, r6
   36c40:	ldr	r1, [r4]
   36c44:	bl	2a880 <fb_scope_table_find@@Base>
   36c48:	cmp	r0, #0
   36c4c:	bne	36bd4 <__flatcc_fb_clear_parser@@Base+0x1f90>
   36c50:	ldr	r0, [fp, #412]	; 0x19c
   36c54:	add	r6, r6, #1
   36c58:	cmp	r6, #0
   36c5c:	bne	36c34 <__flatcc_fb_clear_parser@@Base+0x1ff0>
   36c60:	cmp	r0, #0
   36c64:	beq	36c7c <__flatcc_fb_clear_parser@@Base+0x2038>
   36c68:	mov	r1, r6
   36c6c:	ldr	r2, [sp, #72]	; 0x48
   36c70:	bl	2a880 <fb_scope_table_find@@Base>
   36c74:	subs	r4, r0, #0
   36c78:	bne	36bd8 <__flatcc_fb_clear_parser@@Base+0x1f94>
   36c7c:	ldr	r6, [sp, #60]	; 0x3c
   36c80:	b	36b90 <__flatcc_fb_clear_parser@@Base+0x1f4c>
   36c84:	cmp	r2, #6
   36c88:	bne	352dc <__flatcc_fb_clear_parser@@Base+0x698>
   36c8c:	ldrh	r3, [r4, #16]
   36c90:	cmp	r3, #6
   36c94:	beq	352dc <__flatcc_fb_clear_parser@@Base+0x698>
   36c98:	mov	r3, #0
   36c9c:	ldr	r1, [r4, #4]
   36ca0:	mov	r2, r8
   36ca4:	str	r3, [sp, #4]
   36ca8:	str	r3, [sp]
   36cac:	mov	r0, fp
   36cb0:	bl	3052c <__flatcc_error_report@@Base>
   36cb4:	b	352dc <__flatcc_fb_clear_parser@@Base+0x698>
   36cb8:	ldr	r1, [r3, #16]
   36cbc:	ldr	r0, [sp, #52]	; 0x34
   36cc0:	str	r3, [sp, #68]	; 0x44
   36cc4:	bl	293b4 <ptr_set_find_item@@Base>
   36cc8:	ldr	r3, [sp, #68]	; 0x44
   36ccc:	cmp	r0, #0
   36cd0:	beq	36a20 <__flatcc_fb_clear_parser@@Base+0x1ddc>
   36cd4:	ldr	r5, [sp, #64]	; 0x40
   36cd8:	b	36904 <__flatcc_fb_clear_parser@@Base+0x1cc0>
   36cdc:	mov	r4, r0
   36ce0:	b	369fc <__flatcc_fb_clear_parser@@Base+0x1db8>
   36ce4:	mov	r3, #0
   36ce8:	ldr	r1, [r9, #4]
   36cec:	ldr	r2, [pc, #-2608]	; 362c4 <__flatcc_fb_clear_parser@@Base+0x1680>
   36cf0:	str	r3, [sp, #4]
   36cf4:	str	r3, [sp]
   36cf8:	mov	r0, fp
   36cfc:	bl	3052c <__flatcc_error_report@@Base>
   36d00:	strh	r4, [r9, #24]
   36d04:	b	35428 <__flatcc_fb_clear_parser@@Base+0x7e4>
   36d08:	mvn	r3, #0
   36d0c:	str	r3, [sp, #32]
   36d10:	b	35a2c <__flatcc_fb_clear_parser@@Base+0xde8>
   36d14:	mov	r2, #0
   36d18:	ldr	r3, [r3, #4]
   36d1c:	ldr	r1, [r7, #4]
   36d20:	mov	r0, fp
   36d24:	str	r2, [sp, #4]
   36d28:	str	r2, [sp]
   36d2c:	ldr	r2, [pc, #-2668]	; 362c8 <__flatcc_fb_clear_parser@@Base+0x1684>
   36d30:	bl	3052c <__flatcc_error_report@@Base>
   36d34:	ldrh	r6, [r9, #72]	; 0x48
   36d38:	b	356dc <__flatcc_fb_clear_parser@@Base+0xa98>
   36d3c:	ldr	r1, [r9, #4]
   36d40:	mov	r3, ip
   36d44:	str	ip, [sp, #4]
   36d48:	str	ip, [sp]
   36d4c:	ldr	r2, [pc, #-2696]	; 362cc <__flatcc_fb_clear_parser@@Base+0x1688>
   36d50:	mov	r0, fp
   36d54:	bl	3052c <__flatcc_error_report@@Base>
   36d58:	mov	r3, #1
   36d5c:	str	r3, [sp, #24]
   36d60:	b	35c58 <__flatcc_fb_clear_parser@@Base+0x1014>
   36d64:	ldr	r0, [pc, #-2716]	; 362d0 <__flatcc_fb_clear_parser@@Base+0x168c>
   36d68:	ldr	ip, [pc, #-2716]	; 362d4 <__flatcc_fb_clear_parser@@Base+0x1690>
   36d6c:	cmp	r2, #11
   36d70:	moveq	ip, r0
   36d74:	ldr	r1, [r7, #4]
   36d78:	mov	r3, #0
   36d7c:	mov	r2, ip
   36d80:	b	367bc <__flatcc_fb_clear_parser@@Base+0x1b78>
   36d84:	mov	r3, #0
   36d88:	ldr	r1, [r9, #4]
   36d8c:	ldr	r2, [pc, #-2748]	; 362d8 <__flatcc_fb_clear_parser@@Base+0x1694>
   36d90:	str	r3, [sp, #4]
   36d94:	str	r3, [sp]
   36d98:	mov	r0, fp
   36d9c:	bl	3052c <__flatcc_error_report@@Base>
   36da0:	b	3651c <__flatcc_fb_clear_parser@@Base+0x18d8>
   36da4:	ldr	r1, [r7, #4]
   36da8:	mov	r3, #0
   36dac:	ldr	r0, [pc, #-2776]	; 362dc <__flatcc_fb_clear_parser@@Base+0x1698>
   36db0:	ldr	ip, [pc, #-2776]	; 362e0 <__flatcc_fb_clear_parser@@Base+0x169c>
   36db4:	b	367b0 <__flatcc_fb_clear_parser@@Base+0x1b6c>
   36db8:	ldr	r1, [r3, #16]
   36dbc:	ldr	r0, [sp, #52]	; 0x34
   36dc0:	str	r3, [sp, #76]	; 0x4c
   36dc4:	bl	293b4 <ptr_set_find_item@@Base>
   36dc8:	ldr	r3, [sp, #76]	; 0x4c
   36dcc:	cmp	r0, #0
   36dd0:	beq	36bfc <__flatcc_fb_clear_parser@@Base+0x1fb8>
   36dd4:	ldr	r6, [sp, #60]	; 0x3c
   36dd8:	ldrh	r2, [r3, #8]
   36ddc:	cmp	r2, #3
   36de0:	bne	36b90 <__flatcc_fb_clear_parser@@Base+0x1f4c>
   36de4:	b	36ba4 <__flatcc_fb_clear_parser@@Base+0x1f60>
   36de8:	ldr	r3, [sp, #48]	; 0x30
   36dec:	cmp	r3, #0
   36df0:	ldrheq	r2, [sp, #16]
   36df4:	moveq	r3, #0
   36df8:	strdeq	r2, [r9, #96]	; 0x60
   36dfc:	ldrd	r2, [sp, #16]
   36e00:	ldr	r6, [sp, #24]
   36e04:	adds	r2, r2, #1
   36e08:	adc	r3, r3, #0
   36e0c:	strd	r2, [sp, #16]
   36e10:	b	35bec <__flatcc_fb_clear_parser@@Base+0xfa8>
   36e14:	ldr	r3, [r3, #4]
   36e18:	ldr	r1, [r7, #4]
   36e1c:	ldr	r2, [pc, #-2880]	; 362e4 <__flatcc_fb_clear_parser@@Base+0x16a0>
   36e20:	str	r0, [sp, #4]
   36e24:	str	r0, [sp]
   36e28:	mov	r0, fp
   36e2c:	bl	3052c <__flatcc_error_report@@Base>
   36e30:	ldrh	r6, [r9, #72]	; 0x48
   36e34:	b	356dc <__flatcc_fb_clear_parser@@Base+0xa98>
   36e38:	cmp	r2, #6
   36e3c:	bne	354d8 <__flatcc_fb_clear_parser@@Base+0x894>
   36e40:	ldrh	r3, [r4, #16]
   36e44:	cmp	r3, #6
   36e48:	beq	354d8 <__flatcc_fb_clear_parser@@Base+0x894>
   36e4c:	mov	r3, #0
   36e50:	ldr	r1, [r4, #4]
   36e54:	ldr	r2, [pc, #-2932]	; 362e8 <__flatcc_fb_clear_parser@@Base+0x16a4>
   36e58:	str	r3, [sp, #4]
   36e5c:	str	r3, [sp]
   36e60:	mov	r0, fp
   36e64:	bl	3052c <__flatcc_error_report@@Base>
   36e68:	b	354d8 <__flatcc_fb_clear_parser@@Base+0x894>
   36e6c:	ldr	r3, [pc, #-2952]	; 362ec <__flatcc_fb_clear_parser@@Base+0x16a8>
   36e70:	ldr	r2, [pc, #-2952]	; 362f0 <__flatcc_fb_clear_parser@@Base+0x16ac>
   36e74:	ldr	r1, [pc, #-2932]	; 36308 <__flatcc_fb_clear_parser@@Base+0x16c4>
   36e78:	ldr	r0, [pc, #-2956]	; 362f4 <__flatcc_fb_clear_parser@@Base+0x16b0>
   36e7c:	bl	14148 <__assert_fail@plt>
   36e80:	ldr	r0, [sp, #52]	; 0x34
   36e84:	ldr	r1, [r3, #16]
   36e88:	str	r3, [sp, #52]	; 0x34
   36e8c:	bl	293b4 <ptr_set_find_item@@Base>
   36e90:	ldr	r3, [sp, #52]	; 0x34
   36e94:	cmp	r0, #0
   36e98:	bne	36dd8 <__flatcc_fb_clear_parser@@Base+0x2194>
   36e9c:	b	36b90 <__flatcc_fb_clear_parser@@Base+0x1f4c>
   36ea0:	mov	r3, r9
   36ea4:	ldr	r2, [pc, #-2996]	; 362f8 <__flatcc_fb_clear_parser@@Base+0x16b4>
   36ea8:	ldr	r1, [r9, #48]	; 0x30
   36eac:	mov	r0, fp
   36eb0:	bl	314ec <error_ref_sym@@Base>
   36eb4:	mov	r3, #1
   36eb8:	strh	r3, [r9, #24]
   36ebc:	b	35428 <__flatcc_fb_clear_parser@@Base+0x7e4>
   36ec0:	ldr	r3, [pc, #-3000]	; 36310 <__flatcc_fb_clear_parser@@Base+0x16cc>
   36ec4:	ldr	r2, [pc, #-3024]	; 362fc <__flatcc_fb_clear_parser@@Base+0x16b8>
   36ec8:	ldr	r1, [pc, #-3016]	; 36308 <__flatcc_fb_clear_parser@@Base+0x16c4>
   36ecc:	ldr	r0, [pc, #-3028]	; 36300 <__flatcc_fb_clear_parser@@Base+0x16bc>
   36ed0:	bl	14148 <__assert_fail@plt>
   36ed4:	ldr	r3, [pc, #-3020]	; 36310 <__flatcc_fb_clear_parser@@Base+0x16cc>
   36ed8:	ldr	r2, [pc, #-3036]	; 36304 <__flatcc_fb_clear_parser@@Base+0x16c0>
   36edc:	ldr	r1, [pc, #-3036]	; 36308 <__flatcc_fb_clear_parser@@Base+0x16c4>
   36ee0:	ldr	r0, [pc, #-3036]	; 3630c <__flatcc_fb_clear_parser@@Base+0x16c8>
   36ee4:	bl	14148 <__assert_fail@plt>
   36ee8:	ldr	r3, [sp, #32]
   36eec:	cmp	r3, #0
   36ef0:	beq	35a2c <__flatcc_fb_clear_parser@@Base+0xde8>
   36ef4:	mov	r1, r3
   36ef8:	ldrh	r3, [ip, #10]
   36efc:	cmp	r1, #1
   36f00:	orr	r3, r3, #8
   36f04:	strh	r3, [ip, #10]
   36f08:	bne	35a0c <__flatcc_fb_clear_parser@@Base+0xdc8>
   36f0c:	b	36508 <__flatcc_fb_clear_parser@@Base+0x18c4>
   36f10:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   36f14:	mov	sl, r1
   36f18:	ldrh	r9, [r1, #8]
   36f1c:	sub	sp, sp, #124	; 0x7c
   36f20:	mov	r6, r0
   36f24:	cmp	r9, #4
   36f28:	beq	37550 <__flatcc_fb_clear_parser@@Base+0x290c>
   36f2c:	cmp	r9, #3
   36f30:	bne	37aac <__flatcc_fb_clear_parser@@Base+0x2e68>
   36f34:	ldrh	r3, [r1, #48]	; 0x30
   36f38:	cmp	r3, #0
   36f3c:	beq	379dc <__flatcc_fb_clear_parser@@Base+0x2d98>
   36f40:	cmp	r3, #8
   36f44:	bne	37994 <__flatcc_fb_clear_parser@@Base+0x2d50>
   36f48:	ldr	r3, [r1, #40]	; 0x28
   36f4c:	ldr	r3, [r3, #16]
   36f50:	add	r3, r3, #996	; 0x3e4
   36f54:	add	r3, r3, #3
   36f58:	cmp	r3, #27
   36f5c:	bhi	37070 <__flatcc_fb_clear_parser@@Base+0x242c>
   36f60:	ldr	r2, [pc, #2960]	; 37af8 <__flatcc_fb_clear_parser@@Base+0x2eb4>
   36f64:	mov	r1, #0
   36f68:	add	r3, r2, r3, lsl #2
   36f6c:	ldr	r5, [r3, #28]
   36f70:	add	r2, r2, r5, lsl #2
   36f74:	ldr	r2, [r2, #140]	; 0x8c
   36f78:	uxth	r3, r2
   36f7c:	str	r5, [sl, #40]	; 0x28
   36f80:	str	r2, [sl, #112]	; 0x70
   36f84:	str	r1, [sl, #116]	; 0x74
   36f88:	strh	r3, [sl, #104]	; 0x68
   36f8c:	ldr	r4, [sl, #28]
   36f90:	add	r8, sp, #72	; 0x48
   36f94:	mov	r0, r8
   36f98:	mov	r2, #48	; 0x30
   36f9c:	mov	r1, #0
   36fa0:	bl	140ac <memset@plt>
   36fa4:	cmp	r4, #0
   36fa8:	beq	37814 <__flatcc_fb_clear_parser@@Base+0x2bd0>
   36fac:	ldr	fp, [pc, #2884]	; 37af8 <__flatcc_fb_clear_parser@@Base+0x2eb4>
   36fb0:	mov	r5, #100	; 0x64
   36fb4:	mov	r7, #0
   36fb8:	b	37018 <__flatcc_fb_clear_parser@@Base+0x23d4>
   36fbc:	mov	r3, #1
   36fc0:	ldr	r0, [r8, r2, lsl #2]
   36fc4:	orr	r7, r7, r3, lsl r2
   36fc8:	cmp	r0, #0
   36fcc:	uxth	r7, r7
   36fd0:	lsl	r3, r2, #2
   36fd4:	beq	37084 <__flatcc_fb_clear_parser@@Base+0x2440>
   36fd8:	mov	r3, #0
   36fdc:	ldr	r1, [r4, #4]
   36fe0:	ldr	r2, [pc, #2836]	; 37afc <__flatcc_fb_clear_parser@@Base+0x2eb8>
   36fe4:	str	r3, [sp, #4]
   36fe8:	str	r3, [sp]
   36fec:	mov	r0, r6
   36ff0:	bl	3052c <__flatcc_error_report@@Base>
   36ff4:	subs	r5, r5, #1
   36ff8:	ldr	r4, [r4]
   36ffc:	movne	r2, #1
   37000:	moveq	r2, #0
   37004:	cmp	r4, #0
   37008:	moveq	r2, #0
   3700c:	andne	r2, r2, #1
   37010:	cmp	r2, #0
   37014:	beq	370c4 <__flatcc_fb_clear_parser@@Base+0x2480>
   37018:	ldr	r3, [r4, #4]
   3701c:	ldr	r0, [r6, #412]	; 0x19c
   37020:	ldm	r3, {r1, r2}
   37024:	add	r0, r0, #16
   37028:	bl	41118 <fb_name_table_find@@Base>
   3702c:	cmp	r0, #0
   37030:	beq	37428 <__flatcc_fb_clear_parser@@Base+0x27e4>
   37034:	ldr	r2, [r0, #24]
   37038:	cmp	r2, #0
   3703c:	beq	36ff4 <__flatcc_fb_clear_parser@@Base+0x23b0>
   37040:	mov	r3, #32
   37044:	asr	r3, r3, r2
   37048:	ands	r0, r3, #1
   3704c:	bne	36fbc <__flatcc_fb_clear_parser@@Base+0x2378>
   37050:	ldr	r1, [r4, #4]
   37054:	mov	r3, r0
   37058:	str	r0, [sp, #4]
   3705c:	str	r0, [sp]
   37060:	ldr	r2, [pc, #2712]	; 37b00 <__flatcc_fb_clear_parser@@Base+0x2ebc>
   37064:	mov	r0, r6
   37068:	bl	3052c <__flatcc_error_report@@Base>
   3706c:	b	36ff4 <__flatcc_fb_clear_parser@@Base+0x23b0>
   37070:	mov	r3, #0
   37074:	mov	r2, r3
   37078:	mov	r1, r3
   3707c:	mov	r5, r3
   37080:	b	36f7c <__flatcc_fb_clear_parser@@Base+0x2338>
   37084:	add	r3, fp, r3
   37088:	str	r4, [r8, r2, lsl #2]
   3708c:	ldr	r2, [r3, #204]	; 0xcc
   37090:	cmp	r2, #0
   37094:	bne	374a0 <__flatcc_fb_clear_parser@@Base+0x285c>
   37098:	ldrh	r3, [r4, #16]
   3709c:	cmp	r3, #0
   370a0:	beq	36ff4 <__flatcc_fb_clear_parser@@Base+0x23b0>
   370a4:	ldr	r1, [r4, #4]
   370a8:	mov	r3, r2
   370ac:	str	r2, [sp, #4]
   370b0:	str	r2, [sp]
   370b4:	mov	r0, r6
   370b8:	ldr	r2, [pc, #2628]	; 37b04 <__flatcc_fb_clear_parser@@Base+0x2ec0>
   370bc:	bl	3052c <__flatcc_error_report@@Base>
   370c0:	b	36ff4 <__flatcc_fb_clear_parser@@Base+0x23b0>
   370c4:	cmp	r4, #0
   370c8:	beq	376a4 <__flatcc_fb_clear_parser@@Base+0x2a60>
   370cc:	ldr	r1, [r4, #4]
   370d0:	mov	r3, r2
   370d4:	str	r2, [sp, #4]
   370d8:	str	r2, [sp]
   370dc:	mov	r0, r6
   370e0:	ldr	r2, [pc, #2592]	; 37b08 <__flatcc_fb_clear_parser@@Base+0x2ec4>
   370e4:	bl	3052c <__flatcc_error_report@@Base>
   370e8:	ldr	r5, [sl, #40]	; 0x28
   370ec:	and	r3, r7, #32
   370f0:	cmp	r3, #0
   370f4:	strh	r7, [sl, #92]	; 0x5c
   370f8:	streq	r3, [sp, #12]
   370fc:	beq	37114 <__flatcc_fb_clear_parser@@Base+0x24d0>
   37100:	mov	r2, #0
   37104:	mov	r3, #0
   37108:	mov	r1, #1
   3710c:	str	r1, [sp, #12]
   37110:	strd	r2, [sp, #40]	; 0x28
   37114:	cmp	r5, #5
   37118:	bne	37448 <__flatcc_fb_clear_parser@@Base+0x2804>
   3711c:	add	fp, sp, #40	; 0x28
   37120:	mov	r2, #0
   37124:	mov	r3, #6
   37128:	strb	r2, [sp, #40]	; 0x28
   3712c:	strh	r3, [sp, #48]	; 0x30
   37130:	ldm	fp, {r0, r1, r2, r3}
   37134:	add	ip, sp, #56	; 0x38
   37138:	ldr	r5, [sl, #20]
   3713c:	cmp	r5, #0
   37140:	stm	ip, {r0, r1, r2, r3}
   37144:	addne	r3, r6, #352	; 0x160
   37148:	addne	r8, sl, #56	; 0x38
   3714c:	strne	r3, [sp, #16]
   37150:	movne	r7, #1
   37154:	bne	371ac <__flatcc_fb_clear_parser@@Base+0x2568>
   37158:	b	3728c <__flatcc_fb_clear_parser@@Base+0x2648>
   3715c:	ldr	r3, [r0, #4]
   37160:	add	r2, r6, #68	; 0x44
   37164:	cmp	r3, r2
   37168:	moveq	r3, #0
   3716c:	movne	r2, #0
   37170:	ldr	r1, [r5, #4]
   37174:	ldreq	r2, [pc, #2448]	; 37b0c <__flatcc_fb_clear_parser@@Base+0x2ec8>
   37178:	streq	r3, [sp, #4]
   3717c:	streq	r3, [sp]
   37180:	strne	r2, [sp, #4]
   37184:	strne	r2, [sp]
   37188:	mov	r0, r6
   3718c:	ldrne	r2, [pc, #2428]	; 37b10 <__flatcc_fb_clear_parser@@Base+0x2ecc>
   37190:	bl	3052c <__flatcc_error_report@@Base>
   37194:	mov	r3, #1
   37198:	strh	r3, [r5, #24]
   3719c:	ldr	r5, [r5]
   371a0:	mov	r7, #0
   371a4:	cmp	r5, r7
   371a8:	beq	3728c <__flatcc_fb_clear_parser@@Base+0x2648>
   371ac:	mov	r2, #1
   371b0:	mov	r1, r5
   371b4:	mov	r0, r8
   371b8:	bl	29a64 <fb_symbol_table_insert_item@@Base>
   371bc:	cmp	r0, #0
   371c0:	bne	3715c <__flatcc_fb_clear_parser@@Base+0x2518>
   371c4:	ldrh	r3, [r5, #8]
   371c8:	cmp	r3, #5
   371cc:	bne	377f0 <__flatcc_fb_clear_parser@@Base+0x2bac>
   371d0:	ldr	r3, [r5, #64]	; 0x40
   371d4:	cmp	r3, #0
   371d8:	bne	37a50 <__flatcc_fb_clear_parser@@Base+0x2e0c>
   371dc:	cmp	r9, #4
   371e0:	beq	37234 <__flatcc_fb_clear_parser@@Base+0x25f0>
   371e4:	ldrh	r1, [r5, #56]	; 0x38
   371e8:	eor	r7, r7, #1
   371ec:	cmp	r1, #0
   371f0:	movne	r3, #0
   371f4:	andeq	r3, r7, #1
   371f8:	cmp	r3, #0
   371fc:	bne	37298 <__flatcc_fb_clear_parser@@Base+0x2654>
   37200:	ldr	r3, [sp, #12]
   37204:	cmp	r3, #0
   37208:	beq	37ac0 <__flatcc_fb_clear_parser@@Base+0x2e7c>
   3720c:	cmp	r1, #0
   37210:	beq	37390 <__flatcc_fb_clear_parser@@Base+0x274c>
   37214:	cmp	r1, #5
   37218:	bne	37a00 <__flatcc_fb_clear_parser@@Base+0x2dbc>
   3721c:	add	r3, r5, #48	; 0x30
   37220:	ldr	ip, [sl, #40]	; 0x28
   37224:	ldm	r3, {r0, r1, r2, r3}
   37228:	stm	fp, {r0, r1, r2, r3}
   3722c:	ldrd	r2, [sp, #40]	; 0x28
   37230:	b	37398 <__flatcc_fb_clear_parser@@Base+0x2754>
   37234:	ldr	r1, [r5, #4]
   37238:	add	r2, r6, #68	; 0x44
   3723c:	cmp	r1, r2
   37240:	beq	37628 <__flatcc_fb_clear_parser@@Base+0x29e4>
   37244:	ldrh	r2, [r5, #24]
   37248:	cmp	r2, #10
   3724c:	beq	37540 <__flatcc_fb_clear_parser@@Base+0x28fc>
   37250:	cmp	r2, #12
   37254:	beq	376b0 <__flatcc_fb_clear_parser@@Base+0x2a6c>
   37258:	cmp	r2, #1
   3725c:	beq	3719c <__flatcc_fb_clear_parser@@Base+0x2558>
   37260:	str	r3, [sp, #4]
   37264:	str	r3, [sp]
   37268:	ldr	r2, [pc, #2212]	; 37b14 <__flatcc_fb_clear_parser@@Base+0x2ed0>
   3726c:	mov	r0, r6
   37270:	bl	3052c <__flatcc_error_report@@Base>
   37274:	mov	r3, #1
   37278:	strh	r3, [r5, #24]
   3727c:	ldr	r5, [r5]
   37280:	mov	r7, #0
   37284:	cmp	r5, r7
   37288:	bne	371ac <__flatcc_fb_clear_parser@@Base+0x2568>
   3728c:	mov	r0, #0
   37290:	add	sp, sp, #124	; 0x7c
   37294:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   37298:	ldrh	r3, [sp, #48]	; 0x30
   3729c:	cmp	r3, #5
   372a0:	beq	37584 <__flatcc_fb_clear_parser@@Base+0x2940>
   372a4:	cmp	r3, #4
   372a8:	beq	37630 <__flatcc_fb_clear_parser@@Base+0x29ec>
   372ac:	cmp	r3, #6
   372b0:	beq	37370 <__flatcc_fb_clear_parser@@Base+0x272c>
   372b4:	ldr	r3, [sp, #12]
   372b8:	cmp	r3, #0
   372bc:	bne	37390 <__flatcc_fb_clear_parser@@Base+0x274c>
   372c0:	add	r4, r5, #48	; 0x30
   372c4:	ldm	fp, {r0, r1, r2, r3}
   372c8:	stm	r4, {r0, r1, r2, r3}
   372cc:	cmp	r7, #0
   372d0:	beq	3730c <__flatcc_fb_clear_parser@@Base+0x26c8>
   372d4:	ldr	r3, [r6, #180]	; 0xb4
   372d8:	cmp	r3, #0
   372dc:	beq	3730c <__flatcc_fb_clear_parser@@Base+0x26c8>
   372e0:	ldrh	r3, [sp, #48]	; 0x30
   372e4:	cmp	r3, #5
   372e8:	beq	374d4 <__flatcc_fb_clear_parser@@Base+0x2890>
   372ec:	cmp	r3, #4
   372f0:	beq	37528 <__flatcc_fb_clear_parser@@Base+0x28e4>
   372f4:	cmp	r3, #6
   372f8:	bne	3730c <__flatcc_fb_clear_parser@@Base+0x26c8>
   372fc:	ldrb	r2, [sp, #40]	; 0x28
   37300:	ldrb	r3, [sp, #56]	; 0x38
   37304:	cmp	r2, r3
   37308:	bls	37a24 <__flatcc_fb_clear_parser@@Base+0x2de0>
   3730c:	ldm	fp, {r0, r1, r2, r3}
   37310:	add	ip, sp, #56	; 0x38
   37314:	stm	ip, {r0, r1, r2, r3}
   37318:	mov	r1, r4
   3731c:	mov	r2, #1
   37320:	add	r0, sl, #72	; 0x48
   37324:	bl	4194c <fb_value_set_insert_item@@Base>
   37328:	cmp	r0, #0
   3732c:	beq	37344 <__flatcc_fb_clear_parser@@Base+0x2700>
   37330:	cmp	r9, #4
   37334:	beq	37868 <__flatcc_fb_clear_parser@@Base+0x2c24>
   37338:	ldrh	r3, [r5, #10]
   3733c:	orr	r3, r3, #4
   37340:	strh	r3, [r5, #10]
   37344:	ldr	r3, [r5, #64]	; 0x40
   37348:	cmp	r3, #0
   3734c:	beq	3719c <__flatcc_fb_clear_parser@@Base+0x2558>
   37350:	mov	r3, #0
   37354:	ldr	r1, [r5, #4]
   37358:	ldr	r2, [pc, #1976]	; 37b18 <__flatcc_fb_clear_parser@@Base+0x2ed4>
   3735c:	str	r3, [sp, #4]
   37360:	str	r3, [sp]
   37364:	mov	r0, r6
   37368:	bl	3052c <__flatcc_error_report@@Base>
   3736c:	b	3719c <__flatcc_fb_clear_parser@@Base+0x2558>
   37370:	ldrb	r4, [sp, #40]	; 0x28
   37374:	cmp	r4, #1
   37378:	beq	379b4 <__flatcc_fb_clear_parser@@Base+0x2d70>
   3737c:	ldr	r3, [sp, #12]
   37380:	cmp	r3, #0
   37384:	mov	r3, #1
   37388:	strb	r3, [sp, #40]	; 0x28
   3738c:	beq	372c0 <__flatcc_fb_clear_parser@@Base+0x267c>
   37390:	ldr	ip, [sl, #40]	; 0x28
   37394:	ldrd	r2, [sp, #40]	; 0x28
   37398:	ldr	r1, [pc, #1880]	; 37af8 <__flatcc_fb_clear_parser@@Base+0x2eb4>
   3739c:	add	r1, r1, ip, lsl #2
   373a0:	ldr	r0, [r1, #140]	; 0x8c
   373a4:	mov	r1, #0
   373a8:	cmp	r3, r1
   373ac:	lsl	r0, r0, #3
   373b0:	cmpeq	r2, r0
   373b4:	bcs	37970 <__flatcc_fb_clear_parser@@Base+0x2d2c>
   373b8:	mov	r1, #1
   373bc:	sub	r3, r2, #32
   373c0:	rsb	lr, r2, #32
   373c4:	lsl	r3, r1, r3
   373c8:	lsl	r0, r1, r2
   373cc:	orr	r3, r3, r1, lsr lr
   373d0:	add	r4, r5, #48	; 0x30
   373d4:	mov	r1, #5
   373d8:	mov	r2, ip
   373dc:	str	r3, [r5, #52]	; 0x34
   373e0:	str	r0, [r5, #48]	; 0x30
   373e4:	strh	r1, [r5, #56]	; 0x38
   373e8:	mov	r3, r4
   373ec:	mov	r1, r5
   373f0:	mov	r0, r6
   373f4:	bl	3975c <__flatcc_fb_coerce_scalar_type@@Base>
   373f8:	mov	r2, #0
   373fc:	cmp	r0, r2
   37400:	beq	372cc <__flatcc_fb_clear_parser@@Base+0x2688>
   37404:	ldr	r1, [r5, #4]
   37408:	mov	r3, r2
   3740c:	str	r2, [sp, #4]
   37410:	str	r2, [sp]
   37414:	mov	r0, r6
   37418:	ldr	r2, [pc, #1788]	; 37b1c <__flatcc_fb_clear_parser@@Base+0x2ed8>
   3741c:	bl	3052c <__flatcc_error_report@@Base>
   37420:	mvn	r0, #0
   37424:	b	37290 <__flatcc_fb_clear_parser@@Base+0x264c>
   37428:	ldr	r1, [r4, #4]
   3742c:	mov	r3, r0
   37430:	str	r0, [sp, #4]
   37434:	str	r0, [sp]
   37438:	ldr	r2, [pc, #1760]	; 37b20 <__flatcc_fb_clear_parser@@Base+0x2edc>
   3743c:	mov	r0, r6
   37440:	bl	3052c <__flatcc_error_report@@Base>
   37444:	b	36ff4 <__flatcc_fb_clear_parser@@Base+0x23b0>
   37448:	mov	r0, #0
   3744c:	mov	r1, #0
   37450:	add	fp, sp, #40	; 0x28
   37454:	strd	r0, [sp, #40]	; 0x28
   37458:	mov	ip, #4
   3745c:	mov	r2, r5
   37460:	mov	r3, fp
   37464:	mov	r1, sl
   37468:	mov	r0, r6
   3746c:	strh	ip, [sp, #48]	; 0x30
   37470:	bl	3975c <__flatcc_fb_coerce_scalar_type@@Base>
   37474:	cmp	r0, #0
   37478:	beq	37130 <__flatcc_fb_clear_parser@@Base+0x24ec>
   3747c:	mov	r3, #0
   37480:	mov	r0, r6
   37484:	str	r3, [sp, #4]
   37488:	str	r3, [sp]
   3748c:	mov	r1, r3
   37490:	ldr	r2, [pc, #1676]	; 37b24 <__flatcc_fb_clear_parser@@Base+0x2ee0>
   37494:	bl	3052c <__flatcc_error_report@@Base>
   37498:	mvn	r0, #0
   3749c:	b	37290 <__flatcc_fb_clear_parser@@Base+0x264c>
   374a0:	cmp	r2, #2
   374a4:	bne	375b0 <__flatcc_fb_clear_parser@@Base+0x296c>
   374a8:	ldrh	r3, [r4, #16]
   374ac:	cmp	r3, #2
   374b0:	beq	36ff4 <__flatcc_fb_clear_parser@@Base+0x23b0>
   374b4:	ldr	r1, [r4, #4]
   374b8:	mov	r3, r0
   374bc:	str	r0, [sp, #4]
   374c0:	str	r0, [sp]
   374c4:	ldr	r2, [pc, #1628]	; 37b28 <__flatcc_fb_clear_parser@@Base+0x2ee4>
   374c8:	mov	r0, r6
   374cc:	bl	3052c <__flatcc_error_report@@Base>
   374d0:	b	36ff4 <__flatcc_fb_clear_parser@@Base+0x23b0>
   374d4:	ldrd	r0, [sp, #40]	; 0x28
   374d8:	ldrd	r2, [sp, #56]	; 0x38
   374dc:	cmp	r1, r3
   374e0:	cmpeq	r0, r2
   374e4:	bhi	3730c <__flatcc_fb_clear_parser@@Base+0x26c8>
   374e8:	cmp	r9, #4
   374ec:	ldr	r1, [r5, #4]
   374f0:	bne	37500 <__flatcc_fb_clear_parser@@Base+0x28bc>
   374f4:	ldrd	r2, [sp, #56]	; 0x38
   374f8:	orrs	r3, r2, r3
   374fc:	beq	37a64 <__flatcc_fb_clear_parser@@Base+0x2e20>
   37500:	mov	r3, #0
   37504:	mov	r0, r6
   37508:	str	r3, [sp, #4]
   3750c:	str	r3, [sp]
   37510:	ldr	r2, [pc, #1556]	; 37b2c <__flatcc_fb_clear_parser@@Base+0x2ee8>
   37514:	bl	3052c <__flatcc_error_report@@Base>
   37518:	mov	r3, #1
   3751c:	strh	r3, [r5, #56]	; 0x38
   37520:	mvn	r0, #0
   37524:	b	37290 <__flatcc_fb_clear_parser@@Base+0x264c>
   37528:	ldrd	r2, [sp, #40]	; 0x28
   3752c:	ldrd	r0, [sp, #56]	; 0x38
   37530:	cmp	r0, r2
   37534:	sbcs	r3, r1, r3
   37538:	blt	3730c <__flatcc_fb_clear_parser@@Base+0x26c8>
   3753c:	b	374e8 <__flatcc_fb_clear_parser@@Base+0x28a4>
   37540:	mov	r2, #0
   37544:	mov	r3, #0
   37548:	strd	r2, [r5, #88]	; 0x58
   3754c:	b	371e4 <__flatcc_fb_clear_parser@@Base+0x25a0>
   37550:	ldrh	r3, [r1, #48]	; 0x30
   37554:	cmp	r3, #0
   37558:	bne	37a8c <__flatcc_fb_clear_parser@@Base+0x2e48>
   3755c:	mov	r0, #1
   37560:	mov	r1, #0
   37564:	mov	r2, #8
   37568:	mov	r3, #1
   3756c:	mov	r5, r9
   37570:	str	r9, [sl, #40]	; 0x28
   37574:	strd	r0, [sl, #112]	; 0x70
   37578:	strh	r2, [sl, #48]	; 0x30
   3757c:	strh	r3, [sl, #104]	; 0x68
   37580:	b	36f8c <__flatcc_fb_clear_parser@@Base+0x2348>
   37584:	ldr	ip, [sl, #40]	; 0x28
   37588:	ldrd	r2, [sp, #40]	; 0x28
   3758c:	cmp	ip, #6
   37590:	beq	37820 <__flatcc_fb_clear_parser@@Base+0x2bdc>
   37594:	adds	r2, r2, #1
   37598:	ldr	r1, [sp, #12]
   3759c:	adc	r3, r3, #0
   375a0:	cmp	r1, #0
   375a4:	strd	r2, [sp, #40]	; 0x28
   375a8:	bne	37398 <__flatcc_fb_clear_parser@@Base+0x2754>
   375ac:	b	372c0 <__flatcc_fb_clear_parser@@Base+0x267c>
   375b0:	cmp	r2, #5
   375b4:	bne	3766c <__flatcc_fb_clear_parser@@Base+0x2a28>
   375b8:	ldrh	r3, [r4, #16]
   375bc:	cmp	r3, #5
   375c0:	beq	36ff4 <__flatcc_fb_clear_parser@@Base+0x23b0>
   375c4:	ldr	r1, [r4, #4]
   375c8:	mov	r3, r0
   375cc:	str	r0, [sp, #4]
   375d0:	str	r0, [sp]
   375d4:	ldr	r2, [pc, #1364]	; 37b30 <__flatcc_fb_clear_parser@@Base+0x2eec>
   375d8:	mov	r0, r6
   375dc:	bl	3052c <__flatcc_error_report@@Base>
   375e0:	b	36ff4 <__flatcc_fb_clear_parser@@Base+0x23b0>
   375e4:	ldr	r1, [r3, #16]
   375e8:	ldr	r0, [sp, #32]
   375ec:	str	r3, [sp, #20]
   375f0:	bl	293b4 <ptr_set_find_item@@Base>
   375f4:	ldr	r3, [sp, #20]
   375f8:	cmp	r0, #0
   375fc:	beq	37740 <__flatcc_fb_clear_parser@@Base+0x2afc>
   37600:	ldr	r5, [sp, #24]
   37604:	ldr	r7, [sp, #36]	; 0x24
   37608:	ldrh	r2, [r3, #8]
   3760c:	cmp	r2, #1
   37610:	bhi	37910 <__flatcc_fb_clear_parser@@Base+0x2ccc>
   37614:	mov	r0, #0
   37618:	mov	r1, #0
   3761c:	str	r3, [r5, #16]
   37620:	mov	r3, #14
   37624:	strd	r0, [r5, #88]	; 0x58
   37628:	strh	r3, [r5, #24]
   3762c:	b	371e4 <__flatcc_fb_clear_parser@@Base+0x25a0>
   37630:	ldr	ip, [sl, #40]	; 0x28
   37634:	ldrd	r2, [sp, #40]	; 0x28
   37638:	cmp	ip, #6
   3763c:	bne	37594 <__flatcc_fb_clear_parser@@Base+0x2950>
   37640:	mvn	r1, #-2147483648	; 0x80000000
   37644:	mvn	r0, #0
   37648:	cmp	r3, r1
   3764c:	cmpeq	r2, r0
   37650:	bne	37594 <__flatcc_fb_clear_parser@@Base+0x2950>
   37654:	mov	r3, #0
   37658:	ldr	r1, [r5, #4]
   3765c:	ldr	r2, [pc, #1232]	; 37b34 <__flatcc_fb_clear_parser@@Base+0x2ef0>
   37660:	str	r3, [sp, #4]
   37664:	str	r3, [sp]
   37668:	b	37848 <__flatcc_fb_clear_parser@@Base+0x2c04>
   3766c:	cmp	r2, #4
   37670:	bne	3793c <__flatcc_fb_clear_parser@@Base+0x2cf8>
   37674:	ldrh	r3, [r4, #16]
   37678:	sub	r3, r3, #4
   3767c:	cmp	r3, #1
   37680:	bls	36ff4 <__flatcc_fb_clear_parser@@Base+0x23b0>
   37684:	ldr	r1, [r4, #4]
   37688:	mov	r3, r0
   3768c:	str	r0, [sp, #4]
   37690:	str	r0, [sp]
   37694:	ldr	r2, [pc, #1180]	; 37b38 <__flatcc_fb_clear_parser@@Base+0x2ef4>
   37698:	mov	r0, r6
   3769c:	bl	3052c <__flatcc_error_report@@Base>
   376a0:	b	36ff4 <__flatcc_fb_clear_parser@@Base+0x23b0>
   376a4:	and	r3, r7, #32
   376a8:	ldr	r5, [sl, #40]	; 0x28
   376ac:	b	370f0 <__flatcc_fb_clear_parser@@Base+0x24ac>
   376b0:	ldr	ip, [r5, #16]
   376b4:	ldr	r2, [sl, #12]
   376b8:	cmp	ip, #0
   376bc:	mov	r4, r2
   376c0:	beq	377c8 <__flatcc_fb_clear_parser@@Base+0x2b84>
   376c4:	mov	r0, ip
   376c8:	b	376d4 <__flatcc_fb_clear_parser@@Base+0x2a90>
   376cc:	mov	r3, r2
   376d0:	mov	r0, r1
   376d4:	ldr	r1, [r0]
   376d8:	add	r2, r3, #1
   376dc:	cmp	r1, #0
   376e0:	bne	376cc <__flatcc_fb_clear_parser@@Base+0x2a88>
   376e4:	mov	lr, r0
   376e8:	str	r0, [sp, #20]
   376ec:	adds	r0, r4, #0
   376f0:	movne	r0, #1
   376f4:	cmp	r2, #1
   376f8:	movne	r0, #0
   376fc:	cmp	r0, #0
   37700:	beq	37894 <__flatcc_fb_clear_parser@@Base+0x2c50>
   37704:	str	r7, [sp, #36]	; 0x24
   37708:	mov	r7, lr
   3770c:	add	r3, r6, #524	; 0x20c
   37710:	str	r1, [sp, #28]
   37714:	str	r3, [sp, #32]
   37718:	str	r5, [sp, #24]
   3771c:	ldr	r3, [r7, #4]
   37720:	add	r0, r4, #4
   37724:	ldm	r3, {r1, r2}
   37728:	bl	29a8c <fb_symbol_table_find@@Base>
   3772c:	subs	r3, r0, #0
   37730:	beq	37740 <__flatcc_fb_clear_parser@@Base+0x2afc>
   37734:	ldrh	r2, [r3, #8]
   37738:	cmp	r2, #4
   3773c:	bls	375e4 <__flatcc_fb_clear_parser@@Base+0x29a0>
   37740:	ldr	r2, [r4]
   37744:	cmp	r2, #0
   37748:	beq	377c0 <__flatcc_fb_clear_parser@@Base+0x2b7c>
   3774c:	mov	r3, #0
   37750:	ldr	r2, [r2]
   37754:	add	r3, r3, #1
   37758:	cmp	r2, #0
   3775c:	bne	37750 <__flatcc_fb_clear_parser@@Base+0x2b0c>
   37760:	ldr	r2, [sp, #16]
   37764:	cmp	r2, #0
   37768:	beq	377c0 <__flatcc_fb_clear_parser@@Base+0x2b7c>
   3776c:	ldr	r0, [r6, #412]	; 0x19c
   37770:	rsb	r5, r3, #1
   37774:	b	3779c <__flatcc_fb_clear_parser@@Base+0x2b58>
   37778:	cmp	r0, #0
   3777c:	beq	37798 <__flatcc_fb_clear_parser@@Base+0x2b54>
   37780:	mov	r2, r5
   37784:	ldr	r1, [r4]
   37788:	bl	2a880 <fb_scope_table_find@@Base>
   3778c:	cmp	r0, #0
   37790:	bne	377e8 <__flatcc_fb_clear_parser@@Base+0x2ba4>
   37794:	ldr	r0, [r6, #412]	; 0x19c
   37798:	add	r5, r5, #1
   3779c:	cmp	r5, #0
   377a0:	bne	37778 <__flatcc_fb_clear_parser@@Base+0x2b34>
   377a4:	cmp	r0, #0
   377a8:	beq	377c0 <__flatcc_fb_clear_parser@@Base+0x2b7c>
   377ac:	mov	r1, r5
   377b0:	ldr	r2, [sp, #28]
   377b4:	bl	2a880 <fb_scope_table_find@@Base>
   377b8:	subs	r4, r0, #0
   377bc:	bne	3771c <__flatcc_fb_clear_parser@@Base+0x2ad8>
   377c0:	ldr	r5, [sp, #24]
   377c4:	ldr	ip, [r5, #16]
   377c8:	mov	r3, r5
   377cc:	mov	r1, ip
   377d0:	ldr	r2, [pc, #868]	; 37b3c <__flatcc_fb_clear_parser@@Base+0x2ef8>
   377d4:	mov	r0, r6
   377d8:	bl	314ec <error_ref_sym@@Base>
   377dc:	mov	r3, #1
   377e0:	strh	r3, [r5, #24]
   377e4:	b	3719c <__flatcc_fb_clear_parser@@Base+0x2558>
   377e8:	mov	r4, r0
   377ec:	b	3771c <__flatcc_fb_clear_parser@@Base+0x2ad8>
   377f0:	ldr	r1, [r5, #4]
   377f4:	mov	r3, r0
   377f8:	str	r0, [sp, #4]
   377fc:	str	r0, [sp]
   37800:	ldr	r2, [pc, #824]	; 37b40 <__flatcc_fb_clear_parser@@Base+0x2efc>
   37804:	mov	r0, r6
   37808:	bl	3052c <__flatcc_error_report@@Base>
   3780c:	mvn	r0, #0
   37810:	b	37290 <__flatcc_fb_clear_parser@@Base+0x264c>
   37814:	strh	r4, [sl, #92]	; 0x5c
   37818:	str	r4, [sp, #12]
   3781c:	b	37114 <__flatcc_fb_clear_parser@@Base+0x24d0>
   37820:	mvn	r1, #0
   37824:	mvn	r0, #0
   37828:	cmp	r3, r1
   3782c:	cmpeq	r2, r0
   37830:	bne	37594 <__flatcc_fb_clear_parser@@Base+0x2950>
   37834:	ldr	r2, [pc, #776]	; 37b44 <__flatcc_fb_clear_parser@@Base+0x2f00>
   37838:	mov	r3, #0
   3783c:	ldr	r1, [r5, #4]
   37840:	str	r3, [sp, #4]
   37844:	str	r3, [sp]
   37848:	mov	r0, r6
   3784c:	bl	3052c <__flatcc_error_report@@Base>
   37850:	ldrd	r2, [sp, #40]	; 0x28
   37854:	ldrh	r1, [r5, #56]	; 0x38
   37858:	adds	r2, r2, #1
   3785c:	adc	r3, r3, #0
   37860:	strd	r2, [sp, #40]	; 0x28
   37864:	b	37200 <__flatcc_fb_clear_parser@@Base+0x25bc>
   37868:	mov	r3, #0
   3786c:	ldr	r1, [r5, #4]
   37870:	mov	r0, r6
   37874:	str	r3, [sp, #4]
   37878:	str	r3, [sp]
   3787c:	ldr	r2, [pc, #708]	; 37b48 <__flatcc_fb_clear_parser@@Base+0x2f04>
   37880:	bl	3052c <__flatcc_error_report@@Base>
   37884:	mov	r3, #1
   37888:	strh	r3, [r5, #56]	; 0x38
   3788c:	mvn	r0, #0
   37890:	b	37290 <__flatcc_fb_clear_parser@@Base+0x264c>
   37894:	cmp	r2, #1
   37898:	ldr	r2, [sp, #16]
   3789c:	moveq	r1, r0
   378a0:	movne	r1, ip
   378a4:	cmp	r2, #0
   378a8:	beq	377c8 <__flatcc_fb_clear_parser@@Base+0x2b84>
   378ac:	ldr	r0, [r6, #412]	; 0x19c
   378b0:	cmp	r0, #0
   378b4:	beq	377c8 <__flatcc_fb_clear_parser@@Base+0x2b84>
   378b8:	rsb	r2, r3, #0
   378bc:	bl	2a880 <fb_scope_table_find@@Base>
   378c0:	cmp	r0, #0
   378c4:	beq	377c4 <__flatcc_fb_clear_parser@@Base+0x2b80>
   378c8:	ldr	r3, [sp, #20]
   378cc:	add	r0, r0, #4
   378d0:	ldr	r3, [r3, #4]
   378d4:	ldm	r3, {r1, r2}
   378d8:	bl	29a8c <fb_symbol_table_find@@Base>
   378dc:	subs	r3, r0, #0
   378e0:	beq	377c4 <__flatcc_fb_clear_parser@@Base+0x2b80>
   378e4:	ldrh	r2, [r3, #8]
   378e8:	cmp	r2, #4
   378ec:	bhi	377c4 <__flatcc_fb_clear_parser@@Base+0x2b80>
   378f0:	ldr	r1, [r3, #16]
   378f4:	add	r0, r6, #524	; 0x20c
   378f8:	str	r3, [sp, #20]
   378fc:	bl	293b4 <ptr_set_find_item@@Base>
   37900:	ldr	r3, [sp, #20]
   37904:	cmp	r0, #0
   37908:	bne	37608 <__flatcc_fb_clear_parser@@Base+0x29c4>
   3790c:	b	377c4 <__flatcc_fb_clear_parser@@Base+0x2b80>
   37910:	mov	r2, #0
   37914:	ldr	r3, [r3, #4]
   37918:	ldr	r1, [r5, #4]
   3791c:	mov	r0, r6
   37920:	str	r2, [sp, #4]
   37924:	str	r2, [sp]
   37928:	ldr	r2, [pc, #540]	; 37b4c <__flatcc_fb_clear_parser@@Base+0x2f08>
   3792c:	bl	3052c <__flatcc_error_report@@Base>
   37930:	mov	r3, #1
   37934:	strh	r3, [r5, #24]
   37938:	b	3719c <__flatcc_fb_clear_parser@@Base+0x2558>
   3793c:	cmp	r2, #6
   37940:	bne	36ff4 <__flatcc_fb_clear_parser@@Base+0x23b0>
   37944:	ldrh	r3, [r4, #16]
   37948:	cmp	r3, #6
   3794c:	beq	36ff4 <__flatcc_fb_clear_parser@@Base+0x23b0>
   37950:	mov	r3, #0
   37954:	ldr	r1, [r4, #4]
   37958:	ldr	r2, [pc, #496]	; 37b50 <__flatcc_fb_clear_parser@@Base+0x2f0c>
   3795c:	str	r3, [sp, #4]
   37960:	str	r3, [sp]
   37964:	mov	r0, r6
   37968:	bl	3052c <__flatcc_error_report@@Base>
   3796c:	b	36ff4 <__flatcc_fb_clear_parser@@Base+0x23b0>
   37970:	mov	r3, #0
   37974:	ldr	r1, [r5, #4]
   37978:	mov	r0, r6
   3797c:	str	r3, [sp, #4]
   37980:	str	r3, [sp]
   37984:	ldr	r2, [pc, #400]	; 37b1c <__flatcc_fb_clear_parser@@Base+0x2ed8>
   37988:	bl	3052c <__flatcc_error_report@@Base>
   3798c:	mvn	r0, #0
   37990:	b	37290 <__flatcc_fb_clear_parser@@Base+0x264c>
   37994:	mov	r3, #0
   37998:	ldr	r1, [r1, #4]
   3799c:	ldr	r2, [pc, #432]	; 37b54 <__flatcc_fb_clear_parser@@Base+0x2f10>
   379a0:	str	r3, [sp, #4]
   379a4:	str	r3, [sp]
   379a8:	bl	3052c <__flatcc_error_report@@Base>
   379ac:	mvn	r0, #0
   379b0:	b	37290 <__flatcc_fb_clear_parser@@Base+0x264c>
   379b4:	mov	r3, #0
   379b8:	ldr	r1, [r5, #4]
   379bc:	ldr	r2, [pc, #404]	; 37b58 <__flatcc_fb_clear_parser@@Base+0x2f14>
   379c0:	str	r3, [sp, #4]
   379c4:	str	r3, [sp]
   379c8:	mov	r0, r6
   379cc:	bl	3052c <__flatcc_error_report@@Base>
   379d0:	ldrh	r1, [r5, #56]	; 0x38
   379d4:	strb	r4, [sp, #40]	; 0x28
   379d8:	b	37200 <__flatcc_fb_clear_parser@@Base+0x25bc>
   379dc:	mov	r2, #1
   379e0:	ldr	r1, [r1, #4]
   379e4:	str	r3, [sp, #4]
   379e8:	str	r3, [sp]
   379ec:	strh	r2, [sl, #48]	; 0x30
   379f0:	ldr	r2, [pc, #356]	; 37b5c <__flatcc_fb_clear_parser@@Base+0x2f18>
   379f4:	bl	3052c <__flatcc_error_report@@Base>
   379f8:	mvn	r0, #0
   379fc:	b	37290 <__flatcc_fb_clear_parser@@Base+0x264c>
   37a00:	mov	r3, #0
   37a04:	ldr	r1, [r5, #4]
   37a08:	mov	r0, r6
   37a0c:	str	r3, [sp, #4]
   37a10:	str	r3, [sp]
   37a14:	ldr	r2, [pc, #324]	; 37b60 <__flatcc_fb_clear_parser@@Base+0x2f1c>
   37a18:	bl	3052c <__flatcc_error_report@@Base>
   37a1c:	mvn	r0, #0
   37a20:	b	37290 <__flatcc_fb_clear_parser@@Base+0x264c>
   37a24:	mov	r3, #0
   37a28:	ldr	r1, [r5, #4]
   37a2c:	mov	r0, r6
   37a30:	str	r3, [sp, #4]
   37a34:	str	r3, [sp]
   37a38:	ldr	r2, [pc, #292]	; 37b64 <__flatcc_fb_clear_parser@@Base+0x2f20>
   37a3c:	bl	3052c <__flatcc_error_report@@Base>
   37a40:	mov	r3, #1
   37a44:	strh	r3, [r5, #56]	; 0x38
   37a48:	mvn	r0, #0
   37a4c:	b	37290 <__flatcc_fb_clear_parser@@Base+0x264c>
   37a50:	ldr	r3, [pc, #272]	; 37b68 <__flatcc_fb_clear_parser@@Base+0x2f24>
   37a54:	ldr	r2, [pc, #272]	; 37b6c <__flatcc_fb_clear_parser@@Base+0x2f28>
   37a58:	ldr	r1, [pc, #272]	; 37b70 <__flatcc_fb_clear_parser@@Base+0x2f2c>
   37a5c:	ldr	r0, [pc, #272]	; 37b74 <__flatcc_fb_clear_parser@@Base+0x2f30>
   37a60:	bl	14148 <__assert_fail@plt>
   37a64:	mov	r3, #0
   37a68:	mov	r0, r6
   37a6c:	str	r3, [sp, #4]
   37a70:	str	r3, [sp]
   37a74:	ldr	r2, [pc, #252]	; 37b78 <__flatcc_fb_clear_parser@@Base+0x2f34>
   37a78:	bl	3052c <__flatcc_error_report@@Base>
   37a7c:	mov	r3, #1
   37a80:	strh	r3, [r5, #56]	; 0x38
   37a84:	mvn	r0, #0
   37a88:	b	37290 <__flatcc_fb_clear_parser@@Base+0x264c>
   37a8c:	mov	r3, #0
   37a90:	ldr	r1, [r1, #4]
   37a94:	ldr	r2, [pc, #224]	; 37b7c <__flatcc_fb_clear_parser@@Base+0x2f38>
   37a98:	str	r3, [sp, #4]
   37a9c:	str	r3, [sp]
   37aa0:	bl	3052c <__flatcc_error_report@@Base>
   37aa4:	mvn	r0, #0
   37aa8:	b	37290 <__flatcc_fb_clear_parser@@Base+0x264c>
   37aac:	ldr	r3, [pc, #180]	; 37b68 <__flatcc_fb_clear_parser@@Base+0x2f24>
   37ab0:	ldr	r2, [pc, #200]	; 37b80 <__flatcc_fb_clear_parser@@Base+0x2f3c>
   37ab4:	ldr	r1, [pc, #180]	; 37b70 <__flatcc_fb_clear_parser@@Base+0x2f2c>
   37ab8:	ldr	r0, [pc, #196]	; 37b84 <__flatcc_fb_clear_parser@@Base+0x2f40>
   37abc:	bl	14148 <__assert_fail@plt>
   37ac0:	cmp	r1, #0
   37ac4:	add	r4, r5, #48	; 0x30
   37ac8:	beq	372c4 <__flatcc_fb_clear_parser@@Base+0x2680>
   37acc:	ldm	r4, {r0, r1, r2, r3}
   37ad0:	stm	fp, {r0, r1, r2, r3}
   37ad4:	mov	r3, fp
   37ad8:	ldr	r2, [sl, #40]	; 0x28
   37adc:	mov	r1, r5
   37ae0:	mov	r0, r6
   37ae4:	bl	3975c <__flatcc_fb_coerce_scalar_type@@Base>
   37ae8:	cmp	r0, #0
   37aec:	beq	372c4 <__flatcc_fb_clear_parser@@Base+0x2680>
   37af0:	mvn	r0, #0
   37af4:	b	37290 <__flatcc_fb_clear_parser@@Base+0x264c>
   37af8:	andeq	fp, r5, r8, ror #24
   37afc:	andeq	ip, r5, r8, ror #4
   37b00:	andeq	ip, r5, r8, lsr r2
   37b04:	muleq	r5, r0, r2
   37b08:	andeq	ip, r5, r8, asr r3
   37b0c:	andeq	ip, r5, r8, asr fp
   37b10:	andeq	ip, r5, r8, ror fp
   37b14:	ldrdeq	ip, [r5], -r8
   37b18:	andeq	ip, r5, ip, ror #28
   37b1c:	andeq	ip, r5, r0, asr #26
   37b20:	andeq	ip, r5, r8, lsl r2
   37b24:	andeq	ip, r5, r8, lsl fp
   37b28:			; <UNDEFINED> instruction: 0x0005c2b8
   37b2c:			; <UNDEFINED> instruction: 0x0005cdb8
   37b30:	ldrdeq	ip, [r5], -ip	; <UNPREDICTABLE>
   37b34:			; <UNDEFINED> instruction: 0x0005ccb8
   37b38:	andeq	ip, r5, r8, lsl #6
   37b3c:	andeq	ip, r5, r0, lsr #24
   37b40:	muleq	r5, r4, fp
   37b44:	muleq	r5, r8, ip
   37b48:	andeq	ip, r5, r0, lsr #28
   37b4c:	andeq	ip, r5, r0, asr ip
   37b50:	andeq	ip, r5, ip, lsr #6
   37b54:	andeq	ip, r5, r4, lsr #21
   37b58:	ldrdeq	ip, [r5], -r4
   37b5c:	andeq	ip, r5, ip, lsl #21
   37b60:	andeq	ip, r5, r4, lsl #26
   37b64:	andeq	ip, r5, r0, ror #27
   37b68:	andeq	fp, r5, r8, ror sp
   37b6c:	andeq	r0, r0, r3, lsr #10
   37b70:	strdeq	fp, [r5], -ip
   37b74:	andeq	ip, r5, r0, asr #23
   37b78:	andeq	ip, r5, r4, ror sp
   37b7c:	ldrdeq	ip, [r5], -r8
   37b80:	andeq	r0, r0, sp, asr #9
   37b84:	andeq	ip, r5, ip, ror #20

00037b88 <__flatcc_fb_build_schema@@Base>:
   37b88:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   37b8c:	add	r3, r0, #352	; 0x160
   37b90:	sub	sp, sp, #124	; 0x7c
   37b94:	add	r2, r0, #524	; 0x20c
   37b98:	mov	fp, r0
   37b9c:	mov	r1, r3
   37ba0:	mov	r0, r2
   37ba4:	str	r3, [sp, #12]
   37ba8:	str	r2, [sp, #16]
   37bac:	bl	293b4 <ptr_set_find_item@@Base>
   37bb0:	cmp	r0, #0
   37bb4:	beq	39634 <__flatcc_fb_build_schema@@Base+0x1aac>
   37bb8:	ldr	r5, [fp, #392]	; 0x188
   37bbc:	cmp	r5, #0
   37bc0:	beq	37cdc <__flatcc_fb_build_schema@@Base+0x154>
   37bc4:	ldr	r9, [pc, #4064]	; 38bac <__flatcc_fb_build_schema@@Base+0x1024>
   37bc8:	ldr	r4, [pc, #4064]	; 38bb0 <__flatcc_fb_build_schema@@Base+0x1028>
   37bcc:	ldr	r6, [pc, #4064]	; 38bb4 <__flatcc_fb_build_schema@@Base+0x102c>
   37bd0:	mov	r8, #1
   37bd4:	mov	r7, #0
   37bd8:	ldr	sl, [sp, #12]
   37bdc:	b	37bec <__flatcc_fb_build_schema@@Base+0x64>
   37be0:	ldr	r5, [r5]
   37be4:	cmp	r5, #0
   37be8:	beq	37cdc <__flatcc_fb_build_schema@@Base+0x154>
   37bec:	ldrh	r3, [r5, #8]
   37bf0:	cmp	r3, #4
   37bf4:	bhi	37be0 <__flatcc_fb_build_schema@@Base+0x58>
   37bf8:	ldr	r0, [r5, #12]
   37bfc:	cmp	r0, #0
   37c00:	beq	389e8 <__flatcc_fb_build_schema@@Base+0xe60>
   37c04:	ldr	ip, [r0]
   37c08:	cmp	ip, #0
   37c0c:	beq	38a04 <__flatcc_fb_build_schema@@Base+0xe7c>
   37c10:	ldr	r3, [pc, #3996]	; 38bb4 <__flatcc_fb_build_schema@@Base+0x102c>
   37c14:	ldr	r2, [ip, #4]
   37c18:	ldr	r1, [r2, #4]
   37c1c:	ldr	r2, [r2]
   37c20:	cmp	r1, #0
   37c24:	beq	37c40 <__flatcc_fb_build_schema@@Base+0xb8>
   37c28:	add	r1, r2, r1
   37c2c:	ldrb	lr, [r2], #1
   37c30:	eor	r3, r3, lr
   37c34:	cmp	r2, r1
   37c38:	mul	r3, r4, r3
   37c3c:	bne	37c2c <__flatcc_fb_build_schema@@Base+0xa4>
   37c40:	ldr	ip, [ip]
   37c44:	eor	r3, r3, #46	; 0x2e
   37c48:	cmp	ip, #0
   37c4c:	mul	r3, r4, r3
   37c50:	bne	37c14 <__flatcc_fb_build_schema@@Base+0x8c>
   37c54:	ldr	r1, [r5, #4]
   37c58:	ldm	r1, {r1, r2}
   37c5c:	cmp	r2, #0
   37c60:	sub	r2, r2, #1
   37c64:	beq	38a24 <__flatcc_fb_build_schema@@Base+0xe9c>
   37c68:	add	ip, r1, r2
   37c6c:	sub	r1, r1, #1
   37c70:	ldrb	r2, [r1, #1]!
   37c74:	eor	r3, r3, r2
   37c78:	cmp	r1, ip
   37c7c:	mul	r3, r4, r3
   37c80:	bne	37c70 <__flatcc_fb_build_schema@@Base+0xe8>
   37c84:	cmp	r3, #0
   37c88:	moveq	r3, r6
   37c8c:	cmp	r0, #0
   37c90:	str	r3, [r5, #88]	; 0x58
   37c94:	str	sl, [r5, #16]
   37c98:	beq	37be0 <__flatcc_fb_build_schema@@Base+0x58>
   37c9c:	add	r0, r0, #4
   37ca0:	mov	r2, r8
   37ca4:	mov	r1, r5
   37ca8:	bl	29a64 <fb_symbol_table_insert_item@@Base>
   37cac:	cmp	r0, #0
   37cb0:	beq	37be0 <__flatcc_fb_build_schema@@Base+0x58>
   37cb4:	ldr	r3, [r0, #4]
   37cb8:	ldr	r1, [r5, #4]
   37cbc:	mov	r2, r9
   37cc0:	str	r7, [sp, #4]
   37cc4:	str	r7, [sp]
   37cc8:	mov	r0, fp
   37ccc:	bl	3052c <__flatcc_error_report@@Base>
   37cd0:	ldr	r5, [r5]
   37cd4:	cmp	r5, #0
   37cd8:	bne	37bec <__flatcc_fb_build_schema@@Base+0x64>
   37cdc:	ldr	r4, [fp, #356]	; 0x164
   37ce0:	cmp	r4, #0
   37ce4:	beq	37d40 <__flatcc_fb_build_schema@@Base+0x1b8>
   37ce8:	ldr	r7, [pc, #3784]	; 38bb8 <__flatcc_fb_build_schema@@Base+0x1030>
   37cec:	mov	r5, #1
   37cf0:	mov	r6, #0
   37cf4:	ldr	r0, [fp, #412]	; 0x19c
   37cf8:	mov	r2, r5
   37cfc:	add	r0, r0, #16
   37d00:	mov	r1, r4
   37d04:	bl	410f4 <fb_name_table_insert_item@@Base>
   37d08:	cmp	r0, #0
   37d0c:	beq	37d34 <__flatcc_fb_build_schema@@Base+0x1ac>
   37d10:	ldr	r2, [r4, #12]
   37d14:	mov	r3, r6
   37d18:	str	r2, [sp, #4]
   37d1c:	ldr	r1, [r4, #8]
   37d20:	mov	r2, r7
   37d24:	str	r1, [sp]
   37d28:	mov	r0, fp
   37d2c:	mov	r1, #0
   37d30:	bl	3052c <__flatcc_error_report@@Base>
   37d34:	ldr	r4, [r4]
   37d38:	cmp	r4, #0
   37d3c:	bne	37cf4 <__flatcc_fb_build_schema@@Base+0x16c>
   37d40:	mov	sl, #0
   37d44:	mov	r8, sl
   37d48:	ldr	r5, [pc, #3692]	; 38bbc <__flatcc_fb_build_schema@@Base+0x1034>
   37d4c:	mov	r6, #1
   37d50:	mov	r9, #65536	; 0x10000
   37d54:	mov	r7, #2
   37d58:	b	37da8 <__flatcc_fb_build_schema@@Base+0x220>
   37d5c:	ldr	r2, [r5, #4]!
   37d60:	str	r3, [fp, #52]	; 0x34
   37d64:	mov	r0, r2
   37d68:	str	sl, [r4, #24]
   37d6c:	str	r2, [r4, #8]
   37d70:	bl	1407c <strlen@plt>
   37d74:	strh	r7, [r4, #16]
   37d78:	str	r8, [r4]
   37d7c:	mov	r1, r4
   37d80:	mov	r2, r6
   37d84:	str	r0, [r4, #12]
   37d88:	ldr	r0, [fp, #412]	; 0x19c
   37d8c:	add	r0, r0, #16
   37d90:	bl	410f4 <fb_name_table_insert_item@@Base>
   37d94:	cmp	r0, #0
   37d98:	strne	sl, [r0, #24]
   37d9c:	add	sl, sl, #1
   37da0:	cmp	sl, #12
   37da4:	beq	37df0 <__flatcc_fb_build_schema@@Base+0x268>
   37da8:	ldr	r4, [fp, #52]	; 0x34
   37dac:	ldr	r2, [fp, #44]	; 0x2c
   37db0:	add	r3, r4, #32
   37db4:	cmp	r3, r2
   37db8:	bls	37d5c <__flatcc_fb_build_schema@@Base+0x1d4>
   37dbc:	mov	r1, r6
   37dc0:	mov	r0, r9
   37dc4:	bl	13fa4 <calloc@plt>
   37dc8:	cmp	r0, #0
   37dcc:	beq	39648 <__flatcc_fb_build_schema@@Base+0x1ac0>
   37dd0:	ldr	r2, [fp, #48]	; 0x30
   37dd4:	add	r4, r0, #16
   37dd8:	str	r2, [r0]
   37ddc:	add	r2, r0, #65536	; 0x10000
   37de0:	add	r3, r0, #48	; 0x30
   37de4:	str	r0, [fp, #48]	; 0x30
   37de8:	str	r2, [fp, #44]	; 0x2c
   37dec:	b	37d5c <__flatcc_fb_build_schema@@Base+0x1d4>
   37df0:	ldr	r3, [fp, #184]	; 0xb8
   37df4:	cmp	r3, #0
   37df8:	bne	37e48 <__flatcc_fb_build_schema@@Base+0x2c0>
   37dfc:	ldr	r4, [fp, #392]	; 0x188
   37e00:	cmp	r4, #0
   37e04:	beq	38b18 <__flatcc_fb_build_schema@@Base+0xf90>
   37e08:	mov	r5, #1
   37e0c:	b	37e1c <__flatcc_fb_build_schema@@Base+0x294>
   37e10:	ldr	r4, [r4]
   37e14:	cmp	r4, #0
   37e18:	beq	37e48 <__flatcc_fb_build_schema@@Base+0x2c0>
   37e1c:	ldrh	r3, [r4, #8]
   37e20:	cmp	r3, #3
   37e24:	bne	37e10 <__flatcc_fb_build_schema@@Base+0x288>
   37e28:	mov	r1, r4
   37e2c:	mov	r0, fp
   37e30:	bl	36f10 <__flatcc_fb_clear_parser@@Base+0x22cc>
   37e34:	cmp	r0, #0
   37e38:	strhne	r5, [r4, #48]	; 0x30
   37e3c:	ldr	r4, [r4]
   37e40:	cmp	r4, #0
   37e44:	bne	37e1c <__flatcc_fb_build_schema@@Base+0x294>
   37e48:	ldr	sl, [fp, #392]	; 0x188
   37e4c:	cmp	sl, #0
   37e50:	beq	38b18 <__flatcc_fb_build_schema@@Base+0xf90>
   37e54:	ldrh	r3, [sl, #8]
   37e58:	cmp	r3, #4
   37e5c:	ldrls	pc, [pc, r3, lsl #2]
   37e60:	b	387fc <__flatcc_fb_build_schema@@Base+0xc74>
   37e64:	andeq	r7, r3, r0, lsr #29
   37e68:	andeq	r8, r3, r0, asr r2
   37e6c:	andeq	r7, r3, r0, lsr #29
   37e70:	andeq	r7, r3, r8, ror lr
   37e74:	andeq	r7, r3, r4, lsl #29
   37e78:	ldr	r3, [fp, #184]	; 0xb8
   37e7c:	cmp	r3, #0
   37e80:	beq	37ea0 <__flatcc_fb_build_schema@@Base+0x318>
   37e84:	mov	r1, sl
   37e88:	mov	r0, fp
   37e8c:	bl	36f10 <__flatcc_fb_clear_parser@@Base+0x22cc>
   37e90:	cmp	r0, #0
   37e94:	beq	37ea0 <__flatcc_fb_build_schema@@Base+0x318>
   37e98:	mov	r3, #1
   37e9c:	strh	r3, [sl, #48]	; 0x30
   37ea0:	ldr	sl, [sl]
   37ea4:	cmp	sl, #0
   37ea8:	bne	37e54 <__flatcc_fb_build_schema@@Base+0x2cc>
   37eac:	ldr	r4, [fp, #392]	; 0x188
   37eb0:	cmp	r4, #0
   37eb4:	beq	39590 <__flatcc_fb_build_schema@@Base+0x1a08>
   37eb8:	ldrh	r5, [r4, #8]
   37ebc:	cmp	r5, #1
   37ec0:	bne	37ee4 <__flatcc_fb_build_schema@@Base+0x35c>
   37ec4:	ldrh	r3, [r4, #48]	; 0x30
   37ec8:	cmp	r3, #1
   37ecc:	beq	37ee4 <__flatcc_fb_build_schema@@Base+0x35c>
   37ed0:	mov	r1, r4
   37ed4:	mov	r0, fp
   37ed8:	bl	34d5c <__flatcc_fb_clear_parser@@Base+0x118>
   37edc:	cmp	r0, #0
   37ee0:	strhne	r5, [r4, #48]	; 0x30
   37ee4:	ldr	r4, [r4]
   37ee8:	cmp	r4, #0
   37eec:	bne	37eb8 <__flatcc_fb_build_schema@@Base+0x330>
   37ef0:	ldr	r9, [fp, #392]	; 0x188
   37ef4:	cmp	r9, #0
   37ef8:	beq	39590 <__flatcc_fb_build_schema@@Base+0x1a08>
   37efc:	mov	sl, r9
   37f00:	ldrh	r3, [sl, #8]
   37f04:	cmp	r3, #0
   37f08:	beq	38d18 <__flatcc_fb_build_schema@@Base+0x1190>
   37f0c:	cmp	r3, #2
   37f10:	bne	380d8 <__flatcc_fb_build_schema@@Base+0x550>
   37f14:	ldrh	r3, [sl, #48]	; 0x30
   37f18:	cmp	r3, #1
   37f1c:	str	r3, [sp, #24]
   37f20:	beq	380d8 <__flatcc_fb_build_schema@@Base+0x550>
   37f24:	cmp	r3, #0
   37f28:	bne	39748 <__flatcc_fb_build_schema@@Base+0x1bc0>
   37f2c:	ldr	r3, [sl, #28]
   37f30:	cmp	r3, #0
   37f34:	beq	37f58 <__flatcc_fb_build_schema@@Base+0x3d0>
   37f38:	ldr	r2, [sp, #24]
   37f3c:	ldr	r1, [sl, #4]
   37f40:	mov	r3, r2
   37f44:	str	r2, [sp, #4]
   37f48:	str	r2, [sp]
   37f4c:	mov	r0, fp
   37f50:	ldr	r2, [pc, #3176]	; 38bc0 <__flatcc_fb_build_schema@@Base+0x1038>
   37f54:	bl	3052c <__flatcc_error_report@@Base>
   37f58:	ldr	r4, [sl, #20]
   37f5c:	cmp	r4, #0
   37f60:	beq	380d8 <__flatcc_fb_build_schema@@Base+0x550>
   37f64:	add	r3, sl, #56	; 0x38
   37f68:	ldr	r8, [sp, #12]
   37f6c:	str	sl, [sp, #20]
   37f70:	mov	r9, r3
   37f74:	b	37fa4 <__flatcc_fb_build_schema@@Base+0x41c>
   37f78:	mov	r2, #0
   37f7c:	ldr	r3, [r0, #4]
   37f80:	ldr	r1, [r4, #4]
   37f84:	mov	r0, fp
   37f88:	str	r2, [sp, #4]
   37f8c:	str	r2, [sp]
   37f90:	ldr	r2, [pc, #3116]	; 38bc4 <__flatcc_fb_build_schema@@Base+0x103c>
   37f94:	bl	3052c <__flatcc_error_report@@Base>
   37f98:	ldr	r4, [r4]
   37f9c:	cmp	r4, #0
   37fa0:	beq	380d4 <__flatcc_fb_build_schema@@Base+0x54c>
   37fa4:	mov	r2, #1
   37fa8:	mov	r1, r4
   37fac:	mov	r0, r9
   37fb0:	bl	29a64 <fb_symbol_table_insert_item@@Base>
   37fb4:	cmp	r0, #0
   37fb8:	bne	37f78 <__flatcc_fb_build_schema@@Base+0x3f0>
   37fbc:	ldrh	r3, [r4, #8]
   37fc0:	cmp	r3, #5
   37fc4:	bne	39340 <__flatcc_fb_build_schema@@Base+0x17b8>
   37fc8:	ldrh	r3, [r4, #56]	; 0x38
   37fcc:	cmp	r3, #0
   37fd0:	bne	38f18 <__flatcc_fb_build_schema@@Base+0x1390>
   37fd4:	ldrh	r3, [r4, #24]
   37fd8:	cmp	r3, #1
   37fdc:	beq	37f98 <__flatcc_fb_build_schema@@Base+0x410>
   37fe0:	cmp	r3, #12
   37fe4:	beq	38004 <__flatcc_fb_build_schema@@Base+0x47c>
   37fe8:	mov	r3, #0
   37fec:	ldr	r1, [r4, #4]
   37ff0:	ldr	r2, [pc, #3024]	; 38bc8 <__flatcc_fb_build_schema@@Base+0x1040>
   37ff4:	str	r3, [sp, #4]
   37ff8:	str	r3, [sp]
   37ffc:	mov	r0, fp
   38000:	bl	3052c <__flatcc_error_report@@Base>
   38004:	ldr	r1, [r4, #32]
   38008:	ldr	r3, [sp, #20]
   3800c:	cmp	r1, #0
   38010:	ldr	r5, [r3, #12]
   38014:	beq	380b0 <__flatcc_fb_build_schema@@Base+0x528>
   38018:	mov	r7, r1
   3801c:	mov	r2, #0
   38020:	b	3802c <__flatcc_fb_build_schema@@Base+0x4a4>
   38024:	mov	r2, r3
   38028:	mov	r7, r6
   3802c:	ldr	r6, [r7]
   38030:	add	r3, r2, #1
   38034:	cmp	r6, #0
   38038:	bne	38024 <__flatcc_fb_build_schema@@Base+0x49c>
   3803c:	adds	r0, r5, #0
   38040:	movne	r0, #1
   38044:	cmp	r3, #1
   38048:	movne	r0, #0
   3804c:	cmp	r0, #0
   38050:	bne	38a3c <__flatcc_fb_build_schema@@Base+0xeb4>
   38054:	cmp	r3, #1
   38058:	moveq	r6, r0
   3805c:	movne	r6, r1
   38060:	cmp	r8, #0
   38064:	beq	380b0 <__flatcc_fb_build_schema@@Base+0x528>
   38068:	ldr	r0, [fp, #412]	; 0x19c
   3806c:	cmp	r0, #0
   38070:	beq	380b0 <__flatcc_fb_build_schema@@Base+0x528>
   38074:	rsb	r2, r2, #0
   38078:	mov	r1, r6
   3807c:	bl	2a880 <fb_scope_table_find@@Base>
   38080:	cmp	r0, #0
   38084:	beq	380ac <__flatcc_fb_build_schema@@Base+0x524>
   38088:	ldr	r3, [r7, #4]
   3808c:	add	r0, r0, #4
   38090:	ldm	r3, {r1, r2}
   38094:	bl	29a8c <fb_symbol_table_find@@Base>
   38098:	subs	sl, r0, #0
   3809c:	beq	380ac <__flatcc_fb_build_schema@@Base+0x524>
   380a0:	ldrh	r2, [sl, #8]
   380a4:	cmp	r2, #4
   380a8:	bls	39390 <__flatcc_fb_build_schema@@Base+0x1808>
   380ac:	ldr	r1, [r4, #32]
   380b0:	mov	r3, r4
   380b4:	ldr	r2, [pc, #2832]	; 38bcc <__flatcc_fb_build_schema@@Base+0x1044>
   380b8:	mov	r0, fp
   380bc:	bl	314ec <error_ref_sym@@Base>
   380c0:	mov	r3, #1
   380c4:	strh	r3, [r4, #24]
   380c8:	ldr	r4, [r4]
   380cc:	cmp	r4, #0
   380d0:	bne	37fa4 <__flatcc_fb_build_schema@@Base+0x41c>
   380d4:	ldr	sl, [sp, #20]
   380d8:	ldr	sl, [sl]
   380dc:	cmp	sl, #0
   380e0:	bne	37f00 <__flatcc_fb_build_schema@@Base+0x378>
   380e4:	ldr	r3, [fp, #396]	; 0x18c
   380e8:	ldr	sl, [fp, #392]	; 0x188
   380ec:	cmp	r3, #0
   380f0:	bne	38b28 <__flatcc_fb_build_schema@@Base+0xfa0>
   380f4:	cmp	sl, #0
   380f8:	str	r3, [fp, #396]	; 0x18c
   380fc:	beq	38168 <__flatcc_fb_build_schema@@Base+0x5e0>
   38100:	ldr	r5, [pc, #2760]	; 38bd0 <__flatcc_fb_build_schema@@Base+0x1048>
   38104:	mov	r7, #36	; 0x24
   38108:	mov	r4, #0
   3810c:	add	r8, sp, #68	; 0x44
   38110:	ldrh	r2, [sl, #8]
   38114:	cmp	r2, #0
   38118:	bne	3815c <__flatcc_fb_build_schema@@Base+0x5d4>
   3811c:	ldrh	r3, [sl, #92]	; 0x5c
   38120:	tst	r3, #8
   38124:	beq	38f38 <__flatcc_fb_build_schema@@Base+0x13b0>
   38128:	ldr	r3, [sl, #20]
   3812c:	str	r2, [sp, #72]	; 0x48
   38130:	cmp	r3, #0
   38134:	add	r2, sp, #72	; 0x48
   38138:	beq	38150 <__flatcc_fb_build_schema@@Base+0x5c8>
   3813c:	str	r3, [r2]
   38140:	add	r2, r3, #108	; 0x6c
   38144:	ldr	r3, [r3]
   38148:	cmp	r3, #0
   3814c:	bne	3813c <__flatcc_fb_build_schema@@Base+0x5b4>
   38150:	str	r4, [r2]
   38154:	ldr	r3, [sp, #72]	; 0x48
   38158:	str	r3, [sl, #24]
   3815c:	ldr	sl, [sl]
   38160:	cmp	sl, #0
   38164:	bne	38110 <__flatcc_fb_build_schema@@Base+0x588>
   38168:	ldr	r3, [fp, #400]	; 0x190
   3816c:	cmp	r3, #0
   38170:	beq	394d4 <__flatcc_fb_build_schema@@Base+0x194c>
   38174:	ldr	r5, [fp, #408]	; 0x198
   38178:	mov	r7, r3
   3817c:	mov	r2, #0
   38180:	b	3818c <__flatcc_fb_build_schema@@Base+0x604>
   38184:	mov	r2, r1
   38188:	mov	r7, r6
   3818c:	ldr	r6, [r7]
   38190:	add	r1, r2, #1
   38194:	cmp	r6, #0
   38198:	bne	38184 <__flatcc_fb_build_schema@@Base+0x5fc>
   3819c:	adds	r0, r5, #0
   381a0:	movne	r0, #1
   381a4:	cmp	r1, #1
   381a8:	movne	r0, #0
   381ac:	cmp	r0, #0
   381b0:	bne	38b50 <__flatcc_fb_build_schema@@Base+0xfc8>
   381b4:	cmp	r1, #1
   381b8:	ldr	r1, [sp, #12]
   381bc:	moveq	r6, r0
   381c0:	movne	r6, r3
   381c4:	cmp	r1, #0
   381c8:	beq	38214 <__flatcc_fb_build_schema@@Base+0x68c>
   381cc:	ldr	r0, [fp, #412]	; 0x19c
   381d0:	cmp	r0, #0
   381d4:	beq	38214 <__flatcc_fb_build_schema@@Base+0x68c>
   381d8:	rsb	r2, r2, #0
   381dc:	mov	r1, r6
   381e0:	bl	2a880 <fb_scope_table_find@@Base>
   381e4:	cmp	r0, #0
   381e8:	beq	38210 <__flatcc_fb_build_schema@@Base+0x688>
   381ec:	ldr	r3, [r7, #4]
   381f0:	add	r0, r0, #4
   381f4:	ldm	r3, {r1, r2}
   381f8:	bl	29a8c <fb_symbol_table_find@@Base>
   381fc:	subs	r4, r0, #0
   38200:	beq	38210 <__flatcc_fb_build_schema@@Base+0x688>
   38204:	ldrh	r3, [r4, #8]
   38208:	cmp	r3, #4
   3820c:	bls	39534 <__flatcc_fb_build_schema@@Base+0x19ac>
   38210:	ldr	r3, [fp, #400]	; 0x190
   38214:	mov	r2, #0
   38218:	str	r2, [fp, #404]	; 0x194
   3821c:	mov	r1, r3
   38220:	ldr	r2, [pc, #2476]	; 38bd4 <__flatcc_fb_build_schema@@Base+0x104c>
   38224:	mov	r3, #0
   38228:	mov	r0, fp
   3822c:	bl	314ec <error_ref_sym@@Base>
   38230:	mov	r3, #0
   38234:	str	r3, [fp, #400]	; 0x190
   38238:	ldr	r0, [fp, #108]	; 0x6c
   3823c:	clz	r3, r0
   38240:	lsr	r3, r3, #5
   38244:	str	r3, [fp, #120]	; 0x78
   38248:	add	sp, sp, #124	; 0x7c
   3824c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   38250:	ldrh	r3, [sl, #48]	; 0x30
   38254:	cmp	r3, #0
   38258:	str	r3, [sp, #24]
   3825c:	bne	3954c <__flatcc_fb_build_schema@@Base+0x19c4>
   38260:	add	r9, sp, #72	; 0x48
   38264:	mov	r1, r3
   38268:	mov	r0, r9
   3826c:	mov	r2, #48	; 0x30
   38270:	ldr	r4, [sl, #28]
   38274:	bl	140ac <memset@plt>
   38278:	cmp	r4, #0
   3827c:	ldrheq	r3, [sp, #24]
   38280:	strheq	r3, [sl, #92]	; 0x5c
   38284:	beq	383b8 <__flatcc_fb_build_schema@@Base+0x830>
   38288:	ldr	r7, [pc, #2464]	; 38c30 <__flatcc_fb_build_schema@@Base+0x10a8>
   3828c:	ldr	r8, [pc, #2432]	; 38c14 <__flatcc_fb_build_schema@@Base+0x108c>
   38290:	ldr	r6, [sp, #24]
   38294:	mov	r5, #100	; 0x64
   38298:	b	382f8 <__flatcc_fb_build_schema@@Base+0x770>
   3829c:	mov	r2, #1
   382a0:	ldr	r0, [r9, r3, lsl #2]
   382a4:	orr	r6, r6, r2, lsl r3
   382a8:	cmp	r0, #0
   382ac:	uxth	r6, r6
   382b0:	lsl	r2, r3, #2
   382b4:	beq	38824 <__flatcc_fb_build_schema@@Base+0xc9c>
   382b8:	mov	r3, #0
   382bc:	ldr	r1, [r4, #4]
   382c0:	ldr	r2, [pc, #2364]	; 38c04 <__flatcc_fb_build_schema@@Base+0x107c>
   382c4:	str	r3, [sp, #4]
   382c8:	str	r3, [sp]
   382cc:	mov	r0, fp
   382d0:	bl	3052c <__flatcc_error_report@@Base>
   382d4:	subs	r5, r5, #1
   382d8:	ldr	r4, [r4]
   382dc:	movne	r2, #1
   382e0:	moveq	r2, #0
   382e4:	cmp	r4, #0
   382e8:	moveq	r2, #0
   382ec:	andne	r2, r2, #1
   382f0:	cmp	r2, #0
   382f4:	beq	38350 <__flatcc_fb_build_schema@@Base+0x7c8>
   382f8:	ldr	r3, [r4, #4]
   382fc:	ldr	r0, [fp, #412]	; 0x19c
   38300:	ldm	r3, {r1, r2}
   38304:	add	r0, r0, #16
   38308:	bl	41118 <fb_name_table_find@@Base>
   3830c:	cmp	r0, #0
   38310:	beq	388a4 <__flatcc_fb_build_schema@@Base+0xd1c>
   38314:	ldr	r3, [r0, #24]
   38318:	cmp	r3, #0
   3831c:	beq	382d4 <__flatcc_fb_build_schema@@Base+0x74c>
   38320:	mov	r2, #16
   38324:	asr	r2, r2, r3
   38328:	ands	r2, r2, #1
   3832c:	bne	3829c <__flatcc_fb_build_schema@@Base+0x714>
   38330:	ldr	r1, [r4, #4]
   38334:	mov	r3, r2
   38338:	str	r2, [sp, #4]
   3833c:	str	r2, [sp]
   38340:	mov	r0, fp
   38344:	ldr	r2, [pc, #2236]	; 38c08 <__flatcc_fb_build_schema@@Base+0x1080>
   38348:	bl	3052c <__flatcc_error_report@@Base>
   3834c:	b	382d4 <__flatcc_fb_build_schema@@Base+0x74c>
   38350:	cmp	r4, #0
   38354:	beq	38374 <__flatcc_fb_build_schema@@Base+0x7ec>
   38358:	ldr	r1, [r4, #4]
   3835c:	mov	r3, r2
   38360:	str	r2, [sp, #4]
   38364:	str	r2, [sp]
   38368:	mov	r0, fp
   3836c:	ldr	r2, [pc, #2200]	; 38c0c <__flatcc_fb_build_schema@@Base+0x1084>
   38370:	bl	3052c <__flatcc_error_report@@Base>
   38374:	ldr	r3, [sp, #88]	; 0x58
   38378:	strh	r6, [sl, #92]	; 0x5c
   3837c:	cmp	r3, #0
   38380:	beq	383b8 <__flatcc_fb_build_schema@@Base+0x830>
   38384:	ldrd	r0, [r3, #8]
   38388:	subs	r2, r0, #1
   3838c:	sbc	r3, r1, #0
   38390:	cmp	r3, #0
   38394:	cmpeq	r2, #255	; 0xff
   38398:	bls	389a8 <__flatcc_fb_build_schema@@Base+0xe20>
   3839c:	mov	r3, #0
   383a0:	ldr	r1, [sl, #4]
   383a4:	ldr	r2, [pc, #2092]	; 38bd8 <__flatcc_fb_build_schema@@Base+0x1050>
   383a8:	str	r3, [sp, #4]
   383ac:	str	r3, [sp]
   383b0:	mov	r0, fp
   383b4:	bl	3052c <__flatcc_error_report@@Base>
   383b8:	ldr	r6, [sl, #20]
   383bc:	cmp	r6, #0
   383c0:	beq	37ea0 <__flatcc_fb_build_schema@@Base+0x318>
   383c4:	add	r3, sl, #56	; 0x38
   383c8:	mov	r2, #0
   383cc:	str	sl, [sp, #20]
   383d0:	str	r2, [sp, #28]
   383d4:	mov	sl, r3
   383d8:	b	38408 <__flatcc_fb_build_schema@@Base+0x880>
   383dc:	mov	r2, #0
   383e0:	ldr	r3, [r0, #4]
   383e4:	ldr	r1, [r6, #4]
   383e8:	mov	r0, fp
   383ec:	str	r2, [sp, #4]
   383f0:	str	r2, [sp]
   383f4:	ldr	r2, [pc, #2016]	; 38bdc <__flatcc_fb_build_schema@@Base+0x1054>
   383f8:	bl	3052c <__flatcc_error_report@@Base>
   383fc:	ldr	r6, [r6]
   38400:	cmp	r6, #0
   38404:	beq	38770 <__flatcc_fb_build_schema@@Base+0xbe8>
   38408:	mov	r2, #1
   3840c:	mov	r1, r6
   38410:	mov	r0, sl
   38414:	bl	29a64 <fb_symbol_table_insert_item@@Base>
   38418:	cmp	r0, #0
   3841c:	bne	383dc <__flatcc_fb_build_schema@@Base+0x854>
   38420:	ldrh	r3, [r6, #8]
   38424:	cmp	r3, #5
   38428:	bne	3956c <__flatcc_fb_build_schema@@Base+0x19e4>
   3842c:	ldr	r3, [fp, #172]	; 0xac
   38430:	ldr	r0, [fp, #168]	; 0xa8
   38434:	cmp	r3, #0
   38438:	ldr	r4, [r6, #64]	; 0x40
   3843c:	mov	r1, #0
   38440:	moveq	r8, #4
   38444:	movne	r3, #128	; 0x80
   38448:	movne	r8, #132	; 0x84
   3844c:	mov	r2, #48	; 0x30
   38450:	cmp	r0, r1
   38454:	mov	r0, r9
   38458:	moveq	r8, r3
   3845c:	bl	140ac <memset@plt>
   38460:	cmp	r4, #0
   38464:	beq	393e4 <__flatcc_fb_build_schema@@Base+0x185c>
   38468:	ldr	r7, [sp, #24]
   3846c:	mov	r5, #100	; 0x64
   38470:	b	384d0 <__flatcc_fb_build_schema@@Base+0x948>
   38474:	mov	r2, #1
   38478:	ldr	r0, [r9, r3, lsl #2]
   3847c:	orr	r7, r7, r2, lsl r3
   38480:	cmp	r0, #0
   38484:	uxth	r7, r7
   38488:	lsl	r2, r3, #2
   3848c:	beq	38524 <__flatcc_fb_build_schema@@Base+0x99c>
   38490:	mov	r3, #0
   38494:	ldr	r1, [r4, #4]
   38498:	ldr	r2, [pc, #1892]	; 38c04 <__flatcc_fb_build_schema@@Base+0x107c>
   3849c:	str	r3, [sp, #4]
   384a0:	str	r3, [sp]
   384a4:	mov	r0, fp
   384a8:	bl	3052c <__flatcc_error_report@@Base>
   384ac:	subs	r5, r5, #1
   384b0:	ldr	r4, [r4]
   384b4:	movne	r2, #1
   384b8:	moveq	r2, #0
   384bc:	cmp	r4, #0
   384c0:	moveq	r2, #0
   384c4:	andne	r2, r2, #1
   384c8:	cmp	r2, #0
   384cc:	beq	38568 <__flatcc_fb_build_schema@@Base+0x9e0>
   384d0:	ldr	r3, [r4, #4]
   384d4:	ldr	r0, [fp, #412]	; 0x19c
   384d8:	ldm	r3, {r1, r2}
   384dc:	add	r0, r0, #16
   384e0:	bl	41118 <fb_name_table_find@@Base>
   384e4:	cmp	r0, #0
   384e8:	beq	386b8 <__flatcc_fb_build_schema@@Base+0xb30>
   384ec:	ldr	r3, [r0, #24]
   384f0:	cmp	r3, #0
   384f4:	beq	384ac <__flatcc_fb_build_schema@@Base+0x924>
   384f8:	asr	r2, r8, r3
   384fc:	ands	r2, r2, #1
   38500:	bne	38474 <__flatcc_fb_build_schema@@Base+0x8ec>
   38504:	ldr	r1, [r4, #4]
   38508:	mov	r3, r2
   3850c:	str	r2, [sp, #4]
   38510:	str	r2, [sp]
   38514:	mov	r0, fp
   38518:	ldr	r2, [pc, #1768]	; 38c08 <__flatcc_fb_build_schema@@Base+0x1080>
   3851c:	bl	3052c <__flatcc_error_report@@Base>
   38520:	b	384ac <__flatcc_fb_build_schema@@Base+0x924>
   38524:	ldr	r1, [pc, #1764]	; 38c10 <__flatcc_fb_build_schema@@Base+0x1088>
   38528:	str	r4, [r9, r3, lsl #2]
   3852c:	add	r2, r1, r2
   38530:	ldr	r2, [r2, #204]	; 0xcc
   38534:	cmp	r2, #0
   38538:	bne	387c0 <__flatcc_fb_build_schema@@Base+0xc38>
   3853c:	ldrh	r3, [r4, #16]
   38540:	cmp	r3, #0
   38544:	beq	384ac <__flatcc_fb_build_schema@@Base+0x924>
   38548:	ldr	r1, [r4, #4]
   3854c:	mov	r3, r2
   38550:	str	r2, [sp, #4]
   38554:	str	r2, [sp]
   38558:	mov	r0, fp
   3855c:	ldr	r2, [pc, #1712]	; 38c14 <__flatcc_fb_build_schema@@Base+0x108c>
   38560:	bl	3052c <__flatcc_error_report@@Base>
   38564:	b	384ac <__flatcc_fb_build_schema@@Base+0x924>
   38568:	cmp	r4, #0
   3856c:	beq	3858c <__flatcc_fb_build_schema@@Base+0xa04>
   38570:	ldr	r1, [r4, #4]
   38574:	mov	r3, r2
   38578:	str	r2, [sp, #4]
   3857c:	str	r2, [sp]
   38580:	mov	r0, fp
   38584:	ldr	r2, [pc, #1664]	; 38c0c <__flatcc_fb_build_schema@@Base+0x1084>
   38588:	bl	3052c <__flatcc_error_report@@Base>
   3858c:	ldrh	r3, [r6, #24]
   38590:	strh	r7, [r6, #72]	; 0x48
   38594:	cmp	r3, #8
   38598:	beq	388c4 <__flatcc_fb_build_schema@@Base+0xd3c>
   3859c:	cmp	r3, #12
   385a0:	bne	38880 <__flatcc_fb_build_schema@@Base+0xcf8>
   385a4:	ldr	r1, [r6, #16]
   385a8:	ldr	r3, [sp, #20]
   385ac:	cmp	r1, #0
   385b0:	ldr	r4, [r3, #12]
   385b4:	beq	3869c <__flatcc_fb_build_schema@@Base+0xb14>
   385b8:	mov	r7, r1
   385bc:	mov	r2, #0
   385c0:	b	385cc <__flatcc_fb_build_schema@@Base+0xa44>
   385c4:	mov	r2, r3
   385c8:	mov	r7, r5
   385cc:	ldr	r5, [r7]
   385d0:	add	r3, r2, #1
   385d4:	cmp	r5, #0
   385d8:	bne	385c4 <__flatcc_fb_build_schema@@Base+0xa3c>
   385dc:	adds	r0, r4, #0
   385e0:	movne	r0, #1
   385e4:	cmp	r3, #1
   385e8:	movne	r0, #0
   385ec:	cmp	r0, #0
   385f0:	beq	38934 <__flatcc_fb_build_schema@@Base+0xdac>
   385f4:	ldr	r3, [r7, #4]
   385f8:	add	r0, r4, #4
   385fc:	ldm	r3, {r1, r2}
   38600:	bl	29a8c <fb_symbol_table_find@@Base>
   38604:	subs	r8, r0, #0
   38608:	beq	38618 <__flatcc_fb_build_schema@@Base+0xa90>
   3860c:	ldrh	r3, [r8, #8]
   38610:	cmp	r3, #4
   38614:	bls	386d8 <__flatcc_fb_build_schema@@Base+0xb50>
   38618:	ldr	r3, [r4]
   3861c:	cmp	r3, #0
   38620:	beq	38698 <__flatcc_fb_build_schema@@Base+0xb10>
   38624:	mov	r8, #0
   38628:	ldr	r3, [r3]
   3862c:	add	r8, r8, #1
   38630:	cmp	r3, #0
   38634:	bne	38628 <__flatcc_fb_build_schema@@Base+0xaa0>
   38638:	ldr	r3, [sp, #12]
   3863c:	cmp	r3, #0
   38640:	beq	38698 <__flatcc_fb_build_schema@@Base+0xb10>
   38644:	ldr	r0, [fp, #412]	; 0x19c
   38648:	rsb	r8, r8, #1
   3864c:	b	38674 <__flatcc_fb_build_schema@@Base+0xaec>
   38650:	cmp	r0, #0
   38654:	beq	38670 <__flatcc_fb_build_schema@@Base+0xae8>
   38658:	mov	r2, r8
   3865c:	ldr	r1, [r4]
   38660:	bl	2a880 <fb_scope_table_find@@Base>
   38664:	cmp	r0, #0
   38668:	bne	38878 <__flatcc_fb_build_schema@@Base+0xcf0>
   3866c:	ldr	r0, [fp, #412]	; 0x19c
   38670:	add	r8, r8, #1
   38674:	cmp	r8, #0
   38678:	bne	38650 <__flatcc_fb_build_schema@@Base+0xac8>
   3867c:	cmp	r0, #0
   38680:	beq	38698 <__flatcc_fb_build_schema@@Base+0xb10>
   38684:	mov	r1, r8
   38688:	mov	r2, r5
   3868c:	bl	2a880 <fb_scope_table_find@@Base>
   38690:	subs	r4, r0, #0
   38694:	bne	385f4 <__flatcc_fb_build_schema@@Base+0xa6c>
   38698:	ldr	r1, [r6, #16]
   3869c:	mov	r3, r6
   386a0:	ldr	r2, [pc, #1336]	; 38be0 <__flatcc_fb_build_schema@@Base+0x1058>
   386a4:	mov	r0, fp
   386a8:	bl	314ec <error_ref_sym@@Base>
   386ac:	mov	r3, #1
   386b0:	strh	r3, [r6, #24]
   386b4:	b	383fc <__flatcc_fb_build_schema@@Base+0x874>
   386b8:	ldr	r1, [r4, #4]
   386bc:	mov	r3, r0
   386c0:	str	r0, [sp, #4]
   386c4:	str	r0, [sp]
   386c8:	ldr	r2, [pc, #1356]	; 38c1c <__flatcc_fb_build_schema@@Base+0x1094>
   386cc:	mov	r0, fp
   386d0:	bl	3052c <__flatcc_error_report@@Base>
   386d4:	b	384ac <__flatcc_fb_build_schema@@Base+0x924>
   386d8:	ldr	r1, [r8, #16]
   386dc:	ldr	r0, [sp, #16]
   386e0:	bl	293b4 <ptr_set_find_item@@Base>
   386e4:	cmp	r0, #0
   386e8:	beq	38618 <__flatcc_fb_build_schema@@Base+0xa90>
   386ec:	str	r8, [r6, #16]
   386f0:	ldrh	r4, [r8, #8]
   386f4:	mov	r3, #14
   386f8:	strh	r3, [r6, #24]
   386fc:	cmp	r4, #1
   38700:	beq	393f8 <__flatcc_fb_build_schema@@Base+0x1870>
   38704:	ldr	r2, [fp, #152]	; 0x98
   38708:	cmp	r2, #0
   3870c:	beq	39668 <__flatcc_fb_build_schema@@Base+0x1ae0>
   38710:	cmp	r4, #3
   38714:	bne	39604 <__flatcc_fb_build_schema@@Base+0x1a7c>
   38718:	ldrh	r3, [r6, #72]	; 0x48
   3871c:	tst	r3, #128	; 0x80
   38720:	beq	3873c <__flatcc_fb_build_schema@@Base+0xbb4>
   38724:	ldr	r2, [fp, #148]	; 0x94
   38728:	cmp	r2, #0
   3872c:	beq	395d8 <__flatcc_fb_build_schema@@Base+0x1a50>
   38730:	ldr	r3, [sp, #28]
   38734:	add	r3, r3, #1
   38738:	str	r3, [sp, #28]
   3873c:	ldrh	r3, [r6, #56]	; 0x38
   38740:	cmp	r3, #0
   38744:	beq	383fc <__flatcc_fb_build_schema@@Base+0x874>
   38748:	mov	r3, #0
   3874c:	ldr	r1, [r6, #4]
   38750:	ldr	r2, [pc, #1164]	; 38be4 <__flatcc_fb_build_schema@@Base+0x105c>
   38754:	str	r3, [sp, #4]
   38758:	str	r3, [sp]
   3875c:	mov	r0, fp
   38760:	bl	3052c <__flatcc_error_report@@Base>
   38764:	ldr	r6, [r6]
   38768:	cmp	r6, #0
   3876c:	bne	38408 <__flatcc_fb_build_schema@@Base+0x880>
   38770:	ldr	r2, [sp, #28]
   38774:	ldr	sl, [sp, #20]
   38778:	cmp	r2, #0
   3877c:	beq	37ea0 <__flatcc_fb_build_schema@@Base+0x318>
   38780:	ldrh	r3, [sl, #10]
   38784:	cmp	r2, #1
   38788:	orr	r3, r3, #8
   3878c:	strh	r3, [sl, #10]
   38790:	beq	37ea0 <__flatcc_fb_build_schema@@Base+0x318>
   38794:	ldr	r3, [fp, #156]	; 0x9c
   38798:	cmp	r3, #0
   3879c:	bne	37ea0 <__flatcc_fb_build_schema@@Base+0x318>
   387a0:	ldr	r1, [sl, #4]
   387a4:	mov	r3, r6
   387a8:	str	r6, [sp, #4]
   387ac:	str	r6, [sp]
   387b0:	ldr	r2, [pc, #1072]	; 38be8 <__flatcc_fb_build_schema@@Base+0x1060>
   387b4:	mov	r0, fp
   387b8:	bl	3052c <__flatcc_error_report@@Base>
   387bc:	b	37e98 <__flatcc_fb_build_schema@@Base+0x310>
   387c0:	cmp	r2, #2
   387c4:	beq	388dc <__flatcc_fb_build_schema@@Base+0xd54>
   387c8:	cmp	r2, #5
   387cc:	bne	3942c <__flatcc_fb_build_schema@@Base+0x18a4>
   387d0:	ldrh	r3, [r4, #16]
   387d4:	cmp	r3, #5
   387d8:	beq	384ac <__flatcc_fb_build_schema@@Base+0x924>
   387dc:	ldr	r1, [r4, #4]
   387e0:	mov	r3, r0
   387e4:	str	r0, [sp, #4]
   387e8:	str	r0, [sp]
   387ec:	ldr	r2, [pc, #1072]	; 38c24 <__flatcc_fb_build_schema@@Base+0x109c>
   387f0:	mov	r0, fp
   387f4:	bl	3052c <__flatcc_error_report@@Base>
   387f8:	b	384ac <__flatcc_fb_build_schema@@Base+0x924>
   387fc:	mov	r3, #0
   38800:	ldr	r1, [sl, #4]
   38804:	mov	r0, fp
   38808:	str	r3, [sp, #4]
   3880c:	str	r3, [sp]
   38810:	ldr	r2, [pc, #980]	; 38bec <__flatcc_fb_build_schema@@Base+0x1064>
   38814:	bl	3052c <__flatcc_error_report@@Base>
   38818:	mvn	r0, #0
   3881c:	add	sp, sp, #124	; 0x7c
   38820:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   38824:	ldr	r1, [pc, #996]	; 38c10 <__flatcc_fb_build_schema@@Base+0x1088>
   38828:	str	r4, [r9, r3, lsl #2]
   3882c:	add	r2, r1, r2
   38830:	ldr	r2, [r2, #204]	; 0xcc
   38834:	cmp	r2, #0
   38838:	beq	38908 <__flatcc_fb_build_schema@@Base+0xd80>
   3883c:	cmp	r2, #2
   38840:	beq	39364 <__flatcc_fb_build_schema@@Base+0x17dc>
   38844:	cmp	r2, #5
   38848:	bne	38ae0 <__flatcc_fb_build_schema@@Base+0xf58>
   3884c:	ldrh	r3, [r4, #16]
   38850:	cmp	r3, #5
   38854:	beq	382d4 <__flatcc_fb_build_schema@@Base+0x74c>
   38858:	ldr	r1, [r4, #4]
   3885c:	mov	r3, r0
   38860:	str	r0, [sp, #4]
   38864:	str	r0, [sp]
   38868:	ldr	r2, [pc, #948]	; 38c24 <__flatcc_fb_build_schema@@Base+0x109c>
   3886c:	mov	r0, fp
   38870:	bl	3052c <__flatcc_error_report@@Base>
   38874:	b	382d4 <__flatcc_fb_build_schema@@Base+0x74c>
   38878:	mov	r4, r0
   3887c:	b	385f4 <__flatcc_fb_build_schema@@Base+0xa6c>
   38880:	mov	r3, #0
   38884:	ldr	r1, [r6, #4]
   38888:	ldr	r2, [pc, #864]	; 38bf0 <__flatcc_fb_build_schema@@Base+0x1068>
   3888c:	str	r3, [sp, #4]
   38890:	str	r3, [sp]
   38894:	mov	r0, fp
   38898:	ldr	sl, [sp, #20]
   3889c:	bl	3052c <__flatcc_error_report@@Base>
   388a0:	b	37e98 <__flatcc_fb_build_schema@@Base+0x310>
   388a4:	ldr	r1, [r4, #4]
   388a8:	mov	r3, r0
   388ac:	str	r0, [sp, #4]
   388b0:	str	r0, [sp]
   388b4:	ldr	r2, [pc, #864]	; 38c1c <__flatcc_fb_build_schema@@Base+0x1094>
   388b8:	mov	r0, fp
   388bc:	bl	3052c <__flatcc_error_report@@Base>
   388c0:	b	382d4 <__flatcc_fb_build_schema@@Base+0x74c>
   388c4:	tst	r7, #128	; 0x80
   388c8:	bne	38730 <__flatcc_fb_build_schema@@Base+0xba8>
   388cc:	ldrh	r3, [r6, #56]	; 0x38
   388d0:	cmp	r3, #0
   388d4:	beq	383fc <__flatcc_fb_build_schema@@Base+0x874>
   388d8:	b	38748 <__flatcc_fb_build_schema@@Base+0xbc0>
   388dc:	ldrh	r3, [r4, #16]
   388e0:	cmp	r3, #2
   388e4:	beq	384ac <__flatcc_fb_build_schema@@Base+0x924>
   388e8:	ldr	r1, [r4, #4]
   388ec:	mov	r3, r0
   388f0:	str	r0, [sp, #4]
   388f4:	str	r0, [sp]
   388f8:	ldr	r2, [pc, #816]	; 38c30 <__flatcc_fb_build_schema@@Base+0x10a8>
   388fc:	mov	r0, fp
   38900:	bl	3052c <__flatcc_error_report@@Base>
   38904:	b	384ac <__flatcc_fb_build_schema@@Base+0x924>
   38908:	ldrh	r3, [r4, #16]
   3890c:	cmp	r3, #0
   38910:	beq	382d4 <__flatcc_fb_build_schema@@Base+0x74c>
   38914:	ldr	r1, [r4, #4]
   38918:	mov	r3, r2
   3891c:	str	r2, [sp, #4]
   38920:	str	r2, [sp]
   38924:	mov	r0, fp
   38928:	mov	r2, r8
   3892c:	bl	3052c <__flatcc_error_report@@Base>
   38930:	b	382d4 <__flatcc_fb_build_schema@@Base+0x74c>
   38934:	cmp	r3, #1
   38938:	ldr	r3, [sp, #12]
   3893c:	moveq	r5, r0
   38940:	movne	r5, r1
   38944:	cmp	r3, #0
   38948:	beq	3869c <__flatcc_fb_build_schema@@Base+0xb14>
   3894c:	ldr	r0, [fp, #412]	; 0x19c
   38950:	cmp	r0, #0
   38954:	beq	3869c <__flatcc_fb_build_schema@@Base+0xb14>
   38958:	rsb	r2, r2, #0
   3895c:	mov	r1, r5
   38960:	bl	2a880 <fb_scope_table_find@@Base>
   38964:	cmp	r0, #0
   38968:	beq	38698 <__flatcc_fb_build_schema@@Base+0xb10>
   3896c:	ldr	r3, [r7, #4]
   38970:	add	r0, r0, #4
   38974:	ldm	r3, {r1, r2}
   38978:	bl	29a8c <fb_symbol_table_find@@Base>
   3897c:	subs	r8, r0, #0
   38980:	beq	38698 <__flatcc_fb_build_schema@@Base+0xb10>
   38984:	ldrh	r3, [r8, #8]
   38988:	cmp	r3, #4
   3898c:	bhi	38698 <__flatcc_fb_build_schema@@Base+0xb10>
   38990:	ldr	r1, [r8, #16]
   38994:	ldr	r0, [sp, #16]
   38998:	bl	293b4 <ptr_set_find_item@@Base>
   3899c:	cmp	r0, #0
   389a0:	bne	386ec <__flatcc_fb_build_schema@@Base+0xb64>
   389a4:	b	38698 <__flatcc_fb_build_schema@@Base+0xb10>
   389a8:	cmp	r1, #0
   389ac:	cmpeq	r0, #1
   389b0:	beq	389e0 <__flatcc_fb_build_schema@@Base+0xe58>
   389b4:	mov	r2, #2
   389b8:	mov	r3, #0
   389bc:	b	389d4 <__flatcc_fb_build_schema@@Base+0xe4c>
   389c0:	adds	r2, r2, r2
   389c4:	adc	r3, r3, r3
   389c8:	cmp	r1, r3
   389cc:	cmpeq	r0, r2
   389d0:	bcc	3839c <__flatcc_fb_build_schema@@Base+0x814>
   389d4:	cmp	r1, r3
   389d8:	cmpeq	r0, r2
   389dc:	bne	389c0 <__flatcc_fb_build_schema@@Base+0xe38>
   389e0:	strh	r0, [sl, #104]	; 0x68
   389e4:	b	383b8 <__flatcc_fb_build_schema@@Base+0x830>
   389e8:	ldr	r3, [r5, #4]
   389ec:	ldm	r3, {r1, r2}
   389f0:	cmp	r2, #0
   389f4:	sub	r2, r2, #1
   389f8:	beq	39528 <__flatcc_fb_build_schema@@Base+0x19a0>
   389fc:	ldr	r3, [pc, #432]	; 38bb4 <__flatcc_fb_build_schema@@Base+0x102c>
   38a00:	b	37c68 <__flatcc_fb_build_schema@@Base+0xe0>
   38a04:	ldr	r3, [r5, #4]
   38a08:	ldm	r3, {r1, r2}
   38a0c:	cmp	r2, #0
   38a10:	sub	r2, r2, #1
   38a14:	bne	389fc <__flatcc_fb_build_schema@@Base+0xe74>
   38a18:	str	r6, [r5, #88]	; 0x58
   38a1c:	str	sl, [r5, #16]
   38a20:	b	37c9c <__flatcc_fb_build_schema@@Base+0x114>
   38a24:	cmp	r3, #0
   38a28:	bne	37c8c <__flatcc_fb_build_schema@@Base+0x104>
   38a2c:	str	r6, [r5, #88]	; 0x58
   38a30:	str	sl, [r5, #16]
   38a34:	b	37c9c <__flatcc_fb_build_schema@@Base+0x114>
   38a38:	mov	r5, r0
   38a3c:	ldr	r3, [r7, #4]
   38a40:	add	r0, r5, #4
   38a44:	ldm	r3, {r1, r2}
   38a48:	bl	29a8c <fb_symbol_table_find@@Base>
   38a4c:	subs	sl, r0, #0
   38a50:	beq	38a60 <__flatcc_fb_build_schema@@Base+0xed8>
   38a54:	ldrh	r3, [sl, #8]
   38a58:	cmp	r3, #4
   38a5c:	bls	38ccc <__flatcc_fb_build_schema@@Base+0x1144>
   38a60:	ldr	r3, [r5]
   38a64:	cmp	r3, #0
   38a68:	beq	380ac <__flatcc_fb_build_schema@@Base+0x524>
   38a6c:	mov	sl, #0
   38a70:	ldr	r3, [r3]
   38a74:	add	sl, sl, #1
   38a78:	cmp	r3, #0
   38a7c:	bne	38a70 <__flatcc_fb_build_schema@@Base+0xee8>
   38a80:	cmp	r8, #0
   38a84:	beq	380ac <__flatcc_fb_build_schema@@Base+0x524>
   38a88:	ldr	r0, [fp, #412]	; 0x19c
   38a8c:	rsb	sl, sl, #1
   38a90:	b	38ab8 <__flatcc_fb_build_schema@@Base+0xf30>
   38a94:	cmp	r0, #0
   38a98:	beq	38ab4 <__flatcc_fb_build_schema@@Base+0xf2c>
   38a9c:	mov	r2, sl
   38aa0:	ldr	r1, [r5]
   38aa4:	bl	2a880 <fb_scope_table_find@@Base>
   38aa8:	cmp	r0, #0
   38aac:	bne	38a38 <__flatcc_fb_build_schema@@Base+0xeb0>
   38ab0:	ldr	r0, [fp, #412]	; 0x19c
   38ab4:	add	sl, sl, #1
   38ab8:	cmp	sl, #0
   38abc:	bne	38a94 <__flatcc_fb_build_schema@@Base+0xf0c>
   38ac0:	cmp	r0, #0
   38ac4:	beq	380ac <__flatcc_fb_build_schema@@Base+0x524>
   38ac8:	mov	r1, sl
   38acc:	mov	r2, r6
   38ad0:	bl	2a880 <fb_scope_table_find@@Base>
   38ad4:	subs	r5, r0, #0
   38ad8:	bne	38a3c <__flatcc_fb_build_schema@@Base+0xeb4>
   38adc:	b	380ac <__flatcc_fb_build_schema@@Base+0x524>
   38ae0:	cmp	r2, #4
   38ae4:	bne	39714 <__flatcc_fb_build_schema@@Base+0x1b8c>
   38ae8:	ldrh	r3, [r4, #16]
   38aec:	sub	r3, r3, #4
   38af0:	cmp	r3, #1
   38af4:	bls	382d4 <__flatcc_fb_build_schema@@Base+0x74c>
   38af8:	ldr	r1, [r4, #4]
   38afc:	mov	r3, r0
   38b00:	str	r0, [sp, #4]
   38b04:	str	r0, [sp]
   38b08:	ldr	r2, [pc, #332]	; 38c5c <__flatcc_fb_build_schema@@Base+0x10d4>
   38b0c:	mov	r0, fp
   38b10:	bl	3052c <__flatcc_error_report@@Base>
   38b14:	b	382d4 <__flatcc_fb_build_schema@@Base+0x74c>
   38b18:	ldr	r3, [fp, #396]	; 0x18c
   38b1c:	cmp	r3, #0
   38b20:	movne	sl, #0
   38b24:	beq	3959c <__flatcc_fb_build_schema@@Base+0x1a14>
   38b28:	mov	r1, #0
   38b2c:	b	38b34 <__flatcc_fb_build_schema@@Base+0xfac>
   38b30:	mov	r3, r2
   38b34:	ldr	r2, [r3, #120]	; 0x78
   38b38:	str	r1, [r3, #120]	; 0x78
   38b3c:	cmp	r2, #0
   38b40:	mov	r1, r3
   38b44:	bne	38b30 <__flatcc_fb_build_schema@@Base+0xfa8>
   38b48:	b	380f4 <__flatcc_fb_build_schema@@Base+0x56c>
   38b4c:	mov	r5, r0
   38b50:	ldr	r3, [r7, #4]
   38b54:	add	r0, r5, #4
   38b58:	ldm	r3, {r1, r2}
   38b5c:	bl	29a8c <fb_symbol_table_find@@Base>
   38b60:	subs	r4, r0, #0
   38b64:	beq	38b74 <__flatcc_fb_build_schema@@Base+0xfec>
   38b68:	ldrh	r3, [r4, #8]
   38b6c:	cmp	r3, #4
   38b70:	bls	392d8 <__flatcc_fb_build_schema@@Base+0x1750>
   38b74:	ldr	r3, [r5]
   38b78:	cmp	r3, #0
   38b7c:	beq	38210 <__flatcc_fb_build_schema@@Base+0x688>
   38b80:	mov	r4, #0
   38b84:	ldr	r3, [r3]
   38b88:	add	r4, r4, #1
   38b8c:	cmp	r3, #0
   38b90:	bne	38b84 <__flatcc_fb_build_schema@@Base+0xffc>
   38b94:	ldr	r3, [sp, #12]
   38b98:	cmp	r3, #0
   38b9c:	beq	38210 <__flatcc_fb_build_schema@@Base+0x688>
   38ba0:	ldr	r0, [fp, #412]	; 0x19c
   38ba4:	rsb	r4, r4, #1
   38ba8:	b	38ca4 <__flatcc_fb_build_schema@@Base+0x111c>
   38bac:	andeq	ip, r5, r8, asr #29
   38bb0:			; <UNDEFINED> instruction: 0x01000193
   38bb4:	tsthi	ip, r5, asr #27
   38bb8:	andeq	ip, r5, r4, ror #29
   38bbc:	andeq	fp, r5, r0, lsr #27
   38bc0:	strdeq	sp, [r5], -ip
   38bc4:	andeq	sp, r5, r0, lsr #2
   38bc8:	andeq	sp, r5, r0, lsl #3
   38bcc:	andeq	sp, r5, r0, asr #3
   38bd0:	andeq	r8, r0, r0, lsl #13
   38bd4:			; <UNDEFINED> instruction: 0x0005d2b8
   38bd8:	andeq	sp, r5, r0, lsl r3
   38bdc:	andeq	ip, r5, ip, lsr #30
   38be0:	andeq	ip, r5, r4, ror pc
   38be4:	muleq	r5, r4, r0
   38be8:	andeq	ip, r5, r0, lsr sl
   38bec:	andeq	sp, r5, r8, asr #1
   38bf0:	andeq	sp, r5, r8, asr r0
   38bf4:	strdeq	sp, [r5], -r4
   38bf8:	andeq	sp, r5, ip, lsr #4
   38bfc:	andeq	sp, r5, r0, ror #4
   38c00:	andeq	sp, r5, r0, asr #2
   38c04:	andeq	ip, r5, r8, ror #4
   38c08:	andeq	ip, r5, r8, lsr r2
   38c0c:	andeq	ip, r5, r8, asr r3
   38c10:	andeq	fp, r5, r8, ror #24
   38c14:	muleq	r5, r0, r2
   38c18:	andeq	sp, r5, ip, asr #5
   38c1c:	andeq	ip, r5, r8, lsl r2
   38c20:	muleq	r5, r0, r3
   38c24:	ldrdeq	ip, [r5], -ip	; <UNPREDICTABLE>
   38c28:	strdeq	sp, [r5], -r4
   38c2c:	andeq	sp, r5, r0, lsr #5
   38c30:			; <UNDEFINED> instruction: 0x0005c2b8
   38c34:	andeq	ip, r5, r0, lsl #30
   38c38:	andeq	ip, r5, r0, asr pc
   38c3c:	andeq	ip, r5, r8, ror #31
   38c40:	andeq	ip, r5, r4, lsr #31
   38c44:	andeq	fp, r5, r8, lsl #27
   38c48:	andeq	r0, r0, r6, lsl r6
   38c4c:	muleq	r5, r0, lr
   38c50:	andeq	pc, r6, r8, lsr #1
   38c54:	andeq	r3, r4, r0, lsr lr
   38c58:	andeq	sp, r5, ip, lsl r0
   38c5c:	andeq	ip, r5, r8, lsl #6
   38c60:	andeq	fp, r5, r8, ror #27
   38c64:	strdeq	r0, [r0], -r1
   38c68:	muleq	r5, r8, r2
   38c6c:	andeq	ip, r5, ip, lsr #6
   38c70:	ldrdeq	fp, [r5], -r4
   38c74:	andeq	r0, r0, r9, ror #8
   38c78:	andeq	ip, r5, r8, lsl #4
   38c7c:	strdeq	fp, [r5], -ip
   38c80:	cmp	r0, #0
   38c84:	beq	38ca0 <__flatcc_fb_build_schema@@Base+0x1118>
   38c88:	mov	r2, r4
   38c8c:	ldr	r1, [r5]
   38c90:	bl	2a880 <fb_scope_table_find@@Base>
   38c94:	cmp	r0, #0
   38c98:	bne	38b4c <__flatcc_fb_build_schema@@Base+0xfc4>
   38c9c:	ldr	r0, [fp, #412]	; 0x19c
   38ca0:	add	r4, r4, #1
   38ca4:	cmp	r4, #0
   38ca8:	bne	38c80 <__flatcc_fb_build_schema@@Base+0x10f8>
   38cac:	cmp	r0, #0
   38cb0:	beq	38210 <__flatcc_fb_build_schema@@Base+0x688>
   38cb4:	mov	r1, r4
   38cb8:	mov	r2, r6
   38cbc:	bl	2a880 <fb_scope_table_find@@Base>
   38cc0:	subs	r5, r0, #0
   38cc4:	bne	38b50 <__flatcc_fb_build_schema@@Base+0xfc8>
   38cc8:	b	38210 <__flatcc_fb_build_schema@@Base+0x688>
   38ccc:	ldr	r1, [sl, #16]
   38cd0:	ldr	r0, [sp, #16]
   38cd4:	bl	293b4 <ptr_set_find_item@@Base>
   38cd8:	cmp	r0, #0
   38cdc:	beq	38a60 <__flatcc_fb_build_schema@@Base+0xed8>
   38ce0:	ldrh	r2, [sl, #8]
   38ce4:	cmp	r2, #0
   38ce8:	beq	38d50 <__flatcc_fb_build_schema@@Base+0x11c8>
   38cec:	mov	r2, #0
   38cf0:	ldr	r3, [sl, #4]
   38cf4:	ldr	r1, [r4, #4]
   38cf8:	mov	r0, fp
   38cfc:	str	r2, [sp, #4]
   38d00:	str	r2, [sp]
   38d04:	ldr	r2, [pc, #-280]	; 38bf4 <__flatcc_fb_build_schema@@Base+0x106c>
   38d08:	bl	3052c <__flatcc_error_report@@Base>
   38d0c:	mov	r3, #1
   38d10:	strh	r3, [r4, #24]
   38d14:	b	37f98 <__flatcc_fb_build_schema@@Base+0x410>
   38d18:	ldrh	r3, [sl, #48]	; 0x30
   38d1c:	cmp	r3, #1
   38d20:	beq	380d8 <__flatcc_fb_build_schema@@Base+0x550>
   38d24:	mov	r1, sl
   38d28:	mov	r0, fp
   38d2c:	bl	35238 <__flatcc_fb_clear_parser@@Base+0x5f4>
   38d30:	cmp	r0, #0
   38d34:	beq	380d8 <__flatcc_fb_build_schema@@Base+0x550>
   38d38:	mov	r3, #1
   38d3c:	strh	r3, [sl, #48]	; 0x30
   38d40:	ldr	sl, [sl]
   38d44:	cmp	sl, #0
   38d48:	bne	37f00 <__flatcc_fb_build_schema@@Base+0x378>
   38d4c:	b	380e4 <__flatcc_fb_build_schema@@Base+0x55c>
   38d50:	ldr	r1, [r4, #16]
   38d54:	ldr	r3, [sp, #20]
   38d58:	mov	r0, #14
   38d5c:	cmp	r1, #0
   38d60:	str	sl, [r4, #32]
   38d64:	strh	r0, [r4, #40]	; 0x28
   38d68:	ldr	r5, [r3, #12]
   38d6c:	beq	38e04 <__flatcc_fb_build_schema@@Base+0x127c>
   38d70:	mov	r6, r1
   38d74:	b	38d80 <__flatcc_fb_build_schema@@Base+0x11f8>
   38d78:	mov	r2, r3
   38d7c:	mov	r6, r7
   38d80:	ldr	r7, [r6]
   38d84:	add	r3, r2, #1
   38d88:	cmp	r7, #0
   38d8c:	bne	38d78 <__flatcc_fb_build_schema@@Base+0x11f0>
   38d90:	adds	r0, r5, #0
   38d94:	movne	r0, #1
   38d98:	cmp	r3, #1
   38d9c:	movne	r0, #0
   38da0:	cmp	r0, #0
   38da4:	bne	38e24 <__flatcc_fb_build_schema@@Base+0x129c>
   38da8:	cmp	r3, #1
   38dac:	moveq	r7, r0
   38db0:	movne	r7, r1
   38db4:	cmp	r8, #0
   38db8:	beq	38e04 <__flatcc_fb_build_schema@@Base+0x127c>
   38dbc:	ldr	r0, [fp, #412]	; 0x19c
   38dc0:	cmp	r0, #0
   38dc4:	beq	38e04 <__flatcc_fb_build_schema@@Base+0x127c>
   38dc8:	rsb	r2, r2, #0
   38dcc:	mov	r1, r7
   38dd0:	bl	2a880 <fb_scope_table_find@@Base>
   38dd4:	cmp	r0, #0
   38dd8:	beq	38e00 <__flatcc_fb_build_schema@@Base+0x1278>
   38ddc:	ldr	r3, [r6, #4]
   38de0:	add	r0, r0, #4
   38de4:	ldm	r3, {r1, r2}
   38de8:	bl	29a8c <fb_symbol_table_find@@Base>
   38dec:	subs	r3, r0, #0
   38df0:	beq	38e00 <__flatcc_fb_build_schema@@Base+0x1278>
   38df4:	ldrh	r2, [r3, #8]
   38df8:	cmp	r2, #4
   38dfc:	bls	39464 <__flatcc_fb_build_schema@@Base+0x18dc>
   38e00:	ldr	r1, [r4, #16]
   38e04:	mov	r3, r4
   38e08:	ldr	r2, [pc, #-536]	; 38bf8 <__flatcc_fb_build_schema@@Base+0x1070>
   38e0c:	mov	r0, fp
   38e10:	bl	314ec <error_ref_sym@@Base>
   38e14:	mov	r3, #1
   38e18:	strh	r3, [r4, #24]
   38e1c:	b	37f98 <__flatcc_fb_build_schema@@Base+0x410>
   38e20:	mov	r5, r0
   38e24:	ldr	r3, [r6, #4]
   38e28:	add	r0, r5, #4
   38e2c:	ldm	r3, {r1, r2}
   38e30:	bl	29a8c <fb_symbol_table_find@@Base>
   38e34:	subs	sl, r0, #0
   38e38:	beq	38e48 <__flatcc_fb_build_schema@@Base+0x12c0>
   38e3c:	ldrh	r3, [sl, #8]
   38e40:	cmp	r3, #4
   38e44:	bls	38ec8 <__flatcc_fb_build_schema@@Base+0x1340>
   38e48:	ldr	r3, [r5]
   38e4c:	cmp	r3, #0
   38e50:	beq	38e00 <__flatcc_fb_build_schema@@Base+0x1278>
   38e54:	mov	sl, #0
   38e58:	ldr	r3, [r3]
   38e5c:	add	sl, sl, #1
   38e60:	cmp	r3, #0
   38e64:	bne	38e58 <__flatcc_fb_build_schema@@Base+0x12d0>
   38e68:	cmp	r8, #0
   38e6c:	beq	38e00 <__flatcc_fb_build_schema@@Base+0x1278>
   38e70:	ldr	r0, [fp, #412]	; 0x19c
   38e74:	rsb	sl, sl, #1
   38e78:	b	38ea0 <__flatcc_fb_build_schema@@Base+0x1318>
   38e7c:	cmp	r0, #0
   38e80:	beq	38e9c <__flatcc_fb_build_schema@@Base+0x1314>
   38e84:	mov	r2, sl
   38e88:	ldr	r1, [r5]
   38e8c:	bl	2a880 <fb_scope_table_find@@Base>
   38e90:	cmp	r0, #0
   38e94:	bne	38e20 <__flatcc_fb_build_schema@@Base+0x1298>
   38e98:	ldr	r0, [fp, #412]	; 0x19c
   38e9c:	add	sl, sl, #1
   38ea0:	cmp	sl, #0
   38ea4:	bne	38e7c <__flatcc_fb_build_schema@@Base+0x12f4>
   38ea8:	cmp	r0, #0
   38eac:	beq	38e00 <__flatcc_fb_build_schema@@Base+0x1278>
   38eb0:	mov	r1, sl
   38eb4:	mov	r2, r7
   38eb8:	bl	2a880 <fb_scope_table_find@@Base>
   38ebc:	subs	r5, r0, #0
   38ec0:	bne	38e24 <__flatcc_fb_build_schema@@Base+0x129c>
   38ec4:	b	38e00 <__flatcc_fb_build_schema@@Base+0x1278>
   38ec8:	ldr	r1, [sl, #16]
   38ecc:	ldr	r0, [sp, #16]
   38ed0:	bl	293b4 <ptr_set_find_item@@Base>
   38ed4:	cmp	r0, #0
   38ed8:	beq	38e48 <__flatcc_fb_build_schema@@Base+0x12c0>
   38edc:	mov	r3, sl
   38ee0:	ldrh	r1, [r3, #8]
   38ee4:	cmp	r1, #0
   38ee8:	beq	39174 <__flatcc_fb_build_schema@@Base+0x15ec>
   38eec:	mov	r2, #0
   38ef0:	ldr	r3, [r3, #4]
   38ef4:	ldr	r1, [r4, #4]
   38ef8:	mov	r0, fp
   38efc:	str	r2, [sp, #4]
   38f00:	str	r2, [sp]
   38f04:	ldr	r2, [pc, #-784]	; 38bfc <__flatcc_fb_build_schema@@Base+0x1074>
   38f08:	bl	3052c <__flatcc_error_report@@Base>
   38f0c:	mov	r3, #1
   38f10:	strh	r3, [r4, #24]
   38f14:	b	37f98 <__flatcc_fb_build_schema@@Base+0x410>
   38f18:	ldr	r1, [r4, #4]
   38f1c:	mov	r3, r0
   38f20:	str	r0, [sp, #4]
   38f24:	str	r0, [sp]
   38f28:	ldr	r2, [pc, #-816]	; 38c00 <__flatcc_fb_build_schema@@Base+0x1078>
   38f2c:	mov	r0, fp
   38f30:	bl	3052c <__flatcc_error_report@@Base>
   38f34:	b	37fd4 <__flatcc_fb_build_schema@@Base+0x44c>
   38f38:	ldr	r6, [sl, #20]
   38f3c:	mov	r2, r7
   38f40:	mov	r1, r4
   38f44:	add	r0, sp, #36	; 0x24
   38f48:	bl	140ac <memset@plt>
   38f4c:	mov	r2, r7
   38f50:	mov	r1, r4
   38f54:	add	r0, sp, #72	; 0x48
   38f58:	bl	140ac <memset@plt>
   38f5c:	cmp	r6, #0
   38f60:	beq	39018 <__flatcc_fb_build_schema@@Base+0x1490>
   38f64:	mov	r1, r6
   38f68:	mov	r0, #1
   38f6c:	ldrh	r3, [r1, #24]
   38f70:	ldrh	r2, [r1, #74]	; 0x4a
   38f74:	cmp	r3, #15
   38f78:	bhi	38fbc <__flatcc_fb_build_schema@@Base+0x1434>
   38f7c:	lsl	r3, r0, r3
   38f80:	ands	ip, r3, r5
   38f84:	bne	38fb8 <__flatcc_fb_build_schema@@Base+0x1430>
   38f88:	tst	r3, #2
   38f8c:	bne	394a4 <__flatcc_fb_build_schema@@Base+0x191c>
   38f90:	tst	r3, #16384	; 0x4000
   38f94:	beq	38fbc <__flatcc_fb_build_schema@@Base+0x1434>
   38f98:	ldr	r2, [r1, #16]
   38f9c:	ldrh	r3, [r2, #8]
   38fa0:	cmp	r3, #3
   38fa4:	beq	3916c <__flatcc_fb_build_schema@@Base+0x15e4>
   38fa8:	cmp	r3, #4
   38fac:	beq	38fb8 <__flatcc_fb_build_schema@@Base+0x1430>
   38fb0:	cmp	r3, #1
   38fb4:	beq	3916c <__flatcc_fb_build_schema@@Base+0x15e4>
   38fb8:	ldrh	r2, [fp, #192]	; 0xc0
   38fbc:	cmp	r2, #0
   38fc0:	beq	396cc <__flatcc_fb_build_schema@@Base+0x1b44>
   38fc4:	lsrs	r2, r2, #1
   38fc8:	mov	r3, r4
   38fcc:	beq	38fe8 <__flatcc_fb_build_schema@@Base+0x1460>
   38fd0:	add	r3, r3, #1
   38fd4:	lsrs	r2, r2, #1
   38fd8:	uxth	r3, r3
   38fdc:	bne	38fd0 <__flatcc_fb_build_schema@@Base+0x1448>
   38fe0:	cmp	r3, #7
   38fe4:	movcs	r3, #7
   38fe8:	add	r2, sp, #120	; 0x78
   38fec:	add	r3, r2, r3, lsl #2
   38ff0:	ldr	r2, [r3, #-84]	; 0xffffffac
   38ff4:	cmp	r2, #0
   38ff8:	beq	39130 <__flatcc_fb_build_schema@@Base+0x15a8>
   38ffc:	ldr	r2, [r3, #-48]	; 0xffffffd0
   39000:	add	ip, r1, #108	; 0x6c
   39004:	str	ip, [r3, #-48]	; 0xffffffd0
   39008:	str	r1, [r2]
   3900c:	ldr	r1, [r1]
   39010:	cmp	r1, #0
   39014:	bne	38f6c <__flatcc_fb_build_schema@@Base+0x13e4>
   39018:	mov	r1, r8
   3901c:	mov	r0, #8
   39020:	str	r8, [sp, #104]	; 0x68
   39024:	sub	r3, r0, #1
   39028:	add	r2, sp, #120	; 0x78
   3902c:	uxth	r3, r3
   39030:	add	r2, r2, r3, lsl #2
   39034:	ldr	r2, [r2, #-84]	; 0xffffffac
   39038:	cmp	r2, #0
   3903c:	bne	3914c <__flatcc_fb_build_schema@@Base+0x15c4>
   39040:	cmp	r3, #0
   39044:	beq	3911c <__flatcc_fb_build_schema@@Base+0x1594>
   39048:	sub	r3, r0, #2
   3904c:	add	r2, sp, #120	; 0x78
   39050:	uxth	r3, r3
   39054:	add	r2, r2, r3, lsl #2
   39058:	ldr	r2, [r2, #-84]	; 0xffffffac
   3905c:	cmp	r2, #0
   39060:	bne	3914c <__flatcc_fb_build_schema@@Base+0x15c4>
   39064:	cmp	r3, #0
   39068:	beq	3911c <__flatcc_fb_build_schema@@Base+0x1594>
   3906c:	sub	r3, r0, #3
   39070:	add	r2, sp, #120	; 0x78
   39074:	uxth	r3, r3
   39078:	add	r2, r2, r3, lsl #2
   3907c:	ldr	r2, [r2, #-84]	; 0xffffffac
   39080:	cmp	r2, #0
   39084:	bne	3914c <__flatcc_fb_build_schema@@Base+0x15c4>
   39088:	cmp	r3, #0
   3908c:	beq	3911c <__flatcc_fb_build_schema@@Base+0x1594>
   39090:	sub	r3, r0, #4
   39094:	add	r2, sp, #120	; 0x78
   39098:	uxth	r3, r3
   3909c:	add	r2, r2, r3, lsl #2
   390a0:	ldr	r2, [r2, #-84]	; 0xffffffac
   390a4:	cmp	r2, #0
   390a8:	bne	3914c <__flatcc_fb_build_schema@@Base+0x15c4>
   390ac:	cmp	r3, #0
   390b0:	beq	3911c <__flatcc_fb_build_schema@@Base+0x1594>
   390b4:	sub	r3, r0, #5
   390b8:	add	r2, sp, #120	; 0x78
   390bc:	uxth	r3, r3
   390c0:	add	r2, r2, r3, lsl #2
   390c4:	ldr	r2, [r2, #-84]	; 0xffffffac
   390c8:	cmp	r2, #0
   390cc:	bne	3914c <__flatcc_fb_build_schema@@Base+0x15c4>
   390d0:	cmp	r3, #0
   390d4:	beq	3911c <__flatcc_fb_build_schema@@Base+0x1594>
   390d8:	sub	r2, r0, #6
   390dc:	uxth	r3, r2
   390e0:	add	r2, sp, #120	; 0x78
   390e4:	add	r2, r2, r3, lsl #2
   390e8:	ldr	r2, [r2, #-84]	; 0xffffffac
   390ec:	cmp	r2, #0
   390f0:	bne	3914c <__flatcc_fb_build_schema@@Base+0x15c4>
   390f4:	cmp	r3, #0
   390f8:	beq	3911c <__flatcc_fb_build_schema@@Base+0x1594>
   390fc:	sub	r3, r0, #7
   39100:	add	r2, sp, #120	; 0x78
   39104:	uxth	r0, r3
   39108:	mov	r3, r0
   3910c:	add	r2, r2, r0, lsl #2
   39110:	ldr	r2, [r2, #-84]	; 0xffffffac
   39114:	cmp	r2, #0
   39118:	bne	39150 <__flatcc_fb_build_schema@@Base+0x15c8>
   3911c:	ldr	r3, [sp, #36]	; 0x24
   39120:	str	r3, [r1]
   39124:	ldr	r3, [sp, #68]	; 0x44
   39128:	str	r3, [sl, #24]
   3912c:	b	3815c <__flatcc_fb_build_schema@@Base+0x5d4>
   39130:	add	r2, r1, #108	; 0x6c
   39134:	str	r1, [r3, #-84]	; 0xffffffac
   39138:	ldr	r1, [r1]
   3913c:	str	r2, [r3, #-48]	; 0xffffffd0
   39140:	cmp	r1, #0
   39144:	bne	38f6c <__flatcc_fb_build_schema@@Base+0x13e4>
   39148:	b	39018 <__flatcc_fb_build_schema@@Base+0x1490>
   3914c:	mov	r0, r3
   39150:	cmp	r0, #0
   39154:	str	r2, [r1]
   39158:	beq	39124 <__flatcc_fb_build_schema@@Base+0x159c>
   3915c:	add	r2, sp, #120	; 0x78
   39160:	add	r3, r2, r3, lsl #2
   39164:	ldr	r1, [r3, #-48]	; 0xffffffd0
   39168:	b	39024 <__flatcc_fb_build_schema@@Base+0x149c>
   3916c:	ldrh	r2, [r2, #104]	; 0x68
   39170:	b	38fbc <__flatcc_fb_build_schema@@Base+0x1434>
   39174:	mov	r7, #0
   39178:	mov	r6, #0
   3917c:	mov	r2, #14
   39180:	ldr	r5, [r4, #64]	; 0x40
   39184:	add	sl, sp, #72	; 0x48
   39188:	strd	r6, [r4, #88]	; 0x58
   3918c:	strh	r2, [r4, #24]
   39190:	str	r3, [r4, #16]
   39194:	mov	r0, sl
   39198:	mov	r2, #48	; 0x30
   3919c:	bl	140ac <memset@plt>
   391a0:	cmp	r5, #0
   391a4:	ldr	r7, [sp, #24]
   391a8:	beq	3928c <__flatcc_fb_build_schema@@Base+0x1704>
   391ac:	mov	r6, #100	; 0x64
   391b0:	b	39210 <__flatcc_fb_build_schema@@Base+0x1688>
   391b4:	mov	r1, #1
   391b8:	ldr	r2, [sl, r3, lsl #2]
   391bc:	orr	r7, r7, r1, lsl r3
   391c0:	cmp	r2, #0
   391c4:	uxth	r7, r7
   391c8:	lsl	r1, r3, #2
   391cc:	beq	39294 <__flatcc_fb_build_schema@@Base+0x170c>
   391d0:	mov	r3, #0
   391d4:	ldr	r1, [r5, #4]
   391d8:	ldr	r2, [pc, #-1500]	; 38c04 <__flatcc_fb_build_schema@@Base+0x107c>
   391dc:	str	r3, [sp, #4]
   391e0:	str	r3, [sp]
   391e4:	mov	r0, fp
   391e8:	bl	3052c <__flatcc_error_report@@Base>
   391ec:	subs	r6, r6, #1
   391f0:	ldr	r5, [r5]
   391f4:	movne	r2, #1
   391f8:	moveq	r2, #0
   391fc:	cmp	r5, #0
   39200:	moveq	r2, #0
   39204:	andne	r2, r2, #1
   39208:	cmp	r2, #0
   3920c:	beq	39268 <__flatcc_fb_build_schema@@Base+0x16e0>
   39210:	ldr	r3, [r5, #4]
   39214:	ldr	r0, [fp, #412]	; 0x19c
   39218:	ldm	r3, {r1, r2}
   3921c:	add	r0, r0, #16
   39220:	bl	41118 <fb_name_table_find@@Base>
   39224:	cmp	r0, #0
   39228:	beq	39320 <__flatcc_fb_build_schema@@Base+0x1798>
   3922c:	ldr	r3, [r0, #24]
   39230:	cmp	r3, #0
   39234:	beq	391ec <__flatcc_fb_build_schema@@Base+0x1664>
   39238:	mov	r2, #4
   3923c:	asr	r2, r2, r3
   39240:	ands	r2, r2, #1
   39244:	bne	391b4 <__flatcc_fb_build_schema@@Base+0x162c>
   39248:	ldr	r1, [r5, #4]
   3924c:	mov	r3, r2
   39250:	str	r2, [sp, #4]
   39254:	str	r2, [sp]
   39258:	mov	r0, fp
   3925c:	ldr	r2, [pc, #-1628]	; 38c08 <__flatcc_fb_build_schema@@Base+0x1080>
   39260:	bl	3052c <__flatcc_error_report@@Base>
   39264:	b	391ec <__flatcc_fb_build_schema@@Base+0x1664>
   39268:	cmp	r5, #0
   3926c:	beq	3928c <__flatcc_fb_build_schema@@Base+0x1704>
   39270:	ldr	r1, [r5, #4]
   39274:	mov	r3, r2
   39278:	str	r2, [sp, #4]
   3927c:	str	r2, [sp]
   39280:	mov	r0, fp
   39284:	ldr	r2, [pc, #-1664]	; 38c0c <__flatcc_fb_build_schema@@Base+0x1084>
   39288:	bl	3052c <__flatcc_error_report@@Base>
   3928c:	strh	r7, [r4, #72]	; 0x48
   39290:	b	37f98 <__flatcc_fb_build_schema@@Base+0x410>
   39294:	ldr	r0, [pc, #-1676]	; 38c10 <__flatcc_fb_build_schema@@Base+0x1088>
   39298:	str	r5, [sl, r3, lsl #2]
   3929c:	add	r1, r0, r1
   392a0:	ldr	r0, [r1, #204]	; 0xcc
   392a4:	cmp	r0, #0
   392a8:	bne	393a8 <__flatcc_fb_build_schema@@Base+0x1820>
   392ac:	ldrh	r3, [r5, #16]
   392b0:	cmp	r3, #0
   392b4:	beq	391ec <__flatcc_fb_build_schema@@Base+0x1664>
   392b8:	ldr	r1, [r5, #4]
   392bc:	mov	r3, r0
   392c0:	str	r0, [sp, #4]
   392c4:	str	r0, [sp]
   392c8:	ldr	r2, [pc, #-1724]	; 38c14 <__flatcc_fb_build_schema@@Base+0x108c>
   392cc:	mov	r0, fp
   392d0:	bl	3052c <__flatcc_error_report@@Base>
   392d4:	b	391ec <__flatcc_fb_build_schema@@Base+0x1664>
   392d8:	ldr	r1, [r4, #16]
   392dc:	ldr	r0, [sp, #16]
   392e0:	bl	293b4 <ptr_set_find_item@@Base>
   392e4:	cmp	r0, #0
   392e8:	beq	38b74 <__flatcc_fb_build_schema@@Base+0xfec>
   392ec:	ldr	r3, [fp, #176]	; 0xb0
   392f0:	str	r4, [fp, #404]	; 0x194
   392f4:	cmp	r3, #0
   392f8:	beq	39484 <__flatcc_fb_build_schema@@Base+0x18fc>
   392fc:	ldrh	r3, [r4, #8]
   39300:	cmp	r3, #1
   39304:	bls	38230 <__flatcc_fb_build_schema@@Base+0x6a8>
   39308:	mov	r3, #0
   3930c:	ldr	r2, [pc, #-1788]	; 38c18 <__flatcc_fb_build_schema@@Base+0x1090>
   39310:	ldr	r1, [fp, #400]	; 0x190
   39314:	mov	r0, fp
   39318:	bl	314ec <error_ref_sym@@Base>
   3931c:	b	38230 <__flatcc_fb_build_schema@@Base+0x6a8>
   39320:	ldr	r1, [r5, #4]
   39324:	mov	r3, r0
   39328:	str	r0, [sp, #4]
   3932c:	str	r0, [sp]
   39330:	ldr	r2, [pc, #-1820]	; 38c1c <__flatcc_fb_build_schema@@Base+0x1094>
   39334:	mov	r0, fp
   39338:	bl	3052c <__flatcc_error_report@@Base>
   3933c:	b	391ec <__flatcc_fb_build_schema@@Base+0x1664>
   39340:	ldr	r1, [r4, #4]
   39344:	mov	r3, r0
   39348:	str	r0, [sp, #4]
   3934c:	str	r0, [sp]
   39350:	ldr	r2, [pc, #-1848]	; 38c20 <__flatcc_fb_build_schema@@Base+0x1098>
   39354:	mov	r0, fp
   39358:	ldr	sl, [sp, #20]
   3935c:	bl	3052c <__flatcc_error_report@@Base>
   39360:	b	38d38 <__flatcc_fb_build_schema@@Base+0x11b0>
   39364:	ldrh	r3, [r4, #16]
   39368:	cmp	r3, #2
   3936c:	beq	382d4 <__flatcc_fb_build_schema@@Base+0x74c>
   39370:	ldr	r1, [r4, #4]
   39374:	mov	r3, r0
   39378:	str	r0, [sp, #4]
   3937c:	str	r0, [sp]
   39380:	mov	r2, r7
   39384:	mov	r0, fp
   39388:	bl	3052c <__flatcc_error_report@@Base>
   3938c:	b	382d4 <__flatcc_fb_build_schema@@Base+0x74c>
   39390:	ldr	r1, [sl, #16]
   39394:	ldr	r0, [sp, #16]
   39398:	bl	293b4 <ptr_set_find_item@@Base>
   3939c:	cmp	r0, #0
   393a0:	bne	38ce0 <__flatcc_fb_build_schema@@Base+0x1158>
   393a4:	b	380ac <__flatcc_fb_build_schema@@Base+0x524>
   393a8:	cmp	r0, #2
   393ac:	beq	394fc <__flatcc_fb_build_schema@@Base+0x1974>
   393b0:	cmp	r0, #5
   393b4:	bne	39694 <__flatcc_fb_build_schema@@Base+0x1b0c>
   393b8:	ldrh	r3, [r5, #16]
   393bc:	cmp	r3, #5
   393c0:	beq	391ec <__flatcc_fb_build_schema@@Base+0x1664>
   393c4:	ldr	r1, [r5, #4]
   393c8:	mov	r3, r2
   393cc:	str	r2, [sp, #4]
   393d0:	str	r2, [sp]
   393d4:	mov	r0, fp
   393d8:	ldr	r2, [pc, #-1980]	; 38c24 <__flatcc_fb_build_schema@@Base+0x109c>
   393dc:	bl	3052c <__flatcc_error_report@@Base>
   393e0:	b	391ec <__flatcc_fb_build_schema@@Base+0x1664>
   393e4:	ldrh	r3, [r6, #24]
   393e8:	strh	r4, [r6, #72]	; 0x48
   393ec:	cmp	r3, #8
   393f0:	bne	3859c <__flatcc_fb_build_schema@@Base+0xa14>
   393f4:	b	3873c <__flatcc_fb_build_schema@@Base+0xbb4>
   393f8:	ldrh	r3, [r6, #72]	; 0x48
   393fc:	tst	r3, #128	; 0x80
   39400:	beq	3873c <__flatcc_fb_build_schema@@Base+0xbb4>
   39404:	mov	r3, #0
   39408:	ldr	r1, [r6, #4]
   3940c:	ldr	r2, [pc, #-2008]	; 38c3c <__flatcc_fb_build_schema@@Base+0x10b4>
   39410:	str	r3, [sp, #4]
   39414:	str	r3, [sp]
   39418:	mov	r0, fp
   3941c:	ldr	sl, [sp, #20]
   39420:	bl	3052c <__flatcc_error_report@@Base>
   39424:	strh	r4, [r6, #24]
   39428:	b	37e98 <__flatcc_fb_build_schema@@Base+0x310>
   3942c:	cmp	r2, #4
   39430:	bne	395a4 <__flatcc_fb_build_schema@@Base+0x1a1c>
   39434:	ldrh	r3, [r4, #16]
   39438:	sub	r3, r3, #4
   3943c:	cmp	r3, #1
   39440:	bls	384ac <__flatcc_fb_build_schema@@Base+0x924>
   39444:	ldr	r1, [r4, #4]
   39448:	mov	r3, r0
   3944c:	str	r0, [sp, #4]
   39450:	str	r0, [sp]
   39454:	ldr	r2, [pc, #-2048]	; 38c5c <__flatcc_fb_build_schema@@Base+0x10d4>
   39458:	mov	r0, fp
   3945c:	bl	3052c <__flatcc_error_report@@Base>
   39460:	b	384ac <__flatcc_fb_build_schema@@Base+0x924>
   39464:	ldr	r1, [r3, #16]
   39468:	ldr	r0, [sp, #16]
   3946c:	str	r3, [sp, #28]
   39470:	bl	293b4 <ptr_set_find_item@@Base>
   39474:	ldr	r3, [sp, #28]
   39478:	cmp	r0, #0
   3947c:	bne	38ee0 <__flatcc_fb_build_schema@@Base+0x1358>
   39480:	b	38e00 <__flatcc_fb_build_schema@@Base+0x1278>
   39484:	ldrh	r2, [r4, #8]
   39488:	cmp	r2, #0
   3948c:	beq	38230 <__flatcc_fb_build_schema@@Base+0x6a8>
   39490:	ldr	r2, [pc, #-2160]	; 38c28 <__flatcc_fb_build_schema@@Base+0x10a0>
   39494:	ldr	r1, [fp, #400]	; 0x190
   39498:	mov	r0, fp
   3949c:	bl	314ec <error_ref_sym@@Base>
   394a0:	b	38230 <__flatcc_fb_build_schema@@Base+0x6a8>
   394a4:	add	r2, sp, #120	; 0x78
   394a8:	str	ip, [r2, #-88]!	; 0xffffffa8
   394ac:	b	394b4 <__flatcc_fb_build_schema@@Base+0x192c>
   394b0:	mov	r6, r3
   394b4:	ldr	r3, [r6]
   394b8:	str	r6, [r2]
   394bc:	cmp	r3, #0
   394c0:	add	r2, r6, #108	; 0x6c
   394c4:	bne	394b0 <__flatcc_fb_build_schema@@Base+0x1928>
   394c8:	str	r3, [r6, #108]	; 0x6c
   394cc:	ldr	r3, [sp, #32]
   394d0:	b	39128 <__flatcc_fb_build_schema@@Base+0x15a0>
   394d4:	ldr	r2, [fp, #208]	; 0xd0
   394d8:	cmp	r2, #0
   394dc:	beq	38238 <__flatcc_fb_build_schema@@Base+0x6b0>
   394e0:	str	r3, [sp, #4]
   394e4:	str	r3, [sp]
   394e8:	mov	r1, r3
   394ec:	ldr	r2, [pc, #-2248]	; 38c2c <__flatcc_fb_build_schema@@Base+0x10a4>
   394f0:	mov	r0, fp
   394f4:	bl	3052c <__flatcc_error_report@@Base>
   394f8:	b	38238 <__flatcc_fb_build_schema@@Base+0x6b0>
   394fc:	ldrh	r3, [r5, #16]
   39500:	cmp	r3, #2
   39504:	beq	391ec <__flatcc_fb_build_schema@@Base+0x1664>
   39508:	ldr	r1, [r5, #4]
   3950c:	mov	r3, r2
   39510:	str	r2, [sp, #4]
   39514:	str	r2, [sp]
   39518:	mov	r0, fp
   3951c:	ldr	r2, [pc, #-2292]	; 38c30 <__flatcc_fb_build_schema@@Base+0x10a8>
   39520:	bl	3052c <__flatcc_error_report@@Base>
   39524:	b	391ec <__flatcc_fb_build_schema@@Base+0x1664>
   39528:	str	r6, [r5, #88]	; 0x58
   3952c:	str	sl, [r5, #16]
   39530:	b	37be0 <__flatcc_fb_build_schema@@Base+0x58>
   39534:	ldr	r0, [sp, #16]
   39538:	ldr	r1, [r4, #16]
   3953c:	bl	293b4 <ptr_set_find_item@@Base>
   39540:	cmp	r0, #0
   39544:	bne	392ec <__flatcc_fb_build_schema@@Base+0x1764>
   39548:	b	38210 <__flatcc_fb_build_schema@@Base+0x688>
   3954c:	mov	r3, #0
   39550:	ldr	r1, [sl, #4]
   39554:	ldr	r2, [pc, #-2344]	; 38c34 <__flatcc_fb_build_schema@@Base+0x10ac>
   39558:	str	r3, [sp, #4]
   3955c:	str	r3, [sp]
   39560:	mov	r0, fp
   39564:	bl	3052c <__flatcc_error_report@@Base>
   39568:	b	37e98 <__flatcc_fb_build_schema@@Base+0x310>
   3956c:	ldr	r1, [r6, #4]
   39570:	mov	r3, r0
   39574:	str	r0, [sp, #4]
   39578:	str	r0, [sp]
   3957c:	ldr	r2, [pc, #-2380]	; 38c38 <__flatcc_fb_build_schema@@Base+0x10b0>
   39580:	mov	r0, fp
   39584:	ldr	sl, [sp, #20]
   39588:	bl	3052c <__flatcc_error_report@@Base>
   3958c:	b	37e98 <__flatcc_fb_build_schema@@Base+0x310>
   39590:	ldr	r3, [fp, #396]	; 0x18c
   39594:	cmp	r3, #0
   39598:	bne	38b28 <__flatcc_fb_build_schema@@Base+0xfa0>
   3959c:	str	r3, [fp, #396]	; 0x18c
   395a0:	b	38168 <__flatcc_fb_build_schema@@Base+0x5e0>
   395a4:	cmp	r2, #6
   395a8:	bne	384ac <__flatcc_fb_build_schema@@Base+0x924>
   395ac:	ldrh	r3, [r4, #16]
   395b0:	cmp	r3, #6
   395b4:	beq	384ac <__flatcc_fb_build_schema@@Base+0x924>
   395b8:	mov	r3, #0
   395bc:	ldr	r1, [r4, #4]
   395c0:	ldr	r2, [pc, #-2396]	; 38c6c <__flatcc_fb_build_schema@@Base+0x10e4>
   395c4:	str	r3, [sp, #4]
   395c8:	str	r3, [sp]
   395cc:	mov	r0, fp
   395d0:	bl	3052c <__flatcc_error_report@@Base>
   395d4:	b	384ac <__flatcc_fb_build_schema@@Base+0x924>
   395d8:	ldr	r1, [r6, #4]
   395dc:	mov	r3, r2
   395e0:	str	r2, [sp, #4]
   395e4:	str	r2, [sp]
   395e8:	mov	r0, fp
   395ec:	ldr	r2, [pc, #-2488]	; 38c3c <__flatcc_fb_build_schema@@Base+0x10b4>
   395f0:	ldr	sl, [sp, #20]
   395f4:	bl	3052c <__flatcc_error_report@@Base>
   395f8:	mov	r3, #1
   395fc:	strh	r3, [r6, #24]
   39600:	b	37e98 <__flatcc_fb_build_schema@@Base+0x310>
   39604:	mov	r2, #0
   39608:	ldr	r3, [r8, #4]
   3960c:	ldr	r1, [r6, #4]
   39610:	mov	r0, fp
   39614:	str	r2, [sp, #4]
   39618:	str	r2, [sp]
   3961c:	ldr	r2, [pc, #-2532]	; 38c40 <__flatcc_fb_build_schema@@Base+0x10b8>
   39620:	ldr	sl, [sp, #20]
   39624:	bl	3052c <__flatcc_error_report@@Base>
   39628:	mov	r3, #1
   3962c:	strh	r3, [r6, #24]
   39630:	b	37e98 <__flatcc_fb_build_schema@@Base+0x310>
   39634:	ldr	r3, [pc, #-2552]	; 38c44 <__flatcc_fb_build_schema@@Base+0x10bc>
   39638:	ldr	r2, [pc, #-2552]	; 38c48 <__flatcc_fb_build_schema@@Base+0x10c0>
   3963c:	ldr	r1, [pc, #-2504]	; 38c7c <__flatcc_fb_build_schema@@Base+0x10f4>
   39640:	ldr	r0, [pc, #-2556]	; 38c4c <__flatcc_fb_build_schema@@Base+0x10c4>
   39644:	bl	14148 <__assert_fail@plt>
   39648:	ldr	r3, [pc, #-2560]	; 38c50 <__flatcc_fb_build_schema@@Base+0x10c8>
   3964c:	mov	r2, #34	; 0x22
   39650:	mov	r1, #1
   39654:	ldr	r3, [r3]
   39658:	ldr	r0, [pc, #-2572]	; 38c54 <__flatcc_fb_build_schema@@Base+0x10cc>
   3965c:	bl	1401c <fwrite@plt>
   39660:	mov	r0, #1
   39664:	bl	14070 <exit@plt>
   39668:	ldr	r3, [r8, #4]
   3966c:	ldr	r1, [r6, #4]
   39670:	mov	r0, fp
   39674:	str	r2, [sp, #4]
   39678:	str	r2, [sp]
   3967c:	ldr	r2, [pc, #-2604]	; 38c58 <__flatcc_fb_build_schema@@Base+0x10d0>
   39680:	ldr	sl, [sp, #20]
   39684:	bl	3052c <__flatcc_error_report@@Base>
   39688:	mov	r3, #1
   3968c:	strh	r3, [r6, #24]
   39690:	b	37e98 <__flatcc_fb_build_schema@@Base+0x310>
   39694:	cmp	r0, #4
   39698:	bne	396e0 <__flatcc_fb_build_schema@@Base+0x1b58>
   3969c:	ldrh	r3, [r5, #16]
   396a0:	sub	r3, r3, #4
   396a4:	cmp	r3, #1
   396a8:	bls	391ec <__flatcc_fb_build_schema@@Base+0x1664>
   396ac:	ldr	r1, [r5, #4]
   396b0:	mov	r3, r2
   396b4:	str	r2, [sp, #4]
   396b8:	str	r2, [sp]
   396bc:	mov	r0, fp
   396c0:	ldr	r2, [pc, #-2668]	; 38c5c <__flatcc_fb_build_schema@@Base+0x10d4>
   396c4:	bl	3052c <__flatcc_error_report@@Base>
   396c8:	b	391ec <__flatcc_fb_build_schema@@Base+0x1664>
   396cc:	ldr	r3, [pc, #-2676]	; 38c60 <__flatcc_fb_build_schema@@Base+0x10d8>
   396d0:	ldr	r2, [pc, #-2676]	; 38c64 <__flatcc_fb_build_schema@@Base+0x10dc>
   396d4:	ldr	r1, [pc, #-2656]	; 38c7c <__flatcc_fb_build_schema@@Base+0x10f4>
   396d8:	ldr	r0, [pc, #-2680]	; 38c68 <__flatcc_fb_build_schema@@Base+0x10e0>
   396dc:	bl	14148 <__assert_fail@plt>
   396e0:	cmp	r0, #6
   396e4:	bne	391ec <__flatcc_fb_build_schema@@Base+0x1664>
   396e8:	ldrh	r3, [r5, #16]
   396ec:	cmp	r3, #6
   396f0:	beq	391ec <__flatcc_fb_build_schema@@Base+0x1664>
   396f4:	mov	r3, #0
   396f8:	ldr	r1, [r5, #4]
   396fc:	ldr	r2, [pc, #-2712]	; 38c6c <__flatcc_fb_build_schema@@Base+0x10e4>
   39700:	str	r3, [sp, #4]
   39704:	str	r3, [sp]
   39708:	mov	r0, fp
   3970c:	bl	3052c <__flatcc_error_report@@Base>
   39710:	b	391ec <__flatcc_fb_build_schema@@Base+0x1664>
   39714:	cmp	r2, #6
   39718:	bne	382d4 <__flatcc_fb_build_schema@@Base+0x74c>
   3971c:	ldrh	r3, [r4, #16]
   39720:	cmp	r3, #6
   39724:	beq	382d4 <__flatcc_fb_build_schema@@Base+0x74c>
   39728:	mov	r3, #0
   3972c:	ldr	r1, [r4, #4]
   39730:	ldr	r2, [pc, #-2764]	; 38c6c <__flatcc_fb_build_schema@@Base+0x10e4>
   39734:	str	r3, [sp, #4]
   39738:	str	r3, [sp]
   3973c:	mov	r0, fp
   39740:	bl	3052c <__flatcc_error_report@@Base>
   39744:	b	382d4 <__flatcc_fb_build_schema@@Base+0x74c>
   39748:	ldr	r3, [pc, #-2784]	; 38c70 <__flatcc_fb_build_schema@@Base+0x10e8>
   3974c:	ldr	r2, [pc, #-2784]	; 38c74 <__flatcc_fb_build_schema@@Base+0x10ec>
   39750:	ldr	r1, [pc, #-2780]	; 38c7c <__flatcc_fb_build_schema@@Base+0x10f4>
   39754:	ldr	r0, [pc, #-2788]	; 38c78 <__flatcc_fb_build_schema@@Base+0x10f0>
   39758:	bl	14148 <__assert_fail@plt>

0003975c <__flatcc_fb_coerce_scalar_type@@Base>:
   3975c:	ldrh	ip, [r3, #8]
   39760:	cmp	ip, #0
   39764:	beq	39874 <__flatcc_fb_coerce_scalar_type@@Base+0x118>
   39768:	push	{r4, r5, r6, r8, r9, sl, fp, lr}
   3976c:	vpush	{d8}
   39770:	cmp	ip, #4
   39774:	mov	r6, r1
   39778:	mov	r5, r0
   3977c:	sub	sp, sp, #8
   39780:	mov	r4, r3
   39784:	beq	39814 <__flatcc_fb_coerce_scalar_type@@Base+0xb8>
   39788:	cmp	ip, #1
   3978c:	beq	39864 <__flatcc_fb_coerce_scalar_type@@Base+0x108>
   39790:	cmp	r2, #5
   39794:	sub	r3, ip, #6
   39798:	clz	r3, r3
   3979c:	lsr	r3, r3, #5
   397a0:	moveq	r3, #0
   397a4:	cmp	r3, #0
   397a8:	beq	39828 <__flatcc_fb_coerce_scalar_type@@Base+0xcc>
   397ac:	ldr	r3, [r0, #144]	; 0x90
   397b0:	cmp	r3, #0
   397b4:	beq	39828 <__flatcc_fb_coerce_scalar_type@@Base+0xcc>
   397b8:	ldrb	r0, [r4]
   397bc:	mov	r1, #0
   397c0:	cmp	r1, #0
   397c4:	mov	r3, #5
   397c8:	cmpeq	r0, #1
   397cc:	strd	r0, [r4]
   397d0:	strh	r3, [r4, #8]
   397d4:	bhi	39f34 <__flatcc_fb_coerce_scalar_type@@Base+0x7d8>
   397d8:	sub	r2, r2, #1
   397dc:	cmp	r2, #10
   397e0:	ldrls	pc, [pc, r2, lsl #2]
   397e4:	b	39c0c <__flatcc_fb_coerce_scalar_type@@Base+0x4b0>
   397e8:	andeq	r9, r3, r4, ror #16
   397ec:			; <UNDEFINED> instruction: 0x000398b8
   397f0:	andeq	r9, r3, r4, lsl #18
   397f4:	andeq	r9, r3, r0, asr r9
   397f8:	andeq	r9, r3, ip, asr #22
   397fc:	ldrdeq	r9, [r3], -r8
   39800:	andeq	r9, r3, ip, lsr sl
   39804:	andeq	r9, r3, ip, lsl #20
   39808:	andeq	r9, r3, r0, lsl fp
   3980c:	muleq	r3, r4, fp
   39810:	ldrdeq	r9, [r3], -r0
   39814:	ldrd	r0, [r3]
   39818:	cmp	r0, #0
   3981c:	sbcs	r3, r1, #0
   39820:	movge	ip, #5
   39824:	strhge	ip, [r4, #8]
   39828:	sub	r2, r2, #1
   3982c:	cmp	r2, #10
   39830:	ldrls	pc, [pc, r2, lsl #2]
   39834:	b	39c0c <__flatcc_fb_coerce_scalar_type@@Base+0x4b0>
   39838:	andeq	r9, r3, ip, ror r8
   3983c:			; <UNDEFINED> instruction: 0x000398b0
   39840:	strdeq	r9, [r3], -ip
   39844:	andeq	r9, r3, r8, asr #18
   39848:	andeq	r9, r3, ip, lsl #19
   3984c:	andeq	r9, r3, r8, asr #19
   39850:	andeq	r9, r3, ip, lsr #20
   39854:	strdeq	r9, [r3], -ip
   39858:	andeq	r9, r3, r0, lsl #22
   3985c:	andeq	r9, r3, r8, ror sl
   39860:			; <UNDEFINED> instruction: 0x00039abc
   39864:	mov	r0, #0
   39868:	add	sp, sp, #8
   3986c:	vpop	{d8}
   39870:	pop	{r4, r5, r6, r8, r9, sl, fp, pc}
   39874:	mov	r0, #0
   39878:	bx	lr
   3987c:	cmp	ip, #5
   39880:	beq	39864 <__flatcc_fb_coerce_scalar_type@@Base+0x108>
   39884:	mov	r3, #0
   39888:	ldr	r1, [r6, #4]
   3988c:	mov	r0, r5
   39890:	str	r3, [sp, #4]
   39894:	str	r3, [sp]
   39898:	ldr	r2, [pc, #1704]	; 39f48 <__flatcc_fb_coerce_scalar_type@@Base+0x7ec>
   3989c:	bl	3052c <__flatcc_error_report@@Base>
   398a0:	mov	r3, #1
   398a4:	strh	r3, [r4, #8]
   398a8:	mvn	r0, #0
   398ac:	b	39868 <__flatcc_fb_coerce_scalar_type@@Base+0x10c>
   398b0:	cmp	ip, #5
   398b4:	bne	39da8 <__flatcc_fb_coerce_scalar_type@@Base+0x64c>
   398b8:	ldrd	r2, [r4]
   398bc:	mov	r1, #0
   398c0:	mvn	r0, #0
   398c4:	cmp	r3, r1
   398c8:	cmpeq	r2, r0
   398cc:	bls	39864 <__flatcc_fb_coerce_scalar_type@@Base+0x108>
   398d0:	mov	r3, #0
   398d4:	ldr	r1, [r6, #4]
   398d8:	mov	r0, r5
   398dc:	str	r3, [sp, #4]
   398e0:	str	r3, [sp]
   398e4:	ldr	r2, [pc, #1632]	; 39f4c <__flatcc_fb_coerce_scalar_type@@Base+0x7f0>
   398e8:	bl	3052c <__flatcc_error_report@@Base>
   398ec:	mov	r3, #1
   398f0:	strh	r3, [r4, #8]
   398f4:	mvn	r0, #0
   398f8:	b	39868 <__flatcc_fb_coerce_scalar_type@@Base+0x10c>
   398fc:	cmp	ip, #5
   39900:	bne	39e00 <__flatcc_fb_coerce_scalar_type@@Base+0x6a4>
   39904:	ldrd	r2, [r4]
   39908:	ldr	r0, [pc, #1600]	; 39f50 <__flatcc_fb_coerce_scalar_type@@Base+0x7f4>
   3990c:	mov	r1, #0
   39910:	cmp	r3, r1
   39914:	cmpeq	r2, r0
   39918:	bls	39864 <__flatcc_fb_coerce_scalar_type@@Base+0x108>
   3991c:	mov	r3, #0
   39920:	ldr	r1, [r6, #4]
   39924:	mov	r0, r5
   39928:	str	r3, [sp, #4]
   3992c:	str	r3, [sp]
   39930:	ldr	r2, [pc, #1564]	; 39f54 <__flatcc_fb_coerce_scalar_type@@Base+0x7f8>
   39934:	bl	3052c <__flatcc_error_report@@Base>
   39938:	mov	r3, #1
   3993c:	strh	r3, [r4, #8]
   39940:	mvn	r0, #0
   39944:	b	39868 <__flatcc_fb_coerce_scalar_type@@Base+0x10c>
   39948:	cmp	ip, #5
   3994c:	bne	39dd4 <__flatcc_fb_coerce_scalar_type@@Base+0x678>
   39950:	ldrd	r2, [r4]
   39954:	cmp	r3, #0
   39958:	cmpeq	r2, #255	; 0xff
   3995c:	bls	39864 <__flatcc_fb_coerce_scalar_type@@Base+0x108>
   39960:	mov	r3, #0
   39964:	ldr	r1, [r6, #4]
   39968:	mov	r0, r5
   3996c:	str	r3, [sp, #4]
   39970:	str	r3, [sp]
   39974:	ldr	r2, [pc, #1500]	; 39f58 <__flatcc_fb_coerce_scalar_type@@Base+0x7fc>
   39978:	bl	3052c <__flatcc_error_report@@Base>
   3997c:	mov	r3, #1
   39980:	strh	r3, [r4, #8]
   39984:	mvn	r0, #0
   39988:	b	39868 <__flatcc_fb_coerce_scalar_type@@Base+0x10c>
   3998c:	cmp	ip, #5
   39990:	beq	39b4c <__flatcc_fb_coerce_scalar_type@@Base+0x3f0>
   39994:	cmp	ip, #6
   39998:	beq	39864 <__flatcc_fb_coerce_scalar_type@@Base+0x108>
   3999c:	mov	r3, #0
   399a0:	ldr	r1, [r6, #4]
   399a4:	mov	r0, r5
   399a8:	str	r3, [sp, #4]
   399ac:	str	r3, [sp]
   399b0:	ldr	r2, [pc, #1444]	; 39f5c <__flatcc_fb_coerce_scalar_type@@Base+0x800>
   399b4:	bl	3052c <__flatcc_error_report@@Base>
   399b8:	mov	r3, #1
   399bc:	strh	r3, [r4, #8]
   399c0:	mvn	r0, #0
   399c4:	b	39868 <__flatcc_fb_coerce_scalar_type@@Base+0x10c>
   399c8:	cmp	ip, #4
   399cc:	beq	39864 <__flatcc_fb_coerce_scalar_type@@Base+0x108>
   399d0:	cmp	ip, #5
   399d4:	bne	39e2c <__flatcc_fb_coerce_scalar_type@@Base+0x6d0>
   399d8:	ldrd	r2, [r4]
   399dc:	cmp	r2, #0
   399e0:	sbcs	r1, r3, #0
   399e4:	blt	39f08 <__flatcc_fb_coerce_scalar_type@@Base+0x7ac>
   399e8:	mov	r1, #4
   399ec:	strd	r2, [r4]
   399f0:	strh	r1, [r4, #8]
   399f4:	mov	r0, #0
   399f8:	b	39868 <__flatcc_fb_coerce_scalar_type@@Base+0x10c>
   399fc:	cmp	ip, #4
   39a00:	beq	39c7c <__flatcc_fb_coerce_scalar_type@@Base+0x520>
   39a04:	cmp	ip, #5
   39a08:	bne	39e58 <__flatcc_fb_coerce_scalar_type@@Base+0x6fc>
   39a0c:	ldrd	r2, [r4]
   39a10:	cmp	r2, #32768	; 0x8000
   39a14:	sbcs	r3, r3, #0
   39a18:	bge	39edc <__flatcc_fb_coerce_scalar_type@@Base+0x780>
   39a1c:	mov	r3, #4
   39a20:	strh	r3, [r4, #8]
   39a24:	mov	r0, #0
   39a28:	b	39868 <__flatcc_fb_coerce_scalar_type@@Base+0x10c>
   39a2c:	cmp	ip, #4
   39a30:	beq	39c38 <__flatcc_fb_coerce_scalar_type@@Base+0x4dc>
   39a34:	cmp	ip, #5
   39a38:	bne	39e84 <__flatcc_fb_coerce_scalar_type@@Base+0x728>
   39a3c:	ldrd	r2, [r4]
   39a40:	cmp	r2, #-2147483648	; 0x80000000
   39a44:	sbcs	r3, r3, #0
   39a48:	blt	39a1c <__flatcc_fb_coerce_scalar_type@@Base+0x2c0>
   39a4c:	mov	r3, #0
   39a50:	ldr	r1, [r6, #4]
   39a54:	mov	r0, r5
   39a58:	str	r3, [sp, #4]
   39a5c:	str	r3, [sp]
   39a60:	ldr	r2, [pc, #1272]	; 39f60 <__flatcc_fb_coerce_scalar_type@@Base+0x804>
   39a64:	bl	3052c <__flatcc_error_report@@Base>
   39a68:	mov	r3, #1
   39a6c:	strh	r3, [r4, #8]
   39a70:	mvn	r0, #0
   39a74:	b	39868 <__flatcc_fb_coerce_scalar_type@@Base+0x10c>
   39a78:	cmp	ip, #4
   39a7c:	beq	39d04 <__flatcc_fb_coerce_scalar_type@@Base+0x5a8>
   39a80:	cmp	ip, #5
   39a84:	beq	39b94 <__flatcc_fb_coerce_scalar_type@@Base+0x438>
   39a88:	cmp	ip, #3
   39a8c:	beq	39864 <__flatcc_fb_coerce_scalar_type@@Base+0x108>
   39a90:	mov	r3, #0
   39a94:	ldr	r1, [r6, #4]
   39a98:	mov	r0, r5
   39a9c:	str	r3, [sp, #4]
   39aa0:	str	r3, [sp]
   39aa4:	ldr	r2, [pc, #1208]	; 39f64 <__flatcc_fb_coerce_scalar_type@@Base+0x808>
   39aa8:	bl	3052c <__flatcc_error_report@@Base>
   39aac:	mov	r3, #1
   39ab0:	strh	r3, [r4, #8]
   39ab4:	mvn	r0, #0
   39ab8:	b	39868 <__flatcc_fb_coerce_scalar_type@@Base+0x10c>
   39abc:	cmp	ip, #4
   39ac0:	beq	39d58 <__flatcc_fb_coerce_scalar_type@@Base+0x5fc>
   39ac4:	cmp	ip, #5
   39ac8:	beq	39bd0 <__flatcc_fb_coerce_scalar_type@@Base+0x474>
   39acc:	cmp	ip, #3
   39ad0:	beq	39864 <__flatcc_fb_coerce_scalar_type@@Base+0x108>
   39ad4:	mov	r3, #0
   39ad8:	ldr	r1, [r6, #4]
   39adc:	mov	r0, r5
   39ae0:	str	r3, [sp, #4]
   39ae4:	str	r3, [sp]
   39ae8:	ldr	r2, [pc, #1144]	; 39f68 <__flatcc_fb_coerce_scalar_type@@Base+0x80c>
   39aec:	bl	3052c <__flatcc_error_report@@Base>
   39af0:	mov	r3, #1
   39af4:	strh	r3, [r4, #8]
   39af8:	mvn	r0, #0
   39afc:	b	39868 <__flatcc_fb_coerce_scalar_type@@Base+0x10c>
   39b00:	cmp	ip, #4
   39b04:	beq	39cc0 <__flatcc_fb_coerce_scalar_type@@Base+0x564>
   39b08:	cmp	ip, #5
   39b0c:	bne	39eb0 <__flatcc_fb_coerce_scalar_type@@Base+0x754>
   39b10:	ldrd	r2, [r4]
   39b14:	cmp	r2, #128	; 0x80
   39b18:	sbcs	r3, r3, #0
   39b1c:	blt	39a1c <__flatcc_fb_coerce_scalar_type@@Base+0x2c0>
   39b20:	mov	r3, #0
   39b24:	ldr	r1, [r6, #4]
   39b28:	mov	r0, r5
   39b2c:	str	r3, [sp, #4]
   39b30:	str	r3, [sp]
   39b34:	ldr	r2, [pc, #1072]	; 39f6c <__flatcc_fb_coerce_scalar_type@@Base+0x810>
   39b38:	bl	3052c <__flatcc_error_report@@Base>
   39b3c:	mov	r3, #1
   39b40:	strh	r3, [r4, #8]
   39b44:	mvn	r0, #0
   39b48:	b	39868 <__flatcc_fb_coerce_scalar_type@@Base+0x10c>
   39b4c:	ldr	r3, [r5, #144]	; 0x90
   39b50:	cmp	r3, #0
   39b54:	beq	3999c <__flatcc_fb_coerce_scalar_type@@Base+0x240>
   39b58:	ldrd	r2, [r4]
   39b5c:	cmp	r3, #0
   39b60:	cmpeq	r2, #1
   39b64:	bls	39864 <__flatcc_fb_coerce_scalar_type@@Base+0x108>
   39b68:	mov	r3, #0
   39b6c:	ldr	r1, [r6, #4]
   39b70:	mov	r0, r5
   39b74:	str	r3, [sp, #4]
   39b78:	str	r3, [sp]
   39b7c:	ldr	r2, [pc, #1004]	; 39f70 <__flatcc_fb_coerce_scalar_type@@Base+0x814>
   39b80:	bl	3052c <__flatcc_error_report@@Base>
   39b84:	mov	r3, #1
   39b88:	strh	r3, [r4, #8]
   39b8c:	mvn	r0, #0
   39b90:	b	39868 <__flatcc_fb_coerce_scalar_type@@Base+0x10c>
   39b94:	ldrd	r8, [r4]
   39b98:	mov	r0, r8
   39b9c:	mov	r1, r9
   39ba0:	bl	421cc <fb_value_set_visit@@Base+0x3a4>
   39ba4:	mov	sl, r0
   39ba8:	mov	fp, r1
   39bac:	bl	42580 <fb_value_set_visit@@Base+0x758>
   39bb0:	cmp	r9, r1
   39bb4:	cmpeq	r8, r0
   39bb8:	bne	39d2c <__flatcc_fb_coerce_scalar_type@@Base+0x5d0>
   39bbc:	mov	r3, #3
   39bc0:	strd	sl, [r4]
   39bc4:	strh	r3, [r4, #8]
   39bc8:	mov	r0, #0
   39bcc:	b	39868 <__flatcc_fb_coerce_scalar_type@@Base+0x10c>
   39bd0:	ldrd	r8, [r4]
   39bd4:	mov	r1, r9
   39bd8:	mov	r0, r8
   39bdc:	bl	42404 <fb_value_set_visit@@Base+0x5dc>
   39be0:	vmov	s16, r0
   39be4:	bl	42538 <fb_value_set_visit@@Base+0x710>
   39be8:	cmp	r9, r1
   39bec:	cmpeq	r8, r0
   39bf0:	bne	39d7c <__flatcc_fb_coerce_scalar_type@@Base+0x620>
   39bf4:	vcvt.f64.f32	d8, s16
   39bf8:	mov	r3, #3
   39bfc:	strh	r3, [r4, #8]
   39c00:	mov	r0, #0
   39c04:	vstr	d8, [r4]
   39c08:	b	39868 <__flatcc_fb_coerce_scalar_type@@Base+0x10c>
   39c0c:	mov	r3, #0
   39c10:	ldr	r1, [r6, #4]
   39c14:	mov	r0, r5
   39c18:	str	r3, [sp, #4]
   39c1c:	str	r3, [sp]
   39c20:	ldr	r2, [pc, #844]	; 39f74 <__flatcc_fb_coerce_scalar_type@@Base+0x818>
   39c24:	bl	3052c <__flatcc_error_report@@Base>
   39c28:	mov	r3, #1
   39c2c:	strh	r3, [r4, #8]
   39c30:	mvn	r0, #0
   39c34:	b	39868 <__flatcc_fb_coerce_scalar_type@@Base+0x10c>
   39c38:	ldrd	r2, [r4]
   39c3c:	mov	r0, #-2147483648	; 0x80000000
   39c40:	mvn	r1, #0
   39c44:	cmp	r2, r0
   39c48:	sbcs	r3, r3, r1
   39c4c:	bge	39864 <__flatcc_fb_coerce_scalar_type@@Base+0x108>
   39c50:	mov	r3, #0
   39c54:	ldr	r1, [r6, #4]
   39c58:	mov	r0, r5
   39c5c:	str	r3, [sp, #4]
   39c60:	str	r3, [sp]
   39c64:	ldr	r2, [pc, #780]	; 39f78 <__flatcc_fb_coerce_scalar_type@@Base+0x81c>
   39c68:	bl	3052c <__flatcc_error_report@@Base>
   39c6c:	mov	r3, #1
   39c70:	strh	r3, [r4, #8]
   39c74:	mvn	r0, #0
   39c78:	b	39868 <__flatcc_fb_coerce_scalar_type@@Base+0x10c>
   39c7c:	ldrd	r2, [r4]
   39c80:	ldr	r0, [pc, #756]	; 39f7c <__flatcc_fb_coerce_scalar_type@@Base+0x820>
   39c84:	mvn	r1, #0
   39c88:	cmp	r2, r0
   39c8c:	sbcs	r3, r3, r1
   39c90:	bge	39864 <__flatcc_fb_coerce_scalar_type@@Base+0x108>
   39c94:	mov	r3, #0
   39c98:	ldr	r1, [r6, #4]
   39c9c:	mov	r0, r5
   39ca0:	str	r3, [sp, #4]
   39ca4:	str	r3, [sp]
   39ca8:	ldr	r2, [pc, #720]	; 39f80 <__flatcc_fb_coerce_scalar_type@@Base+0x824>
   39cac:	bl	3052c <__flatcc_error_report@@Base>
   39cb0:	mov	r3, #1
   39cb4:	strh	r3, [r4, #8]
   39cb8:	mvn	r0, #0
   39cbc:	b	39868 <__flatcc_fb_coerce_scalar_type@@Base+0x10c>
   39cc0:	ldrd	r2, [r4]
   39cc4:	mvn	r0, #127	; 0x7f
   39cc8:	mvn	r1, #0
   39ccc:	cmp	r2, r0
   39cd0:	sbcs	r3, r3, r1
   39cd4:	bge	39864 <__flatcc_fb_coerce_scalar_type@@Base+0x108>
   39cd8:	mov	r3, #0
   39cdc:	ldr	r1, [r6, #4]
   39ce0:	mov	r0, r5
   39ce4:	str	r3, [sp, #4]
   39ce8:	str	r3, [sp]
   39cec:	ldr	r2, [pc, #656]	; 39f84 <__flatcc_fb_coerce_scalar_type@@Base+0x828>
   39cf0:	bl	3052c <__flatcc_error_report@@Base>
   39cf4:	mov	r3, #1
   39cf8:	strh	r3, [r4, #8]
   39cfc:	mvn	r0, #0
   39d00:	b	39868 <__flatcc_fb_coerce_scalar_type@@Base+0x10c>
   39d04:	ldrd	r8, [r4]
   39d08:	mov	r0, r8
   39d0c:	mov	r1, r9
   39d10:	bl	421e0 <fb_value_set_visit@@Base+0x3b8>
   39d14:	mov	sl, r0
   39d18:	mov	fp, r1
   39d1c:	bl	42508 <fb_value_set_visit@@Base+0x6e0>
   39d20:	cmp	r9, r1
   39d24:	cmpeq	r8, r0
   39d28:	beq	39bbc <__flatcc_fb_coerce_scalar_type@@Base+0x460>
   39d2c:	mov	r3, #0
   39d30:	ldr	r1, [r6, #4]
   39d34:	mov	r0, r5
   39d38:	str	r3, [sp, #4]
   39d3c:	str	r3, [sp]
   39d40:	ldr	r2, [pc, #576]	; 39f88 <__flatcc_fb_coerce_scalar_type@@Base+0x82c>
   39d44:	bl	3052c <__flatcc_error_report@@Base>
   39d48:	mov	r3, #1
   39d4c:	strh	r3, [r4, #8]
   39d50:	mvn	r0, #0
   39d54:	b	39868 <__flatcc_fb_coerce_scalar_type@@Base+0x10c>
   39d58:	ldrd	r8, [r4]
   39d5c:	mov	r1, r9
   39d60:	mov	r0, r8
   39d64:	bl	42414 <fb_value_set_visit@@Base+0x5ec>
   39d68:	vmov	s16, r0
   39d6c:	bl	424dc <fb_value_set_visit@@Base+0x6b4>
   39d70:	cmp	r9, r1
   39d74:	cmpeq	r8, r0
   39d78:	beq	39bf4 <__flatcc_fb_coerce_scalar_type@@Base+0x498>
   39d7c:	mov	r3, #0
   39d80:	ldr	r1, [r6, #4]
   39d84:	mov	r0, r5
   39d88:	str	r3, [sp, #4]
   39d8c:	str	r3, [sp]
   39d90:	ldr	r2, [pc, #500]	; 39f8c <__flatcc_fb_coerce_scalar_type@@Base+0x830>
   39d94:	bl	3052c <__flatcc_error_report@@Base>
   39d98:	mov	r3, #1
   39d9c:	strh	r3, [r4, #8]
   39da0:	mvn	r0, #0
   39da4:	b	39868 <__flatcc_fb_coerce_scalar_type@@Base+0x10c>
   39da8:	mov	r3, #0
   39dac:	ldr	r1, [r6, #4]
   39db0:	mov	r0, r5
   39db4:	str	r3, [sp, #4]
   39db8:	str	r3, [sp]
   39dbc:	ldr	r2, [pc, #460]	; 39f90 <__flatcc_fb_coerce_scalar_type@@Base+0x834>
   39dc0:	bl	3052c <__flatcc_error_report@@Base>
   39dc4:	mov	r3, #1
   39dc8:	strh	r3, [r4, #8]
   39dcc:	mvn	r0, #0
   39dd0:	b	39868 <__flatcc_fb_coerce_scalar_type@@Base+0x10c>
   39dd4:	mov	r3, #0
   39dd8:	ldr	r1, [r6, #4]
   39ddc:	mov	r0, r5
   39de0:	str	r3, [sp, #4]
   39de4:	str	r3, [sp]
   39de8:	ldr	r2, [pc, #420]	; 39f94 <__flatcc_fb_coerce_scalar_type@@Base+0x838>
   39dec:	bl	3052c <__flatcc_error_report@@Base>
   39df0:	mov	r3, #1
   39df4:	strh	r3, [r4, #8]
   39df8:	mvn	r0, #0
   39dfc:	b	39868 <__flatcc_fb_coerce_scalar_type@@Base+0x10c>
   39e00:	mov	r3, #0
   39e04:	ldr	r1, [r6, #4]
   39e08:	mov	r0, r5
   39e0c:	str	r3, [sp, #4]
   39e10:	str	r3, [sp]
   39e14:	ldr	r2, [pc, #380]	; 39f98 <__flatcc_fb_coerce_scalar_type@@Base+0x83c>
   39e18:	bl	3052c <__flatcc_error_report@@Base>
   39e1c:	mov	r3, #1
   39e20:	strh	r3, [r4, #8]
   39e24:	mvn	r0, #0
   39e28:	b	39868 <__flatcc_fb_coerce_scalar_type@@Base+0x10c>
   39e2c:	mov	r3, #0
   39e30:	ldr	r1, [r6, #4]
   39e34:	mov	r0, r5
   39e38:	str	r3, [sp, #4]
   39e3c:	str	r3, [sp]
   39e40:	ldr	r2, [pc, #340]	; 39f9c <__flatcc_fb_coerce_scalar_type@@Base+0x840>
   39e44:	bl	3052c <__flatcc_error_report@@Base>
   39e48:	mov	r3, #1
   39e4c:	strh	r3, [r4, #8]
   39e50:	mvn	r0, #0
   39e54:	b	39868 <__flatcc_fb_coerce_scalar_type@@Base+0x10c>
   39e58:	mov	r3, #0
   39e5c:	ldr	r1, [r6, #4]
   39e60:	mov	r0, r5
   39e64:	str	r3, [sp, #4]
   39e68:	str	r3, [sp]
   39e6c:	ldr	r2, [pc, #300]	; 39fa0 <__flatcc_fb_coerce_scalar_type@@Base+0x844>
   39e70:	bl	3052c <__flatcc_error_report@@Base>
   39e74:	mov	r3, #1
   39e78:	strh	r3, [r4, #8]
   39e7c:	mvn	r0, #0
   39e80:	b	39868 <__flatcc_fb_coerce_scalar_type@@Base+0x10c>
   39e84:	mov	r3, #0
   39e88:	ldr	r1, [r6, #4]
   39e8c:	mov	r0, r5
   39e90:	str	r3, [sp, #4]
   39e94:	str	r3, [sp]
   39e98:	ldr	r2, [pc, #260]	; 39fa4 <__flatcc_fb_coerce_scalar_type@@Base+0x848>
   39e9c:	bl	3052c <__flatcc_error_report@@Base>
   39ea0:	mov	r3, #1
   39ea4:	strh	r3, [r4, #8]
   39ea8:	mvn	r0, #0
   39eac:	b	39868 <__flatcc_fb_coerce_scalar_type@@Base+0x10c>
   39eb0:	mov	r3, #0
   39eb4:	ldr	r1, [r6, #4]
   39eb8:	mov	r0, r5
   39ebc:	str	r3, [sp, #4]
   39ec0:	str	r3, [sp]
   39ec4:	ldr	r2, [pc, #220]	; 39fa8 <__flatcc_fb_coerce_scalar_type@@Base+0x84c>
   39ec8:	bl	3052c <__flatcc_error_report@@Base>
   39ecc:	mov	r3, #1
   39ed0:	strh	r3, [r4, #8]
   39ed4:	mvn	r0, #0
   39ed8:	b	39868 <__flatcc_fb_coerce_scalar_type@@Base+0x10c>
   39edc:	mov	r3, #0
   39ee0:	ldr	r1, [r6, #4]
   39ee4:	mov	r0, r5
   39ee8:	str	r3, [sp, #4]
   39eec:	str	r3, [sp]
   39ef0:	ldr	r2, [pc, #180]	; 39fac <__flatcc_fb_coerce_scalar_type@@Base+0x850>
   39ef4:	bl	3052c <__flatcc_error_report@@Base>
   39ef8:	mov	r3, #1
   39efc:	strh	r3, [r4, #8]
   39f00:	mvn	r0, #0
   39f04:	b	39868 <__flatcc_fb_coerce_scalar_type@@Base+0x10c>
   39f08:	mov	r3, #0
   39f0c:	ldr	r1, [r6, #4]
   39f10:	mov	r0, r5
   39f14:	str	r3, [sp, #4]
   39f18:	str	r3, [sp]
   39f1c:	ldr	r2, [pc, #140]	; 39fb0 <__flatcc_fb_coerce_scalar_type@@Base+0x854>
   39f20:	bl	3052c <__flatcc_error_report@@Base>
   39f24:	mov	r3, #1
   39f28:	strh	r3, [r4, #8]
   39f2c:	mvn	r0, #0
   39f30:	b	39868 <__flatcc_fb_coerce_scalar_type@@Base+0x10c>
   39f34:	ldr	r3, [pc, #120]	; 39fb4 <__flatcc_fb_coerce_scalar_type@@Base+0x858>
   39f38:	mov	r2, #52	; 0x34
   39f3c:	ldr	r1, [pc, #116]	; 39fb8 <__flatcc_fb_coerce_scalar_type@@Base+0x85c>
   39f40:	ldr	r0, [pc, #116]	; 39fbc <__flatcc_fb_coerce_scalar_type@@Base+0x860>
   39f44:	bl	14148 <__assert_fail@plt>
   39f48:	andeq	sp, r5, ip, asr r4
   39f4c:	andeq	sp, r5, r8, asr #9
   39f50:	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
   39f54:	andeq	sp, r5, r4, lsr #10
   39f58:	andeq	sp, r5, ip, ror r5
   39f5c:	andeq	sp, r5, r8, ror #14
   39f60:	andeq	sp, r5, r4, lsl #12
   39f64:	ldrdeq	sp, [r5], -r0
   39f68:	andeq	sp, r5, ip, lsr r8
   39f6c:	ldrdeq	sp, [r5], -ip
   39f70:	andeq	sp, r5, r8, lsr #14
   39f74:	andeq	sp, r5, r4, ror r8
   39f78:	andeq	sp, r5, r8, ror #11
   39f7c:			; <UNDEFINED> instruction: 0xffff8000
   39f80:	andeq	sp, r5, r0, asr r6
   39f84:	andeq	sp, r5, r0, asr #13
   39f88:	andeq	sp, r5, r0, lsr #15
   39f8c:	andeq	sp, r5, ip, lsl #16
   39f90:	muleq	r5, r0, r4
   39f94:	andeq	sp, r5, r4, asr #10
   39f98:	andeq	sp, r5, r8, ror #9
   39f9c:			; <UNDEFINED> instruction: 0x0005d5bc
   39fa0:	muleq	r5, r0, r6
   39fa4:	andeq	sp, r5, r0, lsr #12
   39fa8:	strdeq	sp, [r5], -r8
   39fac:	andeq	sp, r5, r0, ror r6
   39fb0:	muleq	r5, ip, r5
   39fb4:	ldrdeq	sp, [r5], -r4
   39fb8:	strdeq	sp, [r5], -r4
   39fbc:	andeq	sp, r5, ip, lsr r4

00039fc0 <flatcc_builder_default_alloc@@Base>:
   39fc0:	push	{r4, r5, r6, r7, r8, lr}
   39fc4:	subs	r5, r2, #0
   39fc8:	mov	r6, r1
   39fcc:	bne	39ff0 <flatcc_builder_default_alloc@@Base+0x30>
   39fd0:	ldr	r0, [r1]
   39fd4:	cmp	r0, #0
   39fd8:	popeq	{r4, r5, r6, r7, r8, pc}
   39fdc:	bl	13fd4 <free@plt>
   39fe0:	str	r5, [r6]
   39fe4:	str	r5, [r6, #4]
   39fe8:	mov	r0, r5
   39fec:	pop	{r4, r5, r6, r7, r8, pc}
   39ff0:	mov	r7, r3
   39ff4:	ldr	r3, [sp, #24]
   39ff8:	sub	r2, r3, #1
   39ffc:	cmp	r2, #6
   3a000:	ldrls	pc, [pc, r2, lsl #2]
   3a004:	b	3a0a0 <flatcc_builder_default_alloc@@Base+0xe0>
   3a008:	andeq	sl, r3, r4, ror r0
   3a00c:	andeq	sl, r3, r0, lsr #1
   3a010:	andeq	sl, r3, r0, lsr #1
   3a014:	muleq	r3, r8, r0
   3a018:	andeq	sl, r3, r4, lsr #32
   3a01c:	andeq	sl, r3, r0, lsr #1
   3a020:	muleq	r3, r0, r0
   3a024:	mov	r4, r5
   3a028:	ldr	r3, [r6, #4]
   3a02c:	cmp	r5, r3
   3a030:	bhi	3a03c <flatcc_builder_default_alloc@@Base+0x7c>
   3a034:	cmp	r4, r3, lsr #1
   3a038:	bls	3a0a8 <flatcc_builder_default_alloc@@Base+0xe8>
   3a03c:	mov	r1, r4
   3a040:	ldr	r0, [r6]
   3a044:	bl	14010 <realloc@plt>
   3a048:	subs	r5, r0, #0
   3a04c:	beq	3a0c4 <flatcc_builder_default_alloc@@Base+0x104>
   3a050:	cmp	r7, #0
   3a054:	beq	3a064 <flatcc_builder_default_alloc@@Base+0xa4>
   3a058:	ldr	r0, [r6, #4]
   3a05c:	cmp	r0, r4
   3a060:	bcc	3a0b0 <flatcc_builder_default_alloc@@Base+0xf0>
   3a064:	str	r5, [r6]
   3a068:	str	r4, [r6, #4]
   3a06c:	mov	r0, #0
   3a070:	pop	{r4, r5, r6, r7, r8, pc}
   3a074:	mov	r4, #256	; 0x100
   3a078:	cmp	r5, r4
   3a07c:	bls	3a028 <flatcc_builder_default_alloc@@Base+0x68>
   3a080:	lsl	r4, r4, #1
   3a084:	cmp	r5, r4
   3a088:	bhi	3a080 <flatcc_builder_default_alloc@@Base+0xc0>
   3a08c:	b	3a028 <flatcc_builder_default_alloc@@Base+0x68>
   3a090:	mov	r4, #64	; 0x40
   3a094:	b	3a078 <flatcc_builder_default_alloc@@Base+0xb8>
   3a098:	mov	r4, #288	; 0x120
   3a09c:	b	3a078 <flatcc_builder_default_alloc@@Base+0xb8>
   3a0a0:	mov	r4, #32
   3a0a4:	b	3a078 <flatcc_builder_default_alloc@@Base+0xb8>
   3a0a8:	mov	r0, #0
   3a0ac:	pop	{r4, r5, r6, r7, r8, pc}
   3a0b0:	sub	r2, r4, r0
   3a0b4:	mov	r1, #0
   3a0b8:	add	r0, r5, r0
   3a0bc:	bl	140ac <memset@plt>
   3a0c0:	b	3a064 <flatcc_builder_default_alloc@@Base+0xa4>
   3a0c4:	mvn	r0, #0
   3a0c8:	pop	{r4, r5, r6, r7, r8, pc}
   3a0cc:	push	{r4, r5, r6, r7, r8, lr}
   3a0d0:	mov	r5, r0
   3a0d4:	ldrh	r0, [r0, #128]	; 0x80
   3a0d8:	sub	sp, sp, #88	; 0x58
   3a0dc:	mov	r7, #4
   3a0e0:	cmp	r0, #3
   3a0e4:	movls	r0, #4
   3a0e8:	strhls	r0, [r5, #128]	; 0x80
   3a0ec:	ldr	r0, [r5, #136]	; 0x88
   3a0f0:	lsls	r4, r2, #2
   3a0f4:	mov	r8, #1
   3a0f8:	str	r7, [sp, #16]
   3a0fc:	str	r8, [sp, #20]
   3a100:	and	ip, r0, #3
   3a104:	movne	r8, #2
   3a108:	str	r7, [sp, #28]
   3a10c:	addne	r7, r4, r7
   3a110:	strne	r4, [sp, #36]	; 0x24
   3a114:	add	lr, sp, #12
   3a118:	strne	r1, [sp, #32]
   3a11c:	strne	r7, [sp, #16]
   3a120:	strne	r8, [sp, #20]
   3a124:	movne	r4, #3
   3a128:	moveq	r4, #2
   3a12c:	cmp	ip, #0
   3a130:	str	r2, [sp, #12]
   3a134:	str	lr, [sp, #24]
   3a138:	beq	3a164 <flatcc_builder_default_alloc@@Base+0x1a4>
   3a13c:	add	lr, r8, #1
   3a140:	add	r8, sp, #88	; 0x58
   3a144:	add	lr, r8, lr, lsl #3
   3a148:	ldr	r6, [pc, #320]	; 3a290 <flatcc_builder_default_alloc@@Base+0x2d0>
   3a14c:	mov	r8, r4
   3a150:	add	r7, r7, ip
   3a154:	str	ip, [lr, #-68]	; 0xffffffbc
   3a158:	str	r7, [sp, #16]
   3a15c:	str	r4, [sp, #20]
   3a160:	str	r6, [lr, #-72]	; 0xffffffb8
   3a164:	cmp	r2, #0
   3a168:	sub	r4, r0, r7
   3a16c:	beq	3a200 <flatcc_builder_default_alloc@@Base+0x240>
   3a170:	cmp	r3, #0
   3a174:	addne	r6, r3, r2
   3a178:	mvnne	r0, #3
   3a17c:	bne	3a1b0 <flatcc_builder_default_alloc@@Base+0x1f0>
   3a180:	b	3a23c <flatcc_builder_default_alloc@@Base+0x27c>
   3a184:	sub	lr, r0, r4
   3a188:	add	ip, lr, ip
   3a18c:	str	ip, [r1]
   3a190:	ldrb	ip, [r3]
   3a194:	cmp	ip, #0
   3a198:	beq	3a264 <flatcc_builder_default_alloc@@Base+0x2a4>
   3a19c:	add	r3, r3, #1
   3a1a0:	cmp	r3, r6
   3a1a4:	add	r1, r1, #4
   3a1a8:	sub	r0, r0, #4
   3a1ac:	beq	3a1f8 <flatcc_builder_default_alloc@@Base+0x238>
   3a1b0:	ldr	ip, [r1]
   3a1b4:	cmp	ip, #0
   3a1b8:	bne	3a184 <flatcc_builder_default_alloc@@Base+0x1c4>
   3a1bc:	ldrb	ip, [r3]
   3a1c0:	cmp	ip, #0
   3a1c4:	beq	3a19c <flatcc_builder_default_alloc@@Base+0x1dc>
   3a1c8:	ldr	r3, [pc, #196]	; 3a294 <flatcc_builder_default_alloc@@Base+0x2d4>
   3a1cc:	ldr	r2, [pc, #196]	; 3a298 <flatcc_builder_default_alloc@@Base+0x2d8>
   3a1d0:	ldr	r1, [pc, #196]	; 3a29c <flatcc_builder_default_alloc@@Base+0x2dc>
   3a1d4:	ldr	r0, [pc, #196]	; 3a2a0 <flatcc_builder_default_alloc@@Base+0x2e0>
   3a1d8:	bl	14148 <__assert_fail@plt>
   3a1dc:	sub	r1, r0, r4
   3a1e0:	add	r3, r3, #1
   3a1e4:	add	r1, r1, lr
   3a1e8:	cmp	r2, r3
   3a1ec:	str	r1, [ip, #4]!
   3a1f0:	sub	r0, r0, #4
   3a1f4:	bne	3a244 <flatcc_builder_default_alloc@@Base+0x284>
   3a1f8:	ldr	r0, [r5, #136]	; 0x88
   3a1fc:	sub	r4, r0, r7
   3a200:	cmp	r4, r0
   3a204:	bge	3a28c <flatcc_builder_default_alloc@@Base+0x2cc>
   3a208:	ldr	r0, [r5, #36]	; 0x24
   3a20c:	mov	r2, r8
   3a210:	str	r7, [sp]
   3a214:	mov	r3, r4
   3a218:	ldr	r6, [r5, #44]	; 0x2c
   3a21c:	add	r1, sp, #24
   3a220:	blx	r6
   3a224:	cmp	r0, #0
   3a228:	bne	3a278 <flatcc_builder_default_alloc@@Base+0x2b8>
   3a22c:	mov	r0, r4
   3a230:	str	r4, [r5, #136]	; 0x88
   3a234:	add	sp, sp, #88	; 0x58
   3a238:	pop	{r4, r5, r6, r7, r8, pc}
   3a23c:	sub	ip, r1, #4
   3a240:	mvn	r0, #3
   3a244:	ldr	lr, [ip, #4]
   3a248:	cmp	lr, #0
   3a24c:	bne	3a1dc <flatcc_builder_default_alloc@@Base+0x21c>
   3a250:	ldr	r3, [pc, #60]	; 3a294 <flatcc_builder_default_alloc@@Base+0x2d4>
   3a254:	ldr	r2, [pc, #72]	; 3a2a4 <flatcc_builder_default_alloc@@Base+0x2e4>
   3a258:	ldr	r1, [pc, #60]	; 3a29c <flatcc_builder_default_alloc@@Base+0x2dc>
   3a25c:	ldr	r0, [pc, #68]	; 3a2a8 <flatcc_builder_default_alloc@@Base+0x2e8>
   3a260:	bl	14148 <__assert_fail@plt>
   3a264:	ldr	r3, [pc, #40]	; 3a294 <flatcc_builder_default_alloc@@Base+0x2d4>
   3a268:	ldr	r2, [pc, #60]	; 3a2ac <flatcc_builder_default_alloc@@Base+0x2ec>
   3a26c:	ldr	r1, [pc, #40]	; 3a29c <flatcc_builder_default_alloc@@Base+0x2dc>
   3a270:	ldr	r0, [pc, #56]	; 3a2b0 <flatcc_builder_default_alloc@@Base+0x2f0>
   3a274:	bl	14148 <__assert_fail@plt>
   3a278:	ldr	r3, [pc, #52]	; 3a2b4 <flatcc_builder_default_alloc@@Base+0x2f4>
   3a27c:	ldr	r2, [pc, #52]	; 3a2b8 <flatcc_builder_default_alloc@@Base+0x2f8>
   3a280:	ldr	r1, [pc, #20]	; 3a29c <flatcc_builder_default_alloc@@Base+0x2dc>
   3a284:	ldr	r0, [pc, #28]	; 3a2a8 <flatcc_builder_default_alloc@@Base+0x2e8>
   3a288:	bl	14148 <__assert_fail@plt>
   3a28c:	bl	14244 <__assert_fail@plt+0xfc>
   3a290:	andeq	sp, r5, r4, lsr #18
   3a294:	andeq	sp, r5, r4, lsr #22
   3a298:			; <UNDEFINED> instruction: 0x000005b5
   3a29c:	ldrdeq	sp, [r5], -ip
   3a2a0:	andeq	lr, r5, r0, lsr #1
   3a2a4:			; <UNDEFINED> instruction: 0x000005b7
   3a2a8:	andeq	sp, r4, r4, ror r2
   3a2ac:			; <UNDEFINED> instruction: 0x000005b1
   3a2b0:	muleq	r5, r0, r0
   3a2b4:	andeq	sp, r5, r8, lsr #17
   3a2b8:	andeq	r0, r0, fp, lsl #5
   3a2bc:	ldrh	r3, [r0, #128]	; 0x80
   3a2c0:	push	{r4, r5, r6, r7, lr}
   3a2c4:	sub	sp, sp, #92	; 0x5c
   3a2c8:	cmp	r3, #3
   3a2cc:	movls	r3, #4
   3a2d0:	ldr	lr, [r0, #136]	; 0x88
   3a2d4:	mov	ip, #4
   3a2d8:	strhls	r3, [r0, #128]	; 0x80
   3a2dc:	mov	r4, r0
   3a2e0:	lsls	r6, r2, #2
   3a2e4:	mov	r0, #1
   3a2e8:	add	r5, sp, #12
   3a2ec:	str	ip, [sp, #16]
   3a2f0:	str	r0, [sp, #20]
   3a2f4:	and	r3, lr, #3
   3a2f8:	movne	r0, #2
   3a2fc:	str	ip, [sp, #28]
   3a300:	addne	ip, r6, ip
   3a304:	str	r5, [sp, #24]
   3a308:	strne	r6, [sp, #36]	; 0x24
   3a30c:	strne	r1, [sp, #32]
   3a310:	strne	ip, [sp, #16]
   3a314:	strne	r0, [sp, #20]
   3a318:	movne	r5, r0
   3a31c:	movne	r6, #3
   3a320:	moveq	r5, r0
   3a324:	moveq	r6, #2
   3a328:	cmp	r3, #0
   3a32c:	str	r2, [sp, #12]
   3a330:	beq	3a35c <flatcc_builder_default_alloc@@Base+0x39c>
   3a334:	add	r0, r5, #1
   3a338:	add	r5, sp, #88	; 0x58
   3a33c:	add	r0, r5, r0, lsl #3
   3a340:	ldr	r7, [pc, #204]	; 3a414 <flatcc_builder_default_alloc@@Base+0x454>
   3a344:	mov	r5, r6
   3a348:	add	ip, ip, r3
   3a34c:	str	r3, [r0, #-68]	; 0xffffffbc
   3a350:	str	ip, [sp, #16]
   3a354:	str	r6, [sp, #20]
   3a358:	str	r7, [r0, #-72]	; 0xffffffb8
   3a35c:	cmp	r2, #0
   3a360:	beq	3a3bc <flatcc_builder_default_alloc@@Base+0x3fc>
   3a364:	ldr	r3, [r1]
   3a368:	cmp	r3, #0
   3a36c:	beq	3a3a4 <flatcc_builder_default_alloc@@Base+0x3e4>
   3a370:	sub	r6, lr, ip
   3a374:	mov	r0, #0
   3a378:	mvn	lr, #3
   3a37c:	sub	r3, r3, r6
   3a380:	add	r0, r0, #1
   3a384:	add	r3, r3, lr
   3a388:	cmp	r2, r0
   3a38c:	str	r3, [r1]
   3a390:	beq	3a3b8 <flatcc_builder_default_alloc@@Base+0x3f8>
   3a394:	ldr	r3, [r1, #4]!
   3a398:	sub	lr, lr, #4
   3a39c:	cmp	r3, #0
   3a3a0:	bne	3a37c <flatcc_builder_default_alloc@@Base+0x3bc>
   3a3a4:	ldr	r3, [pc, #108]	; 3a418 <flatcc_builder_default_alloc@@Base+0x458>
   3a3a8:	ldr	r2, [pc, #108]	; 3a41c <flatcc_builder_default_alloc@@Base+0x45c>
   3a3ac:	ldr	r1, [pc, #108]	; 3a420 <flatcc_builder_default_alloc@@Base+0x460>
   3a3b0:	ldr	r0, [pc, #108]	; 3a424 <flatcc_builder_default_alloc@@Base+0x464>
   3a3b4:	bl	14148 <__assert_fail@plt>
   3a3b8:	ldr	lr, [r4, #136]	; 0x88
   3a3bc:	sub	r6, lr, ip
   3a3c0:	cmp	r6, lr
   3a3c4:	bge	3a410 <flatcc_builder_default_alloc@@Base+0x450>
   3a3c8:	ldr	r0, [r4, #36]	; 0x24
   3a3cc:	mov	r2, r5
   3a3d0:	str	ip, [sp]
   3a3d4:	mov	r3, r6
   3a3d8:	ldr	r5, [r4, #44]	; 0x2c
   3a3dc:	add	r1, sp, #24
   3a3e0:	blx	r5
   3a3e4:	cmp	r0, #0
   3a3e8:	bne	3a3fc <flatcc_builder_default_alloc@@Base+0x43c>
   3a3ec:	mov	r0, r6
   3a3f0:	str	r6, [r4, #136]	; 0x88
   3a3f4:	add	sp, sp, #92	; 0x5c
   3a3f8:	pop	{r4, r5, r6, r7, pc}
   3a3fc:	ldr	r3, [pc, #36]	; 3a428 <flatcc_builder_default_alloc@@Base+0x468>
   3a400:	ldr	r2, [pc, #36]	; 3a42c <flatcc_builder_default_alloc@@Base+0x46c>
   3a404:	ldr	r1, [pc, #20]	; 3a420 <flatcc_builder_default_alloc@@Base+0x460>
   3a408:	ldr	r0, [pc, #20]	; 3a424 <flatcc_builder_default_alloc@@Base+0x464>
   3a40c:	bl	14148 <__assert_fail@plt>
   3a410:	bl	14244 <__assert_fail@plt+0xfc>
   3a414:	andeq	sp, r5, r4, lsr #18
   3a418:	andeq	sp, r5, r4, lsr #22
   3a41c:			; <UNDEFINED> instruction: 0x000005b7
   3a420:	ldrdeq	sp, [r5], -ip
   3a424:	andeq	sp, r4, r4, ror r2
   3a428:	andeq	sp, r5, r8, lsr #17
   3a42c:	andeq	r0, r0, fp, lsl #5

0003a430 <flatcc_builder_flush_vtable_cache@@Base>:
   3a430:	ldr	r3, [r0, #116]	; 0x74
   3a434:	cmp	r3, #0
   3a438:	bxeq	lr
   3a43c:	ldr	r2, [r0, #96]	; 0x60
   3a440:	push	{r4, lr}
   3a444:	mov	r1, #0
   3a448:	mov	r4, r0
   3a44c:	ldr	r0, [r0, #92]	; 0x5c
   3a450:	bl	140ac <memset@plt>
   3a454:	mov	r2, #16
   3a458:	mov	r3, #0
   3a45c:	str	r2, [r4, #124]	; 0x7c
   3a460:	str	r3, [r4, #120]	; 0x78
   3a464:	pop	{r4, pc}

0003a468 <flatcc_builder_custom_init@@Base>:
   3a468:	push	{r4, r5, r6, r7, r8, lr}
   3a46c:	mov	r6, r1
   3a470:	mov	r7, r2
   3a474:	mov	r1, #0
   3a478:	mov	r2, #232	; 0xe8
   3a47c:	mov	r4, r0
   3a480:	mov	r5, r3
   3a484:	ldr	r8, [sp, #24]
   3a488:	bl	140ac <memset@plt>
   3a48c:	cmp	r6, #0
   3a490:	moveq	r3, #1
   3a494:	ldreq	r6, [pc, #40]	; 3a4c4 <flatcc_builder_custom_init@@Base+0x5c>
   3a498:	addeq	r7, r4, #188	; 0xbc
   3a49c:	str	r8, [r4, #40]	; 0x28
   3a4a0:	str	r7, [r4, #36]	; 0x24
   3a4a4:	str	r6, [r4, #44]	; 0x2c
   3a4a8:	mov	r0, #0
   3a4ac:	streq	r3, [r4, #184]	; 0xb8
   3a4b0:	ldr	r3, [pc, #16]	; 3a4c8 <flatcc_builder_custom_init@@Base+0x60>
   3a4b4:	cmp	r5, #0
   3a4b8:	moveq	r5, r3
   3a4bc:	str	r5, [r4, #48]	; 0x30
   3a4c0:	pop	{r4, r5, r6, r7, r8, pc}
   3a4c4:	andeq	pc, r3, ip, lsl sl	; <UNPREDICTABLE>
   3a4c8:	andeq	r9, r3, r0, asr #31

0003a4cc <flatcc_builder_init@@Base>:
   3a4cc:	push	{r4, lr}
   3a4d0:	mov	r2, #232	; 0xe8
   3a4d4:	mov	r1, #0
   3a4d8:	mov	r4, r0
   3a4dc:	bl	140ac <memset@plt>
   3a4e0:	ldr	r1, [pc, #32]	; 3a508 <flatcc_builder_init@@Base+0x3c>
   3a4e4:	ldr	r3, [pc, #32]	; 3a50c <flatcc_builder_init@@Base+0x40>
   3a4e8:	mov	r0, #1
   3a4ec:	add	r2, r4, #188	; 0xbc
   3a4f0:	str	r0, [r4, #184]	; 0xb8
   3a4f4:	str	r1, [r4, #48]	; 0x30
   3a4f8:	str	r2, [r4, #36]	; 0x24
   3a4fc:	str	r3, [r4, #44]	; 0x2c
   3a500:	mov	r0, #0
   3a504:	pop	{r4, pc}
   3a508:	andeq	r9, r3, r0, asr #31
   3a50c:	andeq	pc, r3, ip, lsl sl	; <UNPREDICTABLE>

0003a510 <flatcc_builder_custom_reset@@Base>:
   3a510:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3a514:	add	r7, r0, #52	; 0x34
   3a518:	mov	r4, #0
   3a51c:	sub	sp, sp, #12
   3a520:	mov	r5, r0
   3a524:	mov	sl, r1
   3a528:	mov	r8, r2
   3a52c:	mov	r6, r7
   3a530:	mov	r9, r4
   3a534:	mov	fp, #1
   3a538:	b	3a58c <flatcc_builder_custom_reset@@Base+0x7c>
   3a53c:	cmp	r4, #5
   3a540:	cmpne	r8, #0
   3a544:	beq	3a570 <flatcc_builder_custom_reset@@Base+0x60>
   3a548:	ldr	r0, [r5, #40]	; 0x28
   3a54c:	mov	r3, fp
   3a550:	str	r4, [sp]
   3a554:	mov	r2, #1
   3a558:	mov	r1, r6
   3a55c:	ldr	ip, [r5, #48]	; 0x30
   3a560:	blx	ip
   3a564:	cmp	r0, #0
   3a568:	bne	3a640 <flatcc_builder_custom_reset@@Base+0x130>
   3a56c:	ldr	r0, [r7, r4, lsl #3]
   3a570:	ldr	r2, [r6, #4]
   3a574:	mov	r1, r9
   3a578:	bl	140ac <memset@plt>
   3a57c:	add	r4, r4, #1
   3a580:	cmp	r4, #8
   3a584:	add	r6, r6, #8
   3a588:	beq	3a5b8 <flatcc_builder_custom_reset@@Base+0xa8>
   3a58c:	ldr	r0, [r7, r4, lsl #3]
   3a590:	cmp	r0, #0
   3a594:	bne	3a53c <flatcc_builder_custom_reset@@Base+0x2c>
   3a598:	ldr	r3, [r6, #4]
   3a59c:	cmp	r3, #0
   3a5a0:	beq	3a57c <flatcc_builder_custom_reset@@Base+0x6c>
   3a5a4:	ldr	r3, [pc, #156]	; 3a648 <flatcc_builder_custom_reset@@Base+0x138>
   3a5a8:	ldr	r2, [pc, #156]	; 3a64c <flatcc_builder_custom_reset@@Base+0x13c>
   3a5ac:	ldr	r1, [pc, #156]	; 3a650 <flatcc_builder_custom_reset@@Base+0x140>
   3a5b0:	ldr	r0, [pc, #156]	; 3a654 <flatcc_builder_custom_reset@@Base+0x144>
   3a5b4:	bl	14148 <__assert_fail@plt>
   3a5b8:	ldr	r2, [r5, #124]	; 0x7c
   3a5bc:	mov	r3, #0
   3a5c0:	ldr	r0, [r5, #60]	; 0x3c
   3a5c4:	cmp	r2, r3
   3a5c8:	str	r3, [r5, #120]	; 0x78
   3a5cc:	ldr	r1, [r5, #76]	; 0x4c
   3a5d0:	movne	r3, #16
   3a5d4:	ldr	r2, [r5, #52]	; 0x34
   3a5d8:	str	r0, [r5, #16]
   3a5dc:	ldr	r0, [r5, #184]	; 0xb8
   3a5e0:	strne	r3, [r5, #124]	; 0x7c
   3a5e4:	mov	r3, #0
   3a5e8:	cmp	sl, #0
   3a5ec:	strne	r3, [r5, #172]	; 0xac
   3a5f0:	strne	r3, [r5, #176]	; 0xb0
   3a5f4:	strne	r3, [r5, #180]	; 0xb4
   3a5f8:	cmp	r0, #0
   3a5fc:	stm	r5, {r1, r2}
   3a600:	strh	r3, [r5, #128]	; 0x80
   3a604:	str	r3, [r5, #136]	; 0x88
   3a608:	str	r3, [r5, #140]	; 0x8c
   3a60c:	str	r3, [r5, #156]	; 0x9c
   3a610:	str	r3, [r5, #160]	; 0xa0
   3a614:	str	r3, [r5, #20]
   3a618:	str	r3, [r5, #24]
   3a61c:	str	r3, [r5, #148]	; 0x94
   3a620:	str	r3, [r5, #152]	; 0x98
   3a624:	str	r3, [r5, #32]
   3a628:	beq	3a638 <flatcc_builder_custom_reset@@Base+0x128>
   3a62c:	add	r0, r5, #188	; 0xbc
   3a630:	bl	3f8f4 <flatcc_emitter_reset@@Base>
   3a634:	mov	r0, #0
   3a638:	add	sp, sp, #12
   3a63c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3a640:	mvn	r0, #0
   3a644:	b	3a638 <flatcc_builder_custom_reset@@Base+0x128>
   3a648:	andeq	sp, r5, r4, asr #22
   3a64c:			; <UNDEFINED> instruction: 0x000001b2
   3a650:	ldrdeq	sp, [r5], -ip
   3a654:	strheq	lr, [r5], -r0

0003a658 <flatcc_builder_reset@@Base>:
   3a658:	push	{r4, r5, r6, r7, r8, lr}
   3a65c:	mov	r5, r0
   3a660:	add	r4, r0, #52	; 0x34
   3a664:	add	r6, r0, #116	; 0x74
   3a668:	mov	r7, #0
   3a66c:	b	3a688 <flatcc_builder_reset@@Base+0x30>
   3a670:	ldr	r2, [r4, #4]
   3a674:	mov	r1, r7
   3a678:	bl	140ac <memset@plt>
   3a67c:	add	r4, r4, #8
   3a680:	cmp	r6, r4
   3a684:	beq	3a6b4 <flatcc_builder_reset@@Base+0x5c>
   3a688:	ldr	r0, [r4]
   3a68c:	cmp	r0, #0
   3a690:	bne	3a670 <flatcc_builder_reset@@Base+0x18>
   3a694:	ldr	r3, [r4, #4]
   3a698:	cmp	r3, #0
   3a69c:	beq	3a67c <flatcc_builder_reset@@Base+0x24>
   3a6a0:	ldr	r3, [pc, #128]	; 3a728 <flatcc_builder_reset@@Base+0xd0>
   3a6a4:	ldr	r2, [pc, #128]	; 3a72c <flatcc_builder_reset@@Base+0xd4>
   3a6a8:	ldr	r1, [pc, #128]	; 3a730 <flatcc_builder_reset@@Base+0xd8>
   3a6ac:	ldr	r0, [pc, #128]	; 3a734 <flatcc_builder_reset@@Base+0xdc>
   3a6b0:	bl	14148 <__assert_fail@plt>
   3a6b4:	ldr	r2, [r5, #124]	; 0x7c
   3a6b8:	mov	r3, #0
   3a6bc:	cmp	r2, r3
   3a6c0:	str	r3, [r5, #120]	; 0x78
   3a6c4:	movne	r3, #16
   3a6c8:	strne	r3, [r5, #124]	; 0x7c
   3a6cc:	ldr	r1, [r5, #76]	; 0x4c
   3a6d0:	ldr	r3, [r5, #184]	; 0xb8
   3a6d4:	ldr	r2, [r5, #52]	; 0x34
   3a6d8:	ldr	r0, [r5, #60]	; 0x3c
   3a6dc:	cmp	r3, #0
   3a6e0:	mov	r3, #0
   3a6e4:	str	r0, [r5, #16]
   3a6e8:	stm	r5, {r1, r2}
   3a6ec:	strh	r3, [r5, #128]	; 0x80
   3a6f0:	str	r3, [r5, #136]	; 0x88
   3a6f4:	str	r3, [r5, #140]	; 0x8c
   3a6f8:	str	r3, [r5, #156]	; 0x9c
   3a6fc:	str	r3, [r5, #160]	; 0xa0
   3a700:	str	r3, [r5, #20]
   3a704:	str	r3, [r5, #24]
   3a708:	str	r3, [r5, #148]	; 0x94
   3a70c:	str	r3, [r5, #152]	; 0x98
   3a710:	str	r3, [r5, #32]
   3a714:	beq	3a720 <flatcc_builder_reset@@Base+0xc8>
   3a718:	add	r0, r5, #188	; 0xbc
   3a71c:	bl	3f8f4 <flatcc_emitter_reset@@Base>
   3a720:	mov	r0, #0
   3a724:	pop	{r4, r5, r6, r7, r8, pc}
   3a728:	andeq	sp, r5, r4, asr #22
   3a72c:			; <UNDEFINED> instruction: 0x000001b2
   3a730:	ldrdeq	sp, [r5], -ip
   3a734:	strheq	lr, [r5], -r0

0003a738 <flatcc_builder_clear@@Base>:
   3a738:	push	{r4, r5, r6, r7, r8, lr}
   3a73c:	mov	r4, #0
   3a740:	sub	sp, sp, #8
   3a744:	mov	r6, r0
   3a748:	add	r5, r0, #52	; 0x34
   3a74c:	mov	r8, r4
   3a750:	ldr	r0, [r6, #40]	; 0x28
   3a754:	mov	r1, r5
   3a758:	str	r4, [sp]
   3a75c:	mov	r3, r8
   3a760:	add	r4, r4, #1
   3a764:	ldr	r7, [r6, #48]	; 0x30
   3a768:	mov	r2, #0
   3a76c:	blx	r7
   3a770:	cmp	r4, #8
   3a774:	add	r5, r5, #8
   3a778:	bne	3a750 <flatcc_builder_clear@@Base+0x18>
   3a77c:	ldr	r3, [r6, #184]	; 0xb8
   3a780:	cmp	r3, #0
   3a784:	beq	3a790 <flatcc_builder_clear@@Base+0x58>
   3a788:	add	r0, r6, #188	; 0xbc
   3a78c:	bl	3f9b0 <flatcc_emitter_clear@@Base>
   3a790:	mov	r0, r6
   3a794:	mov	r2, #232	; 0xe8
   3a798:	mov	r1, #0
   3a79c:	add	sp, sp, #8
   3a7a0:	pop	{r4, r5, r6, r7, r8, lr}
   3a7a4:	b	140ac <memset@plt>

0003a7a8 <flatcc_builder_enter_user_frame_ptr@@Base>:
   3a7a8:	push	{r4, r5, r6, r7, r8, lr}
   3a7ac:	add	r4, r1, #3
   3a7b0:	bic	r4, r4, #3
   3a7b4:	ldr	r7, [r0, #228]	; 0xe4
   3a7b8:	add	r4, r4, #4
   3a7bc:	ldr	r3, [r0, #112]	; 0x70
   3a7c0:	add	r2, r4, r7
   3a7c4:	cmp	r2, r3
   3a7c8:	sub	sp, sp, #8
   3a7cc:	mov	r6, r0
   3a7d0:	bhi	3a818 <flatcc_builder_enter_user_frame_ptr@@Base+0x70>
   3a7d4:	ldr	r8, [r6, #108]	; 0x6c
   3a7d8:	adds	r5, r8, r7
   3a7dc:	beq	3a840 <flatcc_builder_enter_user_frame_ptr@@Base+0x98>
   3a7e0:	mov	r2, r4
   3a7e4:	mov	r1, #0
   3a7e8:	mov	r0, r5
   3a7ec:	bl	140ac <memset@plt>
   3a7f0:	ldr	r3, [r6, #224]	; 0xe0
   3a7f4:	add	r0, r5, #4
   3a7f8:	str	r3, [r8, r7]
   3a7fc:	ldr	r3, [r6, #228]	; 0xe4
   3a800:	add	r4, r4, r3
   3a804:	add	r3, r3, #4
   3a808:	str	r4, [r6, #228]	; 0xe4
   3a80c:	str	r3, [r6, #224]	; 0xe0
   3a810:	add	sp, sp, #8
   3a814:	pop	{r4, r5, r6, r7, r8, pc}
   3a818:	mov	r3, #7
   3a81c:	ldr	r0, [r0, #40]	; 0x28
   3a820:	add	r1, r6, #108	; 0x6c
   3a824:	str	r3, [sp]
   3a828:	mov	r3, #0
   3a82c:	ldr	r5, [r6, #48]	; 0x30
   3a830:	blx	r5
   3a834:	cmp	r0, #0
   3a838:	beq	3a7d4 <flatcc_builder_enter_user_frame_ptr@@Base+0x2c>
   3a83c:	bl	141f8 <__assert_fail@plt+0xb0>
   3a840:	mov	r0, r5
   3a844:	b	3a810 <flatcc_builder_enter_user_frame_ptr@@Base+0x68>

0003a848 <flatcc_builder_enter_user_frame@@Base>:
   3a848:	push	{r4, r5, r6, r7, lr}
   3a84c:	add	r4, r1, #3
   3a850:	bic	r4, r4, #3
   3a854:	ldr	r6, [r0, #228]	; 0xe4
   3a858:	add	r4, r4, #4
   3a85c:	ldr	r3, [r0, #112]	; 0x70
   3a860:	add	r2, r4, r6
   3a864:	cmp	r2, r3
   3a868:	sub	sp, sp, #12
   3a86c:	mov	r5, r0
   3a870:	bhi	3a8b0 <flatcc_builder_enter_user_frame@@Base+0x68>
   3a874:	ldr	r7, [r5, #108]	; 0x6c
   3a878:	adds	r0, r7, r6
   3a87c:	beq	3a8a8 <flatcc_builder_enter_user_frame@@Base+0x60>
   3a880:	mov	r2, r4
   3a884:	mov	r1, #0
   3a888:	bl	140ac <memset@plt>
   3a88c:	ldr	r3, [r5, #224]	; 0xe0
   3a890:	str	r3, [r7, r6]
   3a894:	ldr	r0, [r5, #228]	; 0xe4
   3a898:	add	r4, r4, r0
   3a89c:	add	r0, r0, #4
   3a8a0:	str	r4, [r5, #228]	; 0xe4
   3a8a4:	str	r0, [r5, #224]	; 0xe0
   3a8a8:	add	sp, sp, #12
   3a8ac:	pop	{r4, r5, r6, r7, pc}
   3a8b0:	mov	r3, #7
   3a8b4:	ldr	r0, [r0, #40]	; 0x28
   3a8b8:	add	r1, r5, #108	; 0x6c
   3a8bc:	str	r3, [sp]
   3a8c0:	mov	r3, #0
   3a8c4:	ldr	r7, [r5, #48]	; 0x30
   3a8c8:	blx	r7
   3a8cc:	cmp	r0, #0
   3a8d0:	beq	3a874 <flatcc_builder_enter_user_frame@@Base+0x2c>
   3a8d4:	bl	141f8 <__assert_fail@plt+0xb0>

0003a8d8 <flatcc_builder_exit_user_frame@@Base>:
   3a8d8:	ldr	r3, [r0, #224]	; 0xe0
   3a8dc:	cmp	r3, #0
   3a8e0:	beq	3a904 <flatcc_builder_exit_user_frame@@Base+0x2c>
   3a8e4:	ldr	r2, [r0, #108]	; 0x6c
   3a8e8:	sub	r1, r3, #4
   3a8ec:	add	r3, r2, r3
   3a8f0:	str	r1, [r0, #228]	; 0xe4
   3a8f4:	ldr	r3, [r3, #-4]
   3a8f8:	str	r3, [r0, #224]	; 0xe0
   3a8fc:	mov	r0, r3
   3a900:	bx	lr
   3a904:	push	{r4, lr}
   3a908:	bl	14290 <__assert_fail@plt+0x148>

0003a90c <flatcc_builder_exit_user_frame_at@@Base>:
   3a90c:	ldr	r3, [r0, #224]	; 0xe0
   3a910:	push	{r4, lr}
   3a914:	cmp	r3, r1
   3a918:	bcc	3a948 <flatcc_builder_exit_user_frame_at@@Base+0x3c>
   3a91c:	cmp	r1, #0
   3a920:	str	r1, [r0, #224]	; 0xe0
   3a924:	beq	3a95c <flatcc_builder_exit_user_frame_at@@Base+0x50>
   3a928:	ldr	r3, [r0, #108]	; 0x6c
   3a92c:	sub	r2, r1, #4
   3a930:	add	r1, r3, r1
   3a934:	str	r2, [r0, #228]	; 0xe4
   3a938:	ldr	r3, [r1, #-4]
   3a93c:	str	r3, [r0, #224]	; 0xe0
   3a940:	mov	r0, r3
   3a944:	pop	{r4, pc}
   3a948:	ldr	r3, [pc, #16]	; 3a960 <flatcc_builder_exit_user_frame_at@@Base+0x54>
   3a94c:	ldr	r2, [pc, #16]	; 3a964 <flatcc_builder_exit_user_frame_at@@Base+0x58>
   3a950:	ldr	r1, [pc, #16]	; 3a968 <flatcc_builder_exit_user_frame_at@@Base+0x5c>
   3a954:	ldr	r0, [pc, #16]	; 3a96c <flatcc_builder_exit_user_frame_at@@Base+0x60>
   3a958:	bl	14148 <__assert_fail@plt>
   3a95c:	bl	14290 <__assert_fail@plt+0x148>
   3a960:	andeq	sp, r5, r0, ror #22
   3a964:	andeq	r0, r0, r7, lsr #4
   3a968:	ldrdeq	sp, [r5], -ip
   3a96c:	andeq	lr, r5, r4, asr #1

0003a970 <flatcc_builder_get_current_user_frame@@Base>:
   3a970:	ldr	r0, [r0, #224]	; 0xe0
   3a974:	bx	lr

0003a978 <flatcc_builder_get_user_frame_ptr@@Base>:
   3a978:	ldr	r0, [r0, #108]	; 0x6c
   3a97c:	add	r0, r0, r1
   3a980:	bx	lr

0003a984 <flatcc_builder_embed_buffer@@Base>:
   3a984:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3a988:	sub	sp, sp, #92	; 0x5c
   3a98c:	cmp	r1, #0
   3a990:	ldr	r6, [sp, #132]	; 0x84
   3a994:	mov	r8, r2
   3a998:	mov	r5, r0
   3a99c:	mov	r7, r3
   3a9a0:	ldr	r2, [r0, #152]	; 0x98
   3a9a4:	and	r6, r6, #2
   3a9a8:	ldrh	r4, [sp, #128]	; 0x80
   3a9ac:	bne	3a9bc <flatcc_builder_embed_buffer@@Base+0x38>
   3a9b0:	ldrh	r1, [r0, #132]	; 0x84
   3a9b4:	cmp	r1, #0
   3a9b8:	beq	3ab44 <flatcc_builder_embed_buffer@@Base+0x1c0>
   3a9bc:	cmp	r4, #4
   3a9c0:	movcc	r4, #4
   3a9c4:	cmp	r1, r4
   3a9c8:	movcs	r4, r1
   3a9cc:	cmp	r2, #0
   3a9d0:	bne	3aa38 <flatcc_builder_embed_buffer@@Base+0xb4>
   3a9d4:	ldr	r9, [r5, #140]	; 0x8c
   3a9d8:	sub	r1, r1, #1
   3a9dc:	ands	r1, r1, r9
   3a9e0:	beq	3aa38 <flatcc_builder_embed_buffer@@Base+0xb4>
   3a9e4:	add	r3, r9, r1
   3a9e8:	ldr	sl, [pc, #420]	; 3ab94 <flatcc_builder_embed_buffer@@Base+0x210>
   3a9ec:	mov	r2, #1
   3a9f0:	cmp	r9, r3
   3a9f4:	str	r1, [sp, #16]
   3a9f8:	str	r1, [sp, #28]
   3a9fc:	str	sl, [sp, #24]
   3aa00:	str	r3, [r5, #140]	; 0x8c
   3aa04:	str	r2, [sp, #20]
   3aa08:	bgt	3ab68 <flatcc_builder_embed_buffer@@Base+0x1e4>
   3aa0c:	ldr	r0, [r5, #36]	; 0x24
   3aa10:	mov	r3, r9
   3aa14:	str	r1, [sp]
   3aa18:	add	r1, sp, #24
   3aa1c:	ldr	fp, [r5, #44]	; 0x2c
   3aa20:	blx	fp
   3aa24:	cmp	r0, #0
   3aa28:	bne	3ab6c <flatcc_builder_embed_buffer@@Base+0x1e8>
   3aa2c:	cmn	r9, #1
   3aa30:	beq	3ab80 <flatcc_builder_embed_buffer@@Base+0x1fc>
   3aa34:	ldr	r2, [r5, #152]	; 0x98
   3aa38:	ldr	r1, [r5, #136]	; 0x88
   3aa3c:	cmp	r6, #0
   3aa40:	movne	r6, #4
   3aa44:	moveq	r6, #0
   3aa48:	sub	r3, r1, r7
   3aa4c:	sub	r6, r3, r6
   3aa50:	sub	r4, r4, #1
   3aa54:	and	r4, r4, r6
   3aa58:	mov	r3, #0
   3aa5c:	add	r0, r7, r4
   3aa60:	cmp	r2, #0
   3aa64:	str	r0, [sp, #12]
   3aa68:	str	r3, [sp, #16]
   3aa6c:	str	r3, [sp, #20]
   3aa70:	bne	3ab1c <flatcc_builder_embed_buffer@@Base+0x198>
   3aa74:	mov	r3, r2
   3aa78:	mov	ip, #2
   3aa7c:	mov	r0, #1
   3aa80:	cmp	r7, #0
   3aa84:	beq	3aab0 <flatcc_builder_embed_buffer@@Base+0x12c>
   3aa88:	add	r2, r2, #1
   3aa8c:	add	lr, sp, #88	; 0x58
   3aa90:	add	r2, lr, r2, lsl #3
   3aa94:	add	r3, r3, r7
   3aa98:	str	r3, [sp, #16]
   3aa9c:	str	r8, [r2, #-72]	; 0xffffffb8
   3aaa0:	str	r7, [r2, #-68]	; 0xffffffbc
   3aaa4:	mov	r2, r0
   3aaa8:	str	r0, [sp, #20]
   3aaac:	mov	r0, ip
   3aab0:	cmp	r4, #0
   3aab4:	beq	3aae0 <flatcc_builder_embed_buffer@@Base+0x15c>
   3aab8:	add	r2, r2, #1
   3aabc:	add	ip, sp, #88	; 0x58
   3aac0:	add	ip, ip, r2, lsl #3
   3aac4:	ldr	lr, [pc, #200]	; 3ab94 <flatcc_builder_embed_buffer@@Base+0x210>
   3aac8:	mov	r2, r0
   3aacc:	add	r3, r3, r4
   3aad0:	str	r3, [sp, #16]
   3aad4:	str	r4, [ip, #-68]	; 0xffffffbc
   3aad8:	str	lr, [ip, #-72]	; 0xffffffb8
   3aadc:	str	r0, [sp, #20]
   3aae0:	sub	r4, r1, r3
   3aae4:	cmp	r1, r4
   3aae8:	ble	3ab50 <flatcc_builder_embed_buffer@@Base+0x1cc>
   3aaec:	ldr	r0, [r5, #36]	; 0x24
   3aaf0:	add	r1, sp, #24
   3aaf4:	str	r3, [sp]
   3aaf8:	mov	r3, r4
   3aafc:	ldr	r6, [r5, #44]	; 0x2c
   3ab00:	blx	r6
   3ab04:	cmp	r0, #0
   3ab08:	bne	3ab54 <flatcc_builder_embed_buffer@@Base+0x1d0>
   3ab0c:	mov	r0, r4
   3ab10:	str	r4, [r5, #136]	; 0x88
   3ab14:	add	sp, sp, #92	; 0x5c
   3ab18:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3ab1c:	mov	r3, #4
   3ab20:	add	r0, sp, #12
   3ab24:	mov	r2, #1
   3ab28:	str	r0, [sp, #24]
   3ab2c:	str	r3, [sp, #16]
   3ab30:	str	r3, [sp, #28]
   3ab34:	str	r2, [sp, #20]
   3ab38:	mov	ip, #3
   3ab3c:	mov	r0, #2
   3ab40:	b	3aa80 <flatcc_builder_embed_buffer@@Base+0xfc>
   3ab44:	cmp	r4, #4
   3ab48:	movcc	r4, #4
   3ab4c:	b	3aa38 <flatcc_builder_embed_buffer@@Base+0xb4>
   3ab50:	bl	14244 <__assert_fail@plt+0xfc>
   3ab54:	ldr	r3, [pc, #60]	; 3ab98 <flatcc_builder_embed_buffer@@Base+0x214>
   3ab58:	ldr	r2, [pc, #60]	; 3ab9c <flatcc_builder_embed_buffer@@Base+0x218>
   3ab5c:	ldr	r1, [pc, #60]	; 3aba0 <flatcc_builder_embed_buffer@@Base+0x21c>
   3ab60:	ldr	r0, [pc, #60]	; 3aba4 <flatcc_builder_embed_buffer@@Base+0x220>
   3ab64:	bl	14148 <__assert_fail@plt>
   3ab68:	bl	1421c <__assert_fail@plt+0xd4>
   3ab6c:	ldr	r3, [pc, #52]	; 3aba8 <flatcc_builder_embed_buffer@@Base+0x224>
   3ab70:	ldr	r2, [pc, #52]	; 3abac <flatcc_builder_embed_buffer@@Base+0x228>
   3ab74:	ldr	r1, [pc, #36]	; 3aba0 <flatcc_builder_embed_buffer@@Base+0x21c>
   3ab78:	ldr	r0, [pc, #36]	; 3aba4 <flatcc_builder_embed_buffer@@Base+0x220>
   3ab7c:	bl	14148 <__assert_fail@plt>
   3ab80:	add	r3, sl, #608	; 0x260
   3ab84:	ldr	r2, [pc, #36]	; 3abb0 <flatcc_builder_embed_buffer@@Base+0x22c>
   3ab88:	ldr	r1, [pc, #16]	; 3aba0 <flatcc_builder_embed_buffer@@Base+0x21c>
   3ab8c:	ldr	r0, [pc, #16]	; 3aba4 <flatcc_builder_embed_buffer@@Base+0x220>
   3ab90:	bl	14148 <__assert_fail@plt>
   3ab94:	andeq	sp, r5, r4, lsr #18
   3ab98:	andeq	sp, r5, r8, lsr #17
   3ab9c:	andeq	r0, r0, fp, lsl #5
   3aba0:	ldrdeq	sp, [r5], -ip
   3aba4:	andeq	sp, r4, r4, ror r2
   3aba8:	muleq	r5, ip, r8
   3abac:	andeq	r0, r0, r5, lsr #5
   3abb0:			; <UNDEFINED> instruction: 0x000002be

0003abb4 <flatcc_builder_create_buffer@@Base>:
   3abb4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3abb8:	sub	sp, sp, #100	; 0x64
   3abbc:	mov	ip, #0
   3abc0:	ldr	r5, [sp, #140]	; 0x8c
   3abc4:	cmp	r2, #0
   3abc8:	mov	r6, r0
   3abcc:	mov	r8, r1
   3abd0:	mov	sl, r3
   3abd4:	and	r7, r5, #1
   3abd8:	str	ip, [sp, #20]
   3abdc:	ldrh	r4, [sp, #136]	; 0x88
   3abe0:	bne	3abf0 <flatcc_builder_create_buffer@@Base+0x3c>
   3abe4:	ldrh	r2, [r0, #132]	; 0x84
   3abe8:	cmp	r2, ip
   3abec:	beq	3adfc <flatcc_builder_create_buffer@@Base+0x248>
   3abf0:	cmp	r4, #4
   3abf4:	movcc	r4, #4
   3abf8:	cmp	r2, r4
   3abfc:	movcs	r4, r2
   3ac00:	cmp	r7, #0
   3ac04:	bne	3ac68 <flatcc_builder_create_buffer@@Base+0xb4>
   3ac08:	ldr	r9, [r6, #140]	; 0x8c
   3ac0c:	sub	r2, r2, #1
   3ac10:	ands	r3, r2, r9
   3ac14:	beq	3ac68 <flatcc_builder_create_buffer@@Base+0xb4>
   3ac18:	add	r1, r9, r3
   3ac1c:	ldr	fp, [pc, #584]	; 3ae6c <flatcc_builder_create_buffer@@Base+0x2b8>
   3ac20:	mov	r2, #1
   3ac24:	cmp	r9, r1
   3ac28:	str	r3, [sp, #24]
   3ac2c:	str	r3, [sp, #36]	; 0x24
   3ac30:	str	fp, [sp, #32]
   3ac34:	str	r1, [r6, #140]	; 0x8c
   3ac38:	str	r2, [sp, #28]
   3ac3c:	bgt	3ae54 <flatcc_builder_create_buffer@@Base+0x2a0>
   3ac40:	ldr	r0, [r6, #36]	; 0x24
   3ac44:	add	r1, sp, #32
   3ac48:	str	r3, [sp]
   3ac4c:	mov	r3, r9
   3ac50:	ldr	ip, [r6, #44]	; 0x2c
   3ac54:	blx	ip
   3ac58:	cmp	r0, #0
   3ac5c:	bne	3ae58 <flatcc_builder_create_buffer@@Base+0x2a4>
   3ac60:	cmn	r9, #1
   3ac64:	beq	3ae14 <flatcc_builder_create_buffer@@Base+0x260>
   3ac68:	ldrh	r3, [r6, #128]	; 0x80
   3ac6c:	ldr	r0, [r6, #136]	; 0x88
   3ac70:	uxtb	lr, r7
   3ac74:	cmp	r3, r4
   3ac78:	strhcc	r4, [r6, #128]	; 0x80
   3ac7c:	cmp	r8, #0
   3ac80:	ldreq	r1, [sp, #20]
   3ac84:	ldrne	r1, [r8]
   3ac88:	ldrne	r3, [r8]
   3ac8c:	strne	r3, [sp, #20]
   3ac90:	cmp	r1, #0
   3ac94:	movne	r1, #4
   3ac98:	moveq	r1, #0
   3ac9c:	ands	r5, r5, #2
   3aca0:	bne	3adc4 <flatcc_builder_create_buffer@@Base+0x210>
   3aca4:	sub	r3, r4, #1
   3aca8:	sub	r4, r0, #4
   3acac:	cmp	lr, #0
   3acb0:	sub	r4, r4, r1
   3acb4:	and	r4, r4, r3
   3acb8:	moveq	r8, #3
   3acbc:	moveq	ip, #2
   3acc0:	moveq	r2, #1
   3acc4:	moveq	r3, #4
   3acc8:	bne	3add4 <flatcc_builder_create_buffer@@Base+0x220>
   3accc:	add	r5, r5, #1
   3acd0:	add	r9, sp, #96	; 0x60
   3acd4:	add	r5, r9, r5, lsl #3
   3acd8:	add	fp, sp, #12
   3acdc:	mov	r9, #4
   3ace0:	cmp	r1, #0
   3ace4:	str	r3, [sp, #24]
   3ace8:	str	fp, [r5, #-72]	; 0xffffffb8
   3acec:	str	r9, [r5, #-68]	; 0xffffffbc
   3acf0:	str	r2, [sp, #28]
   3acf4:	beq	3ad24 <flatcc_builder_create_buffer@@Base+0x170>
   3acf8:	add	r2, r2, #1
   3acfc:	add	r5, sp, #96	; 0x60
   3ad00:	add	r2, r5, r2, lsl #3
   3ad04:	add	r3, r3, r1
   3ad08:	add	r5, sp, #20
   3ad0c:	str	r3, [sp, #24]
   3ad10:	str	r1, [r2, #-68]	; 0xffffffbc
   3ad14:	str	r5, [r2, #-72]	; 0xffffffb8
   3ad18:	mov	r2, ip
   3ad1c:	str	ip, [sp, #28]
   3ad20:	mov	ip, r8
   3ad24:	cmp	r4, #0
   3ad28:	beq	3ad54 <flatcc_builder_create_buffer@@Base+0x1a0>
   3ad2c:	add	r2, r2, #1
   3ad30:	add	r1, sp, #96	; 0x60
   3ad34:	add	r1, r1, r2, lsl #3
   3ad38:	ldr	r5, [pc, #300]	; 3ae6c <flatcc_builder_create_buffer@@Base+0x2b8>
   3ad3c:	mov	r2, ip
   3ad40:	add	r3, r3, r4
   3ad44:	str	r3, [sp, #24]
   3ad48:	str	r4, [r1, #-68]	; 0xffffffbc
   3ad4c:	str	r5, [r1, #-72]	; 0xffffffb8
   3ad50:	str	ip, [sp, #28]
   3ad54:	sub	r4, r0, r3
   3ad58:	cmp	lr, #0
   3ad5c:	mov	r1, r4
   3ad60:	beq	3ae08 <flatcc_builder_create_buffer@@Base+0x254>
   3ad64:	cmp	r7, #0
   3ad68:	add	r1, r4, #4
   3ad6c:	beq	3ae08 <flatcc_builder_create_buffer@@Base+0x254>
   3ad70:	ldr	ip, [r6, #144]	; 0x90
   3ad74:	sub	ip, ip, r1
   3ad78:	sub	sl, sl, r1
   3ad7c:	cmp	r4, r0
   3ad80:	str	sl, [sp, #12]
   3ad84:	str	ip, [sp, #16]
   3ad88:	bge	3ae28 <flatcc_builder_create_buffer@@Base+0x274>
   3ad8c:	ldr	r0, [r6, #36]	; 0x24
   3ad90:	add	r1, sp, #32
   3ad94:	str	r3, [sp]
   3ad98:	mov	r3, r4
   3ad9c:	ldr	r5, [r6, #44]	; 0x2c
   3ada0:	blx	r5
   3ada4:	cmp	r0, #0
   3ada8:	bne	3ae2c <flatcc_builder_create_buffer@@Base+0x278>
   3adac:	cmp	r4, #0
   3adb0:	str	r4, [r6, #136]	; 0x88
   3adb4:	beq	3ae40 <flatcc_builder_create_buffer@@Base+0x28c>
   3adb8:	mov	r0, r4
   3adbc:	add	sp, sp, #100	; 0x64
   3adc0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3adc4:	sub	r3, r0, #8
   3adc8:	sub	r4, r4, #1
   3adcc:	sub	r3, r3, r1
   3add0:	and	r4, r4, r3
   3add4:	add	r3, sp, #16
   3add8:	mov	r8, #4
   3addc:	mov	r5, #1
   3ade0:	str	r3, [sp, #32]
   3ade4:	str	r8, [sp, #36]	; 0x24
   3ade8:	mov	lr, r5
   3adec:	mov	ip, #3
   3adf0:	mov	r2, #2
   3adf4:	mov	r3, #8
   3adf8:	b	3accc <flatcc_builder_create_buffer@@Base+0x118>
   3adfc:	cmp	r4, #4
   3ae00:	movcc	r4, #4
   3ae04:	b	3ac68 <flatcc_builder_create_buffer@@Base+0xb4>
   3ae08:	ldr	ip, [r6, #140]	; 0x8c
   3ae0c:	sub	ip, ip, r1
   3ae10:	b	3ad78 <flatcc_builder_create_buffer@@Base+0x1c4>
   3ae14:	add	r3, fp, #608	; 0x260
   3ae18:	ldr	r2, [pc, #80]	; 3ae70 <flatcc_builder_create_buffer@@Base+0x2bc>
   3ae1c:	ldr	r1, [pc, #80]	; 3ae74 <flatcc_builder_create_buffer@@Base+0x2c0>
   3ae20:	ldr	r0, [pc, #80]	; 3ae78 <flatcc_builder_create_buffer@@Base+0x2c4>
   3ae24:	bl	14148 <__assert_fail@plt>
   3ae28:	bl	14244 <__assert_fail@plt+0xfc>
   3ae2c:	ldr	r3, [pc, #72]	; 3ae7c <flatcc_builder_create_buffer@@Base+0x2c8>
   3ae30:	ldr	r2, [pc, #72]	; 3ae80 <flatcc_builder_create_buffer@@Base+0x2cc>
   3ae34:	ldr	r1, [pc, #56]	; 3ae74 <flatcc_builder_create_buffer@@Base+0x2c0>
   3ae38:	ldr	r0, [pc, #56]	; 3ae78 <flatcc_builder_create_buffer@@Base+0x2c4>
   3ae3c:	bl	14148 <__assert_fail@plt>
   3ae40:	ldr	r3, [pc, #60]	; 3ae84 <flatcc_builder_create_buffer@@Base+0x2d0>
   3ae44:	mov	r2, #772	; 0x304
   3ae48:	ldr	r1, [pc, #36]	; 3ae74 <flatcc_builder_create_buffer@@Base+0x2c0>
   3ae4c:	ldr	r0, [pc, #36]	; 3ae78 <flatcc_builder_create_buffer@@Base+0x2c4>
   3ae50:	bl	14148 <__assert_fail@plt>
   3ae54:	bl	1421c <__assert_fail@plt+0xd4>
   3ae58:	ldr	r3, [pc, #40]	; 3ae88 <flatcc_builder_create_buffer@@Base+0x2d4>
   3ae5c:	ldr	r2, [pc, #40]	; 3ae8c <flatcc_builder_create_buffer@@Base+0x2d8>
   3ae60:	ldr	r1, [pc, #12]	; 3ae74 <flatcc_builder_create_buffer@@Base+0x2c0>
   3ae64:	ldr	r0, [pc, #12]	; 3ae78 <flatcc_builder_create_buffer@@Base+0x2c4>
   3ae68:	bl	14148 <__assert_fail@plt>
   3ae6c:	andeq	sp, r5, r4, lsr #18
   3ae70:			; <UNDEFINED> instruction: 0x000002be
   3ae74:	ldrdeq	sp, [r5], -ip
   3ae78:	andeq	sp, r4, r4, ror r2
   3ae7c:	andeq	sp, r5, r8, lsr #17
   3ae80:	andeq	r0, r0, fp, lsl #5
   3ae84:	muleq	r5, r4, fp
   3ae88:	muleq	r5, ip, r8
   3ae8c:	andeq	r0, r0, r5, lsr #5

0003ae90 <flatcc_builder_create_struct@@Base>:
   3ae90:	cmp	r3, #0
   3ae94:	push	{r4, r5, r6, lr}
   3ae98:	sub	sp, sp, #80	; 0x50
   3ae9c:	beq	3af88 <flatcc_builder_create_struct@@Base+0xf8>
   3aea0:	mov	ip, r2
   3aea4:	ldrh	r2, [r0, #128]	; 0x80
   3aea8:	mov	r5, r0
   3aeac:	cmp	r2, r3
   3aeb0:	strhcc	r3, [r0, #128]	; 0x80
   3aeb4:	ldr	r0, [r0, #136]	; 0x88
   3aeb8:	mov	r2, #0
   3aebc:	sub	r3, r3, #1
   3aec0:	sub	r4, r0, ip
   3aec4:	cmp	ip, #0
   3aec8:	and	r3, r3, r4
   3aecc:	str	r2, [sp, #8]
   3aed0:	str	r2, [sp, #12]
   3aed4:	bne	3af48 <flatcc_builder_create_struct@@Base+0xb8>
   3aed8:	cmp	r3, #0
   3aedc:	movne	r2, #1
   3aee0:	movne	r1, ip
   3aee4:	beq	3af70 <flatcc_builder_create_struct@@Base+0xe0>
   3aee8:	add	r1, r1, #1
   3aeec:	add	r4, sp, #80	; 0x50
   3aef0:	add	ip, ip, r3
   3aef4:	add	r1, r4, r1, lsl #3
   3aef8:	ldr	lr, [pc, #156]	; 3af9c <flatcc_builder_create_struct@@Base+0x10c>
   3aefc:	sub	r4, r0, ip
   3af00:	str	r3, [r1, #-68]	; 0xffffffbc
   3af04:	str	ip, [sp, #8]
   3af08:	str	r2, [sp, #12]
   3af0c:	str	lr, [r1, #-72]	; 0xffffffb8
   3af10:	cmp	r0, r4
   3af14:	ble	3af70 <flatcc_builder_create_struct@@Base+0xe0>
   3af18:	ldr	r0, [r5, #36]	; 0x24
   3af1c:	mov	r3, r4
   3af20:	str	ip, [sp]
   3af24:	add	r1, sp, #16
   3af28:	ldr	r6, [r5, #44]	; 0x2c
   3af2c:	blx	r6
   3af30:	cmp	r0, #0
   3af34:	bne	3af74 <flatcc_builder_create_struct@@Base+0xe4>
   3af38:	mov	r0, r4
   3af3c:	str	r4, [r5, #136]	; 0x88
   3af40:	add	sp, sp, #80	; 0x50
   3af44:	pop	{r4, r5, r6, pc}
   3af48:	cmp	r3, r2
   3af4c:	mov	r2, #1
   3af50:	str	r1, [sp, #16]
   3af54:	str	r2, [sp, #12]
   3af58:	movne	r1, r2
   3af5c:	str	ip, [sp, #8]
   3af60:	str	ip, [sp, #20]
   3af64:	movne	r2, #2
   3af68:	beq	3af10 <flatcc_builder_create_struct@@Base+0x80>
   3af6c:	b	3aee8 <flatcc_builder_create_struct@@Base+0x58>
   3af70:	bl	14244 <__assert_fail@plt+0xfc>
   3af74:	ldr	r3, [pc, #36]	; 3afa0 <flatcc_builder_create_struct@@Base+0x110>
   3af78:	ldr	r2, [pc, #36]	; 3afa4 <flatcc_builder_create_struct@@Base+0x114>
   3af7c:	ldr	r1, [pc, #36]	; 3afa8 <flatcc_builder_create_struct@@Base+0x118>
   3af80:	ldr	r0, [pc, #36]	; 3afac <flatcc_builder_create_struct@@Base+0x11c>
   3af84:	bl	14148 <__assert_fail@plt>
   3af88:	ldr	r3, [pc, #32]	; 3afb0 <flatcc_builder_create_struct@@Base+0x120>
   3af8c:	ldr	r2, [pc, #32]	; 3afb4 <flatcc_builder_create_struct@@Base+0x124>
   3af90:	ldr	r1, [pc, #16]	; 3afa8 <flatcc_builder_create_struct@@Base+0x118>
   3af94:	ldr	r0, [pc, #28]	; 3afb8 <flatcc_builder_create_struct@@Base+0x128>
   3af98:	bl	14148 <__assert_fail@plt>
   3af9c:	andeq	sp, r5, r4, lsr #18
   3afa0:	andeq	sp, r5, r8, lsr #17
   3afa4:	andeq	r0, r0, fp, lsl #5
   3afa8:	ldrdeq	sp, [r5], -ip
   3afac:	andeq	sp, r4, r4, ror r2
   3afb0:			; <UNDEFINED> instruction: 0x0005dbb4
   3afb4:	andeq	r0, r0, pc, lsl #6
   3afb8:	andeq	lr, r5, r4, ror #1

0003afbc <flatcc_builder_start_buffer@@Base>:
   3afbc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   3afc0:	mov	r4, r0
   3afc4:	ldr	r0, [r0, #156]	; 0x9c
   3afc8:	ldr	ip, [r4, #160]	; 0xa0
   3afcc:	mov	r5, r1
   3afd0:	add	r1, r0, #1
   3afd4:	cmp	r1, ip
   3afd8:	sub	sp, sp, #8
   3afdc:	mov	r7, r2
   3afe0:	mov	r6, r3
   3afe4:	str	r1, [r4, #156]	; 0x9c
   3afe8:	ldrh	r8, [r4, #128]	; 0x80
   3afec:	ble	3b05c <flatcc_builder_start_buffer@@Base+0xa0>
   3aff0:	ldr	r3, [r4, #176]	; 0xb0
   3aff4:	cmp	r3, #0
   3aff8:	cmpgt	r1, r3
   3affc:	movgt	r3, #1
   3b000:	movle	r3, #0
   3b004:	bgt	3b138 <flatcc_builder_start_buffer@@Base+0x17c>
   3b008:	add	r0, r0, r0, lsl #3
   3b00c:	ldr	r1, [r4, #88]	; 0x58
   3b010:	lsl	r9, r0, #2
   3b014:	add	r2, r9, #36	; 0x24
   3b018:	cmp	r2, r1
   3b01c:	bhi	3b114 <flatcc_builder_start_buffer@@Base+0x158>
   3b020:	ldr	r3, [r4, #84]	; 0x54
   3b024:	add	r3, r3, r9
   3b028:	cmp	r3, #0
   3b02c:	str	r3, [r4, #32]
   3b030:	beq	3b138 <flatcc_builder_start_buffer@@Base+0x17c>
   3b034:	ldr	r2, [r4, #88]	; 0x58
   3b038:	ldr	r0, [pc, #256]	; 3b140 <flatcc_builder_start_buffer@@Base+0x184>
   3b03c:	ldr	r1, [r4, #176]	; 0xb0
   3b040:	umull	r0, r2, r0, r2
   3b044:	lsr	r2, r2, #3
   3b048:	cmp	r1, #0
   3b04c:	cmpgt	r2, r1
   3b050:	str	r2, [r4, #160]	; 0xa0
   3b054:	strgt	r1, [r4, #160]	; 0xa0
   3b058:	b	3b068 <flatcc_builder_start_buffer@@Base+0xac>
   3b05c:	ldr	r3, [r4, #32]
   3b060:	add	r3, r3, #36	; 0x24
   3b064:	str	r3, [r4, #32]
   3b068:	ldr	r0, [r4, #20]
   3b06c:	ldr	r1, [r4, #28]
   3b070:	ldrh	lr, [r4, #130]	; 0x82
   3b074:	ldrh	ip, [r4, #132]	; 0x84
   3b078:	add	r2, r0, r1
   3b07c:	add	r2, r2, #7
   3b080:	str	r0, [r3, #8]
   3b084:	strh	lr, [r3, #12]
   3b088:	bic	r2, r2, #7
   3b08c:	strh	r8, [r4, #130]	; 0x82
   3b090:	mvn	lr, #3
   3b094:	str	r1, [r3]
   3b098:	mov	r0, #0
   3b09c:	mov	r1, #1
   3b0a0:	str	lr, [r3, #4]
   3b0a4:	str	r2, [r4, #28]
   3b0a8:	str	r0, [r4, #20]
   3b0ac:	strh	r1, [r4, #128]	; 0x80
   3b0b0:	strh	ip, [r3, #34]	; 0x22
   3b0b4:	ldrh	r2, [r4, #164]	; 0xa4
   3b0b8:	strh	r7, [r4, #132]	; 0x84
   3b0bc:	ldr	ip, [pc, #128]	; 3b144 <flatcc_builder_start_buffer@@Base+0x188>
   3b0c0:	strh	r2, [r3, #32]
   3b0c4:	ldr	r2, [r4, #144]	; 0x90
   3b0c8:	strh	r6, [r4, #164]	; 0xa4
   3b0cc:	str	r2, [r3, #20]
   3b0d0:	ldr	r2, [r4, #152]	; 0x98
   3b0d4:	cmp	r5, r0
   3b0d8:	str	r2, [r3, #28]
   3b0dc:	ldr	r2, [r4, #148]	; 0x94
   3b0e0:	ldr	lr, [r4, #136]	; 0x88
   3b0e4:	moveq	r5, ip
   3b0e8:	ldr	ip, [r4, #168]	; 0xa8
   3b0ec:	add	r6, r2, r1
   3b0f0:	str	r2, [r4, #152]	; 0x98
   3b0f4:	str	r6, [r4, #148]	; 0x94
   3b0f8:	str	lr, [r4, #144]	; 0x90
   3b0fc:	str	ip, [r3, #16]
   3b100:	ldr	r2, [r5]
   3b104:	str	r2, [r4, #168]	; 0xa8
   3b108:	strh	r1, [r3, #14]
   3b10c:	add	sp, sp, #8
   3b110:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   3b114:	mov	r1, #4
   3b118:	ldr	r0, [r4, #40]	; 0x28
   3b11c:	str	r1, [sp]
   3b120:	add	r1, r4, #84	; 0x54
   3b124:	ldr	sl, [r4, #48]	; 0x30
   3b128:	blx	sl
   3b12c:	cmp	r0, #0
   3b130:	beq	3b020 <flatcc_builder_start_buffer@@Base+0x64>
   3b134:	bl	141f8 <__assert_fail@plt+0xb0>
   3b138:	mvn	r0, #0
   3b13c:	b	3b10c <flatcc_builder_start_buffer@@Base+0x150>
   3b140:	stmiacc	r3!, {r0, r3, r4, r5, r9, sl, fp, pc}^
   3b144:	andeq	sp, r5, r4, lsr #18

0003b148 <flatcc_builder_end_buffer@@Base>:
   3b148:	ldr	r3, [r0, #32]
   3b14c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3b150:	sub	sp, sp, #100	; 0x64
   3b154:	ldrh	r5, [r0, #164]	; 0xa4
   3b158:	ldrh	r3, [r3, #14]
   3b15c:	ldr	r2, [r0, #152]	; 0x98
   3b160:	and	r5, r5, #2
   3b164:	cmp	r2, #0
   3b168:	orrne	r5, r5, #1
   3b16c:	cmp	r3, #1
   3b170:	bne	3b45c <flatcc_builder_end_buffer@@Base+0x314>
   3b174:	ldrh	r3, [r0, #132]	; 0x84
   3b178:	ldrh	r2, [r0, #128]	; 0x80
   3b17c:	mov	r9, r1
   3b180:	mov	r1, #0
   3b184:	cmp	r3, r2
   3b188:	movhi	r2, r3
   3b18c:	strhhi	r3, [r0, #128]	; 0x80
   3b190:	cmp	r3, #0
   3b194:	mov	r4, r0
   3b198:	str	r1, [sp, #20]
   3b19c:	and	r7, r5, #1
   3b1a0:	beq	3b408 <flatcc_builder_end_buffer@@Base+0x2c0>
   3b1a4:	cmp	r3, #4
   3b1a8:	movcc	r6, #4
   3b1ac:	movcs	r6, r3
   3b1b0:	cmp	r6, r2
   3b1b4:	movcc	r6, r2
   3b1b8:	cmp	r7, r1
   3b1bc:	bne	3b224 <flatcc_builder_end_buffer@@Base+0xdc>
   3b1c0:	ldr	r8, [r0, #140]	; 0x8c
   3b1c4:	sub	r3, r3, #1
   3b1c8:	ands	r3, r3, r8
   3b1cc:	beq	3b224 <flatcc_builder_end_buffer@@Base+0xdc>
   3b1d0:	add	r1, r8, r3
   3b1d4:	ldr	sl, [pc, #748]	; 3b4c8 <flatcc_builder_end_buffer@@Base+0x380>
   3b1d8:	mov	r2, #1
   3b1dc:	cmp	r8, r1
   3b1e0:	str	r3, [sp, #24]
   3b1e4:	str	r3, [sp, #36]	; 0x24
   3b1e8:	str	sl, [sp, #32]
   3b1ec:	str	r1, [r0, #140]	; 0x8c
   3b1f0:	str	r2, [sp, #28]
   3b1f4:	bgt	3b4b0 <flatcc_builder_end_buffer@@Base+0x368>
   3b1f8:	ldr	r0, [r0, #36]	; 0x24
   3b1fc:	add	r1, sp, #32
   3b200:	str	r3, [sp]
   3b204:	mov	r3, r8
   3b208:	ldr	fp, [r4, #44]	; 0x2c
   3b20c:	blx	fp
   3b210:	cmp	r0, #0
   3b214:	bne	3b4b4 <flatcc_builder_end_buffer@@Base+0x36c>
   3b218:	cmn	r8, #1
   3b21c:	beq	3b49c <flatcc_builder_end_buffer@@Base+0x354>
   3b220:	ldrh	r2, [r4, #128]	; 0x80
   3b224:	ldr	r3, [r4, #168]	; 0xa8
   3b228:	cmp	r2, r6
   3b22c:	strhcc	r6, [r4, #128]	; 0x80
   3b230:	cmp	r3, #0
   3b234:	movne	r1, #4
   3b238:	moveq	r1, #0
   3b23c:	ands	r5, r5, #2
   3b240:	uxtb	ip, r7
   3b244:	str	r3, [sp, #20]
   3b248:	ldr	r0, [r4, #136]	; 0x88
   3b24c:	bne	3b418 <flatcc_builder_end_buffer@@Base+0x2d0>
   3b250:	sub	r3, r6, #1
   3b254:	sub	r6, r0, #4
   3b258:	cmp	ip, #0
   3b25c:	sub	r6, r6, r1
   3b260:	and	r6, r6, r3
   3b264:	moveq	r8, #3
   3b268:	moveq	lr, #2
   3b26c:	moveq	r2, #1
   3b270:	moveq	r3, #4
   3b274:	bne	3b428 <flatcc_builder_end_buffer@@Base+0x2e0>
   3b278:	add	r5, r5, #1
   3b27c:	add	sl, sp, #96	; 0x60
   3b280:	add	r5, sl, r5, lsl #3
   3b284:	add	fp, sp, #12
   3b288:	mov	sl, #4
   3b28c:	cmp	r1, #0
   3b290:	str	r3, [sp, #24]
   3b294:	str	fp, [r5, #-72]	; 0xffffffb8
   3b298:	str	sl, [r5, #-68]	; 0xffffffbc
   3b29c:	str	r2, [sp, #28]
   3b2a0:	beq	3b2d0 <flatcc_builder_end_buffer@@Base+0x188>
   3b2a4:	add	r2, r2, #1
   3b2a8:	add	r5, sp, #96	; 0x60
   3b2ac:	add	r2, r5, r2, lsl #3
   3b2b0:	add	r3, r3, r1
   3b2b4:	add	r5, sp, #20
   3b2b8:	str	r3, [sp, #24]
   3b2bc:	str	r1, [r2, #-68]	; 0xffffffbc
   3b2c0:	str	r5, [r2, #-72]	; 0xffffffb8
   3b2c4:	mov	r2, lr
   3b2c8:	str	lr, [sp, #28]
   3b2cc:	mov	lr, r8
   3b2d0:	cmp	r6, #0
   3b2d4:	beq	3b300 <flatcc_builder_end_buffer@@Base+0x1b8>
   3b2d8:	add	r2, r2, #1
   3b2dc:	add	r1, sp, #96	; 0x60
   3b2e0:	add	r1, r1, r2, lsl #3
   3b2e4:	ldr	r5, [pc, #476]	; 3b4c8 <flatcc_builder_end_buffer@@Base+0x380>
   3b2e8:	mov	r2, lr
   3b2ec:	add	r3, r3, r6
   3b2f0:	str	r3, [sp, #24]
   3b2f4:	str	r6, [r1, #-68]	; 0xffffffbc
   3b2f8:	str	r5, [r1, #-72]	; 0xffffffb8
   3b2fc:	str	lr, [sp, #28]
   3b300:	sub	r5, r0, r3
   3b304:	cmp	ip, #0
   3b308:	mov	r1, r5
   3b30c:	beq	3b450 <flatcc_builder_end_buffer@@Base+0x308>
   3b310:	cmp	r7, #0
   3b314:	add	r1, r5, #4
   3b318:	beq	3b450 <flatcc_builder_end_buffer@@Base+0x308>
   3b31c:	ldr	ip, [r4, #144]	; 0x90
   3b320:	sub	ip, ip, r1
   3b324:	sub	r9, r9, r1
   3b328:	cmp	r5, r0
   3b32c:	str	r9, [sp, #12]
   3b330:	str	ip, [sp, #16]
   3b334:	bge	3b470 <flatcc_builder_end_buffer@@Base+0x328>
   3b338:	ldr	r0, [r4, #36]	; 0x24
   3b33c:	add	r1, sp, #32
   3b340:	str	r3, [sp]
   3b344:	mov	r3, r5
   3b348:	ldr	r6, [r4, #44]	; 0x2c
   3b34c:	blx	r6
   3b350:	subs	r1, r0, #0
   3b354:	bne	3b474 <flatcc_builder_end_buffer@@Base+0x32c>
   3b358:	cmp	r5, #0
   3b35c:	str	r5, [r4, #136]	; 0x88
   3b360:	beq	3b488 <flatcc_builder_end_buffer@@Base+0x340>
   3b364:	ldr	r3, [r4, #32]
   3b368:	ldr	r2, [r4, #20]
   3b36c:	ldr	r0, [r4, #16]
   3b370:	ldr	ip, [r3, #20]
   3b374:	str	ip, [r4, #144]	; 0x90
   3b378:	ldr	ip, [r3, #28]
   3b37c:	str	ip, [r4, #152]	; 0x98
   3b380:	ldr	ip, [r3, #16]
   3b384:	str	ip, [r4, #168]	; 0xa8
   3b388:	ldrh	r3, [r3, #32]
   3b38c:	strh	r3, [r4, #164]	; 0xa4
   3b390:	bl	140ac <memset@plt>
   3b394:	ldr	r3, [r4, #32]
   3b398:	ldr	r2, [r4, #64]	; 0x40
   3b39c:	ldrh	lr, [r4, #130]	; 0x82
   3b3a0:	ldr	ip, [r3]
   3b3a4:	ldr	r1, [r3, #4]
   3b3a8:	ldrh	r0, [r4, #128]	; 0x80
   3b3ac:	sub	r2, r2, ip
   3b3b0:	cmp	r2, r1
   3b3b4:	movcs	r2, r1
   3b3b8:	cmp	r0, lr
   3b3bc:	ldr	r0, [r4, #60]	; 0x3c
   3b3c0:	ldr	r6, [r3, #8]
   3b3c4:	str	r2, [r4, #24]
   3b3c8:	add	r2, r0, ip
   3b3cc:	str	r2, [r4, #16]
   3b3d0:	str	r6, [r4, #20]
   3b3d4:	ldr	r2, [r4, #156]	; 0x9c
   3b3d8:	str	ip, [r4, #28]
   3b3dc:	str	r1, [r3, #4]
   3b3e0:	strhcc	lr, [r4, #128]	; 0x80
   3b3e4:	ldrh	r1, [r3, #12]
   3b3e8:	sub	r2, r2, #1
   3b3ec:	sub	r3, r3, #36	; 0x24
   3b3f0:	mov	r0, r5
   3b3f4:	str	r2, [r4, #156]	; 0x9c
   3b3f8:	strh	r1, [r4, #130]	; 0x82
   3b3fc:	str	r3, [r4, #32]
   3b400:	add	sp, sp, #100	; 0x64
   3b404:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3b408:	cmp	r2, #4
   3b40c:	movcs	r6, r2
   3b410:	movcc	r6, #4
   3b414:	b	3b224 <flatcc_builder_end_buffer@@Base+0xdc>
   3b418:	sub	r3, r0, #8
   3b41c:	sub	r6, r6, #1
   3b420:	sub	r3, r3, r1
   3b424:	and	r6, r6, r3
   3b428:	add	r3, sp, #16
   3b42c:	mov	r8, #4
   3b430:	mov	r5, #1
   3b434:	str	r3, [sp, #32]
   3b438:	str	r8, [sp, #36]	; 0x24
   3b43c:	mov	ip, r5
   3b440:	mov	lr, #3
   3b444:	mov	r2, #2
   3b448:	mov	r3, #8
   3b44c:	b	3b278 <flatcc_builder_end_buffer@@Base+0x130>
   3b450:	ldr	ip, [r4, #140]	; 0x8c
   3b454:	sub	ip, ip, r1
   3b458:	b	3b324 <flatcc_builder_end_buffer@@Base+0x1dc>
   3b45c:	ldr	r3, [pc, #104]	; 3b4cc <flatcc_builder_end_buffer@@Base+0x384>
   3b460:	ldr	r2, [pc, #104]	; 3b4d0 <flatcc_builder_end_buffer@@Base+0x388>
   3b464:	ldr	r1, [pc, #104]	; 3b4d4 <flatcc_builder_end_buffer@@Base+0x38c>
   3b468:	ldr	r0, [pc, #104]	; 3b4d8 <flatcc_builder_end_buffer@@Base+0x390>
   3b46c:	bl	14148 <__assert_fail@plt>
   3b470:	bl	14244 <__assert_fail@plt+0xfc>
   3b474:	ldr	r3, [pc, #96]	; 3b4dc <flatcc_builder_end_buffer@@Base+0x394>
   3b478:	ldr	r2, [pc, #96]	; 3b4e0 <flatcc_builder_end_buffer@@Base+0x398>
   3b47c:	ldr	r1, [pc, #80]	; 3b4d4 <flatcc_builder_end_buffer@@Base+0x38c>
   3b480:	ldr	r0, [pc, #92]	; 3b4e4 <flatcc_builder_end_buffer@@Base+0x39c>
   3b484:	bl	14148 <__assert_fail@plt>
   3b488:	ldr	r3, [pc, #88]	; 3b4e8 <flatcc_builder_end_buffer@@Base+0x3a0>
   3b48c:	mov	r2, #772	; 0x304
   3b490:	ldr	r1, [pc, #60]	; 3b4d4 <flatcc_builder_end_buffer@@Base+0x38c>
   3b494:	ldr	r0, [pc, #72]	; 3b4e4 <flatcc_builder_end_buffer@@Base+0x39c>
   3b498:	bl	14148 <__assert_fail@plt>
   3b49c:	add	r3, sl, #608	; 0x260
   3b4a0:	ldr	r2, [pc, #68]	; 3b4ec <flatcc_builder_end_buffer@@Base+0x3a4>
   3b4a4:	ldr	r1, [pc, #40]	; 3b4d4 <flatcc_builder_end_buffer@@Base+0x38c>
   3b4a8:	ldr	r0, [pc, #52]	; 3b4e4 <flatcc_builder_end_buffer@@Base+0x39c>
   3b4ac:	bl	14148 <__assert_fail@plt>
   3b4b0:	bl	1421c <__assert_fail@plt+0xd4>
   3b4b4:	ldr	r3, [pc, #52]	; 3b4f0 <flatcc_builder_end_buffer@@Base+0x3a8>
   3b4b8:	ldr	r2, [pc, #52]	; 3b4f4 <flatcc_builder_end_buffer@@Base+0x3ac>
   3b4bc:	ldr	r1, [pc, #16]	; 3b4d4 <flatcc_builder_end_buffer@@Base+0x38c>
   3b4c0:	ldr	r0, [pc, #28]	; 3b4e4 <flatcc_builder_end_buffer@@Base+0x39c>
   3b4c4:	bl	14148 <__assert_fail@plt>
   3b4c8:	andeq	sp, r5, r4, lsr #18
   3b4cc:	ldrdeq	sp, [r5], -r4
   3b4d0:	andeq	r0, r0, r6, asr #6
   3b4d4:	ldrdeq	sp, [r5], -ip
   3b4d8:	strdeq	lr, [r5], -r0
   3b4dc:	andeq	sp, r5, r8, lsr #17
   3b4e0:	andeq	r0, r0, fp, lsl #5
   3b4e4:	andeq	sp, r4, r4, ror r2
   3b4e8:	muleq	r5, r4, fp
   3b4ec:			; <UNDEFINED> instruction: 0x000002be
   3b4f0:	muleq	r5, ip, r8
   3b4f4:	andeq	r0, r0, r5, lsr #5

0003b4f8 <flatcc_builder_start_struct@@Base>:
   3b4f8:	push	{r4, r5, r6, r7, r8, lr}
   3b4fc:	mov	r4, r0
   3b500:	ldr	r0, [r0, #156]	; 0x9c
   3b504:	ldr	r3, [r4, #160]	; 0xa0
   3b508:	mov	r6, r1
   3b50c:	add	r1, r0, #1
   3b510:	cmp	r1, r3
   3b514:	sub	sp, sp, #8
   3b518:	mov	r5, r2
   3b51c:	str	r1, [r4, #156]	; 0x9c
   3b520:	ble	3b590 <flatcc_builder_start_struct@@Base+0x98>
   3b524:	ldr	r3, [r4, #176]	; 0xb0
   3b528:	cmp	r3, #0
   3b52c:	cmpgt	r1, r3
   3b530:	movgt	r3, #1
   3b534:	movle	r3, #0
   3b538:	bgt	3b6a0 <flatcc_builder_start_struct@@Base+0x1a8>
   3b53c:	add	r0, r0, r0, lsl #3
   3b540:	ldr	r1, [r4, #88]	; 0x58
   3b544:	lsl	r7, r0, #2
   3b548:	add	r2, r7, #36	; 0x24
   3b54c:	cmp	r2, r1
   3b550:	bhi	3b67c <flatcc_builder_start_struct@@Base+0x184>
   3b554:	ldr	r3, [r4, #84]	; 0x54
   3b558:	add	r3, r3, r7
   3b55c:	cmp	r3, #0
   3b560:	str	r3, [r4, #32]
   3b564:	beq	3b6a0 <flatcc_builder_start_struct@@Base+0x1a8>
   3b568:	ldr	r2, [r4, #88]	; 0x58
   3b56c:	ldr	r0, [pc, #308]	; 3b6a8 <flatcc_builder_start_struct@@Base+0x1b0>
   3b570:	ldr	r1, [r4, #176]	; 0xb0
   3b574:	umull	r0, r2, r0, r2
   3b578:	lsr	r2, r2, #3
   3b57c:	cmp	r1, #0
   3b580:	cmpgt	r2, r1
   3b584:	str	r2, [r4, #160]	; 0xa0
   3b588:	strgt	r1, [r4, #160]	; 0xa0
   3b58c:	b	3b59c <flatcc_builder_start_struct@@Base+0xa4>
   3b590:	ldr	r3, [r4, #32]
   3b594:	add	r3, r3, #36	; 0x24
   3b598:	str	r3, [r4, #32]
   3b59c:	ldr	lr, [r4, #20]
   3b5a0:	ldr	ip, [r4, #28]
   3b5a4:	ldr	r1, [r4, #64]	; 0x40
   3b5a8:	add	r2, lr, ip
   3b5ac:	add	r2, r2, #7
   3b5b0:	ldrh	r7, [r4, #130]	; 0x82
   3b5b4:	bic	r2, r2, #7
   3b5b8:	sub	r1, r1, r2
   3b5bc:	ldr	r0, [r4, #60]	; 0x3c
   3b5c0:	cmn	r1, #4
   3b5c4:	str	lr, [r3, #8]
   3b5c8:	mvn	lr, #3
   3b5cc:	strh	r7, [r3, #12]
   3b5d0:	movhi	r1, lr
   3b5d4:	strh	r5, [r4, #130]	; 0x82
   3b5d8:	str	ip, [r3]
   3b5dc:	mov	r5, #0
   3b5e0:	mov	ip, #2
   3b5e4:	str	lr, [r3, #4]
   3b5e8:	add	r0, r0, r2
   3b5ec:	str	r5, [r4, #20]
   3b5f0:	str	r2, [r4, #28]
   3b5f4:	mvn	r5, #3
   3b5f8:	strh	ip, [r3, #14]
   3b5fc:	strls	r1, [r4, #24]
   3b600:	strhi	lr, [r4, #24]
   3b604:	cmp	r6, r1
   3b608:	str	r0, [r4, #16]
   3b60c:	str	r5, [r3, #4]
   3b610:	str	r6, [r4, #20]
   3b614:	bcs	3b620 <flatcc_builder_start_struct@@Base+0x128>
   3b618:	add	sp, sp, #8
   3b61c:	pop	{r4, r5, r6, r7, r8, pc}
   3b620:	add	r6, r6, #1
   3b624:	mov	r3, #1
   3b628:	ldr	r0, [r4, #40]	; 0x28
   3b62c:	add	r2, r6, r2
   3b630:	str	r3, [sp]
   3b634:	add	r1, r4, #60	; 0x3c
   3b638:	ldr	r6, [r4, #48]	; 0x30
   3b63c:	blx	r6
   3b640:	cmp	r0, #0
   3b644:	bne	3b6a0 <flatcc_builder_start_struct@@Base+0x1a8>
   3b648:	ldr	r2, [r4, #28]
   3b64c:	ldr	r3, [r4, #64]	; 0x40
   3b650:	ldr	r0, [r4, #60]	; 0x3c
   3b654:	sub	r3, r3, r2
   3b658:	ldr	r1, [r4, #32]
   3b65c:	cmp	r3, r5
   3b660:	add	r0, r0, r2
   3b664:	movhi	r3, r5
   3b668:	str	r3, [r4, #24]
   3b66c:	str	r0, [r4, #16]
   3b670:	str	r5, [r1, #4]
   3b674:	add	sp, sp, #8
   3b678:	pop	{r4, r5, r6, r7, r8, pc}
   3b67c:	mov	r1, #4
   3b680:	ldr	r0, [r4, #40]	; 0x28
   3b684:	str	r1, [sp]
   3b688:	add	r1, r4, #84	; 0x54
   3b68c:	ldr	r8, [r4, #48]	; 0x30
   3b690:	blx	r8
   3b694:	cmp	r0, #0
   3b698:	beq	3b554 <flatcc_builder_start_struct@@Base+0x5c>
   3b69c:	bl	141f8 <__assert_fail@plt+0xb0>
   3b6a0:	mov	r0, #0
   3b6a4:	b	3b618 <flatcc_builder_start_struct@@Base+0x120>
   3b6a8:	stmiacc	r3!, {r0, r3, r4, r5, r9, sl, fp, pc}^

0003b6ac <flatcc_builder_struct_edit@@Base>:
   3b6ac:	ldr	r0, [r0, #16]
   3b6b0:	bx	lr

0003b6b4 <flatcc_builder_end_struct@@Base>:
   3b6b4:	ldr	r3, [r0, #32]
   3b6b8:	push	{r4, r5, r6, lr}
   3b6bc:	sub	sp, sp, #80	; 0x50
   3b6c0:	ldrh	r3, [r3, #14]
   3b6c4:	cmp	r3, #2
   3b6c8:	bne	3b854 <flatcc_builder_end_struct@@Base+0x1a0>
   3b6cc:	ldrh	r3, [r0, #130]	; 0x82
   3b6d0:	mov	r4, r0
   3b6d4:	ldr	r0, [r0, #16]
   3b6d8:	cmp	r3, #0
   3b6dc:	ldr	r1, [r4, #20]
   3b6e0:	beq	3b840 <flatcc_builder_end_struct@@Base+0x18c>
   3b6e4:	ldrh	r2, [r4, #128]	; 0x80
   3b6e8:	ldr	ip, [r4, #136]	; 0x88
   3b6ec:	cmp	r2, r3
   3b6f0:	strhcc	r3, [r4, #128]	; 0x80
   3b6f4:	mov	r2, #0
   3b6f8:	sub	r3, r3, #1
   3b6fc:	sub	r5, ip, r1
   3b700:	cmp	r1, #0
   3b704:	and	r3, r3, r5
   3b708:	str	r2, [sp, #8]
   3b70c:	str	r2, [sp, #12]
   3b710:	bne	3b800 <flatcc_builder_end_struct@@Base+0x14c>
   3b714:	cmp	r3, #0
   3b718:	movne	r2, #1
   3b71c:	movne	r0, r1
   3b720:	beq	3b828 <flatcc_builder_end_struct@@Base+0x174>
   3b724:	add	r0, r0, #1
   3b728:	add	r5, sp, #80	; 0x50
   3b72c:	add	r1, r1, r3
   3b730:	add	r0, r5, r0, lsl #3
   3b734:	ldr	lr, [pc, #300]	; 3b868 <flatcc_builder_end_struct@@Base+0x1b4>
   3b738:	sub	r5, ip, r1
   3b73c:	str	r3, [r0, #-68]	; 0xffffffbc
   3b740:	str	r1, [sp, #8]
   3b744:	str	r2, [sp, #12]
   3b748:	str	lr, [r0, #-72]	; 0xffffffb8
   3b74c:	cmp	ip, r5
   3b750:	ble	3b828 <flatcc_builder_end_struct@@Base+0x174>
   3b754:	ldr	r0, [r4, #36]	; 0x24
   3b758:	mov	r3, r5
   3b75c:	str	r1, [sp]
   3b760:	add	r1, sp, #16
   3b764:	ldr	r6, [r4, #44]	; 0x2c
   3b768:	blx	r6
   3b76c:	subs	r1, r0, #0
   3b770:	bne	3b82c <flatcc_builder_end_struct@@Base+0x178>
   3b774:	cmp	r5, #0
   3b778:	str	r5, [r4, #136]	; 0x88
   3b77c:	beq	3b7f4 <flatcc_builder_end_struct@@Base+0x140>
   3b780:	ldr	r2, [r4, #20]
   3b784:	ldr	r0, [r4, #16]
   3b788:	bl	140ac <memset@plt>
   3b78c:	ldr	r3, [r4, #32]
   3b790:	ldr	r2, [r4, #64]	; 0x40
   3b794:	ldrh	lr, [r4, #130]	; 0x82
   3b798:	ldr	ip, [r3]
   3b79c:	ldr	r1, [r3, #4]
   3b7a0:	ldrh	r0, [r4, #128]	; 0x80
   3b7a4:	sub	r2, r2, ip
   3b7a8:	cmp	r2, r1
   3b7ac:	movcs	r2, r1
   3b7b0:	cmp	r0, lr
   3b7b4:	ldr	r0, [r4, #60]	; 0x3c
   3b7b8:	ldr	r6, [r3, #8]
   3b7bc:	str	r2, [r4, #24]
   3b7c0:	add	r2, r0, ip
   3b7c4:	str	r2, [r4, #16]
   3b7c8:	str	r6, [r4, #20]
   3b7cc:	ldr	r2, [r4, #156]	; 0x9c
   3b7d0:	str	ip, [r4, #28]
   3b7d4:	str	r1, [r3, #4]
   3b7d8:	strhcc	lr, [r4, #128]	; 0x80
   3b7dc:	ldrh	r1, [r3, #12]
   3b7e0:	sub	r2, r2, #1
   3b7e4:	sub	r3, r3, #36	; 0x24
   3b7e8:	str	r2, [r4, #156]	; 0x9c
   3b7ec:	strh	r1, [r4, #130]	; 0x82
   3b7f0:	str	r3, [r4, #32]
   3b7f4:	mov	r0, r5
   3b7f8:	add	sp, sp, #80	; 0x50
   3b7fc:	pop	{r4, r5, r6, pc}
   3b800:	cmp	r3, r2
   3b804:	mov	r2, #1
   3b808:	str	r0, [sp, #16]
   3b80c:	str	r2, [sp, #12]
   3b810:	movne	r0, r2
   3b814:	str	r1, [sp, #8]
   3b818:	str	r1, [sp, #20]
   3b81c:	movne	r2, #2
   3b820:	beq	3b74c <flatcc_builder_end_struct@@Base+0x98>
   3b824:	b	3b724 <flatcc_builder_end_struct@@Base+0x70>
   3b828:	bl	14244 <__assert_fail@plt+0xfc>
   3b82c:	ldr	r3, [pc, #56]	; 3b86c <flatcc_builder_end_struct@@Base+0x1b8>
   3b830:	ldr	r2, [pc, #56]	; 3b870 <flatcc_builder_end_struct@@Base+0x1bc>
   3b834:	ldr	r1, [pc, #56]	; 3b874 <flatcc_builder_end_struct@@Base+0x1c0>
   3b838:	ldr	r0, [pc, #56]	; 3b878 <flatcc_builder_end_struct@@Base+0x1c4>
   3b83c:	bl	14148 <__assert_fail@plt>
   3b840:	ldr	r3, [pc, #52]	; 3b87c <flatcc_builder_end_struct@@Base+0x1c8>
   3b844:	ldr	r2, [pc, #52]	; 3b880 <flatcc_builder_end_struct@@Base+0x1cc>
   3b848:	ldr	r1, [pc, #36]	; 3b874 <flatcc_builder_end_struct@@Base+0x1c0>
   3b84c:	ldr	r0, [pc, #48]	; 3b884 <flatcc_builder_end_struct@@Base+0x1d0>
   3b850:	bl	14148 <__assert_fail@plt>
   3b854:	ldr	r3, [pc, #44]	; 3b888 <flatcc_builder_end_struct@@Base+0x1d4>
   3b858:	mov	r2, #872	; 0x368
   3b85c:	ldr	r1, [pc, #16]	; 3b874 <flatcc_builder_end_struct@@Base+0x1c0>
   3b860:	ldr	r0, [pc, #36]	; 3b88c <flatcc_builder_end_struct@@Base+0x1d8>
   3b864:	bl	14148 <__assert_fail@plt>
   3b868:	andeq	sp, r5, r4, lsr #18
   3b86c:	andeq	sp, r5, r8, lsr #17
   3b870:	andeq	r0, r0, fp, lsl #5
   3b874:	ldrdeq	sp, [r5], -ip
   3b878:	andeq	sp, r4, r4, ror r2
   3b87c:			; <UNDEFINED> instruction: 0x0005dbb4
   3b880:	andeq	r0, r0, pc, lsl #6
   3b884:	andeq	lr, r5, r4, ror #1
   3b888:	strdeq	sp, [r5], -r0
   3b88c:	andeq	lr, r5, ip, lsl r1

0003b890 <flatcc_builder_extend_vector@@Base>:
   3b890:	ldr	r3, [r0, #32]
   3b894:	push	{r4, r5, r6, r7, lr}
   3b898:	mov	r5, r0
   3b89c:	ldr	r0, [r3, #20]
   3b8a0:	ldr	r4, [r3, #24]
   3b8a4:	add	ip, r1, r0
   3b8a8:	cmp	r0, ip
   3b8ac:	movls	r0, #0
   3b8b0:	movhi	r0, #1
   3b8b4:	cmp	r4, ip
   3b8b8:	movcs	r4, r0
   3b8bc:	orrcc	r4, r0, #1
   3b8c0:	cmp	r4, #0
   3b8c4:	sub	sp, sp, #12
   3b8c8:	bne	3b964 <flatcc_builder_extend_vector@@Base+0xd4>
   3b8cc:	ldr	r2, [r3, #16]
   3b8d0:	str	ip, [r3, #20]
   3b8d4:	ldr	r6, [r5, #20]
   3b8d8:	ldr	r3, [r5, #24]
   3b8dc:	mla	r1, r2, r1, r6
   3b8e0:	cmp	r1, r3
   3b8e4:	str	r1, [r5, #20]
   3b8e8:	bcs	3b8fc <flatcc_builder_extend_vector@@Base+0x6c>
   3b8ec:	ldr	r0, [r5, #16]
   3b8f0:	add	r0, r0, r6
   3b8f4:	add	sp, sp, #12
   3b8f8:	pop	{r4, r5, r6, r7, pc}
   3b8fc:	ldr	r2, [r5, #28]
   3b900:	mov	r3, #1
   3b904:	add	r2, r2, #1
   3b908:	ldr	r0, [r5, #40]	; 0x28
   3b90c:	add	r2, r2, r1
   3b910:	str	r3, [sp]
   3b914:	add	r1, r5, #60	; 0x3c
   3b918:	ldr	r7, [r5, #48]	; 0x30
   3b91c:	blx	r7
   3b920:	cmp	r0, #0
   3b924:	bne	3b95c <flatcc_builder_extend_vector@@Base+0xcc>
   3b928:	ldr	r2, [r5, #28]
   3b92c:	ldr	r3, [r5, #64]	; 0x40
   3b930:	ldr	r0, [r5, #60]	; 0x3c
   3b934:	sub	r3, r3, r2
   3b938:	cmn	r3, #4
   3b93c:	mvnhi	r3, #3
   3b940:	str	r3, [r5, #24]
   3b944:	ldr	r3, [r5, #32]
   3b948:	add	r0, r0, r2
   3b94c:	mvn	r2, #3
   3b950:	str	r0, [r5, #16]
   3b954:	str	r2, [r3, #4]
   3b958:	b	3b8f0 <flatcc_builder_extend_vector@@Base+0x60>
   3b95c:	mov	r0, r4
   3b960:	b	3b8f4 <flatcc_builder_extend_vector@@Base+0x64>
   3b964:	bl	1426c <__assert_fail@plt+0x124>

0003b968 <flatcc_builder_vector_push@@Base>:
   3b968:	ldr	r3, [r0, #32]
   3b96c:	push	{r4, r5, r6, r7, r8, lr}
   3b970:	sub	sp, sp, #8
   3b974:	ldrh	r2, [r3, #14]
   3b978:	cmp	r2, #4
   3b97c:	bne	3ba64 <flatcc_builder_vector_push@@Base+0xfc>
   3b980:	mov	r5, r1
   3b984:	ldr	r2, [r3, #20]
   3b988:	ldr	r1, [r3, #24]
   3b98c:	cmp	r2, r1
   3b990:	bhi	3ba50 <flatcc_builder_vector_push@@Base+0xe8>
   3b994:	add	r2, r2, #1
   3b998:	str	r2, [r3, #20]
   3b99c:	ldr	r7, [r3, #16]
   3b9a0:	ldr	r6, [r0, #20]
   3b9a4:	ldr	r3, [r0, #24]
   3b9a8:	add	r1, r7, r6
   3b9ac:	cmp	r1, r3
   3b9b0:	mov	r4, r0
   3b9b4:	str	r1, [r0, #20]
   3b9b8:	bcs	3b9e8 <flatcc_builder_vector_push@@Base+0x80>
   3b9bc:	ldr	r3, [r0, #16]
   3b9c0:	adds	r3, r3, r6
   3b9c4:	beq	3b9dc <flatcc_builder_vector_push@@Base+0x74>
   3b9c8:	mov	r0, r3
   3b9cc:	mov	r2, r7
   3b9d0:	mov	r1, r5
   3b9d4:	bl	13fe0 <memcpy@plt>
   3b9d8:	mov	r3, r0
   3b9dc:	mov	r0, r3
   3b9e0:	add	sp, sp, #8
   3b9e4:	pop	{r4, r5, r6, r7, r8, pc}
   3b9e8:	ldr	r2, [r0, #28]
   3b9ec:	mov	r3, #1
   3b9f0:	add	r2, r2, #1
   3b9f4:	ldr	r0, [r0, #40]	; 0x28
   3b9f8:	add	r2, r2, r1
   3b9fc:	str	r3, [sp]
   3ba00:	add	r1, r4, #60	; 0x3c
   3ba04:	ldr	r8, [r4, #48]	; 0x30
   3ba08:	blx	r8
   3ba0c:	cmp	r0, #0
   3ba10:	bne	3ba48 <flatcc_builder_vector_push@@Base+0xe0>
   3ba14:	ldr	r1, [r4, #28]
   3ba18:	ldr	r2, [r4, #64]	; 0x40
   3ba1c:	ldr	r3, [r4, #60]	; 0x3c
   3ba20:	sub	r2, r2, r1
   3ba24:	cmn	r2, #4
   3ba28:	mvnhi	r2, #3
   3ba2c:	str	r2, [r4, #24]
   3ba30:	ldr	r2, [r4, #32]
   3ba34:	add	r3, r3, r1
   3ba38:	mvn	r1, #3
   3ba3c:	str	r3, [r4, #16]
   3ba40:	str	r1, [r2, #4]
   3ba44:	b	3b9c0 <flatcc_builder_vector_push@@Base+0x58>
   3ba48:	mov	r3, #0
   3ba4c:	b	3b9dc <flatcc_builder_vector_push@@Base+0x74>
   3ba50:	ldr	r3, [pc, #32]	; 3ba78 <flatcc_builder_vector_push@@Base+0x110>
   3ba54:	mov	r2, #908	; 0x38c
   3ba58:	ldr	r1, [pc, #28]	; 3ba7c <flatcc_builder_vector_push@@Base+0x114>
   3ba5c:	ldr	r0, [pc, #28]	; 3ba80 <flatcc_builder_vector_push@@Base+0x118>
   3ba60:	bl	14148 <__assert_fail@plt>
   3ba64:	ldr	r3, [pc, #12]	; 3ba78 <flatcc_builder_vector_push@@Base+0x110>
   3ba68:	ldr	r2, [pc, #20]	; 3ba84 <flatcc_builder_vector_push@@Base+0x11c>
   3ba6c:	ldr	r1, [pc, #8]	; 3ba7c <flatcc_builder_vector_push@@Base+0x114>
   3ba70:	ldr	r0, [pc, #16]	; 3ba88 <flatcc_builder_vector_push@@Base+0x120>
   3ba74:	bl	14148 <__assert_fail@plt>
   3ba78:	andeq	sp, r5, ip, lsl #24
   3ba7c:	ldrdeq	sp, [r5], -ip
   3ba80:	andeq	lr, r5, r4, ror r1
   3ba84:	andeq	r0, r0, fp, lsl #7
   3ba88:	andeq	lr, r5, r8, asr #2

0003ba8c <flatcc_builder_append_vector@@Base>:
   3ba8c:	push	{r4, r5, r6, r7, r8, r9, lr}
   3ba90:	mov	r5, r1
   3ba94:	ldr	r1, [r0, #32]
   3ba98:	sub	sp, sp, #12
   3ba9c:	ldrh	r3, [r1, #14]
   3baa0:	cmp	r3, #4
   3baa4:	bne	3bb94 <flatcc_builder_append_vector@@Base+0x108>
   3baa8:	ldr	r3, [r1, #20]
   3baac:	mov	r6, r0
   3bab0:	add	r0, r2, r3
   3bab4:	cmp	r3, r0
   3bab8:	ldr	r4, [r1, #24]
   3babc:	movls	r3, #0
   3bac0:	movhi	r3, #1
   3bac4:	cmp	r4, r0
   3bac8:	movcs	r4, r3
   3bacc:	orrcc	r4, r3, #1
   3bad0:	cmp	r4, #0
   3bad4:	bne	3bb90 <flatcc_builder_append_vector@@Base+0x104>
   3bad8:	ldr	r7, [r1, #16]
   3badc:	str	r0, [r1, #20]
   3bae0:	ldr	r8, [r6, #20]
   3bae4:	mul	r7, r7, r2
   3bae8:	ldr	r3, [r6, #24]
   3baec:	add	r1, r7, r8
   3baf0:	cmp	r1, r3
   3baf4:	str	r1, [r6, #20]
   3baf8:	bcs	3bb28 <flatcc_builder_append_vector@@Base+0x9c>
   3bafc:	ldr	r3, [r6, #16]
   3bb00:	adds	r3, r3, r8
   3bb04:	beq	3bb1c <flatcc_builder_append_vector@@Base+0x90>
   3bb08:	mov	r0, r3
   3bb0c:	mov	r2, r7
   3bb10:	mov	r1, r5
   3bb14:	bl	13fe0 <memcpy@plt>
   3bb18:	mov	r3, r0
   3bb1c:	mov	r0, r3
   3bb20:	add	sp, sp, #12
   3bb24:	pop	{r4, r5, r6, r7, r8, r9, pc}
   3bb28:	ldr	r2, [r6, #28]
   3bb2c:	mov	r3, #1
   3bb30:	add	r2, r2, #1
   3bb34:	ldr	r0, [r6, #40]	; 0x28
   3bb38:	add	r2, r2, r1
   3bb3c:	str	r3, [sp]
   3bb40:	add	r1, r6, #60	; 0x3c
   3bb44:	ldr	r9, [r6, #48]	; 0x30
   3bb48:	blx	r9
   3bb4c:	cmp	r0, #0
   3bb50:	bne	3bb88 <flatcc_builder_append_vector@@Base+0xfc>
   3bb54:	ldr	r1, [r6, #28]
   3bb58:	ldr	r2, [r6, #64]	; 0x40
   3bb5c:	ldr	r3, [r6, #60]	; 0x3c
   3bb60:	sub	r2, r2, r1
   3bb64:	cmn	r2, #4
   3bb68:	mvnhi	r2, #3
   3bb6c:	str	r2, [r6, #24]
   3bb70:	ldr	r2, [r6, #32]
   3bb74:	add	r3, r3, r1
   3bb78:	mvn	r1, #3
   3bb7c:	str	r3, [r6, #16]
   3bb80:	str	r1, [r2, #4]
   3bb84:	b	3bb00 <flatcc_builder_append_vector@@Base+0x74>
   3bb88:	mov	r3, r4
   3bb8c:	b	3bb1c <flatcc_builder_append_vector@@Base+0x90>
   3bb90:	bl	1426c <__assert_fail@plt+0x124>
   3bb94:	ldr	r3, [pc, #12]	; 3bba8 <flatcc_builder_append_vector@@Base+0x11c>
   3bb98:	ldr	r2, [pc, #12]	; 3bbac <flatcc_builder_append_vector@@Base+0x120>
   3bb9c:	ldr	r1, [pc, #12]	; 3bbb0 <flatcc_builder_append_vector@@Base+0x124>
   3bba0:	ldr	r0, [pc, #12]	; 3bbb4 <flatcc_builder_append_vector@@Base+0x128>
   3bba4:	bl	14148 <__assert_fail@plt>
   3bba8:	andeq	sp, r5, r8, lsr #24
   3bbac:	muleq	r0, r3, r3
   3bbb0:	ldrdeq	sp, [r5], -ip
   3bbb4:	andeq	lr, r5, r8, asr #2

0003bbb8 <flatcc_builder_extend_offset_vector@@Base>:
   3bbb8:	ldr	ip, [r0, #32]
   3bbbc:	push	{r4, r5, r6, r7, lr}
   3bbc0:	mov	r4, r0
   3bbc4:	ldr	r3, [ip, #20]
   3bbc8:	sub	sp, sp, #12
   3bbcc:	adds	r3, r1, r3
   3bbd0:	movcs	r2, #1
   3bbd4:	movcc	r2, #0
   3bbd8:	cmn	r3, #-1073741823	; 0xc0000001
   3bbdc:	movls	r0, #0
   3bbe0:	movhi	r0, #1
   3bbe4:	orrs	r5, r2, r0
   3bbe8:	bne	3bc80 <flatcc_builder_extend_offset_vector@@Base+0xc8>
   3bbec:	str	r3, [ip, #20]
   3bbf0:	ldr	r6, [r4, #20]
   3bbf4:	ldr	r3, [r4, #24]
   3bbf8:	add	r1, r6, r1, lsl #2
   3bbfc:	cmp	r1, r3
   3bc00:	str	r1, [r4, #20]
   3bc04:	bcs	3bc18 <flatcc_builder_extend_offset_vector@@Base+0x60>
   3bc08:	ldr	r0, [r4, #16]
   3bc0c:	add	r0, r0, r6
   3bc10:	add	sp, sp, #12
   3bc14:	pop	{r4, r5, r6, r7, pc}
   3bc18:	ldr	r2, [r4, #28]
   3bc1c:	mov	r3, #1
   3bc20:	add	r2, r2, #1
   3bc24:	ldr	r0, [r4, #40]	; 0x28
   3bc28:	add	r2, r2, r1
   3bc2c:	str	r3, [sp]
   3bc30:	add	r1, r4, #60	; 0x3c
   3bc34:	ldr	r7, [r4, #48]	; 0x30
   3bc38:	blx	r7
   3bc3c:	cmp	r0, #0
   3bc40:	bne	3bc78 <flatcc_builder_extend_offset_vector@@Base+0xc0>
   3bc44:	ldr	r2, [r4, #28]
   3bc48:	ldr	r3, [r4, #64]	; 0x40
   3bc4c:	ldr	r0, [r4, #60]	; 0x3c
   3bc50:	sub	r3, r3, r2
   3bc54:	cmn	r3, #4
   3bc58:	mvnhi	r3, #3
   3bc5c:	str	r3, [r4, #24]
   3bc60:	ldr	r3, [r4, #32]
   3bc64:	add	r0, r0, r2
   3bc68:	mvn	r2, #3
   3bc6c:	str	r0, [r4, #16]
   3bc70:	str	r2, [r3, #4]
   3bc74:	b	3bc0c <flatcc_builder_extend_offset_vector@@Base+0x54>
   3bc78:	mov	r0, r5
   3bc7c:	b	3bc10 <flatcc_builder_extend_offset_vector@@Base+0x58>
   3bc80:	bl	1426c <__assert_fail@plt+0x124>

0003bc84 <flatcc_builder_offset_vector_push@@Base>:
   3bc84:	ldr	r2, [r0, #32]
   3bc88:	push	{r4, r5, r6, r7, lr}
   3bc8c:	sub	sp, sp, #12
   3bc90:	ldrh	r3, [r2, #14]
   3bc94:	cmp	r3, #5
   3bc98:	bne	3bd50 <flatcc_builder_offset_vector_push@@Base+0xcc>
   3bc9c:	ldr	r3, [r2, #20]
   3bca0:	cmn	r3, #-1073741823	; 0xc0000001
   3bca4:	beq	3bd44 <flatcc_builder_offset_vector_push@@Base+0xc0>
   3bca8:	add	r3, r3, #1
   3bcac:	str	r3, [r2, #20]
   3bcb0:	ldr	r5, [r0, #20]
   3bcb4:	ldr	r2, [r0, #24]
   3bcb8:	add	r3, r5, #4
   3bcbc:	cmp	r3, r2
   3bcc0:	mov	r4, r0
   3bcc4:	mov	r6, r1
   3bcc8:	str	r3, [r0, #20]
   3bccc:	bcs	3bce4 <flatcc_builder_offset_vector_push@@Base+0x60>
   3bcd0:	ldr	r3, [r0, #16]
   3bcd4:	adds	r0, r3, r5
   3bcd8:	strne	r6, [r3, r5]
   3bcdc:	add	sp, sp, #12
   3bce0:	pop	{r4, r5, r6, r7, pc}
   3bce4:	ldr	r2, [r0, #28]
   3bce8:	mov	r3, #1
   3bcec:	add	r2, r5, r2
   3bcf0:	ldr	r0, [r0, #40]	; 0x28
   3bcf4:	add	r2, r2, #5
   3bcf8:	str	r3, [sp]
   3bcfc:	add	r1, r4, #60	; 0x3c
   3bd00:	ldr	r7, [r4, #48]	; 0x30
   3bd04:	blx	r7
   3bd08:	cmp	r0, #0
   3bd0c:	bne	3bd44 <flatcc_builder_offset_vector_push@@Base+0xc0>
   3bd10:	ldr	r1, [r4, #28]
   3bd14:	ldr	r2, [r4, #64]	; 0x40
   3bd18:	ldr	r3, [r4, #60]	; 0x3c
   3bd1c:	sub	r2, r2, r1
   3bd20:	cmn	r2, #4
   3bd24:	mvnhi	r2, #3
   3bd28:	str	r2, [r4, #24]
   3bd2c:	ldr	r2, [r4, #32]
   3bd30:	add	r3, r3, r1
   3bd34:	mvn	r1, #3
   3bd38:	str	r3, [r4, #16]
   3bd3c:	str	r1, [r2, #4]
   3bd40:	b	3bcd4 <flatcc_builder_offset_vector_push@@Base+0x50>
   3bd44:	mov	r0, #0
   3bd48:	add	sp, sp, #12
   3bd4c:	pop	{r4, r5, r6, r7, pc}
   3bd50:	ldr	r3, [pc, #12]	; 3bd64 <flatcc_builder_offset_vector_push@@Base+0xe0>
   3bd54:	ldr	r2, [pc, #12]	; 3bd68 <flatcc_builder_offset_vector_push@@Base+0xe4>
   3bd58:	ldr	r1, [pc, #12]	; 3bd6c <flatcc_builder_offset_vector_push@@Base+0xe8>
   3bd5c:	ldr	r0, [pc, #12]	; 3bd70 <flatcc_builder_offset_vector_push@@Base+0xec>
   3bd60:	bl	14148 <__assert_fail@plt>
   3bd64:	andeq	sp, r5, r8, asr #24
   3bd68:	andeq	r0, r0, r6, lsr #7
   3bd6c:	ldrdeq	sp, [r5], -ip
   3bd70:			; <UNDEFINED> instruction: 0x0005e1b4

0003bd74 <flatcc_builder_append_offset_vector@@Base>:
   3bd74:	push	{r4, r5, r6, r7, r8, r9, lr}
   3bd78:	mov	r5, r0
   3bd7c:	ldr	r0, [r0, #32]
   3bd80:	sub	sp, sp, #12
   3bd84:	ldrh	r3, [r0, #14]
   3bd88:	cmp	r3, #5
   3bd8c:	bne	3be70 <flatcc_builder_append_offset_vector@@Base+0xfc>
   3bd90:	mov	r7, r1
   3bd94:	ldr	r1, [r0, #20]
   3bd98:	adds	r1, r2, r1
   3bd9c:	movcs	r4, #1
   3bda0:	movcc	r4, #0
   3bda4:	cmn	r1, #-1073741823	; 0xc0000001
   3bda8:	movls	r3, #0
   3bdac:	movhi	r3, #1
   3bdb0:	orrs	r4, r4, r3
   3bdb4:	bne	3be6c <flatcc_builder_append_offset_vector@@Base+0xf8>
   3bdb8:	str	r1, [r0, #20]
   3bdbc:	ldr	r8, [r5, #20]
   3bdc0:	lsl	r6, r2, #2
   3bdc4:	ldr	r3, [r5, #24]
   3bdc8:	add	r1, r6, r8
   3bdcc:	cmp	r1, r3
   3bdd0:	str	r1, [r5, #20]
   3bdd4:	bcs	3be04 <flatcc_builder_append_offset_vector@@Base+0x90>
   3bdd8:	ldr	r3, [r5, #16]
   3bddc:	adds	r3, r3, r8
   3bde0:	beq	3bdf8 <flatcc_builder_append_offset_vector@@Base+0x84>
   3bde4:	mov	r0, r3
   3bde8:	mov	r2, r6
   3bdec:	mov	r1, r7
   3bdf0:	bl	13fe0 <memcpy@plt>
   3bdf4:	mov	r3, r0
   3bdf8:	mov	r0, r3
   3bdfc:	add	sp, sp, #12
   3be00:	pop	{r4, r5, r6, r7, r8, r9, pc}
   3be04:	ldr	r2, [r5, #28]
   3be08:	mov	r3, #1
   3be0c:	add	r2, r2, #1
   3be10:	ldr	r0, [r5, #40]	; 0x28
   3be14:	add	r2, r2, r1
   3be18:	str	r3, [sp]
   3be1c:	add	r1, r5, #60	; 0x3c
   3be20:	ldr	r9, [r5, #48]	; 0x30
   3be24:	blx	r9
   3be28:	cmp	r0, #0
   3be2c:	bne	3be64 <flatcc_builder_append_offset_vector@@Base+0xf0>
   3be30:	ldr	r1, [r5, #28]
   3be34:	ldr	r2, [r5, #64]	; 0x40
   3be38:	ldr	r3, [r5, #60]	; 0x3c
   3be3c:	sub	r2, r2, r1
   3be40:	cmn	r2, #4
   3be44:	mvnhi	r2, #3
   3be48:	str	r2, [r5, #24]
   3be4c:	ldr	r2, [r5, #32]
   3be50:	add	r3, r3, r1
   3be54:	mvn	r1, #3
   3be58:	str	r3, [r5, #16]
   3be5c:	str	r1, [r2, #4]
   3be60:	b	3bddc <flatcc_builder_append_offset_vector@@Base+0x68>
   3be64:	mov	r3, r4
   3be68:	b	3bdf8 <flatcc_builder_append_offset_vector@@Base+0x84>
   3be6c:	bl	1426c <__assert_fail@plt+0x124>
   3be70:	ldr	r3, [pc, #12]	; 3be84 <flatcc_builder_append_offset_vector@@Base+0x110>
   3be74:	mov	r2, #948	; 0x3b4
   3be78:	ldr	r1, [pc, #8]	; 3be88 <flatcc_builder_append_offset_vector@@Base+0x114>
   3be7c:	ldr	r0, [pc, #8]	; 3be8c <flatcc_builder_append_offset_vector@@Base+0x118>
   3be80:	bl	14148 <__assert_fail@plt>
   3be84:	andeq	sp, r5, ip, ror #24
   3be88:	ldrdeq	sp, [r5], -ip
   3be8c:			; <UNDEFINED> instruction: 0x0005e1b4

0003be90 <flatcc_builder_extend_string@@Base>:
   3be90:	ldr	r2, [r0, #32]
   3be94:	push	{r4, r5, r6, lr}
   3be98:	sub	sp, sp, #8
   3be9c:	ldrh	r3, [r2, #14]
   3bea0:	cmp	r3, #6
   3bea4:	bne	3bf50 <flatcc_builder_extend_string@@Base+0xc0>
   3bea8:	ldr	r3, [r2, #20]
   3beac:	adds	r3, r1, r3
   3beb0:	bcs	3bf4c <flatcc_builder_extend_string@@Base+0xbc>
   3beb4:	str	r3, [r2, #20]
   3beb8:	ldr	r5, [r0, #20]
   3bebc:	ldr	r3, [r0, #24]
   3bec0:	add	r1, r1, r5
   3bec4:	cmp	r1, r3
   3bec8:	mov	r4, r0
   3becc:	str	r1, [r0, #20]
   3bed0:	bcs	3bee4 <flatcc_builder_extend_string@@Base+0x54>
   3bed4:	ldr	r0, [r0, #16]
   3bed8:	add	r0, r0, r5
   3bedc:	add	sp, sp, #8
   3bee0:	pop	{r4, r5, r6, pc}
   3bee4:	ldr	r2, [r0, #28]
   3bee8:	mov	r3, #1
   3beec:	add	r2, r2, #1
   3bef0:	ldr	r0, [r0, #40]	; 0x28
   3bef4:	add	r2, r2, r1
   3bef8:	str	r3, [sp]
   3befc:	add	r1, r4, #60	; 0x3c
   3bf00:	ldr	r6, [r4, #48]	; 0x30
   3bf04:	blx	r6
   3bf08:	cmp	r0, #0
   3bf0c:	bne	3bf44 <flatcc_builder_extend_string@@Base+0xb4>
   3bf10:	ldr	r2, [r4, #28]
   3bf14:	ldr	r3, [r4, #64]	; 0x40
   3bf18:	ldr	r0, [r4, #60]	; 0x3c
   3bf1c:	sub	r3, r3, r2
   3bf20:	cmn	r3, #4
   3bf24:	mvnhi	r3, #3
   3bf28:	str	r3, [r4, #24]
   3bf2c:	ldr	r3, [r4, #32]
   3bf30:	add	r0, r0, r2
   3bf34:	mvn	r2, #3
   3bf38:	str	r0, [r4, #16]
   3bf3c:	str	r2, [r3, #4]
   3bf40:	b	3bed8 <flatcc_builder_extend_string@@Base+0x48>
   3bf44:	mov	r0, #0
   3bf48:	b	3bedc <flatcc_builder_extend_string@@Base+0x4c>
   3bf4c:	bl	1426c <__assert_fail@plt+0x124>
   3bf50:	ldr	r3, [pc, #12]	; 3bf64 <flatcc_builder_extend_string@@Base+0xd4>
   3bf54:	ldr	r2, [pc, #12]	; 3bf68 <flatcc_builder_extend_string@@Base+0xd8>
   3bf58:	ldr	r1, [pc, #12]	; 3bf6c <flatcc_builder_extend_string@@Base+0xdc>
   3bf5c:	ldr	r0, [pc, #12]	; 3bf70 <flatcc_builder_extend_string@@Base+0xe0>
   3bf60:	bl	14148 <__assert_fail@plt>
   3bf64:	muleq	r5, r0, ip
   3bf68:			; <UNDEFINED> instruction: 0x000003bd
   3bf6c:	ldrdeq	sp, [r5], -ip
   3bf70:	andeq	lr, r5, ip, asr r0

0003bf74 <flatcc_builder_append_string@@Base>:
   3bf74:	push	{r4, r5, r6, r7, r8, lr}
   3bf78:	mov	r6, r1
   3bf7c:	ldr	r1, [r0, #32]
   3bf80:	sub	sp, sp, #8
   3bf84:	ldrh	r3, [r1, #14]
   3bf88:	cmp	r3, #6
   3bf8c:	bne	3c058 <flatcc_builder_append_string@@Base+0xe4>
   3bf90:	ldr	r3, [r1, #20]
   3bf94:	mov	r5, r2
   3bf98:	adds	r3, r2, r3
   3bf9c:	bcs	3c054 <flatcc_builder_append_string@@Base+0xe0>
   3bfa0:	str	r3, [r1, #20]
   3bfa4:	ldr	r7, [r0, #20]
   3bfa8:	ldr	r3, [r0, #24]
   3bfac:	add	r1, r2, r7
   3bfb0:	cmp	r1, r3
   3bfb4:	mov	r4, r0
   3bfb8:	str	r1, [r0, #20]
   3bfbc:	bcs	3bfec <flatcc_builder_append_string@@Base+0x78>
   3bfc0:	ldr	r3, [r0, #16]
   3bfc4:	adds	r3, r3, r7
   3bfc8:	beq	3bfe0 <flatcc_builder_append_string@@Base+0x6c>
   3bfcc:	mov	r0, r3
   3bfd0:	mov	r2, r5
   3bfd4:	mov	r1, r6
   3bfd8:	bl	13fe0 <memcpy@plt>
   3bfdc:	mov	r3, r0
   3bfe0:	mov	r0, r3
   3bfe4:	add	sp, sp, #8
   3bfe8:	pop	{r4, r5, r6, r7, r8, pc}
   3bfec:	ldr	r2, [r0, #28]
   3bff0:	mov	r3, #1
   3bff4:	add	r2, r2, #1
   3bff8:	ldr	r0, [r0, #40]	; 0x28
   3bffc:	add	r2, r2, r1
   3c000:	str	r3, [sp]
   3c004:	add	r1, r4, #60	; 0x3c
   3c008:	ldr	r8, [r4, #48]	; 0x30
   3c00c:	blx	r8
   3c010:	cmp	r0, #0
   3c014:	bne	3c04c <flatcc_builder_append_string@@Base+0xd8>
   3c018:	ldr	r1, [r4, #28]
   3c01c:	ldr	r2, [r4, #64]	; 0x40
   3c020:	ldr	r3, [r4, #60]	; 0x3c
   3c024:	sub	r2, r2, r1
   3c028:	cmn	r2, #4
   3c02c:	mvnhi	r2, #3
   3c030:	str	r2, [r4, #24]
   3c034:	ldr	r2, [r4, #32]
   3c038:	add	r3, r3, r1
   3c03c:	mvn	r1, #3
   3c040:	str	r3, [r4, #16]
   3c044:	str	r1, [r2, #4]
   3c048:	b	3bfc4 <flatcc_builder_append_string@@Base+0x50>
   3c04c:	mov	r3, #0
   3c050:	b	3bfe0 <flatcc_builder_append_string@@Base+0x6c>
   3c054:	bl	1426c <__assert_fail@plt+0x124>
   3c058:	bl	142b8 <__assert_fail@plt+0x170>

0003c05c <flatcc_builder_append_string_str@@Base>:
   3c05c:	push	{r4, r5, r6, r7, r8, lr}
   3c060:	mov	r4, r0
   3c064:	sub	sp, sp, #8
   3c068:	mov	r0, r1
   3c06c:	mov	r6, r1
   3c070:	bl	1407c <strlen@plt>
   3c074:	ldr	r2, [r4, #32]
   3c078:	ldrh	r3, [r2, #14]
   3c07c:	cmp	r3, #6
   3c080:	bne	3c148 <flatcc_builder_append_string_str@@Base+0xec>
   3c084:	ldr	r3, [r2, #20]
   3c088:	mov	r5, r0
   3c08c:	adds	r3, r0, r3
   3c090:	bcs	3c144 <flatcc_builder_append_string_str@@Base+0xe8>
   3c094:	str	r3, [r2, #20]
   3c098:	ldr	r7, [r4, #20]
   3c09c:	ldr	r3, [r4, #24]
   3c0a0:	add	r1, r0, r7
   3c0a4:	cmp	r1, r3
   3c0a8:	str	r1, [r4, #20]
   3c0ac:	bcs	3c0dc <flatcc_builder_append_string_str@@Base+0x80>
   3c0b0:	ldr	r3, [r4, #16]
   3c0b4:	adds	r3, r3, r7
   3c0b8:	beq	3c0d0 <flatcc_builder_append_string_str@@Base+0x74>
   3c0bc:	mov	r0, r3
   3c0c0:	mov	r2, r5
   3c0c4:	mov	r1, r6
   3c0c8:	bl	13fe0 <memcpy@plt>
   3c0cc:	mov	r3, r0
   3c0d0:	mov	r0, r3
   3c0d4:	add	sp, sp, #8
   3c0d8:	pop	{r4, r5, r6, r7, r8, pc}
   3c0dc:	ldr	r2, [r4, #28]
   3c0e0:	mov	r3, #1
   3c0e4:	add	r2, r2, #1
   3c0e8:	ldr	r0, [r4, #40]	; 0x28
   3c0ec:	add	r2, r2, r1
   3c0f0:	str	r3, [sp]
   3c0f4:	add	r1, r4, #60	; 0x3c
   3c0f8:	ldr	r8, [r4, #48]	; 0x30
   3c0fc:	blx	r8
   3c100:	cmp	r0, #0
   3c104:	bne	3c13c <flatcc_builder_append_string_str@@Base+0xe0>
   3c108:	ldr	r1, [r4, #28]
   3c10c:	ldr	r2, [r4, #64]	; 0x40
   3c110:	ldr	r3, [r4, #60]	; 0x3c
   3c114:	sub	r2, r2, r1
   3c118:	cmn	r2, #4
   3c11c:	mvnhi	r2, #3
   3c120:	str	r2, [r4, #24]
   3c124:	ldr	r2, [r4, #32]
   3c128:	add	r3, r3, r1
   3c12c:	mvn	r1, #3
   3c130:	str	r3, [r4, #16]
   3c134:	str	r1, [r2, #4]
   3c138:	b	3c0b4 <flatcc_builder_append_string_str@@Base+0x58>
   3c13c:	mov	r3, #0
   3c140:	b	3c0d0 <flatcc_builder_append_string_str@@Base+0x74>
   3c144:	bl	1426c <__assert_fail@plt+0x124>
   3c148:	bl	142b8 <__assert_fail@plt+0x170>

0003c14c <flatcc_builder_append_string_strn@@Base>:
   3c14c:	push	{r4, r5, r6, r7, r8, lr}
   3c150:	mov	r6, r1
   3c154:	mov	r4, r0
   3c158:	sub	sp, sp, #8
   3c15c:	mov	r1, #0
   3c160:	mov	r0, r6
   3c164:	mov	r5, r2
   3c168:	bl	140d0 <memchr@plt>
   3c16c:	ldr	r2, [r4, #32]
   3c170:	ldrh	r3, [r2, #14]
   3c174:	cmp	r0, #0
   3c178:	subne	r5, r0, r6
   3c17c:	cmp	r3, #6
   3c180:	bne	3c244 <flatcc_builder_append_string_strn@@Base+0xf8>
   3c184:	ldr	r3, [r2, #20]
   3c188:	adds	r3, r5, r3
   3c18c:	bcs	3c240 <flatcc_builder_append_string_strn@@Base+0xf4>
   3c190:	str	r3, [r2, #20]
   3c194:	ldr	r7, [r4, #20]
   3c198:	ldr	r3, [r4, #24]
   3c19c:	add	r1, r5, r7
   3c1a0:	cmp	r1, r3
   3c1a4:	str	r1, [r4, #20]
   3c1a8:	bcs	3c1d8 <flatcc_builder_append_string_strn@@Base+0x8c>
   3c1ac:	ldr	r3, [r4, #16]
   3c1b0:	adds	r3, r3, r7
   3c1b4:	beq	3c1cc <flatcc_builder_append_string_strn@@Base+0x80>
   3c1b8:	mov	r0, r3
   3c1bc:	mov	r2, r5
   3c1c0:	mov	r1, r6
   3c1c4:	bl	13fe0 <memcpy@plt>
   3c1c8:	mov	r3, r0
   3c1cc:	mov	r0, r3
   3c1d0:	add	sp, sp, #8
   3c1d4:	pop	{r4, r5, r6, r7, r8, pc}
   3c1d8:	ldr	r2, [r4, #28]
   3c1dc:	mov	r3, #1
   3c1e0:	add	r2, r2, #1
   3c1e4:	ldr	r0, [r4, #40]	; 0x28
   3c1e8:	add	r2, r2, r1
   3c1ec:	str	r3, [sp]
   3c1f0:	add	r1, r4, #60	; 0x3c
   3c1f4:	ldr	r8, [r4, #48]	; 0x30
   3c1f8:	blx	r8
   3c1fc:	cmp	r0, #0
   3c200:	bne	3c238 <flatcc_builder_append_string_strn@@Base+0xec>
   3c204:	ldr	r1, [r4, #28]
   3c208:	ldr	r2, [r4, #64]	; 0x40
   3c20c:	ldr	r3, [r4, #60]	; 0x3c
   3c210:	sub	r2, r2, r1
   3c214:	cmn	r2, #4
   3c218:	mvnhi	r2, #3
   3c21c:	str	r2, [r4, #24]
   3c220:	ldr	r2, [r4, #32]
   3c224:	add	r3, r3, r1
   3c228:	mvn	r1, #3
   3c22c:	str	r3, [r4, #16]
   3c230:	str	r1, [r2, #4]
   3c234:	b	3c1b0 <flatcc_builder_append_string_strn@@Base+0x64>
   3c238:	mov	r3, #0
   3c23c:	b	3c1cc <flatcc_builder_append_string_strn@@Base+0x80>
   3c240:	bl	1426c <__assert_fail@plt+0x124>
   3c244:	bl	142b8 <__assert_fail@plt+0x170>

0003c248 <flatcc_builder_truncate_vector@@Base>:
   3c248:	ldr	r3, [r0, #32]
   3c24c:	push	{r4, lr}
   3c250:	ldrh	r2, [r3, #14]
   3c254:	cmp	r2, #4
   3c258:	bne	3c29c <flatcc_builder_truncate_vector@@Base+0x54>
   3c25c:	ldr	ip, [r3, #20]
   3c260:	cmp	ip, r1
   3c264:	bcc	3c2b0 <flatcc_builder_truncate_vector@@Base+0x68>
   3c268:	ldr	r2, [r3, #16]
   3c26c:	sub	ip, ip, r1
   3c270:	str	ip, [r3, #20]
   3c274:	mul	r2, r2, r1
   3c278:	ldr	r3, [r0, #20]
   3c27c:	ldr	r1, [r0, #16]
   3c280:	sub	r3, r3, r2
   3c284:	str	r3, [r0, #20]
   3c288:	add	r0, r1, r3
   3c28c:	mov	r1, #0
   3c290:	bl	140ac <memset@plt>
   3c294:	mov	r0, #0
   3c298:	pop	{r4, pc}
   3c29c:	ldr	r3, [pc, #32]	; 3c2c4 <flatcc_builder_truncate_vector@@Base+0x7c>
   3c2a0:	ldr	r2, [pc, #32]	; 3c2c8 <flatcc_builder_truncate_vector@@Base+0x80>
   3c2a4:	ldr	r1, [pc, #32]	; 3c2cc <flatcc_builder_truncate_vector@@Base+0x84>
   3c2a8:	ldr	r0, [pc, #32]	; 3c2d0 <flatcc_builder_truncate_vector@@Base+0x88>
   3c2ac:	bl	14148 <__assert_fail@plt>
   3c2b0:	ldr	r3, [pc, #12]	; 3c2c4 <flatcc_builder_truncate_vector@@Base+0x7c>
   3c2b4:	ldr	r2, [pc, #24]	; 3c2d4 <flatcc_builder_truncate_vector@@Base+0x8c>
   3c2b8:	ldr	r1, [pc, #12]	; 3c2cc <flatcc_builder_truncate_vector@@Base+0x84>
   3c2bc:	ldr	r0, [pc, #20]	; 3c2d8 <flatcc_builder_truncate_vector@@Base+0x90>
   3c2c0:	bl	14148 <__assert_fail@plt>
   3c2c4:			; <UNDEFINED> instruction: 0x0005dcb0
   3c2c8:	ldrdeq	r0, [r0], -r9
   3c2cc:	ldrdeq	sp, [r5], -ip
   3c2d0:	andeq	lr, r5, r8, asr #2
   3c2d4:	ldrdeq	r0, [r0], -sl
   3c2d8:	andeq	lr, r5, r8, ror #3

0003c2dc <flatcc_builder_truncate_offset_vector@@Base>:
   3c2dc:	ldr	r3, [r0, #32]
   3c2e0:	push	{r4, lr}
   3c2e4:	ldrh	r2, [r3, #14]
   3c2e8:	cmp	r2, #5
   3c2ec:	bne	3c330 <flatcc_builder_truncate_offset_vector@@Base+0x54>
   3c2f0:	ldr	ip, [r3, #20]
   3c2f4:	cmp	ip, r1
   3c2f8:	bcc	3c344 <flatcc_builder_truncate_offset_vector@@Base+0x68>
   3c2fc:	ldr	r2, [r3, #16]
   3c300:	sub	ip, ip, r1
   3c304:	str	ip, [r3, #20]
   3c308:	mul	r2, r2, r1
   3c30c:	ldr	r3, [r0, #20]
   3c310:	ldr	r1, [r0, #16]
   3c314:	sub	r3, r3, r2
   3c318:	str	r3, [r0, #20]
   3c31c:	add	r0, r1, r3
   3c320:	mov	r1, #0
   3c324:	bl	140ac <memset@plt>
   3c328:	mov	r0, #0
   3c32c:	pop	{r4, pc}
   3c330:	ldr	r3, [pc, #32]	; 3c358 <flatcc_builder_truncate_offset_vector@@Base+0x7c>
   3c334:	ldr	r2, [pc, #32]	; 3c35c <flatcc_builder_truncate_offset_vector@@Base+0x80>
   3c338:	ldr	r1, [pc, #32]	; 3c360 <flatcc_builder_truncate_offset_vector@@Base+0x84>
   3c33c:	ldr	r0, [pc, #32]	; 3c364 <flatcc_builder_truncate_offset_vector@@Base+0x88>
   3c340:	bl	14148 <__assert_fail@plt>
   3c344:	ldr	r3, [pc, #12]	; 3c358 <flatcc_builder_truncate_offset_vector@@Base+0x7c>
   3c348:	ldr	r2, [pc, #24]	; 3c368 <flatcc_builder_truncate_offset_vector@@Base+0x8c>
   3c34c:	ldr	r1, [pc, #12]	; 3c360 <flatcc_builder_truncate_offset_vector@@Base+0x84>
   3c350:	ldr	r0, [pc, #20]	; 3c36c <flatcc_builder_truncate_offset_vector@@Base+0x90>
   3c354:	bl	14148 <__assert_fail@plt>
   3c358:	ldrdeq	sp, [r5], -r0
   3c35c:	andeq	r0, r0, r2, ror #7
   3c360:	ldrdeq	sp, [r5], -ip
   3c364:			; <UNDEFINED> instruction: 0x0005e1b4
   3c368:	andeq	r0, r0, r3, ror #7
   3c36c:	andeq	lr, r5, ip, lsl #4

0003c370 <flatcc_builder_truncate_string@@Base>:
   3c370:	ldr	r2, [r0, #32]
   3c374:	push	{r4, lr}
   3c378:	ldrh	r3, [r2, #14]
   3c37c:	cmp	r3, #6
   3c380:	bne	3c3c0 <flatcc_builder_truncate_string@@Base+0x50>
   3c384:	ldr	r3, [r2, #20]
   3c388:	cmp	r3, r1
   3c38c:	bcc	3c3d4 <flatcc_builder_truncate_string@@Base+0x64>
   3c390:	sub	r3, r3, r1
   3c394:	str	r3, [r2, #20]
   3c398:	ldr	r3, [r0, #20]
   3c39c:	ldr	r2, [r0, #16]
   3c3a0:	sub	r3, r3, r1
   3c3a4:	str	r3, [r0, #20]
   3c3a8:	add	r0, r2, r3
   3c3ac:	mov	r2, r1
   3c3b0:	mov	r1, #0
   3c3b4:	bl	140ac <memset@plt>
   3c3b8:	mov	r0, #0
   3c3bc:	pop	{r4, pc}
   3c3c0:	ldr	r3, [pc, #32]	; 3c3e8 <flatcc_builder_truncate_string@@Base+0x78>
   3c3c4:	ldr	r2, [pc, #32]	; 3c3ec <flatcc_builder_truncate_string@@Base+0x7c>
   3c3c8:	ldr	r1, [pc, #32]	; 3c3f0 <flatcc_builder_truncate_string@@Base+0x80>
   3c3cc:	ldr	r0, [pc, #32]	; 3c3f4 <flatcc_builder_truncate_string@@Base+0x84>
   3c3d0:	bl	14148 <__assert_fail@plt>
   3c3d4:	ldr	r3, [pc, #12]	; 3c3e8 <flatcc_builder_truncate_string@@Base+0x78>
   3c3d8:	mov	r2, #1004	; 0x3ec
   3c3dc:	ldr	r1, [pc, #12]	; 3c3f0 <flatcc_builder_truncate_string@@Base+0x80>
   3c3e0:	ldr	r0, [pc, #16]	; 3c3f8 <flatcc_builder_truncate_string@@Base+0x88>
   3c3e4:	bl	14148 <__assert_fail@plt>
   3c3e8:	strdeq	sp, [r5], -r8
   3c3ec:	andeq	r0, r0, fp, ror #7
   3c3f0:	ldrdeq	sp, [r5], -ip
   3c3f4:	andeq	lr, r5, ip, asr r0
   3c3f8:	andeq	lr, r5, r8, asr #4

0003c3fc <flatcc_builder_start_vector@@Base>:
   3c3fc:	ldr	ip, [r0, #156]	; 0x9c
   3c400:	push	{r4, r5, r6, r7, r8, r9, lr}
   3c404:	cmp	r2, #4
   3c408:	ldr	lr, [r0, #160]	; 0xa0
   3c40c:	mov	r4, r0
   3c410:	add	r0, ip, #1
   3c414:	movcs	r7, r2
   3c418:	movcc	r7, #4
   3c41c:	cmp	r0, lr
   3c420:	sub	sp, sp, #12
   3c424:	mov	r6, r1
   3c428:	mov	r5, r3
   3c42c:	str	r0, [r4, #156]	; 0x9c
   3c430:	ble	3c4a0 <flatcc_builder_start_vector@@Base+0xa4>
   3c434:	ldr	r3, [r4, #176]	; 0xb0
   3c438:	cmp	r3, #0
   3c43c:	cmpgt	r0, r3
   3c440:	movgt	r3, #1
   3c444:	movle	r3, #0
   3c448:	bgt	3c548 <flatcc_builder_start_vector@@Base+0x14c>
   3c44c:	add	ip, ip, ip, lsl #3
   3c450:	ldr	r1, [r4, #88]	; 0x58
   3c454:	lsl	r8, ip, #2
   3c458:	add	r2, r8, #36	; 0x24
   3c45c:	cmp	r2, r1
   3c460:	bhi	3c524 <flatcc_builder_start_vector@@Base+0x128>
   3c464:	ldr	r3, [r4, #84]	; 0x54
   3c468:	add	r3, r3, r8
   3c46c:	cmp	r3, #0
   3c470:	str	r3, [r4, #32]
   3c474:	beq	3c548 <flatcc_builder_start_vector@@Base+0x14c>
   3c478:	ldr	r2, [r4, #88]	; 0x58
   3c47c:	ldr	r0, [pc, #204]	; 3c550 <flatcc_builder_start_vector@@Base+0x154>
   3c480:	ldr	r1, [r4, #176]	; 0xb0
   3c484:	umull	r0, r2, r0, r2
   3c488:	lsr	r2, r2, #3
   3c48c:	cmp	r1, #0
   3c490:	cmpgt	r2, r1
   3c494:	str	r2, [r4, #160]	; 0xa0
   3c498:	strgt	r1, [r4, #160]	; 0xa0
   3c49c:	b	3c4ac <flatcc_builder_start_vector@@Base+0xb0>
   3c4a0:	ldr	r3, [r4, #32]
   3c4a4:	add	r3, r3, #36	; 0x24
   3c4a8:	str	r3, [r4, #32]
   3c4ac:	ldr	r0, [r4, #20]
   3c4b0:	ldr	r1, [r4, #28]
   3c4b4:	ldrh	ip, [r4, #130]	; 0x82
   3c4b8:	add	r2, r0, r1
   3c4bc:	add	r2, r2, #7
   3c4c0:	str	r0, [r3, #8]
   3c4c4:	bic	r2, r2, #7
   3c4c8:	mov	r0, #0
   3c4cc:	strh	ip, [r3, #12]
   3c4d0:	strh	r7, [r4, #130]	; 0x82
   3c4d4:	str	r1, [r3]
   3c4d8:	str	r2, [r4, #28]
   3c4dc:	str	r0, [r4, #20]
   3c4e0:	str	r0, [r3, #20]
   3c4e4:	str	r6, [r3, #16]
   3c4e8:	str	r5, [r3, #24]
   3c4ec:	ldr	r1, [r4, #64]	; 0x40
   3c4f0:	ldr	ip, [r4, #60]	; 0x3c
   3c4f4:	sub	r1, r1, r2
   3c4f8:	mvn	lr, #3
   3c4fc:	cmp	r1, lr
   3c500:	add	r2, ip, r2
   3c504:	movhi	r1, lr
   3c508:	mov	ip, #4
   3c50c:	strh	ip, [r3, #14]
   3c510:	str	r2, [r4, #16]
   3c514:	str	r1, [r4, #24]
   3c518:	str	lr, [r3, #4]
   3c51c:	add	sp, sp, #12
   3c520:	pop	{r4, r5, r6, r7, r8, r9, pc}
   3c524:	mov	r1, #4
   3c528:	ldr	r0, [r4, #40]	; 0x28
   3c52c:	str	r1, [sp]
   3c530:	add	r1, r4, #84	; 0x54
   3c534:	ldr	r9, [r4, #48]	; 0x30
   3c538:	blx	r9
   3c53c:	cmp	r0, #0
   3c540:	beq	3c464 <flatcc_builder_start_vector@@Base+0x68>
   3c544:	bl	141f8 <__assert_fail@plt+0xb0>
   3c548:	mvn	r0, #0
   3c54c:	b	3c51c <flatcc_builder_start_vector@@Base+0x120>
   3c550:	stmiacc	r3!, {r0, r3, r4, r5, r9, sl, fp, pc}^

0003c554 <flatcc_builder_start_offset_vector@@Base>:
   3c554:	ldr	r1, [r0, #156]	; 0x9c
   3c558:	ldr	r3, [r0, #160]	; 0xa0
   3c55c:	add	r2, r1, #1
   3c560:	cmp	r2, r3
   3c564:	push	{r4, r5, r6, lr}
   3c568:	mov	r4, r0
   3c56c:	sub	sp, sp, #8
   3c570:	str	r2, [r0, #156]	; 0x9c
   3c574:	ble	3c5e4 <flatcc_builder_start_offset_vector@@Base+0x90>
   3c578:	ldr	r3, [r0, #176]	; 0xb0
   3c57c:	cmp	r3, #0
   3c580:	cmpgt	r2, r3
   3c584:	movgt	r3, #1
   3c588:	movle	r3, #0
   3c58c:	bgt	3c68c <flatcc_builder_start_offset_vector@@Base+0x138>
   3c590:	add	r1, r1, r1, lsl #3
   3c594:	ldr	r0, [r0, #88]	; 0x58
   3c598:	lsl	r5, r1, #2
   3c59c:	add	r2, r5, #36	; 0x24
   3c5a0:	cmp	r2, r0
   3c5a4:	bhi	3c668 <flatcc_builder_start_offset_vector@@Base+0x114>
   3c5a8:	ldr	r3, [r4, #84]	; 0x54
   3c5ac:	add	r3, r3, r5
   3c5b0:	cmp	r3, #0
   3c5b4:	str	r3, [r4, #32]
   3c5b8:	beq	3c68c <flatcc_builder_start_offset_vector@@Base+0x138>
   3c5bc:	ldr	r2, [r4, #88]	; 0x58
   3c5c0:	ldr	r0, [pc, #204]	; 3c694 <flatcc_builder_start_offset_vector@@Base+0x140>
   3c5c4:	ldr	r1, [r4, #176]	; 0xb0
   3c5c8:	umull	r0, r2, r0, r2
   3c5cc:	lsr	r2, r2, #3
   3c5d0:	cmp	r1, #0
   3c5d4:	cmpgt	r2, r1
   3c5d8:	str	r2, [r4, #160]	; 0xa0
   3c5dc:	strgt	r1, [r4, #160]	; 0xa0
   3c5e0:	b	3c5f0 <flatcc_builder_start_offset_vector@@Base+0x9c>
   3c5e4:	ldr	r3, [r0, #32]
   3c5e8:	add	r3, r3, #36	; 0x24
   3c5ec:	str	r3, [r0, #32]
   3c5f0:	ldr	lr, [r4, #20]
   3c5f4:	ldr	ip, [r4, #28]
   3c5f8:	ldrh	r5, [r4, #130]	; 0x82
   3c5fc:	add	r2, lr, ip
   3c600:	add	r2, r2, #7
   3c604:	bic	r2, r2, #7
   3c608:	mov	r1, #4
   3c60c:	mov	r0, #0
   3c610:	str	lr, [r3, #8]
   3c614:	strh	r5, [r3, #12]
   3c618:	strh	r1, [r4, #130]	; 0x82
   3c61c:	str	ip, [r3]
   3c620:	str	r2, [r4, #28]
   3c624:	str	r0, [r4, #20]
   3c628:	str	r1, [r3, #16]
   3c62c:	str	r0, [r3, #20]
   3c630:	ldr	r1, [r4, #64]	; 0x40
   3c634:	ldr	ip, [r4, #60]	; 0x3c
   3c638:	sub	r1, r1, r2
   3c63c:	mvn	lr, #3
   3c640:	cmp	r1, lr
   3c644:	add	r2, ip, r2
   3c648:	movhi	r1, lr
   3c64c:	mov	ip, #5
   3c650:	strh	ip, [r3, #14]
   3c654:	str	r2, [r4, #16]
   3c658:	str	r1, [r4, #24]
   3c65c:	str	lr, [r3, #4]
   3c660:	add	sp, sp, #8
   3c664:	pop	{r4, r5, r6, pc}
   3c668:	mov	r1, #4
   3c66c:	ldr	r0, [r4, #40]	; 0x28
   3c670:	str	r1, [sp]
   3c674:	add	r1, r4, #84	; 0x54
   3c678:	ldr	r6, [r4, #48]	; 0x30
   3c67c:	blx	r6
   3c680:	cmp	r0, #0
   3c684:	beq	3c5a8 <flatcc_builder_start_offset_vector@@Base+0x54>
   3c688:	bl	141f8 <__assert_fail@plt+0xb0>
   3c68c:	mvn	r0, #0
   3c690:	b	3c660 <flatcc_builder_start_offset_vector@@Base+0x10c>
   3c694:	stmiacc	r3!, {r0, r3, r4, r5, r9, sl, fp, pc}^

0003c698 <flatcc_builder_create_offset_vector@@Base>:
   3c698:	push	{r4, r5, r6, r7, r8, lr}
   3c69c:	mov	r4, r0
   3c6a0:	ldr	r0, [r0, #156]	; 0x9c
   3c6a4:	ldr	r3, [r4, #160]	; 0xa0
   3c6a8:	mov	r7, r1
   3c6ac:	add	r1, r0, #1
   3c6b0:	cmp	r1, r3
   3c6b4:	sub	sp, sp, #8
   3c6b8:	mov	r5, r2
   3c6bc:	str	r1, [r4, #156]	; 0x9c
   3c6c0:	ble	3c730 <flatcc_builder_create_offset_vector@@Base+0x98>
   3c6c4:	ldr	r3, [r4, #176]	; 0xb0
   3c6c8:	cmp	r1, r3
   3c6cc:	cmpgt	r3, #0
   3c6d0:	movgt	r3, #1
   3c6d4:	movle	r3, #0
   3c6d8:	bgt	3c800 <flatcc_builder_create_offset_vector@@Base+0x168>
   3c6dc:	add	r0, r0, r0, lsl #3
   3c6e0:	ldr	r1, [r4, #88]	; 0x58
   3c6e4:	lsl	r6, r0, #2
   3c6e8:	add	r2, r6, #36	; 0x24
   3c6ec:	cmp	r2, r1
   3c6f0:	bhi	3c868 <flatcc_builder_create_offset_vector@@Base+0x1d0>
   3c6f4:	ldr	r3, [r4, #84]	; 0x54
   3c6f8:	add	r3, r3, r6
   3c6fc:	cmp	r3, #0
   3c700:	str	r3, [r4, #32]
   3c704:	beq	3c800 <flatcc_builder_create_offset_vector@@Base+0x168>
   3c708:	ldr	r2, [r4, #88]	; 0x58
   3c70c:	ldr	r0, [pc, #552]	; 3c93c <flatcc_builder_create_offset_vector@@Base+0x2a4>
   3c710:	ldr	r1, [r4, #176]	; 0xb0
   3c714:	umull	r0, r2, r0, r2
   3c718:	lsr	r2, r2, #3
   3c71c:	cmp	r1, #0
   3c720:	cmpgt	r2, r1
   3c724:	str	r2, [r4, #160]	; 0xa0
   3c728:	strgt	r1, [r4, #160]	; 0xa0
   3c72c:	b	3c73c <flatcc_builder_create_offset_vector@@Base+0xa4>
   3c730:	ldr	r3, [r4, #32]
   3c734:	add	r3, r3, #36	; 0x24
   3c738:	str	r3, [r4, #32]
   3c73c:	ldr	r2, [r4, #20]
   3c740:	ldr	ip, [r4, #28]
   3c744:	ldrh	r6, [r4, #130]	; 0x82
   3c748:	add	r1, r2, ip
   3c74c:	mvn	lr, #3
   3c750:	add	r1, r1, #7
   3c754:	str	r2, [r3, #8]
   3c758:	bic	r1, r1, #7
   3c75c:	mov	r0, #4
   3c760:	mov	r2, #0
   3c764:	strh	r6, [r3, #12]
   3c768:	strh	r0, [r4, #130]	; 0x82
   3c76c:	stm	r3, {ip, lr}
   3c770:	str	r2, [r4, #20]
   3c774:	str	r1, [r4, #28]
   3c778:	str	r0, [r3, #16]
   3c77c:	str	r2, [r3, #20]
   3c780:	ldr	r2, [r4, #64]	; 0x40
   3c784:	ldr	r0, [r4, #60]	; 0x3c
   3c788:	sub	r2, r2, r1
   3c78c:	cmp	r2, lr
   3c790:	mov	ip, #5
   3c794:	strh	ip, [r3, #14]
   3c798:	add	r0, r0, r1
   3c79c:	strls	r2, [r4, #24]
   3c7a0:	strhi	lr, [r4, #24]
   3c7a4:	movhi	r2, lr
   3c7a8:	mvn	r6, #3
   3c7ac:	cmn	r5, #-1073741823	; 0xc0000001
   3c7b0:	str	r0, [r4, #16]
   3c7b4:	str	r6, [r3, #4]
   3c7b8:	bhi	3c924 <flatcc_builder_create_offset_vector@@Base+0x28c>
   3c7bc:	lsl	r8, r5, #2
   3c7c0:	cmp	r8, r2
   3c7c4:	str	r5, [r3, #20]
   3c7c8:	str	r8, [r4, #20]
   3c7cc:	bcs	3c810 <flatcc_builder_create_offset_vector@@Base+0x178>
   3c7d0:	cmp	r0, #0
   3c7d4:	beq	3c800 <flatcc_builder_create_offset_vector@@Base+0x168>
   3c7d8:	mov	r2, r8
   3c7dc:	mov	r1, r7
   3c7e0:	bl	13fe0 <memcpy@plt>
   3c7e4:	ldr	r3, [r4, #32]
   3c7e8:	ldrh	r2, [r3, #14]
   3c7ec:	cmp	r2, #5
   3c7f0:	bne	3c928 <flatcc_builder_create_offset_vector@@Base+0x290>
   3c7f4:	ldr	r2, [r3, #20]
   3c7f8:	cmn	r2, #-1073741823	; 0xc0000001
   3c7fc:	bls	3c88c <flatcc_builder_create_offset_vector@@Base+0x1f4>
   3c800:	mov	r5, #0
   3c804:	mov	r0, r5
   3c808:	add	sp, sp, #8
   3c80c:	pop	{r4, r5, r6, r7, r8, pc}
   3c810:	mov	r3, #1
   3c814:	add	r2, r8, #1
   3c818:	ldr	r0, [r4, #40]	; 0x28
   3c81c:	add	r2, r2, r1
   3c820:	str	r3, [sp]
   3c824:	add	r1, r4, #60	; 0x3c
   3c828:	ldr	r5, [r4, #48]	; 0x30
   3c82c:	blx	r5
   3c830:	cmp	r0, #0
   3c834:	bne	3c800 <flatcc_builder_create_offset_vector@@Base+0x168>
   3c838:	ldr	r2, [r4, #28]
   3c83c:	ldr	r3, [r4, #64]	; 0x40
   3c840:	ldr	r0, [r4, #60]	; 0x3c
   3c844:	sub	r3, r3, r2
   3c848:	ldr	r1, [r4, #32]
   3c84c:	cmn	r3, #4
   3c850:	movhi	r3, r6
   3c854:	add	r0, r0, r2
   3c858:	str	r3, [r4, #24]
   3c85c:	str	r0, [r4, #16]
   3c860:	str	r6, [r1, #4]
   3c864:	b	3c7d0 <flatcc_builder_create_offset_vector@@Base+0x138>
   3c868:	mov	r1, #4
   3c86c:	ldr	r0, [r4, #40]	; 0x28
   3c870:	str	r1, [sp]
   3c874:	add	r1, r4, #84	; 0x54
   3c878:	ldr	r8, [r4, #48]	; 0x30
   3c87c:	blx	r8
   3c880:	cmp	r0, #0
   3c884:	beq	3c6f4 <flatcc_builder_create_offset_vector@@Base+0x5c>
   3c888:	bl	141f8 <__assert_fail@plt+0xb0>
   3c88c:	ldr	r1, [r4, #16]
   3c890:	mov	r0, r4
   3c894:	bl	3a2bc <flatcc_builder_default_alloc@@Base+0x2fc>
   3c898:	subs	r5, r0, #0
   3c89c:	beq	3c800 <flatcc_builder_create_offset_vector@@Base+0x168>
   3c8a0:	ldr	r2, [r4, #20]
   3c8a4:	mov	r1, #0
   3c8a8:	ldr	r0, [r4, #16]
   3c8ac:	bl	140ac <memset@plt>
   3c8b0:	ldr	r3, [r4, #32]
   3c8b4:	ldr	r2, [r4, #64]	; 0x40
   3c8b8:	ldrh	lr, [r4, #130]	; 0x82
   3c8bc:	ldr	ip, [r3]
   3c8c0:	ldr	r1, [r3, #4]
   3c8c4:	ldrh	r0, [r4, #128]	; 0x80
   3c8c8:	sub	r2, r2, ip
   3c8cc:	cmp	r2, r1
   3c8d0:	movcs	r2, r1
   3c8d4:	cmp	r0, lr
   3c8d8:	ldr	r0, [r4, #60]	; 0x3c
   3c8dc:	ldr	r6, [r3, #8]
   3c8e0:	str	r2, [r4, #24]
   3c8e4:	add	r2, r0, ip
   3c8e8:	str	r2, [r4, #16]
   3c8ec:	str	r6, [r4, #20]
   3c8f0:	ldr	r2, [r4, #156]	; 0x9c
   3c8f4:	str	ip, [r4, #28]
   3c8f8:	str	r1, [r3, #4]
   3c8fc:	strhcc	lr, [r4, #128]	; 0x80
   3c900:	ldrh	r1, [r3, #12]
   3c904:	sub	r2, r2, #1
   3c908:	sub	r3, r3, #36	; 0x24
   3c90c:	mov	r0, r5
   3c910:	str	r2, [r4, #156]	; 0x9c
   3c914:	strh	r1, [r4, #130]	; 0x82
   3c918:	str	r3, [r4, #32]
   3c91c:	add	sp, sp, #8
   3c920:	pop	{r4, r5, r6, r7, r8, pc}
   3c924:	bl	1426c <__assert_fail@plt+0x124>
   3c928:	ldr	r3, [pc, #16]	; 3c940 <flatcc_builder_create_offset_vector@@Base+0x2a8>
   3c92c:	ldr	r2, [pc, #16]	; 3c944 <flatcc_builder_create_offset_vector@@Base+0x2ac>
   3c930:	ldr	r1, [pc, #16]	; 3c948 <flatcc_builder_create_offset_vector@@Base+0x2b0>
   3c934:	ldr	r0, [pc, #16]	; 3c94c <flatcc_builder_create_offset_vector@@Base+0x2b4>
   3c938:	bl	14148 <__assert_fail@plt>
   3c93c:	stmiacc	r3!, {r0, r3, r4, r5, r9, sl, fp, pc}^
   3c940:	andeq	sp, r5, r8, lsl sp
   3c944:	andeq	r0, r0, r8, asr #11
   3c948:	ldrdeq	sp, [r5], -ip
   3c94c:			; <UNDEFINED> instruction: 0x0005e1b4

0003c950 <flatcc_builder_start_string@@Base>:
   3c950:	ldr	r1, [r0, #156]	; 0x9c
   3c954:	ldr	r3, [r0, #160]	; 0xa0
   3c958:	add	r2, r1, #1
   3c95c:	cmp	r2, r3
   3c960:	push	{r4, r5, r6, lr}
   3c964:	mov	r4, r0
   3c968:	sub	sp, sp, #8
   3c96c:	str	r2, [r0, #156]	; 0x9c
   3c970:	ble	3c9e0 <flatcc_builder_start_string@@Base+0x90>
   3c974:	ldr	r3, [r0, #176]	; 0xb0
   3c978:	cmp	r3, #0
   3c97c:	cmpgt	r2, r3
   3c980:	movgt	r3, #1
   3c984:	movle	r3, #0
   3c988:	bgt	3ca88 <flatcc_builder_start_string@@Base+0x138>
   3c98c:	add	r1, r1, r1, lsl #3
   3c990:	ldr	r0, [r0, #88]	; 0x58
   3c994:	lsl	r5, r1, #2
   3c998:	add	r2, r5, #36	; 0x24
   3c99c:	cmp	r2, r0
   3c9a0:	bhi	3ca64 <flatcc_builder_start_string@@Base+0x114>
   3c9a4:	ldr	r3, [r4, #84]	; 0x54
   3c9a8:	add	r3, r3, r5
   3c9ac:	cmp	r3, #0
   3c9b0:	str	r3, [r4, #32]
   3c9b4:	beq	3ca88 <flatcc_builder_start_string@@Base+0x138>
   3c9b8:	ldr	r2, [r4, #88]	; 0x58
   3c9bc:	ldr	r0, [pc, #204]	; 3ca90 <flatcc_builder_start_string@@Base+0x140>
   3c9c0:	ldr	r1, [r4, #176]	; 0xb0
   3c9c4:	umull	r0, r2, r0, r2
   3c9c8:	lsr	r2, r2, #3
   3c9cc:	cmp	r1, #0
   3c9d0:	cmpgt	r2, r1
   3c9d4:	str	r2, [r4, #160]	; 0xa0
   3c9d8:	strgt	r1, [r4, #160]	; 0xa0
   3c9dc:	b	3c9ec <flatcc_builder_start_string@@Base+0x9c>
   3c9e0:	ldr	r3, [r0, #32]
   3c9e4:	add	r3, r3, #36	; 0x24
   3c9e8:	str	r3, [r0, #32]
   3c9ec:	ldr	lr, [r4, #20]
   3c9f0:	ldr	ip, [r4, #28]
   3c9f4:	ldrh	r5, [r4, #130]	; 0x82
   3c9f8:	add	r2, lr, ip
   3c9fc:	add	r2, r2, #7
   3ca00:	bic	r2, r2, #7
   3ca04:	mov	r1, #1
   3ca08:	mov	r0, #0
   3ca0c:	str	lr, [r3, #8]
   3ca10:	strh	r5, [r3, #12]
   3ca14:	strh	r1, [r4, #130]	; 0x82
   3ca18:	str	ip, [r3]
   3ca1c:	str	r2, [r4, #28]
   3ca20:	str	r0, [r4, #20]
   3ca24:	str	r1, [r3, #16]
   3ca28:	str	r0, [r3, #20]
   3ca2c:	ldr	r1, [r4, #64]	; 0x40
   3ca30:	ldr	ip, [r4, #60]	; 0x3c
   3ca34:	sub	r1, r1, r2
   3ca38:	mvn	lr, #3
   3ca3c:	cmp	r1, lr
   3ca40:	add	r2, ip, r2
   3ca44:	movhi	r1, lr
   3ca48:	mov	ip, #6
   3ca4c:	strh	ip, [r3, #14]
   3ca50:	str	r2, [r4, #16]
   3ca54:	str	r1, [r4, #24]
   3ca58:	str	lr, [r3, #4]
   3ca5c:	add	sp, sp, #8
   3ca60:	pop	{r4, r5, r6, pc}
   3ca64:	mov	r1, #4
   3ca68:	ldr	r0, [r4, #40]	; 0x28
   3ca6c:	str	r1, [sp]
   3ca70:	add	r1, r4, #84	; 0x54
   3ca74:	ldr	r6, [r4, #48]	; 0x30
   3ca78:	blx	r6
   3ca7c:	cmp	r0, #0
   3ca80:	beq	3c9a4 <flatcc_builder_start_string@@Base+0x54>
   3ca84:	bl	141f8 <__assert_fail@plt+0xb0>
   3ca88:	mvn	r0, #0
   3ca8c:	b	3ca5c <flatcc_builder_start_string@@Base+0x10c>
   3ca90:	stmiacc	r3!, {r0, r3, r4, r5, r9, sl, fp, pc}^

0003ca94 <flatcc_builder_reserve_table@@Base>:
   3ca94:	cmp	r1, #0
   3ca98:	push	{r4, r5, r6, r7, lr}
   3ca9c:	sub	sp, sp, #12
   3caa0:	blt	3cb78 <flatcc_builder_reserve_table@@Base+0xe4>
   3caa4:	ldr	r2, [r0, #32]
   3caa8:	add	r1, r1, #2
   3caac:	mov	r5, r0
   3cab0:	ldrh	r6, [r2, #28]
   3cab4:	ldr	r3, [r2, #16]
   3cab8:	ldr	r0, [r0, #56]	; 0x38
   3cabc:	lsl	r4, r1, #1
   3cac0:	add	r6, r3, r6, lsl #1
   3cac4:	add	r2, r6, r4
   3cac8:	cmp	r2, r0
   3cacc:	bhi	3cb28 <flatcc_builder_reserve_table@@Base+0x94>
   3cad0:	ldr	r3, [r5, #52]	; 0x34
   3cad4:	adds	r3, r3, r6
   3cad8:	streq	r3, [r5, #4]
   3cadc:	mvneq	r0, #0
   3cae0:	beq	3cb20 <flatcc_builder_reserve_table@@Base+0x8c>
   3cae4:	ldr	r2, [r5, #32]
   3cae8:	add	r3, r3, #4
   3caec:	str	r3, [r5, #4]
   3caf0:	ldr	r6, [r2, #20]
   3caf4:	ldr	r3, [r5, #80]	; 0x50
   3caf8:	add	r2, r4, r6
   3cafc:	sub	r2, r2, #3
   3cb00:	cmp	r2, r3
   3cb04:	bhi	3cb50 <flatcc_builder_reserve_table@@Base+0xbc>
   3cb08:	ldr	r3, [r5, #76]	; 0x4c
   3cb0c:	add	r3, r3, r6
   3cb10:	cmp	r3, #0
   3cb14:	movne	r0, #0
   3cb18:	mvneq	r0, #0
   3cb1c:	str	r3, [r5]
   3cb20:	add	sp, sp, #12
   3cb24:	pop	{r4, r5, r6, r7, pc}
   3cb28:	mov	r3, #0
   3cb2c:	ldr	r0, [r5, #40]	; 0x28
   3cb30:	add	r1, r5, #52	; 0x34
   3cb34:	str	r3, [sp]
   3cb38:	mov	r3, #1
   3cb3c:	ldr	r7, [r5, #48]	; 0x30
   3cb40:	blx	r7
   3cb44:	cmp	r0, #0
   3cb48:	beq	3cad0 <flatcc_builder_reserve_table@@Base+0x3c>
   3cb4c:	bl	141f8 <__assert_fail@plt+0xb0>
   3cb50:	mov	r3, #3
   3cb54:	ldr	r0, [r5, #40]	; 0x28
   3cb58:	add	r1, r5, #76	; 0x4c
   3cb5c:	str	r3, [sp]
   3cb60:	mov	r3, #0
   3cb64:	ldr	r4, [r5, #48]	; 0x30
   3cb68:	blx	r4
   3cb6c:	cmp	r0, #0
   3cb70:	beq	3cb08 <flatcc_builder_reserve_table@@Base+0x74>
   3cb74:	b	3cb4c <flatcc_builder_reserve_table@@Base+0xb8>
   3cb78:	ldr	r3, [pc, #12]	; 3cb8c <flatcc_builder_reserve_table@@Base+0xf8>
   3cb7c:	ldr	r2, [pc, #12]	; 3cb90 <flatcc_builder_reserve_table@@Base+0xfc>
   3cb80:	ldr	r1, [pc, #12]	; 3cb94 <flatcc_builder_reserve_table@@Base+0x100>
   3cb84:	ldr	r0, [pc, #12]	; 3cb98 <flatcc_builder_reserve_table@@Base+0x104>
   3cb88:	bl	14148 <__assert_fail@plt>
   3cb8c:	andeq	sp, r5, ip, lsr sp
   3cb90:	andeq	r0, r0, r9, lsr #8
   3cb94:	ldrdeq	sp, [r5], -ip
   3cb98:	andeq	lr, r5, ip, ror #4

0003cb9c <flatcc_builder_start_table@@Base>:
   3cb9c:	push	{r4, r5, r6, r7, lr}
   3cba0:	mov	r5, r1
   3cba4:	ldr	r1, [r0, #156]	; 0x9c
   3cba8:	ldr	r3, [r0, #160]	; 0xa0
   3cbac:	add	r2, r1, #1
   3cbb0:	cmp	r2, r3
   3cbb4:	sub	sp, sp, #12
   3cbb8:	mov	r4, r0
   3cbbc:	str	r2, [r0, #156]	; 0x9c
   3cbc0:	ble	3cc30 <flatcc_builder_start_table@@Base+0x94>
   3cbc4:	ldr	r3, [r0, #176]	; 0xb0
   3cbc8:	cmp	r3, #0
   3cbcc:	cmpgt	r2, r3
   3cbd0:	movgt	r3, #1
   3cbd4:	movle	r3, #0
   3cbd8:	bgt	3cdd0 <flatcc_builder_start_table@@Base+0x234>
   3cbdc:	add	r1, r1, r1, lsl #3
   3cbe0:	ldr	r0, [r0, #88]	; 0x58
   3cbe4:	lsl	r6, r1, #2
   3cbe8:	add	r2, r6, #36	; 0x24
   3cbec:	cmp	r2, r0
   3cbf0:	bhi	3cdac <flatcc_builder_start_table@@Base+0x210>
   3cbf4:	ldr	r3, [r4, #84]	; 0x54
   3cbf8:	add	r3, r3, r6
   3cbfc:	cmp	r3, #0
   3cc00:	str	r3, [r4, #32]
   3cc04:	beq	3cdd0 <flatcc_builder_start_table@@Base+0x234>
   3cc08:	ldr	r2, [r4, #88]	; 0x58
   3cc0c:	ldr	r0, [pc, #452]	; 3cdd8 <flatcc_builder_start_table@@Base+0x23c>
   3cc10:	ldr	r1, [r4, #176]	; 0xb0
   3cc14:	umull	r0, r2, r0, r2
   3cc18:	lsr	r2, r2, #3
   3cc1c:	cmp	r2, r1
   3cc20:	cmpgt	r1, #0
   3cc24:	str	r2, [r4, #160]	; 0xa0
   3cc28:	strgt	r1, [r4, #160]	; 0xa0
   3cc2c:	b	3cc3c <flatcc_builder_start_table@@Base+0xa0>
   3cc30:	ldr	r3, [r0, #32]
   3cc34:	add	r3, r3, #36	; 0x24
   3cc38:	str	r3, [r0, #32]
   3cc3c:	ldr	ip, [r4, #20]
   3cc40:	ldr	lr, [r4, #28]
   3cc44:	ldrh	r7, [r4, #130]	; 0x82
   3cc48:	ldr	r6, [r4, #4]
   3cc4c:	ldr	r0, [r4, #52]	; 0x34
   3cc50:	add	r2, ip, lr
   3cc54:	str	ip, [r3, #8]
   3cc58:	add	r2, r2, #7
   3cc5c:	mov	ip, #4
   3cc60:	strh	r7, [r3, #12]
   3cc64:	sub	r1, r6, r0
   3cc68:	strh	ip, [r4, #130]	; 0x82
   3cc6c:	bic	r2, r2, #7
   3cc70:	mvn	r6, #3
   3cc74:	mov	ip, #0
   3cc78:	str	lr, [r3]
   3cc7c:	str	r6, [r3, #4]
   3cc80:	str	r2, [r4, #28]
   3cc84:	str	ip, [r4, #20]
   3cc88:	str	r1, [r3, #16]
   3cc8c:	ldr	lr, [r4, #76]	; 0x4c
   3cc90:	ldr	r2, [r4]
   3cc94:	add	r5, r5, #2
   3cc98:	sub	r2, r2, lr
   3cc9c:	str	r2, [r3, #20]
   3cca0:	ldr	r2, [r4, #12]
   3cca4:	lsl	r5, r5, #1
   3cca8:	str	r2, [r3, #24]
   3ccac:	ldrh	r6, [r4, #8]
   3ccb0:	ldr	lr, [pc, #292]	; 3cddc <flatcc_builder_start_table@@Base+0x240>
   3ccb4:	strh	r6, [r3, #28]
   3ccb8:	add	r6, r1, r6, lsl #1
   3ccbc:	ldr	r1, [r4, #56]	; 0x38
   3ccc0:	add	r2, r6, r5
   3ccc4:	cmp	r2, r1
   3ccc8:	mov	r1, #3
   3cccc:	strh	ip, [r4, #8]
   3ccd0:	str	lr, [r4, #12]
   3ccd4:	strh	r1, [r3, #14]
   3ccd8:	bhi	3cd5c <flatcc_builder_start_table@@Base+0x1c0>
   3ccdc:	adds	r6, r6, r0
   3cce0:	streq	r6, [r4, #4]
   3cce4:	beq	3cdd0 <flatcc_builder_start_table@@Base+0x234>
   3cce8:	ldr	r3, [r4, #32]
   3ccec:	add	r6, r6, #4
   3ccf0:	str	r6, [r4, #4]
   3ccf4:	ldr	r6, [r3, #20]
   3ccf8:	sub	r2, r5, #3
   3ccfc:	ldr	r3, [r4, #80]	; 0x50
   3cd00:	add	r2, r2, r6
   3cd04:	cmp	r2, r3
   3cd08:	bhi	3cd84 <flatcc_builder_start_table@@Base+0x1e8>
   3cd0c:	ldr	r3, [r4, #76]	; 0x4c
   3cd10:	add	r3, r3, r6
   3cd14:	cmp	r3, #0
   3cd18:	str	r3, [r4]
   3cd1c:	beq	3cdd0 <flatcc_builder_start_table@@Base+0x234>
   3cd20:	ldr	ip, [r4, #28]
   3cd24:	ldr	r3, [r4, #64]	; 0x40
   3cd28:	ldr	r2, [pc, #176]	; 3cde0 <flatcc_builder_start_table@@Base+0x244>
   3cd2c:	sub	r3, r3, ip
   3cd30:	ldr	r1, [r4, #60]	; 0x3c
   3cd34:	ldr	lr, [r4, #32]
   3cd38:	cmp	r3, r2
   3cd3c:	mov	r0, #0
   3cd40:	add	r1, r1, ip
   3cd44:	movcs	r3, r2
   3cd48:	str	r1, [r4, #16]
   3cd4c:	str	r3, [r4, #24]
   3cd50:	str	r2, [lr, #4]
   3cd54:	add	sp, sp, #12
   3cd58:	pop	{r4, r5, r6, r7, pc}
   3cd5c:	ldr	r0, [r4, #40]	; 0x28
   3cd60:	mov	r3, #1
   3cd64:	str	ip, [sp]
   3cd68:	add	r1, r4, #52	; 0x34
   3cd6c:	ldr	r7, [r4, #48]	; 0x30
   3cd70:	blx	r7
   3cd74:	cmp	r0, #0
   3cd78:	bne	3cda8 <flatcc_builder_start_table@@Base+0x20c>
   3cd7c:	ldr	r0, [r4, #52]	; 0x34
   3cd80:	b	3ccdc <flatcc_builder_start_table@@Base+0x140>
   3cd84:	mov	r3, #3
   3cd88:	ldr	r0, [r4, #40]	; 0x28
   3cd8c:	add	r1, r4, #76	; 0x4c
   3cd90:	str	r3, [sp]
   3cd94:	mov	r3, #0
   3cd98:	ldr	r5, [r4, #48]	; 0x30
   3cd9c:	blx	r5
   3cda0:	cmp	r0, #0
   3cda4:	beq	3cd0c <flatcc_builder_start_table@@Base+0x170>
   3cda8:	bl	141f8 <__assert_fail@plt+0xb0>
   3cdac:	mov	r1, #4
   3cdb0:	ldr	r0, [r4, #40]	; 0x28
   3cdb4:	str	r1, [sp]
   3cdb8:	add	r1, r4, #84	; 0x54
   3cdbc:	ldr	r7, [r4, #48]	; 0x30
   3cdc0:	blx	r7
   3cdc4:	cmp	r0, #0
   3cdc8:	beq	3cbf4 <flatcc_builder_start_table@@Base+0x58>
   3cdcc:	b	3cda8 <flatcc_builder_start_table@@Base+0x20c>
   3cdd0:	mvn	r0, #0
   3cdd4:	b	3cd54 <flatcc_builder_start_table@@Base+0x1b8>
   3cdd8:	stmiacc	r3!, {r0, r3, r4, r5, r9, sl, fp, pc}^
   3cddc:	svccs	0x00693b52
   3cde0:	strdeq	pc, [r0], -ip

0003cde4 <flatcc_builder_create_vtable@@Base>:
   3cde4:	push	{r4, r5, r6, lr}
   3cde8:	sub	sp, sp, #80	; 0x50
   3cdec:	mov	r3, #0
   3cdf0:	cmp	r2, #0
   3cdf4:	str	r3, [sp, #8]
   3cdf8:	str	r3, [sp, #12]
   3cdfc:	mov	r4, r0
   3ce00:	ldr	r3, [r0, #152]	; 0x98
   3ce04:	beq	3ce78 <flatcc_builder_create_vtable@@Base+0x94>
   3ce08:	mov	r0, #1
   3ce0c:	cmp	r3, #0
   3ce10:	str	r1, [sp, #16]
   3ce14:	str	r2, [sp, #8]
   3ce18:	str	r2, [sp, #20]
   3ce1c:	str	r0, [sp, #12]
   3ce20:	mov	r1, r2
   3ce24:	beq	3ce90 <flatcc_builder_create_vtable@@Base+0xac>
   3ce28:	ldr	r3, [r4, #136]	; 0x88
   3ce2c:	sub	r5, r3, r2
   3ce30:	cmp	r3, r5
   3ce34:	ble	3ce8c <flatcc_builder_create_vtable@@Base+0xa8>
   3ce38:	ldr	r0, [r4, #36]	; 0x24
   3ce3c:	mov	r3, r5
   3ce40:	str	r2, [sp]
   3ce44:	add	r1, sp, #16
   3ce48:	ldr	r6, [r4, #44]	; 0x2c
   3ce4c:	mov	r2, #1
   3ce50:	blx	r6
   3ce54:	cmp	r0, #0
   3ce58:	bne	3cef4 <flatcc_builder_create_vtable@@Base+0x110>
   3ce5c:	cmp	r5, #0
   3ce60:	str	r5, [r4, #136]	; 0x88
   3ce64:	beq	3ce6c <flatcc_builder_create_vtable@@Base+0x88>
   3ce68:	add	r5, r5, #1
   3ce6c:	mov	r0, r5
   3ce70:	add	sp, sp, #80	; 0x50
   3ce74:	pop	{r4, r5, r6, pc}
   3ce78:	cmp	r3, #0
   3ce7c:	bne	3ce8c <flatcc_builder_create_vtable@@Base+0xa8>
   3ce80:	ldr	r2, [r0, #180]	; 0xb4
   3ce84:	cmp	r2, #0
   3ce88:	beq	3cee8 <flatcc_builder_create_vtable@@Base+0x104>
   3ce8c:	bl	14244 <__assert_fail@plt+0xfc>
   3ce90:	ldr	r3, [r4, #180]	; 0xb4
   3ce94:	cmp	r3, #0
   3ce98:	bne	3ce28 <flatcc_builder_create_vtable@@Base+0x44>
   3ce9c:	ldr	r5, [r4, #140]	; 0x8c
   3cea0:	add	r3, r5, r2
   3cea4:	cmp	r5, r3
   3cea8:	str	r3, [r4, #140]	; 0x8c
   3ceac:	movle	r2, r0
   3ceb0:	bgt	3cf08 <flatcc_builder_create_vtable@@Base+0x124>
   3ceb4:	ldr	r0, [r4, #36]	; 0x24
   3ceb8:	mov	r3, r5
   3cebc:	str	r1, [sp]
   3cec0:	add	r1, sp, #16
   3cec4:	ldr	r4, [r4, #44]	; 0x2c
   3cec8:	blx	r4
   3cecc:	cmp	r0, #0
   3ced0:	beq	3ce68 <flatcc_builder_create_vtable@@Base+0x84>
   3ced4:	ldr	r3, [pc, #48]	; 3cf0c <flatcc_builder_create_vtable@@Base+0x128>
   3ced8:	ldr	r2, [pc, #48]	; 3cf10 <flatcc_builder_create_vtable@@Base+0x12c>
   3cedc:	ldr	r1, [pc, #48]	; 3cf14 <flatcc_builder_create_vtable@@Base+0x130>
   3cee0:	ldr	r0, [pc, #48]	; 3cf18 <flatcc_builder_create_vtable@@Base+0x134>
   3cee4:	bl	14148 <__assert_fail@plt>
   3cee8:	ldr	r5, [r4, #140]	; 0x8c
   3ceec:	mov	r1, r2
   3cef0:	b	3ceb4 <flatcc_builder_create_vtable@@Base+0xd0>
   3cef4:	ldr	r3, [pc, #32]	; 3cf1c <flatcc_builder_create_vtable@@Base+0x138>
   3cef8:	ldr	r2, [pc, #32]	; 3cf20 <flatcc_builder_create_vtable@@Base+0x13c>
   3cefc:	ldr	r1, [pc, #16]	; 3cf14 <flatcc_builder_create_vtable@@Base+0x130>
   3cf00:	ldr	r0, [pc, #16]	; 3cf18 <flatcc_builder_create_vtable@@Base+0x134>
   3cf04:	bl	14148 <__assert_fail@plt>
   3cf08:	bl	1421c <__assert_fail@plt+0xd4>
   3cf0c:	muleq	r5, ip, r8
   3cf10:	andeq	r0, r0, r5, lsr #5
   3cf14:	ldrdeq	sp, [r5], -ip
   3cf18:	andeq	sp, r4, r4, ror r2
   3cf1c:	andeq	sp, r5, r8, lsr #17
   3cf20:	andeq	r0, r0, fp, lsl #5

0003cf24 <flatcc_builder_create_cached_vtable@@Base>:
   3cf24:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3cf28:	sub	sp, sp, #28
   3cf2c:	ldr	r4, [r0, #116]	; 0x74
   3cf30:	mov	sl, r3
   3cf34:	cmp	r4, #0
   3cf38:	mov	r8, r0
   3cf3c:	str	r1, [sp, #8]
   3cf40:	mov	r7, r2
   3cf44:	rsbne	r3, r4, #32
   3cf48:	beq	3d0a0 <flatcc_builder_create_cached_vtable@@Base+0x17c>
   3cf4c:	lsr	sl, sl, r3
   3cf50:	ldr	r3, [r8, #92]	; 0x5c
   3cf54:	adds	r2, r3, sl, lsl #2
   3cf58:	str	r3, [sp, #16]
   3cf5c:	str	r2, [sp, #20]
   3cf60:	beq	3d094 <flatcc_builder_create_cached_vtable@@Base+0x170>
   3cf64:	ldr	r5, [r3, sl, lsl #2]
   3cf68:	cmp	r5, #0
   3cf6c:	beq	3d190 <flatcc_builder_create_cached_vtable@@Base+0x26c>
   3cf70:	mov	r3, #0
   3cf74:	ldr	fp, [r8, #100]	; 0x64
   3cf78:	ldr	r6, [r8, #68]	; 0x44
   3cf7c:	mov	r9, r2
   3cf80:	str	r3, [sp, #12]
   3cf84:	b	3cf98 <flatcc_builder_create_cached_vtable@@Base+0x74>
   3cf88:	ldr	r5, [r4, #12]
   3cf8c:	add	r9, r4, #12
   3cf90:	cmp	r5, #0
   3cf94:	beq	3cfe8 <flatcc_builder_create_cached_vtable@@Base+0xc4>
   3cf98:	add	r4, fp, r5
   3cf9c:	ldr	r2, [r4, #8]
   3cfa0:	add	r1, r6, r2
   3cfa4:	ldrh	r2, [r6, r2]
   3cfa8:	cmp	r2, r7
   3cfac:	bne	3cf88 <flatcc_builder_create_cached_vtable@@Base+0x64>
   3cfb0:	mov	r2, r7
   3cfb4:	ldr	r0, [sp, #8]
   3cfb8:	bl	13ff8 <memcmp@plt>
   3cfbc:	cmp	r0, #0
   3cfc0:	bne	3cf88 <flatcc_builder_create_cached_vtable@@Base+0x64>
   3cfc4:	ldr	r1, [r4, #4]
   3cfc8:	ldr	r2, [r8, #152]	; 0x98
   3cfcc:	cmp	r1, r2
   3cfd0:	beq	3d064 <flatcc_builder_create_cached_vtable@@Base+0x140>
   3cfd4:	ldr	r5, [r4, #12]
   3cfd8:	add	r9, r4, #12
   3cfdc:	cmp	r5, #0
   3cfe0:	str	r4, [sp, #12]
   3cfe4:	bne	3cf98 <flatcc_builder_create_cached_vtable@@Base+0x74>
   3cfe8:	ldr	r4, [r8, #124]	; 0x7c
   3cfec:	ldr	r3, [r8, #104]	; 0x68
   3cff0:	add	r2, r4, #16
   3cff4:	cmp	r2, r3
   3cff8:	bhi	3d168 <flatcc_builder_create_cached_vtable@@Base+0x244>
   3cffc:	ldr	r5, [r8, #100]	; 0x64
   3d000:	adds	r6, r5, r4
   3d004:	beq	3d094 <flatcc_builder_create_cached_vtable@@Base+0x170>
   3d008:	ldr	r3, [r8, #124]	; 0x7c
   3d00c:	ldr	r0, [sp, #16]
   3d010:	ldr	r2, [r8, #152]	; 0x98
   3d014:	add	r1, r3, #16
   3d018:	str	r1, [r8, #124]	; 0x7c
   3d01c:	str	r2, [r6, #4]
   3d020:	ldr	r1, [r0, sl, lsl #2]
   3d024:	mov	r2, r7
   3d028:	str	r1, [r6, #12]
   3d02c:	str	r3, [r0, sl, lsl #2]
   3d030:	ldr	r1, [sp, #8]
   3d034:	mov	r0, r8
   3d038:	bl	3cde4 <flatcc_builder_create_vtable@@Base>
   3d03c:	cmp	r0, #0
   3d040:	str	r0, [r5, r4]
   3d044:	beq	3d094 <flatcc_builder_create_cached_vtable@@Base+0x170>
   3d048:	ldr	r3, [sp, #12]
   3d04c:	cmp	r3, #0
   3d050:	beq	3d198 <flatcc_builder_create_cached_vtable@@Base+0x274>
   3d054:	ldr	r3, [r3, #8]
   3d058:	str	r3, [r6, #8]
   3d05c:	add	sp, sp, #28
   3d060:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3d064:	ldr	r3, [sp, #20]
   3d068:	cmp	r3, r9
   3d06c:	beq	3d088 <flatcc_builder_create_cached_vtable@@Base+0x164>
   3d070:	ldr	r2, [sp, #16]
   3d074:	ldr	r3, [r4, #12]
   3d078:	str	r3, [r9]
   3d07c:	ldr	r3, [r2, sl, lsl #2]
   3d080:	str	r3, [r4, #12]
   3d084:	str	r5, [r2, sl, lsl #2]
   3d088:	ldr	r0, [r4]
   3d08c:	add	sp, sp, #28
   3d090:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3d094:	mov	r0, #0
   3d098:	add	sp, sp, #28
   3d09c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3d0a0:	ldr	r3, [r0, #124]	; 0x7c
   3d0a4:	add	r5, r0, #92	; 0x5c
   3d0a8:	cmp	r3, #0
   3d0ac:	bne	3d25c <flatcc_builder_create_cached_vtable@@Base+0x338>
   3d0b0:	ldr	r3, [r0, #104]	; 0x68
   3d0b4:	cmp	r3, #15
   3d0b8:	bls	3d13c <flatcc_builder_create_cached_vtable@@Base+0x218>
   3d0bc:	ldr	r3, [r8, #100]	; 0x64
   3d0c0:	cmp	r3, #0
   3d0c4:	beq	3d094 <flatcc_builder_create_cached_vtable@@Base+0x170>
   3d0c8:	mov	r2, #16
   3d0cc:	mov	r3, #5
   3d0d0:	str	r2, [r8, #124]	; 0x7c
   3d0d4:	ldr	r0, [r8, #40]	; 0x28
   3d0d8:	mov	r1, r5
   3d0dc:	str	r3, [sp]
   3d0e0:	mov	r2, #256	; 0x100
   3d0e4:	ldr	r5, [r8, #48]	; 0x30
   3d0e8:	mov	r3, #1
   3d0ec:	blx	r5
   3d0f0:	cmp	r0, #0
   3d0f4:	bne	3d094 <flatcc_builder_create_cached_vtable@@Base+0x170>
   3d0f8:	ldr	r1, [r8, #96]	; 0x60
   3d0fc:	mov	r3, #256	; 0x100
   3d100:	b	3d108 <flatcc_builder_create_cached_vtable@@Base+0x1e4>
   3d104:	mov	r3, r2
   3d108:	lsl	r2, r3, #1
   3d10c:	cmp	r2, r1
   3d110:	bls	3d104 <flatcc_builder_create_cached_vtable@@Base+0x1e0>
   3d114:	lsr	r3, r3, #2
   3d118:	cmp	r3, #1
   3d11c:	bls	3d1e8 <flatcc_builder_create_cached_vtable@@Base+0x2c4>
   3d120:	mov	r2, #1
   3d124:	add	r4, r4, #1
   3d128:	cmp	r3, r2, lsl r4
   3d12c:	bhi	3d124 <flatcc_builder_create_cached_vtable@@Base+0x200>
   3d130:	rsb	r3, r4, #32
   3d134:	str	r4, [r8, #116]	; 0x74
   3d138:	b	3cf4c <flatcc_builder_create_cached_vtable@@Base+0x28>
   3d13c:	mov	r3, #6
   3d140:	ldr	r0, [r0, #40]	; 0x28
   3d144:	mov	r2, #16
   3d148:	str	r3, [sp]
   3d14c:	add	r1, r8, #100	; 0x64
   3d150:	ldr	r6, [r8, #48]	; 0x30
   3d154:	mov	r3, r4
   3d158:	blx	r6
   3d15c:	cmp	r0, #0
   3d160:	beq	3d0bc <flatcc_builder_create_cached_vtable@@Base+0x198>
   3d164:	b	3d250 <flatcc_builder_create_cached_vtable@@Base+0x32c>
   3d168:	mov	r3, #6
   3d16c:	ldr	r0, [r8, #40]	; 0x28
   3d170:	add	r1, r8, #100	; 0x64
   3d174:	str	r3, [sp]
   3d178:	mov	r3, #0
   3d17c:	ldr	r5, [r8, #48]	; 0x30
   3d180:	blx	r5
   3d184:	cmp	r0, #0
   3d188:	beq	3cffc <flatcc_builder_create_cached_vtable@@Base+0xd8>
   3d18c:	b	3d250 <flatcc_builder_create_cached_vtable@@Base+0x32c>
   3d190:	str	r5, [sp, #12]
   3d194:	b	3cfe8 <flatcc_builder_create_cached_vtable@@Base+0xc4>
   3d198:	ldr	r3, [r8, #172]	; 0xac
   3d19c:	ldr	r9, [r8, #120]	; 0x78
   3d1a0:	cmp	r3, #0
   3d1a4:	add	r2, r9, r7
   3d1a8:	beq	3d1f0 <flatcc_builder_create_cached_vtable@@Base+0x2cc>
   3d1ac:	cmp	r3, r2
   3d1b0:	bcs	3d1f0 <flatcc_builder_create_cached_vtable@@Base+0x2cc>
   3d1b4:	ldr	r3, [r8, #116]	; 0x74
   3d1b8:	cmp	r3, #0
   3d1bc:	beq	3d05c <flatcc_builder_create_cached_vtable@@Base+0x138>
   3d1c0:	ldr	r6, [sp, #12]
   3d1c4:	ldr	r2, [r8, #96]	; 0x60
   3d1c8:	mov	r1, r6
   3d1cc:	ldr	r0, [r8, #92]	; 0x5c
   3d1d0:	bl	140ac <memset@plt>
   3d1d4:	mov	r3, #16
   3d1d8:	ldr	r0, [r5, r4]
   3d1dc:	str	r6, [r8, #120]	; 0x78
   3d1e0:	str	r3, [r8, #124]	; 0x7c
   3d1e4:	b	3d05c <flatcc_builder_create_cached_vtable@@Base+0x138>
   3d1e8:	mov	r3, #32
   3d1ec:	b	3d134 <flatcc_builder_create_cached_vtable@@Base+0x210>
   3d1f0:	ldr	r3, [r8, #72]	; 0x48
   3d1f4:	cmp	r3, r2
   3d1f8:	bcc	3d22c <flatcc_builder_create_cached_vtable@@Base+0x308>
   3d1fc:	ldr	r3, [r8, #68]	; 0x44
   3d200:	adds	r0, r3, r9
   3d204:	beq	3d254 <flatcc_builder_create_cached_vtable@@Base+0x330>
   3d208:	ldr	r3, [r8, #120]	; 0x78
   3d20c:	ldr	r1, [sp, #8]
   3d210:	add	ip, r3, r7
   3d214:	str	r3, [r6, #8]
   3d218:	mov	r2, r7
   3d21c:	str	ip, [r8, #120]	; 0x78
   3d220:	bl	13fe0 <memcpy@plt>
   3d224:	ldr	r0, [r5, r4]
   3d228:	b	3d05c <flatcc_builder_create_cached_vtable@@Base+0x138>
   3d22c:	mov	r3, #2
   3d230:	ldr	r0, [r8, #40]	; 0x28
   3d234:	add	r1, r8, #68	; 0x44
   3d238:	str	r3, [sp]
   3d23c:	mov	r3, #0
   3d240:	ldr	sl, [r8, #48]	; 0x30
   3d244:	blx	sl
   3d248:	cmp	r0, #0
   3d24c:	beq	3d1fc <flatcc_builder_create_cached_vtable@@Base+0x2d8>
   3d250:	bl	141f8 <__assert_fail@plt+0xb0>
   3d254:	mvn	r0, #0
   3d258:	b	3d05c <flatcc_builder_create_cached_vtable@@Base+0x138>
   3d25c:	ldr	r3, [pc, #12]	; 3d270 <flatcc_builder_create_cached_vtable@@Base+0x34c>
   3d260:	ldr	r2, [pc, #12]	; 3d274 <flatcc_builder_create_cached_vtable@@Base+0x350>
   3d264:	ldr	r1, [pc, #12]	; 3d278 <flatcc_builder_create_cached_vtable@@Base+0x354>
   3d268:	ldr	r0, [pc, #12]	; 3d27c <flatcc_builder_create_cached_vtable@@Base+0x358>
   3d26c:	bl	14148 <__assert_fail@plt>
   3d270:	andeq	sp, r5, ip, asr sp
   3d274:	andeq	r0, r0, r6, asr r1
   3d278:	ldrdeq	sp, [r5], -ip
   3d27c:	andeq	lr, r5, r8, ror r2

0003d280 <flatcc_builder_create_table@@Base>:
   3d280:	push	{r4, r5, r6, r7, r8, lr}
   3d284:	sub	sp, sp, #88	; 0x58
   3d288:	ldr	r4, [sp, #116]	; 0x74
   3d28c:	ldr	lr, [sp, #120]	; 0x78
   3d290:	cmp	r4, #0
   3d294:	blt	3d3cc <flatcc_builder_create_table@@Base+0x14c>
   3d298:	mov	r8, r2
   3d29c:	ands	r2, lr, #1
   3d2a0:	beq	3d3f8 <flatcc_builder_create_table@@Base+0x178>
   3d2a4:	mov	r5, r0
   3d2a8:	ldrh	r0, [r0, #128]	; 0x80
   3d2ac:	cmp	r3, #4
   3d2b0:	movcc	r3, #4
   3d2b4:	ldr	ip, [r5, #136]	; 0x88
   3d2b8:	cmp	r0, r3
   3d2bc:	mvn	r0, #3
   3d2c0:	strhcc	r3, [r5, #128]	; 0x80
   3d2c4:	sub	r7, ip, r8
   3d2c8:	sub	r3, r3, #1
   3d2cc:	sub	r0, r0, r8
   3d2d0:	and	r7, r7, r3
   3d2d4:	add	r0, r0, ip
   3d2d8:	sub	lr, lr, #1
   3d2dc:	sub	r0, r0, r7
   3d2e0:	sub	lr, r0, lr
   3d2e4:	cmp	r4, #0
   3d2e8:	str	lr, [sp, #12]
   3d2ec:	beq	3d320 <flatcc_builder_create_table@@Base+0xa0>
   3d2f0:	ldr	ip, [sp, #112]	; 0x70
   3d2f4:	mvn	r6, #3
   3d2f8:	add	r4, ip, r4, lsl #1
   3d2fc:	sub	r6, r6, r0
   3d300:	ldrh	r3, [ip], #2
   3d304:	sub	lr, r6, r3
   3d308:	ldr	r0, [r1, r3]
   3d30c:	cmp	r4, ip
   3d310:	add	r0, r0, lr
   3d314:	str	r0, [r1, r3]
   3d318:	bne	3d300 <flatcc_builder_create_table@@Base+0x80>
   3d31c:	ldr	ip, [r5, #136]	; 0x88
   3d320:	cmp	r8, #0
   3d324:	mov	r3, #4
   3d328:	mov	r0, #1
   3d32c:	str	r3, [sp, #16]
   3d330:	movne	r2, #2
   3d334:	str	r3, [sp, #28]
   3d338:	addne	r3, r8, r3
   3d33c:	str	r0, [sp, #20]
   3d340:	add	lr, sp, #12
   3d344:	strne	r1, [sp, #32]
   3d348:	strne	r8, [sp, #36]	; 0x24
   3d34c:	strne	r3, [sp, #16]
   3d350:	strne	r2, [sp, #20]
   3d354:	movne	r0, #3
   3d358:	moveq	r0, #2
   3d35c:	cmp	r7, #0
   3d360:	str	lr, [sp, #24]
   3d364:	beq	3d390 <flatcc_builder_create_table@@Base+0x110>
   3d368:	add	r2, r2, #1
   3d36c:	add	r1, sp, #88	; 0x58
   3d370:	add	r1, r1, r2, lsl #3
   3d374:	ldr	lr, [pc, #144]	; 3d40c <flatcc_builder_create_table@@Base+0x18c>
   3d378:	mov	r2, r0
   3d37c:	add	r3, r3, r7
   3d380:	str	r7, [r1, #-68]	; 0xffffffbc
   3d384:	str	r3, [sp, #16]
   3d388:	str	r0, [sp, #20]
   3d38c:	str	lr, [r1, #-72]	; 0xffffffb8
   3d390:	sub	r4, ip, r3
   3d394:	cmp	r4, ip
   3d398:	bge	3d3f4 <flatcc_builder_create_table@@Base+0x174>
   3d39c:	ldr	r0, [r5, #36]	; 0x24
   3d3a0:	add	r1, sp, #24
   3d3a4:	str	r3, [sp]
   3d3a8:	mov	r3, r4
   3d3ac:	ldr	r6, [r5, #44]	; 0x2c
   3d3b0:	blx	r6
   3d3b4:	cmp	r0, #0
   3d3b8:	bne	3d3e0 <flatcc_builder_create_table@@Base+0x160>
   3d3bc:	mov	r0, r4
   3d3c0:	str	r4, [r5, #136]	; 0x88
   3d3c4:	add	sp, sp, #88	; 0x58
   3d3c8:	pop	{r4, r5, r6, r7, r8, pc}
   3d3cc:	ldr	r3, [pc, #60]	; 3d410 <flatcc_builder_create_table@@Base+0x190>
   3d3d0:	ldr	r2, [pc, #60]	; 3d414 <flatcc_builder_create_table@@Base+0x194>
   3d3d4:	ldr	r1, [pc, #60]	; 3d418 <flatcc_builder_create_table@@Base+0x198>
   3d3d8:	ldr	r0, [pc, #60]	; 3d41c <flatcc_builder_create_table@@Base+0x19c>
   3d3dc:	bl	14148 <__assert_fail@plt>
   3d3e0:	ldr	r3, [pc, #56]	; 3d420 <flatcc_builder_create_table@@Base+0x1a0>
   3d3e4:	ldr	r2, [pc, #56]	; 3d424 <flatcc_builder_create_table@@Base+0x1a4>
   3d3e8:	ldr	r1, [pc, #40]	; 3d418 <flatcc_builder_create_table@@Base+0x198>
   3d3ec:	ldr	r0, [pc, #52]	; 3d428 <flatcc_builder_create_table@@Base+0x1a8>
   3d3f0:	bl	14148 <__assert_fail@plt>
   3d3f4:	bl	14244 <__assert_fail@plt+0xfc>
   3d3f8:	ldr	r3, [pc, #16]	; 3d410 <flatcc_builder_create_table@@Base+0x190>
   3d3fc:	ldr	r2, [pc, #40]	; 3d42c <flatcc_builder_create_table@@Base+0x1ac>
   3d400:	ldr	r1, [pc, #16]	; 3d418 <flatcc_builder_create_table@@Base+0x198>
   3d404:	ldr	r0, [pc, #36]	; 3d430 <flatcc_builder_create_table@@Base+0x1b0>
   3d408:	bl	14148 <__assert_fail@plt>
   3d40c:	andeq	sp, r5, r4, lsr #18
   3d410:	andeq	sp, r5, r8, ror #26
   3d414:	ldrdeq	r0, [r0], -r5
   3d418:	ldrdeq	sp, [r5], -ip
   3d41c:	andeq	lr, r5, r8, lsl #5
   3d420:	andeq	sp, r5, r8, lsr #17
   3d424:	andeq	r0, r0, fp, lsl #5
   3d428:	andeq	sp, r4, r4, ror r2
   3d42c:	ldrdeq	r0, [r0], -fp
   3d430:	muleq	r5, ip, r2

0003d434 <flatcc_builder_check_required_field@@Base>:
   3d434:	ldr	r3, [r0, #32]
   3d438:	ldrh	r3, [r3, #14]
   3d43c:	cmp	r3, #3
   3d440:	bne	3d46c <flatcc_builder_check_required_field@@Base+0x38>
   3d444:	ldrh	r3, [r0, #8]
   3d448:	cmp	r3, r1
   3d44c:	movls	r0, #0
   3d450:	bls	3d468 <flatcc_builder_check_required_field@@Base+0x34>
   3d454:	ldr	r3, [r0, #4]
   3d458:	lsl	r1, r1, #1
   3d45c:	ldrh	r0, [r3, r1]
   3d460:	adds	r0, r0, #0
   3d464:	movne	r0, #1
   3d468:	bx	lr
   3d46c:	push	{r4, lr}
   3d470:	ldr	r3, [pc, #12]	; 3d484 <flatcc_builder_check_required_field@@Base+0x50>
   3d474:	ldr	r2, [pc, #12]	; 3d488 <flatcc_builder_check_required_field@@Base+0x54>
   3d478:	ldr	r1, [pc, #12]	; 3d48c <flatcc_builder_check_required_field@@Base+0x58>
   3d47c:	ldr	r0, [pc, #12]	; 3d490 <flatcc_builder_check_required_field@@Base+0x5c>
   3d480:	bl	14148 <__assert_fail@plt>
   3d484:	andeq	sp, r5, r4, lsl #27
   3d488:	strdeq	r0, [r0], -r8
   3d48c:	ldrdeq	sp, [r5], -ip
   3d490:	andeq	lr, r5, r8, lsr #5

0003d494 <flatcc_builder_check_union_field@@Base>:
   3d494:	ldr	r3, [r0, #32]
   3d498:	ldrh	r3, [r3, #14]
   3d49c:	cmp	r3, #3
   3d4a0:	bne	3d51c <flatcc_builder_check_union_field@@Base+0x88>
   3d4a4:	cmp	r1, #0
   3d4a8:	beq	3d4f4 <flatcc_builder_check_union_field@@Base+0x60>
   3d4ac:	ldrh	r3, [r0, #8]
   3d4b0:	cmp	r3, r1
   3d4b4:	bls	3d4f4 <flatcc_builder_check_union_field@@Base+0x60>
   3d4b8:	sub	r1, r1, #-2147483647	; 0x80000001
   3d4bc:	ldr	r3, [r0, #4]
   3d4c0:	lsl	r1, r1, #1
   3d4c4:	ldrh	r2, [r3, r1]
   3d4c8:	cmp	r2, #0
   3d4cc:	beq	3d508 <flatcc_builder_check_union_field@@Base+0x74>
   3d4d0:	ldr	r0, [r0, #16]
   3d4d4:	add	r1, r3, r1
   3d4d8:	ldrb	r2, [r0, r2]
   3d4dc:	ldrh	r1, [r1, #2]
   3d4e0:	cmp	r2, #0
   3d4e4:	bne	3d4fc <flatcc_builder_check_union_field@@Base+0x68>
   3d4e8:	clz	r0, r1
   3d4ec:	lsr	r0, r0, #5
   3d4f0:	bx	lr
   3d4f4:	mov	r0, #0
   3d4f8:	bx	lr
   3d4fc:	adds	r0, r1, #0
   3d500:	movne	r0, #1
   3d504:	b	3d4f8 <flatcc_builder_check_union_field@@Base+0x64>
   3d508:	add	r1, r3, r1
   3d50c:	ldrh	r1, [r1, #2]
   3d510:	clz	r0, r1
   3d514:	lsr	r0, r0, #5
   3d518:	bx	lr
   3d51c:	push	{r4, lr}
   3d520:	ldr	r3, [pc, #12]	; 3d534 <flatcc_builder_check_union_field@@Base+0xa0>
   3d524:	ldr	r2, [pc, #12]	; 3d538 <flatcc_builder_check_union_field@@Base+0xa4>
   3d528:	ldr	r1, [pc, #12]	; 3d53c <flatcc_builder_check_union_field@@Base+0xa8>
   3d52c:	ldr	r0, [pc, #12]	; 3d540 <flatcc_builder_check_union_field@@Base+0xac>
   3d530:	bl	14148 <__assert_fail@plt>
   3d534:	andeq	sp, r5, r8, lsr #27
   3d538:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   3d53c:	ldrdeq	sp, [r5], -ip
   3d540:	andeq	lr, r5, r8, lsr #5

0003d544 <flatcc_builder_check_required@@Base>:
   3d544:	ldr	r3, [r0, #32]
   3d548:	ldrh	r3, [r3, #14]
   3d54c:	cmp	r3, #3
   3d550:	bne	3d5b4 <flatcc_builder_check_required@@Base+0x70>
   3d554:	ldrh	r3, [r0, #8]
   3d558:	cmp	r3, r2
   3d55c:	movlt	r0, #0
   3d560:	blt	3d5b0 <flatcc_builder_check_required@@Base+0x6c>
   3d564:	cmp	r2, #0
   3d568:	ble	3d5ac <flatcc_builder_check_required@@Base+0x68>
   3d56c:	ldrh	r3, [r1]
   3d570:	ldr	ip, [r0, #4]
   3d574:	lsl	r3, r3, #1
   3d578:	ldrh	r0, [ip, r3]
   3d57c:	cmp	r0, #0
   3d580:	beq	3d5b0 <flatcc_builder_check_required@@Base+0x6c>
   3d584:	add	r2, r1, r2, lsl #1
   3d588:	add	r1, r1, #2
   3d58c:	b	3d5a4 <flatcc_builder_check_required@@Base+0x60>
   3d590:	ldrh	r3, [r1], #2
   3d594:	lsl	r3, r3, #1
   3d598:	ldrh	r0, [ip, r3]
   3d59c:	cmp	r0, #0
   3d5a0:	beq	3d5b0 <flatcc_builder_check_required@@Base+0x6c>
   3d5a4:	cmp	r1, r2
   3d5a8:	bne	3d590 <flatcc_builder_check_required@@Base+0x4c>
   3d5ac:	mov	r0, #1
   3d5b0:	bx	lr
   3d5b4:	push	{r4, lr}
   3d5b8:	ldr	r3, [pc, #12]	; 3d5cc <flatcc_builder_check_required@@Base+0x88>
   3d5bc:	ldr	r2, [pc, #12]	; 3d5d0 <flatcc_builder_check_required@@Base+0x8c>
   3d5c0:	ldr	r1, [pc, #12]	; 3d5d4 <flatcc_builder_check_required@@Base+0x90>
   3d5c4:	ldr	r0, [pc, #12]	; 3d5d8 <flatcc_builder_check_required@@Base+0x94>
   3d5c8:	bl	14148 <__assert_fail@plt>
   3d5cc:	andeq	sp, r5, ip, asr #27
   3d5d0:	andeq	r0, r0, r1, lsl r5
   3d5d4:	ldrdeq	sp, [r5], -ip
   3d5d8:	andeq	lr, r5, r8, lsr #5

0003d5dc <flatcc_builder_end_table@@Base>:
   3d5dc:	ldr	r3, [r0, #32]
   3d5e0:	push	{r4, r5, r6, r7, lr}
   3d5e4:	sub	sp, sp, #20
   3d5e8:	ldrh	r3, [r3, #14]
   3d5ec:	cmp	r3, #3
   3d5f0:	bne	3d774 <flatcc_builder_end_table@@Base+0x198>
   3d5f4:	ldrh	r5, [r0, #8]
   3d5f8:	ldr	r3, [r0, #12]
   3d5fc:	ldr	r1, [pc, #388]	; 3d788 <flatcc_builder_end_table@@Base+0x1ac>
   3d600:	add	r5, r5, #2
   3d604:	ldr	r2, [r0, #20]
   3d608:	lsl	r5, r5, #1
   3d60c:	add	r2, r2, #4
   3d610:	uxth	r5, r5
   3d614:	eor	r3, r3, r5
   3d618:	uxth	r2, r2
   3d61c:	mul	r3, r1, r3
   3d620:	ldr	ip, [r0, #4]
   3d624:	eor	r3, r3, r2
   3d628:	sub	r6, ip, #4
   3d62c:	mul	r1, r1, r3
   3d630:	strh	r2, [ip, #-2]
   3d634:	strh	r5, [ip, #-4]
   3d638:	mov	r3, r1
   3d63c:	str	r1, [r0, #12]
   3d640:	mov	r2, r5
   3d644:	mov	r1, r6
   3d648:	mov	r4, r0
   3d64c:	bl	3cf24 <flatcc_builder_create_cached_vtable@@Base>
   3d650:	subs	r7, r0, #0
   3d654:	bne	3d668 <flatcc_builder_end_table@@Base+0x8c>
   3d658:	mov	r5, #0
   3d65c:	mov	r0, r5
   3d660:	add	sp, sp, #20
   3d664:	pop	{r4, r5, r6, r7, pc}
   3d668:	mov	r2, r5
   3d66c:	mov	r1, #0
   3d670:	mov	r0, r6
   3d674:	bl	140ac <memset@plt>
   3d678:	ldr	r3, [r4, #32]
   3d67c:	ldr	ip, [r4, #76]	; 0x4c
   3d680:	ldr	r0, [r4]
   3d684:	ldr	r2, [r3, #20]
   3d688:	ldr	r1, [r4, #16]
   3d68c:	add	ip, ip, r2
   3d690:	sub	r0, r0, ip
   3d694:	ldrh	r3, [r4, #130]	; 0x82
   3d698:	asr	r0, r0, #1
   3d69c:	ldr	r2, [r4, #20]
   3d6a0:	str	r0, [sp, #4]
   3d6a4:	str	r7, [sp, #8]
   3d6a8:	str	ip, [sp]
   3d6ac:	mov	r0, r4
   3d6b0:	bl	3d280 <flatcc_builder_create_table@@Base>
   3d6b4:	subs	r5, r0, #0
   3d6b8:	beq	3d658 <flatcc_builder_end_table@@Base+0x7c>
   3d6bc:	ldr	r3, [r4, #32]
   3d6c0:	ldr	r0, [r4, #52]	; 0x34
   3d6c4:	ldr	ip, [r4, #76]	; 0x4c
   3d6c8:	ldr	r1, [r3, #24]
   3d6cc:	ldr	r2, [r4, #20]
   3d6d0:	str	r1, [r4, #12]
   3d6d4:	ldrh	lr, [r3, #28]
   3d6d8:	mov	r1, #0
   3d6dc:	strh	lr, [r4, #8]
   3d6e0:	ldr	lr, [r3, #16]
   3d6e4:	add	r0, r0, lr
   3d6e8:	str	r0, [r4, #4]
   3d6ec:	ldr	r3, [r3, #20]
   3d6f0:	ldr	r0, [r4, #16]
   3d6f4:	add	r3, ip, r3
   3d6f8:	str	r3, [r4]
   3d6fc:	bl	140ac <memset@plt>
   3d700:	ldr	r3, [r4, #32]
   3d704:	ldr	r2, [r4, #64]	; 0x40
   3d708:	ldrh	lr, [r4, #130]	; 0x82
   3d70c:	ldr	ip, [r3]
   3d710:	ldr	r1, [r3, #4]
   3d714:	ldrh	r0, [r4, #128]	; 0x80
   3d718:	sub	r2, r2, ip
   3d71c:	cmp	r2, r1
   3d720:	movcs	r2, r1
   3d724:	cmp	r0, lr
   3d728:	ldr	r0, [r4, #60]	; 0x3c
   3d72c:	ldr	r6, [r3, #8]
   3d730:	str	r2, [r4, #24]
   3d734:	add	r2, r0, ip
   3d738:	str	r2, [r4, #16]
   3d73c:	str	r6, [r4, #20]
   3d740:	ldr	r2, [r4, #156]	; 0x9c
   3d744:	str	ip, [r4, #28]
   3d748:	str	r1, [r3, #4]
   3d74c:	strhcc	lr, [r4, #128]	; 0x80
   3d750:	ldrh	r1, [r3, #12]
   3d754:	sub	r2, r2, #1
   3d758:	sub	r3, r3, #36	; 0x24
   3d75c:	mov	r0, r5
   3d760:	str	r2, [r4, #156]	; 0x9c
   3d764:	strh	r1, [r4, #130]	; 0x82
   3d768:	str	r3, [r4, #32]
   3d76c:	add	sp, sp, #20
   3d770:	pop	{r4, r5, r6, r7, pc}
   3d774:	ldr	r3, [pc, #16]	; 3d78c <flatcc_builder_end_table@@Base+0x1b0>
   3d778:	ldr	r2, [pc, #16]	; 3d790 <flatcc_builder_end_table@@Base+0x1b4>
   3d77c:	ldr	r1, [pc, #16]	; 3d794 <flatcc_builder_end_table@@Base+0x1b8>
   3d780:	ldr	r0, [pc, #16]	; 3d798 <flatcc_builder_end_table@@Base+0x1bc>
   3d784:	bl	14148 <__assert_fail@plt>
   3d788:			; <UNDEFINED> instruction: 0x9e3779b1
   3d78c:	andeq	sp, r5, ip, ror #27
   3d790:	andeq	r0, r0, r5, lsr #10
   3d794:	ldrdeq	sp, [r5], -ip
   3d798:	andeq	lr, r5, r8, lsr #5

0003d79c <flatcc_builder_create_vector@@Base>:
   3d79c:	push	{r4, r5, r6, lr}
   3d7a0:	sub	sp, sp, #88	; 0x58
   3d7a4:	mov	r4, r0
   3d7a8:	ldr	ip, [sp, #108]	; 0x6c
   3d7ac:	ldrh	r0, [sp, #104]	; 0x68
   3d7b0:	cmp	r2, ip
   3d7b4:	bhi	3d890 <flatcc_builder_create_vector@@Base+0xf4>
   3d7b8:	ldrh	ip, [r4, #128]	; 0x80
   3d7bc:	mul	r3, r3, r2
   3d7c0:	cmp	r0, #4
   3d7c4:	movcc	r0, #4
   3d7c8:	ldr	lr, [r4, #136]	; 0x88
   3d7cc:	cmp	ip, r0
   3d7d0:	sub	r6, lr, r3
   3d7d4:	mov	ip, #4
   3d7d8:	strhcc	r0, [r4, #128]	; 0x80
   3d7dc:	str	r2, [sp, #12]
   3d7e0:	cmp	r3, #0
   3d7e4:	mov	r2, #1
   3d7e8:	sub	r0, r0, #1
   3d7ec:	str	ip, [sp, #16]
   3d7f0:	str	r2, [sp, #20]
   3d7f4:	and	r0, r0, r6
   3d7f8:	movne	r2, #2
   3d7fc:	str	ip, [sp, #28]
   3d800:	addne	ip, r3, ip
   3d804:	strne	r3, [sp, #36]	; 0x24
   3d808:	add	r5, sp, #12
   3d80c:	strne	r1, [sp, #32]
   3d810:	strne	ip, [sp, #16]
   3d814:	strne	r2, [sp, #20]
   3d818:	movne	r3, #3
   3d81c:	moveq	r3, #2
   3d820:	cmp	r0, #0
   3d824:	str	r5, [sp, #24]
   3d828:	beq	3d854 <flatcc_builder_create_vector@@Base+0xb8>
   3d82c:	add	r2, r2, #1
   3d830:	add	r1, sp, #88	; 0x58
   3d834:	add	r1, r1, r2, lsl #3
   3d838:	ldr	r5, [pc, #124]	; 3d8bc <flatcc_builder_create_vector@@Base+0x120>
   3d83c:	mov	r2, r3
   3d840:	add	ip, ip, r0
   3d844:	str	r0, [r1, #-68]	; 0xffffffbc
   3d848:	str	ip, [sp, #16]
   3d84c:	str	r3, [sp, #20]
   3d850:	str	r5, [r1, #-72]	; 0xffffffb8
   3d854:	sub	r5, lr, ip
   3d858:	cmp	lr, r5
   3d85c:	ble	3d8b8 <flatcc_builder_create_vector@@Base+0x11c>
   3d860:	ldr	r0, [r4, #36]	; 0x24
   3d864:	mov	r3, r5
   3d868:	str	ip, [sp]
   3d86c:	add	r1, sp, #24
   3d870:	ldr	r6, [r4, #44]	; 0x2c
   3d874:	blx	r6
   3d878:	cmp	r0, #0
   3d87c:	bne	3d8a4 <flatcc_builder_create_vector@@Base+0x108>
   3d880:	mov	r0, r5
   3d884:	str	r5, [r4, #136]	; 0x88
   3d888:	add	sp, sp, #88	; 0x58
   3d88c:	pop	{r4, r5, r6, pc}
   3d890:	ldr	r3, [pc, #40]	; 3d8c0 <flatcc_builder_create_vector@@Base+0x124>
   3d894:	ldr	r2, [pc, #40]	; 3d8c4 <flatcc_builder_create_vector@@Base+0x128>
   3d898:	ldr	r1, [pc, #40]	; 3d8c8 <flatcc_builder_create_vector@@Base+0x12c>
   3d89c:	ldr	r0, [pc, #40]	; 3d8cc <flatcc_builder_create_vector@@Base+0x130>
   3d8a0:	bl	14148 <__assert_fail@plt>
   3d8a4:	ldr	r3, [pc, #36]	; 3d8d0 <flatcc_builder_create_vector@@Base+0x134>
   3d8a8:	ldr	r2, [pc, #36]	; 3d8d4 <flatcc_builder_create_vector@@Base+0x138>
   3d8ac:	ldr	r1, [pc, #20]	; 3d8c8 <flatcc_builder_create_vector@@Base+0x12c>
   3d8b0:	ldr	r0, [pc, #32]	; 3d8d8 <flatcc_builder_create_vector@@Base+0x13c>
   3d8b4:	bl	14148 <__assert_fail@plt>
   3d8b8:	bl	14244 <__assert_fail@plt+0xfc>
   3d8bc:	andeq	sp, r5, r4, lsr #18
   3d8c0:	andeq	sp, r5, r8, lsl #28
   3d8c4:	andeq	r0, r0, r5, asr r5
   3d8c8:	ldrdeq	sp, [r5], -ip
   3d8cc:	ldrdeq	lr, [r5], -r4
   3d8d0:	andeq	sp, r5, r8, lsr #17
   3d8d4:	andeq	r0, r0, fp, lsl #5
   3d8d8:	andeq	sp, r4, r4, ror r2

0003d8dc <flatcc_builder_end_vector@@Base>:
   3d8dc:	ldr	r3, [r0, #32]
   3d8e0:	push	{r4, r5, r6, lr}
   3d8e4:	sub	sp, sp, #88	; 0x58
   3d8e8:	ldrh	r2, [r3, #14]
   3d8ec:	cmp	r2, #4
   3d8f0:	bne	3da94 <flatcc_builder_end_vector@@Base+0x1b8>
   3d8f4:	ldr	lr, [r3, #20]
   3d8f8:	ldr	r2, [r3, #24]
   3d8fc:	ldr	r1, [r3, #16]
   3d900:	cmp	lr, r2
   3d904:	mov	r4, r0
   3d908:	ldr	r5, [r0, #16]
   3d90c:	ldrh	r3, [r0, #130]	; 0x82
   3d910:	bhi	3da80 <flatcc_builder_end_vector@@Base+0x1a4>
   3d914:	ldrh	r2, [r0, #128]	; 0x80
   3d918:	mul	r1, r1, lr
   3d91c:	cmp	r3, #4
   3d920:	movcc	r3, #4
   3d924:	ldr	ip, [r0, #136]	; 0x88
   3d928:	cmp	r2, r3
   3d92c:	strhcc	r3, [r0, #128]	; 0x80
   3d930:	sub	r2, r3, #1
   3d934:	sub	r0, ip, r1
   3d938:	cmp	r1, #0
   3d93c:	mov	r3, #4
   3d940:	and	r0, r0, r2
   3d944:	mov	r2, #1
   3d948:	str	r3, [sp, #16]
   3d94c:	str	r2, [sp, #20]
   3d950:	str	r3, [sp, #28]
   3d954:	movne	r2, #2
   3d958:	addne	r3, r1, r3
   3d95c:	strne	r1, [sp, #36]	; 0x24
   3d960:	str	lr, [sp, #12]
   3d964:	strne	r5, [sp, #32]
   3d968:	add	lr, sp, #12
   3d96c:	strne	r3, [sp, #16]
   3d970:	strne	r2, [sp, #20]
   3d974:	movne	r1, #3
   3d978:	moveq	r1, #2
   3d97c:	cmp	r0, #0
   3d980:	str	lr, [sp, #24]
   3d984:	beq	3d9b0 <flatcc_builder_end_vector@@Base+0xd4>
   3d988:	add	r2, r2, #1
   3d98c:	add	lr, sp, #88	; 0x58
   3d990:	add	lr, lr, r2, lsl #3
   3d994:	ldr	r5, [pc, #268]	; 3daa8 <flatcc_builder_end_vector@@Base+0x1cc>
   3d998:	mov	r2, r1
   3d99c:	add	r3, r3, r0
   3d9a0:	str	r0, [lr, #-68]	; 0xffffffbc
   3d9a4:	str	r3, [sp, #16]
   3d9a8:	str	r1, [sp, #20]
   3d9ac:	str	r5, [lr, #-72]	; 0xffffffb8
   3d9b0:	sub	r5, ip, r3
   3d9b4:	cmp	ip, r5
   3d9b8:	ble	3da7c <flatcc_builder_end_vector@@Base+0x1a0>
   3d9bc:	ldr	r0, [r4, #36]	; 0x24
   3d9c0:	add	r1, sp, #24
   3d9c4:	str	r3, [sp]
   3d9c8:	mov	r3, r5
   3d9cc:	ldr	r6, [r4, #44]	; 0x2c
   3d9d0:	blx	r6
   3d9d4:	subs	r1, r0, #0
   3d9d8:	bne	3da68 <flatcc_builder_end_vector@@Base+0x18c>
   3d9dc:	cmp	r5, #0
   3d9e0:	str	r5, [r4, #136]	; 0x88
   3d9e4:	beq	3da5c <flatcc_builder_end_vector@@Base+0x180>
   3d9e8:	ldr	r2, [r4, #20]
   3d9ec:	ldr	r0, [r4, #16]
   3d9f0:	bl	140ac <memset@plt>
   3d9f4:	ldr	r3, [r4, #32]
   3d9f8:	ldr	r2, [r4, #64]	; 0x40
   3d9fc:	ldrh	lr, [r4, #130]	; 0x82
   3da00:	ldr	ip, [r3]
   3da04:	ldr	r1, [r3, #4]
   3da08:	ldrh	r0, [r4, #128]	; 0x80
   3da0c:	sub	r2, r2, ip
   3da10:	cmp	r2, r1
   3da14:	movcs	r2, r1
   3da18:	cmp	r0, lr
   3da1c:	ldr	r0, [r4, #60]	; 0x3c
   3da20:	ldr	r6, [r3, #8]
   3da24:	str	r2, [r4, #24]
   3da28:	add	r2, r0, ip
   3da2c:	str	r2, [r4, #16]
   3da30:	str	r6, [r4, #20]
   3da34:	ldr	r2, [r4, #156]	; 0x9c
   3da38:	str	ip, [r4, #28]
   3da3c:	str	r1, [r3, #4]
   3da40:	strhcc	lr, [r4, #128]	; 0x80
   3da44:	ldrh	r1, [r3, #12]
   3da48:	sub	r2, r2, #1
   3da4c:	sub	r3, r3, #36	; 0x24
   3da50:	str	r2, [r4, #156]	; 0x9c
   3da54:	strh	r1, [r4, #130]	; 0x82
   3da58:	str	r3, [r4, #32]
   3da5c:	mov	r0, r5
   3da60:	add	sp, sp, #88	; 0x58
   3da64:	pop	{r4, r5, r6, pc}
   3da68:	ldr	r3, [pc, #60]	; 3daac <flatcc_builder_end_vector@@Base+0x1d0>
   3da6c:	ldr	r2, [pc, #60]	; 3dab0 <flatcc_builder_end_vector@@Base+0x1d4>
   3da70:	ldr	r1, [pc, #60]	; 3dab4 <flatcc_builder_end_vector@@Base+0x1d8>
   3da74:	ldr	r0, [pc, #60]	; 3dab8 <flatcc_builder_end_vector@@Base+0x1dc>
   3da78:	bl	14148 <__assert_fail@plt>
   3da7c:	bl	14244 <__assert_fail@plt+0xfc>
   3da80:	ldr	r3, [pc, #52]	; 3dabc <flatcc_builder_end_vector@@Base+0x1e0>
   3da84:	ldr	r2, [pc, #52]	; 3dac0 <flatcc_builder_end_vector@@Base+0x1e4>
   3da88:	ldr	r1, [pc, #36]	; 3dab4 <flatcc_builder_end_vector@@Base+0x1d8>
   3da8c:	ldr	r0, [pc, #48]	; 3dac4 <flatcc_builder_end_vector@@Base+0x1e8>
   3da90:	bl	14148 <__assert_fail@plt>
   3da94:	ldr	r3, [pc, #44]	; 3dac8 <flatcc_builder_end_vector@@Base+0x1ec>
   3da98:	ldr	r2, [pc, #44]	; 3dacc <flatcc_builder_end_vector@@Base+0x1f0>
   3da9c:	ldr	r1, [pc, #16]	; 3dab4 <flatcc_builder_end_vector@@Base+0x1d8>
   3daa0:	ldr	r0, [pc, #40]	; 3dad0 <flatcc_builder_end_vector@@Base+0x1f4>
   3daa4:	bl	14148 <__assert_fail@plt>
   3daa8:	andeq	sp, r5, r4, lsr #18
   3daac:	andeq	sp, r5, r8, lsr #17
   3dab0:	andeq	r0, r0, fp, lsl #5
   3dab4:	ldrdeq	sp, [r5], -ip
   3dab8:	andeq	sp, r4, r4, ror r2
   3dabc:	andeq	sp, r5, r8, lsl #28
   3dac0:	andeq	r0, r0, r5, asr r5
   3dac4:	ldrdeq	lr, [r5], -r4
   3dac8:	andeq	sp, r5, r8, lsr #28
   3dacc:	andeq	r0, r0, r8, ror r5
   3dad0:	andeq	lr, r5, r8, asr #2

0003dad4 <flatcc_builder_vector_count@@Base>:
   3dad4:	ldr	r3, [r0, #32]
   3dad8:	ldr	r0, [r3, #20]
   3dadc:	bx	lr

0003dae0 <flatcc_builder_vector_edit@@Base>:
   3dae0:	ldr	r0, [r0, #16]
   3dae4:	bx	lr

0003dae8 <flatcc_builder_create_offset_vector_direct@@Base>:
   3dae8:	cmn	r2, #-1073741823	; 0xc0000001
   3daec:	bls	3daf8 <flatcc_builder_create_offset_vector_direct@@Base+0x10>
   3daf0:	mov	r0, #0
   3daf4:	bx	lr
   3daf8:	b	3a2bc <flatcc_builder_default_alloc@@Base+0x2fc>

0003dafc <flatcc_builder_end_offset_vector@@Base>:
   3dafc:	ldr	r3, [r0, #32]
   3db00:	push	{r4, r5, r6, lr}
   3db04:	ldrh	r2, [r3, #14]
   3db08:	cmp	r2, #5
   3db0c:	bne	3dbbc <flatcc_builder_end_offset_vector@@Base+0xc0>
   3db10:	ldr	r2, [r3, #20]
   3db14:	cmn	r2, #-1073741823	; 0xc0000001
   3db18:	bls	3db28 <flatcc_builder_end_offset_vector@@Base+0x2c>
   3db1c:	mov	r5, #0
   3db20:	mov	r0, r5
   3db24:	pop	{r4, r5, r6, pc}
   3db28:	ldr	r1, [r0, #16]
   3db2c:	mov	r4, r0
   3db30:	bl	3a2bc <flatcc_builder_default_alloc@@Base+0x2fc>
   3db34:	subs	r5, r0, #0
   3db38:	beq	3db1c <flatcc_builder_end_offset_vector@@Base+0x20>
   3db3c:	ldr	r2, [r4, #20]
   3db40:	mov	r1, #0
   3db44:	ldr	r0, [r4, #16]
   3db48:	bl	140ac <memset@plt>
   3db4c:	ldr	r3, [r4, #32]
   3db50:	ldr	r2, [r4, #64]	; 0x40
   3db54:	ldrh	lr, [r4, #130]	; 0x82
   3db58:	ldr	ip, [r3]
   3db5c:	ldr	r1, [r3, #4]
   3db60:	ldrh	r0, [r4, #128]	; 0x80
   3db64:	sub	r2, r2, ip
   3db68:	cmp	r2, r1
   3db6c:	movcs	r2, r1
   3db70:	cmp	r0, lr
   3db74:	ldr	r0, [r4, #60]	; 0x3c
   3db78:	ldr	r6, [r3, #8]
   3db7c:	str	r2, [r4, #24]
   3db80:	add	r2, r0, ip
   3db84:	str	r2, [r4, #16]
   3db88:	str	r6, [r4, #20]
   3db8c:	ldr	r2, [r4, #156]	; 0x9c
   3db90:	str	ip, [r4, #28]
   3db94:	str	r1, [r3, #4]
   3db98:	strhcc	lr, [r4, #128]	; 0x80
   3db9c:	ldrh	r1, [r3, #12]
   3dba0:	sub	r2, r2, #1
   3dba4:	sub	r3, r3, #36	; 0x24
   3dba8:	str	r2, [r4, #156]	; 0x9c
   3dbac:	strh	r1, [r4, #130]	; 0x82
   3dbb0:	str	r3, [r4, #32]
   3dbb4:	mov	r0, r5
   3dbb8:	pop	{r4, r5, r6, pc}
   3dbbc:	ldr	r3, [pc, #12]	; 3dbd0 <flatcc_builder_end_offset_vector@@Base+0xd4>
   3dbc0:	ldr	r2, [pc, #12]	; 3dbd4 <flatcc_builder_end_offset_vector@@Base+0xd8>
   3dbc4:	ldr	r1, [pc, #12]	; 3dbd8 <flatcc_builder_end_offset_vector@@Base+0xdc>
   3dbc8:	ldr	r0, [pc, #12]	; 3dbdc <flatcc_builder_end_offset_vector@@Base+0xe0>
   3dbcc:	bl	14148 <__assert_fail@plt>
   3dbd0:	andeq	sp, r5, r8, lsl sp
   3dbd4:	andeq	r0, r0, r8, asr #11
   3dbd8:	ldrdeq	sp, [r5], -ip
   3dbdc:			; <UNDEFINED> instruction: 0x0005e1b4

0003dbe0 <flatcc_builder_end_offset_vector_for_unions@@Base>:
   3dbe0:	ldr	r2, [r0, #32]
   3dbe4:	push	{r4, r5, r6, lr}
   3dbe8:	ldrh	ip, [r2, #14]
   3dbec:	cmp	ip, #5
   3dbf0:	bne	3dca4 <flatcc_builder_end_offset_vector_for_unions@@Base+0xc4>
   3dbf4:	ldr	r2, [r2, #20]
   3dbf8:	cmn	r2, #-1073741823	; 0xc0000001
   3dbfc:	bls	3dc0c <flatcc_builder_end_offset_vector_for_unions@@Base+0x2c>
   3dc00:	mov	r5, #0
   3dc04:	mov	r0, r5
   3dc08:	pop	{r4, r5, r6, pc}
   3dc0c:	mov	r3, r1
   3dc10:	ldr	r1, [r0, #16]
   3dc14:	mov	r4, r0
   3dc18:	bl	3a0cc <flatcc_builder_default_alloc@@Base+0x10c>
   3dc1c:	subs	r5, r0, #0
   3dc20:	beq	3dc00 <flatcc_builder_end_offset_vector_for_unions@@Base+0x20>
   3dc24:	ldr	r2, [r4, #20]
   3dc28:	mov	r1, #0
   3dc2c:	ldr	r0, [r4, #16]
   3dc30:	bl	140ac <memset@plt>
   3dc34:	ldr	r3, [r4, #32]
   3dc38:	ldr	r2, [r4, #64]	; 0x40
   3dc3c:	ldrh	lr, [r4, #130]	; 0x82
   3dc40:	ldr	ip, [r3]
   3dc44:	ldr	r1, [r3, #4]
   3dc48:	ldrh	r0, [r4, #128]	; 0x80
   3dc4c:	sub	r2, r2, ip
   3dc50:	cmp	r2, r1
   3dc54:	movcs	r2, r1
   3dc58:	cmp	r0, lr
   3dc5c:	ldr	r0, [r4, #60]	; 0x3c
   3dc60:	ldr	r6, [r3, #8]
   3dc64:	str	r2, [r4, #24]
   3dc68:	add	r2, r0, ip
   3dc6c:	str	r2, [r4, #16]
   3dc70:	str	r6, [r4, #20]
   3dc74:	ldr	r2, [r4, #156]	; 0x9c
   3dc78:	str	ip, [r4, #28]
   3dc7c:	str	r1, [r3, #4]
   3dc80:	strhcc	lr, [r4, #128]	; 0x80
   3dc84:	ldrh	r1, [r3, #12]
   3dc88:	sub	r2, r2, #1
   3dc8c:	sub	r3, r3, #36	; 0x24
   3dc90:	str	r2, [r4, #156]	; 0x9c
   3dc94:	strh	r1, [r4, #130]	; 0x82
   3dc98:	str	r3, [r4, #32]
   3dc9c:	mov	r0, r5
   3dca0:	pop	{r4, r5, r6, pc}
   3dca4:	ldr	r3, [pc, #12]	; 3dcb8 <flatcc_builder_end_offset_vector_for_unions@@Base+0xd8>
   3dca8:	ldr	r2, [pc, #12]	; 3dcbc <flatcc_builder_end_offset_vector_for_unions@@Base+0xdc>
   3dcac:	ldr	r1, [pc, #12]	; 3dcc0 <flatcc_builder_end_offset_vector_for_unions@@Base+0xe0>
   3dcb0:	ldr	r0, [pc, #12]	; 3dcc4 <flatcc_builder_end_offset_vector_for_unions@@Base+0xe4>
   3dcb4:	bl	14148 <__assert_fail@plt>
   3dcb8:	andeq	sp, r5, r4, asr #28
   3dcbc:	ldrdeq	r0, [r0], -r5
   3dcc0:	ldrdeq	sp, [r5], -ip
   3dcc4:			; <UNDEFINED> instruction: 0x0005e1b4

0003dcc8 <flatcc_builder_offset_vector_edit@@Base>:
   3dcc8:	ldr	r0, [r0, #16]
   3dccc:	bx	lr

0003dcd0 <flatcc_builder_offset_vector_count@@Base>:
   3dcd0:	ldr	r3, [r0, #32]
   3dcd4:	ldr	r0, [r3, #20]
   3dcd8:	bx	lr

0003dcdc <flatcc_builder_create_union_vector@@Base>:
   3dcdc:	push	{r4, r5, r6, r7, r8, r9, lr}
   3dce0:	mov	r6, r0
   3dce4:	ldr	r0, [r1, #156]	; 0x9c
   3dce8:	ldr	ip, [r1, #160]	; 0xa0
   3dcec:	mov	r4, r1
   3dcf0:	add	r1, r0, #1
   3dcf4:	cmp	r1, ip
   3dcf8:	sub	sp, sp, #12
   3dcfc:	mov	r5, r2
   3dd00:	mov	r7, r3
   3dd04:	str	r1, [r4, #156]	; 0x9c
   3dd08:	ble	3dd90 <flatcc_builder_create_union_vector@@Base+0xb4>
   3dd0c:	ldr	r3, [r4, #176]	; 0xb0
   3dd10:	cmp	r1, r3
   3dd14:	cmpgt	r3, #0
   3dd18:	movgt	r3, #1
   3dd1c:	movle	r3, #0
   3dd20:	bgt	3dd78 <flatcc_builder_create_union_vector@@Base+0x9c>
   3dd24:	add	r0, r0, r0, lsl #3
   3dd28:	ldr	r1, [r4, #88]	; 0x58
   3dd2c:	lsl	r8, r0, #2
   3dd30:	add	r2, r8, #36	; 0x24
   3dd34:	cmp	r2, r1
   3dd38:	bhi	3dfac <flatcc_builder_create_union_vector@@Base+0x2d0>
   3dd3c:	ldr	r3, [r4, #84]	; 0x54
   3dd40:	add	r3, r3, r8
   3dd44:	cmp	r3, #0
   3dd48:	str	r3, [r4, #32]
   3dd4c:	beq	3dd78 <flatcc_builder_create_union_vector@@Base+0x9c>
   3dd50:	ldr	r2, [r4, #88]	; 0x58
   3dd54:	ldr	r0, [pc, #732]	; 3e038 <flatcc_builder_create_union_vector@@Base+0x35c>
   3dd58:	ldr	r1, [r4, #176]	; 0xb0
   3dd5c:	umull	r0, r2, r0, r2
   3dd60:	lsr	r2, r2, #3
   3dd64:	cmp	r1, #0
   3dd68:	cmpgt	r2, r1
   3dd6c:	str	r2, [r4, #160]	; 0xa0
   3dd70:	strgt	r1, [r4, #160]	; 0xa0
   3dd74:	b	3dd9c <flatcc_builder_create_union_vector@@Base+0xc0>
   3dd78:	mov	r3, #0
   3dd7c:	mov	r0, r6
   3dd80:	str	r3, [r6]
   3dd84:	str	r3, [r6, #4]
   3dd88:	add	sp, sp, #12
   3dd8c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   3dd90:	ldr	r3, [r4, #32]
   3dd94:	add	r3, r3, #36	; 0x24
   3dd98:	str	r3, [r4, #32]
   3dd9c:	ldr	r1, [r4, #20]
   3dda0:	ldr	ip, [r4, #28]
   3dda4:	ldrh	r8, [r4, #130]	; 0x82
   3dda8:	add	r2, r1, ip
   3ddac:	mvn	lr, #3
   3ddb0:	add	r2, r2, #7
   3ddb4:	str	r1, [r3, #8]
   3ddb8:	bic	r2, r2, #7
   3ddbc:	mov	r0, #4
   3ddc0:	mov	r1, #0
   3ddc4:	strh	r8, [r3, #12]
   3ddc8:	strh	r0, [r4, #130]	; 0x82
   3ddcc:	stm	r3, {ip, lr}
   3ddd0:	str	r1, [r4, #20]
   3ddd4:	str	r2, [r4, #28]
   3ddd8:	str	r0, [r3, #16]
   3dddc:	str	r1, [r3, #20]
   3dde0:	ldr	r0, [r4, #64]	; 0x40
   3dde4:	ldr	r1, [r4, #60]	; 0x3c
   3dde8:	sub	r0, r0, r2
   3ddec:	cmp	r0, lr
   3ddf0:	mov	ip, #5
   3ddf4:	strh	ip, [r3, #14]
   3ddf8:	add	r1, r1, r2
   3ddfc:	strls	r0, [r4, #24]
   3de00:	strhi	lr, [r4, #24]
   3de04:	movhi	r0, lr
   3de08:	mvn	r8, #3
   3de0c:	cmn	r7, #-1073741823	; 0xc0000001
   3de10:	str	r1, [r4, #16]
   3de14:	str	r8, [r3, #4]
   3de18:	bhi	3e02c <flatcc_builder_create_union_vector@@Base+0x350>
   3de1c:	lsl	ip, r7, #2
   3de20:	cmp	ip, r0
   3de24:	str	r7, [r3, #20]
   3de28:	str	ip, [r4, #20]
   3de2c:	bcs	3df54 <flatcc_builder_create_union_vector@@Base+0x278>
   3de30:	cmp	r1, #0
   3de34:	beq	3dd78 <flatcc_builder_create_union_vector@@Base+0x9c>
   3de38:	ldr	r8, [r4, #20]
   3de3c:	ldr	r0, [r4, #24]
   3de40:	add	r3, r7, r8
   3de44:	cmp	r3, r0
   3de48:	str	r3, [r4, #20]
   3de4c:	bcs	3dfd0 <flatcc_builder_create_union_vector@@Base+0x2f4>
   3de50:	adds	r8, r1, r8
   3de54:	beq	3dd78 <flatcc_builder_create_union_vector@@Base+0x9c>
   3de58:	cmp	r7, #0
   3de5c:	movne	r2, r5
   3de60:	addne	lr, r2, r7, lsl #3
   3de64:	subne	r0, r8, #1
   3de68:	subne	r3, r1, #4
   3de6c:	beq	3de8c <flatcc_builder_create_union_vector@@Base+0x1b0>
   3de70:	ldrb	ip, [r2]
   3de74:	add	r2, r2, #8
   3de78:	strb	ip, [r0, #1]!
   3de7c:	ldr	ip, [r2, #-4]
   3de80:	cmp	lr, r2
   3de84:	str	ip, [r3, #4]!
   3de88:	bne	3de70 <flatcc_builder_create_union_vector@@Base+0x194>
   3de8c:	mov	r3, r8
   3de90:	mov	r2, r7
   3de94:	mov	r0, r4
   3de98:	bl	3a0cc <flatcc_builder_default_alloc@@Base+0x10c>
   3de9c:	subs	r5, r0, #0
   3dea0:	beq	3e030 <flatcc_builder_create_union_vector@@Base+0x354>
   3dea4:	mvn	r0, #0
   3dea8:	mov	r3, #1
   3deac:	mov	r2, r7
   3deb0:	str	r0, [sp, #4]
   3deb4:	mov	r1, r8
   3deb8:	str	r3, [sp]
   3debc:	mov	r0, r4
   3dec0:	bl	3d79c <flatcc_builder_create_vector@@Base>
   3dec4:	mov	r7, r0
   3dec8:	ldr	r2, [r4, #20]
   3decc:	mov	r1, #0
   3ded0:	ldr	r0, [r4, #16]
   3ded4:	bl	140ac <memset@plt>
   3ded8:	ldr	r3, [r4, #32]
   3dedc:	ldr	r2, [r4, #64]	; 0x40
   3dee0:	ldrh	lr, [r4, #130]	; 0x82
   3dee4:	ldr	ip, [r3]
   3dee8:	ldr	r1, [r3, #4]
   3deec:	ldrh	r0, [r4, #128]	; 0x80
   3def0:	sub	r2, r2, ip
   3def4:	cmp	r2, r1
   3def8:	movcs	r2, r1
   3defc:	cmp	r0, lr
   3df00:	ldr	r0, [r4, #60]	; 0x3c
   3df04:	ldr	r8, [r3, #8]
   3df08:	str	r2, [r4, #24]
   3df0c:	add	r2, r0, ip
   3df10:	str	r2, [r4, #16]
   3df14:	str	r8, [r4, #20]
   3df18:	ldr	r2, [r4, #156]	; 0x9c
   3df1c:	str	ip, [r4, #28]
   3df20:	str	r1, [r3, #4]
   3df24:	strhcc	lr, [r4, #128]	; 0x80
   3df28:	ldrh	r1, [r3, #12]
   3df2c:	sub	r2, r2, #1
   3df30:	sub	r3, r3, #36	; 0x24
   3df34:	mov	r0, r6
   3df38:	str	r7, [r6]
   3df3c:	str	r5, [r6, #4]
   3df40:	str	r2, [r4, #156]	; 0x9c
   3df44:	strh	r1, [r4, #130]	; 0x82
   3df48:	str	r3, [r4, #32]
   3df4c:	add	sp, sp, #12
   3df50:	pop	{r4, r5, r6, r7, r8, r9, pc}
   3df54:	add	ip, ip, #1
   3df58:	mov	r3, #1
   3df5c:	ldr	r0, [r4, #40]	; 0x28
   3df60:	add	r2, ip, r2
   3df64:	str	r3, [sp]
   3df68:	add	r1, r4, #60	; 0x3c
   3df6c:	ldr	r9, [r4, #48]	; 0x30
   3df70:	blx	r9
   3df74:	cmp	r0, #0
   3df78:	bne	3dd78 <flatcc_builder_create_union_vector@@Base+0x9c>
   3df7c:	ldr	r2, [r4, #28]
   3df80:	ldr	r3, [r4, #64]	; 0x40
   3df84:	ldr	r1, [r4, #60]	; 0x3c
   3df88:	sub	r3, r3, r2
   3df8c:	ldr	r0, [r4, #32]
   3df90:	cmn	r3, #4
   3df94:	movhi	r3, r8
   3df98:	add	r1, r1, r2
   3df9c:	str	r3, [r4, #24]
   3dfa0:	str	r1, [r4, #16]
   3dfa4:	str	r8, [r0, #4]
   3dfa8:	b	3de30 <flatcc_builder_create_union_vector@@Base+0x154>
   3dfac:	mov	r1, #4
   3dfb0:	ldr	r0, [r4, #40]	; 0x28
   3dfb4:	str	r1, [sp]
   3dfb8:	add	r1, r4, #84	; 0x54
   3dfbc:	ldr	r9, [r4, #48]	; 0x30
   3dfc0:	blx	r9
   3dfc4:	cmp	r0, #0
   3dfc8:	beq	3dd3c <flatcc_builder_create_union_vector@@Base+0x60>
   3dfcc:	bl	141f8 <__assert_fail@plt+0xb0>
   3dfd0:	add	r1, r3, #1
   3dfd4:	mov	r3, #1
   3dfd8:	ldr	r0, [r4, #40]	; 0x28
   3dfdc:	add	r2, r1, r2
   3dfe0:	str	r3, [sp]
   3dfe4:	add	r1, r4, #60	; 0x3c
   3dfe8:	ldr	r9, [r4, #48]	; 0x30
   3dfec:	blx	r9
   3dff0:	cmp	r0, #0
   3dff4:	bne	3dd78 <flatcc_builder_create_union_vector@@Base+0x9c>
   3dff8:	ldr	r2, [r4, #28]
   3dffc:	ldr	r3, [r4, #64]	; 0x40
   3e000:	ldr	r1, [r4, #60]	; 0x3c
   3e004:	sub	r3, r3, r2
   3e008:	cmn	r3, #4
   3e00c:	mvnhi	r3, #3
   3e010:	str	r3, [r4, #24]
   3e014:	ldr	r3, [r4, #32]
   3e018:	add	r1, r1, r2
   3e01c:	mvn	r2, #3
   3e020:	str	r1, [r4, #16]
   3e024:	str	r2, [r3, #4]
   3e028:	b	3de50 <flatcc_builder_create_union_vector@@Base+0x174>
   3e02c:	bl	1426c <__assert_fail@plt+0x124>
   3e030:	mov	r7, r5
   3e034:	b	3dec8 <flatcc_builder_create_union_vector@@Base+0x1ec>
   3e038:	stmiacc	r3!, {r0, r3, r4, r5, r9, sl, fp, pc}^

0003e03c <flatcc_builder_create_union_vector_direct@@Base>:
   3e03c:	push	{r4, r5, r6, r7, r8, lr}
   3e040:	sub	sp, sp, #88	; 0x58
   3e044:	mov	r4, r0
   3e048:	ldr	r5, [sp, #112]	; 0x70
   3e04c:	cmn	r5, #-1073741823	; 0xc0000001
   3e050:	bls	3e06c <flatcc_builder_create_union_vector_direct@@Base+0x30>
   3e054:	mov	r3, #0
   3e058:	mov	r0, r4
   3e05c:	str	r3, [r4]
   3e060:	str	r3, [r4, #4]
   3e064:	add	sp, sp, #88	; 0x58
   3e068:	pop	{r4, r5, r6, r7, r8, pc}
   3e06c:	mov	r6, r1
   3e070:	mov	r8, r2
   3e074:	mov	r1, r3
   3e078:	mov	r0, r6
   3e07c:	mov	r3, r2
   3e080:	mov	r2, r5
   3e084:	bl	3a0cc <flatcc_builder_default_alloc@@Base+0x10c>
   3e088:	subs	r7, r0, #0
   3e08c:	beq	3e054 <flatcc_builder_create_union_vector_direct@@Base+0x18>
   3e090:	ldrh	r3, [r6, #128]	; 0x80
   3e094:	ldr	r0, [r6, #136]	; 0x88
   3e098:	mov	r2, #1
   3e09c:	cmp	r3, #3
   3e0a0:	movls	r3, #4
   3e0a4:	strhls	r3, [r6, #128]	; 0x80
   3e0a8:	sub	r1, r0, r5
   3e0ac:	cmp	r5, #0
   3e0b0:	mov	r3, #4
   3e0b4:	add	ip, sp, #12
   3e0b8:	str	r3, [sp, #16]
   3e0bc:	str	r2, [sp, #20]
   3e0c0:	and	r1, r1, #3
   3e0c4:	movne	r2, #2
   3e0c8:	str	r3, [sp, #28]
   3e0cc:	addne	r3, r5, r3
   3e0d0:	str	ip, [sp, #24]
   3e0d4:	strne	r8, [sp, #32]
   3e0d8:	strne	r5, [sp, #36]	; 0x24
   3e0dc:	strne	r3, [sp, #16]
   3e0e0:	strne	r2, [sp, #20]
   3e0e4:	movne	ip, #3
   3e0e8:	moveq	ip, #2
   3e0ec:	cmp	r1, #0
   3e0f0:	str	r5, [sp, #12]
   3e0f4:	beq	3e120 <flatcc_builder_create_union_vector_direct@@Base+0xe4>
   3e0f8:	add	r2, r2, #1
   3e0fc:	add	lr, sp, #88	; 0x58
   3e100:	add	lr, lr, r2, lsl #3
   3e104:	ldr	r5, [pc, #108]	; 3e178 <flatcc_builder_create_union_vector_direct@@Base+0x13c>
   3e108:	mov	r2, ip
   3e10c:	add	r3, r3, r1
   3e110:	str	r1, [lr, #-68]	; 0xffffffbc
   3e114:	str	r3, [sp, #16]
   3e118:	str	ip, [sp, #20]
   3e11c:	str	r5, [lr, #-72]	; 0xffffffb8
   3e120:	sub	r5, r0, r3
   3e124:	cmp	r0, r5
   3e128:	ble	3e160 <flatcc_builder_create_union_vector_direct@@Base+0x124>
   3e12c:	ldr	r0, [r6, #36]	; 0x24
   3e130:	add	r1, sp, #24
   3e134:	str	r3, [sp]
   3e138:	mov	r3, r5
   3e13c:	ldr	r8, [r6, #44]	; 0x2c
   3e140:	blx	r8
   3e144:	cmp	r0, #0
   3e148:	bne	3e164 <flatcc_builder_create_union_vector_direct@@Base+0x128>
   3e14c:	mov	r0, r4
   3e150:	str	r5, [r6, #136]	; 0x88
   3e154:	stm	r4, {r5, r7}
   3e158:	add	sp, sp, #88	; 0x58
   3e15c:	pop	{r4, r5, r6, r7, r8, pc}
   3e160:	bl	14244 <__assert_fail@plt+0xfc>
   3e164:	ldr	r3, [pc, #16]	; 3e17c <flatcc_builder_create_union_vector_direct@@Base+0x140>
   3e168:	ldr	r2, [pc, #16]	; 3e180 <flatcc_builder_create_union_vector_direct@@Base+0x144>
   3e16c:	ldr	r1, [pc, #16]	; 3e184 <flatcc_builder_create_union_vector_direct@@Base+0x148>
   3e170:	ldr	r0, [pc, #16]	; 3e188 <flatcc_builder_create_union_vector_direct@@Base+0x14c>
   3e174:	bl	14148 <__assert_fail@plt>
   3e178:	andeq	sp, r5, r4, lsr #18
   3e17c:	andeq	sp, r5, r8, lsr #17
   3e180:	andeq	r0, r0, fp, lsl #5
   3e184:	ldrdeq	sp, [r5], -ip
   3e188:	andeq	sp, r4, r4, ror r2

0003e18c <flatcc_builder_start_union_vector@@Base>:
   3e18c:	ldr	r1, [r0, #156]	; 0x9c
   3e190:	ldr	r3, [r0, #160]	; 0xa0
   3e194:	add	r2, r1, #1
   3e198:	cmp	r2, r3
   3e19c:	push	{r4, r5, r6, lr}
   3e1a0:	mov	r4, r0
   3e1a4:	sub	sp, sp, #8
   3e1a8:	str	r2, [r0, #156]	; 0x9c
   3e1ac:	ble	3e21c <flatcc_builder_start_union_vector@@Base+0x90>
   3e1b0:	ldr	r3, [r0, #176]	; 0xb0
   3e1b4:	cmp	r3, #0
   3e1b8:	cmpgt	r2, r3
   3e1bc:	movgt	r3, #1
   3e1c0:	movle	r3, #0
   3e1c4:	bgt	3e2c8 <flatcc_builder_start_union_vector@@Base+0x13c>
   3e1c8:	add	r1, r1, r1, lsl #3
   3e1cc:	ldr	r0, [r0, #88]	; 0x58
   3e1d0:	lsl	r5, r1, #2
   3e1d4:	add	r2, r5, #36	; 0x24
   3e1d8:	cmp	r2, r0
   3e1dc:	bhi	3e2a4 <flatcc_builder_start_union_vector@@Base+0x118>
   3e1e0:	ldr	r3, [r4, #84]	; 0x54
   3e1e4:	add	r3, r3, r5
   3e1e8:	cmp	r3, #0
   3e1ec:	str	r3, [r4, #32]
   3e1f0:	beq	3e2c8 <flatcc_builder_start_union_vector@@Base+0x13c>
   3e1f4:	ldr	r2, [r4, #88]	; 0x58
   3e1f8:	ldr	r0, [pc, #208]	; 3e2d0 <flatcc_builder_start_union_vector@@Base+0x144>
   3e1fc:	ldr	r1, [r4, #176]	; 0xb0
   3e200:	umull	r0, r2, r0, r2
   3e204:	lsr	r2, r2, #3
   3e208:	cmp	r1, #0
   3e20c:	cmpgt	r2, r1
   3e210:	str	r2, [r4, #160]	; 0xa0
   3e214:	strgt	r1, [r4, #160]	; 0xa0
   3e218:	b	3e228 <flatcc_builder_start_union_vector@@Base+0x9c>
   3e21c:	ldr	r3, [r0, #32]
   3e220:	add	r3, r3, #36	; 0x24
   3e224:	str	r3, [r0, #32]
   3e228:	ldr	ip, [r4, #20]
   3e22c:	ldr	r1, [r4, #28]
   3e230:	ldrh	r5, [r4, #130]	; 0x82
   3e234:	add	r2, ip, r1
   3e238:	add	r2, r2, #7
   3e23c:	str	ip, [r3, #8]
   3e240:	bic	r2, r2, #7
   3e244:	mov	lr, #4
   3e248:	mov	r0, #0
   3e24c:	mov	ip, #8
   3e250:	strh	r5, [r3, #12]
   3e254:	strh	lr, [r4, #130]	; 0x82
   3e258:	str	r1, [r3]
   3e25c:	str	r2, [r4, #28]
   3e260:	str	r0, [r4, #20]
   3e264:	str	r0, [r3, #20]
   3e268:	str	ip, [r3, #16]
   3e26c:	ldr	r1, [r4, #64]	; 0x40
   3e270:	ldr	ip, [r4, #60]	; 0x3c
   3e274:	sub	r1, r1, r2
   3e278:	mvn	lr, #3
   3e27c:	cmp	r1, lr
   3e280:	add	r2, ip, r2
   3e284:	movhi	r1, lr
   3e288:	mov	ip, #7
   3e28c:	strh	ip, [r3, #14]
   3e290:	str	r2, [r4, #16]
   3e294:	str	r1, [r4, #24]
   3e298:	str	lr, [r3, #4]
   3e29c:	add	sp, sp, #8
   3e2a0:	pop	{r4, r5, r6, pc}
   3e2a4:	mov	r1, #4
   3e2a8:	ldr	r0, [r4, #40]	; 0x28
   3e2ac:	str	r1, [sp]
   3e2b0:	add	r1, r4, #84	; 0x54
   3e2b4:	ldr	r6, [r4, #48]	; 0x30
   3e2b8:	blx	r6
   3e2bc:	cmp	r0, #0
   3e2c0:	beq	3e1e0 <flatcc_builder_start_union_vector@@Base+0x54>
   3e2c4:	bl	141f8 <__assert_fail@plt+0xb0>
   3e2c8:	mvn	r0, #0
   3e2cc:	b	3e29c <flatcc_builder_start_union_vector@@Base+0x110>
   3e2d0:	stmiacc	r3!, {r0, r3, r4, r5, r9, sl, fp, pc}^

0003e2d4 <flatcc_builder_end_union_vector@@Base>:
   3e2d4:	ldr	r3, [r1, #32]
   3e2d8:	push	{r4, r5, r6, r7, r8, r9, lr}
   3e2dc:	sub	sp, sp, #12
   3e2e0:	ldrh	r2, [r3, #14]
   3e2e4:	cmp	r2, #7
   3e2e8:	bne	3e4a8 <flatcc_builder_end_union_vector@@Base+0x1d4>
   3e2ec:	ldr	r5, [r3, #20]
   3e2f0:	ldr	r8, [r1, #20]
   3e2f4:	ldr	r3, [r1, #24]
   3e2f8:	lsl	r7, r5, #2
   3e2fc:	add	r2, r7, r5
   3e300:	add	r2, r2, r8
   3e304:	cmp	r2, r3
   3e308:	mov	r4, r1
   3e30c:	mov	r6, r0
   3e310:	str	r2, [r1, #20]
   3e314:	bcs	3e3f0 <flatcc_builder_end_union_vector@@Base+0x11c>
   3e318:	ldr	r3, [r1, #16]
   3e31c:	adds	r1, r3, r8
   3e320:	beq	3e490 <flatcc_builder_end_union_vector@@Base+0x1bc>
   3e324:	cmp	r5, #0
   3e328:	add	r7, r1, r7
   3e32c:	addne	lr, r3, r5, lsl #3
   3e330:	subne	r0, r7, #1
   3e334:	subne	r2, r1, #4
   3e338:	beq	3e450 <flatcc_builder_end_union_vector@@Base+0x17c>
   3e33c:	ldrb	ip, [r3]
   3e340:	add	r3, r3, #8
   3e344:	strb	ip, [r0, #1]!
   3e348:	ldr	ip, [r3, #-4]
   3e34c:	cmp	lr, r3
   3e350:	str	ip, [r2, #4]!
   3e354:	bne	3e33c <flatcc_builder_end_union_vector@@Base+0x68>
   3e358:	cmn	r5, #-1073741823	; 0xc0000001
   3e35c:	bls	3e450 <flatcc_builder_end_union_vector@@Base+0x17c>
   3e360:	mov	r8, #0
   3e364:	mov	r5, r8
   3e368:	ldr	r2, [r4, #20]
   3e36c:	mov	r1, #0
   3e370:	ldr	r0, [r4, #16]
   3e374:	bl	140ac <memset@plt>
   3e378:	ldr	r3, [r4, #32]
   3e37c:	ldr	r2, [r4, #64]	; 0x40
   3e380:	ldrh	lr, [r4, #130]	; 0x82
   3e384:	ldr	ip, [r3]
   3e388:	ldr	r1, [r3, #4]
   3e38c:	ldrh	r0, [r4, #128]	; 0x80
   3e390:	sub	r2, r2, ip
   3e394:	cmp	r2, r1
   3e398:	movcs	r2, r1
   3e39c:	cmp	r0, lr
   3e3a0:	ldr	r0, [r4, #60]	; 0x3c
   3e3a4:	ldr	r7, [r3, #8]
   3e3a8:	str	r2, [r4, #24]
   3e3ac:	add	r2, r0, ip
   3e3b0:	str	r2, [r4, #16]
   3e3b4:	str	r7, [r4, #20]
   3e3b8:	ldr	r2, [r4, #156]	; 0x9c
   3e3bc:	str	ip, [r4, #28]
   3e3c0:	str	r1, [r3, #4]
   3e3c4:	strhcc	lr, [r4, #128]	; 0x80
   3e3c8:	ldrh	r1, [r3, #12]
   3e3cc:	sub	r2, r2, #1
   3e3d0:	sub	r3, r3, #36	; 0x24
   3e3d4:	mov	r0, r6
   3e3d8:	stm	r6, {r5, r8}
   3e3dc:	str	r2, [r4, #156]	; 0x9c
   3e3e0:	strh	r1, [r4, #130]	; 0x82
   3e3e4:	str	r3, [r4, #32]
   3e3e8:	add	sp, sp, #12
   3e3ec:	pop	{r4, r5, r6, r7, r8, r9, pc}
   3e3f0:	ldr	r1, [r1, #28]
   3e3f4:	mov	r3, #1
   3e3f8:	add	r1, r1, #1
   3e3fc:	ldr	r0, [r4, #40]	; 0x28
   3e400:	add	r2, r1, r2
   3e404:	str	r3, [sp]
   3e408:	add	r1, r4, #60	; 0x3c
   3e40c:	ldr	r9, [r4, #48]	; 0x30
   3e410:	blx	r9
   3e414:	cmp	r0, #0
   3e418:	bne	3e490 <flatcc_builder_end_union_vector@@Base+0x1bc>
   3e41c:	ldr	r1, [r4, #28]
   3e420:	ldr	r2, [r4, #64]	; 0x40
   3e424:	ldr	r3, [r4, #60]	; 0x3c
   3e428:	sub	r2, r2, r1
   3e42c:	cmn	r2, #4
   3e430:	mvnhi	r2, #3
   3e434:	str	r2, [r4, #24]
   3e438:	ldr	r2, [r4, #32]
   3e43c:	add	r3, r3, r1
   3e440:	mvn	r1, #3
   3e444:	str	r3, [r4, #16]
   3e448:	str	r1, [r2, #4]
   3e44c:	b	3e31c <flatcc_builder_end_union_vector@@Base+0x48>
   3e450:	mov	r3, r7
   3e454:	mov	r2, r5
   3e458:	mov	r0, r4
   3e45c:	bl	3a0cc <flatcc_builder_default_alloc@@Base+0x10c>
   3e460:	subs	r8, r0, #0
   3e464:	beq	3e360 <flatcc_builder_end_union_vector@@Base+0x8c>
   3e468:	mvn	r0, #0
   3e46c:	mov	r3, #1
   3e470:	mov	r2, r5
   3e474:	str	r0, [sp, #4]
   3e478:	mov	r1, r7
   3e47c:	str	r3, [sp]
   3e480:	mov	r0, r4
   3e484:	bl	3d79c <flatcc_builder_create_vector@@Base>
   3e488:	mov	r5, r0
   3e48c:	b	3e368 <flatcc_builder_end_union_vector@@Base+0x94>
   3e490:	mov	r3, #0
   3e494:	mov	r0, r6
   3e498:	str	r3, [r6]
   3e49c:	str	r3, [r6, #4]
   3e4a0:	add	sp, sp, #12
   3e4a4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   3e4a8:	ldr	r3, [pc, #12]	; 3e4bc <flatcc_builder_end_union_vector@@Base+0x1e8>
   3e4ac:	ldr	r2, [pc, #12]	; 3e4c0 <flatcc_builder_end_union_vector@@Base+0x1ec>
   3e4b0:	ldr	r1, [pc, #12]	; 3e4c4 <flatcc_builder_end_union_vector@@Base+0x1f0>
   3e4b4:	ldr	r0, [pc, #12]	; 3e4c8 <flatcc_builder_end_union_vector@@Base+0x1f4>
   3e4b8:	bl	14148 <__assert_fail@plt>
   3e4bc:	andeq	sp, r5, r0, ror lr
   3e4c0:	andeq	r0, r0, r1, asr r6
   3e4c4:	ldrdeq	sp, [r5], -ip
   3e4c8:	andeq	lr, r5, r8, ror #5

0003e4cc <flatcc_builder_union_vector_edit@@Base>:
   3e4cc:	ldr	r0, [r0, #16]
   3e4d0:	bx	lr

0003e4d4 <flatcc_builder_union_vector_count@@Base>:
   3e4d4:	ldr	r3, [r0, #32]
   3e4d8:	ldr	r0, [r3, #20]
   3e4dc:	bx	lr

0003e4e0 <flatcc_builder_extend_union_vector@@Base>:
   3e4e0:	ldr	ip, [r0, #32]
   3e4e4:	push	{r4, r5, r6, r7, lr}
   3e4e8:	mov	r4, r0
   3e4ec:	ldr	r3, [ip, #20]
   3e4f0:	sub	sp, sp, #12
   3e4f4:	adds	r3, r1, r3
   3e4f8:	movcs	r2, #1
   3e4fc:	movcc	r2, #0
   3e500:	cmn	r3, #-536870911	; 0xe0000001
   3e504:	movls	r0, #0
   3e508:	movhi	r0, #1
   3e50c:	orrs	r5, r2, r0
   3e510:	bne	3e5a8 <flatcc_builder_extend_union_vector@@Base+0xc8>
   3e514:	str	r3, [ip, #20]
   3e518:	ldr	r6, [r4, #20]
   3e51c:	ldr	r3, [r4, #24]
   3e520:	add	r1, r6, r1, lsl #3
   3e524:	cmp	r1, r3
   3e528:	str	r1, [r4, #20]
   3e52c:	bcs	3e540 <flatcc_builder_extend_union_vector@@Base+0x60>
   3e530:	ldr	r0, [r4, #16]
   3e534:	add	r0, r0, r6
   3e538:	add	sp, sp, #12
   3e53c:	pop	{r4, r5, r6, r7, pc}
   3e540:	ldr	r2, [r4, #28]
   3e544:	mov	r3, #1
   3e548:	add	r2, r2, #1
   3e54c:	ldr	r0, [r4, #40]	; 0x28
   3e550:	add	r2, r2, r1
   3e554:	str	r3, [sp]
   3e558:	add	r1, r4, #60	; 0x3c
   3e55c:	ldr	r7, [r4, #48]	; 0x30
   3e560:	blx	r7
   3e564:	cmp	r0, #0
   3e568:	bne	3e5a0 <flatcc_builder_extend_union_vector@@Base+0xc0>
   3e56c:	ldr	r2, [r4, #28]
   3e570:	ldr	r3, [r4, #64]	; 0x40
   3e574:	ldr	r0, [r4, #60]	; 0x3c
   3e578:	sub	r3, r3, r2
   3e57c:	cmn	r3, #4
   3e580:	mvnhi	r3, #3
   3e584:	str	r3, [r4, #24]
   3e588:	ldr	r3, [r4, #32]
   3e58c:	add	r0, r0, r2
   3e590:	mvn	r2, #3
   3e594:	str	r0, [r4, #16]
   3e598:	str	r2, [r3, #4]
   3e59c:	b	3e534 <flatcc_builder_extend_union_vector@@Base+0x54>
   3e5a0:	mov	r0, r5
   3e5a4:	b	3e538 <flatcc_builder_extend_union_vector@@Base+0x58>
   3e5a8:	bl	1426c <__assert_fail@plt+0x124>

0003e5ac <flatcc_builder_truncate_union_vector@@Base>:
   3e5ac:	ldr	r3, [r0, #32]
   3e5b0:	push	{r4, lr}
   3e5b4:	ldrh	r2, [r3, #14]
   3e5b8:	cmp	r2, #7
   3e5bc:	bne	3e600 <flatcc_builder_truncate_union_vector@@Base+0x54>
   3e5c0:	ldr	ip, [r3, #20]
   3e5c4:	cmp	ip, r1
   3e5c8:	bcc	3e614 <flatcc_builder_truncate_union_vector@@Base+0x68>
   3e5cc:	ldr	r2, [r3, #16]
   3e5d0:	sub	ip, ip, r1
   3e5d4:	str	ip, [r3, #20]
   3e5d8:	mul	r2, r2, r1
   3e5dc:	ldr	r3, [r0, #20]
   3e5e0:	ldr	r1, [r0, #16]
   3e5e4:	sub	r3, r3, r2
   3e5e8:	str	r3, [r0, #20]
   3e5ec:	add	r0, r1, r3
   3e5f0:	mov	r1, #0
   3e5f4:	bl	140ac <memset@plt>
   3e5f8:	mov	r0, #0
   3e5fc:	pop	{r4, pc}
   3e600:	ldr	r3, [pc, #32]	; 3e628 <flatcc_builder_truncate_union_vector@@Base+0x7c>
   3e604:	ldr	r2, [pc, #32]	; 3e62c <flatcc_builder_truncate_union_vector@@Base+0x80>
   3e608:	ldr	r1, [pc, #32]	; 3e630 <flatcc_builder_truncate_union_vector@@Base+0x84>
   3e60c:	ldr	r0, [pc, #32]	; 3e634 <flatcc_builder_truncate_union_vector@@Base+0x88>
   3e610:	bl	14148 <__assert_fail@plt>
   3e614:	ldr	r3, [pc, #12]	; 3e628 <flatcc_builder_truncate_union_vector@@Base+0x7c>
   3e618:	ldr	r2, [pc, #24]	; 3e638 <flatcc_builder_truncate_union_vector@@Base+0x8c>
   3e61c:	ldr	r1, [pc, #12]	; 3e630 <flatcc_builder_truncate_union_vector@@Base+0x84>
   3e620:	ldr	r0, [pc, #20]	; 3e63c <flatcc_builder_truncate_union_vector@@Base+0x90>
   3e624:	bl	14148 <__assert_fail@plt>
   3e628:	muleq	r5, r0, lr
   3e62c:	andeq	r0, r0, r1, lsl #13
   3e630:	ldrdeq	sp, [r5], -ip
   3e634:	andeq	lr, r5, r8, ror #5
   3e638:	andeq	r0, r0, r2, lsl #13
   3e63c:	andeq	lr, r5, ip, lsl #4

0003e640 <flatcc_builder_union_vector_push@@Base>:
   3e640:	push	{r4, r5, r6, r7, lr}
   3e644:	mov	r4, r0
   3e648:	ldr	r0, [r0, #32]
   3e64c:	sub	sp, sp, #20
   3e650:	add	r5, sp, #8
   3e654:	ldrh	r3, [r0, #14]
   3e658:	stm	r5, {r1, r2}
   3e65c:	cmp	r3, #7
   3e660:	bne	3e724 <flatcc_builder_union_vector_push@@Base+0xe4>
   3e664:	ldr	r3, [r0, #20]
   3e668:	cmn	r3, #-536870911	; 0xe0000001
   3e66c:	beq	3e714 <flatcc_builder_union_vector_push@@Base+0xd4>
   3e670:	add	r3, r3, #1
   3e674:	str	r3, [r0, #20]
   3e678:	ldr	r6, [r4, #20]
   3e67c:	ldr	r2, [r4, #24]
   3e680:	add	r3, r6, #8
   3e684:	cmp	r3, r2
   3e688:	str	r3, [r4, #20]
   3e68c:	bcs	3e6b4 <flatcc_builder_union_vector_push@@Base+0x74>
   3e690:	ldr	r3, [r4, #16]
   3e694:	adds	r3, r3, r6
   3e698:	movne	r2, r3
   3e69c:	ldmne	r5, {r0, r1}
   3e6a0:	moveq	r2, r3
   3e6a4:	stmne	r3, {r0, r1}
   3e6a8:	mov	r0, r2
   3e6ac:	add	sp, sp, #20
   3e6b0:	pop	{r4, r5, r6, r7, pc}
   3e6b4:	ldr	r2, [r4, #28]
   3e6b8:	mov	r3, #1
   3e6bc:	add	r2, r6, r2
   3e6c0:	ldr	r0, [r4, #40]	; 0x28
   3e6c4:	add	r2, r2, #9
   3e6c8:	str	r3, [sp]
   3e6cc:	add	r1, r4, #60	; 0x3c
   3e6d0:	ldr	r7, [r4, #48]	; 0x30
   3e6d4:	blx	r7
   3e6d8:	cmp	r0, #0
   3e6dc:	bne	3e714 <flatcc_builder_union_vector_push@@Base+0xd4>
   3e6e0:	ldr	r1, [r4, #28]
   3e6e4:	ldr	r2, [r4, #64]	; 0x40
   3e6e8:	ldr	r3, [r4, #60]	; 0x3c
   3e6ec:	sub	r2, r2, r1
   3e6f0:	cmn	r2, #4
   3e6f4:	mvnhi	r2, #3
   3e6f8:	str	r2, [r4, #24]
   3e6fc:	ldr	r2, [r4, #32]
   3e700:	add	r3, r3, r1
   3e704:	mvn	r1, #3
   3e708:	str	r3, [r4, #16]
   3e70c:	str	r1, [r2, #4]
   3e710:	b	3e694 <flatcc_builder_union_vector_push@@Base+0x54>
   3e714:	mov	r2, #0
   3e718:	mov	r0, r2
   3e71c:	add	sp, sp, #20
   3e720:	pop	{r4, r5, r6, r7, pc}
   3e724:	ldr	r3, [pc, #12]	; 3e738 <flatcc_builder_union_vector_push@@Base+0xf8>
   3e728:	ldr	r2, [pc, #12]	; 3e73c <flatcc_builder_union_vector_push@@Base+0xfc>
   3e72c:	ldr	r1, [pc, #12]	; 3e740 <flatcc_builder_union_vector_push@@Base+0x100>
   3e730:	ldr	r0, [pc, #12]	; 3e744 <flatcc_builder_union_vector_push@@Base+0x104>
   3e734:	bl	14148 <__assert_fail@plt>
   3e738:			; <UNDEFINED> instruction: 0x0005deb8
   3e73c:	andeq	r0, r0, sp, lsl #13
   3e740:	ldrdeq	sp, [r5], -ip
   3e744:	andeq	lr, r5, r8, ror #5

0003e748 <flatcc_builder_append_union_vector@@Base>:
   3e748:	push	{r4, r5, r6, r7, r8, r9, lr}
   3e74c:	mov	r5, r0
   3e750:	ldr	r0, [r0, #32]
   3e754:	sub	sp, sp, #12
   3e758:	ldrh	r3, [r0, #14]
   3e75c:	cmp	r3, #7
   3e760:	bne	3e844 <flatcc_builder_append_union_vector@@Base+0xfc>
   3e764:	mov	r7, r1
   3e768:	ldr	r1, [r0, #20]
   3e76c:	adds	r1, r2, r1
   3e770:	movcs	r4, #1
   3e774:	movcc	r4, #0
   3e778:	cmn	r1, #-536870911	; 0xe0000001
   3e77c:	movls	r3, #0
   3e780:	movhi	r3, #1
   3e784:	orrs	r4, r4, r3
   3e788:	bne	3e840 <flatcc_builder_append_union_vector@@Base+0xf8>
   3e78c:	str	r1, [r0, #20]
   3e790:	ldr	r8, [r5, #20]
   3e794:	lsl	r6, r2, #3
   3e798:	ldr	r3, [r5, #24]
   3e79c:	add	r1, r6, r8
   3e7a0:	cmp	r1, r3
   3e7a4:	str	r1, [r5, #20]
   3e7a8:	bcs	3e7d8 <flatcc_builder_append_union_vector@@Base+0x90>
   3e7ac:	ldr	r3, [r5, #16]
   3e7b0:	adds	r3, r3, r8
   3e7b4:	beq	3e7cc <flatcc_builder_append_union_vector@@Base+0x84>
   3e7b8:	mov	r0, r3
   3e7bc:	mov	r2, r6
   3e7c0:	mov	r1, r7
   3e7c4:	bl	13fe0 <memcpy@plt>
   3e7c8:	mov	r3, r0
   3e7cc:	mov	r0, r3
   3e7d0:	add	sp, sp, #12
   3e7d4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   3e7d8:	ldr	r2, [r5, #28]
   3e7dc:	mov	r3, #1
   3e7e0:	add	r2, r2, #1
   3e7e4:	ldr	r0, [r5, #40]	; 0x28
   3e7e8:	add	r2, r2, r1
   3e7ec:	str	r3, [sp]
   3e7f0:	add	r1, r5, #60	; 0x3c
   3e7f4:	ldr	r9, [r5, #48]	; 0x30
   3e7f8:	blx	r9
   3e7fc:	cmp	r0, #0
   3e800:	bne	3e838 <flatcc_builder_append_union_vector@@Base+0xf0>
   3e804:	ldr	r1, [r5, #28]
   3e808:	ldr	r2, [r5, #64]	; 0x40
   3e80c:	ldr	r3, [r5, #60]	; 0x3c
   3e810:	sub	r2, r2, r1
   3e814:	cmn	r2, #4
   3e818:	mvnhi	r2, #3
   3e81c:	str	r2, [r5, #24]
   3e820:	ldr	r2, [r5, #32]
   3e824:	add	r3, r3, r1
   3e828:	mvn	r1, #3
   3e82c:	str	r3, [r5, #16]
   3e830:	str	r1, [r2, #4]
   3e834:	b	3e7b0 <flatcc_builder_append_union_vector@@Base+0x68>
   3e838:	mov	r3, r4
   3e83c:	b	3e7cc <flatcc_builder_append_union_vector@@Base+0x84>
   3e840:	bl	1426c <__assert_fail@plt+0x124>
   3e844:	ldr	r3, [pc, #12]	; 3e858 <flatcc_builder_append_union_vector@@Base+0x110>
   3e848:	ldr	r2, [pc, #12]	; 3e85c <flatcc_builder_append_union_vector@@Base+0x114>
   3e84c:	ldr	r1, [pc, #12]	; 3e860 <flatcc_builder_append_union_vector@@Base+0x118>
   3e850:	ldr	r0, [pc, #12]	; 3e864 <flatcc_builder_append_union_vector@@Base+0x11c>
   3e854:	bl	14148 <__assert_fail@plt>
   3e858:	ldrdeq	sp, [r5], -ip
   3e85c:	muleq	r0, ip, r6
   3e860:	ldrdeq	sp, [r5], -ip
   3e864:	andeq	lr, r5, r8, ror #5

0003e868 <flatcc_builder_create_string@@Base>:
   3e868:	push	{r4, r5, r6, lr}
   3e86c:	sub	sp, sp, #88	; 0x58
   3e870:	ldr	lr, [r0, #136]	; 0x88
   3e874:	mov	r4, r0
   3e878:	add	r0, sp, #88	; 0x58
   3e87c:	cmp	r2, #0
   3e880:	sub	r3, lr, r2
   3e884:	str	r2, [r0, #-76]!	; 0xffffffb4
   3e888:	sub	r3, r3, #1
   3e88c:	str	r0, [sp, #24]
   3e890:	moveq	r0, #1
   3e894:	strne	r1, [sp, #32]
   3e898:	mov	ip, #4
   3e89c:	moveq	r1, r0
   3e8a0:	movne	r1, #2
   3e8a4:	and	r3, r3, #3
   3e8a8:	str	ip, [sp, #28]
   3e8ac:	add	r3, r3, #1
   3e8b0:	addne	ip, r2, ip
   3e8b4:	add	r1, r1, #1
   3e8b8:	add	ip, ip, r3
   3e8bc:	add	r0, sp, #88	; 0x58
   3e8c0:	add	r1, r0, r1, lsl #3
   3e8c4:	sub	r5, lr, ip
   3e8c8:	ldr	r0, [pc, #104]	; 3e938 <flatcc_builder_create_string@@Base+0xd0>
   3e8cc:	strne	r2, [sp, #36]	; 0x24
   3e8d0:	moveq	r2, #2
   3e8d4:	movne	r2, #3
   3e8d8:	cmp	lr, r5
   3e8dc:	str	r3, [r1, #-68]	; 0xffffffbc
   3e8e0:	str	ip, [sp, #16]
   3e8e4:	str	r2, [sp, #20]
   3e8e8:	str	r0, [r1, #-72]	; 0xffffffb8
   3e8ec:	ble	3e920 <flatcc_builder_create_string@@Base+0xb8>
   3e8f0:	ldr	r0, [r4, #36]	; 0x24
   3e8f4:	mov	r3, r5
   3e8f8:	str	ip, [sp]
   3e8fc:	add	r1, sp, #24
   3e900:	ldr	r6, [r4, #44]	; 0x2c
   3e904:	blx	r6
   3e908:	cmp	r0, #0
   3e90c:	bne	3e924 <flatcc_builder_create_string@@Base+0xbc>
   3e910:	mov	r0, r5
   3e914:	str	r5, [r4, #136]	; 0x88
   3e918:	add	sp, sp, #88	; 0x58
   3e91c:	pop	{r4, r5, r6, pc}
   3e920:	bl	14244 <__assert_fail@plt+0xfc>
   3e924:	ldr	r3, [pc, #16]	; 3e93c <flatcc_builder_create_string@@Base+0xd4>
   3e928:	ldr	r2, [pc, #16]	; 3e940 <flatcc_builder_create_string@@Base+0xd8>
   3e92c:	ldr	r1, [pc, #16]	; 3e944 <flatcc_builder_create_string@@Base+0xdc>
   3e930:	ldr	r0, [pc, #16]	; 3e948 <flatcc_builder_create_string@@Base+0xe0>
   3e934:	bl	14148 <__assert_fail@plt>
   3e938:	andeq	sp, r5, r4, lsr #18
   3e93c:	andeq	sp, r5, r8, lsr #17
   3e940:	andeq	r0, r0, fp, lsl #5
   3e944:	ldrdeq	sp, [r5], -ip
   3e948:	andeq	sp, r4, r4, ror r2

0003e94c <flatcc_builder_create_string_str@@Base>:
   3e94c:	push	{r4, r5, r6, lr}
   3e950:	mov	r4, r0
   3e954:	sub	sp, sp, #88	; 0x58
   3e958:	mov	r0, r1
   3e95c:	mov	r5, r1
   3e960:	bl	1407c <strlen@plt>
   3e964:	ldr	lr, [r4, #136]	; 0x88
   3e968:	add	r2, sp, #88	; 0x58
   3e96c:	sub	r3, lr, #1
   3e970:	mov	ip, #4
   3e974:	str	ip, [sp, #28]
   3e978:	cmp	r0, #0
   3e97c:	str	r0, [r2, #-76]!	; 0xffffffb4
   3e980:	sub	r3, r3, r0
   3e984:	str	r2, [sp, #24]
   3e988:	moveq	r2, #1
   3e98c:	moveq	r1, r2
   3e990:	movne	r1, #2
   3e994:	and	r3, r3, #3
   3e998:	addne	ip, r0, ip
   3e99c:	add	r3, r3, #1
   3e9a0:	add	r1, r1, #1
   3e9a4:	strne	r0, [sp, #36]	; 0x24
   3e9a8:	add	ip, ip, r3
   3e9ac:	add	r0, sp, #88	; 0x58
   3e9b0:	strne	r5, [sp, #32]
   3e9b4:	add	r1, r0, r1, lsl #3
   3e9b8:	sub	r5, lr, ip
   3e9bc:	ldr	r0, [pc, #100]	; 3ea28 <flatcc_builder_create_string_str@@Base+0xdc>
   3e9c0:	movne	r2, #3
   3e9c4:	moveq	r2, #2
   3e9c8:	cmp	lr, r5
   3e9cc:	str	r3, [r1, #-68]	; 0xffffffbc
   3e9d0:	str	ip, [sp, #16]
   3e9d4:	str	r2, [sp, #20]
   3e9d8:	str	r0, [r1, #-72]	; 0xffffffb8
   3e9dc:	ble	3ea10 <flatcc_builder_create_string_str@@Base+0xc4>
   3e9e0:	ldr	r0, [r4, #36]	; 0x24
   3e9e4:	mov	r3, r5
   3e9e8:	str	ip, [sp]
   3e9ec:	add	r1, sp, #24
   3e9f0:	ldr	r6, [r4, #44]	; 0x2c
   3e9f4:	blx	r6
   3e9f8:	cmp	r0, #0
   3e9fc:	bne	3ea14 <flatcc_builder_create_string_str@@Base+0xc8>
   3ea00:	mov	r0, r5
   3ea04:	str	r5, [r4, #136]	; 0x88
   3ea08:	add	sp, sp, #88	; 0x58
   3ea0c:	pop	{r4, r5, r6, pc}
   3ea10:	bl	14244 <__assert_fail@plt+0xfc>
   3ea14:	ldr	r3, [pc, #16]	; 3ea2c <flatcc_builder_create_string_str@@Base+0xe0>
   3ea18:	ldr	r2, [pc, #16]	; 3ea30 <flatcc_builder_create_string_str@@Base+0xe4>
   3ea1c:	ldr	r1, [pc, #16]	; 3ea34 <flatcc_builder_create_string_str@@Base+0xe8>
   3ea20:	ldr	r0, [pc, #16]	; 3ea38 <flatcc_builder_create_string_str@@Base+0xec>
   3ea24:	bl	14148 <__assert_fail@plt>
   3ea28:	andeq	sp, r5, r4, lsr #18
   3ea2c:	andeq	sp, r5, r8, lsr #17
   3ea30:	andeq	r0, r0, fp, lsl #5
   3ea34:	ldrdeq	sp, [r5], -ip
   3ea38:	andeq	sp, r4, r4, ror r2

0003ea3c <flatcc_builder_create_string_strn@@Base>:
   3ea3c:	push	{r4, r5, r6, lr}
   3ea40:	mov	r6, r1
   3ea44:	sub	sp, sp, #88	; 0x58
   3ea48:	mov	r4, r0
   3ea4c:	mov	r1, #0
   3ea50:	mov	r0, r6
   3ea54:	mov	r5, r2
   3ea58:	bl	140d0 <memchr@plt>
   3ea5c:	mov	ip, #4
   3ea60:	mov	r1, #1
   3ea64:	add	r2, sp, #88	; 0x58
   3ea68:	str	ip, [sp, #28]
   3ea6c:	add	lr, sp, #88	; 0x58
   3ea70:	cmp	r0, #0
   3ea74:	subne	r5, r0, r6
   3ea78:	ldr	r0, [r4, #136]	; 0x88
   3ea7c:	cmp	r5, #0
   3ea80:	sub	r3, r0, #1
   3ea84:	sub	r3, r3, r5
   3ea88:	movne	r1, #2
   3ea8c:	and	r3, r3, #3
   3ea90:	addne	ip, r5, ip
   3ea94:	add	r3, r3, #1
   3ea98:	add	r1, r1, #1
   3ea9c:	add	ip, r3, ip
   3eaa0:	str	r5, [r2, #-76]!	; 0xffffffb4
   3eaa4:	strne	r5, [sp, #36]	; 0x24
   3eaa8:	add	r1, lr, r1, lsl #3
   3eaac:	sub	r5, r0, ip
   3eab0:	ldr	lr, [pc, #108]	; 3eb24 <flatcc_builder_create_string_strn@@Base+0xe8>
   3eab4:	str	r2, [sp, #24]
   3eab8:	strne	r6, [sp, #32]
   3eabc:	movne	r2, #3
   3eac0:	moveq	r2, #2
   3eac4:	cmp	r0, r5
   3eac8:	str	r3, [r1, #-68]	; 0xffffffbc
   3eacc:	str	ip, [sp, #16]
   3ead0:	str	r2, [sp, #20]
   3ead4:	str	lr, [r1, #-72]	; 0xffffffb8
   3ead8:	ble	3eb0c <flatcc_builder_create_string_strn@@Base+0xd0>
   3eadc:	ldr	r0, [r4, #36]	; 0x24
   3eae0:	mov	r3, r5
   3eae4:	str	ip, [sp]
   3eae8:	add	r1, sp, #24
   3eaec:	ldr	r6, [r4, #44]	; 0x2c
   3eaf0:	blx	r6
   3eaf4:	cmp	r0, #0
   3eaf8:	bne	3eb10 <flatcc_builder_create_string_strn@@Base+0xd4>
   3eafc:	mov	r0, r5
   3eb00:	str	r5, [r4, #136]	; 0x88
   3eb04:	add	sp, sp, #88	; 0x58
   3eb08:	pop	{r4, r5, r6, pc}
   3eb0c:	bl	14244 <__assert_fail@plt+0xfc>
   3eb10:	ldr	r3, [pc, #16]	; 3eb28 <flatcc_builder_create_string_strn@@Base+0xec>
   3eb14:	ldr	r2, [pc, #16]	; 3eb2c <flatcc_builder_create_string_strn@@Base+0xf0>
   3eb18:	ldr	r1, [pc, #16]	; 3eb30 <flatcc_builder_create_string_strn@@Base+0xf4>
   3eb1c:	ldr	r0, [pc, #16]	; 3eb34 <flatcc_builder_create_string_strn@@Base+0xf8>
   3eb20:	bl	14148 <__assert_fail@plt>
   3eb24:	andeq	sp, r5, r4, lsr #18
   3eb28:	andeq	sp, r5, r8, lsr #17
   3eb2c:	andeq	r0, r0, fp, lsl #5
   3eb30:	ldrdeq	sp, [r5], -ip
   3eb34:	andeq	sp, r4, r4, ror r2

0003eb38 <flatcc_builder_end_string@@Base>:
   3eb38:	ldr	r3, [r0, #32]
   3eb3c:	push	{r4, r5, r6, lr}
   3eb40:	sub	sp, sp, #88	; 0x58
   3eb44:	ldrh	r2, [r3, #14]
   3eb48:	cmp	r2, #6
   3eb4c:	bne	3ecb8 <flatcc_builder_end_string@@Base+0x180>
   3eb50:	ldr	r2, [r3, #20]
   3eb54:	ldr	r3, [r0, #20]
   3eb58:	mov	r4, r0
   3eb5c:	cmp	r2, r3
   3eb60:	bne	3eca4 <flatcc_builder_end_string@@Base+0x16c>
   3eb64:	ldr	r0, [r0, #136]	; 0x88
   3eb68:	add	r1, sp, #88	; 0x58
   3eb6c:	sub	r3, r0, #1
   3eb70:	cmp	r2, #0
   3eb74:	sub	r3, r3, r2
   3eb78:	str	r2, [r1, #-76]!	; 0xffffffb4
   3eb7c:	mov	ip, #4
   3eb80:	str	r1, [sp, #24]
   3eb84:	ldr	lr, [r4, #16]
   3eb88:	mov	r1, #1
   3eb8c:	and	r3, r3, #3
   3eb90:	movne	r1, #2
   3eb94:	str	ip, [sp, #28]
   3eb98:	add	r3, r3, #1
   3eb9c:	addne	ip, r2, ip
   3eba0:	add	r1, r1, #1
   3eba4:	strne	lr, [sp, #32]
   3eba8:	add	ip, ip, r3
   3ebac:	add	lr, sp, #88	; 0x58
   3ebb0:	add	r1, lr, r1, lsl #3
   3ebb4:	sub	r5, r0, ip
   3ebb8:	ldr	lr, [pc, #268]	; 3eccc <flatcc_builder_end_string@@Base+0x194>
   3ebbc:	strne	r2, [sp, #36]	; 0x24
   3ebc0:	moveq	r2, #2
   3ebc4:	movne	r2, #3
   3ebc8:	cmp	r0, r5
   3ebcc:	str	r3, [r1, #-68]	; 0xffffffbc
   3ebd0:	str	ip, [sp, #16]
   3ebd4:	str	r2, [sp, #20]
   3ebd8:	str	lr, [r1, #-72]	; 0xffffffb8
   3ebdc:	ble	3eca0 <flatcc_builder_end_string@@Base+0x168>
   3ebe0:	ldr	r0, [r4, #36]	; 0x24
   3ebe4:	add	r1, sp, #24
   3ebe8:	str	ip, [sp]
   3ebec:	mov	r3, r5
   3ebf0:	ldr	r6, [r4, #44]	; 0x2c
   3ebf4:	blx	r6
   3ebf8:	subs	r1, r0, #0
   3ebfc:	bne	3ec8c <flatcc_builder_end_string@@Base+0x154>
   3ec00:	cmp	r5, #0
   3ec04:	str	r5, [r4, #136]	; 0x88
   3ec08:	beq	3ec80 <flatcc_builder_end_string@@Base+0x148>
   3ec0c:	ldr	r2, [r4, #20]
   3ec10:	ldr	r0, [r4, #16]
   3ec14:	bl	140ac <memset@plt>
   3ec18:	ldr	r3, [r4, #32]
   3ec1c:	ldr	r2, [r4, #64]	; 0x40
   3ec20:	ldrh	lr, [r4, #130]	; 0x82
   3ec24:	ldr	ip, [r3]
   3ec28:	ldr	r1, [r3, #4]
   3ec2c:	ldrh	r0, [r4, #128]	; 0x80
   3ec30:	sub	r2, r2, ip
   3ec34:	cmp	r2, r1
   3ec38:	movcs	r2, r1
   3ec3c:	cmp	r0, lr
   3ec40:	ldr	r0, [r4, #60]	; 0x3c
   3ec44:	ldr	r6, [r3, #8]
   3ec48:	str	r2, [r4, #24]
   3ec4c:	add	r2, r0, ip
   3ec50:	str	r2, [r4, #16]
   3ec54:	str	r6, [r4, #20]
   3ec58:	ldr	r2, [r4, #156]	; 0x9c
   3ec5c:	str	ip, [r4, #28]
   3ec60:	str	r1, [r3, #4]
   3ec64:	strhcc	lr, [r4, #128]	; 0x80
   3ec68:	ldrh	r1, [r3, #12]
   3ec6c:	sub	r2, r2, #1
   3ec70:	sub	r3, r3, #36	; 0x24
   3ec74:	str	r2, [r4, #156]	; 0x9c
   3ec78:	strh	r1, [r4, #130]	; 0x82
   3ec7c:	str	r3, [r4, #32]
   3ec80:	mov	r0, r5
   3ec84:	add	sp, sp, #88	; 0x58
   3ec88:	pop	{r4, r5, r6, pc}
   3ec8c:	ldr	r3, [pc, #60]	; 3ecd0 <flatcc_builder_end_string@@Base+0x198>
   3ec90:	ldr	r2, [pc, #60]	; 3ecd4 <flatcc_builder_end_string@@Base+0x19c>
   3ec94:	ldr	r1, [pc, #60]	; 3ecd8 <flatcc_builder_end_string@@Base+0x1a0>
   3ec98:	ldr	r0, [pc, #60]	; 3ecdc <flatcc_builder_end_string@@Base+0x1a4>
   3ec9c:	bl	14148 <__assert_fail@plt>
   3eca0:	bl	14244 <__assert_fail@plt+0xfc>
   3eca4:	ldr	r3, [pc, #52]	; 3ece0 <flatcc_builder_end_string@@Base+0x1a8>
   3eca8:	ldr	r2, [pc, #52]	; 3ece4 <flatcc_builder_end_string@@Base+0x1ac>
   3ecac:	ldr	r1, [pc, #36]	; 3ecd8 <flatcc_builder_end_string@@Base+0x1a0>
   3ecb0:	ldr	r0, [pc, #48]	; 3ece8 <flatcc_builder_end_string@@Base+0x1b0>
   3ecb4:	bl	14148 <__assert_fail@plt>
   3ecb8:	ldr	r3, [pc, #32]	; 3ece0 <flatcc_builder_end_string@@Base+0x1a8>
   3ecbc:	ldr	r2, [pc, #40]	; 3ecec <flatcc_builder_end_string@@Base+0x1b4>
   3ecc0:	ldr	r1, [pc, #16]	; 3ecd8 <flatcc_builder_end_string@@Base+0x1a0>
   3ecc4:	ldr	r0, [pc, #36]	; 3ecf0 <flatcc_builder_end_string@@Base+0x1b8>
   3ecc8:	bl	14148 <__assert_fail@plt>
   3eccc:	andeq	sp, r5, r4, lsr #18
   3ecd0:	andeq	sp, r5, r8, lsr #17
   3ecd4:	andeq	r0, r0, fp, lsl #5
   3ecd8:	ldrdeq	sp, [r5], -ip
   3ecdc:	andeq	sp, r4, r4, ror r2
   3ece0:	andeq	sp, r5, r0, lsl #30
   3ece4:	andeq	r0, r0, r5, asr #13
   3ece8:	andeq	lr, r5, ip, lsl r3
   3ecec:	andeq	r0, r0, r4, asr #13
   3ecf0:	andeq	lr, r5, ip, asr r0

0003ecf4 <flatcc_builder_string_edit@@Base>:
   3ecf4:	ldr	r0, [r0, #16]
   3ecf8:	bx	lr

0003ecfc <flatcc_builder_string_len@@Base>:
   3ecfc:	ldr	r3, [r0, #32]
   3ed00:	ldr	r0, [r3, #20]
   3ed04:	bx	lr

0003ed08 <flatcc_builder_table_add@@Base>:
   3ed08:	push	{r4, r5, r6, r7, r8, r9, lr}
   3ed0c:	mov	r4, r0
   3ed10:	ldr	r0, [r0, #32]
   3ed14:	sub	sp, sp, #12
   3ed18:	ldrh	r0, [r0, #14]
   3ed1c:	cmp	r0, #3
   3ed20:	bne	3ee5c <flatcc_builder_table_add@@Base+0x154>
   3ed24:	ldr	r0, [pc, #324]	; 3ee70 <flatcc_builder_table_add@@Base+0x168>
   3ed28:	cmp	r1, r0
   3ed2c:	bhi	3ee48 <flatcc_builder_table_add@@Base+0x140>
   3ed30:	ldrh	r0, [r4, #130]	; 0x82
   3ed34:	lsl	r7, r1, #1
   3ed38:	cmp	r0, r3
   3ed3c:	ldr	r0, [r4, #4]
   3ed40:	strhcc	r3, [r4, #130]	; 0x82
   3ed44:	add	lr, r0, r7
   3ed48:	ldrh	r6, [r0, r7]
   3ed4c:	cmp	r6, #0
   3ed50:	bne	3ee34 <flatcc_builder_table_add@@Base+0x12c>
   3ed54:	ldr	ip, [r4, #12]
   3ed58:	ldr	r9, [pc, #276]	; 3ee74 <flatcc_builder_table_add@@Base+0x16c>
   3ed5c:	eor	ip, ip, r1
   3ed60:	uxth	r5, r1
   3ed64:	mul	r1, r9, ip
   3ed68:	ldr	r0, [r4, #20]
   3ed6c:	eor	r1, r1, r2
   3ed70:	sub	r8, r3, #1
   3ed74:	add	r8, r8, r0
   3ed78:	rsb	r3, r3, #0
   3ed7c:	and	r8, r8, r3
   3ed80:	mul	r1, r9, r1
   3ed84:	ldr	r3, [r4, #24]
   3ed88:	add	r2, r2, r8
   3ed8c:	cmp	r2, r3
   3ed90:	str	r1, [r4, #12]
   3ed94:	str	r2, [r4, #20]
   3ed98:	bcs	3edc4 <flatcc_builder_table_add@@Base+0xbc>
   3ed9c:	ldr	r0, [r4, #16]
   3eda0:	add	r3, r8, #4
   3eda4:	strh	r3, [lr]
   3eda8:	ldrh	r3, [r4, #8]
   3edac:	add	r0, r0, r8
   3edb0:	cmp	r3, r5
   3edb4:	addls	r5, r5, #1
   3edb8:	strhls	r5, [r4, #8]
   3edbc:	add	sp, sp, #12
   3edc0:	pop	{r4, r5, r6, r7, r8, r9, pc}
   3edc4:	ldr	r1, [r4, #28]
   3edc8:	mov	r3, #1
   3edcc:	add	r1, r1, #1
   3edd0:	ldr	r0, [r4, #40]	; 0x28
   3edd4:	add	r2, r1, r2
   3edd8:	str	r3, [sp]
   3eddc:	add	r1, r4, #60	; 0x3c
   3ede0:	ldr	r9, [r4, #48]	; 0x30
   3ede4:	blx	r9
   3ede8:	cmp	r0, #0
   3edec:	bne	3ee2c <flatcc_builder_table_add@@Base+0x124>
   3edf0:	ldr	r6, [r4, #28]
   3edf4:	ldr	r3, [r4, #64]	; 0x40
   3edf8:	ldr	r2, [pc, #120]	; 3ee78 <flatcc_builder_table_add@@Base+0x170>
   3edfc:	sub	r3, r3, r6
   3ee00:	ldr	r0, [r4, #60]	; 0x3c
   3ee04:	ldr	r1, [r4, #32]
   3ee08:	ldr	lr, [r4, #4]
   3ee0c:	cmp	r3, r2
   3ee10:	add	r0, r0, r6
   3ee14:	movcs	r3, r2
   3ee18:	str	r0, [r4, #16]
   3ee1c:	str	r3, [r4, #24]
   3ee20:	add	lr, lr, r7
   3ee24:	str	r2, [r1, #4]
   3ee28:	b	3eda0 <flatcc_builder_table_add@@Base+0x98>
   3ee2c:	mov	r0, r6
   3ee30:	b	3edbc <flatcc_builder_table_add@@Base+0xb4>
   3ee34:	ldr	r3, [pc, #64]	; 3ee7c <flatcc_builder_table_add@@Base+0x174>
   3ee38:	ldr	r2, [pc, #64]	; 3ee80 <flatcc_builder_table_add@@Base+0x178>
   3ee3c:	ldr	r1, [pc, #64]	; 3ee84 <flatcc_builder_table_add@@Base+0x17c>
   3ee40:	ldr	r0, [pc, #64]	; 3ee88 <flatcc_builder_table_add@@Base+0x180>
   3ee44:	bl	14148 <__assert_fail@plt>
   3ee48:	ldr	r3, [pc, #44]	; 3ee7c <flatcc_builder_table_add@@Base+0x174>
   3ee4c:	ldr	r2, [pc, #56]	; 3ee8c <flatcc_builder_table_add@@Base+0x184>
   3ee50:	ldr	r1, [pc, #44]	; 3ee84 <flatcc_builder_table_add@@Base+0x17c>
   3ee54:	ldr	r0, [pc, #52]	; 3ee90 <flatcc_builder_table_add@@Base+0x188>
   3ee58:	bl	14148 <__assert_fail@plt>
   3ee5c:	ldr	r3, [pc, #24]	; 3ee7c <flatcc_builder_table_add@@Base+0x174>
   3ee60:	ldr	r2, [pc, #44]	; 3ee94 <flatcc_builder_table_add@@Base+0x18c>
   3ee64:	ldr	r1, [pc, #24]	; 3ee84 <flatcc_builder_table_add@@Base+0x17c>
   3ee68:	ldr	r0, [pc, #40]	; 3ee98 <flatcc_builder_table_add@@Base+0x190>
   3ee6c:	bl	14148 <__assert_fail@plt>
   3ee70:	strdeq	r7, [r0], -ip
   3ee74:			; <UNDEFINED> instruction: 0x9e3779b1
   3ee78:	strdeq	pc, [r0], -ip
   3ee7c:	andeq	sp, r5, ip, lsl pc
   3ee80:	strdeq	r0, [r0], -r8
   3ee84:	ldrdeq	sp, [r5], -ip
   3ee88:	andeq	sp, r4, r4, ror r2
   3ee8c:	andeq	r0, r0, lr, ror #13
   3ee90:	andeq	lr, r5, r0, asr #6
   3ee94:	andeq	r0, r0, sp, ror #13
   3ee98:	andeq	lr, r5, r8, lsr #5

0003ee9c <flatcc_builder_table_edit@@Base>:
   3ee9c:	ldr	r3, [r0, #32]
   3eea0:	ldrh	r3, [r3, #14]
   3eea4:	cmp	r3, #3
   3eea8:	bne	3eec0 <flatcc_builder_table_edit@@Base+0x24>
   3eeac:	ldr	r3, [r0, #20]
   3eeb0:	ldr	r0, [r0, #16]
   3eeb4:	sub	r1, r3, r1
   3eeb8:	add	r0, r0, r1
   3eebc:	bx	lr
   3eec0:	push	{r4, lr}
   3eec4:	ldr	r3, [pc, #12]	; 3eed8 <flatcc_builder_table_edit@@Base+0x3c>
   3eec8:	ldr	r2, [pc, #12]	; 3eedc <flatcc_builder_table_edit@@Base+0x40>
   3eecc:	ldr	r1, [pc, #12]	; 3eee0 <flatcc_builder_table_edit@@Base+0x44>
   3eed0:	ldr	r0, [pc, #12]	; 3eee4 <flatcc_builder_table_edit@@Base+0x48>
   3eed4:	bl	14148 <__assert_fail@plt>
   3eed8:	andeq	sp, r5, r8, lsr pc
   3eedc:	andeq	r0, r0, r2, lsl #14
   3eee0:	ldrdeq	sp, [r5], -ip
   3eee4:	andeq	lr, r5, r8, lsr #5

0003eee8 <flatcc_builder_table_add_copy@@Base>:
   3eee8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3eeec:	mov	r4, r0
   3eef0:	ldr	r0, [r0, #32]
   3eef4:	mov	r7, r3
   3eef8:	sub	sp, sp, #12
   3eefc:	ldrh	r3, [r0, #14]
   3ef00:	ldrh	ip, [sp, #48]	; 0x30
   3ef04:	cmp	r3, #3
   3ef08:	bne	3f064 <flatcc_builder_table_add_copy@@Base+0x17c>
   3ef0c:	ldr	r3, [pc, #356]	; 3f078 <flatcc_builder_table_add_copy@@Base+0x190>
   3ef10:	cmp	r1, r3
   3ef14:	bhi	3f050 <flatcc_builder_table_add_copy@@Base+0x168>
   3ef18:	ldrh	r3, [r4, #130]	; 0x82
   3ef1c:	lsl	sl, r1, #1
   3ef20:	mov	r8, r2
   3ef24:	cmp	r3, ip
   3ef28:	ldr	r3, [r4, #4]
   3ef2c:	strhcc	ip, [r4, #130]	; 0x82
   3ef30:	add	r0, r3, sl
   3ef34:	ldrh	r5, [r3, sl]
   3ef38:	cmp	r5, #0
   3ef3c:	bne	3f03c <flatcc_builder_table_add_copy@@Base+0x154>
   3ef40:	ldr	r2, [r4, #12]
   3ef44:	ldr	lr, [pc, #304]	; 3f07c <flatcc_builder_table_add_copy@@Base+0x194>
   3ef48:	eor	r2, r2, r1
   3ef4c:	ldr	r6, [r4, #20]
   3ef50:	mul	r2, lr, r2
   3ef54:	sub	r3, ip, #1
   3ef58:	eor	r2, r2, r7
   3ef5c:	add	r3, r3, r6
   3ef60:	rsb	ip, ip, #0
   3ef64:	and	r6, r3, ip
   3ef68:	mul	lr, lr, r2
   3ef6c:	ldr	r3, [r4, #24]
   3ef70:	uxth	r9, r1
   3ef74:	add	r1, r7, r6
   3ef78:	cmp	r1, r3
   3ef7c:	str	lr, [r4, #12]
   3ef80:	str	r1, [r4, #20]
   3ef84:	bcs	3efcc <flatcc_builder_table_add_copy@@Base+0xe4>
   3ef88:	ldr	r3, [r4, #16]
   3ef8c:	add	r2, r6, #4
   3ef90:	strh	r2, [r0]
   3ef94:	ldrh	r2, [r4, #8]
   3ef98:	cmp	r2, r9
   3ef9c:	addls	r9, r9, #1
   3efa0:	strhls	r9, [r4, #8]
   3efa4:	adds	r3, r3, r6
   3efa8:	beq	3efc0 <flatcc_builder_table_add_copy@@Base+0xd8>
   3efac:	mov	r0, r3
   3efb0:	mov	r2, r7
   3efb4:	mov	r1, r8
   3efb8:	bl	13fe0 <memcpy@plt>
   3efbc:	mov	r3, r0
   3efc0:	mov	r0, r3
   3efc4:	add	sp, sp, #12
   3efc8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3efcc:	ldr	r2, [r4, #28]
   3efd0:	mov	r3, #1
   3efd4:	add	r2, r2, #1
   3efd8:	ldr	r0, [r4, #40]	; 0x28
   3efdc:	add	r2, r2, r1
   3efe0:	str	r3, [sp]
   3efe4:	add	r1, r4, #60	; 0x3c
   3efe8:	ldr	fp, [r4, #48]	; 0x30
   3efec:	blx	fp
   3eff0:	cmp	r0, #0
   3eff4:	bne	3f034 <flatcc_builder_table_add_copy@@Base+0x14c>
   3eff8:	ldr	r0, [r4, #28]
   3effc:	ldr	r2, [r4, #64]	; 0x40
   3f000:	ldr	r1, [pc, #120]	; 3f080 <flatcc_builder_table_add_copy@@Base+0x198>
   3f004:	ldr	r3, [r4, #60]	; 0x3c
   3f008:	sub	r2, r2, r0
   3f00c:	ldr	ip, [r4, #32]
   3f010:	add	r3, r3, r0
   3f014:	cmp	r2, r1
   3f018:	ldr	r0, [r4, #4]
   3f01c:	movcs	r2, r1
   3f020:	str	r3, [r4, #16]
   3f024:	str	r2, [r4, #24]
   3f028:	add	r0, r0, sl
   3f02c:	str	r1, [ip, #4]
   3f030:	b	3ef8c <flatcc_builder_table_add_copy@@Base+0xa4>
   3f034:	mov	r3, r5
   3f038:	b	3efc0 <flatcc_builder_table_add_copy@@Base+0xd8>
   3f03c:	ldr	r3, [pc, #64]	; 3f084 <flatcc_builder_table_add_copy@@Base+0x19c>
   3f040:	ldr	r2, [pc, #64]	; 3f088 <flatcc_builder_table_add_copy@@Base+0x1a0>
   3f044:	ldr	r1, [pc, #64]	; 3f08c <flatcc_builder_table_add_copy@@Base+0x1a4>
   3f048:	ldr	r0, [pc, #64]	; 3f090 <flatcc_builder_table_add_copy@@Base+0x1a8>
   3f04c:	bl	14148 <__assert_fail@plt>
   3f050:	ldr	r3, [pc, #44]	; 3f084 <flatcc_builder_table_add_copy@@Base+0x19c>
   3f054:	ldr	r2, [pc, #56]	; 3f094 <flatcc_builder_table_add_copy@@Base+0x1ac>
   3f058:	ldr	r1, [pc, #44]	; 3f08c <flatcc_builder_table_add_copy@@Base+0x1a4>
   3f05c:	ldr	r0, [pc, #52]	; 3f098 <flatcc_builder_table_add_copy@@Base+0x1b0>
   3f060:	bl	14148 <__assert_fail@plt>
   3f064:	ldr	r3, [pc, #24]	; 3f084 <flatcc_builder_table_add_copy@@Base+0x19c>
   3f068:	ldr	r2, [pc, #44]	; 3f09c <flatcc_builder_table_add_copy@@Base+0x1b4>
   3f06c:	ldr	r1, [pc, #24]	; 3f08c <flatcc_builder_table_add_copy@@Base+0x1a4>
   3f070:	ldr	r0, [pc, #40]	; 3f0a0 <flatcc_builder_table_add_copy@@Base+0x1b8>
   3f074:	bl	14148 <__assert_fail@plt>
   3f078:	strdeq	r7, [r0], -ip
   3f07c:			; <UNDEFINED> instruction: 0x9e3779b1
   3f080:	strdeq	pc, [r0], -ip
   3f084:	andeq	sp, r5, ip, lsl pc
   3f088:	strdeq	r0, [r0], -r8
   3f08c:	ldrdeq	sp, [r5], -ip
   3f090:	andeq	sp, r4, r4, ror r2
   3f094:	andeq	r0, r0, lr, ror #13
   3f098:	andeq	lr, r5, r0, asr #6
   3f09c:	andeq	r0, r0, sp, ror #13
   3f0a0:	andeq	lr, r5, r8, lsr #5

0003f0a4 <flatcc_builder_table_add_offset@@Base>:
   3f0a4:	ldr	r3, [r0, #32]
   3f0a8:	push	{r4, r5, r6, r7, r8, r9, lr}
   3f0ac:	sub	sp, sp, #12
   3f0b0:	ldrh	r3, [r3, #14]
   3f0b4:	cmp	r3, #3
   3f0b8:	bne	3f1f4 <flatcc_builder_table_add_offset@@Base+0x150>
   3f0bc:	ldr	r3, [pc, #324]	; 3f208 <flatcc_builder_table_add_offset@@Base+0x164>
   3f0c0:	cmp	r1, r3
   3f0c4:	bhi	3f1e0 <flatcc_builder_table_add_offset@@Base+0x13c>
   3f0c8:	ldr	r3, [r0, #4]
   3f0cc:	lsl	r7, r1, #1
   3f0d0:	mov	r4, r0
   3f0d4:	ldrh	r6, [r3, r7]
   3f0d8:	add	ip, r3, r7
   3f0dc:	cmp	r6, #0
   3f0e0:	bne	3f1cc <flatcc_builder_table_add_offset@@Base+0x128>
   3f0e4:	ldr	r3, [r0, #12]
   3f0e8:	ldr	r2, [pc, #284]	; 3f20c <flatcc_builder_table_add_offset@@Base+0x168>
   3f0ec:	eor	r3, r3, r1
   3f0f0:	ldr	r5, [r0, #20]
   3f0f4:	mul	r3, r2, r3
   3f0f8:	add	r5, r5, #3
   3f0fc:	eor	r3, r3, #4
   3f100:	ldr	r0, [r0, #24]
   3f104:	mul	r3, r2, r3
   3f108:	bic	r5, r5, #3
   3f10c:	add	r2, r5, #4
   3f110:	cmp	r2, r0
   3f114:	uxth	r8, r1
   3f118:	str	r3, [r4, #12]
   3f11c:	str	r2, [r4, #20]
   3f120:	bhi	3f160 <flatcc_builder_table_add_offset@@Base+0xbc>
   3f124:	ldr	r0, [r4, #16]
   3f128:	uxth	r2, r5
   3f12c:	add	r3, r2, #4
   3f130:	strh	r3, [ip]
   3f134:	ldrh	r3, [r4, #8]
   3f138:	add	r0, r0, r5
   3f13c:	cmp	r3, r8
   3f140:	ldr	r3, [r4]
   3f144:	addls	r1, r8, #1
   3f148:	strhls	r1, [r4, #8]
   3f14c:	add	r1, r3, #2
   3f150:	str	r1, [r4]
   3f154:	strh	r2, [r3]
   3f158:	add	sp, sp, #12
   3f15c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   3f160:	ldr	r1, [r4, #28]
   3f164:	mov	r3, #1
   3f168:	ldr	r0, [r4, #40]	; 0x28
   3f16c:	add	r2, r2, r1
   3f170:	str	r3, [sp]
   3f174:	add	r1, r4, #60	; 0x3c
   3f178:	ldr	r9, [r4, #48]	; 0x30
   3f17c:	blx	r9
   3f180:	cmp	r0, #0
   3f184:	bne	3f1c4 <flatcc_builder_table_add_offset@@Base+0x120>
   3f188:	ldr	r6, [r4, #28]
   3f18c:	ldr	r3, [r4, #64]	; 0x40
   3f190:	ldr	r2, [pc, #120]	; 3f210 <flatcc_builder_table_add_offset@@Base+0x16c>
   3f194:	sub	r3, r3, r6
   3f198:	ldr	r0, [r4, #60]	; 0x3c
   3f19c:	ldr	r1, [r4, #32]
   3f1a0:	ldr	ip, [r4, #4]
   3f1a4:	cmp	r3, r2
   3f1a8:	add	r0, r0, r6
   3f1ac:	movcs	r3, r2
   3f1b0:	str	r0, [r4, #16]
   3f1b4:	str	r3, [r4, #24]
   3f1b8:	add	ip, ip, r7
   3f1bc:	str	r2, [r1, #4]
   3f1c0:	b	3f128 <flatcc_builder_table_add_offset@@Base+0x84>
   3f1c4:	mov	r0, r6
   3f1c8:	b	3f158 <flatcc_builder_table_add_offset@@Base+0xb4>
   3f1cc:	ldr	r3, [pc, #64]	; 3f214 <flatcc_builder_table_add_offset@@Base+0x170>
   3f1d0:	ldr	r2, [pc, #64]	; 3f218 <flatcc_builder_table_add_offset@@Base+0x174>
   3f1d4:	ldr	r1, [pc, #64]	; 3f21c <flatcc_builder_table_add_offset@@Base+0x178>
   3f1d8:	ldr	r0, [pc, #64]	; 3f220 <flatcc_builder_table_add_offset@@Base+0x17c>
   3f1dc:	bl	14148 <__assert_fail@plt>
   3f1e0:	ldr	r3, [pc, #44]	; 3f214 <flatcc_builder_table_add_offset@@Base+0x170>
   3f1e4:	ldr	r2, [pc, #56]	; 3f224 <flatcc_builder_table_add_offset@@Base+0x180>
   3f1e8:	ldr	r1, [pc, #44]	; 3f21c <flatcc_builder_table_add_offset@@Base+0x178>
   3f1ec:	ldr	r0, [pc, #52]	; 3f228 <flatcc_builder_table_add_offset@@Base+0x184>
   3f1f0:	bl	14148 <__assert_fail@plt>
   3f1f4:	ldr	r3, [pc, #24]	; 3f214 <flatcc_builder_table_add_offset@@Base+0x170>
   3f1f8:	ldr	r2, [pc, #44]	; 3f22c <flatcc_builder_table_add_offset@@Base+0x188>
   3f1fc:	ldr	r1, [pc, #24]	; 3f21c <flatcc_builder_table_add_offset@@Base+0x178>
   3f200:	ldr	r0, [pc, #40]	; 3f230 <flatcc_builder_table_add_offset@@Base+0x18c>
   3f204:	bl	14148 <__assert_fail@plt>
   3f208:	strdeq	r7, [r0], -ip
   3f20c:			; <UNDEFINED> instruction: 0x9e3779b1
   3f210:	strdeq	pc, [r0], -ip
   3f214:	andeq	sp, r5, r4, asr pc
   3f218:	andeq	r0, r0, fp, lsl r7
   3f21c:	ldrdeq	sp, [r5], -ip
   3f220:	andeq	sp, r4, r4, ror r2
   3f224:	andeq	r0, r0, r4, lsl r7
   3f228:	andeq	lr, r5, r0, asr #6
   3f22c:	andeq	r0, r0, r3, lsl r7
   3f230:	andeq	lr, r5, r8, lsr #5

0003f234 <flatcc_builder_table_add_union@@Base>:
   3f234:	push	{r4, r5, r6, r7, r8, r9, lr}
   3f238:	sub	sp, sp, #20
   3f23c:	add	ip, sp, #16
   3f240:	stmdb	ip, {r2, r3}
   3f244:	ldr	r3, [r0, #32]
   3f248:	ldrb	r6, [sp, #8]
   3f24c:	ldr	r5, [sp, #12]
   3f250:	ldrh	r3, [r3, #14]
   3f254:	cmp	r3, #3
   3f258:	bne	3f3e4 <flatcc_builder_table_add_union@@Base+0x1b0>
   3f25c:	cmp	r6, #0
   3f260:	mov	r4, r0
   3f264:	mov	r7, r1
   3f268:	beq	3f338 <flatcc_builder_table_add_union@@Base+0x104>
   3f26c:	cmp	r5, #0
   3f270:	beq	3f294 <flatcc_builder_table_add_union@@Base+0x60>
   3f274:	bl	3f0a4 <flatcc_builder_table_add_offset@@Base>
   3f278:	cmp	r0, #0
   3f27c:	beq	3f420 <flatcc_builder_table_add_union@@Base+0x1ec>
   3f280:	ldr	r3, [r4, #32]
   3f284:	str	r5, [r0]
   3f288:	ldrh	r3, [r3, #14]
   3f28c:	cmp	r3, #3
   3f290:	bne	3f3f8 <flatcc_builder_table_add_union@@Base+0x1c4>
   3f294:	ldr	r3, [pc, #408]	; 3f434 <flatcc_builder_table_add_union@@Base+0x200>
   3f298:	sub	r1, r7, #1
   3f29c:	cmp	r1, r3
   3f2a0:	bhi	3f40c <flatcc_builder_table_add_union@@Base+0x1d8>
   3f2a4:	ldrh	r3, [r4, #130]	; 0x82
   3f2a8:	lsl	r5, r1, #1
   3f2ac:	cmp	r3, #0
   3f2b0:	moveq	r3, #1
   3f2b4:	strheq	r3, [r4, #130]	; 0x82
   3f2b8:	ldr	r3, [r4, #4]
   3f2bc:	add	r0, r3, r5
   3f2c0:	ldrh	r3, [r3, r5]
   3f2c4:	cmp	r3, #0
   3f2c8:	bne	3f3d0 <flatcc_builder_table_add_union@@Base+0x19c>
   3f2cc:	ldr	r3, [r4, #12]
   3f2d0:	ldr	r2, [pc, #352]	; 3f438 <flatcc_builder_table_add_union@@Base+0x204>
   3f2d4:	eor	r3, r3, r1
   3f2d8:	ldr	r7, [r4, #20]
   3f2dc:	mul	r3, r2, r3
   3f2e0:	uxth	r8, r1
   3f2e4:	eor	r3, r3, #1
   3f2e8:	ldr	r1, [r4, #24]
   3f2ec:	mul	r3, r2, r3
   3f2f0:	add	r2, r7, #1
   3f2f4:	cmp	r2, r1
   3f2f8:	str	r3, [r4, #12]
   3f2fc:	str	r2, [r4, #20]
   3f300:	bcs	3f354 <flatcc_builder_table_add_union@@Base+0x120>
   3f304:	ldr	r3, [r4, #16]
   3f308:	add	r2, r7, #4
   3f30c:	strh	r2, [r0]
   3f310:	ldrh	r2, [r4, #8]
   3f314:	cmp	r2, r8
   3f318:	addls	r1, r8, #1
   3f31c:	strhls	r1, [r4, #8]
   3f320:	cmn	r3, r7
   3f324:	beq	3f3bc <flatcc_builder_table_add_union@@Base+0x188>
   3f328:	mov	r0, #0
   3f32c:	strb	r6, [r3, r7]
   3f330:	add	sp, sp, #20
   3f334:	pop	{r4, r5, r6, r7, r8, r9, pc}
   3f338:	cmp	r5, #0
   3f33c:	beq	3f294 <flatcc_builder_table_add_union@@Base+0x60>
   3f340:	ldr	r3, [pc, #244]	; 3f43c <flatcc_builder_table_add_union@@Base+0x208>
   3f344:	ldr	r2, [pc, #244]	; 3f440 <flatcc_builder_table_add_union@@Base+0x20c>
   3f348:	ldr	r1, [pc, #244]	; 3f444 <flatcc_builder_table_add_union@@Base+0x210>
   3f34c:	ldr	r0, [pc, #244]	; 3f448 <flatcc_builder_table_add_union@@Base+0x214>
   3f350:	bl	14148 <__assert_fail@plt>
   3f354:	ldr	r2, [r4, #28]
   3f358:	mov	r3, #1
   3f35c:	add	r2, r7, r2
   3f360:	ldr	r0, [r4, #40]	; 0x28
   3f364:	add	r2, r2, #2
   3f368:	str	r3, [sp]
   3f36c:	add	r1, r4, #60	; 0x3c
   3f370:	ldr	r9, [r4, #48]	; 0x30
   3f374:	blx	r9
   3f378:	cmp	r0, #0
   3f37c:	bne	3f3bc <flatcc_builder_table_add_union@@Base+0x188>
   3f380:	ldr	r0, [r4, #28]
   3f384:	ldr	r2, [r4, #64]	; 0x40
   3f388:	ldr	r1, [pc, #188]	; 3f44c <flatcc_builder_table_add_union@@Base+0x218>
   3f38c:	ldr	r3, [r4, #60]	; 0x3c
   3f390:	sub	r2, r2, r0
   3f394:	ldr	ip, [r4, #32]
   3f398:	add	r3, r3, r0
   3f39c:	cmp	r2, r1
   3f3a0:	ldr	r0, [r4, #4]
   3f3a4:	movcs	r2, r1
   3f3a8:	str	r3, [r4, #16]
   3f3ac:	str	r2, [r4, #24]
   3f3b0:	add	r0, r0, r5
   3f3b4:	str	r1, [ip, #4]
   3f3b8:	b	3f308 <flatcc_builder_table_add_union@@Base+0xd4>
   3f3bc:	ldr	r3, [pc, #120]	; 3f43c <flatcc_builder_table_add_union@@Base+0x208>
   3f3c0:	ldr	r2, [pc, #136]	; 3f450 <flatcc_builder_table_add_union@@Base+0x21c>
   3f3c4:	ldr	r1, [pc, #120]	; 3f444 <flatcc_builder_table_add_union@@Base+0x210>
   3f3c8:	ldr	r0, [pc, #132]	; 3f454 <flatcc_builder_table_add_union@@Base+0x220>
   3f3cc:	bl	14148 <__assert_fail@plt>
   3f3d0:	ldr	r3, [pc, #128]	; 3f458 <flatcc_builder_table_add_union@@Base+0x224>
   3f3d4:	ldr	r2, [pc, #128]	; 3f45c <flatcc_builder_table_add_union@@Base+0x228>
   3f3d8:	ldr	r1, [pc, #100]	; 3f444 <flatcc_builder_table_add_union@@Base+0x210>
   3f3dc:	ldr	r0, [pc, #124]	; 3f460 <flatcc_builder_table_add_union@@Base+0x22c>
   3f3e0:	bl	14148 <__assert_fail@plt>
   3f3e4:	ldr	r3, [pc, #80]	; 3f43c <flatcc_builder_table_add_union@@Base+0x208>
   3f3e8:	ldr	r2, [pc, #116]	; 3f464 <flatcc_builder_table_add_union@@Base+0x230>
   3f3ec:	ldr	r1, [pc, #80]	; 3f444 <flatcc_builder_table_add_union@@Base+0x210>
   3f3f0:	ldr	r0, [pc, #112]	; 3f468 <flatcc_builder_table_add_union@@Base+0x234>
   3f3f4:	bl	14148 <__assert_fail@plt>
   3f3f8:	ldr	r3, [pc, #88]	; 3f458 <flatcc_builder_table_add_union@@Base+0x224>
   3f3fc:	ldr	r2, [pc, #104]	; 3f46c <flatcc_builder_table_add_union@@Base+0x238>
   3f400:	ldr	r1, [pc, #60]	; 3f444 <flatcc_builder_table_add_union@@Base+0x210>
   3f404:	ldr	r0, [pc, #92]	; 3f468 <flatcc_builder_table_add_union@@Base+0x234>
   3f408:	bl	14148 <__assert_fail@plt>
   3f40c:	ldr	r3, [pc, #68]	; 3f458 <flatcc_builder_table_add_union@@Base+0x224>
   3f410:	ldr	r2, [pc, #88]	; 3f470 <flatcc_builder_table_add_union@@Base+0x23c>
   3f414:	ldr	r1, [pc, #40]	; 3f444 <flatcc_builder_table_add_union@@Base+0x210>
   3f418:	ldr	r0, [pc, #84]	; 3f474 <flatcc_builder_table_add_union@@Base+0x240>
   3f41c:	bl	14148 <__assert_fail@plt>
   3f420:	ldr	r3, [pc, #20]	; 3f43c <flatcc_builder_table_add_union@@Base+0x208>
   3f424:	ldr	r2, [pc, #76]	; 3f478 <flatcc_builder_table_add_union@@Base+0x244>
   3f428:	ldr	r1, [pc, #20]	; 3f444 <flatcc_builder_table_add_union@@Base+0x210>
   3f42c:	ldr	r0, [pc, #72]	; 3f47c <flatcc_builder_table_add_union@@Base+0x248>
   3f430:	bl	14148 <__assert_fail@plt>
   3f434:	strdeq	r7, [r0], -ip
   3f438:			; <UNDEFINED> instruction: 0x9e3779b1
   3f43c:	andeq	sp, r5, r4, ror pc
   3f440:	andeq	r0, r0, pc, ror #11
   3f444:	ldrdeq	sp, [r5], -ip
   3f448:	andeq	lr, r5, r4, lsl #7
   3f44c:	strdeq	pc, [r0], -ip
   3f450:	strdeq	r0, [r0], -r6
   3f454:			; <UNDEFINED> instruction: 0x0005e3b4
   3f458:	andeq	sp, r5, ip, lsl pc
   3f45c:	strdeq	r0, [r0], -r8
   3f460:	andeq	sp, r4, r4, ror r2
   3f464:	andeq	r0, r0, lr, ror #11
   3f468:	andeq	lr, r5, r8, lsr #5
   3f46c:	andeq	r0, r0, sp, ror #13
   3f470:	andeq	r0, r0, lr, ror #13
   3f474:	andeq	lr, r5, r0, asr #6
   3f478:	strdeq	r0, [r0], -r2
   3f47c:	andeq	lr, r5, r8, lsr #7

0003f480 <flatcc_builder_table_add_union_vector@@Base>:
   3f480:	push	{r4, r5, r6, r7, lr}
   3f484:	sub	sp, sp, #12
   3f488:	add	ip, sp, #8
   3f48c:	stmdb	ip, {r2, r3}
   3f490:	ldr	r3, [r0, #32]
   3f494:	ldr	r4, [sp]
   3f498:	ldr	r6, [sp, #4]
   3f49c:	ldrh	r3, [r3, #14]
   3f4a0:	cmp	r3, #3
   3f4a4:	bne	3f534 <flatcc_builder_table_add_union_vector@@Base+0xb4>
   3f4a8:	clz	r3, r6
   3f4ac:	clz	r2, r4
   3f4b0:	lsr	r3, r3, #5
   3f4b4:	lsr	r2, r2, #5
   3f4b8:	cmp	r2, r3
   3f4bc:	beq	3f4dc <flatcc_builder_table_add_union_vector@@Base+0x5c>
   3f4c0:	adds	r4, r4, #0
   3f4c4:	movne	r4, #1
   3f4c8:	cmp	r4, r3
   3f4cc:	mvnne	r0, #0
   3f4d0:	beq	3f548 <flatcc_builder_table_add_union_vector@@Base+0xc8>
   3f4d4:	add	sp, sp, #12
   3f4d8:	pop	{r4, r5, r6, r7, pc}
   3f4dc:	cmp	r4, #0
   3f4e0:	moveq	r0, r4
   3f4e4:	beq	3f4d4 <flatcc_builder_table_add_union_vector@@Base+0x54>
   3f4e8:	mov	r7, r1
   3f4ec:	sub	r1, r1, #1
   3f4f0:	mov	r5, r0
   3f4f4:	bl	3f0a4 <flatcc_builder_table_add_offset@@Base>
   3f4f8:	cmp	r0, #0
   3f4fc:	beq	3f55c <flatcc_builder_table_add_union_vector@@Base+0xdc>
   3f500:	str	r4, [r0]
   3f504:	mov	r1, r7
   3f508:	mov	r0, r5
   3f50c:	bl	3f0a4 <flatcc_builder_table_add_offset@@Base>
   3f510:	cmp	r0, #0
   3f514:	strne	r6, [r0]
   3f518:	movne	r0, #0
   3f51c:	bne	3f4d4 <flatcc_builder_table_add_union_vector@@Base+0x54>
   3f520:	ldr	r3, [pc, #72]	; 3f570 <flatcc_builder_table_add_union_vector@@Base+0xf0>
   3f524:	ldr	r2, [pc, #72]	; 3f574 <flatcc_builder_table_add_union_vector@@Base+0xf4>
   3f528:	ldr	r1, [pc, #72]	; 3f578 <flatcc_builder_table_add_union_vector@@Base+0xf8>
   3f52c:	ldr	r0, [pc, #72]	; 3f57c <flatcc_builder_table_add_union_vector@@Base+0xfc>
   3f530:	bl	14148 <__assert_fail@plt>
   3f534:	ldr	r3, [pc, #52]	; 3f570 <flatcc_builder_table_add_union_vector@@Base+0xf0>
   3f538:	mov	r2, #1536	; 0x600
   3f53c:	ldr	r1, [pc, #52]	; 3f578 <flatcc_builder_table_add_union_vector@@Base+0xf8>
   3f540:	ldr	r0, [pc, #56]	; 3f580 <flatcc_builder_table_add_union_vector@@Base+0x100>
   3f544:	bl	14148 <__assert_fail@plt>
   3f548:	ldr	r3, [pc, #32]	; 3f570 <flatcc_builder_table_add_union_vector@@Base+0xf0>
   3f54c:	ldr	r2, [pc, #48]	; 3f584 <flatcc_builder_table_add_union_vector@@Base+0x104>
   3f550:	ldr	r1, [pc, #32]	; 3f578 <flatcc_builder_table_add_union_vector@@Base+0xf8>
   3f554:	ldr	r0, [pc, #44]	; 3f588 <flatcc_builder_table_add_union_vector@@Base+0x108>
   3f558:	bl	14148 <__assert_fail@plt>
   3f55c:	ldr	r3, [pc, #12]	; 3f570 <flatcc_builder_table_add_union_vector@@Base+0xf0>
   3f560:	ldr	r2, [pc, #36]	; 3f58c <flatcc_builder_table_add_union_vector@@Base+0x10c>
   3f564:	ldr	r1, [pc, #12]	; 3f578 <flatcc_builder_table_add_union_vector@@Base+0xf8>
   3f568:	ldr	r0, [pc, #12]	; 3f57c <flatcc_builder_table_add_union_vector@@Base+0xfc>
   3f56c:	bl	14148 <__assert_fail@plt>
   3f570:	muleq	r5, r4, pc	; <UNPREDICTABLE>
   3f574:	andeq	r0, r0, r8, lsl #12
   3f578:	ldrdeq	sp, [r5], -ip
   3f57c:	andeq	lr, r5, r8, lsr #7
   3f580:	andeq	lr, r5, r8, lsr #5
   3f584:	andeq	r0, r0, r1, lsl #12
   3f588:	andeq	lr, r5, r0, asr #7
   3f58c:	andeq	r0, r0, r4, lsl #12

0003f590 <flatcc_builder_push_buffer_alignment@@Base>:
   3f590:	mov	r3, r0
   3f594:	mov	r2, #4
   3f598:	ldrh	r0, [r0, #128]	; 0x80
   3f59c:	strh	r2, [r3, #128]	; 0x80
   3f5a0:	bx	lr

0003f5a4 <flatcc_builder_pop_buffer_alignment@@Base>:
   3f5a4:	ldrh	r3, [r0, #128]	; 0x80
   3f5a8:	cmp	r3, r1
   3f5ac:	strhcc	r1, [r0, #128]	; 0x80
   3f5b0:	bx	lr

0003f5b4 <flatcc_builder_get_buffer_alignment@@Base>:
   3f5b4:	ldrh	r0, [r0, #128]	; 0x80
   3f5b8:	bx	lr

0003f5bc <flatcc_builder_set_vtable_clustering@@Base>:
   3f5bc:	clz	r1, r1
   3f5c0:	lsr	r1, r1, #5
   3f5c4:	str	r1, [r0, #180]	; 0xb4
   3f5c8:	bx	lr

0003f5cc <flatcc_builder_set_block_align@@Base>:
   3f5cc:	strh	r1, [r0, #132]	; 0x84
   3f5d0:	bx	lr

0003f5d4 <flatcc_builder_get_level@@Base>:
   3f5d4:	ldr	r0, [r0, #156]	; 0x9c
   3f5d8:	bx	lr

0003f5dc <flatcc_builder_set_max_level@@Base>:
   3f5dc:	ldr	r3, [r0, #160]	; 0xa0
   3f5e0:	str	r1, [r0, #176]	; 0xb0
   3f5e4:	cmp	r1, r3
   3f5e8:	strgt	r1, [r0, #160]	; 0xa0
   3f5ec:	bx	lr

0003f5f0 <flatcc_builder_get_buffer_size@@Base>:
   3f5f0:	ldr	r2, [r0, #140]	; 0x8c
   3f5f4:	ldr	r0, [r0, #136]	; 0x88
   3f5f8:	sub	r0, r2, r0
   3f5fc:	bx	lr

0003f600 <flatcc_builder_get_buffer_start@@Base>:
   3f600:	ldr	r0, [r0, #136]	; 0x88
   3f604:	bx	lr

0003f608 <flatcc_builder_get_buffer_end@@Base>:
   3f608:	ldr	r0, [r0, #140]	; 0x8c
   3f60c:	bx	lr

0003f610 <flatcc_builder_set_vtable_cache_limit@@Base>:
   3f610:	str	r1, [r0, #172]	; 0xac
   3f614:	bx	lr

0003f618 <flatcc_builder_set_identifier@@Base>:
   3f618:	ldr	r3, [pc, #16]	; 3f630 <flatcc_builder_set_identifier@@Base+0x18>
   3f61c:	cmp	r1, #0
   3f620:	moveq	r1, r3
   3f624:	ldr	r3, [r1]
   3f628:	str	r3, [r0, #168]	; 0xa8
   3f62c:	bx	lr
   3f630:	andeq	sp, r5, r4, lsr #18

0003f634 <flatcc_builder_get_type@@Base>:
   3f634:	ldr	r0, [r0, #32]
   3f638:	cmp	r0, #0
   3f63c:	ldrhne	r0, [r0, #14]
   3f640:	bx	lr

0003f644 <flatcc_builder_get_type_at@@Base>:
   3f644:	cmp	r1, #0
   3f648:	ble	3f670 <flatcc_builder_get_type_at@@Base+0x2c>
   3f64c:	ldr	r3, [r0, #156]	; 0x9c
   3f650:	cmp	r1, r3
   3f654:	bgt	3f670 <flatcc_builder_get_type_at@@Base+0x2c>
   3f658:	sub	r1, r1, r3
   3f65c:	ldr	r3, [r0, #32]
   3f660:	add	r1, r1, r1, lsl #3
   3f664:	add	r1, r3, r1, lsl #2
   3f668:	ldrh	r0, [r1, #14]
   3f66c:	bx	lr
   3f670:	mov	r0, #0
   3f674:	bx	lr

0003f678 <flatcc_builder_get_direct_buffer@@Base>:
   3f678:	ldr	r3, [r0, #184]	; 0xb8
   3f67c:	cmp	r3, #0
   3f680:	beq	3f694 <flatcc_builder_get_direct_buffer@@Base+0x1c>
   3f684:	ldr	r2, [r0, #188]	; 0xbc
   3f688:	ldr	r3, [r0, #192]	; 0xc0
   3f68c:	cmp	r2, r3
   3f690:	beq	3f6a8 <flatcc_builder_get_direct_buffer@@Base+0x30>
   3f694:	cmp	r1, #0
   3f698:	movne	r0, #0
   3f69c:	strne	r0, [r1]
   3f6a0:	moveq	r0, r1
   3f6a4:	bx	lr
   3f6a8:	cmp	r1, #0
   3f6ac:	ldrne	r3, [r0, #212]	; 0xd4
   3f6b0:	ldr	r0, [r0, #196]	; 0xc4
   3f6b4:	strne	r3, [r1]
   3f6b8:	bx	lr

0003f6bc <flatcc_builder_copy_buffer@@Base>:
   3f6bc:	ldr	r3, [r0, #184]	; 0xb8
   3f6c0:	cmp	r3, #0
   3f6c4:	beq	3f6e0 <flatcc_builder_copy_buffer@@Base+0x24>
   3f6c8:	push	{r4, lr}
   3f6cc:	add	r0, r0, #188	; 0xbc
   3f6d0:	bl	3fd94 <flatcc_emitter_copy_buffer@@Base>
   3f6d4:	cmp	r0, #0
   3f6d8:	popne	{r4, pc}
   3f6dc:	bl	142e0 <__assert_fail@plt+0x198>
   3f6e0:	mov	r0, r3
   3f6e4:	bx	lr

0003f6e8 <flatcc_builder_finalize_buffer@@Base>:
   3f6e8:	push	{r4, r5, r6, lr}
   3f6ec:	cmp	r1, #0
   3f6f0:	ldr	r4, [r0, #140]	; 0x8c
   3f6f4:	ldr	r2, [r0, #136]	; 0x88
   3f6f8:	mov	r5, r0
   3f6fc:	sub	r4, r4, r2
   3f700:	strne	r4, [r1]
   3f704:	mov	r0, r4
   3f708:	bl	14040 <malloc@plt>
   3f70c:	subs	r6, r0, #0
   3f710:	beq	3f754 <flatcc_builder_finalize_buffer@@Base+0x6c>
   3f714:	ldr	r3, [r5, #184]	; 0xb8
   3f718:	cmp	r3, #0
   3f71c:	beq	3f740 <flatcc_builder_finalize_buffer@@Base+0x58>
   3f720:	mov	r2, r4
   3f724:	add	r0, r5, #188	; 0xbc
   3f728:	mov	r1, r6
   3f72c:	bl	3fd94 <flatcc_emitter_copy_buffer@@Base>
   3f730:	cmp	r0, #0
   3f734:	beq	3f768 <flatcc_builder_finalize_buffer@@Base+0x80>
   3f738:	mov	r0, r6
   3f73c:	pop	{r4, r5, r6, pc}
   3f740:	ldr	r3, [pc, #36]	; 3f76c <flatcc_builder_finalize_buffer@@Base+0x84>
   3f744:	ldr	r2, [pc, #36]	; 3f770 <flatcc_builder_finalize_buffer@@Base+0x88>
   3f748:	ldr	r1, [pc, #36]	; 3f774 <flatcc_builder_finalize_buffer@@Base+0x8c>
   3f74c:	ldr	r0, [pc, #36]	; 3f778 <flatcc_builder_finalize_buffer@@Base+0x90>
   3f750:	bl	14148 <__assert_fail@plt>
   3f754:	ldr	r3, [pc, #16]	; 3f76c <flatcc_builder_finalize_buffer@@Base+0x84>
   3f758:	ldr	r2, [pc, #28]	; 3f77c <flatcc_builder_finalize_buffer@@Base+0x94>
   3f75c:	ldr	r1, [pc, #16]	; 3f774 <flatcc_builder_finalize_buffer@@Base+0x8c>
   3f760:	ldr	r0, [pc, #16]	; 3f778 <flatcc_builder_finalize_buffer@@Base+0x90>
   3f764:	bl	14148 <__assert_fail@plt>
   3f768:	bl	142e0 <__assert_fail@plt+0x198>
   3f76c:			; <UNDEFINED> instruction: 0x0005dfbc
   3f770:	muleq	r0, ip, r7
   3f774:	ldrdeq	sp, [r5], -ip
   3f778:	andeq	sp, r4, r4, ror r2
   3f77c:	muleq	r0, r8, r7

0003f780 <flatcc_builder_finalize_aligned_buffer@@Base>:
   3f780:	push	{r4, r5, r6, r7, lr}
   3f784:	subs	r7, r1, #0
   3f788:	ldrh	r1, [r0, #128]	; 0x80
   3f78c:	ldr	r4, [r0, #140]	; 0x8c
   3f790:	ldr	r3, [r0, #136]	; 0x88
   3f794:	sub	sp, sp, #12
   3f798:	sub	r3, r4, r3
   3f79c:	sub	r4, r1, #1
   3f7a0:	strne	r3, [r7]
   3f7a4:	add	r4, r4, r3
   3f7a8:	mov	r5, r0
   3f7ac:	rsb	r3, r1, #0
   3f7b0:	add	r0, sp, #8
   3f7b4:	cmp	r1, #4
   3f7b8:	mov	ip, #0
   3f7bc:	and	r4, r4, r3
   3f7c0:	movcc	r1, #4
   3f7c4:	mov	r2, r4
   3f7c8:	str	ip, [r0, #-4]!
   3f7cc:	bl	140a0 <posix_memalign@plt>
   3f7d0:	cmp	r0, #0
   3f7d4:	beq	3f804 <flatcc_builder_finalize_aligned_buffer@@Base+0x84>
   3f7d8:	ldr	r0, [sp, #4]
   3f7dc:	cmp	r0, #0
   3f7e0:	beq	3f7e8 <flatcc_builder_finalize_aligned_buffer@@Base+0x68>
   3f7e4:	bl	13fd4 <free@plt>
   3f7e8:	cmp	r7, #0
   3f7ec:	moveq	r6, r7
   3f7f0:	movne	r6, #0
   3f7f4:	strne	r6, [r7]
   3f7f8:	mov	r0, r6
   3f7fc:	add	sp, sp, #12
   3f800:	pop	{r4, r5, r6, r7, pc}
   3f804:	ldr	r6, [sp, #4]
   3f808:	cmp	r6, #0
   3f80c:	beq	3f7e8 <flatcc_builder_finalize_aligned_buffer@@Base+0x68>
   3f810:	ldr	r3, [r5, #184]	; 0xb8
   3f814:	cmp	r3, #0
   3f818:	beq	3f838 <flatcc_builder_finalize_aligned_buffer@@Base+0xb8>
   3f81c:	mov	r2, r4
   3f820:	add	r0, r5, #188	; 0xbc
   3f824:	mov	r1, r6
   3f828:	bl	3fd94 <flatcc_emitter_copy_buffer@@Base>
   3f82c:	cmp	r0, #0
   3f830:	bne	3f7f8 <flatcc_builder_finalize_aligned_buffer@@Base+0x78>
   3f834:	bl	142e0 <__assert_fail@plt+0x198>
   3f838:	mov	r0, r6
   3f83c:	b	3f7e4 <flatcc_builder_finalize_aligned_buffer@@Base+0x64>

0003f840 <flatcc_builder_aligned_alloc@@Base>:
   3f840:	push	{r4, lr}
   3f844:	sub	sp, sp, #8
   3f848:	add	r3, sp, #8
   3f84c:	cmp	r0, #4
   3f850:	mov	r4, #0
   3f854:	mov	r2, r1
   3f858:	str	r4, [r3, #-4]!
   3f85c:	movcs	r1, r0
   3f860:	movcc	r1, #4
   3f864:	mov	r0, r3
   3f868:	bl	140a0 <posix_memalign@plt>
   3f86c:	cmp	r0, r4
   3f870:	ldr	r0, [sp, #4]
   3f874:	beq	3f888 <flatcc_builder_aligned_alloc@@Base+0x48>
   3f878:	cmp	r0, #0
   3f87c:	beq	3f888 <flatcc_builder_aligned_alloc@@Base+0x48>
   3f880:	bl	13fd4 <free@plt>
   3f884:	mov	r0, r4
   3f888:	add	sp, sp, #8
   3f88c:	pop	{r4, pc}

0003f890 <flatcc_builder_aligned_free@@Base>:
   3f890:	b	13fd4 <free@plt>

0003f894 <flatcc_builder_get_emit_context@@Base>:
   3f894:	ldr	r0, [r0, #36]	; 0x24
   3f898:	bx	lr

0003f89c <flatcc_emitter_recycle_page@@Base>:
   3f89c:	ldr	r3, [r0]
   3f8a0:	cmp	r3, r1
   3f8a4:	beq	3f8ec <flatcc_emitter_recycle_page@@Base+0x50>
   3f8a8:	ldr	r2, [r0, #4]
   3f8ac:	cmp	r1, r2
   3f8b0:	beq	3f8ec <flatcc_emitter_recycle_page@@Base+0x50>
   3f8b4:	ldr	ip, [r1, #2944]	; 0xb80
   3f8b8:	ldr	r2, [r1, #2948]	; 0xb84
   3f8bc:	push	{lr}		; (str lr, [sp, #-4]!)
   3f8c0:	mov	r0, #0
   3f8c4:	str	r2, [ip, #2948]	; 0xb84
   3f8c8:	ldr	r2, [r3, #2948]	; 0xb84
   3f8cc:	ldr	lr, [r1, #2948]	; 0xb84
   3f8d0:	str	ip, [lr, #2944]	; 0xb80
   3f8d4:	str	r3, [r1, #2944]	; 0xb80
   3f8d8:	str	r2, [r1, #2948]	; 0xb84
   3f8dc:	str	r1, [r2, #2944]	; 0xb80
   3f8e0:	ldr	r3, [r1, #2944]	; 0xb80
   3f8e4:	str	r1, [r3, #2948]	; 0xb84
   3f8e8:	pop	{pc}		; (ldr pc, [sp], #4)
   3f8ec:	mvn	r0, #0
   3f8f0:	bx	lr

0003f8f4 <flatcc_emitter_reset@@Base>:
   3f8f4:	ldr	r2, [r0]
   3f8f8:	cmp	r2, #0
   3f8fc:	bxeq	lr
   3f900:	ldr	r3, [r0, #32]
   3f904:	mov	r1, #1472	; 0x5c0
   3f908:	push	{r4, lr}
   3f90c:	cmp	r3, #0
   3f910:	str	r1, [r0, #12]
   3f914:	str	r1, [r0, #20]
   3f918:	ldr	r1, [r0, #24]
   3f91c:	add	ip, r2, #1472	; 0x5c0
   3f920:	moveq	r3, r1
   3f924:	stmib	r0, {r2, ip}
   3f928:	str	ip, [r0, #16]
   3f92c:	add	ip, r3, r3, lsl #1
   3f930:	lsr	r3, r1, #2
   3f934:	add	r3, r3, ip, lsr #2
   3f938:	ldr	ip, [r0, #28]
   3f93c:	ldr	lr, [pc, #104]	; 3f9ac <flatcc_emitter_reset@@Base+0xb8>
   3f940:	cmp	ip, r3, lsl #1
   3f944:	mov	r1, #0
   3f948:	str	lr, [r2, #2952]	; 0xb88
   3f94c:	str	r3, [r0, #32]
   3f950:	str	r1, [r0, #24]
   3f954:	popls	{r4, pc}
   3f958:	ldr	r3, [r2, #2944]	; 0xb80
   3f95c:	mov	r4, r0
   3f960:	cmp	r2, r3
   3f964:	popeq	{r4, pc}
   3f968:	ldr	r1, [r3, #2944]	; 0xb80
   3f96c:	mov	r0, r3
   3f970:	str	r1, [r2, #2944]	; 0xb80
   3f974:	ldr	r3, [r3, #2944]	; 0xb80
   3f978:	str	r2, [r3, #2948]	; 0xb84
   3f97c:	bl	13fd4 <free@plt>
   3f980:	ldr	r3, [r4, #28]
   3f984:	ldr	r2, [r4, #32]
   3f988:	sub	r3, r3, #2944	; 0xb80
   3f98c:	str	r3, [r4, #28]
   3f990:	cmp	r3, r2, lsl #1
   3f994:	popls	{r4, pc}
   3f998:	ldm	r4, {r1, r2}
   3f99c:	ldr	r3, [r2, #2944]	; 0xb80
   3f9a0:	cmp	r3, r1
   3f9a4:	bne	3f968 <flatcc_emitter_reset@@Base+0x74>
   3f9a8:	pop	{r4, pc}
   3f9ac:			; <UNDEFINED> instruction: 0xfffffa40

0003f9b0 <flatcc_emitter_clear@@Base>:
   3f9b0:	ldr	r3, [r0]
   3f9b4:	cmp	r3, #0
   3f9b8:	bxeq	lr
   3f9bc:	ldr	r2, [r3, #2948]	; 0xb84
   3f9c0:	mov	r1, #0
   3f9c4:	push	{r4, r5, r6, lr}
   3f9c8:	mov	r5, r0
   3f9cc:	str	r1, [r2, #2944]	; 0xb80
   3f9d0:	ldr	r4, [r3, #2944]	; 0xb80
   3f9d4:	cmp	r4, r1
   3f9d8:	bne	3f9e4 <flatcc_emitter_clear@@Base+0x34>
   3f9dc:	b	3fa14 <flatcc_emitter_clear@@Base+0x64>
   3f9e0:	mov	r4, r3
   3f9e4:	ldr	r0, [r4, #2948]	; 0xb84
   3f9e8:	bl	13fd4 <free@plt>
   3f9ec:	ldr	r3, [r4, #2944]	; 0xb80
   3f9f0:	cmp	r3, #0
   3f9f4:	bne	3f9e0 <flatcc_emitter_clear@@Base+0x30>
   3f9f8:	mov	r0, r4
   3f9fc:	bl	13fd4 <free@plt>
   3fa00:	mov	r0, r5
   3fa04:	mov	r2, #36	; 0x24
   3fa08:	mov	r1, #0
   3fa0c:	pop	{r4, r5, r6, lr}
   3fa10:	b	140ac <memset@plt>
   3fa14:	mov	r4, r3
   3fa18:	b	3f9f8 <flatcc_emitter_clear@@Base+0x48>

0003fa1c <flatcc_emitter@@Base>:
   3fa1c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3fa20:	sub	sp, sp, #12
   3fa24:	mov	r5, r0
   3fa28:	ldr	ip, [sp, #48]	; 0x30
   3fa2c:	ldr	r0, [r0, #24]
   3fa30:	cmp	r3, #0
   3fa34:	add	r0, r0, ip
   3fa38:	str	r0, [r5, #24]
   3fa3c:	blt	3fc04 <flatcc_emitter@@Base+0x1e8>
   3fa40:	ldr	r0, [r5, #20]
   3fa44:	cmp	ip, r0
   3fa48:	bls	3fad8 <flatcc_emitter@@Base+0xbc>
   3fa4c:	cmp	r2, #0
   3fa50:	addne	r7, r1, #8
   3fa54:	movne	r8, r2
   3fa58:	movne	r9, #2944	; 0xb80
   3fa5c:	beq	3facc <flatcc_emitter@@Base+0xb0>
   3fa60:	ldr	r6, [r7, #-4]
   3fa64:	ldr	sl, [r7, #-8]
   3fa68:	cmp	r6, #0
   3fa6c:	movne	r4, r0
   3fa70:	beq	3fac0 <flatcc_emitter@@Base+0xa4>
   3fa74:	cmp	r6, r4
   3fa78:	bls	3fb20 <flatcc_emitter@@Base+0x104>
   3fa7c:	cmp	r4, #0
   3fa80:	beq	3fb2c <flatcc_emitter@@Base+0x110>
   3fa84:	sub	r6, r6, r4
   3fa88:	mov	r2, r4
   3fa8c:	mov	r1, sl
   3fa90:	ldr	r0, [r5, #16]
   3fa94:	bl	13fe0 <memcpy@plt>
   3fa98:	ldr	r0, [r5, #20]
   3fa9c:	ldr	r3, [r5, #16]
   3faa0:	add	sl, sl, r4
   3faa4:	add	r3, r3, r4
   3faa8:	cmp	r6, #0
   3faac:	sub	r4, r0, r4
   3fab0:	str	r3, [r5, #16]
   3fab4:	str	r4, [r5, #20]
   3fab8:	mov	r0, r4
   3fabc:	bne	3fa74 <flatcc_emitter@@Base+0x58>
   3fac0:	subs	r8, r8, #1
   3fac4:	add	r7, r7, #8
   3fac8:	bne	3fa60 <flatcc_emitter@@Base+0x44>
   3facc:	mov	r0, #0
   3fad0:	add	sp, sp, #12
   3fad4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3fad8:	ldr	r3, [r5, #16]
   3fadc:	sub	r0, r0, ip
   3fae0:	add	ip, r3, ip
   3fae4:	str	r0, [r5, #20]
   3fae8:	str	ip, [r5, #16]
   3faec:	cmp	r2, #0
   3faf0:	addne	r4, r1, #8
   3faf4:	movne	r7, r2
   3faf8:	beq	3facc <flatcc_emitter@@Base+0xb0>
   3fafc:	ldmdb	r4, {r1, r2}
   3fb00:	mov	r0, r3
   3fb04:	bl	13fe0 <memcpy@plt>
   3fb08:	ldr	r2, [r4, #-4]
   3fb0c:	subs	r7, r7, #1
   3fb10:	add	r4, r4, #8
   3fb14:	add	r3, r0, r2
   3fb18:	bne	3fafc <flatcc_emitter@@Base+0xe0>
   3fb1c:	b	3facc <flatcc_emitter@@Base+0xb0>
   3fb20:	mov	r4, r6
   3fb24:	mov	r6, #0
   3fb28:	b	3fa88 <flatcc_emitter@@Base+0x6c>
   3fb2c:	ldr	r4, [r5, #4]
   3fb30:	cmp	r4, #0
   3fb34:	beq	3fba4 <flatcc_emitter@@Base+0x188>
   3fb38:	ldr	fp, [r4, #2944]	; 0xb80
   3fb3c:	ldr	r3, [r5]
   3fb40:	cmp	fp, r3
   3fb44:	beq	3fb6c <flatcc_emitter@@Base+0x150>
   3fb48:	str	fp, [r5, #4]
   3fb4c:	ldr	r3, [fp, #2948]	; 0xb84
   3fb50:	mov	r4, #2944	; 0xb80
   3fb54:	str	fp, [r5, #16]
   3fb58:	ldr	r3, [r3, #2952]	; 0xb88
   3fb5c:	str	r9, [r5, #20]
   3fb60:	add	r3, r3, r4
   3fb64:	str	r3, [fp, #2952]	; 0xb88
   3fb68:	b	3fa74 <flatcc_emitter@@Base+0x58>
   3fb6c:	ldr	r0, [pc, #540]	; 3fd90 <flatcc_emitter@@Base+0x374>
   3fb70:	bl	14040 <malloc@plt>
   3fb74:	cmp	r0, #0
   3fb78:	beq	3fbb4 <flatcc_emitter@@Base+0x198>
   3fb7c:	ldr	r3, [r5, #28]
   3fb80:	str	fp, [r0, #2944]	; 0xb80
   3fb84:	add	r3, r3, #2944	; 0xb80
   3fb88:	str	r4, [r0, #2948]	; 0xb84
   3fb8c:	str	r3, [r5, #28]
   3fb90:	str	r0, [fp, #2948]	; 0xb84
   3fb94:	str	r0, [r4, #2944]	; 0xb80
   3fb98:	mov	fp, r0
   3fb9c:	str	r0, [r5, #4]
   3fba0:	b	3fb4c <flatcc_emitter@@Base+0x130>
   3fba4:	ldr	r0, [pc, #484]	; 3fd90 <flatcc_emitter@@Base+0x374>
   3fba8:	bl	14040 <malloc@plt>
   3fbac:	cmp	r0, #0
   3fbb0:	bne	3fbc0 <flatcc_emitter@@Base+0x1a4>
   3fbb4:	mvn	r0, #0
   3fbb8:	add	sp, sp, #12
   3fbbc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3fbc0:	mov	r2, #1472	; 0x5c0
   3fbc4:	ldr	r3, [r5, #28]
   3fbc8:	str	r2, [r5, #12]
   3fbcc:	str	r2, [r5, #20]
   3fbd0:	sub	r2, r2, #2944	; 0xb80
   3fbd4:	str	r2, [r0, #2952]	; 0xb88
   3fbd8:	str	r0, [r5]
   3fbdc:	add	r3, r3, #2944	; 0xb80
   3fbe0:	str	r0, [r5, #4]
   3fbe4:	str	r0, [r0, #2944]	; 0xb80
   3fbe8:	str	r0, [r0, #2948]	; 0xb84
   3fbec:	add	r0, r0, #1472	; 0x5c0
   3fbf0:	str	r0, [r5, #8]
   3fbf4:	str	r0, [r5, #16]
   3fbf8:	str	r3, [r5, #28]
   3fbfc:	mov	r4, #1472	; 0x5c0
   3fc00:	b	3fa74 <flatcc_emitter@@Base+0x58>
   3fc04:	ldr	r0, [r5, #12]
   3fc08:	cmp	ip, r0
   3fc0c:	bls	3fc8c <flatcc_emitter@@Base+0x270>
   3fc10:	add	r6, r1, r2, lsl #3
   3fc14:	mov	r7, r2
   3fc18:	mov	r9, #2944	; 0xb80
   3fc1c:	mov	r8, #0
   3fc20:	cmp	r7, #0
   3fc24:	beq	3facc <flatcc_emitter@@Base+0xb0>
   3fc28:	ldr	r4, [r6, #-4]
   3fc2c:	ldr	sl, [r6, #-8]
   3fc30:	cmp	r4, #0
   3fc34:	add	sl, sl, r4
   3fc38:	beq	3fc80 <flatcc_emitter@@Base+0x264>
   3fc3c:	ldr	r2, [r5, #12]
   3fc40:	cmp	r2, r4
   3fc44:	bcs	3fca4 <flatcc_emitter@@Base+0x288>
   3fc48:	cmp	r2, #0
   3fc4c:	beq	3fcb4 <flatcc_emitter@@Base+0x298>
   3fc50:	sub	r4, r4, r2
   3fc54:	mov	r1, r8
   3fc58:	ldr	r0, [r5, #8]
   3fc5c:	rsb	r3, r2, #0
   3fc60:	add	r0, r0, r3
   3fc64:	add	sl, sl, r3
   3fc68:	str	r1, [r5, #12]
   3fc6c:	str	r0, [r5, #8]
   3fc70:	mov	r1, sl
   3fc74:	bl	13fe0 <memcpy@plt>
   3fc78:	cmp	r4, #0
   3fc7c:	bne	3fc3c <flatcc_emitter@@Base+0x220>
   3fc80:	sub	r6, r6, #8
   3fc84:	sub	r7, r7, #1
   3fc88:	b	3fc20 <flatcc_emitter@@Base+0x204>
   3fc8c:	ldr	r3, [r5, #8]
   3fc90:	sub	r0, r0, ip
   3fc94:	sub	r3, r3, ip
   3fc98:	str	r0, [r5, #12]
   3fc9c:	str	r3, [r5, #8]
   3fca0:	b	3faec <flatcc_emitter@@Base+0xd0>
   3fca4:	sub	r1, r2, r4
   3fca8:	mov	r2, r4
   3fcac:	mov	r4, #0
   3fcb0:	b	3fc58 <flatcc_emitter@@Base+0x23c>
   3fcb4:	ldr	r3, [r5]
   3fcb8:	cmp	r3, #0
   3fcbc:	beq	3fd40 <flatcc_emitter@@Base+0x324>
   3fcc0:	ldr	fp, [r3, #2948]	; 0xb84
   3fcc4:	ldr	r2, [r5, #4]
   3fcc8:	cmp	fp, r2
   3fccc:	beq	3fd00 <flatcc_emitter@@Base+0x2e4>
   3fcd0:	ldr	r3, [r3, #2952]	; 0xb88
   3fcd4:	sub	r3, r3, #2944	; 0xb80
   3fcd8:	str	r3, [fp, #2952]	; 0xb88
   3fcdc:	str	fp, [r5]
   3fce0:	ldr	r3, [fp, #2944]	; 0xb80
   3fce4:	add	r2, fp, #2944	; 0xb80
   3fce8:	str	r9, [r5, #12]
   3fcec:	ldr	r3, [r3, #2952]	; 0xb88
   3fcf0:	str	r2, [r5, #8]
   3fcf4:	sub	r3, r3, #2944	; 0xb80
   3fcf8:	str	r3, [fp, #2952]	; 0xb88
   3fcfc:	b	3fc3c <flatcc_emitter@@Base+0x220>
   3fd00:	ldr	r0, [pc, #136]	; 3fd90 <flatcc_emitter@@Base+0x374>
   3fd04:	str	r3, [sp, #4]
   3fd08:	bl	14040 <malloc@plt>
   3fd0c:	ldr	r3, [sp, #4]
   3fd10:	cmp	r0, #0
   3fd14:	beq	3fbb4 <flatcc_emitter@@Base+0x198>
   3fd18:	ldr	r2, [r5, #28]
   3fd1c:	str	fp, [r0, #2948]	; 0xb84
   3fd20:	add	r2, r2, #2944	; 0xb80
   3fd24:	str	r3, [r0, #2944]	; 0xb80
   3fd28:	str	r2, [r5, #28]
   3fd2c:	str	r0, [r3, #2948]	; 0xb84
   3fd30:	str	r0, [fp, #2944]	; 0xb80
   3fd34:	str	r0, [r5]
   3fd38:	mov	fp, r0
   3fd3c:	b	3fce0 <flatcc_emitter@@Base+0x2c4>
   3fd40:	ldr	r0, [pc, #72]	; 3fd90 <flatcc_emitter@@Base+0x374>
   3fd44:	bl	14040 <malloc@plt>
   3fd48:	cmp	r0, #0
   3fd4c:	beq	3fbb4 <flatcc_emitter@@Base+0x198>
   3fd50:	mov	r2, #1472	; 0x5c0
   3fd54:	ldr	r3, [r5, #28]
   3fd58:	str	r2, [r5, #12]
   3fd5c:	str	r2, [r5, #20]
   3fd60:	sub	r2, r2, #2944	; 0xb80
   3fd64:	str	r2, [r0, #2952]	; 0xb88
   3fd68:	str	r0, [r5]
   3fd6c:	add	r3, r3, #2944	; 0xb80
   3fd70:	str	r0, [r5, #4]
   3fd74:	str	r0, [r0, #2944]	; 0xb80
   3fd78:	str	r0, [r0, #2948]	; 0xb84
   3fd7c:	add	r0, r0, #1472	; 0x5c0
   3fd80:	str	r0, [r5, #8]
   3fd84:	str	r0, [r5, #16]
   3fd88:	str	r3, [r5, #28]
   3fd8c:	b	3fc3c <flatcc_emitter@@Base+0x220>
   3fd90:	andeq	r0, r0, ip, lsl #23

0003fd94 <flatcc_emitter_copy_buffer@@Base>:
   3fd94:	ldr	ip, [r0, #24]
   3fd98:	cmp	ip, r2
   3fd9c:	bhi	3fe38 <flatcc_emitter_copy_buffer@@Base+0xa4>
   3fda0:	ldr	r2, [r0]
   3fda4:	cmp	r2, #0
   3fda8:	beq	3fe38 <flatcc_emitter_copy_buffer@@Base+0xa4>
   3fdac:	mov	r3, r1
   3fdb0:	ldr	r1, [r0, #4]
   3fdb4:	push	{r4, r5, r6, lr}
   3fdb8:	cmp	r2, r1
   3fdbc:	mov	r5, r0
   3fdc0:	beq	3fe44 <flatcc_emitter_copy_buffer@@Base+0xb0>
   3fdc4:	ldr	r4, [r0, #12]
   3fdc8:	ldr	r1, [r5, #8]
   3fdcc:	rsb	r4, r4, #2944	; 0xb80
   3fdd0:	mov	r2, r4
   3fdd4:	mov	r0, r3
   3fdd8:	bl	13fe0 <memcpy@plt>
   3fddc:	ldr	r2, [r5]
   3fde0:	ldr	r1, [r5, #4]
   3fde4:	add	r3, r0, r4
   3fde8:	ldr	r4, [r2, #2944]	; 0xb80
   3fdec:	cmp	r4, r1
   3fdf0:	beq	3fe1c <flatcc_emitter_copy_buffer@@Base+0x88>
   3fdf4:	mov	r6, #2944	; 0xb80
   3fdf8:	mov	r1, r4
   3fdfc:	mov	r0, r3
   3fe00:	mov	r2, r6
   3fe04:	bl	13fe0 <memcpy@plt>
   3fe08:	ldr	r4, [r4, #2944]	; 0xb80
   3fe0c:	ldr	r1, [r5, #4]
   3fe10:	cmp	r1, r4
   3fe14:	add	r3, r0, #2944	; 0xb80
   3fe18:	bne	3fdf8 <flatcc_emitter_copy_buffer@@Base+0x64>
   3fe1c:	ldr	r2, [r5, #20]
   3fe20:	mov	r0, r3
   3fe24:	rsb	r2, r2, #2944	; 0xb80
   3fe28:	bl	13fe0 <memcpy@plt>
   3fe2c:	mov	r3, r0
   3fe30:	mov	r0, r3
   3fe34:	pop	{r4, r5, r6, pc}
   3fe38:	mov	r3, #0
   3fe3c:	mov	r0, r3
   3fe40:	bx	lr
   3fe44:	ldr	r1, [r0, #8]
   3fe48:	mov	r2, ip
   3fe4c:	mov	r0, r3
   3fe50:	bl	13fe0 <memcpy@plt>
   3fe54:	mov	r3, r0
   3fe58:	b	3fe30 <flatcc_emitter_copy_buffer@@Base+0x9c>
   3fe5c:	andeq	r0, r0, r0

0003fe60 <cmetrohash64_1@@Base>:
   3fe60:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3fe64:	sub	sp, sp, #92	; 0x5c
   3fe68:	add	r5, pc, #616	; 0x268
   3fe6c:	ldrd	r4, [r5]
   3fe70:	ldr	ip, [sp, #128]	; 0x80
   3fe74:	ldr	r1, [pc, #624]	; 400ec <cmetrohash64_1@@Base+0x28c>
   3fe78:	adds	r4, r4, r2
   3fe7c:	adc	r5, r5, r3
   3fe80:	umlal	r4, r5, r1, ip
   3fe84:	cmp	r3, #0
   3fe88:	cmpeq	r2, #31
   3fe8c:	add	r3, r0, r2
   3fe90:	str	r3, [sp, #76]	; 0x4c
   3fe94:	strd	r4, [sp, #56]	; 0x38
   3fe98:	bls	40254 <cmetrohash64_1@@Base+0x3f4>
   3fe9c:	ldr	fp, [pc, #580]	; 400e8 <cmetrohash64_1@@Base+0x288>
   3fea0:	mov	lr, r1
   3fea4:	str	fp, [sp, #68]	; 0x44
   3fea8:	mov	sl, r4
   3feac:	mov	fp, r5
   3feb0:	sub	r3, r3, #32
   3feb4:	str	r3, [sp, #72]	; 0x48
   3feb8:	strd	r4, [sp]
   3febc:	strd	r4, [sp, #8]
   3fec0:	strd	r4, [sp, #48]	; 0x30
   3fec4:	ldrb	r1, [r0, #1]
   3fec8:	ldrb	r6, [r0]
   3fecc:	ldrb	r2, [r0, #9]
   3fed0:	ldrb	r4, [r0, #10]
   3fed4:	orr	r6, r6, r1, lsl #8
   3fed8:	ldrb	r1, [r0, #8]
   3fedc:	ldrb	r3, [r0, #17]
   3fee0:	ldrb	r5, [r0, #5]
   3fee4:	orr	r1, r1, r2, lsl #8
   3fee8:	orr	r1, r1, r4, lsl #16
   3feec:	ldrb	r4, [r0, #16]
   3fef0:	ldrb	r2, [r0, #4]
   3fef4:	ldrb	ip, [r0, #2]
   3fef8:	orr	r4, r4, r3, lsl #8
   3fefc:	ldrb	r3, [r0, #11]
   3ff00:	ldrb	r7, [r0, #3]
   3ff04:	orr	r2, r2, r5, lsl #8
   3ff08:	ldrb	r5, [r0, #6]
   3ff0c:	orr	r3, r1, r3, lsl #24
   3ff10:	orr	r6, r6, ip, lsl #16
   3ff14:	ldrb	ip, [r0, #25]
   3ff18:	ldrb	r8, [r0, #18]
   3ff1c:	str	r3, [sp, #64]	; 0x40
   3ff20:	orr	r2, r2, r5, lsl #16
   3ff24:	ldrb	r3, [r0, #24]
   3ff28:	ldrb	r5, [r0, #7]
   3ff2c:	orr	r6, r6, r7, lsl #24
   3ff30:	ldrb	r1, [r0, #19]
   3ff34:	umull	r6, r7, r6, lr
   3ff38:	ldrb	r9, [r0, #23]
   3ff3c:	orr	r3, r3, ip, lsl #8
   3ff40:	ldrb	ip, [r0, #26]
   3ff44:	orr	r2, r2, r5, lsl #24
   3ff48:	orr	r4, r4, r8, lsl #16
   3ff4c:	orr	r4, r4, r1, lsl #24
   3ff50:	ldrb	r1, [r0, #27]
   3ff54:	mla	r7, lr, r2, r7
   3ff58:	ldrb	r2, [r0, #21]
   3ff5c:	orr	r3, r3, ip, lsl #16
   3ff60:	ldrb	ip, [r0, #20]
   3ff64:	ldrb	r5, [r0, #13]
   3ff68:	orr	r3, r3, r1, lsl #24
   3ff6c:	ldrb	r1, [r0, #12]
   3ff70:	orr	ip, ip, r2, lsl #8
   3ff74:	ldrb	r2, [r0, #22]
   3ff78:	adds	r6, r6, sl
   3ff7c:	orr	r1, r1, r5, lsl #8
   3ff80:	ldrb	r5, [r0, #14]
   3ff84:	adc	r7, r7, fp
   3ff88:	ldrb	r8, [r0, #29]
   3ff8c:	lsr	sl, r6, #29
   3ff90:	orr	ip, ip, r2, lsl #16
   3ff94:	ldrb	r2, [r0, #28]
   3ff98:	orr	sl, sl, r7, lsl #3
   3ff9c:	orr	r1, r1, r5, lsl #16
   3ffa0:	str	sl, [sp, #16]
   3ffa4:	ldrb	r5, [r0, #15]
   3ffa8:	orr	ip, ip, r9, lsl #24
   3ffac:	ldrb	r9, [r0, #30]
   3ffb0:	orr	r2, r2, r8, lsl #8
   3ffb4:	ldrb	r8, [r0, #31]
   3ffb8:	orr	r1, r1, r5, lsl #24
   3ffbc:	orr	r2, r2, r9, lsl #16
   3ffc0:	lsr	r5, r7, #29
   3ffc4:	orr	r5, r5, r6, lsl #3
   3ffc8:	orr	r2, r2, r8, lsl #24
   3ffcc:	ldr	r6, [sp, #64]	; 0x40
   3ffd0:	ldr	r8, [sp, #68]	; 0x44
   3ffd4:	str	r5, [sp, #20]
   3ffd8:	ldr	r5, [pc, #256]	; 400e0 <cmetrohash64_1@@Base+0x280>
   3ffdc:	umull	r6, r7, r6, r8
   3ffe0:	umull	r4, r5, r4, r5
   3ffe4:	mla	r7, r8, r1, r7
   3ffe8:	ldr	r9, [pc, #240]	; 400e0 <cmetrohash64_1@@Base+0x280>
   3ffec:	ldr	r1, [pc, #240]	; 400e4 <cmetrohash64_1@@Base+0x284>
   3fff0:	ldrd	sl, [sp, #16]
   3fff4:	mla	r5, r9, ip, r5
   3fff8:	umull	r8, r9, r3, r1
   3fffc:	mla	r9, r1, r2, r9
   40000:	ldrd	r2, [sp, #48]	; 0x30
   40004:	add	r0, r0, #32
   40008:	adds	r2, r2, r6
   4000c:	adc	r3, r3, r7
   40010:	mov	r6, r2
   40014:	mov	r7, r3
   40018:	ldrd	r2, [sp, #8]
   4001c:	adds	r2, r2, r4
   40020:	adc	r3, r3, r5
   40024:	mov	r4, r2
   40028:	mov	r5, r3
   4002c:	ldrd	r2, [sp]
   40030:	adds	r2, r2, r8
   40034:	mov	r8, r2
   40038:	lsr	r2, r6, #29
   4003c:	orr	r1, r2, r7, lsl #3
   40040:	adc	r3, r3, r9
   40044:	str	r1, [sp, #24]
   40048:	lsr	r1, r7, #29
   4004c:	mov	r9, r3
   40050:	orr	r1, r1, r6, lsl #3
   40054:	lsr	r3, r4, #29
   40058:	ldrd	r6, [sp, #8]
   4005c:	orr	r3, r3, r5, lsl #3
   40060:	lsr	r2, r8, #29
   40064:	str	r3, [sp, #32]
   40068:	lsr	r3, r5, #29
   4006c:	adds	sl, sl, r6
   40070:	orr	r3, r3, r4, lsl #3
   40074:	str	r1, [sp, #28]
   40078:	orr	r1, r2, r9, lsl #3
   4007c:	lsr	r2, r9, #29
   40080:	adc	fp, fp, r7
   40084:	ldrd	r4, [sp]
   40088:	str	r3, [sp, #36]	; 0x24
   4008c:	ldrd	r6, [sp, #24]
   40090:	orr	r3, r2, r8, lsl #3
   40094:	str	r3, [sp, #44]	; 0x2c
   40098:	ldrd	r2, [sp, #32]
   4009c:	adds	r6, r6, r4
   400a0:	adc	r7, r7, r5
   400a4:	adds	r2, r2, sl
   400a8:	adc	r3, r3, fp
   400ac:	str	r1, [sp, #40]	; 0x28
   400b0:	strd	r2, [sp, #8]
   400b4:	ldrd	r2, [sp, #40]	; 0x28
   400b8:	strd	r6, [sp, #48]	; 0x30
   400bc:	adds	r2, r2, r6
   400c0:	adc	r3, r3, r7
   400c4:	strd	r2, [sp]
   400c8:	ldr	r3, [sp, #72]	; 0x48
   400cc:	cmp	r3, r0
   400d0:	bcs	3fec4 <cmetrohash64_1@@Base+0x64>
   400d4:	b	400f0 <cmetrohash64_1@@Base+0x290>
   400d8:	svcge	0x00065edb
   400dc:	rscvs	r5, r2, fp, lsr sp
   400e0:	blvc	ff7f01d4 <__bss_end__@@Base+0xff7810e0>
   400e4:	svccs	0x005870a5
   400e8:			; <UNDEFINED> instruction: 0x8648dbdb
   400ec:	ldmdagt	sl!, {r0, r5, r6, r7, r8, ip, pc}
   400f0:	ldrd	r4, [sp]
   400f4:	mov	r7, fp
   400f8:	ldr	fp, [sp, #68]	; 0x44
   400fc:	adds	r2, sl, r4
   40100:	adc	r3, r7, r5
   40104:	umull	r4, r5, r2, lr
   40108:	ldrd	r8, [sp, #8]
   4010c:	mla	r5, lr, r3, r5
   40110:	ldrd	r2, [sp, #48]	; 0x30
   40114:	mov	r6, sl
   40118:	adds	r2, r2, r4
   4011c:	adc	r3, r3, r5
   40120:	mov	r4, r2
   40124:	lsl	r2, r2, #31
   40128:	orr	r2, r2, r3, lsr #1
   4012c:	lsl	r1, r3, #31
   40130:	umull	r2, r3, r2, fp
   40134:	strd	r6, [sp, #8]
   40138:	orr	r4, r1, r4, lsr #1
   4013c:	eor	r8, r8, r2
   40140:	mla	r3, fp, r4, r3
   40144:	ldrd	r4, [sp, #48]	; 0x30
   40148:	eor	r9, r9, r3
   4014c:	adds	r4, r4, r8
   40150:	adc	r5, r5, r9
   40154:	umull	r2, r3, r4, fp
   40158:	mla	r3, fp, r5, r3
   4015c:	adds	r4, sl, r2
   40160:	adc	r5, r7, r3
   40164:	lsl	r6, r4, #31
   40168:	lsl	r3, r5, #31
   4016c:	orr	r2, r3, r4, lsr #1
   40170:	orr	r6, r6, r5, lsr #1
   40174:	ldrd	r4, [sp, #8]
   40178:	umull	r6, r7, r6, lr
   4017c:	adds	r4, r4, r8
   40180:	adc	r5, r5, r9
   40184:	mla	r7, lr, r2, r7
   40188:	strd	r4, [sp, #16]
   4018c:	ldrd	r2, [sp, #8]
   40190:	ldrd	r4, [sp, #48]	; 0x30
   40194:	ldr	r1, [sp, #20]
   40198:	eor	r2, r2, r4
   4019c:	eor	r3, r3, r5
   401a0:	strd	r2, [sp, #8]
   401a4:	ldrd	r2, [sp]
   401a8:	eor	r2, r2, r6
   401ac:	adds	r4, r4, r2
   401b0:	eor	r3, r3, r7
   401b4:	adc	r5, r5, r3
   401b8:	mov	r7, r3
   401bc:	ldr	r3, [sp, #16]
   401c0:	mov	r6, r2
   401c4:	strd	r6, [sp]
   401c8:	umull	r6, r7, r3, lr
   401cc:	umull	r2, r3, r4, fp
   401d0:	mla	r7, lr, r1, r7
   401d4:	mla	r3, fp, r5, r3
   401d8:	ldrd	r4, [sp]
   401dc:	adds	r4, r4, r6
   401e0:	adc	r5, r5, r7
   401e4:	adds	r2, r2, r8
   401e8:	adc	r3, r3, r9
   401ec:	mov	r6, r4
   401f0:	lsl	r8, r4, #31
   401f4:	lsl	r4, r2, #31
   401f8:	orr	r8, r8, r5, lsr #1
   401fc:	orr	r4, r4, r3, lsr #1
   40200:	mov	r7, r5
   40204:	umull	r8, r9, r8, fp
   40208:	umull	r4, r5, r4, lr
   4020c:	lsl	r3, r3, #31
   40210:	lsl	r1, r7, #31
   40214:	orr	r2, r3, r2, lsr #1
   40218:	orr	r6, r1, r6, lsr #1
   4021c:	mla	r5, lr, r2, r5
   40220:	mla	r9, fp, r6, r9
   40224:	ldrd	r2, [sp, #8]
   40228:	eor	r2, r2, r8
   4022c:	eor	r3, r3, r9
   40230:	mov	r8, r2
   40234:	mov	r9, r3
   40238:	ldrd	r2, [sp, #56]	; 0x38
   4023c:	eor	r8, r8, r4
   40240:	eor	r9, r9, r5
   40244:	adds	r2, r2, r8
   40248:	adc	r3, r3, r9
   4024c:	strd	r2, [sp, #56]	; 0x38
   40250:	ldr	r3, [sp, #76]	; 0x4c
   40254:	sub	r3, r3, r0
   40258:	cmp	r3, #15
   4025c:	ble	403ac <cmetrohash64_1@@Base+0x54c>
   40260:	ldrb	r1, [r0, #1]
   40264:	ldrb	r2, [r0, #2]
   40268:	ldrb	r6, [r0]
   4026c:	ldrb	r4, [r0, #9]
   40270:	ldrb	r3, [r0, #8]
   40274:	ldrb	lr, [r0, #10]
   40278:	ldrb	r7, [r0, #3]
   4027c:	ldrb	r5, [r0, #11]
   40280:	ldrb	sl, [r0, #5]
   40284:	orr	r6, r6, r1, lsl #8
   40288:	ldrb	ip, [r0, #6]
   4028c:	orr	r6, r6, r2, lsl #16
   40290:	orr	r4, r3, r4, lsl #8
   40294:	ldrb	r2, [r0, #4]
   40298:	ldr	r1, [pc, #-436]	; 400ec <cmetrohash64_1@@Base+0x28c>
   4029c:	ldrb	r8, [r0, #13]
   402a0:	orr	r4, r4, lr, lsl #16
   402a4:	ldrb	r9, [r0, #7]
   402a8:	ldrb	r3, [r0, #12]
   402ac:	orr	r4, r4, r5, lsl #24
   402b0:	orr	r6, r6, r7, lsl #24
   402b4:	ldrb	r5, [r0, #14]
   402b8:	ldr	lr, [pc, #-472]	; 400e8 <cmetrohash64_1@@Base+0x288>
   402bc:	orr	r2, r2, sl, lsl #8
   402c0:	umull	r6, r7, r6, r1
   402c4:	orr	r2, r2, ip, lsl #16
   402c8:	ldrb	ip, [r0, #15]
   402cc:	orr	r3, r3, r8, lsl #8
   402d0:	orr	r2, r2, r9, lsl #24
   402d4:	orr	r3, r3, r5, lsl #16
   402d8:	umull	r4, r5, r4, lr
   402dc:	ldrd	r8, [sp, #56]	; 0x38
   402e0:	mla	r7, r1, r2, r7
   402e4:	orr	r3, r3, ip, lsl #24
   402e8:	adds	r8, r8, r6
   402ec:	mla	r5, lr, r3, r5
   402f0:	ldrd	r2, [sp, #56]	; 0x38
   402f4:	adc	r9, r9, r7
   402f8:	lsl	sl, r8, #31
   402fc:	adds	r2, r2, r4
   40300:	orr	sl, sl, r9, lsr #1
   40304:	adc	r3, r3, r5
   40308:	umull	sl, fp, sl, lr
   4030c:	ldr	ip, [pc, #-564]	; 400e0 <cmetrohash64_1@@Base+0x280>
   40310:	mov	r4, r2
   40314:	lsl	r2, r2, #31
   40318:	mov	r5, r3
   4031c:	orr	r2, r2, r3, lsr #1
   40320:	lsl	r3, r9, #31
   40324:	orr	r6, r3, r8, lsr #1
   40328:	umull	r2, r3, r2, ip
   4032c:	mla	fp, lr, r6, fp
   40330:	lsl	lr, r5, #31
   40334:	orr	r4, lr, r4, lsr #1
   40338:	umull	r6, r7, sl, r1
   4033c:	mla	r3, ip, r4, r3
   40340:	ldr	ip, [pc, #-612]	; 400e4 <cmetrohash64_1@@Base+0x284>
   40344:	mla	r7, r1, fp, r7
   40348:	umull	r4, r5, r2, ip
   4034c:	mla	r5, ip, r3, r5
   40350:	lsl	r1, r7, #29
   40354:	orr	r9, r1, r6, lsr #3
   40358:	lsl	r1, r6, #29
   4035c:	orr	r8, r1, r7, lsr #3
   40360:	lsl	r1, r5, #29
   40364:	adds	r8, r8, r2
   40368:	orr	r7, r1, r4, lsr #3
   4036c:	lsl	r1, r4, #29
   40370:	adc	r9, r9, r3
   40374:	eor	r8, r8, sl
   40378:	orr	r6, r1, r5, lsr #3
   4037c:	adds	r8, r8, r6
   40380:	eor	r9, r9, fp
   40384:	adc	r9, r9, r7
   40388:	eor	r8, r8, r2
   4038c:	eor	r9, r9, r3
   40390:	ldrd	r2, [sp, #56]	; 0x38
   40394:	add	r0, r0, #16
   40398:	adds	r2, r2, r8
   4039c:	adc	r3, r3, r9
   403a0:	strd	r2, [sp, #56]	; 0x38
   403a4:	ldr	r3, [sp, #76]	; 0x4c
   403a8:	sub	r3, r3, r0
   403ac:	cmp	r3, #7
   403b0:	ble	40440 <cmetrohash64_1@@Base+0x5e0>
   403b4:	ldrb	r1, [r0, #1]
   403b8:	ldrb	r3, [r0, #2]
   403bc:	ldrb	r4, [r0]
   403c0:	ldrb	r2, [r0, #3]
   403c4:	ldrb	lr, [r0, #5]
   403c8:	orr	r4, r4, r1, lsl #8
   403cc:	ldrb	ip, [r0, #6]
   403d0:	ldr	r1, [pc, #-756]	; 400e4 <cmetrohash64_1@@Base+0x284>
   403d4:	orr	r4, r4, r3, lsl #16
   403d8:	ldrb	r3, [r0, #4]
   403dc:	orr	r4, r4, r2, lsl #24
   403e0:	ldrb	r2, [r0, #7]
   403e4:	umull	r4, r5, r4, r1
   403e8:	ldrd	r6, [sp, #56]	; 0x38
   403ec:	orr	r3, r3, lr, lsl #8
   403f0:	orr	r3, r3, ip, lsl #16
   403f4:	orr	r3, r3, r2, lsl #24
   403f8:	adds	r6, r6, r4
   403fc:	mla	r5, r1, r3, r5
   40400:	mov	r4, r6
   40404:	adc	r7, r7, r5
   40408:	ldr	r2, [pc, #-808]	; 400e8 <cmetrohash64_1@@Base+0x288>
   4040c:	lsl	r6, r6, #31
   40410:	orr	r6, r6, r7, lsr #1
   40414:	mov	r5, r7
   40418:	lsl	r1, r7, #31
   4041c:	umull	r6, r7, r6, r2
   40420:	ldr	r3, [sp, #76]	; 0x4c
   40424:	orr	r1, r1, r4, lsr #1
   40428:	add	r0, r0, #8
   4042c:	mla	r7, r2, r1, r7
   40430:	eor	r8, r6, r4
   40434:	eor	r9, r7, r5
   40438:	sub	r3, r3, r0
   4043c:	strd	r8, [sp, #56]	; 0x38
   40440:	cmp	r3, #3
   40444:	ble	40488 <cmetrohash64_1@@Base+0x628>
   40448:	ldr	ip, [r0], #4
   4044c:	ldr	r2, [pc, #-880]	; 400e4 <cmetrohash64_1@@Base+0x284>
   40450:	ldrd	r4, [sp, #56]	; 0x38
   40454:	ldr	r1, [pc, #-884]	; 400e8 <cmetrohash64_1@@Base+0x288>
   40458:	ldr	r3, [sp, #76]	; 0x4c
   4045c:	umlal	r4, r5, r2, ip
   40460:	sub	r3, r3, r0
   40464:	lsr	r6, r4, #15
   40468:	orr	r6, r6, r5, lsl #17
   4046c:	lsr	r2, r5, #15
   40470:	umull	r6, r7, r6, r1
   40474:	orr	r2, r2, r4, lsl #17
   40478:	eor	r8, r6, r4
   4047c:	mla	r7, r1, r2, r7
   40480:	eor	r9, r7, r5
   40484:	strd	r8, [sp, #56]	; 0x38
   40488:	cmp	r3, #1
   4048c:	ble	404d0 <cmetrohash64_1@@Base+0x670>
   40490:	ldrh	ip, [r0], #2
   40494:	ldr	r2, [pc, #-952]	; 400e4 <cmetrohash64_1@@Base+0x284>
   40498:	ldrd	r4, [sp, #56]	; 0x38
   4049c:	ldr	r1, [pc, #-956]	; 400e8 <cmetrohash64_1@@Base+0x288>
   404a0:	ldr	r3, [sp, #76]	; 0x4c
   404a4:	umlal	r4, r5, r2, ip
   404a8:	sub	r3, r3, r0
   404ac:	lsr	r6, r4, #13
   404b0:	orr	r6, r6, r5, lsl #19
   404b4:	lsr	r2, r5, #13
   404b8:	umull	r6, r7, r6, r1
   404bc:	orr	r2, r2, r4, lsl #19
   404c0:	eor	r8, r6, r4
   404c4:	mla	r7, r1, r2, r7
   404c8:	eor	r9, r7, r5
   404cc:	strd	r8, [sp, #56]	; 0x38
   404d0:	cmp	r3, #0
   404d4:	ble	40520 <cmetrohash64_1@@Base+0x6c0>
   404d8:	ldrb	r4, [r0]
   404dc:	ldr	r3, [pc, #-1024]	; 400e4 <cmetrohash64_1@@Base+0x284>
   404e0:	ldr	r0, [pc, #-1024]	; 400e8 <cmetrohash64_1@@Base+0x288>
   404e4:	umull	r4, r5, r4, r3
   404e8:	ldrd	r2, [sp, #56]	; 0x38
   404ec:	adds	r2, r2, r4
   404f0:	adc	r3, r3, r5
   404f4:	mov	r4, r2
   404f8:	lsr	r2, r2, #25
   404fc:	orr	r2, r2, r3, lsl #7
   40500:	mov	r5, r3
   40504:	lsr	r1, r3, #25
   40508:	umull	r2, r3, r2, r0
   4050c:	orr	r1, r1, r4, lsl #7
   40510:	mla	r3, r0, r1, r3
   40514:	eor	r0, r2, r4
   40518:	eor	r1, r3, r5
   4051c:	strd	r0, [sp, #56]	; 0x38
   40520:	ldrd	r0, [sp, #56]	; 0x38
   40524:	ldr	r2, [pc, #-1088]	; 400ec <cmetrohash64_1@@Base+0x28c>
   40528:	lsl	r3, r1, #31
   4052c:	orr	r5, r3, r0, lsr #1
   40530:	lsl	r3, r0, #31
   40534:	orr	r4, r3, r1, lsr #1
   40538:	eor	r0, r0, r4
   4053c:	eor	r1, r1, r5
   40540:	mov	r5, r1
   40544:	umull	r0, r1, r0, r2
   40548:	mla	r1, r2, r5, r1
   4054c:	add	r3, sp, #88	; 0x58
   40550:	lsl	r2, r1, #31
   40554:	orr	r5, r2, r0, lsr #1
   40558:	lsl	r2, r0, #31
   4055c:	orr	r4, r2, r1, lsr #1
   40560:	eor	r0, r0, r4
   40564:	eor	r1, r1, r5
   40568:	strd	r0, [r3, #-8]!
   4056c:	ldm	r3!, {r0, r1}
   40570:	ldr	r3, [sp, #132]	; 0x84
   40574:	str	r0, [r3]
   40578:	str	r1, [r3, #4]
   4057c:	add	sp, sp, #92	; 0x5c
   40580:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00040584 <cmetrohash64_2@@Base>:
   40584:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   40588:	sub	sp, sp, #92	; 0x5c
   4058c:	add	r5, pc, #620	; 0x26c
   40590:	ldrd	r4, [r5]
   40594:	ldr	ip, [sp, #128]	; 0x80
   40598:	ldr	r1, [pc, #628]	; 40814 <cmetrohash64_2@@Base+0x290>
   4059c:	adds	r4, r4, r2
   405a0:	adc	r5, r5, r3
   405a4:	umlal	r4, r5, r1, ip
   405a8:	cmp	r3, #0
   405ac:	cmpeq	r2, #31
   405b0:	add	r3, r0, r2
   405b4:	str	r3, [sp, #76]	; 0x4c
   405b8:	strd	r4, [sp, #56]	; 0x38
   405bc:	bls	4097c <cmetrohash64_2@@Base+0x3f8>
   405c0:	ldr	fp, [pc, #584]	; 40810 <cmetrohash64_2@@Base+0x28c>
   405c4:	mov	lr, r1
   405c8:	str	fp, [sp, #68]	; 0x44
   405cc:	mov	sl, r4
   405d0:	mov	fp, r5
   405d4:	sub	r3, r3, #32
   405d8:	str	r3, [sp, #72]	; 0x48
   405dc:	strd	r4, [sp]
   405e0:	strd	r4, [sp, #8]
   405e4:	strd	r4, [sp, #48]	; 0x30
   405e8:	ldrb	r1, [r0, #1]
   405ec:	ldrb	r6, [r0]
   405f0:	ldrb	r2, [r0, #9]
   405f4:	ldrb	r4, [r0, #10]
   405f8:	orr	r6, r6, r1, lsl #8
   405fc:	ldrb	r1, [r0, #8]
   40600:	ldrb	r3, [r0, #17]
   40604:	ldrb	r5, [r0, #5]
   40608:	orr	r1, r1, r2, lsl #8
   4060c:	orr	r1, r1, r4, lsl #16
   40610:	ldrb	r4, [r0, #16]
   40614:	ldrb	r2, [r0, #4]
   40618:	ldrb	ip, [r0, #2]
   4061c:	orr	r4, r4, r3, lsl #8
   40620:	ldrb	r3, [r0, #11]
   40624:	ldrb	r7, [r0, #3]
   40628:	orr	r2, r2, r5, lsl #8
   4062c:	ldrb	r5, [r0, #6]
   40630:	orr	r3, r1, r3, lsl #24
   40634:	orr	r6, r6, ip, lsl #16
   40638:	ldrb	ip, [r0, #25]
   4063c:	ldrb	r8, [r0, #18]
   40640:	str	r3, [sp, #64]	; 0x40
   40644:	orr	r2, r2, r5, lsl #16
   40648:	ldrb	r3, [r0, #24]
   4064c:	ldrb	r5, [r0, #7]
   40650:	orr	r6, r6, r7, lsl #24
   40654:	ldrb	r1, [r0, #19]
   40658:	umull	r6, r7, r6, lr
   4065c:	ldrb	r9, [r0, #23]
   40660:	orr	r3, r3, ip, lsl #8
   40664:	ldrb	ip, [r0, #26]
   40668:	orr	r2, r2, r5, lsl #24
   4066c:	orr	r4, r4, r8, lsl #16
   40670:	orr	r4, r4, r1, lsl #24
   40674:	ldrb	r1, [r0, #27]
   40678:	mla	r7, lr, r2, r7
   4067c:	ldrb	r2, [r0, #21]
   40680:	orr	r3, r3, ip, lsl #16
   40684:	ldrb	ip, [r0, #20]
   40688:	ldrb	r5, [r0, #13]
   4068c:	orr	r3, r3, r1, lsl #24
   40690:	ldrb	r1, [r0, #12]
   40694:	orr	ip, ip, r2, lsl #8
   40698:	ldrb	r2, [r0, #22]
   4069c:	adds	r6, r6, sl
   406a0:	orr	r1, r1, r5, lsl #8
   406a4:	ldrb	r5, [r0, #14]
   406a8:	adc	r7, r7, fp
   406ac:	ldrb	r8, [r0, #29]
   406b0:	lsr	sl, r6, #29
   406b4:	orr	ip, ip, r2, lsl #16
   406b8:	ldrb	r2, [r0, #28]
   406bc:	orr	sl, sl, r7, lsl #3
   406c0:	orr	r1, r1, r5, lsl #16
   406c4:	str	sl, [sp, #16]
   406c8:	ldrb	r5, [r0, #15]
   406cc:	orr	ip, ip, r9, lsl #24
   406d0:	ldrb	r9, [r0, #30]
   406d4:	orr	r2, r2, r8, lsl #8
   406d8:	ldrb	r8, [r0, #31]
   406dc:	orr	r1, r1, r5, lsl #24
   406e0:	orr	r2, r2, r9, lsl #16
   406e4:	lsr	r5, r7, #29
   406e8:	orr	r5, r5, r6, lsl #3
   406ec:	orr	r2, r2, r8, lsl #24
   406f0:	ldr	r6, [sp, #64]	; 0x40
   406f4:	ldr	r8, [sp, #68]	; 0x44
   406f8:	str	r5, [sp, #20]
   406fc:	ldr	r5, [pc, #260]	; 40808 <cmetrohash64_2@@Base+0x284>
   40700:	umull	r6, r7, r6, r8
   40704:	umull	r4, r5, r4, r5
   40708:	mla	r7, r8, r1, r7
   4070c:	ldr	r9, [pc, #244]	; 40808 <cmetrohash64_2@@Base+0x284>
   40710:	ldr	r1, [pc, #244]	; 4080c <cmetrohash64_2@@Base+0x288>
   40714:	ldrd	sl, [sp, #16]
   40718:	mla	r5, r9, ip, r5
   4071c:	umull	r8, r9, r3, r1
   40720:	mla	r9, r1, r2, r9
   40724:	ldrd	r2, [sp, #48]	; 0x30
   40728:	add	r0, r0, #32
   4072c:	adds	r2, r2, r6
   40730:	adc	r3, r3, r7
   40734:	mov	r6, r2
   40738:	mov	r7, r3
   4073c:	ldrd	r2, [sp, #8]
   40740:	adds	r2, r2, r4
   40744:	adc	r3, r3, r5
   40748:	mov	r4, r2
   4074c:	mov	r5, r3
   40750:	ldrd	r2, [sp]
   40754:	adds	r2, r2, r8
   40758:	mov	r8, r2
   4075c:	lsr	r2, r6, #29
   40760:	orr	r1, r2, r7, lsl #3
   40764:	adc	r3, r3, r9
   40768:	str	r1, [sp, #24]
   4076c:	lsr	r1, r7, #29
   40770:	mov	r9, r3
   40774:	orr	r1, r1, r6, lsl #3
   40778:	lsr	r3, r4, #29
   4077c:	ldrd	r6, [sp, #8]
   40780:	orr	r3, r3, r5, lsl #3
   40784:	lsr	r2, r8, #29
   40788:	str	r3, [sp, #32]
   4078c:	lsr	r3, r5, #29
   40790:	adds	sl, sl, r6
   40794:	orr	r3, r3, r4, lsl #3
   40798:	str	r1, [sp, #28]
   4079c:	orr	r1, r2, r9, lsl #3
   407a0:	lsr	r2, r9, #29
   407a4:	adc	fp, fp, r7
   407a8:	ldrd	r4, [sp]
   407ac:	str	r3, [sp, #36]	; 0x24
   407b0:	ldrd	r6, [sp, #24]
   407b4:	orr	r3, r2, r8, lsl #3
   407b8:	str	r3, [sp, #44]	; 0x2c
   407bc:	ldrd	r2, [sp, #32]
   407c0:	adds	r6, r6, r4
   407c4:	adc	r7, r7, r5
   407c8:	adds	r2, r2, sl
   407cc:	adc	r3, r3, fp
   407d0:	str	r1, [sp, #40]	; 0x28
   407d4:	strd	r2, [sp, #8]
   407d8:	ldrd	r2, [sp, #40]	; 0x28
   407dc:	strd	r6, [sp, #48]	; 0x30
   407e0:	adds	r2, r2, r6
   407e4:	adc	r3, r3, r7
   407e8:	strd	r2, [sp]
   407ec:	ldr	r3, [sp, #72]	; 0x48
   407f0:	cmp	r3, r0
   407f4:	bcs	405e8 <cmetrohash64_2@@Base+0x64>
   407f8:	b	40818 <cmetrohash64_2@@Base+0x294>
   407fc:	nop			; (mov r0, r0)
   40800:	blle	ff9736dc <__bss_end__@@Base+0xff9045e8>
   40804:	adcspl	r3, ip, #-134217725	; 0xf8000003
   40808:	addsvs	r2, r9, #772	; 0x304
   4080c:	adcscc	r5, ip, r9, lsr #22
   40810:	adcge	r0, sl, #-335544320	; 0xec000000
   40814:			; <UNDEFINED> instruction: 0xd6d018f5
   40818:	ldrd	r4, [sp]
   4081c:	mov	r7, fp
   40820:	ldr	fp, [sp, #68]	; 0x44
   40824:	adds	r2, sl, r4
   40828:	adc	r3, r7, r5
   4082c:	umull	r4, r5, r2, lr
   40830:	ldrd	r8, [sp, #8]
   40834:	mla	r5, lr, r3, r5
   40838:	ldrd	r2, [sp, #48]	; 0x30
   4083c:	mov	r6, sl
   40840:	adds	r2, r2, r4
   40844:	adc	r3, r3, r5
   40848:	mov	r4, r2
   4084c:	lsr	r2, r2, #30
   40850:	orr	r2, r2, r3, lsl #2
   40854:	lsr	r1, r3, #30
   40858:	umull	r2, r3, r2, fp
   4085c:	strd	r6, [sp, #8]
   40860:	orr	r4, r1, r4, lsl #2
   40864:	eor	r8, r8, r2
   40868:	mla	r3, fp, r4, r3
   4086c:	ldrd	r4, [sp, #48]	; 0x30
   40870:	eor	r9, r9, r3
   40874:	adds	r4, r4, r8
   40878:	adc	r5, r5, r9
   4087c:	umull	r2, r3, r4, fp
   40880:	mla	r3, fp, r5, r3
   40884:	adds	r4, sl, r2
   40888:	adc	r5, r7, r3
   4088c:	lsr	r6, r4, #30
   40890:	lsr	r3, r5, #30
   40894:	orr	r2, r3, r4, lsl #2
   40898:	orr	r6, r6, r5, lsl #2
   4089c:	ldrd	r4, [sp, #8]
   408a0:	umull	r6, r7, r6, lr
   408a4:	adds	r4, r4, r8
   408a8:	adc	r5, r5, r9
   408ac:	mla	r7, lr, r2, r7
   408b0:	strd	r4, [sp, #16]
   408b4:	ldrd	r2, [sp, #8]
   408b8:	ldrd	r4, [sp, #48]	; 0x30
   408bc:	ldr	r1, [sp, #20]
   408c0:	eor	r2, r2, r4
   408c4:	eor	r3, r3, r5
   408c8:	strd	r2, [sp, #8]
   408cc:	ldrd	r2, [sp]
   408d0:	eor	r2, r2, r6
   408d4:	adds	r4, r4, r2
   408d8:	eor	r3, r3, r7
   408dc:	adc	r5, r5, r3
   408e0:	mov	r7, r3
   408e4:	ldr	r3, [sp, #16]
   408e8:	mov	r6, r2
   408ec:	strd	r6, [sp]
   408f0:	umull	r6, r7, r3, lr
   408f4:	umull	r2, r3, r4, fp
   408f8:	mla	r7, lr, r1, r7
   408fc:	mla	r3, fp, r5, r3
   40900:	ldrd	r4, [sp]
   40904:	adds	r4, r4, r6
   40908:	adc	r5, r5, r7
   4090c:	adds	r2, r2, r8
   40910:	adc	r3, r3, r9
   40914:	mov	r6, r4
   40918:	lsr	r8, r4, #30
   4091c:	lsr	r4, r2, #30
   40920:	orr	r8, r8, r5, lsl #2
   40924:	orr	r4, r4, r3, lsl #2
   40928:	mov	r7, r5
   4092c:	umull	r8, r9, r8, fp
   40930:	umull	r4, r5, r4, lr
   40934:	lsr	r3, r3, #30
   40938:	lsr	r1, r7, #30
   4093c:	orr	r2, r3, r2, lsl #2
   40940:	orr	r6, r1, r6, lsl #2
   40944:	mla	r5, lr, r2, r5
   40948:	mla	r9, fp, r6, r9
   4094c:	ldrd	r2, [sp, #8]
   40950:	eor	r2, r2, r8
   40954:	eor	r3, r3, r9
   40958:	mov	r8, r2
   4095c:	mov	r9, r3
   40960:	ldrd	r2, [sp, #56]	; 0x38
   40964:	eor	r8, r8, r4
   40968:	eor	r9, r9, r5
   4096c:	adds	r2, r2, r8
   40970:	adc	r3, r3, r9
   40974:	strd	r2, [sp, #56]	; 0x38
   40978:	ldr	r3, [sp, #76]	; 0x4c
   4097c:	sub	r3, r3, r0
   40980:	cmp	r3, #15
   40984:	ble	40ac8 <cmetrohash64_2@@Base+0x544>
   40988:	ldrb	r2, [r0, #1]
   4098c:	ldrb	r1, [r0, #2]
   40990:	ldrb	r6, [r0]
   40994:	ldrb	r7, [r0, #3]
   40998:	ldrb	r5, [r0, #9]
   4099c:	ldrb	r3, [r0, #10]
   409a0:	ldrb	r4, [r0, #8]
   409a4:	ldrb	lr, [r0, #11]
   409a8:	orr	r6, r6, r2, lsl #8
   409ac:	ldrb	r2, [r0, #5]
   409b0:	ldr	ip, [pc, #-432]	; 40808 <cmetrohash64_2@@Base+0x284>
   409b4:	ldrb	sl, [r0, #6]
   409b8:	orr	r6, r6, r1, lsl #16
   409bc:	ldrb	r1, [r0, #4]
   409c0:	ldrb	r9, [r0, #7]
   409c4:	orr	r4, r4, r5, lsl #8
   409c8:	orr	r6, r6, r7, lsl #24
   409cc:	ldrb	r5, [r0, #13]
   409d0:	ldrb	r8, [r0, #14]
   409d4:	orr	r4, r4, r3, lsl #16
   409d8:	ldrb	r3, [r0, #12]
   409dc:	umull	r6, r7, r6, ip
   409e0:	orr	r1, r1, r2, lsl #8
   409e4:	orr	r4, r4, lr, lsl #24
   409e8:	ldrb	lr, [r0, #15]
   409ec:	orr	r2, r1, sl, lsl #16
   409f0:	orr	r2, r2, r9, lsl #24
   409f4:	orr	r3, r3, r5, lsl #8
   409f8:	umull	r4, r5, r4, ip
   409fc:	mla	r7, ip, r2, r7
   40a00:	orr	r3, r3, r8, lsl #16
   40a04:	ldrd	r8, [sp, #56]	; 0x38
   40a08:	orr	lr, r3, lr, lsl #24
   40a0c:	ldr	r1, [pc, #-520]	; 4080c <cmetrohash64_2@@Base+0x288>
   40a10:	adds	r2, r8, r6
   40a14:	mla	r5, ip, lr, r5
   40a18:	adc	r3, r9, r7
   40a1c:	lsr	sl, r2, #29
   40a20:	adds	r8, r8, r4
   40a24:	adc	r9, r9, r5
   40a28:	orr	sl, sl, r3, lsl #3
   40a2c:	mov	r6, r2
   40a30:	lsr	r2, r8, #29
   40a34:	umull	sl, fp, sl, r1
   40a38:	ldr	ip, [pc, #-556]	; 40814 <cmetrohash64_2@@Base+0x290>
   40a3c:	orr	r2, r2, r9, lsl #3
   40a40:	lsr	r3, r3, #29
   40a44:	orr	r6, r3, r6, lsl #3
   40a48:	umull	r2, r3, r2, r1
   40a4c:	mla	fp, r1, r6, fp
   40a50:	lsr	lr, r9, #29
   40a54:	umull	r6, r7, sl, ip
   40a58:	orr	r4, lr, r8, lsl #3
   40a5c:	mla	r7, ip, fp, r7
   40a60:	mla	r3, r1, r4, r3
   40a64:	umull	r4, r5, r2, r1
   40a68:	mla	r5, r1, r3, r5
   40a6c:	lsl	r1, r7, #30
   40a70:	orr	r9, r1, r6, lsr #2
   40a74:	lsl	r1, r6, #30
   40a78:	orr	r8, r1, r7, lsr #2
   40a7c:	lsl	r1, r5, #30
   40a80:	adds	r8, r8, r2
   40a84:	orr	r7, r1, r4, lsr #2
   40a88:	lsl	r1, r4, #30
   40a8c:	adc	r9, r9, r3
   40a90:	eor	r8, r8, sl
   40a94:	orr	r6, r1, r5, lsr #2
   40a98:	adds	r8, r8, r6
   40a9c:	eor	r9, r9, fp
   40aa0:	adc	r9, r9, r7
   40aa4:	eor	r8, r8, r2
   40aa8:	eor	r9, r9, r3
   40aac:	ldrd	r2, [sp, #56]	; 0x38
   40ab0:	add	r0, r0, #16
   40ab4:	adds	r2, r2, r8
   40ab8:	adc	r3, r3, r9
   40abc:	strd	r2, [sp, #56]	; 0x38
   40ac0:	ldr	r3, [sp, #76]	; 0x4c
   40ac4:	sub	r3, r3, r0
   40ac8:	cmp	r3, #7
   40acc:	ble	40b5c <cmetrohash64_2@@Base+0x5d8>
   40ad0:	ldrb	r1, [r0, #1]
   40ad4:	ldrb	r3, [r0, #2]
   40ad8:	ldrb	r4, [r0]
   40adc:	ldrb	r2, [r0, #3]
   40ae0:	ldrb	lr, [r0, #5]
   40ae4:	orr	r4, r4, r1, lsl #8
   40ae8:	ldrb	ip, [r0, #6]
   40aec:	ldr	r1, [pc, #-744]	; 4080c <cmetrohash64_2@@Base+0x288>
   40af0:	orr	r4, r4, r3, lsl #16
   40af4:	ldrb	r3, [r0, #4]
   40af8:	orr	r4, r4, r2, lsl #24
   40afc:	ldrb	r2, [r0, #7]
   40b00:	umull	r4, r5, r4, r1
   40b04:	ldrd	r6, [sp, #56]	; 0x38
   40b08:	orr	r3, r3, lr, lsl #8
   40b0c:	orr	r3, r3, ip, lsl #16
   40b10:	orr	r3, r3, r2, lsl #24
   40b14:	adds	r6, r6, r4
   40b18:	mla	r5, r1, r3, r5
   40b1c:	mov	r4, r6
   40b20:	adc	r7, r7, r5
   40b24:	ldr	r2, [pc, #-796]	; 40810 <cmetrohash64_2@@Base+0x28c>
   40b28:	lsl	r6, r6, #28
   40b2c:	orr	r6, r6, r7, lsr #4
   40b30:	mov	r5, r7
   40b34:	lsl	r1, r7, #28
   40b38:	umull	r6, r7, r6, r2
   40b3c:	ldr	r3, [sp, #76]	; 0x4c
   40b40:	orr	r1, r1, r4, lsr #4
   40b44:	add	r0, r0, #8
   40b48:	mla	r7, r2, r1, r7
   40b4c:	eor	r8, r6, r4
   40b50:	eor	r9, r7, r5
   40b54:	sub	r3, r3, r0
   40b58:	strd	r8, [sp, #56]	; 0x38
   40b5c:	cmp	r3, #3
   40b60:	ble	40ba4 <cmetrohash64_2@@Base+0x620>
   40b64:	ldr	ip, [r0], #4
   40b68:	ldr	r2, [pc, #-868]	; 4080c <cmetrohash64_2@@Base+0x288>
   40b6c:	ldrd	r4, [sp, #56]	; 0x38
   40b70:	ldr	r1, [pc, #-872]	; 40810 <cmetrohash64_2@@Base+0x28c>
   40b74:	ldr	r3, [sp, #76]	; 0x4c
   40b78:	umlal	r4, r5, r2, ip
   40b7c:	sub	r3, r3, r0
   40b80:	lsr	r6, r4, #15
   40b84:	orr	r6, r6, r5, lsl #17
   40b88:	lsr	r2, r5, #15
   40b8c:	umull	r6, r7, r6, r1
   40b90:	orr	r2, r2, r4, lsl #17
   40b94:	eor	r8, r6, r4
   40b98:	mla	r7, r1, r2, r7
   40b9c:	eor	r9, r7, r5
   40ba0:	strd	r8, [sp, #56]	; 0x38
   40ba4:	cmp	r3, #1
   40ba8:	ble	40bec <cmetrohash64_2@@Base+0x668>
   40bac:	ldrh	ip, [r0], #2
   40bb0:	ldr	r2, [pc, #-940]	; 4080c <cmetrohash64_2@@Base+0x288>
   40bb4:	ldrd	r4, [sp, #56]	; 0x38
   40bb8:	ldr	r1, [pc, #-944]	; 40810 <cmetrohash64_2@@Base+0x28c>
   40bbc:	ldr	r3, [sp, #76]	; 0x4c
   40bc0:	umlal	r4, r5, r2, ip
   40bc4:	sub	r3, r3, r0
   40bc8:	lsr	r6, r4, #15
   40bcc:	orr	r6, r6, r5, lsl #17
   40bd0:	lsr	r2, r5, #15
   40bd4:	umull	r6, r7, r6, r1
   40bd8:	orr	r2, r2, r4, lsl #17
   40bdc:	eor	r8, r6, r4
   40be0:	mla	r7, r1, r2, r7
   40be4:	eor	r9, r7, r5
   40be8:	strd	r8, [sp, #56]	; 0x38
   40bec:	cmp	r3, #0
   40bf0:	ble	40c3c <cmetrohash64_2@@Base+0x6b8>
   40bf4:	ldrb	r4, [r0]
   40bf8:	ldr	r3, [pc, #-1012]	; 4080c <cmetrohash64_2@@Base+0x288>
   40bfc:	ldr	r0, [pc, #-1012]	; 40810 <cmetrohash64_2@@Base+0x28c>
   40c00:	umull	r4, r5, r4, r3
   40c04:	ldrd	r2, [sp, #56]	; 0x38
   40c08:	adds	r2, r2, r4
   40c0c:	adc	r3, r3, r5
   40c10:	mov	r4, r2
   40c14:	lsr	r2, r2, #23
   40c18:	orr	r2, r2, r3, lsl #9
   40c1c:	mov	r5, r3
   40c20:	lsr	r1, r3, #23
   40c24:	umull	r2, r3, r2, r0
   40c28:	orr	r1, r1, r4, lsl #9
   40c2c:	mla	r3, r0, r1, r3
   40c30:	eor	r0, r2, r4
   40c34:	eor	r1, r3, r5
   40c38:	strd	r0, [sp, #56]	; 0x38
   40c3c:	ldrd	r0, [sp, #56]	; 0x38
   40c40:	ldr	r2, [pc, #-1076]	; 40814 <cmetrohash64_2@@Base+0x290>
   40c44:	lsr	r3, r0, #28
   40c48:	orr	r4, r3, r1, lsl #4
   40c4c:	lsr	r3, r1, #28
   40c50:	orr	r5, r3, r0, lsl #4
   40c54:	eor	r0, r0, r4
   40c58:	eor	r1, r1, r5
   40c5c:	mov	r5, r1
   40c60:	umull	r0, r1, r0, r2
   40c64:	mla	r1, r2, r5, r1
   40c68:	lsr	r2, r0, #29
   40c6c:	add	r3, sp, #88	; 0x58
   40c70:	orr	r4, r2, r1, lsl #3
   40c74:	lsr	r2, r1, #29
   40c78:	orr	r5, r2, r0, lsl #3
   40c7c:	eor	r1, r1, r5
   40c80:	eor	r0, r0, r4
   40c84:	strd	r0, [r3, #-8]!
   40c88:	ldm	r3!, {r0, r1}
   40c8c:	ldr	r3, [sp, #132]	; 0x84
   40c90:	str	r0, [r3]
   40c94:	str	r1, [r3, #4]
   40c98:	add	sp, sp, #92	; 0x5c
   40c9c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   40ca0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   40ca4:	sub	sp, sp, #36	; 0x24
   40ca8:	cmp	r3, #0
   40cac:	str	r3, [sp, #12]
   40cb0:	str	r1, [sp, #16]
   40cb4:	beq	40ea0 <cmetrohash64_2@@Base+0x91c>
   40cb8:	cmp	r3, #2
   40cbc:	beq	40e70 <cmetrohash64_2@@Base+0x8ec>
   40cc0:	cmp	r3, #1
   40cc4:	beq	40e5c <cmetrohash64_2@@Base+0x8d8>
   40cc8:	ldr	r8, [r0, #12]
   40ccc:	mov	r3, #179	; 0xb3
   40cd0:	ldr	r1, [r0, #8]
   40cd4:	mul	r3, r3, r8
   40cd8:	mov	r9, r2
   40cdc:	mov	sl, r0
   40ce0:	cmp	r1, r3, lsr #8
   40ce4:	bcc	40cfc <cmetrohash64_2@@Base+0x778>
   40ce8:	lsl	r1, r1, #1
   40cec:	bl	40ed8 <cmetrohash64_2@@Base+0x954>
   40cf0:	cmp	r0, #0
   40cf4:	bne	40e84 <cmetrohash64_2@@Base+0x900>
   40cf8:	ldr	r8, [sl, #12]
   40cfc:	ldr	r2, [pc, #432]	; 40eb4 <cmetrohash64_2@@Base+0x930>
   40d00:	add	r3, sp, #24
   40d04:	ldr	r0, [sp, #16]
   40d08:	stm	sp, {r2, r3}
   40d0c:	mov	r3, #0
   40d10:	mov	r2, r9
   40d14:	ldr	r7, [sl]
   40d18:	bl	3fe60 <cmetrohash64_1@@Base>
   40d1c:	ldr	r3, [sp, #72]	; 0x48
   40d20:	ldr	r6, [sp, #24]
   40d24:	sub	r3, r3, #2
   40d28:	sub	r8, r8, #1
   40d2c:	cmp	r3, #1
   40d30:	and	r4, r8, r6
   40d34:	bls	40e08 <cmetrohash64_2@@Base+0x884>
   40d38:	ldr	r5, [r7, r4, lsl #2]
   40d3c:	add	r4, r7, r4, lsl #2
   40d40:	cmp	r5, #0
   40d44:	moveq	fp, r4
   40d48:	beq	40de4 <cmetrohash64_2@@Base+0x860>
   40d4c:	str	sl, [sp, #20]
   40d50:	add	r6, r6, #1
   40d54:	mov	sl, r5
   40d58:	mov	fp, #0
   40d5c:	ldr	r5, [sp, #16]
   40d60:	b	40d7c <cmetrohash64_2@@Base+0x7f8>
   40d64:	and	r4, r8, r6
   40d68:	add	r6, r6, #1
   40d6c:	ldr	sl, [r7, r4, lsl #2]
   40d70:	add	r4, r7, r4, lsl #2
   40d74:	cmp	sl, #0
   40d78:	beq	40dd8 <cmetrohash64_2@@Base+0x854>
   40d7c:	cmp	sl, #2
   40d80:	beq	40dcc <cmetrohash64_2@@Base+0x848>
   40d84:	ldr	r2, [sl, #12]
   40d88:	cmp	r9, r2
   40d8c:	bne	40d64 <cmetrohash64_2@@Base+0x7e0>
   40d90:	mov	r2, r9
   40d94:	ldr	r1, [sl, #8]
   40d98:	mov	r0, r5
   40d9c:	bl	13ff8 <memcmp@plt>
   40da0:	cmp	r0, #0
   40da4:	bne	40d64 <cmetrohash64_2@@Base+0x7e0>
   40da8:	ldr	r3, [sp, #72]	; 0x48
   40dac:	mov	r5, sl
   40db0:	cmp	r3, #0
   40db4:	bne	40dfc <cmetrohash64_2@@Base+0x878>
   40db8:	ldr	r3, [sp, #12]
   40dbc:	mov	r0, r5
   40dc0:	str	r3, [r4]
   40dc4:	add	sp, sp, #36	; 0x24
   40dc8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   40dcc:	cmp	fp, #0
   40dd0:	moveq	fp, r4
   40dd4:	b	40d64 <cmetrohash64_2@@Base+0x7e0>
   40dd8:	cmp	fp, #0
   40ddc:	ldr	sl, [sp, #20]
   40de0:	moveq	fp, r4
   40de4:	ldr	r2, [sl, #8]
   40de8:	ldr	r3, [sp, #12]
   40dec:	mov	r5, #0
   40df0:	add	r2, r2, #1
   40df4:	str	r2, [sl, #8]
   40df8:	str	r3, [fp]
   40dfc:	mov	r0, r5
   40e00:	add	sp, sp, #36	; 0x24
   40e04:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   40e08:	ldr	r2, [r7, r4, lsl #2]
   40e0c:	ldr	r3, [sl, #8]
   40e10:	cmp	r2, #0
   40e14:	cmpne	r2, #2
   40e18:	add	r3, r3, #1
   40e1c:	str	r3, [sl, #8]
   40e20:	add	r4, r7, r4, lsl #2
   40e24:	beq	40e4c <cmetrohash64_2@@Base+0x8c8>
   40e28:	add	r6, r6, #1
   40e2c:	and	r3, r8, r6
   40e30:	add	r6, r6, #1
   40e34:	ldr	r2, [r7, r3, lsl #2]
   40e38:	add	r3, r7, r3, lsl #2
   40e3c:	cmp	r2, #0
   40e40:	cmpne	r2, #2
   40e44:	bne	40e2c <cmetrohash64_2@@Base+0x8a8>
   40e48:	mov	r4, r3
   40e4c:	ldr	r3, [sp, #12]
   40e50:	mov	r5, #0
   40e54:	str	r3, [r4]
   40e58:	b	40dfc <cmetrohash64_2@@Base+0x878>
   40e5c:	ldr	r3, [pc, #84]	; 40eb8 <cmetrohash64_2@@Base+0x934>
   40e60:	mov	r2, #116	; 0x74
   40e64:	ldr	r1, [pc, #80]	; 40ebc <cmetrohash64_2@@Base+0x938>
   40e68:	ldr	r0, [pc, #80]	; 40ec0 <cmetrohash64_2@@Base+0x93c>
   40e6c:	bl	14148 <__assert_fail@plt>
   40e70:	ldr	r3, [pc, #64]	; 40eb8 <cmetrohash64_2@@Base+0x934>
   40e74:	mov	r2, #115	; 0x73
   40e78:	ldr	r1, [pc, #60]	; 40ebc <cmetrohash64_2@@Base+0x938>
   40e7c:	ldr	r0, [pc, #64]	; 40ec4 <cmetrohash64_2@@Base+0x940>
   40e80:	bl	14148 <__assert_fail@plt>
   40e84:	ldr	r3, [pc, #60]	; 40ec8 <cmetrohash64_2@@Base+0x944>
   40e88:	ldr	r2, [pc, #60]	; 40ecc <cmetrohash64_2@@Base+0x948>
   40e8c:	ldr	r1, [pc, #60]	; 40ed0 <cmetrohash64_2@@Base+0x94c>
   40e90:	ldr	r0, [r3]
   40e94:	bl	14094 <fprintf@plt>
   40e98:	mov	r0, #1
   40e9c:	bl	14070 <exit@plt>
   40ea0:	ldr	r3, [pc, #16]	; 40eb8 <cmetrohash64_2@@Base+0x934>
   40ea4:	mov	r2, #114	; 0x72
   40ea8:	ldr	r1, [pc, #12]	; 40ebc <cmetrohash64_2@@Base+0x938>
   40eac:	ldr	r0, [pc, #32]	; 40ed4 <cmetrohash64_2@@Base+0x950>
   40eb0:	bl	14148 <__assert_fail@plt>
   40eb4:	svccs	0x00693b52
   40eb8:	andeq	lr, r5, r8, ror #7
   40ebc:	ldrdeq	sl, [r5], -ip
   40ec0:	andeq	sl, r5, ip, asr lr
   40ec4:	andeq	sl, r5, r4, asr #28
   40ec8:	andeq	pc, r6, r8, lsr #1
   40ecc:	andeq	sl, r5, r4, ror lr
   40ed0:	andeq	sl, r5, r8, lsr #29
   40ed4:	andeq	sl, r5, ip, lsr #28
   40ed8:	ldr	r3, [r0, #8]
   40edc:	push	{r4, r5, r6, r7, r8, lr}
   40ee0:	cmp	r1, r3
   40ee4:	movcc	r1, r3
   40ee8:	cmp	r1, #2
   40eec:	sub	sp, sp, #24
   40ef0:	mov	r6, r0
   40ef4:	ldr	r7, [r0]
   40ef8:	mov	r5, #4
   40efc:	bls	40f14 <cmetrohash64_2@@Base+0x990>
   40f00:	mov	r2, #179	; 0xb3
   40f04:	lsl	r5, r5, #1
   40f08:	mul	r3, r2, r5
   40f0c:	cmp	r1, r3, lsr #8
   40f10:	bhi	40f04 <cmetrohash64_2@@Base+0x980>
   40f14:	mov	r1, #4
   40f18:	mov	r0, r5
   40f1c:	bl	13fa4 <calloc@plt>
   40f20:	cmp	r0, #0
   40f24:	str	r0, [sp, #8]
   40f28:	beq	40fd8 <cmetrohash64_2@@Base+0xa54>
   40f2c:	ldr	r2, [r6, #12]
   40f30:	mov	r4, #0
   40f34:	cmp	r2, r4
   40f38:	str	r5, [sp, #20]
   40f3c:	str	r4, [sp, #12]
   40f40:	str	r4, [sp, #16]
   40f44:	beq	40fcc <cmetrohash64_2@@Base+0xa48>
   40f48:	sub	r5, r7, #4
   40f4c:	mov	r8, #3
   40f50:	add	r7, sp, #8
   40f54:	b	40f60 <cmetrohash64_2@@Base+0x9dc>
   40f58:	cmp	r4, r2
   40f5c:	bcs	40f94 <cmetrohash64_2@@Base+0xa10>
   40f60:	ldr	r3, [r5, #4]!
   40f64:	add	r4, r4, #1
   40f68:	cmp	r3, #0
   40f6c:	cmpne	r3, #2
   40f70:	beq	40f58 <cmetrohash64_2@@Base+0x9d4>
   40f74:	ldr	r2, [r3, #12]
   40f78:	ldr	r1, [r3, #8]
   40f7c:	mov	r0, r7
   40f80:	str	r8, [sp]
   40f84:	bl	40ca0 <cmetrohash64_2@@Base+0x71c>
   40f88:	ldr	r2, [r6, #12]
   40f8c:	cmp	r4, r2
   40f90:	bcc	40f60 <cmetrohash64_2@@Base+0x9dc>
   40f94:	ldr	r0, [r6]
   40f98:	cmp	r0, #0
   40f9c:	beq	40fa4 <cmetrohash64_2@@Base+0xa20>
   40fa0:	bl	13fd4 <free@plt>
   40fa4:	mov	ip, r7
   40fa8:	mov	lr, #0
   40fac:	ldm	ip!, {r0, r1, r2, r3}
   40fb0:	str	r0, [r6]
   40fb4:	str	r1, [r6, #4]
   40fb8:	str	r2, [r6, #8]
   40fbc:	str	r3, [r6, #12]
   40fc0:	mov	r0, lr
   40fc4:	add	sp, sp, #24
   40fc8:	pop	{r4, r5, r6, r7, r8, pc}
   40fcc:	mov	r0, r7
   40fd0:	add	r7, sp, #8
   40fd4:	b	40f98 <cmetrohash64_2@@Base+0xa14>
   40fd8:	mvn	lr, #0
   40fdc:	b	40fc0 <cmetrohash64_2@@Base+0xa3c>

00040fe0 <fb_name_table_clear@@Base>:
   40fe0:	push	{r4, lr}
   40fe4:	mov	r4, r0
   40fe8:	ldr	r0, [r0]
   40fec:	cmp	r0, #0
   40ff0:	beq	40ff8 <fb_name_table_clear@@Base+0x18>
   40ff4:	bl	13fd4 <free@plt>
   40ff8:	mov	r3, #0
   40ffc:	str	r3, [r4]
   41000:	str	r3, [r4, #4]
   41004:	str	r3, [r4, #8]
   41008:	str	r3, [r4, #12]
   4100c:	pop	{r4, pc}

00041010 <fb_name_table_destroy@@Base>:
   41010:	push	{r4, r5, r6, r7, r8, lr}
   41014:	subs	r7, r1, #0
   41018:	mov	r6, r0
   4101c:	beq	41070 <fb_name_table_destroy@@Base+0x60>
   41020:	ldr	r3, [r0, #12]
   41024:	ldr	r0, [r0]
   41028:	cmp	r3, #0
   4102c:	beq	41074 <fb_name_table_destroy@@Base+0x64>
   41030:	mov	r8, r2
   41034:	sub	r5, r0, #4
   41038:	mov	r4, #0
   4103c:	b	41048 <fb_name_table_destroy@@Base+0x38>
   41040:	cmp	r4, r3
   41044:	bcs	41070 <fb_name_table_destroy@@Base+0x60>
   41048:	ldr	r1, [r5, #4]!
   4104c:	add	r4, r4, #1
   41050:	cmp	r1, #0
   41054:	cmpne	r1, #2
   41058:	beq	41040 <fb_name_table_destroy@@Base+0x30>
   4105c:	mov	r0, r8
   41060:	blx	r7
   41064:	ldr	r3, [r6, #12]
   41068:	cmp	r4, r3
   4106c:	bcc	41048 <fb_name_table_destroy@@Base+0x38>
   41070:	ldr	r0, [r6]
   41074:	cmp	r0, #0
   41078:	beq	41080 <fb_name_table_destroy@@Base+0x70>
   4107c:	bl	13fd4 <free@plt>
   41080:	mov	r3, #0
   41084:	str	r3, [r6]
   41088:	str	r3, [r6, #4]
   4108c:	str	r3, [r6, #8]
   41090:	str	r3, [r6, #12]
   41094:	pop	{r4, r5, r6, r7, r8, pc}

00041098 <fb_name_table_init@@Base>:
   41098:	cmp	r1, #2
   4109c:	push	{r4, r5, r6, lr}
   410a0:	mov	r4, #4
   410a4:	mov	r5, r0
   410a8:	bls	410c0 <fb_name_table_init@@Base+0x28>
   410ac:	mov	r2, #179	; 0xb3
   410b0:	lsl	r4, r4, #1
   410b4:	mul	r3, r2, r4
   410b8:	cmp	r1, r3, lsr #8
   410bc:	bhi	410b0 <fb_name_table_init@@Base+0x18>
   410c0:	mov	r1, #4
   410c4:	mov	r0, r4
   410c8:	bl	13fa4 <calloc@plt>
   410cc:	cmp	r0, #0
   410d0:	str	r0, [r5]
   410d4:	movne	r0, #0
   410d8:	strne	r4, [r5, #12]
   410dc:	strne	r0, [r5, #4]
   410e0:	strne	r0, [r5, #8]
   410e4:	mvneq	r0, #0
   410e8:	pop	{r4, r5, r6, pc}

000410ec <fb_name_table_resize@@Base>:
   410ec:	b	40ed8 <cmetrohash64_2@@Base+0x954>

000410f0 <fb_name_table_insert@@Base>:
   410f0:	b	40ca0 <cmetrohash64_2@@Base+0x71c>

000410f4 <fb_name_table_insert_item@@Base>:
   410f4:	push	{lr}		; (str lr, [sp, #-4]!)
   410f8:	sub	sp, sp, #12
   410fc:	mov	r3, r1
   41100:	str	r2, [sp]
   41104:	ldr	r2, [r1, #12]
   41108:	ldr	r1, [r1, #8]
   4110c:	bl	40ca0 <cmetrohash64_2@@Base+0x71c>
   41110:	add	sp, sp, #12
   41114:	pop	{pc}		; (ldr pc, [sp], #4)

00041118 <fb_name_table_find@@Base>:
   41118:	push	{r4, r5, r6, r7, r8, r9, lr}
   4111c:	sub	sp, sp, #20
   41120:	ldr	r8, [r0]
   41124:	cmp	r8, #0
   41128:	beq	411bc <fb_name_table_find@@Base+0xa4>
   4112c:	mov	r9, r1
   41130:	ldr	r1, [pc, #148]	; 411cc <fb_name_table_find@@Base+0xb4>
   41134:	add	r3, sp, #8
   41138:	ldr	r7, [r0, #12]
   4113c:	stm	sp, {r1, r3}
   41140:	mov	r0, r9
   41144:	mov	r3, #0
   41148:	mov	r6, r2
   4114c:	bl	3fe60 <cmetrohash64_1@@Base>
   41150:	ldr	r5, [sp, #8]
   41154:	sub	r7, r7, #1
   41158:	and	r3, r7, r5
   4115c:	ldr	r4, [r8, r3, lsl #2]
   41160:	cmp	r4, #0
   41164:	beq	411bc <fb_name_table_find@@Base+0xa4>
   41168:	add	r5, r5, #1
   4116c:	b	41184 <fb_name_table_find@@Base+0x6c>
   41170:	and	r3, r7, r5
   41174:	add	r5, r5, #1
   41178:	ldr	r4, [r8, r3, lsl #2]
   4117c:	cmp	r4, #0
   41180:	beq	411bc <fb_name_table_find@@Base+0xa4>
   41184:	cmp	r4, #2
   41188:	beq	41170 <fb_name_table_find@@Base+0x58>
   4118c:	ldr	r3, [r4, #12]
   41190:	cmp	r6, r3
   41194:	bne	41170 <fb_name_table_find@@Base+0x58>
   41198:	mov	r2, r6
   4119c:	ldr	r1, [r4, #8]
   411a0:	mov	r0, r9
   411a4:	bl	13ff8 <memcmp@plt>
   411a8:	cmp	r0, #0
   411ac:	bne	41170 <fb_name_table_find@@Base+0x58>
   411b0:	mov	r0, r4
   411b4:	add	sp, sp, #20
   411b8:	pop	{r4, r5, r6, r7, r8, r9, pc}
   411bc:	mov	r4, #0
   411c0:	mov	r0, r4
   411c4:	add	sp, sp, #20
   411c8:	pop	{r4, r5, r6, r7, r8, r9, pc}
   411cc:	svccs	0x00693b52

000411d0 <fb_name_table_find_item@@Base>:
   411d0:	push	{r4, r5, r6, r7, r8, r9, lr}
   411d4:	sub	sp, sp, #20
   411d8:	ldr	r8, [r0]
   411dc:	ldr	r9, [r1, #8]
   411e0:	cmp	r8, #0
   411e4:	ldr	r7, [r1, #12]
   411e8:	beq	41278 <fb_name_table_find_item@@Base+0xa8>
   411ec:	ldr	r2, [pc, #148]	; 41288 <fb_name_table_find_item@@Base+0xb8>
   411f0:	add	r3, sp, #8
   411f4:	ldr	r6, [r0, #12]
   411f8:	stm	sp, {r2, r3}
   411fc:	mov	r0, r9
   41200:	mov	r3, #0
   41204:	mov	r2, r7
   41208:	bl	3fe60 <cmetrohash64_1@@Base>
   4120c:	ldr	r5, [sp, #8]
   41210:	sub	r6, r6, #1
   41214:	and	r3, r6, r5
   41218:	ldr	r4, [r8, r3, lsl #2]
   4121c:	cmp	r4, #0
   41220:	beq	41278 <fb_name_table_find_item@@Base+0xa8>
   41224:	add	r5, r5, #1
   41228:	b	41240 <fb_name_table_find_item@@Base+0x70>
   4122c:	and	r3, r6, r5
   41230:	add	r5, r5, #1
   41234:	ldr	r4, [r8, r3, lsl #2]
   41238:	cmp	r4, #0
   4123c:	beq	41278 <fb_name_table_find_item@@Base+0xa8>
   41240:	cmp	r4, #2
   41244:	beq	4122c <fb_name_table_find_item@@Base+0x5c>
   41248:	ldr	r3, [r4, #12]
   4124c:	cmp	r7, r3
   41250:	bne	4122c <fb_name_table_find_item@@Base+0x5c>
   41254:	mov	r2, r7
   41258:	ldr	r1, [r4, #8]
   4125c:	mov	r0, r9
   41260:	bl	13ff8 <memcmp@plt>
   41264:	cmp	r0, #0
   41268:	bne	4122c <fb_name_table_find_item@@Base+0x5c>
   4126c:	mov	r0, r4
   41270:	add	sp, sp, #20
   41274:	pop	{r4, r5, r6, r7, r8, r9, pc}
   41278:	mov	r4, #0
   4127c:	mov	r0, r4
   41280:	add	sp, sp, #20
   41284:	pop	{r4, r5, r6, r7, r8, r9, pc}
   41288:	svccs	0x00693b52

0004128c <fb_name_table_remove@@Base>:
   4128c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   41290:	sub	sp, sp, #20
   41294:	ldr	r5, [r0]
   41298:	cmp	r5, #0
   4129c:	beq	41350 <fb_name_table_remove@@Base+0xc4>
   412a0:	mov	r8, r1
   412a4:	ldr	r1, [pc, #180]	; 41360 <fb_name_table_remove@@Base+0xd4>
   412a8:	add	r3, sp, #8
   412ac:	ldr	r7, [r0, #12]
   412b0:	mov	r9, r0
   412b4:	stm	sp, {r1, r3}
   412b8:	mov	r0, r8
   412bc:	mov	r3, #0
   412c0:	mov	r6, r2
   412c4:	bl	3fe60 <cmetrohash64_1@@Base>
   412c8:	ldr	sl, [sp, #8]
   412cc:	sub	r7, r7, #1
   412d0:	and	r3, r7, sl
   412d4:	ldr	fp, [r5, r3, lsl #2]
   412d8:	add	r4, r5, r3, lsl #2
   412dc:	cmp	fp, #0
   412e0:	beq	41350 <fb_name_table_remove@@Base+0xc4>
   412e4:	add	sl, sl, #1
   412e8:	b	41304 <fb_name_table_remove@@Base+0x78>
   412ec:	and	r3, r7, sl
   412f0:	add	sl, sl, #1
   412f4:	ldr	fp, [r5, r3, lsl #2]
   412f8:	add	r4, r5, r3, lsl #2
   412fc:	cmp	fp, #0
   41300:	beq	41350 <fb_name_table_remove@@Base+0xc4>
   41304:	cmp	fp, #2
   41308:	beq	412ec <fb_name_table_remove@@Base+0x60>
   4130c:	ldr	r3, [fp, #12]
   41310:	cmp	r6, r3
   41314:	bne	412ec <fb_name_table_remove@@Base+0x60>
   41318:	mov	r2, r6
   4131c:	ldr	r1, [fp, #8]
   41320:	mov	r0, r8
   41324:	bl	13ff8 <memcmp@plt>
   41328:	cmp	r0, #0
   4132c:	bne	412ec <fb_name_table_remove@@Base+0x60>
   41330:	ldr	r3, [r9, #8]
   41334:	mov	r2, #2
   41338:	sub	r3, r3, #1
   4133c:	str	r2, [r4]
   41340:	mov	r0, fp
   41344:	str	r3, [r9, #8]
   41348:	add	sp, sp, #20
   4134c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   41350:	mov	fp, #0
   41354:	mov	r0, fp
   41358:	add	sp, sp, #20
   4135c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   41360:	svccs	0x00693b52

00041364 <fb_name_table_remove_item@@Base>:
   41364:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   41368:	sub	sp, sp, #20
   4136c:	ldr	r5, [r0]
   41370:	ldr	r9, [r1, #8]
   41374:	cmp	r5, #0
   41378:	ldr	r7, [r1, #12]
   4137c:	beq	4142c <fb_name_table_remove_item@@Base+0xc8>
   41380:	ldr	r2, [pc, #180]	; 4143c <fb_name_table_remove_item@@Base+0xd8>
   41384:	add	r3, sp, #8
   41388:	ldr	r6, [r0, #12]
   4138c:	mov	r8, r0
   41390:	stm	sp, {r2, r3}
   41394:	mov	r0, r9
   41398:	mov	r3, #0
   4139c:	mov	r2, r7
   413a0:	bl	3fe60 <cmetrohash64_1@@Base>
   413a4:	ldr	sl, [sp, #8]
   413a8:	sub	r6, r6, #1
   413ac:	and	r3, r6, sl
   413b0:	ldr	fp, [r5, r3, lsl #2]
   413b4:	add	r4, r5, r3, lsl #2
   413b8:	cmp	fp, #0
   413bc:	beq	4142c <fb_name_table_remove_item@@Base+0xc8>
   413c0:	add	sl, sl, #1
   413c4:	b	413e0 <fb_name_table_remove_item@@Base+0x7c>
   413c8:	and	r3, r6, sl
   413cc:	add	sl, sl, #1
   413d0:	ldr	fp, [r5, r3, lsl #2]
   413d4:	add	r4, r5, r3, lsl #2
   413d8:	cmp	fp, #0
   413dc:	beq	4142c <fb_name_table_remove_item@@Base+0xc8>
   413e0:	cmp	fp, #2
   413e4:	beq	413c8 <fb_name_table_remove_item@@Base+0x64>
   413e8:	ldr	r3, [fp, #12]
   413ec:	cmp	r7, r3
   413f0:	bne	413c8 <fb_name_table_remove_item@@Base+0x64>
   413f4:	mov	r2, r7
   413f8:	ldr	r1, [fp, #8]
   413fc:	mov	r0, r9
   41400:	bl	13ff8 <memcmp@plt>
   41404:	cmp	r0, #0
   41408:	bne	413c8 <fb_name_table_remove_item@@Base+0x64>
   4140c:	ldr	r3, [r8, #8]
   41410:	mov	r2, #2
   41414:	sub	r3, r3, #1
   41418:	str	r2, [r4]
   4141c:	mov	r0, fp
   41420:	str	r3, [r8, #8]
   41424:	add	sp, sp, #20
   41428:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   4142c:	mov	fp, #0
   41430:	mov	r0, fp
   41434:	add	sp, sp, #20
   41438:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   4143c:	svccs	0x00693b52

00041440 <fb_name_table_visit@@Base>:
   41440:	ldr	r3, [r0, #12]
   41444:	push	{r4, r5, r6, r7, r8, lr}
   41448:	cmp	r3, #0
   4144c:	ldr	r5, [r0]
   41450:	popeq	{r4, r5, r6, r7, r8, pc}
   41454:	mov	r7, r2
   41458:	mov	r6, r1
   4145c:	mov	r8, r0
   41460:	sub	r5, r5, #4
   41464:	mov	r4, #0
   41468:	b	41474 <fb_name_table_visit@@Base+0x34>
   4146c:	cmp	r4, r3
   41470:	bcs	4149c <fb_name_table_visit@@Base+0x5c>
   41474:	ldr	r1, [r5, #4]!
   41478:	add	r4, r4, #1
   4147c:	cmp	r1, #0
   41480:	cmpne	r1, #2
   41484:	beq	4146c <fb_name_table_visit@@Base+0x2c>
   41488:	mov	r0, r7
   4148c:	blx	r6
   41490:	ldr	r3, [r8, #12]
   41494:	cmp	r4, r3
   41498:	bcc	41474 <fb_name_table_visit@@Base+0x34>
   4149c:	pop	{r4, r5, r6, r7, r8, pc}
   414a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   414a4:	subs	fp, r2, #0
   414a8:	sub	sp, sp, #12
   414ac:	beq	416a4 <fb_name_table_visit@@Base+0x264>
   414b0:	cmp	fp, #2
   414b4:	beq	416cc <fb_name_table_visit@@Base+0x28c>
   414b8:	cmp	fp, #1
   414bc:	beq	416b8 <fb_name_table_visit@@Base+0x278>
   414c0:	ldr	lr, [r0, #12]
   414c4:	mov	r6, r3
   414c8:	mov	r3, #179	; 0xb3
   414cc:	mov	r8, r1
   414d0:	mul	r3, r3, lr
   414d4:	ldr	r1, [r0, #8]
   414d8:	mov	sl, r0
   414dc:	cmp	r1, r3, lsr #8
   414e0:	bcs	41628 <fb_name_table_visit@@Base+0x1e8>
   414e4:	ldrh	ip, [r8, #8]
   414e8:	sub	lr, lr, #1
   414ec:	ldr	r1, [sl]
   414f0:	cmp	ip, #5
   414f4:	beq	4164c <fb_name_table_visit@@Base+0x20c>
   414f8:	cmp	ip, #6
   414fc:	beq	41640 <fb_name_table_visit@@Base+0x200>
   41500:	cmp	ip, #4
   41504:	movne	r3, #0
   41508:	movne	r2, r3
   4150c:	beq	41608 <fb_name_table_visit@@Base+0x1c8>
   41510:	sub	r0, r6, #2
   41514:	cmp	r0, #1
   41518:	bls	41658 <fb_name_table_visit@@Base+0x218>
   4151c:	ldr	r0, [r1, r3]
   41520:	add	r3, r1, r3
   41524:	cmp	r0, #0
   41528:	moveq	r9, r3
   4152c:	beq	415ec <fb_name_table_visit@@Base+0x1ac>
   41530:	add	r2, r2, #1
   41534:	mov	r9, #0
   41538:	str	sl, [sp, #4]
   4153c:	mov	r7, fp
   41540:	b	4155c <fb_name_table_visit@@Base+0x11c>
   41544:	and	r3, lr, r2
   41548:	add	r2, r2, #1
   4154c:	ldr	r0, [r1, r3, lsl #2]
   41550:	add	r3, r1, r3, lsl #2
   41554:	cmp	r0, #0
   41558:	beq	415dc <fb_name_table_visit@@Base+0x19c>
   4155c:	cmp	r0, #2
   41560:	beq	415b8 <fb_name_table_visit@@Base+0x178>
   41564:	ldrh	r4, [r0, #8]
   41568:	cmp	r4, ip
   4156c:	bne	41544 <fb_name_table_visit@@Base+0x104>
   41570:	cmp	ip, #5
   41574:	beq	41588 <fb_name_table_visit@@Base+0x148>
   41578:	cmp	ip, #6
   4157c:	beq	415c4 <fb_name_table_visit@@Base+0x184>
   41580:	cmp	ip, #4
   41584:	bne	41544 <fb_name_table_visit@@Base+0x104>
   41588:	ldrd	r4, [r0]
   4158c:	ldrd	sl, [r8]
   41590:	cmp	fp, r5
   41594:	cmpeq	sl, r4
   41598:	moveq	r4, #1
   4159c:	movne	r4, #0
   415a0:	cmp	r4, #0
   415a4:	beq	41544 <fb_name_table_visit@@Base+0x104>
   415a8:	cmp	r6, #0
   415ac:	streq	r7, [r3]
   415b0:	add	sp, sp, #12
   415b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   415b8:	cmp	r9, #0
   415bc:	moveq	r9, r3
   415c0:	b	41544 <fb_name_table_visit@@Base+0x104>
   415c4:	ldrb	r4, [r8]
   415c8:	ldrb	r5, [r0]
   415cc:	sub	r4, r4, r5
   415d0:	clz	r4, r4
   415d4:	lsr	r4, r4, #5
   415d8:	b	415a0 <fb_name_table_visit@@Base+0x160>
   415dc:	cmp	r9, #0
   415e0:	ldr	sl, [sp, #4]
   415e4:	mov	fp, r7
   415e8:	moveq	r9, r3
   415ec:	ldr	r3, [sl, #8]
   415f0:	mov	r0, #0
   415f4:	add	r3, r3, #1
   415f8:	str	r3, [sl, #8]
   415fc:	str	fp, [r9]
   41600:	add	sp, sp, #12
   41604:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   41608:	ldr	r0, [r8]
   4160c:	ldr	r3, [pc, #232]	; 416fc <fb_name_table_visit@@Base+0x2bc>
   41610:	ldr	r2, [pc, #232]	; 41700 <fb_name_table_visit@@Base+0x2c0>
   41614:	eor	r3, r3, r0
   41618:	mul	r2, r2, r3
   4161c:	and	r3, lr, r2
   41620:	lsl	r3, r3, #2
   41624:	b	41510 <fb_name_table_visit@@Base+0xd0>
   41628:	lsl	r1, r1, #1
   4162c:	bl	4172c <fb_name_table_visit@@Base+0x2ec>
   41630:	cmp	r0, #0
   41634:	bne	416e0 <fb_name_table_visit@@Base+0x2a0>
   41638:	ldr	lr, [sl, #12]
   4163c:	b	414e4 <fb_name_table_visit@@Base+0xa4>
   41640:	ldrb	r0, [r8]
   41644:	ldr	r3, [pc, #184]	; 41704 <fb_name_table_visit@@Base+0x2c4>
   41648:	b	41610 <fb_name_table_visit@@Base+0x1d0>
   4164c:	ldr	r0, [r8]
   41650:	ldr	r3, [pc, #176]	; 41708 <fb_name_table_visit@@Base+0x2c8>
   41654:	b	41610 <fb_name_table_visit@@Base+0x1d0>
   41658:	ldr	ip, [r1, r3]
   4165c:	ldr	r0, [sl, #8]
   41660:	cmp	ip, #2
   41664:	cmpne	ip, #0
   41668:	add	r0, r0, #1
   4166c:	str	r0, [sl, #8]
   41670:	add	r3, r1, r3
   41674:	beq	41698 <fb_name_table_visit@@Base+0x258>
   41678:	add	r2, r2, #1
   4167c:	and	r3, lr, r2
   41680:	add	r2, r2, #1
   41684:	ldr	r0, [r1, r3, lsl #2]
   41688:	add	r3, r1, r3, lsl #2
   4168c:	cmp	r0, #0
   41690:	cmpne	r0, #2
   41694:	bne	4167c <fb_name_table_visit@@Base+0x23c>
   41698:	str	fp, [r3]
   4169c:	mov	r0, #0
   416a0:	b	41600 <fb_name_table_visit@@Base+0x1c0>
   416a4:	ldr	r3, [pc, #96]	; 4170c <fb_name_table_visit@@Base+0x2cc>
   416a8:	mov	r2, #114	; 0x72
   416ac:	ldr	r1, [pc, #92]	; 41710 <fb_name_table_visit@@Base+0x2d0>
   416b0:	ldr	r0, [pc, #92]	; 41714 <fb_name_table_visit@@Base+0x2d4>
   416b4:	bl	14148 <__assert_fail@plt>
   416b8:	ldr	r3, [pc, #76]	; 4170c <fb_name_table_visit@@Base+0x2cc>
   416bc:	mov	r2, #116	; 0x74
   416c0:	ldr	r1, [pc, #72]	; 41710 <fb_name_table_visit@@Base+0x2d0>
   416c4:	ldr	r0, [pc, #76]	; 41718 <fb_name_table_visit@@Base+0x2d8>
   416c8:	bl	14148 <__assert_fail@plt>
   416cc:	ldr	r3, [pc, #56]	; 4170c <fb_name_table_visit@@Base+0x2cc>
   416d0:	mov	r2, #115	; 0x73
   416d4:	ldr	r1, [pc, #52]	; 41710 <fb_name_table_visit@@Base+0x2d0>
   416d8:	ldr	r0, [pc, #60]	; 4171c <fb_name_table_visit@@Base+0x2dc>
   416dc:	bl	14148 <__assert_fail@plt>
   416e0:	ldr	r3, [pc, #56]	; 41720 <fb_name_table_visit@@Base+0x2e0>
   416e4:	ldr	r2, [pc, #56]	; 41724 <fb_name_table_visit@@Base+0x2e4>
   416e8:	ldr	r1, [pc, #56]	; 41728 <fb_name_table_visit@@Base+0x2e8>
   416ec:	ldr	r0, [r3]
   416f0:	bl	14094 <fprintf@plt>
   416f4:	mov	r0, #1
   416f8:	bl	14070 <exit@plt>
   416fc:	svccs	0x00693b56
   41700:			; <UNDEFINED> instruction: 0x9e3779b1
   41704:	svccs	0x00693b54
   41708:	svccs	0x00693b57
   4170c:	andeq	lr, r5, r0, lsl #8
   41710:	ldrdeq	sl, [r5], -ip
   41714:	andeq	sl, r5, ip, lsr #28
   41718:	andeq	sl, r5, ip, asr lr
   4171c:	andeq	sl, r5, r4, asr #28
   41720:	andeq	pc, r6, r8, lsr #1
   41724:	andeq	sl, r5, r4, ror lr
   41728:	andeq	sl, r5, r8, lsr #29
   4172c:	ldr	r3, [r0, #8]
   41730:	push	{r4, r5, r6, r7, r8, lr}
   41734:	cmp	r1, r3
   41738:	movcc	r1, r3
   4173c:	cmp	r1, #2
   41740:	sub	sp, sp, #16
   41744:	mov	r7, r0
   41748:	ldr	r6, [r0]
   4174c:	mov	r5, #4
   41750:	bls	41768 <fb_name_table_visit@@Base+0x328>
   41754:	mov	r2, #179	; 0xb3
   41758:	lsl	r5, r5, #1
   4175c:	mul	r3, r2, r5
   41760:	cmp	r1, r3, lsr #8
   41764:	bhi	41758 <fb_name_table_visit@@Base+0x318>
   41768:	mov	r1, #4
   4176c:	mov	r0, r5
   41770:	bl	13fa4 <calloc@plt>
   41774:	cmp	r0, #0
   41778:	str	r0, [sp]
   4177c:	beq	41828 <fb_name_table_visit@@Base+0x3e8>
   41780:	ldr	r3, [r7, #12]
   41784:	mov	r4, #0
   41788:	cmp	r3, r4
   4178c:	str	r5, [sp, #12]
   41790:	str	r4, [sp, #4]
   41794:	str	r4, [sp, #8]
   41798:	beq	4181c <fb_name_table_visit@@Base+0x3dc>
   4179c:	sub	r5, r6, #4
   417a0:	mov	r8, sp
   417a4:	mov	r6, #3
   417a8:	b	417b4 <fb_name_table_visit@@Base+0x374>
   417ac:	cmp	r4, r3
   417b0:	bcs	417e4 <fb_name_table_visit@@Base+0x3a4>
   417b4:	ldr	r2, [r5, #4]!
   417b8:	add	r4, r4, #1
   417bc:	cmp	r2, #0
   417c0:	cmpne	r2, #2
   417c4:	beq	417ac <fb_name_table_visit@@Base+0x36c>
   417c8:	mov	r3, r6
   417cc:	mov	r1, r2
   417d0:	mov	r0, r8
   417d4:	bl	414a0 <fb_name_table_visit@@Base+0x60>
   417d8:	ldr	r3, [r7, #12]
   417dc:	cmp	r4, r3
   417e0:	bcc	417b4 <fb_name_table_visit@@Base+0x374>
   417e4:	ldr	r0, [r7]
   417e8:	cmp	r0, #0
   417ec:	beq	417f4 <fb_name_table_visit@@Base+0x3b4>
   417f0:	bl	13fd4 <free@plt>
   417f4:	mov	ip, r8
   417f8:	mov	lr, #0
   417fc:	ldm	ip!, {r0, r1, r2, r3}
   41800:	str	r0, [r7]
   41804:	str	r1, [r7, #4]
   41808:	str	r2, [r7, #8]
   4180c:	str	r3, [r7, #12]
   41810:	mov	r0, lr
   41814:	add	sp, sp, #16
   41818:	pop	{r4, r5, r6, r7, r8, pc}
   4181c:	mov	r0, r6
   41820:	mov	r8, sp
   41824:	b	417e8 <fb_name_table_visit@@Base+0x3a8>
   41828:	mvn	lr, #0
   4182c:	b	41810 <fb_name_table_visit@@Base+0x3d0>

00041830 <fb_value_set_clear@@Base>:
   41830:	push	{r4, lr}
   41834:	mov	r4, r0
   41838:	ldr	r0, [r0]
   4183c:	cmp	r0, #0
   41840:	beq	41848 <fb_value_set_clear@@Base+0x18>
   41844:	bl	13fd4 <free@plt>
   41848:	mov	r3, #0
   4184c:	str	r3, [r4]
   41850:	str	r3, [r4, #4]
   41854:	str	r3, [r4, #8]
   41858:	str	r3, [r4, #12]
   4185c:	pop	{r4, pc}

00041860 <fb_value_set_destroy@@Base>:
   41860:	push	{r4, r5, r6, r7, r8, lr}
   41864:	subs	r7, r1, #0
   41868:	mov	r6, r0
   4186c:	beq	418c0 <fb_value_set_destroy@@Base+0x60>
   41870:	ldr	r3, [r0, #12]
   41874:	ldr	r0, [r0]
   41878:	cmp	r3, #0
   4187c:	beq	418c4 <fb_value_set_destroy@@Base+0x64>
   41880:	mov	r8, r2
   41884:	sub	r5, r0, #4
   41888:	mov	r4, #0
   4188c:	b	41898 <fb_value_set_destroy@@Base+0x38>
   41890:	cmp	r4, r3
   41894:	bcs	418c0 <fb_value_set_destroy@@Base+0x60>
   41898:	ldr	r1, [r5, #4]!
   4189c:	add	r4, r4, #1
   418a0:	cmp	r1, #0
   418a4:	cmpne	r1, #2
   418a8:	beq	41890 <fb_value_set_destroy@@Base+0x30>
   418ac:	mov	r0, r8
   418b0:	blx	r7
   418b4:	ldr	r3, [r6, #12]
   418b8:	cmp	r4, r3
   418bc:	bcc	41898 <fb_value_set_destroy@@Base+0x38>
   418c0:	ldr	r0, [r6]
   418c4:	cmp	r0, #0
   418c8:	beq	418d0 <fb_value_set_destroy@@Base+0x70>
   418cc:	bl	13fd4 <free@plt>
   418d0:	mov	r3, #0
   418d4:	str	r3, [r6]
   418d8:	str	r3, [r6, #4]
   418dc:	str	r3, [r6, #8]
   418e0:	str	r3, [r6, #12]
   418e4:	pop	{r4, r5, r6, r7, r8, pc}

000418e8 <fb_value_set_init@@Base>:
   418e8:	cmp	r1, #2
   418ec:	push	{r4, r5, r6, lr}
   418f0:	mov	r4, #4
   418f4:	mov	r5, r0
   418f8:	bls	41910 <fb_value_set_init@@Base+0x28>
   418fc:	mov	r2, #179	; 0xb3
   41900:	lsl	r4, r4, #1
   41904:	mul	r3, r2, r4
   41908:	cmp	r1, r3, lsr #8
   4190c:	bhi	41900 <fb_value_set_init@@Base+0x18>
   41910:	mov	r1, #4
   41914:	mov	r0, r4
   41918:	bl	13fa4 <calloc@plt>
   4191c:	cmp	r0, #0
   41920:	str	r0, [r5]
   41924:	movne	r0, #0
   41928:	strne	r4, [r5, #12]
   4192c:	strne	r0, [r5, #4]
   41930:	strne	r0, [r5, #8]
   41934:	mvneq	r0, #0
   41938:	pop	{r4, r5, r6, pc}

0004193c <fb_value_set_resize@@Base>:
   4193c:	b	4172c <fb_name_table_visit@@Base+0x2ec>

00041940 <fb_value_set_insert@@Base>:
   41940:	mov	r2, r3
   41944:	ldr	r3, [sp]
   41948:	b	414a0 <fb_name_table_visit@@Base+0x60>

0004194c <fb_value_set_insert_item@@Base>:
   4194c:	mov	r3, r2
   41950:	mov	r2, r1
   41954:	b	414a0 <fb_name_table_visit@@Base+0x60>

00041958 <fb_value_set_find@@Base>:
   41958:	push	{r4, r5, r6, r7, lr}
   4195c:	ldr	r7, [r0]
   41960:	cmp	r7, #0
   41964:	beq	41a68 <fb_value_set_find@@Base+0x110>
   41968:	ldrh	lr, [r1, #8]
   4196c:	ldr	r6, [r0, #12]
   41970:	cmp	lr, #5
   41974:	sub	r6, r6, #1
   41978:	beq	41a5c <fb_value_set_find@@Base+0x104>
   4197c:	cmp	lr, #6
   41980:	beq	41a0c <fb_value_set_find@@Base+0xb4>
   41984:	cmp	lr, #4
   41988:	movne	r3, #0
   4198c:	movne	ip, r3
   41990:	beq	41a50 <fb_value_set_find@@Base+0xf8>
   41994:	ldr	r0, [r7, r3]
   41998:	cmp	r0, #0
   4199c:	popeq	{r4, r5, r6, r7, pc}
   419a0:	add	ip, ip, #1
   419a4:	b	419bc <fb_value_set_find@@Base+0x64>
   419a8:	and	r3, r6, ip
   419ac:	add	ip, ip, #1
   419b0:	ldr	r0, [r7, r3, lsl #2]
   419b4:	cmp	r0, #0
   419b8:	beq	41a4c <fb_value_set_find@@Base+0xf4>
   419bc:	cmp	r0, #2
   419c0:	beq	419a8 <fb_value_set_find@@Base+0x50>
   419c4:	ldrh	r3, [r0, #8]
   419c8:	cmp	r3, lr
   419cc:	bne	419a8 <fb_value_set_find@@Base+0x50>
   419d0:	cmp	lr, #5
   419d4:	beq	419e8 <fb_value_set_find@@Base+0x90>
   419d8:	cmp	lr, #6
   419dc:	beq	41a2c <fb_value_set_find@@Base+0xd4>
   419e0:	cmp	lr, #4
   419e4:	bne	419a8 <fb_value_set_find@@Base+0x50>
   419e8:	ldrd	r2, [r0]
   419ec:	ldrd	r4, [r1]
   419f0:	cmp	r5, r3
   419f4:	cmpeq	r4, r2
   419f8:	moveq	r3, #1
   419fc:	movne	r3, #0
   41a00:	cmp	r3, #0
   41a04:	beq	419a8 <fb_value_set_find@@Base+0x50>
   41a08:	pop	{r4, r5, r6, r7, pc}
   41a0c:	ldrb	r2, [r1]
   41a10:	ldr	r3, [pc, #88]	; 41a70 <fb_value_set_find@@Base+0x118>
   41a14:	ldr	ip, [pc, #88]	; 41a74 <fb_value_set_find@@Base+0x11c>
   41a18:	eor	r3, r3, r2
   41a1c:	mul	ip, ip, r3
   41a20:	and	r3, r6, ip
   41a24:	lsl	r3, r3, #2
   41a28:	b	41994 <fb_value_set_find@@Base+0x3c>
   41a2c:	ldrb	r3, [r1]
   41a30:	ldrb	r2, [r0]
   41a34:	sub	r3, r3, r2
   41a38:	clz	r3, r3
   41a3c:	lsr	r3, r3, #5
   41a40:	cmp	r3, #0
   41a44:	beq	419a8 <fb_value_set_find@@Base+0x50>
   41a48:	pop	{r4, r5, r6, r7, pc}
   41a4c:	pop	{r4, r5, r6, r7, pc}
   41a50:	ldr	r2, [r1]
   41a54:	ldr	r3, [pc, #28]	; 41a78 <fb_value_set_find@@Base+0x120>
   41a58:	b	41a14 <fb_value_set_find@@Base+0xbc>
   41a5c:	ldr	r2, [r1]
   41a60:	ldr	r3, [pc, #20]	; 41a7c <fb_value_set_find@@Base+0x124>
   41a64:	b	41a14 <fb_value_set_find@@Base+0xbc>
   41a68:	mov	r0, r7
   41a6c:	pop	{r4, r5, r6, r7, pc}
   41a70:	svccs	0x00693b54
   41a74:			; <UNDEFINED> instruction: 0x9e3779b1
   41a78:	svccs	0x00693b56
   41a7c:	svccs	0x00693b57

00041a80 <fb_value_set_find_item@@Base>:
   41a80:	push	{r4, r5, r6, r7, lr}
   41a84:	ldr	r7, [r0]
   41a88:	cmp	r7, #0
   41a8c:	beq	41b90 <fb_value_set_find_item@@Base+0x110>
   41a90:	ldrh	lr, [r1, #8]
   41a94:	ldr	r6, [r0, #12]
   41a98:	cmp	lr, #5
   41a9c:	sub	r6, r6, #1
   41aa0:	beq	41b84 <fb_value_set_find_item@@Base+0x104>
   41aa4:	cmp	lr, #6
   41aa8:	beq	41b34 <fb_value_set_find_item@@Base+0xb4>
   41aac:	cmp	lr, #4
   41ab0:	movne	r3, #0
   41ab4:	movne	ip, r3
   41ab8:	beq	41b78 <fb_value_set_find_item@@Base+0xf8>
   41abc:	ldr	r0, [r7, r3]
   41ac0:	cmp	r0, #0
   41ac4:	popeq	{r4, r5, r6, r7, pc}
   41ac8:	add	ip, ip, #1
   41acc:	b	41ae4 <fb_value_set_find_item@@Base+0x64>
   41ad0:	and	r3, r6, ip
   41ad4:	add	ip, ip, #1
   41ad8:	ldr	r0, [r7, r3, lsl #2]
   41adc:	cmp	r0, #0
   41ae0:	beq	41b74 <fb_value_set_find_item@@Base+0xf4>
   41ae4:	cmp	r0, #2
   41ae8:	beq	41ad0 <fb_value_set_find_item@@Base+0x50>
   41aec:	ldrh	r3, [r0, #8]
   41af0:	cmp	r3, lr
   41af4:	bne	41ad0 <fb_value_set_find_item@@Base+0x50>
   41af8:	cmp	lr, #5
   41afc:	beq	41b10 <fb_value_set_find_item@@Base+0x90>
   41b00:	cmp	lr, #6
   41b04:	beq	41b54 <fb_value_set_find_item@@Base+0xd4>
   41b08:	cmp	lr, #4
   41b0c:	bne	41ad0 <fb_value_set_find_item@@Base+0x50>
   41b10:	ldrd	r2, [r0]
   41b14:	ldrd	r4, [r1]
   41b18:	cmp	r5, r3
   41b1c:	cmpeq	r4, r2
   41b20:	moveq	r3, #1
   41b24:	movne	r3, #0
   41b28:	cmp	r3, #0
   41b2c:	beq	41ad0 <fb_value_set_find_item@@Base+0x50>
   41b30:	pop	{r4, r5, r6, r7, pc}
   41b34:	ldrb	r2, [r1]
   41b38:	ldr	r3, [pc, #88]	; 41b98 <fb_value_set_find_item@@Base+0x118>
   41b3c:	ldr	ip, [pc, #88]	; 41b9c <fb_value_set_find_item@@Base+0x11c>
   41b40:	eor	r3, r3, r2
   41b44:	mul	ip, ip, r3
   41b48:	and	r3, r6, ip
   41b4c:	lsl	r3, r3, #2
   41b50:	b	41abc <fb_value_set_find_item@@Base+0x3c>
   41b54:	ldrb	r3, [r1]
   41b58:	ldrb	r2, [r0]
   41b5c:	sub	r3, r3, r2
   41b60:	clz	r3, r3
   41b64:	lsr	r3, r3, #5
   41b68:	cmp	r3, #0
   41b6c:	beq	41ad0 <fb_value_set_find_item@@Base+0x50>
   41b70:	pop	{r4, r5, r6, r7, pc}
   41b74:	pop	{r4, r5, r6, r7, pc}
   41b78:	ldr	r2, [r1]
   41b7c:	ldr	r3, [pc, #28]	; 41ba0 <fb_value_set_find_item@@Base+0x120>
   41b80:	b	41b3c <fb_value_set_find_item@@Base+0xbc>
   41b84:	ldr	r2, [r1]
   41b88:	ldr	r3, [pc, #20]	; 41ba4 <fb_value_set_find_item@@Base+0x124>
   41b8c:	b	41b3c <fb_value_set_find_item@@Base+0xbc>
   41b90:	mov	r0, r7
   41b94:	pop	{r4, r5, r6, r7, pc}
   41b98:	svccs	0x00693b54
   41b9c:			; <UNDEFINED> instruction: 0x9e3779b1
   41ba0:	svccs	0x00693b56
   41ba4:	svccs	0x00693b57

00041ba8 <fb_value_set_remove@@Base>:
   41ba8:	ldr	ip, [r0]
   41bac:	cmp	ip, #0
   41bb0:	beq	41cd0 <fb_value_set_remove@@Base+0x128>
   41bb4:	push	{r4, r5, r6, r7, r8, r9, lr}
   41bb8:	mov	r9, r0
   41bbc:	ldrh	lr, [r1, #8]
   41bc0:	ldr	r8, [r0, #12]
   41bc4:	cmp	lr, #5
   41bc8:	sub	r8, r8, #1
   41bcc:	beq	41cc4 <fb_value_set_remove@@Base+0x11c>
   41bd0:	cmp	lr, #6
   41bd4:	beq	41c7c <fb_value_set_remove@@Base+0xd4>
   41bd8:	cmp	lr, #4
   41bdc:	movne	r3, #0
   41be0:	movne	r2, r3
   41be4:	beq	41cb8 <fb_value_set_remove@@Base+0x110>
   41be8:	ldr	r0, [ip, r3]
   41bec:	add	r3, ip, r3
   41bf0:	cmp	r0, #0
   41bf4:	popeq	{r4, r5, r6, r7, r8, r9, pc}
   41bf8:	add	r2, r2, #1
   41bfc:	b	41c18 <fb_value_set_remove@@Base+0x70>
   41c00:	and	r3, r8, r2
   41c04:	add	r2, r2, #1
   41c08:	ldr	r0, [ip, r3, lsl #2]
   41c0c:	add	r3, ip, r3, lsl #2
   41c10:	cmp	r0, #0
   41c14:	beq	41cb4 <fb_value_set_remove@@Base+0x10c>
   41c18:	cmp	r0, #2
   41c1c:	beq	41c00 <fb_value_set_remove@@Base+0x58>
   41c20:	ldrh	r4, [r0, #8]
   41c24:	cmp	r4, lr
   41c28:	bne	41c00 <fb_value_set_remove@@Base+0x58>
   41c2c:	cmp	lr, #5
   41c30:	beq	41c44 <fb_value_set_remove@@Base+0x9c>
   41c34:	cmp	lr, #6
   41c38:	beq	41c9c <fb_value_set_remove@@Base+0xf4>
   41c3c:	cmp	lr, #4
   41c40:	bne	41c00 <fb_value_set_remove@@Base+0x58>
   41c44:	ldrd	r4, [r0]
   41c48:	ldrd	r6, [r1]
   41c4c:	cmp	r7, r5
   41c50:	cmpeq	r6, r4
   41c54:	moveq	r4, #1
   41c58:	movne	r4, #0
   41c5c:	cmp	r4, #0
   41c60:	beq	41c00 <fb_value_set_remove@@Base+0x58>
   41c64:	ldr	r2, [r9, #8]
   41c68:	mov	r1, #2
   41c6c:	sub	r2, r2, #1
   41c70:	str	r1, [r3]
   41c74:	str	r2, [r9, #8]
   41c78:	pop	{r4, r5, r6, r7, r8, r9, pc}
   41c7c:	ldrb	r0, [r1]
   41c80:	ldr	r3, [pc, #80]	; 41cd8 <fb_value_set_remove@@Base+0x130>
   41c84:	ldr	r2, [pc, #80]	; 41cdc <fb_value_set_remove@@Base+0x134>
   41c88:	eor	r3, r3, r0
   41c8c:	mul	r2, r2, r3
   41c90:	and	r3, r8, r2
   41c94:	lsl	r3, r3, #2
   41c98:	b	41be8 <fb_value_set_remove@@Base+0x40>
   41c9c:	ldrb	r4, [r1]
   41ca0:	ldrb	r5, [r0]
   41ca4:	sub	r4, r4, r5
   41ca8:	clz	r4, r4
   41cac:	lsr	r4, r4, #5
   41cb0:	b	41c5c <fb_value_set_remove@@Base+0xb4>
   41cb4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   41cb8:	ldr	r0, [r1]
   41cbc:	ldr	r3, [pc, #28]	; 41ce0 <fb_value_set_remove@@Base+0x138>
   41cc0:	b	41c84 <fb_value_set_remove@@Base+0xdc>
   41cc4:	ldr	r0, [r1]
   41cc8:	ldr	r3, [pc, #20]	; 41ce4 <fb_value_set_remove@@Base+0x13c>
   41ccc:	b	41c84 <fb_value_set_remove@@Base+0xdc>
   41cd0:	mov	r0, ip
   41cd4:	bx	lr
   41cd8:	svccs	0x00693b54
   41cdc:			; <UNDEFINED> instruction: 0x9e3779b1
   41ce0:	svccs	0x00693b56
   41ce4:	svccs	0x00693b57

00041ce8 <fb_value_set_remove_item@@Base>:
   41ce8:	ldr	ip, [r0]
   41cec:	cmp	ip, #0
   41cf0:	beq	41e10 <fb_value_set_remove_item@@Base+0x128>
   41cf4:	push	{r4, r5, r6, r7, r8, r9, lr}
   41cf8:	mov	r9, r0
   41cfc:	ldrh	lr, [r1, #8]
   41d00:	ldr	r8, [r0, #12]
   41d04:	cmp	lr, #5
   41d08:	sub	r8, r8, #1
   41d0c:	beq	41e04 <fb_value_set_remove_item@@Base+0x11c>
   41d10:	cmp	lr, #6
   41d14:	beq	41dbc <fb_value_set_remove_item@@Base+0xd4>
   41d18:	cmp	lr, #4
   41d1c:	movne	r3, #0
   41d20:	movne	r2, r3
   41d24:	beq	41df8 <fb_value_set_remove_item@@Base+0x110>
   41d28:	ldr	r0, [ip, r3]
   41d2c:	add	r3, ip, r3
   41d30:	cmp	r0, #0
   41d34:	popeq	{r4, r5, r6, r7, r8, r9, pc}
   41d38:	add	r2, r2, #1
   41d3c:	b	41d58 <fb_value_set_remove_item@@Base+0x70>
   41d40:	and	r3, r8, r2
   41d44:	add	r2, r2, #1
   41d48:	ldr	r0, [ip, r3, lsl #2]
   41d4c:	add	r3, ip, r3, lsl #2
   41d50:	cmp	r0, #0
   41d54:	beq	41df4 <fb_value_set_remove_item@@Base+0x10c>
   41d58:	cmp	r0, #2
   41d5c:	beq	41d40 <fb_value_set_remove_item@@Base+0x58>
   41d60:	ldrh	r4, [r0, #8]
   41d64:	cmp	r4, lr
   41d68:	bne	41d40 <fb_value_set_remove_item@@Base+0x58>
   41d6c:	cmp	lr, #5
   41d70:	beq	41d84 <fb_value_set_remove_item@@Base+0x9c>
   41d74:	cmp	lr, #6
   41d78:	beq	41ddc <fb_value_set_remove_item@@Base+0xf4>
   41d7c:	cmp	lr, #4
   41d80:	bne	41d40 <fb_value_set_remove_item@@Base+0x58>
   41d84:	ldrd	r4, [r0]
   41d88:	ldrd	r6, [r1]
   41d8c:	cmp	r7, r5
   41d90:	cmpeq	r6, r4
   41d94:	moveq	r4, #1
   41d98:	movne	r4, #0
   41d9c:	cmp	r4, #0
   41da0:	beq	41d40 <fb_value_set_remove_item@@Base+0x58>
   41da4:	ldr	r2, [r9, #8]
   41da8:	mov	r1, #2
   41dac:	sub	r2, r2, #1
   41db0:	str	r1, [r3]
   41db4:	str	r2, [r9, #8]
   41db8:	pop	{r4, r5, r6, r7, r8, r9, pc}
   41dbc:	ldrb	r0, [r1]
   41dc0:	ldr	r3, [pc, #80]	; 41e18 <fb_value_set_remove_item@@Base+0x130>
   41dc4:	ldr	r2, [pc, #80]	; 41e1c <fb_value_set_remove_item@@Base+0x134>
   41dc8:	eor	r3, r3, r0
   41dcc:	mul	r2, r2, r3
   41dd0:	and	r3, r8, r2
   41dd4:	lsl	r3, r3, #2
   41dd8:	b	41d28 <fb_value_set_remove_item@@Base+0x40>
   41ddc:	ldrb	r4, [r1]
   41de0:	ldrb	r5, [r0]
   41de4:	sub	r4, r4, r5
   41de8:	clz	r4, r4
   41dec:	lsr	r4, r4, #5
   41df0:	b	41d9c <fb_value_set_remove_item@@Base+0xb4>
   41df4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   41df8:	ldr	r0, [r1]
   41dfc:	ldr	r3, [pc, #28]	; 41e20 <fb_value_set_remove_item@@Base+0x138>
   41e00:	b	41dc4 <fb_value_set_remove_item@@Base+0xdc>
   41e04:	ldr	r0, [r1]
   41e08:	ldr	r3, [pc, #20]	; 41e24 <fb_value_set_remove_item@@Base+0x13c>
   41e0c:	b	41dc4 <fb_value_set_remove_item@@Base+0xdc>
   41e10:	mov	r0, ip
   41e14:	bx	lr
   41e18:	svccs	0x00693b54
   41e1c:			; <UNDEFINED> instruction: 0x9e3779b1
   41e20:	svccs	0x00693b56
   41e24:	svccs	0x00693b57

00041e28 <fb_value_set_visit@@Base>:
   41e28:	ldr	r3, [r0, #12]
   41e2c:	push	{r4, r5, r6, r7, r8, lr}
   41e30:	cmp	r3, #0
   41e34:	ldr	r5, [r0]
   41e38:	popeq	{r4, r5, r6, r7, r8, pc}
   41e3c:	mov	r7, r2
   41e40:	mov	r6, r1
   41e44:	mov	r8, r0
   41e48:	sub	r5, r5, #4
   41e4c:	mov	r4, #0
   41e50:	b	41e5c <fb_value_set_visit@@Base+0x34>
   41e54:	cmp	r4, r3
   41e58:	bcs	41e84 <fb_value_set_visit@@Base+0x5c>
   41e5c:	ldr	r1, [r5, #4]!
   41e60:	add	r4, r4, #1
   41e64:	cmp	r1, #0
   41e68:	cmpne	r1, #2
   41e6c:	beq	41e54 <fb_value_set_visit@@Base+0x2c>
   41e70:	mov	r0, r7
   41e74:	blx	r6
   41e78:	ldr	r3, [r8, #12]
   41e7c:	cmp	r4, r3
   41e80:	bcc	41e5c <fb_value_set_visit@@Base+0x34>
   41e84:	pop	{r4, r5, r6, r7, r8, pc}
   41e88:	eor	r1, r1, #-2147483648	; 0x80000000
   41e8c:	b	41e94 <fb_value_set_visit@@Base+0x6c>
   41e90:	eor	r3, r3, #-2147483648	; 0x80000000
   41e94:	push	{r4, r5, lr}
   41e98:	lsl	r4, r1, #1
   41e9c:	lsl	r5, r3, #1
   41ea0:	teq	r4, r5
   41ea4:	teqeq	r0, r2
   41ea8:	orrsne	ip, r4, r0
   41eac:	orrsne	ip, r5, r2
   41eb0:	mvnsne	ip, r4, asr #21
   41eb4:	mvnsne	ip, r5, asr #21
   41eb8:	beq	420a4 <fb_value_set_visit@@Base+0x27c>
   41ebc:	lsr	r4, r4, #21
   41ec0:	rsbs	r5, r4, r5, lsr #21
   41ec4:	rsblt	r5, r5, #0
   41ec8:	ble	41ee8 <fb_value_set_visit@@Base+0xc0>
   41ecc:	add	r4, r4, r5
   41ed0:	eor	r2, r0, r2
   41ed4:	eor	r3, r1, r3
   41ed8:	eor	r0, r2, r0
   41edc:	eor	r1, r3, r1
   41ee0:	eor	r2, r0, r2
   41ee4:	eor	r3, r1, r3
   41ee8:	cmp	r5, #54	; 0x36
   41eec:	pophi	{r4, r5, pc}
   41ef0:	tst	r1, #-2147483648	; 0x80000000
   41ef4:	lsl	r1, r1, #12
   41ef8:	mov	ip, #1048576	; 0x100000
   41efc:	orr	r1, ip, r1, lsr #12
   41f00:	beq	41f0c <fb_value_set_visit@@Base+0xe4>
   41f04:	rsbs	r0, r0, #0
   41f08:	rsc	r1, r1, #0
   41f0c:	tst	r3, #-2147483648	; 0x80000000
   41f10:	lsl	r3, r3, #12
   41f14:	orr	r3, ip, r3, lsr #12
   41f18:	beq	41f24 <fb_value_set_visit@@Base+0xfc>
   41f1c:	rsbs	r2, r2, #0
   41f20:	rsc	r3, r3, #0
   41f24:	teq	r4, r5
   41f28:	beq	4208c <fb_value_set_visit@@Base+0x264>
   41f2c:	sub	r4, r4, #1
   41f30:	rsbs	lr, r5, #32
   41f34:	blt	41f50 <fb_value_set_visit@@Base+0x128>
   41f38:	lsl	ip, r2, lr
   41f3c:	adds	r0, r0, r2, lsr r5
   41f40:	adc	r1, r1, #0
   41f44:	adds	r0, r0, r3, lsl lr
   41f48:	adcs	r1, r1, r3, asr r5
   41f4c:	b	41f6c <fb_value_set_visit@@Base+0x144>
   41f50:	sub	r5, r5, #32
   41f54:	add	lr, lr, #32
   41f58:	cmp	r2, #1
   41f5c:	lsl	ip, r3, lr
   41f60:	orrcs	ip, ip, #2
   41f64:	adds	r0, r0, r3, asr r5
   41f68:	adcs	r1, r1, r3, asr #31
   41f6c:	and	r5, r1, #-2147483648	; 0x80000000
   41f70:	bpl	41f80 <fb_value_set_visit@@Base+0x158>
   41f74:	rsbs	ip, ip, #0
   41f78:	rscs	r0, r0, #0
   41f7c:	rsc	r1, r1, #0
   41f80:	cmp	r1, #1048576	; 0x100000
   41f84:	bcc	41fc4 <fb_value_set_visit@@Base+0x19c>
   41f88:	cmp	r1, #2097152	; 0x200000
   41f8c:	bcc	41fac <fb_value_set_visit@@Base+0x184>
   41f90:	lsrs	r1, r1, #1
   41f94:	rrxs	r0, r0
   41f98:	rrx	ip, ip
   41f9c:	add	r4, r4, #1
   41fa0:	lsl	r2, r4, #21
   41fa4:	cmn	r2, #4194304	; 0x400000
   41fa8:	bcs	42104 <fb_value_set_visit@@Base+0x2dc>
   41fac:	cmp	ip, #-2147483648	; 0x80000000
   41fb0:	lsrseq	ip, r0, #1
   41fb4:	adcs	r0, r0, #0
   41fb8:	adc	r1, r1, r4, lsl #20
   41fbc:	orr	r1, r1, r5
   41fc0:	pop	{r4, r5, pc}
   41fc4:	lsls	ip, ip, #1
   41fc8:	adcs	r0, r0, r0
   41fcc:	adc	r1, r1, r1
   41fd0:	tst	r1, #1048576	; 0x100000
   41fd4:	sub	r4, r4, #1
   41fd8:	bne	41fac <fb_value_set_visit@@Base+0x184>
   41fdc:	teq	r1, #0
   41fe0:	moveq	r1, r0
   41fe4:	moveq	r0, #0
   41fe8:	clz	r3, r1
   41fec:	addeq	r3, r3, #32
   41ff0:	sub	r3, r3, #11
   41ff4:	subs	r2, r3, #32
   41ff8:	bge	4201c <fb_value_set_visit@@Base+0x1f4>
   41ffc:	adds	r2, r2, #12
   42000:	ble	42018 <fb_value_set_visit@@Base+0x1f0>
   42004:	add	ip, r2, #20
   42008:	rsb	r2, r2, #12
   4200c:	lsl	r0, r1, ip
   42010:	lsr	r1, r1, r2
   42014:	b	4202c <fb_value_set_visit@@Base+0x204>
   42018:	add	r2, r2, #20
   4201c:	rsble	ip, r2, #32
   42020:	lsl	r1, r1, r2
   42024:	orrle	r1, r1, r0, lsr ip
   42028:	lslle	r0, r0, r2
   4202c:	subs	r4, r4, r3
   42030:	addge	r1, r1, r4, lsl #20
   42034:	orrge	r1, r1, r5
   42038:	popge	{r4, r5, pc}
   4203c:	mvn	r4, r4
   42040:	subs	r4, r4, #31
   42044:	bge	42080 <fb_value_set_visit@@Base+0x258>
   42048:	adds	r4, r4, #12
   4204c:	bgt	42068 <fb_value_set_visit@@Base+0x240>
   42050:	add	r4, r4, #20
   42054:	rsb	r2, r4, #32
   42058:	lsr	r0, r0, r4
   4205c:	orr	r0, r0, r1, lsl r2
   42060:	orr	r1, r5, r1, lsr r4
   42064:	pop	{r4, r5, pc}
   42068:	rsb	r4, r4, #12
   4206c:	rsb	r2, r4, #32
   42070:	lsr	r0, r0, r2
   42074:	orr	r0, r0, r1, lsl r4
   42078:	mov	r1, r5
   4207c:	pop	{r4, r5, pc}
   42080:	lsr	r0, r1, r4
   42084:	mov	r1, r5
   42088:	pop	{r4, r5, pc}
   4208c:	teq	r4, #0
   42090:	eor	r3, r3, #1048576	; 0x100000
   42094:	eoreq	r1, r1, #1048576	; 0x100000
   42098:	addeq	r4, r4, #1
   4209c:	subne	r5, r5, #1
   420a0:	b	41f2c <fb_value_set_visit@@Base+0x104>
   420a4:	mvns	ip, r4, asr #21
   420a8:	mvnsne	ip, r5, asr #21
   420ac:	beq	42114 <fb_value_set_visit@@Base+0x2ec>
   420b0:	teq	r4, r5
   420b4:	teqeq	r0, r2
   420b8:	beq	420cc <fb_value_set_visit@@Base+0x2a4>
   420bc:	orrs	ip, r4, r0
   420c0:	moveq	r1, r3
   420c4:	moveq	r0, r2
   420c8:	pop	{r4, r5, pc}
   420cc:	teq	r1, r3
   420d0:	movne	r1, #0
   420d4:	movne	r0, #0
   420d8:	popne	{r4, r5, pc}
   420dc:	lsrs	ip, r4, #21
   420e0:	bne	420f4 <fb_value_set_visit@@Base+0x2cc>
   420e4:	lsls	r0, r0, #1
   420e8:	adcs	r1, r1, r1
   420ec:	orrcs	r1, r1, #-2147483648	; 0x80000000
   420f0:	pop	{r4, r5, pc}
   420f4:	adds	r4, r4, #4194304	; 0x400000
   420f8:	addcc	r1, r1, #1048576	; 0x100000
   420fc:	popcc	{r4, r5, pc}
   42100:	and	r5, r1, #-2147483648	; 0x80000000
   42104:	orr	r1, r5, #2130706432	; 0x7f000000
   42108:	orr	r1, r1, #15728640	; 0xf00000
   4210c:	mov	r0, #0
   42110:	pop	{r4, r5, pc}
   42114:	mvns	ip, r4, asr #21
   42118:	movne	r1, r3
   4211c:	movne	r0, r2
   42120:	mvnseq	ip, r5, asr #21
   42124:	movne	r3, r1
   42128:	movne	r2, r0
   4212c:	orrs	r4, r0, r1, lsl #12
   42130:	orrseq	r5, r2, r3, lsl #12
   42134:	teqeq	r1, r3
   42138:	orrne	r1, r1, #524288	; 0x80000
   4213c:	pop	{r4, r5, pc}
   42140:	teq	r0, #0
   42144:	moveq	r1, #0
   42148:	bxeq	lr
   4214c:	push	{r4, r5, lr}
   42150:	mov	r4, #1024	; 0x400
   42154:	add	r4, r4, #50	; 0x32
   42158:	mov	r5, #0
   4215c:	mov	r1, #0
   42160:	b	41fdc <fb_value_set_visit@@Base+0x1b4>
   42164:	teq	r0, #0
   42168:	moveq	r1, #0
   4216c:	bxeq	lr
   42170:	push	{r4, r5, lr}
   42174:	mov	r4, #1024	; 0x400
   42178:	add	r4, r4, #50	; 0x32
   4217c:	ands	r5, r0, #-2147483648	; 0x80000000
   42180:	rsbmi	r0, r0, #0
   42184:	mov	r1, #0
   42188:	b	41fdc <fb_value_set_visit@@Base+0x1b4>
   4218c:	lsls	r2, r0, #1
   42190:	asr	r1, r2, #3
   42194:	rrx	r1, r1
   42198:	lsl	r0, r2, #28
   4219c:	andsne	r3, r2, #-16777216	; 0xff000000
   421a0:	teqne	r3, #-16777216	; 0xff000000
   421a4:	eorne	r1, r1, #939524096	; 0x38000000
   421a8:	bxne	lr
   421ac:	teq	r2, #0
   421b0:	teqne	r3, #-16777216	; 0xff000000
   421b4:	bxeq	lr
   421b8:	push	{r4, r5, lr}
   421bc:	mov	r4, #896	; 0x380
   421c0:	and	r5, r1, #-2147483648	; 0x80000000
   421c4:	bic	r1, r1, #-2147483648	; 0x80000000
   421c8:	b	41fdc <fb_value_set_visit@@Base+0x1b4>
   421cc:	orrs	r2, r0, r1
   421d0:	bxeq	lr
   421d4:	push	{r4, r5, lr}
   421d8:	mov	r5, #0
   421dc:	b	421fc <fb_value_set_visit@@Base+0x3d4>
   421e0:	orrs	r2, r0, r1
   421e4:	bxeq	lr
   421e8:	push	{r4, r5, lr}
   421ec:	ands	r5, r1, #-2147483648	; 0x80000000
   421f0:	bpl	421fc <fb_value_set_visit@@Base+0x3d4>
   421f4:	rsbs	r0, r0, #0
   421f8:	rsc	r1, r1, #0
   421fc:	mov	r4, #1024	; 0x400
   42200:	add	r4, r4, #50	; 0x32
   42204:	lsrs	ip, r1, #22
   42208:	beq	41f80 <fb_value_set_visit@@Base+0x158>
   4220c:	mov	r2, #3
   42210:	lsrs	ip, ip, #3
   42214:	addne	r2, r2, #3
   42218:	lsrs	ip, ip, #3
   4221c:	addne	r2, r2, #3
   42220:	add	r2, r2, ip, lsr #3
   42224:	rsb	r3, r2, #32
   42228:	lsl	ip, r0, r3
   4222c:	lsr	r0, r0, r2
   42230:	orr	r0, r0, r1, lsl r3
   42234:	lsr	r1, r1, r2
   42238:	add	r4, r4, r2
   4223c:	b	41f80 <fb_value_set_visit@@Base+0x158>
   42240:	eor	r0, r0, #-2147483648	; 0x80000000
   42244:	b	4224c <fb_value_set_visit@@Base+0x424>
   42248:	eor	r1, r1, #-2147483648	; 0x80000000
   4224c:	lsls	r2, r0, #1
   42250:	lslsne	r3, r1, #1
   42254:	teqne	r2, r3
   42258:	mvnsne	ip, r2, asr #24
   4225c:	mvnsne	ip, r3, asr #24
   42260:	beq	42358 <fb_value_set_visit@@Base+0x530>
   42264:	lsr	r2, r2, #24
   42268:	rsbs	r3, r2, r3, lsr #24
   4226c:	addgt	r2, r2, r3
   42270:	eorgt	r1, r0, r1
   42274:	eorgt	r0, r1, r0
   42278:	eorgt	r1, r0, r1
   4227c:	rsblt	r3, r3, #0
   42280:	cmp	r3, #25
   42284:	bxhi	lr
   42288:	tst	r0, #-2147483648	; 0x80000000
   4228c:	orr	r0, r0, #8388608	; 0x800000
   42290:	bic	r0, r0, #-16777216	; 0xff000000
   42294:	rsbne	r0, r0, #0
   42298:	tst	r1, #-2147483648	; 0x80000000
   4229c:	orr	r1, r1, #8388608	; 0x800000
   422a0:	bic	r1, r1, #-16777216	; 0xff000000
   422a4:	rsbne	r1, r1, #0
   422a8:	teq	r2, r3
   422ac:	beq	42340 <fb_value_set_visit@@Base+0x518>
   422b0:	sub	r2, r2, #1
   422b4:	adds	r0, r0, r1, asr r3
   422b8:	rsb	r3, r3, #32
   422bc:	lsl	r1, r1, r3
   422c0:	and	r3, r0, #-2147483648	; 0x80000000
   422c4:	bpl	422d0 <fb_value_set_visit@@Base+0x4a8>
   422c8:	rsbs	r1, r1, #0
   422cc:	rsc	r0, r0, #0
   422d0:	cmp	r0, #8388608	; 0x800000
   422d4:	bcc	42308 <fb_value_set_visit@@Base+0x4e0>
   422d8:	cmp	r0, #16777216	; 0x1000000
   422dc:	bcc	422f4 <fb_value_set_visit@@Base+0x4cc>
   422e0:	lsrs	r0, r0, #1
   422e4:	rrx	r1, r1
   422e8:	add	r2, r2, #1
   422ec:	cmp	r2, #254	; 0xfe
   422f0:	bcs	423ac <fb_value_set_visit@@Base+0x584>
   422f4:	cmp	r1, #-2147483648	; 0x80000000
   422f8:	adc	r0, r0, r2, lsl #23
   422fc:	biceq	r0, r0, #1
   42300:	orr	r0, r0, r3
   42304:	bx	lr
   42308:	lsls	r1, r1, #1
   4230c:	adc	r0, r0, r0
   42310:	tst	r0, #8388608	; 0x800000
   42314:	sub	r2, r2, #1
   42318:	bne	422f4 <fb_value_set_visit@@Base+0x4cc>
   4231c:	clz	ip, r0
   42320:	sub	ip, ip, #8
   42324:	subs	r2, r2, ip
   42328:	lsl	r0, r0, ip
   4232c:	addge	r0, r0, r2, lsl #23
   42330:	rsblt	r2, r2, #0
   42334:	orrge	r0, r0, r3
   42338:	orrlt	r0, r3, r0, lsr r2
   4233c:	bx	lr
   42340:	teq	r2, #0
   42344:	eor	r1, r1, #8388608	; 0x800000
   42348:	eoreq	r0, r0, #8388608	; 0x800000
   4234c:	addeq	r2, r2, #1
   42350:	subne	r3, r3, #1
   42354:	b	422b0 <fb_value_set_visit@@Base+0x488>
   42358:	lsl	r3, r1, #1
   4235c:	mvns	ip, r2, asr #24
   42360:	mvnsne	ip, r3, asr #24
   42364:	beq	423b8 <fb_value_set_visit@@Base+0x590>
   42368:	teq	r2, r3
   4236c:	beq	4237c <fb_value_set_visit@@Base+0x554>
   42370:	teq	r2, #0
   42374:	moveq	r0, r1
   42378:	bx	lr
   4237c:	teq	r0, r1
   42380:	movne	r0, #0
   42384:	bxne	lr
   42388:	tst	r2, #-16777216	; 0xff000000
   4238c:	bne	4239c <fb_value_set_visit@@Base+0x574>
   42390:	lsls	r0, r0, #1
   42394:	orrcs	r0, r0, #-2147483648	; 0x80000000
   42398:	bx	lr
   4239c:	adds	r2, r2, #33554432	; 0x2000000
   423a0:	addcc	r0, r0, #8388608	; 0x800000
   423a4:	bxcc	lr
   423a8:	and	r3, r0, #-2147483648	; 0x80000000
   423ac:	orr	r0, r3, #2130706432	; 0x7f000000
   423b0:	orr	r0, r0, #8388608	; 0x800000
   423b4:	bx	lr
   423b8:	mvns	r2, r2, asr #24
   423bc:	movne	r0, r1
   423c0:	mvnseq	r3, r3, asr #24
   423c4:	movne	r1, r0
   423c8:	lsls	r2, r0, #9
   423cc:	lslseq	r3, r1, #9
   423d0:	teqeq	r0, r1
   423d4:	orrne	r0, r0, #4194304	; 0x400000
   423d8:	bx	lr
   423dc:	mov	r3, #0
   423e0:	b	423ec <fb_value_set_visit@@Base+0x5c4>
   423e4:	ands	r3, r0, #-2147483648	; 0x80000000
   423e8:	rsbmi	r0, r0, #0
   423ec:	movs	ip, r0
   423f0:	bxeq	lr
   423f4:	orr	r3, r3, #1258291200	; 0x4b000000
   423f8:	mov	r1, r0
   423fc:	mov	r0, #0
   42400:	b	42444 <fb_value_set_visit@@Base+0x61c>
   42404:	orrs	r2, r0, r1
   42408:	bxeq	lr
   4240c:	mov	r3, #0
   42410:	b	4242c <fb_value_set_visit@@Base+0x604>
   42414:	orrs	r2, r0, r1
   42418:	bxeq	lr
   4241c:	ands	r3, r1, #-2147483648	; 0x80000000
   42420:	bpl	4242c <fb_value_set_visit@@Base+0x604>
   42424:	rsbs	r0, r0, #0
   42428:	rsc	r1, r1, #0
   4242c:	movs	ip, r1
   42430:	moveq	ip, r0
   42434:	moveq	r1, r0
   42438:	moveq	r0, #0
   4243c:	orr	r3, r3, #1526726656	; 0x5b000000
   42440:	subeq	r3, r3, #268435456	; 0x10000000
   42444:	sub	r3, r3, #8388608	; 0x800000
   42448:	clz	r2, ip
   4244c:	subs	r2, r2, #8
   42450:	sub	r3, r3, r2, lsl #23
   42454:	blt	42474 <fb_value_set_visit@@Base+0x64c>
   42458:	add	r3, r3, r1, lsl r2
   4245c:	lsl	ip, r0, r2
   42460:	rsb	r2, r2, #32
   42464:	cmp	ip, #-2147483648	; 0x80000000
   42468:	adc	r0, r3, r0, lsr r2
   4246c:	biceq	r0, r0, #1
   42470:	bx	lr
   42474:	add	r2, r2, #32
   42478:	lsl	ip, r1, r2
   4247c:	rsb	r2, r2, #32
   42480:	orrs	r0, r0, ip, lsl #1
   42484:	adc	r0, r3, r1, lsr r2
   42488:	biceq	r0, r0, ip, lsr #31
   4248c:	bx	lr
   42490:	cmp	r3, #0
   42494:	cmpeq	r2, #0
   42498:	bne	424b0 <fb_value_set_visit@@Base+0x688>
   4249c:	cmp	r1, #0
   424a0:	cmpeq	r0, #0
   424a4:	mvnne	r1, #0
   424a8:	mvnne	r0, #0
   424ac:	b	424cc <fb_value_set_visit@@Base+0x6a4>
   424b0:	sub	sp, sp, #8
   424b4:	push	{sp, lr}
   424b8:	bl	425c8 <fb_value_set_visit@@Base+0x7a0>
   424bc:	ldr	lr, [sp, #4]
   424c0:	add	sp, sp, #8
   424c4:	pop	{r2, r3}
   424c8:	bx	lr
   424cc:	push	{r1, lr}
   424d0:	mov	r0, #8
   424d4:	bl	13fb0 <raise@plt>
   424d8:	pop	{r1, pc}
   424dc:	vmov	s15, r0
   424e0:	vcmpe.f32	s15, #0.0
   424e4:	vmrs	APSR_nzcv, fpscr
   424e8:	bmi	424f0 <fb_value_set_visit@@Base+0x6c8>
   424ec:	b	42538 <fb_value_set_visit@@Base+0x710>
   424f0:	push	{r4, lr}
   424f4:	eor	r0, r0, #-2147483648	; 0x80000000
   424f8:	bl	42538 <fb_value_set_visit@@Base+0x710>
   424fc:	rsbs	r0, r0, #0
   42500:	rsc	r1, r1, #0
   42504:	pop	{r4, pc}
   42508:	vmov	d7, r0, r1
   4250c:	vcmpe.f64	d7, #0.0
   42510:	vmrs	APSR_nzcv, fpscr
   42514:	bmi	4251c <fb_value_set_visit@@Base+0x6f4>
   42518:	b	42580 <fb_value_set_visit@@Base+0x758>
   4251c:	push	{r4, lr}
   42520:	eor	r1, r1, #-2147483648	; 0x80000000
   42524:	bl	42580 <fb_value_set_visit@@Base+0x758>
   42528:	rsbs	r0, r0, #0
   4252c:	rsc	r1, r1, #0
   42530:	pop	{r4, pc}
   42534:	andeq	r0, r0, r0
   42538:	vmov	s15, r0
   4253c:	vldr	d6, [pc, #44]	; 42570 <fb_value_set_visit@@Base+0x748>
   42540:	vldr	d5, [pc, #48]	; 42578 <fb_value_set_visit@@Base+0x750>
   42544:	mov	r0, #0
   42548:	vcvt.f64.f32	d7, s15
   4254c:	vmul.f64	d6, d7, d6
   42550:	vcvt.u32.f64	s12, d6
   42554:	vcvt.f64.u32	d4, s12
   42558:	vmov	r1, s12
   4255c:	vmls.f64	d7, d4, d5
   42560:	vcvt.u32.f64	s14, d7
   42564:	vmov	r3, s14
   42568:	orr	r0, r0, r3
   4256c:	bx	lr
   42570:	andeq	r0, r0, r0
   42574:	ldclcc	0, cr0, [r0]
   42578:	andeq	r0, r0, r0
   4257c:	mvnsmi	r0, r0
   42580:	vmov	d7, r0, r1
   42584:	vldr	d6, [pc, #44]	; 425b8 <fb_value_set_visit@@Base+0x790>
   42588:	vldr	d5, [pc, #48]	; 425c0 <fb_value_set_visit@@Base+0x798>
   4258c:	mov	r0, #0
   42590:	vmul.f64	d6, d7, d6
   42594:	vcvt.u32.f64	s12, d6
   42598:	vcvt.f64.u32	d4, s12
   4259c:	vmov	r1, s12
   425a0:	vmls.f64	d7, d4, d5
   425a4:	vcvt.u32.f64	s14, d7
   425a8:	vmov	r3, s14
   425ac:	orr	r0, r0, r3
   425b0:	bx	lr
   425b4:	nop			; (mov r0, r0)
   425b8:	andeq	r0, r0, r0
   425bc:	ldclcc	0, cr0, [r0]
   425c0:	andeq	r0, r0, r0
   425c4:	mvnsmi	r0, r0
   425c8:	cmp	r1, r3
   425cc:	push	{r4, r5, r6, r7, r8, r9, lr}
   425d0:	cmpeq	r0, r2
   425d4:	mov	r4, r0
   425d8:	mov	r5, r1
   425dc:	ldr	r9, [sp, #28]
   425e0:	movcc	r0, #0
   425e4:	movcc	r1, #0
   425e8:	bcc	426e0 <fb_value_set_visit@@Base+0x8b8>
   425ec:	cmp	r3, #0
   425f0:	clzeq	ip, r2
   425f4:	clzne	ip, r3
   425f8:	addeq	ip, ip, #32
   425fc:	cmp	r5, #0
   42600:	clzeq	r1, r4
   42604:	addeq	r1, r1, #32
   42608:	clzne	r1, r5
   4260c:	sub	ip, ip, r1
   42610:	sub	lr, ip, #32
   42614:	lsl	r7, r3, ip
   42618:	rsb	r8, ip, #32
   4261c:	orr	r7, r7, r2, lsl lr
   42620:	orr	r7, r7, r2, lsr r8
   42624:	lsl	r6, r2, ip
   42628:	cmp	r5, r7
   4262c:	cmpeq	r4, r6
   42630:	movcc	r0, #0
   42634:	movcc	r1, #0
   42638:	bcc	42654 <fb_value_set_visit@@Base+0x82c>
   4263c:	mov	r3, #1
   42640:	subs	r4, r4, r6
   42644:	lsl	r1, r3, lr
   42648:	lsl	r0, r3, ip
   4264c:	orr	r1, r1, r3, lsr r8
   42650:	sbc	r5, r5, r7
   42654:	cmp	ip, #0
   42658:	beq	426e0 <fb_value_set_visit@@Base+0x8b8>
   4265c:	lsrs	r3, r7, #1
   42660:	rrx	r2, r6
   42664:	mov	r6, ip
   42668:	b	4268c <fb_value_set_visit@@Base+0x864>
   4266c:	subs	r4, r4, r2
   42670:	sbc	r5, r5, r3
   42674:	adds	r4, r4, r4
   42678:	adc	r5, r5, r5
   4267c:	adds	r4, r4, #1
   42680:	adc	r5, r5, #0
   42684:	subs	r6, r6, #1
   42688:	beq	426a8 <fb_value_set_visit@@Base+0x880>
   4268c:	cmp	r5, r3
   42690:	cmpeq	r4, r2
   42694:	bcs	4266c <fb_value_set_visit@@Base+0x844>
   42698:	adds	r4, r4, r4
   4269c:	adc	r5, r5, r5
   426a0:	subs	r6, r6, #1
   426a4:	bne	4268c <fb_value_set_visit@@Base+0x864>
   426a8:	lsr	r6, r4, ip
   426ac:	lsr	r7, r5, ip
   426b0:	orr	r6, r6, r5, lsl r8
   426b4:	adds	r2, r0, r4
   426b8:	orr	r6, r6, r5, lsr lr
   426bc:	adc	r3, r1, r5
   426c0:	lsl	r1, r7, ip
   426c4:	orr	r1, r1, r6, lsl lr
   426c8:	lsl	r0, r6, ip
   426cc:	orr	r1, r1, r6, lsr r8
   426d0:	subs	r0, r2, r0
   426d4:	mov	r4, r6
   426d8:	mov	r5, r7
   426dc:	sbc	r1, r3, r1
   426e0:	cmp	r9, #0
   426e4:	popeq	{r4, r5, r6, r7, r8, r9, pc}
   426e8:	strd	r4, [r9]
   426ec:	pop	{r4, r5, r6, r7, r8, r9, pc}

000426f0 <__libc_csu_init@@Base>:
   426f0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   426f4:	mov	r7, r0
   426f8:	ldr	r6, [pc, #72]	; 42748 <__libc_csu_init@@Base+0x58>
   426fc:	ldr	r5, [pc, #72]	; 4274c <__libc_csu_init@@Base+0x5c>
   42700:	add	r6, pc, r6
   42704:	add	r5, pc, r5
   42708:	sub	r6, r6, r5
   4270c:	mov	r8, r1
   42710:	mov	r9, r2
   42714:	bl	13f84 <calloc@plt-0x20>
   42718:	asrs	r6, r6, #2
   4271c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   42720:	mov	r4, #0
   42724:	add	r4, r4, #1
   42728:	ldr	r3, [r5], #4
   4272c:	mov	r2, r9
   42730:	mov	r1, r8
   42734:	mov	r0, r7
   42738:	blx	r3
   4273c:	cmp	r6, r4
   42740:	bne	42724 <__libc_csu_init@@Base+0x34>
   42744:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   42748:	andeq	ip, r2, r8, lsl #16
   4274c:	andeq	ip, r2, r0, lsl #16

00042750 <__libc_csu_fini@@Base>:
   42750:	bx	lr

Disassembly of section .fini:

00042754 <.fini>:
   42754:	push	{r3, lr}
   42758:	pop	{r3, pc}
