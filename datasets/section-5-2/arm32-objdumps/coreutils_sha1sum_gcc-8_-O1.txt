
../repos/coreutils/src/sha1sum:     file format elf32-littlearm


Disassembly of section .init:

00010d30 <.init>:
   10d30:	push	{r3, lr}
   10d34:	bl	11038 <dcngettext@plt+0x48>
   10d38:	pop	{r3, pc}

Disassembly of section .plt:

00010d3c <fdopen@plt-0x14>:
   10d3c:	push	{lr}		; (str lr, [sp, #-4]!)
   10d40:	ldr	lr, [pc, #4]	; 10d4c <fdopen@plt-0x4>
   10d44:	add	lr, pc, lr
   10d48:	ldr	pc, [lr, #8]!
   10d4c:			; <UNDEFINED> instruction: 0x000192b4

00010d50 <fdopen@plt>:
   10d50:	add	ip, pc, #0, 12
   10d54:	add	ip, ip, #102400	; 0x19000
   10d58:	ldr	pc, [ip, #692]!	; 0x2b4

00010d5c <calloc@plt>:
   10d5c:	add	ip, pc, #0, 12
   10d60:	add	ip, ip, #102400	; 0x19000
   10d64:	ldr	pc, [ip, #684]!	; 0x2ac

00010d68 <fputs_unlocked@plt>:
   10d68:	add	ip, pc, #0, 12
   10d6c:	add	ip, ip, #102400	; 0x19000
   10d70:	ldr	pc, [ip, #676]!	; 0x2a4

00010d74 <raise@plt>:
   10d74:	add	ip, pc, #0, 12
   10d78:	add	ip, ip, #102400	; 0x19000
   10d7c:	ldr	pc, [ip, #668]!	; 0x29c

00010d80 <__getdelim@plt>:
   10d80:	add	ip, pc, #0, 12
   10d84:	add	ip, ip, #102400	; 0x19000
   10d88:	ldr	pc, [ip, #660]!	; 0x294

00010d8c <strcmp@plt>:
   10d8c:	add	ip, pc, #0, 12
   10d90:	add	ip, ip, #102400	; 0x19000
   10d94:	ldr	pc, [ip, #652]!	; 0x28c

00010d98 <posix_fadvise64@plt>:
   10d98:	add	ip, pc, #0, 12
   10d9c:	add	ip, ip, #102400	; 0x19000
   10da0:	ldr	pc, [ip, #644]!	; 0x284

00010da4 <fflush@plt>:
   10da4:	add	ip, pc, #0, 12
   10da8:	add	ip, ip, #102400	; 0x19000
   10dac:	ldr	pc, [ip, #636]!	; 0x27c

00010db0 <free@plt>:
   10db0:	add	ip, pc, #0, 12
   10db4:	add	ip, ip, #102400	; 0x19000
   10db8:	ldr	pc, [ip, #628]!	; 0x274

00010dbc <_exit@plt>:
   10dbc:	add	ip, pc, #0, 12
   10dc0:	add	ip, ip, #102400	; 0x19000
   10dc4:	ldr	pc, [ip, #620]!	; 0x26c

00010dc8 <memcpy@plt>:
   10dc8:	add	ip, pc, #0, 12
   10dcc:	add	ip, ip, #102400	; 0x19000
   10dd0:	ldr	pc, [ip, #612]!	; 0x264

00010dd4 <mbsinit@plt>:
   10dd4:	add	ip, pc, #0, 12
   10dd8:	add	ip, ip, #102400	; 0x19000
   10ddc:	ldr	pc, [ip, #604]!	; 0x25c

00010de0 <fwrite_unlocked@plt>:
   10de0:	add	ip, pc, #0, 12
   10de4:	add	ip, ip, #102400	; 0x19000
   10de8:	ldr	pc, [ip, #596]!	; 0x254

00010dec <memcmp@plt>:
   10dec:	add	ip, pc, #0, 12
   10df0:	add	ip, ip, #102400	; 0x19000
   10df4:	ldr	pc, [ip, #588]!	; 0x24c

00010df8 <fputc_unlocked@plt>:
   10df8:	add	ip, pc, #0, 12
   10dfc:	add	ip, ip, #102400	; 0x19000
   10e00:	ldr	pc, [ip, #580]!	; 0x244

00010e04 <dcgettext@plt>:
   10e04:	add	ip, pc, #0, 12
   10e08:	add	ip, ip, #102400	; 0x19000
   10e0c:	ldr	pc, [ip, #572]!	; 0x23c

00010e10 <realloc@plt>:
   10e10:	add	ip, pc, #0, 12
   10e14:	add	ip, ip, #102400	; 0x19000
   10e18:	ldr	pc, [ip, #564]!	; 0x234

00010e1c <textdomain@plt>:
   10e1c:	add	ip, pc, #0, 12
   10e20:	add	ip, ip, #102400	; 0x19000
   10e24:	ldr	pc, [ip, #556]!	; 0x22c

00010e28 <iswprint@plt>:
   10e28:	add	ip, pc, #0, 12
   10e2c:	add	ip, ip, #102400	; 0x19000
   10e30:	ldr	pc, [ip, #548]!	; 0x224

00010e34 <fwrite@plt>:
   10e34:	add	ip, pc, #0, 12
   10e38:	add	ip, ip, #102400	; 0x19000
   10e3c:	ldr	pc, [ip, #540]!	; 0x21c

00010e40 <lseek64@plt>:
   10e40:	add	ip, pc, #0, 12
   10e44:	add	ip, ip, #102400	; 0x19000
   10e48:	ldr	pc, [ip, #532]!	; 0x214

00010e4c <__ctype_get_mb_cur_max@plt>:
   10e4c:	add	ip, pc, #0, 12
   10e50:	add	ip, ip, #102400	; 0x19000
   10e54:	ldr	pc, [ip, #524]!	; 0x20c

00010e58 <__fpending@plt>:
   10e58:	add	ip, pc, #0, 12
   10e5c:	add	ip, ip, #102400	; 0x19000
   10e60:	ldr	pc, [ip, #516]!	; 0x204

00010e64 <mbrtowc@plt>:
   10e64:	add	ip, pc, #0, 12
   10e68:	add	ip, ip, #102400	; 0x19000
   10e6c:	ldr	pc, [ip, #508]!	; 0x1fc

00010e70 <error@plt>:
   10e70:	add	ip, pc, #0, 12
   10e74:	add	ip, ip, #102400	; 0x19000
   10e78:	ldr	pc, [ip, #500]!	; 0x1f4

00010e7c <malloc@plt>:
   10e7c:	add	ip, pc, #0, 12
   10e80:	add	ip, ip, #102400	; 0x19000
   10e84:	ldr	pc, [ip, #492]!	; 0x1ec

00010e88 <__libc_start_main@plt>:
   10e88:	add	ip, pc, #0, 12
   10e8c:	add	ip, ip, #102400	; 0x19000
   10e90:	ldr	pc, [ip, #484]!	; 0x1e4

00010e94 <__freading@plt>:
   10e94:	add	ip, pc, #0, 12
   10e98:	add	ip, ip, #102400	; 0x19000
   10e9c:	ldr	pc, [ip, #476]!	; 0x1dc

00010ea0 <__ctype_tolower_loc@plt>:
   10ea0:	add	ip, pc, #0, 12
   10ea4:	add	ip, ip, #102400	; 0x19000
   10ea8:	ldr	pc, [ip, #468]!	; 0x1d4

00010eac <__gmon_start__@plt>:
   10eac:	add	ip, pc, #0, 12
   10eb0:	add	ip, ip, #102400	; 0x19000
   10eb4:	ldr	pc, [ip, #460]!	; 0x1cc

00010eb8 <getopt_long@plt>:
   10eb8:	add	ip, pc, #0, 12
   10ebc:	add	ip, ip, #102400	; 0x19000
   10ec0:	ldr	pc, [ip, #452]!	; 0x1c4

00010ec4 <__ctype_b_loc@plt>:
   10ec4:	add	ip, pc, #0, 12
   10ec8:	add	ip, ip, #102400	; 0x19000
   10ecc:	ldr	pc, [ip, #444]!	; 0x1bc

00010ed0 <exit@plt>:
   10ed0:	add	ip, pc, #0, 12
   10ed4:	add	ip, ip, #102400	; 0x19000
   10ed8:	ldr	pc, [ip, #436]!	; 0x1b4

00010edc <strlen@plt>:
   10edc:	add	ip, pc, #0, 12
   10ee0:	add	ip, ip, #102400	; 0x19000
   10ee4:	ldr	pc, [ip, #428]!	; 0x1ac

00010ee8 <strchr@plt>:
   10ee8:	add	ip, pc, #0, 12
   10eec:	add	ip, ip, #102400	; 0x19000
   10ef0:	ldr	pc, [ip, #420]!	; 0x1a4

00010ef4 <__errno_location@plt>:
   10ef4:	add	ip, pc, #0, 12
   10ef8:	add	ip, ip, #102400	; 0x19000
   10efc:	ldr	pc, [ip, #412]!	; 0x19c

00010f00 <__cxa_atexit@plt>:
   10f00:	add	ip, pc, #0, 12
   10f04:	add	ip, ip, #102400	; 0x19000
   10f08:	ldr	pc, [ip, #404]!	; 0x194

00010f0c <setvbuf@plt>:
   10f0c:	add	ip, pc, #0, 12
   10f10:	add	ip, ip, #102400	; 0x19000
   10f14:	ldr	pc, [ip, #396]!	; 0x18c

00010f18 <memset@plt>:
   10f18:	add	ip, pc, #0, 12
   10f1c:	add	ip, ip, #102400	; 0x19000
   10f20:	ldr	pc, [ip, #388]!	; 0x184

00010f24 <__printf_chk@plt>:
   10f24:	add	ip, pc, #0, 12
   10f28:	add	ip, ip, #102400	; 0x19000
   10f2c:	ldr	pc, [ip, #380]!	; 0x17c

00010f30 <fileno@plt>:
   10f30:	add	ip, pc, #0, 12
   10f34:	add	ip, ip, #102400	; 0x19000
   10f38:	ldr	pc, [ip, #372]!	; 0x174

00010f3c <__fprintf_chk@plt>:
   10f3c:	add	ip, pc, #0, 12
   10f40:	add	ip, ip, #102400	; 0x19000
   10f44:	ldr	pc, [ip, #364]!	; 0x16c

00010f48 <fclose@plt>:
   10f48:	add	ip, pc, #0, 12
   10f4c:	add	ip, ip, #102400	; 0x19000
   10f50:	ldr	pc, [ip, #356]!	; 0x164

00010f54 <fseeko64@plt>:
   10f54:	add	ip, pc, #0, 12
   10f58:	add	ip, ip, #102400	; 0x19000
   10f5c:	ldr	pc, [ip, #348]!	; 0x15c

00010f60 <fcntl64@plt>:
   10f60:	add	ip, pc, #0, 12
   10f64:	add	ip, ip, #102400	; 0x19000
   10f68:	ldr	pc, [ip, #340]!	; 0x154

00010f6c <__overflow@plt>:
   10f6c:	add	ip, pc, #0, 12
   10f70:	add	ip, ip, #102400	; 0x19000
   10f74:	ldr	pc, [ip, #332]!	; 0x14c

00010f78 <setlocale@plt>:
   10f78:	add	ip, pc, #0, 12
   10f7c:	add	ip, ip, #102400	; 0x19000
   10f80:	ldr	pc, [ip, #324]!	; 0x144

00010f84 <strrchr@plt>:
   10f84:	add	ip, pc, #0, 12
   10f88:	add	ip, ip, #102400	; 0x19000
   10f8c:	ldr	pc, [ip, #316]!	; 0x13c

00010f90 <nl_langinfo@plt>:
   10f90:	add	ip, pc, #0, 12
   10f94:	add	ip, ip, #102400	; 0x19000
   10f98:	ldr	pc, [ip, #308]!	; 0x134

00010f9c <clearerr_unlocked@plt>:
   10f9c:	add	ip, pc, #0, 12
   10fa0:	add	ip, ip, #102400	; 0x19000
   10fa4:	ldr	pc, [ip, #300]!	; 0x12c

00010fa8 <fopen64@plt>:
   10fa8:	add	ip, pc, #0, 12
   10fac:	add	ip, ip, #102400	; 0x19000
   10fb0:	ldr	pc, [ip, #292]!	; 0x124

00010fb4 <bindtextdomain@plt>:
   10fb4:	add	ip, pc, #0, 12
   10fb8:	add	ip, ip, #102400	; 0x19000
   10fbc:	ldr	pc, [ip, #284]!	; 0x11c

00010fc0 <fread_unlocked@plt>:
   10fc0:	add	ip, pc, #0, 12
   10fc4:	add	ip, ip, #102400	; 0x19000
   10fc8:	ldr	pc, [ip, #276]!	; 0x114

00010fcc <strncmp@plt>:
   10fcc:	add	ip, pc, #0, 12
   10fd0:	add	ip, ip, #102400	; 0x19000
   10fd4:	ldr	pc, [ip, #268]!	; 0x10c

00010fd8 <abort@plt>:
   10fd8:	add	ip, pc, #0, 12
   10fdc:	add	ip, ip, #102400	; 0x19000
   10fe0:	ldr	pc, [ip, #260]!	; 0x104

00010fe4 <close@plt>:
   10fe4:	add	ip, pc, #0, 12
   10fe8:	add	ip, ip, #102400	; 0x19000
   10fec:	ldr	pc, [ip, #252]!	; 0xfc

00010ff0 <dcngettext@plt>:
   10ff0:	add	ip, pc, #0, 12
   10ff4:	add	ip, ip, #102400	; 0x19000
   10ff8:	ldr	pc, [ip, #244]!	; 0xf4

Disassembly of section .text:

00010ffc <.text>:
   10ffc:	mov	fp, #0
   11000:	mov	lr, #0
   11004:	pop	{r1}		; (ldr r1, [sp], #4)
   11008:	mov	r2, sp
   1100c:	push	{r2}		; (str r2, [sp, #-4]!)
   11010:	push	{r0}		; (str r0, [sp, #-4]!)
   11014:	ldr	ip, [pc, #16]	; 1102c <dcngettext@plt+0x3c>
   11018:	push	{ip}		; (str ip, [sp, #-4]!)
   1101c:	ldr	r0, [pc, #12]	; 11030 <dcngettext@plt+0x40>
   11020:	ldr	r3, [pc, #12]	; 11034 <dcngettext@plt+0x44>
   11024:	bl	10e88 <__libc_start_main@plt>
   11028:	bl	10fd8 <abort@plt>
   1102c:	andeq	r7, r1, r0, asr #30
   11030:	muleq	r1, r0, r9
   11034:	andeq	r7, r1, r0, ror #29
   11038:	ldr	r3, [pc, #20]	; 11054 <dcngettext@plt+0x64>
   1103c:	ldr	r2, [pc, #20]	; 11058 <dcngettext@plt+0x68>
   11040:	add	r3, pc, r3
   11044:	ldr	r2, [r3, r2]
   11048:	cmp	r2, #0
   1104c:	bxeq	lr
   11050:	b	10eac <__gmon_start__@plt>
   11054:			; <UNDEFINED> instruction: 0x00018fb8
   11058:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1105c:	ldr	r0, [pc, #24]	; 1107c <dcngettext@plt+0x8c>
   11060:	ldr	r3, [pc, #24]	; 11080 <dcngettext@plt+0x90>
   11064:	cmp	r3, r0
   11068:	bxeq	lr
   1106c:	ldr	r3, [pc, #16]	; 11084 <dcngettext@plt+0x94>
   11070:	cmp	r3, #0
   11074:	bxeq	lr
   11078:	bx	r3
   1107c:	andeq	sl, r2, ip, asr #2
   11080:	andeq	sl, r2, ip, asr #2
   11084:	andeq	r0, r0, r0
   11088:	ldr	r0, [pc, #36]	; 110b4 <dcngettext@plt+0xc4>
   1108c:	ldr	r1, [pc, #36]	; 110b8 <dcngettext@plt+0xc8>
   11090:	sub	r1, r1, r0
   11094:	asr	r1, r1, #2
   11098:	add	r1, r1, r1, lsr #31
   1109c:	asrs	r1, r1, #1
   110a0:	bxeq	lr
   110a4:	ldr	r3, [pc, #16]	; 110bc <dcngettext@plt+0xcc>
   110a8:	cmp	r3, #0
   110ac:	bxeq	lr
   110b0:	bx	r3
   110b4:	andeq	sl, r2, ip, asr #2
   110b8:	andeq	sl, r2, ip, asr #2
   110bc:	andeq	r0, r0, r0
   110c0:	push	{r4, lr}
   110c4:	ldr	r4, [pc, #24]	; 110e4 <dcngettext@plt+0xf4>
   110c8:	ldrb	r3, [r4]
   110cc:	cmp	r3, #0
   110d0:	popne	{r4, pc}
   110d4:	bl	1105c <dcngettext@plt+0x6c>
   110d8:	mov	r3, #1
   110dc:	strb	r3, [r4]
   110e0:	pop	{r4, pc}
   110e4:	andeq	sl, r2, r0, ror r1
   110e8:	b	11088 <dcngettext@plt+0x98>
   110ec:	cmp	r1, #0
   110f0:	bxeq	lr
   110f4:	strd	r4, [sp, #-20]!	; 0xffffffec
   110f8:	strd	r6, [sp, #8]
   110fc:	str	lr, [sp, #16]
   11100:	add	ip, r0, #1
   11104:	mov	r3, #0
   11108:	sub	lr, r1, #1
   1110c:	mov	r7, #10
   11110:	mov	r6, #13
   11114:	mov	r5, #92	; 0x5c
   11118:	b	11158 <dcngettext@plt+0x168>
   1111c:	mov	r4, ip
   11120:	strb	r7, [ip, #-1]
   11124:	b	11148 <dcngettext@plt+0x158>
   11128:	mov	r4, ip
   1112c:	strb	r6, [ip, #-1]
   11130:	b	11148 <dcngettext@plt+0x158>
   11134:	mov	r4, ip
   11138:	strb	r5, [ip, #-1]
   1113c:	b	11148 <dcngettext@plt+0x158>
   11140:	mov	r4, ip
   11144:	strb	r2, [ip, #-1]
   11148:	add	r3, r3, #1
   1114c:	add	ip, ip, #1
   11150:	cmp	r1, r3
   11154:	bls	1119c <dcngettext@plt+0x1ac>
   11158:	ldrb	r2, [r0, r3]
   1115c:	cmp	r2, #0
   11160:	beq	111b4 <dcngettext@plt+0x1c4>
   11164:	cmp	r2, #92	; 0x5c
   11168:	bne	11140 <dcngettext@plt+0x150>
   1116c:	cmp	lr, r3
   11170:	beq	111c8 <dcngettext@plt+0x1d8>
   11174:	add	r3, r3, #1
   11178:	ldrb	r2, [r0, r3]
   1117c:	cmp	r2, #110	; 0x6e
   11180:	beq	1111c <dcngettext@plt+0x12c>
   11184:	cmp	r2, #114	; 0x72
   11188:	beq	11128 <dcngettext@plt+0x138>
   1118c:	cmp	r2, #92	; 0x5c
   11190:	beq	11134 <dcngettext@plt+0x144>
   11194:	mov	r0, #0
   11198:	b	111b8 <dcngettext@plt+0x1c8>
   1119c:	add	r1, r0, r1
   111a0:	cmp	r4, r1
   111a4:	bcs	111b8 <dcngettext@plt+0x1c8>
   111a8:	mov	r3, #0
   111ac:	strb	r3, [r4]
   111b0:	b	111b8 <dcngettext@plt+0x1c8>
   111b4:	mov	r0, #0
   111b8:	ldrd	r4, [sp]
   111bc:	ldrd	r6, [sp, #8]
   111c0:	add	sp, sp, #16
   111c4:	pop	{pc}		; (ldr pc, [sp], #4)
   111c8:	mov	r0, #0
   111cc:	b	111b8 <dcngettext@plt+0x1c8>
   111d0:	strd	r4, [sp, #-16]!
   111d4:	str	r6, [sp, #8]
   111d8:	str	lr, [sp, #12]
   111dc:	mov	r5, r0
   111e0:	movw	r3, #41332	; 0xa174
   111e4:	movt	r3, #2
   111e8:	ldr	r4, [r3]
   111ec:	cmp	r4, #0
   111f0:	beq	11224 <dcngettext@plt+0x234>
   111f4:	bl	10ec4 <__ctype_b_loc@plt>
   111f8:	ldr	r0, [r0]
   111fc:	mov	r2, r5
   11200:	add	r1, r5, r4
   11204:	ldrb	r3, [r2], #1
   11208:	lsl	r3, r3, #1
   1120c:	ldrh	r3, [r0, r3]
   11210:	tst	r3, #4096	; 0x1000
   11214:	beq	11240 <dcngettext@plt+0x250>
   11218:	mov	r5, r2
   1121c:	cmp	r2, r1
   11220:	bne	11204 <dcngettext@plt+0x214>
   11224:	ldrb	r0, [r5]
   11228:	clz	r0, r0
   1122c:	lsr	r0, r0, #5
   11230:	ldrd	r4, [sp]
   11234:	ldr	r6, [sp, #8]
   11238:	add	sp, sp, #12
   1123c:	pop	{pc}		; (ldr pc, [sp], #4)
   11240:	mov	r0, #0
   11244:	b	11230 <dcngettext@plt+0x240>
   11248:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1124c:	strd	r6, [sp, #8]
   11250:	str	r8, [sp, #16]
   11254:	str	lr, [sp, #20]
   11258:	mov	r4, r0
   1125c:	cmp	r1, #0
   11260:	beq	1128c <dcngettext@plt+0x29c>
   11264:	ldrb	r1, [r0]
   11268:	cmp	r1, #0
   1126c:	beq	1129c <dcngettext@plt+0x2ac>
   11270:	movw	r5, #41324	; 0xa16c
   11274:	movt	r5, #2
   11278:	movw	r7, #32900	; 0x8084
   1127c:	movt	r7, #1
   11280:	movw	r6, #32904	; 0x8088
   11284:	movt	r6, #1
   11288:	b	112d4 <dcngettext@plt+0x2e4>
   1128c:	movw	r3, #41324	; 0xa16c
   11290:	movt	r3, #2
   11294:	ldr	r1, [r3]
   11298:	bl	10d68 <fputs_unlocked@plt>
   1129c:	ldrd	r4, [sp]
   112a0:	ldrd	r6, [sp, #8]
   112a4:	ldr	r8, [sp, #16]
   112a8:	add	sp, sp, #20
   112ac:	pop	{pc}		; (ldr pc, [sp], #4)
   112b0:	ldr	r3, [r5]
   112b4:	mov	r2, #2
   112b8:	mov	r1, #1
   112bc:	movw	r0, #32896	; 0x8080
   112c0:	movt	r0, #1
   112c4:	bl	10de0 <fwrite_unlocked@plt>
   112c8:	ldrb	r1, [r4, #1]!
   112cc:	cmp	r1, #0
   112d0:	beq	1129c <dcngettext@plt+0x2ac>
   112d4:	cmp	r1, #13
   112d8:	beq	11314 <dcngettext@plt+0x324>
   112dc:	cmp	r1, #92	; 0x5c
   112e0:	beq	1132c <dcngettext@plt+0x33c>
   112e4:	cmp	r1, #10
   112e8:	beq	112b0 <dcngettext@plt+0x2c0>
   112ec:	ldr	r0, [r5]
   112f0:	ldr	r3, [r0, #20]
   112f4:	ldr	r2, [r0, #24]
   112f8:	cmp	r3, r2
   112fc:	addcc	r2, r3, #1
   11300:	strcc	r2, [r0, #20]
   11304:	strbcc	r1, [r3]
   11308:	bcc	112c8 <dcngettext@plt+0x2d8>
   1130c:	bl	10f6c <__overflow@plt>
   11310:	b	112c8 <dcngettext@plt+0x2d8>
   11314:	ldr	r3, [r5]
   11318:	mov	r2, #2
   1131c:	mov	r1, #1
   11320:	mov	r0, r7
   11324:	bl	10de0 <fwrite_unlocked@plt>
   11328:	b	112c8 <dcngettext@plt+0x2d8>
   1132c:	ldr	r3, [r5]
   11330:	mov	r2, #2
   11334:	mov	r1, #1
   11338:	mov	r0, r6
   1133c:	bl	10de0 <fwrite_unlocked@plt>
   11340:	b	112c8 <dcngettext@plt+0x2d8>
   11344:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11348:	strd	r6, [sp, #8]
   1134c:	str	r8, [sp, #16]
   11350:	str	lr, [sp, #20]
   11354:	mov	r6, r0
   11358:	mov	r4, r2
   1135c:	mov	r5, r3
   11360:	movw	r1, #32908	; 0x808c
   11364:	movt	r1, #1
   11368:	bl	10d8c <strcmp@plt>
   1136c:	mov	r3, #0
   11370:	strb	r3, [r5]
   11374:	cmp	r0, r3
   11378:	bne	113e4 <dcngettext@plt+0x3f4>
   1137c:	movw	r3, #41332	; 0xa174
   11380:	movt	r3, #2
   11384:	mov	r2, #1
   11388:	strb	r2, [r3, #4]
   1138c:	movw	r3, #41320	; 0xa168
   11390:	movt	r3, #2
   11394:	ldr	r5, [r3]
   11398:	mov	r1, #2
   1139c:	mov	r0, r5
   113a0:	bl	14658 <dcngettext@plt+0x3668>
   113a4:	mov	r1, r4
   113a8:	mov	r0, r5
   113ac:	bl	12df4 <dcngettext@plt+0x1e04>
   113b0:	subs	r4, r0, #0
   113b4:	bne	114fc <dcngettext@plt+0x50c>
   113b8:	mov	r0, r5
   113bc:	bl	10f9c <clearerr_unlocked@plt>
   113c0:	cmp	r4, #0
   113c4:	moveq	r4, #1
   113c8:	bne	114b4 <dcngettext@plt+0x4c4>
   113cc:	mov	r0, r4
   113d0:	ldrd	r4, [sp]
   113d4:	ldrd	r6, [sp, #8]
   113d8:	ldr	r8, [sp, #16]
   113dc:	add	sp, sp, #20
   113e0:	pop	{pc}		; (ldr pc, [sp], #4)
   113e4:	movw	r1, #32912	; 0x8090
   113e8:	movt	r1, #1
   113ec:	mov	r0, r6
   113f0:	bl	147c4 <dcngettext@plt+0x37d4>
   113f4:	subs	r7, r0, #0
   113f8:	beq	11450 <dcngettext@plt+0x460>
   113fc:	mov	r1, #2
   11400:	mov	r0, r7
   11404:	bl	14658 <dcngettext@plt+0x3668>
   11408:	mov	r1, r4
   1140c:	mov	r0, r7
   11410:	bl	12df4 <dcngettext@plt+0x1e04>
   11414:	cmp	r0, #0
   11418:	beq	114e4 <dcngettext@plt+0x4f4>
   1141c:	bl	10ef4 <__errno_location@plt>
   11420:	ldr	r4, [r0]
   11424:	mov	r0, r7
   11428:	bl	14698 <dcngettext@plt+0x36a8>
   1142c:	adds	r0, r0, #0
   11430:	movne	r0, #1
   11434:	cmp	r4, #0
   11438:	movne	r0, #0
   1143c:	cmp	r0, #0
   11440:	beq	113c0 <dcngettext@plt+0x3d0>
   11444:	bl	10ef4 <__errno_location@plt>
   11448:	ldr	r4, [r0]
   1144c:	b	113c0 <dcngettext@plt+0x3d0>
   11450:	movw	r3, #41332	; 0xa174
   11454:	movt	r3, #2
   11458:	ldrb	r4, [r3, #5]
   1145c:	cmp	r4, #0
   11460:	beq	1147c <dcngettext@plt+0x48c>
   11464:	bl	10ef4 <__errno_location@plt>
   11468:	ldr	r3, [r0]
   1146c:	cmp	r3, #2
   11470:	moveq	r3, #1
   11474:	strbeq	r3, [r5]
   11478:	beq	113cc <dcngettext@plt+0x3dc>
   1147c:	bl	10ef4 <__errno_location@plt>
   11480:	ldr	r4, [r0]
   11484:	mov	r2, r6
   11488:	mov	r1, #3
   1148c:	mov	r0, #0
   11490:	bl	16ac4 <dcngettext@plt+0x5ad4>
   11494:	mov	r3, r0
   11498:	movw	r2, #36040	; 0x8cc8
   1149c:	movt	r2, #1
   114a0:	mov	r1, r4
   114a4:	mov	r0, #0
   114a8:	bl	10e70 <error@plt>
   114ac:	mov	r4, #0
   114b0:	b	113cc <dcngettext@plt+0x3dc>
   114b4:	mov	r2, r6
   114b8:	mov	r1, #3
   114bc:	mov	r0, #0
   114c0:	bl	16ac4 <dcngettext@plt+0x5ad4>
   114c4:	mov	r3, r0
   114c8:	movw	r2, #36040	; 0x8cc8
   114cc:	movt	r2, #1
   114d0:	mov	r1, r4
   114d4:	mov	r0, #0
   114d8:	bl	10e70 <error@plt>
   114dc:	mov	r4, #0
   114e0:	b	113cc <dcngettext@plt+0x3dc>
   114e4:	mov	r0, r7
   114e8:	bl	14698 <dcngettext@plt+0x36a8>
   114ec:	cmp	r0, #0
   114f0:	moveq	r4, #1
   114f4:	beq	113cc <dcngettext@plt+0x3dc>
   114f8:	b	11444 <dcngettext@plt+0x454>
   114fc:	bl	10ef4 <__errno_location@plt>
   11500:	ldr	r4, [r0]
   11504:	b	113b8 <dcngettext@plt+0x3c8>
   11508:	push	{lr}		; (str lr, [sp, #-4]!)
   1150c:	sub	sp, sp, #60	; 0x3c
   11510:	subs	r5, r0, #0
   11514:	beq	1155c <dcngettext@plt+0x56c>
   11518:	movw	r3, #41312	; 0xa160
   1151c:	movt	r3, #2
   11520:	ldr	r4, [r3]
   11524:	mov	r2, #5
   11528:	movw	r1, #32924	; 0x809c
   1152c:	movt	r1, #1
   11530:	mov	r0, #0
   11534:	bl	10e04 <dcgettext@plt>
   11538:	movw	r3, #41356	; 0xa18c
   1153c:	movt	r3, #2
   11540:	ldr	r3, [r3]
   11544:	mov	r2, r0
   11548:	mov	r1, #1
   1154c:	mov	r0, r4
   11550:	bl	10f3c <__fprintf_chk@plt>
   11554:	mov	r0, r5
   11558:	bl	10ed0 <exit@plt>
   1155c:	mov	r2, #5
   11560:	movw	r1, #32964	; 0x80c4
   11564:	movt	r1, #1
   11568:	mov	r0, #0
   1156c:	bl	10e04 <dcgettext@plt>
   11570:	movw	r3, #41356	; 0xa18c
   11574:	movt	r3, #2
   11578:	ldr	r2, [r3]
   1157c:	mov	r1, r0
   11580:	mov	r0, #1
   11584:	bl	10f24 <__printf_chk@plt>
   11588:	mov	r2, #5
   1158c:	movw	r1, #33000	; 0x80e8
   11590:	movt	r1, #1
   11594:	mov	r0, #0
   11598:	bl	10e04 <dcgettext@plt>
   1159c:	mov	r3, #160	; 0xa0
   115a0:	movw	r2, #33040	; 0x8110
   115a4:	movt	r2, #1
   115a8:	mov	r1, r0
   115ac:	mov	r0, #1
   115b0:	bl	10f24 <__printf_chk@plt>
   115b4:	mov	r2, #5
   115b8:	movw	r1, #33048	; 0x8118
   115bc:	movt	r1, #1
   115c0:	mov	r0, #0
   115c4:	bl	10e04 <dcgettext@plt>
   115c8:	movw	r4, #41324	; 0xa16c
   115cc:	movt	r4, #2
   115d0:	ldr	r1, [r4]
   115d4:	bl	10d68 <fputs_unlocked@plt>
   115d8:	mov	r2, #5
   115dc:	movw	r1, #33104	; 0x8150
   115e0:	movt	r1, #1
   115e4:	mov	r0, #0
   115e8:	bl	10e04 <dcgettext@plt>
   115ec:	ldr	r1, [r4]
   115f0:	bl	10d68 <fputs_unlocked@plt>
   115f4:	mov	r2, #5
   115f8:	movw	r1, #33152	; 0x8180
   115fc:	movt	r1, #1
   11600:	mov	r0, #0
   11604:	bl	10e04 <dcgettext@plt>
   11608:	ldr	r1, [r4]
   1160c:	bl	10d68 <fputs_unlocked@plt>
   11610:	mov	r2, #5
   11614:	movw	r1, #33224	; 0x81c8
   11618:	movt	r1, #1
   1161c:	mov	r0, #0
   11620:	bl	10e04 <dcgettext@plt>
   11624:	ldr	r1, [r4]
   11628:	bl	10d68 <fputs_unlocked@plt>
   1162c:	mov	r2, #5
   11630:	movw	r1, #33280	; 0x8200
   11634:	movt	r1, #1
   11638:	mov	r0, #0
   1163c:	bl	10e04 <dcgettext@plt>
   11640:	ldr	r1, [r4]
   11644:	bl	10d68 <fputs_unlocked@plt>
   11648:	mov	r2, #5
   1164c:	movw	r1, #33336	; 0x8238
   11650:	movt	r1, #1
   11654:	mov	r0, #0
   11658:	bl	10e04 <dcgettext@plt>
   1165c:	ldr	r1, [r4]
   11660:	bl	10d68 <fputs_unlocked@plt>
   11664:	mov	r2, #5
   11668:	movw	r1, #33464	; 0x82b8
   1166c:	movt	r1, #1
   11670:	mov	r0, #0
   11674:	bl	10e04 <dcgettext@plt>
   11678:	ldr	r1, [r4]
   1167c:	bl	10d68 <fputs_unlocked@plt>
   11680:	mov	r2, #5
   11684:	movw	r1, #33904	; 0x8470
   11688:	movt	r1, #1
   1168c:	mov	r0, #0
   11690:	bl	10e04 <dcgettext@plt>
   11694:	ldr	r1, [r4]
   11698:	bl	10d68 <fputs_unlocked@plt>
   1169c:	mov	r2, #5
   116a0:	movw	r1, #33952	; 0x84a0
   116a4:	movt	r1, #1
   116a8:	mov	r0, #0
   116ac:	bl	10e04 <dcgettext@plt>
   116b0:	ldr	r1, [r4]
   116b4:	bl	10d68 <fputs_unlocked@plt>
   116b8:	mov	r2, #5
   116bc:	movw	r1, #34008	; 0x84d8
   116c0:	movt	r1, #1
   116c4:	mov	r0, #0
   116c8:	bl	10e04 <dcgettext@plt>
   116cc:	movw	r2, #34052	; 0x8504
   116d0:	movt	r2, #1
   116d4:	mov	r1, r0
   116d8:	mov	r0, #1
   116dc:	bl	10f24 <__printf_chk@plt>
   116e0:	mov	r2, #5
   116e4:	movw	r1, #34064	; 0x8510
   116e8:	movt	r1, #1
   116ec:	mov	r0, #0
   116f0:	bl	10e04 <dcgettext@plt>
   116f4:	ldr	r1, [r4]
   116f8:	bl	10d68 <fputs_unlocked@plt>
   116fc:	movw	r0, #32616	; 0x7f68
   11700:	movt	r0, #1
   11704:	ldr	r1, [r0]
   11708:	ldr	r3, [r0, #4]
   1170c:	str	r1, [sp]
   11710:	str	r3, [sp, #4]
   11714:	ldrd	r2, [r0, #8]
   11718:	strd	r2, [sp, #8]
   1171c:	ldrd	r2, [r0, #16]
   11720:	strd	r2, [sp, #16]
   11724:	ldrd	r2, [r0, #24]
   11728:	strd	r2, [sp, #24]
   1172c:	ldrd	r2, [r0, #32]
   11730:	strd	r2, [sp, #32]
   11734:	ldrd	r2, [r0, #40]	; 0x28
   11738:	strd	r2, [sp, #40]	; 0x28
   1173c:	ldrd	r2, [r0, #48]	; 0x30
   11740:	strd	r2, [sp, #48]	; 0x30
   11744:	cmp	r1, #0
   11748:	moveq	r4, sp
   1174c:	beq	11778 <dcngettext@plt+0x788>
   11750:	mov	r4, sp
   11754:	movw	r6, #32916	; 0x8094
   11758:	movt	r6, #1
   1175c:	mov	r0, r6
   11760:	bl	10d8c <strcmp@plt>
   11764:	cmp	r0, #0
   11768:	beq	11778 <dcngettext@plt+0x788>
   1176c:	ldr	r1, [r4, #8]!
   11770:	cmp	r1, #0
   11774:	bne	1175c <dcngettext@plt+0x76c>
   11778:	ldr	r4, [r4, #4]
   1177c:	cmp	r4, #0
   11780:	beq	118dc <dcngettext@plt+0x8ec>
   11784:	mov	r2, #5
   11788:	movw	r1, #34400	; 0x8660
   1178c:	movt	r1, #1
   11790:	mov	r0, #0
   11794:	bl	10e04 <dcgettext@plt>
   11798:	movw	r3, #34424	; 0x8678
   1179c:	movt	r3, #1
   117a0:	movw	r2, #34464	; 0x86a0
   117a4:	movt	r2, #1
   117a8:	mov	r1, r0
   117ac:	mov	r0, #1
   117b0:	bl	10f24 <__printf_chk@plt>
   117b4:	mov	r1, #0
   117b8:	mov	r0, #5
   117bc:	bl	10f78 <setlocale@plt>
   117c0:	cmp	r0, #0
   117c4:	beq	117e0 <dcngettext@plt+0x7f0>
   117c8:	mov	r2, #3
   117cc:	movw	r1, #34480	; 0x86b0
   117d0:	movt	r1, #1
   117d4:	bl	10fcc <strncmp@plt>
   117d8:	cmp	r0, #0
   117dc:	bne	1185c <dcngettext@plt+0x86c>
   117e0:	mov	r2, #5
   117e4:	movw	r1, #34556	; 0x86fc
   117e8:	movt	r1, #1
   117ec:	mov	r0, #0
   117f0:	bl	10e04 <dcgettext@plt>
   117f4:	movw	r6, #32916	; 0x8094
   117f8:	movt	r6, #1
   117fc:	mov	r3, r6
   11800:	movw	r2, #34424	; 0x8678
   11804:	movt	r2, #1
   11808:	mov	r1, r0
   1180c:	mov	r0, #1
   11810:	bl	10f24 <__printf_chk@plt>
   11814:	mov	r2, #5
   11818:	movw	r1, #34584	; 0x8718
   1181c:	movt	r1, #1
   11820:	mov	r0, #0
   11824:	bl	10e04 <dcgettext@plt>
   11828:	mov	r1, r0
   1182c:	movw	r2, #35808	; 0x8be0
   11830:	movt	r2, #1
   11834:	movw	r3, #33332	; 0x8234
   11838:	movt	r3, #1
   1183c:	cmp	r4, r6
   11840:	moveq	r3, r2
   11844:	mov	r2, r4
   11848:	mov	r0, #1
   1184c:	bl	10f24 <__printf_chk@plt>
   11850:	b	11554 <dcngettext@plt+0x564>
   11854:	movw	r4, #32916	; 0x8094
   11858:	movt	r4, #1
   1185c:	mov	r2, #5
   11860:	movw	r1, #34484	; 0x86b4
   11864:	movt	r1, #1
   11868:	mov	r0, #0
   1186c:	bl	10e04 <dcgettext@plt>
   11870:	movw	r3, #41324	; 0xa16c
   11874:	movt	r3, #2
   11878:	ldr	r1, [r3]
   1187c:	bl	10d68 <fputs_unlocked@plt>
   11880:	b	117e0 <dcngettext@plt+0x7f0>
   11884:	mov	r2, #5
   11888:	movw	r1, #34556	; 0x86fc
   1188c:	movt	r1, #1
   11890:	mov	r0, #0
   11894:	bl	10e04 <dcgettext@plt>
   11898:	movw	r4, #32916	; 0x8094
   1189c:	movt	r4, #1
   118a0:	mov	r3, r4
   118a4:	movw	r2, #34424	; 0x8678
   118a8:	movt	r2, #1
   118ac:	mov	r1, r0
   118b0:	mov	r0, #1
   118b4:	bl	10f24 <__printf_chk@plt>
   118b8:	mov	r2, #5
   118bc:	movw	r1, #34584	; 0x8718
   118c0:	movt	r1, #1
   118c4:	mov	r0, #0
   118c8:	bl	10e04 <dcgettext@plt>
   118cc:	mov	r1, r0
   118d0:	movw	r3, #35808	; 0x8be0
   118d4:	movt	r3, #1
   118d8:	b	11844 <dcngettext@plt+0x854>
   118dc:	mov	r2, #5
   118e0:	movw	r1, #34400	; 0x8660
   118e4:	movt	r1, #1
   118e8:	mov	r0, #0
   118ec:	bl	10e04 <dcgettext@plt>
   118f0:	movw	r3, #34424	; 0x8678
   118f4:	movt	r3, #1
   118f8:	movw	r2, #34464	; 0x86a0
   118fc:	movt	r2, #1
   11900:	mov	r1, r0
   11904:	mov	r0, #1
   11908:	bl	10f24 <__printf_chk@plt>
   1190c:	mov	r1, #0
   11910:	mov	r0, #5
   11914:	bl	10f78 <setlocale@plt>
   11918:	cmp	r0, #0
   1191c:	beq	11884 <dcngettext@plt+0x894>
   11920:	mov	r2, #3
   11924:	movw	r1, #34480	; 0x86b0
   11928:	movt	r1, #1
   1192c:	bl	10fcc <strncmp@plt>
   11930:	cmp	r0, #0
   11934:	bne	11854 <dcngettext@plt+0x864>
   11938:	mov	r2, #5
   1193c:	movw	r1, #34556	; 0x86fc
   11940:	movt	r1, #1
   11944:	mov	r0, #0
   11948:	bl	10e04 <dcgettext@plt>
   1194c:	movw	r4, #32916	; 0x8094
   11950:	movt	r4, #1
   11954:	mov	r3, r4
   11958:	movw	r2, #34424	; 0x8678
   1195c:	movt	r2, #1
   11960:	mov	r1, r0
   11964:	mov	r0, #1
   11968:	bl	10f24 <__printf_chk@plt>
   1196c:	mov	r2, #5
   11970:	movw	r1, #34584	; 0x8718
   11974:	movt	r1, #1
   11978:	mov	r0, #0
   1197c:	bl	10e04 <dcgettext@plt>
   11980:	mov	r1, r0
   11984:	movw	r3, #35808	; 0x8be0
   11988:	movt	r3, #1
   1198c:	b	11844 <dcngettext@plt+0x854>
   11990:	strd	r4, [sp, #-36]!	; 0xffffffdc
   11994:	strd	r6, [sp, #8]
   11998:	strd	r8, [sp, #16]
   1199c:	strd	sl, [sp, #24]
   119a0:	str	lr, [sp, #32]
   119a4:	sub	sp, sp, #180	; 0xb4
   119a8:	mov	r5, r0
   119ac:	mov	r4, r1
   119b0:	ldr	r0, [r1]
   119b4:	bl	14994 <dcngettext@plt+0x39a4>
   119b8:	movw	r1, #33332	; 0x8234
   119bc:	movt	r1, #1
   119c0:	mov	r0, #6
   119c4:	bl	10f78 <setlocale@plt>
   119c8:	movw	r6, #34468	; 0x86a4
   119cc:	movt	r6, #1
   119d0:	movw	r1, #34636	; 0x874c
   119d4:	movt	r1, #1
   119d8:	mov	r0, r6
   119dc:	bl	10fb4 <bindtextdomain@plt>
   119e0:	mov	r0, r6
   119e4:	bl	10e1c <textdomain@plt>
   119e8:	movw	r0, #11492	; 0x2ce4
   119ec:	movt	r0, #1
   119f0:	bl	17f44 <dcngettext@plt+0x6f54>
   119f4:	movw	r0, #41324	; 0xa16c
   119f8:	movt	r0, #2
   119fc:	mov	r3, #0
   11a00:	mov	r2, #1
   11a04:	mov	r1, r3
   11a08:	ldr	r0, [r0]
   11a0c:	bl	10f0c <setvbuf@plt>
   11a10:	mov	r3, #0
   11a14:	str	r3, [sp, #20]
   11a18:	mvn	r6, #0
   11a1c:	str	r3, [sp, #16]
   11a20:	ldr	r9, [pc, #3816]	; 12910 <dcngettext@plt+0x1920>
   11a24:	movw	r7, #34708	; 0x8794
   11a28:	movt	r7, #1
   11a2c:	movw	r8, #41332	; 0xa174
   11a30:	movt	r8, #2
   11a34:	b	11a58 <dcngettext@plt+0xa68>
   11a38:	cmp	r0, #98	; 0x62
   11a3c:	beq	11bc4 <dcngettext@plt+0xbd4>
   11a40:	ble	11ac0 <dcngettext@plt+0xad0>
   11a44:	cmp	r0, #99	; 0x63
   11a48:	beq	11bcc <dcngettext@plt+0xbdc>
   11a4c:	cmp	r0, #116	; 0x74
   11a50:	bne	11bbc <dcngettext@plt+0xbcc>
   11a54:	mov	r6, #0
   11a58:	mov	r3, #0
   11a5c:	str	r3, [sp]
   11a60:	mov	r3, r9
   11a64:	mov	r2, r7
   11a68:	mov	r1, r4
   11a6c:	mov	r0, r5
   11a70:	bl	10eb8 <getopt_long@plt>
   11a74:	cmn	r0, #1
   11a78:	beq	11bd8 <dcngettext@plt+0xbe8>
   11a7c:	cmp	r0, #119	; 0x77
   11a80:	beq	11b6c <dcngettext@plt+0xb7c>
   11a84:	ble	11a38 <dcngettext@plt+0xa48>
   11a88:	movw	r3, #257	; 0x101
   11a8c:	cmp	r0, r3
   11a90:	beq	11b54 <dcngettext@plt+0xb64>
   11a94:	ble	11b38 <dcngettext@plt+0xb48>
   11a98:	movw	r3, #259	; 0x103
   11a9c:	cmp	r0, r3
   11aa0:	beq	11b9c <dcngettext@plt+0xbac>
   11aa4:	blt	11b84 <dcngettext@plt+0xb94>
   11aa8:	cmp	r0, #260	; 0x104
   11aac:	bne	11bbc <dcngettext@plt+0xbcc>
   11ab0:	mov	r3, #1
   11ab4:	str	r3, [sp, #20]
   11ab8:	mov	r6, r3
   11abc:	b	11a58 <dcngettext@plt+0xa68>
   11ac0:	cmn	r0, #3
   11ac4:	bne	11b28 <dcngettext@plt+0xb38>
   11ac8:	movw	r3, #41220	; 0xa104
   11acc:	movt	r3, #2
   11ad0:	movw	r0, #41324	; 0xa16c
   11ad4:	movt	r0, #2
   11ad8:	mov	r4, #0
   11adc:	str	r4, [sp, #12]
   11ae0:	movw	r2, #34660	; 0x8764
   11ae4:	movt	r2, #1
   11ae8:	str	r2, [sp, #8]
   11aec:	movw	r2, #34676	; 0x8774
   11af0:	movt	r2, #1
   11af4:	str	r2, [sp, #4]
   11af8:	movw	r2, #34692	; 0x8784
   11afc:	movt	r2, #1
   11b00:	str	r2, [sp]
   11b04:	ldr	r3, [r3]
   11b08:	movw	r2, #34464	; 0x86a0
   11b0c:	movt	r2, #1
   11b10:	movw	r1, #32916	; 0x8094
   11b14:	movt	r1, #1
   11b18:	ldr	r0, [r0]
   11b1c:	bl	171ac <dcngettext@plt+0x61bc>
   11b20:	mov	r0, r4
   11b24:	bl	10ed0 <exit@plt>
   11b28:	cmn	r0, #2
   11b2c:	bne	11bbc <dcngettext@plt+0xbcc>
   11b30:	mov	r0, #0
   11b34:	bl	11508 <dcngettext@plt+0x518>
   11b38:	cmp	r0, #122	; 0x7a
   11b3c:	beq	11ba8 <dcngettext@plt+0xbb8>
   11b40:	cmp	r0, #256	; 0x100
   11b44:	bne	11bbc <dcngettext@plt+0xbcc>
   11b48:	mov	r3, #1
   11b4c:	strb	r3, [r8, #5]
   11b50:	b	11a58 <dcngettext@plt+0xa68>
   11b54:	mov	r3, #1
   11b58:	strb	r3, [r8, #6]
   11b5c:	mov	r3, #0
   11b60:	strb	r3, [r8, #7]
   11b64:	strb	r3, [r8, #8]
   11b68:	b	11a58 <dcngettext@plt+0xa68>
   11b6c:	mov	r3, #0
   11b70:	strb	r3, [r8, #6]
   11b74:	mov	r2, #1
   11b78:	strb	r2, [r8, #7]
   11b7c:	strb	r3, [r8, #8]
   11b80:	b	11a58 <dcngettext@plt+0xa68>
   11b84:	mov	r3, #0
   11b88:	strb	r3, [r8, #6]
   11b8c:	strb	r3, [r8, #7]
   11b90:	mov	r3, #1
   11b94:	strb	r3, [r8, #8]
   11b98:	b	11a58 <dcngettext@plt+0xa68>
   11b9c:	mov	r3, #1
   11ba0:	strb	r3, [r8, #9]
   11ba4:	b	11a58 <dcngettext@plt+0xa68>
   11ba8:	movw	r3, #41212	; 0xa0fc
   11bac:	movt	r3, #2
   11bb0:	mov	r2, #0
   11bb4:	strb	r2, [r3]
   11bb8:	b	11a58 <dcngettext@plt+0xa68>
   11bbc:	mov	r0, #1
   11bc0:	bl	11508 <dcngettext@plt+0x518>
   11bc4:	mov	r6, #1
   11bc8:	b	11a58 <dcngettext@plt+0xa68>
   11bcc:	mov	r3, #1
   11bd0:	str	r3, [sp, #16]
   11bd4:	b	11a58 <dcngettext@plt+0xa68>
   11bd8:	movw	r3, #41332	; 0xa174
   11bdc:	movt	r3, #2
   11be0:	mov	r2, #42	; 0x2a
   11be4:	str	r2, [r3, #12]
   11be8:	mov	r2, #40	; 0x28
   11bec:	str	r2, [r3]
   11bf0:	ldr	r3, [sp, #20]
   11bf4:	cmp	r6, #0
   11bf8:	movne	r3, #0
   11bfc:	cmp	r3, #0
   11c00:	bne	11d38 <dcngettext@plt+0xd48>
   11c04:	movw	r3, #41212	; 0xa0fc
   11c08:	movt	r3, #2
   11c0c:	ldrb	r3, [r3]
   11c10:	ldr	r2, [sp, #16]
   11c14:	cmp	r3, #10
   11c18:	moveq	r2, #0
   11c1c:	andne	r2, r2, #1
   11c20:	cmp	r2, #0
   11c24:	bne	11d64 <dcngettext@plt+0xd74>
   11c28:	ldr	r3, [sp, #16]
   11c2c:	ldr	r2, [sp, #20]
   11c30:	tst	r3, r2
   11c34:	bne	11d90 <dcngettext@plt+0xda0>
   11c38:	ldr	r3, [sp, #16]
   11c3c:	cmp	r6, #0
   11c40:	movlt	r3, #0
   11c44:	andge	r3, r3, #1
   11c48:	cmp	r3, #0
   11c4c:	bne	11dbc <dcngettext@plt+0xdcc>
   11c50:	movw	r3, #41332	; 0xa174
   11c54:	movt	r3, #2
   11c58:	ldrb	r3, [r3, #5]
   11c5c:	eor	r3, r3, #1
   11c60:	ldr	r2, [sp, #16]
   11c64:	orrs	r3, r2, r3
   11c68:	beq	11de8 <dcngettext@plt+0xdf8>
   11c6c:	movw	r3, #41332	; 0xa174
   11c70:	movt	r3, #2
   11c74:	ldrb	r3, [r3, #6]
   11c78:	eor	r3, r3, #1
   11c7c:	ldr	r2, [sp, #16]
   11c80:	orrs	r3, r2, r3
   11c84:	beq	11e14 <dcngettext@plt+0xe24>
   11c88:	movw	r3, #41332	; 0xa174
   11c8c:	movt	r3, #2
   11c90:	ldrb	r3, [r3, #7]
   11c94:	eor	r3, r3, #1
   11c98:	ldr	r2, [sp, #16]
   11c9c:	orrs	r3, r2, r3
   11ca0:	beq	11e40 <dcngettext@plt+0xe50>
   11ca4:	movw	r3, #41332	; 0xa174
   11ca8:	movt	r3, #2
   11cac:	ldrb	r3, [r3, #8]
   11cb0:	eor	r3, r3, #1
   11cb4:	ldr	r2, [sp, #16]
   11cb8:	orrs	r3, r2, r3
   11cbc:	str	r3, [sp, #64]	; 0x40
   11cc0:	beq	11e6c <dcngettext@plt+0xe7c>
   11cc4:	movw	r2, #41332	; 0xa174
   11cc8:	movt	r2, #2
   11ccc:	ldr	r3, [sp, #16]
   11cd0:	eor	r3, r3, #1
   11cd4:	ldrb	r2, [r2, #9]
   11cd8:	ands	r3, r2, r3
   11cdc:	str	r3, [sp, #56]	; 0x38
   11ce0:	bne	11e98 <dcngettext@plt+0xea8>
   11ce4:	bic	r3, r6, r6, asr #31
   11ce8:	str	r3, [sp, #88]	; 0x58
   11cec:	add	r3, r4, r5, lsl #2
   11cf0:	str	r3, [sp, #80]	; 0x50
   11cf4:	movw	r3, #41304	; 0xa158
   11cf8:	movt	r3, #2
   11cfc:	ldr	r3, [r3]
   11d00:	cmp	r3, r5
   11d04:	beq	11ec4 <dcngettext@plt+0xed4>
   11d08:	movw	r3, #41304	; 0xa158
   11d0c:	movt	r3, #2
   11d10:	ldr	r3, [r3]
   11d14:	add	r4, r4, r3, lsl #2
   11d18:	ldr	r3, [sp, #80]	; 0x50
   11d1c:	cmp	r3, r4
   11d20:	bls	12b78 <dcngettext@plt+0x1b88>
   11d24:	str	r4, [sp, #32]
   11d28:	movw	r3, #32616	; 0x7f68
   11d2c:	movt	r3, #1
   11d30:	str	r3, [sp, #92]	; 0x5c
   11d34:	b	12824 <dcngettext@plt+0x1834>
   11d38:	mov	r2, #5
   11d3c:	movw	r1, #34716	; 0x879c
   11d40:	movt	r1, #1
   11d44:	mov	r0, #0
   11d48:	bl	10e04 <dcgettext@plt>
   11d4c:	mov	r2, r0
   11d50:	mov	r1, #0
   11d54:	mov	r0, r1
   11d58:	bl	10e70 <error@plt>
   11d5c:	mov	r0, #1
   11d60:	bl	11508 <dcngettext@plt+0x518>
   11d64:	mov	r2, #5
   11d68:	movw	r1, #34752	; 0x87c0
   11d6c:	movt	r1, #1
   11d70:	mov	r0, #0
   11d74:	bl	10e04 <dcgettext@plt>
   11d78:	mov	r2, r0
   11d7c:	mov	r1, #0
   11d80:	mov	r0, r1
   11d84:	bl	10e70 <error@plt>
   11d88:	mov	r0, #1
   11d8c:	bl	11508 <dcngettext@plt+0x518>
   11d90:	mov	r2, #5
   11d94:	movw	r1, #34812	; 0x87fc
   11d98:	movt	r1, #1
   11d9c:	mov	r0, #0
   11da0:	bl	10e04 <dcgettext@plt>
   11da4:	mov	r2, r0
   11da8:	mov	r1, #0
   11dac:	mov	r0, r1
   11db0:	bl	10e70 <error@plt>
   11db4:	mov	r0, #1
   11db8:	bl	11508 <dcngettext@plt+0x518>
   11dbc:	mov	r2, #5
   11dc0:	movw	r1, #34872	; 0x8838
   11dc4:	movt	r1, #1
   11dc8:	mov	r0, #0
   11dcc:	bl	10e04 <dcgettext@plt>
   11dd0:	mov	r2, r0
   11dd4:	mov	r1, #0
   11dd8:	mov	r0, r1
   11ddc:	bl	10e70 <error@plt>
   11de0:	mov	r0, #1
   11de4:	bl	11508 <dcngettext@plt+0x518>
   11de8:	mov	r2, #5
   11dec:	movw	r1, #34948	; 0x8884
   11df0:	movt	r1, #1
   11df4:	mov	r0, #0
   11df8:	bl	10e04 <dcgettext@plt>
   11dfc:	mov	r2, r0
   11e00:	mov	r1, #0
   11e04:	mov	r0, r1
   11e08:	bl	10e70 <error@plt>
   11e0c:	mov	r0, #1
   11e10:	bl	11508 <dcngettext@plt+0x518>
   11e14:	mov	r2, #5
   11e18:	movw	r1, #35020	; 0x88cc
   11e1c:	movt	r1, #1
   11e20:	mov	r0, #0
   11e24:	bl	10e04 <dcgettext@plt>
   11e28:	mov	r2, r0
   11e2c:	mov	r1, #0
   11e30:	mov	r0, r1
   11e34:	bl	10e70 <error@plt>
   11e38:	mov	r0, #1
   11e3c:	bl	11508 <dcngettext@plt+0x518>
   11e40:	mov	r2, #5
   11e44:	movw	r1, #35084	; 0x890c
   11e48:	movt	r1, #1
   11e4c:	mov	r0, #0
   11e50:	bl	10e04 <dcgettext@plt>
   11e54:	mov	r2, r0
   11e58:	mov	r1, #0
   11e5c:	mov	r0, r1
   11e60:	bl	10e70 <error@plt>
   11e64:	mov	r0, #1
   11e68:	bl	11508 <dcngettext@plt+0x518>
   11e6c:	mov	r2, #5
   11e70:	movw	r1, #35148	; 0x894c
   11e74:	movt	r1, #1
   11e78:	mov	r0, #0
   11e7c:	bl	10e04 <dcgettext@plt>
   11e80:	mov	r2, r0
   11e84:	mov	r1, #0
   11e88:	mov	r0, r1
   11e8c:	bl	10e70 <error@plt>
   11e90:	mov	r0, #1
   11e94:	bl	11508 <dcngettext@plt+0x518>
   11e98:	mov	r2, #5
   11e9c:	movw	r1, #35212	; 0x898c
   11ea0:	movt	r1, #1
   11ea4:	mov	r0, #0
   11ea8:	bl	10e04 <dcgettext@plt>
   11eac:	mov	r2, r0
   11eb0:	mov	r1, #0
   11eb4:	mov	r0, r1
   11eb8:	bl	10e70 <error@plt>
   11ebc:	mov	r0, #1
   11ec0:	bl	11508 <dcngettext@plt+0x518>
   11ec4:	movw	r3, #32908	; 0x808c
   11ec8:	movt	r3, #1
   11ecc:	str	r3, [r4, r5, lsl #2]
   11ed0:	ldr	r3, [sp, #80]	; 0x50
   11ed4:	add	r3, r3, #4
   11ed8:	str	r3, [sp, #80]	; 0x50
   11edc:	b	11d08 <dcngettext@plt+0xd18>
   11ee0:	movw	r1, #32912	; 0x8090
   11ee4:	movt	r1, #1
   11ee8:	ldr	r0, [sp, #36]	; 0x24
   11eec:	bl	147c4 <dcngettext@plt+0x37d4>
   11ef0:	subs	r4, r0, #0
   11ef4:	bne	12888 <dcngettext@plt+0x1898>
   11ef8:	bl	10ef4 <__errno_location@plt>
   11efc:	ldr	r4, [r0]
   11f00:	ldr	r2, [sp, #36]	; 0x24
   11f04:	mov	r1, #3
   11f08:	mov	r0, #0
   11f0c:	bl	16ac4 <dcngettext@plt+0x5ad4>
   11f10:	mov	r3, r0
   11f14:	movw	r2, #36040	; 0x8cc8
   11f18:	movt	r2, #1
   11f1c:	mov	r1, r4
   11f20:	mov	r0, #0
   11f24:	bl	10e70 <error@plt>
   11f28:	ldr	r3, [sp, #56]	; 0x38
   11f2c:	b	12808 <dcngettext@plt+0x1818>
   11f30:	mov	r2, #5
   11f34:	movw	r1, #35292	; 0x89dc
   11f38:	movt	r1, #1
   11f3c:	mov	r0, #0
   11f40:	bl	10e04 <dcgettext@plt>
   11f44:	mov	r4, r0
   11f48:	ldr	r2, [sp, #36]	; 0x24
   11f4c:	mov	r1, #3
   11f50:	mov	r0, #0
   11f54:	bl	16ac4 <dcngettext@plt+0x5ad4>
   11f58:	mov	r3, r0
   11f5c:	mov	r2, r4
   11f60:	mov	r1, #0
   11f64:	mov	r0, #1
   11f68:	bl	10e70 <error@plt>
   11f6c:	mov	r8, #0
   11f70:	b	12168 <dcngettext@plt+0x1178>
   11f74:	ldrb	r3, [r9, r3]
   11f78:	cmp	r3, #41	; 0x29
   11f7c:	bne	1208c <dcngettext@plt+0x109c>
   11f80:	mov	r6, r8
   11f84:	mov	r5, #0
   11f88:	b	121fc <dcngettext@plt+0x120c>
   11f8c:	mov	r1, r5
   11f90:	mov	r0, r8
   11f94:	bl	110ec <dcngettext@plt+0xfc>
   11f98:	cmp	r0, #0
   11f9c:	bne	12208 <dcngettext@plt+0x1218>
   11fa0:	b	1208c <dcngettext@plt+0x109c>
   11fa4:	sub	r2, r5, r8
   11fa8:	ldrb	r0, [r9, r8]
   11fac:	movw	r1, #41332	; 0xa174
   11fb0:	movt	r1, #2
   11fb4:	ldr	r3, [r1, #12]
   11fb8:	cmp	r0, #92	; 0x5c
   11fbc:	addeq	r3, r3, #1
   11fc0:	cmp	r2, r3
   11fc4:	bcc	1208c <dcngettext@plt+0x109c>
   11fc8:	ldr	r3, [r1]
   11fcc:	add	r8, r8, r3
   11fd0:	ldrb	r3, [r9, r8]
   11fd4:	cmp	r3, #32
   11fd8:	cmpne	r3, #9
   11fdc:	bne	1208c <dcngettext@plt+0x109c>
   11fe0:	mov	r3, #0
   11fe4:	strb	r3, [r9, r8]
   11fe8:	mov	r0, r6
   11fec:	bl	111d0 <dcngettext@plt+0x1e0>
   11ff0:	cmp	r0, #0
   11ff4:	beq	1208c <dcngettext@plt+0x109c>
   11ff8:	add	r1, r8, #1
   11ffc:	sub	r3, r5, r1
   12000:	cmp	r3, #1
   12004:	beq	12018 <dcngettext@plt+0x1028>
   12008:	ldrb	r3, [r9, r1]
   1200c:	cmp	r3, #32
   12010:	cmpne	r3, #42	; 0x2a
   12014:	beq	12270 <dcngettext@plt+0x1280>
   12018:	movw	r3, #41212	; 0xa0fc
   1201c:	movt	r3, #2
   12020:	ldr	r3, [r3, #4]
   12024:	cmp	r3, #0
   12028:	beq	1208c <dcngettext@plt+0x109c>
   1202c:	movw	r3, #41212	; 0xa0fc
   12030:	movt	r3, #2
   12034:	mov	r2, #1
   12038:	str	r2, [r3, #4]
   1203c:	add	r8, r9, r1
   12040:	ldr	r3, [sp, #44]	; 0x2c
   12044:	cmp	r3, #0
   12048:	beq	12068 <dcngettext@plt+0x1078>
   1204c:	sub	r1, r5, r1
   12050:	mov	r0, r8
   12054:	bl	110ec <dcngettext@plt+0xfc>
   12058:	adds	r0, r0, #0
   1205c:	movne	r0, #1
   12060:	cmp	r0, #0
   12064:	beq	1208c <dcngettext@plt+0x109c>
   12068:	ldr	r3, [sp, #60]	; 0x3c
   1206c:	cmp	r3, #0
   12070:	bne	122f8 <dcngettext@plt+0x1308>
   12074:	movw	r1, #32908	; 0x808c
   12078:	movt	r1, #1
   1207c:	mov	r0, r8
   12080:	bl	10d8c <strcmp@plt>
   12084:	cmp	r0, #0
   12088:	bne	122f8 <dcngettext@plt+0x1308>
   1208c:	ldr	r3, [sp, #24]
   12090:	adds	r3, r3, #1
   12094:	str	r3, [sp, #24]
   12098:	ldr	r3, [sp, #28]
   1209c:	adc	r3, r3, #0
   120a0:	str	r3, [sp, #28]
   120a4:	movw	r3, #41332	; 0xa174
   120a8:	movt	r3, #2
   120ac:	ldrb	r3, [r3, #7]
   120b0:	cmp	r3, #0
   120b4:	bne	122ac <dcngettext@plt+0x12bc>
   120b8:	ldr	r3, [r4]
   120bc:	tst	r3, #48	; 0x30
   120c0:	bne	12518 <dcngettext@plt+0x1528>
   120c4:	adds	sl, sl, #1
   120c8:	adc	fp, fp, #0
   120cc:	orrs	r3, sl, fp
   120d0:	beq	11f30 <dcngettext@plt+0xf40>
   120d4:	mov	r3, r4
   120d8:	mov	r2, #10
   120dc:	add	r1, sp, #112	; 0x70
   120e0:	add	r0, sp, #108	; 0x6c
   120e4:	bl	10d80 <__getdelim@plt>
   120e8:	subs	r5, r0, #0
   120ec:	ble	12518 <dcngettext@plt+0x1528>
   120f0:	ldr	r3, [sp, #108]	; 0x6c
   120f4:	ldrb	r2, [r3]
   120f8:	cmp	r2, #35	; 0x23
   120fc:	beq	120b8 <dcngettext@plt+0x10c8>
   12100:	add	r2, r3, r5
   12104:	ldrb	r0, [r2, #-1]
   12108:	cmp	r0, #10
   1210c:	subeq	r5, r5, #1
   12110:	cmp	r5, #0
   12114:	movle	r2, r5
   12118:	subgt	r2, r5, #1
   1211c:	ldrb	r0, [r3, r2]
   12120:	cmp	r0, #13
   12124:	subeq	r5, r5, #1
   12128:	cmp	r5, #0
   1212c:	beq	120b8 <dcngettext@plt+0x10c8>
   12130:	mov	r2, #0
   12134:	strb	r2, [r3, r5]
   12138:	ldr	r9, [sp, #108]	; 0x6c
   1213c:	ldrb	r3, [r9]
   12140:	cmp	r3, #32
   12144:	cmpne	r3, #9
   12148:	bne	11f6c <dcngettext@plt+0xf7c>
   1214c:	mov	r2, r9
   12150:	rsb	r1, r9, #1
   12154:	add	r8, r1, r2
   12158:	ldrb	r3, [r2, #1]!
   1215c:	cmp	r3, #9
   12160:	cmpne	r3, #32
   12164:	beq	12154 <dcngettext@plt+0x1164>
   12168:	cmp	r3, #92	; 0x5c
   1216c:	addeq	r8, r8, #1
   12170:	ldreq	r3, [sp, #16]
   12174:	ldrne	r3, [sp, #56]	; 0x38
   12178:	str	r3, [sp, #44]	; 0x2c
   1217c:	add	r6, r9, r8
   12180:	mov	r2, #4
   12184:	ldr	r1, [sp, #40]	; 0x28
   12188:	mov	r0, r6
   1218c:	bl	10fcc <strncmp@plt>
   12190:	cmp	r0, #0
   12194:	bne	11fa4 <dcngettext@plt+0xfb4>
   12198:	add	r3, r8, #4
   1219c:	ldrb	r2, [r9, r3]
   121a0:	cmp	r2, #32
   121a4:	addeq	r3, r8, #5
   121a8:	ldrb	r2, [r9, r3]
   121ac:	cmp	r2, #40	; 0x28
   121b0:	bne	1208c <dcngettext@plt+0x109c>
   121b4:	add	r3, r3, #1
   121b8:	mov	r2, #0
   121bc:	str	r2, [sp, #116]	; 0x74
   121c0:	subs	r5, r5, r3
   121c4:	beq	1208c <dcngettext@plt+0x109c>
   121c8:	add	r8, r9, r3
   121cc:	subs	r5, r5, #1
   121d0:	beq	11f74 <dcngettext@plt+0xf84>
   121d4:	add	r2, r8, r5
   121d8:	ldrb	r1, [r8, r5]
   121dc:	cmp	r1, #41	; 0x29
   121e0:	beq	121f8 <dcngettext@plt+0x1208>
   121e4:	subs	r5, r5, #1
   121e8:	beq	11f74 <dcngettext@plt+0xf84>
   121ec:	ldrb	r1, [r2, #-1]!
   121f0:	cmp	r1, #41	; 0x29
   121f4:	bne	121e4 <dcngettext@plt+0x11f4>
   121f8:	add	r6, r8, r5
   121fc:	ldr	r3, [sp, #44]	; 0x2c
   12200:	cmp	r3, #0
   12204:	bne	11f8c <dcngettext@plt+0xf9c>
   12208:	add	r5, r5, #1
   1220c:	mov	r3, #0
   12210:	strb	r3, [r6]
   12214:	add	r2, r8, r5
   12218:	ldrb	r3, [r8, r5]
   1221c:	cmp	r3, #9
   12220:	cmpne	r3, #32
   12224:	bne	12240 <dcngettext@plt+0x1250>
   12228:	rsb	r1, r8, #1
   1222c:	add	r5, r1, r2
   12230:	ldrb	r3, [r2, #1]!
   12234:	cmp	r3, #9
   12238:	cmpne	r3, #32
   1223c:	beq	1222c <dcngettext@plt+0x123c>
   12240:	cmp	r3, #61	; 0x3d
   12244:	bne	1208c <dcngettext@plt+0x109c>
   12248:	add	r5, r5, #1
   1224c:	add	r3, r8, r5
   12250:	mov	r6, r3
   12254:	ldrb	r2, [r3], #1
   12258:	cmp	r2, #9
   1225c:	cmpne	r2, #32
   12260:	beq	12250 <dcngettext@plt+0x1260>
   12264:	mov	r0, r6
   12268:	bl	111d0 <dcngettext@plt+0x1e0>
   1226c:	b	12060 <dcngettext@plt+0x1070>
   12270:	movw	r2, #41212	; 0xa0fc
   12274:	movt	r2, #2
   12278:	ldr	r2, [r2, #4]
   1227c:	cmp	r2, #1
   12280:	beq	1203c <dcngettext@plt+0x104c>
   12284:	movw	r2, #41212	; 0xa0fc
   12288:	movt	r2, #2
   1228c:	mov	r1, #0
   12290:	str	r1, [r2, #4]
   12294:	add	r1, r8, #2
   12298:	cmp	r3, #42	; 0x2a
   1229c:	movne	r3, #0
   122a0:	moveq	r3, #1
   122a4:	str	r3, [sp, #116]	; 0x74
   122a8:	b	1203c <dcngettext@plt+0x104c>
   122ac:	mov	r2, #5
   122b0:	movw	r1, #35320	; 0x89f8
   122b4:	movt	r1, #1
   122b8:	mov	r0, #0
   122bc:	bl	10e04 <dcgettext@plt>
   122c0:	mov	r5, r0
   122c4:	ldr	r2, [sp, #36]	; 0x24
   122c8:	mov	r1, #3
   122cc:	mov	r0, #0
   122d0:	bl	16ac4 <dcngettext@plt+0x5ad4>
   122d4:	ldr	r3, [sp, #40]	; 0x28
   122d8:	str	r3, [sp, #8]
   122dc:	strd	sl, [sp]
   122e0:	mov	r3, r0
   122e4:	mov	r2, r5
   122e8:	mov	r1, #0
   122ec:	mov	r0, r1
   122f0:	bl	10e70 <error@plt>
   122f4:	b	120b8 <dcngettext@plt+0x10c8>
   122f8:	movw	r3, #41332	; 0xa174
   122fc:	movt	r3, #2
   12300:	ldrb	r3, [r3, #6]
   12304:	cmp	r3, #0
   12308:	movne	r0, #0
   1230c:	bne	12324 <dcngettext@plt+0x1334>
   12310:	mov	r1, #10
   12314:	mov	r0, r8
   12318:	bl	10ee8 <strchr@plt>
   1231c:	adds	r0, r0, #0
   12320:	movne	r0, #1
   12324:	mov	r5, r0
   12328:	str	r0, [sp, #44]	; 0x2c
   1232c:	add	r3, sp, #120	; 0x78
   12330:	str	r3, [sp]
   12334:	add	r3, sp, #107	; 0x6b
   12338:	add	r2, sp, #128	; 0x80
   1233c:	add	r1, sp, #116	; 0x74
   12340:	mov	r0, r8
   12344:	bl	11344 <dcngettext@plt+0x354>
   12348:	subs	r3, r0, #0
   1234c:	str	r3, [sp, #68]	; 0x44
   12350:	bne	123f8 <dcngettext@plt+0x1408>
   12354:	ldr	r3, [sp, #48]	; 0x30
   12358:	adds	r3, r3, #1
   1235c:	str	r3, [sp, #48]	; 0x30
   12360:	ldr	r3, [sp, #52]	; 0x34
   12364:	adc	r3, r3, #0
   12368:	str	r3, [sp, #52]	; 0x34
   1236c:	movw	r3, #41332	; 0xa174
   12370:	movt	r3, #2
   12374:	ldrb	r3, [r3, #6]
   12378:	cmp	r3, #0
   1237c:	bne	12418 <dcngettext@plt+0x1428>
   12380:	cmp	r5, #0
   12384:	beq	123b4 <dcngettext@plt+0x13c4>
   12388:	movw	r3, #41324	; 0xa16c
   1238c:	movt	r3, #2
   12390:	ldr	r0, [r3]
   12394:	ldr	r3, [r0, #20]
   12398:	ldr	r2, [r0, #24]
   1239c:	cmp	r3, r2
   123a0:	addcc	r2, r3, #1
   123a4:	strcc	r2, [r0, #20]
   123a8:	movcc	r2, #92	; 0x5c
   123ac:	strbcc	r2, [r3]
   123b0:	bcs	123ec <dcngettext@plt+0x13fc>
   123b4:	ldr	r1, [sp, #44]	; 0x2c
   123b8:	mov	r0, r8
   123bc:	bl	11248 <dcngettext@plt+0x258>
   123c0:	mov	r2, #5
   123c4:	movw	r1, #35368	; 0x8a28
   123c8:	movt	r1, #1
   123cc:	mov	r0, #0
   123d0:	bl	10e04 <dcgettext@plt>
   123d4:	mov	r2, r0
   123d8:	movw	r1, #35388	; 0x8a3c
   123dc:	movt	r1, #1
   123e0:	mov	r0, #1
   123e4:	bl	10f24 <__printf_chk@plt>
   123e8:	b	12418 <dcngettext@plt+0x1428>
   123ec:	mov	r1, #92	; 0x5c
   123f0:	bl	10f6c <__overflow@plt>
   123f4:	b	123b4 <dcngettext@plt+0x13c4>
   123f8:	movw	r3, #41332	; 0xa174
   123fc:	movt	r3, #2
   12400:	ldrb	r3, [r3, #5]
   12404:	cmp	r3, #0
   12408:	beq	12424 <dcngettext@plt+0x1434>
   1240c:	ldrb	r3, [sp, #107]	; 0x6b
   12410:	cmp	r3, #0
   12414:	beq	12424 <dcngettext@plt+0x1434>
   12418:	ldr	r3, [sp, #16]
   1241c:	str	r3, [sp, #68]	; 0x44
   12420:	b	120b8 <dcngettext@plt+0x10c8>
   12424:	movw	r3, #41332	; 0xa174
   12428:	movt	r3, #2
   1242c:	ldr	r3, [r3]
   12430:	lsr	r9, r3, #1
   12434:	cmp	r3, #1
   12438:	bls	12bf8 <dcngettext@plt+0x1c08>
   1243c:	bl	10ea0 <__ctype_tolower_loc@plt>
   12440:	ldr	r1, [r0]
   12444:	add	r2, sp, #127	; 0x7f
   12448:	mov	r5, #0
   1244c:	add	ip, r6, #1
   12450:	ldrb	r3, [r2, #1]!
   12454:	ldrb	lr, [r6, r5, lsl #1]
   12458:	add	r0, r7, r3, lsr #4
   1245c:	ldrb	r0, [r0, #264]	; 0x108
   12460:	ldr	lr, [r1, lr, lsl #2]
   12464:	cmp	lr, r0
   12468:	bne	12494 <dcngettext@plt+0x14a4>
   1246c:	ldrb	r0, [ip, r5, lsl #1]
   12470:	and	r3, r3, #15
   12474:	add	r3, r7, r3
   12478:	ldrb	r3, [r3, #264]	; 0x108
   1247c:	ldr	r0, [r1, r0, lsl #2]
   12480:	cmp	r0, r3
   12484:	bne	12494 <dcngettext@plt+0x14a4>
   12488:	add	r5, r5, #1
   1248c:	cmp	r9, r5
   12490:	bhi	12450 <dcngettext@plt+0x1460>
   12494:	cmp	r9, r5
   12498:	beq	12bfc <dcngettext@plt+0x1c0c>
   1249c:	ldr	r3, [sp, #72]	; 0x48
   124a0:	adds	r3, r3, #1
   124a4:	str	r3, [sp, #72]	; 0x48
   124a8:	ldr	r3, [sp, #76]	; 0x4c
   124ac:	adc	r3, r3, #0
   124b0:	str	r3, [sp, #76]	; 0x4c
   124b4:	movw	r3, #41332	; 0xa174
   124b8:	movt	r3, #2
   124bc:	ldrb	r3, [r3, #6]
   124c0:	cmp	r3, #0
   124c4:	bne	12418 <dcngettext@plt+0x1428>
   124c8:	ldr	r3, [sp, #44]	; 0x2c
   124cc:	cmp	r3, #0
   124d0:	bne	12c44 <dcngettext@plt+0x1c54>
   124d4:	ldr	r1, [sp, #44]	; 0x2c
   124d8:	mov	r0, r8
   124dc:	bl	11248 <dcngettext@plt+0x258>
   124e0:	mov	r2, #5
   124e4:	movw	r1, #35396	; 0x8a44
   124e8:	movt	r1, #1
   124ec:	mov	r0, #0
   124f0:	bl	10e04 <dcgettext@plt>
   124f4:	mov	r2, r0
   124f8:	movw	r1, #35388	; 0x8a3c
   124fc:	movt	r1, #1
   12500:	mov	r0, #1
   12504:	bl	10f24 <__printf_chk@plt>
   12508:	b	12418 <dcngettext@plt+0x1428>
   1250c:	mov	r1, #92	; 0x5c
   12510:	bl	10f6c <__overflow@plt>
   12514:	b	12c70 <dcngettext@plt+0x1c80>
   12518:	ldr	r0, [sp, #108]	; 0x6c
   1251c:	bl	14874 <dcngettext@plt+0x3884>
   12520:	ldr	r5, [r4]
   12524:	eor	r5, r5, #32
   12528:	ubfx	r5, r5, #5, #1
   1252c:	rsb	r6, r5, #0
   12530:	ldr	r3, [sp, #60]	; 0x3c
   12534:	cmp	r3, #0
   12538:	bne	12748 <dcngettext@plt+0x1758>
   1253c:	mov	r0, r4
   12540:	bl	10f9c <clearerr_unlocked@plt>
   12544:	cmp	r6, #0
   12548:	bge	12770 <dcngettext@plt+0x1780>
   1254c:	ldr	r3, [sp, #68]	; 0x44
   12550:	cmp	r3, #0
   12554:	beq	127c4 <dcngettext@plt+0x17d4>
   12558:	movw	r3, #41332	; 0xa174
   1255c:	movt	r3, #2
   12560:	ldrb	r3, [r3, #6]
   12564:	cmp	r3, #0
   12568:	bne	126e8 <dcngettext@plt+0x16f8>
   1256c:	ldrd	r0, [sp, #24]
   12570:	orrs	r3, r0, r1
   12574:	beq	125e0 <dcngettext@plt+0x15f0>
   12578:	mvn	r2, #0
   1257c:	mov	r3, #0
   12580:	cmp	r1, r3
   12584:	cmpeq	r0, r2
   12588:	ldrls	r3, [sp, #24]
   1258c:	bls	125a8 <dcngettext@plt+0x15b8>
   12590:	movw	r2, #16960	; 0x4240
   12594:	movt	r2, #15
   12598:	mov	r3, #0
   1259c:	bl	17d6c <dcngettext@plt+0x6d7c>
   125a0:	add	r3, r2, #999424	; 0xf4000
   125a4:	add	r3, r3, #576	; 0x240
   125a8:	mov	r2, #5
   125ac:	str	r2, [sp]
   125b0:	movw	r2, #35472	; 0x8a90
   125b4:	movt	r2, #1
   125b8:	movw	r1, #35520	; 0x8ac0
   125bc:	movt	r1, #1
   125c0:	mov	r0, #0
   125c4:	bl	10ff0 <dcngettext@plt>
   125c8:	ldrd	r2, [sp, #24]
   125cc:	strd	r2, [sp]
   125d0:	mov	r2, r0
   125d4:	mov	r1, #0
   125d8:	mov	r0, r1
   125dc:	bl	10e70 <error@plt>
   125e0:	ldrd	r0, [sp, #48]	; 0x30
   125e4:	orrs	r3, r0, r1
   125e8:	beq	12654 <dcngettext@plt+0x1664>
   125ec:	mvn	r2, #0
   125f0:	mov	r3, #0
   125f4:	cmp	r1, r3
   125f8:	cmpeq	r0, r2
   125fc:	ldrls	r3, [sp, #48]	; 0x30
   12600:	bls	1261c <dcngettext@plt+0x162c>
   12604:	movw	r2, #16960	; 0x4240
   12608:	movt	r2, #15
   1260c:	mov	r3, #0
   12610:	bl	17d6c <dcngettext@plt+0x6d7c>
   12614:	add	r3, r2, #999424	; 0xf4000
   12618:	add	r3, r3, #576	; 0x240
   1261c:	mov	r2, #5
   12620:	str	r2, [sp]
   12624:	movw	r2, #35564	; 0x8aec
   12628:	movt	r2, #1
   1262c:	movw	r1, #35612	; 0x8b1c
   12630:	movt	r1, #1
   12634:	mov	r0, #0
   12638:	bl	10ff0 <dcngettext@plt>
   1263c:	ldrd	r2, [sp, #48]	; 0x30
   12640:	strd	r2, [sp]
   12644:	mov	r2, r0
   12648:	mov	r1, #0
   1264c:	mov	r0, r1
   12650:	bl	10e70 <error@plt>
   12654:	ldrd	r0, [sp, #72]	; 0x48
   12658:	orrs	r3, r0, r1
   1265c:	beq	126c8 <dcngettext@plt+0x16d8>
   12660:	mvn	r2, #0
   12664:	mov	r3, #0
   12668:	cmp	r1, r3
   1266c:	cmpeq	r0, r2
   12670:	ldrls	r3, [sp, #72]	; 0x48
   12674:	bls	12690 <dcngettext@plt+0x16a0>
   12678:	movw	r2, #16960	; 0x4240
   1267c:	movt	r2, #15
   12680:	mov	r3, #0
   12684:	bl	17d6c <dcngettext@plt+0x6d7c>
   12688:	add	r3, r2, #999424	; 0xf4000
   1268c:	add	r3, r3, #576	; 0x240
   12690:	mov	r2, #5
   12694:	str	r2, [sp]
   12698:	movw	r2, #35656	; 0x8b48
   1269c:	movt	r2, #1
   126a0:	movw	r1, #35704	; 0x8b78
   126a4:	movt	r1, #1
   126a8:	mov	r0, #0
   126ac:	bl	10ff0 <dcngettext@plt>
   126b0:	ldrd	r2, [sp, #72]	; 0x48
   126b4:	strd	r2, [sp]
   126b8:	mov	r2, r0
   126bc:	mov	r1, #0
   126c0:	mov	r0, r1
   126c4:	bl	10e70 <error@plt>
   126c8:	movw	r3, #41332	; 0xa174
   126cc:	movt	r3, #2
   126d0:	ldrb	r3, [r3, #5]
   126d4:	eor	r3, r3, #1
   126d8:	ldr	r2, [sp, #84]	; 0x54
   126dc:	orr	r3, r2, r3
   126e0:	tst	r3, #255	; 0xff
   126e4:	beq	128d0 <dcngettext@plt+0x18e0>
   126e8:	ldr	r3, [sp, #84]	; 0x54
   126ec:	cmp	r3, #0
   126f0:	moveq	r3, #0
   126f4:	beq	12804 <dcngettext@plt+0x1814>
   126f8:	ldrd	r0, [sp, #48]	; 0x30
   126fc:	ldrd	r2, [sp, #72]	; 0x48
   12700:	mov	lr, r2
   12704:	orr	ip, r0, r2
   12708:	str	ip, [sp, #96]	; 0x60
   1270c:	orr	r3, r1, r3
   12710:	str	r3, [sp, #100]	; 0x64
   12714:	ldrd	r2, [sp, #96]	; 0x60
   12718:	orrs	r3, r2, r3
   1271c:	movne	r3, #0
   12720:	bne	12804 <dcngettext@plt+0x1814>
   12724:	movw	r3, #41332	; 0xa174
   12728:	movt	r3, #2
   1272c:	ldrb	r3, [r3, #9]
   12730:	eor	r3, r3, #1
   12734:	ldrd	r0, [sp, #24]
   12738:	mov	r2, r0
   1273c:	orrs	r2, r2, r1
   12740:	orreq	r3, r3, #1
   12744:	b	12804 <dcngettext@plt+0x1814>
   12748:	mov	r0, r4
   1274c:	bl	14698 <dcngettext@plt+0x36a8>
   12750:	cmp	r0, #0
   12754:	movne	r0, r5
   12758:	moveq	r0, #0
   1275c:	cmp	r0, #0
   12760:	beq	12544 <dcngettext@plt+0x1554>
   12764:	bl	10ef4 <__errno_location@plt>
   12768:	ldr	r6, [r0]
   1276c:	b	12544 <dcngettext@plt+0x1554>
   12770:	movwne	r4, #36040	; 0x8cc8
   12774:	movtne	r4, #1
   12778:	beq	127a8 <dcngettext@plt+0x17b8>
   1277c:	ldr	r2, [sp, #36]	; 0x24
   12780:	mov	r1, #3
   12784:	mov	r0, #0
   12788:	bl	16ac4 <dcngettext@plt+0x5ad4>
   1278c:	mov	r3, r0
   12790:	mov	r2, r4
   12794:	mov	r1, r6
   12798:	mov	r0, #0
   1279c:	bl	10e70 <error@plt>
   127a0:	ldr	r3, [sp, #56]	; 0x38
   127a4:	b	12808 <dcngettext@plt+0x1818>
   127a8:	mov	r2, #5
   127ac:	movw	r1, #35408	; 0x8a50
   127b0:	movt	r1, #1
   127b4:	mov	r0, #0
   127b8:	bl	10e04 <dcgettext@plt>
   127bc:	mov	r4, r0
   127c0:	b	1277c <dcngettext@plt+0x178c>
   127c4:	mov	r2, #5
   127c8:	movw	r1, #35424	; 0x8a60
   127cc:	movt	r1, #1
   127d0:	mov	r0, #0
   127d4:	bl	10e04 <dcgettext@plt>
   127d8:	mov	r4, r0
   127dc:	ldr	r2, [sp, #36]	; 0x24
   127e0:	mov	r1, #3
   127e4:	mov	r0, #0
   127e8:	bl	16ac4 <dcngettext@plt+0x5ad4>
   127ec:	mov	r3, r0
   127f0:	mov	r2, r4
   127f4:	mov	r1, #0
   127f8:	mov	r0, r1
   127fc:	bl	10e70 <error@plt>
   12800:	mov	r3, #0
   12804:	and	r3, r3, #1
   12808:	ldr	r2, [sp, #64]	; 0x40
   1280c:	and	r2, r2, r3
   12810:	str	r2, [sp, #64]	; 0x40
   12814:	ldr	r3, [sp, #80]	; 0x50
   12818:	ldr	r2, [sp, #32]
   1281c:	cmp	r3, r2
   12820:	bls	12b78 <dcngettext@plt+0x1b88>
   12824:	ldr	r3, [sp, #32]
   12828:	ldr	r0, [r3], #4
   1282c:	str	r0, [sp, #36]	; 0x24
   12830:	str	r3, [sp, #32]
   12834:	ldr	r3, [sp, #16]
   12838:	cmp	r3, #0
   1283c:	beq	12914 <dcngettext@plt+0x1924>
   12840:	movw	r1, #32908	; 0x808c
   12844:	movt	r1, #1
   12848:	bl	10d8c <strcmp@plt>
   1284c:	subs	r3, r0, #0
   12850:	str	r3, [sp, #60]	; 0x3c
   12854:	bne	11ee0 <dcngettext@plt+0xef0>
   12858:	movw	r3, #41332	; 0xa174
   1285c:	movt	r3, #2
   12860:	mov	r2, #1
   12864:	strb	r2, [r3, #4]
   12868:	mov	r2, #5
   1286c:	movw	r1, #35276	; 0x89cc
   12870:	movt	r1, #1
   12874:	bl	10e04 <dcgettext@plt>
   12878:	str	r0, [sp, #36]	; 0x24
   1287c:	movw	r3, #41320	; 0xa168
   12880:	movt	r3, #2
   12884:	ldr	r4, [r3]
   12888:	mov	r3, #0
   1288c:	str	r3, [sp, #108]	; 0x6c
   12890:	str	r3, [sp, #112]	; 0x70
   12894:	ldr	r3, [sp, #56]	; 0x38
   12898:	str	r3, [sp, #84]	; 0x54
   1289c:	str	r3, [sp, #68]	; 0x44
   128a0:	mov	r2, #0
   128a4:	mov	r3, #0
   128a8:	strd	r2, [sp, #72]	; 0x48
   128ac:	strd	r2, [sp, #48]	; 0x30
   128b0:	strd	r2, [sp, #24]
   128b4:	mov	sl, #1
   128b8:	mov	fp, #0
   128bc:	movw	r3, #33040	; 0x8110
   128c0:	movt	r3, #1
   128c4:	str	r3, [sp, #40]	; 0x28
   128c8:	ldr	r7, [sp, #92]	; 0x5c
   128cc:	b	120d4 <dcngettext@plt+0x10e4>
   128d0:	mov	r2, #5
   128d4:	movw	r1, #35752	; 0x8ba8
   128d8:	movt	r1, #1
   128dc:	mov	r0, #0
   128e0:	bl	10e04 <dcgettext@plt>
   128e4:	mov	r4, r0
   128e8:	ldr	r2, [sp, #36]	; 0x24
   128ec:	mov	r1, #3
   128f0:	mov	r0, #0
   128f4:	bl	16ac4 <dcngettext@plt+0x5ad4>
   128f8:	mov	r3, r0
   128fc:	mov	r2, r4
   12900:	mov	r1, #0
   12904:	mov	r0, r1
   12908:	bl	10e70 <error@plt>
   1290c:	b	12800 <dcngettext@plt+0x1810>
   12910:	andeq	r7, r1, r0, lsr #31
   12914:	ldr	r3, [sp, #88]	; 0x58
   12918:	str	r3, [sp, #120]	; 0x78
   1291c:	add	r3, sp, #128	; 0x80
   12920:	str	r3, [sp]
   12924:	add	r3, sp, #116	; 0x74
   12928:	add	r2, sp, #152	; 0x98
   1292c:	add	r1, sp, #120	; 0x78
   12930:	ldr	r0, [sp, #36]	; 0x24
   12934:	bl	11344 <dcngettext@plt+0x354>
   12938:	subs	r9, r0, #0
   1293c:	streq	r9, [sp, #64]	; 0x40
   12940:	beq	12814 <dcngettext@plt+0x1824>
   12944:	ldr	fp, [sp, #120]	; 0x78
   12948:	movw	r3, #41212	; 0xa0fc
   1294c:	movt	r3, #2
   12950:	ldrb	r8, [r3]
   12954:	cmp	r8, #10
   12958:	ldrne	r9, [sp, #16]
   1295c:	beq	12a74 <dcngettext@plt+0x1a84>
   12960:	ldr	r3, [sp, #20]
   12964:	cmp	r3, #0
   12968:	bne	12af0 <dcngettext@plt+0x1b00>
   1296c:	movw	r3, #41332	; 0xa174
   12970:	movt	r3, #2
   12974:	ldr	r3, [r3]
   12978:	cmp	r3, #1
   1297c:	bls	129d4 <dcngettext@plt+0x19e4>
   12980:	add	r4, sp, #151	; 0x97
   12984:	movw	r7, #35792	; 0x8bd0
   12988:	movt	r7, #1
   1298c:	mov	sl, #1
   12990:	movw	r6, #41332	; 0xa174
   12994:	movt	r6, #2
   12998:	add	r5, r4, #1
   1299c:	ldrb	r2, [r4, #1]
   129a0:	mov	r1, r7
   129a4:	mov	r0, sl
   129a8:	bl	10f24 <__printf_chk@plt>
   129ac:	add	r4, r4, #2
   129b0:	add	r3, sp, #152	; 0x98
   129b4:	sub	r3, r4, r3
   129b8:	mov	r4, r5
   129bc:	ldr	r2, [r6]
   129c0:	cmp	r3, r2, lsr #1
   129c4:	bcc	12998 <dcngettext@plt+0x19a8>
   129c8:	ldr	r3, [sp, #20]
   129cc:	cmp	r3, #0
   129d0:	bne	12a40 <dcngettext@plt+0x1a50>
   129d4:	movw	r3, #41324	; 0xa16c
   129d8:	movt	r3, #2
   129dc:	ldr	r0, [r3]
   129e0:	ldr	r3, [r0, #20]
   129e4:	ldr	r2, [r0, #24]
   129e8:	cmp	r3, r2
   129ec:	addcc	r2, r3, #1
   129f0:	strcc	r2, [r0, #20]
   129f4:	movcc	r2, #32
   129f8:	strbcc	r2, [r3]
   129fc:	bcs	12b64 <dcngettext@plt+0x1b74>
   12a00:	cmp	fp, #0
   12a04:	movne	r1, #42	; 0x2a
   12a08:	moveq	r1, #32
   12a0c:	movw	r3, #41324	; 0xa16c
   12a10:	movt	r3, #2
   12a14:	ldr	r0, [r3]
   12a18:	ldr	r3, [r0, #20]
   12a1c:	ldr	r2, [r0, #24]
   12a20:	cmp	r3, r2
   12a24:	addcc	r2, r3, #1
   12a28:	strcc	r2, [r0, #20]
   12a2c:	strbcc	r1, [r3]
   12a30:	bcs	12b70 <dcngettext@plt+0x1b80>
   12a34:	mov	r1, r9
   12a38:	ldr	r0, [sp, #36]	; 0x24
   12a3c:	bl	11248 <dcngettext@plt+0x258>
   12a40:	movw	r3, #41324	; 0xa16c
   12a44:	movt	r3, #2
   12a48:	ldr	r0, [r3]
   12a4c:	ldr	r3, [r0, #20]
   12a50:	ldr	r2, [r0, #24]
   12a54:	cmp	r3, r2
   12a58:	addcc	r2, r3, #1
   12a5c:	strcc	r2, [r0, #20]
   12a60:	strbcc	r8, [r3]
   12a64:	bcc	12814 <dcngettext@plt+0x1824>
   12a68:	mov	r1, r8
   12a6c:	bl	10f6c <__overflow@plt>
   12a70:	b	12814 <dcngettext@plt+0x1824>
   12a74:	mov	r1, #92	; 0x5c
   12a78:	ldr	r0, [sp, #36]	; 0x24
   12a7c:	bl	10ee8 <strchr@plt>
   12a80:	cmp	r0, #0
   12a84:	beq	12ac0 <dcngettext@plt+0x1ad0>
   12a88:	movw	r3, #41324	; 0xa16c
   12a8c:	movt	r3, #2
   12a90:	ldr	r0, [r3]
   12a94:	ldr	r3, [r0, #20]
   12a98:	ldr	r2, [r0, #24]
   12a9c:	cmp	r3, r2
   12aa0:	addcc	r2, r3, #1
   12aa4:	strcc	r2, [r0, #20]
   12aa8:	movcc	r2, #92	; 0x5c
   12aac:	strbcc	r2, [r3]
   12ab0:	bcc	12960 <dcngettext@plt+0x1970>
   12ab4:	mov	r1, #92	; 0x5c
   12ab8:	bl	10f6c <__overflow@plt>
   12abc:	b	12960 <dcngettext@plt+0x1970>
   12ac0:	mov	r1, #10
   12ac4:	ldr	r0, [sp, #36]	; 0x24
   12ac8:	bl	10ee8 <strchr@plt>
   12acc:	cmp	r0, #0
   12ad0:	bne	12a88 <dcngettext@plt+0x1a98>
   12ad4:	mov	r1, #13
   12ad8:	ldr	r0, [sp, #36]	; 0x24
   12adc:	bl	10ee8 <strchr@plt>
   12ae0:	cmp	r0, #0
   12ae4:	ldreq	r9, [sp, #16]
   12ae8:	bne	12a88 <dcngettext@plt+0x1a98>
   12aec:	b	12960 <dcngettext@plt+0x1970>
   12af0:	movw	r4, #41324	; 0xa16c
   12af4:	movt	r4, #2
   12af8:	ldr	r3, [r4]
   12afc:	mov	r2, #4
   12b00:	mov	r1, #1
   12b04:	movw	r0, #33040	; 0x8110
   12b08:	movt	r0, #1
   12b0c:	bl	10de0 <fwrite_unlocked@plt>
   12b10:	ldr	r3, [r4]
   12b14:	mov	r2, #2
   12b18:	mov	r1, #1
   12b1c:	movw	r0, #35780	; 0x8bc4
   12b20:	movt	r0, #1
   12b24:	bl	10de0 <fwrite_unlocked@plt>
   12b28:	mov	r1, r9
   12b2c:	ldr	r0, [sp, #36]	; 0x24
   12b30:	bl	11248 <dcngettext@plt+0x258>
   12b34:	ldr	r3, [r4]
   12b38:	mov	r2, #4
   12b3c:	mov	r1, #1
   12b40:	movw	r0, #35784	; 0x8bc8
   12b44:	movt	r0, #1
   12b48:	bl	10de0 <fwrite_unlocked@plt>
   12b4c:	movw	r3, #41332	; 0xa174
   12b50:	movt	r3, #2
   12b54:	ldr	r3, [r3]
   12b58:	cmp	r3, #1
   12b5c:	bhi	12980 <dcngettext@plt+0x1990>
   12b60:	b	12a40 <dcngettext@plt+0x1a50>
   12b64:	mov	r1, #32
   12b68:	bl	10f6c <__overflow@plt>
   12b6c:	b	12a00 <dcngettext@plt+0x1a10>
   12b70:	bl	10f6c <__overflow@plt>
   12b74:	b	12a34 <dcngettext@plt+0x1a44>
   12b78:	movw	r3, #41332	; 0xa174
   12b7c:	movt	r3, #2
   12b80:	ldrb	r3, [r3, #4]
   12b84:	cmp	r3, #0
   12b88:	bne	12bb4 <dcngettext@plt+0x1bc4>
   12b8c:	ldr	r3, [sp, #64]	; 0x40
   12b90:	eor	r0, r3, #1
   12b94:	uxtb	r0, r0
   12b98:	add	sp, sp, #180	; 0xb4
   12b9c:	ldrd	r4, [sp]
   12ba0:	ldrd	r6, [sp, #8]
   12ba4:	ldrd	r8, [sp, #16]
   12ba8:	ldrd	sl, [sp, #24]
   12bac:	add	sp, sp, #32
   12bb0:	pop	{pc}		; (ldr pc, [sp], #4)
   12bb4:	movw	r3, #41320	; 0xa168
   12bb8:	movt	r3, #2
   12bbc:	ldr	r0, [r3]
   12bc0:	bl	14698 <dcngettext@plt+0x36a8>
   12bc4:	cmn	r0, #1
   12bc8:	bne	12b8c <dcngettext@plt+0x1b9c>
   12bcc:	bl	10ef4 <__errno_location@plt>
   12bd0:	ldr	r4, [r0]
   12bd4:	mov	r2, #5
   12bd8:	movw	r1, #35276	; 0x89cc
   12bdc:	movt	r1, #1
   12be0:	mov	r0, #0
   12be4:	bl	10e04 <dcgettext@plt>
   12be8:	mov	r2, r0
   12bec:	mov	r1, r4
   12bf0:	mov	r0, #1
   12bf4:	bl	10e70 <error@plt>
   12bf8:	mov	r5, #0
   12bfc:	movw	r3, #41332	; 0xa174
   12c00:	movt	r3, #2
   12c04:	ldrb	r3, [r3, #6]
   12c08:	str	r3, [sp, #84]	; 0x54
   12c0c:	cmp	r3, #0
   12c10:	bne	12418 <dcngettext@plt+0x1428>
   12c14:	movw	r3, #41332	; 0xa174
   12c18:	movt	r3, #2
   12c1c:	ldrb	r3, [r3, #8]
   12c20:	str	r3, [sp, #84]	; 0x54
   12c24:	cmp	r3, #0
   12c28:	bne	12418 <dcngettext@plt+0x1428>
   12c2c:	ldr	r3, [sp, #44]	; 0x2c
   12c30:	cmp	r3, #0
   12c34:	ldreq	r3, [sp, #68]	; 0x44
   12c38:	streq	r3, [sp, #84]	; 0x54
   12c3c:	beq	12c70 <dcngettext@plt+0x1c80>
   12c40:	str	r3, [sp, #84]	; 0x54
   12c44:	movw	r3, #41324	; 0xa16c
   12c48:	movt	r3, #2
   12c4c:	ldr	r0, [r3]
   12c50:	ldr	r3, [r0, #20]
   12c54:	ldr	r2, [r0, #24]
   12c58:	cmp	r3, r2
   12c5c:	addcc	r2, r3, #1
   12c60:	strcc	r2, [r0, #20]
   12c64:	movcc	r2, #92	; 0x5c
   12c68:	strbcc	r2, [r3]
   12c6c:	bcs	1250c <dcngettext@plt+0x151c>
   12c70:	ldr	r1, [sp, #44]	; 0x2c
   12c74:	mov	r0, r8
   12c78:	bl	11248 <dcngettext@plt+0x258>
   12c7c:	cmp	r9, r5
   12c80:	bne	124e0 <dcngettext@plt+0x14f0>
   12c84:	movw	r3, #41332	; 0xa174
   12c88:	movt	r3, #2
   12c8c:	ldrb	r3, [r3, #8]
   12c90:	cmp	r3, #0
   12c94:	bne	12418 <dcngettext@plt+0x1428>
   12c98:	mov	r2, #5
   12c9c:	movw	r1, #35404	; 0x8a4c
   12ca0:	movt	r1, #1
   12ca4:	mov	r0, #0
   12ca8:	bl	10e04 <dcgettext@plt>
   12cac:	mov	r2, r0
   12cb0:	movw	r1, #35388	; 0x8a3c
   12cb4:	movt	r1, #1
   12cb8:	mov	r0, #1
   12cbc:	bl	10f24 <__printf_chk@plt>
   12cc0:	b	12418 <dcngettext@plt+0x1428>
   12cc4:	movw	r3, #41348	; 0xa184
   12cc8:	movt	r3, #2
   12ccc:	str	r0, [r3]
   12cd0:	bx	lr
   12cd4:	movw	r3, #41348	; 0xa184
   12cd8:	movt	r3, #2
   12cdc:	strb	r0, [r3, #4]
   12ce0:	bx	lr
   12ce4:	strd	r4, [sp, #-16]!
   12ce8:	str	r6, [sp, #8]
   12cec:	str	lr, [sp, #12]
   12cf0:	sub	sp, sp, #8
   12cf4:	movw	r3, #41324	; 0xa16c
   12cf8:	movt	r3, #2
   12cfc:	ldr	r0, [r3]
   12d00:	bl	17868 <dcngettext@plt+0x6878>
   12d04:	cmp	r0, #0
   12d08:	beq	12d30 <dcngettext@plt+0x1d40>
   12d0c:	movw	r3, #41348	; 0xa184
   12d10:	movt	r3, #2
   12d14:	ldrb	r3, [r3, #4]
   12d18:	cmp	r3, #0
   12d1c:	beq	12d5c <dcngettext@plt+0x1d6c>
   12d20:	bl	10ef4 <__errno_location@plt>
   12d24:	ldr	r3, [r0]
   12d28:	cmp	r3, #32
   12d2c:	bne	12d5c <dcngettext@plt+0x1d6c>
   12d30:	movw	r3, #41312	; 0xa160
   12d34:	movt	r3, #2
   12d38:	ldr	r0, [r3]
   12d3c:	bl	17868 <dcngettext@plt+0x6878>
   12d40:	cmp	r0, #0
   12d44:	bne	12de4 <dcngettext@plt+0x1df4>
   12d48:	add	sp, sp, #8
   12d4c:	ldrd	r4, [sp]
   12d50:	ldr	r6, [sp, #8]
   12d54:	add	sp, sp, #12
   12d58:	pop	{pc}		; (ldr pc, [sp], #4)
   12d5c:	mov	r2, #5
   12d60:	movw	r1, #36024	; 0x8cb8
   12d64:	movt	r1, #1
   12d68:	mov	r0, #0
   12d6c:	bl	10e04 <dcgettext@plt>
   12d70:	mov	r4, r0
   12d74:	movw	r3, #41348	; 0xa184
   12d78:	movt	r3, #2
   12d7c:	ldr	r5, [r3]
   12d80:	cmp	r5, #0
   12d84:	beq	12dc4 <dcngettext@plt+0x1dd4>
   12d88:	bl	10ef4 <__errno_location@plt>
   12d8c:	ldr	r6, [r0]
   12d90:	mov	r0, r5
   12d94:	bl	16a8c <dcngettext@plt+0x5a9c>
   12d98:	str	r4, [sp]
   12d9c:	mov	r3, r0
   12da0:	movw	r2, #36036	; 0x8cc4
   12da4:	movt	r2, #1
   12da8:	mov	r1, r6
   12dac:	mov	r0, #0
   12db0:	bl	10e70 <error@plt>
   12db4:	movw	r3, #41224	; 0xa108
   12db8:	movt	r3, #2
   12dbc:	ldr	r0, [r3]
   12dc0:	bl	10dbc <_exit@plt>
   12dc4:	bl	10ef4 <__errno_location@plt>
   12dc8:	mov	r3, r4
   12dcc:	movw	r2, #36040	; 0x8cc8
   12dd0:	movt	r2, #1
   12dd4:	ldr	r1, [r0]
   12dd8:	mov	r0, #0
   12ddc:	bl	10e70 <error@plt>
   12de0:	b	12db4 <dcngettext@plt+0x1dc4>
   12de4:	movw	r3, #41224	; 0xa108
   12de8:	movt	r3, #2
   12dec:	ldr	r0, [r3]
   12df0:	bl	10dbc <_exit@plt>
   12df4:	strd	r4, [sp, #-28]!	; 0xffffffe4
   12df8:	strd	r6, [sp, #8]
   12dfc:	strd	r8, [sp, #16]
   12e00:	str	lr, [sp, #24]
   12e04:	sub	sp, sp, #164	; 0xa4
   12e08:	mov	r5, r0
   12e0c:	mov	r8, r1
   12e10:	movw	r0, #32840	; 0x8048
   12e14:	bl	177d0 <dcngettext@plt+0x67e0>
   12e18:	subs	r6, r0, #0
   12e1c:	moveq	r0, #1
   12e20:	beq	12e98 <dcngettext@plt+0x1ea8>
   12e24:	mov	r0, sp
   12e28:	bl	12ef0 <dcngettext@plt+0x1f00>
   12e2c:	mov	r7, #1
   12e30:	mov	r9, #32768	; 0x8000
   12e34:	mov	r4, #0
   12e38:	ldr	r3, [r5]
   12e3c:	tst	r3, #16
   12e40:	bne	12e78 <dcngettext@plt+0x1e88>
   12e44:	mov	r3, r5
   12e48:	rsb	r2, r4, #32768	; 0x8000
   12e4c:	mov	r1, r7
   12e50:	add	r0, r6, r4
   12e54:	bl	10fc0 <fread_unlocked@plt>
   12e58:	add	r4, r4, r0
   12e5c:	cmp	r4, #32768	; 0x8000
   12e60:	beq	12ec0 <dcngettext@plt+0x1ed0>
   12e64:	cmp	r0, #0
   12e68:	bne	12e38 <dcngettext@plt+0x1e48>
   12e6c:	ldr	r3, [r5]
   12e70:	tst	r3, #32
   12e74:	bne	12eb0 <dcngettext@plt+0x1ec0>
   12e78:	cmp	r4, #0
   12e7c:	bne	12ed4 <dcngettext@plt+0x1ee4>
   12e80:	mov	r1, r8
   12e84:	mov	r0, sp
   12e88:	bl	14348 <dcngettext@plt+0x3358>
   12e8c:	mov	r0, r6
   12e90:	bl	14874 <dcngettext@plt+0x3884>
   12e94:	mov	r0, #0
   12e98:	add	sp, sp, #164	; 0xa4
   12e9c:	ldrd	r4, [sp]
   12ea0:	ldrd	r6, [sp, #8]
   12ea4:	ldrd	r8, [sp, #16]
   12ea8:	add	sp, sp, #24
   12eac:	pop	{pc}		; (ldr pc, [sp], #4)
   12eb0:	mov	r0, r6
   12eb4:	bl	14874 <dcngettext@plt+0x3884>
   12eb8:	mov	r0, #1
   12ebc:	b	12e98 <dcngettext@plt+0x1ea8>
   12ec0:	mov	r2, sp
   12ec4:	mov	r1, r9
   12ec8:	mov	r0, r6
   12ecc:	bl	12fb8 <dcngettext@plt+0x1fc8>
   12ed0:	b	12e34 <dcngettext@plt+0x1e44>
   12ed4:	mov	r2, sp
   12ed8:	mov	r1, r4
   12edc:	mov	r0, r6
   12ee0:	bl	14404 <dcngettext@plt+0x3414>
   12ee4:	b	12e80 <dcngettext@plt+0x1e90>
   12ee8:	str	r1, [r0]
   12eec:	bx	lr
   12ef0:	movw	r3, #8961	; 0x2301
   12ef4:	movt	r3, #26437	; 0x6745
   12ef8:	str	r3, [r0]
   12efc:	movw	r3, #43913	; 0xab89
   12f00:	movt	r3, #61389	; 0xefcd
   12f04:	str	r3, [r0, #4]
   12f08:	movw	r3, #56574	; 0xdcfe
   12f0c:	movt	r3, #39098	; 0x98ba
   12f10:	str	r3, [r0, #8]
   12f14:	movw	r3, #21622	; 0x5476
   12f18:	movt	r3, #4146	; 0x1032
   12f1c:	str	r3, [r0, #12]
   12f20:	movw	r3, #57840	; 0xe1f0
   12f24:	movt	r3, #50130	; 0xc3d2
   12f28:	str	r3, [r0, #16]
   12f2c:	mov	r3, #0
   12f30:	str	r3, [r0, #24]
   12f34:	str	r3, [r0, #20]
   12f38:	str	r3, [r0, #28]
   12f3c:	bx	lr
   12f40:	strd	r4, [sp, #-16]!
   12f44:	str	r6, [sp, #8]
   12f48:	str	lr, [sp, #12]
   12f4c:	mov	r5, r0
   12f50:	mov	r4, r1
   12f54:	ldr	r1, [r0]
   12f58:	rev	r1, r1
   12f5c:	mov	r0, r4
   12f60:	bl	12ee8 <dcngettext@plt+0x1ef8>
   12f64:	ldr	r1, [r5, #4]
   12f68:	rev	r1, r1
   12f6c:	add	r0, r4, #4
   12f70:	bl	12ee8 <dcngettext@plt+0x1ef8>
   12f74:	ldr	r1, [r5, #8]
   12f78:	rev	r1, r1
   12f7c:	add	r0, r4, #8
   12f80:	bl	12ee8 <dcngettext@plt+0x1ef8>
   12f84:	ldr	r1, [r5, #12]
   12f88:	rev	r1, r1
   12f8c:	add	r0, r4, #12
   12f90:	bl	12ee8 <dcngettext@plt+0x1ef8>
   12f94:	ldr	r1, [r5, #16]
   12f98:	rev	r1, r1
   12f9c:	add	r0, r4, #16
   12fa0:	bl	12ee8 <dcngettext@plt+0x1ef8>
   12fa4:	mov	r0, r4
   12fa8:	ldrd	r4, [sp]
   12fac:	ldr	r6, [sp, #8]
   12fb0:	add	sp, sp, #12
   12fb4:	pop	{pc}		; (ldr pc, [sp], #4)
   12fb8:	strd	r4, [sp, #-36]!	; 0xffffffdc
   12fbc:	strd	r6, [sp, #8]
   12fc0:	strd	r8, [sp, #16]
   12fc4:	strd	sl, [sp, #24]
   12fc8:	str	lr, [sp, #32]
   12fcc:	sub	sp, sp, #156	; 0x9c
   12fd0:	mov	r4, r0
   12fd4:	mov	r8, r2
   12fd8:	str	r2, [sp, #80]	; 0x50
   12fdc:	bic	r5, r1, #3
   12fe0:	ldr	ip, [r2]
   12fe4:	ldr	r3, [r2, #4]
   12fe8:	ldr	lr, [r2, #8]
   12fec:	ldr	r2, [r2, #12]
   12ff0:	ldr	r0, [r8, #16]
   12ff4:	ldr	r6, [r8, #20]
   12ff8:	add	r6, r1, r6
   12ffc:	str	r6, [r8, #20]
   13000:	ldr	r7, [r8, #24]
   13004:	cmp	r6, r1
   13008:	movcs	r6, r7
   1300c:	addcc	r6, r7, #1
   13010:	str	r6, [r8, #24]
   13014:	add	r1, r4, r5
   13018:	cmp	r4, r1
   1301c:	bcs	1432c <dcngettext@plt+0x333c>
   13020:	sub	r1, r4, #4
   13024:	str	r1, [sp, #76]	; 0x4c
   13028:	sub	r1, r5, #1
   1302c:	bic	r1, r1, #63	; 0x3f
   13030:	add	r4, r4, #60	; 0x3c
   13034:	add	r1, r1, r4
   13038:	str	r1, [sp, #84]	; 0x54
   1303c:	movw	r1, #31129	; 0x7999
   13040:	movt	r1, #23170	; 0x5a82
   13044:	str	r1, [sp, #16]
   13048:	movw	r1, #60321	; 0xeba1
   1304c:	movt	r1, #28377	; 0x6ed9
   13050:	str	r1, [sp]
   13054:	movw	r1, #48348	; 0xbcdc
   13058:	movt	r1, #36635	; 0x8f1b
   1305c:	str	r1, [sp, #8]
   13060:	movw	r1, #49622	; 0xc1d6
   13064:	movt	r1, #51810	; 0xca62
   13068:	str	r1, [sp, #4]
   1306c:	mov	r4, r3
   13070:	mov	r1, r2
   13074:	mov	r5, lr
   13078:	add	r2, sp, #88	; 0x58
   1307c:	ldr	lr, [sp, #76]	; 0x4c
   13080:	ldr	r3, [lr, #4]!
   13084:	rev	r3, r3
   13088:	str	r3, [r2], #4
   1308c:	add	r3, sp, #152	; 0x98
   13090:	cmp	r2, r3
   13094:	bne	13080 <dcngettext@plt+0x2090>
   13098:	ldr	r6, [sp, #88]	; 0x58
   1309c:	ldr	r7, [sp, #16]
   130a0:	add	r3, r6, r7
   130a4:	add	r0, r3, r0
   130a8:	add	r0, r0, ip, ror #27
   130ac:	eor	r2, r5, r1
   130b0:	and	r2, r2, r4
   130b4:	eor	r2, r2, r1
   130b8:	add	r0, r2, r0
   130bc:	ror	r4, r4, #2
   130c0:	eor	lr, r4, r5
   130c4:	and	lr, lr, ip
   130c8:	eor	lr, lr, r5
   130cc:	ldr	r3, [sp, #92]	; 0x5c
   130d0:	add	r3, r3, r7
   130d4:	add	r1, r3, r1
   130d8:	add	r1, lr, r1
   130dc:	add	r1, r1, r0, ror #27
   130e0:	ror	r3, ip, #2
   130e4:	eor	ip, r4, r3
   130e8:	and	ip, ip, r0
   130ec:	eor	ip, ip, r4
   130f0:	ldr	r2, [sp, #96]	; 0x60
   130f4:	add	r2, r2, r7
   130f8:	add	r2, r2, r5
   130fc:	add	ip, ip, r2
   13100:	add	ip, ip, r1, ror #27
   13104:	ror	r2, r0, #2
   13108:	ldr	r8, [sp, #100]	; 0x64
   1310c:	eor	r0, r3, r2
   13110:	and	r0, r0, r1
   13114:	eor	r0, r0, r3
   13118:	mov	r5, r7
   1311c:	add	lr, r8, r7
   13120:	add	r4, lr, r4
   13124:	add	r0, r0, r4
   13128:	add	r0, r0, ip, ror #27
   1312c:	ror	lr, r1, #2
   13130:	ldr	r9, [sp, #104]	; 0x68
   13134:	eor	r1, r2, lr
   13138:	and	r1, r1, ip
   1313c:	eor	r1, r1, r2
   13140:	add	r4, r9, r7
   13144:	add	r3, r4, r3
   13148:	add	r1, r1, r3
   1314c:	add	r1, r1, r0, ror #27
   13150:	ror	ip, ip, #2
   13154:	ldr	sl, [sp, #108]	; 0x6c
   13158:	eor	r3, lr, ip
   1315c:	and	r3, r3, r0
   13160:	eor	r3, r3, lr
   13164:	add	r4, sl, r7
   13168:	add	r2, r4, r2
   1316c:	add	r2, r3, r2
   13170:	add	r2, r2, r1, ror #27
   13174:	ror	r0, r0, #2
   13178:	eor	r3, ip, r0
   1317c:	and	r3, r3, r1
   13180:	eor	r3, r3, ip
   13184:	ldr	r4, [sp, #112]	; 0x70
   13188:	add	r4, r4, r7
   1318c:	add	lr, r4, lr
   13190:	add	r3, r3, lr
   13194:	add	r3, r3, r2, ror #27
   13198:	ror	r1, r1, #2
   1319c:	eor	lr, r0, r1
   131a0:	and	lr, lr, r2
   131a4:	eor	lr, lr, r0
   131a8:	ldr	r4, [sp, #116]	; 0x74
   131ac:	add	r4, r4, r7
   131b0:	add	ip, r4, ip
   131b4:	add	lr, lr, ip
   131b8:	add	lr, lr, r3, ror #27
   131bc:	ror	r2, r2, #2
   131c0:	ldr	fp, [sp, #120]	; 0x78
   131c4:	eor	ip, r1, r2
   131c8:	and	ip, ip, r3
   131cc:	eor	ip, ip, r1
   131d0:	add	r4, fp, r7
   131d4:	add	r0, r4, r0
   131d8:	add	ip, ip, r0
   131dc:	add	ip, ip, lr, ror #27
   131e0:	ror	r3, r3, #2
   131e4:	eor	r0, r2, r3
   131e8:	and	r0, r0, lr
   131ec:	eor	r0, r0, r2
   131f0:	ldr	r4, [sp, #124]	; 0x7c
   131f4:	add	r4, r4, r7
   131f8:	add	r1, r4, r1
   131fc:	add	r0, r0, r1
   13200:	add	r0, r0, ip, ror #27
   13204:	ror	lr, lr, #2
   13208:	eor	r1, r3, lr
   1320c:	and	r1, r1, ip
   13210:	eor	r1, r1, r3
   13214:	ldr	r4, [sp, #128]	; 0x80
   13218:	add	r4, r4, r7
   1321c:	add	r2, r4, r2
   13220:	add	r1, r1, r2
   13224:	add	r1, r1, r0, ror #27
   13228:	ror	ip, ip, #2
   1322c:	eor	r2, lr, ip
   13230:	and	r2, r2, r0
   13234:	eor	r2, r2, lr
   13238:	ldr	r4, [sp, #132]	; 0x84
   1323c:	add	r4, r4, r7
   13240:	add	r3, r4, r3
   13244:	add	r2, r2, r3
   13248:	add	r2, r2, r1, ror #27
   1324c:	ror	r0, r0, #2
   13250:	eor	r3, ip, r0
   13254:	and	r3, r3, r1
   13258:	eor	r3, r3, ip
   1325c:	ldr	r7, [sp, #136]	; 0x88
   13260:	add	r4, r7, r5
   13264:	add	lr, r4, lr
   13268:	add	r3, r3, lr
   1326c:	add	r3, r3, r2, ror #27
   13270:	ror	r1, r1, #2
   13274:	eor	r5, r0, r1
   13278:	and	r5, r5, r2
   1327c:	eor	r5, r5, r0
   13280:	ldr	lr, [sp, #140]	; 0x8c
   13284:	ldr	r7, [sp, #16]
   13288:	add	lr, lr, r7
   1328c:	add	ip, lr, ip
   13290:	add	r5, r5, ip
   13294:	add	r5, r5, r3, ror #27
   13298:	ror	r2, r2, #2
   1329c:	eor	ip, r1, r2
   132a0:	and	ip, ip, r3
   132a4:	eor	ip, ip, r1
   132a8:	ldr	lr, [sp, #144]	; 0x90
   132ac:	add	lr, lr, r7
   132b0:	add	r0, lr, r0
   132b4:	add	ip, ip, r0
   132b8:	add	ip, ip, r5, ror #27
   132bc:	ror	r3, r3, #2
   132c0:	eor	r0, r2, r3
   132c4:	and	r0, r0, r5
   132c8:	eor	r0, r0, r2
   132cc:	ldr	lr, [sp, #148]	; 0x94
   132d0:	add	lr, lr, r7
   132d4:	add	r1, lr, r1
   132d8:	add	r0, r0, r1
   132dc:	add	r0, r0, ip, ror #27
   132e0:	ror	r5, r5, #2
   132e4:	ldr	r1, [sp, #96]	; 0x60
   132e8:	eor	r4, r6, r1
   132ec:	eor	r4, r4, fp
   132f0:	ldr	r1, [sp, #140]	; 0x8c
   132f4:	eor	r4, r4, r1
   132f8:	ror	r4, r4, #31
   132fc:	eor	r1, r3, r5
   13300:	and	r1, r1, ip
   13304:	eor	r1, r1, r3
   13308:	add	lr, r4, r7
   1330c:	add	r2, lr, r2
   13310:	add	r1, r1, r2
   13314:	add	r1, r1, r0, ror #27
   13318:	ror	ip, ip, #2
   1331c:	ldr	r2, [sp, #92]	; 0x5c
   13320:	eor	lr, r2, r8
   13324:	ldr	r2, [sp, #124]	; 0x7c
   13328:	eor	lr, lr, r2
   1332c:	ldr	r2, [sp, #144]	; 0x90
   13330:	eor	lr, lr, r2
   13334:	ror	lr, lr, #31
   13338:	eor	r2, r5, ip
   1333c:	and	r2, r2, r0
   13340:	eor	r2, r2, r5
   13344:	str	lr, [sp, #12]
   13348:	add	r6, lr, r7
   1334c:	add	r3, r6, r3
   13350:	add	r2, r2, r3
   13354:	add	r2, r2, r1, ror #27
   13358:	ror	r0, r0, #2
   1335c:	ldr	r3, [sp, #96]	; 0x60
   13360:	eor	r3, r3, r9
   13364:	ldr	lr, [sp, #128]	; 0x80
   13368:	eor	r3, r3, lr
   1336c:	ldr	lr, [sp, #148]	; 0x94
   13370:	eor	r3, r3, lr
   13374:	ror	r3, r3, #31
   13378:	mov	r7, r3
   1337c:	eor	r3, ip, r0
   13380:	and	r3, r3, r1
   13384:	eor	r3, r3, ip
   13388:	str	r7, [sp, #20]
   1338c:	mov	r6, r7
   13390:	ldr	r7, [sp, #16]
   13394:	add	r6, r6, r7
   13398:	add	r5, r6, r5
   1339c:	add	r3, r3, r5
   133a0:	add	r3, r3, r2, ror #27
   133a4:	ror	r1, r1, #2
   133a8:	eor	r5, r8, sl
   133ac:	ldr	lr, [sp, #132]	; 0x84
   133b0:	eor	r5, r5, lr
   133b4:	eor	r5, r5, r4
   133b8:	ror	r8, r5, #31
   133bc:	eor	r5, r0, r1
   133c0:	and	r5, r5, r2
   133c4:	eor	r5, r5, r0
   133c8:	str	r8, [sp, #24]
   133cc:	add	r6, r8, r7
   133d0:	add	ip, r6, ip
   133d4:	add	r5, r5, ip
   133d8:	add	r5, r5, r3, ror #27
   133dc:	ror	r2, r2, #2
   133e0:	ldr	ip, [sp, #112]	; 0x70
   133e4:	eor	ip, r9, ip
   133e8:	ldr	lr, [sp, #136]	; 0x88
   133ec:	eor	ip, ip, lr
   133f0:	ldr	lr, [sp, #12]
   133f4:	eor	ip, ip, lr
   133f8:	ror	ip, ip, #31
   133fc:	eor	r9, r1, r2
   13400:	eor	r9, r9, r3
   13404:	ldr	r8, [sp]
   13408:	add	r6, ip, r8
   1340c:	add	r0, r6, r0
   13410:	add	r9, r9, r0
   13414:	add	r9, r9, r5, ror #27
   13418:	ror	r3, r3, #2
   1341c:	ldr	r0, [sp, #116]	; 0x74
   13420:	eor	r0, sl, r0
   13424:	ldr	lr, [sp, #140]	; 0x8c
   13428:	eor	r0, r0, lr
   1342c:	ldr	r6, [sp, #20]
   13430:	eor	r0, r0, r6
   13434:	ror	r0, r0, #31
   13438:	eor	r7, r2, r3
   1343c:	eor	r7, r7, r5
   13440:	add	r6, r0, r8
   13444:	add	r1, r6, r1
   13448:	add	r7, r7, r1
   1344c:	add	r7, r7, r9, ror #27
   13450:	ror	r5, r5, #2
   13454:	ldr	r1, [sp, #112]	; 0x70
   13458:	eor	r1, r1, fp
   1345c:	ldr	lr, [sp, #144]	; 0x90
   13460:	eor	r1, r1, lr
   13464:	ldr	sl, [sp, #24]
   13468:	eor	r1, r1, sl
   1346c:	ror	r1, r1, #31
   13470:	eor	r6, r3, r5
   13474:	eor	r6, r6, r9
   13478:	mov	sl, r8
   1347c:	add	r8, r1, r8
   13480:	add	r2, r8, r2
   13484:	add	r6, r6, r2
   13488:	add	r6, r6, r7, ror #27
   1348c:	ror	r9, r9, #2
   13490:	ldr	r2, [sp, #116]	; 0x74
   13494:	ldr	lr, [sp, #124]	; 0x7c
   13498:	eor	r2, r2, lr
   1349c:	ldr	lr, [sp, #148]	; 0x94
   134a0:	eor	r2, r2, lr
   134a4:	eor	r2, r2, ip
   134a8:	ror	r2, r2, #31
   134ac:	eor	r8, r5, r9
   134b0:	eor	r8, r8, r7
   134b4:	mov	lr, sl
   134b8:	add	sl, r2, sl
   134bc:	add	r3, sl, r3
   134c0:	add	r8, r8, r3
   134c4:	add	r8, r8, r6, ror #27
   134c8:	ror	r7, r7, #2
   134cc:	ldr	r3, [sp, #128]	; 0x80
   134d0:	eor	r3, fp, r3
   134d4:	eor	r3, r3, r4
   134d8:	eor	r3, r3, r0
   134dc:	ror	r3, r3, #31
   134e0:	eor	fp, r9, r7
   134e4:	eor	fp, fp, r6
   134e8:	str	r3, [sp, #36]	; 0x24
   134ec:	add	sl, r3, lr
   134f0:	add	r5, sl, r5
   134f4:	add	fp, fp, r5
   134f8:	add	fp, fp, r8, ror #27
   134fc:	ror	r6, r6, #2
   13500:	ldr	r3, [sp, #124]	; 0x7c
   13504:	ldr	lr, [sp, #132]	; 0x84
   13508:	eor	r5, r3, lr
   1350c:	ldr	lr, [sp, #12]
   13510:	eor	r5, r5, lr
   13514:	eor	r5, r5, r1
   13518:	ror	lr, r5, #31
   1351c:	eor	r5, r7, r6
   13520:	eor	r5, r5, r8
   13524:	str	lr, [sp, #40]	; 0x28
   13528:	ldr	sl, [sp]
   1352c:	add	sl, lr, sl
   13530:	add	r9, sl, r9
   13534:	add	r5, r5, r9
   13538:	add	r5, r5, fp, ror #27
   1353c:	ror	r8, r8, #2
   13540:	ldr	r3, [sp, #128]	; 0x80
   13544:	ldr	r9, [sp, #136]	; 0x88
   13548:	eor	r9, r3, r9
   1354c:	ldr	sl, [sp, #20]
   13550:	eor	r9, r9, sl
   13554:	eor	r9, r9, r2
   13558:	ror	r9, r9, #31
   1355c:	eor	sl, r6, r8
   13560:	eor	sl, sl, fp
   13564:	str	r9, [sp, #44]	; 0x2c
   13568:	mov	lr, r9
   1356c:	ldr	r9, [sp]
   13570:	add	r9, lr, r9
   13574:	add	r7, r9, r7
   13578:	add	sl, sl, r7
   1357c:	add	sl, sl, r5, ror #27
   13580:	ror	fp, fp, #2
   13584:	ldr	r3, [sp, #132]	; 0x84
   13588:	ldr	r7, [sp, #140]	; 0x8c
   1358c:	eor	r7, r3, r7
   13590:	ldr	r9, [sp, #24]
   13594:	eor	r7, r7, r9
   13598:	ldr	r3, [sp, #36]	; 0x24
   1359c:	eor	r7, r7, r3
   135a0:	ror	r7, r7, #31
   135a4:	eor	r9, r8, fp
   135a8:	eor	r9, r9, r5
   135ac:	str	r7, [sp, #48]	; 0x30
   135b0:	mov	lr, r7
   135b4:	ldr	r7, [sp]
   135b8:	add	r7, lr, r7
   135bc:	add	r6, r7, r6
   135c0:	add	r9, r9, r6
   135c4:	add	r9, r9, sl, ror #27
   135c8:	ror	r5, r5, #2
   135cc:	ldr	r3, [sp, #136]	; 0x88
   135d0:	ldr	r6, [sp, #144]	; 0x90
   135d4:	eor	r6, r3, r6
   135d8:	eor	r6, r6, ip
   135dc:	ldr	lr, [sp, #40]	; 0x28
   135e0:	eor	r6, r6, lr
   135e4:	ror	r6, r6, #31
   135e8:	mov	lr, r6
   135ec:	eor	r7, fp, r5
   135f0:	eor	r7, r7, sl
   135f4:	ldr	r6, [sp]
   135f8:	add	r6, lr, r6
   135fc:	add	r8, r6, r8
   13600:	add	r7, r7, r8
   13604:	add	r7, r7, r9, ror #27
   13608:	ror	sl, sl, #2
   1360c:	ldr	r3, [sp, #140]	; 0x8c
   13610:	ldr	r8, [sp, #148]	; 0x94
   13614:	eor	r6, r3, r8
   13618:	eor	r6, r6, r0
   1361c:	ldr	r8, [sp, #44]	; 0x2c
   13620:	eor	r6, r6, r8
   13624:	ror	r3, r6, #31
   13628:	eor	r8, r5, sl
   1362c:	eor	r8, r8, r9
   13630:	str	r3, [sp, #56]	; 0x38
   13634:	ldr	r6, [sp]
   13638:	add	r6, r3, r6
   1363c:	add	fp, r6, fp
   13640:	add	r8, r8, fp
   13644:	add	r8, r8, r7, ror #27
   13648:	ror	r9, r9, #2
   1364c:	ldr	fp, [sp, #144]	; 0x90
   13650:	eor	r6, fp, r4
   13654:	eor	r6, r6, r1
   13658:	ldr	fp, [sp, #48]	; 0x30
   1365c:	eor	r6, r6, fp
   13660:	ror	fp, r6, #31
   13664:	eor	r6, sl, r9
   13668:	eor	r6, r6, r7
   1366c:	str	fp, [sp, #28]
   13670:	mov	r3, fp
   13674:	ldr	fp, [sp]
   13678:	add	fp, r3, fp
   1367c:	add	r5, fp, r5
   13680:	add	r6, r6, r5
   13684:	add	r6, r6, r8, ror #27
   13688:	ror	r7, r7, #2
   1368c:	ldr	r5, [sp, #148]	; 0x94
   13690:	ldr	fp, [sp, #12]
   13694:	eor	r5, r5, fp
   13698:	eor	r5, r5, r2
   1369c:	str	lr, [sp, #52]	; 0x34
   136a0:	eor	r5, r5, lr
   136a4:	ror	r5, r5, #31
   136a8:	mov	fp, r5
   136ac:	eor	r5, r9, r7
   136b0:	eor	r5, r5, r8
   136b4:	str	fp, [sp, #32]
   136b8:	mov	lr, fp
   136bc:	ldr	fp, [sp]
   136c0:	add	fp, lr, fp
   136c4:	add	sl, fp, sl
   136c8:	add	r5, r5, sl
   136cc:	add	r5, r5, r6, ror #27
   136d0:	ror	r8, r8, #2
   136d4:	ldr	sl, [sp, #20]
   136d8:	eor	r4, r4, sl
   136dc:	ldr	r3, [sp, #36]	; 0x24
   136e0:	eor	r4, r4, r3
   136e4:	ldr	r3, [sp, #56]	; 0x38
   136e8:	eor	r4, r4, r3
   136ec:	ror	r4, r4, #31
   136f0:	mov	sl, r4
   136f4:	eor	r4, r7, r8
   136f8:	eor	r4, r4, r6
   136fc:	str	sl, [sp, #60]	; 0x3c
   13700:	ldr	fp, [sp]
   13704:	add	sl, sl, fp
   13708:	add	r9, sl, r9
   1370c:	add	r4, r4, r9
   13710:	add	r4, r4, r5, ror #27
   13714:	ror	r6, r6, #2
   13718:	ldr	r9, [sp, #24]
   1371c:	ldr	lr, [sp, #12]
   13720:	eor	lr, lr, r9
   13724:	ldr	sl, [sp, #40]	; 0x28
   13728:	eor	lr, lr, sl
   1372c:	ldr	r3, [sp, #28]
   13730:	eor	lr, lr, r3
   13734:	ror	r3, lr, #31
   13738:	eor	lr, r8, r6
   1373c:	eor	lr, lr, r5
   13740:	mov	sl, fp
   13744:	add	r9, r3, fp
   13748:	add	r7, r9, r7
   1374c:	add	lr, lr, r7
   13750:	add	lr, lr, r4, ror #27
   13754:	ror	r5, r5, #2
   13758:	ldr	r7, [sp, #20]
   1375c:	eor	r7, r7, ip
   13760:	ldr	fp, [sp, #44]	; 0x2c
   13764:	eor	r7, r7, fp
   13768:	ldr	fp, [sp, #32]
   1376c:	eor	r7, r7, fp
   13770:	ror	r7, r7, #31
   13774:	mov	r9, r7
   13778:	eor	r7, r6, r5
   1377c:	eor	r7, r7, r4
   13780:	str	r9, [sp, #12]
   13784:	add	r9, r9, sl
   13788:	add	r8, r9, r8
   1378c:	add	r7, r7, r8
   13790:	add	r7, r7, lr, ror #27
   13794:	ror	r4, r4, #2
   13798:	ldr	r9, [sp, #24]
   1379c:	eor	r8, r9, r0
   137a0:	ldr	r9, [sp, #48]	; 0x30
   137a4:	eor	r8, r8, r9
   137a8:	ldr	r9, [sp, #60]	; 0x3c
   137ac:	eor	r8, r8, r9
   137b0:	ror	r8, r8, #31
   137b4:	mov	r9, r8
   137b8:	eor	r8, r5, r4
   137bc:	eor	r8, r8, lr
   137c0:	str	r9, [sp, #20]
   137c4:	add	r9, r9, sl
   137c8:	add	r6, r9, r6
   137cc:	add	r6, r8, r6
   137d0:	add	r8, r6, r7, ror #27
   137d4:	ror	lr, lr, #2
   137d8:	eor	ip, ip, r1
   137dc:	ldr	r6, [sp, #52]	; 0x34
   137e0:	eor	ip, ip, r6
   137e4:	str	r3, [sp, #64]	; 0x40
   137e8:	eor	ip, ip, r3
   137ec:	ror	ip, ip, #31
   137f0:	mov	r9, ip
   137f4:	eor	ip, r4, lr
   137f8:	eor	ip, ip, r7
   137fc:	add	r6, r9, sl
   13800:	add	r5, r6, r5
   13804:	add	ip, ip, r5
   13808:	add	ip, ip, r8, ror #27
   1380c:	ror	r7, r7, #2
   13810:	eor	r0, r0, r2
   13814:	ldr	r3, [sp, #56]	; 0x38
   13818:	eor	r0, r0, r3
   1381c:	ldr	r5, [sp, #12]
   13820:	eor	r0, r0, r5
   13824:	ror	r5, r0, #31
   13828:	eor	r0, lr, r7
   1382c:	eor	r0, r0, r8
   13830:	str	r5, [sp, #72]	; 0x48
   13834:	add	r5, r5, sl
   13838:	add	r4, r5, r4
   1383c:	add	r0, r0, r4
   13840:	add	r0, r0, ip, ror #27
   13844:	ror	r8, r8, #2
   13848:	ldr	r3, [sp, #36]	; 0x24
   1384c:	eor	r1, r1, r3
   13850:	ldr	r5, [sp, #28]
   13854:	eor	r1, r1, r5
   13858:	ldr	r4, [sp, #20]
   1385c:	eor	r1, r1, r4
   13860:	ror	r6, r1, #31
   13864:	eor	r1, r7, r8
   13868:	eor	r1, r1, ip
   1386c:	add	r4, r6, sl
   13870:	add	lr, r4, lr
   13874:	add	r1, r1, lr
   13878:	add	r1, r1, r0, ror #27
   1387c:	ror	ip, ip, #2
   13880:	ldr	r4, [sp, #40]	; 0x28
   13884:	eor	r2, r2, r4
   13888:	eor	r2, r2, fp
   1388c:	str	r9, [sp, #68]	; 0x44
   13890:	eor	r2, r2, r9
   13894:	ror	fp, r2, #31
   13898:	eor	r2, r8, ip
   1389c:	eor	r2, r2, r0
   138a0:	add	lr, fp, sl
   138a4:	add	r7, lr, r7
   138a8:	add	r2, r2, r7
   138ac:	add	r2, r2, r1, ror #27
   138b0:	ror	r0, r0, #2
   138b4:	ldr	r7, [sp, #44]	; 0x2c
   138b8:	eor	r3, r3, r7
   138bc:	ldr	sl, [sp, #60]	; 0x3c
   138c0:	eor	r3, r3, sl
   138c4:	ldr	sl, [sp, #72]	; 0x48
   138c8:	eor	r3, r3, sl
   138cc:	ror	sl, r3, #31
   138d0:	ldr	r5, [sp, #8]
   138d4:	add	r3, sl, r5
   138d8:	add	r8, r3, r8
   138dc:	add	r8, r8, r2, ror #27
   138e0:	orr	r3, r1, r0
   138e4:	and	r3, r3, ip
   138e8:	and	lr, r1, r0
   138ec:	orr	r3, r3, lr
   138f0:	add	r8, r3, r8
   138f4:	ror	r1, r1, #2
   138f8:	ldr	r9, [sp, #48]	; 0x30
   138fc:	eor	r3, r4, r9
   13900:	ldr	r4, [sp, #64]	; 0x40
   13904:	eor	r3, r3, r4
   13908:	eor	r3, r3, r6
   1390c:	ror	lr, r3, #31
   13910:	orr	r4, r2, r1
   13914:	and	r3, r4, r0
   13918:	and	r4, r2, r1
   1391c:	orr	r4, r3, r4
   13920:	str	lr, [sp, #24]
   13924:	mov	r3, lr
   13928:	mov	lr, r5
   1392c:	add	r3, r3, r5
   13930:	add	ip, r3, ip
   13934:	add	ip, r4, ip
   13938:	add	r4, ip, r8, ror #27
   1393c:	ror	r2, r2, #2
   13940:	ldr	r3, [sp, #52]	; 0x34
   13944:	eor	r3, r7, r3
   13948:	ldr	ip, [sp, #12]
   1394c:	eor	r3, r3, ip
   13950:	eor	r3, r3, fp
   13954:	ror	ip, r3, #31
   13958:	str	ip, [sp, #36]	; 0x24
   1395c:	add	r3, ip, r5
   13960:	add	r0, r3, r0
   13964:	add	r0, r0, r4, ror #27
   13968:	orr	r3, r8, r2
   1396c:	and	r3, r3, r1
   13970:	and	ip, r8, r2
   13974:	orr	r3, r3, ip
   13978:	add	r0, r3, r0
   1397c:	ror	r8, r8, #2
   13980:	ldr	r7, [sp, #56]	; 0x38
   13984:	eor	r3, r9, r7
   13988:	ldr	r9, [sp, #20]
   1398c:	eor	r3, r3, r9
   13990:	str	sl, [sp, #48]	; 0x30
   13994:	eor	r3, r3, sl
   13998:	ror	sl, r3, #31
   1399c:	orr	r5, r4, r8
   139a0:	and	r3, r5, r2
   139a4:	and	r5, r4, r8
   139a8:	orr	r5, r3, r5
   139ac:	mov	ip, lr
   139b0:	add	r3, sl, lr
   139b4:	add	r1, r3, r1
   139b8:	add	r1, r5, r1
   139bc:	add	r5, r1, r0, ror #27
   139c0:	ror	r4, r4, #2
   139c4:	ldr	lr, [sp, #52]	; 0x34
   139c8:	ldr	r3, [sp, #28]
   139cc:	eor	r3, lr, r3
   139d0:	ldr	lr, [sp, #68]	; 0x44
   139d4:	eor	r3, r3, lr
   139d8:	ldr	r1, [sp, #24]
   139dc:	eor	r3, r3, r1
   139e0:	ror	r9, r3, #31
   139e4:	add	r3, r9, ip
   139e8:	add	r2, r3, r2
   139ec:	add	r2, r2, r5, ror #27
   139f0:	orr	r3, r0, r4
   139f4:	and	r3, r3, r8
   139f8:	and	r1, r0, r4
   139fc:	orr	r3, r3, r1
   13a00:	add	r2, r3, r2
   13a04:	ror	r0, r0, #2
   13a08:	ldr	r1, [sp, #32]
   13a0c:	eor	r3, r7, r1
   13a10:	ldr	r7, [sp, #72]	; 0x48
   13a14:	eor	r3, r3, r7
   13a18:	ldr	r7, [sp, #36]	; 0x24
   13a1c:	eor	r3, r3, r7
   13a20:	ror	r7, r3, #31
   13a24:	orr	lr, r5, r0
   13a28:	and	r3, lr, r4
   13a2c:	and	lr, r5, r0
   13a30:	orr	lr, r3, lr
   13a34:	str	r7, [sp, #40]	; 0x28
   13a38:	mov	r1, r7
   13a3c:	mov	r7, ip
   13a40:	add	r3, r1, ip
   13a44:	add	r8, r3, r8
   13a48:	add	lr, lr, r8
   13a4c:	add	lr, lr, r2, ror #27
   13a50:	ror	ip, r5, #2
   13a54:	ldr	r3, [sp, #28]
   13a58:	ldr	r8, [sp, #60]	; 0x3c
   13a5c:	eor	r3, r3, r8
   13a60:	eor	r3, r3, r6
   13a64:	eor	r3, r3, sl
   13a68:	ror	r5, r3, #31
   13a6c:	str	r5, [sp, #52]	; 0x34
   13a70:	add	r3, r5, r7
   13a74:	add	r4, r3, r4
   13a78:	add	r4, r4, lr, ror #27
   13a7c:	orr	r3, r2, ip
   13a80:	and	r3, r3, r0
   13a84:	and	r1, r2, ip
   13a88:	orr	r3, r3, r1
   13a8c:	add	r3, r3, r4
   13a90:	ror	r2, r2, #2
   13a94:	ldr	r1, [sp, #32]
   13a98:	ldr	r4, [sp, #64]	; 0x40
   13a9c:	eor	r1, r1, r4
   13aa0:	eor	r1, r1, fp
   13aa4:	eor	r1, r1, r9
   13aa8:	ror	r4, r1, #31
   13aac:	orr	r5, lr, r2
   13ab0:	and	r1, r5, ip
   13ab4:	and	r5, lr, r2
   13ab8:	orr	r5, r1, r5
   13abc:	str	r4, [sp, #28]
   13ac0:	mov	r1, r4
   13ac4:	mov	r4, r7
   13ac8:	add	r1, r1, r7
   13acc:	add	r0, r1, r0
   13ad0:	add	r0, r5, r0
   13ad4:	add	r0, r0, r3, ror #27
   13ad8:	ror	r7, lr, #2
   13adc:	ldr	r1, [sp, #12]
   13ae0:	eor	r1, r8, r1
   13ae4:	ldr	r5, [sp, #48]	; 0x30
   13ae8:	eor	r1, r1, r5
   13aec:	ldr	r8, [sp, #40]	; 0x28
   13af0:	eor	r1, r1, r8
   13af4:	ror	r8, r1, #31
   13af8:	str	r8, [sp, #32]
   13afc:	add	r5, r8, r4
   13b00:	add	r5, r5, ip
   13b04:	add	ip, r5, r0, ror #27
   13b08:	orr	r5, r3, r7
   13b0c:	and	r5, r5, r2
   13b10:	and	r1, r3, r7
   13b14:	orr	r5, r5, r1
   13b18:	add	r5, r5, ip
   13b1c:	ror	r4, r3, #2
   13b20:	ldr	r3, [sp, #64]	; 0x40
   13b24:	ldr	ip, [sp, #20]
   13b28:	eor	lr, r3, ip
   13b2c:	ldr	r8, [sp, #24]
   13b30:	eor	lr, lr, r8
   13b34:	ldr	r3, [sp, #52]	; 0x34
   13b38:	eor	lr, lr, r3
   13b3c:	ror	r8, lr, #31
   13b40:	orr	r3, r0, r4
   13b44:	and	r1, r3, r7
   13b48:	and	r3, r0, r4
   13b4c:	orr	r3, r1, r3
   13b50:	ldr	lr, [sp, #8]
   13b54:	add	r1, r8, lr
   13b58:	add	r2, r1, r2
   13b5c:	add	r2, r3, r2
   13b60:	add	r2, r2, r5, ror #27
   13b64:	ror	r0, r0, #2
   13b68:	ldr	r3, [sp, #12]
   13b6c:	ldr	r1, [sp, #68]	; 0x44
   13b70:	eor	ip, r3, r1
   13b74:	ldr	r3, [sp, #36]	; 0x24
   13b78:	eor	ip, ip, r3
   13b7c:	ldr	r3, [sp, #28]
   13b80:	eor	ip, ip, r3
   13b84:	ror	ip, ip, #31
   13b88:	str	ip, [sp, #56]	; 0x38
   13b8c:	mov	r3, ip
   13b90:	mov	ip, lr
   13b94:	add	lr, r3, lr
   13b98:	add	lr, lr, r7
   13b9c:	add	lr, lr, r2, ror #27
   13ba0:	orr	r3, r5, r0
   13ba4:	and	r3, r3, r4
   13ba8:	and	r1, r5, r0
   13bac:	orr	r3, r3, r1
   13bb0:	add	r3, r3, lr
   13bb4:	ror	r5, r5, #2
   13bb8:	ldr	r1, [sp, #20]
   13bbc:	ldr	r7, [sp, #72]	; 0x48
   13bc0:	eor	r1, r1, r7
   13bc4:	eor	r1, r1, sl
   13bc8:	ldr	lr, [sp, #32]
   13bcc:	eor	r1, r1, lr
   13bd0:	ror	lr, r1, #31
   13bd4:	str	lr, [sp, #20]
   13bd8:	orr	lr, r2, r5
   13bdc:	and	r1, lr, r0
   13be0:	and	lr, r2, r5
   13be4:	orr	lr, r1, lr
   13be8:	ldr	r1, [sp, #20]
   13bec:	add	r1, r1, ip
   13bf0:	add	r4, r1, r4
   13bf4:	add	lr, lr, r4
   13bf8:	add	lr, lr, r3, ror #27
   13bfc:	ror	r2, r2, #2
   13c00:	ldr	r1, [sp, #68]	; 0x44
   13c04:	eor	r1, r1, r6
   13c08:	eor	r1, r1, r9
   13c0c:	eor	r1, r1, r8
   13c10:	ror	r4, r1, #31
   13c14:	str	r4, [sp, #44]	; 0x2c
   13c18:	mov	r1, r4
   13c1c:	mov	r4, ip
   13c20:	add	r1, r1, ip
   13c24:	add	r0, r1, r0
   13c28:	add	r0, r0, lr, ror #27
   13c2c:	orr	ip, r3, r2
   13c30:	and	ip, ip, r5
   13c34:	and	r1, r3, r2
   13c38:	orr	ip, ip, r1
   13c3c:	add	ip, ip, r0
   13c40:	ror	r3, r3, #2
   13c44:	eor	r7, r7, fp
   13c48:	ldr	r0, [sp, #40]	; 0x28
   13c4c:	eor	r7, r7, r0
   13c50:	ldr	r0, [sp, #56]	; 0x38
   13c54:	eor	r7, r7, r0
   13c58:	ror	r7, r7, #31
   13c5c:	orr	r0, lr, r3
   13c60:	and	r1, r0, r2
   13c64:	and	r0, lr, r3
   13c68:	orr	r0, r1, r0
   13c6c:	add	r1, r7, r4
   13c70:	add	r5, r1, r5
   13c74:	add	r0, r0, r5
   13c78:	add	r0, r0, ip, ror #27
   13c7c:	ror	lr, lr, #2
   13c80:	ldr	r5, [sp, #48]	; 0x30
   13c84:	eor	r6, r6, r5
   13c88:	ldr	r1, [sp, #52]	; 0x34
   13c8c:	eor	r6, r6, r1
   13c90:	ldr	r5, [sp, #20]
   13c94:	eor	r6, r6, r5
   13c98:	ror	r6, r6, #31
   13c9c:	mov	r5, r4
   13ca0:	add	r1, r6, r4
   13ca4:	add	r2, r1, r2
   13ca8:	add	r2, r2, r0, ror #27
   13cac:	orr	r1, ip, lr
   13cb0:	and	r1, r1, r3
   13cb4:	and	r4, ip, lr
   13cb8:	orr	r1, r1, r4
   13cbc:	add	r1, r1, r2
   13cc0:	ror	ip, ip, #2
   13cc4:	ldr	r2, [sp, #24]
   13cc8:	eor	fp, fp, r2
   13ccc:	ldr	r4, [sp, #28]
   13cd0:	eor	fp, fp, r4
   13cd4:	ldr	r2, [sp, #44]	; 0x2c
   13cd8:	eor	fp, fp, r2
   13cdc:	ror	fp, fp, #31
   13ce0:	orr	r2, r0, ip
   13ce4:	and	r4, r2, lr
   13ce8:	and	r2, r0, ip
   13cec:	orr	r2, r4, r2
   13cf0:	add	r4, fp, r5
   13cf4:	add	r3, r4, r3
   13cf8:	add	r2, r2, r3
   13cfc:	add	r2, r2, r1, ror #27
   13d00:	ror	r0, r0, #2
   13d04:	ldr	r3, [sp, #48]	; 0x30
   13d08:	ldr	r4, [sp, #36]	; 0x24
   13d0c:	eor	r3, r3, r4
   13d10:	ldr	r4, [sp, #32]
   13d14:	eor	r3, r3, r4
   13d18:	eor	r3, r3, r7
   13d1c:	ror	r3, r3, #31
   13d20:	str	r3, [sp, #60]	; 0x3c
   13d24:	add	r3, r3, r5
   13d28:	add	r3, r3, lr
   13d2c:	add	lr, r3, r2, ror #27
   13d30:	orr	r3, r1, r0
   13d34:	and	r3, r3, ip
   13d38:	and	r4, r1, r0
   13d3c:	orr	r3, r3, r4
   13d40:	add	r3, r3, lr
   13d44:	ror	r1, r1, #2
   13d48:	ldr	lr, [sp, #24]
   13d4c:	eor	lr, lr, sl
   13d50:	eor	lr, lr, r8
   13d54:	eor	lr, lr, r6
   13d58:	ror	lr, lr, #31
   13d5c:	str	lr, [sp, #12]
   13d60:	orr	r4, r2, r1
   13d64:	and	lr, r4, r0
   13d68:	and	r4, r2, r1
   13d6c:	orr	r4, lr, r4
   13d70:	ldr	lr, [sp, #12]
   13d74:	add	lr, lr, r5
   13d78:	add	ip, lr, ip
   13d7c:	add	r4, r4, ip
   13d80:	add	r4, r4, r3, ror #27
   13d84:	ror	r2, r2, #2
   13d88:	ldr	ip, [sp, #36]	; 0x24
   13d8c:	eor	r5, ip, r9
   13d90:	ldr	ip, [sp, #56]	; 0x38
   13d94:	eor	r5, r5, ip
   13d98:	eor	r5, r5, fp
   13d9c:	ror	ip, r5, #31
   13da0:	str	ip, [sp, #24]
   13da4:	ldr	r5, [sp, #8]
   13da8:	add	ip, ip, r5
   13dac:	add	r0, ip, r0
   13db0:	add	r0, r0, r4, ror #27
   13db4:	orr	r5, r3, r2
   13db8:	and	r5, r5, r1
   13dbc:	and	ip, r3, r2
   13dc0:	orr	r5, r5, ip
   13dc4:	add	r5, r5, r0
   13dc8:	ror	r3, r3, #2
   13dcc:	ldr	ip, [sp, #40]	; 0x28
   13dd0:	eor	sl, sl, ip
   13dd4:	ldr	lr, [sp, #20]
   13dd8:	eor	sl, sl, lr
   13ddc:	ldr	r0, [sp, #60]	; 0x3c
   13de0:	eor	sl, sl, r0
   13de4:	ror	sl, sl, #31
   13de8:	orr	lr, r4, r3
   13dec:	and	r0, lr, r2
   13df0:	and	lr, r4, r3
   13df4:	orr	lr, r0, lr
   13df8:	str	sl, [sp, #36]	; 0x24
   13dfc:	ldr	r0, [sp, #8]
   13e00:	add	r0, sl, r0
   13e04:	add	r1, r0, r1
   13e08:	add	lr, lr, r1
   13e0c:	add	lr, lr, r5, ror #27
   13e10:	ror	r4, r4, #2
   13e14:	ldr	sl, [sp, #52]	; 0x34
   13e18:	eor	r9, r9, sl
   13e1c:	ldr	r0, [sp, #44]	; 0x2c
   13e20:	eor	r9, r9, r0
   13e24:	ldr	r1, [sp, #12]
   13e28:	eor	r9, r9, r1
   13e2c:	ror	r9, r9, #31
   13e30:	eor	ip, r3, r4
   13e34:	eor	ip, ip, r5
   13e38:	str	r9, [sp, #48]	; 0x30
   13e3c:	mov	r1, r9
   13e40:	ldr	r9, [sp, #4]
   13e44:	add	r1, r1, r9
   13e48:	add	r2, r1, r2
   13e4c:	add	ip, ip, r2
   13e50:	add	ip, ip, lr, ror #27
   13e54:	ror	r5, r5, #2
   13e58:	ldr	r1, [sp, #40]	; 0x28
   13e5c:	ldr	r2, [sp, #28]
   13e60:	eor	r2, r1, r2
   13e64:	eor	r2, r2, r7
   13e68:	ldr	r1, [sp, #24]
   13e6c:	eor	r2, r2, r1
   13e70:	ror	r2, r2, #31
   13e74:	eor	r0, r4, r5
   13e78:	eor	r0, r0, lr
   13e7c:	str	r2, [sp, #40]	; 0x28
   13e80:	add	r2, r2, r9
   13e84:	add	r3, r2, r3
   13e88:	add	r0, r0, r3
   13e8c:	add	r0, r0, ip, ror #27
   13e90:	ror	lr, lr, #2
   13e94:	ldr	r3, [sp, #32]
   13e98:	eor	r3, sl, r3
   13e9c:	eor	r3, r3, r6
   13ea0:	ldr	sl, [sp, #36]	; 0x24
   13ea4:	eor	r3, r3, sl
   13ea8:	ror	r3, r3, #31
   13eac:	eor	r1, r5, lr
   13eb0:	eor	r1, r1, ip
   13eb4:	str	r3, [sp, #52]	; 0x34
   13eb8:	add	r3, r3, r9
   13ebc:	add	r4, r3, r4
   13ec0:	add	r1, r1, r4
   13ec4:	add	r1, r1, r0, ror #27
   13ec8:	ror	ip, ip, #2
   13ecc:	ldr	r2, [sp, #28]
   13ed0:	eor	r3, r2, r8
   13ed4:	eor	r3, r3, fp
   13ed8:	ldr	r2, [sp, #48]	; 0x30
   13edc:	eor	r3, r3, r2
   13ee0:	ror	r4, r3, #31
   13ee4:	eor	r2, lr, ip
   13ee8:	eor	r2, r2, r0
   13eec:	str	r4, [sp, #28]
   13ef0:	mov	sl, r4
   13ef4:	mov	r4, r9
   13ef8:	add	r3, sl, r9
   13efc:	add	r5, r3, r5
   13f00:	add	r2, r2, r5
   13f04:	add	r2, r2, r1, ror #27
   13f08:	ror	r0, r0, #2
   13f0c:	ldr	r3, [sp, #32]
   13f10:	ldr	r9, [sp, #56]	; 0x38
   13f14:	eor	r3, r3, r9
   13f18:	ldr	r5, [sp, #60]	; 0x3c
   13f1c:	eor	r3, r3, r5
   13f20:	ldr	r5, [sp, #40]	; 0x28
   13f24:	eor	r3, r3, r5
   13f28:	ror	r5, r3, #31
   13f2c:	str	r5, [sp, #88]	; 0x58
   13f30:	eor	r3, ip, r0
   13f34:	eor	r3, r3, r1
   13f38:	str	r5, [sp, #32]
   13f3c:	mov	sl, r5
   13f40:	mov	r5, r4
   13f44:	add	r4, sl, r4
   13f48:	add	lr, r4, lr
   13f4c:	add	r3, r3, lr
   13f50:	add	r3, r3, r2, ror #27
   13f54:	ror	r1, r1, #2
   13f58:	ldr	sl, [sp, #20]
   13f5c:	eor	lr, r8, sl
   13f60:	ldr	r4, [sp, #12]
   13f64:	eor	lr, lr, r4
   13f68:	ldr	r8, [sp, #52]	; 0x34
   13f6c:	eor	lr, lr, r8
   13f70:	ror	lr, lr, #31
   13f74:	str	lr, [sp, #92]	; 0x5c
   13f78:	eor	r8, r0, r1
   13f7c:	eor	r8, r8, r2
   13f80:	str	lr, [sp, #20]
   13f84:	add	lr, lr, r5
   13f88:	add	ip, lr, ip
   13f8c:	add	r8, r8, ip
   13f90:	add	r8, r8, r3, ror #27
   13f94:	ror	r2, r2, #2
   13f98:	ldr	ip, [sp, #44]	; 0x2c
   13f9c:	eor	ip, r9, ip
   13fa0:	ldr	r9, [sp, #24]
   13fa4:	eor	ip, ip, r9
   13fa8:	ldr	lr, [sp, #28]
   13fac:	eor	ip, ip, lr
   13fb0:	ror	ip, ip, #31
   13fb4:	str	ip, [sp, #96]	; 0x60
   13fb8:	eor	r4, r1, r2
   13fbc:	eor	r4, r4, r3
   13fc0:	add	lr, ip, r5
   13fc4:	add	r0, lr, r0
   13fc8:	add	r4, r4, r0
   13fcc:	add	r4, r4, r8, ror #27
   13fd0:	ror	r3, r3, #2
   13fd4:	eor	r0, sl, r7
   13fd8:	ldr	sl, [sp, #36]	; 0x24
   13fdc:	eor	r0, r0, sl
   13fe0:	ldr	lr, [sp, #32]
   13fe4:	eor	r0, r0, lr
   13fe8:	ror	r0, r0, #31
   13fec:	str	r0, [sp, #100]	; 0x64
   13ff0:	eor	lr, r2, r3
   13ff4:	eor	lr, lr, r8
   13ff8:	mov	r9, r5
   13ffc:	str	r0, [sp, #56]	; 0x38
   14000:	add	r5, r0, r5
   14004:	add	r1, r5, r1
   14008:	add	lr, lr, r1
   1400c:	add	lr, lr, r4, ror #27
   14010:	ror	r8, r8, #2
   14014:	ldr	r0, [sp, #44]	; 0x2c
   14018:	eor	r1, r0, r6
   1401c:	ldr	r5, [sp, #48]	; 0x30
   14020:	eor	r1, r1, r5
   14024:	ldr	r0, [sp, #20]
   14028:	eor	r1, r1, r0
   1402c:	ror	r1, r1, #31
   14030:	str	r1, [sp, #104]	; 0x68
   14034:	eor	r5, r3, r8
   14038:	eor	r5, r5, r4
   1403c:	mov	r0, r9
   14040:	add	r9, r1, r9
   14044:	add	r2, r9, r2
   14048:	add	r5, r5, r2
   1404c:	add	r5, r5, lr, ror #27
   14050:	ror	r4, r4, #2
   14054:	eor	r2, r7, fp
   14058:	ldr	r7, [sp, #40]	; 0x28
   1405c:	eor	r2, r2, r7
   14060:	eor	r2, r2, ip
   14064:	ror	r2, r2, #31
   14068:	str	r2, [sp, #108]	; 0x6c
   1406c:	eor	sl, r8, r4
   14070:	eor	sl, sl, lr
   14074:	add	r7, r2, r0
   14078:	add	r3, r7, r3
   1407c:	add	sl, sl, r3
   14080:	add	sl, sl, r5, ror #27
   14084:	ror	lr, lr, #2
   14088:	ldr	r0, [sp, #60]	; 0x3c
   1408c:	eor	r3, r6, r0
   14090:	ldr	r6, [sp, #52]	; 0x34
   14094:	eor	r3, r3, r6
   14098:	ldr	r6, [sp, #56]	; 0x38
   1409c:	eor	r3, r3, r6
   140a0:	ror	r3, r3, #31
   140a4:	str	r3, [sp, #112]	; 0x70
   140a8:	eor	r9, r4, lr
   140ac:	eor	r9, r9, r5
   140b0:	ldr	r7, [sp, #4]
   140b4:	add	r6, r3, r7
   140b8:	add	r8, r6, r8
   140bc:	add	r9, r9, r8
   140c0:	add	r9, r9, sl, ror #27
   140c4:	ror	r5, r5, #2
   140c8:	ldr	r6, [sp, #12]
   140cc:	eor	r6, fp, r6
   140d0:	ldr	fp, [sp, #28]
   140d4:	eor	r6, r6, fp
   140d8:	eor	r6, r6, r1
   140dc:	ror	fp, r6, #31
   140e0:	str	fp, [sp, #116]	; 0x74
   140e4:	eor	r8, lr, r5
   140e8:	eor	r8, r8, sl
   140ec:	add	r6, fp, r7
   140f0:	add	r4, r6, r4
   140f4:	add	r8, r8, r4
   140f8:	add	r8, r8, r9, ror #27
   140fc:	ror	sl, sl, #2
   14100:	ldr	r4, [sp, #24]
   14104:	eor	r4, r0, r4
   14108:	ldr	r0, [sp, #32]
   1410c:	eor	r4, r4, r0
   14110:	eor	r4, r4, r2
   14114:	ror	r4, r4, #31
   14118:	str	r4, [sp, #120]	; 0x78
   1411c:	eor	r7, r5, sl
   14120:	eor	r7, r7, r9
   14124:	ldr	r6, [sp, #4]
   14128:	add	r6, r4, r6
   1412c:	add	lr, r6, lr
   14130:	add	r7, r7, lr
   14134:	add	r7, r7, r8, ror #27
   14138:	ror	r9, r9, #2
   1413c:	ldr	lr, [sp, #12]
   14140:	ldr	r0, [sp, #36]	; 0x24
   14144:	eor	lr, lr, r0
   14148:	ldr	r0, [sp, #20]
   1414c:	eor	lr, lr, r0
   14150:	eor	lr, lr, r3
   14154:	ror	lr, lr, #31
   14158:	str	lr, [sp, #124]	; 0x7c
   1415c:	eor	r6, sl, r9
   14160:	eor	r6, r6, r8
   14164:	ldr	r0, [sp, #4]
   14168:	add	r0, lr, r0
   1416c:	add	r5, r0, r5
   14170:	add	r6, r6, r5
   14174:	add	r6, r6, r7, ror #27
   14178:	ror	r8, r8, #2
   1417c:	ldr	r5, [sp, #24]
   14180:	ldr	r0, [sp, #48]	; 0x30
   14184:	eor	r5, r5, r0
   14188:	eor	ip, ip, r5
   1418c:	eor	ip, ip, fp
   14190:	ror	ip, ip, #31
   14194:	str	ip, [sp, #128]	; 0x80
   14198:	eor	r5, r9, r8
   1419c:	eor	r5, r5, r7
   141a0:	ldr	r0, [sp, #4]
   141a4:	add	r0, ip, r0
   141a8:	add	sl, r0, sl
   141ac:	add	r5, r5, sl
   141b0:	add	r5, r5, r6, ror #27
   141b4:	ror	r7, r7, #2
   141b8:	ldr	sl, [sp, #36]	; 0x24
   141bc:	ldr	r0, [sp, #40]	; 0x28
   141c0:	eor	sl, sl, r0
   141c4:	ldr	r0, [sp, #56]	; 0x38
   141c8:	eor	r0, r0, sl
   141cc:	eor	r4, r4, r0
   141d0:	ror	r4, r4, #31
   141d4:	str	r4, [sp, #132]	; 0x84
   141d8:	eor	r0, r8, r7
   141dc:	eor	r0, r0, r6
   141e0:	ldr	sl, [sp, #4]
   141e4:	add	sl, r4, sl
   141e8:	add	r9, sl, r9
   141ec:	add	r0, r0, r9
   141f0:	add	r0, r0, r5, ror #27
   141f4:	ror	r6, r6, #2
   141f8:	ldr	r9, [sp, #48]	; 0x30
   141fc:	ldr	sl, [sp, #52]	; 0x34
   14200:	eor	r9, r9, sl
   14204:	eor	r1, r1, r9
   14208:	eor	lr, lr, r1
   1420c:	ror	lr, lr, #31
   14210:	str	lr, [sp, #136]	; 0x88
   14214:	eor	r1, r7, r6
   14218:	eor	r1, r1, r5
   1421c:	ldr	sl, [sp, #4]
   14220:	add	r9, lr, sl
   14224:	add	r8, r9, r8
   14228:	add	r1, r1, r8
   1422c:	add	r1, r1, r0, ror #27
   14230:	ror	r5, r5, #2
   14234:	ldr	r8, [sp, #40]	; 0x28
   14238:	ldr	r9, [sp, #28]
   1423c:	eor	r8, r8, r9
   14240:	eor	r2, r2, r8
   14244:	eor	ip, ip, r2
   14248:	ror	ip, ip, #31
   1424c:	str	ip, [sp, #140]	; 0x8c
   14250:	eor	r2, r6, r5
   14254:	eor	r2, r2, r0
   14258:	add	ip, ip, sl
   1425c:	add	r7, ip, r7
   14260:	add	r7, r2, r7
   14264:	add	r2, r7, r1, ror #27
   14268:	ror	r0, r0, #2
   1426c:	ldr	ip, [sp, #52]	; 0x34
   14270:	ldr	r7, [sp, #32]
   14274:	eor	ip, ip, r7
   14278:	eor	r3, r3, ip
   1427c:	eor	r4, r4, r3
   14280:	ror	r4, r4, #31
   14284:	str	r4, [sp, #144]	; 0x90
   14288:	eor	r3, r5, r0
   1428c:	eor	r3, r3, r1
   14290:	add	r4, r4, sl
   14294:	add	r6, r4, r6
   14298:	add	r4, r3, r6
   1429c:	add	r4, r4, r2, ror #27
   142a0:	ror	r1, r1, #2
   142a4:	ldr	r3, [sp, #20]
   142a8:	eor	r3, r9, r3
   142ac:	eor	r3, r3, fp
   142b0:	eor	lr, lr, r3
   142b4:	ror	lr, lr, #31
   142b8:	str	lr, [sp, #148]	; 0x94
   142bc:	ldr	r6, [sp, #80]	; 0x50
   142c0:	ldr	r3, [r6]
   142c4:	add	r3, r3, sl
   142c8:	add	r3, r3, lr
   142cc:	add	r5, r3, r5
   142d0:	eor	r3, r0, r1
   142d4:	eor	r3, r3, r2
   142d8:	add	r3, r5, r3
   142dc:	add	ip, r3, r4, ror #27
   142e0:	str	ip, [r6]
   142e4:	ldr	r3, [r6, #4]
   142e8:	add	r4, r4, r3
   142ec:	str	r4, [r6, #4]
   142f0:	ldr	r5, [r6, #8]
   142f4:	add	r5, r5, r2, ror #2
   142f8:	str	r5, [r6, #8]
   142fc:	ldr	r3, [r6, #12]
   14300:	add	r1, r1, r3
   14304:	str	r1, [r6, #12]
   14308:	ldr	r3, [r6, #16]
   1430c:	add	r0, r0, r3
   14310:	str	r0, [r6, #16]
   14314:	ldr	r3, [sp, #76]	; 0x4c
   14318:	add	r3, r3, #64	; 0x40
   1431c:	str	r3, [sp, #76]	; 0x4c
   14320:	ldr	r2, [sp, #84]	; 0x54
   14324:	cmp	r3, r2
   14328:	bne	13078 <dcngettext@plt+0x2088>
   1432c:	add	sp, sp, #156	; 0x9c
   14330:	ldrd	r4, [sp]
   14334:	ldrd	r6, [sp, #8]
   14338:	ldrd	r8, [sp, #16]
   1433c:	ldrd	sl, [sp, #24]
   14340:	add	sp, sp, #32
   14344:	pop	{pc}		; (ldr pc, [sp], #4)
   14348:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1434c:	strd	r6, [sp, #8]
   14350:	str	r8, [sp, #16]
   14354:	str	lr, [sp, #20]
   14358:	mov	r4, r0
   1435c:	mov	r6, r1
   14360:	ldr	r0, [r0, #28]
   14364:	cmp	r0, #56	; 0x38
   14368:	movcc	r5, #16
   1436c:	movcs	r5, #32
   14370:	ldr	r3, [r4, #20]
   14374:	add	r3, r0, r3
   14378:	str	r3, [r4, #20]
   1437c:	cmp	r3, r0
   14380:	bcs	14390 <dcngettext@plt+0x33a0>
   14384:	ldr	r2, [r4, #24]
   14388:	add	r2, r2, #1
   1438c:	str	r2, [r4, #24]
   14390:	ldr	r1, [r4, #24]
   14394:	lsr	r2, r3, #29
   14398:	orr	r2, r2, r1, lsl #3
   1439c:	rev	r2, r2
   143a0:	add	r1, r4, r5, lsl #2
   143a4:	str	r2, [r1, #24]
   143a8:	lsl	r3, r3, #3
   143ac:	rev	r3, r3
   143b0:	str	r3, [r1, #28]
   143b4:	add	r7, r4, #32
   143b8:	sub	r5, r5, #-1073741822	; 0xc0000002
   143bc:	lsl	r5, r5, #2
   143c0:	sub	r2, r5, r0
   143c4:	movw	r1, #36044	; 0x8ccc
   143c8:	movt	r1, #1
   143cc:	add	r0, r7, r0
   143d0:	bl	10dc8 <memcpy@plt>
   143d4:	mov	r2, r4
   143d8:	add	r1, r5, #8
   143dc:	mov	r0, r7
   143e0:	bl	12fb8 <dcngettext@plt+0x1fc8>
   143e4:	mov	r1, r6
   143e8:	mov	r0, r4
   143ec:	bl	12f40 <dcngettext@plt+0x1f50>
   143f0:	ldrd	r4, [sp]
   143f4:	ldrd	r6, [sp, #8]
   143f8:	ldr	r8, [sp, #16]
   143fc:	add	sp, sp, #20
   14400:	pop	{pc}		; (ldr pc, [sp], #4)
   14404:	strd	r4, [sp, #-36]!	; 0xffffffdc
   14408:	strd	r6, [sp, #8]
   1440c:	strd	r8, [sp, #16]
   14410:	strd	sl, [sp, #24]
   14414:	str	lr, [sp, #32]
   14418:	sub	sp, sp, #4
   1441c:	mov	r4, r0
   14420:	mov	r6, r1
   14424:	mov	r5, r2
   14428:	ldr	r7, [r2, #28]
   1442c:	cmp	r7, #0
   14430:	bne	144ec <dcngettext@plt+0x34fc>
   14434:	cmp	r6, #63	; 0x3f
   14438:	bls	144c8 <dcngettext@plt+0x34d8>
   1443c:	tst	r4, #3
   14440:	beq	14560 <dcngettext@plt+0x3570>
   14444:	cmp	r6, #64	; 0x40
   14448:	bls	14580 <dcngettext@plt+0x3590>
   1444c:	sub	sl, r6, #65	; 0x41
   14450:	lsr	sl, sl, #6
   14454:	add	r8, sl, #1
   14458:	add	r8, r4, r8, lsl #6
   1445c:	add	r7, r5, #32
   14460:	mov	r9, #64	; 0x40
   14464:	mov	r3, r4
   14468:	mov	r2, r7
   1446c:	add	fp, r4, #64	; 0x40
   14470:	ldr	lr, [r3]
   14474:	ldr	ip, [r3, #4]
   14478:	ldr	r0, [r3, #8]
   1447c:	ldr	r1, [r3, #12]
   14480:	str	lr, [r2]
   14484:	str	ip, [r2, #4]
   14488:	str	r0, [r2, #8]
   1448c:	str	r1, [r2, #12]
   14490:	add	r3, r3, #16
   14494:	add	r2, r2, #16
   14498:	cmp	r3, fp
   1449c:	bne	14470 <dcngettext@plt+0x3480>
   144a0:	mov	r2, r5
   144a4:	mov	r1, r9
   144a8:	mov	r0, r7
   144ac:	bl	12fb8 <dcngettext@plt+0x1fc8>
   144b0:	add	r4, r4, #64	; 0x40
   144b4:	cmp	r4, r8
   144b8:	bne	14464 <dcngettext@plt+0x3474>
   144bc:	sub	r6, r6, #64	; 0x40
   144c0:	sub	r6, r6, sl, lsl #6
   144c4:	mov	r4, r8
   144c8:	cmp	r6, #0
   144cc:	bne	14580 <dcngettext@plt+0x3590>
   144d0:	add	sp, sp, #4
   144d4:	ldrd	r4, [sp]
   144d8:	ldrd	r6, [sp, #8]
   144dc:	ldrd	r8, [sp, #16]
   144e0:	ldrd	sl, [sp, #24]
   144e4:	add	sp, sp, #32
   144e8:	pop	{pc}		; (ldr pc, [sp], #4)
   144ec:	rsb	r8, r7, #128	; 0x80
   144f0:	cmp	r8, r1
   144f4:	movcs	r8, r1
   144f8:	add	r9, r2, #32
   144fc:	mov	r2, r8
   14500:	mov	r1, r0
   14504:	add	r0, r9, r7
   14508:	bl	10dc8 <memcpy@plt>
   1450c:	ldr	r1, [r5, #28]
   14510:	add	r1, r8, r1
   14514:	str	r1, [r5, #28]
   14518:	cmp	r1, #64	; 0x40
   1451c:	bhi	1452c <dcngettext@plt+0x353c>
   14520:	add	r4, r4, r8
   14524:	sub	r6, r6, r8
   14528:	b	14434 <dcngettext@plt+0x3444>
   1452c:	mov	r2, r5
   14530:	bic	r1, r1, #63	; 0x3f
   14534:	mov	r0, r9
   14538:	bl	12fb8 <dcngettext@plt+0x1fc8>
   1453c:	ldr	r2, [r5, #28]
   14540:	and	r2, r2, #63	; 0x3f
   14544:	str	r2, [r5, #28]
   14548:	add	r1, r7, r8
   1454c:	bic	r1, r1, #63	; 0x3f
   14550:	add	r1, r9, r1
   14554:	mov	r0, r9
   14558:	bl	10dc8 <memcpy@plt>
   1455c:	b	14520 <dcngettext@plt+0x3530>
   14560:	bic	r7, r6, #63	; 0x3f
   14564:	mov	r2, r5
   14568:	mov	r1, r7
   1456c:	mov	r0, r4
   14570:	bl	12fb8 <dcngettext@plt+0x1fc8>
   14574:	add	r4, r4, r7
   14578:	and	r6, r6, #63	; 0x3f
   1457c:	b	144c8 <dcngettext@plt+0x34d8>
   14580:	ldr	r7, [r5, #28]
   14584:	add	r8, r5, #32
   14588:	mov	r2, r6
   1458c:	mov	r1, r4
   14590:	add	r0, r8, r7
   14594:	bl	10dc8 <memcpy@plt>
   14598:	add	r6, r7, r6
   1459c:	cmp	r6, #63	; 0x3f
   145a0:	bhi	145ac <dcngettext@plt+0x35bc>
   145a4:	str	r6, [r5, #28]
   145a8:	b	144d0 <dcngettext@plt+0x34e0>
   145ac:	mov	r2, r5
   145b0:	mov	r1, #64	; 0x40
   145b4:	mov	r0, r8
   145b8:	bl	12fb8 <dcngettext@plt+0x1fc8>
   145bc:	sub	r6, r6, #64	; 0x40
   145c0:	mov	r2, r6
   145c4:	add	r1, r5, #96	; 0x60
   145c8:	mov	r0, r8
   145cc:	bl	10dc8 <memcpy@plt>
   145d0:	b	145a4 <dcngettext@plt+0x35b4>
   145d4:	strd	r4, [sp, #-16]!
   145d8:	str	r6, [sp, #8]
   145dc:	str	lr, [sp, #12]
   145e0:	sub	sp, sp, #160	; 0xa0
   145e4:	mov	r5, r0
   145e8:	mov	r6, r1
   145ec:	mov	r4, r2
   145f0:	mov	r0, sp
   145f4:	bl	12ef0 <dcngettext@plt+0x1f00>
   145f8:	mov	r2, sp
   145fc:	mov	r1, r6
   14600:	mov	r0, r5
   14604:	bl	14404 <dcngettext@plt+0x3414>
   14608:	mov	r1, r4
   1460c:	mov	r0, sp
   14610:	bl	14348 <dcngettext@plt+0x3358>
   14614:	add	sp, sp, #160	; 0xa0
   14618:	ldrd	r4, [sp]
   1461c:	ldr	r6, [sp, #8]
   14620:	add	sp, sp, #12
   14624:	pop	{pc}		; (ldr pc, [sp], #4)
   14628:	strd	r4, [sp, #-12]!
   1462c:	str	lr, [sp, #8]
   14630:	sub	sp, sp, #20
   14634:	ldr	r1, [sp, #40]	; 0x28
   14638:	str	r1, [sp, #8]
   1463c:	ldrd	r4, [sp, #32]
   14640:	strd	r4, [sp]
   14644:	bl	10d98 <posix_fadvise64@plt>
   14648:	add	sp, sp, #20
   1464c:	ldrd	r4, [sp]
   14650:	add	sp, sp, #8
   14654:	pop	{pc}		; (ldr pc, [sp], #4)
   14658:	cmp	r0, #0
   1465c:	bxeq	lr
   14660:	str	r4, [sp, #-8]!
   14664:	str	lr, [sp, #4]
   14668:	sub	sp, sp, #16
   1466c:	mov	r4, r1
   14670:	bl	10f30 <fileno@plt>
   14674:	str	r4, [sp, #8]
   14678:	mov	r2, #0
   1467c:	mov	r3, #0
   14680:	strd	r2, [sp]
   14684:	bl	10d98 <posix_fadvise64@plt>
   14688:	add	sp, sp, #16
   1468c:	ldr	r4, [sp]
   14690:	add	sp, sp, #4
   14694:	pop	{pc}		; (ldr pc, [sp], #4)
   14698:	strd	r4, [sp, #-16]!
   1469c:	str	r6, [sp, #8]
   146a0:	str	lr, [sp, #12]
   146a4:	sub	sp, sp, #8
   146a8:	mov	r4, r0
   146ac:	bl	10f30 <fileno@plt>
   146b0:	cmp	r0, #0
   146b4:	blt	1472c <dcngettext@plt+0x373c>
   146b8:	mov	r0, r4
   146bc:	bl	10e94 <__freading@plt>
   146c0:	cmp	r0, #0
   146c4:	beq	146f8 <dcngettext@plt+0x3708>
   146c8:	mov	r0, r4
   146cc:	bl	10f30 <fileno@plt>
   146d0:	mov	r3, #1
   146d4:	str	r3, [sp]
   146d8:	mov	r2, #0
   146dc:	mov	r3, #0
   146e0:	bl	10e40 <lseek64@plt>
   146e4:	mvn	r2, #0
   146e8:	mvn	r3, #0
   146ec:	cmp	r1, r3
   146f0:	cmpeq	r0, r2
   146f4:	beq	14738 <dcngettext@plt+0x3748>
   146f8:	mov	r0, r4
   146fc:	bl	14754 <dcngettext@plt+0x3764>
   14700:	cmp	r0, #0
   14704:	beq	14738 <dcngettext@plt+0x3748>
   14708:	bl	10ef4 <__errno_location@plt>
   1470c:	mov	r5, r0
   14710:	ldr	r6, [r0]
   14714:	mov	r0, r4
   14718:	bl	10f48 <fclose@plt>
   1471c:	cmp	r6, #0
   14720:	strne	r6, [r5]
   14724:	mvnne	r0, #0
   14728:	b	14740 <dcngettext@plt+0x3750>
   1472c:	mov	r0, r4
   14730:	bl	10f48 <fclose@plt>
   14734:	b	14740 <dcngettext@plt+0x3750>
   14738:	mov	r0, r4
   1473c:	bl	10f48 <fclose@plt>
   14740:	add	sp, sp, #8
   14744:	ldrd	r4, [sp]
   14748:	ldr	r6, [sp, #8]
   1474c:	add	sp, sp, #12
   14750:	pop	{pc}		; (ldr pc, [sp], #4)
   14754:	str	r4, [sp, #-8]!
   14758:	str	lr, [sp, #4]
   1475c:	sub	sp, sp, #8
   14760:	subs	r4, r0, #0
   14764:	beq	14778 <dcngettext@plt+0x3788>
   14768:	mov	r0, r4
   1476c:	bl	10e94 <__freading@plt>
   14770:	cmp	r0, #0
   14774:	bne	14790 <dcngettext@plt+0x37a0>
   14778:	mov	r0, r4
   1477c:	bl	10da4 <fflush@plt>
   14780:	add	sp, sp, #8
   14784:	ldr	r4, [sp]
   14788:	add	sp, sp, #4
   1478c:	pop	{pc}		; (ldr pc, [sp], #4)
   14790:	ldr	r3, [r4]
   14794:	tst	r3, #256	; 0x100
   14798:	bne	147a8 <dcngettext@plt+0x37b8>
   1479c:	mov	r0, r4
   147a0:	bl	10da4 <fflush@plt>
   147a4:	b	14780 <dcngettext@plt+0x3790>
   147a8:	mov	r3, #1
   147ac:	str	r3, [sp]
   147b0:	mov	r2, #0
   147b4:	mov	r3, #0
   147b8:	mov	r0, r4
   147bc:	bl	148d4 <dcngettext@plt+0x38e4>
   147c0:	b	1479c <dcngettext@plt+0x37ac>
   147c4:	strd	r4, [sp, #-16]!
   147c8:	str	r6, [sp, #8]
   147cc:	str	lr, [sp, #12]
   147d0:	mov	r5, r1
   147d4:	bl	10fa8 <fopen64@plt>
   147d8:	subs	r4, r0, #0
   147dc:	beq	147f0 <dcngettext@plt+0x3800>
   147e0:	mov	r0, r4
   147e4:	bl	10f30 <fileno@plt>
   147e8:	cmp	r0, #2
   147ec:	bls	14804 <dcngettext@plt+0x3814>
   147f0:	mov	r0, r4
   147f4:	ldrd	r4, [sp]
   147f8:	ldr	r6, [sp, #8]
   147fc:	add	sp, sp, #12
   14800:	pop	{pc}		; (ldr pc, [sp], #4)
   14804:	bl	16cb0 <dcngettext@plt+0x5cc0>
   14808:	subs	r6, r0, #0
   1480c:	blt	14854 <dcngettext@plt+0x3864>
   14810:	mov	r0, r4
   14814:	bl	14698 <dcngettext@plt+0x36a8>
   14818:	cmp	r0, #0
   1481c:	bne	14834 <dcngettext@plt+0x3844>
   14820:	mov	r1, r5
   14824:	mov	r0, r6
   14828:	bl	10d50 <fdopen@plt>
   1482c:	subs	r4, r0, #0
   14830:	bne	147f0 <dcngettext@plt+0x3800>
   14834:	bl	10ef4 <__errno_location@plt>
   14838:	mov	r4, r0
   1483c:	ldr	r5, [r0]
   14840:	mov	r0, r6
   14844:	bl	10fe4 <close@plt>
   14848:	str	r5, [r4]
   1484c:	mov	r4, #0
   14850:	b	147f0 <dcngettext@plt+0x3800>
   14854:	bl	10ef4 <__errno_location@plt>
   14858:	mov	r5, r0
   1485c:	ldr	r6, [r0]
   14860:	mov	r0, r4
   14864:	bl	14698 <dcngettext@plt+0x36a8>
   14868:	str	r6, [r5]
   1486c:	mov	r4, #0
   14870:	b	147f0 <dcngettext@plt+0x3800>
   14874:	strd	r4, [sp, #-12]!
   14878:	str	lr, [sp, #8]
   1487c:	sub	sp, sp, #12
   14880:	mov	r5, r0
   14884:	bl	10ef4 <__errno_location@plt>
   14888:	mov	r4, r0
   1488c:	ldr	r3, [r0]
   14890:	str	r3, [sp]
   14894:	str	r3, [sp, #4]
   14898:	mov	r3, #0
   1489c:	str	r3, [r0]
   148a0:	mov	r0, r5
   148a4:	bl	10db0 <free@plt>
   148a8:	ldr	r3, [r4]
   148ac:	clz	r3, r3
   148b0:	lsr	r3, r3, #5
   148b4:	add	r2, sp, #8
   148b8:	add	r3, r2, r3, lsl #2
   148bc:	ldr	r3, [r3, #-8]
   148c0:	str	r3, [r4]
   148c4:	add	sp, sp, #12
   148c8:	ldrd	r4, [sp]
   148cc:	add	sp, sp, #8
   148d0:	pop	{pc}		; (ldr pc, [sp], #4)
   148d4:	str	r4, [sp, #-16]!
   148d8:	strd	r6, [sp, #4]
   148dc:	str	lr, [sp, #12]
   148e0:	sub	sp, sp, #8
   148e4:	mov	r4, r0
   148e8:	mov	r6, r2
   148ec:	mov	r7, r3
   148f0:	ldr	r2, [r0, #8]
   148f4:	ldr	r3, [r0, #4]
   148f8:	cmp	r2, r3
   148fc:	beq	1492c <dcngettext@plt+0x393c>
   14900:	ldr	r3, [sp, #24]
   14904:	str	r3, [sp]
   14908:	mov	r2, r6
   1490c:	mov	r3, r7
   14910:	mov	r0, r4
   14914:	bl	10f54 <fseeko64@plt>
   14918:	add	sp, sp, #8
   1491c:	ldr	r4, [sp]
   14920:	ldrd	r6, [sp, #4]
   14924:	add	sp, sp, #12
   14928:	pop	{pc}		; (ldr pc, [sp], #4)
   1492c:	ldr	r2, [r0, #20]
   14930:	ldr	r3, [r0, #16]
   14934:	cmp	r2, r3
   14938:	bne	14900 <dcngettext@plt+0x3910>
   1493c:	ldr	r3, [r0, #36]	; 0x24
   14940:	cmp	r3, #0
   14944:	bne	14900 <dcngettext@plt+0x3910>
   14948:	bl	10f30 <fileno@plt>
   1494c:	ldr	r3, [sp, #24]
   14950:	str	r3, [sp]
   14954:	mov	r2, r6
   14958:	mov	r3, r7
   1495c:	bl	10e40 <lseek64@plt>
   14960:	mvn	r2, #0
   14964:	mvn	r3, #0
   14968:	cmp	r1, r3
   1496c:	cmpeq	r0, r2
   14970:	beq	1498c <dcngettext@plt+0x399c>
   14974:	ldr	r3, [r4]
   14978:	bic	r3, r3, #16
   1497c:	str	r3, [r4]
   14980:	strd	r0, [r4, #80]	; 0x50
   14984:	mov	r0, #0
   14988:	b	14918 <dcngettext@plt+0x3928>
   1498c:	mvn	r0, #0
   14990:	b	14918 <dcngettext@plt+0x3928>
   14994:	strd	r4, [sp, #-16]!
   14998:	str	r6, [sp, #8]
   1499c:	str	lr, [sp, #12]
   149a0:	subs	r4, r0, #0
   149a4:	beq	14a40 <dcngettext@plt+0x3a50>
   149a8:	mov	r1, #47	; 0x2f
   149ac:	mov	r0, r4
   149b0:	bl	10f84 <strrchr@plt>
   149b4:	subs	r5, r0, #0
   149b8:	beq	14a18 <dcngettext@plt+0x3a28>
   149bc:	add	r6, r5, #1
   149c0:	sub	r3, r6, r4
   149c4:	cmp	r3, #6
   149c8:	ble	14a18 <dcngettext@plt+0x3a28>
   149cc:	mov	r2, #7
   149d0:	movw	r1, #36164	; 0x8d44
   149d4:	movt	r1, #1
   149d8:	sub	r0, r5, #6
   149dc:	bl	10fcc <strncmp@plt>
   149e0:	cmp	r0, #0
   149e4:	bne	14a18 <dcngettext@plt+0x3a28>
   149e8:	mov	r2, #3
   149ec:	movw	r1, #36172	; 0x8d4c
   149f0:	movt	r1, #1
   149f4:	mov	r0, r6
   149f8:	bl	10fcc <strncmp@plt>
   149fc:	cmp	r0, #0
   14a00:	movne	r4, r6
   14a04:	bne	14a18 <dcngettext@plt+0x3a28>
   14a08:	add	r4, r5, #4
   14a0c:	movw	r3, #41296	; 0xa150
   14a10:	movt	r3, #2
   14a14:	str	r4, [r3]
   14a18:	movw	r3, #41356	; 0xa18c
   14a1c:	movt	r3, #2
   14a20:	str	r4, [r3]
   14a24:	movw	r3, #41300	; 0xa154
   14a28:	movt	r3, #2
   14a2c:	str	r4, [r3]
   14a30:	ldrd	r4, [sp]
   14a34:	ldr	r6, [sp, #8]
   14a38:	add	sp, sp, #12
   14a3c:	pop	{pc}		; (ldr pc, [sp], #4)
   14a40:	movw	r3, #41312	; 0xa160
   14a44:	movt	r3, #2
   14a48:	ldr	r3, [r3]
   14a4c:	mov	r2, #55	; 0x37
   14a50:	mov	r1, #1
   14a54:	movw	r0, #36108	; 0x8d0c
   14a58:	movt	r0, #1
   14a5c:	bl	10e34 <fwrite@plt>
   14a60:	bl	10fd8 <abort@plt>
   14a64:	mov	r2, #0
   14a68:	mov	r3, #0
   14a6c:	strd	r2, [r0]
   14a70:	strd	r2, [r0, #8]
   14a74:	strd	r2, [r0, #16]
   14a78:	strd	r2, [r0, #24]
   14a7c:	strd	r2, [r0, #32]
   14a80:	strd	r2, [r0, #40]	; 0x28
   14a84:	cmp	r1, #10
   14a88:	beq	14a94 <dcngettext@plt+0x3aa4>
   14a8c:	str	r1, [r0]
   14a90:	bx	lr
   14a94:	str	r4, [sp, #-8]!
   14a98:	str	lr, [sp, #4]
   14a9c:	bl	10fd8 <abort@plt>
   14aa0:	strd	r4, [sp, #-16]!
   14aa4:	str	r6, [sp, #8]
   14aa8:	str	lr, [sp, #12]
   14aac:	mov	r5, r0
   14ab0:	mov	r6, r1
   14ab4:	mov	r2, #5
   14ab8:	mov	r1, r0
   14abc:	mov	r0, #0
   14ac0:	bl	10e04 <dcgettext@plt>
   14ac4:	mov	r4, r0
   14ac8:	cmp	r5, r0
   14acc:	beq	14ae4 <dcngettext@plt+0x3af4>
   14ad0:	mov	r0, r4
   14ad4:	ldrd	r4, [sp]
   14ad8:	ldr	r6, [sp, #8]
   14adc:	add	sp, sp, #12
   14ae0:	pop	{pc}		; (ldr pc, [sp], #4)
   14ae4:	bl	17b60 <dcngettext@plt+0x6b70>
   14ae8:	ldrb	r3, [r0]
   14aec:	bic	r3, r3, #32
   14af0:	cmp	r3, #85	; 0x55
   14af4:	bne	14b78 <dcngettext@plt+0x3b88>
   14af8:	ldrb	r3, [r0, #1]
   14afc:	bic	r3, r3, #32
   14b00:	cmp	r3, #84	; 0x54
   14b04:	bne	14b3c <dcngettext@plt+0x3b4c>
   14b08:	ldrb	r3, [r0, #2]
   14b0c:	bic	r3, r3, #32
   14b10:	cmp	r3, #70	; 0x46
   14b14:	bne	14b3c <dcngettext@plt+0x3b4c>
   14b18:	ldrb	r3, [r0, #3]
   14b1c:	cmp	r3, #45	; 0x2d
   14b20:	bne	14b3c <dcngettext@plt+0x3b4c>
   14b24:	ldrb	r3, [r0, #4]
   14b28:	cmp	r3, #56	; 0x38
   14b2c:	bne	14b3c <dcngettext@plt+0x3b4c>
   14b30:	ldrb	r3, [r0, #5]
   14b34:	cmp	r3, #0
   14b38:	beq	14b58 <dcngettext@plt+0x3b68>
   14b3c:	movw	r4, #36260	; 0x8da4
   14b40:	movt	r4, #1
   14b44:	movw	r3, #36280	; 0x8db8
   14b48:	movt	r3, #1
   14b4c:	cmp	r6, #9
   14b50:	movne	r4, r3
   14b54:	b	14ad0 <dcngettext@plt+0x3ae0>
   14b58:	ldrb	r2, [r4]
   14b5c:	movw	r4, #36276	; 0x8db4
   14b60:	movt	r4, #1
   14b64:	movw	r3, #36264	; 0x8da8
   14b68:	movt	r3, #1
   14b6c:	cmp	r2, #96	; 0x60
   14b70:	movne	r4, r3
   14b74:	b	14ad0 <dcngettext@plt+0x3ae0>
   14b78:	cmp	r3, #71	; 0x47
   14b7c:	bne	14b3c <dcngettext@plt+0x3b4c>
   14b80:	ldrb	r3, [r0, #1]
   14b84:	bic	r3, r3, #32
   14b88:	cmp	r3, #66	; 0x42
   14b8c:	bne	14b3c <dcngettext@plt+0x3b4c>
   14b90:	ldrb	r3, [r0, #2]
   14b94:	cmp	r3, #49	; 0x31
   14b98:	bne	14b3c <dcngettext@plt+0x3b4c>
   14b9c:	ldrb	r3, [r0, #3]
   14ba0:	cmp	r3, #56	; 0x38
   14ba4:	bne	14b3c <dcngettext@plt+0x3b4c>
   14ba8:	ldrb	r3, [r0, #4]
   14bac:	cmp	r3, #48	; 0x30
   14bb0:	bne	14b3c <dcngettext@plt+0x3b4c>
   14bb4:	ldrb	r3, [r0, #5]
   14bb8:	cmp	r3, #51	; 0x33
   14bbc:	bne	14b3c <dcngettext@plt+0x3b4c>
   14bc0:	ldrb	r3, [r0, #6]
   14bc4:	cmp	r3, #48	; 0x30
   14bc8:	bne	14b3c <dcngettext@plt+0x3b4c>
   14bcc:	ldrb	r3, [r0, #7]
   14bd0:	cmp	r3, #0
   14bd4:	bne	14b3c <dcngettext@plt+0x3b4c>
   14bd8:	ldrb	r2, [r4]
   14bdc:	movw	r4, #36272	; 0x8db0
   14be0:	movt	r4, #1
   14be4:	movw	r3, #36268	; 0x8dac
   14be8:	movt	r3, #1
   14bec:	cmp	r2, #96	; 0x60
   14bf0:	movne	r4, r3
   14bf4:	b	14ad0 <dcngettext@plt+0x3ae0>
   14bf8:	strd	r4, [sp, #-36]!	; 0xffffffdc
   14bfc:	strd	r6, [sp, #8]
   14c00:	strd	r8, [sp, #16]
   14c04:	strd	sl, [sp, #24]
   14c08:	str	lr, [sp, #32]
   14c0c:	sub	sp, sp, #116	; 0x74
   14c10:	str	r0, [sp, #64]	; 0x40
   14c14:	mov	r8, r1
   14c18:	str	r2, [sp, #48]	; 0x30
   14c1c:	str	r3, [sp, #24]
   14c20:	ldr	r7, [sp, #152]	; 0x98
   14c24:	bl	10e4c <__ctype_get_mb_cur_max@plt>
   14c28:	str	r0, [sp, #76]	; 0x4c
   14c2c:	ldr	r3, [sp, #156]	; 0x9c
   14c30:	ubfx	r3, r3, #1, #1
   14c34:	str	r3, [sp, #32]
   14c38:	mov	r3, #1
   14c3c:	str	r3, [sp, #40]	; 0x28
   14c40:	mov	r3, #0
   14c44:	str	r3, [sp, #68]	; 0x44
   14c48:	str	r3, [sp, #36]	; 0x24
   14c4c:	str	r3, [sp, #28]
   14c50:	str	r3, [sp, #52]	; 0x34
   14c54:	str	r3, [sp, #60]	; 0x3c
   14c58:	str	r3, [sp, #72]	; 0x48
   14c5c:	movw	r3, #36284	; 0x8dbc
   14c60:	movt	r3, #1
   14c64:	str	r3, [sp, #80]	; 0x50
   14c68:	mov	r9, r8
   14c6c:	mov	sl, r7
   14c70:	cmp	sl, #10
   14c74:	ldrls	pc, [pc, sl, lsl #2]
   14c78:	b	14e3c <dcngettext@plt+0x3e4c>
   14c7c:	ldrdeq	r4, [r1], -ip
   14c80:			; <UNDEFINED> instruction: 0x00014cb0
   14c84:	andeq	r4, r1, r4, lsl lr
   14c88:	andeq	r4, r1, r8, lsr #25
   14c8c:	andeq	r4, r1, r8, asr #27
   14c90:	andeq	r4, r1, ip, ror #25
   14c94:	strheq	r6, [r1], -r8
   14c98:	andeq	r4, r1, r0, asr #28
   14c9c:	andeq	r4, r1, r8, lsr #26
   14ca0:	andeq	r4, r1, r8, lsr #26
   14ca4:	andeq	r4, r1, r8, lsr #26
   14ca8:	mov	r3, #1
   14cac:	str	r3, [sp, #28]
   14cb0:	mov	r3, #1
   14cb4:	str	r3, [sp, #32]
   14cb8:	str	r3, [sp, #52]	; 0x34
   14cbc:	movw	r3, #36280	; 0x8db8
   14cc0:	movt	r3, #1
   14cc4:	str	r3, [sp, #60]	; 0x3c
   14cc8:	mov	fp, #0
   14ccc:	mov	sl, #2
   14cd0:	mov	r6, #0
   14cd4:	ldr	r8, [sp, #64]	; 0x40
   14cd8:	b	15550 <dcngettext@plt+0x4560>
   14cdc:	mov	fp, sl
   14ce0:	mov	r3, #0
   14ce4:	str	r3, [sp, #32]
   14ce8:	b	14cd0 <dcngettext@plt+0x3ce0>
   14cec:	ldr	r3, [sp, #32]
   14cf0:	cmp	r3, #0
   14cf4:	bne	14e54 <dcngettext@plt+0x3e64>
   14cf8:	cmp	r9, #0
   14cfc:	beq	14e78 <dcngettext@plt+0x3e88>
   14d00:	mov	r3, #34	; 0x22
   14d04:	ldr	r2, [sp, #64]	; 0x40
   14d08:	strb	r3, [r2]
   14d0c:	mov	fp, #1
   14d10:	str	fp, [sp, #28]
   14d14:	str	fp, [sp, #52]	; 0x34
   14d18:	movw	r3, #36260	; 0x8da4
   14d1c:	movt	r3, #1
   14d20:	str	r3, [sp, #60]	; 0x3c
   14d24:	b	14cd0 <dcngettext@plt+0x3ce0>
   14d28:	cmp	sl, #10
   14d2c:	bne	14d60 <dcngettext@plt+0x3d70>
   14d30:	ldr	r3, [sp, #32]
   14d34:	cmp	r3, #0
   14d38:	movne	fp, #0
   14d3c:	beq	14d88 <dcngettext@plt+0x3d98>
   14d40:	ldr	r0, [sp, #168]	; 0xa8
   14d44:	bl	10edc <strlen@plt>
   14d48:	str	r0, [sp, #52]	; 0x34
   14d4c:	ldr	r3, [sp, #168]	; 0xa8
   14d50:	str	r3, [sp, #60]	; 0x3c
   14d54:	mov	r3, #1
   14d58:	str	r3, [sp, #28]
   14d5c:	b	14cd0 <dcngettext@plt+0x3ce0>
   14d60:	mov	r1, sl
   14d64:	ldr	r0, [sp, #80]	; 0x50
   14d68:	bl	14aa0 <dcngettext@plt+0x3ab0>
   14d6c:	str	r0, [sp, #164]	; 0xa4
   14d70:	mov	r1, sl
   14d74:	movw	r0, #36280	; 0x8db8
   14d78:	movt	r0, #1
   14d7c:	bl	14aa0 <dcngettext@plt+0x3ab0>
   14d80:	str	r0, [sp, #168]	; 0xa8
   14d84:	b	14d30 <dcngettext@plt+0x3d40>
   14d88:	ldr	r3, [sp, #164]	; 0xa4
   14d8c:	ldrb	r3, [r3]
   14d90:	cmp	r3, #0
   14d94:	beq	14dc0 <dcngettext@plt+0x3dd0>
   14d98:	ldr	r2, [sp, #164]	; 0xa4
   14d9c:	mov	fp, #0
   14da0:	ldr	r1, [sp, #64]	; 0x40
   14da4:	cmp	r9, fp
   14da8:	strbhi	r3, [r1, fp]
   14dac:	add	fp, fp, #1
   14db0:	ldrb	r3, [r2, #1]!
   14db4:	cmp	r3, #0
   14db8:	bne	14da4 <dcngettext@plt+0x3db4>
   14dbc:	b	14d40 <dcngettext@plt+0x3d50>
   14dc0:	mov	fp, #0
   14dc4:	b	14d40 <dcngettext@plt+0x3d50>
   14dc8:	ldr	r3, [sp, #32]
   14dcc:	cmp	r3, #0
   14dd0:	bne	14cb0 <dcngettext@plt+0x3cc0>
   14dd4:	mov	r3, #1
   14dd8:	str	r3, [sp, #28]
   14ddc:	cmp	r9, #0
   14de0:	beq	14e94 <dcngettext@plt+0x3ea4>
   14de4:	mov	r3, #39	; 0x27
   14de8:	ldr	r2, [sp, #64]	; 0x40
   14dec:	strb	r3, [r2]
   14df0:	mov	r3, #0
   14df4:	str	r3, [sp, #32]
   14df8:	mov	fp, #1
   14dfc:	str	fp, [sp, #52]	; 0x34
   14e00:	movw	r3, #36280	; 0x8db8
   14e04:	movt	r3, #1
   14e08:	str	r3, [sp, #60]	; 0x3c
   14e0c:	mov	sl, #2
   14e10:	b	14cd0 <dcngettext@plt+0x3ce0>
   14e14:	ldr	r3, [sp, #32]
   14e18:	cmp	r3, #0
   14e1c:	beq	14ddc <dcngettext@plt+0x3dec>
   14e20:	mov	r3, #1
   14e24:	str	r3, [sp, #52]	; 0x34
   14e28:	movw	r3, #36280	; 0x8db8
   14e2c:	movt	r3, #1
   14e30:	str	r3, [sp, #60]	; 0x3c
   14e34:	mov	fp, #0
   14e38:	b	14cd0 <dcngettext@plt+0x3ce0>
   14e3c:	bl	10fd8 <abort@plt>
   14e40:	mov	fp, #0
   14e44:	str	fp, [sp, #32]
   14e48:	mov	r3, #1
   14e4c:	str	r3, [sp, #28]
   14e50:	b	14cd0 <dcngettext@plt+0x3ce0>
   14e54:	ldr	r3, [sp, #32]
   14e58:	str	r3, [sp, #28]
   14e5c:	mov	r3, #1
   14e60:	str	r3, [sp, #52]	; 0x34
   14e64:	movw	r3, #36260	; 0x8da4
   14e68:	movt	r3, #1
   14e6c:	str	r3, [sp, #60]	; 0x3c
   14e70:	mov	fp, #0
   14e74:	b	14cd0 <dcngettext@plt+0x3ce0>
   14e78:	mov	fp, #1
   14e7c:	str	fp, [sp, #28]
   14e80:	str	fp, [sp, #52]	; 0x34
   14e84:	movw	r3, #36260	; 0x8da4
   14e88:	movt	r3, #1
   14e8c:	str	r3, [sp, #60]	; 0x3c
   14e90:	b	14cd0 <dcngettext@plt+0x3ce0>
   14e94:	mov	r3, #0
   14e98:	str	r3, [sp, #32]
   14e9c:	mov	fp, #1
   14ea0:	str	fp, [sp, #52]	; 0x34
   14ea4:	movw	r3, #36280	; 0x8db8
   14ea8:	movt	r3, #1
   14eac:	str	r3, [sp, #60]	; 0x3c
   14eb0:	mov	sl, #2
   14eb4:	b	14cd0 <dcngettext@plt+0x3ce0>
   14eb8:	mov	r3, r2
   14ebc:	add	r4, r6, r2
   14ec0:	ldr	r2, [sp, #24]
   14ec4:	cmp	r3, #1
   14ec8:	movls	r3, #0
   14ecc:	movhi	r3, #1
   14ed0:	cmn	r2, #1
   14ed4:	movne	r3, #0
   14ed8:	cmp	r3, #0
   14edc:	beq	14eec <dcngettext@plt+0x3efc>
   14ee0:	ldr	r0, [sp, #48]	; 0x30
   14ee4:	bl	10edc <strlen@plt>
   14ee8:	str	r0, [sp, #24]
   14eec:	ldr	r3, [sp, #24]
   14ef0:	cmp	r4, r3
   14ef4:	bhi	160e0 <dcngettext@plt+0x50f0>
   14ef8:	ldr	r3, [sp, #48]	; 0x30
   14efc:	add	r4, r3, r6
   14f00:	ldr	r2, [sp, #52]	; 0x34
   14f04:	ldr	r1, [sp, #60]	; 0x3c
   14f08:	mov	r0, r4
   14f0c:	bl	10dec <memcmp@plt>
   14f10:	cmp	r0, #0
   14f14:	bne	160e0 <dcngettext@plt+0x50f0>
   14f18:	ldr	r3, [sp, #32]
   14f1c:	cmp	r3, #0
   14f20:	bne	15130 <dcngettext@plt+0x4140>
   14f24:	ldrb	r4, [r4]
   14f28:	cmp	r4, #126	; 0x7e
   14f2c:	ldrls	pc, [pc, r4, lsl #2]
   14f30:	b	159e4 <dcngettext@plt+0x49f4>
   14f34:	andeq	r5, r1, r4, ror r1
   14f38:	andeq	r5, r1, r4, ror #19
   14f3c:	andeq	r5, r1, r4, ror #19
   14f40:	andeq	r5, r1, r4, ror #19
   14f44:	andeq	r5, r1, r4, ror #19
   14f48:	andeq	r5, r1, r4, ror #19
   14f4c:	andeq	r5, r1, r4, ror #19
   14f50:	andeq	r5, r1, ip, lsl #17
   14f54:	andeq	r5, r1, r0, lsl r4
   14f58:			; <UNDEFINED> instruction: 0x000157b4
   14f5c:	andeq	r5, r1, r0, ror #16
   14f60:	andeq	r5, r1, r8, asr #15
   14f64:	andeq	r5, r1, r4, lsr #8
   14f68:	andeq	r5, r1, r8, lsr r4
   14f6c:	andeq	r5, r1, r4, ror #19
   14f70:	andeq	r5, r1, r4, ror #19
   14f74:	andeq	r5, r1, r4, ror #19
   14f78:	andeq	r5, r1, r4, ror #19
   14f7c:	andeq	r5, r1, r4, ror #19
   14f80:	andeq	r5, r1, r4, ror #19
   14f84:	andeq	r5, r1, r4, ror #19
   14f88:	andeq	r5, r1, r4, ror #19
   14f8c:	andeq	r5, r1, r4, ror #19
   14f90:	andeq	r5, r1, r4, ror #19
   14f94:	andeq	r5, r1, r4, ror #19
   14f98:	andeq	r5, r1, r4, ror #19
   14f9c:	andeq	r5, r1, r4, ror #19
   14fa0:	andeq	r5, r1, r4, ror #19
   14fa4:	andeq	r5, r1, r4, ror #19
   14fa8:	andeq	r5, r1, r4, ror #19
   14fac:	andeq	r5, r1, r4, ror #19
   14fb0:	andeq	r5, r1, r4, ror #19
   14fb4:	andeq	r5, r1, r0, lsl #18
   14fb8:	andeq	r5, r1, r4, lsr #18
   14fbc:	andeq	r5, r1, r4, lsr #18
   14fc0:			; <UNDEFINED> instruction: 0x000158bc
   14fc4:	andeq	r5, r1, r4, lsr #18
   14fc8:	andeq	r5, r1, r4, asr #28
   14fcc:	andeq	r5, r1, r4, lsr #18
   14fd0:	andeq	r5, r1, r4, asr #18
   14fd4:	andeq	r5, r1, r4, lsr #18
   14fd8:	andeq	r5, r1, r4, lsr #18
   14fdc:	andeq	r5, r1, r4, lsr #18
   14fe0:	andeq	r5, r1, r4, asr #28
   14fe4:	andeq	r5, r1, r4, asr #28
   14fe8:	andeq	r5, r1, r4, asr #28
   14fec:	andeq	r5, r1, r4, asr #28
   14ff0:	andeq	r5, r1, r4, asr #28
   14ff4:	andeq	r5, r1, r4, asr #28
   14ff8:	andeq	r5, r1, r4, asr #28
   14ffc:	andeq	r5, r1, r4, asr #28
   15000:	andeq	r5, r1, r4, asr #28
   15004:	andeq	r5, r1, r4, asr #28
   15008:	andeq	r5, r1, r4, asr #28
   1500c:	andeq	r5, r1, r4, asr #28
   15010:	andeq	r5, r1, r4, asr #28
   15014:	andeq	r5, r1, r4, asr #28
   15018:	andeq	r5, r1, r4, asr #28
   1501c:	andeq	r5, r1, r4, asr #28
   15020:	andeq	r5, r1, r4, lsr #18
   15024:	andeq	r5, r1, r4, lsr #18
   15028:	andeq	r5, r1, r4, lsr #18
   1502c:	andeq	r5, r1, r4, lsr #18
   15030:	andeq	r5, r1, r4, lsr #5
   15034:	andeq	r5, r1, r4, ror #19
   15038:	andeq	r5, r1, r4, asr #28
   1503c:	andeq	r5, r1, r4, asr #28
   15040:	andeq	r5, r1, r4, asr #28
   15044:	andeq	r5, r1, r4, asr #28
   15048:	andeq	r5, r1, r4, asr #28
   1504c:	andeq	r5, r1, r4, asr #28
   15050:	andeq	r5, r1, r4, asr #28
   15054:	andeq	r5, r1, r4, asr #28
   15058:	andeq	r5, r1, r4, asr #28
   1505c:	andeq	r5, r1, r4, asr #28
   15060:	andeq	r5, r1, r4, asr #28
   15064:	andeq	r5, r1, r4, asr #28
   15068:	andeq	r5, r1, r4, asr #28
   1506c:	andeq	r5, r1, r4, asr #28
   15070:	andeq	r5, r1, r4, asr #28
   15074:	andeq	r5, r1, r4, asr #28
   15078:	andeq	r5, r1, r4, asr #28
   1507c:	andeq	r5, r1, r4, asr #28
   15080:	andeq	r5, r1, r4, asr #28
   15084:	andeq	r5, r1, r4, asr #28
   15088:	andeq	r5, r1, r4, asr #28
   1508c:	andeq	r5, r1, r4, asr #28
   15090:	andeq	r5, r1, r4, asr #28
   15094:	andeq	r5, r1, r4, asr #28
   15098:	andeq	r5, r1, r4, asr #28
   1509c:	andeq	r5, r1, r4, asr #28
   150a0:	andeq	r5, r1, r4, lsr #18
   150a4:	ldrdeq	r5, [r1], -ip
   150a8:	andeq	r5, r1, r4, asr #28
   150ac:	andeq	r5, r1, r4, lsr #18
   150b0:	andeq	r5, r1, r4, asr #28
   150b4:	andeq	r5, r1, r4, lsr #18
   150b8:	andeq	r5, r1, r4, asr #28
   150bc:	andeq	r5, r1, r4, asr #28
   150c0:	andeq	r5, r1, r4, asr #28
   150c4:	andeq	r5, r1, r4, asr #28
   150c8:	andeq	r5, r1, r4, asr #28
   150cc:	andeq	r5, r1, r4, asr #28
   150d0:	andeq	r5, r1, r4, asr #28
   150d4:	andeq	r5, r1, r4, asr #28
   150d8:	andeq	r5, r1, r4, asr #28
   150dc:	andeq	r5, r1, r4, asr #28
   150e0:	andeq	r5, r1, r4, asr #28
   150e4:	andeq	r5, r1, r4, asr #28
   150e8:	andeq	r5, r1, r4, asr #28
   150ec:	andeq	r5, r1, r4, asr #28
   150f0:	andeq	r5, r1, r4, asr #28
   150f4:	andeq	r5, r1, r4, asr #28
   150f8:	andeq	r5, r1, r4, asr #28
   150fc:	andeq	r5, r1, r4, asr #28
   15100:	andeq	r5, r1, r4, asr #28
   15104:	andeq	r5, r1, r4, asr #28
   15108:	andeq	r5, r1, r4, asr #28
   1510c:	andeq	r5, r1, r4, asr #28
   15110:	andeq	r5, r1, r4, asr #28
   15114:	andeq	r5, r1, r4, asr #28
   15118:	andeq	r5, r1, r4, asr #28
   1511c:	andeq	r5, r1, r4, asr #28
   15120:	muleq	r1, ip, r8
   15124:	andeq	r5, r1, r4, lsr #18
   15128:	muleq	r1, ip, r8
   1512c:			; <UNDEFINED> instruction: 0x000158bc
   15130:	mov	r8, r9
   15134:	mov	r7, sl
   15138:	b	16038 <dcngettext@plt+0x5048>
   1513c:	ldr	r3, [sp, #28]
   15140:	cmp	r3, #0
   15144:	bne	15164 <dcngettext@plt+0x4174>
   15148:	ldr	r3, [sp, #156]	; 0x9c
   1514c:	tst	r3, #1
   15150:	bne	1554c <dcngettext@plt+0x455c>
   15154:	ldr	r3, [sp, #28]
   15158:	str	r3, [sp, #44]	; 0x2c
   1515c:	mov	r5, r3
   15160:	b	1546c <dcngettext@plt+0x447c>
   15164:	ldr	r3, [sp, #32]
   15168:	cmp	r3, #0
   1516c:	bne	15fe8 <dcngettext@plt+0x4ff8>
   15170:	str	r3, [sp, #44]	; 0x2c
   15174:	ldr	r3, [sp, #36]	; 0x24
   15178:	eor	r3, r3, #1
   1517c:	cmp	sl, #2
   15180:	movne	r3, #0
   15184:	andeq	r3, r3, #1
   15188:	cmp	r3, #0
   1518c:	beq	151e4 <dcngettext@plt+0x41f4>
   15190:	cmp	r9, fp
   15194:	movhi	r2, #39	; 0x27
   15198:	strbhi	r2, [r8, fp]
   1519c:	add	r2, fp, #1
   151a0:	cmp	r9, r2
   151a4:	movhi	r1, #36	; 0x24
   151a8:	strbhi	r1, [r8, r2]
   151ac:	add	r2, fp, #2
   151b0:	cmp	r9, r2
   151b4:	movhi	r1, #39	; 0x27
   151b8:	strbhi	r1, [r8, r2]
   151bc:	add	r2, fp, #3
   151c0:	cmp	r9, r2
   151c4:	bls	160a4 <dcngettext@plt+0x50b4>
   151c8:	mov	r1, #92	; 0x5c
   151cc:	strb	r1, [r8, r2]
   151d0:	add	fp, fp, #4
   151d4:	str	r3, [sp, #36]	; 0x24
   151d8:	mov	r5, #0
   151dc:	mov	r4, #48	; 0x30
   151e0:	b	154b8 <dcngettext@plt+0x44c8>
   151e4:	cmp	r9, fp
   151e8:	bhi	15210 <dcngettext@plt+0x4220>
   151ec:	add	r1, fp, #1
   151f0:	ldr	r2, [sp, #56]	; 0x38
   151f4:	cmp	r2, #0
   151f8:	bne	15238 <dcngettext@plt+0x4248>
   151fc:	mov	r3, r5
   15200:	ldr	r5, [sp, #56]	; 0x38
   15204:	mov	fp, r1
   15208:	mov	r4, #48	; 0x30
   1520c:	b	1546c <dcngettext@plt+0x447c>
   15210:	mov	r2, #92	; 0x5c
   15214:	strb	r2, [r8, fp]
   15218:	add	r1, fp, #1
   1521c:	ldr	r2, [sp, #56]	; 0x38
   15220:	cmp	r2, #0
   15224:	moveq	r3, r5
   15228:	moveq	r5, r2
   1522c:	moveq	fp, r1
   15230:	moveq	r4, #48	; 0x30
   15234:	beq	154b8 <dcngettext@plt+0x44c8>
   15238:	add	r2, r6, #1
   1523c:	ldr	r0, [sp, #24]
   15240:	cmp	r2, r0
   15244:	bcs	15260 <dcngettext@plt+0x4270>
   15248:	ldr	r0, [sp, #48]	; 0x30
   1524c:	ldrb	r2, [r0, r2]
   15250:	sub	r2, r2, #48	; 0x30
   15254:	uxtb	r2, r2
   15258:	cmp	r2, #9
   1525c:	bls	15278 <dcngettext@plt+0x4288>
   15260:	mov	r2, r3
   15264:	mov	r3, r5
   15268:	mov	r5, r2
   1526c:	mov	fp, r1
   15270:	mov	r4, #48	; 0x30
   15274:	b	15490 <dcngettext@plt+0x44a0>
   15278:	cmp	r9, r1
   1527c:	movhi	r2, #48	; 0x30
   15280:	strbhi	r2, [r8, r1]
   15284:	add	r2, fp, #2
   15288:	cmp	r9, r2
   1528c:	movhi	r1, #48	; 0x30
   15290:	strbhi	r1, [r8, r2]
   15294:	add	r1, fp, #3
   15298:	b	15260 <dcngettext@plt+0x4270>
   1529c:	mov	r3, #0
   152a0:	str	r3, [sp, #44]	; 0x2c
   152a4:	cmp	sl, #2
   152a8:	beq	152c4 <dcngettext@plt+0x42d4>
   152ac:	cmp	sl, #5
   152b0:	beq	152dc <dcngettext@plt+0x42ec>
   152b4:	mov	r5, #0
   152b8:	mov	r3, r5
   152bc:	mov	r4, #63	; 0x3f
   152c0:	b	1546c <dcngettext@plt+0x447c>
   152c4:	ldr	r3, [sp, #32]
   152c8:	cmp	r3, #0
   152cc:	bne	15ff4 <dcngettext@plt+0x5004>
   152d0:	mov	r5, r3
   152d4:	mov	r4, #63	; 0x3f
   152d8:	b	159d4 <dcngettext@plt+0x49e4>
   152dc:	ldr	r3, [sp, #156]	; 0x9c
   152e0:	tst	r3, #4
   152e4:	beq	15e0c <dcngettext@plt+0x4e1c>
   152e8:	add	r2, r6, #2
   152ec:	ldr	r3, [sp, #24]
   152f0:	cmp	r2, r3
   152f4:	bcs	15e1c <dcngettext@plt+0x4e2c>
   152f8:	ldr	r3, [sp, #48]	; 0x30
   152fc:	add	r3, r3, r6
   15300:	ldrb	r4, [r3, #1]
   15304:	cmp	r4, #63	; 0x3f
   15308:	movne	r5, #0
   1530c:	movne	r3, r5
   15310:	movne	r4, #63	; 0x3f
   15314:	bne	1546c <dcngettext@plt+0x447c>
   15318:	ldr	r3, [sp, #48]	; 0x30
   1531c:	ldrb	r1, [r3, r2]
   15320:	sub	r3, r1, #33	; 0x21
   15324:	cmp	r3, #29
   15328:	ldrls	pc, [pc, r3, lsl #2]
   1532c:	b	15e2c <dcngettext@plt+0x4e3c>
   15330:	andeq	r5, r1, r8, lsr #7
   15334:	andeq	r5, r1, ip, lsr #28
   15338:	andeq	r5, r1, ip, lsr #28
   1533c:	andeq	r5, r1, ip, lsr #28
   15340:	andeq	r5, r1, ip, lsr #28
   15344:	andeq	r5, r1, ip, lsr #28
   15348:	andeq	r5, r1, r8, lsr #7
   1534c:	andeq	r5, r1, r8, lsr #7
   15350:	andeq	r5, r1, r8, lsr #7
   15354:	andeq	r5, r1, ip, lsr #28
   15358:	andeq	r5, r1, ip, lsr #28
   1535c:	andeq	r5, r1, ip, lsr #28
   15360:	andeq	r5, r1, r8, lsr #7
   15364:	andeq	r5, r1, ip, lsr #28
   15368:	andeq	r5, r1, r8, lsr #7
   1536c:	andeq	r5, r1, ip, lsr #28
   15370:	andeq	r5, r1, ip, lsr #28
   15374:	andeq	r5, r1, ip, lsr #28
   15378:	andeq	r5, r1, ip, lsr #28
   1537c:	andeq	r5, r1, ip, lsr #28
   15380:	andeq	r5, r1, ip, lsr #28
   15384:	andeq	r5, r1, ip, lsr #28
   15388:	andeq	r5, r1, ip, lsr #28
   1538c:	andeq	r5, r1, ip, lsr #28
   15390:	andeq	r5, r1, ip, lsr #28
   15394:	andeq	r5, r1, ip, lsr #28
   15398:	andeq	r5, r1, ip, lsr #28
   1539c:	andeq	r5, r1, r8, lsr #7
   153a0:	andeq	r5, r1, r8, lsr #7
   153a4:	andeq	r5, r1, r8, lsr #7
   153a8:	ldr	r3, [sp, #32]
   153ac:	cmp	r3, #0
   153b0:	bne	16098 <dcngettext@plt+0x50a8>
   153b4:	cmp	r9, fp
   153b8:	movhi	r3, #63	; 0x3f
   153bc:	strbhi	r3, [r8, fp]
   153c0:	add	r3, fp, #1
   153c4:	cmp	r9, r3
   153c8:	movhi	r0, #34	; 0x22
   153cc:	strbhi	r0, [r8, r3]
   153d0:	add	r3, fp, #2
   153d4:	cmp	r9, r3
   153d8:	movhi	r0, #34	; 0x22
   153dc:	strbhi	r0, [r8, r3]
   153e0:	add	r3, fp, #3
   153e4:	cmp	r9, r3
   153e8:	movhi	r0, #63	; 0x3f
   153ec:	strbhi	r0, [r8, r3]
   153f0:	add	fp, fp, #4
   153f4:	ldr	r3, [sp, #32]
   153f8:	mov	r5, r3
   153fc:	mov	r4, r1
   15400:	mov	r6, r2
   15404:	b	1546c <dcngettext@plt+0x447c>
   15408:	mov	r3, #0
   1540c:	str	r3, [sp, #44]	; 0x2c
   15410:	mov	r4, #8
   15414:	mov	r3, #98	; 0x62
   15418:	b	15458 <dcngettext@plt+0x4468>
   1541c:	mov	r3, #0
   15420:	str	r3, [sp, #44]	; 0x2c
   15424:	mov	r4, #12
   15428:	mov	r3, #102	; 0x66
   1542c:	b	15458 <dcngettext@plt+0x4468>
   15430:	mov	r3, #0
   15434:	str	r3, [sp, #44]	; 0x2c
   15438:	mov	r4, #13
   1543c:	mov	r3, #114	; 0x72
   15440:	ldr	r2, [sp, #32]
   15444:	cmp	sl, #2
   15448:	movne	r2, #0
   1544c:	andeq	r2, r2, #1
   15450:	cmp	r2, #0
   15454:	bne	15878 <dcngettext@plt+0x4888>
   15458:	ldr	r2, [sp, #28]
   1545c:	cmp	r2, #0
   15460:	bne	15e60 <dcngettext@plt+0x4e70>
   15464:	mov	r5, r2
   15468:	mov	r3, r2
   1546c:	ldr	r2, [sp, #28]
   15470:	eor	r2, r2, #1
   15474:	cmp	sl, #2
   15478:	orreq	r2, r2, #1
   1547c:	eor	r2, r2, #1
   15480:	ldr	r1, [sp, #32]
   15484:	orr	r2, r1, r2
   15488:	tst	r2, #255	; 0xff
   1548c:	beq	154b8 <dcngettext@plt+0x44c8>
   15490:	ldr	r2, [sp, #160]	; 0xa0
   15494:	cmp	r2, #0
   15498:	beq	154b8 <dcngettext@plt+0x44c8>
   1549c:	ubfx	r1, r4, #5, #8
   154a0:	and	r2, r4, #31
   154a4:	ldr	r0, [sp, #160]	; 0xa0
   154a8:	ldr	r1, [r0, r1, lsl #2]
   154ac:	lsr	r2, r1, r2
   154b0:	tst	r2, #1
   154b4:	bne	154c4 <dcngettext@plt+0x44d4>
   154b8:	ldr	r2, [sp, #44]	; 0x2c
   154bc:	cmp	r2, #0
   154c0:	beq	15818 <dcngettext@plt+0x4828>
   154c4:	ldr	r3, [sp, #32]
   154c8:	cmp	r3, #0
   154cc:	bne	16018 <dcngettext@plt+0x5028>
   154d0:	ldr	r3, [sp, #36]	; 0x24
   154d4:	eor	r3, r3, #1
   154d8:	cmp	sl, #2
   154dc:	movne	r3, #0
   154e0:	andeq	r3, r3, #1
   154e4:	cmp	r3, #0
   154e8:	beq	15520 <dcngettext@plt+0x4530>
   154ec:	cmp	r9, fp
   154f0:	movhi	r2, #39	; 0x27
   154f4:	strbhi	r2, [r8, fp]
   154f8:	add	r2, fp, #1
   154fc:	cmp	r9, r2
   15500:	movhi	r1, #36	; 0x24
   15504:	strbhi	r1, [r8, r2]
   15508:	add	r2, fp, #2
   1550c:	cmp	r9, r2
   15510:	movhi	r1, #39	; 0x27
   15514:	strbhi	r1, [r8, r2]
   15518:	add	fp, fp, #3
   1551c:	str	r3, [sp, #36]	; 0x24
   15520:	cmp	r9, fp
   15524:	movhi	r3, #92	; 0x5c
   15528:	strbhi	r3, [r8, fp]
   1552c:	add	fp, fp, #1
   15530:	cmp	fp, r9
   15534:	strbcc	r4, [r8, fp]
   15538:	add	fp, fp, #1
   1553c:	cmp	r5, #0
   15540:	ldr	r3, [sp, #40]	; 0x28
   15544:	moveq	r3, r5
   15548:	str	r3, [sp, #40]	; 0x28
   1554c:	add	r6, r6, #1
   15550:	ldr	r3, [sp, #24]
   15554:	cmn	r3, #1
   15558:	beq	15e88 <dcngettext@plt+0x4e98>
   1555c:	ldr	r3, [sp, #24]
   15560:	subs	r5, r3, r6
   15564:	movne	r5, #1
   15568:	cmp	r5, #0
   1556c:	beq	15e9c <dcngettext@plt+0x4eac>
   15570:	ldr	r3, [sp, #28]
   15574:	cmp	sl, #2
   15578:	moveq	r3, #0
   1557c:	andne	r3, r3, #1
   15580:	str	r3, [sp, #56]	; 0x38
   15584:	ldr	r2, [sp, #52]	; 0x34
   15588:	adds	r7, r2, #0
   1558c:	movne	r7, #1
   15590:	ands	r3, r3, r7
   15594:	str	r3, [sp, #44]	; 0x2c
   15598:	bne	14eb8 <dcngettext@plt+0x3ec8>
   1559c:	ldr	r3, [sp, #48]	; 0x30
   155a0:	ldrb	r4, [r3, r6]
   155a4:	cmp	r4, #126	; 0x7e
   155a8:	ldrls	pc, [pc, r4, lsl #2]
   155ac:	b	159e4 <dcngettext@plt+0x49f4>
   155b0:	andeq	r5, r1, ip, lsr r1
   155b4:	andeq	r5, r1, r4, ror #19
   155b8:	andeq	r5, r1, r4, ror #19
   155bc:	andeq	r5, r1, r4, ror #19
   155c0:	andeq	r5, r1, r4, ror #19
   155c4:	andeq	r5, r1, r4, ror #19
   155c8:	andeq	r5, r1, r4, ror #19
   155cc:	andeq	r5, r1, r4, lsl #17
   155d0:	andeq	r5, r1, r0, lsl r4
   155d4:			; <UNDEFINED> instruction: 0x000157b4
   155d8:	andeq	r5, r1, r8, asr r8
   155dc:	andeq	r5, r1, r8, asr #15
   155e0:	andeq	r5, r1, r4, lsr #8
   155e4:	andeq	r5, r1, r8, lsr r4
   155e8:	andeq	r5, r1, r4, ror #19
   155ec:	andeq	r5, r1, r4, ror #19
   155f0:	andeq	r5, r1, r4, ror #19
   155f4:	andeq	r5, r1, r4, ror #19
   155f8:	andeq	r5, r1, r4, ror #19
   155fc:	andeq	r5, r1, r4, ror #19
   15600:	andeq	r5, r1, r4, ror #19
   15604:	andeq	r5, r1, r4, ror #19
   15608:	andeq	r5, r1, r4, ror #19
   1560c:	andeq	r5, r1, r4, ror #19
   15610:	andeq	r5, r1, r4, ror #19
   15614:	andeq	r5, r1, r4, ror #19
   15618:	andeq	r5, r1, r4, ror #19
   1561c:	andeq	r5, r1, r4, ror #19
   15620:	andeq	r5, r1, r4, ror #19
   15624:	andeq	r5, r1, r4, ror #19
   15628:	andeq	r5, r1, r4, ror #19
   1562c:	andeq	r5, r1, r4, ror #19
   15630:	andeq	r5, r1, r0, lsl #18
   15634:	strdeq	r5, [r1], -ip
   15638:	strdeq	r5, [r1], -ip
   1563c:			; <UNDEFINED> instruction: 0x000158bc
   15640:	strdeq	r5, [r1], -ip
   15644:	andeq	r5, r1, r4, lsl #28
   15648:	strdeq	r5, [r1], -ip
   1564c:	andeq	r5, r1, r4, asr #18
   15650:	strdeq	r5, [r1], -ip
   15654:	strdeq	r5, [r1], -ip
   15658:	strdeq	r5, [r1], -ip
   1565c:	andeq	r5, r1, r4, lsl #28
   15660:	andeq	r5, r1, r4, lsl #28
   15664:	andeq	r5, r1, r4, lsl #28
   15668:	andeq	r5, r1, r4, lsl #28
   1566c:	andeq	r5, r1, r4, lsl #28
   15670:	andeq	r5, r1, r4, lsl #28
   15674:	andeq	r5, r1, r4, lsl #28
   15678:	andeq	r5, r1, r4, lsl #28
   1567c:	andeq	r5, r1, r4, lsl #28
   15680:	andeq	r5, r1, r4, lsl #28
   15684:	andeq	r5, r1, r4, lsl #28
   15688:	andeq	r5, r1, r4, lsl #28
   1568c:	andeq	r5, r1, r4, lsl #28
   15690:	andeq	r5, r1, r4, lsl #28
   15694:	andeq	r5, r1, r4, lsl #28
   15698:	andeq	r5, r1, r4, lsl #28
   1569c:	strdeq	r5, [r1], -ip
   156a0:	strdeq	r5, [r1], -ip
   156a4:	strdeq	r5, [r1], -ip
   156a8:	strdeq	r5, [r1], -ip
   156ac:	andeq	r5, r1, r4, lsr #5
   156b0:	andeq	r5, r1, r4, ror #19
   156b4:	andeq	r5, r1, r4, lsl #28
   156b8:	andeq	r5, r1, r4, lsl #28
   156bc:	andeq	r5, r1, r4, lsl #28
   156c0:	andeq	r5, r1, r4, lsl #28
   156c4:	andeq	r5, r1, r4, lsl #28
   156c8:	andeq	r5, r1, r4, lsl #28
   156cc:	andeq	r5, r1, r4, lsl #28
   156d0:	andeq	r5, r1, r4, lsl #28
   156d4:	andeq	r5, r1, r4, lsl #28
   156d8:	andeq	r5, r1, r4, lsl #28
   156dc:	andeq	r5, r1, r4, lsl #28
   156e0:	andeq	r5, r1, r4, lsl #28
   156e4:	andeq	r5, r1, r4, lsl #28
   156e8:	andeq	r5, r1, r4, lsl #28
   156ec:	andeq	r5, r1, r4, lsl #28
   156f0:	andeq	r5, r1, r4, lsl #28
   156f4:	andeq	r5, r1, r4, lsl #28
   156f8:	andeq	r5, r1, r4, lsl #28
   156fc:	andeq	r5, r1, r4, lsl #28
   15700:	andeq	r5, r1, r4, lsl #28
   15704:	andeq	r5, r1, r4, lsl #28
   15708:	andeq	r5, r1, r4, lsl #28
   1570c:	andeq	r5, r1, r4, lsl #28
   15710:	andeq	r5, r1, r4, lsl #28
   15714:	andeq	r5, r1, r4, lsl #28
   15718:	andeq	r5, r1, r4, lsl #28
   1571c:	strdeq	r5, [r1], -ip
   15720:	ldrdeq	r5, [r1], -ip
   15724:	andeq	r5, r1, r4, lsl #28
   15728:	strdeq	r5, [r1], -ip
   1572c:	andeq	r5, r1, r4, lsl #28
   15730:	strdeq	r5, [r1], -ip
   15734:	andeq	r5, r1, r4, lsl #28
   15738:	andeq	r5, r1, r4, lsl #28
   1573c:	andeq	r5, r1, r4, lsl #28
   15740:	andeq	r5, r1, r4, lsl #28
   15744:	andeq	r5, r1, r4, lsl #28
   15748:	andeq	r5, r1, r4, lsl #28
   1574c:	andeq	r5, r1, r4, lsl #28
   15750:	andeq	r5, r1, r4, lsl #28
   15754:	andeq	r5, r1, r4, lsl #28
   15758:	andeq	r5, r1, r4, lsl #28
   1575c:	andeq	r5, r1, r4, lsl #28
   15760:	andeq	r5, r1, r4, lsl #28
   15764:	andeq	r5, r1, r4, lsl #28
   15768:	andeq	r5, r1, r4, lsl #28
   1576c:	andeq	r5, r1, r4, lsl #28
   15770:	andeq	r5, r1, r4, lsl #28
   15774:	andeq	r5, r1, r4, lsl #28
   15778:	andeq	r5, r1, r4, lsl #28
   1577c:	andeq	r5, r1, r4, lsl #28
   15780:	andeq	r5, r1, r4, lsl #28
   15784:	andeq	r5, r1, r4, lsl #28
   15788:	andeq	r5, r1, r4, lsl #28
   1578c:	andeq	r5, r1, r4, lsl #28
   15790:	andeq	r5, r1, r4, lsl #28
   15794:	andeq	r5, r1, r4, lsl #28
   15798:	andeq	r5, r1, r4, lsl #28
   1579c:	muleq	r1, ip, r8
   157a0:	strdeq	r5, [r1], -ip
   157a4:	muleq	r1, ip, r8
   157a8:			; <UNDEFINED> instruction: 0x000158bc
   157ac:	mov	r3, #0
   157b0:	str	r3, [sp, #44]	; 0x2c
   157b4:	mov	r4, #9
   157b8:	mov	r3, #116	; 0x74
   157bc:	b	15440 <dcngettext@plt+0x4450>
   157c0:	mov	r3, #0
   157c4:	str	r3, [sp, #44]	; 0x2c
   157c8:	mov	r4, #11
   157cc:	mov	r3, #118	; 0x76
   157d0:	b	15458 <dcngettext@plt+0x4468>
   157d4:	mov	r3, #0
   157d8:	str	r3, [sp, #44]	; 0x2c
   157dc:	cmp	sl, #2
   157e0:	beq	15804 <dcngettext@plt+0x4814>
   157e4:	ldr	r3, [sp, #28]
   157e8:	ldr	r2, [sp, #32]
   157ec:	and	r3, r3, r2
   157f0:	tst	r7, r3
   157f4:	bne	15e78 <dcngettext@plt+0x4e88>
   157f8:	mov	r4, #92	; 0x5c
   157fc:	mov	r3, r4
   15800:	b	15458 <dcngettext@plt+0x4468>
   15804:	ldr	r3, [sp, #32]
   15808:	cmp	r3, #0
   1580c:	bne	16000 <dcngettext@plt+0x5010>
   15810:	mov	r5, r3
   15814:	mov	r4, #92	; 0x5c
   15818:	eor	r3, r3, #1
   1581c:	ldr	r2, [sp, #36]	; 0x24
   15820:	and	r3, r3, r2
   15824:	tst	r3, #255	; 0xff
   15828:	beq	15530 <dcngettext@plt+0x4540>
   1582c:	cmp	r9, fp
   15830:	movhi	r3, #39	; 0x27
   15834:	strbhi	r3, [r8, fp]
   15838:	add	r3, fp, #1
   1583c:	cmp	r9, r3
   15840:	movhi	r2, #39	; 0x27
   15844:	strbhi	r2, [r8, r3]
   15848:	add	fp, fp, #2
   1584c:	mov	r3, #0
   15850:	str	r3, [sp, #36]	; 0x24
   15854:	b	15530 <dcngettext@plt+0x4540>
   15858:	mov	r3, #110	; 0x6e
   1585c:	b	15440 <dcngettext@plt+0x4450>
   15860:	mov	r3, #110	; 0x6e
   15864:	b	15440 <dcngettext@plt+0x4450>
   15868:	mov	r3, #0
   1586c:	str	r3, [sp, #44]	; 0x2c
   15870:	mov	r3, #110	; 0x6e
   15874:	b	15440 <dcngettext@plt+0x4450>
   15878:	mov	r8, r9
   1587c:	mov	r7, #2
   15880:	b	16020 <dcngettext@plt+0x5030>
   15884:	mov	r3, #97	; 0x61
   15888:	b	15458 <dcngettext@plt+0x4468>
   1588c:	mov	r3, #97	; 0x61
   15890:	b	15458 <dcngettext@plt+0x4468>
   15894:	mov	r3, #0
   15898:	str	r3, [sp, #44]	; 0x2c
   1589c:	ldr	r3, [sp, #24]
   158a0:	cmn	r3, #1
   158a4:	beq	158d0 <dcngettext@plt+0x48e0>
   158a8:	ldr	r3, [sp, #24]
   158ac:	subs	r3, r3, #1
   158b0:	movne	r3, #1
   158b4:	cmp	r3, #0
   158b8:	bne	15e38 <dcngettext@plt+0x4e48>
   158bc:	cmp	r6, #0
   158c0:	beq	15900 <dcngettext@plt+0x4910>
   158c4:	mov	r5, #0
   158c8:	mov	r3, r5
   158cc:	b	1546c <dcngettext@plt+0x447c>
   158d0:	ldr	r3, [sp, #48]	; 0x30
   158d4:	ldrb	r3, [r3, #1]
   158d8:	adds	r3, r3, #0
   158dc:	movne	r3, #1
   158e0:	b	158b4 <dcngettext@plt+0x48c4>
   158e4:	mov	r3, #0
   158e8:	str	r3, [sp, #44]	; 0x2c
   158ec:	b	158bc <dcngettext@plt+0x48cc>
   158f0:	mov	r3, #0
   158f4:	str	r3, [sp, #44]	; 0x2c
   158f8:	b	15900 <dcngettext@plt+0x4910>
   158fc:	ldr	r5, [sp, #44]	; 0x2c
   15900:	ldr	r3, [sp, #32]
   15904:	cmp	sl, #2
   15908:	movne	r3, #0
   1590c:	andeq	r3, r3, #1
   15910:	cmp	r3, #0
   15914:	beq	1546c <dcngettext@plt+0x447c>
   15918:	mov	r8, r9
   1591c:	mov	r7, #2
   15920:	b	16020 <dcngettext@plt+0x5030>
   15924:	ldr	r5, [sp, #32]
   15928:	b	15900 <dcngettext@plt+0x4910>
   1592c:	mov	r3, #0
   15930:	str	r3, [sp, #44]	; 0x2c
   15934:	mov	r5, r3
   15938:	b	15900 <dcngettext@plt+0x4910>
   1593c:	mov	r3, #0
   15940:	str	r3, [sp, #44]	; 0x2c
   15944:	cmp	sl, #2
   15948:	strne	r5, [sp, #68]	; 0x44
   1594c:	movne	r3, #0
   15950:	movne	r4, #39	; 0x27
   15954:	bne	1546c <dcngettext@plt+0x447c>
   15958:	ldr	r3, [sp, #32]
   1595c:	cmp	r3, #0
   15960:	bne	1600c <dcngettext@plt+0x501c>
   15964:	ldr	r3, [sp, #72]	; 0x48
   15968:	clz	r3, r3
   1596c:	lsr	r3, r3, #5
   15970:	cmp	r9, #0
   15974:	moveq	r3, #0
   15978:	cmp	r3, #0
   1597c:	movne	r3, #0
   15980:	bne	159a8 <dcngettext@plt+0x49b8>
   15984:	cmp	r9, fp
   15988:	movhi	r3, #39	; 0x27
   1598c:	strbhi	r3, [r8, fp]
   15990:	add	r3, fp, #1
   15994:	cmp	r9, r3
   15998:	movhi	r2, #92	; 0x5c
   1599c:	strbhi	r2, [r8, r3]
   159a0:	mov	r3, r9
   159a4:	ldr	r9, [sp, #72]	; 0x48
   159a8:	add	r2, fp, #2
   159ac:	cmp	r2, r3
   159b0:	movcc	r1, #39	; 0x27
   159b4:	strbcc	r1, [r8, r2]
   159b8:	add	fp, fp, #3
   159bc:	str	r5, [sp, #68]	; 0x44
   159c0:	ldr	r2, [sp, #32]
   159c4:	str	r2, [sp, #36]	; 0x24
   159c8:	str	r9, [sp, #72]	; 0x48
   159cc:	mov	r9, r3
   159d0:	mov	r4, #39	; 0x27
   159d4:	mov	r3, #0
   159d8:	b	154b8 <dcngettext@plt+0x44c8>
   159dc:	mov	r3, #0
   159e0:	str	r3, [sp, #44]	; 0x2c
   159e4:	ldr	r7, [sp, #76]	; 0x4c
   159e8:	cmp	r7, #1
   159ec:	bne	15a24 <dcngettext@plt+0x4a34>
   159f0:	bl	10ec4 <__ctype_b_loc@plt>
   159f4:	ldr	r2, [r0]
   159f8:	lsl	r3, r4, #1
   159fc:	ldrh	r5, [r2, r3]
   15a00:	ubfx	r5, r5, #14, #1
   15a04:	mov	ip, r7
   15a08:	eor	r3, r5, #1
   15a0c:	ldr	r2, [sp, #28]
   15a10:	and	r3, r3, r2
   15a14:	ands	r3, r3, #255	; 0xff
   15a18:	beq	1546c <dcngettext@plt+0x447c>
   15a1c:	mov	r5, #0
   15a20:	b	15c80 <dcngettext@plt+0x4c90>
   15a24:	mov	r2, #0
   15a28:	mov	r3, #0
   15a2c:	strd	r2, [sp, #104]	; 0x68
   15a30:	ldr	r3, [sp, #24]
   15a34:	cmn	r3, #1
   15a38:	beq	15a5c <dcngettext@plt+0x4a6c>
   15a3c:	mov	r3, #0
   15a40:	str	r4, [sp, #88]	; 0x58
   15a44:	str	fp, [sp, #92]	; 0x5c
   15a48:	str	r8, [sp, #56]	; 0x38
   15a4c:	mov	r8, r3
   15a50:	str	r9, [sp, #84]	; 0x54
   15a54:	ldr	r9, [sp, #48]	; 0x30
   15a58:	b	15ba8 <dcngettext@plt+0x4bb8>
   15a5c:	ldr	r0, [sp, #48]	; 0x30
   15a60:	bl	10edc <strlen@plt>
   15a64:	str	r0, [sp, #24]
   15a68:	b	15a3c <dcngettext@plt+0x4a4c>
   15a6c:	mov	r1, fp
   15a70:	ldr	r4, [sp, #88]	; 0x58
   15a74:	mov	r2, r8
   15a78:	mov	ip, r8
   15a7c:	ldr	fp, [sp, #92]	; 0x5c
   15a80:	ldr	r8, [sp, #56]	; 0x38
   15a84:	ldr	r9, [sp, #84]	; 0x54
   15a88:	ldr	r0, [sp, #24]
   15a8c:	cmp	r7, r0
   15a90:	bcs	15c48 <dcngettext@plt+0x4c58>
   15a94:	ldrb	r3, [r1]
   15a98:	cmp	r3, #0
   15a9c:	beq	15c50 <dcngettext@plt+0x4c60>
   15aa0:	mov	r3, r1
   15aa4:	add	r2, r2, #1
   15aa8:	add	r1, r6, r2
   15aac:	cmp	r0, r1
   15ab0:	bls	15c58 <dcngettext@plt+0x4c68>
   15ab4:	ldrb	r1, [r3, #1]!
   15ab8:	cmp	r1, #0
   15abc:	bne	15aa4 <dcngettext@plt+0x4ab4>
   15ac0:	mov	ip, r2
   15ac4:	mov	r5, #0
   15ac8:	b	15c78 <dcngettext@plt+0x4c88>
   15acc:	ldr	r3, [sp, #56]	; 0x38
   15ad0:	str	r3, [sp, #64]	; 0x40
   15ad4:	ldr	r8, [sp, #84]	; 0x54
   15ad8:	mov	r7, #2
   15adc:	b	16020 <dcngettext@plt+0x5030>
   15ae0:	cmp	r2, r7
   15ae4:	beq	15b84 <dcngettext@plt+0x4b94>
   15ae8:	ldrb	r3, [r2], #1
   15aec:	sub	r3, r3, #91	; 0x5b
   15af0:	cmp	r3, #33	; 0x21
   15af4:	ldrls	pc, [pc, r3, lsl #2]
   15af8:	b	15ae0 <dcngettext@plt+0x4af0>
   15afc:	andeq	r5, r1, ip, asr #21
   15b00:	andeq	r5, r1, ip, asr #21
   15b04:	andeq	r5, r1, r0, ror #21
   15b08:	andeq	r5, r1, ip, asr #21
   15b0c:	andeq	r5, r1, r0, ror #21
   15b10:	andeq	r5, r1, ip, asr #21
   15b14:	andeq	r5, r1, r0, ror #21
   15b18:	andeq	r5, r1, r0, ror #21
   15b1c:	andeq	r5, r1, r0, ror #21
   15b20:	andeq	r5, r1, r0, ror #21
   15b24:	andeq	r5, r1, r0, ror #21
   15b28:	andeq	r5, r1, r0, ror #21
   15b2c:	andeq	r5, r1, r0, ror #21
   15b30:	andeq	r5, r1, r0, ror #21
   15b34:	andeq	r5, r1, r0, ror #21
   15b38:	andeq	r5, r1, r0, ror #21
   15b3c:	andeq	r5, r1, r0, ror #21
   15b40:	andeq	r5, r1, r0, ror #21
   15b44:	andeq	r5, r1, r0, ror #21
   15b48:	andeq	r5, r1, r0, ror #21
   15b4c:	andeq	r5, r1, r0, ror #21
   15b50:	andeq	r5, r1, r0, ror #21
   15b54:	andeq	r5, r1, r0, ror #21
   15b58:	andeq	r5, r1, r0, ror #21
   15b5c:	andeq	r5, r1, r0, ror #21
   15b60:	andeq	r5, r1, r0, ror #21
   15b64:	andeq	r5, r1, r0, ror #21
   15b68:	andeq	r5, r1, r0, ror #21
   15b6c:	andeq	r5, r1, r0, ror #21
   15b70:	andeq	r5, r1, r0, ror #21
   15b74:	andeq	r5, r1, r0, ror #21
   15b78:	andeq	r5, r1, r0, ror #21
   15b7c:	andeq	r5, r1, r0, ror #21
   15b80:	andeq	r5, r1, ip, asr #21
   15b84:	ldr	r0, [sp, #100]	; 0x64
   15b88:	bl	10e28 <iswprint@plt>
   15b8c:	cmp	r0, #0
   15b90:	moveq	r5, #0
   15b94:	add	r8, r8, r4
   15b98:	add	r0, sp, #104	; 0x68
   15b9c:	bl	10dd4 <mbsinit@plt>
   15ba0:	cmp	r0, #0
   15ba4:	bne	15c14 <dcngettext@plt+0x4c24>
   15ba8:	add	r7, r6, r8
   15bac:	add	fp, r9, r7
   15bb0:	add	r3, sp, #104	; 0x68
   15bb4:	ldr	r2, [sp, #24]
   15bb8:	sub	r2, r2, r7
   15bbc:	mov	r1, fp
   15bc0:	add	r0, sp, #100	; 0x64
   15bc4:	bl	17ba4 <dcngettext@plt+0x6bb4>
   15bc8:	subs	r4, r0, #0
   15bcc:	beq	15c64 <dcngettext@plt+0x4c74>
   15bd0:	cmn	r4, #1
   15bd4:	beq	15c2c <dcngettext@plt+0x4c3c>
   15bd8:	cmn	r4, #2
   15bdc:	beq	15a6c <dcngettext@plt+0x4a7c>
   15be0:	ldr	r3, [sp, #32]
   15be4:	cmp	sl, #2
   15be8:	movne	r3, #0
   15bec:	andeq	r3, r3, #1
   15bf0:	cmp	r3, #0
   15bf4:	beq	15b84 <dcngettext@plt+0x4b94>
   15bf8:	cmp	r4, #1
   15bfc:	bls	15b84 <dcngettext@plt+0x4b94>
   15c00:	add	r2, r7, #1
   15c04:	add	r2, r9, r2
   15c08:	add	r3, r9, r4
   15c0c:	add	r7, r3, r7
   15c10:	b	15ae8 <dcngettext@plt+0x4af8>
   15c14:	ldr	r4, [sp, #88]	; 0x58
   15c18:	mov	ip, r8
   15c1c:	ldr	fp, [sp, #92]	; 0x5c
   15c20:	ldr	r8, [sp, #56]	; 0x38
   15c24:	ldr	r9, [sp, #84]	; 0x54
   15c28:	b	15c78 <dcngettext@plt+0x4c88>
   15c2c:	ldr	r4, [sp, #88]	; 0x58
   15c30:	mov	ip, r8
   15c34:	ldr	fp, [sp, #92]	; 0x5c
   15c38:	ldr	r8, [sp, #56]	; 0x38
   15c3c:	ldr	r9, [sp, #84]	; 0x54
   15c40:	mov	r5, #0
   15c44:	b	15c78 <dcngettext@plt+0x4c88>
   15c48:	mov	r5, #0
   15c4c:	b	15c78 <dcngettext@plt+0x4c88>
   15c50:	mov	r5, #0
   15c54:	b	15c78 <dcngettext@plt+0x4c88>
   15c58:	mov	ip, r2
   15c5c:	mov	r5, #0
   15c60:	b	15c78 <dcngettext@plt+0x4c88>
   15c64:	ldr	r4, [sp, #88]	; 0x58
   15c68:	mov	ip, r8
   15c6c:	ldr	fp, [sp, #92]	; 0x5c
   15c70:	ldr	r8, [sp, #56]	; 0x38
   15c74:	ldr	r9, [sp, #84]	; 0x54
   15c78:	cmp	ip, #1
   15c7c:	bls	15a08 <dcngettext@plt+0x4a18>
   15c80:	add	lr, r6, ip
   15c84:	ldr	r3, [sp, #48]	; 0x30
   15c88:	add	r1, r3, r6
   15c8c:	mov	r3, #0
   15c90:	eor	r0, r5, #1
   15c94:	ldr	r2, [sp, #28]
   15c98:	and	r0, r0, r2
   15c9c:	uxtb	r0, r0
   15ca0:	str	r0, [sp, #56]	; 0x38
   15ca4:	mov	r7, #92	; 0x5c
   15ca8:	ldr	ip, [sp, #36]	; 0x24
   15cac:	str	r5, [sp, #84]	; 0x54
   15cb0:	ldr	r2, [sp, #44]	; 0x2c
   15cb4:	b	15d24 <dcngettext@plt+0x4d34>
   15cb8:	cmp	r2, #0
   15cbc:	beq	15ccc <dcngettext@plt+0x4cdc>
   15cc0:	cmp	r9, fp
   15cc4:	strbhi	r7, [r8, fp]
   15cc8:	add	fp, fp, #1
   15ccc:	add	r5, r6, #1
   15cd0:	cmp	r5, lr
   15cd4:	bcs	15de0 <dcngettext@plt+0x4df0>
   15cd8:	eor	r2, r3, #1
   15cdc:	and	r2, r2, ip
   15ce0:	ands	r2, r2, #255	; 0xff
   15ce4:	beq	15dfc <dcngettext@plt+0x4e0c>
   15ce8:	cmp	r9, fp
   15cec:	movhi	r2, #39	; 0x27
   15cf0:	strbhi	r2, [r8, fp]
   15cf4:	add	r2, fp, #1
   15cf8:	cmp	r9, r2
   15cfc:	movhi	ip, #39	; 0x27
   15d00:	strbhi	ip, [r8, r2]
   15d04:	add	fp, fp, #2
   15d08:	ldr	ip, [sp, #56]	; 0x38
   15d0c:	mov	r2, ip
   15d10:	mov	r6, r5
   15d14:	cmp	r9, fp
   15d18:	strbhi	r4, [r8, fp]
   15d1c:	add	fp, fp, #1
   15d20:	ldrb	r4, [r1, #1]!
   15d24:	cmp	r0, #0
   15d28:	beq	15cb8 <dcngettext@plt+0x4cc8>
   15d2c:	ldr	r3, [sp, #32]
   15d30:	cmp	r3, #0
   15d34:	bne	15fc8 <dcngettext@plt+0x4fd8>
   15d38:	eor	r3, ip, #1
   15d3c:	cmp	sl, #2
   15d40:	movne	r3, #0
   15d44:	andeq	r3, r3, #1
   15d48:	cmp	r3, #0
   15d4c:	beq	15d84 <dcngettext@plt+0x4d94>
   15d50:	cmp	r9, fp
   15d54:	movhi	ip, #39	; 0x27
   15d58:	strbhi	ip, [r8, fp]
   15d5c:	add	ip, fp, #1
   15d60:	cmp	r9, ip
   15d64:	movhi	r5, #36	; 0x24
   15d68:	strbhi	r5, [r8, ip]
   15d6c:	add	ip, fp, #2
   15d70:	cmp	r9, ip
   15d74:	movhi	r5, #39	; 0x27
   15d78:	strbhi	r5, [r8, ip]
   15d7c:	add	fp, fp, #3
   15d80:	mov	ip, r3
   15d84:	cmp	r9, fp
   15d88:	strbhi	r7, [r8, fp]
   15d8c:	add	r3, fp, #1
   15d90:	cmp	r9, r3
   15d94:	bls	15da4 <dcngettext@plt+0x4db4>
   15d98:	lsr	r5, r4, #6
   15d9c:	add	r5, r5, #48	; 0x30
   15da0:	strb	r5, [r8, r3]
   15da4:	add	r3, fp, #2
   15da8:	cmp	r9, r3
   15dac:	bls	15dbc <dcngettext@plt+0x4dcc>
   15db0:	ubfx	r5, r4, #3, #3
   15db4:	add	r5, r5, #48	; 0x30
   15db8:	strb	r5, [r8, r3]
   15dbc:	add	fp, fp, #3
   15dc0:	and	r4, r4, #7
   15dc4:	add	r4, r4, #48	; 0x30
   15dc8:	add	r5, r6, #1
   15dcc:	cmp	r5, lr
   15dd0:	bcs	15dec <dcngettext@plt+0x4dfc>
   15dd4:	ldr	r3, [sp, #56]	; 0x38
   15dd8:	mov	r6, r5
   15ddc:	b	15d14 <dcngettext@plt+0x4d24>
   15de0:	str	ip, [sp, #36]	; 0x24
   15de4:	ldr	r5, [sp, #84]	; 0x54
   15de8:	b	15818 <dcngettext@plt+0x4828>
   15dec:	str	ip, [sp, #36]	; 0x24
   15df0:	ldr	r5, [sp, #84]	; 0x54
   15df4:	mov	r3, r0
   15df8:	b	15818 <dcngettext@plt+0x4828>
   15dfc:	mov	r6, r5
   15e00:	b	15d14 <dcngettext@plt+0x4d24>
   15e04:	ldr	r3, [sp, #44]	; 0x2c
   15e08:	b	1546c <dcngettext@plt+0x447c>
   15e0c:	mov	r5, #0
   15e10:	mov	r3, r5
   15e14:	mov	r4, #63	; 0x3f
   15e18:	b	1546c <dcngettext@plt+0x447c>
   15e1c:	mov	r5, #0
   15e20:	mov	r3, r5
   15e24:	mov	r4, #63	; 0x3f
   15e28:	b	1546c <dcngettext@plt+0x447c>
   15e2c:	mov	r5, #0
   15e30:	mov	r3, r5
   15e34:	b	1546c <dcngettext@plt+0x447c>
   15e38:	mov	r5, #0
   15e3c:	mov	r3, r5
   15e40:	b	1546c <dcngettext@plt+0x447c>
   15e44:	ldr	r5, [sp, #44]	; 0x2c
   15e48:	ldr	r3, [sp, #32]
   15e4c:	b	1546c <dcngettext@plt+0x447c>
   15e50:	ldr	r5, [sp, #44]	; 0x2c
   15e54:	mov	r3, #0
   15e58:	str	r3, [sp, #44]	; 0x2c
   15e5c:	b	1546c <dcngettext@plt+0x447c>
   15e60:	mov	r4, r3
   15e64:	mov	r5, #0
   15e68:	b	154c4 <dcngettext@plt+0x44d4>
   15e6c:	mov	r5, #0
   15e70:	mov	r4, #97	; 0x61
   15e74:	b	154c4 <dcngettext@plt+0x44d4>
   15e78:	mov	r5, #0
   15e7c:	mov	r3, r5
   15e80:	mov	r4, #92	; 0x5c
   15e84:	b	15818 <dcngettext@plt+0x4828>
   15e88:	ldr	r3, [sp, #48]	; 0x30
   15e8c:	ldrb	r5, [r3, r6]
   15e90:	adds	r5, r5, #0
   15e94:	movne	r5, #1
   15e98:	b	15568 <dcngettext@plt+0x4578>
   15e9c:	cmp	sl, #2
   15ea0:	movne	r3, #0
   15ea4:	moveq	r3, #1
   15ea8:	ldr	r1, [sp, #32]
   15eac:	cmp	fp, #0
   15eb0:	andeq	r2, r3, r1
   15eb4:	movne	r2, #0
   15eb8:	cmp	r2, #0
   15ebc:	bne	15fdc <dcngettext@plt+0x4fec>
   15ec0:	eor	r2, r1, #1
   15ec4:	uxtb	r2, r2
   15ec8:	and	r3, r3, r2
   15ecc:	ldr	r1, [sp, #68]	; 0x44
   15ed0:	ands	r3, r1, r3
   15ed4:	beq	15f68 <dcngettext@plt+0x4f78>
   15ed8:	ldr	r2, [sp, #40]	; 0x28
   15edc:	cmp	r2, #0
   15ee0:	bne	15f18 <dcngettext@plt+0x4f28>
   15ee4:	ldr	r2, [sp, #72]	; 0x48
   15ee8:	adds	r2, r2, #0
   15eec:	movne	r2, #1
   15ef0:	cmp	r9, #0
   15ef4:	movne	r2, #0
   15ef8:	str	r2, [sp, #68]	; 0x44
   15efc:	mov	sl, #2
   15f00:	ldr	r1, [sp, #40]	; 0x28
   15f04:	str	r1, [sp, #32]
   15f08:	cmp	r2, #0
   15f0c:	beq	15f5c <dcngettext@plt+0x4f6c>
   15f10:	ldr	r9, [sp, #72]	; 0x48
   15f14:	b	14c70 <dcngettext@plt+0x3c80>
   15f18:	ldr	r3, [sp, #168]	; 0xa8
   15f1c:	str	r3, [sp, #16]
   15f20:	ldr	r3, [sp, #164]	; 0xa4
   15f24:	str	r3, [sp, #12]
   15f28:	ldr	r3, [sp, #160]	; 0xa0
   15f2c:	str	r3, [sp, #8]
   15f30:	ldr	r3, [sp, #156]	; 0x9c
   15f34:	str	r3, [sp, #4]
   15f38:	mov	r3, #5
   15f3c:	str	r3, [sp]
   15f40:	ldr	r3, [sp, #24]
   15f44:	ldr	r2, [sp, #48]	; 0x30
   15f48:	ldr	r1, [sp, #72]	; 0x48
   15f4c:	ldr	r0, [sp, #64]	; 0x40
   15f50:	bl	14bf8 <dcngettext@plt+0x3c08>
   15f54:	mov	fp, r0
   15f58:	b	16078 <dcngettext@plt+0x5088>
   15f5c:	mov	r8, r9
   15f60:	mov	r2, r3
   15f64:	b	15f6c <dcngettext@plt+0x4f7c>
   15f68:	mov	r8, r9
   15f6c:	ldr	r3, [sp, #60]	; 0x3c
   15f70:	cmp	r3, #0
   15f74:	moveq	r2, #0
   15f78:	andne	r2, r2, #1
   15f7c:	cmp	r2, #0
   15f80:	beq	15fb0 <dcngettext@plt+0x4fc0>
   15f84:	mov	r2, r3
   15f88:	ldrb	r3, [r3]
   15f8c:	cmp	r3, #0
   15f90:	beq	15fb0 <dcngettext@plt+0x4fc0>
   15f94:	ldr	r1, [sp, #64]	; 0x40
   15f98:	cmp	r8, fp
   15f9c:	strbhi	r3, [r1, fp]
   15fa0:	add	fp, fp, #1
   15fa4:	ldrb	r3, [r2, #1]!
   15fa8:	cmp	r3, #0
   15fac:	bne	15f98 <dcngettext@plt+0x4fa8>
   15fb0:	cmp	r8, fp
   15fb4:	bls	16078 <dcngettext@plt+0x5088>
   15fb8:	mov	r3, #0
   15fbc:	ldr	r2, [sp, #64]	; 0x40
   15fc0:	strb	r3, [r2, fp]
   15fc4:	b	16078 <dcngettext@plt+0x5088>
   15fc8:	mov	r8, r9
   15fcc:	mov	r7, sl
   15fd0:	ldr	r3, [sp, #32]
   15fd4:	str	r3, [sp, #28]
   15fd8:	b	16020 <dcngettext@plt+0x5030>
   15fdc:	mov	r8, r9
   15fe0:	mov	r7, #2
   15fe4:	b	16020 <dcngettext@plt+0x5030>
   15fe8:	mov	r8, r9
   15fec:	mov	r7, sl
   15ff0:	b	16020 <dcngettext@plt+0x5030>
   15ff4:	mov	r8, r9
   15ff8:	mov	r7, sl
   15ffc:	b	16020 <dcngettext@plt+0x5030>
   16000:	mov	r8, r9
   16004:	mov	r7, sl
   16008:	b	16020 <dcngettext@plt+0x5030>
   1600c:	mov	r8, r9
   16010:	mov	r7, sl
   16014:	b	16020 <dcngettext@plt+0x5030>
   16018:	mov	r8, r9
   1601c:	mov	r7, sl
   16020:	ldr	r3, [sp, #28]
   16024:	cmp	r7, #2
   16028:	movne	r3, #0
   1602c:	andeq	r3, r3, #1
   16030:	cmp	r3, #0
   16034:	movne	r7, #4
   16038:	ldr	r3, [sp, #168]	; 0xa8
   1603c:	str	r3, [sp, #16]
   16040:	ldr	r3, [sp, #164]	; 0xa4
   16044:	str	r3, [sp, #12]
   16048:	mov	r3, #0
   1604c:	str	r3, [sp, #8]
   16050:	ldr	r3, [sp, #156]	; 0x9c
   16054:	bic	r3, r3, #2
   16058:	str	r3, [sp, #4]
   1605c:	str	r7, [sp]
   16060:	ldr	r3, [sp, #24]
   16064:	ldr	r2, [sp, #48]	; 0x30
   16068:	mov	r1, r8
   1606c:	ldr	r0, [sp, #64]	; 0x40
   16070:	bl	14bf8 <dcngettext@plt+0x3c08>
   16074:	mov	fp, r0
   16078:	mov	r0, fp
   1607c:	add	sp, sp, #116	; 0x74
   16080:	ldrd	r4, [sp]
   16084:	ldrd	r6, [sp, #8]
   16088:	ldrd	r8, [sp, #16]
   1608c:	ldrd	sl, [sp, #24]
   16090:	add	sp, sp, #32
   16094:	pop	{pc}		; (ldr pc, [sp], #4)
   16098:	mov	r8, r9
   1609c:	mov	r7, sl
   160a0:	b	16038 <dcngettext@plt+0x5048>
   160a4:	add	fp, fp, #4
   160a8:	str	r3, [sp, #36]	; 0x24
   160ac:	mov	r5, #0
   160b0:	mov	r4, #48	; 0x30
   160b4:	b	1546c <dcngettext@plt+0x447c>
   160b8:	mov	r3, #1
   160bc:	str	r3, [sp, #32]
   160c0:	str	r3, [sp, #28]
   160c4:	str	r3, [sp, #52]	; 0x34
   160c8:	movw	r3, #36260	; 0x8da4
   160cc:	movt	r3, #1
   160d0:	str	r3, [sp, #60]	; 0x3c
   160d4:	mov	fp, #0
   160d8:	mov	sl, #5
   160dc:	b	14cd0 <dcngettext@plt+0x3ce0>
   160e0:	ldr	r3, [sp, #48]	; 0x30
   160e4:	ldrb	r4, [r3, r6]
   160e8:	cmp	r4, #126	; 0x7e
   160ec:	ldrls	pc, [pc, r4, lsl #2]
   160f0:	b	159dc <dcngettext@plt+0x49ec>
   160f4:	andeq	r5, r1, r4, ror #2
   160f8:	ldrdeq	r5, [r1], -ip
   160fc:	ldrdeq	r5, [r1], -ip
   16100:	ldrdeq	r5, [r1], -ip
   16104:	ldrdeq	r5, [r1], -ip
   16108:	ldrdeq	r5, [r1], -ip
   1610c:	ldrdeq	r5, [r1], -ip
   16110:	andeq	r5, r1, ip, ror #28
   16114:	andeq	r5, r1, r8, lsl #8
   16118:	andeq	r5, r1, ip, lsr #15
   1611c:	andeq	r5, r1, r8, ror #16
   16120:	andeq	r5, r1, r0, asr #15
   16124:	andeq	r5, r1, ip, lsl r4
   16128:	andeq	r5, r1, r0, lsr r4
   1612c:	ldrdeq	r5, [r1], -ip
   16130:	ldrdeq	r5, [r1], -ip
   16134:	ldrdeq	r5, [r1], -ip
   16138:	ldrdeq	r5, [r1], -ip
   1613c:	ldrdeq	r5, [r1], -ip
   16140:	ldrdeq	r5, [r1], -ip
   16144:	ldrdeq	r5, [r1], -ip
   16148:	ldrdeq	r5, [r1], -ip
   1614c:	ldrdeq	r5, [r1], -ip
   16150:	ldrdeq	r5, [r1], -ip
   16154:	ldrdeq	r5, [r1], -ip
   16158:	ldrdeq	r5, [r1], -ip
   1615c:	ldrdeq	r5, [r1], -ip
   16160:	ldrdeq	r5, [r1], -ip
   16164:	ldrdeq	r5, [r1], -ip
   16168:	ldrdeq	r5, [r1], -ip
   1616c:	ldrdeq	r5, [r1], -ip
   16170:	ldrdeq	r5, [r1], -ip
   16174:	strdeq	r5, [r1], -r0
   16178:	andeq	r5, r1, ip, lsr #18
   1617c:	andeq	r5, r1, ip, lsr #18
   16180:	andeq	r5, r1, r4, ror #17
   16184:	andeq	r5, r1, ip, lsr #18
   16188:	andeq	r5, r1, r0, asr lr
   1618c:	andeq	r5, r1, ip, lsr #18
   16190:	andeq	r5, r1, ip, lsr r9
   16194:	andeq	r5, r1, ip, lsr #18
   16198:	andeq	r5, r1, ip, lsr #18
   1619c:	andeq	r5, r1, ip, lsr #18
   161a0:	andeq	r5, r1, r0, asr lr
   161a4:	andeq	r5, r1, r0, asr lr
   161a8:	andeq	r5, r1, r0, asr lr
   161ac:	andeq	r5, r1, r0, asr lr
   161b0:	andeq	r5, r1, r0, asr lr
   161b4:	andeq	r5, r1, r0, asr lr
   161b8:	andeq	r5, r1, r0, asr lr
   161bc:	andeq	r5, r1, r0, asr lr
   161c0:	andeq	r5, r1, r0, asr lr
   161c4:	andeq	r5, r1, r0, asr lr
   161c8:	andeq	r5, r1, r0, asr lr
   161cc:	andeq	r5, r1, r0, asr lr
   161d0:	andeq	r5, r1, r0, asr lr
   161d4:	andeq	r5, r1, r0, asr lr
   161d8:	andeq	r5, r1, r0, asr lr
   161dc:	andeq	r5, r1, r0, asr lr
   161e0:	andeq	r5, r1, ip, lsr #18
   161e4:	andeq	r5, r1, ip, lsr #18
   161e8:	andeq	r5, r1, ip, lsr #18
   161ec:	andeq	r5, r1, ip, lsr #18
   161f0:	muleq	r1, ip, r2
   161f4:	ldrdeq	r5, [r1], -ip
   161f8:	andeq	r5, r1, r0, asr lr
   161fc:	andeq	r5, r1, r0, asr lr
   16200:	andeq	r5, r1, r0, asr lr
   16204:	andeq	r5, r1, r0, asr lr
   16208:	andeq	r5, r1, r0, asr lr
   1620c:	andeq	r5, r1, r0, asr lr
   16210:	andeq	r5, r1, r0, asr lr
   16214:	andeq	r5, r1, r0, asr lr
   16218:	andeq	r5, r1, r0, asr lr
   1621c:	andeq	r5, r1, r0, asr lr
   16220:	andeq	r5, r1, r0, asr lr
   16224:	andeq	r5, r1, r0, asr lr
   16228:	andeq	r5, r1, r0, asr lr
   1622c:	andeq	r5, r1, r0, asr lr
   16230:	andeq	r5, r1, r0, asr lr
   16234:	andeq	r5, r1, r0, asr lr
   16238:	andeq	r5, r1, r0, asr lr
   1623c:	andeq	r5, r1, r0, asr lr
   16240:	andeq	r5, r1, r0, asr lr
   16244:	andeq	r5, r1, r0, asr lr
   16248:	andeq	r5, r1, r0, asr lr
   1624c:	andeq	r5, r1, r0, asr lr
   16250:	andeq	r5, r1, r0, asr lr
   16254:	andeq	r5, r1, r0, asr lr
   16258:	andeq	r5, r1, r0, asr lr
   1625c:	andeq	r5, r1, r0, asr lr
   16260:	andeq	r5, r1, ip, lsr #18
   16264:	ldrdeq	r5, [r1], -r4
   16268:	andeq	r5, r1, r0, asr lr
   1626c:	andeq	r5, r1, ip, lsr #18
   16270:	andeq	r5, r1, r0, asr lr
   16274:	andeq	r5, r1, ip, lsr #18
   16278:	andeq	r5, r1, r0, asr lr
   1627c:	andeq	r5, r1, r0, asr lr
   16280:	andeq	r5, r1, r0, asr lr
   16284:	andeq	r5, r1, r0, asr lr
   16288:	andeq	r5, r1, r0, asr lr
   1628c:	andeq	r5, r1, r0, asr lr
   16290:	andeq	r5, r1, r0, asr lr
   16294:	andeq	r5, r1, r0, asr lr
   16298:	andeq	r5, r1, r0, asr lr
   1629c:	andeq	r5, r1, r0, asr lr
   162a0:	andeq	r5, r1, r0, asr lr
   162a4:	andeq	r5, r1, r0, asr lr
   162a8:	andeq	r5, r1, r0, asr lr
   162ac:	andeq	r5, r1, r0, asr lr
   162b0:	andeq	r5, r1, r0, asr lr
   162b4:	andeq	r5, r1, r0, asr lr
   162b8:	andeq	r5, r1, r0, asr lr
   162bc:	andeq	r5, r1, r0, asr lr
   162c0:	andeq	r5, r1, r0, asr lr
   162c4:	andeq	r5, r1, r0, asr lr
   162c8:	andeq	r5, r1, r0, asr lr
   162cc:	andeq	r5, r1, r0, asr lr
   162d0:	andeq	r5, r1, r0, asr lr
   162d4:	andeq	r5, r1, r0, asr lr
   162d8:	andeq	r5, r1, r0, asr lr
   162dc:	andeq	r5, r1, r0, asr lr
   162e0:	muleq	r1, r4, r8
   162e4:	andeq	r5, r1, ip, lsr #18
   162e8:	muleq	r1, r4, r8
   162ec:	andeq	r5, r1, r4, ror #17
   162f0:	strd	r4, [sp, #-36]!	; 0xffffffdc
   162f4:	strd	r6, [sp, #8]
   162f8:	strd	r8, [sp, #16]
   162fc:	strd	sl, [sp, #24]
   16300:	str	lr, [sp, #32]
   16304:	sub	sp, sp, #52	; 0x34
   16308:	mov	r5, r0
   1630c:	str	r1, [sp, #24]
   16310:	str	r2, [sp, #28]
   16314:	mov	r4, r3
   16318:	bl	10ef4 <__errno_location@plt>
   1631c:	str	r0, [sp, #32]
   16320:	ldr	r3, [r0]
   16324:	str	r3, [sp, #36]	; 0x24
   16328:	movw	r3, #41228	; 0xa10c
   1632c:	movt	r3, #2
   16330:	ldr	r6, [r3]
   16334:	cmn	r5, #-2147483647	; 0x80000001
   16338:	movne	r3, #0
   1633c:	moveq	r3, #1
   16340:	orrs	r3, r3, r5, lsr #31
   16344:	bne	164a8 <dcngettext@plt+0x54b8>
   16348:	movw	r3, #41228	; 0xa10c
   1634c:	movt	r3, #2
   16350:	ldr	r2, [r3, #4]
   16354:	cmp	r2, r5
   16358:	bgt	163c8 <dcngettext@plt+0x53d8>
   1635c:	str	r2, [sp, #44]	; 0x2c
   16360:	add	r3, r3, #8
   16364:	cmp	r6, r3
   16368:	beq	164ac <dcngettext@plt+0x54bc>
   1636c:	sub	r2, r5, r2
   16370:	mov	r3, #8
   16374:	str	r3, [sp]
   16378:	mvn	r3, #-2147483648	; 0x80000000
   1637c:	add	r2, r2, #1
   16380:	add	r1, sp, #44	; 0x2c
   16384:	mov	r0, r6
   16388:	bl	174d0 <dcngettext@plt+0x64e0>
   1638c:	mov	r6, r0
   16390:	movw	r3, #41228	; 0xa10c
   16394:	movt	r3, #2
   16398:	str	r0, [r3]
   1639c:	movw	r7, #41228	; 0xa10c
   163a0:	movt	r7, #2
   163a4:	ldr	r0, [r7, #4]
   163a8:	ldr	r2, [sp, #44]	; 0x2c
   163ac:	sub	r2, r2, r0
   163b0:	lsl	r2, r2, #3
   163b4:	mov	r1, #0
   163b8:	add	r0, r6, r0, lsl #3
   163bc:	bl	10f18 <memset@plt>
   163c0:	ldr	r3, [sp, #44]	; 0x2c
   163c4:	str	r3, [r7, #4]
   163c8:	add	fp, r6, r5, lsl #3
   163cc:	ldr	r8, [r6, r5, lsl #3]
   163d0:	ldr	r7, [fp, #4]
   163d4:	ldr	r3, [r4, #4]
   163d8:	orr	r9, r3, #1
   163dc:	add	sl, r4, #8
   163e0:	ldr	r3, [r4, #44]	; 0x2c
   163e4:	str	r3, [sp, #16]
   163e8:	ldr	r3, [r4, #40]	; 0x28
   163ec:	str	r3, [sp, #12]
   163f0:	str	sl, [sp, #8]
   163f4:	str	r9, [sp, #4]
   163f8:	ldr	r3, [r4]
   163fc:	str	r3, [sp]
   16400:	ldr	r3, [sp, #28]
   16404:	ldr	r2, [sp, #24]
   16408:	mov	r1, r8
   1640c:	mov	r0, r7
   16410:	bl	14bf8 <dcngettext@plt+0x3c08>
   16414:	cmp	r8, r0
   16418:	bhi	1647c <dcngettext@plt+0x548c>
   1641c:	add	r8, r0, #1
   16420:	str	r8, [r6, r5, lsl #3]
   16424:	movw	r3, #41360	; 0xa190
   16428:	movt	r3, #2
   1642c:	cmp	r7, r3
   16430:	beq	1643c <dcngettext@plt+0x544c>
   16434:	mov	r0, r7
   16438:	bl	14874 <dcngettext@plt+0x3884>
   1643c:	mov	r0, r8
   16440:	bl	172cc <dcngettext@plt+0x62dc>
   16444:	mov	r7, r0
   16448:	str	r0, [fp, #4]
   1644c:	ldr	r3, [r4, #44]	; 0x2c
   16450:	str	r3, [sp, #16]
   16454:	ldr	r3, [r4, #40]	; 0x28
   16458:	str	r3, [sp, #12]
   1645c:	str	sl, [sp, #8]
   16460:	str	r9, [sp, #4]
   16464:	ldr	r3, [r4]
   16468:	str	r3, [sp]
   1646c:	ldr	r3, [sp, #28]
   16470:	ldr	r2, [sp, #24]
   16474:	mov	r1, r8
   16478:	bl	14bf8 <dcngettext@plt+0x3c08>
   1647c:	ldr	r3, [sp, #32]
   16480:	ldr	r2, [sp, #36]	; 0x24
   16484:	str	r2, [r3]
   16488:	mov	r0, r7
   1648c:	add	sp, sp, #52	; 0x34
   16490:	ldrd	r4, [sp]
   16494:	ldrd	r6, [sp, #8]
   16498:	ldrd	r8, [sp, #16]
   1649c:	ldrd	sl, [sp, #24]
   164a0:	add	sp, sp, #32
   164a4:	pop	{pc}		; (ldr pc, [sp], #4)
   164a8:	bl	10fd8 <abort@plt>
   164ac:	sub	r2, r5, r2
   164b0:	mov	r3, #8
   164b4:	str	r3, [sp]
   164b8:	mvn	r3, #-2147483648	; 0x80000000
   164bc:	add	r2, r2, #1
   164c0:	add	r1, sp, #44	; 0x2c
   164c4:	mov	r0, #0
   164c8:	bl	174d0 <dcngettext@plt+0x64e0>
   164cc:	mov	r6, r0
   164d0:	movw	r3, #41228	; 0xa10c
   164d4:	movt	r3, #2
   164d8:	str	r0, [r3]
   164dc:	ldrd	r2, [r3, #8]
   164e0:	strd	r2, [r0]
   164e4:	b	1639c <dcngettext@plt+0x53ac>
   164e8:	strd	r4, [sp, #-16]!
   164ec:	str	r6, [sp, #8]
   164f0:	str	lr, [sp, #12]
   164f4:	mov	r4, r0
   164f8:	bl	10ef4 <__errno_location@plt>
   164fc:	mov	r5, r0
   16500:	ldr	r6, [r0]
   16504:	cmp	r4, #0
   16508:	ldr	r3, [pc, #32]	; 16530 <dcngettext@plt+0x5540>
   1650c:	moveq	r4, r3
   16510:	mov	r1, #48	; 0x30
   16514:	mov	r0, r4
   16518:	bl	17640 <dcngettext@plt+0x6650>
   1651c:	str	r6, [r5]
   16520:	ldrd	r4, [sp]
   16524:	ldr	r6, [sp, #8]
   16528:	add	sp, sp, #12
   1652c:	pop	{pc}		; (ldr pc, [sp], #4)
   16530:	muleq	r2, r0, r2
   16534:	subs	r3, r0, #0
   16538:	ldr	r2, [pc, #8]	; 16548 <dcngettext@plt+0x5558>
   1653c:	moveq	r3, r2
   16540:	ldr	r0, [r3]
   16544:	bx	lr
   16548:	muleq	r2, r0, r2
   1654c:	subs	r3, r0, #0
   16550:	ldr	r2, [pc, #8]	; 16560 <dcngettext@plt+0x5570>
   16554:	moveq	r3, r2
   16558:	str	r1, [r3]
   1655c:	bx	lr
   16560:	muleq	r2, r0, r2
   16564:	push	{lr}		; (str lr, [sp, #-4]!)
   16568:	subs	r3, r0, #0
   1656c:	ldr	r0, [pc, #44]	; 165a0 <dcngettext@plt+0x55b0>
   16570:	moveq	r3, r0
   16574:	add	r3, r3, #8
   16578:	lsr	lr, r1, #5
   1657c:	and	r1, r1, #31
   16580:	ldr	ip, [r3, lr, lsl #2]
   16584:	lsr	r0, ip, r1
   16588:	eor	r2, r2, r0
   1658c:	and	r2, r2, #1
   16590:	eor	r1, ip, r2, lsl r1
   16594:	str	r1, [r3, lr, lsl #2]
   16598:	and	r0, r0, #1
   1659c:	pop	{pc}		; (ldr pc, [sp], #4)
   165a0:	muleq	r2, r0, r2
   165a4:	subs	r3, r0, #0
   165a8:	ldr	r2, [pc, #12]	; 165bc <dcngettext@plt+0x55cc>
   165ac:	moveq	r3, r2
   165b0:	ldr	r0, [r3, #4]
   165b4:	str	r1, [r3, #4]
   165b8:	bx	lr
   165bc:	muleq	r2, r0, r2
   165c0:	subs	r3, r0, #0
   165c4:	ldr	r0, [pc, #44]	; 165f8 <dcngettext@plt+0x5608>
   165c8:	moveq	r3, r0
   165cc:	mov	r0, #10
   165d0:	str	r0, [r3]
   165d4:	cmp	r2, #0
   165d8:	cmpne	r1, #0
   165dc:	beq	165ec <dcngettext@plt+0x55fc>
   165e0:	str	r1, [r3, #40]	; 0x28
   165e4:	str	r2, [r3, #44]	; 0x2c
   165e8:	bx	lr
   165ec:	str	r4, [sp, #-8]!
   165f0:	str	lr, [sp, #4]
   165f4:	bl	10fd8 <abort@plt>
   165f8:	muleq	r2, r0, r2
   165fc:	strd	r4, [sp, #-32]!	; 0xffffffe0
   16600:	strd	r6, [sp, #8]
   16604:	strd	r8, [sp, #16]
   16608:	str	sl, [sp, #24]
   1660c:	str	lr, [sp, #28]
   16610:	sub	sp, sp, #24
   16614:	mov	r7, r0
   16618:	mov	r8, r1
   1661c:	mov	r9, r2
   16620:	mov	sl, r3
   16624:	ldr	r4, [sp, #56]	; 0x38
   16628:	cmp	r4, #0
   1662c:	ldr	r3, [pc, #104]	; 1669c <dcngettext@plt+0x56ac>
   16630:	moveq	r4, r3
   16634:	bl	10ef4 <__errno_location@plt>
   16638:	mov	r5, r0
   1663c:	ldr	r6, [r0]
   16640:	ldr	r3, [r4, #44]	; 0x2c
   16644:	str	r3, [sp, #16]
   16648:	ldr	r3, [r4, #40]	; 0x28
   1664c:	str	r3, [sp, #12]
   16650:	add	r3, r4, #8
   16654:	str	r3, [sp, #8]
   16658:	ldr	r3, [r4, #4]
   1665c:	str	r3, [sp, #4]
   16660:	ldr	r3, [r4]
   16664:	str	r3, [sp]
   16668:	mov	r3, sl
   1666c:	mov	r2, r9
   16670:	mov	r1, r8
   16674:	mov	r0, r7
   16678:	bl	14bf8 <dcngettext@plt+0x3c08>
   1667c:	str	r6, [r5]
   16680:	add	sp, sp, #24
   16684:	ldrd	r4, [sp]
   16688:	ldrd	r6, [sp, #8]
   1668c:	ldrd	r8, [sp, #16]
   16690:	ldr	sl, [sp, #24]
   16694:	add	sp, sp, #28
   16698:	pop	{pc}		; (ldr pc, [sp], #4)
   1669c:	muleq	r2, r0, r2
   166a0:	strd	r4, [sp, #-36]!	; 0xffffffdc
   166a4:	strd	r6, [sp, #8]
   166a8:	strd	r8, [sp, #16]
   166ac:	strd	sl, [sp, #24]
   166b0:	str	lr, [sp, #32]
   166b4:	sub	sp, sp, #44	; 0x2c
   166b8:	mov	r8, r0
   166bc:	mov	sl, r1
   166c0:	mov	r6, r2
   166c4:	subs	r4, r3, #0
   166c8:	ldr	r3, [pc, #200]	; 16798 <dcngettext@plt+0x57a8>
   166cc:	moveq	r4, r3
   166d0:	bl	10ef4 <__errno_location@plt>
   166d4:	mov	r7, r0
   166d8:	ldr	fp, [r0]
   166dc:	ldr	r5, [r4, #4]
   166e0:	cmp	r6, #0
   166e4:	orreq	r5, r5, #1
   166e8:	add	r9, r4, #8
   166ec:	ldr	r3, [r4, #44]	; 0x2c
   166f0:	str	r3, [sp, #16]
   166f4:	ldr	r3, [r4, #40]	; 0x28
   166f8:	str	r3, [sp, #12]
   166fc:	str	r9, [sp, #8]
   16700:	str	r5, [sp, #4]
   16704:	ldr	r3, [r4]
   16708:	str	r3, [sp]
   1670c:	str	sl, [sp, #36]	; 0x24
   16710:	mov	r3, sl
   16714:	str	r8, [sp, #32]
   16718:	mov	r2, r8
   1671c:	mov	r1, #0
   16720:	mov	r0, r1
   16724:	bl	14bf8 <dcngettext@plt+0x3c08>
   16728:	mov	sl, r0
   1672c:	add	r8, r0, #1
   16730:	mov	r0, r8
   16734:	bl	172cc <dcngettext@plt+0x62dc>
   16738:	str	r0, [sp, #28]
   1673c:	ldr	r3, [r4, #44]	; 0x2c
   16740:	str	r3, [sp, #16]
   16744:	ldr	r3, [r4, #40]	; 0x28
   16748:	str	r3, [sp, #12]
   1674c:	str	r9, [sp, #8]
   16750:	str	r5, [sp, #4]
   16754:	ldr	r3, [r4]
   16758:	str	r3, [sp]
   1675c:	ldr	r3, [sp, #36]	; 0x24
   16760:	ldr	r2, [sp, #32]
   16764:	mov	r1, r8
   16768:	bl	14bf8 <dcngettext@plt+0x3c08>
   1676c:	str	fp, [r7]
   16770:	cmp	r6, #0
   16774:	strne	sl, [r6]
   16778:	ldr	r0, [sp, #28]
   1677c:	add	sp, sp, #44	; 0x2c
   16780:	ldrd	r4, [sp]
   16784:	ldrd	r6, [sp, #8]
   16788:	ldrd	r8, [sp, #16]
   1678c:	ldrd	sl, [sp, #24]
   16790:	add	sp, sp, #32
   16794:	pop	{pc}		; (ldr pc, [sp], #4)
   16798:	muleq	r2, r0, r2
   1679c:	str	r4, [sp, #-8]!
   167a0:	str	lr, [sp, #4]
   167a4:	mov	r3, r2
   167a8:	mov	r2, #0
   167ac:	bl	166a0 <dcngettext@plt+0x56b0>
   167b0:	ldr	r4, [sp]
   167b4:	add	sp, sp, #4
   167b8:	pop	{pc}		; (ldr pc, [sp], #4)
   167bc:	strd	r4, [sp, #-24]!	; 0xffffffe8
   167c0:	strd	r6, [sp, #8]
   167c4:	str	r8, [sp, #16]
   167c8:	str	lr, [sp, #20]
   167cc:	movw	r3, #41228	; 0xa10c
   167d0:	movt	r3, #2
   167d4:	ldr	r7, [r3]
   167d8:	ldr	r3, [r3, #4]
   167dc:	cmp	r3, #1
   167e0:	ble	1680c <dcngettext@plt+0x581c>
   167e4:	mov	r4, #1
   167e8:	add	r6, r7, #4
   167ec:	movw	r5, #41228	; 0xa10c
   167f0:	movt	r5, #2
   167f4:	ldr	r0, [r6, r4, lsl #3]
   167f8:	bl	14874 <dcngettext@plt+0x3884>
   167fc:	add	r4, r4, #1
   16800:	ldr	r3, [r5, #4]
   16804:	cmp	r3, r4
   16808:	bgt	167f4 <dcngettext@plt+0x5804>
   1680c:	ldr	r0, [r7, #4]
   16810:	movw	r3, #41360	; 0xa190
   16814:	movt	r3, #2
   16818:	cmp	r0, r3
   1681c:	beq	16840 <dcngettext@plt+0x5850>
   16820:	bl	14874 <dcngettext@plt+0x3884>
   16824:	movw	r3, #41228	; 0xa10c
   16828:	movt	r3, #2
   1682c:	mov	r2, #256	; 0x100
   16830:	str	r2, [r3, #8]
   16834:	movw	r2, #41360	; 0xa190
   16838:	movt	r2, #2
   1683c:	str	r2, [r3, #12]
   16840:	ldr	r3, [pc, #64]	; 16888 <dcngettext@plt+0x5898>
   16844:	cmp	r7, r3
   16848:	beq	16864 <dcngettext@plt+0x5874>
   1684c:	mov	r0, r7
   16850:	bl	14874 <dcngettext@plt+0x3884>
   16854:	movw	r3, #41228	; 0xa10c
   16858:	movt	r3, #2
   1685c:	add	r2, r3, #8
   16860:	str	r2, [r3]
   16864:	movw	r3, #41228	; 0xa10c
   16868:	movt	r3, #2
   1686c:	mov	r2, #1
   16870:	str	r2, [r3, #4]
   16874:	ldrd	r4, [sp]
   16878:	ldrd	r6, [sp, #8]
   1687c:	ldr	r8, [sp, #16]
   16880:	add	sp, sp, #20
   16884:	pop	{pc}		; (ldr pc, [sp], #4)
   16888:	andeq	sl, r2, r4, lsl r1
   1688c:	str	r4, [sp, #-8]!
   16890:	str	lr, [sp, #4]
   16894:	ldr	r3, [pc, #16]	; 168ac <dcngettext@plt+0x58bc>
   16898:	mvn	r2, #0
   1689c:	bl	162f0 <dcngettext@plt+0x5300>
   168a0:	ldr	r4, [sp]
   168a4:	add	sp, sp, #4
   168a8:	pop	{pc}		; (ldr pc, [sp], #4)
   168ac:	muleq	r2, r0, r2
   168b0:	str	r4, [sp, #-8]!
   168b4:	str	lr, [sp, #4]
   168b8:	ldr	r3, [pc, #12]	; 168cc <dcngettext@plt+0x58dc>
   168bc:	bl	162f0 <dcngettext@plt+0x5300>
   168c0:	ldr	r4, [sp]
   168c4:	add	sp, sp, #4
   168c8:	pop	{pc}		; (ldr pc, [sp], #4)
   168cc:	muleq	r2, r0, r2
   168d0:	str	r4, [sp, #-8]!
   168d4:	str	lr, [sp, #4]
   168d8:	mov	r1, r0
   168dc:	mov	r0, #0
   168e0:	bl	1688c <dcngettext@plt+0x589c>
   168e4:	ldr	r4, [sp]
   168e8:	add	sp, sp, #4
   168ec:	pop	{pc}		; (ldr pc, [sp], #4)
   168f0:	str	r4, [sp, #-8]!
   168f4:	str	lr, [sp, #4]
   168f8:	mov	r2, r1
   168fc:	mov	r1, r0
   16900:	mov	r0, #0
   16904:	bl	168b0 <dcngettext@plt+0x58c0>
   16908:	ldr	r4, [sp]
   1690c:	add	sp, sp, #4
   16910:	pop	{pc}		; (ldr pc, [sp], #4)
   16914:	strd	r4, [sp, #-12]!
   16918:	str	lr, [sp, #8]
   1691c:	sub	sp, sp, #52	; 0x34
   16920:	mov	r4, r0
   16924:	mov	r5, r2
   16928:	mov	r0, sp
   1692c:	bl	14a64 <dcngettext@plt+0x3a74>
   16930:	mov	r3, sp
   16934:	mvn	r2, #0
   16938:	mov	r1, r5
   1693c:	mov	r0, r4
   16940:	bl	162f0 <dcngettext@plt+0x5300>
   16944:	add	sp, sp, #52	; 0x34
   16948:	ldrd	r4, [sp]
   1694c:	add	sp, sp, #8
   16950:	pop	{pc}		; (ldr pc, [sp], #4)
   16954:	strd	r4, [sp, #-16]!
   16958:	str	r6, [sp, #8]
   1695c:	str	lr, [sp, #12]
   16960:	sub	sp, sp, #48	; 0x30
   16964:	mov	r4, r0
   16968:	mov	r5, r2
   1696c:	mov	r6, r3
   16970:	mov	r0, sp
   16974:	bl	14a64 <dcngettext@plt+0x3a74>
   16978:	mov	r3, sp
   1697c:	mov	r2, r6
   16980:	mov	r1, r5
   16984:	mov	r0, r4
   16988:	bl	162f0 <dcngettext@plt+0x5300>
   1698c:	add	sp, sp, #48	; 0x30
   16990:	ldrd	r4, [sp]
   16994:	ldr	r6, [sp, #8]
   16998:	add	sp, sp, #12
   1699c:	pop	{pc}		; (ldr pc, [sp], #4)
   169a0:	str	r4, [sp, #-8]!
   169a4:	str	lr, [sp, #4]
   169a8:	mov	r2, r1
   169ac:	mov	r1, r0
   169b0:	mov	r0, #0
   169b4:	bl	16914 <dcngettext@plt+0x5924>
   169b8:	ldr	r4, [sp]
   169bc:	add	sp, sp, #4
   169c0:	pop	{pc}		; (ldr pc, [sp], #4)
   169c4:	str	r4, [sp, #-8]!
   169c8:	str	lr, [sp, #4]
   169cc:	mov	r3, r2
   169d0:	mov	r2, r1
   169d4:	mov	r1, r0
   169d8:	mov	r0, #0
   169dc:	bl	16954 <dcngettext@plt+0x5964>
   169e0:	ldr	r4, [sp]
   169e4:	add	sp, sp, #4
   169e8:	pop	{pc}		; (ldr pc, [sp], #4)
   169ec:	strd	r4, [sp, #-12]!
   169f0:	str	lr, [sp, #8]
   169f4:	sub	sp, sp, #52	; 0x34
   169f8:	mov	r4, r0
   169fc:	mov	r5, r1
   16a00:	mov	r1, r2
   16a04:	ldr	r0, [pc, #92]	; 16a68 <dcngettext@plt+0x5a78>
   16a08:	ldrd	r2, [r0]
   16a0c:	strd	r2, [sp]
   16a10:	ldrd	r2, [r0, #8]
   16a14:	strd	r2, [sp, #8]
   16a18:	ldrd	r2, [r0, #16]
   16a1c:	strd	r2, [sp, #16]
   16a20:	ldrd	r2, [r0, #24]
   16a24:	strd	r2, [sp, #24]
   16a28:	ldrd	r2, [r0, #32]
   16a2c:	strd	r2, [sp, #32]
   16a30:	ldrd	r2, [r0, #40]	; 0x28
   16a34:	strd	r2, [sp, #40]	; 0x28
   16a38:	mov	r2, #1
   16a3c:	mov	r0, sp
   16a40:	bl	16564 <dcngettext@plt+0x5574>
   16a44:	mov	r3, sp
   16a48:	mov	r2, r5
   16a4c:	mov	r1, r4
   16a50:	mov	r0, #0
   16a54:	bl	162f0 <dcngettext@plt+0x5300>
   16a58:	add	sp, sp, #52	; 0x34
   16a5c:	ldrd	r4, [sp]
   16a60:	add	sp, sp, #8
   16a64:	pop	{pc}		; (ldr pc, [sp], #4)
   16a68:	muleq	r2, r0, r2
   16a6c:	str	r4, [sp, #-8]!
   16a70:	str	lr, [sp, #4]
   16a74:	mov	r2, r1
   16a78:	mvn	r1, #0
   16a7c:	bl	169ec <dcngettext@plt+0x59fc>
   16a80:	ldr	r4, [sp]
   16a84:	add	sp, sp, #4
   16a88:	pop	{pc}		; (ldr pc, [sp], #4)
   16a8c:	str	r4, [sp, #-8]!
   16a90:	str	lr, [sp, #4]
   16a94:	mov	r1, #58	; 0x3a
   16a98:	bl	16a6c <dcngettext@plt+0x5a7c>
   16a9c:	ldr	r4, [sp]
   16aa0:	add	sp, sp, #4
   16aa4:	pop	{pc}		; (ldr pc, [sp], #4)
   16aa8:	str	r4, [sp, #-8]!
   16aac:	str	lr, [sp, #4]
   16ab0:	mov	r2, #58	; 0x3a
   16ab4:	bl	169ec <dcngettext@plt+0x59fc>
   16ab8:	ldr	r4, [sp]
   16abc:	add	sp, sp, #4
   16ac0:	pop	{pc}		; (ldr pc, [sp], #4)
   16ac4:	strd	r4, [sp, #-12]!
   16ac8:	str	lr, [sp, #8]
   16acc:	sub	sp, sp, #100	; 0x64
   16ad0:	mov	r4, r0
   16ad4:	mov	r5, r2
   16ad8:	mov	r0, sp
   16adc:	bl	14a64 <dcngettext@plt+0x3a74>
   16ae0:	ldrd	r2, [sp]
   16ae4:	strd	r2, [sp, #48]	; 0x30
   16ae8:	ldrd	r2, [sp, #8]
   16aec:	strd	r2, [sp, #56]	; 0x38
   16af0:	ldrd	r2, [sp, #16]
   16af4:	strd	r2, [sp, #64]	; 0x40
   16af8:	ldrd	r2, [sp, #24]
   16afc:	strd	r2, [sp, #72]	; 0x48
   16b00:	ldrd	r2, [sp, #32]
   16b04:	strd	r2, [sp, #80]	; 0x50
   16b08:	ldrd	r2, [sp, #40]	; 0x28
   16b0c:	strd	r2, [sp, #88]	; 0x58
   16b10:	mov	r2, #1
   16b14:	mov	r1, #58	; 0x3a
   16b18:	add	r0, sp, #48	; 0x30
   16b1c:	bl	16564 <dcngettext@plt+0x5574>
   16b20:	add	r3, sp, #48	; 0x30
   16b24:	mvn	r2, #0
   16b28:	mov	r1, r5
   16b2c:	mov	r0, r4
   16b30:	bl	162f0 <dcngettext@plt+0x5300>
   16b34:	add	sp, sp, #100	; 0x64
   16b38:	ldrd	r4, [sp]
   16b3c:	add	sp, sp, #8
   16b40:	pop	{pc}		; (ldr pc, [sp], #4)
   16b44:	strd	r4, [sp, #-20]!	; 0xffffffec
   16b48:	strd	r6, [sp, #8]
   16b4c:	str	lr, [sp, #16]
   16b50:	sub	sp, sp, #52	; 0x34
   16b54:	mov	r4, r0
   16b58:	mov	r5, r3
   16b5c:	ldr	r3, [pc, #92]	; 16bc0 <dcngettext@plt+0x5bd0>
   16b60:	ldrd	r6, [r3]
   16b64:	strd	r6, [sp]
   16b68:	ldrd	r6, [r3, #8]
   16b6c:	strd	r6, [sp, #8]
   16b70:	ldrd	r6, [r3, #16]
   16b74:	strd	r6, [sp, #16]
   16b78:	ldrd	r6, [r3, #24]
   16b7c:	strd	r6, [sp, #24]
   16b80:	ldrd	r6, [r3, #32]
   16b84:	strd	r6, [sp, #32]
   16b88:	ldrd	r6, [r3, #40]	; 0x28
   16b8c:	strd	r6, [sp, #40]	; 0x28
   16b90:	mov	r0, sp
   16b94:	bl	165c0 <dcngettext@plt+0x55d0>
   16b98:	mov	r3, sp
   16b9c:	ldr	r2, [sp, #72]	; 0x48
   16ba0:	mov	r1, r5
   16ba4:	mov	r0, r4
   16ba8:	bl	162f0 <dcngettext@plt+0x5300>
   16bac:	add	sp, sp, #52	; 0x34
   16bb0:	ldrd	r4, [sp]
   16bb4:	ldrd	r6, [sp, #8]
   16bb8:	add	sp, sp, #16
   16bbc:	pop	{pc}		; (ldr pc, [sp], #4)
   16bc0:	muleq	r2, r0, r2
   16bc4:	push	{lr}		; (str lr, [sp, #-4]!)
   16bc8:	sub	sp, sp, #12
   16bcc:	mvn	ip, #0
   16bd0:	str	ip, [sp]
   16bd4:	bl	16b44 <dcngettext@plt+0x5b54>
   16bd8:	add	sp, sp, #12
   16bdc:	pop	{pc}		; (ldr pc, [sp], #4)
   16be0:	str	r4, [sp, #-8]!
   16be4:	str	lr, [sp, #4]
   16be8:	mov	r3, r2
   16bec:	mov	r2, r1
   16bf0:	mov	r1, r0
   16bf4:	mov	r0, #0
   16bf8:	bl	16bc4 <dcngettext@plt+0x5bd4>
   16bfc:	ldr	r4, [sp]
   16c00:	add	sp, sp, #4
   16c04:	pop	{pc}		; (ldr pc, [sp], #4)
   16c08:	push	{lr}		; (str lr, [sp, #-4]!)
   16c0c:	sub	sp, sp, #12
   16c10:	str	r3, [sp]
   16c14:	mov	r3, r2
   16c18:	mov	r2, r1
   16c1c:	mov	r1, r0
   16c20:	mov	r0, #0
   16c24:	bl	16b44 <dcngettext@plt+0x5b54>
   16c28:	add	sp, sp, #12
   16c2c:	pop	{pc}		; (ldr pc, [sp], #4)
   16c30:	str	r4, [sp, #-8]!
   16c34:	str	lr, [sp, #4]
   16c38:	ldr	r3, [pc, #12]	; 16c4c <dcngettext@plt+0x5c5c>
   16c3c:	bl	162f0 <dcngettext@plt+0x5300>
   16c40:	ldr	r4, [sp]
   16c44:	add	sp, sp, #4
   16c48:	pop	{pc}		; (ldr pc, [sp], #4)
   16c4c:	andeq	sl, r2, ip, lsl r1
   16c50:	str	r4, [sp, #-8]!
   16c54:	str	lr, [sp, #4]
   16c58:	mov	r2, r1
   16c5c:	mov	r1, r0
   16c60:	mov	r0, #0
   16c64:	bl	16c30 <dcngettext@plt+0x5c40>
   16c68:	ldr	r4, [sp]
   16c6c:	add	sp, sp, #4
   16c70:	pop	{pc}		; (ldr pc, [sp], #4)
   16c74:	str	r4, [sp, #-8]!
   16c78:	str	lr, [sp, #4]
   16c7c:	mvn	r2, #0
   16c80:	bl	16c30 <dcngettext@plt+0x5c40>
   16c84:	ldr	r4, [sp]
   16c88:	add	sp, sp, #4
   16c8c:	pop	{pc}		; (ldr pc, [sp], #4)
   16c90:	str	r4, [sp, #-8]!
   16c94:	str	lr, [sp, #4]
   16c98:	mov	r1, r0
   16c9c:	mov	r0, #0
   16ca0:	bl	16c74 <dcngettext@plt+0x5c84>
   16ca4:	ldr	r4, [sp]
   16ca8:	add	sp, sp, #4
   16cac:	pop	{pc}		; (ldr pc, [sp], #4)
   16cb0:	str	r4, [sp, #-8]!
   16cb4:	str	lr, [sp, #4]
   16cb8:	mov	r2, #3
   16cbc:	mov	r1, #0
   16cc0:	bl	178f4 <dcngettext@plt+0x6904>
   16cc4:	ldr	r4, [sp]
   16cc8:	add	sp, sp, #4
   16ccc:	pop	{pc}		; (ldr pc, [sp], #4)
   16cd0:	strd	r4, [sp, #-16]!
   16cd4:	str	r6, [sp, #8]
   16cd8:	str	lr, [sp, #12]
   16cdc:	sub	sp, sp, #32
   16ce0:	mov	r4, r0
   16ce4:	ldr	r5, [sp, #48]	; 0x30
   16ce8:	ldr	r6, [sp, #52]	; 0x34
   16cec:	cmp	r1, #0
   16cf0:	beq	16dbc <dcngettext@plt+0x5dcc>
   16cf4:	str	r3, [sp, #4]
   16cf8:	str	r2, [sp]
   16cfc:	mov	r3, r1
   16d00:	movw	r2, #36392	; 0x8e28
   16d04:	movt	r2, #1
   16d08:	mov	r1, #1
   16d0c:	bl	10f3c <__fprintf_chk@plt>
   16d10:	mov	r2, #5
   16d14:	movw	r1, #36412	; 0x8e3c
   16d18:	movt	r1, #1
   16d1c:	mov	r0, #0
   16d20:	bl	10e04 <dcgettext@plt>
   16d24:	movw	r3, #2022	; 0x7e6
   16d28:	str	r3, [sp]
   16d2c:	mov	r3, r0
   16d30:	movw	r2, #37140	; 0x9114
   16d34:	movt	r2, #1
   16d38:	mov	r1, #1
   16d3c:	mov	r0, r4
   16d40:	bl	10f3c <__fprintf_chk@plt>
   16d44:	mov	r1, r4
   16d48:	mov	r0, #10
   16d4c:	bl	10df8 <fputc_unlocked@plt>
   16d50:	mov	r2, #5
   16d54:	movw	r1, #36416	; 0x8e40
   16d58:	movt	r1, #1
   16d5c:	mov	r0, #0
   16d60:	bl	10e04 <dcgettext@plt>
   16d64:	movw	r3, #36588	; 0x8eec
   16d68:	movt	r3, #1
   16d6c:	mov	r2, r0
   16d70:	mov	r1, #1
   16d74:	mov	r0, r4
   16d78:	bl	10f3c <__fprintf_chk@plt>
   16d7c:	mov	r1, r4
   16d80:	mov	r0, #10
   16d84:	bl	10df8 <fputc_unlocked@plt>
   16d88:	cmp	r6, #9
   16d8c:	ldrls	pc, [pc, r6, lsl #2]
   16d90:	b	17094 <dcngettext@plt+0x60a4>
   16d94:	andeq	r6, r1, r0, lsl #28
   16d98:	ldrdeq	r6, [r1], -r8
   16d9c:	andeq	r6, r1, r4, lsl lr
   16da0:	andeq	r6, r1, r8, asr #28
   16da4:	andeq	r6, r1, r4, lsl #29
   16da8:	andeq	r6, r1, r8, asr #29
   16dac:	andeq	r6, r1, r4, lsl pc
   16db0:	andeq	r6, r1, r8, ror #30
   16db4:	andeq	r6, r1, r4, asr #31
   16db8:	andeq	r7, r1, r8, lsr #32
   16dbc:	str	r3, [sp]
   16dc0:	mov	r3, r2
   16dc4:	movw	r2, #36404	; 0x8e34
   16dc8:	movt	r2, #1
   16dcc:	mov	r1, #1
   16dd0:	bl	10f3c <__fprintf_chk@plt>
   16dd4:	b	16d10 <dcngettext@plt+0x5d20>
   16dd8:	mov	r2, #5
   16ddc:	movw	r1, #36624	; 0x8f10
   16de0:	movt	r1, #1
   16de4:	mov	r0, #0
   16de8:	bl	10e04 <dcgettext@plt>
   16dec:	ldr	r3, [r5]
   16df0:	mov	r2, r0
   16df4:	mov	r1, #1
   16df8:	mov	r0, r4
   16dfc:	bl	10f3c <__fprintf_chk@plt>
   16e00:	add	sp, sp, #32
   16e04:	ldrd	r4, [sp]
   16e08:	ldr	r6, [sp, #8]
   16e0c:	add	sp, sp, #12
   16e10:	pop	{pc}		; (ldr pc, [sp], #4)
   16e14:	mov	r2, #5
   16e18:	movw	r1, #36640	; 0x8f20
   16e1c:	movt	r1, #1
   16e20:	mov	r0, #0
   16e24:	bl	10e04 <dcgettext@plt>
   16e28:	ldr	r3, [r5, #4]
   16e2c:	str	r3, [sp]
   16e30:	ldr	r3, [r5]
   16e34:	mov	r2, r0
   16e38:	mov	r1, #1
   16e3c:	mov	r0, r4
   16e40:	bl	10f3c <__fprintf_chk@plt>
   16e44:	b	16e00 <dcngettext@plt+0x5e10>
   16e48:	mov	r2, #5
   16e4c:	movw	r1, #36664	; 0x8f38
   16e50:	movt	r1, #1
   16e54:	mov	r0, #0
   16e58:	bl	10e04 <dcgettext@plt>
   16e5c:	ldr	r3, [r5, #8]
   16e60:	str	r3, [sp, #4]
   16e64:	ldr	r3, [r5, #4]
   16e68:	str	r3, [sp]
   16e6c:	ldr	r3, [r5]
   16e70:	mov	r2, r0
   16e74:	mov	r1, #1
   16e78:	mov	r0, r4
   16e7c:	bl	10f3c <__fprintf_chk@plt>
   16e80:	b	16e00 <dcngettext@plt+0x5e10>
   16e84:	mov	r2, #5
   16e88:	movw	r1, #36692	; 0x8f54
   16e8c:	movt	r1, #1
   16e90:	mov	r0, #0
   16e94:	bl	10e04 <dcgettext@plt>
   16e98:	ldr	r3, [r5, #12]
   16e9c:	str	r3, [sp, #8]
   16ea0:	ldr	r3, [r5, #8]
   16ea4:	str	r3, [sp, #4]
   16ea8:	ldr	r3, [r5, #4]
   16eac:	str	r3, [sp]
   16eb0:	ldr	r3, [r5]
   16eb4:	mov	r2, r0
   16eb8:	mov	r1, #1
   16ebc:	mov	r0, r4
   16ec0:	bl	10f3c <__fprintf_chk@plt>
   16ec4:	b	16e00 <dcngettext@plt+0x5e10>
   16ec8:	mov	r2, #5
   16ecc:	movw	r1, #36724	; 0x8f74
   16ed0:	movt	r1, #1
   16ed4:	mov	r0, #0
   16ed8:	bl	10e04 <dcgettext@plt>
   16edc:	ldr	r3, [r5, #16]
   16ee0:	str	r3, [sp, #12]
   16ee4:	ldr	r3, [r5, #12]
   16ee8:	str	r3, [sp, #8]
   16eec:	ldr	r3, [r5, #8]
   16ef0:	str	r3, [sp, #4]
   16ef4:	ldr	r3, [r5, #4]
   16ef8:	str	r3, [sp]
   16efc:	ldr	r3, [r5]
   16f00:	mov	r2, r0
   16f04:	mov	r1, #1
   16f08:	mov	r0, r4
   16f0c:	bl	10f3c <__fprintf_chk@plt>
   16f10:	b	16e00 <dcngettext@plt+0x5e10>
   16f14:	mov	r2, #5
   16f18:	movw	r1, #36760	; 0x8f98
   16f1c:	movt	r1, #1
   16f20:	mov	r0, #0
   16f24:	bl	10e04 <dcgettext@plt>
   16f28:	ldr	r3, [r5, #20]
   16f2c:	str	r3, [sp, #16]
   16f30:	ldr	r3, [r5, #16]
   16f34:	str	r3, [sp, #12]
   16f38:	ldr	r3, [r5, #12]
   16f3c:	str	r3, [sp, #8]
   16f40:	ldr	r3, [r5, #8]
   16f44:	str	r3, [sp, #4]
   16f48:	ldr	r3, [r5, #4]
   16f4c:	str	r3, [sp]
   16f50:	ldr	r3, [r5]
   16f54:	mov	r2, r0
   16f58:	mov	r1, #1
   16f5c:	mov	r0, r4
   16f60:	bl	10f3c <__fprintf_chk@plt>
   16f64:	b	16e00 <dcngettext@plt+0x5e10>
   16f68:	mov	r2, #5
   16f6c:	movw	r1, #36800	; 0x8fc0
   16f70:	movt	r1, #1
   16f74:	mov	r0, #0
   16f78:	bl	10e04 <dcgettext@plt>
   16f7c:	ldr	r3, [r5, #24]
   16f80:	str	r3, [sp, #20]
   16f84:	ldr	r3, [r5, #20]
   16f88:	str	r3, [sp, #16]
   16f8c:	ldr	r3, [r5, #16]
   16f90:	str	r3, [sp, #12]
   16f94:	ldr	r3, [r5, #12]
   16f98:	str	r3, [sp, #8]
   16f9c:	ldr	r3, [r5, #8]
   16fa0:	str	r3, [sp, #4]
   16fa4:	ldr	r3, [r5, #4]
   16fa8:	str	r3, [sp]
   16fac:	ldr	r3, [r5]
   16fb0:	mov	r2, r0
   16fb4:	mov	r1, #1
   16fb8:	mov	r0, r4
   16fbc:	bl	10f3c <__fprintf_chk@plt>
   16fc0:	b	16e00 <dcngettext@plt+0x5e10>
   16fc4:	mov	r2, #5
   16fc8:	movw	r1, #36844	; 0x8fec
   16fcc:	movt	r1, #1
   16fd0:	mov	r0, #0
   16fd4:	bl	10e04 <dcgettext@plt>
   16fd8:	ldr	r3, [r5, #28]
   16fdc:	str	r3, [sp, #24]
   16fe0:	ldr	r3, [r5, #24]
   16fe4:	str	r3, [sp, #20]
   16fe8:	ldr	r3, [r5, #20]
   16fec:	str	r3, [sp, #16]
   16ff0:	ldr	r3, [r5, #16]
   16ff4:	str	r3, [sp, #12]
   16ff8:	ldr	r3, [r5, #12]
   16ffc:	str	r3, [sp, #8]
   17000:	ldr	r3, [r5, #8]
   17004:	str	r3, [sp, #4]
   17008:	ldr	r3, [r5, #4]
   1700c:	str	r3, [sp]
   17010:	ldr	r3, [r5]
   17014:	mov	r2, r0
   17018:	mov	r1, #1
   1701c:	mov	r0, r4
   17020:	bl	10f3c <__fprintf_chk@plt>
   17024:	b	16e00 <dcngettext@plt+0x5e10>
   17028:	mov	r2, #5
   1702c:	movw	r1, #36892	; 0x901c
   17030:	movt	r1, #1
   17034:	mov	r0, #0
   17038:	bl	10e04 <dcgettext@plt>
   1703c:	ldr	r3, [r5, #32]
   17040:	str	r3, [sp, #28]
   17044:	ldr	r3, [r5, #28]
   17048:	str	r3, [sp, #24]
   1704c:	ldr	r3, [r5, #24]
   17050:	str	r3, [sp, #20]
   17054:	ldr	r3, [r5, #20]
   17058:	str	r3, [sp, #16]
   1705c:	ldr	r3, [r5, #16]
   17060:	str	r3, [sp, #12]
   17064:	ldr	r3, [r5, #12]
   17068:	str	r3, [sp, #8]
   1706c:	ldr	r3, [r5, #8]
   17070:	str	r3, [sp, #4]
   17074:	ldr	r3, [r5, #4]
   17078:	str	r3, [sp]
   1707c:	ldr	r3, [r5]
   17080:	mov	r2, r0
   17084:	mov	r1, #1
   17088:	mov	r0, r4
   1708c:	bl	10f3c <__fprintf_chk@plt>
   17090:	b	16e00 <dcngettext@plt+0x5e10>
   17094:	mov	r2, #5
   17098:	movw	r1, #36944	; 0x9050
   1709c:	movt	r1, #1
   170a0:	mov	r0, #0
   170a4:	bl	10e04 <dcgettext@plt>
   170a8:	ldr	r3, [r5, #32]
   170ac:	str	r3, [sp, #28]
   170b0:	ldr	r3, [r5, #28]
   170b4:	str	r3, [sp, #24]
   170b8:	ldr	r3, [r5, #24]
   170bc:	str	r3, [sp, #20]
   170c0:	ldr	r3, [r5, #20]
   170c4:	str	r3, [sp, #16]
   170c8:	ldr	r3, [r5, #16]
   170cc:	str	r3, [sp, #12]
   170d0:	ldr	r3, [r5, #12]
   170d4:	str	r3, [sp, #8]
   170d8:	ldr	r3, [r5, #8]
   170dc:	str	r3, [sp, #4]
   170e0:	ldr	r3, [r5, #4]
   170e4:	str	r3, [sp]
   170e8:	ldr	r3, [r5]
   170ec:	mov	r2, r0
   170f0:	mov	r1, #1
   170f4:	mov	r0, r4
   170f8:	bl	10f3c <__fprintf_chk@plt>
   170fc:	b	16e00 <dcngettext@plt+0x5e10>
   17100:	strd	r4, [sp, #-12]!
   17104:	str	lr, [sp, #8]
   17108:	sub	sp, sp, #12
   1710c:	ldr	r5, [sp, #24]
   17110:	ldr	ip, [r5]
   17114:	cmp	ip, #0
   17118:	beq	17150 <dcngettext@plt+0x6160>
   1711c:	mov	lr, r5
   17120:	mov	ip, #0
   17124:	add	ip, ip, #1
   17128:	ldr	r4, [lr, #4]!
   1712c:	cmp	r4, #0
   17130:	bne	17124 <dcngettext@plt+0x6134>
   17134:	str	ip, [sp, #4]
   17138:	str	r5, [sp]
   1713c:	bl	16cd0 <dcngettext@plt+0x5ce0>
   17140:	add	sp, sp, #12
   17144:	ldrd	r4, [sp]
   17148:	add	sp, sp, #8
   1714c:	pop	{pc}		; (ldr pc, [sp], #4)
   17150:	mov	ip, #0
   17154:	b	17134 <dcngettext@plt+0x6144>
   17158:	strd	r4, [sp, #-12]!
   1715c:	str	lr, [sp, #8]
   17160:	sub	sp, sp, #52	; 0x34
   17164:	ldr	r5, [sp, #64]	; 0x40
   17168:	add	r4, sp, #8
   1716c:	mov	ip, #0
   17170:	ldr	lr, [r5], #4
   17174:	str	lr, [r4], #4
   17178:	cmp	lr, #0
   1717c:	beq	1718c <dcngettext@plt+0x619c>
   17180:	add	ip, ip, #1
   17184:	cmp	ip, #10
   17188:	bne	17170 <dcngettext@plt+0x6180>
   1718c:	str	ip, [sp, #4]
   17190:	add	ip, sp, #8
   17194:	str	ip, [sp]
   17198:	bl	16cd0 <dcngettext@plt+0x5ce0>
   1719c:	add	sp, sp, #52	; 0x34
   171a0:	ldrd	r4, [sp]
   171a4:	add	sp, sp, #8
   171a8:	pop	{pc}		; (ldr pc, [sp], #4)
   171ac:	push	{r3}		; (str r3, [sp, #-4]!)
   171b0:	push	{lr}		; (str lr, [sp, #-4]!)
   171b4:	sub	sp, sp, #16
   171b8:	add	r3, sp, #24
   171bc:	str	r3, [sp, #12]
   171c0:	str	r3, [sp]
   171c4:	ldr	r3, [sp, #20]
   171c8:	bl	17158 <dcngettext@plt+0x6168>
   171cc:	add	sp, sp, #16
   171d0:	pop	{lr}		; (ldr lr, [sp], #4)
   171d4:	add	sp, sp, #4
   171d8:	bx	lr
   171dc:	str	r4, [sp, #-8]!
   171e0:	str	lr, [sp, #4]
   171e4:	movw	r3, #41324	; 0xa16c
   171e8:	movt	r3, #2
   171ec:	ldr	r1, [r3]
   171f0:	mov	r0, #10
   171f4:	bl	10df8 <fputc_unlocked@plt>
   171f8:	mov	r2, #5
   171fc:	movw	r1, #37004	; 0x908c
   17200:	movt	r1, #1
   17204:	mov	r0, #0
   17208:	bl	10e04 <dcgettext@plt>
   1720c:	movw	r2, #37024	; 0x90a0
   17210:	movt	r2, #1
   17214:	mov	r1, r0
   17218:	mov	r0, #1
   1721c:	bl	10f24 <__printf_chk@plt>
   17220:	mov	r2, #5
   17224:	movw	r1, #37048	; 0x90b8
   17228:	movt	r1, #1
   1722c:	mov	r0, #0
   17230:	bl	10e04 <dcgettext@plt>
   17234:	movw	r3, #34424	; 0x8678
   17238:	movt	r3, #1
   1723c:	movw	r2, #34464	; 0x86a0
   17240:	movt	r2, #1
   17244:	mov	r1, r0
   17248:	mov	r0, #1
   1724c:	bl	10f24 <__printf_chk@plt>
   17250:	mov	r2, #5
   17254:	movw	r1, #37068	; 0x90cc
   17258:	movt	r1, #1
   1725c:	mov	r0, #0
   17260:	bl	10e04 <dcgettext@plt>
   17264:	movw	r2, #37108	; 0x90f4
   17268:	movt	r2, #1
   1726c:	mov	r1, r0
   17270:	mov	r0, #1
   17274:	bl	10f24 <__printf_chk@plt>
   17278:	ldr	r4, [sp]
   1727c:	add	sp, sp, #4
   17280:	pop	{pc}		; (ldr pc, [sp], #4)
   17284:	str	r4, [sp, #-8]!
   17288:	str	lr, [sp, #4]
   1728c:	bl	177d0 <dcngettext@plt+0x67e0>
   17290:	cmp	r0, #0
   17294:	beq	172a4 <dcngettext@plt+0x62b4>
   17298:	ldr	r4, [sp]
   1729c:	add	sp, sp, #4
   172a0:	pop	{pc}		; (ldr pc, [sp], #4)
   172a4:	bl	17718 <dcngettext@plt+0x6728>
   172a8:	str	r4, [sp, #-8]!
   172ac:	str	lr, [sp, #4]
   172b0:	bl	177d0 <dcngettext@plt+0x67e0>
   172b4:	cmp	r0, #0
   172b8:	beq	172c8 <dcngettext@plt+0x62d8>
   172bc:	ldr	r4, [sp]
   172c0:	add	sp, sp, #4
   172c4:	pop	{pc}		; (ldr pc, [sp], #4)
   172c8:	bl	17718 <dcngettext@plt+0x6728>
   172cc:	str	r4, [sp, #-8]!
   172d0:	str	lr, [sp, #4]
   172d4:	bl	17284 <dcngettext@plt+0x6294>
   172d8:	ldr	r4, [sp]
   172dc:	add	sp, sp, #4
   172e0:	pop	{pc}		; (ldr pc, [sp], #4)
   172e4:	strd	r4, [sp, #-16]!
   172e8:	str	r6, [sp, #8]
   172ec:	str	lr, [sp, #12]
   172f0:	mov	r5, r0
   172f4:	mov	r4, r1
   172f8:	bl	1780c <dcngettext@plt+0x681c>
   172fc:	cmp	r0, #0
   17300:	beq	17314 <dcngettext@plt+0x6324>
   17304:	ldrd	r4, [sp]
   17308:	ldr	r6, [sp, #8]
   1730c:	add	sp, sp, #12
   17310:	pop	{pc}		; (ldr pc, [sp], #4)
   17314:	adds	r4, r4, #0
   17318:	movne	r4, #1
   1731c:	cmp	r5, #0
   17320:	moveq	r4, #1
   17324:	cmp	r4, #0
   17328:	beq	17304 <dcngettext@plt+0x6314>
   1732c:	bl	17718 <dcngettext@plt+0x6728>
   17330:	str	r4, [sp, #-8]!
   17334:	str	lr, [sp, #4]
   17338:	cmp	r1, #0
   1733c:	orreq	r1, r1, #1
   17340:	bl	1780c <dcngettext@plt+0x681c>
   17344:	cmp	r0, #0
   17348:	beq	17358 <dcngettext@plt+0x6368>
   1734c:	ldr	r4, [sp]
   17350:	add	sp, sp, #4
   17354:	pop	{pc}		; (ldr pc, [sp], #4)
   17358:	bl	17718 <dcngettext@plt+0x6728>
   1735c:	strd	r4, [sp, #-16]!
   17360:	str	r6, [sp, #8]
   17364:	str	lr, [sp, #12]
   17368:	mov	r4, r0
   1736c:	mov	r6, r1
   17370:	mov	r5, r2
   17374:	bl	17c14 <dcngettext@plt+0x6c24>
   17378:	cmp	r0, #0
   1737c:	beq	17390 <dcngettext@plt+0x63a0>
   17380:	ldrd	r4, [sp]
   17384:	ldr	r6, [sp, #8]
   17388:	add	sp, sp, #12
   1738c:	pop	{pc}		; (ldr pc, [sp], #4)
   17390:	cmp	r4, #0
   17394:	beq	173a4 <dcngettext@plt+0x63b4>
   17398:	cmp	r6, #0
   1739c:	cmpne	r5, #0
   173a0:	beq	17380 <dcngettext@plt+0x6390>
   173a4:	bl	17718 <dcngettext@plt+0x6728>
   173a8:	str	r4, [sp, #-8]!
   173ac:	str	lr, [sp, #4]
   173b0:	bl	1735c <dcngettext@plt+0x636c>
   173b4:	ldr	r4, [sp]
   173b8:	add	sp, sp, #4
   173bc:	pop	{pc}		; (ldr pc, [sp], #4)
   173c0:	str	r4, [sp, #-8]!
   173c4:	str	lr, [sp, #4]
   173c8:	mov	ip, r1
   173cc:	mov	r3, r2
   173d0:	cmp	r2, #0
   173d4:	cmpne	r1, #0
   173d8:	moveq	r3, #1
   173dc:	moveq	ip, r3
   173e0:	mov	r2, r3
   173e4:	mov	r1, ip
   173e8:	bl	17c14 <dcngettext@plt+0x6c24>
   173ec:	cmp	r0, #0
   173f0:	beq	17400 <dcngettext@plt+0x6410>
   173f4:	ldr	r4, [sp]
   173f8:	add	sp, sp, #4
   173fc:	pop	{pc}		; (ldr pc, [sp], #4)
   17400:	bl	17718 <dcngettext@plt+0x6728>
   17404:	str	r4, [sp, #-8]!
   17408:	str	lr, [sp, #4]
   1740c:	mov	r2, r1
   17410:	mov	r1, r0
   17414:	mov	r0, #0
   17418:	bl	1735c <dcngettext@plt+0x636c>
   1741c:	ldr	r4, [sp]
   17420:	add	sp, sp, #4
   17424:	pop	{pc}		; (ldr pc, [sp], #4)
   17428:	str	r4, [sp, #-8]!
   1742c:	str	lr, [sp, #4]
   17430:	mov	r2, r1
   17434:	mov	r1, r0
   17438:	mov	r0, #0
   1743c:	bl	173c0 <dcngettext@plt+0x63d0>
   17440:	ldr	r4, [sp]
   17444:	add	sp, sp, #4
   17448:	pop	{pc}		; (ldr pc, [sp], #4)
   1744c:	strd	r4, [sp, #-16]!
   17450:	str	r6, [sp, #8]
   17454:	str	lr, [sp, #12]
   17458:	mov	r5, r1
   1745c:	ldr	r4, [r1]
   17460:	cmp	r0, #0
   17464:	beq	17494 <dcngettext@plt+0x64a4>
   17468:	lsr	r3, r4, #1
   1746c:	add	r3, r3, #1
   17470:	adds	r4, r4, r3
   17474:	bcs	174b0 <dcngettext@plt+0x64c0>
   17478:	mov	r1, r4
   1747c:	bl	1735c <dcngettext@plt+0x636c>
   17480:	str	r4, [r5]
   17484:	ldrd	r4, [sp]
   17488:	ldr	r6, [sp, #8]
   1748c:	add	sp, sp, #12
   17490:	pop	{pc}		; (ldr pc, [sp], #4)
   17494:	cmp	r4, #0
   17498:	bne	17478 <dcngettext@plt+0x6488>
   1749c:	mov	r4, #64	; 0x40
   174a0:	udiv	r4, r4, r2
   174a4:	cmp	r2, #64	; 0x40
   174a8:	addhi	r4, r4, #1
   174ac:	b	17478 <dcngettext@plt+0x6488>
   174b0:	bl	17718 <dcngettext@plt+0x6728>
   174b4:	str	r4, [sp, #-8]!
   174b8:	str	lr, [sp, #4]
   174bc:	mov	r2, #1
   174c0:	bl	1744c <dcngettext@plt+0x645c>
   174c4:	ldr	r4, [sp]
   174c8:	add	sp, sp, #4
   174cc:	pop	{pc}		; (ldr pc, [sp], #4)
   174d0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   174d4:	strd	r6, [sp, #8]
   174d8:	str	r8, [sp, #16]
   174dc:	str	lr, [sp, #20]
   174e0:	mov	r5, r1
   174e4:	ldr	lr, [sp, #24]
   174e8:	ldr	ip, [r1]
   174ec:	asr	r4, ip, #1
   174f0:	adds	r4, ip, r4
   174f4:	movvs	r1, #1
   174f8:	movvc	r1, #0
   174fc:	cmp	r1, #0
   17500:	mvnne	r4, #-2147483648	; 0x80000000
   17504:	mvn	r8, r3
   17508:	lsr	r8, r8, #31
   1750c:	cmp	r3, r4
   17510:	movge	r1, #0
   17514:	andlt	r1, r8, #1
   17518:	cmp	r1, #0
   1751c:	movne	r4, r3
   17520:	smull	r6, r7, r4, lr
   17524:	asr	r1, r6, #31
   17528:	cmp	r1, r7
   1752c:	bne	17544 <dcngettext@plt+0x6554>
   17530:	mov	r1, r6
   17534:	cmp	r6, #63	; 0x3f
   17538:	movle	r1, #64	; 0x40
   1753c:	ble	17548 <dcngettext@plt+0x6558>
   17540:	b	17554 <dcngettext@plt+0x6564>
   17544:	mvn	r1, #-2147483648	; 0x80000000
   17548:	sdiv	r4, r1, lr
   1754c:	mls	r6, lr, r4, r1
   17550:	sub	r1, r1, r6
   17554:	cmp	r0, #0
   17558:	moveq	r6, #0
   1755c:	streq	r6, [r5]
   17560:	sub	r6, r4, ip
   17564:	cmp	r6, r2
   17568:	bge	175a0 <dcngettext@plt+0x65b0>
   1756c:	adds	r2, ip, r2
   17570:	mov	r4, r2
   17574:	bvs	175bc <dcngettext@plt+0x65cc>
   17578:	cmp	r2, r3
   1757c:	movle	r3, #0
   17580:	andgt	r3, r8, #1
   17584:	cmp	r3, #0
   17588:	bne	175bc <dcngettext@plt+0x65cc>
   1758c:	smull	r2, r3, r2, lr
   17590:	asr	ip, r2, #31
   17594:	mov	r1, r2
   17598:	cmp	ip, r3
   1759c:	bne	175bc <dcngettext@plt+0x65cc>
   175a0:	bl	172e4 <dcngettext@plt+0x62f4>
   175a4:	str	r4, [r5]
   175a8:	ldrd	r4, [sp]
   175ac:	ldrd	r6, [sp, #8]
   175b0:	ldr	r8, [sp, #16]
   175b4:	add	sp, sp, #20
   175b8:	pop	{pc}		; (ldr pc, [sp], #4)
   175bc:	bl	17718 <dcngettext@plt+0x6728>
   175c0:	str	r4, [sp, #-8]!
   175c4:	str	lr, [sp, #4]
   175c8:	bl	1775c <dcngettext@plt+0x676c>
   175cc:	cmp	r0, #0
   175d0:	beq	175e0 <dcngettext@plt+0x65f0>
   175d4:	ldr	r4, [sp]
   175d8:	add	sp, sp, #4
   175dc:	pop	{pc}		; (ldr pc, [sp], #4)
   175e0:	bl	17718 <dcngettext@plt+0x6728>
   175e4:	str	r4, [sp, #-8]!
   175e8:	str	lr, [sp, #4]
   175ec:	mov	r1, #1
   175f0:	bl	175c0 <dcngettext@plt+0x65d0>
   175f4:	ldr	r4, [sp]
   175f8:	add	sp, sp, #4
   175fc:	pop	{pc}		; (ldr pc, [sp], #4)
   17600:	str	r4, [sp, #-8]!
   17604:	str	lr, [sp, #4]
   17608:	bl	1775c <dcngettext@plt+0x676c>
   1760c:	cmp	r0, #0
   17610:	beq	17620 <dcngettext@plt+0x6630>
   17614:	ldr	r4, [sp]
   17618:	add	sp, sp, #4
   1761c:	pop	{pc}		; (ldr pc, [sp], #4)
   17620:	bl	17718 <dcngettext@plt+0x6728>
   17624:	str	r4, [sp, #-8]!
   17628:	str	lr, [sp, #4]
   1762c:	mov	r1, #1
   17630:	bl	17600 <dcngettext@plt+0x6610>
   17634:	ldr	r4, [sp]
   17638:	add	sp, sp, #4
   1763c:	pop	{pc}		; (ldr pc, [sp], #4)
   17640:	strd	r4, [sp, #-16]!
   17644:	str	r6, [sp, #8]
   17648:	str	lr, [sp, #12]
   1764c:	mov	r5, r0
   17650:	mov	r4, r1
   17654:	mov	r0, r1
   17658:	bl	17284 <dcngettext@plt+0x6294>
   1765c:	mov	r2, r4
   17660:	mov	r1, r5
   17664:	bl	10dc8 <memcpy@plt>
   17668:	ldrd	r4, [sp]
   1766c:	ldr	r6, [sp, #8]
   17670:	add	sp, sp, #12
   17674:	pop	{pc}		; (ldr pc, [sp], #4)
   17678:	strd	r4, [sp, #-16]!
   1767c:	str	r6, [sp, #8]
   17680:	str	lr, [sp, #12]
   17684:	mov	r5, r0
   17688:	mov	r4, r1
   1768c:	mov	r0, r1
   17690:	bl	172a8 <dcngettext@plt+0x62b8>
   17694:	mov	r2, r4
   17698:	mov	r1, r5
   1769c:	bl	10dc8 <memcpy@plt>
   176a0:	ldrd	r4, [sp]
   176a4:	ldr	r6, [sp, #8]
   176a8:	add	sp, sp, #12
   176ac:	pop	{pc}		; (ldr pc, [sp], #4)
   176b0:	strd	r4, [sp, #-16]!
   176b4:	str	r6, [sp, #8]
   176b8:	str	lr, [sp, #12]
   176bc:	mov	r5, r0
   176c0:	mov	r4, r1
   176c4:	add	r0, r1, #1
   176c8:	bl	172a8 <dcngettext@plt+0x62b8>
   176cc:	mov	r2, #0
   176d0:	strb	r2, [r0, r4]
   176d4:	mov	r2, r4
   176d8:	mov	r1, r5
   176dc:	bl	10dc8 <memcpy@plt>
   176e0:	ldrd	r4, [sp]
   176e4:	ldr	r6, [sp, #8]
   176e8:	add	sp, sp, #12
   176ec:	pop	{pc}		; (ldr pc, [sp], #4)
   176f0:	str	r4, [sp, #-8]!
   176f4:	str	lr, [sp, #4]
   176f8:	mov	r4, r0
   176fc:	bl	10edc <strlen@plt>
   17700:	add	r1, r0, #1
   17704:	mov	r0, r4
   17708:	bl	17640 <dcngettext@plt+0x6650>
   1770c:	ldr	r4, [sp]
   17710:	add	sp, sp, #4
   17714:	pop	{pc}		; (ldr pc, [sp], #4)
   17718:	str	r4, [sp, #-8]!
   1771c:	str	lr, [sp, #4]
   17720:	movw	r3, #41224	; 0xa108
   17724:	movt	r3, #2
   17728:	ldr	r4, [r3]
   1772c:	mov	r2, #5
   17730:	movw	r1, #37188	; 0x9144
   17734:	movt	r1, #1
   17738:	mov	r0, #0
   1773c:	bl	10e04 <dcgettext@plt>
   17740:	mov	r3, r0
   17744:	movw	r2, #36040	; 0x8cc8
   17748:	movt	r2, #1
   1774c:	mov	r1, #0
   17750:	mov	r0, r4
   17754:	bl	10e70 <error@plt>
   17758:	bl	10fd8 <abort@plt>
   1775c:	strd	r4, [sp, #-16]!
   17760:	str	r6, [sp, #8]
   17764:	str	lr, [sp, #12]
   17768:	cmp	r1, #0
   1776c:	cmpne	r0, #0
   17770:	beq	177ac <dcngettext@plt+0x67bc>
   17774:	mov	r2, r0
   17778:	mov	r3, r1
   1777c:	umull	r4, r5, r0, r1
   17780:	adds	r1, r5, #0
   17784:	movne	r1, #1
   17788:	cmp	r4, #0
   1778c:	movlt	r1, #1
   17790:	cmp	r1, #0
   17794:	beq	177b4 <dcngettext@plt+0x67c4>
   17798:	bl	10ef4 <__errno_location@plt>
   1779c:	mov	r3, #12
   177a0:	str	r3, [r0]
   177a4:	mov	r0, #0
   177a8:	b	177c0 <dcngettext@plt+0x67d0>
   177ac:	mov	r3, #1
   177b0:	mov	r2, r3
   177b4:	mov	r1, r3
   177b8:	mov	r0, r2
   177bc:	bl	10d5c <calloc@plt>
   177c0:	ldrd	r4, [sp]
   177c4:	ldr	r6, [sp, #8]
   177c8:	add	sp, sp, #12
   177cc:	pop	{pc}		; (ldr pc, [sp], #4)
   177d0:	str	r4, [sp, #-8]!
   177d4:	str	lr, [sp, #4]
   177d8:	cmp	r0, #0
   177dc:	beq	177f8 <dcngettext@plt+0x6808>
   177e0:	bge	177fc <dcngettext@plt+0x680c>
   177e4:	bl	10ef4 <__errno_location@plt>
   177e8:	mov	r3, #12
   177ec:	str	r3, [r0]
   177f0:	mov	r0, #0
   177f4:	b	17800 <dcngettext@plt+0x6810>
   177f8:	mov	r0, #1
   177fc:	bl	10e7c <malloc@plt>
   17800:	ldr	r4, [sp]
   17804:	add	sp, sp, #4
   17808:	pop	{pc}		; (ldr pc, [sp], #4)
   1780c:	str	r4, [sp, #-8]!
   17810:	str	lr, [sp, #4]
   17814:	cmp	r0, #0
   17818:	beq	1783c <dcngettext@plt+0x684c>
   1781c:	cmp	r1, #0
   17820:	beq	17848 <dcngettext@plt+0x6858>
   17824:	cmp	r1, #0
   17828:	blt	17854 <dcngettext@plt+0x6864>
   1782c:	bl	10e10 <realloc@plt>
   17830:	ldr	r4, [sp]
   17834:	add	sp, sp, #4
   17838:	pop	{pc}		; (ldr pc, [sp], #4)
   1783c:	mov	r0, r1
   17840:	bl	177d0 <dcngettext@plt+0x67e0>
   17844:	b	17830 <dcngettext@plt+0x6840>
   17848:	bl	14874 <dcngettext@plt+0x3884>
   1784c:	mov	r0, #0
   17850:	b	17830 <dcngettext@plt+0x6840>
   17854:	bl	10ef4 <__errno_location@plt>
   17858:	mov	r3, #12
   1785c:	str	r3, [r0]
   17860:	mov	r0, #0
   17864:	b	17830 <dcngettext@plt+0x6840>
   17868:	strd	r4, [sp, #-16]!
   1786c:	str	r6, [sp, #8]
   17870:	str	lr, [sp, #12]
   17874:	mov	r5, r0
   17878:	bl	10e58 <__fpending@plt>
   1787c:	mov	r6, r0
   17880:	ldr	r4, [r5]
   17884:	and	r4, r4, #32
   17888:	mov	r0, r5
   1788c:	bl	14698 <dcngettext@plt+0x36a8>
   17890:	cmp	r4, #0
   17894:	bne	178c8 <dcngettext@plt+0x68d8>
   17898:	cmp	r0, #0
   1789c:	beq	178b8 <dcngettext@plt+0x68c8>
   178a0:	cmp	r6, #0
   178a4:	bne	178e4 <dcngettext@plt+0x68f4>
   178a8:	bl	10ef4 <__errno_location@plt>
   178ac:	ldr	r0, [r0]
   178b0:	subs	r0, r0, #9
   178b4:	mvnne	r0, #0
   178b8:	ldrd	r4, [sp]
   178bc:	ldr	r6, [sp, #8]
   178c0:	add	sp, sp, #12
   178c4:	pop	{pc}		; (ldr pc, [sp], #4)
   178c8:	cmp	r0, #0
   178cc:	bne	178ec <dcngettext@plt+0x68fc>
   178d0:	bl	10ef4 <__errno_location@plt>
   178d4:	mov	r3, #0
   178d8:	str	r3, [r0]
   178dc:	mvn	r0, #0
   178e0:	b	178b8 <dcngettext@plt+0x68c8>
   178e4:	mvn	r0, #0
   178e8:	b	178b8 <dcngettext@plt+0x68c8>
   178ec:	mvn	r0, #0
   178f0:	b	178b8 <dcngettext@plt+0x68c8>
   178f4:	push	{r1, r2, r3}
   178f8:	strd	r4, [sp, #-16]!
   178fc:	str	r6, [sp, #8]
   17900:	str	lr, [sp, #12]
   17904:	sub	sp, sp, #12
   17908:	mov	r5, r0
   1790c:	ldr	r1, [sp, #28]
   17910:	add	r3, sp, #32
   17914:	str	r3, [sp, #4]
   17918:	cmp	r1, #0
   1791c:	beq	17964 <dcngettext@plt+0x6974>
   17920:	movw	r3, #1030	; 0x406
   17924:	cmp	r1, r3
   17928:	beq	179a0 <dcngettext@plt+0x69b0>
   1792c:	cmp	r1, #11
   17930:	beq	17b50 <dcngettext@plt+0x6b60>
   17934:	bgt	17adc <dcngettext@plt+0x6aec>
   17938:	cmp	r1, #3
   1793c:	beq	17b50 <dcngettext@plt+0x6b60>
   17940:	ble	17a9c <dcngettext@plt+0x6aac>
   17944:	cmp	r1, #8
   17948:	beq	17abc <dcngettext@plt+0x6acc>
   1794c:	ble	17ab4 <dcngettext@plt+0x6ac4>
   17950:	cmp	r1, #9
   17954:	beq	17b50 <dcngettext@plt+0x6b60>
   17958:	cmp	r1, #10
   1795c:	bne	17b14 <dcngettext@plt+0x6b24>
   17960:	b	17abc <dcngettext@plt+0x6acc>
   17964:	ldr	r3, [sp, #4]
   17968:	add	r2, r3, #4
   1796c:	str	r2, [sp, #4]
   17970:	ldr	r2, [r3]
   17974:	mov	r1, #0
   17978:	bl	10f60 <fcntl64@plt>
   1797c:	mov	r4, r0
   17980:	mov	r0, r4
   17984:	add	sp, sp, #12
   17988:	ldrd	r4, [sp]
   1798c:	ldr	r6, [sp, #8]
   17990:	ldr	lr, [sp, #12]
   17994:	add	sp, sp, #16
   17998:	add	sp, sp, #12
   1799c:	bx	lr
   179a0:	ldr	r3, [sp, #4]
   179a4:	add	r2, r3, #4
   179a8:	str	r2, [sp, #4]
   179ac:	ldr	r6, [r3]
   179b0:	movw	r3, #41664	; 0xa2c0
   179b4:	movt	r3, #2
   179b8:	ldr	r3, [r3]
   179bc:	cmp	r3, #0
   179c0:	blt	17a28 <dcngettext@plt+0x6a38>
   179c4:	mov	r2, r6
   179c8:	movw	r1, #1030	; 0x406
   179cc:	bl	10f60 <fcntl64@plt>
   179d0:	subs	r4, r0, #0
   179d4:	blt	179ec <dcngettext@plt+0x69fc>
   179d8:	movw	r3, #41664	; 0xa2c0
   179dc:	movt	r3, #2
   179e0:	mov	r2, #1
   179e4:	str	r2, [r3]
   179e8:	b	17980 <dcngettext@plt+0x6990>
   179ec:	bl	10ef4 <__errno_location@plt>
   179f0:	ldr	r3, [r0]
   179f4:	cmp	r3, #22
   179f8:	bne	179d8 <dcngettext@plt+0x69e8>
   179fc:	mov	r2, r6
   17a00:	mov	r1, #0
   17a04:	mov	r0, r5
   17a08:	bl	10f60 <fcntl64@plt>
   17a0c:	subs	r4, r0, #0
   17a10:	blt	17980 <dcngettext@plt+0x6990>
   17a14:	movw	r3, #41664	; 0xa2c0
   17a18:	movt	r3, #2
   17a1c:	mvn	r2, #0
   17a20:	str	r2, [r3]
   17a24:	b	17a50 <dcngettext@plt+0x6a60>
   17a28:	mov	r2, r6
   17a2c:	mov	r1, #0
   17a30:	bl	10f60 <fcntl64@plt>
   17a34:	subs	r4, r0, #0
   17a38:	blt	17980 <dcngettext@plt+0x6990>
   17a3c:	movw	r3, #41664	; 0xa2c0
   17a40:	movt	r3, #2
   17a44:	ldr	r3, [r3]
   17a48:	cmn	r3, #1
   17a4c:	bne	17980 <dcngettext@plt+0x6990>
   17a50:	mov	r1, #1
   17a54:	mov	r0, r4
   17a58:	bl	10f60 <fcntl64@plt>
   17a5c:	subs	r2, r0, #0
   17a60:	blt	17a7c <dcngettext@plt+0x6a8c>
   17a64:	orr	r2, r2, #1
   17a68:	mov	r1, #2
   17a6c:	mov	r0, r4
   17a70:	bl	10f60 <fcntl64@plt>
   17a74:	cmn	r0, #1
   17a78:	bne	17980 <dcngettext@plt+0x6990>
   17a7c:	bl	10ef4 <__errno_location@plt>
   17a80:	mov	r5, r0
   17a84:	ldr	r6, [r0]
   17a88:	mov	r0, r4
   17a8c:	bl	10fe4 <close@plt>
   17a90:	str	r6, [r5]
   17a94:	mvn	r4, #0
   17a98:	b	17980 <dcngettext@plt+0x6990>
   17a9c:	cmp	r1, #1
   17aa0:	beq	17b50 <dcngettext@plt+0x6b60>
   17aa4:	bgt	17abc <dcngettext@plt+0x6acc>
   17aa8:	cmp	r1, #0
   17aac:	bne	17b14 <dcngettext@plt+0x6b24>
   17ab0:	b	17abc <dcngettext@plt+0x6acc>
   17ab4:	cmp	r1, #4
   17ab8:	bne	17b14 <dcngettext@plt+0x6b24>
   17abc:	ldr	r3, [sp, #4]
   17ac0:	add	r2, r3, #4
   17ac4:	str	r2, [sp, #4]
   17ac8:	ldr	r2, [r3]
   17acc:	mov	r0, r5
   17ad0:	bl	10f60 <fcntl64@plt>
   17ad4:	mov	r4, r0
   17ad8:	b	17980 <dcngettext@plt+0x6990>
   17adc:	movw	r3, #1031	; 0x407
   17ae0:	cmp	r1, r3
   17ae4:	bgt	17b34 <dcngettext@plt+0x6b44>
   17ae8:	movw	r3, #1030	; 0x406
   17aec:	cmp	r1, r3
   17af0:	bge	17abc <dcngettext@plt+0x6acc>
   17af4:	movw	r3, #1025	; 0x401
   17af8:	cmp	r1, r3
   17afc:	beq	17b50 <dcngettext@plt+0x6b60>
   17b00:	movw	r3, #1026	; 0x402
   17b04:	cmp	r1, r3
   17b08:	beq	17abc <dcngettext@plt+0x6acc>
   17b0c:	cmp	r1, #1024	; 0x400
   17b10:	beq	17abc <dcngettext@plt+0x6acc>
   17b14:	ldr	r3, [sp, #4]
   17b18:	add	r2, r3, #4
   17b1c:	str	r2, [sp, #4]
   17b20:	ldr	r2, [r3]
   17b24:	mov	r0, r5
   17b28:	bl	10f60 <fcntl64@plt>
   17b2c:	mov	r4, r0
   17b30:	b	17980 <dcngettext@plt+0x6990>
   17b34:	movw	r3, #1033	; 0x409
   17b38:	cmp	r1, r3
   17b3c:	beq	17abc <dcngettext@plt+0x6acc>
   17b40:	blt	17b50 <dcngettext@plt+0x6b60>
   17b44:	movw	r3, #1034	; 0x40a
   17b48:	cmp	r1, r3
   17b4c:	bne	17b14 <dcngettext@plt+0x6b24>
   17b50:	mov	r0, r5
   17b54:	bl	10f60 <fcntl64@plt>
   17b58:	mov	r4, r0
   17b5c:	b	17980 <dcngettext@plt+0x6990>
   17b60:	str	r4, [sp, #-8]!
   17b64:	str	lr, [sp, #4]
   17b68:	mov	r0, #14
   17b6c:	bl	10f90 <nl_langinfo@plt>
   17b70:	cmp	r0, #0
   17b74:	beq	17b98 <dcngettext@plt+0x6ba8>
   17b78:	ldrb	r2, [r0]
   17b7c:	movw	r3, #37208	; 0x9158
   17b80:	movt	r3, #1
   17b84:	cmp	r2, #0
   17b88:	moveq	r0, r3
   17b8c:	ldr	r4, [sp]
   17b90:	add	sp, sp, #4
   17b94:	pop	{pc}		; (ldr pc, [sp], #4)
   17b98:	movw	r0, #37208	; 0x9158
   17b9c:	movt	r0, #1
   17ba0:	b	17b8c <dcngettext@plt+0x6b9c>
   17ba4:	strd	r4, [sp, #-20]!	; 0xffffffec
   17ba8:	strd	r6, [sp, #8]
   17bac:	str	lr, [sp, #16]
   17bb0:	sub	sp, sp, #12
   17bb4:	mov	r7, r1
   17bb8:	mov	r5, r2
   17bbc:	subs	r6, r0, #0
   17bc0:	addeq	r6, sp, #4
   17bc4:	mov	r0, r6
   17bc8:	bl	10e64 <mbrtowc@plt>
   17bcc:	mov	r4, r0
   17bd0:	cmp	r5, #0
   17bd4:	cmnne	r0, #3
   17bd8:	bhi	17bf4 <dcngettext@plt+0x6c04>
   17bdc:	mov	r0, r4
   17be0:	add	sp, sp, #12
   17be4:	ldrd	r4, [sp]
   17be8:	ldrd	r6, [sp, #8]
   17bec:	add	sp, sp, #16
   17bf0:	pop	{pc}		; (ldr pc, [sp], #4)
   17bf4:	mov	r0, #0
   17bf8:	bl	17c50 <dcngettext@plt+0x6c60>
   17bfc:	cmp	r0, #0
   17c00:	bne	17bdc <dcngettext@plt+0x6bec>
   17c04:	ldrb	r3, [r7]
   17c08:	str	r3, [r6]
   17c0c:	mov	r4, #1
   17c10:	b	17bdc <dcngettext@plt+0x6bec>
   17c14:	str	r4, [sp, #-8]!
   17c18:	str	lr, [sp, #4]
   17c1c:	umull	r2, r3, r1, r2
   17c20:	cmp	r3, #0
   17c24:	bne	17c3c <dcngettext@plt+0x6c4c>
   17c28:	mov	r1, r2
   17c2c:	bl	1780c <dcngettext@plt+0x681c>
   17c30:	ldr	r4, [sp]
   17c34:	add	sp, sp, #4
   17c38:	pop	{pc}		; (ldr pc, [sp], #4)
   17c3c:	bl	10ef4 <__errno_location@plt>
   17c40:	mov	r3, #12
   17c44:	str	r3, [r0]
   17c48:	mov	r0, #0
   17c4c:	b	17c30 <dcngettext@plt+0x6c40>
   17c50:	push	{lr}		; (str lr, [sp, #-4]!)
   17c54:	sub	sp, sp, #268	; 0x10c
   17c58:	movw	r2, #257	; 0x101
   17c5c:	add	r1, sp, #4
   17c60:	bl	17cac <dcngettext@plt+0x6cbc>
   17c64:	cmp	r0, #0
   17c68:	movne	r0, #0
   17c6c:	bne	17ca4 <dcngettext@plt+0x6cb4>
   17c70:	movw	r1, #37216	; 0x9160
   17c74:	movt	r1, #1
   17c78:	add	r0, sp, #4
   17c7c:	bl	10d8c <strcmp@plt>
   17c80:	cmp	r0, #0
   17c84:	beq	17ca0 <dcngettext@plt+0x6cb0>
   17c88:	movw	r1, #37220	; 0x9164
   17c8c:	movt	r1, #1
   17c90:	add	r0, sp, #4
   17c94:	bl	10d8c <strcmp@plt>
   17c98:	adds	r0, r0, #0
   17c9c:	movne	r0, #1
   17ca0:	and	r0, r0, #1
   17ca4:	add	sp, sp, #268	; 0x10c
   17ca8:	pop	{pc}		; (ldr pc, [sp], #4)
   17cac:	strd	r4, [sp, #-16]!
   17cb0:	str	r6, [sp, #8]
   17cb4:	str	lr, [sp, #12]
   17cb8:	mov	r6, r1
   17cbc:	mov	r4, r2
   17cc0:	mov	r1, #0
   17cc4:	bl	10f78 <setlocale@plt>
   17cc8:	subs	r5, r0, #0
   17ccc:	beq	17d10 <dcngettext@plt+0x6d20>
   17cd0:	mov	r0, r5
   17cd4:	bl	10edc <strlen@plt>
   17cd8:	cmp	r4, r0
   17cdc:	bhi	17d2c <dcngettext@plt+0x6d3c>
   17ce0:	cmp	r4, #0
   17ce4:	moveq	r0, #34	; 0x22
   17ce8:	beq	17d40 <dcngettext@plt+0x6d50>
   17cec:	sub	r4, r4, #1
   17cf0:	mov	r2, r4
   17cf4:	mov	r1, r5
   17cf8:	mov	r0, r6
   17cfc:	bl	10dc8 <memcpy@plt>
   17d00:	mov	r3, #0
   17d04:	strb	r3, [r6, r4]
   17d08:	mov	r0, #34	; 0x22
   17d0c:	b	17d40 <dcngettext@plt+0x6d50>
   17d10:	cmp	r4, #0
   17d14:	moveq	r0, #22
   17d18:	beq	17d40 <dcngettext@plt+0x6d50>
   17d1c:	mov	r3, #0
   17d20:	strb	r3, [r6]
   17d24:	mov	r0, #22
   17d28:	b	17d40 <dcngettext@plt+0x6d50>
   17d2c:	add	r2, r0, #1
   17d30:	mov	r1, r5
   17d34:	mov	r0, r6
   17d38:	bl	10dc8 <memcpy@plt>
   17d3c:	mov	r0, #0
   17d40:	ldrd	r4, [sp]
   17d44:	ldr	r6, [sp, #8]
   17d48:	add	sp, sp, #12
   17d4c:	pop	{pc}		; (ldr pc, [sp], #4)
   17d50:	str	r4, [sp, #-8]!
   17d54:	str	lr, [sp, #4]
   17d58:	mov	r1, #0
   17d5c:	bl	10f78 <setlocale@plt>
   17d60:	ldr	r4, [sp]
   17d64:	add	sp, sp, #4
   17d68:	pop	{pc}		; (ldr pc, [sp], #4)
   17d6c:	cmp	r3, #0
   17d70:	cmpeq	r2, #0
   17d74:	bne	17d8c <dcngettext@plt+0x6d9c>
   17d78:	cmp	r1, #0
   17d7c:	cmpeq	r0, #0
   17d80:	mvnne	r1, #0
   17d84:	mvnne	r0, #0
   17d88:	b	17da8 <dcngettext@plt+0x6db8>
   17d8c:	sub	sp, sp, #8
   17d90:	push	{sp, lr}
   17d94:	bl	17db8 <dcngettext@plt+0x6dc8>
   17d98:	ldr	lr, [sp, #4]
   17d9c:	add	sp, sp, #8
   17da0:	pop	{r2, r3}
   17da4:	bx	lr
   17da8:	push	{r1, lr}
   17dac:	mov	r0, #8
   17db0:	bl	10d74 <raise@plt>
   17db4:	pop	{r1, pc}
   17db8:	cmp	r1, r3
   17dbc:	cmpeq	r0, r2
   17dc0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17dc4:	mov	r4, r0
   17dc8:	movcc	r0, #0
   17dcc:	mov	r5, r1
   17dd0:	ldr	lr, [sp, #36]	; 0x24
   17dd4:	movcc	r1, r0
   17dd8:	bcc	17ed4 <dcngettext@plt+0x6ee4>
   17ddc:	cmp	r3, #0
   17de0:	clzeq	ip, r2
   17de4:	clzne	ip, r3
   17de8:	addeq	ip, ip, #32
   17dec:	cmp	r5, #0
   17df0:	clzeq	r1, r4
   17df4:	addeq	r1, r1, #32
   17df8:	clzne	r1, r5
   17dfc:	sub	ip, ip, r1
   17e00:	sub	sl, ip, #32
   17e04:	lsl	r9, r3, ip
   17e08:	rsb	fp, ip, #32
   17e0c:	orr	r9, r9, r2, lsl sl
   17e10:	orr	r9, r9, r2, lsr fp
   17e14:	lsl	r8, r2, ip
   17e18:	cmp	r5, r9
   17e1c:	cmpeq	r4, r8
   17e20:	movcc	r0, #0
   17e24:	movcc	r1, r0
   17e28:	bcc	17e44 <dcngettext@plt+0x6e54>
   17e2c:	mov	r0, #1
   17e30:	subs	r4, r4, r8
   17e34:	lsl	r1, r0, sl
   17e38:	orr	r1, r1, r0, lsr fp
   17e3c:	lsl	r0, r0, ip
   17e40:	sbc	r5, r5, r9
   17e44:	cmp	ip, #0
   17e48:	beq	17ed4 <dcngettext@plt+0x6ee4>
   17e4c:	lsr	r6, r8, #1
   17e50:	orr	r6, r6, r9, lsl #31
   17e54:	lsr	r7, r9, #1
   17e58:	mov	r2, ip
   17e5c:	b	17e80 <dcngettext@plt+0x6e90>
   17e60:	subs	r3, r4, r6
   17e64:	sbc	r8, r5, r7
   17e68:	adds	r3, r3, r3
   17e6c:	adc	r8, r8, r8
   17e70:	adds	r4, r3, #1
   17e74:	adc	r5, r8, #0
   17e78:	subs	r2, r2, #1
   17e7c:	beq	17e9c <dcngettext@plt+0x6eac>
   17e80:	cmp	r5, r7
   17e84:	cmpeq	r4, r6
   17e88:	bcs	17e60 <dcngettext@plt+0x6e70>
   17e8c:	adds	r4, r4, r4
   17e90:	adc	r5, r5, r5
   17e94:	subs	r2, r2, #1
   17e98:	bne	17e80 <dcngettext@plt+0x6e90>
   17e9c:	lsr	r3, r4, ip
   17ea0:	orr	r3, r3, r5, lsl fp
   17ea4:	lsr	r2, r5, ip
   17ea8:	orr	r3, r3, r5, lsr sl
   17eac:	adds	r0, r0, r4
   17eb0:	mov	r4, r3
   17eb4:	lsl	r3, r2, ip
   17eb8:	orr	r3, r3, r4, lsl sl
   17ebc:	lsl	ip, r4, ip
   17ec0:	orr	r3, r3, r4, lsr fp
   17ec4:	adc	r1, r1, r5
   17ec8:	subs	r0, r0, ip
   17ecc:	mov	r5, r2
   17ed0:	sbc	r1, r1, r3
   17ed4:	cmp	lr, #0
   17ed8:	strdne	r4, [lr]
   17edc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17ee0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   17ee4:	mov	r7, r0
   17ee8:	ldr	r6, [pc, #72]	; 17f38 <dcngettext@plt+0x6f48>
   17eec:	ldr	r5, [pc, #72]	; 17f3c <dcngettext@plt+0x6f4c>
   17ef0:	add	r6, pc, r6
   17ef4:	add	r5, pc, r5
   17ef8:	sub	r6, r6, r5
   17efc:	mov	r8, r1
   17f00:	mov	r9, r2
   17f04:	bl	10d30 <fdopen@plt-0x20>
   17f08:	asrs	r6, r6, #2
   17f0c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   17f10:	mov	r4, #0
   17f14:	add	r4, r4, #1
   17f18:	ldr	r3, [r5], #4
   17f1c:	mov	r2, r9
   17f20:	mov	r1, r8
   17f24:	mov	r0, r7
   17f28:	blx	r3
   17f2c:	cmp	r6, r4
   17f30:	bne	17f14 <dcngettext@plt+0x6f24>
   17f34:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17f38:	andeq	r2, r1, ip, lsl r0
   17f3c:	andeq	r2, r1, r4, lsl r0
   17f40:	bx	lr
   17f44:	ldr	r3, [pc, #12]	; 17f58 <dcngettext@plt+0x6f68>
   17f48:	mov	r1, #0
   17f4c:	add	r3, pc, r3
   17f50:	ldr	r2, [r3]
   17f54:	b	10f00 <__cxa_atexit@plt>
   17f58:	andeq	r2, r1, r4, lsr #3

Disassembly of section .fini:

00017f5c <.fini>:
   17f5c:	push	{r3, lr}
   17f60:	pop	{r3, pc}
