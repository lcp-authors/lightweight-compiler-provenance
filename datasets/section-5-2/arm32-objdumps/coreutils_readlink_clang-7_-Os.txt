
../repos/coreutils/src/readlink:     file format elf32-littlearm


Disassembly of section .init:

00010da8 <.init>:
   10da8:	push	{r3, lr}
   10dac:	bl	11074 <__mempcpy_chk@plt+0x48>
   10db0:	pop	{r3, pc}

Disassembly of section .plt:

00010db4 <calloc@plt-0x14>:
   10db4:	push	{lr}		; (str lr, [sp, #-4]!)
   10db8:	ldr	lr, [pc, #4]	; 10dc4 <calloc@plt-0x4>
   10dbc:	add	lr, pc, lr
   10dc0:	ldr	pc, [lr, #8]!
   10dc4:	andeq	r6, r1, ip, lsr r2

00010dc8 <calloc@plt>:
   10dc8:	add	ip, pc, #0, 12
   10dcc:	add	ip, ip, #90112	; 0x16000
   10dd0:	ldr	pc, [ip, #572]!	; 0x23c

00010dd4 <fputs_unlocked@plt>:
   10dd4:	add	ip, pc, #0, 12
   10dd8:	add	ip, ip, #90112	; 0x16000
   10ddc:	ldr	pc, [ip, #564]!	; 0x234

00010de0 <raise@plt>:
   10de0:	add	ip, pc, #0, 12
   10de4:	add	ip, ip, #90112	; 0x16000
   10de8:	ldr	pc, [ip, #556]!	; 0x22c

00010dec <strcmp@plt>:
   10dec:	add	ip, pc, #0, 12
   10df0:	add	ip, ip, #90112	; 0x16000
   10df4:	ldr	pc, [ip, #548]!	; 0x224

00010df8 <fflush@plt>:
   10df8:	add	ip, pc, #0, 12
   10dfc:	add	ip, ip, #90112	; 0x16000
   10e00:	ldr	pc, [ip, #540]!	; 0x21c

00010e04 <memmove@plt>:
   10e04:	add	ip, pc, #0, 12
   10e08:	add	ip, ip, #90112	; 0x16000
   10e0c:	ldr	pc, [ip, #532]!	; 0x214

00010e10 <free@plt>:
   10e10:	add	ip, pc, #0, 12
   10e14:	add	ip, ip, #90112	; 0x16000
   10e18:	ldr	pc, [ip, #524]!	; 0x20c

00010e1c <faccessat@plt>:
   10e1c:	add	ip, pc, #0, 12
   10e20:	add	ip, ip, #90112	; 0x16000
   10e24:	ldr	pc, [ip, #516]!	; 0x204

00010e28 <_exit@plt>:
   10e28:	add	ip, pc, #0, 12
   10e2c:	add	ip, ip, #90112	; 0x16000
   10e30:	ldr	pc, [ip, #508]!	; 0x1fc

00010e34 <memcpy@plt>:
   10e34:	add	ip, pc, #0, 12
   10e38:	add	ip, ip, #90112	; 0x16000
   10e3c:	ldr	pc, [ip, #500]!	; 0x1f4

00010e40 <mbsinit@plt>:
   10e40:	add	ip, pc, #0, 12
   10e44:	add	ip, ip, #90112	; 0x16000
   10e48:	ldr	pc, [ip, #492]!	; 0x1ec

00010e4c <memcmp@plt>:
   10e4c:	add	ip, pc, #0, 12
   10e50:	add	ip, ip, #90112	; 0x16000
   10e54:	ldr	pc, [ip, #484]!	; 0x1e4

00010e58 <dcgettext@plt>:
   10e58:	add	ip, pc, #0, 12
   10e5c:	add	ip, ip, #90112	; 0x16000
   10e60:	ldr	pc, [ip, #476]!	; 0x1dc

00010e64 <realloc@plt>:
   10e64:	add	ip, pc, #0, 12
   10e68:	add	ip, ip, #90112	; 0x16000
   10e6c:	ldr	pc, [ip, #468]!	; 0x1d4

00010e70 <textdomain@plt>:
   10e70:	add	ip, pc, #0, 12
   10e74:	add	ip, ip, #90112	; 0x16000
   10e78:	ldr	pc, [ip, #460]!	; 0x1cc

00010e7c <rawmemchr@plt>:
   10e7c:	add	ip, pc, #0, 12
   10e80:	add	ip, ip, #90112	; 0x16000
   10e84:	ldr	pc, [ip, #452]!	; 0x1c4

00010e88 <iswprint@plt>:
   10e88:	add	ip, pc, #0, 12
   10e8c:	add	ip, ip, #90112	; 0x16000
   10e90:	ldr	pc, [ip, #444]!	; 0x1bc

00010e94 <readlink@plt>:
   10e94:	add	ip, pc, #0, 12
   10e98:	add	ip, ip, #90112	; 0x16000
   10e9c:	ldr	pc, [ip, #436]!	; 0x1b4

00010ea0 <lseek64@plt>:
   10ea0:	add	ip, pc, #0, 12
   10ea4:	add	ip, ip, #90112	; 0x16000
   10ea8:	ldr	pc, [ip, #428]!	; 0x1ac

00010eac <__ctype_get_mb_cur_max@plt>:
   10eac:	add	ip, pc, #0, 12
   10eb0:	add	ip, ip, #90112	; 0x16000
   10eb4:	ldr	pc, [ip, #420]!	; 0x1a4

00010eb8 <__fpending@plt>:
   10eb8:	add	ip, pc, #0, 12
   10ebc:	add	ip, ip, #90112	; 0x16000
   10ec0:	ldr	pc, [ip, #412]!	; 0x19c

00010ec4 <ferror_unlocked@plt>:
   10ec4:	add	ip, pc, #0, 12
   10ec8:	add	ip, ip, #90112	; 0x16000
   10ecc:	ldr	pc, [ip, #404]!	; 0x194

00010ed0 <mbrtowc@plt>:
   10ed0:	add	ip, pc, #0, 12
   10ed4:	add	ip, ip, #90112	; 0x16000
   10ed8:	ldr	pc, [ip, #396]!	; 0x18c

00010edc <error@plt>:
   10edc:	add	ip, pc, #0, 12
   10ee0:	add	ip, ip, #90112	; 0x16000
   10ee4:	ldr	pc, [ip, #388]!	; 0x184

00010ee8 <malloc@plt>:
   10ee8:	add	ip, pc, #0, 12
   10eec:	add	ip, ip, #90112	; 0x16000
   10ef0:	ldr	pc, [ip, #380]!	; 0x17c

00010ef4 <__libc_start_main@plt>:
   10ef4:	add	ip, pc, #0, 12
   10ef8:	add	ip, ip, #90112	; 0x16000
   10efc:	ldr	pc, [ip, #372]!	; 0x174

00010f00 <__freading@plt>:
   10f00:	add	ip, pc, #0, 12
   10f04:	add	ip, ip, #90112	; 0x16000
   10f08:	ldr	pc, [ip, #364]!	; 0x16c

00010f0c <__gmon_start__@plt>:
   10f0c:	add	ip, pc, #0, 12
   10f10:	add	ip, ip, #90112	; 0x16000
   10f14:	ldr	pc, [ip, #356]!	; 0x164

00010f18 <getopt_long@plt>:
   10f18:	add	ip, pc, #0, 12
   10f1c:	add	ip, ip, #90112	; 0x16000
   10f20:	ldr	pc, [ip, #348]!	; 0x15c

00010f24 <__ctype_b_loc@plt>:
   10f24:	add	ip, pc, #0, 12
   10f28:	add	ip, ip, #90112	; 0x16000
   10f2c:	ldr	pc, [ip, #340]!	; 0x154

00010f30 <getcwd@plt>:
   10f30:	add	ip, pc, #0, 12
   10f34:	add	ip, ip, #90112	; 0x16000
   10f38:	ldr	pc, [ip, #332]!	; 0x14c

00010f3c <exit@plt>:
   10f3c:	add	ip, pc, #0, 12
   10f40:	add	ip, ip, #90112	; 0x16000
   10f44:	ldr	pc, [ip, #324]!	; 0x144

00010f48 <strlen@plt>:
   10f48:	add	ip, pc, #0, 12
   10f4c:	add	ip, ip, #90112	; 0x16000
   10f50:	ldr	pc, [ip, #316]!	; 0x13c

00010f54 <__errno_location@plt>:
   10f54:	add	ip, pc, #0, 12
   10f58:	add	ip, ip, #90112	; 0x16000
   10f5c:	ldr	pc, [ip, #308]!	; 0x134

00010f60 <__cxa_atexit@plt>:
   10f60:	add	ip, pc, #0, 12
   10f64:	add	ip, ip, #90112	; 0x16000
   10f68:	ldr	pc, [ip, #300]!	; 0x12c

00010f6c <memset@plt>:
   10f6c:	add	ip, pc, #0, 12
   10f70:	add	ip, ip, #90112	; 0x16000
   10f74:	ldr	pc, [ip, #292]!	; 0x124

00010f78 <__printf_chk@plt>:
   10f78:	add	ip, pc, #0, 12
   10f7c:	add	ip, ip, #90112	; 0x16000
   10f80:	ldr	pc, [ip, #284]!	; 0x11c

00010f84 <fileno@plt>:
   10f84:	add	ip, pc, #0, 12
   10f88:	add	ip, ip, #90112	; 0x16000
   10f8c:	ldr	pc, [ip, #276]!	; 0x114

00010f90 <__fprintf_chk@plt>:
   10f90:	add	ip, pc, #0, 12
   10f94:	add	ip, ip, #90112	; 0x16000
   10f98:	ldr	pc, [ip, #268]!	; 0x10c

00010f9c <fclose@plt>:
   10f9c:	add	ip, pc, #0, 12
   10fa0:	add	ip, ip, #90112	; 0x16000
   10fa4:	ldr	pc, [ip, #260]!	; 0x104

00010fa8 <fseeko64@plt>:
   10fa8:	add	ip, pc, #0, 12
   10fac:	add	ip, ip, #90112	; 0x16000
   10fb0:	ldr	pc, [ip, #252]!	; 0xfc

00010fb4 <setlocale@plt>:
   10fb4:	add	ip, pc, #0, 12
   10fb8:	add	ip, ip, #90112	; 0x16000
   10fbc:	ldr	pc, [ip, #244]!	; 0xf4

00010fc0 <strrchr@plt>:
   10fc0:	add	ip, pc, #0, 12
   10fc4:	add	ip, ip, #90112	; 0x16000
   10fc8:	ldr	pc, [ip, #236]!	; 0xec

00010fcc <nl_langinfo@plt>:
   10fcc:	add	ip, pc, #0, 12
   10fd0:	add	ip, ip, #90112	; 0x16000
   10fd4:	ldr	pc, [ip, #228]!	; 0xe4

00010fd8 <bindtextdomain@plt>:
   10fd8:	add	ip, pc, #0, 12
   10fdc:	add	ip, ip, #90112	; 0x16000
   10fe0:	ldr	pc, [ip, #220]!	; 0xdc

00010fe4 <__xstat64@plt>:
   10fe4:	add	ip, pc, #0, 12
   10fe8:	add	ip, ip, #90112	; 0x16000
   10fec:	ldr	pc, [ip, #212]!	; 0xd4

00010ff0 <fputs@plt>:
   10ff0:	add	ip, pc, #0, 12
   10ff4:	add	ip, ip, #90112	; 0x16000
   10ff8:	ldr	pc, [ip, #204]!	; 0xcc

00010ffc <strncmp@plt>:
   10ffc:	add	ip, pc, #0, 12
   11000:	add	ip, ip, #90112	; 0x16000
   11004:	ldr	pc, [ip, #196]!	; 0xc4

00011008 <abort@plt>:
   11008:	add	ip, pc, #0, 12
   1100c:	add	ip, ip, #90112	; 0x16000
   11010:	ldr	pc, [ip, #188]!	; 0xbc

00011014 <putchar_unlocked@plt>:
   11014:	add	ip, pc, #0, 12
   11018:	add	ip, ip, #90112	; 0x16000
   1101c:	ldr	pc, [ip, #180]!	; 0xb4

00011020 <strspn@plt>:
   11020:	add	ip, pc, #0, 12
   11024:	add	ip, ip, #90112	; 0x16000
   11028:	ldr	pc, [ip, #172]!	; 0xac

0001102c <__mempcpy_chk@plt>:
   1102c:	add	ip, pc, #0, 12
   11030:	add	ip, ip, #90112	; 0x16000
   11034:	ldr	pc, [ip, #164]!	; 0xa4

Disassembly of section .text:

00011038 <.text>:
   11038:	mov	fp, #0
   1103c:	mov	lr, #0
   11040:	pop	{r1}		; (ldr r1, [sp], #4)
   11044:	mov	r2, sp
   11048:	push	{r2}		; (str r2, [sp, #-4]!)
   1104c:	push	{r0}		; (str r0, [sp, #-4]!)
   11050:	ldr	ip, [pc, #16]	; 11068 <__mempcpy_chk@plt+0x3c>
   11054:	push	{ip}		; (str ip, [sp, #-4]!)
   11058:	ldr	r0, [pc, #12]	; 1106c <__mempcpy_chk@plt+0x40>
   1105c:	ldr	r3, [pc, #12]	; 11070 <__mempcpy_chk@plt+0x44>
   11060:	bl	10ef4 <__libc_start_main@plt>
   11064:	bl	11008 <abort@plt>
   11068:	andeq	r5, r1, r8, lsl #27
   1106c:	andeq	r1, r1, r4, lsl #7
   11070:	andeq	r5, r1, r8, lsr #26
   11074:	ldr	r3, [pc, #20]	; 11090 <__mempcpy_chk@plt+0x64>
   11078:	ldr	r2, [pc, #20]	; 11094 <__mempcpy_chk@plt+0x68>
   1107c:	add	r3, pc, r3
   11080:	ldr	r2, [r3, r2]
   11084:	cmp	r2, #0
   11088:	bxeq	lr
   1108c:	b	10f0c <__gmon_start__@plt>
   11090:	andeq	r5, r1, ip, ror pc
   11094:	ldrdeq	r0, [r0], -ip
   11098:	ldr	r0, [pc, #24]	; 110b8 <__mempcpy_chk@plt+0x8c>
   1109c:	ldr	r3, [pc, #24]	; 110bc <__mempcpy_chk@plt+0x90>
   110a0:	cmp	r3, r0
   110a4:	bxeq	lr
   110a8:	ldr	r3, [pc, #16]	; 110c0 <__mempcpy_chk@plt+0x94>
   110ac:	cmp	r3, #0
   110b0:	bxeq	lr
   110b4:	bx	r3
   110b8:	andeq	r7, r2, r0, lsr r1
   110bc:	andeq	r7, r2, r0, lsr r1
   110c0:	andeq	r0, r0, r0
   110c4:	ldr	r0, [pc, #36]	; 110f0 <__mempcpy_chk@plt+0xc4>
   110c8:	ldr	r1, [pc, #36]	; 110f4 <__mempcpy_chk@plt+0xc8>
   110cc:	sub	r1, r1, r0
   110d0:	asr	r1, r1, #2
   110d4:	add	r1, r1, r1, lsr #31
   110d8:	asrs	r1, r1, #1
   110dc:	bxeq	lr
   110e0:	ldr	r3, [pc, #16]	; 110f8 <__mempcpy_chk@plt+0xcc>
   110e4:	cmp	r3, #0
   110e8:	bxeq	lr
   110ec:	bx	r3
   110f0:	andeq	r7, r2, r0, lsr r1
   110f4:	andeq	r7, r2, r0, lsr r1
   110f8:	andeq	r0, r0, r0
   110fc:	push	{r4, lr}
   11100:	ldr	r4, [pc, #24]	; 11120 <__mempcpy_chk@plt+0xf4>
   11104:	ldrb	r3, [r4]
   11108:	cmp	r3, #0
   1110c:	popne	{r4, pc}
   11110:	bl	11098 <__mempcpy_chk@plt+0x6c>
   11114:	mov	r3, #1
   11118:	strb	r3, [r4]
   1111c:	pop	{r4, pc}
   11120:	andeq	r7, r2, r8, asr #2
   11124:	b	110c4 <__mempcpy_chk@plt+0x98>
   11128:	push	{fp, lr}
   1112c:	mov	fp, sp
   11130:	sub	sp, sp, #56	; 0x38
   11134:	mov	r8, r0
   11138:	cmp	r0, #0
   1113c:	bne	11344 <__mempcpy_chk@plt+0x318>
   11140:	movw	r1, #24043	; 0x5deb
   11144:	mov	r0, #0
   11148:	mov	r2, #5
   1114c:	movt	r1, #1
   11150:	bl	10e58 <dcgettext@plt>
   11154:	mov	r1, r0
   11158:	movw	r0, #29012	; 0x7154
   1115c:	movt	r0, #2
   11160:	ldr	r2, [r0]
   11164:	mov	r0, #1
   11168:	bl	10f78 <__printf_chk@plt>
   1116c:	movw	r1, #24074	; 0x5e0a
   11170:	mov	r0, #0
   11174:	mov	r2, #5
   11178:	movt	r1, #1
   1117c:	bl	10e58 <dcgettext@plt>
   11180:	movw	r9, #28996	; 0x7144
   11184:	movt	r9, #2
   11188:	ldr	r1, [r9]
   1118c:	bl	10dd4 <fputs_unlocked@plt>
   11190:	movw	r1, #24130	; 0x5e42
   11194:	mov	r0, #0
   11198:	mov	r2, #5
   1119c:	movt	r1, #1
   111a0:	bl	10e58 <dcgettext@plt>
   111a4:	ldr	r1, [r9]
   111a8:	bl	10dd4 <fputs_unlocked@plt>
   111ac:	movw	r1, #24567	; 0x5ff7
   111b0:	mov	r0, #0
   111b4:	mov	r2, #5
   111b8:	movt	r1, #1
   111bc:	bl	10e58 <dcgettext@plt>
   111c0:	ldr	r1, [r9]
   111c4:	bl	10dd4 <fputs_unlocked@plt>
   111c8:	movw	r1, #25088	; 0x6200
   111cc:	mov	r0, #0
   111d0:	mov	r2, #5
   111d4:	movt	r1, #1
   111d8:	bl	10e58 <dcgettext@plt>
   111dc:	ldr	r1, [r9]
   111e0:	bl	10dd4 <fputs_unlocked@plt>
   111e4:	movw	r1, #25133	; 0x622d
   111e8:	mov	r0, #0
   111ec:	mov	r2, #5
   111f0:	movt	r1, #1
   111f4:	bl	10e58 <dcgettext@plt>
   111f8:	ldr	r1, [r9]
   111fc:	bl	10dd4 <fputs_unlocked@plt>
   11200:	movw	r0, #25920	; 0x6540
   11204:	mov	r6, sp
   11208:	movt	r0, #1
   1120c:	mov	r1, r6
   11210:	ldm	r0!, {r2, r3, r4, r5}
   11214:	stmia	r1!, {r2, r3, r4, r5}
   11218:	ldm	r0!, {r2, r3, r4, r5, r7}
   1121c:	stmia	r1!, {r2, r3, r4, r5, r7}
   11220:	ldm	r0, {r2, r3, r4, r5, r7}
   11224:	stm	r1, {r2, r3, r4, r5, r7}
   11228:	movw	r1, #25321	; 0x62e9
   1122c:	movw	r5, #25187	; 0x6263
   11230:	movt	r1, #1
   11234:	movt	r5, #1
   11238:	mov	r0, r5
   1123c:	bl	10dec <strcmp@plt>
   11240:	cmp	r0, #0
   11244:	ldrne	r1, [r6, #8]!
   11248:	cmpne	r1, #0
   1124c:	bne	11238 <__mempcpy_chk@plt+0x20c>
   11250:	ldr	r6, [r6, #4]
   11254:	movw	r1, #25416	; 0x6348
   11258:	mov	r0, #0
   1125c:	mov	r2, #5
   11260:	movt	r1, #1
   11264:	bl	10e58 <dcgettext@plt>
   11268:	movw	r2, #25229	; 0x628d
   1126c:	movw	r3, #25439	; 0x635f
   11270:	mov	r1, r0
   11274:	mov	r0, #1
   11278:	movt	r2, #1
   1127c:	movt	r3, #1
   11280:	bl	10f78 <__printf_chk@plt>
   11284:	cmp	r6, #0
   11288:	mov	r0, #5
   1128c:	mov	r1, #0
   11290:	moveq	r6, r5
   11294:	bl	10fb4 <setlocale@plt>
   11298:	cmp	r0, #0
   1129c:	beq	112d4 <__mempcpy_chk@plt+0x2a8>
   112a0:	movw	r1, #25479	; 0x6387
   112a4:	mov	r2, #3
   112a8:	movt	r1, #1
   112ac:	bl	10ffc <strncmp@plt>
   112b0:	cmp	r0, #0
   112b4:	beq	112d4 <__mempcpy_chk@plt+0x2a8>
   112b8:	movw	r1, #25483	; 0x638b
   112bc:	mov	r0, #0
   112c0:	mov	r2, #5
   112c4:	movt	r1, #1
   112c8:	bl	10e58 <dcgettext@plt>
   112cc:	ldr	r1, [r9]
   112d0:	bl	10dd4 <fputs_unlocked@plt>
   112d4:	movw	r1, #25554	; 0x63d2
   112d8:	mov	r0, #0
   112dc:	mov	r2, #5
   112e0:	movt	r1, #1
   112e4:	bl	10e58 <dcgettext@plt>
   112e8:	movw	r2, #25439	; 0x635f
   112ec:	mov	r1, r0
   112f0:	mov	r0, #1
   112f4:	mov	r3, r5
   112f8:	movt	r2, #1
   112fc:	bl	10f78 <__printf_chk@plt>
   11300:	movw	r1, #25581	; 0x63ed
   11304:	mov	r0, #0
   11308:	mov	r2, #5
   1130c:	movt	r1, #1
   11310:	bl	10e58 <dcgettext@plt>
   11314:	movw	r3, #24129	; 0x5e41
   11318:	mov	r1, r0
   1131c:	movw	r0, #25349	; 0x6305
   11320:	cmp	r6, r5
   11324:	mov	r2, r6
   11328:	movt	r0, #1
   1132c:	movt	r3, #1
   11330:	moveq	r3, r0
   11334:	mov	r0, #1
   11338:	bl	10f78 <__printf_chk@plt>
   1133c:	mov	r0, r8
   11340:	bl	10f3c <exit@plt>
   11344:	movw	r0, #28992	; 0x7140
   11348:	movw	r1, #24004	; 0x5dc4
   1134c:	mov	r2, #5
   11350:	movt	r0, #2
   11354:	movt	r1, #1
   11358:	ldr	r5, [r0]
   1135c:	mov	r0, #0
   11360:	bl	10e58 <dcgettext@plt>
   11364:	mov	r2, r0
   11368:	movw	r0, #29012	; 0x7154
   1136c:	mov	r1, #1
   11370:	movt	r0, #2
   11374:	ldr	r3, [r0]
   11378:	mov	r0, r5
   1137c:	bl	10f90 <__fprintf_chk@plt>
   11380:	b	1133c <__mempcpy_chk@plt+0x310>
   11384:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11388:	add	fp, sp, #28
   1138c:	sub	sp, sp, #20
   11390:	mov	r5, r0
   11394:	ldr	r0, [r1]
   11398:	mov	r8, r1
   1139c:	bl	130c0 <__mempcpy_chk@plt+0x2094>
   113a0:	movw	r1, #24129	; 0x5e41
   113a4:	mov	r0, #6
   113a8:	movt	r1, #1
   113ac:	bl	10fb4 <setlocale@plt>
   113b0:	movw	r6, #25233	; 0x6291
   113b4:	movw	r1, #25196	; 0x626c
   113b8:	movt	r6, #1
   113bc:	movt	r1, #1
   113c0:	mov	r0, r6
   113c4:	bl	10fd8 <bindtextdomain@plt>
   113c8:	mov	r0, r6
   113cc:	bl	10e70 <textdomain@plt>
   113d0:	movw	r0, #7908	; 0x1ee4
   113d4:	movt	r0, #1
   113d8:	bl	15d8c <__mempcpy_chk@plt+0x4d60>
   113dc:	movw	r9, #25220	; 0x6284
   113e0:	movw	r7, #25744	; 0x6490
   113e4:	mov	r0, #10
   113e8:	mvn	r6, #0
   113ec:	mov	r4, #0
   113f0:	mov	sl, #1
   113f4:	str	r0, [sp, #12]
   113f8:	movt	r9, #1
   113fc:	movt	r7, #1
   11400:	b	114b4 <__mempcpy_chk@plt+0x488>
   11404:	sub	r1, r0, #101	; 0x65
   11408:	cmp	r1, #14
   1140c:	bhi	11464 <__mempcpy_chk@plt+0x438>
   11410:	add	r0, pc, #0
   11414:	ldr	pc, [r0, r1, lsl #2]
   11418:	muleq	r1, r0, r4
   1141c:	muleq	r1, r8, r4
   11420:			; <UNDEFINED> instruction: 0x000116b4
   11424:			; <UNDEFINED> instruction: 0x000116b4
   11428:			; <UNDEFINED> instruction: 0x000116b4
   1142c:			; <UNDEFINED> instruction: 0x000116b4
   11430:			; <UNDEFINED> instruction: 0x000116b4
   11434:			; <UNDEFINED> instruction: 0x000116b4
   11438:	andeq	r1, r1, r0, lsr #9
   1143c:	andeq	r1, r1, r8, lsr #9
   11440:			; <UNDEFINED> instruction: 0x000116b4
   11444:			; <UNDEFINED> instruction: 0x000116b4
   11448:	andeq	r1, r1, r4, asr r4
   1144c:			; <UNDEFINED> instruction: 0x000116b4
   11450:	andeq	r1, r1, r4, asr r4
   11454:	movw	r0, #29002	; 0x714a
   11458:	movt	r0, #2
   1145c:	strb	r4, [r0]
   11460:	b	114b4 <__mempcpy_chk@plt+0x488>
   11464:	cmp	r0, #118	; 0x76
   11468:	bne	1147c <__mempcpy_chk@plt+0x450>
   1146c:	movw	r0, #29002	; 0x714a
   11470:	movt	r0, #2
   11474:	strb	sl, [r0]
   11478:	b	114b4 <__mempcpy_chk@plt+0x488>
   1147c:	cmp	r0, #122	; 0x7a
   11480:	bne	116b4 <__mempcpy_chk@plt+0x688>
   11484:	mov	r0, #0
   11488:	str	r0, [sp, #12]
   1148c:	b	114b4 <__mempcpy_chk@plt+0x488>
   11490:	mov	r6, #0
   11494:	b	114b4 <__mempcpy_chk@plt+0x488>
   11498:	mov	r6, #1
   1149c:	b	114b4 <__mempcpy_chk@plt+0x488>
   114a0:	mov	r6, #2
   114a4:	b	114b4 <__mempcpy_chk@plt+0x488>
   114a8:	movw	r0, #29001	; 0x7149
   114ac:	movt	r0, #2
   114b0:	strb	sl, [r0]
   114b4:	mov	r0, r5
   114b8:	mov	r1, r8
   114bc:	mov	r2, r9
   114c0:	mov	r3, r7
   114c4:	str	r4, [sp]
   114c8:	bl	10f18 <getopt_long@plt>
   114cc:	cmp	r0, #100	; 0x64
   114d0:	bgt	11404 <__mempcpy_chk@plt+0x3d8>
   114d4:	cmn	r0, #1
   114d8:	bne	11630 <__mempcpy_chk@plt+0x604>
   114dc:	movw	sl, #28984	; 0x7138
   114e0:	movw	r4, #29001	; 0x7149
   114e4:	movt	sl, #2
   114e8:	movt	r4, #2
   114ec:	ldr	r0, [sl]
   114f0:	cmp	r0, r5
   114f4:	bge	11690 <__mempcpy_chk@plt+0x664>
   114f8:	sub	r1, r5, r0
   114fc:	cmp	r1, #2
   11500:	blt	11540 <__mempcpy_chk@plt+0x514>
   11504:	ldrb	r1, [r4]
   11508:	cmp	r1, #1
   1150c:	bne	11538 <__mempcpy_chk@plt+0x50c>
   11510:	movw	r1, #25275	; 0x62bb
   11514:	mov	r0, #0
   11518:	mov	r2, #5
   1151c:	movt	r1, #1
   11520:	bl	10e58 <dcgettext@plt>
   11524:	mov	r2, r0
   11528:	mov	r0, #0
   1152c:	mov	r1, #0
   11530:	bl	10edc <error@plt>
   11534:	ldr	r0, [sl]
   11538:	mov	r1, #0
   1153c:	strb	r1, [r4]
   11540:	mov	r1, #0
   11544:	cmp	r0, r5
   11548:	str	r1, [sp, #16]
   1154c:	bge	11624 <__mempcpy_chk@plt+0x5f8>
   11550:	mov	r1, #0
   11554:	str	r1, [sp, #16]
   11558:	ldr	r7, [r8, r0, lsl #2]
   1155c:	cmn	r6, #1
   11560:	mov	r0, r7
   11564:	beq	11574 <__mempcpy_chk@plt+0x548>
   11568:	mov	r1, r6
   1156c:	bl	117f8 <__mempcpy_chk@plt+0x7cc>
   11570:	b	1157c <__mempcpy_chk@plt+0x550>
   11574:	mov	r1, #63	; 0x3f
   11578:	bl	116bc <__mempcpy_chk@plt+0x690>
   1157c:	mov	r9, r0
   11580:	cmp	r0, #0
   11584:	beq	115bc <__mempcpy_chk@plt+0x590>
   11588:	movw	r0, #28996	; 0x7144
   1158c:	movt	r0, #2
   11590:	ldr	r1, [r0]
   11594:	mov	r0, r9
   11598:	bl	10dd4 <fputs_unlocked@plt>
   1159c:	ldrb	r0, [r4]
   115a0:	cmp	r0, #0
   115a4:	bne	115b0 <__mempcpy_chk@plt+0x584>
   115a8:	ldr	r0, [sp, #12]
   115ac:	bl	11014 <putchar_unlocked@plt>
   115b0:	mov	r0, r9
   115b4:	bl	12094 <__mempcpy_chk@plt+0x1068>
   115b8:	b	11610 <__mempcpy_chk@plt+0x5e4>
   115bc:	movw	r0, #29002	; 0x714a
   115c0:	mov	r1, #1
   115c4:	movt	r0, #2
   115c8:	str	r1, [sp, #16]
   115cc:	ldrb	r0, [r0]
   115d0:	cmp	r0, #1
   115d4:	bne	11610 <__mempcpy_chk@plt+0x5e4>
   115d8:	bl	10f54 <__errno_location@plt>
   115dc:	ldr	r4, [r0]
   115e0:	mov	r0, #0
   115e4:	mov	r1, #3
   115e8:	mov	r2, r7
   115ec:	bl	14930 <__mempcpy_chk@plt+0x3904>
   115f0:	movw	r2, #26009	; 0x6599
   115f4:	mov	r3, r0
   115f8:	mov	r1, r4
   115fc:	movw	r4, #29001	; 0x7149
   11600:	mov	r0, #0
   11604:	movt	r2, #1
   11608:	movt	r4, #2
   1160c:	bl	10edc <error@plt>
   11610:	ldr	r0, [sl]
   11614:	add	r0, r0, #1
   11618:	cmp	r0, r5
   1161c:	str	r0, [sl]
   11620:	blt	11558 <__mempcpy_chk@plt+0x52c>
   11624:	ldr	r0, [sp, #16]
   11628:	sub	sp, fp, #28
   1162c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11630:	cmn	r0, #3
   11634:	bne	11680 <__mempcpy_chk@plt+0x654>
   11638:	movw	r0, #28904	; 0x70e8
   1163c:	movw	r2, #25243	; 0x629b
   11640:	mov	r1, #0
   11644:	movt	r0, #2
   11648:	movt	r2, #1
   1164c:	str	r1, [sp, #4]
   11650:	movw	r1, #25187	; 0x6263
   11654:	ldr	r3, [r0]
   11658:	movw	r0, #28996	; 0x7144
   1165c:	str	r2, [sp]
   11660:	movw	r2, #25229	; 0x628d
   11664:	movt	r1, #1
   11668:	movt	r0, #2
   1166c:	movt	r2, #1
   11670:	ldr	r0, [r0]
   11674:	bl	15120 <__mempcpy_chk@plt+0x40f4>
   11678:	mov	r0, #0
   1167c:	bl	10f3c <exit@plt>
   11680:	cmn	r0, #2
   11684:	bne	116b4 <__mempcpy_chk@plt+0x688>
   11688:	mov	r0, #0
   1168c:	bl	11128 <__mempcpy_chk@plt+0xfc>
   11690:	movw	r1, #25259	; 0x62ab
   11694:	mov	r0, #0
   11698:	mov	r2, #5
   1169c:	movt	r1, #1
   116a0:	bl	10e58 <dcgettext@plt>
   116a4:	mov	r2, r0
   116a8:	mov	r0, #0
   116ac:	mov	r1, #0
   116b0:	bl	10edc <error@plt>
   116b4:	mov	r0, #1
   116b8:	bl	11128 <__mempcpy_chk@plt+0xfc>
   116bc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   116c0:	add	fp, sp, #24
   116c4:	sub	sp, sp, #128	; 0x80
   116c8:	mov	r4, r1
   116cc:	mov	r8, r0
   116d0:	cmp	r1, #0
   116d4:	beq	116e8 <__mempcpy_chk@plt+0x6bc>
   116d8:	movw	r6, #1025	; 0x401
   116dc:	cmp	r4, #1024	; 0x400
   116e0:	addls	r6, r4, #1
   116e4:	b	116ec <__mempcpy_chk@plt+0x6c0>
   116e8:	mov	r6, #128	; 0x80
   116ec:	mov	r9, sp
   116f0:	b	11724 <__mempcpy_chk@plt+0x6f8>
   116f4:	cmp	r0, r6
   116f8:	bcc	1177c <__mempcpy_chk@plt+0x750>
   116fc:	mov	r0, r5
   11700:	bl	12094 <__mempcpy_chk@plt+0x1068>
   11704:	cmn	r6, #-1073741823	; 0xc0000001
   11708:	bhi	11714 <__mempcpy_chk@plt+0x6e8>
   1170c:	lsl	r0, r6, #1
   11710:	b	11720 <__mempcpy_chk@plt+0x6f4>
   11714:	mvn	r0, #-2147483648	; 0x80000000
   11718:	cmn	r6, #-2147483647	; 0x80000001
   1171c:	bcs	117b4 <__mempcpy_chk@plt+0x788>
   11720:	mov	r6, r0
   11724:	cmp	r4, #0
   11728:	bne	1173c <__mempcpy_chk@plt+0x710>
   1172c:	mov	r5, #0
   11730:	cmp	r6, #128	; 0x80
   11734:	mov	r7, r9
   11738:	beq	11754 <__mempcpy_chk@plt+0x728>
   1173c:	mov	r0, r6
   11740:	bl	15710 <__mempcpy_chk@plt+0x46e4>
   11744:	mov	r7, r0
   11748:	cmp	r0, #0
   1174c:	mov	r5, r0
   11750:	beq	117b4 <__mempcpy_chk@plt+0x788>
   11754:	mov	r0, r8
   11758:	mov	r1, r7
   1175c:	mov	r2, r6
   11760:	bl	10e94 <readlink@plt>
   11764:	cmn	r0, #1
   11768:	bgt	116f4 <__mempcpy_chk@plt+0x6c8>
   1176c:	mov	r0, r5
   11770:	bl	12094 <__mempcpy_chk@plt+0x1068>
   11774:	mov	r4, #0
   11778:	b	117ec <__mempcpy_chk@plt+0x7c0>
   1177c:	mov	r4, #0
   11780:	add	r8, r0, #1
   11784:	cmp	r5, #0
   11788:	strb	r4, [r7, r0]
   1178c:	beq	117c8 <__mempcpy_chk@plt+0x79c>
   11790:	cmp	r8, r6
   11794:	bcs	117e8 <__mempcpy_chk@plt+0x7bc>
   11798:	mov	r0, r5
   1179c:	mov	r1, r8
   117a0:	bl	15740 <__mempcpy_chk@plt+0x4714>
   117a4:	mov	r4, r0
   117a8:	cmp	r0, #0
   117ac:	moveq	r4, r5
   117b0:	b	117ec <__mempcpy_chk@plt+0x7c0>
   117b4:	bl	10f54 <__errno_location@plt>
   117b8:	mov	r1, #12
   117bc:	mov	r4, #0
   117c0:	str	r1, [r0]
   117c4:	b	117ec <__mempcpy_chk@plt+0x7c0>
   117c8:	mov	r0, r8
   117cc:	bl	15710 <__mempcpy_chk@plt+0x46e4>
   117d0:	cmp	r0, #0
   117d4:	beq	117ec <__mempcpy_chk@plt+0x7c0>
   117d8:	mov	r1, r7
   117dc:	mov	r2, r8
   117e0:	mov	r5, r0
   117e4:	bl	10e34 <memcpy@plt>
   117e8:	mov	r4, r5
   117ec:	mov	r0, r4
   117f0:	sub	sp, fp, #24
   117f4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   117f8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   117fc:	add	fp, sp, #28
   11800:	sub	sp, sp, #180	; 0xb4
   11804:	sub	sp, sp, #3072	; 0xc00
   11808:	mov	r8, r0
   1180c:	and	r7, r1, #3
   11810:	sub	r0, r1, #1
   11814:	tst	r0, r7
   11818:	beq	11838 <__mempcpy_chk@plt+0x80c>
   1181c:	bl	10f54 <__errno_location@plt>
   11820:	mov	r1, #22
   11824:	mov	r4, #0
   11828:	str	r1, [r0]
   1182c:	mov	r0, r4
   11830:	sub	sp, fp, #28
   11834:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11838:	cmp	r8, #0
   1183c:	beq	1181c <__mempcpy_chk@plt+0x7f0>
   11840:	ldrb	r0, [r8]
   11844:	cmp	r0, #0
   11848:	beq	118c0 <__mempcpy_chk@plt+0x894>
   1184c:	sub	lr, fp, #1024	; 0x400
   11850:	mov	r4, r1
   11854:	mov	r1, #1024	; 0x400
   11858:	cmp	r0, #47	; 0x2f
   1185c:	sub	r2, lr, #40	; 0x28
   11860:	str	r1, [fp, #-1060]	; 0xfffffbdc
   11864:	add	r2, r2, #8
   11868:	str	r2, [sp, #12]
   1186c:	str	r2, [fp, #-1064]	; 0xfffffbd8
   11870:	add	r2, sp, #1184	; 0x4a0
   11874:	add	r2, r2, #8
   11878:	str	r2, [sp, #1184]	; 0x4a0
   1187c:	str	r2, [sp, #16]
   11880:	add	r2, sp, #48	; 0x30
   11884:	str	r1, [sp, #1188]	; 0x4a4
   11888:	add	r5, r2, #8
   1188c:	mov	r0, r5
   11890:	str	r5, [sp, #48]	; 0x30
   11894:	str	r1, [sp, #52]	; 0x34
   11898:	str	r5, [sp, #8]
   1189c:	bne	118cc <__mempcpy_chk@plt+0x8a0>
   118a0:	mov	r1, r8
   118a4:	mov	r2, #0
   118a8:	mov	r3, #1024	; 0x400
   118ac:	bl	1102c <__mempcpy_chk@plt>
   118b0:	mov	r6, r0
   118b4:	mov	r0, #47	; 0x2f
   118b8:	strb	r0, [r6], #1
   118bc:	b	118ec <__mempcpy_chk@plt+0x8c0>
   118c0:	bl	10f54 <__errno_location@plt>
   118c4:	mov	r1, #2
   118c8:	b	11824 <__mempcpy_chk@plt+0x7f8>
   118cc:	mov	r1, #1024	; 0x400
   118d0:	bl	10f30 <getcwd@plt>
   118d4:	cmp	r0, #0
   118d8:	beq	11de8 <__mempcpy_chk@plt+0xdbc>
   118dc:	mov	r0, r5
   118e0:	mov	r1, #0
   118e4:	bl	10e7c <rawmemchr@plt>
   118e8:	mov	r6, r0
   118ec:	ldrb	r0, [r8]
   118f0:	cmp	r0, #0
   118f4:	beq	11dac <__mempcpy_chk@plt+0xd80>
   118f8:	and	r1, r4, #4
   118fc:	add	r9, sp, #48	; 0x30
   11900:	str	r7, [sp, #32]
   11904:	str	r1, [sp, #40]	; 0x28
   11908:	mov	r1, #0
   1190c:	str	r1, [sp, #24]
   11910:	mov	r1, #0
   11914:	str	r1, [sp, #36]	; 0x24
   11918:	mov	r1, #0
   1191c:	str	r1, [sp, #20]
   11920:	b	11d54 <__mempcpy_chk@plt+0xd28>
   11924:	uxtb	r0, r0
   11928:	cmp	r0, #46	; 0x2e
   1192c:	ldrbeq	r0, [r8, #1]
   11930:	cmpeq	r0, #46	; 0x2e
   11934:	bne	11974 <__mempcpy_chk@plt+0x948>
   11938:	add	r0, r5, #1
   1193c:	cmp	r6, r0
   11940:	bls	11a68 <__mempcpy_chk@plt+0xa3c>
   11944:	sub	r0, r6, #1
   11948:	mov	r6, r0
   1194c:	cmp	r0, r5
   11950:	bls	11a68 <__mempcpy_chk@plt+0xa3c>
   11954:	mov	r0, r6
   11958:	ldrb	r1, [r0, #-1]!
   1195c:	cmp	r1, #47	; 0x2f
   11960:	bne	11948 <__mempcpy_chk@plt+0x91c>
   11964:	b	11a68 <__mempcpy_chk@plt+0xa3c>
   11968:	uxtb	r0, r0
   1196c:	cmp	r0, #46	; 0x2e
   11970:	beq	11a68 <__mempcpy_chk@plt+0xa3c>
   11974:	ldrb	r0, [r6, #-1]
   11978:	add	r4, r2, #2
   1197c:	str	r2, [sp, #44]	; 0x2c
   11980:	cmp	r0, #47	; 0x2f
   11984:	movne	r0, #47	; 0x2f
   11988:	strbne	r0, [r6], #1
   1198c:	ldr	r0, [sp, #52]	; 0x34
   11990:	add	r0, r5, r0
   11994:	sub	r0, r0, r6
   11998:	cmp	r0, r4
   1199c:	bcs	119d4 <__mempcpy_chk@plt+0x9a8>
   119a0:	mov	r0, r9
   119a4:	bl	14ccc <__mempcpy_chk@plt+0x3ca0>
   119a8:	cmp	r0, #0
   119ac:	beq	11eac <__mempcpy_chk@plt+0xe80>
   119b0:	sub	r0, r6, r5
   119b4:	ldr	r5, [sp, #48]	; 0x30
   119b8:	ldr	r1, [sp, #52]	; 0x34
   119bc:	add	r6, r5, r0
   119c0:	add	r0, r5, r1
   119c4:	sub	r0, r0, r6
   119c8:	cmp	r0, r4
   119cc:	bcc	119a0 <__mempcpy_chk@plt+0x974>
   119d0:	ldr	r2, [sp, #44]	; 0x2c
   119d4:	mov	r0, r6
   119d8:	mov	r1, r8
   119dc:	mvn	r3, #0
   119e0:	bl	1102c <__mempcpy_chk@plt>
   119e4:	mov	r6, r0
   119e8:	mov	r0, #0
   119ec:	strb	r0, [r6]
   119f0:	ldr	r0, [sp, #40]	; 0x28
   119f4:	cmp	r0, #0
   119f8:	bne	11a5c <__mempcpy_chk@plt+0xa30>
   119fc:	ldr	r0, [sp, #1188]	; 0x4a4
   11a00:	ldr	r7, [sp, #1184]	; 0x4a0
   11a04:	sub	r9, r0, #1
   11a08:	mov	r0, r5
   11a0c:	mov	r1, r7
   11a10:	mov	r2, r9
   11a14:	bl	10e94 <readlink@plt>
   11a18:	cmp	r0, r9
   11a1c:	blt	11a34 <__mempcpy_chk@plt+0xa08>
   11a20:	add	r0, sp, #1184	; 0x4a0
   11a24:	bl	14c60 <__mempcpy_chk@plt+0x3c34>
   11a28:	cmp	r0, #0
   11a2c:	bne	119fc <__mempcpy_chk@plt+0x9d0>
   11a30:	b	11eac <__mempcpy_chk@plt+0xe80>
   11a34:	mov	r4, r0
   11a38:	cmp	r0, #0
   11a3c:	add	r9, sp, #48	; 0x30
   11a40:	blt	11a5c <__mempcpy_chk@plt+0xa30>
   11a44:	ldr	r0, [sp, #24]
   11a48:	cmp	r0, #19
   11a4c:	bgt	11ae0 <__mempcpy_chk@plt+0xab4>
   11a50:	add	r0, r0, #1
   11a54:	str	r0, [sp, #24]
   11a58:	b	11c44 <__mempcpy_chk@plt+0xc18>
   11a5c:	ldr	r7, [sp, #32]
   11a60:	cmp	r7, #2
   11a64:	bne	11a7c <__mempcpy_chk@plt+0xa50>
   11a68:	mov	r8, sl
   11a6c:	ldrb	r0, [r8]
   11a70:	cmp	r0, #0
   11a74:	bne	11d54 <__mempcpy_chk@plt+0xd28>
   11a78:	b	11db4 <__mempcpy_chk@plt+0xd88>
   11a7c:	ldrb	r0, [sl]
   11a80:	cmp	r0, #47	; 0x2f
   11a84:	bne	11bac <__mempcpy_chk@plt+0xb80>
   11a88:	mov	r2, sl
   11a8c:	mov	r1, r2
   11a90:	ldrb	r3, [r2, #1]!
   11a94:	cmp	r3, #47	; 0x2f
   11a98:	beq	11a8c <__mempcpy_chk@plt+0xa60>
   11a9c:	cmp	r3, #46	; 0x2e
   11aa0:	bne	11ba4 <__mempcpy_chk@plt+0xb78>
   11aa4:	add	r2, r1, #2
   11aa8:	ldrb	r3, [r2]
   11aac:	cmp	r3, #47	; 0x2f
   11ab0:	beq	11a8c <__mempcpy_chk@plt+0xa60>
   11ab4:	cmp	r3, #0
   11ab8:	beq	11ad4 <__mempcpy_chk@plt+0xaa8>
   11abc:	cmp	r3, #46	; 0x2e
   11ac0:	bne	11bac <__mempcpy_chk@plt+0xb80>
   11ac4:	ldrb	r1, [r1, #3]
   11ac8:	cmp	r1, #47	; 0x2f
   11acc:	cmpne	r1, #0
   11ad0:	bne	11bac <__mempcpy_chk@plt+0xb80>
   11ad4:	mov	r0, #47	; 0x2f
   11ad8:	strh	r0, [r6]
   11adc:	b	11bc0 <__mempcpy_chk@plt+0xb94>
   11ae0:	ldrb	r0, [r8]
   11ae4:	cmp	r0, #0
   11ae8:	beq	11c44 <__mempcpy_chk@plt+0xc18>
   11aec:	ldr	r9, [sp, #44]	; 0x2c
   11af0:	mov	r0, #0
   11af4:	movw	r1, #25991	; 0x6587
   11af8:	add	lr, sp, #1024	; 0x400
   11afc:	movt	r1, #1
   11b00:	strb	r0, [r6, -r9]
   11b04:	ldrb	r0, [r5]
   11b08:	cmp	r0, #0
   11b0c:	mov	r0, r5
   11b10:	moveq	r0, r1
   11b14:	add	r1, lr, #56	; 0x38
   11b18:	bl	15da4 <__mempcpy_chk@plt+0x4d78>
   11b1c:	cmp	r0, #0
   11b20:	bne	11ebc <__mempcpy_chk@plt+0xe90>
   11b24:	rsb	r0, r9, #0
   11b28:	ldr	r9, [sp, #20]
   11b2c:	ldrb	r1, [r8]
   11b30:	cmp	r9, #0
   11b34:	strb	r1, [r6, r0]
   11b38:	bne	11b70 <__mempcpy_chk@plt+0xb44>
   11b3c:	movw	r0, #12448	; 0x30a0
   11b40:	movw	r2, #12304	; 0x3010
   11b44:	movw	r3, #12360	; 0x3048
   11b48:	mov	r1, #0
   11b4c:	movt	r0, #1
   11b50:	movt	r2, #1
   11b54:	movt	r3, #1
   11b58:	str	r0, [sp]
   11b5c:	mov	r0, #7
   11b60:	bl	12538 <__mempcpy_chk@plt+0x150c>
   11b64:	mov	r9, r0
   11b68:	cmp	r0, #0
   11b6c:	beq	11eac <__mempcpy_chk@plt+0xe80>
   11b70:	add	lr, sp, #1024	; 0x400
   11b74:	mov	r0, r9
   11b78:	mov	r1, r8
   11b7c:	add	r2, lr, #56	; 0x38
   11b80:	bl	12048 <__mempcpy_chk@plt+0x101c>
   11b84:	cmp	r0, #0
   11b88:	str	r9, [sp, #20]
   11b8c:	beq	11c30 <__mempcpy_chk@plt+0xc04>
   11b90:	ldr	r7, [sp, #32]
   11b94:	cmp	r7, #2
   11b98:	bne	11eb0 <__mempcpy_chk@plt+0xe84>
   11b9c:	mov	r8, sl
   11ba0:	b	11d10 <__mempcpy_chk@plt+0xce4>
   11ba4:	cmp	r3, #0
   11ba8:	beq	11ad4 <__mempcpy_chk@plt+0xaa8>
   11bac:	ldr	r1, [sp, #40]	; 0x28
   11bb0:	cmp	r1, #0
   11bb4:	beq	11be0 <__mempcpy_chk@plt+0xbb4>
   11bb8:	cmp	r0, #0
   11bbc:	bne	11a68 <__mempcpy_chk@plt+0xa3c>
   11bc0:	mvn	r0, #99	; 0x63
   11bc4:	mov	r1, r5
   11bc8:	mov	r2, #0
   11bcc:	mov	r3, #512	; 0x200
   11bd0:	bl	10e1c <faccessat@plt>
   11bd4:	cmp	r0, #0
   11bd8:	bne	11bf0 <__mempcpy_chk@plt+0xbc4>
   11bdc:	b	11a68 <__mempcpy_chk@plt+0xa3c>
   11be0:	bl	10f54 <__errno_location@plt>
   11be4:	ldr	r0, [r0]
   11be8:	cmp	r0, #22
   11bec:	beq	11a68 <__mempcpy_chk@plt+0xa3c>
   11bf0:	mov	r4, #1
   11bf4:	cmp	r7, #1
   11bf8:	bne	11dd4 <__mempcpy_chk@plt+0xda8>
   11bfc:	bl	10f54 <__errno_location@plt>
   11c00:	ldr	r0, [r0]
   11c04:	cmp	r0, #2
   11c08:	bne	11dd4 <__mempcpy_chk@plt+0xda8>
   11c0c:	movw	r1, #27127	; 0x69f7
   11c10:	mov	r0, sl
   11c14:	movt	r1, #1
   11c18:	bl	11020 <strspn@plt>
   11c1c:	ldrb	r0, [sl, r0]
   11c20:	mov	r8, sl
   11c24:	cmp	r0, #0
   11c28:	beq	11a6c <__mempcpy_chk@plt+0xa40>
   11c2c:	b	11dd4 <__mempcpy_chk@plt+0xda8>
   11c30:	add	lr, sp, #1024	; 0x400
   11c34:	mov	r0, r9
   11c38:	mov	r1, r8
   11c3c:	add	r2, lr, #56	; 0x38
   11c40:	bl	11fcc <__mempcpy_chk@plt+0xfa0>
   11c44:	mov	r0, #0
   11c48:	strb	r0, [r7, r4]
   11c4c:	ldr	r0, [sp, #36]	; 0x24
   11c50:	ldr	r8, [fp, #-1064]	; 0xfffffbd8
   11c54:	tst	r0, #1
   11c58:	ldr	r0, [sp, #28]
   11c5c:	subne	r0, sl, r8
   11c60:	str	r0, [sp, #28]
   11c64:	mov	r0, sl
   11c68:	bl	10f48 <strlen@plt>
   11c6c:	adds	r9, r0, r4
   11c70:	str	r0, [sp, #44]	; 0x2c
   11c74:	bcs	11eac <__mempcpy_chk@plt+0xe80>
   11c78:	ldr	r0, [fp, #-1060]	; 0xfffffbdc
   11c7c:	cmp	r0, r9
   11c80:	bhi	11ca8 <__mempcpy_chk@plt+0xc7c>
   11c84:	sub	lr, fp, #1024	; 0x400
   11c88:	sub	r0, lr, #40	; 0x28
   11c8c:	bl	14ccc <__mempcpy_chk@plt+0x3ca0>
   11c90:	cmp	r0, #0
   11c94:	beq	11eac <__mempcpy_chk@plt+0xe80>
   11c98:	ldr	r0, [fp, #-1060]	; 0xfffffbdc
   11c9c:	cmp	r0, r9
   11ca0:	bls	11c84 <__mempcpy_chk@plt+0xc58>
   11ca4:	ldr	r8, [fp, #-1064]	; 0xfffffbd8
   11ca8:	ldr	r0, [sp, #36]	; 0x24
   11cac:	ldr	r1, [sp, #44]	; 0x2c
   11cb0:	tst	r0, #1
   11cb4:	ldr	r0, [sp, #28]
   11cb8:	add	r2, r1, #1
   11cbc:	addne	sl, r8, r0
   11cc0:	add	r0, r8, r4
   11cc4:	mov	r1, sl
   11cc8:	bl	10e04 <memmove@plt>
   11ccc:	mov	r0, r8
   11cd0:	mov	r1, r7
   11cd4:	mov	r2, r4
   11cd8:	bl	10e34 <memcpy@plt>
   11cdc:	ldrb	r0, [r7]
   11ce0:	cmp	r0, #47	; 0x2f
   11ce4:	bne	11d18 <__mempcpy_chk@plt+0xcec>
   11ce8:	mov	r0, r5
   11cec:	mov	r1, r7
   11cf0:	mov	r2, #0
   11cf4:	mvn	r3, #0
   11cf8:	bl	1102c <__mempcpy_chk@plt>
   11cfc:	mov	r6, r0
   11d00:	mov	r0, #47	; 0x2f
   11d04:	strb	r0, [r6], #1
   11d08:	mov	r0, #1
   11d0c:	str	r0, [sp, #36]	; 0x24
   11d10:	add	r9, sp, #48	; 0x30
   11d14:	b	11a6c <__mempcpy_chk@plt+0xa40>
   11d18:	add	r0, r5, #1
   11d1c:	mov	r1, #1
   11d20:	add	r9, sp, #48	; 0x30
   11d24:	cmp	r6, r0
   11d28:	str	r1, [sp, #36]	; 0x24
   11d2c:	bls	11a6c <__mempcpy_chk@plt+0xa40>
   11d30:	sub	r0, r6, #1
   11d34:	mov	r6, r0
   11d38:	cmp	r0, r5
   11d3c:	bls	11a6c <__mempcpy_chk@plt+0xa40>
   11d40:	mov	r0, r6
   11d44:	ldrb	r1, [r0, #-1]!
   11d48:	cmp	r1, #47	; 0x2f
   11d4c:	bne	11d34 <__mempcpy_chk@plt+0xd08>
   11d50:	b	11a6c <__mempcpy_chk@plt+0xa40>
   11d54:	uxtb	r1, r0
   11d58:	cmp	r1, #47	; 0x2f
   11d5c:	bne	11d6c <__mempcpy_chk@plt+0xd40>
   11d60:	ldrb	r0, [r8, #1]!
   11d64:	cmp	r0, #47	; 0x2f
   11d68:	beq	11d60 <__mempcpy_chk@plt+0xd34>
   11d6c:	mov	r1, r0
   11d70:	mov	sl, r8
   11d74:	b	11d7c <__mempcpy_chk@plt+0xd50>
   11d78:	ldrb	r1, [sl, #1]!
   11d7c:	uxtb	r1, r1
   11d80:	cmp	r1, #0
   11d84:	cmpne	r1, #47	; 0x2f
   11d88:	bne	11d78 <__mempcpy_chk@plt+0xd4c>
   11d8c:	sub	r2, sl, r8
   11d90:	cmp	r2, #1
   11d94:	beq	11968 <__mempcpy_chk@plt+0x93c>
   11d98:	cmp	r2, #2
   11d9c:	beq	11924 <__mempcpy_chk@plt+0x8f8>
   11da0:	cmp	r2, #0
   11da4:	bne	11974 <__mempcpy_chk@plt+0x948>
   11da8:	b	11db4 <__mempcpy_chk@plt+0xd88>
   11dac:	mov	r0, #0
   11db0:	str	r0, [sp, #20]
   11db4:	add	r0, r5, #1
   11db8:	cmp	r6, r0
   11dbc:	bls	11dd0 <__mempcpy_chk@plt+0xda4>
   11dc0:	mov	r0, r6
   11dc4:	ldrb	r1, [r0, #-1]!
   11dc8:	cmp	r1, #47	; 0x2f
   11dcc:	moveq	r6, r0
   11dd0:	mov	r4, #0
   11dd4:	ldr	r0, [sp, #20]
   11dd8:	cmp	r0, #0
   11ddc:	beq	11e40 <__mempcpy_chk@plt+0xe14>
   11de0:	bl	12864 <__mempcpy_chk@plt+0x1838>
   11de4:	b	11e40 <__mempcpy_chk@plt+0xe14>
   11de8:	bl	10f54 <__errno_location@plt>
   11dec:	ldr	r5, [sp, #8]
   11df0:	mov	r6, r0
   11df4:	add	r9, sp, #48	; 0x30
   11df8:	ldr	r0, [r6]
   11dfc:	cmp	r0, #34	; 0x22
   11e00:	bne	11e30 <__mempcpy_chk@plt+0xe04>
   11e04:	mov	r0, r9
   11e08:	bl	14c60 <__mempcpy_chk@plt+0x3c34>
   11e0c:	cmp	r0, #0
   11e10:	beq	11eac <__mempcpy_chk@plt+0xe80>
   11e14:	ldr	r5, [sp, #48]	; 0x30
   11e18:	ldr	r1, [sp, #52]	; 0x34
   11e1c:	mov	r0, r5
   11e20:	bl	10f30 <getcwd@plt>
   11e24:	cmp	r0, #0
   11e28:	beq	11df8 <__mempcpy_chk@plt+0xdcc>
   11e2c:	b	118dc <__mempcpy_chk@plt+0x8b0>
   11e30:	cmp	r0, #12
   11e34:	beq	11eac <__mempcpy_chk@plt+0xe80>
   11e38:	mov	r4, #1
   11e3c:	mov	r6, r5
   11e40:	ldr	r0, [fp, #-1064]	; 0xfffffbd8
   11e44:	ldr	r1, [sp, #12]
   11e48:	cmp	r0, r1
   11e4c:	beq	11e54 <__mempcpy_chk@plt+0xe28>
   11e50:	bl	12094 <__mempcpy_chk@plt+0x1068>
   11e54:	ldr	r0, [sp, #1184]	; 0x4a0
   11e58:	ldr	r1, [sp, #16]
   11e5c:	cmp	r0, r1
   11e60:	beq	11e68 <__mempcpy_chk@plt+0xe3c>
   11e64:	bl	12094 <__mempcpy_chk@plt+0x1068>
   11e68:	cmp	r4, #0
   11e6c:	beq	11e8c <__mempcpy_chk@plt+0xe60>
   11e70:	ldr	r0, [sp, #48]	; 0x30
   11e74:	ldr	r1, [sp, #8]
   11e78:	mov	r4, #0
   11e7c:	cmp	r0, r1
   11e80:	beq	1182c <__mempcpy_chk@plt+0x800>
   11e84:	bl	12094 <__mempcpy_chk@plt+0x1068>
   11e88:	b	1182c <__mempcpy_chk@plt+0x800>
   11e8c:	mov	r0, #0
   11e90:	strb	r0, [r6], #1
   11e94:	add	r0, sp, #48	; 0x30
   11e98:	sub	r1, r6, r5
   11e9c:	bl	14bfc <__mempcpy_chk@plt+0x3bd0>
   11ea0:	mov	r4, r0
   11ea4:	cmp	r0, #0
   11ea8:	bne	1182c <__mempcpy_chk@plt+0x800>
   11eac:	bl	15678 <__mempcpy_chk@plt+0x464c>
   11eb0:	bl	10f54 <__errno_location@plt>
   11eb4:	mov	r1, #40	; 0x28
   11eb8:	str	r1, [r0]
   11ebc:	mov	r4, #1
   11ec0:	b	11dd4 <__mempcpy_chk@plt+0xda8>
   11ec4:	movw	r1, #29004	; 0x714c
   11ec8:	movt	r1, #2
   11ecc:	str	r0, [r1]
   11ed0:	bx	lr
   11ed4:	movw	r1, #29008	; 0x7150
   11ed8:	movt	r1, #2
   11edc:	strb	r0, [r1]
   11ee0:	bx	lr
   11ee4:	push	{r4, r5, r6, sl, fp, lr}
   11ee8:	add	fp, sp, #16
   11eec:	sub	sp, sp, #8
   11ef0:	movw	r0, #28996	; 0x7144
   11ef4:	movt	r0, #2
   11ef8:	ldr	r0, [r0]
   11efc:	bl	15790 <__mempcpy_chk@plt+0x4764>
   11f00:	cmp	r0, #0
   11f04:	beq	11f2c <__mempcpy_chk@plt+0xf00>
   11f08:	movw	r0, #29008	; 0x7150
   11f0c:	movt	r0, #2
   11f10:	ldrb	r0, [r0]
   11f14:	cmp	r0, #0
   11f18:	beq	11f4c <__mempcpy_chk@plt+0xf20>
   11f1c:	bl	10f54 <__errno_location@plt>
   11f20:	ldr	r0, [r0]
   11f24:	cmp	r0, #32
   11f28:	bne	11f4c <__mempcpy_chk@plt+0xf20>
   11f2c:	movw	r0, #28992	; 0x7140
   11f30:	movt	r0, #2
   11f34:	ldr	r0, [r0]
   11f38:	bl	15790 <__mempcpy_chk@plt+0x4764>
   11f3c:	cmp	r0, #0
   11f40:	subeq	sp, fp, #16
   11f44:	popeq	{r4, r5, r6, sl, fp, pc}
   11f48:	b	11fbc <__mempcpy_chk@plt+0xf90>
   11f4c:	movw	r1, #25993	; 0x6589
   11f50:	mov	r0, #0
   11f54:	mov	r2, #5
   11f58:	movt	r1, #1
   11f5c:	bl	10e58 <dcgettext@plt>
   11f60:	mov	r4, r0
   11f64:	movw	r0, #29004	; 0x714c
   11f68:	movt	r0, #2
   11f6c:	ldr	r6, [r0]
   11f70:	bl	10f54 <__errno_location@plt>
   11f74:	ldr	r5, [r0]
   11f78:	cmp	r6, #0
   11f7c:	bne	11f98 <__mempcpy_chk@plt+0xf6c>
   11f80:	movw	r2, #26009	; 0x6599
   11f84:	mov	r0, #0
   11f88:	mov	r1, r5
   11f8c:	mov	r3, r4
   11f90:	movt	r2, #1
   11f94:	b	11fb8 <__mempcpy_chk@plt+0xf8c>
   11f98:	mov	r0, r6
   11f9c:	bl	14884 <__mempcpy_chk@plt+0x3858>
   11fa0:	movw	r2, #26005	; 0x6595
   11fa4:	mov	r3, r0
   11fa8:	str	r4, [sp]
   11fac:	mov	r0, #0
   11fb0:	mov	r1, r5
   11fb4:	movt	r2, #1
   11fb8:	bl	10edc <error@plt>
   11fbc:	movw	r0, #28908	; 0x70ec
   11fc0:	movt	r0, #2
   11fc4:	ldr	r0, [r0]
   11fc8:	bl	10e28 <_exit@plt>
   11fcc:	push	{r4, r5, r6, r7, fp, lr}
   11fd0:	add	fp, sp, #16
   11fd4:	cmp	r0, #0
   11fd8:	popeq	{r4, r5, r6, r7, fp, pc}
   11fdc:	mov	r5, r0
   11fe0:	mov	r0, #24
   11fe4:	mov	r6, r2
   11fe8:	mov	r7, r1
   11fec:	bl	15228 <__mempcpy_chk@plt+0x41fc>
   11ff0:	mov	r4, r0
   11ff4:	mov	r0, r7
   11ff8:	bl	15638 <__mempcpy_chk@plt+0x460c>
   11ffc:	str	r0, [r4]
   12000:	ldrd	r0, [r6, #96]	; 0x60
   12004:	str	r1, [r4, #12]
   12008:	str	r0, [r4, #8]
   1200c:	ldrd	r0, [r6]
   12010:	str	r1, [r4, #20]
   12014:	str	r0, [r4, #16]
   12018:	mov	r0, r5
   1201c:	mov	r1, r4
   12020:	bl	12ec0 <__mempcpy_chk@plt+0x1e94>
   12024:	cmp	r0, #0
   12028:	beq	12044 <__mempcpy_chk@plt+0x1018>
   1202c:	cmp	r0, r4
   12030:	beq	12040 <__mempcpy_chk@plt+0x1014>
   12034:	mov	r0, r4
   12038:	pop	{r4, r5, r6, r7, fp, lr}
   1203c:	b	130a0 <__mempcpy_chk@plt+0x2074>
   12040:	pop	{r4, r5, r6, r7, fp, pc}
   12044:	bl	15678 <__mempcpy_chk@plt+0x464c>
   12048:	cmp	r0, #0
   1204c:	moveq	r0, #0
   12050:	bxeq	lr
   12054:	push	{r4, r5, fp, lr}
   12058:	add	fp, sp, #8
   1205c:	sub	sp, sp, #24
   12060:	str	r1, [sp]
   12064:	mov	r1, sp
   12068:	ldrd	r4, [r2, #96]	; 0x60
   1206c:	str	r5, [sp, #12]
   12070:	str	r4, [sp, #8]
   12074:	ldrd	r2, [r2]
   12078:	str	r3, [sp, #20]
   1207c:	str	r2, [sp, #16]
   12080:	bl	12298 <__mempcpy_chk@plt+0x126c>
   12084:	cmp	r0, #0
   12088:	movwne	r0, #1
   1208c:	sub	sp, fp, #8
   12090:	pop	{r4, r5, fp, pc}
   12094:	push	{r4, r5, r6, sl, fp, lr}
   12098:	add	fp, sp, #16
   1209c:	mov	r4, r0
   120a0:	bl	10f54 <__errno_location@plt>
   120a4:	ldr	r6, [r0]
   120a8:	mov	r5, r0
   120ac:	mov	r0, r4
   120b0:	bl	10e10 <free@plt>
   120b4:	str	r6, [r5]
   120b8:	pop	{r4, r5, r6, sl, fp, pc}
   120bc:	andeq	r0, r0, r0
   120c0:	ldr	r0, [r0, #8]
   120c4:	bx	lr
   120c8:	ldr	r0, [r0, #12]
   120cc:	bx	lr
   120d0:	ldr	r0, [r0, #16]
   120d4:	bx	lr
   120d8:	ldm	r0, {r2, ip}
   120dc:	mov	r0, #0
   120e0:	cmp	r2, ip
   120e4:	bxcs	lr
   120e8:	mov	r0, #0
   120ec:	ldr	r1, [r2]
   120f0:	cmp	r1, #0
   120f4:	beq	12118 <__mempcpy_chk@plt+0x10ec>
   120f8:	mov	r3, #0
   120fc:	mov	r1, r2
   12100:	ldr	r1, [r1, #4]
   12104:	add	r3, r3, #1
   12108:	cmp	r1, #0
   1210c:	bne	12100 <__mempcpy_chk@plt+0x10d4>
   12110:	cmp	r3, r0
   12114:	movhi	r0, r3
   12118:	add	r2, r2, #8
   1211c:	cmp	r2, ip
   12120:	bcc	120ec <__mempcpy_chk@plt+0x10c0>
   12124:	bx	lr
   12128:	push	{fp, lr}
   1212c:	mov	fp, sp
   12130:	ldm	r0, {r3, ip}
   12134:	mov	lr, #0
   12138:	mov	r1, #0
   1213c:	cmp	r3, ip
   12140:	bcs	1217c <__mempcpy_chk@plt+0x1150>
   12144:	mov	r1, #0
   12148:	mov	lr, #0
   1214c:	ldr	r2, [r3]
   12150:	cmp	r2, #0
   12154:	beq	12170 <__mempcpy_chk@plt+0x1144>
   12158:	mov	r2, r3
   1215c:	ldr	r2, [r2, #4]
   12160:	add	r1, r1, #1
   12164:	cmp	r2, #0
   12168:	bne	1215c <__mempcpy_chk@plt+0x1130>
   1216c:	add	lr, lr, #1
   12170:	add	r3, r3, #8
   12174:	cmp	r3, ip
   12178:	bcc	1214c <__mempcpy_chk@plt+0x1120>
   1217c:	ldr	r2, [r0, #12]
   12180:	cmp	lr, r2
   12184:	bne	1219c <__mempcpy_chk@plt+0x1170>
   12188:	ldr	r2, [r0, #16]
   1218c:	mov	r0, #1
   12190:	cmp	r1, r2
   12194:	movne	r0, #0
   12198:	pop	{fp, pc}
   1219c:	mov	r0, #0
   121a0:	pop	{fp, pc}
   121a4:	nop	{0}
   121a8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   121ac:	add	fp, sp, #24
   121b0:	sub	sp, sp, #8
   121b4:	ldr	r6, [r0]
   121b8:	ldmib	r0, {r2, r7, r8}
   121bc:	ldr	r3, [r0, #16]
   121c0:	mov	r4, r1
   121c4:	mov	r5, #0
   121c8:	cmp	r6, r2
   121cc:	bcs	1220c <__mempcpy_chk@plt+0x11e0>
   121d0:	mov	r5, #0
   121d4:	ldr	r0, [r6]
   121d8:	cmp	r0, #0
   121dc:	beq	12200 <__mempcpy_chk@plt+0x11d4>
   121e0:	mov	r0, #0
   121e4:	mov	r1, r6
   121e8:	ldr	r1, [r1, #4]
   121ec:	add	r0, r0, #1
   121f0:	cmp	r1, #0
   121f4:	bne	121e8 <__mempcpy_chk@plt+0x11bc>
   121f8:	cmp	r0, r5
   121fc:	movhi	r5, r0
   12200:	add	r6, r6, #8
   12204:	cmp	r6, r2
   12208:	bcc	121d4 <__mempcpy_chk@plt+0x11a8>
   1220c:	movw	r2, #26012	; 0x659c
   12210:	mov	r0, r4
   12214:	mov	r1, #1
   12218:	movt	r2, #1
   1221c:	bl	10f90 <__fprintf_chk@plt>
   12220:	movw	r2, #26036	; 0x65b4
   12224:	mov	r0, r4
   12228:	mov	r1, #1
   1222c:	mov	r3, r7
   12230:	movt	r2, #1
   12234:	bl	10f90 <__fprintf_chk@plt>
   12238:	vldr	d16, [pc, #80]	; 12290 <__mempcpy_chk@plt+0x1264>
   1223c:	vmov	s0, r8
   12240:	movw	r2, #26060	; 0x65cc
   12244:	mov	r0, r4
   12248:	mov	r1, #1
   1224c:	mov	r3, r8
   12250:	vcvt.f64.u32	d17, s0
   12254:	vmov	s0, r7
   12258:	movt	r2, #1
   1225c:	vcvt.f64.u32	d18, s0
   12260:	vmul.f64	d16, d17, d16
   12264:	vdiv.f64	d16, d16, d18
   12268:	vstr	d16, [sp]
   1226c:	bl	10f90 <__fprintf_chk@plt>
   12270:	movw	r2, #26093	; 0x65ed
   12274:	mov	r0, r4
   12278:	mov	r1, #1
   1227c:	mov	r3, r5
   12280:	movt	r2, #1
   12284:	sub	sp, fp, #24
   12288:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   1228c:	b	10f90 <__fprintf_chk@plt>
   12290:	andeq	r0, r0, r0
   12294:	subsmi	r0, r9, r0
   12298:	push	{r4, r5, r6, r7, fp, lr}
   1229c:	add	fp, sp, #16
   122a0:	mov	r4, r1
   122a4:	ldr	r1, [r0, #8]
   122a8:	ldr	r2, [r0, #24]
   122ac:	mov	r5, r0
   122b0:	mov	r0, r4
   122b4:	blx	r2
   122b8:	ldr	r1, [r5, #8]
   122bc:	cmp	r0, r1
   122c0:	bcs	12320 <__mempcpy_chk@plt+0x12f4>
   122c4:	ldr	r7, [r5]
   122c8:	mov	r6, #0
   122cc:	ldr	r1, [r7, r0, lsl #3]!
   122d0:	cmp	r1, #0
   122d4:	cmpne	r7, #0
   122d8:	bne	12308 <__mempcpy_chk@plt+0x12dc>
   122dc:	mov	r0, r6
   122e0:	pop	{r4, r5, r6, r7, fp, pc}
   122e4:	ldr	r2, [r5, #28]
   122e8:	mov	r0, r4
   122ec:	blx	r2
   122f0:	cmp	r0, #0
   122f4:	bne	12318 <__mempcpy_chk@plt+0x12ec>
   122f8:	ldr	r7, [r7, #4]
   122fc:	cmp	r7, #0
   12300:	beq	122dc <__mempcpy_chk@plt+0x12b0>
   12304:	ldr	r1, [r7]
   12308:	cmp	r1, r4
   1230c:	bne	122e4 <__mempcpy_chk@plt+0x12b8>
   12310:	mov	r6, r4
   12314:	b	122dc <__mempcpy_chk@plt+0x12b0>
   12318:	ldr	r6, [r7]
   1231c:	b	122dc <__mempcpy_chk@plt+0x12b0>
   12320:	bl	11008 <abort@plt>
   12324:	ldr	r1, [r0, #16]
   12328:	cmp	r1, #0
   1232c:	moveq	r0, #0
   12330:	bxeq	lr
   12334:	ldm	r0, {r1, r2}
   12338:	b	12348 <__mempcpy_chk@plt+0x131c>
   1233c:	ldr	r0, [r1], #8
   12340:	cmp	r0, #0
   12344:	bxne	lr
   12348:	cmp	r1, r2
   1234c:	bcc	1233c <__mempcpy_chk@plt+0x1310>
   12350:	push	{fp, lr}
   12354:	mov	fp, sp
   12358:	bl	11008 <abort@plt>
   1235c:	push	{r4, r5, fp, lr}
   12360:	add	fp, sp, #8
   12364:	mov	r5, r1
   12368:	ldr	r1, [r0, #8]
   1236c:	ldr	r2, [r0, #24]
   12370:	mov	r4, r0
   12374:	mov	r0, r5
   12378:	blx	r2
   1237c:	ldr	r1, [r4, #8]
   12380:	cmp	r0, r1
   12384:	bcs	123e0 <__mempcpy_chk@plt+0x13b4>
   12388:	ldr	r1, [r4]
   1238c:	add	r2, r1, r0, lsl #3
   12390:	ldr	r3, [r2]
   12394:	ldr	r2, [r2, #4]
   12398:	cmp	r3, r5
   1239c:	beq	123ac <__mempcpy_chk@plt+0x1380>
   123a0:	cmp	r2, #0
   123a4:	bne	12390 <__mempcpy_chk@plt+0x1364>
   123a8:	b	123b8 <__mempcpy_chk@plt+0x138c>
   123ac:	cmp	r2, #0
   123b0:	ldrne	r0, [r2]
   123b4:	popne	{r4, r5, fp, pc}
   123b8:	ldr	r2, [r4, #4]
   123bc:	add	r0, r1, r0, lsl #3
   123c0:	add	r1, r0, #8
   123c4:	cmp	r1, r2
   123c8:	movcs	r0, #0
   123cc:	popcs	{r4, r5, fp, pc}
   123d0:	ldr	r0, [r1], #8
   123d4:	cmp	r0, #0
   123d8:	popne	{r4, r5, fp, pc}
   123dc:	b	123c4 <__mempcpy_chk@plt+0x1398>
   123e0:	bl	11008 <abort@plt>
   123e4:	push	{r4, r5, fp, lr}
   123e8:	add	fp, sp, #8
   123ec:	ldm	r0, {r5, lr}
   123f0:	mov	ip, r0
   123f4:	mov	r0, #0
   123f8:	cmp	r5, lr
   123fc:	bcs	12448 <__mempcpy_chk@plt+0x141c>
   12400:	mov	r0, #0
   12404:	ldr	r3, [r5]
   12408:	cmp	r3, #0
   1240c:	cmpne	r5, #0
   12410:	beq	1243c <__mempcpy_chk@plt+0x1410>
   12414:	mov	r3, r5
   12418:	cmp	r0, r2
   1241c:	popcs	{r4, r5, fp, pc}
   12420:	ldr	r4, [r3]
   12424:	str	r4, [r1, r0, lsl #2]
   12428:	add	r0, r0, #1
   1242c:	ldr	r3, [r3, #4]
   12430:	cmp	r3, #0
   12434:	bne	12418 <__mempcpy_chk@plt+0x13ec>
   12438:	ldr	lr, [ip, #4]
   1243c:	add	r5, r5, #8
   12440:	cmp	r5, lr
   12444:	bcc	12404 <__mempcpy_chk@plt+0x13d8>
   12448:	pop	{r4, r5, fp, pc}
   1244c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12450:	add	fp, sp, #24
   12454:	mov	r5, r1
   12458:	ldr	r4, [r0]
   1245c:	ldr	r1, [r0, #4]
   12460:	mov	r6, #0
   12464:	cmp	r4, r1
   12468:	bcs	124dc <__mempcpy_chk@plt+0x14b0>
   1246c:	mov	r9, r2
   12470:	mov	r8, r0
   12474:	mov	r6, #0
   12478:	b	124c0 <__mempcpy_chk@plt+0x1494>
   1247c:	mov	r1, r9
   12480:	blx	r5
   12484:	cmp	r0, #0
   12488:	beq	124dc <__mempcpy_chk@plt+0x14b0>
   1248c:	mov	r7, r4
   12490:	ldr	r7, [r7, #4]
   12494:	add	r6, r6, #1
   12498:	cmp	r7, #0
   1249c:	beq	124b8 <__mempcpy_chk@plt+0x148c>
   124a0:	ldr	r0, [r7]
   124a4:	mov	r1, r9
   124a8:	blx	r5
   124ac:	cmp	r0, #0
   124b0:	bne	12490 <__mempcpy_chk@plt+0x1464>
   124b4:	b	124dc <__mempcpy_chk@plt+0x14b0>
   124b8:	ldr	r1, [r8, #4]
   124bc:	b	124d0 <__mempcpy_chk@plt+0x14a4>
   124c0:	ldr	r0, [r4]
   124c4:	cmp	r0, #0
   124c8:	cmpne	r4, #0
   124cc:	bne	1247c <__mempcpy_chk@plt+0x1450>
   124d0:	add	r4, r4, #8
   124d4:	cmp	r4, r1
   124d8:	bcc	124c0 <__mempcpy_chk@plt+0x1494>
   124dc:	mov	r0, r6
   124e0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   124e4:	ldrb	r2, [r0]
   124e8:	cmp	r2, #0
   124ec:	moveq	r0, #0
   124f0:	bxeq	lr
   124f4:	add	r3, r0, #1
   124f8:	mov	r0, #0
   124fc:	rsb	r0, r0, r0, lsl #5
   12500:	uxtab	r0, r0, r2
   12504:	udiv	r2, r0, r1
   12508:	mls	r0, r2, r1, r0
   1250c:	ldrb	r2, [r3], #1
   12510:	cmp	r2, #0
   12514:	bne	124fc <__mempcpy_chk@plt+0x14d0>
   12518:	bx	lr
   1251c:	movw	r1, #26120	; 0x6608
   12520:	movt	r1, #1
   12524:	vld1.32	{d16-d17}, [r1]!
   12528:	ldr	r1, [r1]
   1252c:	vst1.32	{d16-d17}, [r0]!
   12530:	str	r1, [r0]
   12534:	bx	lr
   12538:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1253c:	add	fp, sp, #28
   12540:	sub	sp, sp, #4
   12544:	movw	sl, #9772	; 0x262c
   12548:	movw	r5, #9752	; 0x2618
   1254c:	cmp	r3, #0
   12550:	mov	r8, r0
   12554:	mov	r0, #40	; 0x28
   12558:	mov	r7, r1
   1255c:	movt	sl, #1
   12560:	movt	r5, #1
   12564:	movne	sl, r3
   12568:	cmp	r2, #0
   1256c:	movne	r5, r2
   12570:	bl	15710 <__mempcpy_chk@plt+0x46e4>
   12574:	mov	r9, #0
   12578:	cmp	r0, #0
   1257c:	beq	1260c <__mempcpy_chk@plt+0x15e0>
   12580:	movw	r6, #26120	; 0x6608
   12584:	cmp	r7, #0
   12588:	mov	r4, r0
   1258c:	movt	r6, #1
   12590:	movne	r6, r7
   12594:	str	r6, [r0, #20]
   12598:	bl	1263c <__mempcpy_chk@plt+0x1610>
   1259c:	cmp	r0, #0
   125a0:	beq	12604 <__mempcpy_chk@plt+0x15d8>
   125a4:	mov	r0, r8
   125a8:	mov	r1, r6
   125ac:	bl	126e8 <__mempcpy_chk@plt+0x16bc>
   125b0:	cmp	r0, #0
   125b4:	str	r0, [r4, #8]
   125b8:	beq	12604 <__mempcpy_chk@plt+0x15d8>
   125bc:	mov	r1, #8
   125c0:	bl	156bc <__mempcpy_chk@plt+0x4690>
   125c4:	cmp	r0, #0
   125c8:	str	r0, [r4]
   125cc:	beq	12604 <__mempcpy_chk@plt+0x15d8>
   125d0:	ldr	r1, [fp, #8]
   125d4:	mov	r2, #0
   125d8:	mov	r9, r4
   125dc:	str	r2, [r4, #12]
   125e0:	str	r2, [r4, #16]
   125e4:	str	r5, [r4, #24]
   125e8:	str	sl, [r4, #28]
   125ec:	str	r1, [r4, #32]
   125f0:	str	r2, [r4, #36]	; 0x24
   125f4:	ldr	r1, [r4, #8]
   125f8:	add	r0, r0, r1, lsl #3
   125fc:	str	r0, [r4, #4]
   12600:	b	1260c <__mempcpy_chk@plt+0x15e0>
   12604:	mov	r0, r4
   12608:	bl	12094 <__mempcpy_chk@plt+0x1068>
   1260c:	mov	r0, r9
   12610:	sub	sp, fp, #28
   12614:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12618:	ror	r2, r0, #3
   1261c:	udiv	r2, r2, r1
   12620:	mul	r1, r2, r1
   12624:	rsb	r0, r1, r0, ror #3
   12628:	bx	lr
   1262c:	sub	r0, r0, r1
   12630:	clz	r0, r0
   12634:	lsr	r0, r0, #5
   12638:	bx	lr
   1263c:	ldr	r3, [r0, #20]
   12640:	movw	r2, #26120	; 0x6608
   12644:	mov	r1, r0
   12648:	mov	r0, #1
   1264c:	movt	r2, #1
   12650:	cmp	r3, r2
   12654:	beq	126d8 <__mempcpy_chk@plt+0x16ac>
   12658:	vldr	s2, [pc, #124]	; 126dc <__mempcpy_chk@plt+0x16b0>
   1265c:	vldr	s0, [r3, #8]
   12660:	vcmpe.f32	s0, s2
   12664:	vmrs	APSR_nzcv, fpscr
   12668:	ble	126d0 <__mempcpy_chk@plt+0x16a4>
   1266c:	vldr	s4, [pc, #108]	; 126e0 <__mempcpy_chk@plt+0x16b4>
   12670:	vcmpe.f32	s0, s4
   12674:	vmrs	APSR_nzcv, fpscr
   12678:	bpl	126d0 <__mempcpy_chk@plt+0x16a4>
   1267c:	vldr	s4, [pc, #96]	; 126e4 <__mempcpy_chk@plt+0x16b8>
   12680:	vldr	s6, [r3, #12]
   12684:	vcmpe.f32	s6, s4
   12688:	vmrs	APSR_nzcv, fpscr
   1268c:	ble	126d0 <__mempcpy_chk@plt+0x16a4>
   12690:	vldr	s4, [r3]
   12694:	vcmpe.f32	s4, #0.0
   12698:	vmrs	APSR_nzcv, fpscr
   1269c:	blt	126d0 <__mempcpy_chk@plt+0x16a4>
   126a0:	vadd.f32	s2, s4, s2
   126a4:	vcmpe.f32	s2, s0
   126a8:	vmrs	APSR_nzcv, fpscr
   126ac:	bpl	126d0 <__mempcpy_chk@plt+0x16a4>
   126b0:	vldr	s0, [r3, #4]
   126b4:	vmov.f32	s4, #112	; 0x3f800000  1.0
   126b8:	vcmpe.f32	s0, s4
   126bc:	vmrs	APSR_nzcv, fpscr
   126c0:	bhi	126d0 <__mempcpy_chk@plt+0x16a4>
   126c4:	vcmpe.f32	s2, s0
   126c8:	vmrs	APSR_nzcv, fpscr
   126cc:	bxmi	lr
   126d0:	mov	r0, #0
   126d4:	str	r2, [r1, #20]
   126d8:	bx	lr
   126dc:	stclcc	12, cr12, [ip, #820]	; 0x334
   126e0:	svccc	0x00666666
   126e4:	svccc	0x008ccccd
   126e8:	ldrb	r2, [r1, #16]
   126ec:	cmp	r2, #0
   126f0:	bne	12720 <__mempcpy_chk@plt+0x16f4>
   126f4:	vldr	s0, [r1, #8]
   126f8:	vldr	s4, [pc, #160]	; 127a0 <__mempcpy_chk@plt+0x1774>
   126fc:	vmov	s2, r0
   12700:	mov	r0, #0
   12704:	vcvt.f32.u32	s2, s2
   12708:	vdiv.f32	s2, s2, s0
   1270c:	vcmpe.f32	s2, s4
   12710:	vcvt.u32.f32	s0, s2
   12714:	vmrs	APSR_nzcv, fpscr
   12718:	bxge	lr
   1271c:	vmov	r0, s0
   12720:	cmp	r0, #10
   12724:	movls	r0, #10
   12728:	orr	r0, r0, #1
   1272c:	b	12784 <__mempcpy_chk@plt+0x1758>
   12730:	mov	r1, #3
   12734:	cmp	r0, #10
   12738:	bcc	12770 <__mempcpy_chk@plt+0x1744>
   1273c:	mov	r1, #3
   12740:	mov	ip, #9
   12744:	mov	r2, #12
   12748:	udiv	r3, r0, r1
   1274c:	mls	r3, r3, r1, r0
   12750:	cmp	r3, #0
   12754:	beq	12770 <__mempcpy_chk@plt+0x1744>
   12758:	add	r3, ip, r2
   1275c:	add	r2, r2, #8
   12760:	add	r1, r1, #2
   12764:	add	ip, r3, #4
   12768:	cmp	ip, r0
   1276c:	bcc	12748 <__mempcpy_chk@plt+0x171c>
   12770:	udiv	r2, r0, r1
   12774:	mls	r1, r2, r1, r0
   12778:	cmp	r1, #0
   1277c:	bne	12794 <__mempcpy_chk@plt+0x1768>
   12780:	add	r0, r0, #2
   12784:	cmn	r0, #1
   12788:	bne	12730 <__mempcpy_chk@plt+0x1704>
   1278c:	mov	r0, #0
   12790:	bx	lr
   12794:	cmp	r0, #536870912	; 0x20000000
   12798:	movcs	r0, #0
   1279c:	bx	lr
   127a0:	svcmi	0x00800000
   127a4:	push	{r4, r5, r6, r7, fp, lr}
   127a8:	add	fp, sp, #16
   127ac:	mov	r4, r0
   127b0:	ldr	r5, [r0]
   127b4:	ldr	r0, [r0, #4]
   127b8:	cmp	r5, r0
   127bc:	bcs	12854 <__mempcpy_chk@plt+0x1828>
   127c0:	mov	r6, #0
   127c4:	ldr	r1, [r5]
   127c8:	cmp	r1, #0
   127cc:	beq	12848 <__mempcpy_chk@plt+0x181c>
   127d0:	ldr	r1, [r4, #32]
   127d4:	ldr	r7, [r5, #4]
   127d8:	cmp	r1, #0
   127dc:	mov	r0, r1
   127e0:	movwne	r0, #1
   127e4:	cmp	r7, #0
   127e8:	beq	1282c <__mempcpy_chk@plt+0x1800>
   127ec:	tst	r0, #1
   127f0:	beq	12800 <__mempcpy_chk@plt+0x17d4>
   127f4:	ldr	r0, [r7]
   127f8:	blx	r1
   127fc:	ldr	r1, [r4, #32]
   12800:	str	r6, [r7]
   12804:	cmp	r1, #0
   12808:	ldr	r0, [r4, #36]	; 0x24
   1280c:	ldr	r2, [r7, #4]
   12810:	str	r0, [r7, #4]
   12814:	mov	r0, r1
   12818:	str	r7, [r4, #36]	; 0x24
   1281c:	mov	r7, r2
   12820:	movwne	r0, #1
   12824:	cmp	r2, #0
   12828:	bne	127ec <__mempcpy_chk@plt+0x17c0>
   1282c:	cmp	r0, #0
   12830:	beq	1283c <__mempcpy_chk@plt+0x1810>
   12834:	ldr	r0, [r5]
   12838:	blx	r1
   1283c:	str	r6, [r5]
   12840:	str	r6, [r5, #4]
   12844:	ldr	r0, [r4, #4]
   12848:	add	r5, r5, #8
   1284c:	cmp	r5, r0
   12850:	bcc	127c4 <__mempcpy_chk@plt+0x1798>
   12854:	mov	r0, #0
   12858:	str	r0, [r4, #12]
   1285c:	str	r0, [r4, #16]
   12860:	pop	{r4, r5, r6, r7, fp, pc}
   12864:	push	{r4, r5, r6, sl, fp, lr}
   12868:	add	fp, sp, #16
   1286c:	mov	r4, r0
   12870:	ldr	r0, [r0, #32]
   12874:	cmp	r0, #0
   12878:	ldrne	r0, [r4, #16]
   1287c:	cmpne	r0, #0
   12880:	beq	128d8 <__mempcpy_chk@plt+0x18ac>
   12884:	ldr	r5, [r4]
   12888:	ldr	r1, [r4, #4]
   1288c:	b	128d0 <__mempcpy_chk@plt+0x18a4>
   12890:	ldr	r0, [r5]
   12894:	cmp	r0, #0
   12898:	cmpne	r5, #0
   1289c:	beq	128cc <__mempcpy_chk@plt+0x18a0>
   128a0:	ldr	r1, [r4, #32]
   128a4:	blx	r1
   128a8:	ldr	r6, [r5, #4]
   128ac:	b	128c0 <__mempcpy_chk@plt+0x1894>
   128b0:	ldr	r1, [r4, #32]
   128b4:	ldr	r0, [r6]
   128b8:	blx	r1
   128bc:	ldr	r6, [r6, #4]
   128c0:	cmp	r6, #0
   128c4:	bne	128b0 <__mempcpy_chk@plt+0x1884>
   128c8:	ldr	r1, [r4, #4]
   128cc:	add	r5, r5, #8
   128d0:	cmp	r5, r1
   128d4:	bcc	12890 <__mempcpy_chk@plt+0x1864>
   128d8:	ldr	r5, [r4]
   128dc:	ldr	r1, [r4, #4]
   128e0:	b	1290c <__mempcpy_chk@plt+0x18e0>
   128e4:	ldr	r0, [r5, #4]
   128e8:	cmp	r0, #0
   128ec:	beq	12908 <__mempcpy_chk@plt+0x18dc>
   128f0:	ldr	r6, [r0, #4]
   128f4:	bl	12094 <__mempcpy_chk@plt+0x1068>
   128f8:	cmp	r6, #0
   128fc:	mov	r0, r6
   12900:	bne	128f0 <__mempcpy_chk@plt+0x18c4>
   12904:	ldr	r1, [r4, #4]
   12908:	add	r5, r5, #8
   1290c:	cmp	r5, r1
   12910:	bcc	128e4 <__mempcpy_chk@plt+0x18b8>
   12914:	ldr	r0, [r4, #36]	; 0x24
   12918:	cmp	r0, #0
   1291c:	beq	12934 <__mempcpy_chk@plt+0x1908>
   12920:	ldr	r5, [r0, #4]
   12924:	bl	12094 <__mempcpy_chk@plt+0x1068>
   12928:	cmp	r5, #0
   1292c:	mov	r0, r5
   12930:	bne	12920 <__mempcpy_chk@plt+0x18f4>
   12934:	ldr	r0, [r4]
   12938:	bl	12094 <__mempcpy_chk@plt+0x1068>
   1293c:	mov	r0, r4
   12940:	pop	{r4, r5, r6, sl, fp, lr}
   12944:	b	12094 <__mempcpy_chk@plt+0x1068>
   12948:	push	{r4, r5, r6, r7, fp, lr}
   1294c:	add	fp, sp, #16
   12950:	sub	sp, sp, #40	; 0x28
   12954:	mov	r7, r0
   12958:	mov	r2, r1
   1295c:	mov	r4, r0
   12960:	ldr	r1, [r7, #20]!
   12964:	mov	r0, r2
   12968:	bl	126e8 <__mempcpy_chk@plt+0x16bc>
   1296c:	mov	r5, #0
   12970:	cmp	r0, #0
   12974:	beq	12a08 <__mempcpy_chk@plt+0x19dc>
   12978:	mov	r6, r0
   1297c:	ldr	r0, [r4, #8]
   12980:	cmp	r6, r0
   12984:	beq	12a04 <__mempcpy_chk@plt+0x19d8>
   12988:	mov	r0, r6
   1298c:	mov	r1, #8
   12990:	bl	156bc <__mempcpy_chk@plt+0x4690>
   12994:	cmp	r0, #0
   12998:	str	r0, [sp]
   1299c:	beq	12a08 <__mempcpy_chk@plt+0x19dc>
   129a0:	mov	r1, #0
   129a4:	add	r0, r0, r6, lsl #3
   129a8:	str	r6, [sp, #8]
   129ac:	mov	r5, sp
   129b0:	mov	r2, #0
   129b4:	str	r1, [sp, #12]
   129b8:	str	r1, [sp, #16]
   129bc:	str	r0, [sp, #4]
   129c0:	add	r0, r5, #20
   129c4:	mov	r1, r4
   129c8:	vld1.32	{d16-d17}, [r7]
   129cc:	vst1.32	{d16-d17}, [r0]
   129d0:	ldr	r0, [r4, #36]	; 0x24
   129d4:	str	r0, [sp, #36]	; 0x24
   129d8:	mov	r0, r5
   129dc:	bl	12a60 <__mempcpy_chk@plt+0x1a34>
   129e0:	cmp	r0, #0
   129e4:	beq	12a14 <__mempcpy_chk@plt+0x19e8>
   129e8:	ldr	r0, [r4]
   129ec:	bl	12094 <__mempcpy_chk@plt+0x1068>
   129f0:	mov	r0, #36	; 0x24
   129f4:	vld1.32	{d16-d17}, [r5], r0
   129f8:	vst1.32	{d16-d17}, [r4], r0
   129fc:	ldr	r0, [r5]
   12a00:	str	r0, [r4]
   12a04:	mov	r5, #1
   12a08:	mov	r0, r5
   12a0c:	sub	sp, fp, #16
   12a10:	pop	{r4, r5, r6, r7, fp, pc}
   12a14:	ldr	r0, [sp, #36]	; 0x24
   12a18:	mov	r1, sp
   12a1c:	mov	r2, #1
   12a20:	str	r0, [r4, #36]	; 0x24
   12a24:	mov	r0, r4
   12a28:	bl	12a60 <__mempcpy_chk@plt+0x1a34>
   12a2c:	cmp	r0, #0
   12a30:	beq	12a5c <__mempcpy_chk@plt+0x1a30>
   12a34:	mov	r1, sp
   12a38:	mov	r0, r4
   12a3c:	mov	r2, #0
   12a40:	mov	r5, #0
   12a44:	bl	12a60 <__mempcpy_chk@plt+0x1a34>
   12a48:	cmp	r0, #0
   12a4c:	beq	12a5c <__mempcpy_chk@plt+0x1a30>
   12a50:	ldr	r0, [sp]
   12a54:	bl	12094 <__mempcpy_chk@plt+0x1068>
   12a58:	b	12a08 <__mempcpy_chk@plt+0x19dc>
   12a5c:	bl	11008 <abort@plt>
   12a60:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12a64:	add	fp, sp, #28
   12a68:	sub	sp, sp, #12
   12a6c:	ldr	sl, [r1]
   12a70:	str	r1, [sp, #8]
   12a74:	ldr	r1, [r1, #4]
   12a78:	mov	r7, r0
   12a7c:	mov	r0, #1
   12a80:	str	r2, [sp, #4]
   12a84:	cmp	sl, r1
   12a88:	bcs	12be4 <__mempcpy_chk@plt+0x1bb8>
   12a8c:	add	r8, r7, #36	; 0x24
   12a90:	mov	r9, #0
   12a94:	ldr	r4, [sl]
   12a98:	cmp	r4, #0
   12a9c:	beq	12bcc <__mempcpy_chk@plt+0x1ba0>
   12aa0:	ldr	r5, [sl, #4]
   12aa4:	cmp	r5, #0
   12aa8:	beq	12b20 <__mempcpy_chk@plt+0x1af4>
   12aac:	ldr	r1, [r7, #8]
   12ab0:	ldr	r4, [r5]
   12ab4:	ldr	r2, [r7, #24]
   12ab8:	mov	r0, r4
   12abc:	blx	r2
   12ac0:	ldr	r1, [r7, #8]
   12ac4:	cmp	r0, r1
   12ac8:	bcs	12bf4 <__mempcpy_chk@plt+0x1bc8>
   12acc:	ldr	r3, [r7]
   12ad0:	ldr	r2, [r5, #4]
   12ad4:	ldr	r6, [r3, r0, lsl #3]
   12ad8:	cmp	r6, #0
   12adc:	beq	12aec <__mempcpy_chk@plt+0x1ac0>
   12ae0:	add	r0, r3, r0, lsl #3
   12ae4:	add	r0, r0, #4
   12ae8:	b	12b04 <__mempcpy_chk@plt+0x1ad8>
   12aec:	str	r4, [r3, r0, lsl #3]
   12af0:	ldr	r0, [r7, #12]
   12af4:	add	r0, r0, #1
   12af8:	str	r0, [r7, #12]
   12afc:	mov	r0, r8
   12b00:	str	r9, [r5]
   12b04:	ldr	r3, [r0]
   12b08:	cmp	r2, #0
   12b0c:	str	r3, [r5, #4]
   12b10:	str	r5, [r0]
   12b14:	mov	r5, r2
   12b18:	bne	12ab0 <__mempcpy_chk@plt+0x1a84>
   12b1c:	ldr	r4, [sl]
   12b20:	ldr	r0, [sp, #4]
   12b24:	str	r9, [sl, #4]
   12b28:	cmp	r0, #0
   12b2c:	bne	12bcc <__mempcpy_chk@plt+0x1ba0>
   12b30:	ldr	r1, [r7, #8]
   12b34:	ldr	r2, [r7, #24]
   12b38:	mov	r0, r4
   12b3c:	blx	r2
   12b40:	mov	r5, r0
   12b44:	ldr	r0, [r7, #8]
   12b48:	cmp	r5, r0
   12b4c:	bcs	12bf4 <__mempcpy_chk@plt+0x1bc8>
   12b50:	ldr	r6, [r7]
   12b54:	ldr	r0, [r6, r5, lsl #3]
   12b58:	cmp	r0, #0
   12b5c:	beq	12b7c <__mempcpy_chk@plt+0x1b50>
   12b60:	ldr	r0, [r8]
   12b64:	cmp	r0, #0
   12b68:	beq	12b90 <__mempcpy_chk@plt+0x1b64>
   12b6c:	mov	r1, r0
   12b70:	ldr	r2, [r1, #4]!
   12b74:	str	r2, [r8]
   12b78:	b	12ba4 <__mempcpy_chk@plt+0x1b78>
   12b7c:	str	r4, [r6, r5, lsl #3]
   12b80:	ldr	r0, [r7, #12]
   12b84:	add	r0, r0, #1
   12b88:	str	r0, [r7, #12]
   12b8c:	b	12bb8 <__mempcpy_chk@plt+0x1b8c>
   12b90:	mov	r0, #8
   12b94:	bl	15710 <__mempcpy_chk@plt+0x46e4>
   12b98:	cmp	r0, #0
   12b9c:	beq	12bec <__mempcpy_chk@plt+0x1bc0>
   12ba0:	add	r1, r0, #4
   12ba4:	str	r4, [r0]
   12ba8:	add	r2, r6, r5, lsl #3
   12bac:	ldr	r3, [r2, #4]
   12bb0:	str	r3, [r1]
   12bb4:	str	r0, [r2, #4]
   12bb8:	ldr	r1, [sp, #8]
   12bbc:	str	r9, [sl]
   12bc0:	ldr	r0, [r1, #12]
   12bc4:	sub	r0, r0, #1
   12bc8:	str	r0, [r1, #12]
   12bcc:	ldr	r0, [sp, #8]
   12bd0:	add	sl, sl, #8
   12bd4:	ldr	r0, [r0, #4]
   12bd8:	cmp	sl, r0
   12bdc:	bcc	12a94 <__mempcpy_chk@plt+0x1a68>
   12be0:	mov	r0, #1
   12be4:	sub	sp, fp, #28
   12be8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12bec:	mov	r0, #0
   12bf0:	b	12be4 <__mempcpy_chk@plt+0x1bb8>
   12bf4:	bl	11008 <abort@plt>
   12bf8:	push	{r4, r5, r6, r7, fp, lr}
   12bfc:	add	fp, sp, #16
   12c00:	sub	sp, sp, #8
   12c04:	cmp	r1, #0
   12c08:	beq	12d88 <__mempcpy_chk@plt+0x1d5c>
   12c0c:	mov	r7, r2
   12c10:	add	r2, sp, #4
   12c14:	mov	r3, #0
   12c18:	mov	r5, r1
   12c1c:	mov	r4, r0
   12c20:	mov	r6, #0
   12c24:	bl	12d90 <__mempcpy_chk@plt+0x1d64>
   12c28:	cmp	r0, #0
   12c2c:	beq	12c3c <__mempcpy_chk@plt+0x1c10>
   12c30:	cmp	r7, #0
   12c34:	strne	r0, [r7]
   12c38:	b	12d74 <__mempcpy_chk@plt+0x1d48>
   12c3c:	ldr	r0, [r4, #20]
   12c40:	vldr	s0, [r4, #8]
   12c44:	vldr	s2, [r4, #12]
   12c48:	vldr	s4, [r0, #8]
   12c4c:	vcvt.f32.u32	s0, s0
   12c50:	vcvt.f32.u32	s2, s2
   12c54:	vmul.f32	s0, s4, s0
   12c58:	vcmpe.f32	s0, s2
   12c5c:	vmrs	APSR_nzcv, fpscr
   12c60:	bpl	12cf4 <__mempcpy_chk@plt+0x1cc8>
   12c64:	mov	r0, r4
   12c68:	bl	1263c <__mempcpy_chk@plt+0x1610>
   12c6c:	vldr	s0, [r4, #8]
   12c70:	ldr	r0, [r4, #20]
   12c74:	vldr	s4, [r4, #12]
   12c78:	vcvt.f32.u32	s2, s0
   12c7c:	vldr	s0, [r0, #8]
   12c80:	vcvt.f32.u32	s4, s4
   12c84:	vmul.f32	s6, s0, s2
   12c88:	vcmpe.f32	s6, s4
   12c8c:	vmrs	APSR_nzcv, fpscr
   12c90:	bpl	12cf4 <__mempcpy_chk@plt+0x1cc8>
   12c94:	vldr	s4, [r0, #12]
   12c98:	ldrb	r0, [r0, #16]
   12c9c:	mvn	r6, #0
   12ca0:	vmul.f32	s2, s4, s2
   12ca4:	vldr	s4, [pc, #224]	; 12d8c <__mempcpy_chk@plt+0x1d60>
   12ca8:	cmp	r0, #0
   12cac:	vmul.f32	s0, s0, s2
   12cb0:	vseleq.f32	s0, s0, s2
   12cb4:	vcmpe.f32	s0, s4
   12cb8:	vmrs	APSR_nzcv, fpscr
   12cbc:	bge	12d74 <__mempcpy_chk@plt+0x1d48>
   12cc0:	vcvt.u32.f32	s0, s0
   12cc4:	mov	r0, r4
   12cc8:	vmov	r1, s0
   12ccc:	bl	12948 <__mempcpy_chk@plt+0x191c>
   12cd0:	cmp	r0, #0
   12cd4:	beq	12d74 <__mempcpy_chk@plt+0x1d48>
   12cd8:	add	r2, sp, #4
   12cdc:	mov	r0, r4
   12ce0:	mov	r1, r5
   12ce4:	mov	r3, #0
   12ce8:	bl	12d90 <__mempcpy_chk@plt+0x1d64>
   12cec:	cmp	r0, #0
   12cf0:	bne	12d88 <__mempcpy_chk@plt+0x1d5c>
   12cf4:	ldr	r6, [sp, #4]
   12cf8:	ldr	r0, [r6]
   12cfc:	cmp	r0, #0
   12d00:	beq	12d20 <__mempcpy_chk@plt+0x1cf4>
   12d04:	ldr	r0, [r4, #36]	; 0x24
   12d08:	cmp	r0, #0
   12d0c:	beq	12d40 <__mempcpy_chk@plt+0x1d14>
   12d10:	mov	r1, r0
   12d14:	ldr	r2, [r1, #4]!
   12d18:	str	r2, [r4, #36]	; 0x24
   12d1c:	b	12d54 <__mempcpy_chk@plt+0x1d28>
   12d20:	str	r5, [r6]
   12d24:	ldr	r0, [r4, #12]
   12d28:	ldr	r1, [r4, #16]
   12d2c:	add	r0, r0, #1
   12d30:	add	r1, r1, #1
   12d34:	str	r0, [r4, #12]
   12d38:	str	r1, [r4, #16]
   12d3c:	b	12d70 <__mempcpy_chk@plt+0x1d44>
   12d40:	mov	r0, #8
   12d44:	bl	15710 <__mempcpy_chk@plt+0x46e4>
   12d48:	cmp	r0, #0
   12d4c:	beq	12d80 <__mempcpy_chk@plt+0x1d54>
   12d50:	add	r1, r0, #4
   12d54:	str	r5, [r0]
   12d58:	ldr	r2, [r6, #4]
   12d5c:	str	r2, [r1]
   12d60:	str	r0, [r6, #4]
   12d64:	ldr	r0, [r4, #16]
   12d68:	add	r0, r0, #1
   12d6c:	str	r0, [r4, #16]
   12d70:	mov	r6, #1
   12d74:	mov	r0, r6
   12d78:	sub	sp, fp, #16
   12d7c:	pop	{r4, r5, r6, r7, fp, pc}
   12d80:	mvn	r6, #0
   12d84:	b	12d74 <__mempcpy_chk@plt+0x1d48>
   12d88:	bl	11008 <abort@plt>
   12d8c:	svcmi	0x00800000
   12d90:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12d94:	add	fp, sp, #24
   12d98:	mov	r7, r2
   12d9c:	mov	r4, r1
   12da0:	ldr	r1, [r0, #8]
   12da4:	ldr	r2, [r0, #24]
   12da8:	mov	r5, r0
   12dac:	mov	r8, r3
   12db0:	mov	r0, r4
   12db4:	blx	r2
   12db8:	ldr	r1, [r5, #8]
   12dbc:	cmp	r0, r1
   12dc0:	bcs	12ebc <__mempcpy_chk@plt+0x1e90>
   12dc4:	ldr	r1, [r5]
   12dc8:	add	r6, r1, r0, lsl #3
   12dcc:	str	r6, [r7]
   12dd0:	ldr	r1, [r1, r0, lsl #3]
   12dd4:	cmp	r1, #0
   12dd8:	beq	12e70 <__mempcpy_chk@plt+0x1e44>
   12ddc:	cmp	r1, r4
   12de0:	beq	12dfc <__mempcpy_chk@plt+0x1dd0>
   12de4:	ldr	r2, [r5, #28]
   12de8:	mov	r0, r4
   12dec:	blx	r2
   12df0:	cmp	r0, #0
   12df4:	beq	12e30 <__mempcpy_chk@plt+0x1e04>
   12df8:	ldr	r4, [r6]
   12dfc:	cmp	r8, #0
   12e00:	beq	12e74 <__mempcpy_chk@plt+0x1e48>
   12e04:	ldr	r0, [r6, #4]
   12e08:	cmp	r0, #0
   12e0c:	beq	12e7c <__mempcpy_chk@plt+0x1e50>
   12e10:	ldm	r0, {r1, r2}
   12e14:	stm	r6, {r1, r2}
   12e18:	mov	r1, #0
   12e1c:	str	r1, [r0]
   12e20:	ldr	r1, [r5, #36]	; 0x24
   12e24:	str	r1, [r0, #4]
   12e28:	str	r0, [r5, #36]	; 0x24
   12e2c:	b	12e74 <__mempcpy_chk@plt+0x1e48>
   12e30:	ldr	r0, [r6, #4]!
   12e34:	cmp	r0, #0
   12e38:	beq	12e70 <__mempcpy_chk@plt+0x1e44>
   12e3c:	ldr	r1, [r0]
   12e40:	cmp	r1, r4
   12e44:	beq	12e88 <__mempcpy_chk@plt+0x1e5c>
   12e48:	ldr	r2, [r5, #28]
   12e4c:	mov	r0, r4
   12e50:	blx	r2
   12e54:	ldr	r1, [r6]
   12e58:	cmp	r0, #0
   12e5c:	bne	12e90 <__mempcpy_chk@plt+0x1e64>
   12e60:	ldr	r0, [r1, #4]!
   12e64:	cmp	r0, #0
   12e68:	mov	r6, r1
   12e6c:	bne	12e3c <__mempcpy_chk@plt+0x1e10>
   12e70:	mov	r4, #0
   12e74:	mov	r0, r4
   12e78:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12e7c:	mov	r0, #0
   12e80:	str	r0, [r6]
   12e84:	b	12e74 <__mempcpy_chk@plt+0x1e48>
   12e88:	mov	r1, r0
   12e8c:	b	12e94 <__mempcpy_chk@plt+0x1e68>
   12e90:	ldr	r4, [r1]
   12e94:	cmp	r8, #0
   12e98:	beq	12e74 <__mempcpy_chk@plt+0x1e48>
   12e9c:	ldr	r0, [r1, #4]
   12ea0:	str	r0, [r6]
   12ea4:	mov	r0, #0
   12ea8:	str	r0, [r1]
   12eac:	ldr	r0, [r5, #36]	; 0x24
   12eb0:	str	r0, [r1, #4]
   12eb4:	str	r1, [r5, #36]	; 0x24
   12eb8:	b	12e74 <__mempcpy_chk@plt+0x1e48>
   12ebc:	bl	11008 <abort@plt>
   12ec0:	push	{r4, sl, fp, lr}
   12ec4:	add	fp, sp, #8
   12ec8:	sub	sp, sp, #8
   12ecc:	add	r2, sp, #4
   12ed0:	mov	r4, r1
   12ed4:	bl	12bf8 <__mempcpy_chk@plt+0x1bcc>
   12ed8:	cmn	r0, #1
   12edc:	beq	12ef0 <__mempcpy_chk@plt+0x1ec4>
   12ee0:	ldr	r1, [sp, #4]
   12ee4:	cmp	r0, #0
   12ee8:	moveq	r4, r1
   12eec:	b	12ef4 <__mempcpy_chk@plt+0x1ec8>
   12ef0:	mov	r4, #0
   12ef4:	mov	r0, r4
   12ef8:	sub	sp, fp, #8
   12efc:	pop	{r4, sl, fp, pc}
   12f00:	push	{r4, r5, r6, sl, fp, lr}
   12f04:	add	fp, sp, #16
   12f08:	sub	sp, sp, #8
   12f0c:	add	r2, sp, #4
   12f10:	mov	r3, #1
   12f14:	mov	r4, r0
   12f18:	bl	12d90 <__mempcpy_chk@plt+0x1d64>
   12f1c:	mov	r5, r0
   12f20:	cmp	r0, #0
   12f24:	beq	13000 <__mempcpy_chk@plt+0x1fd4>
   12f28:	ldr	r0, [r4, #16]
   12f2c:	sub	r0, r0, #1
   12f30:	str	r0, [r4, #16]
   12f34:	ldr	r0, [sp, #4]
   12f38:	ldr	r0, [r0]
   12f3c:	cmp	r0, #0
   12f40:	bne	13000 <__mempcpy_chk@plt+0x1fd4>
   12f44:	ldr	r0, [r4, #12]
   12f48:	vldr	s0, [r4, #8]
   12f4c:	sub	r0, r0, #1
   12f50:	str	r0, [r4, #12]
   12f54:	vmov	s4, r0
   12f58:	ldr	r1, [r4, #20]
   12f5c:	vldr	s2, [r1]
   12f60:	vcvt.f32.u32	s0, s0
   12f64:	vcvt.f32.u32	s4, s4
   12f68:	vmul.f32	s0, s2, s0
   12f6c:	vcmpe.f32	s0, s4
   12f70:	vmrs	APSR_nzcv, fpscr
   12f74:	ble	13000 <__mempcpy_chk@plt+0x1fd4>
   12f78:	mov	r0, r4
   12f7c:	bl	1263c <__mempcpy_chk@plt+0x1610>
   12f80:	vldr	s0, [r4, #8]
   12f84:	ldr	r0, [r4, #20]
   12f88:	vldr	s2, [r4, #12]
   12f8c:	vcvt.f32.u32	s0, s0
   12f90:	vldr	s4, [r0]
   12f94:	vcvt.f32.u32	s2, s2
   12f98:	vmul.f32	s4, s4, s0
   12f9c:	vcmpe.f32	s4, s2
   12fa0:	vmrs	APSR_nzcv, fpscr
   12fa4:	ble	13000 <__mempcpy_chk@plt+0x1fd4>
   12fa8:	ldrb	r1, [r0, #16]
   12fac:	vldr	s2, [r0, #4]
   12fb0:	cmp	r1, #0
   12fb4:	vmul.f32	s0, s2, s0
   12fb8:	vldreq	s2, [r0, #8]
   12fbc:	mov	r0, r4
   12fc0:	vmuleq.f32	s0, s0, s2
   12fc4:	vcvt.u32.f32	s0, s0
   12fc8:	vmov	r1, s0
   12fcc:	bl	12948 <__mempcpy_chk@plt+0x191c>
   12fd0:	cmp	r0, #0
   12fd4:	bne	13000 <__mempcpy_chk@plt+0x1fd4>
   12fd8:	ldr	r0, [r4, #36]	; 0x24
   12fdc:	cmp	r0, #0
   12fe0:	beq	12ff8 <__mempcpy_chk@plt+0x1fcc>
   12fe4:	ldr	r6, [r0, #4]
   12fe8:	bl	12094 <__mempcpy_chk@plt+0x1068>
   12fec:	cmp	r6, #0
   12ff0:	mov	r0, r6
   12ff4:	bne	12fe4 <__mempcpy_chk@plt+0x1fb8>
   12ff8:	mov	r0, #0
   12ffc:	str	r0, [r4, #36]	; 0x24
   13000:	mov	r0, r5
   13004:	sub	sp, fp, #16
   13008:	pop	{r4, r5, r6, sl, fp, pc}
   1300c:	b	12f00 <__mempcpy_chk@plt+0x1ed4>
   13010:	push	{r4, r5, fp, lr}
   13014:	add	fp, sp, #8
   13018:	mov	r5, r0
   1301c:	ldr	r0, [r0]
   13020:	mov	r4, r1
   13024:	bl	159ac <__mempcpy_chk@plt+0x4980>
   13028:	ldrd	r2, [r5, #8]
   1302c:	eor	r0, r2, r0
   13030:	mov	r1, r3
   13034:	mov	r2, r4
   13038:	mov	r3, #0
   1303c:	bl	15bb4 <__mempcpy_chk@plt+0x4b88>
   13040:	mov	r0, r2
   13044:	pop	{r4, r5, fp, pc}
   13048:	push	{r4, r5, r6, r7, fp, lr}
   1304c:	add	fp, sp, #16
   13050:	ldrd	r2, [r1, #8]
   13054:	ldrd	r4, [r0, #8]
   13058:	eor	r3, r5, r3
   1305c:	eor	r2, r4, r2
   13060:	orrs	r2, r2, r3
   13064:	mov	r2, #0
   13068:	bne	13098 <__mempcpy_chk@plt+0x206c>
   1306c:	ldrd	r4, [r1, #16]
   13070:	ldrd	r6, [r0, #16]
   13074:	eor	r3, r7, r5
   13078:	eor	r7, r6, r4
   1307c:	orrs	r3, r7, r3
   13080:	bne	13098 <__mempcpy_chk@plt+0x206c>
   13084:	ldr	r1, [r1]
   13088:	ldr	r0, [r0]
   1308c:	bl	10dec <strcmp@plt>
   13090:	clz	r0, r0
   13094:	lsr	r2, r0, #5
   13098:	mov	r0, r2
   1309c:	pop	{r4, r5, r6, r7, fp, pc}
   130a0:	push	{r4, sl, fp, lr}
   130a4:	add	fp, sp, #8
   130a8:	mov	r4, r0
   130ac:	ldr	r0, [r0]
   130b0:	bl	12094 <__mempcpy_chk@plt+0x1068>
   130b4:	mov	r0, r4
   130b8:	pop	{r4, sl, fp, lr}
   130bc:	b	12094 <__mempcpy_chk@plt+0x1068>
   130c0:	push	{r4, r5, fp, lr}
   130c4:	add	fp, sp, #8
   130c8:	cmp	r0, #0
   130cc:	beq	13160 <__mempcpy_chk@plt+0x2134>
   130d0:	mov	r1, #47	; 0x2f
   130d4:	mov	r4, r0
   130d8:	bl	10fc0 <strrchr@plt>
   130dc:	cmp	r0, #0
   130e0:	mov	r5, r4
   130e4:	addne	r5, r0, #1
   130e8:	sub	r0, r5, r4
   130ec:	cmp	r0, #7
   130f0:	blt	13144 <__mempcpy_chk@plt+0x2118>
   130f4:	movw	r1, #26196	; 0x6654
   130f8:	sub	r0, r5, #7
   130fc:	mov	r2, #7
   13100:	movt	r1, #1
   13104:	bl	10ffc <strncmp@plt>
   13108:	cmp	r0, #0
   1310c:	bne	13144 <__mempcpy_chk@plt+0x2118>
   13110:	movw	r1, #26204	; 0x665c
   13114:	mov	r0, r5
   13118:	mov	r2, #3
   1311c:	movt	r1, #1
   13120:	bl	10ffc <strncmp@plt>
   13124:	cmp	r0, #0
   13128:	beq	13134 <__mempcpy_chk@plt+0x2108>
   1312c:	mov	r4, r5
   13130:	b	13144 <__mempcpy_chk@plt+0x2118>
   13134:	movw	r0, #28976	; 0x7130
   13138:	add	r4, r5, #3
   1313c:	movt	r0, #2
   13140:	str	r4, [r0]
   13144:	movw	r0, #28980	; 0x7134
   13148:	movt	r0, #2
   1314c:	str	r4, [r0]
   13150:	movw	r0, #29012	; 0x7154
   13154:	movt	r0, #2
   13158:	str	r4, [r0]
   1315c:	pop	{r4, r5, fp, pc}
   13160:	movw	r0, #28992	; 0x7140
   13164:	movt	r0, #2
   13168:	ldr	r1, [r0]
   1316c:	movw	r0, #26140	; 0x661c
   13170:	movt	r0, #1
   13174:	bl	10ff0 <fputs@plt>
   13178:	bl	11008 <abort@plt>
   1317c:	push	{r4, r5, r6, sl, fp, lr}
   13180:	add	fp, sp, #16
   13184:	mov	r4, r0
   13188:	movw	r0, #29016	; 0x7158
   1318c:	movt	r0, #2
   13190:	cmp	r4, #0
   13194:	moveq	r4, r0
   13198:	bl	10f54 <__errno_location@plt>
   1319c:	ldr	r6, [r0]
   131a0:	mov	r5, r0
   131a4:	mov	r0, r4
   131a8:	mov	r1, #48	; 0x30
   131ac:	bl	15578 <__mempcpy_chk@plt+0x454c>
   131b0:	str	r6, [r5]
   131b4:	pop	{r4, r5, r6, sl, fp, pc}
   131b8:	movw	r1, #29016	; 0x7158
   131bc:	cmp	r0, #0
   131c0:	movt	r1, #2
   131c4:	movne	r1, r0
   131c8:	ldr	r0, [r1]
   131cc:	bx	lr
   131d0:	movw	r2, #29016	; 0x7158
   131d4:	cmp	r0, #0
   131d8:	movt	r2, #2
   131dc:	movne	r2, r0
   131e0:	str	r1, [r2]
   131e4:	bx	lr
   131e8:	movw	r3, #29016	; 0x7158
   131ec:	cmp	r0, #0
   131f0:	movt	r3, #2
   131f4:	movne	r3, r0
   131f8:	ubfx	r0, r1, #5, #3
   131fc:	and	r1, r1, #31
   13200:	add	r0, r3, r0, lsl #2
   13204:	ldr	r3, [r0, #8]
   13208:	eor	r2, r2, r3, lsr r1
   1320c:	and	r2, r2, #1
   13210:	eor	r2, r3, r2, lsl r1
   13214:	str	r2, [r0, #8]
   13218:	mov	r0, #1
   1321c:	and	r0, r0, r3, lsr r1
   13220:	bx	lr
   13224:	movw	r2, #29016	; 0x7158
   13228:	cmp	r0, #0
   1322c:	movt	r2, #2
   13230:	movne	r2, r0
   13234:	ldr	r0, [r2, #4]
   13238:	str	r1, [r2, #4]
   1323c:	bx	lr
   13240:	movw	r3, #29016	; 0x7158
   13244:	cmp	r0, #0
   13248:	movt	r3, #2
   1324c:	movne	r3, r0
   13250:	cmp	r1, #0
   13254:	mov	r0, #10
   13258:	cmpne	r2, #0
   1325c:	str	r0, [r3]
   13260:	bne	13270 <__mempcpy_chk@plt+0x2244>
   13264:	push	{fp, lr}
   13268:	mov	fp, sp
   1326c:	bl	11008 <abort@plt>
   13270:	str	r1, [r3, #40]	; 0x28
   13274:	str	r2, [r3, #44]	; 0x2c
   13278:	bx	lr
   1327c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13280:	add	fp, sp, #28
   13284:	sub	sp, sp, #20
   13288:	mov	r7, r0
   1328c:	ldr	r0, [fp, #8]
   13290:	movw	r5, #29016	; 0x7158
   13294:	mov	r8, r3
   13298:	mov	r9, r2
   1329c:	mov	sl, r1
   132a0:	movt	r5, #2
   132a4:	cmp	r0, #0
   132a8:	movne	r5, r0
   132ac:	bl	10f54 <__errno_location@plt>
   132b0:	mov	r4, r0
   132b4:	ldm	r5, {r0, r1}
   132b8:	ldr	r2, [r5, #40]	; 0x28
   132bc:	ldr	r3, [r5, #44]	; 0x2c
   132c0:	add	r5, r5, #8
   132c4:	ldr	r6, [r4]
   132c8:	stm	sp, {r0, r1, r5}
   132cc:	str	r2, [sp, #12]
   132d0:	str	r3, [sp, #16]
   132d4:	mov	r0, r7
   132d8:	mov	r1, sl
   132dc:	mov	r2, r9
   132e0:	mov	r3, r8
   132e4:	bl	132f4 <__mempcpy_chk@plt+0x22c8>
   132e8:	str	r6, [r4]
   132ec:	sub	sp, fp, #28
   132f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   132f4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   132f8:	add	fp, sp, #28
   132fc:	sub	sp, sp, #156	; 0x9c
   13300:	str	r0, [fp, #-56]	; 0xffffffc8
   13304:	ldr	r0, [fp, #12]
   13308:	mov	r4, r1
   1330c:	str	r3, [sp, #80]	; 0x50
   13310:	str	r2, [fp, #-84]	; 0xffffffac
   13314:	and	r1, r0, #4
   13318:	str	r1, [sp, #24]
   1331c:	and	r1, r0, #1
   13320:	str	r1, [sp, #28]
   13324:	ubfx	r7, r0, #1, #1
   13328:	bl	10eac <__ctype_get_mb_cur_max@plt>
   1332c:	str	r0, [sp, #32]
   13330:	ldr	r0, [fp, #24]
   13334:	ldr	r9, [fp, #8]
   13338:	mov	r2, #0
   1333c:	mov	r1, #0
   13340:	mov	r5, #0
   13344:	str	r2, [sp, #52]	; 0x34
   13348:	mov	r2, #1
   1334c:	str	r0, [sp, #72]	; 0x48
   13350:	ldr	r0, [fp, #20]
   13354:	str	r0, [sp, #64]	; 0x40
   13358:	mov	r0, #0
   1335c:	str	r0, [sp, #92]	; 0x5c
   13360:	mov	r0, #0
   13364:	str	r0, [fp, #-76]	; 0xffffffb4
   13368:	mov	r0, #0
   1336c:	cmp	r9, #10
   13370:	str	r1, [sp, #68]	; 0x44
   13374:	bhi	14374 <__mempcpy_chk@plt+0x3348>
   13378:	add	r1, pc, #28
   1337c:	ldr	ip, [fp, #-84]	; 0xffffffac
   13380:	ldr	lr, [sp, #80]	; 0x50
   13384:	mov	r6, r4
   13388:	mov	r8, #0
   1338c:	mov	r3, #1
   13390:	mov	sl, #0
   13394:	mov	r4, r2
   13398:	ldr	pc, [r1, r9, lsl #2]
   1339c:	andeq	r3, r1, ip, ror #8
   133a0:	andeq	r3, r1, r8, lsr #9
   133a4:	andeq	r3, r1, ip, ror r4
   133a8:	andeq	r3, r1, r4, ror #8
   133ac:	muleq	r1, ip, r4
   133b0:	strdeq	r3, [r1], -r4
   133b4:	andeq	r3, r1, ip, lsl #9
   133b8:	andeq	r3, r1, r4, asr r5
   133bc:	andeq	r3, r1, r8, asr #7
   133c0:	andeq	r3, r1, r8, asr #7
   133c4:	strdeq	r3, [r1], -r0
   133c8:	movw	r0, #26288	; 0x66b0
   133cc:	mov	r1, r9
   133d0:	movt	r0, #1
   133d4:	bl	14adc <__mempcpy_chk@plt+0x3ab0>
   133d8:	str	r0, [sp, #64]	; 0x40
   133dc:	movw	r0, #26290	; 0x66b2
   133e0:	mov	r1, r9
   133e4:	movt	r0, #1
   133e8:	bl	14adc <__mempcpy_chk@plt+0x3ab0>
   133ec:	str	r0, [sp, #72]	; 0x48
   133f0:	mov	r8, #0
   133f4:	mov	sl, r7
   133f8:	tst	r7, #1
   133fc:	str	r5, [fp, #-48]	; 0xffffffd0
   13400:	bne	1343c <__mempcpy_chk@plt+0x2410>
   13404:	ldr	r0, [sp, #64]	; 0x40
   13408:	ldrb	r0, [r0]
   1340c:	cmp	r0, #0
   13410:	beq	1343c <__mempcpy_chk@plt+0x2410>
   13414:	ldr	r1, [sp, #64]	; 0x40
   13418:	mov	r8, #0
   1341c:	add	r1, r1, #1
   13420:	cmp	r8, r6
   13424:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   13428:	strbcc	r0, [r2, r8]
   1342c:	ldrb	r0, [r1, r8]
   13430:	add	r8, r8, #1
   13434:	cmp	r0, #0
   13438:	bne	13420 <__mempcpy_chk@plt+0x23f4>
   1343c:	ldr	r7, [sp, #72]	; 0x48
   13440:	mov	r0, r7
   13444:	bl	10f48 <strlen@plt>
   13448:	ldr	ip, [fp, #-84]	; 0xffffffac
   1344c:	ldr	lr, [sp, #80]	; 0x50
   13450:	ldr	r5, [fp, #-48]	; 0xffffffd0
   13454:	str	r0, [fp, #-76]	; 0xffffffb4
   13458:	str	r7, [sp, #92]	; 0x5c
   1345c:	mov	r3, #1
   13460:	b	13554 <__mempcpy_chk@plt+0x2528>
   13464:	mov	r0, #1
   13468:	b	134a8 <__mempcpy_chk@plt+0x247c>
   1346c:	mov	r9, #0
   13470:	mov	r8, #0
   13474:	mov	r3, r0
   13478:	b	13550 <__mempcpy_chk@plt+0x2524>
   1347c:	tst	r7, #1
   13480:	bne	134a8 <__mempcpy_chk@plt+0x247c>
   13484:	mov	r3, r0
   13488:	b	134d0 <__mempcpy_chk@plt+0x24a4>
   1348c:	mov	r0, #1
   13490:	mov	r8, #0
   13494:	mov	r9, #5
   13498:	b	13508 <__mempcpy_chk@plt+0x24dc>
   1349c:	mov	r3, #1
   134a0:	tst	r7, #1
   134a4:	beq	134d0 <__mempcpy_chk@plt+0x24a4>
   134a8:	mov	r1, #1
   134ac:	mov	r8, #0
   134b0:	mov	r9, #2
   134b4:	mov	r3, r0
   134b8:	mov	sl, #1
   134bc:	str	r1, [fp, #-76]	; 0xffffffb4
   134c0:	movw	r1, #26290	; 0x66b2
   134c4:	movt	r1, #1
   134c8:	str	r1, [sp, #92]	; 0x5c
   134cc:	b	13554 <__mempcpy_chk@plt+0x2528>
   134d0:	cmp	r6, #0
   134d4:	mov	r8, #1
   134d8:	mov	r9, #2
   134dc:	ldrne	r1, [fp, #-56]	; 0xffffffc8
   134e0:	movne	r0, #39	; 0x27
   134e4:	strbne	r0, [r1]
   134e8:	movw	r0, #26290	; 0x66b2
   134ec:	movt	r0, #1
   134f0:	b	13544 <__mempcpy_chk@plt+0x2518>
   134f4:	mov	r9, #5
   134f8:	tst	r7, #1
   134fc:	beq	13524 <__mempcpy_chk@plt+0x24f8>
   13500:	mov	r0, #1
   13504:	mov	r8, #0
   13508:	str	r0, [fp, #-76]	; 0xffffffb4
   1350c:	movw	r0, #26286	; 0x66ae
   13510:	mov	r3, #1
   13514:	mov	sl, #1
   13518:	movt	r0, #1
   1351c:	str	r0, [sp, #92]	; 0x5c
   13520:	b	13554 <__mempcpy_chk@plt+0x2528>
   13524:	cmp	r6, #0
   13528:	mov	r8, #1
   1352c:	mov	r3, #1
   13530:	ldrne	r1, [fp, #-56]	; 0xffffffc8
   13534:	movne	r0, #34	; 0x22
   13538:	strbne	r0, [r1]
   1353c:	movw	r0, #26286	; 0x66ae
   13540:	movt	r0, #1
   13544:	str	r0, [sp, #92]	; 0x5c
   13548:	mov	r0, #1
   1354c:	str	r0, [fp, #-76]	; 0xffffffb4
   13550:	mov	sl, #0
   13554:	ldr	r0, [fp, #16]
   13558:	mov	r7, #0
   1355c:	str	r9, [fp, #-64]	; 0xffffffc0
   13560:	str	sl, [fp, #-72]	; 0xffffffb8
   13564:	str	r3, [sp, #84]	; 0x54
   13568:	cmp	r0, #0
   1356c:	movwne	r0, #1
   13570:	and	r0, r0, sl
   13574:	str	r0, [fp, #-88]	; 0xffffffa8
   13578:	ldr	r0, [fp, #-76]	; 0xffffffb4
   1357c:	cmp	r0, #0
   13580:	movwne	r0, #1
   13584:	subs	r2, r9, #2
   13588:	and	r1, r0, sl
   1358c:	str	r2, [fp, #-80]	; 0xffffffb0
   13590:	and	r1, r3, r1
   13594:	str	r1, [sp, #44]	; 0x2c
   13598:	clz	r1, r2
   1359c:	lsr	r1, r1, #5
   135a0:	and	r1, r1, sl
   135a4:	str	r1, [sp, #56]	; 0x38
   135a8:	mov	r1, r2
   135ac:	eor	r2, sl, #1
   135b0:	movwne	r1, #1
   135b4:	str	r2, [sp, #88]	; 0x58
   135b8:	orr	r2, r1, r2
   135bc:	and	r1, r1, r3
   135c0:	and	r0, r0, r1
   135c4:	str	r2, [sp, #60]	; 0x3c
   135c8:	str	r1, [fp, #-68]	; 0xffffffbc
   135cc:	str	r0, [fp, #-60]	; 0xffffffc4
   135d0:	eor	r0, r3, #1
   135d4:	str	r0, [sp, #48]	; 0x30
   135d8:	cmn	lr, #1
   135dc:	beq	135ec <__mempcpy_chk@plt+0x25c0>
   135e0:	cmp	r7, lr
   135e4:	bne	135f8 <__mempcpy_chk@plt+0x25cc>
   135e8:	b	141a4 <__mempcpy_chk@plt+0x3178>
   135ec:	ldrb	r0, [ip, r7]
   135f0:	cmp	r0, #0
   135f4:	beq	141ac <__mempcpy_chk@plt+0x3180>
   135f8:	ldr	r0, [fp, #-60]	; 0xffffffc4
   135fc:	mov	r9, #0
   13600:	str	r5, [fp, #-48]	; 0xffffffd0
   13604:	str	r6, [fp, #-52]	; 0xffffffcc
   13608:	cmp	r0, #0
   1360c:	beq	1364c <__mempcpy_chk@plt+0x2620>
   13610:	ldr	r0, [fp, #-76]	; 0xffffffb4
   13614:	mov	r5, r4
   13618:	add	r4, r7, r0
   1361c:	cmp	r0, #2
   13620:	bcc	1363c <__mempcpy_chk@plt+0x2610>
   13624:	cmn	lr, #1
   13628:	bne	1363c <__mempcpy_chk@plt+0x2610>
   1362c:	mov	r0, ip
   13630:	bl	10f48 <strlen@plt>
   13634:	ldr	ip, [fp, #-84]	; 0xffffffac
   13638:	mov	lr, r0
   1363c:	cmp	r4, lr
   13640:	bls	13654 <__mempcpy_chk@plt+0x2628>
   13644:	mov	r6, #0
   13648:	b	13694 <__mempcpy_chk@plt+0x2668>
   1364c:	mov	r6, #0
   13650:	b	13698 <__mempcpy_chk@plt+0x266c>
   13654:	ldr	r1, [sp, #92]	; 0x5c
   13658:	ldr	r2, [fp, #-76]	; 0xffffffb4
   1365c:	add	r0, ip, r7
   13660:	mov	r4, lr
   13664:	bl	10e4c <memcmp@plt>
   13668:	ldr	r2, [sp, #88]	; 0x58
   1366c:	cmp	r0, #0
   13670:	mov	r1, r0
   13674:	movwne	r1, #1
   13678:	orr	r1, r1, r2
   1367c:	tst	r1, #1
   13680:	beq	14240 <__mempcpy_chk@plt+0x3214>
   13684:	ldr	ip, [fp, #-84]	; 0xffffffac
   13688:	clz	r0, r0
   1368c:	mov	lr, r4
   13690:	lsr	r6, r0, #5
   13694:	mov	r4, r5
   13698:	ldrb	r5, [ip, r7]
   1369c:	cmp	r5, #126	; 0x7e
   136a0:	bhi	13a68 <__mempcpy_chk@plt+0x2a3c>
   136a4:	add	r3, pc, #16
   136a8:	mov	sl, #1
   136ac:	mov	r2, #110	; 0x6e
   136b0:	mov	r0, #97	; 0x61
   136b4:	mov	r1, #0
   136b8:	ldr	pc, [r3, r5, lsl #2]
   136bc:	andeq	r3, r1, ip, asr #18
   136c0:	andeq	r3, r1, r8, ror #20
   136c4:	andeq	r3, r1, r8, ror #20
   136c8:	andeq	r3, r1, r8, ror #20
   136cc:	andeq	r3, r1, r8, ror #20
   136d0:	andeq	r3, r1, r8, ror #20
   136d4:	andeq	r3, r1, r8, ror #20
   136d8:	andeq	r3, r1, ip, lsl #22
   136dc:	andeq	r3, r1, ip, lsr #18
   136e0:	andeq	r3, r1, r4, lsr #18
   136e4:	andeq	r3, r1, r8, lsr r9
   136e8:			; <UNDEFINED> instruction: 0x000139bc
   136ec:	andeq	r3, r1, ip, lsl r9
   136f0:	andeq	r3, r1, r4, lsr r9
   136f4:	andeq	r3, r1, r8, ror #20
   136f8:	andeq	r3, r1, r8, ror #20
   136fc:	andeq	r3, r1, r8, ror #20
   13700:	andeq	r3, r1, r8, ror #20
   13704:	andeq	r3, r1, r8, ror #20
   13708:	andeq	r3, r1, r8, ror #20
   1370c:	andeq	r3, r1, r8, ror #20
   13710:	andeq	r3, r1, r8, ror #20
   13714:	andeq	r3, r1, r8, ror #20
   13718:	andeq	r3, r1, r8, ror #20
   1371c:	andeq	r3, r1, r8, ror #20
   13720:	andeq	r3, r1, r8, ror #20
   13724:	andeq	r3, r1, r8, ror #20
   13728:	andeq	r3, r1, r8, ror #20
   1372c:	andeq	r3, r1, r8, ror #20
   13730:	andeq	r3, r1, r8, ror #20
   13734:	andeq	r3, r1, r8, ror #20
   13738:	andeq	r3, r1, r8, ror #20
   1373c:	andeq	r3, r1, ip, asr #21
   13740:	ldrdeq	r3, [r1], -r0
   13744:	ldrdeq	r3, [r1], -r0
   13748:	andeq	r3, r1, ip, asr #17
   1374c:	ldrdeq	r3, [r1], -r0
   13750:			; <UNDEFINED> instruction: 0x000138b8
   13754:	ldrdeq	r3, [r1], -r0
   13758:	andeq	r3, r1, r4, asr #19
   1375c:	ldrdeq	r3, [r1], -r0
   13760:	ldrdeq	r3, [r1], -r0
   13764:	ldrdeq	r3, [r1], -r0
   13768:			; <UNDEFINED> instruction: 0x000138b8
   1376c:			; <UNDEFINED> instruction: 0x000138b8
   13770:			; <UNDEFINED> instruction: 0x000138b8
   13774:			; <UNDEFINED> instruction: 0x000138b8
   13778:			; <UNDEFINED> instruction: 0x000138b8
   1377c:			; <UNDEFINED> instruction: 0x000138b8
   13780:			; <UNDEFINED> instruction: 0x000138b8
   13784:			; <UNDEFINED> instruction: 0x000138b8
   13788:			; <UNDEFINED> instruction: 0x000138b8
   1378c:			; <UNDEFINED> instruction: 0x000138b8
   13790:			; <UNDEFINED> instruction: 0x000138b8
   13794:			; <UNDEFINED> instruction: 0x000138b8
   13798:			; <UNDEFINED> instruction: 0x000138b8
   1379c:			; <UNDEFINED> instruction: 0x000138b8
   137a0:			; <UNDEFINED> instruction: 0x000138b8
   137a4:			; <UNDEFINED> instruction: 0x000138b8
   137a8:	ldrdeq	r3, [r1], -r0
   137ac:	ldrdeq	r3, [r1], -r0
   137b0:	ldrdeq	r3, [r1], -r0
   137b4:	ldrdeq	r3, [r1], -r0
   137b8:	muleq	r1, r0, r9
   137bc:	andeq	r3, r1, r8, ror #20
   137c0:			; <UNDEFINED> instruction: 0x000138b8
   137c4:			; <UNDEFINED> instruction: 0x000138b8
   137c8:			; <UNDEFINED> instruction: 0x000138b8
   137cc:			; <UNDEFINED> instruction: 0x000138b8
   137d0:			; <UNDEFINED> instruction: 0x000138b8
   137d4:			; <UNDEFINED> instruction: 0x000138b8
   137d8:			; <UNDEFINED> instruction: 0x000138b8
   137dc:			; <UNDEFINED> instruction: 0x000138b8
   137e0:			; <UNDEFINED> instruction: 0x000138b8
   137e4:			; <UNDEFINED> instruction: 0x000138b8
   137e8:			; <UNDEFINED> instruction: 0x000138b8
   137ec:			; <UNDEFINED> instruction: 0x000138b8
   137f0:			; <UNDEFINED> instruction: 0x000138b8
   137f4:			; <UNDEFINED> instruction: 0x000138b8
   137f8:			; <UNDEFINED> instruction: 0x000138b8
   137fc:			; <UNDEFINED> instruction: 0x000138b8
   13800:			; <UNDEFINED> instruction: 0x000138b8
   13804:			; <UNDEFINED> instruction: 0x000138b8
   13808:			; <UNDEFINED> instruction: 0x000138b8
   1380c:			; <UNDEFINED> instruction: 0x000138b8
   13810:			; <UNDEFINED> instruction: 0x000138b8
   13814:			; <UNDEFINED> instruction: 0x000138b8
   13818:			; <UNDEFINED> instruction: 0x000138b8
   1381c:			; <UNDEFINED> instruction: 0x000138b8
   13820:			; <UNDEFINED> instruction: 0x000138b8
   13824:			; <UNDEFINED> instruction: 0x000138b8
   13828:	ldrdeq	r3, [r1], -r0
   1382c:	strdeq	r3, [r1], -r8
   13830:			; <UNDEFINED> instruction: 0x000138b8
   13834:	ldrdeq	r3, [r1], -r0
   13838:			; <UNDEFINED> instruction: 0x000138b8
   1383c:	ldrdeq	r3, [r1], -r0
   13840:			; <UNDEFINED> instruction: 0x000138b8
   13844:			; <UNDEFINED> instruction: 0x000138b8
   13848:			; <UNDEFINED> instruction: 0x000138b8
   1384c:			; <UNDEFINED> instruction: 0x000138b8
   13850:			; <UNDEFINED> instruction: 0x000138b8
   13854:			; <UNDEFINED> instruction: 0x000138b8
   13858:			; <UNDEFINED> instruction: 0x000138b8
   1385c:			; <UNDEFINED> instruction: 0x000138b8
   13860:			; <UNDEFINED> instruction: 0x000138b8
   13864:			; <UNDEFINED> instruction: 0x000138b8
   13868:			; <UNDEFINED> instruction: 0x000138b8
   1386c:			; <UNDEFINED> instruction: 0x000138b8
   13870:			; <UNDEFINED> instruction: 0x000138b8
   13874:			; <UNDEFINED> instruction: 0x000138b8
   13878:			; <UNDEFINED> instruction: 0x000138b8
   1387c:			; <UNDEFINED> instruction: 0x000138b8
   13880:			; <UNDEFINED> instruction: 0x000138b8
   13884:			; <UNDEFINED> instruction: 0x000138b8
   13888:			; <UNDEFINED> instruction: 0x000138b8
   1388c:			; <UNDEFINED> instruction: 0x000138b8
   13890:			; <UNDEFINED> instruction: 0x000138b8
   13894:			; <UNDEFINED> instruction: 0x000138b8
   13898:			; <UNDEFINED> instruction: 0x000138b8
   1389c:			; <UNDEFINED> instruction: 0x000138b8
   138a0:			; <UNDEFINED> instruction: 0x000138b8
   138a4:			; <UNDEFINED> instruction: 0x000138b8
   138a8:	ldrdeq	r3, [r1], -ip
   138ac:	ldrdeq	r3, [r1], -r0
   138b0:	ldrdeq	r3, [r1], -ip
   138b4:	andeq	r3, r1, ip, asr #17
   138b8:	ldr	r0, [fp, #-68]	; 0xffffffbc
   138bc:	cmp	r0, #0
   138c0:	beq	13b20 <__mempcpy_chk@plt+0x2af4>
   138c4:	ldr	r0, [fp, #16]
   138c8:	b	13b24 <__mempcpy_chk@plt+0x2af8>
   138cc:	mov	sl, #0
   138d0:	cmp	r7, #0
   138d4:	bne	13d3c <__mempcpy_chk@plt+0x2d10>
   138d8:	b	13acc <__mempcpy_chk@plt+0x2aa0>
   138dc:	mov	sl, #0
   138e0:	cmn	lr, #1
   138e4:	beq	13ab8 <__mempcpy_chk@plt+0x2a8c>
   138e8:	cmp	r7, #0
   138ec:	cmpeq	lr, #1
   138f0:	bne	13d3c <__mempcpy_chk@plt+0x2d10>
   138f4:	b	13acc <__mempcpy_chk@plt+0x2aa0>
   138f8:	ldr	r0, [fp, #-64]	; 0xffffffc0
   138fc:	cmp	r0, #2
   13900:	bne	13af0 <__mempcpy_chk@plt+0x2ac4>
   13904:	ldr	r0, [fp, #-72]	; 0xffffffb8
   13908:	tst	r0, #1
   1390c:	bne	1425c <__mempcpy_chk@plt+0x3230>
   13910:	mov	r9, #0
   13914:	mov	r0, #92	; 0x5c
   13918:	b	13b04 <__mempcpy_chk@plt+0x2ad8>
   1391c:	mov	r0, #102	; 0x66
   13920:	b	13b0c <__mempcpy_chk@plt+0x2ae0>
   13924:	mov	r2, #116	; 0x74
   13928:	b	13938 <__mempcpy_chk@plt+0x290c>
   1392c:	mov	r0, #98	; 0x62
   13930:	b	13b0c <__mempcpy_chk@plt+0x2ae0>
   13934:	mov	r2, #114	; 0x72
   13938:	ldr	r0, [sp, #60]	; 0x3c
   1393c:	tst	r0, #1
   13940:	mov	r0, r2
   13944:	bne	13b0c <__mempcpy_chk@plt+0x2ae0>
   13948:	b	1425c <__mempcpy_chk@plt+0x3230>
   1394c:	ldr	r0, [sp, #84]	; 0x54
   13950:	tst	r0, #1
   13954:	beq	13bf8 <__mempcpy_chk@plt+0x2bcc>
   13958:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1395c:	tst	r0, #1
   13960:	bne	14364 <__mempcpy_chk@plt+0x3338>
   13964:	ldr	r0, [fp, #-64]	; 0xffffffc0
   13968:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1396c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   13970:	cmp	r0, #2
   13974:	ldr	r0, [fp, #-80]	; 0xffffffb0
   13978:	movwne	r0, #1
   1397c:	orr	r0, r0, r3
   13980:	tst	r0, #1
   13984:	beq	14078 <__mempcpy_chk@plt+0x304c>
   13988:	mov	r0, r8
   1398c:	b	140b8 <__mempcpy_chk@plt+0x308c>
   13990:	ldr	r0, [fp, #-64]	; 0xffffffc0
   13994:	mov	r9, #0
   13998:	mov	r5, #63	; 0x3f
   1399c:	cmp	r0, #5
   139a0:	beq	13d44 <__mempcpy_chk@plt+0x2d18>
   139a4:	cmp	r0, #2
   139a8:	bne	13e04 <__mempcpy_chk@plt+0x2dd8>
   139ac:	ldr	r0, [fp, #-72]	; 0xffffffb8
   139b0:	tst	r0, #1
   139b4:	beq	13e08 <__mempcpy_chk@plt+0x2ddc>
   139b8:	b	1425c <__mempcpy_chk@plt+0x3230>
   139bc:	mov	r0, #118	; 0x76
   139c0:	b	13b0c <__mempcpy_chk@plt+0x2ae0>
   139c4:	mov	r0, #1
   139c8:	mov	r5, #39	; 0x27
   139cc:	str	r0, [sp, #52]	; 0x34
   139d0:	ldr	r0, [fp, #-64]	; 0xffffffc0
   139d4:	cmp	r0, #2
   139d8:	bne	13a60 <__mempcpy_chk@plt+0x2a34>
   139dc:	ldr	r0, [fp, #-72]	; 0xffffffb8
   139e0:	tst	r0, #1
   139e4:	bne	1425c <__mempcpy_chk@plt+0x3230>
   139e8:	ldr	r3, [sp, #68]	; 0x44
   139ec:	ldr	r2, [fp, #-52]	; 0xffffffcc
   139f0:	mov	r9, #0
   139f4:	clz	r1, r2
   139f8:	cmp	r3, #0
   139fc:	mov	r0, r3
   13a00:	movwne	r0, #1
   13a04:	lsr	r1, r1, #5
   13a08:	orrs	r0, r0, r1
   13a0c:	moveq	r3, r2
   13a10:	moveq	r2, r0
   13a14:	cmp	r8, r2
   13a18:	str	r3, [sp, #68]	; 0x44
   13a1c:	str	r2, [fp, #-52]	; 0xffffffcc
   13a20:	ldrcc	r1, [fp, #-56]	; 0xffffffc8
   13a24:	movcc	r0, #39	; 0x27
   13a28:	strbcc	r0, [r1, r8]
   13a2c:	add	r0, r8, #1
   13a30:	cmp	r0, r2
   13a34:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   13a38:	movcc	r1, #92	; 0x5c
   13a3c:	strbcc	r1, [r3, r0]
   13a40:	add	r0, r8, #2
   13a44:	add	r8, r8, #3
   13a48:	cmp	r0, r2
   13a4c:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   13a50:	movcc	r1, #39	; 0x27
   13a54:	strbcc	r1, [r2, r0]
   13a58:	mov	r0, #0
   13a5c:	str	r0, [fp, #-48]	; 0xffffffd0
   13a60:	mov	sl, #1
   13a64:	b	138b8 <__mempcpy_chk@plt+0x288c>
   13a68:	ldr	r0, [sp, #32]
   13a6c:	cmp	r0, #1
   13a70:	bne	13c1c <__mempcpy_chk@plt+0x2bf0>
   13a74:	str	lr, [sp, #80]	; 0x50
   13a78:	bl	10f24 <__ctype_b_loc@plt>
   13a7c:	ldr	r0, [r0]
   13a80:	ldr	ip, [fp, #-84]	; 0xffffffac
   13a84:	mov	r1, #1
   13a88:	add	r0, r0, r5, lsl #1
   13a8c:	ldrb	r0, [r0, #1]
   13a90:	ubfx	sl, r0, #6, #1
   13a94:	ldr	r0, [sp, #48]	; 0x30
   13a98:	mov	r2, r1
   13a9c:	cmp	r1, #1
   13aa0:	orr	r0, sl, r0
   13aa4:	bhi	13e10 <__mempcpy_chk@plt+0x2de4>
   13aa8:	tst	r0, #1
   13aac:	beq	13e10 <__mempcpy_chk@plt+0x2de4>
   13ab0:	ldr	lr, [sp, #80]	; 0x50
   13ab4:	b	138b8 <__mempcpy_chk@plt+0x288c>
   13ab8:	cmp	r7, #0
   13abc:	bne	13d38 <__mempcpy_chk@plt+0x2d0c>
   13ac0:	ldrb	r0, [ip, #1]
   13ac4:	cmp	r0, #0
   13ac8:	bne	13d38 <__mempcpy_chk@plt+0x2d0c>
   13acc:	mov	r1, #1
   13ad0:	ldr	r0, [fp, #-64]	; 0xffffffc0
   13ad4:	cmp	r0, #2
   13ad8:	bne	13ae8 <__mempcpy_chk@plt+0x2abc>
   13adc:	ldr	r0, [fp, #-72]	; 0xffffffb8
   13ae0:	tst	r0, #1
   13ae4:	bne	1425c <__mempcpy_chk@plt+0x3230>
   13ae8:	mov	sl, r1
   13aec:	b	138b8 <__mempcpy_chk@plt+0x288c>
   13af0:	ldr	r1, [sp, #44]	; 0x2c
   13af4:	mov	r9, #0
   13af8:	mov	r0, #92	; 0x5c
   13afc:	cmp	r1, #0
   13b00:	beq	13b0c <__mempcpy_chk@plt+0x2ae0>
   13b04:	mov	sl, #0
   13b08:	b	14024 <__mempcpy_chk@plt+0x2ff8>
   13b0c:	ldr	r1, [sp, #84]	; 0x54
   13b10:	mov	sl, #0
   13b14:	mov	r9, #0
   13b18:	tst	r1, #1
   13b1c:	bne	13b58 <__mempcpy_chk@plt+0x2b2c>
   13b20:	ldr	r0, [fp, #-88]	; 0xffffffa8
   13b24:	cmp	r0, #0
   13b28:	mov	r0, r5
   13b2c:	beq	13b50 <__mempcpy_chk@plt+0x2b24>
   13b30:	ldr	r1, [fp, #16]
   13b34:	ubfx	r0, r5, #5, #3
   13b38:	mov	r2, #1
   13b3c:	ldr	r0, [r1, r0, lsl #2]
   13b40:	and	r1, r5, #31
   13b44:	tst	r0, r2, lsl r1
   13b48:	mov	r0, r5
   13b4c:	bne	13b58 <__mempcpy_chk@plt+0x2b2c>
   13b50:	cmp	r6, #0
   13b54:	beq	14024 <__mempcpy_chk@plt+0x2ff8>
   13b58:	ldr	r1, [fp, #-72]	; 0xffffffb8
   13b5c:	ldr	r6, [fp, #-52]	; 0xffffffcc
   13b60:	tst	r1, #1
   13b64:	bne	14238 <__mempcpy_chk@plt+0x320c>
   13b68:	ldr	r1, [fp, #-64]	; 0xffffffc0
   13b6c:	ldr	r5, [fp, #-48]	; 0xffffffd0
   13b70:	cmp	r1, #2
   13b74:	ldr	r1, [fp, #-80]	; 0xffffffb0
   13b78:	movwne	r1, #1
   13b7c:	orr	r1, r1, r5
   13b80:	tst	r1, #1
   13b84:	bne	13bc8 <__mempcpy_chk@plt+0x2b9c>
   13b88:	cmp	r8, r6
   13b8c:	mov	r5, #1
   13b90:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   13b94:	movcc	r1, #39	; 0x27
   13b98:	strbcc	r1, [r2, r8]
   13b9c:	add	r1, r8, #1
   13ba0:	cmp	r1, r6
   13ba4:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   13ba8:	movcc	r2, #36	; 0x24
   13bac:	strbcc	r2, [r3, r1]
   13bb0:	add	r1, r8, #2
   13bb4:	add	r8, r8, #3
   13bb8:	cmp	r1, r6
   13bbc:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   13bc0:	movcc	r2, #39	; 0x27
   13bc4:	strbcc	r2, [r3, r1]
   13bc8:	cmp	r8, r6
   13bcc:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   13bd0:	movcc	r1, #92	; 0x5c
   13bd4:	strbcc	r1, [r2, r8]
   13bd8:	add	r8, r8, #1
   13bdc:	cmp	r8, r6
   13be0:	and	r4, r4, sl
   13be4:	ldrcc	r1, [fp, #-56]	; 0xffffffc8
   13be8:	strbcc	r0, [r1, r8]
   13bec:	add	r8, r8, #1
   13bf0:	add	r7, r7, #1
   13bf4:	b	135d8 <__mempcpy_chk@plt+0x25ac>
   13bf8:	ldr	r0, [sp, #28]
   13bfc:	mov	sl, #0
   13c00:	mov	r9, #0
   13c04:	mov	r5, #0
   13c08:	cmp	r0, #0
   13c0c:	beq	13b20 <__mempcpy_chk@plt+0x2af4>
   13c10:	ldr	r6, [fp, #-52]	; 0xffffffcc
   13c14:	ldr	r5, [fp, #-48]	; 0xffffffd0
   13c18:	b	13bf0 <__mempcpy_chk@plt+0x2bc4>
   13c1c:	mov	r0, #0
   13c20:	cmn	lr, #1
   13c24:	str	r6, [sp, #76]	; 0x4c
   13c28:	str	r4, [sp, #20]
   13c2c:	str	r0, [fp, #-36]	; 0xffffffdc
   13c30:	str	r0, [fp, #-40]	; 0xffffffd8
   13c34:	bne	13c48 <__mempcpy_chk@plt+0x2c1c>
   13c38:	mov	r0, ip
   13c3c:	bl	10f48 <strlen@plt>
   13c40:	ldr	ip, [fp, #-84]	; 0xffffffac
   13c44:	mov	lr, r0
   13c48:	add	r0, ip, r7
   13c4c:	mov	sl, #1
   13c50:	mov	r6, #0
   13c54:	sub	r4, fp, #40	; 0x28
   13c58:	str	lr, [sp, #80]	; 0x50
   13c5c:	str	r0, [sp, #36]	; 0x24
   13c60:	str	r6, [sp, #40]	; 0x28
   13c64:	add	r6, r6, r7
   13c68:	sub	r0, fp, #44	; 0x2c
   13c6c:	mov	r3, r4
   13c70:	add	r1, ip, r6
   13c74:	sub	r2, lr, r6
   13c78:	bl	15a20 <__mempcpy_chk@plt+0x49f4>
   13c7c:	cmp	r0, #0
   13c80:	beq	1418c <__mempcpy_chk@plt+0x3160>
   13c84:	cmn	r0, #1
   13c88:	beq	1414c <__mempcpy_chk@plt+0x3120>
   13c8c:	ldr	lr, [sp, #80]	; 0x50
   13c90:	cmn	r0, #2
   13c94:	beq	14154 <__mempcpy_chk@plt+0x3128>
   13c98:	ldr	r2, [sp, #56]	; 0x38
   13c9c:	cmp	r0, #2
   13ca0:	mov	r1, #0
   13ca4:	movwcc	r1, #1
   13ca8:	eor	r2, r2, #1
   13cac:	orrs	r1, r2, r1
   13cb0:	bne	13cfc <__mempcpy_chk@plt+0x2cd0>
   13cb4:	ldr	r1, [sp, #40]	; 0x28
   13cb8:	ldr	r2, [sp, #36]	; 0x24
   13cbc:	add	ip, r2, r1
   13cc0:	mov	r2, #1
   13cc4:	ldrb	r3, [ip, r2]
   13cc8:	sub	r6, r3, #94	; 0x5e
   13ccc:	cmp	r6, #30
   13cd0:	bhi	13ce4 <__mempcpy_chk@plt+0x2cb8>
   13cd4:	mov	r4, #1
   13cd8:	mov	r1, #1073741829	; 0x40000005
   13cdc:	tst	r1, r4, lsl r6
   13ce0:	bne	14258 <__mempcpy_chk@plt+0x322c>
   13ce4:	sub	r3, r3, #91	; 0x5b
   13ce8:	cmp	r3, #2
   13cec:	bcc	14258 <__mempcpy_chk@plt+0x322c>
   13cf0:	add	r2, r2, #1
   13cf4:	cmp	r2, r0
   13cf8:	bcc	13cc4 <__mempcpy_chk@plt+0x2c98>
   13cfc:	ldr	r6, [sp, #40]	; 0x28
   13d00:	add	r6, r0, r6
   13d04:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13d08:	bl	10e88 <iswprint@plt>
   13d0c:	cmp	r0, #0
   13d10:	sub	r4, fp, #40	; 0x28
   13d14:	movwne	r0, #1
   13d18:	and	sl, sl, r0
   13d1c:	mov	r0, r4
   13d20:	bl	10e40 <mbsinit@plt>
   13d24:	ldr	lr, [sp, #80]	; 0x50
   13d28:	ldr	ip, [fp, #-84]	; 0xffffffac
   13d2c:	cmp	r0, #0
   13d30:	beq	13c60 <__mempcpy_chk@plt+0x2c34>
   13d34:	b	14194 <__mempcpy_chk@plt+0x3168>
   13d38:	mvn	lr, #0
   13d3c:	mov	r9, #0
   13d40:	b	138b8 <__mempcpy_chk@plt+0x288c>
   13d44:	ldr	r0, [sp, #24]
   13d48:	cmp	r0, #0
   13d4c:	beq	13e04 <__mempcpy_chk@plt+0x2dd8>
   13d50:	add	r0, r7, #2
   13d54:	cmp	r0, lr
   13d58:	bcs	13e04 <__mempcpy_chk@plt+0x2dd8>
   13d5c:	add	r1, ip, r7
   13d60:	ldrb	r1, [r1, #1]
   13d64:	cmp	r1, #63	; 0x3f
   13d68:	bne	13e04 <__mempcpy_chk@plt+0x2dd8>
   13d6c:	ldrb	r5, [ip, r0]
   13d70:	sub	r1, r5, #33	; 0x21
   13d74:	cmp	r1, #29
   13d78:	bhi	13e04 <__mempcpy_chk@plt+0x2dd8>
   13d7c:	movw	r3, #20929	; 0x51c1
   13d80:	mov	r2, #1
   13d84:	movt	r3, #14336	; 0x3800
   13d88:	tst	r3, r2, lsl r1
   13d8c:	beq	13e04 <__mempcpy_chk@plt+0x2dd8>
   13d90:	ldr	r1, [fp, #-72]	; 0xffffffb8
   13d94:	tst	r1, #1
   13d98:	bne	1436c <__mempcpy_chk@plt+0x3340>
   13d9c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   13da0:	mov	r7, r0
   13da4:	cmp	r8, r1
   13da8:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   13dac:	movcc	r1, #63	; 0x3f
   13db0:	strbcc	r1, [r2, r8]
   13db4:	ldr	r2, [fp, #-52]	; 0xffffffcc
   13db8:	add	r1, r8, #1
   13dbc:	cmp	r1, r2
   13dc0:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   13dc4:	movcc	r2, #34	; 0x22
   13dc8:	strbcc	r2, [r3, r1]
   13dcc:	ldr	r2, [fp, #-52]	; 0xffffffcc
   13dd0:	add	r1, r8, #2
   13dd4:	cmp	r1, r2
   13dd8:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   13ddc:	movcc	r2, #34	; 0x22
   13de0:	strbcc	r2, [r3, r1]
   13de4:	ldr	r2, [fp, #-52]	; 0xffffffcc
   13de8:	add	r1, r8, #3
   13dec:	add	r8, r8, #4
   13df0:	cmp	r1, r2
   13df4:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   13df8:	movcc	r2, #63	; 0x3f
   13dfc:	strbcc	r2, [r3, r1]
   13e00:	b	13e08 <__mempcpy_chk@plt+0x2ddc>
   13e04:	mov	r5, #63	; 0x3f
   13e08:	mov	sl, #0
   13e0c:	b	138b8 <__mempcpy_chk@plt+0x288c>
   13e10:	str	r0, [sp, #40]	; 0x28
   13e14:	add	r0, r2, r7
   13e18:	str	r6, [sp, #76]	; 0x4c
   13e1c:	add	r1, r7, #1
   13e20:	ldr	lr, [sp, #80]	; 0x50
   13e24:	ldr	r7, [fp, #-64]	; 0xffffffc0
   13e28:	ldr	r6, [fp, #-52]	; 0xffffffcc
   13e2c:	mov	r3, #0
   13e30:	str	r0, [sp, #36]	; 0x24
   13e34:	ldr	r0, [fp, #-48]	; 0xffffffd0
   13e38:	b	13ecc <__mempcpy_chk@plt+0x2ea0>
   13e3c:	str	r0, [sp, #76]	; 0x4c
   13e40:	ldr	r0, [fp, #-48]	; 0xffffffd0
   13e44:	cmp	r9, #0
   13e48:	movwne	r9, #1
   13e4c:	mvn	r7, r0
   13e50:	orr	r7, r7, r9
   13e54:	tst	r7, #1
   13e58:	bne	13ea8 <__mempcpy_chk@plt+0x2e7c>
   13e5c:	ldr	r6, [fp, #-52]	; 0xffffffcc
   13e60:	cmp	r8, r6
   13e64:	bcs	13e7c <__mempcpy_chk@plt+0x2e50>
   13e68:	ldr	r7, [fp, #-56]	; 0xffffffc8
   13e6c:	mov	r2, r4
   13e70:	mov	r4, #39	; 0x27
   13e74:	strb	r4, [r7, r8]
   13e78:	mov	r4, r2
   13e7c:	add	r7, r8, #1
   13e80:	cmp	r7, r6
   13e84:	bcs	13e9c <__mempcpy_chk@plt+0x2e70>
   13e88:	ldr	r0, [fp, #-56]	; 0xffffffc8
   13e8c:	mov	r2, r4
   13e90:	mov	r4, #39	; 0x27
   13e94:	strb	r4, [r0, r7]
   13e98:	mov	r4, r2
   13e9c:	add	r8, r8, #2
   13ea0:	mov	r0, #0
   13ea4:	b	13eb0 <__mempcpy_chk@plt+0x2e84>
   13ea8:	ldr	r6, [fp, #-52]	; 0xffffffcc
   13eac:	ldr	r0, [fp, #-48]	; 0xffffffd0
   13eb0:	cmp	r8, r6
   13eb4:	ldr	r7, [fp, #-64]	; 0xffffffc0
   13eb8:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   13ebc:	strbcc	r5, [r2, r8]
   13ec0:	add	r8, r8, #1
   13ec4:	ldrb	r5, [ip, r1]
   13ec8:	add	r1, r1, #1
   13ecc:	ldr	r2, [sp, #40]	; 0x28
   13ed0:	tst	r2, #1
   13ed4:	beq	13f10 <__mempcpy_chk@plt+0x2ee4>
   13ed8:	ldr	r2, [sp, #76]	; 0x4c
   13edc:	str	r0, [fp, #-48]	; 0xffffffd0
   13ee0:	tst	r2, #1
   13ee4:	beq	13f08 <__mempcpy_chk@plt+0x2edc>
   13ee8:	cmp	r8, r6
   13eec:	bcs	13f04 <__mempcpy_chk@plt+0x2ed8>
   13ef0:	ldr	r6, [fp, #-56]	; 0xffffffc8
   13ef4:	mov	r2, r4
   13ef8:	mov	r4, #92	; 0x5c
   13efc:	strb	r4, [r6, r8]
   13f00:	mov	r4, r2
   13f04:	add	r8, r8, #1
   13f08:	mov	r0, #0
   13f0c:	b	14004 <__mempcpy_chk@plt+0x2fd8>
   13f10:	ldr	r2, [fp, #-72]	; 0xffffffb8
   13f14:	tst	r2, #1
   13f18:	bne	14264 <__mempcpy_chk@plt+0x3238>
   13f1c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   13f20:	cmp	r7, #2
   13f24:	movwne	r3, #1
   13f28:	orr	r3, r3, r0
   13f2c:	tst	r3, #1
   13f30:	bne	13f8c <__mempcpy_chk@plt+0x2f60>
   13f34:	cmp	r8, r6
   13f38:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   13f3c:	movcc	r3, #39	; 0x27
   13f40:	strbcc	r3, [r2, r8]
   13f44:	add	r3, r8, #1
   13f48:	cmp	r3, r6
   13f4c:	bcs	13f64 <__mempcpy_chk@plt+0x2f38>
   13f50:	ldr	r2, [fp, #-56]	; 0xffffffc8
   13f54:	mov	r7, r4
   13f58:	mov	r4, #36	; 0x24
   13f5c:	strb	r4, [r2, r3]
   13f60:	mov	r4, r7
   13f64:	add	r3, r8, #2
   13f68:	cmp	r3, r6
   13f6c:	bcs	13f84 <__mempcpy_chk@plt+0x2f58>
   13f70:	ldr	r2, [fp, #-56]	; 0xffffffc8
   13f74:	mov	r7, r4
   13f78:	mov	r4, #39	; 0x27
   13f7c:	strb	r4, [r2, r3]
   13f80:	mov	r4, r7
   13f84:	add	r8, r8, #3
   13f88:	mov	r0, #1
   13f8c:	cmp	r8, r6
   13f90:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   13f94:	movcc	r3, #92	; 0x5c
   13f98:	strbcc	r3, [r2, r8]
   13f9c:	add	r3, r8, #1
   13fa0:	cmp	r3, r6
   13fa4:	bcs	13fc4 <__mempcpy_chk@plt+0x2f98>
   13fa8:	mov	r2, r4
   13fac:	and	r7, r5, #192	; 0xc0
   13fb0:	mov	r4, #48	; 0x30
   13fb4:	orr	r7, r4, r7, lsr #6
   13fb8:	mov	r4, r2
   13fbc:	ldr	r2, [fp, #-56]	; 0xffffffc8
   13fc0:	strb	r7, [r2, r3]
   13fc4:	add	r3, r8, #2
   13fc8:	cmp	r3, r6
   13fcc:	bcs	13fec <__mempcpy_chk@plt+0x2fc0>
   13fd0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   13fd4:	mov	r6, r4
   13fd8:	lsr	r7, r5, #3
   13fdc:	mov	r4, #6
   13fe0:	bfi	r7, r4, #3, #29
   13fe4:	mov	r4, r6
   13fe8:	strb	r7, [r2, r3]
   13fec:	str	r0, [fp, #-48]	; 0xffffffd0
   13ff0:	ldr	r0, [sp, #76]	; 0x4c
   13ff4:	mov	r3, #6
   13ff8:	add	r8, r8, #3
   13ffc:	bfi	r5, r3, #3, #29
   14000:	mov	r3, #1
   14004:	ldr	r2, [sp, #36]	; 0x24
   14008:	and	r9, r3, #1
   1400c:	cmp	r2, r1
   14010:	bhi	13e3c <__mempcpy_chk@plt+0x2e10>
   14014:	cmp	r9, #0
   14018:	sub	r7, r1, #1
   1401c:	mov	r0, r5
   14020:	movwne	r9, #1
   14024:	cmp	r9, #0
   14028:	bne	1406c <__mempcpy_chk@plt+0x3040>
   1402c:	ldr	r5, [fp, #-48]	; 0xffffffd0
   14030:	ldr	r6, [fp, #-52]	; 0xffffffcc
   14034:	tst	r5, #1
   14038:	beq	13bdc <__mempcpy_chk@plt+0x2bb0>
   1403c:	cmp	r8, r6
   14040:	mov	r5, #0
   14044:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   14048:	movcc	r1, #39	; 0x27
   1404c:	strbcc	r1, [r2, r8]
   14050:	add	r1, r8, #1
   14054:	add	r8, r8, #2
   14058:	cmp	r1, r6
   1405c:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   14060:	movcc	r2, #39	; 0x27
   14064:	strbcc	r2, [r3, r1]
   14068:	b	13bdc <__mempcpy_chk@plt+0x2bb0>
   1406c:	ldr	r6, [fp, #-52]	; 0xffffffcc
   14070:	ldr	r5, [fp, #-48]	; 0xffffffd0
   14074:	b	13bdc <__mempcpy_chk@plt+0x2bb0>
   14078:	cmp	r8, r1
   1407c:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   14080:	movcc	r0, #39	; 0x27
   14084:	strbcc	r0, [r2, r8]
   14088:	add	r0, r8, #1
   1408c:	cmp	r0, r1
   14090:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   14094:	movcc	r2, #36	; 0x24
   14098:	strbcc	r2, [r3, r0]
   1409c:	add	r0, r8, #2
   140a0:	cmp	r0, r1
   140a4:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   140a8:	movcc	r2, #39	; 0x27
   140ac:	strbcc	r2, [r3, r0]
   140b0:	add	r0, r8, #3
   140b4:	mov	r3, #1
   140b8:	cmp	r0, r1
   140bc:	add	r8, r0, #1
   140c0:	str	r3, [fp, #-48]	; 0xffffffd0
   140c4:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   140c8:	movcc	r1, #92	; 0x5c
   140cc:	strbcc	r1, [r2, r0]
   140d0:	ldr	r1, [fp, #-64]	; 0xffffffc0
   140d4:	cmp	r1, #2
   140d8:	beq	1413c <__mempcpy_chk@plt+0x3110>
   140dc:	add	r1, r7, #1
   140e0:	mov	sl, #0
   140e4:	mov	r9, #1
   140e8:	mov	r5, #48	; 0x30
   140ec:	cmp	r1, lr
   140f0:	bcs	138b8 <__mempcpy_chk@plt+0x288c>
   140f4:	ldrb	r1, [ip, r1]
   140f8:	sub	r1, r1, #48	; 0x30
   140fc:	uxtb	r1, r1
   14100:	cmp	r1, #9
   14104:	bhi	138b8 <__mempcpy_chk@plt+0x288c>
   14108:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1410c:	cmp	r8, r1
   14110:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   14114:	movcc	r1, #48	; 0x30
   14118:	strbcc	r1, [r2, r8]
   1411c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   14120:	add	r1, r0, #2
   14124:	add	r8, r0, #3
   14128:	cmp	r1, r2
   1412c:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   14130:	movcc	r2, #48	; 0x30
   14134:	strbcc	r2, [r3, r1]
   14138:	b	138b8 <__mempcpy_chk@plt+0x288c>
   1413c:	mov	r0, #48	; 0x30
   14140:	mov	r9, #1
   14144:	mov	sl, #0
   14148:	b	13b50 <__mempcpy_chk@plt+0x2b24>
   1414c:	mov	sl, #0
   14150:	b	1418c <__mempcpy_chk@plt+0x3160>
   14154:	mov	sl, #0
   14158:	cmp	lr, r6
   1415c:	bls	1418c <__mempcpy_chk@plt+0x3160>
   14160:	ldr	ip, [fp, #-84]	; 0xffffffac
   14164:	ldr	r6, [sp, #40]	; 0x28
   14168:	ldr	r0, [sp, #36]	; 0x24
   1416c:	ldrb	r0, [r0, r6]
   14170:	cmp	r0, #0
   14174:	beq	14194 <__mempcpy_chk@plt+0x3168>
   14178:	add	r6, r6, #1
   1417c:	add	r0, r7, r6
   14180:	cmp	r0, lr
   14184:	bcc	14168 <__mempcpy_chk@plt+0x313c>
   14188:	b	14194 <__mempcpy_chk@plt+0x3168>
   1418c:	ldr	ip, [fp, #-84]	; 0xffffffac
   14190:	ldr	r6, [sp, #40]	; 0x28
   14194:	mov	r1, r6
   14198:	ldr	r4, [sp, #20]
   1419c:	ldr	r6, [sp, #76]	; 0x4c
   141a0:	b	13a94 <__mempcpy_chk@plt+0x2a68>
   141a4:	mov	lr, r7
   141a8:	b	141b0 <__mempcpy_chk@plt+0x3184>
   141ac:	mvn	lr, #0
   141b0:	ldr	r9, [fp, #-64]	; 0xffffffc0
   141b4:	ldr	r1, [fp, #-72]	; 0xffffffb8
   141b8:	eor	r0, r9, #2
   141bc:	orr	r0, r0, r8
   141c0:	clz	r0, r0
   141c4:	lsr	r0, r0, #5
   141c8:	tst	r1, r0
   141cc:	bne	142c8 <__mempcpy_chk@plt+0x329c>
   141d0:	mov	r0, r1
   141d4:	ldr	r1, [fp, #-80]	; 0xffffffb0
   141d8:	cmp	r9, #2
   141dc:	movwne	r1, #1
   141e0:	orr	r0, r0, r1
   141e4:	tst	r0, #1
   141e8:	bne	14308 <__mempcpy_chk@plt+0x32dc>
   141ec:	ldr	r0, [sp, #52]	; 0x34
   141f0:	ldr	r1, [sp, #68]	; 0x44
   141f4:	str	lr, [sp, #80]	; 0x50
   141f8:	eor	r0, r0, #1
   141fc:	tst	r0, #1
   14200:	bne	14308 <__mempcpy_chk@plt+0x32dc>
   14204:	tst	r4, #1
   14208:	bne	142d0 <__mempcpy_chk@plt+0x32a4>
   1420c:	mov	r7, #0
   14210:	cmp	r1, #0
   14214:	beq	14300 <__mempcpy_chk@plt+0x32d4>
   14218:	ldr	r0, [sp, #84]	; 0x54
   1421c:	mov	r3, #0
   14220:	cmp	r6, #0
   14224:	mov	r2, #0
   14228:	mov	r4, r1
   1422c:	str	r3, [fp, #-72]	; 0xffffffb8
   14230:	beq	1336c <__mempcpy_chk@plt+0x2340>
   14234:	b	14308 <__mempcpy_chk@plt+0x32dc>
   14238:	ldr	r7, [fp, #-64]	; 0xffffffc0
   1423c:	b	14264 <__mempcpy_chk@plt+0x3238>
   14240:	ldr	ip, [fp, #-84]	; 0xffffffac
   14244:	mov	r2, #1
   14248:	mov	lr, r4
   1424c:	ldr	r7, [fp, #-64]	; 0xffffffc0
   14250:	ldr	r6, [fp, #-52]	; 0xffffffcc
   14254:	b	14268 <__mempcpy_chk@plt+0x323c>
   14258:	ldr	ip, [fp, #-84]	; 0xffffffac
   1425c:	mov	r7, #2
   14260:	ldr	r6, [fp, #-52]	; 0xffffffcc
   14264:	ldr	r2, [sp, #84]	; 0x54
   14268:	mov	r0, #0
   1426c:	ldr	r1, [fp, #12]
   14270:	tst	r2, #1
   14274:	mov	r2, r7
   14278:	mov	r3, lr
   1427c:	str	r0, [sp, #8]
   14280:	ldr	r0, [sp, #64]	; 0x40
   14284:	movwne	r2, #4
   14288:	cmp	r7, #2
   1428c:	movne	r2, r7
   14290:	str	r2, [sp]
   14294:	mov	r2, ip
   14298:	bic	r1, r1, #2
   1429c:	str	r0, [sp, #12]
   142a0:	ldr	r0, [sp, #72]	; 0x48
   142a4:	str	r1, [sp, #4]
   142a8:	mov	r1, r6
   142ac:	str	r0, [sp, #16]
   142b0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   142b4:	bl	132f4 <__mempcpy_chk@plt+0x22c8>
   142b8:	mov	r8, r0
   142bc:	mov	r0, r8
   142c0:	sub	sp, fp, #28
   142c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   142c8:	mov	r7, #2
   142cc:	b	14264 <__mempcpy_chk@plt+0x3238>
   142d0:	mov	r0, #5
   142d4:	ldr	r2, [fp, #-84]	; 0xffffffac
   142d8:	ldr	r3, [sp, #80]	; 0x50
   142dc:	str	r0, [sp]
   142e0:	ldr	r0, [fp, #12]
   142e4:	str	r0, [sp, #4]
   142e8:	ldr	r0, [fp, #16]
   142ec:	str	r0, [sp, #8]
   142f0:	ldr	r0, [sp, #64]	; 0x40
   142f4:	str	r0, [sp, #12]
   142f8:	ldr	r0, [sp, #72]	; 0x48
   142fc:	b	142ac <__mempcpy_chk@plt+0x3280>
   14300:	mov	r0, #0
   14304:	str	r0, [fp, #-72]	; 0xffffffb8
   14308:	ldr	r1, [sp, #92]	; 0x5c
   1430c:	cmp	r1, #0
   14310:	beq	14350 <__mempcpy_chk@plt+0x3324>
   14314:	ldr	r0, [fp, #-72]	; 0xffffffb8
   14318:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1431c:	tst	r0, #1
   14320:	bne	14354 <__mempcpy_chk@plt+0x3328>
   14324:	ldrb	r0, [r1]
   14328:	cmp	r0, #0
   1432c:	beq	14354 <__mempcpy_chk@plt+0x3328>
   14330:	add	r1, r1, #1
   14334:	cmp	r8, r6
   14338:	strbcc	r0, [r2, r8]
   1433c:	add	r8, r8, #1
   14340:	ldrb	r0, [r1], #1
   14344:	cmp	r0, #0
   14348:	bne	14334 <__mempcpy_chk@plt+0x3308>
   1434c:	b	14354 <__mempcpy_chk@plt+0x3328>
   14350:	ldr	r2, [fp, #-56]	; 0xffffffc8
   14354:	cmp	r8, r6
   14358:	movcc	r0, #0
   1435c:	strbcc	r0, [r2, r8]
   14360:	b	142bc <__mempcpy_chk@plt+0x3290>
   14364:	mov	r2, #1
   14368:	b	1424c <__mempcpy_chk@plt+0x3220>
   1436c:	mov	r7, #5
   14370:	b	14260 <__mempcpy_chk@plt+0x3234>
   14374:	bl	11008 <abort@plt>
   14378:	mov	r3, r2
   1437c:	mov	r2, #0
   14380:	b	14384 <__mempcpy_chk@plt+0x3358>
   14384:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14388:	add	fp, sp, #28
   1438c:	sub	sp, sp, #36	; 0x24
   14390:	movw	r8, #29016	; 0x7158
   14394:	cmp	r3, #0
   14398:	mov	r4, r2
   1439c:	str	r2, [sp, #24]
   143a0:	mov	r5, r1
   143a4:	mov	r6, r0
   143a8:	str	r0, [sp, #20]
   143ac:	movt	r8, #2
   143b0:	movne	r8, r3
   143b4:	bl	10f54 <__errno_location@plt>
   143b8:	str	r0, [sp, #28]
   143bc:	cmp	r4, #0
   143c0:	add	sl, r8, #8
   143c4:	ldm	r8, {r3, r9}
   143c8:	ldr	r7, [r0]
   143cc:	ldr	r1, [r8, #40]	; 0x28
   143d0:	ldr	r2, [r8, #44]	; 0x2c
   143d4:	mov	r0, #0
   143d8:	orreq	r9, r9, #1
   143dc:	str	r7, [sp, #32]
   143e0:	mov	r7, r5
   143e4:	stm	sp, {r3, r9, sl}
   143e8:	str	r1, [sp, #12]
   143ec:	str	r2, [sp, #16]
   143f0:	mov	r1, #0
   143f4:	mov	r2, r6
   143f8:	mov	r3, r5
   143fc:	bl	132f4 <__mempcpy_chk@plt+0x22c8>
   14400:	add	r4, r0, #1
   14404:	mov	r5, r0
   14408:	mov	r0, r4
   1440c:	bl	15258 <__mempcpy_chk@plt+0x422c>
   14410:	mov	r6, r0
   14414:	ldr	r0, [r8]
   14418:	ldr	r2, [r8, #44]	; 0x2c
   1441c:	ldr	r1, [r8, #40]	; 0x28
   14420:	mov	r3, r7
   14424:	stm	sp, {r0, r9, sl}
   14428:	str	r2, [sp, #16]
   1442c:	str	r1, [sp, #12]
   14430:	mov	r0, r6
   14434:	mov	r1, r4
   14438:	ldr	r2, [sp, #20]
   1443c:	bl	132f4 <__mempcpy_chk@plt+0x22c8>
   14440:	ldr	r0, [sp, #24]
   14444:	ldr	r1, [sp, #32]
   14448:	ldr	r2, [sp, #28]
   1444c:	cmp	r0, #0
   14450:	str	r1, [r2]
   14454:	strne	r5, [r0]
   14458:	mov	r0, r6
   1445c:	sub	sp, fp, #28
   14460:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14464:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14468:	add	fp, sp, #24
   1446c:	movw	r5, #28916	; 0x70f4
   14470:	movw	r8, #28912	; 0x70f0
   14474:	movt	r5, #2
   14478:	movt	r8, #2
   1447c:	ldr	r0, [r5]
   14480:	ldr	r4, [r8]
   14484:	cmp	r0, #2
   14488:	blt	144b4 <__mempcpy_chk@plt+0x3488>
   1448c:	add	r7, r4, #12
   14490:	mov	r6, #0
   14494:	ldr	r0, [r7, r6, lsl #3]
   14498:	bl	12094 <__mempcpy_chk@plt+0x1068>
   1449c:	ldr	r1, [r5]
   144a0:	add	r2, r6, #2
   144a4:	add	r0, r6, #1
   144a8:	mov	r6, r0
   144ac:	cmp	r2, r1
   144b0:	blt	14494 <__mempcpy_chk@plt+0x3468>
   144b4:	ldr	r0, [r4, #4]
   144b8:	movw	r7, #29064	; 0x7188
   144bc:	movt	r7, #2
   144c0:	cmp	r0, r7
   144c4:	beq	144dc <__mempcpy_chk@plt+0x34b0>
   144c8:	bl	12094 <__mempcpy_chk@plt+0x1068>
   144cc:	movw	r0, #28920	; 0x70f8
   144d0:	mov	r6, #256	; 0x100
   144d4:	movt	r0, #2
   144d8:	strd	r6, [r0]
   144dc:	movw	r6, #28920	; 0x70f8
   144e0:	movt	r6, #2
   144e4:	cmp	r4, r6
   144e8:	beq	144f8 <__mempcpy_chk@plt+0x34cc>
   144ec:	mov	r0, r4
   144f0:	bl	12094 <__mempcpy_chk@plt+0x1068>
   144f4:	str	r6, [r8]
   144f8:	mov	r0, #1
   144fc:	str	r0, [r5]
   14500:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14504:	movw	r3, #29016	; 0x7158
   14508:	mvn	r2, #0
   1450c:	movt	r3, #2
   14510:	b	14514 <__mempcpy_chk@plt+0x34e8>
   14514:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14518:	add	fp, sp, #28
   1451c:	sub	sp, sp, #44	; 0x2c
   14520:	mov	r7, r3
   14524:	str	r2, [sp, #36]	; 0x24
   14528:	str	r1, [sp, #32]
   1452c:	mov	r5, r0
   14530:	bl	10f54 <__errno_location@plt>
   14534:	cmp	r5, #0
   14538:	blt	146a4 <__mempcpy_chk@plt+0x3678>
   1453c:	cmn	r5, #-2147483647	; 0x80000001
   14540:	beq	146a4 <__mempcpy_chk@plt+0x3678>
   14544:	movw	r8, #28916	; 0x70f4
   14548:	movw	r4, #28912	; 0x70f0
   1454c:	str	r0, [sp, #28]
   14550:	ldr	r0, [r0]
   14554:	movt	r8, #2
   14558:	movt	r4, #2
   1455c:	ldr	r1, [r8]
   14560:	ldr	r6, [r4]
   14564:	str	r0, [sp, #24]
   14568:	cmp	r1, r5
   1456c:	ble	14578 <__mempcpy_chk@plt+0x354c>
   14570:	mov	sl, r6
   14574:	b	145e0 <__mempcpy_chk@plt+0x35b4>
   14578:	movw	r9, #28920	; 0x70f8
   1457c:	mov	r0, #8
   14580:	add	r2, r5, #1
   14584:	str	r1, [fp, #-32]	; 0xffffffe0
   14588:	mvn	r3, #-2147483648	; 0x80000000
   1458c:	movt	r9, #2
   14590:	str	r0, [sp]
   14594:	sub	r2, r2, r1
   14598:	sub	r1, fp, #32
   1459c:	subs	r0, r6, r9
   145a0:	movne	r0, r6
   145a4:	bl	15388 <__mempcpy_chk@plt+0x435c>
   145a8:	cmp	r6, r9
   145ac:	mov	sl, r0
   145b0:	str	r0, [r4]
   145b4:	ldrdeq	r0, [r9]
   145b8:	stmeq	sl, {r0, r1}
   145bc:	ldr	r1, [r8]
   145c0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   145c4:	add	r0, sl, r1, lsl #3
   145c8:	sub	r1, r2, r1
   145cc:	lsl	r2, r1, #3
   145d0:	mov	r1, #0
   145d4:	bl	10f6c <memset@plt>
   145d8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   145dc:	str	r0, [r8]
   145e0:	mov	r9, sl
   145e4:	ldr	r6, [r9, r5, lsl #3]!
   145e8:	ldr	r4, [r9, #4]!
   145ec:	ldm	r7, {r0, r1}
   145f0:	ldr	r2, [r7, #40]	; 0x28
   145f4:	ldr	r3, [r7, #44]	; 0x2c
   145f8:	orr	r8, r1, #1
   145fc:	add	r1, r7, #8
   14600:	stm	sp, {r0, r8}
   14604:	add	r0, sp, #8
   14608:	str	r1, [sp, #20]
   1460c:	stm	r0, {r1, r2, r3}
   14610:	mov	r0, r4
   14614:	mov	r1, r6
   14618:	ldr	r2, [sp, #32]
   1461c:	ldr	r3, [sp, #36]	; 0x24
   14620:	bl	132f4 <__mempcpy_chk@plt+0x22c8>
   14624:	cmp	r6, r0
   14628:	bhi	1468c <__mempcpy_chk@plt+0x3660>
   1462c:	add	r6, r0, #1
   14630:	movw	r0, #29064	; 0x7188
   14634:	movt	r0, #2
   14638:	str	r6, [sl, r5, lsl #3]
   1463c:	cmp	r4, r0
   14640:	beq	1464c <__mempcpy_chk@plt+0x3620>
   14644:	mov	r0, r4
   14648:	bl	12094 <__mempcpy_chk@plt+0x1068>
   1464c:	mov	r0, r6
   14650:	bl	15258 <__mempcpy_chk@plt+0x422c>
   14654:	str	r0, [r9]
   14658:	mov	r4, r0
   1465c:	add	r3, sp, #8
   14660:	ldr	r0, [r7]
   14664:	ldr	r1, [r7, #40]	; 0x28
   14668:	ldr	r2, [r7, #44]	; 0x2c
   1466c:	stm	sp, {r0, r8}
   14670:	ldr	r0, [sp, #20]
   14674:	stm	r3, {r0, r1, r2}
   14678:	mov	r0, r4
   1467c:	mov	r1, r6
   14680:	ldr	r2, [sp, #32]
   14684:	ldr	r3, [sp, #36]	; 0x24
   14688:	bl	132f4 <__mempcpy_chk@plt+0x22c8>
   1468c:	ldr	r0, [sp, #28]
   14690:	ldr	r1, [sp, #24]
   14694:	str	r1, [r0]
   14698:	mov	r0, r4
   1469c:	sub	sp, fp, #28
   146a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   146a4:	bl	11008 <abort@plt>
   146a8:	movw	r3, #29016	; 0x7158
   146ac:	movt	r3, #2
   146b0:	b	14514 <__mempcpy_chk@plt+0x34e8>
   146b4:	movw	r3, #29016	; 0x7158
   146b8:	mov	r1, r0
   146bc:	mov	r0, #0
   146c0:	mvn	r2, #0
   146c4:	movt	r3, #2
   146c8:	b	14514 <__mempcpy_chk@plt+0x34e8>
   146cc:	movw	r3, #29016	; 0x7158
   146d0:	mov	r2, r1
   146d4:	mov	r1, r0
   146d8:	mov	r0, #0
   146dc:	movt	r3, #2
   146e0:	b	14514 <__mempcpy_chk@plt+0x34e8>
   146e4:	push	{fp, lr}
   146e8:	mov	fp, sp
   146ec:	sub	sp, sp, #48	; 0x30
   146f0:	vmov.i32	q8, #0	; 0x00000000
   146f4:	mov	ip, #32
   146f8:	mov	r3, sp
   146fc:	mov	lr, r2
   14700:	cmp	r1, #10
   14704:	add	r2, r3, #16
   14708:	vst1.64	{d16-d17}, [r3], ip
   1470c:	vst1.64	{d16-d17}, [r3]
   14710:	vst1.64	{d16-d17}, [r2]
   14714:	beq	14734 <__mempcpy_chk@plt+0x3708>
   14718:	str	r1, [sp]
   1471c:	mov	r3, sp
   14720:	mov	r1, lr
   14724:	mvn	r2, #0
   14728:	bl	14514 <__mempcpy_chk@plt+0x34e8>
   1472c:	mov	sp, fp
   14730:	pop	{fp, pc}
   14734:	bl	11008 <abort@plt>
   14738:	push	{r4, sl, fp, lr}
   1473c:	add	fp, sp, #8
   14740:	sub	sp, sp, #48	; 0x30
   14744:	mov	ip, r3
   14748:	mov	r3, sp
   1474c:	vmov.i32	q8, #0	; 0x00000000
   14750:	mov	lr, #32
   14754:	cmp	r1, #10
   14758:	add	r4, r3, #16
   1475c:	vst1.64	{d16-d17}, [r3], lr
   14760:	vst1.64	{d16-d17}, [r3]
   14764:	vst1.64	{d16-d17}, [r4]
   14768:	beq	14788 <__mempcpy_chk@plt+0x375c>
   1476c:	str	r1, [sp]
   14770:	mov	r1, r2
   14774:	mov	r3, sp
   14778:	mov	r2, ip
   1477c:	bl	14514 <__mempcpy_chk@plt+0x34e8>
   14780:	sub	sp, fp, #8
   14784:	pop	{r4, sl, fp, pc}
   14788:	bl	11008 <abort@plt>
   1478c:	mov	r2, r1
   14790:	mov	r1, r0
   14794:	mov	r0, #0
   14798:	b	146e4 <__mempcpy_chk@plt+0x36b8>
   1479c:	mov	r3, r2
   147a0:	mov	r2, r1
   147a4:	mov	r1, r0
   147a8:	mov	r0, #0
   147ac:	b	14738 <__mempcpy_chk@plt+0x370c>
   147b0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   147b4:	add	fp, sp, #24
   147b8:	sub	sp, sp, #48	; 0x30
   147bc:	movw	r8, #29016	; 0x7158
   147c0:	mov	lr, r0
   147c4:	mov	r3, sp
   147c8:	mov	ip, r1
   147cc:	movt	r8, #2
   147d0:	mov	r1, r3
   147d4:	ldm	r8!, {r0, r4, r5, r6, r7, r9}
   147d8:	stmia	r1!, {r0, r4, r5, r6, r7, r9}
   147dc:	ldm	r8, {r0, r4, r5, r6, r7, r9}
   147e0:	stm	r1, {r0, r4, r5, r6, r7, r9}
   147e4:	ubfx	r0, r2, #5, #3
   147e8:	and	r2, r2, #31
   147ec:	mov	r4, #1
   147f0:	add	r0, r3, r0, lsl #2
   147f4:	ldr	r1, [r0, #8]
   147f8:	bic	r4, r4, r1, lsr r2
   147fc:	eor	r1, r1, r4, lsl r2
   14800:	mov	r2, ip
   14804:	str	r1, [r0, #8]
   14808:	mov	r0, #0
   1480c:	mov	r1, lr
   14810:	bl	14514 <__mempcpy_chk@plt+0x34e8>
   14814:	sub	sp, fp, #24
   14818:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1481c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14820:	add	fp, sp, #24
   14824:	sub	sp, sp, #48	; 0x30
   14828:	movw	lr, #29016	; 0x7158
   1482c:	mov	ip, r0
   14830:	mov	r3, sp
   14834:	movt	lr, #2
   14838:	mov	r2, r3
   1483c:	ldm	lr!, {r0, r4, r5, r6, r7, r8}
   14840:	stmia	r2!, {r0, r4, r5, r6, r7, r8}
   14844:	ldm	lr, {r0, r4, r5, r6, r7, r8}
   14848:	stm	r2, {r0, r4, r5, r6, r7, r8}
   1484c:	ubfx	r0, r1, #5, #3
   14850:	and	r1, r1, #31
   14854:	mov	r7, #1
   14858:	add	r0, r3, r0, lsl #2
   1485c:	ldr	r2, [r0, #8]
   14860:	bic	r7, r7, r2, lsr r1
   14864:	eor	r1, r2, r7, lsl r1
   14868:	mvn	r2, #0
   1486c:	str	r1, [r0, #8]
   14870:	mov	r0, #0
   14874:	mov	r1, ip
   14878:	bl	14514 <__mempcpy_chk@plt+0x34e8>
   1487c:	sub	sp, fp, #24
   14880:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14884:	push	{r4, r5, r6, r7, fp, lr}
   14888:	add	fp, sp, #16
   1488c:	sub	sp, sp, #48	; 0x30
   14890:	movw	lr, #29016	; 0x7158
   14894:	mov	ip, r0
   14898:	mov	r3, sp
   1489c:	movt	lr, #2
   148a0:	mov	r2, r3
   148a4:	ldm	lr!, {r0, r1, r4, r5, r6, r7}
   148a8:	stmia	r2!, {r0, r1, r4, r5, r6, r7}
   148ac:	ldm	lr, {r0, r1, r4, r5, r6, r7}
   148b0:	stm	r2, {r0, r1, r4, r5, r6, r7}
   148b4:	mov	r1, ip
   148b8:	mvn	r2, #0
   148bc:	ldr	r0, [sp, #12]
   148c0:	orr	r0, r0, #67108864	; 0x4000000
   148c4:	str	r0, [sp, #12]
   148c8:	mov	r0, #0
   148cc:	bl	14514 <__mempcpy_chk@plt+0x34e8>
   148d0:	sub	sp, fp, #16
   148d4:	pop	{r4, r5, r6, r7, fp, pc}
   148d8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   148dc:	add	fp, sp, #24
   148e0:	sub	sp, sp, #48	; 0x30
   148e4:	movw	r8, #29016	; 0x7158
   148e8:	mov	ip, r1
   148ec:	mov	lr, r0
   148f0:	mov	r3, sp
   148f4:	movt	r8, #2
   148f8:	mov	r2, r3
   148fc:	ldm	r8!, {r0, r1, r4, r5, r6, r7}
   14900:	stmia	r2!, {r0, r1, r4, r5, r6, r7}
   14904:	ldm	r8, {r0, r1, r4, r5, r6, r7}
   14908:	stm	r2, {r0, r1, r4, r5, r6, r7}
   1490c:	mov	r1, lr
   14910:	mov	r2, ip
   14914:	ldr	r0, [sp, #12]
   14918:	orr	r0, r0, #67108864	; 0x4000000
   1491c:	str	r0, [sp, #12]
   14920:	mov	r0, #0
   14924:	bl	14514 <__mempcpy_chk@plt+0x34e8>
   14928:	sub	sp, fp, #24
   1492c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14930:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14934:	add	fp, sp, #24
   14938:	sub	sp, sp, #96	; 0x60
   1493c:	mov	lr, sp
   14940:	vmov.i32	q8, #0	; 0x00000000
   14944:	mov	ip, r2
   14948:	cmp	r1, #10
   1494c:	add	r3, lr, #16
   14950:	mov	r2, lr
   14954:	vst1.64	{d16-d17}, [r3]
   14958:	mov	r3, #28
   1495c:	vst1.64	{d16-d17}, [r2], r3
   14960:	vst1.32	{d16-d17}, [r2]
   14964:	beq	149a4 <__mempcpy_chk@plt+0x3978>
   14968:	str	r1, [sp, #48]	; 0x30
   1496c:	add	r3, sp, #48	; 0x30
   14970:	ldm	lr!, {r2, r4, r5, r6, r7}
   14974:	add	r1, r3, #4
   14978:	stmia	r1!, {r2, r4, r5, r6, r7}
   1497c:	ldm	lr, {r2, r4, r5, r6, r7, r8}
   14980:	stm	r1, {r2, r4, r5, r6, r7, r8}
   14984:	mvn	r2, #0
   14988:	ldr	r1, [sp, #60]	; 0x3c
   1498c:	orr	r1, r1, #67108864	; 0x4000000
   14990:	str	r1, [sp, #60]	; 0x3c
   14994:	mov	r1, ip
   14998:	bl	14514 <__mempcpy_chk@plt+0x34e8>
   1499c:	sub	sp, fp, #24
   149a0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   149a4:	bl	11008 <abort@plt>
   149a8:	push	{fp, lr}
   149ac:	mov	fp, sp
   149b0:	sub	sp, sp, #8
   149b4:	mvn	ip, #0
   149b8:	str	ip, [sp]
   149bc:	bl	149c8 <__mempcpy_chk@plt+0x399c>
   149c0:	mov	sp, fp
   149c4:	pop	{fp, pc}
   149c8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   149cc:	add	fp, sp, #24
   149d0:	sub	sp, sp, #48	; 0x30
   149d4:	movw	ip, #29016	; 0x7158
   149d8:	mov	lr, r3
   149dc:	mov	r3, sp
   149e0:	cmp	r1, #0
   149e4:	movt	ip, #2
   149e8:	cmpne	r2, #0
   149ec:	ldm	ip!, {r4, r5, r6, r7, r8, r9}
   149f0:	stmia	r3!, {r4, r5, r6, r7, r8, r9}
   149f4:	ldm	ip, {r4, r5, r6, r7, r8, r9}
   149f8:	stm	r3, {r4, r5, r6, r7, r8, r9}
   149fc:	mov	r3, #10
   14a00:	str	r3, [sp]
   14a04:	bne	14a0c <__mempcpy_chk@plt+0x39e0>
   14a08:	bl	11008 <abort@plt>
   14a0c:	ldr	ip, [fp, #8]
   14a10:	str	r2, [sp, #44]	; 0x2c
   14a14:	str	r1, [sp, #40]	; 0x28
   14a18:	mov	r3, sp
   14a1c:	mov	r1, lr
   14a20:	mov	r2, ip
   14a24:	bl	14514 <__mempcpy_chk@plt+0x34e8>
   14a28:	sub	sp, fp, #24
   14a2c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   14a30:	push	{fp, lr}
   14a34:	mov	fp, sp
   14a38:	sub	sp, sp, #8
   14a3c:	mov	r3, r2
   14a40:	mov	r2, r1
   14a44:	mov	r1, r0
   14a48:	mvn	r0, #0
   14a4c:	str	r0, [sp]
   14a50:	mov	r0, #0
   14a54:	bl	149c8 <__mempcpy_chk@plt+0x399c>
   14a58:	mov	sp, fp
   14a5c:	pop	{fp, pc}
   14a60:	push	{fp, lr}
   14a64:	mov	fp, sp
   14a68:	sub	sp, sp, #8
   14a6c:	mov	ip, r2
   14a70:	mov	r2, r1
   14a74:	mov	r1, r0
   14a78:	str	r3, [sp]
   14a7c:	mov	r0, #0
   14a80:	mov	r3, ip
   14a84:	bl	149c8 <__mempcpy_chk@plt+0x399c>
   14a88:	mov	sp, fp
   14a8c:	pop	{fp, pc}
   14a90:	movw	r3, #28928	; 0x7100
   14a94:	movt	r3, #2
   14a98:	b	14514 <__mempcpy_chk@plt+0x34e8>
   14a9c:	movw	r3, #28928	; 0x7100
   14aa0:	mov	r2, r1
   14aa4:	mov	r1, r0
   14aa8:	mov	r0, #0
   14aac:	movt	r3, #2
   14ab0:	b	14514 <__mempcpy_chk@plt+0x34e8>
   14ab4:	movw	r3, #28928	; 0x7100
   14ab8:	mvn	r2, #0
   14abc:	movt	r3, #2
   14ac0:	b	14514 <__mempcpy_chk@plt+0x34e8>
   14ac4:	movw	r3, #28928	; 0x7100
   14ac8:	mov	r1, r0
   14acc:	mov	r0, #0
   14ad0:	mvn	r2, #0
   14ad4:	movt	r3, #2
   14ad8:	b	14514 <__mempcpy_chk@plt+0x34e8>
   14adc:	push	{r4, r5, fp, lr}
   14ae0:	add	fp, sp, #8
   14ae4:	mov	r5, r0
   14ae8:	mov	r4, r1
   14aec:	mov	r0, #0
   14af0:	mov	r2, #5
   14af4:	mov	r1, r5
   14af8:	bl	10e58 <dcgettext@plt>
   14afc:	cmp	r0, r5
   14b00:	popne	{r4, r5, fp, pc}
   14b04:	bl	159e8 <__mempcpy_chk@plt+0x49bc>
   14b08:	ldrb	r1, [r0]
   14b0c:	and	r1, r1, #223	; 0xdf
   14b10:	cmp	r1, #71	; 0x47
   14b14:	beq	14b7c <__mempcpy_chk@plt+0x3b50>
   14b18:	cmp	r1, #85	; 0x55
   14b1c:	bne	14ba0 <__mempcpy_chk@plt+0x3b74>
   14b20:	ldrb	r1, [r0, #1]
   14b24:	and	r1, r1, #223	; 0xdf
   14b28:	cmp	r1, #84	; 0x54
   14b2c:	bne	14ba0 <__mempcpy_chk@plt+0x3b74>
   14b30:	ldrb	r1, [r0, #2]
   14b34:	and	r1, r1, #223	; 0xdf
   14b38:	cmp	r1, #70	; 0x46
   14b3c:	ldrbeq	r1, [r0, #3]
   14b40:	cmpeq	r1, #45	; 0x2d
   14b44:	bne	14ba0 <__mempcpy_chk@plt+0x3b74>
   14b48:	ldrb	r1, [r0, #4]
   14b4c:	cmp	r1, #56	; 0x38
   14b50:	ldrbeq	r0, [r0, #5]
   14b54:	cmpeq	r0, #0
   14b58:	bne	14ba0 <__mempcpy_chk@plt+0x3b74>
   14b5c:	ldrb	r1, [r5]
   14b60:	movw	r2, #26292	; 0x66b4
   14b64:	movw	r0, #26296	; 0x66b8
   14b68:	movt	r2, #1
   14b6c:	movt	r0, #1
   14b70:	cmp	r1, #96	; 0x60
   14b74:	moveq	r0, r2
   14b78:	pop	{r4, r5, fp, pc}
   14b7c:	ldrb	r1, [r0, #1]
   14b80:	and	r1, r1, #223	; 0xdf
   14b84:	cmp	r1, #66	; 0x42
   14b88:	bne	14ba0 <__mempcpy_chk@plt+0x3b74>
   14b8c:	ldrb	r1, [r0, #2]
   14b90:	cmp	r1, #49	; 0x31
   14b94:	ldrbeq	r1, [r0, #3]
   14b98:	cmpeq	r1, #56	; 0x38
   14b9c:	beq	14bbc <__mempcpy_chk@plt+0x3b90>
   14ba0:	movw	r1, #26286	; 0x66ae
   14ba4:	movw	r0, #26290	; 0x66b2
   14ba8:	cmp	r4, #9
   14bac:	movt	r1, #1
   14bb0:	movt	r0, #1
   14bb4:	moveq	r0, r1
   14bb8:	pop	{r4, r5, fp, pc}
   14bbc:	ldrb	r1, [r0, #4]
   14bc0:	cmp	r1, #48	; 0x30
   14bc4:	ldrbeq	r1, [r0, #5]
   14bc8:	cmpeq	r1, #51	; 0x33
   14bcc:	bne	14ba0 <__mempcpy_chk@plt+0x3b74>
   14bd0:	ldrb	r1, [r0, #6]
   14bd4:	cmp	r1, #48	; 0x30
   14bd8:	ldrbeq	r0, [r0, #7]
   14bdc:	cmpeq	r0, #0
   14be0:	bne	14ba0 <__mempcpy_chk@plt+0x3b74>
   14be4:	ldrb	r1, [r5]
   14be8:	movw	r2, #26300	; 0x66bc
   14bec:	movw	r0, #26304	; 0x66c0
   14bf0:	movt	r2, #1
   14bf4:	movt	r0, #1
   14bf8:	b	14b70 <__mempcpy_chk@plt+0x3b44>
   14bfc:	push	{r4, r5, r6, sl, fp, lr}
   14c00:	add	fp, sp, #16
   14c04:	ldr	r4, [r0], #8
   14c08:	mov	r5, r1
   14c0c:	cmp	r4, r0
   14c10:	beq	14c30 <__mempcpy_chk@plt+0x3c04>
   14c14:	mov	r0, r4
   14c18:	mov	r1, r5
   14c1c:	bl	15740 <__mempcpy_chk@plt+0x4714>
   14c20:	mov	r6, r0
   14c24:	cmp	r0, #0
   14c28:	moveq	r6, r4
   14c2c:	b	14c58 <__mempcpy_chk@plt+0x3c2c>
   14c30:	mov	r0, r5
   14c34:	bl	15710 <__mempcpy_chk@plt+0x46e4>
   14c38:	cmp	r0, #0
   14c3c:	beq	14c54 <__mempcpy_chk@plt+0x3c28>
   14c40:	mov	r1, r4
   14c44:	mov	r2, r5
   14c48:	mov	r6, r0
   14c4c:	bl	10e34 <memcpy@plt>
   14c50:	b	14c58 <__mempcpy_chk@plt+0x3c2c>
   14c54:	mov	r6, #0
   14c58:	mov	r0, r6
   14c5c:	pop	{r4, r5, r6, sl, fp, pc}
   14c60:	push	{r4, r5, r6, sl, fp, lr}
   14c64:	add	fp, sp, #16
   14c68:	mov	r4, r0
   14c6c:	add	r6, r0, #8
   14c70:	ldrd	r0, [r0]
   14c74:	lsl	r5, r1, #1
   14c78:	cmp	r0, r6
   14c7c:	beq	14c88 <__mempcpy_chk@plt+0x3c5c>
   14c80:	bl	12094 <__mempcpy_chk@plt+0x1068>
   14c84:	ldr	r1, [r4, #4]
   14c88:	cmp	r5, r1
   14c8c:	bcc	14cb0 <__mempcpy_chk@plt+0x3c84>
   14c90:	mov	r0, r5
   14c94:	bl	15710 <__mempcpy_chk@plt+0x46e4>
   14c98:	cmp	r0, #0
   14c9c:	beq	14cbc <__mempcpy_chk@plt+0x3c90>
   14ca0:	str	r0, [r4]
   14ca4:	mov	r0, #1
   14ca8:	str	r5, [r4, #4]
   14cac:	pop	{r4, r5, r6, sl, fp, pc}
   14cb0:	bl	10f54 <__errno_location@plt>
   14cb4:	mov	r1, #12
   14cb8:	str	r1, [r0]
   14cbc:	str	r6, [r4]
   14cc0:	mov	r0, #0
   14cc4:	mov	r5, #1024	; 0x400
   14cc8:	b	14ca8 <__mempcpy_chk@plt+0x3c7c>
   14ccc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14cd0:	add	fp, sp, #24
   14cd4:	ldrd	r8, [r0]
   14cd8:	add	r7, r0, #8
   14cdc:	mov	r4, r0
   14ce0:	lsl	r5, r9, #1
   14ce4:	cmp	r8, r7
   14ce8:	beq	14d14 <__mempcpy_chk@plt+0x3ce8>
   14cec:	cmp	r5, r9
   14cf0:	bcc	14d48 <__mempcpy_chk@plt+0x3d1c>
   14cf4:	mov	r0, r8
   14cf8:	mov	r1, r5
   14cfc:	bl	15740 <__mempcpy_chk@plt+0x4714>
   14d00:	mov	r6, r0
   14d04:	cmp	r0, #0
   14d08:	bne	14d38 <__mempcpy_chk@plt+0x3d0c>
   14d0c:	ldr	r8, [r4]
   14d10:	b	14d54 <__mempcpy_chk@plt+0x3d28>
   14d14:	mov	r0, r5
   14d18:	bl	15710 <__mempcpy_chk@plt+0x46e4>
   14d1c:	cmp	r0, #0
   14d20:	moveq	r0, #0
   14d24:	popeq	{r4, r5, r6, r7, r8, r9, fp, pc}
   14d28:	ldr	r2, [r4, #4]
   14d2c:	mov	r1, r8
   14d30:	mov	r6, r0
   14d34:	bl	10e34 <memcpy@plt>
   14d38:	str	r6, [r4]
   14d3c:	mov	r0, #1
   14d40:	str	r5, [r4, #4]
   14d44:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   14d48:	bl	10f54 <__errno_location@plt>
   14d4c:	mov	r1, #12
   14d50:	str	r1, [r0]
   14d54:	mov	r0, r8
   14d58:	bl	12094 <__mempcpy_chk@plt+0x1068>
   14d5c:	mov	r0, #0
   14d60:	mov	r5, #1024	; 0x400
   14d64:	str	r7, [r4]
   14d68:	b	14d40 <__mempcpy_chk@plt+0x3d14>
   14d6c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14d70:	add	fp, sp, #24
   14d74:	sub	sp, sp, #32
   14d78:	ldr	r6, [fp, #12]
   14d7c:	ldr	r7, [fp, #8]
   14d80:	mov	r4, r2
   14d84:	mov	r8, r0
   14d88:	cmp	r1, #0
   14d8c:	beq	14db4 <__mempcpy_chk@plt+0x3d88>
   14d90:	movw	r2, #26392	; 0x6718
   14d94:	mov	r5, r1
   14d98:	str	r3, [sp, #4]
   14d9c:	str	r4, [sp]
   14da0:	mov	r0, r8
   14da4:	mov	r1, #1
   14da8:	movt	r2, #1
   14dac:	mov	r3, r5
   14db0:	b	14dcc <__mempcpy_chk@plt+0x3da0>
   14db4:	movw	r2, #26404	; 0x6724
   14db8:	str	r3, [sp]
   14dbc:	mov	r0, r8
   14dc0:	mov	r1, #1
   14dc4:	mov	r3, r4
   14dc8:	movt	r2, #1
   14dcc:	bl	10f90 <__fprintf_chk@plt>
   14dd0:	movw	r1, #26411	; 0x672b
   14dd4:	mov	r0, #0
   14dd8:	mov	r2, #5
   14ddc:	movt	r1, #1
   14de0:	bl	10e58 <dcgettext@plt>
   14de4:	movw	r2, #27129	; 0x69f9
   14de8:	mov	r3, r0
   14dec:	movw	r0, #2022	; 0x7e6
   14df0:	mov	r1, #1
   14df4:	str	r0, [sp]
   14df8:	movt	r2, #1
   14dfc:	mov	r0, r8
   14e00:	bl	10f90 <__fprintf_chk@plt>
   14e04:	movw	r4, #24128	; 0x5e40
   14e08:	mov	r1, r8
   14e0c:	movt	r4, #1
   14e10:	mov	r0, r4
   14e14:	bl	10dd4 <fputs_unlocked@plt>
   14e18:	movw	r1, #26415	; 0x672f
   14e1c:	mov	r0, #0
   14e20:	mov	r2, #5
   14e24:	movt	r1, #1
   14e28:	bl	10e58 <dcgettext@plt>
   14e2c:	movw	r3, #26586	; 0x67da
   14e30:	mov	r2, r0
   14e34:	mov	r0, r8
   14e38:	mov	r1, #1
   14e3c:	movt	r3, #1
   14e40:	bl	10f90 <__fprintf_chk@plt>
   14e44:	mov	r0, r4
   14e48:	mov	r1, r8
   14e4c:	bl	10dd4 <fputs_unlocked@plt>
   14e50:	cmp	r6, #9
   14e54:	bhi	14eb8 <__mempcpy_chk@plt+0x3e8c>
   14e58:	add	r0, pc, #0
   14e5c:	ldr	pc, [r0, r6, lsl #2]
   14e60:	muleq	r1, r0, r0
   14e64:	andeq	r4, r1, r8, lsl #29
   14e68:	andeq	r4, r1, r4, asr #29
   14e6c:	andeq	r4, r1, ip, ror #29
   14e70:	andeq	r4, r1, r4, lsl pc
   14e74:	andeq	r4, r1, ip, lsr pc
   14e78:	andeq	r4, r1, r4, ror #30
   14e7c:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   14e80:	andeq	r5, r1, ip, lsr r0
   14e84:	andeq	r4, r1, r4, ror #31
   14e88:	movw	r1, #26620	; 0x67fc
   14e8c:	mov	r0, #0
   14e90:	mov	r2, #5
   14e94:	movt	r1, #1
   14e98:	bl	10e58 <dcgettext@plt>
   14e9c:	ldr	r3, [r7]
   14ea0:	mov	r2, r0
   14ea4:	mov	r0, r8
   14ea8:	mov	r1, #1
   14eac:	sub	sp, fp, #24
   14eb0:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   14eb4:	b	10f90 <__fprintf_chk@plt>
   14eb8:	movw	r1, #26939	; 0x693b
   14ebc:	movt	r1, #1
   14ec0:	b	14fec <__mempcpy_chk@plt+0x3fc0>
   14ec4:	movw	r1, #26636	; 0x680c
   14ec8:	mov	r0, #0
   14ecc:	mov	r2, #5
   14ed0:	movt	r1, #1
   14ed4:	bl	10e58 <dcgettext@plt>
   14ed8:	mov	r2, r0
   14edc:	ldr	r3, [r7]
   14ee0:	ldr	r0, [r7, #4]
   14ee4:	str	r0, [sp]
   14ee8:	b	14fd8 <__mempcpy_chk@plt+0x3fac>
   14eec:	movw	r1, #26659	; 0x6823
   14ef0:	mov	r0, #0
   14ef4:	mov	r2, #5
   14ef8:	movt	r1, #1
   14efc:	bl	10e58 <dcgettext@plt>
   14f00:	ldr	r3, [r7]
   14f04:	mov	r2, r0
   14f08:	ldmib	r7, {r0, r1}
   14f0c:	stm	sp, {r0, r1}
   14f10:	b	14fd8 <__mempcpy_chk@plt+0x3fac>
   14f14:	movw	r1, #26687	; 0x683f
   14f18:	mov	r0, #0
   14f1c:	mov	r2, #5
   14f20:	movt	r1, #1
   14f24:	bl	10e58 <dcgettext@plt>
   14f28:	ldr	r3, [r7]
   14f2c:	mov	r2, r0
   14f30:	ldmib	r7, {r0, r1, r7}
   14f34:	stm	sp, {r0, r1, r7}
   14f38:	b	14fd8 <__mempcpy_chk@plt+0x3fac>
   14f3c:	movw	r1, #26719	; 0x685f
   14f40:	mov	r0, #0
   14f44:	mov	r2, #5
   14f48:	movt	r1, #1
   14f4c:	bl	10e58 <dcgettext@plt>
   14f50:	ldr	r3, [r7]
   14f54:	mov	r2, r0
   14f58:	ldmib	r7, {r0, r1, r6, r7}
   14f5c:	stm	sp, {r0, r1, r6, r7}
   14f60:	b	14fd8 <__mempcpy_chk@plt+0x3fac>
   14f64:	movw	r1, #26755	; 0x6883
   14f68:	mov	r0, #0
   14f6c:	mov	r2, #5
   14f70:	movt	r1, #1
   14f74:	bl	10e58 <dcgettext@plt>
   14f78:	ldr	r3, [r7]
   14f7c:	mov	r2, r0
   14f80:	ldmib	r7, {r0, r1, r6}
   14f84:	ldr	r5, [r7, #16]
   14f88:	ldr	r7, [r7, #20]
   14f8c:	stm	sp, {r0, r1, r6}
   14f90:	str	r5, [sp, #12]
   14f94:	str	r7, [sp, #16]
   14f98:	b	14fd8 <__mempcpy_chk@plt+0x3fac>
   14f9c:	movw	r1, #26795	; 0x68ab
   14fa0:	mov	r0, #0
   14fa4:	mov	r2, #5
   14fa8:	movt	r1, #1
   14fac:	bl	10e58 <dcgettext@plt>
   14fb0:	ldr	r3, [r7]
   14fb4:	mov	r2, r0
   14fb8:	ldmib	r7, {r0, r1, r6}
   14fbc:	ldr	r5, [r7, #16]
   14fc0:	ldr	r4, [r7, #20]
   14fc4:	ldr	r7, [r7, #24]
   14fc8:	stm	sp, {r0, r1, r6}
   14fcc:	str	r5, [sp, #12]
   14fd0:	str	r4, [sp, #16]
   14fd4:	str	r7, [sp, #20]
   14fd8:	mov	r0, r8
   14fdc:	mov	r1, #1
   14fe0:	b	1508c <__mempcpy_chk@plt+0x4060>
   14fe4:	movw	r1, #26887	; 0x6907
   14fe8:	movt	r1, #1
   14fec:	mov	r0, #0
   14ff0:	mov	r2, #5
   14ff4:	bl	10e58 <dcgettext@plt>
   14ff8:	mov	ip, r0
   14ffc:	ldr	r3, [r7]
   15000:	ldr	r0, [r7, #4]
   15004:	ldr	r1, [r7, #8]
   15008:	ldr	r6, [r7, #12]
   1500c:	ldr	r5, [r7, #16]
   15010:	ldr	r4, [r7, #20]
   15014:	ldr	r2, [r7, #24]
   15018:	ldr	lr, [r7, #28]
   1501c:	ldr	r7, [r7, #32]
   15020:	stm	sp, {r0, r1, r6}
   15024:	str	r5, [sp, #12]
   15028:	str	r4, [sp, #16]
   1502c:	str	r2, [sp, #20]
   15030:	str	lr, [sp, #24]
   15034:	str	r7, [sp, #28]
   15038:	b	15080 <__mempcpy_chk@plt+0x4054>
   1503c:	movw	r1, #26839	; 0x68d7
   15040:	mov	r0, #0
   15044:	mov	r2, #5
   15048:	movt	r1, #1
   1504c:	bl	10e58 <dcgettext@plt>
   15050:	mov	ip, r0
   15054:	ldr	r3, [r7]
   15058:	ldmib	r7, {r0, r1, r6}
   1505c:	ldr	r5, [r7, #16]
   15060:	ldr	r4, [r7, #20]
   15064:	ldr	r2, [r7, #24]
   15068:	ldr	r7, [r7, #28]
   1506c:	stm	sp, {r0, r1, r6}
   15070:	str	r5, [sp, #12]
   15074:	str	r4, [sp, #16]
   15078:	str	r2, [sp, #20]
   1507c:	str	r7, [sp, #24]
   15080:	mov	r0, r8
   15084:	mov	r1, #1
   15088:	mov	r2, ip
   1508c:	bl	10f90 <__fprintf_chk@plt>
   15090:	sub	sp, fp, #24
   15094:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15098:	push	{r4, sl, fp, lr}
   1509c:	add	fp, sp, #8
   150a0:	sub	sp, sp, #8
   150a4:	ldr	ip, [fp, #8]
   150a8:	mov	lr, #0
   150ac:	ldr	r4, [ip, lr, lsl #2]
   150b0:	add	lr, lr, #1
   150b4:	cmp	r4, #0
   150b8:	bne	150ac <__mempcpy_chk@plt+0x4080>
   150bc:	sub	r4, lr, #1
   150c0:	str	ip, [sp]
   150c4:	str	r4, [sp, #4]
   150c8:	bl	14d6c <__mempcpy_chk@plt+0x3d40>
   150cc:	sub	sp, fp, #8
   150d0:	pop	{r4, sl, fp, pc}
   150d4:	push	{r4, r5, fp, lr}
   150d8:	add	fp, sp, #8
   150dc:	sub	sp, sp, #48	; 0x30
   150e0:	ldr	r4, [fp, #8]
   150e4:	mov	ip, #0
   150e8:	add	lr, sp, #8
   150ec:	ldr	r5, [r4]
   150f0:	cmp	r5, #0
   150f4:	str	r5, [lr, ip, lsl #2]
   150f8:	beq	1510c <__mempcpy_chk@plt+0x40e0>
   150fc:	add	ip, ip, #1
   15100:	add	r4, r4, #4
   15104:	cmp	ip, #10
   15108:	bcc	150ec <__mempcpy_chk@plt+0x40c0>
   1510c:	str	lr, [sp]
   15110:	str	ip, [sp, #4]
   15114:	bl	14d6c <__mempcpy_chk@plt+0x3d40>
   15118:	sub	sp, fp, #8
   1511c:	pop	{r4, r5, fp, pc}
   15120:	push	{fp, lr}
   15124:	mov	fp, sp
   15128:	sub	sp, sp, #8
   1512c:	add	ip, fp, #8
   15130:	str	ip, [sp, #4]
   15134:	str	ip, [sp]
   15138:	bl	150d4 <__mempcpy_chk@plt+0x40a8>
   1513c:	mov	sp, fp
   15140:	pop	{fp, pc}
   15144:	push	{fp, lr}
   15148:	mov	fp, sp
   1514c:	movw	r0, #28996	; 0x7144
   15150:	movt	r0, #2
   15154:	ldr	r1, [r0]
   15158:	movw	r0, #24128	; 0x5e40
   1515c:	movt	r0, #1
   15160:	bl	10dd4 <fputs_unlocked@plt>
   15164:	movw	r1, #26999	; 0x6977
   15168:	mov	r0, #0
   1516c:	mov	r2, #5
   15170:	movt	r1, #1
   15174:	bl	10e58 <dcgettext@plt>
   15178:	movw	r2, #27019	; 0x698b
   1517c:	mov	r1, r0
   15180:	mov	r0, #1
   15184:	movt	r2, #1
   15188:	bl	10f78 <__printf_chk@plt>
   1518c:	movw	r1, #27041	; 0x69a1
   15190:	mov	r0, #0
   15194:	mov	r2, #5
   15198:	movt	r1, #1
   1519c:	bl	10e58 <dcgettext@plt>
   151a0:	movw	r2, #25229	; 0x628d
   151a4:	movw	r3, #25439	; 0x635f
   151a8:	mov	r1, r0
   151ac:	mov	r0, #1
   151b0:	movt	r2, #1
   151b4:	movt	r3, #1
   151b8:	bl	10f78 <__printf_chk@plt>
   151bc:	movw	r1, #27061	; 0x69b5
   151c0:	mov	r0, #0
   151c4:	mov	r2, #5
   151c8:	movt	r1, #1
   151cc:	bl	10e58 <dcgettext@plt>
   151d0:	movw	r2, #27100	; 0x69dc
   151d4:	mov	r1, r0
   151d8:	mov	r0, #1
   151dc:	movt	r2, #1
   151e0:	pop	{fp, lr}
   151e4:	b	10f78 <__printf_chk@plt>
   151e8:	b	151ec <__mempcpy_chk@plt+0x41c0>
   151ec:	push	{r4, r5, r6, sl, fp, lr}
   151f0:	add	fp, sp, #16
   151f4:	mov	r4, r2
   151f8:	mov	r5, r1
   151fc:	mov	r6, r0
   15200:	bl	15a80 <__mempcpy_chk@plt+0x4a54>
   15204:	cmp	r0, #0
   15208:	popne	{r4, r5, r6, sl, fp, pc}
   1520c:	cmp	r6, #0
   15210:	beq	15224 <__mempcpy_chk@plt+0x41f8>
   15214:	cmp	r5, #0
   15218:	cmpne	r4, #0
   1521c:	bne	15224 <__mempcpy_chk@plt+0x41f8>
   15220:	pop	{r4, r5, r6, sl, fp, pc}
   15224:	bl	15678 <__mempcpy_chk@plt+0x464c>
   15228:	push	{fp, lr}
   1522c:	mov	fp, sp
   15230:	bl	15710 <__mempcpy_chk@plt+0x46e4>
   15234:	cmp	r0, #0
   15238:	popne	{fp, pc}
   1523c:	bl	15678 <__mempcpy_chk@plt+0x464c>
   15240:	push	{fp, lr}
   15244:	mov	fp, sp
   15248:	bl	15710 <__mempcpy_chk@plt+0x46e4>
   1524c:	cmp	r0, #0
   15250:	popne	{fp, pc}
   15254:	bl	15678 <__mempcpy_chk@plt+0x464c>
   15258:	push	{fp, lr}
   1525c:	mov	fp, sp
   15260:	bl	15710 <__mempcpy_chk@plt+0x46e4>
   15264:	cmp	r0, #0
   15268:	popne	{fp, pc}
   1526c:	bl	15678 <__mempcpy_chk@plt+0x464c>
   15270:	push	{r4, r5, fp, lr}
   15274:	add	fp, sp, #8
   15278:	mov	r4, r1
   1527c:	mov	r5, r0
   15280:	bl	15740 <__mempcpy_chk@plt+0x4714>
   15284:	cmp	r0, #0
   15288:	popne	{r4, r5, fp, pc}
   1528c:	cmp	r5, #0
   15290:	beq	152a0 <__mempcpy_chk@plt+0x4274>
   15294:	cmp	r4, #0
   15298:	bne	152a0 <__mempcpy_chk@plt+0x4274>
   1529c:	pop	{r4, r5, fp, pc}
   152a0:	bl	15678 <__mempcpy_chk@plt+0x464c>
   152a4:	push	{fp, lr}
   152a8:	mov	fp, sp
   152ac:	cmp	r1, #0
   152b0:	orreq	r1, r1, #1
   152b4:	bl	15740 <__mempcpy_chk@plt+0x4714>
   152b8:	cmp	r0, #0
   152bc:	popne	{fp, pc}
   152c0:	bl	15678 <__mempcpy_chk@plt+0x464c>
   152c4:	push	{fp, lr}
   152c8:	mov	fp, sp
   152cc:	clz	r3, r2
   152d0:	lsr	ip, r3, #5
   152d4:	clz	r3, r1
   152d8:	lsr	r3, r3, #5
   152dc:	orrs	r3, r3, ip
   152e0:	movwne	r1, #1
   152e4:	movwne	r2, #1
   152e8:	bl	15a80 <__mempcpy_chk@plt+0x4a54>
   152ec:	cmp	r0, #0
   152f0:	popne	{fp, pc}
   152f4:	bl	15678 <__mempcpy_chk@plt+0x464c>
   152f8:	push	{fp, lr}
   152fc:	mov	fp, sp
   15300:	mov	r2, r1
   15304:	mov	r1, r0
   15308:	mov	r0, #0
   1530c:	bl	15a80 <__mempcpy_chk@plt+0x4a54>
   15310:	cmp	r0, #0
   15314:	popne	{fp, pc}
   15318:	bl	15678 <__mempcpy_chk@plt+0x464c>
   1531c:	mov	r2, r1
   15320:	mov	r1, r0
   15324:	mov	r0, #0
   15328:	b	152c4 <__mempcpy_chk@plt+0x4298>
   1532c:	mov	r2, #1
   15330:	b	15334 <__mempcpy_chk@plt+0x4308>
   15334:	push	{r4, r5, fp, lr}
   15338:	add	fp, sp, #8
   1533c:	ldr	r5, [r1]
   15340:	mov	r4, r1
   15344:	cmp	r0, #0
   15348:	beq	15360 <__mempcpy_chk@plt+0x4334>
   1534c:	mov	r1, #1
   15350:	add	r1, r1, r5, lsr #1
   15354:	adds	r5, r5, r1
   15358:	bcc	15378 <__mempcpy_chk@plt+0x434c>
   1535c:	bl	15678 <__mempcpy_chk@plt+0x464c>
   15360:	cmp	r5, #0
   15364:	bne	15378 <__mempcpy_chk@plt+0x434c>
   15368:	mov	r1, #64	; 0x40
   1536c:	cmp	r2, #64	; 0x40
   15370:	udiv	r5, r1, r2
   15374:	addhi	r5, r5, #1
   15378:	mov	r1, r5
   1537c:	bl	151ec <__mempcpy_chk@plt+0x41c0>
   15380:	str	r5, [r4]
   15384:	pop	{r4, r5, fp, pc}
   15388:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1538c:	add	fp, sp, #24
   15390:	ldr	r6, [r1]
   15394:	mov	r8, r1
   15398:	ldr	r4, [fp, #8]
   1539c:	add	r1, r6, r6, asr #1
   153a0:	cmp	r1, r6
   153a4:	mvnvs	r1, #-2147483648	; 0x80000000
   153a8:	cmp	r1, r3
   153ac:	mov	r5, r1
   153b0:	movgt	r5, r3
   153b4:	cmn	r3, #1
   153b8:	movle	r5, r1
   153bc:	cmn	r4, #1
   153c0:	ble	153e0 <__mempcpy_chk@plt+0x43b4>
   153c4:	cmp	r4, #0
   153c8:	beq	15434 <__mempcpy_chk@plt+0x4408>
   153cc:	cmn	r5, #1
   153d0:	ble	15408 <__mempcpy_chk@plt+0x43dc>
   153d4:	mvn	r7, #-2147483648	; 0x80000000
   153d8:	udiv	r1, r7, r4
   153dc:	b	153fc <__mempcpy_chk@plt+0x43d0>
   153e0:	cmn	r5, #1
   153e4:	ble	15424 <__mempcpy_chk@plt+0x43f8>
   153e8:	cmn	r4, #1
   153ec:	beq	15434 <__mempcpy_chk@plt+0x4408>
   153f0:	mov	r1, #-2147483648	; 0x80000000
   153f4:	mvn	r7, #-2147483648	; 0x80000000
   153f8:	sdiv	r1, r1, r4
   153fc:	cmp	r1, r5
   15400:	bge	15434 <__mempcpy_chk@plt+0x4408>
   15404:	b	15444 <__mempcpy_chk@plt+0x4418>
   15408:	beq	15434 <__mempcpy_chk@plt+0x4408>
   1540c:	mov	r1, #-2147483648	; 0x80000000
   15410:	mvn	r7, #-2147483648	; 0x80000000
   15414:	sdiv	r1, r1, r5
   15418:	cmp	r1, r4
   1541c:	bge	15434 <__mempcpy_chk@plt+0x4408>
   15420:	b	15444 <__mempcpy_chk@plt+0x4418>
   15424:	mvn	r7, #-2147483648	; 0x80000000
   15428:	sdiv	r1, r7, r4
   1542c:	cmp	r5, r1
   15430:	blt	15444 <__mempcpy_chk@plt+0x4418>
   15434:	mul	r1, r5, r4
   15438:	mov	r7, #64	; 0x40
   1543c:	cmp	r1, #63	; 0x3f
   15440:	bgt	1544c <__mempcpy_chk@plt+0x4420>
   15444:	sdiv	r5, r7, r4
   15448:	mul	r1, r5, r4
   1544c:	cmp	r0, #0
   15450:	moveq	r7, #0
   15454:	streq	r7, [r8]
   15458:	sub	r7, r5, r6
   1545c:	cmp	r7, r2
   15460:	bge	15504 <__mempcpy_chk@plt+0x44d8>
   15464:	add	r5, r6, r2
   15468:	mov	r2, #0
   1546c:	mov	r1, #0
   15470:	cmp	r5, r3
   15474:	movwgt	r2, #1
   15478:	cmn	r3, #1
   1547c:	movwgt	r1, #1
   15480:	cmp	r5, r6
   15484:	bvs	154ec <__mempcpy_chk@plt+0x44c0>
   15488:	ands	r1, r1, r2
   1548c:	bne	154ec <__mempcpy_chk@plt+0x44c0>
   15490:	cmn	r4, #1
   15494:	ble	154b4 <__mempcpy_chk@plt+0x4488>
   15498:	cmp	r4, #0
   1549c:	beq	15500 <__mempcpy_chk@plt+0x44d4>
   154a0:	cmn	r5, #1
   154a4:	ble	154d8 <__mempcpy_chk@plt+0x44ac>
   154a8:	mvn	r1, #-2147483648	; 0x80000000
   154ac:	udiv	r1, r1, r4
   154b0:	b	154cc <__mempcpy_chk@plt+0x44a0>
   154b4:	cmn	r5, #1
   154b8:	ble	154f0 <__mempcpy_chk@plt+0x44c4>
   154bc:	cmn	r4, #1
   154c0:	beq	15500 <__mempcpy_chk@plt+0x44d4>
   154c4:	mov	r1, #-2147483648	; 0x80000000
   154c8:	sdiv	r1, r1, r4
   154cc:	cmp	r1, r5
   154d0:	bge	15500 <__mempcpy_chk@plt+0x44d4>
   154d4:	b	154ec <__mempcpy_chk@plt+0x44c0>
   154d8:	beq	15500 <__mempcpy_chk@plt+0x44d4>
   154dc:	mov	r1, #-2147483648	; 0x80000000
   154e0:	sdiv	r1, r1, r5
   154e4:	cmp	r1, r4
   154e8:	bge	15500 <__mempcpy_chk@plt+0x44d4>
   154ec:	bl	15678 <__mempcpy_chk@plt+0x464c>
   154f0:	mvn	r1, #-2147483648	; 0x80000000
   154f4:	sdiv	r1, r1, r4
   154f8:	cmp	r5, r1
   154fc:	blt	154ec <__mempcpy_chk@plt+0x44c0>
   15500:	mul	r1, r5, r4
   15504:	bl	15270 <__mempcpy_chk@plt+0x4244>
   15508:	str	r5, [r8]
   1550c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15510:	push	{fp, lr}
   15514:	mov	fp, sp
   15518:	mov	r1, #1
   1551c:	bl	156bc <__mempcpy_chk@plt+0x4690>
   15520:	cmp	r0, #0
   15524:	popne	{fp, pc}
   15528:	bl	15678 <__mempcpy_chk@plt+0x464c>
   1552c:	push	{fp, lr}
   15530:	mov	fp, sp
   15534:	bl	156bc <__mempcpy_chk@plt+0x4690>
   15538:	cmp	r0, #0
   1553c:	popne	{fp, pc}
   15540:	bl	15678 <__mempcpy_chk@plt+0x464c>
   15544:	push	{fp, lr}
   15548:	mov	fp, sp
   1554c:	mov	r1, #1
   15550:	bl	156bc <__mempcpy_chk@plt+0x4690>
   15554:	cmp	r0, #0
   15558:	popne	{fp, pc}
   1555c:	bl	15678 <__mempcpy_chk@plt+0x464c>
   15560:	push	{fp, lr}
   15564:	mov	fp, sp
   15568:	bl	156bc <__mempcpy_chk@plt+0x4690>
   1556c:	cmp	r0, #0
   15570:	popne	{fp, pc}
   15574:	bl	15678 <__mempcpy_chk@plt+0x464c>
   15578:	push	{r4, r5, r6, sl, fp, lr}
   1557c:	add	fp, sp, #16
   15580:	mov	r5, r0
   15584:	mov	r0, r1
   15588:	mov	r4, r1
   1558c:	bl	15710 <__mempcpy_chk@plt+0x46e4>
   15590:	cmp	r0, #0
   15594:	beq	155b0 <__mempcpy_chk@plt+0x4584>
   15598:	mov	r1, r5
   1559c:	mov	r2, r4
   155a0:	mov	r6, r0
   155a4:	bl	10e34 <memcpy@plt>
   155a8:	mov	r0, r6
   155ac:	pop	{r4, r5, r6, sl, fp, pc}
   155b0:	bl	15678 <__mempcpy_chk@plt+0x464c>
   155b4:	push	{r4, r5, r6, sl, fp, lr}
   155b8:	add	fp, sp, #16
   155bc:	mov	r5, r0
   155c0:	mov	r0, r1
   155c4:	mov	r4, r1
   155c8:	bl	15710 <__mempcpy_chk@plt+0x46e4>
   155cc:	cmp	r0, #0
   155d0:	beq	155ec <__mempcpy_chk@plt+0x45c0>
   155d4:	mov	r1, r5
   155d8:	mov	r2, r4
   155dc:	mov	r6, r0
   155e0:	bl	10e34 <memcpy@plt>
   155e4:	mov	r0, r6
   155e8:	pop	{r4, r5, r6, sl, fp, pc}
   155ec:	bl	15678 <__mempcpy_chk@plt+0x464c>
   155f0:	push	{r4, r5, r6, sl, fp, lr}
   155f4:	add	fp, sp, #16
   155f8:	mov	r5, r0
   155fc:	add	r0, r1, #1
   15600:	mov	r4, r1
   15604:	bl	15710 <__mempcpy_chk@plt+0x46e4>
   15608:	cmp	r0, #0
   1560c:	beq	15634 <__mempcpy_chk@plt+0x4608>
   15610:	mov	r6, r0
   15614:	mov	r0, #0
   15618:	mov	r1, r5
   1561c:	mov	r2, r4
   15620:	strb	r0, [r6, r4]
   15624:	mov	r0, r6
   15628:	bl	10e34 <memcpy@plt>
   1562c:	mov	r0, r6
   15630:	pop	{r4, r5, r6, sl, fp, pc}
   15634:	bl	15678 <__mempcpy_chk@plt+0x464c>
   15638:	push	{r4, r5, r6, sl, fp, lr}
   1563c:	add	fp, sp, #16
   15640:	mov	r4, r0
   15644:	bl	10f48 <strlen@plt>
   15648:	add	r5, r0, #1
   1564c:	mov	r0, r5
   15650:	bl	15710 <__mempcpy_chk@plt+0x46e4>
   15654:	cmp	r0, #0
   15658:	beq	15674 <__mempcpy_chk@plt+0x4648>
   1565c:	mov	r1, r4
   15660:	mov	r2, r5
   15664:	mov	r6, r0
   15668:	bl	10e34 <memcpy@plt>
   1566c:	mov	r0, r6
   15670:	pop	{r4, r5, r6, sl, fp, pc}
   15674:	bl	15678 <__mempcpy_chk@plt+0x464c>
   15678:	push	{fp, lr}
   1567c:	mov	fp, sp
   15680:	movw	r0, #28908	; 0x70ec
   15684:	movw	r1, #27176	; 0x6a28
   15688:	mov	r2, #5
   1568c:	movt	r0, #2
   15690:	movt	r1, #1
   15694:	ldr	r4, [r0]
   15698:	mov	r0, #0
   1569c:	bl	10e58 <dcgettext@plt>
   156a0:	movw	r2, #26009	; 0x6599
   156a4:	mov	r3, r0
   156a8:	mov	r0, r4
   156ac:	mov	r1, #0
   156b0:	movt	r2, #1
   156b4:	bl	10edc <error@plt>
   156b8:	bl	11008 <abort@plt>
   156bc:	clz	r2, r1
   156c0:	clz	r3, r0
   156c4:	lsr	r2, r2, #5
   156c8:	lsr	r3, r3, #5
   156cc:	orrs	r2, r3, r2
   156d0:	movwne	r1, #1
   156d4:	movwne	r0, #1
   156d8:	cmp	r1, #0
   156dc:	beq	1570c <__mempcpy_chk@plt+0x46e0>
   156e0:	mvn	r2, #-2147483648	; 0x80000000
   156e4:	udiv	r2, r2, r1
   156e8:	cmp	r2, r0
   156ec:	bcs	1570c <__mempcpy_chk@plt+0x46e0>
   156f0:	push	{fp, lr}
   156f4:	mov	fp, sp
   156f8:	bl	10f54 <__errno_location@plt>
   156fc:	mov	r1, #12
   15700:	str	r1, [r0]
   15704:	mov	r0, #0
   15708:	pop	{fp, pc}
   1570c:	b	10dc8 <calloc@plt>
   15710:	cmp	r0, #0
   15714:	movweq	r0, #1
   15718:	cmn	r0, #1
   1571c:	ble	15724 <__mempcpy_chk@plt+0x46f8>
   15720:	b	10ee8 <malloc@plt>
   15724:	push	{fp, lr}
   15728:	mov	fp, sp
   1572c:	bl	10f54 <__errno_location@plt>
   15730:	mov	r1, #12
   15734:	str	r1, [r0]
   15738:	mov	r0, #0
   1573c:	pop	{fp, pc}
   15740:	push	{fp, lr}
   15744:	mov	fp, sp
   15748:	cmp	r0, #0
   1574c:	beq	15768 <__mempcpy_chk@plt+0x473c>
   15750:	cmp	r1, #0
   15754:	beq	15774 <__mempcpy_chk@plt+0x4748>
   15758:	cmn	r1, #1
   1575c:	ble	1577c <__mempcpy_chk@plt+0x4750>
   15760:	pop	{fp, lr}
   15764:	b	10e64 <realloc@plt>
   15768:	mov	r0, r1
   1576c:	pop	{fp, lr}
   15770:	b	15710 <__mempcpy_chk@plt+0x46e4>
   15774:	bl	12094 <__mempcpy_chk@plt+0x1068>
   15778:	b	15788 <__mempcpy_chk@plt+0x475c>
   1577c:	bl	10f54 <__errno_location@plt>
   15780:	mov	r1, #12
   15784:	str	r1, [r0]
   15788:	mov	r0, #0
   1578c:	pop	{fp, pc}
   15790:	push	{r4, r5, r6, sl, fp, lr}
   15794:	add	fp, sp, #16
   15798:	mov	r4, r0
   1579c:	bl	10eb8 <__fpending@plt>
   157a0:	mov	r5, r0
   157a4:	mov	r0, r4
   157a8:	bl	10ec4 <ferror_unlocked@plt>
   157ac:	mov	r6, r0
   157b0:	mov	r0, r4
   157b4:	bl	15810 <__mempcpy_chk@plt+0x47e4>
   157b8:	cmp	r6, #0
   157bc:	beq	157dc <__mempcpy_chk@plt+0x47b0>
   157c0:	mvn	r4, #0
   157c4:	cmp	r0, #0
   157c8:	bne	15808 <__mempcpy_chk@plt+0x47dc>
   157cc:	bl	10f54 <__errno_location@plt>
   157d0:	mov	r1, #0
   157d4:	str	r1, [r0]
   157d8:	b	15808 <__mempcpy_chk@plt+0x47dc>
   157dc:	cmp	r0, #0
   157e0:	mov	r4, r0
   157e4:	mvnne	r4, #0
   157e8:	cmp	r5, #0
   157ec:	bne	15808 <__mempcpy_chk@plt+0x47dc>
   157f0:	cmp	r0, #0
   157f4:	beq	15808 <__mempcpy_chk@plt+0x47dc>
   157f8:	bl	10f54 <__errno_location@plt>
   157fc:	ldr	r0, [r0]
   15800:	subs	r4, r0, #9
   15804:	mvnne	r4, #0
   15808:	mov	r0, r4
   1580c:	pop	{r4, r5, r6, sl, fp, pc}
   15810:	push	{r4, r5, r6, sl, fp, lr}
   15814:	add	fp, sp, #16
   15818:	sub	sp, sp, #8
   1581c:	mov	r4, r0
   15820:	bl	10f84 <fileno@plt>
   15824:	cmn	r0, #1
   15828:	ble	1589c <__mempcpy_chk@plt+0x4870>
   1582c:	mov	r0, r4
   15830:	bl	10f00 <__freading@plt>
   15834:	cmp	r0, #0
   15838:	beq	15864 <__mempcpy_chk@plt+0x4838>
   1583c:	mov	r0, r4
   15840:	bl	10f84 <fileno@plt>
   15844:	mov	r1, #1
   15848:	mov	r2, #0
   1584c:	mov	r3, #0
   15850:	str	r1, [sp]
   15854:	bl	10ea0 <lseek64@plt>
   15858:	and	r0, r0, r1
   1585c:	cmn	r0, #1
   15860:	beq	1589c <__mempcpy_chk@plt+0x4870>
   15864:	mov	r0, r4
   15868:	bl	158ac <__mempcpy_chk@plt+0x4880>
   1586c:	cmp	r0, #0
   15870:	beq	1589c <__mempcpy_chk@plt+0x4870>
   15874:	bl	10f54 <__errno_location@plt>
   15878:	ldr	r6, [r0]
   1587c:	mov	r5, r0
   15880:	mov	r0, r4
   15884:	bl	10f9c <fclose@plt>
   15888:	cmp	r6, #0
   1588c:	strne	r6, [r5]
   15890:	mvnne	r0, #0
   15894:	sub	sp, fp, #16
   15898:	pop	{r4, r5, r6, sl, fp, pc}
   1589c:	mov	r0, r4
   158a0:	sub	sp, fp, #16
   158a4:	pop	{r4, r5, r6, sl, fp, lr}
   158a8:	b	10f9c <fclose@plt>
   158ac:	push	{r4, sl, fp, lr}
   158b0:	add	fp, sp, #8
   158b4:	sub	sp, sp, #8
   158b8:	mov	r4, r0
   158bc:	cmp	r0, #0
   158c0:	beq	158dc <__mempcpy_chk@plt+0x48b0>
   158c4:	mov	r0, r4
   158c8:	bl	10f00 <__freading@plt>
   158cc:	cmp	r0, #0
   158d0:	ldrbne	r0, [r4, #1]
   158d4:	tstne	r0, #1
   158d8:	bne	158ec <__mempcpy_chk@plt+0x48c0>
   158dc:	mov	r0, r4
   158e0:	sub	sp, fp, #8
   158e4:	pop	{r4, sl, fp, lr}
   158e8:	b	10df8 <fflush@plt>
   158ec:	mov	r0, #1
   158f0:	mov	r2, #0
   158f4:	mov	r3, #0
   158f8:	str	r0, [sp]
   158fc:	mov	r0, r4
   15900:	bl	15908 <__mempcpy_chk@plt+0x48dc>
   15904:	b	158dc <__mempcpy_chk@plt+0x48b0>
   15908:	push	{r4, r5, r6, r7, fp, lr}
   1590c:	add	fp, sp, #16
   15910:	sub	sp, sp, #8
   15914:	mov	r4, r0
   15918:	ldr	r0, [r0, #4]
   1591c:	mov	r5, r3
   15920:	mov	r6, r2
   15924:	ldr	r1, [r4, #8]
   15928:	cmp	r1, r0
   1592c:	bne	15948 <__mempcpy_chk@plt+0x491c>
   15930:	ldrd	r0, [r4, #16]
   15934:	cmp	r1, r0
   15938:	bne	15948 <__mempcpy_chk@plt+0x491c>
   1593c:	ldr	r0, [r4, #36]	; 0x24
   15940:	cmp	r0, #0
   15944:	beq	15960 <__mempcpy_chk@plt+0x4934>
   15948:	mov	r0, r4
   1594c:	mov	r2, r6
   15950:	mov	r3, r5
   15954:	sub	sp, fp, #16
   15958:	pop	{r4, r5, r6, r7, fp, lr}
   1595c:	b	10fa8 <fseeko64@plt>
   15960:	ldr	r7, [fp, #8]
   15964:	mov	r0, r4
   15968:	bl	10f84 <fileno@plt>
   1596c:	mov	r2, r6
   15970:	mov	r3, r5
   15974:	str	r7, [sp]
   15978:	bl	10ea0 <lseek64@plt>
   1597c:	and	r2, r0, r1
   15980:	cmn	r2, #1
   15984:	beq	159a0 <__mempcpy_chk@plt+0x4974>
   15988:	strd	r0, [r4, #80]	; 0x50
   1598c:	ldr	r0, [r4]
   15990:	bic	r0, r0, #16
   15994:	str	r0, [r4]
   15998:	mov	r0, #0
   1599c:	b	159a4 <__mempcpy_chk@plt+0x4978>
   159a0:	mvn	r0, #0
   159a4:	sub	sp, fp, #16
   159a8:	pop	{r4, r5, r6, r7, fp, pc}
   159ac:	ldrb	r2, [r0]
   159b0:	cmp	r2, #0
   159b4:	beq	159d8 <__mempcpy_chk@plt+0x49ac>
   159b8:	add	r3, r0, #1
   159bc:	mov	r0, #0
   159c0:	ror	r0, r0, #23
   159c4:	uxtab	r0, r0, r2
   159c8:	ldrb	r2, [r3], #1
   159cc:	cmp	r2, #0
   159d0:	bne	159c0 <__mempcpy_chk@plt+0x4994>
   159d4:	b	159dc <__mempcpy_chk@plt+0x49b0>
   159d8:	mov	r0, #0
   159dc:	udiv	r2, r0, r1
   159e0:	mls	r0, r2, r1, r0
   159e4:	bx	lr
   159e8:	push	{fp, lr}
   159ec:	mov	fp, sp
   159f0:	mov	r0, #14
   159f4:	bl	10fcc <nl_langinfo@plt>
   159f8:	movw	r1, #24129	; 0x5e41
   159fc:	cmp	r0, #0
   15a00:	movt	r1, #1
   15a04:	movne	r1, r0
   15a08:	movw	r0, #27193	; 0x6a39
   15a0c:	ldrb	r2, [r1]
   15a10:	movt	r0, #1
   15a14:	cmp	r2, #0
   15a18:	movne	r0, r1
   15a1c:	pop	{fp, pc}
   15a20:	push	{r4, r5, r6, r7, fp, lr}
   15a24:	add	fp, sp, #16
   15a28:	sub	sp, sp, #8
   15a2c:	add	r5, sp, #4
   15a30:	cmp	r0, #0
   15a34:	mov	r7, r2
   15a38:	mov	r4, r1
   15a3c:	movne	r5, r0
   15a40:	mov	r0, r5
   15a44:	bl	10ed0 <mbrtowc@plt>
   15a48:	mov	r6, r0
   15a4c:	cmp	r7, #0
   15a50:	beq	15a74 <__mempcpy_chk@plt+0x4a48>
   15a54:	cmn	r6, #2
   15a58:	bcc	15a74 <__mempcpy_chk@plt+0x4a48>
   15a5c:	mov	r0, #0
   15a60:	bl	15abc <__mempcpy_chk@plt+0x4a90>
   15a64:	cmp	r0, #0
   15a68:	ldrbeq	r0, [r4]
   15a6c:	moveq	r6, #1
   15a70:	streq	r0, [r5]
   15a74:	mov	r0, r6
   15a78:	sub	sp, fp, #16
   15a7c:	pop	{r4, r5, r6, r7, fp, pc}
   15a80:	cmp	r2, #0
   15a84:	beq	15ab4 <__mempcpy_chk@plt+0x4a88>
   15a88:	mvn	r3, #0
   15a8c:	udiv	r3, r3, r2
   15a90:	cmp	r3, r1
   15a94:	bcs	15ab4 <__mempcpy_chk@plt+0x4a88>
   15a98:	push	{fp, lr}
   15a9c:	mov	fp, sp
   15aa0:	bl	10f54 <__errno_location@plt>
   15aa4:	mov	r1, #12
   15aa8:	str	r1, [r0]
   15aac:	mov	r0, #0
   15ab0:	pop	{fp, pc}
   15ab4:	mul	r1, r2, r1
   15ab8:	b	15740 <__mempcpy_chk@plt+0x4714>
   15abc:	push	{r4, sl, fp, lr}
   15ac0:	add	fp, sp, #8
   15ac4:	sub	sp, sp, #264	; 0x108
   15ac8:	add	r1, sp, #7
   15acc:	movw	r2, #257	; 0x101
   15ad0:	bl	15b20 <__mempcpy_chk@plt+0x4af4>
   15ad4:	mov	r4, #0
   15ad8:	cmp	r0, #0
   15adc:	bne	15b14 <__mempcpy_chk@plt+0x4ae8>
   15ae0:	movw	r1, #27199	; 0x6a3f
   15ae4:	add	r0, sp, #7
   15ae8:	movt	r1, #1
   15aec:	bl	10dec <strcmp@plt>
   15af0:	cmp	r0, #0
   15af4:	beq	15b14 <__mempcpy_chk@plt+0x4ae8>
   15af8:	movw	r1, #27201	; 0x6a41
   15afc:	add	r0, sp, #7
   15b00:	movt	r1, #1
   15b04:	bl	10dec <strcmp@plt>
   15b08:	mov	r4, r0
   15b0c:	cmp	r0, #0
   15b10:	movwne	r4, #1
   15b14:	mov	r0, r4
   15b18:	sub	sp, fp, #8
   15b1c:	pop	{r4, sl, fp, pc}
   15b20:	push	{r4, r5, r6, r7, fp, lr}
   15b24:	add	fp, sp, #16
   15b28:	mov	r4, r1
   15b2c:	mov	r1, #0
   15b30:	mov	r6, r2
   15b34:	bl	10fb4 <setlocale@plt>
   15b38:	cmp	r0, #0
   15b3c:	beq	15b68 <__mempcpy_chk@plt+0x4b3c>
   15b40:	mov	r7, r0
   15b44:	bl	10f48 <strlen@plt>
   15b48:	cmp	r0, r6
   15b4c:	bcs	15b7c <__mempcpy_chk@plt+0x4b50>
   15b50:	add	r2, r0, #1
   15b54:	mov	r0, r4
   15b58:	mov	r1, r7
   15b5c:	bl	10e34 <memcpy@plt>
   15b60:	mov	r5, #0
   15b64:	b	15ba4 <__mempcpy_chk@plt+0x4b78>
   15b68:	cmp	r6, #0
   15b6c:	mov	r5, #22
   15b70:	movne	r0, #0
   15b74:	strbne	r0, [r4]
   15b78:	b	15ba4 <__mempcpy_chk@plt+0x4b78>
   15b7c:	mov	r5, #34	; 0x22
   15b80:	cmp	r6, #0
   15b84:	beq	15ba4 <__mempcpy_chk@plt+0x4b78>
   15b88:	sub	r6, r6, #1
   15b8c:	mov	r0, r4
   15b90:	mov	r1, r7
   15b94:	mov	r2, r6
   15b98:	bl	10e34 <memcpy@plt>
   15b9c:	mov	r0, #0
   15ba0:	strb	r0, [r4, r6]
   15ba4:	mov	r0, r5
   15ba8:	pop	{r4, r5, r6, r7, fp, pc}
   15bac:	mov	r1, #0
   15bb0:	b	10fb4 <setlocale@plt>
   15bb4:	cmp	r3, #0
   15bb8:	cmpeq	r2, #0
   15bbc:	bne	15bd4 <__mempcpy_chk@plt+0x4ba8>
   15bc0:	cmp	r1, #0
   15bc4:	cmpeq	r0, #0
   15bc8:	mvnne	r1, #0
   15bcc:	mvnne	r0, #0
   15bd0:	b	15bf0 <__mempcpy_chk@plt+0x4bc4>
   15bd4:	sub	sp, sp, #8
   15bd8:	push	{sp, lr}
   15bdc:	bl	15c00 <__mempcpy_chk@plt+0x4bd4>
   15be0:	ldr	lr, [sp, #4]
   15be4:	add	sp, sp, #8
   15be8:	pop	{r2, r3}
   15bec:	bx	lr
   15bf0:	push	{r1, lr}
   15bf4:	mov	r0, #8
   15bf8:	bl	10de0 <raise@plt>
   15bfc:	pop	{r1, pc}
   15c00:	cmp	r1, r3
   15c04:	cmpeq	r0, r2
   15c08:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15c0c:	mov	r4, r0
   15c10:	movcc	r0, #0
   15c14:	mov	r5, r1
   15c18:	ldr	lr, [sp, #36]	; 0x24
   15c1c:	movcc	r1, r0
   15c20:	bcc	15d1c <__mempcpy_chk@plt+0x4cf0>
   15c24:	cmp	r3, #0
   15c28:	clzeq	ip, r2
   15c2c:	clzne	ip, r3
   15c30:	addeq	ip, ip, #32
   15c34:	cmp	r5, #0
   15c38:	clzeq	r1, r4
   15c3c:	addeq	r1, r1, #32
   15c40:	clzne	r1, r5
   15c44:	sub	ip, ip, r1
   15c48:	sub	sl, ip, #32
   15c4c:	lsl	r9, r3, ip
   15c50:	rsb	fp, ip, #32
   15c54:	orr	r9, r9, r2, lsl sl
   15c58:	orr	r9, r9, r2, lsr fp
   15c5c:	lsl	r8, r2, ip
   15c60:	cmp	r5, r9
   15c64:	cmpeq	r4, r8
   15c68:	movcc	r0, #0
   15c6c:	movcc	r1, r0
   15c70:	bcc	15c8c <__mempcpy_chk@plt+0x4c60>
   15c74:	mov	r0, #1
   15c78:	subs	r4, r4, r8
   15c7c:	lsl	r1, r0, sl
   15c80:	orr	r1, r1, r0, lsr fp
   15c84:	lsl	r0, r0, ip
   15c88:	sbc	r5, r5, r9
   15c8c:	cmp	ip, #0
   15c90:	beq	15d1c <__mempcpy_chk@plt+0x4cf0>
   15c94:	lsr	r6, r8, #1
   15c98:	orr	r6, r6, r9, lsl #31
   15c9c:	lsr	r7, r9, #1
   15ca0:	mov	r2, ip
   15ca4:	b	15cc8 <__mempcpy_chk@plt+0x4c9c>
   15ca8:	subs	r3, r4, r6
   15cac:	sbc	r8, r5, r7
   15cb0:	adds	r3, r3, r3
   15cb4:	adc	r8, r8, r8
   15cb8:	adds	r4, r3, #1
   15cbc:	adc	r5, r8, #0
   15cc0:	subs	r2, r2, #1
   15cc4:	beq	15ce4 <__mempcpy_chk@plt+0x4cb8>
   15cc8:	cmp	r5, r7
   15ccc:	cmpeq	r4, r6
   15cd0:	bcs	15ca8 <__mempcpy_chk@plt+0x4c7c>
   15cd4:	adds	r4, r4, r4
   15cd8:	adc	r5, r5, r5
   15cdc:	subs	r2, r2, #1
   15ce0:	bne	15cc8 <__mempcpy_chk@plt+0x4c9c>
   15ce4:	lsr	r3, r4, ip
   15ce8:	orr	r3, r3, r5, lsl fp
   15cec:	lsr	r2, r5, ip
   15cf0:	orr	r3, r3, r5, lsr sl
   15cf4:	adds	r0, r0, r4
   15cf8:	mov	r4, r3
   15cfc:	lsl	r3, r2, ip
   15d00:	orr	r3, r3, r4, lsl sl
   15d04:	lsl	ip, r4, ip
   15d08:	orr	r3, r3, r4, lsr fp
   15d0c:	adc	r1, r1, r5
   15d10:	subs	r0, r0, ip
   15d14:	mov	r5, r2
   15d18:	sbc	r1, r1, r3
   15d1c:	cmp	lr, #0
   15d20:	strdne	r4, [lr]
   15d24:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15d28:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15d2c:	mov	r7, r0
   15d30:	ldr	r6, [pc, #72]	; 15d80 <__mempcpy_chk@plt+0x4d54>
   15d34:	ldr	r5, [pc, #72]	; 15d84 <__mempcpy_chk@plt+0x4d58>
   15d38:	add	r6, pc, r6
   15d3c:	add	r5, pc, r5
   15d40:	sub	r6, r6, r5
   15d44:	mov	r8, r1
   15d48:	mov	r9, r2
   15d4c:	bl	10da8 <calloc@plt-0x20>
   15d50:	asrs	r6, r6, #2
   15d54:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   15d58:	mov	r4, #0
   15d5c:	add	r4, r4, #1
   15d60:	ldr	r3, [r5], #4
   15d64:	mov	r2, r9
   15d68:	mov	r1, r8
   15d6c:	mov	r0, r7
   15d70:	blx	r3
   15d74:	cmp	r6, r4
   15d78:	bne	15d5c <__mempcpy_chk@plt+0x4d30>
   15d7c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15d80:	andeq	r1, r1, ip, asr #3
   15d84:	andeq	r1, r1, r4, asr #3
   15d88:	bx	lr
   15d8c:	ldr	r3, [pc, #12]	; 15da0 <__mempcpy_chk@plt+0x4d74>
   15d90:	mov	r1, #0
   15d94:	add	r3, pc, r3
   15d98:	ldr	r2, [r3]
   15d9c:	b	10f60 <__cxa_atexit@plt>
   15da0:	andeq	r1, r1, r8, asr #6
   15da4:	mov	r2, r1
   15da8:	mov	r1, r0
   15dac:	mov	r0, #3
   15db0:	b	10fe4 <__xstat64@plt>

Disassembly of section .fini:

00015db4 <.fini>:
   15db4:	push	{r3, lr}
   15db8:	pop	{r3, pc}
