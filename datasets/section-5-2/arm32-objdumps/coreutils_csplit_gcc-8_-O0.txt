
../repos/coreutils/src/csplit:     file format elf32-littlearm


Disassembly of section .init:

00011158 <.init>:
   11158:	push	{r3, lr}
   1115c:	bl	1158c <__assert_fail@plt+0x48>
   11160:	pop	{r3, pc}

Disassembly of section .plt:

00011164 <pthread_mutex_unlock@plt-0x14>:
   11164:	push	{lr}		; (str lr, [sp, #-4]!)
   11168:	ldr	lr, [pc, #4]	; 11174 <pthread_mutex_unlock@plt-0x4>
   1116c:	add	lr, pc, lr
   11170:	ldr	pc, [lr, #8]!
   11174:	andeq	r5, r3, ip, lsl #29

00011178 <pthread_mutex_unlock@plt>:
   11178:	add	ip, pc, #0, 12
   1117c:	add	ip, ip, #217088	; 0x35000
   11180:	ldr	pc, [ip, #3724]!	; 0xe8c

00011184 <fdopen@plt>:
   11184:	add	ip, pc, #0, 12
   11188:	add	ip, ip, #217088	; 0x35000
   1118c:	ldr	pc, [ip, #3716]!	; 0xe84

00011190 <calloc@plt>:
   11190:	add	ip, pc, #0, 12
   11194:	add	ip, ip, #217088	; 0x35000
   11198:	ldr	pc, [ip, #3708]!	; 0xe7c

0001119c <fputs_unlocked@plt>:
   1119c:	add	ip, pc, #0, 12
   111a0:	add	ip, ip, #217088	; 0x35000
   111a4:	ldr	pc, [ip, #3700]!	; 0xe74

000111a8 <wctype@plt>:
   111a8:	add	ip, pc, #0, 12
   111ac:	add	ip, ip, #217088	; 0x35000
   111b0:	ldr	pc, [ip, #3692]!	; 0xe6c

000111b4 <raise@plt>:
   111b4:	add	ip, pc, #0, 12
   111b8:	add	ip, ip, #217088	; 0x35000
   111bc:	ldr	pc, [ip, #3684]!	; 0xe64

000111c0 <wcrtomb@plt>:
   111c0:	add	ip, pc, #0, 12
   111c4:	add	ip, ip, #217088	; 0x35000
   111c8:	ldr	pc, [ip, #3676]!	; 0xe5c

000111cc <iswctype@plt>:
   111cc:	add	ip, pc, #0, 12
   111d0:	add	ip, ip, #217088	; 0x35000
   111d4:	ldr	pc, [ip, #3668]!	; 0xe54

000111d8 <strcmp@plt>:
   111d8:	add	ip, pc, #0, 12
   111dc:	add	ip, ip, #217088	; 0x35000
   111e0:	ldr	pc, [ip, #3660]!	; 0xe4c

000111e4 <printf@plt>:
   111e4:	add	ip, pc, #0, 12
   111e8:	add	ip, ip, #217088	; 0x35000
   111ec:	ldr	pc, [ip, #3652]!	; 0xe44

000111f0 <read@plt>:
   111f0:	add	ip, pc, #0, 12
   111f4:	add	ip, ip, #217088	; 0x35000
   111f8:	ldr	pc, [ip, #3644]!	; 0xe3c

000111fc <pthread_mutex_destroy@plt>:
   111fc:	add	ip, pc, #0, 12
   11200:	add	ip, ip, #217088	; 0x35000
   11204:	ldr	pc, [ip, #3636]!	; 0xe34

00011208 <fflush@plt>:
   11208:	add	ip, pc, #0, 12
   1120c:	add	ip, ip, #217088	; 0x35000
   11210:	ldr	pc, [ip, #3628]!	; 0xe2c

00011214 <sigprocmask@plt>:
   11214:	add	ip, pc, #0, 12
   11218:	add	ip, ip, #217088	; 0x35000
   1121c:	ldr	pc, [ip, #3620]!	; 0xe24

00011220 <memmove@plt>:
   11220:	add	ip, pc, #0, 12
   11224:	add	ip, ip, #217088	; 0x35000
   11228:	ldr	pc, [ip, #3612]!	; 0xe1c

0001122c <free@plt>:
   1122c:	add	ip, pc, #0, 12
   11230:	add	ip, ip, #217088	; 0x35000
   11234:	ldr	pc, [ip, #3604]!	; 0xe14

00011238 <pthread_mutex_lock@plt>:
   11238:	add	ip, pc, #0, 12
   1123c:	add	ip, ip, #217088	; 0x35000
   11240:	ldr	pc, [ip, #3596]!	; 0xe0c

00011244 <_exit@plt>:
   11244:	add	ip, pc, #0, 12
   11248:	add	ip, ip, #217088	; 0x35000
   1124c:	ldr	pc, [ip, #3588]!	; 0xe04

00011250 <memcpy@plt>:
   11250:	add	ip, pc, #0, 12
   11254:	add	ip, ip, #217088	; 0x35000
   11258:	ldr	pc, [ip, #3580]!	; 0xdfc

0001125c <tolower@plt>:
   1125c:	add	ip, pc, #0, 12
   11260:	add	ip, ip, #217088	; 0x35000
   11264:	ldr	pc, [ip, #3572]!	; 0xdf4

00011268 <pthread_mutex_init@plt>:
   11268:	add	ip, pc, #0, 12
   1126c:	add	ip, ip, #217088	; 0x35000
   11270:	ldr	pc, [ip, #3564]!	; 0xdec

00011274 <towlower@plt>:
   11274:	add	ip, pc, #0, 12
   11278:	add	ip, ip, #217088	; 0x35000
   1127c:	ldr	pc, [ip, #3556]!	; 0xde4

00011280 <mbsinit@plt>:
   11280:	add	ip, pc, #0, 12
   11284:	add	ip, ip, #217088	; 0x35000
   11288:	ldr	pc, [ip, #3548]!	; 0xddc

0001128c <signal@plt>:
   1128c:	add	ip, pc, #0, 12
   11290:	add	ip, ip, #217088	; 0x35000
   11294:	ldr	pc, [ip, #3540]!	; 0xdd4

00011298 <fwrite_unlocked@plt>:
   11298:	add	ip, pc, #0, 12
   1129c:	add	ip, ip, #217088	; 0x35000
   112a0:	ldr	pc, [ip, #3532]!	; 0xdcc

000112a4 <memcmp@plt>:
   112a4:	add	ip, pc, #0, 12
   112a8:	add	ip, ip, #217088	; 0x35000
   112ac:	ldr	pc, [ip, #3524]!	; 0xdc4

000112b0 <fputc_unlocked@plt>:
   112b0:	add	ip, pc, #0, 12
   112b4:	add	ip, ip, #217088	; 0x35000
   112b8:	ldr	pc, [ip, #3516]!	; 0xdbc

000112bc <unlink@plt>:
   112bc:	add	ip, pc, #0, 12
   112c0:	add	ip, ip, #217088	; 0x35000
   112c4:	ldr	pc, [ip, #3508]!	; 0xdb4

000112c8 <dup2@plt>:
   112c8:	add	ip, pc, #0, 12
   112cc:	add	ip, ip, #217088	; 0x35000
   112d0:	ldr	pc, [ip, #3500]!	; 0xdac

000112d4 <realloc@plt>:
   112d4:	add	ip, pc, #0, 12
   112d8:	add	ip, ip, #217088	; 0x35000
   112dc:	ldr	pc, [ip, #3492]!	; 0xda4

000112e0 <sigismember@plt>:
   112e0:	add	ip, pc, #0, 12
   112e4:	add	ip, ip, #217088	; 0x35000
   112e8:	ldr	pc, [ip, #3484]!	; 0xd9c

000112ec <textdomain@plt>:
   112ec:	add	ip, pc, #0, 12
   112f0:	add	ip, ip, #217088	; 0x35000
   112f4:	ldr	pc, [ip, #3476]!	; 0xd94

000112f8 <rawmemchr@plt>:
   112f8:	add	ip, pc, #0, 12
   112fc:	add	ip, ip, #217088	; 0x35000
   11300:	ldr	pc, [ip, #3468]!	; 0xd8c

00011304 <iswprint@plt>:
   11304:	add	ip, pc, #0, 12
   11308:	add	ip, ip, #217088	; 0x35000
   1130c:	ldr	pc, [ip, #3460]!	; 0xd84

00011310 <sigaction@plt>:
   11310:	add	ip, pc, #0, 12
   11314:	add	ip, ip, #217088	; 0x35000
   11318:	ldr	pc, [ip, #3452]!	; 0xd7c

0001131c <fwrite@plt>:
   1131c:	add	ip, pc, #0, 12
   11320:	add	ip, ip, #217088	; 0x35000
   11324:	ldr	pc, [ip, #3444]!	; 0xd74

00011328 <lseek64@plt>:
   11328:	add	ip, pc, #0, 12
   1132c:	add	ip, ip, #217088	; 0x35000
   11330:	ldr	pc, [ip, #3436]!	; 0xd6c

00011334 <__ctype_get_mb_cur_max@plt>:
   11334:	add	ip, pc, #0, 12
   11338:	add	ip, ip, #217088	; 0x35000
   1133c:	ldr	pc, [ip, #3428]!	; 0xd64

00011340 <strcpy@plt>:
   11340:	add	ip, pc, #0, 12
   11344:	add	ip, ip, #217088	; 0x35000
   11348:	ldr	pc, [ip, #3420]!	; 0xd5c

0001134c <__fpending@plt>:
   1134c:	add	ip, pc, #0, 12
   11350:	add	ip, ip, #217088	; 0x35000
   11354:	ldr	pc, [ip, #3412]!	; 0xd54

00011358 <ferror_unlocked@plt>:
   11358:	add	ip, pc, #0, 12
   1135c:	add	ip, ip, #217088	; 0x35000
   11360:	ldr	pc, [ip, #3404]!	; 0xd4c

00011364 <mbrtowc@plt>:
   11364:	add	ip, pc, #0, 12
   11368:	add	ip, ip, #217088	; 0x35000
   1136c:	ldr	pc, [ip, #3396]!	; 0xd44

00011370 <error@plt>:
   11370:	add	ip, pc, #0, 12
   11374:	add	ip, ip, #217088	; 0x35000
   11378:	ldr	pc, [ip, #3388]!	; 0xd3c

0001137c <open64@plt>:
   1137c:	add	ip, pc, #0, 12
   11380:	add	ip, ip, #217088	; 0x35000
   11384:	ldr	pc, [ip, #3380]!	; 0xd34

00011388 <malloc@plt>:
   11388:	add	ip, pc, #0, 12
   1138c:	add	ip, ip, #217088	; 0x35000
   11390:	ldr	pc, [ip, #3372]!	; 0xd2c

00011394 <sigaddset@plt>:
   11394:	add	ip, pc, #0, 12
   11398:	add	ip, ip, #217088	; 0x35000
   1139c:	ldr	pc, [ip, #3364]!	; 0xd24

000113a0 <__libc_start_main@plt>:
   113a0:	add	ip, pc, #0, 12
   113a4:	add	ip, ip, #217088	; 0x35000
   113a8:	ldr	pc, [ip, #3356]!	; 0xd1c

000113ac <__freading@plt>:
   113ac:	add	ip, pc, #0, 12
   113b0:	add	ip, ip, #217088	; 0x35000
   113b4:	ldr	pc, [ip, #3348]!	; 0xd14

000113b8 <__gmon_start__@plt>:
   113b8:	add	ip, pc, #0, 12
   113bc:	add	ip, ip, #217088	; 0x35000
   113c0:	ldr	pc, [ip, #3340]!	; 0xd0c

000113c4 <getopt_long@plt>:
   113c4:	add	ip, pc, #0, 12
   113c8:	add	ip, ip, #217088	; 0x35000
   113cc:	ldr	pc, [ip, #3332]!	; 0xd04

000113d0 <__ctype_b_loc@plt>:
   113d0:	add	ip, pc, #0, 12
   113d4:	add	ip, ip, #217088	; 0x35000
   113d8:	ldr	pc, [ip, #3324]!	; 0xcfc

000113dc <exit@plt>:
   113dc:	add	ip, pc, #0, 12
   113e0:	add	ip, ip, #217088	; 0x35000
   113e4:	ldr	pc, [ip, #3316]!	; 0xcf4

000113e8 <gettext@plt>:
   113e8:	add	ip, pc, #0, 12
   113ec:	add	ip, ip, #217088	; 0x35000
   113f0:	ldr	pc, [ip, #3308]!	; 0xcec

000113f4 <strlen@plt>:
   113f4:	add	ip, pc, #0, 12
   113f8:	add	ip, ip, #217088	; 0x35000
   113fc:	ldr	pc, [ip, #3300]!	; 0xce4

00011400 <strchr@plt>:
   11400:	add	ip, pc, #0, 12
   11404:	add	ip, ip, #217088	; 0x35000
   11408:	ldr	pc, [ip, #3292]!	; 0xcdc

0001140c <fprintf@plt>:
   1140c:	add	ip, pc, #0, 12
   11410:	add	ip, ip, #217088	; 0x35000
   11414:	ldr	pc, [ip, #3284]!	; 0xcd4

00011418 <__errno_location@plt>:
   11418:	add	ip, pc, #0, 12
   1141c:	add	ip, ip, #217088	; 0x35000
   11420:	ldr	pc, [ip, #3276]!	; 0xccc

00011424 <iswalnum@plt>:
   11424:	add	ip, pc, #0, 12
   11428:	add	ip, ip, #217088	; 0x35000
   1142c:	ldr	pc, [ip, #3268]!	; 0xcc4

00011430 <snprintf@plt>:
   11430:	add	ip, pc, #0, 12
   11434:	add	ip, ip, #217088	; 0x35000
   11438:	ldr	pc, [ip, #3260]!	; 0xcbc

0001143c <__cxa_atexit@plt>:
   1143c:	add	ip, pc, #0, 12
   11440:	add	ip, ip, #217088	; 0x35000
   11444:	ldr	pc, [ip, #3252]!	; 0xcb4

00011448 <memset@plt>:
   11448:	add	ip, pc, #0, 12
   1144c:	add	ip, ip, #217088	; 0x35000
   11450:	ldr	pc, [ip, #3244]!	; 0xcac

00011454 <btowc@plt>:
   11454:	add	ip, pc, #0, 12
   11458:	add	ip, ip, #217088	; 0x35000
   1145c:	ldr	pc, [ip, #3236]!	; 0xca4

00011460 <fileno@plt>:
   11460:	add	ip, pc, #0, 12
   11464:	add	ip, ip, #217088	; 0x35000
   11468:	ldr	pc, [ip, #3228]!	; 0xc9c

0001146c <strtoumax@plt>:
   1146c:	add	ip, pc, #0, 12
   11470:	add	ip, ip, #217088	; 0x35000
   11474:	ldr	pc, [ip, #3220]!	; 0xc94

00011478 <strtoimax@plt>:
   11478:	add	ip, pc, #0, 12
   1147c:	add	ip, ip, #217088	; 0x35000
   11480:	ldr	pc, [ip, #3212]!	; 0xc8c

00011484 <fclose@plt>:
   11484:	add	ip, pc, #0, 12
   11488:	add	ip, ip, #217088	; 0x35000
   1148c:	ldr	pc, [ip, #3204]!	; 0xc84

00011490 <fseeko64@plt>:
   11490:	add	ip, pc, #0, 12
   11494:	add	ip, ip, #217088	; 0x35000
   11498:	ldr	pc, [ip, #3196]!	; 0xc7c

0001149c <fcntl64@plt>:
   1149c:	add	ip, pc, #0, 12
   114a0:	add	ip, ip, #217088	; 0x35000
   114a4:	ldr	pc, [ip, #3188]!	; 0xc74

000114a8 <setlocale@plt>:
   114a8:	add	ip, pc, #0, 12
   114ac:	add	ip, ip, #217088	; 0x35000
   114b0:	ldr	pc, [ip, #3180]!	; 0xc6c

000114b4 <sigemptyset@plt>:
   114b4:	add	ip, pc, #0, 12
   114b8:	add	ip, ip, #217088	; 0x35000
   114bc:	ldr	pc, [ip, #3172]!	; 0xc64

000114c0 <toupper@plt>:
   114c0:	add	ip, pc, #0, 12
   114c4:	add	ip, ip, #217088	; 0x35000
   114c8:	ldr	pc, [ip, #3164]!	; 0xc5c

000114cc <strrchr@plt>:
   114cc:	add	ip, pc, #0, 12
   114d0:	add	ip, ip, #217088	; 0x35000
   114d4:	ldr	pc, [ip, #3156]!	; 0xc54

000114d8 <nl_langinfo@plt>:
   114d8:	add	ip, pc, #0, 12
   114dc:	add	ip, ip, #217088	; 0x35000
   114e0:	ldr	pc, [ip, #3148]!	; 0xc4c

000114e4 <fputc@plt>:
   114e4:	add	ip, pc, #0, 12
   114e8:	add	ip, ip, #217088	; 0x35000
   114ec:	ldr	pc, [ip, #3140]!	; 0xc44

000114f0 <sprintf@plt>:
   114f0:	add	ip, pc, #0, 12
   114f4:	add	ip, ip, #217088	; 0x35000
   114f8:	ldr	pc, [ip, #3132]!	; 0xc3c

000114fc <fopen64@plt>:
   114fc:	add	ip, pc, #0, 12
   11500:	add	ip, ip, #217088	; 0x35000
   11504:	ldr	pc, [ip, #3124]!	; 0xc34

00011508 <bindtextdomain@plt>:
   11508:	add	ip, pc, #0, 12
   1150c:	add	ip, ip, #217088	; 0x35000
   11510:	ldr	pc, [ip, #3116]!	; 0xc2c

00011514 <towupper@plt>:
   11514:	add	ip, pc, #0, 12
   11518:	add	ip, ip, #217088	; 0x35000
   1151c:	ldr	pc, [ip, #3108]!	; 0xc24

00011520 <strncmp@plt>:
   11520:	add	ip, pc, #0, 12
   11524:	add	ip, ip, #217088	; 0x35000
   11528:	ldr	pc, [ip, #3100]!	; 0xc1c

0001152c <abort@plt>:
   1152c:	add	ip, pc, #0, 12
   11530:	add	ip, ip, #217088	; 0x35000
   11534:	ldr	pc, [ip, #3092]!	; 0xc14

00011538 <close@plt>:
   11538:	add	ip, pc, #0, 12
   1153c:	add	ip, ip, #217088	; 0x35000
   11540:	ldr	pc, [ip, #3084]!	; 0xc0c

00011544 <__assert_fail@plt>:
   11544:	add	ip, pc, #0, 12
   11548:	add	ip, ip, #217088	; 0x35000
   1154c:	ldr	pc, [ip, #3076]!	; 0xc04

Disassembly of section .text:

00011550 <.text>:
   11550:	mov	fp, #0
   11554:	mov	lr, #0
   11558:	pop	{r1}		; (ldr r1, [sp], #4)
   1155c:	mov	r2, sp
   11560:	push	{r2}		; (str r2, [sp, #-4]!)
   11564:	push	{r0}		; (str r0, [sp, #-4]!)
   11568:	ldr	ip, [pc, #16]	; 11580 <__assert_fail@plt+0x3c>
   1156c:	push	{ip}		; (str ip, [sp, #-4]!)
   11570:	ldr	r0, [pc, #12]	; 11584 <__assert_fail@plt+0x40>
   11574:	ldr	r3, [pc, #12]	; 11588 <__assert_fail@plt+0x44>
   11578:	bl	113a0 <__libc_start_main@plt>
   1157c:	bl	1152c <abort@plt>
   11580:	andeq	r5, r3, r0, ror r4
   11584:	andeq	r4, r1, r8, ror r4
   11588:	andeq	r5, r3, r0, lsl r4
   1158c:	ldr	r3, [pc, #20]	; 115a8 <__assert_fail@plt+0x64>
   11590:	ldr	r2, [pc, #20]	; 115ac <__assert_fail@plt+0x68>
   11594:	add	r3, pc, r3
   11598:	ldr	r2, [r3, r2]
   1159c:	cmp	r2, #0
   115a0:	bxeq	lr
   115a4:	b	113b8 <__gmon_start__@plt>
   115a8:	andeq	r5, r3, r4, ror #20
   115ac:	andeq	r0, r0, r4, asr r1
   115b0:	ldr	r0, [pc, #24]	; 115d0 <__assert_fail@plt+0x8c>
   115b4:	ldr	r3, [pc, #24]	; 115d4 <__assert_fail@plt+0x90>
   115b8:	cmp	r3, r0
   115bc:	bxeq	lr
   115c0:	ldr	r3, [pc, #16]	; 115d8 <__assert_fail@plt+0x94>
   115c4:	cmp	r3, #0
   115c8:	bxeq	lr
   115cc:	bx	r3
   115d0:	andeq	r7, r4, ip, lsr #3
   115d4:	andeq	r7, r4, ip, lsr #3
   115d8:	andeq	r0, r0, r0
   115dc:	ldr	r0, [pc, #36]	; 11608 <__assert_fail@plt+0xc4>
   115e0:	ldr	r1, [pc, #36]	; 1160c <__assert_fail@plt+0xc8>
   115e4:	sub	r1, r1, r0
   115e8:	asr	r1, r1, #2
   115ec:	add	r1, r1, r1, lsr #31
   115f0:	asrs	r1, r1, #1
   115f4:	bxeq	lr
   115f8:	ldr	r3, [pc, #16]	; 11610 <__assert_fail@plt+0xcc>
   115fc:	cmp	r3, #0
   11600:	bxeq	lr
   11604:	bx	r3
   11608:	andeq	r7, r4, ip, lsr #3
   1160c:	andeq	r7, r4, ip, lsr #3
   11610:	andeq	r0, r0, r0
   11614:	push	{r4, lr}
   11618:	ldr	r4, [pc, #24]	; 11638 <__assert_fail@plt+0xf4>
   1161c:	ldrb	r3, [r4]
   11620:	cmp	r3, #0
   11624:	popne	{r4, pc}
   11628:	bl	115b0 <__assert_fail@plt+0x6c>
   1162c:	mov	r3, #1
   11630:	strb	r3, [r4]
   11634:	pop	{r4, pc}
   11638:	andeq	r7, r4, ip, asr #3
   1163c:	b	115dc <__assert_fail@plt+0x98>
   11640:	str	fp, [sp, #-8]!
   11644:	str	lr, [sp, #4]
   11648:	add	fp, sp, #4
   1164c:	movw	r0, #21656	; 0x5498
   11650:	movt	r0, #3
   11654:	bl	113e8 <gettext@plt>
   11658:	mov	r2, r0
   1165c:	movw	r3, #29124	; 0x71c4
   11660:	movt	r3, #4
   11664:	ldr	r3, [r3]
   11668:	mov	r1, r3
   1166c:	mov	r0, r2
   11670:	bl	1119c <fputs_unlocked@plt>
   11674:	nop	{0}
   11678:	sub	sp, fp, #4
   1167c:	ldr	fp, [sp]
   11680:	add	sp, sp, #4
   11684:	pop	{pc}		; (ldr pc, [sp], #4)
   11688:	str	fp, [sp, #-8]!
   1168c:	str	lr, [sp, #4]
   11690:	add	fp, sp, #4
   11694:	sub	sp, sp, #80	; 0x50
   11698:	str	r0, [fp, #-80]	; 0xffffffb0
   1169c:	movw	r2, #22104	; 0x5658
   116a0:	movt	r2, #3
   116a4:	sub	r3, fp, #72	; 0x48
   116a8:	ldrd	r0, [r2]
   116ac:	strd	r0, [r3]
   116b0:	ldrd	r0, [r2, #8]
   116b4:	strd	r0, [r3, #8]
   116b8:	ldrd	r0, [r2, #16]
   116bc:	strd	r0, [r3, #16]
   116c0:	ldrd	r0, [r2, #24]
   116c4:	strd	r0, [r3, #24]
   116c8:	ldrd	r0, [r2, #32]
   116cc:	strd	r0, [r3, #32]
   116d0:	ldrd	r0, [r2, #40]	; 0x28
   116d4:	strd	r0, [r3, #40]	; 0x28
   116d8:	ldrd	r0, [r2, #48]	; 0x30
   116dc:	strd	r0, [r3, #48]	; 0x30
   116e0:	ldr	r3, [fp, #-80]	; 0xffffffb0
   116e4:	str	r3, [fp, #-8]
   116e8:	sub	r3, fp, #72	; 0x48
   116ec:	str	r3, [fp, #-12]
   116f0:	b	11700 <__assert_fail@plt+0x1bc>
   116f4:	ldr	r3, [fp, #-12]
   116f8:	add	r3, r3, #8
   116fc:	str	r3, [fp, #-12]
   11700:	ldr	r3, [fp, #-12]
   11704:	ldr	r3, [r3]
   11708:	cmp	r3, #0
   1170c:	beq	11730 <__assert_fail@plt+0x1ec>
   11710:	ldr	r3, [fp, #-12]
   11714:	ldr	r3, [r3]
   11718:	mov	r1, r3
   1171c:	ldr	r0, [fp, #-80]	; 0xffffffb0
   11720:	bl	111d8 <strcmp@plt>
   11724:	mov	r3, r0
   11728:	cmp	r3, #0
   1172c:	bne	116f4 <__assert_fail@plt+0x1b0>
   11730:	ldr	r3, [fp, #-12]
   11734:	ldr	r3, [r3, #4]
   11738:	cmp	r3, #0
   1173c:	beq	1174c <__assert_fail@plt+0x208>
   11740:	ldr	r3, [fp, #-12]
   11744:	ldr	r3, [r3, #4]
   11748:	str	r3, [fp, #-8]
   1174c:	movw	r0, #21732	; 0x54e4
   11750:	movt	r0, #3
   11754:	bl	113e8 <gettext@plt>
   11758:	mov	r3, r0
   1175c:	movw	r2, #21756	; 0x54fc
   11760:	movt	r2, #3
   11764:	movw	r1, #21796	; 0x5524
   11768:	movt	r1, #3
   1176c:	mov	r0, r3
   11770:	bl	111e4 <printf@plt>
   11774:	mov	r1, #0
   11778:	mov	r0, #5
   1177c:	bl	114a8 <setlocale@plt>
   11780:	str	r0, [fp, #-16]
   11784:	ldr	r3, [fp, #-16]
   11788:	cmp	r3, #0
   1178c:	beq	117d8 <__assert_fail@plt+0x294>
   11790:	mov	r2, #3
   11794:	movw	r1, #21812	; 0x5534
   11798:	movt	r1, #3
   1179c:	ldr	r0, [fp, #-16]
   117a0:	bl	11520 <strncmp@plt>
   117a4:	mov	r3, r0
   117a8:	cmp	r3, #0
   117ac:	beq	117d8 <__assert_fail@plt+0x294>
   117b0:	movw	r0, #21816	; 0x5538
   117b4:	movt	r0, #3
   117b8:	bl	113e8 <gettext@plt>
   117bc:	mov	r2, r0
   117c0:	movw	r3, #29124	; 0x71c4
   117c4:	movt	r3, #4
   117c8:	ldr	r3, [r3]
   117cc:	mov	r1, r3
   117d0:	mov	r0, r2
   117d4:	bl	1119c <fputs_unlocked@plt>
   117d8:	movw	r0, #21888	; 0x5580
   117dc:	movt	r0, #3
   117e0:	bl	113e8 <gettext@plt>
   117e4:	mov	r3, r0
   117e8:	ldr	r2, [fp, #-80]	; 0xffffffb0
   117ec:	movw	r1, #21756	; 0x54fc
   117f0:	movt	r1, #3
   117f4:	mov	r0, r3
   117f8:	bl	111e4 <printf@plt>
   117fc:	movw	r0, #21916	; 0x559c
   11800:	movt	r0, #3
   11804:	bl	113e8 <gettext@plt>
   11808:	ldr	r2, [fp, #-8]
   1180c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   11810:	cmp	r2, r3
   11814:	bne	11824 <__assert_fail@plt+0x2e0>
   11818:	movw	r3, #21968	; 0x55d0
   1181c:	movt	r3, #3
   11820:	b	1182c <__assert_fail@plt+0x2e8>
   11824:	movw	r3, #21980	; 0x55dc
   11828:	movt	r3, #3
   1182c:	mov	r2, r3
   11830:	ldr	r1, [fp, #-8]
   11834:	bl	111e4 <printf@plt>
   11838:	nop	{0}
   1183c:	sub	sp, fp, #4
   11840:	ldr	fp, [sp]
   11844:	add	sp, sp, #4
   11848:	pop	{pc}		; (ldr pc, [sp], #4)
   1184c:	str	fp, [sp, #-8]!
   11850:	str	lr, [sp, #4]
   11854:	add	fp, sp, #4
   11858:	sub	sp, sp, #128	; 0x80
   1185c:	bl	134c0 <__assert_fail@plt+0x1f7c>
   11860:	sub	r3, fp, #132	; 0x84
   11864:	mov	r2, r3
   11868:	movw	r1, #29224	; 0x7228
   1186c:	movt	r1, #4
   11870:	mov	r0, #0
   11874:	bl	11214 <sigprocmask@plt>
   11878:	mov	r0, #0
   1187c:	bl	133b0 <__assert_fail@plt+0x1e6c>
   11880:	sub	r3, fp, #132	; 0x84
   11884:	mov	r2, #0
   11888:	mov	r1, r3
   1188c:	mov	r0, #2
   11890:	bl	11214 <sigprocmask@plt>
   11894:	nop	{0}
   11898:	sub	sp, fp, #4
   1189c:	ldr	fp, [sp]
   118a0:	add	sp, sp, #4
   118a4:	pop	{pc}		; (ldr pc, [sp], #4)
   118a8:	str	fp, [sp, #-8]!
   118ac:	str	lr, [sp, #4]
   118b0:	add	fp, sp, #4
   118b4:	bl	1184c <__assert_fail@plt+0x308>
   118b8:	mov	r0, #1
   118bc:	bl	113dc <exit@plt>
   118c0:	str	fp, [sp, #-8]!
   118c4:	str	lr, [sp, #4]
   118c8:	add	fp, sp, #4
   118cc:	movw	r0, #22452	; 0x57b4
   118d0:	movt	r0, #3
   118d4:	bl	113e8 <gettext@plt>
   118d8:	mov	r3, r0
   118dc:	movw	r2, #22472	; 0x57c8
   118e0:	movt	r2, #3
   118e4:	mov	r1, #0
   118e8:	mov	r0, #0
   118ec:	bl	11370 <error@plt>
   118f0:	bl	118a8 <__assert_fail@plt+0x364>
   118f4:	str	fp, [sp, #-8]!
   118f8:	str	lr, [sp, #4]
   118fc:	add	fp, sp, #4
   11900:	sub	sp, sp, #8
   11904:	str	r0, [fp, #-8]
   11908:	mov	r0, #1
   1190c:	bl	133b0 <__assert_fail@plt+0x1e6c>
   11910:	mov	r1, #0
   11914:	ldr	r0, [fp, #-8]
   11918:	bl	1128c <signal@plt>
   1191c:	ldr	r0, [fp, #-8]
   11920:	bl	111b4 <raise@plt>
   11924:	nop	{0}
   11928:	sub	sp, fp, #4
   1192c:	ldr	fp, [sp]
   11930:	add	sp, sp, #4
   11934:	pop	{pc}		; (ldr pc, [sp], #4)
   11938:	str	fp, [sp, #-8]!
   1193c:	str	lr, [sp, #4]
   11940:	add	fp, sp, #4
   11944:	sub	sp, sp, #8
   11948:	str	r0, [fp, #-8]
   1194c:	str	r1, [fp, #-12]
   11950:	movw	r3, #29140	; 0x71d4
   11954:	movt	r3, #4
   11958:	ldr	r3, [r3]
   1195c:	mov	r0, r3
   11960:	bl	151ec <__assert_fail@plt+0x3ca8>
   11964:	movw	r3, #29140	; 0x71d4
   11968:	movt	r3, #4
   1196c:	ldr	r2, [fp, #-8]
   11970:	str	r2, [r3]
   11974:	movw	r3, #29144	; 0x71d8
   11978:	movt	r3, #4
   1197c:	ldr	r2, [fp, #-12]
   11980:	str	r2, [r3]
   11984:	nop	{0}
   11988:	sub	sp, fp, #4
   1198c:	ldr	fp, [sp]
   11990:	add	sp, sp, #4
   11994:	pop	{pc}		; (ldr pc, [sp], #4)
   11998:	str	r4, [sp, #-12]!
   1199c:	str	fp, [sp, #4]
   119a0:	str	lr, [sp, #8]
   119a4:	add	fp, sp, #8
   119a8:	sub	sp, sp, #20
   119ac:	str	r0, [fp, #-24]	; 0xffffffe8
   119b0:	str	r1, [fp, #-28]	; 0xffffffe4
   119b4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   119b8:	cmp	r3, #0
   119bc:	bne	119c8 <__assert_fail@plt+0x484>
   119c0:	mov	r3, #0
   119c4:	b	11a40 <__assert_fail@plt+0x4fc>
   119c8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   119cc:	mov	r2, r3
   119d0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   119d4:	mov	r0, #0
   119d8:	bl	315e8 <__assert_fail@plt+0x200a4>
   119dc:	mov	r3, r0
   119e0:	str	r3, [fp, #-16]
   119e4:	ldr	r3, [fp, #-16]
   119e8:	cmp	r3, #0
   119ec:	bne	11a00 <__assert_fail@plt+0x4bc>
   119f0:	movw	r3, #29168	; 0x71f0
   119f4:	movt	r3, #4
   119f8:	mov	r2, #1
   119fc:	strb	r2, [r3]
   11a00:	ldr	r3, [fp, #-16]
   11a04:	cmn	r3, #1
   11a08:	bne	11a3c <__assert_fail@plt+0x4f8>
   11a0c:	bl	11418 <__errno_location@plt>
   11a10:	mov	r3, r0
   11a14:	ldr	r4, [r3]
   11a18:	movw	r0, #22476	; 0x57cc
   11a1c:	movt	r0, #3
   11a20:	bl	113e8 <gettext@plt>
   11a24:	mov	r3, r0
   11a28:	mov	r2, r3
   11a2c:	mov	r1, r4
   11a30:	mov	r0, #0
   11a34:	bl	11370 <error@plt>
   11a38:	bl	118a8 <__assert_fail@plt+0x364>
   11a3c:	ldr	r3, [fp, #-16]
   11a40:	mov	r0, r3
   11a44:	sub	sp, fp, #8
   11a48:	ldr	r4, [sp]
   11a4c:	ldr	fp, [sp, #4]
   11a50:	add	sp, sp, #8
   11a54:	pop	{pc}		; (ldr pc, [sp], #4)
   11a58:	push	{fp}		; (str fp, [sp, #-4]!)
   11a5c:	add	fp, sp, #0
   11a60:	sub	sp, sp, #12
   11a64:	str	r0, [fp, #-8]
   11a68:	ldr	r3, [fp, #-8]
   11a6c:	mov	r2, #0
   11a70:	str	r2, [r3]
   11a74:	ldr	r3, [fp, #-8]
   11a78:	mov	r2, #0
   11a7c:	str	r2, [r3, #4]
   11a80:	ldr	r3, [fp, #-8]
   11a84:	mov	r2, #0
   11a88:	str	r2, [r3, #8]
   11a8c:	nop	{0}
   11a90:	add	sp, fp, #0
   11a94:	pop	{fp}		; (ldr fp, [sp], #4)
   11a98:	bx	lr
   11a9c:	str	fp, [sp, #-8]!
   11aa0:	str	lr, [sp, #4]
   11aa4:	add	fp, sp, #4
   11aa8:	sub	sp, sp, #8
   11aac:	mov	r0, #656	; 0x290
   11ab0:	bl	31f28 <__assert_fail@plt+0x209e4>
   11ab4:	mov	r3, r0
   11ab8:	str	r3, [fp, #-8]
   11abc:	ldr	r3, [fp, #-8]
   11ac0:	mov	r2, #0
   11ac4:	str	r2, [r3, #652]	; 0x28c
   11ac8:	ldr	r0, [fp, #-8]
   11acc:	bl	11a58 <__assert_fail@plt+0x514>
   11ad0:	ldr	r3, [fp, #-8]
   11ad4:	mov	r0, r3
   11ad8:	sub	sp, fp, #4
   11adc:	ldr	fp, [sp]
   11ae0:	add	sp, sp, #4
   11ae4:	pop	{pc}		; (ldr pc, [sp], #4)
   11ae8:	str	r4, [sp, #-12]!
   11aec:	str	fp, [sp, #4]
   11af0:	str	lr, [sp, #8]
   11af4:	add	fp, sp, #8
   11af8:	sub	sp, sp, #28
   11afc:	str	r0, [fp, #-24]	; 0xffffffe8
   11b00:	str	r1, [fp, #-28]	; 0xffffffe4
   11b04:	str	r2, [fp, #-32]	; 0xffffffe0
   11b08:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11b0c:	ldr	r3, [r3, #32]
   11b10:	cmp	r3, #0
   11b14:	bne	11b38 <__assert_fail@plt+0x5f4>
   11b18:	bl	11a9c <__assert_fail@plt+0x558>
   11b1c:	mov	r2, r0
   11b20:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11b24:	str	r2, [r3, #36]	; 0x24
   11b28:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11b2c:	ldr	r2, [r3, #36]	; 0x24
   11b30:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11b34:	str	r2, [r3, #32]
   11b38:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11b3c:	ldr	r3, [r3, #36]	; 0x24
   11b40:	ldr	r3, [r3]
   11b44:	cmp	r3, #80	; 0x50
   11b48:	bne	11b74 <__assert_fail@plt+0x630>
   11b4c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11b50:	ldr	r4, [r3, #36]	; 0x24
   11b54:	bl	11a9c <__assert_fail@plt+0x558>
   11b58:	mov	r3, r0
   11b5c:	str	r3, [r4, #652]	; 0x28c
   11b60:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11b64:	ldr	r3, [r3, #36]	; 0x24
   11b68:	ldr	r2, [r3, #652]	; 0x28c
   11b6c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11b70:	str	r2, [r3, #36]	; 0x24
   11b74:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11b78:	ldr	r3, [r3, #36]	; 0x24
   11b7c:	str	r3, [fp, #-16]
   11b80:	ldr	r3, [fp, #-16]
   11b84:	ldr	r3, [r3, #4]
   11b88:	ldr	r2, [fp, #-16]
   11b8c:	add	r3, r3, #1
   11b90:	lsl	r3, r3, #3
   11b94:	add	r3, r2, r3
   11b98:	ldr	r2, [fp, #-28]	; 0xffffffe4
   11b9c:	str	r2, [r3, #8]
   11ba0:	ldr	r3, [fp, #-16]
   11ba4:	ldr	r3, [r3, #4]
   11ba8:	ldr	r2, [fp, #-16]
   11bac:	add	r3, r3, #1
   11bb0:	lsl	r3, r3, #3
   11bb4:	add	r3, r2, r3
   11bb8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   11bbc:	str	r2, [r3, #4]
   11bc0:	ldr	r3, [fp, #-16]
   11bc4:	ldr	r3, [r3]
   11bc8:	add	r2, r3, #1
   11bcc:	ldr	r3, [fp, #-16]
   11bd0:	str	r2, [r3]
   11bd4:	ldr	r3, [fp, #-16]
   11bd8:	ldr	r3, [r3, #4]
   11bdc:	add	r2, r3, #1
   11be0:	ldr	r3, [fp, #-16]
   11be4:	str	r2, [r3, #4]
   11be8:	nop	{0}
   11bec:	sub	sp, fp, #8
   11bf0:	ldr	r4, [sp]
   11bf4:	ldr	fp, [sp, #4]
   11bf8:	add	sp, sp, #8
   11bfc:	pop	{pc}		; (ldr pc, [sp], #4)
   11c00:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11c04:	strd	r6, [sp, #8]
   11c08:	str	fp, [sp, #16]
   11c0c:	str	lr, [sp, #20]
   11c10:	add	fp, sp, #20
   11c14:	sub	sp, sp, #32
   11c18:	str	r0, [fp, #-48]	; 0xffffffd0
   11c1c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   11c20:	ldr	r3, [r3, #4]
   11c24:	cmp	r3, #0
   11c28:	bne	11c34 <__assert_fail@plt+0x6f0>
   11c2c:	mov	r3, #0
   11c30:	b	11da4 <__assert_fail@plt+0x860>
   11c34:	mov	r3, #0
   11c38:	str	r3, [fp, #-28]	; 0xffffffe4
   11c3c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   11c40:	ldr	r3, [r3, #28]
   11c44:	str	r3, [fp, #-24]	; 0xffffffe8
   11c48:	ldr	r3, [fp, #-48]	; 0xffffffd0
   11c4c:	ldr	r3, [r3, #4]
   11c50:	mov	r2, r3
   11c54:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11c58:	add	r3, r3, r2
   11c5c:	str	r3, [fp, #-32]	; 0xffffffe0
   11c60:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11c64:	mov	r2, #10
   11c68:	strb	r2, [r3]
   11c6c:	mov	r1, #10
   11c70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11c74:	bl	112f8 <rawmemchr@plt>
   11c78:	str	r0, [fp, #-36]	; 0xffffffdc
   11c7c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   11c80:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11c84:	cmp	r2, r3
   11c88:	beq	11ccc <__assert_fail@plt+0x788>
   11c8c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   11c90:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11c94:	sub	r3, r2, r3
   11c98:	add	r3, r3, #1
   11c9c:	str	r3, [fp, #-44]	; 0xffffffd4
   11ca0:	ldr	r2, [fp, #-44]	; 0xffffffd4
   11ca4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   11ca8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   11cac:	bl	11ae8 <__assert_fail@plt+0x5a4>
   11cb0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11cb4:	add	r3, r3, #1
   11cb8:	str	r3, [fp, #-24]	; 0xffffffe8
   11cbc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   11cc0:	add	r3, r3, #1
   11cc4:	str	r3, [fp, #-28]	; 0xffffffe4
   11cc8:	b	11c6c <__assert_fail@plt+0x728>
   11ccc:	nop	{0}
   11cd0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   11cd4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11cd8:	sub	r3, r2, r3
   11cdc:	str	r3, [fp, #-40]	; 0xffffffd8
   11ce0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   11ce4:	cmp	r3, #0
   11ce8:	beq	11d3c <__assert_fail@plt+0x7f8>
   11cec:	movw	r3, #29168	; 0x71f0
   11cf0:	movt	r3, #4
   11cf4:	ldrb	r3, [r3]
   11cf8:	cmp	r3, #0
   11cfc:	beq	11d20 <__assert_fail@plt+0x7dc>
   11d00:	ldr	r2, [fp, #-40]	; 0xffffffd8
   11d04:	ldr	r1, [fp, #-24]	; 0xffffffe8
   11d08:	ldr	r0, [fp, #-48]	; 0xffffffd0
   11d0c:	bl	11ae8 <__assert_fail@plt+0x5a4>
   11d10:	ldr	r3, [fp, #-28]	; 0xffffffe4
   11d14:	add	r3, r3, #1
   11d18:	str	r3, [fp, #-28]	; 0xffffffe4
   11d1c:	b	11d3c <__assert_fail@plt+0x7f8>
   11d20:	ldr	r1, [fp, #-40]	; 0xffffffd8
   11d24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11d28:	bl	32694 <__assert_fail@plt+0x21150>
   11d2c:	mov	r3, r0
   11d30:	ldr	r1, [fp, #-40]	; 0xffffffd8
   11d34:	mov	r0, r3
   11d38:	bl	11938 <__assert_fail@plt+0x3f4>
   11d3c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   11d40:	ldr	r2, [fp, #-28]	; 0xffffffe4
   11d44:	str	r2, [r3, #24]
   11d48:	movw	r3, #29152	; 0x71e0
   11d4c:	movt	r3, #4
   11d50:	ldrd	r2, [r3]
   11d54:	adds	r6, r2, #1
   11d58:	adc	r7, r3, #0
   11d5c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   11d60:	strd	r6, [r3, #8]
   11d64:	ldr	r3, [fp, #-48]	; 0xffffffd0
   11d68:	ldrd	r2, [r3, #8]
   11d6c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   11d70:	strd	r2, [r1, #16]
   11d74:	ldr	r3, [fp, #-28]	; 0xffffffe4
   11d78:	mov	r0, r3
   11d7c:	asr	r1, r0, #31
   11d80:	movw	r3, #29152	; 0x71e0
   11d84:	movt	r3, #4
   11d88:	ldrd	r2, [r3]
   11d8c:	adds	r4, r0, r2
   11d90:	adc	r5, r1, r3
   11d94:	movw	r3, #29152	; 0x71e0
   11d98:	movt	r3, #4
   11d9c:	strd	r4, [r3]
   11da0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   11da4:	mov	r0, r3
   11da8:	sub	sp, fp, #20
   11dac:	ldrd	r4, [sp]
   11db0:	ldrd	r6, [sp, #8]
   11db4:	ldr	fp, [sp, #16]
   11db8:	add	sp, sp, #20
   11dbc:	pop	{pc}		; (ldr pc, [sp], #4)
   11dc0:	str	fp, [sp, #-8]!
   11dc4:	str	lr, [sp, #4]
   11dc8:	add	fp, sp, #4
   11dcc:	sub	sp, sp, #16
   11dd0:	str	r0, [fp, #-16]
   11dd4:	ldr	r3, [fp, #-16]
   11dd8:	ldr	r3, [r3, #32]
   11ddc:	str	r3, [fp, #-8]
   11de0:	b	11e00 <__assert_fail@plt+0x8bc>
   11de4:	ldr	r3, [fp, #-8]
   11de8:	ldr	r3, [r3, #652]	; 0x28c
   11dec:	str	r3, [fp, #-12]
   11df0:	ldr	r0, [fp, #-8]
   11df4:	bl	151ec <__assert_fail@plt+0x3ca8>
   11df8:	ldr	r3, [fp, #-12]
   11dfc:	str	r3, [fp, #-8]
   11e00:	ldr	r3, [fp, #-8]
   11e04:	cmp	r3, #0
   11e08:	bne	11de4 <__assert_fail@plt+0x8a0>
   11e0c:	ldr	r3, [fp, #-16]
   11e10:	ldr	r3, [r3, #28]
   11e14:	mov	r0, r3
   11e18:	bl	151ec <__assert_fail@plt+0x3ca8>
   11e1c:	ldr	r0, [fp, #-16]
   11e20:	bl	151ec <__assert_fail@plt+0x3ca8>
   11e24:	nop	{0}
   11e28:	sub	sp, fp, #4
   11e2c:	ldr	fp, [sp]
   11e30:	add	sp, sp, #4
   11e34:	pop	{pc}		; (ldr pc, [sp], #4)
   11e38:	strd	r4, [sp, #-16]!
   11e3c:	str	fp, [sp, #8]
   11e40:	str	lr, [sp, #12]
   11e44:	add	fp, sp, #12
   11e48:	sub	sp, sp, #24
   11e4c:	str	r0, [fp, #-24]	; 0xffffffe8
   11e50:	mov	r0, #48	; 0x30
   11e54:	bl	31f28 <__assert_fail@plt+0x209e4>
   11e58:	mov	r3, r0
   11e5c:	str	r3, [fp, #-16]
   11e60:	ldr	r3, [fp, #-16]
   11e64:	mov	r2, #0
   11e68:	str	r2, [r3]
   11e6c:	ldr	r1, [fp, #-16]
   11e70:	mov	r3, #1
   11e74:	str	r3, [sp]
   11e78:	mvn	r3, #0
   11e7c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   11e80:	mov	r0, #0
   11e84:	bl	32308 <__assert_fail@plt+0x20dc4>
   11e88:	mov	r2, r0
   11e8c:	ldr	r3, [fp, #-16]
   11e90:	str	r2, [r3, #28]
   11e94:	ldr	r3, [fp, #-16]
   11e98:	mov	r2, #0
   11e9c:	str	r2, [r3, #4]
   11ea0:	movw	r3, #29152	; 0x71e0
   11ea4:	movt	r3, #4
   11ea8:	ldrd	r2, [r3]
   11eac:	adds	r4, r2, #1
   11eb0:	adc	r5, r3, #0
   11eb4:	ldr	r3, [fp, #-16]
   11eb8:	strd	r4, [r3, #16]
   11ebc:	ldr	r3, [fp, #-16]
   11ec0:	ldrd	r2, [r3, #16]
   11ec4:	ldr	r1, [fp, #-16]
   11ec8:	strd	r2, [r1, #8]
   11ecc:	ldr	r3, [fp, #-16]
   11ed0:	mov	r2, #0
   11ed4:	str	r2, [r3, #24]
   11ed8:	ldr	r3, [fp, #-16]
   11edc:	mov	r2, #0
   11ee0:	str	r2, [r3, #36]	; 0x24
   11ee4:	ldr	r3, [fp, #-16]
   11ee8:	ldr	r2, [r3, #36]	; 0x24
   11eec:	ldr	r3, [fp, #-16]
   11ef0:	str	r2, [r3, #32]
   11ef4:	ldr	r3, [fp, #-16]
   11ef8:	mov	r2, #0
   11efc:	str	r2, [r3, #40]	; 0x28
   11f00:	ldr	r3, [fp, #-16]
   11f04:	mov	r0, r3
   11f08:	sub	sp, fp, #12
   11f0c:	ldrd	r4, [sp]
   11f10:	ldr	fp, [sp, #8]
   11f14:	add	sp, sp, #12
   11f18:	pop	{pc}		; (ldr pc, [sp], #4)
   11f1c:	push	{fp}		; (str fp, [sp, #-4]!)
   11f20:	add	fp, sp, #0
   11f24:	sub	sp, sp, #20
   11f28:	str	r0, [fp, #-16]
   11f2c:	ldr	r3, [fp, #-16]
   11f30:	mov	r2, #0
   11f34:	str	r2, [r3, #40]	; 0x28
   11f38:	ldr	r3, [fp, #-16]
   11f3c:	ldr	r2, [r3, #32]
   11f40:	ldr	r3, [fp, #-16]
   11f44:	str	r2, [r3, #36]	; 0x24
   11f48:	movw	r3, #29136	; 0x71d0
   11f4c:	movt	r3, #4
   11f50:	ldr	r3, [r3]
   11f54:	cmp	r3, #0
   11f58:	bne	11f70 <__assert_fail@plt+0xa2c>
   11f5c:	movw	r3, #29136	; 0x71d0
   11f60:	movt	r3, #4
   11f64:	ldr	r2, [fp, #-16]
   11f68:	str	r2, [r3]
   11f6c:	b	11fac <__assert_fail@plt+0xa68>
   11f70:	movw	r3, #29136	; 0x71d0
   11f74:	movt	r3, #4
   11f78:	ldr	r3, [r3]
   11f7c:	str	r3, [fp, #-8]
   11f80:	b	11f90 <__assert_fail@plt+0xa4c>
   11f84:	ldr	r3, [fp, #-8]
   11f88:	ldr	r3, [r3, #40]	; 0x28
   11f8c:	str	r3, [fp, #-8]
   11f90:	ldr	r3, [fp, #-8]
   11f94:	ldr	r3, [r3, #40]	; 0x28
   11f98:	cmp	r3, #0
   11f9c:	bne	11f84 <__assert_fail@plt+0xa40>
   11fa0:	ldr	r3, [fp, #-8]
   11fa4:	ldr	r2, [fp, #-16]
   11fa8:	str	r2, [r3, #40]	; 0x28
   11fac:	nop	{0}
   11fb0:	add	sp, fp, #0
   11fb4:	pop	{fp}		; (ldr fp, [sp], #4)
   11fb8:	bx	lr
   11fbc:	strd	r4, [sp, #-16]!
   11fc0:	str	fp, [sp, #8]
   11fc4:	str	lr, [sp, #12]
   11fc8:	add	fp, sp, #12
   11fcc:	sub	sp, sp, #24
   11fd0:	movw	r3, #8191	; 0x1fff
   11fd4:	str	r3, [fp, #-32]	; 0xffffffe0
   11fd8:	movw	r3, #29168	; 0x71f0
   11fdc:	movt	r3, #4
   11fe0:	ldrb	r3, [r3]
   11fe4:	cmp	r3, #0
   11fe8:	beq	11ff4 <__assert_fail@plt+0xab0>
   11fec:	mov	r3, #0
   11ff0:	b	121d8 <__assert_fail@plt+0xc94>
   11ff4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   11ff8:	movw	r3, #29144	; 0x71d8
   11ffc:	movt	r3, #4
   12000:	ldr	r3, [r3]
   12004:	cmp	r2, r3
   12008:	bgt	12020 <__assert_fail@plt+0xadc>
   1200c:	movw	r3, #29144	; 0x71d8
   12010:	movt	r3, #4
   12014:	ldr	r3, [r3]
   12018:	add	r3, r3, #1
   1201c:	str	r3, [fp, #-32]	; 0xffffffe0
   12020:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12024:	mov	r0, r3
   12028:	bl	11e38 <__assert_fail@plt+0x8f4>
   1202c:	str	r0, [fp, #-24]	; 0xffffffe8
   12030:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12034:	ldr	r3, [r3]
   12038:	str	r3, [fp, #-16]
   1203c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12040:	ldr	r3, [r3, #28]
   12044:	str	r3, [fp, #-20]	; 0xffffffec
   12048:	movw	r3, #29144	; 0x71d8
   1204c:	movt	r3, #4
   12050:	ldr	r3, [r3]
   12054:	cmp	r3, #0
   12058:	beq	120e4 <__assert_fail@plt+0xba0>
   1205c:	movw	r3, #29140	; 0x71d4
   12060:	movt	r3, #4
   12064:	ldr	r1, [r3]
   12068:	movw	r3, #29144	; 0x71d8
   1206c:	movt	r3, #4
   12070:	ldr	r3, [r3]
   12074:	mov	r2, r3
   12078:	ldr	r0, [fp, #-20]	; 0xffffffec
   1207c:	bl	11250 <memcpy@plt>
   12080:	movw	r3, #29144	; 0x71d8
   12084:	movt	r3, #4
   12088:	ldr	r3, [r3]
   1208c:	mov	r2, r3
   12090:	ldr	r3, [fp, #-20]	; 0xffffffec
   12094:	add	r3, r3, r2
   12098:	str	r3, [fp, #-20]	; 0xffffffec
   1209c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   120a0:	ldr	r2, [r3, #4]
   120a4:	movw	r3, #29144	; 0x71d8
   120a8:	movt	r3, #4
   120ac:	ldr	r3, [r3]
   120b0:	add	r2, r2, r3
   120b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   120b8:	str	r2, [r3, #4]
   120bc:	movw	r3, #29144	; 0x71d8
   120c0:	movt	r3, #4
   120c4:	ldr	r3, [r3]
   120c8:	ldr	r2, [fp, #-16]
   120cc:	sub	r3, r2, r3
   120d0:	str	r3, [fp, #-16]
   120d4:	movw	r3, #29144	; 0x71d8
   120d8:	movt	r3, #4
   120dc:	mov	r2, #0
   120e0:	str	r2, [r3]
   120e4:	ldr	r3, [fp, #-16]
   120e8:	sub	r3, r3, #1
   120ec:	mov	r1, r3
   120f0:	ldr	r0, [fp, #-20]	; 0xffffffec
   120f4:	bl	11998 <__assert_fail@plt+0x454>
   120f8:	mov	r2, r0
   120fc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12100:	ldr	r3, [r3, #4]
   12104:	add	r2, r2, r3
   12108:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1210c:	str	r2, [r3, #4]
   12110:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12114:	bl	11c00 <__assert_fail@plt+0x6bc>
   12118:	str	r0, [fp, #-28]	; 0xffffffe4
   1211c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12120:	cmp	r3, #0
   12124:	bne	121a4 <__assert_fail@plt+0xc60>
   12128:	movw	r3, #29168	; 0x71f0
   1212c:	movt	r3, #4
   12130:	ldrb	r3, [r3]
   12134:	cmp	r3, #0
   12138:	bne	121a4 <__assert_fail@plt+0xc60>
   1213c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12140:	ldr	r3, [r3]
   12144:	mov	r0, #0
   12148:	mov	r2, r3
   1214c:	asr	r3, r2, #31
   12150:	adds	r4, r2, r2
   12154:	adc	r5, r3, r3
   12158:	mov	r2, #0
   1215c:	mov	r3, #0
   12160:	mov	r2, r5
   12164:	asr	r3, r5, #31
   12168:	asr	r1, r4, #31
   1216c:	cmp	r1, r2
   12170:	beq	12178 <__assert_fail@plt+0xc34>
   12174:	mov	r0, #1
   12178:	mov	r3, r4
   1217c:	str	r3, [fp, #-32]	; 0xffffffe0
   12180:	mov	r3, r0
   12184:	and	r3, r3, #1
   12188:	uxtb	r3, r3
   1218c:	cmp	r3, #0
   12190:	beq	12198 <__assert_fail@plt+0xc54>
   12194:	bl	118c0 <__assert_fail@plt+0x37c>
   12198:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1219c:	bl	11dc0 <__assert_fail@plt+0x87c>
   121a0:	b	12020 <__assert_fail@plt+0xadc>
   121a4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   121a8:	cmp	r3, #0
   121ac:	beq	121bc <__assert_fail@plt+0xc78>
   121b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   121b4:	bl	11f1c <__assert_fail@plt+0x9d8>
   121b8:	b	121c4 <__assert_fail@plt+0xc80>
   121bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   121c0:	bl	11dc0 <__assert_fail@plt+0x87c>
   121c4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   121c8:	cmp	r3, #0
   121cc:	movne	r3, #1
   121d0:	moveq	r3, #0
   121d4:	uxtb	r3, r3
   121d8:	mov	r0, r3
   121dc:	sub	sp, fp, #12
   121e0:	ldrd	r4, [sp]
   121e4:	ldr	fp, [sp, #8]
   121e8:	add	sp, sp, #12
   121ec:	pop	{pc}		; (ldr pc, [sp], #4)
   121f0:	strd	r4, [sp, #-16]!
   121f4:	str	fp, [sp, #8]
   121f8:	str	lr, [sp, #12]
   121fc:	add	fp, sp, #12
   12200:	movw	r3, #29136	; 0x71d0
   12204:	movt	r3, #4
   12208:	ldr	r3, [r3]
   1220c:	cmp	r3, #0
   12210:	bne	12258 <__assert_fail@plt+0xd14>
   12214:	bl	11fbc <__assert_fail@plt+0xa78>
   12218:	mov	r3, r0
   1221c:	eor	r3, r3, #1
   12220:	uxtb	r3, r3
   12224:	cmp	r3, #0
   12228:	beq	12258 <__assert_fail@plt+0xd14>
   1222c:	bl	11418 <__errno_location@plt>
   12230:	mov	r3, r0
   12234:	ldr	r4, [r3]
   12238:	movw	r0, #22488	; 0x57d8
   1223c:	movt	r0, #3
   12240:	bl	113e8 <gettext@plt>
   12244:	mov	r3, r0
   12248:	mov	r2, r3
   1224c:	mov	r1, r4
   12250:	mov	r0, #1
   12254:	bl	11370 <error@plt>
   12258:	movw	r3, #29136	; 0x71d0
   1225c:	movt	r3, #4
   12260:	ldr	r3, [r3]
   12264:	ldrd	r2, [r3, #16]
   12268:	mov	r0, r2
   1226c:	mov	r1, r3
   12270:	sub	sp, fp, #12
   12274:	ldrd	r4, [sp]
   12278:	ldr	fp, [sp, #8]
   1227c:	add	sp, sp, #12
   12280:	pop	{pc}		; (ldr pc, [sp], #4)
   12284:	strd	r4, [sp, #-16]!
   12288:	str	fp, [sp, #8]
   1228c:	str	lr, [sp, #12]
   12290:	add	fp, sp, #12
   12294:	sub	sp, sp, #8
   12298:	movw	r3, #29352	; 0x72a8
   1229c:	movt	r3, #4
   122a0:	ldr	r3, [r3]
   122a4:	cmp	r3, #0
   122a8:	beq	122d0 <__assert_fail@plt+0xd8c>
   122ac:	movw	r3, #29352	; 0x72a8
   122b0:	movt	r3, #4
   122b4:	ldr	r3, [r3]
   122b8:	mov	r0, r3
   122bc:	bl	11dc0 <__assert_fail@plt+0x87c>
   122c0:	movw	r3, #29352	; 0x72a8
   122c4:	movt	r3, #4
   122c8:	mov	r2, #0
   122cc:	str	r2, [r3]
   122d0:	movw	r3, #29136	; 0x71d0
   122d4:	movt	r3, #4
   122d8:	ldr	r3, [r3]
   122dc:	cmp	r3, #0
   122e0:	bne	12304 <__assert_fail@plt+0xdc0>
   122e4:	bl	11fbc <__assert_fail@plt+0xa78>
   122e8:	mov	r3, r0
   122ec:	eor	r3, r3, #1
   122f0:	uxtb	r3, r3
   122f4:	cmp	r3, #0
   122f8:	beq	12304 <__assert_fail@plt+0xdc0>
   122fc:	mov	r3, #0
   12300:	b	12448 <__assert_fail@plt+0xf04>
   12304:	movw	r3, #29136	; 0x71d0
   12308:	movt	r3, #4
   1230c:	ldr	r3, [r3]
   12310:	ldrd	r0, [r3, #16]
   12314:	movw	r3, #29160	; 0x71e8
   12318:	movt	r3, #4
   1231c:	ldrd	r2, [r3]
   12320:	cmp	r2, r0
   12324:	sbcs	r3, r3, r1
   12328:	bge	12348 <__assert_fail@plt+0xe04>
   1232c:	movw	r3, #29136	; 0x71d0
   12330:	movt	r3, #4
   12334:	ldr	r3, [r3]
   12338:	ldrd	r0, [r3, #16]
   1233c:	movw	r3, #29160	; 0x71e8
   12340:	movt	r3, #4
   12344:	strd	r0, [r3]
   12348:	movw	r3, #29136	; 0x71d0
   1234c:	movt	r3, #4
   12350:	ldr	r1, [r3]
   12354:	ldrd	r2, [r1, #16]
   12358:	adds	r4, r2, #1
   1235c:	adc	r5, r3, #0
   12360:	strd	r4, [r1, #16]
   12364:	movw	r3, #29136	; 0x71d0
   12368:	movt	r3, #4
   1236c:	ldr	r3, [r3]
   12370:	ldr	r3, [r3, #36]	; 0x24
   12374:	str	r3, [fp, #-16]
   12378:	ldr	r3, [fp, #-16]
   1237c:	ldr	r3, [r3, #8]
   12380:	add	r3, r3, #1
   12384:	lsl	r3, r3, #3
   12388:	ldr	r2, [fp, #-16]
   1238c:	add	r3, r2, r3
   12390:	add	r3, r3, #4
   12394:	str	r3, [fp, #-20]	; 0xffffffec
   12398:	ldr	r3, [fp, #-16]
   1239c:	ldr	r3, [r3, #8]
   123a0:	add	r2, r3, #1
   123a4:	ldr	r3, [fp, #-16]
   123a8:	str	r2, [r3, #8]
   123ac:	ldr	r3, [fp, #-16]
   123b0:	ldr	r2, [r3, #8]
   123b4:	ldr	r3, [fp, #-16]
   123b8:	ldr	r3, [r3]
   123bc:	cmp	r2, r3
   123c0:	bne	12444 <__assert_fail@plt+0xf00>
   123c4:	movw	r3, #29136	; 0x71d0
   123c8:	movt	r3, #4
   123cc:	ldr	r3, [r3]
   123d0:	ldr	r2, [fp, #-16]
   123d4:	ldr	r2, [r2, #652]	; 0x28c
   123d8:	str	r2, [r3, #36]	; 0x24
   123dc:	movw	r3, #29136	; 0x71d0
   123e0:	movt	r3, #4
   123e4:	ldr	r3, [r3]
   123e8:	ldr	r3, [r3, #36]	; 0x24
   123ec:	cmp	r3, #0
   123f0:	beq	12410 <__assert_fail@plt+0xecc>
   123f4:	movw	r3, #29136	; 0x71d0
   123f8:	movt	r3, #4
   123fc:	ldr	r3, [r3]
   12400:	ldr	r3, [r3, #36]	; 0x24
   12404:	ldr	r3, [r3]
   12408:	cmp	r3, #0
   1240c:	bne	12444 <__assert_fail@plt+0xf00>
   12410:	movw	r3, #29136	; 0x71d0
   12414:	movt	r3, #4
   12418:	ldr	r2, [r3]
   1241c:	movw	r3, #29352	; 0x72a8
   12420:	movt	r3, #4
   12424:	str	r2, [r3]
   12428:	movw	r3, #29136	; 0x71d0
   1242c:	movt	r3, #4
   12430:	ldr	r3, [r3]
   12434:	ldr	r2, [r3, #40]	; 0x28
   12438:	movw	r3, #29136	; 0x71d0
   1243c:	movt	r3, #4
   12440:	str	r2, [r3]
   12444:	ldr	r3, [fp, #-20]	; 0xffffffec
   12448:	mov	r0, r3
   1244c:	sub	sp, fp, #12
   12450:	ldrd	r4, [sp]
   12454:	ldr	fp, [sp, #8]
   12458:	add	sp, sp, #12
   1245c:	pop	{pc}		; (ldr pc, [sp], #4)
   12460:	strd	r4, [sp, #-16]!
   12464:	str	fp, [sp, #8]
   12468:	str	lr, [sp, #12]
   1246c:	add	fp, sp, #12
   12470:	sub	sp, sp, #24
   12474:	strd	r0, [fp, #-36]	; 0xffffffdc
   12478:	movw	r3, #29136	; 0x71d0
   1247c:	movt	r3, #4
   12480:	ldr	r3, [r3]
   12484:	cmp	r3, #0
   12488:	bne	124ac <__assert_fail@plt+0xf68>
   1248c:	bl	11fbc <__assert_fail@plt+0xa78>
   12490:	mov	r3, r0
   12494:	eor	r3, r3, #1
   12498:	uxtb	r3, r3
   1249c:	cmp	r3, #0
   124a0:	beq	124ac <__assert_fail@plt+0xf68>
   124a4:	mov	r3, #0
   124a8:	b	125e8 <__assert_fail@plt+0x10a4>
   124ac:	movw	r3, #29136	; 0x71d0
   124b0:	movt	r3, #4
   124b4:	ldr	r3, [r3]
   124b8:	ldrd	r2, [r3, #8]
   124bc:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   124c0:	cmp	r0, r2
   124c4:	sbcs	r3, r1, r3
   124c8:	bge	124d4 <__assert_fail@plt+0xf90>
   124cc:	mov	r3, #0
   124d0:	b	125e8 <__assert_fail@plt+0x10a4>
   124d4:	movw	r3, #29136	; 0x71d0
   124d8:	movt	r3, #4
   124dc:	ldr	r3, [r3]
   124e0:	str	r3, [fp, #-16]
   124e4:	ldr	r3, [fp, #-16]
   124e8:	cmp	r3, #0
   124ec:	bne	12510 <__assert_fail@plt+0xfcc>
   124f0:	movw	r3, #24792	; 0x60d8
   124f4:	movt	r3, #3
   124f8:	movw	r2, #583	; 0x247
   124fc:	movw	r1, #22508	; 0x57ec
   12500:	movt	r1, #3
   12504:	movw	r0, #22524	; 0x57fc
   12508:	movt	r0, #3
   1250c:	bl	11544 <__assert_fail@plt>
   12510:	ldr	r3, [fp, #-16]
   12514:	ldrd	r0, [r3, #8]
   12518:	ldr	r3, [fp, #-16]
   1251c:	ldr	r3, [r3, #24]
   12520:	mov	r2, r3
   12524:	asr	r3, r2, #31
   12528:	adds	r4, r0, r2
   1252c:	adc	r5, r1, r3
   12530:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   12534:	cmp	r2, r4
   12538:	sbcs	r3, r3, r5
   1253c:	bge	125a8 <__assert_fail@plt+0x1064>
   12540:	ldr	r3, [fp, #-16]
   12544:	ldr	r3, [r3, #32]
   12548:	str	r3, [fp, #-20]	; 0xffffffec
   1254c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   12550:	ldr	r3, [fp, #-16]
   12554:	ldrd	r2, [r3, #8]
   12558:	mov	r3, r2
   1255c:	sub	r3, r1, r3
   12560:	str	r3, [fp, #-24]	; 0xffffffe8
   12564:	b	12580 <__assert_fail@plt+0x103c>
   12568:	ldr	r3, [fp, #-20]	; 0xffffffec
   1256c:	ldr	r3, [r3, #652]	; 0x28c
   12570:	str	r3, [fp, #-20]	; 0xffffffec
   12574:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12578:	sub	r3, r3, #80	; 0x50
   1257c:	str	r3, [fp, #-24]	; 0xffffffe8
   12580:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12584:	cmp	r3, #79	; 0x4f
   12588:	bgt	12568 <__assert_fail@plt+0x1024>
   1258c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12590:	add	r3, r3, #1
   12594:	lsl	r3, r3, #3
   12598:	ldr	r2, [fp, #-20]	; 0xffffffec
   1259c:	add	r3, r2, r3
   125a0:	add	r3, r3, #4
   125a4:	b	125e8 <__assert_fail@plt+0x10a4>
   125a8:	ldr	r3, [fp, #-16]
   125ac:	ldr	r3, [r3, #40]	; 0x28
   125b0:	cmp	r3, #0
   125b4:	bne	125d8 <__assert_fail@plt+0x1094>
   125b8:	bl	11fbc <__assert_fail@plt+0xa78>
   125bc:	mov	r3, r0
   125c0:	eor	r3, r3, #1
   125c4:	uxtb	r3, r3
   125c8:	cmp	r3, #0
   125cc:	beq	125d8 <__assert_fail@plt+0x1094>
   125d0:	mov	r3, #0
   125d4:	b	125e8 <__assert_fail@plt+0x10a4>
   125d8:	ldr	r3, [fp, #-16]
   125dc:	ldr	r3, [r3, #40]	; 0x28
   125e0:	str	r3, [fp, #-16]
   125e4:	b	124e4 <__assert_fail@plt+0xfa0>
   125e8:	mov	r0, r3
   125ec:	sub	sp, fp, #12
   125f0:	ldrd	r4, [sp]
   125f4:	ldr	fp, [sp, #8]
   125f8:	add	sp, sp, #12
   125fc:	pop	{pc}		; (ldr pc, [sp], #4)
   12600:	str	fp, [sp, #-8]!
   12604:	str	lr, [sp, #4]
   12608:	add	fp, sp, #4
   1260c:	movw	r3, #29160	; 0x71e8
   12610:	movt	r3, #4
   12614:	ldrd	r2, [r3]
   12618:	adds	r0, r2, #1
   1261c:	adc	r1, r3, #0
   12620:	bl	12460 <__assert_fail@plt+0xf1c>
   12624:	mov	r3, r0
   12628:	cmp	r3, #0
   1262c:	moveq	r3, #1
   12630:	movne	r3, #0
   12634:	uxtb	r3, r3
   12638:	mov	r0, r3
   1263c:	sub	sp, fp, #4
   12640:	ldr	fp, [sp]
   12644:	add	sp, sp, #4
   12648:	pop	{pc}		; (ldr pc, [sp], #4)
   1264c:	strd	r4, [sp, #-16]!
   12650:	str	fp, [sp, #8]
   12654:	str	lr, [sp, #12]
   12658:	add	fp, sp, #12
   1265c:	sub	sp, sp, #8
   12660:	str	r0, [fp, #-16]
   12664:	movw	r1, #22528	; 0x5800
   12668:	movt	r1, #3
   1266c:	ldr	r0, [fp, #-16]
   12670:	bl	111d8 <strcmp@plt>
   12674:	mov	r3, r0
   12678:	cmp	r3, #0
   1267c:	beq	126dc <__assert_fail@plt+0x1198>
   12680:	mov	r3, #0
   12684:	mov	r2, #0
   12688:	ldr	r1, [fp, #-16]
   1268c:	mov	r0, #0
   12690:	bl	14f6c <__assert_fail@plt+0x3a28>
   12694:	mov	r3, r0
   12698:	cmp	r3, #0
   1269c:	bge	126dc <__assert_fail@plt+0x1198>
   126a0:	bl	11418 <__errno_location@plt>
   126a4:	mov	r3, r0
   126a8:	ldr	r4, [r3]
   126ac:	movw	r0, #22532	; 0x5804
   126b0:	movt	r0, #3
   126b4:	bl	113e8 <gettext@plt>
   126b8:	mov	r5, r0
   126bc:	ldr	r1, [fp, #-16]
   126c0:	mov	r0, #4
   126c4:	bl	17924 <__assert_fail@plt+0x63e0>
   126c8:	mov	r3, r0
   126cc:	mov	r2, r5
   126d0:	mov	r1, r4
   126d4:	mov	r0, #1
   126d8:	bl	11370 <error@plt>
   126dc:	nop	{0}
   126e0:	sub	sp, fp, #12
   126e4:	ldrd	r4, [sp]
   126e8:	ldr	fp, [sp, #8]
   126ec:	add	sp, sp, #12
   126f0:	pop	{pc}		; (ldr pc, [sp], #4)
   126f4:	strd	r4, [sp, #-24]!	; 0xffffffe8
   126f8:	strd	r6, [sp, #8]
   126fc:	str	fp, [sp, #16]
   12700:	str	lr, [sp, #20]
   12704:	add	fp, sp, #20
   12708:	sub	sp, sp, #48	; 0x30
   1270c:	strd	r0, [fp, #-60]	; 0xffffffc4
   12710:	str	r3, [fp, #-68]	; 0xffffffbc
   12714:	mov	r3, r2
   12718:	strb	r3, [fp, #-61]	; 0xffffffc3
   1271c:	bl	121f0 <__assert_fail@plt+0xcac>
   12720:	strd	r0, [fp, #-36]	; 0xffffffdc
   12724:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   12728:	ldrd	r0, [fp, #-60]	; 0xffffffc4
   1272c:	cmp	r0, r2
   12730:	sbcs	r3, r1, r3
   12734:	bge	12784 <__assert_fail@plt+0x1240>
   12738:	movw	r0, #22560	; 0x5820
   1273c:	movt	r0, #3
   12740:	bl	113e8 <gettext@plt>
   12744:	mov	r4, r0
   12748:	movw	r3, #29208	; 0x7218
   1274c:	movt	r3, #4
   12750:	ldr	r2, [r3]
   12754:	ldr	r3, [fp, #-68]	; 0xffffffbc
   12758:	lsl	r3, r3, #2
   1275c:	add	r3, r2, r3
   12760:	ldr	r3, [r3]
   12764:	mov	r0, r3
   12768:	bl	17e04 <__assert_fail@plt+0x68c0>
   1276c:	mov	r3, r0
   12770:	mov	r2, r4
   12774:	mov	r1, #0
   12778:	mov	r0, #0
   1277c:	bl	11370 <error@plt>
   12780:	bl	118a8 <__assert_fail@plt+0x364>
   12784:	ldrd	r0, [fp, #-60]	; 0xffffffc4
   12788:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   1278c:	subs	r6, r0, r2
   12790:	sbc	r7, r1, r3
   12794:	strd	r6, [fp, #-44]	; 0xffffffd4
   12798:	mov	r2, #0
   1279c:	mov	r3, #0
   127a0:	strd	r2, [fp, #-28]	; 0xffffffe4
   127a4:	b	12834 <__assert_fail@plt+0x12f0>
   127a8:	bl	12284 <__assert_fail@plt+0xd40>
   127ac:	str	r0, [fp, #-48]	; 0xffffffd0
   127b0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   127b4:	cmp	r3, #0
   127b8:	bne	12808 <__assert_fail@plt+0x12c4>
   127bc:	movw	r0, #22560	; 0x5820
   127c0:	movt	r0, #3
   127c4:	bl	113e8 <gettext@plt>
   127c8:	mov	r4, r0
   127cc:	movw	r3, #29208	; 0x7218
   127d0:	movt	r3, #4
   127d4:	ldr	r2, [r3]
   127d8:	ldr	r3, [fp, #-68]	; 0xffffffbc
   127dc:	lsl	r3, r3, #2
   127e0:	add	r3, r2, r3
   127e4:	ldr	r3, [r3]
   127e8:	mov	r0, r3
   127ec:	bl	17e04 <__assert_fail@plt+0x68c0>
   127f0:	mov	r3, r0
   127f4:	mov	r2, r4
   127f8:	mov	r1, #0
   127fc:	mov	r0, #0
   12800:	bl	11370 <error@plt>
   12804:	bl	118a8 <__assert_fail@plt+0x364>
   12808:	ldrb	r3, [fp, #-61]	; 0xffffffc3
   1280c:	eor	r3, r3, #1
   12810:	uxtb	r3, r3
   12814:	cmp	r3, #0
   12818:	beq	12824 <__assert_fail@plt+0x12e0>
   1281c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   12820:	bl	13754 <__assert_fail@plt+0x2210>
   12824:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   12828:	adds	r4, r2, #1
   1282c:	adc	r5, r3, #0
   12830:	strd	r4, [fp, #-28]	; 0xffffffe4
   12834:	ldrd	r0, [fp, #-28]	; 0xffffffe4
   12838:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   1283c:	cmp	r0, r2
   12840:	sbcs	r3, r1, r3
   12844:	blt	127a8 <__assert_fail@plt+0x1264>
   12848:	nop	{0}
   1284c:	sub	sp, fp, #20
   12850:	ldrd	r4, [sp]
   12854:	ldrd	r6, [sp, #8]
   12858:	ldr	fp, [sp, #16]
   1285c:	add	sp, sp, #20
   12860:	pop	{pc}		; (ldr pc, [sp], #4)
   12864:	str	fp, [sp, #-8]!
   12868:	str	lr, [sp, #4]
   1286c:	add	fp, sp, #4
   12870:	sub	sp, sp, #8
   12874:	b	12880 <__assert_fail@plt+0x133c>
   12878:	ldr	r0, [fp, #-8]
   1287c:	bl	13754 <__assert_fail@plt+0x2210>
   12880:	bl	12284 <__assert_fail@plt+0xd40>
   12884:	str	r0, [fp, #-8]
   12888:	ldr	r3, [fp, #-8]
   1288c:	cmp	r3, #0
   12890:	bne	12878 <__assert_fail@plt+0x1334>
   12894:	nop	{0}
   12898:	sub	sp, fp, #4
   1289c:	ldr	fp, [sp]
   128a0:	add	sp, sp, #4
   128a4:	pop	{pc}		; (ldr pc, [sp], #4)
   128a8:	strd	r4, [sp, #-20]!	; 0xffffffec
   128ac:	str	r6, [sp, #8]
   128b0:	str	fp, [sp, #12]
   128b4:	str	lr, [sp, #16]
   128b8:	add	fp, sp, #16
   128bc:	sub	sp, sp, #44	; 0x2c
   128c0:	str	r0, [fp, #-48]	; 0xffffffd0
   128c4:	strd	r2, [fp, #-60]	; 0xffffffc4
   128c8:	movw	r3, #29120	; 0x71c0
   128cc:	movt	r3, #4
   128d0:	ldr	r4, [r3]
   128d4:	movw	r0, #22592	; 0x5840
   128d8:	movt	r0, #3
   128dc:	bl	113e8 <gettext@plt>
   128e0:	mov	r6, r0
   128e4:	movw	r3, #29376	; 0x72c0
   128e8:	movt	r3, #4
   128ec:	ldr	r5, [r3]
   128f0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   128f4:	ldrd	r0, [r3, #8]
   128f8:	sub	r3, fp, #44	; 0x2c
   128fc:	mov	r2, r3
   12900:	bl	15380 <__assert_fail@plt+0x3e3c>
   12904:	mov	r3, r0
   12908:	mov	r0, r3
   1290c:	bl	17e04 <__assert_fail@plt+0x68c0>
   12910:	mov	r3, r0
   12914:	mov	r2, r5
   12918:	mov	r1, r6
   1291c:	mov	r0, r4
   12920:	bl	1140c <fprintf@plt>
   12924:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   12928:	orrs	r3, r2, r3
   1292c:	beq	12974 <__assert_fail@plt+0x1430>
   12930:	movw	r3, #29120	; 0x71c0
   12934:	movt	r3, #4
   12938:	ldr	r4, [r3]
   1293c:	movw	r0, #22628	; 0x5864
   12940:	movt	r0, #3
   12944:	bl	113e8 <gettext@plt>
   12948:	mov	r5, r0
   1294c:	sub	r3, fp, #44	; 0x2c
   12950:	mov	r2, r3
   12954:	ldrd	r0, [fp, #-60]	; 0xffffffc4
   12958:	bl	15380 <__assert_fail@plt+0x3e3c>
   1295c:	mov	r3, r0
   12960:	mov	r2, r3
   12964:	mov	r1, r5
   12968:	mov	r0, r4
   1296c:	bl	1140c <fprintf@plt>
   12970:	b	1298c <__assert_fail@plt+0x1448>
   12974:	movw	r3, #29120	; 0x71c0
   12978:	movt	r3, #4
   1297c:	ldr	r3, [r3]
   12980:	mov	r1, r3
   12984:	mov	r0, #10
   12988:	bl	114e4 <fputc@plt>
   1298c:	bl	118a8 <__assert_fail@plt+0x364>
   12990:	strd	r4, [sp, #-24]!	; 0xffffffe8
   12994:	strd	r6, [sp, #8]
   12998:	str	fp, [sp, #16]
   1299c:	str	lr, [sp, #20]
   129a0:	add	fp, sp, #20
   129a4:	sub	sp, sp, #40	; 0x28
   129a8:	str	r0, [fp, #-48]	; 0xffffffd0
   129ac:	strd	r2, [fp, #-60]	; 0xffffffc4
   129b0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   129b4:	ldrd	r2, [r3, #8]
   129b8:	ldrd	r0, [fp, #-60]	; 0xffffffc4
   129bc:	adds	r4, r0, #1
   129c0:	adc	r5, r1, #0
   129c4:	mul	r0, r4, r3
   129c8:	mul	r1, r2, r5
   129cc:	add	r1, r0, r1
   129d0:	umull	r2, r3, r2, r4
   129d4:	add	r1, r1, r3
   129d8:	mov	r3, r1
   129dc:	strd	r2, [fp, #-36]	; 0xffffffdc
   129e0:	strd	r2, [fp, #-36]	; 0xffffffdc
   129e4:	bl	13248 <__assert_fail@plt+0x1d04>
   129e8:	bl	12600 <__assert_fail@plt+0x10bc>
   129ec:	mov	r3, r0
   129f0:	cmp	r3, #0
   129f4:	beq	12a18 <__assert_fail@plt+0x14d4>
   129f8:	movw	r3, #29215	; 0x721f
   129fc:	movt	r3, #4
   12a00:	ldrb	r3, [r3]
   12a04:	cmp	r3, #0
   12a08:	beq	12a18 <__assert_fail@plt+0x14d4>
   12a0c:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   12a10:	ldr	r0, [fp, #-48]	; 0xffffffd0
   12a14:	bl	128a8 <__assert_fail@plt+0x1364>
   12a18:	bl	121f0 <__assert_fail@plt+0xcac>
   12a1c:	strd	r0, [fp, #-28]	; 0xffffffe4
   12a20:	b	12a4c <__assert_fail@plt+0x1508>
   12a24:	bl	12284 <__assert_fail@plt+0xd40>
   12a28:	str	r0, [fp, #-40]	; 0xffffffd8
   12a2c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   12a30:	cmp	r3, #0
   12a34:	bne	12a44 <__assert_fail@plt+0x1500>
   12a38:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   12a3c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   12a40:	bl	128a8 <__assert_fail@plt+0x1364>
   12a44:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12a48:	bl	13754 <__assert_fail@plt+0x2210>
   12a4c:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   12a50:	adds	r6, r2, #1
   12a54:	adc	r7, r3, #0
   12a58:	strd	r6, [fp, #-28]	; 0xffffffe4
   12a5c:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   12a60:	cmp	r2, r0
   12a64:	sbcs	r3, r3, r1
   12a68:	blt	12a24 <__assert_fail@plt+0x14e0>
   12a6c:	bl	134c0 <__assert_fail@plt+0x1f7c>
   12a70:	movw	r3, #29215	; 0x721f
   12a74:	movt	r3, #4
   12a78:	ldrb	r3, [r3]
   12a7c:	cmp	r3, #0
   12a80:	beq	12a88 <__assert_fail@plt+0x1544>
   12a84:	bl	12284 <__assert_fail@plt+0xd40>
   12a88:	bl	12600 <__assert_fail@plt+0x10bc>
   12a8c:	mov	r3, r0
   12a90:	cmp	r3, #0
   12a94:	beq	12ac0 <__assert_fail@plt+0x157c>
   12a98:	movw	r3, #29215	; 0x721f
   12a9c:	movt	r3, #4
   12aa0:	ldrb	r3, [r3]
   12aa4:	eor	r3, r3, #1
   12aa8:	uxtb	r3, r3
   12aac:	cmp	r3, #0
   12ab0:	beq	12ac0 <__assert_fail@plt+0x157c>
   12ab4:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   12ab8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   12abc:	bl	128a8 <__assert_fail@plt+0x1364>
   12ac0:	nop	{0}
   12ac4:	sub	sp, fp, #20
   12ac8:	ldrd	r4, [sp]
   12acc:	ldrd	r6, [sp, #8]
   12ad0:	ldr	fp, [sp, #16]
   12ad4:	add	sp, sp, #20
   12ad8:	pop	{pc}		; (ldr pc, [sp], #4)
   12adc:	strd	r4, [sp, #-20]!	; 0xffffffec
   12ae0:	str	r6, [sp, #8]
   12ae4:	str	fp, [sp, #12]
   12ae8:	str	lr, [sp, #16]
   12aec:	add	fp, sp, #16
   12af0:	sub	sp, sp, #44	; 0x2c
   12af4:	str	r0, [fp, #-48]	; 0xffffffd0
   12af8:	strd	r2, [fp, #-60]	; 0xffffffc4
   12afc:	movw	r3, #29120	; 0x71c0
   12b00:	movt	r3, #4
   12b04:	ldr	r4, [r3]
   12b08:	movw	r0, #22648	; 0x5878
   12b0c:	movt	r0, #3
   12b10:	bl	113e8 <gettext@plt>
   12b14:	mov	r6, r0
   12b18:	movw	r3, #29376	; 0x72c0
   12b1c:	movt	r3, #4
   12b20:	ldr	r5, [r3]
   12b24:	movw	r3, #29208	; 0x7218
   12b28:	movt	r3, #4
   12b2c:	ldr	r2, [r3]
   12b30:	ldr	r3, [fp, #-48]	; 0xffffffd0
   12b34:	ldr	r3, [r3, #24]
   12b38:	lsl	r3, r3, #2
   12b3c:	add	r3, r2, r3
   12b40:	ldr	r3, [r3]
   12b44:	mov	r0, r3
   12b48:	bl	17e04 <__assert_fail@plt+0x68c0>
   12b4c:	mov	r3, r0
   12b50:	mov	r2, r5
   12b54:	mov	r1, r6
   12b58:	mov	r0, r4
   12b5c:	bl	1140c <fprintf@plt>
   12b60:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   12b64:	orrs	r3, r2, r3
   12b68:	beq	12bb0 <__assert_fail@plt+0x166c>
   12b6c:	movw	r3, #29120	; 0x71c0
   12b70:	movt	r3, #4
   12b74:	ldr	r4, [r3]
   12b78:	movw	r0, #22628	; 0x5864
   12b7c:	movt	r0, #3
   12b80:	bl	113e8 <gettext@plt>
   12b84:	mov	r5, r0
   12b88:	sub	r3, fp, #44	; 0x2c
   12b8c:	mov	r2, r3
   12b90:	ldrd	r0, [fp, #-60]	; 0xffffffc4
   12b94:	bl	15380 <__assert_fail@plt+0x3e3c>
   12b98:	mov	r3, r0
   12b9c:	mov	r2, r3
   12ba0:	mov	r1, r5
   12ba4:	mov	r0, r4
   12ba8:	bl	1140c <fprintf@plt>
   12bac:	b	12bc8 <__assert_fail@plt+0x1684>
   12bb0:	movw	r3, #29120	; 0x71c0
   12bb4:	movt	r3, #4
   12bb8:	ldr	r3, [r3]
   12bbc:	mov	r1, r3
   12bc0:	mov	r0, #10
   12bc4:	bl	114e4 <fputc@plt>
   12bc8:	ldrb	r3, [fp, #4]
   12bcc:	eor	r3, r3, #1
   12bd0:	uxtb	r3, r3
   12bd4:	cmp	r3, #0
   12bd8:	beq	12be4 <__assert_fail@plt+0x16a0>
   12bdc:	bl	12864 <__assert_fail@plt+0x1320>
   12be0:	bl	134c0 <__assert_fail@plt+0x1f7c>
   12be4:	bl	118a8 <__assert_fail@plt+0x364>
   12be8:	strd	r4, [sp, #-32]!	; 0xffffffe0
   12bec:	strd	r6, [sp, #8]
   12bf0:	strd	r8, [sp, #16]
   12bf4:	str	fp, [sp, #24]
   12bf8:	str	lr, [sp, #28]
   12bfc:	add	fp, sp, #28
   12c00:	sub	sp, sp, #48	; 0x30
   12c04:	str	r0, [fp, #-56]	; 0xffffffc8
   12c08:	strd	r2, [fp, #-68]	; 0xffffffbc
   12c0c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   12c10:	ldrb	r3, [r3, #29]
   12c14:	strb	r3, [fp, #-33]	; 0xffffffdf
   12c18:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   12c1c:	eor	r3, r3, #1
   12c20:	uxtb	r3, r3
   12c24:	cmp	r3, #0
   12c28:	beq	12c30 <__assert_fail@plt+0x16ec>
   12c2c:	bl	13248 <__assert_fail@plt+0x1d04>
   12c30:	ldr	r3, [fp, #-56]	; 0xffffffc8
   12c34:	ldrd	r2, [r3]
   12c38:	cmp	r2, #0
   12c3c:	sbcs	r3, r3, #0
   12c40:	blt	12da0 <__assert_fail@plt+0x185c>
   12c44:	movw	r3, #29160	; 0x71e8
   12c48:	movt	r3, #4
   12c4c:	ldrd	r2, [r3]
   12c50:	adds	r8, r2, #1
   12c54:	adc	r9, r3, #0
   12c58:	movw	r3, #29160	; 0x71e8
   12c5c:	movt	r3, #4
   12c60:	strd	r8, [r3]
   12c64:	movw	r3, #29160	; 0x71e8
   12c68:	movt	r3, #4
   12c6c:	ldrd	r2, [r3]
   12c70:	mov	r0, r2
   12c74:	mov	r1, r3
   12c78:	bl	12460 <__assert_fail@plt+0xf1c>
   12c7c:	str	r0, [fp, #-40]	; 0xffffffd8
   12c80:	ldr	r3, [fp, #-40]	; 0xffffffd8
   12c84:	cmp	r3, #0
   12c88:	bne	12cd4 <__assert_fail@plt+0x1790>
   12c8c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   12c90:	ldrb	r3, [r3, #28]
   12c94:	cmp	r3, #0
   12c98:	beq	12cc0 <__assert_fail@plt+0x177c>
   12c9c:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   12ca0:	eor	r3, r3, #1
   12ca4:	uxtb	r3, r3
   12ca8:	cmp	r3, #0
   12cac:	beq	12cb8 <__assert_fail@plt+0x1774>
   12cb0:	bl	12864 <__assert_fail@plt+0x1320>
   12cb4:	bl	134c0 <__assert_fail@plt+0x1f7c>
   12cb8:	mov	r0, #0
   12cbc:	bl	113dc <exit@plt>
   12cc0:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   12cc4:	str	r3, [sp]
   12cc8:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   12ccc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   12cd0:	bl	12adc <__assert_fail@plt+0x1598>
   12cd4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   12cd8:	ldr	r3, [r3]
   12cdc:	str	r3, [fp, #-32]	; 0xffffffe0
   12ce0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   12ce4:	ldr	r2, [r3, #4]
   12ce8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12cec:	sub	r3, r3, #1
   12cf0:	add	r3, r2, r3
   12cf4:	ldrb	r3, [r3]
   12cf8:	cmp	r3, #10
   12cfc:	bne	12d0c <__assert_fail@plt+0x17c8>
   12d00:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12d04:	sub	r3, r3, #1
   12d08:	str	r3, [fp, #-32]	; 0xffffffe0
   12d0c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   12d10:	add	r0, r3, #32
   12d14:	ldr	r3, [fp, #-40]	; 0xffffffd8
   12d18:	ldr	r1, [r3, #4]
   12d1c:	mov	r3, #0
   12d20:	str	r3, [sp, #4]
   12d24:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12d28:	str	r3, [sp]
   12d2c:	mov	r3, #0
   12d30:	ldr	r2, [fp, #-32]	; 0xffffffe0
   12d34:	bl	268a0 <__assert_fail@plt+0x1535c>
   12d38:	str	r0, [fp, #-44]	; 0xffffffd4
   12d3c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   12d40:	cmn	r3, #2
   12d44:	bne	12d6c <__assert_fail@plt+0x1828>
   12d48:	movw	r0, #22672	; 0x5890
   12d4c:	movt	r0, #3
   12d50:	bl	113e8 <gettext@plt>
   12d54:	mov	r3, r0
   12d58:	mov	r2, r3
   12d5c:	mov	r1, #0
   12d60:	mov	r0, #0
   12d64:	bl	11370 <error@plt>
   12d68:	bl	118a8 <__assert_fail@plt+0x364>
   12d6c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   12d70:	cmn	r3, #1
   12d74:	bne	12ed8 <__assert_fail@plt+0x1994>
   12d78:	bl	12284 <__assert_fail@plt+0xd40>
   12d7c:	str	r0, [fp, #-40]	; 0xffffffd8
   12d80:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   12d84:	eor	r3, r3, #1
   12d88:	uxtb	r3, r3
   12d8c:	cmp	r3, #0
   12d90:	beq	12c44 <__assert_fail@plt+0x1700>
   12d94:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12d98:	bl	13754 <__assert_fail@plt+0x2210>
   12d9c:	b	12c44 <__assert_fail@plt+0x1700>
   12da0:	movw	r3, #29160	; 0x71e8
   12da4:	movt	r3, #4
   12da8:	ldrd	r2, [r3]
   12dac:	adds	r6, r2, #1
   12db0:	adc	r7, r3, #0
   12db4:	movw	r3, #29160	; 0x71e8
   12db8:	movt	r3, #4
   12dbc:	strd	r6, [r3]
   12dc0:	movw	r3, #29160	; 0x71e8
   12dc4:	movt	r3, #4
   12dc8:	ldrd	r2, [r3]
   12dcc:	mov	r0, r2
   12dd0:	mov	r1, r3
   12dd4:	bl	12460 <__assert_fail@plt+0xf1c>
   12dd8:	str	r0, [fp, #-40]	; 0xffffffd8
   12ddc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   12de0:	cmp	r3, #0
   12de4:	bne	12e30 <__assert_fail@plt+0x18ec>
   12de8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   12dec:	ldrb	r3, [r3, #28]
   12df0:	cmp	r3, #0
   12df4:	beq	12e1c <__assert_fail@plt+0x18d8>
   12df8:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   12dfc:	eor	r3, r3, #1
   12e00:	uxtb	r3, r3
   12e04:	cmp	r3, #0
   12e08:	beq	12e14 <__assert_fail@plt+0x18d0>
   12e0c:	bl	12864 <__assert_fail@plt+0x1320>
   12e10:	bl	134c0 <__assert_fail@plt+0x1f7c>
   12e14:	mov	r0, #0
   12e18:	bl	113dc <exit@plt>
   12e1c:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   12e20:	str	r3, [sp]
   12e24:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   12e28:	ldr	r0, [fp, #-56]	; 0xffffffc8
   12e2c:	bl	12adc <__assert_fail@plt+0x1598>
   12e30:	ldr	r3, [fp, #-40]	; 0xffffffd8
   12e34:	ldr	r3, [r3]
   12e38:	str	r3, [fp, #-32]	; 0xffffffe0
   12e3c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   12e40:	ldr	r2, [r3, #4]
   12e44:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12e48:	sub	r3, r3, #1
   12e4c:	add	r3, r2, r3
   12e50:	ldrb	r3, [r3]
   12e54:	cmp	r3, #10
   12e58:	bne	12e68 <__assert_fail@plt+0x1924>
   12e5c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12e60:	sub	r3, r3, #1
   12e64:	str	r3, [fp, #-32]	; 0xffffffe0
   12e68:	ldr	r3, [fp, #-56]	; 0xffffffc8
   12e6c:	add	r0, r3, #32
   12e70:	ldr	r3, [fp, #-40]	; 0xffffffd8
   12e74:	ldr	r1, [r3, #4]
   12e78:	mov	r3, #0
   12e7c:	str	r3, [sp, #4]
   12e80:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12e84:	str	r3, [sp]
   12e88:	mov	r3, #0
   12e8c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   12e90:	bl	268a0 <__assert_fail@plt+0x1535c>
   12e94:	str	r0, [fp, #-44]	; 0xffffffd4
   12e98:	ldr	r3, [fp, #-44]	; 0xffffffd4
   12e9c:	cmn	r3, #2
   12ea0:	bne	12ec8 <__assert_fail@plt+0x1984>
   12ea4:	movw	r0, #22672	; 0x5890
   12ea8:	movt	r0, #3
   12eac:	bl	113e8 <gettext@plt>
   12eb0:	mov	r3, r0
   12eb4:	mov	r2, r3
   12eb8:	mov	r1, #0
   12ebc:	mov	r0, #0
   12ec0:	bl	11370 <error@plt>
   12ec4:	bl	118a8 <__assert_fail@plt+0x364>
   12ec8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   12ecc:	cmn	r3, #1
   12ed0:	bne	12ee0 <__assert_fail@plt+0x199c>
   12ed4:	b	12da0 <__assert_fail@plt+0x185c>
   12ed8:	nop	{0}
   12edc:	b	12ee4 <__assert_fail@plt+0x19a0>
   12ee0:	nop	{0}
   12ee4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   12ee8:	ldrd	r0, [r3]
   12eec:	movw	r3, #29160	; 0x71e8
   12ef0:	movt	r3, #4
   12ef4:	ldrd	r2, [r3]
   12ef8:	adds	r4, r0, r2
   12efc:	adc	r5, r1, r3
   12f00:	strd	r4, [fp, #-52]	; 0xffffffcc
   12f04:	ldr	r3, [fp, #-56]	; 0xffffffc8
   12f08:	ldr	r3, [r3, #24]
   12f0c:	ldrb	r2, [fp, #-33]	; 0xffffffdf
   12f10:	ldrd	r0, [fp, #-52]	; 0xffffffcc
   12f14:	bl	126f4 <__assert_fail@plt+0x11b0>
   12f18:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   12f1c:	eor	r3, r3, #1
   12f20:	uxtb	r3, r3
   12f24:	cmp	r3, #0
   12f28:	beq	12f30 <__assert_fail@plt+0x19ec>
   12f2c:	bl	134c0 <__assert_fail@plt+0x1f7c>
   12f30:	ldr	r3, [fp, #-56]	; 0xffffffc8
   12f34:	ldrd	r2, [r3]
   12f38:	cmp	r2, #1
   12f3c:	sbcs	r3, r3, #0
   12f40:	blt	12f54 <__assert_fail@plt+0x1a10>
   12f44:	movw	r3, #29160	; 0x71e8
   12f48:	movt	r3, #4
   12f4c:	ldrd	r0, [fp, #-52]	; 0xffffffcc
   12f50:	strd	r0, [r3]
   12f54:	movw	r3, #29215	; 0x721f
   12f58:	movt	r3, #4
   12f5c:	ldrb	r3, [r3]
   12f60:	cmp	r3, #0
   12f64:	beq	12f6c <__assert_fail@plt+0x1a28>
   12f68:	bl	12284 <__assert_fail@plt+0xd40>
   12f6c:	nop	{0}
   12f70:	sub	sp, fp, #28
   12f74:	ldrd	r4, [sp]
   12f78:	ldrd	r6, [sp, #8]
   12f7c:	ldrd	r8, [sp, #16]
   12f80:	ldr	fp, [sp, #24]
   12f84:	add	sp, sp, #28
   12f88:	pop	{pc}		; (ldr pc, [sp], #4)
   12f8c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   12f90:	strd	r6, [sp, #8]
   12f94:	str	fp, [sp, #16]
   12f98:	str	lr, [sp, #20]
   12f9c:	add	fp, sp, #20
   12fa0:	sub	sp, sp, #16
   12fa4:	mov	r3, #0
   12fa8:	str	r3, [fp, #-24]	; 0xffffffe8
   12fac:	b	1310c <__assert_fail@plt+0x1bc8>
   12fb0:	movw	r3, #29216	; 0x7220
   12fb4:	movt	r3, #4
   12fb8:	ldr	r2, [r3]
   12fbc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12fc0:	lsl	r3, r3, #6
   12fc4:	add	r3, r2, r3
   12fc8:	ldrb	r3, [r3, #30]
   12fcc:	cmp	r3, #0
   12fd0:	beq	1306c <__assert_fail@plt+0x1b28>
   12fd4:	mov	r2, #0
   12fd8:	mov	r3, #0
   12fdc:	strd	r2, [fp, #-36]	; 0xffffffdc
   12fe0:	b	13018 <__assert_fail@plt+0x1ad4>
   12fe4:	movw	r3, #29216	; 0x7220
   12fe8:	movt	r3, #4
   12fec:	ldr	r2, [r3]
   12ff0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12ff4:	lsl	r3, r3, #6
   12ff8:	add	r1, r2, r3
   12ffc:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   13000:	mov	r0, r1
   13004:	bl	12be8 <__assert_fail@plt+0x16a4>
   13008:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   1300c:	adds	r4, r2, #1
   13010:	adc	r5, r3, #0
   13014:	strd	r4, [fp, #-36]	; 0xffffffdc
   13018:	movw	r3, #29216	; 0x7220
   1301c:	movt	r3, #4
   13020:	ldr	r2, [r3]
   13024:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13028:	lsl	r3, r3, #6
   1302c:	add	r3, r2, r3
   13030:	ldrb	r3, [r3, #28]
   13034:	cmp	r3, #0
   13038:	bne	12fe4 <__assert_fail@plt+0x1aa0>
   1303c:	movw	r3, #29216	; 0x7220
   13040:	movt	r3, #4
   13044:	ldr	r2, [r3]
   13048:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1304c:	lsl	r3, r3, #6
   13050:	add	r3, r2, r3
   13054:	ldrd	r0, [r3, #16]
   13058:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   1305c:	cmp	r0, r2
   13060:	sbcs	r3, r1, r3
   13064:	bge	12fe4 <__assert_fail@plt+0x1aa0>
   13068:	b	13100 <__assert_fail@plt+0x1bbc>
   1306c:	mov	r2, #0
   13070:	mov	r3, #0
   13074:	strd	r2, [fp, #-36]	; 0xffffffdc
   13078:	b	130b0 <__assert_fail@plt+0x1b6c>
   1307c:	movw	r3, #29216	; 0x7220
   13080:	movt	r3, #4
   13084:	ldr	r2, [r3]
   13088:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1308c:	lsl	r3, r3, #6
   13090:	add	r1, r2, r3
   13094:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   13098:	mov	r0, r1
   1309c:	bl	12990 <__assert_fail@plt+0x144c>
   130a0:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   130a4:	adds	r6, r2, #1
   130a8:	adc	r7, r3, #0
   130ac:	strd	r6, [fp, #-36]	; 0xffffffdc
   130b0:	movw	r3, #29216	; 0x7220
   130b4:	movt	r3, #4
   130b8:	ldr	r2, [r3]
   130bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   130c0:	lsl	r3, r3, #6
   130c4:	add	r3, r2, r3
   130c8:	ldrb	r3, [r3, #28]
   130cc:	cmp	r3, #0
   130d0:	bne	1307c <__assert_fail@plt+0x1b38>
   130d4:	movw	r3, #29216	; 0x7220
   130d8:	movt	r3, #4
   130dc:	ldr	r2, [r3]
   130e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   130e4:	lsl	r3, r3, #6
   130e8:	add	r3, r2, r3
   130ec:	ldrd	r0, [r3, #16]
   130f0:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   130f4:	cmp	r0, r2
   130f8:	sbcs	r3, r1, r3
   130fc:	bge	1307c <__assert_fail@plt+0x1b38>
   13100:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13104:	add	r3, r3, #1
   13108:	str	r3, [fp, #-24]	; 0xffffffe8
   1310c:	movw	r3, #29220	; 0x7224
   13110:	movt	r3, #4
   13114:	ldr	r3, [r3]
   13118:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1311c:	cmp	r2, r3
   13120:	blt	12fb0 <__assert_fail@plt+0x1a6c>
   13124:	bl	13248 <__assert_fail@plt+0x1d04>
   13128:	bl	12864 <__assert_fail@plt+0x1320>
   1312c:	bl	134c0 <__assert_fail@plt+0x1f7c>
   13130:	nop	{0}
   13134:	sub	sp, fp, #20
   13138:	ldrd	r4, [sp]
   1313c:	ldrd	r6, [sp, #8]
   13140:	ldr	fp, [sp, #16]
   13144:	add	sp, sp, #20
   13148:	pop	{pc}		; (ldr pc, [sp], #4)
   1314c:	str	r4, [sp, #-12]!
   13150:	str	fp, [sp, #4]
   13154:	str	lr, [sp, #8]
   13158:	add	fp, sp, #8
   1315c:	sub	sp, sp, #12
   13160:	str	r0, [fp, #-16]
   13164:	movw	r3, #29172	; 0x71f4
   13168:	movt	r3, #4
   1316c:	ldr	r2, [r3]
   13170:	movw	r3, #29176	; 0x71f8
   13174:	movt	r3, #4
   13178:	ldr	r3, [r3]
   1317c:	mov	r1, r3
   13180:	mov	r0, r2
   13184:	bl	11340 <strcpy@plt>
   13188:	movw	r3, #29180	; 0x71fc
   1318c:	movt	r3, #4
   13190:	ldr	r3, [r3]
   13194:	cmp	r3, #0
   13198:	beq	131e0 <__assert_fail@plt+0x1c9c>
   1319c:	movw	r3, #29172	; 0x71f4
   131a0:	movt	r3, #4
   131a4:	ldr	r4, [r3]
   131a8:	movw	r3, #29176	; 0x71f8
   131ac:	movt	r3, #4
   131b0:	ldr	r3, [r3]
   131b4:	mov	r0, r3
   131b8:	bl	113f4 <strlen@plt>
   131bc:	mov	r3, r0
   131c0:	add	r0, r4, r3
   131c4:	movw	r3, #29180	; 0x71fc
   131c8:	movt	r3, #4
   131cc:	ldr	r3, [r3]
   131d0:	ldr	r2, [fp, #-16]
   131d4:	mov	r1, r3
   131d8:	bl	114f0 <sprintf@plt>
   131dc:	b	13224 <__assert_fail@plt+0x1ce0>
   131e0:	movw	r3, #29172	; 0x71f4
   131e4:	movt	r3, #4
   131e8:	ldr	r4, [r3]
   131ec:	movw	r3, #29176	; 0x71f8
   131f0:	movt	r3, #4
   131f4:	ldr	r3, [r3]
   131f8:	mov	r0, r3
   131fc:	bl	113f4 <strlen@plt>
   13200:	mov	r3, r0
   13204:	add	r0, r4, r3
   13208:	movw	r3, #29024	; 0x7160
   1320c:	movt	r3, #4
   13210:	ldr	r2, [r3]
   13214:	ldr	r3, [fp, #-16]
   13218:	movw	r1, #22708	; 0x58b4
   1321c:	movt	r1, #3
   13220:	bl	114f0 <sprintf@plt>
   13224:	movw	r3, #29172	; 0x71f4
   13228:	movt	r3, #4
   1322c:	ldr	r3, [r3]
   13230:	mov	r0, r3
   13234:	sub	sp, fp, #8
   13238:	ldr	r4, [sp]
   1323c:	ldr	fp, [sp, #4]
   13240:	add	sp, sp, #8
   13244:	pop	{pc}		; (ldr pc, [sp], #4)
   13248:	str	fp, [sp, #-8]!
   1324c:	str	lr, [sp, #4]
   13250:	add	fp, sp, #4
   13254:	sub	sp, sp, #144	; 0x90
   13258:	movw	r3, #29184	; 0x7200
   1325c:	movt	r3, #4
   13260:	ldr	r3, [r3]
   13264:	str	r3, [fp, #-16]
   13268:	ldr	r0, [fp, #-16]
   1326c:	bl	1314c <__assert_fail@plt+0x1c08>
   13270:	mov	r2, r0
   13274:	movw	r3, #29204	; 0x7214
   13278:	movt	r3, #4
   1327c:	str	r2, [r3]
   13280:	ldr	r3, [fp, #-16]
   13284:	cmn	r3, #-2147483647	; 0x80000001
   13288:	bne	132a0 <__assert_fail@plt+0x1d5c>
   1328c:	mov	r3, #0
   13290:	strb	r3, [fp, #-5]
   13294:	mov	r3, #75	; 0x4b
   13298:	str	r3, [fp, #-12]
   1329c:	b	1333c <__assert_fail@plt+0x1df8>
   132a0:	sub	r3, fp, #144	; 0x90
   132a4:	mov	r2, r3
   132a8:	movw	r1, #29224	; 0x7228
   132ac:	movt	r1, #4
   132b0:	mov	r0, #0
   132b4:	bl	11214 <sigprocmask@plt>
   132b8:	movw	r3, #29204	; 0x7214
   132bc:	movt	r3, #4
   132c0:	ldr	r3, [r3]
   132c4:	movw	r1, #22716	; 0x58bc
   132c8:	movt	r1, #3
   132cc:	mov	r0, r3
   132d0:	bl	150d4 <__assert_fail@plt+0x3b90>
   132d4:	mov	r2, r0
   132d8:	movw	r3, #29200	; 0x7210
   132dc:	movt	r3, #4
   132e0:	str	r2, [r3]
   132e4:	movw	r3, #29200	; 0x7210
   132e8:	movt	r3, #4
   132ec:	ldr	r3, [r3]
   132f0:	cmp	r3, #0
   132f4:	movne	r3, #1
   132f8:	moveq	r3, #0
   132fc:	strb	r3, [fp, #-5]
   13300:	bl	11418 <__errno_location@plt>
   13304:	mov	r3, r0
   13308:	ldr	r3, [r3]
   1330c:	str	r3, [fp, #-12]
   13310:	ldrb	r2, [fp, #-5]
   13314:	ldr	r3, [fp, #-16]
   13318:	add	r2, r2, r3
   1331c:	movw	r3, #29184	; 0x7200
   13320:	movt	r3, #4
   13324:	str	r2, [r3]
   13328:	sub	r3, fp, #144	; 0x90
   1332c:	mov	r2, #0
   13330:	mov	r1, r3
   13334:	mov	r0, #2
   13338:	bl	11214 <sigprocmask@plt>
   1333c:	ldrb	r3, [fp, #-5]
   13340:	eor	r3, r3, #1
   13344:	uxtb	r3, r3
   13348:	cmp	r3, #0
   1334c:	beq	13388 <__assert_fail@plt+0x1e44>
   13350:	movw	r3, #29204	; 0x7214
   13354:	movt	r3, #4
   13358:	ldr	r3, [r3]
   1335c:	mov	r2, r3
   13360:	mov	r1, #3
   13364:	mov	r0, #0
   13368:	bl	17b08 <__assert_fail@plt+0x65c4>
   1336c:	mov	r3, r0
   13370:	movw	r2, #22472	; 0x57c8
   13374:	movt	r2, #3
   13378:	ldr	r1, [fp, #-12]
   1337c:	mov	r0, #0
   13380:	bl	11370 <error@plt>
   13384:	bl	118a8 <__assert_fail@plt+0x364>
   13388:	movw	r3, #29192	; 0x7208
   1338c:	movt	r3, #4
   13390:	mov	r0, #0
   13394:	mov	r1, #0
   13398:	strd	r0, [r3]
   1339c:	nop	{0}
   133a0:	sub	sp, fp, #4
   133a4:	ldr	fp, [sp]
   133a8:	add	sp, sp, #4
   133ac:	pop	{pc}		; (ldr pc, [sp], #4)
   133b0:	str	r4, [sp, #-12]!
   133b4:	str	fp, [sp, #4]
   133b8:	str	lr, [sp, #8]
   133bc:	add	fp, sp, #8
   133c0:	sub	sp, sp, #20
   133c4:	mov	r3, r0
   133c8:	strb	r3, [fp, #-21]	; 0xffffffeb
   133cc:	movw	r3, #29213	; 0x721d
   133d0:	movt	r3, #4
   133d4:	ldrb	r3, [r3]
   133d8:	uxtb	r3, r3
   133dc:	eor	r3, r3, #1
   133e0:	uxtb	r3, r3
   133e4:	cmp	r3, #0
   133e8:	bne	134a8 <__assert_fail@plt+0x1f64>
   133ec:	movw	r3, #29184	; 0x7200
   133f0:	movt	r3, #4
   133f4:	ldr	r3, [r3]
   133f8:	str	r3, [fp, #-16]
   133fc:	b	1347c <__assert_fail@plt+0x1f38>
   13400:	ldr	r0, [fp, #-16]
   13404:	bl	1314c <__assert_fail@plt+0x1c08>
   13408:	str	r0, [fp, #-20]	; 0xffffffec
   1340c:	ldr	r0, [fp, #-20]	; 0xffffffec
   13410:	bl	112bc <unlink@plt>
   13414:	mov	r3, r0
   13418:	cmp	r3, #0
   1341c:	beq	1347c <__assert_fail@plt+0x1f38>
   13420:	bl	11418 <__errno_location@plt>
   13424:	mov	r3, r0
   13428:	ldr	r3, [r3]
   1342c:	cmp	r3, #2
   13430:	beq	1347c <__assert_fail@plt+0x1f38>
   13434:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   13438:	eor	r3, r3, #1
   1343c:	uxtb	r3, r3
   13440:	cmp	r3, #0
   13444:	beq	1347c <__assert_fail@plt+0x1f38>
   13448:	bl	11418 <__errno_location@plt>
   1344c:	mov	r3, r0
   13450:	ldr	r4, [r3]
   13454:	ldr	r2, [fp, #-20]	; 0xffffffec
   13458:	mov	r1, #3
   1345c:	mov	r0, #0
   13460:	bl	17b08 <__assert_fail@plt+0x65c4>
   13464:	mov	r3, r0
   13468:	movw	r2, #22472	; 0x57c8
   1346c:	movt	r2, #3
   13470:	mov	r1, r4
   13474:	mov	r0, #0
   13478:	bl	11370 <error@plt>
   1347c:	ldr	r3, [fp, #-16]
   13480:	sub	r3, r3, #1
   13484:	str	r3, [fp, #-16]
   13488:	ldr	r3, [fp, #-16]
   1348c:	cmp	r3, #0
   13490:	bge	13400 <__assert_fail@plt+0x1ebc>
   13494:	movw	r3, #29184	; 0x7200
   13498:	movt	r3, #4
   1349c:	mov	r2, #0
   134a0:	str	r2, [r3]
   134a4:	b	134ac <__assert_fail@plt+0x1f68>
   134a8:	nop	{0}
   134ac:	sub	sp, fp, #8
   134b0:	ldr	r4, [sp]
   134b4:	ldr	fp, [sp, #4]
   134b8:	add	sp, sp, #8
   134bc:	pop	{pc}		; (ldr pc, [sp], #4)
   134c0:	str	r4, [sp, #-12]!
   134c4:	str	fp, [sp, #4]
   134c8:	str	lr, [sp, #8]
   134cc:	add	fp, sp, #8
   134d0:	sub	sp, sp, #164	; 0xa4
   134d4:	movw	r3, #29200	; 0x7210
   134d8:	movt	r3, #4
   134dc:	ldr	r3, [r3]
   134e0:	cmp	r3, #0
   134e4:	beq	1373c <__assert_fail@plt+0x21f8>
   134e8:	movw	r3, #29200	; 0x7210
   134ec:	movt	r3, #4
   134f0:	ldr	r3, [r3]
   134f4:	mov	r0, r3
   134f8:	bl	11358 <ferror_unlocked@plt>
   134fc:	mov	r3, r0
   13500:	cmp	r3, #0
   13504:	beq	13558 <__assert_fail@plt+0x2014>
   13508:	movw	r0, #22720	; 0x58c0
   1350c:	movt	r0, #3
   13510:	bl	113e8 <gettext@plt>
   13514:	mov	r4, r0
   13518:	movw	r3, #29204	; 0x7214
   1351c:	movt	r3, #4
   13520:	ldr	r3, [r3]
   13524:	mov	r1, r3
   13528:	mov	r0, #4
   1352c:	bl	17924 <__assert_fail@plt+0x63e0>
   13530:	mov	r3, r0
   13534:	mov	r2, r4
   13538:	mov	r1, #0
   1353c:	mov	r0, #0
   13540:	bl	11370 <error@plt>
   13544:	movw	r3, #29200	; 0x7210
   13548:	movt	r3, #4
   1354c:	mov	r2, #0
   13550:	str	r2, [r3]
   13554:	bl	118a8 <__assert_fail@plt+0x364>
   13558:	movw	r3, #29200	; 0x7210
   1355c:	movt	r3, #4
   13560:	ldr	r3, [r3]
   13564:	mov	r0, r3
   13568:	bl	14e68 <__assert_fail@plt+0x3924>
   1356c:	mov	r3, r0
   13570:	cmp	r3, #0
   13574:	beq	135cc <__assert_fail@plt+0x2088>
   13578:	bl	11418 <__errno_location@plt>
   1357c:	mov	r3, r0
   13580:	ldr	r4, [r3]
   13584:	movw	r3, #29204	; 0x7214
   13588:	movt	r3, #4
   1358c:	ldr	r3, [r3]
   13590:	mov	r2, r3
   13594:	mov	r1, #3
   13598:	mov	r0, #0
   1359c:	bl	17b08 <__assert_fail@plt+0x65c4>
   135a0:	mov	r3, r0
   135a4:	movw	r2, #22472	; 0x57c8
   135a8:	movt	r2, #3
   135ac:	mov	r1, r4
   135b0:	mov	r0, #0
   135b4:	bl	11370 <error@plt>
   135b8:	movw	r3, #29200	; 0x7210
   135bc:	movt	r3, #4
   135c0:	mov	r2, #0
   135c4:	str	r2, [r3]
   135c8:	bl	118a8 <__assert_fail@plt+0x364>
   135cc:	movw	r3, #29192	; 0x7208
   135d0:	movt	r3, #4
   135d4:	ldrd	r2, [r3]
   135d8:	orrs	r3, r2, r3
   135dc:	bne	136cc <__assert_fail@plt+0x2188>
   135e0:	movw	r3, #29214	; 0x721e
   135e4:	movt	r3, #4
   135e8:	ldrb	r3, [r3]
   135ec:	cmp	r3, #0
   135f0:	beq	136cc <__assert_fail@plt+0x2188>
   135f4:	sub	r3, fp, #172	; 0xac
   135f8:	mov	r2, r3
   135fc:	movw	r1, #29224	; 0x7228
   13600:	movt	r1, #4
   13604:	mov	r0, #0
   13608:	bl	11214 <sigprocmask@plt>
   1360c:	movw	r3, #29204	; 0x7214
   13610:	movt	r3, #4
   13614:	ldr	r3, [r3]
   13618:	mov	r0, r3
   1361c:	bl	112bc <unlink@plt>
   13620:	mov	r3, r0
   13624:	cmp	r3, #0
   13628:	moveq	r3, #1
   1362c:	movne	r3, #0
   13630:	strb	r3, [fp, #-13]
   13634:	bl	11418 <__errno_location@plt>
   13638:	mov	r3, r0
   1363c:	ldr	r3, [r3]
   13640:	str	r3, [fp, #-20]	; 0xffffffec
   13644:	movw	r3, #29184	; 0x7200
   13648:	movt	r3, #4
   1364c:	ldr	r3, [r3]
   13650:	sub	r2, r3, #1
   13654:	movw	r3, #29184	; 0x7200
   13658:	movt	r3, #4
   1365c:	str	r2, [r3]
   13660:	sub	r3, fp, #172	; 0xac
   13664:	mov	r2, #0
   13668:	mov	r1, r3
   1366c:	mov	r0, #2
   13670:	bl	11214 <sigprocmask@plt>
   13674:	ldrb	r3, [fp, #-13]
   13678:	eor	r3, r3, #1
   1367c:	uxtb	r3, r3
   13680:	cmp	r3, #0
   13684:	beq	13728 <__assert_fail@plt+0x21e4>
   13688:	ldr	r3, [fp, #-20]	; 0xffffffec
   1368c:	cmp	r3, #2
   13690:	beq	13728 <__assert_fail@plt+0x21e4>
   13694:	movw	r3, #29204	; 0x7214
   13698:	movt	r3, #4
   1369c:	ldr	r3, [r3]
   136a0:	mov	r2, r3
   136a4:	mov	r1, #3
   136a8:	mov	r0, #0
   136ac:	bl	17b08 <__assert_fail@plt+0x65c4>
   136b0:	mov	r3, r0
   136b4:	movw	r2, #22472	; 0x57c8
   136b8:	movt	r2, #3
   136bc:	ldr	r1, [fp, #-20]	; 0xffffffec
   136c0:	mov	r0, #0
   136c4:	bl	11370 <error@plt>
   136c8:	b	13728 <__assert_fail@plt+0x21e4>
   136cc:	movw	r3, #29212	; 0x721c
   136d0:	movt	r3, #4
   136d4:	ldrb	r3, [r3]
   136d8:	eor	r3, r3, #1
   136dc:	uxtb	r3, r3
   136e0:	cmp	r3, #0
   136e4:	beq	1372c <__assert_fail@plt+0x21e8>
   136e8:	movw	r3, #29124	; 0x71c4
   136ec:	movt	r3, #4
   136f0:	ldr	r4, [r3]
   136f4:	movw	r3, #29192	; 0x7208
   136f8:	movt	r3, #4
   136fc:	ldrd	r0, [r3]
   13700:	sub	r3, fp, #44	; 0x2c
   13704:	mov	r2, r3
   13708:	bl	15380 <__assert_fail@plt+0x3e3c>
   1370c:	mov	r3, r0
   13710:	mov	r2, r3
   13714:	movw	r1, #22740	; 0x58d4
   13718:	movt	r1, #3
   1371c:	mov	r0, r4
   13720:	bl	1140c <fprintf@plt>
   13724:	b	1372c <__assert_fail@plt+0x21e8>
   13728:	nop	{0}
   1372c:	movw	r3, #29200	; 0x7210
   13730:	movt	r3, #4
   13734:	mov	r2, #0
   13738:	str	r2, [r3]
   1373c:	nop	{0}
   13740:	sub	sp, fp, #8
   13744:	ldr	r4, [sp]
   13748:	ldr	fp, [sp, #4]
   1374c:	add	sp, sp, #8
   13750:	pop	{pc}		; (ldr pc, [sp], #4)
   13754:	strd	r4, [sp, #-16]!
   13758:	str	fp, [sp, #8]
   1375c:	str	lr, [sp, #12]
   13760:	add	fp, sp, #12
   13764:	sub	sp, sp, #16
   13768:	str	r0, [fp, #-24]	; 0xffffffe8
   1376c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13770:	ldr	r0, [r3, #4]
   13774:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13778:	ldr	r3, [r3]
   1377c:	mov	r2, r3
   13780:	movw	r3, #29200	; 0x7210
   13784:	movt	r3, #4
   13788:	ldr	r3, [r3]
   1378c:	mov	r1, #1
   13790:	bl	11298 <fwrite_unlocked@plt>
   13794:	mov	r3, r0
   13798:	str	r3, [fp, #-16]
   1379c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   137a0:	ldr	r3, [r3]
   137a4:	ldr	r2, [fp, #-16]
   137a8:	cmp	r2, r3
   137ac:	beq	1380c <__assert_fail@plt+0x22c8>
   137b0:	bl	11418 <__errno_location@plt>
   137b4:	mov	r3, r0
   137b8:	ldr	r4, [r3]
   137bc:	movw	r0, #22720	; 0x58c0
   137c0:	movt	r0, #3
   137c4:	bl	113e8 <gettext@plt>
   137c8:	mov	r5, r0
   137cc:	movw	r3, #29204	; 0x7214
   137d0:	movt	r3, #4
   137d4:	ldr	r3, [r3]
   137d8:	mov	r1, r3
   137dc:	mov	r0, #4
   137e0:	bl	17924 <__assert_fail@plt+0x63e0>
   137e4:	mov	r3, r0
   137e8:	mov	r2, r5
   137ec:	mov	r1, r4
   137f0:	mov	r0, #0
   137f4:	bl	11370 <error@plt>
   137f8:	movw	r3, #29200	; 0x7210
   137fc:	movt	r3, #4
   13800:	mov	r2, #0
   13804:	str	r2, [r3]
   13808:	bl	118a8 <__assert_fail@plt+0x364>
   1380c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13810:	ldr	r3, [r3]
   13814:	mov	r0, r3
   13818:	asr	r1, r0, #31
   1381c:	movw	r3, #29192	; 0x7208
   13820:	movt	r3, #4
   13824:	ldrd	r2, [r3]
   13828:	adds	r4, r0, r2
   1382c:	adc	r5, r1, r3
   13830:	movw	r3, #29192	; 0x7208
   13834:	movt	r3, #4
   13838:	strd	r4, [r3]
   1383c:	nop	{0}
   13840:	sub	sp, fp, #12
   13844:	ldrd	r4, [sp]
   13848:	ldr	fp, [sp, #8]
   1384c:	add	sp, sp, #12
   13850:	pop	{pc}		; (ldr pc, [sp], #4)
   13854:	str	fp, [sp, #-8]!
   13858:	str	lr, [sp, #4]
   1385c:	add	fp, sp, #4
   13860:	sub	sp, sp, #16
   13864:	movw	r3, #29220	; 0x7224
   13868:	movt	r3, #4
   1386c:	ldr	r2, [r3]
   13870:	movw	r3, #29356	; 0x72ac
   13874:	movt	r3, #4
   13878:	ldr	r3, [r3]
   1387c:	cmp	r2, r3
   13880:	bne	138bc <__assert_fail@plt+0x2378>
   13884:	movw	r3, #29216	; 0x7220
   13888:	movt	r3, #4
   1388c:	ldr	r0, [r3]
   13890:	mov	r3, #64	; 0x40
   13894:	str	r3, [sp]
   13898:	mvn	r3, #0
   1389c:	mov	r2, #1
   138a0:	movw	r1, #29356	; 0x72ac
   138a4:	movt	r1, #4
   138a8:	bl	32308 <__assert_fail@plt+0x20dc4>
   138ac:	mov	r2, r0
   138b0:	movw	r3, #29216	; 0x7220
   138b4:	movt	r3, #4
   138b8:	str	r2, [r3]
   138bc:	movw	r3, #29216	; 0x7220
   138c0:	movt	r3, #4
   138c4:	ldr	r1, [r3]
   138c8:	movw	r3, #29220	; 0x7224
   138cc:	movt	r3, #4
   138d0:	ldr	r2, [r3]
   138d4:	add	r0, r2, #1
   138d8:	movw	r3, #29220	; 0x7224
   138dc:	movt	r3, #4
   138e0:	str	r0, [r3]
   138e4:	mov	r3, r2
   138e8:	lsl	r3, r3, #6
   138ec:	add	r3, r1, r3
   138f0:	str	r3, [fp, #-8]
   138f4:	ldr	r3, [fp, #-8]
   138f8:	mov	r2, #0
   138fc:	strb	r2, [r3, #30]
   13900:	ldr	r1, [fp, #-8]
   13904:	mov	r2, #0
   13908:	mov	r3, #0
   1390c:	strd	r2, [r1, #16]
   13910:	ldr	r3, [fp, #-8]
   13914:	mov	r2, #0
   13918:	strb	r2, [r3, #28]
   1391c:	ldr	r1, [fp, #-8]
   13920:	mov	r2, #0
   13924:	mov	r3, #0
   13928:	strd	r2, [r1, #8]
   1392c:	ldr	r1, [fp, #-8]
   13930:	mov	r2, #0
   13934:	mov	r3, #0
   13938:	strd	r2, [r1]
   1393c:	ldr	r3, [fp, #-8]
   13940:	mov	r0, r3
   13944:	sub	sp, fp, #4
   13948:	ldr	fp, [sp]
   1394c:	add	sp, sp, #4
   13950:	pop	{pc}		; (ldr pc, [sp], #4)
   13954:	str	r4, [sp, #-12]!
   13958:	str	fp, [sp, #4]
   1395c:	str	lr, [sp, #8]
   13960:	add	fp, sp, #8
   13964:	sub	sp, sp, #28
   13968:	str	r0, [fp, #-16]
   1396c:	str	r1, [fp, #-20]	; 0xffffffec
   13970:	str	r2, [fp, #-24]	; 0xffffffe8
   13974:	ldr	r2, [fp, #-16]
   13978:	movw	r3, #21980	; 0x55dc
   1397c:	movt	r3, #3
   13980:	str	r3, [sp]
   13984:	mov	r3, r2
   13988:	mov	r2, #10
   1398c:	mov	r1, #0
   13990:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13994:	bl	32c48 <__assert_fail@plt+0x21704>
   13998:	mov	r3, r0
   1399c:	cmp	r3, #0
   139a0:	beq	139d0 <__assert_fail@plt+0x248c>
   139a4:	movw	r0, #22744	; 0x58d8
   139a8:	movt	r0, #3
   139ac:	bl	113e8 <gettext@plt>
   139b0:	mov	r4, r0
   139b4:	ldr	r0, [fp, #-20]	; 0xffffffec
   139b8:	bl	17e04 <__assert_fail@plt+0x68c0>
   139bc:	mov	r3, r0
   139c0:	mov	r2, r4
   139c4:	mov	r1, #0
   139c8:	mov	r0, #1
   139cc:	bl	11370 <error@plt>
   139d0:	nop	{0}
   139d4:	sub	sp, fp, #8
   139d8:	ldr	r4, [sp]
   139dc:	ldr	fp, [sp, #4]
   139e0:	add	sp, sp, #8
   139e4:	pop	{pc}		; (ldr pc, [sp], #4)
   139e8:	str	r4, [sp, #-12]!
   139ec:	str	fp, [sp, #4]
   139f0:	str	lr, [sp, #8]
   139f4:	add	fp, sp, #8
   139f8:	sub	sp, sp, #44	; 0x2c
   139fc:	str	r0, [fp, #-32]	; 0xffffffe0
   13a00:	str	r1, [fp, #-36]	; 0xffffffdc
   13a04:	str	r2, [fp, #-40]	; 0xffffffd8
   13a08:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13a0c:	bl	113f4 <strlen@plt>
   13a10:	mov	r3, r0
   13a14:	sub	r3, r3, #1
   13a18:	ldr	r2, [fp, #-40]	; 0xffffffd8
   13a1c:	add	r3, r2, r3
   13a20:	str	r3, [fp, #-16]
   13a24:	ldr	r3, [fp, #-16]
   13a28:	ldrb	r3, [r3]
   13a2c:	cmp	r3, #125	; 0x7d
   13a30:	beq	13a60 <__assert_fail@plt+0x251c>
   13a34:	movw	r0, #22784	; 0x5900
   13a38:	movt	r0, #3
   13a3c:	bl	113e8 <gettext@plt>
   13a40:	mov	r4, r0
   13a44:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13a48:	bl	17e04 <__assert_fail@plt+0x68c0>
   13a4c:	mov	r3, r0
   13a50:	mov	r2, r4
   13a54:	mov	r1, #0
   13a58:	mov	r0, #1
   13a5c:	bl	11370 <error@plt>
   13a60:	ldr	r3, [fp, #-16]
   13a64:	mov	r2, #0
   13a68:	strb	r2, [r3]
   13a6c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   13a70:	add	r2, r3, #1
   13a74:	ldr	r3, [fp, #-16]
   13a78:	sub	r3, r3, #1
   13a7c:	cmp	r2, r3
   13a80:	bne	13aa8 <__assert_fail@plt+0x2564>
   13a84:	ldr	r3, [fp, #-40]	; 0xffffffd8
   13a88:	add	r3, r3, #1
   13a8c:	ldrb	r3, [r3]
   13a90:	cmp	r3, #42	; 0x2a
   13a94:	bne	13aa8 <__assert_fail@plt+0x2564>
   13a98:	ldr	r3, [fp, #-36]	; 0xffffffdc
   13a9c:	mov	r2, #1
   13aa0:	strb	r2, [r3, #28]
   13aa4:	b	13b40 <__assert_fail@plt+0x25fc>
   13aa8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   13aac:	add	r0, r3, #1
   13ab0:	sub	r2, fp, #28
   13ab4:	movw	r3, #21980	; 0x55dc
   13ab8:	movt	r3, #3
   13abc:	str	r3, [sp]
   13ac0:	mov	r3, r2
   13ac4:	mov	r2, #10
   13ac8:	mov	r1, #0
   13acc:	bl	3347c <__assert_fail@plt+0x21f38>
   13ad0:	mov	r3, r0
   13ad4:	cmp	r3, #0
   13ad8:	bne	13aec <__assert_fail@plt+0x25a8>
   13adc:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   13ae0:	cmp	r2, #0
   13ae4:	sbcs	r3, r3, #0
   13ae8:	bge	13b34 <__assert_fail@plt+0x25f0>
   13aec:	movw	r0, #22820	; 0x5924
   13af0:	movt	r0, #3
   13af4:	bl	113e8 <gettext@plt>
   13af8:	mov	r4, r0
   13afc:	movw	r3, #29208	; 0x7218
   13b00:	movt	r3, #4
   13b04:	ldr	r2, [r3]
   13b08:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13b0c:	lsl	r3, r3, #2
   13b10:	add	r3, r2, r3
   13b14:	ldr	r3, [r3]
   13b18:	mov	r0, r3
   13b1c:	bl	17e04 <__assert_fail@plt+0x68c0>
   13b20:	mov	r3, r0
   13b24:	mov	r2, r4
   13b28:	mov	r1, #0
   13b2c:	mov	r0, #1
   13b30:	bl	11370 <error@plt>
   13b34:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   13b38:	ldr	r1, [fp, #-36]	; 0xffffffdc
   13b3c:	strd	r2, [r1, #16]
   13b40:	ldr	r3, [fp, #-16]
   13b44:	mov	r2, #125	; 0x7d
   13b48:	strb	r2, [r3]
   13b4c:	nop	{0}
   13b50:	sub	sp, fp, #8
   13b54:	ldr	r4, [sp]
   13b58:	ldr	fp, [sp, #4]
   13b5c:	add	sp, sp, #8
   13b60:	pop	{pc}		; (ldr pc, [sp], #4)
   13b64:	str	r4, [sp, #-12]!
   13b68:	str	fp, [sp, #4]
   13b6c:	str	lr, [sp, #8]
   13b70:	add	fp, sp, #8
   13b74:	sub	sp, sp, #52	; 0x34
   13b78:	str	r0, [fp, #-40]	; 0xffffffd8
   13b7c:	mov	r3, r1
   13b80:	str	r2, [fp, #-48]	; 0xffffffd0
   13b84:	strb	r3, [fp, #-41]	; 0xffffffd7
   13b88:	ldr	r3, [fp, #-48]	; 0xffffffd0
   13b8c:	ldrb	r3, [r3]
   13b90:	strb	r3, [fp, #-13]
   13b94:	ldr	r3, [fp, #-48]	; 0xffffffd0
   13b98:	add	r3, r3, #1
   13b9c:	ldrb	r2, [fp, #-13]
   13ba0:	mov	r1, r2
   13ba4:	mov	r0, r3
   13ba8:	bl	114cc <strrchr@plt>
   13bac:	str	r0, [fp, #-20]	; 0xffffffec
   13bb0:	ldr	r3, [fp, #-20]	; 0xffffffec
   13bb4:	cmp	r3, #0
   13bb8:	bne	13be4 <__assert_fail@plt+0x26a0>
   13bbc:	movw	r0, #22864	; 0x5950
   13bc0:	movt	r0, #3
   13bc4:	bl	113e8 <gettext@plt>
   13bc8:	mov	r2, r0
   13bcc:	ldrb	r3, [fp, #-13]
   13bd0:	str	r3, [sp]
   13bd4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   13bd8:	mov	r1, #0
   13bdc:	mov	r0, #1
   13be0:	bl	11370 <error@plt>
   13be4:	ldr	r2, [fp, #-20]	; 0xffffffec
   13be8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   13bec:	sub	r3, r2, r3
   13bf0:	sub	r3, r3, #1
   13bf4:	str	r3, [fp, #-24]	; 0xffffffe8
   13bf8:	bl	13854 <__assert_fail@plt+0x2310>
   13bfc:	str	r0, [fp, #-28]	; 0xffffffe4
   13c00:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13c04:	ldr	r2, [fp, #-40]	; 0xffffffd8
   13c08:	str	r2, [r3, #24]
   13c0c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13c10:	ldrb	r2, [fp, #-41]	; 0xffffffd7
   13c14:	strb	r2, [r3, #29]
   13c18:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13c1c:	mov	r2, #1
   13c20:	strb	r2, [r3, #30]
   13c24:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13c28:	mov	r2, #0
   13c2c:	str	r2, [r3, #32]
   13c30:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13c34:	mov	r2, #0
   13c38:	str	r2, [r3, #36]	; 0x24
   13c3c:	mov	r0, #256	; 0x100
   13c40:	bl	31f28 <__assert_fail@plt+0x209e4>
   13c44:	mov	r3, r0
   13c48:	mov	r2, r3
   13c4c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13c50:	str	r2, [r3, #48]	; 0x30
   13c54:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13c58:	mov	r2, #0
   13c5c:	str	r2, [r3, #52]	; 0x34
   13c60:	movw	r3, #29684	; 0x73f4
   13c64:	movt	r3, #4
   13c68:	movw	r2, #710	; 0x2c6
   13c6c:	str	r2, [r3]
   13c70:	ldr	r3, [fp, #-48]	; 0xffffffd0
   13c74:	add	r0, r3, #1
   13c78:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13c7c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13c80:	add	r3, r3, #32
   13c84:	mov	r2, r3
   13c88:	bl	1d3dc <__assert_fail@plt+0xbe98>
   13c8c:	str	r0, [fp, #-32]	; 0xffffffe0
   13c90:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13c94:	cmp	r3, #0
   13c98:	beq	13cd8 <__assert_fail@plt+0x2794>
   13c9c:	movw	r0, #22900	; 0x5974
   13ca0:	movt	r0, #3
   13ca4:	bl	113e8 <gettext@plt>
   13ca8:	mov	r4, r0
   13cac:	ldr	r0, [fp, #-48]	; 0xffffffd0
   13cb0:	bl	17e04 <__assert_fail@plt+0x68c0>
   13cb4:	mov	r2, r0
   13cb8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13cbc:	str	r3, [sp]
   13cc0:	mov	r3, r2
   13cc4:	mov	r2, r4
   13cc8:	mov	r1, #0
   13ccc:	mov	r0, #0
   13cd0:	bl	11370 <error@plt>
   13cd4:	bl	118a8 <__assert_fail@plt+0x364>
   13cd8:	ldr	r3, [fp, #-20]	; 0xffffffec
   13cdc:	add	r3, r3, #1
   13ce0:	ldrb	r3, [r3]
   13ce4:	cmp	r3, #0
   13ce8:	beq	13d04 <__assert_fail@plt+0x27c0>
   13cec:	ldr	r3, [fp, #-20]	; 0xffffffec
   13cf0:	add	r3, r3, #1
   13cf4:	mov	r2, r3
   13cf8:	ldr	r1, [fp, #-48]	; 0xffffffd0
   13cfc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13d00:	bl	13954 <__assert_fail@plt+0x2410>
   13d04:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13d08:	mov	r0, r3
   13d0c:	sub	sp, fp, #8
   13d10:	ldr	r4, [sp]
   13d14:	ldr	fp, [sp, #4]
   13d18:	add	sp, sp, #8
   13d1c:	pop	{pc}		; (ldr pc, [sp], #4)
   13d20:	strd	r4, [sp, #-16]!
   13d24:	str	fp, [sp, #8]
   13d28:	str	lr, [sp, #12]
   13d2c:	add	fp, sp, #12
   13d30:	sub	sp, sp, #64	; 0x40
   13d34:	str	r0, [fp, #-56]	; 0xffffffc8
   13d38:	str	r1, [fp, #-60]	; 0xffffffc4
   13d3c:	str	r2, [fp, #-64]	; 0xffffffc0
   13d40:	ldr	r3, [fp, #-60]	; 0xffffffc4
   13d44:	str	r3, [fp, #-20]	; 0xffffffec
   13d48:	b	14034 <__assert_fail@plt+0x2af0>
   13d4c:	ldr	r3, [fp, #-20]	; 0xffffffec
   13d50:	lsl	r3, r3, #2
   13d54:	ldr	r2, [fp, #-64]	; 0xffffffc0
   13d58:	add	r3, r2, r3
   13d5c:	ldr	r3, [r3]
   13d60:	ldrb	r3, [r3]
   13d64:	cmp	r3, #47	; 0x2f
   13d68:	beq	13d8c <__assert_fail@plt+0x2848>
   13d6c:	ldr	r3, [fp, #-20]	; 0xffffffec
   13d70:	lsl	r3, r3, #2
   13d74:	ldr	r2, [fp, #-64]	; 0xffffffc0
   13d78:	add	r3, r2, r3
   13d7c:	ldr	r3, [r3]
   13d80:	ldrb	r3, [r3]
   13d84:	cmp	r3, #37	; 0x25
   13d88:	bne	13ddc <__assert_fail@plt+0x2898>
   13d8c:	ldr	r3, [fp, #-20]	; 0xffffffec
   13d90:	lsl	r3, r3, #2
   13d94:	ldr	r2, [fp, #-64]	; 0xffffffc0
   13d98:	add	r3, r2, r3
   13d9c:	ldr	r3, [r3]
   13da0:	ldrb	r3, [r3]
   13da4:	cmp	r3, #37	; 0x25
   13da8:	moveq	r3, #1
   13dac:	movne	r3, #0
   13db0:	uxtb	r1, r3
   13db4:	ldr	r3, [fp, #-20]	; 0xffffffec
   13db8:	lsl	r3, r3, #2
   13dbc:	ldr	r2, [fp, #-64]	; 0xffffffc0
   13dc0:	add	r3, r2, r3
   13dc4:	ldr	r3, [r3]
   13dc8:	mov	r2, r3
   13dcc:	ldr	r0, [fp, #-20]	; 0xffffffec
   13dd0:	bl	13b64 <__assert_fail@plt+0x2620>
   13dd4:	str	r0, [fp, #-16]
   13dd8:	b	13fc0 <__assert_fail@plt+0x2a7c>
   13ddc:	bl	13854 <__assert_fail@plt+0x2310>
   13de0:	str	r0, [fp, #-16]
   13de4:	ldr	r3, [fp, #-16]
   13de8:	ldr	r2, [fp, #-20]	; 0xffffffec
   13dec:	str	r2, [r3, #24]
   13df0:	ldr	r3, [fp, #-20]	; 0xffffffec
   13df4:	lsl	r3, r3, #2
   13df8:	ldr	r2, [fp, #-64]	; 0xffffffc0
   13dfc:	add	r3, r2, r3
   13e00:	ldr	r0, [r3]
   13e04:	sub	r2, fp, #28
   13e08:	movw	r3, #21980	; 0x55dc
   13e0c:	movt	r3, #3
   13e10:	str	r3, [sp]
   13e14:	mov	r3, r2
   13e18:	mov	r2, #10
   13e1c:	mov	r1, #0
   13e20:	bl	3347c <__assert_fail@plt+0x21f38>
   13e24:	mov	r3, r0
   13e28:	cmp	r3, #0
   13e2c:	bne	13e40 <__assert_fail@plt+0x28fc>
   13e30:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   13e34:	cmp	r2, #0
   13e38:	sbcs	r3, r3, #0
   13e3c:	bge	13e80 <__assert_fail@plt+0x293c>
   13e40:	movw	r0, #22936	; 0x5998
   13e44:	movt	r0, #3
   13e48:	bl	113e8 <gettext@plt>
   13e4c:	mov	r4, r0
   13e50:	ldr	r3, [fp, #-20]	; 0xffffffec
   13e54:	lsl	r3, r3, #2
   13e58:	ldr	r2, [fp, #-64]	; 0xffffffc0
   13e5c:	add	r3, r2, r3
   13e60:	ldr	r3, [r3]
   13e64:	mov	r0, r3
   13e68:	bl	17e04 <__assert_fail@plt+0x68c0>
   13e6c:	mov	r3, r0
   13e70:	mov	r2, r4
   13e74:	mov	r1, #0
   13e78:	mov	r0, #1
   13e7c:	bl	11370 <error@plt>
   13e80:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   13e84:	orrs	r3, r2, r3
   13e88:	bne	13ec0 <__assert_fail@plt+0x297c>
   13e8c:	movw	r0, #22956	; 0x59ac
   13e90:	movt	r0, #3
   13e94:	bl	113e8 <gettext@plt>
   13e98:	mov	r1, r0
   13e9c:	ldr	r3, [fp, #-20]	; 0xffffffec
   13ea0:	lsl	r3, r3, #2
   13ea4:	ldr	r2, [fp, #-64]	; 0xffffffc0
   13ea8:	add	r3, r2, r3
   13eac:	ldr	r3, [r3]
   13eb0:	mov	r2, r1
   13eb4:	mov	r1, #0
   13eb8:	mov	r0, #1
   13ebc:	bl	11370 <error@plt>
   13ec0:	ldrd	r0, [fp, #-28]	; 0xffffffe4
   13ec4:	movw	r3, #29360	; 0x72b0
   13ec8:	movt	r3, #4
   13ecc:	ldrd	r2, [r3]
   13ed0:	cmp	r1, r3
   13ed4:	cmpeq	r0, r2
   13ed8:	bcs	13f40 <__assert_fail@plt+0x29fc>
   13edc:	movw	r0, #23000	; 0x59d8
   13ee0:	movt	r0, #3
   13ee4:	bl	113e8 <gettext@plt>
   13ee8:	mov	r4, r0
   13eec:	ldr	r3, [fp, #-20]	; 0xffffffec
   13ef0:	lsl	r3, r3, #2
   13ef4:	ldr	r2, [fp, #-64]	; 0xffffffc0
   13ef8:	add	r3, r2, r3
   13efc:	ldr	r3, [r3]
   13f00:	mov	r0, r3
   13f04:	bl	17e04 <__assert_fail@plt+0x68c0>
   13f08:	mov	r5, r0
   13f0c:	movw	r3, #29360	; 0x72b0
   13f10:	movt	r3, #4
   13f14:	ldrd	r0, [r3]
   13f18:	sub	r3, fp, #52	; 0x34
   13f1c:	mov	r2, r3
   13f20:	bl	15380 <__assert_fail@plt+0x3e3c>
   13f24:	mov	r3, r0
   13f28:	str	r3, [sp]
   13f2c:	mov	r3, r5
   13f30:	mov	r2, r4
   13f34:	mov	r1, #0
   13f38:	mov	r0, #1
   13f3c:	bl	11370 <error@plt>
   13f40:	ldrd	r0, [fp, #-28]	; 0xffffffe4
   13f44:	movw	r3, #29360	; 0x72b0
   13f48:	movt	r3, #4
   13f4c:	ldrd	r2, [r3]
   13f50:	cmp	r1, r3
   13f54:	cmpeq	r0, r2
   13f58:	bne	13f9c <__assert_fail@plt+0x2a58>
   13f5c:	movw	r0, #23060	; 0x5a14
   13f60:	movt	r0, #3
   13f64:	bl	113e8 <gettext@plt>
   13f68:	mov	r4, r0
   13f6c:	ldr	r3, [fp, #-20]	; 0xffffffec
   13f70:	lsl	r3, r3, #2
   13f74:	ldr	r2, [fp, #-64]	; 0xffffffc0
   13f78:	add	r3, r2, r3
   13f7c:	ldr	r3, [r3]
   13f80:	mov	r0, r3
   13f84:	bl	17e04 <__assert_fail@plt+0x68c0>
   13f88:	mov	r3, r0
   13f8c:	mov	r2, r4
   13f90:	mov	r1, #0
   13f94:	mov	r0, #0
   13f98:	bl	11370 <error@plt>
   13f9c:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   13fa0:	mov	r0, r2
   13fa4:	mov	r1, r3
   13fa8:	movw	r3, #29360	; 0x72b0
   13fac:	movt	r3, #4
   13fb0:	strd	r0, [r3]
   13fb4:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   13fb8:	ldr	r1, [fp, #-16]
   13fbc:	strd	r2, [r1, #8]
   13fc0:	ldr	r3, [fp, #-20]	; 0xffffffec
   13fc4:	add	r3, r3, #1
   13fc8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   13fcc:	cmp	r2, r3
   13fd0:	ble	14028 <__assert_fail@plt+0x2ae4>
   13fd4:	ldr	r3, [fp, #-20]	; 0xffffffec
   13fd8:	add	r3, r3, #1
   13fdc:	lsl	r3, r3, #2
   13fe0:	ldr	r2, [fp, #-64]	; 0xffffffc0
   13fe4:	add	r3, r2, r3
   13fe8:	ldr	r3, [r3]
   13fec:	ldrb	r3, [r3]
   13ff0:	cmp	r3, #123	; 0x7b
   13ff4:	bne	14028 <__assert_fail@plt+0x2ae4>
   13ff8:	ldr	r3, [fp, #-20]	; 0xffffffec
   13ffc:	add	r3, r3, #1
   14000:	str	r3, [fp, #-20]	; 0xffffffec
   14004:	ldr	r3, [fp, #-20]	; 0xffffffec
   14008:	lsl	r3, r3, #2
   1400c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   14010:	add	r3, r2, r3
   14014:	ldr	r3, [r3]
   14018:	mov	r2, r3
   1401c:	ldr	r1, [fp, #-16]
   14020:	ldr	r0, [fp, #-20]	; 0xffffffec
   14024:	bl	139e8 <__assert_fail@plt+0x24a4>
   14028:	ldr	r3, [fp, #-20]	; 0xffffffec
   1402c:	add	r3, r3, #1
   14030:	str	r3, [fp, #-20]	; 0xffffffec
   14034:	ldr	r2, [fp, #-20]	; 0xffffffec
   14038:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1403c:	cmp	r2, r3
   14040:	blt	13d4c <__assert_fail@plt+0x2808>
   14044:	nop	{0}
   14048:	sub	sp, fp, #12
   1404c:	ldrd	r4, [sp]
   14050:	ldr	fp, [sp, #8]
   14054:	add	sp, sp, #12
   14058:	pop	{pc}		; (ldr pc, [sp], #4)
   1405c:	push	{fp}		; (str fp, [sp, #-4]!)
   14060:	add	fp, sp, #0
   14064:	sub	sp, sp, #20
   14068:	str	r0, [fp, #-16]
   1406c:	str	r1, [fp, #-20]	; 0xffffffec
   14070:	mov	r3, #0
   14074:	str	r3, [fp, #-8]
   14078:	mov	r3, #0
   1407c:	str	r3, [fp, #-12]
   14080:	ldr	r3, [fp, #-12]
   14084:	ldr	r2, [fp, #-16]
   14088:	add	r3, r2, r3
   1408c:	ldrb	r3, [r3]
   14090:	sub	r3, r3, #35	; 0x23
   14094:	cmp	r3, #13
   14098:	ldrls	pc, [pc, r3, lsl #2]
   1409c:	b	140f8 <__assert_fail@plt+0x2bb4>
   140a0:	andeq	r4, r1, r8, ror #1
   140a4:	strdeq	r4, [r1], -r8
   140a8:	strdeq	r4, [r1], -r8
   140ac:	strdeq	r4, [r1], -r8
   140b0:	ldrdeq	r4, [r1], -r8
   140b4:	strdeq	r4, [r1], -r8
   140b8:	strdeq	r4, [r1], -r8
   140bc:	strdeq	r4, [r1], -r8
   140c0:	strdeq	r4, [r1], -r8
   140c4:	strdeq	r4, [r1], -r8
   140c8:	andeq	r4, r1, ip, lsl #2
   140cc:	strdeq	r4, [r1], -r8
   140d0:	strdeq	r4, [r1], -r8
   140d4:	andeq	r4, r1, ip, lsl #2
   140d8:	ldr	r3, [fp, #-8]
   140dc:	orr	r3, r3, #1
   140e0:	str	r3, [fp, #-8]
   140e4:	b	14110 <__assert_fail@plt+0x2bcc>
   140e8:	ldr	r3, [fp, #-8]
   140ec:	orr	r3, r3, #2
   140f0:	str	r3, [fp, #-8]
   140f4:	b	14110 <__assert_fail@plt+0x2bcc>
   140f8:	ldr	r3, [fp, #-20]	; 0xffffffec
   140fc:	ldr	r2, [fp, #-8]
   14100:	str	r2, [r3]
   14104:	ldr	r3, [fp, #-12]
   14108:	b	14120 <__assert_fail@plt+0x2bdc>
   1410c:	nop	{0}
   14110:	ldr	r3, [fp, #-12]
   14114:	add	r3, r3, #1
   14118:	str	r3, [fp, #-12]
   1411c:	b	14080 <__assert_fail@plt+0x2b3c>
   14120:	mov	r0, r3
   14124:	add	sp, fp, #0
   14128:	pop	{fp}		; (ldr fp, [sp], #4)
   1412c:	bx	lr
   14130:	str	fp, [sp, #-8]!
   14134:	str	lr, [sp, #4]
   14138:	add	fp, sp, #4
   1413c:	sub	sp, sp, #24
   14140:	str	r0, [fp, #-16]
   14144:	str	r1, [fp, #-20]	; 0xffffffec
   14148:	ldr	r3, [fp, #-16]
   1414c:	ldrb	r3, [r3]
   14150:	strb	r3, [fp, #-9]
   14154:	mov	r3, #1
   14158:	str	r3, [fp, #-8]
   1415c:	ldrb	r3, [fp, #-9]
   14160:	cmp	r3, #105	; 0x69
   14164:	beq	1424c <__assert_fail@plt+0x2d08>
   14168:	cmp	r3, #105	; 0x69
   1416c:	bgt	1418c <__assert_fail@plt+0x2c48>
   14170:	cmp	r3, #88	; 0x58
   14174:	beq	141b8 <__assert_fail@plt+0x2c74>
   14178:	cmp	r3, #100	; 0x64
   1417c:	beq	1424c <__assert_fail@plt+0x2d08>
   14180:	cmp	r3, #0
   14184:	beq	141c4 <__assert_fail@plt+0x2c80>
   14188:	b	141e4 <__assert_fail@plt+0x2ca0>
   1418c:	cmp	r3, #117	; 0x75
   14190:	beq	141a8 <__assert_fail@plt+0x2c64>
   14194:	cmp	r3, #120	; 0x78
   14198:	beq	141b8 <__assert_fail@plt+0x2c74>
   1419c:	cmp	r3, #111	; 0x6f
   141a0:	beq	141b8 <__assert_fail@plt+0x2c74>
   141a4:	b	141e4 <__assert_fail@plt+0x2ca0>
   141a8:	ldr	r3, [fp, #-16]
   141ac:	mov	r2, #100	; 0x64
   141b0:	strb	r2, [r3]
   141b4:	b	14250 <__assert_fail@plt+0x2d0c>
   141b8:	mov	r3, #2
   141bc:	str	r3, [fp, #-8]
   141c0:	b	14250 <__assert_fail@plt+0x2d0c>
   141c4:	movw	r0, #23124	; 0x5a54
   141c8:	movt	r0, #3
   141cc:	bl	113e8 <gettext@plt>
   141d0:	mov	r3, r0
   141d4:	mov	r2, r3
   141d8:	mov	r1, #0
   141dc:	mov	r0, #1
   141e0:	bl	11370 <error@plt>
   141e4:	bl	113d0 <__ctype_b_loc@plt>
   141e8:	mov	r3, r0
   141ec:	ldr	r2, [r3]
   141f0:	ldrb	r3, [fp, #-9]
   141f4:	lsl	r3, r3, #1
   141f8:	add	r3, r2, r3
   141fc:	ldrh	r3, [r3]
   14200:	and	r3, r3, #16384	; 0x4000
   14204:	cmp	r3, #0
   14208:	beq	1422c <__assert_fail@plt+0x2ce8>
   1420c:	movw	r0, #23164	; 0x5a7c
   14210:	movt	r0, #3
   14214:	bl	113e8 <gettext@plt>
   14218:	mov	r2, r0
   1421c:	ldrb	r3, [fp, #-9]
   14220:	mov	r1, #0
   14224:	mov	r0, #1
   14228:	bl	11370 <error@plt>
   1422c:	movw	r0, #23208	; 0x5aa8
   14230:	movt	r0, #3
   14234:	bl	113e8 <gettext@plt>
   14238:	mov	r2, r0
   1423c:	ldrb	r3, [fp, #-9]
   14240:	mov	r1, #0
   14244:	mov	r0, #1
   14248:	bl	11370 <error@plt>
   1424c:	nop	{0}
   14250:	ldr	r3, [fp, #-8]
   14254:	mvn	r2, r3
   14258:	ldr	r3, [fp, #-20]	; 0xffffffec
   1425c:	and	r3, r3, r2
   14260:	cmp	r3, #0
   14264:	beq	142bc <__assert_fail@plt+0x2d78>
   14268:	movw	r0, #23256	; 0x5ad8
   1426c:	movt	r0, #3
   14270:	bl	113e8 <gettext@plt>
   14274:	mov	r1, r0
   14278:	ldr	r3, [fp, #-8]
   1427c:	mvn	r2, r3
   14280:	ldr	r3, [fp, #-20]	; 0xffffffec
   14284:	and	r3, r3, r2
   14288:	and	r3, r3, #2
   1428c:	cmp	r3, #0
   14290:	beq	1429c <__assert_fail@plt+0x2d58>
   14294:	mov	r2, #35	; 0x23
   14298:	b	142a0 <__assert_fail@plt+0x2d5c>
   1429c:	mov	r2, #39	; 0x27
   142a0:	ldrb	r3, [fp, #-9]
   142a4:	str	r3, [sp]
   142a8:	mov	r3, r2
   142ac:	mov	r2, r1
   142b0:	mov	r1, #0
   142b4:	mov	r0, #1
   142b8:	bl	11370 <error@plt>
   142bc:	nop	{0}
   142c0:	sub	sp, fp, #4
   142c4:	ldr	fp, [sp]
   142c8:	add	sp, sp, #4
   142cc:	pop	{pc}		; (ldr pc, [sp], #4)
   142d0:	str	fp, [sp, #-8]!
   142d4:	str	lr, [sp, #4]
   142d8:	add	fp, sp, #4
   142dc:	sub	sp, sp, #24
   142e0:	str	r0, [fp, #-24]	; 0xffffffe8
   142e4:	mov	r3, #0
   142e8:	strb	r3, [fp, #-5]
   142ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   142f0:	str	r3, [fp, #-12]
   142f4:	b	143f4 <__assert_fail@plt+0x2eb0>
   142f8:	ldr	r3, [fp, #-12]
   142fc:	ldrb	r3, [r3]
   14300:	cmp	r3, #37	; 0x25
   14304:	bne	143e8 <__assert_fail@plt+0x2ea4>
   14308:	ldr	r3, [fp, #-12]
   1430c:	add	r3, r3, #1
   14310:	str	r3, [fp, #-12]
   14314:	ldr	r3, [fp, #-12]
   14318:	ldrb	r3, [r3]
   1431c:	cmp	r3, #37	; 0x25
   14320:	beq	143e8 <__assert_fail@plt+0x2ea4>
   14324:	ldrb	r3, [fp, #-5]
   14328:	cmp	r3, #0
   1432c:	beq	14350 <__assert_fail@plt+0x2e0c>
   14330:	movw	r0, #23308	; 0x5b0c
   14334:	movt	r0, #3
   14338:	bl	113e8 <gettext@plt>
   1433c:	mov	r3, r0
   14340:	mov	r2, r3
   14344:	mov	r1, #0
   14348:	mov	r0, #1
   1434c:	bl	11370 <error@plt>
   14350:	mov	r3, #1
   14354:	strb	r3, [fp, #-5]
   14358:	sub	r3, fp, #20
   1435c:	mov	r1, r3
   14360:	ldr	r0, [fp, #-12]
   14364:	bl	1405c <__assert_fail@plt+0x2b18>
   14368:	mov	r3, r0
   1436c:	mov	r2, r3
   14370:	ldr	r3, [fp, #-12]
   14374:	add	r3, r3, r2
   14378:	str	r3, [fp, #-12]
   1437c:	b	1438c <__assert_fail@plt+0x2e48>
   14380:	ldr	r3, [fp, #-12]
   14384:	add	r3, r3, #1
   14388:	str	r3, [fp, #-12]
   1438c:	ldr	r3, [fp, #-12]
   14390:	ldrb	r3, [r3]
   14394:	sub	r3, r3, #48	; 0x30
   14398:	cmp	r3, #9
   1439c:	bls	14380 <__assert_fail@plt+0x2e3c>
   143a0:	ldr	r3, [fp, #-12]
   143a4:	ldrb	r3, [r3]
   143a8:	cmp	r3, #46	; 0x2e
   143ac:	bne	143d8 <__assert_fail@plt+0x2e94>
   143b0:	b	143b8 <__assert_fail@plt+0x2e74>
   143b4:	nop	{0}
   143b8:	ldr	r3, [fp, #-12]
   143bc:	add	r3, r3, #1
   143c0:	str	r3, [fp, #-12]
   143c4:	ldr	r3, [fp, #-12]
   143c8:	ldrb	r3, [r3]
   143cc:	sub	r3, r3, #48	; 0x30
   143d0:	cmp	r3, #9
   143d4:	bls	143b4 <__assert_fail@plt+0x2e70>
   143d8:	ldr	r3, [fp, #-20]	; 0xffffffec
   143dc:	mov	r1, r3
   143e0:	ldr	r0, [fp, #-12]
   143e4:	bl	14130 <__assert_fail@plt+0x2bec>
   143e8:	ldr	r3, [fp, #-12]
   143ec:	add	r3, r3, #1
   143f0:	str	r3, [fp, #-12]
   143f4:	ldr	r3, [fp, #-12]
   143f8:	ldrb	r3, [r3]
   143fc:	cmp	r3, #0
   14400:	bne	142f8 <__assert_fail@plt+0x2db4>
   14404:	ldrb	r3, [fp, #-5]
   14408:	eor	r3, r3, #1
   1440c:	uxtb	r3, r3
   14410:	cmp	r3, #0
   14414:	beq	14438 <__assert_fail@plt+0x2ef4>
   14418:	movw	r0, #23356	; 0x5b3c
   1441c:	movt	r0, #3
   14420:	bl	113e8 <gettext@plt>
   14424:	mov	r3, r0
   14428:	mov	r2, r3
   1442c:	mov	r1, #0
   14430:	mov	r0, #1
   14434:	bl	11370 <error@plt>
   14438:	mvn	r3, #-2147483648	; 0x80000000
   1443c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14440:	mov	r1, #0
   14444:	mov	r0, #0
   14448:	bl	11430 <snprintf@plt>
   1444c:	str	r0, [fp, #-16]
   14450:	ldr	r3, [fp, #-16]
   14454:	cmp	r3, #0
   14458:	bge	14460 <__assert_fail@plt+0x2f1c>
   1445c:	bl	118c0 <__assert_fail@plt+0x37c>
   14460:	ldr	r3, [fp, #-16]
   14464:	mov	r0, r3
   14468:	sub	sp, fp, #4
   1446c:	ldr	fp, [sp]
   14470:	add	sp, sp, #4
   14474:	pop	{pc}		; (ldr pc, [sp], #4)
   14478:	str	r4, [sp, #-12]!
   1447c:	str	fp, [sp, #4]
   14480:	str	lr, [sp, #8]
   14484:	add	fp, sp, #8
   14488:	sub	sp, sp, #196	; 0xc4
   1448c:	str	r0, [fp, #-176]	; 0xffffff50
   14490:	str	r1, [fp, #-180]	; 0xffffff4c
   14494:	ldr	r3, [fp, #-180]	; 0xffffff4c
   14498:	ldr	r3, [r3]
   1449c:	mov	r0, r3
   144a0:	bl	154a4 <__assert_fail@plt+0x3f60>
   144a4:	movw	r1, #21980	; 0x55dc
   144a8:	movt	r1, #3
   144ac:	mov	r0, #6
   144b0:	bl	114a8 <setlocale@plt>
   144b4:	movw	r1, #23404	; 0x5b6c
   144b8:	movt	r1, #3
   144bc:	movw	r0, #22004	; 0x55f4
   144c0:	movt	r0, #3
   144c4:	bl	11508 <bindtextdomain@plt>
   144c8:	movw	r0, #22004	; 0x55f4
   144cc:	movt	r0, #3
   144d0:	bl	112ec <textdomain@plt>
   144d4:	movw	r0, #19736	; 0x4d18
   144d8:	movt	r0, #1
   144dc:	bl	35474 <__assert_fail@plt+0x23f30>
   144e0:	movw	r3, #29208	; 0x7218
   144e4:	movt	r3, #4
   144e8:	ldr	r2, [fp, #-180]	; 0xffffff4c
   144ec:	str	r2, [r3]
   144f0:	movw	r3, #29216	; 0x7220
   144f4:	movt	r3, #4
   144f8:	mov	r2, #0
   144fc:	str	r2, [r3]
   14500:	movw	r3, #29220	; 0x7224
   14504:	movt	r3, #4
   14508:	mov	r2, #0
   1450c:	str	r2, [r3]
   14510:	movw	r3, #29212	; 0x721c
   14514:	movt	r3, #4
   14518:	mov	r2, #0
   1451c:	strb	r2, [r3]
   14520:	movw	r3, #29213	; 0x721d
   14524:	movt	r3, #4
   14528:	mov	r2, #1
   1452c:	strb	r2, [r3]
   14530:	movw	r3, #29215	; 0x721f
   14534:	movt	r3, #4
   14538:	mov	r2, #0
   1453c:	strb	r2, [r3]
   14540:	movw	r3, #29176	; 0x71f8
   14544:	movt	r3, #4
   14548:	movw	r2, #23428	; 0x5b84
   1454c:	movt	r2, #3
   14550:	str	r2, [r3]
   14554:	b	1475c <__assert_fail@plt+0x3218>
   14558:	ldr	r3, [fp, #-20]	; 0xffffffec
   1455c:	cmp	r3, #107	; 0x6b
   14560:	beq	1463c <__assert_fail@plt+0x30f8>
   14564:	ldr	r3, [fp, #-20]	; 0xffffffec
   14568:	cmp	r3, #107	; 0x6b
   1456c:	bgt	145b4 <__assert_fail@plt+0x3070>
   14570:	ldr	r3, [fp, #-20]	; 0xffffffec
   14574:	cmn	r3, #2
   14578:	beq	146f4 <__assert_fail@plt+0x31b0>
   1457c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14580:	cmn	r3, #2
   14584:	bgt	14598 <__assert_fail@plt+0x3054>
   14588:	ldr	r3, [fp, #-20]	; 0xffffffec
   1458c:	cmn	r3, #3
   14590:	beq	146fc <__assert_fail@plt+0x31b8>
   14594:	b	14754 <__assert_fail@plt+0x3210>
   14598:	ldr	r3, [fp, #-20]	; 0xffffffec
   1459c:	cmp	r3, #98	; 0x62
   145a0:	beq	14620 <__assert_fail@plt+0x30dc>
   145a4:	ldr	r3, [fp, #-20]	; 0xffffffec
   145a8:	cmp	r3, #102	; 0x66
   145ac:	beq	14604 <__assert_fail@plt+0x30c0>
   145b0:	b	14754 <__assert_fail@plt+0x3210>
   145b4:	ldr	r3, [fp, #-20]	; 0xffffffec
   145b8:	cmp	r3, #115	; 0x73
   145bc:	beq	146b8 <__assert_fail@plt+0x3174>
   145c0:	ldr	r3, [fp, #-20]	; 0xffffffec
   145c4:	cmp	r3, #115	; 0x73
   145c8:	bgt	145e8 <__assert_fail@plt+0x30a4>
   145cc:	ldr	r3, [fp, #-20]	; 0xffffffec
   145d0:	cmp	r3, #110	; 0x6e
   145d4:	beq	14650 <__assert_fail@plt+0x310c>
   145d8:	ldr	r3, [fp, #-20]	; 0xffffffec
   145dc:	cmp	r3, #113	; 0x71
   145e0:	beq	146b8 <__assert_fail@plt+0x3174>
   145e4:	b	14754 <__assert_fail@plt+0x3210>
   145e8:	ldr	r3, [fp, #-20]	; 0xffffffec
   145ec:	cmp	r3, #122	; 0x7a
   145f0:	beq	146cc <__assert_fail@plt+0x3188>
   145f4:	ldr	r3, [fp, #-20]	; 0xffffffec
   145f8:	cmp	r3, #256	; 0x100
   145fc:	beq	146e0 <__assert_fail@plt+0x319c>
   14600:	b	14754 <__assert_fail@plt+0x3210>
   14604:	movw	r3, #29128	; 0x71c8
   14608:	movt	r3, #4
   1460c:	ldr	r2, [r3]
   14610:	movw	r3, #29176	; 0x71f8
   14614:	movt	r3, #4
   14618:	str	r2, [r3]
   1461c:	b	1475c <__assert_fail@plt+0x3218>
   14620:	movw	r3, #29128	; 0x71c8
   14624:	movt	r3, #4
   14628:	ldr	r2, [r3]
   1462c:	movw	r3, #29180	; 0x71fc
   14630:	movt	r3, #4
   14634:	str	r2, [r3]
   14638:	b	1475c <__assert_fail@plt+0x3218>
   1463c:	movw	r3, #29213	; 0x721d
   14640:	movt	r3, #4
   14644:	mov	r2, #0
   14648:	strb	r2, [r3]
   1464c:	b	1475c <__assert_fail@plt+0x3218>
   14650:	movw	r3, #29128	; 0x71c8
   14654:	movt	r3, #4
   14658:	ldr	r4, [r3]
   1465c:	movw	r0, #23432	; 0x5b88
   14660:	movt	r0, #3
   14664:	bl	113e8 <gettext@plt>
   14668:	mov	r2, r0
   1466c:	mov	r3, #0
   14670:	str	r3, [sp, #16]
   14674:	str	r2, [sp, #12]
   14678:	movw	r3, #21980	; 0x55dc
   1467c:	movt	r3, #3
   14680:	str	r3, [sp, #8]
   14684:	mvn	r2, #-2147483648	; 0x80000000
   14688:	mov	r3, #0
   1468c:	strd	r2, [sp]
   14690:	mov	r2, #0
   14694:	mov	r3, #0
   14698:	mov	r0, r4
   1469c:	bl	32958 <__assert_fail@plt+0x21414>
   146a0:	mov	r2, r0
   146a4:	mov	r3, r1
   146a8:	movw	r3, #29024	; 0x7160
   146ac:	movt	r3, #4
   146b0:	str	r2, [r3]
   146b4:	b	1475c <__assert_fail@plt+0x3218>
   146b8:	movw	r3, #29212	; 0x721c
   146bc:	movt	r3, #4
   146c0:	mov	r2, #1
   146c4:	strb	r2, [r3]
   146c8:	b	1475c <__assert_fail@plt+0x3218>
   146cc:	movw	r3, #29214	; 0x721e
   146d0:	movt	r3, #4
   146d4:	mov	r2, #1
   146d8:	strb	r2, [r3]
   146dc:	b	1475c <__assert_fail@plt+0x3218>
   146e0:	movw	r3, #29215	; 0x721f
   146e4:	movt	r3, #4
   146e8:	mov	r2, #1
   146ec:	strb	r2, [r3]
   146f0:	b	1475c <__assert_fail@plt+0x3218>
   146f4:	mov	r0, #0
   146f8:	bl	14ad8 <__assert_fail@plt+0x3594>
   146fc:	movw	r3, #29124	; 0x71c4
   14700:	movt	r3, #4
   14704:	ldr	r0, [r3]
   14708:	movw	r3, #29028	; 0x7164
   1470c:	movt	r3, #4
   14710:	ldr	r2, [r3]
   14714:	mov	r3, #0
   14718:	str	r3, [sp, #8]
   1471c:	movw	r3, #23456	; 0x5ba0
   14720:	movt	r3, #3
   14724:	str	r3, [sp, #4]
   14728:	movw	r3, #23472	; 0x5bb0
   1472c:	movt	r3, #3
   14730:	str	r3, [sp]
   14734:	mov	r3, r2
   14738:	movw	r2, #21796	; 0x5524
   1473c:	movt	r2, #3
   14740:	movw	r1, #23448	; 0x5b98
   14744:	movt	r1, #3
   14748:	bl	31da8 <__assert_fail@plt+0x20864>
   1474c:	mov	r0, #0
   14750:	bl	113dc <exit@plt>
   14754:	mov	r0, #1
   14758:	bl	14ad8 <__assert_fail@plt+0x3594>
   1475c:	mov	r3, #0
   14760:	str	r3, [sp]
   14764:	movw	r3, #22276	; 0x5704
   14768:	movt	r3, #3
   1476c:	movw	r2, #23484	; 0x5bbc
   14770:	movt	r2, #3
   14774:	ldr	r1, [fp, #-180]	; 0xffffff4c
   14778:	ldr	r0, [fp, #-176]	; 0xffffff50
   1477c:	bl	113c4 <getopt_long@plt>
   14780:	str	r0, [fp, #-20]	; 0xffffffec
   14784:	ldr	r3, [fp, #-20]	; 0xffffffec
   14788:	cmn	r3, #1
   1478c:	bne	14558 <__assert_fail@plt+0x3014>
   14790:	movw	r3, #29112	; 0x71b8
   14794:	movt	r3, #4
   14798:	ldr	r3, [r3]
   1479c:	ldr	r2, [fp, #-176]	; 0xffffff50
   147a0:	sub	r3, r2, r3
   147a4:	cmp	r3, #1
   147a8:	bgt	14834 <__assert_fail@plt+0x32f0>
   147ac:	movw	r3, #29112	; 0x71b8
   147b0:	movt	r3, #4
   147b4:	ldr	r3, [r3]
   147b8:	ldr	r2, [fp, #-176]	; 0xffffff50
   147bc:	cmp	r2, r3
   147c0:	bgt	147e8 <__assert_fail@plt+0x32a4>
   147c4:	movw	r0, #23496	; 0x5bc8
   147c8:	movt	r0, #3
   147cc:	bl	113e8 <gettext@plt>
   147d0:	mov	r3, r0
   147d4:	mov	r2, r3
   147d8:	mov	r1, #0
   147dc:	mov	r0, #0
   147e0:	bl	11370 <error@plt>
   147e4:	b	1482c <__assert_fail@plt+0x32e8>
   147e8:	movw	r0, #23512	; 0x5bd8
   147ec:	movt	r0, #3
   147f0:	bl	113e8 <gettext@plt>
   147f4:	mov	r4, r0
   147f8:	ldr	r3, [fp, #-176]	; 0xffffff50
   147fc:	sub	r3, r3, #-1073741823	; 0xc0000001
   14800:	lsl	r3, r3, #2
   14804:	ldr	r2, [fp, #-180]	; 0xffffff4c
   14808:	add	r3, r2, r3
   1480c:	ldr	r3, [r3]
   14810:	mov	r0, r3
   14814:	bl	17e04 <__assert_fail@plt+0x68c0>
   14818:	mov	r3, r0
   1481c:	mov	r2, r4
   14820:	mov	r1, #0
   14824:	mov	r0, #0
   14828:	bl	11370 <error@plt>
   1482c:	mov	r0, #1
   14830:	bl	14ad8 <__assert_fail@plt+0x3594>
   14834:	movw	r3, #29176	; 0x71f8
   14838:	movt	r3, #4
   1483c:	ldr	r3, [r3]
   14840:	mov	r0, r3
   14844:	bl	113f4 <strlen@plt>
   14848:	mov	r3, r0
   1484c:	str	r3, [fp, #-24]	; 0xffffffe8
   14850:	movw	r3, #29180	; 0x71fc
   14854:	movt	r3, #4
   14858:	ldr	r3, [r3]
   1485c:	cmp	r3, #0
   14860:	beq	14880 <__assert_fail@plt+0x333c>
   14864:	movw	r3, #29180	; 0x71fc
   14868:	movt	r3, #4
   1486c:	ldr	r3, [r3]
   14870:	mov	r0, r3
   14874:	bl	142d0 <__assert_fail@plt+0x2d8c>
   14878:	mov	r3, r0
   1487c:	b	148a8 <__assert_fail@plt+0x3364>
   14880:	movw	r3, #29024	; 0x7160
   14884:	movt	r3, #4
   14888:	ldr	r3, [r3]
   1488c:	cmp	r3, #10
   14890:	bls	148a4 <__assert_fail@plt+0x3360>
   14894:	movw	r3, #29024	; 0x7160
   14898:	movt	r3, #4
   1489c:	ldr	r3, [r3]
   148a0:	b	148a8 <__assert_fail@plt+0x3364>
   148a4:	mov	r3, #11
   148a8:	str	r3, [fp, #-28]	; 0xffffffe4
   148ac:	ldr	r3, [fp, #-28]	; 0xffffffe4
   148b0:	add	r3, r3, #1
   148b4:	mov	r1, #0
   148b8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   148bc:	adds	r3, r2, r3
   148c0:	bvc	148c8 <__assert_fail@plt+0x3384>
   148c4:	mov	r1, #1
   148c8:	str	r3, [fp, #-32]	; 0xffffffe0
   148cc:	mov	r3, r1
   148d0:	and	r3, r3, #1
   148d4:	uxtb	r3, r3
   148d8:	cmp	r3, #0
   148dc:	beq	148e4 <__assert_fail@plt+0x33a0>
   148e0:	bl	118c0 <__assert_fail@plt+0x37c>
   148e4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   148e8:	mov	r0, r3
   148ec:	bl	31f68 <__assert_fail@plt+0x20a24>
   148f0:	mov	r3, r0
   148f4:	mov	r2, r3
   148f8:	movw	r3, #29172	; 0x71f4
   148fc:	movt	r3, #4
   14900:	str	r2, [r3]
   14904:	movw	r3, #29112	; 0x71b8
   14908:	movt	r3, #4
   1490c:	ldr	r2, [r3]
   14910:	add	r1, r2, #1
   14914:	movw	r3, #29112	; 0x71b8
   14918:	movt	r3, #4
   1491c:	str	r1, [r3]
   14920:	mov	r3, r2
   14924:	lsl	r3, r3, #2
   14928:	ldr	r2, [fp, #-180]	; 0xffffff4c
   1492c:	add	r3, r2, r3
   14930:	ldr	r3, [r3]
   14934:	mov	r0, r3
   14938:	bl	1264c <__assert_fail@plt+0x1108>
   1493c:	movw	r3, #29112	; 0x71b8
   14940:	movt	r3, #4
   14944:	ldr	r3, [r3]
   14948:	ldr	r2, [fp, #-180]	; 0xffffff4c
   1494c:	mov	r1, r3
   14950:	ldr	r0, [fp, #-176]	; 0xffffff50
   14954:	bl	13d20 <__assert_fail@plt+0x27dc>
   14958:	movw	r0, #29224	; 0x7228
   1495c:	movt	r0, #4
   14960:	bl	114b4 <sigemptyset@plt>
   14964:	mov	r3, #0
   14968:	str	r3, [fp, #-16]
   1496c:	b	149c8 <__assert_fail@plt+0x3484>
   14970:	movw	r3, #24804	; 0x60e4
   14974:	movt	r3, #3
   14978:	ldr	r2, [fp, #-16]
   1497c:	ldr	r3, [r3, r2, lsl #2]
   14980:	sub	r2, fp, #172	; 0xac
   14984:	mov	r1, #0
   14988:	mov	r0, r3
   1498c:	bl	11310 <sigaction@plt>
   14990:	ldr	r3, [fp, #-172]	; 0xffffff54
   14994:	cmp	r3, #1
   14998:	beq	149bc <__assert_fail@plt+0x3478>
   1499c:	movw	r3, #24804	; 0x60e4
   149a0:	movt	r3, #3
   149a4:	ldr	r2, [fp, #-16]
   149a8:	ldr	r3, [r3, r2, lsl #2]
   149ac:	mov	r1, r3
   149b0:	movw	r0, #29224	; 0x7228
   149b4:	movt	r0, #4
   149b8:	bl	11394 <sigaddset@plt>
   149bc:	ldr	r3, [fp, #-16]
   149c0:	add	r3, r3, #1
   149c4:	str	r3, [fp, #-16]
   149c8:	ldr	r3, [fp, #-16]
   149cc:	cmp	r3, #10
   149d0:	ble	14970 <__assert_fail@plt+0x342c>
   149d4:	movw	r3, #6388	; 0x18f4
   149d8:	movt	r3, #1
   149dc:	str	r3, [fp, #-172]	; 0xffffff54
   149e0:	movw	r3, #29224	; 0x7228
   149e4:	movt	r3, #4
   149e8:	sub	r0, fp, #168	; 0xa8
   149ec:	mov	r1, r3
   149f0:	mov	r3, #128	; 0x80
   149f4:	mov	r2, r3
   149f8:	bl	11250 <memcpy@plt>
   149fc:	mov	r3, #0
   14a00:	str	r3, [fp, #-40]	; 0xffffffd8
   14a04:	mov	r3, #0
   14a08:	str	r3, [fp, #-16]
   14a0c:	b	14a68 <__assert_fail@plt+0x3524>
   14a10:	movw	r3, #24804	; 0x60e4
   14a14:	movt	r3, #3
   14a18:	ldr	r2, [fp, #-16]
   14a1c:	ldr	r3, [r3, r2, lsl #2]
   14a20:	mov	r1, r3
   14a24:	movw	r0, #29224	; 0x7228
   14a28:	movt	r0, #4
   14a2c:	bl	112e0 <sigismember@plt>
   14a30:	mov	r3, r0
   14a34:	cmp	r3, #0
   14a38:	beq	14a5c <__assert_fail@plt+0x3518>
   14a3c:	movw	r3, #24804	; 0x60e4
   14a40:	movt	r3, #3
   14a44:	ldr	r2, [fp, #-16]
   14a48:	ldr	r3, [r3, r2, lsl #2]
   14a4c:	sub	r1, fp, #172	; 0xac
   14a50:	mov	r2, #0
   14a54:	mov	r0, r3
   14a58:	bl	11310 <sigaction@plt>
   14a5c:	ldr	r3, [fp, #-16]
   14a60:	add	r3, r3, #1
   14a64:	str	r3, [fp, #-16]
   14a68:	ldr	r3, [fp, #-16]
   14a6c:	cmp	r3, #10
   14a70:	ble	14a10 <__assert_fail@plt+0x34cc>
   14a74:	bl	12f8c <__assert_fail@plt+0x1a48>
   14a78:	mov	r0, #0
   14a7c:	bl	11538 <close@plt>
   14a80:	mov	r3, r0
   14a84:	cmp	r3, #0
   14a88:	beq	14abc <__assert_fail@plt+0x3578>
   14a8c:	bl	11418 <__errno_location@plt>
   14a90:	mov	r3, r0
   14a94:	ldr	r4, [r3]
   14a98:	movw	r0, #22476	; 0x57cc
   14a9c:	movt	r0, #3
   14aa0:	bl	113e8 <gettext@plt>
   14aa4:	mov	r3, r0
   14aa8:	mov	r2, r3
   14aac:	mov	r1, r4
   14ab0:	mov	r0, #0
   14ab4:	bl	11370 <error@plt>
   14ab8:	bl	118a8 <__assert_fail@plt+0x364>
   14abc:	mov	r3, #0
   14ac0:	mov	r0, r3
   14ac4:	sub	sp, fp, #8
   14ac8:	ldr	r4, [sp]
   14acc:	ldr	fp, [sp, #4]
   14ad0:	add	sp, sp, #8
   14ad4:	pop	{pc}		; (ldr pc, [sp], #4)
   14ad8:	str	r4, [sp, #-12]!
   14adc:	str	fp, [sp, #4]
   14ae0:	str	lr, [sp, #8]
   14ae4:	add	fp, sp, #8
   14ae8:	sub	sp, sp, #12
   14aec:	str	r0, [fp, #-16]
   14af0:	ldr	r3, [fp, #-16]
   14af4:	cmp	r3, #0
   14af8:	beq	14b34 <__assert_fail@plt+0x35f0>
   14afc:	movw	r3, #29120	; 0x71c0
   14b00:	movt	r3, #4
   14b04:	ldr	r4, [r3]
   14b08:	movw	r0, #23540	; 0x5bf4
   14b0c:	movt	r0, #3
   14b10:	bl	113e8 <gettext@plt>
   14b14:	mov	r1, r0
   14b18:	movw	r3, #29376	; 0x72c0
   14b1c:	movt	r3, #4
   14b20:	ldr	r3, [r3]
   14b24:	mov	r2, r3
   14b28:	mov	r0, r4
   14b2c:	bl	1140c <fprintf@plt>
   14b30:	b	14cac <__assert_fail@plt+0x3768>
   14b34:	movw	r0, #23580	; 0x5c1c
   14b38:	movt	r0, #3
   14b3c:	bl	113e8 <gettext@plt>
   14b40:	mov	r2, r0
   14b44:	movw	r3, #29376	; 0x72c0
   14b48:	movt	r3, #4
   14b4c:	ldr	r3, [r3]
   14b50:	mov	r1, r3
   14b54:	mov	r0, r2
   14b58:	bl	111e4 <printf@plt>
   14b5c:	movw	r0, #23620	; 0x5c44
   14b60:	movt	r0, #3
   14b64:	bl	113e8 <gettext@plt>
   14b68:	mov	r2, r0
   14b6c:	movw	r3, #29124	; 0x71c4
   14b70:	movt	r3, #4
   14b74:	ldr	r3, [r3]
   14b78:	mov	r1, r3
   14b7c:	mov	r0, r2
   14b80:	bl	1119c <fputs_unlocked@plt>
   14b84:	movw	r0, #23756	; 0x5ccc
   14b88:	movt	r0, #3
   14b8c:	bl	113e8 <gettext@plt>
   14b90:	mov	r2, r0
   14b94:	movw	r3, #29124	; 0x71c4
   14b98:	movt	r3, #4
   14b9c:	ldr	r3, [r3]
   14ba0:	mov	r1, r3
   14ba4:	mov	r0, r2
   14ba8:	bl	1119c <fputs_unlocked@plt>
   14bac:	bl	11640 <__assert_fail@plt+0xfc>
   14bb0:	movw	r0, #23792	; 0x5cf0
   14bb4:	movt	r0, #3
   14bb8:	bl	113e8 <gettext@plt>
   14bbc:	mov	r2, r0
   14bc0:	movw	r3, #29124	; 0x71c4
   14bc4:	movt	r3, #4
   14bc8:	ldr	r3, [r3]
   14bcc:	mov	r1, r3
   14bd0:	mov	r0, r2
   14bd4:	bl	1119c <fputs_unlocked@plt>
   14bd8:	movw	r0, #23980	; 0x5dac
   14bdc:	movt	r0, #3
   14be0:	bl	113e8 <gettext@plt>
   14be4:	mov	r2, r0
   14be8:	movw	r3, #29124	; 0x71c4
   14bec:	movt	r3, #4
   14bf0:	ldr	r3, [r3]
   14bf4:	mov	r1, r3
   14bf8:	mov	r0, r2
   14bfc:	bl	1119c <fputs_unlocked@plt>
   14c00:	movw	r0, #24048	; 0x5df0
   14c04:	movt	r0, #3
   14c08:	bl	113e8 <gettext@plt>
   14c0c:	mov	r2, r0
   14c10:	movw	r3, #29124	; 0x71c4
   14c14:	movt	r3, #4
   14c18:	ldr	r3, [r3]
   14c1c:	mov	r1, r3
   14c20:	mov	r0, r2
   14c24:	bl	1119c <fputs_unlocked@plt>
   14c28:	movw	r0, #24248	; 0x5eb8
   14c2c:	movt	r0, #3
   14c30:	bl	113e8 <gettext@plt>
   14c34:	mov	r2, r0
   14c38:	movw	r3, #29124	; 0x71c4
   14c3c:	movt	r3, #4
   14c40:	ldr	r3, [r3]
   14c44:	mov	r1, r3
   14c48:	mov	r0, r2
   14c4c:	bl	1119c <fputs_unlocked@plt>
   14c50:	movw	r0, #24296	; 0x5ee8
   14c54:	movt	r0, #3
   14c58:	bl	113e8 <gettext@plt>
   14c5c:	mov	r2, r0
   14c60:	movw	r3, #29124	; 0x71c4
   14c64:	movt	r3, #4
   14c68:	ldr	r3, [r3]
   14c6c:	mov	r1, r3
   14c70:	mov	r0, r2
   14c74:	bl	1119c <fputs_unlocked@plt>
   14c78:	movw	r0, #24352	; 0x5f20
   14c7c:	movt	r0, #3
   14c80:	bl	113e8 <gettext@plt>
   14c84:	mov	r2, r0
   14c88:	movw	r3, #29124	; 0x71c4
   14c8c:	movt	r3, #4
   14c90:	ldr	r3, [r3]
   14c94:	mov	r1, r3
   14c98:	mov	r0, r2
   14c9c:	bl	1119c <fputs_unlocked@plt>
   14ca0:	movw	r0, #23448	; 0x5b98
   14ca4:	movt	r0, #3
   14ca8:	bl	11688 <__assert_fail@plt+0x144>
   14cac:	ldr	r0, [fp, #-16]
   14cb0:	bl	113dc <exit@plt>
   14cb4:	push	{fp}		; (str fp, [sp, #-4]!)
   14cb8:	add	fp, sp, #0
   14cbc:	sub	sp, sp, #12
   14cc0:	str	r0, [fp, #-8]
   14cc4:	movw	r3, #29368	; 0x72b8
   14cc8:	movt	r3, #4
   14ccc:	ldr	r2, [fp, #-8]
   14cd0:	str	r2, [r3]
   14cd4:	nop	{0}
   14cd8:	add	sp, fp, #0
   14cdc:	pop	{fp}		; (ldr fp, [sp], #4)
   14ce0:	bx	lr
   14ce4:	push	{fp}		; (str fp, [sp, #-4]!)
   14ce8:	add	fp, sp, #0
   14cec:	sub	sp, sp, #12
   14cf0:	mov	r3, r0
   14cf4:	strb	r3, [fp, #-5]
   14cf8:	movw	r3, #29372	; 0x72bc
   14cfc:	movt	r3, #4
   14d00:	ldrb	r2, [fp, #-5]
   14d04:	strb	r2, [r3]
   14d08:	nop	{0}
   14d0c:	add	sp, fp, #0
   14d10:	pop	{fp}		; (ldr fp, [sp], #4)
   14d14:	bx	lr
   14d18:	str	r4, [sp, #-12]!
   14d1c:	str	fp, [sp, #4]
   14d20:	str	lr, [sp, #8]
   14d24:	add	fp, sp, #8
   14d28:	sub	sp, sp, #20
   14d2c:	movw	r3, #29124	; 0x71c4
   14d30:	movt	r3, #4
   14d34:	ldr	r3, [r3]
   14d38:	mov	r0, r3
   14d3c:	bl	33d94 <__assert_fail@plt+0x22850>
   14d40:	mov	r3, r0
   14d44:	cmp	r3, #0
   14d48:	beq	14e1c <__assert_fail@plt+0x38d8>
   14d4c:	movw	r3, #29372	; 0x72bc
   14d50:	movt	r3, #4
   14d54:	ldrb	r3, [r3]
   14d58:	eor	r3, r3, #1
   14d5c:	uxtb	r3, r3
   14d60:	cmp	r3, #0
   14d64:	bne	14d7c <__assert_fail@plt+0x3838>
   14d68:	bl	11418 <__errno_location@plt>
   14d6c:	mov	r3, r0
   14d70:	ldr	r3, [r3]
   14d74:	cmp	r3, #32
   14d78:	beq	14e1c <__assert_fail@plt+0x38d8>
   14d7c:	movw	r0, #24864	; 0x6120
   14d80:	movt	r0, #3
   14d84:	bl	113e8 <gettext@plt>
   14d88:	str	r0, [fp, #-16]
   14d8c:	movw	r3, #29368	; 0x72b8
   14d90:	movt	r3, #4
   14d94:	ldr	r3, [r3]
   14d98:	cmp	r3, #0
   14d9c:	beq	14de8 <__assert_fail@plt+0x38a4>
   14da0:	bl	11418 <__errno_location@plt>
   14da4:	mov	r3, r0
   14da8:	ldr	r4, [r3]
   14dac:	movw	r3, #29368	; 0x72b8
   14db0:	movt	r3, #4
   14db4:	ldr	r3, [r3]
   14db8:	mov	r0, r3
   14dbc:	bl	17a90 <__assert_fail@plt+0x654c>
   14dc0:	mov	r2, r0
   14dc4:	ldr	r3, [fp, #-16]
   14dc8:	str	r3, [sp]
   14dcc:	mov	r3, r2
   14dd0:	movw	r2, #24876	; 0x612c
   14dd4:	movt	r2, #3
   14dd8:	mov	r1, r4
   14ddc:	mov	r0, #0
   14de0:	bl	11370 <error@plt>
   14de4:	b	14e08 <__assert_fail@plt+0x38c4>
   14de8:	bl	11418 <__errno_location@plt>
   14dec:	mov	r3, r0
   14df0:	ldr	r1, [r3]
   14df4:	ldr	r3, [fp, #-16]
   14df8:	movw	r2, #24884	; 0x6134
   14dfc:	movt	r2, #3
   14e00:	mov	r0, #0
   14e04:	bl	11370 <error@plt>
   14e08:	movw	r3, #29032	; 0x7168
   14e0c:	movt	r3, #4
   14e10:	ldr	r3, [r3]
   14e14:	mov	r0, r3
   14e18:	bl	11244 <_exit@plt>
   14e1c:	movw	r3, #29120	; 0x71c0
   14e20:	movt	r3, #4
   14e24:	ldr	r3, [r3]
   14e28:	mov	r0, r3
   14e2c:	bl	33d94 <__assert_fail@plt+0x22850>
   14e30:	mov	r3, r0
   14e34:	cmp	r3, #0
   14e38:	beq	14e50 <__assert_fail@plt+0x390c>
   14e3c:	movw	r3, #29032	; 0x7168
   14e40:	movt	r3, #4
   14e44:	ldr	r3, [r3]
   14e48:	mov	r0, r3
   14e4c:	bl	11244 <_exit@plt>
   14e50:	nop	{0}
   14e54:	sub	sp, fp, #8
   14e58:	ldr	r4, [sp]
   14e5c:	ldr	fp, [sp, #4]
   14e60:	add	sp, sp, #8
   14e64:	pop	{pc}		; (ldr pc, [sp], #4)
   14e68:	str	fp, [sp, #-8]!
   14e6c:	str	lr, [sp, #4]
   14e70:	add	fp, sp, #4
   14e74:	sub	sp, sp, #32
   14e78:	str	r0, [fp, #-24]	; 0xffffffe8
   14e7c:	mov	r3, #0
   14e80:	str	r3, [fp, #-8]
   14e84:	mov	r3, #0
   14e88:	str	r3, [fp, #-12]
   14e8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14e90:	bl	11460 <fileno@plt>
   14e94:	str	r0, [fp, #-16]
   14e98:	ldr	r3, [fp, #-16]
   14e9c:	cmp	r3, #0
   14ea0:	bge	14eb4 <__assert_fail@plt+0x3970>
   14ea4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14ea8:	bl	11484 <fclose@plt>
   14eac:	mov	r3, r0
   14eb0:	b	14f58 <__assert_fail@plt+0x3a14>
   14eb4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14eb8:	bl	113ac <__freading@plt>
   14ebc:	mov	r3, r0
   14ec0:	cmp	r3, #0
   14ec4:	beq	14f00 <__assert_fail@plt+0x39bc>
   14ec8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14ecc:	bl	11460 <fileno@plt>
   14ed0:	mov	r1, r0
   14ed4:	mov	r3, #1
   14ed8:	str	r3, [sp]
   14edc:	mov	r2, #0
   14ee0:	mov	r3, #0
   14ee4:	mov	r0, r1
   14ee8:	bl	11328 <lseek64@plt>
   14eec:	mvn	r2, #0
   14ef0:	mvn	r3, #0
   14ef4:	cmp	r1, r3
   14ef8:	cmpeq	r0, r2
   14efc:	beq	14f24 <__assert_fail@plt+0x39e0>
   14f00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14f04:	bl	15068 <__assert_fail@plt+0x3b24>
   14f08:	mov	r3, r0
   14f0c:	cmp	r3, #0
   14f10:	beq	14f24 <__assert_fail@plt+0x39e0>
   14f14:	bl	11418 <__errno_location@plt>
   14f18:	mov	r3, r0
   14f1c:	ldr	r3, [r3]
   14f20:	str	r3, [fp, #-8]
   14f24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14f28:	bl	11484 <fclose@plt>
   14f2c:	str	r0, [fp, #-12]
   14f30:	ldr	r3, [fp, #-8]
   14f34:	cmp	r3, #0
   14f38:	beq	14f54 <__assert_fail@plt+0x3a10>
   14f3c:	bl	11418 <__errno_location@plt>
   14f40:	mov	r2, r0
   14f44:	ldr	r3, [fp, #-8]
   14f48:	str	r3, [r2]
   14f4c:	mvn	r3, #0
   14f50:	str	r3, [fp, #-12]
   14f54:	ldr	r3, [fp, #-12]
   14f58:	mov	r0, r3
   14f5c:	sub	sp, fp, #4
   14f60:	ldr	fp, [sp]
   14f64:	add	sp, sp, #4
   14f68:	pop	{pc}		; (ldr pc, [sp], #4)
   14f6c:	str	fp, [sp, #-8]!
   14f70:	str	lr, [sp, #4]
   14f74:	add	fp, sp, #4
   14f78:	sub	sp, sp, #32
   14f7c:	str	r0, [fp, #-24]	; 0xffffffe8
   14f80:	str	r1, [fp, #-28]	; 0xffffffe4
   14f84:	str	r2, [fp, #-32]	; 0xffffffe0
   14f88:	str	r3, [fp, #-36]	; 0xffffffdc
   14f8c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   14f90:	ldr	r1, [fp, #-32]	; 0xffffffe0
   14f94:	ldr	r0, [fp, #-28]	; 0xffffffe4
   14f98:	bl	1137c <open64@plt>
   14f9c:	str	r0, [fp, #-8]
   14fa0:	ldr	r2, [fp, #-8]
   14fa4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14fa8:	cmp	r2, r3
   14fac:	beq	14fbc <__assert_fail@plt+0x3a78>
   14fb0:	ldr	r3, [fp, #-8]
   14fb4:	cmp	r3, #0
   14fb8:	bge	14fc4 <__assert_fail@plt+0x3a80>
   14fbc:	ldr	r3, [fp, #-8]
   14fc0:	b	15000 <__assert_fail@plt+0x3abc>
   14fc4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14fc8:	ldr	r0, [fp, #-8]
   14fcc:	bl	112c8 <dup2@plt>
   14fd0:	str	r0, [fp, #-12]
   14fd4:	bl	11418 <__errno_location@plt>
   14fd8:	mov	r3, r0
   14fdc:	ldr	r3, [r3]
   14fe0:	str	r3, [fp, #-16]
   14fe4:	ldr	r0, [fp, #-8]
   14fe8:	bl	11538 <close@plt>
   14fec:	bl	11418 <__errno_location@plt>
   14ff0:	mov	r2, r0
   14ff4:	ldr	r3, [fp, #-16]
   14ff8:	str	r3, [r2]
   14ffc:	ldr	r3, [fp, #-12]
   15000:	mov	r0, r3
   15004:	sub	sp, fp, #4
   15008:	ldr	fp, [sp]
   1500c:	add	sp, sp, #4
   15010:	pop	{pc}		; (ldr pc, [sp], #4)
   15014:	str	fp, [sp, #-8]!
   15018:	str	lr, [sp, #4]
   1501c:	add	fp, sp, #4
   15020:	sub	sp, sp, #16
   15024:	str	r0, [fp, #-8]
   15028:	ldr	r3, [fp, #-8]
   1502c:	ldr	r3, [r3]
   15030:	and	r3, r3, #256	; 0x100
   15034:	cmp	r3, #0
   15038:	beq	15054 <__assert_fail@plt+0x3b10>
   1503c:	mov	r3, #1
   15040:	str	r3, [sp]
   15044:	mov	r2, #0
   15048:	mov	r3, #0
   1504c:	ldr	r0, [fp, #-8]
   15050:	bl	15290 <__assert_fail@plt+0x3d4c>
   15054:	nop	{0}
   15058:	sub	sp, fp, #4
   1505c:	ldr	fp, [sp]
   15060:	add	sp, sp, #4
   15064:	pop	{pc}		; (ldr pc, [sp], #4)
   15068:	str	fp, [sp, #-8]!
   1506c:	str	lr, [sp, #4]
   15070:	add	fp, sp, #4
   15074:	sub	sp, sp, #8
   15078:	str	r0, [fp, #-8]
   1507c:	ldr	r3, [fp, #-8]
   15080:	cmp	r3, #0
   15084:	beq	1509c <__assert_fail@plt+0x3b58>
   15088:	ldr	r0, [fp, #-8]
   1508c:	bl	113ac <__freading@plt>
   15090:	mov	r3, r0
   15094:	cmp	r3, #0
   15098:	bne	150ac <__assert_fail@plt+0x3b68>
   1509c:	ldr	r0, [fp, #-8]
   150a0:	bl	11208 <fflush@plt>
   150a4:	mov	r3, r0
   150a8:	b	150c0 <__assert_fail@plt+0x3b7c>
   150ac:	ldr	r0, [fp, #-8]
   150b0:	bl	15014 <__assert_fail@plt+0x3ad0>
   150b4:	ldr	r0, [fp, #-8]
   150b8:	bl	11208 <fflush@plt>
   150bc:	mov	r3, r0
   150c0:	mov	r0, r3
   150c4:	sub	sp, fp, #4
   150c8:	ldr	fp, [sp]
   150cc:	add	sp, sp, #4
   150d0:	pop	{pc}		; (ldr pc, [sp], #4)
   150d4:	str	fp, [sp, #-8]!
   150d8:	str	lr, [sp, #4]
   150dc:	add	fp, sp, #4
   150e0:	sub	sp, sp, #32
   150e4:	str	r0, [fp, #-32]	; 0xffffffe0
   150e8:	str	r1, [fp, #-36]	; 0xffffffdc
   150ec:	ldr	r1, [fp, #-36]	; 0xffffffdc
   150f0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   150f4:	bl	114fc <fopen64@plt>
   150f8:	str	r0, [fp, #-8]
   150fc:	ldr	r3, [fp, #-8]
   15100:	cmp	r3, #0
   15104:	beq	151d4 <__assert_fail@plt+0x3c90>
   15108:	ldr	r0, [fp, #-8]
   1510c:	bl	11460 <fileno@plt>
   15110:	str	r0, [fp, #-12]
   15114:	ldr	r3, [fp, #-12]
   15118:	cmp	r3, #0
   1511c:	blt	151d4 <__assert_fail@plt+0x3c90>
   15120:	ldr	r3, [fp, #-12]
   15124:	cmp	r3, #2
   15128:	bgt	151d4 <__assert_fail@plt+0x3c90>
   1512c:	ldr	r0, [fp, #-12]
   15130:	bl	3169c <__assert_fail@plt+0x20158>
   15134:	str	r0, [fp, #-16]
   15138:	ldr	r3, [fp, #-16]
   1513c:	cmp	r3, #0
   15140:	bge	15174 <__assert_fail@plt+0x3c30>
   15144:	bl	11418 <__errno_location@plt>
   15148:	mov	r3, r0
   1514c:	ldr	r3, [r3]
   15150:	str	r3, [fp, #-20]	; 0xffffffec
   15154:	ldr	r0, [fp, #-8]
   15158:	bl	14e68 <__assert_fail@plt+0x3924>
   1515c:	bl	11418 <__errno_location@plt>
   15160:	mov	r2, r0
   15164:	ldr	r3, [fp, #-20]	; 0xffffffec
   15168:	str	r3, [r2]
   1516c:	mov	r3, #0
   15170:	b	151d8 <__assert_fail@plt+0x3c94>
   15174:	ldr	r0, [fp, #-8]
   15178:	bl	14e68 <__assert_fail@plt+0x3924>
   1517c:	mov	r3, r0
   15180:	cmp	r3, #0
   15184:	bne	151a4 <__assert_fail@plt+0x3c60>
   15188:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1518c:	ldr	r0, [fp, #-16]
   15190:	bl	11184 <fdopen@plt>
   15194:	str	r0, [fp, #-8]
   15198:	ldr	r3, [fp, #-8]
   1519c:	cmp	r3, #0
   151a0:	bne	151d4 <__assert_fail@plt+0x3c90>
   151a4:	bl	11418 <__errno_location@plt>
   151a8:	mov	r3, r0
   151ac:	ldr	r3, [r3]
   151b0:	str	r3, [fp, #-24]	; 0xffffffe8
   151b4:	ldr	r0, [fp, #-16]
   151b8:	bl	11538 <close@plt>
   151bc:	bl	11418 <__errno_location@plt>
   151c0:	mov	r2, r0
   151c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   151c8:	str	r3, [r2]
   151cc:	mov	r3, #0
   151d0:	b	151d8 <__assert_fail@plt+0x3c94>
   151d4:	ldr	r3, [fp, #-8]
   151d8:	mov	r0, r3
   151dc:	sub	sp, fp, #4
   151e0:	ldr	fp, [sp]
   151e4:	add	sp, sp, #4
   151e8:	pop	{pc}		; (ldr pc, [sp], #4)
   151ec:	str	r4, [sp, #-12]!
   151f0:	str	fp, [sp, #4]
   151f4:	str	lr, [sp, #8]
   151f8:	add	fp, sp, #8
   151fc:	sub	sp, sp, #20
   15200:	str	r0, [fp, #-24]	; 0xffffffe8
   15204:	bl	11418 <__errno_location@plt>
   15208:	mov	r3, r0
   1520c:	ldr	r3, [r3]
   15210:	str	r3, [fp, #-20]	; 0xffffffec
   15214:	bl	11418 <__errno_location@plt>
   15218:	mov	r3, r0
   1521c:	ldr	r3, [r3]
   15220:	str	r3, [fp, #-16]
   15224:	bl	11418 <__errno_location@plt>
   15228:	mov	r2, r0
   1522c:	mov	r3, #0
   15230:	str	r3, [r2]
   15234:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15238:	bl	1122c <free@plt>
   1523c:	bl	11418 <__errno_location@plt>
   15240:	mov	r3, r0
   15244:	ldr	r3, [r3]
   15248:	cmp	r3, #0
   1524c:	moveq	r3, #1
   15250:	movne	r3, #0
   15254:	uxtb	r3, r3
   15258:	mov	r4, r3
   1525c:	bl	11418 <__errno_location@plt>
   15260:	mov	r2, r0
   15264:	lsl	r3, r4, #2
   15268:	sub	r1, fp, #12
   1526c:	add	r3, r1, r3
   15270:	ldr	r3, [r3, #-8]
   15274:	str	r3, [r2]
   15278:	nop	{0}
   1527c:	sub	sp, fp, #8
   15280:	ldr	r4, [sp]
   15284:	ldr	fp, [sp, #4]
   15288:	add	sp, sp, #8
   1528c:	pop	{pc}		; (ldr pc, [sp], #4)
   15290:	str	fp, [sp, #-8]!
   15294:	str	lr, [sp, #4]
   15298:	add	fp, sp, #4
   1529c:	sub	sp, sp, #32
   152a0:	str	r0, [fp, #-16]
   152a4:	strd	r2, [fp, #-28]	; 0xffffffe4
   152a8:	ldr	r3, [fp, #-16]
   152ac:	ldr	r2, [r3, #8]
   152b0:	ldr	r3, [fp, #-16]
   152b4:	ldr	r3, [r3, #4]
   152b8:	cmp	r2, r3
   152bc:	bne	15354 <__assert_fail@plt+0x3e10>
   152c0:	ldr	r3, [fp, #-16]
   152c4:	ldr	r2, [r3, #20]
   152c8:	ldr	r3, [fp, #-16]
   152cc:	ldr	r3, [r3, #16]
   152d0:	cmp	r2, r3
   152d4:	bne	15354 <__assert_fail@plt+0x3e10>
   152d8:	ldr	r3, [fp, #-16]
   152dc:	ldr	r3, [r3, #36]	; 0x24
   152e0:	cmp	r3, #0
   152e4:	bne	15354 <__assert_fail@plt+0x3e10>
   152e8:	ldr	r0, [fp, #-16]
   152ec:	bl	11460 <fileno@plt>
   152f0:	mov	r1, r0
   152f4:	ldr	r3, [fp, #4]
   152f8:	str	r3, [sp]
   152fc:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   15300:	mov	r0, r1
   15304:	bl	11328 <lseek64@plt>
   15308:	strd	r0, [fp, #-12]
   1530c:	ldrd	r2, [fp, #-12]
   15310:	mvn	r0, #0
   15314:	mvn	r1, #0
   15318:	cmp	r3, r1
   1531c:	cmpeq	r2, r0
   15320:	bne	1532c <__assert_fail@plt+0x3de8>
   15324:	mvn	r3, #0
   15328:	b	1536c <__assert_fail@plt+0x3e28>
   1532c:	ldr	r3, [fp, #-16]
   15330:	ldr	r3, [r3]
   15334:	bic	r2, r3, #16
   15338:	ldr	r3, [fp, #-16]
   1533c:	str	r2, [r3]
   15340:	ldr	r1, [fp, #-16]
   15344:	ldrd	r2, [fp, #-12]
   15348:	strd	r2, [r1, #80]	; 0x50
   1534c:	mov	r3, #0
   15350:	b	1536c <__assert_fail@plt+0x3e28>
   15354:	ldr	r3, [fp, #4]
   15358:	str	r3, [sp]
   1535c:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   15360:	ldr	r0, [fp, #-16]
   15364:	bl	11490 <fseeko64@plt>
   15368:	mov	r3, r0
   1536c:	mov	r0, r3
   15370:	sub	sp, fp, #4
   15374:	ldr	fp, [sp]
   15378:	add	sp, sp, #4
   1537c:	pop	{pc}		; (ldr pc, [sp], #4)
   15380:	str	fp, [sp, #-8]!
   15384:	str	lr, [sp, #4]
   15388:	add	fp, sp, #4
   1538c:	sub	sp, sp, #24
   15390:	strd	r0, [fp, #-20]	; 0xffffffec
   15394:	str	r2, [fp, #-24]	; 0xffffffe8
   15398:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1539c:	add	r3, r3, #20
   153a0:	str	r3, [fp, #-8]
   153a4:	ldr	r3, [fp, #-8]
   153a8:	mov	r2, #0
   153ac:	strb	r2, [r3]
   153b0:	ldrd	r2, [fp, #-20]	; 0xffffffec
   153b4:	cmp	r2, #0
   153b8:	sbcs	r3, r3, #0
   153bc:	bge	15434 <__assert_fail@plt+0x3ef0>
   153c0:	ldrd	r0, [fp, #-20]	; 0xffffffec
   153c4:	mov	r2, #10
   153c8:	mov	r3, #0
   153cc:	bl	35204 <__assert_fail@plt+0x23cc0>
   153d0:	uxtb	r3, r2
   153d4:	ldr	r2, [fp, #-8]
   153d8:	sub	r2, r2, #1
   153dc:	str	r2, [fp, #-8]
   153e0:	rsb	r3, r3, #48	; 0x30
   153e4:	uxtb	r2, r3
   153e8:	ldr	r3, [fp, #-8]
   153ec:	strb	r2, [r3]
   153f0:	ldrd	r0, [fp, #-20]	; 0xffffffec
   153f4:	mov	r2, #10
   153f8:	mov	r3, #0
   153fc:	bl	35204 <__assert_fail@plt+0x23cc0>
   15400:	mov	r2, r0
   15404:	mov	r3, r1
   15408:	strd	r2, [fp, #-20]	; 0xffffffec
   1540c:	ldrd	r2, [fp, #-20]	; 0xffffffec
   15410:	orrs	r3, r2, r3
   15414:	bne	153c0 <__assert_fail@plt+0x3e7c>
   15418:	ldr	r3, [fp, #-8]
   1541c:	sub	r3, r3, #1
   15420:	str	r3, [fp, #-8]
   15424:	ldr	r3, [fp, #-8]
   15428:	mov	r2, #45	; 0x2d
   1542c:	strb	r2, [r3]
   15430:	b	1548c <__assert_fail@plt+0x3f48>
   15434:	ldrd	r0, [fp, #-20]	; 0xffffffec
   15438:	mov	r2, #10
   1543c:	mov	r3, #0
   15440:	bl	35204 <__assert_fail@plt+0x23cc0>
   15444:	uxtb	r3, r2
   15448:	ldr	r2, [fp, #-8]
   1544c:	sub	r2, r2, #1
   15450:	str	r2, [fp, #-8]
   15454:	add	r3, r3, #48	; 0x30
   15458:	uxtb	r2, r3
   1545c:	ldr	r3, [fp, #-8]
   15460:	strb	r2, [r3]
   15464:	ldrd	r0, [fp, #-20]	; 0xffffffec
   15468:	mov	r2, #10
   1546c:	mov	r3, #0
   15470:	bl	35204 <__assert_fail@plt+0x23cc0>
   15474:	mov	r2, r0
   15478:	mov	r3, r1
   1547c:	strd	r2, [fp, #-20]	; 0xffffffec
   15480:	ldrd	r2, [fp, #-20]	; 0xffffffec
   15484:	orrs	r3, r2, r3
   15488:	bne	15434 <__assert_fail@plt+0x3ef0>
   1548c:	ldr	r3, [fp, #-8]
   15490:	mov	r0, r3
   15494:	sub	sp, fp, #4
   15498:	ldr	fp, [sp]
   1549c:	add	sp, sp, #4
   154a0:	pop	{pc}		; (ldr pc, [sp], #4)
   154a4:	str	fp, [sp, #-8]!
   154a8:	str	lr, [sp, #4]
   154ac:	add	fp, sp, #4
   154b0:	sub	sp, sp, #16
   154b4:	str	r0, [fp, #-16]
   154b8:	ldr	r3, [fp, #-16]
   154bc:	cmp	r3, #0
   154c0:	bne	154e8 <__assert_fail@plt+0x3fa4>
   154c4:	movw	r3, #29120	; 0x71c0
   154c8:	movt	r3, #4
   154cc:	ldr	r3, [r3]
   154d0:	mov	r2, #55	; 0x37
   154d4:	mov	r1, #1
   154d8:	movw	r0, #24888	; 0x6138
   154dc:	movt	r0, #3
   154e0:	bl	1131c <fwrite@plt>
   154e4:	bl	1152c <abort@plt>
   154e8:	mov	r1, #47	; 0x2f
   154ec:	ldr	r0, [fp, #-16]
   154f0:	bl	114cc <strrchr@plt>
   154f4:	str	r0, [fp, #-8]
   154f8:	ldr	r3, [fp, #-8]
   154fc:	cmp	r3, #0
   15500:	beq	15510 <__assert_fail@plt+0x3fcc>
   15504:	ldr	r3, [fp, #-8]
   15508:	add	r3, r3, #1
   1550c:	b	15514 <__assert_fail@plt+0x3fd0>
   15510:	ldr	r3, [fp, #-16]
   15514:	str	r3, [fp, #-12]
   15518:	ldr	r2, [fp, #-12]
   1551c:	ldr	r3, [fp, #-16]
   15520:	sub	r3, r2, r3
   15524:	cmp	r3, #6
   15528:	ble	15598 <__assert_fail@plt+0x4054>
   1552c:	ldr	r3, [fp, #-12]
   15530:	sub	r3, r3, #7
   15534:	mov	r2, #7
   15538:	movw	r1, #24944	; 0x6170
   1553c:	movt	r1, #3
   15540:	mov	r0, r3
   15544:	bl	11520 <strncmp@plt>
   15548:	mov	r3, r0
   1554c:	cmp	r3, #0
   15550:	bne	15598 <__assert_fail@plt+0x4054>
   15554:	ldr	r3, [fp, #-12]
   15558:	str	r3, [fp, #-16]
   1555c:	mov	r2, #3
   15560:	movw	r1, #24952	; 0x6178
   15564:	movt	r1, #3
   15568:	ldr	r0, [fp, #-12]
   1556c:	bl	11520 <strncmp@plt>
   15570:	mov	r3, r0
   15574:	cmp	r3, #0
   15578:	bne	15598 <__assert_fail@plt+0x4054>
   1557c:	ldr	r3, [fp, #-12]
   15580:	add	r3, r3, #3
   15584:	str	r3, [fp, #-16]
   15588:	movw	r3, #29104	; 0x71b0
   1558c:	movt	r3, #4
   15590:	ldr	r2, [fp, #-16]
   15594:	str	r2, [r3]
   15598:	movw	r3, #29376	; 0x72c0
   1559c:	movt	r3, #4
   155a0:	ldr	r2, [fp, #-16]
   155a4:	str	r2, [r3]
   155a8:	movw	r3, #29108	; 0x71b4
   155ac:	movt	r3, #4
   155b0:	ldr	r2, [fp, #-16]
   155b4:	str	r2, [r3]
   155b8:	nop	{0}
   155bc:	sub	sp, fp, #4
   155c0:	ldr	fp, [sp]
   155c4:	add	sp, sp, #4
   155c8:	pop	{pc}		; (ldr pc, [sp], #4)
   155cc:	str	fp, [sp, #-8]!
   155d0:	str	lr, [sp, #4]
   155d4:	add	fp, sp, #4
   155d8:	sub	sp, sp, #16
   155dc:	str	r0, [fp, #-16]
   155e0:	bl	11418 <__errno_location@plt>
   155e4:	mov	r3, r0
   155e8:	ldr	r3, [r3]
   155ec:	str	r3, [fp, #-8]
   155f0:	ldr	r3, [fp, #-16]
   155f4:	cmp	r3, #0
   155f8:	beq	15604 <__assert_fail@plt+0x40c0>
   155fc:	ldr	r3, [fp, #-16]
   15600:	b	1560c <__assert_fail@plt+0x40c8>
   15604:	movw	r3, #29380	; 0x72c4
   15608:	movt	r3, #4
   1560c:	mov	r1, #48	; 0x30
   15610:	mov	r0, r3
   15614:	bl	32648 <__assert_fail@plt+0x21104>
   15618:	mov	r3, r0
   1561c:	str	r3, [fp, #-12]
   15620:	bl	11418 <__errno_location@plt>
   15624:	mov	r2, r0
   15628:	ldr	r3, [fp, #-8]
   1562c:	str	r3, [r2]
   15630:	ldr	r3, [fp, #-12]
   15634:	mov	r0, r3
   15638:	sub	sp, fp, #4
   1563c:	ldr	fp, [sp]
   15640:	add	sp, sp, #4
   15644:	pop	{pc}		; (ldr pc, [sp], #4)
   15648:	push	{fp}		; (str fp, [sp, #-4]!)
   1564c:	add	fp, sp, #0
   15650:	sub	sp, sp, #12
   15654:	str	r0, [fp, #-8]
   15658:	ldr	r3, [fp, #-8]
   1565c:	cmp	r3, #0
   15660:	beq	1566c <__assert_fail@plt+0x4128>
   15664:	ldr	r3, [fp, #-8]
   15668:	b	15674 <__assert_fail@plt+0x4130>
   1566c:	movw	r3, #29380	; 0x72c4
   15670:	movt	r3, #4
   15674:	ldr	r3, [r3]
   15678:	mov	r0, r3
   1567c:	add	sp, fp, #0
   15680:	pop	{fp}		; (ldr fp, [sp], #4)
   15684:	bx	lr
   15688:	push	{fp}		; (str fp, [sp, #-4]!)
   1568c:	add	fp, sp, #0
   15690:	sub	sp, sp, #12
   15694:	str	r0, [fp, #-8]
   15698:	str	r1, [fp, #-12]
   1569c:	ldr	r3, [fp, #-8]
   156a0:	cmp	r3, #0
   156a4:	beq	156b0 <__assert_fail@plt+0x416c>
   156a8:	ldr	r3, [fp, #-8]
   156ac:	b	156b8 <__assert_fail@plt+0x4174>
   156b0:	movw	r3, #29380	; 0x72c4
   156b4:	movt	r3, #4
   156b8:	ldr	r2, [fp, #-12]
   156bc:	str	r2, [r3]
   156c0:	nop	{0}
   156c4:	add	sp, fp, #0
   156c8:	pop	{fp}		; (ldr fp, [sp], #4)
   156cc:	bx	lr
   156d0:	push	{fp}		; (str fp, [sp, #-4]!)
   156d4:	add	fp, sp, #0
   156d8:	sub	sp, sp, #36	; 0x24
   156dc:	str	r0, [fp, #-24]	; 0xffffffe8
   156e0:	mov	r3, r1
   156e4:	str	r2, [fp, #-32]	; 0xffffffe0
   156e8:	strb	r3, [fp, #-25]	; 0xffffffe7
   156ec:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   156f0:	strb	r3, [fp, #-5]
   156f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   156f8:	cmp	r3, #0
   156fc:	beq	15708 <__assert_fail@plt+0x41c4>
   15700:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15704:	b	15710 <__assert_fail@plt+0x41cc>
   15708:	movw	r3, #29380	; 0x72c4
   1570c:	movt	r3, #4
   15710:	add	r2, r3, #8
   15714:	ldrb	r3, [fp, #-5]
   15718:	lsr	r3, r3, #5
   1571c:	uxtb	r3, r3
   15720:	lsl	r3, r3, #2
   15724:	add	r3, r2, r3
   15728:	str	r3, [fp, #-12]
   1572c:	ldrb	r3, [fp, #-5]
   15730:	and	r3, r3, #31
   15734:	str	r3, [fp, #-16]
   15738:	ldr	r3, [fp, #-12]
   1573c:	ldr	r2, [r3]
   15740:	ldr	r3, [fp, #-16]
   15744:	lsr	r3, r2, r3
   15748:	and	r3, r3, #1
   1574c:	str	r3, [fp, #-20]	; 0xffffffec
   15750:	ldr	r3, [fp, #-12]
   15754:	ldr	r3, [r3]
   15758:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1575c:	and	r1, r2, #1
   15760:	ldr	r2, [fp, #-20]	; 0xffffffec
   15764:	eor	r1, r1, r2
   15768:	ldr	r2, [fp, #-16]
   1576c:	lsl	r2, r1, r2
   15770:	eor	r2, r2, r3
   15774:	ldr	r3, [fp, #-12]
   15778:	str	r2, [r3]
   1577c:	ldr	r3, [fp, #-20]	; 0xffffffec
   15780:	mov	r0, r3
   15784:	add	sp, fp, #0
   15788:	pop	{fp}		; (ldr fp, [sp], #4)
   1578c:	bx	lr
   15790:	push	{fp}		; (str fp, [sp, #-4]!)
   15794:	add	fp, sp, #0
   15798:	sub	sp, sp, #20
   1579c:	str	r0, [fp, #-16]
   157a0:	str	r1, [fp, #-20]	; 0xffffffec
   157a4:	ldr	r3, [fp, #-16]
   157a8:	cmp	r3, #0
   157ac:	bne	157bc <__assert_fail@plt+0x4278>
   157b0:	movw	r3, #29380	; 0x72c4
   157b4:	movt	r3, #4
   157b8:	str	r3, [fp, #-16]
   157bc:	ldr	r3, [fp, #-16]
   157c0:	ldr	r3, [r3, #4]
   157c4:	str	r3, [fp, #-8]
   157c8:	ldr	r3, [fp, #-16]
   157cc:	ldr	r2, [fp, #-20]	; 0xffffffec
   157d0:	str	r2, [r3, #4]
   157d4:	ldr	r3, [fp, #-8]
   157d8:	mov	r0, r3
   157dc:	add	sp, fp, #0
   157e0:	pop	{fp}		; (ldr fp, [sp], #4)
   157e4:	bx	lr
   157e8:	str	fp, [sp, #-8]!
   157ec:	str	lr, [sp, #4]
   157f0:	add	fp, sp, #4
   157f4:	sub	sp, sp, #16
   157f8:	str	r0, [fp, #-8]
   157fc:	str	r1, [fp, #-12]
   15800:	str	r2, [fp, #-16]
   15804:	ldr	r3, [fp, #-8]
   15808:	cmp	r3, #0
   1580c:	bne	1581c <__assert_fail@plt+0x42d8>
   15810:	movw	r3, #29380	; 0x72c4
   15814:	movt	r3, #4
   15818:	str	r3, [fp, #-8]
   1581c:	ldr	r3, [fp, #-8]
   15820:	mov	r2, #10
   15824:	str	r2, [r3]
   15828:	ldr	r3, [fp, #-12]
   1582c:	cmp	r3, #0
   15830:	beq	15840 <__assert_fail@plt+0x42fc>
   15834:	ldr	r3, [fp, #-16]
   15838:	cmp	r3, #0
   1583c:	bne	15844 <__assert_fail@plt+0x4300>
   15840:	bl	1152c <abort@plt>
   15844:	ldr	r3, [fp, #-8]
   15848:	ldr	r2, [fp, #-12]
   1584c:	str	r2, [r3, #40]	; 0x28
   15850:	ldr	r3, [fp, #-8]
   15854:	ldr	r2, [fp, #-16]
   15858:	str	r2, [r3, #44]	; 0x2c
   1585c:	nop	{0}
   15860:	sub	sp, fp, #4
   15864:	ldr	fp, [sp]
   15868:	add	sp, sp, #4
   1586c:	pop	{pc}		; (ldr pc, [sp], #4)
   15870:	str	fp, [sp, #-8]!
   15874:	str	lr, [sp, #4]
   15878:	add	fp, sp, #4
   1587c:	sub	sp, sp, #56	; 0x38
   15880:	str	r0, [fp, #-56]	; 0xffffffc8
   15884:	str	r1, [fp, #-60]	; 0xffffffc4
   15888:	sub	r1, fp, #52	; 0x34
   1588c:	mov	r2, #0
   15890:	mov	r3, #0
   15894:	strd	r2, [r1]
   15898:	strd	r2, [r1, #8]
   1589c:	strd	r2, [r1, #16]
   158a0:	strd	r2, [r1, #24]
   158a4:	strd	r2, [r1, #32]
   158a8:	strd	r2, [r1, #40]	; 0x28
   158ac:	ldr	r3, [fp, #-60]	; 0xffffffc4
   158b0:	cmp	r3, #10
   158b4:	bne	158bc <__assert_fail@plt+0x4378>
   158b8:	bl	1152c <abort@plt>
   158bc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   158c0:	str	r3, [fp, #-52]	; 0xffffffcc
   158c4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   158c8:	mov	r2, r3
   158cc:	sub	r3, fp, #52	; 0x34
   158d0:	ldrd	r0, [r3]
   158d4:	strd	r0, [r2]
   158d8:	ldrd	r0, [r3, #8]
   158dc:	strd	r0, [r2, #8]
   158e0:	ldrd	r0, [r3, #16]
   158e4:	strd	r0, [r2, #16]
   158e8:	ldrd	r0, [r3, #24]
   158ec:	strd	r0, [r2, #24]
   158f0:	ldrd	r0, [r3, #32]
   158f4:	strd	r0, [r2, #32]
   158f8:	ldrd	r0, [r3, #40]	; 0x28
   158fc:	strd	r0, [r2, #40]	; 0x28
   15900:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15904:	sub	sp, fp, #4
   15908:	ldr	fp, [sp]
   1590c:	add	sp, sp, #4
   15910:	pop	{pc}		; (ldr pc, [sp], #4)
   15914:	str	fp, [sp, #-8]!
   15918:	str	lr, [sp, #4]
   1591c:	add	fp, sp, #4
   15920:	sub	sp, sp, #16
   15924:	str	r0, [fp, #-16]
   15928:	str	r1, [fp, #-20]	; 0xffffffec
   1592c:	ldr	r0, [fp, #-16]
   15930:	bl	113e8 <gettext@plt>
   15934:	str	r0, [fp, #-8]
   15938:	ldr	r2, [fp, #-8]
   1593c:	ldr	r3, [fp, #-16]
   15940:	cmp	r2, r3
   15944:	beq	15950 <__assert_fail@plt+0x440c>
   15948:	ldr	r3, [fp, #-8]
   1594c:	b	15a00 <__assert_fail@plt+0x44bc>
   15950:	bl	348dc <__assert_fail@plt+0x23398>
   15954:	str	r0, [fp, #-12]
   15958:	movw	r1, #25144	; 0x6238
   1595c:	movt	r1, #3
   15960:	ldr	r0, [fp, #-12]
   15964:	bl	33ce8 <__assert_fail@plt+0x227a4>
   15968:	mov	r3, r0
   1596c:	cmp	r3, #0
   15970:	bne	1599c <__assert_fail@plt+0x4458>
   15974:	ldr	r3, [fp, #-16]
   15978:	ldrb	r3, [r3]
   1597c:	cmp	r3, #96	; 0x60
   15980:	bne	15990 <__assert_fail@plt+0x444c>
   15984:	movw	r3, #25152	; 0x6240
   15988:	movt	r3, #3
   1598c:	b	15a00 <__assert_fail@plt+0x44bc>
   15990:	movw	r3, #25156	; 0x6244
   15994:	movt	r3, #3
   15998:	b	15a00 <__assert_fail@plt+0x44bc>
   1599c:	movw	r1, #25160	; 0x6248
   159a0:	movt	r1, #3
   159a4:	ldr	r0, [fp, #-12]
   159a8:	bl	33ce8 <__assert_fail@plt+0x227a4>
   159ac:	mov	r3, r0
   159b0:	cmp	r3, #0
   159b4:	bne	159e0 <__assert_fail@plt+0x449c>
   159b8:	ldr	r3, [fp, #-16]
   159bc:	ldrb	r3, [r3]
   159c0:	cmp	r3, #96	; 0x60
   159c4:	bne	159d4 <__assert_fail@plt+0x4490>
   159c8:	movw	r3, #25168	; 0x6250
   159cc:	movt	r3, #3
   159d0:	b	15a00 <__assert_fail@plt+0x44bc>
   159d4:	movw	r3, #25172	; 0x6254
   159d8:	movt	r3, #3
   159dc:	b	15a00 <__assert_fail@plt+0x44bc>
   159e0:	ldr	r3, [fp, #-20]	; 0xffffffec
   159e4:	cmp	r3, #9
   159e8:	bne	159f8 <__assert_fail@plt+0x44b4>
   159ec:	movw	r3, #25176	; 0x6258
   159f0:	movt	r3, #3
   159f4:	b	15a00 <__assert_fail@plt+0x44bc>
   159f8:	movw	r3, #25180	; 0x625c
   159fc:	movt	r3, #3
   15a00:	mov	r0, r3
   15a04:	sub	sp, fp, #4
   15a08:	ldr	fp, [sp]
   15a0c:	add	sp, sp, #4
   15a10:	pop	{pc}		; (ldr pc, [sp], #4)
   15a14:	str	r4, [sp, #-12]!
   15a18:	str	fp, [sp, #4]
   15a1c:	str	lr, [sp, #8]
   15a20:	add	fp, sp, #8
   15a24:	sub	sp, sp, #116	; 0x74
   15a28:	str	r0, [fp, #-88]	; 0xffffffa8
   15a2c:	str	r1, [fp, #-92]	; 0xffffffa4
   15a30:	str	r2, [fp, #-96]	; 0xffffffa0
   15a34:	str	r3, [fp, #-100]	; 0xffffff9c
   15a38:	mov	r3, #0
   15a3c:	str	r3, [fp, #-20]	; 0xffffffec
   15a40:	mov	r3, #0
   15a44:	str	r3, [fp, #-24]	; 0xffffffe8
   15a48:	mov	r3, #0
   15a4c:	str	r3, [fp, #-28]	; 0xffffffe4
   15a50:	mov	r3, #0
   15a54:	str	r3, [fp, #-32]	; 0xffffffe0
   15a58:	mov	r3, #0
   15a5c:	strb	r3, [fp, #-33]	; 0xffffffdf
   15a60:	bl	11334 <__ctype_get_mb_cur_max@plt>
   15a64:	mov	r3, r0
   15a68:	cmp	r3, #1
   15a6c:	moveq	r3, #1
   15a70:	movne	r3, #0
   15a74:	strb	r3, [fp, #-57]	; 0xffffffc7
   15a78:	ldr	r3, [fp, #8]
   15a7c:	and	r3, r3, #2
   15a80:	cmp	r3, #0
   15a84:	movne	r3, #1
   15a88:	moveq	r3, #0
   15a8c:	strb	r3, [fp, #-34]	; 0xffffffde
   15a90:	mov	r3, #0
   15a94:	strb	r3, [fp, #-35]	; 0xffffffdd
   15a98:	mov	r3, #0
   15a9c:	strb	r3, [fp, #-36]	; 0xffffffdc
   15aa0:	mov	r3, #1
   15aa4:	strb	r3, [fp, #-37]	; 0xffffffdb
   15aa8:	ldr	r3, [fp, #4]
   15aac:	cmp	r3, #10
   15ab0:	ldrls	pc, [pc, r3, lsl #2]
   15ab4:	b	15ccc <__assert_fail@plt+0x4788>
   15ab8:	andeq	r5, r1, r0, asr #25
   15abc:	andeq	r5, r1, r8, lsr ip
   15ac0:	andeq	r5, r1, ip, asr ip
   15ac4:	andeq	r5, r1, r0, lsr ip
   15ac8:	andeq	r5, r1, r0, asr #24
   15acc:	strdeq	r5, [r1], -r4
   15ad0:	andeq	r5, r1, r4, ror #21
   15ad4:	andeq	r5, r1, r8, asr fp
   15ad8:	andeq	r5, r1, ip, ror #22
   15adc:	andeq	r5, r1, ip, ror #22
   15ae0:	andeq	r5, r1, ip, ror #22
   15ae4:	mov	r3, #5
   15ae8:	str	r3, [fp, #4]
   15aec:	mov	r3, #1
   15af0:	strb	r3, [fp, #-34]	; 0xffffffde
   15af4:	ldrb	r3, [fp, #-34]	; 0xffffffde
   15af8:	eor	r3, r3, #1
   15afc:	uxtb	r3, r3
   15b00:	cmp	r3, #0
   15b04:	beq	15b38 <__assert_fail@plt+0x45f4>
   15b08:	ldr	r2, [fp, #-20]	; 0xffffffec
   15b0c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   15b10:	cmp	r2, r3
   15b14:	bcs	15b2c <__assert_fail@plt+0x45e8>
   15b18:	ldr	r2, [fp, #-88]	; 0xffffffa8
   15b1c:	ldr	r3, [fp, #-20]	; 0xffffffec
   15b20:	add	r3, r2, r3
   15b24:	mov	r2, #34	; 0x22
   15b28:	strb	r2, [r3]
   15b2c:	ldr	r3, [fp, #-20]	; 0xffffffec
   15b30:	add	r3, r3, #1
   15b34:	str	r3, [fp, #-20]	; 0xffffffec
   15b38:	mov	r3, #1
   15b3c:	strb	r3, [fp, #-33]	; 0xffffffdf
   15b40:	movw	r3, #25176	; 0x6258
   15b44:	movt	r3, #3
   15b48:	str	r3, [fp, #-28]	; 0xffffffe4
   15b4c:	mov	r3, #1
   15b50:	str	r3, [fp, #-32]	; 0xffffffe0
   15b54:	b	15cd0 <__assert_fail@plt+0x478c>
   15b58:	mov	r3, #1
   15b5c:	strb	r3, [fp, #-33]	; 0xffffffdf
   15b60:	mov	r3, #0
   15b64:	strb	r3, [fp, #-34]	; 0xffffffde
   15b68:	b	15cd0 <__assert_fail@plt+0x478c>
   15b6c:	ldr	r3, [fp, #4]
   15b70:	cmp	r3, #10
   15b74:	beq	15ba0 <__assert_fail@plt+0x465c>
   15b78:	ldr	r1, [fp, #4]
   15b7c:	movw	r0, #25184	; 0x6260
   15b80:	movt	r0, #3
   15b84:	bl	15914 <__assert_fail@plt+0x43d0>
   15b88:	str	r0, [fp, #16]
   15b8c:	ldr	r1, [fp, #4]
   15b90:	movw	r0, #25180	; 0x625c
   15b94:	movt	r0, #3
   15b98:	bl	15914 <__assert_fail@plt+0x43d0>
   15b9c:	str	r0, [fp, #20]
   15ba0:	ldrb	r3, [fp, #-34]	; 0xffffffde
   15ba4:	eor	r3, r3, #1
   15ba8:	uxtb	r3, r3
   15bac:	cmp	r3, #0
   15bb0:	beq	15c10 <__assert_fail@plt+0x46cc>
   15bb4:	ldr	r3, [fp, #16]
   15bb8:	str	r3, [fp, #-28]	; 0xffffffe4
   15bbc:	b	15c00 <__assert_fail@plt+0x46bc>
   15bc0:	ldr	r2, [fp, #-20]	; 0xffffffec
   15bc4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   15bc8:	cmp	r2, r3
   15bcc:	bcs	15be8 <__assert_fail@plt+0x46a4>
   15bd0:	ldr	r2, [fp, #-88]	; 0xffffffa8
   15bd4:	ldr	r3, [fp, #-20]	; 0xffffffec
   15bd8:	add	r3, r2, r3
   15bdc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   15be0:	ldrb	r2, [r2]
   15be4:	strb	r2, [r3]
   15be8:	ldr	r3, [fp, #-20]	; 0xffffffec
   15bec:	add	r3, r3, #1
   15bf0:	str	r3, [fp, #-20]	; 0xffffffec
   15bf4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15bf8:	add	r3, r3, #1
   15bfc:	str	r3, [fp, #-28]	; 0xffffffe4
   15c00:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15c04:	ldrb	r3, [r3]
   15c08:	cmp	r3, #0
   15c0c:	bne	15bc0 <__assert_fail@plt+0x467c>
   15c10:	mov	r3, #1
   15c14:	strb	r3, [fp, #-33]	; 0xffffffdf
   15c18:	ldr	r3, [fp, #20]
   15c1c:	str	r3, [fp, #-28]	; 0xffffffe4
   15c20:	ldr	r0, [fp, #-28]	; 0xffffffe4
   15c24:	bl	113f4 <strlen@plt>
   15c28:	str	r0, [fp, #-32]	; 0xffffffe0
   15c2c:	b	15cd0 <__assert_fail@plt+0x478c>
   15c30:	mov	r3, #1
   15c34:	strb	r3, [fp, #-33]	; 0xffffffdf
   15c38:	mov	r3, #1
   15c3c:	strb	r3, [fp, #-34]	; 0xffffffde
   15c40:	ldrb	r3, [fp, #-34]	; 0xffffffde
   15c44:	eor	r3, r3, #1
   15c48:	uxtb	r3, r3
   15c4c:	cmp	r3, #0
   15c50:	beq	15c5c <__assert_fail@plt+0x4718>
   15c54:	mov	r3, #1
   15c58:	strb	r3, [fp, #-33]	; 0xffffffdf
   15c5c:	mov	r3, #2
   15c60:	str	r3, [fp, #4]
   15c64:	ldrb	r3, [fp, #-34]	; 0xffffffde
   15c68:	eor	r3, r3, #1
   15c6c:	uxtb	r3, r3
   15c70:	cmp	r3, #0
   15c74:	beq	15ca8 <__assert_fail@plt+0x4764>
   15c78:	ldr	r2, [fp, #-20]	; 0xffffffec
   15c7c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   15c80:	cmp	r2, r3
   15c84:	bcs	15c9c <__assert_fail@plt+0x4758>
   15c88:	ldr	r2, [fp, #-88]	; 0xffffffa8
   15c8c:	ldr	r3, [fp, #-20]	; 0xffffffec
   15c90:	add	r3, r2, r3
   15c94:	mov	r2, #39	; 0x27
   15c98:	strb	r2, [r3]
   15c9c:	ldr	r3, [fp, #-20]	; 0xffffffec
   15ca0:	add	r3, r3, #1
   15ca4:	str	r3, [fp, #-20]	; 0xffffffec
   15ca8:	movw	r3, #25180	; 0x625c
   15cac:	movt	r3, #3
   15cb0:	str	r3, [fp, #-28]	; 0xffffffe4
   15cb4:	mov	r3, #1
   15cb8:	str	r3, [fp, #-32]	; 0xffffffe0
   15cbc:	b	15cd0 <__assert_fail@plt+0x478c>
   15cc0:	mov	r3, #0
   15cc4:	strb	r3, [fp, #-34]	; 0xffffffde
   15cc8:	b	15cd0 <__assert_fail@plt+0x478c>
   15ccc:	bl	1152c <abort@plt>
   15cd0:	mov	r3, #0
   15cd4:	str	r3, [fp, #-16]
   15cd8:	b	16e74 <__assert_fail@plt+0x5930>
   15cdc:	mov	r3, #0
   15ce0:	strb	r3, [fp, #-40]	; 0xffffffd8
   15ce4:	mov	r3, #0
   15ce8:	strb	r3, [fp, #-41]	; 0xffffffd7
   15cec:	mov	r3, #0
   15cf0:	strb	r3, [fp, #-42]	; 0xffffffd6
   15cf4:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   15cf8:	cmp	r3, #0
   15cfc:	beq	15d98 <__assert_fail@plt+0x4854>
   15d00:	ldr	r3, [fp, #4]
   15d04:	cmp	r3, #2
   15d08:	beq	15d98 <__assert_fail@plt+0x4854>
   15d0c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15d10:	cmp	r3, #0
   15d14:	beq	15d98 <__assert_fail@plt+0x4854>
   15d18:	ldr	r2, [fp, #-16]
   15d1c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15d20:	add	r4, r2, r3
   15d24:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15d28:	cmn	r3, #1
   15d2c:	bne	15d50 <__assert_fail@plt+0x480c>
   15d30:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15d34:	cmp	r3, #1
   15d38:	bls	15d50 <__assert_fail@plt+0x480c>
   15d3c:	ldr	r0, [fp, #-96]	; 0xffffffa0
   15d40:	bl	113f4 <strlen@plt>
   15d44:	str	r0, [fp, #-100]	; 0xffffff9c
   15d48:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15d4c:	b	15d54 <__assert_fail@plt+0x4810>
   15d50:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15d54:	cmp	r3, r4
   15d58:	bcc	15d98 <__assert_fail@plt+0x4854>
   15d5c:	ldr	r2, [fp, #-96]	; 0xffffffa0
   15d60:	ldr	r3, [fp, #-16]
   15d64:	add	r3, r2, r3
   15d68:	ldr	r2, [fp, #-32]	; 0xffffffe0
   15d6c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15d70:	mov	r0, r3
   15d74:	bl	112a4 <memcmp@plt>
   15d78:	mov	r3, r0
   15d7c:	cmp	r3, #0
   15d80:	bne	15d98 <__assert_fail@plt+0x4854>
   15d84:	ldrb	r3, [fp, #-34]	; 0xffffffde
   15d88:	cmp	r3, #0
   15d8c:	bne	17030 <__assert_fail@plt+0x5aec>
   15d90:	mov	r3, #1
   15d94:	strb	r3, [fp, #-40]	; 0xffffffd8
   15d98:	ldr	r2, [fp, #-96]	; 0xffffffa0
   15d9c:	ldr	r3, [fp, #-16]
   15da0:	add	r3, r2, r3
   15da4:	ldrb	r3, [r3]
   15da8:	strb	r3, [fp, #-38]	; 0xffffffda
   15dac:	ldrb	r3, [fp, #-38]	; 0xffffffda
   15db0:	cmp	r3, #126	; 0x7e
   15db4:	ldrls	pc, [pc, r3, lsl #2]
   15db8:	b	165f0 <__assert_fail@plt+0x50ac>
   15dbc:			; <UNDEFINED> instruction: 0x00015fb8
   15dc0:	strdeq	r6, [r1], -r0
   15dc4:	strdeq	r6, [r1], -r0
   15dc8:	strdeq	r6, [r1], -r0
   15dcc:	strdeq	r6, [r1], -r0
   15dd0:	strdeq	r6, [r1], -r0
   15dd4:	strdeq	r6, [r1], -r0
   15dd8:	andeq	r6, r1, ip, lsr #7
   15ddc:			; <UNDEFINED> instruction: 0x000163b8
   15de0:	andeq	r6, r1, r8, ror #7
   15de4:	ldrdeq	r6, [r1], -r0
   15de8:	strdeq	r6, [r1], -r4
   15dec:	andeq	r6, r1, r4, asr #7
   15df0:	ldrdeq	r6, [r1], -ip
   15df4:	strdeq	r6, [r1], -r0
   15df8:	strdeq	r6, [r1], -r0
   15dfc:	strdeq	r6, [r1], -r0
   15e00:	strdeq	r6, [r1], -r0
   15e04:	strdeq	r6, [r1], -r0
   15e08:	strdeq	r6, [r1], -r0
   15e0c:	strdeq	r6, [r1], -r0
   15e10:	strdeq	r6, [r1], -r0
   15e14:	strdeq	r6, [r1], -r0
   15e18:	strdeq	r6, [r1], -r0
   15e1c:	strdeq	r6, [r1], -r0
   15e20:	strdeq	r6, [r1], -r0
   15e24:	strdeq	r6, [r1], -r0
   15e28:	strdeq	r6, [r1], -r0
   15e2c:	strdeq	r6, [r1], -r0
   15e30:	strdeq	r6, [r1], -r0
   15e34:	strdeq	r6, [r1], -r0
   15e38:	strdeq	r6, [r1], -r0
   15e3c:	ldrdeq	r6, [r1], -r4
   15e40:	ldrdeq	r6, [r1], -ip
   15e44:	ldrdeq	r6, [r1], -ip
   15e48:	andeq	r6, r1, r8, asr #9
   15e4c:	ldrdeq	r6, [r1], -ip
   15e50:	andeq	r6, r1, r4, ror #11
   15e54:	ldrdeq	r6, [r1], -ip
   15e58:	strdeq	r6, [r1], -r8
   15e5c:	ldrdeq	r6, [r1], -ip
   15e60:	ldrdeq	r6, [r1], -ip
   15e64:	ldrdeq	r6, [r1], -ip
   15e68:	andeq	r6, r1, r4, ror #11
   15e6c:	andeq	r6, r1, r4, ror #11
   15e70:	andeq	r6, r1, r4, ror #11
   15e74:	andeq	r6, r1, r4, ror #11
   15e78:	andeq	r6, r1, r4, ror #11
   15e7c:	andeq	r6, r1, r4, ror #11
   15e80:	andeq	r6, r1, r4, ror #11
   15e84:	andeq	r6, r1, r4, ror #11
   15e88:	andeq	r6, r1, r4, ror #11
   15e8c:	andeq	r6, r1, r4, ror #11
   15e90:	andeq	r6, r1, r4, ror #11
   15e94:	andeq	r6, r1, r4, ror #11
   15e98:	andeq	r6, r1, r4, ror #11
   15e9c:	andeq	r6, r1, r4, ror #11
   15ea0:	andeq	r6, r1, r4, ror #11
   15ea4:	andeq	r6, r1, r4, ror #11
   15ea8:	ldrdeq	r6, [r1], -ip
   15eac:	ldrdeq	r6, [r1], -ip
   15eb0:	ldrdeq	r6, [r1], -ip
   15eb4:	ldrdeq	r6, [r1], -ip
   15eb8:	muleq	r1, r8, r1
   15ebc:	strdeq	r6, [r1], -r0
   15ec0:	andeq	r6, r1, r4, ror #11
   15ec4:	andeq	r6, r1, r4, ror #11
   15ec8:	andeq	r6, r1, r4, ror #11
   15ecc:	andeq	r6, r1, r4, ror #11
   15ed0:	andeq	r6, r1, r4, ror #11
   15ed4:	andeq	r6, r1, r4, ror #11
   15ed8:	andeq	r6, r1, r4, ror #11
   15edc:	andeq	r6, r1, r4, ror #11
   15ee0:	andeq	r6, r1, r4, ror #11
   15ee4:	andeq	r6, r1, r4, ror #11
   15ee8:	andeq	r6, r1, r4, ror #11
   15eec:	andeq	r6, r1, r4, ror #11
   15ef0:	andeq	r6, r1, r4, ror #11
   15ef4:	andeq	r6, r1, r4, ror #11
   15ef8:	andeq	r6, r1, r4, ror #11
   15efc:	andeq	r6, r1, r4, ror #11
   15f00:	andeq	r6, r1, r4, ror #11
   15f04:	andeq	r6, r1, r4, ror #11
   15f08:	andeq	r6, r1, r4, ror #11
   15f0c:	andeq	r6, r1, r4, ror #11
   15f10:	andeq	r6, r1, r4, ror #11
   15f14:	andeq	r6, r1, r4, ror #11
   15f18:	andeq	r6, r1, r4, ror #11
   15f1c:	andeq	r6, r1, r4, ror #11
   15f20:	andeq	r6, r1, r4, ror #11
   15f24:	andeq	r6, r1, r4, ror #11
   15f28:	ldrdeq	r6, [r1], -ip
   15f2c:	andeq	r6, r1, r0, lsl #8
   15f30:	andeq	r6, r1, r4, ror #11
   15f34:	ldrdeq	r6, [r1], -ip
   15f38:	andeq	r6, r1, r4, ror #11
   15f3c:	ldrdeq	r6, [r1], -ip
   15f40:	andeq	r6, r1, r4, ror #11
   15f44:	andeq	r6, r1, r4, ror #11
   15f48:	andeq	r6, r1, r4, ror #11
   15f4c:	andeq	r6, r1, r4, ror #11
   15f50:	andeq	r6, r1, r4, ror #11
   15f54:	andeq	r6, r1, r4, ror #11
   15f58:	andeq	r6, r1, r4, ror #11
   15f5c:	andeq	r6, r1, r4, ror #11
   15f60:	andeq	r6, r1, r4, ror #11
   15f64:	andeq	r6, r1, r4, ror #11
   15f68:	andeq	r6, r1, r4, ror #11
   15f6c:	andeq	r6, r1, r4, ror #11
   15f70:	andeq	r6, r1, r4, ror #11
   15f74:	andeq	r6, r1, r4, ror #11
   15f78:	andeq	r6, r1, r4, ror #11
   15f7c:	andeq	r6, r1, r4, ror #11
   15f80:	andeq	r6, r1, r4, ror #11
   15f84:	andeq	r6, r1, r4, ror #11
   15f88:	andeq	r6, r1, r4, ror #11
   15f8c:	andeq	r6, r1, r4, ror #11
   15f90:	andeq	r6, r1, r4, ror #11
   15f94:	andeq	r6, r1, r4, ror #11
   15f98:	andeq	r6, r1, r4, ror #11
   15f9c:	andeq	r6, r1, r4, ror #11
   15fa0:	andeq	r6, r1, r4, ror #11
   15fa4:	andeq	r6, r1, r4, ror #11
   15fa8:	andeq	r6, r1, r0, lsl #9
   15fac:	ldrdeq	r6, [r1], -ip
   15fb0:	andeq	r6, r1, r0, lsl #9
   15fb4:	andeq	r6, r1, r8, asr #9
   15fb8:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   15fbc:	cmp	r3, #0
   15fc0:	beq	16184 <__assert_fail@plt+0x4c40>
   15fc4:	ldrb	r3, [fp, #-34]	; 0xffffffde
   15fc8:	cmp	r3, #0
   15fcc:	bne	17038 <__assert_fail@plt+0x5af4>
   15fd0:	mov	r3, #1
   15fd4:	strb	r3, [fp, #-41]	; 0xffffffd7
   15fd8:	ldr	r3, [fp, #4]
   15fdc:	cmp	r3, #2
   15fe0:	bne	16090 <__assert_fail@plt+0x4b4c>
   15fe4:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   15fe8:	eor	r3, r3, #1
   15fec:	uxtb	r3, r3
   15ff0:	cmp	r3, #0
   15ff4:	beq	16090 <__assert_fail@plt+0x4b4c>
   15ff8:	ldr	r2, [fp, #-20]	; 0xffffffec
   15ffc:	ldr	r3, [fp, #-92]	; 0xffffffa4
   16000:	cmp	r2, r3
   16004:	bcs	1601c <__assert_fail@plt+0x4ad8>
   16008:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1600c:	ldr	r3, [fp, #-20]	; 0xffffffec
   16010:	add	r3, r2, r3
   16014:	mov	r2, #39	; 0x27
   16018:	strb	r2, [r3]
   1601c:	ldr	r3, [fp, #-20]	; 0xffffffec
   16020:	add	r3, r3, #1
   16024:	str	r3, [fp, #-20]	; 0xffffffec
   16028:	ldr	r2, [fp, #-20]	; 0xffffffec
   1602c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   16030:	cmp	r2, r3
   16034:	bcs	1604c <__assert_fail@plt+0x4b08>
   16038:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1603c:	ldr	r3, [fp, #-20]	; 0xffffffec
   16040:	add	r3, r2, r3
   16044:	mov	r2, #36	; 0x24
   16048:	strb	r2, [r3]
   1604c:	ldr	r3, [fp, #-20]	; 0xffffffec
   16050:	add	r3, r3, #1
   16054:	str	r3, [fp, #-20]	; 0xffffffec
   16058:	ldr	r2, [fp, #-20]	; 0xffffffec
   1605c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   16060:	cmp	r2, r3
   16064:	bcs	1607c <__assert_fail@plt+0x4b38>
   16068:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1606c:	ldr	r3, [fp, #-20]	; 0xffffffec
   16070:	add	r3, r2, r3
   16074:	mov	r2, #39	; 0x27
   16078:	strb	r2, [r3]
   1607c:	ldr	r3, [fp, #-20]	; 0xffffffec
   16080:	add	r3, r3, #1
   16084:	str	r3, [fp, #-20]	; 0xffffffec
   16088:	mov	r3, #1
   1608c:	strb	r3, [fp, #-35]	; 0xffffffdd
   16090:	ldr	r2, [fp, #-20]	; 0xffffffec
   16094:	ldr	r3, [fp, #-92]	; 0xffffffa4
   16098:	cmp	r2, r3
   1609c:	bcs	160b4 <__assert_fail@plt+0x4b70>
   160a0:	ldr	r2, [fp, #-88]	; 0xffffffa8
   160a4:	ldr	r3, [fp, #-20]	; 0xffffffec
   160a8:	add	r3, r2, r3
   160ac:	mov	r2, #92	; 0x5c
   160b0:	strb	r2, [r3]
   160b4:	ldr	r3, [fp, #-20]	; 0xffffffec
   160b8:	add	r3, r3, #1
   160bc:	str	r3, [fp, #-20]	; 0xffffffec
   160c0:	ldr	r3, [fp, #4]
   160c4:	cmp	r3, #2
   160c8:	beq	16178 <__assert_fail@plt+0x4c34>
   160cc:	ldr	r3, [fp, #-16]
   160d0:	add	r3, r3, #1
   160d4:	ldr	r2, [fp, #-100]	; 0xffffff9c
   160d8:	cmp	r2, r3
   160dc:	bls	16178 <__assert_fail@plt+0x4c34>
   160e0:	ldr	r3, [fp, #-16]
   160e4:	add	r3, r3, #1
   160e8:	ldr	r2, [fp, #-96]	; 0xffffffa0
   160ec:	add	r3, r2, r3
   160f0:	ldrb	r3, [r3]
   160f4:	cmp	r3, #47	; 0x2f
   160f8:	bls	16178 <__assert_fail@plt+0x4c34>
   160fc:	ldr	r3, [fp, #-16]
   16100:	add	r3, r3, #1
   16104:	ldr	r2, [fp, #-96]	; 0xffffffa0
   16108:	add	r3, r2, r3
   1610c:	ldrb	r3, [r3]
   16110:	cmp	r3, #57	; 0x39
   16114:	bhi	16178 <__assert_fail@plt+0x4c34>
   16118:	ldr	r2, [fp, #-20]	; 0xffffffec
   1611c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   16120:	cmp	r2, r3
   16124:	bcs	1613c <__assert_fail@plt+0x4bf8>
   16128:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1612c:	ldr	r3, [fp, #-20]	; 0xffffffec
   16130:	add	r3, r2, r3
   16134:	mov	r2, #48	; 0x30
   16138:	strb	r2, [r3]
   1613c:	ldr	r3, [fp, #-20]	; 0xffffffec
   16140:	add	r3, r3, #1
   16144:	str	r3, [fp, #-20]	; 0xffffffec
   16148:	ldr	r2, [fp, #-20]	; 0xffffffec
   1614c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   16150:	cmp	r2, r3
   16154:	bcs	1616c <__assert_fail@plt+0x4c28>
   16158:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1615c:	ldr	r3, [fp, #-20]	; 0xffffffec
   16160:	add	r3, r2, r3
   16164:	mov	r2, #48	; 0x30
   16168:	strb	r2, [r3]
   1616c:	ldr	r3, [fp, #-20]	; 0xffffffec
   16170:	add	r3, r3, #1
   16174:	str	r3, [fp, #-20]	; 0xffffffec
   16178:	mov	r3, #48	; 0x30
   1617c:	strb	r3, [fp, #-38]	; 0xffffffda
   16180:	b	16bc0 <__assert_fail@plt+0x567c>
   16184:	ldr	r3, [fp, #8]
   16188:	and	r3, r3, #1
   1618c:	cmp	r3, #0
   16190:	beq	16bc0 <__assert_fail@plt+0x567c>
   16194:	b	16e68 <__assert_fail@plt+0x5924>
   16198:	ldr	r3, [fp, #4]
   1619c:	cmp	r3, #2
   161a0:	beq	161b4 <__assert_fail@plt+0x4c70>
   161a4:	ldr	r3, [fp, #4]
   161a8:	cmp	r3, #5
   161ac:	beq	161c4 <__assert_fail@plt+0x4c80>
   161b0:	b	163a8 <__assert_fail@plt+0x4e64>
   161b4:	ldrb	r3, [fp, #-34]	; 0xffffffde
   161b8:	cmp	r3, #0
   161bc:	beq	1639c <__assert_fail@plt+0x4e58>
   161c0:	b	1706c <__assert_fail@plt+0x5b28>
   161c4:	ldr	r3, [fp, #8]
   161c8:	and	r3, r3, #4
   161cc:	cmp	r3, #0
   161d0:	beq	163a4 <__assert_fail@plt+0x4e60>
   161d4:	ldr	r3, [fp, #-16]
   161d8:	add	r3, r3, #2
   161dc:	ldr	r2, [fp, #-100]	; 0xffffff9c
   161e0:	cmp	r2, r3
   161e4:	bls	163a4 <__assert_fail@plt+0x4e60>
   161e8:	ldr	r3, [fp, #-16]
   161ec:	add	r3, r3, #1
   161f0:	ldr	r2, [fp, #-96]	; 0xffffffa0
   161f4:	add	r3, r2, r3
   161f8:	ldrb	r3, [r3]
   161fc:	cmp	r3, #63	; 0x3f
   16200:	bne	163a4 <__assert_fail@plt+0x4e60>
   16204:	ldr	r3, [fp, #-16]
   16208:	add	r3, r3, #2
   1620c:	ldr	r2, [fp, #-96]	; 0xffffffa0
   16210:	add	r3, r2, r3
   16214:	ldrb	r3, [r3]
   16218:	sub	r3, r3, #33	; 0x21
   1621c:	cmp	r3, #29
   16220:	ldrls	pc, [pc, r3, lsl #2]
   16224:	b	16394 <__assert_fail@plt+0x4e50>
   16228:	andeq	r6, r1, r0, lsr #5
   1622c:	muleq	r1, r4, r3
   16230:	muleq	r1, r4, r3
   16234:	muleq	r1, r4, r3
   16238:	muleq	r1, r4, r3
   1623c:	muleq	r1, r4, r3
   16240:	andeq	r6, r1, r0, lsr #5
   16244:	andeq	r6, r1, r0, lsr #5
   16248:	andeq	r6, r1, r0, lsr #5
   1624c:	muleq	r1, r4, r3
   16250:	muleq	r1, r4, r3
   16254:	muleq	r1, r4, r3
   16258:	andeq	r6, r1, r0, lsr #5
   1625c:	muleq	r1, r4, r3
   16260:	andeq	r6, r1, r0, lsr #5
   16264:	muleq	r1, r4, r3
   16268:	muleq	r1, r4, r3
   1626c:	muleq	r1, r4, r3
   16270:	muleq	r1, r4, r3
   16274:	muleq	r1, r4, r3
   16278:	muleq	r1, r4, r3
   1627c:	muleq	r1, r4, r3
   16280:	muleq	r1, r4, r3
   16284:	muleq	r1, r4, r3
   16288:	muleq	r1, r4, r3
   1628c:	muleq	r1, r4, r3
   16290:	muleq	r1, r4, r3
   16294:	andeq	r6, r1, r0, lsr #5
   16298:	andeq	r6, r1, r0, lsr #5
   1629c:	andeq	r6, r1, r0, lsr #5
   162a0:	ldrb	r3, [fp, #-34]	; 0xffffffde
   162a4:	cmp	r3, #0
   162a8:	bne	17040 <__assert_fail@plt+0x5afc>
   162ac:	ldr	r3, [fp, #-16]
   162b0:	add	r3, r3, #2
   162b4:	ldr	r2, [fp, #-96]	; 0xffffffa0
   162b8:	add	r3, r2, r3
   162bc:	ldrb	r3, [r3]
   162c0:	strb	r3, [fp, #-38]	; 0xffffffda
   162c4:	ldr	r3, [fp, #-16]
   162c8:	add	r3, r3, #2
   162cc:	str	r3, [fp, #-16]
   162d0:	ldr	r2, [fp, #-20]	; 0xffffffec
   162d4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   162d8:	cmp	r2, r3
   162dc:	bcs	162f4 <__assert_fail@plt+0x4db0>
   162e0:	ldr	r2, [fp, #-88]	; 0xffffffa8
   162e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   162e8:	add	r3, r2, r3
   162ec:	mov	r2, #63	; 0x3f
   162f0:	strb	r2, [r3]
   162f4:	ldr	r3, [fp, #-20]	; 0xffffffec
   162f8:	add	r3, r3, #1
   162fc:	str	r3, [fp, #-20]	; 0xffffffec
   16300:	ldr	r2, [fp, #-20]	; 0xffffffec
   16304:	ldr	r3, [fp, #-92]	; 0xffffffa4
   16308:	cmp	r2, r3
   1630c:	bcs	16324 <__assert_fail@plt+0x4de0>
   16310:	ldr	r2, [fp, #-88]	; 0xffffffa8
   16314:	ldr	r3, [fp, #-20]	; 0xffffffec
   16318:	add	r3, r2, r3
   1631c:	mov	r2, #34	; 0x22
   16320:	strb	r2, [r3]
   16324:	ldr	r3, [fp, #-20]	; 0xffffffec
   16328:	add	r3, r3, #1
   1632c:	str	r3, [fp, #-20]	; 0xffffffec
   16330:	ldr	r2, [fp, #-20]	; 0xffffffec
   16334:	ldr	r3, [fp, #-92]	; 0xffffffa4
   16338:	cmp	r2, r3
   1633c:	bcs	16354 <__assert_fail@plt+0x4e10>
   16340:	ldr	r2, [fp, #-88]	; 0xffffffa8
   16344:	ldr	r3, [fp, #-20]	; 0xffffffec
   16348:	add	r3, r2, r3
   1634c:	mov	r2, #34	; 0x22
   16350:	strb	r2, [r3]
   16354:	ldr	r3, [fp, #-20]	; 0xffffffec
   16358:	add	r3, r3, #1
   1635c:	str	r3, [fp, #-20]	; 0xffffffec
   16360:	ldr	r2, [fp, #-20]	; 0xffffffec
   16364:	ldr	r3, [fp, #-92]	; 0xffffffa4
   16368:	cmp	r2, r3
   1636c:	bcs	16384 <__assert_fail@plt+0x4e40>
   16370:	ldr	r2, [fp, #-88]	; 0xffffffa8
   16374:	ldr	r3, [fp, #-20]	; 0xffffffec
   16378:	add	r3, r2, r3
   1637c:	mov	r2, #63	; 0x3f
   16380:	strb	r2, [r3]
   16384:	ldr	r3, [fp, #-20]	; 0xffffffec
   16388:	add	r3, r3, #1
   1638c:	str	r3, [fp, #-20]	; 0xffffffec
   16390:	b	16398 <__assert_fail@plt+0x4e54>
   16394:	nop	{0}
   16398:	b	163a4 <__assert_fail@plt+0x4e60>
   1639c:	nop	{0}
   163a0:	b	16bf4 <__assert_fail@plt+0x56b0>
   163a4:	nop	{0}
   163a8:	b	16bf4 <__assert_fail@plt+0x56b0>
   163ac:	mov	r3, #97	; 0x61
   163b0:	strb	r3, [fp, #-39]	; 0xffffffd9
   163b4:	b	16468 <__assert_fail@plt+0x4f24>
   163b8:	mov	r3, #98	; 0x62
   163bc:	strb	r3, [fp, #-39]	; 0xffffffd9
   163c0:	b	16468 <__assert_fail@plt+0x4f24>
   163c4:	mov	r3, #102	; 0x66
   163c8:	strb	r3, [fp, #-39]	; 0xffffffd9
   163cc:	b	16468 <__assert_fail@plt+0x4f24>
   163d0:	mov	r3, #110	; 0x6e
   163d4:	strb	r3, [fp, #-39]	; 0xffffffd9
   163d8:	b	1644c <__assert_fail@plt+0x4f08>
   163dc:	mov	r3, #114	; 0x72
   163e0:	strb	r3, [fp, #-39]	; 0xffffffd9
   163e4:	b	1644c <__assert_fail@plt+0x4f08>
   163e8:	mov	r3, #116	; 0x74
   163ec:	strb	r3, [fp, #-39]	; 0xffffffd9
   163f0:	b	1644c <__assert_fail@plt+0x4f08>
   163f4:	mov	r3, #118	; 0x76
   163f8:	strb	r3, [fp, #-39]	; 0xffffffd9
   163fc:	b	16468 <__assert_fail@plt+0x4f24>
   16400:	ldrb	r3, [fp, #-38]	; 0xffffffda
   16404:	strb	r3, [fp, #-39]	; 0xffffffd9
   16408:	ldr	r3, [fp, #4]
   1640c:	cmp	r3, #2
   16410:	bne	16424 <__assert_fail@plt+0x4ee0>
   16414:	ldrb	r3, [fp, #-34]	; 0xffffffde
   16418:	cmp	r3, #0
   1641c:	beq	16d80 <__assert_fail@plt+0x583c>
   16420:	b	1706c <__assert_fail@plt+0x5b28>
   16424:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   16428:	cmp	r3, #0
   1642c:	beq	16448 <__assert_fail@plt+0x4f04>
   16430:	ldrb	r3, [fp, #-34]	; 0xffffffde
   16434:	cmp	r3, #0
   16438:	beq	16448 <__assert_fail@plt+0x4f04>
   1643c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   16440:	cmp	r3, #0
   16444:	bne	16d88 <__assert_fail@plt+0x5844>
   16448:	nop	{0}
   1644c:	ldr	r3, [fp, #4]
   16450:	cmp	r3, #2
   16454:	bne	16464 <__assert_fail@plt+0x4f20>
   16458:	ldrb	r3, [fp, #-34]	; 0xffffffde
   1645c:	cmp	r3, #0
   16460:	bne	17048 <__assert_fail@plt+0x5b04>
   16464:	nop	{0}
   16468:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   1646c:	cmp	r3, #0
   16470:	beq	16bc8 <__assert_fail@plt+0x5684>
   16474:	ldrb	r3, [fp, #-39]	; 0xffffffd9
   16478:	strb	r3, [fp, #-38]	; 0xffffffda
   1647c:	b	16c80 <__assert_fail@plt+0x573c>
   16480:	ldr	r3, [fp, #-100]	; 0xffffff9c
   16484:	cmn	r3, #1
   16488:	bne	164ac <__assert_fail@plt+0x4f68>
   1648c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   16490:	add	r3, r3, #1
   16494:	ldrb	r3, [r3]
   16498:	cmp	r3, #0
   1649c:	movne	r3, #1
   164a0:	moveq	r3, #0
   164a4:	uxtb	r3, r3
   164a8:	b	164c0 <__assert_fail@plt+0x4f7c>
   164ac:	ldr	r3, [fp, #-100]	; 0xffffff9c
   164b0:	cmp	r3, #1
   164b4:	movne	r3, #1
   164b8:	moveq	r3, #0
   164bc:	uxtb	r3, r3
   164c0:	cmp	r3, #0
   164c4:	bne	16bd0 <__assert_fail@plt+0x568c>
   164c8:	ldr	r3, [fp, #-16]
   164cc:	cmp	r3, #0
   164d0:	bne	16bd8 <__assert_fail@plt+0x5694>
   164d4:	mov	r3, #1
   164d8:	strb	r3, [fp, #-42]	; 0xffffffd6
   164dc:	ldr	r3, [fp, #4]
   164e0:	cmp	r3, #2
   164e4:	bne	16be0 <__assert_fail@plt+0x569c>
   164e8:	ldrb	r3, [fp, #-34]	; 0xffffffde
   164ec:	cmp	r3, #0
   164f0:	beq	16be0 <__assert_fail@plt+0x569c>
   164f4:	b	1706c <__assert_fail@plt+0x5b28>
   164f8:	mov	r3, #1
   164fc:	strb	r3, [fp, #-36]	; 0xffffffdc
   16500:	mov	r3, #1
   16504:	strb	r3, [fp, #-42]	; 0xffffffd6
   16508:	ldr	r3, [fp, #4]
   1650c:	cmp	r3, #2
   16510:	bne	16be8 <__assert_fail@plt+0x56a4>
   16514:	ldrb	r3, [fp, #-34]	; 0xffffffde
   16518:	cmp	r3, #0
   1651c:	bne	17050 <__assert_fail@plt+0x5b0c>
   16520:	ldr	r3, [fp, #-92]	; 0xffffffa4
   16524:	cmp	r3, #0
   16528:	beq	16548 <__assert_fail@plt+0x5004>
   1652c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16530:	cmp	r3, #0
   16534:	bne	16548 <__assert_fail@plt+0x5004>
   16538:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1653c:	str	r3, [fp, #-24]	; 0xffffffe8
   16540:	mov	r3, #0
   16544:	str	r3, [fp, #-92]	; 0xffffffa4
   16548:	ldr	r2, [fp, #-20]	; 0xffffffec
   1654c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   16550:	cmp	r2, r3
   16554:	bcs	1656c <__assert_fail@plt+0x5028>
   16558:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1655c:	ldr	r3, [fp, #-20]	; 0xffffffec
   16560:	add	r3, r2, r3
   16564:	mov	r2, #39	; 0x27
   16568:	strb	r2, [r3]
   1656c:	ldr	r3, [fp, #-20]	; 0xffffffec
   16570:	add	r3, r3, #1
   16574:	str	r3, [fp, #-20]	; 0xffffffec
   16578:	ldr	r2, [fp, #-20]	; 0xffffffec
   1657c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   16580:	cmp	r2, r3
   16584:	bcs	1659c <__assert_fail@plt+0x5058>
   16588:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1658c:	ldr	r3, [fp, #-20]	; 0xffffffec
   16590:	add	r3, r2, r3
   16594:	mov	r2, #92	; 0x5c
   16598:	strb	r2, [r3]
   1659c:	ldr	r3, [fp, #-20]	; 0xffffffec
   165a0:	add	r3, r3, #1
   165a4:	str	r3, [fp, #-20]	; 0xffffffec
   165a8:	ldr	r2, [fp, #-20]	; 0xffffffec
   165ac:	ldr	r3, [fp, #-92]	; 0xffffffa4
   165b0:	cmp	r2, r3
   165b4:	bcs	165cc <__assert_fail@plt+0x5088>
   165b8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   165bc:	ldr	r3, [fp, #-20]	; 0xffffffec
   165c0:	add	r3, r2, r3
   165c4:	mov	r2, #39	; 0x27
   165c8:	strb	r2, [r3]
   165cc:	ldr	r3, [fp, #-20]	; 0xffffffec
   165d0:	add	r3, r3, #1
   165d4:	str	r3, [fp, #-20]	; 0xffffffec
   165d8:	mov	r3, #0
   165dc:	strb	r3, [fp, #-35]	; 0xffffffdd
   165e0:	b	16be8 <__assert_fail@plt+0x56a4>
   165e4:	mov	r3, #1
   165e8:	strb	r3, [fp, #-42]	; 0xffffffd6
   165ec:	b	16bf4 <__assert_fail@plt+0x56b0>
   165f0:	ldrb	r3, [fp, #-57]	; 0xffffffc7
   165f4:	cmp	r3, #0
   165f8:	beq	16638 <__assert_fail@plt+0x50f4>
   165fc:	mov	r3, #1
   16600:	str	r3, [fp, #-48]	; 0xffffffd0
   16604:	bl	113d0 <__ctype_b_loc@plt>
   16608:	mov	r3, r0
   1660c:	ldr	r2, [r3]
   16610:	ldrb	r3, [fp, #-38]	; 0xffffffda
   16614:	lsl	r3, r3, #1
   16618:	add	r3, r2, r3
   1661c:	ldrh	r3, [r3]
   16620:	and	r3, r3, #16384	; 0x4000
   16624:	cmp	r3, #0
   16628:	movne	r3, #1
   1662c:	moveq	r3, #0
   16630:	strb	r3, [fp, #-49]	; 0xffffffcf
   16634:	b	16884 <__assert_fail@plt+0x5340>
   16638:	sub	r3, fp, #76	; 0x4c
   1663c:	mov	r2, #8
   16640:	mov	r1, #0
   16644:	mov	r0, r3
   16648:	bl	11448 <memset@plt>
   1664c:	mov	r3, #0
   16650:	str	r3, [fp, #-48]	; 0xffffffd0
   16654:	mov	r3, #1
   16658:	strb	r3, [fp, #-49]	; 0xffffffcf
   1665c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   16660:	cmn	r3, #1
   16664:	bne	16674 <__assert_fail@plt+0x5130>
   16668:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1666c:	bl	113f4 <strlen@plt>
   16670:	str	r0, [fp, #-100]	; 0xffffff9c
   16674:	ldr	r2, [fp, #-16]
   16678:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1667c:	add	r3, r2, r3
   16680:	ldr	r2, [fp, #-96]	; 0xffffffa0
   16684:	add	r1, r2, r3
   16688:	ldr	r2, [fp, #-16]
   1668c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16690:	add	r3, r2, r3
   16694:	ldr	r2, [fp, #-100]	; 0xffffff9c
   16698:	sub	r2, r2, r3
   1669c:	sub	r3, fp, #76	; 0x4c
   166a0:	sub	r0, fp, #80	; 0x50
   166a4:	bl	34944 <__assert_fail@plt+0x23400>
   166a8:	str	r0, [fp, #-64]	; 0xffffffc0
   166ac:	ldr	r3, [fp, #-64]	; 0xffffffc0
   166b0:	cmp	r3, #0
   166b4:	beq	16878 <__assert_fail@plt+0x5334>
   166b8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   166bc:	cmn	r3, #1
   166c0:	bne	166d0 <__assert_fail@plt+0x518c>
   166c4:	mov	r3, #0
   166c8:	strb	r3, [fp, #-49]	; 0xffffffcf
   166cc:	b	16884 <__assert_fail@plt+0x5340>
   166d0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   166d4:	cmn	r3, #2
   166d8:	bne	16730 <__assert_fail@plt+0x51ec>
   166dc:	mov	r3, #0
   166e0:	strb	r3, [fp, #-49]	; 0xffffffcf
   166e4:	b	166f4 <__assert_fail@plt+0x51b0>
   166e8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   166ec:	add	r3, r3, #1
   166f0:	str	r3, [fp, #-48]	; 0xffffffd0
   166f4:	ldr	r2, [fp, #-16]
   166f8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   166fc:	add	r3, r2, r3
   16700:	ldr	r2, [fp, #-100]	; 0xffffff9c
   16704:	cmp	r2, r3
   16708:	bls	16880 <__assert_fail@plt+0x533c>
   1670c:	ldr	r2, [fp, #-16]
   16710:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16714:	add	r3, r2, r3
   16718:	ldr	r2, [fp, #-96]	; 0xffffffa0
   1671c:	add	r3, r2, r3
   16720:	ldrb	r3, [r3]
   16724:	cmp	r3, #0
   16728:	bne	166e8 <__assert_fail@plt+0x51a4>
   1672c:	b	16880 <__assert_fail@plt+0x533c>
   16730:	ldrb	r3, [fp, #-34]	; 0xffffffde
   16734:	cmp	r3, #0
   16738:	beq	1682c <__assert_fail@plt+0x52e8>
   1673c:	ldr	r3, [fp, #4]
   16740:	cmp	r3, #2
   16744:	bne	1682c <__assert_fail@plt+0x52e8>
   16748:	mov	r3, #1
   1674c:	str	r3, [fp, #-56]	; 0xffffffc8
   16750:	b	1681c <__assert_fail@plt+0x52d8>
   16754:	ldr	r2, [fp, #-16]
   16758:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1675c:	add	r2, r2, r3
   16760:	ldr	r3, [fp, #-56]	; 0xffffffc8
   16764:	add	r3, r2, r3
   16768:	ldr	r2, [fp, #-96]	; 0xffffffa0
   1676c:	add	r3, r2, r3
   16770:	ldrb	r3, [r3]
   16774:	sub	r3, r3, #91	; 0x5b
   16778:	cmp	r3, #33	; 0x21
   1677c:	ldrls	pc, [pc, r3, lsl #2]
   16780:	b	1680c <__assert_fail@plt+0x52c8>
   16784:	andeq	r7, r1, ip, rrx
   16788:	andeq	r7, r1, ip, rrx
   1678c:	andeq	r6, r1, ip, lsl #16
   16790:	andeq	r7, r1, ip, rrx
   16794:	andeq	r6, r1, ip, lsl #16
   16798:	andeq	r7, r1, ip, rrx
   1679c:	andeq	r6, r1, ip, lsl #16
   167a0:	andeq	r6, r1, ip, lsl #16
   167a4:	andeq	r6, r1, ip, lsl #16
   167a8:	andeq	r6, r1, ip, lsl #16
   167ac:	andeq	r6, r1, ip, lsl #16
   167b0:	andeq	r6, r1, ip, lsl #16
   167b4:	andeq	r6, r1, ip, lsl #16
   167b8:	andeq	r6, r1, ip, lsl #16
   167bc:	andeq	r6, r1, ip, lsl #16
   167c0:	andeq	r6, r1, ip, lsl #16
   167c4:	andeq	r6, r1, ip, lsl #16
   167c8:	andeq	r6, r1, ip, lsl #16
   167cc:	andeq	r6, r1, ip, lsl #16
   167d0:	andeq	r6, r1, ip, lsl #16
   167d4:	andeq	r6, r1, ip, lsl #16
   167d8:	andeq	r6, r1, ip, lsl #16
   167dc:	andeq	r6, r1, ip, lsl #16
   167e0:	andeq	r6, r1, ip, lsl #16
   167e4:	andeq	r6, r1, ip, lsl #16
   167e8:	andeq	r6, r1, ip, lsl #16
   167ec:	andeq	r6, r1, ip, lsl #16
   167f0:	andeq	r6, r1, ip, lsl #16
   167f4:	andeq	r6, r1, ip, lsl #16
   167f8:	andeq	r6, r1, ip, lsl #16
   167fc:	andeq	r6, r1, ip, lsl #16
   16800:	andeq	r6, r1, ip, lsl #16
   16804:	andeq	r6, r1, ip, lsl #16
   16808:	andeq	r7, r1, ip, rrx
   1680c:	nop	{0}
   16810:	ldr	r3, [fp, #-56]	; 0xffffffc8
   16814:	add	r3, r3, #1
   16818:	str	r3, [fp, #-56]	; 0xffffffc8
   1681c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   16820:	ldr	r3, [fp, #-64]	; 0xffffffc0
   16824:	cmp	r2, r3
   16828:	bcc	16754 <__assert_fail@plt+0x5210>
   1682c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   16830:	mov	r0, r3
   16834:	bl	11304 <iswprint@plt>
   16838:	mov	r3, r0
   1683c:	cmp	r3, #0
   16840:	bne	1684c <__assert_fail@plt+0x5308>
   16844:	mov	r3, #0
   16848:	strb	r3, [fp, #-49]	; 0xffffffcf
   1684c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   16850:	ldr	r3, [fp, #-64]	; 0xffffffc0
   16854:	add	r3, r2, r3
   16858:	str	r3, [fp, #-48]	; 0xffffffd0
   1685c:	sub	r3, fp, #76	; 0x4c
   16860:	mov	r0, r3
   16864:	bl	11280 <mbsinit@plt>
   16868:	mov	r3, r0
   1686c:	cmp	r3, #0
   16870:	beq	16674 <__assert_fail@plt+0x5130>
   16874:	b	16884 <__assert_fail@plt+0x5340>
   16878:	nop	{0}
   1687c:	b	16884 <__assert_fail@plt+0x5340>
   16880:	nop	{0}
   16884:	ldrb	r3, [fp, #-49]	; 0xffffffcf
   16888:	strb	r3, [fp, #-42]	; 0xffffffd6
   1688c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16890:	cmp	r3, #1
   16894:	bhi	168b8 <__assert_fail@plt+0x5374>
   16898:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   1689c:	cmp	r3, #0
   168a0:	beq	16bf0 <__assert_fail@plt+0x56ac>
   168a4:	ldrb	r3, [fp, #-49]	; 0xffffffcf
   168a8:	eor	r3, r3, #1
   168ac:	uxtb	r3, r3
   168b0:	cmp	r3, #0
   168b4:	beq	16bf0 <__assert_fail@plt+0x56ac>
   168b8:	ldr	r2, [fp, #-16]
   168bc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   168c0:	add	r3, r2, r3
   168c4:	str	r3, [fp, #-68]	; 0xffffffbc
   168c8:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   168cc:	cmp	r3, #0
   168d0:	beq	16a84 <__assert_fail@plt+0x5540>
   168d4:	ldrb	r3, [fp, #-49]	; 0xffffffcf
   168d8:	eor	r3, r3, #1
   168dc:	uxtb	r3, r3
   168e0:	cmp	r3, #0
   168e4:	beq	16a84 <__assert_fail@plt+0x5540>
   168e8:	ldrb	r3, [fp, #-34]	; 0xffffffde
   168ec:	cmp	r3, #0
   168f0:	bne	17058 <__assert_fail@plt+0x5b14>
   168f4:	mov	r3, #1
   168f8:	strb	r3, [fp, #-41]	; 0xffffffd7
   168fc:	ldr	r3, [fp, #4]
   16900:	cmp	r3, #2
   16904:	bne	169b4 <__assert_fail@plt+0x5470>
   16908:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   1690c:	eor	r3, r3, #1
   16910:	uxtb	r3, r3
   16914:	cmp	r3, #0
   16918:	beq	169b4 <__assert_fail@plt+0x5470>
   1691c:	ldr	r2, [fp, #-20]	; 0xffffffec
   16920:	ldr	r3, [fp, #-92]	; 0xffffffa4
   16924:	cmp	r2, r3
   16928:	bcs	16940 <__assert_fail@plt+0x53fc>
   1692c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   16930:	ldr	r3, [fp, #-20]	; 0xffffffec
   16934:	add	r3, r2, r3
   16938:	mov	r2, #39	; 0x27
   1693c:	strb	r2, [r3]
   16940:	ldr	r3, [fp, #-20]	; 0xffffffec
   16944:	add	r3, r3, #1
   16948:	str	r3, [fp, #-20]	; 0xffffffec
   1694c:	ldr	r2, [fp, #-20]	; 0xffffffec
   16950:	ldr	r3, [fp, #-92]	; 0xffffffa4
   16954:	cmp	r2, r3
   16958:	bcs	16970 <__assert_fail@plt+0x542c>
   1695c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   16960:	ldr	r3, [fp, #-20]	; 0xffffffec
   16964:	add	r3, r2, r3
   16968:	mov	r2, #36	; 0x24
   1696c:	strb	r2, [r3]
   16970:	ldr	r3, [fp, #-20]	; 0xffffffec
   16974:	add	r3, r3, #1
   16978:	str	r3, [fp, #-20]	; 0xffffffec
   1697c:	ldr	r2, [fp, #-20]	; 0xffffffec
   16980:	ldr	r3, [fp, #-92]	; 0xffffffa4
   16984:	cmp	r2, r3
   16988:	bcs	169a0 <__assert_fail@plt+0x545c>
   1698c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   16990:	ldr	r3, [fp, #-20]	; 0xffffffec
   16994:	add	r3, r2, r3
   16998:	mov	r2, #39	; 0x27
   1699c:	strb	r2, [r3]
   169a0:	ldr	r3, [fp, #-20]	; 0xffffffec
   169a4:	add	r3, r3, #1
   169a8:	str	r3, [fp, #-20]	; 0xffffffec
   169ac:	mov	r3, #1
   169b0:	strb	r3, [fp, #-35]	; 0xffffffdd
   169b4:	ldr	r2, [fp, #-20]	; 0xffffffec
   169b8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   169bc:	cmp	r2, r3
   169c0:	bcs	169d8 <__assert_fail@plt+0x5494>
   169c4:	ldr	r2, [fp, #-88]	; 0xffffffa8
   169c8:	ldr	r3, [fp, #-20]	; 0xffffffec
   169cc:	add	r3, r2, r3
   169d0:	mov	r2, #92	; 0x5c
   169d4:	strb	r2, [r3]
   169d8:	ldr	r3, [fp, #-20]	; 0xffffffec
   169dc:	add	r3, r3, #1
   169e0:	str	r3, [fp, #-20]	; 0xffffffec
   169e4:	ldr	r2, [fp, #-20]	; 0xffffffec
   169e8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   169ec:	cmp	r2, r3
   169f0:	bcs	16a18 <__assert_fail@plt+0x54d4>
   169f4:	ldrb	r3, [fp, #-38]	; 0xffffffda
   169f8:	lsr	r3, r3, #6
   169fc:	uxtb	r2, r3
   16a00:	ldr	r1, [fp, #-88]	; 0xffffffa8
   16a04:	ldr	r3, [fp, #-20]	; 0xffffffec
   16a08:	add	r3, r1, r3
   16a0c:	add	r2, r2, #48	; 0x30
   16a10:	uxtb	r2, r2
   16a14:	strb	r2, [r3]
   16a18:	ldr	r3, [fp, #-20]	; 0xffffffec
   16a1c:	add	r3, r3, #1
   16a20:	str	r3, [fp, #-20]	; 0xffffffec
   16a24:	ldr	r2, [fp, #-20]	; 0xffffffec
   16a28:	ldr	r3, [fp, #-92]	; 0xffffffa4
   16a2c:	cmp	r2, r3
   16a30:	bcs	16a60 <__assert_fail@plt+0x551c>
   16a34:	ldrb	r3, [fp, #-38]	; 0xffffffda
   16a38:	lsr	r3, r3, #3
   16a3c:	uxtb	r3, r3
   16a40:	and	r3, r3, #7
   16a44:	uxtb	r2, r3
   16a48:	ldr	r1, [fp, #-88]	; 0xffffffa8
   16a4c:	ldr	r3, [fp, #-20]	; 0xffffffec
   16a50:	add	r3, r1, r3
   16a54:	add	r2, r2, #48	; 0x30
   16a58:	uxtb	r2, r2
   16a5c:	strb	r2, [r3]
   16a60:	ldr	r3, [fp, #-20]	; 0xffffffec
   16a64:	add	r3, r3, #1
   16a68:	str	r3, [fp, #-20]	; 0xffffffec
   16a6c:	ldrb	r3, [fp, #-38]	; 0xffffffda
   16a70:	and	r3, r3, #7
   16a74:	uxtb	r3, r3
   16a78:	add	r3, r3, #48	; 0x30
   16a7c:	strb	r3, [fp, #-38]	; 0xffffffda
   16a80:	b	16ac8 <__assert_fail@plt+0x5584>
   16a84:	ldrb	r3, [fp, #-40]	; 0xffffffd8
   16a88:	cmp	r3, #0
   16a8c:	beq	16ac8 <__assert_fail@plt+0x5584>
   16a90:	ldr	r2, [fp, #-20]	; 0xffffffec
   16a94:	ldr	r3, [fp, #-92]	; 0xffffffa4
   16a98:	cmp	r2, r3
   16a9c:	bcs	16ab4 <__assert_fail@plt+0x5570>
   16aa0:	ldr	r2, [fp, #-88]	; 0xffffffa8
   16aa4:	ldr	r3, [fp, #-20]	; 0xffffffec
   16aa8:	add	r3, r2, r3
   16aac:	mov	r2, #92	; 0x5c
   16ab0:	strb	r2, [r3]
   16ab4:	ldr	r3, [fp, #-20]	; 0xffffffec
   16ab8:	add	r3, r3, #1
   16abc:	str	r3, [fp, #-20]	; 0xffffffec
   16ac0:	mov	r3, #0
   16ac4:	strb	r3, [fp, #-40]	; 0xffffffd8
   16ac8:	ldr	r3, [fp, #-16]
   16acc:	add	r3, r3, #1
   16ad0:	ldr	r2, [fp, #-68]	; 0xffffffbc
   16ad4:	cmp	r2, r3
   16ad8:	bls	16bb8 <__assert_fail@plt+0x5674>
   16adc:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   16ae0:	cmp	r3, #0
   16ae4:	beq	16b64 <__assert_fail@plt+0x5620>
   16ae8:	ldrb	r3, [fp, #-41]	; 0xffffffd7
   16aec:	eor	r3, r3, #1
   16af0:	uxtb	r3, r3
   16af4:	cmp	r3, #0
   16af8:	beq	16b64 <__assert_fail@plt+0x5620>
   16afc:	ldr	r2, [fp, #-20]	; 0xffffffec
   16b00:	ldr	r3, [fp, #-92]	; 0xffffffa4
   16b04:	cmp	r2, r3
   16b08:	bcs	16b20 <__assert_fail@plt+0x55dc>
   16b0c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   16b10:	ldr	r3, [fp, #-20]	; 0xffffffec
   16b14:	add	r3, r2, r3
   16b18:	mov	r2, #39	; 0x27
   16b1c:	strb	r2, [r3]
   16b20:	ldr	r3, [fp, #-20]	; 0xffffffec
   16b24:	add	r3, r3, #1
   16b28:	str	r3, [fp, #-20]	; 0xffffffec
   16b2c:	ldr	r2, [fp, #-20]	; 0xffffffec
   16b30:	ldr	r3, [fp, #-92]	; 0xffffffa4
   16b34:	cmp	r2, r3
   16b38:	bcs	16b50 <__assert_fail@plt+0x560c>
   16b3c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   16b40:	ldr	r3, [fp, #-20]	; 0xffffffec
   16b44:	add	r3, r2, r3
   16b48:	mov	r2, #39	; 0x27
   16b4c:	strb	r2, [r3]
   16b50:	ldr	r3, [fp, #-20]	; 0xffffffec
   16b54:	add	r3, r3, #1
   16b58:	str	r3, [fp, #-20]	; 0xffffffec
   16b5c:	mov	r3, #0
   16b60:	strb	r3, [fp, #-35]	; 0xffffffdd
   16b64:	ldr	r2, [fp, #-20]	; 0xffffffec
   16b68:	ldr	r3, [fp, #-92]	; 0xffffffa4
   16b6c:	cmp	r2, r3
   16b70:	bcs	16b88 <__assert_fail@plt+0x5644>
   16b74:	ldr	r2, [fp, #-88]	; 0xffffffa8
   16b78:	ldr	r3, [fp, #-20]	; 0xffffffec
   16b7c:	add	r3, r2, r3
   16b80:	ldrb	r2, [fp, #-38]	; 0xffffffda
   16b84:	strb	r2, [r3]
   16b88:	ldr	r3, [fp, #-20]	; 0xffffffec
   16b8c:	add	r3, r3, #1
   16b90:	str	r3, [fp, #-20]	; 0xffffffec
   16b94:	ldr	r3, [fp, #-16]
   16b98:	add	r3, r3, #1
   16b9c:	str	r3, [fp, #-16]
   16ba0:	ldr	r2, [fp, #-96]	; 0xffffffa0
   16ba4:	ldr	r3, [fp, #-16]
   16ba8:	add	r3, r2, r3
   16bac:	ldrb	r3, [r3]
   16bb0:	strb	r3, [fp, #-38]	; 0xffffffda
   16bb4:	b	168c8 <__assert_fail@plt+0x5384>
   16bb8:	nop	{0}
   16bbc:	b	16d94 <__assert_fail@plt+0x5850>
   16bc0:	nop	{0}
   16bc4:	b	16bf4 <__assert_fail@plt+0x56b0>
   16bc8:	nop	{0}
   16bcc:	b	16bf4 <__assert_fail@plt+0x56b0>
   16bd0:	nop	{0}
   16bd4:	b	16bf4 <__assert_fail@plt+0x56b0>
   16bd8:	nop	{0}
   16bdc:	b	16bf4 <__assert_fail@plt+0x56b0>
   16be0:	nop	{0}
   16be4:	b	16bf4 <__assert_fail@plt+0x56b0>
   16be8:	nop	{0}
   16bec:	b	16bf4 <__assert_fail@plt+0x56b0>
   16bf0:	nop	{0}
   16bf4:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   16bf8:	eor	r3, r3, #1
   16bfc:	uxtb	r3, r3
   16c00:	cmp	r3, #0
   16c04:	bne	16c14 <__assert_fail@plt+0x56d0>
   16c08:	ldr	r3, [fp, #4]
   16c0c:	cmp	r3, #2
   16c10:	bne	16c28 <__assert_fail@plt+0x56e4>
   16c14:	ldrb	r3, [fp, #-34]	; 0xffffffde
   16c18:	eor	r3, r3, #1
   16c1c:	uxtb	r3, r3
   16c20:	cmp	r3, #0
   16c24:	bne	16c68 <__assert_fail@plt+0x5724>
   16c28:	ldr	r3, [fp, #12]
   16c2c:	cmp	r3, #0
   16c30:	beq	16c68 <__assert_fail@plt+0x5724>
   16c34:	ldrb	r3, [fp, #-38]	; 0xffffffda
   16c38:	lsr	r3, r3, #5
   16c3c:	uxtb	r3, r3
   16c40:	lsl	r3, r3, #2
   16c44:	ldr	r2, [fp, #12]
   16c48:	add	r3, r2, r3
   16c4c:	ldr	r2, [r3]
   16c50:	ldrb	r3, [fp, #-38]	; 0xffffffda
   16c54:	and	r3, r3, #31
   16c58:	lsr	r3, r2, r3
   16c5c:	and	r3, r3, #1
   16c60:	cmp	r3, #0
   16c64:	bne	16c7c <__assert_fail@plt+0x5738>
   16c68:	ldrb	r3, [fp, #-40]	; 0xffffffd8
   16c6c:	eor	r3, r3, #1
   16c70:	uxtb	r3, r3
   16c74:	cmp	r3, #0
   16c78:	bne	16d90 <__assert_fail@plt+0x584c>
   16c7c:	nop	{0}
   16c80:	ldrb	r3, [fp, #-34]	; 0xffffffde
   16c84:	cmp	r3, #0
   16c88:	bne	17060 <__assert_fail@plt+0x5b1c>
   16c8c:	mov	r3, #1
   16c90:	strb	r3, [fp, #-41]	; 0xffffffd7
   16c94:	ldr	r3, [fp, #4]
   16c98:	cmp	r3, #2
   16c9c:	bne	16d4c <__assert_fail@plt+0x5808>
   16ca0:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   16ca4:	eor	r3, r3, #1
   16ca8:	uxtb	r3, r3
   16cac:	cmp	r3, #0
   16cb0:	beq	16d4c <__assert_fail@plt+0x5808>
   16cb4:	ldr	r2, [fp, #-20]	; 0xffffffec
   16cb8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   16cbc:	cmp	r2, r3
   16cc0:	bcs	16cd8 <__assert_fail@plt+0x5794>
   16cc4:	ldr	r2, [fp, #-88]	; 0xffffffa8
   16cc8:	ldr	r3, [fp, #-20]	; 0xffffffec
   16ccc:	add	r3, r2, r3
   16cd0:	mov	r2, #39	; 0x27
   16cd4:	strb	r2, [r3]
   16cd8:	ldr	r3, [fp, #-20]	; 0xffffffec
   16cdc:	add	r3, r3, #1
   16ce0:	str	r3, [fp, #-20]	; 0xffffffec
   16ce4:	ldr	r2, [fp, #-20]	; 0xffffffec
   16ce8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   16cec:	cmp	r2, r3
   16cf0:	bcs	16d08 <__assert_fail@plt+0x57c4>
   16cf4:	ldr	r2, [fp, #-88]	; 0xffffffa8
   16cf8:	ldr	r3, [fp, #-20]	; 0xffffffec
   16cfc:	add	r3, r2, r3
   16d00:	mov	r2, #36	; 0x24
   16d04:	strb	r2, [r3]
   16d08:	ldr	r3, [fp, #-20]	; 0xffffffec
   16d0c:	add	r3, r3, #1
   16d10:	str	r3, [fp, #-20]	; 0xffffffec
   16d14:	ldr	r2, [fp, #-20]	; 0xffffffec
   16d18:	ldr	r3, [fp, #-92]	; 0xffffffa4
   16d1c:	cmp	r2, r3
   16d20:	bcs	16d38 <__assert_fail@plt+0x57f4>
   16d24:	ldr	r2, [fp, #-88]	; 0xffffffa8
   16d28:	ldr	r3, [fp, #-20]	; 0xffffffec
   16d2c:	add	r3, r2, r3
   16d30:	mov	r2, #39	; 0x27
   16d34:	strb	r2, [r3]
   16d38:	ldr	r3, [fp, #-20]	; 0xffffffec
   16d3c:	add	r3, r3, #1
   16d40:	str	r3, [fp, #-20]	; 0xffffffec
   16d44:	mov	r3, #1
   16d48:	strb	r3, [fp, #-35]	; 0xffffffdd
   16d4c:	ldr	r2, [fp, #-20]	; 0xffffffec
   16d50:	ldr	r3, [fp, #-92]	; 0xffffffa4
   16d54:	cmp	r2, r3
   16d58:	bcs	16d70 <__assert_fail@plt+0x582c>
   16d5c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   16d60:	ldr	r3, [fp, #-20]	; 0xffffffec
   16d64:	add	r3, r2, r3
   16d68:	mov	r2, #92	; 0x5c
   16d6c:	strb	r2, [r3]
   16d70:	ldr	r3, [fp, #-20]	; 0xffffffec
   16d74:	add	r3, r3, #1
   16d78:	str	r3, [fp, #-20]	; 0xffffffec
   16d7c:	b	16d94 <__assert_fail@plt+0x5850>
   16d80:	nop	{0}
   16d84:	b	16d94 <__assert_fail@plt+0x5850>
   16d88:	nop	{0}
   16d8c:	b	16d94 <__assert_fail@plt+0x5850>
   16d90:	nop	{0}
   16d94:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   16d98:	cmp	r3, #0
   16d9c:	beq	16e1c <__assert_fail@plt+0x58d8>
   16da0:	ldrb	r3, [fp, #-41]	; 0xffffffd7
   16da4:	eor	r3, r3, #1
   16da8:	uxtb	r3, r3
   16dac:	cmp	r3, #0
   16db0:	beq	16e1c <__assert_fail@plt+0x58d8>
   16db4:	ldr	r2, [fp, #-20]	; 0xffffffec
   16db8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   16dbc:	cmp	r2, r3
   16dc0:	bcs	16dd8 <__assert_fail@plt+0x5894>
   16dc4:	ldr	r2, [fp, #-88]	; 0xffffffa8
   16dc8:	ldr	r3, [fp, #-20]	; 0xffffffec
   16dcc:	add	r3, r2, r3
   16dd0:	mov	r2, #39	; 0x27
   16dd4:	strb	r2, [r3]
   16dd8:	ldr	r3, [fp, #-20]	; 0xffffffec
   16ddc:	add	r3, r3, #1
   16de0:	str	r3, [fp, #-20]	; 0xffffffec
   16de4:	ldr	r2, [fp, #-20]	; 0xffffffec
   16de8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   16dec:	cmp	r2, r3
   16df0:	bcs	16e08 <__assert_fail@plt+0x58c4>
   16df4:	ldr	r2, [fp, #-88]	; 0xffffffa8
   16df8:	ldr	r3, [fp, #-20]	; 0xffffffec
   16dfc:	add	r3, r2, r3
   16e00:	mov	r2, #39	; 0x27
   16e04:	strb	r2, [r3]
   16e08:	ldr	r3, [fp, #-20]	; 0xffffffec
   16e0c:	add	r3, r3, #1
   16e10:	str	r3, [fp, #-20]	; 0xffffffec
   16e14:	mov	r3, #0
   16e18:	strb	r3, [fp, #-35]	; 0xffffffdd
   16e1c:	ldr	r2, [fp, #-20]	; 0xffffffec
   16e20:	ldr	r3, [fp, #-92]	; 0xffffffa4
   16e24:	cmp	r2, r3
   16e28:	bcs	16e40 <__assert_fail@plt+0x58fc>
   16e2c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   16e30:	ldr	r3, [fp, #-20]	; 0xffffffec
   16e34:	add	r3, r2, r3
   16e38:	ldrb	r2, [fp, #-38]	; 0xffffffda
   16e3c:	strb	r2, [r3]
   16e40:	ldr	r3, [fp, #-20]	; 0xffffffec
   16e44:	add	r3, r3, #1
   16e48:	str	r3, [fp, #-20]	; 0xffffffec
   16e4c:	ldrb	r3, [fp, #-42]	; 0xffffffd6
   16e50:	eor	r3, r3, #1
   16e54:	uxtb	r3, r3
   16e58:	cmp	r3, #0
   16e5c:	beq	16e68 <__assert_fail@plt+0x5924>
   16e60:	mov	r3, #0
   16e64:	strb	r3, [fp, #-37]	; 0xffffffdb
   16e68:	ldr	r3, [fp, #-16]
   16e6c:	add	r3, r3, #1
   16e70:	str	r3, [fp, #-16]
   16e74:	ldr	r3, [fp, #-100]	; 0xffffff9c
   16e78:	cmn	r3, #1
   16e7c:	bne	16ea4 <__assert_fail@plt+0x5960>
   16e80:	ldr	r2, [fp, #-96]	; 0xffffffa0
   16e84:	ldr	r3, [fp, #-16]
   16e88:	add	r3, r2, r3
   16e8c:	ldrb	r3, [r3]
   16e90:	cmp	r3, #0
   16e94:	movne	r3, #1
   16e98:	moveq	r3, #0
   16e9c:	uxtb	r3, r3
   16ea0:	b	16ebc <__assert_fail@plt+0x5978>
   16ea4:	ldr	r2, [fp, #-16]
   16ea8:	ldr	r3, [fp, #-100]	; 0xffffff9c
   16eac:	cmp	r2, r3
   16eb0:	movne	r3, #1
   16eb4:	moveq	r3, #0
   16eb8:	uxtb	r3, r3
   16ebc:	cmp	r3, #0
   16ec0:	bne	15cdc <__assert_fail@plt+0x4798>
   16ec4:	ldr	r3, [fp, #-20]	; 0xffffffec
   16ec8:	cmp	r3, #0
   16ecc:	bne	16ee8 <__assert_fail@plt+0x59a4>
   16ed0:	ldr	r3, [fp, #4]
   16ed4:	cmp	r3, #2
   16ed8:	bne	16ee8 <__assert_fail@plt+0x59a4>
   16edc:	ldrb	r3, [fp, #-34]	; 0xffffffde
   16ee0:	cmp	r3, #0
   16ee4:	bne	17068 <__assert_fail@plt+0x5b24>
   16ee8:	ldr	r3, [fp, #4]
   16eec:	cmp	r3, #2
   16ef0:	bne	16f90 <__assert_fail@plt+0x5a4c>
   16ef4:	ldrb	r3, [fp, #-34]	; 0xffffffde
   16ef8:	eor	r3, r3, #1
   16efc:	uxtb	r3, r3
   16f00:	cmp	r3, #0
   16f04:	beq	16f90 <__assert_fail@plt+0x5a4c>
   16f08:	ldrb	r3, [fp, #-36]	; 0xffffffdc
   16f0c:	cmp	r3, #0
   16f10:	beq	16f90 <__assert_fail@plt+0x5a4c>
   16f14:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   16f18:	cmp	r3, #0
   16f1c:	beq	16f64 <__assert_fail@plt+0x5a20>
   16f20:	ldr	r3, [fp, #20]
   16f24:	str	r3, [sp, #16]
   16f28:	ldr	r3, [fp, #16]
   16f2c:	str	r3, [sp, #12]
   16f30:	ldr	r3, [fp, #12]
   16f34:	str	r3, [sp, #8]
   16f38:	ldr	r3, [fp, #8]
   16f3c:	str	r3, [sp, #4]
   16f40:	mov	r3, #5
   16f44:	str	r3, [sp]
   16f48:	ldr	r3, [fp, #-100]	; 0xffffff9c
   16f4c:	ldr	r2, [fp, #-96]	; 0xffffffa0
   16f50:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16f54:	ldr	r0, [fp, #-88]	; 0xffffffa8
   16f58:	bl	15a14 <__assert_fail@plt+0x44d0>
   16f5c:	mov	r3, r0
   16f60:	b	170d0 <__assert_fail@plt+0x5b8c>
   16f64:	ldr	r3, [fp, #-92]	; 0xffffffa4
   16f68:	cmp	r3, #0
   16f6c:	bne	16f90 <__assert_fail@plt+0x5a4c>
   16f70:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16f74:	cmp	r3, #0
   16f78:	beq	16f90 <__assert_fail@plt+0x5a4c>
   16f7c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16f80:	str	r3, [fp, #-92]	; 0xffffffa4
   16f84:	mov	r3, #0
   16f88:	str	r3, [fp, #-20]	; 0xffffffec
   16f8c:	b	15aa8 <__assert_fail@plt+0x4564>
   16f90:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16f94:	cmp	r3, #0
   16f98:	beq	17004 <__assert_fail@plt+0x5ac0>
   16f9c:	ldrb	r3, [fp, #-34]	; 0xffffffde
   16fa0:	eor	r3, r3, #1
   16fa4:	uxtb	r3, r3
   16fa8:	cmp	r3, #0
   16fac:	beq	17004 <__assert_fail@plt+0x5ac0>
   16fb0:	b	16ff4 <__assert_fail@plt+0x5ab0>
   16fb4:	ldr	r2, [fp, #-20]	; 0xffffffec
   16fb8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   16fbc:	cmp	r2, r3
   16fc0:	bcs	16fdc <__assert_fail@plt+0x5a98>
   16fc4:	ldr	r2, [fp, #-88]	; 0xffffffa8
   16fc8:	ldr	r3, [fp, #-20]	; 0xffffffec
   16fcc:	add	r3, r2, r3
   16fd0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   16fd4:	ldrb	r2, [r2]
   16fd8:	strb	r2, [r3]
   16fdc:	ldr	r3, [fp, #-20]	; 0xffffffec
   16fe0:	add	r3, r3, #1
   16fe4:	str	r3, [fp, #-20]	; 0xffffffec
   16fe8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16fec:	add	r3, r3, #1
   16ff0:	str	r3, [fp, #-28]	; 0xffffffe4
   16ff4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16ff8:	ldrb	r3, [r3]
   16ffc:	cmp	r3, #0
   17000:	bne	16fb4 <__assert_fail@plt+0x5a70>
   17004:	ldr	r2, [fp, #-20]	; 0xffffffec
   17008:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1700c:	cmp	r2, r3
   17010:	bcs	17028 <__assert_fail@plt+0x5ae4>
   17014:	ldr	r2, [fp, #-88]	; 0xffffffa8
   17018:	ldr	r3, [fp, #-20]	; 0xffffffec
   1701c:	add	r3, r2, r3
   17020:	mov	r2, #0
   17024:	strb	r2, [r3]
   17028:	ldr	r3, [fp, #-20]	; 0xffffffec
   1702c:	b	170d0 <__assert_fail@plt+0x5b8c>
   17030:	nop	{0}
   17034:	b	1706c <__assert_fail@plt+0x5b28>
   17038:	nop	{0}
   1703c:	b	1706c <__assert_fail@plt+0x5b28>
   17040:	nop	{0}
   17044:	b	1706c <__assert_fail@plt+0x5b28>
   17048:	nop	{0}
   1704c:	b	1706c <__assert_fail@plt+0x5b28>
   17050:	nop	{0}
   17054:	b	1706c <__assert_fail@plt+0x5b28>
   17058:	nop	{0}
   1705c:	b	1706c <__assert_fail@plt+0x5b28>
   17060:	nop	{0}
   17064:	b	1706c <__assert_fail@plt+0x5b28>
   17068:	nop	{0}
   1706c:	ldr	r3, [fp, #4]
   17070:	cmp	r3, #2
   17074:	bne	1708c <__assert_fail@plt+0x5b48>
   17078:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   1707c:	cmp	r3, #0
   17080:	beq	1708c <__assert_fail@plt+0x5b48>
   17084:	mov	r3, #4
   17088:	str	r3, [fp, #4]
   1708c:	ldr	r3, [fp, #8]
   17090:	bic	r3, r3, #2
   17094:	ldr	r2, [fp, #20]
   17098:	str	r2, [sp, #16]
   1709c:	ldr	r2, [fp, #16]
   170a0:	str	r2, [sp, #12]
   170a4:	mov	r2, #0
   170a8:	str	r2, [sp, #8]
   170ac:	str	r3, [sp, #4]
   170b0:	ldr	r3, [fp, #4]
   170b4:	str	r3, [sp]
   170b8:	ldr	r3, [fp, #-100]	; 0xffffff9c
   170bc:	ldr	r2, [fp, #-96]	; 0xffffffa0
   170c0:	ldr	r1, [fp, #-92]	; 0xffffffa4
   170c4:	ldr	r0, [fp, #-88]	; 0xffffffa8
   170c8:	bl	15a14 <__assert_fail@plt+0x44d0>
   170cc:	mov	r3, r0
   170d0:	mov	r0, r3
   170d4:	sub	sp, fp, #8
   170d8:	ldr	r4, [sp]
   170dc:	ldr	fp, [sp, #4]
   170e0:	add	sp, sp, #8
   170e4:	pop	{pc}		; (ldr pc, [sp], #4)
   170e8:	str	fp, [sp, #-8]!
   170ec:	str	lr, [sp, #4]
   170f0:	add	fp, sp, #4
   170f4:	sub	sp, sp, #56	; 0x38
   170f8:	str	r0, [fp, #-24]	; 0xffffffe8
   170fc:	str	r1, [fp, #-28]	; 0xffffffe4
   17100:	str	r2, [fp, #-32]	; 0xffffffe0
   17104:	str	r3, [fp, #-36]	; 0xffffffdc
   17108:	ldr	r3, [fp, #4]
   1710c:	cmp	r3, #0
   17110:	beq	1711c <__assert_fail@plt+0x5bd8>
   17114:	ldr	r3, [fp, #4]
   17118:	b	17124 <__assert_fail@plt+0x5be0>
   1711c:	movw	r3, #29380	; 0x72c4
   17120:	movt	r3, #4
   17124:	str	r3, [fp, #-8]
   17128:	bl	11418 <__errno_location@plt>
   1712c:	mov	r3, r0
   17130:	ldr	r3, [r3]
   17134:	str	r3, [fp, #-12]
   17138:	ldr	r3, [fp, #-8]
   1713c:	ldr	r3, [r3]
   17140:	ldr	r2, [fp, #-8]
   17144:	ldr	r2, [r2, #4]
   17148:	ldr	r1, [fp, #-8]
   1714c:	add	r1, r1, #8
   17150:	ldr	r0, [fp, #-8]
   17154:	ldr	r0, [r0, #40]	; 0x28
   17158:	ldr	ip, [fp, #-8]
   1715c:	ldr	ip, [ip, #44]	; 0x2c
   17160:	str	ip, [sp, #16]
   17164:	str	r0, [sp, #12]
   17168:	str	r1, [sp, #8]
   1716c:	str	r2, [sp, #4]
   17170:	str	r3, [sp]
   17174:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17178:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1717c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   17180:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17184:	bl	15a14 <__assert_fail@plt+0x44d0>
   17188:	str	r0, [fp, #-16]
   1718c:	bl	11418 <__errno_location@plt>
   17190:	mov	r2, r0
   17194:	ldr	r3, [fp, #-12]
   17198:	str	r3, [r2]
   1719c:	ldr	r3, [fp, #-16]
   171a0:	mov	r0, r3
   171a4:	sub	sp, fp, #4
   171a8:	ldr	fp, [sp]
   171ac:	add	sp, sp, #4
   171b0:	pop	{pc}		; (ldr pc, [sp], #4)
   171b4:	str	fp, [sp, #-8]!
   171b8:	str	lr, [sp, #4]
   171bc:	add	fp, sp, #4
   171c0:	sub	sp, sp, #16
   171c4:	str	r0, [fp, #-8]
   171c8:	str	r1, [fp, #-12]
   171cc:	str	r2, [fp, #-16]
   171d0:	ldr	r3, [fp, #-16]
   171d4:	mov	r2, #0
   171d8:	ldr	r1, [fp, #-12]
   171dc:	ldr	r0, [fp, #-8]
   171e0:	bl	171fc <__assert_fail@plt+0x5cb8>
   171e4:	mov	r3, r0
   171e8:	mov	r0, r3
   171ec:	sub	sp, fp, #4
   171f0:	ldr	fp, [sp]
   171f4:	add	sp, sp, #4
   171f8:	pop	{pc}		; (ldr pc, [sp], #4)
   171fc:	str	fp, [sp, #-8]!
   17200:	str	lr, [sp, #4]
   17204:	add	fp, sp, #4
   17208:	sub	sp, sp, #64	; 0x40
   1720c:	str	r0, [fp, #-32]	; 0xffffffe0
   17210:	str	r1, [fp, #-36]	; 0xffffffdc
   17214:	str	r2, [fp, #-40]	; 0xffffffd8
   17218:	str	r3, [fp, #-44]	; 0xffffffd4
   1721c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   17220:	cmp	r3, #0
   17224:	beq	17230 <__assert_fail@plt+0x5cec>
   17228:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1722c:	b	17238 <__assert_fail@plt+0x5cf4>
   17230:	movw	r3, #29380	; 0x72c4
   17234:	movt	r3, #4
   17238:	str	r3, [fp, #-8]
   1723c:	bl	11418 <__errno_location@plt>
   17240:	mov	r3, r0
   17244:	ldr	r3, [r3]
   17248:	str	r3, [fp, #-12]
   1724c:	ldr	r3, [fp, #-8]
   17250:	ldr	r3, [r3, #4]
   17254:	ldr	r2, [fp, #-40]	; 0xffffffd8
   17258:	cmp	r2, #0
   1725c:	moveq	r2, #1
   17260:	movne	r2, #0
   17264:	uxtb	r2, r2
   17268:	orr	r3, r3, r2
   1726c:	str	r3, [fp, #-16]
   17270:	ldr	r3, [fp, #-8]
   17274:	ldr	r3, [r3]
   17278:	ldr	r2, [fp, #-8]
   1727c:	add	r2, r2, #8
   17280:	ldr	r1, [fp, #-8]
   17284:	ldr	r1, [r1, #40]	; 0x28
   17288:	ldr	r0, [fp, #-8]
   1728c:	ldr	r0, [r0, #44]	; 0x2c
   17290:	str	r0, [sp, #16]
   17294:	str	r1, [sp, #12]
   17298:	str	r2, [sp, #8]
   1729c:	ldr	r2, [fp, #-16]
   172a0:	str	r2, [sp, #4]
   172a4:	str	r3, [sp]
   172a8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   172ac:	ldr	r2, [fp, #-32]	; 0xffffffe0
   172b0:	mov	r1, #0
   172b4:	mov	r0, #0
   172b8:	bl	15a14 <__assert_fail@plt+0x44d0>
   172bc:	mov	r3, r0
   172c0:	add	r3, r3, #1
   172c4:	str	r3, [fp, #-20]	; 0xffffffec
   172c8:	ldr	r0, [fp, #-20]	; 0xffffffec
   172cc:	bl	31fa8 <__assert_fail@plt+0x20a64>
   172d0:	mov	r3, r0
   172d4:	str	r3, [fp, #-24]	; 0xffffffe8
   172d8:	ldr	r3, [fp, #-8]
   172dc:	ldr	r3, [r3]
   172e0:	ldr	r2, [fp, #-8]
   172e4:	add	r2, r2, #8
   172e8:	ldr	r1, [fp, #-8]
   172ec:	ldr	r1, [r1, #40]	; 0x28
   172f0:	ldr	r0, [fp, #-8]
   172f4:	ldr	r0, [r0, #44]	; 0x2c
   172f8:	str	r0, [sp, #16]
   172fc:	str	r1, [sp, #12]
   17300:	str	r2, [sp, #8]
   17304:	ldr	r2, [fp, #-16]
   17308:	str	r2, [sp, #4]
   1730c:	str	r3, [sp]
   17310:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17314:	ldr	r2, [fp, #-32]	; 0xffffffe0
   17318:	ldr	r1, [fp, #-20]	; 0xffffffec
   1731c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17320:	bl	15a14 <__assert_fail@plt+0x44d0>
   17324:	bl	11418 <__errno_location@plt>
   17328:	mov	r2, r0
   1732c:	ldr	r3, [fp, #-12]
   17330:	str	r3, [r2]
   17334:	ldr	r3, [fp, #-40]	; 0xffffffd8
   17338:	cmp	r3, #0
   1733c:	beq	17350 <__assert_fail@plt+0x5e0c>
   17340:	ldr	r3, [fp, #-20]	; 0xffffffec
   17344:	sub	r2, r3, #1
   17348:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1734c:	str	r2, [r3]
   17350:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17354:	mov	r0, r3
   17358:	sub	sp, fp, #4
   1735c:	ldr	fp, [sp]
   17360:	add	sp, sp, #4
   17364:	pop	{pc}		; (ldr pc, [sp], #4)
   17368:	str	fp, [sp, #-8]!
   1736c:	str	lr, [sp, #4]
   17370:	add	fp, sp, #4
   17374:	sub	sp, sp, #8
   17378:	movw	r3, #29048	; 0x7178
   1737c:	movt	r3, #4
   17380:	ldr	r3, [r3]
   17384:	str	r3, [fp, #-12]
   17388:	mov	r3, #1
   1738c:	str	r3, [fp, #-8]
   17390:	b	173bc <__assert_fail@plt+0x5e78>
   17394:	ldr	r3, [fp, #-8]
   17398:	lsl	r3, r3, #3
   1739c:	ldr	r2, [fp, #-12]
   173a0:	add	r3, r2, r3
   173a4:	ldr	r3, [r3, #4]
   173a8:	mov	r0, r3
   173ac:	bl	151ec <__assert_fail@plt+0x3ca8>
   173b0:	ldr	r3, [fp, #-8]
   173b4:	add	r3, r3, #1
   173b8:	str	r3, [fp, #-8]
   173bc:	movw	r3, #29036	; 0x716c
   173c0:	movt	r3, #4
   173c4:	ldr	r3, [r3]
   173c8:	ldr	r2, [fp, #-8]
   173cc:	cmp	r2, r3
   173d0:	blt	17394 <__assert_fail@plt+0x5e50>
   173d4:	ldr	r3, [fp, #-12]
   173d8:	ldr	r2, [r3, #4]
   173dc:	movw	r3, #29428	; 0x72f4
   173e0:	movt	r3, #4
   173e4:	cmp	r2, r3
   173e8:	beq	17420 <__assert_fail@plt+0x5edc>
   173ec:	ldr	r3, [fp, #-12]
   173f0:	ldr	r3, [r3, #4]
   173f4:	mov	r0, r3
   173f8:	bl	151ec <__assert_fail@plt+0x3ca8>
   173fc:	movw	r3, #29040	; 0x7170
   17400:	movt	r3, #4
   17404:	mov	r2, #256	; 0x100
   17408:	str	r2, [r3]
   1740c:	movw	r3, #29040	; 0x7170
   17410:	movt	r3, #4
   17414:	movw	r2, #29428	; 0x72f4
   17418:	movt	r2, #4
   1741c:	str	r2, [r3, #4]
   17420:	ldr	r2, [fp, #-12]
   17424:	movw	r3, #29040	; 0x7170
   17428:	movt	r3, #4
   1742c:	cmp	r2, r3
   17430:	beq	17450 <__assert_fail@plt+0x5f0c>
   17434:	ldr	r0, [fp, #-12]
   17438:	bl	151ec <__assert_fail@plt+0x3ca8>
   1743c:	movw	r3, #29048	; 0x7178
   17440:	movt	r3, #4
   17444:	movw	r2, #29040	; 0x7170
   17448:	movt	r2, #4
   1744c:	str	r2, [r3]
   17450:	movw	r3, #29036	; 0x716c
   17454:	movt	r3, #4
   17458:	mov	r2, #1
   1745c:	str	r2, [r3]
   17460:	nop	{0}
   17464:	sub	sp, fp, #4
   17468:	ldr	fp, [sp]
   1746c:	add	sp, sp, #4
   17470:	pop	{pc}		; (ldr pc, [sp], #4)
   17474:	str	fp, [sp, #-8]!
   17478:	str	lr, [sp, #4]
   1747c:	add	fp, sp, #4
   17480:	sub	sp, sp, #80	; 0x50
   17484:	str	r0, [fp, #-48]	; 0xffffffd0
   17488:	str	r1, [fp, #-52]	; 0xffffffcc
   1748c:	str	r2, [fp, #-56]	; 0xffffffc8
   17490:	str	r3, [fp, #-60]	; 0xffffffc4
   17494:	bl	11418 <__errno_location@plt>
   17498:	mov	r3, r0
   1749c:	ldr	r3, [r3]
   174a0:	str	r3, [fp, #-16]
   174a4:	movw	r3, #29048	; 0x7178
   174a8:	movt	r3, #4
   174ac:	ldr	r3, [r3]
   174b0:	str	r3, [fp, #-8]
   174b4:	mvn	r3, #-2147483648	; 0x80000000
   174b8:	str	r3, [fp, #-20]	; 0xffffffec
   174bc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   174c0:	cmp	r3, #0
   174c4:	blt	174d8 <__assert_fail@plt+0x5f94>
   174c8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   174cc:	ldr	r3, [fp, #-20]	; 0xffffffec
   174d0:	cmp	r2, r3
   174d4:	blt	174dc <__assert_fail@plt+0x5f98>
   174d8:	bl	1152c <abort@plt>
   174dc:	movw	r3, #29036	; 0x716c
   174e0:	movt	r3, #4
   174e4:	ldr	r3, [r3]
   174e8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   174ec:	cmp	r2, r3
   174f0:	blt	175e8 <__assert_fail@plt+0x60a4>
   174f4:	ldr	r2, [fp, #-8]
   174f8:	movw	r3, #29040	; 0x7170
   174fc:	movt	r3, #4
   17500:	cmp	r2, r3
   17504:	moveq	r3, #1
   17508:	movne	r3, #0
   1750c:	strb	r3, [fp, #-21]	; 0xffffffeb
   17510:	movw	r3, #29036	; 0x716c
   17514:	movt	r3, #4
   17518:	ldr	r3, [r3]
   1751c:	str	r3, [fp, #-40]	; 0xffffffd8
   17520:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   17524:	cmp	r3, #0
   17528:	beq	17534 <__assert_fail@plt+0x5ff0>
   1752c:	mov	r0, #0
   17530:	b	17538 <__assert_fail@plt+0x5ff4>
   17534:	ldr	r0, [fp, #-8]
   17538:	movw	r3, #29036	; 0x716c
   1753c:	movt	r3, #4
   17540:	ldr	r3, [r3]
   17544:	ldr	r2, [fp, #-48]	; 0xffffffd0
   17548:	sub	r3, r2, r3
   1754c:	add	r2, r3, #1
   17550:	sub	r1, fp, #40	; 0x28
   17554:	mov	r3, #8
   17558:	str	r3, [sp]
   1755c:	ldr	r3, [fp, #-20]	; 0xffffffec
   17560:	bl	32308 <__assert_fail@plt+0x20dc4>
   17564:	str	r0, [fp, #-8]
   17568:	movw	r3, #29048	; 0x7178
   1756c:	movt	r3, #4
   17570:	ldr	r2, [fp, #-8]
   17574:	str	r2, [r3]
   17578:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   1757c:	cmp	r3, #0
   17580:	beq	1759c <__assert_fail@plt+0x6058>
   17584:	ldr	r2, [fp, #-8]
   17588:	movw	r3, #29040	; 0x7170
   1758c:	movt	r3, #4
   17590:	mov	r1, r2
   17594:	ldrd	r2, [r3]
   17598:	strd	r2, [r1]
   1759c:	movw	r3, #29036	; 0x716c
   175a0:	movt	r3, #4
   175a4:	ldr	r3, [r3]
   175a8:	lsl	r3, r3, #3
   175ac:	ldr	r2, [fp, #-8]
   175b0:	add	r0, r2, r3
   175b4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   175b8:	movw	r3, #29036	; 0x716c
   175bc:	movt	r3, #4
   175c0:	ldr	r3, [r3]
   175c4:	sub	r3, r2, r3
   175c8:	lsl	r3, r3, #3
   175cc:	mov	r2, r3
   175d0:	mov	r1, #0
   175d4:	bl	11448 <memset@plt>
   175d8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   175dc:	movw	r3, #29036	; 0x716c
   175e0:	movt	r3, #4
   175e4:	str	r2, [r3]
   175e8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   175ec:	lsl	r3, r3, #3
   175f0:	ldr	r2, [fp, #-8]
   175f4:	add	r3, r2, r3
   175f8:	ldr	r3, [r3]
   175fc:	str	r3, [fp, #-28]	; 0xffffffe4
   17600:	ldr	r3, [fp, #-48]	; 0xffffffd0
   17604:	lsl	r3, r3, #3
   17608:	ldr	r2, [fp, #-8]
   1760c:	add	r3, r2, r3
   17610:	ldr	r3, [r3, #4]
   17614:	str	r3, [fp, #-12]
   17618:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1761c:	ldr	r3, [r3, #4]
   17620:	orr	r3, r3, #1
   17624:	str	r3, [fp, #-32]	; 0xffffffe0
   17628:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1762c:	ldr	r3, [r3]
   17630:	ldr	r2, [fp, #-60]	; 0xffffffc4
   17634:	add	r2, r2, #8
   17638:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1763c:	ldr	r1, [r1, #40]	; 0x28
   17640:	ldr	r0, [fp, #-60]	; 0xffffffc4
   17644:	ldr	r0, [r0, #44]	; 0x2c
   17648:	str	r0, [sp, #16]
   1764c:	str	r1, [sp, #12]
   17650:	str	r2, [sp, #8]
   17654:	ldr	r2, [fp, #-32]	; 0xffffffe0
   17658:	str	r2, [sp, #4]
   1765c:	str	r3, [sp]
   17660:	ldr	r3, [fp, #-56]	; 0xffffffc8
   17664:	ldr	r2, [fp, #-52]	; 0xffffffcc
   17668:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1766c:	ldr	r0, [fp, #-12]
   17670:	bl	15a14 <__assert_fail@plt+0x44d0>
   17674:	str	r0, [fp, #-36]	; 0xffffffdc
   17678:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1767c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17680:	cmp	r2, r3
   17684:	bhi	1773c <__assert_fail@plt+0x61f8>
   17688:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1768c:	add	r3, r3, #1
   17690:	str	r3, [fp, #-28]	; 0xffffffe4
   17694:	ldr	r3, [fp, #-48]	; 0xffffffd0
   17698:	lsl	r3, r3, #3
   1769c:	ldr	r2, [fp, #-8]
   176a0:	add	r3, r2, r3
   176a4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   176a8:	str	r2, [r3]
   176ac:	ldr	r2, [fp, #-12]
   176b0:	movw	r3, #29428	; 0x72f4
   176b4:	movt	r3, #4
   176b8:	cmp	r2, r3
   176bc:	beq	176c8 <__assert_fail@plt+0x6184>
   176c0:	ldr	r0, [fp, #-12]
   176c4:	bl	151ec <__assert_fail@plt+0x3ca8>
   176c8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   176cc:	bl	31fa8 <__assert_fail@plt+0x20a64>
   176d0:	mov	r3, r0
   176d4:	str	r3, [fp, #-12]
   176d8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   176dc:	lsl	r3, r3, #3
   176e0:	ldr	r2, [fp, #-8]
   176e4:	add	r3, r2, r3
   176e8:	ldr	r2, [fp, #-12]
   176ec:	str	r2, [r3, #4]
   176f0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   176f4:	ldr	r3, [r3]
   176f8:	ldr	r2, [fp, #-60]	; 0xffffffc4
   176fc:	add	r2, r2, #8
   17700:	ldr	r1, [fp, #-60]	; 0xffffffc4
   17704:	ldr	r1, [r1, #40]	; 0x28
   17708:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1770c:	ldr	r0, [r0, #44]	; 0x2c
   17710:	str	r0, [sp, #16]
   17714:	str	r1, [sp, #12]
   17718:	str	r2, [sp, #8]
   1771c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   17720:	str	r2, [sp, #4]
   17724:	str	r3, [sp]
   17728:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1772c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   17730:	ldr	r1, [fp, #-28]	; 0xffffffe4
   17734:	ldr	r0, [fp, #-12]
   17738:	bl	15a14 <__assert_fail@plt+0x44d0>
   1773c:	bl	11418 <__errno_location@plt>
   17740:	mov	r2, r0
   17744:	ldr	r3, [fp, #-16]
   17748:	str	r3, [r2]
   1774c:	ldr	r3, [fp, #-12]
   17750:	mov	r0, r3
   17754:	sub	sp, fp, #4
   17758:	ldr	fp, [sp]
   1775c:	add	sp, sp, #4
   17760:	pop	{pc}		; (ldr pc, [sp], #4)
   17764:	str	fp, [sp, #-8]!
   17768:	str	lr, [sp, #4]
   1776c:	add	fp, sp, #4
   17770:	sub	sp, sp, #8
   17774:	str	r0, [fp, #-8]
   17778:	str	r1, [fp, #-12]
   1777c:	movw	r3, #29380	; 0x72c4
   17780:	movt	r3, #4
   17784:	mvn	r2, #0
   17788:	ldr	r1, [fp, #-12]
   1778c:	ldr	r0, [fp, #-8]
   17790:	bl	17474 <__assert_fail@plt+0x5f30>
   17794:	mov	r3, r0
   17798:	mov	r0, r3
   1779c:	sub	sp, fp, #4
   177a0:	ldr	fp, [sp]
   177a4:	add	sp, sp, #4
   177a8:	pop	{pc}		; (ldr pc, [sp], #4)
   177ac:	str	fp, [sp, #-8]!
   177b0:	str	lr, [sp, #4]
   177b4:	add	fp, sp, #4
   177b8:	sub	sp, sp, #16
   177bc:	str	r0, [fp, #-8]
   177c0:	str	r1, [fp, #-12]
   177c4:	str	r2, [fp, #-16]
   177c8:	movw	r3, #29380	; 0x72c4
   177cc:	movt	r3, #4
   177d0:	ldr	r2, [fp, #-16]
   177d4:	ldr	r1, [fp, #-12]
   177d8:	ldr	r0, [fp, #-8]
   177dc:	bl	17474 <__assert_fail@plt+0x5f30>
   177e0:	mov	r3, r0
   177e4:	mov	r0, r3
   177e8:	sub	sp, fp, #4
   177ec:	ldr	fp, [sp]
   177f0:	add	sp, sp, #4
   177f4:	pop	{pc}		; (ldr pc, [sp], #4)
   177f8:	str	fp, [sp, #-8]!
   177fc:	str	lr, [sp, #4]
   17800:	add	fp, sp, #4
   17804:	sub	sp, sp, #8
   17808:	str	r0, [fp, #-8]
   1780c:	ldr	r1, [fp, #-8]
   17810:	mov	r0, #0
   17814:	bl	17764 <__assert_fail@plt+0x6220>
   17818:	mov	r3, r0
   1781c:	mov	r0, r3
   17820:	sub	sp, fp, #4
   17824:	ldr	fp, [sp]
   17828:	add	sp, sp, #4
   1782c:	pop	{pc}		; (ldr pc, [sp], #4)
   17830:	str	fp, [sp, #-8]!
   17834:	str	lr, [sp, #4]
   17838:	add	fp, sp, #4
   1783c:	sub	sp, sp, #8
   17840:	str	r0, [fp, #-8]
   17844:	str	r1, [fp, #-12]
   17848:	ldr	r2, [fp, #-12]
   1784c:	ldr	r1, [fp, #-8]
   17850:	mov	r0, #0
   17854:	bl	177ac <__assert_fail@plt+0x6268>
   17858:	mov	r3, r0
   1785c:	mov	r0, r3
   17860:	sub	sp, fp, #4
   17864:	ldr	fp, [sp]
   17868:	add	sp, sp, #4
   1786c:	pop	{pc}		; (ldr pc, [sp], #4)
   17870:	str	fp, [sp, #-8]!
   17874:	str	lr, [sp, #4]
   17878:	add	fp, sp, #4
   1787c:	sub	sp, sp, #64	; 0x40
   17880:	str	r0, [fp, #-56]	; 0xffffffc8
   17884:	str	r1, [fp, #-60]	; 0xffffffc4
   17888:	str	r2, [fp, #-64]	; 0xffffffc0
   1788c:	sub	r3, fp, #52	; 0x34
   17890:	ldr	r1, [fp, #-60]	; 0xffffffc4
   17894:	mov	r0, r3
   17898:	bl	15870 <__assert_fail@plt+0x432c>
   1789c:	sub	r3, fp, #52	; 0x34
   178a0:	mvn	r2, #0
   178a4:	ldr	r1, [fp, #-64]	; 0xffffffc0
   178a8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   178ac:	bl	17474 <__assert_fail@plt+0x5f30>
   178b0:	mov	r3, r0
   178b4:	mov	r0, r3
   178b8:	sub	sp, fp, #4
   178bc:	ldr	fp, [sp]
   178c0:	add	sp, sp, #4
   178c4:	pop	{pc}		; (ldr pc, [sp], #4)
   178c8:	str	fp, [sp, #-8]!
   178cc:	str	lr, [sp, #4]
   178d0:	add	fp, sp, #4
   178d4:	sub	sp, sp, #64	; 0x40
   178d8:	str	r0, [fp, #-56]	; 0xffffffc8
   178dc:	str	r1, [fp, #-60]	; 0xffffffc4
   178e0:	str	r2, [fp, #-64]	; 0xffffffc0
   178e4:	str	r3, [fp, #-68]	; 0xffffffbc
   178e8:	sub	r3, fp, #52	; 0x34
   178ec:	ldr	r1, [fp, #-60]	; 0xffffffc4
   178f0:	mov	r0, r3
   178f4:	bl	15870 <__assert_fail@plt+0x432c>
   178f8:	sub	r3, fp, #52	; 0x34
   178fc:	ldr	r2, [fp, #-68]	; 0xffffffbc
   17900:	ldr	r1, [fp, #-64]	; 0xffffffc0
   17904:	ldr	r0, [fp, #-56]	; 0xffffffc8
   17908:	bl	17474 <__assert_fail@plt+0x5f30>
   1790c:	mov	r3, r0
   17910:	mov	r0, r3
   17914:	sub	sp, fp, #4
   17918:	ldr	fp, [sp]
   1791c:	add	sp, sp, #4
   17920:	pop	{pc}		; (ldr pc, [sp], #4)
   17924:	str	fp, [sp, #-8]!
   17928:	str	lr, [sp, #4]
   1792c:	add	fp, sp, #4
   17930:	sub	sp, sp, #8
   17934:	str	r0, [fp, #-8]
   17938:	str	r1, [fp, #-12]
   1793c:	ldr	r2, [fp, #-12]
   17940:	ldr	r1, [fp, #-8]
   17944:	mov	r0, #0
   17948:	bl	17870 <__assert_fail@plt+0x632c>
   1794c:	mov	r3, r0
   17950:	mov	r0, r3
   17954:	sub	sp, fp, #4
   17958:	ldr	fp, [sp]
   1795c:	add	sp, sp, #4
   17960:	pop	{pc}		; (ldr pc, [sp], #4)
   17964:	str	fp, [sp, #-8]!
   17968:	str	lr, [sp, #4]
   1796c:	add	fp, sp, #4
   17970:	sub	sp, sp, #16
   17974:	str	r0, [fp, #-8]
   17978:	str	r1, [fp, #-12]
   1797c:	str	r2, [fp, #-16]
   17980:	ldr	r3, [fp, #-16]
   17984:	ldr	r2, [fp, #-12]
   17988:	ldr	r1, [fp, #-8]
   1798c:	mov	r0, #0
   17990:	bl	178c8 <__assert_fail@plt+0x6384>
   17994:	mov	r3, r0
   17998:	mov	r0, r3
   1799c:	sub	sp, fp, #4
   179a0:	ldr	fp, [sp]
   179a4:	add	sp, sp, #4
   179a8:	pop	{pc}		; (ldr pc, [sp], #4)
   179ac:	str	fp, [sp, #-8]!
   179b0:	str	lr, [sp, #4]
   179b4:	add	fp, sp, #4
   179b8:	sub	sp, sp, #64	; 0x40
   179bc:	str	r0, [fp, #-56]	; 0xffffffc8
   179c0:	str	r1, [fp, #-60]	; 0xffffffc4
   179c4:	mov	r3, r2
   179c8:	strb	r3, [fp, #-61]	; 0xffffffc3
   179cc:	movw	r2, #29380	; 0x72c4
   179d0:	movt	r2, #4
   179d4:	sub	r3, fp, #52	; 0x34
   179d8:	ldrd	r0, [r2]
   179dc:	strd	r0, [r3]
   179e0:	ldrd	r0, [r2, #8]
   179e4:	strd	r0, [r3, #8]
   179e8:	ldrd	r0, [r2, #16]
   179ec:	strd	r0, [r3, #16]
   179f0:	ldrd	r0, [r2, #24]
   179f4:	strd	r0, [r3, #24]
   179f8:	ldrd	r0, [r2, #32]
   179fc:	strd	r0, [r3, #32]
   17a00:	ldrd	r0, [r2, #40]	; 0x28
   17a04:	strd	r0, [r3, #40]	; 0x28
   17a08:	ldrb	r1, [fp, #-61]	; 0xffffffc3
   17a0c:	sub	r3, fp, #52	; 0x34
   17a10:	mov	r2, #1
   17a14:	mov	r0, r3
   17a18:	bl	156d0 <__assert_fail@plt+0x418c>
   17a1c:	sub	r3, fp, #52	; 0x34
   17a20:	ldr	r2, [fp, #-60]	; 0xffffffc4
   17a24:	ldr	r1, [fp, #-56]	; 0xffffffc8
   17a28:	mov	r0, #0
   17a2c:	bl	17474 <__assert_fail@plt+0x5f30>
   17a30:	mov	r3, r0
   17a34:	mov	r0, r3
   17a38:	sub	sp, fp, #4
   17a3c:	ldr	fp, [sp]
   17a40:	add	sp, sp, #4
   17a44:	pop	{pc}		; (ldr pc, [sp], #4)
   17a48:	str	fp, [sp, #-8]!
   17a4c:	str	lr, [sp, #4]
   17a50:	add	fp, sp, #4
   17a54:	sub	sp, sp, #8
   17a58:	str	r0, [fp, #-8]
   17a5c:	mov	r3, r1
   17a60:	strb	r3, [fp, #-9]
   17a64:	ldrb	r3, [fp, #-9]
   17a68:	mov	r2, r3
   17a6c:	mvn	r1, #0
   17a70:	ldr	r0, [fp, #-8]
   17a74:	bl	179ac <__assert_fail@plt+0x6468>
   17a78:	mov	r3, r0
   17a7c:	mov	r0, r3
   17a80:	sub	sp, fp, #4
   17a84:	ldr	fp, [sp]
   17a88:	add	sp, sp, #4
   17a8c:	pop	{pc}		; (ldr pc, [sp], #4)
   17a90:	str	fp, [sp, #-8]!
   17a94:	str	lr, [sp, #4]
   17a98:	add	fp, sp, #4
   17a9c:	sub	sp, sp, #8
   17aa0:	str	r0, [fp, #-8]
   17aa4:	mov	r1, #58	; 0x3a
   17aa8:	ldr	r0, [fp, #-8]
   17aac:	bl	17a48 <__assert_fail@plt+0x6504>
   17ab0:	mov	r3, r0
   17ab4:	mov	r0, r3
   17ab8:	sub	sp, fp, #4
   17abc:	ldr	fp, [sp]
   17ac0:	add	sp, sp, #4
   17ac4:	pop	{pc}		; (ldr pc, [sp], #4)
   17ac8:	str	fp, [sp, #-8]!
   17acc:	str	lr, [sp, #4]
   17ad0:	add	fp, sp, #4
   17ad4:	sub	sp, sp, #8
   17ad8:	str	r0, [fp, #-8]
   17adc:	str	r1, [fp, #-12]
   17ae0:	mov	r2, #58	; 0x3a
   17ae4:	ldr	r1, [fp, #-12]
   17ae8:	ldr	r0, [fp, #-8]
   17aec:	bl	179ac <__assert_fail@plt+0x6468>
   17af0:	mov	r3, r0
   17af4:	mov	r0, r3
   17af8:	sub	sp, fp, #4
   17afc:	ldr	fp, [sp]
   17b00:	add	sp, sp, #4
   17b04:	pop	{pc}		; (ldr pc, [sp], #4)
   17b08:	str	fp, [sp, #-8]!
   17b0c:	str	lr, [sp, #4]
   17b10:	add	fp, sp, #4
   17b14:	sub	sp, sp, #112	; 0x70
   17b18:	str	r0, [fp, #-56]	; 0xffffffc8
   17b1c:	str	r1, [fp, #-60]	; 0xffffffc4
   17b20:	str	r2, [fp, #-64]	; 0xffffffc0
   17b24:	sub	r3, fp, #116	; 0x74
   17b28:	ldr	r1, [fp, #-60]	; 0xffffffc4
   17b2c:	mov	r0, r3
   17b30:	bl	15870 <__assert_fail@plt+0x432c>
   17b34:	sub	r3, fp, #52	; 0x34
   17b38:	sub	r2, fp, #116	; 0x74
   17b3c:	ldrd	r0, [r2]
   17b40:	strd	r0, [r3]
   17b44:	ldrd	r0, [r2, #8]
   17b48:	strd	r0, [r3, #8]
   17b4c:	ldrd	r0, [r2, #16]
   17b50:	strd	r0, [r3, #16]
   17b54:	ldrd	r0, [r2, #24]
   17b58:	strd	r0, [r3, #24]
   17b5c:	ldrd	r0, [r2, #32]
   17b60:	strd	r0, [r3, #32]
   17b64:	ldrd	r0, [r2, #40]	; 0x28
   17b68:	strd	r0, [r3, #40]	; 0x28
   17b6c:	sub	r3, fp, #52	; 0x34
   17b70:	mov	r2, #1
   17b74:	mov	r1, #58	; 0x3a
   17b78:	mov	r0, r3
   17b7c:	bl	156d0 <__assert_fail@plt+0x418c>
   17b80:	sub	r3, fp, #52	; 0x34
   17b84:	mvn	r2, #0
   17b88:	ldr	r1, [fp, #-64]	; 0xffffffc0
   17b8c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   17b90:	bl	17474 <__assert_fail@plt+0x5f30>
   17b94:	mov	r3, r0
   17b98:	mov	r0, r3
   17b9c:	sub	sp, fp, #4
   17ba0:	ldr	fp, [sp]
   17ba4:	add	sp, sp, #4
   17ba8:	pop	{pc}		; (ldr pc, [sp], #4)
   17bac:	str	fp, [sp, #-8]!
   17bb0:	str	lr, [sp, #4]
   17bb4:	add	fp, sp, #4
   17bb8:	sub	sp, sp, #24
   17bbc:	str	r0, [fp, #-8]
   17bc0:	str	r1, [fp, #-12]
   17bc4:	str	r2, [fp, #-16]
   17bc8:	str	r3, [fp, #-20]	; 0xffffffec
   17bcc:	mvn	r3, #0
   17bd0:	str	r3, [sp]
   17bd4:	ldr	r3, [fp, #-20]	; 0xffffffec
   17bd8:	ldr	r2, [fp, #-16]
   17bdc:	ldr	r1, [fp, #-12]
   17be0:	ldr	r0, [fp, #-8]
   17be4:	bl	17c00 <__assert_fail@plt+0x66bc>
   17be8:	mov	r3, r0
   17bec:	mov	r0, r3
   17bf0:	sub	sp, fp, #4
   17bf4:	ldr	fp, [sp]
   17bf8:	add	sp, sp, #4
   17bfc:	pop	{pc}		; (ldr pc, [sp], #4)
   17c00:	str	fp, [sp, #-8]!
   17c04:	str	lr, [sp, #4]
   17c08:	add	fp, sp, #4
   17c0c:	sub	sp, sp, #64	; 0x40
   17c10:	str	r0, [fp, #-56]	; 0xffffffc8
   17c14:	str	r1, [fp, #-60]	; 0xffffffc4
   17c18:	str	r2, [fp, #-64]	; 0xffffffc0
   17c1c:	str	r3, [fp, #-68]	; 0xffffffbc
   17c20:	movw	r2, #29380	; 0x72c4
   17c24:	movt	r2, #4
   17c28:	sub	r3, fp, #52	; 0x34
   17c2c:	ldrd	r0, [r2]
   17c30:	strd	r0, [r3]
   17c34:	ldrd	r0, [r2, #8]
   17c38:	strd	r0, [r3, #8]
   17c3c:	ldrd	r0, [r2, #16]
   17c40:	strd	r0, [r3, #16]
   17c44:	ldrd	r0, [r2, #24]
   17c48:	strd	r0, [r3, #24]
   17c4c:	ldrd	r0, [r2, #32]
   17c50:	strd	r0, [r3, #32]
   17c54:	ldrd	r0, [r2, #40]	; 0x28
   17c58:	strd	r0, [r3, #40]	; 0x28
   17c5c:	sub	r3, fp, #52	; 0x34
   17c60:	ldr	r2, [fp, #-64]	; 0xffffffc0
   17c64:	ldr	r1, [fp, #-60]	; 0xffffffc4
   17c68:	mov	r0, r3
   17c6c:	bl	157e8 <__assert_fail@plt+0x42a4>
   17c70:	sub	r3, fp, #52	; 0x34
   17c74:	ldr	r2, [fp, #4]
   17c78:	ldr	r1, [fp, #-68]	; 0xffffffbc
   17c7c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   17c80:	bl	17474 <__assert_fail@plt+0x5f30>
   17c84:	mov	r3, r0
   17c88:	mov	r0, r3
   17c8c:	sub	sp, fp, #4
   17c90:	ldr	fp, [sp]
   17c94:	add	sp, sp, #4
   17c98:	pop	{pc}		; (ldr pc, [sp], #4)
   17c9c:	str	fp, [sp, #-8]!
   17ca0:	str	lr, [sp, #4]
   17ca4:	add	fp, sp, #4
   17ca8:	sub	sp, sp, #16
   17cac:	str	r0, [fp, #-8]
   17cb0:	str	r1, [fp, #-12]
   17cb4:	str	r2, [fp, #-16]
   17cb8:	ldr	r3, [fp, #-16]
   17cbc:	ldr	r2, [fp, #-12]
   17cc0:	ldr	r1, [fp, #-8]
   17cc4:	mov	r0, #0
   17cc8:	bl	17bac <__assert_fail@plt+0x6668>
   17ccc:	mov	r3, r0
   17cd0:	mov	r0, r3
   17cd4:	sub	sp, fp, #4
   17cd8:	ldr	fp, [sp]
   17cdc:	add	sp, sp, #4
   17ce0:	pop	{pc}		; (ldr pc, [sp], #4)
   17ce4:	str	fp, [sp, #-8]!
   17ce8:	str	lr, [sp, #4]
   17cec:	add	fp, sp, #4
   17cf0:	sub	sp, sp, #24
   17cf4:	str	r0, [fp, #-8]
   17cf8:	str	r1, [fp, #-12]
   17cfc:	str	r2, [fp, #-16]
   17d00:	str	r3, [fp, #-20]	; 0xffffffec
   17d04:	ldr	r3, [fp, #-20]	; 0xffffffec
   17d08:	str	r3, [sp]
   17d0c:	ldr	r3, [fp, #-16]
   17d10:	ldr	r2, [fp, #-12]
   17d14:	ldr	r1, [fp, #-8]
   17d18:	mov	r0, #0
   17d1c:	bl	17c00 <__assert_fail@plt+0x66bc>
   17d20:	mov	r3, r0
   17d24:	mov	r0, r3
   17d28:	sub	sp, fp, #4
   17d2c:	ldr	fp, [sp]
   17d30:	add	sp, sp, #4
   17d34:	pop	{pc}		; (ldr pc, [sp], #4)
   17d38:	str	fp, [sp, #-8]!
   17d3c:	str	lr, [sp, #4]
   17d40:	add	fp, sp, #4
   17d44:	sub	sp, sp, #16
   17d48:	str	r0, [fp, #-8]
   17d4c:	str	r1, [fp, #-12]
   17d50:	str	r2, [fp, #-16]
   17d54:	movw	r3, #29052	; 0x717c
   17d58:	movt	r3, #4
   17d5c:	ldr	r2, [fp, #-16]
   17d60:	ldr	r1, [fp, #-12]
   17d64:	ldr	r0, [fp, #-8]
   17d68:	bl	17474 <__assert_fail@plt+0x5f30>
   17d6c:	mov	r3, r0
   17d70:	mov	r0, r3
   17d74:	sub	sp, fp, #4
   17d78:	ldr	fp, [sp]
   17d7c:	add	sp, sp, #4
   17d80:	pop	{pc}		; (ldr pc, [sp], #4)
   17d84:	str	fp, [sp, #-8]!
   17d88:	str	lr, [sp, #4]
   17d8c:	add	fp, sp, #4
   17d90:	sub	sp, sp, #8
   17d94:	str	r0, [fp, #-8]
   17d98:	str	r1, [fp, #-12]
   17d9c:	ldr	r2, [fp, #-12]
   17da0:	ldr	r1, [fp, #-8]
   17da4:	mov	r0, #0
   17da8:	bl	17d38 <__assert_fail@plt+0x67f4>
   17dac:	mov	r3, r0
   17db0:	mov	r0, r3
   17db4:	sub	sp, fp, #4
   17db8:	ldr	fp, [sp]
   17dbc:	add	sp, sp, #4
   17dc0:	pop	{pc}		; (ldr pc, [sp], #4)
   17dc4:	str	fp, [sp, #-8]!
   17dc8:	str	lr, [sp, #4]
   17dcc:	add	fp, sp, #4
   17dd0:	sub	sp, sp, #8
   17dd4:	str	r0, [fp, #-8]
   17dd8:	str	r1, [fp, #-12]
   17ddc:	mvn	r2, #0
   17de0:	ldr	r1, [fp, #-12]
   17de4:	ldr	r0, [fp, #-8]
   17de8:	bl	17d38 <__assert_fail@plt+0x67f4>
   17dec:	mov	r3, r0
   17df0:	mov	r0, r3
   17df4:	sub	sp, fp, #4
   17df8:	ldr	fp, [sp]
   17dfc:	add	sp, sp, #4
   17e00:	pop	{pc}		; (ldr pc, [sp], #4)
   17e04:	str	fp, [sp, #-8]!
   17e08:	str	lr, [sp, #4]
   17e0c:	add	fp, sp, #4
   17e10:	sub	sp, sp, #8
   17e14:	str	r0, [fp, #-8]
   17e18:	ldr	r1, [fp, #-8]
   17e1c:	mov	r0, #0
   17e20:	bl	17dc4 <__assert_fail@plt+0x6880>
   17e24:	mov	r3, r0
   17e28:	mov	r0, r3
   17e2c:	sub	sp, fp, #4
   17e30:	ldr	fp, [sp]
   17e34:	add	sp, sp, #4
   17e38:	pop	{pc}		; (ldr pc, [sp], #4)
   17e3c:	push	{fp}		; (str fp, [sp, #-4]!)
   17e40:	add	fp, sp, #0
   17e44:	mvn	r3, #0
   17e48:	mov	r0, r3
   17e4c:	add	sp, fp, #0
   17e50:	pop	{fp}		; (ldr fp, [sp], #4)
   17e54:	bx	lr
   17e58:	push	{fp}		; (str fp, [sp, #-4]!)
   17e5c:	add	fp, sp, #0
   17e60:	sub	sp, sp, #12
   17e64:	str	r0, [fp, #-8]
   17e68:	str	r1, [fp, #-12]
   17e6c:	ldr	r3, [fp, #-12]
   17e70:	add	r2, r3, #31
   17e74:	cmp	r3, #0
   17e78:	movlt	r3, r2
   17e7c:	movge	r3, r3
   17e80:	asr	r3, r3, #5
   17e84:	mov	r0, r3
   17e88:	mov	r3, r0
   17e8c:	lsl	r3, r3, #2
   17e90:	ldr	r2, [fp, #-8]
   17e94:	add	r3, r2, r3
   17e98:	ldr	r1, [r3]
   17e9c:	ldr	r3, [fp, #-12]
   17ea0:	rsbs	r2, r3, #0
   17ea4:	and	r3, r3, #31
   17ea8:	and	r2, r2, #31
   17eac:	rsbpl	r3, r2, #0
   17eb0:	mov	r2, #1
   17eb4:	lsl	r2, r2, r3
   17eb8:	mov	r3, r0
   17ebc:	lsl	r3, r3, #2
   17ec0:	ldr	r0, [fp, #-8]
   17ec4:	add	r3, r0, r3
   17ec8:	orr	r2, r1, r2
   17ecc:	str	r2, [r3]
   17ed0:	nop	{0}
   17ed4:	add	sp, fp, #0
   17ed8:	pop	{fp}		; (ldr fp, [sp], #4)
   17edc:	bx	lr
   17ee0:	push	{fp}		; (str fp, [sp, #-4]!)
   17ee4:	add	fp, sp, #0
   17ee8:	sub	sp, sp, #12
   17eec:	str	r0, [fp, #-8]
   17ef0:	str	r1, [fp, #-12]
   17ef4:	ldr	r3, [fp, #-12]
   17ef8:	add	r2, r3, #31
   17efc:	cmp	r3, #0
   17f00:	movlt	r3, r2
   17f04:	movge	r3, r3
   17f08:	asr	r3, r3, #5
   17f0c:	mov	r0, r3
   17f10:	mov	r3, r0
   17f14:	lsl	r3, r3, #2
   17f18:	ldr	r2, [fp, #-8]
   17f1c:	add	r3, r2, r3
   17f20:	ldr	r1, [r3]
   17f24:	ldr	r3, [fp, #-12]
   17f28:	rsbs	r2, r3, #0
   17f2c:	and	r3, r3, #31
   17f30:	and	r2, r2, #31
   17f34:	rsbpl	r3, r2, #0
   17f38:	mov	r2, #1
   17f3c:	lsl	r3, r2, r3
   17f40:	mvn	r2, r3
   17f44:	mov	r3, r0
   17f48:	lsl	r3, r3, #2
   17f4c:	ldr	r0, [fp, #-8]
   17f50:	add	r3, r0, r3
   17f54:	and	r2, r2, r1
   17f58:	str	r2, [r3]
   17f5c:	nop	{0}
   17f60:	add	sp, fp, #0
   17f64:	pop	{fp}		; (ldr fp, [sp], #4)
   17f68:	bx	lr
   17f6c:	push	{fp}		; (str fp, [sp, #-4]!)
   17f70:	add	fp, sp, #0
   17f74:	sub	sp, sp, #12
   17f78:	str	r0, [fp, #-8]
   17f7c:	str	r1, [fp, #-12]
   17f80:	ldr	r3, [fp, #-12]
   17f84:	add	r2, r3, #31
   17f88:	cmp	r3, #0
   17f8c:	movlt	r3, r2
   17f90:	movge	r3, r3
   17f94:	asr	r3, r3, #5
   17f98:	lsl	r3, r3, #2
   17f9c:	ldr	r2, [fp, #-8]
   17fa0:	add	r3, r2, r3
   17fa4:	ldr	r2, [r3]
   17fa8:	ldr	r3, [fp, #-12]
   17fac:	rsbs	r1, r3, #0
   17fb0:	and	r3, r3, #31
   17fb4:	and	r1, r1, #31
   17fb8:	rsbpl	r3, r1, #0
   17fbc:	lsr	r3, r2, r3
   17fc0:	and	r3, r3, #1
   17fc4:	cmp	r3, #0
   17fc8:	movne	r3, #1
   17fcc:	moveq	r3, #0
   17fd0:	uxtb	r3, r3
   17fd4:	mov	r0, r3
   17fd8:	add	sp, fp, #0
   17fdc:	pop	{fp}		; (ldr fp, [sp], #4)
   17fe0:	bx	lr
   17fe4:	str	fp, [sp, #-8]!
   17fe8:	str	lr, [sp, #4]
   17fec:	add	fp, sp, #4
   17ff0:	sub	sp, sp, #8
   17ff4:	str	r0, [fp, #-8]
   17ff8:	mov	r2, #32
   17ffc:	mov	r1, #0
   18000:	ldr	r0, [fp, #-8]
   18004:	bl	11448 <memset@plt>
   18008:	nop	{0}
   1800c:	sub	sp, fp, #4
   18010:	ldr	fp, [sp]
   18014:	add	sp, sp, #4
   18018:	pop	{pc}		; (ldr pc, [sp], #4)
   1801c:	str	fp, [sp, #-8]!
   18020:	str	lr, [sp, #4]
   18024:	add	fp, sp, #4
   18028:	sub	sp, sp, #8
   1802c:	str	r0, [fp, #-8]
   18030:	mov	r2, #32
   18034:	mvn	r1, #0
   18038:	ldr	r0, [fp, #-8]
   1803c:	bl	11448 <memset@plt>
   18040:	nop	{0}
   18044:	sub	sp, fp, #4
   18048:	ldr	fp, [sp]
   1804c:	add	sp, sp, #4
   18050:	pop	{pc}		; (ldr pc, [sp], #4)
   18054:	str	fp, [sp, #-8]!
   18058:	str	lr, [sp, #4]
   1805c:	add	fp, sp, #4
   18060:	sub	sp, sp, #8
   18064:	str	r0, [fp, #-8]
   18068:	str	r1, [fp, #-12]
   1806c:	mov	r2, #32
   18070:	ldr	r1, [fp, #-12]
   18074:	ldr	r0, [fp, #-8]
   18078:	bl	11250 <memcpy@plt>
   1807c:	nop	{0}
   18080:	sub	sp, fp, #4
   18084:	ldr	fp, [sp]
   18088:	add	sp, sp, #4
   1808c:	pop	{pc}		; (ldr pc, [sp], #4)
   18090:	push	{fp}		; (str fp, [sp, #-4]!)
   18094:	add	fp, sp, #0
   18098:	sub	sp, sp, #20
   1809c:	str	r0, [fp, #-16]
   180a0:	mov	r3, #0
   180a4:	str	r3, [fp, #-8]
   180a8:	b	180e4 <__assert_fail@plt+0x6ba0>
   180ac:	ldr	r3, [fp, #-8]
   180b0:	lsl	r3, r3, #2
   180b4:	ldr	r2, [fp, #-16]
   180b8:	add	r3, r2, r3
   180bc:	ldr	r2, [r3]
   180c0:	ldr	r3, [fp, #-8]
   180c4:	lsl	r3, r3, #2
   180c8:	ldr	r1, [fp, #-16]
   180cc:	add	r3, r1, r3
   180d0:	mvn	r2, r2
   180d4:	str	r2, [r3]
   180d8:	ldr	r3, [fp, #-8]
   180dc:	add	r3, r3, #1
   180e0:	str	r3, [fp, #-8]
   180e4:	ldr	r3, [fp, #-8]
   180e8:	cmp	r3, #7
   180ec:	ble	180ac <__assert_fail@plt+0x6b68>
   180f0:	nop	{0}
   180f4:	add	sp, fp, #0
   180f8:	pop	{fp}		; (ldr fp, [sp], #4)
   180fc:	bx	lr
   18100:	push	{fp}		; (str fp, [sp, #-4]!)
   18104:	add	fp, sp, #0
   18108:	sub	sp, sp, #20
   1810c:	str	r0, [fp, #-16]
   18110:	str	r1, [fp, #-20]	; 0xffffffec
   18114:	mov	r3, #0
   18118:	str	r3, [fp, #-8]
   1811c:	b	1816c <__assert_fail@plt+0x6c28>
   18120:	ldr	r3, [fp, #-8]
   18124:	lsl	r3, r3, #2
   18128:	ldr	r2, [fp, #-16]
   1812c:	add	r3, r2, r3
   18130:	ldr	r1, [r3]
   18134:	ldr	r3, [fp, #-8]
   18138:	lsl	r3, r3, #2
   1813c:	ldr	r2, [fp, #-20]	; 0xffffffec
   18140:	add	r3, r2, r3
   18144:	ldr	r2, [r3]
   18148:	ldr	r3, [fp, #-8]
   1814c:	lsl	r3, r3, #2
   18150:	ldr	r0, [fp, #-16]
   18154:	add	r3, r0, r3
   18158:	orr	r2, r1, r2
   1815c:	str	r2, [r3]
   18160:	ldr	r3, [fp, #-8]
   18164:	add	r3, r3, #1
   18168:	str	r3, [fp, #-8]
   1816c:	ldr	r3, [fp, #-8]
   18170:	cmp	r3, #7
   18174:	ble	18120 <__assert_fail@plt+0x6bdc>
   18178:	nop	{0}
   1817c:	add	sp, fp, #0
   18180:	pop	{fp}		; (ldr fp, [sp], #4)
   18184:	bx	lr
   18188:	push	{fp}		; (str fp, [sp, #-4]!)
   1818c:	add	fp, sp, #0
   18190:	sub	sp, sp, #20
   18194:	str	r0, [fp, #-16]
   18198:	str	r1, [fp, #-20]	; 0xffffffec
   1819c:	mov	r3, #0
   181a0:	str	r3, [fp, #-8]
   181a4:	b	181f4 <__assert_fail@plt+0x6cb0>
   181a8:	ldr	r3, [fp, #-8]
   181ac:	lsl	r3, r3, #2
   181b0:	ldr	r2, [fp, #-16]
   181b4:	add	r3, r2, r3
   181b8:	ldr	r1, [r3]
   181bc:	ldr	r3, [fp, #-8]
   181c0:	lsl	r3, r3, #2
   181c4:	ldr	r2, [fp, #-20]	; 0xffffffec
   181c8:	add	r3, r2, r3
   181cc:	ldr	r2, [r3]
   181d0:	ldr	r3, [fp, #-8]
   181d4:	lsl	r3, r3, #2
   181d8:	ldr	r0, [fp, #-16]
   181dc:	add	r3, r0, r3
   181e0:	and	r2, r2, r1
   181e4:	str	r2, [r3]
   181e8:	ldr	r3, [fp, #-8]
   181ec:	add	r3, r3, #1
   181f0:	str	r3, [fp, #-8]
   181f4:	ldr	r3, [fp, #-8]
   181f8:	cmp	r3, #7
   181fc:	ble	181a8 <__assert_fail@plt+0x6c64>
   18200:	nop	{0}
   18204:	add	sp, fp, #0
   18208:	pop	{fp}		; (ldr fp, [sp], #4)
   1820c:	bx	lr
   18210:	push	{fp}		; (str fp, [sp, #-4]!)
   18214:	add	fp, sp, #0
   18218:	sub	sp, sp, #20
   1821c:	str	r0, [fp, #-16]
   18220:	str	r1, [fp, #-20]	; 0xffffffec
   18224:	ldr	r3, [fp, #-16]
   18228:	ldr	r3, [r3, #80]	; 0x50
   1822c:	cmp	r3, #1
   18230:	bne	1823c <__assert_fail@plt+0x6cf8>
   18234:	mov	r3, #1
   18238:	b	182a4 <__assert_fail@plt+0x6d60>
   1823c:	mov	r3, #1
   18240:	str	r3, [fp, #-8]
   18244:	b	1827c <__assert_fail@plt+0x6d38>
   18248:	ldr	r3, [fp, #-16]
   1824c:	ldr	r2, [r3, #8]
   18250:	ldr	r1, [fp, #-20]	; 0xffffffec
   18254:	ldr	r3, [fp, #-8]
   18258:	add	r3, r1, r3
   1825c:	lsl	r3, r3, #2
   18260:	add	r3, r2, r3
   18264:	ldr	r3, [r3]
   18268:	cmn	r3, #1
   1826c:	bne	1829c <__assert_fail@plt+0x6d58>
   18270:	ldr	r3, [fp, #-8]
   18274:	add	r3, r3, #1
   18278:	str	r3, [fp, #-8]
   1827c:	ldr	r2, [fp, #-20]	; 0xffffffec
   18280:	ldr	r3, [fp, #-8]
   18284:	add	r2, r2, r3
   18288:	ldr	r3, [fp, #-16]
   1828c:	ldr	r3, [r3, #28]
   18290:	cmp	r2, r3
   18294:	blt	18248 <__assert_fail@plt+0x6d04>
   18298:	b	182a0 <__assert_fail@plt+0x6d5c>
   1829c:	nop	{0}
   182a0:	ldr	r3, [fp, #-8]
   182a4:	mov	r0, r3
   182a8:	add	sp, fp, #0
   182ac:	pop	{fp}		; (ldr fp, [sp], #4)
   182b0:	bx	lr
   182b4:	push	{fp}		; (str fp, [sp, #-4]!)
   182b8:	add	fp, sp, #0
   182bc:	sub	sp, sp, #12
   182c0:	str	r0, [fp, #-8]
   182c4:	str	r1, [fp, #-12]
   182c8:	ldr	r3, [fp, #-8]
   182cc:	ldr	r3, [r3, #80]	; 0x50
   182d0:	cmp	r3, #1
   182d4:	bne	182f0 <__assert_fail@plt+0x6dac>
   182d8:	ldr	r3, [fp, #-8]
   182dc:	ldr	r2, [r3, #4]
   182e0:	ldr	r3, [fp, #-12]
   182e4:	add	r3, r2, r3
   182e8:	ldrb	r3, [r3]
   182ec:	b	18308 <__assert_fail@plt+0x6dc4>
   182f0:	ldr	r3, [fp, #-8]
   182f4:	ldr	r2, [r3, #8]
   182f8:	ldr	r3, [fp, #-12]
   182fc:	lsl	r3, r3, #2
   18300:	add	r3, r2, r3
   18304:	ldr	r3, [r3]
   18308:	mov	r0, r3
   1830c:	add	sp, fp, #0
   18310:	pop	{fp}		; (ldr fp, [sp], #4)
   18314:	bx	lr
   18318:	push	{fp}		; (str fp, [sp, #-4]!)
   1831c:	add	fp, sp, #0
   18320:	sub	sp, sp, #12
   18324:	str	r0, [fp, #-8]
   18328:	str	r1, [fp, #-12]
   1832c:	mov	r3, #1
   18330:	mov	r0, r3
   18334:	add	sp, fp, #0
   18338:	pop	{fp}		; (ldr fp, [sp], #4)
   1833c:	bx	lr
   18340:	str	fp, [sp, #-8]!
   18344:	str	lr, [sp, #4]
   18348:	add	fp, sp, #4
   1834c:	sub	sp, sp, #32
   18350:	str	r0, [fp, #-16]
   18354:	str	r1, [fp, #-20]	; 0xffffffec
   18358:	str	r2, [fp, #-24]	; 0xffffffe8
   1835c:	str	r3, [fp, #-28]	; 0xffffffe4
   18360:	ldr	r3, [fp, #12]
   18364:	ldr	r3, [r3, #92]	; 0x5c
   18368:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1836c:	cmp	r2, r3
   18370:	bge	18380 <__assert_fail@plt+0x6e3c>
   18374:	ldr	r3, [fp, #12]
   18378:	ldr	r3, [r3, #92]	; 0x5c
   1837c:	str	r3, [fp, #-28]	; 0xffffffe4
   18380:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18384:	add	r3, r3, #1
   18388:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1838c:	cmp	r2, r3
   18390:	movlt	r3, r2
   18394:	movge	r3, r3
   18398:	str	r3, [fp, #-8]
   1839c:	ldr	r3, [fp, #12]
   183a0:	str	r3, [sp, #4]
   183a4:	ldrb	r3, [fp, #8]
   183a8:	str	r3, [sp]
   183ac:	ldr	r3, [fp, #4]
   183b0:	ldr	r2, [fp, #-16]
   183b4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   183b8:	ldr	r0, [fp, #-20]	; 0xffffffec
   183bc:	bl	18860 <__assert_fail@plt+0x731c>
   183c0:	ldr	r1, [fp, #-8]
   183c4:	ldr	r0, [fp, #-16]
   183c8:	bl	186b4 <__assert_fail@plt+0x7170>
   183cc:	str	r0, [fp, #-12]
   183d0:	ldr	r3, [fp, #-12]
   183d4:	cmp	r3, #0
   183d8:	movne	r3, #1
   183dc:	moveq	r3, #0
   183e0:	uxtb	r3, r3
   183e4:	cmp	r3, #0
   183e8:	beq	183f4 <__assert_fail@plt+0x6eb0>
   183ec:	ldr	r3, [fp, #-12]
   183f0:	b	18490 <__assert_fail@plt+0x6f4c>
   183f4:	ldr	r3, [fp, #12]
   183f8:	add	r2, r3, #96	; 0x60
   183fc:	ldr	r3, [fp, #-16]
   18400:	str	r2, [r3, #68]	; 0x44
   18404:	ldr	r3, [fp, #12]
   18408:	ldrb	r3, [r3, #88]	; 0x58
   1840c:	ubfx	r3, r3, #4, #1
   18410:	uxtb	r3, r3
   18414:	mov	r2, r3
   18418:	ldr	r3, [fp, #-16]
   1841c:	strb	r2, [r3, #78]	; 0x4e
   18420:	ldr	r3, [fp, #-16]
   18424:	ldrb	r3, [r3, #75]	; 0x4b
   18428:	cmp	r3, #0
   1842c:	beq	1843c <__assert_fail@plt+0x6ef8>
   18430:	ldr	r3, [fp, #-16]
   18434:	ldr	r3, [r3, #4]
   18438:	b	18440 <__assert_fail@plt+0x6efc>
   1843c:	ldr	r3, [fp, #-20]	; 0xffffffec
   18440:	ldr	r2, [fp, #-16]
   18444:	str	r3, [r2, #4]
   18448:	ldr	r3, [fp, #-16]
   1844c:	ldrb	r3, [r3, #75]	; 0x4b
   18450:	cmp	r3, #0
   18454:	bne	18470 <__assert_fail@plt+0x6f2c>
   18458:	ldr	r3, [fp, #12]
   1845c:	ldr	r3, [r3, #92]	; 0x5c
   18460:	cmp	r3, #1
   18464:	bgt	18470 <__assert_fail@plt+0x6f2c>
   18468:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1846c:	b	18474 <__assert_fail@plt+0x6f30>
   18470:	mov	r3, #0
   18474:	ldr	r2, [fp, #-16]
   18478:	str	r3, [r2, #28]
   1847c:	ldr	r3, [fp, #-16]
   18480:	ldr	r2, [r3, #28]
   18484:	ldr	r3, [fp, #-16]
   18488:	str	r2, [r3, #32]
   1848c:	mov	r3, #0
   18490:	mov	r0, r3
   18494:	sub	sp, fp, #4
   18498:	ldr	fp, [sp]
   1849c:	add	sp, sp, #4
   184a0:	pop	{pc}		; (ldr pc, [sp], #4)
   184a4:	str	fp, [sp, #-8]!
   184a8:	str	lr, [sp, #4]
   184ac:	add	fp, sp, #4
   184b0:	sub	sp, sp, #32
   184b4:	str	r0, [fp, #-16]
   184b8:	str	r1, [fp, #-20]	; 0xffffffec
   184bc:	str	r2, [fp, #-24]	; 0xffffffe8
   184c0:	str	r3, [fp, #-28]	; 0xffffffe4
   184c4:	mov	r2, #84	; 0x54
   184c8:	mov	r1, #0
   184cc:	ldr	r0, [fp, #-16]
   184d0:	bl	11448 <memset@plt>
   184d4:	ldr	r3, [fp, #8]
   184d8:	str	r3, [sp, #4]
   184dc:	ldrb	r3, [fp, #4]
   184e0:	str	r3, [sp]
   184e4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   184e8:	ldr	r2, [fp, #-16]
   184ec:	ldr	r1, [fp, #-24]	; 0xffffffe8
   184f0:	ldr	r0, [fp, #-20]	; 0xffffffec
   184f4:	bl	18860 <__assert_fail@plt+0x731c>
   184f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   184fc:	cmp	r3, #0
   18500:	ble	18540 <__assert_fail@plt+0x6ffc>
   18504:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18508:	add	r3, r3, #1
   1850c:	mov	r1, r3
   18510:	ldr	r0, [fp, #-16]
   18514:	bl	186b4 <__assert_fail@plt+0x7170>
   18518:	str	r0, [fp, #-8]
   1851c:	ldr	r3, [fp, #-8]
   18520:	cmp	r3, #0
   18524:	movne	r3, #1
   18528:	moveq	r3, #0
   1852c:	uxtb	r3, r3
   18530:	cmp	r3, #0
   18534:	beq	18540 <__assert_fail@plt+0x6ffc>
   18538:	ldr	r3, [fp, #-8]
   1853c:	b	186a0 <__assert_fail@plt+0x715c>
   18540:	ldr	r3, [fp, #-16]
   18544:	ldrb	r3, [r3, #75]	; 0x4b
   18548:	cmp	r3, #0
   1854c:	beq	1855c <__assert_fail@plt+0x7018>
   18550:	ldr	r3, [fp, #-16]
   18554:	ldr	r3, [r3, #4]
   18558:	b	18560 <__assert_fail@plt+0x701c>
   1855c:	ldr	r3, [fp, #-20]	; 0xffffffec
   18560:	ldr	r2, [fp, #-16]
   18564:	str	r3, [r2, #4]
   18568:	ldrb	r3, [fp, #4]
   1856c:	cmp	r3, #0
   18570:	beq	18638 <__assert_fail@plt+0x70f4>
   18574:	ldr	r3, [fp, #8]
   18578:	ldr	r3, [r3, #92]	; 0x5c
   1857c:	cmp	r3, #1
   18580:	ble	1862c <__assert_fail@plt+0x70e8>
   18584:	ldr	r0, [fp, #-16]
   18588:	bl	18ce4 <__assert_fail@plt+0x77a0>
   1858c:	str	r0, [fp, #-8]
   18590:	ldr	r3, [fp, #-8]
   18594:	cmp	r3, #0
   18598:	movne	r3, #1
   1859c:	moveq	r3, #0
   185a0:	uxtb	r3, r3
   185a4:	cmp	r3, #0
   185a8:	beq	185b4 <__assert_fail@plt+0x7070>
   185ac:	ldr	r3, [fp, #-8]
   185b0:	b	186a0 <__assert_fail@plt+0x715c>
   185b4:	ldr	r3, [fp, #-16]
   185b8:	ldr	r3, [r3, #32]
   185bc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   185c0:	cmp	r2, r3
   185c4:	ble	18690 <__assert_fail@plt+0x714c>
   185c8:	ldr	r3, [fp, #-16]
   185cc:	ldr	r2, [r3, #36]	; 0x24
   185d0:	ldr	r3, [fp, #-16]
   185d4:	ldr	r1, [r3, #28]
   185d8:	ldr	r3, [fp, #8]
   185dc:	ldr	r3, [r3, #92]	; 0x5c
   185e0:	add	r3, r1, r3
   185e4:	cmp	r2, r3
   185e8:	bgt	18698 <__assert_fail@plt+0x7154>
   185ec:	ldr	r3, [fp, #-16]
   185f0:	ldr	r3, [r3, #36]	; 0x24
   185f4:	lsl	r3, r3, #1
   185f8:	mov	r1, r3
   185fc:	ldr	r0, [fp, #-16]
   18600:	bl	186b4 <__assert_fail@plt+0x7170>
   18604:	str	r0, [fp, #-8]
   18608:	ldr	r3, [fp, #-8]
   1860c:	cmp	r3, #0
   18610:	movne	r3, #1
   18614:	moveq	r3, #0
   18618:	uxtb	r3, r3
   1861c:	cmp	r3, #0
   18620:	beq	18584 <__assert_fail@plt+0x7040>
   18624:	ldr	r3, [fp, #-8]
   18628:	b	186a0 <__assert_fail@plt+0x715c>
   1862c:	ldr	r0, [fp, #-16]
   18630:	bl	199d0 <__assert_fail@plt+0x848c>
   18634:	b	1869c <__assert_fail@plt+0x7158>
   18638:	ldr	r3, [fp, #8]
   1863c:	ldr	r3, [r3, #92]	; 0x5c
   18640:	cmp	r3, #1
   18644:	ble	18654 <__assert_fail@plt+0x7110>
   18648:	ldr	r0, [fp, #-16]
   1864c:	bl	18960 <__assert_fail@plt+0x741c>
   18650:	b	1869c <__assert_fail@plt+0x7158>
   18654:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18658:	cmp	r3, #0
   1865c:	beq	1866c <__assert_fail@plt+0x7128>
   18660:	ldr	r0, [fp, #-16]
   18664:	bl	19adc <__assert_fail@plt+0x8598>
   18668:	b	1869c <__assert_fail@plt+0x7158>
   1866c:	ldr	r3, [fp, #-16]
   18670:	ldr	r2, [r3, #36]	; 0x24
   18674:	ldr	r3, [fp, #-16]
   18678:	str	r2, [r3, #28]
   1867c:	ldr	r3, [fp, #-16]
   18680:	ldr	r2, [r3, #36]	; 0x24
   18684:	ldr	r3, [fp, #-16]
   18688:	str	r2, [r3, #32]
   1868c:	b	1869c <__assert_fail@plt+0x7158>
   18690:	nop	{0}
   18694:	b	1869c <__assert_fail@plt+0x7158>
   18698:	nop	{0}
   1869c:	mov	r3, #0
   186a0:	mov	r0, r3
   186a4:	sub	sp, fp, #4
   186a8:	ldr	fp, [sp]
   186ac:	add	sp, sp, #4
   186b0:	pop	{pc}		; (ldr pc, [sp], #4)
   186b4:	str	fp, [sp, #-8]!
   186b8:	str	lr, [sp, #4]
   186bc:	add	fp, sp, #4
   186c0:	sub	sp, sp, #24
   186c4:	str	r0, [fp, #-24]	; 0xffffffe8
   186c8:	str	r1, [fp, #-28]	; 0xffffffe4
   186cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   186d0:	ldr	r3, [r3, #80]	; 0x50
   186d4:	cmp	r3, #1
   186d8:	ble	187e0 <__assert_fail@plt+0x729c>
   186dc:	mov	r3, #4
   186e0:	str	r3, [fp, #-8]
   186e4:	mvn	r2, #0
   186e8:	ldr	r3, [fp, #-8]
   186ec:	udiv	r3, r2, r3
   186f0:	cmp	r3, #0
   186f4:	blt	18708 <__assert_fail@plt+0x71c4>
   186f8:	mvn	r2, #0
   186fc:	ldr	r3, [fp, #-8]
   18700:	udiv	r3, r2, r3
   18704:	b	1870c <__assert_fail@plt+0x71c8>
   18708:	mvn	r3, #-2147483648	; 0x80000000
   1870c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   18710:	cmp	r3, r2
   18714:	movcc	r3, #1
   18718:	movcs	r3, #0
   1871c:	uxtb	r3, r3
   18720:	cmp	r3, #0
   18724:	beq	18730 <__assert_fail@plt+0x71ec>
   18728:	mov	r3, #12
   1872c:	b	1884c <__assert_fail@plt+0x7308>
   18730:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18734:	ldr	r2, [r3, #8]
   18738:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1873c:	lsl	r3, r3, #2
   18740:	mov	r1, r3
   18744:	mov	r0, r2
   18748:	bl	33c30 <__assert_fail@plt+0x226ec>
   1874c:	str	r0, [fp, #-12]
   18750:	ldr	r3, [fp, #-12]
   18754:	cmp	r3, #0
   18758:	moveq	r3, #1
   1875c:	movne	r3, #0
   18760:	uxtb	r3, r3
   18764:	cmp	r3, #0
   18768:	beq	18774 <__assert_fail@plt+0x7230>
   1876c:	mov	r3, #12
   18770:	b	1884c <__assert_fail@plt+0x7308>
   18774:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18778:	ldr	r2, [fp, #-12]
   1877c:	str	r2, [r3, #8]
   18780:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18784:	ldr	r3, [r3, #12]
   18788:	cmp	r3, #0
   1878c:	beq	187e0 <__assert_fail@plt+0x729c>
   18790:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18794:	ldr	r2, [r3, #12]
   18798:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1879c:	lsl	r3, r3, #2
   187a0:	mov	r1, r3
   187a4:	mov	r0, r2
   187a8:	bl	33c30 <__assert_fail@plt+0x226ec>
   187ac:	str	r0, [fp, #-16]
   187b0:	ldr	r3, [fp, #-16]
   187b4:	cmp	r3, #0
   187b8:	moveq	r3, #1
   187bc:	movne	r3, #0
   187c0:	uxtb	r3, r3
   187c4:	cmp	r3, #0
   187c8:	beq	187d4 <__assert_fail@plt+0x7290>
   187cc:	mov	r3, #12
   187d0:	b	1884c <__assert_fail@plt+0x7308>
   187d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   187d8:	ldr	r2, [fp, #-16]
   187dc:	str	r2, [r3, #12]
   187e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   187e4:	ldrb	r3, [r3, #75]	; 0x4b
   187e8:	cmp	r3, #0
   187ec:	beq	1883c <__assert_fail@plt+0x72f8>
   187f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   187f4:	ldr	r3, [r3, #4]
   187f8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   187fc:	mov	r1, r2
   18800:	mov	r0, r3
   18804:	bl	33c30 <__assert_fail@plt+0x226ec>
   18808:	str	r0, [fp, #-20]	; 0xffffffec
   1880c:	ldr	r3, [fp, #-20]	; 0xffffffec
   18810:	cmp	r3, #0
   18814:	moveq	r3, #1
   18818:	movne	r3, #0
   1881c:	uxtb	r3, r3
   18820:	cmp	r3, #0
   18824:	beq	18830 <__assert_fail@plt+0x72ec>
   18828:	mov	r3, #12
   1882c:	b	1884c <__assert_fail@plt+0x7308>
   18830:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18834:	ldr	r2, [fp, #-20]	; 0xffffffec
   18838:	str	r2, [r3, #4]
   1883c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18840:	ldr	r2, [fp, #-28]	; 0xffffffe4
   18844:	str	r2, [r3, #36]	; 0x24
   18848:	mov	r3, #0
   1884c:	mov	r0, r3
   18850:	sub	sp, fp, #4
   18854:	ldr	fp, [sp]
   18858:	add	sp, sp, #4
   1885c:	pop	{pc}		; (ldr pc, [sp], #4)
   18860:	push	{fp}		; (str fp, [sp, #-4]!)
   18864:	add	fp, sp, #0
   18868:	sub	sp, sp, #20
   1886c:	str	r0, [fp, #-8]
   18870:	str	r1, [fp, #-12]
   18874:	str	r2, [fp, #-16]
   18878:	str	r3, [fp, #-20]	; 0xffffffec
   1887c:	ldr	r3, [fp, #-16]
   18880:	ldr	r2, [fp, #-8]
   18884:	str	r2, [r3]
   18888:	ldr	r3, [fp, #-16]
   1888c:	ldr	r2, [fp, #-12]
   18890:	str	r2, [r3, #48]	; 0x30
   18894:	ldr	r3, [fp, #-16]
   18898:	ldr	r2, [fp, #-12]
   1889c:	str	r2, [r3, #44]	; 0x2c
   188a0:	ldr	r3, [fp, #-16]
   188a4:	ldr	r2, [fp, #-20]	; 0xffffffec
   188a8:	str	r2, [r3, #64]	; 0x40
   188ac:	ldrb	r2, [fp, #4]
   188b0:	ldr	r3, [fp, #-16]
   188b4:	strb	r2, [r3, #72]	; 0x48
   188b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   188bc:	cmp	r3, #0
   188c0:	bne	188d0 <__assert_fail@plt+0x738c>
   188c4:	ldrb	r3, [fp, #4]
   188c8:	cmp	r3, #0
   188cc:	beq	188d8 <__assert_fail@plt+0x7394>
   188d0:	mov	r3, #1
   188d4:	b	188dc <__assert_fail@plt+0x7398>
   188d8:	mov	r3, #0
   188dc:	uxtb	r2, r3
   188e0:	ldr	r3, [fp, #-16]
   188e4:	strb	r2, [r3, #75]	; 0x4b
   188e8:	ldr	r3, [fp, #8]
   188ec:	ldr	r2, [r3, #92]	; 0x5c
   188f0:	ldr	r3, [fp, #-16]
   188f4:	str	r2, [r3, #80]	; 0x50
   188f8:	ldr	r3, [fp, #8]
   188fc:	ldrb	r3, [r3, #88]	; 0x58
   18900:	ubfx	r3, r3, #2, #1
   18904:	uxtb	r3, r3
   18908:	mov	r2, r3
   1890c:	ldr	r3, [fp, #-16]
   18910:	strb	r2, [r3, #73]	; 0x49
   18914:	ldr	r3, [fp, #8]
   18918:	ldrb	r3, [r3, #88]	; 0x58
   1891c:	ubfx	r3, r3, #3, #1
   18920:	uxtb	r3, r3
   18924:	mov	r2, r3
   18928:	ldr	r3, [fp, #-16]
   1892c:	strb	r2, [r3, #74]	; 0x4a
   18930:	ldr	r3, [fp, #-16]
   18934:	ldr	r2, [r3, #48]	; 0x30
   18938:	ldr	r3, [fp, #-16]
   1893c:	str	r2, [r3, #56]	; 0x38
   18940:	ldr	r3, [fp, #-16]
   18944:	ldr	r2, [r3, #56]	; 0x38
   18948:	ldr	r3, [fp, #-16]
   1894c:	str	r2, [r3, #52]	; 0x34
   18950:	nop	{0}
   18954:	add	sp, fp, #0
   18958:	pop	{fp}		; (ldr fp, [sp], #4)
   1895c:	bx	lr
   18960:	str	fp, [sp, #-8]!
   18964:	str	lr, [sp, #4]
   18968:	add	fp, sp, #4
   1896c:	sub	sp, sp, #112	; 0x70
   18970:	str	r0, [fp, #-112]	; 0xffffff90
   18974:	ldr	r3, [fp, #-112]	; 0xffffff90
   18978:	ldr	r2, [r3, #36]	; 0x24
   1897c:	ldr	r3, [fp, #-112]	; 0xffffff90
   18980:	ldr	r3, [r3, #48]	; 0x30
   18984:	cmp	r2, r3
   18988:	movlt	r3, r2
   1898c:	movge	r3, r3
   18990:	str	r3, [fp, #-24]	; 0xffffffe8
   18994:	ldr	r3, [fp, #-112]	; 0xffffff90
   18998:	ldr	r3, [r3, #28]
   1899c:	str	r3, [fp, #-8]
   189a0:	b	18ca8 <__assert_fail@plt+0x7764>
   189a4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   189a8:	ldr	r3, [fp, #-8]
   189ac:	sub	r3, r2, r3
   189b0:	str	r3, [fp, #-28]	; 0xffffffe4
   189b4:	ldr	r3, [fp, #-112]	; 0xffffff90
   189b8:	sub	r1, fp, #104	; 0x68
   189bc:	add	r3, r3, #16
   189c0:	ldrd	r2, [r3]
   189c4:	strd	r2, [r1]
   189c8:	ldr	r3, [fp, #-112]	; 0xffffff90
   189cc:	ldr	r3, [r3, #64]	; 0x40
   189d0:	cmp	r3, #0
   189d4:	movne	r3, #1
   189d8:	moveq	r3, #0
   189dc:	uxtb	r3, r3
   189e0:	cmp	r3, #0
   189e4:	beq	18aa4 <__assert_fail@plt+0x7560>
   189e8:	mov	r3, #0
   189ec:	str	r3, [fp, #-20]	; 0xffffffec
   189f0:	b	18a74 <__assert_fail@plt+0x7530>
   189f4:	ldr	r3, [fp, #-112]	; 0xffffff90
   189f8:	ldr	r3, [r3]
   189fc:	ldr	r2, [fp, #-112]	; 0xffffff90
   18a00:	ldr	r1, [r2, #24]
   18a04:	ldr	r2, [fp, #-8]
   18a08:	add	r1, r1, r2
   18a0c:	ldr	r2, [fp, #-20]	; 0xffffffec
   18a10:	add	r2, r1, r2
   18a14:	add	r3, r3, r2
   18a18:	ldrb	r3, [r3]
   18a1c:	str	r3, [fp, #-32]	; 0xffffffe0
   18a20:	ldr	r3, [fp, #-112]	; 0xffffff90
   18a24:	ldr	r2, [r3, #64]	; 0x40
   18a28:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18a2c:	add	r2, r2, r3
   18a30:	ldr	r3, [fp, #-112]	; 0xffffff90
   18a34:	ldr	r3, [r3, #4]
   18a38:	ldr	r0, [fp, #-8]
   18a3c:	ldr	r1, [fp, #-20]	; 0xffffffec
   18a40:	add	r1, r0, r1
   18a44:	add	r3, r3, r1
   18a48:	ldrb	r2, [r2]
   18a4c:	strb	r2, [r3]
   18a50:	ldrb	r1, [r3]
   18a54:	sub	r2, fp, #96	; 0x60
   18a58:	ldr	r3, [fp, #-20]	; 0xffffffec
   18a5c:	add	r3, r2, r3
   18a60:	mov	r2, r1
   18a64:	strb	r2, [r3]
   18a68:	ldr	r3, [fp, #-20]	; 0xffffffec
   18a6c:	add	r3, r3, #1
   18a70:	str	r3, [fp, #-20]	; 0xffffffec
   18a74:	ldr	r3, [fp, #-112]	; 0xffffff90
   18a78:	ldr	r3, [r3, #80]	; 0x50
   18a7c:	ldr	r2, [fp, #-20]	; 0xffffffec
   18a80:	cmp	r2, r3
   18a84:	bge	18a98 <__assert_fail@plt+0x7554>
   18a88:	ldr	r2, [fp, #-20]	; 0xffffffec
   18a8c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18a90:	cmp	r2, r3
   18a94:	blt	189f4 <__assert_fail@plt+0x74b0>
   18a98:	sub	r3, fp, #96	; 0x60
   18a9c:	str	r3, [fp, #-16]
   18aa0:	b	18ac8 <__assert_fail@plt+0x7584>
   18aa4:	ldr	r3, [fp, #-112]	; 0xffffff90
   18aa8:	ldr	r2, [r3]
   18aac:	ldr	r3, [fp, #-112]	; 0xffffff90
   18ab0:	ldr	r3, [r3, #24]
   18ab4:	mov	r1, r3
   18ab8:	ldr	r3, [fp, #-8]
   18abc:	add	r3, r1, r3
   18ac0:	add	r3, r2, r3
   18ac4:	str	r3, [fp, #-16]
   18ac8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   18acc:	ldr	r3, [fp, #-112]	; 0xffffff90
   18ad0:	add	r3, r3, #16
   18ad4:	sub	r0, fp, #108	; 0x6c
   18ad8:	ldr	r1, [fp, #-16]
   18adc:	bl	34944 <__assert_fail@plt+0x23400>
   18ae0:	str	r0, [fp, #-12]
   18ae4:	ldr	r3, [fp, #-12]
   18ae8:	cmn	r3, #1
   18aec:	moveq	r3, #1
   18af0:	movne	r3, #0
   18af4:	uxtb	r3, r3
   18af8:	cmp	r3, #0
   18afc:	bne	18b1c <__assert_fail@plt+0x75d8>
   18b00:	ldr	r3, [fp, #-12]
   18b04:	cmp	r3, #0
   18b08:	moveq	r3, #1
   18b0c:	movne	r3, #0
   18b10:	uxtb	r3, r3
   18b14:	cmp	r3, #0
   18b18:	beq	18b24 <__assert_fail@plt+0x75e0>
   18b1c:	mov	r3, #1
   18b20:	b	18b28 <__assert_fail@plt+0x75e4>
   18b24:	mov	r3, #0
   18b28:	cmp	r3, #0
   18b2c:	bne	18b88 <__assert_fail@plt+0x7644>
   18b30:	ldr	r3, [fp, #-12]
   18b34:	cmn	r3, #2
   18b38:	moveq	r3, #1
   18b3c:	movne	r3, #0
   18b40:	uxtb	r3, r3
   18b44:	cmp	r3, #0
   18b48:	beq	18b7c <__assert_fail@plt+0x7638>
   18b4c:	ldr	r3, [fp, #-112]	; 0xffffff90
   18b50:	ldr	r2, [r3, #36]	; 0x24
   18b54:	ldr	r3, [fp, #-112]	; 0xffffff90
   18b58:	ldr	r3, [r3, #48]	; 0x30
   18b5c:	cmp	r2, r3
   18b60:	movge	r3, #1
   18b64:	movlt	r3, #0
   18b68:	uxtb	r3, r3
   18b6c:	cmp	r3, #0
   18b70:	beq	18b7c <__assert_fail@plt+0x7638>
   18b74:	mov	r3, #1
   18b78:	b	18b80 <__assert_fail@plt+0x763c>
   18b7c:	mov	r3, #0
   18b80:	cmp	r3, #0
   18b84:	beq	18c04 <__assert_fail@plt+0x76c0>
   18b88:	mov	r3, #1
   18b8c:	str	r3, [fp, #-12]
   18b90:	ldr	r3, [fp, #-112]	; 0xffffff90
   18b94:	ldr	r3, [r3]
   18b98:	ldr	r2, [fp, #-112]	; 0xffffff90
   18b9c:	ldr	r1, [r2, #24]
   18ba0:	ldr	r2, [fp, #-8]
   18ba4:	add	r2, r1, r2
   18ba8:	add	r3, r3, r2
   18bac:	ldrb	r3, [r3]
   18bb0:	str	r3, [fp, #-108]	; 0xffffff94
   18bb4:	ldr	r3, [fp, #-112]	; 0xffffff90
   18bb8:	ldr	r3, [r3, #64]	; 0x40
   18bbc:	cmp	r3, #0
   18bc0:	movne	r3, #1
   18bc4:	moveq	r3, #0
   18bc8:	uxtb	r3, r3
   18bcc:	cmp	r3, #0
   18bd0:	beq	18bec <__assert_fail@plt+0x76a8>
   18bd4:	ldr	r3, [fp, #-112]	; 0xffffff90
   18bd8:	ldr	r2, [r3, #64]	; 0x40
   18bdc:	ldr	r3, [fp, #-108]	; 0xffffff94
   18be0:	add	r3, r2, r3
   18be4:	ldrb	r3, [r3]
   18be8:	str	r3, [fp, #-108]	; 0xffffff94
   18bec:	ldr	r3, [fp, #-112]	; 0xffffff90
   18bf0:	add	r1, r3, #16
   18bf4:	sub	r3, fp, #104	; 0x68
   18bf8:	ldrd	r2, [r3]
   18bfc:	strd	r2, [r1]
   18c00:	b	18c38 <__assert_fail@plt+0x76f4>
   18c04:	ldr	r3, [fp, #-12]
   18c08:	cmn	r3, #2
   18c0c:	moveq	r3, #1
   18c10:	movne	r3, #0
   18c14:	uxtb	r3, r3
   18c18:	cmp	r3, #0
   18c1c:	beq	18c38 <__assert_fail@plt+0x76f4>
   18c20:	ldr	r3, [fp, #-112]	; 0xffffff90
   18c24:	add	r1, r3, #16
   18c28:	sub	r3, fp, #104	; 0x68
   18c2c:	ldrd	r2, [r3]
   18c30:	strd	r2, [r1]
   18c34:	b	18cb8 <__assert_fail@plt+0x7774>
   18c38:	ldr	r3, [fp, #-112]	; 0xffffff90
   18c3c:	ldr	r2, [r3, #8]
   18c40:	ldr	r3, [fp, #-8]
   18c44:	add	r1, r3, #1
   18c48:	str	r1, [fp, #-8]
   18c4c:	lsl	r3, r3, #2
   18c50:	add	r3, r2, r3
   18c54:	ldr	r2, [fp, #-108]	; 0xffffff94
   18c58:	str	r2, [r3]
   18c5c:	ldr	r2, [fp, #-8]
   18c60:	ldr	r3, [fp, #-12]
   18c64:	add	r3, r2, r3
   18c68:	sub	r3, r3, #1
   18c6c:	str	r3, [fp, #-28]	; 0xffffffe4
   18c70:	b	18c98 <__assert_fail@plt+0x7754>
   18c74:	ldr	r3, [fp, #-112]	; 0xffffff90
   18c78:	ldr	r2, [r3, #8]
   18c7c:	ldr	r3, [fp, #-8]
   18c80:	add	r1, r3, #1
   18c84:	str	r1, [fp, #-8]
   18c88:	lsl	r3, r3, #2
   18c8c:	add	r3, r2, r3
   18c90:	mvn	r2, #0
   18c94:	str	r2, [r3]
   18c98:	ldr	r2, [fp, #-8]
   18c9c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18ca0:	cmp	r2, r3
   18ca4:	blt	18c74 <__assert_fail@plt+0x7730>
   18ca8:	ldr	r2, [fp, #-8]
   18cac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18cb0:	cmp	r2, r3
   18cb4:	blt	189a4 <__assert_fail@plt+0x7460>
   18cb8:	ldr	r3, [fp, #-112]	; 0xffffff90
   18cbc:	ldr	r2, [fp, #-8]
   18cc0:	str	r2, [r3, #28]
   18cc4:	ldr	r3, [fp, #-112]	; 0xffffff90
   18cc8:	ldr	r2, [fp, #-8]
   18ccc:	str	r2, [r3, #32]
   18cd0:	nop	{0}
   18cd4:	sub	sp, fp, #4
   18cd8:	ldr	fp, [sp]
   18cdc:	add	sp, sp, #4
   18ce0:	pop	{pc}		; (ldr pc, [sp], #4)
   18ce4:	str	fp, [sp, #-8]!
   18ce8:	str	lr, [sp, #4]
   18cec:	add	fp, sp, #4
   18cf0:	sub	sp, sp, #160	; 0xa0
   18cf4:	str	r0, [fp, #-160]	; 0xffffff60
   18cf8:	ldr	r3, [fp, #-160]	; 0xffffff60
   18cfc:	ldr	r3, [r3, #28]
   18d00:	str	r3, [fp, #-12]
   18d04:	ldr	r3, [fp, #-160]	; 0xffffff60
   18d08:	ldr	r2, [r3, #36]	; 0x24
   18d0c:	ldr	r3, [fp, #-160]	; 0xffffff60
   18d10:	ldr	r3, [r3, #48]	; 0x30
   18d14:	cmp	r2, r3
   18d18:	movlt	r3, r2
   18d1c:	movge	r3, r3
   18d20:	str	r3, [fp, #-16]
   18d24:	ldr	r3, [fp, #-160]	; 0xffffff60
   18d28:	ldrb	r3, [r3, #74]	; 0x4a
   18d2c:	cmp	r3, #0
   18d30:	bne	190d0 <__assert_fail@plt+0x7b8c>
   18d34:	ldr	r3, [fp, #-160]	; 0xffffff60
   18d38:	ldr	r3, [r3, #64]	; 0x40
   18d3c:	cmp	r3, #0
   18d40:	bne	190d0 <__assert_fail@plt+0x7b8c>
   18d44:	ldr	r3, [fp, #-160]	; 0xffffff60
   18d48:	ldrb	r3, [r3, #76]	; 0x4c
   18d4c:	cmp	r3, #0
   18d50:	bne	190d0 <__assert_fail@plt+0x7b8c>
   18d54:	b	190a0 <__assert_fail@plt+0x7b5c>
   18d58:	ldr	r3, [fp, #-160]	; 0xffffff60
   18d5c:	ldr	r3, [r3]
   18d60:	ldr	r2, [fp, #-160]	; 0xffffff60
   18d64:	ldr	r1, [r2, #24]
   18d68:	ldr	r2, [fp, #-12]
   18d6c:	add	r2, r1, r2
   18d70:	add	r3, r3, r2
   18d74:	ldrb	r3, [r3]
   18d78:	strb	r3, [fp, #-37]	; 0xffffffdb
   18d7c:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   18d80:	bic	r3, r3, #127	; 0x7f
   18d84:	cmp	r3, #0
   18d88:	bne	18e10 <__assert_fail@plt+0x78cc>
   18d8c:	ldr	r3, [fp, #-160]	; 0xffffff60
   18d90:	add	r3, r3, #16
   18d94:	mov	r0, r3
   18d98:	bl	11280 <mbsinit@plt>
   18d9c:	mov	r3, r0
   18da0:	cmp	r3, #0
   18da4:	beq	18e10 <__assert_fail@plt+0x78cc>
   18da8:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   18dac:	mov	r0, r3
   18db0:	bl	11514 <towupper@plt>
   18db4:	str	r0, [fp, #-44]	; 0xffffffd4
   18db8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   18dbc:	bic	r3, r3, #127	; 0x7f
   18dc0:	cmp	r3, #0
   18dc4:	bne	18e10 <__assert_fail@plt+0x78cc>
   18dc8:	ldr	r3, [fp, #-160]	; 0xffffff60
   18dcc:	ldr	r2, [r3, #4]
   18dd0:	ldr	r3, [fp, #-12]
   18dd4:	add	r3, r2, r3
   18dd8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   18ddc:	uxtb	r2, r2
   18de0:	strb	r2, [r3]
   18de4:	ldr	r3, [fp, #-160]	; 0xffffff60
   18de8:	ldr	r2, [r3, #8]
   18dec:	ldr	r3, [fp, #-12]
   18df0:	lsl	r3, r3, #2
   18df4:	add	r3, r2, r3
   18df8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   18dfc:	str	r2, [r3]
   18e00:	ldr	r3, [fp, #-12]
   18e04:	add	r3, r3, #1
   18e08:	str	r3, [fp, #-12]
   18e0c:	b	190a0 <__assert_fail@plt+0x7b5c>
   18e10:	ldr	r2, [fp, #-16]
   18e14:	ldr	r3, [fp, #-12]
   18e18:	sub	r3, r2, r3
   18e1c:	str	r3, [fp, #-48]	; 0xffffffd0
   18e20:	ldr	r3, [fp, #-160]	; 0xffffff60
   18e24:	sub	r1, fp, #80	; 0x50
   18e28:	add	r3, r3, #16
   18e2c:	ldrd	r2, [r3]
   18e30:	strd	r2, [r1]
   18e34:	ldr	r3, [fp, #-160]	; 0xffffff60
   18e38:	ldr	r2, [r3]
   18e3c:	ldr	r3, [fp, #-160]	; 0xffffff60
   18e40:	ldr	r3, [r3, #24]
   18e44:	mov	r1, r3
   18e48:	ldr	r3, [fp, #-12]
   18e4c:	add	r3, r1, r3
   18e50:	add	r1, r2, r3
   18e54:	ldr	r2, [fp, #-48]	; 0xffffffd0
   18e58:	ldr	r3, [fp, #-160]	; 0xffffff60
   18e5c:	add	r3, r3, #16
   18e60:	sub	r0, fp, #148	; 0x94
   18e64:	bl	34944 <__assert_fail@plt+0x23400>
   18e68:	str	r0, [fp, #-52]	; 0xffffffcc
   18e6c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   18e70:	cmp	r3, #0
   18e74:	movne	r3, #1
   18e78:	moveq	r3, #0
   18e7c:	uxtb	r3, r3
   18e80:	cmp	r3, #0
   18e84:	beq	18fdc <__assert_fail@plt+0x7a98>
   18e88:	ldr	r3, [fp, #-52]	; 0xffffffcc
   18e8c:	cmn	r3, #3
   18e90:	movls	r3, #1
   18e94:	movhi	r3, #0
   18e98:	uxtb	r3, r3
   18e9c:	cmp	r3, #0
   18ea0:	beq	18fdc <__assert_fail@plt+0x7a98>
   18ea4:	ldr	r3, [fp, #-148]	; 0xffffff6c
   18ea8:	mov	r0, r3
   18eac:	bl	11514 <towupper@plt>
   18eb0:	str	r0, [fp, #-56]	; 0xffffffc8
   18eb4:	ldr	r3, [fp, #-148]	; 0xffffff6c
   18eb8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   18ebc:	cmp	r2, r3
   18ec0:	beq	18f2c <__assert_fail@plt+0x79e8>
   18ec4:	sub	r2, fp, #80	; 0x50
   18ec8:	sub	r3, fp, #144	; 0x90
   18ecc:	ldr	r1, [fp, #-56]	; 0xffffffc8
   18ed0:	mov	r0, r3
   18ed4:	bl	111c0 <wcrtomb@plt>
   18ed8:	str	r0, [fp, #-60]	; 0xffffffc4
   18edc:	ldr	r2, [fp, #-52]	; 0xffffffcc
   18ee0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   18ee4:	cmp	r2, r3
   18ee8:	moveq	r3, #1
   18eec:	movne	r3, #0
   18ef0:	uxtb	r3, r3
   18ef4:	cmp	r3, #0
   18ef8:	beq	18f20 <__assert_fail@plt+0x79dc>
   18efc:	ldr	r3, [fp, #-160]	; 0xffffff60
   18f00:	ldr	r2, [r3, #4]
   18f04:	ldr	r3, [fp, #-12]
   18f08:	add	r3, r2, r3
   18f0c:	sub	r1, fp, #144	; 0x90
   18f10:	ldr	r2, [fp, #-52]	; 0xffffffcc
   18f14:	mov	r0, r3
   18f18:	bl	11250 <memcpy@plt>
   18f1c:	b	18f68 <__assert_fail@plt+0x7a24>
   18f20:	ldr	r3, [fp, #-12]
   18f24:	str	r3, [fp, #-8]
   18f28:	b	190e4 <__assert_fail@plt+0x7ba0>
   18f2c:	ldr	r3, [fp, #-160]	; 0xffffff60
   18f30:	ldr	r2, [r3, #4]
   18f34:	ldr	r3, [fp, #-12]
   18f38:	add	r0, r2, r3
   18f3c:	ldr	r3, [fp, #-160]	; 0xffffff60
   18f40:	ldr	r2, [r3]
   18f44:	ldr	r3, [fp, #-160]	; 0xffffff60
   18f48:	ldr	r3, [r3, #24]
   18f4c:	mov	r1, r3
   18f50:	ldr	r3, [fp, #-12]
   18f54:	add	r3, r1, r3
   18f58:	add	r3, r2, r3
   18f5c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   18f60:	mov	r1, r3
   18f64:	bl	11250 <memcpy@plt>
   18f68:	ldr	r3, [fp, #-160]	; 0xffffff60
   18f6c:	ldr	r2, [r3, #8]
   18f70:	ldr	r3, [fp, #-12]
   18f74:	add	r1, r3, #1
   18f78:	str	r1, [fp, #-12]
   18f7c:	lsl	r3, r3, #2
   18f80:	add	r3, r2, r3
   18f84:	ldr	r2, [fp, #-56]	; 0xffffffc8
   18f88:	str	r2, [r3]
   18f8c:	ldr	r2, [fp, #-12]
   18f90:	ldr	r3, [fp, #-52]	; 0xffffffcc
   18f94:	add	r3, r2, r3
   18f98:	sub	r3, r3, #1
   18f9c:	str	r3, [fp, #-48]	; 0xffffffd0
   18fa0:	b	18fc8 <__assert_fail@plt+0x7a84>
   18fa4:	ldr	r3, [fp, #-160]	; 0xffffff60
   18fa8:	ldr	r2, [r3, #8]
   18fac:	ldr	r3, [fp, #-12]
   18fb0:	add	r1, r3, #1
   18fb4:	str	r1, [fp, #-12]
   18fb8:	lsl	r3, r3, #2
   18fbc:	add	r3, r2, r3
   18fc0:	mvn	r2, #0
   18fc4:	str	r2, [r3]
   18fc8:	ldr	r2, [fp, #-12]
   18fcc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   18fd0:	cmp	r2, r3
   18fd4:	blt	18fa4 <__assert_fail@plt+0x7a60>
   18fd8:	b	190a0 <__assert_fail@plt+0x7b5c>
   18fdc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   18fe0:	cmn	r3, #1
   18fe4:	beq	19018 <__assert_fail@plt+0x7ad4>
   18fe8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   18fec:	cmp	r3, #0
   18ff0:	beq	19018 <__assert_fail@plt+0x7ad4>
   18ff4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   18ff8:	cmn	r3, #2
   18ffc:	bne	19088 <__assert_fail@plt+0x7b44>
   19000:	ldr	r3, [fp, #-160]	; 0xffffff60
   19004:	ldr	r2, [r3, #36]	; 0x24
   19008:	ldr	r3, [fp, #-160]	; 0xffffff60
   1900c:	ldr	r3, [r3, #48]	; 0x30
   19010:	cmp	r2, r3
   19014:	blt	19088 <__assert_fail@plt+0x7b44>
   19018:	ldr	r3, [fp, #-160]	; 0xffffff60
   1901c:	ldr	r2, [r3, #4]
   19020:	ldr	r3, [fp, #-12]
   19024:	add	r3, r2, r3
   19028:	ldrb	r2, [fp, #-37]	; 0xffffffdb
   1902c:	strb	r2, [r3]
   19030:	ldr	r3, [fp, #-160]	; 0xffffff60
   19034:	ldr	r2, [r3, #8]
   19038:	ldr	r3, [fp, #-12]
   1903c:	add	r1, r3, #1
   19040:	str	r1, [fp, #-12]
   19044:	lsl	r3, r3, #2
   19048:	add	r3, r2, r3
   1904c:	ldrb	r2, [fp, #-37]	; 0xffffffdb
   19050:	str	r2, [r3]
   19054:	ldr	r3, [fp, #-52]	; 0xffffffcc
   19058:	cmn	r3, #1
   1905c:	moveq	r3, #1
   19060:	movne	r3, #0
   19064:	uxtb	r3, r3
   19068:	cmp	r3, #0
   1906c:	beq	190a0 <__assert_fail@plt+0x7b5c>
   19070:	ldr	r3, [fp, #-160]	; 0xffffff60
   19074:	add	r1, r3, #16
   19078:	sub	r3, fp, #80	; 0x50
   1907c:	ldrd	r2, [r3]
   19080:	strd	r2, [r1]
   19084:	b	190a0 <__assert_fail@plt+0x7b5c>
   19088:	ldr	r3, [fp, #-160]	; 0xffffff60
   1908c:	add	r1, r3, #16
   19090:	sub	r3, fp, #80	; 0x50
   19094:	ldrd	r2, [r3]
   19098:	strd	r2, [r1]
   1909c:	b	190b0 <__assert_fail@plt+0x7b6c>
   190a0:	ldr	r2, [fp, #-12]
   190a4:	ldr	r3, [fp, #-16]
   190a8:	cmp	r2, r3
   190ac:	blt	18d58 <__assert_fail@plt+0x7814>
   190b0:	ldr	r3, [fp, #-160]	; 0xffffff60
   190b4:	ldr	r2, [fp, #-12]
   190b8:	str	r2, [r3, #28]
   190bc:	ldr	r3, [fp, #-160]	; 0xffffff60
   190c0:	ldr	r2, [fp, #-12]
   190c4:	str	r2, [r3, #32]
   190c8:	mov	r3, #0
   190cc:	b	1981c <__assert_fail@plt+0x82d8>
   190d0:	ldr	r3, [fp, #-160]	; 0xffffff60
   190d4:	ldr	r3, [r3, #32]
   190d8:	str	r3, [fp, #-8]
   190dc:	b	197f0 <__assert_fail@plt+0x82ac>
   190e0:	nop	{0}
   190e4:	ldr	r2, [fp, #-16]
   190e8:	ldr	r3, [fp, #-12]
   190ec:	sub	r3, r2, r3
   190f0:	str	r3, [fp, #-48]	; 0xffffffd0
   190f4:	ldr	r3, [fp, #-160]	; 0xffffff60
   190f8:	sub	r1, fp, #80	; 0x50
   190fc:	add	r3, r3, #16
   19100:	ldrd	r2, [r3]
   19104:	strd	r2, [r1]
   19108:	ldr	r3, [fp, #-160]	; 0xffffff60
   1910c:	ldr	r3, [r3, #64]	; 0x40
   19110:	cmp	r3, #0
   19114:	movne	r3, #1
   19118:	moveq	r3, #0
   1911c:	uxtb	r3, r3
   19120:	cmp	r3, #0
   19124:	beq	191c4 <__assert_fail@plt+0x7c80>
   19128:	mov	r3, #0
   1912c:	str	r3, [fp, #-24]	; 0xffffffe8
   19130:	b	19194 <__assert_fail@plt+0x7c50>
   19134:	ldr	r3, [fp, #-160]	; 0xffffff60
   19138:	ldr	r3, [r3]
   1913c:	ldr	r2, [fp, #-160]	; 0xffffff60
   19140:	ldr	r1, [r2, #24]
   19144:	ldr	r2, [fp, #-8]
   19148:	add	r1, r1, r2
   1914c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19150:	add	r2, r1, r2
   19154:	add	r3, r3, r2
   19158:	ldrb	r3, [r3]
   1915c:	str	r3, [fp, #-64]	; 0xffffffc0
   19160:	ldr	r3, [fp, #-160]	; 0xffffff60
   19164:	ldr	r2, [r3, #64]	; 0x40
   19168:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1916c:	add	r3, r2, r3
   19170:	ldrb	r1, [r3]
   19174:	sub	r2, fp, #144	; 0x90
   19178:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1917c:	add	r3, r2, r3
   19180:	mov	r2, r1
   19184:	strb	r2, [r3]
   19188:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1918c:	add	r3, r3, #1
   19190:	str	r3, [fp, #-24]	; 0xffffffe8
   19194:	ldr	r3, [fp, #-160]	; 0xffffff60
   19198:	ldr	r3, [r3, #80]	; 0x50
   1919c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   191a0:	cmp	r2, r3
   191a4:	bge	191b8 <__assert_fail@plt+0x7c74>
   191a8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   191ac:	ldr	r3, [fp, #-48]	; 0xffffffd0
   191b0:	cmp	r2, r3
   191b4:	blt	19134 <__assert_fail@plt+0x7bf0>
   191b8:	sub	r3, fp, #144	; 0x90
   191bc:	str	r3, [fp, #-20]	; 0xffffffec
   191c0:	b	191e8 <__assert_fail@plt+0x7ca4>
   191c4:	ldr	r3, [fp, #-160]	; 0xffffff60
   191c8:	ldr	r2, [r3]
   191cc:	ldr	r3, [fp, #-160]	; 0xffffff60
   191d0:	ldr	r3, [r3, #24]
   191d4:	mov	r1, r3
   191d8:	ldr	r3, [fp, #-8]
   191dc:	add	r3, r1, r3
   191e0:	add	r3, r2, r3
   191e4:	str	r3, [fp, #-20]	; 0xffffffec
   191e8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   191ec:	ldr	r3, [fp, #-160]	; 0xffffff60
   191f0:	add	r3, r3, #16
   191f4:	sub	r0, fp, #152	; 0x98
   191f8:	ldr	r1, [fp, #-20]	; 0xffffffec
   191fc:	bl	34944 <__assert_fail@plt+0x23400>
   19200:	str	r0, [fp, #-52]	; 0xffffffcc
   19204:	ldr	r3, [fp, #-52]	; 0xffffffcc
   19208:	cmp	r3, #0
   1920c:	movne	r3, #1
   19210:	moveq	r3, #0
   19214:	uxtb	r3, r3
   19218:	cmp	r3, #0
   1921c:	beq	1967c <__assert_fail@plt+0x8138>
   19220:	ldr	r3, [fp, #-52]	; 0xffffffcc
   19224:	cmn	r3, #3
   19228:	movls	r3, #1
   1922c:	movhi	r3, #0
   19230:	uxtb	r3, r3
   19234:	cmp	r3, #0
   19238:	beq	1967c <__assert_fail@plt+0x8138>
   1923c:	ldr	r3, [fp, #-152]	; 0xffffff68
   19240:	mov	r0, r3
   19244:	bl	11514 <towupper@plt>
   19248:	str	r0, [fp, #-68]	; 0xffffffbc
   1924c:	ldr	r3, [fp, #-152]	; 0xffffff68
   19250:	ldr	r2, [fp, #-68]	; 0xffffffbc
   19254:	cmp	r2, r3
   19258:	beq	19560 <__assert_fail@plt+0x801c>
   1925c:	sub	r2, fp, #80	; 0x50
   19260:	sub	r3, fp, #144	; 0x90
   19264:	ldr	r1, [fp, #-68]	; 0xffffffbc
   19268:	mov	r0, r3
   1926c:	bl	111c0 <wcrtomb@plt>
   19270:	str	r0, [fp, #-72]	; 0xffffffb8
   19274:	ldr	r2, [fp, #-52]	; 0xffffffcc
   19278:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1927c:	cmp	r2, r3
   19280:	moveq	r3, #1
   19284:	movne	r3, #0
   19288:	uxtb	r3, r3
   1928c:	cmp	r3, #0
   19290:	beq	192b8 <__assert_fail@plt+0x7d74>
   19294:	ldr	r3, [fp, #-160]	; 0xffffff60
   19298:	ldr	r2, [r3, #4]
   1929c:	ldr	r3, [fp, #-12]
   192a0:	add	r3, r2, r3
   192a4:	sub	r1, fp, #144	; 0x90
   192a8:	ldr	r2, [fp, #-52]	; 0xffffffcc
   192ac:	mov	r0, r3
   192b0:	bl	11250 <memcpy@plt>
   192b4:	b	19580 <__assert_fail@plt+0x803c>
   192b8:	ldr	r3, [fp, #-72]	; 0xffffffb8
   192bc:	cmn	r3, #1
   192c0:	beq	1953c <__assert_fail@plt+0x7ff8>
   192c4:	ldr	r2, [fp, #-12]
   192c8:	ldr	r3, [fp, #-72]	; 0xffffffb8
   192cc:	add	r3, r2, r3
   192d0:	ldr	r2, [fp, #-160]	; 0xffffff60
   192d4:	ldr	r2, [r2, #36]	; 0x24
   192d8:	cmp	r3, r2
   192dc:	bls	192f8 <__assert_fail@plt+0x7db4>
   192e0:	ldr	r3, [fp, #-160]	; 0xffffff60
   192e4:	add	r1, r3, #16
   192e8:	sub	r3, fp, #80	; 0x50
   192ec:	ldrd	r2, [r3]
   192f0:	strd	r2, [r1]
   192f4:	b	19800 <__assert_fail@plt+0x82bc>
   192f8:	ldr	r3, [fp, #-160]	; 0xffffff60
   192fc:	ldr	r3, [r3, #12]
   19300:	cmp	r3, #0
   19304:	bne	19344 <__assert_fail@plt+0x7e00>
   19308:	ldr	r3, [fp, #-160]	; 0xffffff60
   1930c:	ldr	r3, [r3, #36]	; 0x24
   19310:	lsl	r3, r3, #2
   19314:	mov	r0, r3
   19318:	bl	33ba0 <__assert_fail@plt+0x2265c>
   1931c:	mov	r3, r0
   19320:	mov	r2, r3
   19324:	ldr	r3, [fp, #-160]	; 0xffffff60
   19328:	str	r2, [r3, #12]
   1932c:	ldr	r3, [fp, #-160]	; 0xffffff60
   19330:	ldr	r3, [r3, #12]
   19334:	cmp	r3, #0
   19338:	bne	19344 <__assert_fail@plt+0x7e00>
   1933c:	mov	r3, #12
   19340:	b	1981c <__assert_fail@plt+0x82d8>
   19344:	ldr	r3, [fp, #-160]	; 0xffffff60
   19348:	ldrb	r3, [r3, #76]	; 0x4c
   1934c:	cmp	r3, #0
   19350:	bne	193a4 <__assert_fail@plt+0x7e60>
   19354:	mov	r3, #0
   19358:	str	r3, [fp, #-28]	; 0xffffffe4
   1935c:	b	19388 <__assert_fail@plt+0x7e44>
   19360:	ldr	r3, [fp, #-160]	; 0xffffff60
   19364:	ldr	r2, [r3, #12]
   19368:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1936c:	lsl	r3, r3, #2
   19370:	add	r3, r2, r3
   19374:	ldr	r2, [fp, #-28]	; 0xffffffe4
   19378:	str	r2, [r3]
   1937c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19380:	add	r3, r3, #1
   19384:	str	r3, [fp, #-28]	; 0xffffffe4
   19388:	ldr	r3, [fp, #-12]
   1938c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   19390:	cmp	r2, r3
   19394:	bcc	19360 <__assert_fail@plt+0x7e1c>
   19398:	ldr	r3, [fp, #-160]	; 0xffffff60
   1939c:	mov	r2, #1
   193a0:	strb	r2, [r3, #76]	; 0x4c
   193a4:	ldr	r3, [fp, #-160]	; 0xffffff60
   193a8:	ldr	r2, [r3, #4]
   193ac:	ldr	r3, [fp, #-12]
   193b0:	add	r3, r2, r3
   193b4:	sub	r1, fp, #144	; 0x90
   193b8:	ldr	r2, [fp, #-72]	; 0xffffffb8
   193bc:	mov	r0, r3
   193c0:	bl	11250 <memcpy@plt>
   193c4:	ldr	r3, [fp, #-160]	; 0xffffff60
   193c8:	ldr	r2, [r3, #8]
   193cc:	ldr	r3, [fp, #-12]
   193d0:	lsl	r3, r3, #2
   193d4:	add	r3, r2, r3
   193d8:	ldr	r2, [fp, #-68]	; 0xffffffbc
   193dc:	str	r2, [r3]
   193e0:	ldr	r3, [fp, #-160]	; 0xffffff60
   193e4:	ldr	r2, [r3, #12]
   193e8:	ldr	r3, [fp, #-12]
   193ec:	lsl	r3, r3, #2
   193f0:	add	r3, r2, r3
   193f4:	ldr	r2, [fp, #-8]
   193f8:	str	r2, [r3]
   193fc:	mov	r3, #1
   19400:	str	r3, [fp, #-28]	; 0xffffffe4
   19404:	b	19484 <__assert_fail@plt+0x7f40>
   19408:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1940c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   19410:	cmp	r2, r3
   19414:	bcc	19424 <__assert_fail@plt+0x7ee0>
   19418:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1941c:	sub	r3, r3, #1
   19420:	b	19428 <__assert_fail@plt+0x7ee4>
   19424:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19428:	ldr	r2, [fp, #-8]
   1942c:	add	r0, r3, r2
   19430:	ldr	r3, [fp, #-160]	; 0xffffff60
   19434:	ldr	r2, [r3, #12]
   19438:	ldr	r1, [fp, #-12]
   1943c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19440:	add	r3, r1, r3
   19444:	lsl	r3, r3, #2
   19448:	add	r3, r2, r3
   1944c:	mov	r2, r0
   19450:	str	r2, [r3]
   19454:	ldr	r3, [fp, #-160]	; 0xffffff60
   19458:	ldr	r2, [r3, #8]
   1945c:	ldr	r1, [fp, #-12]
   19460:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19464:	add	r3, r1, r3
   19468:	lsl	r3, r3, #2
   1946c:	add	r3, r2, r3
   19470:	mvn	r2, #0
   19474:	str	r2, [r3]
   19478:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1947c:	add	r3, r3, #1
   19480:	str	r3, [fp, #-28]	; 0xffffffe4
   19484:	ldr	r2, [fp, #-28]	; 0xffffffe4
   19488:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1948c:	cmp	r2, r3
   19490:	bcc	19408 <__assert_fail@plt+0x7ec4>
   19494:	ldr	r3, [fp, #-160]	; 0xffffff60
   19498:	ldr	r3, [r3, #48]	; 0x30
   1949c:	mov	r1, r3
   194a0:	ldr	r2, [fp, #-72]	; 0xffffffb8
   194a4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   194a8:	sub	r3, r2, r3
   194ac:	add	r3, r1, r3
   194b0:	mov	r2, r3
   194b4:	ldr	r3, [fp, #-160]	; 0xffffff60
   194b8:	str	r2, [r3, #48]	; 0x30
   194bc:	ldr	r3, [fp, #-160]	; 0xffffff60
   194c0:	ldr	r3, [r3, #52]	; 0x34
   194c4:	ldr	r2, [fp, #-8]
   194c8:	cmp	r2, r3
   194cc:	bge	194f8 <__assert_fail@plt+0x7fb4>
   194d0:	ldr	r3, [fp, #-160]	; 0xffffff60
   194d4:	ldr	r3, [r3, #56]	; 0x38
   194d8:	mov	r1, r3
   194dc:	ldr	r2, [fp, #-72]	; 0xffffffb8
   194e0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   194e4:	sub	r3, r2, r3
   194e8:	add	r3, r1, r3
   194ec:	mov	r2, r3
   194f0:	ldr	r3, [fp, #-160]	; 0xffffff60
   194f4:	str	r2, [r3, #56]	; 0x38
   194f8:	ldr	r3, [fp, #-160]	; 0xffffff60
   194fc:	ldr	r2, [r3, #36]	; 0x24
   19500:	ldr	r3, [fp, #-160]	; 0xffffff60
   19504:	ldr	r3, [r3, #48]	; 0x30
   19508:	cmp	r2, r3
   1950c:	movlt	r3, r2
   19510:	movge	r3, r3
   19514:	str	r3, [fp, #-16]
   19518:	ldr	r2, [fp, #-12]
   1951c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   19520:	add	r3, r2, r3
   19524:	str	r3, [fp, #-12]
   19528:	ldr	r2, [fp, #-8]
   1952c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   19530:	add	r3, r2, r3
   19534:	str	r3, [fp, #-8]
   19538:	b	197f0 <__assert_fail@plt+0x82ac>
   1953c:	ldr	r3, [fp, #-160]	; 0xffffff60
   19540:	ldr	r2, [r3, #4]
   19544:	ldr	r3, [fp, #-12]
   19548:	add	r3, r2, r3
   1954c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   19550:	ldr	r1, [fp, #-20]	; 0xffffffec
   19554:	mov	r0, r3
   19558:	bl	11250 <memcpy@plt>
   1955c:	b	19580 <__assert_fail@plt+0x803c>
   19560:	ldr	r3, [fp, #-160]	; 0xffffff60
   19564:	ldr	r2, [r3, #4]
   19568:	ldr	r3, [fp, #-12]
   1956c:	add	r3, r2, r3
   19570:	ldr	r2, [fp, #-52]	; 0xffffffcc
   19574:	ldr	r1, [fp, #-20]	; 0xffffffec
   19578:	mov	r0, r3
   1957c:	bl	11250 <memcpy@plt>
   19580:	ldr	r3, [fp, #-160]	; 0xffffff60
   19584:	ldrb	r3, [r3, #76]	; 0x4c
   19588:	cmp	r3, #0
   1958c:	movne	r3, #1
   19590:	moveq	r3, #0
   19594:	uxtb	r3, r3
   19598:	cmp	r3, #0
   1959c:	beq	195f8 <__assert_fail@plt+0x80b4>
   195a0:	mov	r3, #0
   195a4:	str	r3, [fp, #-32]	; 0xffffffe0
   195a8:	b	195e8 <__assert_fail@plt+0x80a4>
   195ac:	ldr	r2, [fp, #-8]
   195b0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   195b4:	add	r0, r2, r3
   195b8:	ldr	r3, [fp, #-160]	; 0xffffff60
   195bc:	ldr	r2, [r3, #12]
   195c0:	ldr	r1, [fp, #-12]
   195c4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   195c8:	add	r3, r1, r3
   195cc:	lsl	r3, r3, #2
   195d0:	add	r3, r2, r3
   195d4:	mov	r2, r0
   195d8:	str	r2, [r3]
   195dc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   195e0:	add	r3, r3, #1
   195e4:	str	r3, [fp, #-32]	; 0xffffffe0
   195e8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   195ec:	ldr	r3, [fp, #-52]	; 0xffffffcc
   195f0:	cmp	r2, r3
   195f4:	bcc	195ac <__assert_fail@plt+0x8068>
   195f8:	ldr	r2, [fp, #-8]
   195fc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   19600:	add	r3, r2, r3
   19604:	str	r3, [fp, #-8]
   19608:	ldr	r3, [fp, #-160]	; 0xffffff60
   1960c:	ldr	r2, [r3, #8]
   19610:	ldr	r3, [fp, #-12]
   19614:	add	r1, r3, #1
   19618:	str	r1, [fp, #-12]
   1961c:	lsl	r3, r3, #2
   19620:	add	r3, r2, r3
   19624:	ldr	r2, [fp, #-68]	; 0xffffffbc
   19628:	str	r2, [r3]
   1962c:	ldr	r2, [fp, #-12]
   19630:	ldr	r3, [fp, #-52]	; 0xffffffcc
   19634:	add	r3, r2, r3
   19638:	sub	r3, r3, #1
   1963c:	str	r3, [fp, #-48]	; 0xffffffd0
   19640:	b	19668 <__assert_fail@plt+0x8124>
   19644:	ldr	r3, [fp, #-160]	; 0xffffff60
   19648:	ldr	r2, [r3, #8]
   1964c:	ldr	r3, [fp, #-12]
   19650:	add	r1, r3, #1
   19654:	str	r1, [fp, #-12]
   19658:	lsl	r3, r3, #2
   1965c:	add	r3, r2, r3
   19660:	mvn	r2, #0
   19664:	str	r2, [r3]
   19668:	ldr	r2, [fp, #-12]
   1966c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   19670:	cmp	r2, r3
   19674:	blt	19644 <__assert_fail@plt+0x8100>
   19678:	b	197f0 <__assert_fail@plt+0x82ac>
   1967c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   19680:	cmn	r3, #1
   19684:	beq	196b8 <__assert_fail@plt+0x8174>
   19688:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1968c:	cmp	r3, #0
   19690:	beq	196b8 <__assert_fail@plt+0x8174>
   19694:	ldr	r3, [fp, #-52]	; 0xffffffcc
   19698:	cmn	r3, #2
   1969c:	bne	197d0 <__assert_fail@plt+0x828c>
   196a0:	ldr	r3, [fp, #-160]	; 0xffffff60
   196a4:	ldr	r2, [r3, #36]	; 0x24
   196a8:	ldr	r3, [fp, #-160]	; 0xffffff60
   196ac:	ldr	r3, [r3, #48]	; 0x30
   196b0:	cmp	r2, r3
   196b4:	blt	197d0 <__assert_fail@plt+0x828c>
   196b8:	ldr	r3, [fp, #-160]	; 0xffffff60
   196bc:	ldr	r3, [r3]
   196c0:	ldr	r2, [fp, #-160]	; 0xffffff60
   196c4:	ldr	r1, [r2, #24]
   196c8:	ldr	r2, [fp, #-8]
   196cc:	add	r2, r1, r2
   196d0:	add	r3, r3, r2
   196d4:	ldrb	r3, [r3]
   196d8:	str	r3, [fp, #-36]	; 0xffffffdc
   196dc:	ldr	r3, [fp, #-160]	; 0xffffff60
   196e0:	ldr	r3, [r3, #64]	; 0x40
   196e4:	cmp	r3, #0
   196e8:	movne	r3, #1
   196ec:	moveq	r3, #0
   196f0:	uxtb	r3, r3
   196f4:	cmp	r3, #0
   196f8:	beq	19714 <__assert_fail@plt+0x81d0>
   196fc:	ldr	r3, [fp, #-160]	; 0xffffff60
   19700:	ldr	r2, [r3, #64]	; 0x40
   19704:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19708:	add	r3, r2, r3
   1970c:	ldrb	r3, [r3]
   19710:	str	r3, [fp, #-36]	; 0xffffffdc
   19714:	ldr	r3, [fp, #-160]	; 0xffffff60
   19718:	ldr	r2, [r3, #4]
   1971c:	ldr	r3, [fp, #-12]
   19720:	add	r3, r2, r3
   19724:	ldr	r2, [fp, #-36]	; 0xffffffdc
   19728:	uxtb	r2, r2
   1972c:	strb	r2, [r3]
   19730:	ldr	r3, [fp, #-160]	; 0xffffff60
   19734:	ldrb	r3, [r3, #76]	; 0x4c
   19738:	cmp	r3, #0
   1973c:	movne	r3, #1
   19740:	moveq	r3, #0
   19744:	uxtb	r3, r3
   19748:	cmp	r3, #0
   1974c:	beq	1976c <__assert_fail@plt+0x8228>
   19750:	ldr	r3, [fp, #-160]	; 0xffffff60
   19754:	ldr	r2, [r3, #12]
   19758:	ldr	r3, [fp, #-12]
   1975c:	lsl	r3, r3, #2
   19760:	add	r3, r2, r3
   19764:	ldr	r2, [fp, #-8]
   19768:	str	r2, [r3]
   1976c:	ldr	r3, [fp, #-8]
   19770:	add	r3, r3, #1
   19774:	str	r3, [fp, #-8]
   19778:	ldr	r3, [fp, #-160]	; 0xffffff60
   1977c:	ldr	r2, [r3, #8]
   19780:	ldr	r3, [fp, #-12]
   19784:	add	r1, r3, #1
   19788:	str	r1, [fp, #-12]
   1978c:	lsl	r3, r3, #2
   19790:	add	r3, r2, r3
   19794:	ldr	r2, [fp, #-36]	; 0xffffffdc
   19798:	str	r2, [r3]
   1979c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   197a0:	cmn	r3, #1
   197a4:	moveq	r3, #1
   197a8:	movne	r3, #0
   197ac:	uxtb	r3, r3
   197b0:	cmp	r3, #0
   197b4:	beq	197ec <__assert_fail@plt+0x82a8>
   197b8:	ldr	r3, [fp, #-160]	; 0xffffff60
   197bc:	add	r1, r3, #16
   197c0:	sub	r3, fp, #80	; 0x50
   197c4:	ldrd	r2, [r3]
   197c8:	strd	r2, [r1]
   197cc:	b	197ec <__assert_fail@plt+0x82a8>
   197d0:	ldr	r3, [fp, #-160]	; 0xffffff60
   197d4:	add	r1, r3, #16
   197d8:	sub	r3, fp, #80	; 0x50
   197dc:	ldrd	r2, [r3]
   197e0:	strd	r2, [r1]
   197e4:	nop	{0}
   197e8:	b	19800 <__assert_fail@plt+0x82bc>
   197ec:	nop	{0}
   197f0:	ldr	r2, [fp, #-12]
   197f4:	ldr	r3, [fp, #-16]
   197f8:	cmp	r2, r3
   197fc:	blt	190e0 <__assert_fail@plt+0x7b9c>
   19800:	ldr	r3, [fp, #-160]	; 0xffffff60
   19804:	ldr	r2, [fp, #-12]
   19808:	str	r2, [r3, #28]
   1980c:	ldr	r3, [fp, #-160]	; 0xffffff60
   19810:	ldr	r2, [fp, #-8]
   19814:	str	r2, [r3, #32]
   19818:	mov	r3, #0
   1981c:	mov	r0, r3
   19820:	sub	sp, fp, #4
   19824:	ldr	fp, [sp]
   19828:	add	sp, sp, #4
   1982c:	pop	{pc}		; (ldr pc, [sp], #4)
   19830:	str	fp, [sp, #-8]!
   19834:	str	lr, [sp, #4]
   19838:	add	fp, sp, #4
   1983c:	sub	sp, sp, #48	; 0x30
   19840:	str	r0, [fp, #-40]	; 0xffffffd8
   19844:	str	r1, [fp, #-44]	; 0xffffffd4
   19848:	str	r2, [fp, #-48]	; 0xffffffd0
   1984c:	mvn	r3, #0
   19850:	str	r3, [fp, #-16]
   19854:	ldr	r3, [fp, #-40]	; 0xffffffd8
   19858:	ldr	r2, [r3, #24]
   1985c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   19860:	ldr	r3, [r3, #32]
   19864:	add	r3, r2, r3
   19868:	str	r3, [fp, #-8]
   1986c:	b	1999c <__assert_fail@plt+0x8458>
   19870:	ldr	r3, [fp, #-40]	; 0xffffffd8
   19874:	ldr	r2, [r3, #44]	; 0x2c
   19878:	ldr	r3, [fp, #-8]
   1987c:	sub	r3, r2, r3
   19880:	str	r3, [fp, #-20]	; 0xffffffec
   19884:	ldr	r3, [fp, #-40]	; 0xffffffd8
   19888:	sub	r1, fp, #28
   1988c:	add	r3, r3, #16
   19890:	ldrd	r2, [r3]
   19894:	strd	r2, [r1]
   19898:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1989c:	ldr	r2, [r3]
   198a0:	ldr	r3, [fp, #-8]
   198a4:	add	r1, r2, r3
   198a8:	ldr	r2, [fp, #-20]	; 0xffffffec
   198ac:	ldr	r3, [fp, #-40]	; 0xffffffd8
   198b0:	add	r3, r3, #16
   198b4:	sub	r0, fp, #32
   198b8:	bl	34944 <__assert_fail@plt+0x23400>
   198bc:	str	r0, [fp, #-12]
   198c0:	ldr	r3, [fp, #-12]
   198c4:	cmn	r3, #2
   198c8:	moveq	r3, #1
   198cc:	movne	r3, #0
   198d0:	uxtb	r3, r3
   198d4:	cmp	r3, #0
   198d8:	bne	198f8 <__assert_fail@plt+0x83b4>
   198dc:	ldr	r3, [fp, #-12]
   198e0:	cmn	r3, #1
   198e4:	moveq	r3, #1
   198e8:	movne	r3, #0
   198ec:	uxtb	r3, r3
   198f0:	cmp	r3, #0
   198f4:	beq	19900 <__assert_fail@plt+0x83bc>
   198f8:	mov	r3, #1
   198fc:	b	19904 <__assert_fail@plt+0x83c0>
   19900:	mov	r3, #0
   19904:	cmp	r3, #0
   19908:	bne	19928 <__assert_fail@plt+0x83e4>
   1990c:	ldr	r3, [fp, #-12]
   19910:	cmp	r3, #0
   19914:	moveq	r3, #1
   19918:	movne	r3, #0
   1991c:	uxtb	r3, r3
   19920:	cmp	r3, #0
   19924:	beq	19984 <__assert_fail@plt+0x8440>
   19928:	ldr	r3, [fp, #-12]
   1992c:	cmp	r3, #0
   19930:	beq	19940 <__assert_fail@plt+0x83fc>
   19934:	ldr	r3, [fp, #-20]	; 0xffffffec
   19938:	cmp	r3, #0
   1993c:	bne	1994c <__assert_fail@plt+0x8408>
   19940:	mov	r3, #0
   19944:	str	r3, [fp, #-16]
   19948:	b	19964 <__assert_fail@plt+0x8420>
   1994c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   19950:	ldr	r2, [r3]
   19954:	ldr	r3, [fp, #-8]
   19958:	add	r3, r2, r3
   1995c:	ldrb	r3, [r3]
   19960:	str	r3, [fp, #-16]
   19964:	mov	r3, #1
   19968:	str	r3, [fp, #-12]
   1996c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   19970:	add	r1, r3, #16
   19974:	sub	r3, fp, #28
   19978:	ldrd	r2, [r3]
   1997c:	strd	r2, [r1]
   19980:	b	1998c <__assert_fail@plt+0x8448>
   19984:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19988:	str	r3, [fp, #-16]
   1998c:	ldr	r2, [fp, #-8]
   19990:	ldr	r3, [fp, #-12]
   19994:	add	r3, r2, r3
   19998:	str	r3, [fp, #-8]
   1999c:	ldr	r2, [fp, #-8]
   199a0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   199a4:	cmp	r2, r3
   199a8:	blt	19870 <__assert_fail@plt+0x832c>
   199ac:	ldr	r3, [fp, #-48]	; 0xffffffd0
   199b0:	ldr	r2, [fp, #-16]
   199b4:	str	r2, [r3]
   199b8:	ldr	r3, [fp, #-8]
   199bc:	mov	r0, r3
   199c0:	sub	sp, fp, #4
   199c4:	ldr	fp, [sp]
   199c8:	add	sp, sp, #4
   199cc:	pop	{pc}		; (ldr pc, [sp], #4)
   199d0:	str	fp, [sp, #-8]!
   199d4:	str	lr, [sp, #4]
   199d8:	add	fp, sp, #4
   199dc:	sub	sp, sp, #24
   199e0:	str	r0, [fp, #-24]	; 0xffffffe8
   199e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   199e8:	ldr	r2, [r3, #36]	; 0x24
   199ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   199f0:	ldr	r3, [r3, #48]	; 0x30
   199f4:	cmp	r2, r3
   199f8:	movlt	r3, r2
   199fc:	movge	r3, r3
   19a00:	str	r3, [fp, #-16]
   19a04:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19a08:	ldr	r3, [r3, #28]
   19a0c:	str	r3, [fp, #-8]
   19a10:	b	19aa0 <__assert_fail@plt+0x855c>
   19a14:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19a18:	ldr	r3, [r3]
   19a1c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19a20:	ldr	r1, [r2, #24]
   19a24:	ldr	r2, [fp, #-8]
   19a28:	add	r2, r1, r2
   19a2c:	add	r3, r3, r2
   19a30:	ldrb	r3, [r3]
   19a34:	str	r3, [fp, #-12]
   19a38:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19a3c:	ldr	r3, [r3, #64]	; 0x40
   19a40:	cmp	r3, #0
   19a44:	movne	r3, #1
   19a48:	moveq	r3, #0
   19a4c:	uxtb	r3, r3
   19a50:	cmp	r3, #0
   19a54:	beq	19a70 <__assert_fail@plt+0x852c>
   19a58:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19a5c:	ldr	r2, [r3, #64]	; 0x40
   19a60:	ldr	r3, [fp, #-12]
   19a64:	add	r3, r2, r3
   19a68:	ldrb	r3, [r3]
   19a6c:	str	r3, [fp, #-12]
   19a70:	ldr	r0, [fp, #-12]
   19a74:	bl	114c0 <toupper@plt>
   19a78:	mov	r1, r0
   19a7c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19a80:	ldr	r2, [r3, #4]
   19a84:	ldr	r3, [fp, #-8]
   19a88:	add	r3, r2, r3
   19a8c:	uxtb	r2, r1
   19a90:	strb	r2, [r3]
   19a94:	ldr	r3, [fp, #-8]
   19a98:	add	r3, r3, #1
   19a9c:	str	r3, [fp, #-8]
   19aa0:	ldr	r2, [fp, #-8]
   19aa4:	ldr	r3, [fp, #-16]
   19aa8:	cmp	r2, r3
   19aac:	blt	19a14 <__assert_fail@plt+0x84d0>
   19ab0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19ab4:	ldr	r2, [fp, #-8]
   19ab8:	str	r2, [r3, #28]
   19abc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19ac0:	ldr	r2, [fp, #-8]
   19ac4:	str	r2, [r3, #32]
   19ac8:	nop	{0}
   19acc:	sub	sp, fp, #4
   19ad0:	ldr	fp, [sp]
   19ad4:	add	sp, sp, #4
   19ad8:	pop	{pc}		; (ldr pc, [sp], #4)
   19adc:	push	{fp}		; (str fp, [sp, #-4]!)
   19ae0:	add	fp, sp, #0
   19ae4:	sub	sp, sp, #28
   19ae8:	str	r0, [fp, #-24]	; 0xffffffe8
   19aec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19af0:	ldr	r2, [r3, #36]	; 0x24
   19af4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19af8:	ldr	r3, [r3, #48]	; 0x30
   19afc:	cmp	r2, r3
   19b00:	movlt	r3, r2
   19b04:	movge	r3, r3
   19b08:	str	r3, [fp, #-12]
   19b0c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19b10:	ldr	r3, [r3, #28]
   19b14:	str	r3, [fp, #-8]
   19b18:	b	19b74 <__assert_fail@plt+0x8630>
   19b1c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19b20:	ldr	r3, [r3]
   19b24:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19b28:	ldr	r1, [r2, #24]
   19b2c:	ldr	r2, [fp, #-8]
   19b30:	add	r2, r1, r2
   19b34:	add	r3, r3, r2
   19b38:	ldrb	r3, [r3]
   19b3c:	str	r3, [fp, #-16]
   19b40:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19b44:	ldr	r2, [r3, #64]	; 0x40
   19b48:	ldr	r3, [fp, #-16]
   19b4c:	add	r2, r2, r3
   19b50:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19b54:	ldr	r1, [r3, #4]
   19b58:	ldr	r3, [fp, #-8]
   19b5c:	add	r3, r1, r3
   19b60:	ldrb	r2, [r2]
   19b64:	strb	r2, [r3]
   19b68:	ldr	r3, [fp, #-8]
   19b6c:	add	r3, r3, #1
   19b70:	str	r3, [fp, #-8]
   19b74:	ldr	r2, [fp, #-8]
   19b78:	ldr	r3, [fp, #-12]
   19b7c:	cmp	r2, r3
   19b80:	blt	19b1c <__assert_fail@plt+0x85d8>
   19b84:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19b88:	ldr	r2, [fp, #-8]
   19b8c:	str	r2, [r3, #28]
   19b90:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19b94:	ldr	r2, [fp, #-8]
   19b98:	str	r2, [r3, #32]
   19b9c:	nop	{0}
   19ba0:	add	sp, fp, #0
   19ba4:	pop	{fp}		; (ldr fp, [sp], #4)
   19ba8:	bx	lr
   19bac:	str	fp, [sp, #-8]!
   19bb0:	str	lr, [sp, #4]
   19bb4:	add	fp, sp, #4
   19bb8:	sub	sp, sp, #104	; 0x68
   19bbc:	str	r0, [fp, #-96]	; 0xffffffa0
   19bc0:	str	r1, [fp, #-100]	; 0xffffff9c
   19bc4:	str	r2, [fp, #-104]	; 0xffffff98
   19bc8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19bcc:	ldr	r3, [r3, #24]
   19bd0:	ldr	r2, [fp, #-100]	; 0xffffff9c
   19bd4:	cmp	r2, r3
   19bd8:	movge	r3, #1
   19bdc:	movlt	r3, #0
   19be0:	uxtb	r3, r3
   19be4:	cmp	r3, #0
   19be8:	beq	19c04 <__assert_fail@plt+0x86c0>
   19bec:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19bf0:	ldr	r3, [r3, #24]
   19bf4:	ldr	r2, [fp, #-100]	; 0xffffff9c
   19bf8:	sub	r3, r2, r3
   19bfc:	str	r3, [fp, #-8]
   19c00:	b	19cc8 <__assert_fail@plt+0x8784>
   19c04:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19c08:	ldr	r3, [r3, #80]	; 0x50
   19c0c:	cmp	r3, #1
   19c10:	ble	19c2c <__assert_fail@plt+0x86e8>
   19c14:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19c18:	add	r3, r3, #16
   19c1c:	mov	r2, #8
   19c20:	mov	r1, #0
   19c24:	mov	r0, r3
   19c28:	bl	11448 <memset@plt>
   19c2c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19c30:	ldr	r2, [r3, #44]	; 0x2c
   19c34:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19c38:	str	r2, [r3, #48]	; 0x30
   19c3c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19c40:	ldr	r2, [r3, #52]	; 0x34
   19c44:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19c48:	str	r2, [r3, #56]	; 0x38
   19c4c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19c50:	mov	r2, #0
   19c54:	str	r2, [r3, #28]
   19c58:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19c5c:	mov	r2, #0
   19c60:	str	r2, [r3, #24]
   19c64:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19c68:	mov	r2, #0
   19c6c:	str	r2, [r3, #32]
   19c70:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19c74:	mov	r2, #0
   19c78:	strb	r2, [r3, #76]	; 0x4c
   19c7c:	ldr	r3, [fp, #-104]	; 0xffffff98
   19c80:	and	r3, r3, #1
   19c84:	cmp	r3, #0
   19c88:	beq	19c94 <__assert_fail@plt+0x8750>
   19c8c:	mov	r2, #4
   19c90:	b	19c98 <__assert_fail@plt+0x8754>
   19c94:	mov	r2, #6
   19c98:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19c9c:	str	r2, [r3, #60]	; 0x3c
   19ca0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19ca4:	ldrb	r3, [r3, #75]	; 0x4b
   19ca8:	cmp	r3, #0
   19cac:	bne	19cc0 <__assert_fail@plt+0x877c>
   19cb0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19cb4:	ldr	r2, [r3]
   19cb8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19cbc:	str	r2, [r3, #4]
   19cc0:	ldr	r3, [fp, #-100]	; 0xffffff9c
   19cc4:	str	r3, [fp, #-8]
   19cc8:	ldr	r3, [fp, #-8]
   19ccc:	cmp	r3, #0
   19cd0:	movne	r3, #1
   19cd4:	moveq	r3, #0
   19cd8:	uxtb	r3, r3
   19cdc:	cmp	r3, #0
   19ce0:	beq	1a700 <__assert_fail@plt+0x91bc>
   19ce4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19ce8:	ldr	r3, [r3, #32]
   19cec:	ldr	r2, [fp, #-8]
   19cf0:	cmp	r2, r3
   19cf4:	movlt	r3, #1
   19cf8:	movge	r3, #0
   19cfc:	uxtb	r3, r3
   19d00:	cmp	r3, #0
   19d04:	beq	1a200 <__assert_fail@plt+0x8cbc>
   19d08:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19d0c:	ldrb	r3, [r3, #76]	; 0x4c
   19d10:	cmp	r3, #0
   19d14:	beq	1a114 <__assert_fail@plt+0x8bd0>
   19d18:	mov	r3, #0
   19d1c:	str	r3, [fp, #-12]
   19d20:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19d24:	ldr	r3, [r3, #28]
   19d28:	str	r3, [fp, #-16]
   19d2c:	ldr	r2, [fp, #-16]
   19d30:	ldr	r3, [fp, #-12]
   19d34:	add	r3, r2, r3
   19d38:	lsr	r2, r3, #31
   19d3c:	add	r3, r2, r3
   19d40:	asr	r3, r3, #1
   19d44:	str	r3, [fp, #-20]	; 0xffffffec
   19d48:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19d4c:	ldr	r2, [r3, #12]
   19d50:	ldr	r3, [fp, #-20]	; 0xffffffec
   19d54:	lsl	r3, r3, #2
   19d58:	add	r3, r2, r3
   19d5c:	ldr	r3, [r3]
   19d60:	ldr	r2, [fp, #-8]
   19d64:	cmp	r2, r3
   19d68:	bge	19d78 <__assert_fail@plt+0x8834>
   19d6c:	ldr	r3, [fp, #-20]	; 0xffffffec
   19d70:	str	r3, [fp, #-16]
   19d74:	b	19da8 <__assert_fail@plt+0x8864>
   19d78:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19d7c:	ldr	r2, [r3, #12]
   19d80:	ldr	r3, [fp, #-20]	; 0xffffffec
   19d84:	lsl	r3, r3, #2
   19d88:	add	r3, r2, r3
   19d8c:	ldr	r3, [r3]
   19d90:	ldr	r2, [fp, #-8]
   19d94:	cmp	r2, r3
   19d98:	ble	19dbc <__assert_fail@plt+0x8878>
   19d9c:	ldr	r3, [fp, #-20]	; 0xffffffec
   19da0:	add	r3, r3, #1
   19da4:	str	r3, [fp, #-12]
   19da8:	ldr	r2, [fp, #-12]
   19dac:	ldr	r3, [fp, #-16]
   19db0:	cmp	r2, r3
   19db4:	blt	19d2c <__assert_fail@plt+0x87e8>
   19db8:	b	19dc0 <__assert_fail@plt+0x887c>
   19dbc:	nop	{0}
   19dc0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19dc4:	ldr	r2, [r3, #12]
   19dc8:	ldr	r3, [fp, #-20]	; 0xffffffec
   19dcc:	lsl	r3, r3, #2
   19dd0:	add	r3, r2, r3
   19dd4:	ldr	r3, [r3]
   19dd8:	ldr	r2, [fp, #-8]
   19ddc:	cmp	r2, r3
   19de0:	ble	19df0 <__assert_fail@plt+0x88ac>
   19de4:	ldr	r3, [fp, #-20]	; 0xffffffec
   19de8:	add	r3, r3, #1
   19dec:	str	r3, [fp, #-20]	; 0xffffffec
   19df0:	ldr	r3, [fp, #-20]	; 0xffffffec
   19df4:	sub	r3, r3, #1
   19df8:	ldr	r2, [fp, #-104]	; 0xffffff98
   19dfc:	mov	r1, r3
   19e00:	ldr	r0, [fp, #-96]	; 0xffffffa0
   19e04:	bl	1ac18 <__assert_fail@plt+0x96d4>
   19e08:	mov	r2, r0
   19e0c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19e10:	str	r2, [r3, #60]	; 0x3c
   19e14:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19e18:	ldr	r3, [r3, #28]
   19e1c:	ldr	r2, [fp, #-8]
   19e20:	cmp	r2, r3
   19e24:	bge	19f64 <__assert_fail@plt+0x8a20>
   19e28:	ldr	r2, [fp, #-20]	; 0xffffffec
   19e2c:	ldr	r3, [fp, #-8]
   19e30:	cmp	r2, r3
   19e34:	bne	19f64 <__assert_fail@plt+0x8a20>
   19e38:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19e3c:	ldr	r2, [r3, #12]
   19e40:	ldr	r3, [fp, #-20]	; 0xffffffec
   19e44:	lsl	r3, r3, #2
   19e48:	add	r3, r2, r3
   19e4c:	ldr	r3, [r3]
   19e50:	ldr	r2, [fp, #-8]
   19e54:	cmp	r2, r3
   19e58:	bne	19f64 <__assert_fail@plt+0x8a20>
   19e5c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19e60:	ldr	r0, [r3, #8]
   19e64:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19e68:	ldr	r2, [r3, #8]
   19e6c:	ldr	r3, [fp, #-8]
   19e70:	lsl	r3, r3, #2
   19e74:	add	r1, r2, r3
   19e78:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19e7c:	ldr	r2, [r3, #28]
   19e80:	ldr	r3, [fp, #-8]
   19e84:	sub	r3, r2, r3
   19e88:	lsl	r3, r3, #2
   19e8c:	mov	r2, r3
   19e90:	bl	11220 <memmove@plt>
   19e94:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19e98:	ldr	r0, [r3, #4]
   19e9c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19ea0:	ldr	r2, [r3, #4]
   19ea4:	ldr	r3, [fp, #-8]
   19ea8:	add	r1, r2, r3
   19eac:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19eb0:	ldr	r2, [r3, #28]
   19eb4:	ldr	r3, [fp, #-8]
   19eb8:	sub	r3, r2, r3
   19ebc:	mov	r2, r3
   19ec0:	bl	11220 <memmove@plt>
   19ec4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19ec8:	ldr	r2, [r3, #28]
   19ecc:	ldr	r3, [fp, #-8]
   19ed0:	sub	r2, r2, r3
   19ed4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19ed8:	str	r2, [r3, #28]
   19edc:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19ee0:	ldr	r2, [r3, #32]
   19ee4:	ldr	r3, [fp, #-8]
   19ee8:	sub	r2, r2, r3
   19eec:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19ef0:	str	r2, [r3, #32]
   19ef4:	mov	r3, #0
   19ef8:	str	r3, [fp, #-12]
   19efc:	b	19f4c <__assert_fail@plt+0x8a08>
   19f00:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19f04:	ldr	r2, [r3, #12]
   19f08:	ldr	r1, [fp, #-12]
   19f0c:	ldr	r3, [fp, #-8]
   19f10:	add	r3, r1, r3
   19f14:	lsl	r3, r3, #2
   19f18:	add	r3, r2, r3
   19f1c:	ldr	r1, [r3]
   19f20:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19f24:	ldr	r2, [r3, #12]
   19f28:	ldr	r3, [fp, #-12]
   19f2c:	lsl	r3, r3, #2
   19f30:	add	r3, r2, r3
   19f34:	ldr	r2, [fp, #-8]
   19f38:	sub	r2, r1, r2
   19f3c:	str	r2, [r3]
   19f40:	ldr	r3, [fp, #-12]
   19f44:	add	r3, r3, #1
   19f48:	str	r3, [fp, #-12]
   19f4c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19f50:	ldr	r3, [r3, #28]
   19f54:	ldr	r2, [fp, #-12]
   19f58:	cmp	r2, r3
   19f5c:	blt	19f00 <__assert_fail@plt+0x89bc>
   19f60:	b	1a6d8 <__assert_fail@plt+0x9194>
   19f64:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19f68:	ldr	r2, [r3, #44]	; 0x2c
   19f6c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   19f70:	sub	r2, r2, r3
   19f74:	ldr	r3, [fp, #-8]
   19f78:	add	r2, r2, r3
   19f7c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19f80:	str	r2, [r3, #48]	; 0x30
   19f84:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19f88:	ldr	r2, [r3, #52]	; 0x34
   19f8c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   19f90:	sub	r2, r2, r3
   19f94:	ldr	r3, [fp, #-8]
   19f98:	add	r2, r2, r3
   19f9c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19fa0:	str	r2, [r3, #56]	; 0x38
   19fa4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19fa8:	mov	r2, #0
   19fac:	strb	r2, [r3, #76]	; 0x4c
   19fb0:	b	19fc0 <__assert_fail@plt+0x8a7c>
   19fb4:	ldr	r3, [fp, #-20]	; 0xffffffec
   19fb8:	sub	r3, r3, #1
   19fbc:	str	r3, [fp, #-20]	; 0xffffffec
   19fc0:	ldr	r3, [fp, #-20]	; 0xffffffec
   19fc4:	cmp	r3, #0
   19fc8:	ble	1a024 <__assert_fail@plt+0x8ae0>
   19fcc:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19fd0:	ldr	r2, [r3, #12]
   19fd4:	ldr	r3, [fp, #-20]	; 0xffffffec
   19fd8:	sub	r3, r3, #-1073741823	; 0xc0000001
   19fdc:	lsl	r3, r3, #2
   19fe0:	add	r3, r2, r3
   19fe4:	ldr	r3, [r3]
   19fe8:	ldr	r2, [fp, #-8]
   19fec:	cmp	r2, r3
   19ff0:	beq	19fb4 <__assert_fail@plt+0x8a70>
   19ff4:	b	1a024 <__assert_fail@plt+0x8ae0>
   19ff8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19ffc:	ldr	r2, [r3, #8]
   1a000:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a004:	lsl	r3, r3, #2
   1a008:	add	r3, r2, r3
   1a00c:	ldr	r3, [r3]
   1a010:	cmn	r3, #1
   1a014:	bne	1a03c <__assert_fail@plt+0x8af8>
   1a018:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a01c:	add	r3, r3, #1
   1a020:	str	r3, [fp, #-20]	; 0xffffffec
   1a024:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a028:	ldr	r3, [r3, #28]
   1a02c:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a030:	cmp	r2, r3
   1a034:	blt	19ff8 <__assert_fail@plt+0x8ab4>
   1a038:	b	1a040 <__assert_fail@plt+0x8afc>
   1a03c:	nop	{0}
   1a040:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a044:	ldr	r3, [r3, #28]
   1a048:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a04c:	cmp	r2, r3
   1a050:	bne	1a064 <__assert_fail@plt+0x8b20>
   1a054:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a058:	mov	r2, #0
   1a05c:	str	r2, [r3, #28]
   1a060:	b	1a100 <__assert_fail@plt+0x8bbc>
   1a064:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a068:	ldr	r2, [r3, #12]
   1a06c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a070:	lsl	r3, r3, #2
   1a074:	add	r3, r2, r3
   1a078:	ldr	r2, [r3]
   1a07c:	ldr	r3, [fp, #-8]
   1a080:	sub	r2, r2, r3
   1a084:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a088:	str	r2, [r3, #28]
   1a08c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a090:	ldr	r3, [r3, #28]
   1a094:	cmp	r3, #0
   1a098:	beq	1a100 <__assert_fail@plt+0x8bbc>
   1a09c:	mov	r3, #0
   1a0a0:	str	r3, [fp, #-12]
   1a0a4:	b	1a0d0 <__assert_fail@plt+0x8b8c>
   1a0a8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a0ac:	ldr	r2, [r3, #8]
   1a0b0:	ldr	r3, [fp, #-12]
   1a0b4:	lsl	r3, r3, #2
   1a0b8:	add	r3, r2, r3
   1a0bc:	mvn	r2, #0
   1a0c0:	str	r2, [r3]
   1a0c4:	ldr	r3, [fp, #-12]
   1a0c8:	add	r3, r3, #1
   1a0cc:	str	r3, [fp, #-12]
   1a0d0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a0d4:	ldr	r3, [r3, #28]
   1a0d8:	ldr	r2, [fp, #-12]
   1a0dc:	cmp	r2, r3
   1a0e0:	blt	1a0a8 <__assert_fail@plt+0x8b64>
   1a0e4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a0e8:	ldr	r0, [r3, #4]
   1a0ec:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a0f0:	ldr	r3, [r3, #28]
   1a0f4:	mov	r2, r3
   1a0f8:	mov	r1, #255	; 0xff
   1a0fc:	bl	11448 <memset@plt>
   1a100:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a104:	ldr	r2, [r3, #28]
   1a108:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a10c:	str	r2, [r3, #32]
   1a110:	b	1a6d8 <__assert_fail@plt+0x9194>
   1a114:	ldr	r3, [fp, #-8]
   1a118:	sub	r3, r3, #1
   1a11c:	ldr	r2, [fp, #-104]	; 0xffffff98
   1a120:	mov	r1, r3
   1a124:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1a128:	bl	1ac18 <__assert_fail@plt+0x96d4>
   1a12c:	mov	r2, r0
   1a130:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a134:	str	r2, [r3, #60]	; 0x3c
   1a138:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a13c:	ldr	r3, [r3, #80]	; 0x50
   1a140:	cmp	r3, #1
   1a144:	ble	1a180 <__assert_fail@plt+0x8c3c>
   1a148:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a14c:	ldr	r0, [r3, #8]
   1a150:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a154:	ldr	r2, [r3, #8]
   1a158:	ldr	r3, [fp, #-8]
   1a15c:	lsl	r3, r3, #2
   1a160:	add	r1, r2, r3
   1a164:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a168:	ldr	r2, [r3, #28]
   1a16c:	ldr	r3, [fp, #-8]
   1a170:	sub	r3, r2, r3
   1a174:	lsl	r3, r3, #2
   1a178:	mov	r2, r3
   1a17c:	bl	11220 <memmove@plt>
   1a180:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a184:	ldrb	r3, [r3, #75]	; 0x4b
   1a188:	cmp	r3, #0
   1a18c:	beq	1a1c0 <__assert_fail@plt+0x8c7c>
   1a190:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a194:	ldr	r0, [r3, #4]
   1a198:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a19c:	ldr	r2, [r3, #4]
   1a1a0:	ldr	r3, [fp, #-8]
   1a1a4:	add	r1, r2, r3
   1a1a8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a1ac:	ldr	r2, [r3, #28]
   1a1b0:	ldr	r3, [fp, #-8]
   1a1b4:	sub	r3, r2, r3
   1a1b8:	mov	r2, r3
   1a1bc:	bl	11220 <memmove@plt>
   1a1c0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a1c4:	ldr	r2, [r3, #28]
   1a1c8:	ldr	r3, [fp, #-8]
   1a1cc:	sub	r2, r2, r3
   1a1d0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a1d4:	str	r2, [r3, #28]
   1a1d8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a1dc:	ldr	r2, [r3, #32]
   1a1e0:	ldr	r3, [fp, #-8]
   1a1e4:	sub	r2, r2, r3
   1a1e8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a1ec:	str	r2, [r3, #32]
   1a1f0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a1f4:	ldr	r3, [r3, #28]
   1a1f8:	cmp	r3, #0
   1a1fc:	b	1a6d8 <__assert_fail@plt+0x9194>
   1a200:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a204:	ldr	r3, [r3, #28]
   1a208:	str	r3, [fp, #-48]	; 0xffffffd0
   1a20c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a210:	ldrb	r3, [r3, #76]	; 0x4c
   1a214:	cmp	r3, #0
   1a218:	beq	1a268 <__assert_fail@plt+0x8d24>
   1a21c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a220:	ldr	r2, [r3, #44]	; 0x2c
   1a224:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1a228:	sub	r2, r2, r3
   1a22c:	ldr	r3, [fp, #-8]
   1a230:	add	r2, r2, r3
   1a234:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a238:	str	r2, [r3, #48]	; 0x30
   1a23c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a240:	ldr	r2, [r3, #52]	; 0x34
   1a244:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1a248:	sub	r2, r2, r3
   1a24c:	ldr	r3, [fp, #-8]
   1a250:	add	r2, r2, r3
   1a254:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a258:	str	r2, [r3, #56]	; 0x38
   1a25c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a260:	mov	r2, #0
   1a264:	strb	r2, [r3, #76]	; 0x4c
   1a268:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a26c:	mov	r2, #0
   1a270:	str	r2, [r3, #28]
   1a274:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a278:	ldr	r3, [r3, #80]	; 0x50
   1a27c:	cmp	r3, #1
   1a280:	ble	1a624 <__assert_fail@plt+0x90e0>
   1a284:	mvn	r3, #0
   1a288:	str	r3, [fp, #-68]	; 0xffffffbc
   1a28c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a290:	ldrb	r3, [r3, #73]	; 0x49
   1a294:	cmp	r3, #0
   1a298:	beq	1a4a8 <__assert_fail@plt+0x8f64>
   1a29c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a2a0:	ldr	r3, [r3]
   1a2a4:	ldr	r2, [fp, #-96]	; 0xffffffa0
   1a2a8:	ldr	r2, [r2, #24]
   1a2ac:	add	r3, r3, r2
   1a2b0:	str	r3, [fp, #-52]	; 0xffffffcc
   1a2b4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a2b8:	ldr	r3, [r3, #80]	; 0x50
   1a2bc:	ldr	r2, [fp, #-8]
   1a2c0:	sub	r3, r2, r3
   1a2c4:	mov	r2, r3
   1a2c8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1a2cc:	add	r3, r3, r2
   1a2d0:	str	r3, [fp, #-32]	; 0xffffffe0
   1a2d4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a2d8:	ldr	r3, [r3]
   1a2dc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1a2e0:	cmp	r2, r3
   1a2e4:	bcs	1a2f4 <__assert_fail@plt+0x8db0>
   1a2e8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a2ec:	ldr	r3, [r3]
   1a2f0:	str	r3, [fp, #-32]	; 0xffffffe0
   1a2f4:	ldr	r3, [fp, #-8]
   1a2f8:	sub	r3, r3, #1
   1a2fc:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1a300:	add	r3, r2, r3
   1a304:	str	r3, [fp, #-28]	; 0xffffffe4
   1a308:	b	1a490 <__assert_fail@plt+0x8f4c>
   1a30c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a310:	ldrb	r3, [r3]
   1a314:	and	r3, r3, #192	; 0xc0
   1a318:	cmp	r3, #128	; 0x80
   1a31c:	beq	1a484 <__assert_fail@plt+0x8f40>
   1a320:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a324:	ldr	r3, [r3, #48]	; 0x30
   1a328:	mov	r2, r3
   1a32c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1a330:	add	r2, r3, r2
   1a334:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a338:	sub	r3, r2, r3
   1a33c:	str	r3, [fp, #-56]	; 0xffffffc8
   1a340:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a344:	str	r3, [fp, #-36]	; 0xffffffdc
   1a348:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a34c:	ldr	r3, [r3, #64]	; 0x40
   1a350:	cmp	r3, #0
   1a354:	movne	r3, #1
   1a358:	moveq	r3, #0
   1a35c:	uxtb	r3, r3
   1a360:	cmp	r3, #0
   1a364:	beq	1a3d4 <__assert_fail@plt+0x8e90>
   1a368:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1a36c:	cmp	r3, #6
   1a370:	movlt	r3, r3
   1a374:	movge	r3, #6
   1a378:	str	r3, [fp, #-40]	; 0xffffffd8
   1a37c:	b	1a3b4 <__assert_fail@plt+0x8e70>
   1a380:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a384:	ldr	r3, [r3, #64]	; 0x40
   1a388:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1a38c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a390:	add	r2, r1, r2
   1a394:	ldrb	r2, [r2]
   1a398:	add	r3, r3, r2
   1a39c:	ldrb	r1, [r3]
   1a3a0:	sub	r2, fp, #88	; 0x58
   1a3a4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a3a8:	add	r3, r2, r3
   1a3ac:	mov	r2, r1
   1a3b0:	strb	r2, [r3]
   1a3b4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a3b8:	sub	r3, r3, #1
   1a3bc:	str	r3, [fp, #-40]	; 0xffffffd8
   1a3c0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a3c4:	cmp	r3, #0
   1a3c8:	bge	1a380 <__assert_fail@plt+0x8e3c>
   1a3cc:	sub	r3, fp, #88	; 0x58
   1a3d0:	str	r3, [fp, #-36]	; 0xffffffdc
   1a3d4:	sub	r3, fp, #76	; 0x4c
   1a3d8:	mov	r2, #8
   1a3dc:	mov	r1, #0
   1a3e0:	mov	r0, r3
   1a3e4:	bl	11448 <memset@plt>
   1a3e8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1a3ec:	sub	r3, fp, #76	; 0x4c
   1a3f0:	sub	r0, fp, #80	; 0x50
   1a3f4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1a3f8:	bl	34944 <__assert_fail@plt+0x23400>
   1a3fc:	str	r0, [fp, #-60]	; 0xffffffc4
   1a400:	ldr	r3, [fp, #-8]
   1a404:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1a408:	add	r2, r2, r3
   1a40c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a410:	sub	r3, r2, r3
   1a414:	mov	r2, r3
   1a418:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1a41c:	cmp	r3, r2
   1a420:	bcc	1a4a4 <__assert_fail@plt+0x8f60>
   1a424:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1a428:	cmn	r3, #3
   1a42c:	bhi	1a4a4 <__assert_fail@plt+0x8f60>
   1a430:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a434:	add	r3, r3, #16
   1a438:	mov	r2, #8
   1a43c:	mov	r1, #0
   1a440:	mov	r0, r3
   1a444:	bl	11448 <memset@plt>
   1a448:	ldr	r3, [fp, #-8]
   1a44c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1a450:	add	r2, r2, r3
   1a454:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a458:	sub	r3, r2, r3
   1a45c:	mov	r2, r3
   1a460:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1a464:	sub	r3, r3, r2
   1a468:	mov	r2, r3
   1a46c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a470:	str	r2, [r3, #28]
   1a474:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1a478:	str	r3, [fp, #-68]	; 0xffffffbc
   1a47c:	nop	{0}
   1a480:	b	1a4a4 <__assert_fail@plt+0x8f60>
   1a484:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a488:	sub	r3, r3, #1
   1a48c:	str	r3, [fp, #-28]	; 0xffffffe4
   1a490:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1a494:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a498:	cmp	r2, r3
   1a49c:	bcs	1a30c <__assert_fail@plt+0x8dc8>
   1a4a0:	b	1a4a8 <__assert_fail@plt+0x8f64>
   1a4a4:	nop	{0}
   1a4a8:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1a4ac:	cmn	r3, #1
   1a4b0:	bne	1a4dc <__assert_fail@plt+0x8f98>
   1a4b4:	sub	r3, fp, #68	; 0x44
   1a4b8:	mov	r2, r3
   1a4bc:	ldr	r1, [fp, #-100]	; 0xffffff9c
   1a4c0:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1a4c4:	bl	19830 <__assert_fail@plt+0x82ec>
   1a4c8:	mov	r2, r0
   1a4cc:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1a4d0:	sub	r2, r2, r3
   1a4d4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a4d8:	str	r2, [r3, #28]
   1a4dc:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1a4e0:	cmn	r3, #1
   1a4e4:	bne	1a510 <__assert_fail@plt+0x8fcc>
   1a4e8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1a4ec:	sub	r3, r3, #1
   1a4f0:	ldr	r2, [fp, #-104]	; 0xffffff98
   1a4f4:	mov	r1, r3
   1a4f8:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1a4fc:	bl	1ac18 <__assert_fail@plt+0x96d4>
   1a500:	mov	r2, r0
   1a504:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a508:	str	r2, [r3, #60]	; 0x3c
   1a50c:	b	1a58c <__assert_fail@plt+0x9048>
   1a510:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a514:	ldrb	r3, [r3, #78]	; 0x4e
   1a518:	cmp	r3, #0
   1a51c:	movne	r3, #1
   1a520:	moveq	r3, #0
   1a524:	uxtb	r3, r3
   1a528:	cmp	r3, #0
   1a52c:	beq	1a554 <__assert_fail@plt+0x9010>
   1a530:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1a534:	mov	r0, r3
   1a538:	bl	11424 <iswalnum@plt>
   1a53c:	mov	r3, r0
   1a540:	cmp	r3, #0
   1a544:	bne	1a580 <__assert_fail@plt+0x903c>
   1a548:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1a54c:	cmp	r3, #95	; 0x5f
   1a550:	beq	1a580 <__assert_fail@plt+0x903c>
   1a554:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1a558:	cmp	r3, #10
   1a55c:	bne	1a578 <__assert_fail@plt+0x9034>
   1a560:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a564:	ldrb	r3, [r3, #77]	; 0x4d
   1a568:	cmp	r3, #0
   1a56c:	beq	1a578 <__assert_fail@plt+0x9034>
   1a570:	mov	r3, #2
   1a574:	b	1a584 <__assert_fail@plt+0x9040>
   1a578:	mov	r3, #0
   1a57c:	b	1a584 <__assert_fail@plt+0x9040>
   1a580:	mov	r3, #1
   1a584:	ldr	r2, [fp, #-96]	; 0xffffffa0
   1a588:	str	r3, [r2, #60]	; 0x3c
   1a58c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a590:	ldr	r3, [r3, #28]
   1a594:	cmp	r3, #0
   1a598:	beq	1a610 <__assert_fail@plt+0x90cc>
   1a59c:	mov	r3, #0
   1a5a0:	str	r3, [fp, #-24]	; 0xffffffe8
   1a5a4:	b	1a5d0 <__assert_fail@plt+0x908c>
   1a5a8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a5ac:	ldr	r2, [r3, #8]
   1a5b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a5b4:	lsl	r3, r3, #2
   1a5b8:	add	r3, r2, r3
   1a5bc:	mvn	r2, #0
   1a5c0:	str	r2, [r3]
   1a5c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a5c8:	add	r3, r3, #1
   1a5cc:	str	r3, [fp, #-24]	; 0xffffffe8
   1a5d0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a5d4:	ldr	r3, [r3, #28]
   1a5d8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a5dc:	cmp	r2, r3
   1a5e0:	blt	1a5a8 <__assert_fail@plt+0x9064>
   1a5e4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a5e8:	ldrb	r3, [r3, #75]	; 0x4b
   1a5ec:	cmp	r3, #0
   1a5f0:	beq	1a610 <__assert_fail@plt+0x90cc>
   1a5f4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a5f8:	ldr	r0, [r3, #4]
   1a5fc:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a600:	ldr	r3, [r3, #28]
   1a604:	mov	r2, r3
   1a608:	mov	r1, #255	; 0xff
   1a60c:	bl	11448 <memset@plt>
   1a610:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a614:	ldr	r2, [r3, #28]
   1a618:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a61c:	str	r2, [r3, #32]
   1a620:	b	1a6d8 <__assert_fail@plt+0x9194>
   1a624:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a628:	ldr	r2, [r3]
   1a62c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a630:	ldr	r1, [r3, #24]
   1a634:	ldr	r3, [fp, #-8]
   1a638:	add	r3, r1, r3
   1a63c:	sub	r3, r3, #1
   1a640:	add	r3, r2, r3
   1a644:	ldrb	r3, [r3]
   1a648:	str	r3, [fp, #-44]	; 0xffffffd4
   1a64c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a650:	mov	r2, #0
   1a654:	str	r2, [r3, #32]
   1a658:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a65c:	ldr	r3, [r3, #64]	; 0x40
   1a660:	cmp	r3, #0
   1a664:	beq	1a680 <__assert_fail@plt+0x913c>
   1a668:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a66c:	ldr	r2, [r3, #64]	; 0x40
   1a670:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1a674:	add	r3, r2, r3
   1a678:	ldrb	r3, [r3]
   1a67c:	str	r3, [fp, #-44]	; 0xffffffd4
   1a680:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a684:	ldr	r3, [r3, #68]	; 0x44
   1a688:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a68c:	mov	r0, r3
   1a690:	bl	17f6c <__assert_fail@plt+0x6a28>
   1a694:	mov	r3, r0
   1a698:	cmp	r3, #0
   1a69c:	bne	1a6cc <__assert_fail@plt+0x9188>
   1a6a0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1a6a4:	cmp	r3, #10
   1a6a8:	bne	1a6c4 <__assert_fail@plt+0x9180>
   1a6ac:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a6b0:	ldrb	r3, [r3, #77]	; 0x4d
   1a6b4:	cmp	r3, #0
   1a6b8:	beq	1a6c4 <__assert_fail@plt+0x9180>
   1a6bc:	mov	r3, #2
   1a6c0:	b	1a6d0 <__assert_fail@plt+0x918c>
   1a6c4:	mov	r3, #0
   1a6c8:	b	1a6d0 <__assert_fail@plt+0x918c>
   1a6cc:	mov	r3, #1
   1a6d0:	ldr	r2, [fp, #-96]	; 0xffffffa0
   1a6d4:	str	r3, [r2, #60]	; 0x3c
   1a6d8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a6dc:	ldrb	r3, [r3, #75]	; 0x4b
   1a6e0:	cmp	r3, #0
   1a6e4:	bne	1a700 <__assert_fail@plt+0x91bc>
   1a6e8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a6ec:	ldr	r2, [r3, #4]
   1a6f0:	ldr	r3, [fp, #-8]
   1a6f4:	add	r2, r2, r3
   1a6f8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a6fc:	str	r2, [r3, #4]
   1a700:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a704:	ldr	r2, [fp, #-100]	; 0xffffff9c
   1a708:	str	r2, [r3, #24]
   1a70c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a710:	ldr	r2, [r3, #48]	; 0x30
   1a714:	ldr	r3, [fp, #-8]
   1a718:	sub	r2, r2, r3
   1a71c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a720:	str	r2, [r3, #48]	; 0x30
   1a724:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a728:	ldr	r2, [r3, #56]	; 0x38
   1a72c:	ldr	r3, [fp, #-8]
   1a730:	sub	r2, r2, r3
   1a734:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a738:	str	r2, [r3, #56]	; 0x38
   1a73c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a740:	ldr	r3, [r3, #80]	; 0x50
   1a744:	cmp	r3, #1
   1a748:	ble	1a798 <__assert_fail@plt+0x9254>
   1a74c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a750:	ldrb	r3, [r3, #72]	; 0x48
   1a754:	cmp	r3, #0
   1a758:	beq	1a78c <__assert_fail@plt+0x9248>
   1a75c:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1a760:	bl	18ce4 <__assert_fail@plt+0x77a0>
   1a764:	str	r0, [fp, #-64]	; 0xffffffc0
   1a768:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1a76c:	cmp	r3, #0
   1a770:	movne	r3, #1
   1a774:	moveq	r3, #0
   1a778:	uxtb	r3, r3
   1a77c:	cmp	r3, #0
   1a780:	beq	1a7f0 <__assert_fail@plt+0x92ac>
   1a784:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1a788:	b	1a800 <__assert_fail@plt+0x92bc>
   1a78c:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1a790:	bl	18960 <__assert_fail@plt+0x741c>
   1a794:	b	1a7f0 <__assert_fail@plt+0x92ac>
   1a798:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a79c:	ldrb	r3, [r3, #75]	; 0x4b
   1a7a0:	cmp	r3, #0
   1a7a4:	beq	1a7e0 <__assert_fail@plt+0x929c>
   1a7a8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a7ac:	ldrb	r3, [r3, #72]	; 0x48
   1a7b0:	cmp	r3, #0
   1a7b4:	beq	1a7c4 <__assert_fail@plt+0x9280>
   1a7b8:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1a7bc:	bl	199d0 <__assert_fail@plt+0x848c>
   1a7c0:	b	1a7f0 <__assert_fail@plt+0x92ac>
   1a7c4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a7c8:	ldr	r3, [r3, #64]	; 0x40
   1a7cc:	cmp	r3, #0
   1a7d0:	beq	1a7f0 <__assert_fail@plt+0x92ac>
   1a7d4:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1a7d8:	bl	19adc <__assert_fail@plt+0x8598>
   1a7dc:	b	1a7f0 <__assert_fail@plt+0x92ac>
   1a7e0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a7e4:	ldr	r2, [r3, #48]	; 0x30
   1a7e8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a7ec:	str	r2, [r3, #28]
   1a7f0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a7f4:	mov	r2, #0
   1a7f8:	str	r2, [r3, #40]	; 0x28
   1a7fc:	mov	r3, #0
   1a800:	mov	r0, r3
   1a804:	sub	sp, fp, #4
   1a808:	ldr	fp, [sp]
   1a80c:	add	sp, sp, #4
   1a810:	pop	{pc}		; (ldr pc, [sp], #4)
   1a814:	push	{fp}		; (str fp, [sp, #-4]!)
   1a818:	add	fp, sp, #0
   1a81c:	sub	sp, sp, #20
   1a820:	str	r0, [fp, #-16]
   1a824:	str	r1, [fp, #-20]	; 0xffffffec
   1a828:	ldr	r3, [fp, #-16]
   1a82c:	ldrb	r3, [r3, #75]	; 0x4b
   1a830:	cmp	r3, #0
   1a834:	moveq	r3, #1
   1a838:	movne	r3, #0
   1a83c:	uxtb	r3, r3
   1a840:	cmp	r3, #0
   1a844:	beq	1a86c <__assert_fail@plt+0x9328>
   1a848:	ldr	r3, [fp, #-16]
   1a84c:	ldr	r3, [r3, #4]
   1a850:	ldr	r2, [fp, #-16]
   1a854:	ldr	r1, [r2, #40]	; 0x28
   1a858:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a85c:	add	r2, r1, r2
   1a860:	add	r3, r3, r2
   1a864:	ldrb	r3, [r3]
   1a868:	b	1a9d0 <__assert_fail@plt+0x948c>
   1a86c:	ldr	r3, [fp, #-16]
   1a870:	ldr	r3, [r3, #80]	; 0x50
   1a874:	cmp	r3, #1
   1a878:	ble	1a920 <__assert_fail@plt+0x93dc>
   1a87c:	ldr	r3, [fp, #-16]
   1a880:	ldr	r2, [r3, #8]
   1a884:	ldr	r3, [fp, #-16]
   1a888:	ldr	r1, [r3, #40]	; 0x28
   1a88c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a890:	add	r3, r1, r3
   1a894:	lsl	r3, r3, #2
   1a898:	add	r3, r2, r3
   1a89c:	ldr	r3, [r3]
   1a8a0:	cmn	r3, #1
   1a8a4:	beq	1a8fc <__assert_fail@plt+0x93b8>
   1a8a8:	ldr	r3, [fp, #-16]
   1a8ac:	ldr	r2, [r3, #28]
   1a8b0:	ldr	r3, [fp, #-16]
   1a8b4:	ldr	r1, [r3, #40]	; 0x28
   1a8b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a8bc:	add	r3, r1, r3
   1a8c0:	add	r3, r3, #1
   1a8c4:	cmp	r2, r3
   1a8c8:	beq	1a920 <__assert_fail@plt+0x93dc>
   1a8cc:	ldr	r3, [fp, #-16]
   1a8d0:	ldr	r2, [r3, #8]
   1a8d4:	ldr	r3, [fp, #-16]
   1a8d8:	ldr	r1, [r3, #40]	; 0x28
   1a8dc:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a8e0:	add	r3, r1, r3
   1a8e4:	add	r3, r3, #1
   1a8e8:	lsl	r3, r3, #2
   1a8ec:	add	r3, r2, r3
   1a8f0:	ldr	r3, [r3]
   1a8f4:	cmn	r3, #1
   1a8f8:	bne	1a920 <__assert_fail@plt+0x93dc>
   1a8fc:	ldr	r3, [fp, #-16]
   1a900:	ldr	r3, [r3, #4]
   1a904:	ldr	r2, [fp, #-16]
   1a908:	ldr	r1, [r2, #40]	; 0x28
   1a90c:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a910:	add	r2, r1, r2
   1a914:	add	r3, r3, r2
   1a918:	ldrb	r3, [r3]
   1a91c:	b	1a9d0 <__assert_fail@plt+0x948c>
   1a920:	ldr	r3, [fp, #-16]
   1a924:	ldr	r3, [r3, #40]	; 0x28
   1a928:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a92c:	add	r3, r2, r3
   1a930:	str	r3, [fp, #-8]
   1a934:	ldr	r3, [fp, #-16]
   1a938:	ldrb	r3, [r3, #76]	; 0x4c
   1a93c:	cmp	r3, #0
   1a940:	beq	1a960 <__assert_fail@plt+0x941c>
   1a944:	ldr	r3, [fp, #-16]
   1a948:	ldr	r2, [r3, #12]
   1a94c:	ldr	r3, [fp, #-8]
   1a950:	lsl	r3, r3, #2
   1a954:	add	r3, r2, r3
   1a958:	ldr	r3, [r3]
   1a95c:	str	r3, [fp, #-8]
   1a960:	ldr	r3, [fp, #-16]
   1a964:	ldr	r3, [r3]
   1a968:	ldr	r2, [fp, #-16]
   1a96c:	ldr	r1, [r2, #24]
   1a970:	ldr	r2, [fp, #-8]
   1a974:	add	r2, r1, r2
   1a978:	add	r3, r3, r2
   1a97c:	ldrb	r3, [r3]
   1a980:	str	r3, [fp, #-12]
   1a984:	ldr	r3, [fp, #-16]
   1a988:	ldrb	r3, [r3, #76]	; 0x4c
   1a98c:	cmp	r3, #0
   1a990:	beq	1a9c8 <__assert_fail@plt+0x9484>
   1a994:	ldr	r3, [fp, #-12]
   1a998:	bic	r3, r3, #127	; 0x7f
   1a99c:	cmp	r3, #0
   1a9a0:	beq	1a9c8 <__assert_fail@plt+0x9484>
   1a9a4:	ldr	r3, [fp, #-16]
   1a9a8:	ldr	r3, [r3, #4]
   1a9ac:	ldr	r2, [fp, #-16]
   1a9b0:	ldr	r1, [r2, #40]	; 0x28
   1a9b4:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a9b8:	add	r2, r1, r2
   1a9bc:	add	r3, r3, r2
   1a9c0:	ldrb	r3, [r3]
   1a9c4:	b	1a9d0 <__assert_fail@plt+0x948c>
   1a9c8:	ldr	r3, [fp, #-12]
   1a9cc:	uxtb	r3, r3
   1a9d0:	mov	r0, r3
   1a9d4:	add	sp, fp, #0
   1a9d8:	pop	{fp}		; (ldr fp, [sp], #4)
   1a9dc:	bx	lr
   1a9e0:	str	r4, [sp, #-12]!
   1a9e4:	str	fp, [sp, #4]
   1a9e8:	str	lr, [sp, #8]
   1a9ec:	add	fp, sp, #8
   1a9f0:	sub	sp, sp, #20
   1a9f4:	str	r0, [fp, #-24]	; 0xffffffe8
   1a9f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a9fc:	ldrb	r3, [r3, #75]	; 0x4b
   1aa00:	cmp	r3, #0
   1aa04:	moveq	r3, #1
   1aa08:	movne	r3, #0
   1aa0c:	uxtb	r3, r3
   1aa10:	cmp	r3, #0
   1aa14:	beq	1aa40 <__assert_fail@plt+0x94fc>
   1aa18:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1aa1c:	ldr	r2, [r3, #4]
   1aa20:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1aa24:	ldr	r3, [r3, #40]	; 0x28
   1aa28:	add	r0, r3, #1
   1aa2c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1aa30:	str	r0, [r1, #40]	; 0x28
   1aa34:	add	r3, r2, r3
   1aa38:	ldrb	r3, [r3]
   1aa3c:	b	1ab98 <__assert_fail@plt+0x9654>
   1aa40:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1aa44:	ldrb	r3, [r3, #76]	; 0x4c
   1aa48:	cmp	r3, #0
   1aa4c:	beq	1ab68 <__assert_fail@plt+0x9624>
   1aa50:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1aa54:	ldr	r2, [r3, #40]	; 0x28
   1aa58:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1aa5c:	ldr	r3, [r3, #28]
   1aa60:	cmp	r2, r3
   1aa64:	beq	1aab4 <__assert_fail@plt+0x9570>
   1aa68:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1aa6c:	ldr	r2, [r3, #8]
   1aa70:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1aa74:	ldr	r3, [r3, #40]	; 0x28
   1aa78:	lsl	r3, r3, #2
   1aa7c:	add	r3, r2, r3
   1aa80:	ldr	r3, [r3]
   1aa84:	cmn	r3, #1
   1aa88:	bne	1aab4 <__assert_fail@plt+0x9570>
   1aa8c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1aa90:	ldr	r2, [r3, #4]
   1aa94:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1aa98:	ldr	r3, [r3, #40]	; 0x28
   1aa9c:	add	r0, r3, #1
   1aaa0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1aaa4:	str	r0, [r1, #40]	; 0x28
   1aaa8:	add	r3, r2, r3
   1aaac:	ldrb	r3, [r3]
   1aab0:	b	1ab98 <__assert_fail@plt+0x9654>
   1aab4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1aab8:	ldr	r2, [r3, #12]
   1aabc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1aac0:	ldr	r3, [r3, #40]	; 0x28
   1aac4:	lsl	r3, r3, #2
   1aac8:	add	r3, r2, r3
   1aacc:	ldr	r3, [r3]
   1aad0:	str	r3, [fp, #-16]
   1aad4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1aad8:	ldr	r3, [r3]
   1aadc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1aae0:	ldr	r1, [r2, #24]
   1aae4:	ldr	r2, [fp, #-16]
   1aae8:	add	r2, r1, r2
   1aaec:	add	r3, r3, r2
   1aaf0:	ldrb	r3, [r3]
   1aaf4:	str	r3, [fp, #-20]	; 0xffffffec
   1aaf8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1aafc:	bic	r3, r3, #127	; 0x7f
   1ab00:	cmp	r3, #0
   1ab04:	beq	1ab30 <__assert_fail@plt+0x95ec>
   1ab08:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ab0c:	ldr	r2, [r3, #4]
   1ab10:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ab14:	ldr	r3, [r3, #40]	; 0x28
   1ab18:	add	r0, r3, #1
   1ab1c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ab20:	str	r0, [r1, #40]	; 0x28
   1ab24:	add	r3, r2, r3
   1ab28:	ldrb	r3, [r3]
   1ab2c:	b	1ab98 <__assert_fail@plt+0x9654>
   1ab30:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ab34:	ldr	r4, [r3, #40]	; 0x28
   1ab38:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ab3c:	ldr	r3, [r3, #40]	; 0x28
   1ab40:	mov	r1, r3
   1ab44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ab48:	bl	18210 <__assert_fail@plt+0x6ccc>
   1ab4c:	mov	r3, r0
   1ab50:	add	r2, r4, r3
   1ab54:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ab58:	str	r2, [r3, #40]	; 0x28
   1ab5c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ab60:	uxtb	r3, r3
   1ab64:	b	1ab98 <__assert_fail@plt+0x9654>
   1ab68:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ab6c:	ldr	r2, [r3]
   1ab70:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ab74:	ldr	r1, [r3, #24]
   1ab78:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ab7c:	ldr	r3, [r3, #40]	; 0x28
   1ab80:	add	ip, r3, #1
   1ab84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ab88:	str	ip, [r0, #40]	; 0x28
   1ab8c:	add	r3, r1, r3
   1ab90:	add	r3, r2, r3
   1ab94:	ldrb	r3, [r3]
   1ab98:	mov	r0, r3
   1ab9c:	sub	sp, fp, #8
   1aba0:	ldr	r4, [sp]
   1aba4:	ldr	fp, [sp, #4]
   1aba8:	add	sp, sp, #8
   1abac:	pop	{pc}		; (ldr pc, [sp], #4)
   1abb0:	str	fp, [sp, #-8]!
   1abb4:	str	lr, [sp, #4]
   1abb8:	add	fp, sp, #4
   1abbc:	sub	sp, sp, #8
   1abc0:	str	r0, [fp, #-8]
   1abc4:	ldr	r3, [fp, #-8]
   1abc8:	ldr	r3, [r3, #8]
   1abcc:	mov	r0, r3
   1abd0:	bl	151ec <__assert_fail@plt+0x3ca8>
   1abd4:	ldr	r3, [fp, #-8]
   1abd8:	ldr	r3, [r3, #12]
   1abdc:	mov	r0, r3
   1abe0:	bl	151ec <__assert_fail@plt+0x3ca8>
   1abe4:	ldr	r3, [fp, #-8]
   1abe8:	ldrb	r3, [r3, #75]	; 0x4b
   1abec:	cmp	r3, #0
   1abf0:	beq	1ac04 <__assert_fail@plt+0x96c0>
   1abf4:	ldr	r3, [fp, #-8]
   1abf8:	ldr	r3, [r3, #4]
   1abfc:	mov	r0, r3
   1ac00:	bl	151ec <__assert_fail@plt+0x3ca8>
   1ac04:	nop	{0}
   1ac08:	sub	sp, fp, #4
   1ac0c:	ldr	fp, [sp]
   1ac10:	add	sp, sp, #4
   1ac14:	pop	{pc}		; (ldr pc, [sp], #4)
   1ac18:	str	fp, [sp, #-8]!
   1ac1c:	str	lr, [sp, #4]
   1ac20:	add	fp, sp, #4
   1ac24:	sub	sp, sp, #32
   1ac28:	str	r0, [fp, #-24]	; 0xffffffe8
   1ac2c:	str	r1, [fp, #-28]	; 0xffffffe4
   1ac30:	str	r2, [fp, #-32]	; 0xffffffe0
   1ac34:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1ac38:	lsr	r3, r3, #31
   1ac3c:	uxtb	r3, r3
   1ac40:	cmp	r3, #0
   1ac44:	beq	1ac54 <__assert_fail@plt+0x9710>
   1ac48:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ac4c:	ldr	r3, [r3, #60]	; 0x3c
   1ac50:	b	1adf8 <__assert_fail@plt+0x98b4>
   1ac54:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ac58:	ldr	r3, [r3, #48]	; 0x30
   1ac5c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1ac60:	cmp	r2, r3
   1ac64:	moveq	r3, #1
   1ac68:	movne	r3, #0
   1ac6c:	uxtb	r3, r3
   1ac70:	cmp	r3, #0
   1ac74:	beq	1ac98 <__assert_fail@plt+0x9754>
   1ac78:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1ac7c:	and	r3, r3, #2
   1ac80:	cmp	r3, #0
   1ac84:	beq	1ac90 <__assert_fail@plt+0x974c>
   1ac88:	mov	r3, #8
   1ac8c:	b	1adf8 <__assert_fail@plt+0x98b4>
   1ac90:	mov	r3, #10
   1ac94:	b	1adf8 <__assert_fail@plt+0x98b4>
   1ac98:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ac9c:	ldr	r3, [r3, #80]	; 0x50
   1aca0:	cmp	r3, #1
   1aca4:	ble	1ad90 <__assert_fail@plt+0x984c>
   1aca8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1acac:	str	r3, [fp, #-8]
   1acb0:	b	1ace0 <__assert_fail@plt+0x979c>
   1acb4:	ldr	r3, [fp, #-8]
   1acb8:	cmp	r3, #0
   1acbc:	ldr	r3, [fp, #-8]
   1acc0:	sub	r3, r3, #1
   1acc4:	str	r3, [fp, #-8]
   1acc8:	ldr	r3, [fp, #-8]
   1accc:	cmp	r3, #0
   1acd0:	bge	1ace0 <__assert_fail@plt+0x979c>
   1acd4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1acd8:	ldr	r3, [r3, #60]	; 0x3c
   1acdc:	b	1adf8 <__assert_fail@plt+0x98b4>
   1ace0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ace4:	ldr	r2, [r3, #8]
   1ace8:	ldr	r3, [fp, #-8]
   1acec:	lsl	r3, r3, #2
   1acf0:	add	r3, r2, r3
   1acf4:	ldr	r3, [r3]
   1acf8:	cmn	r3, #1
   1acfc:	beq	1acb4 <__assert_fail@plt+0x9770>
   1ad00:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ad04:	ldr	r2, [r3, #8]
   1ad08:	ldr	r3, [fp, #-8]
   1ad0c:	lsl	r3, r3, #2
   1ad10:	add	r3, r2, r3
   1ad14:	ldr	r3, [r3]
   1ad18:	str	r3, [fp, #-12]
   1ad1c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ad20:	ldrb	r3, [r3, #78]	; 0x4e
   1ad24:	cmp	r3, #0
   1ad28:	movne	r3, #1
   1ad2c:	moveq	r3, #0
   1ad30:	uxtb	r3, r3
   1ad34:	cmp	r3, #0
   1ad38:	beq	1ad64 <__assert_fail@plt+0x9820>
   1ad3c:	ldr	r0, [fp, #-12]
   1ad40:	bl	11424 <iswalnum@plt>
   1ad44:	mov	r3, r0
   1ad48:	cmp	r3, #0
   1ad4c:	bne	1ad5c <__assert_fail@plt+0x9818>
   1ad50:	ldr	r3, [fp, #-12]
   1ad54:	cmp	r3, #95	; 0x5f
   1ad58:	bne	1ad64 <__assert_fail@plt+0x9820>
   1ad5c:	mov	r3, #1
   1ad60:	b	1adf8 <__assert_fail@plt+0x98b4>
   1ad64:	ldr	r3, [fp, #-12]
   1ad68:	cmp	r3, #10
   1ad6c:	bne	1ad88 <__assert_fail@plt+0x9844>
   1ad70:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ad74:	ldrb	r3, [r3, #77]	; 0x4d
   1ad78:	cmp	r3, #0
   1ad7c:	beq	1ad88 <__assert_fail@plt+0x9844>
   1ad80:	mov	r3, #2
   1ad84:	b	1adf8 <__assert_fail@plt+0x98b4>
   1ad88:	mov	r3, #0
   1ad8c:	b	1adf8 <__assert_fail@plt+0x98b4>
   1ad90:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ad94:	ldr	r2, [r3, #4]
   1ad98:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1ad9c:	add	r3, r2, r3
   1ada0:	ldrb	r3, [r3]
   1ada4:	str	r3, [fp, #-16]
   1ada8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1adac:	ldr	r3, [r3, #68]	; 0x44
   1adb0:	ldr	r1, [fp, #-16]
   1adb4:	mov	r0, r3
   1adb8:	bl	17f6c <__assert_fail@plt+0x6a28>
   1adbc:	mov	r3, r0
   1adc0:	cmp	r3, #0
   1adc4:	beq	1add0 <__assert_fail@plt+0x988c>
   1adc8:	mov	r3, #1
   1adcc:	b	1adf8 <__assert_fail@plt+0x98b4>
   1add0:	ldr	r3, [fp, #-16]
   1add4:	cmp	r3, #10
   1add8:	bne	1adf4 <__assert_fail@plt+0x98b0>
   1addc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ade0:	ldrb	r3, [r3, #77]	; 0x4d
   1ade4:	cmp	r3, #0
   1ade8:	beq	1adf4 <__assert_fail@plt+0x98b0>
   1adec:	mov	r3, #2
   1adf0:	b	1adf8 <__assert_fail@plt+0x98b4>
   1adf4:	mov	r3, #0
   1adf8:	mov	r0, r3
   1adfc:	sub	sp, fp, #4
   1ae00:	ldr	fp, [sp]
   1ae04:	add	sp, sp, #4
   1ae08:	pop	{pc}		; (ldr pc, [sp], #4)
   1ae0c:	str	fp, [sp, #-8]!
   1ae10:	str	lr, [sp, #4]
   1ae14:	add	fp, sp, #4
   1ae18:	sub	sp, sp, #8
   1ae1c:	str	r0, [fp, #-8]
   1ae20:	str	r1, [fp, #-12]
   1ae24:	ldr	r3, [fp, #-8]
   1ae28:	ldr	r2, [fp, #-12]
   1ae2c:	str	r2, [r3]
   1ae30:	ldr	r3, [fp, #-8]
   1ae34:	mov	r2, #0
   1ae38:	str	r2, [r3, #4]
   1ae3c:	ldr	r3, [fp, #-12]
   1ae40:	lsl	r3, r3, #2
   1ae44:	mov	r0, r3
   1ae48:	bl	33ba0 <__assert_fail@plt+0x2265c>
   1ae4c:	mov	r3, r0
   1ae50:	mov	r2, r3
   1ae54:	ldr	r3, [fp, #-8]
   1ae58:	str	r2, [r3, #8]
   1ae5c:	ldr	r3, [fp, #-8]
   1ae60:	ldr	r3, [r3, #8]
   1ae64:	cmp	r3, #0
   1ae68:	moveq	r3, #1
   1ae6c:	movne	r3, #0
   1ae70:	uxtb	r3, r3
   1ae74:	cmp	r3, #0
   1ae78:	beq	1ae84 <__assert_fail@plt+0x9940>
   1ae7c:	mov	r3, #12
   1ae80:	b	1ae88 <__assert_fail@plt+0x9944>
   1ae84:	mov	r3, #0
   1ae88:	mov	r0, r3
   1ae8c:	sub	sp, fp, #4
   1ae90:	ldr	fp, [sp]
   1ae94:	add	sp, sp, #4
   1ae98:	pop	{pc}		; (ldr pc, [sp], #4)
   1ae9c:	str	fp, [sp, #-8]!
   1aea0:	str	lr, [sp, #4]
   1aea4:	add	fp, sp, #4
   1aea8:	sub	sp, sp, #8
   1aeac:	str	r0, [fp, #-8]
   1aeb0:	str	r1, [fp, #-12]
   1aeb4:	ldr	r3, [fp, #-8]
   1aeb8:	mov	r2, #1
   1aebc:	str	r2, [r3]
   1aec0:	ldr	r3, [fp, #-8]
   1aec4:	mov	r2, #1
   1aec8:	str	r2, [r3, #4]
   1aecc:	mov	r0, #4
   1aed0:	bl	33ba0 <__assert_fail@plt+0x2265c>
   1aed4:	mov	r3, r0
   1aed8:	mov	r2, r3
   1aedc:	ldr	r3, [fp, #-8]
   1aee0:	str	r2, [r3, #8]
   1aee4:	ldr	r3, [fp, #-8]
   1aee8:	ldr	r3, [r3, #8]
   1aeec:	cmp	r3, #0
   1aef0:	moveq	r3, #1
   1aef4:	movne	r3, #0
   1aef8:	uxtb	r3, r3
   1aefc:	cmp	r3, #0
   1af00:	beq	1af28 <__assert_fail@plt+0x99e4>
   1af04:	ldr	r3, [fp, #-8]
   1af08:	mov	r2, #0
   1af0c:	str	r2, [r3, #4]
   1af10:	ldr	r3, [fp, #-8]
   1af14:	ldr	r2, [r3, #4]
   1af18:	ldr	r3, [fp, #-8]
   1af1c:	str	r2, [r3]
   1af20:	mov	r3, #12
   1af24:	b	1af3c <__assert_fail@plt+0x99f8>
   1af28:	ldr	r3, [fp, #-8]
   1af2c:	ldr	r3, [r3, #8]
   1af30:	ldr	r2, [fp, #-12]
   1af34:	str	r2, [r3]
   1af38:	mov	r3, #0
   1af3c:	mov	r0, r3
   1af40:	sub	sp, fp, #4
   1af44:	ldr	fp, [sp]
   1af48:	add	sp, sp, #4
   1af4c:	pop	{pc}		; (ldr pc, [sp], #4)
   1af50:	str	fp, [sp, #-8]!
   1af54:	str	lr, [sp, #4]
   1af58:	add	fp, sp, #4
   1af5c:	sub	sp, sp, #16
   1af60:	str	r0, [fp, #-8]
   1af64:	str	r1, [fp, #-12]
   1af68:	str	r2, [fp, #-16]
   1af6c:	ldr	r3, [fp, #-8]
   1af70:	mov	r2, #2
   1af74:	str	r2, [r3]
   1af78:	mov	r0, #8
   1af7c:	bl	33ba0 <__assert_fail@plt+0x2265c>
   1af80:	mov	r3, r0
   1af84:	mov	r2, r3
   1af88:	ldr	r3, [fp, #-8]
   1af8c:	str	r2, [r3, #8]
   1af90:	ldr	r3, [fp, #-8]
   1af94:	ldr	r3, [r3, #8]
   1af98:	cmp	r3, #0
   1af9c:	moveq	r3, #1
   1afa0:	movne	r3, #0
   1afa4:	uxtb	r3, r3
   1afa8:	cmp	r3, #0
   1afac:	beq	1afb8 <__assert_fail@plt+0x9a74>
   1afb0:	mov	r3, #12
   1afb4:	b	1b054 <__assert_fail@plt+0x9b10>
   1afb8:	ldr	r2, [fp, #-12]
   1afbc:	ldr	r3, [fp, #-16]
   1afc0:	cmp	r2, r3
   1afc4:	bne	1afe8 <__assert_fail@plt+0x9aa4>
   1afc8:	ldr	r3, [fp, #-8]
   1afcc:	mov	r2, #1
   1afd0:	str	r2, [r3, #4]
   1afd4:	ldr	r3, [fp, #-8]
   1afd8:	ldr	r3, [r3, #8]
   1afdc:	ldr	r2, [fp, #-12]
   1afe0:	str	r2, [r3]
   1afe4:	b	1b050 <__assert_fail@plt+0x9b0c>
   1afe8:	ldr	r3, [fp, #-8]
   1afec:	mov	r2, #2
   1aff0:	str	r2, [r3, #4]
   1aff4:	ldr	r2, [fp, #-12]
   1aff8:	ldr	r3, [fp, #-16]
   1affc:	cmp	r2, r3
   1b000:	bge	1b02c <__assert_fail@plt+0x9ae8>
   1b004:	ldr	r3, [fp, #-8]
   1b008:	ldr	r3, [r3, #8]
   1b00c:	ldr	r2, [fp, #-12]
   1b010:	str	r2, [r3]
   1b014:	ldr	r3, [fp, #-8]
   1b018:	ldr	r3, [r3, #8]
   1b01c:	add	r3, r3, #4
   1b020:	ldr	r2, [fp, #-16]
   1b024:	str	r2, [r3]
   1b028:	b	1b050 <__assert_fail@plt+0x9b0c>
   1b02c:	ldr	r3, [fp, #-8]
   1b030:	ldr	r3, [r3, #8]
   1b034:	ldr	r2, [fp, #-16]
   1b038:	str	r2, [r3]
   1b03c:	ldr	r3, [fp, #-8]
   1b040:	ldr	r3, [r3, #8]
   1b044:	add	r3, r3, #4
   1b048:	ldr	r2, [fp, #-12]
   1b04c:	str	r2, [r3]
   1b050:	mov	r3, #0
   1b054:	mov	r0, r3
   1b058:	sub	sp, fp, #4
   1b05c:	ldr	fp, [sp]
   1b060:	add	sp, sp, #4
   1b064:	pop	{pc}		; (ldr pc, [sp], #4)
   1b068:	str	fp, [sp, #-8]!
   1b06c:	str	lr, [sp, #4]
   1b070:	add	fp, sp, #4
   1b074:	sub	sp, sp, #8
   1b078:	str	r0, [fp, #-8]
   1b07c:	str	r1, [fp, #-12]
   1b080:	ldr	r3, [fp, #-12]
   1b084:	ldr	r2, [r3, #4]
   1b088:	ldr	r3, [fp, #-8]
   1b08c:	str	r2, [r3, #4]
   1b090:	ldr	r3, [fp, #-12]
   1b094:	ldr	r3, [r3, #4]
   1b098:	cmp	r3, #0
   1b09c:	ble	1b140 <__assert_fail@plt+0x9bfc>
   1b0a0:	ldr	r3, [fp, #-8]
   1b0a4:	ldr	r2, [r3, #4]
   1b0a8:	ldr	r3, [fp, #-8]
   1b0ac:	str	r2, [r3]
   1b0b0:	ldr	r3, [fp, #-8]
   1b0b4:	ldr	r3, [r3]
   1b0b8:	lsl	r3, r3, #2
   1b0bc:	mov	r0, r3
   1b0c0:	bl	33ba0 <__assert_fail@plt+0x2265c>
   1b0c4:	mov	r3, r0
   1b0c8:	mov	r2, r3
   1b0cc:	ldr	r3, [fp, #-8]
   1b0d0:	str	r2, [r3, #8]
   1b0d4:	ldr	r3, [fp, #-8]
   1b0d8:	ldr	r3, [r3, #8]
   1b0dc:	cmp	r3, #0
   1b0e0:	moveq	r3, #1
   1b0e4:	movne	r3, #0
   1b0e8:	uxtb	r3, r3
   1b0ec:	cmp	r3, #0
   1b0f0:	beq	1b118 <__assert_fail@plt+0x9bd4>
   1b0f4:	ldr	r3, [fp, #-8]
   1b0f8:	mov	r2, #0
   1b0fc:	str	r2, [r3, #4]
   1b100:	ldr	r3, [fp, #-8]
   1b104:	ldr	r2, [r3, #4]
   1b108:	ldr	r3, [fp, #-8]
   1b10c:	str	r2, [r3]
   1b110:	mov	r3, #12
   1b114:	b	1b154 <__assert_fail@plt+0x9c10>
   1b118:	ldr	r3, [fp, #-8]
   1b11c:	ldr	r0, [r3, #8]
   1b120:	ldr	r3, [fp, #-12]
   1b124:	ldr	r1, [r3, #8]
   1b128:	ldr	r3, [fp, #-12]
   1b12c:	ldr	r3, [r3, #4]
   1b130:	lsl	r3, r3, #2
   1b134:	mov	r2, r3
   1b138:	bl	11250 <memcpy@plt>
   1b13c:	b	1b150 <__assert_fail@plt+0x9c0c>
   1b140:	mov	r2, #12
   1b144:	mov	r1, #0
   1b148:	ldr	r0, [fp, #-8]
   1b14c:	bl	11448 <memset@plt>
   1b150:	mov	r3, #0
   1b154:	mov	r0, r3
   1b158:	sub	sp, fp, #4
   1b15c:	ldr	fp, [sp]
   1b160:	add	sp, sp, #4
   1b164:	pop	{pc}		; (ldr pc, [sp], #4)
   1b168:	str	fp, [sp, #-8]!
   1b16c:	str	lr, [sp, #4]
   1b170:	add	fp, sp, #4
   1b174:	sub	sp, sp, #48	; 0x30
   1b178:	str	r0, [fp, #-40]	; 0xffffffd8
   1b17c:	str	r1, [fp, #-44]	; 0xffffffd4
   1b180:	str	r2, [fp, #-48]	; 0xffffffd0
   1b184:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1b188:	ldr	r3, [r3, #4]
   1b18c:	cmp	r3, #0
   1b190:	beq	1b1a4 <__assert_fail@plt+0x9c60>
   1b194:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1b198:	ldr	r3, [r3, #4]
   1b19c:	cmp	r3, #0
   1b1a0:	bne	1b1ac <__assert_fail@plt+0x9c68>
   1b1a4:	mov	r3, #0
   1b1a8:	b	1b5f8 <__assert_fail@plt+0xa0b4>
   1b1ac:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1b1b0:	ldr	r2, [r3, #4]
   1b1b4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1b1b8:	ldr	r3, [r3, #4]
   1b1bc:	add	r2, r2, r3
   1b1c0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b1c4:	ldr	r3, [r3, #4]
   1b1c8:	add	r2, r2, r3
   1b1cc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b1d0:	ldr	r3, [r3]
   1b1d4:	cmp	r2, r3
   1b1d8:	ble	1b25c <__assert_fail@plt+0x9d18>
   1b1dc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1b1e0:	ldr	r2, [r3, #4]
   1b1e4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1b1e8:	ldr	r3, [r3, #4]
   1b1ec:	add	r2, r2, r3
   1b1f0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b1f4:	ldr	r3, [r3]
   1b1f8:	add	r3, r2, r3
   1b1fc:	str	r3, [fp, #-32]	; 0xffffffe0
   1b200:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b204:	ldr	r2, [r3, #8]
   1b208:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b20c:	lsl	r3, r3, #2
   1b210:	mov	r1, r3
   1b214:	mov	r0, r2
   1b218:	bl	33c30 <__assert_fail@plt+0x226ec>
   1b21c:	str	r0, [fp, #-36]	; 0xffffffdc
   1b220:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1b224:	cmp	r3, #0
   1b228:	moveq	r3, #1
   1b22c:	movne	r3, #0
   1b230:	uxtb	r3, r3
   1b234:	cmp	r3, #0
   1b238:	beq	1b244 <__assert_fail@plt+0x9d00>
   1b23c:	mov	r3, #12
   1b240:	b	1b5f8 <__assert_fail@plt+0xa0b4>
   1b244:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b248:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1b24c:	str	r2, [r3, #8]
   1b250:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b254:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1b258:	str	r2, [r3]
   1b25c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b260:	ldr	r2, [r3, #4]
   1b264:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1b268:	ldr	r3, [r3, #4]
   1b26c:	add	r2, r2, r3
   1b270:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1b274:	ldr	r3, [r3, #4]
   1b278:	add	r3, r2, r3
   1b27c:	str	r3, [fp, #-28]	; 0xffffffe4
   1b280:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1b284:	ldr	r3, [r3, #4]
   1b288:	sub	r3, r3, #1
   1b28c:	str	r3, [fp, #-8]
   1b290:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1b294:	ldr	r3, [r3, #4]
   1b298:	sub	r3, r3, #1
   1b29c:	str	r3, [fp, #-12]
   1b2a0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b2a4:	ldr	r3, [r3, #4]
   1b2a8:	sub	r3, r3, #1
   1b2ac:	str	r3, [fp, #-20]	; 0xffffffec
   1b2b0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1b2b4:	ldr	r2, [r3, #8]
   1b2b8:	ldr	r3, [fp, #-8]
   1b2bc:	lsl	r3, r3, #2
   1b2c0:	add	r3, r2, r3
   1b2c4:	ldr	r2, [r3]
   1b2c8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1b2cc:	ldr	r1, [r3, #8]
   1b2d0:	ldr	r3, [fp, #-12]
   1b2d4:	lsl	r3, r3, #2
   1b2d8:	add	r3, r1, r3
   1b2dc:	ldr	r3, [r3]
   1b2e0:	cmp	r2, r3
   1b2e4:	bne	1b3f0 <__assert_fail@plt+0x9eac>
   1b2e8:	b	1b2f8 <__assert_fail@plt+0x9db4>
   1b2ec:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b2f0:	sub	r3, r3, #1
   1b2f4:	str	r3, [fp, #-20]	; 0xffffffec
   1b2f8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b2fc:	cmp	r3, #0
   1b300:	blt	1b33c <__assert_fail@plt+0x9df8>
   1b304:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b308:	ldr	r2, [r3, #8]
   1b30c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b310:	lsl	r3, r3, #2
   1b314:	add	r3, r2, r3
   1b318:	ldr	r2, [r3]
   1b31c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1b320:	ldr	r1, [r3, #8]
   1b324:	ldr	r3, [fp, #-8]
   1b328:	lsl	r3, r3, #2
   1b32c:	add	r3, r1, r3
   1b330:	ldr	r3, [r3]
   1b334:	cmp	r2, r3
   1b338:	bgt	1b2ec <__assert_fail@plt+0x9da8>
   1b33c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b340:	cmp	r3, #0
   1b344:	blt	1b380 <__assert_fail@plt+0x9e3c>
   1b348:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b34c:	ldr	r2, [r3, #8]
   1b350:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b354:	lsl	r3, r3, #2
   1b358:	add	r3, r2, r3
   1b35c:	ldr	r2, [r3]
   1b360:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1b364:	ldr	r1, [r3, #8]
   1b368:	ldr	r3, [fp, #-8]
   1b36c:	lsl	r3, r3, #2
   1b370:	add	r3, r1, r3
   1b374:	ldr	r3, [r3]
   1b378:	cmp	r2, r3
   1b37c:	beq	1b3bc <__assert_fail@plt+0x9e78>
   1b380:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1b384:	ldr	r2, [r3, #8]
   1b388:	ldr	r3, [fp, #-8]
   1b38c:	lsl	r3, r3, #2
   1b390:	add	r2, r2, r3
   1b394:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b398:	ldr	r1, [r3, #8]
   1b39c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b3a0:	sub	r3, r3, #1
   1b3a4:	str	r3, [fp, #-28]	; 0xffffffe4
   1b3a8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b3ac:	lsl	r3, r3, #2
   1b3b0:	add	r3, r1, r3
   1b3b4:	ldr	r2, [r2]
   1b3b8:	str	r2, [r3]
   1b3bc:	ldr	r3, [fp, #-8]
   1b3c0:	sub	r3, r3, #1
   1b3c4:	str	r3, [fp, #-8]
   1b3c8:	ldr	r3, [fp, #-8]
   1b3cc:	cmp	r3, #0
   1b3d0:	blt	1b464 <__assert_fail@plt+0x9f20>
   1b3d4:	ldr	r3, [fp, #-12]
   1b3d8:	sub	r3, r3, #1
   1b3dc:	str	r3, [fp, #-12]
   1b3e0:	ldr	r3, [fp, #-12]
   1b3e4:	cmp	r3, #0
   1b3e8:	blt	1b464 <__assert_fail@plt+0x9f20>
   1b3ec:	b	1b2b0 <__assert_fail@plt+0x9d6c>
   1b3f0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1b3f4:	ldr	r2, [r3, #8]
   1b3f8:	ldr	r3, [fp, #-8]
   1b3fc:	lsl	r3, r3, #2
   1b400:	add	r3, r2, r3
   1b404:	ldr	r2, [r3]
   1b408:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1b40c:	ldr	r1, [r3, #8]
   1b410:	ldr	r3, [fp, #-12]
   1b414:	lsl	r3, r3, #2
   1b418:	add	r3, r1, r3
   1b41c:	ldr	r3, [r3]
   1b420:	cmp	r2, r3
   1b424:	bge	1b444 <__assert_fail@plt+0x9f00>
   1b428:	ldr	r3, [fp, #-12]
   1b42c:	sub	r3, r3, #1
   1b430:	str	r3, [fp, #-12]
   1b434:	ldr	r3, [fp, #-12]
   1b438:	cmp	r3, #0
   1b43c:	bge	1b2b0 <__assert_fail@plt+0x9d6c>
   1b440:	b	1b464 <__assert_fail@plt+0x9f20>
   1b444:	ldr	r3, [fp, #-8]
   1b448:	sub	r3, r3, #1
   1b44c:	str	r3, [fp, #-8]
   1b450:	ldr	r3, [fp, #-8]
   1b454:	cmp	r3, #0
   1b458:	blt	1b460 <__assert_fail@plt+0x9f1c>
   1b45c:	b	1b2b0 <__assert_fail@plt+0x9d6c>
   1b460:	nop	{0}
   1b464:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b468:	ldr	r3, [r3, #4]
   1b46c:	sub	r3, r3, #1
   1b470:	str	r3, [fp, #-20]	; 0xffffffec
   1b474:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b478:	ldr	r2, [r3, #4]
   1b47c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1b480:	ldr	r3, [r3, #4]
   1b484:	add	r2, r2, r3
   1b488:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1b48c:	ldr	r3, [r3, #4]
   1b490:	add	r3, r2, r3
   1b494:	sub	r3, r3, #1
   1b498:	str	r3, [fp, #-16]
   1b49c:	ldr	r2, [fp, #-16]
   1b4a0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b4a4:	sub	r3, r2, r3
   1b4a8:	add	r3, r3, #1
   1b4ac:	str	r3, [fp, #-24]	; 0xffffffe8
   1b4b0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b4b4:	ldr	r2, [r3, #4]
   1b4b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b4bc:	add	r2, r2, r3
   1b4c0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b4c4:	str	r2, [r3, #4]
   1b4c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b4cc:	cmp	r3, #0
   1b4d0:	ble	1b5c8 <__assert_fail@plt+0xa084>
   1b4d4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b4d8:	cmp	r3, #0
   1b4dc:	blt	1b5c8 <__assert_fail@plt+0xa084>
   1b4e0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b4e4:	ldr	r2, [r3, #8]
   1b4e8:	ldr	r3, [fp, #-16]
   1b4ec:	lsl	r3, r3, #2
   1b4f0:	add	r3, r2, r3
   1b4f4:	ldr	r2, [r3]
   1b4f8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b4fc:	ldr	r1, [r3, #8]
   1b500:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b504:	lsl	r3, r3, #2
   1b508:	add	r3, r1, r3
   1b50c:	ldr	r3, [r3]
   1b510:	cmp	r2, r3
   1b514:	ble	1b570 <__assert_fail@plt+0xa02c>
   1b518:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b51c:	ldr	r2, [r3, #8]
   1b520:	ldr	r3, [fp, #-16]
   1b524:	sub	r1, r3, #1
   1b528:	str	r1, [fp, #-16]
   1b52c:	lsl	r3, r3, #2
   1b530:	add	r2, r2, r3
   1b534:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b538:	ldr	r1, [r3, #8]
   1b53c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b540:	sub	r0, r3, #1
   1b544:	str	r0, [fp, #-24]	; 0xffffffe8
   1b548:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b54c:	add	r3, r3, r0
   1b550:	lsl	r3, r3, #2
   1b554:	add	r3, r1, r3
   1b558:	ldr	r2, [r2]
   1b55c:	str	r2, [r3]
   1b560:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b564:	cmp	r3, #0
   1b568:	bne	1b4e0 <__assert_fail@plt+0x9f9c>
   1b56c:	b	1b5c8 <__assert_fail@plt+0xa084>
   1b570:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b574:	ldr	r2, [r3, #8]
   1b578:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b57c:	lsl	r3, r3, #2
   1b580:	add	r2, r2, r3
   1b584:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b588:	ldr	r1, [r3, #8]
   1b58c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b590:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b594:	add	r3, r0, r3
   1b598:	lsl	r3, r3, #2
   1b59c:	add	r3, r1, r3
   1b5a0:	ldr	r2, [r2]
   1b5a4:	str	r2, [r3]
   1b5a8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b5ac:	sub	r3, r3, #1
   1b5b0:	str	r3, [fp, #-20]	; 0xffffffec
   1b5b4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b5b8:	cmp	r3, #0
   1b5bc:	blt	1b5c4 <__assert_fail@plt+0xa080>
   1b5c0:	b	1b4e0 <__assert_fail@plt+0x9f9c>
   1b5c4:	nop	{0}
   1b5c8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b5cc:	ldr	r0, [r3, #8]
   1b5d0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b5d4:	ldr	r2, [r3, #8]
   1b5d8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b5dc:	lsl	r3, r3, #2
   1b5e0:	add	r1, r2, r3
   1b5e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b5e8:	lsl	r3, r3, #2
   1b5ec:	mov	r2, r3
   1b5f0:	bl	11250 <memcpy@plt>
   1b5f4:	mov	r3, #0
   1b5f8:	mov	r0, r3
   1b5fc:	sub	sp, fp, #4
   1b600:	ldr	fp, [sp]
   1b604:	add	sp, sp, #4
   1b608:	pop	{pc}		; (ldr pc, [sp], #4)
   1b60c:	str	fp, [sp, #-8]!
   1b610:	str	lr, [sp, #4]
   1b614:	add	fp, sp, #4
   1b618:	sub	sp, sp, #32
   1b61c:	str	r0, [fp, #-24]	; 0xffffffe8
   1b620:	str	r1, [fp, #-28]	; 0xffffffe4
   1b624:	str	r2, [fp, #-32]	; 0xffffffe0
   1b628:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b62c:	cmp	r3, #0
   1b630:	beq	1b6c8 <__assert_fail@plt+0xa184>
   1b634:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b638:	ldr	r3, [r3, #4]
   1b63c:	cmp	r3, #0
   1b640:	ble	1b6c8 <__assert_fail@plt+0xa184>
   1b644:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b648:	cmp	r3, #0
   1b64c:	beq	1b6c8 <__assert_fail@plt+0xa184>
   1b650:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b654:	ldr	r3, [r3, #4]
   1b658:	cmp	r3, #0
   1b65c:	ble	1b6c8 <__assert_fail@plt+0xa184>
   1b660:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b664:	ldr	r2, [r3, #4]
   1b668:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b66c:	ldr	r3, [r3, #4]
   1b670:	add	r2, r2, r3
   1b674:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b678:	str	r2, [r3]
   1b67c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b680:	ldr	r3, [r3]
   1b684:	lsl	r3, r3, #2
   1b688:	mov	r0, r3
   1b68c:	bl	33ba0 <__assert_fail@plt+0x2265c>
   1b690:	mov	r3, r0
   1b694:	mov	r2, r3
   1b698:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b69c:	str	r2, [r3, #8]
   1b6a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b6a4:	ldr	r3, [r3, #8]
   1b6a8:	cmp	r3, #0
   1b6ac:	moveq	r3, #1
   1b6b0:	movne	r3, #0
   1b6b4:	uxtb	r3, r3
   1b6b8:	cmp	r3, #0
   1b6bc:	beq	1b740 <__assert_fail@plt+0xa1fc>
   1b6c0:	mov	r3, #12
   1b6c4:	b	1b980 <__assert_fail@plt+0xa43c>
   1b6c8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b6cc:	cmp	r3, #0
   1b6d0:	beq	1b6f8 <__assert_fail@plt+0xa1b4>
   1b6d4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b6d8:	ldr	r3, [r3, #4]
   1b6dc:	cmp	r3, #0
   1b6e0:	ble	1b6f8 <__assert_fail@plt+0xa1b4>
   1b6e4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1b6e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b6ec:	bl	1b068 <__assert_fail@plt+0x9b24>
   1b6f0:	mov	r3, r0
   1b6f4:	b	1b980 <__assert_fail@plt+0xa43c>
   1b6f8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b6fc:	cmp	r3, #0
   1b700:	beq	1b728 <__assert_fail@plt+0xa1e4>
   1b704:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b708:	ldr	r3, [r3, #4]
   1b70c:	cmp	r3, #0
   1b710:	ble	1b728 <__assert_fail@plt+0xa1e4>
   1b714:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1b718:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b71c:	bl	1b068 <__assert_fail@plt+0x9b24>
   1b720:	mov	r3, r0
   1b724:	b	1b980 <__assert_fail@plt+0xa43c>
   1b728:	mov	r2, #12
   1b72c:	mov	r1, #0
   1b730:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b734:	bl	11448 <memset@plt>
   1b738:	mov	r3, #0
   1b73c:	b	1b980 <__assert_fail@plt+0xa43c>
   1b740:	mov	r3, #0
   1b744:	str	r3, [fp, #-16]
   1b748:	ldr	r3, [fp, #-16]
   1b74c:	str	r3, [fp, #-12]
   1b750:	ldr	r3, [fp, #-12]
   1b754:	str	r3, [fp, #-8]
   1b758:	b	1b85c <__assert_fail@plt+0xa318>
   1b75c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b760:	ldr	r2, [r3, #8]
   1b764:	ldr	r3, [fp, #-8]
   1b768:	lsl	r3, r3, #2
   1b76c:	add	r3, r2, r3
   1b770:	ldr	r2, [r3]
   1b774:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b778:	ldr	r1, [r3, #8]
   1b77c:	ldr	r3, [fp, #-12]
   1b780:	lsl	r3, r3, #2
   1b784:	add	r3, r1, r3
   1b788:	ldr	r3, [r3]
   1b78c:	cmp	r2, r3
   1b790:	ble	1b7d8 <__assert_fail@plt+0xa294>
   1b794:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b798:	ldr	r2, [r3, #8]
   1b79c:	ldr	r3, [fp, #-12]
   1b7a0:	add	r1, r3, #1
   1b7a4:	str	r1, [fp, #-12]
   1b7a8:	lsl	r3, r3, #2
   1b7ac:	add	r2, r2, r3
   1b7b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b7b4:	ldr	r1, [r3, #8]
   1b7b8:	ldr	r3, [fp, #-16]
   1b7bc:	add	r0, r3, #1
   1b7c0:	str	r0, [fp, #-16]
   1b7c4:	lsl	r3, r3, #2
   1b7c8:	add	r3, r1, r3
   1b7cc:	ldr	r2, [r2]
   1b7d0:	str	r2, [r3]
   1b7d4:	b	1b85c <__assert_fail@plt+0xa318>
   1b7d8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b7dc:	ldr	r2, [r3, #8]
   1b7e0:	ldr	r3, [fp, #-8]
   1b7e4:	lsl	r3, r3, #2
   1b7e8:	add	r3, r2, r3
   1b7ec:	ldr	r2, [r3]
   1b7f0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b7f4:	ldr	r1, [r3, #8]
   1b7f8:	ldr	r3, [fp, #-12]
   1b7fc:	lsl	r3, r3, #2
   1b800:	add	r3, r1, r3
   1b804:	ldr	r3, [r3]
   1b808:	cmp	r2, r3
   1b80c:	bne	1b81c <__assert_fail@plt+0xa2d8>
   1b810:	ldr	r3, [fp, #-12]
   1b814:	add	r3, r3, #1
   1b818:	str	r3, [fp, #-12]
   1b81c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b820:	ldr	r2, [r3, #8]
   1b824:	ldr	r3, [fp, #-8]
   1b828:	add	r1, r3, #1
   1b82c:	str	r1, [fp, #-8]
   1b830:	lsl	r3, r3, #2
   1b834:	add	r2, r2, r3
   1b838:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b83c:	ldr	r1, [r3, #8]
   1b840:	ldr	r3, [fp, #-16]
   1b844:	add	r0, r3, #1
   1b848:	str	r0, [fp, #-16]
   1b84c:	lsl	r3, r3, #2
   1b850:	add	r3, r1, r3
   1b854:	ldr	r2, [r2]
   1b858:	str	r2, [r3]
   1b85c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b860:	ldr	r3, [r3, #4]
   1b864:	ldr	r2, [fp, #-8]
   1b868:	cmp	r2, r3
   1b86c:	bge	1b884 <__assert_fail@plt+0xa340>
   1b870:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b874:	ldr	r3, [r3, #4]
   1b878:	ldr	r2, [fp, #-12]
   1b87c:	cmp	r2, r3
   1b880:	blt	1b75c <__assert_fail@plt+0xa218>
   1b884:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b888:	ldr	r3, [r3, #4]
   1b88c:	ldr	r2, [fp, #-8]
   1b890:	cmp	r2, r3
   1b894:	bge	1b8fc <__assert_fail@plt+0xa3b8>
   1b898:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b89c:	ldr	r2, [r3, #8]
   1b8a0:	ldr	r3, [fp, #-16]
   1b8a4:	lsl	r3, r3, #2
   1b8a8:	add	r0, r2, r3
   1b8ac:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b8b0:	ldr	r2, [r3, #8]
   1b8b4:	ldr	r3, [fp, #-8]
   1b8b8:	lsl	r3, r3, #2
   1b8bc:	add	r1, r2, r3
   1b8c0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b8c4:	ldr	r2, [r3, #4]
   1b8c8:	ldr	r3, [fp, #-8]
   1b8cc:	sub	r3, r2, r3
   1b8d0:	lsl	r3, r3, #2
   1b8d4:	mov	r2, r3
   1b8d8:	bl	11250 <memcpy@plt>
   1b8dc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b8e0:	ldr	r2, [r3, #4]
   1b8e4:	ldr	r3, [fp, #-8]
   1b8e8:	sub	r3, r2, r3
   1b8ec:	ldr	r2, [fp, #-16]
   1b8f0:	add	r3, r2, r3
   1b8f4:	str	r3, [fp, #-16]
   1b8f8:	b	1b970 <__assert_fail@plt+0xa42c>
   1b8fc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b900:	ldr	r3, [r3, #4]
   1b904:	ldr	r2, [fp, #-12]
   1b908:	cmp	r2, r3
   1b90c:	bge	1b970 <__assert_fail@plt+0xa42c>
   1b910:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b914:	ldr	r2, [r3, #8]
   1b918:	ldr	r3, [fp, #-16]
   1b91c:	lsl	r3, r3, #2
   1b920:	add	r0, r2, r3
   1b924:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b928:	ldr	r2, [r3, #8]
   1b92c:	ldr	r3, [fp, #-12]
   1b930:	lsl	r3, r3, #2
   1b934:	add	r1, r2, r3
   1b938:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b93c:	ldr	r2, [r3, #4]
   1b940:	ldr	r3, [fp, #-12]
   1b944:	sub	r3, r2, r3
   1b948:	lsl	r3, r3, #2
   1b94c:	mov	r2, r3
   1b950:	bl	11250 <memcpy@plt>
   1b954:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b958:	ldr	r2, [r3, #4]
   1b95c:	ldr	r3, [fp, #-12]
   1b960:	sub	r3, r2, r3
   1b964:	ldr	r2, [fp, #-16]
   1b968:	add	r3, r2, r3
   1b96c:	str	r3, [fp, #-16]
   1b970:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b974:	ldr	r2, [fp, #-16]
   1b978:	str	r2, [r3, #4]
   1b97c:	mov	r3, #0
   1b980:	mov	r0, r3
   1b984:	sub	sp, fp, #4
   1b988:	ldr	fp, [sp]
   1b98c:	add	sp, sp, #4
   1b990:	pop	{pc}		; (ldr pc, [sp], #4)
   1b994:	str	fp, [sp, #-8]!
   1b998:	str	lr, [sp, #4]
   1b99c:	add	fp, sp, #4
   1b9a0:	sub	sp, sp, #32
   1b9a4:	str	r0, [fp, #-32]	; 0xffffffe0
   1b9a8:	str	r1, [fp, #-36]	; 0xffffffdc
   1b9ac:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1b9b0:	cmp	r3, #0
   1b9b4:	beq	1b9c8 <__assert_fail@plt+0xa484>
   1b9b8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1b9bc:	ldr	r3, [r3, #4]
   1b9c0:	cmp	r3, #0
   1b9c4:	bne	1b9d0 <__assert_fail@plt+0xa48c>
   1b9c8:	mov	r3, #0
   1b9cc:	b	1bde0 <__assert_fail@plt+0xa89c>
   1b9d0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b9d4:	ldr	r2, [r3]
   1b9d8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1b9dc:	ldr	r3, [r3, #4]
   1b9e0:	lsl	r1, r3, #1
   1b9e4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b9e8:	ldr	r3, [r3, #4]
   1b9ec:	add	r3, r1, r3
   1b9f0:	cmp	r2, r3
   1b9f4:	bge	1ba70 <__assert_fail@plt+0xa52c>
   1b9f8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1b9fc:	ldr	r2, [r3, #4]
   1ba00:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1ba04:	ldr	r3, [r3]
   1ba08:	add	r3, r2, r3
   1ba0c:	lsl	r3, r3, #1
   1ba10:	str	r3, [fp, #-24]	; 0xffffffe8
   1ba14:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1ba18:	ldr	r2, [r3, #8]
   1ba1c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ba20:	lsl	r3, r3, #2
   1ba24:	mov	r1, r3
   1ba28:	mov	r0, r2
   1ba2c:	bl	33c30 <__assert_fail@plt+0x226ec>
   1ba30:	str	r0, [fp, #-28]	; 0xffffffe4
   1ba34:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1ba38:	cmp	r3, #0
   1ba3c:	moveq	r3, #1
   1ba40:	movne	r3, #0
   1ba44:	uxtb	r3, r3
   1ba48:	cmp	r3, #0
   1ba4c:	beq	1ba58 <__assert_fail@plt+0xa514>
   1ba50:	mov	r3, #12
   1ba54:	b	1bde0 <__assert_fail@plt+0xa89c>
   1ba58:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1ba5c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1ba60:	str	r2, [r3, #8]
   1ba64:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1ba68:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1ba6c:	str	r2, [r3]
   1ba70:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1ba74:	ldr	r3, [r3, #4]
   1ba78:	cmp	r3, #0
   1ba7c:	moveq	r3, #1
   1ba80:	movne	r3, #0
   1ba84:	uxtb	r3, r3
   1ba88:	cmp	r3, #0
   1ba8c:	beq	1bad8 <__assert_fail@plt+0xa594>
   1ba90:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1ba94:	ldr	r3, [r3, #8]
   1ba98:	cmp	r3, #0
   1ba9c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1baa0:	ldr	r2, [r3, #4]
   1baa4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1baa8:	str	r2, [r3, #4]
   1baac:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1bab0:	ldr	r0, [r3, #8]
   1bab4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1bab8:	ldr	r1, [r3, #8]
   1babc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1bac0:	ldr	r3, [r3, #4]
   1bac4:	lsl	r3, r3, #2
   1bac8:	mov	r2, r3
   1bacc:	bl	11250 <memcpy@plt>
   1bad0:	mov	r3, #0
   1bad4:	b	1bde0 <__assert_fail@plt+0xa89c>
   1bad8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1badc:	ldr	r2, [r3, #4]
   1bae0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1bae4:	ldr	r3, [r3, #4]
   1bae8:	lsl	r3, r3, #1
   1baec:	add	r3, r2, r3
   1baf0:	str	r3, [fp, #-16]
   1baf4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1baf8:	ldr	r3, [r3, #4]
   1bafc:	sub	r3, r3, #1
   1bb00:	str	r3, [fp, #-8]
   1bb04:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1bb08:	ldr	r3, [r3, #4]
   1bb0c:	sub	r3, r3, #1
   1bb10:	str	r3, [fp, #-12]
   1bb14:	b	1bbf8 <__assert_fail@plt+0xa6b4>
   1bb18:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1bb1c:	ldr	r2, [r3, #8]
   1bb20:	ldr	r3, [fp, #-12]
   1bb24:	lsl	r3, r3, #2
   1bb28:	add	r3, r2, r3
   1bb2c:	ldr	r2, [r3]
   1bb30:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1bb34:	ldr	r1, [r3, #8]
   1bb38:	ldr	r3, [fp, #-8]
   1bb3c:	lsl	r3, r3, #2
   1bb40:	add	r3, r1, r3
   1bb44:	ldr	r3, [r3]
   1bb48:	cmp	r2, r3
   1bb4c:	bne	1bb6c <__assert_fail@plt+0xa628>
   1bb50:	ldr	r3, [fp, #-8]
   1bb54:	sub	r3, r3, #1
   1bb58:	str	r3, [fp, #-8]
   1bb5c:	ldr	r3, [fp, #-12]
   1bb60:	sub	r3, r3, #1
   1bb64:	str	r3, [fp, #-12]
   1bb68:	b	1bbf8 <__assert_fail@plt+0xa6b4>
   1bb6c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1bb70:	ldr	r2, [r3, #8]
   1bb74:	ldr	r3, [fp, #-12]
   1bb78:	lsl	r3, r3, #2
   1bb7c:	add	r3, r2, r3
   1bb80:	ldr	r2, [r3]
   1bb84:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1bb88:	ldr	r1, [r3, #8]
   1bb8c:	ldr	r3, [fp, #-8]
   1bb90:	lsl	r3, r3, #2
   1bb94:	add	r3, r1, r3
   1bb98:	ldr	r3, [r3]
   1bb9c:	cmp	r2, r3
   1bba0:	bge	1bbec <__assert_fail@plt+0xa6a8>
   1bba4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1bba8:	ldr	r2, [r3, #8]
   1bbac:	ldr	r3, [fp, #-8]
   1bbb0:	sub	r1, r3, #1
   1bbb4:	str	r1, [fp, #-8]
   1bbb8:	lsl	r3, r3, #2
   1bbbc:	add	r2, r2, r3
   1bbc0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1bbc4:	ldr	r1, [r3, #8]
   1bbc8:	ldr	r3, [fp, #-16]
   1bbcc:	sub	r3, r3, #1
   1bbd0:	str	r3, [fp, #-16]
   1bbd4:	ldr	r3, [fp, #-16]
   1bbd8:	lsl	r3, r3, #2
   1bbdc:	add	r3, r1, r3
   1bbe0:	ldr	r2, [r2]
   1bbe4:	str	r2, [r3]
   1bbe8:	b	1bbf8 <__assert_fail@plt+0xa6b4>
   1bbec:	ldr	r3, [fp, #-12]
   1bbf0:	sub	r3, r3, #1
   1bbf4:	str	r3, [fp, #-12]
   1bbf8:	ldr	r3, [fp, #-8]
   1bbfc:	cmp	r3, #0
   1bc00:	blt	1bc10 <__assert_fail@plt+0xa6cc>
   1bc04:	ldr	r3, [fp, #-12]
   1bc08:	cmp	r3, #0
   1bc0c:	bge	1bb18 <__assert_fail@plt+0xa5d4>
   1bc10:	ldr	r3, [fp, #-8]
   1bc14:	cmp	r3, #0
   1bc18:	blt	1bc60 <__assert_fail@plt+0xa71c>
   1bc1c:	ldr	r3, [fp, #-8]
   1bc20:	add	r3, r3, #1
   1bc24:	ldr	r2, [fp, #-16]
   1bc28:	sub	r3, r2, r3
   1bc2c:	str	r3, [fp, #-16]
   1bc30:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1bc34:	ldr	r2, [r3, #8]
   1bc38:	ldr	r3, [fp, #-16]
   1bc3c:	lsl	r3, r3, #2
   1bc40:	add	r0, r2, r3
   1bc44:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1bc48:	ldr	r1, [r3, #8]
   1bc4c:	ldr	r3, [fp, #-8]
   1bc50:	add	r3, r3, #1
   1bc54:	lsl	r3, r3, #2
   1bc58:	mov	r2, r3
   1bc5c:	bl	11250 <memcpy@plt>
   1bc60:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1bc64:	ldr	r3, [r3, #4]
   1bc68:	sub	r3, r3, #1
   1bc6c:	str	r3, [fp, #-12]
   1bc70:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1bc74:	ldr	r2, [r3, #4]
   1bc78:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1bc7c:	ldr	r3, [r3, #4]
   1bc80:	lsl	r3, r3, #1
   1bc84:	add	r3, r2, r3
   1bc88:	sub	r3, r3, #1
   1bc8c:	str	r3, [fp, #-8]
   1bc90:	ldr	r2, [fp, #-8]
   1bc94:	ldr	r3, [fp, #-16]
   1bc98:	sub	r3, r2, r3
   1bc9c:	add	r3, r3, #1
   1bca0:	str	r3, [fp, #-20]	; 0xffffffec
   1bca4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1bca8:	cmp	r3, #0
   1bcac:	bne	1bcb8 <__assert_fail@plt+0xa774>
   1bcb0:	mov	r3, #0
   1bcb4:	b	1bde0 <__assert_fail@plt+0xa89c>
   1bcb8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1bcbc:	ldr	r2, [r3, #4]
   1bcc0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1bcc4:	add	r2, r2, r3
   1bcc8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1bccc:	str	r2, [r3, #4]
   1bcd0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1bcd4:	ldr	r2, [r3, #8]
   1bcd8:	ldr	r3, [fp, #-8]
   1bcdc:	lsl	r3, r3, #2
   1bce0:	add	r3, r2, r3
   1bce4:	ldr	r2, [r3]
   1bce8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1bcec:	ldr	r1, [r3, #8]
   1bcf0:	ldr	r3, [fp, #-12]
   1bcf4:	lsl	r3, r3, #2
   1bcf8:	add	r3, r1, r3
   1bcfc:	ldr	r3, [r3]
   1bd00:	cmp	r2, r3
   1bd04:	ble	1bd60 <__assert_fail@plt+0xa81c>
   1bd08:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1bd0c:	ldr	r2, [r3, #8]
   1bd10:	ldr	r3, [fp, #-8]
   1bd14:	sub	r1, r3, #1
   1bd18:	str	r1, [fp, #-8]
   1bd1c:	lsl	r3, r3, #2
   1bd20:	add	r2, r2, r3
   1bd24:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1bd28:	ldr	r1, [r3, #8]
   1bd2c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1bd30:	sub	r0, r3, #1
   1bd34:	str	r0, [fp, #-20]	; 0xffffffec
   1bd38:	ldr	r0, [fp, #-12]
   1bd3c:	add	r3, r3, r0
   1bd40:	lsl	r3, r3, #2
   1bd44:	add	r3, r1, r3
   1bd48:	ldr	r2, [r2]
   1bd4c:	str	r2, [r3]
   1bd50:	ldr	r3, [fp, #-20]	; 0xffffffec
   1bd54:	cmp	r3, #0
   1bd58:	bne	1bcd0 <__assert_fail@plt+0xa78c>
   1bd5c:	b	1bddc <__assert_fail@plt+0xa898>
   1bd60:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1bd64:	ldr	r2, [r3, #8]
   1bd68:	ldr	r3, [fp, #-12]
   1bd6c:	lsl	r3, r3, #2
   1bd70:	add	r2, r2, r3
   1bd74:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1bd78:	ldr	r1, [r3, #8]
   1bd7c:	ldr	r0, [fp, #-12]
   1bd80:	ldr	r3, [fp, #-20]	; 0xffffffec
   1bd84:	add	r3, r0, r3
   1bd88:	lsl	r3, r3, #2
   1bd8c:	add	r3, r1, r3
   1bd90:	ldr	r2, [r2]
   1bd94:	str	r2, [r3]
   1bd98:	ldr	r3, [fp, #-12]
   1bd9c:	sub	r3, r3, #1
   1bda0:	str	r3, [fp, #-12]
   1bda4:	ldr	r3, [fp, #-12]
   1bda8:	cmp	r3, #0
   1bdac:	bge	1bcd0 <__assert_fail@plt+0xa78c>
   1bdb0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1bdb4:	ldr	r0, [r3, #8]
   1bdb8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1bdbc:	ldr	r2, [r3, #8]
   1bdc0:	ldr	r3, [fp, #-16]
   1bdc4:	lsl	r3, r3, #2
   1bdc8:	add	r1, r2, r3
   1bdcc:	ldr	r3, [fp, #-20]	; 0xffffffec
   1bdd0:	lsl	r3, r3, #2
   1bdd4:	mov	r2, r3
   1bdd8:	bl	11250 <memcpy@plt>
   1bddc:	mov	r3, #0
   1bde0:	mov	r0, r3
   1bde4:	sub	sp, fp, #4
   1bde8:	ldr	fp, [sp]
   1bdec:	add	sp, sp, #4
   1bdf0:	pop	{pc}		; (ldr pc, [sp], #4)
   1bdf4:	str	fp, [sp, #-8]!
   1bdf8:	str	lr, [sp, #4]
   1bdfc:	add	fp, sp, #4
   1be00:	sub	sp, sp, #16
   1be04:	str	r0, [fp, #-16]
   1be08:	str	r1, [fp, #-20]	; 0xffffffec
   1be0c:	ldr	r3, [fp, #-16]
   1be10:	ldr	r3, [r3]
   1be14:	cmp	r3, #0
   1be18:	bne	1be50 <__assert_fail@plt+0xa90c>
   1be1c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1be20:	ldr	r0, [fp, #-16]
   1be24:	bl	1ae9c <__assert_fail@plt+0x9958>
   1be28:	mov	r3, r0
   1be2c:	cmp	r3, #0
   1be30:	moveq	r3, #1
   1be34:	movne	r3, #0
   1be38:	uxtb	r3, r3
   1be3c:	cmp	r3, #0
   1be40:	movne	r3, #1
   1be44:	moveq	r3, #0
   1be48:	uxtb	r3, r3
   1be4c:	b	1c060 <__assert_fail@plt+0xab1c>
   1be50:	ldr	r3, [fp, #-16]
   1be54:	ldr	r3, [r3, #4]
   1be58:	cmp	r3, #0
   1be5c:	bne	1be98 <__assert_fail@plt+0xa954>
   1be60:	ldr	r3, [fp, #-16]
   1be64:	ldr	r3, [r3, #8]
   1be68:	cmp	r3, #0
   1be6c:	ldr	r3, [fp, #-16]
   1be70:	ldr	r3, [r3, #8]
   1be74:	ldr	r2, [fp, #-20]	; 0xffffffec
   1be78:	str	r2, [r3]
   1be7c:	ldr	r3, [fp, #-16]
   1be80:	ldr	r3, [r3, #4]
   1be84:	add	r2, r3, #1
   1be88:	ldr	r3, [fp, #-16]
   1be8c:	str	r2, [r3, #4]
   1be90:	mov	r3, #1
   1be94:	b	1c060 <__assert_fail@plt+0xab1c>
   1be98:	ldr	r3, [fp, #-16]
   1be9c:	ldr	r2, [r3]
   1bea0:	ldr	r3, [fp, #-16]
   1bea4:	ldr	r3, [r3, #4]
   1bea8:	cmp	r2, r3
   1beac:	bne	1bf18 <__assert_fail@plt+0xa9d4>
   1beb0:	ldr	r3, [fp, #-16]
   1beb4:	ldr	r3, [r3]
   1beb8:	lsl	r2, r3, #1
   1bebc:	ldr	r3, [fp, #-16]
   1bec0:	str	r2, [r3]
   1bec4:	ldr	r3, [fp, #-16]
   1bec8:	ldr	r2, [r3, #8]
   1becc:	ldr	r3, [fp, #-16]
   1bed0:	ldr	r3, [r3]
   1bed4:	lsl	r3, r3, #2
   1bed8:	mov	r1, r3
   1bedc:	mov	r0, r2
   1bee0:	bl	33c30 <__assert_fail@plt+0x226ec>
   1bee4:	str	r0, [fp, #-12]
   1bee8:	ldr	r3, [fp, #-12]
   1beec:	cmp	r3, #0
   1bef0:	moveq	r3, #1
   1bef4:	movne	r3, #0
   1bef8:	uxtb	r3, r3
   1befc:	cmp	r3, #0
   1bf00:	beq	1bf0c <__assert_fail@plt+0xa9c8>
   1bf04:	mov	r3, #0
   1bf08:	b	1c060 <__assert_fail@plt+0xab1c>
   1bf0c:	ldr	r3, [fp, #-16]
   1bf10:	ldr	r2, [fp, #-12]
   1bf14:	str	r2, [r3, #8]
   1bf18:	ldr	r3, [fp, #-16]
   1bf1c:	ldr	r3, [r3, #8]
   1bf20:	ldr	r3, [r3]
   1bf24:	ldr	r2, [fp, #-20]	; 0xffffffec
   1bf28:	cmp	r2, r3
   1bf2c:	bge	1bf90 <__assert_fail@plt+0xaa4c>
   1bf30:	ldr	r3, [fp, #-16]
   1bf34:	ldr	r3, [r3, #4]
   1bf38:	str	r3, [fp, #-8]
   1bf3c:	b	1bf80 <__assert_fail@plt+0xaa3c>
   1bf40:	ldr	r3, [fp, #-16]
   1bf44:	ldr	r2, [r3, #8]
   1bf48:	ldr	r3, [fp, #-8]
   1bf4c:	sub	r3, r3, #-1073741823	; 0xc0000001
   1bf50:	lsl	r3, r3, #2
   1bf54:	add	r2, r2, r3
   1bf58:	ldr	r3, [fp, #-16]
   1bf5c:	ldr	r1, [r3, #8]
   1bf60:	ldr	r3, [fp, #-8]
   1bf64:	lsl	r3, r3, #2
   1bf68:	add	r3, r1, r3
   1bf6c:	ldr	r2, [r2]
   1bf70:	str	r2, [r3]
   1bf74:	ldr	r3, [fp, #-8]
   1bf78:	sub	r3, r3, #1
   1bf7c:	str	r3, [fp, #-8]
   1bf80:	ldr	r3, [fp, #-8]
   1bf84:	cmp	r3, #0
   1bf88:	bgt	1bf40 <__assert_fail@plt+0xa9fc>
   1bf8c:	b	1c02c <__assert_fail@plt+0xaae8>
   1bf90:	ldr	r3, [fp, #-16]
   1bf94:	ldr	r3, [r3, #4]
   1bf98:	str	r3, [fp, #-8]
   1bf9c:	b	1bfe0 <__assert_fail@plt+0xaa9c>
   1bfa0:	ldr	r3, [fp, #-16]
   1bfa4:	ldr	r2, [r3, #8]
   1bfa8:	ldr	r3, [fp, #-8]
   1bfac:	sub	r3, r3, #-1073741823	; 0xc0000001
   1bfb0:	lsl	r3, r3, #2
   1bfb4:	add	r2, r2, r3
   1bfb8:	ldr	r3, [fp, #-16]
   1bfbc:	ldr	r1, [r3, #8]
   1bfc0:	ldr	r3, [fp, #-8]
   1bfc4:	lsl	r3, r3, #2
   1bfc8:	add	r3, r1, r3
   1bfcc:	ldr	r2, [r2]
   1bfd0:	str	r2, [r3]
   1bfd4:	ldr	r3, [fp, #-8]
   1bfd8:	sub	r3, r3, #1
   1bfdc:	str	r3, [fp, #-8]
   1bfe0:	ldr	r3, [fp, #-16]
   1bfe4:	ldr	r2, [r3, #8]
   1bfe8:	ldr	r3, [fp, #-8]
   1bfec:	sub	r3, r3, #-1073741823	; 0xc0000001
   1bff0:	lsl	r3, r3, #2
   1bff4:	add	r3, r2, r3
   1bff8:	ldr	r3, [r3]
   1bffc:	ldr	r2, [fp, #-20]	; 0xffffffec
   1c000:	cmp	r2, r3
   1c004:	blt	1bfa0 <__assert_fail@plt+0xaa5c>
   1c008:	ldr	r3, [fp, #-16]
   1c00c:	ldr	r2, [r3, #8]
   1c010:	ldr	r3, [fp, #-8]
   1c014:	sub	r3, r3, #-1073741823	; 0xc0000001
   1c018:	lsl	r3, r3, #2
   1c01c:	add	r3, r2, r3
   1c020:	ldr	r3, [r3]
   1c024:	ldr	r2, [fp, #-20]	; 0xffffffec
   1c028:	cmp	r2, r3
   1c02c:	ldr	r3, [fp, #-16]
   1c030:	ldr	r2, [r3, #8]
   1c034:	ldr	r3, [fp, #-8]
   1c038:	lsl	r3, r3, #2
   1c03c:	add	r3, r2, r3
   1c040:	ldr	r2, [fp, #-20]	; 0xffffffec
   1c044:	str	r2, [r3]
   1c048:	ldr	r3, [fp, #-16]
   1c04c:	ldr	r3, [r3, #4]
   1c050:	add	r2, r3, #1
   1c054:	ldr	r3, [fp, #-16]
   1c058:	str	r2, [r3, #4]
   1c05c:	mov	r3, #1
   1c060:	mov	r0, r3
   1c064:	sub	sp, fp, #4
   1c068:	ldr	fp, [sp]
   1c06c:	add	sp, sp, #4
   1c070:	pop	{pc}		; (ldr pc, [sp], #4)
   1c074:	str	fp, [sp, #-8]!
   1c078:	str	lr, [sp, #4]
   1c07c:	add	fp, sp, #4
   1c080:	sub	sp, sp, #16
   1c084:	str	r0, [fp, #-16]
   1c088:	str	r1, [fp, #-20]	; 0xffffffec
   1c08c:	ldr	r3, [fp, #-16]
   1c090:	ldr	r2, [r3]
   1c094:	ldr	r3, [fp, #-16]
   1c098:	ldr	r3, [r3, #4]
   1c09c:	cmp	r2, r3
   1c0a0:	bne	1c110 <__assert_fail@plt+0xabcc>
   1c0a4:	ldr	r3, [fp, #-16]
   1c0a8:	ldr	r3, [r3]
   1c0ac:	add	r3, r3, #1
   1c0b0:	lsl	r2, r3, #1
   1c0b4:	ldr	r3, [fp, #-16]
   1c0b8:	str	r2, [r3]
   1c0bc:	ldr	r3, [fp, #-16]
   1c0c0:	ldr	r2, [r3, #8]
   1c0c4:	ldr	r3, [fp, #-16]
   1c0c8:	ldr	r3, [r3]
   1c0cc:	lsl	r3, r3, #2
   1c0d0:	mov	r1, r3
   1c0d4:	mov	r0, r2
   1c0d8:	bl	33c30 <__assert_fail@plt+0x226ec>
   1c0dc:	str	r0, [fp, #-8]
   1c0e0:	ldr	r3, [fp, #-8]
   1c0e4:	cmp	r3, #0
   1c0e8:	moveq	r3, #1
   1c0ec:	movne	r3, #0
   1c0f0:	uxtb	r3, r3
   1c0f4:	cmp	r3, #0
   1c0f8:	beq	1c104 <__assert_fail@plt+0xabc0>
   1c0fc:	mov	r3, #0
   1c100:	b	1c140 <__assert_fail@plt+0xabfc>
   1c104:	ldr	r3, [fp, #-16]
   1c108:	ldr	r2, [fp, #-8]
   1c10c:	str	r2, [r3, #8]
   1c110:	ldr	r3, [fp, #-16]
   1c114:	ldr	r2, [r3, #8]
   1c118:	ldr	r3, [fp, #-16]
   1c11c:	ldr	r3, [r3, #4]
   1c120:	add	r0, r3, #1
   1c124:	ldr	r1, [fp, #-16]
   1c128:	str	r0, [r1, #4]
   1c12c:	lsl	r3, r3, #2
   1c130:	add	r3, r2, r3
   1c134:	ldr	r2, [fp, #-20]	; 0xffffffec
   1c138:	str	r2, [r3]
   1c13c:	mov	r3, #1
   1c140:	mov	r0, r3
   1c144:	sub	sp, fp, #4
   1c148:	ldr	fp, [sp]
   1c14c:	add	sp, sp, #4
   1c150:	pop	{pc}		; (ldr pc, [sp], #4)
   1c154:	push	{fp}		; (str fp, [sp, #-4]!)
   1c158:	add	fp, sp, #0
   1c15c:	sub	sp, sp, #20
   1c160:	str	r0, [fp, #-16]
   1c164:	str	r1, [fp, #-20]	; 0xffffffec
   1c168:	ldr	r3, [fp, #-16]
   1c16c:	cmp	r3, #0
   1c170:	beq	1c198 <__assert_fail@plt+0xac54>
   1c174:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c178:	cmp	r3, #0
   1c17c:	beq	1c198 <__assert_fail@plt+0xac54>
   1c180:	ldr	r3, [fp, #-16]
   1c184:	ldr	r2, [r3, #4]
   1c188:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c18c:	ldr	r3, [r3, #4]
   1c190:	cmp	r2, r3
   1c194:	beq	1c1a0 <__assert_fail@plt+0xac5c>
   1c198:	mov	r3, #0
   1c19c:	b	1c20c <__assert_fail@plt+0xacc8>
   1c1a0:	ldr	r3, [fp, #-16]
   1c1a4:	ldr	r3, [r3, #4]
   1c1a8:	str	r3, [fp, #-8]
   1c1ac:	b	1c1f0 <__assert_fail@plt+0xacac>
   1c1b0:	ldr	r3, [fp, #-16]
   1c1b4:	ldr	r2, [r3, #8]
   1c1b8:	ldr	r3, [fp, #-8]
   1c1bc:	lsl	r3, r3, #2
   1c1c0:	add	r3, r2, r3
   1c1c4:	ldr	r2, [r3]
   1c1c8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c1cc:	ldr	r1, [r3, #8]
   1c1d0:	ldr	r3, [fp, #-8]
   1c1d4:	lsl	r3, r3, #2
   1c1d8:	add	r3, r1, r3
   1c1dc:	ldr	r3, [r3]
   1c1e0:	cmp	r2, r3
   1c1e4:	beq	1c1f0 <__assert_fail@plt+0xacac>
   1c1e8:	mov	r3, #0
   1c1ec:	b	1c20c <__assert_fail@plt+0xacc8>
   1c1f0:	ldr	r3, [fp, #-8]
   1c1f4:	sub	r3, r3, #1
   1c1f8:	str	r3, [fp, #-8]
   1c1fc:	ldr	r3, [fp, #-8]
   1c200:	cmp	r3, #0
   1c204:	bge	1c1b0 <__assert_fail@plt+0xac6c>
   1c208:	mov	r3, #1
   1c20c:	mov	r0, r3
   1c210:	add	sp, fp, #0
   1c214:	pop	{fp}		; (ldr fp, [sp], #4)
   1c218:	bx	lr
   1c21c:	push	{fp}		; (str fp, [sp, #-4]!)
   1c220:	add	fp, sp, #0
   1c224:	sub	sp, sp, #28
   1c228:	str	r0, [fp, #-24]	; 0xffffffe8
   1c22c:	str	r1, [fp, #-28]	; 0xffffffe4
   1c230:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c234:	ldr	r3, [r3, #4]
   1c238:	cmp	r3, #0
   1c23c:	bgt	1c248 <__assert_fail@plt+0xad04>
   1c240:	mov	r3, #0
   1c244:	b	1c2f8 <__assert_fail@plt+0xadb4>
   1c248:	mov	r3, #0
   1c24c:	str	r3, [fp, #-8]
   1c250:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c254:	ldr	r3, [r3, #4]
   1c258:	sub	r3, r3, #1
   1c25c:	str	r3, [fp, #-12]
   1c260:	b	1c2b4 <__assert_fail@plt+0xad70>
   1c264:	ldr	r2, [fp, #-8]
   1c268:	ldr	r3, [fp, #-12]
   1c26c:	add	r3, r2, r3
   1c270:	lsr	r3, r3, #1
   1c274:	str	r3, [fp, #-16]
   1c278:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c27c:	ldr	r2, [r3, #8]
   1c280:	ldr	r3, [fp, #-16]
   1c284:	lsl	r3, r3, #2
   1c288:	add	r3, r2, r3
   1c28c:	ldr	r3, [r3]
   1c290:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1c294:	cmp	r2, r3
   1c298:	ble	1c2ac <__assert_fail@plt+0xad68>
   1c29c:	ldr	r3, [fp, #-16]
   1c2a0:	add	r3, r3, #1
   1c2a4:	str	r3, [fp, #-8]
   1c2a8:	b	1c2b4 <__assert_fail@plt+0xad70>
   1c2ac:	ldr	r3, [fp, #-16]
   1c2b0:	str	r3, [fp, #-12]
   1c2b4:	ldr	r2, [fp, #-8]
   1c2b8:	ldr	r3, [fp, #-12]
   1c2bc:	cmp	r2, r3
   1c2c0:	bcc	1c264 <__assert_fail@plt+0xad20>
   1c2c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c2c8:	ldr	r2, [r3, #8]
   1c2cc:	ldr	r3, [fp, #-8]
   1c2d0:	lsl	r3, r3, #2
   1c2d4:	add	r3, r2, r3
   1c2d8:	ldr	r3, [r3]
   1c2dc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1c2e0:	cmp	r2, r3
   1c2e4:	bne	1c2f4 <__assert_fail@plt+0xadb0>
   1c2e8:	ldr	r3, [fp, #-8]
   1c2ec:	add	r3, r3, #1
   1c2f0:	b	1c2f8 <__assert_fail@plt+0xadb4>
   1c2f4:	mov	r3, #0
   1c2f8:	mov	r0, r3
   1c2fc:	add	sp, fp, #0
   1c300:	pop	{fp}		; (ldr fp, [sp], #4)
   1c304:	bx	lr
   1c308:	push	{fp}		; (str fp, [sp, #-4]!)
   1c30c:	add	fp, sp, #0
   1c310:	sub	sp, sp, #12
   1c314:	str	r0, [fp, #-8]
   1c318:	str	r1, [fp, #-12]
   1c31c:	ldr	r3, [fp, #-12]
   1c320:	cmp	r3, #0
   1c324:	blt	1c3ac <__assert_fail@plt+0xae68>
   1c328:	ldr	r3, [fp, #-8]
   1c32c:	ldr	r3, [r3, #4]
   1c330:	ldr	r2, [fp, #-12]
   1c334:	cmp	r2, r3
   1c338:	bge	1c3ac <__assert_fail@plt+0xae68>
   1c33c:	ldr	r3, [fp, #-8]
   1c340:	ldr	r3, [r3, #4]
   1c344:	sub	r2, r3, #1
   1c348:	ldr	r3, [fp, #-8]
   1c34c:	str	r2, [r3, #4]
   1c350:	b	1c394 <__assert_fail@plt+0xae50>
   1c354:	ldr	r3, [fp, #-8]
   1c358:	ldr	r2, [r3, #8]
   1c35c:	ldr	r3, [fp, #-12]
   1c360:	add	r3, r3, #1
   1c364:	lsl	r3, r3, #2
   1c368:	add	r2, r2, r3
   1c36c:	ldr	r3, [fp, #-8]
   1c370:	ldr	r1, [r3, #8]
   1c374:	ldr	r3, [fp, #-12]
   1c378:	lsl	r3, r3, #2
   1c37c:	add	r3, r1, r3
   1c380:	ldr	r2, [r2]
   1c384:	str	r2, [r3]
   1c388:	ldr	r3, [fp, #-12]
   1c38c:	add	r3, r3, #1
   1c390:	str	r3, [fp, #-12]
   1c394:	ldr	r3, [fp, #-8]
   1c398:	ldr	r3, [r3, #4]
   1c39c:	ldr	r2, [fp, #-12]
   1c3a0:	cmp	r2, r3
   1c3a4:	blt	1c354 <__assert_fail@plt+0xae10>
   1c3a8:	b	1c3b0 <__assert_fail@plt+0xae6c>
   1c3ac:	nop	{0}
   1c3b0:	add	sp, fp, #0
   1c3b4:	pop	{fp}		; (ldr fp, [sp], #4)
   1c3b8:	bx	lr
   1c3bc:	str	fp, [sp, #-8]!
   1c3c0:	str	lr, [sp, #4]
   1c3c4:	add	fp, sp, #4
   1c3c8:	sub	sp, sp, #48	; 0x30
   1c3cc:	str	r0, [fp, #-40]	; 0xffffffd8
   1c3d0:	sub	r3, fp, #48	; 0x30
   1c3d4:	stm	r3, {r1, r2}
   1c3d8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c3dc:	ldr	r2, [r3, #8]
   1c3e0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c3e4:	ldr	r3, [r3, #4]
   1c3e8:	cmp	r2, r3
   1c3ec:	movcs	r3, #1
   1c3f0:	movcc	r3, #0
   1c3f4:	uxtb	r3, r3
   1c3f8:	cmp	r3, #0
   1c3fc:	beq	1c640 <__assert_fail@plt+0xb0fc>
   1c400:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c404:	ldr	r3, [r3, #4]
   1c408:	lsl	r3, r3, #1
   1c40c:	str	r3, [fp, #-8]
   1c410:	mov	r3, #12
   1c414:	str	r3, [fp, #-12]
   1c418:	mvn	r2, #0
   1c41c:	ldr	r3, [fp, #-12]
   1c420:	udiv	r3, r2, r3
   1c424:	cmp	r3, #0
   1c428:	blt	1c43c <__assert_fail@plt+0xaef8>
   1c42c:	mvn	r2, #0
   1c430:	ldr	r3, [fp, #-12]
   1c434:	udiv	r3, r2, r3
   1c438:	b	1c440 <__assert_fail@plt+0xaefc>
   1c43c:	mvn	r3, #-2147483648	; 0x80000000
   1c440:	ldr	r2, [fp, #-8]
   1c444:	cmp	r3, r2
   1c448:	movcc	r3, #1
   1c44c:	movcs	r3, #0
   1c450:	uxtb	r3, r3
   1c454:	cmp	r3, #0
   1c458:	beq	1c464 <__assert_fail@plt+0xaf20>
   1c45c:	mvn	r3, #0
   1c460:	b	1c78c <__assert_fail@plt+0xb248>
   1c464:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c468:	ldr	r2, [r3]
   1c46c:	ldr	r3, [fp, #-8]
   1c470:	lsl	r3, r3, #3
   1c474:	mov	r1, r3
   1c478:	mov	r0, r2
   1c47c:	bl	33c30 <__assert_fail@plt+0x226ec>
   1c480:	str	r0, [fp, #-16]
   1c484:	ldr	r3, [fp, #-16]
   1c488:	cmp	r3, #0
   1c48c:	moveq	r3, #1
   1c490:	movne	r3, #0
   1c494:	uxtb	r3, r3
   1c498:	cmp	r3, #0
   1c49c:	beq	1c4a8 <__assert_fail@plt+0xaf64>
   1c4a0:	mvn	r3, #0
   1c4a4:	b	1c78c <__assert_fail@plt+0xb248>
   1c4a8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c4ac:	ldr	r2, [fp, #-16]
   1c4b0:	str	r2, [r3]
   1c4b4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c4b8:	ldr	r2, [r3, #12]
   1c4bc:	ldr	r3, [fp, #-8]
   1c4c0:	lsl	r3, r3, #2
   1c4c4:	mov	r1, r3
   1c4c8:	mov	r0, r2
   1c4cc:	bl	33c30 <__assert_fail@plt+0x226ec>
   1c4d0:	str	r0, [fp, #-20]	; 0xffffffec
   1c4d4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c4d8:	ldr	r2, [r3, #16]
   1c4dc:	ldr	r3, [fp, #-8]
   1c4e0:	lsl	r3, r3, #2
   1c4e4:	mov	r1, r3
   1c4e8:	mov	r0, r2
   1c4ec:	bl	33c30 <__assert_fail@plt+0x226ec>
   1c4f0:	str	r0, [fp, #-24]	; 0xffffffe8
   1c4f4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c4f8:	ldr	r0, [r3, #20]
   1c4fc:	ldr	r2, [fp, #-8]
   1c500:	mov	r3, r2
   1c504:	lsl	r3, r3, #1
   1c508:	add	r3, r3, r2
   1c50c:	lsl	r3, r3, #2
   1c510:	mov	r1, r3
   1c514:	bl	33c30 <__assert_fail@plt+0x226ec>
   1c518:	str	r0, [fp, #-28]	; 0xffffffe4
   1c51c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c520:	ldr	r0, [r3, #24]
   1c524:	ldr	r2, [fp, #-8]
   1c528:	mov	r3, r2
   1c52c:	lsl	r3, r3, #1
   1c530:	add	r3, r3, r2
   1c534:	lsl	r3, r3, #2
   1c538:	mov	r1, r3
   1c53c:	bl	33c30 <__assert_fail@plt+0x226ec>
   1c540:	str	r0, [fp, #-32]	; 0xffffffe0
   1c544:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c548:	cmp	r3, #0
   1c54c:	moveq	r3, #1
   1c550:	movne	r3, #0
   1c554:	uxtb	r3, r3
   1c558:	cmp	r3, #0
   1c55c:	bne	1c57c <__assert_fail@plt+0xb038>
   1c560:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c564:	cmp	r3, #0
   1c568:	moveq	r3, #1
   1c56c:	movne	r3, #0
   1c570:	uxtb	r3, r3
   1c574:	cmp	r3, #0
   1c578:	beq	1c584 <__assert_fail@plt+0xb040>
   1c57c:	mov	r3, #1
   1c580:	b	1c588 <__assert_fail@plt+0xb044>
   1c584:	mov	r3, #0
   1c588:	cmp	r3, #0
   1c58c:	bne	1c5ac <__assert_fail@plt+0xb068>
   1c590:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c594:	cmp	r3, #0
   1c598:	moveq	r3, #1
   1c59c:	movne	r3, #0
   1c5a0:	uxtb	r3, r3
   1c5a4:	cmp	r3, #0
   1c5a8:	beq	1c5b4 <__assert_fail@plt+0xb070>
   1c5ac:	mov	r3, #1
   1c5b0:	b	1c5b8 <__assert_fail@plt+0xb074>
   1c5b4:	mov	r3, #0
   1c5b8:	cmp	r3, #0
   1c5bc:	bne	1c5dc <__assert_fail@plt+0xb098>
   1c5c0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c5c4:	cmp	r3, #0
   1c5c8:	moveq	r3, #1
   1c5cc:	movne	r3, #0
   1c5d0:	uxtb	r3, r3
   1c5d4:	cmp	r3, #0
   1c5d8:	beq	1c604 <__assert_fail@plt+0xb0c0>
   1c5dc:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c5e0:	bl	151ec <__assert_fail@plt+0x3ca8>
   1c5e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c5e8:	bl	151ec <__assert_fail@plt+0x3ca8>
   1c5ec:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1c5f0:	bl	151ec <__assert_fail@plt+0x3ca8>
   1c5f4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c5f8:	bl	151ec <__assert_fail@plt+0x3ca8>
   1c5fc:	mvn	r3, #0
   1c600:	b	1c78c <__assert_fail@plt+0xb248>
   1c604:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c608:	ldr	r2, [fp, #-20]	; 0xffffffec
   1c60c:	str	r2, [r3, #12]
   1c610:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c614:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1c618:	str	r2, [r3, #16]
   1c61c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c620:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1c624:	str	r2, [r3, #20]
   1c628:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c62c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1c630:	str	r2, [r3, #24]
   1c634:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c638:	ldr	r2, [fp, #-8]
   1c63c:	str	r2, [r3, #4]
   1c640:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c644:	ldr	r2, [r3]
   1c648:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c64c:	ldr	r3, [r3, #8]
   1c650:	lsl	r3, r3, #3
   1c654:	add	r3, r2, r3
   1c658:	mov	r1, r3
   1c65c:	sub	r3, fp, #48	; 0x30
   1c660:	ldrd	r2, [r3]
   1c664:	strd	r2, [r1]
   1c668:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c66c:	ldr	r2, [r3]
   1c670:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c674:	ldr	r3, [r3, #8]
   1c678:	lsl	r3, r3, #3
   1c67c:	add	r2, r2, r3
   1c680:	ldr	r3, [r2, #4]
   1c684:	bfc	r3, #8, #10
   1c688:	str	r3, [r2, #4]
   1c68c:	ldrb	r3, [fp, #-44]	; 0xffffffd4
   1c690:	cmp	r3, #5
   1c694:	bne	1c6a8 <__assert_fail@plt+0xb164>
   1c698:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c69c:	ldr	r3, [r3, #92]	; 0x5c
   1c6a0:	cmp	r3, #1
   1c6a4:	bgt	1c6b4 <__assert_fail@plt+0xb170>
   1c6a8:	ldrb	r3, [fp, #-44]	; 0xffffffd4
   1c6ac:	cmp	r3, #6
   1c6b0:	bne	1c6bc <__assert_fail@plt+0xb178>
   1c6b4:	mov	r1, #1
   1c6b8:	b	1c6c0 <__assert_fail@plt+0xb17c>
   1c6bc:	mov	r1, #0
   1c6c0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c6c4:	ldr	r2, [r3]
   1c6c8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c6cc:	ldr	r3, [r3, #8]
   1c6d0:	lsl	r3, r3, #3
   1c6d4:	add	r2, r2, r3
   1c6d8:	mov	r3, r1
   1c6dc:	and	r3, r3, #1
   1c6e0:	uxtb	r1, r3
   1c6e4:	ldrb	r3, [r2, #6]
   1c6e8:	bfi	r3, r1, #4, #1
   1c6ec:	strb	r3, [r2, #6]
   1c6f0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c6f4:	ldr	r2, [r3, #12]
   1c6f8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c6fc:	ldr	r3, [r3, #8]
   1c700:	lsl	r3, r3, #2
   1c704:	add	r3, r2, r3
   1c708:	mvn	r2, #0
   1c70c:	str	r2, [r3]
   1c710:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c714:	ldr	r1, [r3, #20]
   1c718:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c71c:	ldr	r2, [r3, #8]
   1c720:	mov	r3, r2
   1c724:	lsl	r3, r3, #1
   1c728:	add	r3, r3, r2
   1c72c:	lsl	r3, r3, #2
   1c730:	add	r3, r1, r3
   1c734:	mov	r2, #12
   1c738:	mov	r1, #0
   1c73c:	mov	r0, r3
   1c740:	bl	11448 <memset@plt>
   1c744:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c748:	ldr	r1, [r3, #24]
   1c74c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c750:	ldr	r2, [r3, #8]
   1c754:	mov	r3, r2
   1c758:	lsl	r3, r3, #1
   1c75c:	add	r3, r3, r2
   1c760:	lsl	r3, r3, #2
   1c764:	add	r3, r1, r3
   1c768:	mov	r2, #12
   1c76c:	mov	r1, #0
   1c770:	mov	r0, r3
   1c774:	bl	11448 <memset@plt>
   1c778:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c77c:	ldr	r3, [r3, #8]
   1c780:	add	r1, r3, #1
   1c784:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1c788:	str	r1, [r2, #8]
   1c78c:	mov	r0, r3
   1c790:	sub	sp, fp, #4
   1c794:	ldr	fp, [sp]
   1c798:	add	sp, sp, #4
   1c79c:	pop	{pc}		; (ldr pc, [sp], #4)
   1c7a0:	push	{fp}		; (str fp, [sp, #-4]!)
   1c7a4:	add	fp, sp, #0
   1c7a8:	sub	sp, sp, #20
   1c7ac:	str	r0, [fp, #-16]
   1c7b0:	str	r1, [fp, #-20]	; 0xffffffec
   1c7b4:	ldr	r3, [fp, #-16]
   1c7b8:	ldr	r3, [r3, #4]
   1c7bc:	mov	r2, r3
   1c7c0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c7c4:	add	r3, r3, r2
   1c7c8:	str	r3, [fp, #-8]
   1c7cc:	mov	r3, #0
   1c7d0:	str	r3, [fp, #-12]
   1c7d4:	b	1c80c <__assert_fail@plt+0xb2c8>
   1c7d8:	ldr	r3, [fp, #-16]
   1c7dc:	ldr	r2, [r3, #8]
   1c7e0:	ldr	r3, [fp, #-12]
   1c7e4:	lsl	r3, r3, #2
   1c7e8:	add	r3, r2, r3
   1c7ec:	ldr	r3, [r3]
   1c7f0:	mov	r2, r3
   1c7f4:	ldr	r3, [fp, #-8]
   1c7f8:	add	r3, r3, r2
   1c7fc:	str	r3, [fp, #-8]
   1c800:	ldr	r3, [fp, #-12]
   1c804:	add	r3, r3, #1
   1c808:	str	r3, [fp, #-12]
   1c80c:	ldr	r3, [fp, #-16]
   1c810:	ldr	r3, [r3, #4]
   1c814:	ldr	r2, [fp, #-12]
   1c818:	cmp	r2, r3
   1c81c:	blt	1c7d8 <__assert_fail@plt+0xb294>
   1c820:	ldr	r3, [fp, #-8]
   1c824:	mov	r0, r3
   1c828:	add	sp, fp, #0
   1c82c:	pop	{fp}		; (ldr fp, [sp], #4)
   1c830:	bx	lr
   1c834:	str	fp, [sp, #-8]!
   1c838:	str	lr, [sp, #4]
   1c83c:	add	fp, sp, #4
   1c840:	sub	sp, sp, #40	; 0x28
   1c844:	str	r0, [fp, #-32]	; 0xffffffe0
   1c848:	str	r1, [fp, #-36]	; 0xffffffdc
   1c84c:	str	r2, [fp, #-40]	; 0xffffffd8
   1c850:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c854:	mov	r2, #0
   1c858:	str	r2, [r3]
   1c85c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c860:	ldr	r3, [r3, #4]
   1c864:	cmp	r3, #0
   1c868:	moveq	r3, #1
   1c86c:	movne	r3, #0
   1c870:	uxtb	r3, r3
   1c874:	cmp	r3, #0
   1c878:	beq	1c890 <__assert_fail@plt+0xb34c>
   1c87c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c880:	mov	r2, #0
   1c884:	str	r2, [r3]
   1c888:	mov	r3, #0
   1c88c:	b	1c998 <__assert_fail@plt+0xb454>
   1c890:	mov	r1, #0
   1c894:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1c898:	bl	1c7a0 <__assert_fail@plt+0xb25c>
   1c89c:	str	r0, [fp, #-12]
   1c8a0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1c8a4:	ldr	r1, [r3, #32]
   1c8a8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1c8ac:	ldr	r2, [r3, #68]	; 0x44
   1c8b0:	ldr	r3, [fp, #-12]
   1c8b4:	and	r2, r2, r3
   1c8b8:	mov	r3, r2
   1c8bc:	lsl	r3, r3, #1
   1c8c0:	add	r3, r3, r2
   1c8c4:	lsl	r3, r3, #2
   1c8c8:	add	r3, r1, r3
   1c8cc:	str	r3, [fp, #-16]
   1c8d0:	mov	r3, #0
   1c8d4:	str	r3, [fp, #-8]
   1c8d8:	b	1c944 <__assert_fail@plt+0xb400>
   1c8dc:	ldr	r3, [fp, #-16]
   1c8e0:	ldr	r2, [r3, #8]
   1c8e4:	ldr	r3, [fp, #-8]
   1c8e8:	lsl	r3, r3, #2
   1c8ec:	add	r3, r2, r3
   1c8f0:	ldr	r3, [r3]
   1c8f4:	str	r3, [fp, #-20]	; 0xffffffec
   1c8f8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c8fc:	ldr	r3, [r3]
   1c900:	ldr	r2, [fp, #-12]
   1c904:	cmp	r2, r3
   1c908:	bne	1c934 <__assert_fail@plt+0xb3f0>
   1c90c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c910:	add	r3, r3, #4
   1c914:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1c918:	mov	r0, r3
   1c91c:	bl	1c154 <__assert_fail@plt+0xac10>
   1c920:	mov	r3, r0
   1c924:	cmp	r3, #0
   1c928:	beq	1c938 <__assert_fail@plt+0xb3f4>
   1c92c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c930:	b	1c998 <__assert_fail@plt+0xb454>
   1c934:	nop	{0}
   1c938:	ldr	r3, [fp, #-8]
   1c93c:	add	r3, r3, #1
   1c940:	str	r3, [fp, #-8]
   1c944:	ldr	r3, [fp, #-16]
   1c948:	ldr	r3, [r3]
   1c94c:	ldr	r2, [fp, #-8]
   1c950:	cmp	r2, r3
   1c954:	blt	1c8dc <__assert_fail@plt+0xb398>
   1c958:	ldr	r2, [fp, #-12]
   1c95c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1c960:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1c964:	bl	1ce08 <__assert_fail@plt+0xb8c4>
   1c968:	str	r0, [fp, #-24]	; 0xffffffe8
   1c96c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c970:	cmp	r3, #0
   1c974:	moveq	r3, #1
   1c978:	movne	r3, #0
   1c97c:	uxtb	r3, r3
   1c980:	cmp	r3, #0
   1c984:	beq	1c994 <__assert_fail@plt+0xb450>
   1c988:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c98c:	mov	r2, #12
   1c990:	str	r2, [r3]
   1c994:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c998:	mov	r0, r3
   1c99c:	sub	sp, fp, #4
   1c9a0:	ldr	fp, [sp]
   1c9a4:	add	sp, sp, #4
   1c9a8:	pop	{pc}		; (ldr pc, [sp], #4)
   1c9ac:	str	fp, [sp, #-8]!
   1c9b0:	str	lr, [sp, #4]
   1c9b4:	add	fp, sp, #4
   1c9b8:	sub	sp, sp, #40	; 0x28
   1c9bc:	str	r0, [fp, #-32]	; 0xffffffe0
   1c9c0:	str	r1, [fp, #-36]	; 0xffffffdc
   1c9c4:	str	r2, [fp, #-40]	; 0xffffffd8
   1c9c8:	str	r3, [fp, #-44]	; 0xffffffd4
   1c9cc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c9d0:	mov	r2, #0
   1c9d4:	str	r2, [r3]
   1c9d8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c9dc:	ldr	r3, [r3, #4]
   1c9e0:	cmp	r3, #0
   1c9e4:	bne	1c9fc <__assert_fail@plt+0xb4b8>
   1c9e8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c9ec:	mov	r2, #0
   1c9f0:	str	r2, [r3]
   1c9f4:	mov	r3, #0
   1c9f8:	b	1cb24 <__assert_fail@plt+0xb5e0>
   1c9fc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1ca00:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1ca04:	bl	1c7a0 <__assert_fail@plt+0xb25c>
   1ca08:	str	r0, [fp, #-12]
   1ca0c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1ca10:	ldr	r1, [r3, #32]
   1ca14:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1ca18:	ldr	r2, [r3, #68]	; 0x44
   1ca1c:	ldr	r3, [fp, #-12]
   1ca20:	and	r2, r2, r3
   1ca24:	mov	r3, r2
   1ca28:	lsl	r3, r3, #1
   1ca2c:	add	r3, r3, r2
   1ca30:	lsl	r3, r3, #2
   1ca34:	add	r3, r1, r3
   1ca38:	str	r3, [fp, #-16]
   1ca3c:	mov	r3, #0
   1ca40:	str	r3, [fp, #-8]
   1ca44:	b	1cacc <__assert_fail@plt+0xb588>
   1ca48:	ldr	r3, [fp, #-16]
   1ca4c:	ldr	r2, [r3, #8]
   1ca50:	ldr	r3, [fp, #-8]
   1ca54:	lsl	r3, r3, #2
   1ca58:	add	r3, r2, r3
   1ca5c:	ldr	r3, [r3]
   1ca60:	str	r3, [fp, #-20]	; 0xffffffec
   1ca64:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ca68:	ldr	r3, [r3]
   1ca6c:	ldr	r2, [fp, #-12]
   1ca70:	cmp	r2, r3
   1ca74:	bne	1cac0 <__assert_fail@plt+0xb57c>
   1ca78:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ca7c:	ldrb	r3, [r3, #52]	; 0x34
   1ca80:	ubfx	r3, r3, #0, #4
   1ca84:	uxtb	r3, r3
   1ca88:	mov	r2, r3
   1ca8c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1ca90:	cmp	r3, r2
   1ca94:	bne	1cac0 <__assert_fail@plt+0xb57c>
   1ca98:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ca9c:	ldr	r3, [r3, #40]	; 0x28
   1caa0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1caa4:	mov	r0, r3
   1caa8:	bl	1c154 <__assert_fail@plt+0xac10>
   1caac:	mov	r3, r0
   1cab0:	cmp	r3, #0
   1cab4:	beq	1cac0 <__assert_fail@plt+0xb57c>
   1cab8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1cabc:	b	1cb24 <__assert_fail@plt+0xb5e0>
   1cac0:	ldr	r3, [fp, #-8]
   1cac4:	add	r3, r3, #1
   1cac8:	str	r3, [fp, #-8]
   1cacc:	ldr	r3, [fp, #-16]
   1cad0:	ldr	r3, [r3]
   1cad4:	ldr	r2, [fp, #-8]
   1cad8:	cmp	r2, r3
   1cadc:	blt	1ca48 <__assert_fail@plt+0xb504>
   1cae0:	ldr	r3, [fp, #-12]
   1cae4:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1cae8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1caec:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1caf0:	bl	1d04c <__assert_fail@plt+0xbb08>
   1caf4:	str	r0, [fp, #-24]	; 0xffffffe8
   1caf8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1cafc:	cmp	r3, #0
   1cb00:	moveq	r3, #1
   1cb04:	movne	r3, #0
   1cb08:	uxtb	r3, r3
   1cb0c:	cmp	r3, #0
   1cb10:	beq	1cb20 <__assert_fail@plt+0xb5dc>
   1cb14:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1cb18:	mov	r2, #12
   1cb1c:	str	r2, [r3]
   1cb20:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1cb24:	mov	r0, r3
   1cb28:	sub	sp, fp, #4
   1cb2c:	ldr	fp, [sp]
   1cb30:	add	sp, sp, #4
   1cb34:	pop	{pc}		; (ldr pc, [sp], #4)
   1cb38:	str	fp, [sp, #-8]!
   1cb3c:	str	lr, [sp, #4]
   1cb40:	add	fp, sp, #4
   1cb44:	sub	sp, sp, #40	; 0x28
   1cb48:	str	r0, [fp, #-32]	; 0xffffffe0
   1cb4c:	str	r1, [fp, #-36]	; 0xffffffdc
   1cb50:	str	r2, [fp, #-40]	; 0xffffffd8
   1cb54:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1cb58:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1cb5c:	str	r2, [r3]
   1cb60:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1cb64:	add	r2, r3, #16
   1cb68:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1cb6c:	ldr	r3, [r3, #8]
   1cb70:	mov	r1, r3
   1cb74:	mov	r0, r2
   1cb78:	bl	1ae0c <__assert_fail@plt+0x98c8>
   1cb7c:	str	r0, [fp, #-12]
   1cb80:	ldr	r3, [fp, #-12]
   1cb84:	cmp	r3, #0
   1cb88:	movne	r3, #1
   1cb8c:	moveq	r3, #0
   1cb90:	uxtb	r3, r3
   1cb94:	cmp	r3, #0
   1cb98:	beq	1cba4 <__assert_fail@plt+0xb660>
   1cb9c:	mov	r3, #12
   1cba0:	b	1cd38 <__assert_fail@plt+0xb7f4>
   1cba4:	mov	r3, #0
   1cba8:	str	r3, [fp, #-8]
   1cbac:	b	1cc2c <__assert_fail@plt+0xb6e8>
   1cbb0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1cbb4:	ldr	r2, [r3, #12]
   1cbb8:	ldr	r3, [fp, #-8]
   1cbbc:	lsl	r3, r3, #2
   1cbc0:	add	r3, r2, r3
   1cbc4:	ldr	r3, [r3]
   1cbc8:	str	r3, [fp, #-16]
   1cbcc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1cbd0:	ldr	r2, [r3]
   1cbd4:	ldr	r3, [fp, #-16]
   1cbd8:	lsl	r3, r3, #3
   1cbdc:	add	r3, r2, r3
   1cbe0:	ldrb	r3, [r3, #4]
   1cbe4:	and	r3, r3, #8
   1cbe8:	cmp	r3, #0
   1cbec:	bne	1cc20 <__assert_fail@plt+0xb6dc>
   1cbf0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1cbf4:	add	r3, r3, #16
   1cbf8:	ldr	r1, [fp, #-16]
   1cbfc:	mov	r0, r3
   1cc00:	bl	1c074 <__assert_fail@plt+0xab30>
   1cc04:	mov	r3, r0
   1cc08:	eor	r3, r3, #1
   1cc0c:	uxtb	r3, r3
   1cc10:	cmp	r3, #0
   1cc14:	beq	1cc20 <__assert_fail@plt+0xb6dc>
   1cc18:	mov	r3, #12
   1cc1c:	b	1cd38 <__assert_fail@plt+0xb7f4>
   1cc20:	ldr	r3, [fp, #-8]
   1cc24:	add	r3, r3, #1
   1cc28:	str	r3, [fp, #-8]
   1cc2c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1cc30:	ldr	r3, [r3, #8]
   1cc34:	ldr	r2, [fp, #-8]
   1cc38:	cmp	r2, r3
   1cc3c:	blt	1cbb0 <__assert_fail@plt+0xb66c>
   1cc40:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1cc44:	ldr	r1, [r3, #32]
   1cc48:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1cc4c:	ldr	r2, [r3, #68]	; 0x44
   1cc50:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1cc54:	and	r2, r2, r3
   1cc58:	mov	r3, r2
   1cc5c:	lsl	r3, r3, #1
   1cc60:	add	r3, r3, r2
   1cc64:	lsl	r3, r3, #2
   1cc68:	add	r3, r1, r3
   1cc6c:	str	r3, [fp, #-20]	; 0xffffffec
   1cc70:	ldr	r3, [fp, #-20]	; 0xffffffec
   1cc74:	ldr	r2, [r3, #4]
   1cc78:	ldr	r3, [fp, #-20]	; 0xffffffec
   1cc7c:	ldr	r3, [r3]
   1cc80:	cmp	r2, r3
   1cc84:	movle	r3, #1
   1cc88:	movgt	r3, #0
   1cc8c:	uxtb	r3, r3
   1cc90:	cmp	r3, #0
   1cc94:	beq	1cd08 <__assert_fail@plt+0xb7c4>
   1cc98:	ldr	r3, [fp, #-20]	; 0xffffffec
   1cc9c:	ldr	r3, [r3]
   1cca0:	add	r3, r3, #1
   1cca4:	lsl	r3, r3, #1
   1cca8:	str	r3, [fp, #-24]	; 0xffffffe8
   1ccac:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ccb0:	ldr	r2, [r3, #8]
   1ccb4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ccb8:	lsl	r3, r3, #2
   1ccbc:	mov	r1, r3
   1ccc0:	mov	r0, r2
   1ccc4:	bl	33c30 <__assert_fail@plt+0x226ec>
   1ccc8:	str	r0, [fp, #-28]	; 0xffffffe4
   1cccc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1ccd0:	cmp	r3, #0
   1ccd4:	moveq	r3, #1
   1ccd8:	movne	r3, #0
   1ccdc:	uxtb	r3, r3
   1cce0:	cmp	r3, #0
   1cce4:	beq	1ccf0 <__assert_fail@plt+0xb7ac>
   1cce8:	mov	r3, #12
   1ccec:	b	1cd38 <__assert_fail@plt+0xb7f4>
   1ccf0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ccf4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1ccf8:	str	r2, [r3, #8]
   1ccfc:	ldr	r3, [fp, #-20]	; 0xffffffec
   1cd00:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1cd04:	str	r2, [r3, #4]
   1cd08:	ldr	r3, [fp, #-20]	; 0xffffffec
   1cd0c:	ldr	r2, [r3, #8]
   1cd10:	ldr	r3, [fp, #-20]	; 0xffffffec
   1cd14:	ldr	r3, [r3]
   1cd18:	add	r0, r3, #1
   1cd1c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1cd20:	str	r0, [r1]
   1cd24:	lsl	r3, r3, #2
   1cd28:	add	r3, r2, r3
   1cd2c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1cd30:	str	r2, [r3]
   1cd34:	mov	r3, #0
   1cd38:	mov	r0, r3
   1cd3c:	sub	sp, fp, #4
   1cd40:	ldr	fp, [sp]
   1cd44:	add	sp, sp, #4
   1cd48:	pop	{pc}		; (ldr pc, [sp], #4)
   1cd4c:	str	fp, [sp, #-8]!
   1cd50:	str	lr, [sp, #4]
   1cd54:	add	fp, sp, #4
   1cd58:	sub	sp, sp, #8
   1cd5c:	str	r0, [fp, #-8]
   1cd60:	ldr	r3, [fp, #-8]
   1cd64:	ldr	r3, [r3, #24]
   1cd68:	mov	r0, r3
   1cd6c:	bl	151ec <__assert_fail@plt+0x3ca8>
   1cd70:	ldr	r3, [fp, #-8]
   1cd74:	ldr	r3, [r3, #36]	; 0x24
   1cd78:	mov	r0, r3
   1cd7c:	bl	151ec <__assert_fail@plt+0x3ca8>
   1cd80:	ldr	r3, [fp, #-8]
   1cd84:	ldr	r2, [r3, #40]	; 0x28
   1cd88:	ldr	r3, [fp, #-8]
   1cd8c:	add	r3, r3, #4
   1cd90:	cmp	r2, r3
   1cd94:	beq	1cdbc <__assert_fail@plt+0xb878>
   1cd98:	ldr	r3, [fp, #-8]
   1cd9c:	ldr	r3, [r3, #40]	; 0x28
   1cda0:	ldr	r3, [r3, #8]
   1cda4:	mov	r0, r3
   1cda8:	bl	151ec <__assert_fail@plt+0x3ca8>
   1cdac:	ldr	r3, [fp, #-8]
   1cdb0:	ldr	r3, [r3, #40]	; 0x28
   1cdb4:	mov	r0, r3
   1cdb8:	bl	151ec <__assert_fail@plt+0x3ca8>
   1cdbc:	ldr	r3, [fp, #-8]
   1cdc0:	ldr	r3, [r3, #12]
   1cdc4:	mov	r0, r3
   1cdc8:	bl	151ec <__assert_fail@plt+0x3ca8>
   1cdcc:	ldr	r3, [fp, #-8]
   1cdd0:	ldr	r3, [r3, #48]	; 0x30
   1cdd4:	mov	r0, r3
   1cdd8:	bl	151ec <__assert_fail@plt+0x3ca8>
   1cddc:	ldr	r3, [fp, #-8]
   1cde0:	ldr	r3, [r3, #44]	; 0x2c
   1cde4:	mov	r0, r3
   1cde8:	bl	151ec <__assert_fail@plt+0x3ca8>
   1cdec:	ldr	r0, [fp, #-8]
   1cdf0:	bl	151ec <__assert_fail@plt+0x3ca8>
   1cdf4:	nop	{0}
   1cdf8:	sub	sp, fp, #4
   1cdfc:	ldr	fp, [sp]
   1ce00:	add	sp, sp, #4
   1ce04:	pop	{pc}		; (ldr pc, [sp], #4)
   1ce08:	str	fp, [sp, #-8]!
   1ce0c:	str	lr, [sp, #4]
   1ce10:	add	fp, sp, #4
   1ce14:	sub	sp, sp, #40	; 0x28
   1ce18:	str	r0, [fp, #-32]	; 0xffffffe0
   1ce1c:	str	r1, [fp, #-36]	; 0xffffffdc
   1ce20:	str	r2, [fp, #-40]	; 0xffffffd8
   1ce24:	mov	r1, #1
   1ce28:	mov	r0, #56	; 0x38
   1ce2c:	bl	33ad0 <__assert_fail@plt+0x2258c>
   1ce30:	mov	r3, r0
   1ce34:	str	r3, [fp, #-12]
   1ce38:	ldr	r3, [fp, #-12]
   1ce3c:	cmp	r3, #0
   1ce40:	moveq	r3, #1
   1ce44:	movne	r3, #0
   1ce48:	uxtb	r3, r3
   1ce4c:	cmp	r3, #0
   1ce50:	beq	1ce5c <__assert_fail@plt+0xb918>
   1ce54:	mov	r3, #0
   1ce58:	b	1d038 <__assert_fail@plt+0xbaf4>
   1ce5c:	ldr	r3, [fp, #-12]
   1ce60:	add	r3, r3, #4
   1ce64:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1ce68:	mov	r0, r3
   1ce6c:	bl	1b068 <__assert_fail@plt+0x9b24>
   1ce70:	str	r0, [fp, #-16]
   1ce74:	ldr	r3, [fp, #-16]
   1ce78:	cmp	r3, #0
   1ce7c:	movne	r3, #1
   1ce80:	moveq	r3, #0
   1ce84:	uxtb	r3, r3
   1ce88:	cmp	r3, #0
   1ce8c:	beq	1cea0 <__assert_fail@plt+0xb95c>
   1ce90:	ldr	r0, [fp, #-12]
   1ce94:	bl	151ec <__assert_fail@plt+0x3ca8>
   1ce98:	mov	r3, #0
   1ce9c:	b	1d038 <__assert_fail@plt+0xbaf4>
   1cea0:	ldr	r3, [fp, #-12]
   1cea4:	add	r2, r3, #4
   1cea8:	ldr	r3, [fp, #-12]
   1ceac:	str	r2, [r3, #40]	; 0x28
   1ceb0:	mov	r3, #0
   1ceb4:	str	r3, [fp, #-8]
   1ceb8:	b	1cfe0 <__assert_fail@plt+0xba9c>
   1cebc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1cec0:	ldr	r2, [r3]
   1cec4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1cec8:	ldr	r1, [r3, #8]
   1cecc:	ldr	r3, [fp, #-8]
   1ced0:	lsl	r3, r3, #2
   1ced4:	add	r3, r1, r3
   1ced8:	ldr	r3, [r3]
   1cedc:	lsl	r3, r3, #3
   1cee0:	add	r3, r2, r3
   1cee4:	str	r3, [fp, #-20]	; 0xffffffec
   1cee8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ceec:	ldrb	r3, [r3, #4]
   1cef0:	str	r3, [fp, #-24]	; 0xffffffe8
   1cef4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1cef8:	cmp	r3, #1
   1cefc:	bne	1cf1c <__assert_fail@plt+0xb9d8>
   1cf00:	ldr	r3, [fp, #-20]	; 0xffffffec
   1cf04:	ldr	r2, [r3, #4]
   1cf08:	mov	r3, #65280	; 0xff00
   1cf0c:	movt	r3, #3
   1cf10:	and	r3, r3, r2
   1cf14:	cmp	r3, #0
   1cf18:	beq	1cfd0 <__assert_fail@plt+0xba8c>
   1cf1c:	ldr	r3, [fp, #-12]
   1cf20:	ldrb	r3, [r3, #52]	; 0x34
   1cf24:	ubfx	r3, r3, #5, #1
   1cf28:	uxtb	r2, r3
   1cf2c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1cf30:	ldrb	r3, [r3, #6]
   1cf34:	ubfx	r3, r3, #4, #1
   1cf38:	uxtb	r3, r3
   1cf3c:	orr	r3, r2, r3
   1cf40:	uxtb	r1, r3
   1cf44:	ldr	r2, [fp, #-12]
   1cf48:	ldrb	r3, [r2, #52]	; 0x34
   1cf4c:	bfi	r3, r1, #5, #1
   1cf50:	strb	r3, [r2, #52]	; 0x34
   1cf54:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1cf58:	cmp	r3, #2
   1cf5c:	bne	1cf74 <__assert_fail@plt+0xba30>
   1cf60:	ldr	r2, [fp, #-12]
   1cf64:	ldrb	r3, [r2, #52]	; 0x34
   1cf68:	orr	r3, r3, #16
   1cf6c:	strb	r3, [r2, #52]	; 0x34
   1cf70:	b	1cfd4 <__assert_fail@plt+0xba90>
   1cf74:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1cf78:	cmp	r3, #4
   1cf7c:	bne	1cf94 <__assert_fail@plt+0xba50>
   1cf80:	ldr	r2, [fp, #-12]
   1cf84:	ldrb	r3, [r2, #52]	; 0x34
   1cf88:	orr	r3, r3, #64	; 0x40
   1cf8c:	strb	r3, [r2, #52]	; 0x34
   1cf90:	b	1cfd4 <__assert_fail@plt+0xba90>
   1cf94:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1cf98:	cmp	r3, #12
   1cf9c:	beq	1cfbc <__assert_fail@plt+0xba78>
   1cfa0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1cfa4:	ldr	r2, [r3, #4]
   1cfa8:	mov	r3, #65280	; 0xff00
   1cfac:	movt	r3, #3
   1cfb0:	and	r3, r3, r2
   1cfb4:	cmp	r3, #0
   1cfb8:	beq	1cfd4 <__assert_fail@plt+0xba90>
   1cfbc:	ldr	r2, [fp, #-12]
   1cfc0:	ldrb	r3, [r2, #52]	; 0x34
   1cfc4:	orr	r3, r3, #128	; 0x80
   1cfc8:	strb	r3, [r2, #52]	; 0x34
   1cfcc:	b	1cfd4 <__assert_fail@plt+0xba90>
   1cfd0:	nop	{0}
   1cfd4:	ldr	r3, [fp, #-8]
   1cfd8:	add	r3, r3, #1
   1cfdc:	str	r3, [fp, #-8]
   1cfe0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1cfe4:	ldr	r3, [r3, #4]
   1cfe8:	ldr	r2, [fp, #-8]
   1cfec:	cmp	r2, r3
   1cff0:	blt	1cebc <__assert_fail@plt+0xb978>
   1cff4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1cff8:	ldr	r1, [fp, #-12]
   1cffc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1d000:	bl	1cb38 <__assert_fail@plt+0xb5f4>
   1d004:	str	r0, [fp, #-16]
   1d008:	ldr	r3, [fp, #-16]
   1d00c:	cmp	r3, #0
   1d010:	movne	r3, #1
   1d014:	moveq	r3, #0
   1d018:	uxtb	r3, r3
   1d01c:	cmp	r3, #0
   1d020:	beq	1d034 <__assert_fail@plt+0xbaf0>
   1d024:	ldr	r0, [fp, #-12]
   1d028:	bl	1cd4c <__assert_fail@plt+0xb808>
   1d02c:	mov	r3, #0
   1d030:	str	r3, [fp, #-12]
   1d034:	ldr	r3, [fp, #-12]
   1d038:	mov	r0, r3
   1d03c:	sub	sp, fp, #4
   1d040:	ldr	fp, [sp]
   1d044:	add	sp, sp, #4
   1d048:	pop	{pc}		; (ldr pc, [sp], #4)
   1d04c:	str	fp, [sp, #-8]!
   1d050:	str	lr, [sp, #4]
   1d054:	add	fp, sp, #4
   1d058:	sub	sp, sp, #48	; 0x30
   1d05c:	str	r0, [fp, #-40]	; 0xffffffd8
   1d060:	str	r1, [fp, #-44]	; 0xffffffd4
   1d064:	str	r2, [fp, #-48]	; 0xffffffd0
   1d068:	str	r3, [fp, #-52]	; 0xffffffcc
   1d06c:	mov	r3, #0
   1d070:	str	r3, [fp, #-12]
   1d074:	mov	r1, #1
   1d078:	mov	r0, #56	; 0x38
   1d07c:	bl	33ad0 <__assert_fail@plt+0x2258c>
   1d080:	mov	r3, r0
   1d084:	str	r3, [fp, #-16]
   1d088:	ldr	r3, [fp, #-16]
   1d08c:	cmp	r3, #0
   1d090:	moveq	r3, #1
   1d094:	movne	r3, #0
   1d098:	uxtb	r3, r3
   1d09c:	cmp	r3, #0
   1d0a0:	beq	1d0ac <__assert_fail@plt+0xbb68>
   1d0a4:	mov	r3, #0
   1d0a8:	b	1d3c8 <__assert_fail@plt+0xbe84>
   1d0ac:	ldr	r3, [fp, #-16]
   1d0b0:	add	r3, r3, #4
   1d0b4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1d0b8:	mov	r0, r3
   1d0bc:	bl	1b068 <__assert_fail@plt+0x9b24>
   1d0c0:	str	r0, [fp, #-20]	; 0xffffffec
   1d0c4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d0c8:	cmp	r3, #0
   1d0cc:	movne	r3, #1
   1d0d0:	moveq	r3, #0
   1d0d4:	uxtb	r3, r3
   1d0d8:	cmp	r3, #0
   1d0dc:	beq	1d0f0 <__assert_fail@plt+0xbbac>
   1d0e0:	ldr	r0, [fp, #-16]
   1d0e4:	bl	151ec <__assert_fail@plt+0x3ca8>
   1d0e8:	mov	r3, #0
   1d0ec:	b	1d3c8 <__assert_fail@plt+0xbe84>
   1d0f0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1d0f4:	and	r3, r3, #15
   1d0f8:	uxtb	r1, r3
   1d0fc:	ldr	r2, [fp, #-16]
   1d100:	ldrb	r3, [r2, #52]	; 0x34
   1d104:	bfi	r3, r1, #0, #4
   1d108:	strb	r3, [r2, #52]	; 0x34
   1d10c:	ldr	r3, [fp, #-16]
   1d110:	add	r2, r3, #4
   1d114:	ldr	r3, [fp, #-16]
   1d118:	str	r2, [r3, #40]	; 0x28
   1d11c:	mov	r3, #0
   1d120:	str	r3, [fp, #-8]
   1d124:	b	1d370 <__assert_fail@plt+0xbe2c>
   1d128:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1d12c:	ldr	r2, [r3]
   1d130:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1d134:	ldr	r1, [r3, #8]
   1d138:	ldr	r3, [fp, #-8]
   1d13c:	lsl	r3, r3, #2
   1d140:	add	r3, r1, r3
   1d144:	ldr	r3, [r3]
   1d148:	lsl	r3, r3, #3
   1d14c:	add	r3, r2, r3
   1d150:	str	r3, [fp, #-24]	; 0xffffffe8
   1d154:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d158:	ldrb	r3, [r3, #4]
   1d15c:	str	r3, [fp, #-28]	; 0xffffffe4
   1d160:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d164:	ldr	r3, [r3, #4]
   1d168:	ubfx	r3, r3, #8, #10
   1d16c:	uxth	r3, r3
   1d170:	str	r3, [fp, #-32]	; 0xffffffe0
   1d174:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d178:	cmp	r3, #1
   1d17c:	bne	1d18c <__assert_fail@plt+0xbc48>
   1d180:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d184:	cmp	r3, #0
   1d188:	beq	1d360 <__assert_fail@plt+0xbe1c>
   1d18c:	ldr	r3, [fp, #-16]
   1d190:	ldrb	r3, [r3, #52]	; 0x34
   1d194:	ubfx	r3, r3, #5, #1
   1d198:	uxtb	r2, r3
   1d19c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d1a0:	ldrb	r3, [r3, #6]
   1d1a4:	ubfx	r3, r3, #4, #1
   1d1a8:	uxtb	r3, r3
   1d1ac:	orr	r3, r2, r3
   1d1b0:	uxtb	r1, r3
   1d1b4:	ldr	r2, [fp, #-16]
   1d1b8:	ldrb	r3, [r2, #52]	; 0x34
   1d1bc:	bfi	r3, r1, #5, #1
   1d1c0:	strb	r3, [r2, #52]	; 0x34
   1d1c4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d1c8:	cmp	r3, #2
   1d1cc:	bne	1d1e4 <__assert_fail@plt+0xbca0>
   1d1d0:	ldr	r2, [fp, #-16]
   1d1d4:	ldrb	r3, [r2, #52]	; 0x34
   1d1d8:	orr	r3, r3, #16
   1d1dc:	strb	r3, [r2, #52]	; 0x34
   1d1e0:	b	1d200 <__assert_fail@plt+0xbcbc>
   1d1e4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d1e8:	cmp	r3, #4
   1d1ec:	bne	1d200 <__assert_fail@plt+0xbcbc>
   1d1f0:	ldr	r2, [fp, #-16]
   1d1f4:	ldrb	r3, [r2, #52]	; 0x34
   1d1f8:	orr	r3, r3, #64	; 0x40
   1d1fc:	strb	r3, [r2, #52]	; 0x34
   1d200:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d204:	cmp	r3, #0
   1d208:	beq	1d364 <__assert_fail@plt+0xbe20>
   1d20c:	ldr	r3, [fp, #-16]
   1d210:	ldr	r2, [r3, #40]	; 0x28
   1d214:	ldr	r3, [fp, #-16]
   1d218:	add	r3, r3, #4
   1d21c:	cmp	r2, r3
   1d220:	bne	1d2b4 <__assert_fail@plt+0xbd70>
   1d224:	mov	r0, #12
   1d228:	bl	33ba0 <__assert_fail@plt+0x2265c>
   1d22c:	mov	r3, r0
   1d230:	str	r3, [fp, #-36]	; 0xffffffdc
   1d234:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1d238:	cmp	r3, #0
   1d23c:	moveq	r3, #1
   1d240:	movne	r3, #0
   1d244:	uxtb	r3, r3
   1d248:	cmp	r3, #0
   1d24c:	beq	1d260 <__assert_fail@plt+0xbd1c>
   1d250:	ldr	r0, [fp, #-16]
   1d254:	bl	1cd4c <__assert_fail@plt+0xb808>
   1d258:	mov	r3, #0
   1d25c:	b	1d3c8 <__assert_fail@plt+0xbe84>
   1d260:	ldr	r3, [fp, #-16]
   1d264:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1d268:	str	r2, [r3, #40]	; 0x28
   1d26c:	ldr	r3, [fp, #-16]
   1d270:	ldr	r3, [r3, #40]	; 0x28
   1d274:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1d278:	mov	r0, r3
   1d27c:	bl	1b068 <__assert_fail@plt+0x9b24>
   1d280:	mov	r3, r0
   1d284:	cmp	r3, #0
   1d288:	beq	1d29c <__assert_fail@plt+0xbd58>
   1d28c:	ldr	r0, [fp, #-16]
   1d290:	bl	1cd4c <__assert_fail@plt+0xb808>
   1d294:	mov	r3, #0
   1d298:	b	1d3c8 <__assert_fail@plt+0xbe84>
   1d29c:	mov	r3, #0
   1d2a0:	str	r3, [fp, #-12]
   1d2a4:	ldr	r2, [fp, #-16]
   1d2a8:	ldrb	r3, [r2, #52]	; 0x34
   1d2ac:	orr	r3, r3, #128	; 0x80
   1d2b0:	strb	r3, [r2, #52]	; 0x34
   1d2b4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d2b8:	and	r3, r3, #1
   1d2bc:	cmp	r3, #0
   1d2c0:	beq	1d2d4 <__assert_fail@plt+0xbd90>
   1d2c4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1d2c8:	and	r3, r3, #1
   1d2cc:	cmp	r3, #0
   1d2d0:	beq	1d334 <__assert_fail@plt+0xbdf0>
   1d2d4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d2d8:	and	r3, r3, #2
   1d2dc:	cmp	r3, #0
   1d2e0:	beq	1d2f4 <__assert_fail@plt+0xbdb0>
   1d2e4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1d2e8:	and	r3, r3, #1
   1d2ec:	cmp	r3, #0
   1d2f0:	bne	1d334 <__assert_fail@plt+0xbdf0>
   1d2f4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d2f8:	and	r3, r3, #16
   1d2fc:	cmp	r3, #0
   1d300:	beq	1d314 <__assert_fail@plt+0xbdd0>
   1d304:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1d308:	and	r3, r3, #2
   1d30c:	cmp	r3, #0
   1d310:	beq	1d334 <__assert_fail@plt+0xbdf0>
   1d314:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d318:	and	r3, r3, #64	; 0x40
   1d31c:	cmp	r3, #0
   1d320:	beq	1d364 <__assert_fail@plt+0xbe20>
   1d324:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1d328:	and	r3, r3, #4
   1d32c:	cmp	r3, #0
   1d330:	bne	1d364 <__assert_fail@plt+0xbe20>
   1d334:	ldr	r3, [fp, #-16]
   1d338:	add	r0, r3, #4
   1d33c:	ldr	r2, [fp, #-8]
   1d340:	ldr	r3, [fp, #-12]
   1d344:	sub	r3, r2, r3
   1d348:	mov	r1, r3
   1d34c:	bl	1c308 <__assert_fail@plt+0xadc4>
   1d350:	ldr	r3, [fp, #-12]
   1d354:	add	r3, r3, #1
   1d358:	str	r3, [fp, #-12]
   1d35c:	b	1d364 <__assert_fail@plt+0xbe20>
   1d360:	nop	{0}
   1d364:	ldr	r3, [fp, #-8]
   1d368:	add	r3, r3, #1
   1d36c:	str	r3, [fp, #-8]
   1d370:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1d374:	ldr	r3, [r3, #4]
   1d378:	ldr	r2, [fp, #-8]
   1d37c:	cmp	r2, r3
   1d380:	blt	1d128 <__assert_fail@plt+0xbbe4>
   1d384:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1d388:	ldr	r1, [fp, #-16]
   1d38c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1d390:	bl	1cb38 <__assert_fail@plt+0xb5f4>
   1d394:	str	r0, [fp, #-20]	; 0xffffffec
   1d398:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d39c:	cmp	r3, #0
   1d3a0:	movne	r3, #1
   1d3a4:	moveq	r3, #0
   1d3a8:	uxtb	r3, r3
   1d3ac:	cmp	r3, #0
   1d3b0:	beq	1d3c4 <__assert_fail@plt+0xbe80>
   1d3b4:	ldr	r0, [fp, #-16]
   1d3b8:	bl	1cd4c <__assert_fail@plt+0xb808>
   1d3bc:	mov	r3, #0
   1d3c0:	str	r3, [fp, #-16]
   1d3c4:	ldr	r3, [fp, #-16]
   1d3c8:	mov	r0, r3
   1d3cc:	sub	sp, fp, #4
   1d3d0:	ldr	fp, [sp]
   1d3d4:	add	sp, sp, #4
   1d3d8:	pop	{pc}		; (ldr pc, [sp], #4)
   1d3dc:	str	fp, [sp, #-8]!
   1d3e0:	str	lr, [sp, #4]
   1d3e4:	add	fp, sp, #4
   1d3e8:	sub	sp, sp, #24
   1d3ec:	str	r0, [fp, #-16]
   1d3f0:	str	r1, [fp, #-20]	; 0xffffffec
   1d3f4:	str	r2, [fp, #-24]	; 0xffffffe8
   1d3f8:	movw	r3, #29684	; 0x73f4
   1d3fc:	movt	r3, #4
   1d400:	ldr	r3, [r3]
   1d404:	and	r3, r3, #33554432	; 0x2000000
   1d408:	cmp	r3, #0
   1d40c:	movne	r3, #1
   1d410:	moveq	r3, #0
   1d414:	uxtb	r1, r3
   1d418:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1d41c:	ldrb	r3, [r2, #28]
   1d420:	bfi	r3, r1, #4, #1
   1d424:	strb	r3, [r2, #28]
   1d428:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1d42c:	ldrb	r3, [r2, #28]
   1d430:	orr	r3, r3, #128	; 0x80
   1d434:	strb	r3, [r2, #28]
   1d438:	movw	r3, #29684	; 0x73f4
   1d43c:	movt	r3, #4
   1d440:	ldr	r3, [r3]
   1d444:	ldr	r2, [fp, #-20]	; 0xffffffec
   1d448:	ldr	r1, [fp, #-16]
   1d44c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d450:	bl	1e3cc <__assert_fail@plt+0xce88>
   1d454:	str	r0, [fp, #-8]
   1d458:	ldr	r3, [fp, #-8]
   1d45c:	cmp	r3, #0
   1d460:	bne	1d46c <__assert_fail@plt+0xbf28>
   1d464:	mov	r3, #0
   1d468:	b	1d494 <__assert_fail@plt+0xbf50>
   1d46c:	movw	r3, #25572	; 0x63e4
   1d470:	movt	r3, #3
   1d474:	ldr	r2, [fp, #-8]
   1d478:	ldr	r2, [r3, r2, lsl #2]
   1d47c:	movw	r3, #25188	; 0x6264
   1d480:	movt	r3, #3
   1d484:	add	r3, r2, r3
   1d488:	mov	r0, r3
   1d48c:	bl	113e8 <gettext@plt>
   1d490:	mov	r3, r0
   1d494:	mov	r0, r3
   1d498:	sub	sp, fp, #4
   1d49c:	ldr	fp, [sp]
   1d4a0:	add	sp, sp, #4
   1d4a4:	pop	{pc}		; (ldr pc, [sp], #4)
   1d4a8:	push	{fp}		; (str fp, [sp, #-4]!)
   1d4ac:	add	fp, sp, #0
   1d4b0:	sub	sp, sp, #20
   1d4b4:	str	r0, [fp, #-16]
   1d4b8:	movw	r3, #29684	; 0x73f4
   1d4bc:	movt	r3, #4
   1d4c0:	ldr	r3, [r3]
   1d4c4:	str	r3, [fp, #-8]
   1d4c8:	movw	r3, #29684	; 0x73f4
   1d4cc:	movt	r3, #4
   1d4d0:	ldr	r2, [fp, #-16]
   1d4d4:	str	r2, [r3]
   1d4d8:	ldr	r3, [fp, #-8]
   1d4dc:	mov	r0, r3
   1d4e0:	add	sp, fp, #0
   1d4e4:	pop	{fp}		; (ldr fp, [sp], #4)
   1d4e8:	bx	lr
   1d4ec:	str	fp, [sp, #-8]!
   1d4f0:	str	lr, [sp, #4]
   1d4f4:	add	fp, sp, #4
   1d4f8:	sub	sp, sp, #16
   1d4fc:	str	r0, [fp, #-16]
   1d500:	ldr	r3, [fp, #-16]
   1d504:	ldr	r3, [r3]
   1d508:	str	r3, [fp, #-8]
   1d50c:	ldr	r3, [fp, #-16]
   1d510:	ldr	r3, [r3, #16]
   1d514:	str	r3, [fp, #-12]
   1d518:	mov	r2, #256	; 0x100
   1d51c:	mov	r1, #0
   1d520:	ldr	r0, [fp, #-12]
   1d524:	bl	11448 <memset@plt>
   1d528:	ldr	r3, [fp, #-8]
   1d52c:	ldr	r3, [r3, #36]	; 0x24
   1d530:	ldr	r2, [fp, #-12]
   1d534:	mov	r1, r3
   1d538:	ldr	r0, [fp, #-16]
   1d53c:	bl	1d5f8 <__assert_fail@plt+0xc0b4>
   1d540:	ldr	r3, [fp, #-8]
   1d544:	ldr	r2, [r3, #36]	; 0x24
   1d548:	ldr	r3, [fp, #-8]
   1d54c:	ldr	r3, [r3, #40]	; 0x28
   1d550:	cmp	r2, r3
   1d554:	beq	1d570 <__assert_fail@plt+0xc02c>
   1d558:	ldr	r3, [fp, #-8]
   1d55c:	ldr	r3, [r3, #40]	; 0x28
   1d560:	ldr	r2, [fp, #-12]
   1d564:	mov	r1, r3
   1d568:	ldr	r0, [fp, #-16]
   1d56c:	bl	1d5f8 <__assert_fail@plt+0xc0b4>
   1d570:	ldr	r3, [fp, #-8]
   1d574:	ldr	r2, [r3, #36]	; 0x24
   1d578:	ldr	r3, [fp, #-8]
   1d57c:	ldr	r3, [r3, #44]	; 0x2c
   1d580:	cmp	r2, r3
   1d584:	beq	1d5a0 <__assert_fail@plt+0xc05c>
   1d588:	ldr	r3, [fp, #-8]
   1d58c:	ldr	r3, [r3, #44]	; 0x2c
   1d590:	ldr	r2, [fp, #-12]
   1d594:	mov	r1, r3
   1d598:	ldr	r0, [fp, #-16]
   1d59c:	bl	1d5f8 <__assert_fail@plt+0xc0b4>
   1d5a0:	ldr	r3, [fp, #-8]
   1d5a4:	ldr	r2, [r3, #36]	; 0x24
   1d5a8:	ldr	r3, [fp, #-8]
   1d5ac:	ldr	r3, [r3, #48]	; 0x30
   1d5b0:	cmp	r2, r3
   1d5b4:	beq	1d5d0 <__assert_fail@plt+0xc08c>
   1d5b8:	ldr	r3, [fp, #-8]
   1d5bc:	ldr	r3, [r3, #48]	; 0x30
   1d5c0:	ldr	r2, [fp, #-12]
   1d5c4:	mov	r1, r3
   1d5c8:	ldr	r0, [fp, #-16]
   1d5cc:	bl	1d5f8 <__assert_fail@plt+0xc0b4>
   1d5d0:	ldr	r2, [fp, #-16]
   1d5d4:	ldrb	r3, [r2, #28]
   1d5d8:	orr	r3, r3, #8
   1d5dc:	strb	r3, [r2, #28]
   1d5e0:	mov	r3, #0
   1d5e4:	mov	r0, r3
   1d5e8:	sub	sp, fp, #4
   1d5ec:	ldr	fp, [sp]
   1d5f0:	add	sp, sp, #4
   1d5f4:	pop	{pc}		; (ldr pc, [sp], #4)
   1d5f8:	str	fp, [sp, #-8]!
   1d5fc:	str	lr, [sp, #4]
   1d600:	add	fp, sp, #4
   1d604:	sub	sp, sp, #440	; 0x1b8
   1d608:	str	r0, [fp, #-432]	; 0xfffffe50
   1d60c:	str	r1, [fp, #-436]	; 0xfffffe4c
   1d610:	str	r2, [fp, #-440]	; 0xfffffe48
   1d614:	ldr	r3, [fp, #-432]	; 0xfffffe50
   1d618:	ldr	r3, [r3]
   1d61c:	str	r3, [fp, #-36]	; 0xffffffdc
   1d620:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1d624:	ldr	r3, [r3, #92]	; 0x5c
   1d628:	cmp	r3, #1
   1d62c:	bne	1d64c <__assert_fail@plt+0xc108>
   1d630:	ldr	r3, [fp, #-432]	; 0xfffffe50
   1d634:	ldr	r3, [r3, #12]
   1d638:	and	r3, r3, #4194304	; 0x400000
   1d63c:	cmp	r3, #0
   1d640:	beq	1d64c <__assert_fail@plt+0xc108>
   1d644:	mov	r3, #1
   1d648:	b	1d650 <__assert_fail@plt+0xc10c>
   1d64c:	mov	r3, #0
   1d650:	strb	r3, [fp, #-37]	; 0xffffffdb
   1d654:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   1d658:	and	r3, r3, #1
   1d65c:	strb	r3, [fp, #-37]	; 0xffffffdb
   1d660:	mov	r3, #0
   1d664:	str	r3, [fp, #-8]
   1d668:	b	1dd0c <__assert_fail@plt+0xc7c8>
   1d66c:	ldr	r3, [fp, #-436]	; 0xfffffe4c
   1d670:	ldr	r2, [r3, #12]
   1d674:	ldr	r3, [fp, #-8]
   1d678:	lsl	r3, r3, #2
   1d67c:	add	r3, r2, r3
   1d680:	ldr	r3, [r3]
   1d684:	str	r3, [fp, #-12]
   1d688:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1d68c:	ldr	r2, [r3]
   1d690:	ldr	r3, [fp, #-12]
   1d694:	lsl	r3, r3, #3
   1d698:	add	r3, r2, r3
   1d69c:	ldrb	r3, [r3, #4]
   1d6a0:	str	r3, [fp, #-44]	; 0xffffffd4
   1d6a4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1d6a8:	cmp	r3, #1
   1d6ac:	bne	1d8e0 <__assert_fail@plt+0xc39c>
   1d6b0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1d6b4:	ldr	r2, [r3]
   1d6b8:	ldr	r3, [fp, #-12]
   1d6bc:	lsl	r3, r3, #3
   1d6c0:	add	r3, r2, r3
   1d6c4:	ldrb	r3, [r3]
   1d6c8:	mov	r2, r3
   1d6cc:	ldr	r3, [fp, #-440]	; 0xfffffe48
   1d6d0:	str	r3, [fp, #-56]	; 0xffffffc8
   1d6d4:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   1d6d8:	strb	r3, [fp, #-57]	; 0xffffffc7
   1d6dc:	str	r2, [fp, #-64]	; 0xffffffc0
   1d6e0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1d6e4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1d6e8:	add	r3, r2, r3
   1d6ec:	mov	r2, #1
   1d6f0:	strb	r2, [r3]
   1d6f4:	ldrb	r3, [fp, #-57]	; 0xffffffc7
   1d6f8:	cmp	r3, #0
   1d6fc:	beq	1d720 <__assert_fail@plt+0xc1dc>
   1d700:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1d704:	bl	1125c <tolower@plt>
   1d708:	mov	r3, r0
   1d70c:	mov	r2, r3
   1d710:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1d714:	add	r3, r3, r2
   1d718:	mov	r2, #1
   1d71c:	strb	r2, [r3]
   1d720:	ldr	r3, [fp, #-432]	; 0xfffffe50
   1d724:	ldr	r3, [r3, #12]
   1d728:	and	r3, r3, #4194304	; 0x400000
   1d72c:	cmp	r3, #0
   1d730:	beq	1dd00 <__assert_fail@plt+0xc7bc>
   1d734:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1d738:	ldr	r3, [r3, #92]	; 0x5c
   1d73c:	cmp	r3, #1
   1d740:	ble	1dd00 <__assert_fail@plt+0xc7bc>
   1d744:	sub	r3, fp, #140	; 0x8c
   1d748:	str	r3, [fp, #-16]
   1d74c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1d750:	ldr	r2, [r3]
   1d754:	ldr	r3, [fp, #-12]
   1d758:	lsl	r3, r3, #3
   1d75c:	add	r2, r2, r3
   1d760:	ldr	r3, [fp, #-16]
   1d764:	add	r1, r3, #1
   1d768:	str	r1, [fp, #-16]
   1d76c:	ldrb	r2, [r2]
   1d770:	strb	r2, [r3]
   1d774:	b	1d7a0 <__assert_fail@plt+0xc25c>
   1d778:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1d77c:	ldr	r2, [r3]
   1d780:	ldr	r3, [fp, #-12]
   1d784:	lsl	r3, r3, #3
   1d788:	add	r2, r2, r3
   1d78c:	ldr	r3, [fp, #-16]
   1d790:	add	r1, r3, #1
   1d794:	str	r1, [fp, #-16]
   1d798:	ldrb	r2, [r2]
   1d79c:	strb	r2, [r3]
   1d7a0:	ldr	r3, [fp, #-12]
   1d7a4:	add	r3, r3, #1
   1d7a8:	str	r3, [fp, #-12]
   1d7ac:	ldr	r2, [fp, #-12]
   1d7b0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1d7b4:	ldr	r3, [r3, #8]
   1d7b8:	cmp	r2, r3
   1d7bc:	bcs	1d808 <__assert_fail@plt+0xc2c4>
   1d7c0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1d7c4:	ldr	r2, [r3]
   1d7c8:	ldr	r3, [fp, #-12]
   1d7cc:	lsl	r3, r3, #3
   1d7d0:	add	r3, r2, r3
   1d7d4:	ldrb	r3, [r3, #4]
   1d7d8:	cmp	r3, #1
   1d7dc:	bne	1d808 <__assert_fail@plt+0xc2c4>
   1d7e0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1d7e4:	ldr	r2, [r3]
   1d7e8:	ldr	r3, [fp, #-12]
   1d7ec:	lsl	r3, r3, #3
   1d7f0:	add	r3, r2, r3
   1d7f4:	ldrb	r3, [r3, #6]
   1d7f8:	and	r3, r3, #32
   1d7fc:	uxtb	r3, r3
   1d800:	cmp	r3, #0
   1d804:	bne	1d778 <__assert_fail@plt+0xc234>
   1d808:	sub	r3, fp, #152	; 0x98
   1d80c:	mov	r2, #8
   1d810:	mov	r1, #0
   1d814:	mov	r0, r3
   1d818:	bl	11448 <memset@plt>
   1d81c:	sub	r3, fp, #140	; 0x8c
   1d820:	ldr	r2, [fp, #-16]
   1d824:	sub	r3, r2, r3
   1d828:	mov	r2, r3
   1d82c:	sub	r3, fp, #152	; 0x98
   1d830:	sub	r1, fp, #140	; 0x8c
   1d834:	sub	r0, fp, #144	; 0x90
   1d838:	bl	34944 <__assert_fail@plt+0x23400>
   1d83c:	mov	r1, r0
   1d840:	sub	r3, fp, #140	; 0x8c
   1d844:	ldr	r2, [fp, #-16]
   1d848:	sub	r3, r2, r3
   1d84c:	cmp	r1, r3
   1d850:	bne	1dd00 <__assert_fail@plt+0xc7bc>
   1d854:	ldr	r3, [fp, #-144]	; 0xffffff70
   1d858:	mov	r0, r3
   1d85c:	bl	11274 <towlower@plt>
   1d860:	mov	r1, r0
   1d864:	sub	r2, fp, #152	; 0x98
   1d868:	sub	r3, fp, #140	; 0x8c
   1d86c:	mov	r0, r3
   1d870:	bl	111c0 <wcrtomb@plt>
   1d874:	mov	r3, r0
   1d878:	cmn	r3, #1
   1d87c:	beq	1dd00 <__assert_fail@plt+0xc7bc>
   1d880:	ldrb	r3, [fp, #-140]	; 0xffffff74
   1d884:	mov	r2, r3
   1d888:	ldr	r3, [fp, #-440]	; 0xfffffe48
   1d88c:	str	r3, [fp, #-68]	; 0xffffffbc
   1d890:	mov	r3, #0
   1d894:	strb	r3, [fp, #-69]	; 0xffffffbb
   1d898:	str	r2, [fp, #-76]	; 0xffffffb4
   1d89c:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1d8a0:	ldr	r2, [fp, #-68]	; 0xffffffbc
   1d8a4:	add	r3, r2, r3
   1d8a8:	mov	r2, #1
   1d8ac:	strb	r2, [r3]
   1d8b0:	ldrb	r3, [fp, #-69]	; 0xffffffbb
   1d8b4:	cmp	r3, #0
   1d8b8:	beq	1dd00 <__assert_fail@plt+0xc7bc>
   1d8bc:	ldr	r0, [fp, #-76]	; 0xffffffb4
   1d8c0:	bl	1125c <tolower@plt>
   1d8c4:	mov	r3, r0
   1d8c8:	mov	r2, r3
   1d8cc:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1d8d0:	add	r3, r3, r2
   1d8d4:	mov	r2, #1
   1d8d8:	strb	r2, [r3]
   1d8dc:	b	1dd00 <__assert_fail@plt+0xc7bc>
   1d8e0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1d8e4:	cmp	r3, #3
   1d8e8:	bne	1d9e8 <__assert_fail@plt+0xc4a4>
   1d8ec:	mov	r3, #0
   1d8f0:	str	r3, [fp, #-20]	; 0xffffffec
   1d8f4:	mov	r3, #0
   1d8f8:	str	r3, [fp, #-24]	; 0xffffffe8
   1d8fc:	b	1d9d8 <__assert_fail@plt+0xc494>
   1d900:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1d904:	ldr	r2, [r3]
   1d908:	ldr	r3, [fp, #-12]
   1d90c:	lsl	r3, r3, #3
   1d910:	add	r3, r2, r3
   1d914:	ldr	r2, [r3]
   1d918:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d91c:	lsl	r3, r3, #2
   1d920:	add	r3, r2, r3
   1d924:	ldr	r3, [r3]
   1d928:	str	r3, [fp, #-48]	; 0xffffffd0
   1d92c:	mov	r3, #0
   1d930:	str	r3, [fp, #-28]	; 0xffffffe4
   1d934:	b	1d9c0 <__assert_fail@plt+0xc47c>
   1d938:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1d93c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d940:	lsr	r3, r2, r3
   1d944:	and	r3, r3, #1
   1d948:	cmp	r3, #0
   1d94c:	beq	1d9a8 <__assert_fail@plt+0xc464>
   1d950:	ldr	r3, [fp, #-440]	; 0xfffffe48
   1d954:	str	r3, [fp, #-80]	; 0xffffffb0
   1d958:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   1d95c:	strb	r3, [fp, #-81]	; 0xffffffaf
   1d960:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d964:	str	r3, [fp, #-88]	; 0xffffffa8
   1d968:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1d96c:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1d970:	add	r3, r2, r3
   1d974:	mov	r2, #1
   1d978:	strb	r2, [r3]
   1d97c:	ldrb	r3, [fp, #-81]	; 0xffffffaf
   1d980:	cmp	r3, #0
   1d984:	beq	1d9a8 <__assert_fail@plt+0xc464>
   1d988:	ldr	r0, [fp, #-88]	; 0xffffffa8
   1d98c:	bl	1125c <tolower@plt>
   1d990:	mov	r3, r0
   1d994:	mov	r2, r3
   1d998:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1d99c:	add	r3, r3, r2
   1d9a0:	mov	r2, #1
   1d9a4:	strb	r2, [r3]
   1d9a8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d9ac:	add	r3, r3, #1
   1d9b0:	str	r3, [fp, #-28]	; 0xffffffe4
   1d9b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d9b8:	add	r3, r3, #1
   1d9bc:	str	r3, [fp, #-24]	; 0xffffffe8
   1d9c0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d9c4:	cmp	r3, #31
   1d9c8:	ble	1d938 <__assert_fail@plt+0xc3f4>
   1d9cc:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d9d0:	add	r3, r3, #1
   1d9d4:	str	r3, [fp, #-20]	; 0xffffffec
   1d9d8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d9dc:	cmp	r3, #7
   1d9e0:	ble	1d900 <__assert_fail@plt+0xc3bc>
   1d9e4:	b	1dd00 <__assert_fail@plt+0xc7bc>
   1d9e8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1d9ec:	cmp	r3, #6
   1d9f0:	bne	1dcac <__assert_fail@plt+0xc768>
   1d9f4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1d9f8:	ldr	r2, [r3]
   1d9fc:	ldr	r3, [fp, #-12]
   1da00:	lsl	r3, r3, #3
   1da04:	add	r3, r2, r3
   1da08:	ldr	r3, [r3]
   1da0c:	str	r3, [fp, #-52]	; 0xffffffcc
   1da10:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1da14:	ldr	r3, [r3, #92]	; 0x5c
   1da18:	cmp	r3, #1
   1da1c:	ble	1db10 <__assert_fail@plt+0xc5cc>
   1da20:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1da24:	ldr	r3, [r3, #36]	; 0x24
   1da28:	cmp	r3, #0
   1da2c:	bne	1da58 <__assert_fail@plt+0xc514>
   1da30:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1da34:	ldrb	r3, [r3, #16]
   1da38:	and	r3, r3, #1
   1da3c:	uxtb	r3, r3
   1da40:	cmp	r3, #0
   1da44:	bne	1da58 <__assert_fail@plt+0xc514>
   1da48:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1da4c:	ldr	r3, [r3, #32]
   1da50:	cmp	r3, #0
   1da54:	beq	1db10 <__assert_fail@plt+0xc5cc>
   1da58:	mov	r3, #0
   1da5c:	strb	r3, [fp, #-153]	; 0xffffff67
   1da60:	sub	r3, fp, #164	; 0xa4
   1da64:	mov	r2, #8
   1da68:	mov	r1, #0
   1da6c:	mov	r0, r3
   1da70:	bl	11448 <memset@plt>
   1da74:	sub	r3, fp, #164	; 0xa4
   1da78:	sub	r1, fp, #153	; 0x99
   1da7c:	mov	r2, #1
   1da80:	mov	r0, #0
   1da84:	bl	34944 <__assert_fail@plt+0x23400>
   1da88:	mov	r3, r0
   1da8c:	cmn	r3, #2
   1da90:	bne	1daf0 <__assert_fail@plt+0xc5ac>
   1da94:	ldrb	r3, [fp, #-153]	; 0xffffff67
   1da98:	mov	r2, r3
   1da9c:	ldr	r3, [fp, #-440]	; 0xfffffe48
   1daa0:	str	r3, [fp, #-92]	; 0xffffffa4
   1daa4:	mov	r3, #0
   1daa8:	strb	r3, [fp, #-93]	; 0xffffffa3
   1daac:	str	r2, [fp, #-100]	; 0xffffff9c
   1dab0:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1dab4:	ldr	r2, [fp, #-92]	; 0xffffffa4
   1dab8:	add	r3, r2, r3
   1dabc:	mov	r2, #1
   1dac0:	strb	r2, [r3]
   1dac4:	ldrb	r3, [fp, #-93]	; 0xffffffa3
   1dac8:	cmp	r3, #0
   1dacc:	beq	1daf0 <__assert_fail@plt+0xc5ac>
   1dad0:	ldr	r0, [fp, #-100]	; 0xffffff9c
   1dad4:	bl	1125c <tolower@plt>
   1dad8:	mov	r3, r0
   1dadc:	mov	r2, r3
   1dae0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1dae4:	add	r3, r3, r2
   1dae8:	mov	r2, #1
   1daec:	strb	r2, [r3]
   1daf0:	ldrb	r3, [fp, #-153]	; 0xffffff67
   1daf4:	add	r3, r3, #1
   1daf8:	uxtb	r3, r3
   1dafc:	strb	r3, [fp, #-153]	; 0xffffff67
   1db00:	ldrb	r3, [fp, #-153]	; 0xffffff67
   1db04:	cmp	r3, #0
   1db08:	bne	1da60 <__assert_fail@plt+0xc51c>
   1db0c:	b	1dd00 <__assert_fail@plt+0xc7bc>
   1db10:	mov	r3, #0
   1db14:	str	r3, [fp, #-32]	; 0xffffffe0
   1db18:	b	1dc94 <__assert_fail@plt+0xc750>
   1db1c:	sub	r3, fp, #172	; 0xac
   1db20:	mov	r2, #8
   1db24:	mov	r1, #0
   1db28:	mov	r0, r3
   1db2c:	bl	11448 <memset@plt>
   1db30:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1db34:	ldr	r2, [r3]
   1db38:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1db3c:	lsl	r3, r3, #2
   1db40:	add	r3, r2, r3
   1db44:	ldr	r1, [r3]
   1db48:	sub	r2, fp, #172	; 0xac
   1db4c:	sub	r3, fp, #428	; 0x1ac
   1db50:	mov	r0, r3
   1db54:	bl	111c0 <wcrtomb@plt>
   1db58:	mov	r3, r0
   1db5c:	cmn	r3, #1
   1db60:	beq	1dbc4 <__assert_fail@plt+0xc680>
   1db64:	sub	r3, fp, #428	; 0x1ac
   1db68:	ldrb	r3, [r3]
   1db6c:	mov	r2, r3
   1db70:	ldr	r3, [fp, #-440]	; 0xfffffe48
   1db74:	str	r3, [fp, #-104]	; 0xffffff98
   1db78:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   1db7c:	strb	r3, [fp, #-105]	; 0xffffff97
   1db80:	str	r2, [fp, #-112]	; 0xffffff90
   1db84:	ldr	r3, [fp, #-112]	; 0xffffff90
   1db88:	ldr	r2, [fp, #-104]	; 0xffffff98
   1db8c:	add	r3, r2, r3
   1db90:	mov	r2, #1
   1db94:	strb	r2, [r3]
   1db98:	ldrb	r3, [fp, #-105]	; 0xffffff97
   1db9c:	cmp	r3, #0
   1dba0:	beq	1dbc4 <__assert_fail@plt+0xc680>
   1dba4:	ldr	r0, [fp, #-112]	; 0xffffff90
   1dba8:	bl	1125c <tolower@plt>
   1dbac:	mov	r3, r0
   1dbb0:	mov	r2, r3
   1dbb4:	ldr	r3, [fp, #-104]	; 0xffffff98
   1dbb8:	add	r3, r3, r2
   1dbbc:	mov	r2, #1
   1dbc0:	strb	r2, [r3]
   1dbc4:	ldr	r3, [fp, #-432]	; 0xfffffe50
   1dbc8:	ldr	r3, [r3, #12]
   1dbcc:	and	r3, r3, #4194304	; 0x400000
   1dbd0:	cmp	r3, #0
   1dbd4:	beq	1dc88 <__assert_fail@plt+0xc744>
   1dbd8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1dbdc:	ldr	r3, [r3, #92]	; 0x5c
   1dbe0:	cmp	r3, #1
   1dbe4:	ble	1dc88 <__assert_fail@plt+0xc744>
   1dbe8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1dbec:	ldr	r2, [r3]
   1dbf0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1dbf4:	lsl	r3, r3, #2
   1dbf8:	add	r3, r2, r3
   1dbfc:	ldr	r3, [r3]
   1dc00:	mov	r0, r3
   1dc04:	bl	11274 <towlower@plt>
   1dc08:	mov	r1, r0
   1dc0c:	sub	r2, fp, #172	; 0xac
   1dc10:	sub	r3, fp, #428	; 0x1ac
   1dc14:	mov	r0, r3
   1dc18:	bl	111c0 <wcrtomb@plt>
   1dc1c:	mov	r3, r0
   1dc20:	cmn	r3, #1
   1dc24:	beq	1dc88 <__assert_fail@plt+0xc744>
   1dc28:	sub	r3, fp, #428	; 0x1ac
   1dc2c:	ldrb	r3, [r3]
   1dc30:	mov	r2, r3
   1dc34:	ldr	r3, [fp, #-440]	; 0xfffffe48
   1dc38:	str	r3, [fp, #-116]	; 0xffffff8c
   1dc3c:	mov	r3, #0
   1dc40:	strb	r3, [fp, #-117]	; 0xffffff8b
   1dc44:	str	r2, [fp, #-124]	; 0xffffff84
   1dc48:	ldr	r3, [fp, #-124]	; 0xffffff84
   1dc4c:	ldr	r2, [fp, #-116]	; 0xffffff8c
   1dc50:	add	r3, r2, r3
   1dc54:	mov	r2, #1
   1dc58:	strb	r2, [r3]
   1dc5c:	ldrb	r3, [fp, #-117]	; 0xffffff8b
   1dc60:	cmp	r3, #0
   1dc64:	beq	1dc88 <__assert_fail@plt+0xc744>
   1dc68:	ldr	r0, [fp, #-124]	; 0xffffff84
   1dc6c:	bl	1125c <tolower@plt>
   1dc70:	mov	r3, r0
   1dc74:	mov	r2, r3
   1dc78:	ldr	r3, [fp, #-116]	; 0xffffff8c
   1dc7c:	add	r3, r3, r2
   1dc80:	mov	r2, #1
   1dc84:	strb	r2, [r3]
   1dc88:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1dc8c:	add	r3, r3, #1
   1dc90:	str	r3, [fp, #-32]	; 0xffffffe0
   1dc94:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1dc98:	ldr	r3, [r3, #20]
   1dc9c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1dca0:	cmp	r2, r3
   1dca4:	blt	1db1c <__assert_fail@plt+0xc5d8>
   1dca8:	b	1dd00 <__assert_fail@plt+0xc7bc>
   1dcac:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1dcb0:	cmp	r3, #5
   1dcb4:	beq	1dcd0 <__assert_fail@plt+0xc78c>
   1dcb8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1dcbc:	cmp	r3, #7
   1dcc0:	beq	1dcd0 <__assert_fail@plt+0xc78c>
   1dcc4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1dcc8:	cmp	r3, #2
   1dccc:	bne	1dd00 <__assert_fail@plt+0xc7bc>
   1dcd0:	mov	r2, #256	; 0x100
   1dcd4:	mov	r1, #1
   1dcd8:	ldr	r0, [fp, #-440]	; 0xfffffe48
   1dcdc:	bl	11448 <memset@plt>
   1dce0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1dce4:	cmp	r3, #2
   1dce8:	bne	1dd24 <__assert_fail@plt+0xc7e0>
   1dcec:	ldr	r2, [fp, #-432]	; 0xfffffe50
   1dcf0:	ldrb	r3, [r2, #28]
   1dcf4:	orr	r3, r3, #1
   1dcf8:	strb	r3, [r2, #28]
   1dcfc:	b	1dd24 <__assert_fail@plt+0xc7e0>
   1dd00:	ldr	r3, [fp, #-8]
   1dd04:	add	r3, r3, #1
   1dd08:	str	r3, [fp, #-8]
   1dd0c:	ldr	r3, [fp, #-436]	; 0xfffffe4c
   1dd10:	ldr	r3, [r3, #8]
   1dd14:	ldr	r2, [fp, #-8]
   1dd18:	cmp	r2, r3
   1dd1c:	blt	1d66c <__assert_fail@plt+0xc128>
   1dd20:	b	1dd28 <__assert_fail@plt+0xc7e4>
   1dd24:	nop	{0}
   1dd28:	sub	sp, fp, #4
   1dd2c:	ldr	fp, [sp]
   1dd30:	add	sp, sp, #4
   1dd34:	pop	{pc}		; (ldr pc, [sp], #4)
   1dd38:	str	fp, [sp, #-8]!
   1dd3c:	str	lr, [sp, #4]
   1dd40:	add	fp, sp, #4
   1dd44:	sub	sp, sp, #24
   1dd48:	str	r0, [fp, #-16]
   1dd4c:	str	r1, [fp, #-20]	; 0xffffffec
   1dd50:	str	r2, [fp, #-24]	; 0xffffffe8
   1dd54:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1dd58:	and	r3, r3, #1
   1dd5c:	cmp	r3, #0
   1dd60:	beq	1dd70 <__assert_fail@plt+0xc82c>
   1dd64:	movw	r3, #45820	; 0xb2fc
   1dd68:	movt	r3, #3
   1dd6c:	b	1dd78 <__assert_fail@plt+0xc834>
   1dd70:	movw	r3, #710	; 0x2c6
   1dd74:	movt	r3, #257	; 0x101
   1dd78:	str	r3, [fp, #-12]
   1dd7c:	ldr	r3, [fp, #-16]
   1dd80:	mov	r2, #0
   1dd84:	str	r2, [r3]
   1dd88:	ldr	r3, [fp, #-16]
   1dd8c:	mov	r2, #0
   1dd90:	str	r2, [r3, #4]
   1dd94:	ldr	r3, [fp, #-16]
   1dd98:	mov	r2, #0
   1dd9c:	str	r2, [r3, #8]
   1dda0:	mov	r0, #256	; 0x100
   1dda4:	bl	33ba0 <__assert_fail@plt+0x2265c>
   1dda8:	mov	r3, r0
   1ddac:	mov	r2, r3
   1ddb0:	ldr	r3, [fp, #-16]
   1ddb4:	str	r2, [r3, #16]
   1ddb8:	ldr	r3, [fp, #-16]
   1ddbc:	ldr	r3, [r3, #16]
   1ddc0:	cmp	r3, #0
   1ddc4:	moveq	r3, #1
   1ddc8:	movne	r3, #0
   1ddcc:	uxtb	r3, r3
   1ddd0:	cmp	r3, #0
   1ddd4:	beq	1dde0 <__assert_fail@plt+0xc89c>
   1ddd8:	mov	r3, #12
   1dddc:	b	1def4 <__assert_fail@plt+0xc9b0>
   1dde0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1dde4:	lsl	r3, r3, #21
   1dde8:	and	r3, r3, #4194304	; 0x400000
   1ddec:	ldr	r2, [fp, #-12]
   1ddf0:	orr	r3, r2, r3
   1ddf4:	str	r3, [fp, #-12]
   1ddf8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ddfc:	and	r3, r3, #4
   1de00:	cmp	r3, #0
   1de04:	beq	1de34 <__assert_fail@plt+0xc8f0>
   1de08:	ldr	r3, [fp, #-12]
   1de0c:	bic	r3, r3, #64	; 0x40
   1de10:	str	r3, [fp, #-12]
   1de14:	ldr	r3, [fp, #-12]
   1de18:	orr	r3, r3, #256	; 0x100
   1de1c:	str	r3, [fp, #-12]
   1de20:	ldr	r2, [fp, #-16]
   1de24:	ldrb	r3, [r2, #28]
   1de28:	orr	r3, r3, #128	; 0x80
   1de2c:	strb	r3, [r2, #28]
   1de30:	b	1de44 <__assert_fail@plt+0xc900>
   1de34:	ldr	r2, [fp, #-16]
   1de38:	ldrb	r3, [r2, #28]
   1de3c:	bfc	r3, #7, #1
   1de40:	strb	r3, [r2, #28]
   1de44:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1de48:	and	r3, r3, #8
   1de4c:	cmp	r3, #0
   1de50:	movne	r3, #1
   1de54:	moveq	r3, #0
   1de58:	uxtb	r1, r3
   1de5c:	ldr	r2, [fp, #-16]
   1de60:	ldrb	r3, [r2, #28]
   1de64:	bfi	r3, r1, #4, #1
   1de68:	strb	r3, [r2, #28]
   1de6c:	ldr	r3, [fp, #-16]
   1de70:	mov	r2, #0
   1de74:	str	r2, [r3, #20]
   1de78:	ldr	r0, [fp, #-20]	; 0xffffffec
   1de7c:	bl	113f4 <strlen@plt>
   1de80:	mov	r2, r0
   1de84:	ldr	r3, [fp, #-12]
   1de88:	ldr	r1, [fp, #-20]	; 0xffffffec
   1de8c:	ldr	r0, [fp, #-16]
   1de90:	bl	1e3cc <__assert_fail@plt+0xce88>
   1de94:	str	r0, [fp, #-8]
   1de98:	ldr	r3, [fp, #-8]
   1de9c:	cmp	r3, #16
   1dea0:	bne	1deac <__assert_fail@plt+0xc968>
   1dea4:	mov	r3, #8
   1dea8:	str	r3, [fp, #-8]
   1deac:	ldr	r3, [fp, #-8]
   1deb0:	cmp	r3, #0
   1deb4:	moveq	r3, #1
   1deb8:	movne	r3, #0
   1debc:	uxtb	r3, r3
   1dec0:	cmp	r3, #0
   1dec4:	beq	1ded4 <__assert_fail@plt+0xc990>
   1dec8:	ldr	r0, [fp, #-16]
   1decc:	bl	1d4ec <__assert_fail@plt+0xbfa8>
   1ded0:	b	1def0 <__assert_fail@plt+0xc9ac>
   1ded4:	ldr	r3, [fp, #-16]
   1ded8:	ldr	r3, [r3, #16]
   1dedc:	mov	r0, r3
   1dee0:	bl	151ec <__assert_fail@plt+0x3ca8>
   1dee4:	ldr	r3, [fp, #-16]
   1dee8:	mov	r2, #0
   1deec:	str	r2, [r3, #16]
   1def0:	ldr	r3, [fp, #-8]
   1def4:	mov	r0, r3
   1def8:	sub	sp, fp, #4
   1defc:	ldr	fp, [sp]
   1df00:	add	sp, sp, #4
   1df04:	pop	{pc}		; (ldr pc, [sp], #4)
   1df08:	str	fp, [sp, #-8]!
   1df0c:	str	lr, [sp, #4]
   1df10:	add	fp, sp, #4
   1df14:	sub	sp, sp, #32
   1df18:	str	r0, [fp, #-24]	; 0xffffffe8
   1df1c:	str	r1, [fp, #-28]	; 0xffffffe4
   1df20:	str	r2, [fp, #-32]	; 0xffffffe0
   1df24:	str	r3, [fp, #-36]	; 0xffffffdc
   1df28:	mov	r3, #17
   1df2c:	str	r3, [fp, #-12]
   1df30:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1df34:	lsr	r3, r3, #31
   1df38:	uxtb	r3, r3
   1df3c:	cmp	r3, #0
   1df40:	bne	1df64 <__assert_fail@plt+0xca20>
   1df44:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1df48:	ldr	r3, [fp, #-12]
   1df4c:	cmp	r2, r3
   1df50:	movge	r3, #1
   1df54:	movlt	r3, #0
   1df58:	uxtb	r3, r3
   1df5c:	cmp	r3, #0
   1df60:	beq	1df68 <__assert_fail@plt+0xca24>
   1df64:	bl	1152c <abort@plt>
   1df68:	movw	r3, #25572	; 0x63e4
   1df6c:	movt	r3, #3
   1df70:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1df74:	ldr	r2, [r3, r2, lsl #2]
   1df78:	movw	r3, #25188	; 0x6264
   1df7c:	movt	r3, #3
   1df80:	add	r3, r2, r3
   1df84:	mov	r0, r3
   1df88:	bl	113e8 <gettext@plt>
   1df8c:	str	r0, [fp, #-16]
   1df90:	ldr	r0, [fp, #-16]
   1df94:	bl	113f4 <strlen@plt>
   1df98:	mov	r3, r0
   1df9c:	add	r3, r3, #1
   1dfa0:	str	r3, [fp, #-20]	; 0xffffffec
   1dfa4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1dfa8:	cmp	r3, #0
   1dfac:	movne	r3, #1
   1dfb0:	moveq	r3, #0
   1dfb4:	uxtb	r3, r3
   1dfb8:	cmp	r3, #0
   1dfbc:	beq	1e018 <__assert_fail@plt+0xcad4>
   1dfc0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1dfc4:	str	r3, [fp, #-8]
   1dfc8:	ldr	r2, [fp, #-20]	; 0xffffffec
   1dfcc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1dfd0:	cmp	r2, r3
   1dfd4:	movhi	r3, #1
   1dfd8:	movls	r3, #0
   1dfdc:	uxtb	r3, r3
   1dfe0:	cmp	r3, #0
   1dfe4:	beq	1e008 <__assert_fail@plt+0xcac4>
   1dfe8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1dfec:	sub	r3, r3, #1
   1dff0:	str	r3, [fp, #-8]
   1dff4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1dff8:	ldr	r3, [fp, #-8]
   1dffc:	add	r3, r2, r3
   1e000:	mov	r2, #0
   1e004:	strb	r2, [r3]
   1e008:	ldr	r2, [fp, #-8]
   1e00c:	ldr	r1, [fp, #-16]
   1e010:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e014:	bl	11250 <memcpy@plt>
   1e018:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e01c:	mov	r0, r3
   1e020:	sub	sp, fp, #4
   1e024:	ldr	fp, [sp]
   1e028:	add	sp, sp, #4
   1e02c:	pop	{pc}		; (ldr pc, [sp], #4)
   1e030:	str	fp, [sp, #-8]!
   1e034:	str	lr, [sp, #4]
   1e038:	add	fp, sp, #4
   1e03c:	sub	sp, sp, #24
   1e040:	str	r0, [fp, #-24]	; 0xffffffe8
   1e044:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e048:	ldr	r3, [r3]
   1e04c:	cmp	r3, #0
   1e050:	beq	1e09c <__assert_fail@plt+0xcb58>
   1e054:	mov	r3, #0
   1e058:	str	r3, [fp, #-8]
   1e05c:	b	1e088 <__assert_fail@plt+0xcb44>
   1e060:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e064:	ldr	r2, [r3]
   1e068:	ldr	r3, [fp, #-8]
   1e06c:	lsl	r3, r3, #3
   1e070:	add	r3, r2, r3
   1e074:	mov	r0, r3
   1e078:	bl	26444 <__assert_fail@plt+0x14f00>
   1e07c:	ldr	r3, [fp, #-8]
   1e080:	add	r3, r3, #1
   1e084:	str	r3, [fp, #-8]
   1e088:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e08c:	ldr	r2, [r3, #8]
   1e090:	ldr	r3, [fp, #-8]
   1e094:	cmp	r2, r3
   1e098:	bhi	1e060 <__assert_fail@plt+0xcb1c>
   1e09c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e0a0:	ldr	r3, [r3, #12]
   1e0a4:	mov	r0, r3
   1e0a8:	bl	151ec <__assert_fail@plt+0x3ca8>
   1e0ac:	mov	r3, #0
   1e0b0:	str	r3, [fp, #-8]
   1e0b4:	b	1e178 <__assert_fail@plt+0xcc34>
   1e0b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e0bc:	ldr	r3, [r3, #24]
   1e0c0:	cmp	r3, #0
   1e0c4:	beq	1e0f4 <__assert_fail@plt+0xcbb0>
   1e0c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e0cc:	ldr	r1, [r3, #24]
   1e0d0:	ldr	r2, [fp, #-8]
   1e0d4:	mov	r3, r2
   1e0d8:	lsl	r3, r3, #1
   1e0dc:	add	r3, r3, r2
   1e0e0:	lsl	r3, r3, #2
   1e0e4:	add	r3, r1, r3
   1e0e8:	ldr	r3, [r3, #8]
   1e0ec:	mov	r0, r3
   1e0f0:	bl	151ec <__assert_fail@plt+0x3ca8>
   1e0f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e0f8:	ldr	r3, [r3, #28]
   1e0fc:	cmp	r3, #0
   1e100:	beq	1e130 <__assert_fail@plt+0xcbec>
   1e104:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e108:	ldr	r1, [r3, #28]
   1e10c:	ldr	r2, [fp, #-8]
   1e110:	mov	r3, r2
   1e114:	lsl	r3, r3, #1
   1e118:	add	r3, r3, r2
   1e11c:	lsl	r3, r3, #2
   1e120:	add	r3, r1, r3
   1e124:	ldr	r3, [r3, #8]
   1e128:	mov	r0, r3
   1e12c:	bl	151ec <__assert_fail@plt+0x3ca8>
   1e130:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e134:	ldr	r3, [r3, #20]
   1e138:	cmp	r3, #0
   1e13c:	beq	1e16c <__assert_fail@plt+0xcc28>
   1e140:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e144:	ldr	r1, [r3, #20]
   1e148:	ldr	r2, [fp, #-8]
   1e14c:	mov	r3, r2
   1e150:	lsl	r3, r3, #1
   1e154:	add	r3, r3, r2
   1e158:	lsl	r3, r3, #2
   1e15c:	add	r3, r1, r3
   1e160:	ldr	r3, [r3, #8]
   1e164:	mov	r0, r3
   1e168:	bl	151ec <__assert_fail@plt+0x3ca8>
   1e16c:	ldr	r3, [fp, #-8]
   1e170:	add	r3, r3, #1
   1e174:	str	r3, [fp, #-8]
   1e178:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e17c:	ldr	r2, [r3, #8]
   1e180:	ldr	r3, [fp, #-8]
   1e184:	cmp	r2, r3
   1e188:	bhi	1e0b8 <__assert_fail@plt+0xcb74>
   1e18c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e190:	ldr	r3, [r3, #20]
   1e194:	mov	r0, r3
   1e198:	bl	151ec <__assert_fail@plt+0x3ca8>
   1e19c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e1a0:	ldr	r3, [r3, #24]
   1e1a4:	mov	r0, r3
   1e1a8:	bl	151ec <__assert_fail@plt+0x3ca8>
   1e1ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e1b0:	ldr	r3, [r3, #28]
   1e1b4:	mov	r0, r3
   1e1b8:	bl	151ec <__assert_fail@plt+0x3ca8>
   1e1bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e1c0:	ldr	r3, [r3]
   1e1c4:	mov	r0, r3
   1e1c8:	bl	151ec <__assert_fail@plt+0x3ca8>
   1e1cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e1d0:	ldr	r3, [r3, #32]
   1e1d4:	cmp	r3, #0
   1e1d8:	beq	1e28c <__assert_fail@plt+0xcd48>
   1e1dc:	mov	r3, #0
   1e1e0:	str	r3, [fp, #-8]
   1e1e4:	b	1e278 <__assert_fail@plt+0xcd34>
   1e1e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e1ec:	ldr	r1, [r3, #32]
   1e1f0:	ldr	r2, [fp, #-8]
   1e1f4:	mov	r3, r2
   1e1f8:	lsl	r3, r3, #1
   1e1fc:	add	r3, r3, r2
   1e200:	lsl	r3, r3, #2
   1e204:	add	r3, r1, r3
   1e208:	str	r3, [fp, #-16]
   1e20c:	mov	r3, #0
   1e210:	str	r3, [fp, #-12]
   1e214:	b	1e248 <__assert_fail@plt+0xcd04>
   1e218:	ldr	r3, [fp, #-16]
   1e21c:	ldr	r2, [r3, #8]
   1e220:	ldr	r3, [fp, #-12]
   1e224:	lsl	r3, r3, #2
   1e228:	add	r3, r2, r3
   1e22c:	ldr	r3, [r3]
   1e230:	str	r3, [fp, #-20]	; 0xffffffec
   1e234:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e238:	bl	1cd4c <__assert_fail@plt+0xb808>
   1e23c:	ldr	r3, [fp, #-12]
   1e240:	add	r3, r3, #1
   1e244:	str	r3, [fp, #-12]
   1e248:	ldr	r3, [fp, #-16]
   1e24c:	ldr	r3, [r3]
   1e250:	ldr	r2, [fp, #-12]
   1e254:	cmp	r2, r3
   1e258:	blt	1e218 <__assert_fail@plt+0xccd4>
   1e25c:	ldr	r3, [fp, #-16]
   1e260:	ldr	r3, [r3, #8]
   1e264:	mov	r0, r3
   1e268:	bl	151ec <__assert_fail@plt+0x3ca8>
   1e26c:	ldr	r3, [fp, #-8]
   1e270:	add	r3, r3, #1
   1e274:	str	r3, [fp, #-8]
   1e278:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e27c:	ldr	r2, [r3, #68]	; 0x44
   1e280:	ldr	r3, [fp, #-8]
   1e284:	cmp	r2, r3
   1e288:	bcs	1e1e8 <__assert_fail@plt+0xcca4>
   1e28c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e290:	ldr	r3, [r3, #32]
   1e294:	mov	r0, r3
   1e298:	bl	151ec <__assert_fail@plt+0x3ca8>
   1e29c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e2a0:	ldr	r2, [r3, #60]	; 0x3c
   1e2a4:	movw	r3, #25640	; 0x6428
   1e2a8:	movt	r3, #3
   1e2ac:	cmp	r2, r3
   1e2b0:	beq	1e2c4 <__assert_fail@plt+0xcd80>
   1e2b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e2b8:	ldr	r3, [r3, #60]	; 0x3c
   1e2bc:	mov	r0, r3
   1e2c0:	bl	151ec <__assert_fail@plt+0x3ca8>
   1e2c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e2c8:	ldr	r3, [r3, #132]	; 0x84
   1e2cc:	mov	r0, r3
   1e2d0:	bl	151ec <__assert_fail@plt+0x3ca8>
   1e2d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e2d8:	bl	151ec <__assert_fail@plt+0x3ca8>
   1e2dc:	nop	{0}
   1e2e0:	sub	sp, fp, #4
   1e2e4:	ldr	fp, [sp]
   1e2e8:	add	sp, sp, #4
   1e2ec:	pop	{pc}		; (ldr pc, [sp], #4)
   1e2f0:	str	fp, [sp, #-8]!
   1e2f4:	str	lr, [sp, #4]
   1e2f8:	add	fp, sp, #4
   1e2fc:	sub	sp, sp, #16
   1e300:	str	r0, [fp, #-16]
   1e304:	ldr	r3, [fp, #-16]
   1e308:	ldr	r3, [r3]
   1e30c:	str	r3, [fp, #-8]
   1e310:	ldr	r3, [fp, #-8]
   1e314:	cmp	r3, #0
   1e318:	movne	r3, #1
   1e31c:	moveq	r3, #0
   1e320:	uxtb	r3, r3
   1e324:	cmp	r3, #0
   1e328:	beq	1e368 <__assert_fail@plt+0xce24>
   1e32c:	movw	r3, #0
   1e330:	movt	r3, #0
   1e334:	cmp	r3, #0
   1e338:	bne	1e34c <__assert_fail@plt+0xce08>
   1e33c:	movw	r3, #0
   1e340:	movt	r3, #0
   1e344:	cmp	r3, #0
   1e348:	beq	1e360 <__assert_fail@plt+0xce1c>
   1e34c:	ldr	r3, [fp, #-8]
   1e350:	add	r3, r3, #136	; 0x88
   1e354:	mov	r0, r3
   1e358:	bl	111fc <pthread_mutex_destroy@plt>
   1e35c:	nop	{0}
   1e360:	ldr	r0, [fp, #-8]
   1e364:	bl	1e030 <__assert_fail@plt+0xcaec>
   1e368:	ldr	r3, [fp, #-16]
   1e36c:	mov	r2, #0
   1e370:	str	r2, [r3]
   1e374:	ldr	r3, [fp, #-16]
   1e378:	mov	r2, #0
   1e37c:	str	r2, [r3, #4]
   1e380:	ldr	r3, [fp, #-16]
   1e384:	ldr	r3, [r3, #16]
   1e388:	mov	r0, r3
   1e38c:	bl	151ec <__assert_fail@plt+0x3ca8>
   1e390:	ldr	r3, [fp, #-16]
   1e394:	mov	r2, #0
   1e398:	str	r2, [r3, #16]
   1e39c:	ldr	r3, [fp, #-16]
   1e3a0:	ldr	r3, [r3, #20]
   1e3a4:	mov	r0, r3
   1e3a8:	bl	151ec <__assert_fail@plt+0x3ca8>
   1e3ac:	ldr	r3, [fp, #-16]
   1e3b0:	mov	r2, #0
   1e3b4:	str	r2, [r3, #20]
   1e3b8:	nop	{0}
   1e3bc:	sub	sp, fp, #4
   1e3c0:	ldr	fp, [sp]
   1e3c4:	add	sp, sp, #4
   1e3c8:	pop	{pc}		; (ldr pc, [sp], #4)
   1e3cc:	str	fp, [sp, #-8]!
   1e3d0:	str	lr, [sp, #4]
   1e3d4:	add	fp, sp, #4
   1e3d8:	sub	sp, sp, #120	; 0x78
   1e3dc:	str	r0, [fp, #-104]	; 0xffffff98
   1e3e0:	str	r1, [fp, #-108]	; 0xffffff94
   1e3e4:	str	r2, [fp, #-112]	; 0xffffff90
   1e3e8:	str	r3, [fp, #-116]	; 0xffffff8c
   1e3ec:	mov	r3, #0
   1e3f0:	str	r3, [fp, #-12]
   1e3f4:	ldr	r2, [fp, #-104]	; 0xffffff98
   1e3f8:	ldrb	r3, [r2, #28]
   1e3fc:	bfc	r3, #3, #1
   1e400:	strb	r3, [r2, #28]
   1e404:	ldr	r3, [fp, #-104]	; 0xffffff98
   1e408:	ldr	r2, [fp, #-116]	; 0xffffff8c
   1e40c:	str	r2, [r3, #12]
   1e410:	ldr	r2, [fp, #-104]	; 0xffffff98
   1e414:	ldrb	r3, [r2, #28]
   1e418:	bfc	r3, #6, #1
   1e41c:	strb	r3, [r2, #28]
   1e420:	ldr	r3, [fp, #-104]	; 0xffffff98
   1e424:	ldrb	r3, [r3, #28]
   1e428:	ubfx	r3, r3, #6, #1
   1e42c:	uxtb	r1, r3
   1e430:	ldr	r2, [fp, #-104]	; 0xffffff98
   1e434:	ldrb	r3, [r2, #28]
   1e438:	bfi	r3, r1, #5, #1
   1e43c:	strb	r3, [r2, #28]
   1e440:	ldr	r3, [fp, #-104]	; 0xffffff98
   1e444:	mov	r2, #0
   1e448:	str	r2, [r3, #8]
   1e44c:	ldr	r3, [fp, #-104]	; 0xffffff98
   1e450:	mov	r2, #0
   1e454:	str	r2, [r3, #24]
   1e458:	ldr	r2, [fp, #-104]	; 0xffffff98
   1e45c:	ldrb	r3, [r2, #28]
   1e460:	bfc	r3, #0, #1
   1e464:	strb	r3, [r2, #28]
   1e468:	ldr	r2, [fp, #-104]	; 0xffffff98
   1e46c:	ldrb	r3, [r2, #28]
   1e470:	bfc	r3, #1, #2
   1e474:	strb	r3, [r2, #28]
   1e478:	ldr	r3, [fp, #-104]	; 0xffffff98
   1e47c:	ldr	r3, [r3]
   1e480:	str	r3, [fp, #-8]
   1e484:	ldr	r3, [fp, #-104]	; 0xffffff98
   1e488:	ldr	r3, [r3, #4]
   1e48c:	cmp	r3, #159	; 0x9f
   1e490:	movls	r3, #1
   1e494:	movhi	r3, #0
   1e498:	uxtb	r3, r3
   1e49c:	cmp	r3, #0
   1e4a0:	beq	1e4e8 <__assert_fail@plt+0xcfa4>
   1e4a4:	ldr	r3, [fp, #-104]	; 0xffffff98
   1e4a8:	ldr	r3, [r3]
   1e4ac:	mov	r1, #160	; 0xa0
   1e4b0:	mov	r0, r3
   1e4b4:	bl	33c30 <__assert_fail@plt+0x226ec>
   1e4b8:	str	r0, [fp, #-8]
   1e4bc:	ldr	r3, [fp, #-8]
   1e4c0:	cmp	r3, #0
   1e4c4:	bne	1e4d0 <__assert_fail@plt+0xcf8c>
   1e4c8:	mov	r3, #12
   1e4cc:	b	1e824 <__assert_fail@plt+0xd2e0>
   1e4d0:	ldr	r3, [fp, #-104]	; 0xffffff98
   1e4d4:	mov	r2, #160	; 0xa0
   1e4d8:	str	r2, [r3, #4]
   1e4dc:	ldr	r3, [fp, #-104]	; 0xffffff98
   1e4e0:	ldr	r2, [fp, #-8]
   1e4e4:	str	r2, [r3]
   1e4e8:	ldr	r3, [fp, #-104]	; 0xffffff98
   1e4ec:	mov	r2, #160	; 0xa0
   1e4f0:	str	r2, [r3, #8]
   1e4f4:	ldr	r1, [fp, #-112]	; 0xffffff90
   1e4f8:	ldr	r0, [fp, #-8]
   1e4fc:	bl	1e838 <__assert_fail@plt+0xd2f4>
   1e500:	mov	r3, r0
   1e504:	str	r3, [fp, #-12]
   1e508:	ldr	r3, [fp, #-12]
   1e50c:	cmp	r3, #0
   1e510:	moveq	r3, #1
   1e514:	movne	r3, #0
   1e518:	uxtb	r3, r3
   1e51c:	cmp	r3, #0
   1e520:	beq	1e5a4 <__assert_fail@plt+0xd060>
   1e524:	movw	r3, #0
   1e528:	movt	r3, #0
   1e52c:	cmp	r3, #0
   1e530:	bne	1e544 <__assert_fail@plt+0xd000>
   1e534:	movw	r3, #0
   1e538:	movt	r3, #0
   1e53c:	cmp	r3, #0
   1e540:	beq	1e54c <__assert_fail@plt+0xd008>
   1e544:	mov	r3, #1
   1e548:	b	1e550 <__assert_fail@plt+0xd00c>
   1e54c:	mov	r3, #0
   1e550:	cmp	r3, #0
   1e554:	beq	1e590 <__assert_fail@plt+0xd04c>
   1e558:	ldr	r3, [fp, #-8]
   1e55c:	add	r3, r3, #136	; 0x88
   1e560:	mov	r1, #0
   1e564:	mov	r0, r3
   1e568:	bl	11268 <pthread_mutex_init@plt>
   1e56c:	mov	r3, r0
   1e570:	cmp	r3, #0
   1e574:	movne	r3, #1
   1e578:	moveq	r3, #0
   1e57c:	uxtb	r3, r3
   1e580:	cmp	r3, #0
   1e584:	beq	1e590 <__assert_fail@plt+0xd04c>
   1e588:	mov	r3, #1
   1e58c:	b	1e594 <__assert_fail@plt+0xd050>
   1e590:	mov	r3, #0
   1e594:	cmp	r3, #0
   1e598:	beq	1e5a4 <__assert_fail@plt+0xd060>
   1e59c:	mov	r3, #12
   1e5a0:	str	r3, [fp, #-12]
   1e5a4:	ldr	r3, [fp, #-12]
   1e5a8:	cmp	r3, #0
   1e5ac:	movne	r3, #1
   1e5b0:	moveq	r3, #0
   1e5b4:	uxtb	r3, r3
   1e5b8:	cmp	r3, #0
   1e5bc:	beq	1e5e8 <__assert_fail@plt+0xd0a4>
   1e5c0:	ldr	r0, [fp, #-8]
   1e5c4:	bl	1e030 <__assert_fail@plt+0xcaec>
   1e5c8:	ldr	r3, [fp, #-104]	; 0xffffff98
   1e5cc:	mov	r2, #0
   1e5d0:	str	r2, [r3]
   1e5d4:	ldr	r3, [fp, #-104]	; 0xffffff98
   1e5d8:	mov	r2, #0
   1e5dc:	str	r2, [r3, #4]
   1e5e0:	ldr	r3, [fp, #-12]
   1e5e4:	b	1e824 <__assert_fail@plt+0xd2e0>
   1e5e8:	ldr	r1, [fp, #-112]	; 0xffffff90
   1e5ec:	ldr	r3, [fp, #-104]	; 0xffffff98
   1e5f0:	ldr	ip, [r3, #20]
   1e5f4:	ldr	r3, [fp, #-116]	; 0xffffff8c
   1e5f8:	and	r3, r3, #4194304	; 0x400000
   1e5fc:	cmp	r3, #0
   1e600:	movne	r3, #1
   1e604:	moveq	r3, #0
   1e608:	uxtb	r3, r3
   1e60c:	sub	r0, fp, #96	; 0x60
   1e610:	ldr	r2, [fp, #-8]
   1e614:	str	r2, [sp, #4]
   1e618:	str	r3, [sp]
   1e61c:	mov	r3, ip
   1e620:	mov	r2, r1
   1e624:	ldr	r1, [fp, #-108]	; 0xffffff94
   1e628:	bl	184a4 <__assert_fail@plt+0x6f60>
   1e62c:	mov	r3, r0
   1e630:	str	r3, [fp, #-12]
   1e634:	ldr	r3, [fp, #-12]
   1e638:	cmp	r3, #0
   1e63c:	movne	r3, #1
   1e640:	moveq	r3, #0
   1e644:	uxtb	r3, r3
   1e648:	cmp	r3, #0
   1e64c:	beq	1e6d4 <__assert_fail@plt+0xd190>
   1e650:	nop	{0}
   1e654:	b	1e664 <__assert_fail@plt+0xd120>
   1e658:	nop	{0}
   1e65c:	b	1e664 <__assert_fail@plt+0xd120>
   1e660:	nop	{0}
   1e664:	ldr	r0, [fp, #-104]	; 0xffffff98
   1e668:	bl	1ee68 <__assert_fail@plt+0xd924>
   1e66c:	sub	r3, fp, #96	; 0x60
   1e670:	mov	r0, r3
   1e674:	bl	1abb0 <__assert_fail@plt+0x966c>
   1e678:	movw	r3, #0
   1e67c:	movt	r3, #0
   1e680:	cmp	r3, #0
   1e684:	bne	1e698 <__assert_fail@plt+0xd154>
   1e688:	movw	r3, #0
   1e68c:	movt	r3, #0
   1e690:	cmp	r3, #0
   1e694:	beq	1e6ac <__assert_fail@plt+0xd168>
   1e698:	ldr	r3, [fp, #-8]
   1e69c:	add	r3, r3, #136	; 0x88
   1e6a0:	mov	r0, r3
   1e6a4:	bl	111fc <pthread_mutex_destroy@plt>
   1e6a8:	nop	{0}
   1e6ac:	ldr	r0, [fp, #-8]
   1e6b0:	bl	1e030 <__assert_fail@plt+0xcaec>
   1e6b4:	ldr	r3, [fp, #-104]	; 0xffffff98
   1e6b8:	mov	r2, #0
   1e6bc:	str	r2, [r3]
   1e6c0:	ldr	r3, [fp, #-104]	; 0xffffff98
   1e6c4:	mov	r2, #0
   1e6c8:	str	r2, [r3, #4]
   1e6cc:	ldr	r3, [fp, #-12]
   1e6d0:	b	1e824 <__assert_fail@plt+0xd2e0>
   1e6d4:	ldr	r3, [fp, #-104]	; 0xffffff98
   1e6d8:	mov	r2, #0
   1e6dc:	str	r2, [r3, #24]
   1e6e0:	sub	r3, fp, #12
   1e6e4:	sub	r0, fp, #96	; 0x60
   1e6e8:	ldr	r2, [fp, #-116]	; 0xffffff8c
   1e6ec:	ldr	r1, [fp, #-104]	; 0xffffff98
   1e6f0:	bl	22550 <__assert_fail@plt+0x1100c>
   1e6f4:	mov	r2, r0
   1e6f8:	ldr	r3, [fp, #-8]
   1e6fc:	str	r2, [r3, #52]	; 0x34
   1e700:	ldr	r3, [fp, #-8]
   1e704:	ldr	r3, [r3, #52]	; 0x34
   1e708:	cmp	r3, #0
   1e70c:	moveq	r3, #1
   1e710:	movne	r3, #0
   1e714:	uxtb	r3, r3
   1e718:	cmp	r3, #0
   1e71c:	bne	1e658 <__assert_fail@plt+0xd114>
   1e720:	ldr	r0, [fp, #-104]	; 0xffffff98
   1e724:	bl	1f624 <__assert_fail@plt+0xe0e0>
   1e728:	mov	r3, r0
   1e72c:	str	r3, [fp, #-12]
   1e730:	ldr	r3, [fp, #-12]
   1e734:	cmp	r3, #0
   1e738:	movne	r3, #1
   1e73c:	moveq	r3, #0
   1e740:	uxtb	r3, r3
   1e744:	cmp	r3, #0
   1e748:	bne	1e660 <__assert_fail@plt+0xd11c>
   1e74c:	ldr	r3, [fp, #-8]
   1e750:	ldrb	r3, [r3, #88]	; 0x58
   1e754:	and	r3, r3, #4
   1e758:	uxtb	r3, r3
   1e75c:	cmp	r3, #0
   1e760:	beq	1e78c <__assert_fail@plt+0xd248>
   1e764:	ldr	r3, [fp, #-116]	; 0xffffff8c
   1e768:	and	r3, r3, #4194304	; 0x400000
   1e76c:	cmp	r3, #0
   1e770:	bne	1e78c <__assert_fail@plt+0xd248>
   1e774:	ldr	r3, [fp, #-104]	; 0xffffff98
   1e778:	ldr	r3, [r3, #20]
   1e77c:	cmp	r3, #0
   1e780:	bne	1e78c <__assert_fail@plt+0xd248>
   1e784:	ldr	r0, [fp, #-8]
   1e788:	bl	1f304 <__assert_fail@plt+0xddc0>
   1e78c:	ldr	r0, [fp, #-8]
   1e790:	bl	1ef14 <__assert_fail@plt+0xd9d0>
   1e794:	mov	r3, r0
   1e798:	str	r3, [fp, #-12]
   1e79c:	ldr	r0, [fp, #-104]	; 0xffffff98
   1e7a0:	bl	1ee68 <__assert_fail@plt+0xd924>
   1e7a4:	sub	r3, fp, #96	; 0x60
   1e7a8:	mov	r0, r3
   1e7ac:	bl	1abb0 <__assert_fail@plt+0x966c>
   1e7b0:	ldr	r3, [fp, #-12]
   1e7b4:	cmp	r3, #0
   1e7b8:	movne	r3, #1
   1e7bc:	moveq	r3, #0
   1e7c0:	uxtb	r3, r3
   1e7c4:	cmp	r3, #0
   1e7c8:	beq	1e820 <__assert_fail@plt+0xd2dc>
   1e7cc:	movw	r3, #0
   1e7d0:	movt	r3, #0
   1e7d4:	cmp	r3, #0
   1e7d8:	bne	1e7ec <__assert_fail@plt+0xd2a8>
   1e7dc:	movw	r3, #0
   1e7e0:	movt	r3, #0
   1e7e4:	cmp	r3, #0
   1e7e8:	beq	1e800 <__assert_fail@plt+0xd2bc>
   1e7ec:	ldr	r3, [fp, #-8]
   1e7f0:	add	r3, r3, #136	; 0x88
   1e7f4:	mov	r0, r3
   1e7f8:	bl	111fc <pthread_mutex_destroy@plt>
   1e7fc:	nop	{0}
   1e800:	ldr	r0, [fp, #-8]
   1e804:	bl	1e030 <__assert_fail@plt+0xcaec>
   1e808:	ldr	r3, [fp, #-104]	; 0xffffff98
   1e80c:	mov	r2, #0
   1e810:	str	r2, [r3]
   1e814:	ldr	r3, [fp, #-104]	; 0xffffff98
   1e818:	mov	r2, #0
   1e81c:	str	r2, [r3, #4]
   1e820:	ldr	r3, [fp, #-12]
   1e824:	mov	r0, r3
   1e828:	sub	sp, fp, #4
   1e82c:	ldr	fp, [sp]
   1e830:	add	sp, sp, #4
   1e834:	pop	{pc}		; (ldr pc, [sp], #4)
   1e838:	str	fp, [sp, #-8]!
   1e83c:	str	lr, [sp, #4]
   1e840:	add	fp, sp, #4
   1e844:	sub	sp, sp, #40	; 0x28
   1e848:	str	r0, [fp, #-40]	; 0xffffffd8
   1e84c:	str	r1, [fp, #-44]	; 0xffffffd4
   1e850:	mov	r3, #4
   1e854:	str	r3, [fp, #-24]	; 0xffffffe8
   1e858:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e85c:	cmp	r3, #12
   1e860:	bls	1e870 <__assert_fail@plt+0xd32c>
   1e864:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e868:	cmp	r3, #8
   1e86c:	bls	1e8d4 <__assert_fail@plt+0xd390>
   1e870:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e874:	cmp	r3, #12
   1e878:	bls	1e8d4 <__assert_fail@plt+0xd390>
   1e87c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e880:	cmp	r3, #12
   1e884:	bls	1e8d4 <__assert_fail@plt+0xd390>
   1e888:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e88c:	cmp	r3, #12
   1e890:	bls	1e8a0 <__assert_fail@plt+0xd35c>
   1e894:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e898:	cmp	r3, #8
   1e89c:	bls	1e8c8 <__assert_fail@plt+0xd384>
   1e8a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e8a4:	cmp	r3, #12
   1e8a8:	bls	1e8c0 <__assert_fail@plt+0xd37c>
   1e8ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e8b0:	cmp	r3, #8
   1e8b4:	movcs	r3, r3
   1e8b8:	movcc	r3, #8
   1e8bc:	b	1e8d0 <__assert_fail@plt+0xd38c>
   1e8c0:	mov	r3, #12
   1e8c4:	b	1e8d0 <__assert_fail@plt+0xd38c>
   1e8c8:	mov	r3, #8
   1e8cc:	b	1e8d8 <__assert_fail@plt+0xd394>
   1e8d0:	b	1e8d8 <__assert_fail@plt+0xd394>
   1e8d4:	mov	r3, #12
   1e8d8:	str	r3, [fp, #-28]	; 0xffffffe4
   1e8dc:	mov	r2, #160	; 0xa0
   1e8e0:	mov	r1, #0
   1e8e4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1e8e8:	bl	11448 <memset@plt>
   1e8ec:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1e8f0:	mov	r2, #31
   1e8f4:	str	r2, [r3, #64]	; 0x40
   1e8f8:	mvn	r2, #0
   1e8fc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1e900:	udiv	r3, r2, r3
   1e904:	cmp	r3, #0
   1e908:	blt	1e920 <__assert_fail@plt+0xd3dc>
   1e90c:	mvn	r2, #0
   1e910:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1e914:	udiv	r3, r2, r3
   1e918:	lsr	r3, r3, #1
   1e91c:	b	1e924 <__assert_fail@plt+0xd3e0>
   1e920:	mvn	r3, #-1073741824	; 0xc0000000
   1e924:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1e928:	cmp	r3, r2
   1e92c:	movls	r3, #1
   1e930:	movhi	r3, #0
   1e934:	uxtb	r3, r3
   1e938:	cmp	r3, #0
   1e93c:	beq	1e948 <__assert_fail@plt+0xd404>
   1e940:	mov	r3, #12
   1e944:	b	1ec78 <__assert_fail@plt+0xd734>
   1e948:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1e94c:	add	r2, r3, #1
   1e950:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1e954:	str	r2, [r3, #4]
   1e958:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1e95c:	ldr	r3, [r3, #4]
   1e960:	lsl	r3, r3, #3
   1e964:	mov	r0, r3
   1e968:	bl	33ba0 <__assert_fail@plt+0x2265c>
   1e96c:	mov	r3, r0
   1e970:	mov	r2, r3
   1e974:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1e978:	str	r2, [r3]
   1e97c:	mov	r3, #1
   1e980:	str	r3, [fp, #-8]
   1e984:	ldr	r2, [fp, #-8]
   1e988:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1e98c:	cmp	r2, r3
   1e990:	bhi	1e9a4 <__assert_fail@plt+0xd460>
   1e994:	ldr	r3, [fp, #-8]
   1e998:	lsl	r3, r3, #1
   1e99c:	str	r3, [fp, #-8]
   1e9a0:	b	1e984 <__assert_fail@plt+0xd440>
   1e9a4:	nop	{0}
   1e9a8:	ldr	r1, [fp, #-8]
   1e9ac:	mov	r0, #12
   1e9b0:	bl	33ad0 <__assert_fail@plt+0x2258c>
   1e9b4:	mov	r3, r0
   1e9b8:	mov	r2, r3
   1e9bc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1e9c0:	str	r2, [r3, #32]
   1e9c4:	ldr	r3, [fp, #-8]
   1e9c8:	sub	r2, r3, #1
   1e9cc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1e9d0:	str	r2, [r3, #68]	; 0x44
   1e9d4:	bl	11334 <__ctype_get_mb_cur_max@plt>
   1e9d8:	mov	r3, r0
   1e9dc:	mov	r2, r3
   1e9e0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1e9e4:	str	r2, [r3, #92]	; 0x5c
   1e9e8:	mov	r0, #14
   1e9ec:	bl	114d8 <nl_langinfo@plt>
   1e9f0:	str	r0, [fp, #-32]	; 0xffffffe0
   1e9f4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1e9f8:	ldrb	r3, [r3]
   1e9fc:	cmp	r3, #85	; 0x55
   1ea00:	beq	1ea14 <__assert_fail@plt+0xd4d0>
   1ea04:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1ea08:	ldrb	r3, [r3]
   1ea0c:	cmp	r3, #117	; 0x75
   1ea10:	bne	1eab8 <__assert_fail@plt+0xd574>
   1ea14:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1ea18:	add	r3, r3, #1
   1ea1c:	ldrb	r3, [r3]
   1ea20:	cmp	r3, #84	; 0x54
   1ea24:	beq	1ea3c <__assert_fail@plt+0xd4f8>
   1ea28:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1ea2c:	add	r3, r3, #1
   1ea30:	ldrb	r3, [r3]
   1ea34:	cmp	r3, #116	; 0x74
   1ea38:	bne	1eab8 <__assert_fail@plt+0xd574>
   1ea3c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1ea40:	add	r3, r3, #2
   1ea44:	ldrb	r3, [r3]
   1ea48:	cmp	r3, #70	; 0x46
   1ea4c:	beq	1ea64 <__assert_fail@plt+0xd520>
   1ea50:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1ea54:	add	r3, r3, #2
   1ea58:	ldrb	r3, [r3]
   1ea5c:	cmp	r3, #102	; 0x66
   1ea60:	bne	1eab8 <__assert_fail@plt+0xd574>
   1ea64:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1ea68:	add	r3, r3, #3
   1ea6c:	ldrb	r3, [r3]
   1ea70:	cmp	r3, #45	; 0x2d
   1ea74:	bne	1ea80 <__assert_fail@plt+0xd53c>
   1ea78:	mov	r3, #4
   1ea7c:	b	1ea84 <__assert_fail@plt+0xd540>
   1ea80:	mov	r3, #3
   1ea84:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1ea88:	add	r3, r2, r3
   1ea8c:	movw	r1, #25672	; 0x6448
   1ea90:	movt	r1, #3
   1ea94:	mov	r0, r3
   1ea98:	bl	111d8 <strcmp@plt>
   1ea9c:	mov	r3, r0
   1eaa0:	cmp	r3, #0
   1eaa4:	bne	1eab8 <__assert_fail@plt+0xd574>
   1eaa8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1eaac:	ldrb	r3, [r2, #88]	; 0x58
   1eab0:	orr	r3, r3, #4
   1eab4:	strb	r3, [r2, #88]	; 0x58
   1eab8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1eabc:	ldrb	r3, [r2, #88]	; 0x58
   1eac0:	bfc	r3, #3, #1
   1eac4:	strb	r3, [r2, #88]	; 0x58
   1eac8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1eacc:	ldr	r3, [r3, #92]	; 0x5c
   1ead0:	cmp	r3, #1
   1ead4:	ble	1ec2c <__assert_fail@plt+0xd6e8>
   1ead8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1eadc:	ldrb	r3, [r3, #88]	; 0x58
   1eae0:	and	r3, r3, #4
   1eae4:	uxtb	r3, r3
   1eae8:	cmp	r3, #0
   1eaec:	beq	1eb04 <__assert_fail@plt+0xd5c0>
   1eaf0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1eaf4:	movw	r3, #25640	; 0x6428
   1eaf8:	movt	r3, #3
   1eafc:	str	r3, [r2, #60]	; 0x3c
   1eb00:	b	1ec2c <__assert_fail@plt+0xd6e8>
   1eb04:	mov	r1, #1
   1eb08:	mov	r0, #32
   1eb0c:	bl	33ad0 <__assert_fail@plt+0x2258c>
   1eb10:	mov	r3, r0
   1eb14:	mov	r2, r3
   1eb18:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1eb1c:	str	r2, [r3, #60]	; 0x3c
   1eb20:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1eb24:	ldr	r3, [r3, #60]	; 0x3c
   1eb28:	cmp	r3, #0
   1eb2c:	moveq	r3, #1
   1eb30:	movne	r3, #0
   1eb34:	uxtb	r3, r3
   1eb38:	cmp	r3, #0
   1eb3c:	beq	1eb48 <__assert_fail@plt+0xd604>
   1eb40:	mov	r3, #12
   1eb44:	b	1ec78 <__assert_fail@plt+0xd734>
   1eb48:	mov	r3, #0
   1eb4c:	str	r3, [fp, #-12]
   1eb50:	mov	r3, #0
   1eb54:	str	r3, [fp, #-20]	; 0xffffffec
   1eb58:	b	1ec20 <__assert_fail@plt+0xd6dc>
   1eb5c:	mov	r3, #0
   1eb60:	str	r3, [fp, #-16]
   1eb64:	b	1ec08 <__assert_fail@plt+0xd6c4>
   1eb68:	ldr	r0, [fp, #-20]	; 0xffffffec
   1eb6c:	bl	11454 <btowc@plt>
   1eb70:	str	r0, [fp, #-36]	; 0xffffffdc
   1eb74:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1eb78:	cmn	r3, #1
   1eb7c:	beq	1ebc0 <__assert_fail@plt+0xd67c>
   1eb80:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1eb84:	ldr	r2, [r3, #60]	; 0x3c
   1eb88:	ldr	r3, [fp, #-12]
   1eb8c:	lsl	r3, r3, #2
   1eb90:	add	r3, r2, r3
   1eb94:	ldr	r1, [r3]
   1eb98:	mov	r2, #1
   1eb9c:	ldr	r3, [fp, #-16]
   1eba0:	lsl	r2, r2, r3
   1eba4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1eba8:	ldr	r0, [r3, #60]	; 0x3c
   1ebac:	ldr	r3, [fp, #-12]
   1ebb0:	lsl	r3, r3, #2
   1ebb4:	add	r3, r0, r3
   1ebb8:	orr	r2, r1, r2
   1ebbc:	str	r2, [r3]
   1ebc0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ebc4:	bic	r3, r3, #127	; 0x7f
   1ebc8:	cmp	r3, #0
   1ebcc:	bne	1ebf0 <__assert_fail@plt+0xd6ac>
   1ebd0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ebd4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1ebd8:	cmp	r2, r3
   1ebdc:	beq	1ebf0 <__assert_fail@plt+0xd6ac>
   1ebe0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1ebe4:	ldrb	r3, [r2, #88]	; 0x58
   1ebe8:	orr	r3, r3, #8
   1ebec:	strb	r3, [r2, #88]	; 0x58
   1ebf0:	ldr	r3, [fp, #-16]
   1ebf4:	add	r3, r3, #1
   1ebf8:	str	r3, [fp, #-16]
   1ebfc:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ec00:	add	r3, r3, #1
   1ec04:	str	r3, [fp, #-20]	; 0xffffffec
   1ec08:	ldr	r3, [fp, #-16]
   1ec0c:	cmp	r3, #31
   1ec10:	ble	1eb68 <__assert_fail@plt+0xd624>
   1ec14:	ldr	r3, [fp, #-12]
   1ec18:	add	r3, r3, #1
   1ec1c:	str	r3, [fp, #-12]
   1ec20:	ldr	r3, [fp, #-12]
   1ec24:	cmp	r3, #7
   1ec28:	ble	1eb5c <__assert_fail@plt+0xd618>
   1ec2c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1ec30:	ldr	r3, [r3]
   1ec34:	cmp	r3, #0
   1ec38:	moveq	r3, #1
   1ec3c:	movne	r3, #0
   1ec40:	uxtb	r3, r3
   1ec44:	cmp	r3, #0
   1ec48:	bne	1ec6c <__assert_fail@plt+0xd728>
   1ec4c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1ec50:	ldr	r3, [r3, #32]
   1ec54:	cmp	r3, #0
   1ec58:	moveq	r3, #1
   1ec5c:	movne	r3, #0
   1ec60:	uxtb	r3, r3
   1ec64:	cmp	r3, #0
   1ec68:	beq	1ec74 <__assert_fail@plt+0xd730>
   1ec6c:	mov	r3, #12
   1ec70:	b	1ec78 <__assert_fail@plt+0xd734>
   1ec74:	mov	r3, #0
   1ec78:	mov	r0, r3
   1ec7c:	sub	sp, fp, #4
   1ec80:	ldr	fp, [sp]
   1ec84:	add	sp, sp, #4
   1ec88:	pop	{pc}		; (ldr pc, [sp], #4)
   1ec8c:	str	fp, [sp, #-8]!
   1ec90:	str	lr, [sp, #4]
   1ec94:	add	fp, sp, #4
   1ec98:	sub	sp, sp, #40	; 0x28
   1ec9c:	str	r0, [fp, #-40]	; 0xffffffd8
   1eca0:	mov	r3, #0
   1eca4:	str	r3, [fp, #-8]
   1eca8:	mov	r3, #0
   1ecac:	str	r3, [fp, #-16]
   1ecb0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1ecb4:	ldrb	r3, [r2, #88]	; 0x58
   1ecb8:	orr	r3, r3, #16
   1ecbc:	strb	r3, [r2, #88]	; 0x58
   1ecc0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1ecc4:	ldrb	r3, [r3, #88]	; 0x58
   1ecc8:	and	r3, r3, #8
   1eccc:	uxtb	r3, r3
   1ecd0:	cmp	r3, #0
   1ecd4:	moveq	r3, #1
   1ecd8:	movne	r3, #0
   1ecdc:	uxtb	r3, r3
   1ece0:	cmp	r3, #0
   1ece4:	beq	1eda4 <__assert_fail@plt+0xd860>
   1ece8:	mov	r3, #0
   1ecec:	str	r3, [fp, #-20]	; 0xffffffec
   1ecf0:	mov	r3, #0
   1ecf4:	movt	r3, #1023	; 0x3ff
   1ecf8:	str	r3, [fp, #-24]	; 0xffffffe8
   1ecfc:	mvn	r3, #2013265921	; 0x78000001
   1ed00:	str	r3, [fp, #-28]	; 0xffffffe4
   1ed04:	mvn	r3, #-134217727	; 0xf8000001
   1ed08:	str	r3, [fp, #-32]	; 0xffffffe0
   1ed0c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1ed10:	ldr	r2, [fp, #-20]	; 0xffffffec
   1ed14:	str	r2, [r3, #96]	; 0x60
   1ed18:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1ed1c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1ed20:	str	r2, [r3, #100]	; 0x64
   1ed24:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1ed28:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1ed2c:	str	r2, [r3, #104]	; 0x68
   1ed30:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1ed34:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1ed38:	str	r2, [r3, #108]	; 0x6c
   1ed3c:	mov	r3, #4
   1ed40:	str	r3, [fp, #-8]
   1ed44:	mov	r3, #128	; 0x80
   1ed48:	str	r3, [fp, #-16]
   1ed4c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1ed50:	ldrb	r3, [r3, #88]	; 0x58
   1ed54:	ubfx	r3, r3, #2, #1
   1ed58:	uxtb	r3, r3
   1ed5c:	cmp	r3, #0
   1ed60:	beq	1eda4 <__assert_fail@plt+0xd860>
   1ed64:	ldr	r3, [fp, #-8]
   1ed68:	add	r3, r3, #24
   1ed6c:	lsl	r3, r3, #2
   1ed70:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1ed74:	add	r0, r2, r3
   1ed78:	ldr	r3, [fp, #-16]
   1ed7c:	rsb	r3, r3, #256	; 0x100
   1ed80:	add	r2, r3, #7
   1ed84:	cmp	r3, #0
   1ed88:	movlt	r3, r2
   1ed8c:	movge	r3, r3
   1ed90:	asr	r3, r3, #3
   1ed94:	mov	r2, r3
   1ed98:	mov	r1, #0
   1ed9c:	bl	11448 <memset@plt>
   1eda0:	b	1ee58 <__assert_fail@plt+0xd914>
   1eda4:	nop	{0}
   1eda8:	b	1ee4c <__assert_fail@plt+0xd908>
   1edac:	mov	r3, #0
   1edb0:	str	r3, [fp, #-12]
   1edb4:	b	1ee34 <__assert_fail@plt+0xd8f0>
   1edb8:	bl	113d0 <__ctype_b_loc@plt>
   1edbc:	mov	r3, r0
   1edc0:	ldr	r2, [r3]
   1edc4:	ldr	r3, [fp, #-16]
   1edc8:	lsl	r3, r3, #1
   1edcc:	add	r3, r2, r3
   1edd0:	ldrh	r3, [r3]
   1edd4:	and	r3, r3, #8
   1edd8:	cmp	r3, #0
   1eddc:	bne	1edec <__assert_fail@plt+0xd8a8>
   1ede0:	ldr	r3, [fp, #-16]
   1ede4:	cmp	r3, #95	; 0x5f
   1ede8:	bne	1ee1c <__assert_fail@plt+0xd8d8>
   1edec:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1edf0:	ldr	r2, [fp, #-8]
   1edf4:	add	r2, r2, #24
   1edf8:	ldr	r2, [r3, r2, lsl #2]
   1edfc:	mov	r1, #1
   1ee00:	ldr	r3, [fp, #-12]
   1ee04:	lsl	r3, r1, r3
   1ee08:	orr	r1, r2, r3
   1ee0c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1ee10:	ldr	r2, [fp, #-8]
   1ee14:	add	r2, r2, #24
   1ee18:	str	r1, [r3, r2, lsl #2]
   1ee1c:	ldr	r3, [fp, #-12]
   1ee20:	add	r3, r3, #1
   1ee24:	str	r3, [fp, #-12]
   1ee28:	ldr	r3, [fp, #-16]
   1ee2c:	add	r3, r3, #1
   1ee30:	str	r3, [fp, #-16]
   1ee34:	ldr	r3, [fp, #-12]
   1ee38:	cmp	r3, #31
   1ee3c:	ble	1edb8 <__assert_fail@plt+0xd874>
   1ee40:	ldr	r3, [fp, #-8]
   1ee44:	add	r3, r3, #1
   1ee48:	str	r3, [fp, #-8]
   1ee4c:	ldr	r3, [fp, #-8]
   1ee50:	cmp	r3, #7
   1ee54:	ble	1edac <__assert_fail@plt+0xd868>
   1ee58:	sub	sp, fp, #4
   1ee5c:	ldr	fp, [sp]
   1ee60:	add	sp, sp, #4
   1ee64:	pop	{pc}		; (ldr pc, [sp], #4)
   1ee68:	str	fp, [sp, #-8]!
   1ee6c:	str	lr, [sp, #4]
   1ee70:	add	fp, sp, #4
   1ee74:	sub	sp, sp, #24
   1ee78:	str	r0, [fp, #-24]	; 0xffffffe8
   1ee7c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ee80:	ldr	r3, [r3]
   1ee84:	str	r3, [fp, #-12]
   1ee88:	ldr	r3, [fp, #-12]
   1ee8c:	ldr	r3, [r3, #56]	; 0x38
   1ee90:	str	r3, [fp, #-8]
   1ee94:	b	1eeb4 <__assert_fail@plt+0xd970>
   1ee98:	ldr	r3, [fp, #-8]
   1ee9c:	ldr	r3, [r3]
   1eea0:	str	r3, [fp, #-16]
   1eea4:	ldr	r0, [fp, #-8]
   1eea8:	bl	151ec <__assert_fail@plt+0x3ca8>
   1eeac:	ldr	r3, [fp, #-16]
   1eeb0:	str	r3, [fp, #-8]
   1eeb4:	ldr	r3, [fp, #-8]
   1eeb8:	cmp	r3, #0
   1eebc:	bne	1ee98 <__assert_fail@plt+0xd954>
   1eec0:	ldr	r3, [fp, #-12]
   1eec4:	mov	r2, #0
   1eec8:	str	r2, [r3, #56]	; 0x38
   1eecc:	ldr	r3, [fp, #-12]
   1eed0:	mov	r2, #31
   1eed4:	str	r2, [r3, #64]	; 0x40
   1eed8:	ldr	r3, [fp, #-12]
   1eedc:	mov	r2, #0
   1eee0:	str	r2, [r3, #52]	; 0x34
   1eee4:	ldr	r3, [fp, #-12]
   1eee8:	ldr	r3, [r3, #16]
   1eeec:	mov	r0, r3
   1eef0:	bl	151ec <__assert_fail@plt+0x3ca8>
   1eef4:	ldr	r3, [fp, #-12]
   1eef8:	mov	r2, #0
   1eefc:	str	r2, [r3, #16]
   1ef00:	nop	{0}
   1ef04:	sub	sp, fp, #4
   1ef08:	ldr	fp, [sp]
   1ef0c:	add	sp, sp, #4
   1ef10:	pop	{pc}		; (ldr pc, [sp], #4)
   1ef14:	str	fp, [sp, #-8]!
   1ef18:	str	lr, [sp, #4]
   1ef1c:	add	fp, sp, #4
   1ef20:	sub	sp, sp, #56	; 0x38
   1ef24:	str	r0, [fp, #-56]	; 0xffffffc8
   1ef28:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1ef2c:	ldr	r3, [r3, #52]	; 0x34
   1ef30:	ldr	r3, [r3, #12]
   1ef34:	ldr	r3, [r3, #28]
   1ef38:	str	r3, [fp, #-16]
   1ef3c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1ef40:	ldr	r2, [fp, #-16]
   1ef44:	str	r2, [r3, #72]	; 0x48
   1ef48:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1ef4c:	ldr	r1, [r3, #24]
   1ef50:	ldr	r2, [fp, #-16]
   1ef54:	mov	r3, r2
   1ef58:	lsl	r3, r3, #1
   1ef5c:	add	r3, r3, r2
   1ef60:	lsl	r3, r3, #2
   1ef64:	add	r2, r1, r3
   1ef68:	sub	r3, fp, #52	; 0x34
   1ef6c:	mov	r1, r2
   1ef70:	mov	r0, r3
   1ef74:	bl	1b068 <__assert_fail@plt+0x9b24>
   1ef78:	mov	r3, r0
   1ef7c:	str	r3, [fp, #-40]	; 0xffffffd8
   1ef80:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1ef84:	cmp	r3, #0
   1ef88:	movne	r3, #1
   1ef8c:	moveq	r3, #0
   1ef90:	uxtb	r3, r3
   1ef94:	cmp	r3, #0
   1ef98:	beq	1efa4 <__assert_fail@plt+0xda60>
   1ef9c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1efa0:	b	1f2f0 <__assert_fail@plt+0xddac>
   1efa4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1efa8:	ldr	r3, [r3, #76]	; 0x4c
   1efac:	cmp	r3, #0
   1efb0:	ble	1f170 <__assert_fail@plt+0xdc2c>
   1efb4:	mov	r3, #0
   1efb8:	str	r3, [fp, #-8]
   1efbc:	b	1f160 <__assert_fail@plt+0xdc1c>
   1efc0:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1efc4:	ldr	r3, [fp, #-8]
   1efc8:	lsl	r3, r3, #2
   1efcc:	add	r3, r2, r3
   1efd0:	ldr	r3, [r3]
   1efd4:	str	r3, [fp, #-20]	; 0xffffffec
   1efd8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1efdc:	ldr	r2, [r3]
   1efe0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1efe4:	lsl	r3, r3, #3
   1efe8:	add	r3, r2, r3
   1efec:	ldrb	r3, [r3, #4]
   1eff0:	str	r3, [fp, #-24]	; 0xffffffe8
   1eff4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1eff8:	cmp	r3, #4
   1effc:	bne	1f148 <__assert_fail@plt+0xdc04>
   1f000:	mov	r3, #0
   1f004:	str	r3, [fp, #-12]
   1f008:	b	1f078 <__assert_fail@plt+0xdb34>
   1f00c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1f010:	ldr	r2, [r3]
   1f014:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1f018:	ldr	r3, [fp, #-12]
   1f01c:	lsl	r3, r3, #2
   1f020:	add	r3, r1, r3
   1f024:	ldr	r3, [r3]
   1f028:	lsl	r3, r3, #3
   1f02c:	add	r3, r2, r3
   1f030:	str	r3, [fp, #-28]	; 0xffffffe4
   1f034:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1f038:	ldrb	r3, [r3, #4]
   1f03c:	cmp	r3, #9
   1f040:	bne	1f06c <__assert_fail@plt+0xdb28>
   1f044:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1f048:	ldr	r2, [r3]
   1f04c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1f050:	ldr	r1, [r3]
   1f054:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f058:	lsl	r3, r3, #3
   1f05c:	add	r3, r1, r3
   1f060:	ldr	r3, [r3]
   1f064:	cmp	r2, r3
   1f068:	beq	1f08c <__assert_fail@plt+0xdb48>
   1f06c:	ldr	r3, [fp, #-12]
   1f070:	add	r3, r3, #1
   1f074:	str	r3, [fp, #-12]
   1f078:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1f07c:	ldr	r2, [fp, #-12]
   1f080:	cmp	r2, r3
   1f084:	blt	1f00c <__assert_fail@plt+0xdac8>
   1f088:	b	1f090 <__assert_fail@plt+0xdb4c>
   1f08c:	nop	{0}
   1f090:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1f094:	ldr	r2, [fp, #-12]
   1f098:	cmp	r2, r3
   1f09c:	beq	1f150 <__assert_fail@plt+0xdc0c>
   1f0a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f0a4:	cmp	r3, #4
   1f0a8:	bne	1f154 <__assert_fail@plt+0xdc10>
   1f0ac:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1f0b0:	ldr	r1, [r3, #20]
   1f0b4:	ldr	r2, [fp, #-20]	; 0xffffffec
   1f0b8:	mov	r3, r2
   1f0bc:	lsl	r3, r3, #1
   1f0c0:	add	r3, r3, r2
   1f0c4:	lsl	r3, r3, #2
   1f0c8:	add	r3, r1, r3
   1f0cc:	ldr	r3, [r3, #8]
   1f0d0:	ldr	r3, [r3]
   1f0d4:	str	r3, [fp, #-32]	; 0xffffffe0
   1f0d8:	sub	r3, fp, #52	; 0x34
   1f0dc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1f0e0:	mov	r0, r3
   1f0e4:	bl	1c21c <__assert_fail@plt+0xacd8>
   1f0e8:	mov	r3, r0
   1f0ec:	cmp	r3, #0
   1f0f0:	bne	1f154 <__assert_fail@plt+0xdc10>
   1f0f4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1f0f8:	ldr	r1, [r3, #24]
   1f0fc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1f100:	mov	r3, r2
   1f104:	lsl	r3, r3, #1
   1f108:	add	r3, r3, r2
   1f10c:	lsl	r3, r3, #2
   1f110:	add	r2, r1, r3
   1f114:	sub	r3, fp, #52	; 0x34
   1f118:	mov	r1, r2
   1f11c:	mov	r0, r3
   1f120:	bl	1b994 <__assert_fail@plt+0xa450>
   1f124:	str	r0, [fp, #-36]	; 0xffffffdc
   1f128:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1f12c:	cmp	r3, #0
   1f130:	beq	1f13c <__assert_fail@plt+0xdbf8>
   1f134:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1f138:	b	1f2f0 <__assert_fail@plt+0xddac>
   1f13c:	mov	r3, #0
   1f140:	str	r3, [fp, #-8]
   1f144:	b	1f154 <__assert_fail@plt+0xdc10>
   1f148:	nop	{0}
   1f14c:	b	1f154 <__assert_fail@plt+0xdc10>
   1f150:	nop	{0}
   1f154:	ldr	r3, [fp, #-8]
   1f158:	add	r3, r3, #1
   1f15c:	str	r3, [fp, #-8]
   1f160:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1f164:	ldr	r2, [fp, #-8]
   1f168:	cmp	r2, r3
   1f16c:	blt	1efc0 <__assert_fail@plt+0xda7c>
   1f170:	sub	r2, fp, #52	; 0x34
   1f174:	sub	r0, fp, #40	; 0x28
   1f178:	mov	r3, #0
   1f17c:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1f180:	bl	1c9ac <__assert_fail@plt+0xb468>
   1f184:	mov	r2, r0
   1f188:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1f18c:	str	r2, [r3, #36]	; 0x24
   1f190:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1f194:	ldr	r3, [r3, #36]	; 0x24
   1f198:	cmp	r3, #0
   1f19c:	moveq	r3, #1
   1f1a0:	movne	r3, #0
   1f1a4:	uxtb	r3, r3
   1f1a8:	cmp	r3, #0
   1f1ac:	beq	1f1b8 <__assert_fail@plt+0xdc74>
   1f1b0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1f1b4:	b	1f2f0 <__assert_fail@plt+0xddac>
   1f1b8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1f1bc:	ldr	r3, [r3, #36]	; 0x24
   1f1c0:	ldrb	r3, [r3, #52]	; 0x34
   1f1c4:	bic	r3, r3, #127	; 0x7f
   1f1c8:	uxtb	r3, r3
   1f1cc:	cmp	r3, #0
   1f1d0:	beq	1f2b0 <__assert_fail@plt+0xdd6c>
   1f1d4:	sub	r2, fp, #52	; 0x34
   1f1d8:	sub	r0, fp, #40	; 0x28
   1f1dc:	mov	r3, #1
   1f1e0:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1f1e4:	bl	1c9ac <__assert_fail@plt+0xb468>
   1f1e8:	mov	r2, r0
   1f1ec:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1f1f0:	str	r2, [r3, #40]	; 0x28
   1f1f4:	sub	r2, fp, #52	; 0x34
   1f1f8:	sub	r0, fp, #40	; 0x28
   1f1fc:	mov	r3, #2
   1f200:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1f204:	bl	1c9ac <__assert_fail@plt+0xb468>
   1f208:	mov	r2, r0
   1f20c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1f210:	str	r2, [r3, #44]	; 0x2c
   1f214:	sub	r2, fp, #52	; 0x34
   1f218:	sub	r0, fp, #40	; 0x28
   1f21c:	mov	r3, #6
   1f220:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1f224:	bl	1c9ac <__assert_fail@plt+0xb468>
   1f228:	mov	r2, r0
   1f22c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1f230:	str	r2, [r3, #48]	; 0x30
   1f234:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1f238:	ldr	r3, [r3, #40]	; 0x28
   1f23c:	cmp	r3, #0
   1f240:	moveq	r3, #1
   1f244:	movne	r3, #0
   1f248:	uxtb	r3, r3
   1f24c:	cmp	r3, #0
   1f250:	bne	1f274 <__assert_fail@plt+0xdd30>
   1f254:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1f258:	ldr	r3, [r3, #44]	; 0x2c
   1f25c:	cmp	r3, #0
   1f260:	moveq	r3, #1
   1f264:	movne	r3, #0
   1f268:	uxtb	r3, r3
   1f26c:	cmp	r3, #0
   1f270:	beq	1f27c <__assert_fail@plt+0xdd38>
   1f274:	mov	r3, #1
   1f278:	b	1f280 <__assert_fail@plt+0xdd3c>
   1f27c:	mov	r3, #0
   1f280:	cmp	r3, #0
   1f284:	bne	1f2a8 <__assert_fail@plt+0xdd64>
   1f288:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1f28c:	ldr	r3, [r3, #48]	; 0x30
   1f290:	cmp	r3, #0
   1f294:	moveq	r3, #1
   1f298:	movne	r3, #0
   1f29c:	uxtb	r3, r3
   1f2a0:	cmp	r3, #0
   1f2a4:	beq	1f2e0 <__assert_fail@plt+0xdd9c>
   1f2a8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1f2ac:	b	1f2f0 <__assert_fail@plt+0xddac>
   1f2b0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1f2b4:	ldr	r2, [r3, #36]	; 0x24
   1f2b8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1f2bc:	str	r2, [r3, #48]	; 0x30
   1f2c0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1f2c4:	ldr	r2, [r3, #48]	; 0x30
   1f2c8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1f2cc:	str	r2, [r3, #44]	; 0x2c
   1f2d0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1f2d4:	ldr	r2, [r3, #44]	; 0x2c
   1f2d8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1f2dc:	str	r2, [r3, #40]	; 0x28
   1f2e0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1f2e4:	mov	r0, r3
   1f2e8:	bl	151ec <__assert_fail@plt+0x3ca8>
   1f2ec:	mov	r3, #0
   1f2f0:	mov	r0, r3
   1f2f4:	sub	sp, fp, #4
   1f2f8:	ldr	fp, [sp]
   1f2fc:	add	sp, sp, #4
   1f300:	pop	{pc}		; (ldr pc, [sp], #4)
   1f304:	str	fp, [sp, #-8]!
   1f308:	str	lr, [sp, #4]
   1f30c:	add	fp, sp, #4
   1f310:	sub	sp, sp, #24
   1f314:	str	r0, [fp, #-24]	; 0xffffffe8
   1f318:	mov	r3, #0
   1f31c:	strb	r3, [fp, #-13]
   1f320:	mov	r3, #0
   1f324:	strb	r3, [fp, #-14]
   1f328:	mov	r3, #0
   1f32c:	str	r3, [fp, #-8]
   1f330:	b	1f4a4 <__assert_fail@plt+0xdf60>
   1f334:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f338:	ldr	r2, [r3]
   1f33c:	ldr	r3, [fp, #-8]
   1f340:	lsl	r3, r3, #3
   1f344:	add	r3, r2, r3
   1f348:	ldrb	r3, [r3, #4]
   1f34c:	sub	r3, r3, #1
   1f350:	cmp	r3, #11
   1f354:	ldrls	pc, [pc, r3, lsl #2]
   1f358:	b	1f488 <__assert_fail@plt+0xdf44>
   1f35c:	andeq	pc, r1, ip, lsl #7
   1f360:	andeq	pc, r1, ip, lsl #9
   1f364:	andeq	pc, r1, r4, lsl r4	; <UNPREDICTABLE>
   1f368:	andeq	pc, r1, ip, lsl #9
   1f36c:	andeq	pc, r1, r8, lsl #8
   1f370:	andeq	pc, r1, r0, lsl #12
   1f374:	andeq	pc, r1, r8, lsl #9
   1f378:	andeq	pc, r1, ip, lsl #9
   1f37c:	andeq	pc, r1, ip, lsl #9
   1f380:	andeq	pc, r1, ip, lsl #9
   1f384:	andeq	pc, r1, ip, lsl #9
   1f388:			; <UNDEFINED> instruction: 0x0001f3bc
   1f38c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f390:	ldr	r2, [r3]
   1f394:	ldr	r3, [fp, #-8]
   1f398:	lsl	r3, r3, #3
   1f39c:	add	r3, r2, r3
   1f3a0:	ldrb	r3, [r3]
   1f3a4:	sxtb	r3, r3
   1f3a8:	cmp	r3, #0
   1f3ac:	bge	1f494 <__assert_fail@plt+0xdf50>
   1f3b0:	mov	r3, #1
   1f3b4:	strb	r3, [fp, #-13]
   1f3b8:	b	1f494 <__assert_fail@plt+0xdf50>
   1f3bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f3c0:	ldr	r2, [r3]
   1f3c4:	ldr	r3, [fp, #-8]
   1f3c8:	lsl	r3, r3, #3
   1f3cc:	add	r3, r2, r3
   1f3d0:	ldr	r3, [r3]
   1f3d4:	cmp	r3, #32
   1f3d8:	beq	1f400 <__assert_fail@plt+0xdebc>
   1f3dc:	cmp	r3, #32
   1f3e0:	bhi	1f3f0 <__assert_fail@plt+0xdeac>
   1f3e4:	cmp	r3, #16
   1f3e8:	beq	1f400 <__assert_fail@plt+0xdebc>
   1f3ec:	b	1f608 <__assert_fail@plt+0xe0c4>
   1f3f0:	cmp	r3, #64	; 0x40
   1f3f4:	beq	1f400 <__assert_fail@plt+0xdebc>
   1f3f8:	cmp	r3, #128	; 0x80
   1f3fc:	bne	1f608 <__assert_fail@plt+0xe0c4>
   1f400:	nop	{0}
   1f404:	b	1f498 <__assert_fail@plt+0xdf54>
   1f408:	mov	r3, #1
   1f40c:	strb	r3, [fp, #-14]
   1f410:	b	1f498 <__assert_fail@plt+0xdf54>
   1f414:	mov	r3, #0
   1f418:	str	r3, [fp, #-20]	; 0xffffffec
   1f41c:	mov	r3, #4
   1f420:	str	r3, [fp, #-12]
   1f424:	b	1f474 <__assert_fail@plt+0xdf30>
   1f428:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f42c:	ldr	r2, [r3]
   1f430:	ldr	r3, [fp, #-8]
   1f434:	lsl	r3, r3, #3
   1f438:	add	r3, r2, r3
   1f43c:	ldr	r2, [r3]
   1f440:	ldr	r3, [fp, #-12]
   1f444:	lsl	r3, r3, #2
   1f448:	add	r3, r2, r3
   1f44c:	ldr	r2, [r3]
   1f450:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f454:	lsr	r3, r2, r3
   1f458:	cmp	r3, #0
   1f45c:	bne	1f610 <__assert_fail@plt+0xe0cc>
   1f460:	mov	r3, #0
   1f464:	str	r3, [fp, #-20]	; 0xffffffec
   1f468:	ldr	r3, [fp, #-12]
   1f46c:	add	r3, r3, #1
   1f470:	str	r3, [fp, #-12]
   1f474:	ldr	r3, [fp, #-12]
   1f478:	cmp	r3, #7
   1f47c:	ble	1f428 <__assert_fail@plt+0xdee4>
   1f480:	nop	{0}
   1f484:	b	1f498 <__assert_fail@plt+0xdf54>
   1f488:	bl	1152c <abort@plt>
   1f48c:	nop	{0}
   1f490:	b	1f498 <__assert_fail@plt+0xdf54>
   1f494:	nop	{0}
   1f498:	ldr	r3, [fp, #-8]
   1f49c:	add	r3, r3, #1
   1f4a0:	str	r3, [fp, #-8]
   1f4a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f4a8:	ldr	r2, [r3, #8]
   1f4ac:	ldr	r3, [fp, #-8]
   1f4b0:	cmp	r2, r3
   1f4b4:	bhi	1f334 <__assert_fail@plt+0xddf0>
   1f4b8:	ldrb	r3, [fp, #-13]
   1f4bc:	cmp	r3, #0
   1f4c0:	bne	1f4d0 <__assert_fail@plt+0xdf8c>
   1f4c4:	ldrb	r3, [fp, #-14]
   1f4c8:	cmp	r3, #0
   1f4cc:	beq	1f5a0 <__assert_fail@plt+0xe05c>
   1f4d0:	mov	r3, #0
   1f4d4:	str	r3, [fp, #-8]
   1f4d8:	b	1f58c <__assert_fail@plt+0xe048>
   1f4dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f4e0:	ldr	r2, [r3]
   1f4e4:	ldr	r3, [fp, #-8]
   1f4e8:	lsl	r3, r3, #3
   1f4ec:	add	r3, r2, r3
   1f4f0:	ldrb	r3, [r3, #4]
   1f4f4:	cmp	r3, #1
   1f4f8:	bne	1f544 <__assert_fail@plt+0xe000>
   1f4fc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f500:	ldr	r2, [r3]
   1f504:	ldr	r3, [fp, #-8]
   1f508:	lsl	r3, r3, #3
   1f50c:	add	r3, r2, r3
   1f510:	ldrb	r3, [r3]
   1f514:	sxtb	r3, r3
   1f518:	cmp	r3, #0
   1f51c:	bge	1f544 <__assert_fail@plt+0xe000>
   1f520:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f524:	ldr	r2, [r3]
   1f528:	ldr	r3, [fp, #-8]
   1f52c:	lsl	r3, r3, #3
   1f530:	add	r2, r2, r3
   1f534:	ldrb	r3, [r2, #6]
   1f538:	bfc	r3, #5, #1
   1f53c:	strb	r3, [r2, #6]
   1f540:	b	1f580 <__assert_fail@plt+0xe03c>
   1f544:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f548:	ldr	r2, [r3]
   1f54c:	ldr	r3, [fp, #-8]
   1f550:	lsl	r3, r3, #3
   1f554:	add	r3, r2, r3
   1f558:	ldrb	r3, [r3, #4]
   1f55c:	cmp	r3, #5
   1f560:	bne	1f580 <__assert_fail@plt+0xe03c>
   1f564:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f568:	ldr	r2, [r3]
   1f56c:	ldr	r3, [fp, #-8]
   1f570:	lsl	r3, r3, #3
   1f574:	add	r3, r2, r3
   1f578:	mov	r2, #7
   1f57c:	strb	r2, [r3, #4]
   1f580:	ldr	r3, [fp, #-8]
   1f584:	add	r3, r3, #1
   1f588:	str	r3, [fp, #-8]
   1f58c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f590:	ldr	r2, [r3, #8]
   1f594:	ldr	r3, [fp, #-8]
   1f598:	cmp	r2, r3
   1f59c:	bhi	1f4dc <__assert_fail@plt+0xdf98>
   1f5a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f5a4:	mov	r2, #1
   1f5a8:	str	r2, [r3, #92]	; 0x5c
   1f5ac:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1f5b0:	ldrb	r3, [r2, #88]	; 0x58
   1f5b4:	bfc	r3, #2, #1
   1f5b8:	strb	r3, [r2, #88]	; 0x58
   1f5bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f5c0:	ldr	r3, [r3, #76]	; 0x4c
   1f5c4:	cmp	r3, #0
   1f5c8:	bgt	1f5d8 <__assert_fail@plt+0xe094>
   1f5cc:	ldrb	r3, [fp, #-14]
   1f5d0:	cmp	r3, #0
   1f5d4:	beq	1f5e0 <__assert_fail@plt+0xe09c>
   1f5d8:	mov	r3, #1
   1f5dc:	b	1f5e4 <__assert_fail@plt+0xe0a0>
   1f5e0:	mov	r3, #0
   1f5e4:	and	r3, r3, #1
   1f5e8:	uxtb	r1, r3
   1f5ec:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1f5f0:	ldrb	r3, [r2, #88]	; 0x58
   1f5f4:	bfi	r3, r1, #1, #1
   1f5f8:	strb	r3, [r2, #88]	; 0x58
   1f5fc:	b	1f614 <__assert_fail@plt+0xe0d0>
   1f600:	nop	{0}
   1f604:	b	1f614 <__assert_fail@plt+0xe0d0>
   1f608:	nop	{0}
   1f60c:	b	1f614 <__assert_fail@plt+0xe0d0>
   1f610:	nop	{0}
   1f614:	sub	sp, fp, #4
   1f618:	ldr	fp, [sp]
   1f61c:	add	sp, sp, #4
   1f620:	pop	{pc}		; (ldr pc, [sp], #4)
   1f624:	str	fp, [sp, #-8]!
   1f628:	str	lr, [sp, #4]
   1f62c:	add	fp, sp, #4
   1f630:	sub	sp, sp, #24
   1f634:	str	r0, [fp, #-24]	; 0xffffffe8
   1f638:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f63c:	ldr	r3, [r3]
   1f640:	str	r3, [fp, #-16]
   1f644:	ldr	r3, [fp, #-16]
   1f648:	ldr	r3, [r3, #4]
   1f64c:	lsl	r3, r3, #2
   1f650:	mov	r0, r3
   1f654:	bl	33ba0 <__assert_fail@plt+0x2265c>
   1f658:	mov	r3, r0
   1f65c:	mov	r2, r3
   1f660:	ldr	r3, [fp, #-16]
   1f664:	str	r2, [r3, #12]
   1f668:	ldr	r3, [fp, #-16]
   1f66c:	ldr	r3, [r3, #4]
   1f670:	lsl	r3, r3, #2
   1f674:	mov	r0, r3
   1f678:	bl	33ba0 <__assert_fail@plt+0x2265c>
   1f67c:	mov	r3, r0
   1f680:	mov	r2, r3
   1f684:	ldr	r3, [fp, #-16]
   1f688:	str	r2, [r3, #16]
   1f68c:	ldr	r3, [fp, #-16]
   1f690:	ldr	r2, [r3, #4]
   1f694:	mov	r3, r2
   1f698:	lsl	r3, r3, #1
   1f69c:	add	r3, r3, r2
   1f6a0:	lsl	r3, r3, #2
   1f6a4:	mov	r0, r3
   1f6a8:	bl	33ba0 <__assert_fail@plt+0x2265c>
   1f6ac:	mov	r3, r0
   1f6b0:	mov	r2, r3
   1f6b4:	ldr	r3, [fp, #-16]
   1f6b8:	str	r2, [r3, #20]
   1f6bc:	ldr	r3, [fp, #-16]
   1f6c0:	ldr	r2, [r3, #4]
   1f6c4:	mov	r3, r2
   1f6c8:	lsl	r3, r3, #1
   1f6cc:	add	r3, r3, r2
   1f6d0:	lsl	r3, r3, #2
   1f6d4:	mov	r0, r3
   1f6d8:	bl	33ba0 <__assert_fail@plt+0x2265c>
   1f6dc:	mov	r3, r0
   1f6e0:	mov	r2, r3
   1f6e4:	ldr	r3, [fp, #-16]
   1f6e8:	str	r2, [r3, #24]
   1f6ec:	ldr	r3, [fp, #-16]
   1f6f0:	ldr	r3, [r3, #12]
   1f6f4:	cmp	r3, #0
   1f6f8:	moveq	r3, #1
   1f6fc:	movne	r3, #0
   1f700:	uxtb	r3, r3
   1f704:	cmp	r3, #0
   1f708:	bne	1f72c <__assert_fail@plt+0xe1e8>
   1f70c:	ldr	r3, [fp, #-16]
   1f710:	ldr	r3, [r3, #16]
   1f714:	cmp	r3, #0
   1f718:	moveq	r3, #1
   1f71c:	movne	r3, #0
   1f720:	uxtb	r3, r3
   1f724:	cmp	r3, #0
   1f728:	beq	1f734 <__assert_fail@plt+0xe1f0>
   1f72c:	mov	r3, #1
   1f730:	b	1f738 <__assert_fail@plt+0xe1f4>
   1f734:	mov	r3, #0
   1f738:	cmp	r3, #0
   1f73c:	bne	1f760 <__assert_fail@plt+0xe21c>
   1f740:	ldr	r3, [fp, #-16]
   1f744:	ldr	r3, [r3, #20]
   1f748:	cmp	r3, #0
   1f74c:	moveq	r3, #1
   1f750:	movne	r3, #0
   1f754:	uxtb	r3, r3
   1f758:	cmp	r3, #0
   1f75c:	beq	1f768 <__assert_fail@plt+0xe224>
   1f760:	mov	r3, #1
   1f764:	b	1f76c <__assert_fail@plt+0xe228>
   1f768:	mov	r3, #0
   1f76c:	cmp	r3, #0
   1f770:	bne	1f794 <__assert_fail@plt+0xe250>
   1f774:	ldr	r3, [fp, #-16]
   1f778:	ldr	r3, [r3, #24]
   1f77c:	cmp	r3, #0
   1f780:	moveq	r3, #1
   1f784:	movne	r3, #0
   1f788:	uxtb	r3, r3
   1f78c:	cmp	r3, #0
   1f790:	beq	1f79c <__assert_fail@plt+0xe258>
   1f794:	mov	r3, #12
   1f798:	b	1fa8c <__assert_fail@plt+0xe548>
   1f79c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f7a0:	ldr	r3, [r3, #24]
   1f7a4:	lsl	r3, r3, #2
   1f7a8:	mov	r0, r3
   1f7ac:	bl	33ba0 <__assert_fail@plt+0x2265c>
   1f7b0:	mov	r3, r0
   1f7b4:	mov	r2, r3
   1f7b8:	ldr	r3, [fp, #-16]
   1f7bc:	str	r2, [r3, #132]	; 0x84
   1f7c0:	ldr	r3, [fp, #-16]
   1f7c4:	ldr	r3, [r3, #132]	; 0x84
   1f7c8:	cmp	r3, #0
   1f7cc:	beq	1f8bc <__assert_fail@plt+0xe378>
   1f7d0:	mov	r3, #0
   1f7d4:	str	r3, [fp, #-12]
   1f7d8:	b	1f804 <__assert_fail@plt+0xe2c0>
   1f7dc:	ldr	r3, [fp, #-16]
   1f7e0:	ldr	r2, [r3, #132]	; 0x84
   1f7e4:	ldr	r3, [fp, #-12]
   1f7e8:	lsl	r3, r3, #2
   1f7ec:	add	r3, r2, r3
   1f7f0:	ldr	r2, [fp, #-12]
   1f7f4:	str	r2, [r3]
   1f7f8:	ldr	r3, [fp, #-12]
   1f7fc:	add	r3, r3, #1
   1f800:	str	r3, [fp, #-12]
   1f804:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f808:	ldr	r2, [r3, #24]
   1f80c:	ldr	r3, [fp, #-12]
   1f810:	cmp	r2, r3
   1f814:	bhi	1f7dc <__assert_fail@plt+0xe298>
   1f818:	ldr	r3, [fp, #-16]
   1f81c:	ldr	r3, [r3, #52]	; 0x34
   1f820:	ldr	r2, [fp, #-16]
   1f824:	movw	r1, #64696	; 0xfcb8
   1f828:	movt	r1, #1
   1f82c:	mov	r0, r3
   1f830:	bl	1fbc0 <__assert_fail@plt+0xe67c>
   1f834:	mov	r3, #0
   1f838:	str	r3, [fp, #-12]
   1f83c:	b	1f870 <__assert_fail@plt+0xe32c>
   1f840:	ldr	r3, [fp, #-16]
   1f844:	ldr	r2, [r3, #132]	; 0x84
   1f848:	ldr	r3, [fp, #-12]
   1f84c:	lsl	r3, r3, #2
   1f850:	add	r3, r2, r3
   1f854:	ldr	r3, [r3]
   1f858:	ldr	r2, [fp, #-12]
   1f85c:	cmp	r2, r3
   1f860:	bne	1f888 <__assert_fail@plt+0xe344>
   1f864:	ldr	r3, [fp, #-12]
   1f868:	add	r3, r3, #1
   1f86c:	str	r3, [fp, #-12]
   1f870:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f874:	ldr	r2, [r3, #24]
   1f878:	ldr	r3, [fp, #-12]
   1f87c:	cmp	r2, r3
   1f880:	bhi	1f840 <__assert_fail@plt+0xe2fc>
   1f884:	b	1f88c <__assert_fail@plt+0xe348>
   1f888:	nop	{0}
   1f88c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f890:	ldr	r2, [r3, #24]
   1f894:	ldr	r3, [fp, #-12]
   1f898:	cmp	r2, r3
   1f89c:	bne	1f8bc <__assert_fail@plt+0xe378>
   1f8a0:	ldr	r3, [fp, #-16]
   1f8a4:	ldr	r3, [r3, #132]	; 0x84
   1f8a8:	mov	r0, r3
   1f8ac:	bl	151ec <__assert_fail@plt+0x3ca8>
   1f8b0:	ldr	r3, [fp, #-16]
   1f8b4:	mov	r2, #0
   1f8b8:	str	r2, [r3, #132]	; 0x84
   1f8bc:	ldr	r3, [fp, #-16]
   1f8c0:	ldr	r3, [r3, #52]	; 0x34
   1f8c4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1f8c8:	movw	r1, #65080	; 0xfe38
   1f8cc:	movt	r1, #1
   1f8d0:	mov	r0, r3
   1f8d4:	bl	1faa0 <__assert_fail@plt+0xe55c>
   1f8d8:	str	r0, [fp, #-8]
   1f8dc:	ldr	r3, [fp, #-8]
   1f8e0:	cmp	r3, #0
   1f8e4:	movne	r3, #1
   1f8e8:	moveq	r3, #0
   1f8ec:	uxtb	r3, r3
   1f8f0:	cmp	r3, #0
   1f8f4:	beq	1f900 <__assert_fail@plt+0xe3bc>
   1f8f8:	ldr	r3, [fp, #-8]
   1f8fc:	b	1fa8c <__assert_fail@plt+0xe548>
   1f900:	ldr	r3, [fp, #-16]
   1f904:	ldr	r3, [r3, #52]	; 0x34
   1f908:	ldr	r2, [fp, #-16]
   1f90c:	movw	r1, #380	; 0x17c
   1f910:	movt	r1, #2
   1f914:	mov	r0, r3
   1f918:	bl	1faa0 <__assert_fail@plt+0xe55c>
   1f91c:	str	r0, [fp, #-8]
   1f920:	ldr	r3, [fp, #-8]
   1f924:	cmp	r3, #0
   1f928:	movne	r3, #1
   1f92c:	moveq	r3, #0
   1f930:	uxtb	r3, r3
   1f934:	cmp	r3, #0
   1f938:	beq	1f944 <__assert_fail@plt+0xe400>
   1f93c:	ldr	r3, [fp, #-8]
   1f940:	b	1fa8c <__assert_fail@plt+0xe548>
   1f944:	ldr	r3, [fp, #-16]
   1f948:	ldr	r3, [r3, #52]	; 0x34
   1f94c:	ldr	r2, [fp, #-16]
   1f950:	movw	r1, #652	; 0x28c
   1f954:	movt	r1, #2
   1f958:	mov	r0, r3
   1f95c:	bl	1fbc0 <__assert_fail@plt+0xe67c>
   1f960:	ldr	r3, [fp, #-16]
   1f964:	ldr	r3, [r3, #52]	; 0x34
   1f968:	ldr	r2, [fp, #-16]
   1f96c:	movw	r1, #864	; 0x360
   1f970:	movt	r1, #2
   1f974:	mov	r0, r3
   1f978:	bl	1fbc0 <__assert_fail@plt+0xe67c>
   1f97c:	str	r0, [fp, #-8]
   1f980:	ldr	r3, [fp, #-8]
   1f984:	cmp	r3, #0
   1f988:	movne	r3, #1
   1f98c:	moveq	r3, #0
   1f990:	uxtb	r3, r3
   1f994:	cmp	r3, #0
   1f998:	beq	1f9a4 <__assert_fail@plt+0xe460>
   1f99c:	ldr	r3, [fp, #-8]
   1f9a0:	b	1fa8c <__assert_fail@plt+0xe548>
   1f9a4:	ldr	r0, [fp, #-16]
   1f9a8:	bl	20f50 <__assert_fail@plt+0xfa0c>
   1f9ac:	str	r0, [fp, #-8]
   1f9b0:	ldr	r3, [fp, #-8]
   1f9b4:	cmp	r3, #0
   1f9b8:	movne	r3, #1
   1f9bc:	moveq	r3, #0
   1f9c0:	uxtb	r3, r3
   1f9c4:	cmp	r3, #0
   1f9c8:	beq	1f9d4 <__assert_fail@plt+0xe490>
   1f9cc:	ldr	r3, [fp, #-8]
   1f9d0:	b	1fa8c <__assert_fail@plt+0xe548>
   1f9d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f9d8:	ldrb	r3, [r3, #28]
   1f9dc:	and	r3, r3, #16
   1f9e0:	uxtb	r3, r3
   1f9e4:	cmp	r3, #0
   1f9e8:	bne	1fa14 <__assert_fail@plt+0xe4d0>
   1f9ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f9f0:	ldr	r3, [r3, #24]
   1f9f4:	cmp	r3, #0
   1f9f8:	beq	1fa14 <__assert_fail@plt+0xe4d0>
   1f9fc:	ldr	r3, [fp, #-16]
   1fa00:	ldrb	r3, [r3, #88]	; 0x58
   1fa04:	and	r3, r3, #1
   1fa08:	uxtb	r3, r3
   1fa0c:	cmp	r3, #0
   1fa10:	bne	1fa24 <__assert_fail@plt+0xe4e0>
   1fa14:	ldr	r3, [fp, #-16]
   1fa18:	ldr	r3, [r3, #76]	; 0x4c
   1fa1c:	cmp	r3, #0
   1fa20:	beq	1fa88 <__assert_fail@plt+0xe544>
   1fa24:	ldr	r3, [fp, #-16]
   1fa28:	ldr	r2, [r3, #8]
   1fa2c:	mov	r3, r2
   1fa30:	lsl	r3, r3, #1
   1fa34:	add	r3, r3, r2
   1fa38:	lsl	r3, r3, #2
   1fa3c:	mov	r0, r3
   1fa40:	bl	33ba0 <__assert_fail@plt+0x2265c>
   1fa44:	mov	r3, r0
   1fa48:	mov	r2, r3
   1fa4c:	ldr	r3, [fp, #-16]
   1fa50:	str	r2, [r3, #28]
   1fa54:	ldr	r3, [fp, #-16]
   1fa58:	ldr	r3, [r3, #28]
   1fa5c:	cmp	r3, #0
   1fa60:	moveq	r3, #1
   1fa64:	movne	r3, #0
   1fa68:	uxtb	r3, r3
   1fa6c:	cmp	r3, #0
   1fa70:	beq	1fa7c <__assert_fail@plt+0xe538>
   1fa74:	mov	r3, #12
   1fa78:	b	1fa8c <__assert_fail@plt+0xe548>
   1fa7c:	ldr	r0, [fp, #-16]
   1fa80:	bl	20dc8 <__assert_fail@plt+0xf884>
   1fa84:	str	r0, [fp, #-8]
   1fa88:	ldr	r3, [fp, #-8]
   1fa8c:	mov	r0, r3
   1fa90:	sub	sp, fp, #4
   1fa94:	ldr	fp, [sp]
   1fa98:	add	sp, sp, #4
   1fa9c:	pop	{pc}		; (ldr pc, [sp], #4)
   1faa0:	str	fp, [sp, #-8]!
   1faa4:	str	lr, [sp, #4]
   1faa8:	add	fp, sp, #4
   1faac:	sub	sp, sp, #32
   1fab0:	str	r0, [fp, #-24]	; 0xffffffe8
   1fab4:	str	r1, [fp, #-28]	; 0xffffffe4
   1fab8:	str	r2, [fp, #-32]	; 0xffffffe0
   1fabc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1fac0:	str	r3, [fp, #-8]
   1fac4:	b	1faf4 <__assert_fail@plt+0xe5b0>
   1fac8:	ldr	r3, [fp, #-8]
   1facc:	ldr	r3, [r3, #4]
   1fad0:	cmp	r3, #0
   1fad4:	beq	1fae8 <__assert_fail@plt+0xe5a4>
   1fad8:	ldr	r3, [fp, #-8]
   1fadc:	ldr	r3, [r3, #4]
   1fae0:	str	r3, [fp, #-8]
   1fae4:	b	1faf4 <__assert_fail@plt+0xe5b0>
   1fae8:	ldr	r3, [fp, #-8]
   1faec:	ldr	r3, [r3, #8]
   1faf0:	str	r3, [fp, #-8]
   1faf4:	ldr	r3, [fp, #-8]
   1faf8:	ldr	r3, [r3, #4]
   1fafc:	cmp	r3, #0
   1fb00:	bne	1fac8 <__assert_fail@plt+0xe584>
   1fb04:	ldr	r3, [fp, #-8]
   1fb08:	ldr	r3, [r3, #8]
   1fb0c:	cmp	r3, #0
   1fb10:	bne	1fac8 <__assert_fail@plt+0xe584>
   1fb14:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1fb18:	ldr	r1, [fp, #-8]
   1fb1c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1fb20:	blx	r3
   1fb24:	str	r0, [fp, #-12]
   1fb28:	ldr	r3, [fp, #-12]
   1fb2c:	cmp	r3, #0
   1fb30:	movne	r3, #1
   1fb34:	moveq	r3, #0
   1fb38:	uxtb	r3, r3
   1fb3c:	cmp	r3, #0
   1fb40:	beq	1fb4c <__assert_fail@plt+0xe608>
   1fb44:	ldr	r3, [fp, #-12]
   1fb48:	b	1fbac <__assert_fail@plt+0xe668>
   1fb4c:	ldr	r3, [fp, #-8]
   1fb50:	ldr	r3, [r3]
   1fb54:	cmp	r3, #0
   1fb58:	bne	1fb64 <__assert_fail@plt+0xe620>
   1fb5c:	mov	r3, #0
   1fb60:	b	1fbac <__assert_fail@plt+0xe668>
   1fb64:	ldr	r3, [fp, #-8]
   1fb68:	str	r3, [fp, #-16]
   1fb6c:	ldr	r3, [fp, #-8]
   1fb70:	ldr	r3, [r3]
   1fb74:	str	r3, [fp, #-8]
   1fb78:	ldr	r3, [fp, #-8]
   1fb7c:	ldr	r3, [r3, #8]
   1fb80:	ldr	r2, [fp, #-16]
   1fb84:	cmp	r2, r3
   1fb88:	beq	1fb14 <__assert_fail@plt+0xe5d0>
   1fb8c:	ldr	r3, [fp, #-8]
   1fb90:	ldr	r3, [r3, #8]
   1fb94:	cmp	r3, #0
   1fb98:	beq	1fb14 <__assert_fail@plt+0xe5d0>
   1fb9c:	ldr	r3, [fp, #-8]
   1fba0:	ldr	r3, [r3, #8]
   1fba4:	str	r3, [fp, #-8]
   1fba8:	b	1faf4 <__assert_fail@plt+0xe5b0>
   1fbac:	mov	r0, r3
   1fbb0:	sub	sp, fp, #4
   1fbb4:	ldr	fp, [sp]
   1fbb8:	add	sp, sp, #4
   1fbbc:	pop	{pc}		; (ldr pc, [sp], #4)
   1fbc0:	str	fp, [sp, #-8]!
   1fbc4:	str	lr, [sp, #4]
   1fbc8:	add	fp, sp, #4
   1fbcc:	sub	sp, sp, #32
   1fbd0:	str	r0, [fp, #-24]	; 0xffffffe8
   1fbd4:	str	r1, [fp, #-28]	; 0xffffffe4
   1fbd8:	str	r2, [fp, #-32]	; 0xffffffe0
   1fbdc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1fbe0:	str	r3, [fp, #-8]
   1fbe4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1fbe8:	ldr	r1, [fp, #-8]
   1fbec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1fbf0:	blx	r3
   1fbf4:	str	r0, [fp, #-16]
   1fbf8:	ldr	r3, [fp, #-16]
   1fbfc:	cmp	r3, #0
   1fc00:	movne	r3, #1
   1fc04:	moveq	r3, #0
   1fc08:	uxtb	r3, r3
   1fc0c:	cmp	r3, #0
   1fc10:	beq	1fc1c <__assert_fail@plt+0xe6d8>
   1fc14:	ldr	r3, [fp, #-16]
   1fc18:	b	1fca4 <__assert_fail@plt+0xe760>
   1fc1c:	ldr	r3, [fp, #-8]
   1fc20:	ldr	r3, [r3, #4]
   1fc24:	cmp	r3, #0
   1fc28:	beq	1fc3c <__assert_fail@plt+0xe6f8>
   1fc2c:	ldr	r3, [fp, #-8]
   1fc30:	ldr	r3, [r3, #4]
   1fc34:	str	r3, [fp, #-8]
   1fc38:	b	1fbe4 <__assert_fail@plt+0xe6a0>
   1fc3c:	mov	r3, #0
   1fc40:	str	r3, [fp, #-12]
   1fc44:	b	1fc70 <__assert_fail@plt+0xe72c>
   1fc48:	ldr	r3, [fp, #-8]
   1fc4c:	str	r3, [fp, #-12]
   1fc50:	ldr	r3, [fp, #-8]
   1fc54:	ldr	r3, [r3]
   1fc58:	str	r3, [fp, #-8]
   1fc5c:	ldr	r3, [fp, #-8]
   1fc60:	cmp	r3, #0
   1fc64:	bne	1fc70 <__assert_fail@plt+0xe72c>
   1fc68:	mov	r3, #0
   1fc6c:	b	1fca4 <__assert_fail@plt+0xe760>
   1fc70:	ldr	r3, [fp, #-8]
   1fc74:	ldr	r3, [r3, #8]
   1fc78:	ldr	r2, [fp, #-12]
   1fc7c:	cmp	r2, r3
   1fc80:	beq	1fc48 <__assert_fail@plt+0xe704>
   1fc84:	ldr	r3, [fp, #-8]
   1fc88:	ldr	r3, [r3, #8]
   1fc8c:	cmp	r3, #0
   1fc90:	beq	1fc48 <__assert_fail@plt+0xe704>
   1fc94:	ldr	r3, [fp, #-8]
   1fc98:	ldr	r3, [r3, #8]
   1fc9c:	str	r3, [fp, #-8]
   1fca0:	b	1fbe4 <__assert_fail@plt+0xe6a0>
   1fca4:	mov	r0, r3
   1fca8:	sub	sp, fp, #4
   1fcac:	ldr	fp, [sp]
   1fcb0:	add	sp, sp, #4
   1fcb4:	pop	{pc}		; (ldr pc, [sp], #4)
   1fcb8:	push	{fp}		; (str fp, [sp, #-4]!)
   1fcbc:	add	fp, sp, #0
   1fcc0:	sub	sp, sp, #28
   1fcc4:	str	r0, [fp, #-24]	; 0xffffffe8
   1fcc8:	str	r1, [fp, #-28]	; 0xffffffe4
   1fccc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1fcd0:	str	r3, [fp, #-8]
   1fcd4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1fcd8:	ldrb	r3, [r3, #24]
   1fcdc:	cmp	r3, #4
   1fce0:	bne	1fd48 <__assert_fail@plt+0xe804>
   1fce4:	ldr	r3, [fp, #-8]
   1fce8:	ldr	r3, [r3, #132]	; 0x84
   1fcec:	cmp	r3, #0
   1fcf0:	beq	1fd48 <__assert_fail@plt+0xe804>
   1fcf4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1fcf8:	ldr	r3, [r3, #20]
   1fcfc:	str	r3, [fp, #-12]
   1fd00:	ldr	r3, [fp, #-8]
   1fd04:	ldr	r2, [r3, #132]	; 0x84
   1fd08:	ldr	r3, [fp, #-12]
   1fd0c:	lsl	r3, r3, #2
   1fd10:	add	r3, r2, r3
   1fd14:	ldr	r2, [r3]
   1fd18:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1fd1c:	str	r2, [r3, #20]
   1fd20:	ldr	r3, [fp, #-8]
   1fd24:	ldr	r3, [r3, #80]	; 0x50
   1fd28:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1fd2c:	ldr	r2, [r2, #20]
   1fd30:	mov	r1, #1
   1fd34:	lsl	r2, r1, r2
   1fd38:	orr	r2, r3, r2
   1fd3c:	ldr	r3, [fp, #-8]
   1fd40:	str	r2, [r3, #80]	; 0x50
   1fd44:	b	1fe24 <__assert_fail@plt+0xe8e0>
   1fd48:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1fd4c:	ldrb	r3, [r3, #24]
   1fd50:	cmp	r3, #17
   1fd54:	bne	1fe24 <__assert_fail@plt+0xe8e0>
   1fd58:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1fd5c:	ldr	r3, [r3, #4]
   1fd60:	cmp	r3, #0
   1fd64:	beq	1fe24 <__assert_fail@plt+0xe8e0>
   1fd68:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1fd6c:	ldr	r3, [r3, #4]
   1fd70:	ldrb	r3, [r3, #24]
   1fd74:	cmp	r3, #17
   1fd78:	bne	1fe24 <__assert_fail@plt+0xe8e0>
   1fd7c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1fd80:	ldr	r3, [r3, #4]
   1fd84:	ldr	r3, [r3, #20]
   1fd88:	str	r3, [fp, #-16]
   1fd8c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1fd90:	ldr	r3, [r3, #4]
   1fd94:	ldr	r2, [r3, #4]
   1fd98:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1fd9c:	str	r2, [r3, #4]
   1fda0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1fda4:	ldr	r3, [r3, #4]
   1fda8:	cmp	r3, #0
   1fdac:	beq	1fdc0 <__assert_fail@plt+0xe87c>
   1fdb0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1fdb4:	ldr	r3, [r3, #4]
   1fdb8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1fdbc:	str	r2, [r3]
   1fdc0:	ldr	r3, [fp, #-8]
   1fdc4:	ldr	r2, [r3, #132]	; 0x84
   1fdc8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1fdcc:	ldr	r3, [r3, #20]
   1fdd0:	lsl	r3, r3, #2
   1fdd4:	add	r2, r2, r3
   1fdd8:	ldr	r3, [fp, #-8]
   1fddc:	ldr	r1, [r3, #132]	; 0x84
   1fde0:	ldr	r3, [fp, #-16]
   1fde4:	lsl	r3, r3, #2
   1fde8:	add	r3, r1, r3
   1fdec:	ldr	r2, [r2]
   1fdf0:	str	r2, [r3]
   1fdf4:	ldr	r3, [fp, #-16]
   1fdf8:	cmp	r3, #31
   1fdfc:	bgt	1fe24 <__assert_fail@plt+0xe8e0>
   1fe00:	ldr	r3, [fp, #-8]
   1fe04:	ldr	r2, [r3, #80]	; 0x50
   1fe08:	mov	r1, #1
   1fe0c:	ldr	r3, [fp, #-16]
   1fe10:	lsl	r3, r1, r3
   1fe14:	mvn	r3, r3
   1fe18:	and	r2, r2, r3
   1fe1c:	ldr	r3, [fp, #-8]
   1fe20:	str	r2, [r3, #80]	; 0x50
   1fe24:	mov	r3, #0
   1fe28:	mov	r0, r3
   1fe2c:	add	sp, fp, #0
   1fe30:	pop	{fp}		; (ldr fp, [sp], #4)
   1fe34:	bx	lr
   1fe38:	str	fp, [sp, #-8]!
   1fe3c:	str	lr, [sp, #4]
   1fe40:	add	fp, sp, #4
   1fe44:	sub	sp, sp, #16
   1fe48:	str	r0, [fp, #-16]
   1fe4c:	str	r1, [fp, #-20]	; 0xffffffec
   1fe50:	ldr	r3, [fp, #-16]
   1fe54:	str	r3, [fp, #-8]
   1fe58:	mov	r3, #0
   1fe5c:	str	r3, [fp, #-12]
   1fe60:	ldr	r3, [fp, #-20]	; 0xffffffec
   1fe64:	ldr	r3, [r3, #4]
   1fe68:	cmp	r3, #0
   1fe6c:	beq	1fec8 <__assert_fail@plt+0xe984>
   1fe70:	ldr	r3, [fp, #-20]	; 0xffffffec
   1fe74:	ldr	r3, [r3, #4]
   1fe78:	ldrb	r3, [r3, #24]
   1fe7c:	cmp	r3, #17
   1fe80:	bne	1fec8 <__assert_fail@plt+0xe984>
   1fe84:	ldr	r3, [fp, #-20]	; 0xffffffec
   1fe88:	ldr	r2, [r3, #4]
   1fe8c:	sub	r3, fp, #12
   1fe90:	ldr	r1, [fp, #-8]
   1fe94:	mov	r0, r3
   1fe98:	bl	1ff48 <__assert_fail@plt+0xea04>
   1fe9c:	mov	r2, r0
   1fea0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1fea4:	str	r2, [r3, #4]
   1fea8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1feac:	ldr	r3, [r3, #4]
   1feb0:	cmp	r3, #0
   1feb4:	beq	1fec8 <__assert_fail@plt+0xe984>
   1feb8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1febc:	ldr	r3, [r3, #4]
   1fec0:	ldr	r2, [fp, #-20]	; 0xffffffec
   1fec4:	str	r2, [r3]
   1fec8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1fecc:	ldr	r3, [r3, #8]
   1fed0:	cmp	r3, #0
   1fed4:	beq	1ff30 <__assert_fail@plt+0xe9ec>
   1fed8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1fedc:	ldr	r3, [r3, #8]
   1fee0:	ldrb	r3, [r3, #24]
   1fee4:	cmp	r3, #17
   1fee8:	bne	1ff30 <__assert_fail@plt+0xe9ec>
   1feec:	ldr	r3, [fp, #-20]	; 0xffffffec
   1fef0:	ldr	r2, [r3, #8]
   1fef4:	sub	r3, fp, #12
   1fef8:	ldr	r1, [fp, #-8]
   1fefc:	mov	r0, r3
   1ff00:	bl	1ff48 <__assert_fail@plt+0xea04>
   1ff04:	mov	r2, r0
   1ff08:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ff0c:	str	r2, [r3, #8]
   1ff10:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ff14:	ldr	r3, [r3, #8]
   1ff18:	cmp	r3, #0
   1ff1c:	beq	1ff30 <__assert_fail@plt+0xe9ec>
   1ff20:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ff24:	ldr	r3, [r3, #8]
   1ff28:	ldr	r2, [fp, #-20]	; 0xffffffec
   1ff2c:	str	r2, [r3]
   1ff30:	ldr	r3, [fp, #-12]
   1ff34:	mov	r0, r3
   1ff38:	sub	sp, fp, #4
   1ff3c:	ldr	fp, [sp]
   1ff40:	add	sp, sp, #4
   1ff44:	pop	{pc}		; (ldr pc, [sp], #4)
   1ff48:	str	fp, [sp, #-8]!
   1ff4c:	str	lr, [sp, #4]
   1ff50:	add	fp, sp, #4
   1ff54:	sub	sp, sp, #40	; 0x28
   1ff58:	str	r0, [fp, #-32]	; 0xffffffe0
   1ff5c:	str	r1, [fp, #-36]	; 0xffffffdc
   1ff60:	str	r2, [fp, #-40]	; 0xffffffd8
   1ff64:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1ff68:	ldr	r3, [r3]
   1ff6c:	str	r3, [fp, #-8]
   1ff70:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1ff74:	ldr	r3, [r3, #4]
   1ff78:	str	r3, [fp, #-12]
   1ff7c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1ff80:	ldrb	r3, [r3, #28]
   1ff84:	and	r3, r3, #16
   1ff88:	uxtb	r3, r3
   1ff8c:	cmp	r3, #0
   1ff90:	beq	1ffe0 <__assert_fail@plt+0xea9c>
   1ff94:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1ff98:	ldr	r3, [r3, #4]
   1ff9c:	cmp	r3, #0
   1ffa0:	beq	1ffe0 <__assert_fail@plt+0xea9c>
   1ffa4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1ffa8:	ldr	r3, [r3, #20]
   1ffac:	cmp	r3, #31
   1ffb0:	bgt	1ffd4 <__assert_fail@plt+0xea90>
   1ffb4:	ldr	r3, [fp, #-8]
   1ffb8:	ldr	r2, [r3, #80]	; 0x50
   1ffbc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1ffc0:	ldr	r3, [r3, #20]
   1ffc4:	lsr	r3, r2, r3
   1ffc8:	and	r3, r3, #1
   1ffcc:	cmp	r3, #0
   1ffd0:	bne	1ffe0 <__assert_fail@plt+0xea9c>
   1ffd4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1ffd8:	ldr	r3, [r3, #4]
   1ffdc:	b	20168 <__assert_fail@plt+0xec24>
   1ffe0:	mov	r3, #8
   1ffe4:	mov	r2, #0
   1ffe8:	mov	r1, #0
   1ffec:	ldr	r0, [fp, #-8]
   1fff0:	bl	261f8 <__assert_fail@plt+0x14cb4>
   1fff4:	str	r0, [fp, #-16]
   1fff8:	mov	r3, #9
   1fffc:	mov	r2, #0
   20000:	mov	r1, #0
   20004:	ldr	r0, [fp, #-8]
   20008:	bl	261f8 <__assert_fail@plt+0x14cb4>
   2000c:	str	r0, [fp, #-20]	; 0xffffffec
   20010:	ldr	r3, [fp, #-12]
   20014:	cmp	r3, #0
   20018:	beq	20038 <__assert_fail@plt+0xeaf4>
   2001c:	mov	r3, #16
   20020:	ldr	r2, [fp, #-20]	; 0xffffffec
   20024:	ldr	r1, [fp, #-12]
   20028:	ldr	r0, [fp, #-8]
   2002c:	bl	261f8 <__assert_fail@plt+0x14cb4>
   20030:	mov	r3, r0
   20034:	b	2003c <__assert_fail@plt+0xeaf8>
   20038:	ldr	r3, [fp, #-20]	; 0xffffffec
   2003c:	str	r3, [fp, #-24]	; 0xffffffe8
   20040:	mov	r3, #16
   20044:	ldr	r2, [fp, #-24]	; 0xffffffe8
   20048:	ldr	r1, [fp, #-16]
   2004c:	ldr	r0, [fp, #-8]
   20050:	bl	261f8 <__assert_fail@plt+0x14cb4>
   20054:	str	r0, [fp, #-28]	; 0xffffffe4
   20058:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2005c:	cmp	r3, #0
   20060:	moveq	r3, #1
   20064:	movne	r3, #0
   20068:	uxtb	r3, r3
   2006c:	cmp	r3, #0
   20070:	bne	20090 <__assert_fail@plt+0xeb4c>
   20074:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20078:	cmp	r3, #0
   2007c:	moveq	r3, #1
   20080:	movne	r3, #0
   20084:	uxtb	r3, r3
   20088:	cmp	r3, #0
   2008c:	beq	20098 <__assert_fail@plt+0xeb54>
   20090:	mov	r3, #1
   20094:	b	2009c <__assert_fail@plt+0xeb58>
   20098:	mov	r3, #0
   2009c:	cmp	r3, #0
   200a0:	bne	200c0 <__assert_fail@plt+0xeb7c>
   200a4:	ldr	r3, [fp, #-16]
   200a8:	cmp	r3, #0
   200ac:	moveq	r3, #1
   200b0:	movne	r3, #0
   200b4:	uxtb	r3, r3
   200b8:	cmp	r3, #0
   200bc:	beq	200c8 <__assert_fail@plt+0xeb84>
   200c0:	mov	r3, #1
   200c4:	b	200cc <__assert_fail@plt+0xeb88>
   200c8:	mov	r3, #0
   200cc:	cmp	r3, #0
   200d0:	bne	200f0 <__assert_fail@plt+0xebac>
   200d4:	ldr	r3, [fp, #-20]	; 0xffffffec
   200d8:	cmp	r3, #0
   200dc:	moveq	r3, #1
   200e0:	movne	r3, #0
   200e4:	uxtb	r3, r3
   200e8:	cmp	r3, #0
   200ec:	beq	20104 <__assert_fail@plt+0xebc0>
   200f0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   200f4:	mov	r2, #12
   200f8:	str	r2, [r3]
   200fc:	mov	r3, #0
   20100:	b	20168 <__assert_fail@plt+0xec24>
   20104:	ldr	r3, [fp, #-40]	; 0xffffffd8
   20108:	ldr	r2, [r3, #20]
   2010c:	ldr	r3, [fp, #-20]	; 0xffffffec
   20110:	str	r2, [r3, #20]
   20114:	ldr	r3, [fp, #-20]	; 0xffffffec
   20118:	ldr	r2, [r3, #20]
   2011c:	ldr	r3, [fp, #-16]
   20120:	str	r2, [r3, #20]
   20124:	ldr	r3, [fp, #-40]	; 0xffffffd8
   20128:	ldrb	r3, [r3, #26]
   2012c:	ubfx	r3, r3, #3, #1
   20130:	uxtb	r1, r3
   20134:	ldr	r2, [fp, #-20]	; 0xffffffec
   20138:	ldrb	r3, [r2, #26]
   2013c:	bfi	r3, r1, #3, #1
   20140:	strb	r3, [r2, #26]
   20144:	ldr	r3, [fp, #-20]	; 0xffffffec
   20148:	ldrb	r3, [r3, #26]
   2014c:	ubfx	r3, r3, #3, #1
   20150:	uxtb	r1, r3
   20154:	ldr	r2, [fp, #-16]
   20158:	ldrb	r3, [r2, #26]
   2015c:	bfi	r3, r1, #3, #1
   20160:	strb	r3, [r2, #26]
   20164:	ldr	r3, [fp, #-28]	; 0xffffffe4
   20168:	mov	r0, r3
   2016c:	sub	sp, fp, #4
   20170:	ldr	fp, [sp]
   20174:	add	sp, sp, #4
   20178:	pop	{pc}		; (ldr pc, [sp], #4)
   2017c:	str	fp, [sp, #-8]!
   20180:	str	lr, [sp, #4]
   20184:	add	fp, sp, #4
   20188:	sub	sp, sp, #16
   2018c:	str	r0, [fp, #-16]
   20190:	str	r1, [fp, #-20]	; 0xffffffec
   20194:	ldr	r3, [fp, #-16]
   20198:	str	r3, [fp, #-8]
   2019c:	ldr	r3, [fp, #-20]	; 0xffffffec
   201a0:	ldrb	r3, [r3, #24]
   201a4:	cmp	r3, #16
   201a8:	bne	201d8 <__assert_fail@plt+0xec94>
   201ac:	ldr	r3, [fp, #-20]	; 0xffffffec
   201b0:	ldr	r3, [r3, #4]
   201b4:	ldr	r2, [r3, #12]
   201b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   201bc:	str	r2, [r3, #12]
   201c0:	ldr	r3, [fp, #-20]	; 0xffffffec
   201c4:	ldr	r3, [r3, #4]
   201c8:	ldr	r2, [r3, #28]
   201cc:	ldr	r3, [fp, #-20]	; 0xffffffec
   201d0:	str	r2, [r3, #28]
   201d4:	b	20274 <__assert_fail@plt+0xed30>
   201d8:	ldr	r3, [fp, #-20]	; 0xffffffec
   201dc:	ldr	r2, [fp, #-20]	; 0xffffffec
   201e0:	str	r2, [r3, #12]
   201e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   201e8:	add	r3, r3, #20
   201ec:	ldm	r3, {r1, r2}
   201f0:	ldr	r0, [fp, #-8]
   201f4:	bl	1c3bc <__assert_fail@plt+0xae78>
   201f8:	mov	r2, r0
   201fc:	ldr	r3, [fp, #-20]	; 0xffffffec
   20200:	str	r2, [r3, #28]
   20204:	ldr	r3, [fp, #-20]	; 0xffffffec
   20208:	ldr	r3, [r3, #28]
   2020c:	cmn	r3, #1
   20210:	moveq	r3, #1
   20214:	movne	r3, #0
   20218:	uxtb	r3, r3
   2021c:	cmp	r3, #0
   20220:	beq	2022c <__assert_fail@plt+0xece8>
   20224:	mov	r3, #12
   20228:	b	20278 <__assert_fail@plt+0xed34>
   2022c:	ldr	r3, [fp, #-20]	; 0xffffffec
   20230:	ldrb	r3, [r3, #24]
   20234:	cmp	r3, #12
   20238:	bne	20274 <__assert_fail@plt+0xed30>
   2023c:	ldr	r3, [fp, #-20]	; 0xffffffec
   20240:	ldr	r1, [r3, #20]
   20244:	ldr	r3, [fp, #-8]
   20248:	ldr	r2, [r3]
   2024c:	ldr	r3, [fp, #-20]	; 0xffffffec
   20250:	ldr	r3, [r3, #28]
   20254:	lsl	r3, r3, #3
   20258:	add	r2, r2, r3
   2025c:	mov	r3, r1
   20260:	ubfx	r3, r3, #0, #10
   20264:	uxth	r1, r3
   20268:	ldr	r3, [r2, #4]
   2026c:	bfi	r3, r1, #8, #10
   20270:	str	r3, [r2, #4]
   20274:	mov	r3, #0
   20278:	mov	r0, r3
   2027c:	sub	sp, fp, #4
   20280:	ldr	fp, [sp]
   20284:	add	sp, sp, #4
   20288:	pop	{pc}		; (ldr pc, [sp], #4)
   2028c:	push	{fp}		; (str fp, [sp, #-4]!)
   20290:	add	fp, sp, #0
   20294:	sub	sp, sp, #12
   20298:	str	r0, [fp, #-8]
   2029c:	str	r1, [fp, #-12]
   202a0:	ldr	r3, [fp, #-12]
   202a4:	ldrb	r3, [r3, #24]
   202a8:	cmp	r3, #11
   202ac:	beq	202bc <__assert_fail@plt+0xed78>
   202b0:	cmp	r3, #16
   202b4:	beq	202d0 <__assert_fail@plt+0xed8c>
   202b8:	b	20300 <__assert_fail@plt+0xedbc>
   202bc:	ldr	r3, [fp, #-12]
   202c0:	ldr	r3, [r3, #4]
   202c4:	ldr	r2, [fp, #-12]
   202c8:	str	r2, [r3, #16]
   202cc:	b	2034c <__assert_fail@plt+0xee08>
   202d0:	ldr	r3, [fp, #-12]
   202d4:	ldr	r2, [r3, #8]
   202d8:	ldr	r3, [fp, #-12]
   202dc:	ldr	r3, [r3, #4]
   202e0:	ldr	r2, [r2, #12]
   202e4:	str	r2, [r3, #16]
   202e8:	ldr	r3, [fp, #-12]
   202ec:	ldr	r3, [r3, #8]
   202f0:	ldr	r2, [fp, #-12]
   202f4:	ldr	r2, [r2, #16]
   202f8:	str	r2, [r3, #16]
   202fc:	b	2034c <__assert_fail@plt+0xee08>
   20300:	ldr	r3, [fp, #-12]
   20304:	ldr	r3, [r3, #4]
   20308:	cmp	r3, #0
   2030c:	beq	20324 <__assert_fail@plt+0xede0>
   20310:	ldr	r3, [fp, #-12]
   20314:	ldr	r3, [r3, #4]
   20318:	ldr	r2, [fp, #-12]
   2031c:	ldr	r2, [r2, #16]
   20320:	str	r2, [r3, #16]
   20324:	ldr	r3, [fp, #-12]
   20328:	ldr	r3, [r3, #8]
   2032c:	cmp	r3, #0
   20330:	beq	20348 <__assert_fail@plt+0xee04>
   20334:	ldr	r3, [fp, #-12]
   20338:	ldr	r3, [r3, #8]
   2033c:	ldr	r2, [fp, #-12]
   20340:	ldr	r2, [r2, #16]
   20344:	str	r2, [r3, #16]
   20348:	nop	{0}
   2034c:	mov	r3, #0
   20350:	mov	r0, r3
   20354:	add	sp, fp, #0
   20358:	pop	{fp}		; (ldr fp, [sp], #4)
   2035c:	bx	lr
   20360:	str	fp, [sp, #-8]!
   20364:	str	lr, [sp, #4]
   20368:	add	fp, sp, #4
   2036c:	sub	sp, sp, #32
   20370:	str	r0, [fp, #-32]	; 0xffffffe0
   20374:	str	r1, [fp, #-36]	; 0xffffffdc
   20378:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2037c:	str	r3, [fp, #-20]	; 0xffffffec
   20380:	ldr	r3, [fp, #-36]	; 0xffffffdc
   20384:	ldr	r3, [r3, #28]
   20388:	str	r3, [fp, #-24]	; 0xffffffe8
   2038c:	mov	r3, #0
   20390:	str	r3, [fp, #-8]
   20394:	ldr	r3, [fp, #-36]	; 0xffffffdc
   20398:	ldrb	r3, [r3, #24]
   2039c:	sub	r3, r3, #2
   203a0:	cmp	r3, #14
   203a4:	ldrls	pc, [pc, r3, lsl #2]
   203a8:	b	2057c <__assert_fail@plt+0xf038>
   203ac:	andeq	r0, r2, r8, ror #7
   203b0:	andeq	r0, r2, ip, ror r5
   203b4:	andeq	r0, r2, r0, lsl #10
   203b8:	andeq	r0, r2, ip, ror r5
   203bc:	andeq	r0, r2, ip, ror r5
   203c0:	andeq	r0, r2, ip, ror r5
   203c4:	andeq	r0, r2, r0, asr #9
   203c8:	andeq	r0, r2, r0, asr #9
   203cc:	strdeq	r0, [r2], -r8
   203d0:	strdeq	r0, [r2], -r8
   203d4:	andeq	r0, r2, r0, asr #9
   203d8:	andeq	r0, r2, ip, ror r5
   203dc:	andeq	r0, r2, ip, ror r5
   203e0:	andeq	r0, r2, ip, ror r5
   203e4:			; <UNDEFINED> instruction: 0x000205b4
   203e8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   203ec:	ldr	r3, [r3, #16]
   203f0:	cmp	r3, #0
   203f4:	b	205c0 <__assert_fail@plt+0xf07c>
   203f8:	ldr	r2, [fp, #-20]	; 0xffffffec
   203fc:	ldrb	r3, [r2, #88]	; 0x58
   20400:	orr	r3, r3, #1
   20404:	strb	r3, [r2, #88]	; 0x58
   20408:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2040c:	ldr	r3, [r3, #4]
   20410:	cmp	r3, #0
   20414:	beq	20430 <__assert_fail@plt+0xeeec>
   20418:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2041c:	ldr	r3, [r3, #4]
   20420:	ldr	r3, [r3, #12]
   20424:	ldr	r3, [r3, #28]
   20428:	str	r3, [fp, #-12]
   2042c:	b	20440 <__assert_fail@plt+0xeefc>
   20430:	ldr	r3, [fp, #-36]	; 0xffffffdc
   20434:	ldr	r3, [r3, #16]
   20438:	ldr	r3, [r3, #28]
   2043c:	str	r3, [fp, #-12]
   20440:	ldr	r3, [fp, #-36]	; 0xffffffdc
   20444:	ldr	r3, [r3, #8]
   20448:	cmp	r3, #0
   2044c:	beq	20468 <__assert_fail@plt+0xef24>
   20450:	ldr	r3, [fp, #-36]	; 0xffffffdc
   20454:	ldr	r3, [r3, #8]
   20458:	ldr	r3, [r3, #12]
   2045c:	ldr	r3, [r3, #28]
   20460:	str	r3, [fp, #-16]
   20464:	b	20478 <__assert_fail@plt+0xef34>
   20468:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2046c:	ldr	r3, [r3, #16]
   20470:	ldr	r3, [r3, #28]
   20474:	str	r3, [fp, #-16]
   20478:	ldr	r3, [fp, #-12]
   2047c:	cmp	r3, #0
   20480:	ldr	r3, [fp, #-16]
   20484:	cmp	r3, #0
   20488:	ldr	r3, [fp, #-20]	; 0xffffffec
   2048c:	ldr	r1, [r3, #20]
   20490:	ldr	r2, [fp, #-24]	; 0xffffffe8
   20494:	mov	r3, r2
   20498:	lsl	r3, r3, #1
   2049c:	add	r3, r3, r2
   204a0:	lsl	r3, r3, #2
   204a4:	add	r3, r1, r3
   204a8:	ldr	r2, [fp, #-16]
   204ac:	ldr	r1, [fp, #-12]
   204b0:	mov	r0, r3
   204b4:	bl	1af50 <__assert_fail@plt+0x9a0c>
   204b8:	str	r0, [fp, #-8]
   204bc:	b	205c0 <__assert_fail@plt+0xf07c>
   204c0:	ldr	r3, [fp, #-20]	; 0xffffffec
   204c4:	ldr	r1, [r3, #20]
   204c8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   204cc:	mov	r3, r2
   204d0:	lsl	r3, r3, #1
   204d4:	add	r3, r3, r2
   204d8:	lsl	r3, r3, #2
   204dc:	add	r2, r1, r3
   204e0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   204e4:	ldr	r3, [r3, #16]
   204e8:	ldr	r3, [r3, #28]
   204ec:	mov	r1, r3
   204f0:	mov	r0, r2
   204f4:	bl	1ae9c <__assert_fail@plt+0x9958>
   204f8:	str	r0, [fp, #-8]
   204fc:	b	205c0 <__assert_fail@plt+0xf07c>
   20500:	ldr	r3, [fp, #-36]	; 0xffffffdc
   20504:	ldr	r2, [r3, #16]
   20508:	ldr	r3, [fp, #-20]	; 0xffffffec
   2050c:	ldr	r1, [r3, #12]
   20510:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20514:	lsl	r3, r3, #2
   20518:	add	r3, r1, r3
   2051c:	ldr	r2, [r2, #28]
   20520:	str	r2, [r3]
   20524:	ldr	r3, [fp, #-36]	; 0xffffffdc
   20528:	ldrb	r3, [r3, #24]
   2052c:	cmp	r3, #4
   20530:	bne	205bc <__assert_fail@plt+0xf078>
   20534:	ldr	r3, [fp, #-20]	; 0xffffffec
   20538:	ldr	r1, [r3, #20]
   2053c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   20540:	mov	r3, r2
   20544:	lsl	r3, r3, #1
   20548:	add	r3, r3, r2
   2054c:	lsl	r3, r3, #2
   20550:	add	r0, r1, r3
   20554:	ldr	r3, [fp, #-20]	; 0xffffffec
   20558:	ldr	r2, [r3, #12]
   2055c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20560:	lsl	r3, r3, #2
   20564:	add	r3, r2, r3
   20568:	ldr	r3, [r3]
   2056c:	mov	r1, r3
   20570:	bl	1ae9c <__assert_fail@plt+0x9958>
   20574:	str	r0, [fp, #-8]
   20578:	b	205bc <__assert_fail@plt+0xf078>
   2057c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   20580:	ldrb	r3, [r3, #24]
   20584:	and	r3, r3, #8
   20588:	cmp	r3, #0
   2058c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   20590:	ldr	r2, [r3, #16]
   20594:	ldr	r3, [fp, #-20]	; 0xffffffec
   20598:	ldr	r1, [r3, #12]
   2059c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   205a0:	lsl	r3, r3, #2
   205a4:	add	r3, r1, r3
   205a8:	ldr	r2, [r2, #28]
   205ac:	str	r2, [r3]
   205b0:	b	205c0 <__assert_fail@plt+0xf07c>
   205b4:	nop	{0}
   205b8:	b	205c0 <__assert_fail@plt+0xf07c>
   205bc:	nop	{0}
   205c0:	ldr	r3, [fp, #-8]
   205c4:	mov	r0, r3
   205c8:	sub	sp, fp, #4
   205cc:	ldr	fp, [sp]
   205d0:	add	sp, sp, #4
   205d4:	pop	{pc}		; (ldr pc, [sp], #4)
   205d8:	str	fp, [sp, #-8]!
   205dc:	str	lr, [sp, #4]
   205e0:	add	fp, sp, #4
   205e4:	sub	sp, sp, #56	; 0x38
   205e8:	str	r0, [fp, #-40]	; 0xffffffd8
   205ec:	str	r1, [fp, #-44]	; 0xffffffd4
   205f0:	str	r2, [fp, #-48]	; 0xffffffd0
   205f4:	str	r3, [fp, #-52]	; 0xffffffcc
   205f8:	ldr	r3, [fp, #4]
   205fc:	str	r3, [fp, #-16]
   20600:	ldr	r3, [fp, #-44]	; 0xffffffd4
   20604:	str	r3, [fp, #-8]
   20608:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2060c:	str	r3, [fp, #-12]
   20610:	ldr	r3, [fp, #-40]	; 0xffffffd8
   20614:	ldr	r2, [r3]
   20618:	ldr	r3, [fp, #-8]
   2061c:	lsl	r3, r3, #3
   20620:	add	r3, r2, r3
   20624:	ldrb	r3, [r3, #4]
   20628:	cmp	r3, #4
   2062c:	bne	2072c <__assert_fail@plt+0xf1e8>
   20630:	ldr	r3, [fp, #-40]	; 0xffffffd8
   20634:	ldr	r2, [r3, #12]
   20638:	ldr	r3, [fp, #-8]
   2063c:	lsl	r3, r3, #2
   20640:	add	r3, r2, r3
   20644:	ldr	r3, [r3]
   20648:	str	r3, [fp, #-20]	; 0xffffffec
   2064c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   20650:	ldr	r1, [r3, #20]
   20654:	ldr	r2, [fp, #-12]
   20658:	mov	r3, r2
   2065c:	lsl	r3, r3, #1
   20660:	add	r3, r3, r2
   20664:	lsl	r3, r3, #2
   20668:	add	r3, r1, r3
   2066c:	mov	r2, #0
   20670:	str	r2, [r3, #4]
   20674:	ldr	r2, [fp, #-16]
   20678:	ldr	r1, [fp, #-20]	; 0xffffffec
   2067c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   20680:	bl	20c84 <__assert_fail@plt+0xf740>
   20684:	str	r0, [fp, #-24]	; 0xffffffe8
   20688:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2068c:	cmn	r3, #1
   20690:	moveq	r3, #1
   20694:	movne	r3, #0
   20698:	uxtb	r3, r3
   2069c:	cmp	r3, #0
   206a0:	beq	206ac <__assert_fail@plt+0xf168>
   206a4:	mov	r3, #12
   206a8:	b	20b94 <__assert_fail@plt+0xf650>
   206ac:	ldr	r3, [fp, #-40]	; 0xffffffd8
   206b0:	ldr	r2, [r3, #12]
   206b4:	ldr	r3, [fp, #-8]
   206b8:	lsl	r3, r3, #2
   206bc:	add	r2, r2, r3
   206c0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   206c4:	ldr	r1, [r3, #12]
   206c8:	ldr	r3, [fp, #-12]
   206cc:	lsl	r3, r3, #2
   206d0:	add	r3, r1, r3
   206d4:	ldr	r2, [r2]
   206d8:	str	r2, [r3]
   206dc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   206e0:	ldr	r1, [r3, #20]
   206e4:	ldr	r2, [fp, #-12]
   206e8:	mov	r3, r2
   206ec:	lsl	r3, r3, #1
   206f0:	add	r3, r3, r2
   206f4:	lsl	r3, r3, #2
   206f8:	add	r3, r1, r3
   206fc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   20700:	mov	r0, r3
   20704:	bl	1bdf4 <__assert_fail@plt+0xa8b0>
   20708:	mov	r3, r0
   2070c:	strb	r3, [fp, #-25]	; 0xffffffe7
   20710:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   20714:	eor	r3, r3, #1
   20718:	uxtb	r3, r3
   2071c:	cmp	r3, #0
   20720:	beq	20b78 <__assert_fail@plt+0xf634>
   20724:	mov	r3, #12
   20728:	b	20b94 <__assert_fail@plt+0xf650>
   2072c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   20730:	ldr	r1, [r3, #20]
   20734:	ldr	r2, [fp, #-8]
   20738:	mov	r3, r2
   2073c:	lsl	r3, r3, #1
   20740:	add	r3, r3, r2
   20744:	lsl	r3, r3, #2
   20748:	add	r3, r1, r3
   2074c:	ldr	r3, [r3, #4]
   20750:	cmp	r3, #0
   20754:	bne	2078c <__assert_fail@plt+0xf248>
   20758:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2075c:	ldr	r2, [r3, #12]
   20760:	ldr	r3, [fp, #-8]
   20764:	lsl	r3, r3, #2
   20768:	add	r2, r2, r3
   2076c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   20770:	ldr	r1, [r3, #12]
   20774:	ldr	r3, [fp, #-12]
   20778:	lsl	r3, r3, #2
   2077c:	add	r3, r1, r3
   20780:	ldr	r2, [r2]
   20784:	str	r2, [r3]
   20788:	b	20b90 <__assert_fail@plt+0xf64c>
   2078c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   20790:	ldr	r1, [r3, #20]
   20794:	ldr	r2, [fp, #-8]
   20798:	mov	r3, r2
   2079c:	lsl	r3, r3, #1
   207a0:	add	r3, r3, r2
   207a4:	lsl	r3, r3, #2
   207a8:	add	r3, r1, r3
   207ac:	ldr	r3, [r3, #4]
   207b0:	cmp	r3, #1
   207b4:	bne	20934 <__assert_fail@plt+0xf3f0>
   207b8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   207bc:	ldr	r1, [r3, #20]
   207c0:	ldr	r2, [fp, #-8]
   207c4:	mov	r3, r2
   207c8:	lsl	r3, r3, #1
   207cc:	add	r3, r3, r2
   207d0:	lsl	r3, r3, #2
   207d4:	add	r3, r1, r3
   207d8:	ldr	r3, [r3, #8]
   207dc:	ldr	r3, [r3]
   207e0:	str	r3, [fp, #-20]	; 0xffffffec
   207e4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   207e8:	ldr	r1, [r3, #20]
   207ec:	ldr	r2, [fp, #-12]
   207f0:	mov	r3, r2
   207f4:	lsl	r3, r3, #1
   207f8:	add	r3, r3, r2
   207fc:	lsl	r3, r3, #2
   20800:	add	r3, r1, r3
   20804:	mov	r2, #0
   20808:	str	r2, [r3, #4]
   2080c:	ldr	r2, [fp, #-8]
   20810:	ldr	r3, [fp, #-52]	; 0xffffffcc
   20814:	cmp	r2, r3
   20818:	bne	2087c <__assert_fail@plt+0xf338>
   2081c:	ldr	r2, [fp, #-12]
   20820:	ldr	r3, [fp, #-8]
   20824:	cmp	r2, r3
   20828:	beq	2087c <__assert_fail@plt+0xf338>
   2082c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   20830:	ldr	r1, [r3, #20]
   20834:	ldr	r2, [fp, #-12]
   20838:	mov	r3, r2
   2083c:	lsl	r3, r3, #1
   20840:	add	r3, r3, r2
   20844:	lsl	r3, r3, #2
   20848:	add	r3, r1, r3
   2084c:	ldr	r1, [fp, #-20]	; 0xffffffec
   20850:	mov	r0, r3
   20854:	bl	1bdf4 <__assert_fail@plt+0xa8b0>
   20858:	mov	r3, r0
   2085c:	strb	r3, [fp, #-25]	; 0xffffffe7
   20860:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   20864:	eor	r3, r3, #1
   20868:	uxtb	r3, r3
   2086c:	cmp	r3, #0
   20870:	beq	20b8c <__assert_fail@plt+0xf648>
   20874:	mov	r3, #12
   20878:	b	20b94 <__assert_fail@plt+0xf650>
   2087c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   20880:	ldr	r2, [r3]
   20884:	ldr	r3, [fp, #-8]
   20888:	lsl	r3, r3, #3
   2088c:	add	r3, r2, r3
   20890:	ldr	r3, [r3, #4]
   20894:	ubfx	r3, r3, #8, #10
   20898:	uxth	r3, r3
   2089c:	mov	r2, r3
   208a0:	ldr	r3, [fp, #-16]
   208a4:	orr	r3, r3, r2
   208a8:	str	r3, [fp, #-16]
   208ac:	ldr	r2, [fp, #-16]
   208b0:	ldr	r1, [fp, #-20]	; 0xffffffec
   208b4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   208b8:	bl	20c84 <__assert_fail@plt+0xf740>
   208bc:	str	r0, [fp, #-24]	; 0xffffffe8
   208c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   208c4:	cmn	r3, #1
   208c8:	moveq	r3, #1
   208cc:	movne	r3, #0
   208d0:	uxtb	r3, r3
   208d4:	cmp	r3, #0
   208d8:	beq	208e4 <__assert_fail@plt+0xf3a0>
   208dc:	mov	r3, #12
   208e0:	b	20b94 <__assert_fail@plt+0xf650>
   208e4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   208e8:	ldr	r1, [r3, #20]
   208ec:	ldr	r2, [fp, #-12]
   208f0:	mov	r3, r2
   208f4:	lsl	r3, r3, #1
   208f8:	add	r3, r3, r2
   208fc:	lsl	r3, r3, #2
   20900:	add	r3, r1, r3
   20904:	ldr	r1, [fp, #-24]	; 0xffffffe8
   20908:	mov	r0, r3
   2090c:	bl	1bdf4 <__assert_fail@plt+0xa8b0>
   20910:	mov	r3, r0
   20914:	strb	r3, [fp, #-25]	; 0xffffffe7
   20918:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   2091c:	eor	r3, r3, #1
   20920:	uxtb	r3, r3
   20924:	cmp	r3, #0
   20928:	beq	20b78 <__assert_fail@plt+0xf634>
   2092c:	mov	r3, #12
   20930:	b	20b94 <__assert_fail@plt+0xf650>
   20934:	ldr	r3, [fp, #-40]	; 0xffffffd8
   20938:	ldr	r1, [r3, #20]
   2093c:	ldr	r2, [fp, #-8]
   20940:	mov	r3, r2
   20944:	lsl	r3, r3, #1
   20948:	add	r3, r3, r2
   2094c:	lsl	r3, r3, #2
   20950:	add	r3, r1, r3
   20954:	ldr	r3, [r3, #8]
   20958:	ldr	r3, [r3]
   2095c:	str	r3, [fp, #-20]	; 0xffffffec
   20960:	ldr	r3, [fp, #-40]	; 0xffffffd8
   20964:	ldr	r1, [r3, #20]
   20968:	ldr	r2, [fp, #-12]
   2096c:	mov	r3, r2
   20970:	lsl	r3, r3, #1
   20974:	add	r3, r3, r2
   20978:	lsl	r3, r3, #2
   2097c:	add	r3, r1, r3
   20980:	mov	r2, #0
   20984:	str	r2, [r3, #4]
   20988:	ldr	r2, [fp, #-16]
   2098c:	ldr	r1, [fp, #-20]	; 0xffffffec
   20990:	ldr	r0, [fp, #-40]	; 0xffffffd8
   20994:	bl	20ba8 <__assert_fail@plt+0xf664>
   20998:	str	r0, [fp, #-24]	; 0xffffffe8
   2099c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   209a0:	cmn	r3, #1
   209a4:	bne	20a74 <__assert_fail@plt+0xf530>
   209a8:	ldr	r2, [fp, #-16]
   209ac:	ldr	r1, [fp, #-20]	; 0xffffffec
   209b0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   209b4:	bl	20c84 <__assert_fail@plt+0xf740>
   209b8:	str	r0, [fp, #-24]	; 0xffffffe8
   209bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   209c0:	cmn	r3, #1
   209c4:	moveq	r3, #1
   209c8:	movne	r3, #0
   209cc:	uxtb	r3, r3
   209d0:	cmp	r3, #0
   209d4:	beq	209e0 <__assert_fail@plt+0xf49c>
   209d8:	mov	r3, #12
   209dc:	b	20b94 <__assert_fail@plt+0xf650>
   209e0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   209e4:	ldr	r1, [r3, #20]
   209e8:	ldr	r2, [fp, #-12]
   209ec:	mov	r3, r2
   209f0:	lsl	r3, r3, #1
   209f4:	add	r3, r3, r2
   209f8:	lsl	r3, r3, #2
   209fc:	add	r3, r1, r3
   20a00:	ldr	r1, [fp, #-24]	; 0xffffffe8
   20a04:	mov	r0, r3
   20a08:	bl	1bdf4 <__assert_fail@plt+0xa8b0>
   20a0c:	mov	r3, r0
   20a10:	strb	r3, [fp, #-25]	; 0xffffffe7
   20a14:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   20a18:	eor	r3, r3, #1
   20a1c:	uxtb	r3, r3
   20a20:	cmp	r3, #0
   20a24:	beq	20a30 <__assert_fail@plt+0xf4ec>
   20a28:	mov	r3, #12
   20a2c:	b	20b94 <__assert_fail@plt+0xf650>
   20a30:	ldr	r3, [fp, #-16]
   20a34:	str	r3, [sp]
   20a38:	ldr	r3, [fp, #-52]	; 0xffffffcc
   20a3c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   20a40:	ldr	r1, [fp, #-20]	; 0xffffffec
   20a44:	ldr	r0, [fp, #-40]	; 0xffffffd8
   20a48:	bl	205d8 <__assert_fail@plt+0xf094>
   20a4c:	str	r0, [fp, #-32]	; 0xffffffe0
   20a50:	ldr	r3, [fp, #-32]	; 0xffffffe0
   20a54:	cmp	r3, #0
   20a58:	movne	r3, #1
   20a5c:	moveq	r3, #0
   20a60:	uxtb	r3, r3
   20a64:	cmp	r3, #0
   20a68:	beq	20ac4 <__assert_fail@plt+0xf580>
   20a6c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   20a70:	b	20b94 <__assert_fail@plt+0xf650>
   20a74:	ldr	r3, [fp, #-40]	; 0xffffffd8
   20a78:	ldr	r1, [r3, #20]
   20a7c:	ldr	r2, [fp, #-12]
   20a80:	mov	r3, r2
   20a84:	lsl	r3, r3, #1
   20a88:	add	r3, r3, r2
   20a8c:	lsl	r3, r3, #2
   20a90:	add	r3, r1, r3
   20a94:	ldr	r1, [fp, #-24]	; 0xffffffe8
   20a98:	mov	r0, r3
   20a9c:	bl	1bdf4 <__assert_fail@plt+0xa8b0>
   20aa0:	mov	r3, r0
   20aa4:	strb	r3, [fp, #-25]	; 0xffffffe7
   20aa8:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   20aac:	eor	r3, r3, #1
   20ab0:	uxtb	r3, r3
   20ab4:	cmp	r3, #0
   20ab8:	beq	20ac4 <__assert_fail@plt+0xf580>
   20abc:	mov	r3, #12
   20ac0:	b	20b94 <__assert_fail@plt+0xf650>
   20ac4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   20ac8:	ldr	r1, [r3, #20]
   20acc:	ldr	r2, [fp, #-8]
   20ad0:	mov	r3, r2
   20ad4:	lsl	r3, r3, #1
   20ad8:	add	r3, r3, r2
   20adc:	lsl	r3, r3, #2
   20ae0:	add	r3, r1, r3
   20ae4:	ldr	r3, [r3, #8]
   20ae8:	ldr	r3, [r3, #4]
   20aec:	str	r3, [fp, #-20]	; 0xffffffec
   20af0:	ldr	r2, [fp, #-16]
   20af4:	ldr	r1, [fp, #-20]	; 0xffffffec
   20af8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   20afc:	bl	20c84 <__assert_fail@plt+0xf740>
   20b00:	str	r0, [fp, #-24]	; 0xffffffe8
   20b04:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20b08:	cmn	r3, #1
   20b0c:	moveq	r3, #1
   20b10:	movne	r3, #0
   20b14:	uxtb	r3, r3
   20b18:	cmp	r3, #0
   20b1c:	beq	20b28 <__assert_fail@plt+0xf5e4>
   20b20:	mov	r3, #12
   20b24:	b	20b94 <__assert_fail@plt+0xf650>
   20b28:	ldr	r3, [fp, #-40]	; 0xffffffd8
   20b2c:	ldr	r1, [r3, #20]
   20b30:	ldr	r2, [fp, #-12]
   20b34:	mov	r3, r2
   20b38:	lsl	r3, r3, #1
   20b3c:	add	r3, r3, r2
   20b40:	lsl	r3, r3, #2
   20b44:	add	r3, r1, r3
   20b48:	ldr	r1, [fp, #-24]	; 0xffffffe8
   20b4c:	mov	r0, r3
   20b50:	bl	1bdf4 <__assert_fail@plt+0xa8b0>
   20b54:	mov	r3, r0
   20b58:	strb	r3, [fp, #-25]	; 0xffffffe7
   20b5c:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   20b60:	eor	r3, r3, #1
   20b64:	uxtb	r3, r3
   20b68:	cmp	r3, #0
   20b6c:	beq	20b78 <__assert_fail@plt+0xf634>
   20b70:	mov	r3, #12
   20b74:	b	20b94 <__assert_fail@plt+0xf650>
   20b78:	ldr	r3, [fp, #-20]	; 0xffffffec
   20b7c:	str	r3, [fp, #-8]
   20b80:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20b84:	str	r3, [fp, #-12]
   20b88:	b	20610 <__assert_fail@plt+0xf0cc>
   20b8c:	nop	{0}
   20b90:	mov	r3, #0
   20b94:	mov	r0, r3
   20b98:	sub	sp, fp, #4
   20b9c:	ldr	fp, [sp]
   20ba0:	add	sp, sp, #4
   20ba4:	pop	{pc}		; (ldr pc, [sp], #4)
   20ba8:	push	{fp}		; (str fp, [sp, #-4]!)
   20bac:	add	fp, sp, #0
   20bb0:	sub	sp, sp, #28
   20bb4:	str	r0, [fp, #-16]
   20bb8:	str	r1, [fp, #-20]	; 0xffffffec
   20bbc:	str	r2, [fp, #-24]	; 0xffffffe8
   20bc0:	ldr	r3, [fp, #-16]
   20bc4:	ldr	r3, [r3, #8]
   20bc8:	sub	r3, r3, #1
   20bcc:	str	r3, [fp, #-8]
   20bd0:	b	20c3c <__assert_fail@plt+0xf6f8>
   20bd4:	ldr	r3, [fp, #-16]
   20bd8:	ldr	r2, [r3, #16]
   20bdc:	ldr	r3, [fp, #-8]
   20be0:	lsl	r3, r3, #2
   20be4:	add	r3, r2, r3
   20be8:	ldr	r3, [r3]
   20bec:	ldr	r2, [fp, #-20]	; 0xffffffec
   20bf0:	cmp	r2, r3
   20bf4:	bne	20c30 <__assert_fail@plt+0xf6ec>
   20bf8:	ldr	r3, [fp, #-16]
   20bfc:	ldr	r2, [r3]
   20c00:	ldr	r3, [fp, #-8]
   20c04:	lsl	r3, r3, #3
   20c08:	add	r3, r2, r3
   20c0c:	ldr	r3, [r3, #4]
   20c10:	ubfx	r3, r3, #8, #10
   20c14:	uxth	r3, r3
   20c18:	mov	r2, r3
   20c1c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20c20:	cmp	r3, r2
   20c24:	bne	20c30 <__assert_fail@plt+0xf6ec>
   20c28:	ldr	r3, [fp, #-8]
   20c2c:	b	20c74 <__assert_fail@plt+0xf730>
   20c30:	ldr	r3, [fp, #-8]
   20c34:	sub	r3, r3, #1
   20c38:	str	r3, [fp, #-8]
   20c3c:	ldr	r3, [fp, #-16]
   20c40:	ldr	r2, [r3]
   20c44:	ldr	r3, [fp, #-8]
   20c48:	lsl	r3, r3, #3
   20c4c:	add	r3, r2, r3
   20c50:	ldrb	r3, [r3, #6]
   20c54:	and	r3, r3, #4
   20c58:	uxtb	r3, r3
   20c5c:	cmp	r3, #0
   20c60:	beq	20c70 <__assert_fail@plt+0xf72c>
   20c64:	ldr	r3, [fp, #-8]
   20c68:	cmp	r3, #0
   20c6c:	bgt	20bd4 <__assert_fail@plt+0xf690>
   20c70:	mvn	r3, #0
   20c74:	mov	r0, r3
   20c78:	add	sp, fp, #0
   20c7c:	pop	{fp}		; (ldr fp, [sp], #4)
   20c80:	bx	lr
   20c84:	str	fp, [sp, #-8]!
   20c88:	str	lr, [sp, #4]
   20c8c:	add	fp, sp, #4
   20c90:	sub	sp, sp, #24
   20c94:	str	r0, [fp, #-16]
   20c98:	str	r1, [fp, #-20]	; 0xffffffec
   20c9c:	str	r2, [fp, #-24]	; 0xffffffe8
   20ca0:	ldr	r3, [fp, #-16]
   20ca4:	ldr	r2, [r3]
   20ca8:	ldr	r3, [fp, #-20]	; 0xffffffec
   20cac:	lsl	r3, r3, #3
   20cb0:	add	r3, r2, r3
   20cb4:	ldm	r3, {r1, r2}
   20cb8:	ldr	r0, [fp, #-16]
   20cbc:	bl	1c3bc <__assert_fail@plt+0xae78>
   20cc0:	str	r0, [fp, #-8]
   20cc4:	ldr	r3, [fp, #-8]
   20cc8:	cmn	r3, #1
   20ccc:	movne	r3, #1
   20cd0:	moveq	r3, #0
   20cd4:	uxtb	r3, r3
   20cd8:	cmp	r3, #0
   20cdc:	beq	20db0 <__assert_fail@plt+0xf86c>
   20ce0:	ldr	r3, [fp, #-16]
   20ce4:	ldr	r2, [r3]
   20ce8:	ldr	r3, [fp, #-8]
   20cec:	lsl	r3, r3, #3
   20cf0:	add	r2, r2, r3
   20cf4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20cf8:	ubfx	r3, r3, #0, #10
   20cfc:	uxth	r1, r3
   20d00:	ldr	r3, [r2, #4]
   20d04:	bfi	r3, r1, #8, #10
   20d08:	str	r3, [r2, #4]
   20d0c:	ldr	r3, [fp, #-16]
   20d10:	ldr	r2, [r3]
   20d14:	ldr	r3, [fp, #-8]
   20d18:	lsl	r3, r3, #3
   20d1c:	add	r3, r2, r3
   20d20:	ldr	r3, [r3, #4]
   20d24:	ubfx	r3, r3, #8, #10
   20d28:	uxth	r1, r3
   20d2c:	ldr	r3, [fp, #-16]
   20d30:	ldr	r2, [r3]
   20d34:	ldr	r3, [fp, #-20]	; 0xffffffec
   20d38:	lsl	r3, r3, #3
   20d3c:	add	r3, r2, r3
   20d40:	ldr	r3, [r3, #4]
   20d44:	ubfx	r3, r3, #8, #10
   20d48:	uxth	r3, r3
   20d4c:	ldr	r2, [fp, #-16]
   20d50:	ldr	r0, [r2]
   20d54:	ldr	r2, [fp, #-8]
   20d58:	lsl	r2, r2, #3
   20d5c:	add	r2, r0, r2
   20d60:	orr	r3, r1, r3
   20d64:	uxth	r1, r3
   20d68:	ldr	r3, [r2, #4]
   20d6c:	bfi	r3, r1, #8, #10
   20d70:	str	r3, [r2, #4]
   20d74:	ldr	r3, [fp, #-16]
   20d78:	ldr	r2, [r3]
   20d7c:	ldr	r3, [fp, #-8]
   20d80:	lsl	r3, r3, #3
   20d84:	add	r2, r2, r3
   20d88:	ldrb	r3, [r2, #6]
   20d8c:	orr	r3, r3, #4
   20d90:	strb	r3, [r2, #6]
   20d94:	ldr	r3, [fp, #-16]
   20d98:	ldr	r2, [r3, #16]
   20d9c:	ldr	r3, [fp, #-8]
   20da0:	lsl	r3, r3, #2
   20da4:	add	r3, r2, r3
   20da8:	ldr	r2, [fp, #-20]	; 0xffffffec
   20dac:	str	r2, [r3]
   20db0:	ldr	r3, [fp, #-8]
   20db4:	mov	r0, r3
   20db8:	sub	sp, fp, #4
   20dbc:	ldr	fp, [sp]
   20dc0:	add	sp, sp, #4
   20dc4:	pop	{pc}		; (ldr pc, [sp], #4)
   20dc8:	str	fp, [sp, #-8]!
   20dcc:	str	lr, [sp, #4]
   20dd0:	add	fp, sp, #4
   20dd4:	sub	sp, sp, #24
   20dd8:	str	r0, [fp, #-24]	; 0xffffffe8
   20ddc:	mov	r3, #0
   20de0:	str	r3, [fp, #-12]
   20de4:	b	20e24 <__assert_fail@plt+0xf8e0>
   20de8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20dec:	ldr	r1, [r3, #28]
   20df0:	ldr	r2, [fp, #-12]
   20df4:	mov	r3, r2
   20df8:	lsl	r3, r3, #1
   20dfc:	add	r3, r3, r2
   20e00:	lsl	r3, r3, #2
   20e04:	add	r3, r1, r3
   20e08:	mov	r2, #12
   20e0c:	mov	r1, #0
   20e10:	mov	r0, r3
   20e14:	bl	11448 <memset@plt>
   20e18:	ldr	r3, [fp, #-12]
   20e1c:	add	r3, r3, #1
   20e20:	str	r3, [fp, #-12]
   20e24:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20e28:	ldr	r2, [r3, #8]
   20e2c:	ldr	r3, [fp, #-12]
   20e30:	cmp	r2, r3
   20e34:	bhi	20de8 <__assert_fail@plt+0xf8a4>
   20e38:	mov	r3, #0
   20e3c:	str	r3, [fp, #-8]
   20e40:	b	20f24 <__assert_fail@plt+0xf9e0>
   20e44:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20e48:	ldr	r1, [r3, #24]
   20e4c:	ldr	r2, [fp, #-8]
   20e50:	mov	r3, r2
   20e54:	lsl	r3, r3, #1
   20e58:	add	r3, r3, r2
   20e5c:	lsl	r3, r3, #2
   20e60:	add	r3, r1, r3
   20e64:	ldr	r3, [r3, #8]
   20e68:	str	r3, [fp, #-16]
   20e6c:	mov	r3, #0
   20e70:	str	r3, [fp, #-12]
   20e74:	b	20ee8 <__assert_fail@plt+0xf9a4>
   20e78:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20e7c:	ldr	r2, [r3, #28]
   20e80:	ldr	r3, [fp, #-12]
   20e84:	lsl	r3, r3, #2
   20e88:	ldr	r1, [fp, #-16]
   20e8c:	add	r3, r1, r3
   20e90:	ldr	r3, [r3]
   20e94:	mov	r1, r3
   20e98:	mov	r3, r1
   20e9c:	lsl	r3, r3, #1
   20ea0:	add	r3, r3, r1
   20ea4:	lsl	r3, r3, #2
   20ea8:	add	r3, r2, r3
   20eac:	ldr	r1, [fp, #-8]
   20eb0:	mov	r0, r3
   20eb4:	bl	1c074 <__assert_fail@plt+0xab30>
   20eb8:	mov	r3, r0
   20ebc:	strb	r3, [fp, #-17]	; 0xffffffef
   20ec0:	ldrb	r3, [fp, #-17]	; 0xffffffef
   20ec4:	eor	r3, r3, #1
   20ec8:	uxtb	r3, r3
   20ecc:	cmp	r3, #0
   20ed0:	beq	20edc <__assert_fail@plt+0xf998>
   20ed4:	mov	r3, #12
   20ed8:	b	20f3c <__assert_fail@plt+0xf9f8>
   20edc:	ldr	r3, [fp, #-12]
   20ee0:	add	r3, r3, #1
   20ee4:	str	r3, [fp, #-12]
   20ee8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20eec:	ldr	r1, [r3, #24]
   20ef0:	ldr	r2, [fp, #-8]
   20ef4:	mov	r3, r2
   20ef8:	lsl	r3, r3, #1
   20efc:	add	r3, r3, r2
   20f00:	lsl	r3, r3, #2
   20f04:	add	r3, r1, r3
   20f08:	ldr	r3, [r3, #4]
   20f0c:	ldr	r2, [fp, #-12]
   20f10:	cmp	r2, r3
   20f14:	blt	20e78 <__assert_fail@plt+0xf934>
   20f18:	ldr	r3, [fp, #-8]
   20f1c:	add	r3, r3, #1
   20f20:	str	r3, [fp, #-8]
   20f24:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20f28:	ldr	r2, [r3, #8]
   20f2c:	ldr	r3, [fp, #-8]
   20f30:	cmp	r2, r3
   20f34:	bhi	20e44 <__assert_fail@plt+0xf900>
   20f38:	mov	r3, #0
   20f3c:	mov	r0, r3
   20f40:	sub	sp, fp, #4
   20f44:	ldr	fp, [sp]
   20f48:	add	sp, sp, #4
   20f4c:	pop	{pc}		; (ldr pc, [sp], #4)
   20f50:	str	fp, [sp, #-8]!
   20f54:	str	lr, [sp, #4]
   20f58:	add	fp, sp, #4
   20f5c:	sub	sp, sp, #32
   20f60:	str	r0, [fp, #-32]	; 0xffffffe0
   20f64:	ldr	r3, [fp, #-32]	; 0xffffffe0
   20f68:	ldr	r3, [r3, #8]
   20f6c:	cmp	r3, #0
   20f70:	mov	r3, #0
   20f74:	strb	r3, [fp, #-9]
   20f78:	mov	r3, #0
   20f7c:	str	r3, [fp, #-8]
   20f80:	ldr	r3, [fp, #-32]	; 0xffffffe0
   20f84:	ldr	r2, [r3, #8]
   20f88:	ldr	r3, [fp, #-8]
   20f8c:	cmp	r2, r3
   20f90:	bne	20fc0 <__assert_fail@plt+0xfa7c>
   20f94:	ldrb	r3, [fp, #-9]
   20f98:	eor	r3, r3, #1
   20f9c:	uxtb	r3, r3
   20fa0:	cmp	r3, #0
   20fa4:	beq	20fb0 <__assert_fail@plt+0xfa6c>
   20fa8:	mov	r3, #0
   20fac:	b	210a8 <__assert_fail@plt+0xfb64>
   20fb0:	mov	r3, #0
   20fb4:	strb	r3, [fp, #-9]
   20fb8:	mov	r3, #0
   20fbc:	str	r3, [fp, #-8]
   20fc0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   20fc4:	ldr	r1, [r3, #24]
   20fc8:	ldr	r2, [fp, #-8]
   20fcc:	mov	r3, r2
   20fd0:	lsl	r3, r3, #1
   20fd4:	add	r3, r3, r2
   20fd8:	lsl	r3, r3, #2
   20fdc:	add	r3, r1, r3
   20fe0:	ldr	r3, [r3, #4]
   20fe4:	cmn	r3, #1
   20fe8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   20fec:	ldr	r1, [r3, #24]
   20ff0:	ldr	r2, [fp, #-8]
   20ff4:	mov	r3, r2
   20ff8:	lsl	r3, r3, #1
   20ffc:	add	r3, r3, r2
   21000:	lsl	r3, r3, #2
   21004:	add	r3, r1, r3
   21008:	ldr	r3, [r3, #4]
   2100c:	cmp	r3, #0
   21010:	bne	21094 <__assert_fail@plt+0xfb50>
   21014:	sub	r0, fp, #28
   21018:	mov	r3, #1
   2101c:	ldr	r2, [fp, #-8]
   21020:	ldr	r1, [fp, #-32]	; 0xffffffe0
   21024:	bl	210bc <__assert_fail@plt+0xfb78>
   21028:	str	r0, [fp, #-16]
   2102c:	ldr	r3, [fp, #-16]
   21030:	cmp	r3, #0
   21034:	movne	r3, #1
   21038:	moveq	r3, #0
   2103c:	uxtb	r3, r3
   21040:	cmp	r3, #0
   21044:	beq	21050 <__assert_fail@plt+0xfb0c>
   21048:	ldr	r3, [fp, #-16]
   2104c:	b	210a8 <__assert_fail@plt+0xfb64>
   21050:	ldr	r3, [fp, #-32]	; 0xffffffe0
   21054:	ldr	r1, [r3, #24]
   21058:	ldr	r2, [fp, #-8]
   2105c:	mov	r3, r2
   21060:	lsl	r3, r3, #1
   21064:	add	r3, r3, r2
   21068:	lsl	r3, r3, #2
   2106c:	add	r3, r1, r3
   21070:	ldr	r3, [r3, #4]
   21074:	cmp	r3, #0
   21078:	bne	21098 <__assert_fail@plt+0xfb54>
   2107c:	mov	r3, #1
   21080:	strb	r3, [fp, #-9]
   21084:	ldr	r3, [fp, #-20]	; 0xffffffec
   21088:	mov	r0, r3
   2108c:	bl	151ec <__assert_fail@plt+0x3ca8>
   21090:	b	21098 <__assert_fail@plt+0xfb54>
   21094:	nop	{0}
   21098:	ldr	r3, [fp, #-8]
   2109c:	add	r3, r3, #1
   210a0:	str	r3, [fp, #-8]
   210a4:	b	20f80 <__assert_fail@plt+0xfa3c>
   210a8:	mov	r0, r3
   210ac:	sub	sp, fp, #4
   210b0:	ldr	fp, [sp]
   210b4:	add	sp, sp, #4
   210b8:	pop	{pc}		; (ldr pc, [sp], #4)
   210bc:	str	fp, [sp, #-8]!
   210c0:	str	lr, [sp, #4]
   210c4:	add	fp, sp, #4
   210c8:	sub	sp, sp, #64	; 0x40
   210cc:	str	r0, [fp, #-48]	; 0xffffffd0
   210d0:	str	r1, [fp, #-52]	; 0xffffffcc
   210d4:	str	r2, [fp, #-56]	; 0xffffffc8
   210d8:	strb	r3, [fp, #-57]	; 0xffffffc7
   210dc:	mov	r3, #0
   210e0:	strb	r3, [fp, #-9]
   210e4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   210e8:	ldr	r1, [r3, #20]
   210ec:	ldr	r2, [fp, #-56]	; 0xffffffc8
   210f0:	mov	r3, r2
   210f4:	lsl	r3, r3, #1
   210f8:	add	r3, r3, r2
   210fc:	lsl	r3, r3, #2
   21100:	add	r3, r1, r3
   21104:	ldr	r3, [r3, #4]
   21108:	add	r2, r3, #1
   2110c:	sub	r3, fp, #32
   21110:	mov	r1, r2
   21114:	mov	r0, r3
   21118:	bl	1ae0c <__assert_fail@plt+0x98c8>
   2111c:	str	r0, [fp, #-16]
   21120:	ldr	r3, [fp, #-16]
   21124:	cmp	r3, #0
   21128:	movne	r3, #1
   2112c:	moveq	r3, #0
   21130:	uxtb	r3, r3
   21134:	cmp	r3, #0
   21138:	beq	21144 <__assert_fail@plt+0xfc00>
   2113c:	ldr	r3, [fp, #-16]
   21140:	b	2152c <__assert_fail@plt+0xffe8>
   21144:	ldr	r2, [fp, #-24]	; 0xffffffe8
   21148:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2114c:	add	r1, r3, #1
   21150:	str	r1, [fp, #-28]	; 0xffffffe4
   21154:	lsl	r3, r3, #2
   21158:	add	r3, r2, r3
   2115c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   21160:	str	r2, [r3]
   21164:	ldr	r3, [fp, #-52]	; 0xffffffcc
   21168:	ldr	r1, [r3, #24]
   2116c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   21170:	mov	r3, r2
   21174:	lsl	r3, r3, #1
   21178:	add	r3, r3, r2
   2117c:	lsl	r3, r3, #2
   21180:	add	r3, r1, r3
   21184:	mvn	r2, #0
   21188:	str	r2, [r3, #4]
   2118c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   21190:	ldr	r2, [r3]
   21194:	ldr	r3, [fp, #-56]	; 0xffffffc8
   21198:	lsl	r3, r3, #3
   2119c:	add	r3, r2, r3
   211a0:	ldr	r2, [r3, #4]
   211a4:	mov	r3, #65280	; 0xff00
   211a8:	movt	r3, #3
   211ac:	and	r3, r3, r2
   211b0:	cmp	r3, #0
   211b4:	beq	21290 <__assert_fail@plt+0xfd4c>
   211b8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   211bc:	ldr	r1, [r3, #20]
   211c0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   211c4:	mov	r3, r2
   211c8:	lsl	r3, r3, #1
   211cc:	add	r3, r3, r2
   211d0:	lsl	r3, r3, #2
   211d4:	add	r3, r1, r3
   211d8:	ldr	r3, [r3, #4]
   211dc:	cmp	r3, #0
   211e0:	beq	21290 <__assert_fail@plt+0xfd4c>
   211e4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   211e8:	ldr	r1, [r3]
   211ec:	ldr	r3, [fp, #-52]	; 0xffffffcc
   211f0:	ldr	r0, [r3, #20]
   211f4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   211f8:	mov	r3, r2
   211fc:	lsl	r3, r3, #1
   21200:	add	r3, r3, r2
   21204:	lsl	r3, r3, #2
   21208:	add	r3, r0, r3
   2120c:	ldr	r3, [r3, #8]
   21210:	ldr	r3, [r3]
   21214:	lsl	r3, r3, #3
   21218:	add	r3, r1, r3
   2121c:	ldrb	r3, [r3, #6]
   21220:	and	r3, r3, #4
   21224:	uxtb	r3, r3
   21228:	cmp	r3, #0
   2122c:	bne	21290 <__assert_fail@plt+0xfd4c>
   21230:	ldr	r3, [fp, #-52]	; 0xffffffcc
   21234:	ldr	r2, [r3]
   21238:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2123c:	lsl	r3, r3, #3
   21240:	add	r3, r2, r3
   21244:	ldr	r3, [r3, #4]
   21248:	ubfx	r3, r3, #8, #10
   2124c:	uxth	r3, r3
   21250:	str	r3, [sp]
   21254:	ldr	r3, [fp, #-56]	; 0xffffffc8
   21258:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2125c:	ldr	r1, [fp, #-56]	; 0xffffffc8
   21260:	ldr	r0, [fp, #-52]	; 0xffffffcc
   21264:	bl	205d8 <__assert_fail@plt+0xf094>
   21268:	str	r0, [fp, #-16]
   2126c:	ldr	r3, [fp, #-16]
   21270:	cmp	r3, #0
   21274:	movne	r3, #1
   21278:	moveq	r3, #0
   2127c:	uxtb	r3, r3
   21280:	cmp	r3, #0
   21284:	beq	21290 <__assert_fail@plt+0xfd4c>
   21288:	ldr	r3, [fp, #-16]
   2128c:	b	2152c <__assert_fail@plt+0xffe8>
   21290:	ldr	r3, [fp, #-52]	; 0xffffffcc
   21294:	ldr	r2, [r3]
   21298:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2129c:	lsl	r3, r3, #3
   212a0:	add	r3, r2, r3
   212a4:	ldrb	r3, [r3, #4]
   212a8:	and	r3, r3, #8
   212ac:	cmp	r3, #0
   212b0:	beq	21488 <__assert_fail@plt+0xff44>
   212b4:	mov	r3, #0
   212b8:	str	r3, [fp, #-8]
   212bc:	b	21458 <__assert_fail@plt+0xff14>
   212c0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   212c4:	ldr	r1, [r3, #20]
   212c8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   212cc:	mov	r3, r2
   212d0:	lsl	r3, r3, #1
   212d4:	add	r3, r3, r2
   212d8:	lsl	r3, r3, #2
   212dc:	add	r3, r1, r3
   212e0:	ldr	r2, [r3, #8]
   212e4:	ldr	r3, [fp, #-8]
   212e8:	lsl	r3, r3, #2
   212ec:	add	r3, r2, r3
   212f0:	ldr	r3, [r3]
   212f4:	str	r3, [fp, #-20]	; 0xffffffec
   212f8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   212fc:	ldr	r1, [r3, #24]
   21300:	ldr	r2, [fp, #-20]	; 0xffffffec
   21304:	mov	r3, r2
   21308:	lsl	r3, r3, #1
   2130c:	add	r3, r3, r2
   21310:	lsl	r3, r3, #2
   21314:	add	r3, r1, r3
   21318:	ldr	r3, [r3, #4]
   2131c:	cmn	r3, #1
   21320:	bne	21330 <__assert_fail@plt+0xfdec>
   21324:	mov	r3, #1
   21328:	strb	r3, [fp, #-9]
   2132c:	b	2144c <__assert_fail@plt+0xff08>
   21330:	ldr	r3, [fp, #-52]	; 0xffffffcc
   21334:	ldr	r1, [r3, #24]
   21338:	ldr	r2, [fp, #-20]	; 0xffffffec
   2133c:	mov	r3, r2
   21340:	lsl	r3, r3, #1
   21344:	add	r3, r3, r2
   21348:	lsl	r3, r3, #2
   2134c:	add	r3, r1, r3
   21350:	ldr	r3, [r3, #4]
   21354:	cmp	r3, #0
   21358:	bne	21398 <__assert_fail@plt+0xfe54>
   2135c:	sub	r0, fp, #44	; 0x2c
   21360:	mov	r3, #0
   21364:	ldr	r2, [fp, #-20]	; 0xffffffec
   21368:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2136c:	bl	210bc <__assert_fail@plt+0xfb78>
   21370:	str	r0, [fp, #-16]
   21374:	ldr	r3, [fp, #-16]
   21378:	cmp	r3, #0
   2137c:	movne	r3, #1
   21380:	moveq	r3, #0
   21384:	uxtb	r3, r3
   21388:	cmp	r3, #0
   2138c:	beq	213d0 <__assert_fail@plt+0xfe8c>
   21390:	ldr	r3, [fp, #-16]
   21394:	b	2152c <__assert_fail@plt+0xffe8>
   21398:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2139c:	ldr	r1, [r3, #24]
   213a0:	ldr	r2, [fp, #-20]	; 0xffffffec
   213a4:	mov	r3, r2
   213a8:	lsl	r3, r3, #1
   213ac:	add	r3, r3, r2
   213b0:	lsl	r3, r3, #2
   213b4:	add	r3, r1, r3
   213b8:	sub	r1, fp, #44	; 0x2c
   213bc:	mov	r0, r3
   213c0:	ldrd	r2, [r0]
   213c4:	strd	r2, [r1]
   213c8:	ldr	r3, [r0, #8]
   213cc:	str	r3, [r1, #8]
   213d0:	sub	r2, fp, #44	; 0x2c
   213d4:	sub	r3, fp, #32
   213d8:	mov	r1, r2
   213dc:	mov	r0, r3
   213e0:	bl	1b994 <__assert_fail@plt+0xa450>
   213e4:	str	r0, [fp, #-16]
   213e8:	ldr	r3, [fp, #-16]
   213ec:	cmp	r3, #0
   213f0:	movne	r3, #1
   213f4:	moveq	r3, #0
   213f8:	uxtb	r3, r3
   213fc:	cmp	r3, #0
   21400:	beq	2140c <__assert_fail@plt+0xfec8>
   21404:	ldr	r3, [fp, #-16]
   21408:	b	2152c <__assert_fail@plt+0xffe8>
   2140c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   21410:	ldr	r1, [r3, #24]
   21414:	ldr	r2, [fp, #-20]	; 0xffffffec
   21418:	mov	r3, r2
   2141c:	lsl	r3, r3, #1
   21420:	add	r3, r3, r2
   21424:	lsl	r3, r3, #2
   21428:	add	r3, r1, r3
   2142c:	ldr	r3, [r3, #4]
   21430:	cmp	r3, #0
   21434:	bne	2144c <__assert_fail@plt+0xff08>
   21438:	mov	r3, #1
   2143c:	strb	r3, [fp, #-9]
   21440:	ldr	r3, [fp, #-36]	; 0xffffffdc
   21444:	mov	r0, r3
   21448:	bl	151ec <__assert_fail@plt+0x3ca8>
   2144c:	ldr	r3, [fp, #-8]
   21450:	add	r3, r3, #1
   21454:	str	r3, [fp, #-8]
   21458:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2145c:	ldr	r1, [r3, #20]
   21460:	ldr	r2, [fp, #-56]	; 0xffffffc8
   21464:	mov	r3, r2
   21468:	lsl	r3, r3, #1
   2146c:	add	r3, r3, r2
   21470:	lsl	r3, r3, #2
   21474:	add	r3, r1, r3
   21478:	ldr	r3, [r3, #4]
   2147c:	ldr	r2, [fp, #-8]
   21480:	cmp	r2, r3
   21484:	blt	212c0 <__assert_fail@plt+0xfd7c>
   21488:	ldrb	r3, [fp, #-9]
   2148c:	cmp	r3, #0
   21490:	beq	214d4 <__assert_fail@plt+0xff90>
   21494:	ldrb	r3, [fp, #-57]	; 0xffffffc7
   21498:	eor	r3, r3, #1
   2149c:	uxtb	r3, r3
   214a0:	cmp	r3, #0
   214a4:	beq	214d4 <__assert_fail@plt+0xff90>
   214a8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   214ac:	ldr	r1, [r3, #24]
   214b0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   214b4:	mov	r3, r2
   214b8:	lsl	r3, r3, #1
   214bc:	add	r3, r3, r2
   214c0:	lsl	r3, r3, #2
   214c4:	add	r3, r1, r3
   214c8:	mov	r2, #0
   214cc:	str	r2, [r3, #4]
   214d0:	b	2150c <__assert_fail@plt+0xffc8>
   214d4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   214d8:	ldr	r1, [r3, #24]
   214dc:	ldr	r2, [fp, #-56]	; 0xffffffc8
   214e0:	mov	r3, r2
   214e4:	lsl	r3, r3, #1
   214e8:	add	r3, r3, r2
   214ec:	lsl	r3, r3, #2
   214f0:	add	r3, r1, r3
   214f4:	mov	r0, r3
   214f8:	sub	r1, fp, #32
   214fc:	ldrd	r2, [r1]
   21500:	strd	r2, [r0]
   21504:	ldr	r3, [r1, #8]
   21508:	str	r3, [r0, #8]
   2150c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   21510:	mov	r0, r3
   21514:	sub	r1, fp, #32
   21518:	ldrd	r2, [r1]
   2151c:	strd	r2, [r0]
   21520:	ldr	r3, [r1, #8]
   21524:	str	r3, [r0, #8]
   21528:	mov	r3, #0
   2152c:	mov	r0, r3
   21530:	sub	sp, fp, #4
   21534:	ldr	fp, [sp]
   21538:	add	sp, sp, #4
   2153c:	pop	{pc}		; (ldr pc, [sp], #4)
   21540:	str	fp, [sp, #-8]!
   21544:	str	lr, [sp, #4]
   21548:	add	fp, sp, #4
   2154c:	sub	sp, sp, #16
   21550:	str	r0, [fp, #-8]
   21554:	str	r1, [fp, #-12]
   21558:	str	r2, [fp, #-16]
   2155c:	ldr	r2, [fp, #-16]
   21560:	ldr	r1, [fp, #-12]
   21564:	ldr	r0, [fp, #-8]
   21568:	bl	21598 <__assert_fail@plt+0x10054>
   2156c:	mov	r2, r0
   21570:	ldr	r3, [fp, #-12]
   21574:	ldr	r3, [r3, #40]	; 0x28
   21578:	add	r2, r2, r3
   2157c:	ldr	r3, [fp, #-12]
   21580:	str	r2, [r3, #40]	; 0x28
   21584:	nop	{0}
   21588:	sub	sp, fp, #4
   2158c:	ldr	fp, [sp]
   21590:	add	sp, sp, #4
   21594:	pop	{pc}		; (ldr pc, [sp], #4)
   21598:	str	fp, [sp, #-8]!
   2159c:	str	lr, [sp, #4]
   215a0:	add	fp, sp, #4
   215a4:	sub	sp, sp, #40	; 0x28
   215a8:	str	r0, [fp, #-32]	; 0xffffffe0
   215ac:	str	r1, [fp, #-36]	; 0xffffffdc
   215b0:	str	r2, [fp, #-40]	; 0xffffffd8
   215b4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   215b8:	ldr	r2, [r3, #56]	; 0x38
   215bc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   215c0:	ldr	r3, [r3, #40]	; 0x28
   215c4:	cmp	r2, r3
   215c8:	bgt	215e0 <__assert_fail@plt+0x1009c>
   215cc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   215d0:	mov	r2, #2
   215d4:	strb	r2, [r3, #4]
   215d8:	mov	r3, #0
   215dc:	b	2228c <__assert_fail@plt+0x10d48>
   215e0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   215e4:	ldr	r3, [r3, #4]
   215e8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   215ec:	ldr	r2, [r2, #40]	; 0x28
   215f0:	add	r3, r3, r2
   215f4:	ldrb	r3, [r3]
   215f8:	strb	r3, [fp, #-5]
   215fc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   21600:	ldrb	r2, [fp, #-5]
   21604:	strb	r2, [r3]
   21608:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2160c:	ldrb	r3, [r2, #6]
   21610:	bfc	r3, #6, #1
   21614:	strb	r3, [r2, #6]
   21618:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2161c:	ldrb	r3, [r2, #6]
   21620:	bfc	r3, #5, #1
   21624:	strb	r3, [r2, #6]
   21628:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2162c:	ldr	r3, [r3, #80]	; 0x50
   21630:	cmp	r3, #1
   21634:	ble	21698 <__assert_fail@plt+0x10154>
   21638:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2163c:	ldr	r2, [r3, #40]	; 0x28
   21640:	ldr	r3, [fp, #-36]	; 0xffffffdc
   21644:	ldr	r3, [r3, #28]
   21648:	cmp	r2, r3
   2164c:	beq	21698 <__assert_fail@plt+0x10154>
   21650:	ldr	r3, [fp, #-36]	; 0xffffffdc
   21654:	ldr	r2, [r3, #8]
   21658:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2165c:	ldr	r3, [r3, #40]	; 0x28
   21660:	lsl	r3, r3, #2
   21664:	add	r3, r2, r3
   21668:	ldr	r3, [r3]
   2166c:	cmn	r3, #1
   21670:	bne	21698 <__assert_fail@plt+0x10154>
   21674:	ldr	r3, [fp, #-32]	; 0xffffffe0
   21678:	mov	r2, #1
   2167c:	strb	r2, [r3, #4]
   21680:	ldr	r2, [fp, #-32]	; 0xffffffe0
   21684:	ldrb	r3, [r2, #6]
   21688:	orr	r3, r3, #32
   2168c:	strb	r3, [r2, #6]
   21690:	mov	r3, #1
   21694:	b	2228c <__assert_fail@plt+0x10d48>
   21698:	ldrb	r3, [fp, #-5]
   2169c:	cmp	r3, #92	; 0x5c
   216a0:	bne	21cd0 <__assert_fail@plt+0x1078c>
   216a4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   216a8:	ldr	r3, [r3, #40]	; 0x28
   216ac:	add	r2, r3, #1
   216b0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   216b4:	ldr	r3, [r3, #48]	; 0x30
   216b8:	cmp	r2, r3
   216bc:	blt	216d4 <__assert_fail@plt+0x10190>
   216c0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   216c4:	mov	r2, #36	; 0x24
   216c8:	strb	r2, [r3, #4]
   216cc:	mov	r3, #1
   216d0:	b	2228c <__assert_fail@plt+0x10d48>
   216d4:	mov	r1, #1
   216d8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   216dc:	bl	1a814 <__assert_fail@plt+0x92d0>
   216e0:	mov	r3, r0
   216e4:	strb	r3, [fp, #-6]
   216e8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   216ec:	ldrb	r2, [fp, #-6]
   216f0:	strb	r2, [r3]
   216f4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   216f8:	mov	r2, #1
   216fc:	strb	r2, [r3, #4]
   21700:	ldr	r3, [fp, #-36]	; 0xffffffdc
   21704:	ldr	r3, [r3, #80]	; 0x50
   21708:	cmp	r3, #1
   2170c:	ble	2177c <__assert_fail@plt+0x10238>
   21710:	ldr	r3, [fp, #-36]	; 0xffffffdc
   21714:	ldr	r3, [r3, #40]	; 0x28
   21718:	add	r3, r3, #1
   2171c:	mov	r1, r3
   21720:	ldr	r0, [fp, #-36]	; 0xffffffdc
   21724:	bl	182b4 <__assert_fail@plt+0x6d70>
   21728:	str	r0, [fp, #-12]
   2172c:	ldr	r0, [fp, #-12]
   21730:	bl	11424 <iswalnum@plt>
   21734:	mov	r3, r0
   21738:	cmp	r3, #0
   2173c:	bne	2174c <__assert_fail@plt+0x10208>
   21740:	ldr	r3, [fp, #-12]
   21744:	cmp	r3, #95	; 0x5f
   21748:	bne	21754 <__assert_fail@plt+0x10210>
   2174c:	mov	r3, #1
   21750:	b	21758 <__assert_fail@plt+0x10214>
   21754:	mov	r3, #0
   21758:	cmp	r3, #0
   2175c:	movne	r3, #1
   21760:	moveq	r3, #0
   21764:	uxtb	r1, r3
   21768:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2176c:	ldrb	r3, [r2, #6]
   21770:	bfi	r3, r1, #6, #1
   21774:	strb	r3, [r2, #6]
   21778:	b	217dc <__assert_fail@plt+0x10298>
   2177c:	bl	113d0 <__ctype_b_loc@plt>
   21780:	mov	r3, r0
   21784:	ldr	r2, [r3]
   21788:	ldrb	r3, [fp, #-6]
   2178c:	lsl	r3, r3, #1
   21790:	add	r3, r2, r3
   21794:	ldrh	r3, [r3]
   21798:	and	r3, r3, #8
   2179c:	cmp	r3, #0
   217a0:	bne	217b0 <__assert_fail@plt+0x1026c>
   217a4:	ldrb	r3, [fp, #-6]
   217a8:	cmp	r3, #95	; 0x5f
   217ac:	bne	217b8 <__assert_fail@plt+0x10274>
   217b0:	mov	r3, #1
   217b4:	b	217bc <__assert_fail@plt+0x10278>
   217b8:	mov	r3, #0
   217bc:	cmp	r3, #0
   217c0:	movne	r3, #1
   217c4:	moveq	r3, #0
   217c8:	uxtb	r1, r3
   217cc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   217d0:	ldrb	r3, [r2, #6]
   217d4:	bfi	r3, r1, #6, #1
   217d8:	strb	r3, [r2, #6]
   217dc:	ldrb	r3, [fp, #-6]
   217e0:	sub	r3, r3, #39	; 0x27
   217e4:	cmp	r3, #86	; 0x56
   217e8:	ldrls	pc, [pc, r3, lsl #2]
   217ec:	b	21c34 <__assert_fail@plt+0x106f0>
   217f0:	andeq	r1, r2, r8, lsl #22
   217f4:	andeq	r1, r2, r4, lsr fp
   217f8:	andeq	r1, r2, r4, asr fp
   217fc:	andeq	r1, r2, r4, lsr ip
   21800:	andeq	r1, r2, r4, ror fp
   21804:	andeq	r1, r2, r4, lsr ip
   21808:	andeq	r1, r2, r4, lsr ip
   2180c:	andeq	r1, r2, r4, lsr ip
   21810:	andeq	r1, r2, r4, lsr ip
   21814:	andeq	r1, r2, r4, lsr ip
   21818:	andeq	r1, r2, ip, ror r9
   2181c:	andeq	r1, r2, ip, ror r9
   21820:	andeq	r1, r2, ip, ror r9
   21824:	andeq	r1, r2, ip, ror r9
   21828:	andeq	r1, r2, ip, ror r9
   2182c:	andeq	r1, r2, ip, ror r9
   21830:	andeq	r1, r2, ip, ror r9
   21834:	andeq	r1, r2, ip, ror r9
   21838:	andeq	r1, r2, ip, ror r9
   2183c:	andeq	r1, r2, r4, lsr ip
   21840:	andeq	r1, r2, r4, lsr ip
   21844:	andeq	r1, r2, ip, lsr #19
   21848:	andeq	r1, r2, r4, lsr ip
   2184c:	ldrdeq	r1, [r2], -r8
   21850:	andeq	r1, r2, r4, lsr #23
   21854:	andeq	r1, r2, r4, lsr ip
   21858:	andeq	r1, r2, r4, lsr ip
   2185c:	andeq	r1, r2, r0, lsr sl
   21860:	andeq	r1, r2, r4, lsr ip
   21864:	andeq	r1, r2, r4, lsr ip
   21868:	andeq	r1, r2, r4, lsr ip
   2186c:	andeq	r1, r2, r4, lsr ip
   21870:	andeq	r1, r2, r4, lsr ip
   21874:	andeq	r1, r2, r4, lsr ip
   21878:	andeq	r1, r2, r4, lsr ip
   2187c:	andeq	r1, r2, r4, lsr ip
   21880:	andeq	r1, r2, r4, lsr ip
   21884:	andeq	r1, r2, r4, lsr ip
   21888:	andeq	r1, r2, r4, lsr ip
   2188c:	andeq	r1, r2, r4, lsr ip
   21890:	andeq	r1, r2, r4, lsr ip
   21894:	andeq	r1, r2, r4, lsr ip
   21898:	andeq	r1, r2, r4, lsr ip
   2189c:	andeq	r1, r2, r4, lsr ip
   218a0:			; <UNDEFINED> instruction: 0x00021abc
   218a4:	andeq	r1, r2, r4, lsr ip
   218a8:	andeq	r1, r2, r4, lsr ip
   218ac:	andeq	r1, r2, r4, lsr ip
   218b0:	andeq	r1, r2, ip, ror sl
   218b4:	andeq	r1, r2, r4, lsr ip
   218b8:	andeq	r1, r2, r4, lsr ip
   218bc:	andeq	r1, r2, r4, lsr ip
   218c0:	andeq	r1, r2, r4, lsr ip
   218c4:	andeq	r1, r2, r4, lsr ip
   218c8:	andeq	r1, r2, r4, lsr ip
   218cc:	andeq	r1, r2, r4, lsr ip
   218d0:	andeq	r1, r2, r4, lsr ip
   218d4:	ldrdeq	r1, [r2], -ip
   218d8:	andeq	r1, r2, r4, lsr ip
   218dc:	andeq	r1, r2, r4, lsl #20
   218e0:	andeq	r1, r2, r4, lsr ip
   218e4:	andeq	r1, r2, r4, lsr ip
   218e8:	andeq	r1, r2, r4, lsr ip
   218ec:	andeq	r1, r2, r4, lsr ip
   218f0:	andeq	r1, r2, r4, lsr ip
   218f4:	andeq	r1, r2, r4, lsr ip
   218f8:	andeq	r1, r2, r4, lsr ip
   218fc:	andeq	r1, r2, r4, lsr ip
   21900:	andeq	r1, r2, r4, lsr ip
   21904:	andeq	r1, r2, r4, lsr ip
   21908:	andeq	r1, r2, r4, lsr ip
   2190c:	andeq	r1, r2, r4, lsr ip
   21910:	andeq	r1, r2, r4, lsr ip
   21914:	andeq	r1, r2, r4, lsr ip
   21918:	andeq	r1, r2, r4, lsr ip
   2191c:	andeq	r1, r2, r4, lsr ip
   21920:	muleq	r2, ip, sl
   21924:	andeq	r1, r2, r4, lsr ip
   21928:	andeq	r1, r2, r4, lsr ip
   2192c:	andeq	r1, r2, r4, lsr ip
   21930:	andeq	r1, r2, ip, asr sl
   21934:	andeq	r1, r2, r4, lsr ip
   21938:	andeq	r1, r2, r4, lsr ip
   2193c:	andeq	r1, r2, r4, lsr ip
   21940:	ldrdeq	r1, [r2], -r4
   21944:	andeq	r1, r2, ip, asr #18
   21948:	andeq	r1, r2, r4, lsl #24
   2194c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   21950:	and	r3, r3, #1024	; 0x400
   21954:	cmp	r3, #0
   21958:	bne	21c3c <__assert_fail@plt+0x106f8>
   2195c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   21960:	and	r3, r3, #32768	; 0x8000
   21964:	cmp	r3, #0
   21968:	bne	21c3c <__assert_fail@plt+0x106f8>
   2196c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   21970:	mov	r2, #10
   21974:	strb	r2, [r3, #4]
   21978:	b	21c3c <__assert_fail@plt+0x106f8>
   2197c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   21980:	and	r3, r3, #16384	; 0x4000
   21984:	cmp	r3, #0
   21988:	bne	21c44 <__assert_fail@plt+0x10700>
   2198c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   21990:	mov	r2, #4
   21994:	strb	r2, [r3, #4]
   21998:	ldrb	r3, [fp, #-6]
   2199c:	sub	r2, r3, #49	; 0x31
   219a0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   219a4:	str	r2, [r3]
   219a8:	b	21c44 <__assert_fail@plt+0x10700>
   219ac:	ldr	r3, [fp, #-40]	; 0xffffffd8
   219b0:	and	r3, r3, #524288	; 0x80000
   219b4:	cmp	r3, #0
   219b8:	bne	21c4c <__assert_fail@plt+0x10708>
   219bc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   219c0:	mov	r2, #12
   219c4:	strb	r2, [r3, #4]
   219c8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   219cc:	mov	r2, #6
   219d0:	str	r2, [r3]
   219d4:	b	21c4c <__assert_fail@plt+0x10708>
   219d8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   219dc:	and	r3, r3, #524288	; 0x80000
   219e0:	cmp	r3, #0
   219e4:	bne	21c54 <__assert_fail@plt+0x10710>
   219e8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   219ec:	mov	r2, #12
   219f0:	strb	r2, [r3, #4]
   219f4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   219f8:	mov	r2, #9
   219fc:	str	r2, [r3]
   21a00:	b	21c54 <__assert_fail@plt+0x10710>
   21a04:	ldr	r3, [fp, #-40]	; 0xffffffd8
   21a08:	and	r3, r3, #524288	; 0x80000
   21a0c:	cmp	r3, #0
   21a10:	bne	21c5c <__assert_fail@plt+0x10718>
   21a14:	ldr	r3, [fp, #-32]	; 0xffffffe0
   21a18:	mov	r2, #12
   21a1c:	strb	r2, [r3, #4]
   21a20:	ldr	r3, [fp, #-32]	; 0xffffffe0
   21a24:	mov	r2, #256	; 0x100
   21a28:	str	r2, [r3]
   21a2c:	b	21c5c <__assert_fail@plt+0x10718>
   21a30:	ldr	r3, [fp, #-40]	; 0xffffffd8
   21a34:	and	r3, r3, #524288	; 0x80000
   21a38:	cmp	r3, #0
   21a3c:	bne	21c64 <__assert_fail@plt+0x10720>
   21a40:	ldr	r3, [fp, #-32]	; 0xffffffe0
   21a44:	mov	r2, #12
   21a48:	strb	r2, [r3, #4]
   21a4c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   21a50:	mov	r2, #512	; 0x200
   21a54:	str	r2, [r3]
   21a58:	b	21c64 <__assert_fail@plt+0x10720>
   21a5c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   21a60:	and	r3, r3, #524288	; 0x80000
   21a64:	cmp	r3, #0
   21a68:	bne	21c6c <__assert_fail@plt+0x10728>
   21a6c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   21a70:	mov	r2, #32
   21a74:	strb	r2, [r3, #4]
   21a78:	b	21c6c <__assert_fail@plt+0x10728>
   21a7c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   21a80:	and	r3, r3, #524288	; 0x80000
   21a84:	cmp	r3, #0
   21a88:	bne	21c74 <__assert_fail@plt+0x10730>
   21a8c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   21a90:	mov	r2, #33	; 0x21
   21a94:	strb	r2, [r3, #4]
   21a98:	b	21c74 <__assert_fail@plt+0x10730>
   21a9c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   21aa0:	and	r3, r3, #524288	; 0x80000
   21aa4:	cmp	r3, #0
   21aa8:	bne	21c7c <__assert_fail@plt+0x10738>
   21aac:	ldr	r3, [fp, #-32]	; 0xffffffe0
   21ab0:	mov	r2, #34	; 0x22
   21ab4:	strb	r2, [r3, #4]
   21ab8:	b	21c7c <__assert_fail@plt+0x10738>
   21abc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   21ac0:	and	r3, r3, #524288	; 0x80000
   21ac4:	cmp	r3, #0
   21ac8:	bne	21c84 <__assert_fail@plt+0x10740>
   21acc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   21ad0:	mov	r2, #35	; 0x23
   21ad4:	strb	r2, [r3, #4]
   21ad8:	b	21c84 <__assert_fail@plt+0x10740>
   21adc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   21ae0:	and	r3, r3, #524288	; 0x80000
   21ae4:	cmp	r3, #0
   21ae8:	bne	21c8c <__assert_fail@plt+0x10748>
   21aec:	ldr	r3, [fp, #-32]	; 0xffffffe0
   21af0:	mov	r2, #12
   21af4:	strb	r2, [r3, #4]
   21af8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   21afc:	mov	r2, #64	; 0x40
   21b00:	str	r2, [r3]
   21b04:	b	21c8c <__assert_fail@plt+0x10748>
   21b08:	ldr	r3, [fp, #-40]	; 0xffffffd8
   21b0c:	and	r3, r3, #524288	; 0x80000
   21b10:	cmp	r3, #0
   21b14:	bne	21c94 <__assert_fail@plt+0x10750>
   21b18:	ldr	r3, [fp, #-32]	; 0xffffffe0
   21b1c:	mov	r2, #12
   21b20:	strb	r2, [r3, #4]
   21b24:	ldr	r3, [fp, #-32]	; 0xffffffe0
   21b28:	mov	r2, #128	; 0x80
   21b2c:	str	r2, [r3]
   21b30:	b	21c94 <__assert_fail@plt+0x10750>
   21b34:	ldr	r3, [fp, #-40]	; 0xffffffd8
   21b38:	and	r3, r3, #8192	; 0x2000
   21b3c:	cmp	r3, #0
   21b40:	bne	21c9c <__assert_fail@plt+0x10758>
   21b44:	ldr	r3, [fp, #-32]	; 0xffffffe0
   21b48:	mov	r2, #8
   21b4c:	strb	r2, [r3, #4]
   21b50:	b	21c9c <__assert_fail@plt+0x10758>
   21b54:	ldr	r3, [fp, #-40]	; 0xffffffd8
   21b58:	and	r3, r3, #8192	; 0x2000
   21b5c:	cmp	r3, #0
   21b60:	bne	21ca4 <__assert_fail@plt+0x10760>
   21b64:	ldr	r3, [fp, #-32]	; 0xffffffe0
   21b68:	mov	r2, #9
   21b6c:	strb	r2, [r3, #4]
   21b70:	b	21ca4 <__assert_fail@plt+0x10760>
   21b74:	ldr	r3, [fp, #-40]	; 0xffffffd8
   21b78:	and	r3, r3, #1024	; 0x400
   21b7c:	cmp	r3, #0
   21b80:	bne	21cac <__assert_fail@plt+0x10768>
   21b84:	ldr	r3, [fp, #-40]	; 0xffffffd8
   21b88:	and	r3, r3, #2
   21b8c:	cmp	r3, #0
   21b90:	beq	21cac <__assert_fail@plt+0x10768>
   21b94:	ldr	r3, [fp, #-32]	; 0xffffffe0
   21b98:	mov	r2, #18
   21b9c:	strb	r2, [r3, #4]
   21ba0:	b	21cac <__assert_fail@plt+0x10768>
   21ba4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   21ba8:	and	r3, r3, #1024	; 0x400
   21bac:	cmp	r3, #0
   21bb0:	bne	21cb4 <__assert_fail@plt+0x10770>
   21bb4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   21bb8:	and	r3, r3, #2
   21bbc:	cmp	r3, #0
   21bc0:	beq	21cb4 <__assert_fail@plt+0x10770>
   21bc4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   21bc8:	mov	r2, #19
   21bcc:	strb	r2, [r3, #4]
   21bd0:	b	21cb4 <__assert_fail@plt+0x10770>
   21bd4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   21bd8:	and	r3, r3, #512	; 0x200
   21bdc:	cmp	r3, #0
   21be0:	beq	21cbc <__assert_fail@plt+0x10778>
   21be4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   21be8:	and	r3, r3, #4096	; 0x1000
   21bec:	cmp	r3, #0
   21bf0:	bne	21cbc <__assert_fail@plt+0x10778>
   21bf4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   21bf8:	mov	r2, #23
   21bfc:	strb	r2, [r3, #4]
   21c00:	b	21cbc <__assert_fail@plt+0x10778>
   21c04:	ldr	r3, [fp, #-40]	; 0xffffffd8
   21c08:	and	r3, r3, #512	; 0x200
   21c0c:	cmp	r3, #0
   21c10:	beq	21cc4 <__assert_fail@plt+0x10780>
   21c14:	ldr	r3, [fp, #-40]	; 0xffffffd8
   21c18:	and	r3, r3, #4096	; 0x1000
   21c1c:	cmp	r3, #0
   21c20:	bne	21cc4 <__assert_fail@plt+0x10780>
   21c24:	ldr	r3, [fp, #-32]	; 0xffffffe0
   21c28:	mov	r2, #24
   21c2c:	strb	r2, [r3, #4]
   21c30:	b	21cc4 <__assert_fail@plt+0x10780>
   21c34:	nop	{0}
   21c38:	b	21cc8 <__assert_fail@plt+0x10784>
   21c3c:	nop	{0}
   21c40:	b	21cc8 <__assert_fail@plt+0x10784>
   21c44:	nop	{0}
   21c48:	b	21cc8 <__assert_fail@plt+0x10784>
   21c4c:	nop	{0}
   21c50:	b	21cc8 <__assert_fail@plt+0x10784>
   21c54:	nop	{0}
   21c58:	b	21cc8 <__assert_fail@plt+0x10784>
   21c5c:	nop	{0}
   21c60:	b	21cc8 <__assert_fail@plt+0x10784>
   21c64:	nop	{0}
   21c68:	b	21cc8 <__assert_fail@plt+0x10784>
   21c6c:	nop	{0}
   21c70:	b	21cc8 <__assert_fail@plt+0x10784>
   21c74:	nop	{0}
   21c78:	b	21cc8 <__assert_fail@plt+0x10784>
   21c7c:	nop	{0}
   21c80:	b	21cc8 <__assert_fail@plt+0x10784>
   21c84:	nop	{0}
   21c88:	b	21cc8 <__assert_fail@plt+0x10784>
   21c8c:	nop	{0}
   21c90:	b	21cc8 <__assert_fail@plt+0x10784>
   21c94:	nop	{0}
   21c98:	b	21cc8 <__assert_fail@plt+0x10784>
   21c9c:	nop	{0}
   21ca0:	b	21cc8 <__assert_fail@plt+0x10784>
   21ca4:	nop	{0}
   21ca8:	b	21cc8 <__assert_fail@plt+0x10784>
   21cac:	nop	{0}
   21cb0:	b	21cc8 <__assert_fail@plt+0x10784>
   21cb4:	nop	{0}
   21cb8:	b	21cc8 <__assert_fail@plt+0x10784>
   21cbc:	nop	{0}
   21cc0:	b	21cc8 <__assert_fail@plt+0x10784>
   21cc4:	nop	{0}
   21cc8:	mov	r3, #2
   21ccc:	b	2228c <__assert_fail@plt+0x10d48>
   21cd0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   21cd4:	mov	r2, #1
   21cd8:	strb	r2, [r3, #4]
   21cdc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   21ce0:	ldr	r3, [r3, #80]	; 0x50
   21ce4:	cmp	r3, #1
   21ce8:	ble	21d54 <__assert_fail@plt+0x10810>
   21cec:	ldr	r3, [fp, #-36]	; 0xffffffdc
   21cf0:	ldr	r3, [r3, #40]	; 0x28
   21cf4:	mov	r1, r3
   21cf8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   21cfc:	bl	182b4 <__assert_fail@plt+0x6d70>
   21d00:	str	r0, [fp, #-16]
   21d04:	ldr	r0, [fp, #-16]
   21d08:	bl	11424 <iswalnum@plt>
   21d0c:	mov	r3, r0
   21d10:	cmp	r3, #0
   21d14:	bne	21d24 <__assert_fail@plt+0x107e0>
   21d18:	ldr	r3, [fp, #-16]
   21d1c:	cmp	r3, #95	; 0x5f
   21d20:	bne	21d2c <__assert_fail@plt+0x107e8>
   21d24:	mov	r3, #1
   21d28:	b	21d30 <__assert_fail@plt+0x107ec>
   21d2c:	mov	r3, #0
   21d30:	cmp	r3, #0
   21d34:	movne	r3, #1
   21d38:	moveq	r3, #0
   21d3c:	uxtb	r1, r3
   21d40:	ldr	r2, [fp, #-32]	; 0xffffffe0
   21d44:	ldrb	r3, [r2, #6]
   21d48:	bfi	r3, r1, #6, #1
   21d4c:	strb	r3, [r2, #6]
   21d50:	b	21db4 <__assert_fail@plt+0x10870>
   21d54:	bl	113d0 <__ctype_b_loc@plt>
   21d58:	mov	r3, r0
   21d5c:	ldr	r2, [r3]
   21d60:	ldr	r3, [fp, #-32]	; 0xffffffe0
   21d64:	ldrb	r3, [r3]
   21d68:	lsl	r3, r3, #1
   21d6c:	add	r3, r2, r3
   21d70:	ldrh	r3, [r3]
   21d74:	and	r3, r3, #8
   21d78:	cmp	r3, #0
   21d7c:	bne	21d90 <__assert_fail@plt+0x1084c>
   21d80:	ldr	r3, [fp, #-32]	; 0xffffffe0
   21d84:	ldrb	r3, [r3]
   21d88:	cmp	r3, #95	; 0x5f
   21d8c:	bne	21d98 <__assert_fail@plt+0x10854>
   21d90:	mov	r3, #1
   21d94:	b	21d9c <__assert_fail@plt+0x10858>
   21d98:	mov	r3, #0
   21d9c:	and	r3, r3, #1
   21da0:	uxtb	r1, r3
   21da4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   21da8:	ldrb	r3, [r2, #6]
   21dac:	bfi	r3, r1, #6, #1
   21db0:	strb	r3, [r2, #6]
   21db4:	ldrb	r3, [fp, #-5]
   21db8:	sub	r3, r3, #10
   21dbc:	cmp	r3, #115	; 0x73
   21dc0:	ldrls	pc, [pc, r3, lsl #2]
   21dc4:	b	22234 <__assert_fail@plt+0x10cf0>
   21dc8:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   21dcc:	andeq	r2, r2, r4, lsr r2
   21dd0:	andeq	r2, r2, r4, lsr r2
   21dd4:	andeq	r2, r2, r4, lsr r2
   21dd8:	andeq	r2, r2, r4, lsr r2
   21ddc:	andeq	r2, r2, r4, lsr r2
   21de0:	andeq	r2, r2, r4, lsr r2
   21de4:	andeq	r2, r2, r4, lsr r2
   21de8:	andeq	r2, r2, r4, lsr r2
   21dec:	andeq	r2, r2, r4, lsr r2
   21df0:	andeq	r2, r2, r4, lsr r2
   21df4:	andeq	r2, r2, r4, lsr r2
   21df8:	andeq	r2, r2, r4, lsr r2
   21dfc:	andeq	r2, r2, r4, lsr r2
   21e00:	andeq	r2, r2, r4, lsr r2
   21e04:	andeq	r2, r2, r4, lsr r2
   21e08:	andeq	r2, r2, r4, lsr r2
   21e0c:	andeq	r2, r2, r4, lsr r2
   21e10:	andeq	r2, r2, r4, lsr r2
   21e14:	andeq	r2, r2, r4, lsr r2
   21e18:	andeq	r2, r2, r4, lsr r2
   21e1c:	andeq	r2, r2, r4, lsr r2
   21e20:	andeq	r2, r2, r4, lsr r2
   21e24:	andeq	r2, r2, r4, lsr r2
   21e28:	andeq	r2, r2, r4, lsr r2
   21e2c:	andeq	r2, r2, r4, lsr r2
   21e30:	muleq	r2, r8, r1
   21e34:	andeq	r2, r2, r4, lsr r2
   21e38:	andeq	r2, r2, r4, lsr r2
   21e3c:	andeq	r2, r2, r4, lsr r2
   21e40:	strheq	r2, [r2], -r8
   21e44:	ldrdeq	r2, [r2], -r8
   21e48:	andeq	r1, r2, r8, ror #31
   21e4c:	strdeq	r1, [r2], -r8
   21e50:	andeq	r2, r2, r4, lsr r2
   21e54:	andeq	r2, r2, r4, lsr r2
   21e58:	andeq	r2, r2, r8, lsl #2
   21e5c:	andeq	r2, r2, r4, lsr r2
   21e60:	andeq	r2, r2, r4, lsr r2
   21e64:	andeq	r2, r2, r4, lsr r2
   21e68:	andeq	r2, r2, r4, lsr r2
   21e6c:	andeq	r2, r2, r4, lsr r2
   21e70:	andeq	r2, r2, r4, lsr r2
   21e74:	andeq	r2, r2, r4, lsr r2
   21e78:	andeq	r2, r2, r4, lsr r2
   21e7c:	andeq	r2, r2, r4, lsr r2
   21e80:	andeq	r2, r2, r4, lsr r2
   21e84:	andeq	r2, r2, r4, lsr r2
   21e88:	andeq	r2, r2, r4, lsr r2
   21e8c:	andeq	r2, r2, r4, lsr r2
   21e90:	andeq	r2, r2, r4, lsr r2
   21e94:	andeq	r2, r2, r4, lsr r2
   21e98:	andeq	r2, r2, r4, lsr r2
   21e9c:	andeq	r2, r2, r8, lsr #32
   21ea0:	andeq	r2, r2, r4, lsr r2
   21ea4:	andeq	r2, r2, r4, lsr r2
   21ea8:	andeq	r2, r2, r4, lsr r2
   21eac:	andeq	r2, r2, r4, lsr r2
   21eb0:	andeq	r2, r2, r4, lsr r2
   21eb4:	andeq	r2, r2, r4, lsr r2
   21eb8:	andeq	r2, r2, r4, lsr r2
   21ebc:	andeq	r2, r2, r4, lsr r2
   21ec0:	andeq	r2, r2, r4, lsr r2
   21ec4:	andeq	r2, r2, r4, lsr r2
   21ec8:	andeq	r2, r2, r4, lsr r2
   21ecc:	andeq	r2, r2, r4, lsr r2
   21ed0:	andeq	r2, r2, r4, lsr r2
   21ed4:	andeq	r2, r2, r4, lsr r2
   21ed8:	andeq	r2, r2, r4, lsr r2
   21edc:	andeq	r2, r2, r4, lsr r2
   21ee0:	andeq	r2, r2, r4, lsr r2
   21ee4:	andeq	r2, r2, r4, lsr r2
   21ee8:	andeq	r2, r2, r4, lsr r2
   21eec:	andeq	r2, r2, r4, lsr r2
   21ef0:	andeq	r2, r2, r4, lsr r2
   21ef4:	andeq	r2, r2, r4, lsr r2
   21ef8:	andeq	r2, r2, r4, lsr r2
   21efc:	andeq	r2, r2, r4, lsr r2
   21f00:	andeq	r2, r2, r4, lsr r2
   21f04:	andeq	r2, r2, r4, lsr r2
   21f08:	andeq	r2, r2, r4, lsr r2
   21f0c:	strdeq	r2, [r2], -r8
   21f10:	andeq	r2, r2, r4, lsr r2
   21f14:	andeq	r2, r2, r4, lsr r2
   21f18:	andeq	r2, r2, r8, lsl r1
   21f1c:	andeq	r2, r2, r4, lsr r2
   21f20:	andeq	r2, r2, r4, lsr r2
   21f24:	andeq	r2, r2, r4, lsr r2
   21f28:	andeq	r2, r2, r4, lsr r2
   21f2c:	andeq	r2, r2, r4, lsr r2
   21f30:	andeq	r2, r2, r4, lsr r2
   21f34:	andeq	r2, r2, r4, lsr r2
   21f38:	andeq	r2, r2, r4, lsr r2
   21f3c:	andeq	r2, r2, r4, lsr r2
   21f40:	andeq	r2, r2, r4, lsr r2
   21f44:	andeq	r2, r2, r4, lsr r2
   21f48:	andeq	r2, r2, r4, lsr r2
   21f4c:	andeq	r2, r2, r4, lsr r2
   21f50:	andeq	r2, r2, r4, lsr r2
   21f54:	andeq	r2, r2, r4, lsr r2
   21f58:	andeq	r2, r2, r4, lsr r2
   21f5c:	andeq	r2, r2, r4, lsr r2
   21f60:	andeq	r2, r2, r4, lsr r2
   21f64:	andeq	r2, r2, r4, lsr r2
   21f68:	andeq	r2, r2, r4, lsr r2
   21f6c:	andeq	r2, r2, r4, lsr r2
   21f70:	andeq	r2, r2, r4, lsr r2
   21f74:	andeq	r2, r2, r4, lsr r2
   21f78:	andeq	r2, r2, r4, lsr r2
   21f7c:	andeq	r2, r2, r4, lsr r2
   21f80:	andeq	r2, r2, r4, lsr r2
   21f84:	andeq	r2, r2, r4, lsr r2
   21f88:	andeq	r2, r2, r4, lsr r2
   21f8c:	andeq	r2, r2, r8, asr r0
   21f90:			; <UNDEFINED> instruction: 0x00021fb8
   21f94:	andeq	r2, r2, r8, lsl #1
   21f98:	ldr	r3, [fp, #-40]	; 0xffffffd8
   21f9c:	and	r3, r3, #2048	; 0x800
   21fa0:	cmp	r3, #0
   21fa4:	beq	2223c <__assert_fail@plt+0x10cf8>
   21fa8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   21fac:	mov	r2, #10
   21fb0:	strb	r2, [r3, #4]
   21fb4:	b	2223c <__assert_fail@plt+0x10cf8>
   21fb8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   21fbc:	and	r3, r3, #1024	; 0x400
   21fc0:	cmp	r3, #0
   21fc4:	bne	22244 <__assert_fail@plt+0x10d00>
   21fc8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   21fcc:	and	r3, r3, #32768	; 0x8000
   21fd0:	cmp	r3, #0
   21fd4:	beq	22244 <__assert_fail@plt+0x10d00>
   21fd8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   21fdc:	mov	r2, #10
   21fe0:	strb	r2, [r3, #4]
   21fe4:	b	22244 <__assert_fail@plt+0x10d00>
   21fe8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   21fec:	mov	r2, #11
   21ff0:	strb	r2, [r3, #4]
   21ff4:	b	22288 <__assert_fail@plt+0x10d44>
   21ff8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   21ffc:	and	r3, r3, #1024	; 0x400
   22000:	cmp	r3, #0
   22004:	bne	2224c <__assert_fail@plt+0x10d08>
   22008:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2200c:	and	r3, r3, #2
   22010:	cmp	r3, #0
   22014:	bne	2224c <__assert_fail@plt+0x10d08>
   22018:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2201c:	mov	r2, #18
   22020:	strb	r2, [r3, #4]
   22024:	b	2224c <__assert_fail@plt+0x10d08>
   22028:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2202c:	and	r3, r3, #1024	; 0x400
   22030:	cmp	r3, #0
   22034:	bne	22254 <__assert_fail@plt+0x10d10>
   22038:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2203c:	and	r3, r3, #2
   22040:	cmp	r3, #0
   22044:	bne	22254 <__assert_fail@plt+0x10d10>
   22048:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2204c:	mov	r2, #19
   22050:	strb	r2, [r3, #4]
   22054:	b	22254 <__assert_fail@plt+0x10d10>
   22058:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2205c:	and	r3, r3, #512	; 0x200
   22060:	cmp	r3, #0
   22064:	beq	2225c <__assert_fail@plt+0x10d18>
   22068:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2206c:	and	r3, r3, #4096	; 0x1000
   22070:	cmp	r3, #0
   22074:	beq	2225c <__assert_fail@plt+0x10d18>
   22078:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2207c:	mov	r2, #23
   22080:	strb	r2, [r3, #4]
   22084:	b	2225c <__assert_fail@plt+0x10d18>
   22088:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2208c:	and	r3, r3, #512	; 0x200
   22090:	cmp	r3, #0
   22094:	beq	22264 <__assert_fail@plt+0x10d20>
   22098:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2209c:	and	r3, r3, #4096	; 0x1000
   220a0:	cmp	r3, #0
   220a4:	beq	22264 <__assert_fail@plt+0x10d20>
   220a8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   220ac:	mov	r2, #24
   220b0:	strb	r2, [r3, #4]
   220b4:	b	22264 <__assert_fail@plt+0x10d20>
   220b8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   220bc:	and	r3, r3, #8192	; 0x2000
   220c0:	cmp	r3, #0
   220c4:	beq	2226c <__assert_fail@plt+0x10d28>
   220c8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   220cc:	mov	r2, #8
   220d0:	strb	r2, [r3, #4]
   220d4:	b	2226c <__assert_fail@plt+0x10d28>
   220d8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   220dc:	and	r3, r3, #8192	; 0x2000
   220e0:	cmp	r3, #0
   220e4:	beq	22274 <__assert_fail@plt+0x10d30>
   220e8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   220ec:	mov	r2, #9
   220f0:	strb	r2, [r3, #4]
   220f4:	b	22274 <__assert_fail@plt+0x10d30>
   220f8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   220fc:	mov	r2, #20
   22100:	strb	r2, [r3, #4]
   22104:	b	22288 <__assert_fail@plt+0x10d44>
   22108:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2210c:	mov	r2, #5
   22110:	strb	r2, [r3, #4]
   22114:	b	22288 <__assert_fail@plt+0x10d44>
   22118:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2211c:	mov	r3, #8
   22120:	movt	r3, #128	; 0x80
   22124:	and	r3, r3, r2
   22128:	cmp	r3, #0
   2212c:	bne	2217c <__assert_fail@plt+0x10c38>
   22130:	ldr	r3, [fp, #-36]	; 0xffffffdc
   22134:	ldr	r3, [r3, #40]	; 0x28
   22138:	cmp	r3, #0
   2213c:	beq	2217c <__assert_fail@plt+0x10c38>
   22140:	ldr	r3, [fp, #-36]	; 0xffffffdc
   22144:	ldr	r2, [r3, #4]
   22148:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2214c:	ldr	r3, [r3, #40]	; 0x28
   22150:	sub	r3, r3, #1
   22154:	add	r3, r2, r3
   22158:	ldrb	r3, [r3]
   2215c:	strb	r3, [fp, #-17]	; 0xffffffef
   22160:	ldr	r3, [fp, #-40]	; 0xffffffd8
   22164:	and	r3, r3, #2048	; 0x800
   22168:	cmp	r3, #0
   2216c:	beq	2227c <__assert_fail@plt+0x10d38>
   22170:	ldrb	r3, [fp, #-17]	; 0xffffffef
   22174:	cmp	r3, #10
   22178:	bne	2227c <__assert_fail@plt+0x10d38>
   2217c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   22180:	mov	r2, #12
   22184:	strb	r2, [r3, #4]
   22188:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2218c:	mov	r2, #16
   22190:	str	r2, [r3]
   22194:	b	22288 <__assert_fail@plt+0x10d44>
   22198:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2219c:	and	r3, r3, #8
   221a0:	cmp	r3, #0
   221a4:	bne	22218 <__assert_fail@plt+0x10cd4>
   221a8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   221ac:	ldr	r3, [r3, #40]	; 0x28
   221b0:	add	r2, r3, #1
   221b4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   221b8:	ldr	r3, [r3, #48]	; 0x30
   221bc:	cmp	r2, r3
   221c0:	beq	22218 <__assert_fail@plt+0x10cd4>
   221c4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   221c8:	ldr	r3, [r3, #40]	; 0x28
   221cc:	add	r2, r3, #1
   221d0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   221d4:	str	r2, [r3, #40]	; 0x28
   221d8:	sub	r3, fp, #28
   221dc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   221e0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   221e4:	mov	r0, r3
   221e8:	bl	21598 <__assert_fail@plt+0x10054>
   221ec:	ldr	r3, [fp, #-36]	; 0xffffffdc
   221f0:	ldr	r3, [r3, #40]	; 0x28
   221f4:	sub	r2, r3, #1
   221f8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   221fc:	str	r2, [r3, #40]	; 0x28
   22200:	ldrb	r3, [fp, #-24]	; 0xffffffe8
   22204:	cmp	r3, #10
   22208:	beq	22218 <__assert_fail@plt+0x10cd4>
   2220c:	ldrb	r3, [fp, #-24]	; 0xffffffe8
   22210:	cmp	r3, #9
   22214:	bne	22284 <__assert_fail@plt+0x10d40>
   22218:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2221c:	mov	r2, #12
   22220:	strb	r2, [r3, #4]
   22224:	ldr	r3, [fp, #-32]	; 0xffffffe0
   22228:	mov	r2, #32
   2222c:	str	r2, [r3]
   22230:	b	22288 <__assert_fail@plt+0x10d44>
   22234:	nop	{0}
   22238:	b	22288 <__assert_fail@plt+0x10d44>
   2223c:	nop	{0}
   22240:	b	22288 <__assert_fail@plt+0x10d44>
   22244:	nop	{0}
   22248:	b	22288 <__assert_fail@plt+0x10d44>
   2224c:	nop	{0}
   22250:	b	22288 <__assert_fail@plt+0x10d44>
   22254:	nop	{0}
   22258:	b	22288 <__assert_fail@plt+0x10d44>
   2225c:	nop	{0}
   22260:	b	22288 <__assert_fail@plt+0x10d44>
   22264:	nop	{0}
   22268:	b	22288 <__assert_fail@plt+0x10d44>
   2226c:	nop	{0}
   22270:	b	22288 <__assert_fail@plt+0x10d44>
   22274:	nop	{0}
   22278:	b	22288 <__assert_fail@plt+0x10d44>
   2227c:	nop	{0}
   22280:	b	22288 <__assert_fail@plt+0x10d44>
   22284:	nop	{0}
   22288:	mov	r3, #1
   2228c:	mov	r0, r3
   22290:	sub	sp, fp, #4
   22294:	ldr	fp, [sp]
   22298:	add	sp, sp, #4
   2229c:	pop	{pc}		; (ldr pc, [sp], #4)
   222a0:	push	{fp}		; (str fp, [sp, #-4]!)
   222a4:	add	fp, sp, #0
   222a8:	sub	sp, sp, #36	; 0x24
   222ac:	str	r0, [fp, #-24]	; 0xffffffe8
   222b0:	str	r1, [fp, #-28]	; 0xffffffe4
   222b4:	str	r2, [fp, #-32]	; 0xffffffe0
   222b8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   222bc:	ldr	r2, [r3, #56]	; 0x38
   222c0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   222c4:	ldr	r3, [r3, #40]	; 0x28
   222c8:	cmp	r2, r3
   222cc:	bgt	222e4 <__assert_fail@plt+0x10da0>
   222d0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   222d4:	mov	r2, #2
   222d8:	strb	r2, [r3, #4]
   222dc:	mov	r3, #0
   222e0:	b	22540 <__assert_fail@plt+0x10ffc>
   222e4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   222e8:	ldr	r3, [r3, #4]
   222ec:	ldr	r2, [fp, #-28]	; 0xffffffe4
   222f0:	ldr	r2, [r2, #40]	; 0x28
   222f4:	add	r3, r3, r2
   222f8:	ldrb	r3, [r3]
   222fc:	strb	r3, [fp, #-13]
   22300:	ldr	r3, [fp, #-24]	; 0xffffffe8
   22304:	ldrb	r2, [fp, #-13]
   22308:	strb	r2, [r3]
   2230c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   22310:	ldr	r3, [r3, #80]	; 0x50
   22314:	cmp	r3, #1
   22318:	ble	2236c <__assert_fail@plt+0x10e28>
   2231c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   22320:	ldr	r2, [r3, #40]	; 0x28
   22324:	ldr	r3, [fp, #-28]	; 0xffffffe4
   22328:	ldr	r3, [r3, #28]
   2232c:	cmp	r2, r3
   22330:	beq	2236c <__assert_fail@plt+0x10e28>
   22334:	ldr	r3, [fp, #-28]	; 0xffffffe4
   22338:	ldr	r2, [r3, #8]
   2233c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   22340:	ldr	r3, [r3, #40]	; 0x28
   22344:	lsl	r3, r3, #2
   22348:	add	r3, r2, r3
   2234c:	ldr	r3, [r3]
   22350:	cmn	r3, #1
   22354:	bne	2236c <__assert_fail@plt+0x10e28>
   22358:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2235c:	mov	r2, #1
   22360:	strb	r2, [r3, #4]
   22364:	mov	r3, #1
   22368:	b	22540 <__assert_fail@plt+0x10ffc>
   2236c:	ldrb	r3, [fp, #-13]
   22370:	cmp	r3, #92	; 0x5c
   22374:	bne	223f4 <__assert_fail@plt+0x10eb0>
   22378:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2237c:	and	r3, r3, #1
   22380:	cmp	r3, #0
   22384:	beq	223f4 <__assert_fail@plt+0x10eb0>
   22388:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2238c:	ldr	r3, [r3, #40]	; 0x28
   22390:	add	r2, r3, #1
   22394:	ldr	r3, [fp, #-28]	; 0xffffffe4
   22398:	ldr	r3, [r3, #48]	; 0x30
   2239c:	cmp	r2, r3
   223a0:	bge	223f4 <__assert_fail@plt+0x10eb0>
   223a4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   223a8:	ldr	r3, [r3, #40]	; 0x28
   223ac:	add	r2, r3, #1
   223b0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   223b4:	str	r2, [r3, #40]	; 0x28
   223b8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   223bc:	ldr	r3, [r3, #4]
   223c0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   223c4:	ldr	r2, [r2, #40]	; 0x28
   223c8:	add	r3, r3, r2
   223cc:	ldrb	r3, [r3]
   223d0:	strb	r3, [fp, #-14]
   223d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   223d8:	ldrb	r2, [fp, #-14]
   223dc:	strb	r2, [r3]
   223e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   223e4:	mov	r2, #1
   223e8:	strb	r2, [r3, #4]
   223ec:	mov	r3, #1
   223f0:	b	22540 <__assert_fail@plt+0x10ffc>
   223f4:	ldrb	r3, [fp, #-13]
   223f8:	cmp	r3, #91	; 0x5b
   223fc:	bne	224e4 <__assert_fail@plt+0x10fa0>
   22400:	ldr	r3, [fp, #-28]	; 0xffffffe4
   22404:	ldr	r3, [r3, #40]	; 0x28
   22408:	add	r2, r3, #1
   2240c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   22410:	ldr	r3, [r3, #48]	; 0x30
   22414:	cmp	r2, r3
   22418:	bge	22440 <__assert_fail@plt+0x10efc>
   2241c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   22420:	ldr	r2, [r3, #4]
   22424:	ldr	r3, [fp, #-28]	; 0xffffffe4
   22428:	ldr	r3, [r3, #40]	; 0x28
   2242c:	add	r3, r3, #1
   22430:	add	r3, r2, r3
   22434:	ldrb	r3, [r3]
   22438:	strb	r3, [fp, #-5]
   2243c:	b	22448 <__assert_fail@plt+0x10f04>
   22440:	mov	r3, #0
   22444:	strb	r3, [fp, #-5]
   22448:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2244c:	ldrb	r2, [fp, #-5]
   22450:	strb	r2, [r3]
   22454:	mov	r3, #2
   22458:	str	r3, [fp, #-12]
   2245c:	ldrb	r3, [fp, #-5]
   22460:	cmp	r3, #58	; 0x3a
   22464:	beq	22498 <__assert_fail@plt+0x10f54>
   22468:	cmp	r3, #61	; 0x3d
   2246c:	beq	22488 <__assert_fail@plt+0x10f44>
   22470:	cmp	r3, #46	; 0x2e
   22474:	bne	224b8 <__assert_fail@plt+0x10f74>
   22478:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2247c:	mov	r2, #26
   22480:	strb	r2, [r3, #4]
   22484:	b	224dc <__assert_fail@plt+0x10f98>
   22488:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2248c:	mov	r2, #28
   22490:	strb	r2, [r3, #4]
   22494:	b	224dc <__assert_fail@plt+0x10f98>
   22498:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2249c:	and	r3, r3, #4
   224a0:	cmp	r3, #0
   224a4:	beq	224b8 <__assert_fail@plt+0x10f74>
   224a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   224ac:	mov	r2, #30
   224b0:	strb	r2, [r3, #4]
   224b4:	b	224dc <__assert_fail@plt+0x10f98>
   224b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   224bc:	mov	r2, #1
   224c0:	strb	r2, [r3, #4]
   224c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   224c8:	ldrb	r2, [fp, #-13]
   224cc:	strb	r2, [r3]
   224d0:	mov	r3, #1
   224d4:	str	r3, [fp, #-12]
   224d8:	nop	{0}
   224dc:	ldr	r3, [fp, #-12]
   224e0:	b	22540 <__assert_fail@plt+0x10ffc>
   224e4:	ldrb	r3, [fp, #-13]
   224e8:	cmp	r3, #93	; 0x5d
   224ec:	beq	22510 <__assert_fail@plt+0x10fcc>
   224f0:	cmp	r3, #94	; 0x5e
   224f4:	beq	22520 <__assert_fail@plt+0x10fdc>
   224f8:	cmp	r3, #45	; 0x2d
   224fc:	bne	22530 <__assert_fail@plt+0x10fec>
   22500:	ldr	r3, [fp, #-24]	; 0xffffffe8
   22504:	mov	r2, #22
   22508:	strb	r2, [r3, #4]
   2250c:	b	2253c <__assert_fail@plt+0x10ff8>
   22510:	ldr	r3, [fp, #-24]	; 0xffffffe8
   22514:	mov	r2, #21
   22518:	strb	r2, [r3, #4]
   2251c:	b	2253c <__assert_fail@plt+0x10ff8>
   22520:	ldr	r3, [fp, #-24]	; 0xffffffe8
   22524:	mov	r2, #25
   22528:	strb	r2, [r3, #4]
   2252c:	b	2253c <__assert_fail@plt+0x10ff8>
   22530:	ldr	r3, [fp, #-24]	; 0xffffffe8
   22534:	mov	r2, #1
   22538:	strb	r2, [r3, #4]
   2253c:	mov	r3, #1
   22540:	mov	r0, r3
   22544:	add	sp, fp, #0
   22548:	pop	{fp}		; (ldr fp, [sp], #4)
   2254c:	bx	lr
   22550:	str	fp, [sp, #-8]!
   22554:	str	lr, [sp, #4]
   22558:	add	fp, sp, #4
   2255c:	sub	sp, sp, #48	; 0x30
   22560:	str	r0, [fp, #-32]	; 0xffffffe0
   22564:	str	r1, [fp, #-36]	; 0xffffffdc
   22568:	str	r2, [fp, #-40]	; 0xffffffd8
   2256c:	str	r3, [fp, #-44]	; 0xffffffd4
   22570:	ldr	r3, [fp, #-36]	; 0xffffffdc
   22574:	ldr	r3, [r3]
   22578:	str	r3, [fp, #-12]
   2257c:	ldr	r3, [fp, #-12]
   22580:	ldr	r2, [fp, #-40]	; 0xffffffd8
   22584:	str	r2, [r3, #128]	; 0x80
   22588:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2258c:	orr	r2, r3, #8388608	; 0x800000
   22590:	sub	r3, fp, #28
   22594:	ldr	r1, [fp, #-32]	; 0xffffffe0
   22598:	mov	r0, r3
   2259c:	bl	21540 <__assert_fail@plt+0xfffc>
   225a0:	sub	r2, fp, #28
   225a4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   225a8:	str	r3, [sp, #4]
   225ac:	mov	r3, #0
   225b0:	str	r3, [sp]
   225b4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   225b8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   225bc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   225c0:	bl	226b8 <__assert_fail@plt+0x11174>
   225c4:	str	r0, [fp, #-16]
   225c8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   225cc:	ldr	r3, [r3]
   225d0:	cmp	r3, #0
   225d4:	movne	r3, #1
   225d8:	moveq	r3, #0
   225dc:	uxtb	r3, r3
   225e0:	cmp	r3, #0
   225e4:	beq	2260c <__assert_fail@plt+0x110c8>
   225e8:	ldr	r3, [fp, #-16]
   225ec:	cmp	r3, #0
   225f0:	moveq	r3, #1
   225f4:	movne	r3, #0
   225f8:	uxtb	r3, r3
   225fc:	cmp	r3, #0
   22600:	beq	2260c <__assert_fail@plt+0x110c8>
   22604:	mov	r3, #0
   22608:	b	226a4 <__assert_fail@plt+0x11160>
   2260c:	mov	r3, #2
   22610:	mov	r2, #0
   22614:	mov	r1, #0
   22618:	ldr	r0, [fp, #-12]
   2261c:	bl	261f8 <__assert_fail@plt+0x14cb4>
   22620:	str	r0, [fp, #-20]	; 0xffffffec
   22624:	ldr	r3, [fp, #-16]
   22628:	cmp	r3, #0
   2262c:	beq	2264c <__assert_fail@plt+0x11108>
   22630:	mov	r3, #16
   22634:	ldr	r2, [fp, #-20]	; 0xffffffec
   22638:	ldr	r1, [fp, #-16]
   2263c:	ldr	r0, [fp, #-12]
   22640:	bl	261f8 <__assert_fail@plt+0x14cb4>
   22644:	str	r0, [fp, #-8]
   22648:	b	22654 <__assert_fail@plt+0x11110>
   2264c:	ldr	r3, [fp, #-20]	; 0xffffffec
   22650:	str	r3, [fp, #-8]
   22654:	ldr	r3, [fp, #-20]	; 0xffffffec
   22658:	cmp	r3, #0
   2265c:	moveq	r3, #1
   22660:	movne	r3, #0
   22664:	uxtb	r3, r3
   22668:	cmp	r3, #0
   2266c:	bne	2268c <__assert_fail@plt+0x11148>
   22670:	ldr	r3, [fp, #-8]
   22674:	cmp	r3, #0
   22678:	moveq	r3, #1
   2267c:	movne	r3, #0
   22680:	uxtb	r3, r3
   22684:	cmp	r3, #0
   22688:	beq	226a0 <__assert_fail@plt+0x1115c>
   2268c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   22690:	mov	r2, #12
   22694:	str	r2, [r3]
   22698:	mov	r3, #0
   2269c:	b	226a4 <__assert_fail@plt+0x11160>
   226a0:	ldr	r3, [fp, #-8]
   226a4:	mov	r0, r3
   226a8:	sub	sp, fp, #4
   226ac:	ldr	fp, [sp]
   226b0:	add	sp, sp, #4
   226b4:	pop	{pc}		; (ldr pc, [sp], #4)
   226b8:	str	fp, [sp, #-8]!
   226bc:	str	lr, [sp, #4]
   226c0:	add	fp, sp, #4
   226c4:	sub	sp, sp, #48	; 0x30
   226c8:	str	r0, [fp, #-32]	; 0xffffffe0
   226cc:	str	r1, [fp, #-36]	; 0xffffffdc
   226d0:	str	r2, [fp, #-40]	; 0xffffffd8
   226d4:	str	r3, [fp, #-44]	; 0xffffffd4
   226d8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   226dc:	ldr	r3, [r3]
   226e0:	str	r3, [fp, #-16]
   226e4:	mov	r3, #0
   226e8:	str	r3, [fp, #-12]
   226ec:	ldr	r3, [fp, #-16]
   226f0:	ldr	r3, [r3, #84]	; 0x54
   226f4:	str	r3, [fp, #-20]	; 0xffffffec
   226f8:	ldr	r3, [fp, #8]
   226fc:	str	r3, [sp, #4]
   22700:	ldr	r3, [fp, #4]
   22704:	str	r3, [sp]
   22708:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2270c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   22710:	ldr	r1, [fp, #-36]	; 0xffffffdc
   22714:	ldr	r0, [fp, #-32]	; 0xffffffe0
   22718:	bl	228f0 <__assert_fail@plt+0x113ac>
   2271c:	str	r0, [fp, #-8]
   22720:	ldr	r3, [fp, #8]
   22724:	ldr	r3, [r3]
   22728:	cmp	r3, #0
   2272c:	movne	r3, #1
   22730:	moveq	r3, #0
   22734:	uxtb	r3, r3
   22738:	cmp	r3, #0
   2273c:	beq	228c8 <__assert_fail@plt+0x11384>
   22740:	ldr	r3, [fp, #-8]
   22744:	cmp	r3, #0
   22748:	moveq	r3, #1
   2274c:	movne	r3, #0
   22750:	uxtb	r3, r3
   22754:	cmp	r3, #0
   22758:	beq	228c8 <__assert_fail@plt+0x11384>
   2275c:	mov	r3, #0
   22760:	b	228dc <__assert_fail@plt+0x11398>
   22764:	ldr	r3, [fp, #-44]	; 0xffffffd4
   22768:	orr	r3, r3, #8388608	; 0x800000
   2276c:	mov	r2, r3
   22770:	ldr	r1, [fp, #-32]	; 0xffffffe0
   22774:	ldr	r0, [fp, #-40]	; 0xffffffd8
   22778:	bl	21540 <__assert_fail@plt+0xfffc>
   2277c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   22780:	ldrb	r3, [r3, #4]
   22784:	cmp	r3, #10
   22788:	beq	22878 <__assert_fail@plt+0x11334>
   2278c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   22790:	ldrb	r3, [r3, #4]
   22794:	cmp	r3, #2
   22798:	beq	22878 <__assert_fail@plt+0x11334>
   2279c:	ldr	r3, [fp, #4]
   227a0:	cmp	r3, #0
   227a4:	beq	227b8 <__assert_fail@plt+0x11274>
   227a8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   227ac:	ldrb	r3, [r3, #4]
   227b0:	cmp	r3, #9
   227b4:	beq	22878 <__assert_fail@plt+0x11334>
   227b8:	ldr	r3, [fp, #-16]
   227bc:	ldr	r3, [r3, #84]	; 0x54
   227c0:	str	r3, [fp, #-24]	; 0xffffffe8
   227c4:	ldr	r3, [fp, #-16]
   227c8:	ldr	r2, [fp, #-20]	; 0xffffffec
   227cc:	str	r2, [r3, #84]	; 0x54
   227d0:	ldr	r3, [fp, #8]
   227d4:	str	r3, [sp, #4]
   227d8:	ldr	r3, [fp, #4]
   227dc:	str	r3, [sp]
   227e0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   227e4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   227e8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   227ec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   227f0:	bl	228f0 <__assert_fail@plt+0x113ac>
   227f4:	str	r0, [fp, #-12]
   227f8:	ldr	r3, [fp, #8]
   227fc:	ldr	r3, [r3]
   22800:	cmp	r3, #0
   22804:	movne	r3, #1
   22808:	moveq	r3, #0
   2280c:	uxtb	r3, r3
   22810:	cmp	r3, #0
   22814:	beq	2285c <__assert_fail@plt+0x11318>
   22818:	ldr	r3, [fp, #-12]
   2281c:	cmp	r3, #0
   22820:	moveq	r3, #1
   22824:	movne	r3, #0
   22828:	uxtb	r3, r3
   2282c:	cmp	r3, #0
   22830:	beq	2285c <__assert_fail@plt+0x11318>
   22834:	ldr	r3, [fp, #-8]
   22838:	cmp	r3, #0
   2283c:	beq	22854 <__assert_fail@plt+0x11310>
   22840:	mov	r2, #0
   22844:	movw	r1, #25824	; 0x64e0
   22848:	movt	r1, #2
   2284c:	ldr	r0, [fp, #-8]
   22850:	bl	1faa0 <__assert_fail@plt+0xe55c>
   22854:	mov	r3, #0
   22858:	b	228dc <__assert_fail@plt+0x11398>
   2285c:	ldr	r3, [fp, #-16]
   22860:	ldr	r2, [r3, #84]	; 0x54
   22864:	ldr	r3, [fp, #-24]	; 0xffffffe8
   22868:	orr	r2, r2, r3
   2286c:	ldr	r3, [fp, #-16]
   22870:	str	r2, [r3, #84]	; 0x54
   22874:	b	22880 <__assert_fail@plt+0x1133c>
   22878:	mov	r3, #0
   2287c:	str	r3, [fp, #-12]
   22880:	mov	r3, #10
   22884:	ldr	r2, [fp, #-12]
   22888:	ldr	r1, [fp, #-8]
   2288c:	ldr	r0, [fp, #-16]
   22890:	bl	261f8 <__assert_fail@plt+0x14cb4>
   22894:	str	r0, [fp, #-8]
   22898:	ldr	r3, [fp, #-8]
   2289c:	cmp	r3, #0
   228a0:	moveq	r3, #1
   228a4:	movne	r3, #0
   228a8:	uxtb	r3, r3
   228ac:	cmp	r3, #0
   228b0:	beq	228c8 <__assert_fail@plt+0x11384>
   228b4:	ldr	r3, [fp, #8]
   228b8:	mov	r2, #12
   228bc:	str	r2, [r3]
   228c0:	mov	r3, #0
   228c4:	b	228dc <__assert_fail@plt+0x11398>
   228c8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   228cc:	ldrb	r3, [r3, #4]
   228d0:	cmp	r3, #10
   228d4:	beq	22764 <__assert_fail@plt+0x11220>
   228d8:	ldr	r3, [fp, #-8]
   228dc:	mov	r0, r3
   228e0:	sub	sp, fp, #4
   228e4:	ldr	fp, [sp]
   228e8:	add	sp, sp, #4
   228ec:	pop	{pc}		; (ldr pc, [sp], #4)
   228f0:	str	fp, [sp, #-8]!
   228f4:	str	lr, [sp, #4]
   228f8:	add	fp, sp, #4
   228fc:	sub	sp, sp, #40	; 0x28
   22900:	str	r0, [fp, #-24]	; 0xffffffe8
   22904:	str	r1, [fp, #-28]	; 0xffffffe4
   22908:	str	r2, [fp, #-32]	; 0xffffffe0
   2290c:	str	r3, [fp, #-36]	; 0xffffffdc
   22910:	ldr	r3, [fp, #-28]	; 0xffffffe4
   22914:	ldr	r3, [r3]
   22918:	str	r3, [fp, #-12]
   2291c:	ldr	r3, [fp, #8]
   22920:	str	r3, [sp, #4]
   22924:	ldr	r3, [fp, #4]
   22928:	str	r3, [sp]
   2292c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   22930:	ldr	r2, [fp, #-32]	; 0xffffffe0
   22934:	ldr	r1, [fp, #-28]	; 0xffffffe4
   22938:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2293c:	bl	22b00 <__assert_fail@plt+0x115bc>
   22940:	str	r0, [fp, #-8]
   22944:	ldr	r3, [fp, #8]
   22948:	ldr	r3, [r3]
   2294c:	cmp	r3, #0
   22950:	movne	r3, #1
   22954:	moveq	r3, #0
   22958:	uxtb	r3, r3
   2295c:	cmp	r3, #0
   22960:	beq	22aac <__assert_fail@plt+0x11568>
   22964:	ldr	r3, [fp, #-8]
   22968:	cmp	r3, #0
   2296c:	moveq	r3, #1
   22970:	movne	r3, #0
   22974:	uxtb	r3, r3
   22978:	cmp	r3, #0
   2297c:	beq	22aac <__assert_fail@plt+0x11568>
   22980:	mov	r3, #0
   22984:	b	22aec <__assert_fail@plt+0x115a8>
   22988:	ldr	r3, [fp, #8]
   2298c:	str	r3, [sp, #4]
   22990:	ldr	r3, [fp, #4]
   22994:	str	r3, [sp]
   22998:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2299c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   229a0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   229a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   229a8:	bl	22b00 <__assert_fail@plt+0x115bc>
   229ac:	str	r0, [fp, #-16]
   229b0:	ldr	r3, [fp, #8]
   229b4:	ldr	r3, [r3]
   229b8:	cmp	r3, #0
   229bc:	movne	r3, #1
   229c0:	moveq	r3, #0
   229c4:	uxtb	r3, r3
   229c8:	cmp	r3, #0
   229cc:	beq	22a14 <__assert_fail@plt+0x114d0>
   229d0:	ldr	r3, [fp, #-16]
   229d4:	cmp	r3, #0
   229d8:	moveq	r3, #1
   229dc:	movne	r3, #0
   229e0:	uxtb	r3, r3
   229e4:	cmp	r3, #0
   229e8:	beq	22a14 <__assert_fail@plt+0x114d0>
   229ec:	ldr	r3, [fp, #-8]
   229f0:	cmp	r3, #0
   229f4:	beq	22a0c <__assert_fail@plt+0x114c8>
   229f8:	mov	r2, #0
   229fc:	movw	r1, #25824	; 0x64e0
   22a00:	movt	r1, #2
   22a04:	ldr	r0, [fp, #-8]
   22a08:	bl	1faa0 <__assert_fail@plt+0xe55c>
   22a0c:	mov	r3, #0
   22a10:	b	22aec <__assert_fail@plt+0x115a8>
   22a14:	ldr	r3, [fp, #-8]
   22a18:	cmp	r3, #0
   22a1c:	beq	22a98 <__assert_fail@plt+0x11554>
   22a20:	ldr	r3, [fp, #-16]
   22a24:	cmp	r3, #0
   22a28:	beq	22a98 <__assert_fail@plt+0x11554>
   22a2c:	mov	r3, #16
   22a30:	ldr	r2, [fp, #-16]
   22a34:	ldr	r1, [fp, #-8]
   22a38:	ldr	r0, [fp, #-12]
   22a3c:	bl	261f8 <__assert_fail@plt+0x14cb4>
   22a40:	str	r0, [fp, #-20]	; 0xffffffec
   22a44:	ldr	r3, [fp, #-20]	; 0xffffffec
   22a48:	cmp	r3, #0
   22a4c:	bne	22a8c <__assert_fail@plt+0x11548>
   22a50:	mov	r2, #0
   22a54:	movw	r1, #25824	; 0x64e0
   22a58:	movt	r1, #2
   22a5c:	ldr	r0, [fp, #-16]
   22a60:	bl	1faa0 <__assert_fail@plt+0xe55c>
   22a64:	mov	r2, #0
   22a68:	movw	r1, #25824	; 0x64e0
   22a6c:	movt	r1, #2
   22a70:	ldr	r0, [fp, #-8]
   22a74:	bl	1faa0 <__assert_fail@plt+0xe55c>
   22a78:	ldr	r3, [fp, #8]
   22a7c:	mov	r2, #12
   22a80:	str	r2, [r3]
   22a84:	mov	r3, #0
   22a88:	b	22aec <__assert_fail@plt+0x115a8>
   22a8c:	ldr	r3, [fp, #-20]	; 0xffffffec
   22a90:	str	r3, [fp, #-8]
   22a94:	b	22aac <__assert_fail@plt+0x11568>
   22a98:	ldr	r3, [fp, #-8]
   22a9c:	cmp	r3, #0
   22aa0:	bne	22aac <__assert_fail@plt+0x11568>
   22aa4:	ldr	r3, [fp, #-16]
   22aa8:	str	r3, [fp, #-8]
   22aac:	ldr	r3, [fp, #-32]	; 0xffffffe0
   22ab0:	ldrb	r3, [r3, #4]
   22ab4:	cmp	r3, #10
   22ab8:	beq	22ae8 <__assert_fail@plt+0x115a4>
   22abc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   22ac0:	ldrb	r3, [r3, #4]
   22ac4:	cmp	r3, #2
   22ac8:	beq	22ae8 <__assert_fail@plt+0x115a4>
   22acc:	ldr	r3, [fp, #4]
   22ad0:	cmp	r3, #0
   22ad4:	beq	22988 <__assert_fail@plt+0x11444>
   22ad8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   22adc:	ldrb	r3, [r3, #4]
   22ae0:	cmp	r3, #9
   22ae4:	bne	22988 <__assert_fail@plt+0x11444>
   22ae8:	ldr	r3, [fp, #-8]
   22aec:	mov	r0, r3
   22af0:	sub	sp, fp, #4
   22af4:	ldr	fp, [sp]
   22af8:	add	sp, sp, #4
   22afc:	pop	{pc}		; (ldr pc, [sp], #4)
   22b00:	str	fp, [sp, #-8]!
   22b04:	str	lr, [sp, #4]
   22b08:	add	fp, sp, #4
   22b0c:	sub	sp, sp, #48	; 0x30
   22b10:	str	r0, [fp, #-32]	; 0xffffffe0
   22b14:	str	r1, [fp, #-36]	; 0xffffffdc
   22b18:	str	r2, [fp, #-40]	; 0xffffffd8
   22b1c:	str	r3, [fp, #-44]	; 0xffffffd4
   22b20:	ldr	r3, [fp, #-36]	; 0xffffffdc
   22b24:	ldr	r3, [r3]
   22b28:	str	r3, [fp, #-16]
   22b2c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   22b30:	ldrb	r3, [r3, #4]
   22b34:	sub	r3, r3, #1
   22b38:	cmp	r3, #35	; 0x23
   22b3c:	ldrls	pc, [pc, r3, lsl #2]
   22b40:	b	23338 <__assert_fail@plt+0x11df4>
   22b44:	ldrdeq	r2, [r2], -r4
   22b48:	andeq	r3, r2, r0, lsr r3
   22b4c:	andeq	r3, r2, r8, lsr r3
   22b50:	andeq	r2, r2, r8, ror #27
   22b54:	andeq	r3, r2, ip, lsr #3
   22b58:	andeq	r3, r2, r8, lsr r3
   22b5c:	andeq	r3, r2, r8, lsr r3
   22b60:	andeq	r2, r2, r4, lsl sp
   22b64:	andeq	r2, r2, r8, asr #30
   22b68:	andeq	r3, r2, r0, lsr r3
   22b6c:	ldrdeq	r2, [r2], -r8
   22b70:	ldrdeq	r2, [r2], -r0
   22b74:	andeq	r3, r2, r8, lsr r3
   22b78:	andeq	r3, r2, r8, lsr r3
   22b7c:	andeq	r3, r2, r8, lsr r3
   22b80:	andeq	r3, r2, r8, lsr r3
   22b84:	andeq	r3, r2, r8, lsr r3
   22b88:	ldrdeq	r2, [r2], -r8
   22b8c:	ldrdeq	r2, [r2], -r8
   22b90:	andeq	r2, r2, r4, lsl #27
   22b94:	andeq	r3, r2, r8, lsr r3
   22b98:	andeq	r3, r2, r8, lsr r3
   22b9c:			; <UNDEFINED> instruction: 0x00022eb4
   22ba0:	andeq	r2, r2, ip, ror pc
   22ba4:	andeq	r3, r2, r8, lsr r3
   22ba8:	andeq	r3, r2, r8, lsr r3
   22bac:	andeq	r3, r2, r8, lsr r3
   22bb0:	andeq	r3, r2, r8, lsr r3
   22bb4:	andeq	r3, r2, r8, lsr r3
   22bb8:	andeq	r3, r2, r8, lsr r3
   22bbc:	andeq	r3, r2, r8, lsr r3
   22bc0:	andeq	r3, r2, r8, lsl r2
   22bc4:	andeq	r3, r2, r8, lsl r2
   22bc8:	andeq	r3, r2, r4, lsr #5
   22bcc:	andeq	r3, r2, r4, lsr #5
   22bd0:	andeq	r3, r2, r8, lsr r3
   22bd4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   22bd8:	mov	r2, #0
   22bdc:	mov	r1, #0
   22be0:	ldr	r0, [fp, #-16]
   22be4:	bl	26260 <__assert_fail@plt+0x14d1c>
   22be8:	str	r0, [fp, #-8]
   22bec:	ldr	r3, [fp, #-8]
   22bf0:	cmp	r3, #0
   22bf4:	moveq	r3, #1
   22bf8:	movne	r3, #0
   22bfc:	uxtb	r3, r3
   22c00:	cmp	r3, #0
   22c04:	beq	22c1c <__assert_fail@plt+0x116d8>
   22c08:	ldr	r3, [fp, #8]
   22c0c:	mov	r2, #12
   22c10:	str	r2, [r3]
   22c14:	mov	r3, #0
   22c18:	b	234d0 <__assert_fail@plt+0x11f8c>
   22c1c:	ldr	r3, [fp, #-16]
   22c20:	ldr	r3, [r3, #92]	; 0x5c
   22c24:	cmp	r3, #1
   22c28:	ble	2334c <__assert_fail@plt+0x11e08>
   22c2c:	b	22cbc <__assert_fail@plt+0x11778>
   22c30:	ldr	r2, [fp, #-44]	; 0xffffffd4
   22c34:	ldr	r1, [fp, #-32]	; 0xffffffe0
   22c38:	ldr	r0, [fp, #-40]	; 0xffffffd8
   22c3c:	bl	21540 <__assert_fail@plt+0xfffc>
   22c40:	ldr	r3, [fp, #-40]	; 0xffffffd8
   22c44:	mov	r2, #0
   22c48:	mov	r1, #0
   22c4c:	ldr	r0, [fp, #-16]
   22c50:	bl	26260 <__assert_fail@plt+0x14d1c>
   22c54:	str	r0, [fp, #-20]	; 0xffffffec
   22c58:	mov	r3, #16
   22c5c:	ldr	r2, [fp, #-20]	; 0xffffffec
   22c60:	ldr	r1, [fp, #-8]
   22c64:	ldr	r0, [fp, #-16]
   22c68:	bl	261f8 <__assert_fail@plt+0x14cb4>
   22c6c:	str	r0, [fp, #-8]
   22c70:	ldr	r3, [fp, #-20]	; 0xffffffec
   22c74:	cmp	r3, #0
   22c78:	moveq	r3, #1
   22c7c:	movne	r3, #0
   22c80:	uxtb	r3, r3
   22c84:	cmp	r3, #0
   22c88:	bne	22ca8 <__assert_fail@plt+0x11764>
   22c8c:	ldr	r3, [fp, #-8]
   22c90:	cmp	r3, #0
   22c94:	moveq	r3, #1
   22c98:	movne	r3, #0
   22c9c:	uxtb	r3, r3
   22ca0:	cmp	r3, #0
   22ca4:	beq	22cbc <__assert_fail@plt+0x11778>
   22ca8:	ldr	r3, [fp, #8]
   22cac:	mov	r2, #12
   22cb0:	str	r2, [r3]
   22cb4:	mov	r3, #0
   22cb8:	b	234d0 <__assert_fail@plt+0x11f8c>
   22cbc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   22cc0:	ldr	r2, [r3, #56]	; 0x38
   22cc4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   22cc8:	ldr	r3, [r3, #40]	; 0x28
   22ccc:	cmp	r2, r3
   22cd0:	ble	2334c <__assert_fail@plt+0x11e08>
   22cd4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   22cd8:	ldr	r2, [r3, #40]	; 0x28
   22cdc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   22ce0:	ldr	r3, [r3, #28]
   22ce4:	cmp	r2, r3
   22ce8:	beq	2334c <__assert_fail@plt+0x11e08>
   22cec:	ldr	r3, [fp, #-32]	; 0xffffffe0
   22cf0:	ldr	r2, [r3, #8]
   22cf4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   22cf8:	ldr	r3, [r3, #40]	; 0x28
   22cfc:	lsl	r3, r3, #2
   22d00:	add	r3, r2, r3
   22d04:	ldr	r3, [r3]
   22d08:	cmn	r3, #1
   22d0c:	beq	22c30 <__assert_fail@plt+0x116ec>
   22d10:	b	2334c <__assert_fail@plt+0x11e08>
   22d14:	ldr	r3, [fp, #4]
   22d18:	add	r3, r3, #1
   22d1c:	ldr	r2, [fp, #8]
   22d20:	str	r2, [sp, #4]
   22d24:	str	r3, [sp]
   22d28:	ldr	r3, [fp, #-44]	; 0xffffffd4
   22d2c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   22d30:	ldr	r1, [fp, #-36]	; 0xffffffdc
   22d34:	ldr	r0, [fp, #-32]	; 0xffffffe0
   22d38:	bl	234e4 <__assert_fail@plt+0x11fa0>
   22d3c:	str	r0, [fp, #-8]
   22d40:	ldr	r3, [fp, #8]
   22d44:	ldr	r3, [r3]
   22d48:	cmp	r3, #0
   22d4c:	movne	r3, #1
   22d50:	moveq	r3, #0
   22d54:	uxtb	r3, r3
   22d58:	cmp	r3, #0
   22d5c:	beq	23354 <__assert_fail@plt+0x11e10>
   22d60:	ldr	r3, [fp, #-8]
   22d64:	cmp	r3, #0
   22d68:	moveq	r3, #1
   22d6c:	movne	r3, #0
   22d70:	uxtb	r3, r3
   22d74:	cmp	r3, #0
   22d78:	beq	23354 <__assert_fail@plt+0x11e10>
   22d7c:	mov	r3, #0
   22d80:	b	234d0 <__assert_fail@plt+0x11f8c>
   22d84:	ldr	r3, [fp, #8]
   22d88:	str	r3, [sp]
   22d8c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   22d90:	ldr	r2, [fp, #-40]	; 0xffffffd8
   22d94:	ldr	r1, [fp, #-16]
   22d98:	ldr	r0, [fp, #-32]	; 0xffffffe0
   22d9c:	bl	242a4 <__assert_fail@plt+0x12d60>
   22da0:	str	r0, [fp, #-8]
   22da4:	ldr	r3, [fp, #8]
   22da8:	ldr	r3, [r3]
   22dac:	cmp	r3, #0
   22db0:	movne	r3, #1
   22db4:	moveq	r3, #0
   22db8:	uxtb	r3, r3
   22dbc:	cmp	r3, #0
   22dc0:	beq	2335c <__assert_fail@plt+0x11e18>
   22dc4:	ldr	r3, [fp, #-8]
   22dc8:	cmp	r3, #0
   22dcc:	moveq	r3, #1
   22dd0:	movne	r3, #0
   22dd4:	uxtb	r3, r3
   22dd8:	cmp	r3, #0
   22ddc:	beq	2335c <__assert_fail@plt+0x11e18>
   22de0:	mov	r3, #0
   22de4:	b	234d0 <__assert_fail@plt+0x11f8c>
   22de8:	ldr	r3, [fp, #-16]
   22dec:	ldr	r3, [r3, #84]	; 0x54
   22df0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   22df4:	ldr	r2, [r2]
   22df8:	mov	r1, #1
   22dfc:	lsl	r2, r1, r2
   22e00:	and	r3, r3, r2
   22e04:	cmp	r3, #0
   22e08:	bne	22e20 <__assert_fail@plt+0x118dc>
   22e0c:	ldr	r3, [fp, #8]
   22e10:	mov	r2, #6
   22e14:	str	r2, [r3]
   22e18:	mov	r3, #0
   22e1c:	b	234d0 <__assert_fail@plt+0x11f8c>
   22e20:	ldr	r3, [fp, #-16]
   22e24:	ldr	r3, [r3, #80]	; 0x50
   22e28:	ldr	r2, [fp, #-40]	; 0xffffffd8
   22e2c:	ldr	r2, [r2]
   22e30:	mov	r1, #1
   22e34:	lsl	r2, r1, r2
   22e38:	orr	r2, r3, r2
   22e3c:	ldr	r3, [fp, #-16]
   22e40:	str	r2, [r3, #80]	; 0x50
   22e44:	ldr	r3, [fp, #-40]	; 0xffffffd8
   22e48:	mov	r2, #0
   22e4c:	mov	r1, #0
   22e50:	ldr	r0, [fp, #-16]
   22e54:	bl	26260 <__assert_fail@plt+0x14d1c>
   22e58:	str	r0, [fp, #-8]
   22e5c:	ldr	r3, [fp, #-8]
   22e60:	cmp	r3, #0
   22e64:	moveq	r3, #1
   22e68:	movne	r3, #0
   22e6c:	uxtb	r3, r3
   22e70:	cmp	r3, #0
   22e74:	beq	22e8c <__assert_fail@plt+0x11948>
   22e78:	ldr	r3, [fp, #8]
   22e7c:	mov	r2, #12
   22e80:	str	r2, [r3]
   22e84:	mov	r3, #0
   22e88:	b	234d0 <__assert_fail@plt+0x11f8c>
   22e8c:	ldr	r3, [fp, #-16]
   22e90:	ldr	r3, [r3, #76]	; 0x4c
   22e94:	add	r2, r3, #1
   22e98:	ldr	r3, [fp, #-16]
   22e9c:	str	r2, [r3, #76]	; 0x4c
   22ea0:	ldr	r2, [fp, #-16]
   22ea4:	ldrb	r3, [r2, #88]	; 0x58
   22ea8:	orr	r3, r3, #2
   22eac:	strb	r3, [r2, #88]	; 0x58
   22eb0:	b	23380 <__assert_fail@plt+0x11e3c>
   22eb4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   22eb8:	and	r3, r3, #16777216	; 0x1000000
   22ebc:	cmp	r3, #0
   22ec0:	beq	22ed8 <__assert_fail@plt+0x11994>
   22ec4:	ldr	r3, [fp, #8]
   22ec8:	mov	r2, #13
   22ecc:	str	r2, [r3]
   22ed0:	mov	r3, #0
   22ed4:	b	234d0 <__assert_fail@plt+0x11f8c>
   22ed8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   22edc:	and	r3, r3, #32
   22ee0:	cmp	r3, #0
   22ee4:	beq	22efc <__assert_fail@plt+0x119b8>
   22ee8:	ldr	r3, [fp, #8]
   22eec:	mov	r2, #13
   22ef0:	str	r2, [r3]
   22ef4:	mov	r3, #0
   22ef8:	b	234d0 <__assert_fail@plt+0x11f8c>
   22efc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   22f00:	and	r3, r3, #16
   22f04:	cmp	r3, #0
   22f08:	beq	22f48 <__assert_fail@plt+0x11a04>
   22f0c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   22f10:	ldr	r1, [fp, #-32]	; 0xffffffe0
   22f14:	ldr	r0, [fp, #-40]	; 0xffffffd8
   22f18:	bl	21540 <__assert_fail@plt+0xfffc>
   22f1c:	ldr	r3, [fp, #8]
   22f20:	str	r3, [sp, #4]
   22f24:	ldr	r3, [fp, #4]
   22f28:	str	r3, [sp]
   22f2c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   22f30:	ldr	r2, [fp, #-40]	; 0xffffffd8
   22f34:	ldr	r1, [fp, #-36]	; 0xffffffdc
   22f38:	ldr	r0, [fp, #-32]	; 0xffffffe0
   22f3c:	bl	22b00 <__assert_fail@plt+0x115bc>
   22f40:	mov	r3, r0
   22f44:	b	234d0 <__assert_fail@plt+0x11f8c>
   22f48:	ldr	r3, [fp, #-40]	; 0xffffffd8
   22f4c:	ldrb	r3, [r3, #4]
   22f50:	cmp	r3, #9
   22f54:	bne	22f7c <__assert_fail@plt+0x11a38>
   22f58:	ldr	r3, [fp, #-44]	; 0xffffffd4
   22f5c:	and	r3, r3, #131072	; 0x20000
   22f60:	cmp	r3, #0
   22f64:	bne	22f7c <__assert_fail@plt+0x11a38>
   22f68:	ldr	r3, [fp, #8]
   22f6c:	mov	r2, #16
   22f70:	str	r2, [r3]
   22f74:	mov	r3, #0
   22f78:	b	234d0 <__assert_fail@plt+0x11f8c>
   22f7c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   22f80:	mov	r2, #1
   22f84:	strb	r2, [r3, #4]
   22f88:	ldr	r3, [fp, #-40]	; 0xffffffd8
   22f8c:	mov	r2, #0
   22f90:	mov	r1, #0
   22f94:	ldr	r0, [fp, #-16]
   22f98:	bl	26260 <__assert_fail@plt+0x14d1c>
   22f9c:	str	r0, [fp, #-8]
   22fa0:	ldr	r3, [fp, #-8]
   22fa4:	cmp	r3, #0
   22fa8:	moveq	r3, #1
   22fac:	movne	r3, #0
   22fb0:	uxtb	r3, r3
   22fb4:	cmp	r3, #0
   22fb8:	beq	23364 <__assert_fail@plt+0x11e20>
   22fbc:	ldr	r3, [fp, #8]
   22fc0:	mov	r2, #12
   22fc4:	str	r2, [r3]
   22fc8:	mov	r3, #0
   22fcc:	b	234d0 <__assert_fail@plt+0x11f8c>
   22fd0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   22fd4:	ldr	r2, [r3]
   22fd8:	movw	r3, #783	; 0x30f
   22fdc:	and	r3, r3, r2
   22fe0:	cmp	r3, #0
   22fe4:	beq	23008 <__assert_fail@plt+0x11ac4>
   22fe8:	ldr	r3, [fp, #-16]
   22fec:	ldrb	r3, [r3, #88]	; 0x58
   22ff0:	and	r3, r3, #16
   22ff4:	uxtb	r3, r3
   22ff8:	cmp	r3, #0
   22ffc:	bne	23008 <__assert_fail@plt+0x11ac4>
   23000:	ldr	r0, [fp, #-16]
   23004:	bl	1ec8c <__assert_fail@plt+0xd748>
   23008:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2300c:	ldr	r3, [r3]
   23010:	cmp	r3, #256	; 0x100
   23014:	beq	23028 <__assert_fail@plt+0x11ae4>
   23018:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2301c:	ldr	r3, [r3]
   23020:	cmp	r3, #512	; 0x200
   23024:	bne	23148 <__assert_fail@plt+0x11c04>
   23028:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2302c:	ldr	r3, [r3]
   23030:	cmp	r3, #256	; 0x100
   23034:	bne	2306c <__assert_fail@plt+0x11b28>
   23038:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2303c:	mov	r2, #6
   23040:	str	r2, [r3]
   23044:	ldr	r3, [fp, #-40]	; 0xffffffd8
   23048:	mov	r2, #0
   2304c:	mov	r1, #0
   23050:	ldr	r0, [fp, #-16]
   23054:	bl	26260 <__assert_fail@plt+0x14d1c>
   23058:	str	r0, [fp, #-12]
   2305c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   23060:	mov	r2, #9
   23064:	str	r2, [r3]
   23068:	b	2309c <__assert_fail@plt+0x11b58>
   2306c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   23070:	mov	r2, #5
   23074:	str	r2, [r3]
   23078:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2307c:	mov	r2, #0
   23080:	mov	r1, #0
   23084:	ldr	r0, [fp, #-16]
   23088:	bl	26260 <__assert_fail@plt+0x14d1c>
   2308c:	str	r0, [fp, #-12]
   23090:	ldr	r3, [fp, #-40]	; 0xffffffd8
   23094:	mov	r2, #10
   23098:	str	r2, [r3]
   2309c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   230a0:	mov	r2, #0
   230a4:	mov	r1, #0
   230a8:	ldr	r0, [fp, #-16]
   230ac:	bl	26260 <__assert_fail@plt+0x14d1c>
   230b0:	str	r0, [fp, #-24]	; 0xffffffe8
   230b4:	mov	r3, #10
   230b8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   230bc:	ldr	r1, [fp, #-12]
   230c0:	ldr	r0, [fp, #-16]
   230c4:	bl	261f8 <__assert_fail@plt+0x14cb4>
   230c8:	str	r0, [fp, #-8]
   230cc:	ldr	r3, [fp, #-12]
   230d0:	cmp	r3, #0
   230d4:	moveq	r3, #1
   230d8:	movne	r3, #0
   230dc:	uxtb	r3, r3
   230e0:	cmp	r3, #0
   230e4:	bne	23104 <__assert_fail@plt+0x11bc0>
   230e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   230ec:	cmp	r3, #0
   230f0:	moveq	r3, #1
   230f4:	movne	r3, #0
   230f8:	uxtb	r3, r3
   230fc:	cmp	r3, #0
   23100:	beq	2310c <__assert_fail@plt+0x11bc8>
   23104:	mov	r3, #1
   23108:	b	23110 <__assert_fail@plt+0x11bcc>
   2310c:	mov	r3, #0
   23110:	cmp	r3, #0
   23114:	bne	23134 <__assert_fail@plt+0x11bf0>
   23118:	ldr	r3, [fp, #-8]
   2311c:	cmp	r3, #0
   23120:	moveq	r3, #1
   23124:	movne	r3, #0
   23128:	uxtb	r3, r3
   2312c:	cmp	r3, #0
   23130:	beq	23190 <__assert_fail@plt+0x11c4c>
   23134:	ldr	r3, [fp, #8]
   23138:	mov	r2, #12
   2313c:	str	r2, [r3]
   23140:	mov	r3, #0
   23144:	b	234d0 <__assert_fail@plt+0x11f8c>
   23148:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2314c:	mov	r2, #0
   23150:	mov	r1, #0
   23154:	ldr	r0, [fp, #-16]
   23158:	bl	26260 <__assert_fail@plt+0x14d1c>
   2315c:	str	r0, [fp, #-8]
   23160:	ldr	r3, [fp, #-8]
   23164:	cmp	r3, #0
   23168:	moveq	r3, #1
   2316c:	movne	r3, #0
   23170:	uxtb	r3, r3
   23174:	cmp	r3, #0
   23178:	beq	23194 <__assert_fail@plt+0x11c50>
   2317c:	ldr	r3, [fp, #8]
   23180:	mov	r2, #12
   23184:	str	r2, [r3]
   23188:	mov	r3, #0
   2318c:	b	234d0 <__assert_fail@plt+0x11f8c>
   23190:	nop	{0}
   23194:	ldr	r2, [fp, #-44]	; 0xffffffd4
   23198:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2319c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   231a0:	bl	21540 <__assert_fail@plt+0xfffc>
   231a4:	ldr	r3, [fp, #-8]
   231a8:	b	234d0 <__assert_fail@plt+0x11f8c>
   231ac:	ldr	r3, [fp, #-40]	; 0xffffffd8
   231b0:	mov	r2, #0
   231b4:	mov	r1, #0
   231b8:	ldr	r0, [fp, #-16]
   231bc:	bl	26260 <__assert_fail@plt+0x14d1c>
   231c0:	str	r0, [fp, #-8]
   231c4:	ldr	r3, [fp, #-8]
   231c8:	cmp	r3, #0
   231cc:	moveq	r3, #1
   231d0:	movne	r3, #0
   231d4:	uxtb	r3, r3
   231d8:	cmp	r3, #0
   231dc:	beq	231f4 <__assert_fail@plt+0x11cb0>
   231e0:	ldr	r3, [fp, #8]
   231e4:	mov	r2, #12
   231e8:	str	r2, [r3]
   231ec:	mov	r3, #0
   231f0:	b	234d0 <__assert_fail@plt+0x11f8c>
   231f4:	ldr	r3, [fp, #-16]
   231f8:	ldr	r3, [r3, #92]	; 0x5c
   231fc:	cmp	r3, #1
   23200:	ble	2336c <__assert_fail@plt+0x11e28>
   23204:	ldr	r2, [fp, #-16]
   23208:	ldrb	r3, [r2, #88]	; 0x58
   2320c:	orr	r3, r3, #2
   23210:	strb	r3, [r2, #88]	; 0x58
   23214:	b	2336c <__assert_fail@plt+0x11e28>
   23218:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2321c:	ldr	r1, [r3, #64]	; 0x40
   23220:	ldr	r3, [fp, #-40]	; 0xffffffd8
   23224:	ldrb	r3, [r3, #4]
   23228:	cmp	r3, #33	; 0x21
   2322c:	moveq	r3, #1
   23230:	movne	r3, #0
   23234:	uxtb	r3, r3
   23238:	ldr	r2, [fp, #8]
   2323c:	str	r2, [sp, #4]
   23240:	str	r3, [sp]
   23244:	movw	r3, #25676	; 0x644c
   23248:	movt	r3, #3
   2324c:	movw	r2, #25680	; 0x6450
   23250:	movt	r2, #3
   23254:	ldr	r0, [fp, #-16]
   23258:	bl	25d78 <__assert_fail@plt+0x14834>
   2325c:	str	r0, [fp, #-8]
   23260:	ldr	r3, [fp, #8]
   23264:	ldr	r3, [r3]
   23268:	cmp	r3, #0
   2326c:	movne	r3, #1
   23270:	moveq	r3, #0
   23274:	uxtb	r3, r3
   23278:	cmp	r3, #0
   2327c:	beq	23374 <__assert_fail@plt+0x11e30>
   23280:	ldr	r3, [fp, #-8]
   23284:	cmp	r3, #0
   23288:	moveq	r3, #1
   2328c:	movne	r3, #0
   23290:	uxtb	r3, r3
   23294:	cmp	r3, #0
   23298:	beq	23374 <__assert_fail@plt+0x11e30>
   2329c:	mov	r3, #0
   232a0:	b	234d0 <__assert_fail@plt+0x11f8c>
   232a4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   232a8:	ldr	r1, [r3, #64]	; 0x40
   232ac:	ldr	r3, [fp, #-40]	; 0xffffffd8
   232b0:	ldrb	r3, [r3, #4]
   232b4:	cmp	r3, #35	; 0x23
   232b8:	moveq	r3, #1
   232bc:	movne	r3, #0
   232c0:	uxtb	r3, r3
   232c4:	ldr	r2, [fp, #8]
   232c8:	str	r2, [sp, #4]
   232cc:	str	r3, [sp]
   232d0:	movw	r3, #25688	; 0x6458
   232d4:	movt	r3, #3
   232d8:	movw	r2, #25692	; 0x645c
   232dc:	movt	r2, #3
   232e0:	ldr	r0, [fp, #-16]
   232e4:	bl	25d78 <__assert_fail@plt+0x14834>
   232e8:	str	r0, [fp, #-8]
   232ec:	ldr	r3, [fp, #8]
   232f0:	ldr	r3, [r3]
   232f4:	cmp	r3, #0
   232f8:	movne	r3, #1
   232fc:	moveq	r3, #0
   23300:	uxtb	r3, r3
   23304:	cmp	r3, #0
   23308:	beq	2337c <__assert_fail@plt+0x11e38>
   2330c:	ldr	r3, [fp, #-8]
   23310:	cmp	r3, #0
   23314:	moveq	r3, #1
   23318:	movne	r3, #0
   2331c:	uxtb	r3, r3
   23320:	cmp	r3, #0
   23324:	beq	2337c <__assert_fail@plt+0x11e38>
   23328:	mov	r3, #0
   2332c:	b	234d0 <__assert_fail@plt+0x11f8c>
   23330:	mov	r3, #0
   23334:	b	234d0 <__assert_fail@plt+0x11f8c>
   23338:	ldr	r3, [fp, #8]
   2333c:	mov	r2, #5
   23340:	str	r2, [r3]
   23344:	mov	r3, #0
   23348:	b	234d0 <__assert_fail@plt+0x11f8c>
   2334c:	nop	{0}
   23350:	b	23380 <__assert_fail@plt+0x11e3c>
   23354:	nop	{0}
   23358:	b	23380 <__assert_fail@plt+0x11e3c>
   2335c:	nop	{0}
   23360:	b	23380 <__assert_fail@plt+0x11e3c>
   23364:	nop	{0}
   23368:	b	23380 <__assert_fail@plt+0x11e3c>
   2336c:	nop	{0}
   23370:	b	23380 <__assert_fail@plt+0x11e3c>
   23374:	nop	{0}
   23378:	b	23380 <__assert_fail@plt+0x11e3c>
   2337c:	nop	{0}
   23380:	ldr	r2, [fp, #-44]	; 0xffffffd4
   23384:	ldr	r1, [fp, #-32]	; 0xffffffe0
   23388:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2338c:	bl	21540 <__assert_fail@plt+0xfffc>
   23390:	b	2348c <__assert_fail@plt+0x11f48>
   23394:	ldr	r3, [fp, #8]
   23398:	str	r3, [sp, #4]
   2339c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   233a0:	str	r3, [sp]
   233a4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   233a8:	ldr	r2, [fp, #-16]
   233ac:	ldr	r1, [fp, #-32]	; 0xffffffe0
   233b0:	ldr	r0, [fp, #-8]
   233b4:	bl	236b0 <__assert_fail@plt+0x1216c>
   233b8:	str	r0, [fp, #-28]	; 0xffffffe4
   233bc:	ldr	r3, [fp, #8]
   233c0:	ldr	r3, [r3]
   233c4:	cmp	r3, #0
   233c8:	movne	r3, #1
   233cc:	moveq	r3, #0
   233d0:	uxtb	r3, r3
   233d4:	cmp	r3, #0
   233d8:	beq	23420 <__assert_fail@plt+0x11edc>
   233dc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   233e0:	cmp	r3, #0
   233e4:	moveq	r3, #1
   233e8:	movne	r3, #0
   233ec:	uxtb	r3, r3
   233f0:	cmp	r3, #0
   233f4:	beq	23420 <__assert_fail@plt+0x11edc>
   233f8:	ldr	r3, [fp, #-8]
   233fc:	cmp	r3, #0
   23400:	beq	23418 <__assert_fail@plt+0x11ed4>
   23404:	mov	r2, #0
   23408:	movw	r1, #25824	; 0x64e0
   2340c:	movt	r1, #2
   23410:	ldr	r0, [fp, #-8]
   23414:	bl	1faa0 <__assert_fail@plt+0xe55c>
   23418:	mov	r3, #0
   2341c:	b	234d0 <__assert_fail@plt+0x11f8c>
   23420:	ldr	r3, [fp, #-28]	; 0xffffffe4
   23424:	str	r3, [fp, #-8]
   23428:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2342c:	and	r3, r3, #16777216	; 0x1000000
   23430:	cmp	r3, #0
   23434:	beq	2348c <__assert_fail@plt+0x11f48>
   23438:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2343c:	ldrb	r3, [r3, #4]
   23440:	cmp	r3, #11
   23444:	beq	23458 <__assert_fail@plt+0x11f14>
   23448:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2344c:	ldrb	r3, [r3, #4]
   23450:	cmp	r3, #23
   23454:	bne	2348c <__assert_fail@plt+0x11f48>
   23458:	ldr	r3, [fp, #-8]
   2345c:	cmp	r3, #0
   23460:	beq	23478 <__assert_fail@plt+0x11f34>
   23464:	mov	r2, #0
   23468:	movw	r1, #25824	; 0x64e0
   2346c:	movt	r1, #2
   23470:	ldr	r0, [fp, #-8]
   23474:	bl	1faa0 <__assert_fail@plt+0xe55c>
   23478:	ldr	r3, [fp, #8]
   2347c:	mov	r2, #13
   23480:	str	r2, [r3]
   23484:	mov	r3, #0
   23488:	b	234d0 <__assert_fail@plt+0x11f8c>
   2348c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   23490:	ldrb	r3, [r3, #4]
   23494:	cmp	r3, #11
   23498:	beq	23394 <__assert_fail@plt+0x11e50>
   2349c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   234a0:	ldrb	r3, [r3, #4]
   234a4:	cmp	r3, #18
   234a8:	beq	23394 <__assert_fail@plt+0x11e50>
   234ac:	ldr	r3, [fp, #-40]	; 0xffffffd8
   234b0:	ldrb	r3, [r3, #4]
   234b4:	cmp	r3, #19
   234b8:	beq	23394 <__assert_fail@plt+0x11e50>
   234bc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   234c0:	ldrb	r3, [r3, #4]
   234c4:	cmp	r3, #23
   234c8:	beq	23394 <__assert_fail@plt+0x11e50>
   234cc:	ldr	r3, [fp, #-8]
   234d0:	mov	r0, r3
   234d4:	sub	sp, fp, #4
   234d8:	ldr	fp, [sp]
   234dc:	add	sp, sp, #4
   234e0:	pop	{pc}		; (ldr pc, [sp], #4)
   234e4:	str	fp, [sp, #-8]!
   234e8:	str	lr, [sp, #4]
   234ec:	add	fp, sp, #4
   234f0:	sub	sp, sp, #40	; 0x28
   234f4:	str	r0, [fp, #-24]	; 0xffffffe8
   234f8:	str	r1, [fp, #-28]	; 0xffffffe4
   234fc:	str	r2, [fp, #-32]	; 0xffffffe0
   23500:	str	r3, [fp, #-36]	; 0xffffffdc
   23504:	ldr	r3, [fp, #-28]	; 0xffffffe4
   23508:	ldr	r3, [r3]
   2350c:	str	r3, [fp, #-12]
   23510:	ldr	r3, [fp, #-28]	; 0xffffffe4
   23514:	ldr	r3, [r3, #24]
   23518:	add	r1, r3, #1
   2351c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   23520:	str	r1, [r2, #24]
   23524:	str	r3, [fp, #-16]
   23528:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2352c:	orr	r3, r3, #8388608	; 0x800000
   23530:	mov	r2, r3
   23534:	ldr	r1, [fp, #-24]	; 0xffffffe8
   23538:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2353c:	bl	21540 <__assert_fail@plt+0xfffc>
   23540:	ldr	r3, [fp, #-32]	; 0xffffffe0
   23544:	ldrb	r3, [r3, #4]
   23548:	cmp	r3, #9
   2354c:	bne	2355c <__assert_fail@plt+0x12018>
   23550:	mov	r3, #0
   23554:	str	r3, [fp, #-8]
   23558:	b	23618 <__assert_fail@plt+0x120d4>
   2355c:	ldr	r3, [fp, #8]
   23560:	str	r3, [sp, #4]
   23564:	ldr	r3, [fp, #4]
   23568:	str	r3, [sp]
   2356c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   23570:	ldr	r2, [fp, #-32]	; 0xffffffe0
   23574:	ldr	r1, [fp, #-28]	; 0xffffffe4
   23578:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2357c:	bl	226b8 <__assert_fail@plt+0x11174>
   23580:	str	r0, [fp, #-8]
   23584:	ldr	r3, [fp, #8]
   23588:	ldr	r3, [r3]
   2358c:	cmp	r3, #0
   23590:	moveq	r3, #1
   23594:	movne	r3, #0
   23598:	uxtb	r3, r3
   2359c:	cmp	r3, #0
   235a0:	beq	235f0 <__assert_fail@plt+0x120ac>
   235a4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   235a8:	ldrb	r3, [r3, #4]
   235ac:	cmp	r3, #9
   235b0:	movne	r3, #1
   235b4:	moveq	r3, #0
   235b8:	uxtb	r3, r3
   235bc:	cmp	r3, #0
   235c0:	beq	235f0 <__assert_fail@plt+0x120ac>
   235c4:	ldr	r3, [fp, #-8]
   235c8:	cmp	r3, #0
   235cc:	beq	235e4 <__assert_fail@plt+0x120a0>
   235d0:	mov	r2, #0
   235d4:	movw	r1, #25824	; 0x64e0
   235d8:	movt	r1, #2
   235dc:	ldr	r0, [fp, #-8]
   235e0:	bl	1faa0 <__assert_fail@plt+0xe55c>
   235e4:	ldr	r3, [fp, #8]
   235e8:	mov	r2, #8
   235ec:	str	r2, [r3]
   235f0:	ldr	r3, [fp, #8]
   235f4:	ldr	r3, [r3]
   235f8:	cmp	r3, #0
   235fc:	movne	r3, #1
   23600:	moveq	r3, #0
   23604:	uxtb	r3, r3
   23608:	cmp	r3, #0
   2360c:	beq	23618 <__assert_fail@plt+0x120d4>
   23610:	mov	r3, #0
   23614:	b	2369c <__assert_fail@plt+0x12158>
   23618:	ldr	r3, [fp, #-16]
   2361c:	cmp	r3, #8
   23620:	bhi	23644 <__assert_fail@plt+0x12100>
   23624:	ldr	r3, [fp, #-12]
   23628:	ldr	r3, [r3, #84]	; 0x54
   2362c:	mov	r1, #1
   23630:	ldr	r2, [fp, #-16]
   23634:	lsl	r2, r1, r2
   23638:	orr	r2, r3, r2
   2363c:	ldr	r3, [fp, #-12]
   23640:	str	r2, [r3, #84]	; 0x54
   23644:	mov	r3, #17
   23648:	mov	r2, #0
   2364c:	ldr	r1, [fp, #-8]
   23650:	ldr	r0, [fp, #-12]
   23654:	bl	261f8 <__assert_fail@plt+0x14cb4>
   23658:	str	r0, [fp, #-8]
   2365c:	ldr	r3, [fp, #-8]
   23660:	cmp	r3, #0
   23664:	moveq	r3, #1
   23668:	movne	r3, #0
   2366c:	uxtb	r3, r3
   23670:	cmp	r3, #0
   23674:	beq	2368c <__assert_fail@plt+0x12148>
   23678:	ldr	r3, [fp, #8]
   2367c:	mov	r2, #12
   23680:	str	r2, [r3]
   23684:	mov	r3, #0
   23688:	b	2369c <__assert_fail@plt+0x12158>
   2368c:	ldr	r2, [fp, #-16]
   23690:	ldr	r3, [fp, #-8]
   23694:	str	r2, [r3, #20]
   23698:	ldr	r3, [fp, #-8]
   2369c:	mov	r0, r3
   236a0:	sub	sp, fp, #4
   236a4:	ldr	fp, [sp]
   236a8:	add	sp, sp, #4
   236ac:	pop	{pc}		; (ldr pc, [sp], #4)
   236b0:	str	fp, [sp, #-8]!
   236b4:	str	lr, [sp, #4]
   236b8:	add	fp, sp, #4
   236bc:	sub	sp, sp, #56	; 0x38
   236c0:	str	r0, [fp, #-48]	; 0xffffffd0
   236c4:	str	r1, [fp, #-52]	; 0xffffffcc
   236c8:	str	r2, [fp, #-56]	; 0xffffffc8
   236cc:	str	r3, [fp, #-60]	; 0xffffffc4
   236d0:	mov	r3, #0
   236d4:	str	r3, [fp, #-8]
   236d8:	mov	r3, #0
   236dc:	str	r3, [fp, #-12]
   236e0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   236e4:	ldr	r3, [r3, #40]	; 0x28
   236e8:	str	r3, [fp, #-28]	; 0xffffffe4
   236ec:	ldr	r3, [fp, #-60]	; 0xffffffc4
   236f0:	sub	r1, fp, #40	; 0x28
   236f4:	ldrd	r2, [r3]
   236f8:	strd	r2, [r1]
   236fc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   23700:	ldrb	r3, [r3, #4]
   23704:	cmp	r3, #23
   23708:	bne	23988 <__assert_fail@plt+0x12444>
   2370c:	mov	r3, #0
   23710:	str	r3, [fp, #-24]	; 0xffffffe8
   23714:	ldr	r2, [fp, #4]
   23718:	ldr	r1, [fp, #-60]	; 0xffffffc4
   2371c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   23720:	bl	2605c <__assert_fail@plt+0x14b18>
   23724:	str	r0, [fp, #-20]	; 0xffffffec
   23728:	ldr	r3, [fp, #-20]	; 0xffffffec
   2372c:	cmn	r3, #1
   23730:	bne	23774 <__assert_fail@plt+0x12230>
   23734:	ldr	r3, [fp, #-60]	; 0xffffffc4
   23738:	ldrb	r3, [r3, #4]
   2373c:	cmp	r3, #1
   23740:	bne	23760 <__assert_fail@plt+0x1221c>
   23744:	ldr	r3, [fp, #-60]	; 0xffffffc4
   23748:	ldrb	r3, [r3]
   2374c:	cmp	r3, #44	; 0x2c
   23750:	bne	23760 <__assert_fail@plt+0x1221c>
   23754:	mov	r3, #0
   23758:	str	r3, [fp, #-20]	; 0xffffffec
   2375c:	b	23774 <__assert_fail@plt+0x12230>
   23760:	ldr	r3, [fp, #8]
   23764:	mov	r2, #10
   23768:	str	r2, [r3]
   2376c:	mov	r3, #0
   23770:	b	23cec <__assert_fail@plt+0x127a8>
   23774:	ldr	r3, [fp, #-20]	; 0xffffffec
   23778:	cmn	r3, #2
   2377c:	movne	r3, #1
   23780:	moveq	r3, #0
   23784:	uxtb	r3, r3
   23788:	cmp	r3, #0
   2378c:	beq	237e8 <__assert_fail@plt+0x122a4>
   23790:	ldr	r3, [fp, #-60]	; 0xffffffc4
   23794:	ldrb	r3, [r3, #4]
   23798:	cmp	r3, #24
   2379c:	beq	237e0 <__assert_fail@plt+0x1229c>
   237a0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   237a4:	ldrb	r3, [r3, #4]
   237a8:	cmp	r3, #1
   237ac:	bne	237d8 <__assert_fail@plt+0x12294>
   237b0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   237b4:	ldrb	r3, [r3]
   237b8:	cmp	r3, #44	; 0x2c
   237bc:	bne	237d8 <__assert_fail@plt+0x12294>
   237c0:	ldr	r2, [fp, #4]
   237c4:	ldr	r1, [fp, #-60]	; 0xffffffc4
   237c8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   237cc:	bl	2605c <__assert_fail@plt+0x14b18>
   237d0:	mov	r3, r0
   237d4:	b	237e4 <__assert_fail@plt+0x122a0>
   237d8:	mvn	r3, #1
   237dc:	b	237e4 <__assert_fail@plt+0x122a0>
   237e0:	ldr	r3, [fp, #-20]	; 0xffffffec
   237e4:	str	r3, [fp, #-24]	; 0xffffffe8
   237e8:	ldr	r3, [fp, #-20]	; 0xffffffec
   237ec:	cmn	r3, #2
   237f0:	moveq	r3, #1
   237f4:	movne	r3, #0
   237f8:	uxtb	r3, r3
   237fc:	cmp	r3, #0
   23800:	bne	23820 <__assert_fail@plt+0x122dc>
   23804:	ldr	r3, [fp, #-24]	; 0xffffffe8
   23808:	cmn	r3, #2
   2380c:	moveq	r3, #1
   23810:	movne	r3, #0
   23814:	uxtb	r3, r3
   23818:	cmp	r3, #0
   2381c:	beq	238a8 <__assert_fail@plt+0x12364>
   23820:	ldr	r3, [fp, #4]
   23824:	and	r3, r3, #2097152	; 0x200000
   23828:	cmp	r3, #0
   2382c:	moveq	r3, #1
   23830:	movne	r3, #0
   23834:	uxtb	r3, r3
   23838:	cmp	r3, #0
   2383c:	beq	23874 <__assert_fail@plt+0x12330>
   23840:	ldr	r3, [fp, #-60]	; 0xffffffc4
   23844:	ldrb	r3, [r3, #4]
   23848:	cmp	r3, #2
   2384c:	bne	23860 <__assert_fail@plt+0x1231c>
   23850:	ldr	r3, [fp, #8]
   23854:	mov	r2, #9
   23858:	str	r2, [r3]
   2385c:	b	2386c <__assert_fail@plt+0x12328>
   23860:	ldr	r3, [fp, #8]
   23864:	mov	r2, #10
   23868:	str	r2, [r3]
   2386c:	mov	r3, #0
   23870:	b	23cec <__assert_fail@plt+0x127a8>
   23874:	ldr	r3, [fp, #-52]	; 0xffffffcc
   23878:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2387c:	str	r2, [r3, #40]	; 0x28
   23880:	ldr	r3, [fp, #-60]	; 0xffffffc4
   23884:	mov	r1, r3
   23888:	sub	r3, fp, #40	; 0x28
   2388c:	ldrd	r2, [r3]
   23890:	strd	r2, [r1]
   23894:	ldr	r3, [fp, #-60]	; 0xffffffc4
   23898:	mov	r2, #1
   2389c:	strb	r2, [r3, #4]
   238a0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   238a4:	b	23cec <__assert_fail@plt+0x127a8>
   238a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   238ac:	cmn	r3, #1
   238b0:	movne	r3, #1
   238b4:	moveq	r3, #0
   238b8:	uxtb	r3, r3
   238bc:	cmp	r3, #0
   238c0:	beq	238ec <__assert_fail@plt+0x123a8>
   238c4:	ldr	r2, [fp, #-20]	; 0xffffffec
   238c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   238cc:	cmp	r2, r3
   238d0:	movgt	r3, #1
   238d4:	movle	r3, #0
   238d8:	uxtb	r3, r3
   238dc:	cmp	r3, #0
   238e0:	beq	238ec <__assert_fail@plt+0x123a8>
   238e4:	mov	r3, #1
   238e8:	b	238f0 <__assert_fail@plt+0x123ac>
   238ec:	mov	r3, #0
   238f0:	cmp	r3, #0
   238f4:	bne	23918 <__assert_fail@plt+0x123d4>
   238f8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   238fc:	ldrb	r3, [r3, #4]
   23900:	cmp	r3, #24
   23904:	movne	r3, #1
   23908:	moveq	r3, #0
   2390c:	uxtb	r3, r3
   23910:	cmp	r3, #0
   23914:	beq	2392c <__assert_fail@plt+0x123e8>
   23918:	ldr	r3, [fp, #8]
   2391c:	mov	r2, #10
   23920:	str	r2, [r3]
   23924:	mov	r3, #0
   23928:	b	23cec <__assert_fail@plt+0x127a8>
   2392c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   23930:	cmn	r3, #1
   23934:	bne	23954 <__assert_fail@plt+0x12410>
   23938:	ldr	r3, [fp, #-20]	; 0xffffffec
   2393c:	movw	r2, #32767	; 0x7fff
   23940:	cmp	r3, r2
   23944:	movgt	r3, #1
   23948:	movle	r3, #0
   2394c:	uxtb	r3, r3
   23950:	b	2396c <__assert_fail@plt+0x12428>
   23954:	ldr	r3, [fp, #-24]	; 0xffffffe8
   23958:	movw	r2, #32767	; 0x7fff
   2395c:	cmp	r3, r2
   23960:	movgt	r3, #1
   23964:	movle	r3, #0
   23968:	uxtb	r3, r3
   2396c:	cmp	r3, #0
   23970:	beq	239c4 <__assert_fail@plt+0x12480>
   23974:	ldr	r3, [fp, #8]
   23978:	mov	r2, #15
   2397c:	str	r2, [r3]
   23980:	mov	r3, #0
   23984:	b	23cec <__assert_fail@plt+0x127a8>
   23988:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2398c:	ldrb	r3, [r3, #4]
   23990:	cmp	r3, #18
   23994:	moveq	r3, #1
   23998:	movne	r3, #0
   2399c:	uxtb	r3, r3
   239a0:	str	r3, [fp, #-20]	; 0xffffffec
   239a4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   239a8:	ldrb	r3, [r3, #4]
   239ac:	cmp	r3, #19
   239b0:	bne	239bc <__assert_fail@plt+0x12478>
   239b4:	mov	r3, #1
   239b8:	b	239c0 <__assert_fail@plt+0x1247c>
   239bc:	mvn	r3, #0
   239c0:	str	r3, [fp, #-24]	; 0xffffffe8
   239c4:	ldr	r2, [fp, #4]
   239c8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   239cc:	ldr	r0, [fp, #-60]	; 0xffffffc4
   239d0:	bl	21540 <__assert_fail@plt+0xfffc>
   239d4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   239d8:	cmp	r3, #0
   239dc:	moveq	r3, #1
   239e0:	movne	r3, #0
   239e4:	uxtb	r3, r3
   239e8:	cmp	r3, #0
   239ec:	beq	239f8 <__assert_fail@plt+0x124b4>
   239f0:	mov	r3, #0
   239f4:	b	23cec <__assert_fail@plt+0x127a8>
   239f8:	ldr	r3, [fp, #-20]	; 0xffffffec
   239fc:	cmp	r3, #0
   23a00:	moveq	r3, #1
   23a04:	movne	r3, #0
   23a08:	uxtb	r3, r3
   23a0c:	cmp	r3, #0
   23a10:	beq	23a4c <__assert_fail@plt+0x12508>
   23a14:	ldr	r3, [fp, #-24]	; 0xffffffe8
   23a18:	cmp	r3, #0
   23a1c:	moveq	r3, #1
   23a20:	movne	r3, #0
   23a24:	uxtb	r3, r3
   23a28:	cmp	r3, #0
   23a2c:	beq	23a4c <__assert_fail@plt+0x12508>
   23a30:	mov	r2, #0
   23a34:	movw	r1, #25824	; 0x64e0
   23a38:	movt	r1, #2
   23a3c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   23a40:	bl	1faa0 <__assert_fail@plt+0xe55c>
   23a44:	mov	r3, #0
   23a48:	b	23cec <__assert_fail@plt+0x127a8>
   23a4c:	ldr	r3, [fp, #-20]	; 0xffffffec
   23a50:	cmp	r3, #0
   23a54:	movgt	r3, #1
   23a58:	movle	r3, #0
   23a5c:	uxtb	r3, r3
   23a60:	cmp	r3, #0
   23a64:	beq	23b48 <__assert_fail@plt+0x12604>
   23a68:	ldr	r3, [fp, #-48]	; 0xffffffd0
   23a6c:	str	r3, [fp, #-8]
   23a70:	mov	r3, #2
   23a74:	str	r3, [fp, #-16]
   23a78:	b	23ae8 <__assert_fail@plt+0x125a4>
   23a7c:	ldr	r1, [fp, #-56]	; 0xffffffc8
   23a80:	ldr	r0, [fp, #-48]	; 0xffffffd0
   23a84:	bl	26520 <__assert_fail@plt+0x14fdc>
   23a88:	str	r0, [fp, #-48]	; 0xffffffd0
   23a8c:	mov	r3, #16
   23a90:	ldr	r2, [fp, #-48]	; 0xffffffd0
   23a94:	ldr	r1, [fp, #-8]
   23a98:	ldr	r0, [fp, #-56]	; 0xffffffc8
   23a9c:	bl	261f8 <__assert_fail@plt+0x14cb4>
   23aa0:	str	r0, [fp, #-8]
   23aa4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   23aa8:	cmp	r3, #0
   23aac:	moveq	r3, #1
   23ab0:	movne	r3, #0
   23ab4:	uxtb	r3, r3
   23ab8:	cmp	r3, #0
   23abc:	bne	23cb8 <__assert_fail@plt+0x12774>
   23ac0:	ldr	r3, [fp, #-8]
   23ac4:	cmp	r3, #0
   23ac8:	moveq	r3, #1
   23acc:	movne	r3, #0
   23ad0:	uxtb	r3, r3
   23ad4:	cmp	r3, #0
   23ad8:	bne	23cb8 <__assert_fail@plt+0x12774>
   23adc:	ldr	r3, [fp, #-16]
   23ae0:	add	r3, r3, #1
   23ae4:	str	r3, [fp, #-16]
   23ae8:	ldr	r2, [fp, #-16]
   23aec:	ldr	r3, [fp, #-20]	; 0xffffffec
   23af0:	cmp	r2, r3
   23af4:	ble	23a7c <__assert_fail@plt+0x12538>
   23af8:	ldr	r2, [fp, #-20]	; 0xffffffec
   23afc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   23b00:	cmp	r2, r3
   23b04:	bne	23b10 <__assert_fail@plt+0x125cc>
   23b08:	ldr	r3, [fp, #-8]
   23b0c:	b	23cec <__assert_fail@plt+0x127a8>
   23b10:	ldr	r1, [fp, #-56]	; 0xffffffc8
   23b14:	ldr	r0, [fp, #-48]	; 0xffffffd0
   23b18:	bl	26520 <__assert_fail@plt+0x14fdc>
   23b1c:	str	r0, [fp, #-48]	; 0xffffffd0
   23b20:	ldr	r3, [fp, #-48]	; 0xffffffd0
   23b24:	cmp	r3, #0
   23b28:	moveq	r3, #1
   23b2c:	movne	r3, #0
   23b30:	uxtb	r3, r3
   23b34:	cmp	r3, #0
   23b38:	bne	23cc0 <__assert_fail@plt+0x1277c>
   23b3c:	ldr	r3, [fp, #-8]
   23b40:	str	r3, [fp, #-12]
   23b44:	b	23b50 <__assert_fail@plt+0x1260c>
   23b48:	mov	r3, #0
   23b4c:	str	r3, [fp, #-12]
   23b50:	ldr	r3, [fp, #-48]	; 0xffffffd0
   23b54:	ldrb	r3, [r3, #24]
   23b58:	cmp	r3, #17
   23b5c:	bne	23b84 <__assert_fail@plt+0x12640>
   23b60:	ldr	r3, [fp, #-48]	; 0xffffffd0
   23b64:	ldr	r3, [r3, #20]
   23b68:	str	r3, [fp, #-32]	; 0xffffffe0
   23b6c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   23b70:	mov	r2, r3
   23b74:	movw	r1, #25568	; 0x63e0
   23b78:	movt	r1, #2
   23b7c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   23b80:	bl	1faa0 <__assert_fail@plt+0xe55c>
   23b84:	ldr	r3, [fp, #-24]	; 0xffffffe8
   23b88:	cmn	r3, #1
   23b8c:	bne	23b98 <__assert_fail@plt+0x12654>
   23b90:	mov	r3, #11
   23b94:	b	23b9c <__assert_fail@plt+0x12658>
   23b98:	mov	r3, #10
   23b9c:	mov	r2, #0
   23ba0:	ldr	r1, [fp, #-48]	; 0xffffffd0
   23ba4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   23ba8:	bl	261f8 <__assert_fail@plt+0x14cb4>
   23bac:	str	r0, [fp, #-8]
   23bb0:	ldr	r3, [fp, #-8]
   23bb4:	cmp	r3, #0
   23bb8:	moveq	r3, #1
   23bbc:	movne	r3, #0
   23bc0:	uxtb	r3, r3
   23bc4:	cmp	r3, #0
   23bc8:	bne	23cc8 <__assert_fail@plt+0x12784>
   23bcc:	ldr	r3, [fp, #-20]	; 0xffffffec
   23bd0:	add	r3, r3, #2
   23bd4:	str	r3, [fp, #-16]
   23bd8:	b	23c7c <__assert_fail@plt+0x12738>
   23bdc:	ldr	r1, [fp, #-56]	; 0xffffffc8
   23be0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   23be4:	bl	26520 <__assert_fail@plt+0x14fdc>
   23be8:	str	r0, [fp, #-48]	; 0xffffffd0
   23bec:	mov	r3, #16
   23bf0:	ldr	r2, [fp, #-48]	; 0xffffffd0
   23bf4:	ldr	r1, [fp, #-8]
   23bf8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   23bfc:	bl	261f8 <__assert_fail@plt+0x14cb4>
   23c00:	str	r0, [fp, #-8]
   23c04:	ldr	r3, [fp, #-48]	; 0xffffffd0
   23c08:	cmp	r3, #0
   23c0c:	moveq	r3, #1
   23c10:	movne	r3, #0
   23c14:	uxtb	r3, r3
   23c18:	cmp	r3, #0
   23c1c:	bne	23cd0 <__assert_fail@plt+0x1278c>
   23c20:	ldr	r3, [fp, #-8]
   23c24:	cmp	r3, #0
   23c28:	moveq	r3, #1
   23c2c:	movne	r3, #0
   23c30:	uxtb	r3, r3
   23c34:	cmp	r3, #0
   23c38:	bne	23cd0 <__assert_fail@plt+0x1278c>
   23c3c:	mov	r3, #10
   23c40:	mov	r2, #0
   23c44:	ldr	r1, [fp, #-8]
   23c48:	ldr	r0, [fp, #-56]	; 0xffffffc8
   23c4c:	bl	261f8 <__assert_fail@plt+0x14cb4>
   23c50:	str	r0, [fp, #-8]
   23c54:	ldr	r3, [fp, #-8]
   23c58:	cmp	r3, #0
   23c5c:	moveq	r3, #1
   23c60:	movne	r3, #0
   23c64:	uxtb	r3, r3
   23c68:	cmp	r3, #0
   23c6c:	bne	23cd8 <__assert_fail@plt+0x12794>
   23c70:	ldr	r3, [fp, #-16]
   23c74:	add	r3, r3, #1
   23c78:	str	r3, [fp, #-16]
   23c7c:	ldr	r2, [fp, #-16]
   23c80:	ldr	r3, [fp, #-24]	; 0xffffffe8
   23c84:	cmp	r2, r3
   23c88:	ble	23bdc <__assert_fail@plt+0x12698>
   23c8c:	ldr	r3, [fp, #-12]
   23c90:	cmp	r3, #0
   23c94:	beq	23cb0 <__assert_fail@plt+0x1276c>
   23c98:	mov	r3, #16
   23c9c:	ldr	r2, [fp, #-8]
   23ca0:	ldr	r1, [fp, #-12]
   23ca4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   23ca8:	bl	261f8 <__assert_fail@plt+0x14cb4>
   23cac:	str	r0, [fp, #-8]
   23cb0:	ldr	r3, [fp, #-8]
   23cb4:	b	23cec <__assert_fail@plt+0x127a8>
   23cb8:	nop	{0}
   23cbc:	b	23cdc <__assert_fail@plt+0x12798>
   23cc0:	nop	{0}
   23cc4:	b	23cdc <__assert_fail@plt+0x12798>
   23cc8:	nop	{0}
   23ccc:	b	23cdc <__assert_fail@plt+0x12798>
   23cd0:	nop	{0}
   23cd4:	b	23cdc <__assert_fail@plt+0x12798>
   23cd8:	nop	{0}
   23cdc:	ldr	r3, [fp, #8]
   23ce0:	mov	r2, #12
   23ce4:	str	r2, [r3]
   23ce8:	mov	r3, #0
   23cec:	mov	r0, r3
   23cf0:	sub	sp, fp, #4
   23cf4:	ldr	fp, [sp]
   23cf8:	add	sp, sp, #4
   23cfc:	pop	{pc}		; (ldr pc, [sp], #4)
   23d00:	str	fp, [sp, #-8]!
   23d04:	str	lr, [sp, #4]
   23d08:	add	fp, sp, #4
   23d0c:	sub	sp, sp, #8
   23d10:	mov	r3, r0
   23d14:	str	r1, [fp, #-12]
   23d18:	strb	r3, [fp, #-5]
   23d1c:	ldr	r3, [fp, #-12]
   23d20:	ldr	r3, [r3, #92]	; 0x5c
   23d24:	cmp	r3, #1
   23d28:	ble	23d40 <__assert_fail@plt+0x127fc>
   23d2c:	ldrb	r3, [fp, #-5]
   23d30:	mov	r0, r3
   23d34:	bl	11454 <btowc@plt>
   23d38:	mov	r3, r0
   23d3c:	b	23d44 <__assert_fail@plt+0x12800>
   23d40:	ldrb	r3, [fp, #-5]
   23d44:	mov	r0, r3
   23d48:	sub	sp, fp, #4
   23d4c:	ldr	fp, [sp]
   23d50:	add	sp, sp, #4
   23d54:	pop	{pc}		; (ldr pc, [sp], #4)
   23d58:	str	fp, [sp, #-8]!
   23d5c:	str	lr, [sp, #4]
   23d60:	add	fp, sp, #4
   23d64:	sub	sp, sp, #48	; 0x30
   23d68:	str	r0, [fp, #-40]	; 0xffffffd8
   23d6c:	str	r1, [fp, #-44]	; 0xffffffd4
   23d70:	str	r2, [fp, #-48]	; 0xffffffd0
   23d74:	str	r3, [fp, #-52]	; 0xffffffcc
   23d78:	ldr	r3, [fp, #-52]	; 0xffffffcc
   23d7c:	ldr	r3, [r3]
   23d80:	cmp	r3, #2
   23d84:	moveq	r3, #1
   23d88:	movne	r3, #0
   23d8c:	uxtb	r3, r3
   23d90:	cmp	r3, #0
   23d94:	bne	23db8 <__assert_fail@plt+0x12874>
   23d98:	ldr	r3, [fp, #-52]	; 0xffffffcc
   23d9c:	ldr	r3, [r3]
   23da0:	cmp	r3, #4
   23da4:	moveq	r3, #1
   23da8:	movne	r3, #0
   23dac:	uxtb	r3, r3
   23db0:	cmp	r3, #0
   23db4:	beq	23dc0 <__assert_fail@plt+0x1287c>
   23db8:	mov	r3, #1
   23dbc:	b	23dc4 <__assert_fail@plt+0x12880>
   23dc0:	mov	r3, #0
   23dc4:	cmp	r3, #0
   23dc8:	bne	23dec <__assert_fail@plt+0x128a8>
   23dcc:	ldr	r3, [fp, #4]
   23dd0:	ldr	r3, [r3]
   23dd4:	cmp	r3, #2
   23dd8:	moveq	r3, #1
   23ddc:	movne	r3, #0
   23de0:	uxtb	r3, r3
   23de4:	cmp	r3, #0
   23de8:	beq	23df4 <__assert_fail@plt+0x128b0>
   23dec:	mov	r3, #1
   23df0:	b	23df8 <__assert_fail@plt+0x128b4>
   23df4:	mov	r3, #0
   23df8:	cmp	r3, #0
   23dfc:	bne	23e20 <__assert_fail@plt+0x128dc>
   23e00:	ldr	r3, [fp, #4]
   23e04:	ldr	r3, [r3]
   23e08:	cmp	r3, #4
   23e0c:	moveq	r3, #1
   23e10:	movne	r3, #0
   23e14:	uxtb	r3, r3
   23e18:	cmp	r3, #0
   23e1c:	beq	23e28 <__assert_fail@plt+0x128e4>
   23e20:	mov	r3, #11
   23e24:	b	24214 <__assert_fail@plt+0x12cd0>
   23e28:	ldr	r3, [fp, #-52]	; 0xffffffcc
   23e2c:	ldr	r3, [r3]
   23e30:	cmp	r3, #3
   23e34:	moveq	r3, #1
   23e38:	movne	r3, #0
   23e3c:	uxtb	r3, r3
   23e40:	cmp	r3, #0
   23e44:	beq	23e7c <__assert_fail@plt+0x12938>
   23e48:	ldr	r3, [fp, #-52]	; 0xffffffcc
   23e4c:	ldr	r3, [r3, #4]
   23e50:	mov	r0, r3
   23e54:	bl	113f4 <strlen@plt>
   23e58:	mov	r3, r0
   23e5c:	cmp	r3, #1
   23e60:	movhi	r3, #1
   23e64:	movls	r3, #0
   23e68:	uxtb	r3, r3
   23e6c:	cmp	r3, #0
   23e70:	beq	23e7c <__assert_fail@plt+0x12938>
   23e74:	mov	r3, #1
   23e78:	b	23e80 <__assert_fail@plt+0x1293c>
   23e7c:	mov	r3, #0
   23e80:	cmp	r3, #0
   23e84:	bne	23ee8 <__assert_fail@plt+0x129a4>
   23e88:	ldr	r3, [fp, #4]
   23e8c:	ldr	r3, [r3]
   23e90:	cmp	r3, #3
   23e94:	moveq	r3, #1
   23e98:	movne	r3, #0
   23e9c:	uxtb	r3, r3
   23ea0:	cmp	r3, #0
   23ea4:	beq	23edc <__assert_fail@plt+0x12998>
   23ea8:	ldr	r3, [fp, #4]
   23eac:	ldr	r3, [r3, #4]
   23eb0:	mov	r0, r3
   23eb4:	bl	113f4 <strlen@plt>
   23eb8:	mov	r3, r0
   23ebc:	cmp	r3, #1
   23ec0:	movhi	r3, #1
   23ec4:	movls	r3, #0
   23ec8:	uxtb	r3, r3
   23ecc:	cmp	r3, #0
   23ed0:	beq	23edc <__assert_fail@plt+0x12998>
   23ed4:	mov	r3, #1
   23ed8:	b	23ee0 <__assert_fail@plt+0x1299c>
   23edc:	mov	r3, #0
   23ee0:	cmp	r3, #0
   23ee4:	beq	23ef0 <__assert_fail@plt+0x129ac>
   23ee8:	mov	r3, #3
   23eec:	b	24214 <__assert_fail@plt+0x12cd0>
   23ef0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   23ef4:	ldr	r3, [r3]
   23ef8:	cmp	r3, #0
   23efc:	bne	23f0c <__assert_fail@plt+0x129c8>
   23f00:	ldr	r3, [fp, #-52]	; 0xffffffcc
   23f04:	ldrb	r3, [r3, #4]
   23f08:	b	23f30 <__assert_fail@plt+0x129ec>
   23f0c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   23f10:	ldr	r3, [r3]
   23f14:	cmp	r3, #3
   23f18:	bne	23f2c <__assert_fail@plt+0x129e8>
   23f1c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   23f20:	ldr	r3, [r3, #4]
   23f24:	ldrb	r3, [r3]
   23f28:	b	23f30 <__assert_fail@plt+0x129ec>
   23f2c:	mov	r3, #0
   23f30:	str	r3, [fp, #-12]
   23f34:	ldr	r3, [fp, #4]
   23f38:	ldr	r3, [r3]
   23f3c:	cmp	r3, #0
   23f40:	bne	23f50 <__assert_fail@plt+0x12a0c>
   23f44:	ldr	r3, [fp, #4]
   23f48:	ldrb	r3, [r3, #4]
   23f4c:	b	23f74 <__assert_fail@plt+0x12a30>
   23f50:	ldr	r3, [fp, #4]
   23f54:	ldr	r3, [r3]
   23f58:	cmp	r3, #3
   23f5c:	bne	23f70 <__assert_fail@plt+0x12a2c>
   23f60:	ldr	r3, [fp, #4]
   23f64:	ldr	r3, [r3, #4]
   23f68:	ldrb	r3, [r3]
   23f6c:	b	23f74 <__assert_fail@plt+0x12a30>
   23f70:	mov	r3, #0
   23f74:	str	r3, [fp, #-16]
   23f78:	ldr	r3, [fp, #-52]	; 0xffffffcc
   23f7c:	ldr	r3, [r3]
   23f80:	cmp	r3, #0
   23f84:	beq	23f98 <__assert_fail@plt+0x12a54>
   23f88:	ldr	r3, [fp, #-52]	; 0xffffffcc
   23f8c:	ldr	r3, [r3]
   23f90:	cmp	r3, #3
   23f94:	bne	23fb4 <__assert_fail@plt+0x12a70>
   23f98:	ldr	r3, [fp, #-12]
   23f9c:	uxtb	r3, r3
   23fa0:	ldr	r1, [fp, #8]
   23fa4:	mov	r0, r3
   23fa8:	bl	23d00 <__assert_fail@plt+0x127bc>
   23fac:	mov	r3, r0
   23fb0:	b	23fbc <__assert_fail@plt+0x12a78>
   23fb4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   23fb8:	ldr	r3, [r3, #4]
   23fbc:	str	r3, [fp, #-20]	; 0xffffffec
   23fc0:	ldr	r3, [fp, #4]
   23fc4:	ldr	r3, [r3]
   23fc8:	cmp	r3, #0
   23fcc:	beq	23fe0 <__assert_fail@plt+0x12a9c>
   23fd0:	ldr	r3, [fp, #4]
   23fd4:	ldr	r3, [r3]
   23fd8:	cmp	r3, #3
   23fdc:	bne	23ffc <__assert_fail@plt+0x12ab8>
   23fe0:	ldr	r3, [fp, #-16]
   23fe4:	uxtb	r3, r3
   23fe8:	ldr	r1, [fp, #8]
   23fec:	mov	r0, r3
   23ff0:	bl	23d00 <__assert_fail@plt+0x127bc>
   23ff4:	mov	r3, r0
   23ff8:	b	24004 <__assert_fail@plt+0x12ac0>
   23ffc:	ldr	r3, [fp, #4]
   24000:	ldr	r3, [r3, #4]
   24004:	str	r3, [fp, #-24]	; 0xffffffe8
   24008:	ldr	r3, [fp, #-20]	; 0xffffffec
   2400c:	cmn	r3, #1
   24010:	beq	24020 <__assert_fail@plt+0x12adc>
   24014:	ldr	r3, [fp, #-24]	; 0xffffffe8
   24018:	cmn	r3, #1
   2401c:	bne	24028 <__assert_fail@plt+0x12ae4>
   24020:	mov	r3, #3
   24024:	b	24214 <__assert_fail@plt+0x12cd0>
   24028:	ldr	r3, [fp, #12]
   2402c:	and	r3, r3, #65536	; 0x10000
   24030:	cmp	r3, #0
   24034:	movne	r3, #1
   24038:	moveq	r3, #0
   2403c:	uxtb	r3, r3
   24040:	cmp	r3, #0
   24044:	beq	24070 <__assert_fail@plt+0x12b2c>
   24048:	ldr	r2, [fp, #-20]	; 0xffffffec
   2404c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   24050:	cmp	r2, r3
   24054:	movhi	r3, #1
   24058:	movls	r3, #0
   2405c:	uxtb	r3, r3
   24060:	cmp	r3, #0
   24064:	beq	24070 <__assert_fail@plt+0x12b2c>
   24068:	mov	r3, #11
   2406c:	b	24214 <__assert_fail@plt+0x12cd0>
   24070:	ldr	r3, [fp, #8]
   24074:	ldr	r3, [r3, #92]	; 0x5c
   24078:	cmp	r3, #1
   2407c:	ble	241bc <__assert_fail@plt+0x12c78>
   24080:	ldr	r3, [fp, #-48]	; 0xffffffd0
   24084:	ldr	r2, [r3]
   24088:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2408c:	ldr	r3, [r3, #32]
   24090:	cmp	r2, r3
   24094:	moveq	r3, #1
   24098:	movne	r3, #0
   2409c:	uxtb	r3, r3
   240a0:	cmp	r3, #0
   240a4:	beq	24170 <__assert_fail@plt+0x12c2c>
   240a8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   240ac:	ldr	r3, [r3, #32]
   240b0:	lsl	r3, r3, #1
   240b4:	add	r3, r3, #1
   240b8:	str	r3, [fp, #-28]	; 0xffffffe4
   240bc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   240c0:	ldr	r2, [r3, #4]
   240c4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   240c8:	lsl	r3, r3, #2
   240cc:	mov	r1, r3
   240d0:	mov	r0, r2
   240d4:	bl	33c30 <__assert_fail@plt+0x226ec>
   240d8:	str	r0, [fp, #-32]	; 0xffffffe0
   240dc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   240e0:	ldr	r2, [r3, #8]
   240e4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   240e8:	lsl	r3, r3, #2
   240ec:	mov	r1, r3
   240f0:	mov	r0, r2
   240f4:	bl	33c30 <__assert_fail@plt+0x226ec>
   240f8:	str	r0, [fp, #-36]	; 0xffffffdc
   240fc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   24100:	cmp	r3, #0
   24104:	moveq	r3, #1
   24108:	movne	r3, #0
   2410c:	uxtb	r3, r3
   24110:	cmp	r3, #0
   24114:	bne	24134 <__assert_fail@plt+0x12bf0>
   24118:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2411c:	cmp	r3, #0
   24120:	moveq	r3, #1
   24124:	movne	r3, #0
   24128:	uxtb	r3, r3
   2412c:	cmp	r3, #0
   24130:	beq	2414c <__assert_fail@plt+0x12c08>
   24134:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24138:	bl	151ec <__assert_fail@plt+0x3ca8>
   2413c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   24140:	bl	151ec <__assert_fail@plt+0x3ca8>
   24144:	mov	r3, #12
   24148:	b	24214 <__assert_fail@plt+0x12cd0>
   2414c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   24150:	ldr	r2, [fp, #-32]	; 0xffffffe0
   24154:	str	r2, [r3, #4]
   24158:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2415c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   24160:	str	r2, [r3, #8]
   24164:	ldr	r3, [fp, #-48]	; 0xffffffd0
   24168:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2416c:	str	r2, [r3]
   24170:	ldr	r3, [fp, #-44]	; 0xffffffd4
   24174:	ldr	r2, [r3, #4]
   24178:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2417c:	ldr	r3, [r3, #32]
   24180:	lsl	r3, r3, #2
   24184:	add	r3, r2, r3
   24188:	ldr	r2, [fp, #-20]	; 0xffffffec
   2418c:	str	r2, [r3]
   24190:	ldr	r3, [fp, #-44]	; 0xffffffd4
   24194:	ldr	r2, [r3, #8]
   24198:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2419c:	ldr	r3, [r3, #32]
   241a0:	add	r0, r3, #1
   241a4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   241a8:	str	r0, [r1, #32]
   241ac:	lsl	r3, r3, #2
   241b0:	add	r3, r2, r3
   241b4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   241b8:	str	r2, [r3]
   241bc:	mov	r3, #0
   241c0:	str	r3, [fp, #-8]
   241c4:	b	24204 <__assert_fail@plt+0x12cc0>
   241c8:	ldr	r2, [fp, #-20]	; 0xffffffec
   241cc:	ldr	r3, [fp, #-8]
   241d0:	cmp	r2, r3
   241d4:	bhi	241f8 <__assert_fail@plt+0x12cb4>
   241d8:	ldr	r2, [fp, #-8]
   241dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   241e0:	cmp	r2, r3
   241e4:	bhi	241f8 <__assert_fail@plt+0x12cb4>
   241e8:	ldr	r3, [fp, #-8]
   241ec:	mov	r1, r3
   241f0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   241f4:	bl	17e58 <__assert_fail@plt+0x6914>
   241f8:	ldr	r3, [fp, #-8]
   241fc:	add	r3, r3, #1
   24200:	str	r3, [fp, #-8]
   24204:	ldr	r3, [fp, #-8]
   24208:	cmp	r3, #255	; 0xff
   2420c:	bls	241c8 <__assert_fail@plt+0x12c84>
   24210:	mov	r3, #0
   24214:	mov	r0, r3
   24218:	sub	sp, fp, #4
   2421c:	ldr	fp, [sp]
   24220:	add	sp, sp, #4
   24224:	pop	{pc}		; (ldr pc, [sp], #4)
   24228:	str	fp, [sp, #-8]!
   2422c:	str	lr, [sp, #4]
   24230:	add	fp, sp, #4
   24234:	sub	sp, sp, #24
   24238:	str	r0, [fp, #-16]
   2423c:	str	r1, [fp, #-20]	; 0xffffffec
   24240:	str	r2, [fp, #-24]	; 0xffffffe8
   24244:	str	r3, [fp, #-28]	; 0xffffffe4
   24248:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2424c:	bl	113f4 <strlen@plt>
   24250:	str	r0, [fp, #-8]
   24254:	ldr	r3, [fp, #-8]
   24258:	cmp	r3, #1
   2425c:	movne	r3, #1
   24260:	moveq	r3, #0
   24264:	uxtb	r3, r3
   24268:	cmp	r3, #0
   2426c:	beq	24278 <__assert_fail@plt+0x12d34>
   24270:	mov	r3, #3
   24274:	b	24290 <__assert_fail@plt+0x12d4c>
   24278:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2427c:	ldrb	r3, [r3]
   24280:	mov	r1, r3
   24284:	ldr	r0, [fp, #-16]
   24288:	bl	17e58 <__assert_fail@plt+0x6914>
   2428c:	mov	r3, #0
   24290:	mov	r0, r3
   24294:	sub	sp, fp, #4
   24298:	ldr	fp, [sp]
   2429c:	add	sp, sp, #4
   242a0:	pop	{pc}		; (ldr pc, [sp], #4)
   242a4:	str	fp, [sp, #-8]!
   242a8:	str	lr, [sp, #4]
   242ac:	add	fp, sp, #4
   242b0:	sub	sp, sp, #248	; 0xf8
   242b4:	str	r0, [fp, #-200]	; 0xffffff38
   242b8:	str	r1, [fp, #-204]	; 0xffffff34
   242bc:	str	r2, [fp, #-208]	; 0xffffff30
   242c0:	str	r3, [fp, #-212]	; 0xffffff2c
   242c4:	mov	r3, #0
   242c8:	str	r3, [fp, #-40]	; 0xffffffd8
   242cc:	mov	r3, #0
   242d0:	str	r3, [fp, #-44]	; 0xffffffd4
   242d4:	mov	r3, #0
   242d8:	str	r3, [fp, #-48]	; 0xffffffd0
   242dc:	mov	r3, #0
   242e0:	str	r3, [fp, #-52]	; 0xffffffcc
   242e4:	mov	r3, #0
   242e8:	str	r3, [fp, #-56]	; 0xffffffc8
   242ec:	mov	r3, #0
   242f0:	str	r3, [fp, #-60]	; 0xffffffc4
   242f4:	mov	r3, #0
   242f8:	str	r3, [fp, #-92]	; 0xffffffa4
   242fc:	mov	r3, #0
   24300:	str	r3, [fp, #-96]	; 0xffffffa0
   24304:	mov	r3, #0
   24308:	str	r3, [fp, #-8]
   2430c:	mov	r3, #0
   24310:	str	r3, [fp, #-100]	; 0xffffff9c
   24314:	mov	r3, #0
   24318:	str	r3, [fp, #-104]	; 0xffffff98
   2431c:	mov	r3, #0
   24320:	strb	r3, [fp, #-9]
   24324:	mov	r3, #1
   24328:	strb	r3, [fp, #-21]	; 0xffffffeb
   2432c:	mov	r1, #1
   24330:	mov	r0, #32
   24334:	bl	33ad0 <__assert_fail@plt+0x2258c>
   24338:	mov	r3, r0
   2433c:	str	r3, [fp, #-64]	; 0xffffffc0
   24340:	mov	r1, #1
   24344:	mov	r0, #40	; 0x28
   24348:	bl	33ad0 <__assert_fail@plt+0x2258c>
   2434c:	mov	r3, r0
   24350:	str	r3, [fp, #-68]	; 0xffffffbc
   24354:	ldr	r3, [fp, #-64]	; 0xffffffc0
   24358:	cmp	r3, #0
   2435c:	moveq	r3, #1
   24360:	movne	r3, #0
   24364:	uxtb	r3, r3
   24368:	cmp	r3, #0
   2436c:	bne	2438c <__assert_fail@plt+0x12e48>
   24370:	ldr	r3, [fp, #-68]	; 0xffffffbc
   24374:	cmp	r3, #0
   24378:	moveq	r3, #1
   2437c:	movne	r3, #0
   24380:	uxtb	r3, r3
   24384:	cmp	r3, #0
   24388:	beq	243b0 <__assert_fail@plt+0x12e6c>
   2438c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   24390:	bl	151ec <__assert_fail@plt+0x3ca8>
   24394:	ldr	r0, [fp, #-68]	; 0xffffffbc
   24398:	bl	151ec <__assert_fail@plt+0x3ca8>
   2439c:	ldr	r3, [fp, #4]
   243a0:	mov	r2, #12
   243a4:	str	r2, [r3]
   243a8:	mov	r3, #0
   243ac:	b	24c38 <__assert_fail@plt+0x136f4>
   243b0:	ldr	r2, [fp, #-212]	; 0xffffff2c
   243b4:	ldr	r1, [fp, #-200]	; 0xffffff38
   243b8:	ldr	r0, [fp, #-208]	; 0xffffff30
   243bc:	bl	222a0 <__assert_fail@plt+0x10d5c>
   243c0:	str	r0, [fp, #-20]	; 0xffffffec
   243c4:	ldr	r3, [fp, #-208]	; 0xffffff30
   243c8:	ldrb	r3, [r3, #4]
   243cc:	cmp	r3, #2
   243d0:	moveq	r3, #1
   243d4:	movne	r3, #0
   243d8:	uxtb	r3, r3
   243dc:	cmp	r3, #0
   243e0:	beq	243f4 <__assert_fail@plt+0x12eb0>
   243e4:	ldr	r3, [fp, #4]
   243e8:	mov	r2, #2
   243ec:	str	r2, [r3]
   243f0:	b	24c24 <__assert_fail@plt+0x136e0>
   243f4:	ldr	r3, [fp, #-208]	; 0xffffff30
   243f8:	ldrb	r3, [r3, #4]
   243fc:	cmp	r3, #25
   24400:	bne	24494 <__assert_fail@plt+0x12f50>
   24404:	ldr	r2, [fp, #-68]	; 0xffffffbc
   24408:	ldrb	r3, [r2, #16]
   2440c:	orr	r3, r3, #1
   24410:	strb	r3, [r2, #16]
   24414:	mov	r3, #1
   24418:	strb	r3, [fp, #-9]
   2441c:	ldr	r3, [fp, #-212]	; 0xffffff2c
   24420:	and	r3, r3, #256	; 0x100
   24424:	cmp	r3, #0
   24428:	beq	24438 <__assert_fail@plt+0x12ef4>
   2442c:	mov	r1, #10
   24430:	ldr	r0, [fp, #-64]	; 0xffffffc0
   24434:	bl	17e58 <__assert_fail@plt+0x6914>
   24438:	ldr	r3, [fp, #-200]	; 0xffffff38
   2443c:	ldr	r2, [r3, #40]	; 0x28
   24440:	ldr	r3, [fp, #-20]	; 0xffffffec
   24444:	add	r2, r2, r3
   24448:	ldr	r3, [fp, #-200]	; 0xffffff38
   2444c:	str	r2, [r3, #40]	; 0x28
   24450:	ldr	r2, [fp, #-212]	; 0xffffff2c
   24454:	ldr	r1, [fp, #-200]	; 0xffffff38
   24458:	ldr	r0, [fp, #-208]	; 0xffffff30
   2445c:	bl	222a0 <__assert_fail@plt+0x10d5c>
   24460:	str	r0, [fp, #-20]	; 0xffffffec
   24464:	ldr	r3, [fp, #-208]	; 0xffffff30
   24468:	ldrb	r3, [r3, #4]
   2446c:	cmp	r3, #2
   24470:	moveq	r3, #1
   24474:	movne	r3, #0
   24478:	uxtb	r3, r3
   2447c:	cmp	r3, #0
   24480:	beq	24494 <__assert_fail@plt+0x12f50>
   24484:	ldr	r3, [fp, #4]
   24488:	mov	r2, #2
   2448c:	str	r2, [r3]
   24490:	b	24c24 <__assert_fail@plt+0x136e0>
   24494:	ldr	r3, [fp, #-208]	; 0xffffff30
   24498:	ldrb	r3, [r3, #4]
   2449c:	cmp	r3, #21
   244a0:	bne	244b0 <__assert_fail@plt+0x12f6c>
   244a4:	ldr	r3, [fp, #-208]	; 0xffffff30
   244a8:	mov	r2, #1
   244ac:	strb	r2, [r3, #4]
   244b0:	mov	r3, #0
   244b4:	str	r3, [fp, #-28]	; 0xffffffe4
   244b8:	mov	r3, #0
   244bc:	strb	r3, [fp, #-29]	; 0xffffffe3
   244c0:	sub	r3, fp, #192	; 0xc0
   244c4:	str	r3, [fp, #-108]	; 0xffffff94
   244c8:	mov	r3, #3
   244cc:	str	r3, [fp, #-112]	; 0xffffff90
   244d0:	sub	r0, fp, #112	; 0x70
   244d4:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   244d8:	str	r3, [sp, #8]
   244dc:	ldr	r3, [fp, #-212]	; 0xffffff2c
   244e0:	str	r3, [sp, #4]
   244e4:	ldr	r3, [fp, #-204]	; 0xffffff34
   244e8:	str	r3, [sp]
   244ec:	ldr	r3, [fp, #-20]	; 0xffffffec
   244f0:	ldr	r2, [fp, #-208]	; 0xffffff30
   244f4:	ldr	r1, [fp, #-200]	; 0xffffff38
   244f8:	bl	24c4c <__assert_fail@plt+0x13708>
   244fc:	str	r0, [fp, #-72]	; 0xffffffb8
   24500:	ldr	r3, [fp, #-72]	; 0xffffffb8
   24504:	cmp	r3, #0
   24508:	movne	r3, #1
   2450c:	moveq	r3, #0
   24510:	uxtb	r3, r3
   24514:	cmp	r3, #0
   24518:	beq	2452c <__assert_fail@plt+0x12fe8>
   2451c:	ldr	r3, [fp, #4]
   24520:	ldr	r2, [fp, #-72]	; 0xffffffb8
   24524:	str	r2, [r3]
   24528:	b	24c24 <__assert_fail@plt+0x136e0>
   2452c:	mov	r3, #0
   24530:	strb	r3, [fp, #-21]	; 0xffffffeb
   24534:	ldr	r2, [fp, #-212]	; 0xffffff2c
   24538:	ldr	r1, [fp, #-200]	; 0xffffff38
   2453c:	ldr	r0, [fp, #-208]	; 0xffffff30
   24540:	bl	222a0 <__assert_fail@plt+0x10d5c>
   24544:	str	r0, [fp, #-20]	; 0xffffffec
   24548:	ldr	r3, [fp, #-112]	; 0xffffff90
   2454c:	cmp	r3, #4
   24550:	beq	24638 <__assert_fail@plt+0x130f4>
   24554:	ldr	r3, [fp, #-112]	; 0xffffff90
   24558:	cmp	r3, #2
   2455c:	beq	24638 <__assert_fail@plt+0x130f4>
   24560:	ldr	r3, [fp, #-208]	; 0xffffff30
   24564:	ldrb	r3, [r3, #4]
   24568:	cmp	r3, #2
   2456c:	moveq	r3, #1
   24570:	movne	r3, #0
   24574:	uxtb	r3, r3
   24578:	cmp	r3, #0
   2457c:	beq	24590 <__assert_fail@plt+0x1304c>
   24580:	ldr	r3, [fp, #4]
   24584:	mov	r2, #7
   24588:	str	r2, [r3]
   2458c:	b	24c24 <__assert_fail@plt+0x136e0>
   24590:	ldr	r3, [fp, #-208]	; 0xffffff30
   24594:	ldrb	r3, [r3, #4]
   24598:	cmp	r3, #22
   2459c:	bne	24638 <__assert_fail@plt+0x130f4>
   245a0:	ldr	r3, [fp, #-200]	; 0xffffff38
   245a4:	ldr	r2, [r3, #40]	; 0x28
   245a8:	ldr	r3, [fp, #-20]	; 0xffffffec
   245ac:	add	r2, r2, r3
   245b0:	ldr	r3, [fp, #-200]	; 0xffffff38
   245b4:	str	r2, [r3, #40]	; 0x28
   245b8:	sub	r3, fp, #128	; 0x80
   245bc:	ldr	r2, [fp, #-212]	; 0xffffff2c
   245c0:	ldr	r1, [fp, #-200]	; 0xffffff38
   245c4:	mov	r0, r3
   245c8:	bl	222a0 <__assert_fail@plt+0x10d5c>
   245cc:	str	r0, [fp, #-28]	; 0xffffffe4
   245d0:	ldrb	r3, [fp, #-124]	; 0xffffff84
   245d4:	cmp	r3, #2
   245d8:	moveq	r3, #1
   245dc:	movne	r3, #0
   245e0:	uxtb	r3, r3
   245e4:	cmp	r3, #0
   245e8:	beq	245fc <__assert_fail@plt+0x130b8>
   245ec:	ldr	r3, [fp, #4]
   245f0:	mov	r2, #7
   245f4:	str	r2, [r3]
   245f8:	b	24c24 <__assert_fail@plt+0x136e0>
   245fc:	ldrb	r3, [fp, #-124]	; 0xffffff84
   24600:	cmp	r3, #21
   24604:	bne	24630 <__assert_fail@plt+0x130ec>
   24608:	ldr	r3, [fp, #-200]	; 0xffffff38
   2460c:	ldr	r2, [r3, #40]	; 0x28
   24610:	ldr	r3, [fp, #-20]	; 0xffffffec
   24614:	sub	r2, r2, r3
   24618:	ldr	r3, [fp, #-200]	; 0xffffff38
   2461c:	str	r2, [r3, #40]	; 0x28
   24620:	ldr	r3, [fp, #-208]	; 0xffffff30
   24624:	mov	r2, #1
   24628:	strb	r2, [r3, #4]
   2462c:	b	24638 <__assert_fail@plt+0x130f4>
   24630:	mov	r3, #1
   24634:	strb	r3, [fp, #-29]	; 0xffffffe3
   24638:	ldrb	r3, [fp, #-29]	; 0xffffffe3
   2463c:	cmp	r3, #0
   24640:	beq	24754 <__assert_fail@plt+0x13210>
   24644:	sub	r3, fp, #160	; 0xa0
   24648:	str	r3, [fp, #-116]	; 0xffffff8c
   2464c:	mov	r3, #3
   24650:	str	r3, [fp, #-120]	; 0xffffff88
   24654:	sub	r2, fp, #128	; 0x80
   24658:	sub	r0, fp, #120	; 0x78
   2465c:	mov	r3, #1
   24660:	str	r3, [sp, #8]
   24664:	ldr	r3, [fp, #-212]	; 0xffffff2c
   24668:	str	r3, [sp, #4]
   2466c:	ldr	r3, [fp, #-204]	; 0xffffff34
   24670:	str	r3, [sp]
   24674:	ldr	r3, [fp, #-28]	; 0xffffffe4
   24678:	ldr	r1, [fp, #-200]	; 0xffffff38
   2467c:	bl	24c4c <__assert_fail@plt+0x13708>
   24680:	str	r0, [fp, #-72]	; 0xffffffb8
   24684:	ldr	r3, [fp, #-72]	; 0xffffffb8
   24688:	cmp	r3, #0
   2468c:	movne	r3, #1
   24690:	moveq	r3, #0
   24694:	uxtb	r3, r3
   24698:	cmp	r3, #0
   2469c:	beq	246b0 <__assert_fail@plt+0x1316c>
   246a0:	ldr	r3, [fp, #4]
   246a4:	ldr	r2, [fp, #-72]	; 0xffffffb8
   246a8:	str	r2, [r3]
   246ac:	b	24c24 <__assert_fail@plt+0x136e0>
   246b0:	ldr	r2, [fp, #-212]	; 0xffffff2c
   246b4:	ldr	r1, [fp, #-200]	; 0xffffff38
   246b8:	ldr	r0, [fp, #-208]	; 0xffffff30
   246bc:	bl	222a0 <__assert_fail@plt+0x10d5c>
   246c0:	str	r0, [fp, #-20]	; 0xffffffec
   246c4:	sub	r1, fp, #112	; 0x70
   246c8:	sub	r2, fp, #96	; 0x60
   246cc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   246d0:	str	r3, [sp, #32]
   246d4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   246d8:	str	r3, [sp, #28]
   246dc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   246e0:	str	r3, [sp, #24]
   246e4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   246e8:	str	r3, [sp, #20]
   246ec:	ldr	r3, [fp, #-40]	; 0xffffffd8
   246f0:	str	r3, [sp, #16]
   246f4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   246f8:	str	r3, [sp, #12]
   246fc:	ldr	r3, [fp, #-212]	; 0xffffff2c
   24700:	str	r3, [sp, #8]
   24704:	ldr	r3, [fp, #-204]	; 0xffffff34
   24708:	str	r3, [sp, #4]
   2470c:	sub	r3, fp, #120	; 0x78
   24710:	str	r3, [sp]
   24714:	mov	r3, r1
   24718:	ldr	r1, [fp, #-68]	; 0xffffffbc
   2471c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   24720:	bl	23d58 <__assert_fail@plt+0x12814>
   24724:	mov	r2, r0
   24728:	ldr	r3, [fp, #4]
   2472c:	str	r2, [r3]
   24730:	ldr	r3, [fp, #4]
   24734:	ldr	r3, [r3]
   24738:	cmp	r3, #0
   2473c:	movne	r3, #1
   24740:	moveq	r3, #0
   24744:	uxtb	r3, r3
   24748:	cmp	r3, #0
   2474c:	beq	24950 <__assert_fail@plt+0x1340c>
   24750:	b	24c24 <__assert_fail@plt+0x136e0>
   24754:	ldr	r3, [fp, #-112]	; 0xffffff90
   24758:	cmp	r3, #4
   2475c:	ldrls	pc, [pc, r3, lsl #2]
   24760:	b	248e8 <__assert_fail@plt+0x133a4>
   24764:	andeq	r4, r2, r8, ror r7
   24768:	andeq	r4, r2, ip, lsl #15
   2476c:	andeq	r4, r2, ip, lsr r8
   24770:	andeq	r4, r2, r0, lsl #17
   24774:	andeq	r4, r2, r8, ror #17
   24778:	ldrb	r3, [fp, #-108]	; 0xffffff94
   2477c:	mov	r1, r3
   24780:	ldr	r0, [fp, #-64]	; 0xffffffc0
   24784:	bl	17e58 <__assert_fail@plt+0x6914>
   24788:	b	24950 <__assert_fail@plt+0x1340c>
   2478c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   24790:	ldr	r3, [r3, #20]
   24794:	ldr	r2, [fp, #-8]
   24798:	cmp	r2, r3
   2479c:	moveq	r3, #1
   247a0:	movne	r3, #0
   247a4:	uxtb	r3, r3
   247a8:	cmp	r3, #0
   247ac:	beq	2480c <__assert_fail@plt+0x132c8>
   247b0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   247b4:	ldr	r3, [r3, #20]
   247b8:	lsl	r3, r3, #1
   247bc:	add	r3, r3, #1
   247c0:	str	r3, [fp, #-8]
   247c4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   247c8:	ldr	r2, [r3]
   247cc:	ldr	r3, [fp, #-8]
   247d0:	lsl	r3, r3, #2
   247d4:	mov	r1, r3
   247d8:	mov	r0, r2
   247dc:	bl	33c30 <__assert_fail@plt+0x226ec>
   247e0:	str	r0, [fp, #-76]	; 0xffffffb4
   247e4:	ldr	r3, [fp, #-76]	; 0xffffffb4
   247e8:	cmp	r3, #0
   247ec:	moveq	r3, #1
   247f0:	movne	r3, #0
   247f4:	uxtb	r3, r3
   247f8:	cmp	r3, #0
   247fc:	bne	24bf4 <__assert_fail@plt+0x136b0>
   24800:	ldr	r3, [fp, #-68]	; 0xffffffbc
   24804:	ldr	r2, [fp, #-76]	; 0xffffffb4
   24808:	str	r2, [r3]
   2480c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   24810:	ldr	r2, [r3]
   24814:	ldr	r3, [fp, #-68]	; 0xffffffbc
   24818:	ldr	r3, [r3, #20]
   2481c:	add	r0, r3, #1
   24820:	ldr	r1, [fp, #-68]	; 0xffffffbc
   24824:	str	r0, [r1, #20]
   24828:	lsl	r3, r3, #2
   2482c:	add	r3, r2, r3
   24830:	ldr	r2, [fp, #-108]	; 0xffffff94
   24834:	str	r2, [r3]
   24838:	b	24950 <__assert_fail@plt+0x1340c>
   2483c:	ldr	r3, [fp, #-108]	; 0xffffff94
   24840:	sub	r2, fp, #100	; 0x64
   24844:	ldr	r1, [fp, #-68]	; 0xffffffbc
   24848:	ldr	r0, [fp, #-64]	; 0xffffffc0
   2484c:	bl	24f90 <__assert_fail@plt+0x13a4c>
   24850:	mov	r2, r0
   24854:	ldr	r3, [fp, #4]
   24858:	str	r2, [r3]
   2485c:	ldr	r3, [fp, #4]
   24860:	ldr	r3, [r3]
   24864:	cmp	r3, #0
   24868:	movne	r3, #1
   2486c:	moveq	r3, #0
   24870:	uxtb	r3, r3
   24874:	cmp	r3, #0
   24878:	beq	24944 <__assert_fail@plt+0x13400>
   2487c:	b	24c24 <__assert_fail@plt+0x136e0>
   24880:	ldr	r1, [fp, #-108]	; 0xffffff94
   24884:	sub	r2, fp, #92	; 0x5c
   24888:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2488c:	str	r3, [sp, #12]
   24890:	ldr	r3, [fp, #-56]	; 0xffffffc8
   24894:	str	r3, [sp, #8]
   24898:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2489c:	str	r3, [sp, #4]
   248a0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   248a4:	str	r3, [sp]
   248a8:	mov	r3, r1
   248ac:	ldr	r1, [fp, #-68]	; 0xffffffbc
   248b0:	ldr	r0, [fp, #-64]	; 0xffffffc0
   248b4:	bl	24228 <__assert_fail@plt+0x12ce4>
   248b8:	mov	r2, r0
   248bc:	ldr	r3, [fp, #4]
   248c0:	str	r2, [r3]
   248c4:	ldr	r3, [fp, #4]
   248c8:	ldr	r3, [r3]
   248cc:	cmp	r3, #0
   248d0:	movne	r3, #1
   248d4:	moveq	r3, #0
   248d8:	uxtb	r3, r3
   248dc:	cmp	r3, #0
   248e0:	beq	2494c <__assert_fail@plt+0x13408>
   248e4:	b	24c24 <__assert_fail@plt+0x136e0>
   248e8:	ldr	r3, [fp, #-200]	; 0xffffff38
   248ec:	ldr	r0, [r3, #64]	; 0x40
   248f0:	ldr	r3, [fp, #-108]	; 0xffffff94
   248f4:	sub	r1, fp, #104	; 0x68
   248f8:	ldr	r2, [fp, #-212]	; 0xffffff2c
   248fc:	str	r2, [sp, #4]
   24900:	str	r3, [sp]
   24904:	mov	r3, r1
   24908:	ldr	r2, [fp, #-68]	; 0xffffffbc
   2490c:	ldr	r1, [fp, #-64]	; 0xffffffc0
   24910:	bl	25008 <__assert_fail@plt+0x13ac4>
   24914:	mov	r2, r0
   24918:	ldr	r3, [fp, #4]
   2491c:	str	r2, [r3]
   24920:	ldr	r3, [fp, #4]
   24924:	ldr	r3, [r3]
   24928:	cmp	r3, #0
   2492c:	movne	r3, #1
   24930:	moveq	r3, #0
   24934:	uxtb	r3, r3
   24938:	cmp	r3, #0
   2493c:	bne	24c20 <__assert_fail@plt+0x136dc>
   24940:	b	24950 <__assert_fail@plt+0x1340c>
   24944:	nop	{0}
   24948:	b	24950 <__assert_fail@plt+0x1340c>
   2494c:	nop	{0}
   24950:	ldr	r3, [fp, #-208]	; 0xffffff30
   24954:	ldrb	r3, [r3, #4]
   24958:	cmp	r3, #2
   2495c:	moveq	r3, #1
   24960:	movne	r3, #0
   24964:	uxtb	r3, r3
   24968:	cmp	r3, #0
   2496c:	beq	24984 <__assert_fail@plt+0x13440>
   24970:	ldr	r3, [fp, #4]
   24974:	mov	r2, #7
   24978:	str	r2, [r3]
   2497c:	nop	{0}
   24980:	b	24c24 <__assert_fail@plt+0x136e0>
   24984:	ldr	r3, [fp, #-208]	; 0xffffff30
   24988:	ldrb	r3, [r3, #4]
   2498c:	cmp	r3, #21
   24990:	bne	244b0 <__assert_fail@plt+0x12f6c>
   24994:	ldr	r3, [fp, #-200]	; 0xffffff38
   24998:	ldr	r2, [r3, #40]	; 0x28
   2499c:	ldr	r3, [fp, #-20]	; 0xffffffec
   249a0:	add	r2, r2, r3
   249a4:	ldr	r3, [fp, #-200]	; 0xffffff38
   249a8:	str	r2, [r3, #40]	; 0x28
   249ac:	ldrb	r3, [fp, #-9]
   249b0:	cmp	r3, #0
   249b4:	bne	249bc <__assert_fail@plt+0x13478>
   249b8:	b	249c4 <__assert_fail@plt+0x13480>
   249bc:	ldr	r0, [fp, #-64]	; 0xffffffc0
   249c0:	bl	18090 <__assert_fail@plt+0x6b4c>
   249c4:	ldr	r3, [fp, #-204]	; 0xffffff34
   249c8:	ldr	r3, [r3, #92]	; 0x5c
   249cc:	cmp	r3, #1
   249d0:	ble	249e8 <__assert_fail@plt+0x134a4>
   249d4:	ldr	r3, [fp, #-204]	; 0xffffff34
   249d8:	ldr	r3, [r3, #60]	; 0x3c
   249dc:	mov	r1, r3
   249e0:	ldr	r0, [fp, #-64]	; 0xffffffc0
   249e4:	bl	18188 <__assert_fail@plt+0x6c44>
   249e8:	ldr	r3, [fp, #-68]	; 0xffffffbc
   249ec:	ldr	r3, [r3, #20]
   249f0:	cmp	r3, #0
   249f4:	bne	24a60 <__assert_fail@plt+0x1351c>
   249f8:	ldr	r3, [fp, #-68]	; 0xffffffbc
   249fc:	ldr	r3, [r3, #24]
   24a00:	cmp	r3, #0
   24a04:	bne	24a60 <__assert_fail@plt+0x1351c>
   24a08:	ldr	r3, [fp, #-68]	; 0xffffffbc
   24a0c:	ldr	r3, [r3, #28]
   24a10:	cmp	r3, #0
   24a14:	bne	24a60 <__assert_fail@plt+0x1351c>
   24a18:	ldr	r3, [fp, #-68]	; 0xffffffbc
   24a1c:	ldr	r3, [r3, #32]
   24a20:	cmp	r3, #0
   24a24:	bne	24a60 <__assert_fail@plt+0x1351c>
   24a28:	ldr	r3, [fp, #-204]	; 0xffffff34
   24a2c:	ldr	r3, [r3, #92]	; 0x5c
   24a30:	cmp	r3, #1
   24a34:	ble	24b98 <__assert_fail@plt+0x13654>
   24a38:	ldr	r3, [fp, #-68]	; 0xffffffbc
   24a3c:	ldr	r3, [r3, #36]	; 0x24
   24a40:	cmp	r3, #0
   24a44:	bne	24a60 <__assert_fail@plt+0x1351c>
   24a48:	ldr	r3, [fp, #-68]	; 0xffffffbc
   24a4c:	ldrb	r3, [r3, #16]
   24a50:	and	r3, r3, #1
   24a54:	uxtb	r3, r3
   24a58:	cmp	r3, #0
   24a5c:	beq	24b98 <__assert_fail@plt+0x13654>
   24a60:	ldr	r2, [fp, #-204]	; 0xffffff34
   24a64:	ldrb	r3, [r2, #88]	; 0x58
   24a68:	orr	r3, r3, #2
   24a6c:	strb	r3, [r2, #88]	; 0x58
   24a70:	mov	r3, #6
   24a74:	strb	r3, [fp, #-84]	; 0xffffffac
   24a78:	ldr	r3, [fp, #-68]	; 0xffffffbc
   24a7c:	str	r3, [fp, #-88]	; 0xffffffa8
   24a80:	sub	r3, fp, #88	; 0x58
   24a84:	mov	r2, #0
   24a88:	mov	r1, #0
   24a8c:	ldr	r0, [fp, #-204]	; 0xffffff34
   24a90:	bl	26260 <__assert_fail@plt+0x14d1c>
   24a94:	str	r0, [fp, #-80]	; 0xffffffb0
   24a98:	ldr	r3, [fp, #-80]	; 0xffffffb0
   24a9c:	cmp	r3, #0
   24aa0:	moveq	r3, #1
   24aa4:	movne	r3, #0
   24aa8:	uxtb	r3, r3
   24aac:	cmp	r3, #0
   24ab0:	bne	24bfc <__assert_fail@plt+0x136b8>
   24ab4:	mov	r3, #0
   24ab8:	str	r3, [fp, #-36]	; 0xffffffdc
   24abc:	b	24ae8 <__assert_fail@plt+0x135a4>
   24ac0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   24ac4:	lsl	r3, r3, #2
   24ac8:	ldr	r2, [fp, #-64]	; 0xffffffc0
   24acc:	add	r3, r2, r3
   24ad0:	ldr	r3, [r3]
   24ad4:	cmp	r3, #0
   24ad8:	bne	24af8 <__assert_fail@plt+0x135b4>
   24adc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   24ae0:	add	r3, r3, #1
   24ae4:	str	r3, [fp, #-36]	; 0xffffffdc
   24ae8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   24aec:	cmp	r3, #7
   24af0:	ble	24ac0 <__assert_fail@plt+0x1357c>
   24af4:	b	24afc <__assert_fail@plt+0x135b8>
   24af8:	nop	{0}
   24afc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   24b00:	cmp	r3, #7
   24b04:	bgt	24b84 <__assert_fail@plt+0x13640>
   24b08:	mov	r3, #3
   24b0c:	strb	r3, [fp, #-84]	; 0xffffffac
   24b10:	ldr	r3, [fp, #-64]	; 0xffffffc0
   24b14:	str	r3, [fp, #-88]	; 0xffffffa8
   24b18:	sub	r3, fp, #88	; 0x58
   24b1c:	mov	r2, #0
   24b20:	mov	r1, #0
   24b24:	ldr	r0, [fp, #-204]	; 0xffffff34
   24b28:	bl	26260 <__assert_fail@plt+0x14d1c>
   24b2c:	str	r0, [fp, #-16]
   24b30:	ldr	r3, [fp, #-16]
   24b34:	cmp	r3, #0
   24b38:	moveq	r3, #1
   24b3c:	movne	r3, #0
   24b40:	uxtb	r3, r3
   24b44:	cmp	r3, #0
   24b48:	bne	24c04 <__assert_fail@plt+0x136c0>
   24b4c:	mov	r3, #10
   24b50:	ldr	r2, [fp, #-80]	; 0xffffffb0
   24b54:	ldr	r1, [fp, #-16]
   24b58:	ldr	r0, [fp, #-204]	; 0xffffff34
   24b5c:	bl	261f8 <__assert_fail@plt+0x14cb4>
   24b60:	str	r0, [fp, #-16]
   24b64:	ldr	r3, [fp, #-16]
   24b68:	cmp	r3, #0
   24b6c:	moveq	r3, #1
   24b70:	movne	r3, #0
   24b74:	uxtb	r3, r3
   24b78:	cmp	r3, #0
   24b7c:	beq	24be8 <__assert_fail@plt+0x136a4>
   24b80:	b	24c10 <__assert_fail@plt+0x136cc>
   24b84:	ldr	r0, [fp, #-64]	; 0xffffffc0
   24b88:	bl	151ec <__assert_fail@plt+0x3ca8>
   24b8c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   24b90:	str	r3, [fp, #-16]
   24b94:	b	24be8 <__assert_fail@plt+0x136a4>
   24b98:	ldr	r0, [fp, #-68]	; 0xffffffbc
   24b9c:	bl	26188 <__assert_fail@plt+0x14c44>
   24ba0:	mov	r3, #3
   24ba4:	strb	r3, [fp, #-84]	; 0xffffffac
   24ba8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   24bac:	str	r3, [fp, #-88]	; 0xffffffa8
   24bb0:	sub	r3, fp, #88	; 0x58
   24bb4:	mov	r2, #0
   24bb8:	mov	r1, #0
   24bbc:	ldr	r0, [fp, #-204]	; 0xffffff34
   24bc0:	bl	26260 <__assert_fail@plt+0x14d1c>
   24bc4:	str	r0, [fp, #-16]
   24bc8:	ldr	r3, [fp, #-16]
   24bcc:	cmp	r3, #0
   24bd0:	moveq	r3, #1
   24bd4:	movne	r3, #0
   24bd8:	uxtb	r3, r3
   24bdc:	cmp	r3, #0
   24be0:	bne	24c0c <__assert_fail@plt+0x136c8>
   24be4:	b	24bec <__assert_fail@plt+0x136a8>
   24be8:	nop	{0}
   24bec:	ldr	r3, [fp, #-16]
   24bf0:	b	24c38 <__assert_fail@plt+0x136f4>
   24bf4:	nop	{0}
   24bf8:	b	24c10 <__assert_fail@plt+0x136cc>
   24bfc:	nop	{0}
   24c00:	b	24c10 <__assert_fail@plt+0x136cc>
   24c04:	nop	{0}
   24c08:	b	24c10 <__assert_fail@plt+0x136cc>
   24c0c:	nop	{0}
   24c10:	ldr	r3, [fp, #4]
   24c14:	mov	r2, #12
   24c18:	str	r2, [r3]
   24c1c:	b	24c24 <__assert_fail@plt+0x136e0>
   24c20:	nop	{0}
   24c24:	ldr	r0, [fp, #-64]	; 0xffffffc0
   24c28:	bl	151ec <__assert_fail@plt+0x3ca8>
   24c2c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   24c30:	bl	26188 <__assert_fail@plt+0x14c44>
   24c34:	mov	r3, #0
   24c38:	mov	r0, r3
   24c3c:	sub	sp, fp, #4
   24c40:	ldr	fp, [sp]
   24c44:	add	sp, sp, #4
   24c48:	pop	{pc}		; (ldr pc, [sp], #4)
   24c4c:	str	fp, [sp, #-8]!
   24c50:	str	lr, [sp, #4]
   24c54:	add	fp, sp, #4
   24c58:	sub	sp, sp, #32
   24c5c:	str	r0, [fp, #-24]	; 0xffffffe8
   24c60:	str	r1, [fp, #-28]	; 0xffffffe4
   24c64:	str	r2, [fp, #-32]	; 0xffffffe0
   24c68:	str	r3, [fp, #-36]	; 0xffffffdc
   24c6c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   24c70:	ldr	r3, [r3, #40]	; 0x28
   24c74:	mov	r1, r3
   24c78:	ldr	r0, [fp, #-28]	; 0xffffffe4
   24c7c:	bl	18210 <__assert_fail@plt+0x6ccc>
   24c80:	str	r0, [fp, #-8]
   24c84:	ldr	r3, [fp, #-8]
   24c88:	cmp	r3, #1
   24c8c:	ble	24cdc <__assert_fail@plt+0x13798>
   24c90:	ldr	r3, [fp, #-24]	; 0xffffffe8
   24c94:	mov	r2, #1
   24c98:	str	r2, [r3]
   24c9c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   24ca0:	ldr	r3, [r3, #40]	; 0x28
   24ca4:	mov	r1, r3
   24ca8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   24cac:	bl	182b4 <__assert_fail@plt+0x6d70>
   24cb0:	mov	r2, r0
   24cb4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   24cb8:	str	r2, [r3, #4]
   24cbc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   24cc0:	ldr	r2, [r3, #40]	; 0x28
   24cc4:	ldr	r3, [fp, #-8]
   24cc8:	add	r2, r2, r3
   24ccc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   24cd0:	str	r2, [r3, #40]	; 0x28
   24cd4:	mov	r3, #0
   24cd8:	b	24db8 <__assert_fail@plt+0x13874>
   24cdc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   24ce0:	ldr	r2, [r3, #40]	; 0x28
   24ce4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   24ce8:	add	r2, r2, r3
   24cec:	ldr	r3, [fp, #-28]	; 0xffffffe4
   24cf0:	str	r2, [r3, #40]	; 0x28
   24cf4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   24cf8:	ldrb	r3, [r3, #4]
   24cfc:	cmp	r3, #26
   24d00:	beq	24d24 <__assert_fail@plt+0x137e0>
   24d04:	ldr	r3, [fp, #-32]	; 0xffffffe0
   24d08:	ldrb	r3, [r3, #4]
   24d0c:	cmp	r3, #30
   24d10:	beq	24d24 <__assert_fail@plt+0x137e0>
   24d14:	ldr	r3, [fp, #-32]	; 0xffffffe0
   24d18:	ldrb	r3, [r3, #4]
   24d1c:	cmp	r3, #28
   24d20:	bne	24d3c <__assert_fail@plt+0x137f8>
   24d24:	ldr	r2, [fp, #-32]	; 0xffffffe0
   24d28:	ldr	r1, [fp, #-28]	; 0xffffffe4
   24d2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   24d30:	bl	24dcc <__assert_fail@plt+0x13888>
   24d34:	mov	r3, r0
   24d38:	b	24db8 <__assert_fail@plt+0x13874>
   24d3c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   24d40:	ldrb	r3, [r3, #4]
   24d44:	cmp	r3, #22
   24d48:	moveq	r3, #1
   24d4c:	movne	r3, #0
   24d50:	uxtb	r3, r3
   24d54:	cmp	r3, #0
   24d58:	beq	24d98 <__assert_fail@plt+0x13854>
   24d5c:	ldrb	r3, [fp, #12]
   24d60:	eor	r3, r3, #1
   24d64:	uxtb	r3, r3
   24d68:	cmp	r3, #0
   24d6c:	beq	24d98 <__assert_fail@plt+0x13854>
   24d70:	sub	r3, fp, #16
   24d74:	ldr	r2, [fp, #8]
   24d78:	ldr	r1, [fp, #-28]	; 0xffffffe4
   24d7c:	mov	r0, r3
   24d80:	bl	222a0 <__assert_fail@plt+0x10d5c>
   24d84:	ldrb	r3, [fp, #-12]
   24d88:	cmp	r3, #21
   24d8c:	beq	24d98 <__assert_fail@plt+0x13854>
   24d90:	mov	r3, #11
   24d94:	b	24db8 <__assert_fail@plt+0x13874>
   24d98:	ldr	r3, [fp, #-24]	; 0xffffffe8
   24d9c:	mov	r2, #0
   24da0:	str	r2, [r3]
   24da4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   24da8:	ldrb	r2, [r3]
   24dac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   24db0:	strb	r2, [r3, #4]
   24db4:	mov	r3, #0
   24db8:	mov	r0, r3
   24dbc:	sub	sp, fp, #4
   24dc0:	ldr	fp, [sp]
   24dc4:	add	sp, sp, #4
   24dc8:	pop	{pc}		; (ldr pc, [sp], #4)
   24dcc:	str	fp, [sp, #-8]!
   24dd0:	str	lr, [sp, #4]
   24dd4:	add	fp, sp, #4
   24dd8:	sub	sp, sp, #32
   24ddc:	str	r0, [fp, #-24]	; 0xffffffe8
   24de0:	str	r1, [fp, #-28]	; 0xffffffe4
   24de4:	str	r2, [fp, #-32]	; 0xffffffe0
   24de8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   24dec:	ldrb	r3, [r3]
   24df0:	strb	r3, [fp, #-13]
   24df4:	mov	r3, #0
   24df8:	str	r3, [fp, #-12]
   24dfc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   24e00:	ldr	r2, [r3, #56]	; 0x38
   24e04:	ldr	r3, [fp, #-28]	; 0xffffffe4
   24e08:	ldr	r3, [r3, #40]	; 0x28
   24e0c:	cmp	r2, r3
   24e10:	bgt	24e1c <__assert_fail@plt+0x138d8>
   24e14:	mov	r3, #7
   24e18:	b	24f7c <__assert_fail@plt+0x13a38>
   24e1c:	ldr	r3, [fp, #-12]
   24e20:	cmp	r3, #31
   24e24:	ble	24e30 <__assert_fail@plt+0x138ec>
   24e28:	mov	r3, #7
   24e2c:	b	24f7c <__assert_fail@plt+0x13a38>
   24e30:	ldr	r3, [fp, #-32]	; 0xffffffe0
   24e34:	ldrb	r3, [r3, #4]
   24e38:	cmp	r3, #30
   24e3c:	bne	24e54 <__assert_fail@plt+0x13910>
   24e40:	ldr	r0, [fp, #-28]	; 0xffffffe4
   24e44:	bl	1a9e0 <__assert_fail@plt+0x949c>
   24e48:	mov	r3, r0
   24e4c:	strb	r3, [fp, #-5]
   24e50:	b	24e7c <__assert_fail@plt+0x13938>
   24e54:	ldr	r3, [fp, #-28]	; 0xffffffe4
   24e58:	ldr	r2, [r3, #4]
   24e5c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   24e60:	ldr	r3, [r3, #40]	; 0x28
   24e64:	add	r0, r3, #1
   24e68:	ldr	r1, [fp, #-28]	; 0xffffffe4
   24e6c:	str	r0, [r1, #40]	; 0x28
   24e70:	add	r3, r2, r3
   24e74:	ldrb	r3, [r3]
   24e78:	strb	r3, [fp, #-5]
   24e7c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   24e80:	ldr	r2, [r3, #56]	; 0x38
   24e84:	ldr	r3, [fp, #-28]	; 0xffffffe4
   24e88:	ldr	r3, [r3, #40]	; 0x28
   24e8c:	cmp	r2, r3
   24e90:	bgt	24e9c <__assert_fail@plt+0x13958>
   24e94:	mov	r3, #7
   24e98:	b	24f7c <__assert_fail@plt+0x13a38>
   24e9c:	ldrb	r2, [fp, #-5]
   24ea0:	ldrb	r3, [fp, #-13]
   24ea4:	cmp	r2, r3
   24ea8:	bne	24ecc <__assert_fail@plt+0x13988>
   24eac:	ldr	r3, [fp, #-28]	; 0xffffffe4
   24eb0:	ldr	r3, [r3, #4]
   24eb4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   24eb8:	ldr	r2, [r2, #40]	; 0x28
   24ebc:	add	r3, r3, r2
   24ec0:	ldrb	r3, [r3]
   24ec4:	cmp	r3, #93	; 0x5d
   24ec8:	beq	24ef4 <__assert_fail@plt+0x139b0>
   24ecc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   24ed0:	ldr	r2, [r3, #4]
   24ed4:	ldr	r3, [fp, #-12]
   24ed8:	add	r3, r2, r3
   24edc:	ldrb	r2, [fp, #-5]
   24ee0:	strb	r2, [r3]
   24ee4:	ldr	r3, [fp, #-12]
   24ee8:	add	r3, r3, #1
   24eec:	str	r3, [fp, #-12]
   24ef0:	b	24e1c <__assert_fail@plt+0x138d8>
   24ef4:	nop	{0}
   24ef8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   24efc:	ldr	r3, [r3, #40]	; 0x28
   24f00:	add	r2, r3, #1
   24f04:	ldr	r3, [fp, #-28]	; 0xffffffe4
   24f08:	str	r2, [r3, #40]	; 0x28
   24f0c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   24f10:	ldr	r2, [r3, #4]
   24f14:	ldr	r3, [fp, #-12]
   24f18:	add	r3, r2, r3
   24f1c:	mov	r2, #0
   24f20:	strb	r2, [r3]
   24f24:	ldr	r3, [fp, #-32]	; 0xffffffe0
   24f28:	ldrb	r3, [r3, #4]
   24f2c:	cmp	r3, #28
   24f30:	beq	24f54 <__assert_fail@plt+0x13a10>
   24f34:	cmp	r3, #30
   24f38:	beq	24f64 <__assert_fail@plt+0x13a20>
   24f3c:	cmp	r3, #26
   24f40:	bne	24f74 <__assert_fail@plt+0x13a30>
   24f44:	ldr	r3, [fp, #-24]	; 0xffffffe8
   24f48:	mov	r2, #3
   24f4c:	str	r2, [r3]
   24f50:	b	24f78 <__assert_fail@plt+0x13a34>
   24f54:	ldr	r3, [fp, #-24]	; 0xffffffe8
   24f58:	mov	r2, #2
   24f5c:	str	r2, [r3]
   24f60:	b	24f78 <__assert_fail@plt+0x13a34>
   24f64:	ldr	r3, [fp, #-24]	; 0xffffffe8
   24f68:	mov	r2, #4
   24f6c:	str	r2, [r3]
   24f70:	b	24f78 <__assert_fail@plt+0x13a34>
   24f74:	nop	{0}
   24f78:	mov	r3, #0
   24f7c:	mov	r0, r3
   24f80:	sub	sp, fp, #4
   24f84:	ldr	fp, [sp]
   24f88:	add	sp, sp, #4
   24f8c:	pop	{pc}		; (ldr pc, [sp], #4)
   24f90:	str	fp, [sp, #-8]!
   24f94:	str	lr, [sp, #4]
   24f98:	add	fp, sp, #4
   24f9c:	sub	sp, sp, #16
   24fa0:	str	r0, [fp, #-8]
   24fa4:	str	r1, [fp, #-12]
   24fa8:	str	r2, [fp, #-16]
   24fac:	str	r3, [fp, #-20]	; 0xffffffec
   24fb0:	ldr	r0, [fp, #-20]	; 0xffffffec
   24fb4:	bl	113f4 <strlen@plt>
   24fb8:	mov	r3, r0
   24fbc:	cmp	r3, #1
   24fc0:	movne	r3, #1
   24fc4:	moveq	r3, #0
   24fc8:	uxtb	r3, r3
   24fcc:	cmp	r3, #0
   24fd0:	beq	24fdc <__assert_fail@plt+0x13a98>
   24fd4:	mov	r3, #3
   24fd8:	b	24ff4 <__assert_fail@plt+0x13ab0>
   24fdc:	ldr	r3, [fp, #-20]	; 0xffffffec
   24fe0:	ldrb	r3, [r3]
   24fe4:	mov	r1, r3
   24fe8:	ldr	r0, [fp, #-8]
   24fec:	bl	17e58 <__assert_fail@plt+0x6914>
   24ff0:	mov	r3, #0
   24ff4:	mov	r0, r3
   24ff8:	sub	sp, fp, #4
   24ffc:	ldr	fp, [sp]
   25000:	add	sp, sp, #4
   25004:	pop	{pc}		; (ldr pc, [sp], #4)
   25008:	str	r4, [sp, #-12]!
   2500c:	str	fp, [sp, #4]
   25010:	str	lr, [sp, #8]
   25014:	add	fp, sp, #8
   25018:	sub	sp, sp, #36	; 0x24
   2501c:	str	r0, [fp, #-32]	; 0xffffffe0
   25020:	str	r1, [fp, #-36]	; 0xffffffdc
   25024:	str	r2, [fp, #-40]	; 0xffffffd8
   25028:	str	r3, [fp, #-44]	; 0xffffffd4
   2502c:	ldr	r3, [fp, #4]
   25030:	str	r3, [fp, #-20]	; 0xffffffec
   25034:	ldr	r3, [fp, #8]
   25038:	and	r3, r3, #4194304	; 0x400000
   2503c:	cmp	r3, #0
   25040:	beq	25088 <__assert_fail@plt+0x13b44>
   25044:	movw	r1, #25700	; 0x6464
   25048:	movt	r1, #3
   2504c:	ldr	r0, [fp, #-20]	; 0xffffffec
   25050:	bl	111d8 <strcmp@plt>
   25054:	mov	r3, r0
   25058:	cmp	r3, #0
   2505c:	beq	2507c <__assert_fail@plt+0x13b38>
   25060:	movw	r1, #25708	; 0x646c
   25064:	movt	r1, #3
   25068:	ldr	r0, [fp, #-20]	; 0xffffffec
   2506c:	bl	111d8 <strcmp@plt>
   25070:	mov	r3, r0
   25074:	cmp	r3, #0
   25078:	bne	25088 <__assert_fail@plt+0x13b44>
   2507c:	movw	r3, #25716	; 0x6474
   25080:	movt	r3, #3
   25084:	str	r3, [fp, #-20]	; 0xffffffec
   25088:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2508c:	ldr	r2, [r3]
   25090:	ldr	r3, [fp, #-40]	; 0xffffffd8
   25094:	ldr	r3, [r3, #36]	; 0x24
   25098:	cmp	r2, r3
   2509c:	moveq	r3, #1
   250a0:	movne	r3, #0
   250a4:	uxtb	r3, r3
   250a8:	cmp	r3, #0
   250ac:	beq	25120 <__assert_fail@plt+0x13bdc>
   250b0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   250b4:	ldr	r3, [r3, #36]	; 0x24
   250b8:	lsl	r3, r3, #1
   250bc:	add	r3, r3, #1
   250c0:	str	r3, [fp, #-24]	; 0xffffffe8
   250c4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   250c8:	ldr	r2, [r3, #12]
   250cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   250d0:	lsl	r3, r3, #2
   250d4:	mov	r1, r3
   250d8:	mov	r0, r2
   250dc:	bl	33c30 <__assert_fail@plt+0x226ec>
   250e0:	str	r0, [fp, #-28]	; 0xffffffe4
   250e4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   250e8:	cmp	r3, #0
   250ec:	moveq	r3, #1
   250f0:	movne	r3, #0
   250f4:	uxtb	r3, r3
   250f8:	cmp	r3, #0
   250fc:	beq	25108 <__assert_fail@plt+0x13bc4>
   25100:	mov	r3, #12
   25104:	b	25d60 <__assert_fail@plt+0x1481c>
   25108:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2510c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   25110:	str	r2, [r3, #12]
   25114:	ldr	r3, [fp, #-44]	; 0xffffffd4
   25118:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2511c:	str	r2, [r3]
   25120:	ldr	r3, [fp, #-40]	; 0xffffffd8
   25124:	ldr	r2, [r3, #12]
   25128:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2512c:	ldr	r3, [r3, #36]	; 0x24
   25130:	add	r0, r3, #1
   25134:	ldr	r1, [fp, #-40]	; 0xffffffd8
   25138:	str	r0, [r1, #36]	; 0x24
   2513c:	lsl	r3, r3, #2
   25140:	add	r4, r2, r3
   25144:	ldr	r0, [fp, #-20]	; 0xffffffec
   25148:	bl	111a8 <wctype@plt>
   2514c:	mov	r3, r0
   25150:	str	r3, [r4]
   25154:	movw	r1, #25680	; 0x6450
   25158:	movt	r1, #3
   2515c:	ldr	r0, [fp, #-20]	; 0xffffffec
   25160:	bl	111d8 <strcmp@plt>
   25164:	mov	r3, r0
   25168:	cmp	r3, #0
   2516c:	bne	25254 <__assert_fail@plt+0x13d10>
   25170:	ldr	r3, [fp, #-32]	; 0xffffffe0
   25174:	cmp	r3, #0
   25178:	movne	r3, #1
   2517c:	moveq	r3, #0
   25180:	uxtb	r3, r3
   25184:	cmp	r3, #0
   25188:	beq	251f8 <__assert_fail@plt+0x13cb4>
   2518c:	mov	r3, #0
   25190:	str	r3, [fp, #-16]
   25194:	b	251e8 <__assert_fail@plt+0x13ca4>
   25198:	bl	113d0 <__ctype_b_loc@plt>
   2519c:	mov	r3, r0
   251a0:	ldr	r2, [r3]
   251a4:	ldr	r3, [fp, #-16]
   251a8:	lsl	r3, r3, #1
   251ac:	add	r3, r2, r3
   251b0:	ldrh	r3, [r3]
   251b4:	and	r3, r3, #8
   251b8:	cmp	r3, #0
   251bc:	beq	251dc <__assert_fail@plt+0x13c98>
   251c0:	ldr	r3, [fp, #-16]
   251c4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   251c8:	add	r3, r2, r3
   251cc:	ldrb	r3, [r3]
   251d0:	mov	r1, r3
   251d4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   251d8:	bl	17e58 <__assert_fail@plt+0x6914>
   251dc:	ldr	r3, [fp, #-16]
   251e0:	add	r3, r3, #1
   251e4:	str	r3, [fp, #-16]
   251e8:	ldr	r3, [fp, #-16]
   251ec:	cmp	r3, #255	; 0xff
   251f0:	ble	25198 <__assert_fail@plt+0x13c54>
   251f4:	b	25d5c <__assert_fail@plt+0x14818>
   251f8:	mov	r3, #0
   251fc:	str	r3, [fp, #-16]
   25200:	b	25244 <__assert_fail@plt+0x13d00>
   25204:	bl	113d0 <__ctype_b_loc@plt>
   25208:	mov	r3, r0
   2520c:	ldr	r2, [r3]
   25210:	ldr	r3, [fp, #-16]
   25214:	lsl	r3, r3, #1
   25218:	add	r3, r2, r3
   2521c:	ldrh	r3, [r3]
   25220:	and	r3, r3, #8
   25224:	cmp	r3, #0
   25228:	beq	25238 <__assert_fail@plt+0x13cf4>
   2522c:	ldr	r1, [fp, #-16]
   25230:	ldr	r0, [fp, #-36]	; 0xffffffdc
   25234:	bl	17e58 <__assert_fail@plt+0x6914>
   25238:	ldr	r3, [fp, #-16]
   2523c:	add	r3, r3, #1
   25240:	str	r3, [fp, #-16]
   25244:	ldr	r3, [fp, #-16]
   25248:	cmp	r3, #255	; 0xff
   2524c:	ble	25204 <__assert_fail@plt+0x13cc0>
   25250:	b	25d5c <__assert_fail@plt+0x14818>
   25254:	movw	r1, #25724	; 0x647c
   25258:	movt	r1, #3
   2525c:	ldr	r0, [fp, #-20]	; 0xffffffec
   25260:	bl	111d8 <strcmp@plt>
   25264:	mov	r3, r0
   25268:	cmp	r3, #0
   2526c:	bne	25354 <__assert_fail@plt+0x13e10>
   25270:	ldr	r3, [fp, #-32]	; 0xffffffe0
   25274:	cmp	r3, #0
   25278:	movne	r3, #1
   2527c:	moveq	r3, #0
   25280:	uxtb	r3, r3
   25284:	cmp	r3, #0
   25288:	beq	252f8 <__assert_fail@plt+0x13db4>
   2528c:	mov	r3, #0
   25290:	str	r3, [fp, #-16]
   25294:	b	252e8 <__assert_fail@plt+0x13da4>
   25298:	bl	113d0 <__ctype_b_loc@plt>
   2529c:	mov	r3, r0
   252a0:	ldr	r2, [r3]
   252a4:	ldr	r3, [fp, #-16]
   252a8:	lsl	r3, r3, #1
   252ac:	add	r3, r2, r3
   252b0:	ldrh	r3, [r3]
   252b4:	and	r3, r3, #2
   252b8:	cmp	r3, #0
   252bc:	beq	252dc <__assert_fail@plt+0x13d98>
   252c0:	ldr	r3, [fp, #-16]
   252c4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   252c8:	add	r3, r2, r3
   252cc:	ldrb	r3, [r3]
   252d0:	mov	r1, r3
   252d4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   252d8:	bl	17e58 <__assert_fail@plt+0x6914>
   252dc:	ldr	r3, [fp, #-16]
   252e0:	add	r3, r3, #1
   252e4:	str	r3, [fp, #-16]
   252e8:	ldr	r3, [fp, #-16]
   252ec:	cmp	r3, #255	; 0xff
   252f0:	ble	25298 <__assert_fail@plt+0x13d54>
   252f4:	b	25d5c <__assert_fail@plt+0x14818>
   252f8:	mov	r3, #0
   252fc:	str	r3, [fp, #-16]
   25300:	b	25344 <__assert_fail@plt+0x13e00>
   25304:	bl	113d0 <__ctype_b_loc@plt>
   25308:	mov	r3, r0
   2530c:	ldr	r2, [r3]
   25310:	ldr	r3, [fp, #-16]
   25314:	lsl	r3, r3, #1
   25318:	add	r3, r2, r3
   2531c:	ldrh	r3, [r3]
   25320:	and	r3, r3, #2
   25324:	cmp	r3, #0
   25328:	beq	25338 <__assert_fail@plt+0x13df4>
   2532c:	ldr	r1, [fp, #-16]
   25330:	ldr	r0, [fp, #-36]	; 0xffffffdc
   25334:	bl	17e58 <__assert_fail@plt+0x6914>
   25338:	ldr	r3, [fp, #-16]
   2533c:	add	r3, r3, #1
   25340:	str	r3, [fp, #-16]
   25344:	ldr	r3, [fp, #-16]
   25348:	cmp	r3, #255	; 0xff
   2534c:	ble	25304 <__assert_fail@plt+0x13dc0>
   25350:	b	25d5c <__assert_fail@plt+0x14818>
   25354:	movw	r1, #25708	; 0x646c
   25358:	movt	r1, #3
   2535c:	ldr	r0, [fp, #-20]	; 0xffffffec
   25360:	bl	111d8 <strcmp@plt>
   25364:	mov	r3, r0
   25368:	cmp	r3, #0
   2536c:	bne	25454 <__assert_fail@plt+0x13f10>
   25370:	ldr	r3, [fp, #-32]	; 0xffffffe0
   25374:	cmp	r3, #0
   25378:	movne	r3, #1
   2537c:	moveq	r3, #0
   25380:	uxtb	r3, r3
   25384:	cmp	r3, #0
   25388:	beq	253f8 <__assert_fail@plt+0x13eb4>
   2538c:	mov	r3, #0
   25390:	str	r3, [fp, #-16]
   25394:	b	253e8 <__assert_fail@plt+0x13ea4>
   25398:	bl	113d0 <__ctype_b_loc@plt>
   2539c:	mov	r3, r0
   253a0:	ldr	r2, [r3]
   253a4:	ldr	r3, [fp, #-16]
   253a8:	lsl	r3, r3, #1
   253ac:	add	r3, r2, r3
   253b0:	ldrh	r3, [r3]
   253b4:	and	r3, r3, #512	; 0x200
   253b8:	cmp	r3, #0
   253bc:	beq	253dc <__assert_fail@plt+0x13e98>
   253c0:	ldr	r3, [fp, #-16]
   253c4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   253c8:	add	r3, r2, r3
   253cc:	ldrb	r3, [r3]
   253d0:	mov	r1, r3
   253d4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   253d8:	bl	17e58 <__assert_fail@plt+0x6914>
   253dc:	ldr	r3, [fp, #-16]
   253e0:	add	r3, r3, #1
   253e4:	str	r3, [fp, #-16]
   253e8:	ldr	r3, [fp, #-16]
   253ec:	cmp	r3, #255	; 0xff
   253f0:	ble	25398 <__assert_fail@plt+0x13e54>
   253f4:	b	25d5c <__assert_fail@plt+0x14818>
   253f8:	mov	r3, #0
   253fc:	str	r3, [fp, #-16]
   25400:	b	25444 <__assert_fail@plt+0x13f00>
   25404:	bl	113d0 <__ctype_b_loc@plt>
   25408:	mov	r3, r0
   2540c:	ldr	r2, [r3]
   25410:	ldr	r3, [fp, #-16]
   25414:	lsl	r3, r3, #1
   25418:	add	r3, r2, r3
   2541c:	ldrh	r3, [r3]
   25420:	and	r3, r3, #512	; 0x200
   25424:	cmp	r3, #0
   25428:	beq	25438 <__assert_fail@plt+0x13ef4>
   2542c:	ldr	r1, [fp, #-16]
   25430:	ldr	r0, [fp, #-36]	; 0xffffffdc
   25434:	bl	17e58 <__assert_fail@plt+0x6914>
   25438:	ldr	r3, [fp, #-16]
   2543c:	add	r3, r3, #1
   25440:	str	r3, [fp, #-16]
   25444:	ldr	r3, [fp, #-16]
   25448:	cmp	r3, #255	; 0xff
   2544c:	ble	25404 <__assert_fail@plt+0x13ec0>
   25450:	b	25d5c <__assert_fail@plt+0x14818>
   25454:	movw	r1, #25692	; 0x645c
   25458:	movt	r1, #3
   2545c:	ldr	r0, [fp, #-20]	; 0xffffffec
   25460:	bl	111d8 <strcmp@plt>
   25464:	mov	r3, r0
   25468:	cmp	r3, #0
   2546c:	bne	25554 <__assert_fail@plt+0x14010>
   25470:	ldr	r3, [fp, #-32]	; 0xffffffe0
   25474:	cmp	r3, #0
   25478:	movne	r3, #1
   2547c:	moveq	r3, #0
   25480:	uxtb	r3, r3
   25484:	cmp	r3, #0
   25488:	beq	254f8 <__assert_fail@plt+0x13fb4>
   2548c:	mov	r3, #0
   25490:	str	r3, [fp, #-16]
   25494:	b	254e8 <__assert_fail@plt+0x13fa4>
   25498:	bl	113d0 <__ctype_b_loc@plt>
   2549c:	mov	r3, r0
   254a0:	ldr	r2, [r3]
   254a4:	ldr	r3, [fp, #-16]
   254a8:	lsl	r3, r3, #1
   254ac:	add	r3, r2, r3
   254b0:	ldrh	r3, [r3]
   254b4:	and	r3, r3, #8192	; 0x2000
   254b8:	cmp	r3, #0
   254bc:	beq	254dc <__assert_fail@plt+0x13f98>
   254c0:	ldr	r3, [fp, #-16]
   254c4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   254c8:	add	r3, r2, r3
   254cc:	ldrb	r3, [r3]
   254d0:	mov	r1, r3
   254d4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   254d8:	bl	17e58 <__assert_fail@plt+0x6914>
   254dc:	ldr	r3, [fp, #-16]
   254e0:	add	r3, r3, #1
   254e4:	str	r3, [fp, #-16]
   254e8:	ldr	r3, [fp, #-16]
   254ec:	cmp	r3, #255	; 0xff
   254f0:	ble	25498 <__assert_fail@plt+0x13f54>
   254f4:	b	25d5c <__assert_fail@plt+0x14818>
   254f8:	mov	r3, #0
   254fc:	str	r3, [fp, #-16]
   25500:	b	25544 <__assert_fail@plt+0x14000>
   25504:	bl	113d0 <__ctype_b_loc@plt>
   25508:	mov	r3, r0
   2550c:	ldr	r2, [r3]
   25510:	ldr	r3, [fp, #-16]
   25514:	lsl	r3, r3, #1
   25518:	add	r3, r2, r3
   2551c:	ldrh	r3, [r3]
   25520:	and	r3, r3, #8192	; 0x2000
   25524:	cmp	r3, #0
   25528:	beq	25538 <__assert_fail@plt+0x13ff4>
   2552c:	ldr	r1, [fp, #-16]
   25530:	ldr	r0, [fp, #-36]	; 0xffffffdc
   25534:	bl	17e58 <__assert_fail@plt+0x6914>
   25538:	ldr	r3, [fp, #-16]
   2553c:	add	r3, r3, #1
   25540:	str	r3, [fp, #-16]
   25544:	ldr	r3, [fp, #-16]
   25548:	cmp	r3, #255	; 0xff
   2554c:	ble	25504 <__assert_fail@plt+0x13fc0>
   25550:	b	25d5c <__assert_fail@plt+0x14818>
   25554:	movw	r1, #25716	; 0x6474
   25558:	movt	r1, #3
   2555c:	ldr	r0, [fp, #-20]	; 0xffffffec
   25560:	bl	111d8 <strcmp@plt>
   25564:	mov	r3, r0
   25568:	cmp	r3, #0
   2556c:	bne	25654 <__assert_fail@plt+0x14110>
   25570:	ldr	r3, [fp, #-32]	; 0xffffffe0
   25574:	cmp	r3, #0
   25578:	movne	r3, #1
   2557c:	moveq	r3, #0
   25580:	uxtb	r3, r3
   25584:	cmp	r3, #0
   25588:	beq	255f8 <__assert_fail@plt+0x140b4>
   2558c:	mov	r3, #0
   25590:	str	r3, [fp, #-16]
   25594:	b	255e8 <__assert_fail@plt+0x140a4>
   25598:	bl	113d0 <__ctype_b_loc@plt>
   2559c:	mov	r3, r0
   255a0:	ldr	r2, [r3]
   255a4:	ldr	r3, [fp, #-16]
   255a8:	lsl	r3, r3, #1
   255ac:	add	r3, r2, r3
   255b0:	ldrh	r3, [r3]
   255b4:	and	r3, r3, #1024	; 0x400
   255b8:	cmp	r3, #0
   255bc:	beq	255dc <__assert_fail@plt+0x14098>
   255c0:	ldr	r3, [fp, #-16]
   255c4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   255c8:	add	r3, r2, r3
   255cc:	ldrb	r3, [r3]
   255d0:	mov	r1, r3
   255d4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   255d8:	bl	17e58 <__assert_fail@plt+0x6914>
   255dc:	ldr	r3, [fp, #-16]
   255e0:	add	r3, r3, #1
   255e4:	str	r3, [fp, #-16]
   255e8:	ldr	r3, [fp, #-16]
   255ec:	cmp	r3, #255	; 0xff
   255f0:	ble	25598 <__assert_fail@plt+0x14054>
   255f4:	b	25d5c <__assert_fail@plt+0x14818>
   255f8:	mov	r3, #0
   255fc:	str	r3, [fp, #-16]
   25600:	b	25644 <__assert_fail@plt+0x14100>
   25604:	bl	113d0 <__ctype_b_loc@plt>
   25608:	mov	r3, r0
   2560c:	ldr	r2, [r3]
   25610:	ldr	r3, [fp, #-16]
   25614:	lsl	r3, r3, #1
   25618:	add	r3, r2, r3
   2561c:	ldrh	r3, [r3]
   25620:	and	r3, r3, #1024	; 0x400
   25624:	cmp	r3, #0
   25628:	beq	25638 <__assert_fail@plt+0x140f4>
   2562c:	ldr	r1, [fp, #-16]
   25630:	ldr	r0, [fp, #-36]	; 0xffffffdc
   25634:	bl	17e58 <__assert_fail@plt+0x6914>
   25638:	ldr	r3, [fp, #-16]
   2563c:	add	r3, r3, #1
   25640:	str	r3, [fp, #-16]
   25644:	ldr	r3, [fp, #-16]
   25648:	cmp	r3, #255	; 0xff
   2564c:	ble	25604 <__assert_fail@plt+0x140c0>
   25650:	b	25d5c <__assert_fail@plt+0x14818>
   25654:	movw	r1, #25732	; 0x6484
   25658:	movt	r1, #3
   2565c:	ldr	r0, [fp, #-20]	; 0xffffffec
   25660:	bl	111d8 <strcmp@plt>
   25664:	mov	r3, r0
   25668:	cmp	r3, #0
   2566c:	bne	25754 <__assert_fail@plt+0x14210>
   25670:	ldr	r3, [fp, #-32]	; 0xffffffe0
   25674:	cmp	r3, #0
   25678:	movne	r3, #1
   2567c:	moveq	r3, #0
   25680:	uxtb	r3, r3
   25684:	cmp	r3, #0
   25688:	beq	256f8 <__assert_fail@plt+0x141b4>
   2568c:	mov	r3, #0
   25690:	str	r3, [fp, #-16]
   25694:	b	256e8 <__assert_fail@plt+0x141a4>
   25698:	bl	113d0 <__ctype_b_loc@plt>
   2569c:	mov	r3, r0
   256a0:	ldr	r2, [r3]
   256a4:	ldr	r3, [fp, #-16]
   256a8:	lsl	r3, r3, #1
   256ac:	add	r3, r2, r3
   256b0:	ldrh	r3, [r3]
   256b4:	and	r3, r3, #2048	; 0x800
   256b8:	cmp	r3, #0
   256bc:	beq	256dc <__assert_fail@plt+0x14198>
   256c0:	ldr	r3, [fp, #-16]
   256c4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   256c8:	add	r3, r2, r3
   256cc:	ldrb	r3, [r3]
   256d0:	mov	r1, r3
   256d4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   256d8:	bl	17e58 <__assert_fail@plt+0x6914>
   256dc:	ldr	r3, [fp, #-16]
   256e0:	add	r3, r3, #1
   256e4:	str	r3, [fp, #-16]
   256e8:	ldr	r3, [fp, #-16]
   256ec:	cmp	r3, #255	; 0xff
   256f0:	ble	25698 <__assert_fail@plt+0x14154>
   256f4:	b	25d5c <__assert_fail@plt+0x14818>
   256f8:	mov	r3, #0
   256fc:	str	r3, [fp, #-16]
   25700:	b	25744 <__assert_fail@plt+0x14200>
   25704:	bl	113d0 <__ctype_b_loc@plt>
   25708:	mov	r3, r0
   2570c:	ldr	r2, [r3]
   25710:	ldr	r3, [fp, #-16]
   25714:	lsl	r3, r3, #1
   25718:	add	r3, r2, r3
   2571c:	ldrh	r3, [r3]
   25720:	and	r3, r3, #2048	; 0x800
   25724:	cmp	r3, #0
   25728:	beq	25738 <__assert_fail@plt+0x141f4>
   2572c:	ldr	r1, [fp, #-16]
   25730:	ldr	r0, [fp, #-36]	; 0xffffffdc
   25734:	bl	17e58 <__assert_fail@plt+0x6914>
   25738:	ldr	r3, [fp, #-16]
   2573c:	add	r3, r3, #1
   25740:	str	r3, [fp, #-16]
   25744:	ldr	r3, [fp, #-16]
   25748:	cmp	r3, #255	; 0xff
   2574c:	ble	25704 <__assert_fail@plt+0x141c0>
   25750:	b	25d5c <__assert_fail@plt+0x14818>
   25754:	movw	r1, #25740	; 0x648c
   25758:	movt	r1, #3
   2575c:	ldr	r0, [fp, #-20]	; 0xffffffec
   25760:	bl	111d8 <strcmp@plt>
   25764:	mov	r3, r0
   25768:	cmp	r3, #0
   2576c:	bne	25854 <__assert_fail@plt+0x14310>
   25770:	ldr	r3, [fp, #-32]	; 0xffffffe0
   25774:	cmp	r3, #0
   25778:	movne	r3, #1
   2577c:	moveq	r3, #0
   25780:	uxtb	r3, r3
   25784:	cmp	r3, #0
   25788:	beq	257f8 <__assert_fail@plt+0x142b4>
   2578c:	mov	r3, #0
   25790:	str	r3, [fp, #-16]
   25794:	b	257e8 <__assert_fail@plt+0x142a4>
   25798:	bl	113d0 <__ctype_b_loc@plt>
   2579c:	mov	r3, r0
   257a0:	ldr	r2, [r3]
   257a4:	ldr	r3, [fp, #-16]
   257a8:	lsl	r3, r3, #1
   257ac:	add	r3, r2, r3
   257b0:	ldrh	r3, [r3]
   257b4:	and	r3, r3, #16384	; 0x4000
   257b8:	cmp	r3, #0
   257bc:	beq	257dc <__assert_fail@plt+0x14298>
   257c0:	ldr	r3, [fp, #-16]
   257c4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   257c8:	add	r3, r2, r3
   257cc:	ldrb	r3, [r3]
   257d0:	mov	r1, r3
   257d4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   257d8:	bl	17e58 <__assert_fail@plt+0x6914>
   257dc:	ldr	r3, [fp, #-16]
   257e0:	add	r3, r3, #1
   257e4:	str	r3, [fp, #-16]
   257e8:	ldr	r3, [fp, #-16]
   257ec:	cmp	r3, #255	; 0xff
   257f0:	ble	25798 <__assert_fail@plt+0x14254>
   257f4:	b	25d5c <__assert_fail@plt+0x14818>
   257f8:	mov	r3, #0
   257fc:	str	r3, [fp, #-16]
   25800:	b	25844 <__assert_fail@plt+0x14300>
   25804:	bl	113d0 <__ctype_b_loc@plt>
   25808:	mov	r3, r0
   2580c:	ldr	r2, [r3]
   25810:	ldr	r3, [fp, #-16]
   25814:	lsl	r3, r3, #1
   25818:	add	r3, r2, r3
   2581c:	ldrh	r3, [r3]
   25820:	and	r3, r3, #16384	; 0x4000
   25824:	cmp	r3, #0
   25828:	beq	25838 <__assert_fail@plt+0x142f4>
   2582c:	ldr	r1, [fp, #-16]
   25830:	ldr	r0, [fp, #-36]	; 0xffffffdc
   25834:	bl	17e58 <__assert_fail@plt+0x6914>
   25838:	ldr	r3, [fp, #-16]
   2583c:	add	r3, r3, #1
   25840:	str	r3, [fp, #-16]
   25844:	ldr	r3, [fp, #-16]
   25848:	cmp	r3, #255	; 0xff
   2584c:	ble	25804 <__assert_fail@plt+0x142c0>
   25850:	b	25d5c <__assert_fail@plt+0x14818>
   25854:	movw	r1, #25700	; 0x6464
   25858:	movt	r1, #3
   2585c:	ldr	r0, [fp, #-20]	; 0xffffffec
   25860:	bl	111d8 <strcmp@plt>
   25864:	mov	r3, r0
   25868:	cmp	r3, #0
   2586c:	bne	25954 <__assert_fail@plt+0x14410>
   25870:	ldr	r3, [fp, #-32]	; 0xffffffe0
   25874:	cmp	r3, #0
   25878:	movne	r3, #1
   2587c:	moveq	r3, #0
   25880:	uxtb	r3, r3
   25884:	cmp	r3, #0
   25888:	beq	258f8 <__assert_fail@plt+0x143b4>
   2588c:	mov	r3, #0
   25890:	str	r3, [fp, #-16]
   25894:	b	258e8 <__assert_fail@plt+0x143a4>
   25898:	bl	113d0 <__ctype_b_loc@plt>
   2589c:	mov	r3, r0
   258a0:	ldr	r2, [r3]
   258a4:	ldr	r3, [fp, #-16]
   258a8:	lsl	r3, r3, #1
   258ac:	add	r3, r2, r3
   258b0:	ldrh	r3, [r3]
   258b4:	and	r3, r3, #256	; 0x100
   258b8:	cmp	r3, #0
   258bc:	beq	258dc <__assert_fail@plt+0x14398>
   258c0:	ldr	r3, [fp, #-16]
   258c4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   258c8:	add	r3, r2, r3
   258cc:	ldrb	r3, [r3]
   258d0:	mov	r1, r3
   258d4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   258d8:	bl	17e58 <__assert_fail@plt+0x6914>
   258dc:	ldr	r3, [fp, #-16]
   258e0:	add	r3, r3, #1
   258e4:	str	r3, [fp, #-16]
   258e8:	ldr	r3, [fp, #-16]
   258ec:	cmp	r3, #255	; 0xff
   258f0:	ble	25898 <__assert_fail@plt+0x14354>
   258f4:	b	25d5c <__assert_fail@plt+0x14818>
   258f8:	mov	r3, #0
   258fc:	str	r3, [fp, #-16]
   25900:	b	25944 <__assert_fail@plt+0x14400>
   25904:	bl	113d0 <__ctype_b_loc@plt>
   25908:	mov	r3, r0
   2590c:	ldr	r2, [r3]
   25910:	ldr	r3, [fp, #-16]
   25914:	lsl	r3, r3, #1
   25918:	add	r3, r2, r3
   2591c:	ldrh	r3, [r3]
   25920:	and	r3, r3, #256	; 0x100
   25924:	cmp	r3, #0
   25928:	beq	25938 <__assert_fail@plt+0x143f4>
   2592c:	ldr	r1, [fp, #-16]
   25930:	ldr	r0, [fp, #-36]	; 0xffffffdc
   25934:	bl	17e58 <__assert_fail@plt+0x6914>
   25938:	ldr	r3, [fp, #-16]
   2593c:	add	r3, r3, #1
   25940:	str	r3, [fp, #-16]
   25944:	ldr	r3, [fp, #-16]
   25948:	cmp	r3, #255	; 0xff
   2594c:	ble	25904 <__assert_fail@plt+0x143c0>
   25950:	b	25d5c <__assert_fail@plt+0x14818>
   25954:	movw	r1, #25748	; 0x6494
   25958:	movt	r1, #3
   2595c:	ldr	r0, [fp, #-20]	; 0xffffffec
   25960:	bl	111d8 <strcmp@plt>
   25964:	mov	r3, r0
   25968:	cmp	r3, #0
   2596c:	bne	25a54 <__assert_fail@plt+0x14510>
   25970:	ldr	r3, [fp, #-32]	; 0xffffffe0
   25974:	cmp	r3, #0
   25978:	movne	r3, #1
   2597c:	moveq	r3, #0
   25980:	uxtb	r3, r3
   25984:	cmp	r3, #0
   25988:	beq	259f8 <__assert_fail@plt+0x144b4>
   2598c:	mov	r3, #0
   25990:	str	r3, [fp, #-16]
   25994:	b	259e8 <__assert_fail@plt+0x144a4>
   25998:	bl	113d0 <__ctype_b_loc@plt>
   2599c:	mov	r3, r0
   259a0:	ldr	r2, [r3]
   259a4:	ldr	r3, [fp, #-16]
   259a8:	lsl	r3, r3, #1
   259ac:	add	r3, r2, r3
   259b0:	ldrh	r3, [r3]
   259b4:	and	r3, r3, #1
   259b8:	cmp	r3, #0
   259bc:	beq	259dc <__assert_fail@plt+0x14498>
   259c0:	ldr	r3, [fp, #-16]
   259c4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   259c8:	add	r3, r2, r3
   259cc:	ldrb	r3, [r3]
   259d0:	mov	r1, r3
   259d4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   259d8:	bl	17e58 <__assert_fail@plt+0x6914>
   259dc:	ldr	r3, [fp, #-16]
   259e0:	add	r3, r3, #1
   259e4:	str	r3, [fp, #-16]
   259e8:	ldr	r3, [fp, #-16]
   259ec:	cmp	r3, #255	; 0xff
   259f0:	ble	25998 <__assert_fail@plt+0x14454>
   259f4:	b	25d5c <__assert_fail@plt+0x14818>
   259f8:	mov	r3, #0
   259fc:	str	r3, [fp, #-16]
   25a00:	b	25a44 <__assert_fail@plt+0x14500>
   25a04:	bl	113d0 <__ctype_b_loc@plt>
   25a08:	mov	r3, r0
   25a0c:	ldr	r2, [r3]
   25a10:	ldr	r3, [fp, #-16]
   25a14:	lsl	r3, r3, #1
   25a18:	add	r3, r2, r3
   25a1c:	ldrh	r3, [r3]
   25a20:	and	r3, r3, #1
   25a24:	cmp	r3, #0
   25a28:	beq	25a38 <__assert_fail@plt+0x144f4>
   25a2c:	ldr	r1, [fp, #-16]
   25a30:	ldr	r0, [fp, #-36]	; 0xffffffdc
   25a34:	bl	17e58 <__assert_fail@plt+0x6914>
   25a38:	ldr	r3, [fp, #-16]
   25a3c:	add	r3, r3, #1
   25a40:	str	r3, [fp, #-16]
   25a44:	ldr	r3, [fp, #-16]
   25a48:	cmp	r3, #255	; 0xff
   25a4c:	ble	25a04 <__assert_fail@plt+0x144c0>
   25a50:	b	25d5c <__assert_fail@plt+0x14818>
   25a54:	movw	r1, #25756	; 0x649c
   25a58:	movt	r1, #3
   25a5c:	ldr	r0, [fp, #-20]	; 0xffffffec
   25a60:	bl	111d8 <strcmp@plt>
   25a64:	mov	r3, r0
   25a68:	cmp	r3, #0
   25a6c:	bne	25b54 <__assert_fail@plt+0x14610>
   25a70:	ldr	r3, [fp, #-32]	; 0xffffffe0
   25a74:	cmp	r3, #0
   25a78:	movne	r3, #1
   25a7c:	moveq	r3, #0
   25a80:	uxtb	r3, r3
   25a84:	cmp	r3, #0
   25a88:	beq	25af8 <__assert_fail@plt+0x145b4>
   25a8c:	mov	r3, #0
   25a90:	str	r3, [fp, #-16]
   25a94:	b	25ae8 <__assert_fail@plt+0x145a4>
   25a98:	bl	113d0 <__ctype_b_loc@plt>
   25a9c:	mov	r3, r0
   25aa0:	ldr	r2, [r3]
   25aa4:	ldr	r3, [fp, #-16]
   25aa8:	lsl	r3, r3, #1
   25aac:	add	r3, r2, r3
   25ab0:	ldrh	r3, [r3]
   25ab4:	sxth	r3, r3
   25ab8:	cmp	r3, #0
   25abc:	bge	25adc <__assert_fail@plt+0x14598>
   25ac0:	ldr	r3, [fp, #-16]
   25ac4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   25ac8:	add	r3, r2, r3
   25acc:	ldrb	r3, [r3]
   25ad0:	mov	r1, r3
   25ad4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   25ad8:	bl	17e58 <__assert_fail@plt+0x6914>
   25adc:	ldr	r3, [fp, #-16]
   25ae0:	add	r3, r3, #1
   25ae4:	str	r3, [fp, #-16]
   25ae8:	ldr	r3, [fp, #-16]
   25aec:	cmp	r3, #255	; 0xff
   25af0:	ble	25a98 <__assert_fail@plt+0x14554>
   25af4:	b	25d5c <__assert_fail@plt+0x14818>
   25af8:	mov	r3, #0
   25afc:	str	r3, [fp, #-16]
   25b00:	b	25b44 <__assert_fail@plt+0x14600>
   25b04:	bl	113d0 <__ctype_b_loc@plt>
   25b08:	mov	r3, r0
   25b0c:	ldr	r2, [r3]
   25b10:	ldr	r3, [fp, #-16]
   25b14:	lsl	r3, r3, #1
   25b18:	add	r3, r2, r3
   25b1c:	ldrh	r3, [r3]
   25b20:	sxth	r3, r3
   25b24:	cmp	r3, #0
   25b28:	bge	25b38 <__assert_fail@plt+0x145f4>
   25b2c:	ldr	r1, [fp, #-16]
   25b30:	ldr	r0, [fp, #-36]	; 0xffffffdc
   25b34:	bl	17e58 <__assert_fail@plt+0x6914>
   25b38:	ldr	r3, [fp, #-16]
   25b3c:	add	r3, r3, #1
   25b40:	str	r3, [fp, #-16]
   25b44:	ldr	r3, [fp, #-16]
   25b48:	cmp	r3, #255	; 0xff
   25b4c:	ble	25b04 <__assert_fail@plt+0x145c0>
   25b50:	b	25d5c <__assert_fail@plt+0x14818>
   25b54:	movw	r1, #25764	; 0x64a4
   25b58:	movt	r1, #3
   25b5c:	ldr	r0, [fp, #-20]	; 0xffffffec
   25b60:	bl	111d8 <strcmp@plt>
   25b64:	mov	r3, r0
   25b68:	cmp	r3, #0
   25b6c:	bne	25c54 <__assert_fail@plt+0x14710>
   25b70:	ldr	r3, [fp, #-32]	; 0xffffffe0
   25b74:	cmp	r3, #0
   25b78:	movne	r3, #1
   25b7c:	moveq	r3, #0
   25b80:	uxtb	r3, r3
   25b84:	cmp	r3, #0
   25b88:	beq	25bf8 <__assert_fail@plt+0x146b4>
   25b8c:	mov	r3, #0
   25b90:	str	r3, [fp, #-16]
   25b94:	b	25be8 <__assert_fail@plt+0x146a4>
   25b98:	bl	113d0 <__ctype_b_loc@plt>
   25b9c:	mov	r3, r0
   25ba0:	ldr	r2, [r3]
   25ba4:	ldr	r3, [fp, #-16]
   25ba8:	lsl	r3, r3, #1
   25bac:	add	r3, r2, r3
   25bb0:	ldrh	r3, [r3]
   25bb4:	and	r3, r3, #4
   25bb8:	cmp	r3, #0
   25bbc:	beq	25bdc <__assert_fail@plt+0x14698>
   25bc0:	ldr	r3, [fp, #-16]
   25bc4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   25bc8:	add	r3, r2, r3
   25bcc:	ldrb	r3, [r3]
   25bd0:	mov	r1, r3
   25bd4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   25bd8:	bl	17e58 <__assert_fail@plt+0x6914>
   25bdc:	ldr	r3, [fp, #-16]
   25be0:	add	r3, r3, #1
   25be4:	str	r3, [fp, #-16]
   25be8:	ldr	r3, [fp, #-16]
   25bec:	cmp	r3, #255	; 0xff
   25bf0:	ble	25b98 <__assert_fail@plt+0x14654>
   25bf4:	b	25d5c <__assert_fail@plt+0x14818>
   25bf8:	mov	r3, #0
   25bfc:	str	r3, [fp, #-16]
   25c00:	b	25c44 <__assert_fail@plt+0x14700>
   25c04:	bl	113d0 <__ctype_b_loc@plt>
   25c08:	mov	r3, r0
   25c0c:	ldr	r2, [r3]
   25c10:	ldr	r3, [fp, #-16]
   25c14:	lsl	r3, r3, #1
   25c18:	add	r3, r2, r3
   25c1c:	ldrh	r3, [r3]
   25c20:	and	r3, r3, #4
   25c24:	cmp	r3, #0
   25c28:	beq	25c38 <__assert_fail@plt+0x146f4>
   25c2c:	ldr	r1, [fp, #-16]
   25c30:	ldr	r0, [fp, #-36]	; 0xffffffdc
   25c34:	bl	17e58 <__assert_fail@plt+0x6914>
   25c38:	ldr	r3, [fp, #-16]
   25c3c:	add	r3, r3, #1
   25c40:	str	r3, [fp, #-16]
   25c44:	ldr	r3, [fp, #-16]
   25c48:	cmp	r3, #255	; 0xff
   25c4c:	ble	25c04 <__assert_fail@plt+0x146c0>
   25c50:	b	25d5c <__assert_fail@plt+0x14818>
   25c54:	movw	r1, #25772	; 0x64ac
   25c58:	movt	r1, #3
   25c5c:	ldr	r0, [fp, #-20]	; 0xffffffec
   25c60:	bl	111d8 <strcmp@plt>
   25c64:	mov	r3, r0
   25c68:	cmp	r3, #0
   25c6c:	bne	25d54 <__assert_fail@plt+0x14810>
   25c70:	ldr	r3, [fp, #-32]	; 0xffffffe0
   25c74:	cmp	r3, #0
   25c78:	movne	r3, #1
   25c7c:	moveq	r3, #0
   25c80:	uxtb	r3, r3
   25c84:	cmp	r3, #0
   25c88:	beq	25cf8 <__assert_fail@plt+0x147b4>
   25c8c:	mov	r3, #0
   25c90:	str	r3, [fp, #-16]
   25c94:	b	25ce8 <__assert_fail@plt+0x147a4>
   25c98:	bl	113d0 <__ctype_b_loc@plt>
   25c9c:	mov	r3, r0
   25ca0:	ldr	r2, [r3]
   25ca4:	ldr	r3, [fp, #-16]
   25ca8:	lsl	r3, r3, #1
   25cac:	add	r3, r2, r3
   25cb0:	ldrh	r3, [r3]
   25cb4:	and	r3, r3, #4096	; 0x1000
   25cb8:	cmp	r3, #0
   25cbc:	beq	25cdc <__assert_fail@plt+0x14798>
   25cc0:	ldr	r3, [fp, #-16]
   25cc4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   25cc8:	add	r3, r2, r3
   25ccc:	ldrb	r3, [r3]
   25cd0:	mov	r1, r3
   25cd4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   25cd8:	bl	17e58 <__assert_fail@plt+0x6914>
   25cdc:	ldr	r3, [fp, #-16]
   25ce0:	add	r3, r3, #1
   25ce4:	str	r3, [fp, #-16]
   25ce8:	ldr	r3, [fp, #-16]
   25cec:	cmp	r3, #255	; 0xff
   25cf0:	ble	25c98 <__assert_fail@plt+0x14754>
   25cf4:	b	25d5c <__assert_fail@plt+0x14818>
   25cf8:	mov	r3, #0
   25cfc:	str	r3, [fp, #-16]
   25d00:	b	25d44 <__assert_fail@plt+0x14800>
   25d04:	bl	113d0 <__ctype_b_loc@plt>
   25d08:	mov	r3, r0
   25d0c:	ldr	r2, [r3]
   25d10:	ldr	r3, [fp, #-16]
   25d14:	lsl	r3, r3, #1
   25d18:	add	r3, r2, r3
   25d1c:	ldrh	r3, [r3]
   25d20:	and	r3, r3, #4096	; 0x1000
   25d24:	cmp	r3, #0
   25d28:	beq	25d38 <__assert_fail@plt+0x147f4>
   25d2c:	ldr	r1, [fp, #-16]
   25d30:	ldr	r0, [fp, #-36]	; 0xffffffdc
   25d34:	bl	17e58 <__assert_fail@plt+0x6914>
   25d38:	ldr	r3, [fp, #-16]
   25d3c:	add	r3, r3, #1
   25d40:	str	r3, [fp, #-16]
   25d44:	ldr	r3, [fp, #-16]
   25d48:	cmp	r3, #255	; 0xff
   25d4c:	ble	25d04 <__assert_fail@plt+0x147c0>
   25d50:	b	25d5c <__assert_fail@plt+0x14818>
   25d54:	mov	r3, #4
   25d58:	b	25d60 <__assert_fail@plt+0x1481c>
   25d5c:	mov	r3, #0
   25d60:	mov	r0, r3
   25d64:	sub	sp, fp, #8
   25d68:	ldr	r4, [sp]
   25d6c:	ldr	fp, [sp, #4]
   25d70:	add	sp, sp, #8
   25d74:	pop	{pc}		; (ldr pc, [sp], #4)
   25d78:	str	fp, [sp, #-8]!
   25d7c:	str	lr, [sp, #4]
   25d80:	add	fp, sp, #4
   25d84:	sub	sp, sp, #56	; 0x38
   25d88:	str	r0, [fp, #-40]	; 0xffffffd8
   25d8c:	str	r1, [fp, #-44]	; 0xffffffd4
   25d90:	str	r2, [fp, #-48]	; 0xffffffd0
   25d94:	str	r3, [fp, #-52]	; 0xffffffcc
   25d98:	mov	r3, #0
   25d9c:	str	r3, [fp, #-28]	; 0xffffffe4
   25da0:	mov	r1, #1
   25da4:	mov	r0, #32
   25da8:	bl	33ad0 <__assert_fail@plt+0x2258c>
   25dac:	mov	r3, r0
   25db0:	str	r3, [fp, #-8]
   25db4:	ldr	r3, [fp, #-8]
   25db8:	cmp	r3, #0
   25dbc:	moveq	r3, #1
   25dc0:	movne	r3, #0
   25dc4:	uxtb	r3, r3
   25dc8:	cmp	r3, #0
   25dcc:	beq	25de4 <__assert_fail@plt+0x148a0>
   25dd0:	ldr	r3, [fp, #8]
   25dd4:	mov	r2, #12
   25dd8:	str	r2, [r3]
   25ddc:	mov	r3, #0
   25de0:	b	26048 <__assert_fail@plt+0x14b04>
   25de4:	mov	r1, #1
   25de8:	mov	r0, #40	; 0x28
   25dec:	bl	33ad0 <__assert_fail@plt+0x2258c>
   25df0:	mov	r3, r0
   25df4:	str	r3, [fp, #-12]
   25df8:	ldr	r3, [fp, #-12]
   25dfc:	cmp	r3, #0
   25e00:	moveq	r3, #1
   25e04:	movne	r3, #0
   25e08:	uxtb	r3, r3
   25e0c:	cmp	r3, #0
   25e10:	beq	25e30 <__assert_fail@plt+0x148ec>
   25e14:	ldr	r0, [fp, #-8]
   25e18:	bl	151ec <__assert_fail@plt+0x3ca8>
   25e1c:	ldr	r3, [fp, #8]
   25e20:	mov	r2, #12
   25e24:	str	r2, [r3]
   25e28:	mov	r3, #0
   25e2c:	b	26048 <__assert_fail@plt+0x14b04>
   25e30:	ldr	r2, [fp, #-12]
   25e34:	ldrb	r3, [r2, #16]
   25e38:	ldrb	r1, [fp, #4]
   25e3c:	bfi	r3, r1, #0, #1
   25e40:	strb	r3, [r2, #16]
   25e44:	sub	r2, fp, #28
   25e48:	mov	r3, #0
   25e4c:	str	r3, [sp, #4]
   25e50:	ldr	r3, [fp, #-48]	; 0xffffffd0
   25e54:	str	r3, [sp]
   25e58:	mov	r3, r2
   25e5c:	ldr	r2, [fp, #-12]
   25e60:	ldr	r1, [fp, #-8]
   25e64:	ldr	r0, [fp, #-44]	; 0xffffffd4
   25e68:	bl	25008 <__assert_fail@plt+0x13ac4>
   25e6c:	str	r0, [fp, #-16]
   25e70:	ldr	r3, [fp, #-16]
   25e74:	cmp	r3, #0
   25e78:	movne	r3, #1
   25e7c:	moveq	r3, #0
   25e80:	uxtb	r3, r3
   25e84:	cmp	r3, #0
   25e88:	beq	25ed0 <__assert_fail@plt+0x1498c>
   25e8c:	ldr	r0, [fp, #-8]
   25e90:	bl	151ec <__assert_fail@plt+0x3ca8>
   25e94:	ldr	r0, [fp, #-12]
   25e98:	bl	26188 <__assert_fail@plt+0x14c44>
   25e9c:	ldr	r3, [fp, #8]
   25ea0:	ldr	r2, [fp, #-16]
   25ea4:	str	r2, [r3]
   25ea8:	mov	r3, #0
   25eac:	b	26048 <__assert_fail@plt+0x14b04>
   25eb0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   25eb4:	ldrb	r3, [r3]
   25eb8:	mov	r1, r3
   25ebc:	ldr	r0, [fp, #-8]
   25ec0:	bl	17e58 <__assert_fail@plt+0x6914>
   25ec4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   25ec8:	add	r3, r3, #1
   25ecc:	str	r3, [fp, #-52]	; 0xffffffcc
   25ed0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   25ed4:	ldrb	r3, [r3]
   25ed8:	cmp	r3, #0
   25edc:	bne	25eb0 <__assert_fail@plt+0x1496c>
   25ee0:	ldrb	r3, [fp, #4]
   25ee4:	cmp	r3, #0
   25ee8:	beq	25ef4 <__assert_fail@plt+0x149b0>
   25eec:	ldr	r0, [fp, #-8]
   25ef0:	bl	18090 <__assert_fail@plt+0x6b4c>
   25ef4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   25ef8:	ldr	r3, [r3, #92]	; 0x5c
   25efc:	cmp	r3, #1
   25f00:	ble	25f18 <__assert_fail@plt+0x149d4>
   25f04:	ldr	r3, [fp, #-40]	; 0xffffffd8
   25f08:	ldr	r3, [r3, #60]	; 0x3c
   25f0c:	mov	r1, r3
   25f10:	ldr	r0, [fp, #-8]
   25f14:	bl	18188 <__assert_fail@plt+0x6c44>
   25f18:	sub	r1, fp, #36	; 0x24
   25f1c:	mov	r2, #0
   25f20:	mov	r3, #0
   25f24:	strd	r2, [r1]
   25f28:	ldr	r3, [fp, #-8]
   25f2c:	str	r3, [fp, #-36]	; 0xffffffdc
   25f30:	mov	r3, #3
   25f34:	strb	r3, [fp, #-32]	; 0xffffffe0
   25f38:	sub	r3, fp, #36	; 0x24
   25f3c:	mov	r2, #0
   25f40:	mov	r1, #0
   25f44:	ldr	r0, [fp, #-40]	; 0xffffffd8
   25f48:	bl	26260 <__assert_fail@plt+0x14d1c>
   25f4c:	str	r0, [fp, #-20]	; 0xffffffec
   25f50:	ldr	r3, [fp, #-20]	; 0xffffffec
   25f54:	cmp	r3, #0
   25f58:	moveq	r3, #1
   25f5c:	movne	r3, #0
   25f60:	uxtb	r3, r3
   25f64:	cmp	r3, #0
   25f68:	bne	2601c <__assert_fail@plt+0x14ad8>
   25f6c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   25f70:	ldr	r3, [r3, #92]	; 0x5c
   25f74:	cmp	r3, #1
   25f78:	ble	2600c <__assert_fail@plt+0x14ac8>
   25f7c:	mov	r3, #6
   25f80:	strb	r3, [fp, #-32]	; 0xffffffe0
   25f84:	ldr	r3, [fp, #-12]
   25f88:	str	r3, [fp, #-36]	; 0xffffffdc
   25f8c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   25f90:	ldrb	r3, [r2, #88]	; 0x58
   25f94:	orr	r3, r3, #2
   25f98:	strb	r3, [r2, #88]	; 0x58
   25f9c:	sub	r3, fp, #36	; 0x24
   25fa0:	mov	r2, #0
   25fa4:	mov	r1, #0
   25fa8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   25fac:	bl	26260 <__assert_fail@plt+0x14d1c>
   25fb0:	str	r0, [fp, #-24]	; 0xffffffe8
   25fb4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   25fb8:	cmp	r3, #0
   25fbc:	moveq	r3, #1
   25fc0:	movne	r3, #0
   25fc4:	uxtb	r3, r3
   25fc8:	cmp	r3, #0
   25fcc:	bne	26024 <__assert_fail@plt+0x14ae0>
   25fd0:	mov	r3, #10
   25fd4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   25fd8:	ldr	r1, [fp, #-20]	; 0xffffffec
   25fdc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   25fe0:	bl	261f8 <__assert_fail@plt+0x14cb4>
   25fe4:	str	r0, [fp, #-20]	; 0xffffffec
   25fe8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   25fec:	cmp	r3, #0
   25ff0:	movne	r3, #1
   25ff4:	moveq	r3, #0
   25ff8:	uxtb	r3, r3
   25ffc:	cmp	r3, #0
   26000:	beq	26028 <__assert_fail@plt+0x14ae4>
   26004:	ldr	r3, [fp, #-20]	; 0xffffffec
   26008:	b	26048 <__assert_fail@plt+0x14b04>
   2600c:	ldr	r0, [fp, #-12]
   26010:	bl	26188 <__assert_fail@plt+0x14c44>
   26014:	ldr	r3, [fp, #-20]	; 0xffffffec
   26018:	b	26048 <__assert_fail@plt+0x14b04>
   2601c:	nop	{0}
   26020:	b	26028 <__assert_fail@plt+0x14ae4>
   26024:	nop	{0}
   26028:	ldr	r0, [fp, #-8]
   2602c:	bl	151ec <__assert_fail@plt+0x3ca8>
   26030:	ldr	r0, [fp, #-12]
   26034:	bl	26188 <__assert_fail@plt+0x14c44>
   26038:	ldr	r3, [fp, #8]
   2603c:	mov	r2, #12
   26040:	str	r2, [r3]
   26044:	mov	r3, #0
   26048:	mov	r0, r3
   2604c:	sub	sp, fp, #4
   26050:	ldr	fp, [sp]
   26054:	add	sp, sp, #4
   26058:	pop	{pc}		; (ldr pc, [sp], #4)
   2605c:	str	fp, [sp, #-8]!
   26060:	str	lr, [sp, #4]
   26064:	add	fp, sp, #4
   26068:	sub	sp, sp, #24
   2606c:	str	r0, [fp, #-16]
   26070:	str	r1, [fp, #-20]	; 0xffffffec
   26074:	str	r2, [fp, #-24]	; 0xffffffe8
   26078:	mvn	r3, #0
   2607c:	str	r3, [fp, #-8]
   26080:	ldr	r2, [fp, #-24]	; 0xffffffe8
   26084:	ldr	r1, [fp, #-16]
   26088:	ldr	r0, [fp, #-20]	; 0xffffffec
   2608c:	bl	21540 <__assert_fail@plt+0xfffc>
   26090:	ldr	r3, [fp, #-20]	; 0xffffffec
   26094:	ldrb	r3, [r3]
   26098:	strb	r3, [fp, #-9]
   2609c:	ldr	r3, [fp, #-20]	; 0xffffffec
   260a0:	ldrb	r3, [r3, #4]
   260a4:	cmp	r3, #2
   260a8:	moveq	r3, #1
   260ac:	movne	r3, #0
   260b0:	uxtb	r3, r3
   260b4:	cmp	r3, #0
   260b8:	beq	260c4 <__assert_fail@plt+0x14b80>
   260bc:	mvn	r3, #1
   260c0:	b	26174 <__assert_fail@plt+0x14c30>
   260c4:	ldr	r3, [fp, #-20]	; 0xffffffec
   260c8:	ldrb	r3, [r3, #4]
   260cc:	cmp	r3, #24
   260d0:	beq	26170 <__assert_fail@plt+0x14c2c>
   260d4:	ldrb	r3, [fp, #-9]
   260d8:	cmp	r3, #44	; 0x2c
   260dc:	beq	26170 <__assert_fail@plt+0x14c2c>
   260e0:	ldr	r3, [fp, #-20]	; 0xffffffec
   260e4:	ldrb	r3, [r3, #4]
   260e8:	cmp	r3, #1
   260ec:	bne	26164 <__assert_fail@plt+0x14c20>
   260f0:	ldrb	r3, [fp, #-9]
   260f4:	cmp	r3, #47	; 0x2f
   260f8:	bls	26164 <__assert_fail@plt+0x14c20>
   260fc:	ldrb	r3, [fp, #-9]
   26100:	cmp	r3, #57	; 0x39
   26104:	bhi	26164 <__assert_fail@plt+0x14c20>
   26108:	ldr	r3, [fp, #-8]
   2610c:	cmn	r3, #2
   26110:	beq	26164 <__assert_fail@plt+0x14c20>
   26114:	ldr	r3, [fp, #-8]
   26118:	cmn	r3, #1
   2611c:	bne	2612c <__assert_fail@plt+0x14be8>
   26120:	ldrb	r3, [fp, #-9]
   26124:	sub	r3, r3, #48	; 0x30
   26128:	b	26168 <__assert_fail@plt+0x14c24>
   2612c:	ldr	r2, [fp, #-8]
   26130:	mov	r3, r2
   26134:	lsl	r3, r3, #2
   26138:	add	r3, r3, r2
   2613c:	lsl	r3, r3, #1
   26140:	mov	r2, r3
   26144:	ldrb	r3, [fp, #-9]
   26148:	add	r3, r2, r3
   2614c:	movw	r2, #32816	; 0x8030
   26150:	cmp	r3, r2
   26154:	movlt	r3, r3
   26158:	movge	r3, r2
   2615c:	sub	r3, r3, #48	; 0x30
   26160:	b	26168 <__assert_fail@plt+0x14c24>
   26164:	mvn	r3, #1
   26168:	str	r3, [fp, #-8]
   2616c:	b	26080 <__assert_fail@plt+0x14b3c>
   26170:	ldr	r3, [fp, #-8]
   26174:	mov	r0, r3
   26178:	sub	sp, fp, #4
   2617c:	ldr	fp, [sp]
   26180:	add	sp, sp, #4
   26184:	pop	{pc}		; (ldr pc, [sp], #4)
   26188:	str	fp, [sp, #-8]!
   2618c:	str	lr, [sp, #4]
   26190:	add	fp, sp, #4
   26194:	sub	sp, sp, #8
   26198:	str	r0, [fp, #-8]
   2619c:	ldr	r3, [fp, #-8]
   261a0:	ldr	r3, [r3]
   261a4:	mov	r0, r3
   261a8:	bl	151ec <__assert_fail@plt+0x3ca8>
   261ac:	ldr	r3, [fp, #-8]
   261b0:	ldr	r3, [r3, #4]
   261b4:	mov	r0, r3
   261b8:	bl	151ec <__assert_fail@plt+0x3ca8>
   261bc:	ldr	r3, [fp, #-8]
   261c0:	ldr	r3, [r3, #8]
   261c4:	mov	r0, r3
   261c8:	bl	151ec <__assert_fail@plt+0x3ca8>
   261cc:	ldr	r3, [fp, #-8]
   261d0:	ldr	r3, [r3, #12]
   261d4:	mov	r0, r3
   261d8:	bl	151ec <__assert_fail@plt+0x3ca8>
   261dc:	ldr	r0, [fp, #-8]
   261e0:	bl	151ec <__assert_fail@plt+0x3ca8>
   261e4:	nop	{0}
   261e8:	sub	sp, fp, #4
   261ec:	ldr	fp, [sp]
   261f0:	add	sp, sp, #4
   261f4:	pop	{pc}		; (ldr pc, [sp], #4)
   261f8:	str	fp, [sp, #-8]!
   261fc:	str	lr, [sp, #4]
   26200:	add	fp, sp, #4
   26204:	sub	sp, sp, #24
   26208:	str	r0, [fp, #-16]
   2620c:	str	r1, [fp, #-20]	; 0xffffffec
   26210:	str	r2, [fp, #-24]	; 0xffffffe8
   26214:	str	r3, [fp, #-28]	; 0xffffffe4
   26218:	sub	r1, fp, #12
   2621c:	mov	r2, #0
   26220:	mov	r3, #0
   26224:	strd	r2, [r1]
   26228:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2622c:	uxtb	r3, r3
   26230:	strb	r3, [fp, #-8]
   26234:	sub	r3, fp, #12
   26238:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2623c:	ldr	r1, [fp, #-20]	; 0xffffffec
   26240:	ldr	r0, [fp, #-16]
   26244:	bl	26260 <__assert_fail@plt+0x14d1c>
   26248:	mov	r3, r0
   2624c:	mov	r0, r3
   26250:	sub	sp, fp, #4
   26254:	ldr	fp, [sp]
   26258:	add	sp, sp, #4
   2625c:	pop	{pc}		; (ldr pc, [sp], #4)
   26260:	str	fp, [sp, #-8]!
   26264:	str	lr, [sp, #4]
   26268:	add	fp, sp, #4
   2626c:	sub	sp, sp, #24
   26270:	str	r0, [fp, #-16]
   26274:	str	r1, [fp, #-20]	; 0xffffffec
   26278:	str	r2, [fp, #-24]	; 0xffffffe8
   2627c:	str	r3, [fp, #-28]	; 0xffffffe4
   26280:	ldr	r3, [fp, #-16]
   26284:	ldr	r3, [r3, #64]	; 0x40
   26288:	cmp	r3, #31
   2628c:	moveq	r3, #1
   26290:	movne	r3, #0
   26294:	uxtb	r3, r3
   26298:	cmp	r3, #0
   2629c:	beq	262ec <__assert_fail@plt+0x14da8>
   262a0:	mov	r0, #996	; 0x3e4
   262a4:	bl	33ba0 <__assert_fail@plt+0x2265c>
   262a8:	mov	r3, r0
   262ac:	str	r3, [fp, #-8]
   262b0:	ldr	r3, [fp, #-8]
   262b4:	cmp	r3, #0
   262b8:	bne	262c4 <__assert_fail@plt+0x14d80>
   262bc:	mov	r3, #0
   262c0:	b	263cc <__assert_fail@plt+0x14e88>
   262c4:	ldr	r3, [fp, #-16]
   262c8:	ldr	r2, [r3, #56]	; 0x38
   262cc:	ldr	r3, [fp, #-8]
   262d0:	str	r2, [r3]
   262d4:	ldr	r3, [fp, #-16]
   262d8:	ldr	r2, [fp, #-8]
   262dc:	str	r2, [r3, #56]	; 0x38
   262e0:	ldr	r3, [fp, #-16]
   262e4:	mov	r2, #0
   262e8:	str	r2, [r3, #64]	; 0x40
   262ec:	ldr	r3, [fp, #-16]
   262f0:	ldr	r2, [r3, #56]	; 0x38
   262f4:	ldr	r3, [fp, #-16]
   262f8:	ldr	r3, [r3, #64]	; 0x40
   262fc:	add	r0, r3, #1
   26300:	ldr	r1, [fp, #-16]
   26304:	str	r0, [r1, #64]	; 0x40
   26308:	lsl	r3, r3, #5
   2630c:	add	r3, r2, r3
   26310:	add	r3, r3, #4
   26314:	str	r3, [fp, #-12]
   26318:	ldr	r3, [fp, #-12]
   2631c:	mov	r2, #0
   26320:	str	r2, [r3]
   26324:	ldr	r3, [fp, #-12]
   26328:	ldr	r2, [fp, #-20]	; 0xffffffec
   2632c:	str	r2, [r3, #4]
   26330:	ldr	r3, [fp, #-12]
   26334:	ldr	r2, [fp, #-24]	; 0xffffffe8
   26338:	str	r2, [r3, #8]
   2633c:	ldr	r3, [fp, #-12]
   26340:	ldr	r2, [fp, #-28]	; 0xffffffe4
   26344:	add	r1, r3, #20
   26348:	mov	r3, r2
   2634c:	ldrd	r2, [r3]
   26350:	strd	r2, [r1]
   26354:	ldr	r2, [fp, #-12]
   26358:	ldrb	r3, [r2, #26]
   2635c:	bfc	r3, #2, #1
   26360:	strb	r3, [r2, #26]
   26364:	ldr	r2, [fp, #-12]
   26368:	ldrb	r3, [r2, #26]
   2636c:	bfc	r3, #3, #1
   26370:	strb	r3, [r2, #26]
   26374:	ldr	r3, [fp, #-12]
   26378:	mov	r2, #0
   2637c:	str	r2, [r3, #12]
   26380:	ldr	r3, [fp, #-12]
   26384:	mov	r2, #0
   26388:	str	r2, [r3, #16]
   2638c:	ldr	r3, [fp, #-12]
   26390:	mvn	r2, #0
   26394:	str	r2, [r3, #28]
   26398:	ldr	r3, [fp, #-20]	; 0xffffffec
   2639c:	cmp	r3, #0
   263a0:	beq	263b0 <__assert_fail@plt+0x14e6c>
   263a4:	ldr	r3, [fp, #-20]	; 0xffffffec
   263a8:	ldr	r2, [fp, #-12]
   263ac:	str	r2, [r3]
   263b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   263b4:	cmp	r3, #0
   263b8:	beq	263c8 <__assert_fail@plt+0x14e84>
   263bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   263c0:	ldr	r2, [fp, #-12]
   263c4:	str	r2, [r3]
   263c8:	ldr	r3, [fp, #-12]
   263cc:	mov	r0, r3
   263d0:	sub	sp, fp, #4
   263d4:	ldr	fp, [sp]
   263d8:	add	sp, sp, #4
   263dc:	pop	{pc}		; (ldr pc, [sp], #4)
   263e0:	push	{fp}		; (str fp, [sp, #-4]!)
   263e4:	add	fp, sp, #0
   263e8:	sub	sp, sp, #20
   263ec:	str	r0, [fp, #-16]
   263f0:	str	r1, [fp, #-20]	; 0xffffffec
   263f4:	ldr	r3, [fp, #-16]
   263f8:	str	r3, [fp, #-8]
   263fc:	ldr	r3, [fp, #-20]	; 0xffffffec
   26400:	ldrb	r3, [r3, #24]
   26404:	cmp	r3, #17
   26408:	bne	26430 <__assert_fail@plt+0x14eec>
   2640c:	ldr	r3, [fp, #-20]	; 0xffffffec
   26410:	ldr	r3, [r3, #20]
   26414:	ldr	r2, [fp, #-8]
   26418:	cmp	r2, r3
   2641c:	bne	26430 <__assert_fail@plt+0x14eec>
   26420:	ldr	r2, [fp, #-20]	; 0xffffffec
   26424:	ldrb	r3, [r2, #26]
   26428:	orr	r3, r3, #8
   2642c:	strb	r3, [r2, #26]
   26430:	mov	r3, #0
   26434:	mov	r0, r3
   26438:	add	sp, fp, #0
   2643c:	pop	{fp}		; (ldr fp, [sp], #4)
   26440:	bx	lr
   26444:	str	fp, [sp, #-8]!
   26448:	str	lr, [sp, #4]
   2644c:	add	fp, sp, #4
   26450:	sub	sp, sp, #8
   26454:	str	r0, [fp, #-8]
   26458:	ldr	r3, [fp, #-8]
   2645c:	ldrb	r3, [r3, #4]
   26460:	cmp	r3, #6
   26464:	bne	26494 <__assert_fail@plt+0x14f50>
   26468:	ldr	r3, [fp, #-8]
   2646c:	ldrb	r3, [r3, #6]
   26470:	and	r3, r3, #4
   26474:	uxtb	r3, r3
   26478:	cmp	r3, #0
   2647c:	bne	26494 <__assert_fail@plt+0x14f50>
   26480:	ldr	r3, [fp, #-8]
   26484:	ldr	r3, [r3]
   26488:	mov	r0, r3
   2648c:	bl	26188 <__assert_fail@plt+0x14c44>
   26490:	b	264cc <__assert_fail@plt+0x14f88>
   26494:	ldr	r3, [fp, #-8]
   26498:	ldrb	r3, [r3, #4]
   2649c:	cmp	r3, #3
   264a0:	bne	264cc <__assert_fail@plt+0x14f88>
   264a4:	ldr	r3, [fp, #-8]
   264a8:	ldrb	r3, [r3, #6]
   264ac:	and	r3, r3, #4
   264b0:	uxtb	r3, r3
   264b4:	cmp	r3, #0
   264b8:	bne	264cc <__assert_fail@plt+0x14f88>
   264bc:	ldr	r3, [fp, #-8]
   264c0:	ldr	r3, [r3]
   264c4:	mov	r0, r3
   264c8:	bl	151ec <__assert_fail@plt+0x3ca8>
   264cc:	nop	{0}
   264d0:	sub	sp, fp, #4
   264d4:	ldr	fp, [sp]
   264d8:	add	sp, sp, #4
   264dc:	pop	{pc}		; (ldr pc, [sp], #4)
   264e0:	str	fp, [sp, #-8]!
   264e4:	str	lr, [sp, #4]
   264e8:	add	fp, sp, #4
   264ec:	sub	sp, sp, #8
   264f0:	str	r0, [fp, #-8]
   264f4:	str	r1, [fp, #-12]
   264f8:	ldr	r3, [fp, #-12]
   264fc:	add	r3, r3, #20
   26500:	mov	r0, r3
   26504:	bl	26444 <__assert_fail@plt+0x14f00>
   26508:	mov	r3, #0
   2650c:	mov	r0, r3
   26510:	sub	sp, fp, #4
   26514:	ldr	fp, [sp]
   26518:	add	sp, sp, #4
   2651c:	pop	{pc}		; (ldr pc, [sp], #4)
   26520:	str	fp, [sp, #-8]!
   26524:	str	lr, [sp, #4]
   26528:	add	fp, sp, #4
   2652c:	sub	sp, sp, #32
   26530:	str	r0, [fp, #-32]	; 0xffffffe0
   26534:	str	r1, [fp, #-36]	; 0xffffffdc
   26538:	sub	r3, fp, #24
   2653c:	str	r3, [fp, #-12]
   26540:	ldr	r3, [fp, #-32]	; 0xffffffe0
   26544:	ldr	r3, [r3]
   26548:	str	r3, [fp, #-16]
   2654c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   26550:	str	r3, [fp, #-8]
   26554:	ldr	r3, [fp, #-8]
   26558:	add	r3, r3, #20
   2655c:	mov	r2, #0
   26560:	mov	r1, #0
   26564:	ldr	r0, [fp, #-36]	; 0xffffffdc
   26568:	bl	26260 <__assert_fail@plt+0x14d1c>
   2656c:	mov	r2, r0
   26570:	ldr	r3, [fp, #-12]
   26574:	str	r2, [r3]
   26578:	ldr	r3, [fp, #-12]
   2657c:	ldr	r3, [r3]
   26580:	cmp	r3, #0
   26584:	bne	26590 <__assert_fail@plt+0x1504c>
   26588:	mov	r3, #0
   2658c:	b	2666c <__assert_fail@plt+0x15128>
   26590:	ldr	r3, [fp, #-12]
   26594:	ldr	r3, [r3]
   26598:	ldr	r2, [fp, #-16]
   2659c:	str	r2, [r3]
   265a0:	ldr	r3, [fp, #-12]
   265a4:	ldr	r2, [r3]
   265a8:	ldrb	r3, [r2, #26]
   265ac:	orr	r3, r3, #4
   265b0:	strb	r3, [r2, #26]
   265b4:	ldr	r3, [fp, #-12]
   265b8:	ldr	r3, [r3]
   265bc:	str	r3, [fp, #-16]
   265c0:	ldr	r3, [fp, #-8]
   265c4:	ldr	r3, [r3, #4]
   265c8:	cmp	r3, #0
   265cc:	beq	265ec <__assert_fail@plt+0x150a8>
   265d0:	ldr	r3, [fp, #-8]
   265d4:	ldr	r3, [r3, #4]
   265d8:	str	r3, [fp, #-8]
   265dc:	ldr	r3, [fp, #-16]
   265e0:	add	r3, r3, #4
   265e4:	str	r3, [fp, #-12]
   265e8:	b	26554 <__assert_fail@plt+0x15010>
   265ec:	mov	r3, #0
   265f0:	str	r3, [fp, #-20]	; 0xffffffec
   265f4:	b	2662c <__assert_fail@plt+0x150e8>
   265f8:	ldr	r3, [fp, #-8]
   265fc:	str	r3, [fp, #-20]	; 0xffffffec
   26600:	ldr	r3, [fp, #-8]
   26604:	ldr	r3, [r3]
   26608:	str	r3, [fp, #-8]
   2660c:	ldr	r3, [fp, #-16]
   26610:	ldr	r3, [r3]
   26614:	str	r3, [fp, #-16]
   26618:	ldr	r3, [fp, #-8]
   2661c:	cmp	r3, #0
   26620:	bne	2662c <__assert_fail@plt+0x150e8>
   26624:	ldr	r3, [fp, #-24]	; 0xffffffe8
   26628:	b	2666c <__assert_fail@plt+0x15128>
   2662c:	ldr	r3, [fp, #-8]
   26630:	ldr	r3, [r3, #8]
   26634:	ldr	r2, [fp, #-20]	; 0xffffffec
   26638:	cmp	r2, r3
   2663c:	beq	265f8 <__assert_fail@plt+0x150b4>
   26640:	ldr	r3, [fp, #-8]
   26644:	ldr	r3, [r3, #8]
   26648:	cmp	r3, #0
   2664c:	beq	265f8 <__assert_fail@plt+0x150b4>
   26650:	ldr	r3, [fp, #-8]
   26654:	ldr	r3, [r3, #8]
   26658:	str	r3, [fp, #-8]
   2665c:	ldr	r3, [fp, #-16]
   26660:	add	r3, r3, #8
   26664:	str	r3, [fp, #-12]
   26668:	b	26554 <__assert_fail@plt+0x15010>
   2666c:	mov	r0, r3
   26670:	sub	sp, fp, #4
   26674:	ldr	fp, [sp]
   26678:	add	sp, sp, #4
   2667c:	pop	{pc}		; (ldr pc, [sp], #4)
   26680:	str	fp, [sp, #-8]!
   26684:	str	lr, [sp, #4]
   26688:	add	fp, sp, #4
   2668c:	sub	sp, sp, #56	; 0x38
   26690:	str	r0, [fp, #-24]	; 0xffffffe8
   26694:	str	r1, [fp, #-28]	; 0xffffffe4
   26698:	str	r2, [fp, #-32]	; 0xffffffe0
   2669c:	str	r3, [fp, #-36]	; 0xffffffdc
   266a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   266a4:	ldr	r3, [r3]
   266a8:	str	r3, [fp, #-20]	; 0xffffffec
   266ac:	ldr	r3, [fp, #4]
   266b0:	bic	r3, r3, #7
   266b4:	cmp	r3, #0
   266b8:	beq	266c4 <__assert_fail@plt+0x15180>
   266bc:	mov	r3, #2
   266c0:	b	26820 <__assert_fail@plt+0x152dc>
   266c4:	ldr	r3, [fp, #4]
   266c8:	and	r3, r3, #4
   266cc:	cmp	r3, #0
   266d0:	beq	266f0 <__assert_fail@plt+0x151ac>
   266d4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   266d8:	ldr	r3, [r3]
   266dc:	str	r3, [fp, #-12]
   266e0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   266e4:	ldr	r3, [r3, #4]
   266e8:	str	r3, [fp, #-16]
   266ec:	b	26708 <__assert_fail@plt+0x151c4>
   266f0:	mov	r3, #0
   266f4:	str	r3, [fp, #-12]
   266f8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   266fc:	bl	113f4 <strlen@plt>
   26700:	mov	r3, r0
   26704:	str	r3, [fp, #-16]
   26708:	movw	r3, #0
   2670c:	movt	r3, #0
   26710:	cmp	r3, #0
   26714:	bne	26728 <__assert_fail@plt+0x151e4>
   26718:	movw	r3, #0
   2671c:	movt	r3, #0
   26720:	cmp	r3, #0
   26724:	beq	2673c <__assert_fail@plt+0x151f8>
   26728:	ldr	r3, [fp, #-20]	; 0xffffffec
   2672c:	add	r3, r3, #136	; 0x88
   26730:	mov	r0, r3
   26734:	bl	11238 <pthread_mutex_lock@plt>
   26738:	nop	{0}
   2673c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   26740:	ldrb	r3, [r3, #28]
   26744:	and	r3, r3, #16
   26748:	uxtb	r3, r3
   2674c:	cmp	r3, #0
   26750:	beq	26798 <__assert_fail@plt+0x15254>
   26754:	ldr	r3, [fp, #4]
   26758:	str	r3, [sp, #16]
   2675c:	mov	r3, #0
   26760:	str	r3, [sp, #12]
   26764:	mov	r3, #0
   26768:	str	r3, [sp, #8]
   2676c:	ldr	r3, [fp, #-16]
   26770:	str	r3, [sp, #4]
   26774:	ldr	r3, [fp, #-16]
   26778:	str	r3, [sp]
   2677c:	ldr	r3, [fp, #-12]
   26780:	ldr	r2, [fp, #-16]
   26784:	ldr	r1, [fp, #-28]	; 0xffffffe4
   26788:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2678c:	bl	27418 <__assert_fail@plt+0x15ed4>
   26790:	str	r0, [fp, #-8]
   26794:	b	267d8 <__assert_fail@plt+0x15294>
   26798:	ldr	r3, [fp, #4]
   2679c:	str	r3, [sp, #16]
   267a0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   267a4:	str	r3, [sp, #12]
   267a8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   267ac:	str	r3, [sp, #8]
   267b0:	ldr	r3, [fp, #-16]
   267b4:	str	r3, [sp, #4]
   267b8:	ldr	r3, [fp, #-16]
   267bc:	str	r3, [sp]
   267c0:	ldr	r3, [fp, #-12]
   267c4:	ldr	r2, [fp, #-16]
   267c8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   267cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   267d0:	bl	27418 <__assert_fail@plt+0x15ed4>
   267d4:	str	r0, [fp, #-8]
   267d8:	movw	r3, #0
   267dc:	movt	r3, #0
   267e0:	cmp	r3, #0
   267e4:	bne	267f8 <__assert_fail@plt+0x152b4>
   267e8:	movw	r3, #0
   267ec:	movt	r3, #0
   267f0:	cmp	r3, #0
   267f4:	beq	2680c <__assert_fail@plt+0x152c8>
   267f8:	ldr	r3, [fp, #-20]	; 0xffffffec
   267fc:	add	r3, r3, #136	; 0x88
   26800:	mov	r0, r3
   26804:	bl	11178 <pthread_mutex_unlock@plt>
   26808:	nop	{0}
   2680c:	ldr	r3, [fp, #-8]
   26810:	cmp	r3, #0
   26814:	movne	r3, #1
   26818:	moveq	r3, #0
   2681c:	uxtb	r3, r3
   26820:	mov	r0, r3
   26824:	sub	sp, fp, #4
   26828:	ldr	fp, [sp]
   2682c:	add	sp, sp, #4
   26830:	pop	{pc}		; (ldr pc, [sp], #4)
   26834:	str	fp, [sp, #-8]!
   26838:	str	lr, [sp, #4]
   2683c:	add	fp, sp, #4
   26840:	sub	sp, sp, #32
   26844:	str	r0, [fp, #-8]
   26848:	str	r1, [fp, #-12]
   2684c:	str	r2, [fp, #-16]
   26850:	str	r3, [fp, #-20]	; 0xffffffec
   26854:	mov	r3, #1
   26858:	str	r3, [sp, #12]
   2685c:	ldr	r3, [fp, #4]
   26860:	str	r3, [sp, #8]
   26864:	ldr	r3, [fp, #-16]
   26868:	str	r3, [sp, #4]
   2686c:	mov	r3, #0
   26870:	str	r3, [sp]
   26874:	ldr	r3, [fp, #-20]	; 0xffffffec
   26878:	ldr	r2, [fp, #-16]
   2687c:	ldr	r1, [fp, #-12]
   26880:	ldr	r0, [fp, #-8]
   26884:	bl	26bc0 <__assert_fail@plt+0x1567c>
   26888:	mov	r3, r0
   2688c:	mov	r0, r3
   26890:	sub	sp, fp, #4
   26894:	ldr	fp, [sp]
   26898:	add	sp, sp, #4
   2689c:	pop	{pc}		; (ldr pc, [sp], #4)
   268a0:	str	fp, [sp, #-8]!
   268a4:	str	lr, [sp, #4]
   268a8:	add	fp, sp, #4
   268ac:	sub	sp, sp, #32
   268b0:	str	r0, [fp, #-8]
   268b4:	str	r1, [fp, #-12]
   268b8:	str	r2, [fp, #-16]
   268bc:	str	r3, [fp, #-20]	; 0xffffffec
   268c0:	mov	r3, #0
   268c4:	str	r3, [sp, #12]
   268c8:	ldr	r3, [fp, #8]
   268cc:	str	r3, [sp, #8]
   268d0:	ldr	r3, [fp, #-16]
   268d4:	str	r3, [sp, #4]
   268d8:	ldr	r3, [fp, #4]
   268dc:	str	r3, [sp]
   268e0:	ldr	r3, [fp, #-20]	; 0xffffffec
   268e4:	ldr	r2, [fp, #-16]
   268e8:	ldr	r1, [fp, #-12]
   268ec:	ldr	r0, [fp, #-8]
   268f0:	bl	26bc0 <__assert_fail@plt+0x1567c>
   268f4:	mov	r3, r0
   268f8:	mov	r0, r3
   268fc:	sub	sp, fp, #4
   26900:	ldr	fp, [sp]
   26904:	add	sp, sp, #4
   26908:	pop	{pc}		; (ldr pc, [sp], #4)
   2690c:	str	fp, [sp, #-8]!
   26910:	str	lr, [sp, #4]
   26914:	add	fp, sp, #4
   26918:	sub	sp, sp, #40	; 0x28
   2691c:	str	r0, [fp, #-8]
   26920:	str	r1, [fp, #-12]
   26924:	str	r2, [fp, #-16]
   26928:	str	r3, [fp, #-20]	; 0xffffffec
   2692c:	mov	r3, #1
   26930:	str	r3, [sp, #20]
   26934:	ldr	r3, [fp, #16]
   26938:	str	r3, [sp, #16]
   2693c:	ldr	r3, [fp, #12]
   26940:	str	r3, [sp, #12]
   26944:	mov	r3, #0
   26948:	str	r3, [sp, #8]
   2694c:	ldr	r3, [fp, #8]
   26950:	str	r3, [sp, #4]
   26954:	ldr	r3, [fp, #4]
   26958:	str	r3, [sp]
   2695c:	ldr	r3, [fp, #-20]	; 0xffffffec
   26960:	ldr	r2, [fp, #-16]
   26964:	ldr	r1, [fp, #-12]
   26968:	ldr	r0, [fp, #-8]
   2696c:	bl	26a04 <__assert_fail@plt+0x154c0>
   26970:	mov	r3, r0
   26974:	mov	r0, r3
   26978:	sub	sp, fp, #4
   2697c:	ldr	fp, [sp]
   26980:	add	sp, sp, #4
   26984:	pop	{pc}		; (ldr pc, [sp], #4)
   26988:	str	fp, [sp, #-8]!
   2698c:	str	lr, [sp, #4]
   26990:	add	fp, sp, #4
   26994:	sub	sp, sp, #40	; 0x28
   26998:	str	r0, [fp, #-8]
   2699c:	str	r1, [fp, #-12]
   269a0:	str	r2, [fp, #-16]
   269a4:	str	r3, [fp, #-20]	; 0xffffffec
   269a8:	mov	r3, #0
   269ac:	str	r3, [sp, #20]
   269b0:	ldr	r3, [fp, #20]
   269b4:	str	r3, [sp, #16]
   269b8:	ldr	r3, [fp, #16]
   269bc:	str	r3, [sp, #12]
   269c0:	ldr	r3, [fp, #12]
   269c4:	str	r3, [sp, #8]
   269c8:	ldr	r3, [fp, #8]
   269cc:	str	r3, [sp, #4]
   269d0:	ldr	r3, [fp, #4]
   269d4:	str	r3, [sp]
   269d8:	ldr	r3, [fp, #-20]	; 0xffffffec
   269dc:	ldr	r2, [fp, #-16]
   269e0:	ldr	r1, [fp, #-12]
   269e4:	ldr	r0, [fp, #-8]
   269e8:	bl	26a04 <__assert_fail@plt+0x154c0>
   269ec:	mov	r3, r0
   269f0:	mov	r0, r3
   269f4:	sub	sp, fp, #4
   269f8:	ldr	fp, [sp]
   269fc:	add	sp, sp, #4
   26a00:	pop	{pc}		; (ldr pc, [sp], #4)
   26a04:	str	fp, [sp, #-8]!
   26a08:	str	lr, [sp, #4]
   26a0c:	add	fp, sp, #4
   26a10:	sub	sp, sp, #48	; 0x30
   26a14:	str	r0, [fp, #-24]	; 0xffffffe8
   26a18:	str	r1, [fp, #-28]	; 0xffffffe4
   26a1c:	str	r2, [fp, #-32]	; 0xffffffe0
   26a20:	str	r3, [fp, #-36]	; 0xffffffdc
   26a24:	mov	r3, #0
   26a28:	str	r3, [fp, #-12]
   26a2c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   26a30:	lsr	r3, r3, #31
   26a34:	uxtb	r3, r3
   26a38:	cmp	r3, #0
   26a3c:	bne	26a54 <__assert_fail@plt+0x15510>
   26a40:	ldr	r3, [fp, #4]
   26a44:	lsr	r3, r3, #31
   26a48:	uxtb	r3, r3
   26a4c:	cmp	r3, #0
   26a50:	beq	26a5c <__assert_fail@plt+0x15518>
   26a54:	mov	r3, #1
   26a58:	b	26a60 <__assert_fail@plt+0x1551c>
   26a5c:	mov	r3, #0
   26a60:	cmp	r3, #0
   26a64:	bne	26a7c <__assert_fail@plt+0x15538>
   26a68:	ldr	r3, [fp, #20]
   26a6c:	lsr	r3, r3, #31
   26a70:	uxtb	r3, r3
   26a74:	cmp	r3, #0
   26a78:	beq	26a84 <__assert_fail@plt+0x15540>
   26a7c:	mov	r3, #1
   26a80:	b	26a88 <__assert_fail@plt+0x15544>
   26a84:	mov	r3, #0
   26a88:	cmp	r3, #0
   26a8c:	bne	26ac0 <__assert_fail@plt+0x1557c>
   26a90:	mov	r1, #0
   26a94:	ldr	r2, [fp, #-32]	; 0xffffffe0
   26a98:	ldr	r3, [fp, #4]
   26a9c:	adds	r3, r2, r3
   26aa0:	bvc	26aa8 <__assert_fail@plt+0x15564>
   26aa4:	mov	r1, #1
   26aa8:	str	r3, [fp, #-20]	; 0xffffffec
   26aac:	mov	r3, r1
   26ab0:	and	r3, r3, #1
   26ab4:	uxtb	r3, r3
   26ab8:	cmp	r3, #0
   26abc:	beq	26ac8 <__assert_fail@plt+0x15584>
   26ac0:	mvn	r3, #1
   26ac4:	b	26bac <__assert_fail@plt+0x15668>
   26ac8:	ldr	r3, [fp, #4]
   26acc:	cmp	r3, #0
   26ad0:	ble	26b60 <__assert_fail@plt+0x1561c>
   26ad4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   26ad8:	cmp	r3, #0
   26adc:	ble	26b54 <__assert_fail@plt+0x15610>
   26ae0:	ldr	r3, [fp, #-20]	; 0xffffffec
   26ae4:	mov	r0, r3
   26ae8:	bl	33ba0 <__assert_fail@plt+0x2265c>
   26aec:	mov	r3, r0
   26af0:	str	r3, [fp, #-12]
   26af4:	ldr	r3, [fp, #-12]
   26af8:	cmp	r3, #0
   26afc:	moveq	r3, #1
   26b00:	movne	r3, #0
   26b04:	uxtb	r3, r3
   26b08:	cmp	r3, #0
   26b0c:	beq	26b18 <__assert_fail@plt+0x155d4>
   26b10:	mvn	r3, #1
   26b14:	b	26bac <__assert_fail@plt+0x15668>
   26b18:	ldr	r3, [fp, #-32]	; 0xffffffe0
   26b1c:	mov	r2, r3
   26b20:	ldr	r1, [fp, #-28]	; 0xffffffe4
   26b24:	ldr	r0, [fp, #-12]
   26b28:	bl	11250 <memcpy@plt>
   26b2c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   26b30:	ldr	r2, [fp, #-12]
   26b34:	add	r3, r2, r3
   26b38:	ldr	r2, [fp, #4]
   26b3c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   26b40:	mov	r0, r3
   26b44:	bl	11250 <memcpy@plt>
   26b48:	ldr	r3, [fp, #-12]
   26b4c:	str	r3, [fp, #-8]
   26b50:	b	26b68 <__assert_fail@plt+0x15624>
   26b54:	ldr	r3, [fp, #-36]	; 0xffffffdc
   26b58:	str	r3, [fp, #-8]
   26b5c:	b	26b68 <__assert_fail@plt+0x15624>
   26b60:	ldr	r3, [fp, #-28]	; 0xffffffe4
   26b64:	str	r3, [fp, #-8]
   26b68:	ldr	r2, [fp, #-20]	; 0xffffffec
   26b6c:	ldrb	r3, [fp, #24]
   26b70:	str	r3, [sp, #12]
   26b74:	ldr	r3, [fp, #16]
   26b78:	str	r3, [sp, #8]
   26b7c:	ldr	r3, [fp, #20]
   26b80:	str	r3, [sp, #4]
   26b84:	ldr	r3, [fp, #12]
   26b88:	str	r3, [sp]
   26b8c:	ldr	r3, [fp, #8]
   26b90:	ldr	r1, [fp, #-8]
   26b94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   26b98:	bl	26bc0 <__assert_fail@plt+0x1567c>
   26b9c:	str	r0, [fp, #-16]
   26ba0:	ldr	r0, [fp, #-12]
   26ba4:	bl	151ec <__assert_fail@plt+0x3ca8>
   26ba8:	ldr	r3, [fp, #-16]
   26bac:	mov	r0, r3
   26bb0:	sub	sp, fp, #4
   26bb4:	ldr	fp, [sp]
   26bb8:	add	sp, sp, #4
   26bbc:	pop	{pc}		; (ldr pc, [sp], #4)
   26bc0:	str	fp, [sp, #-8]!
   26bc4:	str	lr, [sp, #4]
   26bc8:	add	fp, sp, #4
   26bcc:	sub	sp, sp, #72	; 0x48
   26bd0:	str	r0, [fp, #-40]	; 0xffffffd8
   26bd4:	str	r1, [fp, #-44]	; 0xffffffd4
   26bd8:	str	r2, [fp, #-48]	; 0xffffffd0
   26bdc:	str	r3, [fp, #-52]	; 0xffffffcc
   26be0:	mov	r3, #0
   26be4:	str	r3, [fp, #-20]	; 0xffffffec
   26be8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   26bec:	ldr	r3, [r3]
   26bf0:	str	r3, [fp, #-24]	; 0xffffffe8
   26bf4:	ldr	r2, [fp, #-52]	; 0xffffffcc
   26bf8:	ldr	r3, [fp, #4]
   26bfc:	add	r3, r2, r3
   26c00:	str	r3, [fp, #-16]
   26c04:	ldr	r3, [fp, #-52]	; 0xffffffcc
   26c08:	lsr	r3, r3, #31
   26c0c:	uxtb	r3, r3
   26c10:	cmp	r3, #0
   26c14:	bne	26c38 <__assert_fail@plt+0x156f4>
   26c18:	ldr	r2, [fp, #-52]	; 0xffffffcc
   26c1c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   26c20:	cmp	r2, r3
   26c24:	movgt	r3, #1
   26c28:	movle	r3, #0
   26c2c:	uxtb	r3, r3
   26c30:	cmp	r3, #0
   26c34:	beq	26c40 <__assert_fail@plt+0x156fc>
   26c38:	mvn	r3, #0
   26c3c:	b	2706c <__assert_fail@plt+0x15b28>
   26c40:	ldr	r2, [fp, #-48]	; 0xffffffd0
   26c44:	ldr	r3, [fp, #-16]
   26c48:	cmp	r2, r3
   26c4c:	movlt	r3, #1
   26c50:	movge	r3, #0
   26c54:	uxtb	r3, r3
   26c58:	cmp	r3, #0
   26c5c:	bne	26cac <__assert_fail@plt+0x15768>
   26c60:	ldr	r3, [fp, #4]
   26c64:	mvn	r3, r3
   26c68:	lsr	r3, r3, #31
   26c6c:	uxtb	r3, r3
   26c70:	cmp	r3, #0
   26c74:	beq	26ca0 <__assert_fail@plt+0x1575c>
   26c78:	ldr	r2, [fp, #-16]
   26c7c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   26c80:	cmp	r2, r3
   26c84:	movlt	r3, #1
   26c88:	movge	r3, #0
   26c8c:	uxtb	r3, r3
   26c90:	cmp	r3, #0
   26c94:	beq	26ca0 <__assert_fail@plt+0x1575c>
   26c98:	mov	r3, #1
   26c9c:	b	26ca4 <__assert_fail@plt+0x15760>
   26ca0:	mov	r3, #0
   26ca4:	cmp	r3, #0
   26ca8:	beq	26cb8 <__assert_fail@plt+0x15774>
   26cac:	ldr	r3, [fp, #-48]	; 0xffffffd0
   26cb0:	str	r3, [fp, #-16]
   26cb4:	b	26d1c <__assert_fail@plt+0x157d8>
   26cb8:	ldr	r3, [fp, #-16]
   26cbc:	lsr	r3, r3, #31
   26cc0:	uxtb	r3, r3
   26cc4:	cmp	r3, #0
   26cc8:	bne	26d14 <__assert_fail@plt+0x157d0>
   26ccc:	ldr	r3, [fp, #4]
   26cd0:	lsr	r3, r3, #31
   26cd4:	uxtb	r3, r3
   26cd8:	cmp	r3, #0
   26cdc:	beq	26d08 <__assert_fail@plt+0x157c4>
   26ce0:	ldr	r2, [fp, #-52]	; 0xffffffcc
   26ce4:	ldr	r3, [fp, #-16]
   26ce8:	cmp	r2, r3
   26cec:	movle	r3, #1
   26cf0:	movgt	r3, #0
   26cf4:	uxtb	r3, r3
   26cf8:	cmp	r3, #0
   26cfc:	beq	26d08 <__assert_fail@plt+0x157c4>
   26d00:	mov	r3, #1
   26d04:	b	26d0c <__assert_fail@plt+0x157c8>
   26d08:	mov	r3, #0
   26d0c:	cmp	r3, #0
   26d10:	beq	26d1c <__assert_fail@plt+0x157d8>
   26d14:	mov	r3, #0
   26d18:	str	r3, [fp, #-16]
   26d1c:	movw	r3, #0
   26d20:	movt	r3, #0
   26d24:	cmp	r3, #0
   26d28:	bne	26d3c <__assert_fail@plt+0x157f8>
   26d2c:	movw	r3, #0
   26d30:	movt	r3, #0
   26d34:	cmp	r3, #0
   26d38:	beq	26d50 <__assert_fail@plt+0x1580c>
   26d3c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   26d40:	add	r3, r3, #136	; 0x88
   26d44:	mov	r0, r3
   26d48:	bl	11238 <pthread_mutex_lock@plt>
   26d4c:	nop	{0}
   26d50:	ldr	r3, [fp, #-40]	; 0xffffffd8
   26d54:	ldrb	r3, [r3, #28]
   26d58:	lsr	r3, r3, #5
   26d5c:	uxtb	r3, r3
   26d60:	and	r3, r3, #1
   26d64:	ldr	r2, [fp, #-20]	; 0xffffffec
   26d68:	orr	r3, r2, r3
   26d6c:	str	r3, [fp, #-20]	; 0xffffffec
   26d70:	ldr	r3, [fp, #-40]	; 0xffffffd8
   26d74:	ldrb	r3, [r3, #28]
   26d78:	lsr	r3, r3, #5
   26d7c:	uxtb	r3, r3
   26d80:	and	r3, r3, #2
   26d84:	ldr	r2, [fp, #-20]	; 0xffffffec
   26d88:	orr	r3, r2, r3
   26d8c:	str	r3, [fp, #-20]	; 0xffffffec
   26d90:	ldr	r2, [fp, #-52]	; 0xffffffcc
   26d94:	ldr	r3, [fp, #-16]
   26d98:	cmp	r2, r3
   26d9c:	bge	26dd0 <__assert_fail@plt+0x1588c>
   26da0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   26da4:	ldr	r3, [r3, #16]
   26da8:	cmp	r3, #0
   26dac:	beq	26dd0 <__assert_fail@plt+0x1588c>
   26db0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   26db4:	ldrb	r3, [r3, #28]
   26db8:	and	r3, r3, #8
   26dbc:	uxtb	r3, r3
   26dc0:	cmp	r3, #0
   26dc4:	bne	26dd0 <__assert_fail@plt+0x1588c>
   26dc8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   26dcc:	bl	1d4ec <__assert_fail@plt+0xbfa8>
   26dd0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   26dd4:	ldrb	r3, [r3, #28]
   26dd8:	ubfx	r3, r3, #4, #1
   26ddc:	uxtb	r3, r3
   26de0:	cmp	r3, #0
   26de4:	beq	26df0 <__assert_fail@plt+0x158ac>
   26de8:	mov	r3, #0
   26dec:	str	r3, [fp, #12]
   26df0:	ldr	r3, [fp, #12]
   26df4:	cmp	r3, #0
   26df8:	bne	26e08 <__assert_fail@plt+0x158c4>
   26dfc:	mov	r3, #1
   26e00:	str	r3, [fp, #-8]
   26e04:	b	26ea4 <__assert_fail@plt+0x15960>
   26e08:	ldr	r3, [fp, #-40]	; 0xffffffd8
   26e0c:	ldrb	r3, [r3, #28]
   26e10:	and	r3, r3, #6
   26e14:	uxtb	r3, r3
   26e18:	cmp	r3, #4
   26e1c:	moveq	r3, #1
   26e20:	movne	r3, #0
   26e24:	uxtb	r3, r3
   26e28:	cmp	r3, #0
   26e2c:	beq	26e94 <__assert_fail@plt+0x15950>
   26e30:	ldr	r3, [fp, #12]
   26e34:	ldr	r2, [r3]
   26e38:	ldr	r3, [fp, #-40]	; 0xffffffd8
   26e3c:	ldr	r3, [r3, #24]
   26e40:	cmp	r2, r3
   26e44:	movls	r3, #1
   26e48:	movhi	r3, #0
   26e4c:	uxtb	r3, r3
   26e50:	cmp	r3, #0
   26e54:	beq	26e94 <__assert_fail@plt+0x15950>
   26e58:	ldr	r3, [fp, #12]
   26e5c:	ldr	r3, [r3]
   26e60:	str	r3, [fp, #-8]
   26e64:	ldr	r3, [fp, #-8]
   26e68:	cmp	r3, #0
   26e6c:	movle	r3, #1
   26e70:	movgt	r3, #0
   26e74:	uxtb	r3, r3
   26e78:	cmp	r3, #0
   26e7c:	beq	26ea4 <__assert_fail@plt+0x15960>
   26e80:	mov	r3, #0
   26e84:	str	r3, [fp, #12]
   26e88:	mov	r3, #1
   26e8c:	str	r3, [fp, #-8]
   26e90:	b	26ea4 <__assert_fail@plt+0x15960>
   26e94:	ldr	r3, [fp, #-40]	; 0xffffffd8
   26e98:	ldr	r3, [r3, #24]
   26e9c:	add	r3, r3, #1
   26ea0:	str	r3, [fp, #-8]
   26ea4:	ldr	r3, [fp, #-8]
   26ea8:	lsl	r3, r3, #3
   26eac:	mov	r0, r3
   26eb0:	bl	33ba0 <__assert_fail@plt+0x2265c>
   26eb4:	mov	r3, r0
   26eb8:	str	r3, [fp, #-28]	; 0xffffffe4
   26ebc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   26ec0:	cmp	r3, #0
   26ec4:	moveq	r3, #1
   26ec8:	movne	r3, #0
   26ecc:	uxtb	r3, r3
   26ed0:	cmp	r3, #0
   26ed4:	beq	26ee4 <__assert_fail@plt+0x159a0>
   26ed8:	mvn	r3, #1
   26edc:	str	r3, [fp, #-12]
   26ee0:	b	27034 <__assert_fail@plt+0x15af0>
   26ee4:	ldr	r3, [fp, #-8]
   26ee8:	ldr	r2, [fp, #-20]	; 0xffffffec
   26eec:	str	r2, [sp, #16]
   26ef0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   26ef4:	str	r2, [sp, #12]
   26ef8:	str	r3, [sp, #8]
   26efc:	ldr	r3, [fp, #8]
   26f00:	str	r3, [sp, #4]
   26f04:	ldr	r3, [fp, #-16]
   26f08:	str	r3, [sp]
   26f0c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   26f10:	ldr	r2, [fp, #-48]	; 0xffffffd0
   26f14:	ldr	r1, [fp, #-44]	; 0xffffffd4
   26f18:	ldr	r0, [fp, #-40]	; 0xffffffd8
   26f1c:	bl	27418 <__assert_fail@plt+0x15ed4>
   26f20:	str	r0, [fp, #-32]	; 0xffffffe0
   26f24:	mov	r3, #0
   26f28:	str	r3, [fp, #-12]
   26f2c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   26f30:	cmp	r3, #0
   26f34:	beq	26f58 <__assert_fail@plt+0x15a14>
   26f38:	ldr	r3, [fp, #-32]	; 0xffffffe0
   26f3c:	cmp	r3, #1
   26f40:	bne	26f4c <__assert_fail@plt+0x15a08>
   26f44:	mvn	r3, #0
   26f48:	b	26f50 <__assert_fail@plt+0x15a0c>
   26f4c:	mvn	r3, #1
   26f50:	str	r3, [fp, #-12]
   26f54:	b	26fd0 <__assert_fail@plt+0x15a8c>
   26f58:	ldr	r3, [fp, #12]
   26f5c:	cmp	r3, #0
   26f60:	beq	26fd0 <__assert_fail@plt+0x15a8c>
   26f64:	ldr	r3, [fp, #-40]	; 0xffffffd8
   26f68:	ldrb	r3, [r3, #28]
   26f6c:	ubfx	r3, r3, #1, #2
   26f70:	uxtb	r3, r3
   26f74:	ldr	r2, [fp, #-8]
   26f78:	ldr	r1, [fp, #-28]	; 0xffffffe4
   26f7c:	ldr	r0, [fp, #12]
   26f80:	bl	27080 <__assert_fail@plt+0x15b3c>
   26f84:	mov	r3, r0
   26f88:	and	r3, r3, #3
   26f8c:	uxtb	r1, r3
   26f90:	ldr	r2, [fp, #-40]	; 0xffffffd8
   26f94:	ldrb	r3, [r2, #28]
   26f98:	bfi	r3, r1, #1, #2
   26f9c:	strb	r3, [r2, #28]
   26fa0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   26fa4:	ldrb	r3, [r3, #28]
   26fa8:	and	r3, r3, #6
   26fac:	uxtb	r3, r3
   26fb0:	cmp	r3, #0
   26fb4:	moveq	r3, #1
   26fb8:	movne	r3, #0
   26fbc:	uxtb	r3, r3
   26fc0:	cmp	r3, #0
   26fc4:	beq	26fd0 <__assert_fail@plt+0x15a8c>
   26fc8:	mvn	r3, #1
   26fcc:	str	r3, [fp, #-12]
   26fd0:	ldr	r3, [fp, #-12]
   26fd4:	cmp	r3, #0
   26fd8:	moveq	r3, #1
   26fdc:	movne	r3, #0
   26fe0:	uxtb	r3, r3
   26fe4:	cmp	r3, #0
   26fe8:	beq	2702c <__assert_fail@plt+0x15ae8>
   26fec:	ldrb	r3, [fp, #16]
   26ff0:	cmp	r3, #0
   26ff4:	beq	27020 <__assert_fail@plt+0x15adc>
   26ff8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   26ffc:	ldr	r3, [r3]
   27000:	ldr	r2, [fp, #-52]	; 0xffffffcc
   27004:	cmp	r2, r3
   27008:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2700c:	ldr	r2, [r3, #4]
   27010:	ldr	r3, [fp, #-52]	; 0xffffffcc
   27014:	sub	r3, r2, r3
   27018:	str	r3, [fp, #-12]
   2701c:	b	2702c <__assert_fail@plt+0x15ae8>
   27020:	ldr	r3, [fp, #-28]	; 0xffffffe4
   27024:	ldr	r3, [r3]
   27028:	str	r3, [fp, #-12]
   2702c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   27030:	bl	151ec <__assert_fail@plt+0x3ca8>
   27034:	movw	r3, #0
   27038:	movt	r3, #0
   2703c:	cmp	r3, #0
   27040:	bne	27054 <__assert_fail@plt+0x15b10>
   27044:	movw	r3, #0
   27048:	movt	r3, #0
   2704c:	cmp	r3, #0
   27050:	beq	27068 <__assert_fail@plt+0x15b24>
   27054:	ldr	r3, [fp, #-24]	; 0xffffffe8
   27058:	add	r3, r3, #136	; 0x88
   2705c:	mov	r0, r3
   27060:	bl	11178 <pthread_mutex_unlock@plt>
   27064:	nop	{0}
   27068:	ldr	r3, [fp, #-12]
   2706c:	mov	r0, r3
   27070:	sub	sp, fp, #4
   27074:	ldr	fp, [sp]
   27078:	add	sp, sp, #4
   2707c:	pop	{pc}		; (ldr pc, [sp], #4)
   27080:	str	fp, [sp, #-8]!
   27084:	str	lr, [sp, #4]
   27088:	add	fp, sp, #4
   2708c:	sub	sp, sp, #40	; 0x28
   27090:	str	r0, [fp, #-32]	; 0xffffffe0
   27094:	str	r1, [fp, #-36]	; 0xffffffdc
   27098:	str	r2, [fp, #-40]	; 0xffffffd8
   2709c:	str	r3, [fp, #-44]	; 0xffffffd4
   270a0:	mov	r3, #1
   270a4:	str	r3, [fp, #-8]
   270a8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   270ac:	add	r3, r3, #1
   270b0:	str	r3, [fp, #-16]
   270b4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   270b8:	cmp	r3, #0
   270bc:	bne	27170 <__assert_fail@plt+0x15c2c>
   270c0:	ldr	r3, [fp, #-16]
   270c4:	lsl	r3, r3, #2
   270c8:	mov	r0, r3
   270cc:	bl	33ba0 <__assert_fail@plt+0x2265c>
   270d0:	mov	r3, r0
   270d4:	mov	r2, r3
   270d8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   270dc:	str	r2, [r3, #4]
   270e0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   270e4:	ldr	r3, [r3, #4]
   270e8:	cmp	r3, #0
   270ec:	moveq	r3, #1
   270f0:	movne	r3, #0
   270f4:	uxtb	r3, r3
   270f8:	cmp	r3, #0
   270fc:	beq	27108 <__assert_fail@plt+0x15bc4>
   27100:	mov	r3, #0
   27104:	b	27358 <__assert_fail@plt+0x15e14>
   27108:	ldr	r3, [fp, #-16]
   2710c:	lsl	r3, r3, #2
   27110:	mov	r0, r3
   27114:	bl	33ba0 <__assert_fail@plt+0x2265c>
   27118:	mov	r3, r0
   2711c:	mov	r2, r3
   27120:	ldr	r3, [fp, #-32]	; 0xffffffe0
   27124:	str	r2, [r3, #8]
   27128:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2712c:	ldr	r3, [r3, #8]
   27130:	cmp	r3, #0
   27134:	moveq	r3, #1
   27138:	movne	r3, #0
   2713c:	uxtb	r3, r3
   27140:	cmp	r3, #0
   27144:	beq	27160 <__assert_fail@plt+0x15c1c>
   27148:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2714c:	ldr	r3, [r3, #4]
   27150:	mov	r0, r3
   27154:	bl	151ec <__assert_fail@plt+0x3ca8>
   27158:	mov	r3, #0
   2715c:	b	27358 <__assert_fail@plt+0x15e14>
   27160:	ldr	r2, [fp, #-16]
   27164:	ldr	r3, [fp, #-32]	; 0xffffffe0
   27168:	str	r2, [r3]
   2716c:	b	27278 <__assert_fail@plt+0x15d34>
   27170:	ldr	r3, [fp, #-44]	; 0xffffffd4
   27174:	cmp	r3, #1
   27178:	bne	27258 <__assert_fail@plt+0x15d14>
   2717c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   27180:	ldr	r2, [r3]
   27184:	ldr	r3, [fp, #-16]
   27188:	cmp	r2, r3
   2718c:	movcc	r3, #1
   27190:	movcs	r3, #0
   27194:	uxtb	r3, r3
   27198:	cmp	r3, #0
   2719c:	beq	27278 <__assert_fail@plt+0x15d34>
   271a0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   271a4:	ldr	r2, [r3, #4]
   271a8:	ldr	r3, [fp, #-16]
   271ac:	lsl	r3, r3, #2
   271b0:	mov	r1, r3
   271b4:	mov	r0, r2
   271b8:	bl	33c30 <__assert_fail@plt+0x226ec>
   271bc:	str	r0, [fp, #-20]	; 0xffffffec
   271c0:	ldr	r3, [fp, #-20]	; 0xffffffec
   271c4:	cmp	r3, #0
   271c8:	moveq	r3, #1
   271cc:	movne	r3, #0
   271d0:	uxtb	r3, r3
   271d4:	cmp	r3, #0
   271d8:	beq	271e4 <__assert_fail@plt+0x15ca0>
   271dc:	mov	r3, #0
   271e0:	b	27358 <__assert_fail@plt+0x15e14>
   271e4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   271e8:	ldr	r2, [r3, #8]
   271ec:	ldr	r3, [fp, #-16]
   271f0:	lsl	r3, r3, #2
   271f4:	mov	r1, r3
   271f8:	mov	r0, r2
   271fc:	bl	33c30 <__assert_fail@plt+0x226ec>
   27200:	str	r0, [fp, #-24]	; 0xffffffe8
   27204:	ldr	r3, [fp, #-24]	; 0xffffffe8
   27208:	cmp	r3, #0
   2720c:	moveq	r3, #1
   27210:	movne	r3, #0
   27214:	uxtb	r3, r3
   27218:	cmp	r3, #0
   2721c:	beq	27230 <__assert_fail@plt+0x15cec>
   27220:	ldr	r0, [fp, #-20]	; 0xffffffec
   27224:	bl	151ec <__assert_fail@plt+0x3ca8>
   27228:	mov	r3, #0
   2722c:	b	27358 <__assert_fail@plt+0x15e14>
   27230:	ldr	r3, [fp, #-32]	; 0xffffffe0
   27234:	ldr	r2, [fp, #-20]	; 0xffffffec
   27238:	str	r2, [r3, #4]
   2723c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   27240:	ldr	r2, [fp, #-24]	; 0xffffffe8
   27244:	str	r2, [r3, #8]
   27248:	ldr	r2, [fp, #-16]
   2724c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   27250:	str	r2, [r3]
   27254:	b	27278 <__assert_fail@plt+0x15d34>
   27258:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2725c:	cmp	r3, #2
   27260:	ldr	r3, [fp, #-32]	; 0xffffffe0
   27264:	ldr	r2, [r3]
   27268:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2726c:	cmp	r2, r3
   27270:	mov	r3, #2
   27274:	str	r3, [fp, #-8]
   27278:	mov	r3, #0
   2727c:	str	r3, [fp, #-12]
   27280:	b	272e8 <__assert_fail@plt+0x15da4>
   27284:	ldr	r3, [fp, #-12]
   27288:	lsl	r3, r3, #3
   2728c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   27290:	add	r2, r2, r3
   27294:	ldr	r3, [fp, #-32]	; 0xffffffe0
   27298:	ldr	r1, [r3, #4]
   2729c:	ldr	r3, [fp, #-12]
   272a0:	lsl	r3, r3, #2
   272a4:	add	r3, r1, r3
   272a8:	ldr	r2, [r2]
   272ac:	str	r2, [r3]
   272b0:	ldr	r3, [fp, #-12]
   272b4:	lsl	r3, r3, #3
   272b8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   272bc:	add	r2, r2, r3
   272c0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   272c4:	ldr	r1, [r3, #8]
   272c8:	ldr	r3, [fp, #-12]
   272cc:	lsl	r3, r3, #2
   272d0:	add	r3, r1, r3
   272d4:	ldr	r2, [r2, #4]
   272d8:	str	r2, [r3]
   272dc:	ldr	r3, [fp, #-12]
   272e0:	add	r3, r3, #1
   272e4:	str	r3, [fp, #-12]
   272e8:	ldr	r2, [fp, #-12]
   272ec:	ldr	r3, [fp, #-40]	; 0xffffffd8
   272f0:	cmp	r2, r3
   272f4:	blt	27284 <__assert_fail@plt+0x15d40>
   272f8:	b	27340 <__assert_fail@plt+0x15dfc>
   272fc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   27300:	ldr	r2, [r3, #8]
   27304:	ldr	r3, [fp, #-12]
   27308:	lsl	r3, r3, #2
   2730c:	add	r3, r2, r3
   27310:	mvn	r2, #0
   27314:	str	r2, [r3]
   27318:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2731c:	ldr	r1, [r2, #4]
   27320:	ldr	r2, [fp, #-12]
   27324:	lsl	r2, r2, #2
   27328:	add	r2, r1, r2
   2732c:	ldr	r3, [r3]
   27330:	str	r3, [r2]
   27334:	ldr	r3, [fp, #-12]
   27338:	add	r3, r3, #1
   2733c:	str	r3, [fp, #-12]
   27340:	ldr	r3, [fp, #-32]	; 0xffffffe0
   27344:	ldr	r2, [r3]
   27348:	ldr	r3, [fp, #-12]
   2734c:	cmp	r2, r3
   27350:	bhi	272fc <__assert_fail@plt+0x15db8>
   27354:	ldr	r3, [fp, #-8]
   27358:	mov	r0, r3
   2735c:	sub	sp, fp, #4
   27360:	ldr	fp, [sp]
   27364:	add	sp, sp, #4
   27368:	pop	{pc}		; (ldr pc, [sp], #4)
   2736c:	push	{fp}		; (str fp, [sp, #-4]!)
   27370:	add	fp, sp, #0
   27374:	sub	sp, sp, #20
   27378:	str	r0, [fp, #-8]
   2737c:	str	r1, [fp, #-12]
   27380:	str	r2, [fp, #-16]
   27384:	str	r3, [fp, #-20]	; 0xffffffec
   27388:	ldr	r3, [fp, #-16]
   2738c:	cmp	r3, #0
   27390:	beq	273d0 <__assert_fail@plt+0x15e8c>
   27394:	ldr	r2, [fp, #-8]
   27398:	ldrb	r3, [r2, #28]
   2739c:	mov	r1, #1
   273a0:	bfi	r3, r1, #1, #2
   273a4:	strb	r3, [r2, #28]
   273a8:	ldr	r3, [fp, #-12]
   273ac:	ldr	r2, [fp, #-16]
   273b0:	str	r2, [r3]
   273b4:	ldr	r3, [fp, #-12]
   273b8:	ldr	r2, [fp, #-20]	; 0xffffffec
   273bc:	str	r2, [r3, #4]
   273c0:	ldr	r3, [fp, #-12]
   273c4:	ldr	r2, [fp, #4]
   273c8:	str	r2, [r3, #8]
   273cc:	b	27408 <__assert_fail@plt+0x15ec4>
   273d0:	ldr	r2, [fp, #-8]
   273d4:	ldrb	r3, [r2, #28]
   273d8:	bfc	r3, #1, #2
   273dc:	strb	r3, [r2, #28]
   273e0:	ldr	r3, [fp, #-12]
   273e4:	mov	r2, #0
   273e8:	str	r2, [r3]
   273ec:	ldr	r3, [fp, #-12]
   273f0:	mov	r2, #0
   273f4:	str	r2, [r3, #8]
   273f8:	ldr	r3, [fp, #-12]
   273fc:	ldr	r2, [r3, #8]
   27400:	ldr	r3, [fp, #-12]
   27404:	str	r2, [r3, #4]
   27408:	nop	{0}
   2740c:	add	sp, fp, #0
   27410:	pop	{fp}		; (ldr fp, [sp], #4)
   27414:	bx	lr
   27418:	str	fp, [sp, #-8]!
   2741c:	str	lr, [sp, #4]
   27420:	add	fp, sp, #4
   27424:	sub	sp, sp, #240	; 0xf0
   27428:	str	r0, [fp, #-216]	; 0xffffff28
   2742c:	str	r1, [fp, #-220]	; 0xffffff24
   27430:	str	r2, [fp, #-224]	; 0xffffff20
   27434:	str	r3, [fp, #-228]	; 0xffffff1c
   27438:	ldr	r3, [fp, #-216]	; 0xffffff28
   2743c:	ldr	r3, [r3]
   27440:	str	r3, [fp, #-20]	; 0xffffffec
   27444:	mvn	r3, #0
   27448:	str	r3, [fp, #-24]	; 0xffffffe8
   2744c:	sub	r3, fp, #208	; 0xd0
   27450:	mov	r2, #136	; 0x88
   27454:	mov	r1, #0
   27458:	mov	r0, r3
   2745c:	bl	11448 <memset@plt>
   27460:	ldr	r3, [fp, #-20]	; 0xffffffec
   27464:	str	r3, [fp, #-124]	; 0xffffff84
   27468:	ldr	r3, [fp, #-216]	; 0xffffff28
   2746c:	ldr	r3, [r3, #16]
   27470:	cmp	r3, #0
   27474:	beq	274c4 <__assert_fail@plt+0x15f80>
   27478:	ldr	r3, [fp, #-216]	; 0xffffff28
   2747c:	ldrb	r3, [r3, #28]
   27480:	and	r3, r3, #8
   27484:	uxtb	r3, r3
   27488:	cmp	r3, #0
   2748c:	beq	274c4 <__assert_fail@plt+0x15f80>
   27490:	ldr	r2, [fp, #-228]	; 0xffffff1c
   27494:	ldr	r3, [fp, #4]
   27498:	cmp	r2, r3
   2749c:	beq	274c4 <__assert_fail@plt+0x15f80>
   274a0:	ldr	r3, [fp, #-216]	; 0xffffff28
   274a4:	ldrb	r3, [r3, #28]
   274a8:	and	r3, r3, #1
   274ac:	uxtb	r3, r3
   274b0:	cmp	r3, #0
   274b4:	bne	274c4 <__assert_fail@plt+0x15f80>
   274b8:	ldr	r3, [fp, #-216]	; 0xffffff28
   274bc:	ldr	r3, [r3, #16]
   274c0:	b	274c8 <__assert_fail@plt+0x15f84>
   274c4:	mov	r3, #0
   274c8:	str	r3, [fp, #-28]	; 0xffffffe4
   274cc:	ldr	r3, [fp, #-216]	; 0xffffff28
   274d0:	ldr	r3, [r3, #20]
   274d4:	str	r3, [fp, #-32]	; 0xffffffe0
   274d8:	ldr	r3, [fp, #-216]	; 0xffffff28
   274dc:	ldr	r3, [r3, #24]
   274e0:	ldr	r2, [fp, #12]
   274e4:	cmp	r2, r3
   274e8:	bls	27504 <__assert_fail@plt+0x15fc0>
   274ec:	ldr	r3, [fp, #-216]	; 0xffffff28
   274f0:	ldr	r3, [r3, #24]
   274f4:	ldr	r2, [fp, #12]
   274f8:	sub	r3, r2, r3
   274fc:	sub	r3, r3, #1
   27500:	b	27508 <__assert_fail@plt+0x15fc4>
   27504:	mov	r3, #0
   27508:	str	r3, [fp, #-36]	; 0xffffffdc
   2750c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   27510:	ldr	r2, [fp, #12]
   27514:	sub	r3, r2, r3
   27518:	str	r3, [fp, #12]
   2751c:	ldr	r3, [fp, #-216]	; 0xffffff28
   27520:	ldr	r3, [r3, #8]
   27524:	cmp	r3, #0
   27528:	moveq	r3, #1
   2752c:	movne	r3, #0
   27530:	uxtb	r3, r3
   27534:	cmp	r3, #0
   27538:	bne	2755c <__assert_fail@plt+0x16018>
   2753c:	ldr	r3, [fp, #-20]	; 0xffffffec
   27540:	ldr	r3, [r3, #36]	; 0x24
   27544:	cmp	r3, #0
   27548:	moveq	r3, #1
   2754c:	movne	r3, #0
   27550:	uxtb	r3, r3
   27554:	cmp	r3, #0
   27558:	beq	27564 <__assert_fail@plt+0x16020>
   2755c:	mov	r3, #1
   27560:	b	27568 <__assert_fail@plt+0x16024>
   27564:	mov	r3, #0
   27568:	cmp	r3, #0
   2756c:	bne	27590 <__assert_fail@plt+0x1604c>
   27570:	ldr	r3, [fp, #-20]	; 0xffffffec
   27574:	ldr	r3, [r3, #40]	; 0x28
   27578:	cmp	r3, #0
   2757c:	moveq	r3, #1
   27580:	movne	r3, #0
   27584:	uxtb	r3, r3
   27588:	cmp	r3, #0
   2758c:	beq	27598 <__assert_fail@plt+0x16054>
   27590:	mov	r3, #1
   27594:	b	2759c <__assert_fail@plt+0x16058>
   27598:	mov	r3, #0
   2759c:	cmp	r3, #0
   275a0:	bne	275c4 <__assert_fail@plt+0x16080>
   275a4:	ldr	r3, [fp, #-20]	; 0xffffffec
   275a8:	ldr	r3, [r3, #44]	; 0x2c
   275ac:	cmp	r3, #0
   275b0:	moveq	r3, #1
   275b4:	movne	r3, #0
   275b8:	uxtb	r3, r3
   275bc:	cmp	r3, #0
   275c0:	beq	275cc <__assert_fail@plt+0x16088>
   275c4:	mov	r3, #1
   275c8:	b	275d0 <__assert_fail@plt+0x1608c>
   275cc:	mov	r3, #0
   275d0:	cmp	r3, #0
   275d4:	bne	275f8 <__assert_fail@plt+0x160b4>
   275d8:	ldr	r3, [fp, #-20]	; 0xffffffec
   275dc:	ldr	r3, [r3, #48]	; 0x30
   275e0:	cmp	r3, #0
   275e4:	moveq	r3, #1
   275e8:	movne	r3, #0
   275ec:	uxtb	r3, r3
   275f0:	cmp	r3, #0
   275f4:	beq	27600 <__assert_fail@plt+0x160bc>
   275f8:	mov	r3, #1
   275fc:	b	28340 <__assert_fail@plt+0x16dfc>
   27600:	ldr	r3, [fp, #4]
   27604:	cmp	r3, #0
   27608:	blt	2761c <__assert_fail@plt+0x160d8>
   2760c:	ldr	r2, [fp, #4]
   27610:	ldr	r3, [fp, #-224]	; 0xffffff20
   27614:	cmp	r2, r3
   27618:	ble	2761c <__assert_fail@plt+0x160d8>
   2761c:	ldr	r3, [fp, #-20]	; 0xffffffec
   27620:	ldr	r3, [r3, #36]	; 0x24
   27624:	ldr	r3, [r3, #8]
   27628:	cmp	r3, #0
   2762c:	bne	276a0 <__assert_fail@plt+0x1615c>
   27630:	ldr	r3, [fp, #-20]	; 0xffffffec
   27634:	ldr	r3, [r3, #40]	; 0x28
   27638:	ldr	r3, [r3, #8]
   2763c:	cmp	r3, #0
   27640:	bne	276a0 <__assert_fail@plt+0x1615c>
   27644:	ldr	r3, [fp, #-20]	; 0xffffffec
   27648:	ldr	r3, [r3, #44]	; 0x2c
   2764c:	ldr	r3, [r3, #8]
   27650:	cmp	r3, #0
   27654:	beq	27670 <__assert_fail@plt+0x1612c>
   27658:	ldr	r3, [fp, #-216]	; 0xffffff28
   2765c:	ldrb	r3, [r3, #28]
   27660:	bic	r3, r3, #127	; 0x7f
   27664:	uxtb	r3, r3
   27668:	cmp	r3, #0
   2766c:	bne	276a0 <__assert_fail@plt+0x1615c>
   27670:	ldr	r3, [fp, #-228]	; 0xffffff1c
   27674:	cmp	r3, #0
   27678:	beq	27690 <__assert_fail@plt+0x1614c>
   2767c:	ldr	r3, [fp, #4]
   27680:	cmp	r3, #0
   27684:	beq	27690 <__assert_fail@plt+0x1614c>
   27688:	mov	r3, #1
   2768c:	b	28340 <__assert_fail@plt+0x16dfc>
   27690:	mov	r3, #0
   27694:	str	r3, [fp, #4]
   27698:	ldr	r3, [fp, #4]
   2769c:	str	r3, [fp, #-228]	; 0xffffff1c
   276a0:	ldr	r3, [fp, #12]
   276a4:	cmp	r3, #0
   276a8:	bne	276bc <__assert_fail@plt+0x16178>
   276ac:	ldr	r3, [fp, #-20]	; 0xffffffec
   276b0:	ldr	r3, [r3, #76]	; 0x4c
   276b4:	cmp	r3, #0
   276b8:	beq	276c4 <__assert_fail@plt+0x16180>
   276bc:	mov	r3, #1
   276c0:	b	276c8 <__assert_fail@plt+0x16184>
   276c4:	mov	r3, #0
   276c8:	strb	r3, [fp, #-37]	; 0xffffffdb
   276cc:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   276d0:	and	r3, r3, #1
   276d4:	strb	r3, [fp, #-37]	; 0xffffffdb
   276d8:	ldr	r3, [fp, #-20]	; 0xffffffec
   276dc:	ldr	r3, [r3, #8]
   276e0:	add	r3, r3, #1
   276e4:	mov	ip, r3
   276e8:	ldr	r3, [fp, #-216]	; 0xffffff28
   276ec:	ldr	r3, [r3, #20]
   276f0:	ldr	r2, [fp, #-216]	; 0xffffff28
   276f4:	ldr	r2, [r2, #12]
   276f8:	and	r2, r2, #4194304	; 0x400000
   276fc:	cmp	r2, #0
   27700:	movne	r2, #1
   27704:	moveq	r2, #0
   27708:	uxtb	r2, r2
   2770c:	sub	r0, fp, #208	; 0xd0
   27710:	ldr	r1, [fp, #-20]	; 0xffffffec
   27714:	str	r1, [sp, #8]
   27718:	str	r2, [sp, #4]
   2771c:	str	r3, [sp]
   27720:	mov	r3, ip
   27724:	ldr	r2, [fp, #-224]	; 0xffffff20
   27728:	ldr	r1, [fp, #-220]	; 0xffffff24
   2772c:	bl	18340 <__assert_fail@plt+0x6dfc>
   27730:	str	r0, [fp, #-8]
   27734:	ldr	r3, [fp, #-8]
   27738:	cmp	r3, #0
   2773c:	movne	r3, #1
   27740:	moveq	r3, #0
   27744:	uxtb	r3, r3
   27748:	cmp	r3, #0
   2774c:	bne	282cc <__assert_fail@plt+0x16d88>
   27750:	ldr	r3, [fp, #8]
   27754:	str	r3, [fp, #-152]	; 0xffffff68
   27758:	ldr	r3, [fp, #8]
   2775c:	str	r3, [fp, #-156]	; 0xffffff64
   27760:	ldr	r3, [fp, #-216]	; 0xffffff28
   27764:	ldrb	r3, [r3, #28]
   27768:	ubfx	r3, r3, #7, #1
   2776c:	uxtb	r3, r3
   27770:	strb	r3, [fp, #-131]	; 0xffffff7d
   27774:	ldr	r3, [fp, #-20]	; 0xffffffec
   27778:	ldr	r3, [r3, #76]	; 0x4c
   2777c:	lsl	r2, r3, #1
   27780:	sub	r3, fp, #208	; 0xd0
   27784:	ldr	r1, [fp, #20]
   27788:	mov	r0, r3
   2778c:	bl	30b7c <__assert_fail@plt+0x1f638>
   27790:	str	r0, [fp, #-8]
   27794:	ldr	r3, [fp, #-8]
   27798:	cmp	r3, #0
   2779c:	movne	r3, #1
   277a0:	moveq	r3, #0
   277a4:	uxtb	r3, r3
   277a8:	cmp	r3, #0
   277ac:	bne	282d4 <__assert_fail@plt+0x16d90>
   277b0:	ldr	r3, [fp, #12]
   277b4:	cmp	r3, #1
   277b8:	bhi	277d4 <__assert_fail@plt+0x16290>
   277bc:	ldr	r3, [fp, #-20]	; 0xffffffec
   277c0:	ldrb	r3, [r3, #88]	; 0x58
   277c4:	and	r3, r3, #2
   277c8:	uxtb	r3, r3
   277cc:	cmp	r3, #0
   277d0:	beq	27840 <__assert_fail@plt+0x162fc>
   277d4:	ldr	r3, [fp, #-172]	; 0xffffff54
   277d8:	cmn	r3, #-1073741822	; 0xc0000002
   277dc:	movhi	r3, #1
   277e0:	movls	r3, #0
   277e4:	uxtb	r3, r3
   277e8:	cmp	r3, #0
   277ec:	beq	277fc <__assert_fail@plt+0x162b8>
   277f0:	mov	r3, #12
   277f4:	str	r3, [fp, #-8]
   277f8:	b	28308 <__assert_fail@plt+0x16dc4>
   277fc:	ldr	r3, [fp, #-172]	; 0xffffff54
   27800:	add	r3, r3, #1
   27804:	lsl	r3, r3, #2
   27808:	mov	r0, r3
   2780c:	bl	33ba0 <__assert_fail@plt+0x2265c>
   27810:	mov	r3, r0
   27814:	str	r3, [fp, #-108]	; 0xffffff94
   27818:	ldr	r3, [fp, #-108]	; 0xffffff94
   2781c:	cmp	r3, #0
   27820:	moveq	r3, #1
   27824:	movne	r3, #0
   27828:	uxtb	r3, r3
   2782c:	cmp	r3, #0
   27830:	beq	27840 <__assert_fail@plt+0x162fc>
   27834:	mov	r3, #12
   27838:	str	r3, [fp, #-8]
   2783c:	b	28308 <__assert_fail@plt+0x16dc4>
   27840:	ldr	r3, [fp, #-228]	; 0xffffff1c
   27844:	str	r3, [fp, #-72]	; 0xffffffb8
   27848:	ldr	r3, [fp, #20]
   2784c:	and	r3, r3, #1
   27850:	cmp	r3, #0
   27854:	beq	27860 <__assert_fail@plt+0x1631c>
   27858:	mov	r3, #4
   2785c:	b	27864 <__assert_fail@plt+0x16320>
   27860:	mov	r3, #6
   27864:	str	r3, [fp, #-148]	; 0xffffff6c
   27868:	ldr	r2, [fp, #4]
   2786c:	ldr	r3, [fp, #-228]	; 0xffffff1c
   27870:	cmp	r2, r3
   27874:	bge	27880 <__assert_fail@plt+0x1633c>
   27878:	mvn	r3, #0
   2787c:	b	27884 <__assert_fail@plt+0x16340>
   27880:	mov	r3, #1
   27884:	str	r3, [fp, #-44]	; 0xffffffd4
   27888:	ldr	r2, [fp, #-228]	; 0xffffff1c
   2788c:	ldr	r3, [fp, #4]
   27890:	cmp	r2, r3
   27894:	movlt	r3, r2
   27898:	movge	r3, r3
   2789c:	str	r3, [fp, #-48]	; 0xffffffd0
   278a0:	ldr	r2, [fp, #4]
   278a4:	ldr	r3, [fp, #-228]	; 0xffffff1c
   278a8:	cmp	r2, r3
   278ac:	movge	r3, r2
   278b0:	movlt	r3, r3
   278b4:	str	r3, [fp, #-52]	; 0xffffffcc
   278b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   278bc:	ldr	r3, [r3, #92]	; 0x5c
   278c0:	cmp	r3, #1
   278c4:	moveq	r3, #1
   278c8:	movne	r3, #0
   278cc:	strb	r3, [fp, #-53]	; 0xffffffcb
   278d0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   278d4:	cmp	r3, #0
   278d8:	beq	27950 <__assert_fail@plt+0x1640c>
   278dc:	ldrb	r3, [fp, #-53]	; 0xffffffcb
   278e0:	cmp	r3, #0
   278e4:	bne	27908 <__assert_fail@plt+0x163c4>
   278e8:	ldr	r3, [fp, #-216]	; 0xffffff28
   278ec:	ldr	r3, [r3, #12]
   278f0:	and	r3, r3, #4194304	; 0x400000
   278f4:	cmp	r3, #0
   278f8:	bne	27910 <__assert_fail@plt+0x163cc>
   278fc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   27900:	cmp	r3, #0
   27904:	bne	27910 <__assert_fail@plt+0x163cc>
   27908:	mov	r2, #4
   2790c:	b	27914 <__assert_fail@plt+0x163d0>
   27910:	mov	r2, #0
   27914:	ldr	r1, [fp, #-228]	; 0xffffff1c
   27918:	ldr	r3, [fp, #4]
   2791c:	cmp	r1, r3
   27920:	bgt	2792c <__assert_fail@plt+0x163e8>
   27924:	mov	r3, #2
   27928:	b	27930 <__assert_fail@plt+0x163ec>
   2792c:	mov	r3, #0
   27930:	orr	r3, r2, r3
   27934:	ldr	r2, [fp, #-32]	; 0xffffffe0
   27938:	cmp	r2, #0
   2793c:	movne	r2, #1
   27940:	moveq	r2, #0
   27944:	uxtb	r2, r2
   27948:	orr	r3, r3, r2
   2794c:	b	27954 <__assert_fail@plt+0x16410>
   27950:	mov	r3, #8
   27954:	str	r3, [fp, #-60]	; 0xffffffc4
   27958:	mov	r3, #1
   2795c:	str	r3, [fp, #-8]
   27960:	ldr	r3, [fp, #-72]	; 0xffffffb8
   27964:	ldr	r2, [fp, #-48]	; 0xffffffd0
   27968:	cmp	r2, r3
   2796c:	bgt	282dc <__assert_fail@plt+0x16d98>
   27970:	ldr	r3, [fp, #-72]	; 0xffffffb8
   27974:	ldr	r2, [fp, #-52]	; 0xffffffcc
   27978:	cmp	r2, r3
   2797c:	blt	282dc <__assert_fail@plt+0x16d98>
   27980:	ldr	r3, [fp, #-60]	; 0xffffffc4
   27984:	sub	r3, r3, #4
   27988:	cmp	r3, #4
   2798c:	ldrls	pc, [pc, r3, lsl #2]
   27990:	b	27ba8 <__assert_fail@plt+0x16664>
   27994:	andeq	r7, r2, ip, ror fp
   27998:	andeq	r7, r2, ip, ror fp
   2799c:	andeq	r7, r2, r0, lsr #20
   279a0:			; <UNDEFINED> instruction: 0x000279b4
   279a4:			; <UNDEFINED> instruction: 0x00027cb4
   279a8:	ldr	r3, [fp, #-72]	; 0xffffffb8
   279ac:	add	r3, r3, #1
   279b0:	str	r3, [fp, #-72]	; 0xffffffb8
   279b4:	ldr	r3, [fp, #-72]	; 0xffffffb8
   279b8:	ldr	r2, [fp, #-52]	; 0xffffffcc
   279bc:	cmp	r2, r3
   279c0:	movgt	r3, #1
   279c4:	movle	r3, #0
   279c8:	uxtb	r3, r3
   279cc:	cmp	r3, #0
   279d0:	beq	27a70 <__assert_fail@plt+0x1652c>
   279d4:	ldr	r3, [fp, #-72]	; 0xffffffb8
   279d8:	mov	r2, r3
   279dc:	ldr	r3, [fp, #-220]	; 0xffffff24
   279e0:	add	r3, r3, r2
   279e4:	ldrb	r3, [r3]
   279e8:	mov	r2, r3
   279ec:	ldr	r3, [fp, #-32]	; 0xffffffe0
   279f0:	add	r3, r3, r2
   279f4:	ldrb	r3, [r3]
   279f8:	mov	r2, r3
   279fc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   27a00:	add	r3, r3, r2
   27a04:	ldrb	r3, [r3]
   27a08:	cmp	r3, #0
   27a0c:	beq	279a8 <__assert_fail@plt+0x16464>
   27a10:	b	27a70 <__assert_fail@plt+0x1652c>
   27a14:	ldr	r3, [fp, #-72]	; 0xffffffb8
   27a18:	add	r3, r3, #1
   27a1c:	str	r3, [fp, #-72]	; 0xffffffb8
   27a20:	ldr	r3, [fp, #-72]	; 0xffffffb8
   27a24:	ldr	r2, [fp, #-52]	; 0xffffffcc
   27a28:	cmp	r2, r3
   27a2c:	movgt	r3, #1
   27a30:	movle	r3, #0
   27a34:	uxtb	r3, r3
   27a38:	cmp	r3, #0
   27a3c:	beq	27a78 <__assert_fail@plt+0x16534>
   27a40:	ldr	r3, [fp, #-72]	; 0xffffffb8
   27a44:	mov	r2, r3
   27a48:	ldr	r3, [fp, #-220]	; 0xffffff24
   27a4c:	add	r3, r3, r2
   27a50:	ldrb	r3, [r3]
   27a54:	mov	r2, r3
   27a58:	ldr	r3, [fp, #-28]	; 0xffffffe4
   27a5c:	add	r3, r3, r2
   27a60:	ldrb	r3, [r3]
   27a64:	cmp	r3, #0
   27a68:	beq	27a14 <__assert_fail@plt+0x164d0>
   27a6c:	b	27a78 <__assert_fail@plt+0x16534>
   27a70:	nop	{0}
   27a74:	b	27a7c <__assert_fail@plt+0x16538>
   27a78:	nop	{0}
   27a7c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   27a80:	ldr	r2, [fp, #-52]	; 0xffffffcc
   27a84:	cmp	r2, r3
   27a88:	moveq	r3, #1
   27a8c:	movne	r3, #0
   27a90:	uxtb	r3, r3
   27a94:	cmp	r3, #0
   27a98:	beq	27cbc <__assert_fail@plt+0x16778>
   27a9c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   27aa0:	ldr	r2, [fp, #-224]	; 0xffffff20
   27aa4:	cmp	r2, r3
   27aa8:	ble	27ac4 <__assert_fail@plt+0x16580>
   27aac:	ldr	r3, [fp, #-72]	; 0xffffffb8
   27ab0:	mov	r2, r3
   27ab4:	ldr	r3, [fp, #-220]	; 0xffffff24
   27ab8:	add	r3, r3, r2
   27abc:	ldrb	r3, [r3]
   27ac0:	b	27ac8 <__assert_fail@plt+0x16584>
   27ac4:	mov	r3, #0
   27ac8:	str	r3, [fp, #-64]	; 0xffffffc0
   27acc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   27ad0:	cmp	r3, #0
   27ad4:	beq	27aec <__assert_fail@plt+0x165a8>
   27ad8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   27adc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   27ae0:	add	r3, r2, r3
   27ae4:	ldrb	r3, [r3]
   27ae8:	b	27af0 <__assert_fail@plt+0x165ac>
   27aec:	ldr	r3, [fp, #-64]	; 0xffffffc0
   27af0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   27af4:	add	r3, r2, r3
   27af8:	ldrb	r3, [r3]
   27afc:	cmp	r3, #0
   27b00:	bne	27cbc <__assert_fail@plt+0x16778>
   27b04:	b	28308 <__assert_fail@plt+0x16dc4>
   27b08:	ldr	r3, [fp, #-72]	; 0xffffffb8
   27b0c:	ldr	r2, [fp, #-224]	; 0xffffff20
   27b10:	cmp	r2, r3
   27b14:	ble	27b30 <__assert_fail@plt+0x165ec>
   27b18:	ldr	r3, [fp, #-72]	; 0xffffffb8
   27b1c:	mov	r2, r3
   27b20:	ldr	r3, [fp, #-220]	; 0xffffff24
   27b24:	add	r3, r3, r2
   27b28:	ldrb	r3, [r3]
   27b2c:	b	27b34 <__assert_fail@plt+0x165f0>
   27b30:	mov	r3, #0
   27b34:	str	r3, [fp, #-64]	; 0xffffffc0
   27b38:	ldr	r3, [fp, #-32]	; 0xffffffe0
   27b3c:	cmp	r3, #0
   27b40:	beq	27b58 <__assert_fail@plt+0x16614>
   27b44:	ldr	r3, [fp, #-64]	; 0xffffffc0
   27b48:	ldr	r2, [fp, #-32]	; 0xffffffe0
   27b4c:	add	r3, r2, r3
   27b50:	ldrb	r3, [r3]
   27b54:	b	27b5c <__assert_fail@plt+0x16618>
   27b58:	ldr	r3, [fp, #-64]	; 0xffffffc0
   27b5c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   27b60:	add	r3, r2, r3
   27b64:	ldrb	r3, [r3]
   27b68:	cmp	r3, #0
   27b6c:	bne	27b90 <__assert_fail@plt+0x1664c>
   27b70:	ldr	r3, [fp, #-72]	; 0xffffffb8
   27b74:	sub	r3, r3, #1
   27b78:	str	r3, [fp, #-72]	; 0xffffffb8
   27b7c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   27b80:	ldr	r2, [fp, #-48]	; 0xffffffd0
   27b84:	cmp	r2, r3
   27b88:	ble	27b08 <__assert_fail@plt+0x165c4>
   27b8c:	b	27b94 <__assert_fail@plt+0x16650>
   27b90:	nop	{0}
   27b94:	ldr	r3, [fp, #-72]	; 0xffffffb8
   27b98:	ldr	r2, [fp, #-48]	; 0xffffffd0
   27b9c:	cmp	r2, r3
   27ba0:	ble	27cc4 <__assert_fail@plt+0x16780>
   27ba4:	b	28308 <__assert_fail@plt+0x16dc4>
   27ba8:	ldr	r2, [fp, #-72]	; 0xffffffb8
   27bac:	ldr	r3, [fp, #-184]	; 0xffffff48
   27bb0:	sub	r3, r2, r3
   27bb4:	str	r3, [fp, #-12]
   27bb8:	ldr	r3, [fp, #-176]	; 0xffffff50
   27bbc:	mov	r2, r3
   27bc0:	ldr	r3, [fp, #-12]
   27bc4:	cmp	r3, r2
   27bc8:	movcs	r3, #1
   27bcc:	movcc	r3, #0
   27bd0:	uxtb	r3, r3
   27bd4:	cmp	r3, #0
   27bd8:	beq	27c20 <__assert_fail@plt+0x166dc>
   27bdc:	ldr	r1, [fp, #-72]	; 0xffffffb8
   27be0:	sub	r3, fp, #208	; 0xd0
   27be4:	ldr	r2, [fp, #20]
   27be8:	mov	r0, r3
   27bec:	bl	19bac <__assert_fail@plt+0x8668>
   27bf0:	str	r0, [fp, #-8]
   27bf4:	ldr	r3, [fp, #-8]
   27bf8:	cmp	r3, #0
   27bfc:	movne	r3, #1
   27c00:	moveq	r3, #0
   27c04:	uxtb	r3, r3
   27c08:	cmp	r3, #0
   27c0c:	bne	282e4 <__assert_fail@plt+0x16da0>
   27c10:	ldr	r2, [fp, #-72]	; 0xffffffb8
   27c14:	ldr	r3, [fp, #-184]	; 0xffffff48
   27c18:	sub	r3, r2, r3
   27c1c:	str	r3, [fp, #-12]
   27c20:	ldr	r3, [fp, #-180]	; 0xffffff4c
   27c24:	mov	r2, r3
   27c28:	ldr	r3, [fp, #-12]
   27c2c:	cmp	r3, r2
   27c30:	bcs	27c48 <__assert_fail@plt+0x16704>
   27c34:	ldr	r2, [fp, #-204]	; 0xffffff34
   27c38:	ldr	r3, [fp, #-12]
   27c3c:	add	r3, r2, r3
   27c40:	ldrb	r3, [r3]
   27c44:	b	27c4c <__assert_fail@plt+0x16708>
   27c48:	mov	r3, #0
   27c4c:	str	r3, [fp, #-64]	; 0xffffffc0
   27c50:	ldr	r3, [fp, #-64]	; 0xffffffc0
   27c54:	ldr	r2, [fp, #-28]	; 0xffffffe4
   27c58:	add	r3, r2, r3
   27c5c:	ldrb	r3, [r3]
   27c60:	cmp	r3, #0
   27c64:	bne	27cac <__assert_fail@plt+0x16768>
   27c68:	ldr	r2, [fp, #-72]	; 0xffffffb8
   27c6c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   27c70:	add	r3, r2, r3
   27c74:	str	r3, [fp, #-72]	; 0xffffffb8
   27c78:	ldr	r3, [fp, #-72]	; 0xffffffb8
   27c7c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   27c80:	cmp	r2, r3
   27c84:	bgt	27c98 <__assert_fail@plt+0x16754>
   27c88:	ldr	r3, [fp, #-72]	; 0xffffffb8
   27c8c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   27c90:	cmp	r2, r3
   27c94:	bge	27ca4 <__assert_fail@plt+0x16760>
   27c98:	mov	r3, #1
   27c9c:	str	r3, [fp, #-8]
   27ca0:	b	28308 <__assert_fail@plt+0x16dc4>
   27ca4:	nop	{0}
   27ca8:	b	27ba8 <__assert_fail@plt+0x16664>
   27cac:	nop	{0}
   27cb0:	b	27cc8 <__assert_fail@plt+0x16784>
   27cb4:	nop	{0}
   27cb8:	b	27cc8 <__assert_fail@plt+0x16784>
   27cbc:	nop	{0}
   27cc0:	b	27cc8 <__assert_fail@plt+0x16784>
   27cc4:	nop	{0}
   27cc8:	ldr	r1, [fp, #-72]	; 0xffffffb8
   27ccc:	sub	r3, fp, #208	; 0xd0
   27cd0:	ldr	r2, [fp, #20]
   27cd4:	mov	r0, r3
   27cd8:	bl	19bac <__assert_fail@plt+0x8668>
   27cdc:	str	r0, [fp, #-8]
   27ce0:	ldr	r3, [fp, #-8]
   27ce4:	cmp	r3, #0
   27ce8:	movne	r3, #1
   27cec:	moveq	r3, #0
   27cf0:	uxtb	r3, r3
   27cf4:	cmp	r3, #0
   27cf8:	bne	282ec <__assert_fail@plt+0x16da8>
   27cfc:	ldrb	r3, [fp, #-53]	; 0xffffffcb
   27d00:	eor	r3, r3, #1
   27d04:	uxtb	r3, r3
   27d08:	cmp	r3, #0
   27d0c:	beq	27d2c <__assert_fail@plt+0x167e8>
   27d10:	ldr	r3, [fp, #-180]	; 0xffffff4c
   27d14:	cmp	r3, #0
   27d18:	beq	27d2c <__assert_fail@plt+0x167e8>
   27d1c:	ldr	r3, [fp, #-200]	; 0xffffff38
   27d20:	ldr	r3, [r3]
   27d24:	cmn	r3, #1
   27d28:	beq	27eb4 <__assert_fail@plt+0x16970>
   27d2c:	mov	r3, #0
   27d30:	str	r3, [fp, #-88]	; 0xffffffa8
   27d34:	ldr	r3, [fp, #-88]	; 0xffffffa8
   27d38:	str	r3, [fp, #-100]	; 0xffffff9c
   27d3c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   27d40:	str	r3, [fp, #-104]	; 0xffffff98
   27d44:	ldr	r2, [fp, #-228]	; 0xffffff1c
   27d48:	ldr	r3, [fp, #4]
   27d4c:	cmp	r2, r3
   27d50:	bgt	27d5c <__assert_fail@plt+0x16818>
   27d54:	sub	r3, fp, #72	; 0x48
   27d58:	b	27d60 <__assert_fail@plt+0x1681c>
   27d5c:	mov	r3, #0
   27d60:	ldrb	r1, [fp, #-37]	; 0xffffffdb
   27d64:	sub	r0, fp, #208	; 0xd0
   27d68:	mov	r2, r3
   27d6c:	bl	286cc <__assert_fail@plt+0x17188>
   27d70:	str	r0, [fp, #-24]	; 0xffffffe8
   27d74:	ldr	r3, [fp, #-24]	; 0xffffffe8
   27d78:	cmn	r3, #1
   27d7c:	beq	27ea4 <__assert_fail@plt+0x16960>
   27d80:	ldr	r3, [fp, #-24]	; 0xffffffe8
   27d84:	cmn	r3, #2
   27d88:	moveq	r3, #1
   27d8c:	movne	r3, #0
   27d90:	uxtb	r3, r3
   27d94:	cmp	r3, #0
   27d98:	beq	27da8 <__assert_fail@plt+0x16864>
   27d9c:	mov	r3, #12
   27da0:	str	r3, [fp, #-8]
   27da4:	b	28308 <__assert_fail@plt+0x16dc4>
   27da8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   27dac:	str	r3, [fp, #-116]	; 0xffffff8c
   27db0:	ldr	r3, [fp, #-216]	; 0xffffff28
   27db4:	ldrb	r3, [r3, #28]
   27db8:	and	r3, r3, #16
   27dbc:	uxtb	r3, r3
   27dc0:	cmp	r3, #0
   27dc4:	bne	27dd4 <__assert_fail@plt+0x16890>
   27dc8:	ldr	r3, [fp, #12]
   27dcc:	cmp	r3, #1
   27dd0:	bhi	27de4 <__assert_fail@plt+0x168a0>
   27dd4:	ldr	r3, [fp, #-20]	; 0xffffffec
   27dd8:	ldr	r3, [r3, #76]	; 0x4c
   27ddc:	cmp	r3, #0
   27de0:	beq	27e18 <__assert_fail@plt+0x168d4>
   27de4:	ldr	r2, [fp, #-108]	; 0xffffff94
   27de8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   27dec:	lsl	r3, r3, #2
   27df0:	add	r3, r2, r3
   27df4:	ldr	r3, [r3]
   27df8:	str	r3, [fp, #-68]	; 0xffffffbc
   27dfc:	sub	r3, fp, #208	; 0xd0
   27e00:	ldr	r2, [fp, #-24]	; 0xffffffe8
   27e04:	ldr	r1, [fp, #-68]	; 0xffffffbc
   27e08:	mov	r0, r3
   27e0c:	bl	28dac <__assert_fail@plt+0x17868>
   27e10:	mov	r3, r0
   27e14:	str	r3, [fp, #-112]	; 0xffffff90
   27e18:	ldr	r3, [fp, #-216]	; 0xffffff28
   27e1c:	ldrb	r3, [r3, #28]
   27e20:	and	r3, r3, #16
   27e24:	uxtb	r3, r3
   27e28:	cmp	r3, #0
   27e2c:	bne	27e54 <__assert_fail@plt+0x16910>
   27e30:	ldr	r3, [fp, #12]
   27e34:	cmp	r3, #1
   27e38:	bls	27e54 <__assert_fail@plt+0x16910>
   27e3c:	ldr	r3, [fp, #-20]	; 0xffffffec
   27e40:	ldrb	r3, [r3, #88]	; 0x58
   27e44:	and	r3, r3, #1
   27e48:	uxtb	r3, r3
   27e4c:	cmp	r3, #0
   27e50:	bne	27e64 <__assert_fail@plt+0x16920>
   27e54:	ldr	r3, [fp, #-20]	; 0xffffffec
   27e58:	ldr	r3, [r3, #76]	; 0x4c
   27e5c:	cmp	r3, #0
   27e60:	beq	27ed0 <__assert_fail@plt+0x1698c>
   27e64:	sub	r3, fp, #208	; 0xd0
   27e68:	mov	r0, r3
   27e6c:	bl	28354 <__assert_fail@plt+0x16e10>
   27e70:	str	r0, [fp, #-8]
   27e74:	ldr	r3, [fp, #-8]
   27e78:	cmp	r3, #0
   27e7c:	beq	27ecc <__assert_fail@plt+0x16988>
   27e80:	ldr	r3, [fp, #-8]
   27e84:	cmp	r3, #1
   27e88:	movne	r3, #1
   27e8c:	moveq	r3, #0
   27e90:	uxtb	r3, r3
   27e94:	cmp	r3, #0
   27e98:	bne	282f4 <__assert_fail@plt+0x16db0>
   27e9c:	mvn	r3, #0
   27ea0:	str	r3, [fp, #-24]	; 0xffffffe8
   27ea4:	sub	r3, fp, #208	; 0xd0
   27ea8:	mov	r0, r3
   27eac:	bl	30ce0 <__assert_fail@plt+0x1f79c>
   27eb0:	b	27eb8 <__assert_fail@plt+0x16974>
   27eb4:	nop	{0}
   27eb8:	ldr	r2, [fp, #-72]	; 0xffffffb8
   27ebc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   27ec0:	add	r3, r2, r3
   27ec4:	str	r3, [fp, #-72]	; 0xffffffb8
   27ec8:	b	27958 <__assert_fail@plt+0x16414>
   27ecc:	nop	{0}
   27ed0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   27ed4:	cmn	r3, #1
   27ed8:	ldr	r3, [fp, #-8]
   27edc:	cmp	r3, #0
   27ee0:	ldr	r3, [fp, #12]
   27ee4:	cmp	r3, #0
   27ee8:	beq	282fc <__assert_fail@plt+0x16db8>
   27eec:	mov	r3, #1
   27ef0:	str	r3, [fp, #-16]
   27ef4:	b	27f34 <__assert_fail@plt+0x169f0>
   27ef8:	ldr	r3, [fp, #-16]
   27efc:	lsl	r3, r3, #3
   27f00:	ldr	r2, [fp, #16]
   27f04:	add	r3, r2, r3
   27f08:	mvn	r2, #0
   27f0c:	str	r2, [r3, #4]
   27f10:	ldr	r2, [fp, #-16]
   27f14:	lsl	r2, r2, #3
   27f18:	ldr	r1, [fp, #16]
   27f1c:	add	r2, r1, r2
   27f20:	ldr	r3, [r3, #4]
   27f24:	str	r3, [r2]
   27f28:	ldr	r3, [fp, #-16]
   27f2c:	add	r3, r3, #1
   27f30:	str	r3, [fp, #-16]
   27f34:	ldr	r3, [fp, #-16]
   27f38:	ldr	r2, [fp, #12]
   27f3c:	cmp	r2, r3
   27f40:	bhi	27ef8 <__assert_fail@plt+0x169b4>
   27f44:	ldr	r3, [fp, #16]
   27f48:	mov	r2, #0
   27f4c:	str	r2, [r3]
   27f50:	ldr	r2, [fp, #-116]	; 0xffffff8c
   27f54:	ldr	r3, [fp, #16]
   27f58:	str	r2, [r3, #4]
   27f5c:	ldr	r3, [fp, #-216]	; 0xffffff28
   27f60:	ldrb	r3, [r3, #28]
   27f64:	and	r3, r3, #16
   27f68:	uxtb	r3, r3
   27f6c:	cmp	r3, #0
   27f70:	bne	27ff4 <__assert_fail@plt+0x16ab0>
   27f74:	ldr	r3, [fp, #12]
   27f78:	cmp	r3, #1
   27f7c:	bls	27ff4 <__assert_fail@plt+0x16ab0>
   27f80:	ldr	r3, [fp, #-20]	; 0xffffffec
   27f84:	ldrb	r3, [r3, #88]	; 0x58
   27f88:	and	r3, r3, #1
   27f8c:	uxtb	r3, r3
   27f90:	cmp	r3, #0
   27f94:	beq	27fb0 <__assert_fail@plt+0x16a6c>
   27f98:	ldr	r3, [fp, #-20]	; 0xffffffec
   27f9c:	ldr	r3, [r3, #76]	; 0x4c
   27fa0:	cmp	r3, #0
   27fa4:	ble	27fb0 <__assert_fail@plt+0x16a6c>
   27fa8:	mov	r3, #1
   27fac:	b	27fb4 <__assert_fail@plt+0x16a70>
   27fb0:	mov	r3, #0
   27fb4:	and	r3, r3, #1
   27fb8:	uxtb	r3, r3
   27fbc:	sub	r1, fp, #208	; 0xd0
   27fc0:	str	r3, [sp]
   27fc4:	ldr	r3, [fp, #16]
   27fc8:	ldr	r2, [fp, #12]
   27fcc:	ldr	r0, [fp, #-216]	; 0xffffff28
   27fd0:	bl	29d3c <__assert_fail@plt+0x187f8>
   27fd4:	str	r0, [fp, #-8]
   27fd8:	ldr	r3, [fp, #-8]
   27fdc:	cmp	r3, #0
   27fe0:	movne	r3, #1
   27fe4:	moveq	r3, #0
   27fe8:	uxtb	r3, r3
   27fec:	cmp	r3, #0
   27ff0:	bne	28304 <__assert_fail@plt+0x16dc0>
   27ff4:	mov	r3, #0
   27ff8:	str	r3, [fp, #-16]
   27ffc:	b	28164 <__assert_fail@plt+0x16c20>
   28000:	ldr	r3, [fp, #-16]
   28004:	lsl	r3, r3, #3
   28008:	ldr	r2, [fp, #16]
   2800c:	add	r3, r2, r3
   28010:	ldr	r3, [r3]
   28014:	cmn	r3, #1
   28018:	beq	28158 <__assert_fail@plt+0x16c14>
   2801c:	ldrb	r3, [fp, #-132]	; 0xffffff7c
   28020:	cmp	r3, #0
   28024:	movne	r3, #1
   28028:	moveq	r3, #0
   2802c:	uxtb	r3, r3
   28030:	cmp	r3, #0
   28034:	beq	280f8 <__assert_fail@plt+0x16bb4>
   28038:	ldr	r3, [fp, #-16]
   2803c:	lsl	r3, r3, #3
   28040:	ldr	r2, [fp, #16]
   28044:	add	r3, r2, r3
   28048:	ldr	r2, [r3]
   2804c:	ldr	r3, [fp, #-180]	; 0xffffff4c
   28050:	cmp	r2, r3
   28054:	bne	28060 <__assert_fail@plt+0x16b1c>
   28058:	ldr	r3, [fp, #-176]	; 0xffffff50
   2805c:	b	28084 <__assert_fail@plt+0x16b40>
   28060:	ldr	r2, [fp, #-196]	; 0xffffff3c
   28064:	ldr	r3, [fp, #-16]
   28068:	lsl	r3, r3, #3
   2806c:	ldr	r1, [fp, #16]
   28070:	add	r3, r1, r3
   28074:	ldr	r3, [r3]
   28078:	lsl	r3, r3, #2
   2807c:	add	r3, r2, r3
   28080:	ldr	r3, [r3]
   28084:	ldr	r2, [fp, #-16]
   28088:	lsl	r2, r2, #3
   2808c:	ldr	r1, [fp, #16]
   28090:	add	r2, r1, r2
   28094:	str	r3, [r2]
   28098:	ldr	r3, [fp, #-16]
   2809c:	lsl	r3, r3, #3
   280a0:	ldr	r2, [fp, #16]
   280a4:	add	r3, r2, r3
   280a8:	ldr	r2, [r3, #4]
   280ac:	ldr	r3, [fp, #-180]	; 0xffffff4c
   280b0:	cmp	r2, r3
   280b4:	bne	280c0 <__assert_fail@plt+0x16b7c>
   280b8:	ldr	r3, [fp, #-176]	; 0xffffff50
   280bc:	b	280e4 <__assert_fail@plt+0x16ba0>
   280c0:	ldr	r2, [fp, #-196]	; 0xffffff3c
   280c4:	ldr	r3, [fp, #-16]
   280c8:	lsl	r3, r3, #3
   280cc:	ldr	r1, [fp, #16]
   280d0:	add	r3, r1, r3
   280d4:	ldr	r3, [r3, #4]
   280d8:	lsl	r3, r3, #2
   280dc:	add	r3, r2, r3
   280e0:	ldr	r3, [r3]
   280e4:	ldr	r2, [fp, #-16]
   280e8:	lsl	r2, r2, #3
   280ec:	ldr	r1, [fp, #16]
   280f0:	add	r2, r1, r2
   280f4:	str	r3, [r2, #4]
   280f8:	ldr	r3, [fp, #-16]
   280fc:	lsl	r3, r3, #3
   28100:	ldr	r2, [fp, #16]
   28104:	add	r3, r2, r3
   28108:	ldr	r1, [r3]
   2810c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   28110:	ldr	r3, [fp, #-16]
   28114:	lsl	r3, r3, #3
   28118:	ldr	r0, [fp, #16]
   2811c:	add	r3, r0, r3
   28120:	add	r2, r1, r2
   28124:	str	r2, [r3]
   28128:	ldr	r3, [fp, #-16]
   2812c:	lsl	r3, r3, #3
   28130:	ldr	r2, [fp, #16]
   28134:	add	r3, r2, r3
   28138:	ldr	r1, [r3, #4]
   2813c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   28140:	ldr	r3, [fp, #-16]
   28144:	lsl	r3, r3, #3
   28148:	ldr	r0, [fp, #16]
   2814c:	add	r3, r0, r3
   28150:	add	r2, r1, r2
   28154:	str	r2, [r3, #4]
   28158:	ldr	r3, [fp, #-16]
   2815c:	add	r3, r3, #1
   28160:	str	r3, [fp, #-16]
   28164:	ldr	r3, [fp, #-16]
   28168:	ldr	r2, [fp, #12]
   2816c:	cmp	r2, r3
   28170:	bhi	28000 <__assert_fail@plt+0x16abc>
   28174:	mov	r3, #0
   28178:	str	r3, [fp, #-16]
   2817c:	b	281cc <__assert_fail@plt+0x16c88>
   28180:	ldr	r2, [fp, #-16]
   28184:	ldr	r3, [fp, #12]
   28188:	add	r3, r2, r3
   2818c:	lsl	r3, r3, #3
   28190:	ldr	r2, [fp, #16]
   28194:	add	r3, r2, r3
   28198:	mvn	r2, #0
   2819c:	str	r2, [r3]
   281a0:	ldr	r2, [fp, #-16]
   281a4:	ldr	r3, [fp, #12]
   281a8:	add	r3, r2, r3
   281ac:	lsl	r3, r3, #3
   281b0:	ldr	r2, [fp, #16]
   281b4:	add	r3, r2, r3
   281b8:	mvn	r2, #0
   281bc:	str	r2, [r3, #4]
   281c0:	ldr	r3, [fp, #-16]
   281c4:	add	r3, r3, #1
   281c8:	str	r3, [fp, #-16]
   281cc:	ldr	r2, [fp, #-16]
   281d0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   281d4:	cmp	r2, r3
   281d8:	blt	28180 <__assert_fail@plt+0x16c3c>
   281dc:	ldr	r3, [fp, #-20]	; 0xffffffec
   281e0:	ldr	r3, [r3, #132]	; 0x84
   281e4:	cmp	r3, #0
   281e8:	beq	282fc <__assert_fail@plt+0x16db8>
   281ec:	mov	r3, #0
   281f0:	str	r3, [fp, #-16]
   281f4:	b	282b0 <__assert_fail@plt+0x16d6c>
   281f8:	ldr	r3, [fp, #-20]	; 0xffffffec
   281fc:	ldr	r2, [r3, #132]	; 0x84
   28200:	ldr	r3, [fp, #-16]
   28204:	lsl	r3, r3, #2
   28208:	add	r3, r2, r3
   2820c:	ldr	r3, [r3]
   28210:	ldr	r2, [fp, #-16]
   28214:	cmp	r2, r3
   28218:	beq	282a4 <__assert_fail@plt+0x16d60>
   2821c:	ldr	r3, [fp, #-20]	; 0xffffffec
   28220:	ldr	r2, [r3, #132]	; 0x84
   28224:	ldr	r3, [fp, #-16]
   28228:	lsl	r3, r3, #2
   2822c:	add	r3, r2, r3
   28230:	ldr	r3, [r3]
   28234:	add	r3, r3, #1
   28238:	lsl	r3, r3, #3
   2823c:	ldr	r2, [fp, #16]
   28240:	add	r2, r2, r3
   28244:	ldr	r3, [fp, #-16]
   28248:	add	r3, r3, #1
   2824c:	lsl	r3, r3, #3
   28250:	ldr	r1, [fp, #16]
   28254:	add	r3, r1, r3
   28258:	ldr	r2, [r2]
   2825c:	str	r2, [r3]
   28260:	ldr	r3, [fp, #-20]	; 0xffffffec
   28264:	ldr	r2, [r3, #132]	; 0x84
   28268:	ldr	r3, [fp, #-16]
   2826c:	lsl	r3, r3, #2
   28270:	add	r3, r2, r3
   28274:	ldr	r3, [r3]
   28278:	add	r3, r3, #1
   2827c:	lsl	r3, r3, #3
   28280:	ldr	r2, [fp, #16]
   28284:	add	r2, r2, r3
   28288:	ldr	r3, [fp, #-16]
   2828c:	add	r3, r3, #1
   28290:	lsl	r3, r3, #3
   28294:	ldr	r1, [fp, #16]
   28298:	add	r3, r1, r3
   2829c:	ldr	r2, [r2, #4]
   282a0:	str	r2, [r3, #4]
   282a4:	ldr	r3, [fp, #-16]
   282a8:	add	r3, r3, #1
   282ac:	str	r3, [fp, #-16]
   282b0:	ldr	r3, [fp, #-16]
   282b4:	add	r3, r3, #1
   282b8:	mov	r2, r3
   282bc:	ldr	r3, [fp, #12]
   282c0:	cmp	r3, r2
   282c4:	bhi	281f8 <__assert_fail@plt+0x16cb4>
   282c8:	b	282fc <__assert_fail@plt+0x16db8>
   282cc:	nop	{0}
   282d0:	b	28308 <__assert_fail@plt+0x16dc4>
   282d4:	nop	{0}
   282d8:	b	28308 <__assert_fail@plt+0x16dc4>
   282dc:	nop	{0}
   282e0:	b	28308 <__assert_fail@plt+0x16dc4>
   282e4:	nop	{0}
   282e8:	b	28308 <__assert_fail@plt+0x16dc4>
   282ec:	nop	{0}
   282f0:	b	28308 <__assert_fail@plt+0x16dc4>
   282f4:	nop	{0}
   282f8:	b	28308 <__assert_fail@plt+0x16dc4>
   282fc:	nop	{0}
   28300:	b	28308 <__assert_fail@plt+0x16dc4>
   28304:	nop	{0}
   28308:	ldr	r3, [fp, #-108]	; 0xffffff94
   2830c:	mov	r0, r3
   28310:	bl	151ec <__assert_fail@plt+0x3ca8>
   28314:	ldr	r3, [fp, #-20]	; 0xffffffec
   28318:	ldr	r3, [r3, #76]	; 0x4c
   2831c:	cmp	r3, #0
   28320:	beq	28330 <__assert_fail@plt+0x16dec>
   28324:	sub	r3, fp, #208	; 0xd0
   28328:	mov	r0, r3
   2832c:	bl	30e14 <__assert_fail@plt+0x1f8d0>
   28330:	sub	r3, fp, #208	; 0xd0
   28334:	mov	r0, r3
   28338:	bl	1abb0 <__assert_fail@plt+0x966c>
   2833c:	ldr	r3, [fp, #-8]
   28340:	mov	r0, r3
   28344:	sub	sp, fp, #4
   28348:	ldr	fp, [sp]
   2834c:	add	sp, sp, #4
   28350:	pop	{pc}		; (ldr pc, [sp], #4)
   28354:	str	fp, [sp, #-8]!
   28358:	str	lr, [sp, #4]
   2835c:	add	fp, sp, #4
   28360:	sub	sp, sp, #72	; 0x48
   28364:	str	r0, [fp, #-64]	; 0xffffffc0
   28368:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2836c:	ldr	r3, [r3, #84]	; 0x54
   28370:	str	r3, [fp, #-28]	; 0xffffffe4
   28374:	mov	r3, #0
   28378:	str	r3, [fp, #-24]	; 0xffffffe8
   2837c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   28380:	ldr	r3, [r3, #100]	; 0x64
   28384:	cmp	r3, #0
   28388:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2838c:	ldr	r3, [r3, #92]	; 0x5c
   28390:	str	r3, [fp, #-12]
   28394:	ldr	r3, [fp, #-64]	; 0xffffffc0
   28398:	ldr	r3, [r3, #96]	; 0x60
   2839c:	str	r3, [fp, #-8]
   283a0:	ldr	r3, [fp, #-12]
   283a4:	cmn	r3, #-1073741822	; 0xc0000002
   283a8:	movhi	r3, #1
   283ac:	movls	r3, #0
   283b0:	uxtb	r3, r3
   283b4:	cmp	r3, #0
   283b8:	beq	283c4 <__assert_fail@plt+0x16e80>
   283bc:	mov	r3, #12
   283c0:	b	286b8 <__assert_fail@plt+0x17174>
   283c4:	ldr	r3, [fp, #-12]
   283c8:	add	r3, r3, #1
   283cc:	lsl	r3, r3, #2
   283d0:	mov	r0, r3
   283d4:	bl	33ba0 <__assert_fail@plt+0x2265c>
   283d8:	mov	r3, r0
   283dc:	str	r3, [fp, #-20]	; 0xffffffec
   283e0:	ldr	r3, [fp, #-20]	; 0xffffffec
   283e4:	cmp	r3, #0
   283e8:	moveq	r3, #1
   283ec:	movne	r3, #0
   283f0:	uxtb	r3, r3
   283f4:	cmp	r3, #0
   283f8:	beq	28408 <__assert_fail@plt+0x16ec4>
   283fc:	mov	r3, #12
   28400:	str	r3, [fp, #-16]
   28404:	b	286a4 <__assert_fail@plt+0x17160>
   28408:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2840c:	ldr	r3, [r3, #76]	; 0x4c
   28410:	cmp	r3, #0
   28414:	beq	285dc <__assert_fail@plt+0x17098>
   28418:	ldr	r3, [fp, #-12]
   2841c:	add	r3, r3, #1
   28420:	lsl	r3, r3, #2
   28424:	mov	r0, r3
   28428:	bl	33ba0 <__assert_fail@plt+0x2265c>
   2842c:	mov	r3, r0
   28430:	str	r3, [fp, #-24]	; 0xffffffe8
   28434:	ldr	r3, [fp, #-24]	; 0xffffffe8
   28438:	cmp	r3, #0
   2843c:	moveq	r3, #1
   28440:	movne	r3, #0
   28444:	uxtb	r3, r3
   28448:	cmp	r3, #0
   2844c:	beq	2845c <__assert_fail@plt+0x16f18>
   28450:	mov	r3, #12
   28454:	str	r3, [fp, #-16]
   28458:	b	286a4 <__assert_fail@plt+0x17160>
   2845c:	ldr	r3, [fp, #-12]
   28460:	add	r3, r3, #1
   28464:	lsl	r3, r3, #2
   28468:	mov	r2, r3
   2846c:	mov	r1, #0
   28470:	ldr	r0, [fp, #-24]	; 0xffffffe8
   28474:	bl	11448 <memset@plt>
   28478:	sub	r0, fp, #56	; 0x38
   2847c:	ldr	r3, [fp, #-12]
   28480:	str	r3, [sp]
   28484:	ldr	r3, [fp, #-8]
   28488:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2848c:	ldr	r1, [fp, #-20]	; 0xffffffec
   28490:	bl	3156c <__assert_fail@plt+0x20028>
   28494:	sub	r3, fp, #56	; 0x38
   28498:	mov	r1, r3
   2849c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   284a0:	bl	2a3b4 <__assert_fail@plt+0x18e70>
   284a4:	str	r0, [fp, #-16]
   284a8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   284ac:	mov	r0, r3
   284b0:	bl	151ec <__assert_fail@plt+0x3ca8>
   284b4:	ldr	r3, [fp, #-16]
   284b8:	cmp	r3, #0
   284bc:	movne	r3, #1
   284c0:	moveq	r3, #0
   284c4:	uxtb	r3, r3
   284c8:	cmp	r3, #0
   284cc:	bne	28698 <__assert_fail@plt+0x17154>
   284d0:	ldr	r3, [fp, #-20]	; 0xffffffec
   284d4:	ldr	r3, [r3]
   284d8:	cmp	r3, #0
   284dc:	bne	28590 <__assert_fail@plt+0x1704c>
   284e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   284e4:	ldr	r3, [r3]
   284e8:	cmp	r3, #0
   284ec:	bne	28590 <__assert_fail@plt+0x1704c>
   284f0:	ldr	r3, [fp, #-12]
   284f4:	sub	r3, r3, #1
   284f8:	str	r3, [fp, #-12]
   284fc:	ldr	r3, [fp, #-12]
   28500:	cmp	r3, #0
   28504:	bge	28514 <__assert_fail@plt+0x16fd0>
   28508:	mov	r3, #1
   2850c:	str	r3, [fp, #-16]
   28510:	b	286a4 <__assert_fail@plt+0x17160>
   28514:	ldr	r3, [fp, #-64]	; 0xffffffc0
   28518:	ldr	r2, [r3, #100]	; 0x64
   2851c:	ldr	r3, [fp, #-12]
   28520:	lsl	r3, r3, #2
   28524:	add	r3, r2, r3
   28528:	ldr	r3, [r3]
   2852c:	cmp	r3, #0
   28530:	beq	284f0 <__assert_fail@plt+0x16fac>
   28534:	ldr	r3, [fp, #-64]	; 0xffffffc0
   28538:	ldr	r2, [r3, #100]	; 0x64
   2853c:	ldr	r3, [fp, #-12]
   28540:	lsl	r3, r3, #2
   28544:	add	r3, r2, r3
   28548:	ldr	r3, [r3]
   2854c:	ldrb	r3, [r3, #52]	; 0x34
   28550:	and	r3, r3, #16
   28554:	uxtb	r3, r3
   28558:	cmp	r3, #0
   2855c:	beq	284f0 <__assert_fail@plt+0x16fac>
   28560:	ldr	r3, [fp, #-64]	; 0xffffffc0
   28564:	ldr	r2, [r3, #100]	; 0x64
   28568:	ldr	r3, [fp, #-12]
   2856c:	lsl	r3, r3, #2
   28570:	add	r3, r2, r3
   28574:	ldr	r3, [r3]
   28578:	ldr	r2, [fp, #-12]
   2857c:	mov	r1, r3
   28580:	ldr	r0, [fp, #-64]	; 0xffffffc0
   28584:	bl	28dac <__assert_fail@plt+0x17868>
   28588:	str	r0, [fp, #-8]
   2858c:	b	2845c <__assert_fail@plt+0x16f18>
   28590:	ldr	r3, [fp, #-12]
   28594:	add	r3, r3, #1
   28598:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2859c:	ldr	r1, [fp, #-20]	; 0xffffffec
   285a0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   285a4:	bl	2a99c <__assert_fail@plt+0x19458>
   285a8:	str	r0, [fp, #-16]
   285ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   285b0:	bl	151ec <__assert_fail@plt+0x3ca8>
   285b4:	mov	r3, #0
   285b8:	str	r3, [fp, #-24]	; 0xffffffe8
   285bc:	ldr	r3, [fp, #-16]
   285c0:	cmp	r3, #0
   285c4:	movne	r3, #1
   285c8:	moveq	r3, #0
   285cc:	uxtb	r3, r3
   285d0:	cmp	r3, #0
   285d4:	beq	28650 <__assert_fail@plt+0x1710c>
   285d8:	b	286a4 <__assert_fail@plt+0x17160>
   285dc:	sub	r0, fp, #56	; 0x38
   285e0:	ldr	r3, [fp, #-12]
   285e4:	str	r3, [sp]
   285e8:	ldr	r3, [fp, #-8]
   285ec:	ldr	r2, [fp, #-24]	; 0xffffffe8
   285f0:	ldr	r1, [fp, #-20]	; 0xffffffec
   285f4:	bl	3156c <__assert_fail@plt+0x20028>
   285f8:	sub	r3, fp, #56	; 0x38
   285fc:	mov	r1, r3
   28600:	ldr	r0, [fp, #-64]	; 0xffffffc0
   28604:	bl	2a3b4 <__assert_fail@plt+0x18e70>
   28608:	str	r0, [fp, #-16]
   2860c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   28610:	mov	r0, r3
   28614:	bl	151ec <__assert_fail@plt+0x3ca8>
   28618:	ldr	r3, [fp, #-16]
   2861c:	cmp	r3, #0
   28620:	movne	r3, #1
   28624:	moveq	r3, #0
   28628:	uxtb	r3, r3
   2862c:	cmp	r3, #0
   28630:	bne	286a0 <__assert_fail@plt+0x1715c>
   28634:	ldr	r3, [fp, #-20]	; 0xffffffec
   28638:	ldr	r3, [r3]
   2863c:	cmp	r3, #0
   28640:	bne	28650 <__assert_fail@plt+0x1710c>
   28644:	mov	r3, #1
   28648:	str	r3, [fp, #-16]
   2864c:	b	286a4 <__assert_fail@plt+0x17160>
   28650:	ldr	r3, [fp, #-64]	; 0xffffffc0
   28654:	ldr	r3, [r3, #100]	; 0x64
   28658:	mov	r0, r3
   2865c:	bl	151ec <__assert_fail@plt+0x3ca8>
   28660:	ldr	r3, [fp, #-64]	; 0xffffffc0
   28664:	ldr	r2, [fp, #-20]	; 0xffffffec
   28668:	str	r2, [r3, #100]	; 0x64
   2866c:	mov	r3, #0
   28670:	str	r3, [fp, #-20]	; 0xffffffec
   28674:	ldr	r3, [fp, #-64]	; 0xffffffc0
   28678:	ldr	r2, [fp, #-8]
   2867c:	str	r2, [r3, #96]	; 0x60
   28680:	ldr	r3, [fp, #-64]	; 0xffffffc0
   28684:	ldr	r2, [fp, #-12]
   28688:	str	r2, [r3, #92]	; 0x5c
   2868c:	mov	r3, #0
   28690:	str	r3, [fp, #-16]
   28694:	b	286a4 <__assert_fail@plt+0x17160>
   28698:	nop	{0}
   2869c:	b	286a4 <__assert_fail@plt+0x17160>
   286a0:	nop	{0}
   286a4:	ldr	r0, [fp, #-20]	; 0xffffffec
   286a8:	bl	151ec <__assert_fail@plt+0x3ca8>
   286ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   286b0:	bl	151ec <__assert_fail@plt+0x3ca8>
   286b4:	ldr	r3, [fp, #-16]
   286b8:	mov	r0, r3
   286bc:	sub	sp, fp, #4
   286c0:	ldr	fp, [sp]
   286c4:	add	sp, sp, #4
   286c8:	pop	{pc}		; (ldr pc, [sp], #4)
   286cc:	str	fp, [sp, #-8]!
   286d0:	str	lr, [sp, #4]
   286d4:	add	fp, sp, #4
   286d8:	sub	sp, sp, #80	; 0x50
   286dc:	str	r0, [fp, #-72]	; 0xffffffb8
   286e0:	mov	r3, r1
   286e4:	str	r2, [fp, #-80]	; 0xffffffb0
   286e8:	strb	r3, [fp, #-73]	; 0xffffffb7
   286ec:	ldr	r3, [fp, #-72]	; 0xffffffb8
   286f0:	ldr	r3, [r3, #84]	; 0x54
   286f4:	str	r3, [fp, #-28]	; 0xffffffe4
   286f8:	mov	r3, #0
   286fc:	str	r3, [fp, #-8]
   28700:	mvn	r3, #0
   28704:	str	r3, [fp, #-12]
   28708:	ldr	r3, [fp, #-72]	; 0xffffffb8
   2870c:	ldr	r3, [r3, #40]	; 0x28
   28710:	str	r3, [fp, #-32]	; 0xffffffe0
   28714:	ldr	r3, [fp, #-80]	; 0xffffffb0
   28718:	cmp	r3, #0
   2871c:	movne	r3, #1
   28720:	moveq	r3, #0
   28724:	strb	r3, [fp, #-17]	; 0xffffffef
   28728:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2872c:	str	r3, [fp, #-24]	; 0xffffffe8
   28730:	mov	r3, #0
   28734:	str	r3, [fp, #-64]	; 0xffffffc0
   28738:	sub	r3, fp, #64	; 0x40
   2873c:	str	r3, [fp, #-44]	; 0xffffffd4
   28740:	ldr	r3, [fp, #-72]	; 0xffffffb8
   28744:	str	r3, [fp, #-48]	; 0xffffffd0
   28748:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2874c:	str	r3, [fp, #-52]	; 0xffffffcc
   28750:	ldr	r3, [fp, #-48]	; 0xffffffd0
   28754:	ldr	r3, [r3, #84]	; 0x54
   28758:	str	r3, [fp, #-56]	; 0xffffffc8
   2875c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   28760:	ldr	r3, [r3, #36]	; 0x24
   28764:	ldrb	r3, [r3, #52]	; 0x34
   28768:	bic	r3, r3, #127	; 0x7f
   2876c:	uxtb	r3, r3
   28770:	cmp	r3, #0
   28774:	beq	28854 <__assert_fail@plt+0x17310>
   28778:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2877c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   28780:	sub	r1, r3, #1
   28784:	ldr	r3, [fp, #-48]	; 0xffffffd0
   28788:	ldr	r3, [r3, #88]	; 0x58
   2878c:	mov	r2, r3
   28790:	bl	1ac18 <__assert_fail@plt+0x96d4>
   28794:	str	r0, [fp, #-60]	; 0xffffffc4
   28798:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2879c:	and	r3, r3, #1
   287a0:	cmp	r3, #0
   287a4:	beq	287b4 <__assert_fail@plt+0x17270>
   287a8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   287ac:	ldr	r3, [r3, #40]	; 0x28
   287b0:	b	2885c <__assert_fail@plt+0x17318>
   287b4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   287b8:	cmp	r3, #0
   287bc:	bne	287cc <__assert_fail@plt+0x17288>
   287c0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   287c4:	ldr	r3, [r3, #36]	; 0x24
   287c8:	b	2885c <__assert_fail@plt+0x17318>
   287cc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   287d0:	and	r3, r3, #4
   287d4:	cmp	r3, #0
   287d8:	beq	287f8 <__assert_fail@plt+0x172b4>
   287dc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   287e0:	and	r3, r3, #2
   287e4:	cmp	r3, #0
   287e8:	beq	287f8 <__assert_fail@plt+0x172b4>
   287ec:	ldr	r3, [fp, #-56]	; 0xffffffc8
   287f0:	ldr	r3, [r3, #48]	; 0x30
   287f4:	b	2885c <__assert_fail@plt+0x17318>
   287f8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   287fc:	and	r3, r3, #2
   28800:	cmp	r3, #0
   28804:	beq	28814 <__assert_fail@plt+0x172d0>
   28808:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2880c:	ldr	r3, [r3, #44]	; 0x2c
   28810:	b	2885c <__assert_fail@plt+0x17318>
   28814:	ldr	r3, [fp, #-60]	; 0xffffffc4
   28818:	and	r3, r3, #4
   2881c:	cmp	r3, #0
   28820:	beq	28848 <__assert_fail@plt+0x17304>
   28824:	ldr	r3, [fp, #-56]	; 0xffffffc8
   28828:	ldr	r3, [r3, #36]	; 0x24
   2882c:	ldr	r2, [r3, #40]	; 0x28
   28830:	ldr	r3, [fp, #-60]	; 0xffffffc4
   28834:	ldr	r1, [fp, #-56]	; 0xffffffc8
   28838:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2883c:	bl	1c9ac <__assert_fail@plt+0xb468>
   28840:	mov	r3, r0
   28844:	b	2885c <__assert_fail@plt+0x17318>
   28848:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2884c:	ldr	r3, [r3, #36]	; 0x24
   28850:	b	2885c <__assert_fail@plt+0x17318>
   28854:	ldr	r3, [fp, #-56]	; 0xffffffc8
   28858:	ldr	r3, [r3, #36]	; 0x24
   2885c:	str	r3, [fp, #-16]
   28860:	ldr	r3, [fp, #-16]
   28864:	cmp	r3, #0
   28868:	moveq	r3, #1
   2886c:	movne	r3, #0
   28870:	uxtb	r3, r3
   28874:	cmp	r3, #0
   28878:	beq	2888c <__assert_fail@plt+0x17348>
   2887c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   28880:	cmp	r3, #12
   28884:	mvn	r3, #1
   28888:	b	28c7c <__assert_fail@plt+0x17738>
   2888c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   28890:	ldr	r3, [r3, #100]	; 0x64
   28894:	cmp	r3, #0
   28898:	beq	2896c <__assert_fail@plt+0x17428>
   2889c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   288a0:	ldr	r2, [r3, #100]	; 0x64
   288a4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   288a8:	lsl	r3, r3, #2
   288ac:	add	r3, r2, r3
   288b0:	ldr	r2, [fp, #-16]
   288b4:	str	r2, [r3]
   288b8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   288bc:	ldr	r3, [r3, #76]	; 0x4c
   288c0:	cmp	r3, #0
   288c4:	beq	2896c <__assert_fail@plt+0x17428>
   288c8:	mov	r3, #0
   288cc:	strb	r3, [fp, #-17]	; 0xffffffef
   288d0:	ldr	r3, [fp, #-16]
   288d4:	add	r3, r3, #4
   288d8:	mov	r2, #0
   288dc:	mov	r1, r3
   288e0:	ldr	r0, [fp, #-72]	; 0xffffffb8
   288e4:	bl	2c6a8 <__assert_fail@plt+0x1b164>
   288e8:	mov	r3, r0
   288ec:	str	r3, [fp, #-64]	; 0xffffffc0
   288f0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   288f4:	cmp	r3, #0
   288f8:	movne	r3, #1
   288fc:	moveq	r3, #0
   28900:	uxtb	r3, r3
   28904:	cmp	r3, #0
   28908:	beq	28914 <__assert_fail@plt+0x173d0>
   2890c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   28910:	b	28c7c <__assert_fail@plt+0x17738>
   28914:	ldr	r3, [fp, #-16]
   28918:	ldrb	r3, [r3, #52]	; 0x34
   2891c:	and	r3, r3, #64	; 0x40
   28920:	uxtb	r3, r3
   28924:	cmp	r3, #0
   28928:	beq	2896c <__assert_fail@plt+0x17428>
   2892c:	ldr	r3, [fp, #-16]
   28930:	add	r3, r3, #4
   28934:	mov	r1, r3
   28938:	ldr	r0, [fp, #-72]	; 0xffffffb8
   2893c:	bl	2cc10 <__assert_fail@plt+0x1b6cc>
   28940:	mov	r3, r0
   28944:	str	r3, [fp, #-64]	; 0xffffffc0
   28948:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2894c:	cmp	r3, #0
   28950:	movne	r3, #1
   28954:	moveq	r3, #0
   28958:	uxtb	r3, r3
   2895c:	cmp	r3, #0
   28960:	beq	2896c <__assert_fail@plt+0x17428>
   28964:	ldr	r3, [fp, #-64]	; 0xffffffc0
   28968:	b	28c7c <__assert_fail@plt+0x17738>
   2896c:	ldr	r3, [fp, #-16]
   28970:	ldrb	r3, [r3, #52]	; 0x34
   28974:	ubfx	r3, r3, #4, #1
   28978:	uxtb	r3, r3
   2897c:	cmp	r3, #0
   28980:	beq	28c34 <__assert_fail@plt+0x176f0>
   28984:	ldr	r3, [fp, #-16]
   28988:	ldrb	r3, [r3, #52]	; 0x34
   2898c:	bic	r3, r3, #127	; 0x7f
   28990:	uxtb	r3, r3
   28994:	cmp	r3, #0
   28998:	beq	289b8 <__assert_fail@plt+0x17474>
   2899c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   289a0:	ldr	r1, [fp, #-16]
   289a4:	ldr	r0, [fp, #-72]	; 0xffffffb8
   289a8:	bl	28dac <__assert_fail@plt+0x17868>
   289ac:	mov	r3, r0
   289b0:	cmp	r3, #0
   289b4:	beq	28c34 <__assert_fail@plt+0x176f0>
   289b8:	ldrb	r3, [fp, #-73]	; 0xffffffb7
   289bc:	eor	r3, r3, #1
   289c0:	uxtb	r3, r3
   289c4:	cmp	r3, #0
   289c8:	beq	289d4 <__assert_fail@plt+0x17490>
   289cc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   289d0:	b	28c7c <__assert_fail@plt+0x17738>
   289d4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   289d8:	str	r3, [fp, #-12]
   289dc:	mov	r3, #1
   289e0:	str	r3, [fp, #-8]
   289e4:	b	28c34 <__assert_fail@plt+0x176f0>
   289e8:	ldr	r3, [fp, #-16]
   289ec:	str	r3, [fp, #-36]	; 0xffffffdc
   289f0:	ldr	r3, [fp, #-72]	; 0xffffffb8
   289f4:	ldr	r3, [r3, #40]	; 0x28
   289f8:	add	r3, r3, #1
   289fc:	str	r3, [fp, #-40]	; 0xffffffd8
   28a00:	ldr	r3, [fp, #-72]	; 0xffffffb8
   28a04:	ldr	r3, [r3, #36]	; 0x24
   28a08:	ldr	r2, [fp, #-40]	; 0xffffffd8
   28a0c:	cmp	r2, r3
   28a10:	movge	r3, #1
   28a14:	movlt	r3, #0
   28a18:	uxtb	r3, r3
   28a1c:	cmp	r3, #0
   28a20:	beq	28a3c <__assert_fail@plt+0x174f8>
   28a24:	ldr	r3, [fp, #-72]	; 0xffffffb8
   28a28:	ldr	r2, [r3, #36]	; 0x24
   28a2c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   28a30:	ldr	r3, [r3, #48]	; 0x30
   28a34:	cmp	r2, r3
   28a38:	blt	28a78 <__assert_fail@plt+0x17534>
   28a3c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   28a40:	ldr	r3, [r3, #28]
   28a44:	ldr	r2, [fp, #-40]	; 0xffffffd8
   28a48:	cmp	r2, r3
   28a4c:	movge	r3, #1
   28a50:	movlt	r3, #0
   28a54:	uxtb	r3, r3
   28a58:	cmp	r3, #0
   28a5c:	beq	28ac0 <__assert_fail@plt+0x1757c>
   28a60:	ldr	r3, [fp, #-72]	; 0xffffffb8
   28a64:	ldr	r2, [r3, #28]
   28a68:	ldr	r3, [fp, #-72]	; 0xffffffb8
   28a6c:	ldr	r3, [r3, #48]	; 0x30
   28a70:	cmp	r2, r3
   28a74:	bge	28ac0 <__assert_fail@plt+0x1757c>
   28a78:	ldr	r3, [fp, #-40]	; 0xffffffd8
   28a7c:	add	r3, r3, #1
   28a80:	mov	r1, r3
   28a84:	ldr	r0, [fp, #-72]	; 0xffffffb8
   28a88:	bl	309c0 <__assert_fail@plt+0x1f47c>
   28a8c:	mov	r3, r0
   28a90:	str	r3, [fp, #-64]	; 0xffffffc0
   28a94:	ldr	r3, [fp, #-64]	; 0xffffffc0
   28a98:	cmp	r3, #0
   28a9c:	movne	r3, #1
   28aa0:	moveq	r3, #0
   28aa4:	uxtb	r3, r3
   28aa8:	cmp	r3, #0
   28aac:	beq	28ac0 <__assert_fail@plt+0x1757c>
   28ab0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   28ab4:	cmp	r3, #12
   28ab8:	mvn	r3, #1
   28abc:	b	28c7c <__assert_fail@plt+0x17738>
   28ac0:	sub	r3, fp, #64	; 0x40
   28ac4:	ldr	r2, [fp, #-16]
   28ac8:	ldr	r1, [fp, #-72]	; 0xffffffb8
   28acc:	mov	r0, r3
   28ad0:	bl	2c148 <__assert_fail@plt+0x1ac04>
   28ad4:	str	r0, [fp, #-16]
   28ad8:	ldr	r3, [fp, #-72]	; 0xffffffb8
   28adc:	ldr	r3, [r3, #100]	; 0x64
   28ae0:	cmp	r3, #0
   28ae4:	beq	28b00 <__assert_fail@plt+0x175bc>
   28ae8:	sub	r3, fp, #64	; 0x40
   28aec:	ldr	r2, [fp, #-16]
   28af0:	ldr	r1, [fp, #-72]	; 0xffffffb8
   28af4:	mov	r0, r3
   28af8:	bl	2c300 <__assert_fail@plt+0x1adbc>
   28afc:	str	r0, [fp, #-16]
   28b00:	ldr	r3, [fp, #-16]
   28b04:	cmp	r3, #0
   28b08:	bne	28b80 <__assert_fail@plt+0x1763c>
   28b0c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   28b10:	cmp	r3, #0
   28b14:	movne	r3, #1
   28b18:	moveq	r3, #0
   28b1c:	uxtb	r3, r3
   28b20:	cmp	r3, #0
   28b24:	beq	28b30 <__assert_fail@plt+0x175ec>
   28b28:	mvn	r3, #1
   28b2c:	b	28c7c <__assert_fail@plt+0x17738>
   28b30:	ldr	r3, [fp, #-72]	; 0xffffffb8
   28b34:	ldr	r3, [r3, #100]	; 0x64
   28b38:	cmp	r3, #0
   28b3c:	beq	28c54 <__assert_fail@plt+0x17710>
   28b40:	ldr	r3, [fp, #-8]
   28b44:	cmp	r3, #0
   28b48:	beq	28b60 <__assert_fail@plt+0x1761c>
   28b4c:	ldrb	r3, [fp, #-73]	; 0xffffffb7
   28b50:	eor	r3, r3, #1
   28b54:	uxtb	r3, r3
   28b58:	cmp	r3, #0
   28b5c:	bne	28c54 <__assert_fail@plt+0x17710>
   28b60:	sub	r3, fp, #64	; 0x40
   28b64:	ldr	r1, [fp, #-72]	; 0xffffffb8
   28b68:	mov	r0, r3
   28b6c:	bl	2c5d8 <__assert_fail@plt+0x1b094>
   28b70:	str	r0, [fp, #-16]
   28b74:	ldr	r3, [fp, #-16]
   28b78:	cmp	r3, #0
   28b7c:	beq	28c54 <__assert_fail@plt+0x17710>
   28b80:	ldrb	r3, [fp, #-17]	; 0xffffffef
   28b84:	cmp	r3, #0
   28b88:	beq	28bb0 <__assert_fail@plt+0x1766c>
   28b8c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   28b90:	ldr	r3, [fp, #-16]
   28b94:	cmp	r2, r3
   28b98:	bne	28ba8 <__assert_fail@plt+0x17664>
   28b9c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   28ba0:	str	r3, [fp, #-24]	; 0xffffffe8
   28ba4:	b	28bb0 <__assert_fail@plt+0x1766c>
   28ba8:	mov	r3, #0
   28bac:	strb	r3, [fp, #-17]	; 0xffffffef
   28bb0:	ldr	r3, [fp, #-16]
   28bb4:	ldrb	r3, [r3, #52]	; 0x34
   28bb8:	and	r3, r3, #16
   28bbc:	uxtb	r3, r3
   28bc0:	cmp	r3, #0
   28bc4:	beq	28c34 <__assert_fail@plt+0x176f0>
   28bc8:	ldr	r3, [fp, #-16]
   28bcc:	ldrb	r3, [r3, #52]	; 0x34
   28bd0:	bic	r3, r3, #127	; 0x7f
   28bd4:	uxtb	r3, r3
   28bd8:	cmp	r3, #0
   28bdc:	beq	28c04 <__assert_fail@plt+0x176c0>
   28be0:	ldr	r3, [fp, #-72]	; 0xffffffb8
   28be4:	ldr	r3, [r3, #40]	; 0x28
   28be8:	mov	r2, r3
   28bec:	ldr	r1, [fp, #-16]
   28bf0:	ldr	r0, [fp, #-72]	; 0xffffffb8
   28bf4:	bl	28dac <__assert_fail@plt+0x17868>
   28bf8:	mov	r3, r0
   28bfc:	cmp	r3, #0
   28c00:	beq	28c34 <__assert_fail@plt+0x176f0>
   28c04:	ldr	r3, [fp, #-72]	; 0xffffffb8
   28c08:	ldr	r3, [r3, #40]	; 0x28
   28c0c:	str	r3, [fp, #-12]
   28c10:	mov	r3, #1
   28c14:	str	r3, [fp, #-8]
   28c18:	mov	r3, #0
   28c1c:	str	r3, [fp, #-80]	; 0xffffffb0
   28c20:	ldrb	r3, [fp, #-73]	; 0xffffffb7
   28c24:	eor	r3, r3, #1
   28c28:	uxtb	r3, r3
   28c2c:	cmp	r3, #0
   28c30:	bne	28c50 <__assert_fail@plt+0x1770c>
   28c34:	ldr	r3, [fp, #-72]	; 0xffffffb8
   28c38:	ldr	r2, [r3, #56]	; 0x38
   28c3c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   28c40:	ldr	r3, [r3, #40]	; 0x28
   28c44:	cmp	r2, r3
   28c48:	bgt	289e8 <__assert_fail@plt+0x174a4>
   28c4c:	b	28c54 <__assert_fail@plt+0x17710>
   28c50:	nop	{0}
   28c54:	ldr	r3, [fp, #-80]	; 0xffffffb0
   28c58:	cmp	r3, #0
   28c5c:	beq	28c78 <__assert_fail@plt+0x17734>
   28c60:	ldr	r3, [fp, #-80]	; 0xffffffb0
   28c64:	ldr	r2, [r3]
   28c68:	ldr	r3, [fp, #-24]	; 0xffffffe8
   28c6c:	add	r2, r2, r3
   28c70:	ldr	r3, [fp, #-80]	; 0xffffffb0
   28c74:	str	r2, [r3]
   28c78:	ldr	r3, [fp, #-12]
   28c7c:	mov	r0, r3
   28c80:	sub	sp, fp, #4
   28c84:	ldr	fp, [sp]
   28c88:	add	sp, sp, #4
   28c8c:	pop	{pc}		; (ldr pc, [sp], #4)
   28c90:	push	{fp}		; (str fp, [sp, #-4]!)
   28c94:	add	fp, sp, #0
   28c98:	sub	sp, sp, #28
   28c9c:	str	r0, [fp, #-16]
   28ca0:	str	r1, [fp, #-20]	; 0xffffffec
   28ca4:	str	r2, [fp, #-24]	; 0xffffffe8
   28ca8:	ldr	r3, [fp, #-16]
   28cac:	ldr	r2, [r3]
   28cb0:	ldr	r3, [fp, #-20]	; 0xffffffec
   28cb4:	lsl	r3, r3, #3
   28cb8:	add	r3, r2, r3
   28cbc:	ldrb	r3, [r3, #4]
   28cc0:	str	r3, [fp, #-8]
   28cc4:	ldr	r3, [fp, #-16]
   28cc8:	ldr	r2, [r3]
   28ccc:	ldr	r3, [fp, #-20]	; 0xffffffec
   28cd0:	lsl	r3, r3, #3
   28cd4:	add	r3, r2, r3
   28cd8:	ldr	r3, [r3, #4]
   28cdc:	ubfx	r3, r3, #8, #10
   28ce0:	uxth	r3, r3
   28ce4:	str	r3, [fp, #-12]
   28ce8:	ldr	r3, [fp, #-8]
   28cec:	cmp	r3, #2
   28cf0:	beq	28cfc <__assert_fail@plt+0x177b8>
   28cf4:	mov	r3, #0
   28cf8:	b	28d9c <__assert_fail@plt+0x17858>
   28cfc:	ldr	r3, [fp, #-12]
   28d00:	cmp	r3, #0
   28d04:	bne	28d10 <__assert_fail@plt+0x177cc>
   28d08:	mov	r3, #1
   28d0c:	b	28d9c <__assert_fail@plt+0x17858>
   28d10:	ldr	r3, [fp, #-12]
   28d14:	and	r3, r3, #4
   28d18:	cmp	r3, #0
   28d1c:	beq	28d30 <__assert_fail@plt+0x177ec>
   28d20:	ldr	r3, [fp, #-24]	; 0xffffffe8
   28d24:	and	r3, r3, #1
   28d28:	cmp	r3, #0
   28d2c:	beq	28d90 <__assert_fail@plt+0x1784c>
   28d30:	ldr	r3, [fp, #-12]
   28d34:	and	r3, r3, #8
   28d38:	cmp	r3, #0
   28d3c:	beq	28d50 <__assert_fail@plt+0x1780c>
   28d40:	ldr	r3, [fp, #-24]	; 0xffffffe8
   28d44:	and	r3, r3, #1
   28d48:	cmp	r3, #0
   28d4c:	bne	28d90 <__assert_fail@plt+0x1784c>
   28d50:	ldr	r3, [fp, #-12]
   28d54:	and	r3, r3, #32
   28d58:	cmp	r3, #0
   28d5c:	beq	28d70 <__assert_fail@plt+0x1782c>
   28d60:	ldr	r3, [fp, #-24]	; 0xffffffe8
   28d64:	and	r3, r3, #2
   28d68:	cmp	r3, #0
   28d6c:	beq	28d90 <__assert_fail@plt+0x1784c>
   28d70:	ldr	r3, [fp, #-12]
   28d74:	and	r3, r3, #128	; 0x80
   28d78:	cmp	r3, #0
   28d7c:	beq	28d98 <__assert_fail@plt+0x17854>
   28d80:	ldr	r3, [fp, #-24]	; 0xffffffe8
   28d84:	and	r3, r3, #8
   28d88:	cmp	r3, #0
   28d8c:	bne	28d98 <__assert_fail@plt+0x17854>
   28d90:	mov	r3, #0
   28d94:	b	28d9c <__assert_fail@plt+0x17858>
   28d98:	mov	r3, #1
   28d9c:	mov	r0, r3
   28da0:	add	sp, fp, #0
   28da4:	pop	{fp}		; (ldr fp, [sp], #4)
   28da8:	bx	lr
   28dac:	str	fp, [sp, #-8]!
   28db0:	str	lr, [sp, #4]
   28db4:	add	fp, sp, #4
   28db8:	sub	sp, sp, #24
   28dbc:	str	r0, [fp, #-16]
   28dc0:	str	r1, [fp, #-20]	; 0xffffffec
   28dc4:	str	r2, [fp, #-24]	; 0xffffffe8
   28dc8:	ldr	r3, [fp, #-20]	; 0xffffffec
   28dcc:	ldrb	r3, [r3, #52]	; 0x34
   28dd0:	and	r3, r3, #16
   28dd4:	uxtb	r3, r3
   28dd8:	cmp	r3, #0
   28ddc:	ldr	r0, [fp, #-16]
   28de0:	ldr	r3, [fp, #-16]
   28de4:	ldr	r3, [r3, #88]	; 0x58
   28de8:	mov	r2, r3
   28dec:	ldr	r1, [fp, #-24]	; 0xffffffe8
   28df0:	bl	1ac18 <__assert_fail@plt+0x96d4>
   28df4:	str	r0, [fp, #-12]
   28df8:	mov	r3, #0
   28dfc:	str	r3, [fp, #-8]
   28e00:	b	28e64 <__assert_fail@plt+0x17920>
   28e04:	ldr	r3, [fp, #-16]
   28e08:	ldr	r0, [r3, #84]	; 0x54
   28e0c:	ldr	r3, [fp, #-20]	; 0xffffffec
   28e10:	ldr	r2, [r3, #12]
   28e14:	ldr	r3, [fp, #-8]
   28e18:	lsl	r3, r3, #2
   28e1c:	add	r3, r2, r3
   28e20:	ldr	r3, [r3]
   28e24:	ldr	r2, [fp, #-12]
   28e28:	mov	r1, r3
   28e2c:	bl	28c90 <__assert_fail@plt+0x1774c>
   28e30:	mov	r3, r0
   28e34:	cmp	r3, #0
   28e38:	beq	28e58 <__assert_fail@plt+0x17914>
   28e3c:	ldr	r3, [fp, #-20]	; 0xffffffec
   28e40:	ldr	r2, [r3, #12]
   28e44:	ldr	r3, [fp, #-8]
   28e48:	lsl	r3, r3, #2
   28e4c:	add	r3, r2, r3
   28e50:	ldr	r3, [r3]
   28e54:	b	28e7c <__assert_fail@plt+0x17938>
   28e58:	ldr	r3, [fp, #-8]
   28e5c:	add	r3, r3, #1
   28e60:	str	r3, [fp, #-8]
   28e64:	ldr	r3, [fp, #-20]	; 0xffffffec
   28e68:	ldr	r3, [r3, #8]
   28e6c:	ldr	r2, [fp, #-8]
   28e70:	cmp	r2, r3
   28e74:	blt	28e04 <__assert_fail@plt+0x178c0>
   28e78:	mov	r3, #0
   28e7c:	mov	r0, r3
   28e80:	sub	sp, fp, #4
   28e84:	ldr	fp, [sp]
   28e88:	add	sp, sp, #4
   28e8c:	pop	{pc}		; (ldr pc, [sp], #4)
   28e90:	str	fp, [sp, #-8]!
   28e94:	str	lr, [sp, #4]
   28e98:	add	fp, sp, #4
   28e9c:	sub	sp, sp, #88	; 0x58
   28ea0:	str	r0, [fp, #-64]	; 0xffffffc0
   28ea4:	str	r1, [fp, #-68]	; 0xffffffbc
   28ea8:	str	r2, [fp, #-72]	; 0xffffffb8
   28eac:	str	r3, [fp, #-76]	; 0xffffffb4
   28eb0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   28eb4:	ldr	r3, [r3, #84]	; 0x54
   28eb8:	str	r3, [fp, #-20]	; 0xffffffec
   28ebc:	ldr	r3, [fp, #-20]	; 0xffffffec
   28ec0:	ldr	r2, [r3]
   28ec4:	ldr	r3, [fp, #8]
   28ec8:	lsl	r3, r3, #3
   28ecc:	add	r3, r2, r3
   28ed0:	ldrb	r3, [r3, #4]
   28ed4:	and	r3, r3, #8
   28ed8:	cmp	r3, #0
   28edc:	beq	29074 <__assert_fail@plt+0x17b30>
   28ee0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   28ee4:	ldr	r2, [r3, #100]	; 0x64
   28ee8:	ldr	r3, [fp, #4]
   28eec:	ldr	r3, [r3]
   28ef0:	lsl	r3, r3, #2
   28ef4:	add	r3, r2, r3
   28ef8:	ldr	r3, [r3]
   28efc:	add	r3, r3, #4
   28f00:	str	r3, [fp, #-24]	; 0xffffffe8
   28f04:	ldr	r3, [fp, #-20]	; 0xffffffec
   28f08:	ldr	r1, [r3, #20]
   28f0c:	ldr	r2, [fp, #8]
   28f10:	mov	r3, r2
   28f14:	lsl	r3, r3, #1
   28f18:	add	r3, r3, r2
   28f1c:	lsl	r3, r3, #2
   28f20:	add	r3, r1, r3
   28f24:	str	r3, [fp, #-28]	; 0xffffffe4
   28f28:	ldr	r1, [fp, #8]
   28f2c:	ldr	r0, [fp, #12]
   28f30:	bl	1c21c <__assert_fail@plt+0xacd8>
   28f34:	mov	r3, r0
   28f38:	cmp	r3, #0
   28f3c:	bne	28f70 <__assert_fail@plt+0x17a2c>
   28f40:	ldr	r1, [fp, #8]
   28f44:	ldr	r0, [fp, #12]
   28f48:	bl	1bdf4 <__assert_fail@plt+0xa8b0>
   28f4c:	mov	r3, r0
   28f50:	strb	r3, [fp, #-29]	; 0xffffffe3
   28f54:	ldrb	r3, [fp, #-29]	; 0xffffffe3
   28f58:	eor	r3, r3, #1
   28f5c:	uxtb	r3, r3
   28f60:	cmp	r3, #0
   28f64:	beq	28f70 <__assert_fail@plt+0x17a2c>
   28f68:	mvn	r3, #1
   28f6c:	b	2940c <__assert_fail@plt+0x17ec8>
   28f70:	mvn	r3, #0
   28f74:	str	r3, [fp, #-8]
   28f78:	mov	r3, #0
   28f7c:	str	r3, [fp, #-12]
   28f80:	b	29050 <__assert_fail@plt+0x17b0c>
   28f84:	ldr	r3, [fp, #-28]	; 0xffffffe4
   28f88:	ldr	r2, [r3, #8]
   28f8c:	ldr	r3, [fp, #-12]
   28f90:	lsl	r3, r3, #2
   28f94:	add	r3, r2, r3
   28f98:	ldr	r3, [r3]
   28f9c:	str	r3, [fp, #-36]	; 0xffffffdc
   28fa0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   28fa4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   28fa8:	bl	1c21c <__assert_fail@plt+0xacd8>
   28fac:	mov	r3, r0
   28fb0:	cmp	r3, #0
   28fb4:	beq	29040 <__assert_fail@plt+0x17afc>
   28fb8:	ldr	r3, [fp, #-8]
   28fbc:	cmn	r3, #1
   28fc0:	bne	28fd0 <__assert_fail@plt+0x17a8c>
   28fc4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   28fc8:	str	r3, [fp, #-8]
   28fcc:	b	29044 <__assert_fail@plt+0x17b00>
   28fd0:	ldr	r1, [fp, #-8]
   28fd4:	ldr	r0, [fp, #12]
   28fd8:	bl	1c21c <__assert_fail@plt+0xacd8>
   28fdc:	mov	r3, r0
   28fe0:	cmp	r3, #0
   28fe4:	beq	28ff0 <__assert_fail@plt+0x17aac>
   28fe8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   28fec:	b	2940c <__assert_fail@plt+0x17ec8>
   28ff0:	ldr	r3, [fp, #16]
   28ff4:	cmp	r3, #0
   28ff8:	beq	29068 <__assert_fail@plt+0x17b24>
   28ffc:	ldr	r3, [fp, #4]
   29000:	ldr	r1, [r3]
   29004:	ldr	r3, [fp, #12]
   29008:	str	r3, [sp, #8]
   2900c:	ldr	r3, [fp, #-76]	; 0xffffffb4
   29010:	str	r3, [sp, #4]
   29014:	ldr	r3, [fp, #-72]	; 0xffffffb8
   29018:	str	r3, [sp]
   2901c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   29020:	ldr	r2, [fp, #-36]	; 0xffffffdc
   29024:	ldr	r0, [fp, #16]
   29028:	bl	29420 <__assert_fail@plt+0x17edc>
   2902c:	mov	r3, r0
   29030:	cmp	r3, #0
   29034:	beq	29068 <__assert_fail@plt+0x17b24>
   29038:	mvn	r3, #1
   2903c:	b	2940c <__assert_fail@plt+0x17ec8>
   29040:	nop	{0}
   29044:	ldr	r3, [fp, #-12]
   29048:	add	r3, r3, #1
   2904c:	str	r3, [fp, #-12]
   29050:	ldr	r3, [fp, #-28]	; 0xffffffe4
   29054:	ldr	r3, [r3, #4]
   29058:	ldr	r2, [fp, #-12]
   2905c:	cmp	r2, r3
   29060:	blt	28f84 <__assert_fail@plt+0x17a40>
   29064:	b	2906c <__assert_fail@plt+0x17b28>
   29068:	nop	{0}
   2906c:	ldr	r3, [fp, #-8]
   29070:	b	2940c <__assert_fail@plt+0x17ec8>
   29074:	mov	r3, #0
   29078:	str	r3, [fp, #-16]
   2907c:	ldr	r3, [fp, #-20]	; 0xffffffec
   29080:	ldr	r2, [r3]
   29084:	ldr	r3, [fp, #8]
   29088:	lsl	r3, r3, #3
   2908c:	add	r3, r2, r3
   29090:	ldrb	r3, [r3, #4]
   29094:	str	r3, [fp, #-40]	; 0xffffffd8
   29098:	ldr	r3, [fp, #-20]	; 0xffffffec
   2909c:	ldr	r2, [r3]
   290a0:	ldr	r3, [fp, #8]
   290a4:	lsl	r3, r3, #3
   290a8:	add	r3, r2, r3
   290ac:	ldrb	r3, [r3, #6]
   290b0:	and	r3, r3, #16
   290b4:	uxtb	r3, r3
   290b8:	cmp	r3, #0
   290bc:	beq	290e0 <__assert_fail@plt+0x17b9c>
   290c0:	ldr	r2, [fp, #-64]	; 0xffffffc0
   290c4:	ldr	r3, [fp, #4]
   290c8:	ldr	r3, [r3]
   290cc:	ldr	r1, [fp, #8]
   290d0:	ldr	r0, [fp, #-20]	; 0xffffffec
   290d4:	bl	30210 <__assert_fail@plt+0x1eccc>
   290d8:	str	r0, [fp, #-16]
   290dc:	b	292dc <__assert_fail@plt+0x17d98>
   290e0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   290e4:	cmp	r3, #4
   290e8:	bne	292dc <__assert_fail@plt+0x17d98>
   290ec:	ldr	r3, [fp, #-20]	; 0xffffffec
   290f0:	ldr	r2, [r3]
   290f4:	ldr	r3, [fp, #8]
   290f8:	lsl	r3, r3, #3
   290fc:	add	r3, r2, r3
   29100:	ldr	r3, [r3]
   29104:	add	r3, r3, #1
   29108:	str	r3, [fp, #-44]	; 0xffffffd4
   2910c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   29110:	ldr	r3, [fp, #-68]	; 0xffffffbc
   29114:	cmp	r2, r3
   29118:	bge	2914c <__assert_fail@plt+0x17c08>
   2911c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   29120:	lsl	r3, r3, #3
   29124:	ldr	r2, [fp, #-72]	; 0xffffffb8
   29128:	add	r3, r2, r3
   2912c:	ldr	r2, [r3, #4]
   29130:	ldr	r3, [fp, #-44]	; 0xffffffd4
   29134:	lsl	r3, r3, #3
   29138:	ldr	r1, [fp, #-72]	; 0xffffffb8
   2913c:	add	r3, r1, r3
   29140:	ldr	r3, [r3]
   29144:	sub	r3, r2, r3
   29148:	str	r3, [fp, #-16]
   2914c:	ldr	r3, [fp, #16]
   29150:	cmp	r3, #0
   29154:	beq	29234 <__assert_fail@plt+0x17cf0>
   29158:	ldr	r2, [fp, #-44]	; 0xffffffd4
   2915c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   29160:	cmp	r2, r3
   29164:	bge	291a0 <__assert_fail@plt+0x17c5c>
   29168:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2916c:	lsl	r3, r3, #3
   29170:	ldr	r2, [fp, #-72]	; 0xffffffb8
   29174:	add	r3, r2, r3
   29178:	ldr	r3, [r3]
   2917c:	cmn	r3, #1
   29180:	beq	291a0 <__assert_fail@plt+0x17c5c>
   29184:	ldr	r3, [fp, #-44]	; 0xffffffd4
   29188:	lsl	r3, r3, #3
   2918c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   29190:	add	r3, r2, r3
   29194:	ldr	r3, [r3, #4]
   29198:	cmn	r3, #1
   2919c:	bne	291a8 <__assert_fail@plt+0x17c64>
   291a0:	mvn	r3, #0
   291a4:	b	2940c <__assert_fail@plt+0x17ec8>
   291a8:	ldr	r3, [fp, #-16]
   291ac:	cmp	r3, #0
   291b0:	beq	29234 <__assert_fail@plt+0x17cf0>
   291b4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   291b8:	ldr	r3, [r3, #4]
   291bc:	str	r3, [fp, #-48]	; 0xffffffd0
   291c0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   291c4:	ldr	r2, [r3, #28]
   291c8:	ldr	r3, [fp, #4]
   291cc:	ldr	r3, [r3]
   291d0:	sub	r3, r2, r3
   291d4:	ldr	r2, [fp, #-16]
   291d8:	cmp	r2, r3
   291dc:	bgt	2922c <__assert_fail@plt+0x17ce8>
   291e0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   291e4:	lsl	r3, r3, #3
   291e8:	ldr	r2, [fp, #-72]	; 0xffffffb8
   291ec:	add	r3, r2, r3
   291f0:	ldr	r3, [r3]
   291f4:	mov	r2, r3
   291f8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   291fc:	add	r0, r3, r2
   29200:	ldr	r3, [fp, #4]
   29204:	ldr	r3, [r3]
   29208:	mov	r2, r3
   2920c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   29210:	add	r3, r3, r2
   29214:	ldr	r2, [fp, #-16]
   29218:	mov	r1, r3
   2921c:	bl	112a4 <memcmp@plt>
   29220:	mov	r3, r0
   29224:	cmp	r3, #0
   29228:	beq	29234 <__assert_fail@plt+0x17cf0>
   2922c:	mvn	r3, #0
   29230:	b	2940c <__assert_fail@plt+0x17ec8>
   29234:	ldr	r3, [fp, #-16]
   29238:	cmp	r3, #0
   2923c:	bne	292dc <__assert_fail@plt+0x17d98>
   29240:	ldr	r1, [fp, #8]
   29244:	ldr	r0, [fp, #12]
   29248:	bl	1bdf4 <__assert_fail@plt+0xa8b0>
   2924c:	mov	r3, r0
   29250:	strb	r3, [fp, #-49]	; 0xffffffcf
   29254:	ldrb	r3, [fp, #-49]	; 0xffffffcf
   29258:	eor	r3, r3, #1
   2925c:	uxtb	r3, r3
   29260:	cmp	r3, #0
   29264:	beq	29270 <__assert_fail@plt+0x17d2c>
   29268:	mvn	r3, #1
   2926c:	b	2940c <__assert_fail@plt+0x17ec8>
   29270:	ldr	r3, [fp, #-20]	; 0xffffffec
   29274:	ldr	r1, [r3, #20]
   29278:	ldr	r2, [fp, #8]
   2927c:	mov	r3, r2
   29280:	lsl	r3, r3, #1
   29284:	add	r3, r3, r2
   29288:	lsl	r3, r3, #2
   2928c:	add	r3, r1, r3
   29290:	ldr	r3, [r3, #8]
   29294:	ldr	r3, [r3]
   29298:	str	r3, [fp, #-56]	; 0xffffffc8
   2929c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   292a0:	ldr	r2, [r3, #100]	; 0x64
   292a4:	ldr	r3, [fp, #4]
   292a8:	ldr	r3, [r3]
   292ac:	lsl	r3, r3, #2
   292b0:	add	r3, r2, r3
   292b4:	ldr	r3, [r3]
   292b8:	add	r3, r3, #4
   292bc:	ldr	r1, [fp, #-56]	; 0xffffffc8
   292c0:	mov	r0, r3
   292c4:	bl	1c21c <__assert_fail@plt+0xacd8>
   292c8:	mov	r3, r0
   292cc:	cmp	r3, #0
   292d0:	beq	292dc <__assert_fail@plt+0x17d98>
   292d4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   292d8:	b	2940c <__assert_fail@plt+0x17ec8>
   292dc:	ldr	r3, [fp, #-16]
   292e0:	cmp	r3, #0
   292e4:	bne	2931c <__assert_fail@plt+0x17dd8>
   292e8:	ldr	r3, [fp, #-20]	; 0xffffffec
   292ec:	ldr	r2, [r3]
   292f0:	ldr	r3, [fp, #8]
   292f4:	lsl	r3, r3, #3
   292f8:	add	r1, r2, r3
   292fc:	ldr	r3, [fp, #4]
   29300:	ldr	r3, [r3]
   29304:	mov	r2, r3
   29308:	ldr	r0, [fp, #-64]	; 0xffffffc0
   2930c:	bl	30780 <__assert_fail@plt+0x1f23c>
   29310:	mov	r3, r0
   29314:	cmp	r3, #0
   29318:	beq	29408 <__assert_fail@plt+0x17ec4>
   2931c:	ldr	r3, [fp, #-20]	; 0xffffffec
   29320:	ldr	r2, [r3, #12]
   29324:	ldr	r3, [fp, #8]
   29328:	lsl	r3, r3, #2
   2932c:	add	r3, r2, r3
   29330:	ldr	r3, [r3]
   29334:	str	r3, [fp, #-60]	; 0xffffffc4
   29338:	ldr	r3, [fp, #-16]
   2933c:	cmp	r3, #0
   29340:	bne	29354 <__assert_fail@plt+0x17e10>
   29344:	ldr	r3, [fp, #4]
   29348:	ldr	r3, [r3]
   2934c:	add	r3, r3, #1
   29350:	b	29364 <__assert_fail@plt+0x17e20>
   29354:	ldr	r3, [fp, #4]
   29358:	ldr	r2, [r3]
   2935c:	ldr	r3, [fp, #-16]
   29360:	add	r3, r2, r3
   29364:	ldr	r2, [fp, #4]
   29368:	str	r3, [r2]
   2936c:	ldr	r3, [fp, #16]
   29370:	cmp	r3, #0
   29374:	beq	293f4 <__assert_fail@plt+0x17eb0>
   29378:	ldr	r3, [fp, #4]
   2937c:	ldr	r2, [r3]
   29380:	ldr	r3, [fp, #-64]	; 0xffffffc0
   29384:	ldr	r3, [r3, #92]	; 0x5c
   29388:	cmp	r2, r3
   2938c:	bgt	293ec <__assert_fail@plt+0x17ea8>
   29390:	ldr	r3, [fp, #-64]	; 0xffffffc0
   29394:	ldr	r2, [r3, #100]	; 0x64
   29398:	ldr	r3, [fp, #4]
   2939c:	ldr	r3, [r3]
   293a0:	lsl	r3, r3, #2
   293a4:	add	r3, r2, r3
   293a8:	ldr	r3, [r3]
   293ac:	cmp	r3, #0
   293b0:	beq	293ec <__assert_fail@plt+0x17ea8>
   293b4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   293b8:	ldr	r2, [r3, #100]	; 0x64
   293bc:	ldr	r3, [fp, #4]
   293c0:	ldr	r3, [r3]
   293c4:	lsl	r3, r3, #2
   293c8:	add	r3, r2, r3
   293cc:	ldr	r3, [r3]
   293d0:	add	r3, r3, #4
   293d4:	ldr	r1, [fp, #-60]	; 0xffffffc4
   293d8:	mov	r0, r3
   293dc:	bl	1c21c <__assert_fail@plt+0xacd8>
   293e0:	mov	r3, r0
   293e4:	cmp	r3, #0
   293e8:	bne	293f4 <__assert_fail@plt+0x17eb0>
   293ec:	mvn	r3, #0
   293f0:	b	2940c <__assert_fail@plt+0x17ec8>
   293f4:	ldr	r3, [fp, #12]
   293f8:	mov	r2, #0
   293fc:	str	r2, [r3, #4]
   29400:	ldr	r3, [fp, #-60]	; 0xffffffc4
   29404:	b	2940c <__assert_fail@plt+0x17ec8>
   29408:	mvn	r3, #0
   2940c:	mov	r0, r3
   29410:	sub	sp, fp, #4
   29414:	ldr	fp, [sp]
   29418:	add	sp, sp, #4
   2941c:	pop	{pc}		; (ldr pc, [sp], #4)
   29420:	str	r4, [sp, #-12]!
   29424:	str	fp, [sp, #4]
   29428:	str	lr, [sp, #8]
   2942c:	add	fp, sp, #8
   29430:	sub	sp, sp, #36	; 0x24
   29434:	str	r0, [fp, #-32]	; 0xffffffe0
   29438:	str	r1, [fp, #-36]	; 0xffffffdc
   2943c:	str	r2, [fp, #-40]	; 0xffffffd8
   29440:	str	r3, [fp, #-44]	; 0xffffffd4
   29444:	ldr	r3, [fp, #-32]	; 0xffffffe0
   29448:	ldr	r3, [r3]
   2944c:	add	r1, r3, #1
   29450:	ldr	r2, [fp, #-32]	; 0xffffffe0
   29454:	str	r1, [r2]
   29458:	str	r3, [fp, #-16]
   2945c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   29460:	ldr	r2, [r3]
   29464:	ldr	r3, [fp, #-32]	; 0xffffffe0
   29468:	ldr	r3, [r3, #4]
   2946c:	cmp	r2, r3
   29470:	bne	294d8 <__assert_fail@plt+0x17f94>
   29474:	ldr	r3, [fp, #-32]	; 0xffffffe0
   29478:	ldr	r0, [r3, #8]
   2947c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   29480:	ldr	r3, [r3, #4]
   29484:	mov	r2, r3
   29488:	mov	r3, r2
   2948c:	lsl	r3, r3, #1
   29490:	add	r3, r3, r2
   29494:	lsl	r3, r3, #4
   29498:	mov	r1, r3
   2949c:	bl	33c30 <__assert_fail@plt+0x226ec>
   294a0:	str	r0, [fp, #-20]	; 0xffffffec
   294a4:	ldr	r3, [fp, #-20]	; 0xffffffec
   294a8:	cmp	r3, #0
   294ac:	bne	294b8 <__assert_fail@plt+0x17f74>
   294b0:	mov	r3, #12
   294b4:	b	29644 <__assert_fail@plt+0x18100>
   294b8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   294bc:	ldr	r3, [r3, #4]
   294c0:	lsl	r2, r3, #1
   294c4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   294c8:	str	r2, [r3, #4]
   294cc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   294d0:	ldr	r2, [fp, #-20]	; 0xffffffec
   294d4:	str	r2, [r3, #8]
   294d8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   294dc:	ldr	r1, [r3, #8]
   294e0:	ldr	r2, [fp, #-16]
   294e4:	mov	r3, r2
   294e8:	lsl	r3, r3, #1
   294ec:	add	r3, r3, r2
   294f0:	lsl	r3, r3, #3
   294f4:	add	r3, r1, r3
   294f8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   294fc:	str	r2, [r3]
   29500:	ldr	r3, [fp, #-32]	; 0xffffffe0
   29504:	ldr	r1, [r3, #8]
   29508:	ldr	r2, [fp, #-16]
   2950c:	mov	r3, r2
   29510:	lsl	r3, r3, #1
   29514:	add	r3, r3, r2
   29518:	lsl	r3, r3, #3
   2951c:	add	r3, r1, r3
   29520:	ldr	r2, [fp, #-40]	; 0xffffffd8
   29524:	str	r2, [r3, #4]
   29528:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2952c:	lsl	r0, r3, #4
   29530:	ldr	r3, [fp, #-32]	; 0xffffffe0
   29534:	ldr	r1, [r3, #8]
   29538:	ldr	r2, [fp, #-16]
   2953c:	mov	r3, r2
   29540:	lsl	r3, r3, #1
   29544:	add	r3, r3, r2
   29548:	lsl	r3, r3, #3
   2954c:	add	r4, r1, r3
   29550:	bl	33ba0 <__assert_fail@plt+0x2265c>
   29554:	mov	r3, r0
   29558:	str	r3, [r4, #8]
   2955c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   29560:	ldr	r1, [r3, #8]
   29564:	ldr	r2, [fp, #-16]
   29568:	mov	r3, r2
   2956c:	lsl	r3, r3, #1
   29570:	add	r3, r3, r2
   29574:	lsl	r3, r3, #3
   29578:	add	r3, r1, r3
   2957c:	ldr	r3, [r3, #8]
   29580:	cmp	r3, #0
   29584:	bne	29590 <__assert_fail@plt+0x1804c>
   29588:	mov	r3, #12
   2958c:	b	29644 <__assert_fail@plt+0x18100>
   29590:	ldr	r3, [fp, #-32]	; 0xffffffe0
   29594:	ldr	r1, [r3, #8]
   29598:	ldr	r2, [fp, #-16]
   2959c:	mov	r3, r2
   295a0:	lsl	r3, r3, #1
   295a4:	add	r3, r3, r2
   295a8:	lsl	r3, r3, #3
   295ac:	add	r3, r1, r3
   295b0:	ldr	r0, [r3, #8]
   295b4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   295b8:	lsl	r3, r3, #3
   295bc:	mov	r2, r3
   295c0:	ldr	r1, [fp, #4]
   295c4:	bl	11250 <memcpy@plt>
   295c8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   295cc:	ldr	r1, [r3, #8]
   295d0:	ldr	r2, [fp, #-16]
   295d4:	mov	r3, r2
   295d8:	lsl	r3, r3, #1
   295dc:	add	r3, r3, r2
   295e0:	lsl	r3, r3, #3
   295e4:	add	r3, r1, r3
   295e8:	ldr	r2, [r3, #8]
   295ec:	ldr	r3, [fp, #-44]	; 0xffffffd4
   295f0:	lsl	r3, r3, #3
   295f4:	add	r0, r2, r3
   295f8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   295fc:	lsl	r3, r3, #3
   29600:	mov	r2, r3
   29604:	ldr	r1, [fp, #8]
   29608:	bl	11250 <memcpy@plt>
   2960c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   29610:	ldr	r1, [r3, #8]
   29614:	ldr	r2, [fp, #-16]
   29618:	mov	r3, r2
   2961c:	lsl	r3, r3, #1
   29620:	add	r3, r3, r2
   29624:	lsl	r3, r3, #3
   29628:	add	r3, r1, r3
   2962c:	add	r3, r3, #12
   29630:	ldr	r1, [fp, #12]
   29634:	mov	r0, r3
   29638:	bl	1b068 <__assert_fail@plt+0x9b24>
   2963c:	str	r0, [fp, #-24]	; 0xffffffe8
   29640:	ldr	r3, [fp, #-24]	; 0xffffffe8
   29644:	mov	r0, r3
   29648:	sub	sp, fp, #8
   2964c:	ldr	r4, [sp]
   29650:	ldr	fp, [sp, #4]
   29654:	add	sp, sp, #8
   29658:	pop	{pc}		; (ldr pc, [sp], #4)
   2965c:	str	fp, [sp, #-8]!
   29660:	str	lr, [sp, #4]
   29664:	add	fp, sp, #4
   29668:	sub	sp, sp, #24
   2966c:	str	r0, [fp, #-16]
   29670:	str	r1, [fp, #-20]	; 0xffffffec
   29674:	str	r2, [fp, #-24]	; 0xffffffe8
   29678:	str	r3, [fp, #-28]	; 0xffffffe4
   2967c:	ldr	r3, [fp, #-16]
   29680:	cmp	r3, #0
   29684:	beq	29698 <__assert_fail@plt+0x18154>
   29688:	ldr	r3, [fp, #-16]
   2968c:	ldr	r3, [r3]
   29690:	cmp	r3, #0
   29694:	bne	296a0 <__assert_fail@plt+0x1815c>
   29698:	mvn	r3, #0
   2969c:	b	2982c <__assert_fail@plt+0x182e8>
   296a0:	ldr	r3, [fp, #-16]
   296a4:	ldr	r3, [r3]
   296a8:	sub	r2, r3, #1
   296ac:	ldr	r3, [fp, #-16]
   296b0:	str	r2, [r3]
   296b4:	ldr	r3, [fp, #-16]
   296b8:	ldr	r3, [r3]
   296bc:	str	r3, [fp, #-8]
   296c0:	ldr	r3, [fp, #-16]
   296c4:	ldr	r1, [r3, #8]
   296c8:	ldr	r2, [fp, #-8]
   296cc:	mov	r3, r2
   296d0:	lsl	r3, r3, #1
   296d4:	add	r3, r3, r2
   296d8:	lsl	r3, r3, #3
   296dc:	add	r3, r1, r3
   296e0:	ldr	r2, [r3]
   296e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   296e8:	str	r2, [r3]
   296ec:	ldr	r3, [fp, #-16]
   296f0:	ldr	r1, [r3, #8]
   296f4:	ldr	r2, [fp, #-8]
   296f8:	mov	r3, r2
   296fc:	lsl	r3, r3, #1
   29700:	add	r3, r3, r2
   29704:	lsl	r3, r3, #3
   29708:	add	r3, r1, r3
   2970c:	ldr	r1, [r3, #8]
   29710:	ldr	r3, [fp, #-24]	; 0xffffffe8
   29714:	lsl	r3, r3, #3
   29718:	mov	r2, r3
   2971c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   29720:	bl	11250 <memcpy@plt>
   29724:	ldr	r3, [fp, #-16]
   29728:	ldr	r1, [r3, #8]
   2972c:	ldr	r2, [fp, #-8]
   29730:	mov	r3, r2
   29734:	lsl	r3, r3, #1
   29738:	add	r3, r3, r2
   2973c:	lsl	r3, r3, #3
   29740:	add	r3, r1, r3
   29744:	ldr	r2, [r3, #8]
   29748:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2974c:	lsl	r3, r3, #3
   29750:	add	r1, r2, r3
   29754:	ldr	r3, [fp, #-24]	; 0xffffffe8
   29758:	lsl	r3, r3, #3
   2975c:	mov	r2, r3
   29760:	ldr	r0, [fp, #4]
   29764:	bl	11250 <memcpy@plt>
   29768:	ldr	r3, [fp, #8]
   2976c:	ldr	r3, [r3, #8]
   29770:	mov	r0, r3
   29774:	bl	151ec <__assert_fail@plt+0x3ca8>
   29778:	ldr	r3, [fp, #-16]
   2977c:	ldr	r1, [r3, #8]
   29780:	ldr	r2, [fp, #-8]
   29784:	mov	r3, r2
   29788:	lsl	r3, r3, #1
   2978c:	add	r3, r3, r2
   29790:	lsl	r3, r3, #3
   29794:	add	r3, r1, r3
   29798:	ldr	r3, [r3, #8]
   2979c:	mov	r0, r3
   297a0:	bl	151ec <__assert_fail@plt+0x3ca8>
   297a4:	ldr	r3, [fp, #-16]
   297a8:	ldr	r1, [r3, #8]
   297ac:	ldr	r2, [fp, #-8]
   297b0:	mov	r3, r2
   297b4:	lsl	r3, r3, #1
   297b8:	add	r3, r3, r2
   297bc:	lsl	r3, r3, #3
   297c0:	add	r3, r1, r3
   297c4:	ldr	r2, [fp, #8]
   297c8:	mov	r0, r2
   297cc:	add	r1, r3, #12
   297d0:	ldrd	r2, [r1]
   297d4:	strd	r2, [r0]
   297d8:	ldr	r3, [r1, #8]
   297dc:	str	r3, [r0, #8]
   297e0:	ldr	r3, [fp, #-16]
   297e4:	ldr	r1, [r3, #8]
   297e8:	ldr	r2, [fp, #-8]
   297ec:	mov	r3, r2
   297f0:	lsl	r3, r3, #1
   297f4:	add	r3, r3, r2
   297f8:	lsl	r3, r3, #3
   297fc:	add	r3, r1, r3
   29800:	ldr	r3, [r3, #4]
   29804:	cmp	r3, #0
   29808:	ldr	r3, [fp, #-16]
   2980c:	ldr	r1, [r3, #8]
   29810:	ldr	r2, [fp, #-8]
   29814:	mov	r3, r2
   29818:	lsl	r3, r3, #1
   2981c:	add	r3, r3, r2
   29820:	lsl	r3, r3, #3
   29824:	add	r3, r1, r3
   29828:	ldr	r3, [r3, #4]
   2982c:	mov	r0, r3
   29830:	sub	sp, fp, #4
   29834:	ldr	fp, [sp]
   29838:	add	sp, sp, #4
   2983c:	pop	{pc}		; (ldr pc, [sp], #4)
   29840:	push	{fp}		; (str fp, [sp, #-4]!)
   29844:	add	fp, sp, #0
   29848:	sub	sp, sp, #12
   2984c:	str	r0, [fp, #-8]
   29850:	str	r1, [fp, #-12]
   29854:	nop	{0}
   29858:	add	sp, fp, #0
   2985c:	pop	{fp}		; (ldr fp, [sp], #4)
   29860:	bx	lr
   29864:	str	fp, [sp, #-8]!
   29868:	str	lr, [sp, #4]
   2986c:	add	fp, sp, #4
   29870:	sub	sp, sp, #8
   29874:	str	r0, [fp, #-8]
   29878:	ldr	r3, [fp, #-8]
   2987c:	ldr	r2, [r3, #8]
   29880:	ldr	r3, [fp, #-8]
   29884:	add	r3, r3, #12
   29888:	cmp	r2, r3
   2988c:	beq	298a0 <__assert_fail@plt+0x1835c>
   29890:	ldr	r3, [fp, #-8]
   29894:	ldr	r3, [r3, #8]
   29898:	mov	r0, r3
   2989c:	bl	151ec <__assert_fail@plt+0x3ca8>
   298a0:	nop	{0}
   298a4:	sub	sp, fp, #4
   298a8:	ldr	fp, [sp]
   298ac:	add	sp, sp, #4
   298b0:	pop	{pc}		; (ldr pc, [sp], #4)
   298b4:	push	{fp}		; (str fp, [sp, #-4]!)
   298b8:	add	fp, sp, #0
   298bc:	sub	sp, sp, #12
   298c0:	str	r0, [fp, #-8]
   298c4:	ldr	r3, [fp, #-8]
   298c8:	mov	r2, #0
   298cc:	str	r2, [r3]
   298d0:	ldr	r3, [fp, #-8]
   298d4:	mov	r2, #16
   298d8:	str	r2, [r3, #4]
   298dc:	ldr	r3, [fp, #-8]
   298e0:	add	r2, r3, #12
   298e4:	ldr	r3, [fp, #-8]
   298e8:	str	r2, [r3, #8]
   298ec:	nop	{0}
   298f0:	add	sp, fp, #0
   298f4:	pop	{fp}		; (ldr fp, [sp], #4)
   298f8:	bx	lr
   298fc:	str	fp, [sp, #-8]!
   29900:	str	lr, [sp, #4]
   29904:	add	fp, sp, #4
   29908:	sub	sp, sp, #8
   2990c:	str	r0, [fp, #-8]
   29910:	ldr	r3, [fp, #-8]
   29914:	ldr	r2, [r3, #8]
   29918:	ldr	r3, [fp, #-8]
   2991c:	ldr	r3, [r3]
   29920:	mov	r1, r3
   29924:	mov	r0, r2
   29928:	bl	29840 <__assert_fail@plt+0x182fc>
   2992c:	ldr	r0, [fp, #-8]
   29930:	bl	29864 <__assert_fail@plt+0x18320>
   29934:	ldr	r0, [fp, #-8]
   29938:	bl	298b4 <__assert_fail@plt+0x18370>
   2993c:	nop	{0}
   29940:	sub	sp, fp, #4
   29944:	ldr	fp, [sp]
   29948:	add	sp, sp, #4
   2994c:	pop	{pc}		; (ldr pc, [sp], #4)
   29950:	str	fp, [sp, #-8]!
   29954:	str	lr, [sp, #4]
   29958:	add	fp, sp, #4
   2995c:	sub	sp, sp, #8
   29960:	str	r0, [fp, #-8]
   29964:	ldr	r3, [fp, #-8]
   29968:	ldr	r2, [r3, #8]
   2996c:	ldr	r3, [fp, #-8]
   29970:	ldr	r3, [r3]
   29974:	mov	r1, r3
   29978:	mov	r0, r2
   2997c:	bl	29840 <__assert_fail@plt+0x182fc>
   29980:	ldr	r0, [fp, #-8]
   29984:	bl	29864 <__assert_fail@plt+0x18320>
   29988:	ldr	r3, [fp, #-8]
   2998c:	add	r2, r3, #12
   29990:	ldr	r3, [fp, #-8]
   29994:	str	r2, [r3, #8]
   29998:	ldr	r3, [fp, #-8]
   2999c:	mov	r2, #0
   299a0:	str	r2, [r3]
   299a4:	bl	17e3c <__assert_fail@plt+0x68f8>
   299a8:	mov	r2, r0
   299ac:	ldr	r3, [fp, #-8]
   299b0:	str	r2, [r3, #4]
   299b4:	nop	{0}
   299b8:	sub	sp, fp, #4
   299bc:	ldr	fp, [sp]
   299c0:	add	sp, sp, #4
   299c4:	pop	{pc}		; (ldr pc, [sp], #4)
   299c8:	push	{fp}		; (str fp, [sp, #-4]!)
   299cc:	add	fp, sp, #0
   299d0:	sub	sp, sp, #12
   299d4:	str	r0, [fp, #-8]
   299d8:	ldr	r3, [fp, #-8]
   299dc:	ldr	r3, [r3, #8]
   299e0:	mov	r0, r3
   299e4:	add	sp, fp, #0
   299e8:	pop	{fp}		; (ldr fp, [sp], #4)
   299ec:	bx	lr
   299f0:	str	fp, [sp, #-8]!
   299f4:	str	lr, [sp, #4]
   299f8:	add	fp, sp, #4
   299fc:	sub	sp, sp, #16
   29a00:	str	r0, [fp, #-8]
   29a04:	sub	r3, fp, #16
   29a08:	stm	r3, {r1, r2}
   29a0c:	ldr	r0, [fp, #-8]
   29a10:	ldr	r3, [fp, #-8]
   29a14:	add	r3, r3, #12
   29a18:	mov	r2, #8
   29a1c:	mov	r1, r3
   29a20:	bl	33e78 <__assert_fail@plt+0x22934>
   29a24:	mov	r3, r0
   29a28:	eor	r3, r3, #1
   29a2c:	uxtb	r3, r3
   29a30:	cmp	r3, #0
   29a34:	beq	29a44 <__assert_fail@plt+0x18500>
   29a38:	ldr	r0, [fp, #-8]
   29a3c:	bl	29950 <__assert_fail@plt+0x1840c>
   29a40:	b	29a78 <__assert_fail@plt+0x18534>
   29a44:	ldr	r3, [fp, #-8]
   29a48:	ldr	r2, [r3, #8]
   29a4c:	ldr	r3, [fp, #-8]
   29a50:	ldr	r3, [r3]
   29a54:	add	r0, r3, #1
   29a58:	ldr	r1, [fp, #-8]
   29a5c:	str	r0, [r1]
   29a60:	lsl	r3, r3, #3
   29a64:	add	r3, r2, r3
   29a68:	mov	r1, r3
   29a6c:	sub	r3, fp, #16
   29a70:	ldrd	r2, [r3]
   29a74:	strd	r2, [r1]
   29a78:	sub	sp, fp, #4
   29a7c:	ldr	fp, [sp]
   29a80:	add	sp, sp, #4
   29a84:	pop	{pc}		; (ldr pc, [sp], #4)
   29a88:	push	{fp}		; (str fp, [sp, #-4]!)
   29a8c:	add	fp, sp, #0
   29a90:	sub	sp, sp, #20
   29a94:	str	r0, [fp, #-16]
   29a98:	ldr	r3, [fp, #-16]
   29a9c:	ldr	r2, [r3, #8]
   29aa0:	ldr	r3, [fp, #-16]
   29aa4:	ldr	r3, [r3]
   29aa8:	lsl	r3, r3, #3
   29aac:	add	r3, r2, r3
   29ab0:	str	r3, [fp, #-8]
   29ab4:	ldr	r3, [fp, #-16]
   29ab8:	ldr	r3, [r3]
   29abc:	add	r2, r3, #1
   29ac0:	ldr	r3, [fp, #-16]
   29ac4:	str	r2, [r3]
   29ac8:	ldr	r3, [fp, #-8]
   29acc:	mov	r0, r3
   29ad0:	add	sp, fp, #0
   29ad4:	pop	{fp}		; (ldr fp, [sp], #4)
   29ad8:	bx	lr
   29adc:	str	fp, [sp, #-8]!
   29ae0:	str	lr, [sp, #4]
   29ae4:	add	fp, sp, #4
   29ae8:	sub	sp, sp, #8
   29aec:	str	r0, [fp, #-8]
   29af0:	ldr	r0, [fp, #-8]
   29af4:	ldr	r3, [fp, #-8]
   29af8:	add	r3, r3, #12
   29afc:	mov	r2, #8
   29b00:	mov	r1, r3
   29b04:	bl	33e78 <__assert_fail@plt+0x22934>
   29b08:	mov	r3, r0
   29b0c:	eor	r3, r3, #1
   29b10:	uxtb	r3, r3
   29b14:	cmp	r3, #0
   29b18:	beq	29b2c <__assert_fail@plt+0x185e8>
   29b1c:	ldr	r0, [fp, #-8]
   29b20:	bl	29950 <__assert_fail@plt+0x1840c>
   29b24:	mov	r3, #0
   29b28:	b	29b38 <__assert_fail@plt+0x185f4>
   29b2c:	ldr	r0, [fp, #-8]
   29b30:	bl	29a88 <__assert_fail@plt+0x18544>
   29b34:	mov	r3, r0
   29b38:	mov	r0, r3
   29b3c:	sub	sp, fp, #4
   29b40:	ldr	fp, [sp]
   29b44:	add	sp, sp, #4
   29b48:	pop	{pc}		; (ldr pc, [sp], #4)
   29b4c:	str	fp, [sp, #-8]!
   29b50:	str	lr, [sp, #4]
   29b54:	add	fp, sp, #4
   29b58:	sub	sp, sp, #16
   29b5c:	str	r0, [fp, #-16]
   29b60:	str	r1, [fp, #-20]	; 0xffffffec
   29b64:	ldr	r3, [fp, #-16]
   29b68:	ldr	r3, [r3]
   29b6c:	ldr	r2, [fp, #-20]	; 0xffffffec
   29b70:	cmp	r2, r3
   29b74:	bls	29bbc <__assert_fail@plt+0x18678>
   29b78:	ldr	r0, [fp, #-16]
   29b7c:	ldr	r3, [fp, #-16]
   29b80:	add	r2, r3, #12
   29b84:	mov	r3, #8
   29b88:	ldr	r1, [fp, #-20]	; 0xffffffec
   29b8c:	bl	341fc <__assert_fail@plt+0x22cb8>
   29b90:	mov	r3, r0
   29b94:	strb	r3, [fp, #-5]
   29b98:	ldrb	r3, [fp, #-5]
   29b9c:	eor	r3, r3, #1
   29ba0:	uxtb	r3, r3
   29ba4:	cmp	r3, #0
   29ba8:	beq	29bb4 <__assert_fail@plt+0x18670>
   29bac:	ldr	r0, [fp, #-16]
   29bb0:	bl	29950 <__assert_fail@plt+0x1840c>
   29bb4:	ldrb	r3, [fp, #-5]
   29bb8:	b	29bf8 <__assert_fail@plt+0x186b4>
   29bbc:	ldr	r3, [fp, #-16]
   29bc0:	ldr	r2, [r3, #8]
   29bc4:	ldr	r3, [fp, #-20]	; 0xffffffec
   29bc8:	lsl	r3, r3, #3
   29bcc:	add	r0, r2, r3
   29bd0:	ldr	r3, [fp, #-16]
   29bd4:	ldr	r2, [r3]
   29bd8:	ldr	r3, [fp, #-20]	; 0xffffffec
   29bdc:	sub	r3, r2, r3
   29be0:	mov	r1, r3
   29be4:	bl	29840 <__assert_fail@plt+0x182fc>
   29be8:	ldr	r3, [fp, #-16]
   29bec:	ldr	r2, [fp, #-20]	; 0xffffffec
   29bf0:	str	r2, [r3]
   29bf4:	mov	r3, #1
   29bf8:	mov	r0, r3
   29bfc:	sub	sp, fp, #4
   29c00:	ldr	fp, [sp]
   29c04:	add	sp, sp, #4
   29c08:	pop	{pc}		; (ldr pc, [sp], #4)
   29c0c:	push	{fp}		; (str fp, [sp, #-4]!)
   29c10:	add	fp, sp, #0
   29c14:	sub	sp, sp, #20
   29c18:	str	r0, [fp, #-16]
   29c1c:	ldr	r3, [fp, #-16]
   29c20:	ldr	r3, [r3]
   29c24:	cmp	r3, #0
   29c28:	beq	29c48 <__assert_fail@plt+0x18704>
   29c2c:	ldr	r3, [fp, #-16]
   29c30:	ldr	r3, [r3]
   29c34:	sub	r3, r3, #1
   29c38:	str	r3, [fp, #-8]
   29c3c:	ldr	r3, [fp, #-16]
   29c40:	ldr	r2, [fp, #-8]
   29c44:	str	r2, [r3]
   29c48:	nop	{0}
   29c4c:	add	sp, fp, #0
   29c50:	pop	{fp}		; (ldr fp, [sp], #4)
   29c54:	bx	lr
   29c58:	str	fp, [sp, #-8]!
   29c5c:	str	lr, [sp, #4]
   29c60:	add	fp, sp, #4
   29c64:	sub	sp, sp, #8
   29c68:	str	r0, [fp, #-8]
   29c6c:	ldr	r3, [fp, #-8]
   29c70:	ldr	r2, [r3, #8]
   29c74:	ldr	r3, [fp, #-8]
   29c78:	ldr	r3, [r3]
   29c7c:	mov	r1, r3
   29c80:	mov	r0, r2
   29c84:	bl	29840 <__assert_fail@plt+0x182fc>
   29c88:	ldr	r3, [fp, #-8]
   29c8c:	mov	r2, #0
   29c90:	str	r2, [r3]
   29c94:	nop	{0}
   29c98:	sub	sp, fp, #4
   29c9c:	ldr	fp, [sp]
   29ca0:	add	sp, sp, #4
   29ca4:	pop	{pc}		; (ldr pc, [sp], #4)
   29ca8:	str	fp, [sp, #-8]!
   29cac:	str	lr, [sp, #4]
   29cb0:	add	fp, sp, #4
   29cb4:	sub	sp, sp, #16
   29cb8:	str	r0, [fp, #-16]
   29cbc:	str	r1, [fp, #-20]	; 0xffffffec
   29cc0:	ldr	r0, [fp, #-16]
   29cc4:	ldr	r3, [fp, #-16]
   29cc8:	add	r1, r3, #12
   29ccc:	sub	r3, fp, #12
   29cd0:	mov	r2, #8
   29cd4:	bl	340b4 <__assert_fail@plt+0x22b70>
   29cd8:	mov	r3, r0
   29cdc:	cmp	r3, #0
   29ce0:	beq	29d0c <__assert_fail@plt+0x187c8>
   29ce4:	ldr	r0, [fp, #-16]
   29ce8:	bl	298b4 <__assert_fail@plt+0x18370>
   29cec:	ldr	r3, [fp, #-20]	; 0xffffffec
   29cf0:	cmp	r3, #0
   29cf4:	beq	29d04 <__assert_fail@plt+0x187c0>
   29cf8:	ldr	r2, [fp, #-8]
   29cfc:	ldr	r3, [fp, #-20]	; 0xffffffec
   29d00:	str	r2, [r3]
   29d04:	ldr	r3, [fp, #-12]
   29d08:	b	29d28 <__assert_fail@plt+0x187e4>
   29d0c:	ldr	r0, [fp, #-16]
   29d10:	bl	298fc <__assert_fail@plt+0x183b8>
   29d14:	bl	11418 <__errno_location@plt>
   29d18:	mov	r2, r0
   29d1c:	mov	r3, #12
   29d20:	str	r3, [r2]
   29d24:	mov	r3, #0
   29d28:	mov	r0, r3
   29d2c:	sub	sp, fp, #4
   29d30:	ldr	fp, [sp]
   29d34:	add	sp, sp, #4
   29d38:	pop	{pc}		; (ldr pc, [sp], #4)
   29d3c:	str	fp, [sp, #-8]!
   29d40:	str	lr, [sp, #4]
   29d44:	add	fp, sp, #4
   29d48:	sub	sp, sp, #224	; 0xe0
   29d4c:	str	r0, [fp, #-200]	; 0xffffff38
   29d50:	str	r1, [fp, #-204]	; 0xffffff34
   29d54:	str	r2, [fp, #-208]	; 0xffffff30
   29d58:	str	r3, [fp, #-212]	; 0xffffff2c
   29d5c:	ldr	r3, [fp, #-200]	; 0xffffff38
   29d60:	ldr	r3, [r3]
   29d64:	str	r3, [fp, #-20]	; 0xffffffec
   29d68:	mov	r3, #0
   29d6c:	str	r3, [fp, #-52]	; 0xffffffcc
   29d70:	mov	r3, #2
   29d74:	str	r3, [fp, #-48]	; 0xffffffd0
   29d78:	mov	r3, #0
   29d7c:	str	r3, [fp, #-44]	; 0xffffffd4
   29d80:	sub	r3, fp, #192	; 0xc0
   29d84:	mov	r0, r3
   29d88:	bl	298b4 <__assert_fail@plt+0x18370>
   29d8c:	ldr	r3, [fp, #-208]	; 0xffffff30
   29d90:	cmp	r3, #1
   29d94:	ldr	r3, [fp, #-204]	; 0xffffff34
   29d98:	ldr	r3, [r3, #100]	; 0x64
   29d9c:	cmp	r3, #0
   29da0:	ldrb	r3, [fp, #4]
   29da4:	cmp	r3, #0
   29da8:	beq	29e00 <__assert_fail@plt+0x188bc>
   29dac:	sub	r3, fp, #52	; 0x34
   29db0:	str	r3, [fp, #-12]
   29db4:	ldr	r3, [fp, #-12]
   29db8:	ldr	r3, [r3, #4]
   29dbc:	mov	r2, r3
   29dc0:	mov	r3, r2
   29dc4:	lsl	r3, r3, #1
   29dc8:	add	r3, r3, r2
   29dcc:	lsl	r3, r3, #3
   29dd0:	mov	r0, r3
   29dd4:	bl	33ba0 <__assert_fail@plt+0x2265c>
   29dd8:	mov	r3, r0
   29ddc:	mov	r2, r3
   29de0:	ldr	r3, [fp, #-12]
   29de4:	str	r2, [r3, #8]
   29de8:	ldr	r3, [fp, #-12]
   29dec:	ldr	r3, [r3, #8]
   29df0:	cmp	r3, #0
   29df4:	bne	29e08 <__assert_fail@plt+0x188c4>
   29df8:	mov	r3, #12
   29dfc:	b	2a10c <__assert_fail@plt+0x18bc8>
   29e00:	mov	r3, #0
   29e04:	str	r3, [fp, #-12]
   29e08:	ldr	r3, [fp, #-20]	; 0xffffffec
   29e0c:	ldr	r3, [r3, #72]	; 0x48
   29e10:	str	r3, [fp, #-8]
   29e14:	sub	r3, fp, #40	; 0x28
   29e18:	mov	r2, #12
   29e1c:	mov	r1, #0
   29e20:	mov	r0, r3
   29e24:	bl	11448 <memset@plt>
   29e28:	sub	r3, fp, #192	; 0xc0
   29e2c:	ldr	r1, [fp, #-208]	; 0xffffff30
   29e30:	mov	r0, r3
   29e34:	bl	29b4c <__assert_fail@plt+0x18608>
   29e38:	mov	r3, r0
   29e3c:	eor	r3, r3, #1
   29e40:	uxtb	r3, r3
   29e44:	cmp	r3, #0
   29e48:	beq	29e68 <__assert_fail@plt+0x18924>
   29e4c:	sub	r3, fp, #192	; 0xc0
   29e50:	mov	r0, r3
   29e54:	bl	298fc <__assert_fail@plt+0x183b8>
   29e58:	ldr	r0, [fp, #-12]
   29e5c:	bl	2a120 <__assert_fail@plt+0x18bdc>
   29e60:	mov	r3, #12
   29e64:	b	2a10c <__assert_fail@plt+0x18bc8>
   29e68:	sub	r3, fp, #192	; 0xc0
   29e6c:	mov	r0, r3
   29e70:	bl	299c8 <__assert_fail@plt+0x18484>
   29e74:	str	r0, [fp, #-24]	; 0xffffffe8
   29e78:	ldr	r3, [fp, #-208]	; 0xffffff30
   29e7c:	lsl	r3, r3, #3
   29e80:	mov	r2, r3
   29e84:	ldr	r1, [fp, #-212]	; 0xffffff2c
   29e88:	ldr	r0, [fp, #-24]	; 0xffffffe8
   29e8c:	bl	11250 <memcpy@plt>
   29e90:	ldr	r3, [fp, #-212]	; 0xffffff2c
   29e94:	ldr	r3, [r3]
   29e98:	str	r3, [fp, #-28]	; 0xffffffe4
   29e9c:	b	2a0d4 <__assert_fail@plt+0x18b90>
   29ea0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   29ea4:	ldr	r2, [fp, #-208]	; 0xffffff30
   29ea8:	str	r2, [sp, #4]
   29eac:	str	r3, [sp]
   29eb0:	ldr	r3, [fp, #-8]
   29eb4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   29eb8:	ldr	r1, [fp, #-212]	; 0xffffff2c
   29ebc:	ldr	r0, [fp, #-20]	; 0xffffffec
   29ec0:	bl	2a1ec <__assert_fail@plt+0x18ca8>
   29ec4:	ldr	r3, [fp, #-212]	; 0xffffff2c
   29ec8:	ldr	r2, [r3, #4]
   29ecc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   29ed0:	cmp	r2, r3
   29ed4:	bne	29eec <__assert_fail@plt+0x189a8>
   29ed8:	ldr	r3, [fp, #-204]	; 0xffffff34
   29edc:	ldr	r3, [r3, #96]	; 0x60
   29ee0:	ldr	r2, [fp, #-8]
   29ee4:	cmp	r2, r3
   29ee8:	beq	29f14 <__assert_fail@plt+0x189d0>
   29eec:	ldr	r3, [fp, #-12]
   29ef0:	cmp	r3, #0
   29ef4:	beq	29fe8 <__assert_fail@plt+0x18aa4>
   29ef8:	sub	r3, fp, #40	; 0x28
   29efc:	ldr	r1, [fp, #-8]
   29f00:	mov	r0, r3
   29f04:	bl	1c21c <__assert_fail@plt+0xacd8>
   29f08:	mov	r3, r0
   29f0c:	cmp	r3, #0
   29f10:	beq	29fe8 <__assert_fail@plt+0x18aa4>
   29f14:	mvn	r3, #0
   29f18:	str	r3, [fp, #-8]
   29f1c:	ldr	r3, [fp, #-12]
   29f20:	cmp	r3, #0
   29f24:	beq	29fb4 <__assert_fail@plt+0x18a70>
   29f28:	mov	r3, #0
   29f2c:	str	r3, [fp, #-16]
   29f30:	b	29fa4 <__assert_fail@plt+0x18a60>
   29f34:	ldr	r3, [fp, #-16]
   29f38:	lsl	r3, r3, #3
   29f3c:	ldr	r2, [fp, #-212]	; 0xffffff2c
   29f40:	add	r3, r2, r3
   29f44:	ldr	r3, [r3]
   29f48:	cmp	r3, #0
   29f4c:	blt	29f98 <__assert_fail@plt+0x18a54>
   29f50:	ldr	r3, [fp, #-16]
   29f54:	lsl	r3, r3, #3
   29f58:	ldr	r2, [fp, #-212]	; 0xffffff2c
   29f5c:	add	r3, r2, r3
   29f60:	ldr	r3, [r3, #4]
   29f64:	cmn	r3, #1
   29f68:	bne	29f98 <__assert_fail@plt+0x18a54>
   29f6c:	ldr	r2, [fp, #-208]	; 0xffffff30
   29f70:	sub	r1, fp, #28
   29f74:	sub	r3, fp, #40	; 0x28
   29f78:	str	r3, [sp, #4]
   29f7c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   29f80:	str	r3, [sp]
   29f84:	ldr	r3, [fp, #-212]	; 0xffffff2c
   29f88:	ldr	r0, [fp, #-12]
   29f8c:	bl	2965c <__assert_fail@plt+0x18118>
   29f90:	str	r0, [fp, #-8]
   29f94:	b	29fb4 <__assert_fail@plt+0x18a70>
   29f98:	ldr	r3, [fp, #-16]
   29f9c:	add	r3, r3, #1
   29fa0:	str	r3, [fp, #-16]
   29fa4:	ldr	r3, [fp, #-16]
   29fa8:	ldr	r2, [fp, #-208]	; 0xffffff30
   29fac:	cmp	r2, r3
   29fb0:	bhi	29f34 <__assert_fail@plt+0x189f0>
   29fb4:	ldr	r3, [fp, #-8]
   29fb8:	cmp	r3, #0
   29fbc:	bge	29fe8 <__assert_fail@plt+0x18aa4>
   29fc0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   29fc4:	mov	r0, r3
   29fc8:	bl	151ec <__assert_fail@plt+0x3ca8>
   29fcc:	sub	r3, fp, #192	; 0xc0
   29fd0:	mov	r0, r3
   29fd4:	bl	298fc <__assert_fail@plt+0x183b8>
   29fd8:	ldr	r0, [fp, #-12]
   29fdc:	bl	2a120 <__assert_fail@plt+0x18bdc>
   29fe0:	mov	r3, r0
   29fe4:	b	2a10c <__assert_fail@plt+0x18bc8>
   29fe8:	ldr	r1, [fp, #-208]	; 0xffffff30
   29fec:	ldr	r3, [fp, #-12]
   29ff0:	str	r3, [sp, #12]
   29ff4:	sub	r3, fp, #40	; 0x28
   29ff8:	str	r3, [sp, #8]
   29ffc:	ldr	r3, [fp, #-8]
   2a000:	str	r3, [sp, #4]
   2a004:	sub	r3, fp, #28
   2a008:	str	r3, [sp]
   2a00c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a010:	ldr	r2, [fp, #-212]	; 0xffffff2c
   2a014:	ldr	r0, [fp, #-204]	; 0xffffff34
   2a018:	bl	28e90 <__assert_fail@plt+0x1794c>
   2a01c:	str	r0, [fp, #-8]
   2a020:	ldr	r3, [fp, #-8]
   2a024:	lsr	r3, r3, #31
   2a028:	uxtb	r3, r3
   2a02c:	cmp	r3, #0
   2a030:	beq	2a0d4 <__assert_fail@plt+0x18b90>
   2a034:	ldr	r3, [fp, #-8]
   2a038:	cmn	r3, #2
   2a03c:	moveq	r3, #1
   2a040:	movne	r3, #0
   2a044:	uxtb	r3, r3
   2a048:	cmp	r3, #0
   2a04c:	beq	2a078 <__assert_fail@plt+0x18b34>
   2a050:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2a054:	mov	r0, r3
   2a058:	bl	151ec <__assert_fail@plt+0x3ca8>
   2a05c:	sub	r3, fp, #192	; 0xc0
   2a060:	mov	r0, r3
   2a064:	bl	298fc <__assert_fail@plt+0x183b8>
   2a068:	ldr	r0, [fp, #-12]
   2a06c:	bl	2a120 <__assert_fail@plt+0x18bdc>
   2a070:	mov	r3, #12
   2a074:	b	2a10c <__assert_fail@plt+0x18bc8>
   2a078:	ldr	r2, [fp, #-208]	; 0xffffff30
   2a07c:	sub	r1, fp, #28
   2a080:	sub	r3, fp, #40	; 0x28
   2a084:	str	r3, [sp, #4]
   2a088:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a08c:	str	r3, [sp]
   2a090:	ldr	r3, [fp, #-212]	; 0xffffff2c
   2a094:	ldr	r0, [fp, #-12]
   2a098:	bl	2965c <__assert_fail@plt+0x18118>
   2a09c:	str	r0, [fp, #-8]
   2a0a0:	ldr	r3, [fp, #-8]
   2a0a4:	cmp	r3, #0
   2a0a8:	bge	2a0d4 <__assert_fail@plt+0x18b90>
   2a0ac:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2a0b0:	mov	r0, r3
   2a0b4:	bl	151ec <__assert_fail@plt+0x3ca8>
   2a0b8:	sub	r3, fp, #192	; 0xc0
   2a0bc:	mov	r0, r3
   2a0c0:	bl	298fc <__assert_fail@plt+0x183b8>
   2a0c4:	ldr	r0, [fp, #-12]
   2a0c8:	bl	2a120 <__assert_fail@plt+0x18bdc>
   2a0cc:	mov	r3, #1
   2a0d0:	b	2a10c <__assert_fail@plt+0x18bc8>
   2a0d4:	ldr	r3, [fp, #-212]	; 0xffffff2c
   2a0d8:	ldr	r2, [r3, #4]
   2a0dc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2a0e0:	cmp	r2, r3
   2a0e4:	bge	29ea0 <__assert_fail@plt+0x1895c>
   2a0e8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2a0ec:	mov	r0, r3
   2a0f0:	bl	151ec <__assert_fail@plt+0x3ca8>
   2a0f4:	sub	r3, fp, #192	; 0xc0
   2a0f8:	mov	r0, r3
   2a0fc:	bl	298fc <__assert_fail@plt+0x183b8>
   2a100:	ldr	r0, [fp, #-12]
   2a104:	bl	2a120 <__assert_fail@plt+0x18bdc>
   2a108:	mov	r3, r0
   2a10c:	mov	r0, r3
   2a110:	sub	sp, fp, #4
   2a114:	ldr	fp, [sp]
   2a118:	add	sp, sp, #4
   2a11c:	pop	{pc}		; (ldr pc, [sp], #4)
   2a120:	str	fp, [sp, #-8]!
   2a124:	str	lr, [sp, #4]
   2a128:	add	fp, sp, #4
   2a12c:	sub	sp, sp, #16
   2a130:	str	r0, [fp, #-16]
   2a134:	ldr	r3, [fp, #-16]
   2a138:	cmp	r3, #0
   2a13c:	beq	2a1d4 <__assert_fail@plt+0x18c90>
   2a140:	mov	r3, #0
   2a144:	str	r3, [fp, #-8]
   2a148:	b	2a1b0 <__assert_fail@plt+0x18c6c>
   2a14c:	ldr	r3, [fp, #-16]
   2a150:	ldr	r1, [r3, #8]
   2a154:	ldr	r2, [fp, #-8]
   2a158:	mov	r3, r2
   2a15c:	lsl	r3, r3, #1
   2a160:	add	r3, r3, r2
   2a164:	lsl	r3, r3, #3
   2a168:	add	r3, r1, r3
   2a16c:	ldr	r3, [r3, #20]
   2a170:	mov	r0, r3
   2a174:	bl	151ec <__assert_fail@plt+0x3ca8>
   2a178:	ldr	r3, [fp, #-16]
   2a17c:	ldr	r1, [r3, #8]
   2a180:	ldr	r2, [fp, #-8]
   2a184:	mov	r3, r2
   2a188:	lsl	r3, r3, #1
   2a18c:	add	r3, r3, r2
   2a190:	lsl	r3, r3, #3
   2a194:	add	r3, r1, r3
   2a198:	ldr	r3, [r3, #8]
   2a19c:	mov	r0, r3
   2a1a0:	bl	151ec <__assert_fail@plt+0x3ca8>
   2a1a4:	ldr	r3, [fp, #-8]
   2a1a8:	add	r3, r3, #1
   2a1ac:	str	r3, [fp, #-8]
   2a1b0:	ldr	r3, [fp, #-16]
   2a1b4:	ldr	r3, [r3]
   2a1b8:	ldr	r2, [fp, #-8]
   2a1bc:	cmp	r2, r3
   2a1c0:	blt	2a14c <__assert_fail@plt+0x18c08>
   2a1c4:	ldr	r3, [fp, #-16]
   2a1c8:	ldr	r3, [r3, #8]
   2a1cc:	mov	r0, r3
   2a1d0:	bl	151ec <__assert_fail@plt+0x3ca8>
   2a1d4:	mov	r3, #0
   2a1d8:	mov	r0, r3
   2a1dc:	sub	sp, fp, #4
   2a1e0:	ldr	fp, [sp]
   2a1e4:	add	sp, sp, #4
   2a1e8:	pop	{pc}		; (ldr pc, [sp], #4)
   2a1ec:	str	fp, [sp, #-8]!
   2a1f0:	str	lr, [sp, #4]
   2a1f4:	add	fp, sp, #4
   2a1f8:	sub	sp, sp, #32
   2a1fc:	str	r0, [fp, #-24]	; 0xffffffe8
   2a200:	str	r1, [fp, #-28]	; 0xffffffe4
   2a204:	str	r2, [fp, #-32]	; 0xffffffe0
   2a208:	str	r3, [fp, #-36]	; 0xffffffdc
   2a20c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a210:	ldr	r2, [r3]
   2a214:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2a218:	lsl	r3, r3, #3
   2a21c:	add	r3, r2, r3
   2a220:	ldrb	r3, [r3, #4]
   2a224:	str	r3, [fp, #-8]
   2a228:	ldr	r3, [fp, #-8]
   2a22c:	cmp	r3, #8
   2a230:	bne	2a298 <__assert_fail@plt+0x18d54>
   2a234:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a238:	ldr	r2, [r3]
   2a23c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2a240:	lsl	r3, r3, #3
   2a244:	add	r3, r2, r3
   2a248:	ldr	r3, [r3]
   2a24c:	add	r3, r3, #1
   2a250:	str	r3, [fp, #-12]
   2a254:	ldr	r2, [fp, #-12]
   2a258:	ldr	r3, [fp, #8]
   2a25c:	cmp	r2, r3
   2a260:	bge	2a3a0 <__assert_fail@plt+0x18e5c>
   2a264:	ldr	r3, [fp, #-12]
   2a268:	lsl	r3, r3, #3
   2a26c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2a270:	add	r3, r2, r3
   2a274:	ldr	r2, [fp, #4]
   2a278:	str	r2, [r3]
   2a27c:	ldr	r3, [fp, #-12]
   2a280:	lsl	r3, r3, #3
   2a284:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2a288:	add	r3, r2, r3
   2a28c:	mvn	r2, #0
   2a290:	str	r2, [r3, #4]
   2a294:	b	2a3a0 <__assert_fail@plt+0x18e5c>
   2a298:	ldr	r3, [fp, #-8]
   2a29c:	cmp	r3, #9
   2a2a0:	bne	2a3a0 <__assert_fail@plt+0x18e5c>
   2a2a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a2a8:	ldr	r2, [r3]
   2a2ac:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2a2b0:	lsl	r3, r3, #3
   2a2b4:	add	r3, r2, r3
   2a2b8:	ldr	r3, [r3]
   2a2bc:	add	r3, r3, #1
   2a2c0:	str	r3, [fp, #-16]
   2a2c4:	ldr	r2, [fp, #-16]
   2a2c8:	ldr	r3, [fp, #8]
   2a2cc:	cmp	r2, r3
   2a2d0:	bge	2a3a0 <__assert_fail@plt+0x18e5c>
   2a2d4:	ldr	r3, [fp, #-16]
   2a2d8:	lsl	r3, r3, #3
   2a2dc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2a2e0:	add	r3, r2, r3
   2a2e4:	ldr	r3, [r3]
   2a2e8:	ldr	r2, [fp, #4]
   2a2ec:	cmp	r2, r3
   2a2f0:	ble	2a328 <__assert_fail@plt+0x18de4>
   2a2f4:	ldr	r3, [fp, #-16]
   2a2f8:	lsl	r3, r3, #3
   2a2fc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2a300:	add	r3, r2, r3
   2a304:	ldr	r2, [fp, #4]
   2a308:	str	r2, [r3, #4]
   2a30c:	ldr	r3, [fp, #8]
   2a310:	lsl	r3, r3, #3
   2a314:	mov	r2, r3
   2a318:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2a31c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2a320:	bl	11250 <memcpy@plt>
   2a324:	b	2a3a0 <__assert_fail@plt+0x18e5c>
   2a328:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a32c:	ldr	r2, [r3]
   2a330:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2a334:	lsl	r3, r3, #3
   2a338:	add	r3, r2, r3
   2a33c:	ldrb	r3, [r3, #6]
   2a340:	and	r3, r3, #8
   2a344:	uxtb	r3, r3
   2a348:	cmp	r3, #0
   2a34c:	beq	2a388 <__assert_fail@plt+0x18e44>
   2a350:	ldr	r3, [fp, #-16]
   2a354:	lsl	r3, r3, #3
   2a358:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2a35c:	add	r3, r2, r3
   2a360:	ldr	r3, [r3]
   2a364:	cmn	r3, #1
   2a368:	beq	2a388 <__assert_fail@plt+0x18e44>
   2a36c:	ldr	r3, [fp, #8]
   2a370:	lsl	r3, r3, #3
   2a374:	mov	r2, r3
   2a378:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2a37c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2a380:	bl	11250 <memcpy@plt>
   2a384:	b	2a3a0 <__assert_fail@plt+0x18e5c>
   2a388:	ldr	r3, [fp, #-16]
   2a38c:	lsl	r3, r3, #3
   2a390:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2a394:	add	r3, r2, r3
   2a398:	ldr	r2, [fp, #4]
   2a39c:	str	r2, [r3, #4]
   2a3a0:	nop	{0}
   2a3a4:	sub	sp, fp, #4
   2a3a8:	ldr	fp, [sp]
   2a3ac:	add	sp, sp, #4
   2a3b0:	pop	{pc}		; (ldr pc, [sp], #4)
   2a3b4:	str	fp, [sp, #-8]!
   2a3b8:	str	lr, [sp, #4]
   2a3bc:	add	fp, sp, #4
   2a3c0:	sub	sp, sp, #32
   2a3c4:	str	r0, [fp, #-32]	; 0xffffffe0
   2a3c8:	str	r1, [fp, #-36]	; 0xffffffdc
   2a3cc:	mov	r3, #0
   2a3d0:	str	r3, [fp, #-12]
   2a3d4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2a3d8:	ldr	r3, [r3, #12]
   2a3dc:	str	r3, [fp, #-16]
   2a3e0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2a3e4:	ldr	r3, [r3, #100]	; 0x64
   2a3e8:	cmp	r3, #0
   2a3ec:	beq	2a410 <__assert_fail@plt+0x18ecc>
   2a3f0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2a3f4:	ldr	r2, [r3, #100]	; 0x64
   2a3f8:	ldr	r3, [fp, #-16]
   2a3fc:	lsl	r3, r3, #2
   2a400:	add	r3, r2, r3
   2a404:	ldr	r3, [r3]
   2a408:	cmp	r3, #0
   2a40c:	bne	2a410 <__assert_fail@plt+0x18ecc>
   2a410:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2a414:	ldr	r2, [r3, #8]
   2a418:	sub	r3, fp, #28
   2a41c:	mov	r1, r2
   2a420:	mov	r0, r3
   2a424:	bl	1ae9c <__assert_fail@plt+0x9958>
   2a428:	str	r0, [fp, #-8]
   2a42c:	ldr	r3, [fp, #-8]
   2a430:	cmp	r3, #0
   2a434:	movne	r3, #1
   2a438:	moveq	r3, #0
   2a43c:	uxtb	r3, r3
   2a440:	cmp	r3, #0
   2a444:	beq	2a450 <__assert_fail@plt+0x18f0c>
   2a448:	ldr	r3, [fp, #-8]
   2a44c:	b	2a5d8 <__assert_fail@plt+0x19094>
   2a450:	sub	r3, fp, #28
   2a454:	ldr	r2, [fp, #-16]
   2a458:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2a45c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2a460:	bl	2ab2c <__assert_fail@plt+0x195e8>
   2a464:	str	r0, [fp, #-8]
   2a468:	ldr	r3, [fp, #-8]
   2a46c:	cmp	r3, #0
   2a470:	movne	r3, #1
   2a474:	moveq	r3, #0
   2a478:	uxtb	r3, r3
   2a47c:	cmp	r3, #0
   2a480:	bne	2a5b4 <__assert_fail@plt+0x19070>
   2a484:	b	2a59c <__assert_fail@plt+0x19058>
   2a488:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2a48c:	ldr	r2, [r3]
   2a490:	ldr	r3, [fp, #-16]
   2a494:	lsl	r3, r3, #2
   2a498:	add	r3, r2, r3
   2a49c:	ldr	r3, [r3]
   2a4a0:	cmp	r3, #0
   2a4a4:	bne	2a4b4 <__assert_fail@plt+0x18f70>
   2a4a8:	ldr	r3, [fp, #-12]
   2a4ac:	add	r3, r3, #1
   2a4b0:	b	2a4b8 <__assert_fail@plt+0x18f74>
   2a4b4:	mov	r3, #0
   2a4b8:	str	r3, [fp, #-12]
   2a4bc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2a4c0:	ldr	r3, [r3, #120]	; 0x78
   2a4c4:	ldr	r2, [fp, #-12]
   2a4c8:	cmp	r2, r3
   2a4cc:	ble	2a500 <__assert_fail@plt+0x18fbc>
   2a4d0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2a4d4:	ldr	r0, [r3]
   2a4d8:	ldr	r3, [fp, #-16]
   2a4dc:	lsl	r3, r3, #2
   2a4e0:	mov	r2, r3
   2a4e4:	mov	r1, #0
   2a4e8:	bl	11448 <memset@plt>
   2a4ec:	ldr	r3, [fp, #-20]	; 0xffffffec
   2a4f0:	mov	r0, r3
   2a4f4:	bl	151ec <__assert_fail@plt+0x3ca8>
   2a4f8:	mov	r3, #0
   2a4fc:	b	2a5d8 <__assert_fail@plt+0x19094>
   2a500:	mov	r3, #0
   2a504:	str	r3, [fp, #-24]	; 0xffffffe8
   2a508:	ldr	r3, [fp, #-16]
   2a50c:	sub	r3, r3, #1
   2a510:	str	r3, [fp, #-16]
   2a514:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2a518:	ldr	r2, [r3, #100]	; 0x64
   2a51c:	ldr	r3, [fp, #-16]
   2a520:	lsl	r3, r3, #2
   2a524:	add	r3, r2, r3
   2a528:	ldr	r3, [r3]
   2a52c:	cmp	r3, #0
   2a530:	beq	2a568 <__assert_fail@plt+0x19024>
   2a534:	sub	r3, fp, #28
   2a538:	ldr	r2, [fp, #-16]
   2a53c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2a540:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2a544:	bl	2a5ec <__assert_fail@plt+0x190a8>
   2a548:	str	r0, [fp, #-8]
   2a54c:	ldr	r3, [fp, #-8]
   2a550:	cmp	r3, #0
   2a554:	movne	r3, #1
   2a558:	moveq	r3, #0
   2a55c:	uxtb	r3, r3
   2a560:	cmp	r3, #0
   2a564:	bne	2a5bc <__assert_fail@plt+0x19078>
   2a568:	sub	r3, fp, #28
   2a56c:	ldr	r2, [fp, #-16]
   2a570:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2a574:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2a578:	bl	2ab2c <__assert_fail@plt+0x195e8>
   2a57c:	str	r0, [fp, #-8]
   2a580:	ldr	r3, [fp, #-8]
   2a584:	cmp	r3, #0
   2a588:	movne	r3, #1
   2a58c:	moveq	r3, #0
   2a590:	uxtb	r3, r3
   2a594:	cmp	r3, #0
   2a598:	bne	2a5c4 <__assert_fail@plt+0x19080>
   2a59c:	ldr	r3, [fp, #-16]
   2a5a0:	cmp	r3, #0
   2a5a4:	bgt	2a488 <__assert_fail@plt+0x18f44>
   2a5a8:	mov	r3, #0
   2a5ac:	str	r3, [fp, #-8]
   2a5b0:	b	2a5c8 <__assert_fail@plt+0x19084>
   2a5b4:	nop	{0}
   2a5b8:	b	2a5c8 <__assert_fail@plt+0x19084>
   2a5bc:	nop	{0}
   2a5c0:	b	2a5c8 <__assert_fail@plt+0x19084>
   2a5c4:	nop	{0}
   2a5c8:	ldr	r3, [fp, #-20]	; 0xffffffec
   2a5cc:	mov	r0, r3
   2a5d0:	bl	151ec <__assert_fail@plt+0x3ca8>
   2a5d4:	ldr	r3, [fp, #-8]
   2a5d8:	mov	r0, r3
   2a5dc:	sub	sp, fp, #4
   2a5e0:	ldr	fp, [sp]
   2a5e4:	add	sp, sp, #4
   2a5e8:	pop	{pc}		; (ldr pc, [sp], #4)
   2a5ec:	str	fp, [sp, #-8]!
   2a5f0:	str	lr, [sp, #4]
   2a5f4:	add	fp, sp, #4
   2a5f8:	sub	sp, sp, #56	; 0x38
   2a5fc:	str	r0, [fp, #-40]	; 0xffffffd8
   2a600:	str	r1, [fp, #-44]	; 0xffffffd4
   2a604:	str	r2, [fp, #-48]	; 0xffffffd0
   2a608:	str	r3, [fp, #-52]	; 0xffffffcc
   2a60c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2a610:	ldr	r3, [r3, #84]	; 0x54
   2a614:	str	r3, [fp, #-16]
   2a618:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2a61c:	ldr	r2, [r3, #100]	; 0x64
   2a620:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2a624:	lsl	r3, r3, #2
   2a628:	add	r3, r2, r3
   2a62c:	ldr	r3, [r3]
   2a630:	add	r3, r3, #16
   2a634:	str	r3, [fp, #-20]	; 0xffffffec
   2a638:	mov	r3, #0
   2a63c:	str	r3, [fp, #-8]
   2a640:	b	2a844 <__assert_fail@plt+0x19300>
   2a644:	ldr	r3, [fp, #-20]	; 0xffffffec
   2a648:	ldr	r2, [r3, #8]
   2a64c:	ldr	r3, [fp, #-8]
   2a650:	lsl	r3, r3, #2
   2a654:	add	r3, r2, r3
   2a658:	ldr	r3, [r3]
   2a65c:	str	r3, [fp, #-24]	; 0xffffffe8
   2a660:	mov	r3, #0
   2a664:	str	r3, [fp, #-12]
   2a668:	ldr	r3, [fp, #-16]
   2a66c:	ldr	r2, [r3]
   2a670:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a674:	lsl	r3, r3, #3
   2a678:	add	r3, r2, r3
   2a67c:	ldrb	r3, [r3, #4]
   2a680:	and	r3, r3, #8
   2a684:	cmp	r3, #0
   2a688:	ldr	r3, [fp, #-16]
   2a68c:	ldr	r2, [r3]
   2a690:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a694:	lsl	r3, r3, #3
   2a698:	add	r3, r2, r3
   2a69c:	ldrb	r3, [r3, #6]
   2a6a0:	and	r3, r3, #16
   2a6a4:	uxtb	r3, r3
   2a6a8:	cmp	r3, #0
   2a6ac:	beq	2a6d4 <__assert_fail@plt+0x19190>
   2a6b0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2a6b4:	ldr	r3, [r3, #12]
   2a6b8:	str	r3, [sp]
   2a6bc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2a6c0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2a6c4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2a6c8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2a6cc:	bl	2c048 <__assert_fail@plt+0x1ab04>
   2a6d0:	str	r0, [fp, #-12]
   2a6d4:	ldr	r3, [fp, #-12]
   2a6d8:	cmp	r3, #0
   2a6dc:	bne	2a788 <__assert_fail@plt+0x19244>
   2a6e0:	ldr	r3, [fp, #-16]
   2a6e4:	ldr	r2, [r3]
   2a6e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a6ec:	lsl	r3, r3, #3
   2a6f0:	add	r3, r2, r3
   2a6f4:	ldr	r2, [fp, #-48]	; 0xffffffd0
   2a6f8:	mov	r1, r3
   2a6fc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2a700:	bl	30780 <__assert_fail@plt+0x1f23c>
   2a704:	mov	r3, r0
   2a708:	cmp	r3, #0
   2a70c:	beq	2a788 <__assert_fail@plt+0x19244>
   2a710:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2a714:	ldr	r2, [r3]
   2a718:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2a71c:	add	r3, r3, #1
   2a720:	lsl	r3, r3, #2
   2a724:	add	r3, r2, r3
   2a728:	ldr	r3, [r3]
   2a72c:	cmp	r3, #0
   2a730:	beq	2a788 <__assert_fail@plt+0x19244>
   2a734:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2a738:	ldr	r2, [r3]
   2a73c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2a740:	add	r3, r3, #1
   2a744:	lsl	r3, r3, #2
   2a748:	add	r3, r2, r3
   2a74c:	ldr	r3, [r3]
   2a750:	add	r0, r3, #4
   2a754:	ldr	r3, [fp, #-16]
   2a758:	ldr	r2, [r3, #12]
   2a75c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a760:	lsl	r3, r3, #2
   2a764:	add	r3, r2, r3
   2a768:	ldr	r3, [r3]
   2a76c:	mov	r1, r3
   2a770:	bl	1c21c <__assert_fail@plt+0xacd8>
   2a774:	mov	r3, r0
   2a778:	cmp	r3, #0
   2a77c:	beq	2a788 <__assert_fail@plt+0x19244>
   2a780:	mov	r3, #1
   2a784:	str	r3, [fp, #-12]
   2a788:	ldr	r3, [fp, #-12]
   2a78c:	cmp	r3, #0
   2a790:	beq	2a82c <__assert_fail@plt+0x192e8>
   2a794:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2a798:	ldr	r3, [r3, #20]
   2a79c:	cmp	r3, #0
   2a7a0:	beq	2a7fc <__assert_fail@plt+0x192b8>
   2a7a4:	ldr	r2, [fp, #-48]	; 0xffffffd0
   2a7a8:	ldr	r3, [fp, #-12]
   2a7ac:	add	r3, r2, r3
   2a7b0:	str	r3, [fp, #-28]	; 0xffffffe4
   2a7b4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2a7b8:	add	r1, r3, #16
   2a7bc:	ldr	r3, [fp, #-16]
   2a7c0:	ldr	r2, [r3, #12]
   2a7c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a7c8:	lsl	r3, r3, #2
   2a7cc:	add	r3, r2, r3
   2a7d0:	ldr	r2, [r3]
   2a7d4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2a7d8:	str	r3, [sp, #4]
   2a7dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a7e0:	str	r3, [sp]
   2a7e4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2a7e8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2a7ec:	bl	2b1e4 <__assert_fail@plt+0x19ca0>
   2a7f0:	mov	r3, r0
   2a7f4:	cmp	r3, #0
   2a7f8:	bne	2a834 <__assert_fail@plt+0x192f0>
   2a7fc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2a800:	ldr	r0, [fp, #-52]	; 0xffffffcc
   2a804:	bl	1bdf4 <__assert_fail@plt+0xa8b0>
   2a808:	mov	r3, r0
   2a80c:	strb	r3, [fp, #-29]	; 0xffffffe3
   2a810:	ldrb	r3, [fp, #-29]	; 0xffffffe3
   2a814:	eor	r3, r3, #1
   2a818:	uxtb	r3, r3
   2a81c:	cmp	r3, #0
   2a820:	beq	2a838 <__assert_fail@plt+0x192f4>
   2a824:	mov	r3, #12
   2a828:	b	2a85c <__assert_fail@plt+0x19318>
   2a82c:	nop	{0}
   2a830:	b	2a838 <__assert_fail@plt+0x192f4>
   2a834:	nop	{0}
   2a838:	ldr	r3, [fp, #-8]
   2a83c:	add	r3, r3, #1
   2a840:	str	r3, [fp, #-8]
   2a844:	ldr	r3, [fp, #-20]	; 0xffffffec
   2a848:	ldr	r3, [r3, #4]
   2a84c:	ldr	r2, [fp, #-8]
   2a850:	cmp	r2, r3
   2a854:	blt	2a644 <__assert_fail@plt+0x19100>
   2a858:	mov	r3, #0
   2a85c:	mov	r0, r3
   2a860:	sub	sp, fp, #4
   2a864:	ldr	fp, [sp]
   2a868:	add	sp, sp, #4
   2a86c:	pop	{pc}		; (ldr pc, [sp], #4)
   2a870:	str	fp, [sp, #-8]!
   2a874:	str	lr, [sp, #4]
   2a878:	add	fp, sp, #4
   2a87c:	sub	sp, sp, #16
   2a880:	str	r0, [fp, #-16]
   2a884:	str	r1, [fp, #-20]	; 0xffffffec
   2a888:	ldr	r3, [fp, #-16]
   2a88c:	ldr	r3, [r3, #104]	; 0x68
   2a890:	str	r3, [fp, #-8]
   2a894:	ldr	r3, [fp, #-16]
   2a898:	ldr	r3, [r3, #36]	; 0x24
   2a89c:	ldr	r2, [fp, #-20]	; 0xffffffec
   2a8a0:	cmp	r2, r3
   2a8a4:	blt	2a8c0 <__assert_fail@plt+0x1937c>
   2a8a8:	ldr	r3, [fp, #-16]
   2a8ac:	ldr	r2, [r3, #36]	; 0x24
   2a8b0:	ldr	r3, [fp, #-16]
   2a8b4:	ldr	r3, [r3, #48]	; 0x30
   2a8b8:	cmp	r2, r3
   2a8bc:	blt	2a8ec <__assert_fail@plt+0x193a8>
   2a8c0:	ldr	r3, [fp, #-16]
   2a8c4:	ldr	r3, [r3, #28]
   2a8c8:	ldr	r2, [fp, #-20]	; 0xffffffec
   2a8cc:	cmp	r2, r3
   2a8d0:	blt	2a928 <__assert_fail@plt+0x193e4>
   2a8d4:	ldr	r3, [fp, #-16]
   2a8d8:	ldr	r2, [r3, #28]
   2a8dc:	ldr	r3, [fp, #-16]
   2a8e0:	ldr	r3, [r3, #48]	; 0x30
   2a8e4:	cmp	r2, r3
   2a8e8:	bge	2a928 <__assert_fail@plt+0x193e4>
   2a8ec:	ldr	r3, [fp, #-20]	; 0xffffffec
   2a8f0:	add	r3, r3, #1
   2a8f4:	mov	r1, r3
   2a8f8:	ldr	r0, [fp, #-16]
   2a8fc:	bl	309c0 <__assert_fail@plt+0x1f47c>
   2a900:	str	r0, [fp, #-12]
   2a904:	ldr	r3, [fp, #-12]
   2a908:	cmp	r3, #0
   2a90c:	movne	r3, #1
   2a910:	moveq	r3, #0
   2a914:	uxtb	r3, r3
   2a918:	cmp	r3, #0
   2a91c:	beq	2a928 <__assert_fail@plt+0x193e4>
   2a920:	ldr	r3, [fp, #-12]
   2a924:	b	2a988 <__assert_fail@plt+0x19444>
   2a928:	ldr	r2, [fp, #-8]
   2a92c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2a930:	cmp	r2, r3
   2a934:	bge	2a984 <__assert_fail@plt+0x19440>
   2a938:	ldr	r3, [fp, #-16]
   2a93c:	ldr	r3, [r3, #100]	; 0x64
   2a940:	cmp	r3, #0
   2a944:	ldr	r3, [fp, #-16]
   2a948:	ldr	r2, [r3, #100]	; 0x64
   2a94c:	ldr	r3, [fp, #-8]
   2a950:	add	r3, r3, #1
   2a954:	lsl	r3, r3, #2
   2a958:	add	r0, r2, r3
   2a95c:	ldr	r2, [fp, #-20]	; 0xffffffec
   2a960:	ldr	r3, [fp, #-8]
   2a964:	sub	r3, r2, r3
   2a968:	lsl	r3, r3, #2
   2a96c:	mov	r2, r3
   2a970:	mov	r1, #0
   2a974:	bl	11448 <memset@plt>
   2a978:	ldr	r3, [fp, #-16]
   2a97c:	ldr	r2, [fp, #-20]	; 0xffffffec
   2a980:	str	r2, [r3, #104]	; 0x68
   2a984:	mov	r3, #0
   2a988:	mov	r0, r3
   2a98c:	sub	sp, fp, #4
   2a990:	ldr	fp, [sp]
   2a994:	add	sp, sp, #4
   2a998:	pop	{pc}		; (ldr pc, [sp], #4)
   2a99c:	str	r4, [sp, #-12]!
   2a9a0:	str	fp, [sp, #4]
   2a9a4:	str	lr, [sp, #8]
   2a9a8:	add	fp, sp, #8
   2a9ac:	sub	sp, sp, #44	; 0x2c
   2a9b0:	str	r0, [fp, #-40]	; 0xffffffd8
   2a9b4:	str	r1, [fp, #-44]	; 0xffffffd4
   2a9b8:	str	r2, [fp, #-48]	; 0xffffffd0
   2a9bc:	str	r3, [fp, #-52]	; 0xffffffcc
   2a9c0:	mov	r3, #0
   2a9c4:	str	r3, [fp, #-16]
   2a9c8:	b	2ab00 <__assert_fail@plt+0x195bc>
   2a9cc:	ldr	r3, [fp, #-16]
   2a9d0:	lsl	r3, r3, #2
   2a9d4:	ldr	r2, [fp, #-44]	; 0xffffffd4
   2a9d8:	add	r3, r2, r3
   2a9dc:	ldr	r3, [r3]
   2a9e0:	cmp	r3, #0
   2a9e4:	bne	2aa14 <__assert_fail@plt+0x194d0>
   2a9e8:	ldr	r3, [fp, #-16]
   2a9ec:	lsl	r3, r3, #2
   2a9f0:	ldr	r2, [fp, #-48]	; 0xffffffd0
   2a9f4:	add	r2, r2, r3
   2a9f8:	ldr	r3, [fp, #-16]
   2a9fc:	lsl	r3, r3, #2
   2aa00:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2aa04:	add	r3, r1, r3
   2aa08:	ldr	r2, [r2]
   2aa0c:	str	r2, [r3]
   2aa10:	b	2aaf4 <__assert_fail@plt+0x195b0>
   2aa14:	ldr	r3, [fp, #-16]
   2aa18:	lsl	r3, r3, #2
   2aa1c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   2aa20:	add	r3, r2, r3
   2aa24:	ldr	r3, [r3]
   2aa28:	cmp	r3, #0
   2aa2c:	beq	2aaf4 <__assert_fail@plt+0x195b0>
   2aa30:	ldr	r3, [fp, #-16]
   2aa34:	lsl	r3, r3, #2
   2aa38:	ldr	r2, [fp, #-44]	; 0xffffffd4
   2aa3c:	add	r3, r2, r3
   2aa40:	ldr	r3, [r3]
   2aa44:	add	r1, r3, #4
   2aa48:	ldr	r3, [fp, #-16]
   2aa4c:	lsl	r3, r3, #2
   2aa50:	ldr	r2, [fp, #-48]	; 0xffffffd0
   2aa54:	add	r3, r2, r3
   2aa58:	ldr	r3, [r3]
   2aa5c:	add	r2, r3, #4
   2aa60:	sub	r3, fp, #32
   2aa64:	mov	r0, r3
   2aa68:	bl	1b60c <__assert_fail@plt+0xa0c8>
   2aa6c:	mov	r3, r0
   2aa70:	str	r3, [fp, #-20]	; 0xffffffec
   2aa74:	ldr	r3, [fp, #-20]	; 0xffffffec
   2aa78:	cmp	r3, #0
   2aa7c:	movne	r3, #1
   2aa80:	moveq	r3, #0
   2aa84:	uxtb	r3, r3
   2aa88:	cmp	r3, #0
   2aa8c:	beq	2aa98 <__assert_fail@plt+0x19554>
   2aa90:	ldr	r3, [fp, #-20]	; 0xffffffec
   2aa94:	b	2ab14 <__assert_fail@plt+0x195d0>
   2aa98:	ldr	r3, [fp, #-16]
   2aa9c:	lsl	r3, r3, #2
   2aaa0:	ldr	r2, [fp, #-44]	; 0xffffffd4
   2aaa4:	add	r4, r2, r3
   2aaa8:	sub	r2, fp, #32
   2aaac:	sub	r3, fp, #20
   2aab0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   2aab4:	mov	r0, r3
   2aab8:	bl	1c834 <__assert_fail@plt+0xb2f0>
   2aabc:	mov	r3, r0
   2aac0:	str	r3, [r4]
   2aac4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2aac8:	mov	r0, r3
   2aacc:	bl	151ec <__assert_fail@plt+0x3ca8>
   2aad0:	ldr	r3, [fp, #-20]	; 0xffffffec
   2aad4:	cmp	r3, #0
   2aad8:	movne	r3, #1
   2aadc:	moveq	r3, #0
   2aae0:	uxtb	r3, r3
   2aae4:	cmp	r3, #0
   2aae8:	beq	2aaf4 <__assert_fail@plt+0x195b0>
   2aaec:	ldr	r3, [fp, #-20]	; 0xffffffec
   2aaf0:	b	2ab14 <__assert_fail@plt+0x195d0>
   2aaf4:	ldr	r3, [fp, #-16]
   2aaf8:	add	r3, r3, #1
   2aafc:	str	r3, [fp, #-16]
   2ab00:	ldr	r2, [fp, #-16]
   2ab04:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2ab08:	cmp	r2, r3
   2ab0c:	blt	2a9cc <__assert_fail@plt+0x19488>
   2ab10:	mov	r3, #0
   2ab14:	mov	r0, r3
   2ab18:	sub	sp, fp, #8
   2ab1c:	ldr	r4, [sp]
   2ab20:	ldr	fp, [sp, #4]
   2ab24:	add	sp, sp, #8
   2ab28:	pop	{pc}		; (ldr pc, [sp], #4)
   2ab2c:	str	r4, [sp, #-12]!
   2ab30:	str	fp, [sp, #4]
   2ab34:	str	lr, [sp, #8]
   2ab38:	add	fp, sp, #8
   2ab3c:	sub	sp, sp, #44	; 0x2c
   2ab40:	str	r0, [fp, #-32]	; 0xffffffe0
   2ab44:	str	r1, [fp, #-36]	; 0xffffffdc
   2ab48:	str	r2, [fp, #-40]	; 0xffffffd8
   2ab4c:	str	r3, [fp, #-44]	; 0xffffffd4
   2ab50:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2ab54:	ldr	r3, [r3, #84]	; 0x54
   2ab58:	str	r3, [fp, #-16]
   2ab5c:	mov	r3, #0
   2ab60:	str	r3, [fp, #-24]	; 0xffffffe8
   2ab64:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2ab68:	ldr	r2, [r3, #100]	; 0x64
   2ab6c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2ab70:	lsl	r3, r3, #2
   2ab74:	add	r3, r2, r3
   2ab78:	ldr	r3, [r3]
   2ab7c:	cmp	r3, #0
   2ab80:	beq	2aba4 <__assert_fail@plt+0x19660>
   2ab84:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2ab88:	ldr	r2, [r3, #100]	; 0x64
   2ab8c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2ab90:	lsl	r3, r3, #2
   2ab94:	add	r3, r2, r3
   2ab98:	ldr	r3, [r3]
   2ab9c:	add	r3, r3, #4
   2aba0:	b	2aba8 <__assert_fail@plt+0x19664>
   2aba4:	mov	r3, #0
   2aba8:	str	r3, [fp, #-20]	; 0xffffffec
   2abac:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2abb0:	ldr	r3, [r3, #4]
   2abb4:	cmp	r3, #0
   2abb8:	bne	2abdc <__assert_fail@plt+0x19698>
   2abbc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2abc0:	ldr	r2, [r3]
   2abc4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2abc8:	lsl	r3, r3, #2
   2abcc:	add	r3, r2, r3
   2abd0:	mov	r2, #0
   2abd4:	str	r2, [r3]
   2abd8:	b	2ace4 <__assert_fail@plt+0x197a0>
   2abdc:	ldr	r3, [fp, #-20]	; 0xffffffec
   2abe0:	cmp	r3, #0
   2abe4:	beq	2ac90 <__assert_fail@plt+0x1974c>
   2abe8:	ldr	r2, [fp, #-20]	; 0xffffffec
   2abec:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2abf0:	ldr	r0, [fp, #-16]
   2abf4:	bl	2ad78 <__assert_fail@plt+0x19834>
   2abf8:	mov	r3, r0
   2abfc:	str	r3, [fp, #-24]	; 0xffffffe8
   2ac00:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2ac04:	cmp	r3, #0
   2ac08:	movne	r3, #1
   2ac0c:	moveq	r3, #0
   2ac10:	uxtb	r3, r3
   2ac14:	cmp	r3, #0
   2ac18:	beq	2ac24 <__assert_fail@plt+0x196e0>
   2ac1c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2ac20:	b	2ad60 <__assert_fail@plt+0x1981c>
   2ac24:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2ac28:	ldr	r3, [r3, #20]
   2ac2c:	cmp	r3, #0
   2ac30:	beq	2ac90 <__assert_fail@plt+0x1974c>
   2ac34:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2ac38:	add	r1, r3, #16
   2ac3c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2ac40:	ldr	r3, [r3, #116]	; 0x74
   2ac44:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2ac48:	str	r2, [sp, #4]
   2ac4c:	str	r3, [sp]
   2ac50:	mov	r3, r1
   2ac54:	ldr	r2, [fp, #-20]	; 0xffffffec
   2ac58:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2ac5c:	ldr	r0, [fp, #-16]
   2ac60:	bl	2b76c <__assert_fail@plt+0x1a228>
   2ac64:	mov	r3, r0
   2ac68:	str	r3, [fp, #-24]	; 0xffffffe8
   2ac6c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2ac70:	cmp	r3, #0
   2ac74:	movne	r3, #1
   2ac78:	moveq	r3, #0
   2ac7c:	uxtb	r3, r3
   2ac80:	cmp	r3, #0
   2ac84:	beq	2ac90 <__assert_fail@plt+0x1974c>
   2ac88:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2ac8c:	b	2ad60 <__assert_fail@plt+0x1981c>
   2ac90:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2ac94:	ldr	r2, [r3]
   2ac98:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2ac9c:	lsl	r3, r3, #2
   2aca0:	add	r4, r2, r3
   2aca4:	sub	r3, fp, #24
   2aca8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   2acac:	ldr	r1, [fp, #-16]
   2acb0:	mov	r0, r3
   2acb4:	bl	1c834 <__assert_fail@plt+0xb2f0>
   2acb8:	mov	r3, r0
   2acbc:	str	r3, [r4]
   2acc0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2acc4:	cmp	r3, #0
   2acc8:	movne	r3, #1
   2accc:	moveq	r3, #0
   2acd0:	uxtb	r3, r3
   2acd4:	cmp	r3, #0
   2acd8:	beq	2ace4 <__assert_fail@plt+0x197a0>
   2acdc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2ace0:	b	2ad60 <__assert_fail@plt+0x1981c>
   2ace4:	ldr	r3, [fp, #-20]	; 0xffffffec
   2ace8:	cmp	r3, #0
   2acec:	beq	2ad5c <__assert_fail@plt+0x19818>
   2acf0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2acf4:	ldr	r2, [r3, #100]	; 0x64
   2acf8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2acfc:	lsl	r3, r3, #2
   2ad00:	add	r3, r2, r3
   2ad04:	ldr	r3, [r3]
   2ad08:	ldrb	r3, [r3, #52]	; 0x34
   2ad0c:	and	r3, r3, #64	; 0x40
   2ad10:	uxtb	r3, r3
   2ad14:	cmp	r3, #0
   2ad18:	beq	2ad5c <__assert_fail@plt+0x19818>
   2ad1c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2ad20:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2ad24:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2ad28:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2ad2c:	bl	2bb90 <__assert_fail@plt+0x1a64c>
   2ad30:	mov	r3, r0
   2ad34:	str	r3, [fp, #-24]	; 0xffffffe8
   2ad38:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2ad3c:	cmp	r3, #0
   2ad40:	movne	r3, #1
   2ad44:	moveq	r3, #0
   2ad48:	uxtb	r3, r3
   2ad4c:	cmp	r3, #0
   2ad50:	beq	2ad5c <__assert_fail@plt+0x19818>
   2ad54:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2ad58:	b	2ad60 <__assert_fail@plt+0x1981c>
   2ad5c:	mov	r3, #0
   2ad60:	mov	r0, r3
   2ad64:	sub	sp, fp, #8
   2ad68:	ldr	r4, [sp]
   2ad6c:	ldr	fp, [sp, #4]
   2ad70:	add	sp, sp, #8
   2ad74:	pop	{pc}		; (ldr pc, [sp], #4)
   2ad78:	str	fp, [sp, #-8]!
   2ad7c:	str	lr, [sp, #4]
   2ad80:	add	fp, sp, #4
   2ad84:	sub	sp, sp, #32
   2ad88:	str	r0, [fp, #-24]	; 0xffffffe8
   2ad8c:	str	r1, [fp, #-28]	; 0xffffffe4
   2ad90:	str	r2, [fp, #-32]	; 0xffffffe0
   2ad94:	mov	r3, #0
   2ad98:	str	r3, [fp, #-16]
   2ad9c:	sub	r3, fp, #16
   2ada0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2ada4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2ada8:	mov	r0, r3
   2adac:	bl	1c834 <__assert_fail@plt+0xb2f0>
   2adb0:	str	r0, [fp, #-12]
   2adb4:	ldr	r3, [fp, #-16]
   2adb8:	cmp	r3, #0
   2adbc:	movne	r3, #1
   2adc0:	moveq	r3, #0
   2adc4:	uxtb	r3, r3
   2adc8:	cmp	r3, #0
   2adcc:	beq	2add8 <__assert_fail@plt+0x19894>
   2add0:	ldr	r3, [fp, #-16]
   2add4:	b	2aeec <__assert_fail@plt+0x199a8>
   2add8:	ldr	r3, [fp, #-12]
   2addc:	ldr	r3, [r3, #28]
   2ade0:	cmp	r3, #0
   2ade4:	bne	2aed0 <__assert_fail@plt+0x1998c>
   2ade8:	ldr	r3, [fp, #-12]
   2adec:	add	r2, r3, #28
   2adf0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2adf4:	ldr	r3, [r3, #4]
   2adf8:	mov	r1, r3
   2adfc:	mov	r0, r2
   2ae00:	bl	1ae0c <__assert_fail@plt+0x98c8>
   2ae04:	mov	r3, r0
   2ae08:	str	r3, [fp, #-16]
   2ae0c:	ldr	r3, [fp, #-16]
   2ae10:	cmp	r3, #0
   2ae14:	movne	r3, #1
   2ae18:	moveq	r3, #0
   2ae1c:	uxtb	r3, r3
   2ae20:	cmp	r3, #0
   2ae24:	beq	2ae30 <__assert_fail@plt+0x198ec>
   2ae28:	mov	r3, #12
   2ae2c:	b	2aeec <__assert_fail@plt+0x199a8>
   2ae30:	mov	r3, #0
   2ae34:	str	r3, [fp, #-8]
   2ae38:	b	2aebc <__assert_fail@plt+0x19978>
   2ae3c:	ldr	r3, [fp, #-12]
   2ae40:	add	r0, r3, #28
   2ae44:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2ae48:	ldr	r2, [r3, #28]
   2ae4c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2ae50:	ldr	r1, [r3, #8]
   2ae54:	ldr	r3, [fp, #-8]
   2ae58:	lsl	r3, r3, #2
   2ae5c:	add	r3, r1, r3
   2ae60:	ldr	r3, [r3]
   2ae64:	mov	r1, r3
   2ae68:	mov	r3, r1
   2ae6c:	lsl	r3, r3, #1
   2ae70:	add	r3, r3, r1
   2ae74:	lsl	r3, r3, #2
   2ae78:	add	r3, r2, r3
   2ae7c:	mov	r1, r3
   2ae80:	bl	1b994 <__assert_fail@plt+0xa450>
   2ae84:	mov	r3, r0
   2ae88:	str	r3, [fp, #-16]
   2ae8c:	ldr	r3, [fp, #-16]
   2ae90:	cmp	r3, #0
   2ae94:	movne	r3, #1
   2ae98:	moveq	r3, #0
   2ae9c:	uxtb	r3, r3
   2aea0:	cmp	r3, #0
   2aea4:	beq	2aeb0 <__assert_fail@plt+0x1996c>
   2aea8:	mov	r3, #12
   2aeac:	b	2aeec <__assert_fail@plt+0x199a8>
   2aeb0:	ldr	r3, [fp, #-8]
   2aeb4:	add	r3, r3, #1
   2aeb8:	str	r3, [fp, #-8]
   2aebc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2aec0:	ldr	r3, [r3, #4]
   2aec4:	ldr	r2, [fp, #-8]
   2aec8:	cmp	r2, r3
   2aecc:	blt	2ae3c <__assert_fail@plt+0x198f8>
   2aed0:	ldr	r3, [fp, #-12]
   2aed4:	add	r3, r3, #28
   2aed8:	mov	r2, r3
   2aedc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2aee0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2aee4:	bl	1b168 <__assert_fail@plt+0x9c24>
   2aee8:	mov	r3, r0
   2aeec:	mov	r0, r3
   2aef0:	sub	sp, fp, #4
   2aef4:	ldr	fp, [sp]
   2aef8:	add	sp, sp, #4
   2aefc:	pop	{pc}		; (ldr pc, [sp], #4)
   2af00:	str	fp, [sp, #-8]!
   2af04:	str	lr, [sp, #4]
   2af08:	add	fp, sp, #4
   2af0c:	sub	sp, sp, #64	; 0x40
   2af10:	str	r0, [fp, #-56]	; 0xffffffc8
   2af14:	str	r1, [fp, #-60]	; 0xffffffc4
   2af18:	str	r2, [fp, #-64]	; 0xffffffc0
   2af1c:	str	r3, [fp, #-68]	; 0xffffffbc
   2af20:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2af24:	ldr	r1, [r3, #28]
   2af28:	ldr	r2, [fp, #-60]	; 0xffffffc4
   2af2c:	mov	r3, r2
   2af30:	lsl	r3, r3, #1
   2af34:	add	r3, r3, r2
   2af38:	lsl	r3, r3, #2
   2af3c:	add	r3, r1, r3
   2af40:	str	r3, [fp, #-12]
   2af44:	sub	r3, fp, #48	; 0x30
   2af48:	mov	r2, #12
   2af4c:	mov	r1, #0
   2af50:	mov	r0, r3
   2af54:	bl	11448 <memset@plt>
   2af58:	mov	r3, #0
   2af5c:	str	r3, [fp, #-8]
   2af60:	b	2b124 <__assert_fail@plt+0x19be0>
   2af64:	ldr	r3, [fp, #-12]
   2af68:	ldr	r2, [r3, #8]
   2af6c:	ldr	r3, [fp, #-8]
   2af70:	lsl	r3, r3, #2
   2af74:	add	r3, r2, r3
   2af78:	ldr	r3, [r3]
   2af7c:	str	r3, [fp, #-16]
   2af80:	ldr	r2, [fp, #-16]
   2af84:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2af88:	cmp	r2, r3
   2af8c:	beq	2b114 <__assert_fail@plt+0x19bd0>
   2af90:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2af94:	ldr	r2, [r3]
   2af98:	ldr	r3, [fp, #-16]
   2af9c:	lsl	r3, r3, #3
   2afa0:	add	r3, r2, r3
   2afa4:	ldrb	r3, [r3, #4]
   2afa8:	and	r3, r3, #8
   2afac:	cmp	r3, #0
   2afb0:	beq	2b118 <__assert_fail@plt+0x19bd4>
   2afb4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2afb8:	ldr	r1, [r3, #20]
   2afbc:	ldr	r2, [fp, #-16]
   2afc0:	mov	r3, r2
   2afc4:	lsl	r3, r3, #1
   2afc8:	add	r3, r3, r2
   2afcc:	lsl	r3, r3, #2
   2afd0:	add	r3, r1, r3
   2afd4:	ldr	r3, [r3, #8]
   2afd8:	ldr	r3, [r3]
   2afdc:	str	r3, [fp, #-20]	; 0xffffffec
   2afe0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2afe4:	ldr	r1, [r3, #20]
   2afe8:	ldr	r2, [fp, #-16]
   2afec:	mov	r3, r2
   2aff0:	lsl	r3, r3, #1
   2aff4:	add	r3, r3, r2
   2aff8:	lsl	r3, r3, #2
   2affc:	add	r3, r1, r3
   2b000:	ldr	r3, [r3, #4]
   2b004:	cmp	r3, #1
   2b008:	ble	2b03c <__assert_fail@plt+0x19af8>
   2b00c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2b010:	ldr	r1, [r3, #20]
   2b014:	ldr	r2, [fp, #-16]
   2b018:	mov	r3, r2
   2b01c:	lsl	r3, r3, #1
   2b020:	add	r3, r3, r2
   2b024:	lsl	r3, r3, #2
   2b028:	add	r3, r1, r3
   2b02c:	ldr	r3, [r3, #8]
   2b030:	add	r3, r3, #4
   2b034:	ldr	r3, [r3]
   2b038:	b	2b040 <__assert_fail@plt+0x19afc>
   2b03c:	mvn	r3, #0
   2b040:	str	r3, [fp, #-24]	; 0xffffffe8
   2b044:	ldr	r1, [fp, #-20]	; 0xffffffec
   2b048:	ldr	r0, [fp, #-12]
   2b04c:	bl	1c21c <__assert_fail@plt+0xacd8>
   2b050:	mov	r3, r0
   2b054:	cmp	r3, #0
   2b058:	bne	2b074 <__assert_fail@plt+0x19b30>
   2b05c:	ldr	r1, [fp, #-20]	; 0xffffffec
   2b060:	ldr	r0, [fp, #-64]	; 0xffffffc0
   2b064:	bl	1c21c <__assert_fail@plt+0xacd8>
   2b068:	mov	r3, r0
   2b06c:	cmp	r3, #0
   2b070:	bne	2b0b0 <__assert_fail@plt+0x19b6c>
   2b074:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2b078:	cmp	r3, #0
   2b07c:	ble	2b118 <__assert_fail@plt+0x19bd4>
   2b080:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2b084:	ldr	r0, [fp, #-12]
   2b088:	bl	1c21c <__assert_fail@plt+0xacd8>
   2b08c:	mov	r3, r0
   2b090:	cmp	r3, #0
   2b094:	bne	2b118 <__assert_fail@plt+0x19bd4>
   2b098:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2b09c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   2b0a0:	bl	1c21c <__assert_fail@plt+0xacd8>
   2b0a4:	mov	r3, r0
   2b0a8:	cmp	r3, #0
   2b0ac:	beq	2b118 <__assert_fail@plt+0x19bd4>
   2b0b0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2b0b4:	ldr	r1, [r3, #28]
   2b0b8:	ldr	r2, [fp, #-16]
   2b0bc:	mov	r3, r2
   2b0c0:	lsl	r3, r3, #1
   2b0c4:	add	r3, r3, r2
   2b0c8:	lsl	r3, r3, #2
   2b0cc:	add	r2, r1, r3
   2b0d0:	sub	r3, fp, #48	; 0x30
   2b0d4:	ldr	r1, [fp, #-68]	; 0xffffffbc
   2b0d8:	mov	r0, r3
   2b0dc:	bl	1b168 <__assert_fail@plt+0x9c24>
   2b0e0:	str	r0, [fp, #-28]	; 0xffffffe4
   2b0e4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2b0e8:	cmp	r3, #0
   2b0ec:	movne	r3, #1
   2b0f0:	moveq	r3, #0
   2b0f4:	uxtb	r3, r3
   2b0f8:	cmp	r3, #0
   2b0fc:	beq	2b118 <__assert_fail@plt+0x19bd4>
   2b100:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2b104:	mov	r0, r3
   2b108:	bl	151ec <__assert_fail@plt+0x3ca8>
   2b10c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2b110:	b	2b1d0 <__assert_fail@plt+0x19c8c>
   2b114:	nop	{0}
   2b118:	ldr	r3, [fp, #-8]
   2b11c:	add	r3, r3, #1
   2b120:	str	r3, [fp, #-8]
   2b124:	ldr	r3, [fp, #-12]
   2b128:	ldr	r3, [r3, #4]
   2b12c:	ldr	r2, [fp, #-8]
   2b130:	cmp	r2, r3
   2b134:	blt	2af64 <__assert_fail@plt+0x19a20>
   2b138:	mov	r3, #0
   2b13c:	str	r3, [fp, #-8]
   2b140:	b	2b1ac <__assert_fail@plt+0x19c68>
   2b144:	ldr	r3, [fp, #-12]
   2b148:	ldr	r2, [r3, #8]
   2b14c:	ldr	r3, [fp, #-8]
   2b150:	lsl	r3, r3, #2
   2b154:	add	r3, r2, r3
   2b158:	ldr	r3, [r3]
   2b15c:	str	r3, [fp, #-32]	; 0xffffffe0
   2b160:	sub	r3, fp, #48	; 0x30
   2b164:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2b168:	mov	r0, r3
   2b16c:	bl	1c21c <__assert_fail@plt+0xacd8>
   2b170:	mov	r3, r0
   2b174:	cmp	r3, #0
   2b178:	bne	2b1a0 <__assert_fail@plt+0x19c5c>
   2b17c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2b180:	ldr	r0, [fp, #-64]	; 0xffffffc0
   2b184:	bl	1c21c <__assert_fail@plt+0xacd8>
   2b188:	mov	r3, r0
   2b18c:	sub	r3, r3, #1
   2b190:	str	r3, [fp, #-36]	; 0xffffffdc
   2b194:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2b198:	ldr	r0, [fp, #-64]	; 0xffffffc0
   2b19c:	bl	1c308 <__assert_fail@plt+0xadc4>
   2b1a0:	ldr	r3, [fp, #-8]
   2b1a4:	add	r3, r3, #1
   2b1a8:	str	r3, [fp, #-8]
   2b1ac:	ldr	r3, [fp, #-12]
   2b1b0:	ldr	r3, [r3, #4]
   2b1b4:	ldr	r2, [fp, #-8]
   2b1b8:	cmp	r2, r3
   2b1bc:	blt	2b144 <__assert_fail@plt+0x19c00>
   2b1c0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2b1c4:	mov	r0, r3
   2b1c8:	bl	151ec <__assert_fail@plt+0x3ca8>
   2b1cc:	mov	r3, #0
   2b1d0:	mov	r0, r3
   2b1d4:	sub	sp, fp, #4
   2b1d8:	ldr	fp, [sp]
   2b1dc:	add	sp, sp, #4
   2b1e0:	pop	{pc}		; (ldr pc, [sp], #4)
   2b1e4:	str	fp, [sp, #-8]!
   2b1e8:	str	lr, [sp, #4]
   2b1ec:	add	fp, sp, #4
   2b1f0:	sub	sp, sp, #56	; 0x38
   2b1f4:	str	r0, [fp, #-40]	; 0xffffffd8
   2b1f8:	str	r1, [fp, #-44]	; 0xffffffd4
   2b1fc:	str	r2, [fp, #-48]	; 0xffffffd0
   2b200:	str	r3, [fp, #-52]	; 0xffffffcc
   2b204:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2b208:	ldr	r3, [r3, #84]	; 0x54
   2b20c:	str	r3, [fp, #-12]
   2b210:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2b214:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2b218:	bl	3117c <__assert_fail@plt+0x1fc38>
   2b21c:	str	r0, [fp, #-16]
   2b220:	ldr	r1, [fp, #8]
   2b224:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2b228:	bl	3117c <__assert_fail@plt+0x1fc38>
   2b22c:	str	r0, [fp, #-20]	; 0xffffffec
   2b230:	mov	r3, #0
   2b234:	str	r3, [fp, #-8]
   2b238:	b	2b338 <__assert_fail@plt+0x19df4>
   2b23c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2b240:	ldr	r2, [r3, #116]	; 0x74
   2b244:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2b248:	ldr	r1, [r3, #8]
   2b24c:	ldr	r3, [fp, #-8]
   2b250:	lsl	r3, r3, #2
   2b254:	add	r3, r1, r3
   2b258:	ldr	r3, [r3]
   2b25c:	mov	r1, r3
   2b260:	mov	r3, r1
   2b264:	lsl	r3, r3, #1
   2b268:	add	r3, r3, r1
   2b26c:	lsl	r3, r3, #3
   2b270:	add	r3, r2, r3
   2b274:	str	r3, [fp, #-24]	; 0xffffffe8
   2b278:	ldr	r3, [fp, #-12]
   2b27c:	ldr	r2, [r3]
   2b280:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2b284:	ldr	r3, [r3]
   2b288:	lsl	r3, r3, #3
   2b28c:	add	r3, r2, r3
   2b290:	ldr	r3, [r3]
   2b294:	str	r3, [fp, #-28]	; 0xffffffe4
   2b298:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2b29c:	ldr	r2, [r3, #8]
   2b2a0:	ldr	r3, [fp, #-8]
   2b2a4:	lsl	r3, r3, #2
   2b2a8:	add	r3, r2, r3
   2b2ac:	ldr	r1, [r3]
   2b2b0:	ldr	r3, [fp, #-16]
   2b2b4:	str	r3, [sp, #4]
   2b2b8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2b2bc:	str	r3, [sp]
   2b2c0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2b2c4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2b2c8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2b2cc:	bl	2b65c <__assert_fail@plt+0x1a118>
   2b2d0:	str	r0, [fp, #-32]	; 0xffffffe0
   2b2d4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2b2d8:	ldr	r2, [r3, #8]
   2b2dc:	ldr	r3, [fp, #-8]
   2b2e0:	lsl	r3, r3, #2
   2b2e4:	add	r3, r2, r3
   2b2e8:	ldr	r1, [r3]
   2b2ec:	ldr	r3, [fp, #-20]	; 0xffffffec
   2b2f0:	str	r3, [sp, #4]
   2b2f4:	ldr	r3, [fp, #8]
   2b2f8:	str	r3, [sp]
   2b2fc:	ldr	r3, [fp, #4]
   2b300:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2b304:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2b308:	bl	2b65c <__assert_fail@plt+0x1a118>
   2b30c:	str	r0, [fp, #-36]	; 0xffffffdc
   2b310:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2b314:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2b318:	cmp	r2, r3
   2b31c:	bne	2b330 <__assert_fail@plt+0x19dec>
   2b320:	ldr	r3, [fp, #-8]
   2b324:	add	r3, r3, #1
   2b328:	str	r3, [fp, #-8]
   2b32c:	b	2b338 <__assert_fail@plt+0x19df4>
   2b330:	mov	r3, #1
   2b334:	b	2b350 <__assert_fail@plt+0x19e0c>
   2b338:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2b33c:	ldr	r3, [r3, #4]
   2b340:	ldr	r2, [fp, #-8]
   2b344:	cmp	r2, r3
   2b348:	blt	2b23c <__assert_fail@plt+0x19cf8>
   2b34c:	mov	r3, #0
   2b350:	mov	r0, r3
   2b354:	sub	sp, fp, #4
   2b358:	ldr	fp, [sp]
   2b35c:	add	sp, sp, #4
   2b360:	pop	{pc}		; (ldr pc, [sp], #4)
   2b364:	str	fp, [sp, #-8]!
   2b368:	str	lr, [sp, #4]
   2b36c:	add	fp, sp, #4
   2b370:	sub	sp, sp, #56	; 0x38
   2b374:	str	r0, [fp, #-40]	; 0xffffffd8
   2b378:	str	r1, [fp, #-44]	; 0xffffffd4
   2b37c:	str	r2, [fp, #-48]	; 0xffffffd0
   2b380:	str	r3, [fp, #-52]	; 0xffffffcc
   2b384:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2b388:	ldr	r3, [r3, #84]	; 0x54
   2b38c:	str	r3, [fp, #-16]
   2b390:	ldr	r3, [fp, #-16]
   2b394:	ldr	r1, [r3, #24]
   2b398:	ldr	r2, [fp, #-52]	; 0xffffffcc
   2b39c:	mov	r3, r2
   2b3a0:	lsl	r3, r3, #1
   2b3a4:	add	r3, r3, r2
   2b3a8:	lsl	r3, r3, #2
   2b3ac:	add	r3, r1, r3
   2b3b0:	str	r3, [fp, #-20]	; 0xffffffec
   2b3b4:	mov	r3, #0
   2b3b8:	str	r3, [fp, #-8]
   2b3bc:	b	2b628 <__assert_fail@plt+0x1a0e4>
   2b3c0:	ldr	r3, [fp, #-20]	; 0xffffffec
   2b3c4:	ldr	r2, [r3, #8]
   2b3c8:	ldr	r3, [fp, #-8]
   2b3cc:	lsl	r3, r3, #2
   2b3d0:	add	r3, r2, r3
   2b3d4:	ldr	r3, [r3]
   2b3d8:	str	r3, [fp, #-24]	; 0xffffffe8
   2b3dc:	ldr	r3, [fp, #-16]
   2b3e0:	ldr	r2, [r3]
   2b3e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2b3e8:	lsl	r3, r3, #3
   2b3ec:	add	r3, r2, r3
   2b3f0:	ldrb	r3, [r3, #4]
   2b3f4:	cmp	r3, #8
   2b3f8:	beq	2b588 <__assert_fail@plt+0x1a044>
   2b3fc:	cmp	r3, #9
   2b400:	beq	2b5c4 <__assert_fail@plt+0x1a080>
   2b404:	cmp	r3, #4
   2b408:	bne	2b600 <__assert_fail@plt+0x1a0bc>
   2b40c:	ldr	r3, [fp, #4]
   2b410:	cmn	r3, #1
   2b414:	beq	2b608 <__assert_fail@plt+0x1a0c4>
   2b418:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2b41c:	ldr	r1, [r3, #116]	; 0x74
   2b420:	ldr	r2, [fp, #4]
   2b424:	mov	r3, r2
   2b428:	lsl	r3, r3, #1
   2b42c:	add	r3, r3, r2
   2b430:	lsl	r3, r3, #3
   2b434:	add	r3, r1, r3
   2b438:	str	r3, [fp, #-12]
   2b43c:	ldr	r3, [fp, #-12]
   2b440:	ldr	r3, [r3]
   2b444:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2b448:	cmp	r2, r3
   2b44c:	bne	2b560 <__assert_fail@plt+0x1a01c>
   2b450:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2b454:	cmp	r3, #31
   2b458:	bgt	2b478 <__assert_fail@plt+0x19f34>
   2b45c:	ldr	r3, [fp, #-12]
   2b460:	ldr	r2, [r3, #16]
   2b464:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2b468:	lsr	r3, r2, r3
   2b46c:	and	r3, r3, #1
   2b470:	cmp	r3, #0
   2b474:	beq	2b568 <__assert_fail@plt+0x1a024>
   2b478:	ldr	r3, [fp, #-16]
   2b47c:	ldr	r1, [r3, #20]
   2b480:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2b484:	mov	r3, r2
   2b488:	lsl	r3, r3, #1
   2b48c:	add	r3, r3, r2
   2b490:	lsl	r3, r3, #2
   2b494:	add	r3, r1, r3
   2b498:	ldr	r3, [r3, #8]
   2b49c:	ldr	r3, [r3]
   2b4a0:	str	r3, [fp, #-28]	; 0xffffffe4
   2b4a4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2b4a8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2b4ac:	cmp	r2, r3
   2b4b0:	bne	2b4d4 <__assert_fail@plt+0x19f90>
   2b4b4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2b4b8:	and	r3, r3, #1
   2b4bc:	cmp	r3, #0
   2b4c0:	beq	2b4cc <__assert_fail@plt+0x19f88>
   2b4c4:	mvn	r3, #0
   2b4c8:	b	2b648 <__assert_fail@plt+0x1a104>
   2b4cc:	mov	r3, #0
   2b4d0:	b	2b648 <__assert_fail@plt+0x1a104>
   2b4d4:	ldr	r3, [fp, #4]
   2b4d8:	str	r3, [sp]
   2b4dc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2b4e0:	ldr	r2, [fp, #-48]	; 0xffffffd0
   2b4e4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2b4e8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2b4ec:	bl	2b364 <__assert_fail@plt+0x19e20>
   2b4f0:	str	r0, [fp, #-32]	; 0xffffffe0
   2b4f4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2b4f8:	cmn	r3, #1
   2b4fc:	bne	2b508 <__assert_fail@plt+0x19fc4>
   2b500:	mvn	r3, #0
   2b504:	b	2b648 <__assert_fail@plt+0x1a104>
   2b508:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2b50c:	cmp	r3, #0
   2b510:	bne	2b52c <__assert_fail@plt+0x19fe8>
   2b514:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2b518:	and	r3, r3, #2
   2b51c:	cmp	r3, #0
   2b520:	beq	2b52c <__assert_fail@plt+0x19fe8>
   2b524:	mov	r3, #0
   2b528:	b	2b648 <__assert_fail@plt+0x1a104>
   2b52c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2b530:	cmp	r3, #31
   2b534:	bgt	2b56c <__assert_fail@plt+0x1a028>
   2b538:	ldr	r3, [fp, #-12]
   2b53c:	ldr	r2, [r3, #16]
   2b540:	mov	r1, #1
   2b544:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2b548:	lsl	r3, r1, r3
   2b54c:	mvn	r3, r3
   2b550:	and	r2, r2, r3
   2b554:	ldr	r3, [fp, #-12]
   2b558:	str	r2, [r3, #16]
   2b55c:	b	2b56c <__assert_fail@plt+0x1a028>
   2b560:	nop	{0}
   2b564:	b	2b56c <__assert_fail@plt+0x1a028>
   2b568:	nop	{0}
   2b56c:	ldr	r3, [fp, #-12]
   2b570:	add	r2, r3, #24
   2b574:	str	r2, [fp, #-12]
   2b578:	ldrb	r3, [r3, #20]
   2b57c:	cmp	r3, #0
   2b580:	bne	2b43c <__assert_fail@plt+0x19ef8>
   2b584:	b	2b608 <__assert_fail@plt+0x1a0c4>
   2b588:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2b58c:	and	r3, r3, #1
   2b590:	cmp	r3, #0
   2b594:	beq	2b610 <__assert_fail@plt+0x1a0cc>
   2b598:	ldr	r3, [fp, #-16]
   2b59c:	ldr	r2, [r3]
   2b5a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2b5a4:	lsl	r3, r3, #3
   2b5a8:	add	r3, r2, r3
   2b5ac:	ldr	r3, [r3]
   2b5b0:	ldr	r2, [fp, #-48]	; 0xffffffd0
   2b5b4:	cmp	r2, r3
   2b5b8:	bne	2b610 <__assert_fail@plt+0x1a0cc>
   2b5bc:	mvn	r3, #0
   2b5c0:	b	2b648 <__assert_fail@plt+0x1a104>
   2b5c4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2b5c8:	and	r3, r3, #2
   2b5cc:	cmp	r3, #0
   2b5d0:	beq	2b618 <__assert_fail@plt+0x1a0d4>
   2b5d4:	ldr	r3, [fp, #-16]
   2b5d8:	ldr	r2, [r3]
   2b5dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2b5e0:	lsl	r3, r3, #3
   2b5e4:	add	r3, r2, r3
   2b5e8:	ldr	r3, [r3]
   2b5ec:	ldr	r2, [fp, #-48]	; 0xffffffd0
   2b5f0:	cmp	r2, r3
   2b5f4:	bne	2b618 <__assert_fail@plt+0x1a0d4>
   2b5f8:	mov	r3, #0
   2b5fc:	b	2b648 <__assert_fail@plt+0x1a104>
   2b600:	nop	{0}
   2b604:	b	2b61c <__assert_fail@plt+0x1a0d8>
   2b608:	nop	{0}
   2b60c:	b	2b61c <__assert_fail@plt+0x1a0d8>
   2b610:	nop	{0}
   2b614:	b	2b61c <__assert_fail@plt+0x1a0d8>
   2b618:	nop	{0}
   2b61c:	ldr	r3, [fp, #-8]
   2b620:	add	r3, r3, #1
   2b624:	str	r3, [fp, #-8]
   2b628:	ldr	r3, [fp, #-20]	; 0xffffffec
   2b62c:	ldr	r3, [r3, #4]
   2b630:	ldr	r2, [fp, #-8]
   2b634:	cmp	r2, r3
   2b638:	blt	2b3c0 <__assert_fail@plt+0x19e7c>
   2b63c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2b640:	asr	r3, r3, #1
   2b644:	and	r3, r3, #1
   2b648:	mov	r0, r3
   2b64c:	sub	sp, fp, #4
   2b650:	ldr	fp, [sp]
   2b654:	add	sp, sp, #4
   2b658:	pop	{pc}		; (ldr pc, [sp], #4)
   2b65c:	str	fp, [sp, #-8]!
   2b660:	str	lr, [sp, #4]
   2b664:	add	fp, sp, #4
   2b668:	sub	sp, sp, #32
   2b66c:	str	r0, [fp, #-16]
   2b670:	str	r1, [fp, #-20]	; 0xffffffec
   2b674:	str	r2, [fp, #-24]	; 0xffffffe8
   2b678:	str	r3, [fp, #-28]	; 0xffffffe4
   2b67c:	ldr	r3, [fp, #-16]
   2b680:	ldr	r1, [r3, #116]	; 0x74
   2b684:	ldr	r2, [fp, #-20]	; 0xffffffec
   2b688:	mov	r3, r2
   2b68c:	lsl	r3, r3, #1
   2b690:	add	r3, r3, r2
   2b694:	lsl	r3, r3, #3
   2b698:	add	r3, r1, r3
   2b69c:	str	r3, [fp, #-8]
   2b6a0:	ldr	r3, [fp, #-8]
   2b6a4:	ldr	r3, [r3, #8]
   2b6a8:	ldr	r2, [fp, #4]
   2b6ac:	cmp	r2, r3
   2b6b0:	bge	2b6bc <__assert_fail@plt+0x1a178>
   2b6b4:	mvn	r3, #0
   2b6b8:	b	2b758 <__assert_fail@plt+0x1a214>
   2b6bc:	ldr	r3, [fp, #-8]
   2b6c0:	ldr	r3, [r3, #12]
   2b6c4:	ldr	r2, [fp, #4]
   2b6c8:	cmp	r2, r3
   2b6cc:	ble	2b6d8 <__assert_fail@plt+0x1a194>
   2b6d0:	mov	r3, #1
   2b6d4:	b	2b758 <__assert_fail@plt+0x1a214>
   2b6d8:	ldr	r3, [fp, #-8]
   2b6dc:	ldr	r3, [r3, #8]
   2b6e0:	ldr	r2, [fp, #4]
   2b6e4:	cmp	r2, r3
   2b6e8:	moveq	r3, #1
   2b6ec:	movne	r3, #0
   2b6f0:	uxtb	r3, r3
   2b6f4:	str	r3, [fp, #-12]
   2b6f8:	ldr	r3, [fp, #-8]
   2b6fc:	ldr	r3, [r3, #12]
   2b700:	ldr	r2, [fp, #4]
   2b704:	cmp	r2, r3
   2b708:	bne	2b714 <__assert_fail@plt+0x1a1d0>
   2b70c:	mov	r3, #2
   2b710:	b	2b718 <__assert_fail@plt+0x1a1d4>
   2b714:	mov	r3, #0
   2b718:	ldr	r2, [fp, #-12]
   2b71c:	orr	r3, r2, r3
   2b720:	str	r3, [fp, #-12]
   2b724:	ldr	r3, [fp, #-12]
   2b728:	cmp	r3, #0
   2b72c:	bne	2b738 <__assert_fail@plt+0x1a1f4>
   2b730:	mov	r3, #0
   2b734:	b	2b758 <__assert_fail@plt+0x1a214>
   2b738:	ldr	r3, [fp, #8]
   2b73c:	str	r3, [sp]
   2b740:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2b744:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2b748:	ldr	r1, [fp, #-12]
   2b74c:	ldr	r0, [fp, #-16]
   2b750:	bl	2b364 <__assert_fail@plt+0x19e20>
   2b754:	mov	r3, r0
   2b758:	mov	r0, r3
   2b75c:	sub	sp, fp, #4
   2b760:	ldr	fp, [sp]
   2b764:	add	sp, sp, #4
   2b768:	pop	{pc}		; (ldr pc, [sp], #4)
   2b76c:	str	fp, [sp, #-8]!
   2b770:	str	lr, [sp, #4]
   2b774:	add	fp, sp, #4
   2b778:	sub	sp, sp, #64	; 0x40
   2b77c:	str	r0, [fp, #-56]	; 0xffffffc8
   2b780:	str	r1, [fp, #-60]	; 0xffffffc4
   2b784:	str	r2, [fp, #-64]	; 0xffffffc0
   2b788:	str	r3, [fp, #-68]	; 0xffffffbc
   2b78c:	mov	r3, #0
   2b790:	str	r3, [fp, #-12]
   2b794:	b	2bb64 <__assert_fail@plt+0x1a620>
   2b798:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2b79c:	ldr	r2, [r3, #8]
   2b7a0:	ldr	r3, [fp, #-12]
   2b7a4:	lsl	r3, r3, #2
   2b7a8:	add	r3, r2, r3
   2b7ac:	ldr	r3, [r3]
   2b7b0:	mov	r2, r3
   2b7b4:	mov	r3, r2
   2b7b8:	lsl	r3, r3, #1
   2b7bc:	add	r3, r3, r2
   2b7c0:	lsl	r3, r3, #3
   2b7c4:	mov	r2, r3
   2b7c8:	ldr	r3, [fp, #4]
   2b7cc:	add	r3, r3, r2
   2b7d0:	str	r3, [fp, #-24]	; 0xffffffe8
   2b7d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2b7d8:	ldr	r3, [r3, #8]
   2b7dc:	ldr	r2, [fp, #8]
   2b7e0:	cmp	r2, r3
   2b7e4:	ble	2bb54 <__assert_fail@plt+0x1a610>
   2b7e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2b7ec:	ldr	r3, [r3, #4]
   2b7f0:	ldr	r2, [fp, #8]
   2b7f4:	cmp	r2, r3
   2b7f8:	bgt	2bb54 <__assert_fail@plt+0x1a610>
   2b7fc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2b800:	ldr	r2, [r3]
   2b804:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2b808:	ldr	r3, [r3]
   2b80c:	lsl	r3, r3, #3
   2b810:	add	r3, r2, r3
   2b814:	ldr	r3, [r3]
   2b818:	str	r3, [fp, #-28]	; 0xffffffe4
   2b81c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2b820:	ldr	r3, [r3, #12]
   2b824:	ldr	r2, [fp, #8]
   2b828:	cmp	r2, r3
   2b82c:	bne	2ba70 <__assert_fail@plt+0x1a52c>
   2b830:	mvn	r3, #0
   2b834:	str	r3, [fp, #-16]
   2b838:	mvn	r3, #0
   2b83c:	str	r3, [fp, #-20]	; 0xffffffec
   2b840:	mov	r3, #0
   2b844:	str	r3, [fp, #-8]
   2b848:	b	2b904 <__assert_fail@plt+0x1a3c0>
   2b84c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2b850:	ldr	r2, [r3, #8]
   2b854:	ldr	r3, [fp, #-8]
   2b858:	lsl	r3, r3, #2
   2b85c:	add	r3, r2, r3
   2b860:	ldr	r3, [r3]
   2b864:	str	r3, [fp, #-32]	; 0xffffffe0
   2b868:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2b86c:	ldr	r2, [r3]
   2b870:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2b874:	lsl	r3, r3, #3
   2b878:	add	r3, r2, r3
   2b87c:	ldrb	r3, [r3, #4]
   2b880:	str	r3, [fp, #-36]	; 0xffffffdc
   2b884:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2b888:	cmp	r3, #8
   2b88c:	bne	2b8c0 <__assert_fail@plt+0x1a37c>
   2b890:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2b894:	ldr	r2, [r3]
   2b898:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2b89c:	lsl	r3, r3, #3
   2b8a0:	add	r3, r2, r3
   2b8a4:	ldr	r3, [r3]
   2b8a8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2b8ac:	cmp	r2, r3
   2b8b0:	bne	2b8c0 <__assert_fail@plt+0x1a37c>
   2b8b4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2b8b8:	str	r3, [fp, #-16]
   2b8bc:	b	2b8f8 <__assert_fail@plt+0x1a3b4>
   2b8c0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2b8c4:	cmp	r3, #9
   2b8c8:	bne	2b8f8 <__assert_fail@plt+0x1a3b4>
   2b8cc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2b8d0:	ldr	r2, [r3]
   2b8d4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2b8d8:	lsl	r3, r3, #3
   2b8dc:	add	r3, r2, r3
   2b8e0:	ldr	r3, [r3]
   2b8e4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2b8e8:	cmp	r2, r3
   2b8ec:	bne	2b8f8 <__assert_fail@plt+0x1a3b4>
   2b8f0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2b8f4:	str	r3, [fp, #-20]	; 0xffffffec
   2b8f8:	ldr	r3, [fp, #-8]
   2b8fc:	add	r3, r3, #1
   2b900:	str	r3, [fp, #-8]
   2b904:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2b908:	ldr	r3, [r3, #4]
   2b90c:	ldr	r2, [fp, #-8]
   2b910:	cmp	r2, r3
   2b914:	blt	2b84c <__assert_fail@plt+0x1a308>
   2b918:	ldr	r3, [fp, #-16]
   2b91c:	cmp	r3, #0
   2b920:	blt	2b960 <__assert_fail@plt+0x1a41c>
   2b924:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2b928:	ldr	r2, [fp, #-60]	; 0xffffffc4
   2b92c:	ldr	r1, [fp, #-16]
   2b930:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2b934:	bl	2af00 <__assert_fail@plt+0x199bc>
   2b938:	str	r0, [fp, #-40]	; 0xffffffd8
   2b93c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2b940:	cmp	r3, #0
   2b944:	movne	r3, #1
   2b948:	moveq	r3, #0
   2b94c:	uxtb	r3, r3
   2b950:	cmp	r3, #0
   2b954:	beq	2b960 <__assert_fail@plt+0x1a41c>
   2b958:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2b95c:	b	2bb7c <__assert_fail@plt+0x1a638>
   2b960:	ldr	r3, [fp, #-20]	; 0xffffffec
   2b964:	cmp	r3, #0
   2b968:	blt	2bb58 <__assert_fail@plt+0x1a614>
   2b96c:	mov	r3, #0
   2b970:	str	r3, [fp, #-8]
   2b974:	b	2ba58 <__assert_fail@plt+0x1a514>
   2b978:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2b97c:	ldr	r2, [r3, #8]
   2b980:	ldr	r3, [fp, #-8]
   2b984:	lsl	r3, r3, #2
   2b988:	add	r3, r2, r3
   2b98c:	ldr	r3, [r3]
   2b990:	str	r3, [fp, #-44]	; 0xffffffd4
   2b994:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2b998:	ldr	r1, [r3, #28]
   2b99c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   2b9a0:	mov	r3, r2
   2b9a4:	lsl	r3, r3, #1
   2b9a8:	add	r3, r3, r2
   2b9ac:	lsl	r3, r3, #2
   2b9b0:	add	r3, r1, r3
   2b9b4:	ldr	r1, [fp, #-20]	; 0xffffffec
   2b9b8:	mov	r0, r3
   2b9bc:	bl	1c21c <__assert_fail@plt+0xacd8>
   2b9c0:	mov	r3, r0
   2b9c4:	cmp	r3, #0
   2b9c8:	bne	2ba4c <__assert_fail@plt+0x1a508>
   2b9cc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2b9d0:	ldr	r1, [r3, #24]
   2b9d4:	ldr	r2, [fp, #-44]	; 0xffffffd4
   2b9d8:	mov	r3, r2
   2b9dc:	lsl	r3, r3, #1
   2b9e0:	add	r3, r3, r2
   2b9e4:	lsl	r3, r3, #2
   2b9e8:	add	r3, r1, r3
   2b9ec:	ldr	r1, [fp, #-20]	; 0xffffffec
   2b9f0:	mov	r0, r3
   2b9f4:	bl	1c21c <__assert_fail@plt+0xacd8>
   2b9f8:	mov	r3, r0
   2b9fc:	cmp	r3, #0
   2ba00:	bne	2ba4c <__assert_fail@plt+0x1a508>
   2ba04:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2ba08:	ldr	r2, [fp, #-60]	; 0xffffffc4
   2ba0c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2ba10:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2ba14:	bl	2af00 <__assert_fail@plt+0x199bc>
   2ba18:	str	r0, [fp, #-40]	; 0xffffffd8
   2ba1c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2ba20:	cmp	r3, #0
   2ba24:	movne	r3, #1
   2ba28:	moveq	r3, #0
   2ba2c:	uxtb	r3, r3
   2ba30:	cmp	r3, #0
   2ba34:	beq	2ba40 <__assert_fail@plt+0x1a4fc>
   2ba38:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2ba3c:	b	2bb7c <__assert_fail@plt+0x1a638>
   2ba40:	ldr	r3, [fp, #-8]
   2ba44:	sub	r3, r3, #1
   2ba48:	str	r3, [fp, #-8]
   2ba4c:	ldr	r3, [fp, #-8]
   2ba50:	add	r3, r3, #1
   2ba54:	str	r3, [fp, #-8]
   2ba58:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2ba5c:	ldr	r3, [r3, #4]
   2ba60:	ldr	r2, [fp, #-8]
   2ba64:	cmp	r2, r3
   2ba68:	blt	2b978 <__assert_fail@plt+0x1a434>
   2ba6c:	b	2bb58 <__assert_fail@plt+0x1a614>
   2ba70:	mov	r3, #0
   2ba74:	str	r3, [fp, #-8]
   2ba78:	b	2bb3c <__assert_fail@plt+0x1a5f8>
   2ba7c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2ba80:	ldr	r2, [r3, #8]
   2ba84:	ldr	r3, [fp, #-8]
   2ba88:	lsl	r3, r3, #2
   2ba8c:	add	r3, r2, r3
   2ba90:	ldr	r3, [r3]
   2ba94:	str	r3, [fp, #-48]	; 0xffffffd0
   2ba98:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2ba9c:	ldr	r2, [r3]
   2baa0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2baa4:	lsl	r3, r3, #3
   2baa8:	add	r3, r2, r3
   2baac:	ldrb	r3, [r3, #4]
   2bab0:	str	r3, [fp, #-52]	; 0xffffffcc
   2bab4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2bab8:	cmp	r3, #9
   2babc:	beq	2bacc <__assert_fail@plt+0x1a588>
   2bac0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2bac4:	cmp	r3, #8
   2bac8:	bne	2bb30 <__assert_fail@plt+0x1a5ec>
   2bacc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2bad0:	ldr	r2, [r3]
   2bad4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2bad8:	lsl	r3, r3, #3
   2badc:	add	r3, r2, r3
   2bae0:	ldr	r3, [r3]
   2bae4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2bae8:	cmp	r2, r3
   2baec:	bne	2bb2c <__assert_fail@plt+0x1a5e8>
   2baf0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2baf4:	ldr	r2, [fp, #-60]	; 0xffffffc4
   2baf8:	ldr	r1, [fp, #-48]	; 0xffffffd0
   2bafc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2bb00:	bl	2af00 <__assert_fail@plt+0x199bc>
   2bb04:	str	r0, [fp, #-40]	; 0xffffffd8
   2bb08:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2bb0c:	cmp	r3, #0
   2bb10:	movne	r3, #1
   2bb14:	moveq	r3, #0
   2bb18:	uxtb	r3, r3
   2bb1c:	cmp	r3, #0
   2bb20:	beq	2bb30 <__assert_fail@plt+0x1a5ec>
   2bb24:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2bb28:	b	2bb7c <__assert_fail@plt+0x1a638>
   2bb2c:	nop	{0}
   2bb30:	ldr	r3, [fp, #-8]
   2bb34:	add	r3, r3, #1
   2bb38:	str	r3, [fp, #-8]
   2bb3c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2bb40:	ldr	r3, [r3, #4]
   2bb44:	ldr	r2, [fp, #-8]
   2bb48:	cmp	r2, r3
   2bb4c:	blt	2ba7c <__assert_fail@plt+0x1a538>
   2bb50:	b	2bb58 <__assert_fail@plt+0x1a614>
   2bb54:	nop	{0}
   2bb58:	ldr	r3, [fp, #-12]
   2bb5c:	add	r3, r3, #1
   2bb60:	str	r3, [fp, #-12]
   2bb64:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2bb68:	ldr	r3, [r3, #4]
   2bb6c:	ldr	r2, [fp, #-12]
   2bb70:	cmp	r2, r3
   2bb74:	blt	2b798 <__assert_fail@plt+0x1a254>
   2bb78:	mov	r3, #0
   2bb7c:	mov	r0, r3
   2bb80:	sub	sp, fp, #4
   2bb84:	ldr	fp, [sp]
   2bb88:	add	sp, sp, #4
   2bb8c:	pop	{pc}		; (ldr pc, [sp], #4)
   2bb90:	str	fp, [sp, #-8]!
   2bb94:	str	lr, [sp, #4]
   2bb98:	add	fp, sp, #4
   2bb9c:	sub	sp, sp, #104	; 0x68
   2bba0:	str	r0, [fp, #-88]	; 0xffffffa8
   2bba4:	str	r1, [fp, #-92]	; 0xffffffa4
   2bba8:	str	r2, [fp, #-96]	; 0xffffffa0
   2bbac:	str	r3, [fp, #-100]	; 0xffffff9c
   2bbb0:	ldr	r3, [fp, #-88]	; 0xffffffa8
   2bbb4:	ldr	r3, [r3, #84]	; 0x54
   2bbb8:	str	r3, [fp, #-24]	; 0xffffffe8
   2bbbc:	ldr	r1, [fp, #-96]	; 0xffffffa0
   2bbc0:	ldr	r0, [fp, #-88]	; 0xffffffa8
   2bbc4:	bl	3117c <__assert_fail@plt+0x1fc38>
   2bbc8:	str	r0, [fp, #-28]	; 0xffffffe4
   2bbcc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2bbd0:	cmn	r3, #1
   2bbd4:	bne	2bbe0 <__assert_fail@plt+0x1a69c>
   2bbd8:	mov	r3, #0
   2bbdc:	b	2c034 <__assert_fail@plt+0x1aaf0>
   2bbe0:	mov	r3, #0
   2bbe4:	str	r3, [fp, #-84]	; 0xffffffac
   2bbe8:	mov	r3, #0
   2bbec:	str	r3, [fp, #-12]
   2bbf0:	b	2bfe4 <__assert_fail@plt+0x1aaa0>
   2bbf4:	ldr	r3, [fp, #-100]	; 0xffffff9c
   2bbf8:	ldr	r2, [r3, #8]
   2bbfc:	ldr	r3, [fp, #-12]
   2bc00:	lsl	r3, r3, #2
   2bc04:	add	r3, r2, r3
   2bc08:	ldr	r3, [r3]
   2bc0c:	str	r3, [fp, #-32]	; 0xffffffe0
   2bc10:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2bc14:	ldr	r2, [r3]
   2bc18:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2bc1c:	lsl	r3, r3, #3
   2bc20:	add	r3, r2, r3
   2bc24:	ldrb	r3, [r3, #4]
   2bc28:	str	r3, [fp, #-36]	; 0xffffffdc
   2bc2c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2bc30:	ldr	r3, [r3, #8]
   2bc34:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2bc38:	cmp	r2, r3
   2bc3c:	bne	2bc54 <__assert_fail@plt+0x1a710>
   2bc40:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2bc44:	ldr	r3, [r3, #12]
   2bc48:	ldr	r2, [fp, #-96]	; 0xffffffa0
   2bc4c:	cmp	r2, r3
   2bc50:	beq	2bfcc <__assert_fail@plt+0x1aa88>
   2bc54:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2bc58:	cmp	r3, #4
   2bc5c:	bne	2bfd4 <__assert_fail@plt+0x1aa90>
   2bc60:	ldr	r3, [fp, #-88]	; 0xffffffa8
   2bc64:	ldr	r1, [r3, #116]	; 0x74
   2bc68:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2bc6c:	mov	r3, r2
   2bc70:	lsl	r3, r3, #1
   2bc74:	add	r3, r3, r2
   2bc78:	lsl	r3, r3, #3
   2bc7c:	add	r3, r1, r3
   2bc80:	str	r3, [fp, #-20]	; 0xffffffec
   2bc84:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2bc88:	str	r3, [fp, #-16]
   2bc8c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2bc90:	ldr	r3, [r3]
   2bc94:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2bc98:	cmp	r2, r3
   2bc9c:	bne	2bf98 <__assert_fail@plt+0x1aa54>
   2bca0:	ldr	r3, [fp, #-20]	; 0xffffffec
   2bca4:	ldr	r2, [r3, #12]
   2bca8:	ldr	r3, [fp, #-20]	; 0xffffffec
   2bcac:	ldr	r3, [r3, #8]
   2bcb0:	sub	r3, r2, r3
   2bcb4:	str	r3, [fp, #-40]	; 0xffffffd8
   2bcb8:	ldr	r2, [fp, #-96]	; 0xffffffa0
   2bcbc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2bcc0:	add	r3, r2, r3
   2bcc4:	str	r3, [fp, #-44]	; 0xffffffd4
   2bcc8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2bccc:	cmp	r3, #0
   2bcd0:	beq	2bcf0 <__assert_fail@plt+0x1a7ac>
   2bcd4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2bcd8:	ldr	r2, [r3, #12]
   2bcdc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2bce0:	lsl	r3, r3, #2
   2bce4:	add	r3, r2, r3
   2bce8:	ldr	r3, [r3]
   2bcec:	b	2bd18 <__assert_fail@plt+0x1a7d4>
   2bcf0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2bcf4:	ldr	r1, [r3, #20]
   2bcf8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2bcfc:	mov	r3, r2
   2bd00:	lsl	r3, r3, #1
   2bd04:	add	r3, r3, r2
   2bd08:	lsl	r3, r3, #2
   2bd0c:	add	r3, r1, r3
   2bd10:	ldr	r3, [r3, #8]
   2bd14:	ldr	r3, [r3]
   2bd18:	str	r3, [fp, #-48]	; 0xffffffd0
   2bd1c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2bd20:	ldr	r3, [r3, #12]
   2bd24:	ldr	r2, [fp, #-44]	; 0xffffffd4
   2bd28:	cmp	r2, r3
   2bd2c:	bgt	2bfa0 <__assert_fail@plt+0x1aa5c>
   2bd30:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2bd34:	ldr	r2, [r3]
   2bd38:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2bd3c:	lsl	r3, r3, #2
   2bd40:	add	r3, r2, r3
   2bd44:	ldr	r3, [r3]
   2bd48:	cmp	r3, #0
   2bd4c:	beq	2bfa0 <__assert_fail@plt+0x1aa5c>
   2bd50:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2bd54:	ldr	r2, [r3]
   2bd58:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2bd5c:	lsl	r3, r3, #2
   2bd60:	add	r3, r2, r3
   2bd64:	ldr	r3, [r3]
   2bd68:	cmp	r3, #0
   2bd6c:	beq	2bfa0 <__assert_fail@plt+0x1aa5c>
   2bd70:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2bd74:	ldr	r2, [r3]
   2bd78:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2bd7c:	lsl	r3, r3, #2
   2bd80:	add	r3, r2, r3
   2bd84:	ldr	r3, [r3]
   2bd88:	add	r3, r3, #4
   2bd8c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   2bd90:	mov	r0, r3
   2bd94:	bl	1c21c <__assert_fail@plt+0xacd8>
   2bd98:	mov	r3, r0
   2bd9c:	cmp	r3, #0
   2bda0:	beq	2bfa0 <__assert_fail@plt+0x1aa5c>
   2bda4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2bda8:	add	r1, r3, #16
   2bdac:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2bdb0:	str	r3, [sp, #4]
   2bdb4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2bdb8:	str	r3, [sp]
   2bdbc:	ldr	r3, [fp, #-96]	; 0xffffffa0
   2bdc0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2bdc4:	ldr	r0, [fp, #-88]	; 0xffffffa8
   2bdc8:	bl	2b1e4 <__assert_fail@plt+0x19ca0>
   2bdcc:	mov	r3, r0
   2bdd0:	cmp	r3, #0
   2bdd4:	bne	2bfa0 <__assert_fail@plt+0x1aa5c>
   2bdd8:	ldr	r3, [fp, #-84]	; 0xffffffac
   2bddc:	cmp	r3, #0
   2bde0:	bne	2be48 <__assert_fail@plt+0x1a904>
   2bde4:	ldr	r2, [fp, #-92]	; 0xffffffa4
   2bde8:	sub	r3, fp, #84	; 0x54
   2bdec:	ldrd	r0, [r2]
   2bdf0:	strd	r0, [r3]
   2bdf4:	ldrd	r0, [r2, #8]
   2bdf8:	strd	r0, [r3, #8]
   2bdfc:	ldrd	r0, [r2, #16]
   2be00:	strd	r0, [r3, #16]
   2be04:	ldr	r2, [r2, #24]
   2be08:	str	r2, [r3, #24]
   2be0c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2be10:	add	r2, r3, #16
   2be14:	sub	r3, fp, #84	; 0x54
   2be18:	add	r3, r3, #16
   2be1c:	mov	r1, r2
   2be20:	mov	r0, r3
   2be24:	bl	1b068 <__assert_fail@plt+0x9b24>
   2be28:	str	r0, [fp, #-8]
   2be2c:	ldr	r3, [fp, #-8]
   2be30:	cmp	r3, #0
   2be34:	movne	r3, #1
   2be38:	moveq	r3, #0
   2be3c:	uxtb	r3, r3
   2be40:	cmp	r3, #0
   2be44:	bne	2c004 <__assert_fail@plt+0x1aac0>
   2be48:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2be4c:	str	r3, [fp, #-76]	; 0xffffffb4
   2be50:	ldr	r3, [fp, #-96]	; 0xffffffa0
   2be54:	str	r3, [fp, #-72]	; 0xffffffb8
   2be58:	sub	r3, fp, #84	; 0x54
   2be5c:	add	r3, r3, #16
   2be60:	ldr	r1, [fp, #-16]
   2be64:	mov	r0, r3
   2be68:	bl	1bdf4 <__assert_fail@plt+0xa8b0>
   2be6c:	mov	r3, r0
   2be70:	strb	r3, [fp, #-49]	; 0xffffffcf
   2be74:	ldrb	r3, [fp, #-49]	; 0xffffffcf
   2be78:	eor	r3, r3, #1
   2be7c:	uxtb	r3, r3
   2be80:	cmp	r3, #0
   2be84:	beq	2be94 <__assert_fail@plt+0x1a950>
   2be88:	mov	r3, #12
   2be8c:	str	r3, [fp, #-8]
   2be90:	b	2c018 <__assert_fail@plt+0x1aad4>
   2be94:	ldr	r2, [fp, #-84]	; 0xffffffac
   2be98:	ldr	r3, [fp, #-96]	; 0xffffffa0
   2be9c:	lsl	r3, r3, #2
   2bea0:	add	r3, r2, r3
   2bea4:	ldr	r3, [r3]
   2bea8:	str	r3, [fp, #-56]	; 0xffffffc8
   2beac:	sub	r3, fp, #84	; 0x54
   2beb0:	mov	r1, r3
   2beb4:	ldr	r0, [fp, #-88]	; 0xffffffa8
   2beb8:	bl	2a3b4 <__assert_fail@plt+0x18e70>
   2bebc:	str	r0, [fp, #-8]
   2bec0:	ldr	r3, [fp, #-8]
   2bec4:	cmp	r3, #0
   2bec8:	movne	r3, #1
   2becc:	moveq	r3, #0
   2bed0:	uxtb	r3, r3
   2bed4:	cmp	r3, #0
   2bed8:	bne	2c00c <__assert_fail@plt+0x1aac8>
   2bedc:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2bee0:	ldr	r3, [r3, #4]
   2bee4:	cmp	r3, #0
   2bee8:	beq	2bf28 <__assert_fail@plt+0x1a9e4>
   2beec:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2bef0:	ldr	r1, [r3, #4]
   2bef4:	ldr	r2, [fp, #-84]	; 0xffffffac
   2bef8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   2befc:	add	r3, r3, #1
   2bf00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2bf04:	bl	2a99c <__assert_fail@plt+0x19458>
   2bf08:	str	r0, [fp, #-8]
   2bf0c:	ldr	r3, [fp, #-8]
   2bf10:	cmp	r3, #0
   2bf14:	movne	r3, #1
   2bf18:	moveq	r3, #0
   2bf1c:	uxtb	r3, r3
   2bf20:	cmp	r3, #0
   2bf24:	bne	2c014 <__assert_fail@plt+0x1aad0>
   2bf28:	ldr	r2, [fp, #-84]	; 0xffffffac
   2bf2c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   2bf30:	lsl	r3, r3, #2
   2bf34:	add	r3, r2, r3
   2bf38:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2bf3c:	str	r2, [r3]
   2bf40:	sub	r3, fp, #84	; 0x54
   2bf44:	add	r3, r3, #16
   2bf48:	ldr	r1, [fp, #-16]
   2bf4c:	mov	r0, r3
   2bf50:	bl	1c21c <__assert_fail@plt+0xacd8>
   2bf54:	mov	r3, r0
   2bf58:	sub	r2, r3, #1
   2bf5c:	sub	r3, fp, #84	; 0x54
   2bf60:	add	r3, r3, #16
   2bf64:	mov	r1, r2
   2bf68:	mov	r0, r3
   2bf6c:	bl	1c308 <__assert_fail@plt+0xadc4>
   2bf70:	ldr	r3, [fp, #-88]	; 0xffffffa8
   2bf74:	ldr	r1, [r3, #116]	; 0x74
   2bf78:	ldr	r2, [fp, #-16]
   2bf7c:	mov	r3, r2
   2bf80:	lsl	r3, r3, #1
   2bf84:	add	r3, r3, r2
   2bf88:	lsl	r3, r3, #3
   2bf8c:	add	r3, r1, r3
   2bf90:	str	r3, [fp, #-20]	; 0xffffffec
   2bf94:	b	2bfa4 <__assert_fail@plt+0x1aa60>
   2bf98:	nop	{0}
   2bf9c:	b	2bfa4 <__assert_fail@plt+0x1aa60>
   2bfa0:	nop	{0}
   2bfa4:	ldr	r3, [fp, #-16]
   2bfa8:	add	r3, r3, #1
   2bfac:	str	r3, [fp, #-16]
   2bfb0:	ldr	r3, [fp, #-20]	; 0xffffffec
   2bfb4:	add	r2, r3, #24
   2bfb8:	str	r2, [fp, #-20]	; 0xffffffec
   2bfbc:	ldrb	r3, [r3, #20]
   2bfc0:	cmp	r3, #0
   2bfc4:	bne	2bc8c <__assert_fail@plt+0x1a748>
   2bfc8:	b	2bfd8 <__assert_fail@plt+0x1aa94>
   2bfcc:	nop	{0}
   2bfd0:	b	2bfd8 <__assert_fail@plt+0x1aa94>
   2bfd4:	nop	{0}
   2bfd8:	ldr	r3, [fp, #-12]
   2bfdc:	add	r3, r3, #1
   2bfe0:	str	r3, [fp, #-12]
   2bfe4:	ldr	r3, [fp, #-100]	; 0xffffff9c
   2bfe8:	ldr	r3, [r3, #4]
   2bfec:	ldr	r2, [fp, #-12]
   2bff0:	cmp	r2, r3
   2bff4:	blt	2bbf4 <__assert_fail@plt+0x1a6b0>
   2bff8:	mov	r3, #0
   2bffc:	str	r3, [fp, #-8]
   2c000:	b	2c018 <__assert_fail@plt+0x1aad4>
   2c004:	nop	{0}
   2c008:	b	2c018 <__assert_fail@plt+0x1aad4>
   2c00c:	nop	{0}
   2c010:	b	2c018 <__assert_fail@plt+0x1aad4>
   2c014:	nop	{0}
   2c018:	ldr	r3, [fp, #-84]	; 0xffffffac
   2c01c:	cmp	r3, #0
   2c020:	beq	2c030 <__assert_fail@plt+0x1aaec>
   2c024:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2c028:	mov	r0, r3
   2c02c:	bl	151ec <__assert_fail@plt+0x3ca8>
   2c030:	ldr	r3, [fp, #-8]
   2c034:	mov	r0, r3
   2c038:	sub	sp, fp, #4
   2c03c:	ldr	fp, [sp]
   2c040:	add	sp, sp, #4
   2c044:	pop	{pc}		; (ldr pc, [sp], #4)
   2c048:	str	fp, [sp, #-8]!
   2c04c:	str	lr, [sp, #4]
   2c050:	add	fp, sp, #4
   2c054:	sub	sp, sp, #24
   2c058:	str	r0, [fp, #-16]
   2c05c:	str	r1, [fp, #-20]	; 0xffffffec
   2c060:	str	r2, [fp, #-24]	; 0xffffffe8
   2c064:	str	r3, [fp, #-28]	; 0xffffffe4
   2c068:	ldr	r3, [fp, #-16]
   2c06c:	ldr	r3, [r3, #84]	; 0x54
   2c070:	str	r3, [fp, #-12]
   2c074:	ldr	r2, [fp, #-16]
   2c078:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2c07c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2c080:	ldr	r0, [fp, #-12]
   2c084:	bl	30210 <__assert_fail@plt+0x1eccc>
   2c088:	str	r0, [fp, #-8]
   2c08c:	ldr	r3, [fp, #-8]
   2c090:	cmp	r3, #0
   2c094:	ble	2c130 <__assert_fail@plt+0x1abec>
   2c098:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2c09c:	ldr	r3, [fp, #-8]
   2c0a0:	add	r3, r2, r3
   2c0a4:	ldr	r2, [fp, #4]
   2c0a8:	cmp	r2, r3
   2c0ac:	blt	2c130 <__assert_fail@plt+0x1abec>
   2c0b0:	ldr	r3, [fp, #-20]	; 0xffffffec
   2c0b4:	ldr	r2, [r3]
   2c0b8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2c0bc:	ldr	r3, [fp, #-8]
   2c0c0:	add	r3, r1, r3
   2c0c4:	lsl	r3, r3, #2
   2c0c8:	add	r3, r2, r3
   2c0cc:	ldr	r3, [r3]
   2c0d0:	cmp	r3, #0
   2c0d4:	beq	2c128 <__assert_fail@plt+0x1abe4>
   2c0d8:	ldr	r3, [fp, #-20]	; 0xffffffec
   2c0dc:	ldr	r2, [r3]
   2c0e0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2c0e4:	ldr	r3, [fp, #-8]
   2c0e8:	add	r3, r1, r3
   2c0ec:	lsl	r3, r3, #2
   2c0f0:	add	r3, r2, r3
   2c0f4:	ldr	r3, [r3]
   2c0f8:	add	r0, r3, #4
   2c0fc:	ldr	r3, [fp, #-12]
   2c100:	ldr	r2, [r3, #12]
   2c104:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2c108:	lsl	r3, r3, #2
   2c10c:	add	r3, r2, r3
   2c110:	ldr	r3, [r3]
   2c114:	mov	r1, r3
   2c118:	bl	1c21c <__assert_fail@plt+0xacd8>
   2c11c:	mov	r3, r0
   2c120:	cmp	r3, #0
   2c124:	bne	2c130 <__assert_fail@plt+0x1abec>
   2c128:	mov	r3, #0
   2c12c:	str	r3, [fp, #-8]
   2c130:	ldr	r3, [fp, #-8]
   2c134:	mov	r0, r3
   2c138:	sub	sp, fp, #4
   2c13c:	ldr	fp, [sp]
   2c140:	add	sp, sp, #4
   2c144:	pop	{pc}		; (ldr pc, [sp], #4)
   2c148:	str	fp, [sp, #-8]!
   2c14c:	str	lr, [sp, #4]
   2c150:	add	fp, sp, #4
   2c154:	sub	sp, sp, #32
   2c158:	str	r0, [fp, #-24]	; 0xffffffe8
   2c15c:	str	r1, [fp, #-28]	; 0xffffffe4
   2c160:	str	r2, [fp, #-32]	; 0xffffffe0
   2c164:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2c168:	ldrb	r3, [r3, #52]	; 0x34
   2c16c:	ubfx	r3, r3, #5, #1
   2c170:	uxtb	r3, r3
   2c174:	cmp	r3, #0
   2c178:	beq	2c1bc <__assert_fail@plt+0x1ac78>
   2c17c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2c180:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2c184:	bl	2c7d8 <__assert_fail@plt+0x1b294>
   2c188:	mov	r2, r0
   2c18c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2c190:	str	r2, [r3]
   2c194:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2c198:	ldr	r3, [r3]
   2c19c:	cmp	r3, #0
   2c1a0:	movne	r3, #1
   2c1a4:	moveq	r3, #0
   2c1a8:	uxtb	r3, r3
   2c1ac:	cmp	r3, #0
   2c1b0:	beq	2c1bc <__assert_fail@plt+0x1ac78>
   2c1b4:	mov	r3, #0
   2c1b8:	b	2c2ec <__assert_fail@plt+0x1ada8>
   2c1bc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2c1c0:	ldr	r2, [r3, #4]
   2c1c4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2c1c8:	ldr	r3, [r3, #40]	; 0x28
   2c1cc:	add	r0, r3, #1
   2c1d0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2c1d4:	str	r0, [r1, #40]	; 0x28
   2c1d8:	add	r3, r2, r3
   2c1dc:	ldrb	r3, [r3]
   2c1e0:	strb	r3, [fp, #-5]
   2c1e4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2c1e8:	ldr	r3, [r3, #44]	; 0x2c
   2c1ec:	str	r3, [fp, #-12]
   2c1f0:	ldr	r3, [fp, #-12]
   2c1f4:	cmp	r3, #0
   2c1f8:	movne	r3, #1
   2c1fc:	moveq	r3, #0
   2c200:	uxtb	r3, r3
   2c204:	cmp	r3, #0
   2c208:	beq	2c224 <__assert_fail@plt+0x1ace0>
   2c20c:	ldrb	r3, [fp, #-5]
   2c210:	lsl	r3, r3, #2
   2c214:	ldr	r2, [fp, #-12]
   2c218:	add	r3, r2, r3
   2c21c:	ldr	r3, [r3]
   2c220:	b	2c2ec <__assert_fail@plt+0x1ada8>
   2c224:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2c228:	ldr	r3, [r3, #48]	; 0x30
   2c22c:	str	r3, [fp, #-12]
   2c230:	ldr	r3, [fp, #-12]
   2c234:	cmp	r3, #0
   2c238:	movne	r3, #1
   2c23c:	moveq	r3, #0
   2c240:	uxtb	r3, r3
   2c244:	cmp	r3, #0
   2c248:	beq	2c2b4 <__assert_fail@plt+0x1ad70>
   2c24c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2c250:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2c254:	ldr	r3, [r3, #40]	; 0x28
   2c258:	sub	r1, r3, #1
   2c25c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2c260:	ldr	r3, [r3, #88]	; 0x58
   2c264:	mov	r2, r3
   2c268:	bl	1ac18 <__assert_fail@plt+0x96d4>
   2c26c:	str	r0, [fp, #-16]
   2c270:	ldr	r3, [fp, #-16]
   2c274:	and	r3, r3, #1
   2c278:	cmp	r3, #0
   2c27c:	beq	2c29c <__assert_fail@plt+0x1ad58>
   2c280:	ldrb	r3, [fp, #-5]
   2c284:	add	r3, r3, #256	; 0x100
   2c288:	lsl	r3, r3, #2
   2c28c:	ldr	r2, [fp, #-12]
   2c290:	add	r3, r2, r3
   2c294:	ldr	r3, [r3]
   2c298:	b	2c2ec <__assert_fail@plt+0x1ada8>
   2c29c:	ldrb	r3, [fp, #-5]
   2c2a0:	lsl	r3, r3, #2
   2c2a4:	ldr	r2, [fp, #-12]
   2c2a8:	add	r3, r2, r3
   2c2ac:	ldr	r3, [r3]
   2c2b0:	b	2c2ec <__assert_fail@plt+0x1ada8>
   2c2b4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2c2b8:	ldr	r3, [r3, #84]	; 0x54
   2c2bc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2c2c0:	mov	r0, r3
   2c2c4:	bl	2ed24 <__assert_fail@plt+0x1d7e0>
   2c2c8:	mov	r3, r0
   2c2cc:	eor	r3, r3, #1
   2c2d0:	uxtb	r3, r3
   2c2d4:	cmp	r3, #0
   2c2d8:	beq	2c1e4 <__assert_fail@plt+0x1aca0>
   2c2dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2c2e0:	mov	r2, #12
   2c2e4:	str	r2, [r3]
   2c2e8:	mov	r3, #0
   2c2ec:	mov	r0, r3
   2c2f0:	sub	sp, fp, #4
   2c2f4:	ldr	fp, [sp]
   2c2f8:	add	sp, sp, #4
   2c2fc:	pop	{pc}		; (ldr pc, [sp], #4)
   2c300:	str	r4, [sp, #-12]!
   2c304:	str	fp, [sp, #4]
   2c308:	str	lr, [sp, #8]
   2c30c:	add	fp, sp, #8
   2c310:	sub	sp, sp, #60	; 0x3c
   2c314:	str	r0, [fp, #-56]	; 0xffffffc8
   2c318:	str	r1, [fp, #-60]	; 0xffffffc4
   2c31c:	str	r2, [fp, #-64]	; 0xffffffc0
   2c320:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2c324:	ldr	r3, [r3, #84]	; 0x54
   2c328:	str	r3, [fp, #-20]	; 0xffffffec
   2c32c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2c330:	ldr	r3, [r3, #40]	; 0x28
   2c334:	str	r3, [fp, #-24]	; 0xffffffe8
   2c338:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2c33c:	ldr	r3, [r3, #104]	; 0x68
   2c340:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2c344:	cmp	r2, r3
   2c348:	ble	2c378 <__assert_fail@plt+0x1ae34>
   2c34c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2c350:	ldr	r2, [r3, #100]	; 0x64
   2c354:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2c358:	lsl	r3, r3, #2
   2c35c:	add	r3, r2, r3
   2c360:	ldr	r2, [fp, #-64]	; 0xffffffc0
   2c364:	str	r2, [r3]
   2c368:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2c36c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2c370:	str	r2, [r3, #104]	; 0x68
   2c374:	b	2c4d8 <__assert_fail@plt+0x1af94>
   2c378:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2c37c:	ldr	r2, [r3, #100]	; 0x64
   2c380:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2c384:	lsl	r3, r3, #2
   2c388:	add	r3, r2, r3
   2c38c:	ldr	r3, [r3]
   2c390:	cmp	r3, #0
   2c394:	bne	2c3b8 <__assert_fail@plt+0x1ae74>
   2c398:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2c39c:	ldr	r2, [r3, #100]	; 0x64
   2c3a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2c3a4:	lsl	r3, r3, #2
   2c3a8:	add	r3, r2, r3
   2c3ac:	ldr	r2, [fp, #-64]	; 0xffffffc0
   2c3b0:	str	r2, [r3]
   2c3b4:	b	2c4d8 <__assert_fail@plt+0x1af94>
   2c3b8:	mov	r3, #0
   2c3bc:	str	r3, [fp, #-16]
   2c3c0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2c3c4:	ldr	r2, [r3, #100]	; 0x64
   2c3c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2c3cc:	lsl	r3, r3, #2
   2c3d0:	add	r3, r2, r3
   2c3d4:	ldr	r3, [r3]
   2c3d8:	str	r3, [fp, #-28]	; 0xffffffe4
   2c3dc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2c3e0:	ldr	r3, [r3, #40]	; 0x28
   2c3e4:	str	r3, [fp, #-32]	; 0xffffffe0
   2c3e8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2c3ec:	cmp	r3, #0
   2c3f0:	beq	2c448 <__assert_fail@plt+0x1af04>
   2c3f4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2c3f8:	ldr	r3, [r3, #40]	; 0x28
   2c3fc:	str	r3, [fp, #-16]
   2c400:	sub	r3, fp, #48	; 0x30
   2c404:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2c408:	ldr	r1, [fp, #-16]
   2c40c:	mov	r0, r3
   2c410:	bl	1b60c <__assert_fail@plt+0xa0c8>
   2c414:	mov	r2, r0
   2c418:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2c41c:	str	r2, [r3]
   2c420:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2c424:	ldr	r3, [r3]
   2c428:	cmp	r3, #0
   2c42c:	movne	r3, #1
   2c430:	moveq	r3, #0
   2c434:	uxtb	r3, r3
   2c438:	cmp	r3, #0
   2c43c:	beq	2c464 <__assert_fail@plt+0x1af20>
   2c440:	mov	r3, #0
   2c444:	b	2c5c0 <__assert_fail@plt+0x1b07c>
   2c448:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2c44c:	sub	r1, fp, #48	; 0x30
   2c450:	mov	r0, r3
   2c454:	ldrd	r2, [r0]
   2c458:	strd	r2, [r1]
   2c45c:	ldr	r3, [r0, #8]
   2c460:	str	r3, [r1, #8]
   2c464:	ldr	r0, [fp, #-60]	; 0xffffffc4
   2c468:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2c46c:	ldr	r3, [r3, #40]	; 0x28
   2c470:	sub	r1, r3, #1
   2c474:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2c478:	ldr	r3, [r3, #88]	; 0x58
   2c47c:	mov	r2, r3
   2c480:	bl	1ac18 <__assert_fail@plt+0x96d4>
   2c484:	str	r0, [fp, #-36]	; 0xffffffdc
   2c488:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2c48c:	ldr	r2, [r3, #100]	; 0x64
   2c490:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2c494:	lsl	r3, r3, #2
   2c498:	add	r4, r2, r3
   2c49c:	sub	r2, fp, #48	; 0x30
   2c4a0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2c4a4:	ldr	r1, [fp, #-20]	; 0xffffffec
   2c4a8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2c4ac:	bl	1c9ac <__assert_fail@plt+0xb468>
   2c4b0:	mov	r3, r0
   2c4b4:	str	r3, [r4]
   2c4b8:	ldr	r3, [r4]
   2c4bc:	str	r3, [fp, #-64]	; 0xffffffc0
   2c4c0:	ldr	r3, [fp, #-16]
   2c4c4:	cmp	r3, #0
   2c4c8:	beq	2c4d8 <__assert_fail@plt+0x1af94>
   2c4cc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2c4d0:	mov	r0, r3
   2c4d4:	bl	151ec <__assert_fail@plt+0x3ca8>
   2c4d8:	ldr	r3, [fp, #-20]	; 0xffffffec
   2c4dc:	ldr	r3, [r3, #76]	; 0x4c
   2c4e0:	cmp	r3, #0
   2c4e4:	beq	2c5bc <__assert_fail@plt+0x1b078>
   2c4e8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2c4ec:	cmp	r3, #0
   2c4f0:	beq	2c5bc <__assert_fail@plt+0x1b078>
   2c4f4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2c4f8:	add	r3, r3, #4
   2c4fc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2c500:	mov	r1, r3
   2c504:	ldr	r0, [fp, #-60]	; 0xffffffc4
   2c508:	bl	2c6a8 <__assert_fail@plt+0x1b164>
   2c50c:	mov	r2, r0
   2c510:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2c514:	str	r2, [r3]
   2c518:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2c51c:	ldr	r3, [r3]
   2c520:	cmp	r3, #0
   2c524:	movne	r3, #1
   2c528:	moveq	r3, #0
   2c52c:	uxtb	r3, r3
   2c530:	cmp	r3, #0
   2c534:	beq	2c540 <__assert_fail@plt+0x1affc>
   2c538:	mov	r3, #0
   2c53c:	b	2c5c0 <__assert_fail@plt+0x1b07c>
   2c540:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2c544:	ldrb	r3, [r3, #52]	; 0x34
   2c548:	and	r3, r3, #64	; 0x40
   2c54c:	uxtb	r3, r3
   2c550:	cmp	r3, #0
   2c554:	beq	2c5bc <__assert_fail@plt+0x1b078>
   2c558:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2c55c:	add	r3, r3, #4
   2c560:	mov	r1, r3
   2c564:	ldr	r0, [fp, #-60]	; 0xffffffc4
   2c568:	bl	2cc10 <__assert_fail@plt+0x1b6cc>
   2c56c:	mov	r2, r0
   2c570:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2c574:	str	r2, [r3]
   2c578:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2c57c:	ldr	r3, [r3]
   2c580:	cmp	r3, #0
   2c584:	movne	r3, #1
   2c588:	moveq	r3, #0
   2c58c:	uxtb	r3, r3
   2c590:	cmp	r3, #0
   2c594:	beq	2c5a0 <__assert_fail@plt+0x1b05c>
   2c598:	mov	r3, #0
   2c59c:	b	2c5c0 <__assert_fail@plt+0x1b07c>
   2c5a0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2c5a4:	ldr	r2, [r3, #100]	; 0x64
   2c5a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2c5ac:	lsl	r3, r3, #2
   2c5b0:	add	r3, r2, r3
   2c5b4:	ldr	r3, [r3]
   2c5b8:	str	r3, [fp, #-64]	; 0xffffffc0
   2c5bc:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2c5c0:	mov	r0, r3
   2c5c4:	sub	sp, fp, #8
   2c5c8:	ldr	r4, [sp]
   2c5cc:	ldr	fp, [sp, #4]
   2c5d0:	add	sp, sp, #8
   2c5d4:	pop	{pc}		; (ldr pc, [sp], #4)
   2c5d8:	str	fp, [sp, #-8]!
   2c5dc:	str	lr, [sp, #4]
   2c5e0:	add	fp, sp, #4
   2c5e4:	sub	sp, sp, #24
   2c5e8:	str	r0, [fp, #-24]	; 0xffffffe8
   2c5ec:	str	r1, [fp, #-28]	; 0xffffffe4
   2c5f0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2c5f4:	ldr	r3, [r3, #104]	; 0x68
   2c5f8:	str	r3, [fp, #-12]
   2c5fc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2c600:	ldr	r3, [r3, #40]	; 0x28
   2c604:	str	r3, [fp, #-8]
   2c608:	ldr	r3, [fp, #-8]
   2c60c:	add	r3, r3, #1
   2c610:	str	r3, [fp, #-8]
   2c614:	ldr	r2, [fp, #-8]
   2c618:	ldr	r3, [fp, #-12]
   2c61c:	cmp	r2, r3
   2c620:	ble	2c62c <__assert_fail@plt+0x1b0e8>
   2c624:	mov	r3, #0
   2c628:	b	2c694 <__assert_fail@plt+0x1b150>
   2c62c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2c630:	ldr	r3, [r3, #40]	; 0x28
   2c634:	add	r2, r3, #1
   2c638:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2c63c:	str	r2, [r3, #40]	; 0x28
   2c640:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2c644:	ldr	r2, [r3, #100]	; 0x64
   2c648:	ldr	r3, [fp, #-8]
   2c64c:	lsl	r3, r3, #2
   2c650:	add	r3, r2, r3
   2c654:	ldr	r3, [r3]
   2c658:	cmp	r3, #0
   2c65c:	beq	2c608 <__assert_fail@plt+0x1b0c4>
   2c660:	mov	r2, #0
   2c664:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2c668:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2c66c:	bl	2c300 <__assert_fail@plt+0x1adbc>
   2c670:	str	r0, [fp, #-16]
   2c674:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2c678:	ldr	r3, [r3]
   2c67c:	cmp	r3, #0
   2c680:	bne	2c690 <__assert_fail@plt+0x1b14c>
   2c684:	ldr	r3, [fp, #-16]
   2c688:	cmp	r3, #0
   2c68c:	beq	2c5f0 <__assert_fail@plt+0x1b0ac>
   2c690:	ldr	r3, [fp, #-16]
   2c694:	mov	r0, r3
   2c698:	sub	sp, fp, #4
   2c69c:	ldr	fp, [sp]
   2c6a0:	add	sp, sp, #4
   2c6a4:	pop	{pc}		; (ldr pc, [sp], #4)
   2c6a8:	str	fp, [sp, #-8]!
   2c6ac:	str	lr, [sp, #4]
   2c6b0:	add	fp, sp, #4
   2c6b4:	sub	sp, sp, #32
   2c6b8:	str	r0, [fp, #-24]	; 0xffffffe8
   2c6bc:	str	r1, [fp, #-28]	; 0xffffffe4
   2c6c0:	str	r2, [fp, #-32]	; 0xffffffe0
   2c6c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2c6c8:	ldr	r3, [r3, #84]	; 0x54
   2c6cc:	str	r3, [fp, #-12]
   2c6d0:	mov	r3, #0
   2c6d4:	str	r3, [fp, #-8]
   2c6d8:	b	2c7ac <__assert_fail@plt+0x1b268>
   2c6dc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2c6e0:	ldr	r2, [r3, #8]
   2c6e4:	ldr	r3, [fp, #-8]
   2c6e8:	lsl	r3, r3, #2
   2c6ec:	add	r3, r2, r3
   2c6f0:	ldr	r3, [r3]
   2c6f4:	str	r3, [fp, #-16]
   2c6f8:	ldr	r3, [fp, #-12]
   2c6fc:	ldr	r2, [r3]
   2c700:	ldr	r3, [fp, #-16]
   2c704:	lsl	r3, r3, #3
   2c708:	add	r3, r2, r3
   2c70c:	ldrb	r3, [r3, #4]
   2c710:	cmp	r3, #8
   2c714:	bne	2c7a0 <__assert_fail@plt+0x1b25c>
   2c718:	ldr	r3, [fp, #-12]
   2c71c:	ldr	r2, [r3]
   2c720:	ldr	r3, [fp, #-16]
   2c724:	lsl	r3, r3, #3
   2c728:	add	r3, r2, r3
   2c72c:	ldr	r3, [r3]
   2c730:	cmp	r3, #31
   2c734:	bgt	2c7a0 <__assert_fail@plt+0x1b25c>
   2c738:	ldr	r3, [fp, #-12]
   2c73c:	ldr	r2, [r3, #80]	; 0x50
   2c740:	ldr	r3, [fp, #-12]
   2c744:	ldr	r1, [r3]
   2c748:	ldr	r3, [fp, #-16]
   2c74c:	lsl	r3, r3, #3
   2c750:	add	r3, r1, r3
   2c754:	ldr	r3, [r3]
   2c758:	lsr	r3, r2, r3
   2c75c:	and	r3, r3, #1
   2c760:	cmp	r3, #0
   2c764:	beq	2c7a0 <__assert_fail@plt+0x1b25c>
   2c768:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2c76c:	ldr	r1, [fp, #-16]
   2c770:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2c774:	bl	31280 <__assert_fail@plt+0x1fd3c>
   2c778:	str	r0, [fp, #-20]	; 0xffffffec
   2c77c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2c780:	cmp	r3, #0
   2c784:	movne	r3, #1
   2c788:	moveq	r3, #0
   2c78c:	uxtb	r3, r3
   2c790:	cmp	r3, #0
   2c794:	beq	2c7a0 <__assert_fail@plt+0x1b25c>
   2c798:	ldr	r3, [fp, #-20]	; 0xffffffec
   2c79c:	b	2c7c4 <__assert_fail@plt+0x1b280>
   2c7a0:	ldr	r3, [fp, #-8]
   2c7a4:	add	r3, r3, #1
   2c7a8:	str	r3, [fp, #-8]
   2c7ac:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2c7b0:	ldr	r3, [r3, #4]
   2c7b4:	ldr	r2, [fp, #-8]
   2c7b8:	cmp	r2, r3
   2c7bc:	blt	2c6dc <__assert_fail@plt+0x1b198>
   2c7c0:	mov	r3, #0
   2c7c4:	mov	r0, r3
   2c7c8:	sub	sp, fp, #4
   2c7cc:	ldr	fp, [sp]
   2c7d0:	add	sp, sp, #4
   2c7d4:	pop	{pc}		; (ldr pc, [sp], #4)
   2c7d8:	str	r4, [sp, #-12]!
   2c7dc:	str	fp, [sp, #4]
   2c7e0:	str	lr, [sp, #8]
   2c7e4:	add	fp, sp, #8
   2c7e8:	sub	sp, sp, #60	; 0x3c
   2c7ec:	str	r0, [fp, #-64]	; 0xffffffc0
   2c7f0:	str	r1, [fp, #-68]	; 0xffffffbc
   2c7f4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2c7f8:	ldr	r3, [r3, #84]	; 0x54
   2c7fc:	str	r3, [fp, #-20]	; 0xffffffec
   2c800:	mov	r3, #0
   2c804:	str	r3, [fp, #-16]
   2c808:	b	2cbe0 <__assert_fail@plt+0x1b69c>
   2c80c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2c810:	ldr	r2, [r3, #12]
   2c814:	ldr	r3, [fp, #-16]
   2c818:	lsl	r3, r3, #2
   2c81c:	add	r3, r2, r3
   2c820:	ldr	r3, [r3]
   2c824:	str	r3, [fp, #-24]	; 0xffffffe8
   2c828:	ldr	r3, [fp, #-20]	; 0xffffffec
   2c82c:	ldr	r2, [r3]
   2c830:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2c834:	lsl	r3, r3, #3
   2c838:	add	r3, r2, r3
   2c83c:	ldrb	r3, [r3, #6]
   2c840:	and	r3, r3, #16
   2c844:	uxtb	r3, r3
   2c848:	cmp	r3, #0
   2c84c:	beq	2cbc0 <__assert_fail@plt+0x1b67c>
   2c850:	ldr	r3, [fp, #-20]	; 0xffffffec
   2c854:	ldr	r2, [r3]
   2c858:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2c85c:	lsl	r3, r3, #3
   2c860:	add	r3, r2, r3
   2c864:	ldr	r2, [r3, #4]
   2c868:	mov	r3, #65280	; 0xff00
   2c86c:	movt	r3, #3
   2c870:	and	r3, r3, r2
   2c874:	cmp	r3, #0
   2c878:	beq	2c98c <__assert_fail@plt+0x1b448>
   2c87c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   2c880:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2c884:	ldr	r1, [r3, #40]	; 0x28
   2c888:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2c88c:	ldr	r3, [r3, #88]	; 0x58
   2c890:	mov	r2, r3
   2c894:	bl	1ac18 <__assert_fail@plt+0x96d4>
   2c898:	str	r0, [fp, #-28]	; 0xffffffe4
   2c89c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2c8a0:	ldr	r2, [r3]
   2c8a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2c8a8:	lsl	r3, r3, #3
   2c8ac:	add	r3, r2, r3
   2c8b0:	ldr	r3, [r3, #4]
   2c8b4:	ubfx	r3, r3, #8, #10
   2c8b8:	uxth	r3, r3
   2c8bc:	and	r3, r3, #4
   2c8c0:	cmp	r3, #0
   2c8c4:	beq	2c8d8 <__assert_fail@plt+0x1b394>
   2c8c8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2c8cc:	and	r3, r3, #1
   2c8d0:	cmp	r3, #0
   2c8d4:	beq	2cbc8 <__assert_fail@plt+0x1b684>
   2c8d8:	ldr	r3, [fp, #-20]	; 0xffffffec
   2c8dc:	ldr	r2, [r3]
   2c8e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2c8e4:	lsl	r3, r3, #3
   2c8e8:	add	r3, r2, r3
   2c8ec:	ldr	r3, [r3, #4]
   2c8f0:	ubfx	r3, r3, #8, #10
   2c8f4:	uxth	r3, r3
   2c8f8:	and	r3, r3, #8
   2c8fc:	cmp	r3, #0
   2c900:	beq	2c914 <__assert_fail@plt+0x1b3d0>
   2c904:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2c908:	and	r3, r3, #1
   2c90c:	cmp	r3, #0
   2c910:	bne	2cbc8 <__assert_fail@plt+0x1b684>
   2c914:	ldr	r3, [fp, #-20]	; 0xffffffec
   2c918:	ldr	r2, [r3]
   2c91c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2c920:	lsl	r3, r3, #3
   2c924:	add	r3, r2, r3
   2c928:	ldr	r3, [r3, #4]
   2c92c:	ubfx	r3, r3, #8, #10
   2c930:	uxth	r3, r3
   2c934:	and	r3, r3, #32
   2c938:	cmp	r3, #0
   2c93c:	beq	2c950 <__assert_fail@plt+0x1b40c>
   2c940:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2c944:	and	r3, r3, #2
   2c948:	cmp	r3, #0
   2c94c:	beq	2cbc8 <__assert_fail@plt+0x1b684>
   2c950:	ldr	r3, [fp, #-20]	; 0xffffffec
   2c954:	ldr	r2, [r3]
   2c958:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2c95c:	lsl	r3, r3, #3
   2c960:	add	r3, r2, r3
   2c964:	ldr	r3, [r3, #4]
   2c968:	ubfx	r3, r3, #8, #10
   2c96c:	uxth	r3, r3
   2c970:	and	r3, r3, #128	; 0x80
   2c974:	cmp	r3, #0
   2c978:	beq	2c98c <__assert_fail@plt+0x1b448>
   2c97c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2c980:	and	r3, r3, #8
   2c984:	cmp	r3, #0
   2c988:	beq	2cbc8 <__assert_fail@plt+0x1b684>
   2c98c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   2c990:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2c994:	ldr	r3, [r3, #40]	; 0x28
   2c998:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2c99c:	ldr	r0, [fp, #-20]	; 0xffffffec
   2c9a0:	bl	30210 <__assert_fail@plt+0x1eccc>
   2c9a4:	str	r0, [fp, #-32]	; 0xffffffe0
   2c9a8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2c9ac:	cmp	r3, #0
   2c9b0:	beq	2cbd0 <__assert_fail@plt+0x1b68c>
   2c9b4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2c9b8:	ldr	r3, [r3, #40]	; 0x28
   2c9bc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2c9c0:	add	r3, r2, r3
   2c9c4:	str	r3, [fp, #-36]	; 0xffffffdc
   2c9c8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2c9cc:	ldr	r2, [r3, #120]	; 0x78
   2c9d0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2c9d4:	cmp	r2, r3
   2c9d8:	movge	r2, r2
   2c9dc:	movlt	r2, r3
   2c9e0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2c9e4:	str	r2, [r3, #120]	; 0x78
   2c9e8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2c9ec:	ldr	r0, [fp, #-64]	; 0xffffffc0
   2c9f0:	bl	2a870 <__assert_fail@plt+0x1932c>
   2c9f4:	mov	r3, r0
   2c9f8:	str	r3, [fp, #-48]	; 0xffffffd0
   2c9fc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2ca00:	cmp	r3, #0
   2ca04:	movne	r3, #1
   2ca08:	moveq	r3, #0
   2ca0c:	uxtb	r3, r3
   2ca10:	cmp	r3, #0
   2ca14:	beq	2ca20 <__assert_fail@plt+0x1b4dc>
   2ca18:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2ca1c:	b	2cbf8 <__assert_fail@plt+0x1b6b4>
   2ca20:	ldr	r3, [fp, #-20]	; 0xffffffec
   2ca24:	ldr	r2, [r3, #12]
   2ca28:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2ca2c:	lsl	r3, r3, #2
   2ca30:	add	r3, r2, r3
   2ca34:	ldr	r3, [r3]
   2ca38:	cmn	r3, #1
   2ca3c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2ca40:	ldr	r2, [r3, #24]
   2ca44:	ldr	r3, [fp, #-20]	; 0xffffffec
   2ca48:	ldr	r1, [r3, #12]
   2ca4c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2ca50:	lsl	r3, r3, #2
   2ca54:	add	r3, r1, r3
   2ca58:	ldr	r3, [r3]
   2ca5c:	mov	r1, r3
   2ca60:	mov	r3, r1
   2ca64:	lsl	r3, r3, #1
   2ca68:	add	r3, r3, r1
   2ca6c:	lsl	r3, r3, #2
   2ca70:	add	r3, r2, r3
   2ca74:	str	r3, [fp, #-40]	; 0xffffffd8
   2ca78:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2ca7c:	ldr	r2, [r3, #100]	; 0x64
   2ca80:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2ca84:	lsl	r3, r3, #2
   2ca88:	add	r3, r2, r3
   2ca8c:	ldr	r3, [r3]
   2ca90:	str	r3, [fp, #-44]	; 0xffffffd4
   2ca94:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2ca98:	cmp	r3, #0
   2ca9c:	bne	2cac0 <__assert_fail@plt+0x1b57c>
   2caa0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2caa4:	sub	r1, fp, #60	; 0x3c
   2caa8:	mov	r0, r3
   2caac:	ldrd	r2, [r0]
   2cab0:	strd	r2, [r1]
   2cab4:	ldr	r3, [r0, #8]
   2cab8:	str	r3, [r1, #8]
   2cabc:	b	2cb04 <__assert_fail@plt+0x1b5c0>
   2cac0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2cac4:	ldr	r1, [r3, #40]	; 0x28
   2cac8:	sub	r3, fp, #60	; 0x3c
   2cacc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2cad0:	mov	r0, r3
   2cad4:	bl	1b60c <__assert_fail@plt+0xa0c8>
   2cad8:	mov	r3, r0
   2cadc:	str	r3, [fp, #-48]	; 0xffffffd0
   2cae0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2cae4:	cmp	r3, #0
   2cae8:	movne	r3, #1
   2caec:	moveq	r3, #0
   2caf0:	uxtb	r3, r3
   2caf4:	cmp	r3, #0
   2caf8:	beq	2cb04 <__assert_fail@plt+0x1b5c0>
   2cafc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2cb00:	b	2cbf8 <__assert_fail@plt+0x1b6b4>
   2cb04:	ldr	r0, [fp, #-64]	; 0xffffffc0
   2cb08:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2cb0c:	sub	r1, r3, #1
   2cb10:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2cb14:	ldr	r3, [r3, #88]	; 0x58
   2cb18:	mov	r2, r3
   2cb1c:	bl	1ac18 <__assert_fail@plt+0x96d4>
   2cb20:	str	r0, [fp, #-28]	; 0xffffffe4
   2cb24:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2cb28:	ldr	r2, [r3, #100]	; 0x64
   2cb2c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2cb30:	lsl	r3, r3, #2
   2cb34:	add	r4, r2, r3
   2cb38:	sub	r2, fp, #60	; 0x3c
   2cb3c:	sub	r0, fp, #48	; 0x30
   2cb40:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2cb44:	ldr	r1, [fp, #-20]	; 0xffffffec
   2cb48:	bl	1c9ac <__assert_fail@plt+0xb468>
   2cb4c:	mov	r3, r0
   2cb50:	str	r3, [r4]
   2cb54:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2cb58:	cmp	r3, #0
   2cb5c:	beq	2cb6c <__assert_fail@plt+0x1b628>
   2cb60:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2cb64:	mov	r0, r3
   2cb68:	bl	151ec <__assert_fail@plt+0x3ca8>
   2cb6c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2cb70:	ldr	r2, [r3, #100]	; 0x64
   2cb74:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2cb78:	lsl	r3, r3, #2
   2cb7c:	add	r3, r2, r3
   2cb80:	ldr	r3, [r3]
   2cb84:	cmp	r3, #0
   2cb88:	moveq	r3, #1
   2cb8c:	movne	r3, #0
   2cb90:	uxtb	r3, r3
   2cb94:	cmp	r3, #0
   2cb98:	beq	2cbd4 <__assert_fail@plt+0x1b690>
   2cb9c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2cba0:	cmp	r3, #0
   2cba4:	movne	r3, #1
   2cba8:	moveq	r3, #0
   2cbac:	uxtb	r3, r3
   2cbb0:	cmp	r3, #0
   2cbb4:	beq	2cbd4 <__assert_fail@plt+0x1b690>
   2cbb8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2cbbc:	b	2cbf8 <__assert_fail@plt+0x1b6b4>
   2cbc0:	nop	{0}
   2cbc4:	b	2cbd4 <__assert_fail@plt+0x1b690>
   2cbc8:	nop	{0}
   2cbcc:	b	2cbd4 <__assert_fail@plt+0x1b690>
   2cbd0:	nop	{0}
   2cbd4:	ldr	r3, [fp, #-16]
   2cbd8:	add	r3, r3, #1
   2cbdc:	str	r3, [fp, #-16]
   2cbe0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2cbe4:	ldr	r3, [r3, #8]
   2cbe8:	ldr	r2, [fp, #-16]
   2cbec:	cmp	r2, r3
   2cbf0:	blt	2c80c <__assert_fail@plt+0x1b2c8>
   2cbf4:	mov	r3, #0
   2cbf8:	mov	r0, r3
   2cbfc:	sub	sp, fp, #8
   2cc00:	ldr	r4, [sp]
   2cc04:	ldr	fp, [sp, #4]
   2cc08:	add	sp, sp, #8
   2cc0c:	pop	{pc}		; (ldr pc, [sp], #4)
   2cc10:	str	r4, [sp, #-12]!
   2cc14:	str	fp, [sp, #4]
   2cc18:	str	lr, [sp, #8]
   2cc1c:	add	fp, sp, #8
   2cc20:	sub	sp, sp, #84	; 0x54
   2cc24:	str	r0, [fp, #-88]	; 0xffffffa8
   2cc28:	str	r1, [fp, #-92]	; 0xffffffa4
   2cc2c:	ldr	r3, [fp, #-88]	; 0xffffffa8
   2cc30:	ldr	r3, [r3, #84]	; 0x54
   2cc34:	str	r3, [fp, #-24]	; 0xffffffe8
   2cc38:	ldr	r3, [fp, #-88]	; 0xffffffa8
   2cc3c:	ldr	r3, [r3, #40]	; 0x28
   2cc40:	str	r3, [fp, #-28]	; 0xffffffe4
   2cc44:	mov	r3, #0
   2cc48:	str	r3, [fp, #-16]
   2cc4c:	b	2d1bc <__assert_fail@plt+0x1bc78>
   2cc50:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2cc54:	ldr	r2, [r3, #8]
   2cc58:	ldr	r3, [fp, #-16]
   2cc5c:	lsl	r3, r3, #2
   2cc60:	add	r3, r2, r3
   2cc64:	ldr	r3, [r3]
   2cc68:	str	r3, [fp, #-32]	; 0xffffffe0
   2cc6c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2cc70:	ldr	r2, [r3]
   2cc74:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2cc78:	lsl	r3, r3, #3
   2cc7c:	add	r3, r2, r3
   2cc80:	str	r3, [fp, #-36]	; 0xffffffdc
   2cc84:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2cc88:	ldrb	r3, [r3, #4]
   2cc8c:	cmp	r3, #4
   2cc90:	bne	2d1a4 <__assert_fail@plt+0x1bc60>
   2cc94:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2cc98:	ldr	r2, [r3, #4]
   2cc9c:	mov	r3, #65280	; 0xff00
   2cca0:	movt	r3, #3
   2cca4:	and	r3, r3, r2
   2cca8:	cmp	r3, #0
   2ccac:	beq	2cd7c <__assert_fail@plt+0x1b838>
   2ccb0:	ldr	r0, [fp, #-88]	; 0xffffffa8
   2ccb4:	ldr	r3, [fp, #-88]	; 0xffffffa8
   2ccb8:	ldr	r3, [r3, #88]	; 0x58
   2ccbc:	mov	r2, r3
   2ccc0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2ccc4:	bl	1ac18 <__assert_fail@plt+0x96d4>
   2ccc8:	str	r0, [fp, #-40]	; 0xffffffd8
   2cccc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2ccd0:	ldr	r3, [r3, #4]
   2ccd4:	ubfx	r3, r3, #8, #10
   2ccd8:	uxth	r3, r3
   2ccdc:	and	r3, r3, #4
   2cce0:	cmp	r3, #0
   2cce4:	beq	2ccf8 <__assert_fail@plt+0x1b7b4>
   2cce8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2ccec:	and	r3, r3, #1
   2ccf0:	cmp	r3, #0
   2ccf4:	beq	2d1ac <__assert_fail@plt+0x1bc68>
   2ccf8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2ccfc:	ldr	r3, [r3, #4]
   2cd00:	ubfx	r3, r3, #8, #10
   2cd04:	uxth	r3, r3
   2cd08:	and	r3, r3, #8
   2cd0c:	cmp	r3, #0
   2cd10:	beq	2cd24 <__assert_fail@plt+0x1b7e0>
   2cd14:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2cd18:	and	r3, r3, #1
   2cd1c:	cmp	r3, #0
   2cd20:	bne	2d1ac <__assert_fail@plt+0x1bc68>
   2cd24:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2cd28:	ldr	r3, [r3, #4]
   2cd2c:	ubfx	r3, r3, #8, #10
   2cd30:	uxth	r3, r3
   2cd34:	and	r3, r3, #32
   2cd38:	cmp	r3, #0
   2cd3c:	beq	2cd50 <__assert_fail@plt+0x1b80c>
   2cd40:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2cd44:	and	r3, r3, #2
   2cd48:	cmp	r3, #0
   2cd4c:	beq	2d1ac <__assert_fail@plt+0x1bc68>
   2cd50:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2cd54:	ldr	r3, [r3, #4]
   2cd58:	ubfx	r3, r3, #8, #10
   2cd5c:	uxth	r3, r3
   2cd60:	and	r3, r3, #128	; 0x80
   2cd64:	cmp	r3, #0
   2cd68:	beq	2cd7c <__assert_fail@plt+0x1b838>
   2cd6c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2cd70:	and	r3, r3, #8
   2cd74:	cmp	r3, #0
   2cd78:	beq	2d1ac <__assert_fail@plt+0x1bc68>
   2cd7c:	ldr	r3, [fp, #-88]	; 0xffffffa8
   2cd80:	ldr	r3, [r3, #108]	; 0x6c
   2cd84:	str	r3, [fp, #-20]	; 0xffffffec
   2cd88:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2cd8c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2cd90:	ldr	r0, [fp, #-88]	; 0xffffffa8
   2cd94:	bl	2d20c <__assert_fail@plt+0x1bcc8>
   2cd98:	mov	r3, r0
   2cd9c:	str	r3, [fp, #-68]	; 0xffffffbc
   2cda0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2cda4:	cmp	r3, #0
   2cda8:	movne	r3, #1
   2cdac:	moveq	r3, #0
   2cdb0:	uxtb	r3, r3
   2cdb4:	cmp	r3, #0
   2cdb8:	bne	2d1dc <__assert_fail@plt+0x1bc98>
   2cdbc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2cdc0:	ldr	r2, [r3, #12]
   2cdc4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2cdc8:	lsl	r3, r3, #2
   2cdcc:	add	r3, r2, r3
   2cdd0:	ldr	r3, [r3]
   2cdd4:	cmn	r3, #1
   2cdd8:	b	2d18c <__assert_fail@plt+0x1bc48>
   2cddc:	ldr	r3, [fp, #-88]	; 0xffffffa8
   2cde0:	ldr	r1, [r3, #116]	; 0x74
   2cde4:	ldr	r2, [fp, #-20]	; 0xffffffec
   2cde8:	mov	r3, r2
   2cdec:	lsl	r3, r3, #1
   2cdf0:	add	r3, r3, r2
   2cdf4:	lsl	r3, r3, #3
   2cdf8:	add	r3, r1, r3
   2cdfc:	str	r3, [fp, #-44]	; 0xffffffd4
   2ce00:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2ce04:	ldr	r3, [r3]
   2ce08:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2ce0c:	cmp	r2, r3
   2ce10:	bne	2d17c <__assert_fail@plt+0x1bc38>
   2ce14:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2ce18:	ldr	r3, [r3, #4]
   2ce1c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2ce20:	cmp	r2, r3
   2ce24:	bne	2d17c <__assert_fail@plt+0x1bc38>
   2ce28:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2ce2c:	ldr	r2, [r3, #12]
   2ce30:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2ce34:	ldr	r3, [r3, #8]
   2ce38:	sub	r3, r2, r3
   2ce3c:	str	r3, [fp, #-48]	; 0xffffffd0
   2ce40:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2ce44:	cmp	r3, #0
   2ce48:	bne	2ce98 <__assert_fail@plt+0x1b954>
   2ce4c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2ce50:	ldr	r1, [r3, #24]
   2ce54:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2ce58:	ldr	r0, [r3, #20]
   2ce5c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2ce60:	mov	r3, r2
   2ce64:	lsl	r3, r3, #1
   2ce68:	add	r3, r3, r2
   2ce6c:	lsl	r3, r3, #2
   2ce70:	add	r3, r0, r3
   2ce74:	ldr	r3, [r3, #8]
   2ce78:	ldr	r3, [r3]
   2ce7c:	mov	r2, r3
   2ce80:	mov	r3, r2
   2ce84:	lsl	r3, r3, #1
   2ce88:	add	r3, r3, r2
   2ce8c:	lsl	r3, r3, #2
   2ce90:	add	r3, r1, r3
   2ce94:	b	2ced0 <__assert_fail@plt+0x1b98c>
   2ce98:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2ce9c:	ldr	r2, [r3, #24]
   2cea0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2cea4:	ldr	r1, [r3, #12]
   2cea8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2ceac:	lsl	r3, r3, #2
   2ceb0:	add	r3, r1, r3
   2ceb4:	ldr	r3, [r3]
   2ceb8:	mov	r1, r3
   2cebc:	mov	r3, r1
   2cec0:	lsl	r3, r3, #1
   2cec4:	add	r3, r3, r1
   2cec8:	lsl	r3, r3, #2
   2cecc:	add	r3, r2, r3
   2ced0:	str	r3, [fp, #-52]	; 0xffffffcc
   2ced4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2ced8:	ldr	r2, [r3, #12]
   2cedc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2cee0:	add	r2, r2, r3
   2cee4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2cee8:	ldr	r3, [r3, #8]
   2ceec:	sub	r3, r2, r3
   2cef0:	str	r3, [fp, #-56]	; 0xffffffc8
   2cef4:	ldr	r0, [fp, #-88]	; 0xffffffa8
   2cef8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2cefc:	sub	r1, r3, #1
   2cf00:	ldr	r3, [fp, #-88]	; 0xffffffa8
   2cf04:	ldr	r3, [r3, #88]	; 0x58
   2cf08:	mov	r2, r3
   2cf0c:	bl	1ac18 <__assert_fail@plt+0x96d4>
   2cf10:	str	r0, [fp, #-40]	; 0xffffffd8
   2cf14:	ldr	r3, [fp, #-88]	; 0xffffffa8
   2cf18:	ldr	r2, [r3, #100]	; 0x64
   2cf1c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2cf20:	lsl	r3, r3, #2
   2cf24:	add	r3, r2, r3
   2cf28:	ldr	r3, [r3]
   2cf2c:	str	r3, [fp, #-60]	; 0xffffffc4
   2cf30:	ldr	r3, [fp, #-88]	; 0xffffffa8
   2cf34:	ldr	r2, [r3, #100]	; 0x64
   2cf38:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2cf3c:	lsl	r3, r3, #2
   2cf40:	add	r3, r2, r3
   2cf44:	ldr	r3, [r3]
   2cf48:	cmp	r3, #0
   2cf4c:	beq	2cf70 <__assert_fail@plt+0x1ba2c>
   2cf50:	ldr	r3, [fp, #-88]	; 0xffffffa8
   2cf54:	ldr	r2, [r3, #100]	; 0x64
   2cf58:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2cf5c:	lsl	r3, r3, #2
   2cf60:	add	r3, r2, r3
   2cf64:	ldr	r3, [r3]
   2cf68:	ldr	r3, [r3, #8]
   2cf6c:	b	2cf74 <__assert_fail@plt+0x1ba30>
   2cf70:	mov	r3, #0
   2cf74:	str	r3, [fp, #-64]	; 0xffffffc0
   2cf78:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2cf7c:	cmp	r3, #0
   2cf80:	bne	2d004 <__assert_fail@plt+0x1bac0>
   2cf84:	ldr	r3, [fp, #-88]	; 0xffffffa8
   2cf88:	ldr	r2, [r3, #100]	; 0x64
   2cf8c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2cf90:	lsl	r3, r3, #2
   2cf94:	add	r4, r2, r3
   2cf98:	sub	r0, fp, #68	; 0x44
   2cf9c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2cfa0:	ldr	r2, [fp, #-52]	; 0xffffffcc
   2cfa4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2cfa8:	bl	1c9ac <__assert_fail@plt+0xb468>
   2cfac:	mov	r3, r0
   2cfb0:	str	r3, [r4]
   2cfb4:	ldr	r3, [fp, #-88]	; 0xffffffa8
   2cfb8:	ldr	r2, [r3, #100]	; 0x64
   2cfbc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2cfc0:	lsl	r3, r3, #2
   2cfc4:	add	r3, r2, r3
   2cfc8:	ldr	r3, [r3]
   2cfcc:	cmp	r3, #0
   2cfd0:	moveq	r3, #1
   2cfd4:	movne	r3, #0
   2cfd8:	uxtb	r3, r3
   2cfdc:	cmp	r3, #0
   2cfe0:	beq	2d0e0 <__assert_fail@plt+0x1bb9c>
   2cfe4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2cfe8:	cmp	r3, #0
   2cfec:	movne	r3, #1
   2cff0:	moveq	r3, #0
   2cff4:	uxtb	r3, r3
   2cff8:	cmp	r3, #0
   2cffc:	beq	2d0e0 <__assert_fail@plt+0x1bb9c>
   2d000:	b	2d1f0 <__assert_fail@plt+0x1bcac>
   2d004:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2d008:	ldr	r1, [r3, #40]	; 0x28
   2d00c:	sub	r3, fp, #80	; 0x50
   2d010:	ldr	r2, [fp, #-52]	; 0xffffffcc
   2d014:	mov	r0, r3
   2d018:	bl	1b60c <__assert_fail@plt+0xa0c8>
   2d01c:	mov	r3, r0
   2d020:	str	r3, [fp, #-68]	; 0xffffffbc
   2d024:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2d028:	cmp	r3, #0
   2d02c:	movne	r3, #1
   2d030:	moveq	r3, #0
   2d034:	uxtb	r3, r3
   2d038:	cmp	r3, #0
   2d03c:	beq	2d050 <__assert_fail@plt+0x1bb0c>
   2d040:	ldr	r3, [fp, #-72]	; 0xffffffb8
   2d044:	mov	r0, r3
   2d048:	bl	151ec <__assert_fail@plt+0x3ca8>
   2d04c:	b	2d1f0 <__assert_fail@plt+0x1bcac>
   2d050:	ldr	r3, [fp, #-88]	; 0xffffffa8
   2d054:	ldr	r2, [r3, #100]	; 0x64
   2d058:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2d05c:	lsl	r3, r3, #2
   2d060:	add	r4, r2, r3
   2d064:	sub	r2, fp, #80	; 0x50
   2d068:	sub	r0, fp, #68	; 0x44
   2d06c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2d070:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2d074:	bl	1c9ac <__assert_fail@plt+0xb468>
   2d078:	mov	r3, r0
   2d07c:	str	r3, [r4]
   2d080:	ldr	r3, [fp, #-72]	; 0xffffffb8
   2d084:	mov	r0, r3
   2d088:	bl	151ec <__assert_fail@plt+0x3ca8>
   2d08c:	ldr	r3, [fp, #-88]	; 0xffffffa8
   2d090:	ldr	r2, [r3, #100]	; 0x64
   2d094:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2d098:	lsl	r3, r3, #2
   2d09c:	add	r3, r2, r3
   2d0a0:	ldr	r3, [r3]
   2d0a4:	cmp	r3, #0
   2d0a8:	moveq	r3, #1
   2d0ac:	movne	r3, #0
   2d0b0:	uxtb	r3, r3
   2d0b4:	cmp	r3, #0
   2d0b8:	beq	2d0e0 <__assert_fail@plt+0x1bb9c>
   2d0bc:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2d0c0:	cmp	r3, #0
   2d0c4:	movne	r3, #1
   2d0c8:	moveq	r3, #0
   2d0cc:	uxtb	r3, r3
   2d0d0:	cmp	r3, #0
   2d0d4:	beq	2d0e0 <__assert_fail@plt+0x1bb9c>
   2d0d8:	nop	{0}
   2d0dc:	b	2d1f0 <__assert_fail@plt+0x1bcac>
   2d0e0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2d0e4:	cmp	r3, #0
   2d0e8:	bne	2d180 <__assert_fail@plt+0x1bc3c>
   2d0ec:	ldr	r3, [fp, #-88]	; 0xffffffa8
   2d0f0:	ldr	r2, [r3, #100]	; 0x64
   2d0f4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2d0f8:	lsl	r3, r3, #2
   2d0fc:	add	r3, r2, r3
   2d100:	ldr	r3, [r3]
   2d104:	ldr	r3, [r3, #8]
   2d108:	ldr	r2, [fp, #-64]	; 0xffffffc0
   2d10c:	cmp	r2, r3
   2d110:	bge	2d180 <__assert_fail@plt+0x1bc3c>
   2d114:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2d118:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2d11c:	ldr	r0, [fp, #-88]	; 0xffffffa8
   2d120:	bl	2c6a8 <__assert_fail@plt+0x1b164>
   2d124:	mov	r3, r0
   2d128:	str	r3, [fp, #-68]	; 0xffffffbc
   2d12c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2d130:	cmp	r3, #0
   2d134:	movne	r3, #1
   2d138:	moveq	r3, #0
   2d13c:	uxtb	r3, r3
   2d140:	cmp	r3, #0
   2d144:	bne	2d1e4 <__assert_fail@plt+0x1bca0>
   2d148:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2d14c:	ldr	r0, [fp, #-88]	; 0xffffffa8
   2d150:	bl	2cc10 <__assert_fail@plt+0x1b6cc>
   2d154:	mov	r3, r0
   2d158:	str	r3, [fp, #-68]	; 0xffffffbc
   2d15c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2d160:	cmp	r3, #0
   2d164:	movne	r3, #1
   2d168:	moveq	r3, #0
   2d16c:	uxtb	r3, r3
   2d170:	cmp	r3, #0
   2d174:	bne	2d1ec <__assert_fail@plt+0x1bca8>
   2d178:	b	2d180 <__assert_fail@plt+0x1bc3c>
   2d17c:	nop	{0}
   2d180:	ldr	r3, [fp, #-20]	; 0xffffffec
   2d184:	add	r3, r3, #1
   2d188:	str	r3, [fp, #-20]	; 0xffffffec
   2d18c:	ldr	r3, [fp, #-88]	; 0xffffffa8
   2d190:	ldr	r3, [r3, #108]	; 0x6c
   2d194:	ldr	r2, [fp, #-20]	; 0xffffffec
   2d198:	cmp	r2, r3
   2d19c:	blt	2cddc <__assert_fail@plt+0x1b898>
   2d1a0:	b	2d1b0 <__assert_fail@plt+0x1bc6c>
   2d1a4:	nop	{0}
   2d1a8:	b	2d1b0 <__assert_fail@plt+0x1bc6c>
   2d1ac:	nop	{0}
   2d1b0:	ldr	r3, [fp, #-16]
   2d1b4:	add	r3, r3, #1
   2d1b8:	str	r3, [fp, #-16]
   2d1bc:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2d1c0:	ldr	r3, [r3, #4]
   2d1c4:	ldr	r2, [fp, #-16]
   2d1c8:	cmp	r2, r3
   2d1cc:	blt	2cc50 <__assert_fail@plt+0x1b70c>
   2d1d0:	mov	r3, #0
   2d1d4:	str	r3, [fp, #-68]	; 0xffffffbc
   2d1d8:	b	2d1f0 <__assert_fail@plt+0x1bcac>
   2d1dc:	nop	{0}
   2d1e0:	b	2d1f0 <__assert_fail@plt+0x1bcac>
   2d1e4:	nop	{0}
   2d1e8:	b	2d1f0 <__assert_fail@plt+0x1bcac>
   2d1ec:	nop	{0}
   2d1f0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2d1f4:	mov	r0, r3
   2d1f8:	sub	sp, fp, #8
   2d1fc:	ldr	r4, [sp]
   2d200:	ldr	fp, [sp, #4]
   2d204:	add	sp, sp, #8
   2d208:	pop	{pc}		; (ldr pc, [sp], #4)
   2d20c:	str	fp, [sp, #-8]!
   2d210:	str	lr, [sp, #4]
   2d214:	add	fp, sp, #4
   2d218:	sub	sp, sp, #96	; 0x60
   2d21c:	str	r0, [fp, #-72]	; 0xffffffb8
   2d220:	str	r1, [fp, #-76]	; 0xffffffb4
   2d224:	str	r2, [fp, #-80]	; 0xffffffb0
   2d228:	ldr	r3, [fp, #-72]	; 0xffffffb8
   2d22c:	ldr	r3, [r3, #84]	; 0x54
   2d230:	str	r3, [fp, #-32]	; 0xffffffe0
   2d234:	ldr	r3, [fp, #-72]	; 0xffffffb8
   2d238:	ldr	r3, [r3, #4]
   2d23c:	str	r3, [fp, #-12]
   2d240:	ldr	r1, [fp, #-80]	; 0xffffffb0
   2d244:	ldr	r0, [fp, #-72]	; 0xffffffb8
   2d248:	bl	3117c <__assert_fail@plt+0x1fc38>
   2d24c:	str	r0, [fp, #-36]	; 0xffffffdc
   2d250:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2d254:	cmn	r3, #1
   2d258:	beq	2d2b4 <__assert_fail@plt+0x1bd70>
   2d25c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   2d260:	ldr	r1, [r3, #116]	; 0x74
   2d264:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2d268:	mov	r3, r2
   2d26c:	lsl	r3, r3, #1
   2d270:	add	r3, r3, r2
   2d274:	lsl	r3, r3, #3
   2d278:	add	r3, r1, r3
   2d27c:	str	r3, [fp, #-16]
   2d280:	ldr	r3, [fp, #-16]
   2d284:	ldr	r3, [r3]
   2d288:	ldr	r2, [fp, #-76]	; 0xffffffb4
   2d28c:	cmp	r2, r3
   2d290:	bne	2d29c <__assert_fail@plt+0x1bd58>
   2d294:	mov	r3, #0
   2d298:	b	2d834 <__assert_fail@plt+0x1c2f0>
   2d29c:	ldr	r3, [fp, #-16]
   2d2a0:	add	r2, r3, #24
   2d2a4:	str	r2, [fp, #-16]
   2d2a8:	ldrb	r3, [r3, #20]
   2d2ac:	cmp	r3, #0
   2d2b0:	bne	2d280 <__assert_fail@plt+0x1bd3c>
   2d2b4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2d2b8:	ldr	r2, [r3]
   2d2bc:	ldr	r3, [fp, #-76]	; 0xffffffb4
   2d2c0:	lsl	r3, r3, #3
   2d2c4:	add	r3, r2, r3
   2d2c8:	ldr	r3, [r3]
   2d2cc:	str	r3, [fp, #-40]	; 0xffffffd8
   2d2d0:	mov	r3, #0
   2d2d4:	str	r3, [fp, #-8]
   2d2d8:	b	2d81c <__assert_fail@plt+0x1c2d8>
   2d2dc:	ldr	r3, [fp, #-72]	; 0xffffffb8
   2d2e0:	ldr	r2, [r3, #132]	; 0x84
   2d2e4:	ldr	r3, [fp, #-8]
   2d2e8:	lsl	r3, r3, #2
   2d2ec:	add	r3, r2, r3
   2d2f0:	ldr	r3, [r3]
   2d2f4:	str	r3, [fp, #-44]	; 0xffffffd4
   2d2f8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2d2fc:	ldr	r2, [r3]
   2d300:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2d304:	ldr	r3, [r3, #4]
   2d308:	lsl	r3, r3, #3
   2d30c:	add	r3, r2, r3
   2d310:	ldr	r3, [r3]
   2d314:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2d318:	cmp	r2, r3
   2d31c:	bne	2d7f4 <__assert_fail@plt+0x1c2b0>
   2d320:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2d324:	ldr	r3, [r3]
   2d328:	str	r3, [fp, #-24]	; 0xffffffe8
   2d32c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2d330:	str	r3, [fp, #-28]	; 0xffffffe4
   2d334:	mov	r3, #0
   2d338:	str	r3, [fp, #-20]	; 0xffffffec
   2d33c:	b	2d4cc <__assert_fail@plt+0x1bf88>
   2d340:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2d344:	ldr	r2, [r3, #20]
   2d348:	ldr	r3, [fp, #-20]	; 0xffffffec
   2d34c:	lsl	r3, r3, #2
   2d350:	add	r3, r2, r3
   2d354:	ldr	r3, [r3]
   2d358:	str	r3, [fp, #-48]	; 0xffffffd0
   2d35c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2d360:	ldr	r2, [r3, #4]
   2d364:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d368:	sub	r3, r2, r3
   2d36c:	str	r3, [fp, #-52]	; 0xffffffcc
   2d370:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2d374:	cmp	r3, #0
   2d378:	ble	2d440 <__assert_fail@plt+0x1befc>
   2d37c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2d380:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2d384:	add	r2, r2, r3
   2d388:	ldr	r3, [fp, #-72]	; 0xffffffb8
   2d38c:	ldr	r3, [r3, #28]
   2d390:	cmp	r2, r3
   2d394:	movgt	r3, #1
   2d398:	movle	r3, #0
   2d39c:	uxtb	r3, r3
   2d3a0:	cmp	r3, #0
   2d3a4:	beq	2d410 <__assert_fail@plt+0x1becc>
   2d3a8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2d3ac:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2d3b0:	add	r2, r2, r3
   2d3b4:	ldr	r3, [fp, #-72]	; 0xffffffb8
   2d3b8:	ldr	r3, [r3, #48]	; 0x30
   2d3bc:	cmp	r2, r3
   2d3c0:	bgt	2d4e4 <__assert_fail@plt+0x1bfa0>
   2d3c4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2d3c8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2d3cc:	add	r3, r2, r3
   2d3d0:	mov	r1, r3
   2d3d4:	ldr	r0, [fp, #-72]	; 0xffffffb8
   2d3d8:	bl	2a870 <__assert_fail@plt+0x1932c>
   2d3dc:	str	r0, [fp, #-56]	; 0xffffffc8
   2d3e0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2d3e4:	cmp	r3, #0
   2d3e8:	movne	r3, #1
   2d3ec:	moveq	r3, #0
   2d3f0:	uxtb	r3, r3
   2d3f4:	cmp	r3, #0
   2d3f8:	beq	2d404 <__assert_fail@plt+0x1bec0>
   2d3fc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2d400:	b	2d834 <__assert_fail@plt+0x1c2f0>
   2d404:	ldr	r3, [fp, #-72]	; 0xffffffb8
   2d408:	ldr	r3, [r3, #4]
   2d40c:	str	r3, [fp, #-12]
   2d410:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2d414:	ldr	r2, [fp, #-12]
   2d418:	add	r0, r2, r3
   2d41c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d420:	ldr	r2, [fp, #-12]
   2d424:	add	r3, r2, r3
   2d428:	ldr	r2, [fp, #-52]	; 0xffffffcc
   2d42c:	mov	r1, r3
   2d430:	bl	112a4 <memcmp@plt>
   2d434:	mov	r3, r0
   2d438:	cmp	r3, #0
   2d43c:	bne	2d4ec <__assert_fail@plt+0x1bfa8>
   2d440:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2d444:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2d448:	add	r3, r2, r3
   2d44c:	str	r3, [fp, #-28]	; 0xffffffe4
   2d450:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2d454:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2d458:	add	r3, r2, r3
   2d45c:	str	r3, [fp, #-24]	; 0xffffffe8
   2d460:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2d464:	str	r3, [sp]
   2d468:	ldr	r3, [fp, #-76]	; 0xffffffb4
   2d46c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   2d470:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2d474:	ldr	r0, [fp, #-72]	; 0xffffffb8
   2d478:	bl	2d848 <__assert_fail@plt+0x1c304>
   2d47c:	str	r0, [fp, #-56]	; 0xffffffc8
   2d480:	ldr	r3, [fp, #-72]	; 0xffffffb8
   2d484:	ldr	r3, [r3, #4]
   2d488:	str	r3, [fp, #-12]
   2d48c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2d490:	cmp	r3, #1
   2d494:	beq	2d4bc <__assert_fail@plt+0x1bf78>
   2d498:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2d49c:	cmp	r3, #0
   2d4a0:	movne	r3, #1
   2d4a4:	moveq	r3, #0
   2d4a8:	uxtb	r3, r3
   2d4ac:	cmp	r3, #0
   2d4b0:	beq	2d4c0 <__assert_fail@plt+0x1bf7c>
   2d4b4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2d4b8:	b	2d834 <__assert_fail@plt+0x1c2f0>
   2d4bc:	nop	{0}
   2d4c0:	ldr	r3, [fp, #-20]	; 0xffffffec
   2d4c4:	add	r3, r3, #1
   2d4c8:	str	r3, [fp, #-20]	; 0xffffffec
   2d4cc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2d4d0:	ldr	r3, [r3, #16]
   2d4d4:	ldr	r2, [fp, #-20]	; 0xffffffec
   2d4d8:	cmp	r2, r3
   2d4dc:	blt	2d340 <__assert_fail@plt+0x1bdfc>
   2d4e0:	b	2d4f0 <__assert_fail@plt+0x1bfac>
   2d4e4:	nop	{0}
   2d4e8:	b	2d4f0 <__assert_fail@plt+0x1bfac>
   2d4ec:	nop	{0}
   2d4f0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2d4f4:	ldr	r3, [r3, #16]
   2d4f8:	ldr	r2, [fp, #-20]	; 0xffffffec
   2d4fc:	cmp	r2, r3
   2d500:	blt	2d7fc <__assert_fail@plt+0x1c2b8>
   2d504:	ldr	r3, [fp, #-20]	; 0xffffffec
   2d508:	cmp	r3, #0
   2d50c:	ble	2d7e0 <__assert_fail@plt+0x1c29c>
   2d510:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d514:	add	r3, r3, #1
   2d518:	str	r3, [fp, #-24]	; 0xffffffe8
   2d51c:	b	2d7e0 <__assert_fail@plt+0x1c29c>
   2d520:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2d524:	ldr	r3, [r3]
   2d528:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2d52c:	sub	r3, r2, r3
   2d530:	str	r3, [fp, #-60]	; 0xffffffc4
   2d534:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2d538:	cmp	r3, #0
   2d53c:	ble	2d5f8 <__assert_fail@plt+0x1c0b4>
   2d540:	ldr	r3, [fp, #-72]	; 0xffffffb8
   2d544:	ldr	r3, [r3, #28]
   2d548:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2d54c:	cmp	r2, r3
   2d550:	movge	r3, #1
   2d554:	movlt	r3, #0
   2d558:	uxtb	r3, r3
   2d55c:	cmp	r3, #0
   2d560:	beq	2d5c0 <__assert_fail@plt+0x1c07c>
   2d564:	ldr	r3, [fp, #-72]	; 0xffffffb8
   2d568:	ldr	r3, [r3, #48]	; 0x30
   2d56c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2d570:	cmp	r2, r3
   2d574:	bge	2d804 <__assert_fail@plt+0x1c2c0>
   2d578:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2d57c:	add	r3, r3, #1
   2d580:	mov	r1, r3
   2d584:	ldr	r0, [fp, #-72]	; 0xffffffb8
   2d588:	bl	309c0 <__assert_fail@plt+0x1f47c>
   2d58c:	str	r0, [fp, #-56]	; 0xffffffc8
   2d590:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2d594:	cmp	r3, #0
   2d598:	movne	r3, #1
   2d59c:	moveq	r3, #0
   2d5a0:	uxtb	r3, r3
   2d5a4:	cmp	r3, #0
   2d5a8:	beq	2d5b4 <__assert_fail@plt+0x1c070>
   2d5ac:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2d5b0:	b	2d834 <__assert_fail@plt+0x1c2f0>
   2d5b4:	ldr	r3, [fp, #-72]	; 0xffffffb8
   2d5b8:	ldr	r3, [r3, #4]
   2d5bc:	str	r3, [fp, #-12]
   2d5c0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2d5c4:	add	r2, r3, #1
   2d5c8:	str	r2, [fp, #-28]	; 0xffffffe4
   2d5cc:	mov	r2, r3
   2d5d0:	ldr	r3, [fp, #-12]
   2d5d4:	add	r3, r3, r2
   2d5d8:	ldrb	r2, [r3]
   2d5dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d5e0:	sub	r3, r3, #1
   2d5e4:	ldr	r1, [fp, #-12]
   2d5e8:	add	r3, r1, r3
   2d5ec:	ldrb	r3, [r3]
   2d5f0:	cmp	r2, r3
   2d5f4:	bne	2d80c <__assert_fail@plt+0x1c2c8>
   2d5f8:	ldr	r3, [fp, #-72]	; 0xffffffb8
   2d5fc:	ldr	r2, [r3, #100]	; 0x64
   2d600:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d604:	lsl	r3, r3, #2
   2d608:	add	r3, r2, r3
   2d60c:	ldr	r3, [r3]
   2d610:	cmp	r3, #0
   2d614:	beq	2d7b8 <__assert_fail@plt+0x1c274>
   2d618:	ldr	r3, [fp, #-72]	; 0xffffffb8
   2d61c:	ldr	r2, [r3, #100]	; 0x64
   2d620:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d624:	lsl	r3, r3, #2
   2d628:	add	r3, r2, r3
   2d62c:	ldr	r3, [r3]
   2d630:	add	r3, r3, #4
   2d634:	str	r3, [fp, #-64]	; 0xffffffc0
   2d638:	mov	r3, #9
   2d63c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2d640:	ldr	r1, [fp, #-64]	; 0xffffffc0
   2d644:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2d648:	bl	2d950 <__assert_fail@plt+0x1c40c>
   2d64c:	str	r0, [fp, #-68]	; 0xffffffbc
   2d650:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2d654:	cmn	r3, #1
   2d658:	beq	2d7c0 <__assert_fail@plt+0x1c27c>
   2d65c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2d660:	ldr	r3, [r3, #8]
   2d664:	cmp	r3, #0
   2d668:	bne	2d6b4 <__assert_fail@plt+0x1c170>
   2d66c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2d670:	ldr	r3, [r3]
   2d674:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2d678:	sub	r3, r2, r3
   2d67c:	add	r3, r3, #1
   2d680:	mov	r1, r3
   2d684:	mov	r0, #12
   2d688:	bl	33ad0 <__assert_fail@plt+0x2258c>
   2d68c:	mov	r3, r0
   2d690:	mov	r2, r3
   2d694:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2d698:	str	r2, [r3, #8]
   2d69c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2d6a0:	ldr	r3, [r3, #8]
   2d6a4:	cmp	r3, #0
   2d6a8:	bne	2d6b4 <__assert_fail@plt+0x1c170>
   2d6ac:	mov	r3, #12
   2d6b0:	b	2d834 <__assert_fail@plt+0x1c2f0>
   2d6b4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2d6b8:	ldr	r1, [r3, #8]
   2d6bc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2d6c0:	ldr	r2, [r3, #4]
   2d6c4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2d6c8:	ldr	r0, [r3]
   2d6cc:	mov	r3, #9
   2d6d0:	str	r3, [sp, #8]
   2d6d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d6d8:	str	r3, [sp, #4]
   2d6dc:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2d6e0:	str	r3, [sp]
   2d6e4:	mov	r3, r0
   2d6e8:	ldr	r0, [fp, #-72]	; 0xffffffb8
   2d6ec:	bl	2da14 <__assert_fail@plt+0x1c4d0>
   2d6f0:	str	r0, [fp, #-56]	; 0xffffffc8
   2d6f4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2d6f8:	cmp	r3, #1
   2d6fc:	beq	2d7c8 <__assert_fail@plt+0x1c284>
   2d700:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2d704:	cmp	r3, #0
   2d708:	movne	r3, #1
   2d70c:	moveq	r3, #0
   2d710:	uxtb	r3, r3
   2d714:	cmp	r3, #0
   2d718:	beq	2d724 <__assert_fail@plt+0x1c1e0>
   2d71c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2d720:	b	2d834 <__assert_fail@plt+0x1c2f0>
   2d724:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2d728:	ldr	r1, [fp, #-68]	; 0xffffffbc
   2d72c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2d730:	bl	31424 <__assert_fail@plt+0x1fee0>
   2d734:	str	r0, [fp, #-48]	; 0xffffffd0
   2d738:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2d73c:	cmp	r3, #0
   2d740:	moveq	r3, #1
   2d744:	movne	r3, #0
   2d748:	uxtb	r3, r3
   2d74c:	cmp	r3, #0
   2d750:	beq	2d75c <__assert_fail@plt+0x1c218>
   2d754:	mov	r3, #12
   2d758:	b	2d834 <__assert_fail@plt+0x1c2f0>
   2d75c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2d760:	str	r3, [sp]
   2d764:	ldr	r3, [fp, #-76]	; 0xffffffb4
   2d768:	ldr	r2, [fp, #-48]	; 0xffffffd0
   2d76c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2d770:	ldr	r0, [fp, #-72]	; 0xffffffb8
   2d774:	bl	2d848 <__assert_fail@plt+0x1c304>
   2d778:	str	r0, [fp, #-56]	; 0xffffffc8
   2d77c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   2d780:	ldr	r3, [r3, #4]
   2d784:	str	r3, [fp, #-12]
   2d788:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2d78c:	cmp	r3, #1
   2d790:	beq	2d7d0 <__assert_fail@plt+0x1c28c>
   2d794:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2d798:	cmp	r3, #0
   2d79c:	movne	r3, #1
   2d7a0:	moveq	r3, #0
   2d7a4:	uxtb	r3, r3
   2d7a8:	cmp	r3, #0
   2d7ac:	beq	2d7d4 <__assert_fail@plt+0x1c290>
   2d7b0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2d7b4:	b	2d834 <__assert_fail@plt+0x1c2f0>
   2d7b8:	nop	{0}
   2d7bc:	b	2d7d4 <__assert_fail@plt+0x1c290>
   2d7c0:	nop	{0}
   2d7c4:	b	2d7d4 <__assert_fail@plt+0x1c290>
   2d7c8:	nop	{0}
   2d7cc:	b	2d7d4 <__assert_fail@plt+0x1c290>
   2d7d0:	nop	{0}
   2d7d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d7d8:	add	r3, r3, #1
   2d7dc:	str	r3, [fp, #-24]	; 0xffffffe8
   2d7e0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2d7e4:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2d7e8:	cmp	r2, r3
   2d7ec:	ble	2d520 <__assert_fail@plt+0x1bfdc>
   2d7f0:	b	2d810 <__assert_fail@plt+0x1c2cc>
   2d7f4:	nop	{0}
   2d7f8:	b	2d810 <__assert_fail@plt+0x1c2cc>
   2d7fc:	nop	{0}
   2d800:	b	2d810 <__assert_fail@plt+0x1c2cc>
   2d804:	nop	{0}
   2d808:	b	2d810 <__assert_fail@plt+0x1c2cc>
   2d80c:	nop	{0}
   2d810:	ldr	r3, [fp, #-8]
   2d814:	add	r3, r3, #1
   2d818:	str	r3, [fp, #-8]
   2d81c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   2d820:	ldr	r3, [r3, #124]	; 0x7c
   2d824:	ldr	r2, [fp, #-8]
   2d828:	cmp	r2, r3
   2d82c:	blt	2d2dc <__assert_fail@plt+0x1bd98>
   2d830:	mov	r3, #0
   2d834:	mov	r0, r3
   2d838:	sub	sp, fp, #4
   2d83c:	ldr	fp, [sp]
   2d840:	add	sp, sp, #4
   2d844:	pop	{pc}		; (ldr pc, [sp], #4)
   2d848:	str	fp, [sp, #-8]!
   2d84c:	str	lr, [sp, #4]
   2d850:	add	fp, sp, #4
   2d854:	sub	sp, sp, #40	; 0x28
   2d858:	str	r0, [fp, #-16]
   2d85c:	str	r1, [fp, #-20]	; 0xffffffec
   2d860:	str	r2, [fp, #-24]	; 0xffffffe8
   2d864:	str	r3, [fp, #-28]	; 0xffffffe4
   2d868:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d86c:	add	r1, r3, #8
   2d870:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d874:	ldr	r2, [r3]
   2d878:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d87c:	ldr	r0, [r3, #4]
   2d880:	mov	r3, #8
   2d884:	str	r3, [sp, #8]
   2d888:	ldr	r3, [fp, #4]
   2d88c:	str	r3, [sp, #4]
   2d890:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2d894:	str	r3, [sp]
   2d898:	mov	r3, r0
   2d89c:	ldr	r0, [fp, #-16]
   2d8a0:	bl	2da14 <__assert_fail@plt+0x1c4d0>
   2d8a4:	str	r0, [fp, #-8]
   2d8a8:	ldr	r3, [fp, #-8]
   2d8ac:	cmp	r3, #0
   2d8b0:	beq	2d8bc <__assert_fail@plt+0x1c378>
   2d8b4:	ldr	r3, [fp, #-8]
   2d8b8:	b	2d93c <__assert_fail@plt+0x1c3f8>
   2d8bc:	ldr	r3, [fp, #-20]	; 0xffffffec
   2d8c0:	ldr	r2, [r3]
   2d8c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d8c8:	ldr	r3, [r3, #4]
   2d8cc:	str	r3, [sp]
   2d8d0:	mov	r3, r2
   2d8d4:	ldr	r2, [fp, #4]
   2d8d8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2d8dc:	ldr	r0, [fp, #-16]
   2d8e0:	bl	30e64 <__assert_fail@plt+0x1f920>
   2d8e4:	str	r0, [fp, #-8]
   2d8e8:	ldr	r3, [fp, #-8]
   2d8ec:	cmp	r3, #0
   2d8f0:	movne	r3, #1
   2d8f4:	moveq	r3, #0
   2d8f8:	uxtb	r3, r3
   2d8fc:	cmp	r3, #0
   2d900:	beq	2d90c <__assert_fail@plt+0x1c3c8>
   2d904:	ldr	r3, [fp, #-8]
   2d908:	b	2d93c <__assert_fail@plt+0x1c3f8>
   2d90c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d910:	ldr	r2, [r3, #4]
   2d914:	ldr	r3, [fp, #4]
   2d918:	add	r2, r2, r3
   2d91c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2d920:	ldr	r3, [r3]
   2d924:	sub	r3, r2, r3
   2d928:	str	r3, [fp, #-12]
   2d92c:	ldr	r1, [fp, #-12]
   2d930:	ldr	r0, [fp, #-16]
   2d934:	bl	2a870 <__assert_fail@plt+0x1932c>
   2d938:	mov	r3, r0
   2d93c:	mov	r0, r3
   2d940:	sub	sp, fp, #4
   2d944:	ldr	fp, [sp]
   2d948:	add	sp, sp, #4
   2d94c:	pop	{pc}		; (ldr pc, [sp], #4)
   2d950:	push	{fp}		; (str fp, [sp, #-4]!)
   2d954:	add	fp, sp, #0
   2d958:	sub	sp, sp, #36	; 0x24
   2d95c:	str	r0, [fp, #-24]	; 0xffffffe8
   2d960:	str	r1, [fp, #-28]	; 0xffffffe4
   2d964:	str	r2, [fp, #-32]	; 0xffffffe0
   2d968:	str	r3, [fp, #-36]	; 0xffffffdc
   2d96c:	mov	r3, #0
   2d970:	str	r3, [fp, #-8]
   2d974:	b	2d9ec <__assert_fail@plt+0x1c4a8>
   2d978:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2d97c:	ldr	r2, [r3, #8]
   2d980:	ldr	r3, [fp, #-8]
   2d984:	lsl	r3, r3, #2
   2d988:	add	r3, r2, r3
   2d98c:	ldr	r3, [r3]
   2d990:	str	r3, [fp, #-12]
   2d994:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d998:	ldr	r2, [r3]
   2d99c:	ldr	r3, [fp, #-12]
   2d9a0:	lsl	r3, r3, #3
   2d9a4:	add	r3, r2, r3
   2d9a8:	str	r3, [fp, #-16]
   2d9ac:	ldr	r3, [fp, #-16]
   2d9b0:	ldrb	r3, [r3, #4]
   2d9b4:	mov	r2, r3
   2d9b8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2d9bc:	cmp	r3, r2
   2d9c0:	bne	2d9e0 <__assert_fail@plt+0x1c49c>
   2d9c4:	ldr	r3, [fp, #-16]
   2d9c8:	ldr	r3, [r3]
   2d9cc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2d9d0:	cmp	r2, r3
   2d9d4:	bne	2d9e0 <__assert_fail@plt+0x1c49c>
   2d9d8:	ldr	r3, [fp, #-12]
   2d9dc:	b	2da04 <__assert_fail@plt+0x1c4c0>
   2d9e0:	ldr	r3, [fp, #-8]
   2d9e4:	add	r3, r3, #1
   2d9e8:	str	r3, [fp, #-8]
   2d9ec:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2d9f0:	ldr	r3, [r3, #4]
   2d9f4:	ldr	r2, [fp, #-8]
   2d9f8:	cmp	r2, r3
   2d9fc:	blt	2d978 <__assert_fail@plt+0x1c434>
   2da00:	mvn	r3, #0
   2da04:	mov	r0, r3
   2da08:	add	sp, fp, #0
   2da0c:	pop	{fp}		; (ldr fp, [sp], #4)
   2da10:	bx	lr
   2da14:	str	fp, [sp, #-8]!
   2da18:	str	lr, [sp, #4]
   2da1c:	add	fp, sp, #4
   2da20:	sub	sp, sp, #96	; 0x60
   2da24:	str	r0, [fp, #-80]	; 0xffffffb0
   2da28:	str	r1, [fp, #-84]	; 0xffffffac
   2da2c:	str	r2, [fp, #-88]	; 0xffffffa8
   2da30:	str	r3, [fp, #-92]	; 0xffffffa4
   2da34:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2da38:	ldr	r3, [r3, #84]	; 0x54
   2da3c:	str	r3, [fp, #-20]	; 0xffffffec
   2da40:	mov	r3, #0
   2da44:	str	r3, [fp, #-60]	; 0xffffffc4
   2da48:	mov	r3, #0
   2da4c:	str	r3, [fp, #-16]
   2da50:	ldr	r3, [fp, #-20]	; 0xffffffec
   2da54:	ldr	r2, [r3]
   2da58:	ldr	r3, [fp, #-88]	; 0xffffffa8
   2da5c:	lsl	r3, r3, #3
   2da60:	add	r3, r2, r3
   2da64:	ldr	r3, [r3]
   2da68:	str	r3, [fp, #-24]	; 0xffffffe8
   2da6c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2da70:	ldr	r2, [r3, #120]	; 0x78
   2da74:	ldr	r3, [fp, #8]
   2da78:	add	r2, r2, r3
   2da7c:	ldr	r3, [fp, #-84]	; 0xffffffac
   2da80:	ldr	r3, [r3, #4]
   2da84:	cmp	r2, r3
   2da88:	movge	r3, #1
   2da8c:	movlt	r3, #0
   2da90:	uxtb	r3, r3
   2da94:	cmp	r3, #0
   2da98:	beq	2dbb4 <__assert_fail@plt+0x1c670>
   2da9c:	ldr	r3, [fp, #-84]	; 0xffffffac
   2daa0:	ldr	r3, [r3, #4]
   2daa4:	str	r3, [fp, #-28]	; 0xffffffe4
   2daa8:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2daac:	ldr	r2, [r3, #120]	; 0x78
   2dab0:	ldr	r3, [fp, #8]
   2dab4:	add	r3, r2, r3
   2dab8:	add	r3, r3, #1
   2dabc:	str	r3, [fp, #-32]	; 0xffffffe0
   2dac0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2dac4:	movw	r3, #65535	; 0xffff
   2dac8:	movt	r3, #32767	; 0x7fff
   2dacc:	sub	r3, r3, r2
   2dad0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2dad4:	cmp	r2, r3
   2dad8:	movgt	r3, #1
   2dadc:	movle	r3, #0
   2dae0:	uxtb	r3, r3
   2dae4:	cmp	r3, #0
   2dae8:	beq	2daf4 <__assert_fail@plt+0x1c5b0>
   2daec:	mov	r3, #12
   2daf0:	b	2e1b0 <__assert_fail@plt+0x1cc6c>
   2daf4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2daf8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2dafc:	add	r3, r2, r3
   2db00:	str	r3, [fp, #-36]	; 0xffffffdc
   2db04:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2db08:	cmn	r3, #-1073741823	; 0xc0000001
   2db0c:	movhi	r3, #1
   2db10:	movls	r3, #0
   2db14:	uxtb	r3, r3
   2db18:	cmp	r3, #0
   2db1c:	beq	2db28 <__assert_fail@plt+0x1c5e4>
   2db20:	mov	r3, #12
   2db24:	b	2e1b0 <__assert_fail@plt+0x1cc6c>
   2db28:	ldr	r3, [fp, #-84]	; 0xffffffac
   2db2c:	ldr	r2, [r3, #8]
   2db30:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2db34:	lsl	r3, r3, #2
   2db38:	mov	r1, r3
   2db3c:	mov	r0, r2
   2db40:	bl	33c30 <__assert_fail@plt+0x226ec>
   2db44:	str	r0, [fp, #-40]	; 0xffffffd8
   2db48:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2db4c:	cmp	r3, #0
   2db50:	moveq	r3, #1
   2db54:	movne	r3, #0
   2db58:	uxtb	r3, r3
   2db5c:	cmp	r3, #0
   2db60:	beq	2db6c <__assert_fail@plt+0x1c628>
   2db64:	mov	r3, #12
   2db68:	b	2e1b0 <__assert_fail@plt+0x1cc6c>
   2db6c:	ldr	r3, [fp, #-84]	; 0xffffffac
   2db70:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2db74:	str	r2, [r3, #8]
   2db78:	ldr	r3, [fp, #-84]	; 0xffffffac
   2db7c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2db80:	str	r2, [r3, #4]
   2db84:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2db88:	lsl	r3, r3, #2
   2db8c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2db90:	add	r0, r2, r3
   2db94:	ldr	r3, [fp, #-84]	; 0xffffffac
   2db98:	ldr	r2, [r3, #4]
   2db9c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2dba0:	sub	r3, r2, r3
   2dba4:	lsl	r3, r3, #2
   2dba8:	mov	r2, r3
   2dbac:	mov	r1, #0
   2dbb0:	bl	11448 <memset@plt>
   2dbb4:	ldr	r3, [fp, #-84]	; 0xffffffac
   2dbb8:	ldr	r3, [r3]
   2dbbc:	cmp	r3, #0
   2dbc0:	beq	2dbd0 <__assert_fail@plt+0x1c68c>
   2dbc4:	ldr	r3, [fp, #-84]	; 0xffffffac
   2dbc8:	ldr	r3, [r3]
   2dbcc:	b	2dbd4 <__assert_fail@plt+0x1c690>
   2dbd0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2dbd4:	str	r3, [fp, #-8]
   2dbd8:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2dbdc:	ldr	r3, [r3, #100]	; 0x64
   2dbe0:	str	r3, [fp, #-44]	; 0xffffffd4
   2dbe4:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2dbe8:	ldr	r3, [r3, #40]	; 0x28
   2dbec:	str	r3, [fp, #-48]	; 0xffffffd0
   2dbf0:	ldr	r3, [fp, #-84]	; 0xffffffac
   2dbf4:	ldr	r2, [r3, #8]
   2dbf8:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2dbfc:	str	r2, [r3, #100]	; 0x64
   2dc00:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2dc04:	ldr	r2, [fp, #-8]
   2dc08:	str	r2, [r3, #40]	; 0x28
   2dc0c:	ldr	r0, [fp, #-80]	; 0xffffffb0
   2dc10:	ldr	r3, [fp, #-8]
   2dc14:	sub	r1, r3, #1
   2dc18:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2dc1c:	ldr	r3, [r3, #88]	; 0x58
   2dc20:	mov	r2, r3
   2dc24:	bl	1ac18 <__assert_fail@plt+0x96d4>
   2dc28:	str	r0, [fp, #-52]	; 0xffffffcc
   2dc2c:	ldr	r2, [fp, #-8]
   2dc30:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2dc34:	cmp	r2, r3
   2dc38:	bne	2dcc4 <__assert_fail@plt+0x1c780>
   2dc3c:	sub	r3, fp, #72	; 0x48
   2dc40:	ldr	r1, [fp, #-88]	; 0xffffffa8
   2dc44:	mov	r0, r3
   2dc48:	bl	1ae9c <__assert_fail@plt+0x9958>
   2dc4c:	mov	r3, r0
   2dc50:	str	r3, [fp, #-60]	; 0xffffffc4
   2dc54:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2dc58:	cmp	r3, #0
   2dc5c:	movne	r3, #1
   2dc60:	moveq	r3, #0
   2dc64:	uxtb	r3, r3
   2dc68:	cmp	r3, #0
   2dc6c:	beq	2dc78 <__assert_fail@plt+0x1c734>
   2dc70:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2dc74:	b	2e1b0 <__assert_fail@plt+0x1cc6c>
   2dc78:	sub	r1, fp, #72	; 0x48
   2dc7c:	ldr	r3, [fp, #12]
   2dc80:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2dc84:	ldr	r0, [fp, #-20]	; 0xffffffec
   2dc88:	bl	2e500 <__assert_fail@plt+0x1cfbc>
   2dc8c:	mov	r3, r0
   2dc90:	str	r3, [fp, #-60]	; 0xffffffc4
   2dc94:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2dc98:	cmp	r3, #0
   2dc9c:	movne	r3, #1
   2dca0:	moveq	r3, #0
   2dca4:	uxtb	r3, r3
   2dca8:	cmp	r3, #0
   2dcac:	beq	2dd5c <__assert_fail@plt+0x1c818>
   2dcb0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2dcb4:	mov	r0, r3
   2dcb8:	bl	151ec <__assert_fail@plt+0x3ca8>
   2dcbc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2dcc0:	b	2e1b0 <__assert_fail@plt+0x1cc6c>
   2dcc4:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2dcc8:	ldr	r2, [r3, #100]	; 0x64
   2dccc:	ldr	r3, [fp, #-8]
   2dcd0:	lsl	r3, r3, #2
   2dcd4:	add	r3, r2, r3
   2dcd8:	ldr	r3, [r3]
   2dcdc:	str	r3, [fp, #-16]
   2dce0:	ldr	r3, [fp, #-16]
   2dce4:	cmp	r3, #0
   2dce8:	beq	2dd48 <__assert_fail@plt+0x1c804>
   2dcec:	ldr	r3, [fp, #-16]
   2dcf0:	ldrb	r3, [r3, #52]	; 0x34
   2dcf4:	and	r3, r3, #64	; 0x40
   2dcf8:	uxtb	r3, r3
   2dcfc:	cmp	r3, #0
   2dd00:	beq	2dd48 <__assert_fail@plt+0x1c804>
   2dd04:	ldr	r3, [fp, #-16]
   2dd08:	add	r2, r3, #4
   2dd0c:	sub	r3, fp, #72	; 0x48
   2dd10:	mov	r1, r2
   2dd14:	mov	r0, r3
   2dd18:	bl	1b068 <__assert_fail@plt+0x9b24>
   2dd1c:	mov	r3, r0
   2dd20:	str	r3, [fp, #-60]	; 0xffffffc4
   2dd24:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2dd28:	cmp	r3, #0
   2dd2c:	movne	r3, #1
   2dd30:	moveq	r3, #0
   2dd34:	uxtb	r3, r3
   2dd38:	cmp	r3, #0
   2dd3c:	beq	2dd5c <__assert_fail@plt+0x1c818>
   2dd40:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2dd44:	b	2e1b0 <__assert_fail@plt+0x1cc6c>
   2dd48:	sub	r3, fp, #72	; 0x48
   2dd4c:	mov	r2, #12
   2dd50:	mov	r1, #0
   2dd54:	mov	r0, r3
   2dd58:	bl	11448 <memset@plt>
   2dd5c:	ldr	r2, [fp, #-8]
   2dd60:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2dd64:	cmp	r2, r3
   2dd68:	beq	2dd90 <__assert_fail@plt+0x1c84c>
   2dd6c:	ldr	r3, [fp, #-16]
   2dd70:	cmp	r3, #0
   2dd74:	beq	2de70 <__assert_fail@plt+0x1c92c>
   2dd78:	ldr	r3, [fp, #-16]
   2dd7c:	ldrb	r3, [r3, #52]	; 0x34
   2dd80:	and	r3, r3, #64	; 0x40
   2dd84:	uxtb	r3, r3
   2dd88:	cmp	r3, #0
   2dd8c:	beq	2de70 <__assert_fail@plt+0x1c92c>
   2dd90:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2dd94:	cmp	r3, #0
   2dd98:	beq	2ddf0 <__assert_fail@plt+0x1c8ac>
   2dd9c:	sub	r1, fp, #72	; 0x48
   2dda0:	ldr	r3, [fp, #12]
   2dda4:	str	r3, [sp]
   2dda8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2ddac:	ldr	r2, [fp, #-8]
   2ddb0:	ldr	r0, [fp, #-80]	; 0xffffffb0
   2ddb4:	bl	2e8e8 <__assert_fail@plt+0x1d3a4>
   2ddb8:	mov	r3, r0
   2ddbc:	str	r3, [fp, #-60]	; 0xffffffc4
   2ddc0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2ddc4:	cmp	r3, #0
   2ddc8:	movne	r3, #1
   2ddcc:	moveq	r3, #0
   2ddd0:	uxtb	r3, r3
   2ddd4:	cmp	r3, #0
   2ddd8:	beq	2ddf0 <__assert_fail@plt+0x1c8ac>
   2dddc:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2dde0:	mov	r0, r3
   2dde4:	bl	151ec <__assert_fail@plt+0x3ca8>
   2dde8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2ddec:	b	2e1b0 <__assert_fail@plt+0x1cc6c>
   2ddf0:	sub	r2, fp, #72	; 0x48
   2ddf4:	sub	r0, fp, #60	; 0x3c
   2ddf8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2ddfc:	ldr	r1, [fp, #-20]	; 0xffffffec
   2de00:	bl	1c9ac <__assert_fail@plt+0xb468>
   2de04:	str	r0, [fp, #-16]
   2de08:	ldr	r3, [fp, #-16]
   2de0c:	cmp	r3, #0
   2de10:	moveq	r3, #1
   2de14:	movne	r3, #0
   2de18:	uxtb	r3, r3
   2de1c:	cmp	r3, #0
   2de20:	beq	2de54 <__assert_fail@plt+0x1c910>
   2de24:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2de28:	cmp	r3, #0
   2de2c:	movne	r3, #1
   2de30:	moveq	r3, #0
   2de34:	uxtb	r3, r3
   2de38:	cmp	r3, #0
   2de3c:	beq	2de54 <__assert_fail@plt+0x1c910>
   2de40:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2de44:	mov	r0, r3
   2de48:	bl	151ec <__assert_fail@plt+0x3ca8>
   2de4c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2de50:	b	2e1b0 <__assert_fail@plt+0x1cc6c>
   2de54:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2de58:	ldr	r2, [r3, #100]	; 0x64
   2de5c:	ldr	r3, [fp, #-8]
   2de60:	lsl	r3, r3, #2
   2de64:	add	r3, r2, r3
   2de68:	ldr	r2, [fp, #-16]
   2de6c:	str	r2, [r3]
   2de70:	mov	r3, #0
   2de74:	str	r3, [fp, #-12]
   2de78:	b	2e0e4 <__assert_fail@plt+0x1cba0>
   2de7c:	mov	r3, #0
   2de80:	str	r3, [fp, #-68]	; 0xffffffbc
   2de84:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2de88:	ldr	r2, [r3, #100]	; 0x64
   2de8c:	ldr	r3, [fp, #-8]
   2de90:	add	r3, r3, #1
   2de94:	lsl	r3, r3, #2
   2de98:	add	r3, r2, r3
   2de9c:	ldr	r3, [r3]
   2dea0:	cmp	r3, #0
   2dea4:	beq	2df10 <__assert_fail@plt+0x1c9cc>
   2dea8:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2deac:	ldr	r2, [r3, #100]	; 0x64
   2deb0:	ldr	r3, [fp, #-8]
   2deb4:	add	r3, r3, #1
   2deb8:	lsl	r3, r3, #2
   2debc:	add	r3, r2, r3
   2dec0:	ldr	r3, [r3]
   2dec4:	add	r2, r3, #4
   2dec8:	sub	r3, fp, #72	; 0x48
   2decc:	mov	r1, r2
   2ded0:	mov	r0, r3
   2ded4:	bl	1b994 <__assert_fail@plt+0xa450>
   2ded8:	mov	r3, r0
   2dedc:	str	r3, [fp, #-60]	; 0xffffffc4
   2dee0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2dee4:	cmp	r3, #0
   2dee8:	movne	r3, #1
   2deec:	moveq	r3, #0
   2def0:	uxtb	r3, r3
   2def4:	cmp	r3, #0
   2def8:	beq	2df10 <__assert_fail@plt+0x1c9cc>
   2defc:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2df00:	mov	r0, r3
   2df04:	bl	151ec <__assert_fail@plt+0x3ca8>
   2df08:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2df0c:	b	2e1b0 <__assert_fail@plt+0x1cc6c>
   2df10:	ldr	r3, [fp, #-16]
   2df14:	cmp	r3, #0
   2df18:	beq	2df6c <__assert_fail@plt+0x1ca28>
   2df1c:	ldr	r3, [fp, #-16]
   2df20:	add	r2, r3, #16
   2df24:	sub	r3, fp, #72	; 0x48
   2df28:	ldr	r1, [fp, #-8]
   2df2c:	ldr	r0, [fp, #-80]	; 0xffffffb0
   2df30:	bl	2e1c4 <__assert_fail@plt+0x1cc80>
   2df34:	mov	r3, r0
   2df38:	str	r3, [fp, #-60]	; 0xffffffc4
   2df3c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2df40:	cmp	r3, #0
   2df44:	movne	r3, #1
   2df48:	moveq	r3, #0
   2df4c:	uxtb	r3, r3
   2df50:	cmp	r3, #0
   2df54:	beq	2df6c <__assert_fail@plt+0x1ca28>
   2df58:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2df5c:	mov	r0, r3
   2df60:	bl	151ec <__assert_fail@plt+0x3ca8>
   2df64:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2df68:	b	2e1b0 <__assert_fail@plt+0x1cc6c>
   2df6c:	ldr	r3, [fp, #-8]
   2df70:	add	r3, r3, #1
   2df74:	str	r3, [fp, #-8]
   2df78:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2df7c:	cmp	r3, #0
   2df80:	beq	2e024 <__assert_fail@plt+0x1cae0>
   2df84:	sub	r1, fp, #72	; 0x48
   2df88:	ldr	r3, [fp, #12]
   2df8c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2df90:	ldr	r0, [fp, #-20]	; 0xffffffec
   2df94:	bl	2e500 <__assert_fail@plt+0x1cfbc>
   2df98:	mov	r3, r0
   2df9c:	str	r3, [fp, #-60]	; 0xffffffc4
   2dfa0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2dfa4:	cmp	r3, #0
   2dfa8:	movne	r3, #1
   2dfac:	moveq	r3, #0
   2dfb0:	uxtb	r3, r3
   2dfb4:	cmp	r3, #0
   2dfb8:	beq	2dfd0 <__assert_fail@plt+0x1ca8c>
   2dfbc:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2dfc0:	mov	r0, r3
   2dfc4:	bl	151ec <__assert_fail@plt+0x3ca8>
   2dfc8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2dfcc:	b	2e1b0 <__assert_fail@plt+0x1cc6c>
   2dfd0:	sub	r1, fp, #72	; 0x48
   2dfd4:	ldr	r3, [fp, #12]
   2dfd8:	str	r3, [sp]
   2dfdc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2dfe0:	ldr	r2, [fp, #-8]
   2dfe4:	ldr	r0, [fp, #-80]	; 0xffffffb0
   2dfe8:	bl	2e8e8 <__assert_fail@plt+0x1d3a4>
   2dfec:	mov	r3, r0
   2dff0:	str	r3, [fp, #-60]	; 0xffffffc4
   2dff4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2dff8:	cmp	r3, #0
   2dffc:	movne	r3, #1
   2e000:	moveq	r3, #0
   2e004:	uxtb	r3, r3
   2e008:	cmp	r3, #0
   2e00c:	beq	2e024 <__assert_fail@plt+0x1cae0>
   2e010:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2e014:	mov	r0, r3
   2e018:	bl	151ec <__assert_fail@plt+0x3ca8>
   2e01c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2e020:	b	2e1b0 <__assert_fail@plt+0x1cc6c>
   2e024:	ldr	r0, [fp, #-80]	; 0xffffffb0
   2e028:	ldr	r3, [fp, #-8]
   2e02c:	sub	r1, r3, #1
   2e030:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2e034:	ldr	r3, [r3, #88]	; 0x58
   2e038:	mov	r2, r3
   2e03c:	bl	1ac18 <__assert_fail@plt+0x96d4>
   2e040:	str	r0, [fp, #-52]	; 0xffffffcc
   2e044:	sub	r2, fp, #72	; 0x48
   2e048:	sub	r0, fp, #60	; 0x3c
   2e04c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2e050:	ldr	r1, [fp, #-20]	; 0xffffffec
   2e054:	bl	1c9ac <__assert_fail@plt+0xb468>
   2e058:	str	r0, [fp, #-16]
   2e05c:	ldr	r3, [fp, #-16]
   2e060:	cmp	r3, #0
   2e064:	moveq	r3, #1
   2e068:	movne	r3, #0
   2e06c:	uxtb	r3, r3
   2e070:	cmp	r3, #0
   2e074:	beq	2e0a8 <__assert_fail@plt+0x1cb64>
   2e078:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2e07c:	cmp	r3, #0
   2e080:	movne	r3, #1
   2e084:	moveq	r3, #0
   2e088:	uxtb	r3, r3
   2e08c:	cmp	r3, #0
   2e090:	beq	2e0a8 <__assert_fail@plt+0x1cb64>
   2e094:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2e098:	mov	r0, r3
   2e09c:	bl	151ec <__assert_fail@plt+0x3ca8>
   2e0a0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2e0a4:	b	2e1b0 <__assert_fail@plt+0x1cc6c>
   2e0a8:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2e0ac:	ldr	r2, [r3, #100]	; 0x64
   2e0b0:	ldr	r3, [fp, #-8]
   2e0b4:	lsl	r3, r3, #2
   2e0b8:	add	r3, r2, r3
   2e0bc:	ldr	r2, [fp, #-16]
   2e0c0:	str	r2, [r3]
   2e0c4:	ldr	r3, [fp, #-16]
   2e0c8:	cmp	r3, #0
   2e0cc:	bne	2e0dc <__assert_fail@plt+0x1cb98>
   2e0d0:	ldr	r3, [fp, #-12]
   2e0d4:	add	r3, r3, #1
   2e0d8:	b	2e0e0 <__assert_fail@plt+0x1cb9c>
   2e0dc:	mov	r3, #0
   2e0e0:	str	r3, [fp, #-12]
   2e0e4:	ldr	r2, [fp, #-8]
   2e0e8:	ldr	r3, [fp, #8]
   2e0ec:	cmp	r2, r3
   2e0f0:	bge	2e108 <__assert_fail@plt+0x1cbc4>
   2e0f4:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2e0f8:	ldr	r3, [r3, #120]	; 0x78
   2e0fc:	ldr	r2, [fp, #-12]
   2e100:	cmp	r2, r3
   2e104:	ble	2de7c <__assert_fail@plt+0x1c938>
   2e108:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2e10c:	mov	r0, r3
   2e110:	bl	151ec <__assert_fail@plt+0x3ca8>
   2e114:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2e118:	ldr	r2, [r3, #100]	; 0x64
   2e11c:	ldr	r3, [fp, #8]
   2e120:	lsl	r3, r3, #2
   2e124:	add	r3, r2, r3
   2e128:	ldr	r3, [r3]
   2e12c:	cmp	r3, #0
   2e130:	beq	2e154 <__assert_fail@plt+0x1cc10>
   2e134:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2e138:	ldr	r2, [r3, #100]	; 0x64
   2e13c:	ldr	r3, [fp, #8]
   2e140:	lsl	r3, r3, #2
   2e144:	add	r3, r2, r3
   2e148:	ldr	r3, [r3]
   2e14c:	add	r3, r3, #4
   2e150:	b	2e158 <__assert_fail@plt+0x1cc14>
   2e154:	mov	r3, #0
   2e158:	str	r3, [fp, #-56]	; 0xffffffc8
   2e15c:	ldr	r3, [fp, #-84]	; 0xffffffac
   2e160:	ldr	r2, [fp, #-8]
   2e164:	str	r2, [r3]
   2e168:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2e16c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   2e170:	str	r2, [r3, #100]	; 0x64
   2e174:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2e178:	ldr	r2, [fp, #-48]	; 0xffffffd0
   2e17c:	str	r2, [r3, #40]	; 0x28
   2e180:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2e184:	cmp	r3, #0
   2e188:	beq	2e1ac <__assert_fail@plt+0x1cc68>
   2e18c:	ldr	r1, [fp, #4]
   2e190:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2e194:	bl	1c21c <__assert_fail@plt+0xacd8>
   2e198:	mov	r3, r0
   2e19c:	cmp	r3, #0
   2e1a0:	beq	2e1ac <__assert_fail@plt+0x1cc68>
   2e1a4:	mov	r3, #0
   2e1a8:	b	2e1b0 <__assert_fail@plt+0x1cc6c>
   2e1ac:	mov	r3, #1
   2e1b0:	mov	r0, r3
   2e1b4:	sub	sp, fp, #4
   2e1b8:	ldr	fp, [sp]
   2e1bc:	add	sp, sp, #4
   2e1c0:	pop	{pc}		; (ldr pc, [sp], #4)
   2e1c4:	str	r4, [sp, #-12]!
   2e1c8:	str	fp, [sp, #4]
   2e1cc:	str	lr, [sp, #8]
   2e1d0:	add	fp, sp, #8
   2e1d4:	sub	sp, sp, #68	; 0x44
   2e1d8:	str	r0, [fp, #-64]	; 0xffffffc0
   2e1dc:	str	r1, [fp, #-68]	; 0xffffffbc
   2e1e0:	str	r2, [fp, #-72]	; 0xffffffb8
   2e1e4:	str	r3, [fp, #-76]	; 0xffffffb4
   2e1e8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2e1ec:	ldr	r3, [r3, #84]	; 0x54
   2e1f0:	str	r3, [fp, #-24]	; 0xffffffe8
   2e1f4:	mov	r3, #0
   2e1f8:	str	r3, [fp, #-48]	; 0xffffffd0
   2e1fc:	sub	r3, fp, #60	; 0x3c
   2e200:	mov	r2, #12
   2e204:	mov	r1, #0
   2e208:	mov	r0, r3
   2e20c:	bl	11448 <memset@plt>
   2e210:	mov	r3, #0
   2e214:	str	r3, [fp, #-16]
   2e218:	b	2e4c4 <__assert_fail@plt+0x1cf80>
   2e21c:	mov	r3, #0
   2e220:	str	r3, [fp, #-20]	; 0xffffffec
   2e224:	ldr	r3, [fp, #-72]	; 0xffffffb8
   2e228:	ldr	r2, [r3, #8]
   2e22c:	ldr	r3, [fp, #-16]
   2e230:	lsl	r3, r3, #2
   2e234:	add	r3, r2, r3
   2e238:	ldr	r3, [r3]
   2e23c:	str	r3, [fp, #-28]	; 0xffffffe4
   2e240:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e244:	ldr	r2, [r3]
   2e248:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2e24c:	lsl	r3, r3, #3
   2e250:	add	r3, r2, r3
   2e254:	ldrb	r3, [r3, #4]
   2e258:	and	r3, r3, #8
   2e25c:	cmp	r3, #0
   2e260:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e264:	ldr	r2, [r3]
   2e268:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2e26c:	lsl	r3, r3, #3
   2e270:	add	r3, r2, r3
   2e274:	ldrb	r3, [r3, #6]
   2e278:	and	r3, r3, #16
   2e27c:	uxtb	r3, r3
   2e280:	cmp	r3, #0
   2e284:	beq	2e428 <__assert_fail@plt+0x1cee4>
   2e288:	ldr	r2, [fp, #-64]	; 0xffffffc0
   2e28c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2e290:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2e294:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e298:	bl	30210 <__assert_fail@plt+0x1eccc>
   2e29c:	str	r0, [fp, #-20]	; 0xffffffec
   2e2a0:	ldr	r3, [fp, #-20]	; 0xffffffec
   2e2a4:	cmp	r3, #1
   2e2a8:	ble	2e428 <__assert_fail@plt+0x1cee4>
   2e2ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e2b0:	ldr	r2, [r3, #12]
   2e2b4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2e2b8:	lsl	r3, r3, #2
   2e2bc:	add	r3, r2, r3
   2e2c0:	ldr	r3, [r3]
   2e2c4:	str	r3, [fp, #-32]	; 0xffffffe0
   2e2c8:	ldr	r2, [fp, #-68]	; 0xffffffbc
   2e2cc:	ldr	r3, [fp, #-20]	; 0xffffffec
   2e2d0:	add	r3, r2, r3
   2e2d4:	str	r3, [fp, #-36]	; 0xffffffdc
   2e2d8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2e2dc:	ldr	r2, [r3, #100]	; 0x64
   2e2e0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2e2e4:	lsl	r3, r3, #2
   2e2e8:	add	r3, r2, r3
   2e2ec:	ldr	r3, [r3]
   2e2f0:	str	r3, [fp, #-40]	; 0xffffffd8
   2e2f4:	mov	r3, #0
   2e2f8:	str	r3, [fp, #-56]	; 0xffffffc8
   2e2fc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2e300:	cmp	r3, #0
   2e304:	beq	2e358 <__assert_fail@plt+0x1ce14>
   2e308:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2e30c:	add	r2, r3, #4
   2e310:	sub	r3, fp, #60	; 0x3c
   2e314:	mov	r1, r2
   2e318:	mov	r0, r3
   2e31c:	bl	1b994 <__assert_fail@plt+0xa450>
   2e320:	mov	r3, r0
   2e324:	str	r3, [fp, #-48]	; 0xffffffd0
   2e328:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2e32c:	cmp	r3, #0
   2e330:	movne	r3, #1
   2e334:	moveq	r3, #0
   2e338:	uxtb	r3, r3
   2e33c:	cmp	r3, #0
   2e340:	beq	2e358 <__assert_fail@plt+0x1ce14>
   2e344:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2e348:	mov	r0, r3
   2e34c:	bl	151ec <__assert_fail@plt+0x3ca8>
   2e350:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2e354:	b	2e4e8 <__assert_fail@plt+0x1cfa4>
   2e358:	sub	r3, fp, #60	; 0x3c
   2e35c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2e360:	mov	r0, r3
   2e364:	bl	1bdf4 <__assert_fail@plt+0xa8b0>
   2e368:	mov	r3, r0
   2e36c:	strb	r3, [fp, #-41]	; 0xffffffd7
   2e370:	ldrb	r3, [fp, #-41]	; 0xffffffd7
   2e374:	eor	r3, r3, #1
   2e378:	uxtb	r3, r3
   2e37c:	cmp	r3, #0
   2e380:	beq	2e398 <__assert_fail@plt+0x1ce54>
   2e384:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2e388:	mov	r0, r3
   2e38c:	bl	151ec <__assert_fail@plt+0x3ca8>
   2e390:	mov	r3, #12
   2e394:	b	2e4e8 <__assert_fail@plt+0x1cfa4>
   2e398:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2e39c:	ldr	r2, [r3, #100]	; 0x64
   2e3a0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2e3a4:	lsl	r3, r3, #2
   2e3a8:	add	r4, r2, r3
   2e3ac:	sub	r2, fp, #60	; 0x3c
   2e3b0:	sub	r3, fp, #48	; 0x30
   2e3b4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2e3b8:	mov	r0, r3
   2e3bc:	bl	1c834 <__assert_fail@plt+0xb2f0>
   2e3c0:	mov	r3, r0
   2e3c4:	str	r3, [r4]
   2e3c8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2e3cc:	ldr	r2, [r3, #100]	; 0x64
   2e3d0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2e3d4:	lsl	r3, r3, #2
   2e3d8:	add	r3, r2, r3
   2e3dc:	ldr	r3, [r3]
   2e3e0:	cmp	r3, #0
   2e3e4:	moveq	r3, #1
   2e3e8:	movne	r3, #0
   2e3ec:	uxtb	r3, r3
   2e3f0:	cmp	r3, #0
   2e3f4:	beq	2e428 <__assert_fail@plt+0x1cee4>
   2e3f8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2e3fc:	cmp	r3, #0
   2e400:	movne	r3, #1
   2e404:	moveq	r3, #0
   2e408:	uxtb	r3, r3
   2e40c:	cmp	r3, #0
   2e410:	beq	2e428 <__assert_fail@plt+0x1cee4>
   2e414:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2e418:	mov	r0, r3
   2e41c:	bl	151ec <__assert_fail@plt+0x3ca8>
   2e420:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2e424:	b	2e4e8 <__assert_fail@plt+0x1cfa4>
   2e428:	ldr	r3, [fp, #-20]	; 0xffffffec
   2e42c:	cmp	r3, #0
   2e430:	bne	2e464 <__assert_fail@plt+0x1cf20>
   2e434:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e438:	ldr	r2, [r3]
   2e43c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2e440:	lsl	r3, r3, #3
   2e444:	add	r3, r2, r3
   2e448:	ldr	r2, [fp, #-68]	; 0xffffffbc
   2e44c:	mov	r1, r3
   2e450:	ldr	r0, [fp, #-64]	; 0xffffffc0
   2e454:	bl	30780 <__assert_fail@plt+0x1f23c>
   2e458:	mov	r3, r0
   2e45c:	cmp	r3, #0
   2e460:	beq	2e4b8 <__assert_fail@plt+0x1cf74>
   2e464:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e468:	ldr	r2, [r3, #12]
   2e46c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2e470:	lsl	r3, r3, #2
   2e474:	add	r3, r2, r3
   2e478:	ldr	r3, [r3]
   2e47c:	mov	r1, r3
   2e480:	ldr	r0, [fp, #-76]	; 0xffffffb4
   2e484:	bl	1bdf4 <__assert_fail@plt+0xa8b0>
   2e488:	mov	r3, r0
   2e48c:	strb	r3, [fp, #-41]	; 0xffffffd7
   2e490:	ldrb	r3, [fp, #-41]	; 0xffffffd7
   2e494:	eor	r3, r3, #1
   2e498:	uxtb	r3, r3
   2e49c:	cmp	r3, #0
   2e4a0:	beq	2e4b8 <__assert_fail@plt+0x1cf74>
   2e4a4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2e4a8:	mov	r0, r3
   2e4ac:	bl	151ec <__assert_fail@plt+0x3ca8>
   2e4b0:	mov	r3, #12
   2e4b4:	b	2e4e8 <__assert_fail@plt+0x1cfa4>
   2e4b8:	ldr	r3, [fp, #-16]
   2e4bc:	add	r3, r3, #1
   2e4c0:	str	r3, [fp, #-16]
   2e4c4:	ldr	r3, [fp, #-72]	; 0xffffffb8
   2e4c8:	ldr	r3, [r3, #4]
   2e4cc:	ldr	r2, [fp, #-16]
   2e4d0:	cmp	r2, r3
   2e4d4:	blt	2e21c <__assert_fail@plt+0x1ccd8>
   2e4d8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2e4dc:	mov	r0, r3
   2e4e0:	bl	151ec <__assert_fail@plt+0x3ca8>
   2e4e4:	mov	r3, #0
   2e4e8:	mov	r0, r3
   2e4ec:	sub	sp, fp, #8
   2e4f0:	ldr	r4, [sp]
   2e4f4:	ldr	fp, [sp, #4]
   2e4f8:	add	sp, sp, #8
   2e4fc:	pop	{pc}		; (ldr pc, [sp], #4)
   2e500:	str	fp, [sp, #-8]!
   2e504:	str	lr, [sp, #4]
   2e508:	add	fp, sp, #4
   2e50c:	sub	sp, sp, #56	; 0x38
   2e510:	str	r0, [fp, #-40]	; 0xffffffd8
   2e514:	str	r1, [fp, #-44]	; 0xffffffd4
   2e518:	str	r2, [fp, #-48]	; 0xffffffd0
   2e51c:	str	r3, [fp, #-52]	; 0xffffffcc
   2e520:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2e524:	ldr	r3, [r3, #4]
   2e528:	cmp	r3, #0
   2e52c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2e530:	ldr	r2, [r3, #4]
   2e534:	sub	r3, fp, #36	; 0x24
   2e538:	mov	r1, r2
   2e53c:	mov	r0, r3
   2e540:	bl	1ae0c <__assert_fail@plt+0x98c8>
   2e544:	str	r0, [fp, #-12]
   2e548:	ldr	r3, [fp, #-12]
   2e54c:	cmp	r3, #0
   2e550:	movne	r3, #1
   2e554:	moveq	r3, #0
   2e558:	uxtb	r3, r3
   2e55c:	cmp	r3, #0
   2e560:	beq	2e56c <__assert_fail@plt+0x1d028>
   2e564:	ldr	r3, [fp, #-12]
   2e568:	b	2e6c0 <__assert_fail@plt+0x1d17c>
   2e56c:	mov	r3, #0
   2e570:	str	r3, [fp, #-8]
   2e574:	b	2e67c <__assert_fail@plt+0x1d138>
   2e578:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2e57c:	ldr	r2, [r3, #8]
   2e580:	ldr	r3, [fp, #-8]
   2e584:	lsl	r3, r3, #2
   2e588:	add	r3, r2, r3
   2e58c:	ldr	r3, [r3]
   2e590:	str	r3, [fp, #-16]
   2e594:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2e598:	ldr	r1, [r3, #24]
   2e59c:	ldr	r2, [fp, #-16]
   2e5a0:	mov	r3, r2
   2e5a4:	lsl	r3, r3, #1
   2e5a8:	add	r3, r3, r2
   2e5ac:	lsl	r3, r3, #2
   2e5b0:	add	r3, r1, r3
   2e5b4:	str	r3, [fp, #-20]	; 0xffffffec
   2e5b8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2e5bc:	ldr	r2, [fp, #-48]	; 0xffffffd0
   2e5c0:	ldr	r1, [fp, #-20]	; 0xffffffec
   2e5c4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2e5c8:	bl	2d950 <__assert_fail@plt+0x1c40c>
   2e5cc:	str	r0, [fp, #-24]	; 0xffffffe8
   2e5d0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e5d4:	cmn	r3, #1
   2e5d8:	bne	2e620 <__assert_fail@plt+0x1d0dc>
   2e5dc:	sub	r3, fp, #36	; 0x24
   2e5e0:	ldr	r1, [fp, #-20]	; 0xffffffec
   2e5e4:	mov	r0, r3
   2e5e8:	bl	1b994 <__assert_fail@plt+0xa450>
   2e5ec:	str	r0, [fp, #-12]
   2e5f0:	ldr	r3, [fp, #-12]
   2e5f4:	cmp	r3, #0
   2e5f8:	movne	r3, #1
   2e5fc:	moveq	r3, #0
   2e600:	uxtb	r3, r3
   2e604:	cmp	r3, #0
   2e608:	beq	2e670 <__assert_fail@plt+0x1d12c>
   2e60c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2e610:	mov	r0, r3
   2e614:	bl	151ec <__assert_fail@plt+0x3ca8>
   2e618:	ldr	r3, [fp, #-12]
   2e61c:	b	2e6c0 <__assert_fail@plt+0x1d17c>
   2e620:	sub	r1, fp, #36	; 0x24
   2e624:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2e628:	str	r3, [sp]
   2e62c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2e630:	ldr	r2, [fp, #-16]
   2e634:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2e638:	bl	2e6d4 <__assert_fail@plt+0x1d190>
   2e63c:	str	r0, [fp, #-12]
   2e640:	ldr	r3, [fp, #-12]
   2e644:	cmp	r3, #0
   2e648:	movne	r3, #1
   2e64c:	moveq	r3, #0
   2e650:	uxtb	r3, r3
   2e654:	cmp	r3, #0
   2e658:	beq	2e670 <__assert_fail@plt+0x1d12c>
   2e65c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2e660:	mov	r0, r3
   2e664:	bl	151ec <__assert_fail@plt+0x3ca8>
   2e668:	ldr	r3, [fp, #-12]
   2e66c:	b	2e6c0 <__assert_fail@plt+0x1d17c>
   2e670:	ldr	r3, [fp, #-8]
   2e674:	add	r3, r3, #1
   2e678:	str	r3, [fp, #-8]
   2e67c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2e680:	ldr	r3, [r3, #4]
   2e684:	ldr	r2, [fp, #-8]
   2e688:	cmp	r2, r3
   2e68c:	blt	2e578 <__assert_fail@plt+0x1d034>
   2e690:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2e694:	ldr	r3, [r3, #8]
   2e698:	mov	r0, r3
   2e69c:	bl	151ec <__assert_fail@plt+0x3ca8>
   2e6a0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2e6a4:	mov	r0, r3
   2e6a8:	sub	r1, fp, #36	; 0x24
   2e6ac:	ldrd	r2, [r1]
   2e6b0:	strd	r2, [r0]
   2e6b4:	ldr	r3, [r1, #8]
   2e6b8:	str	r3, [r0, #8]
   2e6bc:	mov	r3, #0
   2e6c0:	mov	r0, r3
   2e6c4:	sub	sp, fp, #4
   2e6c8:	ldr	fp, [sp]
   2e6cc:	add	sp, sp, #4
   2e6d0:	pop	{pc}		; (ldr pc, [sp], #4)
   2e6d4:	str	fp, [sp, #-8]!
   2e6d8:	str	lr, [sp, #4]
   2e6dc:	add	fp, sp, #4
   2e6e0:	sub	sp, sp, #40	; 0x28
   2e6e4:	str	r0, [fp, #-24]	; 0xffffffe8
   2e6e8:	str	r1, [fp, #-28]	; 0xffffffe4
   2e6ec:	str	r2, [fp, #-32]	; 0xffffffe0
   2e6f0:	str	r3, [fp, #-36]	; 0xffffffdc
   2e6f4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2e6f8:	str	r3, [fp, #-8]
   2e6fc:	b	2e8a8 <__assert_fail@plt+0x1d364>
   2e700:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e704:	ldr	r2, [r3]
   2e708:	ldr	r3, [fp, #-8]
   2e70c:	lsl	r3, r3, #3
   2e710:	add	r3, r2, r3
   2e714:	ldrb	r3, [r3, #4]
   2e718:	mov	r2, r3
   2e71c:	ldr	r3, [fp, #4]
   2e720:	cmp	r3, r2
   2e724:	bne	2e788 <__assert_fail@plt+0x1d244>
   2e728:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e72c:	ldr	r2, [r3]
   2e730:	ldr	r3, [fp, #-8]
   2e734:	lsl	r3, r3, #3
   2e738:	add	r3, r2, r3
   2e73c:	ldr	r3, [r3]
   2e740:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2e744:	cmp	r2, r3
   2e748:	bne	2e788 <__assert_fail@plt+0x1d244>
   2e74c:	ldr	r3, [fp, #4]
   2e750:	cmp	r3, #9
   2e754:	bne	2e8c4 <__assert_fail@plt+0x1d380>
   2e758:	ldr	r1, [fp, #-8]
   2e75c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2e760:	bl	1bdf4 <__assert_fail@plt+0xa8b0>
   2e764:	mov	r3, r0
   2e768:	strb	r3, [fp, #-9]
   2e76c:	ldrb	r3, [fp, #-9]
   2e770:	eor	r3, r3, #1
   2e774:	uxtb	r3, r3
   2e778:	cmp	r3, #0
   2e77c:	beq	2e8c4 <__assert_fail@plt+0x1d380>
   2e780:	mov	r3, #12
   2e784:	b	2e8d4 <__assert_fail@plt+0x1d390>
   2e788:	ldr	r1, [fp, #-8]
   2e78c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2e790:	bl	1bdf4 <__assert_fail@plt+0xa8b0>
   2e794:	mov	r3, r0
   2e798:	strb	r3, [fp, #-9]
   2e79c:	ldrb	r3, [fp, #-9]
   2e7a0:	eor	r3, r3, #1
   2e7a4:	uxtb	r3, r3
   2e7a8:	cmp	r3, #0
   2e7ac:	beq	2e7b8 <__assert_fail@plt+0x1d274>
   2e7b0:	mov	r3, #12
   2e7b4:	b	2e8d4 <__assert_fail@plt+0x1d390>
   2e7b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e7bc:	ldr	r1, [r3, #20]
   2e7c0:	ldr	r2, [fp, #-8]
   2e7c4:	mov	r3, r2
   2e7c8:	lsl	r3, r3, #1
   2e7cc:	add	r3, r3, r2
   2e7d0:	lsl	r3, r3, #2
   2e7d4:	add	r3, r1, r3
   2e7d8:	ldr	r3, [r3, #4]
   2e7dc:	cmp	r3, #0
   2e7e0:	beq	2e8cc <__assert_fail@plt+0x1d388>
   2e7e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e7e8:	ldr	r1, [r3, #20]
   2e7ec:	ldr	r2, [fp, #-8]
   2e7f0:	mov	r3, r2
   2e7f4:	lsl	r3, r3, #1
   2e7f8:	add	r3, r3, r2
   2e7fc:	lsl	r3, r3, #2
   2e800:	add	r3, r1, r3
   2e804:	ldr	r3, [r3, #4]
   2e808:	cmp	r3, #2
   2e80c:	bne	2e87c <__assert_fail@plt+0x1d338>
   2e810:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e814:	ldr	r1, [r3, #20]
   2e818:	ldr	r2, [fp, #-8]
   2e81c:	mov	r3, r2
   2e820:	lsl	r3, r3, #1
   2e824:	add	r3, r3, r2
   2e828:	lsl	r3, r3, #2
   2e82c:	add	r3, r1, r3
   2e830:	ldr	r3, [r3, #8]
   2e834:	add	r3, r3, #4
   2e838:	ldr	r2, [r3]
   2e83c:	ldr	r3, [fp, #4]
   2e840:	str	r3, [sp]
   2e844:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2e848:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2e84c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e850:	bl	2e6d4 <__assert_fail@plt+0x1d190>
   2e854:	str	r0, [fp, #-16]
   2e858:	ldr	r3, [fp, #-16]
   2e85c:	cmp	r3, #0
   2e860:	movne	r3, #1
   2e864:	moveq	r3, #0
   2e868:	uxtb	r3, r3
   2e86c:	cmp	r3, #0
   2e870:	beq	2e87c <__assert_fail@plt+0x1d338>
   2e874:	ldr	r3, [fp, #-16]
   2e878:	b	2e8d4 <__assert_fail@plt+0x1d390>
   2e87c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e880:	ldr	r1, [r3, #20]
   2e884:	ldr	r2, [fp, #-8]
   2e888:	mov	r3, r2
   2e88c:	lsl	r3, r3, #1
   2e890:	add	r3, r3, r2
   2e894:	lsl	r3, r3, #2
   2e898:	add	r3, r1, r3
   2e89c:	ldr	r3, [r3, #8]
   2e8a0:	ldr	r3, [r3]
   2e8a4:	str	r3, [fp, #-8]
   2e8a8:	ldr	r1, [fp, #-8]
   2e8ac:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2e8b0:	bl	1c21c <__assert_fail@plt+0xacd8>
   2e8b4:	mov	r3, r0
   2e8b8:	cmp	r3, #0
   2e8bc:	beq	2e700 <__assert_fail@plt+0x1d1bc>
   2e8c0:	b	2e8d0 <__assert_fail@plt+0x1d38c>
   2e8c4:	nop	{0}
   2e8c8:	b	2e8d0 <__assert_fail@plt+0x1d38c>
   2e8cc:	nop	{0}
   2e8d0:	mov	r3, #0
   2e8d4:	mov	r0, r3
   2e8d8:	sub	sp, fp, #4
   2e8dc:	ldr	fp, [sp]
   2e8e0:	add	sp, sp, #4
   2e8e4:	pop	{pc}		; (ldr pc, [sp], #4)
   2e8e8:	str	r4, [sp, #-12]!
   2e8ec:	str	fp, [sp, #4]
   2e8f0:	str	lr, [sp, #8]
   2e8f4:	add	fp, sp, #8
   2e8f8:	sub	sp, sp, #84	; 0x54
   2e8fc:	str	r0, [fp, #-80]	; 0xffffffb0
   2e900:	str	r1, [fp, #-84]	; 0xffffffac
   2e904:	str	r2, [fp, #-88]	; 0xffffffa8
   2e908:	str	r3, [fp, #-92]	; 0xffffffa4
   2e90c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2e910:	ldr	r3, [r3, #84]	; 0x54
   2e914:	str	r3, [fp, #-20]	; 0xffffffec
   2e918:	ldr	r1, [fp, #-88]	; 0xffffffa8
   2e91c:	ldr	r0, [fp, #-80]	; 0xffffffb0
   2e920:	bl	3117c <__assert_fail@plt+0x1fc38>
   2e924:	str	r0, [fp, #-24]	; 0xffffffe8
   2e928:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e92c:	cmn	r3, #1
   2e930:	bne	2e93c <__assert_fail@plt+0x1d3f8>
   2e934:	mov	r3, #0
   2e938:	b	2ed0c <__assert_fail@plt+0x1d7c8>
   2e93c:	nop	{0}
   2e940:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2e944:	ldr	r1, [r3, #116]	; 0x74
   2e948:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2e94c:	mov	r3, r2
   2e950:	lsl	r3, r3, #1
   2e954:	add	r3, r3, r2
   2e958:	lsl	r3, r3, #3
   2e95c:	add	r3, r1, r3
   2e960:	str	r3, [fp, #-16]
   2e964:	ldr	r3, [fp, #-16]
   2e968:	ldr	r3, [r3]
   2e96c:	mov	r1, r3
   2e970:	ldr	r0, [fp, #-84]	; 0xffffffac
   2e974:	bl	1c21c <__assert_fail@plt+0xacd8>
   2e978:	mov	r3, r0
   2e97c:	cmp	r3, #0
   2e980:	beq	2ecdc <__assert_fail@plt+0x1d798>
   2e984:	ldr	r3, [fp, #-16]
   2e988:	ldr	r2, [r3, #12]
   2e98c:	ldr	r3, [fp, #-88]	; 0xffffffa8
   2e990:	add	r2, r2, r3
   2e994:	ldr	r3, [fp, #-16]
   2e998:	ldr	r3, [r3, #8]
   2e99c:	sub	r3, r2, r3
   2e9a0:	str	r3, [fp, #-28]	; 0xffffffe4
   2e9a4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2e9a8:	ldr	r3, [fp, #-88]	; 0xffffffa8
   2e9ac:	cmp	r2, r3
   2e9b0:	bne	2eaf0 <__assert_fail@plt+0x1d5ac>
   2e9b4:	ldr	r3, [fp, #-20]	; 0xffffffec
   2e9b8:	ldr	r2, [r3, #20]
   2e9bc:	ldr	r3, [fp, #-16]
   2e9c0:	ldr	r3, [r3]
   2e9c4:	mov	r1, r3
   2e9c8:	mov	r3, r1
   2e9cc:	lsl	r3, r3, #1
   2e9d0:	add	r3, r3, r1
   2e9d4:	lsl	r3, r3, #2
   2e9d8:	add	r3, r2, r3
   2e9dc:	ldr	r3, [r3, #8]
   2e9e0:	ldr	r3, [r3]
   2e9e4:	str	r3, [fp, #-32]	; 0xffffffe0
   2e9e8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2e9ec:	ldr	r0, [fp, #-84]	; 0xffffffac
   2e9f0:	bl	1c21c <__assert_fail@plt+0xacd8>
   2e9f4:	mov	r3, r0
   2e9f8:	cmp	r3, #0
   2e9fc:	bne	2ece4 <__assert_fail@plt+0x1d7a0>
   2ea00:	sub	r3, fp, #60	; 0x3c
   2ea04:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2ea08:	mov	r0, r3
   2ea0c:	bl	1ae9c <__assert_fail@plt+0x9958>
   2ea10:	mov	r3, r0
   2ea14:	str	r3, [fp, #-48]	; 0xffffffd0
   2ea18:	sub	r1, fp, #60	; 0x3c
   2ea1c:	ldr	r3, [fp, #4]
   2ea20:	ldr	r2, [fp, #-92]	; 0xffffffa4
   2ea24:	ldr	r0, [fp, #-20]	; 0xffffffec
   2ea28:	bl	2e500 <__assert_fail@plt+0x1cfbc>
   2ea2c:	str	r0, [fp, #-36]	; 0xffffffdc
   2ea30:	sub	r3, fp, #60	; 0x3c
   2ea34:	mov	r1, r3
   2ea38:	ldr	r0, [fp, #-84]	; 0xffffffac
   2ea3c:	bl	1b994 <__assert_fail@plt+0xa450>
   2ea40:	str	r0, [fp, #-40]	; 0xffffffd8
   2ea44:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2ea48:	mov	r0, r3
   2ea4c:	bl	151ec <__assert_fail@plt+0x3ca8>
   2ea50:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2ea54:	cmp	r3, #0
   2ea58:	movne	r3, #1
   2ea5c:	moveq	r3, #0
   2ea60:	uxtb	r3, r3
   2ea64:	cmp	r3, #0
   2ea68:	bne	2ea88 <__assert_fail@plt+0x1d544>
   2ea6c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2ea70:	cmp	r3, #0
   2ea74:	movne	r3, #1
   2ea78:	moveq	r3, #0
   2ea7c:	uxtb	r3, r3
   2ea80:	cmp	r3, #0
   2ea84:	beq	2ea90 <__assert_fail@plt+0x1d54c>
   2ea88:	mov	r3, #1
   2ea8c:	b	2ea94 <__assert_fail@plt+0x1d550>
   2ea90:	mov	r3, #0
   2ea94:	cmp	r3, #0
   2ea98:	bne	2eab8 <__assert_fail@plt+0x1d574>
   2ea9c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2eaa0:	cmp	r3, #0
   2eaa4:	movne	r3, #1
   2eaa8:	moveq	r3, #0
   2eaac:	uxtb	r3, r3
   2eab0:	cmp	r3, #0
   2eab4:	beq	2e940 <__assert_fail@plt+0x1d3fc>
   2eab8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2eabc:	cmp	r3, #0
   2eac0:	bne	2eae0 <__assert_fail@plt+0x1d59c>
   2eac4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2eac8:	cmp	r3, #0
   2eacc:	beq	2ead8 <__assert_fail@plt+0x1d594>
   2ead0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2ead4:	b	2eae4 <__assert_fail@plt+0x1d5a0>
   2ead8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2eadc:	b	2eae4 <__assert_fail@plt+0x1d5a0>
   2eae0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2eae4:	str	r3, [fp, #-48]	; 0xffffffd0
   2eae8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2eaec:	b	2ed0c <__assert_fail@plt+0x1d7c8>
   2eaf0:	ldr	r3, [fp, #-20]	; 0xffffffec
   2eaf4:	ldr	r2, [r3, #12]
   2eaf8:	ldr	r3, [fp, #-16]
   2eafc:	ldr	r3, [r3]
   2eb00:	lsl	r3, r3, #2
   2eb04:	add	r3, r2, r3
   2eb08:	ldr	r3, [r3]
   2eb0c:	str	r3, [fp, #-32]	; 0xffffffe0
   2eb10:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2eb14:	ldr	r2, [r3, #100]	; 0x64
   2eb18:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2eb1c:	lsl	r3, r3, #2
   2eb20:	add	r3, r2, r3
   2eb24:	ldr	r3, [r3]
   2eb28:	cmp	r3, #0
   2eb2c:	beq	2ec10 <__assert_fail@plt+0x1d6cc>
   2eb30:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2eb34:	ldr	r2, [r3, #100]	; 0x64
   2eb38:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2eb3c:	lsl	r3, r3, #2
   2eb40:	add	r3, r2, r3
   2eb44:	ldr	r3, [r3]
   2eb48:	add	r3, r3, #4
   2eb4c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2eb50:	mov	r0, r3
   2eb54:	bl	1c21c <__assert_fail@plt+0xacd8>
   2eb58:	mov	r3, r0
   2eb5c:	cmp	r3, #0
   2eb60:	bne	2ecec <__assert_fail@plt+0x1d7a8>
   2eb64:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2eb68:	ldr	r2, [r3, #100]	; 0x64
   2eb6c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2eb70:	lsl	r3, r3, #2
   2eb74:	add	r3, r2, r3
   2eb78:	ldr	r3, [r3]
   2eb7c:	add	r2, r3, #4
   2eb80:	sub	r3, fp, #72	; 0x48
   2eb84:	mov	r1, r2
   2eb88:	mov	r0, r3
   2eb8c:	bl	1b068 <__assert_fail@plt+0x9b24>
   2eb90:	mov	r3, r0
   2eb94:	str	r3, [fp, #-48]	; 0xffffffd0
   2eb98:	sub	r3, fp, #72	; 0x48
   2eb9c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2eba0:	mov	r0, r3
   2eba4:	bl	1bdf4 <__assert_fail@plt+0xa8b0>
   2eba8:	mov	r3, r0
   2ebac:	strb	r3, [fp, #-41]	; 0xffffffd7
   2ebb0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2ebb4:	cmp	r3, #0
   2ebb8:	movne	r3, #1
   2ebbc:	moveq	r3, #0
   2ebc0:	uxtb	r3, r3
   2ebc4:	cmp	r3, #0
   2ebc8:	bne	2ebe0 <__assert_fail@plt+0x1d69c>
   2ebcc:	ldrb	r3, [fp, #-41]	; 0xffffffd7
   2ebd0:	eor	r3, r3, #1
   2ebd4:	uxtb	r3, r3
   2ebd8:	cmp	r3, #0
   2ebdc:	beq	2ec4c <__assert_fail@plt+0x1d708>
   2ebe0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2ebe4:	mov	r0, r3
   2ebe8:	bl	151ec <__assert_fail@plt+0x3ca8>
   2ebec:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2ebf0:	cmp	r3, #0
   2ebf4:	beq	2ec00 <__assert_fail@plt+0x1d6bc>
   2ebf8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2ebfc:	b	2ec04 <__assert_fail@plt+0x1d6c0>
   2ec00:	mov	r3, #12
   2ec04:	str	r3, [fp, #-48]	; 0xffffffd0
   2ec08:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2ec0c:	b	2ed0c <__assert_fail@plt+0x1d7c8>
   2ec10:	sub	r3, fp, #72	; 0x48
   2ec14:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2ec18:	mov	r0, r3
   2ec1c:	bl	1ae9c <__assert_fail@plt+0x9958>
   2ec20:	mov	r3, r0
   2ec24:	str	r3, [fp, #-48]	; 0xffffffd0
   2ec28:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2ec2c:	cmp	r3, #0
   2ec30:	movne	r3, #1
   2ec34:	moveq	r3, #0
   2ec38:	uxtb	r3, r3
   2ec3c:	cmp	r3, #0
   2ec40:	beq	2ec4c <__assert_fail@plt+0x1d708>
   2ec44:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2ec48:	b	2ed0c <__assert_fail@plt+0x1d7c8>
   2ec4c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2ec50:	ldr	r2, [r3, #100]	; 0x64
   2ec54:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2ec58:	lsl	r3, r3, #2
   2ec5c:	add	r4, r2, r3
   2ec60:	sub	r2, fp, #72	; 0x48
   2ec64:	sub	r3, fp, #48	; 0x30
   2ec68:	ldr	r1, [fp, #-20]	; 0xffffffec
   2ec6c:	mov	r0, r3
   2ec70:	bl	1c834 <__assert_fail@plt+0xb2f0>
   2ec74:	mov	r3, r0
   2ec78:	str	r3, [r4]
   2ec7c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2ec80:	mov	r0, r3
   2ec84:	bl	151ec <__assert_fail@plt+0x3ca8>
   2ec88:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2ec8c:	ldr	r2, [r3, #100]	; 0x64
   2ec90:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2ec94:	lsl	r3, r3, #2
   2ec98:	add	r3, r2, r3
   2ec9c:	ldr	r3, [r3]
   2eca0:	cmp	r3, #0
   2eca4:	moveq	r3, #1
   2eca8:	movne	r3, #0
   2ecac:	uxtb	r3, r3
   2ecb0:	cmp	r3, #0
   2ecb4:	beq	2ecf0 <__assert_fail@plt+0x1d7ac>
   2ecb8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2ecbc:	cmp	r3, #0
   2ecc0:	movne	r3, #1
   2ecc4:	moveq	r3, #0
   2ecc8:	uxtb	r3, r3
   2eccc:	cmp	r3, #0
   2ecd0:	beq	2ecf0 <__assert_fail@plt+0x1d7ac>
   2ecd4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2ecd8:	b	2ed0c <__assert_fail@plt+0x1d7c8>
   2ecdc:	nop	{0}
   2ece0:	b	2ecf0 <__assert_fail@plt+0x1d7ac>
   2ece4:	nop	{0}
   2ece8:	b	2ecf0 <__assert_fail@plt+0x1d7ac>
   2ecec:	nop	{0}
   2ecf0:	ldr	r3, [fp, #-16]
   2ecf4:	add	r2, r3, #24
   2ecf8:	str	r2, [fp, #-16]
   2ecfc:	ldrb	r3, [r3, #20]
   2ed00:	cmp	r3, #0
   2ed04:	bne	2e964 <__assert_fail@plt+0x1d420>
   2ed08:	mov	r3, #0
   2ed0c:	mov	r0, r3
   2ed10:	sub	sp, fp, #8
   2ed14:	ldr	r4, [sp]
   2ed18:	ldr	fp, [sp, #4]
   2ed1c:	add	sp, sp, #8
   2ed20:	pop	{pc}		; (ldr pc, [sp], #4)
   2ed24:	str	fp, [sp, #-8]!
   2ed28:	str	lr, [sp, #4]
   2ed2c:	add	fp, sp, #4
   2ed30:	sub	sp, sp, #14400	; 0x3840
   2ed34:	sub	sp, sp, #32
   2ed38:	sub	r3, fp, #12288	; 0x3000
   2ed3c:	sub	r3, r3, #4
   2ed40:	str	r0, [r3, #-2140]	; 0xfffff7a4
   2ed44:	sub	r3, fp, #12288	; 0x3000
   2ed48:	sub	r3, r3, #4
   2ed4c:	str	r1, [r3, #-2144]	; 0xfffff7a0
   2ed50:	mov	r3, #0
   2ed54:	strb	r3, [fp, #-17]	; 0xffffffef
   2ed58:	sub	r3, fp, #12288	; 0x3000
   2ed5c:	sub	r3, r3, #4
   2ed60:	ldr	r3, [r3, #-2144]	; 0xfffff7a0
   2ed64:	mov	r2, #0
   2ed68:	str	r2, [r3, #44]	; 0x2c
   2ed6c:	sub	r3, fp, #12288	; 0x3000
   2ed70:	sub	r3, r3, #4
   2ed74:	ldr	r3, [r3, #-2144]	; 0xfffff7a0
   2ed78:	ldr	r2, [r3, #44]	; 0x2c
   2ed7c:	sub	r3, fp, #12288	; 0x3000
   2ed80:	sub	r3, r3, #4
   2ed84:	ldr	r3, [r3, #-2144]	; 0xfffff7a0
   2ed88:	str	r2, [r3, #48]	; 0x30
   2ed8c:	sub	r3, fp, #14400	; 0x3840
   2ed90:	sub	r3, r3, #4
   2ed94:	sub	r3, r3, #20
   2ed98:	sub	r2, fp, #6208	; 0x1840
   2ed9c:	sub	r2, r2, #4
   2eda0:	sub	r2, r2, #20
   2eda4:	sub	r1, fp, #12288	; 0x3000
   2eda8:	sub	r1, r1, #4
   2edac:	sub	r0, fp, #12288	; 0x3000
   2edb0:	sub	r0, r0, #4
   2edb4:	ldr	r1, [r1, #-2144]	; 0xfffff7a0
   2edb8:	ldr	r0, [r0, #-2140]	; 0xfffff7a4
   2edbc:	bl	2f7d0 <__assert_fail@plt+0x1e28c>
   2edc0:	str	r0, [fp, #-36]	; 0xffffffdc
   2edc4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2edc8:	cmp	r3, #0
   2edcc:	movle	r3, #1
   2edd0:	movgt	r3, #0
   2edd4:	uxtb	r3, r3
   2edd8:	cmp	r3, #0
   2eddc:	beq	2ee50 <__assert_fail@plt+0x1d90c>
   2ede0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2ede4:	cmp	r3, #0
   2ede8:	bne	2ee48 <__assert_fail@plt+0x1d904>
   2edec:	mov	r1, #256	; 0x100
   2edf0:	mov	r0, #4
   2edf4:	bl	33ad0 <__assert_fail@plt+0x2258c>
   2edf8:	mov	r3, r0
   2edfc:	mov	r2, r3
   2ee00:	sub	r3, fp, #12288	; 0x3000
   2ee04:	sub	r3, r3, #4
   2ee08:	ldr	r3, [r3, #-2144]	; 0xfffff7a0
   2ee0c:	str	r2, [r3, #44]	; 0x2c
   2ee10:	sub	r3, fp, #12288	; 0x3000
   2ee14:	sub	r3, r3, #4
   2ee18:	ldr	r3, [r3, #-2144]	; 0xfffff7a0
   2ee1c:	ldr	r3, [r3, #44]	; 0x2c
   2ee20:	cmp	r3, #0
   2ee24:	moveq	r3, #1
   2ee28:	movne	r3, #0
   2ee2c:	uxtb	r3, r3
   2ee30:	cmp	r3, #0
   2ee34:	beq	2ee40 <__assert_fail@plt+0x1d8fc>
   2ee38:	mov	r3, #0
   2ee3c:	b	2f7bc <__assert_fail@plt+0x1e278>
   2ee40:	mov	r3, #1
   2ee44:	b	2f7bc <__assert_fail@plt+0x1e278>
   2ee48:	mov	r3, #0
   2ee4c:	b	2f7bc <__assert_fail@plt+0x1e278>
   2ee50:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2ee54:	add	r2, r3, #1
   2ee58:	sub	r3, fp, #3120	; 0xc30
   2ee5c:	sub	r3, r3, #4
   2ee60:	sub	r3, r3, #4
   2ee64:	mov	r1, r2
   2ee68:	mov	r0, r3
   2ee6c:	bl	1ae0c <__assert_fail@plt+0x98c8>
   2ee70:	mov	r3, r0
   2ee74:	str	r3, [fp, #-44]	; 0xffffffd4
   2ee78:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2ee7c:	cmp	r3, #0
   2ee80:	movne	r3, #1
   2ee84:	moveq	r3, #0
   2ee88:	uxtb	r3, r3
   2ee8c:	cmp	r3, #0
   2ee90:	beq	2ef30 <__assert_fail@plt+0x1d9ec>
   2ee94:	nop	{0}
   2ee98:	b	2eec0 <__assert_fail@plt+0x1d97c>
   2ee9c:	nop	{0}
   2eea0:	b	2eec0 <__assert_fail@plt+0x1d97c>
   2eea4:	nop	{0}
   2eea8:	b	2eec0 <__assert_fail@plt+0x1d97c>
   2eeac:	nop	{0}
   2eeb0:	b	2eec0 <__assert_fail@plt+0x1d97c>
   2eeb4:	nop	{0}
   2eeb8:	b	2eec0 <__assert_fail@plt+0x1d97c>
   2eebc:	nop	{0}
   2eec0:	ldr	r3, [fp, #-3120]	; 0xfffff3d0
   2eec4:	mov	r0, r3
   2eec8:	bl	151ec <__assert_fail@plt+0x3ca8>
   2eecc:	mov	r3, #0
   2eed0:	str	r3, [fp, #-8]
   2eed4:	b	2ef18 <__assert_fail@plt+0x1d9d4>
   2eed8:	ldr	r2, [fp, #-8]
   2eedc:	mov	r3, r2
   2eee0:	lsl	r3, r3, #1
   2eee4:	add	r3, r3, r2
   2eee8:	lsl	r3, r3, #2
   2eeec:	mov	r2, r3
   2eef0:	sub	r3, fp, #6208	; 0x1840
   2eef4:	sub	r3, r3, #4
   2eef8:	sub	r3, r3, #20
   2eefc:	add	r3, r3, r2
   2ef00:	ldr	r3, [r3, #8]
   2ef04:	mov	r0, r3
   2ef08:	bl	151ec <__assert_fail@plt+0x3ca8>
   2ef0c:	ldr	r3, [fp, #-8]
   2ef10:	add	r3, r3, #1
   2ef14:	str	r3, [fp, #-8]
   2ef18:	ldr	r2, [fp, #-8]
   2ef1c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2ef20:	cmp	r2, r3
   2ef24:	blt	2eed8 <__assert_fail@plt+0x1d994>
   2ef28:	mov	r3, #0
   2ef2c:	b	2f7bc <__assert_fail@plt+0x1e278>
   2ef30:	sub	r3, fp, #3152	; 0xc50
   2ef34:	sub	r3, r3, #4
   2ef38:	sub	r3, r3, #4
   2ef3c:	mov	r0, r3
   2ef40:	bl	17fe4 <__assert_fail@plt+0x6aa0>
   2ef44:	mov	r3, #0
   2ef48:	str	r3, [fp, #-8]
   2ef4c:	b	2f318 <__assert_fail@plt+0x1ddd4>
   2ef50:	mov	r3, #0
   2ef54:	str	r3, [fp, #-3124]	; 0xfffff3cc
   2ef58:	mov	r3, #0
   2ef5c:	str	r3, [fp, #-12]
   2ef60:	b	2f040 <__assert_fail@plt+0x1dafc>
   2ef64:	sub	r3, fp, #12288	; 0x3000
   2ef68:	sub	r3, r3, #4
   2ef6c:	ldr	r3, [r3, #-2140]	; 0xfffff7a4
   2ef70:	ldr	r1, [r3, #12]
   2ef74:	sub	r3, fp, #4096	; 0x1000
   2ef78:	sub	r3, r3, #4
   2ef7c:	mov	r0, r3
   2ef80:	ldr	r2, [fp, #-8]
   2ef84:	mov	r3, r2
   2ef88:	lsl	r3, r3, #1
   2ef8c:	add	r3, r3, r2
   2ef90:	lsl	r3, r3, #2
   2ef94:	add	r3, r0, r3
   2ef98:	sub	r3, r3, #2112	; 0x840
   2ef9c:	sub	r3, r3, #12
   2efa0:	ldr	r2, [r3]
   2efa4:	ldr	r3, [fp, #-12]
   2efa8:	lsl	r3, r3, #2
   2efac:	add	r3, r2, r3
   2efb0:	ldr	r3, [r3]
   2efb4:	lsl	r3, r3, #2
   2efb8:	add	r3, r1, r3
   2efbc:	ldr	r3, [r3]
   2efc0:	str	r3, [fp, #-40]	; 0xffffffd8
   2efc4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2efc8:	cmn	r3, #1
   2efcc:	beq	2f034 <__assert_fail@plt+0x1daf0>
   2efd0:	sub	r3, fp, #12288	; 0x3000
   2efd4:	sub	r3, r3, #4
   2efd8:	ldr	r3, [r3, #-2140]	; 0xfffff7a4
   2efdc:	ldr	r1, [r3, #24]
   2efe0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2efe4:	mov	r3, r2
   2efe8:	lsl	r3, r3, #1
   2efec:	add	r3, r3, r2
   2eff0:	lsl	r3, r3, #2
   2eff4:	add	r2, r1, r3
   2eff8:	sub	r3, fp, #3120	; 0xc30
   2effc:	sub	r3, r3, #4
   2f000:	sub	r3, r3, #4
   2f004:	mov	r1, r2
   2f008:	mov	r0, r3
   2f00c:	bl	1b994 <__assert_fail@plt+0xa450>
   2f010:	mov	r3, r0
   2f014:	str	r3, [fp, #-44]	; 0xffffffd4
   2f018:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2f01c:	cmp	r3, #0
   2f020:	movne	r3, #1
   2f024:	moveq	r3, #0
   2f028:	uxtb	r3, r3
   2f02c:	cmp	r3, #0
   2f030:	bne	2ee9c <__assert_fail@plt+0x1d958>
   2f034:	ldr	r3, [fp, #-12]
   2f038:	add	r3, r3, #1
   2f03c:	str	r3, [fp, #-12]
   2f040:	sub	r3, fp, #4096	; 0x1000
   2f044:	sub	r3, r3, #4
   2f048:	mov	r1, r3
   2f04c:	ldr	r2, [fp, #-8]
   2f050:	mov	r3, r2
   2f054:	lsl	r3, r3, #1
   2f058:	add	r3, r3, r2
   2f05c:	lsl	r3, r3, #2
   2f060:	add	r3, r1, r3
   2f064:	sub	r3, r3, #2128	; 0x850
   2f068:	ldr	r3, [r3]
   2f06c:	ldr	r2, [fp, #-12]
   2f070:	cmp	r2, r3
   2f074:	blt	2ef64 <__assert_fail@plt+0x1da20>
   2f078:	sub	r2, fp, #3120	; 0xc30
   2f07c:	sub	r2, r2, #4
   2f080:	sub	r2, r2, #4
   2f084:	sub	r3, fp, #12288	; 0x3000
   2f088:	sub	r3, r3, #4
   2f08c:	mov	r1, r3
   2f090:	sub	r0, fp, #44	; 0x2c
   2f094:	mov	r3, #0
   2f098:	ldr	r1, [r1, #-2140]	; 0xfffff7a4
   2f09c:	bl	1c9ac <__assert_fail@plt+0xb468>
   2f0a0:	mov	r2, r0
   2f0a4:	ldr	r3, [fp, #-8]
   2f0a8:	lsl	r3, r3, #2
   2f0ac:	sub	r1, fp, #4
   2f0b0:	add	r3, r1, r3
   2f0b4:	str	r2, [r3, #-1064]	; 0xfffffbd8
   2f0b8:	ldr	r3, [fp, #-8]
   2f0bc:	lsl	r3, r3, #2
   2f0c0:	sub	r2, fp, #4
   2f0c4:	add	r3, r2, r3
   2f0c8:	ldr	r3, [r3, #-1064]	; 0xfffffbd8
   2f0cc:	cmp	r3, #0
   2f0d0:	moveq	r3, #1
   2f0d4:	movne	r3, #0
   2f0d8:	uxtb	r3, r3
   2f0dc:	cmp	r3, #0
   2f0e0:	beq	2f100 <__assert_fail@plt+0x1dbbc>
   2f0e4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2f0e8:	cmp	r3, #0
   2f0ec:	movne	r3, #1
   2f0f0:	moveq	r3, #0
   2f0f4:	uxtb	r3, r3
   2f0f8:	cmp	r3, #0
   2f0fc:	bne	2eea4 <__assert_fail@plt+0x1d960>
   2f100:	ldr	r3, [fp, #-8]
   2f104:	lsl	r3, r3, #2
   2f108:	sub	r2, fp, #4
   2f10c:	add	r3, r2, r3
   2f110:	ldr	r3, [r3, #-1064]	; 0xfffffbd8
   2f114:	ldrb	r3, [r3, #52]	; 0x34
   2f118:	bic	r3, r3, #127	; 0x7f
   2f11c:	uxtb	r3, r3
   2f120:	cmp	r3, #0
   2f124:	beq	2f28c <__assert_fail@plt+0x1dd48>
   2f128:	sub	r2, fp, #3120	; 0xc30
   2f12c:	sub	r2, r2, #4
   2f130:	sub	r2, r2, #4
   2f134:	sub	r3, fp, #12288	; 0x3000
   2f138:	sub	r3, r3, #4
   2f13c:	mov	r1, r3
   2f140:	sub	r0, fp, #44	; 0x2c
   2f144:	mov	r3, #1
   2f148:	ldr	r1, [r1, #-2140]	; 0xfffff7a4
   2f14c:	bl	1c9ac <__assert_fail@plt+0xb468>
   2f150:	mov	r2, r0
   2f154:	ldr	r3, [fp, #-8]
   2f158:	lsl	r3, r3, #2
   2f15c:	sub	r1, fp, #4
   2f160:	add	r3, r1, r3
   2f164:	str	r2, [r3, #-2088]	; 0xfffff7d8
   2f168:	ldr	r3, [fp, #-8]
   2f16c:	lsl	r3, r3, #2
   2f170:	sub	r2, fp, #4
   2f174:	add	r3, r2, r3
   2f178:	ldr	r3, [r3, #-2088]	; 0xfffff7d8
   2f17c:	cmp	r3, #0
   2f180:	moveq	r3, #1
   2f184:	movne	r3, #0
   2f188:	uxtb	r3, r3
   2f18c:	cmp	r3, #0
   2f190:	beq	2f1b0 <__assert_fail@plt+0x1dc6c>
   2f194:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2f198:	cmp	r3, #0
   2f19c:	movne	r3, #1
   2f1a0:	moveq	r3, #0
   2f1a4:	uxtb	r3, r3
   2f1a8:	cmp	r3, #0
   2f1ac:	bne	2eeac <__assert_fail@plt+0x1d968>
   2f1b0:	ldr	r3, [fp, #-8]
   2f1b4:	lsl	r3, r3, #2
   2f1b8:	sub	r2, fp, #4
   2f1bc:	add	r3, r2, r3
   2f1c0:	ldr	r2, [r3, #-1064]	; 0xfffffbd8
   2f1c4:	ldr	r3, [fp, #-8]
   2f1c8:	lsl	r3, r3, #2
   2f1cc:	sub	r1, fp, #4
   2f1d0:	add	r3, r1, r3
   2f1d4:	ldr	r3, [r3, #-2088]	; 0xfffff7d8
   2f1d8:	cmp	r2, r3
   2f1dc:	beq	2f200 <__assert_fail@plt+0x1dcbc>
   2f1e0:	sub	r3, fp, #12288	; 0x3000
   2f1e4:	sub	r3, r3, #4
   2f1e8:	ldr	r3, [r3, #-2140]	; 0xfffff7a4
   2f1ec:	ldr	r3, [r3, #92]	; 0x5c
   2f1f0:	cmp	r3, #1
   2f1f4:	ble	2f200 <__assert_fail@plt+0x1dcbc>
   2f1f8:	mov	r3, #1
   2f1fc:	strb	r3, [fp, #-17]	; 0xffffffef
   2f200:	sub	r2, fp, #3120	; 0xc30
   2f204:	sub	r2, r2, #4
   2f208:	sub	r2, r2, #4
   2f20c:	sub	r3, fp, #12288	; 0x3000
   2f210:	sub	r3, r3, #4
   2f214:	mov	r1, r3
   2f218:	sub	r0, fp, #44	; 0x2c
   2f21c:	mov	r3, #2
   2f220:	ldr	r1, [r1, #-2140]	; 0xfffff7a4
   2f224:	bl	1c9ac <__assert_fail@plt+0xb468>
   2f228:	mov	r2, r0
   2f22c:	ldr	r3, [fp, #-8]
   2f230:	lsl	r3, r3, #2
   2f234:	sub	r1, fp, #4
   2f238:	add	r3, r1, r3
   2f23c:	str	r2, [r3, #-3112]	; 0xfffff3d8
   2f240:	ldr	r3, [fp, #-8]
   2f244:	lsl	r3, r3, #2
   2f248:	sub	r2, fp, #4
   2f24c:	add	r3, r2, r3
   2f250:	ldr	r3, [r3, #-3112]	; 0xfffff3d8
   2f254:	cmp	r3, #0
   2f258:	moveq	r3, #1
   2f25c:	movne	r3, #0
   2f260:	uxtb	r3, r3
   2f264:	cmp	r3, #0
   2f268:	beq	2f2dc <__assert_fail@plt+0x1dd98>
   2f26c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2f270:	cmp	r3, #0
   2f274:	movne	r3, #1
   2f278:	moveq	r3, #0
   2f27c:	uxtb	r3, r3
   2f280:	cmp	r3, #0
   2f284:	beq	2f2dc <__assert_fail@plt+0x1dd98>
   2f288:	b	2eec0 <__assert_fail@plt+0x1d97c>
   2f28c:	ldr	r3, [fp, #-8]
   2f290:	lsl	r3, r3, #2
   2f294:	sub	r2, fp, #4
   2f298:	add	r3, r2, r3
   2f29c:	ldr	r2, [r3, #-1064]	; 0xfffffbd8
   2f2a0:	ldr	r3, [fp, #-8]
   2f2a4:	lsl	r3, r3, #2
   2f2a8:	sub	r1, fp, #4
   2f2ac:	add	r3, r1, r3
   2f2b0:	str	r2, [r3, #-2088]	; 0xfffff7d8
   2f2b4:	ldr	r3, [fp, #-8]
   2f2b8:	lsl	r3, r3, #2
   2f2bc:	sub	r2, fp, #4
   2f2c0:	add	r3, r2, r3
   2f2c4:	ldr	r2, [r3, #-1064]	; 0xfffffbd8
   2f2c8:	ldr	r3, [fp, #-8]
   2f2cc:	lsl	r3, r3, #2
   2f2d0:	sub	r1, fp, #4
   2f2d4:	add	r3, r1, r3
   2f2d8:	str	r2, [r3, #-3112]	; 0xfffff3d8
   2f2dc:	sub	r3, fp, #14400	; 0x3840
   2f2e0:	sub	r3, r3, #4
   2f2e4:	sub	r3, r3, #20
   2f2e8:	ldr	r2, [fp, #-8]
   2f2ec:	lsl	r2, r2, #5
   2f2f0:	add	r2, r3, r2
   2f2f4:	sub	r3, fp, #3152	; 0xc50
   2f2f8:	sub	r3, r3, #4
   2f2fc:	sub	r3, r3, #4
   2f300:	mov	r1, r2
   2f304:	mov	r0, r3
   2f308:	bl	18100 <__assert_fail@plt+0x6bbc>
   2f30c:	ldr	r3, [fp, #-8]
   2f310:	add	r3, r3, #1
   2f314:	str	r3, [fp, #-8]
   2f318:	ldr	r2, [fp, #-8]
   2f31c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2f320:	cmp	r2, r3
   2f324:	blt	2ef50 <__assert_fail@plt+0x1da0c>
   2f328:	ldrb	r3, [fp, #-17]	; 0xffffffef
   2f32c:	cmp	r3, #0
   2f330:	bne	2f4ec <__assert_fail@plt+0x1dfa8>
   2f334:	mov	r1, #256	; 0x100
   2f338:	mov	r0, #4
   2f33c:	bl	33ad0 <__assert_fail@plt+0x2258c>
   2f340:	mov	r3, r0
   2f344:	mov	r2, r3
   2f348:	sub	r3, fp, #12288	; 0x3000
   2f34c:	sub	r3, r3, #4
   2f350:	ldr	r3, [r3, #-2144]	; 0xfffff7a0
   2f354:	str	r2, [r3, #44]	; 0x2c
   2f358:	sub	r3, fp, #12288	; 0x3000
   2f35c:	sub	r3, r3, #4
   2f360:	ldr	r3, [r3, #-2144]	; 0xfffff7a0
   2f364:	ldr	r3, [r3, #44]	; 0x2c
   2f368:	str	r3, [fp, #-32]	; 0xffffffe0
   2f36c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2f370:	cmp	r3, #0
   2f374:	moveq	r3, #1
   2f378:	movne	r3, #0
   2f37c:	uxtb	r3, r3
   2f380:	cmp	r3, #0
   2f384:	bne	2eeb4 <__assert_fail@plt+0x1d970>
   2f388:	mov	r3, #0
   2f38c:	str	r3, [fp, #-8]
   2f390:	b	2f4dc <__assert_fail@plt+0x1df98>
   2f394:	ldr	r3, [fp, #-8]
   2f398:	lsl	r3, r3, #5
   2f39c:	str	r3, [fp, #-16]
   2f3a0:	ldr	r3, [fp, #-8]
   2f3a4:	lsl	r3, r3, #2
   2f3a8:	sub	r2, fp, #4
   2f3ac:	add	r3, r2, r3
   2f3b0:	ldr	r3, [r3, #-3156]	; 0xfffff3ac
   2f3b4:	str	r3, [fp, #-24]	; 0xffffffe8
   2f3b8:	mov	r3, #1
   2f3bc:	str	r3, [fp, #-28]	; 0xffffffe4
   2f3c0:	b	2f4c4 <__assert_fail@plt+0x1df80>
   2f3c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f3c8:	and	r3, r3, #1
   2f3cc:	cmp	r3, #0
   2f3d0:	beq	2f4a0 <__assert_fail@plt+0x1df5c>
   2f3d4:	mov	r3, #0
   2f3d8:	str	r3, [fp, #-12]
   2f3dc:	b	2f3ec <__assert_fail@plt+0x1dea8>
   2f3e0:	ldr	r3, [fp, #-12]
   2f3e4:	add	r3, r3, #1
   2f3e8:	str	r3, [fp, #-12]
   2f3ec:	sub	r3, fp, #12288	; 0x3000
   2f3f0:	sub	r3, r3, #4
   2f3f4:	mov	r1, r3
   2f3f8:	ldr	r3, [fp, #-12]
   2f3fc:	lsl	r2, r3, #3
   2f400:	ldr	r3, [fp, #-8]
   2f404:	add	r3, r2, r3
   2f408:	lsl	r3, r3, #2
   2f40c:	add	r3, r1, r3
   2f410:	ldr	r2, [r3, #-2132]	; 0xfffff7ac
   2f414:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2f418:	and	r3, r3, r2
   2f41c:	cmp	r3, #0
   2f420:	beq	2f3e0 <__assert_fail@plt+0x1de9c>
   2f424:	sub	r3, fp, #12288	; 0x3000
   2f428:	sub	r3, r3, #4
   2f42c:	ldr	r3, [r3, #-2140]	; 0xfffff7a4
   2f430:	ldr	r2, [fp, #-8]
   2f434:	add	r2, r2, #24
   2f438:	ldr	r2, [r3, r2, lsl #2]
   2f43c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2f440:	and	r3, r3, r2
   2f444:	cmp	r3, #0
   2f448:	beq	2f478 <__assert_fail@plt+0x1df34>
   2f44c:	ldr	r3, [fp, #-16]
   2f450:	lsl	r3, r3, #2
   2f454:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2f458:	add	r2, r2, r3
   2f45c:	ldr	r3, [fp, #-12]
   2f460:	lsl	r3, r3, #2
   2f464:	sub	r1, fp, #4
   2f468:	add	r3, r1, r3
   2f46c:	ldr	r3, [r3, #-2088]	; 0xfffff7d8
   2f470:	str	r3, [r2]
   2f474:	b	2f4a0 <__assert_fail@plt+0x1df5c>
   2f478:	ldr	r3, [fp, #-16]
   2f47c:	lsl	r3, r3, #2
   2f480:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2f484:	add	r2, r2, r3
   2f488:	ldr	r3, [fp, #-12]
   2f48c:	lsl	r3, r3, #2
   2f490:	sub	r1, fp, #4
   2f494:	add	r3, r1, r3
   2f498:	ldr	r3, [r3, #-1064]	; 0xfffffbd8
   2f49c:	str	r3, [r2]
   2f4a0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2f4a4:	lsl	r3, r3, #1
   2f4a8:	str	r3, [fp, #-28]	; 0xffffffe4
   2f4ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f4b0:	lsr	r3, r3, #1
   2f4b4:	str	r3, [fp, #-24]	; 0xffffffe8
   2f4b8:	ldr	r3, [fp, #-16]
   2f4bc:	add	r3, r3, #1
   2f4c0:	str	r3, [fp, #-16]
   2f4c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f4c8:	cmp	r3, #0
   2f4cc:	bne	2f3c4 <__assert_fail@plt+0x1de80>
   2f4d0:	ldr	r3, [fp, #-8]
   2f4d4:	add	r3, r3, #1
   2f4d8:	str	r3, [fp, #-8]
   2f4dc:	ldr	r3, [fp, #-8]
   2f4e0:	cmp	r3, #7
   2f4e4:	ble	2f394 <__assert_fail@plt+0x1de50>
   2f4e8:	b	2f678 <__assert_fail@plt+0x1e134>
   2f4ec:	mov	r1, #512	; 0x200
   2f4f0:	mov	r0, #4
   2f4f4:	bl	33ad0 <__assert_fail@plt+0x2258c>
   2f4f8:	mov	r3, r0
   2f4fc:	mov	r2, r3
   2f500:	sub	r3, fp, #12288	; 0x3000
   2f504:	sub	r3, r3, #4
   2f508:	ldr	r3, [r3, #-2144]	; 0xfffff7a0
   2f50c:	str	r2, [r3, #48]	; 0x30
   2f510:	sub	r3, fp, #12288	; 0x3000
   2f514:	sub	r3, r3, #4
   2f518:	ldr	r3, [r3, #-2144]	; 0xfffff7a0
   2f51c:	ldr	r3, [r3, #48]	; 0x30
   2f520:	str	r3, [fp, #-32]	; 0xffffffe0
   2f524:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2f528:	cmp	r3, #0
   2f52c:	moveq	r3, #1
   2f530:	movne	r3, #0
   2f534:	uxtb	r3, r3
   2f538:	cmp	r3, #0
   2f53c:	bne	2eebc <__assert_fail@plt+0x1d978>
   2f540:	mov	r3, #0
   2f544:	str	r3, [fp, #-8]
   2f548:	b	2f66c <__assert_fail@plt+0x1e128>
   2f54c:	ldr	r3, [fp, #-8]
   2f550:	lsl	r3, r3, #5
   2f554:	str	r3, [fp, #-16]
   2f558:	ldr	r3, [fp, #-8]
   2f55c:	lsl	r3, r3, #2
   2f560:	sub	r2, fp, #4
   2f564:	add	r3, r2, r3
   2f568:	ldr	r3, [r3, #-3156]	; 0xfffff3ac
   2f56c:	str	r3, [fp, #-24]	; 0xffffffe8
   2f570:	mov	r3, #1
   2f574:	str	r3, [fp, #-28]	; 0xffffffe4
   2f578:	b	2f654 <__assert_fail@plt+0x1e110>
   2f57c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f580:	and	r3, r3, #1
   2f584:	cmp	r3, #0
   2f588:	beq	2f630 <__assert_fail@plt+0x1e0ec>
   2f58c:	mov	r3, #0
   2f590:	str	r3, [fp, #-12]
   2f594:	b	2f5a4 <__assert_fail@plt+0x1e060>
   2f598:	ldr	r3, [fp, #-12]
   2f59c:	add	r3, r3, #1
   2f5a0:	str	r3, [fp, #-12]
   2f5a4:	sub	r3, fp, #12288	; 0x3000
   2f5a8:	sub	r3, r3, #4
   2f5ac:	mov	r1, r3
   2f5b0:	ldr	r3, [fp, #-12]
   2f5b4:	lsl	r2, r3, #3
   2f5b8:	ldr	r3, [fp, #-8]
   2f5bc:	add	r3, r2, r3
   2f5c0:	lsl	r3, r3, #2
   2f5c4:	add	r3, r1, r3
   2f5c8:	ldr	r2, [r3, #-2132]	; 0xfffff7ac
   2f5cc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2f5d0:	and	r3, r3, r2
   2f5d4:	cmp	r3, #0
   2f5d8:	beq	2f598 <__assert_fail@plt+0x1e054>
   2f5dc:	ldr	r3, [fp, #-16]
   2f5e0:	lsl	r3, r3, #2
   2f5e4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2f5e8:	add	r2, r2, r3
   2f5ec:	ldr	r3, [fp, #-12]
   2f5f0:	lsl	r3, r3, #2
   2f5f4:	sub	r1, fp, #4
   2f5f8:	add	r3, r1, r3
   2f5fc:	ldr	r3, [r3, #-1064]	; 0xfffffbd8
   2f600:	str	r3, [r2]
   2f604:	ldr	r3, [fp, #-16]
   2f608:	add	r3, r3, #256	; 0x100
   2f60c:	lsl	r3, r3, #2
   2f610:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2f614:	add	r2, r2, r3
   2f618:	ldr	r3, [fp, #-12]
   2f61c:	lsl	r3, r3, #2
   2f620:	sub	r1, fp, #4
   2f624:	add	r3, r1, r3
   2f628:	ldr	r3, [r3, #-2088]	; 0xfffff7d8
   2f62c:	str	r3, [r2]
   2f630:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2f634:	lsl	r3, r3, #1
   2f638:	str	r3, [fp, #-28]	; 0xffffffe4
   2f63c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f640:	lsr	r3, r3, #1
   2f644:	str	r3, [fp, #-24]	; 0xffffffe8
   2f648:	ldr	r3, [fp, #-16]
   2f64c:	add	r3, r3, #1
   2f650:	str	r3, [fp, #-16]
   2f654:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f658:	cmp	r3, #0
   2f65c:	bne	2f57c <__assert_fail@plt+0x1e038>
   2f660:	ldr	r3, [fp, #-8]
   2f664:	add	r3, r3, #1
   2f668:	str	r3, [fp, #-8]
   2f66c:	ldr	r3, [fp, #-8]
   2f670:	cmp	r3, #7
   2f674:	ble	2f54c <__assert_fail@plt+0x1e008>
   2f678:	sub	r3, fp, #3152	; 0xc50
   2f67c:	sub	r3, r3, #4
   2f680:	sub	r3, r3, #4
   2f684:	mov	r1, #10
   2f688:	mov	r0, r3
   2f68c:	bl	17f6c <__assert_fail@plt+0x6a28>
   2f690:	mov	r3, r0
   2f694:	cmp	r3, #0
   2f698:	beq	2f750 <__assert_fail@plt+0x1e20c>
   2f69c:	mov	r3, #0
   2f6a0:	str	r3, [fp, #-12]
   2f6a4:	b	2f738 <__assert_fail@plt+0x1e1f4>
   2f6a8:	sub	r3, fp, #14400	; 0x3840
   2f6ac:	sub	r3, r3, #4
   2f6b0:	sub	r3, r3, #20
   2f6b4:	ldr	r2, [fp, #-12]
   2f6b8:	lsl	r2, r2, #5
   2f6bc:	add	r3, r3, r2
   2f6c0:	mov	r1, #10
   2f6c4:	mov	r0, r3
   2f6c8:	bl	17f6c <__assert_fail@plt+0x6a28>
   2f6cc:	mov	r3, r0
   2f6d0:	cmp	r3, #0
   2f6d4:	beq	2f72c <__assert_fail@plt+0x1e1e8>
   2f6d8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2f6dc:	add	r2, r3, #40	; 0x28
   2f6e0:	ldr	r3, [fp, #-12]
   2f6e4:	lsl	r3, r3, #2
   2f6e8:	sub	r1, fp, #4
   2f6ec:	add	r3, r1, r3
   2f6f0:	ldr	r3, [r3, #-3112]	; 0xfffff3d8
   2f6f4:	str	r3, [r2]
   2f6f8:	ldrb	r3, [fp, #-17]	; 0xffffffef
   2f6fc:	cmp	r3, #0
   2f700:	beq	2f74c <__assert_fail@plt+0x1e208>
   2f704:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2f708:	add	r3, r3, #1056	; 0x420
   2f70c:	add	r3, r3, #8
   2f710:	ldr	r2, [fp, #-12]
   2f714:	lsl	r2, r2, #2
   2f718:	sub	r1, fp, #4
   2f71c:	add	r2, r1, r2
   2f720:	ldr	r2, [r2, #-3112]	; 0xfffff3d8
   2f724:	str	r2, [r3]
   2f728:	b	2f74c <__assert_fail@plt+0x1e208>
   2f72c:	ldr	r3, [fp, #-12]
   2f730:	add	r3, r3, #1
   2f734:	str	r3, [fp, #-12]
   2f738:	ldr	r2, [fp, #-12]
   2f73c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2f740:	cmp	r2, r3
   2f744:	blt	2f6a8 <__assert_fail@plt+0x1e164>
   2f748:	b	2f750 <__assert_fail@plt+0x1e20c>
   2f74c:	nop	{0}
   2f750:	ldr	r3, [fp, #-3120]	; 0xfffff3d0
   2f754:	mov	r0, r3
   2f758:	bl	151ec <__assert_fail@plt+0x3ca8>
   2f75c:	mov	r3, #0
   2f760:	str	r3, [fp, #-8]
   2f764:	b	2f7a8 <__assert_fail@plt+0x1e264>
   2f768:	ldr	r2, [fp, #-8]
   2f76c:	mov	r3, r2
   2f770:	lsl	r3, r3, #1
   2f774:	add	r3, r3, r2
   2f778:	lsl	r3, r3, #2
   2f77c:	mov	r2, r3
   2f780:	sub	r3, fp, #6208	; 0x1840
   2f784:	sub	r3, r3, #4
   2f788:	sub	r3, r3, #20
   2f78c:	add	r3, r3, r2
   2f790:	ldr	r3, [r3, #8]
   2f794:	mov	r0, r3
   2f798:	bl	151ec <__assert_fail@plt+0x3ca8>
   2f79c:	ldr	r3, [fp, #-8]
   2f7a0:	add	r3, r3, #1
   2f7a4:	str	r3, [fp, #-8]
   2f7a8:	ldr	r2, [fp, #-8]
   2f7ac:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2f7b0:	cmp	r2, r3
   2f7b4:	blt	2f768 <__assert_fail@plt+0x1e224>
   2f7b8:	mov	r3, #1
   2f7bc:	mov	r0, r3
   2f7c0:	sub	sp, fp, #4
   2f7c4:	ldr	fp, [sp]
   2f7c8:	add	sp, sp, #4
   2f7cc:	pop	{pc}		; (ldr pc, [sp], #4)
   2f7d0:	str	fp, [sp, #-8]!
   2f7d4:	str	lr, [sp, #4]
   2f7d8:	add	fp, sp, #4
   2f7dc:	sub	sp, sp, #176	; 0xb0
   2f7e0:	str	r0, [fp, #-168]	; 0xffffff58
   2f7e4:	str	r1, [fp, #-172]	; 0xffffff54
   2f7e8:	str	r2, [fp, #-176]	; 0xffffff50
   2f7ec:	str	r3, [fp, #-180]	; 0xffffff4c
   2f7f0:	ldr	r3, [fp, #-172]	; 0xffffff54
   2f7f4:	add	r3, r3, #4
   2f7f8:	str	r3, [fp, #-44]	; 0xffffffd4
   2f7fc:	sub	r3, fp, #100	; 0x64
   2f800:	mov	r0, r3
   2f804:	bl	17fe4 <__assert_fail@plt+0x6aa0>
   2f808:	mov	r3, #0
   2f80c:	str	r3, [fp, #-20]	; 0xffffffec
   2f810:	mov	r3, #0
   2f814:	str	r3, [fp, #-8]
   2f818:	b	3016c <__assert_fail@plt+0x1ec28>
   2f81c:	ldr	r3, [fp, #-168]	; 0xffffff58
   2f820:	ldr	r2, [r3]
   2f824:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2f828:	ldr	r1, [r3, #8]
   2f82c:	ldr	r3, [fp, #-8]
   2f830:	lsl	r3, r3, #2
   2f834:	add	r3, r1, r3
   2f838:	ldr	r3, [r3]
   2f83c:	lsl	r3, r3, #3
   2f840:	add	r3, r2, r3
   2f844:	str	r3, [fp, #-48]	; 0xffffffd0
   2f848:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2f84c:	ldrb	r3, [r3, #4]
   2f850:	str	r3, [fp, #-52]	; 0xffffffcc
   2f854:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2f858:	ldr	r3, [r3, #4]
   2f85c:	ubfx	r3, r3, #8, #10
   2f860:	uxth	r3, r3
   2f864:	str	r3, [fp, #-56]	; 0xffffffc8
   2f868:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2f86c:	cmp	r3, #1
   2f870:	bne	2f894 <__assert_fail@plt+0x1e350>
   2f874:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2f878:	ldrb	r3, [r3]
   2f87c:	mov	r2, r3
   2f880:	sub	r3, fp, #100	; 0x64
   2f884:	mov	r1, r2
   2f888:	mov	r0, r3
   2f88c:	bl	17e58 <__assert_fail@plt+0x6914>
   2f890:	b	2f9b4 <__assert_fail@plt+0x1e470>
   2f894:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2f898:	cmp	r3, #3
   2f89c:	bne	2f8bc <__assert_fail@plt+0x1e378>
   2f8a0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2f8a4:	ldr	r2, [r3]
   2f8a8:	sub	r3, fp, #100	; 0x64
   2f8ac:	mov	r1, r2
   2f8b0:	mov	r0, r3
   2f8b4:	bl	18100 <__assert_fail@plt+0x6bbc>
   2f8b8:	b	2f9b4 <__assert_fail@plt+0x1e470>
   2f8bc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2f8c0:	cmp	r3, #5
   2f8c4:	bne	2f94c <__assert_fail@plt+0x1e408>
   2f8c8:	ldr	r3, [fp, #-168]	; 0xffffff58
   2f8cc:	ldr	r3, [r3, #92]	; 0x5c
   2f8d0:	cmp	r3, #1
   2f8d4:	ble	2f8f4 <__assert_fail@plt+0x1e3b0>
   2f8d8:	ldr	r3, [fp, #-168]	; 0xffffff58
   2f8dc:	ldr	r2, [r3, #60]	; 0x3c
   2f8e0:	sub	r3, fp, #100	; 0x64
   2f8e4:	mov	r1, r2
   2f8e8:	mov	r0, r3
   2f8ec:	bl	18100 <__assert_fail@plt+0x6bbc>
   2f8f0:	b	2f900 <__assert_fail@plt+0x1e3bc>
   2f8f4:	sub	r3, fp, #100	; 0x64
   2f8f8:	mov	r0, r3
   2f8fc:	bl	1801c <__assert_fail@plt+0x6ad8>
   2f900:	ldr	r3, [fp, #-168]	; 0xffffff58
   2f904:	ldr	r3, [r3, #128]	; 0x80
   2f908:	and	r3, r3, #64	; 0x40
   2f90c:	cmp	r3, #0
   2f910:	bne	2f924 <__assert_fail@plt+0x1e3e0>
   2f914:	sub	r3, fp, #100	; 0x64
   2f918:	mov	r1, #10
   2f91c:	mov	r0, r3
   2f920:	bl	17ee0 <__assert_fail@plt+0x699c>
   2f924:	ldr	r3, [fp, #-168]	; 0xffffff58
   2f928:	ldr	r3, [r3, #128]	; 0x80
   2f92c:	and	r3, r3, #128	; 0x80
   2f930:	cmp	r3, #0
   2f934:	beq	2f9b4 <__assert_fail@plt+0x1e470>
   2f938:	sub	r3, fp, #100	; 0x64
   2f93c:	mov	r1, #0
   2f940:	mov	r0, r3
   2f944:	bl	17ee0 <__assert_fail@plt+0x699c>
   2f948:	b	2f9b4 <__assert_fail@plt+0x1e470>
   2f94c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2f950:	cmp	r3, #7
   2f954:	bne	30144 <__assert_fail@plt+0x1ec00>
   2f958:	sub	r3, fp, #100	; 0x64
   2f95c:	mov	r2, #16
   2f960:	mvn	r1, #0
   2f964:	mov	r0, r3
   2f968:	bl	11448 <memset@plt>
   2f96c:	ldr	r3, [fp, #-168]	; 0xffffff58
   2f970:	ldr	r3, [r3, #128]	; 0x80
   2f974:	and	r3, r3, #64	; 0x40
   2f978:	cmp	r3, #0
   2f97c:	bne	2f990 <__assert_fail@plt+0x1e44c>
   2f980:	sub	r3, fp, #100	; 0x64
   2f984:	mov	r1, #10
   2f988:	mov	r0, r3
   2f98c:	bl	17ee0 <__assert_fail@plt+0x699c>
   2f990:	ldr	r3, [fp, #-168]	; 0xffffff58
   2f994:	ldr	r3, [r3, #128]	; 0x80
   2f998:	and	r3, r3, #128	; 0x80
   2f99c:	cmp	r3, #0
   2f9a0:	beq	2f9b4 <__assert_fail@plt+0x1e470>
   2f9a4:	sub	r3, fp, #100	; 0x64
   2f9a8:	mov	r1, #0
   2f9ac:	mov	r0, r3
   2f9b0:	bl	17ee0 <__assert_fail@plt+0x699c>
   2f9b4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2f9b8:	cmp	r3, #0
   2f9bc:	beq	2fd4c <__assert_fail@plt+0x1e808>
   2f9c0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2f9c4:	and	r3, r3, #32
   2f9c8:	cmp	r3, #0
   2f9cc:	beq	2fa10 <__assert_fail@plt+0x1e4cc>
   2f9d0:	sub	r3, fp, #100	; 0x64
   2f9d4:	mov	r1, #10
   2f9d8:	mov	r0, r3
   2f9dc:	bl	17f6c <__assert_fail@plt+0x6a28>
   2f9e0:	mov	r3, r0
   2f9e4:	strb	r3, [fp, #-57]	; 0xffffffc7
   2f9e8:	sub	r3, fp, #100	; 0x64
   2f9ec:	mov	r0, r3
   2f9f0:	bl	17fe4 <__assert_fail@plt+0x6aa0>
   2f9f4:	ldrb	r3, [fp, #-57]	; 0xffffffc7
   2f9f8:	cmp	r3, #0
   2f9fc:	beq	3014c <__assert_fail@plt+0x1ec08>
   2fa00:	sub	r3, fp, #100	; 0x64
   2fa04:	mov	r1, #10
   2fa08:	mov	r0, r3
   2fa0c:	bl	17e58 <__assert_fail@plt+0x6914>
   2fa10:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2fa14:	and	r3, r3, #128	; 0x80
   2fa18:	cmp	r3, #0
   2fa1c:	beq	2fa30 <__assert_fail@plt+0x1e4ec>
   2fa20:	sub	r3, fp, #100	; 0x64
   2fa24:	mov	r0, r3
   2fa28:	bl	17fe4 <__assert_fail@plt+0x6aa0>
   2fa2c:	b	30160 <__assert_fail@plt+0x1ec1c>
   2fa30:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2fa34:	and	r3, r3, #4
   2fa38:	cmp	r3, #0
   2fa3c:	beq	2fbbc <__assert_fail@plt+0x1e678>
   2fa40:	mov	r3, #0
   2fa44:	str	r3, [fp, #-24]	; 0xffffffe8
   2fa48:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2fa4c:	cmp	r3, #1
   2fa50:	bne	2fa7c <__assert_fail@plt+0x1e538>
   2fa54:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2fa58:	ldrb	r3, [r3, #6]
   2fa5c:	and	r3, r3, #64	; 0x40
   2fa60:	uxtb	r3, r3
   2fa64:	cmp	r3, #0
   2fa68:	bne	2fa7c <__assert_fail@plt+0x1e538>
   2fa6c:	sub	r3, fp, #100	; 0x64
   2fa70:	mov	r0, r3
   2fa74:	bl	17fe4 <__assert_fail@plt+0x6aa0>
   2fa78:	b	30160 <__assert_fail@plt+0x1ec1c>
   2fa7c:	ldr	r3, [fp, #-168]	; 0xffffff58
   2fa80:	ldr	r3, [r3, #92]	; 0x5c
   2fa84:	cmp	r3, #1
   2fa88:	ble	2fb30 <__assert_fail@plt+0x1e5ec>
   2fa8c:	mov	r3, #0
   2fa90:	str	r3, [fp, #-12]
   2fa94:	b	2fb20 <__assert_fail@plt+0x1e5dc>
   2fa98:	ldr	r3, [fp, #-12]
   2fa9c:	lsl	r3, r3, #2
   2faa0:	sub	r2, fp, #4
   2faa4:	add	r3, r2, r3
   2faa8:	ldr	r2, [r3, #-96]	; 0xffffffa0
   2faac:	ldr	r3, [fp, #-168]	; 0xffffff58
   2fab0:	ldr	r1, [fp, #-12]
   2fab4:	add	r1, r1, #24
   2fab8:	ldr	r1, [r3, r1, lsl #2]
   2fabc:	ldr	r3, [fp, #-168]	; 0xffffff58
   2fac0:	ldr	r0, [r3, #60]	; 0x3c
   2fac4:	ldr	r3, [fp, #-12]
   2fac8:	lsl	r3, r3, #2
   2facc:	add	r3, r0, r3
   2fad0:	ldr	r3, [r3]
   2fad4:	mvn	r3, r3
   2fad8:	orr	r3, r1, r3
   2fadc:	and	r2, r2, r3
   2fae0:	ldr	r3, [fp, #-12]
   2fae4:	lsl	r3, r3, #2
   2fae8:	sub	r1, fp, #4
   2faec:	add	r3, r1, r3
   2faf0:	str	r2, [r3, #-96]	; 0xffffffa0
   2faf4:	ldr	r3, [fp, #-12]
   2faf8:	lsl	r3, r3, #2
   2fafc:	sub	r2, fp, #4
   2fb00:	add	r3, r2, r3
   2fb04:	ldr	r3, [r3, #-96]	; 0xffffffa0
   2fb08:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2fb0c:	orr	r3, r2, r3
   2fb10:	str	r3, [fp, #-24]	; 0xffffffe8
   2fb14:	ldr	r3, [fp, #-12]
   2fb18:	add	r3, r3, #1
   2fb1c:	str	r3, [fp, #-12]
   2fb20:	ldr	r3, [fp, #-12]
   2fb24:	cmp	r3, #7
   2fb28:	ble	2fa98 <__assert_fail@plt+0x1e554>
   2fb2c:	b	2fbb0 <__assert_fail@plt+0x1e66c>
   2fb30:	mov	r3, #0
   2fb34:	str	r3, [fp, #-12]
   2fb38:	b	2fba4 <__assert_fail@plt+0x1e660>
   2fb3c:	ldr	r3, [fp, #-12]
   2fb40:	lsl	r3, r3, #2
   2fb44:	sub	r2, fp, #4
   2fb48:	add	r3, r2, r3
   2fb4c:	ldr	r2, [r3, #-96]	; 0xffffffa0
   2fb50:	ldr	r3, [fp, #-168]	; 0xffffff58
   2fb54:	ldr	r1, [fp, #-12]
   2fb58:	add	r1, r1, #24
   2fb5c:	ldr	r3, [r3, r1, lsl #2]
   2fb60:	and	r2, r2, r3
   2fb64:	ldr	r3, [fp, #-12]
   2fb68:	lsl	r3, r3, #2
   2fb6c:	sub	r1, fp, #4
   2fb70:	add	r3, r1, r3
   2fb74:	str	r2, [r3, #-96]	; 0xffffffa0
   2fb78:	ldr	r3, [fp, #-12]
   2fb7c:	lsl	r3, r3, #2
   2fb80:	sub	r2, fp, #4
   2fb84:	add	r3, r2, r3
   2fb88:	ldr	r3, [r3, #-96]	; 0xffffffa0
   2fb8c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2fb90:	orr	r3, r2, r3
   2fb94:	str	r3, [fp, #-24]	; 0xffffffe8
   2fb98:	ldr	r3, [fp, #-12]
   2fb9c:	add	r3, r3, #1
   2fba0:	str	r3, [fp, #-12]
   2fba4:	ldr	r3, [fp, #-12]
   2fba8:	cmp	r3, #7
   2fbac:	ble	2fb3c <__assert_fail@plt+0x1e5f8>
   2fbb0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2fbb4:	cmp	r3, #0
   2fbb8:	beq	30154 <__assert_fail@plt+0x1ec10>
   2fbbc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2fbc0:	and	r3, r3, #8
   2fbc4:	cmp	r3, #0
   2fbc8:	beq	2fd4c <__assert_fail@plt+0x1e808>
   2fbcc:	mov	r3, #0
   2fbd0:	str	r3, [fp, #-28]	; 0xffffffe4
   2fbd4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2fbd8:	cmp	r3, #1
   2fbdc:	bne	2fc08 <__assert_fail@plt+0x1e6c4>
   2fbe0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2fbe4:	ldrb	r3, [r3, #6]
   2fbe8:	and	r3, r3, #64	; 0x40
   2fbec:	uxtb	r3, r3
   2fbf0:	cmp	r3, #0
   2fbf4:	beq	2fc08 <__assert_fail@plt+0x1e6c4>
   2fbf8:	sub	r3, fp, #100	; 0x64
   2fbfc:	mov	r0, r3
   2fc00:	bl	17fe4 <__assert_fail@plt+0x6aa0>
   2fc04:	b	30160 <__assert_fail@plt+0x1ec1c>
   2fc08:	ldr	r3, [fp, #-168]	; 0xffffff58
   2fc0c:	ldr	r3, [r3, #92]	; 0x5c
   2fc10:	cmp	r3, #1
   2fc14:	ble	2fcbc <__assert_fail@plt+0x1e778>
   2fc18:	mov	r3, #0
   2fc1c:	str	r3, [fp, #-12]
   2fc20:	b	2fcac <__assert_fail@plt+0x1e768>
   2fc24:	ldr	r3, [fp, #-12]
   2fc28:	lsl	r3, r3, #2
   2fc2c:	sub	r2, fp, #4
   2fc30:	add	r3, r2, r3
   2fc34:	ldr	r2, [r3, #-96]	; 0xffffffa0
   2fc38:	ldr	r3, [fp, #-168]	; 0xffffff58
   2fc3c:	ldr	r1, [fp, #-12]
   2fc40:	add	r1, r1, #24
   2fc44:	ldr	r1, [r3, r1, lsl #2]
   2fc48:	ldr	r3, [fp, #-168]	; 0xffffff58
   2fc4c:	ldr	r0, [r3, #60]	; 0x3c
   2fc50:	ldr	r3, [fp, #-12]
   2fc54:	lsl	r3, r3, #2
   2fc58:	add	r3, r0, r3
   2fc5c:	ldr	r3, [r3]
   2fc60:	and	r3, r3, r1
   2fc64:	mvn	r3, r3
   2fc68:	and	r2, r2, r3
   2fc6c:	ldr	r3, [fp, #-12]
   2fc70:	lsl	r3, r3, #2
   2fc74:	sub	r1, fp, #4
   2fc78:	add	r3, r1, r3
   2fc7c:	str	r2, [r3, #-96]	; 0xffffffa0
   2fc80:	ldr	r3, [fp, #-12]
   2fc84:	lsl	r3, r3, #2
   2fc88:	sub	r2, fp, #4
   2fc8c:	add	r3, r2, r3
   2fc90:	ldr	r3, [r3, #-96]	; 0xffffffa0
   2fc94:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2fc98:	orr	r3, r2, r3
   2fc9c:	str	r3, [fp, #-28]	; 0xffffffe4
   2fca0:	ldr	r3, [fp, #-12]
   2fca4:	add	r3, r3, #1
   2fca8:	str	r3, [fp, #-12]
   2fcac:	ldr	r3, [fp, #-12]
   2fcb0:	cmp	r3, #7
   2fcb4:	ble	2fc24 <__assert_fail@plt+0x1e6e0>
   2fcb8:	b	2fd40 <__assert_fail@plt+0x1e7fc>
   2fcbc:	mov	r3, #0
   2fcc0:	str	r3, [fp, #-12]
   2fcc4:	b	2fd34 <__assert_fail@plt+0x1e7f0>
   2fcc8:	ldr	r3, [fp, #-12]
   2fccc:	lsl	r3, r3, #2
   2fcd0:	sub	r2, fp, #4
   2fcd4:	add	r3, r2, r3
   2fcd8:	ldr	r2, [r3, #-96]	; 0xffffffa0
   2fcdc:	ldr	r3, [fp, #-168]	; 0xffffff58
   2fce0:	ldr	r1, [fp, #-12]
   2fce4:	add	r1, r1, #24
   2fce8:	ldr	r3, [r3, r1, lsl #2]
   2fcec:	mvn	r3, r3
   2fcf0:	and	r2, r2, r3
   2fcf4:	ldr	r3, [fp, #-12]
   2fcf8:	lsl	r3, r3, #2
   2fcfc:	sub	r1, fp, #4
   2fd00:	add	r3, r1, r3
   2fd04:	str	r2, [r3, #-96]	; 0xffffffa0
   2fd08:	ldr	r3, [fp, #-12]
   2fd0c:	lsl	r3, r3, #2
   2fd10:	sub	r2, fp, #4
   2fd14:	add	r3, r2, r3
   2fd18:	ldr	r3, [r3, #-96]	; 0xffffffa0
   2fd1c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2fd20:	orr	r3, r2, r3
   2fd24:	str	r3, [fp, #-28]	; 0xffffffe4
   2fd28:	ldr	r3, [fp, #-12]
   2fd2c:	add	r3, r3, #1
   2fd30:	str	r3, [fp, #-12]
   2fd34:	ldr	r3, [fp, #-12]
   2fd38:	cmp	r3, #7
   2fd3c:	ble	2fcc8 <__assert_fail@plt+0x1e784>
   2fd40:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2fd44:	cmp	r3, #0
   2fd48:	beq	3015c <__assert_fail@plt+0x1ec18>
   2fd4c:	mov	r3, #0
   2fd50:	str	r3, [fp, #-12]
   2fd54:	b	30080 <__assert_fail@plt+0x1eb3c>
   2fd58:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2fd5c:	cmp	r3, #1
   2fd60:	bne	2fd9c <__assert_fail@plt+0x1e858>
   2fd64:	ldr	r3, [fp, #-12]
   2fd68:	lsl	r3, r3, #5
   2fd6c:	ldr	r2, [fp, #-180]	; 0xffffff4c
   2fd70:	add	r2, r2, r3
   2fd74:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2fd78:	ldrb	r3, [r3]
   2fd7c:	mov	r1, r3
   2fd80:	mov	r0, r2
   2fd84:	bl	17f6c <__assert_fail@plt+0x6a28>
   2fd88:	mov	r3, r0
   2fd8c:	eor	r3, r3, #1
   2fd90:	uxtb	r3, r3
   2fd94:	cmp	r3, #0
   2fd98:	bne	30068 <__assert_fail@plt+0x1eb24>
   2fd9c:	mov	r3, #0
   2fda0:	str	r3, [fp, #-32]	; 0xffffffe0
   2fda4:	mov	r3, #0
   2fda8:	str	r3, [fp, #-16]
   2fdac:	b	2fe20 <__assert_fail@plt+0x1e8dc>
   2fdb0:	ldr	r3, [fp, #-16]
   2fdb4:	lsl	r3, r3, #2
   2fdb8:	sub	r2, fp, #4
   2fdbc:	add	r3, r2, r3
   2fdc0:	ldr	r2, [r3, #-96]	; 0xffffffa0
   2fdc4:	ldr	r3, [fp, #-12]
   2fdc8:	lsl	r3, r3, #5
   2fdcc:	ldr	r1, [fp, #-180]	; 0xffffff4c
   2fdd0:	add	r3, r1, r3
   2fdd4:	ldr	r1, [fp, #-16]
   2fdd8:	ldr	r3, [r3, r1, lsl #2]
   2fddc:	and	r2, r2, r3
   2fde0:	ldr	r3, [fp, #-16]
   2fde4:	lsl	r3, r3, #2
   2fde8:	sub	r1, fp, #4
   2fdec:	add	r3, r1, r3
   2fdf0:	str	r2, [r3, #-160]	; 0xffffff60
   2fdf4:	ldr	r3, [fp, #-16]
   2fdf8:	lsl	r3, r3, #2
   2fdfc:	sub	r2, fp, #4
   2fe00:	add	r3, r2, r3
   2fe04:	ldr	r3, [r3, #-160]	; 0xffffff60
   2fe08:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2fe0c:	orr	r3, r2, r3
   2fe10:	str	r3, [fp, #-32]	; 0xffffffe0
   2fe14:	ldr	r3, [fp, #-16]
   2fe18:	add	r3, r3, #1
   2fe1c:	str	r3, [fp, #-16]
   2fe20:	ldr	r3, [fp, #-16]
   2fe24:	cmp	r3, #7
   2fe28:	ble	2fdb0 <__assert_fail@plt+0x1e86c>
   2fe2c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2fe30:	cmp	r3, #0
   2fe34:	beq	30070 <__assert_fail@plt+0x1eb2c>
   2fe38:	mov	r3, #0
   2fe3c:	str	r3, [fp, #-40]	; 0xffffffd8
   2fe40:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2fe44:	str	r3, [fp, #-36]	; 0xffffffdc
   2fe48:	mov	r3, #0
   2fe4c:	str	r3, [fp, #-16]
   2fe50:	b	2ff30 <__assert_fail@plt+0x1e9ec>
   2fe54:	ldr	r3, [fp, #-16]
   2fe58:	lsl	r3, r3, #2
   2fe5c:	sub	r2, fp, #4
   2fe60:	add	r3, r2, r3
   2fe64:	ldr	r3, [r3, #-96]	; 0xffffffa0
   2fe68:	mvn	r2, r3
   2fe6c:	ldr	r3, [fp, #-12]
   2fe70:	lsl	r3, r3, #5
   2fe74:	ldr	r1, [fp, #-180]	; 0xffffff4c
   2fe78:	add	r3, r1, r3
   2fe7c:	ldr	r1, [fp, #-16]
   2fe80:	ldr	r3, [r3, r1, lsl #2]
   2fe84:	and	r2, r2, r3
   2fe88:	ldr	r3, [fp, #-16]
   2fe8c:	lsl	r3, r3, #2
   2fe90:	sub	r1, fp, #4
   2fe94:	add	r3, r1, r3
   2fe98:	str	r2, [r3, #-128]	; 0xffffff80
   2fe9c:	ldr	r3, [fp, #-16]
   2fea0:	lsl	r3, r3, #2
   2fea4:	sub	r2, fp, #4
   2fea8:	add	r3, r2, r3
   2feac:	ldr	r3, [r3, #-128]	; 0xffffff80
   2feb0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2feb4:	orr	r3, r2, r3
   2feb8:	str	r3, [fp, #-36]	; 0xffffffdc
   2febc:	ldr	r3, [fp, #-16]
   2fec0:	lsl	r3, r3, #2
   2fec4:	sub	r2, fp, #4
   2fec8:	add	r3, r2, r3
   2fecc:	ldr	r2, [r3, #-96]	; 0xffffffa0
   2fed0:	ldr	r3, [fp, #-12]
   2fed4:	lsl	r3, r3, #5
   2fed8:	ldr	r1, [fp, #-180]	; 0xffffff4c
   2fedc:	add	r3, r1, r3
   2fee0:	ldr	r1, [fp, #-16]
   2fee4:	ldr	r3, [r3, r1, lsl #2]
   2fee8:	mvn	r3, r3
   2feec:	and	r2, r2, r3
   2fef0:	ldr	r3, [fp, #-16]
   2fef4:	lsl	r3, r3, #2
   2fef8:	sub	r1, fp, #4
   2fefc:	add	r3, r1, r3
   2ff00:	str	r2, [r3, #-96]	; 0xffffffa0
   2ff04:	ldr	r3, [fp, #-16]
   2ff08:	lsl	r3, r3, #2
   2ff0c:	sub	r2, fp, #4
   2ff10:	add	r3, r2, r3
   2ff14:	ldr	r3, [r3, #-96]	; 0xffffffa0
   2ff18:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2ff1c:	orr	r3, r2, r3
   2ff20:	str	r3, [fp, #-40]	; 0xffffffd8
   2ff24:	ldr	r3, [fp, #-16]
   2ff28:	add	r3, r3, #1
   2ff2c:	str	r3, [fp, #-16]
   2ff30:	ldr	r3, [fp, #-16]
   2ff34:	cmp	r3, #7
   2ff38:	ble	2fe54 <__assert_fail@plt+0x1e910>
   2ff3c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2ff40:	cmp	r3, #0
   2ff44:	beq	2fffc <__assert_fail@plt+0x1eab8>
   2ff48:	ldr	r3, [fp, #-20]	; 0xffffffec
   2ff4c:	lsl	r3, r3, #5
   2ff50:	ldr	r2, [fp, #-180]	; 0xffffff4c
   2ff54:	add	r3, r2, r3
   2ff58:	sub	r2, fp, #132	; 0x84
   2ff5c:	mov	r1, r2
   2ff60:	mov	r0, r3
   2ff64:	bl	18054 <__assert_fail@plt+0x6b10>
   2ff68:	ldr	r3, [fp, #-12]
   2ff6c:	lsl	r3, r3, #5
   2ff70:	ldr	r2, [fp, #-180]	; 0xffffff4c
   2ff74:	add	r3, r2, r3
   2ff78:	sub	r2, fp, #164	; 0xa4
   2ff7c:	mov	r1, r2
   2ff80:	mov	r0, r3
   2ff84:	bl	18054 <__assert_fail@plt+0x6b10>
   2ff88:	ldr	r2, [fp, #-20]	; 0xffffffec
   2ff8c:	mov	r3, r2
   2ff90:	lsl	r3, r3, #1
   2ff94:	add	r3, r3, r2
   2ff98:	lsl	r3, r3, #2
   2ff9c:	mov	r2, r3
   2ffa0:	ldr	r3, [fp, #-176]	; 0xffffff50
   2ffa4:	add	r0, r3, r2
   2ffa8:	ldr	r2, [fp, #-12]
   2ffac:	mov	r3, r2
   2ffb0:	lsl	r3, r3, #1
   2ffb4:	add	r3, r3, r2
   2ffb8:	lsl	r3, r3, #2
   2ffbc:	mov	r2, r3
   2ffc0:	ldr	r3, [fp, #-176]	; 0xffffff50
   2ffc4:	add	r3, r3, r2
   2ffc8:	mov	r1, r3
   2ffcc:	bl	1b068 <__assert_fail@plt+0x9b24>
   2ffd0:	str	r0, [fp, #-64]	; 0xffffffc0
   2ffd4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2ffd8:	cmp	r3, #0
   2ffdc:	movne	r3, #1
   2ffe0:	moveq	r3, #0
   2ffe4:	uxtb	r3, r3
   2ffe8:	cmp	r3, #0
   2ffec:	bne	30190 <__assert_fail@plt+0x1ec4c>
   2fff0:	ldr	r3, [fp, #-20]	; 0xffffffec
   2fff4:	add	r3, r3, #1
   2fff8:	str	r3, [fp, #-20]	; 0xffffffec
   2fffc:	ldr	r2, [fp, #-12]
   30000:	mov	r3, r2
   30004:	lsl	r3, r3, #1
   30008:	add	r3, r3, r2
   3000c:	lsl	r3, r3, #2
   30010:	mov	r2, r3
   30014:	ldr	r3, [fp, #-176]	; 0xffffff50
   30018:	add	r0, r3, r2
   3001c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   30020:	ldr	r2, [r3, #8]
   30024:	ldr	r3, [fp, #-8]
   30028:	lsl	r3, r3, #2
   3002c:	add	r3, r2, r3
   30030:	ldr	r3, [r3]
   30034:	mov	r1, r3
   30038:	bl	1bdf4 <__assert_fail@plt+0xa8b0>
   3003c:	mov	r3, r0
   30040:	strb	r3, [fp, #-65]	; 0xffffffbf
   30044:	ldrb	r3, [fp, #-65]	; 0xffffffbf
   30048:	eor	r3, r3, #1
   3004c:	uxtb	r3, r3
   30050:	cmp	r3, #0
   30054:	bne	30198 <__assert_fail@plt+0x1ec54>
   30058:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3005c:	cmp	r3, #0
   30060:	beq	30094 <__assert_fail@plt+0x1eb50>
   30064:	b	30074 <__assert_fail@plt+0x1eb30>
   30068:	nop	{0}
   3006c:	b	30074 <__assert_fail@plt+0x1eb30>
   30070:	nop	{0}
   30074:	ldr	r3, [fp, #-12]
   30078:	add	r3, r3, #1
   3007c:	str	r3, [fp, #-12]
   30080:	ldr	r2, [fp, #-12]
   30084:	ldr	r3, [fp, #-20]	; 0xffffffec
   30088:	cmp	r2, r3
   3008c:	blt	2fd58 <__assert_fail@plt+0x1e814>
   30090:	b	30098 <__assert_fail@plt+0x1eb54>
   30094:	nop	{0}
   30098:	ldr	r2, [fp, #-12]
   3009c:	ldr	r3, [fp, #-20]	; 0xffffffec
   300a0:	cmp	r2, r3
   300a4:	bne	30160 <__assert_fail@plt+0x1ec1c>
   300a8:	ldr	r3, [fp, #-20]	; 0xffffffec
   300ac:	lsl	r3, r3, #5
   300b0:	ldr	r2, [fp, #-180]	; 0xffffff4c
   300b4:	add	r3, r2, r3
   300b8:	sub	r2, fp, #100	; 0x64
   300bc:	mov	r1, r2
   300c0:	mov	r0, r3
   300c4:	bl	18054 <__assert_fail@plt+0x6b10>
   300c8:	ldr	r2, [fp, #-20]	; 0xffffffec
   300cc:	mov	r3, r2
   300d0:	lsl	r3, r3, #1
   300d4:	add	r3, r3, r2
   300d8:	lsl	r3, r3, #2
   300dc:	mov	r2, r3
   300e0:	ldr	r3, [fp, #-176]	; 0xffffff50
   300e4:	add	r0, r3, r2
   300e8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   300ec:	ldr	r2, [r3, #8]
   300f0:	ldr	r3, [fp, #-8]
   300f4:	lsl	r3, r3, #2
   300f8:	add	r3, r2, r3
   300fc:	ldr	r3, [r3]
   30100:	mov	r1, r3
   30104:	bl	1ae9c <__assert_fail@plt+0x9958>
   30108:	str	r0, [fp, #-64]	; 0xffffffc0
   3010c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   30110:	cmp	r3, #0
   30114:	movne	r3, #1
   30118:	moveq	r3, #0
   3011c:	uxtb	r3, r3
   30120:	cmp	r3, #0
   30124:	bne	301a0 <__assert_fail@plt+0x1ec5c>
   30128:	ldr	r3, [fp, #-20]	; 0xffffffec
   3012c:	add	r3, r3, #1
   30130:	str	r3, [fp, #-20]	; 0xffffffec
   30134:	sub	r3, fp, #100	; 0x64
   30138:	mov	r0, r3
   3013c:	bl	17fe4 <__assert_fail@plt+0x6aa0>
   30140:	b	30160 <__assert_fail@plt+0x1ec1c>
   30144:	nop	{0}
   30148:	b	30160 <__assert_fail@plt+0x1ec1c>
   3014c:	nop	{0}
   30150:	b	30160 <__assert_fail@plt+0x1ec1c>
   30154:	nop	{0}
   30158:	b	30160 <__assert_fail@plt+0x1ec1c>
   3015c:	nop	{0}
   30160:	ldr	r3, [fp, #-8]
   30164:	add	r3, r3, #1
   30168:	str	r3, [fp, #-8]
   3016c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   30170:	ldr	r3, [r3, #4]
   30174:	ldr	r2, [fp, #-8]
   30178:	cmp	r2, r3
   3017c:	blt	2f81c <__assert_fail@plt+0x1e2d8>
   30180:	ldr	r3, [fp, #-20]	; 0xffffffec
   30184:	cmp	r3, #256	; 0x100
   30188:	ldr	r3, [fp, #-20]	; 0xffffffec
   3018c:	b	301fc <__assert_fail@plt+0x1ecb8>
   30190:	nop	{0}
   30194:	b	301a4 <__assert_fail@plt+0x1ec60>
   30198:	nop	{0}
   3019c:	b	301a4 <__assert_fail@plt+0x1ec60>
   301a0:	nop	{0}
   301a4:	mov	r3, #0
   301a8:	str	r3, [fp, #-12]
   301ac:	b	301e8 <__assert_fail@plt+0x1eca4>
   301b0:	ldr	r2, [fp, #-12]
   301b4:	mov	r3, r2
   301b8:	lsl	r3, r3, #1
   301bc:	add	r3, r3, r2
   301c0:	lsl	r3, r3, #2
   301c4:	mov	r2, r3
   301c8:	ldr	r3, [fp, #-176]	; 0xffffff50
   301cc:	add	r3, r3, r2
   301d0:	ldr	r3, [r3, #8]
   301d4:	mov	r0, r3
   301d8:	bl	151ec <__assert_fail@plt+0x3ca8>
   301dc:	ldr	r3, [fp, #-12]
   301e0:	add	r3, r3, #1
   301e4:	str	r3, [fp, #-12]
   301e8:	ldr	r2, [fp, #-12]
   301ec:	ldr	r3, [fp, #-20]	; 0xffffffec
   301f0:	cmp	r2, r3
   301f4:	blt	301b0 <__assert_fail@plt+0x1ec6c>
   301f8:	mvn	r3, #0
   301fc:	mov	r0, r3
   30200:	sub	sp, fp, #4
   30204:	ldr	fp, [sp]
   30208:	add	sp, sp, #4
   3020c:	pop	{pc}		; (ldr pc, [sp], #4)
   30210:	str	fp, [sp, #-8]!
   30214:	str	lr, [sp, #4]
   30218:	add	fp, sp, #4
   3021c:	sub	sp, sp, #56	; 0x38
   30220:	str	r0, [fp, #-48]	; 0xffffffd0
   30224:	str	r1, [fp, #-52]	; 0xffffffcc
   30228:	str	r2, [fp, #-56]	; 0xffffffc8
   3022c:	str	r3, [fp, #-60]	; 0xffffffc4
   30230:	ldr	r3, [fp, #-48]	; 0xffffffd0
   30234:	ldr	r2, [r3]
   30238:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3023c:	lsl	r3, r3, #3
   30240:	add	r3, r2, r3
   30244:	str	r3, [fp, #-20]	; 0xffffffec
   30248:	ldr	r3, [fp, #-20]	; 0xffffffec
   3024c:	ldrb	r3, [r3, #4]
   30250:	cmp	r3, #7
   30254:	moveq	r3, #1
   30258:	movne	r3, #0
   3025c:	uxtb	r3, r3
   30260:	cmp	r3, #0
   30264:	beq	30480 <__assert_fail@plt+0x1ef3c>
   30268:	ldr	r3, [fp, #-56]	; 0xffffffc8
   3026c:	ldr	r2, [r3, #4]
   30270:	ldr	r3, [fp, #-60]	; 0xffffffc4
   30274:	add	r3, r2, r3
   30278:	ldrb	r3, [r3]
   3027c:	strb	r3, [fp, #-21]	; 0xffffffeb
   30280:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   30284:	cmp	r3, #193	; 0xc1
   30288:	movls	r3, #1
   3028c:	movhi	r3, #0
   30290:	uxtb	r3, r3
   30294:	cmp	r3, #0
   30298:	beq	302a4 <__assert_fail@plt+0x1ed60>
   3029c:	mov	r3, #0
   302a0:	b	3076c <__assert_fail@plt+0x1f228>
   302a4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   302a8:	add	r2, r3, #1
   302ac:	ldr	r3, [fp, #-56]	; 0xffffffc8
   302b0:	ldr	r3, [r3, #48]	; 0x30
   302b4:	cmp	r2, r3
   302b8:	blt	302c4 <__assert_fail@plt+0x1ed80>
   302bc:	mov	r3, #0
   302c0:	b	3076c <__assert_fail@plt+0x1f228>
   302c4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   302c8:	ldr	r2, [r3, #4]
   302cc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   302d0:	add	r3, r3, #1
   302d4:	add	r3, r2, r3
   302d8:	ldrb	r3, [r3]
   302dc:	strb	r3, [fp, #-22]	; 0xffffffea
   302e0:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   302e4:	cmp	r3, #223	; 0xdf
   302e8:	bhi	30314 <__assert_fail@plt+0x1edd0>
   302ec:	ldrsb	r3, [fp, #-22]	; 0xffffffea
   302f0:	cmp	r3, #0
   302f4:	bge	30304 <__assert_fail@plt+0x1edc0>
   302f8:	ldrb	r3, [fp, #-22]	; 0xffffffea
   302fc:	cmp	r3, #191	; 0xbf
   30300:	bls	3030c <__assert_fail@plt+0x1edc8>
   30304:	mov	r3, #0
   30308:	b	3076c <__assert_fail@plt+0x1f228>
   3030c:	mov	r3, #2
   30310:	b	3076c <__assert_fail@plt+0x1f228>
   30314:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   30318:	cmp	r3, #239	; 0xef
   3031c:	bhi	30348 <__assert_fail@plt+0x1ee04>
   30320:	mov	r3, #3
   30324:	str	r3, [fp, #-8]
   30328:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   3032c:	cmp	r3, #224	; 0xe0
   30330:	bne	303ec <__assert_fail@plt+0x1eea8>
   30334:	ldrb	r3, [fp, #-22]	; 0xffffffea
   30338:	cmp	r3, #159	; 0x9f
   3033c:	bhi	303ec <__assert_fail@plt+0x1eea8>
   30340:	mov	r3, #0
   30344:	b	3076c <__assert_fail@plt+0x1f228>
   30348:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   3034c:	cmp	r3, #247	; 0xf7
   30350:	bhi	3037c <__assert_fail@plt+0x1ee38>
   30354:	mov	r3, #4
   30358:	str	r3, [fp, #-8]
   3035c:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   30360:	cmp	r3, #240	; 0xf0
   30364:	bne	303ec <__assert_fail@plt+0x1eea8>
   30368:	ldrb	r3, [fp, #-22]	; 0xffffffea
   3036c:	cmp	r3, #143	; 0x8f
   30370:	bhi	303ec <__assert_fail@plt+0x1eea8>
   30374:	mov	r3, #0
   30378:	b	3076c <__assert_fail@plt+0x1f228>
   3037c:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   30380:	cmp	r3, #251	; 0xfb
   30384:	bhi	303b0 <__assert_fail@plt+0x1ee6c>
   30388:	mov	r3, #5
   3038c:	str	r3, [fp, #-8]
   30390:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   30394:	cmp	r3, #248	; 0xf8
   30398:	bne	303ec <__assert_fail@plt+0x1eea8>
   3039c:	ldrb	r3, [fp, #-22]	; 0xffffffea
   303a0:	cmp	r3, #135	; 0x87
   303a4:	bhi	303ec <__assert_fail@plt+0x1eea8>
   303a8:	mov	r3, #0
   303ac:	b	3076c <__assert_fail@plt+0x1f228>
   303b0:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   303b4:	cmp	r3, #253	; 0xfd
   303b8:	bhi	303e4 <__assert_fail@plt+0x1eea0>
   303bc:	mov	r3, #6
   303c0:	str	r3, [fp, #-8]
   303c4:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   303c8:	cmp	r3, #252	; 0xfc
   303cc:	bne	303ec <__assert_fail@plt+0x1eea8>
   303d0:	ldrb	r3, [fp, #-22]	; 0xffffffea
   303d4:	cmp	r3, #131	; 0x83
   303d8:	bhi	303ec <__assert_fail@plt+0x1eea8>
   303dc:	mov	r3, #0
   303e0:	b	3076c <__assert_fail@plt+0x1f228>
   303e4:	mov	r3, #0
   303e8:	b	3076c <__assert_fail@plt+0x1f228>
   303ec:	ldr	r2, [fp, #-60]	; 0xffffffc4
   303f0:	ldr	r3, [fp, #-8]
   303f4:	add	r2, r2, r3
   303f8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   303fc:	ldr	r3, [r3, #48]	; 0x30
   30400:	cmp	r2, r3
   30404:	ble	30410 <__assert_fail@plt+0x1eecc>
   30408:	mov	r3, #0
   3040c:	b	3076c <__assert_fail@plt+0x1f228>
   30410:	mov	r3, #1
   30414:	str	r3, [fp, #-12]
   30418:	b	30468 <__assert_fail@plt+0x1ef24>
   3041c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   30420:	ldr	r3, [r3, #4]
   30424:	ldr	r1, [fp, #-60]	; 0xffffffc4
   30428:	ldr	r2, [fp, #-12]
   3042c:	add	r2, r1, r2
   30430:	add	r3, r3, r2
   30434:	ldrb	r3, [r3]
   30438:	strb	r3, [fp, #-22]	; 0xffffffea
   3043c:	ldrsb	r3, [fp, #-22]	; 0xffffffea
   30440:	cmp	r3, #0
   30444:	bge	30454 <__assert_fail@plt+0x1ef10>
   30448:	ldrb	r3, [fp, #-22]	; 0xffffffea
   3044c:	cmp	r3, #191	; 0xbf
   30450:	bls	3045c <__assert_fail@plt+0x1ef18>
   30454:	mov	r3, #0
   30458:	b	3076c <__assert_fail@plt+0x1f228>
   3045c:	ldr	r3, [fp, #-12]
   30460:	add	r3, r3, #1
   30464:	str	r3, [fp, #-12]
   30468:	ldr	r2, [fp, #-12]
   3046c:	ldr	r3, [fp, #-8]
   30470:	cmp	r2, r3
   30474:	blt	3041c <__assert_fail@plt+0x1eed8>
   30478:	ldr	r3, [fp, #-8]
   3047c:	b	3076c <__assert_fail@plt+0x1f228>
   30480:	ldr	r1, [fp, #-60]	; 0xffffffc4
   30484:	ldr	r0, [fp, #-56]	; 0xffffffc8
   30488:	bl	18210 <__assert_fail@plt+0x6ccc>
   3048c:	str	r0, [fp, #-8]
   30490:	ldr	r3, [fp, #-20]	; 0xffffffec
   30494:	ldrb	r3, [r3, #4]
   30498:	cmp	r3, #5
   3049c:	bne	30524 <__assert_fail@plt+0x1efe0>
   304a0:	ldr	r3, [fp, #-8]
   304a4:	cmp	r3, #1
   304a8:	bgt	304b4 <__assert_fail@plt+0x1ef70>
   304ac:	mov	r3, #0
   304b0:	b	3076c <__assert_fail@plt+0x1f228>
   304b4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   304b8:	ldr	r3, [r3, #128]	; 0x80
   304bc:	and	r3, r3, #64	; 0x40
   304c0:	cmp	r3, #0
   304c4:	bne	304e4 <__assert_fail@plt+0x1efa0>
   304c8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   304cc:	ldr	r2, [r3, #4]
   304d0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   304d4:	add	r3, r2, r3
   304d8:	ldrb	r3, [r3]
   304dc:	cmp	r3, #10
   304e0:	beq	30514 <__assert_fail@plt+0x1efd0>
   304e4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   304e8:	ldr	r3, [r3, #128]	; 0x80
   304ec:	and	r3, r3, #128	; 0x80
   304f0:	cmp	r3, #0
   304f4:	beq	3051c <__assert_fail@plt+0x1efd8>
   304f8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   304fc:	ldr	r2, [r3, #4]
   30500:	ldr	r3, [fp, #-60]	; 0xffffffc4
   30504:	add	r3, r2, r3
   30508:	ldrb	r3, [r3]
   3050c:	cmp	r3, #0
   30510:	bne	3051c <__assert_fail@plt+0x1efd8>
   30514:	mov	r3, #0
   30518:	b	3076c <__assert_fail@plt+0x1f228>
   3051c:	ldr	r3, [fp, #-8]
   30520:	b	3076c <__assert_fail@plt+0x1f228>
   30524:	ldr	r1, [fp, #-60]	; 0xffffffc4
   30528:	ldr	r0, [fp, #-56]	; 0xffffffc8
   3052c:	bl	18318 <__assert_fail@plt+0x6dd4>
   30530:	str	r0, [fp, #-28]	; 0xffffffe4
   30534:	ldr	r3, [fp, #-28]	; 0xffffffe4
   30538:	cmp	r3, #1
   3053c:	bgt	3054c <__assert_fail@plt+0x1f008>
   30540:	ldr	r3, [fp, #-8]
   30544:	cmp	r3, #1
   30548:	ble	30558 <__assert_fail@plt+0x1f014>
   3054c:	ldr	r3, [fp, #-8]
   30550:	cmp	r3, #0
   30554:	bne	30560 <__assert_fail@plt+0x1f01c>
   30558:	mov	r3, #0
   3055c:	b	3076c <__assert_fail@plt+0x1f228>
   30560:	ldr	r3, [fp, #-20]	; 0xffffffec
   30564:	ldrb	r3, [r3, #4]
   30568:	cmp	r3, #6
   3056c:	bne	30768 <__assert_fail@plt+0x1f224>
   30570:	ldr	r3, [fp, #-20]	; 0xffffffec
   30574:	ldr	r3, [r3]
   30578:	str	r3, [fp, #-32]	; 0xffffffe0
   3057c:	mov	r3, #0
   30580:	str	r3, [fp, #-16]
   30584:	ldr	r3, [fp, #-32]	; 0xffffffe0
   30588:	ldr	r3, [r3, #32]
   3058c:	cmp	r3, #0
   30590:	bne	305b4 <__assert_fail@plt+0x1f070>
   30594:	ldr	r3, [fp, #-32]	; 0xffffffe0
   30598:	ldr	r3, [r3, #36]	; 0x24
   3059c:	cmp	r3, #0
   305a0:	bne	305b4 <__assert_fail@plt+0x1f070>
   305a4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   305a8:	ldr	r3, [r3, #20]
   305ac:	cmp	r3, #0
   305b0:	beq	305c8 <__assert_fail@plt+0x1f084>
   305b4:	ldr	r1, [fp, #-60]	; 0xffffffc4
   305b8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   305bc:	bl	182b4 <__assert_fail@plt+0x6d70>
   305c0:	mov	r3, r0
   305c4:	b	305cc <__assert_fail@plt+0x1f088>
   305c8:	mov	r3, #0
   305cc:	str	r3, [fp, #-36]	; 0xffffffdc
   305d0:	mov	r3, #0
   305d4:	str	r3, [fp, #-12]
   305d8:	b	30618 <__assert_fail@plt+0x1f0d4>
   305dc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   305e0:	ldr	r2, [r3]
   305e4:	ldr	r3, [fp, #-12]
   305e8:	lsl	r3, r3, #2
   305ec:	add	r3, r2, r3
   305f0:	ldr	r3, [r3]
   305f4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   305f8:	cmp	r2, r3
   305fc:	bne	3060c <__assert_fail@plt+0x1f0c8>
   30600:	ldr	r3, [fp, #-8]
   30604:	str	r3, [fp, #-16]
   30608:	b	3071c <__assert_fail@plt+0x1f1d8>
   3060c:	ldr	r3, [fp, #-12]
   30610:	add	r3, r3, #1
   30614:	str	r3, [fp, #-12]
   30618:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3061c:	ldr	r3, [r3, #20]
   30620:	ldr	r2, [fp, #-12]
   30624:	cmp	r2, r3
   30628:	blt	305dc <__assert_fail@plt+0x1f098>
   3062c:	mov	r3, #0
   30630:	str	r3, [fp, #-12]
   30634:	b	30684 <__assert_fail@plt+0x1f140>
   30638:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3063c:	ldr	r2, [r3, #12]
   30640:	ldr	r3, [fp, #-12]
   30644:	lsl	r3, r3, #2
   30648:	add	r3, r2, r3
   3064c:	ldr	r3, [r3]
   30650:	str	r3, [fp, #-40]	; 0xffffffd8
   30654:	ldr	r1, [fp, #-40]	; 0xffffffd8
   30658:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3065c:	bl	111cc <iswctype@plt>
   30660:	mov	r3, r0
   30664:	cmp	r3, #0
   30668:	beq	30678 <__assert_fail@plt+0x1f134>
   3066c:	ldr	r3, [fp, #-8]
   30670:	str	r3, [fp, #-16]
   30674:	b	3071c <__assert_fail@plt+0x1f1d8>
   30678:	ldr	r3, [fp, #-12]
   3067c:	add	r3, r3, #1
   30680:	str	r3, [fp, #-12]
   30684:	ldr	r3, [fp, #-32]	; 0xffffffe0
   30688:	ldr	r3, [r3, #36]	; 0x24
   3068c:	ldr	r2, [fp, #-12]
   30690:	cmp	r2, r3
   30694:	blt	30638 <__assert_fail@plt+0x1f0f4>
   30698:	mov	r3, #0
   3069c:	str	r3, [fp, #-12]
   306a0:	b	30704 <__assert_fail@plt+0x1f1c0>
   306a4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   306a8:	ldr	r2, [r3, #4]
   306ac:	ldr	r3, [fp, #-12]
   306b0:	lsl	r3, r3, #2
   306b4:	add	r3, r2, r3
   306b8:	ldr	r3, [r3]
   306bc:	ldr	r2, [fp, #-36]	; 0xffffffdc
   306c0:	cmp	r2, r3
   306c4:	bcc	306f8 <__assert_fail@plt+0x1f1b4>
   306c8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   306cc:	ldr	r2, [r3, #8]
   306d0:	ldr	r3, [fp, #-12]
   306d4:	lsl	r3, r3, #2
   306d8:	add	r3, r2, r3
   306dc:	ldr	r3, [r3]
   306e0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   306e4:	cmp	r2, r3
   306e8:	bhi	306f8 <__assert_fail@plt+0x1f1b4>
   306ec:	ldr	r3, [fp, #-8]
   306f0:	str	r3, [fp, #-16]
   306f4:	b	3071c <__assert_fail@plt+0x1f1d8>
   306f8:	ldr	r3, [fp, #-12]
   306fc:	add	r3, r3, #1
   30700:	str	r3, [fp, #-12]
   30704:	ldr	r3, [fp, #-32]	; 0xffffffe0
   30708:	ldr	r3, [r3, #32]
   3070c:	ldr	r2, [fp, #-12]
   30710:	cmp	r2, r3
   30714:	blt	306a4 <__assert_fail@plt+0x1f160>
   30718:	nop	{0}
   3071c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   30720:	ldrb	r3, [r3, #16]
   30724:	and	r3, r3, #1
   30728:	uxtb	r3, r3
   3072c:	cmp	r3, #0
   30730:	bne	3073c <__assert_fail@plt+0x1f1f8>
   30734:	ldr	r3, [fp, #-16]
   30738:	b	3076c <__assert_fail@plt+0x1f228>
   3073c:	ldr	r3, [fp, #-16]
   30740:	cmp	r3, #0
   30744:	ble	30750 <__assert_fail@plt+0x1f20c>
   30748:	mov	r3, #0
   3074c:	b	3076c <__assert_fail@plt+0x1f228>
   30750:	ldr	r2, [fp, #-8]
   30754:	ldr	r3, [fp, #-28]	; 0xffffffe4
   30758:	cmp	r2, r3
   3075c:	movge	r3, r2
   30760:	movlt	r3, r3
   30764:	b	3076c <__assert_fail@plt+0x1f228>
   30768:	mov	r3, #0
   3076c:	mov	r0, r3
   30770:	sub	sp, fp, #4
   30774:	ldr	fp, [sp]
   30778:	add	sp, sp, #4
   3077c:	pop	{pc}		; (ldr pc, [sp], #4)
   30780:	str	fp, [sp, #-8]!
   30784:	str	lr, [sp, #4]
   30788:	add	fp, sp, #4
   3078c:	sub	sp, sp, #24
   30790:	str	r0, [fp, #-16]
   30794:	str	r1, [fp, #-20]	; 0xffffffec
   30798:	str	r2, [fp, #-24]	; 0xffffffe8
   3079c:	ldr	r3, [fp, #-16]
   307a0:	ldr	r2, [r3, #4]
   307a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   307a8:	add	r3, r2, r3
   307ac:	ldrb	r3, [r3]
   307b0:	strb	r3, [fp, #-5]
   307b4:	ldr	r3, [fp, #-20]	; 0xffffffec
   307b8:	ldrb	r3, [r3, #4]
   307bc:	sub	r3, r3, #1
   307c0:	cmp	r3, #6
   307c4:	ldrls	pc, [pc, r3, lsl #2]
   307c8:	b	3089c <__assert_fail@plt+0x1f358>
   307cc:	andeq	r0, r3, r8, ror #15
   307d0:	muleq	r3, ip, r8
   307d4:	andeq	r0, r3, r4, lsl #16
   307d8:	muleq	r3, ip, r8
   307dc:	andeq	r0, r3, ip, asr #16
   307e0:	muleq	r3, ip, r8
   307e4:	andeq	r0, r3, r8, lsr r8
   307e8:	ldr	r3, [fp, #-20]	; 0xffffffec
   307ec:	ldrb	r3, [r3]
   307f0:	ldrb	r2, [fp, #-5]
   307f4:	cmp	r2, r3
   307f8:	beq	308a4 <__assert_fail@plt+0x1f360>
   307fc:	mov	r3, #0
   30800:	b	309ac <__assert_fail@plt+0x1f468>
   30804:	ldr	r3, [fp, #-20]	; 0xffffffec
   30808:	ldr	r3, [r3]
   3080c:	ldrb	r2, [fp, #-5]
   30810:	mov	r1, r2
   30814:	mov	r0, r3
   30818:	bl	17f6c <__assert_fail@plt+0x6a28>
   3081c:	mov	r3, r0
   30820:	eor	r3, r3, #1
   30824:	uxtb	r3, r3
   30828:	cmp	r3, #0
   3082c:	beq	308ac <__assert_fail@plt+0x1f368>
   30830:	mov	r3, #0
   30834:	b	309ac <__assert_fail@plt+0x1f468>
   30838:	ldrsb	r3, [fp, #-5]
   3083c:	cmp	r3, #0
   30840:	bge	3084c <__assert_fail@plt+0x1f308>
   30844:	mov	r3, #0
   30848:	b	309ac <__assert_fail@plt+0x1f468>
   3084c:	ldrb	r3, [fp, #-5]
   30850:	cmp	r3, #10
   30854:	bne	30870 <__assert_fail@plt+0x1f32c>
   30858:	ldr	r3, [fp, #-16]
   3085c:	ldr	r3, [r3, #84]	; 0x54
   30860:	ldr	r3, [r3, #128]	; 0x80
   30864:	and	r3, r3, #64	; 0x40
   30868:	cmp	r3, #0
   3086c:	beq	30894 <__assert_fail@plt+0x1f350>
   30870:	ldrb	r3, [fp, #-5]
   30874:	cmp	r3, #0
   30878:	bne	308b4 <__assert_fail@plt+0x1f370>
   3087c:	ldr	r3, [fp, #-16]
   30880:	ldr	r3, [r3, #84]	; 0x54
   30884:	ldr	r3, [r3, #128]	; 0x80
   30888:	and	r3, r3, #128	; 0x80
   3088c:	cmp	r3, #0
   30890:	beq	308b4 <__assert_fail@plt+0x1f370>
   30894:	mov	r3, #0
   30898:	b	309ac <__assert_fail@plt+0x1f468>
   3089c:	mov	r3, #0
   308a0:	b	309ac <__assert_fail@plt+0x1f468>
   308a4:	nop	{0}
   308a8:	b	308b8 <__assert_fail@plt+0x1f374>
   308ac:	nop	{0}
   308b0:	b	308b8 <__assert_fail@plt+0x1f374>
   308b4:	nop	{0}
   308b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   308bc:	ldr	r2, [r3, #4]
   308c0:	mov	r3, #65280	; 0xff00
   308c4:	movt	r3, #3
   308c8:	and	r3, r3, r2
   308cc:	cmp	r3, #0
   308d0:	beq	309a8 <__assert_fail@plt+0x1f464>
   308d4:	ldr	r0, [fp, #-16]
   308d8:	ldr	r3, [fp, #-16]
   308dc:	ldr	r3, [r3, #88]	; 0x58
   308e0:	mov	r2, r3
   308e4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   308e8:	bl	1ac18 <__assert_fail@plt+0x96d4>
   308ec:	str	r0, [fp, #-12]
   308f0:	ldr	r3, [fp, #-20]	; 0xffffffec
   308f4:	ldr	r3, [r3, #4]
   308f8:	ubfx	r3, r3, #8, #10
   308fc:	uxth	r3, r3
   30900:	and	r3, r3, #4
   30904:	cmp	r3, #0
   30908:	beq	3091c <__assert_fail@plt+0x1f3d8>
   3090c:	ldr	r3, [fp, #-12]
   30910:	and	r3, r3, #1
   30914:	cmp	r3, #0
   30918:	beq	309a0 <__assert_fail@plt+0x1f45c>
   3091c:	ldr	r3, [fp, #-20]	; 0xffffffec
   30920:	ldr	r3, [r3, #4]
   30924:	ubfx	r3, r3, #8, #10
   30928:	uxth	r3, r3
   3092c:	and	r3, r3, #8
   30930:	cmp	r3, #0
   30934:	beq	30948 <__assert_fail@plt+0x1f404>
   30938:	ldr	r3, [fp, #-12]
   3093c:	and	r3, r3, #1
   30940:	cmp	r3, #0
   30944:	bne	309a0 <__assert_fail@plt+0x1f45c>
   30948:	ldr	r3, [fp, #-20]	; 0xffffffec
   3094c:	ldr	r3, [r3, #4]
   30950:	ubfx	r3, r3, #8, #10
   30954:	uxth	r3, r3
   30958:	and	r3, r3, #32
   3095c:	cmp	r3, #0
   30960:	beq	30974 <__assert_fail@plt+0x1f430>
   30964:	ldr	r3, [fp, #-12]
   30968:	and	r3, r3, #2
   3096c:	cmp	r3, #0
   30970:	beq	309a0 <__assert_fail@plt+0x1f45c>
   30974:	ldr	r3, [fp, #-20]	; 0xffffffec
   30978:	ldr	r3, [r3, #4]
   3097c:	ubfx	r3, r3, #8, #10
   30980:	uxth	r3, r3
   30984:	and	r3, r3, #128	; 0x80
   30988:	cmp	r3, #0
   3098c:	beq	309a8 <__assert_fail@plt+0x1f464>
   30990:	ldr	r3, [fp, #-12]
   30994:	and	r3, r3, #8
   30998:	cmp	r3, #0
   3099c:	bne	309a8 <__assert_fail@plt+0x1f464>
   309a0:	mov	r3, #0
   309a4:	b	309ac <__assert_fail@plt+0x1f468>
   309a8:	mov	r3, #1
   309ac:	mov	r0, r3
   309b0:	sub	sp, fp, #4
   309b4:	ldr	fp, [sp]
   309b8:	add	sp, sp, #4
   309bc:	pop	{pc}		; (ldr pc, [sp], #4)
   309c0:	str	fp, [sp, #-8]!
   309c4:	str	lr, [sp, #4]
   309c8:	add	fp, sp, #4
   309cc:	sub	sp, sp, #24
   309d0:	str	r0, [fp, #-24]	; 0xffffffe8
   309d4:	str	r1, [fp, #-28]	; 0xffffffe4
   309d8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   309dc:	str	r3, [fp, #-8]
   309e0:	ldr	r3, [fp, #-8]
   309e4:	ldr	r3, [r3, #36]	; 0x24
   309e8:	cmn	r3, #-536870910	; 0xe0000002
   309ec:	movhi	r3, #1
   309f0:	movls	r3, #0
   309f4:	uxtb	r3, r3
   309f8:	cmp	r3, #0
   309fc:	beq	30a08 <__assert_fail@plt+0x1f4c4>
   30a00:	mov	r3, #12
   30a04:	b	30b68 <__assert_fail@plt+0x1f624>
   30a08:	ldr	r3, [fp, #-8]
   30a0c:	ldr	r3, [r3, #36]	; 0x24
   30a10:	lsl	r2, r3, #1
   30a14:	ldr	r3, [fp, #-8]
   30a18:	ldr	r3, [r3, #48]	; 0x30
   30a1c:	cmp	r2, r3
   30a20:	movlt	r2, r2
   30a24:	movge	r2, r3
   30a28:	ldr	r3, [fp, #-28]	; 0xffffffe4
   30a2c:	cmp	r2, r3
   30a30:	movge	r3, r2
   30a34:	movlt	r3, r3
   30a38:	mov	r1, r3
   30a3c:	ldr	r0, [fp, #-8]
   30a40:	bl	186b4 <__assert_fail@plt+0x7170>
   30a44:	str	r0, [fp, #-12]
   30a48:	ldr	r3, [fp, #-12]
   30a4c:	cmp	r3, #0
   30a50:	movne	r3, #1
   30a54:	moveq	r3, #0
   30a58:	uxtb	r3, r3
   30a5c:	cmp	r3, #0
   30a60:	beq	30a6c <__assert_fail@plt+0x1f528>
   30a64:	ldr	r3, [fp, #-12]
   30a68:	b	30b68 <__assert_fail@plt+0x1f624>
   30a6c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30a70:	ldr	r3, [r3, #100]	; 0x64
   30a74:	cmp	r3, #0
   30a78:	beq	30ad4 <__assert_fail@plt+0x1f590>
   30a7c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30a80:	ldr	r2, [r3, #100]	; 0x64
   30a84:	ldr	r3, [fp, #-8]
   30a88:	ldr	r3, [r3, #36]	; 0x24
   30a8c:	add	r3, r3, #1
   30a90:	lsl	r3, r3, #2
   30a94:	mov	r1, r3
   30a98:	mov	r0, r2
   30a9c:	bl	33c30 <__assert_fail@plt+0x226ec>
   30aa0:	str	r0, [fp, #-16]
   30aa4:	ldr	r3, [fp, #-16]
   30aa8:	cmp	r3, #0
   30aac:	moveq	r3, #1
   30ab0:	movne	r3, #0
   30ab4:	uxtb	r3, r3
   30ab8:	cmp	r3, #0
   30abc:	beq	30ac8 <__assert_fail@plt+0x1f584>
   30ac0:	mov	r3, #12
   30ac4:	b	30b68 <__assert_fail@plt+0x1f624>
   30ac8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30acc:	ldr	r2, [fp, #-16]
   30ad0:	str	r2, [r3, #100]	; 0x64
   30ad4:	ldr	r3, [fp, #-8]
   30ad8:	ldrb	r3, [r3, #72]	; 0x48
   30adc:	cmp	r3, #0
   30ae0:	beq	30b30 <__assert_fail@plt+0x1f5ec>
   30ae4:	ldr	r3, [fp, #-8]
   30ae8:	ldr	r3, [r3, #80]	; 0x50
   30aec:	cmp	r3, #1
   30af0:	ble	30b24 <__assert_fail@plt+0x1f5e0>
   30af4:	ldr	r0, [fp, #-8]
   30af8:	bl	18ce4 <__assert_fail@plt+0x77a0>
   30afc:	str	r0, [fp, #-12]
   30b00:	ldr	r3, [fp, #-12]
   30b04:	cmp	r3, #0
   30b08:	movne	r3, #1
   30b0c:	moveq	r3, #0
   30b10:	uxtb	r3, r3
   30b14:	cmp	r3, #0
   30b18:	beq	30b64 <__assert_fail@plt+0x1f620>
   30b1c:	ldr	r3, [fp, #-12]
   30b20:	b	30b68 <__assert_fail@plt+0x1f624>
   30b24:	ldr	r0, [fp, #-8]
   30b28:	bl	199d0 <__assert_fail@plt+0x848c>
   30b2c:	b	30b64 <__assert_fail@plt+0x1f620>
   30b30:	ldr	r3, [fp, #-8]
   30b34:	ldr	r3, [r3, #80]	; 0x50
   30b38:	cmp	r3, #1
   30b3c:	ble	30b4c <__assert_fail@plt+0x1f608>
   30b40:	ldr	r0, [fp, #-8]
   30b44:	bl	18960 <__assert_fail@plt+0x741c>
   30b48:	b	30b64 <__assert_fail@plt+0x1f620>
   30b4c:	ldr	r3, [fp, #-8]
   30b50:	ldr	r3, [r3, #64]	; 0x40
   30b54:	cmp	r3, #0
   30b58:	beq	30b64 <__assert_fail@plt+0x1f620>
   30b5c:	ldr	r0, [fp, #-8]
   30b60:	bl	19adc <__assert_fail@plt+0x8598>
   30b64:	mov	r3, #0
   30b68:	mov	r0, r3
   30b6c:	sub	sp, fp, #4
   30b70:	ldr	fp, [sp]
   30b74:	add	sp, sp, #4
   30b78:	pop	{pc}		; (ldr pc, [sp], #4)
   30b7c:	str	fp, [sp, #-8]!
   30b80:	str	lr, [sp, #4]
   30b84:	add	fp, sp, #4
   30b88:	sub	sp, sp, #24
   30b8c:	str	r0, [fp, #-16]
   30b90:	str	r1, [fp, #-20]	; 0xffffffec
   30b94:	str	r2, [fp, #-24]	; 0xffffffe8
   30b98:	ldr	r3, [fp, #-16]
   30b9c:	ldr	r2, [fp, #-20]	; 0xffffffec
   30ba0:	str	r2, [r3, #88]	; 0x58
   30ba4:	ldr	r3, [fp, #-16]
   30ba8:	mvn	r2, #0
   30bac:	str	r2, [r3, #92]	; 0x5c
   30bb0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30bb4:	cmp	r3, #0
   30bb8:	ble	30ca4 <__assert_fail@plt+0x1f760>
   30bbc:	mov	r3, #24
   30bc0:	str	r3, [fp, #-8]
   30bc4:	mvn	r2, #0
   30bc8:	ldr	r3, [fp, #-8]
   30bcc:	udiv	r3, r2, r3
   30bd0:	cmp	r3, #0
   30bd4:	blt	30be8 <__assert_fail@plt+0x1f6a4>
   30bd8:	mvn	r2, #0
   30bdc:	ldr	r3, [fp, #-8]
   30be0:	udiv	r3, r2, r3
   30be4:	b	30bec <__assert_fail@plt+0x1f6a8>
   30be8:	mvn	r3, #-2147483648	; 0x80000000
   30bec:	ldr	r2, [fp, #-24]	; 0xffffffe8
   30bf0:	cmp	r3, r2
   30bf4:	movcc	r3, #1
   30bf8:	movcs	r3, #0
   30bfc:	uxtb	r3, r3
   30c00:	cmp	r3, #0
   30c04:	beq	30c10 <__assert_fail@plt+0x1f6cc>
   30c08:	mov	r3, #12
   30c0c:	b	30ccc <__assert_fail@plt+0x1f788>
   30c10:	ldr	r2, [fp, #-24]	; 0xffffffe8
   30c14:	mov	r3, r2
   30c18:	lsl	r3, r3, #1
   30c1c:	add	r3, r3, r2
   30c20:	lsl	r3, r3, #3
   30c24:	mov	r0, r3
   30c28:	bl	33ba0 <__assert_fail@plt+0x2265c>
   30c2c:	mov	r3, r0
   30c30:	mov	r2, r3
   30c34:	ldr	r3, [fp, #-16]
   30c38:	str	r2, [r3, #116]	; 0x74
   30c3c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30c40:	lsl	r3, r3, #2
   30c44:	mov	r0, r3
   30c48:	bl	33ba0 <__assert_fail@plt+0x2265c>
   30c4c:	mov	r3, r0
   30c50:	mov	r2, r3
   30c54:	ldr	r3, [fp, #-16]
   30c58:	str	r2, [r3, #132]	; 0x84
   30c5c:	ldr	r3, [fp, #-16]
   30c60:	ldr	r3, [r3, #116]	; 0x74
   30c64:	cmp	r3, #0
   30c68:	moveq	r3, #1
   30c6c:	movne	r3, #0
   30c70:	uxtb	r3, r3
   30c74:	cmp	r3, #0
   30c78:	bne	30c9c <__assert_fail@plt+0x1f758>
   30c7c:	ldr	r3, [fp, #-16]
   30c80:	ldr	r3, [r3, #132]	; 0x84
   30c84:	cmp	r3, #0
   30c88:	moveq	r3, #1
   30c8c:	movne	r3, #0
   30c90:	uxtb	r3, r3
   30c94:	cmp	r3, #0
   30c98:	beq	30ca4 <__assert_fail@plt+0x1f760>
   30c9c:	mov	r3, #12
   30ca0:	b	30ccc <__assert_fail@plt+0x1f788>
   30ca4:	ldr	r3, [fp, #-16]
   30ca8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   30cac:	str	r2, [r3, #112]	; 0x70
   30cb0:	ldr	r3, [fp, #-16]
   30cb4:	mov	r2, #1
   30cb8:	str	r2, [r3, #120]	; 0x78
   30cbc:	ldr	r3, [fp, #-16]
   30cc0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   30cc4:	str	r2, [r3, #128]	; 0x80
   30cc8:	mov	r3, #0
   30ccc:	mov	r0, r3
   30cd0:	sub	sp, fp, #4
   30cd4:	ldr	fp, [sp]
   30cd8:	add	sp, sp, #4
   30cdc:	pop	{pc}		; (ldr pc, [sp], #4)
   30ce0:	str	fp, [sp, #-8]!
   30ce4:	str	lr, [sp, #4]
   30ce8:	add	fp, sp, #4
   30cec:	sub	sp, sp, #24
   30cf0:	str	r0, [fp, #-24]	; 0xffffffe8
   30cf4:	mov	r3, #0
   30cf8:	str	r3, [fp, #-8]
   30cfc:	b	30dd4 <__assert_fail@plt+0x1f890>
   30d00:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30d04:	ldr	r2, [r3, #132]	; 0x84
   30d08:	ldr	r3, [fp, #-8]
   30d0c:	lsl	r3, r3, #2
   30d10:	add	r3, r2, r3
   30d14:	ldr	r3, [r3]
   30d18:	str	r3, [fp, #-16]
   30d1c:	mov	r3, #0
   30d20:	str	r3, [fp, #-12]
   30d24:	b	30d68 <__assert_fail@plt+0x1f824>
   30d28:	ldr	r3, [fp, #-16]
   30d2c:	ldr	r2, [r3, #20]
   30d30:	ldr	r3, [fp, #-12]
   30d34:	lsl	r3, r3, #2
   30d38:	add	r3, r2, r3
   30d3c:	ldr	r3, [r3]
   30d40:	str	r3, [fp, #-20]	; 0xffffffec
   30d44:	ldr	r3, [fp, #-20]	; 0xffffffec
   30d48:	ldr	r3, [r3, #16]
   30d4c:	mov	r0, r3
   30d50:	bl	151ec <__assert_fail@plt+0x3ca8>
   30d54:	ldr	r0, [fp, #-20]	; 0xffffffec
   30d58:	bl	151ec <__assert_fail@plt+0x3ca8>
   30d5c:	ldr	r3, [fp, #-12]
   30d60:	add	r3, r3, #1
   30d64:	str	r3, [fp, #-12]
   30d68:	ldr	r3, [fp, #-16]
   30d6c:	ldr	r3, [r3, #16]
   30d70:	ldr	r2, [fp, #-12]
   30d74:	cmp	r2, r3
   30d78:	blt	30d28 <__assert_fail@plt+0x1f7e4>
   30d7c:	ldr	r3, [fp, #-16]
   30d80:	ldr	r3, [r3, #20]
   30d84:	mov	r0, r3
   30d88:	bl	151ec <__assert_fail@plt+0x3ca8>
   30d8c:	ldr	r3, [fp, #-16]
   30d90:	ldr	r3, [r3, #8]
   30d94:	cmp	r3, #0
   30d98:	beq	30dc0 <__assert_fail@plt+0x1f87c>
   30d9c:	ldr	r3, [fp, #-16]
   30da0:	ldr	r3, [r3, #8]
   30da4:	ldr	r3, [r3, #8]
   30da8:	mov	r0, r3
   30dac:	bl	151ec <__assert_fail@plt+0x3ca8>
   30db0:	ldr	r3, [fp, #-16]
   30db4:	ldr	r3, [r3, #8]
   30db8:	mov	r0, r3
   30dbc:	bl	151ec <__assert_fail@plt+0x3ca8>
   30dc0:	ldr	r0, [fp, #-16]
   30dc4:	bl	151ec <__assert_fail@plt+0x3ca8>
   30dc8:	ldr	r3, [fp, #-8]
   30dcc:	add	r3, r3, #1
   30dd0:	str	r3, [fp, #-8]
   30dd4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30dd8:	ldr	r3, [r3, #124]	; 0x7c
   30ddc:	ldr	r2, [fp, #-8]
   30de0:	cmp	r2, r3
   30de4:	blt	30d00 <__assert_fail@plt+0x1f7bc>
   30de8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30dec:	mov	r2, #0
   30df0:	str	r2, [r3, #124]	; 0x7c
   30df4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30df8:	mov	r2, #0
   30dfc:	str	r2, [r3, #108]	; 0x6c
   30e00:	nop	{0}
   30e04:	sub	sp, fp, #4
   30e08:	ldr	fp, [sp]
   30e0c:	add	sp, sp, #4
   30e10:	pop	{pc}		; (ldr pc, [sp], #4)
   30e14:	str	fp, [sp, #-8]!
   30e18:	str	lr, [sp, #4]
   30e1c:	add	fp, sp, #4
   30e20:	sub	sp, sp, #8
   30e24:	str	r0, [fp, #-8]
   30e28:	ldr	r0, [fp, #-8]
   30e2c:	bl	30ce0 <__assert_fail@plt+0x1f79c>
   30e30:	ldr	r3, [fp, #-8]
   30e34:	ldr	r3, [r3, #132]	; 0x84
   30e38:	mov	r0, r3
   30e3c:	bl	151ec <__assert_fail@plt+0x3ca8>
   30e40:	ldr	r3, [fp, #-8]
   30e44:	ldr	r3, [r3, #116]	; 0x74
   30e48:	mov	r0, r3
   30e4c:	bl	151ec <__assert_fail@plt+0x3ca8>
   30e50:	nop	{0}
   30e54:	sub	sp, fp, #4
   30e58:	ldr	fp, [sp]
   30e5c:	add	sp, sp, #4
   30e60:	pop	{pc}		; (ldr pc, [sp], #4)
   30e64:	str	fp, [sp, #-8]!
   30e68:	str	lr, [sp, #4]
   30e6c:	add	fp, sp, #4
   30e70:	sub	sp, sp, #24
   30e74:	str	r0, [fp, #-16]
   30e78:	str	r1, [fp, #-20]	; 0xffffffec
   30e7c:	str	r2, [fp, #-24]	; 0xffffffe8
   30e80:	str	r3, [fp, #-28]	; 0xffffffe4
   30e84:	ldr	r3, [fp, #-16]
   30e88:	ldr	r2, [r3, #108]	; 0x6c
   30e8c:	ldr	r3, [fp, #-16]
   30e90:	ldr	r3, [r3, #112]	; 0x70
   30e94:	cmp	r2, r3
   30e98:	blt	30f70 <__assert_fail@plt+0x1fa2c>
   30e9c:	ldr	r3, [fp, #-16]
   30ea0:	ldr	r0, [r3, #116]	; 0x74
   30ea4:	ldr	r3, [fp, #-16]
   30ea8:	ldr	r3, [r3, #112]	; 0x70
   30eac:	mov	r2, r3
   30eb0:	mov	r3, r2
   30eb4:	lsl	r3, r3, #1
   30eb8:	add	r3, r3, r2
   30ebc:	lsl	r3, r3, #4
   30ec0:	mov	r1, r3
   30ec4:	bl	33c30 <__assert_fail@plt+0x226ec>
   30ec8:	str	r0, [fp, #-8]
   30ecc:	ldr	r3, [fp, #-8]
   30ed0:	cmp	r3, #0
   30ed4:	moveq	r3, #1
   30ed8:	movne	r3, #0
   30edc:	uxtb	r3, r3
   30ee0:	cmp	r3, #0
   30ee4:	beq	30f00 <__assert_fail@plt+0x1f9bc>
   30ee8:	ldr	r3, [fp, #-16]
   30eec:	ldr	r3, [r3, #116]	; 0x74
   30ef0:	mov	r0, r3
   30ef4:	bl	151ec <__assert_fail@plt+0x3ca8>
   30ef8:	mov	r3, #12
   30efc:	b	31168 <__assert_fail@plt+0x1fc24>
   30f00:	ldr	r3, [fp, #-16]
   30f04:	ldr	r2, [fp, #-8]
   30f08:	str	r2, [r3, #116]	; 0x74
   30f0c:	ldr	r3, [fp, #-16]
   30f10:	ldr	r2, [r3, #116]	; 0x74
   30f14:	ldr	r3, [fp, #-16]
   30f18:	ldr	r3, [r3, #108]	; 0x6c
   30f1c:	mov	r1, r3
   30f20:	mov	r3, r1
   30f24:	lsl	r3, r3, #1
   30f28:	add	r3, r3, r1
   30f2c:	lsl	r3, r3, #3
   30f30:	add	r0, r2, r3
   30f34:	ldr	r3, [fp, #-16]
   30f38:	ldr	r3, [r3, #112]	; 0x70
   30f3c:	mov	r2, r3
   30f40:	mov	r3, r2
   30f44:	lsl	r3, r3, #1
   30f48:	add	r3, r3, r2
   30f4c:	lsl	r3, r3, #3
   30f50:	mov	r2, r3
   30f54:	mov	r1, #0
   30f58:	bl	11448 <memset@plt>
   30f5c:	ldr	r3, [fp, #-16]
   30f60:	ldr	r3, [r3, #112]	; 0x70
   30f64:	lsl	r2, r3, #1
   30f68:	ldr	r3, [fp, #-16]
   30f6c:	str	r2, [r3, #112]	; 0x70
   30f70:	ldr	r3, [fp, #-16]
   30f74:	ldr	r3, [r3, #108]	; 0x6c
   30f78:	cmp	r3, #0
   30f7c:	ble	30ff0 <__assert_fail@plt+0x1faac>
   30f80:	ldr	r3, [fp, #-16]
   30f84:	ldr	r2, [r3, #116]	; 0x74
   30f88:	ldr	r3, [fp, #-16]
   30f8c:	ldr	r3, [r3, #108]	; 0x6c
   30f90:	mov	r1, r3
   30f94:	mov	r3, r1
   30f98:	lsl	r3, r3, #1
   30f9c:	add	r3, r3, r1
   30fa0:	lsl	r3, r3, #3
   30fa4:	sub	r3, r3, #24
   30fa8:	add	r3, r2, r3
   30fac:	ldr	r3, [r3, #4]
   30fb0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   30fb4:	cmp	r2, r3
   30fb8:	bne	30ff0 <__assert_fail@plt+0x1faac>
   30fbc:	ldr	r3, [fp, #-16]
   30fc0:	ldr	r2, [r3, #116]	; 0x74
   30fc4:	ldr	r3, [fp, #-16]
   30fc8:	ldr	r3, [r3, #108]	; 0x6c
   30fcc:	mov	r1, r3
   30fd0:	mov	r3, r1
   30fd4:	lsl	r3, r3, #1
   30fd8:	add	r3, r3, r1
   30fdc:	lsl	r3, r3, #3
   30fe0:	sub	r3, r3, #24
   30fe4:	add	r3, r2, r3
   30fe8:	mov	r2, #1
   30fec:	strb	r2, [r3, #20]
   30ff0:	ldr	r3, [fp, #-16]
   30ff4:	ldr	r2, [r3, #116]	; 0x74
   30ff8:	ldr	r3, [fp, #-16]
   30ffc:	ldr	r3, [r3, #108]	; 0x6c
   31000:	mov	r1, r3
   31004:	mov	r3, r1
   31008:	lsl	r3, r3, #1
   3100c:	add	r3, r3, r1
   31010:	lsl	r3, r3, #3
   31014:	add	r3, r2, r3
   31018:	ldr	r2, [fp, #-20]	; 0xffffffec
   3101c:	str	r2, [r3]
   31020:	ldr	r3, [fp, #-16]
   31024:	ldr	r2, [r3, #116]	; 0x74
   31028:	ldr	r3, [fp, #-16]
   3102c:	ldr	r3, [r3, #108]	; 0x6c
   31030:	mov	r1, r3
   31034:	mov	r3, r1
   31038:	lsl	r3, r3, #1
   3103c:	add	r3, r3, r1
   31040:	lsl	r3, r3, #3
   31044:	add	r3, r2, r3
   31048:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3104c:	str	r2, [r3, #4]
   31050:	ldr	r3, [fp, #-16]
   31054:	ldr	r2, [r3, #116]	; 0x74
   31058:	ldr	r3, [fp, #-16]
   3105c:	ldr	r3, [r3, #108]	; 0x6c
   31060:	mov	r1, r3
   31064:	mov	r3, r1
   31068:	lsl	r3, r3, #1
   3106c:	add	r3, r3, r1
   31070:	lsl	r3, r3, #3
   31074:	add	r3, r2, r3
   31078:	ldr	r2, [fp, #-28]	; 0xffffffe4
   3107c:	str	r2, [r3, #8]
   31080:	ldr	r3, [fp, #-16]
   31084:	ldr	r2, [r3, #116]	; 0x74
   31088:	ldr	r3, [fp, #-16]
   3108c:	ldr	r3, [r3, #108]	; 0x6c
   31090:	mov	r1, r3
   31094:	mov	r3, r1
   31098:	lsl	r3, r3, #1
   3109c:	add	r3, r3, r1
   310a0:	lsl	r3, r3, #3
   310a4:	add	r3, r2, r3
   310a8:	ldr	r2, [fp, #4]
   310ac:	str	r2, [r3, #12]
   310b0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   310b4:	ldr	r3, [fp, #4]
   310b8:	cmp	r2, r3
   310bc:	bne	310c8 <__assert_fail@plt+0x1fb84>
   310c0:	mvn	r2, #0
   310c4:	b	310cc <__assert_fail@plt+0x1fb88>
   310c8:	mov	r2, #0
   310cc:	ldr	r3, [fp, #-16]
   310d0:	ldr	r1, [r3, #116]	; 0x74
   310d4:	ldr	r3, [fp, #-16]
   310d8:	ldr	r3, [r3, #108]	; 0x6c
   310dc:	mov	r0, r3
   310e0:	mov	r3, r0
   310e4:	lsl	r3, r3, #1
   310e8:	add	r3, r3, r0
   310ec:	lsl	r3, r3, #3
   310f0:	add	r3, r1, r3
   310f4:	str	r2, [r3, #16]
   310f8:	ldr	r3, [fp, #-16]
   310fc:	ldr	r2, [r3, #116]	; 0x74
   31100:	ldr	r3, [fp, #-16]
   31104:	ldr	r3, [r3, #108]	; 0x6c
   31108:	add	r0, r3, #1
   3110c:	ldr	r1, [fp, #-16]
   31110:	str	r0, [r1, #108]	; 0x6c
   31114:	mov	r1, r3
   31118:	mov	r3, r1
   3111c:	lsl	r3, r3, #1
   31120:	add	r3, r3, r1
   31124:	lsl	r3, r3, #3
   31128:	add	r3, r2, r3
   3112c:	mov	r2, #0
   31130:	strb	r2, [r3, #20]
   31134:	ldr	r3, [fp, #-16]
   31138:	ldr	r2, [r3, #120]	; 0x78
   3113c:	ldr	r1, [fp, #4]
   31140:	ldr	r3, [fp, #-28]	; 0xffffffe4
   31144:	sub	r3, r1, r3
   31148:	cmp	r2, r3
   3114c:	bge	31164 <__assert_fail@plt+0x1fc20>
   31150:	ldr	r2, [fp, #4]
   31154:	ldr	r3, [fp, #-28]	; 0xffffffe4
   31158:	sub	r2, r2, r3
   3115c:	ldr	r3, [fp, #-16]
   31160:	str	r2, [r3, #120]	; 0x78
   31164:	mov	r3, #0
   31168:	mov	r0, r3
   3116c:	sub	sp, fp, #4
   31170:	ldr	fp, [sp]
   31174:	add	sp, sp, #4
   31178:	pop	{pc}		; (ldr pc, [sp], #4)
   3117c:	push	{fp}		; (str fp, [sp, #-4]!)
   31180:	add	fp, sp, #0
   31184:	sub	sp, sp, #28
   31188:	str	r0, [fp, #-24]	; 0xffffffe8
   3118c:	str	r1, [fp, #-28]	; 0xffffffe4
   31190:	ldr	r3, [fp, #-24]	; 0xffffffe8
   31194:	ldr	r3, [r3, #108]	; 0x6c
   31198:	str	r3, [fp, #-12]
   3119c:	ldr	r3, [fp, #-12]
   311a0:	str	r3, [fp, #-16]
   311a4:	mov	r3, #0
   311a8:	str	r3, [fp, #-8]
   311ac:	b	31214 <__assert_fail@plt+0x1fcd0>
   311b0:	ldr	r2, [fp, #-8]
   311b4:	ldr	r3, [fp, #-12]
   311b8:	add	r3, r2, r3
   311bc:	lsr	r2, r3, #31
   311c0:	add	r3, r2, r3
   311c4:	asr	r3, r3, #1
   311c8:	str	r3, [fp, #-20]	; 0xffffffec
   311cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   311d0:	ldr	r1, [r3, #116]	; 0x74
   311d4:	ldr	r2, [fp, #-20]	; 0xffffffec
   311d8:	mov	r3, r2
   311dc:	lsl	r3, r3, #1
   311e0:	add	r3, r3, r2
   311e4:	lsl	r3, r3, #3
   311e8:	add	r3, r1, r3
   311ec:	ldr	r3, [r3, #4]
   311f0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   311f4:	cmp	r2, r3
   311f8:	ble	3120c <__assert_fail@plt+0x1fcc8>
   311fc:	ldr	r3, [fp, #-20]	; 0xffffffec
   31200:	add	r3, r3, #1
   31204:	str	r3, [fp, #-8]
   31208:	b	31214 <__assert_fail@plt+0x1fcd0>
   3120c:	ldr	r3, [fp, #-20]	; 0xffffffec
   31210:	str	r3, [fp, #-12]
   31214:	ldr	r2, [fp, #-8]
   31218:	ldr	r3, [fp, #-12]
   3121c:	cmp	r2, r3
   31220:	blt	311b0 <__assert_fail@plt+0x1fc6c>
   31224:	ldr	r2, [fp, #-8]
   31228:	ldr	r3, [fp, #-16]
   3122c:	cmp	r2, r3
   31230:	bge	3126c <__assert_fail@plt+0x1fd28>
   31234:	ldr	r3, [fp, #-24]	; 0xffffffe8
   31238:	ldr	r1, [r3, #116]	; 0x74
   3123c:	ldr	r2, [fp, #-8]
   31240:	mov	r3, r2
   31244:	lsl	r3, r3, #1
   31248:	add	r3, r3, r2
   3124c:	lsl	r3, r3, #3
   31250:	add	r3, r1, r3
   31254:	ldr	r3, [r3, #4]
   31258:	ldr	r2, [fp, #-28]	; 0xffffffe4
   3125c:	cmp	r2, r3
   31260:	bne	3126c <__assert_fail@plt+0x1fd28>
   31264:	ldr	r3, [fp, #-8]
   31268:	b	31270 <__assert_fail@plt+0x1fd2c>
   3126c:	mvn	r3, #0
   31270:	mov	r0, r3
   31274:	add	sp, fp, #0
   31278:	pop	{fp}		; (ldr fp, [sp], #4)
   3127c:	bx	lr
   31280:	str	r4, [sp, #-12]!
   31284:	str	fp, [sp, #4]
   31288:	str	lr, [sp, #8]
   3128c:	add	fp, sp, #8
   31290:	sub	sp, sp, #28
   31294:	str	r0, [fp, #-24]	; 0xffffffe8
   31298:	str	r1, [fp, #-28]	; 0xffffffe4
   3129c:	str	r2, [fp, #-32]	; 0xffffffe0
   312a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   312a4:	ldr	r3, [r3, #132]	; 0x84
   312a8:	cmp	r3, #0
   312ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   312b0:	ldr	r3, [r3, #128]	; 0x80
   312b4:	cmp	r3, #0
   312b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   312bc:	ldr	r2, [r3, #124]	; 0x7c
   312c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   312c4:	ldr	r3, [r3, #128]	; 0x80
   312c8:	cmp	r2, r3
   312cc:	moveq	r3, #1
   312d0:	movne	r3, #0
   312d4:	uxtb	r3, r3
   312d8:	cmp	r3, #0
   312dc:	beq	3134c <__assert_fail@plt+0x1fe08>
   312e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   312e4:	ldr	r3, [r3, #128]	; 0x80
   312e8:	lsl	r3, r3, #1
   312ec:	str	r3, [fp, #-16]
   312f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   312f4:	ldr	r2, [r3, #132]	; 0x84
   312f8:	ldr	r3, [fp, #-16]
   312fc:	lsl	r3, r3, #2
   31300:	mov	r1, r3
   31304:	mov	r0, r2
   31308:	bl	33c30 <__assert_fail@plt+0x226ec>
   3130c:	str	r0, [fp, #-20]	; 0xffffffec
   31310:	ldr	r3, [fp, #-20]	; 0xffffffec
   31314:	cmp	r3, #0
   31318:	moveq	r3, #1
   3131c:	movne	r3, #0
   31320:	uxtb	r3, r3
   31324:	cmp	r3, #0
   31328:	beq	31334 <__assert_fail@plt+0x1fdf0>
   3132c:	mov	r3, #12
   31330:	b	3140c <__assert_fail@plt+0x1fec8>
   31334:	ldr	r3, [fp, #-24]	; 0xffffffe8
   31338:	ldr	r2, [fp, #-20]	; 0xffffffec
   3133c:	str	r2, [r3, #132]	; 0x84
   31340:	ldr	r3, [fp, #-24]	; 0xffffffe8
   31344:	ldr	r2, [fp, #-16]
   31348:	str	r2, [r3, #128]	; 0x80
   3134c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   31350:	ldr	r2, [r3, #132]	; 0x84
   31354:	ldr	r3, [fp, #-24]	; 0xffffffe8
   31358:	ldr	r3, [r3, #124]	; 0x7c
   3135c:	lsl	r3, r3, #2
   31360:	add	r4, r2, r3
   31364:	mov	r1, #24
   31368:	mov	r0, #1
   3136c:	bl	33ad0 <__assert_fail@plt+0x2258c>
   31370:	mov	r3, r0
   31374:	str	r3, [r4]
   31378:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3137c:	ldr	r2, [r3, #132]	; 0x84
   31380:	ldr	r3, [fp, #-24]	; 0xffffffe8
   31384:	ldr	r3, [r3, #124]	; 0x7c
   31388:	lsl	r3, r3, #2
   3138c:	add	r3, r2, r3
   31390:	ldr	r3, [r3]
   31394:	cmp	r3, #0
   31398:	moveq	r3, #1
   3139c:	movne	r3, #0
   313a0:	uxtb	r3, r3
   313a4:	cmp	r3, #0
   313a8:	beq	313b4 <__assert_fail@plt+0x1fe70>
   313ac:	mov	r3, #12
   313b0:	b	3140c <__assert_fail@plt+0x1fec8>
   313b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   313b8:	ldr	r2, [r3, #132]	; 0x84
   313bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   313c0:	ldr	r3, [r3, #124]	; 0x7c
   313c4:	lsl	r3, r3, #2
   313c8:	add	r3, r2, r3
   313cc:	ldr	r3, [r3]
   313d0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   313d4:	str	r2, [r3, #4]
   313d8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   313dc:	ldr	r2, [r3, #132]	; 0x84
   313e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   313e4:	ldr	r3, [r3, #124]	; 0x7c
   313e8:	add	r0, r3, #1
   313ec:	ldr	r1, [fp, #-24]	; 0xffffffe8
   313f0:	str	r0, [r1, #124]	; 0x7c
   313f4:	lsl	r3, r3, #2
   313f8:	add	r3, r2, r3
   313fc:	ldr	r3, [r3]
   31400:	ldr	r2, [fp, #-32]	; 0xffffffe0
   31404:	str	r2, [r3]
   31408:	mov	r3, #0
   3140c:	mov	r0, r3
   31410:	sub	sp, fp, #8
   31414:	ldr	r4, [sp]
   31418:	ldr	fp, [sp, #4]
   3141c:	add	sp, sp, #8
   31420:	pop	{pc}		; (ldr pc, [sp], #4)
   31424:	str	fp, [sp, #-8]!
   31428:	str	lr, [sp, #4]
   3142c:	add	fp, sp, #4
   31430:	sub	sp, sp, #32
   31434:	str	r0, [fp, #-24]	; 0xffffffe8
   31438:	str	r1, [fp, #-28]	; 0xffffffe4
   3143c:	str	r2, [fp, #-32]	; 0xffffffe0
   31440:	ldr	r3, [fp, #-24]	; 0xffffffe8
   31444:	ldr	r2, [r3, #16]
   31448:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3144c:	ldr	r3, [r3, #12]
   31450:	cmp	r2, r3
   31454:	moveq	r3, #1
   31458:	movne	r3, #0
   3145c:	uxtb	r3, r3
   31460:	cmp	r3, #0
   31464:	beq	314d8 <__assert_fail@plt+0x1ff94>
   31468:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3146c:	ldr	r3, [r3, #12]
   31470:	lsl	r3, r3, #1
   31474:	add	r3, r3, #1
   31478:	str	r3, [fp, #-8]
   3147c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   31480:	ldr	r2, [r3, #20]
   31484:	ldr	r3, [fp, #-8]
   31488:	lsl	r3, r3, #2
   3148c:	mov	r1, r3
   31490:	mov	r0, r2
   31494:	bl	33c30 <__assert_fail@plt+0x226ec>
   31498:	str	r0, [fp, #-12]
   3149c:	ldr	r3, [fp, #-12]
   314a0:	cmp	r3, #0
   314a4:	moveq	r3, #1
   314a8:	movne	r3, #0
   314ac:	uxtb	r3, r3
   314b0:	cmp	r3, #0
   314b4:	beq	314c0 <__assert_fail@plt+0x1ff7c>
   314b8:	mov	r3, #0
   314bc:	b	31558 <__assert_fail@plt+0x20014>
   314c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   314c4:	ldr	r2, [fp, #-12]
   314c8:	str	r2, [r3, #20]
   314cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   314d0:	ldr	r2, [fp, #-8]
   314d4:	str	r2, [r3, #12]
   314d8:	mov	r1, #20
   314dc:	mov	r0, #1
   314e0:	bl	33ad0 <__assert_fail@plt+0x2258c>
   314e4:	mov	r3, r0
   314e8:	str	r3, [fp, #-16]
   314ec:	ldr	r3, [fp, #-16]
   314f0:	cmp	r3, #0
   314f4:	movne	r3, #1
   314f8:	moveq	r3, #0
   314fc:	uxtb	r3, r3
   31500:	cmp	r3, #0
   31504:	beq	31554 <__assert_fail@plt+0x20010>
   31508:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3150c:	ldr	r2, [r3, #20]
   31510:	ldr	r3, [fp, #-24]	; 0xffffffe8
   31514:	ldr	r3, [r3, #16]
   31518:	lsl	r3, r3, #2
   3151c:	add	r3, r2, r3
   31520:	ldr	r2, [fp, #-16]
   31524:	str	r2, [r3]
   31528:	ldr	r3, [fp, #-16]
   3152c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   31530:	str	r2, [r3]
   31534:	ldr	r3, [fp, #-16]
   31538:	ldr	r2, [fp, #-32]	; 0xffffffe0
   3153c:	str	r2, [r3, #4]
   31540:	ldr	r3, [fp, #-24]	; 0xffffffe8
   31544:	ldr	r3, [r3, #16]
   31548:	add	r2, r3, #1
   3154c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   31550:	str	r2, [r3, #16]
   31554:	ldr	r3, [fp, #-16]
   31558:	mov	r0, r3
   3155c:	sub	sp, fp, #4
   31560:	ldr	fp, [sp]
   31564:	add	sp, sp, #4
   31568:	pop	{pc}		; (ldr pc, [sp], #4)
   3156c:	str	fp, [sp, #-8]!
   31570:	str	lr, [sp, #4]
   31574:	add	fp, sp, #4
   31578:	sub	sp, sp, #16
   3157c:	str	r0, [fp, #-8]
   31580:	str	r1, [fp, #-12]
   31584:	str	r2, [fp, #-16]
   31588:	str	r3, [fp, #-20]	; 0xffffffec
   3158c:	ldr	r3, [fp, #-8]
   31590:	ldr	r2, [fp, #-12]
   31594:	str	r2, [r3]
   31598:	ldr	r3, [fp, #-8]
   3159c:	ldr	r2, [fp, #-16]
   315a0:	str	r2, [r3, #4]
   315a4:	ldr	r3, [fp, #-8]
   315a8:	ldr	r2, [fp, #-20]	; 0xffffffec
   315ac:	str	r2, [r3, #8]
   315b0:	ldr	r3, [fp, #-8]
   315b4:	ldr	r2, [fp, #4]
   315b8:	str	r2, [r3, #12]
   315bc:	ldr	r3, [fp, #-8]
   315c0:	add	r3, r3, #16
   315c4:	mov	r2, #12
   315c8:	mov	r1, #0
   315cc:	mov	r0, r3
   315d0:	bl	11448 <memset@plt>
   315d4:	nop	{0}
   315d8:	sub	sp, fp, #4
   315dc:	ldr	fp, [sp]
   315e0:	add	sp, sp, #4
   315e4:	pop	{pc}		; (ldr pc, [sp], #4)
   315e8:	str	fp, [sp, #-8]!
   315ec:	str	lr, [sp, #4]
   315f0:	add	fp, sp, #4
   315f4:	sub	sp, sp, #24
   315f8:	str	r0, [fp, #-16]
   315fc:	str	r1, [fp, #-20]	; 0xffffffec
   31600:	str	r2, [fp, #-24]	; 0xffffffe8
   31604:	ldr	r2, [fp, #-24]	; 0xffffffe8
   31608:	ldr	r1, [fp, #-20]	; 0xffffffec
   3160c:	ldr	r0, [fp, #-16]
   31610:	bl	111f0 <read@plt>
   31614:	str	r0, [fp, #-8]
   31618:	ldr	r3, [fp, #-8]
   3161c:	cmp	r3, #0
   31620:	blt	3162c <__assert_fail@plt+0x200e8>
   31624:	ldr	r3, [fp, #-8]
   31628:	b	31688 <__assert_fail@plt+0x20144>
   3162c:	bl	11418 <__errno_location@plt>
   31630:	mov	r3, r0
   31634:	ldr	r3, [r3]
   31638:	cmp	r3, #4
   3163c:	beq	31680 <__assert_fail@plt+0x2013c>
   31640:	bl	11418 <__errno_location@plt>
   31644:	mov	r3, r0
   31648:	ldr	r3, [r3]
   3164c:	cmp	r3, #22
   31650:	bne	31678 <__assert_fail@plt+0x20134>
   31654:	ldr	r2, [fp, #-24]	; 0xffffffe8
   31658:	mov	r3, #0
   3165c:	movt	r3, #32752	; 0x7ff0
   31660:	cmp	r2, r3
   31664:	bls	31678 <__assert_fail@plt+0x20134>
   31668:	mov	r3, #0
   3166c:	movt	r3, #32752	; 0x7ff0
   31670:	str	r3, [fp, #-24]	; 0xffffffe8
   31674:	b	31684 <__assert_fail@plt+0x20140>
   31678:	ldr	r3, [fp, #-8]
   3167c:	b	31688 <__assert_fail@plt+0x20144>
   31680:	nop	{0}
   31684:	b	31604 <__assert_fail@plt+0x200c0>
   31688:	mov	r0, r3
   3168c:	sub	sp, fp, #4
   31690:	ldr	fp, [sp]
   31694:	add	sp, sp, #4
   31698:	pop	{pc}		; (ldr pc, [sp], #4)
   3169c:	str	fp, [sp, #-8]!
   316a0:	str	lr, [sp, #4]
   316a4:	add	fp, sp, #4
   316a8:	sub	sp, sp, #8
   316ac:	str	r0, [fp, #-8]
   316b0:	mov	r2, #3
   316b4:	mov	r1, #0
   316b8:	ldr	r0, [fp, #-8]
   316bc:	bl	3437c <__assert_fail@plt+0x22e38>
   316c0:	mov	r3, r0
   316c4:	mov	r0, r3
   316c8:	sub	sp, fp, #4
   316cc:	ldr	fp, [sp]
   316d0:	add	sp, sp, #4
   316d4:	pop	{pc}		; (ldr pc, [sp], #4)
   316d8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   316dc:	strd	r6, [sp, #8]
   316e0:	str	fp, [sp, #16]
   316e4:	str	lr, [sp, #20]
   316e8:	add	fp, sp, #20
   316ec:	sub	sp, sp, #48	; 0x30
   316f0:	str	r0, [fp, #-24]	; 0xffffffe8
   316f4:	str	r1, [fp, #-28]	; 0xffffffe4
   316f8:	str	r2, [fp, #-32]	; 0xffffffe0
   316fc:	str	r3, [fp, #-36]	; 0xffffffdc
   31700:	ldr	r3, [fp, #-28]	; 0xffffffe4
   31704:	cmp	r3, #0
   31708:	beq	31730 <__assert_fail@plt+0x201ec>
   3170c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   31710:	str	r3, [sp]
   31714:	ldr	r3, [fp, #-32]	; 0xffffffe0
   31718:	ldr	r2, [fp, #-28]	; 0xffffffe4
   3171c:	movw	r1, #25780	; 0x64b4
   31720:	movt	r1, #3
   31724:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31728:	bl	1140c <fprintf@plt>
   3172c:	b	31748 <__assert_fail@plt+0x20204>
   31730:	ldr	r3, [fp, #-36]	; 0xffffffdc
   31734:	ldr	r2, [fp, #-32]	; 0xffffffe0
   31738:	movw	r1, #25792	; 0x64c0
   3173c:	movt	r1, #3
   31740:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31744:	bl	1140c <fprintf@plt>
   31748:	movw	r0, #25800	; 0x64c8
   3174c:	movt	r0, #3
   31750:	bl	113e8 <gettext@plt>
   31754:	mov	r2, r0
   31758:	movw	r3, #2022	; 0x7e6
   3175c:	movw	r1, #26584	; 0x67d8
   31760:	movt	r1, #3
   31764:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31768:	bl	1140c <fprintf@plt>
   3176c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   31770:	mov	r0, #10
   31774:	bl	112b0 <fputc_unlocked@plt>
   31778:	movw	r0, #25804	; 0x64cc
   3177c:	movt	r0, #3
   31780:	bl	113e8 <gettext@plt>
   31784:	mov	r3, r0
   31788:	movw	r2, #25976	; 0x6578
   3178c:	movt	r2, #3
   31790:	mov	r1, r3
   31794:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31798:	bl	1140c <fprintf@plt>
   3179c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   317a0:	mov	r0, #10
   317a4:	bl	112b0 <fputc_unlocked@plt>
   317a8:	ldr	r3, [fp, #8]
   317ac:	cmp	r3, #9
   317b0:	ldrls	pc, [pc, r3, lsl #2]
   317b4:	b	31b94 <__assert_fail@plt+0x20650>
   317b8:	andeq	r1, r3, r0, asr #24
   317bc:	andeq	r1, r3, r0, ror #15
   317c0:	andeq	r1, r3, r8, lsl #16
   317c4:	andeq	r1, r3, r8, lsr r8
   317c8:	andeq	r1, r3, ip, ror r8
   317cc:	ldrdeq	r1, [r3], -r8
   317d0:	andeq	r1, r3, r4, asr #18
   317d4:	andeq	r1, r3, r0, asr #19
   317d8:	andeq	r1, r3, ip, asr #20
   317dc:	andeq	r1, r3, r8, ror #21
   317e0:	movw	r0, #26012	; 0x659c
   317e4:	movt	r0, #3
   317e8:	bl	113e8 <gettext@plt>
   317ec:	mov	r1, r0
   317f0:	ldr	r3, [fp, #4]
   317f4:	ldr	r3, [r3]
   317f8:	mov	r2, r3
   317fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31800:	bl	1140c <fprintf@plt>
   31804:	b	31c44 <__assert_fail@plt+0x20700>
   31808:	movw	r0, #26028	; 0x65ac
   3180c:	movt	r0, #3
   31810:	bl	113e8 <gettext@plt>
   31814:	mov	r1, r0
   31818:	ldr	r3, [fp, #4]
   3181c:	ldr	r2, [r3]
   31820:	ldr	r3, [fp, #4]
   31824:	add	r3, r3, #4
   31828:	ldr	r3, [r3]
   3182c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31830:	bl	1140c <fprintf@plt>
   31834:	b	31c44 <__assert_fail@plt+0x20700>
   31838:	movw	r0, #26052	; 0x65c4
   3183c:	movt	r0, #3
   31840:	bl	113e8 <gettext@plt>
   31844:	ldr	r3, [fp, #4]
   31848:	ldr	r2, [r3]
   3184c:	ldr	r3, [fp, #4]
   31850:	add	r3, r3, #4
   31854:	ldr	r1, [r3]
   31858:	ldr	r3, [fp, #4]
   3185c:	add	r3, r3, #8
   31860:	ldr	r3, [r3]
   31864:	str	r3, [sp]
   31868:	mov	r3, r1
   3186c:	mov	r1, r0
   31870:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31874:	bl	1140c <fprintf@plt>
   31878:	b	31c44 <__assert_fail@plt+0x20700>
   3187c:	movw	r0, #26080	; 0x65e0
   31880:	movt	r0, #3
   31884:	bl	113e8 <gettext@plt>
   31888:	mov	ip, r0
   3188c:	ldr	r3, [fp, #4]
   31890:	ldr	r1, [r3]
   31894:	ldr	r3, [fp, #4]
   31898:	add	r3, r3, #4
   3189c:	ldr	r0, [r3]
   318a0:	ldr	r3, [fp, #4]
   318a4:	add	r3, r3, #8
   318a8:	ldr	r3, [r3]
   318ac:	ldr	r2, [fp, #4]
   318b0:	add	r2, r2, #12
   318b4:	ldr	r2, [r2]
   318b8:	str	r2, [sp, #4]
   318bc:	str	r3, [sp]
   318c0:	mov	r3, r0
   318c4:	mov	r2, r1
   318c8:	mov	r1, ip
   318cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   318d0:	bl	1140c <fprintf@plt>
   318d4:	b	31c44 <__assert_fail@plt+0x20700>
   318d8:	movw	r0, #26112	; 0x6600
   318dc:	movt	r0, #3
   318e0:	bl	113e8 <gettext@plt>
   318e4:	mov	lr, r0
   318e8:	ldr	r3, [fp, #4]
   318ec:	ldr	r0, [r3]
   318f0:	ldr	r3, [fp, #4]
   318f4:	add	r3, r3, #4
   318f8:	ldr	ip, [r3]
   318fc:	ldr	r3, [fp, #4]
   31900:	add	r3, r3, #8
   31904:	ldr	r3, [r3]
   31908:	ldr	r2, [fp, #4]
   3190c:	add	r2, r2, #12
   31910:	ldr	r2, [r2]
   31914:	ldr	r1, [fp, #4]
   31918:	add	r1, r1, #16
   3191c:	ldr	r1, [r1]
   31920:	str	r1, [sp, #8]
   31924:	str	r2, [sp, #4]
   31928:	str	r3, [sp]
   3192c:	mov	r3, ip
   31930:	mov	r2, r0
   31934:	mov	r1, lr
   31938:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3193c:	bl	1140c <fprintf@plt>
   31940:	b	31c44 <__assert_fail@plt+0x20700>
   31944:	movw	r0, #26148	; 0x6624
   31948:	movt	r0, #3
   3194c:	bl	113e8 <gettext@plt>
   31950:	mov	r4, r0
   31954:	ldr	r3, [fp, #4]
   31958:	ldr	ip, [r3]
   3195c:	ldr	r3, [fp, #4]
   31960:	add	r3, r3, #4
   31964:	ldr	lr, [r3]
   31968:	ldr	r3, [fp, #4]
   3196c:	add	r3, r3, #8
   31970:	ldr	r3, [r3]
   31974:	ldr	r2, [fp, #4]
   31978:	add	r2, r2, #12
   3197c:	ldr	r2, [r2]
   31980:	ldr	r1, [fp, #4]
   31984:	add	r1, r1, #16
   31988:	ldr	r1, [r1]
   3198c:	ldr	r0, [fp, #4]
   31990:	add	r0, r0, #20
   31994:	ldr	r0, [r0]
   31998:	str	r0, [sp, #12]
   3199c:	str	r1, [sp, #8]
   319a0:	str	r2, [sp, #4]
   319a4:	str	r3, [sp]
   319a8:	mov	r3, lr
   319ac:	mov	r2, ip
   319b0:	mov	r1, r4
   319b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   319b8:	bl	1140c <fprintf@plt>
   319bc:	b	31c44 <__assert_fail@plt+0x20700>
   319c0:	movw	r0, #26188	; 0x664c
   319c4:	movt	r0, #3
   319c8:	bl	113e8 <gettext@plt>
   319cc:	mov	r5, r0
   319d0:	ldr	r3, [fp, #4]
   319d4:	ldr	lr, [r3]
   319d8:	ldr	r3, [fp, #4]
   319dc:	add	r3, r3, #4
   319e0:	ldr	r4, [r3]
   319e4:	ldr	r3, [fp, #4]
   319e8:	add	r3, r3, #8
   319ec:	ldr	r3, [r3]
   319f0:	ldr	r2, [fp, #4]
   319f4:	add	r2, r2, #12
   319f8:	ldr	r2, [r2]
   319fc:	ldr	r1, [fp, #4]
   31a00:	add	r1, r1, #16
   31a04:	ldr	r1, [r1]
   31a08:	ldr	r0, [fp, #4]
   31a0c:	add	r0, r0, #20
   31a10:	ldr	r0, [r0]
   31a14:	ldr	ip, [fp, #4]
   31a18:	add	ip, ip, #24
   31a1c:	ldr	ip, [ip]
   31a20:	str	ip, [sp, #16]
   31a24:	str	r0, [sp, #12]
   31a28:	str	r1, [sp, #8]
   31a2c:	str	r2, [sp, #4]
   31a30:	str	r3, [sp]
   31a34:	mov	r3, r4
   31a38:	mov	r2, lr
   31a3c:	mov	r1, r5
   31a40:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31a44:	bl	1140c <fprintf@plt>
   31a48:	b	31c44 <__assert_fail@plt+0x20700>
   31a4c:	movw	r0, #26232	; 0x6678
   31a50:	movt	r0, #3
   31a54:	bl	113e8 <gettext@plt>
   31a58:	mov	r6, r0
   31a5c:	ldr	r3, [fp, #4]
   31a60:	ldr	r4, [r3]
   31a64:	ldr	r3, [fp, #4]
   31a68:	add	r3, r3, #4
   31a6c:	ldr	r5, [r3]
   31a70:	ldr	r3, [fp, #4]
   31a74:	add	r3, r3, #8
   31a78:	ldr	r3, [r3]
   31a7c:	ldr	r2, [fp, #4]
   31a80:	add	r2, r2, #12
   31a84:	ldr	r2, [r2]
   31a88:	ldr	r1, [fp, #4]
   31a8c:	add	r1, r1, #16
   31a90:	ldr	r1, [r1]
   31a94:	ldr	r0, [fp, #4]
   31a98:	add	r0, r0, #20
   31a9c:	ldr	r0, [r0]
   31aa0:	ldr	ip, [fp, #4]
   31aa4:	add	ip, ip, #24
   31aa8:	ldr	ip, [ip]
   31aac:	ldr	lr, [fp, #4]
   31ab0:	add	lr, lr, #28
   31ab4:	ldr	lr, [lr]
   31ab8:	str	lr, [sp, #20]
   31abc:	str	ip, [sp, #16]
   31ac0:	str	r0, [sp, #12]
   31ac4:	str	r1, [sp, #8]
   31ac8:	str	r2, [sp, #4]
   31acc:	str	r3, [sp]
   31ad0:	mov	r3, r5
   31ad4:	mov	r2, r4
   31ad8:	mov	r1, r6
   31adc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31ae0:	bl	1140c <fprintf@plt>
   31ae4:	b	31c44 <__assert_fail@plt+0x20700>
   31ae8:	movw	r0, #26280	; 0x66a8
   31aec:	movt	r0, #3
   31af0:	bl	113e8 <gettext@plt>
   31af4:	mov	r7, r0
   31af8:	ldr	r3, [fp, #4]
   31afc:	ldr	r5, [r3]
   31b00:	ldr	r3, [fp, #4]
   31b04:	add	r3, r3, #4
   31b08:	ldr	r6, [r3]
   31b0c:	ldr	r3, [fp, #4]
   31b10:	add	r3, r3, #8
   31b14:	ldr	r3, [r3]
   31b18:	ldr	r2, [fp, #4]
   31b1c:	add	r2, r2, #12
   31b20:	ldr	r2, [r2]
   31b24:	ldr	r1, [fp, #4]
   31b28:	add	r1, r1, #16
   31b2c:	ldr	r1, [r1]
   31b30:	ldr	r0, [fp, #4]
   31b34:	add	r0, r0, #20
   31b38:	ldr	r0, [r0]
   31b3c:	ldr	ip, [fp, #4]
   31b40:	add	ip, ip, #24
   31b44:	ldr	ip, [ip]
   31b48:	ldr	lr, [fp, #4]
   31b4c:	add	lr, lr, #28
   31b50:	ldr	lr, [lr]
   31b54:	ldr	r4, [fp, #4]
   31b58:	add	r4, r4, #32
   31b5c:	ldr	r4, [r4]
   31b60:	str	r4, [sp, #24]
   31b64:	str	lr, [sp, #20]
   31b68:	str	ip, [sp, #16]
   31b6c:	str	r0, [sp, #12]
   31b70:	str	r1, [sp, #8]
   31b74:	str	r2, [sp, #4]
   31b78:	str	r3, [sp]
   31b7c:	mov	r3, r6
   31b80:	mov	r2, r5
   31b84:	mov	r1, r7
   31b88:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31b8c:	bl	1140c <fprintf@plt>
   31b90:	b	31c44 <__assert_fail@plt+0x20700>
   31b94:	movw	r0, #26332	; 0x66dc
   31b98:	movt	r0, #3
   31b9c:	bl	113e8 <gettext@plt>
   31ba0:	mov	r7, r0
   31ba4:	ldr	r3, [fp, #4]
   31ba8:	ldr	r5, [r3]
   31bac:	ldr	r3, [fp, #4]
   31bb0:	add	r3, r3, #4
   31bb4:	ldr	r6, [r3]
   31bb8:	ldr	r3, [fp, #4]
   31bbc:	add	r3, r3, #8
   31bc0:	ldr	r3, [r3]
   31bc4:	ldr	r2, [fp, #4]
   31bc8:	add	r2, r2, #12
   31bcc:	ldr	r2, [r2]
   31bd0:	ldr	r1, [fp, #4]
   31bd4:	add	r1, r1, #16
   31bd8:	ldr	r1, [r1]
   31bdc:	ldr	r0, [fp, #4]
   31be0:	add	r0, r0, #20
   31be4:	ldr	r0, [r0]
   31be8:	ldr	ip, [fp, #4]
   31bec:	add	ip, ip, #24
   31bf0:	ldr	ip, [ip]
   31bf4:	ldr	lr, [fp, #4]
   31bf8:	add	lr, lr, #28
   31bfc:	ldr	lr, [lr]
   31c00:	ldr	r4, [fp, #4]
   31c04:	add	r4, r4, #32
   31c08:	ldr	r4, [r4]
   31c0c:	str	r4, [sp, #24]
   31c10:	str	lr, [sp, #20]
   31c14:	str	ip, [sp, #16]
   31c18:	str	r0, [sp, #12]
   31c1c:	str	r1, [sp, #8]
   31c20:	str	r2, [sp, #4]
   31c24:	str	r3, [sp]
   31c28:	mov	r3, r6
   31c2c:	mov	r2, r5
   31c30:	mov	r1, r7
   31c34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31c38:	bl	1140c <fprintf@plt>
   31c3c:	b	31c44 <__assert_fail@plt+0x20700>
   31c40:	nop	{0}
   31c44:	nop	{0}
   31c48:	sub	sp, fp, #20
   31c4c:	ldrd	r4, [sp]
   31c50:	ldrd	r6, [sp, #8]
   31c54:	ldr	fp, [sp, #16]
   31c58:	add	sp, sp, #20
   31c5c:	pop	{pc}		; (ldr pc, [sp], #4)
   31c60:	str	fp, [sp, #-8]!
   31c64:	str	lr, [sp, #4]
   31c68:	add	fp, sp, #4
   31c6c:	sub	sp, sp, #32
   31c70:	str	r0, [fp, #-16]
   31c74:	str	r1, [fp, #-20]	; 0xffffffec
   31c78:	str	r2, [fp, #-24]	; 0xffffffe8
   31c7c:	str	r3, [fp, #-28]	; 0xffffffe4
   31c80:	mov	r3, #0
   31c84:	str	r3, [fp, #-8]
   31c88:	b	31c98 <__assert_fail@plt+0x20754>
   31c8c:	ldr	r3, [fp, #-8]
   31c90:	add	r3, r3, #1
   31c94:	str	r3, [fp, #-8]
   31c98:	ldr	r3, [fp, #-8]
   31c9c:	lsl	r3, r3, #2
   31ca0:	ldr	r2, [fp, #4]
   31ca4:	add	r3, r2, r3
   31ca8:	ldr	r3, [r3]
   31cac:	cmp	r3, #0
   31cb0:	bne	31c8c <__assert_fail@plt+0x20748>
   31cb4:	ldr	r3, [fp, #-8]
   31cb8:	str	r3, [sp, #4]
   31cbc:	ldr	r3, [fp, #4]
   31cc0:	str	r3, [sp]
   31cc4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   31cc8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   31ccc:	ldr	r1, [fp, #-20]	; 0xffffffec
   31cd0:	ldr	r0, [fp, #-16]
   31cd4:	bl	316d8 <__assert_fail@plt+0x20194>
   31cd8:	nop	{0}
   31cdc:	sub	sp, fp, #4
   31ce0:	ldr	fp, [sp]
   31ce4:	add	sp, sp, #4
   31ce8:	pop	{pc}		; (ldr pc, [sp], #4)
   31cec:	str	fp, [sp, #-8]!
   31cf0:	str	lr, [sp, #4]
   31cf4:	add	fp, sp, #4
   31cf8:	sub	sp, sp, #72	; 0x48
   31cfc:	str	r0, [fp, #-56]	; 0xffffffc8
   31d00:	str	r1, [fp, #-60]	; 0xffffffc4
   31d04:	str	r2, [fp, #-64]	; 0xffffffc0
   31d08:	str	r3, [fp, #-68]	; 0xffffffbc
   31d0c:	mov	r3, #0
   31d10:	str	r3, [fp, #-8]
   31d14:	b	31d24 <__assert_fail@plt+0x207e0>
   31d18:	ldr	r3, [fp, #-8]
   31d1c:	add	r3, r3, #1
   31d20:	str	r3, [fp, #-8]
   31d24:	ldr	r3, [fp, #-8]
   31d28:	cmp	r3, #9
   31d2c:	bhi	31d70 <__assert_fail@plt+0x2082c>
   31d30:	ldr	r3, [fp, #4]
   31d34:	add	r2, r3, #4
   31d38:	str	r2, [fp, #4]
   31d3c:	ldr	r2, [r3]
   31d40:	ldr	r3, [fp, #-8]
   31d44:	lsl	r3, r3, #2
   31d48:	sub	r1, fp, #4
   31d4c:	add	r3, r1, r3
   31d50:	str	r2, [r3, #-44]	; 0xffffffd4
   31d54:	ldr	r3, [fp, #-8]
   31d58:	lsl	r3, r3, #2
   31d5c:	sub	r2, fp, #4
   31d60:	add	r3, r2, r3
   31d64:	ldr	r3, [r3, #-44]	; 0xffffffd4
   31d68:	cmp	r3, #0
   31d6c:	bne	31d18 <__assert_fail@plt+0x207d4>
   31d70:	ldr	r3, [fp, #-8]
   31d74:	str	r3, [sp, #4]
   31d78:	sub	r3, fp, #48	; 0x30
   31d7c:	str	r3, [sp]
   31d80:	ldr	r3, [fp, #-68]	; 0xffffffbc
   31d84:	ldr	r2, [fp, #-64]	; 0xffffffc0
   31d88:	ldr	r1, [fp, #-60]	; 0xffffffc4
   31d8c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   31d90:	bl	316d8 <__assert_fail@plt+0x20194>
   31d94:	nop	{0}
   31d98:	sub	sp, fp, #4
   31d9c:	ldr	fp, [sp]
   31da0:	add	sp, sp, #4
   31da4:	pop	{pc}		; (ldr pc, [sp], #4)
   31da8:	push	{r3}		; (str r3, [sp, #-4]!)
   31dac:	str	fp, [sp, #-8]!
   31db0:	str	lr, [sp, #4]
   31db4:	add	fp, sp, #4
   31db8:	sub	sp, sp, #36	; 0x24
   31dbc:	str	r0, [fp, #-20]	; 0xffffffec
   31dc0:	str	r1, [fp, #-24]	; 0xffffffe8
   31dc4:	str	r2, [fp, #-28]	; 0xffffffe4
   31dc8:	add	r3, fp, #8
   31dcc:	str	r3, [fp, #-12]
   31dd0:	ldr	r3, [fp, #-12]
   31dd4:	str	r3, [sp]
   31dd8:	ldr	r3, [fp, #4]
   31ddc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   31de0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   31de4:	ldr	r0, [fp, #-20]	; 0xffffffec
   31de8:	bl	31cec <__assert_fail@plt+0x207a8>
   31dec:	nop	{0}
   31df0:	sub	sp, fp, #4
   31df4:	ldr	fp, [sp]
   31df8:	ldr	lr, [sp, #4]
   31dfc:	add	sp, sp, #8
   31e00:	add	sp, sp, #4
   31e04:	bx	lr
   31e08:	str	fp, [sp, #-8]!
   31e0c:	str	lr, [sp, #4]
   31e10:	add	fp, sp, #4
   31e14:	movw	r3, #29124	; 0x71c4
   31e18:	movt	r3, #4
   31e1c:	ldr	r3, [r3]
   31e20:	mov	r1, r3
   31e24:	mov	r0, #10
   31e28:	bl	112b0 <fputc_unlocked@plt>
   31e2c:	movw	r0, #26392	; 0x6718
   31e30:	movt	r0, #3
   31e34:	bl	113e8 <gettext@plt>
   31e38:	mov	r3, r0
   31e3c:	movw	r1, #26412	; 0x672c
   31e40:	movt	r1, #3
   31e44:	mov	r0, r3
   31e48:	bl	111e4 <printf@plt>
   31e4c:	movw	r0, #26436	; 0x6744
   31e50:	movt	r0, #3
   31e54:	bl	113e8 <gettext@plt>
   31e58:	mov	r3, r0
   31e5c:	movw	r2, #26456	; 0x6758
   31e60:	movt	r2, #3
   31e64:	movw	r1, #26496	; 0x6780
   31e68:	movt	r1, #3
   31e6c:	mov	r0, r3
   31e70:	bl	111e4 <printf@plt>
   31e74:	movw	r0, #26512	; 0x6790
   31e78:	movt	r0, #3
   31e7c:	bl	113e8 <gettext@plt>
   31e80:	mov	r3, r0
   31e84:	movw	r1, #26552	; 0x67b8
   31e88:	movt	r1, #3
   31e8c:	mov	r0, r3
   31e90:	bl	111e4 <printf@plt>
   31e94:	nop	{0}
   31e98:	sub	sp, fp, #4
   31e9c:	ldr	fp, [sp]
   31ea0:	add	sp, sp, #4
   31ea4:	pop	{pc}		; (ldr pc, [sp], #4)
   31ea8:	str	fp, [sp, #-8]!
   31eac:	str	lr, [sp, #4]
   31eb0:	add	fp, sp, #4
   31eb4:	sub	sp, sp, #16
   31eb8:	str	r0, [fp, #-8]
   31ebc:	str	r1, [fp, #-12]
   31ec0:	str	r2, [fp, #-16]
   31ec4:	ldr	r2, [fp, #-16]
   31ec8:	ldr	r1, [fp, #-12]
   31ecc:	ldr	r0, [fp, #-8]
   31ed0:	bl	3208c <__assert_fail@plt+0x20b48>
   31ed4:	mov	r3, r0
   31ed8:	mov	r0, r3
   31edc:	sub	sp, fp, #4
   31ee0:	ldr	fp, [sp]
   31ee4:	add	sp, sp, #4
   31ee8:	pop	{pc}		; (ldr pc, [sp], #4)
   31eec:	str	fp, [sp, #-8]!
   31ef0:	str	lr, [sp, #4]
   31ef4:	add	fp, sp, #4
   31ef8:	sub	sp, sp, #8
   31efc:	str	r0, [fp, #-8]
   31f00:	ldr	r3, [fp, #-8]
   31f04:	cmp	r3, #0
   31f08:	bne	31f10 <__assert_fail@plt+0x209cc>
   31f0c:	bl	118c0 <__assert_fail@plt+0x37c>
   31f10:	ldr	r3, [fp, #-8]
   31f14:	mov	r0, r3
   31f18:	sub	sp, fp, #4
   31f1c:	ldr	fp, [sp]
   31f20:	add	sp, sp, #4
   31f24:	pop	{pc}		; (ldr pc, [sp], #4)
   31f28:	str	fp, [sp, #-8]!
   31f2c:	str	lr, [sp, #4]
   31f30:	add	fp, sp, #4
   31f34:	sub	sp, sp, #8
   31f38:	str	r0, [fp, #-8]
   31f3c:	ldr	r0, [fp, #-8]
   31f40:	bl	33ba0 <__assert_fail@plt+0x2265c>
   31f44:	mov	r3, r0
   31f48:	mov	r0, r3
   31f4c:	bl	31eec <__assert_fail@plt+0x209a8>
   31f50:	mov	r3, r0
   31f54:	mov	r0, r3
   31f58:	sub	sp, fp, #4
   31f5c:	ldr	fp, [sp]
   31f60:	add	sp, sp, #4
   31f64:	pop	{pc}		; (ldr pc, [sp], #4)
   31f68:	str	fp, [sp, #-8]!
   31f6c:	str	lr, [sp, #4]
   31f70:	add	fp, sp, #4
   31f74:	sub	sp, sp, #8
   31f78:	str	r0, [fp, #-8]
   31f7c:	ldr	r0, [fp, #-8]
   31f80:	bl	34794 <__assert_fail@plt+0x23250>
   31f84:	mov	r3, r0
   31f88:	mov	r0, r3
   31f8c:	bl	31eec <__assert_fail@plt+0x209a8>
   31f90:	mov	r3, r0
   31f94:	mov	r0, r3
   31f98:	sub	sp, fp, #4
   31f9c:	ldr	fp, [sp]
   31fa0:	add	sp, sp, #4
   31fa4:	pop	{pc}		; (ldr pc, [sp], #4)
   31fa8:	str	fp, [sp, #-8]!
   31fac:	str	lr, [sp, #4]
   31fb0:	add	fp, sp, #4
   31fb4:	sub	sp, sp, #8
   31fb8:	str	r0, [fp, #-8]
   31fbc:	ldr	r0, [fp, #-8]
   31fc0:	bl	31f28 <__assert_fail@plt+0x209e4>
   31fc4:	mov	r3, r0
   31fc8:	mov	r0, r3
   31fcc:	sub	sp, fp, #4
   31fd0:	ldr	fp, [sp]
   31fd4:	add	sp, sp, #4
   31fd8:	pop	{pc}		; (ldr pc, [sp], #4)
   31fdc:	str	fp, [sp, #-8]!
   31fe0:	str	lr, [sp, #4]
   31fe4:	add	fp, sp, #4
   31fe8:	sub	sp, sp, #16
   31fec:	str	r0, [fp, #-16]
   31ff0:	str	r1, [fp, #-20]	; 0xffffffec
   31ff4:	ldr	r1, [fp, #-20]	; 0xffffffec
   31ff8:	ldr	r0, [fp, #-16]
   31ffc:	bl	33c30 <__assert_fail@plt+0x226ec>
   32000:	str	r0, [fp, #-8]
   32004:	ldr	r3, [fp, #-8]
   32008:	cmp	r3, #0
   3200c:	bne	3202c <__assert_fail@plt+0x20ae8>
   32010:	ldr	r3, [fp, #-16]
   32014:	cmp	r3, #0
   32018:	beq	32028 <__assert_fail@plt+0x20ae4>
   3201c:	ldr	r3, [fp, #-20]	; 0xffffffec
   32020:	cmp	r3, #0
   32024:	beq	3202c <__assert_fail@plt+0x20ae8>
   32028:	bl	118c0 <__assert_fail@plt+0x37c>
   3202c:	ldr	r3, [fp, #-8]
   32030:	mov	r0, r3
   32034:	sub	sp, fp, #4
   32038:	ldr	fp, [sp]
   3203c:	add	sp, sp, #4
   32040:	pop	{pc}		; (ldr pc, [sp], #4)
   32044:	str	fp, [sp, #-8]!
   32048:	str	lr, [sp, #4]
   3204c:	add	fp, sp, #4
   32050:	sub	sp, sp, #8
   32054:	str	r0, [fp, #-8]
   32058:	str	r1, [fp, #-12]
   3205c:	ldr	r1, [fp, #-12]
   32060:	ldr	r0, [fp, #-8]
   32064:	bl	347cc <__assert_fail@plt+0x23288>
   32068:	mov	r3, r0
   3206c:	mov	r0, r3
   32070:	bl	31eec <__assert_fail@plt+0x209a8>
   32074:	mov	r3, r0
   32078:	mov	r0, r3
   3207c:	sub	sp, fp, #4
   32080:	ldr	fp, [sp]
   32084:	add	sp, sp, #4
   32088:	pop	{pc}		; (ldr pc, [sp], #4)
   3208c:	str	fp, [sp, #-8]!
   32090:	str	lr, [sp, #4]
   32094:	add	fp, sp, #4
   32098:	sub	sp, sp, #24
   3209c:	str	r0, [fp, #-16]
   320a0:	str	r1, [fp, #-20]	; 0xffffffec
   320a4:	str	r2, [fp, #-24]	; 0xffffffe8
   320a8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   320ac:	ldr	r1, [fp, #-20]	; 0xffffffec
   320b0:	ldr	r0, [fp, #-16]
   320b4:	bl	349fc <__assert_fail@plt+0x234b8>
   320b8:	str	r0, [fp, #-8]
   320bc:	ldr	r3, [fp, #-8]
   320c0:	cmp	r3, #0
   320c4:	bne	320f0 <__assert_fail@plt+0x20bac>
   320c8:	ldr	r3, [fp, #-16]
   320cc:	cmp	r3, #0
   320d0:	beq	320ec <__assert_fail@plt+0x20ba8>
   320d4:	ldr	r3, [fp, #-20]	; 0xffffffec
   320d8:	cmp	r3, #0
   320dc:	beq	320f0 <__assert_fail@plt+0x20bac>
   320e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   320e4:	cmp	r3, #0
   320e8:	beq	320f0 <__assert_fail@plt+0x20bac>
   320ec:	bl	118c0 <__assert_fail@plt+0x37c>
   320f0:	ldr	r3, [fp, #-8]
   320f4:	mov	r0, r3
   320f8:	sub	sp, fp, #4
   320fc:	ldr	fp, [sp]
   32100:	add	sp, sp, #4
   32104:	pop	{pc}		; (ldr pc, [sp], #4)
   32108:	str	fp, [sp, #-8]!
   3210c:	str	lr, [sp, #4]
   32110:	add	fp, sp, #4
   32114:	sub	sp, sp, #16
   32118:	str	r0, [fp, #-8]
   3211c:	str	r1, [fp, #-12]
   32120:	str	r2, [fp, #-16]
   32124:	ldr	r2, [fp, #-16]
   32128:	ldr	r1, [fp, #-12]
   3212c:	ldr	r0, [fp, #-8]
   32130:	bl	3486c <__assert_fail@plt+0x23328>
   32134:	mov	r3, r0
   32138:	mov	r0, r3
   3213c:	bl	31eec <__assert_fail@plt+0x209a8>
   32140:	mov	r3, r0
   32144:	mov	r0, r3
   32148:	sub	sp, fp, #4
   3214c:	ldr	fp, [sp]
   32150:	add	sp, sp, #4
   32154:	pop	{pc}		; (ldr pc, [sp], #4)
   32158:	str	fp, [sp, #-8]!
   3215c:	str	lr, [sp, #4]
   32160:	add	fp, sp, #4
   32164:	sub	sp, sp, #8
   32168:	str	r0, [fp, #-8]
   3216c:	str	r1, [fp, #-12]
   32170:	ldr	r2, [fp, #-12]
   32174:	ldr	r1, [fp, #-8]
   32178:	mov	r0, #0
   3217c:	bl	3208c <__assert_fail@plt+0x20b48>
   32180:	mov	r3, r0
   32184:	mov	r0, r3
   32188:	sub	sp, fp, #4
   3218c:	ldr	fp, [sp]
   32190:	add	sp, sp, #4
   32194:	pop	{pc}		; (ldr pc, [sp], #4)
   32198:	str	fp, [sp, #-8]!
   3219c:	str	lr, [sp, #4]
   321a0:	add	fp, sp, #4
   321a4:	sub	sp, sp, #8
   321a8:	str	r0, [fp, #-8]
   321ac:	str	r1, [fp, #-12]
   321b0:	ldr	r2, [fp, #-12]
   321b4:	ldr	r1, [fp, #-8]
   321b8:	mov	r0, #0
   321bc:	bl	32108 <__assert_fail@plt+0x20bc4>
   321c0:	mov	r3, r0
   321c4:	mov	r0, r3
   321c8:	sub	sp, fp, #4
   321cc:	ldr	fp, [sp]
   321d0:	add	sp, sp, #4
   321d4:	pop	{pc}		; (ldr pc, [sp], #4)
   321d8:	str	fp, [sp, #-8]!
   321dc:	str	lr, [sp, #4]
   321e0:	add	fp, sp, #4
   321e4:	sub	sp, sp, #8
   321e8:	str	r0, [fp, #-8]
   321ec:	str	r1, [fp, #-12]
   321f0:	mov	r2, #1
   321f4:	ldr	r1, [fp, #-12]
   321f8:	ldr	r0, [fp, #-8]
   321fc:	bl	32218 <__assert_fail@plt+0x20cd4>
   32200:	mov	r3, r0
   32204:	mov	r0, r3
   32208:	sub	sp, fp, #4
   3220c:	ldr	fp, [sp]
   32210:	add	sp, sp, #4
   32214:	pop	{pc}		; (ldr pc, [sp], #4)
   32218:	str	fp, [sp, #-8]!
   3221c:	str	lr, [sp, #4]
   32220:	add	fp, sp, #4
   32224:	sub	sp, sp, #24
   32228:	str	r0, [fp, #-16]
   3222c:	str	r1, [fp, #-20]	; 0xffffffec
   32230:	str	r2, [fp, #-24]	; 0xffffffe8
   32234:	ldr	r3, [fp, #-20]	; 0xffffffec
   32238:	ldr	r3, [r3]
   3223c:	str	r3, [fp, #-8]
   32240:	ldr	r3, [fp, #-16]
   32244:	cmp	r3, #0
   32248:	bne	32290 <__assert_fail@plt+0x20d4c>
   3224c:	ldr	r3, [fp, #-8]
   32250:	cmp	r3, #0
   32254:	bne	322cc <__assert_fail@plt+0x20d88>
   32258:	mov	r2, #64	; 0x40
   3225c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   32260:	udiv	r3, r2, r3
   32264:	str	r3, [fp, #-8]
   32268:	ldr	r3, [fp, #-8]
   3226c:	cmp	r3, #0
   32270:	moveq	r3, #1
   32274:	movne	r3, #0
   32278:	uxtb	r3, r3
   3227c:	mov	r2, r3
   32280:	ldr	r3, [fp, #-8]
   32284:	add	r3, r2, r3
   32288:	str	r3, [fp, #-8]
   3228c:	b	322cc <__assert_fail@plt+0x20d88>
   32290:	ldr	r2, [fp, #-8]
   32294:	ldr	r3, [fp, #-8]
   32298:	lsr	r3, r3, #1
   3229c:	add	r3, r3, #1
   322a0:	mov	r1, #0
   322a4:	adds	r3, r2, r3
   322a8:	bcc	322b0 <__assert_fail@plt+0x20d6c>
   322ac:	mov	r1, #1
   322b0:	str	r3, [fp, #-8]
   322b4:	mov	r3, r1
   322b8:	and	r3, r3, #1
   322bc:	uxtb	r3, r3
   322c0:	cmp	r3, #0
   322c4:	beq	322cc <__assert_fail@plt+0x20d88>
   322c8:	bl	118c0 <__assert_fail@plt+0x37c>
   322cc:	ldr	r3, [fp, #-8]
   322d0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   322d4:	mov	r1, r3
   322d8:	ldr	r0, [fp, #-16]
   322dc:	bl	3208c <__assert_fail@plt+0x20b48>
   322e0:	str	r0, [fp, #-16]
   322e4:	ldr	r2, [fp, #-8]
   322e8:	ldr	r3, [fp, #-20]	; 0xffffffec
   322ec:	str	r2, [r3]
   322f0:	ldr	r3, [fp, #-16]
   322f4:	mov	r0, r3
   322f8:	sub	sp, fp, #4
   322fc:	ldr	fp, [sp]
   32300:	add	sp, sp, #4
   32304:	pop	{pc}		; (ldr pc, [sp], #4)
   32308:	str	fp, [sp, #-8]!
   3230c:	str	lr, [sp, #4]
   32310:	add	fp, sp, #4
   32314:	sub	sp, sp, #32
   32318:	str	r0, [fp, #-24]	; 0xffffffe8
   3231c:	str	r1, [fp, #-28]	; 0xffffffe4
   32320:	str	r2, [fp, #-32]	; 0xffffffe0
   32324:	str	r3, [fp, #-36]	; 0xffffffdc
   32328:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3232c:	ldr	r3, [r3]
   32330:	str	r3, [fp, #-8]
   32334:	ldr	r3, [fp, #-8]
   32338:	asr	r3, r3, #1
   3233c:	mov	r1, #0
   32340:	ldr	r2, [fp, #-8]
   32344:	adds	r3, r2, r3
   32348:	bvc	32350 <__assert_fail@plt+0x20e0c>
   3234c:	mov	r1, #1
   32350:	str	r3, [fp, #-16]
   32354:	mov	r3, r1
   32358:	and	r3, r3, #1
   3235c:	uxtb	r3, r3
   32360:	cmp	r3, #0
   32364:	beq	32370 <__assert_fail@plt+0x20e2c>
   32368:	mvn	r3, #-2147483648	; 0x80000000
   3236c:	str	r3, [fp, #-16]
   32370:	ldr	r3, [fp, #-36]	; 0xffffffdc
   32374:	cmp	r3, #0
   32378:	blt	32394 <__assert_fail@plt+0x20e50>
   3237c:	ldr	r3, [fp, #-16]
   32380:	ldr	r2, [fp, #-36]	; 0xffffffdc
   32384:	cmp	r2, r3
   32388:	bge	32394 <__assert_fail@plt+0x20e50>
   3238c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   32390:	str	r3, [fp, #-16]
   32394:	ldr	r2, [fp, #-16]
   32398:	mov	lr, #0
   3239c:	ldr	r3, [fp, #4]
   323a0:	smull	r2, r3, r2, r3
   323a4:	mov	r0, #0
   323a8:	mov	r1, #0
   323ac:	mov	r0, r3
   323b0:	asr	r1, r3, #31
   323b4:	asr	ip, r2, #31
   323b8:	cmp	ip, r0
   323bc:	beq	323c4 <__assert_fail@plt+0x20e80>
   323c0:	mov	lr, #1
   323c4:	mov	r3, r2
   323c8:	str	r3, [fp, #-20]	; 0xffffffec
   323cc:	mov	r3, lr
   323d0:	and	r3, r3, #1
   323d4:	uxtb	r3, r3
   323d8:	cmp	r3, #0
   323dc:	beq	323e8 <__assert_fail@plt+0x20ea4>
   323e0:	mvn	r3, #-2147483648	; 0x80000000
   323e4:	b	32400 <__assert_fail@plt+0x20ebc>
   323e8:	ldr	r3, [fp, #-20]	; 0xffffffec
   323ec:	cmp	r3, #63	; 0x3f
   323f0:	bgt	323fc <__assert_fail@plt+0x20eb8>
   323f4:	mov	r3, #64	; 0x40
   323f8:	b	32400 <__assert_fail@plt+0x20ebc>
   323fc:	mov	r3, #0
   32400:	str	r3, [fp, #-12]
   32404:	ldr	r3, [fp, #-12]
   32408:	cmp	r3, #0
   3240c:	beq	32444 <__assert_fail@plt+0x20f00>
   32410:	ldr	r2, [fp, #-12]
   32414:	ldr	r3, [fp, #4]
   32418:	sdiv	r3, r2, r3
   3241c:	str	r3, [fp, #-16]
   32420:	ldr	r3, [fp, #-12]
   32424:	ldr	r2, [fp, #4]
   32428:	sdiv	r2, r3, r2
   3242c:	ldr	r1, [fp, #4]
   32430:	mul	r2, r1, r2
   32434:	sub	r3, r3, r2
   32438:	ldr	r2, [fp, #-12]
   3243c:	sub	r3, r2, r3
   32440:	str	r3, [fp, #-20]	; 0xffffffec
   32444:	ldr	r3, [fp, #-24]	; 0xffffffe8
   32448:	cmp	r3, #0
   3244c:	bne	3245c <__assert_fail@plt+0x20f18>
   32450:	ldr	r3, [fp, #-28]	; 0xffffffe4
   32454:	mov	r2, #0
   32458:	str	r2, [r3]
   3245c:	ldr	r2, [fp, #-16]
   32460:	ldr	r3, [fp, #-8]
   32464:	sub	r3, r2, r3
   32468:	ldr	r2, [fp, #-32]	; 0xffffffe0
   3246c:	cmp	r2, r3
   32470:	ble	32510 <__assert_fail@plt+0x20fcc>
   32474:	mov	r1, #0
   32478:	ldr	r2, [fp, #-8]
   3247c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   32480:	adds	r3, r2, r3
   32484:	bvc	3248c <__assert_fail@plt+0x20f48>
   32488:	mov	r1, #1
   3248c:	str	r3, [fp, #-16]
   32490:	mov	r3, r1
   32494:	and	r3, r3, #1
   32498:	uxtb	r3, r3
   3249c:	cmp	r3, #0
   324a0:	bne	3250c <__assert_fail@plt+0x20fc8>
   324a4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   324a8:	cmp	r3, #0
   324ac:	blt	324c0 <__assert_fail@plt+0x20f7c>
   324b0:	ldr	r3, [fp, #-16]
   324b4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   324b8:	cmp	r2, r3
   324bc:	blt	3250c <__assert_fail@plt+0x20fc8>
   324c0:	ldr	r2, [fp, #-16]
   324c4:	mov	lr, #0
   324c8:	ldr	r3, [fp, #4]
   324cc:	smull	r2, r3, r2, r3
   324d0:	mov	r0, #0
   324d4:	mov	r1, #0
   324d8:	mov	r0, r3
   324dc:	asr	r1, r3, #31
   324e0:	asr	ip, r2, #31
   324e4:	cmp	ip, r0
   324e8:	beq	324f0 <__assert_fail@plt+0x20fac>
   324ec:	mov	lr, #1
   324f0:	mov	r3, r2
   324f4:	str	r3, [fp, #-20]	; 0xffffffec
   324f8:	mov	r3, lr
   324fc:	and	r3, r3, #1
   32500:	uxtb	r3, r3
   32504:	cmp	r3, #0
   32508:	beq	32510 <__assert_fail@plt+0x20fcc>
   3250c:	bl	118c0 <__assert_fail@plt+0x37c>
   32510:	ldr	r3, [fp, #-20]	; 0xffffffec
   32514:	mov	r1, r3
   32518:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3251c:	bl	31fdc <__assert_fail@plt+0x20a98>
   32520:	str	r0, [fp, #-24]	; 0xffffffe8
   32524:	ldr	r2, [fp, #-16]
   32528:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3252c:	str	r2, [r3]
   32530:	ldr	r3, [fp, #-24]	; 0xffffffe8
   32534:	mov	r0, r3
   32538:	sub	sp, fp, #4
   3253c:	ldr	fp, [sp]
   32540:	add	sp, sp, #4
   32544:	pop	{pc}		; (ldr pc, [sp], #4)
   32548:	str	fp, [sp, #-8]!
   3254c:	str	lr, [sp, #4]
   32550:	add	fp, sp, #4
   32554:	sub	sp, sp, #8
   32558:	str	r0, [fp, #-8]
   3255c:	mov	r1, #1
   32560:	ldr	r0, [fp, #-8]
   32564:	bl	325b8 <__assert_fail@plt+0x21074>
   32568:	mov	r3, r0
   3256c:	mov	r0, r3
   32570:	sub	sp, fp, #4
   32574:	ldr	fp, [sp]
   32578:	add	sp, sp, #4
   3257c:	pop	{pc}		; (ldr pc, [sp], #4)
   32580:	str	fp, [sp, #-8]!
   32584:	str	lr, [sp, #4]
   32588:	add	fp, sp, #4
   3258c:	sub	sp, sp, #8
   32590:	str	r0, [fp, #-8]
   32594:	mov	r1, #1
   32598:	ldr	r0, [fp, #-8]
   3259c:	bl	32600 <__assert_fail@plt+0x210bc>
   325a0:	mov	r3, r0
   325a4:	mov	r0, r3
   325a8:	sub	sp, fp, #4
   325ac:	ldr	fp, [sp]
   325b0:	add	sp, sp, #4
   325b4:	pop	{pc}		; (ldr pc, [sp], #4)
   325b8:	str	fp, [sp, #-8]!
   325bc:	str	lr, [sp, #4]
   325c0:	add	fp, sp, #4
   325c4:	sub	sp, sp, #8
   325c8:	str	r0, [fp, #-8]
   325cc:	str	r1, [fp, #-12]
   325d0:	ldr	r1, [fp, #-12]
   325d4:	ldr	r0, [fp, #-8]
   325d8:	bl	33ad0 <__assert_fail@plt+0x2258c>
   325dc:	mov	r3, r0
   325e0:	mov	r0, r3
   325e4:	bl	31eec <__assert_fail@plt+0x209a8>
   325e8:	mov	r3, r0
   325ec:	mov	r0, r3
   325f0:	sub	sp, fp, #4
   325f4:	ldr	fp, [sp]
   325f8:	add	sp, sp, #4
   325fc:	pop	{pc}		; (ldr pc, [sp], #4)
   32600:	str	fp, [sp, #-8]!
   32604:	str	lr, [sp, #4]
   32608:	add	fp, sp, #4
   3260c:	sub	sp, sp, #8
   32610:	str	r0, [fp, #-8]
   32614:	str	r1, [fp, #-12]
   32618:	ldr	r1, [fp, #-12]
   3261c:	ldr	r0, [fp, #-8]
   32620:	bl	34828 <__assert_fail@plt+0x232e4>
   32624:	mov	r3, r0
   32628:	mov	r0, r3
   3262c:	bl	31eec <__assert_fail@plt+0x209a8>
   32630:	mov	r3, r0
   32634:	mov	r0, r3
   32638:	sub	sp, fp, #4
   3263c:	ldr	fp, [sp]
   32640:	add	sp, sp, #4
   32644:	pop	{pc}		; (ldr pc, [sp], #4)
   32648:	str	fp, [sp, #-8]!
   3264c:	str	lr, [sp, #4]
   32650:	add	fp, sp, #4
   32654:	sub	sp, sp, #8
   32658:	str	r0, [fp, #-8]
   3265c:	str	r1, [fp, #-12]
   32660:	ldr	r0, [fp, #-12]
   32664:	bl	31f28 <__assert_fail@plt+0x209e4>
   32668:	mov	r3, r0
   3266c:	ldr	r2, [fp, #-12]
   32670:	ldr	r1, [fp, #-8]
   32674:	mov	r0, r3
   32678:	bl	11250 <memcpy@plt>
   3267c:	mov	r3, r0
   32680:	mov	r0, r3
   32684:	sub	sp, fp, #4
   32688:	ldr	fp, [sp]
   3268c:	add	sp, sp, #4
   32690:	pop	{pc}		; (ldr pc, [sp], #4)
   32694:	str	fp, [sp, #-8]!
   32698:	str	lr, [sp, #4]
   3269c:	add	fp, sp, #4
   326a0:	sub	sp, sp, #8
   326a4:	str	r0, [fp, #-8]
   326a8:	str	r1, [fp, #-12]
   326ac:	ldr	r0, [fp, #-12]
   326b0:	bl	31f68 <__assert_fail@plt+0x20a24>
   326b4:	mov	r3, r0
   326b8:	mov	r0, r3
   326bc:	ldr	r3, [fp, #-12]
   326c0:	mov	r2, r3
   326c4:	ldr	r1, [fp, #-8]
   326c8:	bl	11250 <memcpy@plt>
   326cc:	mov	r3, r0
   326d0:	mov	r0, r3
   326d4:	sub	sp, fp, #4
   326d8:	ldr	fp, [sp]
   326dc:	add	sp, sp, #4
   326e0:	pop	{pc}		; (ldr pc, [sp], #4)
   326e4:	str	fp, [sp, #-8]!
   326e8:	str	lr, [sp, #4]
   326ec:	add	fp, sp, #4
   326f0:	sub	sp, sp, #16
   326f4:	str	r0, [fp, #-16]
   326f8:	str	r1, [fp, #-20]	; 0xffffffec
   326fc:	ldr	r3, [fp, #-20]	; 0xffffffec
   32700:	add	r3, r3, #1
   32704:	mov	r0, r3
   32708:	bl	31f68 <__assert_fail@plt+0x20a24>
   3270c:	mov	r3, r0
   32710:	str	r3, [fp, #-8]
   32714:	ldr	r3, [fp, #-20]	; 0xffffffec
   32718:	ldr	r2, [fp, #-8]
   3271c:	add	r3, r2, r3
   32720:	mov	r2, #0
   32724:	strb	r2, [r3]
   32728:	ldr	r3, [fp, #-20]	; 0xffffffec
   3272c:	mov	r2, r3
   32730:	ldr	r1, [fp, #-16]
   32734:	ldr	r0, [fp, #-8]
   32738:	bl	11250 <memcpy@plt>
   3273c:	mov	r3, r0
   32740:	mov	r0, r3
   32744:	sub	sp, fp, #4
   32748:	ldr	fp, [sp]
   3274c:	add	sp, sp, #4
   32750:	pop	{pc}		; (ldr pc, [sp], #4)
   32754:	str	fp, [sp, #-8]!
   32758:	str	lr, [sp, #4]
   3275c:	add	fp, sp, #4
   32760:	sub	sp, sp, #8
   32764:	str	r0, [fp, #-8]
   32768:	ldr	r0, [fp, #-8]
   3276c:	bl	113f4 <strlen@plt>
   32770:	mov	r3, r0
   32774:	add	r3, r3, #1
   32778:	mov	r1, r3
   3277c:	ldr	r0, [fp, #-8]
   32780:	bl	32648 <__assert_fail@plt+0x21104>
   32784:	mov	r3, r0
   32788:	mov	r0, r3
   3278c:	sub	sp, fp, #4
   32790:	ldr	fp, [sp]
   32794:	add	sp, sp, #4
   32798:	pop	{pc}		; (ldr pc, [sp], #4)
   3279c:	strd	r4, [sp, #-16]!
   327a0:	str	fp, [sp, #8]
   327a4:	str	lr, [sp, #12]
   327a8:	add	fp, sp, #12
   327ac:	sub	sp, sp, #40	; 0x28
   327b0:	str	r0, [fp, #-32]	; 0xffffffe0
   327b4:	str	r1, [fp, #-36]	; 0xffffffdc
   327b8:	strd	r2, [fp, #-44]	; 0xffffffd4
   327bc:	sub	r2, fp, #28
   327c0:	ldr	r3, [fp, #12]
   327c4:	str	r3, [sp]
   327c8:	mov	r3, r2
   327cc:	ldr	r2, [fp, #-36]	; 0xffffffdc
   327d0:	mov	r1, #0
   327d4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   327d8:	bl	32c48 <__assert_fail@plt+0x21704>
   327dc:	str	r0, [fp, #-16]
   327e0:	ldr	r3, [fp, #-16]
   327e4:	cmp	r3, #0
   327e8:	bne	32888 <__assert_fail@plt+0x21344>
   327ec:	ldrd	r0, [fp, #-28]	; 0xffffffe4
   327f0:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   327f4:	cmp	r0, r2
   327f8:	sbcs	r3, r1, r3
   327fc:	blt	32814 <__assert_fail@plt+0x212d0>
   32800:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   32804:	ldrd	r0, [fp, #4]
   32808:	cmp	r0, r2
   3280c:	sbcs	r3, r1, r3
   32810:	bge	328c4 <__assert_fail@plt+0x21380>
   32814:	mov	r3, #1
   32818:	str	r3, [fp, #-16]
   3281c:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   32820:	mvn	r0, #-1073741824	; 0xc0000000
   32824:	mov	r1, #0
   32828:	cmp	r0, r2
   3282c:	sbcs	r3, r1, r3
   32830:	bge	32848 <__assert_fail@plt+0x21304>
   32834:	bl	11418 <__errno_location@plt>
   32838:	mov	r2, r0
   3283c:	mov	r3, #75	; 0x4b
   32840:	str	r3, [r2]
   32844:	b	328c4 <__assert_fail@plt+0x21380>
   32848:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   3284c:	mov	r0, #-1073741824	; 0xc0000000
   32850:	mvn	r1, #0
   32854:	cmp	r2, r0
   32858:	sbcs	r3, r3, r1
   3285c:	bge	32874 <__assert_fail@plt+0x21330>
   32860:	bl	11418 <__errno_location@plt>
   32864:	mov	r2, r0
   32868:	mov	r3, #75	; 0x4b
   3286c:	str	r3, [r2]
   32870:	b	328c4 <__assert_fail@plt+0x21380>
   32874:	bl	11418 <__errno_location@plt>
   32878:	mov	r2, r0
   3287c:	mov	r3, #34	; 0x22
   32880:	str	r3, [r2]
   32884:	b	328c4 <__assert_fail@plt+0x21380>
   32888:	ldr	r3, [fp, #-16]
   3288c:	cmp	r3, #1
   32890:	bne	328a8 <__assert_fail@plt+0x21364>
   32894:	bl	11418 <__errno_location@plt>
   32898:	mov	r2, r0
   3289c:	mov	r3, #75	; 0x4b
   328a0:	str	r3, [r2]
   328a4:	b	328c4 <__assert_fail@plt+0x21380>
   328a8:	ldr	r3, [fp, #-16]
   328ac:	cmp	r3, #3
   328b0:	bne	328c4 <__assert_fail@plt+0x21380>
   328b4:	bl	11418 <__errno_location@plt>
   328b8:	mov	r2, r0
   328bc:	mov	r3, #0
   328c0:	str	r3, [r2]
   328c4:	ldr	r3, [fp, #-16]
   328c8:	cmp	r3, #0
   328cc:	beq	32938 <__assert_fail@plt+0x213f4>
   328d0:	ldr	r3, [fp, #20]
   328d4:	cmp	r3, #0
   328d8:	beq	328e4 <__assert_fail@plt+0x213a0>
   328dc:	ldr	r4, [fp, #20]
   328e0:	b	328e8 <__assert_fail@plt+0x213a4>
   328e4:	mov	r4, #1
   328e8:	bl	11418 <__errno_location@plt>
   328ec:	mov	r3, r0
   328f0:	ldr	r3, [r3]
   328f4:	cmp	r3, #22
   328f8:	beq	3290c <__assert_fail@plt+0x213c8>
   328fc:	bl	11418 <__errno_location@plt>
   32900:	mov	r3, r0
   32904:	ldr	r5, [r3]
   32908:	b	32910 <__assert_fail@plt+0x213cc>
   3290c:	mov	r5, #0
   32910:	ldr	r0, [fp, #-32]	; 0xffffffe0
   32914:	bl	17e04 <__assert_fail@plt+0x68c0>
   32918:	mov	r3, r0
   3291c:	str	r3, [sp]
   32920:	ldr	r3, [fp, #16]
   32924:	movw	r2, #26632	; 0x6808
   32928:	movt	r2, #3
   3292c:	mov	r1, r5
   32930:	mov	r0, r4
   32934:	bl	11370 <error@plt>
   32938:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   3293c:	mov	r0, r2
   32940:	mov	r1, r3
   32944:	sub	sp, fp, #12
   32948:	ldrd	r4, [sp]
   3294c:	ldr	fp, [sp, #8]
   32950:	add	sp, sp, #12
   32954:	pop	{pc}		; (ldr pc, [sp], #4)
   32958:	str	fp, [sp, #-8]!
   3295c:	str	lr, [sp, #4]
   32960:	add	fp, sp, #4
   32964:	sub	sp, sp, #40	; 0x28
   32968:	str	r0, [fp, #-8]
   3296c:	strd	r2, [fp, #-20]	; 0xffffffec
   32970:	ldr	r3, [fp, #20]
   32974:	str	r3, [sp, #16]
   32978:	ldr	r3, [fp, #16]
   3297c:	str	r3, [sp, #12]
   32980:	ldr	r3, [fp, #12]
   32984:	str	r3, [sp, #8]
   32988:	ldrd	r2, [fp, #4]
   3298c:	strd	r2, [sp]
   32990:	ldrd	r2, [fp, #-20]	; 0xffffffec
   32994:	mov	r1, #10
   32998:	ldr	r0, [fp, #-8]
   3299c:	bl	3279c <__assert_fail@plt+0x21258>
   329a0:	mov	r2, r0
   329a4:	mov	r3, r1
   329a8:	mov	r0, r2
   329ac:	mov	r1, r3
   329b0:	sub	sp, fp, #4
   329b4:	ldr	fp, [sp]
   329b8:	add	sp, sp, #4
   329bc:	pop	{pc}		; (ldr pc, [sp], #4)
   329c0:	strd	r4, [sp, #-32]!	; 0xffffffe0
   329c4:	strd	r6, [sp, #8]
   329c8:	strd	r8, [sp, #16]
   329cc:	str	fp, [sp, #24]
   329d0:	str	lr, [sp, #28]
   329d4:	add	fp, sp, #28
   329d8:	sub	sp, sp, #72	; 0x48
   329dc:	str	r0, [fp, #-40]	; 0xffffffd8
   329e0:	str	r1, [fp, #-44]	; 0xffffffd4
   329e4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   329e8:	ldrd	r6, [r3]
   329ec:	ldr	r3, [fp, #-44]	; 0xffffffd4
   329f0:	mov	r8, r3
   329f4:	asr	r9, r8, #31
   329f8:	mov	r2, #0
   329fc:	mov	r3, #0
   32a00:	strd	r2, [fp, #-60]	; 0xffffffc4
   32a04:	mov	r0, #0
   32a08:	mov	r1, #0
   32a0c:	mov	r0, r7
   32a10:	asr	r1, r7, #31
   32a14:	asr	ip, r6, #31
   32a18:	mov	r2, #0
   32a1c:	mov	r3, #0
   32a20:	mov	r2, r9
   32a24:	asr	r3, r9, #31
   32a28:	cmp	ip, r0
   32a2c:	bne	32a3c <__assert_fail@plt+0x214f8>
   32a30:	smull	r2, r3, r6, r8
   32a34:	strd	r2, [fp, #-52]	; 0xffffffcc
   32a38:	b	32b50 <__assert_fail@plt+0x2160c>
   32a3c:	strd	r6, [fp, #-92]	; 0xffffffa4
   32a40:	mov	ip, r0
   32a44:	mov	lr, r8
   32a48:	umull	r2, r3, r6, r8
   32a4c:	strd	r2, [fp, #-100]	; 0xffffff9c
   32a50:	umull	r2, r3, lr, ip
   32a54:	mov	r0, r2
   32a58:	mov	r1, r3
   32a5c:	cmp	ip, #0
   32a60:	bge	32a90 <__assert_fail@plt+0x2154c>
   32a64:	mov	r2, lr
   32a68:	mov	r3, #0
   32a6c:	mov	r4, #0
   32a70:	mov	r5, #0
   32a74:	mov	r5, r2
   32a78:	mov	r4, #0
   32a7c:	subs	r3, r0, r4
   32a80:	str	r3, [fp, #-68]	; 0xffffffbc
   32a84:	sbc	r3, r1, r5
   32a88:	str	r3, [fp, #-64]	; 0xffffffc0
   32a8c:	ldrd	r0, [fp, #-68]	; 0xffffffbc
   32a90:	cmp	lr, #0
   32a94:	bge	32ab4 <__assert_fail@plt+0x21570>
   32a98:	ldrd	r2, [fp, #-92]	; 0xffffffa4
   32a9c:	mov	ip, r2
   32aa0:	subs	ip, r0, ip
   32aa4:	str	ip, [fp, #-76]	; 0xffffffb4
   32aa8:	sbc	r3, r1, r3
   32aac:	str	r3, [fp, #-72]	; 0xffffffb8
   32ab0:	ldrd	r0, [fp, #-76]	; 0xffffffb4
   32ab4:	mov	r2, #0
   32ab8:	mov	r3, #0
   32abc:	ldrd	r4, [fp, #-100]	; 0xffffff9c
   32ac0:	mov	ip, r5
   32ac4:	mov	r2, ip
   32ac8:	mov	r3, #0
   32acc:	adds	ip, r0, r2
   32ad0:	str	ip, [fp, #-84]	; 0xffffffac
   32ad4:	adc	r3, r1, r3
   32ad8:	str	r3, [fp, #-80]	; 0xffffffb0
   32adc:	ldrd	r0, [fp, #-84]	; 0xffffffac
   32ae0:	mov	r2, #0
   32ae4:	mov	r3, #0
   32ae8:	mov	r2, r1
   32aec:	asr	r3, r1, #31
   32af0:	asr	ip, r0, #31
   32af4:	cmp	ip, r2
   32af8:	bne	32b28 <__assert_fail@plt+0x215e4>
   32afc:	mov	r2, #0
   32b00:	mov	r3, #0
   32b04:	mov	r3, r0
   32b08:	mov	r2, #0
   32b0c:	mov	r0, r4
   32b10:	mov	r1, #0
   32b14:	orr	ip, r2, r0
   32b18:	str	ip, [fp, #-52]	; 0xffffffcc
   32b1c:	orr	r3, r3, r1
   32b20:	str	r3, [fp, #-48]	; 0xffffffd0
   32b24:	b	32b50 <__assert_fail@plt+0x2160c>
   32b28:	mul	r2, r8, r7
   32b2c:	mul	r3, r6, r9
   32b30:	add	r1, r2, r3
   32b34:	umull	r2, r3, r6, r8
   32b38:	add	r1, r1, r3
   32b3c:	mov	r3, r1
   32b40:	strd	r2, [fp, #-52]	; 0xffffffcc
   32b44:	mov	r2, #1
   32b48:	mov	r3, #0
   32b4c:	strd	r2, [fp, #-60]	; 0xffffffc4
   32b50:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   32b54:	strd	r2, [fp, #-36]	; 0xffffffdc
   32b58:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   32b5c:	mov	r3, r2
   32b60:	and	r3, r3, #1
   32b64:	uxtb	r3, r3
   32b68:	cmp	r3, #0
   32b6c:	beq	32ba8 <__assert_fail@plt+0x21664>
   32b70:	ldr	r3, [fp, #-40]	; 0xffffffd8
   32b74:	ldrd	r2, [r3]
   32b78:	cmp	r2, #0
   32b7c:	sbcs	r3, r3, #0
   32b80:	bge	32b90 <__assert_fail@plt+0x2164c>
   32b84:	mov	r2, #0
   32b88:	mov	r3, #-2147483648	; 0x80000000
   32b8c:	b	32b98 <__assert_fail@plt+0x21654>
   32b90:	mvn	r2, #0
   32b94:	mvn	r3, #-2147483648	; 0x80000000
   32b98:	ldr	r1, [fp, #-40]	; 0xffffffd8
   32b9c:	strd	r2, [r1]
   32ba0:	mov	r3, #1
   32ba4:	b	32bb8 <__assert_fail@plt+0x21674>
   32ba8:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   32bac:	ldr	r1, [fp, #-40]	; 0xffffffd8
   32bb0:	strd	r2, [r1]
   32bb4:	mov	r3, #0
   32bb8:	mov	r0, r3
   32bbc:	sub	sp, fp, #28
   32bc0:	ldrd	r4, [sp]
   32bc4:	ldrd	r6, [sp, #8]
   32bc8:	ldrd	r8, [sp, #16]
   32bcc:	ldr	fp, [sp, #24]
   32bd0:	add	sp, sp, #28
   32bd4:	pop	{pc}		; (ldr pc, [sp], #4)
   32bd8:	str	fp, [sp, #-8]!
   32bdc:	str	lr, [sp, #4]
   32be0:	add	fp, sp, #4
   32be4:	sub	sp, sp, #24
   32be8:	str	r0, [fp, #-16]
   32bec:	str	r1, [fp, #-20]	; 0xffffffec
   32bf0:	str	r2, [fp, #-24]	; 0xffffffe8
   32bf4:	mov	r3, #0
   32bf8:	str	r3, [fp, #-8]
   32bfc:	b	32c1c <__assert_fail@plt+0x216d8>
   32c00:	ldr	r1, [fp, #-20]	; 0xffffffec
   32c04:	ldr	r0, [fp, #-16]
   32c08:	bl	329c0 <__assert_fail@plt+0x2147c>
   32c0c:	mov	r2, r0
   32c10:	ldr	r3, [fp, #-8]
   32c14:	orr	r3, r3, r2
   32c18:	str	r3, [fp, #-8]
   32c1c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   32c20:	sub	r2, r3, #1
   32c24:	str	r2, [fp, #-24]	; 0xffffffe8
   32c28:	cmp	r3, #0
   32c2c:	bne	32c00 <__assert_fail@plt+0x216bc>
   32c30:	ldr	r3, [fp, #-8]
   32c34:	mov	r0, r3
   32c38:	sub	sp, fp, #4
   32c3c:	ldr	fp, [sp]
   32c40:	add	sp, sp, #4
   32c44:	pop	{pc}		; (ldr pc, [sp], #4)
   32c48:	str	fp, [sp, #-8]!
   32c4c:	str	lr, [sp, #4]
   32c50:	add	fp, sp, #4
   32c54:	sub	sp, sp, #48	; 0x30
   32c58:	str	r0, [fp, #-40]	; 0xffffffd8
   32c5c:	str	r1, [fp, #-44]	; 0xffffffd4
   32c60:	str	r2, [fp, #-48]	; 0xffffffd0
   32c64:	str	r3, [fp, #-52]	; 0xffffffcc
   32c68:	mov	r3, #0
   32c6c:	str	r3, [fp, #-8]
   32c70:	ldr	r3, [fp, #-48]	; 0xffffffd0
   32c74:	cmp	r3, #0
   32c78:	blt	32c88 <__assert_fail@plt+0x21744>
   32c7c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   32c80:	cmp	r3, #36	; 0x24
   32c84:	ble	32ca8 <__assert_fail@plt+0x21764>
   32c88:	movw	r3, #26696	; 0x6848
   32c8c:	movt	r3, #3
   32c90:	mov	r2, #85	; 0x55
   32c94:	movw	r1, #26640	; 0x6810
   32c98:	movt	r1, #3
   32c9c:	movw	r0, #26656	; 0x6820
   32ca0:	movt	r0, #3
   32ca4:	bl	11544 <__assert_fail@plt>
   32ca8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   32cac:	cmp	r3, #0
   32cb0:	bne	32cbc <__assert_fail@plt+0x21778>
   32cb4:	sub	r3, fp, #28
   32cb8:	b	32cc0 <__assert_fail@plt+0x2177c>
   32cbc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   32cc0:	str	r3, [fp, #-24]	; 0xffffffe8
   32cc4:	bl	11418 <__errno_location@plt>
   32cc8:	mov	r2, r0
   32ccc:	mov	r3, #0
   32cd0:	str	r3, [r2]
   32cd4:	ldr	r2, [fp, #-48]	; 0xffffffd0
   32cd8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   32cdc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   32ce0:	bl	11478 <strtoimax@plt>
   32ce4:	mov	r2, r0
   32ce8:	mov	r3, r1
   32cec:	strd	r2, [fp, #-36]	; 0xffffffdc
   32cf0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   32cf4:	ldr	r3, [r3]
   32cf8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   32cfc:	cmp	r2, r3
   32d00:	bne	32d60 <__assert_fail@plt+0x2181c>
   32d04:	ldr	r3, [fp, #4]
   32d08:	cmp	r3, #0
   32d0c:	beq	32d58 <__assert_fail@plt+0x21814>
   32d10:	ldr	r3, [fp, #-24]	; 0xffffffe8
   32d14:	ldr	r3, [r3]
   32d18:	ldrb	r3, [r3]
   32d1c:	cmp	r3, #0
   32d20:	beq	32d58 <__assert_fail@plt+0x21814>
   32d24:	ldr	r3, [fp, #-24]	; 0xffffffe8
   32d28:	ldr	r3, [r3]
   32d2c:	ldrb	r3, [r3]
   32d30:	mov	r1, r3
   32d34:	ldr	r0, [fp, #4]
   32d38:	bl	11400 <strchr@plt>
   32d3c:	mov	r3, r0
   32d40:	cmp	r3, #0
   32d44:	beq	32d58 <__assert_fail@plt+0x21814>
   32d48:	mov	r2, #1
   32d4c:	mov	r3, #0
   32d50:	strd	r2, [fp, #-36]	; 0xffffffdc
   32d54:	b	32d98 <__assert_fail@plt+0x21854>
   32d58:	mov	r3, #4
   32d5c:	b	3321c <__assert_fail@plt+0x21cd8>
   32d60:	bl	11418 <__errno_location@plt>
   32d64:	mov	r3, r0
   32d68:	ldr	r3, [r3]
   32d6c:	cmp	r3, #0
   32d70:	beq	32d98 <__assert_fail@plt+0x21854>
   32d74:	bl	11418 <__errno_location@plt>
   32d78:	mov	r3, r0
   32d7c:	ldr	r3, [r3]
   32d80:	cmp	r3, #34	; 0x22
   32d84:	beq	32d90 <__assert_fail@plt+0x2184c>
   32d88:	mov	r3, #4
   32d8c:	b	3321c <__assert_fail@plt+0x21cd8>
   32d90:	mov	r3, #1
   32d94:	str	r3, [fp, #-8]
   32d98:	ldr	r3, [fp, #4]
   32d9c:	cmp	r3, #0
   32da0:	bne	32db8 <__assert_fail@plt+0x21874>
   32da4:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   32da8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   32dac:	strd	r2, [r1]
   32db0:	ldr	r3, [fp, #-8]
   32db4:	b	3321c <__assert_fail@plt+0x21cd8>
   32db8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   32dbc:	ldr	r3, [r3]
   32dc0:	ldrb	r3, [r3]
   32dc4:	cmp	r3, #0
   32dc8:	beq	3320c <__assert_fail@plt+0x21cc8>
   32dcc:	mov	r3, #1024	; 0x400
   32dd0:	str	r3, [fp, #-12]
   32dd4:	mov	r3, #1
   32dd8:	str	r3, [fp, #-16]
   32ddc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   32de0:	ldr	r3, [r3]
   32de4:	ldrb	r3, [r3]
   32de8:	mov	r1, r3
   32dec:	ldr	r0, [fp, #4]
   32df0:	bl	11400 <strchr@plt>
   32df4:	mov	r3, r0
   32df8:	cmp	r3, #0
   32dfc:	bne	32e18 <__assert_fail@plt+0x218d4>
   32e00:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   32e04:	ldr	r1, [fp, #-52]	; 0xffffffcc
   32e08:	strd	r2, [r1]
   32e0c:	ldr	r3, [fp, #-8]
   32e10:	orr	r3, r3, #2
   32e14:	b	3321c <__assert_fail@plt+0x21cd8>
   32e18:	ldr	r3, [fp, #-24]	; 0xffffffe8
   32e1c:	ldr	r3, [r3]
   32e20:	ldrb	r3, [r3]
   32e24:	sub	r3, r3, #69	; 0x45
   32e28:	cmp	r3, #47	; 0x2f
   32e2c:	ldrls	pc, [pc, r3, lsl #2]
   32e30:	b	32f84 <__assert_fail@plt+0x21a40>
   32e34:	strdeq	r2, [r3], -r4
   32e38:	andeq	r2, r3, r4, lsl #31
   32e3c:	strdeq	r2, [r3], -r4
   32e40:	andeq	r2, r3, r4, lsl #31
   32e44:	andeq	r2, r3, r4, lsl #31
   32e48:	andeq	r2, r3, r4, lsl #31
   32e4c:	strdeq	r2, [r3], -r4
   32e50:	andeq	r2, r3, r4, lsl #31
   32e54:	strdeq	r2, [r3], -r4
   32e58:	andeq	r2, r3, r4, lsl #31
   32e5c:	andeq	r2, r3, r4, lsl #31
   32e60:	strdeq	r2, [r3], -r4
   32e64:	andeq	r2, r3, r4, lsl #31
   32e68:	andeq	r2, r3, r4, lsl #31
   32e6c:	andeq	r2, r3, r4, lsl #31
   32e70:	strdeq	r2, [r3], -r4
   32e74:	andeq	r2, r3, r4, lsl #31
   32e78:	andeq	r2, r3, r4, lsl #31
   32e7c:	andeq	r2, r3, r4, lsl #31
   32e80:	andeq	r2, r3, r4, lsl #31
   32e84:	strdeq	r2, [r3], -r4
   32e88:	strdeq	r2, [r3], -r4
   32e8c:	andeq	r2, r3, r4, lsl #31
   32e90:	andeq	r2, r3, r4, lsl #31
   32e94:	andeq	r2, r3, r4, lsl #31
   32e98:	andeq	r2, r3, r4, lsl #31
   32e9c:	andeq	r2, r3, r4, lsl #31
   32ea0:	andeq	r2, r3, r4, lsl #31
   32ea4:	andeq	r2, r3, r4, lsl #31
   32ea8:	andeq	r2, r3, r4, lsl #31
   32eac:	andeq	r2, r3, r4, lsl #31
   32eb0:	andeq	r2, r3, r4, lsl #31
   32eb4:	andeq	r2, r3, r4, lsl #31
   32eb8:	andeq	r2, r3, r4, lsl #31
   32ebc:	strdeq	r2, [r3], -r4
   32ec0:	andeq	r2, r3, r4, lsl #31
   32ec4:	andeq	r2, r3, r4, lsl #31
   32ec8:	andeq	r2, r3, r4, lsl #31
   32ecc:	strdeq	r2, [r3], -r4
   32ed0:	andeq	r2, r3, r4, lsl #31
   32ed4:	strdeq	r2, [r3], -r4
   32ed8:	andeq	r2, r3, r4, lsl #31
   32edc:	andeq	r2, r3, r4, lsl #31
   32ee0:	andeq	r2, r3, r4, lsl #31
   32ee4:	andeq	r2, r3, r4, lsl #31
   32ee8:	andeq	r2, r3, r4, lsl #31
   32eec:	andeq	r2, r3, r4, lsl #31
   32ef0:	strdeq	r2, [r3], -r4
   32ef4:	mov	r1, #48	; 0x30
   32ef8:	ldr	r0, [fp, #4]
   32efc:	bl	11400 <strchr@plt>
   32f00:	mov	r3, r0
   32f04:	cmp	r3, #0
   32f08:	beq	32f78 <__assert_fail@plt+0x21a34>
   32f0c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   32f10:	ldr	r3, [r3]
   32f14:	add	r3, r3, #1
   32f18:	ldrb	r3, [r3]
   32f1c:	cmp	r3, #68	; 0x44
   32f20:	beq	32f60 <__assert_fail@plt+0x21a1c>
   32f24:	cmp	r3, #105	; 0x69
   32f28:	beq	32f38 <__assert_fail@plt+0x219f4>
   32f2c:	cmp	r3, #66	; 0x42
   32f30:	beq	32f60 <__assert_fail@plt+0x21a1c>
   32f34:	b	32f84 <__assert_fail@plt+0x21a40>
   32f38:	ldr	r3, [fp, #-24]	; 0xffffffe8
   32f3c:	ldr	r3, [r3]
   32f40:	add	r3, r3, #2
   32f44:	ldrb	r3, [r3]
   32f48:	cmp	r3, #66	; 0x42
   32f4c:	bne	32f80 <__assert_fail@plt+0x21a3c>
   32f50:	ldr	r3, [fp, #-16]
   32f54:	add	r3, r3, #2
   32f58:	str	r3, [fp, #-16]
   32f5c:	b	32f80 <__assert_fail@plt+0x21a3c>
   32f60:	mov	r3, #1000	; 0x3e8
   32f64:	str	r3, [fp, #-12]
   32f68:	ldr	r3, [fp, #-16]
   32f6c:	add	r3, r3, #1
   32f70:	str	r3, [fp, #-16]
   32f74:	b	32f84 <__assert_fail@plt+0x21a40>
   32f78:	nop	{0}
   32f7c:	b	32f84 <__assert_fail@plt+0x21a40>
   32f80:	nop	{0}
   32f84:	ldr	r3, [fp, #-24]	; 0xffffffe8
   32f88:	ldr	r3, [r3]
   32f8c:	ldrb	r3, [r3]
   32f90:	sub	r3, r3, #66	; 0x42
   32f94:	cmp	r3, #53	; 0x35
   32f98:	ldrls	pc, [pc, r3, lsl #2]
   32f9c:	b	331ac <__assert_fail@plt+0x21c68>
   32fa0:	muleq	r3, r0, r0
   32fa4:	andeq	r3, r3, ip, lsr #3
   32fa8:	andeq	r3, r3, ip, lsr #3
   32fac:	strheq	r3, [r3], -r4
   32fb0:	andeq	r3, r3, ip, lsr #3
   32fb4:	ldrdeq	r3, [r3], -r0
   32fb8:	andeq	r3, r3, ip, lsr #3
   32fbc:	andeq	r3, r3, ip, lsr #3
   32fc0:	andeq	r3, r3, ip, lsr #3
   32fc4:	andeq	r3, r3, ip, ror #1
   32fc8:	andeq	r3, r3, ip, lsr #3
   32fcc:	andeq	r3, r3, r8, lsl #2
   32fd0:	andeq	r3, r3, ip, lsr #3
   32fd4:	andeq	r3, r3, ip, lsr #3
   32fd8:	andeq	r3, r3, r4, lsr #2
   32fdc:	andeq	r3, r3, ip, lsr #3
   32fe0:	andeq	r3, r3, ip, lsr #3
   32fe4:	andeq	r3, r3, ip, lsr #3
   32fe8:	andeq	r3, r3, r0, asr #2
   32fec:	andeq	r3, r3, ip, lsr #3
   32ff0:	andeq	r3, r3, ip, lsr #3
   32ff4:	andeq	r3, r3, ip, lsr #3
   32ff8:	andeq	r3, r3, ip, lsr #3
   32ffc:	andeq	r3, r3, r4, ror r1
   33000:	muleq	r3, r0, r1
   33004:	andeq	r3, r3, ip, lsr #3
   33008:	andeq	r3, r3, ip, lsr #3
   3300c:	andeq	r3, r3, ip, lsr #3
   33010:	andeq	r3, r3, ip, lsr #3
   33014:	andeq	r3, r3, ip, lsr #3
   33018:	andeq	r3, r3, ip, lsr #3
   3301c:	andeq	r3, r3, ip, lsr #3
   33020:	andeq	r3, r3, r8, ror r0
   33024:	andeq	r3, r3, r8, lsr #1
   33028:	andeq	r3, r3, ip, lsr #3
   3302c:	andeq	r3, r3, ip, lsr #3
   33030:	andeq	r3, r3, ip, lsr #3
   33034:	ldrdeq	r3, [r3], -r0
   33038:	andeq	r3, r3, ip, lsr #3
   3303c:	andeq	r3, r3, ip, lsr #3
   33040:	andeq	r3, r3, ip, lsr #3
   33044:	andeq	r3, r3, ip, ror #1
   33048:	andeq	r3, r3, ip, lsr #3
   3304c:	andeq	r3, r3, r8, lsl #2
   33050:	andeq	r3, r3, ip, lsr #3
   33054:	andeq	r3, r3, ip, lsr #3
   33058:	andeq	r3, r3, ip, lsr #3
   3305c:	andeq	r3, r3, ip, lsr #3
   33060:	andeq	r3, r3, ip, lsr #3
   33064:	andeq	r3, r3, ip, lsr #3
   33068:	andeq	r3, r3, r0, asr #2
   3306c:	andeq	r3, r3, ip, lsr #3
   33070:	andeq	r3, r3, ip, lsr #3
   33074:	andeq	r3, r3, ip, asr r1
   33078:	sub	r3, fp, #36	; 0x24
   3307c:	mov	r1, #512	; 0x200
   33080:	mov	r0, r3
   33084:	bl	329c0 <__assert_fail@plt+0x2147c>
   33088:	str	r0, [fp, #-20]	; 0xffffffec
   3308c:	b	331c4 <__assert_fail@plt+0x21c80>
   33090:	sub	r3, fp, #36	; 0x24
   33094:	mov	r1, #1024	; 0x400
   33098:	mov	r0, r3
   3309c:	bl	329c0 <__assert_fail@plt+0x2147c>
   330a0:	str	r0, [fp, #-20]	; 0xffffffec
   330a4:	b	331c4 <__assert_fail@plt+0x21c80>
   330a8:	mov	r3, #0
   330ac:	str	r3, [fp, #-20]	; 0xffffffec
   330b0:	b	331c4 <__assert_fail@plt+0x21c80>
   330b4:	sub	r3, fp, #36	; 0x24
   330b8:	mov	r2, #6
   330bc:	ldr	r1, [fp, #-12]
   330c0:	mov	r0, r3
   330c4:	bl	32bd8 <__assert_fail@plt+0x21694>
   330c8:	str	r0, [fp, #-20]	; 0xffffffec
   330cc:	b	331c4 <__assert_fail@plt+0x21c80>
   330d0:	sub	r3, fp, #36	; 0x24
   330d4:	mov	r2, #3
   330d8:	ldr	r1, [fp, #-12]
   330dc:	mov	r0, r3
   330e0:	bl	32bd8 <__assert_fail@plt+0x21694>
   330e4:	str	r0, [fp, #-20]	; 0xffffffec
   330e8:	b	331c4 <__assert_fail@plt+0x21c80>
   330ec:	sub	r3, fp, #36	; 0x24
   330f0:	mov	r2, #1
   330f4:	ldr	r1, [fp, #-12]
   330f8:	mov	r0, r3
   330fc:	bl	32bd8 <__assert_fail@plt+0x21694>
   33100:	str	r0, [fp, #-20]	; 0xffffffec
   33104:	b	331c4 <__assert_fail@plt+0x21c80>
   33108:	sub	r3, fp, #36	; 0x24
   3310c:	mov	r2, #2
   33110:	ldr	r1, [fp, #-12]
   33114:	mov	r0, r3
   33118:	bl	32bd8 <__assert_fail@plt+0x21694>
   3311c:	str	r0, [fp, #-20]	; 0xffffffec
   33120:	b	331c4 <__assert_fail@plt+0x21c80>
   33124:	sub	r3, fp, #36	; 0x24
   33128:	mov	r2, #5
   3312c:	ldr	r1, [fp, #-12]
   33130:	mov	r0, r3
   33134:	bl	32bd8 <__assert_fail@plt+0x21694>
   33138:	str	r0, [fp, #-20]	; 0xffffffec
   3313c:	b	331c4 <__assert_fail@plt+0x21c80>
   33140:	sub	r3, fp, #36	; 0x24
   33144:	mov	r2, #4
   33148:	ldr	r1, [fp, #-12]
   3314c:	mov	r0, r3
   33150:	bl	32bd8 <__assert_fail@plt+0x21694>
   33154:	str	r0, [fp, #-20]	; 0xffffffec
   33158:	b	331c4 <__assert_fail@plt+0x21c80>
   3315c:	sub	r3, fp, #36	; 0x24
   33160:	mov	r1, #2
   33164:	mov	r0, r3
   33168:	bl	329c0 <__assert_fail@plt+0x2147c>
   3316c:	str	r0, [fp, #-20]	; 0xffffffec
   33170:	b	331c4 <__assert_fail@plt+0x21c80>
   33174:	sub	r3, fp, #36	; 0x24
   33178:	mov	r2, #8
   3317c:	ldr	r1, [fp, #-12]
   33180:	mov	r0, r3
   33184:	bl	32bd8 <__assert_fail@plt+0x21694>
   33188:	str	r0, [fp, #-20]	; 0xffffffec
   3318c:	b	331c4 <__assert_fail@plt+0x21c80>
   33190:	sub	r3, fp, #36	; 0x24
   33194:	mov	r2, #7
   33198:	ldr	r1, [fp, #-12]
   3319c:	mov	r0, r3
   331a0:	bl	32bd8 <__assert_fail@plt+0x21694>
   331a4:	str	r0, [fp, #-20]	; 0xffffffec
   331a8:	b	331c4 <__assert_fail@plt+0x21c80>
   331ac:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   331b0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   331b4:	strd	r2, [r1]
   331b8:	ldr	r3, [fp, #-8]
   331bc:	orr	r3, r3, #2
   331c0:	b	3321c <__assert_fail@plt+0x21cd8>
   331c4:	ldr	r2, [fp, #-8]
   331c8:	ldr	r3, [fp, #-20]	; 0xffffffec
   331cc:	orr	r3, r2, r3
   331d0:	str	r3, [fp, #-8]
   331d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   331d8:	ldr	r2, [r3]
   331dc:	ldr	r3, [fp, #-16]
   331e0:	add	r2, r2, r3
   331e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   331e8:	str	r2, [r3]
   331ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   331f0:	ldr	r3, [r3]
   331f4:	ldrb	r3, [r3]
   331f8:	cmp	r3, #0
   331fc:	beq	3320c <__assert_fail@plt+0x21cc8>
   33200:	ldr	r3, [fp, #-8]
   33204:	orr	r3, r3, #2
   33208:	str	r3, [fp, #-8]
   3320c:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   33210:	ldr	r1, [fp, #-52]	; 0xffffffcc
   33214:	strd	r2, [r1]
   33218:	ldr	r3, [fp, #-8]
   3321c:	mov	r0, r3
   33220:	sub	sp, fp, #4
   33224:	ldr	fp, [sp]
   33228:	add	sp, sp, #4
   3322c:	pop	{pc}		; (ldr pc, [sp], #4)
   33230:	strd	r4, [sp, #-28]!	; 0xffffffe4
   33234:	strd	r6, [sp, #8]
   33238:	strd	r8, [sp, #16]
   3323c:	str	fp, [sp, #24]
   33240:	add	fp, sp, #24
   33244:	sub	sp, sp, #44	; 0x2c
   33248:	str	r0, [fp, #-40]	; 0xffffffd8
   3324c:	str	r1, [fp, #-44]	; 0xffffffd4
   33250:	ldr	r3, [fp, #-40]	; 0xffffffd8
   33254:	ldrd	r4, [r3]
   33258:	ldr	r3, [fp, #-44]	; 0xffffffd4
   3325c:	mov	r6, r3
   33260:	asr	r7, r6, #31
   33264:	mov	r2, #0
   33268:	mov	r3, #0
   3326c:	strd	r2, [fp, #-60]	; 0xffffffc4
   33270:	cmp	r6, #0
   33274:	sbcs	r3, r7, #0
   33278:	bge	33290 <__assert_fail@plt+0x21d4c>
   3327c:	orrs	r3, r4, r5
   33280:	beq	33290 <__assert_fail@plt+0x21d4c>
   33284:	mov	r2, #1
   33288:	mov	r3, #0
   3328c:	strd	r2, [fp, #-60]	; 0xffffffc4
   33290:	mov	r0, #0
   33294:	mov	r1, #0
   33298:	mov	r0, r7
   3329c:	mov	r1, #0
   332a0:	mov	r2, #0
   332a4:	mov	r3, #0
   332a8:	mov	r2, r5
   332ac:	mov	r3, #0
   332b0:	cmp	r0, #0
   332b4:	bne	332d8 <__assert_fail@plt+0x21d94>
   332b8:	cmp	r2, #0
   332bc:	bne	332cc <__assert_fail@plt+0x21d88>
   332c0:	umull	r2, r3, r6, r4
   332c4:	strd	r2, [fp, #-52]	; 0xffffffcc
   332c8:	b	333a4 <__assert_fail@plt+0x21e60>
   332cc:	mov	r3, r2
   332d0:	mov	r2, r6
   332d4:	b	332e8 <__assert_fail@plt+0x21da4>
   332d8:	cmp	r2, #0
   332dc:	bne	33360 <__assert_fail@plt+0x21e1c>
   332e0:	mov	r3, r0
   332e4:	mov	r2, r4
   332e8:	umull	r8, r9, r6, r4
   332ec:	umull	r2, r3, r2, r3
   332f0:	mov	r0, r2
   332f4:	mov	r1, r3
   332f8:	mov	r2, #0
   332fc:	mov	r3, #0
   33300:	mov	r2, r9
   33304:	mov	r3, #0
   33308:	adds	ip, r0, r2
   3330c:	str	ip, [fp, #-68]	; 0xffffffbc
   33310:	adc	r3, r1, r3
   33314:	str	r3, [fp, #-64]	; 0xffffffc0
   33318:	ldrd	r0, [fp, #-68]	; 0xffffffbc
   3331c:	mov	r2, #0
   33320:	mov	r3, #0
   33324:	mov	r2, r1
   33328:	asr	r3, r1, #31
   3332c:	cmp	r2, #0
   33330:	bne	3337c <__assert_fail@plt+0x21e38>
   33334:	mov	r2, #0
   33338:	mov	r3, #0
   3333c:	mov	r3, r0
   33340:	mov	r2, #0
   33344:	mov	r0, r8
   33348:	mov	r1, #0
   3334c:	orr	ip, r2, r0
   33350:	str	ip, [fp, #-52]	; 0xffffffcc
   33354:	orr	r3, r3, r1
   33358:	str	r3, [fp, #-48]	; 0xffffffd0
   3335c:	b	333a4 <__assert_fail@plt+0x21e60>
   33360:	mul	r2, r4, r7
   33364:	mul	r3, r6, r5
   33368:	add	r1, r2, r3
   3336c:	umull	r2, r3, r6, r4
   33370:	add	r1, r1, r3
   33374:	mov	r3, r1
   33378:	strd	r2, [fp, #-52]	; 0xffffffcc
   3337c:	mul	r2, r4, r7
   33380:	mul	r3, r6, r5
   33384:	add	r1, r2, r3
   33388:	umull	r2, r3, r6, r4
   3338c:	add	r1, r1, r3
   33390:	mov	r3, r1
   33394:	strd	r2, [fp, #-52]	; 0xffffffcc
   33398:	mov	r2, #1
   3339c:	mov	r3, #0
   333a0:	strd	r2, [fp, #-60]	; 0xffffffc4
   333a4:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   333a8:	strd	r2, [fp, #-36]	; 0xffffffdc
   333ac:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   333b0:	mov	r3, r2
   333b4:	and	r3, r3, #1
   333b8:	uxtb	r3, r3
   333bc:	cmp	r3, #0
   333c0:	beq	333dc <__assert_fail@plt+0x21e98>
   333c4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   333c8:	mvn	r2, #0
   333cc:	mvn	r3, #0
   333d0:	strd	r2, [r1]
   333d4:	mov	r3, #1
   333d8:	b	333ec <__assert_fail@plt+0x21ea8>
   333dc:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   333e0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   333e4:	strd	r2, [r1]
   333e8:	mov	r3, #0
   333ec:	mov	r0, r3
   333f0:	sub	sp, fp, #24
   333f4:	ldrd	r4, [sp]
   333f8:	ldrd	r6, [sp, #8]
   333fc:	ldrd	r8, [sp, #16]
   33400:	ldr	fp, [sp, #24]
   33404:	add	sp, sp, #28
   33408:	bx	lr
   3340c:	str	fp, [sp, #-8]!
   33410:	str	lr, [sp, #4]
   33414:	add	fp, sp, #4
   33418:	sub	sp, sp, #24
   3341c:	str	r0, [fp, #-16]
   33420:	str	r1, [fp, #-20]	; 0xffffffec
   33424:	str	r2, [fp, #-24]	; 0xffffffe8
   33428:	mov	r3, #0
   3342c:	str	r3, [fp, #-8]
   33430:	b	33450 <__assert_fail@plt+0x21f0c>
   33434:	ldr	r1, [fp, #-20]	; 0xffffffec
   33438:	ldr	r0, [fp, #-16]
   3343c:	bl	33230 <__assert_fail@plt+0x21cec>
   33440:	mov	r2, r0
   33444:	ldr	r3, [fp, #-8]
   33448:	orr	r3, r3, r2
   3344c:	str	r3, [fp, #-8]
   33450:	ldr	r3, [fp, #-24]	; 0xffffffe8
   33454:	sub	r2, r3, #1
   33458:	str	r2, [fp, #-24]	; 0xffffffe8
   3345c:	cmp	r3, #0
   33460:	bne	33434 <__assert_fail@plt+0x21ef0>
   33464:	ldr	r3, [fp, #-8]
   33468:	mov	r0, r3
   3346c:	sub	sp, fp, #4
   33470:	ldr	fp, [sp]
   33474:	add	sp, sp, #4
   33478:	pop	{pc}		; (ldr pc, [sp], #4)
   3347c:	str	fp, [sp, #-8]!
   33480:	str	lr, [sp, #4]
   33484:	add	fp, sp, #4
   33488:	sub	sp, sp, #56	; 0x38
   3348c:	str	r0, [fp, #-48]	; 0xffffffd0
   33490:	str	r1, [fp, #-52]	; 0xffffffcc
   33494:	str	r2, [fp, #-56]	; 0xffffffc8
   33498:	str	r3, [fp, #-60]	; 0xffffffc4
   3349c:	mov	r3, #0
   334a0:	str	r3, [fp, #-8]
   334a4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   334a8:	cmp	r3, #0
   334ac:	blt	334bc <__assert_fail@plt+0x21f78>
   334b0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   334b4:	cmp	r3, #36	; 0x24
   334b8:	ble	334dc <__assert_fail@plt+0x21f98>
   334bc:	movw	r3, #26764	; 0x688c
   334c0:	movt	r3, #3
   334c4:	mov	r2, #85	; 0x55
   334c8:	movw	r1, #26708	; 0x6854
   334cc:	movt	r1, #3
   334d0:	movw	r0, #26724	; 0x6864
   334d4:	movt	r0, #3
   334d8:	bl	11544 <__assert_fail@plt>
   334dc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   334e0:	cmp	r3, #0
   334e4:	bne	334f0 <__assert_fail@plt+0x21fac>
   334e8:	sub	r3, fp, #36	; 0x24
   334ec:	b	334f4 <__assert_fail@plt+0x21fb0>
   334f0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   334f4:	str	r3, [fp, #-32]	; 0xffffffe0
   334f8:	bl	11418 <__errno_location@plt>
   334fc:	mov	r2, r0
   33500:	mov	r3, #0
   33504:	str	r3, [r2]
   33508:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3350c:	str	r3, [fp, #-12]
   33510:	ldr	r3, [fp, #-12]
   33514:	ldrb	r3, [r3]
   33518:	strb	r3, [fp, #-13]
   3351c:	b	33538 <__assert_fail@plt+0x21ff4>
   33520:	ldr	r3, [fp, #-12]
   33524:	add	r3, r3, #1
   33528:	str	r3, [fp, #-12]
   3352c:	ldr	r3, [fp, #-12]
   33530:	ldrb	r3, [r3]
   33534:	strb	r3, [fp, #-13]
   33538:	bl	113d0 <__ctype_b_loc@plt>
   3353c:	mov	r3, r0
   33540:	ldr	r2, [r3]
   33544:	ldrb	r3, [fp, #-13]
   33548:	lsl	r3, r3, #1
   3354c:	add	r3, r2, r3
   33550:	ldrh	r3, [r3]
   33554:	and	r3, r3, #8192	; 0x2000
   33558:	cmp	r3, #0
   3355c:	bne	33520 <__assert_fail@plt+0x21fdc>
   33560:	ldrb	r3, [fp, #-13]
   33564:	cmp	r3, #45	; 0x2d
   33568:	bne	33574 <__assert_fail@plt+0x22030>
   3356c:	mov	r3, #4
   33570:	b	33abc <__assert_fail@plt+0x22578>
   33574:	ldr	r2, [fp, #-56]	; 0xffffffc8
   33578:	ldr	r1, [fp, #-32]	; 0xffffffe0
   3357c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   33580:	bl	1146c <strtoumax@plt>
   33584:	mov	r2, r0
   33588:	mov	r3, r1
   3358c:	strd	r2, [fp, #-44]	; 0xffffffd4
   33590:	ldr	r3, [fp, #-32]	; 0xffffffe0
   33594:	ldr	r3, [r3]
   33598:	ldr	r2, [fp, #-48]	; 0xffffffd0
   3359c:	cmp	r2, r3
   335a0:	bne	33600 <__assert_fail@plt+0x220bc>
   335a4:	ldr	r3, [fp, #4]
   335a8:	cmp	r3, #0
   335ac:	beq	335f8 <__assert_fail@plt+0x220b4>
   335b0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   335b4:	ldr	r3, [r3]
   335b8:	ldrb	r3, [r3]
   335bc:	cmp	r3, #0
   335c0:	beq	335f8 <__assert_fail@plt+0x220b4>
   335c4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   335c8:	ldr	r3, [r3]
   335cc:	ldrb	r3, [r3]
   335d0:	mov	r1, r3
   335d4:	ldr	r0, [fp, #4]
   335d8:	bl	11400 <strchr@plt>
   335dc:	mov	r3, r0
   335e0:	cmp	r3, #0
   335e4:	beq	335f8 <__assert_fail@plt+0x220b4>
   335e8:	mov	r2, #1
   335ec:	mov	r3, #0
   335f0:	strd	r2, [fp, #-44]	; 0xffffffd4
   335f4:	b	33638 <__assert_fail@plt+0x220f4>
   335f8:	mov	r3, #4
   335fc:	b	33abc <__assert_fail@plt+0x22578>
   33600:	bl	11418 <__errno_location@plt>
   33604:	mov	r3, r0
   33608:	ldr	r3, [r3]
   3360c:	cmp	r3, #0
   33610:	beq	33638 <__assert_fail@plt+0x220f4>
   33614:	bl	11418 <__errno_location@plt>
   33618:	mov	r3, r0
   3361c:	ldr	r3, [r3]
   33620:	cmp	r3, #34	; 0x22
   33624:	beq	33630 <__assert_fail@plt+0x220ec>
   33628:	mov	r3, #4
   3362c:	b	33abc <__assert_fail@plt+0x22578>
   33630:	mov	r3, #1
   33634:	str	r3, [fp, #-8]
   33638:	ldr	r3, [fp, #4]
   3363c:	cmp	r3, #0
   33640:	bne	33658 <__assert_fail@plt+0x22114>
   33644:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   33648:	ldr	r1, [fp, #-60]	; 0xffffffc4
   3364c:	strd	r2, [r1]
   33650:	ldr	r3, [fp, #-8]
   33654:	b	33abc <__assert_fail@plt+0x22578>
   33658:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3365c:	ldr	r3, [r3]
   33660:	ldrb	r3, [r3]
   33664:	cmp	r3, #0
   33668:	beq	33aac <__assert_fail@plt+0x22568>
   3366c:	mov	r3, #1024	; 0x400
   33670:	str	r3, [fp, #-20]	; 0xffffffec
   33674:	mov	r3, #1
   33678:	str	r3, [fp, #-24]	; 0xffffffe8
   3367c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   33680:	ldr	r3, [r3]
   33684:	ldrb	r3, [r3]
   33688:	mov	r1, r3
   3368c:	ldr	r0, [fp, #4]
   33690:	bl	11400 <strchr@plt>
   33694:	mov	r3, r0
   33698:	cmp	r3, #0
   3369c:	bne	336b8 <__assert_fail@plt+0x22174>
   336a0:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   336a4:	ldr	r1, [fp, #-60]	; 0xffffffc4
   336a8:	strd	r2, [r1]
   336ac:	ldr	r3, [fp, #-8]
   336b0:	orr	r3, r3, #2
   336b4:	b	33abc <__assert_fail@plt+0x22578>
   336b8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   336bc:	ldr	r3, [r3]
   336c0:	ldrb	r3, [r3]
   336c4:	sub	r3, r3, #69	; 0x45
   336c8:	cmp	r3, #47	; 0x2f
   336cc:	ldrls	pc, [pc, r3, lsl #2]
   336d0:	b	33824 <__assert_fail@plt+0x222e0>
   336d4:	muleq	r3, r4, r7
   336d8:	andeq	r3, r3, r4, lsr #16
   336dc:	muleq	r3, r4, r7
   336e0:	andeq	r3, r3, r4, lsr #16
   336e4:	andeq	r3, r3, r4, lsr #16
   336e8:	andeq	r3, r3, r4, lsr #16
   336ec:	muleq	r3, r4, r7
   336f0:	andeq	r3, r3, r4, lsr #16
   336f4:	muleq	r3, r4, r7
   336f8:	andeq	r3, r3, r4, lsr #16
   336fc:	andeq	r3, r3, r4, lsr #16
   33700:	muleq	r3, r4, r7
   33704:	andeq	r3, r3, r4, lsr #16
   33708:	andeq	r3, r3, r4, lsr #16
   3370c:	andeq	r3, r3, r4, lsr #16
   33710:	muleq	r3, r4, r7
   33714:	andeq	r3, r3, r4, lsr #16
   33718:	andeq	r3, r3, r4, lsr #16
   3371c:	andeq	r3, r3, r4, lsr #16
   33720:	andeq	r3, r3, r4, lsr #16
   33724:	muleq	r3, r4, r7
   33728:	muleq	r3, r4, r7
   3372c:	andeq	r3, r3, r4, lsr #16
   33730:	andeq	r3, r3, r4, lsr #16
   33734:	andeq	r3, r3, r4, lsr #16
   33738:	andeq	r3, r3, r4, lsr #16
   3373c:	andeq	r3, r3, r4, lsr #16
   33740:	andeq	r3, r3, r4, lsr #16
   33744:	andeq	r3, r3, r4, lsr #16
   33748:	andeq	r3, r3, r4, lsr #16
   3374c:	andeq	r3, r3, r4, lsr #16
   33750:	andeq	r3, r3, r4, lsr #16
   33754:	andeq	r3, r3, r4, lsr #16
   33758:	andeq	r3, r3, r4, lsr #16
   3375c:	muleq	r3, r4, r7
   33760:	andeq	r3, r3, r4, lsr #16
   33764:	andeq	r3, r3, r4, lsr #16
   33768:	andeq	r3, r3, r4, lsr #16
   3376c:	muleq	r3, r4, r7
   33770:	andeq	r3, r3, r4, lsr #16
   33774:	muleq	r3, r4, r7
   33778:	andeq	r3, r3, r4, lsr #16
   3377c:	andeq	r3, r3, r4, lsr #16
   33780:	andeq	r3, r3, r4, lsr #16
   33784:	andeq	r3, r3, r4, lsr #16
   33788:	andeq	r3, r3, r4, lsr #16
   3378c:	andeq	r3, r3, r4, lsr #16
   33790:	muleq	r3, r4, r7
   33794:	mov	r1, #48	; 0x30
   33798:	ldr	r0, [fp, #4]
   3379c:	bl	11400 <strchr@plt>
   337a0:	mov	r3, r0
   337a4:	cmp	r3, #0
   337a8:	beq	33818 <__assert_fail@plt+0x222d4>
   337ac:	ldr	r3, [fp, #-32]	; 0xffffffe0
   337b0:	ldr	r3, [r3]
   337b4:	add	r3, r3, #1
   337b8:	ldrb	r3, [r3]
   337bc:	cmp	r3, #68	; 0x44
   337c0:	beq	33800 <__assert_fail@plt+0x222bc>
   337c4:	cmp	r3, #105	; 0x69
   337c8:	beq	337d8 <__assert_fail@plt+0x22294>
   337cc:	cmp	r3, #66	; 0x42
   337d0:	beq	33800 <__assert_fail@plt+0x222bc>
   337d4:	b	33824 <__assert_fail@plt+0x222e0>
   337d8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   337dc:	ldr	r3, [r3]
   337e0:	add	r3, r3, #2
   337e4:	ldrb	r3, [r3]
   337e8:	cmp	r3, #66	; 0x42
   337ec:	bne	33820 <__assert_fail@plt+0x222dc>
   337f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   337f4:	add	r3, r3, #2
   337f8:	str	r3, [fp, #-24]	; 0xffffffe8
   337fc:	b	33820 <__assert_fail@plt+0x222dc>
   33800:	mov	r3, #1000	; 0x3e8
   33804:	str	r3, [fp, #-20]	; 0xffffffec
   33808:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3380c:	add	r3, r3, #1
   33810:	str	r3, [fp, #-24]	; 0xffffffe8
   33814:	b	33824 <__assert_fail@plt+0x222e0>
   33818:	nop	{0}
   3381c:	b	33824 <__assert_fail@plt+0x222e0>
   33820:	nop	{0}
   33824:	ldr	r3, [fp, #-32]	; 0xffffffe0
   33828:	ldr	r3, [r3]
   3382c:	ldrb	r3, [r3]
   33830:	sub	r3, r3, #66	; 0x42
   33834:	cmp	r3, #53	; 0x35
   33838:	ldrls	pc, [pc, r3, lsl #2]
   3383c:	b	33a4c <__assert_fail@plt+0x22508>
   33840:	andeq	r3, r3, r0, lsr r9
   33844:	andeq	r3, r3, ip, asr #20
   33848:	andeq	r3, r3, ip, asr #20
   3384c:	andeq	r3, r3, r4, asr r9
   33850:	andeq	r3, r3, ip, asr #20
   33854:	andeq	r3, r3, r0, ror r9
   33858:	andeq	r3, r3, ip, asr #20
   3385c:	andeq	r3, r3, ip, asr #20
   33860:	andeq	r3, r3, ip, asr #20
   33864:	andeq	r3, r3, ip, lsl #19
   33868:	andeq	r3, r3, ip, asr #20
   3386c:	andeq	r3, r3, r8, lsr #19
   33870:	andeq	r3, r3, ip, asr #20
   33874:	andeq	r3, r3, ip, asr #20
   33878:	andeq	r3, r3, r4, asr #19
   3387c:	andeq	r3, r3, ip, asr #20
   33880:	andeq	r3, r3, ip, asr #20
   33884:	andeq	r3, r3, ip, asr #20
   33888:	andeq	r3, r3, r0, ror #19
   3388c:	andeq	r3, r3, ip, asr #20
   33890:	andeq	r3, r3, ip, asr #20
   33894:	andeq	r3, r3, ip, asr #20
   33898:	andeq	r3, r3, ip, asr #20
   3389c:	andeq	r3, r3, r4, lsl sl
   338a0:	andeq	r3, r3, r0, lsr sl
   338a4:	andeq	r3, r3, ip, asr #20
   338a8:	andeq	r3, r3, ip, asr #20
   338ac:	andeq	r3, r3, ip, asr #20
   338b0:	andeq	r3, r3, ip, asr #20
   338b4:	andeq	r3, r3, ip, asr #20
   338b8:	andeq	r3, r3, ip, asr #20
   338bc:	andeq	r3, r3, ip, asr #20
   338c0:	andeq	r3, r3, r8, lsl r9
   338c4:	andeq	r3, r3, r8, asr #18
   338c8:	andeq	r3, r3, ip, asr #20
   338cc:	andeq	r3, r3, ip, asr #20
   338d0:	andeq	r3, r3, ip, asr #20
   338d4:	andeq	r3, r3, r0, ror r9
   338d8:	andeq	r3, r3, ip, asr #20
   338dc:	andeq	r3, r3, ip, asr #20
   338e0:	andeq	r3, r3, ip, asr #20
   338e4:	andeq	r3, r3, ip, lsl #19
   338e8:	andeq	r3, r3, ip, asr #20
   338ec:	andeq	r3, r3, r8, lsr #19
   338f0:	andeq	r3, r3, ip, asr #20
   338f4:	andeq	r3, r3, ip, asr #20
   338f8:	andeq	r3, r3, ip, asr #20
   338fc:	andeq	r3, r3, ip, asr #20
   33900:	andeq	r3, r3, ip, asr #20
   33904:	andeq	r3, r3, ip, asr #20
   33908:	andeq	r3, r3, r0, ror #19
   3390c:	andeq	r3, r3, ip, asr #20
   33910:	andeq	r3, r3, ip, asr #20
   33914:	strdeq	r3, [r3], -ip
   33918:	sub	r3, fp, #44	; 0x2c
   3391c:	mov	r1, #512	; 0x200
   33920:	mov	r0, r3
   33924:	bl	33230 <__assert_fail@plt+0x21cec>
   33928:	str	r0, [fp, #-28]	; 0xffffffe4
   3392c:	b	33a64 <__assert_fail@plt+0x22520>
   33930:	sub	r3, fp, #44	; 0x2c
   33934:	mov	r1, #1024	; 0x400
   33938:	mov	r0, r3
   3393c:	bl	33230 <__assert_fail@plt+0x21cec>
   33940:	str	r0, [fp, #-28]	; 0xffffffe4
   33944:	b	33a64 <__assert_fail@plt+0x22520>
   33948:	mov	r3, #0
   3394c:	str	r3, [fp, #-28]	; 0xffffffe4
   33950:	b	33a64 <__assert_fail@plt+0x22520>
   33954:	sub	r3, fp, #44	; 0x2c
   33958:	mov	r2, #6
   3395c:	ldr	r1, [fp, #-20]	; 0xffffffec
   33960:	mov	r0, r3
   33964:	bl	3340c <__assert_fail@plt+0x21ec8>
   33968:	str	r0, [fp, #-28]	; 0xffffffe4
   3396c:	b	33a64 <__assert_fail@plt+0x22520>
   33970:	sub	r3, fp, #44	; 0x2c
   33974:	mov	r2, #3
   33978:	ldr	r1, [fp, #-20]	; 0xffffffec
   3397c:	mov	r0, r3
   33980:	bl	3340c <__assert_fail@plt+0x21ec8>
   33984:	str	r0, [fp, #-28]	; 0xffffffe4
   33988:	b	33a64 <__assert_fail@plt+0x22520>
   3398c:	sub	r3, fp, #44	; 0x2c
   33990:	mov	r2, #1
   33994:	ldr	r1, [fp, #-20]	; 0xffffffec
   33998:	mov	r0, r3
   3399c:	bl	3340c <__assert_fail@plt+0x21ec8>
   339a0:	str	r0, [fp, #-28]	; 0xffffffe4
   339a4:	b	33a64 <__assert_fail@plt+0x22520>
   339a8:	sub	r3, fp, #44	; 0x2c
   339ac:	mov	r2, #2
   339b0:	ldr	r1, [fp, #-20]	; 0xffffffec
   339b4:	mov	r0, r3
   339b8:	bl	3340c <__assert_fail@plt+0x21ec8>
   339bc:	str	r0, [fp, #-28]	; 0xffffffe4
   339c0:	b	33a64 <__assert_fail@plt+0x22520>
   339c4:	sub	r3, fp, #44	; 0x2c
   339c8:	mov	r2, #5
   339cc:	ldr	r1, [fp, #-20]	; 0xffffffec
   339d0:	mov	r0, r3
   339d4:	bl	3340c <__assert_fail@plt+0x21ec8>
   339d8:	str	r0, [fp, #-28]	; 0xffffffe4
   339dc:	b	33a64 <__assert_fail@plt+0x22520>
   339e0:	sub	r3, fp, #44	; 0x2c
   339e4:	mov	r2, #4
   339e8:	ldr	r1, [fp, #-20]	; 0xffffffec
   339ec:	mov	r0, r3
   339f0:	bl	3340c <__assert_fail@plt+0x21ec8>
   339f4:	str	r0, [fp, #-28]	; 0xffffffe4
   339f8:	b	33a64 <__assert_fail@plt+0x22520>
   339fc:	sub	r3, fp, #44	; 0x2c
   33a00:	mov	r1, #2
   33a04:	mov	r0, r3
   33a08:	bl	33230 <__assert_fail@plt+0x21cec>
   33a0c:	str	r0, [fp, #-28]	; 0xffffffe4
   33a10:	b	33a64 <__assert_fail@plt+0x22520>
   33a14:	sub	r3, fp, #44	; 0x2c
   33a18:	mov	r2, #8
   33a1c:	ldr	r1, [fp, #-20]	; 0xffffffec
   33a20:	mov	r0, r3
   33a24:	bl	3340c <__assert_fail@plt+0x21ec8>
   33a28:	str	r0, [fp, #-28]	; 0xffffffe4
   33a2c:	b	33a64 <__assert_fail@plt+0x22520>
   33a30:	sub	r3, fp, #44	; 0x2c
   33a34:	mov	r2, #7
   33a38:	ldr	r1, [fp, #-20]	; 0xffffffec
   33a3c:	mov	r0, r3
   33a40:	bl	3340c <__assert_fail@plt+0x21ec8>
   33a44:	str	r0, [fp, #-28]	; 0xffffffe4
   33a48:	b	33a64 <__assert_fail@plt+0x22520>
   33a4c:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   33a50:	ldr	r1, [fp, #-60]	; 0xffffffc4
   33a54:	strd	r2, [r1]
   33a58:	ldr	r3, [fp, #-8]
   33a5c:	orr	r3, r3, #2
   33a60:	b	33abc <__assert_fail@plt+0x22578>
   33a64:	ldr	r2, [fp, #-8]
   33a68:	ldr	r3, [fp, #-28]	; 0xffffffe4
   33a6c:	orr	r3, r2, r3
   33a70:	str	r3, [fp, #-8]
   33a74:	ldr	r3, [fp, #-32]	; 0xffffffe0
   33a78:	ldr	r2, [r3]
   33a7c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   33a80:	add	r2, r2, r3
   33a84:	ldr	r3, [fp, #-32]	; 0xffffffe0
   33a88:	str	r2, [r3]
   33a8c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   33a90:	ldr	r3, [r3]
   33a94:	ldrb	r3, [r3]
   33a98:	cmp	r3, #0
   33a9c:	beq	33aac <__assert_fail@plt+0x22568>
   33aa0:	ldr	r3, [fp, #-8]
   33aa4:	orr	r3, r3, #2
   33aa8:	str	r3, [fp, #-8]
   33aac:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   33ab0:	ldr	r1, [fp, #-60]	; 0xffffffc4
   33ab4:	strd	r2, [r1]
   33ab8:	ldr	r3, [fp, #-8]
   33abc:	mov	r0, r3
   33ac0:	sub	sp, fp, #4
   33ac4:	ldr	fp, [sp]
   33ac8:	add	sp, sp, #4
   33acc:	pop	{pc}		; (ldr pc, [sp], #4)
   33ad0:	str	fp, [sp, #-8]!
   33ad4:	str	lr, [sp, #4]
   33ad8:	add	fp, sp, #4
   33adc:	sub	sp, sp, #16
   33ae0:	str	r0, [fp, #-16]
   33ae4:	str	r1, [fp, #-20]	; 0xffffffec
   33ae8:	ldr	r3, [fp, #-16]
   33aec:	cmp	r3, #0
   33af0:	beq	33b00 <__assert_fail@plt+0x225bc>
   33af4:	ldr	r3, [fp, #-20]	; 0xffffffec
   33af8:	cmp	r3, #0
   33afc:	bne	33b10 <__assert_fail@plt+0x225cc>
   33b00:	mov	r3, #1
   33b04:	str	r3, [fp, #-20]	; 0xffffffec
   33b08:	ldr	r3, [fp, #-20]	; 0xffffffec
   33b0c:	str	r3, [fp, #-16]
   33b10:	mov	ip, #0
   33b14:	ldr	r2, [fp, #-16]
   33b18:	ldr	r3, [fp, #-20]	; 0xffffffec
   33b1c:	umull	r0, r1, r2, r3
   33b20:	mov	r2, #0
   33b24:	mov	r3, #0
   33b28:	mov	r2, r1
   33b2c:	mov	r3, #0
   33b30:	cmp	r2, #0
   33b34:	beq	33b3c <__assert_fail@plt+0x225f8>
   33b38:	mov	ip, #1
   33b3c:	cmp	r0, #0
   33b40:	bge	33b48 <__assert_fail@plt+0x22604>
   33b44:	mov	ip, #1
   33b48:	mov	r3, ip
   33b4c:	and	r3, r3, #1
   33b50:	uxtb	r3, r3
   33b54:	cmp	r3, #0
   33b58:	beq	33b74 <__assert_fail@plt+0x22630>
   33b5c:	bl	11418 <__errno_location@plt>
   33b60:	mov	r2, r0
   33b64:	mov	r3, #12
   33b68:	str	r3, [r2]
   33b6c:	mov	r3, #0
   33b70:	b	33b8c <__assert_fail@plt+0x22648>
   33b74:	ldr	r1, [fp, #-20]	; 0xffffffec
   33b78:	ldr	r0, [fp, #-16]
   33b7c:	bl	11190 <calloc@plt>
   33b80:	mov	r3, r0
   33b84:	str	r3, [fp, #-8]
   33b88:	ldr	r3, [fp, #-8]
   33b8c:	mov	r0, r3
   33b90:	sub	sp, fp, #4
   33b94:	ldr	fp, [sp]
   33b98:	add	sp, sp, #4
   33b9c:	pop	{pc}		; (ldr pc, [sp], #4)
   33ba0:	str	fp, [sp, #-8]!
   33ba4:	str	lr, [sp, #4]
   33ba8:	add	fp, sp, #4
   33bac:	sub	sp, sp, #16
   33bb0:	str	r0, [fp, #-16]
   33bb4:	ldr	r3, [fp, #-16]
   33bb8:	cmp	r3, #0
   33bbc:	bne	33bc8 <__assert_fail@plt+0x22684>
   33bc0:	mov	r3, #1
   33bc4:	str	r3, [fp, #-16]
   33bc8:	mov	r2, #0
   33bcc:	ldr	r3, [fp, #-16]
   33bd0:	cmp	r3, #0
   33bd4:	bge	33bdc <__assert_fail@plt+0x22698>
   33bd8:	mov	r2, #1
   33bdc:	mov	r3, r2
   33be0:	and	r3, r3, #1
   33be4:	uxtb	r3, r3
   33be8:	cmp	r3, #0
   33bec:	beq	33c08 <__assert_fail@plt+0x226c4>
   33bf0:	bl	11418 <__errno_location@plt>
   33bf4:	mov	r2, r0
   33bf8:	mov	r3, #12
   33bfc:	str	r3, [r2]
   33c00:	mov	r3, #0
   33c04:	b	33c1c <__assert_fail@plt+0x226d8>
   33c08:	ldr	r0, [fp, #-16]
   33c0c:	bl	11388 <malloc@plt>
   33c10:	mov	r3, r0
   33c14:	str	r3, [fp, #-8]
   33c18:	ldr	r3, [fp, #-8]
   33c1c:	mov	r0, r3
   33c20:	sub	sp, fp, #4
   33c24:	ldr	fp, [sp]
   33c28:	add	sp, sp, #4
   33c2c:	pop	{pc}		; (ldr pc, [sp], #4)
   33c30:	str	fp, [sp, #-8]!
   33c34:	str	lr, [sp, #4]
   33c38:	add	fp, sp, #4
   33c3c:	sub	sp, sp, #16
   33c40:	str	r0, [fp, #-16]
   33c44:	str	r1, [fp, #-20]	; 0xffffffec
   33c48:	ldr	r3, [fp, #-16]
   33c4c:	cmp	r3, #0
   33c50:	bne	33c64 <__assert_fail@plt+0x22720>
   33c54:	ldr	r0, [fp, #-20]	; 0xffffffec
   33c58:	bl	33ba0 <__assert_fail@plt+0x2265c>
   33c5c:	mov	r3, r0
   33c60:	b	33cd4 <__assert_fail@plt+0x22790>
   33c64:	ldr	r3, [fp, #-20]	; 0xffffffec
   33c68:	cmp	r3, #0
   33c6c:	bne	33c80 <__assert_fail@plt+0x2273c>
   33c70:	ldr	r0, [fp, #-16]
   33c74:	bl	151ec <__assert_fail@plt+0x3ca8>
   33c78:	mov	r3, #0
   33c7c:	b	33cd4 <__assert_fail@plt+0x22790>
   33c80:	mov	r2, #0
   33c84:	ldr	r3, [fp, #-20]	; 0xffffffec
   33c88:	cmp	r3, #0
   33c8c:	bge	33c94 <__assert_fail@plt+0x22750>
   33c90:	mov	r2, #1
   33c94:	mov	r3, r2
   33c98:	and	r3, r3, #1
   33c9c:	uxtb	r3, r3
   33ca0:	cmp	r3, #0
   33ca4:	beq	33cc0 <__assert_fail@plt+0x2277c>
   33ca8:	bl	11418 <__errno_location@plt>
   33cac:	mov	r2, r0
   33cb0:	mov	r3, #12
   33cb4:	str	r3, [r2]
   33cb8:	mov	r3, #0
   33cbc:	b	33cd4 <__assert_fail@plt+0x22790>
   33cc0:	ldr	r1, [fp, #-20]	; 0xffffffec
   33cc4:	ldr	r0, [fp, #-16]
   33cc8:	bl	112d4 <realloc@plt>
   33ccc:	str	r0, [fp, #-8]
   33cd0:	ldr	r3, [fp, #-8]
   33cd4:	mov	r0, r3
   33cd8:	sub	sp, fp, #4
   33cdc:	ldr	fp, [sp]
   33ce0:	add	sp, sp, #4
   33ce4:	pop	{pc}		; (ldr pc, [sp], #4)
   33ce8:	strd	r4, [sp, #-16]!
   33cec:	str	fp, [sp, #8]
   33cf0:	str	lr, [sp, #12]
   33cf4:	add	fp, sp, #12
   33cf8:	sub	sp, sp, #16
   33cfc:	str	r0, [fp, #-24]	; 0xffffffe8
   33d00:	str	r1, [fp, #-28]	; 0xffffffe4
   33d04:	ldr	r5, [fp, #-24]	; 0xffffffe8
   33d08:	ldr	r4, [fp, #-28]	; 0xffffffe4
   33d0c:	cmp	r5, r4
   33d10:	bne	33d1c <__assert_fail@plt+0x227d8>
   33d14:	mov	r3, #0
   33d18:	b	33d7c <__assert_fail@plt+0x22838>
   33d1c:	ldrb	r3, [r5]
   33d20:	mov	r0, r3
   33d24:	bl	34f48 <__assert_fail@plt+0x23a04>
   33d28:	mov	r3, r0
   33d2c:	strb	r3, [fp, #-13]
   33d30:	ldrb	r3, [r4]
   33d34:	mov	r0, r3
   33d38:	bl	34f48 <__assert_fail@plt+0x23a04>
   33d3c:	mov	r3, r0
   33d40:	strb	r3, [fp, #-14]
   33d44:	ldrb	r3, [fp, #-13]
   33d48:	cmp	r3, #0
   33d4c:	beq	33d6c <__assert_fail@plt+0x22828>
   33d50:	add	r5, r5, #1
   33d54:	add	r4, r4, #1
   33d58:	ldrb	r2, [fp, #-13]
   33d5c:	ldrb	r3, [fp, #-14]
   33d60:	cmp	r2, r3
   33d64:	beq	33d1c <__assert_fail@plt+0x227d8>
   33d68:	b	33d70 <__assert_fail@plt+0x2282c>
   33d6c:	nop	{0}
   33d70:	ldrb	r2, [fp, #-13]
   33d74:	ldrb	r3, [fp, #-14]
   33d78:	sub	r3, r2, r3
   33d7c:	mov	r0, r3
   33d80:	sub	sp, fp, #12
   33d84:	ldrd	r4, [sp]
   33d88:	ldr	fp, [sp, #8]
   33d8c:	add	sp, sp, #12
   33d90:	pop	{pc}		; (ldr pc, [sp], #4)
   33d94:	str	fp, [sp, #-8]!
   33d98:	str	lr, [sp, #4]
   33d9c:	add	fp, sp, #4
   33da0:	sub	sp, sp, #16
   33da4:	str	r0, [fp, #-16]
   33da8:	ldr	r0, [fp, #-16]
   33dac:	bl	1134c <__fpending@plt>
   33db0:	mov	r3, r0
   33db4:	cmp	r3, #0
   33db8:	movne	r3, #1
   33dbc:	moveq	r3, #0
   33dc0:	strb	r3, [fp, #-5]
   33dc4:	ldr	r0, [fp, #-16]
   33dc8:	bl	11358 <ferror_unlocked@plt>
   33dcc:	mov	r3, r0
   33dd0:	cmp	r3, #0
   33dd4:	movne	r3, #1
   33dd8:	moveq	r3, #0
   33ddc:	strb	r3, [fp, #-6]
   33de0:	ldr	r0, [fp, #-16]
   33de4:	bl	14e68 <__assert_fail@plt+0x3924>
   33de8:	mov	r3, r0
   33dec:	cmp	r3, #0
   33df0:	movne	r3, #1
   33df4:	moveq	r3, #0
   33df8:	strb	r3, [fp, #-7]
   33dfc:	ldrb	r3, [fp, #-6]
   33e00:	cmp	r3, #0
   33e04:	bne	33e34 <__assert_fail@plt+0x228f0>
   33e08:	ldrb	r3, [fp, #-7]
   33e0c:	cmp	r3, #0
   33e10:	beq	33e60 <__assert_fail@plt+0x2291c>
   33e14:	ldrb	r3, [fp, #-5]
   33e18:	cmp	r3, #0
   33e1c:	bne	33e34 <__assert_fail@plt+0x228f0>
   33e20:	bl	11418 <__errno_location@plt>
   33e24:	mov	r3, r0
   33e28:	ldr	r3, [r3]
   33e2c:	cmp	r3, #9
   33e30:	beq	33e60 <__assert_fail@plt+0x2291c>
   33e34:	ldrb	r3, [fp, #-7]
   33e38:	eor	r3, r3, #1
   33e3c:	uxtb	r3, r3
   33e40:	cmp	r3, #0
   33e44:	beq	33e58 <__assert_fail@plt+0x22914>
   33e48:	bl	11418 <__errno_location@plt>
   33e4c:	mov	r2, r0
   33e50:	mov	r3, #0
   33e54:	str	r3, [r2]
   33e58:	mvn	r3, #0
   33e5c:	b	33e64 <__assert_fail@plt+0x22920>
   33e60:	mov	r3, #0
   33e64:	mov	r0, r3
   33e68:	sub	sp, fp, #4
   33e6c:	ldr	fp, [sp]
   33e70:	add	sp, sp, #4
   33e74:	pop	{pc}		; (ldr pc, [sp], #4)
   33e78:	str	fp, [sp, #-8]!
   33e7c:	str	lr, [sp, #4]
   33e80:	add	fp, sp, #4
   33e84:	sub	sp, sp, #32
   33e88:	str	r0, [fp, #-24]	; 0xffffffe8
   33e8c:	str	r1, [fp, #-28]	; 0xffffffe4
   33e90:	str	r2, [fp, #-32]	; 0xffffffe0
   33e94:	ldr	r3, [fp, #-24]	; 0xffffffe8
   33e98:	ldr	r3, [r3, #4]
   33e9c:	cmp	r3, #0
   33ea0:	bne	33ee0 <__assert_fail@plt+0x2299c>
   33ea4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   33ea8:	cmp	r3, #3
   33eac:	bhi	33ebc <__assert_fail@plt+0x22978>
   33eb0:	mov	r3, #16
   33eb4:	str	r3, [fp, #-8]
   33eb8:	b	33f2c <__assert_fail@plt+0x229e8>
   33ebc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   33ec0:	cmp	r3, #7
   33ec4:	bhi	33ed4 <__assert_fail@plt+0x22990>
   33ec8:	mov	r3, #8
   33ecc:	str	r3, [fp, #-8]
   33ed0:	b	33f2c <__assert_fail@plt+0x229e8>
   33ed4:	mov	r3, #4
   33ed8:	str	r3, [fp, #-8]
   33edc:	b	33f2c <__assert_fail@plt+0x229e8>
   33ee0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   33ee4:	ldr	r2, [r3, #4]
   33ee8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   33eec:	ldr	r3, [r3, #4]
   33ef0:	lsr	r3, r3, #1
   33ef4:	add	r3, r2, r3
   33ef8:	add	r3, r3, #1
   33efc:	str	r3, [fp, #-8]
   33f00:	ldr	r3, [fp, #-24]	; 0xffffffe8
   33f04:	ldr	r3, [r3, #4]
   33f08:	ldr	r2, [fp, #-8]
   33f0c:	cmp	r2, r3
   33f10:	bhi	33f2c <__assert_fail@plt+0x229e8>
   33f14:	bl	11418 <__errno_location@plt>
   33f18:	mov	r2, r0
   33f1c:	mov	r3, #12
   33f20:	str	r3, [r2]
   33f24:	mov	r3, #0
   33f28:	b	34034 <__assert_fail@plt+0x22af0>
   33f2c:	mov	ip, #0
   33f30:	ldr	r2, [fp, #-8]
   33f34:	ldr	r3, [fp, #-32]	; 0xffffffe0
   33f38:	umull	r0, r1, r2, r3
   33f3c:	mov	r2, #0
   33f40:	mov	r3, #0
   33f44:	mov	r2, r1
   33f48:	mov	r3, #0
   33f4c:	cmp	r2, #0
   33f50:	beq	33f58 <__assert_fail@plt+0x22a14>
   33f54:	mov	ip, #1
   33f58:	mov	r3, r0
   33f5c:	str	r3, [fp, #-16]
   33f60:	mov	r3, ip
   33f64:	and	r3, r3, #1
   33f68:	uxtb	r3, r3
   33f6c:	cmp	r3, #0
   33f70:	beq	33f7c <__assert_fail@plt+0x22a38>
   33f74:	mov	r3, #0
   33f78:	b	34034 <__assert_fail@plt+0x22af0>
   33f7c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   33f80:	ldr	r3, [r3, #8]
   33f84:	ldr	r2, [fp, #-28]	; 0xffffffe4
   33f88:	cmp	r2, r3
   33f8c:	bne	33fe8 <__assert_fail@plt+0x22aa4>
   33f90:	ldr	r3, [fp, #-16]
   33f94:	mov	r0, r3
   33f98:	bl	33ba0 <__assert_fail@plt+0x2265c>
   33f9c:	mov	r3, r0
   33fa0:	str	r3, [fp, #-12]
   33fa4:	ldr	r3, [fp, #-12]
   33fa8:	cmp	r3, #0
   33fac:	beq	34004 <__assert_fail@plt+0x22ac0>
   33fb0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   33fb4:	ldr	r3, [r3, #8]
   33fb8:	cmp	r3, #0
   33fbc:	beq	34004 <__assert_fail@plt+0x22ac0>
   33fc0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   33fc4:	ldr	r1, [r3, #8]
   33fc8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   33fcc:	ldr	r3, [r3]
   33fd0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   33fd4:	mul	r3, r2, r3
   33fd8:	mov	r2, r3
   33fdc:	ldr	r0, [fp, #-12]
   33fe0:	bl	11250 <memcpy@plt>
   33fe4:	b	34004 <__assert_fail@plt+0x22ac0>
   33fe8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   33fec:	ldr	r3, [r3, #8]
   33ff0:	ldr	r2, [fp, #-16]
   33ff4:	mov	r1, r2
   33ff8:	mov	r0, r3
   33ffc:	bl	33c30 <__assert_fail@plt+0x226ec>
   34000:	str	r0, [fp, #-12]
   34004:	ldr	r3, [fp, #-12]
   34008:	cmp	r3, #0
   3400c:	bne	34018 <__assert_fail@plt+0x22ad4>
   34010:	mov	r3, #0
   34014:	b	34034 <__assert_fail@plt+0x22af0>
   34018:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3401c:	ldr	r2, [fp, #-12]
   34020:	str	r2, [r3, #8]
   34024:	ldr	r3, [fp, #-24]	; 0xffffffe8
   34028:	ldr	r2, [fp, #-8]
   3402c:	str	r2, [r3, #4]
   34030:	mov	r3, #1
   34034:	mov	r0, r3
   34038:	sub	sp, fp, #4
   3403c:	ldr	fp, [sp]
   34040:	add	sp, sp, #4
   34044:	pop	{pc}		; (ldr pc, [sp], #4)
   34048:	push	{fp}		; (str fp, [sp, #-4]!)
   3404c:	add	fp, sp, #0
   34050:	mvn	r3, #0
   34054:	mov	r0, r3
   34058:	add	sp, fp, #0
   3405c:	pop	{fp}		; (ldr fp, [sp], #4)
   34060:	bx	lr
   34064:	str	r4, [sp, #-12]!
   34068:	str	fp, [sp, #4]
   3406c:	str	lr, [sp, #8]
   34070:	add	fp, sp, #8
   34074:	sub	sp, sp, #12
   34078:	str	r0, [fp, #-16]
   3407c:	ldr	r3, [fp, #-16]
   34080:	ldr	r4, [r3, #4]
   34084:	bl	34048 <__assert_fail@plt+0x22b04>
   34088:	mov	r3, r0
   3408c:	cmp	r4, r3
   34090:	moveq	r3, #1
   34094:	movne	r3, #0
   34098:	uxtb	r3, r3
   3409c:	mov	r0, r3
   340a0:	sub	sp, fp, #8
   340a4:	ldr	r4, [sp]
   340a8:	ldr	fp, [sp, #4]
   340ac:	add	sp, sp, #8
   340b0:	pop	{pc}		; (ldr pc, [sp], #4)
   340b4:	str	fp, [sp, #-8]!
   340b8:	str	lr, [sp, #4]
   340bc:	add	fp, sp, #4
   340c0:	sub	sp, sp, #32
   340c4:	str	r0, [fp, #-24]	; 0xffffffe8
   340c8:	str	r1, [fp, #-28]	; 0xffffffe4
   340cc:	str	r2, [fp, #-32]	; 0xffffffe0
   340d0:	str	r3, [fp, #-36]	; 0xffffffdc
   340d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   340d8:	bl	34064 <__assert_fail@plt+0x22b20>
   340dc:	mov	r3, r0
   340e0:	cmp	r3, #0
   340e4:	beq	340f0 <__assert_fail@plt+0x22bac>
   340e8:	mov	r3, #0
   340ec:	b	341e8 <__assert_fail@plt+0x22ca4>
   340f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   340f4:	ldr	r3, [r3]
   340f8:	str	r3, [fp, #-8]
   340fc:	ldr	r3, [fp, #-8]
   34100:	cmp	r3, #0
   34104:	bne	3414c <__assert_fail@plt+0x22c08>
   34108:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3410c:	ldr	r3, [r3, #8]
   34110:	ldr	r2, [fp, #-28]	; 0xffffffe4
   34114:	cmp	r2, r3
   34118:	beq	3412c <__assert_fail@plt+0x22be8>
   3411c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   34120:	ldr	r3, [r3, #8]
   34124:	mov	r0, r3
   34128:	bl	151ec <__assert_fail@plt+0x3ca8>
   3412c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   34130:	mov	r2, #0
   34134:	str	r2, [r3]
   34138:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3413c:	mov	r2, #0
   34140:	str	r2, [r3, #4]
   34144:	mov	r3, #1
   34148:	b	341e8 <__assert_fail@plt+0x22ca4>
   3414c:	ldr	r3, [fp, #-8]
   34150:	ldr	r2, [fp, #-32]	; 0xffffffe0
   34154:	mul	r3, r2, r3
   34158:	str	r3, [fp, #-12]
   3415c:	ldr	r0, [fp, #-12]
   34160:	bl	33ba0 <__assert_fail@plt+0x2265c>
   34164:	mov	r3, r0
   34168:	str	r3, [fp, #-16]
   3416c:	ldr	r3, [fp, #-16]
   34170:	cmp	r3, #0
   34174:	beq	341e4 <__assert_fail@plt+0x22ca0>
   34178:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3417c:	ldr	r3, [r3, #8]
   34180:	cmp	r3, #0
   34184:	beq	341a0 <__assert_fail@plt+0x22c5c>
   34188:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3418c:	ldr	r3, [r3, #8]
   34190:	ldr	r2, [fp, #-12]
   34194:	mov	r1, r3
   34198:	ldr	r0, [fp, #-16]
   3419c:	bl	11250 <memcpy@plt>
   341a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   341a4:	ldr	r3, [r3, #8]
   341a8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   341ac:	cmp	r2, r3
   341b0:	beq	341c4 <__assert_fail@plt+0x22c80>
   341b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   341b8:	ldr	r3, [r3, #8]
   341bc:	mov	r0, r3
   341c0:	bl	151ec <__assert_fail@plt+0x3ca8>
   341c4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   341c8:	ldr	r2, [fp, #-16]
   341cc:	str	r2, [r3]
   341d0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   341d4:	ldr	r2, [fp, #-8]
   341d8:	str	r2, [r3, #4]
   341dc:	mov	r3, #1
   341e0:	b	341e8 <__assert_fail@plt+0x22ca4>
   341e4:	mov	r3, #0
   341e8:	mov	r0, r3
   341ec:	sub	sp, fp, #4
   341f0:	ldr	fp, [sp]
   341f4:	add	sp, sp, #4
   341f8:	pop	{pc}		; (ldr pc, [sp], #4)
   341fc:	str	fp, [sp, #-8]!
   34200:	str	lr, [sp, #4]
   34204:	add	fp, sp, #4
   34208:	sub	sp, sp, #24
   3420c:	str	r0, [fp, #-16]
   34210:	str	r1, [fp, #-20]	; 0xffffffec
   34214:	str	r2, [fp, #-24]	; 0xffffffe8
   34218:	str	r3, [fp, #-28]	; 0xffffffe4
   3421c:	ldr	r3, [fp, #-16]
   34220:	ldr	r3, [r3, #4]
   34224:	ldr	r2, [fp, #-20]	; 0xffffffec
   34228:	cmp	r2, r3
   3422c:	bhi	34244 <__assert_fail@plt+0x22d00>
   34230:	ldr	r3, [fp, #-16]
   34234:	ldr	r2, [fp, #-20]	; 0xffffffec
   34238:	str	r2, [r3]
   3423c:	mov	r3, #1
   34240:	b	34368 <__assert_fail@plt+0x22e24>
   34244:	mov	ip, #0
   34248:	ldr	r2, [fp, #-20]	; 0xffffffec
   3424c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   34250:	umull	r0, r1, r2, r3
   34254:	mov	r2, #0
   34258:	mov	r3, #0
   3425c:	mov	r2, r1
   34260:	mov	r3, #0
   34264:	cmp	r2, #0
   34268:	beq	34270 <__assert_fail@plt+0x22d2c>
   3426c:	mov	ip, #1
   34270:	mov	r3, r0
   34274:	str	r3, [fp, #-12]
   34278:	mov	r3, ip
   3427c:	and	r3, r3, #1
   34280:	uxtb	r3, r3
   34284:	cmp	r3, #0
   34288:	beq	342a4 <__assert_fail@plt+0x22d60>
   3428c:	bl	11418 <__errno_location@plt>
   34290:	mov	r2, r0
   34294:	mov	r3, #12
   34298:	str	r3, [r2]
   3429c:	mov	r3, #0
   342a0:	b	34368 <__assert_fail@plt+0x22e24>
   342a4:	ldr	r3, [fp, #-16]
   342a8:	ldr	r3, [r3, #8]
   342ac:	ldr	r2, [fp, #-24]	; 0xffffffe8
   342b0:	cmp	r2, r3
   342b4:	bne	34310 <__assert_fail@plt+0x22dcc>
   342b8:	ldr	r3, [fp, #-12]
   342bc:	mov	r0, r3
   342c0:	bl	33ba0 <__assert_fail@plt+0x2265c>
   342c4:	mov	r3, r0
   342c8:	str	r3, [fp, #-8]
   342cc:	ldr	r3, [fp, #-8]
   342d0:	cmp	r3, #0
   342d4:	beq	3432c <__assert_fail@plt+0x22de8>
   342d8:	ldr	r3, [fp, #-16]
   342dc:	ldr	r3, [r3, #8]
   342e0:	cmp	r3, #0
   342e4:	beq	3432c <__assert_fail@plt+0x22de8>
   342e8:	ldr	r3, [fp, #-16]
   342ec:	ldr	r1, [r3, #8]
   342f0:	ldr	r3, [fp, #-16]
   342f4:	ldr	r3, [r3]
   342f8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   342fc:	mul	r3, r2, r3
   34300:	mov	r2, r3
   34304:	ldr	r0, [fp, #-8]
   34308:	bl	11250 <memcpy@plt>
   3430c:	b	3432c <__assert_fail@plt+0x22de8>
   34310:	ldr	r3, [fp, #-16]
   34314:	ldr	r3, [r3, #8]
   34318:	ldr	r2, [fp, #-12]
   3431c:	mov	r1, r2
   34320:	mov	r0, r3
   34324:	bl	33c30 <__assert_fail@plt+0x226ec>
   34328:	str	r0, [fp, #-8]
   3432c:	ldr	r3, [fp, #-8]
   34330:	cmp	r3, #0
   34334:	bne	34340 <__assert_fail@plt+0x22dfc>
   34338:	mov	r3, #0
   3433c:	b	34368 <__assert_fail@plt+0x22e24>
   34340:	ldr	r3, [fp, #-16]
   34344:	ldr	r2, [fp, #-8]
   34348:	str	r2, [r3, #8]
   3434c:	ldr	r3, [fp, #-16]
   34350:	ldr	r2, [fp, #-20]	; 0xffffffec
   34354:	str	r2, [r3, #4]
   34358:	ldr	r3, [fp, #-16]
   3435c:	ldr	r2, [fp, #-20]	; 0xffffffec
   34360:	str	r2, [r3]
   34364:	mov	r3, #1
   34368:	mov	r0, r3
   3436c:	sub	sp, fp, #4
   34370:	ldr	fp, [sp]
   34374:	add	sp, sp, #4
   34378:	pop	{pc}		; (ldr pc, [sp], #4)
   3437c:	push	{r1, r2, r3}
   34380:	str	fp, [sp, #-8]!
   34384:	str	lr, [sp, #4]
   34388:	add	fp, sp, #4
   3438c:	sub	sp, sp, #36	; 0x24
   34390:	str	r0, [fp, #-36]	; 0xffffffdc
   34394:	mvn	r3, #0
   34398:	str	r3, [fp, #-12]
   3439c:	add	r3, fp, #8
   343a0:	str	r3, [fp, #-32]	; 0xffffffe0
   343a4:	ldr	r3, [fp, #4]
   343a8:	cmp	r3, #0
   343ac:	beq	343c4 <__assert_fail@plt+0x22e80>
   343b0:	ldr	r3, [fp, #4]
   343b4:	movw	r2, #1030	; 0x406
   343b8:	cmp	r3, r2
   343bc:	beq	343ec <__assert_fail@plt+0x22ea8>
   343c0:	b	34414 <__assert_fail@plt+0x22ed0>
   343c4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   343c8:	add	r2, r3, #4
   343cc:	str	r2, [fp, #-32]	; 0xffffffe0
   343d0:	ldr	r3, [r3]
   343d4:	str	r3, [fp, #-16]
   343d8:	ldr	r1, [fp, #-16]
   343dc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   343e0:	bl	345c0 <__assert_fail@plt+0x2307c>
   343e4:	str	r0, [fp, #-12]
   343e8:	b	345a0 <__assert_fail@plt+0x2305c>
   343ec:	ldr	r3, [fp, #-32]	; 0xffffffe0
   343f0:	add	r2, r3, #4
   343f4:	str	r2, [fp, #-32]	; 0xffffffe0
   343f8:	ldr	r3, [r3]
   343fc:	str	r3, [fp, #-20]	; 0xffffffec
   34400:	ldr	r1, [fp, #-20]	; 0xffffffec
   34404:	ldr	r0, [fp, #-36]	; 0xffffffdc
   34408:	bl	34604 <__assert_fail@plt+0x230c0>
   3440c:	str	r0, [fp, #-12]
   34410:	b	345a0 <__assert_fail@plt+0x2305c>
   34414:	ldr	r3, [fp, #4]
   34418:	cmp	r3, #11
   3441c:	beq	34530 <__assert_fail@plt+0x22fec>
   34420:	ldr	r3, [fp, #4]
   34424:	cmp	r3, #11
   34428:	bgt	344b0 <__assert_fail@plt+0x22f6c>
   3442c:	ldr	r3, [fp, #4]
   34430:	cmp	r3, #3
   34434:	beq	34530 <__assert_fail@plt+0x22fec>
   34438:	ldr	r3, [fp, #4]
   3443c:	cmp	r3, #3
   34440:	bgt	3446c <__assert_fail@plt+0x22f28>
   34444:	ldr	r3, [fp, #4]
   34448:	cmp	r3, #1
   3444c:	beq	34530 <__assert_fail@plt+0x22fec>
   34450:	ldr	r3, [fp, #4]
   34454:	cmp	r3, #1
   34458:	bgt	34544 <__assert_fail@plt+0x23000>
   3445c:	ldr	r3, [fp, #4]
   34460:	cmp	r3, #0
   34464:	beq	34544 <__assert_fail@plt+0x23000>
   34468:	b	34570 <__assert_fail@plt+0x2302c>
   3446c:	ldr	r3, [fp, #4]
   34470:	cmp	r3, #8
   34474:	beq	34544 <__assert_fail@plt+0x23000>
   34478:	ldr	r3, [fp, #4]
   3447c:	cmp	r3, #8
   34480:	bgt	34494 <__assert_fail@plt+0x22f50>
   34484:	ldr	r3, [fp, #4]
   34488:	cmp	r3, #4
   3448c:	beq	34544 <__assert_fail@plt+0x23000>
   34490:	b	34570 <__assert_fail@plt+0x2302c>
   34494:	ldr	r3, [fp, #4]
   34498:	cmp	r3, #9
   3449c:	beq	34530 <__assert_fail@plt+0x22fec>
   344a0:	ldr	r3, [fp, #4]
   344a4:	cmp	r3, #10
   344a8:	beq	34544 <__assert_fail@plt+0x23000>
   344ac:	b	34570 <__assert_fail@plt+0x2302c>
   344b0:	ldr	r3, [fp, #4]
   344b4:	movw	r2, #1031	; 0x407
   344b8:	cmp	r3, r2
   344bc:	bgt	34500 <__assert_fail@plt+0x22fbc>
   344c0:	ldr	r3, [fp, #4]
   344c4:	movw	r2, #1030	; 0x406
   344c8:	cmp	r3, r2
   344cc:	bge	34544 <__assert_fail@plt+0x23000>
   344d0:	ldr	r3, [fp, #4]
   344d4:	movw	r2, #1025	; 0x401
   344d8:	cmp	r3, r2
   344dc:	beq	34530 <__assert_fail@plt+0x22fec>
   344e0:	ldr	r3, [fp, #4]
   344e4:	movw	r2, #1026	; 0x402
   344e8:	cmp	r3, r2
   344ec:	beq	34544 <__assert_fail@plt+0x23000>
   344f0:	ldr	r3, [fp, #4]
   344f4:	cmp	r3, #1024	; 0x400
   344f8:	beq	34544 <__assert_fail@plt+0x23000>
   344fc:	b	34570 <__assert_fail@plt+0x2302c>
   34500:	ldr	r3, [fp, #4]
   34504:	movw	r2, #1033	; 0x409
   34508:	cmp	r3, r2
   3450c:	beq	34544 <__assert_fail@plt+0x23000>
   34510:	ldr	r3, [fp, #4]
   34514:	movw	r2, #1033	; 0x409
   34518:	cmp	r3, r2
   3451c:	blt	34530 <__assert_fail@plt+0x22fec>
   34520:	ldr	r3, [fp, #4]
   34524:	movw	r2, #1034	; 0x40a
   34528:	cmp	r3, r2
   3452c:	bne	34570 <__assert_fail@plt+0x2302c>
   34530:	ldr	r1, [fp, #4]
   34534:	ldr	r0, [fp, #-36]	; 0xffffffdc
   34538:	bl	1149c <fcntl64@plt>
   3453c:	str	r0, [fp, #-12]
   34540:	b	3459c <__assert_fail@plt+0x23058>
   34544:	ldr	r3, [fp, #-32]	; 0xffffffe0
   34548:	add	r2, r3, #4
   3454c:	str	r2, [fp, #-32]	; 0xffffffe0
   34550:	ldr	r3, [r3]
   34554:	str	r3, [fp, #-24]	; 0xffffffe8
   34558:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3455c:	ldr	r1, [fp, #4]
   34560:	ldr	r0, [fp, #-36]	; 0xffffffdc
   34564:	bl	1149c <fcntl64@plt>
   34568:	str	r0, [fp, #-12]
   3456c:	b	3459c <__assert_fail@plt+0x23058>
   34570:	ldr	r3, [fp, #-32]	; 0xffffffe0
   34574:	add	r2, r3, #4
   34578:	str	r2, [fp, #-32]	; 0xffffffe0
   3457c:	ldr	r3, [r3]
   34580:	str	r3, [fp, #-28]	; 0xffffffe4
   34584:	ldr	r2, [fp, #-28]	; 0xffffffe4
   34588:	ldr	r1, [fp, #4]
   3458c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   34590:	bl	1149c <fcntl64@plt>
   34594:	str	r0, [fp, #-12]
   34598:	nop	{0}
   3459c:	nop	{0}
   345a0:	ldr	r3, [fp, #-12]
   345a4:	mov	r0, r3
   345a8:	sub	sp, fp, #4
   345ac:	ldr	fp, [sp]
   345b0:	ldr	lr, [sp, #4]
   345b4:	add	sp, sp, #8
   345b8:	add	sp, sp, #12
   345bc:	bx	lr
   345c0:	str	fp, [sp, #-8]!
   345c4:	str	lr, [sp, #4]
   345c8:	add	fp, sp, #4
   345cc:	sub	sp, sp, #16
   345d0:	str	r0, [fp, #-16]
   345d4:	str	r1, [fp, #-20]	; 0xffffffec
   345d8:	ldr	r2, [fp, #-20]	; 0xffffffec
   345dc:	mov	r1, #0
   345e0:	ldr	r0, [fp, #-16]
   345e4:	bl	1149c <fcntl64@plt>
   345e8:	str	r0, [fp, #-8]
   345ec:	ldr	r3, [fp, #-8]
   345f0:	mov	r0, r3
   345f4:	sub	sp, fp, #4
   345f8:	ldr	fp, [sp]
   345fc:	add	sp, sp, #4
   34600:	pop	{pc}		; (ldr pc, [sp], #4)
   34604:	str	fp, [sp, #-8]!
   34608:	str	lr, [sp, #4]
   3460c:	add	fp, sp, #4
   34610:	sub	sp, sp, #24
   34614:	str	r0, [fp, #-24]	; 0xffffffe8
   34618:	str	r1, [fp, #-28]	; 0xffffffe4
   3461c:	movw	r3, #29688	; 0x73f8
   34620:	movt	r3, #4
   34624:	ldr	r3, [r3]
   34628:	cmp	r3, #0
   3462c:	blt	346a8 <__assert_fail@plt+0x23164>
   34630:	ldr	r2, [fp, #-28]	; 0xffffffe4
   34634:	movw	r1, #1030	; 0x406
   34638:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3463c:	bl	1149c <fcntl64@plt>
   34640:	str	r0, [fp, #-8]
   34644:	ldr	r3, [fp, #-8]
   34648:	cmp	r3, #0
   3464c:	bge	34664 <__assert_fail@plt+0x23120>
   34650:	bl	11418 <__errno_location@plt>
   34654:	mov	r3, r0
   34658:	ldr	r3, [r3]
   3465c:	cmp	r3, #22
   34660:	beq	34678 <__assert_fail@plt+0x23134>
   34664:	movw	r3, #29688	; 0x73f8
   34668:	movt	r3, #4
   3466c:	mov	r2, #1
   34670:	str	r2, [r3]
   34674:	b	346b8 <__assert_fail@plt+0x23174>
   34678:	ldr	r1, [fp, #-28]	; 0xffffffe4
   3467c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   34680:	bl	345c0 <__assert_fail@plt+0x2307c>
   34684:	str	r0, [fp, #-8]
   34688:	ldr	r3, [fp, #-8]
   3468c:	cmp	r3, #0
   34690:	blt	346b8 <__assert_fail@plt+0x23174>
   34694:	movw	r3, #29688	; 0x73f8
   34698:	movt	r3, #4
   3469c:	mvn	r2, #0
   346a0:	str	r2, [r3]
   346a4:	b	346b8 <__assert_fail@plt+0x23174>
   346a8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   346ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   346b0:	bl	345c0 <__assert_fail@plt+0x2307c>
   346b4:	str	r0, [fp, #-8]
   346b8:	ldr	r3, [fp, #-8]
   346bc:	cmp	r3, #0
   346c0:	blt	34748 <__assert_fail@plt+0x23204>
   346c4:	movw	r3, #29688	; 0x73f8
   346c8:	movt	r3, #4
   346cc:	ldr	r3, [r3]
   346d0:	cmn	r3, #1
   346d4:	bne	34748 <__assert_fail@plt+0x23204>
   346d8:	mov	r1, #1
   346dc:	ldr	r0, [fp, #-8]
   346e0:	bl	1149c <fcntl64@plt>
   346e4:	str	r0, [fp, #-12]
   346e8:	ldr	r3, [fp, #-12]
   346ec:	cmp	r3, #0
   346f0:	blt	34718 <__assert_fail@plt+0x231d4>
   346f4:	ldr	r3, [fp, #-12]
   346f8:	orr	r3, r3, #1
   346fc:	mov	r2, r3
   34700:	mov	r1, #2
   34704:	ldr	r0, [fp, #-8]
   34708:	bl	1149c <fcntl64@plt>
   3470c:	mov	r3, r0
   34710:	cmn	r3, #1
   34714:	bne	34748 <__assert_fail@plt+0x23204>
   34718:	bl	11418 <__errno_location@plt>
   3471c:	mov	r3, r0
   34720:	ldr	r3, [r3]
   34724:	str	r3, [fp, #-16]
   34728:	ldr	r0, [fp, #-8]
   3472c:	bl	11538 <close@plt>
   34730:	bl	11418 <__errno_location@plt>
   34734:	mov	r2, r0
   34738:	ldr	r3, [fp, #-16]
   3473c:	str	r3, [r2]
   34740:	mvn	r3, #0
   34744:	str	r3, [fp, #-8]
   34748:	ldr	r3, [fp, #-8]
   3474c:	mov	r0, r3
   34750:	sub	sp, fp, #4
   34754:	ldr	fp, [sp]
   34758:	add	sp, sp, #4
   3475c:	pop	{pc}		; (ldr pc, [sp], #4)
   34760:	str	fp, [sp, #-8]!
   34764:	str	lr, [sp, #4]
   34768:	add	fp, sp, #4
   3476c:	bl	11418 <__errno_location@plt>
   34770:	mov	r2, r0
   34774:	mov	r3, #12
   34778:	str	r3, [r2]
   3477c:	mov	r3, #0
   34780:	mov	r0, r3
   34784:	sub	sp, fp, #4
   34788:	ldr	fp, [sp]
   3478c:	add	sp, sp, #4
   34790:	pop	{pc}		; (ldr pc, [sp], #4)
   34794:	str	fp, [sp, #-8]!
   34798:	str	lr, [sp, #4]
   3479c:	add	fp, sp, #4
   347a0:	sub	sp, sp, #8
   347a4:	str	r0, [fp, #-8]
   347a8:	ldr	r3, [fp, #-8]
   347ac:	mov	r0, r3
   347b0:	bl	33ba0 <__assert_fail@plt+0x2265c>
   347b4:	mov	r3, r0
   347b8:	mov	r0, r3
   347bc:	sub	sp, fp, #4
   347c0:	ldr	fp, [sp]
   347c4:	add	sp, sp, #4
   347c8:	pop	{pc}		; (ldr pc, [sp], #4)
   347cc:	str	fp, [sp, #-8]!
   347d0:	str	lr, [sp, #4]
   347d4:	add	fp, sp, #4
   347d8:	sub	sp, sp, #8
   347dc:	str	r0, [fp, #-8]
   347e0:	str	r1, [fp, #-12]
   347e4:	ldr	r3, [fp, #-12]
   347e8:	cmp	r3, #0
   347ec:	moveq	r3, #1
   347f0:	movne	r3, #0
   347f4:	uxtb	r3, r3
   347f8:	mov	r2, r3
   347fc:	ldr	r3, [fp, #-12]
   34800:	orr	r3, r2, r3
   34804:	mov	r1, r3
   34808:	ldr	r0, [fp, #-8]
   3480c:	bl	33c30 <__assert_fail@plt+0x226ec>
   34810:	mov	r3, r0
   34814:	mov	r0, r3
   34818:	sub	sp, fp, #4
   3481c:	ldr	fp, [sp]
   34820:	add	sp, sp, #4
   34824:	pop	{pc}		; (ldr pc, [sp], #4)
   34828:	str	fp, [sp, #-8]!
   3482c:	str	lr, [sp, #4]
   34830:	add	fp, sp, #4
   34834:	sub	sp, sp, #8
   34838:	str	r0, [fp, #-8]
   3483c:	str	r1, [fp, #-12]
   34840:	ldr	r3, [fp, #-8]
   34844:	ldr	r2, [fp, #-12]
   34848:	mov	r1, r2
   3484c:	mov	r0, r3
   34850:	bl	33ad0 <__assert_fail@plt+0x2258c>
   34854:	mov	r3, r0
   34858:	mov	r0, r3
   3485c:	sub	sp, fp, #4
   34860:	ldr	fp, [sp]
   34864:	add	sp, sp, #4
   34868:	pop	{pc}		; (ldr pc, [sp], #4)
   3486c:	str	fp, [sp, #-8]!
   34870:	str	lr, [sp, #4]
   34874:	add	fp, sp, #4
   34878:	sub	sp, sp, #16
   3487c:	str	r0, [fp, #-8]
   34880:	str	r1, [fp, #-12]
   34884:	str	r2, [fp, #-16]
   34888:	ldr	r3, [fp, #-12]
   3488c:	cmp	r3, #0
   34890:	beq	348a0 <__assert_fail@plt+0x2335c>
   34894:	ldr	r3, [fp, #-16]
   34898:	cmp	r3, #0
   3489c:	bne	348b0 <__assert_fail@plt+0x2336c>
   348a0:	mov	r3, #1
   348a4:	str	r3, [fp, #-16]
   348a8:	ldr	r3, [fp, #-16]
   348ac:	str	r3, [fp, #-12]
   348b0:	ldr	r3, [fp, #-12]
   348b4:	ldr	r2, [fp, #-16]
   348b8:	mov	r1, r3
   348bc:	ldr	r0, [fp, #-8]
   348c0:	bl	349fc <__assert_fail@plt+0x234b8>
   348c4:	mov	r3, r0
   348c8:	mov	r0, r3
   348cc:	sub	sp, fp, #4
   348d0:	ldr	fp, [sp]
   348d4:	add	sp, sp, #4
   348d8:	pop	{pc}		; (ldr pc, [sp], #4)
   348dc:	str	fp, [sp, #-8]!
   348e0:	str	lr, [sp, #4]
   348e4:	add	fp, sp, #4
   348e8:	sub	sp, sp, #8
   348ec:	mov	r0, #14
   348f0:	bl	114d8 <nl_langinfo@plt>
   348f4:	str	r0, [fp, #-8]
   348f8:	ldr	r3, [fp, #-8]
   348fc:	cmp	r3, #0
   34900:	bne	34910 <__assert_fail@plt+0x233cc>
   34904:	movw	r3, #26776	; 0x6898
   34908:	movt	r3, #3
   3490c:	str	r3, [fp, #-8]
   34910:	ldr	r3, [fp, #-8]
   34914:	ldrb	r3, [r3]
   34918:	cmp	r3, #0
   3491c:	bne	3492c <__assert_fail@plt+0x233e8>
   34920:	movw	r3, #26780	; 0x689c
   34924:	movt	r3, #3
   34928:	str	r3, [fp, #-8]
   3492c:	ldr	r3, [fp, #-8]
   34930:	mov	r0, r3
   34934:	sub	sp, fp, #4
   34938:	ldr	fp, [sp]
   3493c:	add	sp, sp, #4
   34940:	pop	{pc}		; (ldr pc, [sp], #4)
   34944:	str	fp, [sp, #-8]!
   34948:	str	lr, [sp, #4]
   3494c:	add	fp, sp, #4
   34950:	sub	sp, sp, #32
   34954:	str	r0, [fp, #-24]	; 0xffffffe8
   34958:	str	r1, [fp, #-28]	; 0xffffffe4
   3495c:	str	r2, [fp, #-32]	; 0xffffffe0
   34960:	str	r3, [fp, #-36]	; 0xffffffdc
   34964:	ldr	r3, [fp, #-24]	; 0xffffffe8
   34968:	cmp	r3, #0
   3496c:	bne	34978 <__assert_fail@plt+0x23434>
   34970:	sub	r3, fp, #16
   34974:	str	r3, [fp, #-24]	; 0xffffffe8
   34978:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3497c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   34980:	ldr	r1, [fp, #-28]	; 0xffffffe4
   34984:	ldr	r0, [fp, #-24]	; 0xffffffe8
   34988:	bl	11364 <mbrtowc@plt>
   3498c:	str	r0, [fp, #-8]
   34990:	ldr	r3, [fp, #-8]
   34994:	cmn	r3, #3
   34998:	bls	349e4 <__assert_fail@plt+0x234a0>
   3499c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   349a0:	cmp	r3, #0
   349a4:	beq	349e4 <__assert_fail@plt+0x234a0>
   349a8:	mov	r0, #0
   349ac:	bl	34fc8 <__assert_fail@plt+0x23a84>
   349b0:	mov	r3, r0
   349b4:	eor	r3, r3, #1
   349b8:	uxtb	r3, r3
   349bc:	cmp	r3, #0
   349c0:	beq	349e4 <__assert_fail@plt+0x234a0>
   349c4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   349c8:	ldrb	r3, [r3]
   349cc:	strb	r3, [fp, #-9]
   349d0:	ldrb	r2, [fp, #-9]
   349d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   349d8:	str	r2, [r3]
   349dc:	mov	r3, #1
   349e0:	b	349e8 <__assert_fail@plt+0x234a4>
   349e4:	ldr	r3, [fp, #-8]
   349e8:	mov	r0, r3
   349ec:	sub	sp, fp, #4
   349f0:	ldr	fp, [sp]
   349f4:	add	sp, sp, #4
   349f8:	pop	{pc}		; (ldr pc, [sp], #4)
   349fc:	str	fp, [sp, #-8]!
   34a00:	str	lr, [sp, #4]
   34a04:	add	fp, sp, #4
   34a08:	sub	sp, sp, #24
   34a0c:	str	r0, [fp, #-16]
   34a10:	str	r1, [fp, #-20]	; 0xffffffec
   34a14:	str	r2, [fp, #-24]	; 0xffffffe8
   34a18:	mov	ip, #0
   34a1c:	ldr	r2, [fp, #-20]	; 0xffffffec
   34a20:	ldr	r3, [fp, #-24]	; 0xffffffe8
   34a24:	umull	r0, r1, r2, r3
   34a28:	mov	r2, #0
   34a2c:	mov	r3, #0
   34a30:	mov	r2, r1
   34a34:	mov	r3, #0
   34a38:	cmp	r2, #0
   34a3c:	beq	34a44 <__assert_fail@plt+0x23500>
   34a40:	mov	ip, #1
   34a44:	mov	r3, r0
   34a48:	str	r3, [fp, #-8]
   34a4c:	mov	r3, ip
   34a50:	and	r3, r3, #1
   34a54:	uxtb	r3, r3
   34a58:	cmp	r3, #0
   34a5c:	beq	34a78 <__assert_fail@plt+0x23534>
   34a60:	bl	11418 <__errno_location@plt>
   34a64:	mov	r2, r0
   34a68:	mov	r3, #12
   34a6c:	str	r3, [r2]
   34a70:	mov	r3, #0
   34a74:	b	34a8c <__assert_fail@plt+0x23548>
   34a78:	ldr	r3, [fp, #-8]
   34a7c:	mov	r1, r3
   34a80:	ldr	r0, [fp, #-16]
   34a84:	bl	33c30 <__assert_fail@plt+0x226ec>
   34a88:	mov	r3, r0
   34a8c:	mov	r0, r3
   34a90:	sub	sp, fp, #4
   34a94:	ldr	fp, [sp]
   34a98:	add	sp, sp, #4
   34a9c:	pop	{pc}		; (ldr pc, [sp], #4)
   34aa0:	push	{fp}		; (str fp, [sp, #-4]!)
   34aa4:	add	fp, sp, #0
   34aa8:	sub	sp, sp, #12
   34aac:	str	r0, [fp, #-8]
   34ab0:	ldr	r3, [fp, #-8]
   34ab4:	cmp	r3, #90	; 0x5a
   34ab8:	bgt	34adc <__assert_fail@plt+0x23598>
   34abc:	ldr	r3, [fp, #-8]
   34ac0:	cmp	r3, #65	; 0x41
   34ac4:	bge	34aec <__assert_fail@plt+0x235a8>
   34ac8:	ldr	r3, [fp, #-8]
   34acc:	sub	r3, r3, #48	; 0x30
   34ad0:	cmp	r3, #9
   34ad4:	bhi	34af4 <__assert_fail@plt+0x235b0>
   34ad8:	b	34aec <__assert_fail@plt+0x235a8>
   34adc:	ldr	r3, [fp, #-8]
   34ae0:	sub	r3, r3, #97	; 0x61
   34ae4:	cmp	r3, #25
   34ae8:	bhi	34af4 <__assert_fail@plt+0x235b0>
   34aec:	mov	r3, #1
   34af0:	b	34af8 <__assert_fail@plt+0x235b4>
   34af4:	mov	r3, #0
   34af8:	mov	r0, r3
   34afc:	add	sp, fp, #0
   34b00:	pop	{fp}		; (ldr fp, [sp], #4)
   34b04:	bx	lr
   34b08:	push	{fp}		; (str fp, [sp, #-4]!)
   34b0c:	add	fp, sp, #0
   34b10:	sub	sp, sp, #12
   34b14:	str	r0, [fp, #-8]
   34b18:	ldr	r3, [fp, #-8]
   34b1c:	cmp	r3, #65	; 0x41
   34b20:	blt	34b48 <__assert_fail@plt+0x23604>
   34b24:	ldr	r3, [fp, #-8]
   34b28:	cmp	r3, #90	; 0x5a
   34b2c:	ble	34b40 <__assert_fail@plt+0x235fc>
   34b30:	ldr	r3, [fp, #-8]
   34b34:	sub	r3, r3, #97	; 0x61
   34b38:	cmp	r3, #25
   34b3c:	bhi	34b48 <__assert_fail@plt+0x23604>
   34b40:	mov	r3, #1
   34b44:	b	34b4c <__assert_fail@plt+0x23608>
   34b48:	mov	r3, #0
   34b4c:	mov	r0, r3
   34b50:	add	sp, fp, #0
   34b54:	pop	{fp}		; (ldr fp, [sp], #4)
   34b58:	bx	lr
   34b5c:	push	{fp}		; (str fp, [sp, #-4]!)
   34b60:	add	fp, sp, #0
   34b64:	sub	sp, sp, #12
   34b68:	str	r0, [fp, #-8]
   34b6c:	ldr	r3, [fp, #-8]
   34b70:	cmp	r3, #127	; 0x7f
   34b74:	bhi	34b80 <__assert_fail@plt+0x2363c>
   34b78:	mov	r3, #1
   34b7c:	b	34b84 <__assert_fail@plt+0x23640>
   34b80:	mov	r3, #0
   34b84:	mov	r0, r3
   34b88:	add	sp, fp, #0
   34b8c:	pop	{fp}		; (ldr fp, [sp], #4)
   34b90:	bx	lr
   34b94:	push	{fp}		; (str fp, [sp, #-4]!)
   34b98:	add	fp, sp, #0
   34b9c:	sub	sp, sp, #12
   34ba0:	str	r0, [fp, #-8]
   34ba4:	ldr	r3, [fp, #-8]
   34ba8:	cmp	r3, #32
   34bac:	beq	34bbc <__assert_fail@plt+0x23678>
   34bb0:	ldr	r3, [fp, #-8]
   34bb4:	cmp	r3, #9
   34bb8:	bne	34bc4 <__assert_fail@plt+0x23680>
   34bbc:	mov	r3, #1
   34bc0:	b	34bc8 <__assert_fail@plt+0x23684>
   34bc4:	mov	r3, #0
   34bc8:	and	r3, r3, #1
   34bcc:	uxtb	r3, r3
   34bd0:	mov	r0, r3
   34bd4:	add	sp, fp, #0
   34bd8:	pop	{fp}		; (ldr fp, [sp], #4)
   34bdc:	bx	lr
   34be0:	push	{fp}		; (str fp, [sp, #-4]!)
   34be4:	add	fp, sp, #0
   34be8:	sub	sp, sp, #12
   34bec:	str	r0, [fp, #-8]
   34bf0:	ldr	r3, [fp, #-8]
   34bf4:	cmp	r3, #0
   34bf8:	blt	34c1c <__assert_fail@plt+0x236d8>
   34bfc:	ldr	r3, [fp, #-8]
   34c00:	cmp	r3, #31
   34c04:	ble	34c14 <__assert_fail@plt+0x236d0>
   34c08:	ldr	r3, [fp, #-8]
   34c0c:	cmp	r3, #127	; 0x7f
   34c10:	bne	34c1c <__assert_fail@plt+0x236d8>
   34c14:	mov	r3, #1
   34c18:	b	34c20 <__assert_fail@plt+0x236dc>
   34c1c:	mov	r3, #0
   34c20:	mov	r0, r3
   34c24:	add	sp, fp, #0
   34c28:	pop	{fp}		; (ldr fp, [sp], #4)
   34c2c:	bx	lr
   34c30:	push	{fp}		; (str fp, [sp, #-4]!)
   34c34:	add	fp, sp, #0
   34c38:	sub	sp, sp, #12
   34c3c:	str	r0, [fp, #-8]
   34c40:	ldr	r3, [fp, #-8]
   34c44:	sub	r3, r3, #48	; 0x30
   34c48:	cmp	r3, #9
   34c4c:	bhi	34c58 <__assert_fail@plt+0x23714>
   34c50:	mov	r3, #1
   34c54:	b	34c5c <__assert_fail@plt+0x23718>
   34c58:	mov	r3, #0
   34c5c:	mov	r0, r3
   34c60:	add	sp, fp, #0
   34c64:	pop	{fp}		; (ldr fp, [sp], #4)
   34c68:	bx	lr
   34c6c:	push	{fp}		; (str fp, [sp, #-4]!)
   34c70:	add	fp, sp, #0
   34c74:	sub	sp, sp, #12
   34c78:	str	r0, [fp, #-8]
   34c7c:	ldr	r3, [fp, #-8]
   34c80:	sub	r3, r3, #33	; 0x21
   34c84:	cmp	r3, #93	; 0x5d
   34c88:	bhi	34c94 <__assert_fail@plt+0x23750>
   34c8c:	mov	r3, #1
   34c90:	b	34c98 <__assert_fail@plt+0x23754>
   34c94:	mov	r3, #0
   34c98:	mov	r0, r3
   34c9c:	add	sp, fp, #0
   34ca0:	pop	{fp}		; (ldr fp, [sp], #4)
   34ca4:	bx	lr
   34ca8:	push	{fp}		; (str fp, [sp, #-4]!)
   34cac:	add	fp, sp, #0
   34cb0:	sub	sp, sp, #12
   34cb4:	str	r0, [fp, #-8]
   34cb8:	ldr	r3, [fp, #-8]
   34cbc:	sub	r3, r3, #97	; 0x61
   34cc0:	cmp	r3, #25
   34cc4:	bhi	34cd0 <__assert_fail@plt+0x2378c>
   34cc8:	mov	r3, #1
   34ccc:	b	34cd4 <__assert_fail@plt+0x23790>
   34cd0:	mov	r3, #0
   34cd4:	mov	r0, r3
   34cd8:	add	sp, fp, #0
   34cdc:	pop	{fp}		; (ldr fp, [sp], #4)
   34ce0:	bx	lr
   34ce4:	push	{fp}		; (str fp, [sp, #-4]!)
   34ce8:	add	fp, sp, #0
   34cec:	sub	sp, sp, #12
   34cf0:	str	r0, [fp, #-8]
   34cf4:	ldr	r3, [fp, #-8]
   34cf8:	sub	r3, r3, #32
   34cfc:	cmp	r3, #94	; 0x5e
   34d00:	bhi	34d0c <__assert_fail@plt+0x237c8>
   34d04:	mov	r3, #1
   34d08:	b	34d10 <__assert_fail@plt+0x237cc>
   34d0c:	mov	r3, #0
   34d10:	mov	r0, r3
   34d14:	add	sp, fp, #0
   34d18:	pop	{fp}		; (ldr fp, [sp], #4)
   34d1c:	bx	lr
   34d20:	push	{fp}		; (str fp, [sp, #-4]!)
   34d24:	add	fp, sp, #0
   34d28:	sub	sp, sp, #12
   34d2c:	str	r0, [fp, #-8]
   34d30:	ldr	r3, [fp, #-8]
   34d34:	cmp	r3, #64	; 0x40
   34d38:	bgt	34d5c <__assert_fail@plt+0x23818>
   34d3c:	ldr	r3, [fp, #-8]
   34d40:	cmp	r3, #58	; 0x3a
   34d44:	bge	34d84 <__assert_fail@plt+0x23840>
   34d48:	ldr	r3, [fp, #-8]
   34d4c:	sub	r3, r3, #33	; 0x21
   34d50:	cmp	r3, #14
   34d54:	bhi	34d8c <__assert_fail@plt+0x23848>
   34d58:	b	34d84 <__assert_fail@plt+0x23840>
   34d5c:	ldr	r3, [fp, #-8]
   34d60:	cmp	r3, #91	; 0x5b
   34d64:	blt	34d8c <__assert_fail@plt+0x23848>
   34d68:	ldr	r3, [fp, #-8]
   34d6c:	cmp	r3, #96	; 0x60
   34d70:	ble	34d84 <__assert_fail@plt+0x23840>
   34d74:	ldr	r3, [fp, #-8]
   34d78:	sub	r3, r3, #123	; 0x7b
   34d7c:	cmp	r3, #3
   34d80:	bhi	34d8c <__assert_fail@plt+0x23848>
   34d84:	mov	r3, #1
   34d88:	b	34d90 <__assert_fail@plt+0x2384c>
   34d8c:	mov	r3, #0
   34d90:	mov	r0, r3
   34d94:	add	sp, fp, #0
   34d98:	pop	{fp}		; (ldr fp, [sp], #4)
   34d9c:	bx	lr
   34da0:	push	{fp}		; (str fp, [sp, #-4]!)
   34da4:	add	fp, sp, #0
   34da8:	sub	sp, sp, #12
   34dac:	str	r0, [fp, #-8]
   34db0:	ldr	r3, [fp, #-8]
   34db4:	cmp	r3, #9
   34db8:	blt	34ddc <__assert_fail@plt+0x23898>
   34dbc:	ldr	r3, [fp, #-8]
   34dc0:	cmp	r3, #13
   34dc4:	ble	34dd4 <__assert_fail@plt+0x23890>
   34dc8:	ldr	r3, [fp, #-8]
   34dcc:	cmp	r3, #32
   34dd0:	bne	34ddc <__assert_fail@plt+0x23898>
   34dd4:	mov	r3, #1
   34dd8:	b	34de0 <__assert_fail@plt+0x2389c>
   34ddc:	mov	r3, #0
   34de0:	mov	r0, r3
   34de4:	add	sp, fp, #0
   34de8:	pop	{fp}		; (ldr fp, [sp], #4)
   34dec:	bx	lr
   34df0:	push	{fp}		; (str fp, [sp, #-4]!)
   34df4:	add	fp, sp, #0
   34df8:	sub	sp, sp, #12
   34dfc:	str	r0, [fp, #-8]
   34e00:	ldr	r3, [fp, #-8]
   34e04:	sub	r3, r3, #65	; 0x41
   34e08:	cmp	r3, #25
   34e0c:	bhi	34e18 <__assert_fail@plt+0x238d4>
   34e10:	mov	r3, #1
   34e14:	b	34e1c <__assert_fail@plt+0x238d8>
   34e18:	mov	r3, #0
   34e1c:	mov	r0, r3
   34e20:	add	sp, fp, #0
   34e24:	pop	{fp}		; (ldr fp, [sp], #4)
   34e28:	bx	lr
   34e2c:	push	{fp}		; (str fp, [sp, #-4]!)
   34e30:	add	fp, sp, #0
   34e34:	sub	sp, sp, #12
   34e38:	str	r0, [fp, #-8]
   34e3c:	ldr	r3, [fp, #-8]
   34e40:	sub	r3, r3, #48	; 0x30
   34e44:	cmp	r3, #54	; 0x36
   34e48:	ldrls	pc, [pc, r3, lsl #2]
   34e4c:	b	34f34 <__assert_fail@plt+0x239f0>
   34e50:	andeq	r4, r3, ip, lsr #30
   34e54:	andeq	r4, r3, ip, lsr #30
   34e58:	andeq	r4, r3, ip, lsr #30
   34e5c:	andeq	r4, r3, ip, lsr #30
   34e60:	andeq	r4, r3, ip, lsr #30
   34e64:	andeq	r4, r3, ip, lsr #30
   34e68:	andeq	r4, r3, ip, lsr #30
   34e6c:	andeq	r4, r3, ip, lsr #30
   34e70:	andeq	r4, r3, ip, lsr #30
   34e74:	andeq	r4, r3, ip, lsr #30
   34e78:	andeq	r4, r3, r4, lsr pc
   34e7c:	andeq	r4, r3, r4, lsr pc
   34e80:	andeq	r4, r3, r4, lsr pc
   34e84:	andeq	r4, r3, r4, lsr pc
   34e88:	andeq	r4, r3, r4, lsr pc
   34e8c:	andeq	r4, r3, r4, lsr pc
   34e90:	andeq	r4, r3, r4, lsr pc
   34e94:	andeq	r4, r3, ip, lsr #30
   34e98:	andeq	r4, r3, ip, lsr #30
   34e9c:	andeq	r4, r3, ip, lsr #30
   34ea0:	andeq	r4, r3, ip, lsr #30
   34ea4:	andeq	r4, r3, ip, lsr #30
   34ea8:	andeq	r4, r3, ip, lsr #30
   34eac:	andeq	r4, r3, r4, lsr pc
   34eb0:	andeq	r4, r3, r4, lsr pc
   34eb4:	andeq	r4, r3, r4, lsr pc
   34eb8:	andeq	r4, r3, r4, lsr pc
   34ebc:	andeq	r4, r3, r4, lsr pc
   34ec0:	andeq	r4, r3, r4, lsr pc
   34ec4:	andeq	r4, r3, r4, lsr pc
   34ec8:	andeq	r4, r3, r4, lsr pc
   34ecc:	andeq	r4, r3, r4, lsr pc
   34ed0:	andeq	r4, r3, r4, lsr pc
   34ed4:	andeq	r4, r3, r4, lsr pc
   34ed8:	andeq	r4, r3, r4, lsr pc
   34edc:	andeq	r4, r3, r4, lsr pc
   34ee0:	andeq	r4, r3, r4, lsr pc
   34ee4:	andeq	r4, r3, r4, lsr pc
   34ee8:	andeq	r4, r3, r4, lsr pc
   34eec:	andeq	r4, r3, r4, lsr pc
   34ef0:	andeq	r4, r3, r4, lsr pc
   34ef4:	andeq	r4, r3, r4, lsr pc
   34ef8:	andeq	r4, r3, r4, lsr pc
   34efc:	andeq	r4, r3, r4, lsr pc
   34f00:	andeq	r4, r3, r4, lsr pc
   34f04:	andeq	r4, r3, r4, lsr pc
   34f08:	andeq	r4, r3, r4, lsr pc
   34f0c:	andeq	r4, r3, r4, lsr pc
   34f10:	andeq	r4, r3, r4, lsr pc
   34f14:	andeq	r4, r3, ip, lsr #30
   34f18:	andeq	r4, r3, ip, lsr #30
   34f1c:	andeq	r4, r3, ip, lsr #30
   34f20:	andeq	r4, r3, ip, lsr #30
   34f24:	andeq	r4, r3, ip, lsr #30
   34f28:	andeq	r4, r3, ip, lsr #30
   34f2c:	mov	r3, #1
   34f30:	b	34f38 <__assert_fail@plt+0x239f4>
   34f34:	mov	r3, #0
   34f38:	mov	r0, r3
   34f3c:	add	sp, fp, #0
   34f40:	pop	{fp}		; (ldr fp, [sp], #4)
   34f44:	bx	lr
   34f48:	push	{fp}		; (str fp, [sp, #-4]!)
   34f4c:	add	fp, sp, #0
   34f50:	sub	sp, sp, #12
   34f54:	str	r0, [fp, #-8]
   34f58:	ldr	r3, [fp, #-8]
   34f5c:	sub	r3, r3, #65	; 0x41
   34f60:	cmp	r3, #25
   34f64:	bhi	34f74 <__assert_fail@plt+0x23a30>
   34f68:	ldr	r3, [fp, #-8]
   34f6c:	add	r3, r3, #32
   34f70:	b	34f78 <__assert_fail@plt+0x23a34>
   34f74:	ldr	r3, [fp, #-8]
   34f78:	mov	r0, r3
   34f7c:	add	sp, fp, #0
   34f80:	pop	{fp}		; (ldr fp, [sp], #4)
   34f84:	bx	lr
   34f88:	push	{fp}		; (str fp, [sp, #-4]!)
   34f8c:	add	fp, sp, #0
   34f90:	sub	sp, sp, #12
   34f94:	str	r0, [fp, #-8]
   34f98:	ldr	r3, [fp, #-8]
   34f9c:	sub	r3, r3, #97	; 0x61
   34fa0:	cmp	r3, #25
   34fa4:	bhi	34fb4 <__assert_fail@plt+0x23a70>
   34fa8:	ldr	r3, [fp, #-8]
   34fac:	sub	r3, r3, #32
   34fb0:	b	34fb8 <__assert_fail@plt+0x23a74>
   34fb4:	ldr	r3, [fp, #-8]
   34fb8:	mov	r0, r3
   34fbc:	add	sp, fp, #0
   34fc0:	pop	{fp}		; (ldr fp, [sp], #4)
   34fc4:	bx	lr
   34fc8:	str	fp, [sp, #-8]!
   34fcc:	str	lr, [sp, #4]
   34fd0:	add	fp, sp, #4
   34fd4:	sub	sp, sp, #272	; 0x110
   34fd8:	str	r0, [fp, #-272]	; 0xfffffef0
   34fdc:	sub	r3, fp, #264	; 0x108
   34fe0:	movw	r2, #257	; 0x101
   34fe4:	mov	r1, r3
   34fe8:	ldr	r0, [fp, #-272]	; 0xfffffef0
   34fec:	bl	3518c <__assert_fail@plt+0x23c48>
   34ff0:	mov	r3, r0
   34ff4:	cmp	r3, #0
   34ff8:	beq	35004 <__assert_fail@plt+0x23ac0>
   34ffc:	mov	r3, #0
   35000:	b	35058 <__assert_fail@plt+0x23b14>
   35004:	sub	r3, fp, #264	; 0x108
   35008:	movw	r1, #26788	; 0x68a4
   3500c:	movt	r1, #3
   35010:	mov	r0, r3
   35014:	bl	111d8 <strcmp@plt>
   35018:	mov	r3, r0
   3501c:	cmp	r3, #0
   35020:	beq	3504c <__assert_fail@plt+0x23b08>
   35024:	sub	r3, fp, #264	; 0x108
   35028:	movw	r1, #26792	; 0x68a8
   3502c:	movt	r1, #3
   35030:	mov	r0, r3
   35034:	bl	111d8 <strcmp@plt>
   35038:	mov	r3, r0
   3503c:	cmp	r3, #0
   35040:	beq	3504c <__assert_fail@plt+0x23b08>
   35044:	mov	r3, #1
   35048:	b	35050 <__assert_fail@plt+0x23b0c>
   3504c:	mov	r3, #0
   35050:	and	r3, r3, #1
   35054:	uxtb	r3, r3
   35058:	mov	r0, r3
   3505c:	sub	sp, fp, #4
   35060:	ldr	fp, [sp]
   35064:	add	sp, sp, #4
   35068:	pop	{pc}		; (ldr pc, [sp], #4)
   3506c:	str	fp, [sp, #-8]!
   35070:	str	lr, [sp, #4]
   35074:	add	fp, sp, #4
   35078:	sub	sp, sp, #16
   3507c:	str	r0, [fp, #-16]
   35080:	mov	r1, #0
   35084:	ldr	r0, [fp, #-16]
   35088:	bl	114a8 <setlocale@plt>
   3508c:	str	r0, [fp, #-8]
   35090:	ldr	r3, [fp, #-8]
   35094:	mov	r0, r3
   35098:	sub	sp, fp, #4
   3509c:	ldr	fp, [sp]
   350a0:	add	sp, sp, #4
   350a4:	pop	{pc}		; (ldr pc, [sp], #4)
   350a8:	str	fp, [sp, #-8]!
   350ac:	str	lr, [sp, #4]
   350b0:	add	fp, sp, #4
   350b4:	sub	sp, sp, #24
   350b8:	str	r0, [fp, #-16]
   350bc:	str	r1, [fp, #-20]	; 0xffffffec
   350c0:	str	r2, [fp, #-24]	; 0xffffffe8
   350c4:	ldr	r0, [fp, #-16]
   350c8:	bl	3506c <__assert_fail@plt+0x23b28>
   350cc:	str	r0, [fp, #-8]
   350d0:	ldr	r3, [fp, #-8]
   350d4:	cmp	r3, #0
   350d8:	bne	350fc <__assert_fail@plt+0x23bb8>
   350dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   350e0:	cmp	r3, #0
   350e4:	beq	350f4 <__assert_fail@plt+0x23bb0>
   350e8:	ldr	r3, [fp, #-20]	; 0xffffffec
   350ec:	mov	r2, #0
   350f0:	strb	r2, [r3]
   350f4:	mov	r3, #22
   350f8:	b	35178 <__assert_fail@plt+0x23c34>
   350fc:	ldr	r0, [fp, #-8]
   35100:	bl	113f4 <strlen@plt>
   35104:	str	r0, [fp, #-12]
   35108:	ldr	r2, [fp, #-12]
   3510c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   35110:	cmp	r2, r3
   35114:	bcs	35138 <__assert_fail@plt+0x23bf4>
   35118:	ldr	r3, [fp, #-12]
   3511c:	add	r3, r3, #1
   35120:	mov	r2, r3
   35124:	ldr	r1, [fp, #-8]
   35128:	ldr	r0, [fp, #-20]	; 0xffffffec
   3512c:	bl	11250 <memcpy@plt>
   35130:	mov	r3, #0
   35134:	b	35178 <__assert_fail@plt+0x23c34>
   35138:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3513c:	cmp	r3, #0
   35140:	beq	35174 <__assert_fail@plt+0x23c30>
   35144:	ldr	r3, [fp, #-24]	; 0xffffffe8
   35148:	sub	r3, r3, #1
   3514c:	mov	r2, r3
   35150:	ldr	r1, [fp, #-8]
   35154:	ldr	r0, [fp, #-20]	; 0xffffffec
   35158:	bl	11250 <memcpy@plt>
   3515c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   35160:	sub	r3, r3, #1
   35164:	ldr	r2, [fp, #-20]	; 0xffffffec
   35168:	add	r3, r2, r3
   3516c:	mov	r2, #0
   35170:	strb	r2, [r3]
   35174:	mov	r3, #34	; 0x22
   35178:	mov	r0, r3
   3517c:	sub	sp, fp, #4
   35180:	ldr	fp, [sp]
   35184:	add	sp, sp, #4
   35188:	pop	{pc}		; (ldr pc, [sp], #4)
   3518c:	str	fp, [sp, #-8]!
   35190:	str	lr, [sp, #4]
   35194:	add	fp, sp, #4
   35198:	sub	sp, sp, #16
   3519c:	str	r0, [fp, #-8]
   351a0:	str	r1, [fp, #-12]
   351a4:	str	r2, [fp, #-16]
   351a8:	ldr	r2, [fp, #-16]
   351ac:	ldr	r1, [fp, #-12]
   351b0:	ldr	r0, [fp, #-8]
   351b4:	bl	350a8 <__assert_fail@plt+0x23b64>
   351b8:	mov	r3, r0
   351bc:	mov	r0, r3
   351c0:	sub	sp, fp, #4
   351c4:	ldr	fp, [sp]
   351c8:	add	sp, sp, #4
   351cc:	pop	{pc}		; (ldr pc, [sp], #4)
   351d0:	str	fp, [sp, #-8]!
   351d4:	str	lr, [sp, #4]
   351d8:	add	fp, sp, #4
   351dc:	sub	sp, sp, #8
   351e0:	str	r0, [fp, #-8]
   351e4:	ldr	r0, [fp, #-8]
   351e8:	bl	3506c <__assert_fail@plt+0x23b28>
   351ec:	mov	r3, r0
   351f0:	mov	r0, r3
   351f4:	sub	sp, fp, #4
   351f8:	ldr	fp, [sp]
   351fc:	add	sp, sp, #4
   35200:	pop	{pc}		; (ldr pc, [sp], #4)
   35204:	cmp	r3, #0
   35208:	cmpeq	r2, #0
   3520c:	bne	35230 <__assert_fail@plt+0x23cec>
   35210:	cmp	r1, #0
   35214:	movlt	r1, #-2147483648	; 0x80000000
   35218:	movlt	r0, #0
   3521c:	blt	3522c <__assert_fail@plt+0x23ce8>
   35220:	cmpeq	r0, #0
   35224:	mvnne	r1, #-2147483648	; 0x80000000
   35228:	mvnne	r0, #0
   3522c:	b	352d8 <__assert_fail@plt+0x23d94>
   35230:	sub	sp, sp, #8
   35234:	push	{sp, lr}
   35238:	cmp	r1, #0
   3523c:	blt	3525c <__assert_fail@plt+0x23d18>
   35240:	cmp	r3, #0
   35244:	blt	35290 <__assert_fail@plt+0x23d4c>
   35248:	bl	352e8 <__assert_fail@plt+0x23da4>
   3524c:	ldr	lr, [sp, #4]
   35250:	add	sp, sp, #8
   35254:	pop	{r2, r3}
   35258:	bx	lr
   3525c:	rsbs	r0, r0, #0
   35260:	sbc	r1, r1, r1, lsl #1
   35264:	cmp	r3, #0
   35268:	blt	352b4 <__assert_fail@plt+0x23d70>
   3526c:	bl	352e8 <__assert_fail@plt+0x23da4>
   35270:	ldr	lr, [sp, #4]
   35274:	add	sp, sp, #8
   35278:	pop	{r2, r3}
   3527c:	rsbs	r0, r0, #0
   35280:	sbc	r1, r1, r1, lsl #1
   35284:	rsbs	r2, r2, #0
   35288:	sbc	r3, r3, r3, lsl #1
   3528c:	bx	lr
   35290:	rsbs	r2, r2, #0
   35294:	sbc	r3, r3, r3, lsl #1
   35298:	bl	352e8 <__assert_fail@plt+0x23da4>
   3529c:	ldr	lr, [sp, #4]
   352a0:	add	sp, sp, #8
   352a4:	pop	{r2, r3}
   352a8:	rsbs	r0, r0, #0
   352ac:	sbc	r1, r1, r1, lsl #1
   352b0:	bx	lr
   352b4:	rsbs	r2, r2, #0
   352b8:	sbc	r3, r3, r3, lsl #1
   352bc:	bl	352e8 <__assert_fail@plt+0x23da4>
   352c0:	ldr	lr, [sp, #4]
   352c4:	add	sp, sp, #8
   352c8:	pop	{r2, r3}
   352cc:	rsbs	r2, r2, #0
   352d0:	sbc	r3, r3, r3, lsl #1
   352d4:	bx	lr
   352d8:	push	{r1, lr}
   352dc:	mov	r0, #8
   352e0:	bl	111b4 <raise@plt>
   352e4:	pop	{r1, pc}
   352e8:	cmp	r1, r3
   352ec:	cmpeq	r0, r2
   352f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   352f4:	mov	r4, r0
   352f8:	movcc	r0, #0
   352fc:	mov	r5, r1
   35300:	ldr	lr, [sp, #36]	; 0x24
   35304:	movcc	r1, r0
   35308:	bcc	35404 <__assert_fail@plt+0x23ec0>
   3530c:	cmp	r3, #0
   35310:	clzeq	ip, r2
   35314:	clzne	ip, r3
   35318:	addeq	ip, ip, #32
   3531c:	cmp	r5, #0
   35320:	clzeq	r1, r4
   35324:	addeq	r1, r1, #32
   35328:	clzne	r1, r5
   3532c:	sub	ip, ip, r1
   35330:	sub	sl, ip, #32
   35334:	lsl	r9, r3, ip
   35338:	rsb	fp, ip, #32
   3533c:	orr	r9, r9, r2, lsl sl
   35340:	orr	r9, r9, r2, lsr fp
   35344:	lsl	r8, r2, ip
   35348:	cmp	r5, r9
   3534c:	cmpeq	r4, r8
   35350:	movcc	r0, #0
   35354:	movcc	r1, r0
   35358:	bcc	35374 <__assert_fail@plt+0x23e30>
   3535c:	mov	r0, #1
   35360:	subs	r4, r4, r8
   35364:	lsl	r1, r0, sl
   35368:	orr	r1, r1, r0, lsr fp
   3536c:	lsl	r0, r0, ip
   35370:	sbc	r5, r5, r9
   35374:	cmp	ip, #0
   35378:	beq	35404 <__assert_fail@plt+0x23ec0>
   3537c:	lsr	r6, r8, #1
   35380:	orr	r6, r6, r9, lsl #31
   35384:	lsr	r7, r9, #1
   35388:	mov	r2, ip
   3538c:	b	353b0 <__assert_fail@plt+0x23e6c>
   35390:	subs	r3, r4, r6
   35394:	sbc	r8, r5, r7
   35398:	adds	r3, r3, r3
   3539c:	adc	r8, r8, r8
   353a0:	adds	r4, r3, #1
   353a4:	adc	r5, r8, #0
   353a8:	subs	r2, r2, #1
   353ac:	beq	353cc <__assert_fail@plt+0x23e88>
   353b0:	cmp	r5, r7
   353b4:	cmpeq	r4, r6
   353b8:	bcs	35390 <__assert_fail@plt+0x23e4c>
   353bc:	adds	r4, r4, r4
   353c0:	adc	r5, r5, r5
   353c4:	subs	r2, r2, #1
   353c8:	bne	353b0 <__assert_fail@plt+0x23e6c>
   353cc:	lsr	r3, r4, ip
   353d0:	orr	r3, r3, r5, lsl fp
   353d4:	lsr	r2, r5, ip
   353d8:	orr	r3, r3, r5, lsr sl
   353dc:	adds	r0, r0, r4
   353e0:	mov	r4, r3
   353e4:	lsl	r3, r2, ip
   353e8:	orr	r3, r3, r4, lsl sl
   353ec:	lsl	ip, r4, ip
   353f0:	orr	r3, r3, r4, lsr fp
   353f4:	adc	r1, r1, r5
   353f8:	subs	r0, r0, ip
   353fc:	mov	r5, r2
   35400:	sbc	r1, r1, r3
   35404:	cmp	lr, #0
   35408:	strdne	r4, [lr]
   3540c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   35410:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   35414:	mov	r7, r0
   35418:	ldr	r6, [pc, #72]	; 35468 <__assert_fail@plt+0x23f24>
   3541c:	ldr	r5, [pc, #72]	; 3546c <__assert_fail@plt+0x23f28>
   35420:	add	r6, pc, r6
   35424:	add	r5, pc, r5
   35428:	sub	r6, r6, r5
   3542c:	mov	r8, r1
   35430:	mov	r9, r2
   35434:	bl	11158 <pthread_mutex_unlock@plt-0x20>
   35438:	asrs	r6, r6, #2
   3543c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   35440:	mov	r4, #0
   35444:	add	r4, r4, #1
   35448:	ldr	r3, [r5], #4
   3544c:	mov	r2, r9
   35450:	mov	r1, r8
   35454:	mov	r0, r7
   35458:	blx	r3
   3545c:	cmp	r6, r4
   35460:	bne	35444 <__assert_fail@plt+0x23f00>
   35464:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   35468:	andeq	r1, r1, ip, ror #21
   3546c:	andeq	r1, r1, r4, ror #21
   35470:	bx	lr
   35474:	ldr	r3, [pc, #12]	; 35488 <__assert_fail@plt+0x23f44>
   35478:	mov	r1, #0
   3547c:	add	r3, pc, r3
   35480:	ldr	r2, [r3]
   35484:	b	1143c <__cxa_atexit@plt>
   35488:	ldrdeq	r1, [r1], -r8

Disassembly of section .fini:

0003548c <.fini>:
   3548c:	push	{r3, lr}
   35490:	pop	{r3, pc}
