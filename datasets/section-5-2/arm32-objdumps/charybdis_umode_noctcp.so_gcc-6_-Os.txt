
../repos/charybdis/extensions/.libs/umode_noctcp.so:     file format elf32-littlearm


Disassembly of section .init:

0000043c <_init>:
 43c:	push	{r3, lr}
 440:	bl	4a4 <call_weak_fn>
 444:	pop	{r3, pc}

Disassembly of section .plt:

00000448 <.plt>:
 448:	push	{lr}		; (str lr, [sp, #-4]!)
 44c:	ldr	lr, [pc, #4]	; 458 <.plt+0x10>
 450:	add	lr, pc, lr
 454:	ldr	pc, [lr, #8]!
 458:	.word	0x00010ba8

0000045c <__cxa_finalize@plt>:
 45c:	add	ip, pc, #0, 12
 460:	add	ip, ip, #16, 20	; 0x10000
 464:	ldr	pc, [ip, #2984]!	; 0xba8

00000468 <rb_strncasecmp@plt>:
 468:	add	ip, pc, #0, 12
 46c:	add	ip, ip, #16, 20	; 0x10000
 470:	ldr	pc, [ip, #2976]!	; 0xba0

00000474 <find_umode_slot@plt>:
 474:	add	ip, pc, #0, 12
 478:	add	ip, ip, #16, 20	; 0x10000
 47c:	ldr	pc, [ip, #2968]!	; 0xb98

00000480 <__gmon_start__@plt>:
 480:	add	ip, pc, #0, 12
 484:	add	ip, ip, #16, 20	; 0x10000
 488:	ldr	pc, [ip, #2960]!	; 0xb90

0000048c <sendto_one_numeric@plt>:
 48c:	add	ip, pc, #0, 12
 490:	add	ip, ip, #16, 20	; 0x10000
 494:	ldr	pc, [ip, #2952]!	; 0xb88

00000498 <construct_umodebuf@plt>:
 498:	add	ip, pc, #0, 12
 49c:	add	ip, ip, #16, 20	; 0x10000
 4a0:	ldr	pc, [ip, #2944]!	; 0xb80

Disassembly of section .text:

000004a4 <call_weak_fn>:
 4a4:	ldr	r3, [pc, #20]	; 4c0 <call_weak_fn+0x1c>
 4a8:	ldr	r2, [pc, #20]	; 4c4 <call_weak_fn+0x20>
 4ac:	add	r3, pc, r3
 4b0:	ldr	r2, [r3, r2]
 4b4:	cmp	r2, #0
 4b8:	bxeq	lr
 4bc:	b	480 <__gmon_start__@plt>
 4c0:	.word	0x00010b4c
 4c4:	.word	0x00000030

000004c8 <deregister_tm_clones>:
 4c8:	ldr	r3, [pc, #52]	; 504 <deregister_tm_clones+0x3c>
 4cc:	ldr	r0, [pc, #52]	; 508 <deregister_tm_clones+0x40>
 4d0:	add	r3, pc, r3
 4d4:	add	r0, pc, r0
 4d8:	add	r3, r3, #3
 4dc:	sub	r3, r3, r0
 4e0:	cmp	r3, #6
 4e4:	ldr	r3, [pc, #32]	; 50c <deregister_tm_clones+0x44>
 4e8:	add	r3, pc, r3
 4ec:	bxls	lr
 4f0:	ldr	r2, [pc, #24]	; 510 <deregister_tm_clones+0x48>
 4f4:	ldr	r3, [r3, r2]
 4f8:	cmp	r3, #0
 4fc:	bxeq	lr
 500:	bx	r3
 504:	.word	0x00010ba8
 508:	.word	0x00010ba4
 50c:	.word	0x00010b10
 510:	.word	0x00000028

00000514 <register_tm_clones>:
 514:	ldr	r1, [pc, #56]	; 554 <register_tm_clones+0x40>
 518:	ldr	r0, [pc, #56]	; 558 <register_tm_clones+0x44>
 51c:	add	r1, pc, r1
 520:	add	r0, pc, r0
 524:	sub	r1, r1, r0
 528:	ldr	r3, [pc, #44]	; 55c <register_tm_clones+0x48>
 52c:	asr	r1, r1, #2
 530:	add	r3, pc, r3
 534:	add	r1, r1, r1, lsr #31
 538:	asrs	r1, r1, #1
 53c:	bxeq	lr
 540:	ldr	r2, [pc, #24]	; 560 <register_tm_clones+0x4c>
 544:	ldr	r3, [r3, r2]
 548:	cmp	r3, #0
 54c:	bxeq	lr
 550:	bx	r3
 554:	.word	0x00010b5c
 558:	.word	0x00010b58
 55c:	.word	0x00010ac8
 560:	.word	0x00000038

00000564 <__do_global_dtors_aux>:
 564:	ldr	r3, [pc, #76]	; 5b8 <__do_global_dtors_aux+0x54>
 568:	ldr	r2, [pc, #76]	; 5bc <__do_global_dtors_aux+0x58>
 56c:	add	r3, pc, r3
 570:	add	r2, pc, r2
 574:	ldrb	r3, [r3]
 578:	cmp	r3, #0
 57c:	bxne	lr
 580:	ldr	r3, [pc, #56]	; 5c0 <__do_global_dtors_aux+0x5c>
 584:	push	{r4, lr}
 588:	ldr	r3, [r2, r3]
 58c:	cmp	r3, #0
 590:	beq	5a0 <__do_global_dtors_aux+0x3c>
 594:	ldr	r3, [pc, #40]	; 5c4 <__do_global_dtors_aux+0x60>
 598:	ldr	r0, [pc, r3]
 59c:	bl	45c <__cxa_finalize@plt>
 5a0:	bl	4c8 <deregister_tm_clones>
 5a4:	ldr	r3, [pc, #28]	; 5c8 <__do_global_dtors_aux+0x64>
 5a8:	mov	r2, #1
 5ac:	add	r3, pc, r3
 5b0:	strb	r2, [r3]
 5b4:	pop	{r4, pc}
 5b8:	.word	0x00010b0c
 5bc:	.word	0x00010a88
 5c0:	.word	0x00000024
 5c4:	.word	0x00010a9c
 5c8:	.word	0x00010acc

000005cc <frame_dummy>:
 5cc:	ldr	r0, [pc, #56]	; 60c <frame_dummy+0x40>
 5d0:	ldr	r3, [pc, #56]	; 610 <frame_dummy+0x44>
 5d4:	add	r0, pc, r0
 5d8:	ldr	r2, [r0]
 5dc:	add	r3, pc, r3
 5e0:	cmp	r2, #0
 5e4:	bne	5ec <frame_dummy+0x20>
 5e8:	b	514 <register_tm_clones>
 5ec:	ldr	r2, [pc, #32]	; 614 <frame_dummy+0x48>
 5f0:	ldr	r3, [r3, r2]
 5f4:	cmp	r3, #0
 5f8:	beq	5e8 <frame_dummy+0x1c>
 5fc:	push	{r4, lr}
 600:	blx	r3
 604:	pop	{r4, lr}
 608:	b	514 <register_tm_clones>
 60c:	.word	0x00010920
 610:	.word	0x00010a1c
 614:	.word	0x00000034

00000618 <_moddeinit>:
 618:	ldr	r3, [pc, #20]	; 634 <_moddeinit+0x1c>
 61c:	ldr	r2, [pc, #20]	; 638 <_moddeinit+0x20>
 620:	add	r3, pc, r3
 624:	ldr	r3, [r3, r2]
 628:	mov	r2, #0
 62c:	str	r2, [r3, #268]	; 0x10c
 630:	b	498 <construct_umodebuf@plt>
 634:	.word	0x000109d8
 638:	.word	0x0000002c

0000063c <_modinit>:
 63c:	push	{r4, lr}
 640:	bl	474 <find_umode_slot@plt>
 644:	ldr	r4, [pc, #24]	; 664 <_modinit+0x28>
 648:	ldr	r3, [pc, #24]	; 668 <_modinit+0x2c>
 64c:	add	r4, pc, r4
 650:	ldr	r3, [r4, r3]
 654:	str	r0, [r3, #268]	; 0x10c
 658:	bl	498 <construct_umodebuf@plt>
 65c:	mov	r0, #0
 660:	pop	{r4, pc}
 664:	.word	0x000109ac
 668:	.word	0x0000002c

0000066c <umode_noctcp_process>:
 66c:	ldr	r3, [r0, #8]
 670:	push	{r0, r1, r2, r4, r5, lr}
 674:	ldrd	r4, [r3, #64]	; 0x40
 678:	ldr	r2, [pc, #180]	; 734 <umode_noctcp_process+0xc8>
 67c:	mov	r5, #0
 680:	and	r4, r4, #8192	; 0x2000
 684:	orrs	r1, r4, r5
 688:	add	r2, pc, r2
 68c:	beq	72c <umode_noctcp_process+0xc0>
 690:	ldrh	r1, [r3, #80]	; 0x50
 694:	cmp	r1, #64	; 0x40
 698:	bne	72c <umode_noctcp_process+0xc0>
 69c:	ldr	r1, [r0, #16]
 6a0:	cmp	r1, #0
 6a4:	bne	72c <umode_noctcp_process+0xc0>
 6a8:	ldr	r1, [r0]
 6ac:	cmp	r1, #0
 6b0:	beq	72c <umode_noctcp_process+0xc0>
 6b4:	ldr	r1, [pc, #124]	; 738 <umode_noctcp_process+0xcc>
 6b8:	ldr	r1, [r2, r1]
 6bc:	ldr	r2, [r3, #56]	; 0x38
 6c0:	ldr	r3, [r1, #268]	; 0x10c
 6c4:	tst	r2, r3
 6c8:	beq	72c <umode_noctcp_process+0xc0>
 6cc:	ldr	r3, [r0, #12]
 6d0:	ldrb	r2, [r3]
 6d4:	cmp	r2, #1
 6d8:	bne	72c <umode_noctcp_process+0xc0>
 6dc:	ldr	r1, [pc, #88]	; 73c <umode_noctcp_process+0xd0>
 6e0:	mov	r4, r0
 6e4:	mov	r2, #6
 6e8:	add	r1, pc, r1
 6ec:	add	r0, r3, #1
 6f0:	bl	468 <rb_strncasecmp@plt>
 6f4:	cmp	r0, #0
 6f8:	beq	72c <umode_noctcp_process+0xc0>
 6fc:	ldr	r2, [pc, #60]	; 740 <umode_noctcp_process+0xd4>
 700:	ldr	r3, [r4, #8]
 704:	add	r2, pc, r2
 708:	str	r2, [sp]
 70c:	ldr	r2, [pc, #48]	; 744 <umode_noctcp_process+0xd8>
 710:	add	r3, r3, #88	; 0x58
 714:	add	r2, pc, r2
 718:	mov	r1, #492	; 0x1ec
 71c:	ldr	r0, [r4, #4]
 720:	bl	48c <sendto_one_numeric@plt>
 724:	mov	r3, #492	; 0x1ec
 728:	str	r3, [r4, #16]
 72c:	add	sp, sp, #12
 730:	pop	{r4, r5, pc}
 734:	.word	0x00010970
 738:	.word	0x0000002c
 73c:	.word	0x00000092
 740:	.word	0x0000009a
 744:	.word	0x0000006d

Disassembly of section .fini:

00000748 <_fini>:
 748:	push	{r3, lr}
 74c:	pop	{r3, pc}
