
../repos/tbeu-matio-3dd266d/src/.libs/libmatio.so.9.1.0:     file format elf32-littlearm


Disassembly of section .init:

000013ec <_init>:
    13ec:	push	{r3, lr}
    13f0:	bl	16c8 <call_weak_fn>
    13f4:	pop	{r3, pc}

Disassembly of section .plt:

000013f8 <.plt>:
    13f8:	push	{lr}		; (str lr, [sp, #-4]!)
    13fc:	ldr	lr, [pc, #4]	; 1408 <.plt+0x10>
    1400:	add	lr, pc, lr
    1404:	ldr	pc, [lr, #8]!
    1408:	.word	0x0004ebf8

0000140c <calloc@plt>:
    140c:	add	ip, pc, #0, 12
    1410:	add	ip, ip, #319488	; 0x4e000
    1414:	ldr	pc, [ip, #3064]!	; 0xbf8

00001418 <Mat_VarReadNext@plt>:
    1418:	add	ip, pc, #0, 12
    141c:	add	ip, ip, #319488	; 0x4e000
    1420:	ldr	pc, [ip, #3056]!	; 0xbf0

00001424 <strcmp@plt>:
    1424:	add	ip, pc, #0, 12
    1428:	add	ip, ip, #319488	; 0x4e000
    142c:	ldr	pc, [ip, #3048]!	; 0xbe8

00001430 <__cxa_finalize@plt>:
    1430:	add	ip, pc, #0, 12
    1434:	add	ip, ip, #319488	; 0x4e000
    1438:	ldr	pc, [ip, #3040]!	; 0xbe0

0000143c <Mat_Open@plt>:
    143c:	add	ip, pc, #0, 12
    1440:	add	ip, ip, #319488	; 0x4e000
    1444:	ldr	pc, [ip, #3032]!	; 0xbd8

00001448 <printf@plt>:
    1448:	add	ip, pc, #0, 12
    144c:	add	ip, ip, #319488	; 0x4e000
    1450:	ldr	pc, [ip, #3024]!	; 0xbd0

00001454 <fopen@plt>:
    1454:	add	ip, pc, #0, 12
    1458:	add	ip, ip, #319488	; 0x4e000
    145c:	ldr	pc, [ip, #3016]!	; 0xbc8

00001460 <inflate@plt>:
    1460:	add	ip, pc, #0, 12
    1464:	add	ip, ip, #319488	; 0x4e000
    1468:	ldr	pc, [ip, #3008]!	; 0xbc0

0000146c <fflush@plt>:
    146c:	add	ip, pc, #0, 12
    1470:	add	ip, ip, #319488	; 0x4e000
    1474:	ldr	pc, [ip, #3000]!	; 0xbb8

00001478 <free@plt>:
    1478:	add	ip, pc, #0, 12
    147c:	add	ip, ip, #319488	; 0x4e000
    1480:	ldr	pc, [ip, #2992]!	; 0xbb0

00001484 <Mat_Warning@plt>:
    1484:	add	ip, pc, #0, 12
    1488:	add	ip, ip, #319488	; 0x4e000
    148c:	ldr	pc, [ip, #2984]!	; 0xba8

00001490 <memcpy@plt>:
    1490:	add	ip, pc, #0, 12
    1494:	add	ip, ip, #319488	; 0x4e000
    1498:	ldr	pc, [ip, #2976]!	; 0xba0

0000149c <Mat_VarWrite@plt>:
    149c:	add	ip, pc, #0, 12
    14a0:	add	ip, ip, #319488	; 0x4e000
    14a4:	ldr	pc, [ip, #2968]!	; 0xb98

000014a8 <time@plt>:
    14a8:	add	ip, pc, #0, 12
    14ac:	add	ip, ip, #319488	; 0x4e000
    14b0:	ldr	pc, [ip, #2960]!	; 0xb90

000014b4 <ftell@plt>:
    14b4:	add	ip, pc, #0, 12
    14b8:	add	ip, ip, #319488	; 0x4e000
    14bc:	ldr	pc, [ip, #2952]!	; 0xb88

000014c0 <ctime@plt>:
    14c0:	add	ip, pc, #0, 12
    14c4:	add	ip, ip, #319488	; 0x4e000
    14c8:	ldr	pc, [ip, #2944]!	; 0xb80

000014cc <strdup@plt>:
    14cc:	add	ip, pc, #0, 12
    14d0:	add	ip, ip, #319488	; 0x4e000
    14d4:	ldr	pc, [ip, #2936]!	; 0xb78

000014d8 <realloc@plt>:
    14d8:	add	ip, pc, #0, 12
    14dc:	add	ip, ip, #319488	; 0x4e000
    14e0:	ldr	pc, [ip, #2928]!	; 0xb70

000014e4 <Mat_VarReadInfo@plt>:
    14e4:	add	ip, pc, #0, 12
    14e8:	add	ip, ip, #319488	; 0x4e000
    14ec:	ldr	pc, [ip, #2920]!	; 0xb68

000014f0 <zError@plt>:
    14f0:	add	ip, pc, #0, 12
    14f4:	add	ip, ip, #319488	; 0x4e000
    14f8:	ldr	pc, [ip, #2912]!	; 0xb60

000014fc <deflate@plt>:
    14fc:	add	ip, pc, #0, 12
    1500:	add	ip, ip, #319488	; 0x4e000
    1504:	ldr	pc, [ip, #2904]!	; 0xb58

00001508 <Mat_VarCalloc@plt>:
    1508:	add	ip, pc, #0, 12
    150c:	add	ip, ip, #319488	; 0x4e000
    1510:	ldr	pc, [ip, #2896]!	; 0xb50

00001514 <fwrite@plt>:
    1514:	add	ip, pc, #0, 12
    1518:	add	ip, ip, #319488	; 0x4e000
    151c:	ldr	pc, [ip, #2888]!	; 0xb48

00001520 <fread@plt>:
    1520:	add	ip, pc, #0, 12
    1524:	add	ip, ip, #319488	; 0x4e000
    1528:	ldr	pc, [ip, #2880]!	; 0xb40

0000152c <floor@plt>:
    152c:	add	ip, pc, #0, 12
    1530:	add	ip, ip, #319488	; 0x4e000
    1534:	ldr	pc, [ip, #2872]!	; 0xb38

00001538 <puts@plt>:
    1538:	add	ip, pc, #0, 12
    153c:	add	ip, ip, #319488	; 0x4e000
    1540:	ldr	pc, [ip, #2864]!	; 0xb30

00001544 <malloc@plt>:
    1544:	add	ip, pc, #0, 12
    1548:	add	ip, ip, #319488	; 0x4e000
    154c:	ldr	pc, [ip, #2856]!	; 0xb28

00001550 <deflateInit_@plt>:
    1550:	add	ip, pc, #0, 12
    1554:	add	ip, ip, #319488	; 0x4e000
    1558:	ldr	pc, [ip, #2848]!	; 0xb20

0000155c <mktemp@plt>:
    155c:	add	ip, pc, #0, 12
    1560:	add	ip, ip, #319488	; 0x4e000
    1564:	ldr	pc, [ip, #2840]!	; 0xb18

00001568 <__gmon_start__@plt>:
    1568:	add	ip, pc, #0, 12
    156c:	add	ip, ip, #319488	; 0x4e000
    1570:	ldr	pc, [ip, #2832]!	; 0xb10

00001574 <exit@plt>:
    1574:	add	ip, pc, #0, 12
    1578:	add	ip, ip, #319488	; 0x4e000
    157c:	ldr	pc, [ip, #2824]!	; 0xb08

00001580 <feof@plt>:
    1580:	add	ip, pc, #0, 12
    1584:	add	ip, ip, #319488	; 0x4e000
    1588:	ldr	pc, [ip, #2816]!	; 0xb00

0000158c <Mat_VarFree@plt>:
    158c:	add	ip, pc, #0, 12
    1590:	add	ip, ip, #319488	; 0x4e000
    1594:	ldr	pc, [ip, #2808]!	; 0xaf8

00001598 <Mat_SizeOf@plt>:
    1598:	add	ip, pc, #0, 12
    159c:	add	ip, ip, #319488	; 0x4e000
    15a0:	ldr	pc, [ip, #2800]!	; 0xaf0

000015a4 <Mat_GetDir@plt>:
    15a4:	add	ip, pc, #0, 12
    15a8:	add	ip, ip, #319488	; 0x4e000
    15ac:	ldr	pc, [ip, #2792]!	; 0xae8

000015b0 <inflateEnd@plt>:
    15b0:	add	ip, pc, #0, 12
    15b4:	add	ip, ip, #319488	; 0x4e000
    15b8:	ldr	pc, [ip, #2784]!	; 0xae0

000015bc <inflateCopy@plt>:
    15bc:	add	ip, pc, #0, 12
    15c0:	add	ip, ip, #319488	; 0x4e000
    15c4:	ldr	pc, [ip, #2776]!	; 0xad8

000015c8 <strlen@plt>:
    15c8:	add	ip, pc, #0, 12
    15cc:	add	ip, ip, #319488	; 0x4e000
    15d0:	ldr	pc, [ip, #2768]!	; 0xad0

000015d4 <fprintf@plt>:
    15d4:	add	ip, pc, #0, 12
    15d8:	add	ip, ip, #319488	; 0x4e000
    15dc:	ldr	pc, [ip, #2760]!	; 0xac8

000015e0 <snprintf@plt>:
    15e0:	add	ip, pc, #0, 12
    15e4:	add	ip, ip, #319488	; 0x4e000
    15e8:	ldr	pc, [ip, #2752]!	; 0xac0

000015ec <Mat_Rewind@plt>:
    15ec:	add	ip, pc, #0, 12
    15f0:	add	ip, ip, #319488	; 0x4e000
    15f4:	ldr	pc, [ip, #2744]!	; 0xab8

000015f8 <memset@plt>:
    15f8:	add	ip, pc, #0, 12
    15fc:	add	ip, ip, #319488	; 0x4e000
    1600:	ldr	pc, [ip, #2736]!	; 0xab0

00001604 <putchar@plt>:
    1604:	add	ip, pc, #0, 12
    1608:	add	ip, ip, #319488	; 0x4e000
    160c:	ldr	pc, [ip, #2728]!	; 0xaa8

00001610 <Mat_Close@plt>:
    1610:	add	ip, pc, #0, 12
    1614:	add	ip, ip, #319488	; 0x4e000
    1618:	ldr	pc, [ip, #2720]!	; 0xaa0

0000161c <Mat_Critical@plt>:
    161c:	add	ip, pc, #0, 12
    1620:	add	ip, ip, #319488	; 0x4e000
    1624:	ldr	pc, [ip, #2712]!	; 0xa98

00001628 <deflateEnd@plt>:
    1628:	add	ip, pc, #0, 12
    162c:	add	ip, ip, #319488	; 0x4e000
    1630:	ldr	pc, [ip, #2704]!	; 0xa90

00001634 <fclose@plt>:
    1634:	add	ip, pc, #0, 12
    1638:	add	ip, ip, #319488	; 0x4e000
    163c:	ldr	pc, [ip, #2696]!	; 0xa88

00001640 <inflateInit_@plt>:
    1640:	add	ip, pc, #0, 12
    1644:	add	ip, ip, #319488	; 0x4e000
    1648:	ldr	pc, [ip, #2688]!	; 0xa80

0000164c <Mat_CreateVer@plt>:
    164c:	add	ip, pc, #0, 12
    1650:	add	ip, ip, #319488	; 0x4e000
    1654:	ldr	pc, [ip, #2680]!	; 0xa78

00001658 <remove@plt>:
    1658:	add	ip, pc, #0, 12
    165c:	add	ip, ip, #319488	; 0x4e000
    1660:	ldr	pc, [ip, #2672]!	; 0xa70

00001664 <vsnprintf@plt>:
    1664:	add	ip, pc, #0, 12
    1668:	add	ip, ip, #319488	; 0x4e000
    166c:	ldr	pc, [ip, #2664]!	; 0xa68

00001670 <Mat_VarGetStructFieldByName@plt>:
    1670:	add	ip, pc, #0, 12
    1674:	add	ip, ip, #319488	; 0x4e000
    1678:	ldr	pc, [ip, #2656]!	; 0xa60

0000167c <Mat_SizeOfClass@plt>:
    167c:	add	ip, pc, #0, 12
    1680:	add	ip, ip, #319488	; 0x4e000
    1684:	ldr	pc, [ip, #2648]!	; 0xa58

00001688 <Mat_VarGetStructFieldByIndex@plt>:
    1688:	add	ip, pc, #0, 12
    168c:	add	ip, ip, #319488	; 0x4e000
    1690:	ldr	pc, [ip, #2640]!	; 0xa50

00001694 <fseek@plt>:
    1694:	add	ip, pc, #0, 12
    1698:	add	ip, ip, #319488	; 0x4e000
    169c:	ldr	pc, [ip, #2632]!	; 0xa48

000016a0 <abort@plt>:
    16a0:	add	ip, pc, #0, 12
    16a4:	add	ip, ip, #319488	; 0x4e000
    16a8:	ldr	pc, [ip, #2624]!	; 0xa40

000016ac <Mat_VarDuplicate@plt>:
    16ac:	add	ip, pc, #0, 12
    16b0:	add	ip, ip, #319488	; 0x4e000
    16b4:	ldr	pc, [ip, #2616]!	; 0xa38

000016b8 <Mat_VarReadNextInfo@plt>:
    16b8:	add	ip, pc, #0, 12
    16bc:	add	ip, ip, #319488	; 0x4e000
    16c0:	ldr	pc, [ip, #2608]!	; 0xa30

Disassembly of section .text:

000016c8 <call_weak_fn>:
    16c8:	ldr	r3, [pc, #20]	; 16e4 <call_weak_fn+0x1c>
    16cc:	ldr	r2, [pc, #20]	; 16e8 <call_weak_fn+0x20>
    16d0:	add	r3, pc, r3
    16d4:	ldr	r2, [r3, r2]
    16d8:	cmp	r2, #0
    16dc:	bxeq	lr
    16e0:	b	1568 <__gmon_start__@plt>
    16e4:	.word	0x0004e928
    16e8:	.word	0x00000100

000016ec <deregister_tm_clones>:
    16ec:	ldr	r0, [pc, #44]	; 1720 <deregister_tm_clones+0x34>
    16f0:	ldr	r3, [pc, #44]	; 1724 <deregister_tm_clones+0x38>
    16f4:	add	r0, pc, r0
    16f8:	add	r3, pc, r3
    16fc:	cmp	r3, r0
    1700:	ldr	r3, [pc, #32]	; 1728 <deregister_tm_clones+0x3c>
    1704:	add	r3, pc, r3
    1708:	bxeq	lr
    170c:	ldr	r2, [pc, #24]	; 172c <deregister_tm_clones+0x40>
    1710:	ldr	r3, [r3, r2]
    1714:	cmp	r3, #0
    1718:	bxeq	lr
    171c:	bx	r3
    1720:	.word	0x0004eac0
    1724:	.word	0x0004eabc
    1728:	.word	0x0004e8f4
    172c:	.word	0x000000f8

00001730 <register_tm_clones>:
    1730:	ldr	r0, [pc, #56]	; 1770 <register_tm_clones+0x40>
    1734:	ldr	r3, [pc, #56]	; 1774 <register_tm_clones+0x44>
    1738:	add	r0, pc, r0
    173c:	add	r3, pc, r3
    1740:	sub	r1, r3, r0
    1744:	ldr	r3, [pc, #44]	; 1778 <register_tm_clones+0x48>
    1748:	asr	r1, r1, #2
    174c:	add	r3, pc, r3
    1750:	add	r1, r1, r1, lsr #31
    1754:	asrs	r1, r1, #1
    1758:	bxeq	lr
    175c:	ldr	r2, [pc, #24]	; 177c <register_tm_clones+0x4c>
    1760:	ldr	r3, [r3, r2]
    1764:	cmp	r3, #0
    1768:	bxeq	lr
    176c:	bx	r3
    1770:	.word	0x0004ea7c
    1774:	.word	0x0004ea78
    1778:	.word	0x0004e8ac
    177c:	.word	0x00000108

00001780 <__do_global_dtors_aux>:
    1780:	ldr	r3, [pc, #76]	; 17d4 <__do_global_dtors_aux+0x54>
    1784:	ldr	r2, [pc, #76]	; 17d8 <__do_global_dtors_aux+0x58>
    1788:	add	r3, pc, r3
    178c:	add	r2, pc, r2
    1790:	ldrb	r3, [r3]
    1794:	cmp	r3, #0
    1798:	bxne	lr
    179c:	ldr	r3, [pc, #56]	; 17dc <__do_global_dtors_aux+0x5c>
    17a0:	push	{r4, lr}
    17a4:	ldr	r3, [r2, r3]
    17a8:	cmp	r3, #0
    17ac:	beq	17bc <__do_global_dtors_aux+0x3c>
    17b0:	ldr	r3, [pc, #40]	; 17e0 <__do_global_dtors_aux+0x60>
    17b4:	ldr	r0, [pc, r3]
    17b8:	bl	1430 <__cxa_finalize@plt>
    17bc:	bl	16ec <deregister_tm_clones>
    17c0:	ldr	r3, [pc, #28]	; 17e4 <__do_global_dtors_aux+0x64>
    17c4:	mov	r2, #1
    17c8:	add	r3, pc, r3
    17cc:	strb	r2, [r3]
    17d0:	pop	{r4, pc}
    17d4:	.word	0x0004ea2c
    17d8:	.word	0x0004e86c
    17dc:	.word	0x000000f4
    17e0:	.word	0x0004e950
    17e4:	.word	0x0004e9ec

000017e8 <frame_dummy>:
    17e8:	b	1730 <register_tm_clones>

000017ec <Mat_int64Swap>:
    17ec:	ldm	r0, {r2, ip}
    17f0:	mov	r1, #0
    17f4:	mov	r3, #0
    17f8:	push	{lr}		; (str lr, [sp, #-4]!)
    17fc:	asr	lr, ip, #24
    1800:	bfi	r1, r2, #24, #8
    1804:	bfi	r3, lr, #0, #8
    1808:	sbfx	lr, r2, #8, #8
    180c:	bfi	r1, lr, #16, #8
    1810:	sbfx	lr, ip, #16, #8
    1814:	bfi	r3, lr, #8, #8
    1818:	sbfx	lr, r2, #16, #8
    181c:	asr	r2, r2, #24
    1820:	bfi	r1, lr, #8, #8
    1824:	sbfx	lr, ip, #8, #8
    1828:	bfi	r1, r2, #0, #8
    182c:	bfi	r3, lr, #16, #8
    1830:	bfi	r3, ip, #24, #8
    1834:	str	r3, [r0]
    1838:	str	r1, [r0, #4]
    183c:	mov	r0, r3
    1840:	pop	{pc}		; (ldr pc, [sp], #4)

00001844 <Mat_uint64Swap>:
    1844:	ldm	r0, {r2, ip}
    1848:	mov	r1, #0
    184c:	mov	r3, #0
    1850:	push	{lr}		; (str lr, [sp, #-4]!)
    1854:	lsr	lr, ip, #24
    1858:	bfi	r1, r2, #24, #8
    185c:	bfi	r3, lr, #0, #8
    1860:	ubfx	lr, r2, #8, #8
    1864:	bfi	r1, lr, #16, #8
    1868:	ubfx	lr, ip, #16, #8
    186c:	bfi	r3, lr, #8, #8
    1870:	ubfx	lr, r2, #16, #8
    1874:	lsr	r2, r2, #24
    1878:	bfi	r1, lr, #8, #8
    187c:	ubfx	lr, ip, #8, #8
    1880:	bfi	r1, r2, #0, #8
    1884:	bfi	r3, lr, #16, #8
    1888:	bfi	r3, ip, #24, #8
    188c:	str	r3, [r0]
    1890:	str	r1, [r0, #4]
    1894:	mov	r0, r3
    1898:	pop	{pc}		; (ldr pc, [sp], #4)

0000189c <Mat_int32Swap>:
    189c:	ldr	r2, [r0]
    18a0:	mov	r3, #0
    18a4:	asr	r1, r2, #24
    18a8:	bfi	r3, r2, #24, #8
    18ac:	bfi	r3, r1, #0, #8
    18b0:	sbfx	r1, r2, #8, #8
    18b4:	sbfx	r2, r2, #16, #8
    18b8:	bfi	r3, r1, #16, #8
    18bc:	bfi	r3, r2, #8, #8
    18c0:	str	r3, [r0]
    18c4:	mov	r0, r3
    18c8:	bx	lr

000018cc <Mat_uint32Swap>:
    18cc:	ldr	r2, [r0]
    18d0:	mov	r3, #0
    18d4:	lsr	r1, r2, #24
    18d8:	bfi	r3, r2, #24, #8
    18dc:	bfi	r3, r1, #0, #8
    18e0:	ubfx	r1, r2, #8, #8
    18e4:	ubfx	r2, r2, #16, #8
    18e8:	bfi	r3, r1, #16, #8
    18ec:	bfi	r3, r2, #8, #8
    18f0:	str	r3, [r0]
    18f4:	mov	r0, r3
    18f8:	bx	lr

000018fc <Mat_int16Swap>:
    18fc:	ldrsh	r2, [r0]
    1900:	mov	r3, #0
    1904:	bfi	r3, r2, #8, #8
    1908:	asr	r2, r2, #8
    190c:	bfi	r3, r2, #0, #8
    1910:	strh	r3, [r0]
    1914:	sxth	r0, r3
    1918:	bx	lr

0000191c <Mat_uint16Swap>:
    191c:	ldrh	r2, [r0]
    1920:	mov	r3, #0
    1924:	bfi	r3, r2, #8, #8
    1928:	lsr	r2, r2, #8
    192c:	bfi	r3, r2, #0, #8
    1930:	strh	r3, [r0]
    1934:	uxth	r0, r3
    1938:	bx	lr

0000193c <Mat_floatSwap>:
    193c:	ldr	r2, [r0]
    1940:	mov	r3, #0
    1944:	lsr	r1, r2, #24
    1948:	bfi	r3, r2, #24, #8
    194c:	bfi	r3, r1, #0, #8
    1950:	ubfx	r1, r2, #8, #8
    1954:	ubfx	r2, r2, #16, #8
    1958:	bfi	r3, r1, #16, #8
    195c:	bfi	r3, r2, #8, #8
    1960:	vmov	s0, r3
    1964:	str	r3, [r0]
    1968:	bx	lr

0000196c <Mat_doubleSwap>:
    196c:	ldm	r0, {r1, ip}
    1970:	mov	r2, #0
    1974:	mov	r3, #0
    1978:	push	{lr}		; (str lr, [sp, #-4]!)
    197c:	lsr	lr, ip, #24
    1980:	bfi	r3, r1, #24, #8
    1984:	bfi	r2, lr, #0, #8
    1988:	ubfx	lr, r1, #8, #8
    198c:	bfi	r3, lr, #16, #8
    1990:	ubfx	lr, ip, #16, #8
    1994:	bfi	r2, lr, #8, #8
    1998:	ubfx	lr, r1, #16, #8
    199c:	lsr	r1, r1, #24
    19a0:	bfi	r3, lr, #8, #8
    19a4:	ubfx	lr, ip, #8, #8
    19a8:	bfi	r3, r1, #0, #8
    19ac:	bfi	r2, lr, #16, #8
    19b0:	bfi	r2, ip, #24, #8
    19b4:	vmov	d0, r2, r3
    19b8:	vstr	d0, [r0]
    19bc:	pop	{pc}		; (ldr pc, [sp], #4)

000019c0 <mat_logfunc>:
    19c0:	ldr	r2, [pc, #352]	; 1b28 <mat_logfunc+0x168>
    19c4:	mov	r3, r1
    19c8:	and	r1, r0, #2
    19cc:	push	{r4, lr}
    19d0:	ldr	ip, [pc, #340]	; 1b2c <mat_logfunc+0x16c>
    19d4:	add	r2, pc, r2
    19d8:	ldr	r2, [r2]
    19dc:	add	ip, pc, ip
    19e0:	cmp	r2, #0
    19e4:	beq	1aa0 <mat_logfunc+0xe0>
    19e8:	cmp	r1, #0
    19ec:	beq	1a14 <mat_logfunc+0x54>
    19f0:	ldr	r1, [pc, #312]	; 1b30 <mat_logfunc+0x170>
    19f4:	ldr	r4, [ip, r1]
    19f8:	ldr	r1, [pc, #308]	; 1b34 <mat_logfunc+0x174>
    19fc:	add	r1, pc, r1
    1a00:	ldr	r0, [r4]
    1a04:	bl	15d4 <fprintf@plt>
    1a08:	ldr	r0, [r4]
    1a0c:	pop	{r4, lr}
    1a10:	b	146c <fflush@plt>
    1a14:	tst	r0, #1
    1a18:	beq	1a40 <mat_logfunc+0x80>
    1a1c:	ldr	r1, [pc, #268]	; 1b30 <mat_logfunc+0x170>
    1a20:	ldr	r4, [ip, r1]
    1a24:	ldr	r1, [pc, #268]	; 1b38 <mat_logfunc+0x178>
    1a28:	ldr	r0, [r4]
    1a2c:	add	r1, pc, r1
    1a30:	bl	15d4 <fprintf@plt>
    1a34:	ldr	r0, [r4]
    1a38:	bl	146c <fflush@plt>
    1a3c:	bl	16a0 <abort@plt>
    1a40:	tst	r0, #4
    1a44:	beq	1a5c <mat_logfunc+0x9c>
    1a48:	ldr	r1, [pc, #224]	; 1b30 <mat_logfunc+0x170>
    1a4c:	ldr	r4, [ip, r1]
    1a50:	ldr	r1, [pc, #228]	; 1b3c <mat_logfunc+0x17c>
    1a54:	add	r1, pc, r1
    1a58:	b	1a00 <mat_logfunc+0x40>
    1a5c:	tst	r0, #16
    1a60:	beq	1a78 <mat_logfunc+0xb8>
    1a64:	ldr	r1, [pc, #196]	; 1b30 <mat_logfunc+0x170>
    1a68:	ldr	r4, [ip, r1]
    1a6c:	ldr	r1, [pc, #204]	; 1b40 <mat_logfunc+0x180>
    1a70:	add	r1, pc, r1
    1a74:	b	1a00 <mat_logfunc+0x40>
    1a78:	tst	r0, #8
    1a7c:	popeq	{r4, pc}
    1a80:	ldr	r2, [pc, #188]	; 1b44 <mat_logfunc+0x184>
    1a84:	ldr	r1, [pc, #188]	; 1b48 <mat_logfunc+0x188>
    1a88:	ldr	r4, [ip, r2]
    1a8c:	mov	r2, r3
    1a90:	add	r1, pc, r1
    1a94:	ldr	r0, [r4]
    1a98:	bl	15d4 <fprintf@plt>
    1a9c:	b	1a08 <mat_logfunc+0x48>
    1aa0:	cmp	r1, #0
    1aa4:	beq	1ac0 <mat_logfunc+0x100>
    1aa8:	ldr	r2, [pc, #128]	; 1b30 <mat_logfunc+0x170>
    1aac:	ldr	r1, [pc, #152]	; 1b4c <mat_logfunc+0x18c>
    1ab0:	ldr	r4, [ip, r2]
    1ab4:	mov	r2, r3
    1ab8:	add	r1, pc, r1
    1abc:	b	1a94 <mat_logfunc+0xd4>
    1ac0:	tst	r0, #1
    1ac4:	beq	1ae8 <mat_logfunc+0x128>
    1ac8:	ldr	r2, [pc, #96]	; 1b30 <mat_logfunc+0x170>
    1acc:	ldr	r1, [pc, #124]	; 1b50 <mat_logfunc+0x190>
    1ad0:	ldr	r4, [ip, r2]
    1ad4:	mov	r2, r3
    1ad8:	add	r1, pc, r1
    1adc:	ldr	r0, [r4]
    1ae0:	bl	15d4 <fprintf@plt>
    1ae4:	b	1a34 <mat_logfunc+0x74>
    1ae8:	tst	r0, #4
    1aec:	beq	1b08 <mat_logfunc+0x148>
    1af0:	ldr	r2, [pc, #56]	; 1b30 <mat_logfunc+0x170>
    1af4:	ldr	r1, [pc, #88]	; 1b54 <mat_logfunc+0x194>
    1af8:	ldr	r4, [ip, r2]
    1afc:	mov	r2, r3
    1b00:	add	r1, pc, r1
    1b04:	b	1a94 <mat_logfunc+0xd4>
    1b08:	tst	r0, #16
    1b0c:	beq	1a78 <mat_logfunc+0xb8>
    1b10:	ldr	r2, [pc, #24]	; 1b30 <mat_logfunc+0x170>
    1b14:	ldr	r1, [pc, #60]	; 1b58 <mat_logfunc+0x198>
    1b18:	ldr	r4, [ip, r2]
    1b1c:	mov	r2, r3
    1b20:	add	r1, pc, r1
    1b24:	b	1a94 <mat_logfunc+0xd4>
    1b28:	.word	0x0004e7e4
    1b2c:	.word	0x0004e61c
    1b30:	.word	0x000000fc
    1b34:	.word	0x0003cece
    1b38:	.word	0x0003ce9e
    1b3c:	.word	0x0003ce82
    1b40:	.word	0x0003ce72
    1b44:	.word	0x00000104
    1b48:	.word	0x0003ce78
    1b4c:	.word	0x0003ce36
    1b50:	.word	0x0003ce16
    1b54:	.word	0x0003cdf8
    1b58:	.word	0x0003cde2

00001b5c <strdup_vprintf>:
    1b5c:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    1b60:	mov	r3, r1
    1b64:	mov	r4, r1
    1b68:	mov	r2, r0
    1b6c:	mov	r5, r0
    1b70:	str	r1, [sp, #4]
    1b74:	mov	r1, #0
    1b78:	mov	r0, r1
    1b7c:	bl	1664 <vsnprintf@plt>
    1b80:	add	r7, r0, #1
    1b84:	add	r0, r0, #2
    1b88:	bl	1544 <malloc@plt>
    1b8c:	subs	r6, r0, #0
    1b90:	beq	1ba4 <strdup_vprintf+0x48>
    1b94:	mov	r3, r4
    1b98:	mov	r2, r5
    1b9c:	mov	r1, r7
    1ba0:	bl	1664 <vsnprintf@plt>
    1ba4:	mov	r0, r6
    1ba8:	add	sp, sp, #12
    1bac:	pop	{r4, r5, r6, r7, pc}

00001bb0 <mat_log>:
    1bb0:	push	{r4, r5, r6, lr}
    1bb4:	ldr	r6, [pc, #60]	; 1bf8 <mat_log+0x48>
    1bb8:	add	r6, pc, r6
    1bbc:	ldr	r3, [r6, #4]
    1bc0:	cmp	r3, #0
    1bc4:	popeq	{r4, r5, r6, pc}
    1bc8:	mov	r4, r0
    1bcc:	mov	r0, r1
    1bd0:	mov	r1, r2
    1bd4:	bl	1b5c <strdup_vprintf>
    1bd8:	mov	r5, r0
    1bdc:	mov	r1, r0
    1be0:	ldr	r3, [r6, #4]
    1be4:	mov	r0, r4
    1be8:	blx	r3
    1bec:	mov	r0, r5
    1bf0:	pop	{r4, r5, r6, lr}
    1bf4:	b	1478 <free@plt>
    1bf8:	.word	0x0004e600

00001bfc <strdup_printf>:
    1bfc:	push	{r0, r1, r2, r3}
    1c00:	push	{r0, r1, r2, lr}
    1c04:	add	r1, sp, #20
    1c08:	ldr	r0, [sp, #16]
    1c0c:	str	r1, [sp, #4]
    1c10:	bl	1b5c <strdup_vprintf>
    1c14:	add	sp, sp, #12
    1c18:	pop	{lr}		; (ldr lr, [sp], #4)
    1c1c:	add	sp, sp, #16
    1c20:	bx	lr

00001c24 <Mat_SetVerbose>:
    1c24:	ldr	r3, [pc, #12]	; 1c38 <Mat_SetVerbose+0x14>
    1c28:	add	r3, pc, r3
    1c2c:	strd	r0, [r3, #8]
    1c30:	mov	r0, #0
    1c34:	bx	lr
    1c38:	.word	0x0004e590

00001c3c <Mat_SetDebug>:
    1c3c:	ldr	r3, [pc, #12]	; 1c50 <Mat_SetDebug+0x14>
    1c40:	add	r3, pc, r3
    1c44:	str	r0, [r3, #16]
    1c48:	mov	r0, #0
    1c4c:	bx	lr
    1c50:	.word	0x0004e578

00001c54 <Mat_Message>:
    1c54:	push	{r0, r1, r2, r3}
    1c58:	ldr	r3, [pc, #68]	; 1ca4 <Mat_Message+0x50>
    1c5c:	push	{r0, r1, r2, lr}
    1c60:	add	r3, pc, r3
    1c64:	ldr	r2, [r3, #12]
    1c68:	cmp	r2, #0
    1c6c:	bne	1c90 <Mat_Message+0x3c>
    1c70:	ldr	r3, [r3, #4]
    1c74:	cmp	r3, #0
    1c78:	beq	1c90 <Mat_Message+0x3c>
    1c7c:	add	r2, sp, #20
    1c80:	mov	r0, #8
    1c84:	ldr	r1, [sp, #16]
    1c88:	str	r2, [sp, #4]
    1c8c:	bl	1bb0 <mat_log>
    1c90:	mov	r0, #0
    1c94:	add	sp, sp, #12
    1c98:	pop	{lr}		; (ldr lr, [sp], #4)
    1c9c:	add	sp, sp, #16
    1ca0:	bx	lr
    1ca4:	.word	0x0004e558

00001ca8 <Mat_DebugMessage>:
    1ca8:	push	{r1, r2, r3}
    1cac:	ldr	r3, [pc, #68]	; 1cf8 <Mat_DebugMessage+0x50>
    1cb0:	push	{r0, r1, lr}
    1cb4:	add	r3, pc, r3
    1cb8:	ldr	r2, [r3, #12]
    1cbc:	cmp	r2, #0
    1cc0:	bne	1ce4 <Mat_DebugMessage+0x3c>
    1cc4:	ldr	r3, [r3, #16]
    1cc8:	cmp	r3, r0
    1ccc:	blt	1ce4 <Mat_DebugMessage+0x3c>
    1cd0:	add	r2, sp, #16
    1cd4:	mov	r0, #16
    1cd8:	ldr	r1, [sp, #12]
    1cdc:	str	r2, [sp, #4]
    1ce0:	bl	1bb0 <mat_log>
    1ce4:	mov	r0, #0
    1ce8:	add	sp, sp, #8
    1cec:	pop	{lr}		; (ldr lr, [sp], #4)
    1cf0:	add	sp, sp, #12
    1cf4:	bx	lr
    1cf8:	.word	0x0004e504

00001cfc <Mat_VerbMessage>:
    1cfc:	push	{r1, r2, r3}
    1d00:	ldr	r3, [pc, #68]	; 1d4c <Mat_VerbMessage+0x50>
    1d04:	push	{r0, r1, lr}
    1d08:	add	r3, pc, r3
    1d0c:	ldr	r2, [r3, #12]
    1d10:	cmp	r2, #0
    1d14:	bne	1d38 <Mat_VerbMessage+0x3c>
    1d18:	ldr	r3, [r3, #8]
    1d1c:	cmp	r3, r0
    1d20:	blt	1d38 <Mat_VerbMessage+0x3c>
    1d24:	add	r2, sp, #16
    1d28:	mov	r0, #8
    1d2c:	ldr	r1, [sp, #12]
    1d30:	str	r2, [sp, #4]
    1d34:	bl	1bb0 <mat_log>
    1d38:	mov	r0, #0
    1d3c:	add	sp, sp, #8
    1d40:	pop	{lr}		; (ldr lr, [sp], #4)
    1d44:	add	sp, sp, #12
    1d48:	bx	lr
    1d4c:	.word	0x0004e4b0

00001d50 <Mat_Critical>:
    1d50:	push	{r0, r1, r2, r3}
    1d54:	push	{r0, r1, r2, lr}
    1d58:	add	r2, sp, #20
    1d5c:	mov	r0, #2
    1d60:	ldr	r1, [sp, #16]
    1d64:	str	r2, [sp, #4]
    1d68:	bl	1bb0 <mat_log>
    1d6c:	add	sp, sp, #12
    1d70:	pop	{lr}		; (ldr lr, [sp], #4)
    1d74:	add	sp, sp, #16
    1d78:	bx	lr

00001d7c <Mat_Error>:
    1d7c:	push	{r0, r1, r2, r3}
    1d80:	push	{r0, r1, r2, lr}
    1d84:	add	r2, sp, #20
    1d88:	mov	r0, #1
    1d8c:	ldr	r1, [sp, #16]
    1d90:	str	r2, [sp, #4]
    1d94:	bl	1bb0 <mat_log>
    1d98:	bl	16a0 <abort@plt>

00001d9c <Mat_Help>:
    1d9c:	push	{r4, lr}
    1da0:	sub	r4, r0, #4
    1da4:	ldr	r0, [r4, #4]!
    1da8:	cmp	r0, #0
    1dac:	bne	1db4 <Mat_Help+0x18>
    1db0:	bl	1574 <exit@plt>
    1db4:	bl	1538 <puts@plt>
    1db8:	b	1da4 <Mat_Help+0x8>

00001dbc <Mat_LogClose>:
    1dbc:	ldr	r3, [pc, #16]	; 1dd4 <Mat_LogClose+0x18>
    1dc0:	mov	r2, #0
    1dc4:	mov	r0, #1
    1dc8:	add	r3, pc, r3
    1dcc:	str	r2, [r3, #4]
    1dd0:	bx	lr
    1dd4:	.word	0x0004e3f0

00001dd8 <Mat_LogInit>:
    1dd8:	ldr	r3, [pc, #28]	; 1dfc <Mat_LogInit+0x24>
    1ddc:	mov	r0, #0
    1de0:	ldr	r2, [pc, #24]	; 1e00 <Mat_LogInit+0x28>
    1de4:	add	r3, pc, r3
    1de8:	add	r2, pc, r2
    1dec:	str	r2, [r3, #4]
    1df0:	str	r0, [r3, #8]
    1df4:	str	r0, [r3, #12]
    1df8:	bx	lr
    1dfc:	.word	0x0004e3d4
    1e00:	.word	0xfffffbd0

00001e04 <Mat_LogInitFunc>:
    1e04:	ldr	r3, [pc, #20]	; 1e20 <Mat_LogInitFunc+0x1c>
    1e08:	add	r3, pc, r3
    1e0c:	strd	r0, [r3]
    1e10:	mov	r0, #0
    1e14:	str	r0, [r3, #8]
    1e18:	str	r0, [r3, #12]
    1e1c:	bx	lr
    1e20:	.word	0x0004e3b0

00001e24 <Mat_Warning>:
    1e24:	push	{r0, r1, r2, r3}
    1e28:	push	{r0, r1, r2, lr}
    1e2c:	add	r2, sp, #20
    1e30:	mov	r0, #4
    1e34:	ldr	r1, [sp, #16]
    1e38:	str	r2, [sp, #4]
    1e3c:	bl	1bb0 <mat_log>
    1e40:	add	sp, sp, #12
    1e44:	pop	{lr}		; (ldr lr, [sp], #4)
    1e48:	add	sp, sp, #16
    1e4c:	bx	lr

00001e50 <Mat_SizeOf>:
    1e50:	sub	r0, r0, #1
    1e54:	cmp	r0, #17
    1e58:	bhi	1e6c <Mat_SizeOf+0x1c>
    1e5c:	ldr	r3, [pc, #16]	; 1e74 <Mat_SizeOf+0x24>
    1e60:	add	r3, pc, r3
    1e64:	ldrb	r0, [r3, r0]
    1e68:	bx	lr
    1e6c:	mov	r0, #0
    1e70:	bx	lr
    1e74:	.word	0x0003ca58

00001e78 <InflateSkip>:
    1e78:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1e7c:	subs	r8, r2, #0
    1e80:	sub	sp, sp, #1024	; 0x400
    1e84:	sub	sp, sp, #4
    1e88:	movle	r6, #0
    1e8c:	ble	1f20 <InflateSkip+0xa8>
    1e90:	cmp	r8, #512	; 0x200
    1e94:	mov	r4, r1
    1e98:	ldr	r3, [r1, #4]
    1e9c:	movlt	r5, r8
    1ea0:	movge	r5, #512	; 0x200
    1ea4:	mov	r9, r0
    1ea8:	cmp	r3, #0
    1eac:	movne	r6, #0
    1eb0:	bne	1ed8 <InflateSkip+0x60>
    1eb4:	mov	r0, sp
    1eb8:	mov	r2, r5
    1ebc:	ldr	r3, [r9]
    1ec0:	mov	r1, #1
    1ec4:	str	r0, [r4]
    1ec8:	bl	1520 <fread@plt>
    1ecc:	ldr	r6, [r4, #4]
    1ed0:	add	r6, r0, r6
    1ed4:	str	r6, [r4, #4]
    1ed8:	add	sl, sp, #512	; 0x200
    1edc:	mov	r1, #3
    1ee0:	mov	r0, r4
    1ee4:	str	sl, [r4, #12]
    1ee8:	str	r5, [r4, #16]
    1eec:	bl	1460 <inflate@plt>
    1ef0:	cmp	r0, #1
    1ef4:	mov	r7, r0
    1ef8:	beq	1f20 <InflateSkip+0xa8>
    1efc:	cmp	r0, #0
    1f00:	beq	1f30 <InflateSkip+0xb8>
    1f04:	cmp	r0, #2
    1f08:	mvneq	r0, #2
    1f0c:	bl	14f0 <zError@plt>
    1f10:	mov	r1, r0
    1f14:	ldr	r0, [pc, #268]	; 2028 <InflateSkip+0x1b0>
    1f18:	add	r0, pc, r0
    1f1c:	bl	161c <Mat_Critical@plt>
    1f20:	mov	r0, r6
    1f24:	add	sp, sp, #1024	; 0x400
    1f28:	add	sp, sp, #4
    1f2c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1f30:	ldr	r3, [r4, #16]
    1f34:	cmp	r3, #0
    1f38:	bne	1f58 <InflateSkip+0xe0>
    1f3c:	sub	r3, r8, r5
    1f40:	mov	r7, r5
    1f44:	str	sl, [r4, #12]
    1f48:	cmp	r3, #512	; 0x200
    1f4c:	movge	r3, #512	; 0x200
    1f50:	mov	r5, r3
    1f54:	str	r3, [r4, #16]
    1f58:	mov	fp, sp
    1f5c:	cmp	r7, r8
    1f60:	ldr	r3, [r4, #4]
    1f64:	bge	1fd0 <InflateSkip+0x158>
    1f68:	cmp	r3, #0
    1f6c:	bne	1f98 <InflateSkip+0x120>
    1f70:	mov	r2, r5
    1f74:	mov	r1, #1
    1f78:	ldr	r3, [r9]
    1f7c:	mov	r0, fp
    1f80:	str	fp, [r4]
    1f84:	bl	1520 <fread@plt>
    1f88:	ldr	r3, [r4, #4]
    1f8c:	add	r0, r0, r3
    1f90:	add	r6, r6, r0
    1f94:	str	r0, [r4, #4]
    1f98:	mov	r1, #3
    1f9c:	mov	r0, r4
    1fa0:	bl	1460 <inflate@plt>
    1fa4:	cmp	r0, #1
    1fa8:	beq	1fd0 <InflateSkip+0x158>
    1fac:	cmp	r0, #0
    1fb0:	beq	2000 <InflateSkip+0x188>
    1fb4:	cmp	r0, #2
    1fb8:	mvneq	r0, #2
    1fbc:	bl	14f0 <zError@plt>
    1fc0:	mov	r1, r0
    1fc4:	ldr	r0, [pc, #96]	; 202c <InflateSkip+0x1b4>
    1fc8:	add	r0, pc, r0
    1fcc:	bl	161c <Mat_Critical@plt>
    1fd0:	ldr	r1, [r4, #4]
    1fd4:	cmp	r1, #0
    1fd8:	beq	1f20 <InflateSkip+0xa8>
    1fdc:	mov	r2, #1
    1fe0:	rsb	r1, r1, #0
    1fe4:	ldr	r0, [r9]
    1fe8:	bl	1694 <fseek@plt>
    1fec:	ldr	r3, [r4, #4]
    1ff0:	sub	r6, r6, r3
    1ff4:	mov	r3, #0
    1ff8:	str	r3, [r4, #4]
    1ffc:	b	1f20 <InflateSkip+0xa8>
    2000:	ldr	r3, [r4, #16]
    2004:	cmp	r3, #0
    2008:	bne	1f5c <InflateSkip+0xe4>
    200c:	add	r7, r7, r5
    2010:	str	sl, [r4, #12]
    2014:	sub	r5, r8, r7
    2018:	cmp	r5, #512	; 0x200
    201c:	movge	r5, #512	; 0x200
    2020:	str	r5, [r4, #16]
    2024:	b	1f5c <InflateSkip+0xe4>
    2028:	.word	0x0003c9f4
    202c:	.word	0x0003c944

00002030 <InflateSkip2>:
    2030:	ldr	r3, [r1, #52]	; 0x34
    2034:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    2038:	mov	fp, r2
    203c:	sub	sp, sp, #68	; 0x44
    2040:	mov	r7, r0
    2044:	mov	r4, r1
    2048:	ldr	r3, [r3, #12]
    204c:	ldr	r2, [r3, #4]
    2050:	cmp	r2, #0
    2054:	movne	r5, #0
    2058:	bne	2078 <InflateSkip2+0x48>
    205c:	mov	r2, #1
    2060:	mov	r0, sp
    2064:	mov	r1, r2
    2068:	stm	r3, {r0, r2}
    206c:	ldr	r3, [r7]
    2070:	bl	1520 <fread@plt>
    2074:	mov	r5, r0
    2078:	ldr	r3, [r4, #52]	; 0x34
    207c:	mov	r9, #1
    2080:	add	r8, sp, #32
    2084:	mov	r1, #0
    2088:	ldr	r0, [r3, #12]
    208c:	strd	r8, [r0, #12]
    2090:	bl	1460 <inflate@plt>
    2094:	subs	r6, r0, #0
    2098:	beq	20d0 <InflateSkip2+0xa0>
    209c:	cmp	r6, #2
    20a0:	ldr	r4, [r4, #36]	; 0x24
    20a4:	movne	r0, r6
    20a8:	mvneq	r0, #2
    20ac:	bl	14f0 <zError@plt>
    20b0:	mov	r2, r0
    20b4:	ldr	r0, [pc, #248]	; 21b4 <InflateSkip2+0x184>
    20b8:	mov	r1, r4
    20bc:	add	r0, pc, r0
    20c0:	bl	161c <Mat_Critical@plt>
    20c4:	mov	r0, r5
    20c8:	add	sp, sp, #68	; 0x44
    20cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    20d0:	ldr	r3, [r4, #52]	; 0x34
    20d4:	mov	sl, sp
    20d8:	ldr	r3, [r3, #12]
    20dc:	ldr	r2, [r3, #16]
    20e0:	cmp	r2, #0
    20e4:	strdeq	r8, [r3, #12]
    20e8:	mov	r9, #1
    20ec:	ldr	r3, [r4, #52]	; 0x34
    20f0:	cmp	r6, fp
    20f4:	ldr	r3, [r3, #12]
    20f8:	ldr	r1, [r3, #4]
    20fc:	blt	2134 <InflateSkip2+0x104>
    2100:	cmp	r1, #0
    2104:	beq	20c4 <InflateSkip2+0x94>
    2108:	mov	r2, #1
    210c:	rsb	r1, r1, #0
    2110:	ldr	r0, [r7]
    2114:	bl	1694 <fseek@plt>
    2118:	ldr	r3, [r4, #52]	; 0x34
    211c:	ldr	r3, [r3, #12]
    2120:	ldr	r2, [r3, #4]
    2124:	sub	r5, r5, r2
    2128:	mov	r2, #0
    212c:	str	r2, [r3, #4]
    2130:	b	20c4 <InflateSkip2+0x94>
    2134:	cmp	r1, #0
    2138:	bne	2160 <InflateSkip2+0x130>
    213c:	mov	r2, #1
    2140:	mov	r0, sl
    2144:	str	sl, [r3]
    2148:	mov	r1, r2
    214c:	str	r9, [r3, #4]
    2150:	add	r6, r6, #1
    2154:	ldr	r3, [r7]
    2158:	bl	1520 <fread@plt>
    215c:	add	r5, r5, r0
    2160:	ldr	r3, [r4, #52]	; 0x34
    2164:	mov	r1, #0
    2168:	ldr	r0, [r3, #12]
    216c:	bl	1460 <inflate@plt>
    2170:	cmp	r0, #0
    2174:	beq	219c <InflateSkip2+0x16c>
    2178:	cmp	r0, #2
    217c:	ldr	r4, [r4, #36]	; 0x24
    2180:	mvneq	r0, #2
    2184:	bl	14f0 <zError@plt>
    2188:	mov	r2, r0
    218c:	ldr	r0, [pc, #36]	; 21b8 <InflateSkip2+0x188>
    2190:	mov	r1, r4
    2194:	add	r0, pc, r0
    2198:	b	20c0 <InflateSkip2+0x90>
    219c:	ldr	r3, [r4, #52]	; 0x34
    21a0:	ldr	r3, [r3, #12]
    21a4:	ldr	r2, [r3, #16]
    21a8:	cmp	r2, #0
    21ac:	strdeq	r8, [r3, #12]
    21b0:	b	20ec <InflateSkip2+0xbc>
    21b4:	.word	0x0003c871
    21b8:	.word	0x0003c799

000021bc <InflateSkipData>:
    21bc:	cmp	r3, #0
    21c0:	movgt	ip, #0
    21c4:	movle	ip, #1
    21c8:	cmp	r1, #0
    21cc:	moveq	ip, #1
    21d0:	cmp	r0, #0
    21d4:	moveq	ip, #1
    21d8:	cmp	ip, #0
    21dc:	bne	2258 <InflateSkipData+0x9c>
    21e0:	sub	r2, r2, #1
    21e4:	cmp	r2, #12
    21e8:	addls	pc, pc, r2, lsl #2
    21ec:	b	2258 <InflateSkipData+0x9c>
    21f0:	b	2248 <InflateSkipData+0x8c>
    21f4:	b	2248 <InflateSkipData+0x8c>
    21f8:	b	2240 <InflateSkipData+0x84>
    21fc:	b	2240 <InflateSkipData+0x84>
    2200:	b	2224 <InflateSkipData+0x68>
    2204:	b	2224 <InflateSkipData+0x68>
    2208:	b	2224 <InflateSkipData+0x68>
    220c:	b	2258 <InflateSkipData+0x9c>
    2210:	b	2250 <InflateSkipData+0x94>
    2214:	b	2258 <InflateSkipData+0x9c>
    2218:	b	2258 <InflateSkipData+0x9c>
    221c:	b	2250 <InflateSkipData+0x94>
    2220:	b	2250 <InflateSkipData+0x94>
    2224:	mov	r2, #4
    2228:	push	{r4, lr}
    222c:	mul	r2, r3, r2
    2230:	mov	r4, r3
    2234:	bl	1e78 <InflateSkip>
    2238:	mov	r0, r4
    223c:	pop	{r4, pc}
    2240:	mov	r2, #2
    2244:	b	2228 <InflateSkipData+0x6c>
    2248:	mov	r2, #1
    224c:	b	2228 <InflateSkipData+0x6c>
    2250:	mov	r2, #8
    2254:	b	2228 <InflateSkipData+0x6c>
    2258:	mov	r0, #0
    225c:	bx	lr

00002260 <InflateVarTag>:
    2260:	push	{r4, r5, r6, r7, r8, r9, lr}
    2264:	subs	r4, r2, #0
    2268:	sub	sp, sp, #36	; 0x24
    226c:	beq	22fc <InflateVarTag+0x9c>
    2270:	mov	r7, r4
    2274:	mov	r5, r1
    2278:	ldr	r3, [r1, #52]	; 0x34
    227c:	mov	r6, r0
    2280:	ldr	r3, [r3, #12]
    2284:	ldr	r2, [r3, #4]
    2288:	cmp	r2, #0
    228c:	movne	r4, #0
    2290:	bne	22b0 <InflateVarTag+0x50>
    2294:	mov	r2, #1
    2298:	mov	r0, sp
    229c:	mov	r1, r2
    22a0:	stm	r3, {r0, r2}
    22a4:	ldr	r3, [r6]
    22a8:	bl	1520 <fread@plt>
    22ac:	mov	r4, r0
    22b0:	ldr	r3, [r5, #52]	; 0x34
    22b4:	mov	r1, #0
    22b8:	ldr	r0, [r3, #12]
    22bc:	mov	r3, #8
    22c0:	str	r7, [r0, #12]
    22c4:	str	r3, [r0, #16]
    22c8:	bl	1460 <inflate@plt>
    22cc:	cmp	r0, #0
    22d0:	moveq	r7, #1
    22d4:	moveq	r8, sp
    22d8:	moveq	r9, r7
    22dc:	beq	235c <InflateVarTag+0xfc>
    22e0:	cmp	r0, #2
    22e4:	mvneq	r0, #2
    22e8:	bl	14f0 <zError@plt>
    22ec:	mov	r1, r0
    22f0:	ldr	r0, [pc, #188]	; 23b4 <InflateVarTag+0x154>
    22f4:	add	r0, pc, r0
    22f8:	bl	161c <Mat_Critical@plt>
    22fc:	mov	r0, r4
    2300:	add	sp, sp, #36	; 0x24
    2304:	pop	{r4, r5, r6, r7, r8, r9, pc}
    2308:	mov	r2, #1
    230c:	mov	r0, r8
    2310:	strd	r8, [r3]
    2314:	mov	r1, r2
    2318:	ldr	r3, [r6]
    231c:	bl	1520 <fread@plt>
    2320:	ldr	r3, [r5, #52]	; 0x34
    2324:	mov	r7, r0
    2328:	add	r4, r4, r0
    232c:	mov	r1, #0
    2330:	ldr	r0, [r3, #12]
    2334:	bl	1460 <inflate@plt>
    2338:	cmp	r0, #0
    233c:	beq	235c <InflateVarTag+0xfc>
    2340:	cmp	r0, #2
    2344:	mvneq	r0, #2
    2348:	bl	14f0 <zError@plt>
    234c:	mov	r1, r0
    2350:	ldr	r0, [pc, #96]	; 23b8 <InflateVarTag+0x158>
    2354:	add	r0, pc, r0
    2358:	b	22f8 <InflateVarTag+0x98>
    235c:	ldr	r3, [r5, #52]	; 0x34
    2360:	ldr	r3, [r3, #12]
    2364:	ldr	r1, [r3, #4]
    2368:	ldr	r2, [r3, #16]
    236c:	cmp	r2, #0
    2370:	beq	2380 <InflateVarTag+0x120>
    2374:	cmp	r1, #0
    2378:	cmpeq	r7, #1
    237c:	beq	2308 <InflateVarTag+0xa8>
    2380:	cmp	r1, #0
    2384:	beq	22fc <InflateVarTag+0x9c>
    2388:	mov	r2, #1
    238c:	rsb	r1, r1, #0
    2390:	ldr	r0, [r6]
    2394:	bl	1694 <fseek@plt>
    2398:	ldr	r3, [r5, #52]	; 0x34
    239c:	ldr	r3, [r3, #12]
    23a0:	ldr	r2, [r3, #4]
    23a4:	sub	r4, r4, r2
    23a8:	mov	r2, #0
    23ac:	str	r2, [r3, #4]
    23b0:	b	22fc <InflateVarTag+0x9c>
    23b4:	.word	0x0003c660
    23b8:	.word	0x0003c600

000023bc <InflateArrayFlags>:
    23bc:	push	{r4, r5, r6, r7, r8, r9, lr}
    23c0:	subs	r4, r2, #0
    23c4:	sub	sp, sp, #36	; 0x24
    23c8:	beq	2458 <InflateArrayFlags+0x9c>
    23cc:	mov	r7, r4
    23d0:	mov	r5, r1
    23d4:	ldr	r3, [r1, #52]	; 0x34
    23d8:	mov	r6, r0
    23dc:	ldr	r3, [r3, #12]
    23e0:	ldr	r2, [r3, #4]
    23e4:	cmp	r2, #0
    23e8:	movne	r4, #0
    23ec:	bne	240c <InflateArrayFlags+0x50>
    23f0:	mov	r2, #1
    23f4:	mov	r0, sp
    23f8:	mov	r1, r2
    23fc:	stm	r3, {r0, r2}
    2400:	ldr	r3, [r6]
    2404:	bl	1520 <fread@plt>
    2408:	mov	r4, r0
    240c:	ldr	r3, [r5, #52]	; 0x34
    2410:	mov	r1, #0
    2414:	ldr	r0, [r3, #12]
    2418:	mov	r3, #16
    241c:	str	r7, [r0, #12]
    2420:	str	r3, [r0, #16]
    2424:	bl	1460 <inflate@plt>
    2428:	cmp	r0, #0
    242c:	moveq	r7, #1
    2430:	moveq	r8, sp
    2434:	moveq	r9, r7
    2438:	beq	24b8 <InflateArrayFlags+0xfc>
    243c:	cmp	r0, #2
    2440:	mvneq	r0, #2
    2444:	bl	14f0 <zError@plt>
    2448:	mov	r1, r0
    244c:	ldr	r0, [pc, #188]	; 2510 <InflateArrayFlags+0x154>
    2450:	add	r0, pc, r0
    2454:	bl	161c <Mat_Critical@plt>
    2458:	mov	r0, r4
    245c:	add	sp, sp, #36	; 0x24
    2460:	pop	{r4, r5, r6, r7, r8, r9, pc}
    2464:	mov	r2, #1
    2468:	mov	r0, r8
    246c:	strd	r8, [r3]
    2470:	mov	r1, r2
    2474:	ldr	r3, [r6]
    2478:	bl	1520 <fread@plt>
    247c:	ldr	r3, [r5, #52]	; 0x34
    2480:	mov	r7, r0
    2484:	add	r4, r4, r0
    2488:	mov	r1, #0
    248c:	ldr	r0, [r3, #12]
    2490:	bl	1460 <inflate@plt>
    2494:	cmp	r0, #0
    2498:	beq	24b8 <InflateArrayFlags+0xfc>
    249c:	cmp	r0, #2
    24a0:	mvneq	r0, #2
    24a4:	bl	14f0 <zError@plt>
    24a8:	mov	r1, r0
    24ac:	ldr	r0, [pc, #96]	; 2514 <InflateArrayFlags+0x158>
    24b0:	add	r0, pc, r0
    24b4:	b	2454 <InflateArrayFlags+0x98>
    24b8:	ldr	r3, [r5, #52]	; 0x34
    24bc:	ldr	r3, [r3, #12]
    24c0:	ldr	r1, [r3, #4]
    24c4:	ldr	r2, [r3, #16]
    24c8:	cmp	r2, #0
    24cc:	beq	24dc <InflateArrayFlags+0x120>
    24d0:	cmp	r1, #0
    24d4:	cmpeq	r7, #1
    24d8:	beq	2464 <InflateArrayFlags+0xa8>
    24dc:	cmp	r1, #0
    24e0:	beq	2458 <InflateArrayFlags+0x9c>
    24e4:	mov	r2, #1
    24e8:	rsb	r1, r1, #0
    24ec:	ldr	r0, [r6]
    24f0:	bl	1694 <fseek@plt>
    24f4:	ldr	r3, [r5, #52]	; 0x34
    24f8:	ldr	r3, [r3, #12]
    24fc:	ldr	r2, [r3, #4]
    2500:	sub	r4, r4, r2
    2504:	mov	r2, #0
    2508:	str	r2, [r3, #4]
    250c:	b	2458 <InflateArrayFlags+0x9c>
    2510:	.word	0x0003c527
    2514:	.word	0x0003c4c7

00002518 <InflateRankDims>:
    2518:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    251c:	subs	r4, r2, #0
    2520:	sub	sp, sp, #52	; 0x34
    2524:	beq	2684 <InflateRankDims+0x16c>
    2528:	mov	sl, r3
    252c:	mov	r6, r4
    2530:	ldr	r3, [r1, #52]	; 0x34
    2534:	mov	r5, r1
    2538:	mov	r8, r0
    253c:	ldr	r3, [r3, #12]
    2540:	ldr	r2, [r3, #4]
    2544:	cmp	r2, #0
    2548:	movne	r4, #0
    254c:	bne	256c <InflateRankDims+0x54>
    2550:	mov	r2, #1
    2554:	add	r0, sp, #16
    2558:	mov	r1, r2
    255c:	stm	r3, {r0, r2}
    2560:	ldr	r3, [r8]
    2564:	bl	1520 <fread@plt>
    2568:	mov	r4, r0
    256c:	ldr	r3, [r5, #52]	; 0x34
    2570:	mov	r1, #0
    2574:	ldr	r0, [r3, #12]
    2578:	mov	r3, #8
    257c:	str	r6, [r0, #12]
    2580:	str	r3, [r0, #16]
    2584:	bl	1460 <inflate@plt>
    2588:	subs	r7, r0, #0
    258c:	moveq	r3, #1
    2590:	addeq	r9, sp, #16
    2594:	moveq	fp, r3
    2598:	beq	261c <InflateRankDims+0x104>
    259c:	cmp	r7, #2
    25a0:	movne	r0, r7
    25a4:	mvneq	r0, #2
    25a8:	bl	14f0 <zError@plt>
    25ac:	mov	r1, r0
    25b0:	ldr	r0, [pc, #608]	; 2818 <InflateRankDims+0x300>
    25b4:	add	r0, pc, r0
    25b8:	bl	161c <Mat_Critical@plt>
    25bc:	b	2684 <InflateRankDims+0x16c>
    25c0:	ldr	r3, [r8]
    25c4:	mov	r0, r9
    25c8:	stm	r2, {r9, fp}
    25cc:	mov	r2, #1
    25d0:	mov	r1, r2
    25d4:	bl	1520 <fread@plt>
    25d8:	ldr	r2, [r5, #52]	; 0x34
    25dc:	mov	r3, r0
    25e0:	add	r4, r4, r0
    25e4:	mov	r1, #0
    25e8:	str	r3, [sp, #4]
    25ec:	ldr	r0, [r2, #12]
    25f0:	bl	1460 <inflate@plt>
    25f4:	cmp	r0, #0
    25f8:	ldr	r3, [sp, #4]
    25fc:	beq	261c <InflateRankDims+0x104>
    2600:	cmp	r0, #2
    2604:	mvneq	r0, #2
    2608:	bl	14f0 <zError@plt>
    260c:	mov	r1, r0
    2610:	ldr	r0, [pc, #516]	; 281c <InflateRankDims+0x304>
    2614:	add	r0, pc, r0
    2618:	b	25b8 <InflateRankDims+0xa0>
    261c:	ldr	r2, [r5, #52]	; 0x34
    2620:	ldr	r2, [r2, #12]
    2624:	ldr	r1, [r2, #16]
    2628:	cmp	r1, #0
    262c:	beq	2640 <InflateRankDims+0x128>
    2630:	ldr	r1, [r2, #4]
    2634:	cmp	r1, #0
    2638:	cmpeq	r3, #1
    263c:	beq	25c0 <InflateRankDims+0xa8>
    2640:	ldr	r3, [r6]
    2644:	str	r3, [sp, #8]
    2648:	ldr	r3, [r6, #4]
    264c:	str	r3, [sp, #12]
    2650:	ldr	r3, [r8, #20]
    2654:	cmp	r3, #0
    2658:	beq	266c <InflateRankDims+0x154>
    265c:	add	r0, sp, #8
    2660:	bl	189c <Mat_int32Swap>
    2664:	add	r0, sp, #12
    2668:	bl	189c <Mat_int32Swap>
    266c:	ldrh	r3, [sp, #8]
    2670:	cmp	r3, #5
    2674:	beq	2690 <InflateRankDims+0x178>
    2678:	ldr	r0, [pc, #416]	; 2820 <InflateRankDims+0x308>
    267c:	add	r0, pc, r0
    2680:	bl	161c <Mat_Critical@plt>
    2684:	mov	r0, r4
    2688:	add	sp, sp, #52	; 0x34
    268c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    2690:	ldr	r2, [sp, #12]
    2694:	ands	r3, r2, #7
    2698:	beq	26ac <InflateRankDims+0x194>
    269c:	rsbs	r1, r2, #0
    26a0:	and	r1, r1, #7
    26a4:	rsbpl	r3, r1, #0
    26a8:	rsb	r7, r3, #8
    26ac:	ldr	r3, [r5, #52]	; 0x34
    26b0:	add	r7, r7, r2
    26b4:	ldr	r3, [r3, #12]
    26b8:	ldr	r2, [r3, #4]
    26bc:	cmp	r2, #0
    26c0:	bne	26e0 <InflateRankDims+0x1c8>
    26c4:	mov	r2, #1
    26c8:	add	r0, sp, #16
    26cc:	mov	r1, r2
    26d0:	stm	r3, {r0, r2}
    26d4:	ldr	r3, [r8]
    26d8:	bl	1520 <fread@plt>
    26dc:	add	r4, r4, r0
    26e0:	ldr	r3, [r5, #52]	; 0x34
    26e4:	ldr	r9, [r3, #12]
    26e8:	add	r3, r7, #2
    26ec:	cmp	sl, r3, lsl #2
    26f0:	addcs	r6, r6, #8
    26f4:	strcs	r6, [r9, #12]
    26f8:	str	r7, [r9, #16]
    26fc:	bcs	2730 <InflateRankDims+0x218>
    2700:	mov	r1, #4
    2704:	mov	r0, r7
    2708:	bl	140c <calloc@plt>
    270c:	ldr	r3, [sp, #88]	; 0x58
    2710:	cmp	r0, #0
    2714:	str	r0, [r3]
    2718:	strne	r0, [r9, #12]
    271c:	bne	2730 <InflateRankDims+0x218>
    2720:	str	r0, [r6, #4]
    2724:	ldr	r0, [pc, #248]	; 2824 <InflateRankDims+0x30c>
    2728:	add	r0, pc, r0
    272c:	b	2680 <InflateRankDims+0x168>
    2730:	mov	r0, r9
    2734:	mov	r1, #0
    2738:	bl	1460 <inflate@plt>
    273c:	cmp	r0, #0
    2740:	moveq	r6, #1
    2744:	addeq	r7, sp, #16
    2748:	moveq	r9, r6
    274c:	beq	27c0 <InflateRankDims+0x2a8>
    2750:	cmp	r0, #2
    2754:	mvneq	r0, #2
    2758:	bl	14f0 <zError@plt>
    275c:	mov	r1, r0
    2760:	ldr	r0, [pc, #192]	; 2828 <InflateRankDims+0x310>
    2764:	add	r0, pc, r0
    2768:	b	25b8 <InflateRankDims+0xa0>
    276c:	mov	r2, #1
    2770:	mov	r0, r7
    2774:	stm	r3, {r7, r9}
    2778:	mov	r1, r2
    277c:	ldr	r3, [r8]
    2780:	bl	1520 <fread@plt>
    2784:	ldr	r3, [r5, #52]	; 0x34
    2788:	mov	r6, r0
    278c:	add	r4, r4, r0
    2790:	mov	r1, #0
    2794:	ldr	r0, [r3, #12]
    2798:	bl	1460 <inflate@plt>
    279c:	cmp	r0, #0
    27a0:	beq	27c0 <InflateRankDims+0x2a8>
    27a4:	cmp	r0, #2
    27a8:	mvneq	r0, #2
    27ac:	bl	14f0 <zError@plt>
    27b0:	mov	r1, r0
    27b4:	ldr	r0, [pc, #112]	; 282c <InflateRankDims+0x314>
    27b8:	add	r0, pc, r0
    27bc:	b	25b8 <InflateRankDims+0xa0>
    27c0:	ldr	r3, [r5, #52]	; 0x34
    27c4:	ldr	r3, [r3, #12]
    27c8:	ldr	r1, [r3, #4]
    27cc:	ldr	r2, [r3, #16]
    27d0:	cmp	r2, #0
    27d4:	beq	27e4 <InflateRankDims+0x2cc>
    27d8:	cmp	r1, #0
    27dc:	cmpeq	r6, #1
    27e0:	beq	276c <InflateRankDims+0x254>
    27e4:	cmp	r1, #0
    27e8:	beq	2684 <InflateRankDims+0x16c>
    27ec:	mov	r2, #1
    27f0:	rsb	r1, r1, #0
    27f4:	ldr	r0, [r8]
    27f8:	bl	1694 <fseek@plt>
    27fc:	ldr	r3, [r5, #52]	; 0x34
    2800:	ldr	r3, [r3, #12]
    2804:	ldr	r2, [r3, #4]
    2808:	sub	r4, r4, r2
    280c:	mov	r2, #0
    2810:	str	r2, [r3, #4]
    2814:	b	2684 <InflateRankDims+0x16c>
    2818:	.word	0x0003c3ea
    281c:	.word	0x0003c38a
    2820:	.word	0x0003c347
    2824:	.word	0x0003c2d9
    2828:	.word	0x0003c23a
    282c:	.word	0x0003c1e6

00002830 <InflateVarNameTag>:
    2830:	push	{r4, r5, r6, r7, r8, r9, lr}
    2834:	subs	r4, r2, #0
    2838:	sub	sp, sp, #36	; 0x24
    283c:	beq	28cc <InflateVarNameTag+0x9c>
    2840:	mov	r7, r4
    2844:	mov	r5, r1
    2848:	ldr	r3, [r1, #52]	; 0x34
    284c:	mov	r6, r0
    2850:	ldr	r3, [r3, #12]
    2854:	ldr	r2, [r3, #4]
    2858:	cmp	r2, #0
    285c:	movne	r4, #0
    2860:	bne	2880 <InflateVarNameTag+0x50>
    2864:	mov	r2, #1
    2868:	mov	r0, sp
    286c:	mov	r1, r2
    2870:	stm	r3, {r0, r2}
    2874:	ldr	r3, [r6]
    2878:	bl	1520 <fread@plt>
    287c:	mov	r4, r0
    2880:	ldr	r3, [r5, #52]	; 0x34
    2884:	mov	r1, #0
    2888:	ldr	r0, [r3, #12]
    288c:	mov	r3, #8
    2890:	str	r7, [r0, #12]
    2894:	str	r3, [r0, #16]
    2898:	bl	1460 <inflate@plt>
    289c:	cmp	r0, #0
    28a0:	moveq	r7, #1
    28a4:	moveq	r8, sp
    28a8:	moveq	r9, r7
    28ac:	beq	292c <InflateVarNameTag+0xfc>
    28b0:	cmp	r0, #2
    28b4:	mvneq	r0, #2
    28b8:	bl	14f0 <zError@plt>
    28bc:	mov	r1, r0
    28c0:	ldr	r0, [pc, #188]	; 2984 <InflateVarNameTag+0x154>
    28c4:	add	r0, pc, r0
    28c8:	bl	161c <Mat_Critical@plt>
    28cc:	mov	r0, r4
    28d0:	add	sp, sp, #36	; 0x24
    28d4:	pop	{r4, r5, r6, r7, r8, r9, pc}
    28d8:	mov	r2, #1
    28dc:	mov	r0, r8
    28e0:	strd	r8, [r3]
    28e4:	mov	r1, r2
    28e8:	ldr	r3, [r6]
    28ec:	bl	1520 <fread@plt>
    28f0:	ldr	r3, [r5, #52]	; 0x34
    28f4:	mov	r7, r0
    28f8:	add	r4, r4, r0
    28fc:	mov	r1, #0
    2900:	ldr	r0, [r3, #12]
    2904:	bl	1460 <inflate@plt>
    2908:	cmp	r0, #0
    290c:	beq	292c <InflateVarNameTag+0xfc>
    2910:	cmp	r0, #2
    2914:	mvneq	r0, #2
    2918:	bl	14f0 <zError@plt>
    291c:	mov	r1, r0
    2920:	ldr	r0, [pc, #96]	; 2988 <InflateVarNameTag+0x158>
    2924:	add	r0, pc, r0
    2928:	b	28c8 <InflateVarNameTag+0x98>
    292c:	ldr	r3, [r5, #52]	; 0x34
    2930:	ldr	r3, [r3, #12]
    2934:	ldr	r1, [r3, #4]
    2938:	ldr	r2, [r3, #16]
    293c:	cmp	r2, #0
    2940:	beq	2950 <InflateVarNameTag+0x120>
    2944:	cmp	r1, #0
    2948:	cmpeq	r7, #1
    294c:	beq	28d8 <InflateVarNameTag+0xa8>
    2950:	cmp	r1, #0
    2954:	beq	28cc <InflateVarNameTag+0x9c>
    2958:	mov	r2, #1
    295c:	rsb	r1, r1, #0
    2960:	ldr	r0, [r6]
    2964:	bl	1694 <fseek@plt>
    2968:	ldr	r3, [r5, #52]	; 0x34
    296c:	ldr	r3, [r3, #12]
    2970:	ldr	r2, [r3, #4]
    2974:	sub	r4, r4, r2
    2978:	mov	r2, #0
    297c:	str	r2, [r3, #4]
    2980:	b	28cc <InflateVarNameTag+0x9c>
    2984:	.word	0x0003c15e
    2988:	.word	0x0003c0fe

0000298c <InflateVarName>:
    298c:	push	{r4, r5, r6, r7, r8, r9, lr}
    2990:	subs	r4, r2, #0
    2994:	sub	sp, sp, #36	; 0x24
    2998:	beq	2a28 <InflateVarName+0x9c>
    299c:	mov	r8, r3
    29a0:	mov	r7, r4
    29a4:	ldr	r3, [r1, #52]	; 0x34
    29a8:	mov	r5, r1
    29ac:	mov	r6, r0
    29b0:	ldr	r3, [r3, #12]
    29b4:	ldr	r2, [r3, #4]
    29b8:	cmp	r2, #0
    29bc:	movne	r4, #0
    29c0:	bne	29e0 <InflateVarName+0x54>
    29c4:	mov	r2, #1
    29c8:	mov	r0, sp
    29cc:	mov	r1, r2
    29d0:	stm	r3, {r0, r2}
    29d4:	ldr	r3, [r6]
    29d8:	bl	1520 <fread@plt>
    29dc:	mov	r4, r0
    29e0:	ldr	r3, [r5, #52]	; 0x34
    29e4:	mov	r1, #0
    29e8:	ldr	r0, [r3, #12]
    29ec:	str	r7, [r0, #12]
    29f0:	str	r8, [r0, #16]
    29f4:	bl	1460 <inflate@plt>
    29f8:	cmp	r0, #0
    29fc:	moveq	r7, #1
    2a00:	moveq	r8, sp
    2a04:	moveq	r9, r7
    2a08:	beq	2a88 <InflateVarName+0xfc>
    2a0c:	cmp	r0, #2
    2a10:	mvneq	r0, #2
    2a14:	bl	14f0 <zError@plt>
    2a18:	mov	r1, r0
    2a1c:	ldr	r0, [pc, #188]	; 2ae0 <InflateVarName+0x154>
    2a20:	add	r0, pc, r0
    2a24:	bl	161c <Mat_Critical@plt>
    2a28:	mov	r0, r4
    2a2c:	add	sp, sp, #36	; 0x24
    2a30:	pop	{r4, r5, r6, r7, r8, r9, pc}
    2a34:	mov	r2, #1
    2a38:	mov	r0, r8
    2a3c:	strd	r8, [r3]
    2a40:	mov	r1, r2
    2a44:	ldr	r3, [r6]
    2a48:	bl	1520 <fread@plt>
    2a4c:	ldr	r3, [r5, #52]	; 0x34
    2a50:	mov	r7, r0
    2a54:	add	r4, r4, r0
    2a58:	mov	r1, #0
    2a5c:	ldr	r0, [r3, #12]
    2a60:	bl	1460 <inflate@plt>
    2a64:	cmp	r0, #0
    2a68:	beq	2a88 <InflateVarName+0xfc>
    2a6c:	cmp	r0, #2
    2a70:	mvneq	r0, #2
    2a74:	bl	14f0 <zError@plt>
    2a78:	mov	r1, r0
    2a7c:	ldr	r0, [pc, #96]	; 2ae4 <InflateVarName+0x158>
    2a80:	add	r0, pc, r0
    2a84:	b	2a24 <InflateVarName+0x98>
    2a88:	ldr	r3, [r5, #52]	; 0x34
    2a8c:	ldr	r3, [r3, #12]
    2a90:	ldr	r1, [r3, #4]
    2a94:	ldr	r2, [r3, #16]
    2a98:	cmp	r2, #0
    2a9c:	beq	2aac <InflateVarName+0x120>
    2aa0:	cmp	r1, #0
    2aa4:	cmpeq	r7, #1
    2aa8:	beq	2a34 <InflateVarName+0xa8>
    2aac:	cmp	r1, #0
    2ab0:	beq	2a28 <InflateVarName+0x9c>
    2ab4:	mov	r2, #1
    2ab8:	rsb	r1, r1, #0
    2abc:	ldr	r0, [r6]
    2ac0:	bl	1694 <fseek@plt>
    2ac4:	ldr	r3, [r5, #52]	; 0x34
    2ac8:	ldr	r3, [r3, #12]
    2acc:	ldr	r2, [r3, #4]
    2ad0:	sub	r4, r4, r2
    2ad4:	mov	r2, #0
    2ad8:	str	r2, [r3, #4]
    2adc:	b	2a28 <InflateVarName+0x9c>
    2ae0:	.word	0x0003c029
    2ae4:	.word	0x0003bfc9

00002ae8 <InflateDataTag>:
    2ae8:	push	{r4, r5, r6, r7, r8, r9, lr}
    2aec:	subs	r5, r2, #0
    2af0:	sub	sp, sp, #36	; 0x24
    2af4:	beq	2b94 <InflateDataTag+0xac>
    2af8:	mov	r7, r5
    2afc:	mov	r4, r1
    2b00:	ldr	r3, [r1, #52]	; 0x34
    2b04:	mov	r6, r0
    2b08:	ldr	r3, [r3, #12]
    2b0c:	ldr	r2, [r3, #4]
    2b10:	cmp	r2, #0
    2b14:	movne	r5, #0
    2b18:	bne	2b38 <InflateDataTag+0x50>
    2b1c:	mov	r2, #1
    2b20:	mov	r0, sp
    2b24:	mov	r1, r2
    2b28:	stm	r3, {r0, r2}
    2b2c:	ldr	r3, [r6]
    2b30:	bl	1520 <fread@plt>
    2b34:	mov	r5, r0
    2b38:	ldr	r3, [r4, #52]	; 0x34
    2b3c:	mov	r1, #0
    2b40:	ldr	r0, [r3, #12]
    2b44:	mov	r3, #8
    2b48:	str	r7, [r0, #12]
    2b4c:	str	r3, [r0, #16]
    2b50:	bl	1460 <inflate@plt>
    2b54:	cmp	r0, #1
    2b58:	beq	2b94 <InflateDataTag+0xac>
    2b5c:	cmp	r0, #0
    2b60:	moveq	r7, #1
    2b64:	moveq	r8, sp
    2b68:	moveq	r9, r7
    2b6c:	beq	2c04 <InflateDataTag+0x11c>
    2b70:	cmp	r0, #2
    2b74:	ldr	r4, [r4, #36]	; 0x24
    2b78:	mvneq	r0, #2
    2b7c:	bl	14f0 <zError@plt>
    2b80:	mov	r2, r0
    2b84:	ldr	r0, [pc, #220]	; 2c68 <InflateDataTag+0x180>
    2b88:	mov	r1, r4
    2b8c:	add	r0, pc, r0
    2b90:	bl	161c <Mat_Critical@plt>
    2b94:	mov	r0, r5
    2b98:	add	sp, sp, #36	; 0x24
    2b9c:	pop	{r4, r5, r6, r7, r8, r9, pc}
    2ba0:	mov	r2, #1
    2ba4:	mov	r0, r8
    2ba8:	strd	r8, [r3]
    2bac:	mov	r1, r2
    2bb0:	ldr	r3, [r6]
    2bb4:	bl	1520 <fread@plt>
    2bb8:	ldr	r3, [r4, #52]	; 0x34
    2bbc:	mov	r7, r0
    2bc0:	add	r5, r5, r0
    2bc4:	mov	r1, #0
    2bc8:	ldr	r0, [r3, #12]
    2bcc:	bl	1460 <inflate@plt>
    2bd0:	cmp	r0, #1
    2bd4:	beq	2c28 <InflateDataTag+0x140>
    2bd8:	cmp	r0, #0
    2bdc:	beq	2c04 <InflateDataTag+0x11c>
    2be0:	cmp	r0, #2
    2be4:	ldr	r4, [r4, #36]	; 0x24
    2be8:	mvneq	r0, #2
    2bec:	bl	14f0 <zError@plt>
    2bf0:	mov	r2, r0
    2bf4:	ldr	r0, [pc, #112]	; 2c6c <InflateDataTag+0x184>
    2bf8:	mov	r1, r4
    2bfc:	add	r0, pc, r0
    2c00:	b	2b90 <InflateDataTag+0xa8>
    2c04:	ldr	r3, [r4, #52]	; 0x34
    2c08:	ldr	r3, [r3, #12]
    2c0c:	ldr	r2, [r3, #4]
    2c10:	ldr	r1, [r3, #16]
    2c14:	cmp	r1, #0
    2c18:	beq	2c28 <InflateDataTag+0x140>
    2c1c:	cmp	r7, #1
    2c20:	cmpeq	r2, #0
    2c24:	beq	2ba0 <InflateDataTag+0xb8>
    2c28:	ldr	r3, [r4, #52]	; 0x34
    2c2c:	ldr	r3, [r3, #12]
    2c30:	ldr	r1, [r3, #4]
    2c34:	cmp	r1, #0
    2c38:	beq	2b94 <InflateDataTag+0xac>
    2c3c:	mov	r2, #1
    2c40:	rsb	r1, r1, #0
    2c44:	ldr	r0, [r6]
    2c48:	bl	1694 <fseek@plt>
    2c4c:	ldr	r3, [r4, #52]	; 0x34
    2c50:	ldr	r3, [r3, #12]
    2c54:	ldr	r2, [r3, #4]
    2c58:	sub	r5, r5, r2
    2c5c:	mov	r2, #0
    2c60:	str	r2, [r3, #4]
    2c64:	b	2b94 <InflateDataTag+0xac>
    2c68:	.word	0x0003bee1
    2c6c:	.word	0x0003be71

00002c70 <InflateDataType>:
    2c70:	push	{r4, r5, r6, r7, r8, r9, lr}
    2c74:	subs	r5, r2, #0
    2c78:	sub	sp, sp, #36	; 0x24
    2c7c:	beq	2d00 <InflateDataType+0x90>
    2c80:	mov	r7, r5
    2c84:	mov	r4, r1
    2c88:	ldr	r3, [r1, #4]
    2c8c:	mov	r6, r0
    2c90:	cmp	r3, #0
    2c94:	movne	r5, #0
    2c98:	bne	2cb8 <InflateDataType+0x48>
    2c9c:	mov	r2, #1
    2ca0:	mov	r0, sp
    2ca4:	ldr	r3, [r6]
    2ca8:	mov	r1, r2
    2cac:	stm	r4, {r0, r2}
    2cb0:	bl	1520 <fread@plt>
    2cb4:	mov	r5, r0
    2cb8:	mov	r3, #4
    2cbc:	mov	r1, #0
    2cc0:	str	r7, [r4, #12]
    2cc4:	mov	r0, r4
    2cc8:	str	r3, [r4, #16]
    2ccc:	bl	1460 <inflate@plt>
    2cd0:	cmp	r0, #0
    2cd4:	moveq	r7, #1
    2cd8:	moveq	r8, sp
    2cdc:	moveq	r9, r7
    2ce0:	beq	2d5c <InflateDataType+0xec>
    2ce4:	cmp	r0, #2
    2ce8:	mvneq	r0, #2
    2cec:	bl	14f0 <zError@plt>
    2cf0:	mov	r1, r0
    2cf4:	ldr	r0, [pc, #168]	; 2da4 <InflateDataType+0x134>
    2cf8:	add	r0, pc, r0
    2cfc:	bl	161c <Mat_Critical@plt>
    2d00:	mov	r0, r5
    2d04:	add	sp, sp, #36	; 0x24
    2d08:	pop	{r4, r5, r6, r7, r8, r9, pc}
    2d0c:	mov	r2, #1
    2d10:	mov	r0, r8
    2d14:	ldr	r3, [r6]
    2d18:	mov	r1, r2
    2d1c:	strd	r8, [r4]
    2d20:	bl	1520 <fread@plt>
    2d24:	mov	r7, r0
    2d28:	add	r5, r5, r0
    2d2c:	mov	r1, #0
    2d30:	mov	r0, r4
    2d34:	bl	1460 <inflate@plt>
    2d38:	cmp	r0, #0
    2d3c:	beq	2d5c <InflateDataType+0xec>
    2d40:	cmp	r0, #2
    2d44:	mvneq	r0, #2
    2d48:	bl	14f0 <zError@plt>
    2d4c:	mov	r1, r0
    2d50:	ldr	r0, [pc, #80]	; 2da8 <InflateDataType+0x138>
    2d54:	add	r0, pc, r0
    2d58:	b	2cfc <InflateDataType+0x8c>
    2d5c:	ldr	r1, [r4, #4]
    2d60:	ldr	r3, [r4, #16]
    2d64:	cmp	r3, #0
    2d68:	beq	2d78 <InflateDataType+0x108>
    2d6c:	cmp	r7, #1
    2d70:	cmpeq	r1, #0
    2d74:	beq	2d0c <InflateDataType+0x9c>
    2d78:	cmp	r1, #0
    2d7c:	beq	2d00 <InflateDataType+0x90>
    2d80:	mov	r2, #1
    2d84:	rsb	r1, r1, #0
    2d88:	ldr	r0, [r6]
    2d8c:	bl	1694 <fseek@plt>
    2d90:	ldr	r3, [r4, #4]
    2d94:	sub	r5, r5, r3
    2d98:	mov	r3, #0
    2d9c:	str	r3, [r4, #4]
    2da0:	b	2d00 <InflateDataType+0x90>
    2da4:	.word	0x0003bd9e
    2da8:	.word	0x0003bd42

00002dac <InflateData>:
    2dac:	push	{r4, r5, r6, r7, r8, r9, lr}
    2db0:	mov	r8, r2
    2db4:	clz	r2, r2
    2db8:	lsr	r2, r2, #5
    2dbc:	cmp	r3, #0
    2dc0:	sub	sp, sp, #1024	; 0x400
    2dc4:	moveq	r5, #1
    2dc8:	sub	sp, sp, #4
    2dcc:	movne	r5, r2
    2dd0:	cmp	r5, #0
    2dd4:	movne	r5, #0
    2dd8:	bne	2e64 <InflateData+0xb8>
    2ddc:	mov	r6, r3
    2de0:	ldr	r3, [r1, #4]
    2de4:	mov	r4, r1
    2de8:	mov	r7, r0
    2dec:	cmp	r3, #0
    2df0:	bne	2e20 <InflateData+0x74>
    2df4:	cmp	r6, #1024	; 0x400
    2df8:	mov	r9, sp
    2dfc:	ldr	r3, [r0]
    2e00:	movhi	r2, #1024	; 0x400
    2e04:	movls	r2, r6
    2e08:	mov	r1, #1
    2e0c:	mov	r0, r9
    2e10:	bl	1520 <fread@plt>
    2e14:	str	r9, [r4]
    2e18:	str	r0, [r4, #4]
    2e1c:	ldr	r5, [r4, #4]
    2e20:	mov	r1, #3
    2e24:	mov	r0, r4
    2e28:	str	r8, [r4, #12]
    2e2c:	str	r6, [r4, #16]
    2e30:	bl	1460 <inflate@plt>
    2e34:	cmp	r0, #1
    2e38:	beq	2e64 <InflateData+0xb8>
    2e3c:	cmp	r0, #0
    2e40:	moveq	r8, sp
    2e44:	beq	2e74 <InflateData+0xc8>
    2e48:	cmp	r0, #2
    2e4c:	mvneq	r0, #2
    2e50:	bl	14f0 <zError@plt>
    2e54:	mov	r1, r0
    2e58:	ldr	r0, [pc, #216]	; 2f38 <InflateData+0x18c>
    2e5c:	add	r0, pc, r0
    2e60:	bl	161c <Mat_Critical@plt>
    2e64:	mov	r0, r5
    2e68:	add	sp, sp, #1024	; 0x400
    2e6c:	add	sp, sp, #4
    2e70:	pop	{r4, r5, r6, r7, r8, r9, pc}
    2e74:	ldr	r3, [r4, #4]
    2e78:	ldr	r2, [r4, #16]
    2e7c:	cmp	r2, #0
    2e80:	beq	2f08 <InflateData+0x15c>
    2e84:	cmp	r3, #0
    2e88:	bne	2f08 <InflateData+0x15c>
    2e8c:	add	r2, r5, #1024	; 0x400
    2e90:	ldr	r3, [r7]
    2e94:	cmp	r2, r6
    2e98:	movcc	r2, #1024	; 0x400
    2e9c:	bcc	2eb0 <InflateData+0x104>
    2ea0:	add	r2, r5, #1
    2ea4:	cmp	r2, r6
    2ea8:	movhi	r2, #1
    2eac:	subls	r2, r6, r5
    2eb0:	mov	r1, #1
    2eb4:	mov	r0, r8
    2eb8:	bl	1520 <fread@plt>
    2ebc:	mov	r1, #3
    2ec0:	str	r8, [r4]
    2ec4:	str	r0, [r4, #4]
    2ec8:	mov	r0, r4
    2ecc:	ldr	r3, [r4, #4]
    2ed0:	add	r5, r5, r3
    2ed4:	bl	1460 <inflate@plt>
    2ed8:	cmp	r0, #1
    2edc:	beq	2f08 <InflateData+0x15c>
    2ee0:	cmp	r0, #0
    2ee4:	cmnne	r0, #5
    2ee8:	beq	2e74 <InflateData+0xc8>
    2eec:	cmp	r0, #2
    2ef0:	mvneq	r0, #2
    2ef4:	bl	14f0 <zError@plt>
    2ef8:	mov	r1, r0
    2efc:	ldr	r0, [pc, #56]	; 2f3c <InflateData+0x190>
    2f00:	add	r0, pc, r0
    2f04:	bl	161c <Mat_Critical@plt>
    2f08:	ldr	r1, [r4, #4]
    2f0c:	cmp	r1, #0
    2f10:	beq	2e64 <InflateData+0xb8>
    2f14:	mov	r2, #1
    2f18:	rsb	r1, r1, #0
    2f1c:	ldr	r0, [r7]
    2f20:	bl	1694 <fseek@plt>
    2f24:	ldr	r3, [r4, #4]
    2f28:	sub	r5, r5, r3
    2f2c:	mov	r3, #0
    2f30:	str	r3, [r4, #4]
    2f34:	b	2e64 <InflateData+0xb8>
    2f38:	.word	0x0003bc5f
    2f3c:	.word	0x0003bbbb

00002f40 <InflateFieldNameLength>:
    2f40:	push	{r4, r5, r6, r7, r8, r9, lr}
    2f44:	subs	r4, r2, #0
    2f48:	sub	sp, sp, #36	; 0x24
    2f4c:	beq	2fdc <InflateFieldNameLength+0x9c>
    2f50:	mov	r7, r4
    2f54:	mov	r5, r1
    2f58:	ldr	r3, [r1, #52]	; 0x34
    2f5c:	mov	r6, r0
    2f60:	ldr	r3, [r3, #12]
    2f64:	ldr	r2, [r3, #4]
    2f68:	cmp	r2, #0
    2f6c:	movne	r4, #0
    2f70:	bne	2f90 <InflateFieldNameLength+0x50>
    2f74:	mov	r2, #1
    2f78:	mov	r0, sp
    2f7c:	mov	r1, r2
    2f80:	stm	r3, {r0, r2}
    2f84:	ldr	r3, [r6]
    2f88:	bl	1520 <fread@plt>
    2f8c:	mov	r4, r0
    2f90:	ldr	r3, [r5, #52]	; 0x34
    2f94:	mov	r1, #0
    2f98:	ldr	r0, [r3, #12]
    2f9c:	mov	r3, #8
    2fa0:	str	r7, [r0, #12]
    2fa4:	str	r3, [r0, #16]
    2fa8:	bl	1460 <inflate@plt>
    2fac:	cmp	r0, #0
    2fb0:	moveq	r7, #1
    2fb4:	moveq	r8, sp
    2fb8:	moveq	r9, r7
    2fbc:	beq	303c <InflateFieldNameLength+0xfc>
    2fc0:	cmp	r0, #2
    2fc4:	mvneq	r0, #2
    2fc8:	bl	14f0 <zError@plt>
    2fcc:	mov	r1, r0
    2fd0:	ldr	r0, [pc, #188]	; 3094 <InflateFieldNameLength+0x154>
    2fd4:	add	r0, pc, r0
    2fd8:	bl	161c <Mat_Critical@plt>
    2fdc:	mov	r0, r4
    2fe0:	add	sp, sp, #36	; 0x24
    2fe4:	pop	{r4, r5, r6, r7, r8, r9, pc}
    2fe8:	mov	r2, #1
    2fec:	mov	r0, r8
    2ff0:	strd	r8, [r3]
    2ff4:	mov	r1, r2
    2ff8:	ldr	r3, [r6]
    2ffc:	bl	1520 <fread@plt>
    3000:	ldr	r3, [r5, #52]	; 0x34
    3004:	mov	r7, r0
    3008:	add	r4, r4, r0
    300c:	mov	r1, #0
    3010:	ldr	r0, [r3, #12]
    3014:	bl	1460 <inflate@plt>
    3018:	cmp	r0, #0
    301c:	beq	303c <InflateFieldNameLength+0xfc>
    3020:	cmp	r0, #2
    3024:	mvneq	r0, #2
    3028:	bl	14f0 <zError@plt>
    302c:	mov	r1, r0
    3030:	ldr	r0, [pc, #96]	; 3098 <InflateFieldNameLength+0x158>
    3034:	add	r0, pc, r0
    3038:	b	2fd8 <InflateFieldNameLength+0x98>
    303c:	ldr	r3, [r5, #52]	; 0x34
    3040:	ldr	r3, [r3, #12]
    3044:	ldr	r1, [r3, #4]
    3048:	ldr	r2, [r3, #16]
    304c:	cmp	r2, #0
    3050:	beq	3060 <InflateFieldNameLength+0x120>
    3054:	cmp	r1, #0
    3058:	cmpeq	r7, #1
    305c:	beq	2fe8 <InflateFieldNameLength+0xa8>
    3060:	cmp	r1, #0
    3064:	beq	2fdc <InflateFieldNameLength+0x9c>
    3068:	mov	r2, #1
    306c:	rsb	r1, r1, #0
    3070:	ldr	r0, [r6]
    3074:	bl	1694 <fseek@plt>
    3078:	ldr	r3, [r5, #52]	; 0x34
    307c:	ldr	r3, [r3, #12]
    3080:	ldr	r2, [r3, #4]
    3084:	sub	r4, r4, r2
    3088:	mov	r2, #0
    308c:	str	r2, [r3, #4]
    3090:	b	2fdc <InflateFieldNameLength+0x9c>
    3094:	.word	0x0003bb08
    3098:	.word	0x0003baa8

0000309c <InflateFieldNamesTag>:
    309c:	push	{r4, r5, r6, r7, r8, r9, lr}
    30a0:	subs	r4, r2, #0
    30a4:	sub	sp, sp, #36	; 0x24
    30a8:	beq	3138 <InflateFieldNamesTag+0x9c>
    30ac:	mov	r7, r4
    30b0:	mov	r5, r1
    30b4:	ldr	r3, [r1, #52]	; 0x34
    30b8:	mov	r6, r0
    30bc:	ldr	r3, [r3, #12]
    30c0:	ldr	r2, [r3, #4]
    30c4:	cmp	r2, #0
    30c8:	movne	r4, #0
    30cc:	bne	30ec <InflateFieldNamesTag+0x50>
    30d0:	mov	r2, #1
    30d4:	mov	r0, sp
    30d8:	mov	r1, r2
    30dc:	stm	r3, {r0, r2}
    30e0:	ldr	r3, [r6]
    30e4:	bl	1520 <fread@plt>
    30e8:	mov	r4, r0
    30ec:	ldr	r3, [r5, #52]	; 0x34
    30f0:	mov	r1, #0
    30f4:	ldr	r0, [r3, #12]
    30f8:	mov	r3, #8
    30fc:	str	r7, [r0, #12]
    3100:	str	r3, [r0, #16]
    3104:	bl	1460 <inflate@plt>
    3108:	cmp	r0, #0
    310c:	moveq	r7, #1
    3110:	moveq	r8, sp
    3114:	moveq	r9, r7
    3118:	beq	3198 <InflateFieldNamesTag+0xfc>
    311c:	cmp	r0, #2
    3120:	mvneq	r0, #2
    3124:	bl	14f0 <zError@plt>
    3128:	mov	r1, r0
    312c:	ldr	r0, [pc, #188]	; 31f0 <InflateFieldNamesTag+0x154>
    3130:	add	r0, pc, r0
    3134:	bl	161c <Mat_Critical@plt>
    3138:	mov	r0, r4
    313c:	add	sp, sp, #36	; 0x24
    3140:	pop	{r4, r5, r6, r7, r8, r9, pc}
    3144:	mov	r2, #1
    3148:	mov	r0, r8
    314c:	strd	r8, [r3]
    3150:	mov	r1, r2
    3154:	ldr	r3, [r6]
    3158:	bl	1520 <fread@plt>
    315c:	ldr	r3, [r5, #52]	; 0x34
    3160:	mov	r7, r0
    3164:	add	r4, r4, r0
    3168:	mov	r1, #0
    316c:	ldr	r0, [r3, #12]
    3170:	bl	1460 <inflate@plt>
    3174:	cmp	r0, #0
    3178:	beq	3198 <InflateFieldNamesTag+0xfc>
    317c:	cmp	r0, #2
    3180:	mvneq	r0, #2
    3184:	bl	14f0 <zError@plt>
    3188:	mov	r1, r0
    318c:	ldr	r0, [pc, #96]	; 31f4 <InflateFieldNamesTag+0x158>
    3190:	add	r0, pc, r0
    3194:	b	3134 <InflateFieldNamesTag+0x98>
    3198:	ldr	r3, [r5, #52]	; 0x34
    319c:	ldr	r3, [r3, #12]
    31a0:	ldr	r1, [r3, #4]
    31a4:	ldr	r2, [r3, #16]
    31a8:	cmp	r2, #0
    31ac:	beq	31bc <InflateFieldNamesTag+0x120>
    31b0:	cmp	r1, #0
    31b4:	cmpeq	r7, #1
    31b8:	beq	3144 <InflateFieldNamesTag+0xa8>
    31bc:	cmp	r1, #0
    31c0:	beq	3138 <InflateFieldNamesTag+0x9c>
    31c4:	mov	r2, #1
    31c8:	rsb	r1, r1, #0
    31cc:	ldr	r0, [r6]
    31d0:	bl	1694 <fseek@plt>
    31d4:	ldr	r3, [r5, #52]	; 0x34
    31d8:	ldr	r3, [r3, #12]
    31dc:	ldr	r2, [r3, #4]
    31e0:	sub	r4, r4, r2
    31e4:	mov	r2, #0
    31e8:	str	r2, [r3, #4]
    31ec:	b	3138 <InflateFieldNamesTag+0x9c>
    31f0:	.word	0x0003b9d8
    31f4:	.word	0x0003b978

000031f8 <InflateFieldNames>:
    31f8:	push	{r4, r5, r6, r7, r8, r9, lr}
    31fc:	subs	r4, r2, #0
    3200:	sub	sp, sp, #36	; 0x24
    3204:	beq	329c <InflateFieldNames+0xa4>
    3208:	mov	r7, r3
    320c:	mov	r8, r4
    3210:	ldr	r3, [r1, #52]	; 0x34
    3214:	mov	r5, r1
    3218:	mov	r6, r0
    321c:	ldr	r3, [r3, #12]
    3220:	ldr	r2, [r3, #4]
    3224:	cmp	r2, #0
    3228:	movne	r4, #0
    322c:	bne	324c <InflateFieldNames+0x54>
    3230:	mov	r2, #1
    3234:	mov	r0, sp
    3238:	mov	r1, r2
    323c:	stm	r3, {r0, r2}
    3240:	ldr	r3, [r6]
    3244:	bl	1520 <fread@plt>
    3248:	mov	r4, r0
    324c:	ldr	r3, [r5, #52]	; 0x34
    3250:	mov	r1, #0
    3254:	ldr	r0, [r3, #12]
    3258:	ldrd	r2, [sp, #64]	; 0x40
    325c:	str	r8, [r0, #12]
    3260:	mla	r7, r2, r7, r3
    3264:	str	r7, [r0, #16]
    3268:	bl	1460 <inflate@plt>
    326c:	cmp	r0, #0
    3270:	moveq	r7, #1
    3274:	moveq	r8, sp
    3278:	moveq	r9, r7
    327c:	beq	32fc <InflateFieldNames+0x104>
    3280:	cmp	r0, #2
    3284:	mvneq	r0, #2
    3288:	bl	14f0 <zError@plt>
    328c:	mov	r1, r0
    3290:	ldr	r0, [pc, #188]	; 3354 <InflateFieldNames+0x15c>
    3294:	add	r0, pc, r0
    3298:	bl	161c <Mat_Critical@plt>
    329c:	mov	r0, r4
    32a0:	add	sp, sp, #36	; 0x24
    32a4:	pop	{r4, r5, r6, r7, r8, r9, pc}
    32a8:	mov	r2, #1
    32ac:	mov	r0, r8
    32b0:	strd	r8, [r3]
    32b4:	mov	r1, r2
    32b8:	ldr	r3, [r6]
    32bc:	bl	1520 <fread@plt>
    32c0:	ldr	r3, [r5, #52]	; 0x34
    32c4:	mov	r7, r0
    32c8:	add	r4, r4, r0
    32cc:	mov	r1, #0
    32d0:	ldr	r0, [r3, #12]
    32d4:	bl	1460 <inflate@plt>
    32d8:	cmp	r0, #0
    32dc:	beq	32fc <InflateFieldNames+0x104>
    32e0:	cmp	r0, #2
    32e4:	mvneq	r0, #2
    32e8:	bl	14f0 <zError@plt>
    32ec:	mov	r1, r0
    32f0:	ldr	r0, [pc, #96]	; 3358 <InflateFieldNames+0x160>
    32f4:	add	r0, pc, r0
    32f8:	b	3298 <InflateFieldNames+0xa0>
    32fc:	ldr	r3, [r5, #52]	; 0x34
    3300:	ldr	r3, [r3, #12]
    3304:	ldr	r1, [r3, #4]
    3308:	ldr	r2, [r3, #16]
    330c:	cmp	r2, #0
    3310:	beq	3320 <InflateFieldNames+0x128>
    3314:	cmp	r1, #0
    3318:	cmpeq	r7, #1
    331c:	beq	32a8 <InflateFieldNames+0xb0>
    3320:	cmp	r1, #0
    3324:	beq	329c <InflateFieldNames+0xa4>
    3328:	mov	r2, #1
    332c:	rsb	r1, r1, #0
    3330:	ldr	r0, [r6]
    3334:	bl	1694 <fseek@plt>
    3338:	ldr	r3, [r5, #52]	; 0x34
    333c:	ldr	r3, [r3, #12]
    3340:	ldr	r2, [r3, #4]
    3344:	sub	r4, r4, r2
    3348:	mov	r2, #0
    334c:	str	r2, [r3, #4]
    3350:	b	329c <InflateFieldNames+0xa4>
    3354:	.word	0x0003b89e
    3358:	.word	0x0003b83e

0000335c <ReadDoubleData.part.0>:
    335c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    3360:	sub	sp, sp, #2064	; 0x810
    3364:	mov	r6, r0
    3368:	sub	sp, sp, #12
    336c:	mov	r0, r2
    3370:	mov	r4, r3
    3374:	sub	r5, r2, #1
    3378:	str	r1, [sp]
    337c:	bl	1598 <Mat_SizeOf@plt>
    3380:	mov	sl, r0
    3384:	cmp	r5, #12
    3388:	addls	pc, pc, r5, lsl #2
    338c:	b	45bc <ReadDoubleData.part.0+0x1260>
    3390:	b	43a4 <ReadDoubleData.part.0+0x1048>
    3394:	b	44b0 <ReadDoubleData.part.0+0x1154>
    3398:	b	3f14 <ReadDoubleData.part.0+0xbb8>
    339c:	b	415c <ReadDoubleData.part.0+0xe00>
    33a0:	b	3aa4 <ReadDoubleData.part.0+0x748>
    33a4:	b	3cdc <ReadDoubleData.part.0+0x980>
    33a8:	b	341c <ReadDoubleData.part.0+0xc0>
    33ac:	b	45bc <ReadDoubleData.part.0+0x1260>
    33b0:	b	33c4 <ReadDoubleData.part.0+0x68>
    33b4:	b	45bc <ReadDoubleData.part.0+0x1260>
    33b8:	b	45bc <ReadDoubleData.part.0+0x1260>
    33bc:	b	364c <ReadDoubleData.part.0+0x2f0>
    33c0:	b	3878 <ReadDoubleData.part.0+0x51c>
    33c4:	mov	r1, r0
    33c8:	mov	r2, r4
    33cc:	ldr	r3, [r6]
    33d0:	ldr	r0, [sp]
    33d4:	bl	1520 <fread@plt>
    33d8:	ldr	r3, [r6, #20]
    33dc:	mov	r5, r0
    33e0:	cmp	r3, #0
    33e4:	bne	3414 <ReadDoubleData.part.0+0xb8>
    33e8:	mul	r0, sl, r5
    33ec:	add	sp, sp, #2064	; 0x810
    33f0:	add	sp, sp, #12
    33f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    33f8:	ldr	r3, [sp]
    33fc:	add	r0, r3, r6, lsl #3
    3400:	add	r6, r6, #1
    3404:	bl	196c <Mat_doubleSwap>
    3408:	cmp	r4, r6
    340c:	bgt	33f8 <ReadDoubleData.part.0+0x9c>
    3410:	b	33e8 <ReadDoubleData.part.0+0x8c>
    3414:	mov	r6, #0
    3418:	b	3408 <ReadDoubleData.part.0+0xac>
    341c:	add	r7, sp, #24
    3420:	ldr	r3, [r6]
    3424:	ldr	r9, [r6, #20]
    3428:	cmp	r9, #0
    342c:	beq	3548 <ReadDoubleData.part.0+0x1ec>
    3430:	cmp	r4, #256	; 0x100
    3434:	bgt	3474 <ReadDoubleData.part.0+0x118>
    3438:	mov	r1, r0
    343c:	mov	r2, r4
    3440:	mov	r0, r7
    3444:	mov	r6, #0
    3448:	bl	1520 <fread@plt>
    344c:	ldr	r8, [sp]
    3450:	mov	r5, r0
    3454:	cmp	r4, r6
    3458:	ble	33e8 <ReadDoubleData.part.0+0x8c>
    345c:	add	r0, r7, r6, lsl #2
    3460:	add	r6, r6, #1
    3464:	bl	193c <Mat_floatSwap>
    3468:	vcvt.f64.f32	d0, s0
    346c:	vstmia	r8!, {d0}
    3470:	b	3454 <ReadDoubleData.part.0+0xf8>
    3474:	ldr	r3, [sp]
    3478:	mov	r8, #0
    347c:	mov	r5, r8
    3480:	add	r9, r3, #2048	; 0x800
    3484:	sub	r3, r4, #256	; 0x100
    3488:	str	r3, [sp, #4]
    348c:	mov	r2, #256	; 0x100
    3490:	mov	r1, sl
    3494:	ldr	r3, [r6]
    3498:	mov	r0, r7
    349c:	sub	fp, r9, #2048	; 0x800
    34a0:	bl	1520 <fread@plt>
    34a4:	add	r5, r5, r0
    34a8:	mov	r3, r7
    34ac:	mov	r0, r3
    34b0:	str	r3, [sp, #8]
    34b4:	bl	193c <Mat_floatSwap>
    34b8:	vcvt.f64.f32	d0, s0
    34bc:	ldr	r3, [sp, #8]
    34c0:	add	r3, r3, #4
    34c4:	vstmia	fp!, {d0}
    34c8:	cmp	fp, r9
    34cc:	bne	34ac <ReadDoubleData.part.0+0x150>
    34d0:	ldr	r3, [sp, #4]
    34d4:	add	r8, r8, #256	; 0x100
    34d8:	add	r9, fp, #2048	; 0x800
    34dc:	cmp	r8, r3
    34e0:	blt	348c <ReadDoubleData.part.0+0x130>
    34e4:	sub	r3, r4, #256	; 0x100
    34e8:	sub	r3, r3, #1
    34ec:	lsr	r3, r3, #8
    34f0:	add	r8, r3, #1
    34f4:	lsl	r3, r8, #8
    34f8:	cmp	r4, r3
    34fc:	ble	33e8 <ReadDoubleData.part.0+0x8c>
    3500:	sub	r4, r4, r3
    3504:	mov	r1, sl
    3508:	ldr	r3, [r6]
    350c:	mov	r2, r4
    3510:	mov	r0, r7
    3514:	bl	1520 <fread@plt>
    3518:	ldr	r3, [sp]
    351c:	add	r5, r5, r0
    3520:	add	r6, r3, r8, lsl #11
    3524:	mov	r8, #0
    3528:	cmp	r4, r8
    352c:	ble	33e8 <ReadDoubleData.part.0+0x8c>
    3530:	add	r0, r7, r8, lsl #2
    3534:	add	r8, r8, #1
    3538:	bl	193c <Mat_floatSwap>
    353c:	vcvt.f64.f32	d0, s0
    3540:	vstmia	r6!, {d0}
    3544:	b	3528 <ReadDoubleData.part.0+0x1cc>
    3548:	cmp	r4, #256	; 0x100
    354c:	bgt	3584 <ReadDoubleData.part.0+0x228>
    3550:	mov	r1, r0
    3554:	mov	r2, r4
    3558:	mov	r0, r7
    355c:	bl	1520 <fread@plt>
    3560:	ldr	r3, [sp]
    3564:	mov	r5, r0
    3568:	cmp	r4, r9
    356c:	ble	33e8 <ReadDoubleData.part.0+0x8c>
    3570:	vldmia	r7!, {s14}
    3574:	add	r9, r9, #1
    3578:	vcvt.f64.f32	d7, s14
    357c:	vstmia	r3!, {d7}
    3580:	b	3568 <ReadDoubleData.part.0+0x20c>
    3584:	ldr	r3, [sp]
    3588:	mov	fp, r9
    358c:	mov	r5, r9
    3590:	add	r8, r3, #2048	; 0x800
    3594:	sub	r3, r4, #256	; 0x100
    3598:	str	r3, [sp, #8]
    359c:	mov	r2, #256	; 0x100
    35a0:	mov	r1, sl
    35a4:	ldr	r3, [r6]
    35a8:	mov	r0, r7
    35ac:	bl	1520 <fread@plt>
    35b0:	add	r5, r5, r0
    35b4:	sub	r3, r8, #2048	; 0x800
    35b8:	str	r7, [sp, #4]
    35bc:	mov	r2, r7
    35c0:	vldmia	r2!, {s14}
    35c4:	vcvt.f64.f32	d7, s14
    35c8:	vstmia	r3!, {d7}
    35cc:	cmp	r3, r8
    35d0:	bne	35c0 <ReadDoubleData.part.0+0x264>
    35d4:	add	r8, r3, #2048	; 0x800
    35d8:	ldr	r3, [sp, #8]
    35dc:	add	fp, fp, #256	; 0x100
    35e0:	cmp	fp, r3
    35e4:	blt	359c <ReadDoubleData.part.0+0x240>
    35e8:	sub	r8, r4, #256	; 0x100
    35ec:	sub	r8, r8, #1
    35f0:	lsr	r8, r8, #8
    35f4:	add	r8, r8, #1
    35f8:	lsl	r3, r8, #8
    35fc:	cmp	r4, r3
    3600:	ble	33e8 <ReadDoubleData.part.0+0x8c>
    3604:	sub	r4, r4, r3
    3608:	mov	r1, sl
    360c:	ldr	r3, [r6]
    3610:	mov	r2, r4
    3614:	mov	r0, r7
    3618:	bl	1520 <fread@plt>
    361c:	ldr	r3, [sp]
    3620:	add	r5, r5, r0
    3624:	add	r8, r3, r8, lsl #11
    3628:	cmp	r4, r9
    362c:	ble	33e8 <ReadDoubleData.part.0+0x8c>
    3630:	ldr	r3, [sp, #4]
    3634:	add	r9, r9, #1
    3638:	vldmia	r3!, {s14}
    363c:	vcvt.f64.f32	d7, s14
    3640:	str	r3, [sp, #4]
    3644:	vstmia	r8!, {d7}
    3648:	b	3628 <ReadDoubleData.part.0+0x2cc>
    364c:	add	r7, sp, #24
    3650:	ldr	r3, [r6]
    3654:	ldr	r8, [r6, #20]
    3658:	cmp	r8, #0
    365c:	beq	3768 <ReadDoubleData.part.0+0x40c>
    3660:	cmp	r4, #256	; 0x100
    3664:	movgt	r8, #0
    3668:	subgt	r9, r4, #256	; 0x100
    366c:	movgt	r5, r8
    3670:	bgt	36b0 <ReadDoubleData.part.0+0x354>
    3674:	mov	r1, r0
    3678:	mov	r2, r4
    367c:	mov	r0, r7
    3680:	mov	r6, #0
    3684:	bl	1520 <fread@plt>
    3688:	ldr	r8, [sp]
    368c:	mov	r5, r0
    3690:	cmp	r4, r6
    3694:	ble	33e8 <ReadDoubleData.part.0+0x8c>
    3698:	add	r0, r7, r6, lsl #3
    369c:	add	r6, r6, #1
    36a0:	bl	17ec <Mat_int64Swap>
    36a4:	bl	3e530 <__aeabi_l2d>
    36a8:	strd	r0, [r8], #8
    36ac:	b	3690 <ReadDoubleData.part.0+0x334>
    36b0:	mov	r2, #256	; 0x100
    36b4:	mov	r1, sl
    36b8:	ldr	r3, [r6]
    36bc:	mov	r0, r7
    36c0:	bl	1520 <fread@plt>
    36c4:	ldr	r3, [sp]
    36c8:	add	r5, r5, r0
    36cc:	add	fp, r3, r8, lsl #3
    36d0:	mov	r3, #0
    36d4:	add	r0, r7, r3
    36d8:	str	r3, [sp, #4]
    36dc:	bl	17ec <Mat_int64Swap>
    36e0:	bl	3e530 <__aeabi_l2d>
    36e4:	ldr	r3, [sp, #4]
    36e8:	strd	r0, [fp], #8
    36ec:	add	r3, r3, #8
    36f0:	cmp	r3, #2048	; 0x800
    36f4:	bne	36d4 <ReadDoubleData.part.0+0x378>
    36f8:	add	r8, r8, #256	; 0x100
    36fc:	cmp	r8, r9
    3700:	blt	36b0 <ReadDoubleData.part.0+0x354>
    3704:	sub	r3, r4, #256	; 0x100
    3708:	sub	r3, r3, #1
    370c:	lsr	r3, r3, #8
    3710:	add	r8, r3, #1
    3714:	lsl	r3, r8, #8
    3718:	cmp	r4, r3
    371c:	ble	33e8 <ReadDoubleData.part.0+0x8c>
    3720:	sub	r4, r4, r3
    3724:	mov	r1, sl
    3728:	ldr	r3, [r6]
    372c:	mov	r2, r4
    3730:	mov	r0, r7
    3734:	bl	1520 <fread@plt>
    3738:	ldr	r3, [sp]
    373c:	add	r5, r5, r0
    3740:	add	r6, r3, r8, lsl #11
    3744:	mov	r8, #0
    3748:	cmp	r4, r8
    374c:	ble	33e8 <ReadDoubleData.part.0+0x8c>
    3750:	add	r0, r7, r8, lsl #3
    3754:	add	r8, r8, #1
    3758:	bl	17ec <Mat_int64Swap>
    375c:	bl	3e530 <__aeabi_l2d>
    3760:	strd	r0, [r6], #8
    3764:	b	3748 <ReadDoubleData.part.0+0x3ec>
    3768:	cmp	r4, #256	; 0x100
    376c:	bgt	37a4 <ReadDoubleData.part.0+0x448>
    3770:	mov	r1, r0
    3774:	mov	r2, r4
    3778:	mov	r0, r7
    377c:	bl	1520 <fread@plt>
    3780:	ldr	r6, [sp]
    3784:	mov	r5, r0
    3788:	cmp	r4, r8
    378c:	ble	33e8 <ReadDoubleData.part.0+0x8c>
    3790:	ldrd	r0, [r7], #8
    3794:	add	r8, r8, #1
    3798:	bl	3e530 <__aeabi_l2d>
    379c:	strd	r0, [r6], #8
    37a0:	b	3788 <ReadDoubleData.part.0+0x42c>
    37a4:	ldr	r3, [sp]
    37a8:	mov	fp, r8
    37ac:	mov	r5, r8
    37b0:	add	r9, r3, #2048	; 0x800
    37b4:	sub	r3, r4, #256	; 0x100
    37b8:	str	r3, [sp, #8]
    37bc:	mov	r2, #256	; 0x100
    37c0:	mov	r1, sl
    37c4:	ldr	r3, [r6]
    37c8:	mov	r0, r7
    37cc:	bl	1520 <fread@plt>
    37d0:	add	r5, r5, r0
    37d4:	sub	r3, r9, #2048	; 0x800
    37d8:	str	r7, [sp, #4]
    37dc:	mov	r2, r7
    37e0:	ldrd	r0, [r2], #8
    37e4:	strd	r2, [sp, #12]
    37e8:	str	r2, [sp, #20]
    37ec:	bl	3e530 <__aeabi_l2d>
    37f0:	ldrd	r2, [sp, #12]
    37f4:	strd	r0, [r3], #8
    37f8:	cmp	r3, r9
    37fc:	bne	37e0 <ReadDoubleData.part.0+0x484>
    3800:	add	r9, r3, #2048	; 0x800
    3804:	ldr	r3, [sp, #8]
    3808:	add	fp, fp, #256	; 0x100
    380c:	cmp	fp, r3
    3810:	blt	37bc <ReadDoubleData.part.0+0x460>
    3814:	sub	r9, r4, #256	; 0x100
    3818:	sub	r9, r9, #1
    381c:	lsr	r9, r9, #8
    3820:	add	r9, r9, #1
    3824:	lsl	r3, r9, #8
    3828:	cmp	r4, r3
    382c:	ble	33e8 <ReadDoubleData.part.0+0x8c>
    3830:	sub	r4, r4, r3
    3834:	mov	r1, sl
    3838:	ldr	r3, [r6]
    383c:	mov	r2, r4
    3840:	mov	r0, r7
    3844:	bl	1520 <fread@plt>
    3848:	ldr	r3, [sp]
    384c:	add	r5, r5, r0
    3850:	add	r9, r3, r9, lsl #11
    3854:	cmp	r4, r8
    3858:	ble	33e8 <ReadDoubleData.part.0+0x8c>
    385c:	ldr	r3, [sp, #4]
    3860:	add	r8, r8, #1
    3864:	ldrd	r0, [r3], #8
    3868:	str	r3, [sp, #4]
    386c:	bl	3e530 <__aeabi_l2d>
    3870:	strd	r0, [r9], #8
    3874:	b	3854 <ReadDoubleData.part.0+0x4f8>
    3878:	add	r7, sp, #24
    387c:	ldr	r3, [r6]
    3880:	ldr	r8, [r6, #20]
    3884:	cmp	r8, #0
    3888:	beq	3994 <ReadDoubleData.part.0+0x638>
    388c:	cmp	r4, #256	; 0x100
    3890:	movgt	r8, #0
    3894:	subgt	r9, r4, #256	; 0x100
    3898:	movgt	r5, r8
    389c:	bgt	38dc <ReadDoubleData.part.0+0x580>
    38a0:	mov	r1, r0
    38a4:	mov	r2, r4
    38a8:	mov	r0, r7
    38ac:	mov	r6, #0
    38b0:	bl	1520 <fread@plt>
    38b4:	ldr	r8, [sp]
    38b8:	mov	r5, r0
    38bc:	cmp	r4, r6
    38c0:	ble	33e8 <ReadDoubleData.part.0+0x8c>
    38c4:	add	r0, r7, r6, lsl #3
    38c8:	add	r6, r6, #1
    38cc:	bl	1844 <Mat_uint64Swap>
    38d0:	bl	3e51c <__aeabi_ul2d>
    38d4:	strd	r0, [r8], #8
    38d8:	b	38bc <ReadDoubleData.part.0+0x560>
    38dc:	mov	r2, #256	; 0x100
    38e0:	mov	r1, sl
    38e4:	ldr	r3, [r6]
    38e8:	mov	r0, r7
    38ec:	bl	1520 <fread@plt>
    38f0:	ldr	r3, [sp]
    38f4:	add	r5, r5, r0
    38f8:	add	fp, r3, r8, lsl #3
    38fc:	mov	r3, #0
    3900:	add	r0, r7, r3
    3904:	str	r3, [sp, #4]
    3908:	bl	1844 <Mat_uint64Swap>
    390c:	bl	3e51c <__aeabi_ul2d>
    3910:	ldr	r3, [sp, #4]
    3914:	strd	r0, [fp], #8
    3918:	add	r3, r3, #8
    391c:	cmp	r3, #2048	; 0x800
    3920:	bne	3900 <ReadDoubleData.part.0+0x5a4>
    3924:	add	r8, r8, #256	; 0x100
    3928:	cmp	r8, r9
    392c:	blt	38dc <ReadDoubleData.part.0+0x580>
    3930:	sub	r3, r4, #256	; 0x100
    3934:	sub	r3, r3, #1
    3938:	lsr	r3, r3, #8
    393c:	add	r8, r3, #1
    3940:	lsl	r3, r8, #8
    3944:	cmp	r4, r3
    3948:	ble	33e8 <ReadDoubleData.part.0+0x8c>
    394c:	sub	r4, r4, r3
    3950:	mov	r1, sl
    3954:	ldr	r3, [r6]
    3958:	mov	r2, r4
    395c:	mov	r0, r7
    3960:	bl	1520 <fread@plt>
    3964:	ldr	r3, [sp]
    3968:	add	r5, r5, r0
    396c:	add	r6, r3, r8, lsl #11
    3970:	mov	r8, #0
    3974:	cmp	r4, r8
    3978:	ble	33e8 <ReadDoubleData.part.0+0x8c>
    397c:	add	r0, r7, r8, lsl #3
    3980:	add	r8, r8, #1
    3984:	bl	1844 <Mat_uint64Swap>
    3988:	bl	3e51c <__aeabi_ul2d>
    398c:	strd	r0, [r6], #8
    3990:	b	3974 <ReadDoubleData.part.0+0x618>
    3994:	cmp	r4, #256	; 0x100
    3998:	bgt	39d0 <ReadDoubleData.part.0+0x674>
    399c:	mov	r1, r0
    39a0:	mov	r2, r4
    39a4:	mov	r0, r7
    39a8:	bl	1520 <fread@plt>
    39ac:	ldr	r6, [sp]
    39b0:	mov	r5, r0
    39b4:	cmp	r4, r8
    39b8:	ble	33e8 <ReadDoubleData.part.0+0x8c>
    39bc:	ldrd	r0, [r7], #8
    39c0:	add	r8, r8, #1
    39c4:	bl	3e51c <__aeabi_ul2d>
    39c8:	strd	r0, [r6], #8
    39cc:	b	39b4 <ReadDoubleData.part.0+0x658>
    39d0:	ldr	r3, [sp]
    39d4:	mov	fp, r8
    39d8:	mov	r5, r8
    39dc:	add	r9, r3, #2048	; 0x800
    39e0:	sub	r3, r4, #256	; 0x100
    39e4:	str	r3, [sp, #8]
    39e8:	mov	r2, #256	; 0x100
    39ec:	mov	r1, sl
    39f0:	ldr	r3, [r6]
    39f4:	mov	r0, r7
    39f8:	bl	1520 <fread@plt>
    39fc:	add	r5, r5, r0
    3a00:	sub	r3, r9, #2048	; 0x800
    3a04:	str	r7, [sp, #4]
    3a08:	mov	r2, r7
    3a0c:	ldrd	r0, [r2], #8
    3a10:	strd	r2, [sp, #12]
    3a14:	str	r2, [sp, #20]
    3a18:	bl	3e51c <__aeabi_ul2d>
    3a1c:	ldrd	r2, [sp, #12]
    3a20:	strd	r0, [r3], #8
    3a24:	cmp	r3, r9
    3a28:	bne	3a0c <ReadDoubleData.part.0+0x6b0>
    3a2c:	add	r9, r3, #2048	; 0x800
    3a30:	ldr	r3, [sp, #8]
    3a34:	add	fp, fp, #256	; 0x100
    3a38:	cmp	fp, r3
    3a3c:	blt	39e8 <ReadDoubleData.part.0+0x68c>
    3a40:	sub	r9, r4, #256	; 0x100
    3a44:	sub	r9, r9, #1
    3a48:	lsr	r9, r9, #8
    3a4c:	add	r9, r9, #1
    3a50:	lsl	r3, r9, #8
    3a54:	cmp	r4, r3
    3a58:	ble	33e8 <ReadDoubleData.part.0+0x8c>
    3a5c:	sub	r4, r4, r3
    3a60:	mov	r1, sl
    3a64:	ldr	r3, [r6]
    3a68:	mov	r2, r4
    3a6c:	mov	r0, r7
    3a70:	bl	1520 <fread@plt>
    3a74:	ldr	r3, [sp]
    3a78:	add	r5, r5, r0
    3a7c:	add	r9, r3, r9, lsl #11
    3a80:	cmp	r4, r8
    3a84:	ble	33e8 <ReadDoubleData.part.0+0x8c>
    3a88:	ldr	r3, [sp, #4]
    3a8c:	add	r8, r8, #1
    3a90:	ldrd	r0, [r3], #8
    3a94:	str	r3, [sp, #4]
    3a98:	bl	3e51c <__aeabi_ul2d>
    3a9c:	strd	r0, [r9], #8
    3aa0:	b	3a80 <ReadDoubleData.part.0+0x724>
    3aa4:	add	r7, sp, #24
    3aa8:	ldr	r3, [r6]
    3aac:	ldr	r8, [r6, #20]
    3ab0:	cmp	r8, #0
    3ab4:	beq	3bdc <ReadDoubleData.part.0+0x880>
    3ab8:	cmp	r4, #256	; 0x100
    3abc:	bgt	3b00 <ReadDoubleData.part.0+0x7a4>
    3ac0:	mov	r1, r0
    3ac4:	mov	r2, r4
    3ac8:	mov	r0, r7
    3acc:	mov	r6, #0
    3ad0:	bl	1520 <fread@plt>
    3ad4:	ldr	r8, [sp]
    3ad8:	mov	r5, r0
    3adc:	cmp	r4, r6
    3ae0:	ble	33e8 <ReadDoubleData.part.0+0x8c>
    3ae4:	add	r0, r7, r6, lsl #2
    3ae8:	add	r6, r6, #1
    3aec:	bl	189c <Mat_int32Swap>
    3af0:	vmov	s15, r0
    3af4:	vcvt.f64.s32	d7, s15
    3af8:	vstmia	r8!, {d7}
    3afc:	b	3adc <ReadDoubleData.part.0+0x780>
    3b00:	ldr	r3, [sp]
    3b04:	mov	r8, #0
    3b08:	mov	r5, r8
    3b0c:	add	r9, r3, #2048	; 0x800
    3b10:	sub	r3, r4, #256	; 0x100
    3b14:	str	r3, [sp, #4]
    3b18:	mov	r2, #256	; 0x100
    3b1c:	mov	r1, sl
    3b20:	ldr	r3, [r6]
    3b24:	mov	r0, r7
    3b28:	sub	fp, r9, #2048	; 0x800
    3b2c:	bl	1520 <fread@plt>
    3b30:	add	r5, r5, r0
    3b34:	mov	r3, r7
    3b38:	mov	r0, r3
    3b3c:	str	r3, [sp, #8]
    3b40:	bl	189c <Mat_int32Swap>
    3b44:	vmov	s15, r0
    3b48:	ldr	r3, [sp, #8]
    3b4c:	add	r3, r3, #4
    3b50:	vcvt.f64.s32	d7, s15
    3b54:	vstmia	fp!, {d7}
    3b58:	cmp	fp, r9
    3b5c:	bne	3b38 <ReadDoubleData.part.0+0x7dc>
    3b60:	ldr	r3, [sp, #4]
    3b64:	add	r8, r8, #256	; 0x100
    3b68:	add	r9, fp, #2048	; 0x800
    3b6c:	cmp	r8, r3
    3b70:	blt	3b18 <ReadDoubleData.part.0+0x7bc>
    3b74:	sub	r3, r4, #256	; 0x100
    3b78:	sub	r3, r3, #1
    3b7c:	lsr	r3, r3, #8
    3b80:	add	r8, r3, #1
    3b84:	lsl	r3, r8, #8
    3b88:	cmp	r4, r3
    3b8c:	ble	33e8 <ReadDoubleData.part.0+0x8c>
    3b90:	sub	r4, r4, r3
    3b94:	mov	r1, sl
    3b98:	ldr	r3, [r6]
    3b9c:	mov	r2, r4
    3ba0:	mov	r0, r7
    3ba4:	bl	1520 <fread@plt>
    3ba8:	ldr	r3, [sp]
    3bac:	add	r5, r5, r0
    3bb0:	add	r6, r3, r8, lsl #11
    3bb4:	mov	r8, #0
    3bb8:	cmp	r4, r8
    3bbc:	ble	33e8 <ReadDoubleData.part.0+0x8c>
    3bc0:	add	r0, r7, r8, lsl #2
    3bc4:	add	r8, r8, #1
    3bc8:	bl	189c <Mat_int32Swap>
    3bcc:	vmov	s15, r0
    3bd0:	vcvt.f64.s32	d7, s15
    3bd4:	vstmia	r6!, {d7}
    3bd8:	b	3bb8 <ReadDoubleData.part.0+0x85c>
    3bdc:	cmp	r4, #256	; 0x100
    3be0:	bgt	3c1c <ReadDoubleData.part.0+0x8c0>
    3be4:	mov	r1, r0
    3be8:	mov	r2, r4
    3bec:	mov	r0, r7
    3bf0:	bl	1520 <fread@plt>
    3bf4:	ldr	r3, [sp]
    3bf8:	mov	r5, r0
    3bfc:	cmp	r4, r8
    3c00:	ble	33e8 <ReadDoubleData.part.0+0x8c>
    3c04:	ldr	r2, [r7, r8, lsl #2]
    3c08:	add	r8, r8, #1
    3c0c:	vmov	s15, r2
    3c10:	vcvt.f64.s32	d7, s15
    3c14:	vstmia	r3!, {d7}
    3c18:	b	3bfc <ReadDoubleData.part.0+0x8a0>
    3c1c:	ldr	r3, [sp]
    3c20:	mov	r9, r8
    3c24:	mov	r5, r8
    3c28:	add	fp, r3, #2048	; 0x800
    3c2c:	sub	r3, r4, #256	; 0x100
    3c30:	str	r3, [sp, #4]
    3c34:	mov	r2, #256	; 0x100
    3c38:	mov	r1, sl
    3c3c:	ldr	r3, [r6]
    3c40:	mov	r0, r7
    3c44:	bl	1520 <fread@plt>
    3c48:	add	r5, r5, r0
    3c4c:	mov	r2, r7
    3c50:	sub	r3, fp, #2048	; 0x800
    3c54:	vldmia	r2!, {s14}
    3c58:	vcvt.f64.s32	d7, s14
    3c5c:	vstmia	r3!, {d7}
    3c60:	cmp	r3, fp
    3c64:	bne	3c54 <ReadDoubleData.part.0+0x8f8>
    3c68:	add	fp, r3, #2048	; 0x800
    3c6c:	ldr	r3, [sp, #4]
    3c70:	add	r9, r9, #256	; 0x100
    3c74:	cmp	r9, r3
    3c78:	blt	3c34 <ReadDoubleData.part.0+0x8d8>
    3c7c:	sub	r9, r4, #256	; 0x100
    3c80:	sub	r9, r9, #1
    3c84:	lsr	r9, r9, #8
    3c88:	add	r9, r9, #1
    3c8c:	lsl	r3, r9, #8
    3c90:	cmp	r4, r3
    3c94:	ble	33e8 <ReadDoubleData.part.0+0x8c>
    3c98:	sub	r4, r4, r3
    3c9c:	mov	r1, sl
    3ca0:	ldr	r3, [r6]
    3ca4:	mov	r2, r4
    3ca8:	mov	r0, r7
    3cac:	bl	1520 <fread@plt>
    3cb0:	ldr	r3, [sp]
    3cb4:	add	r5, r5, r0
    3cb8:	add	r9, r3, r9, lsl #11
    3cbc:	cmp	r4, r8
    3cc0:	ble	33e8 <ReadDoubleData.part.0+0x8c>
    3cc4:	ldr	r3, [r7, r8, lsl #2]
    3cc8:	add	r8, r8, #1
    3ccc:	vmov	s15, r3
    3cd0:	vcvt.f64.s32	d7, s15
    3cd4:	vstmia	r9!, {d7}
    3cd8:	b	3cbc <ReadDoubleData.part.0+0x960>
    3cdc:	add	r7, sp, #24
    3ce0:	ldr	r3, [r6]
    3ce4:	ldr	r8, [r6, #20]
    3ce8:	cmp	r8, #0
    3cec:	beq	3e14 <ReadDoubleData.part.0+0xab8>
    3cf0:	cmp	r4, #256	; 0x100
    3cf4:	bgt	3d38 <ReadDoubleData.part.0+0x9dc>
    3cf8:	mov	r1, r0
    3cfc:	mov	r2, r4
    3d00:	mov	r0, r7
    3d04:	mov	r6, #0
    3d08:	bl	1520 <fread@plt>
    3d0c:	ldr	r8, [sp]
    3d10:	mov	r5, r0
    3d14:	cmp	r4, r6
    3d18:	ble	33e8 <ReadDoubleData.part.0+0x8c>
    3d1c:	add	r0, r7, r6, lsl #2
    3d20:	add	r6, r6, #1
    3d24:	bl	18cc <Mat_uint32Swap>
    3d28:	vmov	s15, r0
    3d2c:	vcvt.f64.u32	d7, s15
    3d30:	vstmia	r8!, {d7}
    3d34:	b	3d14 <ReadDoubleData.part.0+0x9b8>
    3d38:	ldr	r3, [sp]
    3d3c:	mov	r8, #0
    3d40:	mov	r5, r8
    3d44:	add	r9, r3, #2048	; 0x800
    3d48:	sub	r3, r4, #256	; 0x100
    3d4c:	str	r3, [sp, #4]
    3d50:	mov	r2, #256	; 0x100
    3d54:	mov	r1, sl
    3d58:	ldr	r3, [r6]
    3d5c:	mov	r0, r7
    3d60:	sub	fp, r9, #2048	; 0x800
    3d64:	bl	1520 <fread@plt>
    3d68:	add	r5, r5, r0
    3d6c:	mov	r3, r7
    3d70:	mov	r0, r3
    3d74:	str	r3, [sp, #8]
    3d78:	bl	18cc <Mat_uint32Swap>
    3d7c:	vmov	s15, r0
    3d80:	ldr	r3, [sp, #8]
    3d84:	add	r3, r3, #4
    3d88:	vcvt.f64.u32	d7, s15
    3d8c:	vstmia	fp!, {d7}
    3d90:	cmp	fp, r9
    3d94:	bne	3d70 <ReadDoubleData.part.0+0xa14>
    3d98:	ldr	r3, [sp, #4]
    3d9c:	add	r8, r8, #256	; 0x100
    3da0:	add	r9, fp, #2048	; 0x800
    3da4:	cmp	r8, r3
    3da8:	blt	3d50 <ReadDoubleData.part.0+0x9f4>
    3dac:	sub	r3, r4, #256	; 0x100
    3db0:	sub	r3, r3, #1
    3db4:	lsr	r3, r3, #8
    3db8:	add	r8, r3, #1
    3dbc:	lsl	r3, r8, #8
    3dc0:	cmp	r4, r3
    3dc4:	ble	33e8 <ReadDoubleData.part.0+0x8c>
    3dc8:	sub	r4, r4, r3
    3dcc:	mov	r1, sl
    3dd0:	ldr	r3, [r6]
    3dd4:	mov	r2, r4
    3dd8:	mov	r0, r7
    3ddc:	bl	1520 <fread@plt>
    3de0:	ldr	r3, [sp]
    3de4:	add	r5, r5, r0
    3de8:	add	r6, r3, r8, lsl #11
    3dec:	mov	r8, #0
    3df0:	cmp	r4, r8
    3df4:	ble	33e8 <ReadDoubleData.part.0+0x8c>
    3df8:	add	r0, r7, r8, lsl #2
    3dfc:	add	r8, r8, #1
    3e00:	bl	18cc <Mat_uint32Swap>
    3e04:	vmov	s15, r0
    3e08:	vcvt.f64.u32	d7, s15
    3e0c:	vstmia	r6!, {d7}
    3e10:	b	3df0 <ReadDoubleData.part.0+0xa94>
    3e14:	cmp	r4, #256	; 0x100
    3e18:	bgt	3e54 <ReadDoubleData.part.0+0xaf8>
    3e1c:	mov	r1, r0
    3e20:	mov	r2, r4
    3e24:	mov	r0, r7
    3e28:	bl	1520 <fread@plt>
    3e2c:	ldr	r3, [sp]
    3e30:	mov	r5, r0
    3e34:	cmp	r4, r8
    3e38:	ble	33e8 <ReadDoubleData.part.0+0x8c>
    3e3c:	ldr	r2, [r7, r8, lsl #2]
    3e40:	add	r8, r8, #1
    3e44:	vmov	s15, r2
    3e48:	vcvt.f64.u32	d7, s15
    3e4c:	vstmia	r3!, {d7}
    3e50:	b	3e34 <ReadDoubleData.part.0+0xad8>
    3e54:	ldr	r3, [sp]
    3e58:	mov	r9, r8
    3e5c:	mov	r5, r8
    3e60:	add	fp, r3, #2048	; 0x800
    3e64:	sub	r3, r4, #256	; 0x100
    3e68:	str	r3, [sp, #4]
    3e6c:	mov	r2, #256	; 0x100
    3e70:	mov	r1, sl
    3e74:	ldr	r3, [r6]
    3e78:	mov	r0, r7
    3e7c:	bl	1520 <fread@plt>
    3e80:	add	r5, r5, r0
    3e84:	mov	r2, r7
    3e88:	sub	r3, fp, #2048	; 0x800
    3e8c:	vldmia	r2!, {s14}
    3e90:	vcvt.f64.u32	d7, s14
    3e94:	vstmia	r3!, {d7}
    3e98:	cmp	r3, fp
    3e9c:	bne	3e8c <ReadDoubleData.part.0+0xb30>
    3ea0:	add	fp, r3, #2048	; 0x800
    3ea4:	ldr	r3, [sp, #4]
    3ea8:	add	r9, r9, #256	; 0x100
    3eac:	cmp	r9, r3
    3eb0:	blt	3e6c <ReadDoubleData.part.0+0xb10>
    3eb4:	sub	r9, r4, #256	; 0x100
    3eb8:	sub	r9, r9, #1
    3ebc:	lsr	r9, r9, #8
    3ec0:	add	r9, r9, #1
    3ec4:	lsl	r3, r9, #8
    3ec8:	cmp	r4, r3
    3ecc:	ble	33e8 <ReadDoubleData.part.0+0x8c>
    3ed0:	sub	r4, r4, r3
    3ed4:	mov	r1, sl
    3ed8:	ldr	r3, [r6]
    3edc:	mov	r2, r4
    3ee0:	mov	r0, r7
    3ee4:	bl	1520 <fread@plt>
    3ee8:	ldr	r3, [sp]
    3eec:	add	r5, r5, r0
    3ef0:	add	r9, r3, r9, lsl #11
    3ef4:	cmp	r4, r8
    3ef8:	ble	33e8 <ReadDoubleData.part.0+0x8c>
    3efc:	ldr	r3, [r7, r8, lsl #2]
    3f00:	add	r8, r8, #1
    3f04:	vmov	s15, r3
    3f08:	vcvt.f64.u32	d7, s15
    3f0c:	vstmia	r9!, {d7}
    3f10:	b	3ef4 <ReadDoubleData.part.0+0xb98>
    3f14:	add	r7, sp, #24
    3f18:	ldr	r3, [r6]
    3f1c:	ldr	r9, [r6, #20]
    3f20:	cmp	r9, #0
    3f24:	beq	404c <ReadDoubleData.part.0+0xcf0>
    3f28:	cmp	r4, #256	; 0x100
    3f2c:	bgt	3f70 <ReadDoubleData.part.0+0xc14>
    3f30:	mov	r1, r0
    3f34:	mov	r2, r4
    3f38:	mov	r0, r7
    3f3c:	mov	r6, #0
    3f40:	bl	1520 <fread@plt>
    3f44:	ldr	r8, [sp]
    3f48:	mov	r5, r0
    3f4c:	cmp	r4, r6
    3f50:	ble	33e8 <ReadDoubleData.part.0+0x8c>
    3f54:	add	r0, r7, r6, lsl #1
    3f58:	add	r6, r6, #1
    3f5c:	bl	18fc <Mat_int16Swap>
    3f60:	vmov	s15, r0
    3f64:	vcvt.f64.s32	d7, s15
    3f68:	vstmia	r8!, {d7}
    3f6c:	b	3f4c <ReadDoubleData.part.0+0xbf0>
    3f70:	ldr	r3, [sp]
    3f74:	mov	r8, #0
    3f78:	mov	r5, r8
    3f7c:	add	r9, r3, #2048	; 0x800
    3f80:	sub	r3, r4, #256	; 0x100
    3f84:	str	r3, [sp, #4]
    3f88:	mov	r2, #256	; 0x100
    3f8c:	mov	r1, sl
    3f90:	ldr	r3, [r6]
    3f94:	mov	r0, r7
    3f98:	sub	fp, r9, #2048	; 0x800
    3f9c:	bl	1520 <fread@plt>
    3fa0:	add	r5, r5, r0
    3fa4:	mov	r3, r7
    3fa8:	mov	r0, r3
    3fac:	str	r3, [sp, #8]
    3fb0:	bl	18fc <Mat_int16Swap>
    3fb4:	vmov	s15, r0
    3fb8:	ldr	r3, [sp, #8]
    3fbc:	add	r3, r3, #2
    3fc0:	vcvt.f64.s32	d7, s15
    3fc4:	vstmia	fp!, {d7}
    3fc8:	cmp	fp, r9
    3fcc:	bne	3fa8 <ReadDoubleData.part.0+0xc4c>
    3fd0:	ldr	r3, [sp, #4]
    3fd4:	add	r8, r8, #256	; 0x100
    3fd8:	add	r9, fp, #2048	; 0x800
    3fdc:	cmp	r8, r3
    3fe0:	blt	3f88 <ReadDoubleData.part.0+0xc2c>
    3fe4:	sub	r3, r4, #256	; 0x100
    3fe8:	sub	r3, r3, #1
    3fec:	lsr	r3, r3, #8
    3ff0:	add	r8, r3, #1
    3ff4:	lsl	r3, r8, #8
    3ff8:	cmp	r4, r3
    3ffc:	ble	33e8 <ReadDoubleData.part.0+0x8c>
    4000:	sub	r4, r4, r3
    4004:	mov	r1, sl
    4008:	ldr	r3, [r6]
    400c:	mov	r2, r4
    4010:	mov	r0, r7
    4014:	bl	1520 <fread@plt>
    4018:	ldr	r3, [sp]
    401c:	add	r5, r5, r0
    4020:	add	r6, r3, r8, lsl #11
    4024:	mov	r8, #0
    4028:	cmp	r4, r8
    402c:	ble	33e8 <ReadDoubleData.part.0+0x8c>
    4030:	add	r0, r7, r8, lsl #1
    4034:	add	r8, r8, #1
    4038:	bl	18fc <Mat_int16Swap>
    403c:	vmov	s15, r0
    4040:	vcvt.f64.s32	d7, s15
    4044:	vstmia	r6!, {d7}
    4048:	b	4028 <ReadDoubleData.part.0+0xccc>
    404c:	cmp	r4, #256	; 0x100
    4050:	bgt	408c <ReadDoubleData.part.0+0xd30>
    4054:	mov	r1, r0
    4058:	mov	r2, r4
    405c:	mov	r0, r7
    4060:	bl	1520 <fread@plt>
    4064:	ldr	r3, [sp]
    4068:	mov	r5, r0
    406c:	cmp	r4, r9
    4070:	ble	33e8 <ReadDoubleData.part.0+0x8c>
    4074:	ldrsh	r2, [r7], #2
    4078:	add	r9, r9, #1
    407c:	vmov	s14, r2
    4080:	vcvt.f64.s32	d7, s14
    4084:	vstmia	r3!, {d7}
    4088:	b	406c <ReadDoubleData.part.0+0xd10>
    408c:	ldr	r3, [sp]
    4090:	mov	fp, r9
    4094:	mov	r5, r9
    4098:	add	r8, r3, #2048	; 0x800
    409c:	sub	r3, r4, #256	; 0x100
    40a0:	str	r3, [sp, #8]
    40a4:	mov	r2, #256	; 0x100
    40a8:	mov	r1, sl
    40ac:	ldr	r3, [r6]
    40b0:	mov	r0, r7
    40b4:	bl	1520 <fread@plt>
    40b8:	add	r5, r5, r0
    40bc:	sub	r3, r8, #2048	; 0x800
    40c0:	str	r7, [sp, #4]
    40c4:	mov	r2, r7
    40c8:	ldrsh	r1, [r2], #2
    40cc:	vmov	s14, r1
    40d0:	vcvt.f64.s32	d7, s14
    40d4:	vstmia	r3!, {d7}
    40d8:	cmp	r3, r8
    40dc:	bne	40c8 <ReadDoubleData.part.0+0xd6c>
    40e0:	add	r8, r3, #2048	; 0x800
    40e4:	ldr	r3, [sp, #8]
    40e8:	add	fp, fp, #256	; 0x100
    40ec:	cmp	fp, r3
    40f0:	blt	40a4 <ReadDoubleData.part.0+0xd48>
    40f4:	sub	r8, r4, #256	; 0x100
    40f8:	sub	r8, r8, #1
    40fc:	lsr	r8, r8, #8
    4100:	add	r8, r8, #1
    4104:	lsl	r3, r8, #8
    4108:	cmp	r4, r3
    410c:	ble	33e8 <ReadDoubleData.part.0+0x8c>
    4110:	sub	r4, r4, r3
    4114:	mov	r1, sl
    4118:	ldr	r3, [r6]
    411c:	mov	r2, r4
    4120:	mov	r0, r7
    4124:	bl	1520 <fread@plt>
    4128:	ldr	r3, [sp]
    412c:	add	r5, r5, r0
    4130:	add	r8, r3, r8, lsl #11
    4134:	cmp	r4, r9
    4138:	ble	33e8 <ReadDoubleData.part.0+0x8c>
    413c:	ldr	r3, [sp, #4]
    4140:	add	r9, r9, #1
    4144:	ldrsh	r2, [r3], #2
    4148:	vmov	s14, r2
    414c:	str	r3, [sp, #4]
    4150:	vcvt.f64.s32	d7, s14
    4154:	vstmia	r8!, {d7}
    4158:	b	4134 <ReadDoubleData.part.0+0xdd8>
    415c:	add	r7, sp, #24
    4160:	ldr	r3, [r6]
    4164:	ldr	r9, [r6, #20]
    4168:	cmp	r9, #0
    416c:	beq	4294 <ReadDoubleData.part.0+0xf38>
    4170:	cmp	r4, #256	; 0x100
    4174:	bgt	41b8 <ReadDoubleData.part.0+0xe5c>
    4178:	mov	r1, r0
    417c:	mov	r2, r4
    4180:	mov	r0, r7
    4184:	mov	r6, #0
    4188:	bl	1520 <fread@plt>
    418c:	ldr	r8, [sp]
    4190:	mov	r5, r0
    4194:	cmp	r4, r6
    4198:	ble	33e8 <ReadDoubleData.part.0+0x8c>
    419c:	add	r0, r7, r6, lsl #1
    41a0:	add	r6, r6, #1
    41a4:	bl	191c <Mat_uint16Swap>
    41a8:	vmov	s15, r0
    41ac:	vcvt.f64.u32	d7, s15
    41b0:	vstmia	r8!, {d7}
    41b4:	b	4194 <ReadDoubleData.part.0+0xe38>
    41b8:	ldr	r3, [sp]
    41bc:	mov	r8, #0
    41c0:	mov	r5, r8
    41c4:	add	r9, r3, #2048	; 0x800
    41c8:	sub	r3, r4, #256	; 0x100
    41cc:	str	r3, [sp, #4]
    41d0:	mov	r2, #256	; 0x100
    41d4:	mov	r1, sl
    41d8:	ldr	r3, [r6]
    41dc:	mov	r0, r7
    41e0:	sub	fp, r9, #2048	; 0x800
    41e4:	bl	1520 <fread@plt>
    41e8:	add	r5, r5, r0
    41ec:	mov	r3, r7
    41f0:	mov	r0, r3
    41f4:	str	r3, [sp, #8]
    41f8:	bl	191c <Mat_uint16Swap>
    41fc:	vmov	s15, r0
    4200:	ldr	r3, [sp, #8]
    4204:	add	r3, r3, #2
    4208:	vcvt.f64.u32	d7, s15
    420c:	vstmia	fp!, {d7}
    4210:	cmp	fp, r9
    4214:	bne	41f0 <ReadDoubleData.part.0+0xe94>
    4218:	ldr	r3, [sp, #4]
    421c:	add	r8, r8, #256	; 0x100
    4220:	add	r9, fp, #2048	; 0x800
    4224:	cmp	r8, r3
    4228:	blt	41d0 <ReadDoubleData.part.0+0xe74>
    422c:	sub	r3, r4, #256	; 0x100
    4230:	sub	r3, r3, #1
    4234:	lsr	r3, r3, #8
    4238:	add	r8, r3, #1
    423c:	lsl	r3, r8, #8
    4240:	cmp	r4, r3
    4244:	ble	33e8 <ReadDoubleData.part.0+0x8c>
    4248:	sub	r4, r4, r3
    424c:	mov	r1, sl
    4250:	ldr	r3, [r6]
    4254:	mov	r2, r4
    4258:	mov	r0, r7
    425c:	bl	1520 <fread@plt>
    4260:	ldr	r3, [sp]
    4264:	add	r5, r5, r0
    4268:	add	r6, r3, r8, lsl #11
    426c:	mov	r8, #0
    4270:	cmp	r4, r8
    4274:	ble	33e8 <ReadDoubleData.part.0+0x8c>
    4278:	add	r0, r7, r8, lsl #1
    427c:	add	r8, r8, #1
    4280:	bl	191c <Mat_uint16Swap>
    4284:	vmov	s15, r0
    4288:	vcvt.f64.u32	d7, s15
    428c:	vstmia	r6!, {d7}
    4290:	b	4270 <ReadDoubleData.part.0+0xf14>
    4294:	cmp	r4, #256	; 0x100
    4298:	bgt	42d4 <ReadDoubleData.part.0+0xf78>
    429c:	mov	r1, r0
    42a0:	mov	r2, r4
    42a4:	mov	r0, r7
    42a8:	bl	1520 <fread@plt>
    42ac:	ldr	r3, [sp]
    42b0:	mov	r5, r0
    42b4:	cmp	r4, r9
    42b8:	ble	33e8 <ReadDoubleData.part.0+0x8c>
    42bc:	ldrh	r2, [r7], #2
    42c0:	add	r9, r9, #1
    42c4:	vmov	s14, r2
    42c8:	vcvt.f64.u32	d7, s14
    42cc:	vstmia	r3!, {d7}
    42d0:	b	42b4 <ReadDoubleData.part.0+0xf58>
    42d4:	ldr	r3, [sp]
    42d8:	mov	fp, r9
    42dc:	mov	r5, r9
    42e0:	add	r8, r3, #2048	; 0x800
    42e4:	sub	r3, r4, #256	; 0x100
    42e8:	str	r3, [sp, #8]
    42ec:	mov	r2, #256	; 0x100
    42f0:	mov	r1, sl
    42f4:	ldr	r3, [r6]
    42f8:	mov	r0, r7
    42fc:	bl	1520 <fread@plt>
    4300:	add	r5, r5, r0
    4304:	sub	r3, r8, #2048	; 0x800
    4308:	str	r7, [sp, #4]
    430c:	mov	r2, r7
    4310:	ldrh	r1, [r2], #2
    4314:	vmov	s14, r1
    4318:	vcvt.f64.u32	d7, s14
    431c:	vstmia	r3!, {d7}
    4320:	cmp	r3, r8
    4324:	bne	4310 <ReadDoubleData.part.0+0xfb4>
    4328:	add	r8, r3, #2048	; 0x800
    432c:	ldr	r3, [sp, #8]
    4330:	add	fp, fp, #256	; 0x100
    4334:	cmp	fp, r3
    4338:	blt	42ec <ReadDoubleData.part.0+0xf90>
    433c:	sub	r8, r4, #256	; 0x100
    4340:	sub	r8, r8, #1
    4344:	lsr	r8, r8, #8
    4348:	add	r8, r8, #1
    434c:	lsl	r3, r8, #8
    4350:	cmp	r4, r3
    4354:	ble	33e8 <ReadDoubleData.part.0+0x8c>
    4358:	sub	r4, r4, r3
    435c:	mov	r1, sl
    4360:	ldr	r3, [r6]
    4364:	mov	r2, r4
    4368:	mov	r0, r7
    436c:	bl	1520 <fread@plt>
    4370:	ldr	r3, [sp]
    4374:	add	r5, r5, r0
    4378:	add	r8, r3, r8, lsl #11
    437c:	cmp	r4, r9
    4380:	ble	33e8 <ReadDoubleData.part.0+0x8c>
    4384:	ldr	r3, [sp, #4]
    4388:	add	r9, r9, #1
    438c:	ldrh	r2, [r3], #2
    4390:	vmov	s14, r2
    4394:	str	r3, [sp, #4]
    4398:	vcvt.f64.u32	d7, s14
    439c:	vstmia	r8!, {d7}
    43a0:	b	437c <ReadDoubleData.part.0+0x1020>
    43a4:	cmp	r4, #256	; 0x100
    43a8:	add	r7, sp, #24
    43ac:	bgt	43f0 <ReadDoubleData.part.0+0x1094>
    43b0:	mov	r2, r4
    43b4:	mov	r1, r0
    43b8:	ldr	r3, [r6]
    43bc:	mov	r0, r7
    43c0:	bl	1520 <fread@plt>
    43c4:	ldr	r2, [sp]
    43c8:	mov	r5, r0
    43cc:	mov	r3, #0
    43d0:	cmp	r4, r3
    43d4:	ble	33e8 <ReadDoubleData.part.0+0x8c>
    43d8:	ldrsb	r1, [r7, r3]
    43dc:	add	r3, r3, #1
    43e0:	vmov	s14, r1
    43e4:	vcvt.f64.s32	d7, s14
    43e8:	vstmia	r2!, {d7}
    43ec:	b	43d0 <ReadDoubleData.part.0+0x1074>
    43f0:	ldr	r3, [sp]
    43f4:	mov	r8, #0
    43f8:	sub	fp, r4, #256	; 0x100
    43fc:	mov	r5, r8
    4400:	add	r9, r3, #2048	; 0x800
    4404:	mov	r2, #256	; 0x100
    4408:	mov	r1, sl
    440c:	ldr	r3, [r6]
    4410:	mov	r0, r7
    4414:	bl	1520 <fread@plt>
    4418:	add	r5, r5, r0
    441c:	mov	r2, r7
    4420:	sub	r3, r9, #2048	; 0x800
    4424:	ldrsb	r1, [r2], #1
    4428:	vmov	s14, r1
    442c:	vcvt.f64.s32	d7, s14
    4430:	vstmia	r3!, {d7}
    4434:	cmp	r9, r3
    4438:	bne	4424 <ReadDoubleData.part.0+0x10c8>
    443c:	add	r8, r8, #256	; 0x100
    4440:	add	r9, r9, #2048	; 0x800
    4444:	cmp	r8, fp
    4448:	blt	4404 <ReadDoubleData.part.0+0x10a8>
    444c:	sub	r3, r4, #256	; 0x100
    4450:	sub	r3, r3, #1
    4454:	lsr	r3, r3, #8
    4458:	add	r8, r3, #1
    445c:	lsl	r3, r8, #8
    4460:	cmp	r4, r3
    4464:	ble	33e8 <ReadDoubleData.part.0+0x8c>
    4468:	sub	r4, r4, r3
    446c:	mov	r1, sl
    4470:	ldr	r3, [r6]
    4474:	mov	r2, r4
    4478:	mov	r0, r7
    447c:	bl	1520 <fread@plt>
    4480:	ldr	r3, [sp]
    4484:	add	r5, r5, r0
    4488:	mov	r2, #0
    448c:	add	r3, r3, r8, lsl #11
    4490:	cmp	r4, r2
    4494:	ble	33e8 <ReadDoubleData.part.0+0x8c>
    4498:	ldrsb	r1, [r7, r2]
    449c:	add	r2, r2, #1
    44a0:	vmov	s14, r1
    44a4:	vcvt.f64.s32	d7, s14
    44a8:	vstmia	r3!, {d7}
    44ac:	b	4490 <ReadDoubleData.part.0+0x1134>
    44b0:	cmp	r4, #256	; 0x100
    44b4:	add	r7, sp, #24
    44b8:	bgt	44fc <ReadDoubleData.part.0+0x11a0>
    44bc:	mov	r2, r4
    44c0:	mov	r1, r0
    44c4:	ldr	r3, [r6]
    44c8:	mov	r0, r7
    44cc:	bl	1520 <fread@plt>
    44d0:	ldr	r2, [sp]
    44d4:	mov	r5, r0
    44d8:	mov	r3, #0
    44dc:	cmp	r4, r3
    44e0:	ble	33e8 <ReadDoubleData.part.0+0x8c>
    44e4:	ldrb	r1, [r7, r3]
    44e8:	add	r3, r3, #1
    44ec:	vmov	s14, r1
    44f0:	vcvt.f64.u32	d7, s14
    44f4:	vstmia	r2!, {d7}
    44f8:	b	44dc <ReadDoubleData.part.0+0x1180>
    44fc:	ldr	r3, [sp]
    4500:	mov	r8, #0
    4504:	sub	fp, r4, #256	; 0x100
    4508:	mov	r5, r8
    450c:	add	r9, r3, #2048	; 0x800
    4510:	mov	r2, #256	; 0x100
    4514:	mov	r1, sl
    4518:	ldr	r3, [r6]
    451c:	mov	r0, r7
    4520:	bl	1520 <fread@plt>
    4524:	add	r5, r5, r0
    4528:	mov	r2, r7
    452c:	sub	r3, r9, #2048	; 0x800
    4530:	ldrb	r1, [r2], #1
    4534:	vmov	s14, r1
    4538:	vcvt.f64.u32	d7, s14
    453c:	vstmia	r3!, {d7}
    4540:	cmp	r3, r9
    4544:	bne	4530 <ReadDoubleData.part.0+0x11d4>
    4548:	add	r8, r8, #256	; 0x100
    454c:	add	r9, r3, #2048	; 0x800
    4550:	cmp	r8, fp
    4554:	blt	4510 <ReadDoubleData.part.0+0x11b4>
    4558:	sub	r3, r4, #256	; 0x100
    455c:	sub	r3, r3, #1
    4560:	lsr	r3, r3, #8
    4564:	add	r8, r3, #1
    4568:	lsl	r3, r8, #8
    456c:	cmp	r4, r3
    4570:	ble	33e8 <ReadDoubleData.part.0+0x8c>
    4574:	sub	r4, r4, r3
    4578:	mov	r1, sl
    457c:	ldr	r3, [r6]
    4580:	mov	r2, r4
    4584:	mov	r0, r7
    4588:	bl	1520 <fread@plt>
    458c:	ldr	r3, [sp]
    4590:	add	r5, r5, r0
    4594:	mov	r2, #0
    4598:	add	r3, r3, r8, lsl #11
    459c:	cmp	r4, r2
    45a0:	ble	33e8 <ReadDoubleData.part.0+0x8c>
    45a4:	ldrb	r1, [r7, r2]
    45a8:	add	r2, r2, #1
    45ac:	vmov	s14, r1
    45b0:	vcvt.f64.u32	d7, s14
    45b4:	vstmia	r3!, {d7}
    45b8:	b	459c <ReadDoubleData.part.0+0x1240>
    45bc:	mov	r0, #0
    45c0:	b	33ec <ReadDoubleData.part.0+0x90>

000045c4 <ReadSingleData.part.1>:
    45c4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    45c8:	sub	sp, sp, #2064	; 0x810
    45cc:	mov	r5, r2
    45d0:	sub	sp, sp, #12
    45d4:	mov	r4, r3
    45d8:	strd	r0, [sp]
    45dc:	mov	r0, r2
    45e0:	bl	1598 <Mat_SizeOf@plt>
    45e4:	sub	r3, r5, #1
    45e8:	mov	r6, r0
    45ec:	cmp	r3, #8
    45f0:	addls	pc, pc, r3, lsl #2
    45f4:	b	558c <ReadSingleData.part.1+0xfc8>
    45f8:	b	535c <ReadSingleData.part.1+0xd98>
    45fc:	b	5474 <ReadSingleData.part.1+0xeb0>
    4600:	b	4ec4 <ReadSingleData.part.1+0x900>
    4604:	b	5110 <ReadSingleData.part.1+0xb4c>
    4608:	b	4a6c <ReadSingleData.part.1+0x4a8>
    460c:	b	4c98 <ReadSingleData.part.1+0x6d4>
    4610:	b	4860 <ReadSingleData.part.1+0x29c>
    4614:	b	558c <ReadSingleData.part.1+0xfc8>
    4618:	b	461c <ReadSingleData.part.1+0x58>
    461c:	ldr	r3, [sp]
    4620:	add	r7, sp, #24
    4624:	ldr	r9, [r3, #20]
    4628:	ldr	r3, [r3]
    462c:	cmp	r9, #0
    4630:	beq	475c <ReadSingleData.part.1+0x198>
    4634:	cmp	r4, #256	; 0x100
    4638:	bgt	4688 <ReadSingleData.part.1+0xc4>
    463c:	mov	r1, r0
    4640:	mov	r2, r4
    4644:	mov	r0, r7
    4648:	mov	r9, #0
    464c:	bl	1520 <fread@plt>
    4650:	ldr	r8, [sp, #4]
    4654:	mov	r5, r0
    4658:	cmp	r4, r9
    465c:	bgt	4670 <ReadSingleData.part.1+0xac>
    4660:	mul	r0, r6, r5
    4664:	add	sp, sp, #2064	; 0x810
    4668:	add	sp, sp, #12
    466c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    4670:	add	r0, r7, r9, lsl #3
    4674:	add	r9, r9, #1
    4678:	bl	196c <Mat_doubleSwap>
    467c:	vcvt.f32.f64	s0, d0
    4680:	vstmia	r8!, {s0}
    4684:	b	4658 <ReadSingleData.part.1+0x94>
    4688:	ldr	r3, [sp, #4]
    468c:	mov	r8, #0
    4690:	sub	sl, r4, #256	; 0x100
    4694:	mov	r5, r8
    4698:	add	r9, r3, #1024	; 0x400
    469c:	ldr	r3, [sp]
    46a0:	mov	r2, #256	; 0x100
    46a4:	mov	r1, r6
    46a8:	mov	r0, r7
    46ac:	sub	fp, r9, #1024	; 0x400
    46b0:	ldr	r3, [r3]
    46b4:	bl	1520 <fread@plt>
    46b8:	add	r5, r5, r0
    46bc:	mov	r3, r7
    46c0:	mov	r0, r3
    46c4:	str	r3, [sp, #8]
    46c8:	bl	196c <Mat_doubleSwap>
    46cc:	vcvt.f32.f64	s0, d0
    46d0:	ldr	r3, [sp, #8]
    46d4:	add	r3, r3, #8
    46d8:	vstmia	fp!, {s0}
    46dc:	cmp	fp, r9
    46e0:	bne	46c0 <ReadSingleData.part.1+0xfc>
    46e4:	add	r8, r8, #256	; 0x100
    46e8:	add	r9, fp, #1024	; 0x400
    46ec:	cmp	r8, sl
    46f0:	blt	469c <ReadSingleData.part.1+0xd8>
    46f4:	sub	r8, r4, #256	; 0x100
    46f8:	sub	r8, r8, #1
    46fc:	lsr	r8, r8, #8
    4700:	add	r8, r8, #1
    4704:	lsl	r3, r8, #8
    4708:	cmp	r4, r3
    470c:	ble	4660 <ReadSingleData.part.1+0x9c>
    4710:	sub	r4, r4, r3
    4714:	ldr	r3, [sp]
    4718:	mov	r1, r6
    471c:	mov	r2, r4
    4720:	mov	r0, r7
    4724:	mov	r9, #0
    4728:	ldr	r3, [r3]
    472c:	bl	1520 <fread@plt>
    4730:	ldr	r3, [sp, #4]
    4734:	add	r5, r5, r0
    4738:	add	r8, r3, r8, lsl #10
    473c:	cmp	r4, r9
    4740:	ble	4660 <ReadSingleData.part.1+0x9c>
    4744:	add	r0, r7, r9, lsl #3
    4748:	add	r9, r9, #1
    474c:	bl	196c <Mat_doubleSwap>
    4750:	vcvt.f32.f64	s0, d0
    4754:	vstmia	r8!, {s0}
    4758:	b	473c <ReadSingleData.part.1+0x178>
    475c:	cmp	r4, #256	; 0x100
    4760:	bgt	4798 <ReadSingleData.part.1+0x1d4>
    4764:	mov	r1, r0
    4768:	mov	r2, r4
    476c:	mov	r0, r7
    4770:	bl	1520 <fread@plt>
    4774:	ldr	r8, [sp, #4]
    4778:	mov	r5, r0
    477c:	cmp	r4, r9
    4780:	ble	4660 <ReadSingleData.part.1+0x9c>
    4784:	vldmia	r7!, {d7}
    4788:	add	r9, r9, #1
    478c:	vcvt.f32.f64	s14, d7
    4790:	vstmia	r8!, {s14}
    4794:	b	477c <ReadSingleData.part.1+0x1b8>
    4798:	ldr	r3, [sp, #4]
    479c:	mov	fp, r9
    47a0:	mov	r5, r9
    47a4:	add	r8, r3, #1024	; 0x400
    47a8:	sub	r3, r4, #256	; 0x100
    47ac:	str	r3, [sp, #8]
    47b0:	ldr	r3, [sp]
    47b4:	mov	r2, #256	; 0x100
    47b8:	mov	r1, r6
    47bc:	mov	r0, r7
    47c0:	mov	sl, r7
    47c4:	ldr	r3, [r3]
    47c8:	bl	1520 <fread@plt>
    47cc:	add	r5, r5, r0
    47d0:	sub	r3, r8, #1024	; 0x400
    47d4:	mov	r2, r7
    47d8:	vldmia	r2!, {d7}
    47dc:	vcvt.f32.f64	s14, d7
    47e0:	vstmia	r3!, {s14}
    47e4:	cmp	r3, r8
    47e8:	bne	47d8 <ReadSingleData.part.1+0x214>
    47ec:	add	r8, r3, #1024	; 0x400
    47f0:	ldr	r3, [sp, #8]
    47f4:	add	fp, fp, #256	; 0x100
    47f8:	cmp	fp, r3
    47fc:	blt	47b0 <ReadSingleData.part.1+0x1ec>
    4800:	sub	r8, r4, #256	; 0x100
    4804:	sub	r8, r8, #1
    4808:	lsr	r8, r8, #8
    480c:	add	r8, r8, #1
    4810:	lsl	r3, r8, #8
    4814:	cmp	r4, r3
    4818:	ble	4660 <ReadSingleData.part.1+0x9c>
    481c:	sub	r4, r4, r3
    4820:	ldr	r3, [sp]
    4824:	mov	r1, r6
    4828:	mov	r2, r4
    482c:	mov	r0, r7
    4830:	ldr	r3, [r3]
    4834:	bl	1520 <fread@plt>
    4838:	ldr	r3, [sp, #4]
    483c:	add	r5, r5, r0
    4840:	add	r8, r3, r8, lsl #10
    4844:	cmp	r4, r9
    4848:	ble	4660 <ReadSingleData.part.1+0x9c>
    484c:	vldmia	sl!, {d7}
    4850:	add	r9, r9, #1
    4854:	vcvt.f32.f64	s14, d7
    4858:	vstmia	r8!, {s14}
    485c:	b	4844 <ReadSingleData.part.1+0x280>
    4860:	ldr	r3, [sp]
    4864:	add	r7, sp, #24
    4868:	ldr	r9, [r3, #20]
    486c:	ldr	r3, [r3]
    4870:	cmp	r9, #0
    4874:	beq	4974 <ReadSingleData.part.1+0x3b0>
    4878:	cmp	r4, #256	; 0x100
    487c:	movgt	r8, #0
    4880:	subgt	r9, r4, #256	; 0x100
    4884:	movgt	r5, r8
    4888:	bgt	48c4 <ReadSingleData.part.1+0x300>
    488c:	mov	r1, r0
    4890:	mov	r2, r4
    4894:	mov	r0, r7
    4898:	mov	r9, #0
    489c:	bl	1520 <fread@plt>
    48a0:	ldr	r8, [sp, #4]
    48a4:	mov	r5, r0
    48a8:	cmp	r4, r9
    48ac:	ble	4660 <ReadSingleData.part.1+0x9c>
    48b0:	add	r0, r7, r9, lsl #2
    48b4:	add	r9, r9, #1
    48b8:	bl	193c <Mat_floatSwap>
    48bc:	vstmia	r8!, {s0}
    48c0:	b	48a8 <ReadSingleData.part.1+0x2e4>
    48c4:	ldr	r3, [sp]
    48c8:	mov	r2, #256	; 0x100
    48cc:	mov	r1, r6
    48d0:	mov	r0, r7
    48d4:	mov	sl, #0
    48d8:	ldr	r3, [r3]
    48dc:	bl	1520 <fread@plt>
    48e0:	ldr	r3, [sp, #4]
    48e4:	add	r5, r5, r0
    48e8:	add	fp, r3, r8, lsl #2
    48ec:	add	r0, r7, sl
    48f0:	add	sl, sl, #4
    48f4:	bl	193c <Mat_floatSwap>
    48f8:	cmp	sl, #1024	; 0x400
    48fc:	vstmia	fp!, {s0}
    4900:	bne	48ec <ReadSingleData.part.1+0x328>
    4904:	add	r8, r8, #256	; 0x100
    4908:	cmp	r8, r9
    490c:	blt	48c4 <ReadSingleData.part.1+0x300>
    4910:	sub	r8, r4, #256	; 0x100
    4914:	sub	r8, r8, #1
    4918:	lsr	r8, r8, #8
    491c:	add	r8, r8, #1
    4920:	lsl	r3, r8, #8
    4924:	cmp	r4, r3
    4928:	ble	4660 <ReadSingleData.part.1+0x9c>
    492c:	sub	r4, r4, r3
    4930:	ldr	r3, [sp]
    4934:	mov	r1, r6
    4938:	mov	r2, r4
    493c:	mov	r0, r7
    4940:	mov	r9, #0
    4944:	ldr	r3, [r3]
    4948:	bl	1520 <fread@plt>
    494c:	ldr	r3, [sp, #4]
    4950:	add	r5, r5, r0
    4954:	add	r8, r3, r8, lsl #10
    4958:	cmp	r4, r9
    495c:	ble	4660 <ReadSingleData.part.1+0x9c>
    4960:	add	r0, r7, r9, lsl #2
    4964:	add	r9, r9, #1
    4968:	bl	193c <Mat_floatSwap>
    496c:	vstmia	r8!, {s0}
    4970:	b	4958 <ReadSingleData.part.1+0x394>
    4974:	cmp	r4, #256	; 0x100
    4978:	bgt	49ac <ReadSingleData.part.1+0x3e8>
    497c:	mov	r1, r0
    4980:	mov	r2, r4
    4984:	mov	r0, r7
    4988:	bl	1520 <fread@plt>
    498c:	ldr	r8, [sp, #4]
    4990:	mov	r5, r0
    4994:	cmp	r4, r9
    4998:	ble	4660 <ReadSingleData.part.1+0x9c>
    499c:	ldr	r3, [r7], #4
    49a0:	add	r9, r9, #1
    49a4:	str	r3, [r8], #4
    49a8:	b	4994 <ReadSingleData.part.1+0x3d0>
    49ac:	ldr	r3, [sp, #4]
    49b0:	mov	fp, r9
    49b4:	mov	r5, r9
    49b8:	add	r8, r3, #1024	; 0x400
    49bc:	sub	r3, r4, #256	; 0x100
    49c0:	str	r3, [sp, #8]
    49c4:	ldr	r3, [sp]
    49c8:	mov	r2, #256	; 0x100
    49cc:	mov	r1, r6
    49d0:	mov	r0, r7
    49d4:	mov	sl, r7
    49d8:	ldr	r3, [r3]
    49dc:	bl	1520 <fread@plt>
    49e0:	add	r5, r5, r0
    49e4:	sub	r3, r8, #1024	; 0x400
    49e8:	mov	r2, r7
    49ec:	ldr	r1, [r2], #4
    49f0:	str	r1, [r3], #4
    49f4:	cmp	r3, r8
    49f8:	bne	49ec <ReadSingleData.part.1+0x428>
    49fc:	add	r8, r3, #1024	; 0x400
    4a00:	ldr	r3, [sp, #8]
    4a04:	add	fp, fp, #256	; 0x100
    4a08:	cmp	fp, r3
    4a0c:	blt	49c4 <ReadSingleData.part.1+0x400>
    4a10:	sub	r8, r4, #256	; 0x100
    4a14:	sub	r8, r8, #1
    4a18:	lsr	r8, r8, #8
    4a1c:	add	r8, r8, #1
    4a20:	lsl	r3, r8, #8
    4a24:	cmp	r4, r3
    4a28:	ble	4660 <ReadSingleData.part.1+0x9c>
    4a2c:	sub	r4, r4, r3
    4a30:	ldr	r3, [sp]
    4a34:	mov	r1, r6
    4a38:	mov	r2, r4
    4a3c:	mov	r0, r7
    4a40:	ldr	r3, [r3]
    4a44:	bl	1520 <fread@plt>
    4a48:	ldr	r3, [sp, #4]
    4a4c:	add	r5, r5, r0
    4a50:	add	r8, r3, r8, lsl #10
    4a54:	cmp	r4, r9
    4a58:	ble	4660 <ReadSingleData.part.1+0x9c>
    4a5c:	ldr	r3, [sl], #4
    4a60:	add	r9, r9, #1
    4a64:	str	r3, [r8], #4
    4a68:	b	4a54 <ReadSingleData.part.1+0x490>
    4a6c:	ldr	r3, [sp]
    4a70:	add	r7, sp, #24
    4a74:	ldr	r8, [r3, #20]
    4a78:	ldr	r3, [r3]
    4a7c:	cmp	r8, #0
    4a80:	beq	4b98 <ReadSingleData.part.1+0x5d4>
    4a84:	cmp	r4, #256	; 0x100
    4a88:	movgt	r8, #0
    4a8c:	subgt	r9, r4, #256	; 0x100
    4a90:	movgt	r5, r8
    4a94:	bgt	4ad8 <ReadSingleData.part.1+0x514>
    4a98:	mov	r1, r0
    4a9c:	mov	r2, r4
    4aa0:	mov	r0, r7
    4aa4:	mov	r9, #0
    4aa8:	bl	1520 <fread@plt>
    4aac:	ldr	r8, [sp, #4]
    4ab0:	mov	r5, r0
    4ab4:	cmp	r4, r9
    4ab8:	ble	4660 <ReadSingleData.part.1+0x9c>
    4abc:	add	r0, r7, r9, lsl #2
    4ac0:	add	r9, r9, #1
    4ac4:	bl	189c <Mat_int32Swap>
    4ac8:	vmov	s15, r0
    4acc:	vcvt.f32.s32	s15, s15
    4ad0:	vstmia	r8!, {s15}
    4ad4:	b	4ab4 <ReadSingleData.part.1+0x4f0>
    4ad8:	ldr	r3, [sp]
    4adc:	mov	r2, #256	; 0x100
    4ae0:	mov	r1, r6
    4ae4:	mov	r0, r7
    4ae8:	mov	sl, #0
    4aec:	ldr	r3, [r3]
    4af0:	bl	1520 <fread@plt>
    4af4:	ldr	r3, [sp, #4]
    4af8:	add	r5, r5, r0
    4afc:	add	fp, r3, r8, lsl #2
    4b00:	add	r0, r7, sl
    4b04:	add	sl, sl, #4
    4b08:	bl	189c <Mat_int32Swap>
    4b0c:	vmov	s15, r0
    4b10:	cmp	sl, #1024	; 0x400
    4b14:	vcvt.f32.s32	s15, s15
    4b18:	vstmia	fp!, {s15}
    4b1c:	bne	4b00 <ReadSingleData.part.1+0x53c>
    4b20:	add	r8, r8, #256	; 0x100
    4b24:	cmp	r8, r9
    4b28:	blt	4ad8 <ReadSingleData.part.1+0x514>
    4b2c:	sub	r8, r4, #256	; 0x100
    4b30:	sub	r8, r8, #1
    4b34:	lsr	r8, r8, #8
    4b38:	add	r8, r8, #1
    4b3c:	lsl	r3, r8, #8
    4b40:	cmp	r4, r3
    4b44:	ble	4660 <ReadSingleData.part.1+0x9c>
    4b48:	sub	r4, r4, r3
    4b4c:	ldr	r3, [sp]
    4b50:	mov	r1, r6
    4b54:	mov	r2, r4
    4b58:	mov	r0, r7
    4b5c:	mov	r9, #0
    4b60:	ldr	r3, [r3]
    4b64:	bl	1520 <fread@plt>
    4b68:	ldr	r3, [sp, #4]
    4b6c:	add	r5, r5, r0
    4b70:	add	r8, r3, r8, lsl #10
    4b74:	cmp	r4, r9
    4b78:	ble	4660 <ReadSingleData.part.1+0x9c>
    4b7c:	add	r0, r7, r9, lsl #2
    4b80:	add	r9, r9, #1
    4b84:	bl	189c <Mat_int32Swap>
    4b88:	vmov	s15, r0
    4b8c:	vcvt.f32.s32	s15, s15
    4b90:	vstmia	r8!, {s15}
    4b94:	b	4b74 <ReadSingleData.part.1+0x5b0>
    4b98:	cmp	r4, #256	; 0x100
    4b9c:	bgt	4bd8 <ReadSingleData.part.1+0x614>
    4ba0:	mov	r1, r0
    4ba4:	mov	r2, r4
    4ba8:	mov	r0, r7
    4bac:	bl	1520 <fread@plt>
    4bb0:	ldr	r3, [sp, #4]
    4bb4:	mov	r5, r0
    4bb8:	cmp	r4, r8
    4bbc:	ble	4660 <ReadSingleData.part.1+0x9c>
    4bc0:	ldr	r2, [r7, r8, lsl #2]
    4bc4:	add	r8, r8, #1
    4bc8:	vmov	s15, r2
    4bcc:	vcvt.f32.s32	s15, s15
    4bd0:	vstmia	r3!, {s15}
    4bd4:	b	4bb8 <ReadSingleData.part.1+0x5f4>
    4bd8:	ldr	r3, [sp, #4]
    4bdc:	mov	r9, r8
    4be0:	mov	r5, r8
    4be4:	sub	fp, r4, #256	; 0x100
    4be8:	add	sl, r3, #1024	; 0x400
    4bec:	ldr	r3, [sp]
    4bf0:	mov	r2, #256	; 0x100
    4bf4:	mov	r1, r6
    4bf8:	mov	r0, r7
    4bfc:	ldr	r3, [r3]
    4c00:	bl	1520 <fread@plt>
    4c04:	add	r5, r5, r0
    4c08:	mov	r2, r7
    4c0c:	sub	r3, sl, #1024	; 0x400
    4c10:	vldmia	r2!, {s15}
    4c14:	vcvt.f32.s32	s15, s15
    4c18:	vstmia	r3!, {s15}
    4c1c:	cmp	r3, sl
    4c20:	bne	4c10 <ReadSingleData.part.1+0x64c>
    4c24:	add	r9, r9, #256	; 0x100
    4c28:	add	sl, r3, #1024	; 0x400
    4c2c:	cmp	r9, fp
    4c30:	blt	4bec <ReadSingleData.part.1+0x628>
    4c34:	sub	r9, r4, #256	; 0x100
    4c38:	sub	r9, r9, #1
    4c3c:	lsr	r9, r9, #8
    4c40:	add	r9, r9, #1
    4c44:	lsl	r3, r9, #8
    4c48:	cmp	r4, r3
    4c4c:	ble	4660 <ReadSingleData.part.1+0x9c>
    4c50:	sub	r4, r4, r3
    4c54:	ldr	r3, [sp]
    4c58:	mov	r1, r6
    4c5c:	mov	r2, r4
    4c60:	mov	r0, r7
    4c64:	ldr	r3, [r3]
    4c68:	bl	1520 <fread@plt>
    4c6c:	ldr	r3, [sp, #4]
    4c70:	add	r5, r5, r0
    4c74:	add	r9, r3, r9, lsl #10
    4c78:	cmp	r4, r8
    4c7c:	ble	4660 <ReadSingleData.part.1+0x9c>
    4c80:	ldr	r3, [r7, r8, lsl #2]
    4c84:	add	r8, r8, #1
    4c88:	vmov	s15, r3
    4c8c:	vcvt.f32.s32	s15, s15
    4c90:	vstmia	r9!, {s15}
    4c94:	b	4c78 <ReadSingleData.part.1+0x6b4>
    4c98:	ldr	r3, [sp]
    4c9c:	add	r7, sp, #24
    4ca0:	ldr	r8, [r3, #20]
    4ca4:	ldr	r3, [r3]
    4ca8:	cmp	r8, #0
    4cac:	beq	4dc4 <ReadSingleData.part.1+0x800>
    4cb0:	cmp	r4, #256	; 0x100
    4cb4:	movgt	r8, #0
    4cb8:	subgt	r9, r4, #256	; 0x100
    4cbc:	movgt	r5, r8
    4cc0:	bgt	4d04 <ReadSingleData.part.1+0x740>
    4cc4:	mov	r1, r0
    4cc8:	mov	r2, r4
    4ccc:	mov	r0, r7
    4cd0:	mov	r9, #0
    4cd4:	bl	1520 <fread@plt>
    4cd8:	ldr	r8, [sp, #4]
    4cdc:	mov	r5, r0
    4ce0:	cmp	r4, r9
    4ce4:	ble	4660 <ReadSingleData.part.1+0x9c>
    4ce8:	add	r0, r7, r9, lsl #2
    4cec:	add	r9, r9, #1
    4cf0:	bl	18cc <Mat_uint32Swap>
    4cf4:	vmov	s15, r0
    4cf8:	vcvt.f32.u32	s15, s15
    4cfc:	vstmia	r8!, {s15}
    4d00:	b	4ce0 <ReadSingleData.part.1+0x71c>
    4d04:	ldr	r3, [sp]
    4d08:	mov	r2, #256	; 0x100
    4d0c:	mov	r1, r6
    4d10:	mov	r0, r7
    4d14:	mov	sl, #0
    4d18:	ldr	r3, [r3]
    4d1c:	bl	1520 <fread@plt>
    4d20:	ldr	r3, [sp, #4]
    4d24:	add	r5, r5, r0
    4d28:	add	fp, r3, r8, lsl #2
    4d2c:	add	r0, r7, sl
    4d30:	add	sl, sl, #4
    4d34:	bl	18cc <Mat_uint32Swap>
    4d38:	vmov	s15, r0
    4d3c:	cmp	sl, #1024	; 0x400
    4d40:	vcvt.f32.u32	s15, s15
    4d44:	vstmia	fp!, {s15}
    4d48:	bne	4d2c <ReadSingleData.part.1+0x768>
    4d4c:	add	r8, r8, #256	; 0x100
    4d50:	cmp	r8, r9
    4d54:	blt	4d04 <ReadSingleData.part.1+0x740>
    4d58:	sub	r8, r4, #256	; 0x100
    4d5c:	sub	r8, r8, #1
    4d60:	lsr	r8, r8, #8
    4d64:	add	r8, r8, #1
    4d68:	lsl	r3, r8, #8
    4d6c:	cmp	r4, r3
    4d70:	ble	4660 <ReadSingleData.part.1+0x9c>
    4d74:	sub	r4, r4, r3
    4d78:	ldr	r3, [sp]
    4d7c:	mov	r1, r6
    4d80:	mov	r2, r4
    4d84:	mov	r0, r7
    4d88:	mov	r9, #0
    4d8c:	ldr	r3, [r3]
    4d90:	bl	1520 <fread@plt>
    4d94:	ldr	r3, [sp, #4]
    4d98:	add	r5, r5, r0
    4d9c:	add	r8, r3, r8, lsl #10
    4da0:	cmp	r4, r9
    4da4:	ble	4660 <ReadSingleData.part.1+0x9c>
    4da8:	add	r0, r7, r9, lsl #2
    4dac:	add	r9, r9, #1
    4db0:	bl	18cc <Mat_uint32Swap>
    4db4:	vmov	s15, r0
    4db8:	vcvt.f32.u32	s15, s15
    4dbc:	vstmia	r8!, {s15}
    4dc0:	b	4da0 <ReadSingleData.part.1+0x7dc>
    4dc4:	cmp	r4, #256	; 0x100
    4dc8:	bgt	4e04 <ReadSingleData.part.1+0x840>
    4dcc:	mov	r1, r0
    4dd0:	mov	r2, r4
    4dd4:	mov	r0, r7
    4dd8:	bl	1520 <fread@plt>
    4ddc:	ldr	r3, [sp, #4]
    4de0:	mov	r5, r0
    4de4:	cmp	r4, r8
    4de8:	ble	4660 <ReadSingleData.part.1+0x9c>
    4dec:	ldr	r2, [r7, r8, lsl #2]
    4df0:	add	r8, r8, #1
    4df4:	vmov	s15, r2
    4df8:	vcvt.f32.u32	s15, s15
    4dfc:	vstmia	r3!, {s15}
    4e00:	b	4de4 <ReadSingleData.part.1+0x820>
    4e04:	ldr	r3, [sp, #4]
    4e08:	mov	r9, r8
    4e0c:	mov	r5, r8
    4e10:	sub	fp, r4, #256	; 0x100
    4e14:	add	sl, r3, #1024	; 0x400
    4e18:	ldr	r3, [sp]
    4e1c:	mov	r2, #256	; 0x100
    4e20:	mov	r1, r6
    4e24:	mov	r0, r7
    4e28:	ldr	r3, [r3]
    4e2c:	bl	1520 <fread@plt>
    4e30:	add	r5, r5, r0
    4e34:	mov	r2, r7
    4e38:	sub	r3, sl, #1024	; 0x400
    4e3c:	vldmia	r2!, {s15}
    4e40:	vcvt.f32.u32	s15, s15
    4e44:	vstmia	r3!, {s15}
    4e48:	cmp	r3, sl
    4e4c:	bne	4e3c <ReadSingleData.part.1+0x878>
    4e50:	add	r9, r9, #256	; 0x100
    4e54:	add	sl, r3, #1024	; 0x400
    4e58:	cmp	r9, fp
    4e5c:	blt	4e18 <ReadSingleData.part.1+0x854>
    4e60:	sub	r9, r4, #256	; 0x100
    4e64:	sub	r9, r9, #1
    4e68:	lsr	r9, r9, #8
    4e6c:	add	r9, r9, #1
    4e70:	lsl	r3, r9, #8
    4e74:	cmp	r4, r3
    4e78:	ble	4660 <ReadSingleData.part.1+0x9c>
    4e7c:	sub	r4, r4, r3
    4e80:	ldr	r3, [sp]
    4e84:	mov	r1, r6
    4e88:	mov	r2, r4
    4e8c:	mov	r0, r7
    4e90:	ldr	r3, [r3]
    4e94:	bl	1520 <fread@plt>
    4e98:	ldr	r3, [sp, #4]
    4e9c:	add	r5, r5, r0
    4ea0:	add	r9, r3, r9, lsl #10
    4ea4:	cmp	r4, r8
    4ea8:	ble	4660 <ReadSingleData.part.1+0x9c>
    4eac:	ldr	r3, [r7, r8, lsl #2]
    4eb0:	add	r8, r8, #1
    4eb4:	vmov	s15, r3
    4eb8:	vcvt.f32.u32	s15, s15
    4ebc:	vstmia	r9!, {s15}
    4ec0:	b	4ea4 <ReadSingleData.part.1+0x8e0>
    4ec4:	ldr	r3, [sp]
    4ec8:	add	r7, sp, #24
    4ecc:	ldr	r9, [r3, #20]
    4ed0:	ldr	r3, [r3]
    4ed4:	cmp	r9, #0
    4ed8:	beq	5000 <ReadSingleData.part.1+0xa3c>
    4edc:	cmp	r4, #256	; 0x100
    4ee0:	bgt	4f24 <ReadSingleData.part.1+0x960>
    4ee4:	mov	r1, r0
    4ee8:	mov	r2, r4
    4eec:	mov	r0, r7
    4ef0:	mov	r9, #0
    4ef4:	bl	1520 <fread@plt>
    4ef8:	ldr	r8, [sp, #4]
    4efc:	mov	r5, r0
    4f00:	cmp	r4, r9
    4f04:	ble	4660 <ReadSingleData.part.1+0x9c>
    4f08:	add	r0, r7, r9, lsl #1
    4f0c:	add	r9, r9, #1
    4f10:	bl	18fc <Mat_int16Swap>
    4f14:	vmov	s15, r0
    4f18:	vcvt.f32.s32	s15, s15
    4f1c:	vstmia	r8!, {s15}
    4f20:	b	4f00 <ReadSingleData.part.1+0x93c>
    4f24:	ldr	r3, [sp, #4]
    4f28:	mov	r8, #0
    4f2c:	sub	sl, r4, #256	; 0x100
    4f30:	mov	r5, r8
    4f34:	add	r9, r3, #1024	; 0x400
    4f38:	ldr	r3, [sp]
    4f3c:	mov	r2, #256	; 0x100
    4f40:	mov	r1, r6
    4f44:	mov	r0, r7
    4f48:	sub	fp, r9, #1024	; 0x400
    4f4c:	ldr	r3, [r3]
    4f50:	bl	1520 <fread@plt>
    4f54:	add	r5, r5, r0
    4f58:	mov	r3, r7
    4f5c:	mov	r0, r3
    4f60:	str	r3, [sp, #8]
    4f64:	bl	18fc <Mat_int16Swap>
    4f68:	vmov	s15, r0
    4f6c:	ldr	r3, [sp, #8]
    4f70:	add	r3, r3, #2
    4f74:	vcvt.f32.s32	s15, s15
    4f78:	vstmia	fp!, {s15}
    4f7c:	cmp	fp, r9
    4f80:	bne	4f5c <ReadSingleData.part.1+0x998>
    4f84:	add	r8, r8, #256	; 0x100
    4f88:	add	r9, fp, #1024	; 0x400
    4f8c:	cmp	r8, sl
    4f90:	blt	4f38 <ReadSingleData.part.1+0x974>
    4f94:	sub	r8, r4, #256	; 0x100
    4f98:	sub	r8, r8, #1
    4f9c:	lsr	r8, r8, #8
    4fa0:	add	r8, r8, #1
    4fa4:	lsl	r3, r8, #8
    4fa8:	cmp	r4, r3
    4fac:	ble	4660 <ReadSingleData.part.1+0x9c>
    4fb0:	sub	r4, r4, r3
    4fb4:	ldr	r3, [sp]
    4fb8:	mov	r1, r6
    4fbc:	mov	r2, r4
    4fc0:	mov	r0, r7
    4fc4:	mov	r9, #0
    4fc8:	ldr	r3, [r3]
    4fcc:	bl	1520 <fread@plt>
    4fd0:	ldr	r3, [sp, #4]
    4fd4:	add	r5, r5, r0
    4fd8:	add	r8, r3, r8, lsl #10
    4fdc:	cmp	r4, r9
    4fe0:	ble	4660 <ReadSingleData.part.1+0x9c>
    4fe4:	add	r0, r7, r9, lsl #1
    4fe8:	add	r9, r9, #1
    4fec:	bl	18fc <Mat_int16Swap>
    4ff0:	vmov	s15, r0
    4ff4:	vcvt.f32.s32	s15, s15
    4ff8:	vstmia	r8!, {s15}
    4ffc:	b	4fdc <ReadSingleData.part.1+0xa18>
    5000:	cmp	r4, #256	; 0x100
    5004:	bgt	5040 <ReadSingleData.part.1+0xa7c>
    5008:	mov	r1, r0
    500c:	mov	r2, r4
    5010:	mov	r0, r7
    5014:	bl	1520 <fread@plt>
    5018:	ldr	r8, [sp, #4]
    501c:	mov	r5, r0
    5020:	cmp	r4, r9
    5024:	ble	4660 <ReadSingleData.part.1+0x9c>
    5028:	ldrsh	r3, [r7], #2
    502c:	add	r9, r9, #1
    5030:	vmov	s15, r3
    5034:	vcvt.f32.s32	s15, s15
    5038:	vstmia	r8!, {s15}
    503c:	b	5020 <ReadSingleData.part.1+0xa5c>
    5040:	ldr	r3, [sp, #4]
    5044:	mov	fp, r9
    5048:	mov	r5, r9
    504c:	add	r8, r3, #1024	; 0x400
    5050:	sub	r3, r4, #256	; 0x100
    5054:	str	r3, [sp, #8]
    5058:	ldr	r3, [sp]
    505c:	mov	r2, #256	; 0x100
    5060:	mov	r1, r6
    5064:	mov	r0, r7
    5068:	mov	sl, r7
    506c:	ldr	r3, [r3]
    5070:	bl	1520 <fread@plt>
    5074:	add	r5, r5, r0
    5078:	sub	r3, r8, #1024	; 0x400
    507c:	mov	r2, r7
    5080:	ldrsh	r1, [r2], #2
    5084:	vmov	s15, r1
    5088:	vcvt.f32.s32	s15, s15
    508c:	vstmia	r3!, {s15}
    5090:	cmp	r3, r8
    5094:	bne	5080 <ReadSingleData.part.1+0xabc>
    5098:	add	r8, r3, #1024	; 0x400
    509c:	ldr	r3, [sp, #8]
    50a0:	add	fp, fp, #256	; 0x100
    50a4:	cmp	fp, r3
    50a8:	blt	5058 <ReadSingleData.part.1+0xa94>
    50ac:	sub	r8, r4, #256	; 0x100
    50b0:	sub	r8, r8, #1
    50b4:	lsr	r8, r8, #8
    50b8:	add	r8, r8, #1
    50bc:	lsl	r3, r8, #8
    50c0:	cmp	r4, r3
    50c4:	ble	4660 <ReadSingleData.part.1+0x9c>
    50c8:	sub	r4, r4, r3
    50cc:	ldr	r3, [sp]
    50d0:	mov	r1, r6
    50d4:	mov	r2, r4
    50d8:	mov	r0, r7
    50dc:	ldr	r3, [r3]
    50e0:	bl	1520 <fread@plt>
    50e4:	ldr	r3, [sp, #4]
    50e8:	add	r5, r5, r0
    50ec:	add	r8, r3, r8, lsl #10
    50f0:	cmp	r4, r9
    50f4:	ble	4660 <ReadSingleData.part.1+0x9c>
    50f8:	ldrsh	r3, [sl], #2
    50fc:	add	r9, r9, #1
    5100:	vmov	s15, r3
    5104:	vcvt.f32.s32	s15, s15
    5108:	vstmia	r8!, {s15}
    510c:	b	50f0 <ReadSingleData.part.1+0xb2c>
    5110:	ldr	r3, [sp]
    5114:	add	r7, sp, #24
    5118:	ldr	r9, [r3, #20]
    511c:	ldr	r3, [r3]
    5120:	cmp	r9, #0
    5124:	beq	524c <ReadSingleData.part.1+0xc88>
    5128:	cmp	r4, #256	; 0x100
    512c:	bgt	5170 <ReadSingleData.part.1+0xbac>
    5130:	mov	r1, r0
    5134:	mov	r2, r4
    5138:	mov	r0, r7
    513c:	mov	r9, #0
    5140:	bl	1520 <fread@plt>
    5144:	ldr	r8, [sp, #4]
    5148:	mov	r5, r0
    514c:	cmp	r4, r9
    5150:	ble	4660 <ReadSingleData.part.1+0x9c>
    5154:	add	r0, r7, r9, lsl #1
    5158:	add	r9, r9, #1
    515c:	bl	191c <Mat_uint16Swap>
    5160:	vmov	s15, r0
    5164:	vcvt.f32.u32	s15, s15
    5168:	vstmia	r8!, {s15}
    516c:	b	514c <ReadSingleData.part.1+0xb88>
    5170:	ldr	r3, [sp, #4]
    5174:	mov	r8, #0
    5178:	sub	sl, r4, #256	; 0x100
    517c:	mov	r5, r8
    5180:	add	r9, r3, #1024	; 0x400
    5184:	ldr	r3, [sp]
    5188:	mov	r2, #256	; 0x100
    518c:	mov	r1, r6
    5190:	mov	r0, r7
    5194:	sub	fp, r9, #1024	; 0x400
    5198:	ldr	r3, [r3]
    519c:	bl	1520 <fread@plt>
    51a0:	add	r5, r5, r0
    51a4:	mov	r3, r7
    51a8:	mov	r0, r3
    51ac:	str	r3, [sp, #8]
    51b0:	bl	191c <Mat_uint16Swap>
    51b4:	vmov	s15, r0
    51b8:	ldr	r3, [sp, #8]
    51bc:	add	r3, r3, #2
    51c0:	vcvt.f32.u32	s15, s15
    51c4:	vstmia	fp!, {s15}
    51c8:	cmp	fp, r9
    51cc:	bne	51a8 <ReadSingleData.part.1+0xbe4>
    51d0:	add	r8, r8, #256	; 0x100
    51d4:	add	r9, fp, #1024	; 0x400
    51d8:	cmp	r8, sl
    51dc:	blt	5184 <ReadSingleData.part.1+0xbc0>
    51e0:	sub	r8, r4, #256	; 0x100
    51e4:	sub	r8, r8, #1
    51e8:	lsr	r8, r8, #8
    51ec:	add	r8, r8, #1
    51f0:	lsl	r3, r8, #8
    51f4:	cmp	r4, r3
    51f8:	ble	4660 <ReadSingleData.part.1+0x9c>
    51fc:	sub	r4, r4, r3
    5200:	ldr	r3, [sp]
    5204:	mov	r1, r6
    5208:	mov	r2, r4
    520c:	mov	r0, r7
    5210:	mov	r9, #0
    5214:	ldr	r3, [r3]
    5218:	bl	1520 <fread@plt>
    521c:	ldr	r3, [sp, #4]
    5220:	add	r5, r5, r0
    5224:	add	r8, r3, r8, lsl #10
    5228:	cmp	r4, r9
    522c:	ble	4660 <ReadSingleData.part.1+0x9c>
    5230:	add	r0, r7, r9, lsl #1
    5234:	add	r9, r9, #1
    5238:	bl	191c <Mat_uint16Swap>
    523c:	vmov	s15, r0
    5240:	vcvt.f32.u32	s15, s15
    5244:	vstmia	r8!, {s15}
    5248:	b	5228 <ReadSingleData.part.1+0xc64>
    524c:	cmp	r4, #256	; 0x100
    5250:	bgt	528c <ReadSingleData.part.1+0xcc8>
    5254:	mov	r1, r0
    5258:	mov	r2, r4
    525c:	mov	r0, r7
    5260:	bl	1520 <fread@plt>
    5264:	ldr	r8, [sp, #4]
    5268:	mov	r5, r0
    526c:	cmp	r4, r9
    5270:	ble	4660 <ReadSingleData.part.1+0x9c>
    5274:	ldrh	r3, [r7], #2
    5278:	add	r9, r9, #1
    527c:	vmov	s15, r3
    5280:	vcvt.f32.u32	s15, s15
    5284:	vstmia	r8!, {s15}
    5288:	b	526c <ReadSingleData.part.1+0xca8>
    528c:	ldr	r3, [sp, #4]
    5290:	mov	fp, r9
    5294:	mov	r5, r9
    5298:	add	r8, r3, #1024	; 0x400
    529c:	sub	r3, r4, #256	; 0x100
    52a0:	str	r3, [sp, #8]
    52a4:	ldr	r3, [sp]
    52a8:	mov	r2, #256	; 0x100
    52ac:	mov	r1, r6
    52b0:	mov	r0, r7
    52b4:	mov	sl, r7
    52b8:	ldr	r3, [r3]
    52bc:	bl	1520 <fread@plt>
    52c0:	add	r5, r5, r0
    52c4:	sub	r3, r8, #1024	; 0x400
    52c8:	mov	r2, r7
    52cc:	ldrh	r1, [r2], #2
    52d0:	vmov	s15, r1
    52d4:	vcvt.f32.u32	s15, s15
    52d8:	vstmia	r3!, {s15}
    52dc:	cmp	r3, r8
    52e0:	bne	52cc <ReadSingleData.part.1+0xd08>
    52e4:	add	r8, r3, #1024	; 0x400
    52e8:	ldr	r3, [sp, #8]
    52ec:	add	fp, fp, #256	; 0x100
    52f0:	cmp	fp, r3
    52f4:	blt	52a4 <ReadSingleData.part.1+0xce0>
    52f8:	sub	r8, r4, #256	; 0x100
    52fc:	sub	r8, r8, #1
    5300:	lsr	r8, r8, #8
    5304:	add	r8, r8, #1
    5308:	lsl	r3, r8, #8
    530c:	cmp	r4, r3
    5310:	ble	4660 <ReadSingleData.part.1+0x9c>
    5314:	sub	r4, r4, r3
    5318:	ldr	r3, [sp]
    531c:	mov	r1, r6
    5320:	mov	r2, r4
    5324:	mov	r0, r7
    5328:	ldr	r3, [r3]
    532c:	bl	1520 <fread@plt>
    5330:	ldr	r3, [sp, #4]
    5334:	add	r5, r5, r0
    5338:	add	r8, r3, r8, lsl #10
    533c:	cmp	r4, r9
    5340:	ble	4660 <ReadSingleData.part.1+0x9c>
    5344:	ldrh	r3, [sl], #2
    5348:	add	r9, r9, #1
    534c:	vmov	s15, r3
    5350:	vcvt.f32.u32	s15, s15
    5354:	vstmia	r8!, {s15}
    5358:	b	533c <ReadSingleData.part.1+0xd78>
    535c:	cmp	r4, #256	; 0x100
    5360:	add	r7, sp, #24
    5364:	bgt	53ac <ReadSingleData.part.1+0xde8>
    5368:	ldr	r3, [sp]
    536c:	mov	r1, r0
    5370:	mov	r2, r4
    5374:	mov	r0, r7
    5378:	ldr	r3, [r3]
    537c:	bl	1520 <fread@plt>
    5380:	ldr	r8, [sp, #4]
    5384:	mov	r5, r0
    5388:	mov	r3, #0
    538c:	cmp	r4, r3
    5390:	ble	4660 <ReadSingleData.part.1+0x9c>
    5394:	ldrsb	r2, [r7, r3]
    5398:	add	r3, r3, #1
    539c:	vmov	s15, r2
    53a0:	vcvt.f32.s32	s15, s15
    53a4:	vstmia	r8!, {s15}
    53a8:	b	538c <ReadSingleData.part.1+0xdc8>
    53ac:	ldr	r3, [sp, #4]
    53b0:	mov	r8, #0
    53b4:	sub	sl, r4, #256	; 0x100
    53b8:	mov	r5, r8
    53bc:	add	r9, r3, #1024	; 0x400
    53c0:	ldr	r3, [sp]
    53c4:	mov	r2, #256	; 0x100
    53c8:	mov	r1, r6
    53cc:	mov	r0, r7
    53d0:	ldr	r3, [r3]
    53d4:	bl	1520 <fread@plt>
    53d8:	add	r5, r5, r0
    53dc:	mov	r2, r7
    53e0:	sub	r3, r9, #1024	; 0x400
    53e4:	ldrsb	r1, [r2], #1
    53e8:	vmov	s15, r1
    53ec:	vcvt.f32.s32	s15, s15
    53f0:	vstmia	r3!, {s15}
    53f4:	cmp	r3, r9
    53f8:	bne	53e4 <ReadSingleData.part.1+0xe20>
    53fc:	add	r8, r8, #256	; 0x100
    5400:	add	r9, r3, #1024	; 0x400
    5404:	cmp	r8, sl
    5408:	blt	53c0 <ReadSingleData.part.1+0xdfc>
    540c:	sub	r8, r4, #256	; 0x100
    5410:	sub	r8, r8, #1
    5414:	lsr	r8, r8, #8
    5418:	add	r8, r8, #1
    541c:	lsl	r3, r8, #8
    5420:	cmp	r4, r3
    5424:	ble	4660 <ReadSingleData.part.1+0x9c>
    5428:	sub	r4, r4, r3
    542c:	ldr	r3, [sp]
    5430:	mov	r1, r6
    5434:	mov	r2, r4
    5438:	mov	r0, r7
    543c:	ldr	r3, [r3]
    5440:	bl	1520 <fread@plt>
    5444:	ldr	r3, [sp, #4]
    5448:	add	r5, r5, r0
    544c:	add	r8, r3, r8, lsl #10
    5450:	mov	r3, #0
    5454:	cmp	r4, r3
    5458:	ble	4660 <ReadSingleData.part.1+0x9c>
    545c:	ldrsb	r2, [r7, r3]
    5460:	add	r3, r3, #1
    5464:	vmov	s15, r2
    5468:	vcvt.f32.s32	s15, s15
    546c:	vstmia	r8!, {s15}
    5470:	b	5454 <ReadSingleData.part.1+0xe90>
    5474:	cmp	r4, #256	; 0x100
    5478:	add	r7, sp, #24
    547c:	bgt	54c4 <ReadSingleData.part.1+0xf00>
    5480:	ldr	r3, [sp]
    5484:	mov	r1, r0
    5488:	mov	r2, r4
    548c:	mov	r0, r7
    5490:	ldr	r3, [r3]
    5494:	bl	1520 <fread@plt>
    5498:	ldr	r8, [sp, #4]
    549c:	mov	r5, r0
    54a0:	mov	r3, #0
    54a4:	cmp	r4, r3
    54a8:	ble	4660 <ReadSingleData.part.1+0x9c>
    54ac:	ldrb	r2, [r7, r3]
    54b0:	add	r3, r3, #1
    54b4:	vmov	s15, r2
    54b8:	vcvt.f32.u32	s15, s15
    54bc:	vstmia	r8!, {s15}
    54c0:	b	54a4 <ReadSingleData.part.1+0xee0>
    54c4:	ldr	r3, [sp, #4]
    54c8:	mov	r8, #0
    54cc:	sub	sl, r4, #256	; 0x100
    54d0:	mov	r5, r8
    54d4:	add	r9, r3, #1024	; 0x400
    54d8:	ldr	r3, [sp]
    54dc:	mov	r2, #256	; 0x100
    54e0:	mov	r1, r6
    54e4:	mov	r0, r7
    54e8:	ldr	r3, [r3]
    54ec:	bl	1520 <fread@plt>
    54f0:	add	r5, r5, r0
    54f4:	mov	r2, r7
    54f8:	sub	r3, r9, #1024	; 0x400
    54fc:	ldrb	r1, [r2], #1
    5500:	vmov	s15, r1
    5504:	vcvt.f32.u32	s15, s15
    5508:	vstmia	r3!, {s15}
    550c:	cmp	r3, r9
    5510:	bne	54fc <ReadSingleData.part.1+0xf38>
    5514:	add	r8, r8, #256	; 0x100
    5518:	add	r9, r3, #1024	; 0x400
    551c:	cmp	r8, sl
    5520:	blt	54d8 <ReadSingleData.part.1+0xf14>
    5524:	sub	r8, r4, #256	; 0x100
    5528:	sub	r8, r8, #1
    552c:	lsr	r8, r8, #8
    5530:	add	r8, r8, #1
    5534:	lsl	r3, r8, #8
    5538:	cmp	r4, r3
    553c:	ble	4660 <ReadSingleData.part.1+0x9c>
    5540:	sub	r4, r4, r3
    5544:	ldr	r3, [sp]
    5548:	mov	r1, r6
    554c:	mov	r2, r4
    5550:	mov	r0, r7
    5554:	ldr	r3, [r3]
    5558:	bl	1520 <fread@plt>
    555c:	ldr	r3, [sp, #4]
    5560:	add	r5, r5, r0
    5564:	add	r8, r3, r8, lsl #10
    5568:	mov	r3, #0
    556c:	cmp	r4, r3
    5570:	ble	4660 <ReadSingleData.part.1+0x9c>
    5574:	ldrb	r2, [r7, r3]
    5578:	add	r3, r3, #1
    557c:	vmov	s15, r2
    5580:	vcvt.f32.u32	s15, s15
    5584:	vstmia	r8!, {s15}
    5588:	b	556c <ReadSingleData.part.1+0xfa8>
    558c:	cmp	r5, #12
    5590:	bne	57d4 <ReadSingleData.part.1+0x1210>
    5594:	ldr	r3, [sp]
    5598:	add	fp, sp, #24
    559c:	ldr	sl, [r3, #20]
    55a0:	ldr	r3, [r3]
    55a4:	cmp	sl, #0
    55a8:	beq	56c4 <ReadSingleData.part.1+0x1100>
    55ac:	cmp	r4, #256	; 0x100
    55b0:	bgt	55f0 <ReadSingleData.part.1+0x102c>
    55b4:	mov	r1, r0
    55b8:	mov	r2, r4
    55bc:	mov	r0, fp
    55c0:	mov	r7, #0
    55c4:	bl	1520 <fread@plt>
    55c8:	ldr	r8, [sp, #4]
    55cc:	mov	r5, r0
    55d0:	cmp	r4, r7
    55d4:	ble	4660 <ReadSingleData.part.1+0x9c>
    55d8:	add	r0, fp, r7, lsl #3
    55dc:	add	r7, r7, #1
    55e0:	bl	17ec <Mat_int64Swap>
    55e4:	bl	3e764 <__aeabi_l2f>
    55e8:	str	r0, [r8], #4
    55ec:	b	55d0 <ReadSingleData.part.1+0x100c>
    55f0:	ldr	r3, [sp, #4]
    55f4:	mov	r7, #0
    55f8:	sub	r9, r4, #256	; 0x100
    55fc:	mov	r5, r7
    5600:	add	r8, r3, #1024	; 0x400
    5604:	ldr	r3, [sp]
    5608:	mov	r2, #256	; 0x100
    560c:	mov	r1, r6
    5610:	mov	r0, fp
    5614:	sub	sl, r8, #1024	; 0x400
    5618:	ldr	r3, [r3]
    561c:	bl	1520 <fread@plt>
    5620:	add	r5, r5, r0
    5624:	mov	r3, fp
    5628:	mov	r0, r3
    562c:	str	r3, [sp, #8]
    5630:	bl	17ec <Mat_int64Swap>
    5634:	bl	3e764 <__aeabi_l2f>
    5638:	ldr	r3, [sp, #8]
    563c:	str	r0, [sl], #4
    5640:	cmp	r8, sl
    5644:	add	r3, r3, #8
    5648:	bne	5628 <ReadSingleData.part.1+0x1064>
    564c:	add	r7, r7, #256	; 0x100
    5650:	add	r8, r8, #1024	; 0x400
    5654:	cmp	r7, r9
    5658:	blt	5604 <ReadSingleData.part.1+0x1040>
    565c:	sub	r8, r4, #256	; 0x100
    5660:	sub	r8, r8, #1
    5664:	lsr	r8, r8, #8
    5668:	add	r8, r8, #1
    566c:	lsl	r3, r8, #8
    5670:	cmp	r4, r3
    5674:	ble	4660 <ReadSingleData.part.1+0x9c>
    5678:	sub	r4, r4, r3
    567c:	ldr	r3, [sp]
    5680:	mov	r1, r6
    5684:	mov	r2, r4
    5688:	mov	r0, fp
    568c:	mov	r7, #0
    5690:	ldr	r3, [r3]
    5694:	bl	1520 <fread@plt>
    5698:	ldr	r3, [sp, #4]
    569c:	add	r5, r5, r0
    56a0:	add	r8, r3, r8, lsl #10
    56a4:	cmp	r4, r7
    56a8:	ble	4660 <ReadSingleData.part.1+0x9c>
    56ac:	add	r0, fp, r7, lsl #3
    56b0:	add	r7, r7, #1
    56b4:	bl	17ec <Mat_int64Swap>
    56b8:	bl	3e764 <__aeabi_l2f>
    56bc:	str	r0, [r8], #4
    56c0:	b	56a4 <ReadSingleData.part.1+0x10e0>
    56c4:	cmp	r4, #256	; 0x100
    56c8:	bgt	5700 <ReadSingleData.part.1+0x113c>
    56cc:	mov	r1, r0
    56d0:	mov	r2, r4
    56d4:	mov	r0, fp
    56d8:	bl	1520 <fread@plt>
    56dc:	ldr	r8, [sp, #4]
    56e0:	mov	r5, r0
    56e4:	cmp	r4, sl
    56e8:	ble	4660 <ReadSingleData.part.1+0x9c>
    56ec:	ldrd	r0, [fp], #8
    56f0:	add	sl, sl, #1
    56f4:	bl	3e764 <__aeabi_l2f>
    56f8:	str	r0, [r8], #4
    56fc:	b	56e4 <ReadSingleData.part.1+0x1120>
    5700:	ldr	r3, [sp, #4]
    5704:	mov	r8, sl
    5708:	mov	r5, sl
    570c:	add	r7, r3, #1024	; 0x400
    5710:	sub	r3, r4, #256	; 0x100
    5714:	str	r3, [sp, #8]
    5718:	ldr	r3, [sp]
    571c:	mov	r2, #256	; 0x100
    5720:	mov	r1, r6
    5724:	mov	r0, fp
    5728:	mov	r9, fp
    572c:	ldr	r3, [r3]
    5730:	bl	1520 <fread@plt>
    5734:	add	r5, r5, r0
    5738:	sub	r3, r7, #1024	; 0x400
    573c:	mov	r2, fp
    5740:	ldrd	r0, [r2], #8
    5744:	strd	r2, [sp, #12]
    5748:	str	r2, [sp, #20]
    574c:	bl	3e764 <__aeabi_l2f>
    5750:	ldrd	r2, [sp, #12]
    5754:	str	r0, [r3], #4
    5758:	cmp	r7, r3
    575c:	bne	5740 <ReadSingleData.part.1+0x117c>
    5760:	ldr	r3, [sp, #8]
    5764:	add	r8, r8, #256	; 0x100
    5768:	add	r7, r7, #1024	; 0x400
    576c:	cmp	r8, r3
    5770:	blt	5718 <ReadSingleData.part.1+0x1154>
    5774:	sub	r8, r4, #256	; 0x100
    5778:	sub	r8, r8, #1
    577c:	lsr	r8, r8, #8
    5780:	add	r8, r8, #1
    5784:	lsl	r3, r8, #8
    5788:	cmp	r4, r3
    578c:	ble	4660 <ReadSingleData.part.1+0x9c>
    5790:	sub	r4, r4, r3
    5794:	ldr	r3, [sp]
    5798:	mov	r1, r6
    579c:	mov	r2, r4
    57a0:	mov	r0, fp
    57a4:	ldr	r3, [r3]
    57a8:	bl	1520 <fread@plt>
    57ac:	ldr	r3, [sp, #4]
    57b0:	add	r5, r5, r0
    57b4:	add	r8, r3, r8, lsl #10
    57b8:	cmp	r4, sl
    57bc:	ble	4660 <ReadSingleData.part.1+0x9c>
    57c0:	ldrd	r0, [r9], #8
    57c4:	add	sl, sl, #1
    57c8:	bl	3e764 <__aeabi_l2f>
    57cc:	str	r0, [r8], #4
    57d0:	b	57b8 <ReadSingleData.part.1+0x11f4>
    57d4:	cmp	r5, #13
    57d8:	movne	r5, #0
    57dc:	bne	4660 <ReadSingleData.part.1+0x9c>
    57e0:	ldr	r3, [sp]
    57e4:	add	sl, sp, #24
    57e8:	ldr	r7, [r3, #20]
    57ec:	ldr	r3, [r3]
    57f0:	cmp	r7, #0
    57f4:	beq	5910 <ReadSingleData.part.1+0x134c>
    57f8:	cmp	r4, #256	; 0x100
    57fc:	bgt	583c <ReadSingleData.part.1+0x1278>
    5800:	mov	r1, r0
    5804:	mov	r2, r4
    5808:	mov	r0, sl
    580c:	mov	r7, #0
    5810:	bl	1520 <fread@plt>
    5814:	ldr	r8, [sp, #4]
    5818:	mov	r5, r0
    581c:	cmp	r4, r7
    5820:	ble	4660 <ReadSingleData.part.1+0x9c>
    5824:	add	r0, sl, r7, lsl #3
    5828:	add	r7, r7, #1
    582c:	bl	1844 <Mat_uint64Swap>
    5830:	bl	3e754 <__aeabi_ul2f>
    5834:	str	r0, [r8], #4
    5838:	b	581c <ReadSingleData.part.1+0x1258>
    583c:	ldr	r3, [sp, #4]
    5840:	mov	r7, #0
    5844:	sub	r9, r4, #256	; 0x100
    5848:	mov	r5, r7
    584c:	add	r8, r3, #1024	; 0x400
    5850:	ldr	r3, [sp]
    5854:	mov	r2, #256	; 0x100
    5858:	mov	r1, r6
    585c:	mov	r0, sl
    5860:	sub	fp, r8, #1024	; 0x400
    5864:	ldr	r3, [r3]
    5868:	bl	1520 <fread@plt>
    586c:	add	r5, r5, r0
    5870:	mov	r3, sl
    5874:	mov	r0, r3
    5878:	str	r3, [sp, #8]
    587c:	bl	1844 <Mat_uint64Swap>
    5880:	bl	3e754 <__aeabi_ul2f>
    5884:	ldr	r3, [sp, #8]
    5888:	str	r0, [fp], #4
    588c:	cmp	fp, r8
    5890:	add	r3, r3, #8
    5894:	bne	5874 <ReadSingleData.part.1+0x12b0>
    5898:	add	r7, r7, #256	; 0x100
    589c:	add	r8, fp, #1024	; 0x400
    58a0:	cmp	r7, r9
    58a4:	blt	5850 <ReadSingleData.part.1+0x128c>
    58a8:	sub	r8, r4, #256	; 0x100
    58ac:	sub	r8, r8, #1
    58b0:	lsr	r8, r8, #8
    58b4:	add	r8, r8, #1
    58b8:	lsl	r3, r8, #8
    58bc:	cmp	r4, r3
    58c0:	ble	4660 <ReadSingleData.part.1+0x9c>
    58c4:	sub	r4, r4, r3
    58c8:	ldr	r3, [sp]
    58cc:	mov	r1, r6
    58d0:	mov	r2, r4
    58d4:	mov	r0, sl
    58d8:	mov	r7, #0
    58dc:	ldr	r3, [r3]
    58e0:	bl	1520 <fread@plt>
    58e4:	ldr	r3, [sp, #4]
    58e8:	add	r5, r5, r0
    58ec:	add	r8, r3, r8, lsl #10
    58f0:	cmp	r4, r7
    58f4:	ble	4660 <ReadSingleData.part.1+0x9c>
    58f8:	add	r0, sl, r7, lsl #3
    58fc:	add	r7, r7, #1
    5900:	bl	1844 <Mat_uint64Swap>
    5904:	bl	3e754 <__aeabi_ul2f>
    5908:	str	r0, [r8], #4
    590c:	b	58f0 <ReadSingleData.part.1+0x132c>
    5910:	cmp	r4, #256	; 0x100
    5914:	bgt	594c <ReadSingleData.part.1+0x1388>
    5918:	mov	r1, r0
    591c:	mov	r2, r4
    5920:	mov	r0, sl
    5924:	bl	1520 <fread@plt>
    5928:	ldr	r8, [sp, #4]
    592c:	mov	r5, r0
    5930:	cmp	r4, r7
    5934:	ble	4660 <ReadSingleData.part.1+0x9c>
    5938:	ldrd	r0, [sl], #8
    593c:	add	r7, r7, #1
    5940:	bl	3e754 <__aeabi_ul2f>
    5944:	str	r0, [r8], #4
    5948:	b	5930 <ReadSingleData.part.1+0x136c>
    594c:	ldr	r3, [sp, #4]
    5950:	mov	r9, r7
    5954:	mov	r5, r7
    5958:	add	r8, r3, #1024	; 0x400
    595c:	sub	r3, r4, #256	; 0x100
    5960:	str	r3, [sp, #8]
    5964:	ldr	r3, [sp]
    5968:	mov	r2, #256	; 0x100
    596c:	mov	r1, r6
    5970:	mov	r0, sl
    5974:	mov	fp, sl
    5978:	ldr	r3, [r3]
    597c:	bl	1520 <fread@plt>
    5980:	add	r5, r5, r0
    5984:	sub	r3, r8, #1024	; 0x400
    5988:	mov	r2, sl
    598c:	ldrd	r0, [r2], #8
    5990:	strd	r2, [sp, #12]
    5994:	str	r2, [sp, #20]
    5998:	bl	3e754 <__aeabi_ul2f>
    599c:	ldrd	r2, [sp, #12]
    59a0:	str	r0, [r3], #4
    59a4:	cmp	r3, r8
    59a8:	bne	598c <ReadSingleData.part.1+0x13c8>
    59ac:	add	r8, r3, #1024	; 0x400
    59b0:	ldr	r3, [sp, #8]
    59b4:	add	r9, r9, #256	; 0x100
    59b8:	cmp	r9, r3
    59bc:	blt	5964 <ReadSingleData.part.1+0x13a0>
    59c0:	sub	r8, r4, #256	; 0x100
    59c4:	sub	r8, r8, #1
    59c8:	lsr	r8, r8, #8
    59cc:	add	r8, r8, #1
    59d0:	lsl	r3, r8, #8
    59d4:	cmp	r4, r3
    59d8:	ble	4660 <ReadSingleData.part.1+0x9c>
    59dc:	sub	r4, r4, r3
    59e0:	ldr	r3, [sp]
    59e4:	mov	r1, r6
    59e8:	mov	r2, r4
    59ec:	mov	r0, sl
    59f0:	ldr	r3, [r3]
    59f4:	bl	1520 <fread@plt>
    59f8:	ldr	r3, [sp, #4]
    59fc:	add	r5, r5, r0
    5a00:	add	r8, r3, r8, lsl #10
    5a04:	cmp	r4, r7
    5a08:	ble	4660 <ReadSingleData.part.1+0x9c>
    5a0c:	ldrd	r0, [fp], #8
    5a10:	add	r7, r7, #1
    5a14:	bl	3e754 <__aeabi_ul2f>
    5a18:	str	r0, [r8], #4
    5a1c:	b	5a04 <ReadSingleData.part.1+0x1440>

00005a20 <ReadInt64Data.part.3>:
    5a20:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    5a24:	sub	sp, sp, #2064	; 0x810
    5a28:	mov	r5, r2
    5a2c:	sub	sp, sp, #12
    5a30:	mov	r4, r3
    5a34:	mov	fp, r1
    5a38:	str	r0, [sp]
    5a3c:	mov	r0, r2
    5a40:	bl	1598 <Mat_SizeOf@plt>
    5a44:	sub	r3, r5, #1
    5a48:	mov	r6, r0
    5a4c:	cmp	r3, #8
    5a50:	addls	pc, pc, r3, lsl #2
    5a54:	b	6a04 <ReadInt64Data.part.3+0xfe4>
    5a58:	b	67fc <ReadInt64Data.part.3+0xddc>
    5a5c:	b	6900 <ReadInt64Data.part.3+0xee0>
    5a60:	b	637c <ReadInt64Data.part.3+0x95c>
    5a64:	b	65bc <ReadInt64Data.part.3+0xb9c>
    5a68:	b	5f14 <ReadInt64Data.part.3+0x4f4>
    5a6c:	b	613c <ReadInt64Data.part.3+0x71c>
    5a70:	b	5cc8 <ReadInt64Data.part.3+0x2a8>
    5a74:	b	6a04 <ReadInt64Data.part.3+0xfe4>
    5a78:	b	5a7c <ReadInt64Data.part.3+0x5c>
    5a7c:	ldr	r3, [sp]
    5a80:	add	r7, sp, #24
    5a84:	ldr	r8, [r3, #20]
    5a88:	ldr	r3, [r3]
    5a8c:	cmp	r8, #0
    5a90:	beq	5bb8 <ReadInt64Data.part.3+0x198>
    5a94:	cmp	r4, #256	; 0x100
    5a98:	movgt	r8, #0
    5a9c:	subgt	r9, r4, #256	; 0x100
    5aa0:	movgt	r5, r8
    5aa4:	bgt	5af8 <ReadInt64Data.part.3+0xd8>
    5aa8:	mov	r1, r0
    5aac:	mov	r2, r4
    5ab0:	mov	r0, r7
    5ab4:	sub	fp, fp, #8
    5ab8:	bl	1520 <fread@plt>
    5abc:	mov	r5, r0
    5ac0:	mov	r8, #0
    5ac4:	cmp	r4, r8
    5ac8:	bgt	5adc <ReadInt64Data.part.3+0xbc>
    5acc:	mul	r0, r6, r5
    5ad0:	add	sp, sp, #2064	; 0x810
    5ad4:	add	sp, sp, #12
    5ad8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    5adc:	add	r0, r7, r8, lsl #3
    5ae0:	add	r8, r8, #1
    5ae4:	bl	196c <Mat_doubleSwap>
    5ae8:	vmov	r0, r1, d0
    5aec:	bl	3e80c <__aeabi_d2lz>
    5af0:	strd	r0, [fp, #8]!
    5af4:	b	5ac4 <ReadInt64Data.part.3+0xa4>
    5af8:	ldr	r3, [sp]
    5afc:	mov	r2, #256	; 0x100
    5b00:	mov	r1, r6
    5b04:	mov	r0, r7
    5b08:	mov	sl, #0
    5b0c:	ldr	r3, [r3]
    5b10:	bl	1520 <fread@plt>
    5b14:	add	r3, fp, r8, lsl #3
    5b18:	add	r5, r5, r0
    5b1c:	add	r0, r7, sl
    5b20:	str	r3, [sp, #4]
    5b24:	add	sl, sl, #8
    5b28:	bl	196c <Mat_doubleSwap>
    5b2c:	vmov	r0, r1, d0
    5b30:	bl	3e80c <__aeabi_d2lz>
    5b34:	ldr	r3, [sp, #4]
    5b38:	cmp	sl, #2048	; 0x800
    5b3c:	strd	r0, [r3], #8
    5b40:	bne	5b1c <ReadInt64Data.part.3+0xfc>
    5b44:	add	r8, r8, #256	; 0x100
    5b48:	cmp	r8, r9
    5b4c:	blt	5af8 <ReadInt64Data.part.3+0xd8>
    5b50:	sub	r8, r4, #256	; 0x100
    5b54:	sub	r8, r8, #1
    5b58:	lsr	r8, r8, #8
    5b5c:	add	r8, r8, #1
    5b60:	lsl	r3, r8, #8
    5b64:	cmp	r4, r3
    5b68:	ble	5acc <ReadInt64Data.part.3+0xac>
    5b6c:	sub	r4, r4, r3
    5b70:	ldr	r3, [sp]
    5b74:	mov	r1, r6
    5b78:	mov	r2, r4
    5b7c:	mov	r0, r7
    5b80:	add	r8, fp, r8, lsl #11
    5b84:	mov	r9, #0
    5b88:	ldr	r3, [r3]
    5b8c:	bl	1520 <fread@plt>
    5b90:	add	r5, r5, r0
    5b94:	cmp	r4, r9
    5b98:	ble	5acc <ReadInt64Data.part.3+0xac>
    5b9c:	add	r0, r7, r9, lsl #3
    5ba0:	add	r9, r9, #1
    5ba4:	bl	196c <Mat_doubleSwap>
    5ba8:	vmov	r0, r1, d0
    5bac:	bl	3e80c <__aeabi_d2lz>
    5bb0:	strd	r0, [r8], #8
    5bb4:	b	5b94 <ReadInt64Data.part.3+0x174>
    5bb8:	cmp	r4, #256	; 0x100
    5bbc:	bgt	5bf4 <ReadInt64Data.part.3+0x1d4>
    5bc0:	mov	r1, r0
    5bc4:	mov	r2, r4
    5bc8:	mov	r0, r7
    5bcc:	sub	fp, fp, #8
    5bd0:	bl	1520 <fread@plt>
    5bd4:	mov	r5, r0
    5bd8:	cmp	r4, r8
    5bdc:	ble	5acc <ReadInt64Data.part.3+0xac>
    5be0:	ldrd	r0, [r7], #8
    5be4:	add	r8, r8, #1
    5be8:	bl	3e80c <__aeabi_d2lz>
    5bec:	strd	r0, [fp, #8]!
    5bf0:	b	5bd8 <ReadInt64Data.part.3+0x1b8>
    5bf4:	sub	r3, r4, #256	; 0x100
    5bf8:	add	r9, fp, #2048	; 0x800
    5bfc:	mov	sl, r8
    5c00:	mov	r5, r8
    5c04:	str	r3, [sp, #8]
    5c08:	ldr	r3, [sp]
    5c0c:	mov	r2, #256	; 0x100
    5c10:	mov	r1, r6
    5c14:	mov	r0, r7
    5c18:	ldr	r3, [r3]
    5c1c:	bl	1520 <fread@plt>
    5c20:	add	r5, r5, r0
    5c24:	sub	r3, r9, #2048	; 0x800
    5c28:	str	r7, [sp, #4]
    5c2c:	mov	r2, r7
    5c30:	ldrd	r0, [r2], #8
    5c34:	strd	r2, [sp, #12]
    5c38:	str	r2, [sp, #20]
    5c3c:	bl	3e80c <__aeabi_d2lz>
    5c40:	ldrd	r2, [sp, #12]
    5c44:	strd	r0, [r3], #8
    5c48:	cmp	r3, r9
    5c4c:	bne	5c30 <ReadInt64Data.part.3+0x210>
    5c50:	add	r9, r3, #2048	; 0x800
    5c54:	ldr	r3, [sp, #8]
    5c58:	add	sl, sl, #256	; 0x100
    5c5c:	cmp	sl, r3
    5c60:	blt	5c08 <ReadInt64Data.part.3+0x1e8>
    5c64:	sub	r9, r4, #256	; 0x100
    5c68:	sub	r9, r9, #1
    5c6c:	lsr	r9, r9, #8
    5c70:	add	r9, r9, #1
    5c74:	lsl	r3, r9, #8
    5c78:	cmp	r4, r3
    5c7c:	ble	5acc <ReadInt64Data.part.3+0xac>
    5c80:	sub	r4, r4, r3
    5c84:	ldr	r3, [sp]
    5c88:	mov	r1, r6
    5c8c:	mov	r2, r4
    5c90:	mov	r0, r7
    5c94:	add	r9, fp, r9, lsl #11
    5c98:	ldr	r3, [r3]
    5c9c:	bl	1520 <fread@plt>
    5ca0:	add	r5, r5, r0
    5ca4:	cmp	r4, r8
    5ca8:	ble	5acc <ReadInt64Data.part.3+0xac>
    5cac:	ldr	r3, [sp, #4]
    5cb0:	add	r8, r8, #1
    5cb4:	ldrd	r0, [r3], #8
    5cb8:	str	r3, [sp, #4]
    5cbc:	bl	3e80c <__aeabi_d2lz>
    5cc0:	strd	r0, [r9], #8
    5cc4:	b	5ca4 <ReadInt64Data.part.3+0x284>
    5cc8:	ldr	r3, [sp]
    5ccc:	add	r7, sp, #24
    5cd0:	ldr	r8, [r3, #20]
    5cd4:	ldr	r3, [r3]
    5cd8:	cmp	r8, #0
    5cdc:	beq	5e04 <ReadInt64Data.part.3+0x3e4>
    5ce0:	cmp	r4, #256	; 0x100
    5ce4:	bgt	5d28 <ReadInt64Data.part.3+0x308>
    5ce8:	mov	r1, r0
    5cec:	mov	r2, r4
    5cf0:	mov	r0, r7
    5cf4:	sub	fp, fp, #8
    5cf8:	bl	1520 <fread@plt>
    5cfc:	mov	r5, r0
    5d00:	mov	r8, #0
    5d04:	cmp	r4, r8
    5d08:	ble	5acc <ReadInt64Data.part.3+0xac>
    5d0c:	add	r0, r7, r8, lsl #2
    5d10:	add	r8, r8, #1
    5d14:	bl	193c <Mat_floatSwap>
    5d18:	vmov	r0, s0
    5d1c:	bl	3e7e0 <__aeabi_f2lz>
    5d20:	strd	r0, [fp, #8]!
    5d24:	b	5d04 <ReadInt64Data.part.3+0x2e4>
    5d28:	mov	r8, #0
    5d2c:	add	r9, fp, #2048	; 0x800
    5d30:	mov	r5, r8
    5d34:	sub	sl, r4, #256	; 0x100
    5d38:	ldr	r3, [sp]
    5d3c:	mov	r2, #256	; 0x100
    5d40:	mov	r1, r6
    5d44:	mov	r0, r7
    5d48:	ldr	r3, [r3]
    5d4c:	bl	1520 <fread@plt>
    5d50:	add	r5, r5, r0
    5d54:	sub	r2, r9, #2048	; 0x800
    5d58:	mov	r3, r7
    5d5c:	mov	r0, r3
    5d60:	str	r3, [sp, #4]
    5d64:	str	r2, [sp, #8]
    5d68:	bl	193c <Mat_floatSwap>
    5d6c:	vmov	r0, s0
    5d70:	bl	3e7e0 <__aeabi_f2lz>
    5d74:	ldr	r3, [sp, #4]
    5d78:	ldr	r2, [sp, #8]
    5d7c:	add	r3, r3, #4
    5d80:	strd	r0, [r2], #8
    5d84:	cmp	r2, r9
    5d88:	bne	5d5c <ReadInt64Data.part.3+0x33c>
    5d8c:	add	r8, r8, #256	; 0x100
    5d90:	add	r9, r2, #2048	; 0x800
    5d94:	cmp	r8, sl
    5d98:	blt	5d38 <ReadInt64Data.part.3+0x318>
    5d9c:	sub	r8, r4, #256	; 0x100
    5da0:	sub	r8, r8, #1
    5da4:	lsr	r8, r8, #8
    5da8:	add	r8, r8, #1
    5dac:	lsl	r3, r8, #8
    5db0:	cmp	r4, r3
    5db4:	ble	5acc <ReadInt64Data.part.3+0xac>
    5db8:	sub	r4, r4, r3
    5dbc:	ldr	r3, [sp]
    5dc0:	mov	r1, r6
    5dc4:	mov	r2, r4
    5dc8:	mov	r0, r7
    5dcc:	add	r8, fp, r8, lsl #11
    5dd0:	mov	r9, #0
    5dd4:	ldr	r3, [r3]
    5dd8:	bl	1520 <fread@plt>
    5ddc:	add	r5, r5, r0
    5de0:	cmp	r4, r9
    5de4:	ble	5acc <ReadInt64Data.part.3+0xac>
    5de8:	add	r0, r7, r9, lsl #2
    5dec:	add	r9, r9, #1
    5df0:	bl	193c <Mat_floatSwap>
    5df4:	vmov	r0, s0
    5df8:	bl	3e7e0 <__aeabi_f2lz>
    5dfc:	strd	r0, [r8], #8
    5e00:	b	5de0 <ReadInt64Data.part.3+0x3c0>
    5e04:	cmp	r4, #256	; 0x100
    5e08:	bgt	5e40 <ReadInt64Data.part.3+0x420>
    5e0c:	mov	r1, r0
    5e10:	mov	r2, r4
    5e14:	mov	r0, r7
    5e18:	sub	fp, fp, #8
    5e1c:	bl	1520 <fread@plt>
    5e20:	mov	r5, r0
    5e24:	cmp	r4, r8
    5e28:	ble	5acc <ReadInt64Data.part.3+0xac>
    5e2c:	ldr	r0, [r7], #4
    5e30:	add	r8, r8, #1
    5e34:	bl	3e7e0 <__aeabi_f2lz>
    5e38:	strd	r0, [fp, #8]!
    5e3c:	b	5e24 <ReadInt64Data.part.3+0x404>
    5e40:	sub	r3, r4, #256	; 0x100
    5e44:	add	r9, fp, #2048	; 0x800
    5e48:	mov	sl, r8
    5e4c:	mov	r5, r8
    5e50:	str	r3, [sp, #8]
    5e54:	ldr	r3, [sp]
    5e58:	mov	r2, #256	; 0x100
    5e5c:	mov	r1, r6
    5e60:	mov	r0, r7
    5e64:	ldr	r3, [r3]
    5e68:	bl	1520 <fread@plt>
    5e6c:	add	r5, r5, r0
    5e70:	sub	r3, r9, #2048	; 0x800
    5e74:	str	r7, [sp, #4]
    5e78:	mov	r2, r7
    5e7c:	ldr	r0, [r2], #4
    5e80:	strd	r2, [sp, #12]
    5e84:	str	r2, [sp, #20]
    5e88:	bl	3e7e0 <__aeabi_f2lz>
    5e8c:	ldrd	r2, [sp, #12]
    5e90:	strd	r0, [r3], #8
    5e94:	cmp	r3, r9
    5e98:	bne	5e7c <ReadInt64Data.part.3+0x45c>
    5e9c:	add	r9, r3, #2048	; 0x800
    5ea0:	ldr	r3, [sp, #8]
    5ea4:	add	sl, sl, #256	; 0x100
    5ea8:	cmp	sl, r3
    5eac:	blt	5e54 <ReadInt64Data.part.3+0x434>
    5eb0:	sub	r9, r4, #256	; 0x100
    5eb4:	sub	r9, r9, #1
    5eb8:	lsr	r9, r9, #8
    5ebc:	add	r9, r9, #1
    5ec0:	lsl	r3, r9, #8
    5ec4:	cmp	r4, r3
    5ec8:	ble	5acc <ReadInt64Data.part.3+0xac>
    5ecc:	sub	r4, r4, r3
    5ed0:	ldr	r3, [sp]
    5ed4:	mov	r1, r6
    5ed8:	mov	r2, r4
    5edc:	mov	r0, r7
    5ee0:	add	r9, fp, r9, lsl #11
    5ee4:	ldr	r3, [r3]
    5ee8:	bl	1520 <fread@plt>
    5eec:	add	r5, r5, r0
    5ef0:	cmp	r4, r8
    5ef4:	ble	5acc <ReadInt64Data.part.3+0xac>
    5ef8:	ldr	r3, [sp, #4]
    5efc:	add	r8, r8, #1
    5f00:	ldr	r0, [r3], #4
    5f04:	str	r3, [sp, #4]
    5f08:	bl	3e7e0 <__aeabi_f2lz>
    5f0c:	strd	r0, [r9], #8
    5f10:	b	5ef0 <ReadInt64Data.part.3+0x4d0>
    5f14:	ldr	r3, [sp]
    5f18:	add	r7, sp, #24
    5f1c:	ldr	r8, [r3, #20]
    5f20:	ldr	r3, [r3]
    5f24:	cmp	r8, #0
    5f28:	beq	6044 <ReadInt64Data.part.3+0x624>
    5f2c:	cmp	r4, #256	; 0x100
    5f30:	bgt	5f70 <ReadInt64Data.part.3+0x550>
    5f34:	mov	r1, r0
    5f38:	mov	r2, r4
    5f3c:	mov	r0, r7
    5f40:	sub	fp, fp, #8
    5f44:	bl	1520 <fread@plt>
    5f48:	mov	r5, r0
    5f4c:	mov	r8, #0
    5f50:	cmp	r4, r8
    5f54:	ble	5acc <ReadInt64Data.part.3+0xac>
    5f58:	add	r0, r7, r8, lsl #2
    5f5c:	add	r8, r8, #1
    5f60:	bl	189c <Mat_int32Swap>
    5f64:	asr	r1, r0, #31
    5f68:	strd	r0, [fp, #8]!
    5f6c:	b	5f50 <ReadInt64Data.part.3+0x530>
    5f70:	mov	r8, #0
    5f74:	add	r9, fp, #2048	; 0x800
    5f78:	mov	r5, r8
    5f7c:	sub	sl, r4, #256	; 0x100
    5f80:	ldr	r3, [sp]
    5f84:	mov	r2, #256	; 0x100
    5f88:	mov	r1, r6
    5f8c:	mov	r0, r7
    5f90:	ldr	r3, [r3]
    5f94:	bl	1520 <fread@plt>
    5f98:	add	r5, r5, r0
    5f9c:	sub	r2, r9, #2048	; 0x800
    5fa0:	mov	r3, r7
    5fa4:	mov	r0, r3
    5fa8:	str	r3, [sp, #4]
    5fac:	str	r2, [sp, #8]
    5fb0:	bl	189c <Mat_int32Swap>
    5fb4:	ldr	r3, [sp, #4]
    5fb8:	asr	r1, r0, #31
    5fbc:	ldr	r2, [sp, #8]
    5fc0:	add	r3, r3, #4
    5fc4:	strd	r0, [r2], #8
    5fc8:	cmp	r2, r9
    5fcc:	bne	5fa4 <ReadInt64Data.part.3+0x584>
    5fd0:	add	r8, r8, #256	; 0x100
    5fd4:	add	r9, r2, #2048	; 0x800
    5fd8:	cmp	r8, sl
    5fdc:	blt	5f80 <ReadInt64Data.part.3+0x560>
    5fe0:	sub	r8, r4, #256	; 0x100
    5fe4:	sub	r8, r8, #1
    5fe8:	lsr	r8, r8, #8
    5fec:	add	r8, r8, #1
    5ff0:	lsl	r3, r8, #8
    5ff4:	cmp	r4, r3
    5ff8:	ble	5acc <ReadInt64Data.part.3+0xac>
    5ffc:	sub	r4, r4, r3
    6000:	ldr	r3, [sp]
    6004:	mov	r1, r6
    6008:	mov	r2, r4
    600c:	mov	r0, r7
    6010:	add	r8, fp, r8, lsl #11
    6014:	mov	r9, #0
    6018:	ldr	r3, [r3]
    601c:	bl	1520 <fread@plt>
    6020:	add	r5, r5, r0
    6024:	cmp	r4, r9
    6028:	ble	5acc <ReadInt64Data.part.3+0xac>
    602c:	add	r0, r7, r9, lsl #2
    6030:	add	r9, r9, #1
    6034:	bl	189c <Mat_int32Swap>
    6038:	asr	r1, r0, #31
    603c:	strd	r0, [r8], #8
    6040:	b	6024 <ReadInt64Data.part.3+0x604>
    6044:	cmp	r4, #256	; 0x100
    6048:	bgt	6080 <ReadInt64Data.part.3+0x660>
    604c:	mov	r1, r0
    6050:	mov	r2, r4
    6054:	mov	r0, r7
    6058:	bl	1520 <fread@plt>
    605c:	mov	r5, r0
    6060:	sub	r1, fp, #8
    6064:	cmp	r4, r8
    6068:	ble	5acc <ReadInt64Data.part.3+0xac>
    606c:	ldr	r2, [r7, r8, lsl #2]
    6070:	add	r8, r8, #1
    6074:	asr	r3, r2, #31
    6078:	strd	r2, [r1, #8]!
    607c:	b	6064 <ReadInt64Data.part.3+0x644>
    6080:	sub	r3, r4, #256	; 0x100
    6084:	add	sl, fp, #2048	; 0x800
    6088:	mov	r9, r8
    608c:	mov	r5, r8
    6090:	str	r3, [sp, #4]
    6094:	ldr	r3, [sp]
    6098:	mov	r2, #256	; 0x100
    609c:	mov	r1, r6
    60a0:	mov	r0, r7
    60a4:	ldr	r3, [r3]
    60a8:	bl	1520 <fread@plt>
    60ac:	add	r5, r5, r0
    60b0:	mov	r2, r7
    60b4:	sub	r3, sl, #2048	; 0x800
    60b8:	ldr	r0, [r2], #4
    60bc:	asr	r1, r0, #31
    60c0:	strd	r0, [r3], #8
    60c4:	cmp	r3, sl
    60c8:	bne	60b8 <ReadInt64Data.part.3+0x698>
    60cc:	add	sl, r3, #2048	; 0x800
    60d0:	ldr	r3, [sp, #4]
    60d4:	add	r9, r9, #256	; 0x100
    60d8:	cmp	r9, r3
    60dc:	blt	6094 <ReadInt64Data.part.3+0x674>
    60e0:	sub	r9, r4, #256	; 0x100
    60e4:	sub	r9, r9, #1
    60e8:	lsr	r9, r9, #8
    60ec:	add	r9, r9, #1
    60f0:	lsl	r3, r9, #8
    60f4:	cmp	r4, r3
    60f8:	ble	5acc <ReadInt64Data.part.3+0xac>
    60fc:	sub	r4, r4, r3
    6100:	ldr	r3, [sp]
    6104:	mov	r1, r6
    6108:	mov	r2, r4
    610c:	mov	r0, r7
    6110:	add	r9, fp, r9, lsl #11
    6114:	ldr	r3, [r3]
    6118:	bl	1520 <fread@plt>
    611c:	add	r5, r5, r0
    6120:	cmp	r4, r8
    6124:	ble	5acc <ReadInt64Data.part.3+0xac>
    6128:	ldr	r2, [r7, r8, lsl #2]
    612c:	add	r8, r8, #1
    6130:	asr	r3, r2, #31
    6134:	strd	r2, [r9], #8
    6138:	b	6120 <ReadInt64Data.part.3+0x700>
    613c:	ldr	r3, [sp]
    6140:	add	r8, sp, #24
    6144:	ldr	r7, [r3, #20]
    6148:	ldr	r3, [r3]
    614c:	cmp	r7, #0
    6150:	beq	6274 <ReadInt64Data.part.3+0x854>
    6154:	cmp	r4, #256	; 0x100
    6158:	bgt	619c <ReadInt64Data.part.3+0x77c>
    615c:	mov	r1, r0
    6160:	mov	r2, r4
    6164:	mov	r0, r8
    6168:	mov	r7, #0
    616c:	bl	1520 <fread@plt>
    6170:	mov	r5, r0
    6174:	sub	fp, fp, #8
    6178:	mov	sl, r7
    617c:	cmp	r4, r7
    6180:	ble	5acc <ReadInt64Data.part.3+0xac>
    6184:	add	r0, r8, r7, lsl #2
    6188:	add	r7, r7, #1
    618c:	bl	18cc <Mat_uint32Swap>
    6190:	str	r0, [fp, #8]!
    6194:	str	sl, [fp, #4]
    6198:	b	617c <ReadInt64Data.part.3+0x75c>
    619c:	mov	r7, #0
    61a0:	add	r9, fp, #2048	; 0x800
    61a4:	mov	r5, r7
    61a8:	sub	sl, r4, #256	; 0x100
    61ac:	ldr	r3, [sp]
    61b0:	mov	r2, #256	; 0x100
    61b4:	mov	r1, r6
    61b8:	mov	r0, r8
    61bc:	ldr	r3, [r3]
    61c0:	bl	1520 <fread@plt>
    61c4:	add	r5, r5, r0
    61c8:	sub	r3, r9, #2048	; 0x800
    61cc:	mov	r2, r8
    61d0:	mov	r0, r2
    61d4:	strd	r2, [sp, #4]
    61d8:	bl	18cc <Mat_uint32Swap>
    61dc:	ldr	r3, [sp, #8]
    61e0:	mov	r2, #0
    61e4:	stm	r3, {r0, r2}
    61e8:	add	r3, r3, #8
    61ec:	ldr	r2, [sp, #4]
    61f0:	cmp	r3, r9
    61f4:	add	r2, r2, #4
    61f8:	bne	61d0 <ReadInt64Data.part.3+0x7b0>
    61fc:	add	r7, r7, #256	; 0x100
    6200:	add	r9, r3, #2048	; 0x800
    6204:	cmp	r7, sl
    6208:	blt	61ac <ReadInt64Data.part.3+0x78c>
    620c:	sub	r7, r4, #256	; 0x100
    6210:	sub	r7, r7, #1
    6214:	lsr	r7, r7, #8
    6218:	add	r7, r7, #1
    621c:	lsl	r3, r7, #8
    6220:	cmp	r4, r3
    6224:	ble	5acc <ReadInt64Data.part.3+0xac>
    6228:	sub	r4, r4, r3
    622c:	ldr	r3, [sp]
    6230:	mov	r1, r6
    6234:	mov	r2, r4
    6238:	mov	r0, r8
    623c:	add	r7, fp, r7, lsl #11
    6240:	mov	r9, #0
    6244:	mov	sl, r9
    6248:	ldr	r3, [r3]
    624c:	bl	1520 <fread@plt>
    6250:	add	r5, r5, r0
    6254:	cmp	r4, r9
    6258:	ble	5acc <ReadInt64Data.part.3+0xac>
    625c:	add	r0, r8, r9, lsl #2
    6260:	add	r9, r9, #1
    6264:	bl	18cc <Mat_uint32Swap>
    6268:	stm	r7, {r0, sl}
    626c:	add	r7, r7, #8
    6270:	b	6254 <ReadInt64Data.part.3+0x834>
    6274:	cmp	r4, #256	; 0x100
    6278:	bgt	62b4 <ReadInt64Data.part.3+0x894>
    627c:	mov	r2, r4
    6280:	mov	r1, r0
    6284:	mov	r0, r8
    6288:	bl	1520 <fread@plt>
    628c:	mov	r5, r0
    6290:	sub	r3, fp, #8
    6294:	mov	r2, r7
    6298:	cmp	r4, r7
    629c:	ble	5acc <ReadInt64Data.part.3+0xac>
    62a0:	ldr	r1, [r8, r7, lsl #2]
    62a4:	add	r7, r7, #1
    62a8:	str	r1, [r3, #8]!
    62ac:	str	r2, [r3, #4]
    62b0:	b	6298 <ReadInt64Data.part.3+0x878>
    62b4:	sub	r3, r4, #256	; 0x100
    62b8:	add	sl, fp, #2048	; 0x800
    62bc:	mov	r9, r7
    62c0:	mov	r5, r7
    62c4:	str	r3, [sp, #4]
    62c8:	ldr	r3, [sp]
    62cc:	mov	r2, #256	; 0x100
    62d0:	mov	r1, r6
    62d4:	mov	r0, r8
    62d8:	ldr	r3, [r3]
    62dc:	bl	1520 <fread@plt>
    62e0:	add	r5, r5, r0
    62e4:	mov	r2, r8
    62e8:	sub	r3, sl, #2048	; 0x800
    62ec:	ldr	r1, [r2], #4
    62f0:	add	r3, r3, #8
    62f4:	str	r1, [r3, #-8]
    62f8:	mov	r1, #0
    62fc:	str	r1, [r3, #-4]
    6300:	cmp	r3, sl
    6304:	bne	62ec <ReadInt64Data.part.3+0x8cc>
    6308:	add	sl, r3, #2048	; 0x800
    630c:	ldr	r3, [sp, #4]
    6310:	add	r9, r9, #256	; 0x100
    6314:	cmp	r9, r3
    6318:	blt	62c8 <ReadInt64Data.part.3+0x8a8>
    631c:	sub	r9, r4, #256	; 0x100
    6320:	sub	r9, r9, #1
    6324:	lsr	r9, r9, #8
    6328:	add	r9, r9, #1
    632c:	lsl	r3, r9, #8
    6330:	cmp	r4, r3
    6334:	ble	5acc <ReadInt64Data.part.3+0xac>
    6338:	sub	r4, r4, r3
    633c:	ldr	r3, [sp]
    6340:	mov	r1, r6
    6344:	mov	r2, r4
    6348:	mov	r0, r8
    634c:	add	r9, fp, r9, lsl #11
    6350:	ldr	r3, [r3]
    6354:	bl	1520 <fread@plt>
    6358:	add	r5, r5, r0
    635c:	mov	r3, #0
    6360:	cmp	r4, r7
    6364:	ble	5acc <ReadInt64Data.part.3+0xac>
    6368:	ldr	r2, [r8, r7, lsl #2]
    636c:	add	r9, r9, #8
    6370:	add	r7, r7, #1
    6374:	strd	r2, [r9, #-8]
    6378:	b	6360 <ReadInt64Data.part.3+0x940>
    637c:	ldr	r3, [sp]
    6380:	add	r7, sp, #24
    6384:	ldr	r8, [r3, #20]
    6388:	ldr	r3, [r3]
    638c:	cmp	r8, #0
    6390:	beq	64b8 <ReadInt64Data.part.3+0xa98>
    6394:	cmp	r4, #256	; 0x100
    6398:	bgt	63dc <ReadInt64Data.part.3+0x9bc>
    639c:	mov	r1, r0
    63a0:	mov	r2, r4
    63a4:	mov	r0, r7
    63a8:	sub	fp, fp, #8
    63ac:	bl	1520 <fread@plt>
    63b0:	mov	r5, r0
    63b4:	mov	r8, #0
    63b8:	cmp	r4, r8
    63bc:	ble	5acc <ReadInt64Data.part.3+0xac>
    63c0:	add	r0, r7, r8, lsl #1
    63c4:	add	r8, r8, #1
    63c8:	bl	18fc <Mat_int16Swap>
    63cc:	sxth	r0, r0
    63d0:	asr	r1, r0, #31
    63d4:	strd	r0, [fp, #8]!
    63d8:	b	63b8 <ReadInt64Data.part.3+0x998>
    63dc:	mov	r8, #0
    63e0:	add	r9, fp, #2048	; 0x800
    63e4:	mov	r5, r8
    63e8:	sub	sl, r4, #256	; 0x100
    63ec:	ldr	r3, [sp]
    63f0:	mov	r2, #256	; 0x100
    63f4:	mov	r1, r6
    63f8:	mov	r0, r7
    63fc:	ldr	r3, [r3]
    6400:	bl	1520 <fread@plt>
    6404:	add	r5, r5, r0
    6408:	sub	r2, r9, #2048	; 0x800
    640c:	mov	r3, r7
    6410:	mov	r0, r3
    6414:	str	r3, [sp, #4]
    6418:	str	r2, [sp, #8]
    641c:	bl	18fc <Mat_int16Swap>
    6420:	sxth	r0, r0
    6424:	ldr	r3, [sp, #4]
    6428:	asr	r1, r0, #31
    642c:	ldr	r2, [sp, #8]
    6430:	add	r3, r3, #2
    6434:	strd	r0, [r2], #8
    6438:	cmp	r2, r9
    643c:	bne	6410 <ReadInt64Data.part.3+0x9f0>
    6440:	add	r8, r8, #256	; 0x100
    6444:	add	r9, r2, #2048	; 0x800
    6448:	cmp	r8, sl
    644c:	blt	63ec <ReadInt64Data.part.3+0x9cc>
    6450:	sub	r8, r4, #256	; 0x100
    6454:	sub	r8, r8, #1
    6458:	lsr	r8, r8, #8
    645c:	add	r8, r8, #1
    6460:	lsl	r3, r8, #8
    6464:	cmp	r4, r3
    6468:	ble	5acc <ReadInt64Data.part.3+0xac>
    646c:	sub	r4, r4, r3
    6470:	ldr	r3, [sp]
    6474:	mov	r1, r6
    6478:	mov	r2, r4
    647c:	mov	r0, r7
    6480:	add	r8, fp, r8, lsl #11
    6484:	mov	r9, #0
    6488:	ldr	r3, [r3]
    648c:	bl	1520 <fread@plt>
    6490:	add	r5, r5, r0
    6494:	cmp	r4, r9
    6498:	ble	5acc <ReadInt64Data.part.3+0xac>
    649c:	add	r0, r7, r9, lsl #1
    64a0:	add	r9, r9, #1
    64a4:	bl	18fc <Mat_int16Swap>
    64a8:	sxth	r0, r0
    64ac:	asr	r1, r0, #31
    64b0:	strd	r0, [r8], #8
    64b4:	b	6494 <ReadInt64Data.part.3+0xa74>
    64b8:	cmp	r4, #256	; 0x100
    64bc:	bgt	64f4 <ReadInt64Data.part.3+0xad4>
    64c0:	mov	r1, r0
    64c4:	mov	r2, r4
    64c8:	mov	r0, r7
    64cc:	bl	1520 <fread@plt>
    64d0:	mov	r5, r0
    64d4:	sub	r1, fp, #8
    64d8:	cmp	r4, r8
    64dc:	ble	5acc <ReadInt64Data.part.3+0xac>
    64e0:	ldrsh	r2, [r7], #2
    64e4:	add	r8, r8, #1
    64e8:	asr	r3, r2, #31
    64ec:	strd	r2, [r1, #8]!
    64f0:	b	64d8 <ReadInt64Data.part.3+0xab8>
    64f4:	sub	r3, r4, #256	; 0x100
    64f8:	add	r9, fp, #2048	; 0x800
    64fc:	mov	sl, r8
    6500:	mov	r5, r8
    6504:	str	r3, [sp, #8]
    6508:	ldr	r3, [sp]
    650c:	mov	r2, #256	; 0x100
    6510:	mov	r1, r6
    6514:	mov	r0, r7
    6518:	ldr	r3, [r3]
    651c:	bl	1520 <fread@plt>
    6520:	add	r5, r5, r0
    6524:	sub	r3, r9, #2048	; 0x800
    6528:	str	r7, [sp, #4]
    652c:	mov	r2, r7
    6530:	ldrsh	r0, [r2], #2
    6534:	asr	r1, r0, #31
    6538:	strd	r0, [r3], #8
    653c:	cmp	r3, r9
    6540:	bne	6530 <ReadInt64Data.part.3+0xb10>
    6544:	add	r9, r3, #2048	; 0x800
    6548:	ldr	r3, [sp, #8]
    654c:	add	sl, sl, #256	; 0x100
    6550:	cmp	sl, r3
    6554:	blt	6508 <ReadInt64Data.part.3+0xae8>
    6558:	sub	r9, r4, #256	; 0x100
    655c:	sub	r9, r9, #1
    6560:	lsr	r9, r9, #8
    6564:	add	r9, r9, #1
    6568:	lsl	r3, r9, #8
    656c:	cmp	r4, r3
    6570:	ble	5acc <ReadInt64Data.part.3+0xac>
    6574:	sub	r4, r4, r3
    6578:	ldr	r3, [sp]
    657c:	mov	r1, r6
    6580:	mov	r2, r4
    6584:	mov	r0, r7
    6588:	add	r9, fp, r9, lsl #11
    658c:	ldr	r3, [r3]
    6590:	bl	1520 <fread@plt>
    6594:	add	r5, r5, r0
    6598:	cmp	r4, r8
    659c:	ble	5acc <ReadInt64Data.part.3+0xac>
    65a0:	ldr	r1, [sp, #4]
    65a4:	add	r8, r8, #1
    65a8:	ldrsh	r2, [r1], #2
    65ac:	asr	r3, r2, #31
    65b0:	str	r1, [sp, #4]
    65b4:	strd	r2, [r9], #8
    65b8:	b	6598 <ReadInt64Data.part.3+0xb78>
    65bc:	ldr	r3, [sp]
    65c0:	add	r7, sp, #24
    65c4:	ldr	r8, [r3, #20]
    65c8:	ldr	r3, [r3]
    65cc:	cmp	r8, #0
    65d0:	beq	66f8 <ReadInt64Data.part.3+0xcd8>
    65d4:	cmp	r4, #256	; 0x100
    65d8:	bgt	661c <ReadInt64Data.part.3+0xbfc>
    65dc:	mov	r1, r0
    65e0:	mov	r2, r4
    65e4:	mov	r0, r7
    65e8:	sub	fp, fp, #8
    65ec:	bl	1520 <fread@plt>
    65f0:	mov	r5, r0
    65f4:	mov	r8, #0
    65f8:	cmp	r4, r8
    65fc:	ble	5acc <ReadInt64Data.part.3+0xac>
    6600:	add	r0, r7, r8, lsl #1
    6604:	add	r8, r8, #1
    6608:	bl	191c <Mat_uint16Swap>
    660c:	uxth	r0, r0
    6610:	mov	r1, #0
    6614:	strd	r0, [fp, #8]!
    6618:	b	65f8 <ReadInt64Data.part.3+0xbd8>
    661c:	mov	r8, #0
    6620:	add	r9, fp, #2048	; 0x800
    6624:	mov	r5, r8
    6628:	sub	sl, r4, #256	; 0x100
    662c:	ldr	r3, [sp]
    6630:	mov	r2, #256	; 0x100
    6634:	mov	r1, r6
    6638:	mov	r0, r7
    663c:	ldr	r3, [r3]
    6640:	bl	1520 <fread@plt>
    6644:	add	r5, r5, r0
    6648:	sub	r2, r9, #2048	; 0x800
    664c:	mov	r3, r7
    6650:	mov	r0, r3
    6654:	str	r3, [sp, #4]
    6658:	str	r2, [sp, #8]
    665c:	bl	191c <Mat_uint16Swap>
    6660:	ldr	r3, [sp, #4]
    6664:	uxth	r0, r0
    6668:	mov	r1, #0
    666c:	ldr	r2, [sp, #8]
    6670:	add	r3, r3, #2
    6674:	strd	r0, [r2], #8
    6678:	cmp	r2, r9
    667c:	bne	6650 <ReadInt64Data.part.3+0xc30>
    6680:	add	r8, r8, #256	; 0x100
    6684:	add	r9, r2, #2048	; 0x800
    6688:	cmp	r8, sl
    668c:	blt	662c <ReadInt64Data.part.3+0xc0c>
    6690:	sub	r8, r4, #256	; 0x100
    6694:	sub	r8, r8, #1
    6698:	lsr	r8, r8, #8
    669c:	add	r8, r8, #1
    66a0:	lsl	r3, r8, #8
    66a4:	cmp	r4, r3
    66a8:	ble	5acc <ReadInt64Data.part.3+0xac>
    66ac:	sub	r4, r4, r3
    66b0:	ldr	r3, [sp]
    66b4:	mov	r1, r6
    66b8:	mov	r2, r4
    66bc:	mov	r0, r7
    66c0:	add	r8, fp, r8, lsl #11
    66c4:	mov	r9, #0
    66c8:	ldr	r3, [r3]
    66cc:	bl	1520 <fread@plt>
    66d0:	add	r5, r5, r0
    66d4:	cmp	r4, r9
    66d8:	ble	5acc <ReadInt64Data.part.3+0xac>
    66dc:	add	r0, r7, r9, lsl #1
    66e0:	add	r9, r9, #1
    66e4:	bl	191c <Mat_uint16Swap>
    66e8:	uxth	r0, r0
    66ec:	mov	r1, #0
    66f0:	strd	r0, [r8], #8
    66f4:	b	66d4 <ReadInt64Data.part.3+0xcb4>
    66f8:	cmp	r4, #256	; 0x100
    66fc:	bgt	6734 <ReadInt64Data.part.3+0xd14>
    6700:	mov	r1, r0
    6704:	mov	r2, r4
    6708:	mov	r0, r7
    670c:	bl	1520 <fread@plt>
    6710:	mov	r5, r0
    6714:	sub	r1, fp, #8
    6718:	cmp	r4, r8
    671c:	ble	5acc <ReadInt64Data.part.3+0xac>
    6720:	ldrh	r2, [r7], #2
    6724:	mov	r3, #0
    6728:	add	r8, r8, #1
    672c:	strd	r2, [r1, #8]!
    6730:	b	6718 <ReadInt64Data.part.3+0xcf8>
    6734:	sub	r3, r4, #256	; 0x100
    6738:	add	r9, fp, #2048	; 0x800
    673c:	mov	sl, r8
    6740:	mov	r5, r8
    6744:	str	r3, [sp, #8]
    6748:	ldr	r3, [sp]
    674c:	mov	r2, #256	; 0x100
    6750:	mov	r1, r6
    6754:	mov	r0, r7
    6758:	ldr	r3, [r3]
    675c:	bl	1520 <fread@plt>
    6760:	add	r5, r5, r0
    6764:	sub	r3, r9, #2048	; 0x800
    6768:	str	r7, [sp, #4]
    676c:	mov	r2, r7
    6770:	ldrh	r0, [r2], #2
    6774:	mov	r1, #0
    6778:	strd	r0, [r3], #8
    677c:	cmp	r3, r9
    6780:	bne	6770 <ReadInt64Data.part.3+0xd50>
    6784:	add	r9, r3, #2048	; 0x800
    6788:	ldr	r3, [sp, #8]
    678c:	add	sl, sl, #256	; 0x100
    6790:	cmp	sl, r3
    6794:	blt	6748 <ReadInt64Data.part.3+0xd28>
    6798:	sub	r9, r4, #256	; 0x100
    679c:	sub	r9, r9, #1
    67a0:	lsr	r9, r9, #8
    67a4:	add	r9, r9, #1
    67a8:	lsl	r3, r9, #8
    67ac:	cmp	r4, r3
    67b0:	ble	5acc <ReadInt64Data.part.3+0xac>
    67b4:	sub	r4, r4, r3
    67b8:	ldr	r3, [sp]
    67bc:	mov	r1, r6
    67c0:	mov	r2, r4
    67c4:	mov	r0, r7
    67c8:	add	r9, fp, r9, lsl #11
    67cc:	ldr	r3, [r3]
    67d0:	bl	1520 <fread@plt>
    67d4:	add	r5, r5, r0
    67d8:	cmp	r4, r8
    67dc:	ble	5acc <ReadInt64Data.part.3+0xac>
    67e0:	ldr	r1, [sp, #4]
    67e4:	mov	r3, #0
    67e8:	add	r8, r8, #1
    67ec:	ldrh	r2, [r1], #2
    67f0:	strd	r2, [r9], #8
    67f4:	str	r1, [sp, #4]
    67f8:	b	67d8 <ReadInt64Data.part.3+0xdb8>
    67fc:	cmp	r4, #256	; 0x100
    6800:	add	r7, sp, #24
    6804:	bgt	6848 <ReadInt64Data.part.3+0xe28>
    6808:	ldr	r3, [sp]
    680c:	mov	r2, r4
    6810:	mov	r1, r0
    6814:	mov	r0, r7
    6818:	ldr	r3, [r3]
    681c:	bl	1520 <fread@plt>
    6820:	mov	r5, r0
    6824:	sub	r2, fp, #8
    6828:	mov	r3, #0
    682c:	cmp	r4, r3
    6830:	ble	5acc <ReadInt64Data.part.3+0xac>
    6834:	ldrsb	r0, [r7, r3]
    6838:	add	r3, r3, #1
    683c:	asr	r1, r0, #31
    6840:	strd	r0, [r2, #8]!
    6844:	b	682c <ReadInt64Data.part.3+0xe0c>
    6848:	mov	r8, #0
    684c:	add	r9, fp, #2048	; 0x800
    6850:	mov	r5, r8
    6854:	sub	sl, r4, #256	; 0x100
    6858:	ldr	r3, [sp]
    685c:	mov	r2, #256	; 0x100
    6860:	mov	r1, r6
    6864:	mov	r0, r7
    6868:	ldr	r3, [r3]
    686c:	bl	1520 <fread@plt>
    6870:	add	r5, r5, r0
    6874:	mov	r2, r7
    6878:	sub	r3, r9, #2048	; 0x800
    687c:	ldrsb	r0, [r2], #1
    6880:	asr	r1, r0, #31
    6884:	strd	r0, [r3], #8
    6888:	cmp	r3, r9
    688c:	bne	687c <ReadInt64Data.part.3+0xe5c>
    6890:	add	r8, r8, #256	; 0x100
    6894:	add	r9, r3, #2048	; 0x800
    6898:	cmp	r8, sl
    689c:	blt	6858 <ReadInt64Data.part.3+0xe38>
    68a0:	sub	r3, r4, #256	; 0x100
    68a4:	sub	r3, r3, #1
    68a8:	lsr	r3, r3, #8
    68ac:	add	r8, r3, #1
    68b0:	lsl	r3, r8, #8
    68b4:	cmp	r4, r3
    68b8:	ble	5acc <ReadInt64Data.part.3+0xac>
    68bc:	sub	r4, r4, r3
    68c0:	ldr	r3, [sp]
    68c4:	mov	r1, r6
    68c8:	mov	r2, r4
    68cc:	mov	r0, r7
    68d0:	ldr	r3, [r3]
    68d4:	bl	1520 <fread@plt>
    68d8:	add	r3, fp, r8, lsl #11
    68dc:	add	r5, r5, r0
    68e0:	mov	r2, #0
    68e4:	cmp	r4, r2
    68e8:	ble	5acc <ReadInt64Data.part.3+0xac>
    68ec:	ldrsb	r0, [r7, r2]
    68f0:	add	r2, r2, #1
    68f4:	asr	r1, r0, #31
    68f8:	strd	r0, [r3], #8
    68fc:	b	68e4 <ReadInt64Data.part.3+0xec4>
    6900:	cmp	r4, #256	; 0x100
    6904:	add	r7, sp, #24
    6908:	bgt	694c <ReadInt64Data.part.3+0xf2c>
    690c:	ldr	r3, [sp]
    6910:	mov	r2, r4
    6914:	mov	r1, r0
    6918:	mov	r0, r7
    691c:	ldr	r3, [r3]
    6920:	bl	1520 <fread@plt>
    6924:	mov	r5, r0
    6928:	sub	r2, fp, #8
    692c:	mov	r3, #0
    6930:	cmp	r4, r3
    6934:	ble	5acc <ReadInt64Data.part.3+0xac>
    6938:	ldrb	r0, [r7, r3]
    693c:	mov	r1, #0
    6940:	add	r3, r3, #1
    6944:	strd	r0, [r2, #8]!
    6948:	b	6930 <ReadInt64Data.part.3+0xf10>
    694c:	mov	r8, #0
    6950:	add	r9, fp, #2048	; 0x800
    6954:	mov	r5, r8
    6958:	sub	sl, r4, #256	; 0x100
    695c:	ldr	r3, [sp]
    6960:	mov	r2, #256	; 0x100
    6964:	mov	r1, r6
    6968:	mov	r0, r7
    696c:	ldr	r3, [r3]
    6970:	bl	1520 <fread@plt>
    6974:	add	r5, r5, r0
    6978:	mov	r2, r7
    697c:	sub	r3, r9, #2048	; 0x800
    6980:	ldrb	r0, [r2], #1
    6984:	mov	r1, #0
    6988:	strd	r0, [r3], #8
    698c:	cmp	r3, r9
    6990:	bne	6980 <ReadInt64Data.part.3+0xf60>
    6994:	add	r8, r8, #256	; 0x100
    6998:	add	r9, r3, #2048	; 0x800
    699c:	cmp	r8, sl
    69a0:	blt	695c <ReadInt64Data.part.3+0xf3c>
    69a4:	sub	r3, r4, #256	; 0x100
    69a8:	sub	r3, r3, #1
    69ac:	lsr	r3, r3, #8
    69b0:	add	r8, r3, #1
    69b4:	lsl	r3, r8, #8
    69b8:	cmp	r4, r3
    69bc:	ble	5acc <ReadInt64Data.part.3+0xac>
    69c0:	sub	r4, r4, r3
    69c4:	ldr	r3, [sp]
    69c8:	mov	r1, r6
    69cc:	mov	r2, r4
    69d0:	mov	r0, r7
    69d4:	ldr	r3, [r3]
    69d8:	bl	1520 <fread@plt>
    69dc:	add	r3, fp, r8, lsl #11
    69e0:	add	r5, r5, r0
    69e4:	mov	r2, #0
    69e8:	cmp	r4, r2
    69ec:	ble	5acc <ReadInt64Data.part.3+0xac>
    69f0:	ldrb	r0, [r7, r2]
    69f4:	mov	r1, #0
    69f8:	add	r2, r2, #1
    69fc:	strd	r0, [r3], #8
    6a00:	b	69e8 <ReadInt64Data.part.3+0xfc8>
    6a04:	cmp	r5, #12
    6a08:	bne	6c18 <ReadInt64Data.part.3+0x11f8>
    6a0c:	ldr	r3, [sp]
    6a10:	add	r7, sp, #24
    6a14:	ldr	r8, [r3, #20]
    6a18:	ldr	r3, [r3]
    6a1c:	cmp	r8, #0
    6a20:	beq	6b20 <ReadInt64Data.part.3+0x1100>
    6a24:	cmp	r4, #256	; 0x100
    6a28:	movgt	r8, #0
    6a2c:	subgt	r9, r4, #256	; 0x100
    6a30:	movgt	r5, r8
    6a34:	bgt	6a70 <ReadInt64Data.part.3+0x1050>
    6a38:	mov	r1, r0
    6a3c:	mov	r2, r4
    6a40:	mov	r0, r7
    6a44:	sub	fp, fp, #8
    6a48:	bl	1520 <fread@plt>
    6a4c:	mov	r5, r0
    6a50:	mov	r8, #0
    6a54:	cmp	r4, r8
    6a58:	ble	5acc <ReadInt64Data.part.3+0xac>
    6a5c:	add	r0, r7, r8, lsl #3
    6a60:	add	r8, r8, #1
    6a64:	bl	17ec <Mat_int64Swap>
    6a68:	strd	r0, [fp, #8]!
    6a6c:	b	6a54 <ReadInt64Data.part.3+0x1034>
    6a70:	ldr	r3, [sp]
    6a74:	mov	r2, #256	; 0x100
    6a78:	mov	r1, r6
    6a7c:	mov	r0, r7
    6a80:	mov	sl, #0
    6a84:	ldr	r3, [r3]
    6a88:	bl	1520 <fread@plt>
    6a8c:	add	r3, fp, r8, lsl #3
    6a90:	add	r5, r5, r0
    6a94:	add	r0, r7, sl
    6a98:	str	r3, [sp, #4]
    6a9c:	add	sl, sl, #8
    6aa0:	bl	17ec <Mat_int64Swap>
    6aa4:	ldr	r3, [sp, #4]
    6aa8:	cmp	sl, #2048	; 0x800
    6aac:	strd	r0, [r3], #8
    6ab0:	bne	6a94 <ReadInt64Data.part.3+0x1074>
    6ab4:	add	r8, r8, #256	; 0x100
    6ab8:	cmp	r8, r9
    6abc:	blt	6a70 <ReadInt64Data.part.3+0x1050>
    6ac0:	sub	r8, r4, #256	; 0x100
    6ac4:	sub	r8, r8, #1
    6ac8:	lsr	r8, r8, #8
    6acc:	add	r8, r8, #1
    6ad0:	lsl	r3, r8, #8
    6ad4:	cmp	r4, r3
    6ad8:	ble	5acc <ReadInt64Data.part.3+0xac>
    6adc:	sub	r4, r4, r3
    6ae0:	ldr	r3, [sp]
    6ae4:	mov	r1, r6
    6ae8:	mov	r2, r4
    6aec:	mov	r0, r7
    6af0:	add	r8, fp, r8, lsl #11
    6af4:	mov	r9, #0
    6af8:	ldr	r3, [r3]
    6afc:	bl	1520 <fread@plt>
    6b00:	add	r5, r5, r0
    6b04:	cmp	r4, r9
    6b08:	ble	5acc <ReadInt64Data.part.3+0xac>
    6b0c:	add	r0, r7, r9, lsl #3
    6b10:	add	r9, r9, #1
    6b14:	bl	17ec <Mat_int64Swap>
    6b18:	strd	r0, [r8], #8
    6b1c:	b	6b04 <ReadInt64Data.part.3+0x10e4>
    6b20:	cmp	r4, #256	; 0x100
    6b24:	bgt	6b58 <ReadInt64Data.part.3+0x1138>
    6b28:	mov	r1, r0
    6b2c:	mov	r2, r4
    6b30:	mov	r0, r7
    6b34:	bl	1520 <fread@plt>
    6b38:	mov	r5, r0
    6b3c:	sub	r3, fp, #8
    6b40:	cmp	r4, r8
    6b44:	ble	5acc <ReadInt64Data.part.3+0xac>
    6b48:	ldrd	r0, [r7], #8
    6b4c:	add	r8, r8, #1
    6b50:	strd	r0, [r3, #8]!
    6b54:	b	6b40 <ReadInt64Data.part.3+0x1120>
    6b58:	sub	r3, r4, #256	; 0x100
    6b5c:	add	r9, fp, #2048	; 0x800
    6b60:	mov	sl, r8
    6b64:	mov	r5, r8
    6b68:	str	r3, [sp, #8]
    6b6c:	ldr	r3, [sp]
    6b70:	mov	r2, #256	; 0x100
    6b74:	mov	r1, r6
    6b78:	mov	r0, r7
    6b7c:	ldr	r3, [r3]
    6b80:	bl	1520 <fread@plt>
    6b84:	add	r5, r5, r0
    6b88:	sub	r3, r9, #2048	; 0x800
    6b8c:	str	r7, [sp, #4]
    6b90:	mov	r2, r7
    6b94:	ldrd	r0, [r2], #8
    6b98:	strd	r0, [r3], #8
    6b9c:	cmp	r9, r3
    6ba0:	bne	6b94 <ReadInt64Data.part.3+0x1174>
    6ba4:	ldr	r3, [sp, #8]
    6ba8:	add	sl, sl, #256	; 0x100
    6bac:	add	r9, r9, #2048	; 0x800
    6bb0:	cmp	sl, r3
    6bb4:	blt	6b6c <ReadInt64Data.part.3+0x114c>
    6bb8:	sub	r9, r4, #256	; 0x100
    6bbc:	sub	r9, r9, #1
    6bc0:	lsr	r9, r9, #8
    6bc4:	add	r9, r9, #1
    6bc8:	lsl	r3, r9, #8
    6bcc:	cmp	r4, r3
    6bd0:	ble	5acc <ReadInt64Data.part.3+0xac>
    6bd4:	sub	r4, r4, r3
    6bd8:	ldr	r3, [sp]
    6bdc:	mov	r1, r6
    6be0:	mov	r2, r4
    6be4:	mov	r0, r7
    6be8:	add	r9, fp, r9, lsl #11
    6bec:	ldr	r3, [r3]
    6bf0:	bl	1520 <fread@plt>
    6bf4:	add	r5, r5, r0
    6bf8:	cmp	r4, r8
    6bfc:	ble	5acc <ReadInt64Data.part.3+0xac>
    6c00:	ldr	r1, [sp, #4]
    6c04:	add	r8, r8, #1
    6c08:	ldrd	r2, [r1], #8
    6c0c:	strd	r2, [r9], #8
    6c10:	str	r1, [sp, #4]
    6c14:	b	6bf8 <ReadInt64Data.part.3+0x11d8>
    6c18:	cmp	r5, #13
    6c1c:	movne	r5, #0
    6c20:	bne	5acc <ReadInt64Data.part.3+0xac>
    6c24:	ldr	r3, [sp]
    6c28:	add	r7, sp, #24
    6c2c:	ldr	r8, [r3, #20]
    6c30:	ldr	r3, [r3]
    6c34:	cmp	r8, #0
    6c38:	beq	6d38 <ReadInt64Data.part.3+0x1318>
    6c3c:	cmp	r4, #256	; 0x100
    6c40:	movgt	r8, #0
    6c44:	subgt	r9, r4, #256	; 0x100
    6c48:	movgt	r5, r8
    6c4c:	bgt	6c88 <ReadInt64Data.part.3+0x1268>
    6c50:	mov	r1, r0
    6c54:	mov	r2, r4
    6c58:	mov	r0, r7
    6c5c:	sub	fp, fp, #8
    6c60:	bl	1520 <fread@plt>
    6c64:	mov	r5, r0
    6c68:	mov	r8, #0
    6c6c:	cmp	r4, r8
    6c70:	ble	5acc <ReadInt64Data.part.3+0xac>
    6c74:	add	r0, r7, r8, lsl #3
    6c78:	add	r8, r8, #1
    6c7c:	bl	1844 <Mat_uint64Swap>
    6c80:	strd	r0, [fp, #8]!
    6c84:	b	6c6c <ReadInt64Data.part.3+0x124c>
    6c88:	ldr	r3, [sp]
    6c8c:	mov	r2, #256	; 0x100
    6c90:	mov	r1, r6
    6c94:	mov	r0, r7
    6c98:	mov	sl, #0
    6c9c:	ldr	r3, [r3]
    6ca0:	bl	1520 <fread@plt>
    6ca4:	add	r3, fp, r8, lsl #3
    6ca8:	add	r5, r5, r0
    6cac:	add	r0, r7, sl
    6cb0:	str	r3, [sp, #4]
    6cb4:	add	sl, sl, #8
    6cb8:	bl	1844 <Mat_uint64Swap>
    6cbc:	ldr	r3, [sp, #4]
    6cc0:	cmp	sl, #2048	; 0x800
    6cc4:	strd	r0, [r3], #8
    6cc8:	bne	6cac <ReadInt64Data.part.3+0x128c>
    6ccc:	add	r8, r8, #256	; 0x100
    6cd0:	cmp	r8, r9
    6cd4:	blt	6c88 <ReadInt64Data.part.3+0x1268>
    6cd8:	sub	r8, r4, #256	; 0x100
    6cdc:	sub	r8, r8, #1
    6ce0:	lsr	r8, r8, #8
    6ce4:	add	r8, r8, #1
    6ce8:	lsl	r3, r8, #8
    6cec:	cmp	r4, r3
    6cf0:	ble	5acc <ReadInt64Data.part.3+0xac>
    6cf4:	sub	r4, r4, r3
    6cf8:	ldr	r3, [sp]
    6cfc:	mov	r1, r6
    6d00:	mov	r2, r4
    6d04:	mov	r0, r7
    6d08:	add	r8, fp, r8, lsl #11
    6d0c:	mov	r9, #0
    6d10:	ldr	r3, [r3]
    6d14:	bl	1520 <fread@plt>
    6d18:	add	r5, r5, r0
    6d1c:	cmp	r4, r9
    6d20:	ble	5acc <ReadInt64Data.part.3+0xac>
    6d24:	add	r0, r7, r9, lsl #3
    6d28:	add	r9, r9, #1
    6d2c:	bl	1844 <Mat_uint64Swap>
    6d30:	strd	r0, [r8], #8
    6d34:	b	6d1c <ReadInt64Data.part.3+0x12fc>
    6d38:	cmp	r4, #256	; 0x100
    6d3c:	bgt	6d70 <ReadInt64Data.part.3+0x1350>
    6d40:	mov	r1, r0
    6d44:	mov	r2, r4
    6d48:	mov	r0, r7
    6d4c:	bl	1520 <fread@plt>
    6d50:	mov	r5, r0
    6d54:	sub	r1, fp, #8
    6d58:	cmp	r4, r8
    6d5c:	ble	5acc <ReadInt64Data.part.3+0xac>
    6d60:	ldrd	r2, [r7], #8
    6d64:	add	r8, r8, #1
    6d68:	strd	r2, [r1, #8]!
    6d6c:	b	6d58 <ReadInt64Data.part.3+0x1338>
    6d70:	sub	r3, r4, #256	; 0x100
    6d74:	add	r9, fp, #2048	; 0x800
    6d78:	mov	sl, r8
    6d7c:	mov	r5, r8
    6d80:	str	r3, [sp, #8]
    6d84:	ldr	r3, [sp]
    6d88:	mov	r2, #256	; 0x100
    6d8c:	mov	r1, r6
    6d90:	mov	r0, r7
    6d94:	ldr	r3, [r3]
    6d98:	bl	1520 <fread@plt>
    6d9c:	add	r5, r5, r0
    6da0:	sub	r3, r9, #2048	; 0x800
    6da4:	str	r7, [sp, #4]
    6da8:	mov	r2, r7
    6dac:	ldrd	r0, [r2], #8
    6db0:	strd	r0, [r3], #8
    6db4:	cmp	r3, r9
    6db8:	bne	6dac <ReadInt64Data.part.3+0x138c>
    6dbc:	add	r9, r3, #2048	; 0x800
    6dc0:	ldr	r3, [sp, #8]
    6dc4:	add	sl, sl, #256	; 0x100
    6dc8:	cmp	sl, r3
    6dcc:	blt	6d84 <ReadInt64Data.part.3+0x1364>
    6dd0:	sub	r9, r4, #256	; 0x100
    6dd4:	sub	r9, r9, #1
    6dd8:	lsr	r9, r9, #8
    6ddc:	add	r9, r9, #1
    6de0:	lsl	r3, r9, #8
    6de4:	cmp	r4, r3
    6de8:	ble	5acc <ReadInt64Data.part.3+0xac>
    6dec:	sub	r4, r4, r3
    6df0:	ldr	r3, [sp]
    6df4:	mov	r1, r6
    6df8:	mov	r2, r4
    6dfc:	mov	r0, r7
    6e00:	add	r9, fp, r9, lsl #11
    6e04:	ldr	r3, [r3]
    6e08:	bl	1520 <fread@plt>
    6e0c:	add	r5, r5, r0
    6e10:	cmp	r4, r8
    6e14:	ble	5acc <ReadInt64Data.part.3+0xac>
    6e18:	ldr	r1, [sp, #4]
    6e1c:	add	r8, r8, #1
    6e20:	ldrd	r2, [r1], #8
    6e24:	strd	r2, [r9], #8
    6e28:	str	r1, [sp, #4]
    6e2c:	b	6e10 <ReadInt64Data.part.3+0x13f0>

00006e30 <ReadUInt64Data.part.5>:
    6e30:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    6e34:	sub	sp, sp, #2064	; 0x810
    6e38:	mov	r5, r2
    6e3c:	sub	sp, sp, #12
    6e40:	mov	r4, r3
    6e44:	mov	fp, r1
    6e48:	str	r0, [sp]
    6e4c:	mov	r0, r2
    6e50:	bl	1598 <Mat_SizeOf@plt>
    6e54:	sub	r3, r5, #1
    6e58:	mov	r6, r0
    6e5c:	cmp	r3, #8
    6e60:	addls	pc, pc, r3, lsl #2
    6e64:	b	7e14 <ReadUInt64Data.part.5+0xfe4>
    6e68:	b	7c0c <ReadUInt64Data.part.5+0xddc>
    6e6c:	b	7d10 <ReadUInt64Data.part.5+0xee0>
    6e70:	b	778c <ReadUInt64Data.part.5+0x95c>
    6e74:	b	79cc <ReadUInt64Data.part.5+0xb9c>
    6e78:	b	7324 <ReadUInt64Data.part.5+0x4f4>
    6e7c:	b	754c <ReadUInt64Data.part.5+0x71c>
    6e80:	b	70d8 <ReadUInt64Data.part.5+0x2a8>
    6e84:	b	7e14 <ReadUInt64Data.part.5+0xfe4>
    6e88:	b	6e8c <ReadUInt64Data.part.5+0x5c>
    6e8c:	ldr	r3, [sp]
    6e90:	add	r7, sp, #24
    6e94:	ldr	r8, [r3, #20]
    6e98:	ldr	r3, [r3]
    6e9c:	cmp	r8, #0
    6ea0:	beq	6fc8 <ReadUInt64Data.part.5+0x198>
    6ea4:	cmp	r4, #256	; 0x100
    6ea8:	movgt	r8, #0
    6eac:	subgt	r9, r4, #256	; 0x100
    6eb0:	movgt	r5, r8
    6eb4:	bgt	6f08 <ReadUInt64Data.part.5+0xd8>
    6eb8:	mov	r1, r0
    6ebc:	mov	r2, r4
    6ec0:	mov	r0, r7
    6ec4:	sub	fp, fp, #8
    6ec8:	bl	1520 <fread@plt>
    6ecc:	mov	r5, r0
    6ed0:	mov	r8, #0
    6ed4:	cmp	r4, r8
    6ed8:	bgt	6eec <ReadUInt64Data.part.5+0xbc>
    6edc:	mul	r0, r6, r5
    6ee0:	add	sp, sp, #2064	; 0x810
    6ee4:	add	sp, sp, #12
    6ee8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    6eec:	add	r0, r7, r8, lsl #3
    6ef0:	add	r8, r8, #1
    6ef4:	bl	196c <Mat_doubleSwap>
    6ef8:	vmov	r0, r1, d0
    6efc:	bl	3e878 <__aeabi_d2ulz>
    6f00:	strd	r0, [fp, #8]!
    6f04:	b	6ed4 <ReadUInt64Data.part.5+0xa4>
    6f08:	ldr	r3, [sp]
    6f0c:	mov	r2, #256	; 0x100
    6f10:	mov	r1, r6
    6f14:	mov	r0, r7
    6f18:	mov	sl, #0
    6f1c:	ldr	r3, [r3]
    6f20:	bl	1520 <fread@plt>
    6f24:	add	r3, fp, r8, lsl #3
    6f28:	add	r5, r5, r0
    6f2c:	add	r0, r7, sl
    6f30:	str	r3, [sp, #4]
    6f34:	add	sl, sl, #8
    6f38:	bl	196c <Mat_doubleSwap>
    6f3c:	vmov	r0, r1, d0
    6f40:	bl	3e878 <__aeabi_d2ulz>
    6f44:	ldr	r3, [sp, #4]
    6f48:	cmp	sl, #2048	; 0x800
    6f4c:	strd	r0, [r3], #8
    6f50:	bne	6f2c <ReadUInt64Data.part.5+0xfc>
    6f54:	add	r8, r8, #256	; 0x100
    6f58:	cmp	r8, r9
    6f5c:	blt	6f08 <ReadUInt64Data.part.5+0xd8>
    6f60:	sub	r8, r4, #256	; 0x100
    6f64:	sub	r8, r8, #1
    6f68:	lsr	r8, r8, #8
    6f6c:	add	r8, r8, #1
    6f70:	lsl	r3, r8, #8
    6f74:	cmp	r4, r3
    6f78:	ble	6edc <ReadUInt64Data.part.5+0xac>
    6f7c:	sub	r4, r4, r3
    6f80:	ldr	r3, [sp]
    6f84:	mov	r1, r6
    6f88:	mov	r2, r4
    6f8c:	mov	r0, r7
    6f90:	add	r8, fp, r8, lsl #11
    6f94:	mov	r9, #0
    6f98:	ldr	r3, [r3]
    6f9c:	bl	1520 <fread@plt>
    6fa0:	add	r5, r5, r0
    6fa4:	cmp	r4, r9
    6fa8:	ble	6edc <ReadUInt64Data.part.5+0xac>
    6fac:	add	r0, r7, r9, lsl #3
    6fb0:	add	r9, r9, #1
    6fb4:	bl	196c <Mat_doubleSwap>
    6fb8:	vmov	r0, r1, d0
    6fbc:	bl	3e878 <__aeabi_d2ulz>
    6fc0:	strd	r0, [r8], #8
    6fc4:	b	6fa4 <ReadUInt64Data.part.5+0x174>
    6fc8:	cmp	r4, #256	; 0x100
    6fcc:	bgt	7004 <ReadUInt64Data.part.5+0x1d4>
    6fd0:	mov	r1, r0
    6fd4:	mov	r2, r4
    6fd8:	mov	r0, r7
    6fdc:	sub	fp, fp, #8
    6fe0:	bl	1520 <fread@plt>
    6fe4:	mov	r5, r0
    6fe8:	cmp	r4, r8
    6fec:	ble	6edc <ReadUInt64Data.part.5+0xac>
    6ff0:	ldrd	r0, [r7], #8
    6ff4:	add	r8, r8, #1
    6ff8:	bl	3e878 <__aeabi_d2ulz>
    6ffc:	strd	r0, [fp, #8]!
    7000:	b	6fe8 <ReadUInt64Data.part.5+0x1b8>
    7004:	sub	r3, r4, #256	; 0x100
    7008:	add	r9, fp, #2048	; 0x800
    700c:	mov	sl, r8
    7010:	mov	r5, r8
    7014:	str	r3, [sp, #8]
    7018:	ldr	r3, [sp]
    701c:	mov	r2, #256	; 0x100
    7020:	mov	r1, r6
    7024:	mov	r0, r7
    7028:	ldr	r3, [r3]
    702c:	bl	1520 <fread@plt>
    7030:	add	r5, r5, r0
    7034:	sub	r3, r9, #2048	; 0x800
    7038:	str	r7, [sp, #4]
    703c:	mov	r2, r7
    7040:	ldrd	r0, [r2], #8
    7044:	strd	r2, [sp, #12]
    7048:	str	r2, [sp, #20]
    704c:	bl	3e878 <__aeabi_d2ulz>
    7050:	ldrd	r2, [sp, #12]
    7054:	strd	r0, [r3], #8
    7058:	cmp	r3, r9
    705c:	bne	7040 <ReadUInt64Data.part.5+0x210>
    7060:	add	r9, r3, #2048	; 0x800
    7064:	ldr	r3, [sp, #8]
    7068:	add	sl, sl, #256	; 0x100
    706c:	cmp	sl, r3
    7070:	blt	7018 <ReadUInt64Data.part.5+0x1e8>
    7074:	sub	r9, r4, #256	; 0x100
    7078:	sub	r9, r9, #1
    707c:	lsr	r9, r9, #8
    7080:	add	r9, r9, #1
    7084:	lsl	r3, r9, #8
    7088:	cmp	r4, r3
    708c:	ble	6edc <ReadUInt64Data.part.5+0xac>
    7090:	sub	r4, r4, r3
    7094:	ldr	r3, [sp]
    7098:	mov	r1, r6
    709c:	mov	r2, r4
    70a0:	mov	r0, r7
    70a4:	add	r9, fp, r9, lsl #11
    70a8:	ldr	r3, [r3]
    70ac:	bl	1520 <fread@plt>
    70b0:	add	r5, r5, r0
    70b4:	cmp	r4, r8
    70b8:	ble	6edc <ReadUInt64Data.part.5+0xac>
    70bc:	ldr	r3, [sp, #4]
    70c0:	add	r8, r8, #1
    70c4:	ldrd	r0, [r3], #8
    70c8:	str	r3, [sp, #4]
    70cc:	bl	3e878 <__aeabi_d2ulz>
    70d0:	strd	r0, [r9], #8
    70d4:	b	70b4 <ReadUInt64Data.part.5+0x284>
    70d8:	ldr	r3, [sp]
    70dc:	add	r7, sp, #24
    70e0:	ldr	r8, [r3, #20]
    70e4:	ldr	r3, [r3]
    70e8:	cmp	r8, #0
    70ec:	beq	7214 <ReadUInt64Data.part.5+0x3e4>
    70f0:	cmp	r4, #256	; 0x100
    70f4:	bgt	7138 <ReadUInt64Data.part.5+0x308>
    70f8:	mov	r1, r0
    70fc:	mov	r2, r4
    7100:	mov	r0, r7
    7104:	sub	fp, fp, #8
    7108:	bl	1520 <fread@plt>
    710c:	mov	r5, r0
    7110:	mov	r8, #0
    7114:	cmp	r4, r8
    7118:	ble	6edc <ReadUInt64Data.part.5+0xac>
    711c:	add	r0, r7, r8, lsl #2
    7120:	add	r8, r8, #1
    7124:	bl	193c <Mat_floatSwap>
    7128:	vmov	r0, s0
    712c:	bl	3e838 <__aeabi_f2ulz>
    7130:	strd	r0, [fp, #8]!
    7134:	b	7114 <ReadUInt64Data.part.5+0x2e4>
    7138:	mov	r8, #0
    713c:	add	r9, fp, #2048	; 0x800
    7140:	mov	r5, r8
    7144:	sub	sl, r4, #256	; 0x100
    7148:	ldr	r3, [sp]
    714c:	mov	r2, #256	; 0x100
    7150:	mov	r1, r6
    7154:	mov	r0, r7
    7158:	ldr	r3, [r3]
    715c:	bl	1520 <fread@plt>
    7160:	add	r5, r5, r0
    7164:	sub	r2, r9, #2048	; 0x800
    7168:	mov	r3, r7
    716c:	mov	r0, r3
    7170:	str	r3, [sp, #4]
    7174:	str	r2, [sp, #8]
    7178:	bl	193c <Mat_floatSwap>
    717c:	vmov	r0, s0
    7180:	bl	3e838 <__aeabi_f2ulz>
    7184:	ldr	r3, [sp, #4]
    7188:	ldr	r2, [sp, #8]
    718c:	add	r3, r3, #4
    7190:	strd	r0, [r2], #8
    7194:	cmp	r2, r9
    7198:	bne	716c <ReadUInt64Data.part.5+0x33c>
    719c:	add	r8, r8, #256	; 0x100
    71a0:	add	r9, r2, #2048	; 0x800
    71a4:	cmp	r8, sl
    71a8:	blt	7148 <ReadUInt64Data.part.5+0x318>
    71ac:	sub	r8, r4, #256	; 0x100
    71b0:	sub	r8, r8, #1
    71b4:	lsr	r8, r8, #8
    71b8:	add	r8, r8, #1
    71bc:	lsl	r3, r8, #8
    71c0:	cmp	r4, r3
    71c4:	ble	6edc <ReadUInt64Data.part.5+0xac>
    71c8:	sub	r4, r4, r3
    71cc:	ldr	r3, [sp]
    71d0:	mov	r1, r6
    71d4:	mov	r2, r4
    71d8:	mov	r0, r7
    71dc:	add	r8, fp, r8, lsl #11
    71e0:	mov	r9, #0
    71e4:	ldr	r3, [r3]
    71e8:	bl	1520 <fread@plt>
    71ec:	add	r5, r5, r0
    71f0:	cmp	r4, r9
    71f4:	ble	6edc <ReadUInt64Data.part.5+0xac>
    71f8:	add	r0, r7, r9, lsl #2
    71fc:	add	r9, r9, #1
    7200:	bl	193c <Mat_floatSwap>
    7204:	vmov	r0, s0
    7208:	bl	3e838 <__aeabi_f2ulz>
    720c:	strd	r0, [r8], #8
    7210:	b	71f0 <ReadUInt64Data.part.5+0x3c0>
    7214:	cmp	r4, #256	; 0x100
    7218:	bgt	7250 <ReadUInt64Data.part.5+0x420>
    721c:	mov	r1, r0
    7220:	mov	r2, r4
    7224:	mov	r0, r7
    7228:	sub	fp, fp, #8
    722c:	bl	1520 <fread@plt>
    7230:	mov	r5, r0
    7234:	cmp	r4, r8
    7238:	ble	6edc <ReadUInt64Data.part.5+0xac>
    723c:	ldr	r0, [r7], #4
    7240:	add	r8, r8, #1
    7244:	bl	3e838 <__aeabi_f2ulz>
    7248:	strd	r0, [fp, #8]!
    724c:	b	7234 <ReadUInt64Data.part.5+0x404>
    7250:	sub	r3, r4, #256	; 0x100
    7254:	add	r9, fp, #2048	; 0x800
    7258:	mov	sl, r8
    725c:	mov	r5, r8
    7260:	str	r3, [sp, #8]
    7264:	ldr	r3, [sp]
    7268:	mov	r2, #256	; 0x100
    726c:	mov	r1, r6
    7270:	mov	r0, r7
    7274:	ldr	r3, [r3]
    7278:	bl	1520 <fread@plt>
    727c:	add	r5, r5, r0
    7280:	sub	r3, r9, #2048	; 0x800
    7284:	str	r7, [sp, #4]
    7288:	mov	r2, r7
    728c:	ldr	r0, [r2], #4
    7290:	strd	r2, [sp, #12]
    7294:	str	r2, [sp, #20]
    7298:	bl	3e838 <__aeabi_f2ulz>
    729c:	ldrd	r2, [sp, #12]
    72a0:	strd	r0, [r3], #8
    72a4:	cmp	r3, r9
    72a8:	bne	728c <ReadUInt64Data.part.5+0x45c>
    72ac:	add	r9, r3, #2048	; 0x800
    72b0:	ldr	r3, [sp, #8]
    72b4:	add	sl, sl, #256	; 0x100
    72b8:	cmp	sl, r3
    72bc:	blt	7264 <ReadUInt64Data.part.5+0x434>
    72c0:	sub	r9, r4, #256	; 0x100
    72c4:	sub	r9, r9, #1
    72c8:	lsr	r9, r9, #8
    72cc:	add	r9, r9, #1
    72d0:	lsl	r3, r9, #8
    72d4:	cmp	r4, r3
    72d8:	ble	6edc <ReadUInt64Data.part.5+0xac>
    72dc:	sub	r4, r4, r3
    72e0:	ldr	r3, [sp]
    72e4:	mov	r1, r6
    72e8:	mov	r2, r4
    72ec:	mov	r0, r7
    72f0:	add	r9, fp, r9, lsl #11
    72f4:	ldr	r3, [r3]
    72f8:	bl	1520 <fread@plt>
    72fc:	add	r5, r5, r0
    7300:	cmp	r4, r8
    7304:	ble	6edc <ReadUInt64Data.part.5+0xac>
    7308:	ldr	r3, [sp, #4]
    730c:	add	r8, r8, #1
    7310:	ldr	r0, [r3], #4
    7314:	str	r3, [sp, #4]
    7318:	bl	3e838 <__aeabi_f2ulz>
    731c:	strd	r0, [r9], #8
    7320:	b	7300 <ReadUInt64Data.part.5+0x4d0>
    7324:	ldr	r3, [sp]
    7328:	add	r7, sp, #24
    732c:	ldr	r8, [r3, #20]
    7330:	ldr	r3, [r3]
    7334:	cmp	r8, #0
    7338:	beq	7454 <ReadUInt64Data.part.5+0x624>
    733c:	cmp	r4, #256	; 0x100
    7340:	bgt	7380 <ReadUInt64Data.part.5+0x550>
    7344:	mov	r1, r0
    7348:	mov	r2, r4
    734c:	mov	r0, r7
    7350:	sub	fp, fp, #8
    7354:	bl	1520 <fread@plt>
    7358:	mov	r5, r0
    735c:	mov	r8, #0
    7360:	cmp	r4, r8
    7364:	ble	6edc <ReadUInt64Data.part.5+0xac>
    7368:	add	r0, r7, r8, lsl #2
    736c:	add	r8, r8, #1
    7370:	bl	189c <Mat_int32Swap>
    7374:	asr	r1, r0, #31
    7378:	strd	r0, [fp, #8]!
    737c:	b	7360 <ReadUInt64Data.part.5+0x530>
    7380:	mov	r8, #0
    7384:	add	r9, fp, #2048	; 0x800
    7388:	mov	r5, r8
    738c:	sub	sl, r4, #256	; 0x100
    7390:	ldr	r3, [sp]
    7394:	mov	r2, #256	; 0x100
    7398:	mov	r1, r6
    739c:	mov	r0, r7
    73a0:	ldr	r3, [r3]
    73a4:	bl	1520 <fread@plt>
    73a8:	add	r5, r5, r0
    73ac:	sub	r2, r9, #2048	; 0x800
    73b0:	mov	r3, r7
    73b4:	mov	r0, r3
    73b8:	str	r3, [sp, #4]
    73bc:	str	r2, [sp, #8]
    73c0:	bl	189c <Mat_int32Swap>
    73c4:	ldr	r3, [sp, #4]
    73c8:	asr	r1, r0, #31
    73cc:	ldr	r2, [sp, #8]
    73d0:	add	r3, r3, #4
    73d4:	strd	r0, [r2], #8
    73d8:	cmp	r2, r9
    73dc:	bne	73b4 <ReadUInt64Data.part.5+0x584>
    73e0:	add	r8, r8, #256	; 0x100
    73e4:	add	r9, r2, #2048	; 0x800
    73e8:	cmp	r8, sl
    73ec:	blt	7390 <ReadUInt64Data.part.5+0x560>
    73f0:	sub	r8, r4, #256	; 0x100
    73f4:	sub	r8, r8, #1
    73f8:	lsr	r8, r8, #8
    73fc:	add	r8, r8, #1
    7400:	lsl	r3, r8, #8
    7404:	cmp	r4, r3
    7408:	ble	6edc <ReadUInt64Data.part.5+0xac>
    740c:	sub	r4, r4, r3
    7410:	ldr	r3, [sp]
    7414:	mov	r1, r6
    7418:	mov	r2, r4
    741c:	mov	r0, r7
    7420:	add	r8, fp, r8, lsl #11
    7424:	mov	r9, #0
    7428:	ldr	r3, [r3]
    742c:	bl	1520 <fread@plt>
    7430:	add	r5, r5, r0
    7434:	cmp	r4, r9
    7438:	ble	6edc <ReadUInt64Data.part.5+0xac>
    743c:	add	r0, r7, r9, lsl #2
    7440:	add	r9, r9, #1
    7444:	bl	189c <Mat_int32Swap>
    7448:	asr	r1, r0, #31
    744c:	strd	r0, [r8], #8
    7450:	b	7434 <ReadUInt64Data.part.5+0x604>
    7454:	cmp	r4, #256	; 0x100
    7458:	bgt	7490 <ReadUInt64Data.part.5+0x660>
    745c:	mov	r1, r0
    7460:	mov	r2, r4
    7464:	mov	r0, r7
    7468:	bl	1520 <fread@plt>
    746c:	mov	r5, r0
    7470:	sub	r1, fp, #8
    7474:	cmp	r4, r8
    7478:	ble	6edc <ReadUInt64Data.part.5+0xac>
    747c:	ldr	r2, [r7, r8, lsl #2]
    7480:	add	r8, r8, #1
    7484:	asr	r3, r2, #31
    7488:	strd	r2, [r1, #8]!
    748c:	b	7474 <ReadUInt64Data.part.5+0x644>
    7490:	sub	r3, r4, #256	; 0x100
    7494:	add	sl, fp, #2048	; 0x800
    7498:	mov	r9, r8
    749c:	mov	r5, r8
    74a0:	str	r3, [sp, #4]
    74a4:	ldr	r3, [sp]
    74a8:	mov	r2, #256	; 0x100
    74ac:	mov	r1, r6
    74b0:	mov	r0, r7
    74b4:	ldr	r3, [r3]
    74b8:	bl	1520 <fread@plt>
    74bc:	add	r5, r5, r0
    74c0:	mov	r2, r7
    74c4:	sub	r3, sl, #2048	; 0x800
    74c8:	ldr	r0, [r2], #4
    74cc:	asr	r1, r0, #31
    74d0:	strd	r0, [r3], #8
    74d4:	cmp	r3, sl
    74d8:	bne	74c8 <ReadUInt64Data.part.5+0x698>
    74dc:	add	sl, r3, #2048	; 0x800
    74e0:	ldr	r3, [sp, #4]
    74e4:	add	r9, r9, #256	; 0x100
    74e8:	cmp	r9, r3
    74ec:	blt	74a4 <ReadUInt64Data.part.5+0x674>
    74f0:	sub	r9, r4, #256	; 0x100
    74f4:	sub	r9, r9, #1
    74f8:	lsr	r9, r9, #8
    74fc:	add	r9, r9, #1
    7500:	lsl	r3, r9, #8
    7504:	cmp	r4, r3
    7508:	ble	6edc <ReadUInt64Data.part.5+0xac>
    750c:	sub	r4, r4, r3
    7510:	ldr	r3, [sp]
    7514:	mov	r1, r6
    7518:	mov	r2, r4
    751c:	mov	r0, r7
    7520:	add	r9, fp, r9, lsl #11
    7524:	ldr	r3, [r3]
    7528:	bl	1520 <fread@plt>
    752c:	add	r5, r5, r0
    7530:	cmp	r4, r8
    7534:	ble	6edc <ReadUInt64Data.part.5+0xac>
    7538:	ldr	r2, [r7, r8, lsl #2]
    753c:	add	r8, r8, #1
    7540:	asr	r3, r2, #31
    7544:	strd	r2, [r9], #8
    7548:	b	7530 <ReadUInt64Data.part.5+0x700>
    754c:	ldr	r3, [sp]
    7550:	add	r8, sp, #24
    7554:	ldr	r7, [r3, #20]
    7558:	ldr	r3, [r3]
    755c:	cmp	r7, #0
    7560:	beq	7684 <ReadUInt64Data.part.5+0x854>
    7564:	cmp	r4, #256	; 0x100
    7568:	bgt	75ac <ReadUInt64Data.part.5+0x77c>
    756c:	mov	r1, r0
    7570:	mov	r2, r4
    7574:	mov	r0, r8
    7578:	mov	r7, #0
    757c:	bl	1520 <fread@plt>
    7580:	mov	r5, r0
    7584:	sub	fp, fp, #8
    7588:	mov	sl, r7
    758c:	cmp	r4, r7
    7590:	ble	6edc <ReadUInt64Data.part.5+0xac>
    7594:	add	r0, r8, r7, lsl #2
    7598:	add	r7, r7, #1
    759c:	bl	18cc <Mat_uint32Swap>
    75a0:	str	r0, [fp, #8]!
    75a4:	str	sl, [fp, #4]
    75a8:	b	758c <ReadUInt64Data.part.5+0x75c>
    75ac:	mov	r7, #0
    75b0:	add	r9, fp, #2048	; 0x800
    75b4:	mov	r5, r7
    75b8:	sub	sl, r4, #256	; 0x100
    75bc:	ldr	r3, [sp]
    75c0:	mov	r2, #256	; 0x100
    75c4:	mov	r1, r6
    75c8:	mov	r0, r8
    75cc:	ldr	r3, [r3]
    75d0:	bl	1520 <fread@plt>
    75d4:	add	r5, r5, r0
    75d8:	sub	r3, r9, #2048	; 0x800
    75dc:	mov	r2, r8
    75e0:	mov	r0, r2
    75e4:	strd	r2, [sp, #4]
    75e8:	bl	18cc <Mat_uint32Swap>
    75ec:	ldr	r3, [sp, #8]
    75f0:	mov	r2, #0
    75f4:	stm	r3, {r0, r2}
    75f8:	add	r3, r3, #8
    75fc:	ldr	r2, [sp, #4]
    7600:	cmp	r3, r9
    7604:	add	r2, r2, #4
    7608:	bne	75e0 <ReadUInt64Data.part.5+0x7b0>
    760c:	add	r7, r7, #256	; 0x100
    7610:	add	r9, r3, #2048	; 0x800
    7614:	cmp	r7, sl
    7618:	blt	75bc <ReadUInt64Data.part.5+0x78c>
    761c:	sub	r7, r4, #256	; 0x100
    7620:	sub	r7, r7, #1
    7624:	lsr	r7, r7, #8
    7628:	add	r7, r7, #1
    762c:	lsl	r3, r7, #8
    7630:	cmp	r4, r3
    7634:	ble	6edc <ReadUInt64Data.part.5+0xac>
    7638:	sub	r4, r4, r3
    763c:	ldr	r3, [sp]
    7640:	mov	r1, r6
    7644:	mov	r2, r4
    7648:	mov	r0, r8
    764c:	add	r7, fp, r7, lsl #11
    7650:	mov	r9, #0
    7654:	mov	sl, r9
    7658:	ldr	r3, [r3]
    765c:	bl	1520 <fread@plt>
    7660:	add	r5, r5, r0
    7664:	cmp	r4, r9
    7668:	ble	6edc <ReadUInt64Data.part.5+0xac>
    766c:	add	r0, r8, r9, lsl #2
    7670:	add	r9, r9, #1
    7674:	bl	18cc <Mat_uint32Swap>
    7678:	stm	r7, {r0, sl}
    767c:	add	r7, r7, #8
    7680:	b	7664 <ReadUInt64Data.part.5+0x834>
    7684:	cmp	r4, #256	; 0x100
    7688:	bgt	76c4 <ReadUInt64Data.part.5+0x894>
    768c:	mov	r2, r4
    7690:	mov	r1, r0
    7694:	mov	r0, r8
    7698:	bl	1520 <fread@plt>
    769c:	mov	r5, r0
    76a0:	sub	r3, fp, #8
    76a4:	mov	r2, r7
    76a8:	cmp	r4, r7
    76ac:	ble	6edc <ReadUInt64Data.part.5+0xac>
    76b0:	ldr	r1, [r8, r7, lsl #2]
    76b4:	add	r7, r7, #1
    76b8:	str	r1, [r3, #8]!
    76bc:	str	r2, [r3, #4]
    76c0:	b	76a8 <ReadUInt64Data.part.5+0x878>
    76c4:	sub	r3, r4, #256	; 0x100
    76c8:	add	sl, fp, #2048	; 0x800
    76cc:	mov	r9, r7
    76d0:	mov	r5, r7
    76d4:	str	r3, [sp, #4]
    76d8:	ldr	r3, [sp]
    76dc:	mov	r2, #256	; 0x100
    76e0:	mov	r1, r6
    76e4:	mov	r0, r8
    76e8:	ldr	r3, [r3]
    76ec:	bl	1520 <fread@plt>
    76f0:	add	r5, r5, r0
    76f4:	mov	r2, r8
    76f8:	sub	r3, sl, #2048	; 0x800
    76fc:	ldr	r1, [r2], #4
    7700:	add	r3, r3, #8
    7704:	str	r1, [r3, #-8]
    7708:	mov	r1, #0
    770c:	str	r1, [r3, #-4]
    7710:	cmp	r3, sl
    7714:	bne	76fc <ReadUInt64Data.part.5+0x8cc>
    7718:	add	sl, r3, #2048	; 0x800
    771c:	ldr	r3, [sp, #4]
    7720:	add	r9, r9, #256	; 0x100
    7724:	cmp	r9, r3
    7728:	blt	76d8 <ReadUInt64Data.part.5+0x8a8>
    772c:	sub	r9, r4, #256	; 0x100
    7730:	sub	r9, r9, #1
    7734:	lsr	r9, r9, #8
    7738:	add	r9, r9, #1
    773c:	lsl	r3, r9, #8
    7740:	cmp	r4, r3
    7744:	ble	6edc <ReadUInt64Data.part.5+0xac>
    7748:	sub	r4, r4, r3
    774c:	ldr	r3, [sp]
    7750:	mov	r1, r6
    7754:	mov	r2, r4
    7758:	mov	r0, r8
    775c:	add	r9, fp, r9, lsl #11
    7760:	ldr	r3, [r3]
    7764:	bl	1520 <fread@plt>
    7768:	add	r5, r5, r0
    776c:	mov	r3, #0
    7770:	cmp	r4, r7
    7774:	ble	6edc <ReadUInt64Data.part.5+0xac>
    7778:	ldr	r2, [r8, r7, lsl #2]
    777c:	add	r9, r9, #8
    7780:	add	r7, r7, #1
    7784:	strd	r2, [r9, #-8]
    7788:	b	7770 <ReadUInt64Data.part.5+0x940>
    778c:	ldr	r3, [sp]
    7790:	add	r7, sp, #24
    7794:	ldr	r8, [r3, #20]
    7798:	ldr	r3, [r3]
    779c:	cmp	r8, #0
    77a0:	beq	78c8 <ReadUInt64Data.part.5+0xa98>
    77a4:	cmp	r4, #256	; 0x100
    77a8:	bgt	77ec <ReadUInt64Data.part.5+0x9bc>
    77ac:	mov	r1, r0
    77b0:	mov	r2, r4
    77b4:	mov	r0, r7
    77b8:	sub	fp, fp, #8
    77bc:	bl	1520 <fread@plt>
    77c0:	mov	r5, r0
    77c4:	mov	r8, #0
    77c8:	cmp	r4, r8
    77cc:	ble	6edc <ReadUInt64Data.part.5+0xac>
    77d0:	add	r0, r7, r8, lsl #1
    77d4:	add	r8, r8, #1
    77d8:	bl	18fc <Mat_int16Swap>
    77dc:	sxth	r0, r0
    77e0:	asr	r1, r0, #31
    77e4:	strd	r0, [fp, #8]!
    77e8:	b	77c8 <ReadUInt64Data.part.5+0x998>
    77ec:	mov	r8, #0
    77f0:	add	r9, fp, #2048	; 0x800
    77f4:	mov	r5, r8
    77f8:	sub	sl, r4, #256	; 0x100
    77fc:	ldr	r3, [sp]
    7800:	mov	r2, #256	; 0x100
    7804:	mov	r1, r6
    7808:	mov	r0, r7
    780c:	ldr	r3, [r3]
    7810:	bl	1520 <fread@plt>
    7814:	add	r5, r5, r0
    7818:	sub	r2, r9, #2048	; 0x800
    781c:	mov	r3, r7
    7820:	mov	r0, r3
    7824:	str	r3, [sp, #4]
    7828:	str	r2, [sp, #8]
    782c:	bl	18fc <Mat_int16Swap>
    7830:	sxth	r0, r0
    7834:	ldr	r3, [sp, #4]
    7838:	asr	r1, r0, #31
    783c:	ldr	r2, [sp, #8]
    7840:	add	r3, r3, #2
    7844:	strd	r0, [r2], #8
    7848:	cmp	r2, r9
    784c:	bne	7820 <ReadUInt64Data.part.5+0x9f0>
    7850:	add	r8, r8, #256	; 0x100
    7854:	add	r9, r2, #2048	; 0x800
    7858:	cmp	r8, sl
    785c:	blt	77fc <ReadUInt64Data.part.5+0x9cc>
    7860:	sub	r8, r4, #256	; 0x100
    7864:	sub	r8, r8, #1
    7868:	lsr	r8, r8, #8
    786c:	add	r8, r8, #1
    7870:	lsl	r3, r8, #8
    7874:	cmp	r4, r3
    7878:	ble	6edc <ReadUInt64Data.part.5+0xac>
    787c:	sub	r4, r4, r3
    7880:	ldr	r3, [sp]
    7884:	mov	r1, r6
    7888:	mov	r2, r4
    788c:	mov	r0, r7
    7890:	add	r8, fp, r8, lsl #11
    7894:	mov	r9, #0
    7898:	ldr	r3, [r3]
    789c:	bl	1520 <fread@plt>
    78a0:	add	r5, r5, r0
    78a4:	cmp	r4, r9
    78a8:	ble	6edc <ReadUInt64Data.part.5+0xac>
    78ac:	add	r0, r7, r9, lsl #1
    78b0:	add	r9, r9, #1
    78b4:	bl	18fc <Mat_int16Swap>
    78b8:	sxth	r0, r0
    78bc:	asr	r1, r0, #31
    78c0:	strd	r0, [r8], #8
    78c4:	b	78a4 <ReadUInt64Data.part.5+0xa74>
    78c8:	cmp	r4, #256	; 0x100
    78cc:	bgt	7904 <ReadUInt64Data.part.5+0xad4>
    78d0:	mov	r1, r0
    78d4:	mov	r2, r4
    78d8:	mov	r0, r7
    78dc:	bl	1520 <fread@plt>
    78e0:	mov	r5, r0
    78e4:	sub	r1, fp, #8
    78e8:	cmp	r4, r8
    78ec:	ble	6edc <ReadUInt64Data.part.5+0xac>
    78f0:	ldrsh	r2, [r7], #2
    78f4:	add	r8, r8, #1
    78f8:	asr	r3, r2, #31
    78fc:	strd	r2, [r1, #8]!
    7900:	b	78e8 <ReadUInt64Data.part.5+0xab8>
    7904:	sub	r3, r4, #256	; 0x100
    7908:	add	r9, fp, #2048	; 0x800
    790c:	mov	sl, r8
    7910:	mov	r5, r8
    7914:	str	r3, [sp, #8]
    7918:	ldr	r3, [sp]
    791c:	mov	r2, #256	; 0x100
    7920:	mov	r1, r6
    7924:	mov	r0, r7
    7928:	ldr	r3, [r3]
    792c:	bl	1520 <fread@plt>
    7930:	add	r5, r5, r0
    7934:	sub	r3, r9, #2048	; 0x800
    7938:	str	r7, [sp, #4]
    793c:	mov	r2, r7
    7940:	ldrsh	r0, [r2], #2
    7944:	asr	r1, r0, #31
    7948:	strd	r0, [r3], #8
    794c:	cmp	r3, r9
    7950:	bne	7940 <ReadUInt64Data.part.5+0xb10>
    7954:	add	r9, r3, #2048	; 0x800
    7958:	ldr	r3, [sp, #8]
    795c:	add	sl, sl, #256	; 0x100
    7960:	cmp	sl, r3
    7964:	blt	7918 <ReadUInt64Data.part.5+0xae8>
    7968:	sub	r9, r4, #256	; 0x100
    796c:	sub	r9, r9, #1
    7970:	lsr	r9, r9, #8
    7974:	add	r9, r9, #1
    7978:	lsl	r3, r9, #8
    797c:	cmp	r4, r3
    7980:	ble	6edc <ReadUInt64Data.part.5+0xac>
    7984:	sub	r4, r4, r3
    7988:	ldr	r3, [sp]
    798c:	mov	r1, r6
    7990:	mov	r2, r4
    7994:	mov	r0, r7
    7998:	add	r9, fp, r9, lsl #11
    799c:	ldr	r3, [r3]
    79a0:	bl	1520 <fread@plt>
    79a4:	add	r5, r5, r0
    79a8:	cmp	r4, r8
    79ac:	ble	6edc <ReadUInt64Data.part.5+0xac>
    79b0:	ldr	r1, [sp, #4]
    79b4:	add	r8, r8, #1
    79b8:	ldrsh	r2, [r1], #2
    79bc:	asr	r3, r2, #31
    79c0:	str	r1, [sp, #4]
    79c4:	strd	r2, [r9], #8
    79c8:	b	79a8 <ReadUInt64Data.part.5+0xb78>
    79cc:	ldr	r3, [sp]
    79d0:	add	r7, sp, #24
    79d4:	ldr	r8, [r3, #20]
    79d8:	ldr	r3, [r3]
    79dc:	cmp	r8, #0
    79e0:	beq	7b08 <ReadUInt64Data.part.5+0xcd8>
    79e4:	cmp	r4, #256	; 0x100
    79e8:	bgt	7a2c <ReadUInt64Data.part.5+0xbfc>
    79ec:	mov	r1, r0
    79f0:	mov	r2, r4
    79f4:	mov	r0, r7
    79f8:	sub	fp, fp, #8
    79fc:	bl	1520 <fread@plt>
    7a00:	mov	r5, r0
    7a04:	mov	r8, #0
    7a08:	cmp	r4, r8
    7a0c:	ble	6edc <ReadUInt64Data.part.5+0xac>
    7a10:	add	r0, r7, r8, lsl #1
    7a14:	add	r8, r8, #1
    7a18:	bl	191c <Mat_uint16Swap>
    7a1c:	uxth	r0, r0
    7a20:	mov	r1, #0
    7a24:	strd	r0, [fp, #8]!
    7a28:	b	7a08 <ReadUInt64Data.part.5+0xbd8>
    7a2c:	mov	r8, #0
    7a30:	add	r9, fp, #2048	; 0x800
    7a34:	mov	r5, r8
    7a38:	sub	sl, r4, #256	; 0x100
    7a3c:	ldr	r3, [sp]
    7a40:	mov	r2, #256	; 0x100
    7a44:	mov	r1, r6
    7a48:	mov	r0, r7
    7a4c:	ldr	r3, [r3]
    7a50:	bl	1520 <fread@plt>
    7a54:	add	r5, r5, r0
    7a58:	sub	r2, r9, #2048	; 0x800
    7a5c:	mov	r3, r7
    7a60:	mov	r0, r3
    7a64:	str	r3, [sp, #4]
    7a68:	str	r2, [sp, #8]
    7a6c:	bl	191c <Mat_uint16Swap>
    7a70:	ldr	r3, [sp, #4]
    7a74:	uxth	r0, r0
    7a78:	mov	r1, #0
    7a7c:	ldr	r2, [sp, #8]
    7a80:	add	r3, r3, #2
    7a84:	strd	r0, [r2], #8
    7a88:	cmp	r2, r9
    7a8c:	bne	7a60 <ReadUInt64Data.part.5+0xc30>
    7a90:	add	r8, r8, #256	; 0x100
    7a94:	add	r9, r2, #2048	; 0x800
    7a98:	cmp	r8, sl
    7a9c:	blt	7a3c <ReadUInt64Data.part.5+0xc0c>
    7aa0:	sub	r8, r4, #256	; 0x100
    7aa4:	sub	r8, r8, #1
    7aa8:	lsr	r8, r8, #8
    7aac:	add	r8, r8, #1
    7ab0:	lsl	r3, r8, #8
    7ab4:	cmp	r4, r3
    7ab8:	ble	6edc <ReadUInt64Data.part.5+0xac>
    7abc:	sub	r4, r4, r3
    7ac0:	ldr	r3, [sp]
    7ac4:	mov	r1, r6
    7ac8:	mov	r2, r4
    7acc:	mov	r0, r7
    7ad0:	add	r8, fp, r8, lsl #11
    7ad4:	mov	r9, #0
    7ad8:	ldr	r3, [r3]
    7adc:	bl	1520 <fread@plt>
    7ae0:	add	r5, r5, r0
    7ae4:	cmp	r4, r9
    7ae8:	ble	6edc <ReadUInt64Data.part.5+0xac>
    7aec:	add	r0, r7, r9, lsl #1
    7af0:	add	r9, r9, #1
    7af4:	bl	191c <Mat_uint16Swap>
    7af8:	uxth	r0, r0
    7afc:	mov	r1, #0
    7b00:	strd	r0, [r8], #8
    7b04:	b	7ae4 <ReadUInt64Data.part.5+0xcb4>
    7b08:	cmp	r4, #256	; 0x100
    7b0c:	bgt	7b44 <ReadUInt64Data.part.5+0xd14>
    7b10:	mov	r1, r0
    7b14:	mov	r2, r4
    7b18:	mov	r0, r7
    7b1c:	bl	1520 <fread@plt>
    7b20:	mov	r5, r0
    7b24:	sub	r1, fp, #8
    7b28:	cmp	r4, r8
    7b2c:	ble	6edc <ReadUInt64Data.part.5+0xac>
    7b30:	ldrh	r2, [r7], #2
    7b34:	mov	r3, #0
    7b38:	add	r8, r8, #1
    7b3c:	strd	r2, [r1, #8]!
    7b40:	b	7b28 <ReadUInt64Data.part.5+0xcf8>
    7b44:	sub	r3, r4, #256	; 0x100
    7b48:	add	r9, fp, #2048	; 0x800
    7b4c:	mov	sl, r8
    7b50:	mov	r5, r8
    7b54:	str	r3, [sp, #8]
    7b58:	ldr	r3, [sp]
    7b5c:	mov	r2, #256	; 0x100
    7b60:	mov	r1, r6
    7b64:	mov	r0, r7
    7b68:	ldr	r3, [r3]
    7b6c:	bl	1520 <fread@plt>
    7b70:	add	r5, r5, r0
    7b74:	sub	r3, r9, #2048	; 0x800
    7b78:	str	r7, [sp, #4]
    7b7c:	mov	r2, r7
    7b80:	ldrh	r0, [r2], #2
    7b84:	mov	r1, #0
    7b88:	strd	r0, [r3], #8
    7b8c:	cmp	r3, r9
    7b90:	bne	7b80 <ReadUInt64Data.part.5+0xd50>
    7b94:	add	r9, r3, #2048	; 0x800
    7b98:	ldr	r3, [sp, #8]
    7b9c:	add	sl, sl, #256	; 0x100
    7ba0:	cmp	sl, r3
    7ba4:	blt	7b58 <ReadUInt64Data.part.5+0xd28>
    7ba8:	sub	r9, r4, #256	; 0x100
    7bac:	sub	r9, r9, #1
    7bb0:	lsr	r9, r9, #8
    7bb4:	add	r9, r9, #1
    7bb8:	lsl	r3, r9, #8
    7bbc:	cmp	r4, r3
    7bc0:	ble	6edc <ReadUInt64Data.part.5+0xac>
    7bc4:	sub	r4, r4, r3
    7bc8:	ldr	r3, [sp]
    7bcc:	mov	r1, r6
    7bd0:	mov	r2, r4
    7bd4:	mov	r0, r7
    7bd8:	add	r9, fp, r9, lsl #11
    7bdc:	ldr	r3, [r3]
    7be0:	bl	1520 <fread@plt>
    7be4:	add	r5, r5, r0
    7be8:	cmp	r4, r8
    7bec:	ble	6edc <ReadUInt64Data.part.5+0xac>
    7bf0:	ldr	r1, [sp, #4]
    7bf4:	mov	r3, #0
    7bf8:	add	r8, r8, #1
    7bfc:	ldrh	r2, [r1], #2
    7c00:	strd	r2, [r9], #8
    7c04:	str	r1, [sp, #4]
    7c08:	b	7be8 <ReadUInt64Data.part.5+0xdb8>
    7c0c:	cmp	r4, #256	; 0x100
    7c10:	add	r7, sp, #24
    7c14:	bgt	7c58 <ReadUInt64Data.part.5+0xe28>
    7c18:	ldr	r3, [sp]
    7c1c:	mov	r2, r4
    7c20:	mov	r1, r0
    7c24:	mov	r0, r7
    7c28:	ldr	r3, [r3]
    7c2c:	bl	1520 <fread@plt>
    7c30:	mov	r5, r0
    7c34:	sub	r2, fp, #8
    7c38:	mov	r3, #0
    7c3c:	cmp	r4, r3
    7c40:	ble	6edc <ReadUInt64Data.part.5+0xac>
    7c44:	ldrsb	r0, [r7, r3]
    7c48:	add	r3, r3, #1
    7c4c:	asr	r1, r0, #31
    7c50:	strd	r0, [r2, #8]!
    7c54:	b	7c3c <ReadUInt64Data.part.5+0xe0c>
    7c58:	mov	r8, #0
    7c5c:	add	r9, fp, #2048	; 0x800
    7c60:	mov	r5, r8
    7c64:	sub	sl, r4, #256	; 0x100
    7c68:	ldr	r3, [sp]
    7c6c:	mov	r2, #256	; 0x100
    7c70:	mov	r1, r6
    7c74:	mov	r0, r7
    7c78:	ldr	r3, [r3]
    7c7c:	bl	1520 <fread@plt>
    7c80:	add	r5, r5, r0
    7c84:	mov	r2, r7
    7c88:	sub	r3, r9, #2048	; 0x800
    7c8c:	ldrsb	r0, [r2], #1
    7c90:	asr	r1, r0, #31
    7c94:	strd	r0, [r3], #8
    7c98:	cmp	r3, r9
    7c9c:	bne	7c8c <ReadUInt64Data.part.5+0xe5c>
    7ca0:	add	r8, r8, #256	; 0x100
    7ca4:	add	r9, r3, #2048	; 0x800
    7ca8:	cmp	r8, sl
    7cac:	blt	7c68 <ReadUInt64Data.part.5+0xe38>
    7cb0:	sub	r3, r4, #256	; 0x100
    7cb4:	sub	r3, r3, #1
    7cb8:	lsr	r3, r3, #8
    7cbc:	add	r8, r3, #1
    7cc0:	lsl	r3, r8, #8
    7cc4:	cmp	r4, r3
    7cc8:	ble	6edc <ReadUInt64Data.part.5+0xac>
    7ccc:	sub	r4, r4, r3
    7cd0:	ldr	r3, [sp]
    7cd4:	mov	r1, r6
    7cd8:	mov	r2, r4
    7cdc:	mov	r0, r7
    7ce0:	ldr	r3, [r3]
    7ce4:	bl	1520 <fread@plt>
    7ce8:	add	r3, fp, r8, lsl #11
    7cec:	add	r5, r5, r0
    7cf0:	mov	r2, #0
    7cf4:	cmp	r4, r2
    7cf8:	ble	6edc <ReadUInt64Data.part.5+0xac>
    7cfc:	ldrsb	r0, [r7, r2]
    7d00:	add	r2, r2, #1
    7d04:	asr	r1, r0, #31
    7d08:	strd	r0, [r3], #8
    7d0c:	b	7cf4 <ReadUInt64Data.part.5+0xec4>
    7d10:	cmp	r4, #256	; 0x100
    7d14:	add	r7, sp, #24
    7d18:	bgt	7d5c <ReadUInt64Data.part.5+0xf2c>
    7d1c:	ldr	r3, [sp]
    7d20:	mov	r2, r4
    7d24:	mov	r1, r0
    7d28:	mov	r0, r7
    7d2c:	ldr	r3, [r3]
    7d30:	bl	1520 <fread@plt>
    7d34:	mov	r5, r0
    7d38:	sub	r2, fp, #8
    7d3c:	mov	r3, #0
    7d40:	cmp	r4, r3
    7d44:	ble	6edc <ReadUInt64Data.part.5+0xac>
    7d48:	ldrb	r0, [r7, r3]
    7d4c:	mov	r1, #0
    7d50:	add	r3, r3, #1
    7d54:	strd	r0, [r2, #8]!
    7d58:	b	7d40 <ReadUInt64Data.part.5+0xf10>
    7d5c:	mov	r8, #0
    7d60:	add	r9, fp, #2048	; 0x800
    7d64:	mov	r5, r8
    7d68:	sub	sl, r4, #256	; 0x100
    7d6c:	ldr	r3, [sp]
    7d70:	mov	r2, #256	; 0x100
    7d74:	mov	r1, r6
    7d78:	mov	r0, r7
    7d7c:	ldr	r3, [r3]
    7d80:	bl	1520 <fread@plt>
    7d84:	add	r5, r5, r0
    7d88:	mov	r2, r7
    7d8c:	sub	r3, r9, #2048	; 0x800
    7d90:	ldrb	r0, [r2], #1
    7d94:	mov	r1, #0
    7d98:	strd	r0, [r3], #8
    7d9c:	cmp	r3, r9
    7da0:	bne	7d90 <ReadUInt64Data.part.5+0xf60>
    7da4:	add	r8, r8, #256	; 0x100
    7da8:	add	r9, r3, #2048	; 0x800
    7dac:	cmp	r8, sl
    7db0:	blt	7d6c <ReadUInt64Data.part.5+0xf3c>
    7db4:	sub	r3, r4, #256	; 0x100
    7db8:	sub	r3, r3, #1
    7dbc:	lsr	r3, r3, #8
    7dc0:	add	r8, r3, #1
    7dc4:	lsl	r3, r8, #8
    7dc8:	cmp	r4, r3
    7dcc:	ble	6edc <ReadUInt64Data.part.5+0xac>
    7dd0:	sub	r4, r4, r3
    7dd4:	ldr	r3, [sp]
    7dd8:	mov	r1, r6
    7ddc:	mov	r2, r4
    7de0:	mov	r0, r7
    7de4:	ldr	r3, [r3]
    7de8:	bl	1520 <fread@plt>
    7dec:	add	r3, fp, r8, lsl #11
    7df0:	add	r5, r5, r0
    7df4:	mov	r2, #0
    7df8:	cmp	r4, r2
    7dfc:	ble	6edc <ReadUInt64Data.part.5+0xac>
    7e00:	ldrb	r0, [r7, r2]
    7e04:	mov	r1, #0
    7e08:	add	r2, r2, #1
    7e0c:	strd	r0, [r3], #8
    7e10:	b	7df8 <ReadUInt64Data.part.5+0xfc8>
    7e14:	cmp	r5, #12
    7e18:	bne	8028 <ReadUInt64Data.part.5+0x11f8>
    7e1c:	ldr	r3, [sp]
    7e20:	add	r7, sp, #24
    7e24:	ldr	r8, [r3, #20]
    7e28:	ldr	r3, [r3]
    7e2c:	cmp	r8, #0
    7e30:	beq	7f30 <ReadUInt64Data.part.5+0x1100>
    7e34:	cmp	r4, #256	; 0x100
    7e38:	movgt	r8, #0
    7e3c:	subgt	r9, r4, #256	; 0x100
    7e40:	movgt	r5, r8
    7e44:	bgt	7e80 <ReadUInt64Data.part.5+0x1050>
    7e48:	mov	r1, r0
    7e4c:	mov	r2, r4
    7e50:	mov	r0, r7
    7e54:	sub	fp, fp, #8
    7e58:	bl	1520 <fread@plt>
    7e5c:	mov	r5, r0
    7e60:	mov	r8, #0
    7e64:	cmp	r4, r8
    7e68:	ble	6edc <ReadUInt64Data.part.5+0xac>
    7e6c:	add	r0, r7, r8, lsl #3
    7e70:	add	r8, r8, #1
    7e74:	bl	17ec <Mat_int64Swap>
    7e78:	strd	r0, [fp, #8]!
    7e7c:	b	7e64 <ReadUInt64Data.part.5+0x1034>
    7e80:	ldr	r3, [sp]
    7e84:	mov	r2, #256	; 0x100
    7e88:	mov	r1, r6
    7e8c:	mov	r0, r7
    7e90:	mov	sl, #0
    7e94:	ldr	r3, [r3]
    7e98:	bl	1520 <fread@plt>
    7e9c:	add	r3, fp, r8, lsl #3
    7ea0:	add	r5, r5, r0
    7ea4:	add	r0, r7, sl
    7ea8:	str	r3, [sp, #4]
    7eac:	add	sl, sl, #8
    7eb0:	bl	17ec <Mat_int64Swap>
    7eb4:	ldr	r3, [sp, #4]
    7eb8:	cmp	sl, #2048	; 0x800
    7ebc:	strd	r0, [r3], #8
    7ec0:	bne	7ea4 <ReadUInt64Data.part.5+0x1074>
    7ec4:	add	r8, r8, #256	; 0x100
    7ec8:	cmp	r8, r9
    7ecc:	blt	7e80 <ReadUInt64Data.part.5+0x1050>
    7ed0:	sub	r8, r4, #256	; 0x100
    7ed4:	sub	r8, r8, #1
    7ed8:	lsr	r8, r8, #8
    7edc:	add	r8, r8, #1
    7ee0:	lsl	r3, r8, #8
    7ee4:	cmp	r4, r3
    7ee8:	ble	6edc <ReadUInt64Data.part.5+0xac>
    7eec:	sub	r4, r4, r3
    7ef0:	ldr	r3, [sp]
    7ef4:	mov	r1, r6
    7ef8:	mov	r2, r4
    7efc:	mov	r0, r7
    7f00:	add	r8, fp, r8, lsl #11
    7f04:	mov	r9, #0
    7f08:	ldr	r3, [r3]
    7f0c:	bl	1520 <fread@plt>
    7f10:	add	r5, r5, r0
    7f14:	cmp	r4, r9
    7f18:	ble	6edc <ReadUInt64Data.part.5+0xac>
    7f1c:	add	r0, r7, r9, lsl #3
    7f20:	add	r9, r9, #1
    7f24:	bl	17ec <Mat_int64Swap>
    7f28:	strd	r0, [r8], #8
    7f2c:	b	7f14 <ReadUInt64Data.part.5+0x10e4>
    7f30:	cmp	r4, #256	; 0x100
    7f34:	bgt	7f68 <ReadUInt64Data.part.5+0x1138>
    7f38:	mov	r1, r0
    7f3c:	mov	r2, r4
    7f40:	mov	r0, r7
    7f44:	bl	1520 <fread@plt>
    7f48:	mov	r5, r0
    7f4c:	sub	r3, fp, #8
    7f50:	cmp	r4, r8
    7f54:	ble	6edc <ReadUInt64Data.part.5+0xac>
    7f58:	ldrd	r0, [r7], #8
    7f5c:	add	r8, r8, #1
    7f60:	strd	r0, [r3, #8]!
    7f64:	b	7f50 <ReadUInt64Data.part.5+0x1120>
    7f68:	sub	r3, r4, #256	; 0x100
    7f6c:	add	r9, fp, #2048	; 0x800
    7f70:	mov	sl, r8
    7f74:	mov	r5, r8
    7f78:	str	r3, [sp, #8]
    7f7c:	ldr	r3, [sp]
    7f80:	mov	r2, #256	; 0x100
    7f84:	mov	r1, r6
    7f88:	mov	r0, r7
    7f8c:	ldr	r3, [r3]
    7f90:	bl	1520 <fread@plt>
    7f94:	add	r5, r5, r0
    7f98:	sub	r3, r9, #2048	; 0x800
    7f9c:	str	r7, [sp, #4]
    7fa0:	mov	r2, r7
    7fa4:	ldrd	r0, [r2], #8
    7fa8:	strd	r0, [r3], #8
    7fac:	cmp	r9, r3
    7fb0:	bne	7fa4 <ReadUInt64Data.part.5+0x1174>
    7fb4:	ldr	r3, [sp, #8]
    7fb8:	add	sl, sl, #256	; 0x100
    7fbc:	add	r9, r9, #2048	; 0x800
    7fc0:	cmp	sl, r3
    7fc4:	blt	7f7c <ReadUInt64Data.part.5+0x114c>
    7fc8:	sub	r9, r4, #256	; 0x100
    7fcc:	sub	r9, r9, #1
    7fd0:	lsr	r9, r9, #8
    7fd4:	add	r9, r9, #1
    7fd8:	lsl	r3, r9, #8
    7fdc:	cmp	r4, r3
    7fe0:	ble	6edc <ReadUInt64Data.part.5+0xac>
    7fe4:	sub	r4, r4, r3
    7fe8:	ldr	r3, [sp]
    7fec:	mov	r1, r6
    7ff0:	mov	r2, r4
    7ff4:	mov	r0, r7
    7ff8:	add	r9, fp, r9, lsl #11
    7ffc:	ldr	r3, [r3]
    8000:	bl	1520 <fread@plt>
    8004:	add	r5, r5, r0
    8008:	cmp	r4, r8
    800c:	ble	6edc <ReadUInt64Data.part.5+0xac>
    8010:	ldr	r1, [sp, #4]
    8014:	add	r8, r8, #1
    8018:	ldrd	r2, [r1], #8
    801c:	strd	r2, [r9], #8
    8020:	str	r1, [sp, #4]
    8024:	b	8008 <ReadUInt64Data.part.5+0x11d8>
    8028:	cmp	r5, #13
    802c:	movne	r5, #0
    8030:	bne	6edc <ReadUInt64Data.part.5+0xac>
    8034:	ldr	r3, [sp]
    8038:	add	r7, sp, #24
    803c:	ldr	r8, [r3, #20]
    8040:	ldr	r3, [r3]
    8044:	cmp	r8, #0
    8048:	beq	8148 <ReadUInt64Data.part.5+0x1318>
    804c:	cmp	r4, #256	; 0x100
    8050:	movgt	r8, #0
    8054:	subgt	r9, r4, #256	; 0x100
    8058:	movgt	r5, r8
    805c:	bgt	8098 <ReadUInt64Data.part.5+0x1268>
    8060:	mov	r1, r0
    8064:	mov	r2, r4
    8068:	mov	r0, r7
    806c:	sub	fp, fp, #8
    8070:	bl	1520 <fread@plt>
    8074:	mov	r5, r0
    8078:	mov	r8, #0
    807c:	cmp	r4, r8
    8080:	ble	6edc <ReadUInt64Data.part.5+0xac>
    8084:	add	r0, r7, r8, lsl #3
    8088:	add	r8, r8, #1
    808c:	bl	1844 <Mat_uint64Swap>
    8090:	strd	r0, [fp, #8]!
    8094:	b	807c <ReadUInt64Data.part.5+0x124c>
    8098:	ldr	r3, [sp]
    809c:	mov	r2, #256	; 0x100
    80a0:	mov	r1, r6
    80a4:	mov	r0, r7
    80a8:	mov	sl, #0
    80ac:	ldr	r3, [r3]
    80b0:	bl	1520 <fread@plt>
    80b4:	add	r3, fp, r8, lsl #3
    80b8:	add	r5, r5, r0
    80bc:	add	r0, r7, sl
    80c0:	str	r3, [sp, #4]
    80c4:	add	sl, sl, #8
    80c8:	bl	1844 <Mat_uint64Swap>
    80cc:	ldr	r3, [sp, #4]
    80d0:	cmp	sl, #2048	; 0x800
    80d4:	strd	r0, [r3], #8
    80d8:	bne	80bc <ReadUInt64Data.part.5+0x128c>
    80dc:	add	r8, r8, #256	; 0x100
    80e0:	cmp	r8, r9
    80e4:	blt	8098 <ReadUInt64Data.part.5+0x1268>
    80e8:	sub	r8, r4, #256	; 0x100
    80ec:	sub	r8, r8, #1
    80f0:	lsr	r8, r8, #8
    80f4:	add	r8, r8, #1
    80f8:	lsl	r3, r8, #8
    80fc:	cmp	r4, r3
    8100:	ble	6edc <ReadUInt64Data.part.5+0xac>
    8104:	sub	r4, r4, r3
    8108:	ldr	r3, [sp]
    810c:	mov	r1, r6
    8110:	mov	r2, r4
    8114:	mov	r0, r7
    8118:	add	r8, fp, r8, lsl #11
    811c:	mov	r9, #0
    8120:	ldr	r3, [r3]
    8124:	bl	1520 <fread@plt>
    8128:	add	r5, r5, r0
    812c:	cmp	r4, r9
    8130:	ble	6edc <ReadUInt64Data.part.5+0xac>
    8134:	add	r0, r7, r9, lsl #3
    8138:	add	r9, r9, #1
    813c:	bl	1844 <Mat_uint64Swap>
    8140:	strd	r0, [r8], #8
    8144:	b	812c <ReadUInt64Data.part.5+0x12fc>
    8148:	cmp	r4, #256	; 0x100
    814c:	bgt	8180 <ReadUInt64Data.part.5+0x1350>
    8150:	mov	r1, r0
    8154:	mov	r2, r4
    8158:	mov	r0, r7
    815c:	bl	1520 <fread@plt>
    8160:	mov	r5, r0
    8164:	sub	r1, fp, #8
    8168:	cmp	r4, r8
    816c:	ble	6edc <ReadUInt64Data.part.5+0xac>
    8170:	ldrd	r2, [r7], #8
    8174:	add	r8, r8, #1
    8178:	strd	r2, [r1, #8]!
    817c:	b	8168 <ReadUInt64Data.part.5+0x1338>
    8180:	sub	r3, r4, #256	; 0x100
    8184:	add	r9, fp, #2048	; 0x800
    8188:	mov	sl, r8
    818c:	mov	r5, r8
    8190:	str	r3, [sp, #8]
    8194:	ldr	r3, [sp]
    8198:	mov	r2, #256	; 0x100
    819c:	mov	r1, r6
    81a0:	mov	r0, r7
    81a4:	ldr	r3, [r3]
    81a8:	bl	1520 <fread@plt>
    81ac:	add	r5, r5, r0
    81b0:	sub	r3, r9, #2048	; 0x800
    81b4:	str	r7, [sp, #4]
    81b8:	mov	r2, r7
    81bc:	ldrd	r0, [r2], #8
    81c0:	strd	r0, [r3], #8
    81c4:	cmp	r3, r9
    81c8:	bne	81bc <ReadUInt64Data.part.5+0x138c>
    81cc:	add	r9, r3, #2048	; 0x800
    81d0:	ldr	r3, [sp, #8]
    81d4:	add	sl, sl, #256	; 0x100
    81d8:	cmp	sl, r3
    81dc:	blt	8194 <ReadUInt64Data.part.5+0x1364>
    81e0:	sub	r9, r4, #256	; 0x100
    81e4:	sub	r9, r9, #1
    81e8:	lsr	r9, r9, #8
    81ec:	add	r9, r9, #1
    81f0:	lsl	r3, r9, #8
    81f4:	cmp	r4, r3
    81f8:	ble	6edc <ReadUInt64Data.part.5+0xac>
    81fc:	sub	r4, r4, r3
    8200:	ldr	r3, [sp]
    8204:	mov	r1, r6
    8208:	mov	r2, r4
    820c:	mov	r0, r7
    8210:	add	r9, fp, r9, lsl #11
    8214:	ldr	r3, [r3]
    8218:	bl	1520 <fread@plt>
    821c:	add	r5, r5, r0
    8220:	cmp	r4, r8
    8224:	ble	6edc <ReadUInt64Data.part.5+0xac>
    8228:	ldr	r1, [sp, #4]
    822c:	add	r8, r8, #1
    8230:	ldrd	r2, [r1], #8
    8234:	strd	r2, [r9], #8
    8238:	str	r1, [sp, #4]
    823c:	b	8220 <ReadUInt64Data.part.5+0x13f0>

00008240 <ReadInt32Data.part.7>:
    8240:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    8244:	sub	sp, sp, #2064	; 0x810
    8248:	mov	r5, r2
    824c:	sub	sp, sp, #4
    8250:	mov	r4, r3
    8254:	strd	r0, [sp, #4]
    8258:	mov	r0, r2
    825c:	bl	1598 <Mat_SizeOf@plt>
    8260:	sub	r3, r5, #1
    8264:	mov	r6, r0
    8268:	cmp	r3, #8
    826c:	addls	pc, pc, r3, lsl #2
    8270:	b	9148 <ReadInt32Data.part.7+0xf08>
    8274:	b	8f48 <ReadInt32Data.part.7+0xd08>
    8278:	b	9048 <ReadInt32Data.part.7+0xe08>
    827c:	b	8b10 <ReadInt32Data.part.7+0x8d0>
    8280:	b	8d2c <ReadInt32Data.part.7+0xaec>
    8284:	b	8710 <ReadInt32Data.part.7+0x4d0>
    8288:	b	8910 <ReadInt32Data.part.7+0x6d0>
    828c:	b	84e4 <ReadInt32Data.part.7+0x2a4>
    8290:	b	9148 <ReadInt32Data.part.7+0xf08>
    8294:	b	8298 <ReadInt32Data.part.7+0x58>
    8298:	ldr	r3, [sp, #4]
    829c:	add	r7, sp, #16
    82a0:	ldr	r9, [r3, #20]
    82a4:	ldr	r3, [r3]
    82a8:	cmp	r9, #0
    82ac:	beq	83dc <ReadInt32Data.part.7+0x19c>
    82b0:	cmp	r4, #256	; 0x100
    82b4:	bgt	8308 <ReadInt32Data.part.7+0xc8>
    82b8:	mov	r1, r0
    82bc:	mov	r2, r4
    82c0:	mov	r0, r7
    82c4:	mov	r8, #0
    82c8:	bl	1520 <fread@plt>
    82cc:	mov	r5, r0
    82d0:	cmp	r4, r8
    82d4:	bgt	82e8 <ReadInt32Data.part.7+0xa8>
    82d8:	mul	r0, r6, r5
    82dc:	add	sp, sp, #2064	; 0x810
    82e0:	add	sp, sp, #4
    82e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    82e8:	add	r0, r7, r8, lsl #3
    82ec:	bl	196c <Mat_doubleSwap>
    82f0:	vcvt.s32.f64	s0, d0
    82f4:	ldr	r3, [sp, #8]
    82f8:	vmov	r2, s0
    82fc:	str	r2, [r3, r8, lsl #2]
    8300:	add	r8, r8, #1
    8304:	b	82d0 <ReadInt32Data.part.7+0x90>
    8308:	ldr	r3, [sp, #8]
    830c:	mov	r8, #0
    8310:	sub	sl, r4, #256	; 0x100
    8314:	mov	r5, r8
    8318:	add	r9, r3, #1024	; 0x400
    831c:	ldr	r3, [sp, #4]
    8320:	mov	r2, #256	; 0x100
    8324:	mov	r1, r6
    8328:	mov	r0, r7
    832c:	sub	fp, r9, #1024	; 0x400
    8330:	ldr	r3, [r3]
    8334:	bl	1520 <fread@plt>
    8338:	add	r5, r5, r0
    833c:	mov	r3, r7
    8340:	mov	r0, r3
    8344:	str	r3, [sp, #12]
    8348:	bl	196c <Mat_doubleSwap>
    834c:	vcvt.s32.f64	s0, d0
    8350:	ldr	r3, [sp, #12]
    8354:	add	r3, r3, #8
    8358:	vstmia	fp!, {s0}
    835c:	cmp	fp, r9
    8360:	bne	8340 <ReadInt32Data.part.7+0x100>
    8364:	add	r8, r8, #256	; 0x100
    8368:	add	r9, fp, #1024	; 0x400
    836c:	cmp	r8, sl
    8370:	blt	831c <ReadInt32Data.part.7+0xdc>
    8374:	sub	r8, r4, #256	; 0x100
    8378:	sub	r8, r8, #1
    837c:	lsr	r8, r8, #8
    8380:	add	r8, r8, #1
    8384:	lsl	r3, r8, #8
    8388:	cmp	r4, r3
    838c:	ble	82d8 <ReadInt32Data.part.7+0x98>
    8390:	sub	r4, r4, r3
    8394:	ldr	r3, [sp, #4]
    8398:	mov	r1, r6
    839c:	mov	r2, r4
    83a0:	mov	r0, r7
    83a4:	mov	r9, #0
    83a8:	ldr	r3, [r3]
    83ac:	bl	1520 <fread@plt>
    83b0:	ldr	r3, [sp, #8]
    83b4:	add	r5, r5, r0
    83b8:	add	r8, r3, r8, lsl #10
    83bc:	cmp	r4, r9
    83c0:	ble	82d8 <ReadInt32Data.part.7+0x98>
    83c4:	add	r0, r7, r9, lsl #3
    83c8:	add	r9, r9, #1
    83cc:	bl	196c <Mat_doubleSwap>
    83d0:	vcvt.s32.f64	s0, d0
    83d4:	vstmia	r8!, {s0}
    83d8:	b	83bc <ReadInt32Data.part.7+0x17c>
    83dc:	cmp	r4, #256	; 0x100
    83e0:	bgt	841c <ReadInt32Data.part.7+0x1dc>
    83e4:	mov	r1, r0
    83e8:	mov	r2, r4
    83ec:	mov	r0, r7
    83f0:	bl	1520 <fread@plt>
    83f4:	mov	r5, r0
    83f8:	cmp	r4, r9
    83fc:	ble	82d8 <ReadInt32Data.part.7+0x98>
    8400:	vldmia	r7!, {d7}
    8404:	ldr	r3, [sp, #8]
    8408:	vcvt.s32.f64	s14, d7
    840c:	vmov	r2, s14
    8410:	str	r2, [r3, r9, lsl #2]
    8414:	add	r9, r9, #1
    8418:	b	83f8 <ReadInt32Data.part.7+0x1b8>
    841c:	ldr	r3, [sp, #8]
    8420:	mov	fp, r9
    8424:	mov	r5, r9
    8428:	add	r8, r3, #1024	; 0x400
    842c:	sub	r3, r4, #256	; 0x100
    8430:	str	r3, [sp, #12]
    8434:	ldr	r3, [sp, #4]
    8438:	mov	r2, #256	; 0x100
    843c:	mov	r1, r6
    8440:	mov	r0, r7
    8444:	mov	sl, r7
    8448:	ldr	r3, [r3]
    844c:	bl	1520 <fread@plt>
    8450:	add	r5, r5, r0
    8454:	sub	r3, r8, #1024	; 0x400
    8458:	mov	r2, r7
    845c:	vldmia	r2!, {d7}
    8460:	vcvt.s32.f64	s14, d7
    8464:	vstmia	r3!, {s14}
    8468:	cmp	r3, r8
    846c:	bne	845c <ReadInt32Data.part.7+0x21c>
    8470:	add	r8, r3, #1024	; 0x400
    8474:	ldr	r3, [sp, #12]
    8478:	add	fp, fp, #256	; 0x100
    847c:	cmp	fp, r3
    8480:	blt	8434 <ReadInt32Data.part.7+0x1f4>
    8484:	sub	r8, r4, #256	; 0x100
    8488:	sub	r8, r8, #1
    848c:	lsr	r8, r8, #8
    8490:	add	r8, r8, #1
    8494:	lsl	r3, r8, #8
    8498:	cmp	r4, r3
    849c:	ble	82d8 <ReadInt32Data.part.7+0x98>
    84a0:	sub	r4, r4, r3
    84a4:	ldr	r3, [sp, #4]
    84a8:	mov	r1, r6
    84ac:	mov	r2, r4
    84b0:	mov	r0, r7
    84b4:	ldr	r3, [r3]
    84b8:	bl	1520 <fread@plt>
    84bc:	ldr	r3, [sp, #8]
    84c0:	add	r5, r5, r0
    84c4:	add	r8, r3, r8, lsl #10
    84c8:	cmp	r4, r9
    84cc:	ble	82d8 <ReadInt32Data.part.7+0x98>
    84d0:	vldmia	sl!, {d7}
    84d4:	add	r9, r9, #1
    84d8:	vcvt.s32.f64	s14, d7
    84dc:	vstmia	r8!, {s14}
    84e0:	b	84c8 <ReadInt32Data.part.7+0x288>
    84e4:	ldr	r3, [sp, #4]
    84e8:	add	r7, sp, #16
    84ec:	ldr	r9, [r3, #20]
    84f0:	ldr	r3, [r3]
    84f4:	cmp	r9, #0
    84f8:	beq	8608 <ReadInt32Data.part.7+0x3c8>
    84fc:	cmp	r4, #256	; 0x100
    8500:	movgt	r8, #0
    8504:	subgt	r9, r4, #256	; 0x100
    8508:	movgt	r5, r8
    850c:	bgt	8550 <ReadInt32Data.part.7+0x310>
    8510:	mov	r1, r0
    8514:	mov	r2, r4
    8518:	mov	r0, r7
    851c:	mov	r8, #0
    8520:	bl	1520 <fread@plt>
    8524:	mov	r5, r0
    8528:	cmp	r4, r8
    852c:	ble	82d8 <ReadInt32Data.part.7+0x98>
    8530:	add	r0, r7, r8, lsl #2
    8534:	bl	193c <Mat_floatSwap>
    8538:	vcvt.s32.f32	s0, s0
    853c:	ldr	r3, [sp, #8]
    8540:	vmov	r2, s0
    8544:	str	r2, [r3, r8, lsl #2]
    8548:	add	r8, r8, #1
    854c:	b	8528 <ReadInt32Data.part.7+0x2e8>
    8550:	ldr	r3, [sp, #4]
    8554:	mov	r2, #256	; 0x100
    8558:	mov	r1, r6
    855c:	mov	r0, r7
    8560:	mov	sl, #0
    8564:	ldr	r3, [r3]
    8568:	bl	1520 <fread@plt>
    856c:	ldr	r3, [sp, #8]
    8570:	add	r5, r5, r0
    8574:	add	fp, r3, r8, lsl #2
    8578:	add	r0, r7, sl
    857c:	add	sl, sl, #4
    8580:	bl	193c <Mat_floatSwap>
    8584:	vcvt.s32.f32	s0, s0
    8588:	cmp	sl, #1024	; 0x400
    858c:	vstmia	fp!, {s0}
    8590:	bne	8578 <ReadInt32Data.part.7+0x338>
    8594:	add	r8, r8, #256	; 0x100
    8598:	cmp	r8, r9
    859c:	blt	8550 <ReadInt32Data.part.7+0x310>
    85a0:	sub	r8, r4, #256	; 0x100
    85a4:	sub	r8, r8, #1
    85a8:	lsr	r8, r8, #8
    85ac:	add	r8, r8, #1
    85b0:	lsl	r3, r8, #8
    85b4:	cmp	r4, r3
    85b8:	ble	82d8 <ReadInt32Data.part.7+0x98>
    85bc:	sub	r4, r4, r3
    85c0:	ldr	r3, [sp, #4]
    85c4:	mov	r1, r6
    85c8:	mov	r2, r4
    85cc:	mov	r0, r7
    85d0:	mov	r9, #0
    85d4:	ldr	r3, [r3]
    85d8:	bl	1520 <fread@plt>
    85dc:	ldr	r3, [sp, #8]
    85e0:	add	r5, r5, r0
    85e4:	add	r8, r3, r8, lsl #10
    85e8:	cmp	r4, r9
    85ec:	ble	82d8 <ReadInt32Data.part.7+0x98>
    85f0:	add	r0, r7, r9, lsl #2
    85f4:	add	r9, r9, #1
    85f8:	bl	193c <Mat_floatSwap>
    85fc:	vcvt.s32.f32	s0, s0
    8600:	vstmia	r8!, {s0}
    8604:	b	85e8 <ReadInt32Data.part.7+0x3a8>
    8608:	cmp	r4, #256	; 0x100
    860c:	bgt	8648 <ReadInt32Data.part.7+0x408>
    8610:	mov	r1, r0
    8614:	mov	r2, r4
    8618:	mov	r0, r7
    861c:	bl	1520 <fread@plt>
    8620:	mov	r5, r0
    8624:	cmp	r4, r9
    8628:	ble	82d8 <ReadInt32Data.part.7+0x98>
    862c:	vldmia	r7!, {s15}
    8630:	ldr	r3, [sp, #8]
    8634:	vcvt.s32.f32	s15, s15
    8638:	vmov	r2, s15
    863c:	str	r2, [r3, r9, lsl #2]
    8640:	add	r9, r9, #1
    8644:	b	8624 <ReadInt32Data.part.7+0x3e4>
    8648:	ldr	r3, [sp, #8]
    864c:	mov	fp, r9
    8650:	mov	r5, r9
    8654:	add	r8, r3, #1024	; 0x400
    8658:	sub	r3, r4, #256	; 0x100
    865c:	str	r3, [sp, #12]
    8660:	ldr	r3, [sp, #4]
    8664:	mov	r2, #256	; 0x100
    8668:	mov	r1, r6
    866c:	mov	r0, r7
    8670:	mov	sl, r7
    8674:	ldr	r3, [r3]
    8678:	bl	1520 <fread@plt>
    867c:	add	r5, r5, r0
    8680:	sub	r3, r8, #1024	; 0x400
    8684:	mov	r2, r7
    8688:	vldmia	r2!, {s15}
    868c:	vcvt.s32.f32	s15, s15
    8690:	vstmia	r3!, {s15}
    8694:	cmp	r3, r8
    8698:	bne	8688 <ReadInt32Data.part.7+0x448>
    869c:	add	r8, r3, #1024	; 0x400
    86a0:	ldr	r3, [sp, #12]
    86a4:	add	fp, fp, #256	; 0x100
    86a8:	cmp	fp, r3
    86ac:	blt	8660 <ReadInt32Data.part.7+0x420>
    86b0:	sub	r8, r4, #256	; 0x100
    86b4:	sub	r8, r8, #1
    86b8:	lsr	r8, r8, #8
    86bc:	add	r8, r8, #1
    86c0:	lsl	r3, r8, #8
    86c4:	cmp	r4, r3
    86c8:	ble	82d8 <ReadInt32Data.part.7+0x98>
    86cc:	sub	r4, r4, r3
    86d0:	ldr	r3, [sp, #4]
    86d4:	mov	r1, r6
    86d8:	mov	r2, r4
    86dc:	mov	r0, r7
    86e0:	ldr	r3, [r3]
    86e4:	bl	1520 <fread@plt>
    86e8:	ldr	r3, [sp, #8]
    86ec:	add	r5, r5, r0
    86f0:	add	r8, r3, r8, lsl #10
    86f4:	cmp	r4, r9
    86f8:	ble	82d8 <ReadInt32Data.part.7+0x98>
    86fc:	vldmia	sl!, {s15}
    8700:	add	r9, r9, #1
    8704:	vcvt.s32.f32	s15, s15
    8708:	vstmia	r8!, {s15}
    870c:	b	86f4 <ReadInt32Data.part.7+0x4b4>
    8710:	ldr	r3, [sp, #4]
    8714:	add	r8, sp, #16
    8718:	ldr	r7, [r3, #20]
    871c:	ldr	r3, [r3]
    8720:	cmp	r7, #0
    8724:	beq	8824 <ReadInt32Data.part.7+0x5e4>
    8728:	cmp	r4, #256	; 0x100
    872c:	movgt	r7, #0
    8730:	subgt	r9, r4, #256	; 0x100
    8734:	movgt	r5, r7
    8738:	bgt	8774 <ReadInt32Data.part.7+0x534>
    873c:	mov	r1, r0
    8740:	mov	r2, r4
    8744:	mov	r0, r8
    8748:	mov	r7, #0
    874c:	bl	1520 <fread@plt>
    8750:	mov	r5, r0
    8754:	cmp	r4, r7
    8758:	ble	82d8 <ReadInt32Data.part.7+0x98>
    875c:	add	r0, r8, r7, lsl #2
    8760:	bl	189c <Mat_int32Swap>
    8764:	ldr	r3, [sp, #8]
    8768:	str	r0, [r3, r7, lsl #2]
    876c:	add	r7, r7, #1
    8770:	b	8754 <ReadInt32Data.part.7+0x514>
    8774:	ldr	r3, [sp, #4]
    8778:	mov	r2, #256	; 0x100
    877c:	mov	r1, r6
    8780:	mov	r0, r8
    8784:	mov	sl, #0
    8788:	ldr	r3, [r3]
    878c:	bl	1520 <fread@plt>
    8790:	ldr	r3, [sp, #8]
    8794:	add	r5, r5, r0
    8798:	add	fp, r3, r7, lsl #2
    879c:	add	r0, r8, sl
    87a0:	add	sl, sl, #4
    87a4:	bl	189c <Mat_int32Swap>
    87a8:	cmp	sl, #1024	; 0x400
    87ac:	str	r0, [fp], #4
    87b0:	bne	879c <ReadInt32Data.part.7+0x55c>
    87b4:	add	r7, r7, #256	; 0x100
    87b8:	cmp	r7, r9
    87bc:	blt	8774 <ReadInt32Data.part.7+0x534>
    87c0:	sub	r7, r4, #256	; 0x100
    87c4:	sub	r7, r7, #1
    87c8:	lsr	r7, r7, #8
    87cc:	add	r7, r7, #1
    87d0:	lsl	r3, r7, #8
    87d4:	cmp	r4, r3
    87d8:	ble	82d8 <ReadInt32Data.part.7+0x98>
    87dc:	sub	r4, r4, r3
    87e0:	ldr	r3, [sp, #4]
    87e4:	mov	r1, r6
    87e8:	mov	r2, r4
    87ec:	mov	r0, r8
    87f0:	mov	r9, #0
    87f4:	ldr	r3, [r3]
    87f8:	bl	1520 <fread@plt>
    87fc:	ldr	r3, [sp, #8]
    8800:	add	r5, r5, r0
    8804:	add	r7, r3, r7, lsl #10
    8808:	cmp	r4, r9
    880c:	ble	82d8 <ReadInt32Data.part.7+0x98>
    8810:	add	r0, r8, r9, lsl #2
    8814:	add	r9, r9, #1
    8818:	bl	189c <Mat_int32Swap>
    881c:	str	r0, [r7], #4
    8820:	b	8808 <ReadInt32Data.part.7+0x5c8>
    8824:	cmp	r4, #256	; 0x100
    8828:	bgt	885c <ReadInt32Data.part.7+0x61c>
    882c:	mov	r1, r0
    8830:	mov	r2, r4
    8834:	mov	r0, r8
    8838:	bl	1520 <fread@plt>
    883c:	mov	r5, r0
    8840:	cmp	r4, r7
    8844:	ble	82d8 <ReadInt32Data.part.7+0x98>
    8848:	ldr	r3, [r8, r7, lsl #2]
    884c:	ldr	r2, [sp, #8]
    8850:	str	r3, [r2, r7, lsl #2]
    8854:	add	r7, r7, #1
    8858:	b	8840 <ReadInt32Data.part.7+0x600>
    885c:	ldr	r3, [sp, #8]
    8860:	mov	r9, r7
    8864:	mov	r5, r7
    8868:	sub	fp, r4, #256	; 0x100
    886c:	add	sl, r3, #1024	; 0x400
    8870:	ldr	r3, [sp, #4]
    8874:	mov	r2, #256	; 0x100
    8878:	mov	r1, r6
    887c:	mov	r0, r8
    8880:	ldr	r3, [r3]
    8884:	bl	1520 <fread@plt>
    8888:	add	r5, r5, r0
    888c:	mov	r2, r8
    8890:	sub	r3, sl, #1024	; 0x400
    8894:	ldr	r1, [r2], #4
    8898:	str	r1, [r3], #4
    889c:	cmp	r3, sl
    88a0:	bne	8894 <ReadInt32Data.part.7+0x654>
    88a4:	add	r9, r9, #256	; 0x100
    88a8:	add	sl, r3, #1024	; 0x400
    88ac:	cmp	r9, fp
    88b0:	blt	8870 <ReadInt32Data.part.7+0x630>
    88b4:	sub	r9, r4, #256	; 0x100
    88b8:	sub	r9, r9, #1
    88bc:	lsr	r9, r9, #8
    88c0:	add	r9, r9, #1
    88c4:	lsl	r3, r9, #8
    88c8:	cmp	r4, r3
    88cc:	ble	82d8 <ReadInt32Data.part.7+0x98>
    88d0:	sub	r4, r4, r3
    88d4:	ldr	r3, [sp, #4]
    88d8:	mov	r1, r6
    88dc:	mov	r2, r4
    88e0:	mov	r0, r8
    88e4:	ldr	r3, [r3]
    88e8:	bl	1520 <fread@plt>
    88ec:	ldr	r3, [sp, #8]
    88f0:	add	r5, r5, r0
    88f4:	add	r9, r3, r9, lsl #10
    88f8:	cmp	r4, r7
    88fc:	ble	82d8 <ReadInt32Data.part.7+0x98>
    8900:	ldr	r3, [r8, r7, lsl #2]
    8904:	add	r7, r7, #1
    8908:	str	r3, [r9], #4
    890c:	b	88f8 <ReadInt32Data.part.7+0x6b8>
    8910:	ldr	r3, [sp, #4]
    8914:	add	r8, sp, #16
    8918:	ldr	r7, [r3, #20]
    891c:	ldr	r3, [r3]
    8920:	cmp	r7, #0
    8924:	beq	8a24 <ReadInt32Data.part.7+0x7e4>
    8928:	cmp	r4, #256	; 0x100
    892c:	movgt	r7, #0
    8930:	subgt	r9, r4, #256	; 0x100
    8934:	movgt	r5, r7
    8938:	bgt	8974 <ReadInt32Data.part.7+0x734>
    893c:	mov	r1, r0
    8940:	mov	r2, r4
    8944:	mov	r0, r8
    8948:	mov	r7, #0
    894c:	bl	1520 <fread@plt>
    8950:	mov	r5, r0
    8954:	cmp	r4, r7
    8958:	ble	82d8 <ReadInt32Data.part.7+0x98>
    895c:	add	r0, r8, r7, lsl #2
    8960:	bl	18cc <Mat_uint32Swap>
    8964:	ldr	r3, [sp, #8]
    8968:	str	r0, [r3, r7, lsl #2]
    896c:	add	r7, r7, #1
    8970:	b	8954 <ReadInt32Data.part.7+0x714>
    8974:	ldr	r3, [sp, #4]
    8978:	mov	r2, #256	; 0x100
    897c:	mov	r1, r6
    8980:	mov	r0, r8
    8984:	mov	sl, #0
    8988:	ldr	r3, [r3]
    898c:	bl	1520 <fread@plt>
    8990:	ldr	r3, [sp, #8]
    8994:	add	r5, r5, r0
    8998:	add	fp, r3, r7, lsl #2
    899c:	add	r0, r8, sl
    89a0:	add	sl, sl, #4
    89a4:	bl	18cc <Mat_uint32Swap>
    89a8:	cmp	sl, #1024	; 0x400
    89ac:	str	r0, [fp], #4
    89b0:	bne	899c <ReadInt32Data.part.7+0x75c>
    89b4:	add	r7, r7, #256	; 0x100
    89b8:	cmp	r7, r9
    89bc:	blt	8974 <ReadInt32Data.part.7+0x734>
    89c0:	sub	r7, r4, #256	; 0x100
    89c4:	sub	r7, r7, #1
    89c8:	lsr	r7, r7, #8
    89cc:	add	r7, r7, #1
    89d0:	lsl	r3, r7, #8
    89d4:	cmp	r4, r3
    89d8:	ble	82d8 <ReadInt32Data.part.7+0x98>
    89dc:	sub	r4, r4, r3
    89e0:	ldr	r3, [sp, #4]
    89e4:	mov	r1, r6
    89e8:	mov	r2, r4
    89ec:	mov	r0, r8
    89f0:	mov	r9, #0
    89f4:	ldr	r3, [r3]
    89f8:	bl	1520 <fread@plt>
    89fc:	ldr	r3, [sp, #8]
    8a00:	add	r5, r5, r0
    8a04:	add	r7, r3, r7, lsl #10
    8a08:	cmp	r4, r9
    8a0c:	ble	82d8 <ReadInt32Data.part.7+0x98>
    8a10:	add	r0, r8, r9, lsl #2
    8a14:	add	r9, r9, #1
    8a18:	bl	18cc <Mat_uint32Swap>
    8a1c:	str	r0, [r7], #4
    8a20:	b	8a08 <ReadInt32Data.part.7+0x7c8>
    8a24:	cmp	r4, #256	; 0x100
    8a28:	bgt	8a5c <ReadInt32Data.part.7+0x81c>
    8a2c:	mov	r1, r0
    8a30:	mov	r2, r4
    8a34:	mov	r0, r8
    8a38:	bl	1520 <fread@plt>
    8a3c:	mov	r5, r0
    8a40:	cmp	r4, r7
    8a44:	ble	82d8 <ReadInt32Data.part.7+0x98>
    8a48:	ldr	r3, [r8, r7, lsl #2]
    8a4c:	ldr	r2, [sp, #8]
    8a50:	str	r3, [r2, r7, lsl #2]
    8a54:	add	r7, r7, #1
    8a58:	b	8a40 <ReadInt32Data.part.7+0x800>
    8a5c:	ldr	r3, [sp, #8]
    8a60:	mov	r9, r7
    8a64:	mov	r5, r7
    8a68:	sub	fp, r4, #256	; 0x100
    8a6c:	add	sl, r3, #1024	; 0x400
    8a70:	ldr	r3, [sp, #4]
    8a74:	mov	r2, #256	; 0x100
    8a78:	mov	r1, r6
    8a7c:	mov	r0, r8
    8a80:	ldr	r3, [r3]
    8a84:	bl	1520 <fread@plt>
    8a88:	add	r5, r5, r0
    8a8c:	mov	r2, r8
    8a90:	sub	r3, sl, #1024	; 0x400
    8a94:	ldr	r1, [r2], #4
    8a98:	str	r1, [r3], #4
    8a9c:	cmp	r3, sl
    8aa0:	bne	8a94 <ReadInt32Data.part.7+0x854>
    8aa4:	add	r9, r9, #256	; 0x100
    8aa8:	add	sl, r3, #1024	; 0x400
    8aac:	cmp	r9, fp
    8ab0:	blt	8a70 <ReadInt32Data.part.7+0x830>
    8ab4:	sub	r9, r4, #256	; 0x100
    8ab8:	sub	r9, r9, #1
    8abc:	lsr	r9, r9, #8
    8ac0:	add	r9, r9, #1
    8ac4:	lsl	r3, r9, #8
    8ac8:	cmp	r4, r3
    8acc:	ble	82d8 <ReadInt32Data.part.7+0x98>
    8ad0:	sub	r4, r4, r3
    8ad4:	ldr	r3, [sp, #4]
    8ad8:	mov	r1, r6
    8adc:	mov	r2, r4
    8ae0:	mov	r0, r8
    8ae4:	ldr	r3, [r3]
    8ae8:	bl	1520 <fread@plt>
    8aec:	ldr	r3, [sp, #8]
    8af0:	add	r5, r5, r0
    8af4:	add	r9, r3, r9, lsl #10
    8af8:	cmp	r4, r7
    8afc:	ble	82d8 <ReadInt32Data.part.7+0x98>
    8b00:	ldr	r3, [r8, r7, lsl #2]
    8b04:	add	r7, r7, #1
    8b08:	str	r3, [r9], #4
    8b0c:	b	8af8 <ReadInt32Data.part.7+0x8b8>
    8b10:	ldr	r3, [sp, #4]
    8b14:	add	r7, sp, #16
    8b18:	ldr	r9, [r3, #20]
    8b1c:	ldr	r3, [r3]
    8b20:	cmp	r9, #0
    8b24:	beq	8c34 <ReadInt32Data.part.7+0x9f4>
    8b28:	cmp	r4, #256	; 0x100
    8b2c:	bgt	8b68 <ReadInt32Data.part.7+0x928>
    8b30:	mov	r1, r0
    8b34:	mov	r2, r4
    8b38:	mov	r0, r7
    8b3c:	mov	r8, #0
    8b40:	bl	1520 <fread@plt>
    8b44:	mov	r5, r0
    8b48:	cmp	r4, r8
    8b4c:	ble	82d8 <ReadInt32Data.part.7+0x98>
    8b50:	add	r0, r7, r8, lsl #1
    8b54:	bl	18fc <Mat_int16Swap>
    8b58:	ldr	r3, [sp, #8]
    8b5c:	str	r0, [r3, r8, lsl #2]
    8b60:	add	r8, r8, #1
    8b64:	b	8b48 <ReadInt32Data.part.7+0x908>
    8b68:	ldr	r3, [sp, #8]
    8b6c:	mov	r8, #0
    8b70:	sub	sl, r4, #256	; 0x100
    8b74:	mov	r5, r8
    8b78:	add	r9, r3, #1024	; 0x400
    8b7c:	ldr	r3, [sp, #4]
    8b80:	mov	r2, #256	; 0x100
    8b84:	mov	r1, r6
    8b88:	mov	r0, r7
    8b8c:	sub	fp, r9, #1024	; 0x400
    8b90:	ldr	r3, [r3]
    8b94:	bl	1520 <fread@plt>
    8b98:	add	r5, r5, r0
    8b9c:	mov	r3, r7
    8ba0:	mov	r0, r3
    8ba4:	str	r3, [sp, #12]
    8ba8:	bl	18fc <Mat_int16Swap>
    8bac:	ldr	r3, [sp, #12]
    8bb0:	str	r0, [fp], #4
    8bb4:	cmp	fp, r9
    8bb8:	add	r3, r3, #2
    8bbc:	bne	8ba0 <ReadInt32Data.part.7+0x960>
    8bc0:	add	r8, r8, #256	; 0x100
    8bc4:	add	r9, fp, #1024	; 0x400
    8bc8:	cmp	r8, sl
    8bcc:	blt	8b7c <ReadInt32Data.part.7+0x93c>
    8bd0:	sub	r8, r4, #256	; 0x100
    8bd4:	sub	r8, r8, #1
    8bd8:	lsr	r8, r8, #8
    8bdc:	add	r8, r8, #1
    8be0:	lsl	r3, r8, #8
    8be4:	cmp	r4, r3
    8be8:	ble	82d8 <ReadInt32Data.part.7+0x98>
    8bec:	sub	r4, r4, r3
    8bf0:	ldr	r3, [sp, #4]
    8bf4:	mov	r1, r6
    8bf8:	mov	r2, r4
    8bfc:	mov	r0, r7
    8c00:	mov	r9, #0
    8c04:	ldr	r3, [r3]
    8c08:	bl	1520 <fread@plt>
    8c0c:	ldr	r3, [sp, #8]
    8c10:	add	r5, r5, r0
    8c14:	add	r8, r3, r8, lsl #10
    8c18:	cmp	r4, r9
    8c1c:	ble	82d8 <ReadInt32Data.part.7+0x98>
    8c20:	add	r0, r7, r9, lsl #1
    8c24:	add	r9, r9, #1
    8c28:	bl	18fc <Mat_int16Swap>
    8c2c:	str	r0, [r8], #4
    8c30:	b	8c18 <ReadInt32Data.part.7+0x9d8>
    8c34:	cmp	r4, #256	; 0x100
    8c38:	bgt	8c6c <ReadInt32Data.part.7+0xa2c>
    8c3c:	mov	r1, r0
    8c40:	mov	r2, r4
    8c44:	mov	r0, r7
    8c48:	bl	1520 <fread@plt>
    8c4c:	mov	r5, r0
    8c50:	cmp	r4, r9
    8c54:	ble	82d8 <ReadInt32Data.part.7+0x98>
    8c58:	ldrsh	r3, [r7], #2
    8c5c:	ldr	r2, [sp, #8]
    8c60:	str	r3, [r2, r9, lsl #2]
    8c64:	add	r9, r9, #1
    8c68:	b	8c50 <ReadInt32Data.part.7+0xa10>
    8c6c:	ldr	r3, [sp, #8]
    8c70:	mov	fp, r9
    8c74:	mov	r5, r9
    8c78:	add	r8, r3, #1024	; 0x400
    8c7c:	sub	r3, r4, #256	; 0x100
    8c80:	str	r3, [sp, #12]
    8c84:	ldr	r3, [sp, #4]
    8c88:	mov	r2, #256	; 0x100
    8c8c:	mov	r1, r6
    8c90:	mov	r0, r7
    8c94:	mov	sl, r7
    8c98:	ldr	r3, [r3]
    8c9c:	bl	1520 <fread@plt>
    8ca0:	add	r5, r5, r0
    8ca4:	sub	r3, r8, #1024	; 0x400
    8ca8:	mov	r2, r7
    8cac:	ldrsh	r1, [r2], #2
    8cb0:	str	r1, [r3], #4
    8cb4:	cmp	r3, r8
    8cb8:	bne	8cac <ReadInt32Data.part.7+0xa6c>
    8cbc:	add	r8, r3, #1024	; 0x400
    8cc0:	ldr	r3, [sp, #12]
    8cc4:	add	fp, fp, #256	; 0x100
    8cc8:	cmp	fp, r3
    8ccc:	blt	8c84 <ReadInt32Data.part.7+0xa44>
    8cd0:	sub	r8, r4, #256	; 0x100
    8cd4:	sub	r8, r8, #1
    8cd8:	lsr	r8, r8, #8
    8cdc:	add	r8, r8, #1
    8ce0:	lsl	r3, r8, #8
    8ce4:	cmp	r4, r3
    8ce8:	ble	82d8 <ReadInt32Data.part.7+0x98>
    8cec:	sub	r4, r4, r3
    8cf0:	ldr	r3, [sp, #4]
    8cf4:	mov	r1, r6
    8cf8:	mov	r2, r4
    8cfc:	mov	r0, r7
    8d00:	ldr	r3, [r3]
    8d04:	bl	1520 <fread@plt>
    8d08:	ldr	r3, [sp, #8]
    8d0c:	add	r5, r5, r0
    8d10:	add	r8, r3, r8, lsl #10
    8d14:	cmp	r4, r9
    8d18:	ble	82d8 <ReadInt32Data.part.7+0x98>
    8d1c:	ldrsh	r3, [sl], #2
    8d20:	add	r9, r9, #1
    8d24:	str	r3, [r8], #4
    8d28:	b	8d14 <ReadInt32Data.part.7+0xad4>
    8d2c:	ldr	r3, [sp, #4]
    8d30:	add	r7, sp, #16
    8d34:	ldr	r9, [r3, #20]
    8d38:	ldr	r3, [r3]
    8d3c:	cmp	r9, #0
    8d40:	beq	8e50 <ReadInt32Data.part.7+0xc10>
    8d44:	cmp	r4, #256	; 0x100
    8d48:	bgt	8d84 <ReadInt32Data.part.7+0xb44>
    8d4c:	mov	r1, r0
    8d50:	mov	r2, r4
    8d54:	mov	r0, r7
    8d58:	mov	r8, #0
    8d5c:	bl	1520 <fread@plt>
    8d60:	mov	r5, r0
    8d64:	cmp	r4, r8
    8d68:	ble	82d8 <ReadInt32Data.part.7+0x98>
    8d6c:	add	r0, r7, r8, lsl #1
    8d70:	bl	191c <Mat_uint16Swap>
    8d74:	ldr	r3, [sp, #8]
    8d78:	str	r0, [r3, r8, lsl #2]
    8d7c:	add	r8, r8, #1
    8d80:	b	8d64 <ReadInt32Data.part.7+0xb24>
    8d84:	ldr	r3, [sp, #8]
    8d88:	mov	r8, #0
    8d8c:	sub	sl, r4, #256	; 0x100
    8d90:	mov	r5, r8
    8d94:	add	r9, r3, #1024	; 0x400
    8d98:	ldr	r3, [sp, #4]
    8d9c:	mov	r2, #256	; 0x100
    8da0:	mov	r1, r6
    8da4:	mov	r0, r7
    8da8:	sub	fp, r9, #1024	; 0x400
    8dac:	ldr	r3, [r3]
    8db0:	bl	1520 <fread@plt>
    8db4:	add	r5, r5, r0
    8db8:	mov	r3, r7
    8dbc:	mov	r0, r3
    8dc0:	str	r3, [sp, #12]
    8dc4:	bl	191c <Mat_uint16Swap>
    8dc8:	ldr	r3, [sp, #12]
    8dcc:	str	r0, [fp], #4
    8dd0:	cmp	fp, r9
    8dd4:	add	r3, r3, #2
    8dd8:	bne	8dbc <ReadInt32Data.part.7+0xb7c>
    8ddc:	add	r8, r8, #256	; 0x100
    8de0:	add	r9, fp, #1024	; 0x400
    8de4:	cmp	r8, sl
    8de8:	blt	8d98 <ReadInt32Data.part.7+0xb58>
    8dec:	sub	r8, r4, #256	; 0x100
    8df0:	sub	r8, r8, #1
    8df4:	lsr	r8, r8, #8
    8df8:	add	r8, r8, #1
    8dfc:	lsl	r3, r8, #8
    8e00:	cmp	r4, r3
    8e04:	ble	82d8 <ReadInt32Data.part.7+0x98>
    8e08:	sub	r4, r4, r3
    8e0c:	ldr	r3, [sp, #4]
    8e10:	mov	r1, r6
    8e14:	mov	r2, r4
    8e18:	mov	r0, r7
    8e1c:	mov	r9, #0
    8e20:	ldr	r3, [r3]
    8e24:	bl	1520 <fread@plt>
    8e28:	ldr	r3, [sp, #8]
    8e2c:	add	r5, r5, r0
    8e30:	add	r8, r3, r8, lsl #10
    8e34:	cmp	r4, r9
    8e38:	ble	82d8 <ReadInt32Data.part.7+0x98>
    8e3c:	add	r0, r7, r9, lsl #1
    8e40:	add	r9, r9, #1
    8e44:	bl	191c <Mat_uint16Swap>
    8e48:	str	r0, [r8], #4
    8e4c:	b	8e34 <ReadInt32Data.part.7+0xbf4>
    8e50:	cmp	r4, #256	; 0x100
    8e54:	bgt	8e88 <ReadInt32Data.part.7+0xc48>
    8e58:	mov	r1, r0
    8e5c:	mov	r2, r4
    8e60:	mov	r0, r7
    8e64:	bl	1520 <fread@plt>
    8e68:	mov	r5, r0
    8e6c:	cmp	r4, r9
    8e70:	ble	82d8 <ReadInt32Data.part.7+0x98>
    8e74:	ldrh	r3, [r7], #2
    8e78:	ldr	r2, [sp, #8]
    8e7c:	str	r3, [r2, r9, lsl #2]
    8e80:	add	r9, r9, #1
    8e84:	b	8e6c <ReadInt32Data.part.7+0xc2c>
    8e88:	ldr	r3, [sp, #8]
    8e8c:	mov	fp, r9
    8e90:	mov	r5, r9
    8e94:	add	r8, r3, #1024	; 0x400
    8e98:	sub	r3, r4, #256	; 0x100
    8e9c:	str	r3, [sp, #12]
    8ea0:	ldr	r3, [sp, #4]
    8ea4:	mov	r2, #256	; 0x100
    8ea8:	mov	r1, r6
    8eac:	mov	r0, r7
    8eb0:	mov	sl, r7
    8eb4:	ldr	r3, [r3]
    8eb8:	bl	1520 <fread@plt>
    8ebc:	add	r5, r5, r0
    8ec0:	sub	r3, r8, #1024	; 0x400
    8ec4:	mov	r2, r7
    8ec8:	ldrh	r1, [r2], #2
    8ecc:	str	r1, [r3], #4
    8ed0:	cmp	r3, r8
    8ed4:	bne	8ec8 <ReadInt32Data.part.7+0xc88>
    8ed8:	add	r8, r3, #1024	; 0x400
    8edc:	ldr	r3, [sp, #12]
    8ee0:	add	fp, fp, #256	; 0x100
    8ee4:	cmp	fp, r3
    8ee8:	blt	8ea0 <ReadInt32Data.part.7+0xc60>
    8eec:	sub	r8, r4, #256	; 0x100
    8ef0:	sub	r8, r8, #1
    8ef4:	lsr	r8, r8, #8
    8ef8:	add	r8, r8, #1
    8efc:	lsl	r3, r8, #8
    8f00:	cmp	r4, r3
    8f04:	ble	82d8 <ReadInt32Data.part.7+0x98>
    8f08:	sub	r4, r4, r3
    8f0c:	ldr	r3, [sp, #4]
    8f10:	mov	r1, r6
    8f14:	mov	r2, r4
    8f18:	mov	r0, r7
    8f1c:	ldr	r3, [r3]
    8f20:	bl	1520 <fread@plt>
    8f24:	ldr	r3, [sp, #8]
    8f28:	add	r5, r5, r0
    8f2c:	add	r8, r3, r8, lsl #10
    8f30:	cmp	r4, r9
    8f34:	ble	82d8 <ReadInt32Data.part.7+0x98>
    8f38:	ldrh	r3, [sl], #2
    8f3c:	add	r9, r9, #1
    8f40:	str	r3, [r8], #4
    8f44:	b	8f30 <ReadInt32Data.part.7+0xcf0>
    8f48:	cmp	r4, #256	; 0x100
    8f4c:	add	r7, sp, #16
    8f50:	bgt	8f90 <ReadInt32Data.part.7+0xd50>
    8f54:	ldr	r3, [sp, #4]
    8f58:	mov	r1, r0
    8f5c:	mov	r2, r4
    8f60:	mov	r0, r7
    8f64:	ldr	r3, [r3]
    8f68:	bl	1520 <fread@plt>
    8f6c:	mov	r5, r0
    8f70:	mov	r3, #0
    8f74:	cmp	r4, r3
    8f78:	ble	82d8 <ReadInt32Data.part.7+0x98>
    8f7c:	ldrsb	r2, [r7, r3]
    8f80:	ldr	r1, [sp, #8]
    8f84:	str	r2, [r1, r3, lsl #2]
    8f88:	add	r3, r3, #1
    8f8c:	b	8f74 <ReadInt32Data.part.7+0xd34>
    8f90:	ldr	r3, [sp, #8]
    8f94:	mov	r8, #0
    8f98:	sub	sl, r4, #256	; 0x100
    8f9c:	mov	r5, r8
    8fa0:	add	r9, r3, #1024	; 0x400
    8fa4:	ldr	r3, [sp, #4]
    8fa8:	mov	r2, #256	; 0x100
    8fac:	mov	r1, r6
    8fb0:	mov	r0, r7
    8fb4:	ldr	r3, [r3]
    8fb8:	bl	1520 <fread@plt>
    8fbc:	add	r5, r5, r0
    8fc0:	mov	r2, r7
    8fc4:	sub	r3, r9, #1024	; 0x400
    8fc8:	ldrsb	r1, [r2], #1
    8fcc:	str	r1, [r3], #4
    8fd0:	cmp	r3, r9
    8fd4:	bne	8fc8 <ReadInt32Data.part.7+0xd88>
    8fd8:	add	r8, r8, #256	; 0x100
    8fdc:	add	r9, r3, #1024	; 0x400
    8fe0:	cmp	r8, sl
    8fe4:	blt	8fa4 <ReadInt32Data.part.7+0xd64>
    8fe8:	sub	r3, r4, #256	; 0x100
    8fec:	sub	r3, r3, #1
    8ff0:	lsr	r3, r3, #8
    8ff4:	add	r8, r3, #1
    8ff8:	lsl	r3, r8, #8
    8ffc:	cmp	r4, r3
    9000:	ble	82d8 <ReadInt32Data.part.7+0x98>
    9004:	sub	r4, r4, r3
    9008:	ldr	r3, [sp, #4]
    900c:	mov	r1, r6
    9010:	mov	r2, r4
    9014:	mov	r0, r7
    9018:	ldr	r3, [r3]
    901c:	bl	1520 <fread@plt>
    9020:	ldr	r3, [sp, #8]
    9024:	add	r5, r5, r0
    9028:	mov	r2, #0
    902c:	add	r3, r3, r8, lsl #10
    9030:	cmp	r4, r2
    9034:	ble	82d8 <ReadInt32Data.part.7+0x98>
    9038:	ldrsb	r1, [r7, r2]
    903c:	add	r2, r2, #1
    9040:	str	r1, [r3], #4
    9044:	b	9030 <ReadInt32Data.part.7+0xdf0>
    9048:	cmp	r4, #256	; 0x100
    904c:	add	r7, sp, #16
    9050:	bgt	9090 <ReadInt32Data.part.7+0xe50>
    9054:	ldr	r3, [sp, #4]
    9058:	mov	r1, r0
    905c:	mov	r2, r4
    9060:	mov	r0, r7
    9064:	ldr	r3, [r3]
    9068:	bl	1520 <fread@plt>
    906c:	mov	r5, r0
    9070:	mov	r3, #0
    9074:	cmp	r4, r3
    9078:	ble	82d8 <ReadInt32Data.part.7+0x98>
    907c:	ldrb	r2, [r7, r3]
    9080:	ldr	r1, [sp, #8]
    9084:	str	r2, [r1, r3, lsl #2]
    9088:	add	r3, r3, #1
    908c:	b	9074 <ReadInt32Data.part.7+0xe34>
    9090:	ldr	r3, [sp, #8]
    9094:	mov	r8, #0
    9098:	sub	sl, r4, #256	; 0x100
    909c:	mov	r5, r8
    90a0:	add	r9, r3, #1024	; 0x400
    90a4:	ldr	r3, [sp, #4]
    90a8:	mov	r2, #256	; 0x100
    90ac:	mov	r1, r6
    90b0:	mov	r0, r7
    90b4:	ldr	r3, [r3]
    90b8:	bl	1520 <fread@plt>
    90bc:	add	r5, r5, r0
    90c0:	mov	r2, r7
    90c4:	sub	r3, r9, #1024	; 0x400
    90c8:	ldrb	r1, [r2], #1
    90cc:	str	r1, [r3], #4
    90d0:	cmp	r3, r9
    90d4:	bne	90c8 <ReadInt32Data.part.7+0xe88>
    90d8:	add	r8, r8, #256	; 0x100
    90dc:	add	r9, r3, #1024	; 0x400
    90e0:	cmp	r8, sl
    90e4:	blt	90a4 <ReadInt32Data.part.7+0xe64>
    90e8:	sub	r3, r4, #256	; 0x100
    90ec:	sub	r3, r3, #1
    90f0:	lsr	r3, r3, #8
    90f4:	add	r8, r3, #1
    90f8:	lsl	r3, r8, #8
    90fc:	cmp	r4, r3
    9100:	ble	82d8 <ReadInt32Data.part.7+0x98>
    9104:	sub	r4, r4, r3
    9108:	ldr	r3, [sp, #4]
    910c:	mov	r1, r6
    9110:	mov	r2, r4
    9114:	mov	r0, r7
    9118:	ldr	r3, [r3]
    911c:	bl	1520 <fread@plt>
    9120:	ldr	r3, [sp, #8]
    9124:	add	r5, r5, r0
    9128:	mov	r2, #0
    912c:	add	r3, r3, r8, lsl #10
    9130:	cmp	r4, r2
    9134:	ble	82d8 <ReadInt32Data.part.7+0x98>
    9138:	ldrb	r1, [r7, r2]
    913c:	add	r2, r2, #1
    9140:	str	r1, [r3], #4
    9144:	b	9130 <ReadInt32Data.part.7+0xef0>
    9148:	cmp	r5, #12
    914c:	bne	936c <ReadInt32Data.part.7+0x112c>
    9150:	ldr	r3, [sp, #4]
    9154:	add	r7, sp, #16
    9158:	ldr	r9, [r3, #20]
    915c:	ldr	r3, [r3]
    9160:	cmp	r9, #0
    9164:	beq	9274 <ReadInt32Data.part.7+0x1034>
    9168:	cmp	r4, #256	; 0x100
    916c:	bgt	91a8 <ReadInt32Data.part.7+0xf68>
    9170:	mov	r1, r0
    9174:	mov	r2, r4
    9178:	mov	r0, r7
    917c:	mov	r8, #0
    9180:	bl	1520 <fread@plt>
    9184:	mov	r5, r0
    9188:	cmp	r4, r8
    918c:	ble	82d8 <ReadInt32Data.part.7+0x98>
    9190:	add	r0, r7, r8, lsl #3
    9194:	bl	17ec <Mat_int64Swap>
    9198:	ldr	r3, [sp, #8]
    919c:	str	r0, [r3, r8, lsl #2]
    91a0:	add	r8, r8, #1
    91a4:	b	9188 <ReadInt32Data.part.7+0xf48>
    91a8:	ldr	r3, [sp, #8]
    91ac:	mov	r8, #0
    91b0:	sub	sl, r4, #256	; 0x100
    91b4:	mov	r5, r8
    91b8:	add	r9, r3, #1024	; 0x400
    91bc:	ldr	r3, [sp, #4]
    91c0:	mov	r2, #256	; 0x100
    91c4:	mov	r1, r6
    91c8:	mov	r0, r7
    91cc:	sub	fp, r9, #1024	; 0x400
    91d0:	ldr	r3, [r3]
    91d4:	bl	1520 <fread@plt>
    91d8:	add	r5, r5, r0
    91dc:	mov	r3, r7
    91e0:	mov	r0, r3
    91e4:	str	r3, [sp, #12]
    91e8:	bl	17ec <Mat_int64Swap>
    91ec:	ldr	r3, [sp, #12]
    91f0:	str	r0, [fp], #4
    91f4:	cmp	r9, fp
    91f8:	add	r3, r3, #8
    91fc:	bne	91e0 <ReadInt32Data.part.7+0xfa0>
    9200:	add	r8, r8, #256	; 0x100
    9204:	add	r9, r9, #1024	; 0x400
    9208:	cmp	r8, sl
    920c:	blt	91bc <ReadInt32Data.part.7+0xf7c>
    9210:	sub	r8, r4, #256	; 0x100
    9214:	sub	r8, r8, #1
    9218:	lsr	r8, r8, #8
    921c:	add	r8, r8, #1
    9220:	lsl	r3, r8, #8
    9224:	cmp	r4, r3
    9228:	ble	82d8 <ReadInt32Data.part.7+0x98>
    922c:	sub	r4, r4, r3
    9230:	ldr	r3, [sp, #4]
    9234:	mov	r1, r6
    9238:	mov	r2, r4
    923c:	mov	r0, r7
    9240:	mov	r9, #0
    9244:	ldr	r3, [r3]
    9248:	bl	1520 <fread@plt>
    924c:	ldr	r3, [sp, #8]
    9250:	add	r5, r5, r0
    9254:	add	r8, r3, r8, lsl #10
    9258:	cmp	r4, r9
    925c:	ble	82d8 <ReadInt32Data.part.7+0x98>
    9260:	add	r0, r7, r9, lsl #3
    9264:	add	r9, r9, #1
    9268:	bl	17ec <Mat_int64Swap>
    926c:	str	r0, [r8], #4
    9270:	b	9258 <ReadInt32Data.part.7+0x1018>
    9274:	cmp	r4, #256	; 0x100
    9278:	bgt	92ac <ReadInt32Data.part.7+0x106c>
    927c:	mov	r1, r0
    9280:	mov	r2, r4
    9284:	mov	r0, r7
    9288:	bl	1520 <fread@plt>
    928c:	mov	r5, r0
    9290:	cmp	r4, r9
    9294:	ble	82d8 <ReadInt32Data.part.7+0x98>
    9298:	ldr	r3, [r7], #8
    929c:	ldr	r2, [sp, #8]
    92a0:	str	r3, [r2, r9, lsl #2]
    92a4:	add	r9, r9, #1
    92a8:	b	9290 <ReadInt32Data.part.7+0x1050>
    92ac:	ldr	r3, [sp, #8]
    92b0:	mov	fp, r9
    92b4:	mov	r5, r9
    92b8:	add	r8, r3, #1024	; 0x400
    92bc:	sub	r3, r4, #256	; 0x100
    92c0:	str	r3, [sp, #12]
    92c4:	ldr	r3, [sp, #4]
    92c8:	mov	r2, #256	; 0x100
    92cc:	mov	r1, r6
    92d0:	mov	r0, r7
    92d4:	mov	sl, r7
    92d8:	ldr	r3, [r3]
    92dc:	bl	1520 <fread@plt>
    92e0:	add	r5, r5, r0
    92e4:	sub	r3, r8, #1024	; 0x400
    92e8:	mov	r2, r7
    92ec:	ldr	r1, [r2], #8
    92f0:	str	r1, [r3], #4
    92f4:	cmp	r3, r8
    92f8:	bne	92ec <ReadInt32Data.part.7+0x10ac>
    92fc:	add	r8, r3, #1024	; 0x400
    9300:	ldr	r3, [sp, #12]
    9304:	add	fp, fp, #256	; 0x100
    9308:	cmp	fp, r3
    930c:	blt	92c4 <ReadInt32Data.part.7+0x1084>
    9310:	sub	r8, r4, #256	; 0x100
    9314:	sub	r8, r8, #1
    9318:	lsr	r8, r8, #8
    931c:	add	r8, r8, #1
    9320:	lsl	r3, r8, #8
    9324:	cmp	r4, r3
    9328:	ble	82d8 <ReadInt32Data.part.7+0x98>
    932c:	sub	r4, r4, r3
    9330:	ldr	r3, [sp, #4]
    9334:	mov	r1, r6
    9338:	mov	r2, r4
    933c:	mov	r0, r7
    9340:	ldr	r3, [r3]
    9344:	bl	1520 <fread@plt>
    9348:	ldr	r3, [sp, #8]
    934c:	add	r5, r5, r0
    9350:	add	r8, r3, r8, lsl #10
    9354:	cmp	r4, r9
    9358:	ble	82d8 <ReadInt32Data.part.7+0x98>
    935c:	ldr	r3, [sl], #8
    9360:	add	r9, r9, #1
    9364:	str	r3, [r8], #4
    9368:	b	9354 <ReadInt32Data.part.7+0x1114>
    936c:	cmp	r5, #13
    9370:	movne	r5, #0
    9374:	bne	82d8 <ReadInt32Data.part.7+0x98>
    9378:	ldr	r3, [sp, #4]
    937c:	add	r7, sp, #16
    9380:	ldr	r8, [r3, #20]
    9384:	ldr	r3, [r3]
    9388:	cmp	r8, #0
    938c:	beq	949c <ReadInt32Data.part.7+0x125c>
    9390:	cmp	r4, #256	; 0x100
    9394:	bgt	93d0 <ReadInt32Data.part.7+0x1190>
    9398:	mov	r1, r0
    939c:	mov	r2, r4
    93a0:	mov	r0, r7
    93a4:	mov	r8, #0
    93a8:	bl	1520 <fread@plt>
    93ac:	mov	r5, r0
    93b0:	cmp	r4, r8
    93b4:	ble	82d8 <ReadInt32Data.part.7+0x98>
    93b8:	add	r0, r7, r8, lsl #3
    93bc:	bl	1844 <Mat_uint64Swap>
    93c0:	ldr	r3, [sp, #8]
    93c4:	str	r0, [r3, r8, lsl #2]
    93c8:	add	r8, r8, #1
    93cc:	b	93b0 <ReadInt32Data.part.7+0x1170>
    93d0:	ldr	r3, [sp, #8]
    93d4:	mov	r8, #0
    93d8:	sub	sl, r4, #256	; 0x100
    93dc:	mov	r5, r8
    93e0:	add	r9, r3, #1024	; 0x400
    93e4:	ldr	r3, [sp, #4]
    93e8:	mov	r2, #256	; 0x100
    93ec:	mov	r1, r6
    93f0:	mov	r0, r7
    93f4:	sub	fp, r9, #1024	; 0x400
    93f8:	ldr	r3, [r3]
    93fc:	bl	1520 <fread@plt>
    9400:	add	r5, r5, r0
    9404:	mov	r3, r7
    9408:	mov	r0, r3
    940c:	str	r3, [sp, #12]
    9410:	bl	1844 <Mat_uint64Swap>
    9414:	ldr	r3, [sp, #12]
    9418:	str	r0, [fp], #4
    941c:	cmp	r9, fp
    9420:	add	r3, r3, #8
    9424:	bne	9408 <ReadInt32Data.part.7+0x11c8>
    9428:	add	r8, r8, #256	; 0x100
    942c:	add	r9, r9, #1024	; 0x400
    9430:	cmp	r8, sl
    9434:	blt	93e4 <ReadInt32Data.part.7+0x11a4>
    9438:	sub	r8, r4, #256	; 0x100
    943c:	sub	r8, r8, #1
    9440:	lsr	r8, r8, #8
    9444:	add	r8, r8, #1
    9448:	lsl	r3, r8, #8
    944c:	cmp	r4, r3
    9450:	ble	82d8 <ReadInt32Data.part.7+0x98>
    9454:	sub	r4, r4, r3
    9458:	ldr	r3, [sp, #4]
    945c:	mov	r1, r6
    9460:	mov	r2, r4
    9464:	mov	r0, r7
    9468:	mov	r9, #0
    946c:	ldr	r3, [r3]
    9470:	bl	1520 <fread@plt>
    9474:	ldr	r3, [sp, #8]
    9478:	add	r5, r5, r0
    947c:	add	r8, r3, r8, lsl #10
    9480:	cmp	r4, r9
    9484:	ble	82d8 <ReadInt32Data.part.7+0x98>
    9488:	add	r0, r7, r9, lsl #3
    948c:	add	r9, r9, #1
    9490:	bl	1844 <Mat_uint64Swap>
    9494:	str	r0, [r8], #4
    9498:	b	9480 <ReadInt32Data.part.7+0x1240>
    949c:	cmp	r4, #256	; 0x100
    94a0:	bgt	94d4 <ReadInt32Data.part.7+0x1294>
    94a4:	mov	r1, r0
    94a8:	mov	r2, r4
    94ac:	mov	r0, r7
    94b0:	bl	1520 <fread@plt>
    94b4:	mov	r5, r0
    94b8:	cmp	r4, r8
    94bc:	ble	82d8 <ReadInt32Data.part.7+0x98>
    94c0:	ldr	r3, [r7], #8
    94c4:	ldr	r2, [sp, #8]
    94c8:	str	r3, [r2, r8, lsl #2]
    94cc:	add	r8, r8, #1
    94d0:	b	94b8 <ReadInt32Data.part.7+0x1278>
    94d4:	ldr	r3, [sp, #8]
    94d8:	mov	fp, r8
    94dc:	mov	r5, r8
    94e0:	add	r9, r3, #1024	; 0x400
    94e4:	sub	r3, r4, #256	; 0x100
    94e8:	str	r3, [sp, #12]
    94ec:	ldr	r3, [sp, #4]
    94f0:	mov	r2, #256	; 0x100
    94f4:	mov	r1, r6
    94f8:	mov	r0, r7
    94fc:	mov	sl, r7
    9500:	ldr	r3, [r3]
    9504:	bl	1520 <fread@plt>
    9508:	add	r5, r5, r0
    950c:	sub	r3, r9, #1024	; 0x400
    9510:	mov	r2, r7
    9514:	ldr	r1, [r2], #8
    9518:	str	r1, [r3], #4
    951c:	cmp	r3, r9
    9520:	bne	9514 <ReadInt32Data.part.7+0x12d4>
    9524:	add	r9, r3, #1024	; 0x400
    9528:	ldr	r3, [sp, #12]
    952c:	add	fp, fp, #256	; 0x100
    9530:	cmp	fp, r3
    9534:	blt	94ec <ReadInt32Data.part.7+0x12ac>
    9538:	sub	r9, r4, #256	; 0x100
    953c:	sub	r9, r9, #1
    9540:	lsr	r9, r9, #8
    9544:	add	r9, r9, #1
    9548:	lsl	r3, r9, #8
    954c:	cmp	r4, r3
    9550:	ble	82d8 <ReadInt32Data.part.7+0x98>
    9554:	sub	r4, r4, r3
    9558:	ldr	r3, [sp, #4]
    955c:	mov	r1, r6
    9560:	mov	r2, r4
    9564:	mov	r0, r7
    9568:	ldr	r3, [r3]
    956c:	bl	1520 <fread@plt>
    9570:	ldr	r3, [sp, #8]
    9574:	add	r5, r5, r0
    9578:	add	r9, r3, r9, lsl #10
    957c:	cmp	r4, r8
    9580:	ble	82d8 <ReadInt32Data.part.7+0x98>
    9584:	ldr	r3, [sl], #8
    9588:	add	r8, r8, #1
    958c:	str	r3, [r9], #4
    9590:	b	957c <ReadInt32Data.part.7+0x133c>

00009594 <ReadUInt32Data.part.9>:
    9594:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    9598:	sub	sp, sp, #2064	; 0x810
    959c:	mov	r5, r2
    95a0:	sub	sp, sp, #4
    95a4:	mov	r4, r3
    95a8:	strd	r0, [sp, #4]
    95ac:	mov	r0, r2
    95b0:	bl	1598 <Mat_SizeOf@plt>
    95b4:	sub	r3, r5, #1
    95b8:	mov	r6, r0
    95bc:	cmp	r3, #8
    95c0:	addls	pc, pc, r3, lsl #2
    95c4:	b	a49c <ReadUInt32Data.part.9+0xf08>
    95c8:	b	a29c <ReadUInt32Data.part.9+0xd08>
    95cc:	b	a39c <ReadUInt32Data.part.9+0xe08>
    95d0:	b	9e64 <ReadUInt32Data.part.9+0x8d0>
    95d4:	b	a080 <ReadUInt32Data.part.9+0xaec>
    95d8:	b	9a64 <ReadUInt32Data.part.9+0x4d0>
    95dc:	b	9c64 <ReadUInt32Data.part.9+0x6d0>
    95e0:	b	9838 <ReadUInt32Data.part.9+0x2a4>
    95e4:	b	a49c <ReadUInt32Data.part.9+0xf08>
    95e8:	b	95ec <ReadUInt32Data.part.9+0x58>
    95ec:	ldr	r3, [sp, #4]
    95f0:	add	r7, sp, #16
    95f4:	ldr	r9, [r3, #20]
    95f8:	ldr	r3, [r3]
    95fc:	cmp	r9, #0
    9600:	beq	9730 <ReadUInt32Data.part.9+0x19c>
    9604:	cmp	r4, #256	; 0x100
    9608:	bgt	965c <ReadUInt32Data.part.9+0xc8>
    960c:	mov	r1, r0
    9610:	mov	r2, r4
    9614:	mov	r0, r7
    9618:	mov	r8, #0
    961c:	bl	1520 <fread@plt>
    9620:	mov	r5, r0
    9624:	cmp	r4, r8
    9628:	bgt	963c <ReadUInt32Data.part.9+0xa8>
    962c:	mul	r0, r6, r5
    9630:	add	sp, sp, #2064	; 0x810
    9634:	add	sp, sp, #4
    9638:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    963c:	add	r0, r7, r8, lsl #3
    9640:	bl	196c <Mat_doubleSwap>
    9644:	vcvt.u32.f64	s0, d0
    9648:	ldr	r3, [sp, #8]
    964c:	vmov	r2, s0
    9650:	str	r2, [r3, r8, lsl #2]
    9654:	add	r8, r8, #1
    9658:	b	9624 <ReadUInt32Data.part.9+0x90>
    965c:	ldr	r3, [sp, #8]
    9660:	mov	r8, #0
    9664:	sub	sl, r4, #256	; 0x100
    9668:	mov	r5, r8
    966c:	add	r9, r3, #1024	; 0x400
    9670:	ldr	r3, [sp, #4]
    9674:	mov	r2, #256	; 0x100
    9678:	mov	r1, r6
    967c:	mov	r0, r7
    9680:	sub	fp, r9, #1024	; 0x400
    9684:	ldr	r3, [r3]
    9688:	bl	1520 <fread@plt>
    968c:	add	r5, r5, r0
    9690:	mov	r3, r7
    9694:	mov	r0, r3
    9698:	str	r3, [sp, #12]
    969c:	bl	196c <Mat_doubleSwap>
    96a0:	vcvt.u32.f64	s0, d0
    96a4:	ldr	r3, [sp, #12]
    96a8:	add	r3, r3, #8
    96ac:	vstmia	fp!, {s0}
    96b0:	cmp	fp, r9
    96b4:	bne	9694 <ReadUInt32Data.part.9+0x100>
    96b8:	add	r8, r8, #256	; 0x100
    96bc:	add	r9, fp, #1024	; 0x400
    96c0:	cmp	r8, sl
    96c4:	blt	9670 <ReadUInt32Data.part.9+0xdc>
    96c8:	sub	r8, r4, #256	; 0x100
    96cc:	sub	r8, r8, #1
    96d0:	lsr	r8, r8, #8
    96d4:	add	r8, r8, #1
    96d8:	lsl	r3, r8, #8
    96dc:	cmp	r4, r3
    96e0:	ble	962c <ReadUInt32Data.part.9+0x98>
    96e4:	sub	r4, r4, r3
    96e8:	ldr	r3, [sp, #4]
    96ec:	mov	r1, r6
    96f0:	mov	r2, r4
    96f4:	mov	r0, r7
    96f8:	mov	r9, #0
    96fc:	ldr	r3, [r3]
    9700:	bl	1520 <fread@plt>
    9704:	ldr	r3, [sp, #8]
    9708:	add	r5, r5, r0
    970c:	add	r8, r3, r8, lsl #10
    9710:	cmp	r4, r9
    9714:	ble	962c <ReadUInt32Data.part.9+0x98>
    9718:	add	r0, r7, r9, lsl #3
    971c:	add	r9, r9, #1
    9720:	bl	196c <Mat_doubleSwap>
    9724:	vcvt.u32.f64	s0, d0
    9728:	vstmia	r8!, {s0}
    972c:	b	9710 <ReadUInt32Data.part.9+0x17c>
    9730:	cmp	r4, #256	; 0x100
    9734:	bgt	9770 <ReadUInt32Data.part.9+0x1dc>
    9738:	mov	r1, r0
    973c:	mov	r2, r4
    9740:	mov	r0, r7
    9744:	bl	1520 <fread@plt>
    9748:	mov	r5, r0
    974c:	cmp	r4, r9
    9750:	ble	962c <ReadUInt32Data.part.9+0x98>
    9754:	vldmia	r7!, {d7}
    9758:	ldr	r3, [sp, #8]
    975c:	vcvt.u32.f64	s14, d7
    9760:	vmov	r2, s14
    9764:	str	r2, [r3, r9, lsl #2]
    9768:	add	r9, r9, #1
    976c:	b	974c <ReadUInt32Data.part.9+0x1b8>
    9770:	ldr	r3, [sp, #8]
    9774:	mov	fp, r9
    9778:	mov	r5, r9
    977c:	add	r8, r3, #1024	; 0x400
    9780:	sub	r3, r4, #256	; 0x100
    9784:	str	r3, [sp, #12]
    9788:	ldr	r3, [sp, #4]
    978c:	mov	r2, #256	; 0x100
    9790:	mov	r1, r6
    9794:	mov	r0, r7
    9798:	mov	sl, r7
    979c:	ldr	r3, [r3]
    97a0:	bl	1520 <fread@plt>
    97a4:	add	r5, r5, r0
    97a8:	sub	r3, r8, #1024	; 0x400
    97ac:	mov	r2, r7
    97b0:	vldmia	r2!, {d7}
    97b4:	vcvt.u32.f64	s14, d7
    97b8:	vstmia	r3!, {s14}
    97bc:	cmp	r3, r8
    97c0:	bne	97b0 <ReadUInt32Data.part.9+0x21c>
    97c4:	add	r8, r3, #1024	; 0x400
    97c8:	ldr	r3, [sp, #12]
    97cc:	add	fp, fp, #256	; 0x100
    97d0:	cmp	fp, r3
    97d4:	blt	9788 <ReadUInt32Data.part.9+0x1f4>
    97d8:	sub	r8, r4, #256	; 0x100
    97dc:	sub	r8, r8, #1
    97e0:	lsr	r8, r8, #8
    97e4:	add	r8, r8, #1
    97e8:	lsl	r3, r8, #8
    97ec:	cmp	r4, r3
    97f0:	ble	962c <ReadUInt32Data.part.9+0x98>
    97f4:	sub	r4, r4, r3
    97f8:	ldr	r3, [sp, #4]
    97fc:	mov	r1, r6
    9800:	mov	r2, r4
    9804:	mov	r0, r7
    9808:	ldr	r3, [r3]
    980c:	bl	1520 <fread@plt>
    9810:	ldr	r3, [sp, #8]
    9814:	add	r5, r5, r0
    9818:	add	r8, r3, r8, lsl #10
    981c:	cmp	r4, r9
    9820:	ble	962c <ReadUInt32Data.part.9+0x98>
    9824:	vldmia	sl!, {d7}
    9828:	add	r9, r9, #1
    982c:	vcvt.u32.f64	s14, d7
    9830:	vstmia	r8!, {s14}
    9834:	b	981c <ReadUInt32Data.part.9+0x288>
    9838:	ldr	r3, [sp, #4]
    983c:	add	r7, sp, #16
    9840:	ldr	r9, [r3, #20]
    9844:	ldr	r3, [r3]
    9848:	cmp	r9, #0
    984c:	beq	995c <ReadUInt32Data.part.9+0x3c8>
    9850:	cmp	r4, #256	; 0x100
    9854:	movgt	r8, #0
    9858:	subgt	r9, r4, #256	; 0x100
    985c:	movgt	r5, r8
    9860:	bgt	98a4 <ReadUInt32Data.part.9+0x310>
    9864:	mov	r1, r0
    9868:	mov	r2, r4
    986c:	mov	r0, r7
    9870:	mov	r8, #0
    9874:	bl	1520 <fread@plt>
    9878:	mov	r5, r0
    987c:	cmp	r4, r8
    9880:	ble	962c <ReadUInt32Data.part.9+0x98>
    9884:	add	r0, r7, r8, lsl #2
    9888:	bl	193c <Mat_floatSwap>
    988c:	vcvt.u32.f32	s0, s0
    9890:	ldr	r3, [sp, #8]
    9894:	vmov	r2, s0
    9898:	str	r2, [r3, r8, lsl #2]
    989c:	add	r8, r8, #1
    98a0:	b	987c <ReadUInt32Data.part.9+0x2e8>
    98a4:	ldr	r3, [sp, #4]
    98a8:	mov	r2, #256	; 0x100
    98ac:	mov	r1, r6
    98b0:	mov	r0, r7
    98b4:	mov	sl, #0
    98b8:	ldr	r3, [r3]
    98bc:	bl	1520 <fread@plt>
    98c0:	ldr	r3, [sp, #8]
    98c4:	add	r5, r5, r0
    98c8:	add	fp, r3, r8, lsl #2
    98cc:	add	r0, r7, sl
    98d0:	add	sl, sl, #4
    98d4:	bl	193c <Mat_floatSwap>
    98d8:	vcvt.u32.f32	s0, s0
    98dc:	cmp	sl, #1024	; 0x400
    98e0:	vstmia	fp!, {s0}
    98e4:	bne	98cc <ReadUInt32Data.part.9+0x338>
    98e8:	add	r8, r8, #256	; 0x100
    98ec:	cmp	r8, r9
    98f0:	blt	98a4 <ReadUInt32Data.part.9+0x310>
    98f4:	sub	r8, r4, #256	; 0x100
    98f8:	sub	r8, r8, #1
    98fc:	lsr	r8, r8, #8
    9900:	add	r8, r8, #1
    9904:	lsl	r3, r8, #8
    9908:	cmp	r4, r3
    990c:	ble	962c <ReadUInt32Data.part.9+0x98>
    9910:	sub	r4, r4, r3
    9914:	ldr	r3, [sp, #4]
    9918:	mov	r1, r6
    991c:	mov	r2, r4
    9920:	mov	r0, r7
    9924:	mov	r9, #0
    9928:	ldr	r3, [r3]
    992c:	bl	1520 <fread@plt>
    9930:	ldr	r3, [sp, #8]
    9934:	add	r5, r5, r0
    9938:	add	r8, r3, r8, lsl #10
    993c:	cmp	r4, r9
    9940:	ble	962c <ReadUInt32Data.part.9+0x98>
    9944:	add	r0, r7, r9, lsl #2
    9948:	add	r9, r9, #1
    994c:	bl	193c <Mat_floatSwap>
    9950:	vcvt.u32.f32	s0, s0
    9954:	vstmia	r8!, {s0}
    9958:	b	993c <ReadUInt32Data.part.9+0x3a8>
    995c:	cmp	r4, #256	; 0x100
    9960:	bgt	999c <ReadUInt32Data.part.9+0x408>
    9964:	mov	r1, r0
    9968:	mov	r2, r4
    996c:	mov	r0, r7
    9970:	bl	1520 <fread@plt>
    9974:	mov	r5, r0
    9978:	cmp	r4, r9
    997c:	ble	962c <ReadUInt32Data.part.9+0x98>
    9980:	vldmia	r7!, {s15}
    9984:	ldr	r3, [sp, #8]
    9988:	vcvt.u32.f32	s15, s15
    998c:	vmov	r2, s15
    9990:	str	r2, [r3, r9, lsl #2]
    9994:	add	r9, r9, #1
    9998:	b	9978 <ReadUInt32Data.part.9+0x3e4>
    999c:	ldr	r3, [sp, #8]
    99a0:	mov	fp, r9
    99a4:	mov	r5, r9
    99a8:	add	r8, r3, #1024	; 0x400
    99ac:	sub	r3, r4, #256	; 0x100
    99b0:	str	r3, [sp, #12]
    99b4:	ldr	r3, [sp, #4]
    99b8:	mov	r2, #256	; 0x100
    99bc:	mov	r1, r6
    99c0:	mov	r0, r7
    99c4:	mov	sl, r7
    99c8:	ldr	r3, [r3]
    99cc:	bl	1520 <fread@plt>
    99d0:	add	r5, r5, r0
    99d4:	sub	r3, r8, #1024	; 0x400
    99d8:	mov	r2, r7
    99dc:	vldmia	r2!, {s15}
    99e0:	vcvt.u32.f32	s15, s15
    99e4:	vstmia	r3!, {s15}
    99e8:	cmp	r3, r8
    99ec:	bne	99dc <ReadUInt32Data.part.9+0x448>
    99f0:	add	r8, r3, #1024	; 0x400
    99f4:	ldr	r3, [sp, #12]
    99f8:	add	fp, fp, #256	; 0x100
    99fc:	cmp	fp, r3
    9a00:	blt	99b4 <ReadUInt32Data.part.9+0x420>
    9a04:	sub	r8, r4, #256	; 0x100
    9a08:	sub	r8, r8, #1
    9a0c:	lsr	r8, r8, #8
    9a10:	add	r8, r8, #1
    9a14:	lsl	r3, r8, #8
    9a18:	cmp	r4, r3
    9a1c:	ble	962c <ReadUInt32Data.part.9+0x98>
    9a20:	sub	r4, r4, r3
    9a24:	ldr	r3, [sp, #4]
    9a28:	mov	r1, r6
    9a2c:	mov	r2, r4
    9a30:	mov	r0, r7
    9a34:	ldr	r3, [r3]
    9a38:	bl	1520 <fread@plt>
    9a3c:	ldr	r3, [sp, #8]
    9a40:	add	r5, r5, r0
    9a44:	add	r8, r3, r8, lsl #10
    9a48:	cmp	r4, r9
    9a4c:	ble	962c <ReadUInt32Data.part.9+0x98>
    9a50:	vldmia	sl!, {s15}
    9a54:	add	r9, r9, #1
    9a58:	vcvt.u32.f32	s15, s15
    9a5c:	vstmia	r8!, {s15}
    9a60:	b	9a48 <ReadUInt32Data.part.9+0x4b4>
    9a64:	ldr	r3, [sp, #4]
    9a68:	add	r8, sp, #16
    9a6c:	ldr	r7, [r3, #20]
    9a70:	ldr	r3, [r3]
    9a74:	cmp	r7, #0
    9a78:	beq	9b78 <ReadUInt32Data.part.9+0x5e4>
    9a7c:	cmp	r4, #256	; 0x100
    9a80:	movgt	r7, #0
    9a84:	subgt	r9, r4, #256	; 0x100
    9a88:	movgt	r5, r7
    9a8c:	bgt	9ac8 <ReadUInt32Data.part.9+0x534>
    9a90:	mov	r1, r0
    9a94:	mov	r2, r4
    9a98:	mov	r0, r8
    9a9c:	mov	r7, #0
    9aa0:	bl	1520 <fread@plt>
    9aa4:	mov	r5, r0
    9aa8:	cmp	r4, r7
    9aac:	ble	962c <ReadUInt32Data.part.9+0x98>
    9ab0:	add	r0, r8, r7, lsl #2
    9ab4:	bl	189c <Mat_int32Swap>
    9ab8:	ldr	r3, [sp, #8]
    9abc:	str	r0, [r3, r7, lsl #2]
    9ac0:	add	r7, r7, #1
    9ac4:	b	9aa8 <ReadUInt32Data.part.9+0x514>
    9ac8:	ldr	r3, [sp, #4]
    9acc:	mov	r2, #256	; 0x100
    9ad0:	mov	r1, r6
    9ad4:	mov	r0, r8
    9ad8:	mov	sl, #0
    9adc:	ldr	r3, [r3]
    9ae0:	bl	1520 <fread@plt>
    9ae4:	ldr	r3, [sp, #8]
    9ae8:	add	r5, r5, r0
    9aec:	add	fp, r3, r7, lsl #2
    9af0:	add	r0, r8, sl
    9af4:	add	sl, sl, #4
    9af8:	bl	189c <Mat_int32Swap>
    9afc:	cmp	sl, #1024	; 0x400
    9b00:	str	r0, [fp], #4
    9b04:	bne	9af0 <ReadUInt32Data.part.9+0x55c>
    9b08:	add	r7, r7, #256	; 0x100
    9b0c:	cmp	r7, r9
    9b10:	blt	9ac8 <ReadUInt32Data.part.9+0x534>
    9b14:	sub	r7, r4, #256	; 0x100
    9b18:	sub	r7, r7, #1
    9b1c:	lsr	r7, r7, #8
    9b20:	add	r7, r7, #1
    9b24:	lsl	r3, r7, #8
    9b28:	cmp	r4, r3
    9b2c:	ble	962c <ReadUInt32Data.part.9+0x98>
    9b30:	sub	r4, r4, r3
    9b34:	ldr	r3, [sp, #4]
    9b38:	mov	r1, r6
    9b3c:	mov	r2, r4
    9b40:	mov	r0, r8
    9b44:	mov	r9, #0
    9b48:	ldr	r3, [r3]
    9b4c:	bl	1520 <fread@plt>
    9b50:	ldr	r3, [sp, #8]
    9b54:	add	r5, r5, r0
    9b58:	add	r7, r3, r7, lsl #10
    9b5c:	cmp	r4, r9
    9b60:	ble	962c <ReadUInt32Data.part.9+0x98>
    9b64:	add	r0, r8, r9, lsl #2
    9b68:	add	r9, r9, #1
    9b6c:	bl	189c <Mat_int32Swap>
    9b70:	str	r0, [r7], #4
    9b74:	b	9b5c <ReadUInt32Data.part.9+0x5c8>
    9b78:	cmp	r4, #256	; 0x100
    9b7c:	bgt	9bb0 <ReadUInt32Data.part.9+0x61c>
    9b80:	mov	r1, r0
    9b84:	mov	r2, r4
    9b88:	mov	r0, r8
    9b8c:	bl	1520 <fread@plt>
    9b90:	mov	r5, r0
    9b94:	cmp	r4, r7
    9b98:	ble	962c <ReadUInt32Data.part.9+0x98>
    9b9c:	ldr	r3, [r8, r7, lsl #2]
    9ba0:	ldr	r2, [sp, #8]
    9ba4:	str	r3, [r2, r7, lsl #2]
    9ba8:	add	r7, r7, #1
    9bac:	b	9b94 <ReadUInt32Data.part.9+0x600>
    9bb0:	ldr	r3, [sp, #8]
    9bb4:	mov	r9, r7
    9bb8:	mov	r5, r7
    9bbc:	sub	fp, r4, #256	; 0x100
    9bc0:	add	sl, r3, #1024	; 0x400
    9bc4:	ldr	r3, [sp, #4]
    9bc8:	mov	r2, #256	; 0x100
    9bcc:	mov	r1, r6
    9bd0:	mov	r0, r8
    9bd4:	ldr	r3, [r3]
    9bd8:	bl	1520 <fread@plt>
    9bdc:	add	r5, r5, r0
    9be0:	mov	r2, r8
    9be4:	sub	r3, sl, #1024	; 0x400
    9be8:	ldr	r1, [r2], #4
    9bec:	str	r1, [r3], #4
    9bf0:	cmp	r3, sl
    9bf4:	bne	9be8 <ReadUInt32Data.part.9+0x654>
    9bf8:	add	r9, r9, #256	; 0x100
    9bfc:	add	sl, r3, #1024	; 0x400
    9c00:	cmp	r9, fp
    9c04:	blt	9bc4 <ReadUInt32Data.part.9+0x630>
    9c08:	sub	r9, r4, #256	; 0x100
    9c0c:	sub	r9, r9, #1
    9c10:	lsr	r9, r9, #8
    9c14:	add	r9, r9, #1
    9c18:	lsl	r3, r9, #8
    9c1c:	cmp	r4, r3
    9c20:	ble	962c <ReadUInt32Data.part.9+0x98>
    9c24:	sub	r4, r4, r3
    9c28:	ldr	r3, [sp, #4]
    9c2c:	mov	r1, r6
    9c30:	mov	r2, r4
    9c34:	mov	r0, r8
    9c38:	ldr	r3, [r3]
    9c3c:	bl	1520 <fread@plt>
    9c40:	ldr	r3, [sp, #8]
    9c44:	add	r5, r5, r0
    9c48:	add	r9, r3, r9, lsl #10
    9c4c:	cmp	r4, r7
    9c50:	ble	962c <ReadUInt32Data.part.9+0x98>
    9c54:	ldr	r3, [r8, r7, lsl #2]
    9c58:	add	r7, r7, #1
    9c5c:	str	r3, [r9], #4
    9c60:	b	9c4c <ReadUInt32Data.part.9+0x6b8>
    9c64:	ldr	r3, [sp, #4]
    9c68:	add	r8, sp, #16
    9c6c:	ldr	r7, [r3, #20]
    9c70:	ldr	r3, [r3]
    9c74:	cmp	r7, #0
    9c78:	beq	9d78 <ReadUInt32Data.part.9+0x7e4>
    9c7c:	cmp	r4, #256	; 0x100
    9c80:	movgt	r7, #0
    9c84:	subgt	r9, r4, #256	; 0x100
    9c88:	movgt	r5, r7
    9c8c:	bgt	9cc8 <ReadUInt32Data.part.9+0x734>
    9c90:	mov	r1, r0
    9c94:	mov	r2, r4
    9c98:	mov	r0, r8
    9c9c:	mov	r7, #0
    9ca0:	bl	1520 <fread@plt>
    9ca4:	mov	r5, r0
    9ca8:	cmp	r4, r7
    9cac:	ble	962c <ReadUInt32Data.part.9+0x98>
    9cb0:	add	r0, r8, r7, lsl #2
    9cb4:	bl	18cc <Mat_uint32Swap>
    9cb8:	ldr	r3, [sp, #8]
    9cbc:	str	r0, [r3, r7, lsl #2]
    9cc0:	add	r7, r7, #1
    9cc4:	b	9ca8 <ReadUInt32Data.part.9+0x714>
    9cc8:	ldr	r3, [sp, #4]
    9ccc:	mov	r2, #256	; 0x100
    9cd0:	mov	r1, r6
    9cd4:	mov	r0, r8
    9cd8:	mov	sl, #0
    9cdc:	ldr	r3, [r3]
    9ce0:	bl	1520 <fread@plt>
    9ce4:	ldr	r3, [sp, #8]
    9ce8:	add	r5, r5, r0
    9cec:	add	fp, r3, r7, lsl #2
    9cf0:	add	r0, r8, sl
    9cf4:	add	sl, sl, #4
    9cf8:	bl	18cc <Mat_uint32Swap>
    9cfc:	cmp	sl, #1024	; 0x400
    9d00:	str	r0, [fp], #4
    9d04:	bne	9cf0 <ReadUInt32Data.part.9+0x75c>
    9d08:	add	r7, r7, #256	; 0x100
    9d0c:	cmp	r7, r9
    9d10:	blt	9cc8 <ReadUInt32Data.part.9+0x734>
    9d14:	sub	r7, r4, #256	; 0x100
    9d18:	sub	r7, r7, #1
    9d1c:	lsr	r7, r7, #8
    9d20:	add	r7, r7, #1
    9d24:	lsl	r3, r7, #8
    9d28:	cmp	r4, r3
    9d2c:	ble	962c <ReadUInt32Data.part.9+0x98>
    9d30:	sub	r4, r4, r3
    9d34:	ldr	r3, [sp, #4]
    9d38:	mov	r1, r6
    9d3c:	mov	r2, r4
    9d40:	mov	r0, r8
    9d44:	mov	r9, #0
    9d48:	ldr	r3, [r3]
    9d4c:	bl	1520 <fread@plt>
    9d50:	ldr	r3, [sp, #8]
    9d54:	add	r5, r5, r0
    9d58:	add	r7, r3, r7, lsl #10
    9d5c:	cmp	r4, r9
    9d60:	ble	962c <ReadUInt32Data.part.9+0x98>
    9d64:	add	r0, r8, r9, lsl #2
    9d68:	add	r9, r9, #1
    9d6c:	bl	18cc <Mat_uint32Swap>
    9d70:	str	r0, [r7], #4
    9d74:	b	9d5c <ReadUInt32Data.part.9+0x7c8>
    9d78:	cmp	r4, #256	; 0x100
    9d7c:	bgt	9db0 <ReadUInt32Data.part.9+0x81c>
    9d80:	mov	r1, r0
    9d84:	mov	r2, r4
    9d88:	mov	r0, r8
    9d8c:	bl	1520 <fread@plt>
    9d90:	mov	r5, r0
    9d94:	cmp	r4, r7
    9d98:	ble	962c <ReadUInt32Data.part.9+0x98>
    9d9c:	ldr	r3, [r8, r7, lsl #2]
    9da0:	ldr	r2, [sp, #8]
    9da4:	str	r3, [r2, r7, lsl #2]
    9da8:	add	r7, r7, #1
    9dac:	b	9d94 <ReadUInt32Data.part.9+0x800>
    9db0:	ldr	r3, [sp, #8]
    9db4:	mov	r9, r7
    9db8:	mov	r5, r7
    9dbc:	sub	fp, r4, #256	; 0x100
    9dc0:	add	sl, r3, #1024	; 0x400
    9dc4:	ldr	r3, [sp, #4]
    9dc8:	mov	r2, #256	; 0x100
    9dcc:	mov	r1, r6
    9dd0:	mov	r0, r8
    9dd4:	ldr	r3, [r3]
    9dd8:	bl	1520 <fread@plt>
    9ddc:	add	r5, r5, r0
    9de0:	mov	r2, r8
    9de4:	sub	r3, sl, #1024	; 0x400
    9de8:	ldr	r1, [r2], #4
    9dec:	str	r1, [r3], #4
    9df0:	cmp	r3, sl
    9df4:	bne	9de8 <ReadUInt32Data.part.9+0x854>
    9df8:	add	r9, r9, #256	; 0x100
    9dfc:	add	sl, r3, #1024	; 0x400
    9e00:	cmp	r9, fp
    9e04:	blt	9dc4 <ReadUInt32Data.part.9+0x830>
    9e08:	sub	r9, r4, #256	; 0x100
    9e0c:	sub	r9, r9, #1
    9e10:	lsr	r9, r9, #8
    9e14:	add	r9, r9, #1
    9e18:	lsl	r3, r9, #8
    9e1c:	cmp	r4, r3
    9e20:	ble	962c <ReadUInt32Data.part.9+0x98>
    9e24:	sub	r4, r4, r3
    9e28:	ldr	r3, [sp, #4]
    9e2c:	mov	r1, r6
    9e30:	mov	r2, r4
    9e34:	mov	r0, r8
    9e38:	ldr	r3, [r3]
    9e3c:	bl	1520 <fread@plt>
    9e40:	ldr	r3, [sp, #8]
    9e44:	add	r5, r5, r0
    9e48:	add	r9, r3, r9, lsl #10
    9e4c:	cmp	r4, r7
    9e50:	ble	962c <ReadUInt32Data.part.9+0x98>
    9e54:	ldr	r3, [r8, r7, lsl #2]
    9e58:	add	r7, r7, #1
    9e5c:	str	r3, [r9], #4
    9e60:	b	9e4c <ReadUInt32Data.part.9+0x8b8>
    9e64:	ldr	r3, [sp, #4]
    9e68:	add	r7, sp, #16
    9e6c:	ldr	r9, [r3, #20]
    9e70:	ldr	r3, [r3]
    9e74:	cmp	r9, #0
    9e78:	beq	9f88 <ReadUInt32Data.part.9+0x9f4>
    9e7c:	cmp	r4, #256	; 0x100
    9e80:	bgt	9ebc <ReadUInt32Data.part.9+0x928>
    9e84:	mov	r1, r0
    9e88:	mov	r2, r4
    9e8c:	mov	r0, r7
    9e90:	mov	r8, #0
    9e94:	bl	1520 <fread@plt>
    9e98:	mov	r5, r0
    9e9c:	cmp	r4, r8
    9ea0:	ble	962c <ReadUInt32Data.part.9+0x98>
    9ea4:	add	r0, r7, r8, lsl #1
    9ea8:	bl	18fc <Mat_int16Swap>
    9eac:	ldr	r3, [sp, #8]
    9eb0:	str	r0, [r3, r8, lsl #2]
    9eb4:	add	r8, r8, #1
    9eb8:	b	9e9c <ReadUInt32Data.part.9+0x908>
    9ebc:	ldr	r3, [sp, #8]
    9ec0:	mov	r8, #0
    9ec4:	sub	sl, r4, #256	; 0x100
    9ec8:	mov	r5, r8
    9ecc:	add	r9, r3, #1024	; 0x400
    9ed0:	ldr	r3, [sp, #4]
    9ed4:	mov	r2, #256	; 0x100
    9ed8:	mov	r1, r6
    9edc:	mov	r0, r7
    9ee0:	sub	fp, r9, #1024	; 0x400
    9ee4:	ldr	r3, [r3]
    9ee8:	bl	1520 <fread@plt>
    9eec:	add	r5, r5, r0
    9ef0:	mov	r3, r7
    9ef4:	mov	r0, r3
    9ef8:	str	r3, [sp, #12]
    9efc:	bl	18fc <Mat_int16Swap>
    9f00:	ldr	r3, [sp, #12]
    9f04:	str	r0, [fp], #4
    9f08:	cmp	fp, r9
    9f0c:	add	r3, r3, #2
    9f10:	bne	9ef4 <ReadUInt32Data.part.9+0x960>
    9f14:	add	r8, r8, #256	; 0x100
    9f18:	add	r9, fp, #1024	; 0x400
    9f1c:	cmp	r8, sl
    9f20:	blt	9ed0 <ReadUInt32Data.part.9+0x93c>
    9f24:	sub	r8, r4, #256	; 0x100
    9f28:	sub	r8, r8, #1
    9f2c:	lsr	r8, r8, #8
    9f30:	add	r8, r8, #1
    9f34:	lsl	r3, r8, #8
    9f38:	cmp	r4, r3
    9f3c:	ble	962c <ReadUInt32Data.part.9+0x98>
    9f40:	sub	r4, r4, r3
    9f44:	ldr	r3, [sp, #4]
    9f48:	mov	r1, r6
    9f4c:	mov	r2, r4
    9f50:	mov	r0, r7
    9f54:	mov	r9, #0
    9f58:	ldr	r3, [r3]
    9f5c:	bl	1520 <fread@plt>
    9f60:	ldr	r3, [sp, #8]
    9f64:	add	r5, r5, r0
    9f68:	add	r8, r3, r8, lsl #10
    9f6c:	cmp	r4, r9
    9f70:	ble	962c <ReadUInt32Data.part.9+0x98>
    9f74:	add	r0, r7, r9, lsl #1
    9f78:	add	r9, r9, #1
    9f7c:	bl	18fc <Mat_int16Swap>
    9f80:	str	r0, [r8], #4
    9f84:	b	9f6c <ReadUInt32Data.part.9+0x9d8>
    9f88:	cmp	r4, #256	; 0x100
    9f8c:	bgt	9fc0 <ReadUInt32Data.part.9+0xa2c>
    9f90:	mov	r1, r0
    9f94:	mov	r2, r4
    9f98:	mov	r0, r7
    9f9c:	bl	1520 <fread@plt>
    9fa0:	mov	r5, r0
    9fa4:	cmp	r4, r9
    9fa8:	ble	962c <ReadUInt32Data.part.9+0x98>
    9fac:	ldrsh	r3, [r7], #2
    9fb0:	ldr	r2, [sp, #8]
    9fb4:	str	r3, [r2, r9, lsl #2]
    9fb8:	add	r9, r9, #1
    9fbc:	b	9fa4 <ReadUInt32Data.part.9+0xa10>
    9fc0:	ldr	r3, [sp, #8]
    9fc4:	mov	fp, r9
    9fc8:	mov	r5, r9
    9fcc:	add	r8, r3, #1024	; 0x400
    9fd0:	sub	r3, r4, #256	; 0x100
    9fd4:	str	r3, [sp, #12]
    9fd8:	ldr	r3, [sp, #4]
    9fdc:	mov	r2, #256	; 0x100
    9fe0:	mov	r1, r6
    9fe4:	mov	r0, r7
    9fe8:	mov	sl, r7
    9fec:	ldr	r3, [r3]
    9ff0:	bl	1520 <fread@plt>
    9ff4:	add	r5, r5, r0
    9ff8:	sub	r3, r8, #1024	; 0x400
    9ffc:	mov	r2, r7
    a000:	ldrsh	r1, [r2], #2
    a004:	str	r1, [r3], #4
    a008:	cmp	r3, r8
    a00c:	bne	a000 <ReadUInt32Data.part.9+0xa6c>
    a010:	add	r8, r3, #1024	; 0x400
    a014:	ldr	r3, [sp, #12]
    a018:	add	fp, fp, #256	; 0x100
    a01c:	cmp	fp, r3
    a020:	blt	9fd8 <ReadUInt32Data.part.9+0xa44>
    a024:	sub	r8, r4, #256	; 0x100
    a028:	sub	r8, r8, #1
    a02c:	lsr	r8, r8, #8
    a030:	add	r8, r8, #1
    a034:	lsl	r3, r8, #8
    a038:	cmp	r4, r3
    a03c:	ble	962c <ReadUInt32Data.part.9+0x98>
    a040:	sub	r4, r4, r3
    a044:	ldr	r3, [sp, #4]
    a048:	mov	r1, r6
    a04c:	mov	r2, r4
    a050:	mov	r0, r7
    a054:	ldr	r3, [r3]
    a058:	bl	1520 <fread@plt>
    a05c:	ldr	r3, [sp, #8]
    a060:	add	r5, r5, r0
    a064:	add	r8, r3, r8, lsl #10
    a068:	cmp	r4, r9
    a06c:	ble	962c <ReadUInt32Data.part.9+0x98>
    a070:	ldrsh	r3, [sl], #2
    a074:	add	r9, r9, #1
    a078:	str	r3, [r8], #4
    a07c:	b	a068 <ReadUInt32Data.part.9+0xad4>
    a080:	ldr	r3, [sp, #4]
    a084:	add	r7, sp, #16
    a088:	ldr	r9, [r3, #20]
    a08c:	ldr	r3, [r3]
    a090:	cmp	r9, #0
    a094:	beq	a1a4 <ReadUInt32Data.part.9+0xc10>
    a098:	cmp	r4, #256	; 0x100
    a09c:	bgt	a0d8 <ReadUInt32Data.part.9+0xb44>
    a0a0:	mov	r1, r0
    a0a4:	mov	r2, r4
    a0a8:	mov	r0, r7
    a0ac:	mov	r8, #0
    a0b0:	bl	1520 <fread@plt>
    a0b4:	mov	r5, r0
    a0b8:	cmp	r4, r8
    a0bc:	ble	962c <ReadUInt32Data.part.9+0x98>
    a0c0:	add	r0, r7, r8, lsl #1
    a0c4:	bl	191c <Mat_uint16Swap>
    a0c8:	ldr	r3, [sp, #8]
    a0cc:	str	r0, [r3, r8, lsl #2]
    a0d0:	add	r8, r8, #1
    a0d4:	b	a0b8 <ReadUInt32Data.part.9+0xb24>
    a0d8:	ldr	r3, [sp, #8]
    a0dc:	mov	r8, #0
    a0e0:	sub	sl, r4, #256	; 0x100
    a0e4:	mov	r5, r8
    a0e8:	add	r9, r3, #1024	; 0x400
    a0ec:	ldr	r3, [sp, #4]
    a0f0:	mov	r2, #256	; 0x100
    a0f4:	mov	r1, r6
    a0f8:	mov	r0, r7
    a0fc:	sub	fp, r9, #1024	; 0x400
    a100:	ldr	r3, [r3]
    a104:	bl	1520 <fread@plt>
    a108:	add	r5, r5, r0
    a10c:	mov	r3, r7
    a110:	mov	r0, r3
    a114:	str	r3, [sp, #12]
    a118:	bl	191c <Mat_uint16Swap>
    a11c:	ldr	r3, [sp, #12]
    a120:	str	r0, [fp], #4
    a124:	cmp	fp, r9
    a128:	add	r3, r3, #2
    a12c:	bne	a110 <ReadUInt32Data.part.9+0xb7c>
    a130:	add	r8, r8, #256	; 0x100
    a134:	add	r9, fp, #1024	; 0x400
    a138:	cmp	r8, sl
    a13c:	blt	a0ec <ReadUInt32Data.part.9+0xb58>
    a140:	sub	r8, r4, #256	; 0x100
    a144:	sub	r8, r8, #1
    a148:	lsr	r8, r8, #8
    a14c:	add	r8, r8, #1
    a150:	lsl	r3, r8, #8
    a154:	cmp	r4, r3
    a158:	ble	962c <ReadUInt32Data.part.9+0x98>
    a15c:	sub	r4, r4, r3
    a160:	ldr	r3, [sp, #4]
    a164:	mov	r1, r6
    a168:	mov	r2, r4
    a16c:	mov	r0, r7
    a170:	mov	r9, #0
    a174:	ldr	r3, [r3]
    a178:	bl	1520 <fread@plt>
    a17c:	ldr	r3, [sp, #8]
    a180:	add	r5, r5, r0
    a184:	add	r8, r3, r8, lsl #10
    a188:	cmp	r4, r9
    a18c:	ble	962c <ReadUInt32Data.part.9+0x98>
    a190:	add	r0, r7, r9, lsl #1
    a194:	add	r9, r9, #1
    a198:	bl	191c <Mat_uint16Swap>
    a19c:	str	r0, [r8], #4
    a1a0:	b	a188 <ReadUInt32Data.part.9+0xbf4>
    a1a4:	cmp	r4, #256	; 0x100
    a1a8:	bgt	a1dc <ReadUInt32Data.part.9+0xc48>
    a1ac:	mov	r1, r0
    a1b0:	mov	r2, r4
    a1b4:	mov	r0, r7
    a1b8:	bl	1520 <fread@plt>
    a1bc:	mov	r5, r0
    a1c0:	cmp	r4, r9
    a1c4:	ble	962c <ReadUInt32Data.part.9+0x98>
    a1c8:	ldrh	r3, [r7], #2
    a1cc:	ldr	r2, [sp, #8]
    a1d0:	str	r3, [r2, r9, lsl #2]
    a1d4:	add	r9, r9, #1
    a1d8:	b	a1c0 <ReadUInt32Data.part.9+0xc2c>
    a1dc:	ldr	r3, [sp, #8]
    a1e0:	mov	fp, r9
    a1e4:	mov	r5, r9
    a1e8:	add	r8, r3, #1024	; 0x400
    a1ec:	sub	r3, r4, #256	; 0x100
    a1f0:	str	r3, [sp, #12]
    a1f4:	ldr	r3, [sp, #4]
    a1f8:	mov	r2, #256	; 0x100
    a1fc:	mov	r1, r6
    a200:	mov	r0, r7
    a204:	mov	sl, r7
    a208:	ldr	r3, [r3]
    a20c:	bl	1520 <fread@plt>
    a210:	add	r5, r5, r0
    a214:	sub	r3, r8, #1024	; 0x400
    a218:	mov	r2, r7
    a21c:	ldrh	r1, [r2], #2
    a220:	str	r1, [r3], #4
    a224:	cmp	r3, r8
    a228:	bne	a21c <ReadUInt32Data.part.9+0xc88>
    a22c:	add	r8, r3, #1024	; 0x400
    a230:	ldr	r3, [sp, #12]
    a234:	add	fp, fp, #256	; 0x100
    a238:	cmp	fp, r3
    a23c:	blt	a1f4 <ReadUInt32Data.part.9+0xc60>
    a240:	sub	r8, r4, #256	; 0x100
    a244:	sub	r8, r8, #1
    a248:	lsr	r8, r8, #8
    a24c:	add	r8, r8, #1
    a250:	lsl	r3, r8, #8
    a254:	cmp	r4, r3
    a258:	ble	962c <ReadUInt32Data.part.9+0x98>
    a25c:	sub	r4, r4, r3
    a260:	ldr	r3, [sp, #4]
    a264:	mov	r1, r6
    a268:	mov	r2, r4
    a26c:	mov	r0, r7
    a270:	ldr	r3, [r3]
    a274:	bl	1520 <fread@plt>
    a278:	ldr	r3, [sp, #8]
    a27c:	add	r5, r5, r0
    a280:	add	r8, r3, r8, lsl #10
    a284:	cmp	r4, r9
    a288:	ble	962c <ReadUInt32Data.part.9+0x98>
    a28c:	ldrh	r3, [sl], #2
    a290:	add	r9, r9, #1
    a294:	str	r3, [r8], #4
    a298:	b	a284 <ReadUInt32Data.part.9+0xcf0>
    a29c:	cmp	r4, #256	; 0x100
    a2a0:	add	r7, sp, #16
    a2a4:	bgt	a2e4 <ReadUInt32Data.part.9+0xd50>
    a2a8:	ldr	r3, [sp, #4]
    a2ac:	mov	r1, r0
    a2b0:	mov	r2, r4
    a2b4:	mov	r0, r7
    a2b8:	ldr	r3, [r3]
    a2bc:	bl	1520 <fread@plt>
    a2c0:	mov	r5, r0
    a2c4:	mov	r3, #0
    a2c8:	cmp	r4, r3
    a2cc:	ble	962c <ReadUInt32Data.part.9+0x98>
    a2d0:	ldrsb	r2, [r7, r3]
    a2d4:	ldr	r1, [sp, #8]
    a2d8:	str	r2, [r1, r3, lsl #2]
    a2dc:	add	r3, r3, #1
    a2e0:	b	a2c8 <ReadUInt32Data.part.9+0xd34>
    a2e4:	ldr	r3, [sp, #8]
    a2e8:	mov	r8, #0
    a2ec:	sub	sl, r4, #256	; 0x100
    a2f0:	mov	r5, r8
    a2f4:	add	r9, r3, #1024	; 0x400
    a2f8:	ldr	r3, [sp, #4]
    a2fc:	mov	r2, #256	; 0x100
    a300:	mov	r1, r6
    a304:	mov	r0, r7
    a308:	ldr	r3, [r3]
    a30c:	bl	1520 <fread@plt>
    a310:	add	r5, r5, r0
    a314:	mov	r2, r7
    a318:	sub	r3, r9, #1024	; 0x400
    a31c:	ldrsb	r1, [r2], #1
    a320:	str	r1, [r3], #4
    a324:	cmp	r3, r9
    a328:	bne	a31c <ReadUInt32Data.part.9+0xd88>
    a32c:	add	r8, r8, #256	; 0x100
    a330:	add	r9, r3, #1024	; 0x400
    a334:	cmp	r8, sl
    a338:	blt	a2f8 <ReadUInt32Data.part.9+0xd64>
    a33c:	sub	r3, r4, #256	; 0x100
    a340:	sub	r3, r3, #1
    a344:	lsr	r3, r3, #8
    a348:	add	r8, r3, #1
    a34c:	lsl	r3, r8, #8
    a350:	cmp	r4, r3
    a354:	ble	962c <ReadUInt32Data.part.9+0x98>
    a358:	sub	r4, r4, r3
    a35c:	ldr	r3, [sp, #4]
    a360:	mov	r1, r6
    a364:	mov	r2, r4
    a368:	mov	r0, r7
    a36c:	ldr	r3, [r3]
    a370:	bl	1520 <fread@plt>
    a374:	ldr	r3, [sp, #8]
    a378:	add	r5, r5, r0
    a37c:	mov	r2, #0
    a380:	add	r3, r3, r8, lsl #10
    a384:	cmp	r4, r2
    a388:	ble	962c <ReadUInt32Data.part.9+0x98>
    a38c:	ldrsb	r1, [r7, r2]
    a390:	add	r2, r2, #1
    a394:	str	r1, [r3], #4
    a398:	b	a384 <ReadUInt32Data.part.9+0xdf0>
    a39c:	cmp	r4, #256	; 0x100
    a3a0:	add	r7, sp, #16
    a3a4:	bgt	a3e4 <ReadUInt32Data.part.9+0xe50>
    a3a8:	ldr	r3, [sp, #4]
    a3ac:	mov	r1, r0
    a3b0:	mov	r2, r4
    a3b4:	mov	r0, r7
    a3b8:	ldr	r3, [r3]
    a3bc:	bl	1520 <fread@plt>
    a3c0:	mov	r5, r0
    a3c4:	mov	r3, #0
    a3c8:	cmp	r4, r3
    a3cc:	ble	962c <ReadUInt32Data.part.9+0x98>
    a3d0:	ldrb	r2, [r7, r3]
    a3d4:	ldr	r1, [sp, #8]
    a3d8:	str	r2, [r1, r3, lsl #2]
    a3dc:	add	r3, r3, #1
    a3e0:	b	a3c8 <ReadUInt32Data.part.9+0xe34>
    a3e4:	ldr	r3, [sp, #8]
    a3e8:	mov	r8, #0
    a3ec:	sub	sl, r4, #256	; 0x100
    a3f0:	mov	r5, r8
    a3f4:	add	r9, r3, #1024	; 0x400
    a3f8:	ldr	r3, [sp, #4]
    a3fc:	mov	r2, #256	; 0x100
    a400:	mov	r1, r6
    a404:	mov	r0, r7
    a408:	ldr	r3, [r3]
    a40c:	bl	1520 <fread@plt>
    a410:	add	r5, r5, r0
    a414:	mov	r2, r7
    a418:	sub	r3, r9, #1024	; 0x400
    a41c:	ldrb	r1, [r2], #1
    a420:	str	r1, [r3], #4
    a424:	cmp	r3, r9
    a428:	bne	a41c <ReadUInt32Data.part.9+0xe88>
    a42c:	add	r8, r8, #256	; 0x100
    a430:	add	r9, r3, #1024	; 0x400
    a434:	cmp	r8, sl
    a438:	blt	a3f8 <ReadUInt32Data.part.9+0xe64>
    a43c:	sub	r3, r4, #256	; 0x100
    a440:	sub	r3, r3, #1
    a444:	lsr	r3, r3, #8
    a448:	add	r8, r3, #1
    a44c:	lsl	r3, r8, #8
    a450:	cmp	r4, r3
    a454:	ble	962c <ReadUInt32Data.part.9+0x98>
    a458:	sub	r4, r4, r3
    a45c:	ldr	r3, [sp, #4]
    a460:	mov	r1, r6
    a464:	mov	r2, r4
    a468:	mov	r0, r7
    a46c:	ldr	r3, [r3]
    a470:	bl	1520 <fread@plt>
    a474:	ldr	r3, [sp, #8]
    a478:	add	r5, r5, r0
    a47c:	mov	r2, #0
    a480:	add	r3, r3, r8, lsl #10
    a484:	cmp	r4, r2
    a488:	ble	962c <ReadUInt32Data.part.9+0x98>
    a48c:	ldrb	r1, [r7, r2]
    a490:	add	r2, r2, #1
    a494:	str	r1, [r3], #4
    a498:	b	a484 <ReadUInt32Data.part.9+0xef0>
    a49c:	cmp	r5, #12
    a4a0:	bne	a6c0 <ReadUInt32Data.part.9+0x112c>
    a4a4:	ldr	r3, [sp, #4]
    a4a8:	add	r7, sp, #16
    a4ac:	ldr	r9, [r3, #20]
    a4b0:	ldr	r3, [r3]
    a4b4:	cmp	r9, #0
    a4b8:	beq	a5c8 <ReadUInt32Data.part.9+0x1034>
    a4bc:	cmp	r4, #256	; 0x100
    a4c0:	bgt	a4fc <ReadUInt32Data.part.9+0xf68>
    a4c4:	mov	r1, r0
    a4c8:	mov	r2, r4
    a4cc:	mov	r0, r7
    a4d0:	mov	r8, #0
    a4d4:	bl	1520 <fread@plt>
    a4d8:	mov	r5, r0
    a4dc:	cmp	r4, r8
    a4e0:	ble	962c <ReadUInt32Data.part.9+0x98>
    a4e4:	add	r0, r7, r8, lsl #3
    a4e8:	bl	17ec <Mat_int64Swap>
    a4ec:	ldr	r3, [sp, #8]
    a4f0:	str	r0, [r3, r8, lsl #2]
    a4f4:	add	r8, r8, #1
    a4f8:	b	a4dc <ReadUInt32Data.part.9+0xf48>
    a4fc:	ldr	r3, [sp, #8]
    a500:	mov	r8, #0
    a504:	sub	sl, r4, #256	; 0x100
    a508:	mov	r5, r8
    a50c:	add	r9, r3, #1024	; 0x400
    a510:	ldr	r3, [sp, #4]
    a514:	mov	r2, #256	; 0x100
    a518:	mov	r1, r6
    a51c:	mov	r0, r7
    a520:	sub	fp, r9, #1024	; 0x400
    a524:	ldr	r3, [r3]
    a528:	bl	1520 <fread@plt>
    a52c:	add	r5, r5, r0
    a530:	mov	r3, r7
    a534:	mov	r0, r3
    a538:	str	r3, [sp, #12]
    a53c:	bl	17ec <Mat_int64Swap>
    a540:	ldr	r3, [sp, #12]
    a544:	str	r0, [fp], #4
    a548:	cmp	r9, fp
    a54c:	add	r3, r3, #8
    a550:	bne	a534 <ReadUInt32Data.part.9+0xfa0>
    a554:	add	r8, r8, #256	; 0x100
    a558:	add	r9, r9, #1024	; 0x400
    a55c:	cmp	r8, sl
    a560:	blt	a510 <ReadUInt32Data.part.9+0xf7c>
    a564:	sub	r8, r4, #256	; 0x100
    a568:	sub	r8, r8, #1
    a56c:	lsr	r8, r8, #8
    a570:	add	r8, r8, #1
    a574:	lsl	r3, r8, #8
    a578:	cmp	r4, r3
    a57c:	ble	962c <ReadUInt32Data.part.9+0x98>
    a580:	sub	r4, r4, r3
    a584:	ldr	r3, [sp, #4]
    a588:	mov	r1, r6
    a58c:	mov	r2, r4
    a590:	mov	r0, r7
    a594:	mov	r9, #0
    a598:	ldr	r3, [r3]
    a59c:	bl	1520 <fread@plt>
    a5a0:	ldr	r3, [sp, #8]
    a5a4:	add	r5, r5, r0
    a5a8:	add	r8, r3, r8, lsl #10
    a5ac:	cmp	r4, r9
    a5b0:	ble	962c <ReadUInt32Data.part.9+0x98>
    a5b4:	add	r0, r7, r9, lsl #3
    a5b8:	add	r9, r9, #1
    a5bc:	bl	17ec <Mat_int64Swap>
    a5c0:	str	r0, [r8], #4
    a5c4:	b	a5ac <ReadUInt32Data.part.9+0x1018>
    a5c8:	cmp	r4, #256	; 0x100
    a5cc:	bgt	a600 <ReadUInt32Data.part.9+0x106c>
    a5d0:	mov	r1, r0
    a5d4:	mov	r2, r4
    a5d8:	mov	r0, r7
    a5dc:	bl	1520 <fread@plt>
    a5e0:	mov	r5, r0
    a5e4:	cmp	r4, r9
    a5e8:	ble	962c <ReadUInt32Data.part.9+0x98>
    a5ec:	ldr	r3, [r7], #8
    a5f0:	ldr	r2, [sp, #8]
    a5f4:	str	r3, [r2, r9, lsl #2]
    a5f8:	add	r9, r9, #1
    a5fc:	b	a5e4 <ReadUInt32Data.part.9+0x1050>
    a600:	ldr	r3, [sp, #8]
    a604:	mov	fp, r9
    a608:	mov	r5, r9
    a60c:	add	r8, r3, #1024	; 0x400
    a610:	sub	r3, r4, #256	; 0x100
    a614:	str	r3, [sp, #12]
    a618:	ldr	r3, [sp, #4]
    a61c:	mov	r2, #256	; 0x100
    a620:	mov	r1, r6
    a624:	mov	r0, r7
    a628:	mov	sl, r7
    a62c:	ldr	r3, [r3]
    a630:	bl	1520 <fread@plt>
    a634:	add	r5, r5, r0
    a638:	sub	r3, r8, #1024	; 0x400
    a63c:	mov	r2, r7
    a640:	ldr	r1, [r2], #8
    a644:	str	r1, [r3], #4
    a648:	cmp	r3, r8
    a64c:	bne	a640 <ReadUInt32Data.part.9+0x10ac>
    a650:	add	r8, r3, #1024	; 0x400
    a654:	ldr	r3, [sp, #12]
    a658:	add	fp, fp, #256	; 0x100
    a65c:	cmp	fp, r3
    a660:	blt	a618 <ReadUInt32Data.part.9+0x1084>
    a664:	sub	r8, r4, #256	; 0x100
    a668:	sub	r8, r8, #1
    a66c:	lsr	r8, r8, #8
    a670:	add	r8, r8, #1
    a674:	lsl	r3, r8, #8
    a678:	cmp	r4, r3
    a67c:	ble	962c <ReadUInt32Data.part.9+0x98>
    a680:	sub	r4, r4, r3
    a684:	ldr	r3, [sp, #4]
    a688:	mov	r1, r6
    a68c:	mov	r2, r4
    a690:	mov	r0, r7
    a694:	ldr	r3, [r3]
    a698:	bl	1520 <fread@plt>
    a69c:	ldr	r3, [sp, #8]
    a6a0:	add	r5, r5, r0
    a6a4:	add	r8, r3, r8, lsl #10
    a6a8:	cmp	r4, r9
    a6ac:	ble	962c <ReadUInt32Data.part.9+0x98>
    a6b0:	ldr	r3, [sl], #8
    a6b4:	add	r9, r9, #1
    a6b8:	str	r3, [r8], #4
    a6bc:	b	a6a8 <ReadUInt32Data.part.9+0x1114>
    a6c0:	cmp	r5, #13
    a6c4:	movne	r5, #0
    a6c8:	bne	962c <ReadUInt32Data.part.9+0x98>
    a6cc:	ldr	r3, [sp, #4]
    a6d0:	add	r7, sp, #16
    a6d4:	ldr	r8, [r3, #20]
    a6d8:	ldr	r3, [r3]
    a6dc:	cmp	r8, #0
    a6e0:	beq	a7f0 <ReadUInt32Data.part.9+0x125c>
    a6e4:	cmp	r4, #256	; 0x100
    a6e8:	bgt	a724 <ReadUInt32Data.part.9+0x1190>
    a6ec:	mov	r1, r0
    a6f0:	mov	r2, r4
    a6f4:	mov	r0, r7
    a6f8:	mov	r8, #0
    a6fc:	bl	1520 <fread@plt>
    a700:	mov	r5, r0
    a704:	cmp	r4, r8
    a708:	ble	962c <ReadUInt32Data.part.9+0x98>
    a70c:	add	r0, r7, r8, lsl #3
    a710:	bl	1844 <Mat_uint64Swap>
    a714:	ldr	r3, [sp, #8]
    a718:	str	r0, [r3, r8, lsl #2]
    a71c:	add	r8, r8, #1
    a720:	b	a704 <ReadUInt32Data.part.9+0x1170>
    a724:	ldr	r3, [sp, #8]
    a728:	mov	r8, #0
    a72c:	sub	sl, r4, #256	; 0x100
    a730:	mov	r5, r8
    a734:	add	r9, r3, #1024	; 0x400
    a738:	ldr	r3, [sp, #4]
    a73c:	mov	r2, #256	; 0x100
    a740:	mov	r1, r6
    a744:	mov	r0, r7
    a748:	sub	fp, r9, #1024	; 0x400
    a74c:	ldr	r3, [r3]
    a750:	bl	1520 <fread@plt>
    a754:	add	r5, r5, r0
    a758:	mov	r3, r7
    a75c:	mov	r0, r3
    a760:	str	r3, [sp, #12]
    a764:	bl	1844 <Mat_uint64Swap>
    a768:	ldr	r3, [sp, #12]
    a76c:	str	r0, [fp], #4
    a770:	cmp	r9, fp
    a774:	add	r3, r3, #8
    a778:	bne	a75c <ReadUInt32Data.part.9+0x11c8>
    a77c:	add	r8, r8, #256	; 0x100
    a780:	add	r9, r9, #1024	; 0x400
    a784:	cmp	r8, sl
    a788:	blt	a738 <ReadUInt32Data.part.9+0x11a4>
    a78c:	sub	r8, r4, #256	; 0x100
    a790:	sub	r8, r8, #1
    a794:	lsr	r8, r8, #8
    a798:	add	r8, r8, #1
    a79c:	lsl	r3, r8, #8
    a7a0:	cmp	r4, r3
    a7a4:	ble	962c <ReadUInt32Data.part.9+0x98>
    a7a8:	sub	r4, r4, r3
    a7ac:	ldr	r3, [sp, #4]
    a7b0:	mov	r1, r6
    a7b4:	mov	r2, r4
    a7b8:	mov	r0, r7
    a7bc:	mov	r9, #0
    a7c0:	ldr	r3, [r3]
    a7c4:	bl	1520 <fread@plt>
    a7c8:	ldr	r3, [sp, #8]
    a7cc:	add	r5, r5, r0
    a7d0:	add	r8, r3, r8, lsl #10
    a7d4:	cmp	r4, r9
    a7d8:	ble	962c <ReadUInt32Data.part.9+0x98>
    a7dc:	add	r0, r7, r9, lsl #3
    a7e0:	add	r9, r9, #1
    a7e4:	bl	1844 <Mat_uint64Swap>
    a7e8:	str	r0, [r8], #4
    a7ec:	b	a7d4 <ReadUInt32Data.part.9+0x1240>
    a7f0:	cmp	r4, #256	; 0x100
    a7f4:	bgt	a828 <ReadUInt32Data.part.9+0x1294>
    a7f8:	mov	r1, r0
    a7fc:	mov	r2, r4
    a800:	mov	r0, r7
    a804:	bl	1520 <fread@plt>
    a808:	mov	r5, r0
    a80c:	cmp	r4, r8
    a810:	ble	962c <ReadUInt32Data.part.9+0x98>
    a814:	ldr	r3, [r7], #8
    a818:	ldr	r2, [sp, #8]
    a81c:	str	r3, [r2, r8, lsl #2]
    a820:	add	r8, r8, #1
    a824:	b	a80c <ReadUInt32Data.part.9+0x1278>
    a828:	ldr	r3, [sp, #8]
    a82c:	mov	fp, r8
    a830:	mov	r5, r8
    a834:	add	r9, r3, #1024	; 0x400
    a838:	sub	r3, r4, #256	; 0x100
    a83c:	str	r3, [sp, #12]
    a840:	ldr	r3, [sp, #4]
    a844:	mov	r2, #256	; 0x100
    a848:	mov	r1, r6
    a84c:	mov	r0, r7
    a850:	mov	sl, r7
    a854:	ldr	r3, [r3]
    a858:	bl	1520 <fread@plt>
    a85c:	add	r5, r5, r0
    a860:	sub	r3, r9, #1024	; 0x400
    a864:	mov	r2, r7
    a868:	ldr	r1, [r2], #8
    a86c:	str	r1, [r3], #4
    a870:	cmp	r3, r9
    a874:	bne	a868 <ReadUInt32Data.part.9+0x12d4>
    a878:	add	r9, r3, #1024	; 0x400
    a87c:	ldr	r3, [sp, #12]
    a880:	add	fp, fp, #256	; 0x100
    a884:	cmp	fp, r3
    a888:	blt	a840 <ReadUInt32Data.part.9+0x12ac>
    a88c:	sub	r9, r4, #256	; 0x100
    a890:	sub	r9, r9, #1
    a894:	lsr	r9, r9, #8
    a898:	add	r9, r9, #1
    a89c:	lsl	r3, r9, #8
    a8a0:	cmp	r4, r3
    a8a4:	ble	962c <ReadUInt32Data.part.9+0x98>
    a8a8:	sub	r4, r4, r3
    a8ac:	ldr	r3, [sp, #4]
    a8b0:	mov	r1, r6
    a8b4:	mov	r2, r4
    a8b8:	mov	r0, r7
    a8bc:	ldr	r3, [r3]
    a8c0:	bl	1520 <fread@plt>
    a8c4:	ldr	r3, [sp, #8]
    a8c8:	add	r5, r5, r0
    a8cc:	add	r9, r3, r9, lsl #10
    a8d0:	cmp	r4, r8
    a8d4:	ble	962c <ReadUInt32Data.part.9+0x98>
    a8d8:	ldr	r3, [sl], #8
    a8dc:	add	r8, r8, #1
    a8e0:	str	r3, [r9], #4
    a8e4:	b	a8d0 <ReadUInt32Data.part.9+0x133c>

0000a8e8 <ReadInt16Data.part.11>:
    a8e8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    a8ec:	sub	sp, sp, #2064	; 0x810
    a8f0:	mov	r5, r2
    a8f4:	sub	sp, sp, #4
    a8f8:	mov	r4, r3
    a8fc:	mov	sl, r1
    a900:	str	r0, [sp, #4]
    a904:	mov	r0, r2
    a908:	bl	1598 <Mat_SizeOf@plt>
    a90c:	sub	r3, r5, #1
    a910:	mov	r6, r0
    a914:	cmp	r3, #8
    a918:	addls	pc, pc, r3, lsl #2
    a91c:	b	b814 <ReadInt16Data.part.11+0xf2c>
    a920:	b	b624 <ReadInt16Data.part.11+0xd3c>
    a924:	b	b71c <ReadInt16Data.part.11+0xe34>
    a928:	b	b20c <ReadInt16Data.part.11+0x924>
    a92c:	b	b418 <ReadInt16Data.part.11+0xb30>
    a930:	b	adec <ReadInt16Data.part.11+0x504>
    a934:	b	affc <ReadInt16Data.part.11+0x714>
    a938:	b	aba0 <ReadInt16Data.part.11+0x2b8>
    a93c:	b	b814 <ReadInt16Data.part.11+0xf2c>
    a940:	b	a944 <ReadInt16Data.part.11+0x5c>
    a944:	ldr	r3, [sp, #4]
    a948:	add	r7, sp, #16
    a94c:	ldr	r9, [r3, #20]
    a950:	ldr	r3, [r3]
    a954:	cmp	r9, #0
    a958:	beq	aa90 <ReadInt16Data.part.11+0x1a8>
    a95c:	cmp	r4, #256	; 0x100
    a960:	bgt	a9b4 <ReadInt16Data.part.11+0xcc>
    a964:	mov	r1, r0
    a968:	mov	r2, r4
    a96c:	mov	r0, r7
    a970:	sub	sl, sl, #2
    a974:	bl	1520 <fread@plt>
    a978:	mov	r5, r0
    a97c:	mov	r9, #0
    a980:	cmp	r4, r9
    a984:	bgt	a998 <ReadInt16Data.part.11+0xb0>
    a988:	mul	r0, r6, r5
    a98c:	add	sp, sp, #2064	; 0x810
    a990:	add	sp, sp, #4
    a994:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    a998:	add	r0, r7, r9, lsl #3
    a99c:	add	r9, r9, #1
    a9a0:	bl	196c <Mat_doubleSwap>
    a9a4:	vcvt.s32.f64	s0, d0
    a9a8:	vmov	r3, s0
    a9ac:	strh	r3, [sl, #2]!
    a9b0:	b	a980 <ReadInt16Data.part.11+0x98>
    a9b4:	mov	r8, #0
    a9b8:	sub	r3, r4, #256	; 0x100
    a9bc:	add	r9, sl, #512	; 0x200
    a9c0:	mov	r5, r8
    a9c4:	str	r3, [sp, #8]
    a9c8:	ldr	r3, [sp, #4]
    a9cc:	mov	r2, #256	; 0x100
    a9d0:	mov	r1, r6
    a9d4:	mov	r0, r7
    a9d8:	sub	fp, r9, #512	; 0x200
    a9dc:	ldr	r3, [r3]
    a9e0:	bl	1520 <fread@plt>
    a9e4:	add	r5, r5, r0
    a9e8:	mov	r3, r7
    a9ec:	mov	r0, r3
    a9f0:	str	r3, [sp, #12]
    a9f4:	bl	196c <Mat_doubleSwap>
    a9f8:	vcvt.s32.f64	s0, d0
    a9fc:	vmov	r3, s0
    aa00:	strh	r3, [fp], #2
    aa04:	cmp	fp, r9
    aa08:	ldr	r3, [sp, #12]
    aa0c:	add	r3, r3, #8
    aa10:	bne	a9ec <ReadInt16Data.part.11+0x104>
    aa14:	ldr	r3, [sp, #8]
    aa18:	add	r8, r8, #256	; 0x100
    aa1c:	add	r9, fp, #512	; 0x200
    aa20:	cmp	r8, r3
    aa24:	blt	a9c8 <ReadInt16Data.part.11+0xe0>
    aa28:	sub	r8, r4, #256	; 0x100
    aa2c:	sub	r8, r8, #1
    aa30:	lsr	r8, r8, #8
    aa34:	add	r8, r8, #1
    aa38:	lsl	r3, r8, #8
    aa3c:	cmp	r4, r3
    aa40:	ble	a988 <ReadInt16Data.part.11+0xa0>
    aa44:	sub	r4, r4, r3
    aa48:	ldr	r3, [sp, #4]
    aa4c:	mov	r1, r6
    aa50:	mov	r2, r4
    aa54:	mov	r0, r7
    aa58:	add	r8, sl, r8, lsl #9
    aa5c:	mov	r9, #0
    aa60:	ldr	r3, [r3]
    aa64:	bl	1520 <fread@plt>
    aa68:	add	r5, r5, r0
    aa6c:	cmp	r4, r9
    aa70:	ble	a988 <ReadInt16Data.part.11+0xa0>
    aa74:	add	r0, r7, r9, lsl #3
    aa78:	add	r9, r9, #1
    aa7c:	bl	196c <Mat_doubleSwap>
    aa80:	vcvt.s32.f64	s0, d0
    aa84:	vmov	r3, s0
    aa88:	strh	r3, [r8], #2
    aa8c:	b	aa6c <ReadInt16Data.part.11+0x184>
    aa90:	cmp	r4, #256	; 0x100
    aa94:	bgt	aad0 <ReadInt16Data.part.11+0x1e8>
    aa98:	mov	r1, r0
    aa9c:	mov	r2, r4
    aaa0:	mov	r0, r7
    aaa4:	sub	r8, sl, #2
    aaa8:	bl	1520 <fread@plt>
    aaac:	mov	r5, r0
    aab0:	cmp	r4, r9
    aab4:	ble	a988 <ReadInt16Data.part.11+0xa0>
    aab8:	vldmia	r7!, {d7}
    aabc:	add	r9, r9, #1
    aac0:	vcvt.s32.f64	s14, d7
    aac4:	vmov	r3, s14
    aac8:	strh	r3, [r8, #2]!
    aacc:	b	aab0 <ReadInt16Data.part.11+0x1c8>
    aad0:	sub	r3, r4, #256	; 0x100
    aad4:	add	r8, sl, #512	; 0x200
    aad8:	mov	fp, r9
    aadc:	mov	r5, r9
    aae0:	str	r3, [sp, #12]
    aae4:	ldr	r3, [sp, #4]
    aae8:	mov	r2, #256	; 0x100
    aaec:	mov	r1, r6
    aaf0:	mov	r0, r7
    aaf4:	ldr	r3, [r3]
    aaf8:	bl	1520 <fread@plt>
    aafc:	add	r5, r5, r0
    ab00:	sub	r3, r8, #512	; 0x200
    ab04:	str	r7, [sp, #8]
    ab08:	mov	r2, r7
    ab0c:	vldmia	r2!, {d7}
    ab10:	vcvt.s32.f64	s14, d7
    ab14:	vmov	r1, s14
    ab18:	strh	r1, [r3], #2
    ab1c:	cmp	r3, r8
    ab20:	bne	ab0c <ReadInt16Data.part.11+0x224>
    ab24:	add	r8, r3, #512	; 0x200
    ab28:	ldr	r3, [sp, #12]
    ab2c:	add	fp, fp, #256	; 0x100
    ab30:	cmp	fp, r3
    ab34:	blt	aae4 <ReadInt16Data.part.11+0x1fc>
    ab38:	sub	r8, r4, #256	; 0x100
    ab3c:	sub	r8, r8, #1
    ab40:	lsr	r8, r8, #8
    ab44:	add	r8, r8, #1
    ab48:	lsl	r3, r8, #8
    ab4c:	cmp	r4, r3
    ab50:	ble	a988 <ReadInt16Data.part.11+0xa0>
    ab54:	sub	r4, r4, r3
    ab58:	ldr	r3, [sp, #4]
    ab5c:	mov	r1, r6
    ab60:	mov	r2, r4
    ab64:	mov	r0, r7
    ab68:	add	r8, sl, r8, lsl #9
    ab6c:	ldr	r3, [r3]
    ab70:	bl	1520 <fread@plt>
    ab74:	add	r5, r5, r0
    ab78:	cmp	r4, r9
    ab7c:	ble	a988 <ReadInt16Data.part.11+0xa0>
    ab80:	ldr	r3, [sp, #8]
    ab84:	add	r9, r9, #1
    ab88:	vldmia	r3!, {d7}
    ab8c:	vcvt.s32.f64	s14, d7
    ab90:	str	r3, [sp, #8]
    ab94:	vmov	r3, s14
    ab98:	strh	r3, [r8], #2
    ab9c:	b	ab78 <ReadInt16Data.part.11+0x290>
    aba0:	ldr	r3, [sp, #4]
    aba4:	add	r7, sp, #16
    aba8:	ldr	r9, [r3, #20]
    abac:	ldr	r3, [r3]
    abb0:	cmp	r9, #0
    abb4:	beq	acdc <ReadInt16Data.part.11+0x3f4>
    abb8:	cmp	r4, #256	; 0x100
    abbc:	bgt	ac00 <ReadInt16Data.part.11+0x318>
    abc0:	mov	r1, r0
    abc4:	mov	r2, r4
    abc8:	mov	r0, r7
    abcc:	sub	sl, sl, #2
    abd0:	bl	1520 <fread@plt>
    abd4:	mov	r5, r0
    abd8:	mov	r9, #0
    abdc:	cmp	r4, r9
    abe0:	ble	a988 <ReadInt16Data.part.11+0xa0>
    abe4:	add	r0, r7, r9, lsl #2
    abe8:	add	r9, r9, #1
    abec:	bl	193c <Mat_floatSwap>
    abf0:	vcvt.s32.f32	s0, s0
    abf4:	vmov	r3, s0
    abf8:	strh	r3, [sl, #2]!
    abfc:	b	abdc <ReadInt16Data.part.11+0x2f4>
    ac00:	mov	r8, #0
    ac04:	sub	r3, r4, #256	; 0x100
    ac08:	add	r9, sl, #512	; 0x200
    ac0c:	mov	r5, r8
    ac10:	str	r3, [sp, #8]
    ac14:	ldr	r3, [sp, #4]
    ac18:	mov	r2, #256	; 0x100
    ac1c:	mov	r1, r6
    ac20:	mov	r0, r7
    ac24:	sub	fp, r9, #512	; 0x200
    ac28:	ldr	r3, [r3]
    ac2c:	bl	1520 <fread@plt>
    ac30:	add	r5, r5, r0
    ac34:	mov	r3, r7
    ac38:	mov	r0, r3
    ac3c:	str	r3, [sp, #12]
    ac40:	bl	193c <Mat_floatSwap>
    ac44:	vcvt.s32.f32	s0, s0
    ac48:	vmov	r3, s0
    ac4c:	strh	r3, [fp], #2
    ac50:	cmp	fp, r9
    ac54:	ldr	r3, [sp, #12]
    ac58:	add	r3, r3, #4
    ac5c:	bne	ac38 <ReadInt16Data.part.11+0x350>
    ac60:	ldr	r3, [sp, #8]
    ac64:	add	r8, r8, #256	; 0x100
    ac68:	add	r9, fp, #512	; 0x200
    ac6c:	cmp	r8, r3
    ac70:	blt	ac14 <ReadInt16Data.part.11+0x32c>
    ac74:	sub	r8, r4, #256	; 0x100
    ac78:	sub	r8, r8, #1
    ac7c:	lsr	r8, r8, #8
    ac80:	add	r8, r8, #1
    ac84:	lsl	r3, r8, #8
    ac88:	cmp	r4, r3
    ac8c:	ble	a988 <ReadInt16Data.part.11+0xa0>
    ac90:	sub	r4, r4, r3
    ac94:	ldr	r3, [sp, #4]
    ac98:	mov	r1, r6
    ac9c:	mov	r2, r4
    aca0:	mov	r0, r7
    aca4:	add	r8, sl, r8, lsl #9
    aca8:	mov	r9, #0
    acac:	ldr	r3, [r3]
    acb0:	bl	1520 <fread@plt>
    acb4:	add	r5, r5, r0
    acb8:	cmp	r4, r9
    acbc:	ble	a988 <ReadInt16Data.part.11+0xa0>
    acc0:	add	r0, r7, r9, lsl #2
    acc4:	add	r9, r9, #1
    acc8:	bl	193c <Mat_floatSwap>
    accc:	vcvt.s32.f32	s0, s0
    acd0:	vmov	r3, s0
    acd4:	strh	r3, [r8], #2
    acd8:	b	acb8 <ReadInt16Data.part.11+0x3d0>
    acdc:	cmp	r4, #256	; 0x100
    ace0:	bgt	ad1c <ReadInt16Data.part.11+0x434>
    ace4:	mov	r1, r0
    ace8:	mov	r2, r4
    acec:	mov	r0, r7
    acf0:	sub	r8, sl, #2
    acf4:	bl	1520 <fread@plt>
    acf8:	mov	r5, r0
    acfc:	cmp	r4, r9
    ad00:	ble	a988 <ReadInt16Data.part.11+0xa0>
    ad04:	vldmia	r7!, {s15}
    ad08:	add	r9, r9, #1
    ad0c:	vcvt.s32.f32	s15, s15
    ad10:	vmov	r3, s15
    ad14:	strh	r3, [r8, #2]!
    ad18:	b	acfc <ReadInt16Data.part.11+0x414>
    ad1c:	sub	r3, r4, #256	; 0x100
    ad20:	add	r8, sl, #512	; 0x200
    ad24:	mov	fp, r9
    ad28:	mov	r5, r9
    ad2c:	str	r3, [sp, #12]
    ad30:	ldr	r3, [sp, #4]
    ad34:	mov	r2, #256	; 0x100
    ad38:	mov	r1, r6
    ad3c:	mov	r0, r7
    ad40:	ldr	r3, [r3]
    ad44:	bl	1520 <fread@plt>
    ad48:	add	r5, r5, r0
    ad4c:	sub	r3, r8, #512	; 0x200
    ad50:	str	r7, [sp, #8]
    ad54:	mov	r2, r7
    ad58:	vldmia	r2!, {s15}
    ad5c:	vcvt.s32.f32	s15, s15
    ad60:	vmov	r1, s15
    ad64:	strh	r1, [r3], #2
    ad68:	cmp	r3, r8
    ad6c:	bne	ad58 <ReadInt16Data.part.11+0x470>
    ad70:	add	r8, r3, #512	; 0x200
    ad74:	ldr	r3, [sp, #12]
    ad78:	add	fp, fp, #256	; 0x100
    ad7c:	cmp	fp, r3
    ad80:	blt	ad30 <ReadInt16Data.part.11+0x448>
    ad84:	sub	r8, r4, #256	; 0x100
    ad88:	sub	r8, r8, #1
    ad8c:	lsr	r8, r8, #8
    ad90:	add	r8, r8, #1
    ad94:	lsl	r3, r8, #8
    ad98:	cmp	r4, r3
    ad9c:	ble	a988 <ReadInt16Data.part.11+0xa0>
    ada0:	sub	r4, r4, r3
    ada4:	ldr	r3, [sp, #4]
    ada8:	mov	r1, r6
    adac:	mov	r2, r4
    adb0:	mov	r0, r7
    adb4:	add	r8, sl, r8, lsl #9
    adb8:	ldr	r3, [r3]
    adbc:	bl	1520 <fread@plt>
    adc0:	add	r5, r5, r0
    adc4:	cmp	r4, r9
    adc8:	ble	a988 <ReadInt16Data.part.11+0xa0>
    adcc:	ldr	r3, [sp, #8]
    add0:	add	r9, r9, #1
    add4:	vldmia	r3!, {s15}
    add8:	vcvt.s32.f32	s15, s15
    addc:	str	r3, [sp, #8]
    ade0:	vmov	r3, s15
    ade4:	strh	r3, [r8], #2
    ade8:	b	adc4 <ReadInt16Data.part.11+0x4dc>
    adec:	ldr	r3, [sp, #4]
    adf0:	add	r7, sp, #16
    adf4:	ldr	r8, [r3, #20]
    adf8:	ldr	r3, [r3]
    adfc:	cmp	r8, #0
    ae00:	beq	af10 <ReadInt16Data.part.11+0x628>
    ae04:	cmp	r4, #256	; 0x100
    ae08:	bgt	ae44 <ReadInt16Data.part.11+0x55c>
    ae0c:	mov	r1, r0
    ae10:	mov	r2, r4
    ae14:	mov	r0, r7
    ae18:	sub	sl, sl, #2
    ae1c:	bl	1520 <fread@plt>
    ae20:	mov	r5, r0
    ae24:	mov	r9, #0
    ae28:	cmp	r4, r9
    ae2c:	ble	a988 <ReadInt16Data.part.11+0xa0>
    ae30:	add	r0, r7, r9, lsl #2
    ae34:	add	r9, r9, #1
    ae38:	bl	189c <Mat_int32Swap>
    ae3c:	strh	r0, [sl, #2]!
    ae40:	b	ae28 <ReadInt16Data.part.11+0x540>
    ae44:	mov	r8, #0
    ae48:	sub	r3, r4, #256	; 0x100
    ae4c:	add	r9, sl, #512	; 0x200
    ae50:	mov	r5, r8
    ae54:	str	r3, [sp, #8]
    ae58:	ldr	r3, [sp, #4]
    ae5c:	mov	r2, #256	; 0x100
    ae60:	mov	r1, r6
    ae64:	mov	r0, r7
    ae68:	sub	fp, r9, #512	; 0x200
    ae6c:	ldr	r3, [r3]
    ae70:	bl	1520 <fread@plt>
    ae74:	add	r5, r5, r0
    ae78:	mov	r3, r7
    ae7c:	mov	r0, r3
    ae80:	str	r3, [sp, #12]
    ae84:	bl	189c <Mat_int32Swap>
    ae88:	ldr	r3, [sp, #12]
    ae8c:	strh	r0, [fp], #2
    ae90:	cmp	fp, r9
    ae94:	add	r3, r3, #4
    ae98:	bne	ae7c <ReadInt16Data.part.11+0x594>
    ae9c:	ldr	r3, [sp, #8]
    aea0:	add	r8, r8, #256	; 0x100
    aea4:	add	r9, fp, #512	; 0x200
    aea8:	cmp	r8, r3
    aeac:	blt	ae58 <ReadInt16Data.part.11+0x570>
    aeb0:	sub	r8, r4, #256	; 0x100
    aeb4:	sub	r8, r8, #1
    aeb8:	lsr	r8, r8, #8
    aebc:	add	r8, r8, #1
    aec0:	lsl	r3, r8, #8
    aec4:	cmp	r4, r3
    aec8:	ble	a988 <ReadInt16Data.part.11+0xa0>
    aecc:	sub	r4, r4, r3
    aed0:	ldr	r3, [sp, #4]
    aed4:	mov	r1, r6
    aed8:	mov	r2, r4
    aedc:	mov	r0, r7
    aee0:	add	r8, sl, r8, lsl #9
    aee4:	mov	r9, #0
    aee8:	ldr	r3, [r3]
    aeec:	bl	1520 <fread@plt>
    aef0:	add	r5, r5, r0
    aef4:	cmp	r4, r9
    aef8:	ble	a988 <ReadInt16Data.part.11+0xa0>
    aefc:	add	r0, r7, r9, lsl #2
    af00:	add	r9, r9, #1
    af04:	bl	189c <Mat_int32Swap>
    af08:	strh	r0, [r8], #2
    af0c:	b	aef4 <ReadInt16Data.part.11+0x60c>
    af10:	cmp	r4, #256	; 0x100
    af14:	bgt	af48 <ReadInt16Data.part.11+0x660>
    af18:	mov	r1, r0
    af1c:	mov	r2, r4
    af20:	mov	r0, r7
    af24:	bl	1520 <fread@plt>
    af28:	mov	r5, r0
    af2c:	sub	r3, sl, #2
    af30:	cmp	r4, r8
    af34:	ble	a988 <ReadInt16Data.part.11+0xa0>
    af38:	ldr	r2, [r7, r8, lsl #2]
    af3c:	add	r8, r8, #1
    af40:	strh	r2, [r3, #2]!
    af44:	b	af30 <ReadInt16Data.part.11+0x648>
    af48:	sub	r3, r4, #256	; 0x100
    af4c:	add	fp, sl, #512	; 0x200
    af50:	mov	r9, r8
    af54:	mov	r5, r8
    af58:	str	r3, [sp, #8]
    af5c:	ldr	r3, [sp, #4]
    af60:	mov	r2, #256	; 0x100
    af64:	mov	r1, r6
    af68:	mov	r0, r7
    af6c:	ldr	r3, [r3]
    af70:	bl	1520 <fread@plt>
    af74:	add	r5, r5, r0
    af78:	mov	r2, r7
    af7c:	sub	r3, fp, #512	; 0x200
    af80:	ldr	r1, [r2], #4
    af84:	strh	r1, [r3], #2
    af88:	cmp	r3, fp
    af8c:	bne	af80 <ReadInt16Data.part.11+0x698>
    af90:	add	fp, r3, #512	; 0x200
    af94:	ldr	r3, [sp, #8]
    af98:	add	r9, r9, #256	; 0x100
    af9c:	cmp	r9, r3
    afa0:	blt	af5c <ReadInt16Data.part.11+0x674>
    afa4:	sub	r9, r4, #256	; 0x100
    afa8:	sub	r9, r9, #1
    afac:	lsr	r9, r9, #8
    afb0:	add	r9, r9, #1
    afb4:	lsl	r3, r9, #8
    afb8:	cmp	r4, r3
    afbc:	ble	a988 <ReadInt16Data.part.11+0xa0>
    afc0:	sub	r4, r4, r3
    afc4:	ldr	r3, [sp, #4]
    afc8:	mov	r1, r6
    afcc:	mov	r2, r4
    afd0:	mov	r0, r7
    afd4:	add	r9, sl, r9, lsl #9
    afd8:	ldr	r3, [r3]
    afdc:	bl	1520 <fread@plt>
    afe0:	add	r5, r5, r0
    afe4:	cmp	r4, r8
    afe8:	ble	a988 <ReadInt16Data.part.11+0xa0>
    afec:	ldr	r3, [r7, r8, lsl #2]
    aff0:	add	r8, r8, #1
    aff4:	strh	r3, [r9], #2
    aff8:	b	afe4 <ReadInt16Data.part.11+0x6fc>
    affc:	ldr	r3, [sp, #4]
    b000:	add	r7, sp, #16
    b004:	ldr	r8, [r3, #20]
    b008:	ldr	r3, [r3]
    b00c:	cmp	r8, #0
    b010:	beq	b120 <ReadInt16Data.part.11+0x838>
    b014:	cmp	r4, #256	; 0x100
    b018:	bgt	b054 <ReadInt16Data.part.11+0x76c>
    b01c:	mov	r1, r0
    b020:	mov	r2, r4
    b024:	mov	r0, r7
    b028:	sub	sl, sl, #2
    b02c:	bl	1520 <fread@plt>
    b030:	mov	r5, r0
    b034:	mov	r9, #0
    b038:	cmp	r4, r9
    b03c:	ble	a988 <ReadInt16Data.part.11+0xa0>
    b040:	add	r0, r7, r9, lsl #2
    b044:	add	r9, r9, #1
    b048:	bl	18cc <Mat_uint32Swap>
    b04c:	strh	r0, [sl, #2]!
    b050:	b	b038 <ReadInt16Data.part.11+0x750>
    b054:	mov	r8, #0
    b058:	sub	r3, r4, #256	; 0x100
    b05c:	add	r9, sl, #512	; 0x200
    b060:	mov	r5, r8
    b064:	str	r3, [sp, #8]
    b068:	ldr	r3, [sp, #4]
    b06c:	mov	r2, #256	; 0x100
    b070:	mov	r1, r6
    b074:	mov	r0, r7
    b078:	sub	fp, r9, #512	; 0x200
    b07c:	ldr	r3, [r3]
    b080:	bl	1520 <fread@plt>
    b084:	add	r5, r5, r0
    b088:	mov	r3, r7
    b08c:	mov	r0, r3
    b090:	str	r3, [sp, #12]
    b094:	bl	18cc <Mat_uint32Swap>
    b098:	ldr	r3, [sp, #12]
    b09c:	strh	r0, [fp], #2
    b0a0:	cmp	fp, r9
    b0a4:	add	r3, r3, #4
    b0a8:	bne	b08c <ReadInt16Data.part.11+0x7a4>
    b0ac:	ldr	r3, [sp, #8]
    b0b0:	add	r8, r8, #256	; 0x100
    b0b4:	add	r9, fp, #512	; 0x200
    b0b8:	cmp	r8, r3
    b0bc:	blt	b068 <ReadInt16Data.part.11+0x780>
    b0c0:	sub	r8, r4, #256	; 0x100
    b0c4:	sub	r8, r8, #1
    b0c8:	lsr	r8, r8, #8
    b0cc:	add	r8, r8, #1
    b0d0:	lsl	r3, r8, #8
    b0d4:	cmp	r4, r3
    b0d8:	ble	a988 <ReadInt16Data.part.11+0xa0>
    b0dc:	sub	r4, r4, r3
    b0e0:	ldr	r3, [sp, #4]
    b0e4:	mov	r1, r6
    b0e8:	mov	r2, r4
    b0ec:	mov	r0, r7
    b0f0:	add	r8, sl, r8, lsl #9
    b0f4:	mov	r9, #0
    b0f8:	ldr	r3, [r3]
    b0fc:	bl	1520 <fread@plt>
    b100:	add	r5, r5, r0
    b104:	cmp	r4, r9
    b108:	ble	a988 <ReadInt16Data.part.11+0xa0>
    b10c:	add	r0, r7, r9, lsl #2
    b110:	add	r9, r9, #1
    b114:	bl	18cc <Mat_uint32Swap>
    b118:	strh	r0, [r8], #2
    b11c:	b	b104 <ReadInt16Data.part.11+0x81c>
    b120:	cmp	r4, #256	; 0x100
    b124:	bgt	b158 <ReadInt16Data.part.11+0x870>
    b128:	mov	r1, r0
    b12c:	mov	r2, r4
    b130:	mov	r0, r7
    b134:	bl	1520 <fread@plt>
    b138:	mov	r5, r0
    b13c:	sub	r3, sl, #2
    b140:	cmp	r4, r8
    b144:	ble	a988 <ReadInt16Data.part.11+0xa0>
    b148:	ldr	r2, [r7, r8, lsl #2]
    b14c:	add	r8, r8, #1
    b150:	strh	r2, [r3, #2]!
    b154:	b	b140 <ReadInt16Data.part.11+0x858>
    b158:	sub	r3, r4, #256	; 0x100
    b15c:	add	fp, sl, #512	; 0x200
    b160:	mov	r9, r8
    b164:	mov	r5, r8
    b168:	str	r3, [sp, #8]
    b16c:	ldr	r3, [sp, #4]
    b170:	mov	r2, #256	; 0x100
    b174:	mov	r1, r6
    b178:	mov	r0, r7
    b17c:	ldr	r3, [r3]
    b180:	bl	1520 <fread@plt>
    b184:	add	r5, r5, r0
    b188:	mov	r2, r7
    b18c:	sub	r3, fp, #512	; 0x200
    b190:	ldr	r1, [r2], #4
    b194:	strh	r1, [r3], #2
    b198:	cmp	r3, fp
    b19c:	bne	b190 <ReadInt16Data.part.11+0x8a8>
    b1a0:	add	fp, r3, #512	; 0x200
    b1a4:	ldr	r3, [sp, #8]
    b1a8:	add	r9, r9, #256	; 0x100
    b1ac:	cmp	r9, r3
    b1b0:	blt	b16c <ReadInt16Data.part.11+0x884>
    b1b4:	sub	r9, r4, #256	; 0x100
    b1b8:	sub	r9, r9, #1
    b1bc:	lsr	r9, r9, #8
    b1c0:	add	r9, r9, #1
    b1c4:	lsl	r3, r9, #8
    b1c8:	cmp	r4, r3
    b1cc:	ble	a988 <ReadInt16Data.part.11+0xa0>
    b1d0:	sub	r4, r4, r3
    b1d4:	ldr	r3, [sp, #4]
    b1d8:	mov	r1, r6
    b1dc:	mov	r2, r4
    b1e0:	mov	r0, r7
    b1e4:	add	r9, sl, r9, lsl #9
    b1e8:	ldr	r3, [r3]
    b1ec:	bl	1520 <fread@plt>
    b1f0:	add	r5, r5, r0
    b1f4:	cmp	r4, r8
    b1f8:	ble	a988 <ReadInt16Data.part.11+0xa0>
    b1fc:	ldr	r3, [r7, r8, lsl #2]
    b200:	add	r8, r8, #1
    b204:	strh	r3, [r9], #2
    b208:	b	b1f4 <ReadInt16Data.part.11+0x90c>
    b20c:	ldr	r3, [sp, #4]
    b210:	add	r7, sp, #16
    b214:	ldr	r9, [r3, #20]
    b218:	ldr	r3, [r3]
    b21c:	cmp	r9, #0
    b220:	beq	b320 <ReadInt16Data.part.11+0xa38>
    b224:	cmp	r4, #256	; 0x100
    b228:	movgt	r8, #0
    b22c:	subgt	r9, r4, #256	; 0x100
    b230:	movgt	r5, r8
    b234:	bgt	b270 <ReadInt16Data.part.11+0x988>
    b238:	mov	r1, r0
    b23c:	mov	r2, r4
    b240:	mov	r0, r7
    b244:	sub	sl, sl, #2
    b248:	bl	1520 <fread@plt>
    b24c:	mov	r5, r0
    b250:	mov	r9, #0
    b254:	cmp	r4, r9
    b258:	ble	a988 <ReadInt16Data.part.11+0xa0>
    b25c:	add	r0, r7, r9, lsl #1
    b260:	add	r9, r9, #1
    b264:	bl	18fc <Mat_int16Swap>
    b268:	strh	r0, [sl, #2]!
    b26c:	b	b254 <ReadInt16Data.part.11+0x96c>
    b270:	ldr	r3, [sp, #4]
    b274:	mov	r2, #256	; 0x100
    b278:	mov	r1, r6
    b27c:	mov	r0, r7
    b280:	add	fp, sl, r8, lsl #1
    b284:	ldr	r3, [r3]
    b288:	bl	1520 <fread@plt>
    b28c:	add	r5, r5, r0
    b290:	mov	r3, #0
    b294:	add	r0, r7, r3
    b298:	str	r3, [sp, #8]
    b29c:	bl	18fc <Mat_int16Swap>
    b2a0:	ldr	r3, [sp, #8]
    b2a4:	strh	r0, [fp], #2
    b2a8:	add	r3, r3, #2
    b2ac:	cmp	r3, #512	; 0x200
    b2b0:	bne	b294 <ReadInt16Data.part.11+0x9ac>
    b2b4:	add	r8, r8, #256	; 0x100
    b2b8:	cmp	r8, r9
    b2bc:	blt	b270 <ReadInt16Data.part.11+0x988>
    b2c0:	sub	r8, r4, #256	; 0x100
    b2c4:	sub	r8, r8, #1
    b2c8:	lsr	r8, r8, #8
    b2cc:	add	r8, r8, #1
    b2d0:	lsl	r3, r8, #8
    b2d4:	cmp	r4, r3
    b2d8:	ble	a988 <ReadInt16Data.part.11+0xa0>
    b2dc:	sub	r4, r4, r3
    b2e0:	ldr	r3, [sp, #4]
    b2e4:	mov	r1, r6
    b2e8:	mov	r2, r4
    b2ec:	mov	r0, r7
    b2f0:	add	r8, sl, r8, lsl #9
    b2f4:	mov	r9, #0
    b2f8:	ldr	r3, [r3]
    b2fc:	bl	1520 <fread@plt>
    b300:	add	r5, r5, r0
    b304:	cmp	r4, r9
    b308:	ble	a988 <ReadInt16Data.part.11+0xa0>
    b30c:	add	r0, r7, r9, lsl #1
    b310:	add	r9, r9, #1
    b314:	bl	18fc <Mat_int16Swap>
    b318:	strh	r0, [r8], #2
    b31c:	b	b304 <ReadInt16Data.part.11+0xa1c>
    b320:	cmp	r4, #256	; 0x100
    b324:	bgt	b358 <ReadInt16Data.part.11+0xa70>
    b328:	mov	r1, r0
    b32c:	mov	r2, r4
    b330:	mov	r0, r7
    b334:	sub	r8, sl, #2
    b338:	bl	1520 <fread@plt>
    b33c:	mov	r5, r0
    b340:	cmp	r4, r9
    b344:	ble	a988 <ReadInt16Data.part.11+0xa0>
    b348:	ldrsh	r3, [r7], #2
    b34c:	add	r9, r9, #1
    b350:	strh	r3, [r8, #2]!
    b354:	b	b340 <ReadInt16Data.part.11+0xa58>
    b358:	sub	r3, r4, #256	; 0x100
    b35c:	add	r8, sl, #512	; 0x200
    b360:	mov	fp, r9
    b364:	mov	r5, r9
    b368:	str	r3, [sp, #12]
    b36c:	ldr	r3, [sp, #4]
    b370:	mov	r2, #256	; 0x100
    b374:	mov	r1, r6
    b378:	mov	r0, r7
    b37c:	ldr	r3, [r3]
    b380:	bl	1520 <fread@plt>
    b384:	add	r5, r5, r0
    b388:	sub	r3, r8, #512	; 0x200
    b38c:	str	r7, [sp, #8]
    b390:	mov	r2, r7
    b394:	ldrsh	r1, [r2], #2
    b398:	strh	r1, [r3], #2
    b39c:	cmp	r3, r8
    b3a0:	bne	b394 <ReadInt16Data.part.11+0xaac>
    b3a4:	add	r8, r3, #512	; 0x200
    b3a8:	ldr	r3, [sp, #12]
    b3ac:	add	fp, fp, #256	; 0x100
    b3b0:	cmp	fp, r3
    b3b4:	blt	b36c <ReadInt16Data.part.11+0xa84>
    b3b8:	sub	r8, r4, #256	; 0x100
    b3bc:	sub	r8, r8, #1
    b3c0:	lsr	r8, r8, #8
    b3c4:	add	r8, r8, #1
    b3c8:	lsl	r3, r8, #8
    b3cc:	cmp	r4, r3
    b3d0:	ble	a988 <ReadInt16Data.part.11+0xa0>
    b3d4:	sub	r4, r4, r3
    b3d8:	ldr	r3, [sp, #4]
    b3dc:	mov	r1, r6
    b3e0:	mov	r2, r4
    b3e4:	mov	r0, r7
    b3e8:	add	r8, sl, r8, lsl #9
    b3ec:	ldr	r3, [r3]
    b3f0:	bl	1520 <fread@plt>
    b3f4:	add	r5, r5, r0
    b3f8:	cmp	r4, r9
    b3fc:	ble	a988 <ReadInt16Data.part.11+0xa0>
    b400:	ldr	r2, [sp, #8]
    b404:	add	r9, r9, #1
    b408:	ldrsh	r3, [r2], #2
    b40c:	strh	r3, [r8], #2
    b410:	str	r2, [sp, #8]
    b414:	b	b3f8 <ReadInt16Data.part.11+0xb10>
    b418:	ldr	r3, [sp, #4]
    b41c:	add	r7, sp, #16
    b420:	ldr	r9, [r3, #20]
    b424:	ldr	r3, [r3]
    b428:	cmp	r9, #0
    b42c:	beq	b52c <ReadInt16Data.part.11+0xc44>
    b430:	cmp	r4, #256	; 0x100
    b434:	movgt	r8, #0
    b438:	subgt	r9, r4, #256	; 0x100
    b43c:	movgt	r5, r8
    b440:	bgt	b47c <ReadInt16Data.part.11+0xb94>
    b444:	mov	r1, r0
    b448:	mov	r2, r4
    b44c:	mov	r0, r7
    b450:	sub	sl, sl, #2
    b454:	bl	1520 <fread@plt>
    b458:	mov	r5, r0
    b45c:	mov	r9, #0
    b460:	cmp	r4, r9
    b464:	ble	a988 <ReadInt16Data.part.11+0xa0>
    b468:	add	r0, r7, r9, lsl #1
    b46c:	add	r9, r9, #1
    b470:	bl	191c <Mat_uint16Swap>
    b474:	strh	r0, [sl, #2]!
    b478:	b	b460 <ReadInt16Data.part.11+0xb78>
    b47c:	ldr	r3, [sp, #4]
    b480:	mov	r2, #256	; 0x100
    b484:	mov	r1, r6
    b488:	mov	r0, r7
    b48c:	add	fp, sl, r8, lsl #1
    b490:	ldr	r3, [r3]
    b494:	bl	1520 <fread@plt>
    b498:	add	r5, r5, r0
    b49c:	mov	r3, #0
    b4a0:	add	r0, r7, r3
    b4a4:	str	r3, [sp, #8]
    b4a8:	bl	191c <Mat_uint16Swap>
    b4ac:	ldr	r3, [sp, #8]
    b4b0:	strh	r0, [fp], #2
    b4b4:	add	r3, r3, #2
    b4b8:	cmp	r3, #512	; 0x200
    b4bc:	bne	b4a0 <ReadInt16Data.part.11+0xbb8>
    b4c0:	add	r8, r8, #256	; 0x100
    b4c4:	cmp	r8, r9
    b4c8:	blt	b47c <ReadInt16Data.part.11+0xb94>
    b4cc:	sub	r8, r4, #256	; 0x100
    b4d0:	sub	r8, r8, #1
    b4d4:	lsr	r8, r8, #8
    b4d8:	add	r8, r8, #1
    b4dc:	lsl	r3, r8, #8
    b4e0:	cmp	r4, r3
    b4e4:	ble	a988 <ReadInt16Data.part.11+0xa0>
    b4e8:	sub	r4, r4, r3
    b4ec:	ldr	r3, [sp, #4]
    b4f0:	mov	r1, r6
    b4f4:	mov	r2, r4
    b4f8:	mov	r0, r7
    b4fc:	add	r8, sl, r8, lsl #9
    b500:	mov	r9, #0
    b504:	ldr	r3, [r3]
    b508:	bl	1520 <fread@plt>
    b50c:	add	r5, r5, r0
    b510:	cmp	r4, r9
    b514:	ble	a988 <ReadInt16Data.part.11+0xa0>
    b518:	add	r0, r7, r9, lsl #1
    b51c:	add	r9, r9, #1
    b520:	bl	191c <Mat_uint16Swap>
    b524:	strh	r0, [r8], #2
    b528:	b	b510 <ReadInt16Data.part.11+0xc28>
    b52c:	cmp	r4, #256	; 0x100
    b530:	bgt	b564 <ReadInt16Data.part.11+0xc7c>
    b534:	mov	r1, r0
    b538:	mov	r2, r4
    b53c:	mov	r0, r7
    b540:	sub	r8, sl, #2
    b544:	bl	1520 <fread@plt>
    b548:	mov	r5, r0
    b54c:	cmp	r4, r9
    b550:	ble	a988 <ReadInt16Data.part.11+0xa0>
    b554:	ldrh	r3, [r7], #2
    b558:	add	r9, r9, #1
    b55c:	strh	r3, [r8, #2]!
    b560:	b	b54c <ReadInt16Data.part.11+0xc64>
    b564:	sub	r3, r4, #256	; 0x100
    b568:	add	r8, sl, #512	; 0x200
    b56c:	mov	fp, r9
    b570:	mov	r5, r9
    b574:	str	r3, [sp, #12]
    b578:	ldr	r3, [sp, #4]
    b57c:	mov	r2, #256	; 0x100
    b580:	mov	r1, r6
    b584:	mov	r0, r7
    b588:	ldr	r3, [r3]
    b58c:	bl	1520 <fread@plt>
    b590:	add	r5, r5, r0
    b594:	sub	r3, r8, #512	; 0x200
    b598:	str	r7, [sp, #8]
    b59c:	mov	r2, r7
    b5a0:	ldrh	r1, [r2], #2
    b5a4:	strh	r1, [r3], #2
    b5a8:	cmp	r3, r8
    b5ac:	bne	b5a0 <ReadInt16Data.part.11+0xcb8>
    b5b0:	add	r8, r3, #512	; 0x200
    b5b4:	ldr	r3, [sp, #12]
    b5b8:	add	fp, fp, #256	; 0x100
    b5bc:	cmp	fp, r3
    b5c0:	blt	b578 <ReadInt16Data.part.11+0xc90>
    b5c4:	sub	r8, r4, #256	; 0x100
    b5c8:	sub	r8, r8, #1
    b5cc:	lsr	r8, r8, #8
    b5d0:	add	r8, r8, #1
    b5d4:	lsl	r3, r8, #8
    b5d8:	cmp	r4, r3
    b5dc:	ble	a988 <ReadInt16Data.part.11+0xa0>
    b5e0:	sub	r4, r4, r3
    b5e4:	ldr	r3, [sp, #4]
    b5e8:	mov	r1, r6
    b5ec:	mov	r2, r4
    b5f0:	mov	r0, r7
    b5f4:	add	r8, sl, r8, lsl #9
    b5f8:	ldr	r3, [r3]
    b5fc:	bl	1520 <fread@plt>
    b600:	add	r5, r5, r0
    b604:	cmp	r4, r9
    b608:	ble	a988 <ReadInt16Data.part.11+0xa0>
    b60c:	ldr	r2, [sp, #8]
    b610:	add	r9, r9, #1
    b614:	ldrh	r3, [r2], #2
    b618:	strh	r3, [r8], #2
    b61c:	str	r2, [sp, #8]
    b620:	b	b604 <ReadInt16Data.part.11+0xd1c>
    b624:	cmp	r4, #256	; 0x100
    b628:	add	r7, sp, #16
    b62c:	bgt	b66c <ReadInt16Data.part.11+0xd84>
    b630:	ldr	r3, [sp, #4]
    b634:	mov	r1, r0
    b638:	mov	r2, r4
    b63c:	mov	r0, r7
    b640:	sub	r8, sl, #2
    b644:	ldr	r3, [r3]
    b648:	bl	1520 <fread@plt>
    b64c:	mov	r5, r0
    b650:	mov	r3, #0
    b654:	cmp	r4, r3
    b658:	ble	a988 <ReadInt16Data.part.11+0xa0>
    b65c:	ldrsb	r2, [r7, r3]
    b660:	add	r3, r3, #1
    b664:	strh	r2, [r8, #2]!
    b668:	b	b654 <ReadInt16Data.part.11+0xd6c>
    b66c:	mov	r8, #0
    b670:	add	r9, sl, #512	; 0x200
    b674:	mov	r5, r8
    b678:	sub	fp, r4, #256	; 0x100
    b67c:	ldr	r3, [sp, #4]
    b680:	mov	r2, #256	; 0x100
    b684:	mov	r1, r6
    b688:	mov	r0, r7
    b68c:	ldr	r3, [r3]
    b690:	bl	1520 <fread@plt>
    b694:	add	r5, r5, r0
    b698:	mov	r2, r7
    b69c:	sub	r3, r9, #512	; 0x200
    b6a0:	ldrsb	r1, [r2], #1
    b6a4:	strh	r1, [r3], #2
    b6a8:	cmp	r3, r9
    b6ac:	bne	b6a0 <ReadInt16Data.part.11+0xdb8>
    b6b0:	add	r8, r8, #256	; 0x100
    b6b4:	add	r9, r3, #512	; 0x200
    b6b8:	cmp	r8, fp
    b6bc:	blt	b67c <ReadInt16Data.part.11+0xd94>
    b6c0:	sub	r8, r4, #256	; 0x100
    b6c4:	sub	r8, r8, #1
    b6c8:	lsr	r8, r8, #8
    b6cc:	add	r8, r8, #1
    b6d0:	lsl	r3, r8, #8
    b6d4:	cmp	r4, r3
    b6d8:	ble	a988 <ReadInt16Data.part.11+0xa0>
    b6dc:	sub	r4, r4, r3
    b6e0:	ldr	r3, [sp, #4]
    b6e4:	mov	r1, r6
    b6e8:	mov	r2, r4
    b6ec:	mov	r0, r7
    b6f0:	add	r8, sl, r8, lsl #9
    b6f4:	ldr	r3, [r3]
    b6f8:	bl	1520 <fread@plt>
    b6fc:	add	r5, r5, r0
    b700:	mov	r3, #0
    b704:	cmp	r4, r3
    b708:	ble	a988 <ReadInt16Data.part.11+0xa0>
    b70c:	ldrsb	r2, [r7, r3]
    b710:	add	r3, r3, #1
    b714:	strh	r2, [r8], #2
    b718:	b	b704 <ReadInt16Data.part.11+0xe1c>
    b71c:	cmp	r4, #256	; 0x100
    b720:	add	r7, sp, #16
    b724:	bgt	b764 <ReadInt16Data.part.11+0xe7c>
    b728:	ldr	r3, [sp, #4]
    b72c:	mov	r1, r0
    b730:	mov	r2, r4
    b734:	mov	r0, r7
    b738:	sub	r8, sl, #2
    b73c:	ldr	r3, [r3]
    b740:	bl	1520 <fread@plt>
    b744:	mov	r5, r0
    b748:	mov	r3, #0
    b74c:	cmp	r4, r3
    b750:	ble	a988 <ReadInt16Data.part.11+0xa0>
    b754:	ldrb	r2, [r7, r3]
    b758:	add	r3, r3, #1
    b75c:	strh	r2, [r8, #2]!
    b760:	b	b74c <ReadInt16Data.part.11+0xe64>
    b764:	mov	r8, #0
    b768:	add	r9, sl, #512	; 0x200
    b76c:	mov	r5, r8
    b770:	sub	fp, r4, #256	; 0x100
    b774:	ldr	r3, [sp, #4]
    b778:	mov	r2, #256	; 0x100
    b77c:	mov	r1, r6
    b780:	mov	r0, r7
    b784:	ldr	r3, [r3]
    b788:	bl	1520 <fread@plt>
    b78c:	add	r5, r5, r0
    b790:	mov	r2, r7
    b794:	sub	r3, r9, #512	; 0x200
    b798:	ldrb	r1, [r2], #1
    b79c:	strh	r1, [r3], #2
    b7a0:	cmp	r3, r9
    b7a4:	bne	b798 <ReadInt16Data.part.11+0xeb0>
    b7a8:	add	r8, r8, #256	; 0x100
    b7ac:	add	r9, r3, #512	; 0x200
    b7b0:	cmp	r8, fp
    b7b4:	blt	b774 <ReadInt16Data.part.11+0xe8c>
    b7b8:	sub	r8, r4, #256	; 0x100
    b7bc:	sub	r8, r8, #1
    b7c0:	lsr	r8, r8, #8
    b7c4:	add	r8, r8, #1
    b7c8:	lsl	r3, r8, #8
    b7cc:	cmp	r4, r3
    b7d0:	ble	a988 <ReadInt16Data.part.11+0xa0>
    b7d4:	sub	r4, r4, r3
    b7d8:	ldr	r3, [sp, #4]
    b7dc:	mov	r1, r6
    b7e0:	mov	r2, r4
    b7e4:	mov	r0, r7
    b7e8:	add	r8, sl, r8, lsl #9
    b7ec:	ldr	r3, [r3]
    b7f0:	bl	1520 <fread@plt>
    b7f4:	add	r5, r5, r0
    b7f8:	mov	r3, #0
    b7fc:	cmp	r4, r3
    b800:	ble	a988 <ReadInt16Data.part.11+0xa0>
    b804:	ldrb	r2, [r7, r3]
    b808:	add	r3, r3, #1
    b80c:	strh	r2, [r8], #2
    b810:	b	b7fc <ReadInt16Data.part.11+0xf14>
    b814:	cmp	r5, #12
    b818:	bne	ba38 <ReadInt16Data.part.11+0x1150>
    b81c:	ldr	r3, [sp, #4]
    b820:	add	r7, sp, #16
    b824:	ldr	r9, [r3, #20]
    b828:	ldr	r3, [r3]
    b82c:	cmp	r9, #0
    b830:	beq	b940 <ReadInt16Data.part.11+0x1058>
    b834:	cmp	r4, #256	; 0x100
    b838:	bgt	b874 <ReadInt16Data.part.11+0xf8c>
    b83c:	mov	r1, r0
    b840:	mov	r2, r4
    b844:	mov	r0, r7
    b848:	sub	sl, sl, #2
    b84c:	bl	1520 <fread@plt>
    b850:	mov	r5, r0
    b854:	mov	r9, #0
    b858:	cmp	r4, r9
    b85c:	ble	a988 <ReadInt16Data.part.11+0xa0>
    b860:	add	r0, r7, r9, lsl #3
    b864:	add	r9, r9, #1
    b868:	bl	17ec <Mat_int64Swap>
    b86c:	strh	r0, [sl, #2]!
    b870:	b	b858 <ReadInt16Data.part.11+0xf70>
    b874:	mov	r8, #0
    b878:	sub	r3, r4, #256	; 0x100
    b87c:	add	r9, sl, #512	; 0x200
    b880:	mov	r5, r8
    b884:	str	r3, [sp, #8]
    b888:	ldr	r3, [sp, #4]
    b88c:	mov	r2, #256	; 0x100
    b890:	mov	r1, r6
    b894:	mov	r0, r7
    b898:	sub	fp, r9, #512	; 0x200
    b89c:	ldr	r3, [r3]
    b8a0:	bl	1520 <fread@plt>
    b8a4:	add	r5, r5, r0
    b8a8:	mov	r3, r7
    b8ac:	mov	r0, r3
    b8b0:	str	r3, [sp, #12]
    b8b4:	bl	17ec <Mat_int64Swap>
    b8b8:	ldr	r3, [sp, #12]
    b8bc:	strh	r0, [fp], #2
    b8c0:	cmp	r9, fp
    b8c4:	add	r3, r3, #8
    b8c8:	bne	b8ac <ReadInt16Data.part.11+0xfc4>
    b8cc:	ldr	r3, [sp, #8]
    b8d0:	add	r8, r8, #256	; 0x100
    b8d4:	add	r9, r9, #512	; 0x200
    b8d8:	cmp	r8, r3
    b8dc:	blt	b888 <ReadInt16Data.part.11+0xfa0>
    b8e0:	sub	r8, r4, #256	; 0x100
    b8e4:	sub	r8, r8, #1
    b8e8:	lsr	r8, r8, #8
    b8ec:	add	r8, r8, #1
    b8f0:	lsl	r3, r8, #8
    b8f4:	cmp	r4, r3
    b8f8:	ble	a988 <ReadInt16Data.part.11+0xa0>
    b8fc:	sub	r4, r4, r3
    b900:	ldr	r3, [sp, #4]
    b904:	mov	r1, r6
    b908:	mov	r2, r4
    b90c:	mov	r0, r7
    b910:	add	r8, sl, r8, lsl #9
    b914:	mov	r9, #0
    b918:	ldr	r3, [r3]
    b91c:	bl	1520 <fread@plt>
    b920:	add	r5, r5, r0
    b924:	cmp	r4, r9
    b928:	ble	a988 <ReadInt16Data.part.11+0xa0>
    b92c:	add	r0, r7, r9, lsl #3
    b930:	add	r9, r9, #1
    b934:	bl	17ec <Mat_int64Swap>
    b938:	strh	r0, [r8], #2
    b93c:	b	b924 <ReadInt16Data.part.11+0x103c>
    b940:	cmp	r4, #256	; 0x100
    b944:	bgt	b978 <ReadInt16Data.part.11+0x1090>
    b948:	mov	r1, r0
    b94c:	mov	r2, r4
    b950:	mov	r0, r7
    b954:	sub	r8, sl, #2
    b958:	bl	1520 <fread@plt>
    b95c:	mov	r5, r0
    b960:	cmp	r4, r9
    b964:	ble	a988 <ReadInt16Data.part.11+0xa0>
    b968:	ldr	r3, [r7], #8
    b96c:	add	r9, r9, #1
    b970:	strh	r3, [r8, #2]!
    b974:	b	b960 <ReadInt16Data.part.11+0x1078>
    b978:	sub	r3, r4, #256	; 0x100
    b97c:	add	r8, sl, #512	; 0x200
    b980:	mov	fp, r9
    b984:	mov	r5, r9
    b988:	str	r3, [sp, #12]
    b98c:	ldr	r3, [sp, #4]
    b990:	mov	r2, #256	; 0x100
    b994:	mov	r1, r6
    b998:	mov	r0, r7
    b99c:	ldr	r3, [r3]
    b9a0:	bl	1520 <fread@plt>
    b9a4:	add	r5, r5, r0
    b9a8:	sub	r3, r8, #512	; 0x200
    b9ac:	str	r7, [sp, #8]
    b9b0:	mov	r2, r7
    b9b4:	ldr	r1, [r2], #8
    b9b8:	strh	r1, [r3], #2
    b9bc:	cmp	r3, r8
    b9c0:	bne	b9b4 <ReadInt16Data.part.11+0x10cc>
    b9c4:	add	r8, r3, #512	; 0x200
    b9c8:	ldr	r3, [sp, #12]
    b9cc:	add	fp, fp, #256	; 0x100
    b9d0:	cmp	fp, r3
    b9d4:	blt	b98c <ReadInt16Data.part.11+0x10a4>
    b9d8:	sub	r8, r4, #256	; 0x100
    b9dc:	sub	r8, r8, #1
    b9e0:	lsr	r8, r8, #8
    b9e4:	add	r8, r8, #1
    b9e8:	lsl	r3, r8, #8
    b9ec:	cmp	r4, r3
    b9f0:	ble	a988 <ReadInt16Data.part.11+0xa0>
    b9f4:	sub	r4, r4, r3
    b9f8:	ldr	r3, [sp, #4]
    b9fc:	mov	r1, r6
    ba00:	mov	r2, r4
    ba04:	mov	r0, r7
    ba08:	add	r8, sl, r8, lsl #9
    ba0c:	ldr	r3, [r3]
    ba10:	bl	1520 <fread@plt>
    ba14:	add	r5, r5, r0
    ba18:	cmp	r4, r9
    ba1c:	ble	a988 <ReadInt16Data.part.11+0xa0>
    ba20:	ldr	r2, [sp, #8]
    ba24:	add	r9, r9, #1
    ba28:	ldr	r3, [r2], #8
    ba2c:	strh	r3, [r8], #2
    ba30:	str	r2, [sp, #8]
    ba34:	b	ba18 <ReadInt16Data.part.11+0x1130>
    ba38:	cmp	r5, #13
    ba3c:	movne	r5, #0
    ba40:	bne	a988 <ReadInt16Data.part.11+0xa0>
    ba44:	ldr	r3, [sp, #4]
    ba48:	add	r7, sp, #16
    ba4c:	ldr	r9, [r3, #20]
    ba50:	ldr	r3, [r3]
    ba54:	cmp	r9, #0
    ba58:	beq	bb68 <ReadInt16Data.part.11+0x1280>
    ba5c:	cmp	r4, #256	; 0x100
    ba60:	bgt	ba9c <ReadInt16Data.part.11+0x11b4>
    ba64:	mov	r1, r0
    ba68:	mov	r2, r4
    ba6c:	mov	r0, r7
    ba70:	sub	sl, sl, #2
    ba74:	bl	1520 <fread@plt>
    ba78:	mov	r5, r0
    ba7c:	mov	r9, #0
    ba80:	cmp	r4, r9
    ba84:	ble	a988 <ReadInt16Data.part.11+0xa0>
    ba88:	add	r0, r7, r9, lsl #3
    ba8c:	add	r9, r9, #1
    ba90:	bl	1844 <Mat_uint64Swap>
    ba94:	strh	r0, [sl, #2]!
    ba98:	b	ba80 <ReadInt16Data.part.11+0x1198>
    ba9c:	mov	r8, #0
    baa0:	sub	r3, r4, #256	; 0x100
    baa4:	add	r9, sl, #512	; 0x200
    baa8:	mov	r5, r8
    baac:	str	r3, [sp, #8]
    bab0:	ldr	r3, [sp, #4]
    bab4:	mov	r2, #256	; 0x100
    bab8:	mov	r1, r6
    babc:	mov	r0, r7
    bac0:	sub	fp, r9, #512	; 0x200
    bac4:	ldr	r3, [r3]
    bac8:	bl	1520 <fread@plt>
    bacc:	add	r5, r5, r0
    bad0:	mov	r3, r7
    bad4:	mov	r0, r3
    bad8:	str	r3, [sp, #12]
    badc:	bl	1844 <Mat_uint64Swap>
    bae0:	ldr	r3, [sp, #12]
    bae4:	strh	r0, [fp], #2
    bae8:	cmp	fp, r9
    baec:	add	r3, r3, #8
    baf0:	bne	bad4 <ReadInt16Data.part.11+0x11ec>
    baf4:	ldr	r3, [sp, #8]
    baf8:	add	r8, r8, #256	; 0x100
    bafc:	add	r9, fp, #512	; 0x200
    bb00:	cmp	r8, r3
    bb04:	blt	bab0 <ReadInt16Data.part.11+0x11c8>
    bb08:	sub	r8, r4, #256	; 0x100
    bb0c:	sub	r8, r8, #1
    bb10:	lsr	r8, r8, #8
    bb14:	add	r8, r8, #1
    bb18:	lsl	r3, r8, #8
    bb1c:	cmp	r4, r3
    bb20:	ble	a988 <ReadInt16Data.part.11+0xa0>
    bb24:	sub	r4, r4, r3
    bb28:	ldr	r3, [sp, #4]
    bb2c:	mov	r1, r6
    bb30:	mov	r2, r4
    bb34:	mov	r0, r7
    bb38:	add	r8, sl, r8, lsl #9
    bb3c:	mov	r9, #0
    bb40:	ldr	r3, [r3]
    bb44:	bl	1520 <fread@plt>
    bb48:	add	r5, r5, r0
    bb4c:	cmp	r4, r9
    bb50:	ble	a988 <ReadInt16Data.part.11+0xa0>
    bb54:	add	r0, r7, r9, lsl #3
    bb58:	add	r9, r9, #1
    bb5c:	bl	1844 <Mat_uint64Swap>
    bb60:	strh	r0, [r8], #2
    bb64:	b	bb4c <ReadInt16Data.part.11+0x1264>
    bb68:	cmp	r4, #256	; 0x100
    bb6c:	bgt	bba0 <ReadInt16Data.part.11+0x12b8>
    bb70:	mov	r1, r0
    bb74:	mov	r2, r4
    bb78:	mov	r0, r7
    bb7c:	sub	r8, sl, #2
    bb80:	bl	1520 <fread@plt>
    bb84:	mov	r5, r0
    bb88:	cmp	r4, r9
    bb8c:	ble	a988 <ReadInt16Data.part.11+0xa0>
    bb90:	ldr	r3, [r7], #8
    bb94:	add	r9, r9, #1
    bb98:	strh	r3, [r8, #2]!
    bb9c:	b	bb88 <ReadInt16Data.part.11+0x12a0>
    bba0:	sub	r3, r4, #256	; 0x100
    bba4:	add	r8, sl, #512	; 0x200
    bba8:	mov	fp, r9
    bbac:	mov	r5, r9
    bbb0:	str	r3, [sp, #12]
    bbb4:	ldr	r3, [sp, #4]
    bbb8:	mov	r2, #256	; 0x100
    bbbc:	mov	r1, r6
    bbc0:	mov	r0, r7
    bbc4:	ldr	r3, [r3]
    bbc8:	bl	1520 <fread@plt>
    bbcc:	add	r5, r5, r0
    bbd0:	sub	r3, r8, #512	; 0x200
    bbd4:	str	r7, [sp, #8]
    bbd8:	mov	r2, r7
    bbdc:	ldr	r1, [r2], #8
    bbe0:	strh	r1, [r3], #2
    bbe4:	cmp	r3, r8
    bbe8:	bne	bbdc <ReadInt16Data.part.11+0x12f4>
    bbec:	add	r8, r3, #512	; 0x200
    bbf0:	ldr	r3, [sp, #12]
    bbf4:	add	fp, fp, #256	; 0x100
    bbf8:	cmp	fp, r3
    bbfc:	blt	bbb4 <ReadInt16Data.part.11+0x12cc>
    bc00:	sub	r8, r4, #256	; 0x100
    bc04:	sub	r8, r8, #1
    bc08:	lsr	r8, r8, #8
    bc0c:	add	r8, r8, #1
    bc10:	lsl	r3, r8, #8
    bc14:	cmp	r4, r3
    bc18:	ble	a988 <ReadInt16Data.part.11+0xa0>
    bc1c:	sub	r4, r4, r3
    bc20:	ldr	r3, [sp, #4]
    bc24:	mov	r1, r6
    bc28:	mov	r2, r4
    bc2c:	mov	r0, r7
    bc30:	add	r8, sl, r8, lsl #9
    bc34:	ldr	r3, [r3]
    bc38:	bl	1520 <fread@plt>
    bc3c:	add	r5, r5, r0
    bc40:	cmp	r4, r9
    bc44:	ble	a988 <ReadInt16Data.part.11+0xa0>
    bc48:	ldr	r2, [sp, #8]
    bc4c:	add	r9, r9, #1
    bc50:	ldr	r3, [r2], #8
    bc54:	strh	r3, [r8], #2
    bc58:	str	r2, [sp, #8]
    bc5c:	b	bc40 <ReadInt16Data.part.11+0x1358>

0000bc60 <ReadUInt16Data.part.13>:
    bc60:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    bc64:	sub	sp, sp, #2064	; 0x810
    bc68:	mov	r5, r2
    bc6c:	sub	sp, sp, #4
    bc70:	mov	r4, r3
    bc74:	mov	sl, r1
    bc78:	str	r0, [sp, #4]
    bc7c:	mov	r0, r2
    bc80:	bl	1598 <Mat_SizeOf@plt>
    bc84:	sub	r3, r5, #1
    bc88:	mov	r6, r0
    bc8c:	cmp	r3, #8
    bc90:	addls	pc, pc, r3, lsl #2
    bc94:	b	cb8c <ReadUInt16Data.part.13+0xf2c>
    bc98:	b	c99c <ReadUInt16Data.part.13+0xd3c>
    bc9c:	b	ca94 <ReadUInt16Data.part.13+0xe34>
    bca0:	b	c584 <ReadUInt16Data.part.13+0x924>
    bca4:	b	c790 <ReadUInt16Data.part.13+0xb30>
    bca8:	b	c164 <ReadUInt16Data.part.13+0x504>
    bcac:	b	c374 <ReadUInt16Data.part.13+0x714>
    bcb0:	b	bf18 <ReadUInt16Data.part.13+0x2b8>
    bcb4:	b	cb8c <ReadUInt16Data.part.13+0xf2c>
    bcb8:	b	bcbc <ReadUInt16Data.part.13+0x5c>
    bcbc:	ldr	r3, [sp, #4]
    bcc0:	add	r7, sp, #16
    bcc4:	ldr	r9, [r3, #20]
    bcc8:	ldr	r3, [r3]
    bccc:	cmp	r9, #0
    bcd0:	beq	be08 <ReadUInt16Data.part.13+0x1a8>
    bcd4:	cmp	r4, #256	; 0x100
    bcd8:	bgt	bd2c <ReadUInt16Data.part.13+0xcc>
    bcdc:	mov	r1, r0
    bce0:	mov	r2, r4
    bce4:	mov	r0, r7
    bce8:	sub	sl, sl, #2
    bcec:	bl	1520 <fread@plt>
    bcf0:	mov	r5, r0
    bcf4:	mov	r9, #0
    bcf8:	cmp	r4, r9
    bcfc:	bgt	bd10 <ReadUInt16Data.part.13+0xb0>
    bd00:	mul	r0, r6, r5
    bd04:	add	sp, sp, #2064	; 0x810
    bd08:	add	sp, sp, #4
    bd0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    bd10:	add	r0, r7, r9, lsl #3
    bd14:	add	r9, r9, #1
    bd18:	bl	196c <Mat_doubleSwap>
    bd1c:	vcvt.u32.f64	s0, d0
    bd20:	vmov	r3, s0
    bd24:	strh	r3, [sl, #2]!
    bd28:	b	bcf8 <ReadUInt16Data.part.13+0x98>
    bd2c:	mov	r8, #0
    bd30:	sub	r3, r4, #256	; 0x100
    bd34:	add	r9, sl, #512	; 0x200
    bd38:	mov	r5, r8
    bd3c:	str	r3, [sp, #8]
    bd40:	ldr	r3, [sp, #4]
    bd44:	mov	r2, #256	; 0x100
    bd48:	mov	r1, r6
    bd4c:	mov	r0, r7
    bd50:	sub	fp, r9, #512	; 0x200
    bd54:	ldr	r3, [r3]
    bd58:	bl	1520 <fread@plt>
    bd5c:	add	r5, r5, r0
    bd60:	mov	r3, r7
    bd64:	mov	r0, r3
    bd68:	str	r3, [sp, #12]
    bd6c:	bl	196c <Mat_doubleSwap>
    bd70:	vcvt.u32.f64	s0, d0
    bd74:	vmov	r3, s0
    bd78:	strh	r3, [fp], #2
    bd7c:	cmp	fp, r9
    bd80:	ldr	r3, [sp, #12]
    bd84:	add	r3, r3, #8
    bd88:	bne	bd64 <ReadUInt16Data.part.13+0x104>
    bd8c:	ldr	r3, [sp, #8]
    bd90:	add	r8, r8, #256	; 0x100
    bd94:	add	r9, fp, #512	; 0x200
    bd98:	cmp	r8, r3
    bd9c:	blt	bd40 <ReadUInt16Data.part.13+0xe0>
    bda0:	sub	r8, r4, #256	; 0x100
    bda4:	sub	r8, r8, #1
    bda8:	lsr	r8, r8, #8
    bdac:	add	r8, r8, #1
    bdb0:	lsl	r3, r8, #8
    bdb4:	cmp	r4, r3
    bdb8:	ble	bd00 <ReadUInt16Data.part.13+0xa0>
    bdbc:	sub	r4, r4, r3
    bdc0:	ldr	r3, [sp, #4]
    bdc4:	mov	r1, r6
    bdc8:	mov	r2, r4
    bdcc:	mov	r0, r7
    bdd0:	add	r8, sl, r8, lsl #9
    bdd4:	mov	r9, #0
    bdd8:	ldr	r3, [r3]
    bddc:	bl	1520 <fread@plt>
    bde0:	add	r5, r5, r0
    bde4:	cmp	r4, r9
    bde8:	ble	bd00 <ReadUInt16Data.part.13+0xa0>
    bdec:	add	r0, r7, r9, lsl #3
    bdf0:	add	r9, r9, #1
    bdf4:	bl	196c <Mat_doubleSwap>
    bdf8:	vcvt.u32.f64	s0, d0
    bdfc:	vmov	r3, s0
    be00:	strh	r3, [r8], #2
    be04:	b	bde4 <ReadUInt16Data.part.13+0x184>
    be08:	cmp	r4, #256	; 0x100
    be0c:	bgt	be48 <ReadUInt16Data.part.13+0x1e8>
    be10:	mov	r1, r0
    be14:	mov	r2, r4
    be18:	mov	r0, r7
    be1c:	sub	r8, sl, #2
    be20:	bl	1520 <fread@plt>
    be24:	mov	r5, r0
    be28:	cmp	r4, r9
    be2c:	ble	bd00 <ReadUInt16Data.part.13+0xa0>
    be30:	vldmia	r7!, {d7}
    be34:	add	r9, r9, #1
    be38:	vcvt.u32.f64	s14, d7
    be3c:	vmov	r3, s14
    be40:	strh	r3, [r8, #2]!
    be44:	b	be28 <ReadUInt16Data.part.13+0x1c8>
    be48:	sub	r3, r4, #256	; 0x100
    be4c:	add	r8, sl, #512	; 0x200
    be50:	mov	fp, r9
    be54:	mov	r5, r9
    be58:	str	r3, [sp, #12]
    be5c:	ldr	r3, [sp, #4]
    be60:	mov	r2, #256	; 0x100
    be64:	mov	r1, r6
    be68:	mov	r0, r7
    be6c:	ldr	r3, [r3]
    be70:	bl	1520 <fread@plt>
    be74:	add	r5, r5, r0
    be78:	sub	r3, r8, #512	; 0x200
    be7c:	str	r7, [sp, #8]
    be80:	mov	r2, r7
    be84:	vldmia	r2!, {d7}
    be88:	vcvt.u32.f64	s14, d7
    be8c:	vmov	r1, s14
    be90:	strh	r1, [r3], #2
    be94:	cmp	r3, r8
    be98:	bne	be84 <ReadUInt16Data.part.13+0x224>
    be9c:	add	r8, r3, #512	; 0x200
    bea0:	ldr	r3, [sp, #12]
    bea4:	add	fp, fp, #256	; 0x100
    bea8:	cmp	fp, r3
    beac:	blt	be5c <ReadUInt16Data.part.13+0x1fc>
    beb0:	sub	r8, r4, #256	; 0x100
    beb4:	sub	r8, r8, #1
    beb8:	lsr	r8, r8, #8
    bebc:	add	r8, r8, #1
    bec0:	lsl	r3, r8, #8
    bec4:	cmp	r4, r3
    bec8:	ble	bd00 <ReadUInt16Data.part.13+0xa0>
    becc:	sub	r4, r4, r3
    bed0:	ldr	r3, [sp, #4]
    bed4:	mov	r1, r6
    bed8:	mov	r2, r4
    bedc:	mov	r0, r7
    bee0:	add	r8, sl, r8, lsl #9
    bee4:	ldr	r3, [r3]
    bee8:	bl	1520 <fread@plt>
    beec:	add	r5, r5, r0
    bef0:	cmp	r4, r9
    bef4:	ble	bd00 <ReadUInt16Data.part.13+0xa0>
    bef8:	ldr	r3, [sp, #8]
    befc:	add	r9, r9, #1
    bf00:	vldmia	r3!, {d7}
    bf04:	vcvt.u32.f64	s14, d7
    bf08:	str	r3, [sp, #8]
    bf0c:	vmov	r3, s14
    bf10:	strh	r3, [r8], #2
    bf14:	b	bef0 <ReadUInt16Data.part.13+0x290>
    bf18:	ldr	r3, [sp, #4]
    bf1c:	add	r7, sp, #16
    bf20:	ldr	r9, [r3, #20]
    bf24:	ldr	r3, [r3]
    bf28:	cmp	r9, #0
    bf2c:	beq	c054 <ReadUInt16Data.part.13+0x3f4>
    bf30:	cmp	r4, #256	; 0x100
    bf34:	bgt	bf78 <ReadUInt16Data.part.13+0x318>
    bf38:	mov	r1, r0
    bf3c:	mov	r2, r4
    bf40:	mov	r0, r7
    bf44:	sub	sl, sl, #2
    bf48:	bl	1520 <fread@plt>
    bf4c:	mov	r5, r0
    bf50:	mov	r9, #0
    bf54:	cmp	r4, r9
    bf58:	ble	bd00 <ReadUInt16Data.part.13+0xa0>
    bf5c:	add	r0, r7, r9, lsl #2
    bf60:	add	r9, r9, #1
    bf64:	bl	193c <Mat_floatSwap>
    bf68:	vcvt.u32.f32	s0, s0
    bf6c:	vmov	r3, s0
    bf70:	strh	r3, [sl, #2]!
    bf74:	b	bf54 <ReadUInt16Data.part.13+0x2f4>
    bf78:	mov	r8, #0
    bf7c:	sub	r3, r4, #256	; 0x100
    bf80:	add	r9, sl, #512	; 0x200
    bf84:	mov	r5, r8
    bf88:	str	r3, [sp, #8]
    bf8c:	ldr	r3, [sp, #4]
    bf90:	mov	r2, #256	; 0x100
    bf94:	mov	r1, r6
    bf98:	mov	r0, r7
    bf9c:	sub	fp, r9, #512	; 0x200
    bfa0:	ldr	r3, [r3]
    bfa4:	bl	1520 <fread@plt>
    bfa8:	add	r5, r5, r0
    bfac:	mov	r3, r7
    bfb0:	mov	r0, r3
    bfb4:	str	r3, [sp, #12]
    bfb8:	bl	193c <Mat_floatSwap>
    bfbc:	vcvt.u32.f32	s0, s0
    bfc0:	vmov	r3, s0
    bfc4:	strh	r3, [fp], #2
    bfc8:	cmp	fp, r9
    bfcc:	ldr	r3, [sp, #12]
    bfd0:	add	r3, r3, #4
    bfd4:	bne	bfb0 <ReadUInt16Data.part.13+0x350>
    bfd8:	ldr	r3, [sp, #8]
    bfdc:	add	r8, r8, #256	; 0x100
    bfe0:	add	r9, fp, #512	; 0x200
    bfe4:	cmp	r8, r3
    bfe8:	blt	bf8c <ReadUInt16Data.part.13+0x32c>
    bfec:	sub	r8, r4, #256	; 0x100
    bff0:	sub	r8, r8, #1
    bff4:	lsr	r8, r8, #8
    bff8:	add	r8, r8, #1
    bffc:	lsl	r3, r8, #8
    c000:	cmp	r4, r3
    c004:	ble	bd00 <ReadUInt16Data.part.13+0xa0>
    c008:	sub	r4, r4, r3
    c00c:	ldr	r3, [sp, #4]
    c010:	mov	r1, r6
    c014:	mov	r2, r4
    c018:	mov	r0, r7
    c01c:	add	r8, sl, r8, lsl #9
    c020:	mov	r9, #0
    c024:	ldr	r3, [r3]
    c028:	bl	1520 <fread@plt>
    c02c:	add	r5, r5, r0
    c030:	cmp	r4, r9
    c034:	ble	bd00 <ReadUInt16Data.part.13+0xa0>
    c038:	add	r0, r7, r9, lsl #2
    c03c:	add	r9, r9, #1
    c040:	bl	193c <Mat_floatSwap>
    c044:	vcvt.u32.f32	s0, s0
    c048:	vmov	r3, s0
    c04c:	strh	r3, [r8], #2
    c050:	b	c030 <ReadUInt16Data.part.13+0x3d0>
    c054:	cmp	r4, #256	; 0x100
    c058:	bgt	c094 <ReadUInt16Data.part.13+0x434>
    c05c:	mov	r1, r0
    c060:	mov	r2, r4
    c064:	mov	r0, r7
    c068:	sub	r8, sl, #2
    c06c:	bl	1520 <fread@plt>
    c070:	mov	r5, r0
    c074:	cmp	r4, r9
    c078:	ble	bd00 <ReadUInt16Data.part.13+0xa0>
    c07c:	vldmia	r7!, {s15}
    c080:	add	r9, r9, #1
    c084:	vcvt.u32.f32	s15, s15
    c088:	vmov	r3, s15
    c08c:	strh	r3, [r8, #2]!
    c090:	b	c074 <ReadUInt16Data.part.13+0x414>
    c094:	sub	r3, r4, #256	; 0x100
    c098:	add	r8, sl, #512	; 0x200
    c09c:	mov	fp, r9
    c0a0:	mov	r5, r9
    c0a4:	str	r3, [sp, #12]
    c0a8:	ldr	r3, [sp, #4]
    c0ac:	mov	r2, #256	; 0x100
    c0b0:	mov	r1, r6
    c0b4:	mov	r0, r7
    c0b8:	ldr	r3, [r3]
    c0bc:	bl	1520 <fread@plt>
    c0c0:	add	r5, r5, r0
    c0c4:	sub	r3, r8, #512	; 0x200
    c0c8:	str	r7, [sp, #8]
    c0cc:	mov	r2, r7
    c0d0:	vldmia	r2!, {s15}
    c0d4:	vcvt.u32.f32	s15, s15
    c0d8:	vmov	r1, s15
    c0dc:	strh	r1, [r3], #2
    c0e0:	cmp	r3, r8
    c0e4:	bne	c0d0 <ReadUInt16Data.part.13+0x470>
    c0e8:	add	r8, r3, #512	; 0x200
    c0ec:	ldr	r3, [sp, #12]
    c0f0:	add	fp, fp, #256	; 0x100
    c0f4:	cmp	fp, r3
    c0f8:	blt	c0a8 <ReadUInt16Data.part.13+0x448>
    c0fc:	sub	r8, r4, #256	; 0x100
    c100:	sub	r8, r8, #1
    c104:	lsr	r8, r8, #8
    c108:	add	r8, r8, #1
    c10c:	lsl	r3, r8, #8
    c110:	cmp	r4, r3
    c114:	ble	bd00 <ReadUInt16Data.part.13+0xa0>
    c118:	sub	r4, r4, r3
    c11c:	ldr	r3, [sp, #4]
    c120:	mov	r1, r6
    c124:	mov	r2, r4
    c128:	mov	r0, r7
    c12c:	add	r8, sl, r8, lsl #9
    c130:	ldr	r3, [r3]
    c134:	bl	1520 <fread@plt>
    c138:	add	r5, r5, r0
    c13c:	cmp	r4, r9
    c140:	ble	bd00 <ReadUInt16Data.part.13+0xa0>
    c144:	ldr	r3, [sp, #8]
    c148:	add	r9, r9, #1
    c14c:	vldmia	r3!, {s15}
    c150:	vcvt.u32.f32	s15, s15
    c154:	str	r3, [sp, #8]
    c158:	vmov	r3, s15
    c15c:	strh	r3, [r8], #2
    c160:	b	c13c <ReadUInt16Data.part.13+0x4dc>
    c164:	ldr	r3, [sp, #4]
    c168:	add	r7, sp, #16
    c16c:	ldr	r8, [r3, #20]
    c170:	ldr	r3, [r3]
    c174:	cmp	r8, #0
    c178:	beq	c288 <ReadUInt16Data.part.13+0x628>
    c17c:	cmp	r4, #256	; 0x100
    c180:	bgt	c1bc <ReadUInt16Data.part.13+0x55c>
    c184:	mov	r1, r0
    c188:	mov	r2, r4
    c18c:	mov	r0, r7
    c190:	sub	sl, sl, #2
    c194:	bl	1520 <fread@plt>
    c198:	mov	r5, r0
    c19c:	mov	r9, #0
    c1a0:	cmp	r4, r9
    c1a4:	ble	bd00 <ReadUInt16Data.part.13+0xa0>
    c1a8:	add	r0, r7, r9, lsl #2
    c1ac:	add	r9, r9, #1
    c1b0:	bl	189c <Mat_int32Swap>
    c1b4:	strh	r0, [sl, #2]!
    c1b8:	b	c1a0 <ReadUInt16Data.part.13+0x540>
    c1bc:	mov	r8, #0
    c1c0:	sub	r3, r4, #256	; 0x100
    c1c4:	add	r9, sl, #512	; 0x200
    c1c8:	mov	r5, r8
    c1cc:	str	r3, [sp, #8]
    c1d0:	ldr	r3, [sp, #4]
    c1d4:	mov	r2, #256	; 0x100
    c1d8:	mov	r1, r6
    c1dc:	mov	r0, r7
    c1e0:	sub	fp, r9, #512	; 0x200
    c1e4:	ldr	r3, [r3]
    c1e8:	bl	1520 <fread@plt>
    c1ec:	add	r5, r5, r0
    c1f0:	mov	r3, r7
    c1f4:	mov	r0, r3
    c1f8:	str	r3, [sp, #12]
    c1fc:	bl	189c <Mat_int32Swap>
    c200:	ldr	r3, [sp, #12]
    c204:	strh	r0, [fp], #2
    c208:	cmp	fp, r9
    c20c:	add	r3, r3, #4
    c210:	bne	c1f4 <ReadUInt16Data.part.13+0x594>
    c214:	ldr	r3, [sp, #8]
    c218:	add	r8, r8, #256	; 0x100
    c21c:	add	r9, fp, #512	; 0x200
    c220:	cmp	r8, r3
    c224:	blt	c1d0 <ReadUInt16Data.part.13+0x570>
    c228:	sub	r8, r4, #256	; 0x100
    c22c:	sub	r8, r8, #1
    c230:	lsr	r8, r8, #8
    c234:	add	r8, r8, #1
    c238:	lsl	r3, r8, #8
    c23c:	cmp	r4, r3
    c240:	ble	bd00 <ReadUInt16Data.part.13+0xa0>
    c244:	sub	r4, r4, r3
    c248:	ldr	r3, [sp, #4]
    c24c:	mov	r1, r6
    c250:	mov	r2, r4
    c254:	mov	r0, r7
    c258:	add	r8, sl, r8, lsl #9
    c25c:	mov	r9, #0
    c260:	ldr	r3, [r3]
    c264:	bl	1520 <fread@plt>
    c268:	add	r5, r5, r0
    c26c:	cmp	r4, r9
    c270:	ble	bd00 <ReadUInt16Data.part.13+0xa0>
    c274:	add	r0, r7, r9, lsl #2
    c278:	add	r9, r9, #1
    c27c:	bl	189c <Mat_int32Swap>
    c280:	strh	r0, [r8], #2
    c284:	b	c26c <ReadUInt16Data.part.13+0x60c>
    c288:	cmp	r4, #256	; 0x100
    c28c:	bgt	c2c0 <ReadUInt16Data.part.13+0x660>
    c290:	mov	r1, r0
    c294:	mov	r2, r4
    c298:	mov	r0, r7
    c29c:	bl	1520 <fread@plt>
    c2a0:	mov	r5, r0
    c2a4:	sub	r3, sl, #2
    c2a8:	cmp	r4, r8
    c2ac:	ble	bd00 <ReadUInt16Data.part.13+0xa0>
    c2b0:	ldr	r2, [r7, r8, lsl #2]
    c2b4:	add	r8, r8, #1
    c2b8:	strh	r2, [r3, #2]!
    c2bc:	b	c2a8 <ReadUInt16Data.part.13+0x648>
    c2c0:	sub	r3, r4, #256	; 0x100
    c2c4:	add	fp, sl, #512	; 0x200
    c2c8:	mov	r9, r8
    c2cc:	mov	r5, r8
    c2d0:	str	r3, [sp, #8]
    c2d4:	ldr	r3, [sp, #4]
    c2d8:	mov	r2, #256	; 0x100
    c2dc:	mov	r1, r6
    c2e0:	mov	r0, r7
    c2e4:	ldr	r3, [r3]
    c2e8:	bl	1520 <fread@plt>
    c2ec:	add	r5, r5, r0
    c2f0:	mov	r2, r7
    c2f4:	sub	r3, fp, #512	; 0x200
    c2f8:	ldr	r1, [r2], #4
    c2fc:	strh	r1, [r3], #2
    c300:	cmp	r3, fp
    c304:	bne	c2f8 <ReadUInt16Data.part.13+0x698>
    c308:	add	fp, r3, #512	; 0x200
    c30c:	ldr	r3, [sp, #8]
    c310:	add	r9, r9, #256	; 0x100
    c314:	cmp	r9, r3
    c318:	blt	c2d4 <ReadUInt16Data.part.13+0x674>
    c31c:	sub	r9, r4, #256	; 0x100
    c320:	sub	r9, r9, #1
    c324:	lsr	r9, r9, #8
    c328:	add	r9, r9, #1
    c32c:	lsl	r3, r9, #8
    c330:	cmp	r4, r3
    c334:	ble	bd00 <ReadUInt16Data.part.13+0xa0>
    c338:	sub	r4, r4, r3
    c33c:	ldr	r3, [sp, #4]
    c340:	mov	r1, r6
    c344:	mov	r2, r4
    c348:	mov	r0, r7
    c34c:	add	r9, sl, r9, lsl #9
    c350:	ldr	r3, [r3]
    c354:	bl	1520 <fread@plt>
    c358:	add	r5, r5, r0
    c35c:	cmp	r4, r8
    c360:	ble	bd00 <ReadUInt16Data.part.13+0xa0>
    c364:	ldr	r3, [r7, r8, lsl #2]
    c368:	add	r8, r8, #1
    c36c:	strh	r3, [r9], #2
    c370:	b	c35c <ReadUInt16Data.part.13+0x6fc>
    c374:	ldr	r3, [sp, #4]
    c378:	add	r7, sp, #16
    c37c:	ldr	r8, [r3, #20]
    c380:	ldr	r3, [r3]
    c384:	cmp	r8, #0
    c388:	beq	c498 <ReadUInt16Data.part.13+0x838>
    c38c:	cmp	r4, #256	; 0x100
    c390:	bgt	c3cc <ReadUInt16Data.part.13+0x76c>
    c394:	mov	r1, r0
    c398:	mov	r2, r4
    c39c:	mov	r0, r7
    c3a0:	sub	sl, sl, #2
    c3a4:	bl	1520 <fread@plt>
    c3a8:	mov	r5, r0
    c3ac:	mov	r9, #0
    c3b0:	cmp	r4, r9
    c3b4:	ble	bd00 <ReadUInt16Data.part.13+0xa0>
    c3b8:	add	r0, r7, r9, lsl #2
    c3bc:	add	r9, r9, #1
    c3c0:	bl	18cc <Mat_uint32Swap>
    c3c4:	strh	r0, [sl, #2]!
    c3c8:	b	c3b0 <ReadUInt16Data.part.13+0x750>
    c3cc:	mov	r8, #0
    c3d0:	sub	r3, r4, #256	; 0x100
    c3d4:	add	r9, sl, #512	; 0x200
    c3d8:	mov	r5, r8
    c3dc:	str	r3, [sp, #8]
    c3e0:	ldr	r3, [sp, #4]
    c3e4:	mov	r2, #256	; 0x100
    c3e8:	mov	r1, r6
    c3ec:	mov	r0, r7
    c3f0:	sub	fp, r9, #512	; 0x200
    c3f4:	ldr	r3, [r3]
    c3f8:	bl	1520 <fread@plt>
    c3fc:	add	r5, r5, r0
    c400:	mov	r3, r7
    c404:	mov	r0, r3
    c408:	str	r3, [sp, #12]
    c40c:	bl	18cc <Mat_uint32Swap>
    c410:	ldr	r3, [sp, #12]
    c414:	strh	r0, [fp], #2
    c418:	cmp	fp, r9
    c41c:	add	r3, r3, #4
    c420:	bne	c404 <ReadUInt16Data.part.13+0x7a4>
    c424:	ldr	r3, [sp, #8]
    c428:	add	r8, r8, #256	; 0x100
    c42c:	add	r9, fp, #512	; 0x200
    c430:	cmp	r8, r3
    c434:	blt	c3e0 <ReadUInt16Data.part.13+0x780>
    c438:	sub	r8, r4, #256	; 0x100
    c43c:	sub	r8, r8, #1
    c440:	lsr	r8, r8, #8
    c444:	add	r8, r8, #1
    c448:	lsl	r3, r8, #8
    c44c:	cmp	r4, r3
    c450:	ble	bd00 <ReadUInt16Data.part.13+0xa0>
    c454:	sub	r4, r4, r3
    c458:	ldr	r3, [sp, #4]
    c45c:	mov	r1, r6
    c460:	mov	r2, r4
    c464:	mov	r0, r7
    c468:	add	r8, sl, r8, lsl #9
    c46c:	mov	r9, #0
    c470:	ldr	r3, [r3]
    c474:	bl	1520 <fread@plt>
    c478:	add	r5, r5, r0
    c47c:	cmp	r4, r9
    c480:	ble	bd00 <ReadUInt16Data.part.13+0xa0>
    c484:	add	r0, r7, r9, lsl #2
    c488:	add	r9, r9, #1
    c48c:	bl	18cc <Mat_uint32Swap>
    c490:	strh	r0, [r8], #2
    c494:	b	c47c <ReadUInt16Data.part.13+0x81c>
    c498:	cmp	r4, #256	; 0x100
    c49c:	bgt	c4d0 <ReadUInt16Data.part.13+0x870>
    c4a0:	mov	r1, r0
    c4a4:	mov	r2, r4
    c4a8:	mov	r0, r7
    c4ac:	bl	1520 <fread@plt>
    c4b0:	mov	r5, r0
    c4b4:	sub	r3, sl, #2
    c4b8:	cmp	r4, r8
    c4bc:	ble	bd00 <ReadUInt16Data.part.13+0xa0>
    c4c0:	ldr	r2, [r7, r8, lsl #2]
    c4c4:	add	r8, r8, #1
    c4c8:	strh	r2, [r3, #2]!
    c4cc:	b	c4b8 <ReadUInt16Data.part.13+0x858>
    c4d0:	sub	r3, r4, #256	; 0x100
    c4d4:	add	fp, sl, #512	; 0x200
    c4d8:	mov	r9, r8
    c4dc:	mov	r5, r8
    c4e0:	str	r3, [sp, #8]
    c4e4:	ldr	r3, [sp, #4]
    c4e8:	mov	r2, #256	; 0x100
    c4ec:	mov	r1, r6
    c4f0:	mov	r0, r7
    c4f4:	ldr	r3, [r3]
    c4f8:	bl	1520 <fread@plt>
    c4fc:	add	r5, r5, r0
    c500:	mov	r2, r7
    c504:	sub	r3, fp, #512	; 0x200
    c508:	ldr	r1, [r2], #4
    c50c:	strh	r1, [r3], #2
    c510:	cmp	r3, fp
    c514:	bne	c508 <ReadUInt16Data.part.13+0x8a8>
    c518:	add	fp, r3, #512	; 0x200
    c51c:	ldr	r3, [sp, #8]
    c520:	add	r9, r9, #256	; 0x100
    c524:	cmp	r9, r3
    c528:	blt	c4e4 <ReadUInt16Data.part.13+0x884>
    c52c:	sub	r9, r4, #256	; 0x100
    c530:	sub	r9, r9, #1
    c534:	lsr	r9, r9, #8
    c538:	add	r9, r9, #1
    c53c:	lsl	r3, r9, #8
    c540:	cmp	r4, r3
    c544:	ble	bd00 <ReadUInt16Data.part.13+0xa0>
    c548:	sub	r4, r4, r3
    c54c:	ldr	r3, [sp, #4]
    c550:	mov	r1, r6
    c554:	mov	r2, r4
    c558:	mov	r0, r7
    c55c:	add	r9, sl, r9, lsl #9
    c560:	ldr	r3, [r3]
    c564:	bl	1520 <fread@plt>
    c568:	add	r5, r5, r0
    c56c:	cmp	r4, r8
    c570:	ble	bd00 <ReadUInt16Data.part.13+0xa0>
    c574:	ldr	r3, [r7, r8, lsl #2]
    c578:	add	r8, r8, #1
    c57c:	strh	r3, [r9], #2
    c580:	b	c56c <ReadUInt16Data.part.13+0x90c>
    c584:	ldr	r3, [sp, #4]
    c588:	add	r7, sp, #16
    c58c:	ldr	r9, [r3, #20]
    c590:	ldr	r3, [r3]
    c594:	cmp	r9, #0
    c598:	beq	c698 <ReadUInt16Data.part.13+0xa38>
    c59c:	cmp	r4, #256	; 0x100
    c5a0:	movgt	r8, #0
    c5a4:	subgt	r9, r4, #256	; 0x100
    c5a8:	movgt	r5, r8
    c5ac:	bgt	c5e8 <ReadUInt16Data.part.13+0x988>
    c5b0:	mov	r1, r0
    c5b4:	mov	r2, r4
    c5b8:	mov	r0, r7
    c5bc:	sub	sl, sl, #2
    c5c0:	bl	1520 <fread@plt>
    c5c4:	mov	r5, r0
    c5c8:	mov	r9, #0
    c5cc:	cmp	r4, r9
    c5d0:	ble	bd00 <ReadUInt16Data.part.13+0xa0>
    c5d4:	add	r0, r7, r9, lsl #1
    c5d8:	add	r9, r9, #1
    c5dc:	bl	18fc <Mat_int16Swap>
    c5e0:	strh	r0, [sl, #2]!
    c5e4:	b	c5cc <ReadUInt16Data.part.13+0x96c>
    c5e8:	ldr	r3, [sp, #4]
    c5ec:	mov	r2, #256	; 0x100
    c5f0:	mov	r1, r6
    c5f4:	mov	r0, r7
    c5f8:	add	fp, sl, r8, lsl #1
    c5fc:	ldr	r3, [r3]
    c600:	bl	1520 <fread@plt>
    c604:	add	r5, r5, r0
    c608:	mov	r3, #0
    c60c:	add	r0, r7, r3
    c610:	str	r3, [sp, #8]
    c614:	bl	18fc <Mat_int16Swap>
    c618:	ldr	r3, [sp, #8]
    c61c:	strh	r0, [fp], #2
    c620:	add	r3, r3, #2
    c624:	cmp	r3, #512	; 0x200
    c628:	bne	c60c <ReadUInt16Data.part.13+0x9ac>
    c62c:	add	r8, r8, #256	; 0x100
    c630:	cmp	r8, r9
    c634:	blt	c5e8 <ReadUInt16Data.part.13+0x988>
    c638:	sub	r8, r4, #256	; 0x100
    c63c:	sub	r8, r8, #1
    c640:	lsr	r8, r8, #8
    c644:	add	r8, r8, #1
    c648:	lsl	r3, r8, #8
    c64c:	cmp	r4, r3
    c650:	ble	bd00 <ReadUInt16Data.part.13+0xa0>
    c654:	sub	r4, r4, r3
    c658:	ldr	r3, [sp, #4]
    c65c:	mov	r1, r6
    c660:	mov	r2, r4
    c664:	mov	r0, r7
    c668:	add	r8, sl, r8, lsl #9
    c66c:	mov	r9, #0
    c670:	ldr	r3, [r3]
    c674:	bl	1520 <fread@plt>
    c678:	add	r5, r5, r0
    c67c:	cmp	r4, r9
    c680:	ble	bd00 <ReadUInt16Data.part.13+0xa0>
    c684:	add	r0, r7, r9, lsl #1
    c688:	add	r9, r9, #1
    c68c:	bl	18fc <Mat_int16Swap>
    c690:	strh	r0, [r8], #2
    c694:	b	c67c <ReadUInt16Data.part.13+0xa1c>
    c698:	cmp	r4, #256	; 0x100
    c69c:	bgt	c6d0 <ReadUInt16Data.part.13+0xa70>
    c6a0:	mov	r1, r0
    c6a4:	mov	r2, r4
    c6a8:	mov	r0, r7
    c6ac:	sub	r8, sl, #2
    c6b0:	bl	1520 <fread@plt>
    c6b4:	mov	r5, r0
    c6b8:	cmp	r4, r9
    c6bc:	ble	bd00 <ReadUInt16Data.part.13+0xa0>
    c6c0:	ldrsh	r3, [r7], #2
    c6c4:	add	r9, r9, #1
    c6c8:	strh	r3, [r8, #2]!
    c6cc:	b	c6b8 <ReadUInt16Data.part.13+0xa58>
    c6d0:	sub	r3, r4, #256	; 0x100
    c6d4:	add	r8, sl, #512	; 0x200
    c6d8:	mov	fp, r9
    c6dc:	mov	r5, r9
    c6e0:	str	r3, [sp, #12]
    c6e4:	ldr	r3, [sp, #4]
    c6e8:	mov	r2, #256	; 0x100
    c6ec:	mov	r1, r6
    c6f0:	mov	r0, r7
    c6f4:	ldr	r3, [r3]
    c6f8:	bl	1520 <fread@plt>
    c6fc:	add	r5, r5, r0
    c700:	sub	r3, r8, #512	; 0x200
    c704:	str	r7, [sp, #8]
    c708:	mov	r2, r7
    c70c:	ldrsh	r1, [r2], #2
    c710:	strh	r1, [r3], #2
    c714:	cmp	r3, r8
    c718:	bne	c70c <ReadUInt16Data.part.13+0xaac>
    c71c:	add	r8, r3, #512	; 0x200
    c720:	ldr	r3, [sp, #12]
    c724:	add	fp, fp, #256	; 0x100
    c728:	cmp	fp, r3
    c72c:	blt	c6e4 <ReadUInt16Data.part.13+0xa84>
    c730:	sub	r8, r4, #256	; 0x100
    c734:	sub	r8, r8, #1
    c738:	lsr	r8, r8, #8
    c73c:	add	r8, r8, #1
    c740:	lsl	r3, r8, #8
    c744:	cmp	r4, r3
    c748:	ble	bd00 <ReadUInt16Data.part.13+0xa0>
    c74c:	sub	r4, r4, r3
    c750:	ldr	r3, [sp, #4]
    c754:	mov	r1, r6
    c758:	mov	r2, r4
    c75c:	mov	r0, r7
    c760:	add	r8, sl, r8, lsl #9
    c764:	ldr	r3, [r3]
    c768:	bl	1520 <fread@plt>
    c76c:	add	r5, r5, r0
    c770:	cmp	r4, r9
    c774:	ble	bd00 <ReadUInt16Data.part.13+0xa0>
    c778:	ldr	r2, [sp, #8]
    c77c:	add	r9, r9, #1
    c780:	ldrsh	r3, [r2], #2
    c784:	strh	r3, [r8], #2
    c788:	str	r2, [sp, #8]
    c78c:	b	c770 <ReadUInt16Data.part.13+0xb10>
    c790:	ldr	r3, [sp, #4]
    c794:	add	r7, sp, #16
    c798:	ldr	r9, [r3, #20]
    c79c:	ldr	r3, [r3]
    c7a0:	cmp	r9, #0
    c7a4:	beq	c8a4 <ReadUInt16Data.part.13+0xc44>
    c7a8:	cmp	r4, #256	; 0x100
    c7ac:	movgt	r8, #0
    c7b0:	subgt	r9, r4, #256	; 0x100
    c7b4:	movgt	r5, r8
    c7b8:	bgt	c7f4 <ReadUInt16Data.part.13+0xb94>
    c7bc:	mov	r1, r0
    c7c0:	mov	r2, r4
    c7c4:	mov	r0, r7
    c7c8:	sub	sl, sl, #2
    c7cc:	bl	1520 <fread@plt>
    c7d0:	mov	r5, r0
    c7d4:	mov	r9, #0
    c7d8:	cmp	r4, r9
    c7dc:	ble	bd00 <ReadUInt16Data.part.13+0xa0>
    c7e0:	add	r0, r7, r9, lsl #1
    c7e4:	add	r9, r9, #1
    c7e8:	bl	191c <Mat_uint16Swap>
    c7ec:	strh	r0, [sl, #2]!
    c7f0:	b	c7d8 <ReadUInt16Data.part.13+0xb78>
    c7f4:	ldr	r3, [sp, #4]
    c7f8:	mov	r2, #256	; 0x100
    c7fc:	mov	r1, r6
    c800:	mov	r0, r7
    c804:	add	fp, sl, r8, lsl #1
    c808:	ldr	r3, [r3]
    c80c:	bl	1520 <fread@plt>
    c810:	add	r5, r5, r0
    c814:	mov	r3, #0
    c818:	add	r0, r7, r3
    c81c:	str	r3, [sp, #8]
    c820:	bl	191c <Mat_uint16Swap>
    c824:	ldr	r3, [sp, #8]
    c828:	strh	r0, [fp], #2
    c82c:	add	r3, r3, #2
    c830:	cmp	r3, #512	; 0x200
    c834:	bne	c818 <ReadUInt16Data.part.13+0xbb8>
    c838:	add	r8, r8, #256	; 0x100
    c83c:	cmp	r8, r9
    c840:	blt	c7f4 <ReadUInt16Data.part.13+0xb94>
    c844:	sub	r8, r4, #256	; 0x100
    c848:	sub	r8, r8, #1
    c84c:	lsr	r8, r8, #8
    c850:	add	r8, r8, #1
    c854:	lsl	r3, r8, #8
    c858:	cmp	r4, r3
    c85c:	ble	bd00 <ReadUInt16Data.part.13+0xa0>
    c860:	sub	r4, r4, r3
    c864:	ldr	r3, [sp, #4]
    c868:	mov	r1, r6
    c86c:	mov	r2, r4
    c870:	mov	r0, r7
    c874:	add	r8, sl, r8, lsl #9
    c878:	mov	r9, #0
    c87c:	ldr	r3, [r3]
    c880:	bl	1520 <fread@plt>
    c884:	add	r5, r5, r0
    c888:	cmp	r4, r9
    c88c:	ble	bd00 <ReadUInt16Data.part.13+0xa0>
    c890:	add	r0, r7, r9, lsl #1
    c894:	add	r9, r9, #1
    c898:	bl	191c <Mat_uint16Swap>
    c89c:	strh	r0, [r8], #2
    c8a0:	b	c888 <ReadUInt16Data.part.13+0xc28>
    c8a4:	cmp	r4, #256	; 0x100
    c8a8:	bgt	c8dc <ReadUInt16Data.part.13+0xc7c>
    c8ac:	mov	r1, r0
    c8b0:	mov	r2, r4
    c8b4:	mov	r0, r7
    c8b8:	sub	r8, sl, #2
    c8bc:	bl	1520 <fread@plt>
    c8c0:	mov	r5, r0
    c8c4:	cmp	r4, r9
    c8c8:	ble	bd00 <ReadUInt16Data.part.13+0xa0>
    c8cc:	ldrh	r3, [r7], #2
    c8d0:	add	r9, r9, #1
    c8d4:	strh	r3, [r8, #2]!
    c8d8:	b	c8c4 <ReadUInt16Data.part.13+0xc64>
    c8dc:	sub	r3, r4, #256	; 0x100
    c8e0:	add	r8, sl, #512	; 0x200
    c8e4:	mov	fp, r9
    c8e8:	mov	r5, r9
    c8ec:	str	r3, [sp, #12]
    c8f0:	ldr	r3, [sp, #4]
    c8f4:	mov	r2, #256	; 0x100
    c8f8:	mov	r1, r6
    c8fc:	mov	r0, r7
    c900:	ldr	r3, [r3]
    c904:	bl	1520 <fread@plt>
    c908:	add	r5, r5, r0
    c90c:	sub	r3, r8, #512	; 0x200
    c910:	str	r7, [sp, #8]
    c914:	mov	r2, r7
    c918:	ldrh	r1, [r2], #2
    c91c:	strh	r1, [r3], #2
    c920:	cmp	r3, r8
    c924:	bne	c918 <ReadUInt16Data.part.13+0xcb8>
    c928:	add	r8, r3, #512	; 0x200
    c92c:	ldr	r3, [sp, #12]
    c930:	add	fp, fp, #256	; 0x100
    c934:	cmp	fp, r3
    c938:	blt	c8f0 <ReadUInt16Data.part.13+0xc90>
    c93c:	sub	r8, r4, #256	; 0x100
    c940:	sub	r8, r8, #1
    c944:	lsr	r8, r8, #8
    c948:	add	r8, r8, #1
    c94c:	lsl	r3, r8, #8
    c950:	cmp	r4, r3
    c954:	ble	bd00 <ReadUInt16Data.part.13+0xa0>
    c958:	sub	r4, r4, r3
    c95c:	ldr	r3, [sp, #4]
    c960:	mov	r1, r6
    c964:	mov	r2, r4
    c968:	mov	r0, r7
    c96c:	add	r8, sl, r8, lsl #9
    c970:	ldr	r3, [r3]
    c974:	bl	1520 <fread@plt>
    c978:	add	r5, r5, r0
    c97c:	cmp	r4, r9
    c980:	ble	bd00 <ReadUInt16Data.part.13+0xa0>
    c984:	ldr	r2, [sp, #8]
    c988:	add	r9, r9, #1
    c98c:	ldrh	r3, [r2], #2
    c990:	strh	r3, [r8], #2
    c994:	str	r2, [sp, #8]
    c998:	b	c97c <ReadUInt16Data.part.13+0xd1c>
    c99c:	cmp	r4, #256	; 0x100
    c9a0:	add	r7, sp, #16
    c9a4:	bgt	c9e4 <ReadUInt16Data.part.13+0xd84>
    c9a8:	ldr	r3, [sp, #4]
    c9ac:	mov	r1, r0
    c9b0:	mov	r2, r4
    c9b4:	mov	r0, r7
    c9b8:	sub	r8, sl, #2
    c9bc:	ldr	r3, [r3]
    c9c0:	bl	1520 <fread@plt>
    c9c4:	mov	r5, r0
    c9c8:	mov	r3, #0
    c9cc:	cmp	r4, r3
    c9d0:	ble	bd00 <ReadUInt16Data.part.13+0xa0>
    c9d4:	ldrsb	r2, [r7, r3]
    c9d8:	add	r3, r3, #1
    c9dc:	strh	r2, [r8, #2]!
    c9e0:	b	c9cc <ReadUInt16Data.part.13+0xd6c>
    c9e4:	mov	r8, #0
    c9e8:	add	r9, sl, #512	; 0x200
    c9ec:	mov	r5, r8
    c9f0:	sub	fp, r4, #256	; 0x100
    c9f4:	ldr	r3, [sp, #4]
    c9f8:	mov	r2, #256	; 0x100
    c9fc:	mov	r1, r6
    ca00:	mov	r0, r7
    ca04:	ldr	r3, [r3]
    ca08:	bl	1520 <fread@plt>
    ca0c:	add	r5, r5, r0
    ca10:	mov	r2, r7
    ca14:	sub	r3, r9, #512	; 0x200
    ca18:	ldrsb	r1, [r2], #1
    ca1c:	strh	r1, [r3], #2
    ca20:	cmp	r3, r9
    ca24:	bne	ca18 <ReadUInt16Data.part.13+0xdb8>
    ca28:	add	r8, r8, #256	; 0x100
    ca2c:	add	r9, r3, #512	; 0x200
    ca30:	cmp	r8, fp
    ca34:	blt	c9f4 <ReadUInt16Data.part.13+0xd94>
    ca38:	sub	r8, r4, #256	; 0x100
    ca3c:	sub	r8, r8, #1
    ca40:	lsr	r8, r8, #8
    ca44:	add	r8, r8, #1
    ca48:	lsl	r3, r8, #8
    ca4c:	cmp	r4, r3
    ca50:	ble	bd00 <ReadUInt16Data.part.13+0xa0>
    ca54:	sub	r4, r4, r3
    ca58:	ldr	r3, [sp, #4]
    ca5c:	mov	r1, r6
    ca60:	mov	r2, r4
    ca64:	mov	r0, r7
    ca68:	add	r8, sl, r8, lsl #9
    ca6c:	ldr	r3, [r3]
    ca70:	bl	1520 <fread@plt>
    ca74:	add	r5, r5, r0
    ca78:	mov	r3, #0
    ca7c:	cmp	r4, r3
    ca80:	ble	bd00 <ReadUInt16Data.part.13+0xa0>
    ca84:	ldrsb	r2, [r7, r3]
    ca88:	add	r3, r3, #1
    ca8c:	strh	r2, [r8], #2
    ca90:	b	ca7c <ReadUInt16Data.part.13+0xe1c>
    ca94:	cmp	r4, #256	; 0x100
    ca98:	add	r7, sp, #16
    ca9c:	bgt	cadc <ReadUInt16Data.part.13+0xe7c>
    caa0:	ldr	r3, [sp, #4]
    caa4:	mov	r1, r0
    caa8:	mov	r2, r4
    caac:	mov	r0, r7
    cab0:	sub	r8, sl, #2
    cab4:	ldr	r3, [r3]
    cab8:	bl	1520 <fread@plt>
    cabc:	mov	r5, r0
    cac0:	mov	r3, #0
    cac4:	cmp	r4, r3
    cac8:	ble	bd00 <ReadUInt16Data.part.13+0xa0>
    cacc:	ldrb	r2, [r7, r3]
    cad0:	add	r3, r3, #1
    cad4:	strh	r2, [r8, #2]!
    cad8:	b	cac4 <ReadUInt16Data.part.13+0xe64>
    cadc:	mov	r8, #0
    cae0:	add	r9, sl, #512	; 0x200
    cae4:	mov	r5, r8
    cae8:	sub	fp, r4, #256	; 0x100
    caec:	ldr	r3, [sp, #4]
    caf0:	mov	r2, #256	; 0x100
    caf4:	mov	r1, r6
    caf8:	mov	r0, r7
    cafc:	ldr	r3, [r3]
    cb00:	bl	1520 <fread@plt>
    cb04:	add	r5, r5, r0
    cb08:	mov	r2, r7
    cb0c:	sub	r3, r9, #512	; 0x200
    cb10:	ldrb	r1, [r2], #1
    cb14:	strh	r1, [r3], #2
    cb18:	cmp	r3, r9
    cb1c:	bne	cb10 <ReadUInt16Data.part.13+0xeb0>
    cb20:	add	r8, r8, #256	; 0x100
    cb24:	add	r9, r3, #512	; 0x200
    cb28:	cmp	r8, fp
    cb2c:	blt	caec <ReadUInt16Data.part.13+0xe8c>
    cb30:	sub	r8, r4, #256	; 0x100
    cb34:	sub	r8, r8, #1
    cb38:	lsr	r8, r8, #8
    cb3c:	add	r8, r8, #1
    cb40:	lsl	r3, r8, #8
    cb44:	cmp	r4, r3
    cb48:	ble	bd00 <ReadUInt16Data.part.13+0xa0>
    cb4c:	sub	r4, r4, r3
    cb50:	ldr	r3, [sp, #4]
    cb54:	mov	r1, r6
    cb58:	mov	r2, r4
    cb5c:	mov	r0, r7
    cb60:	add	r8, sl, r8, lsl #9
    cb64:	ldr	r3, [r3]
    cb68:	bl	1520 <fread@plt>
    cb6c:	add	r5, r5, r0
    cb70:	mov	r3, #0
    cb74:	cmp	r4, r3
    cb78:	ble	bd00 <ReadUInt16Data.part.13+0xa0>
    cb7c:	ldrb	r2, [r7, r3]
    cb80:	add	r3, r3, #1
    cb84:	strh	r2, [r8], #2
    cb88:	b	cb74 <ReadUInt16Data.part.13+0xf14>
    cb8c:	cmp	r5, #12
    cb90:	bne	cdb0 <ReadUInt16Data.part.13+0x1150>
    cb94:	ldr	r3, [sp, #4]
    cb98:	add	r7, sp, #16
    cb9c:	ldr	r9, [r3, #20]
    cba0:	ldr	r3, [r3]
    cba4:	cmp	r9, #0
    cba8:	beq	ccb8 <ReadUInt16Data.part.13+0x1058>
    cbac:	cmp	r4, #256	; 0x100
    cbb0:	bgt	cbec <ReadUInt16Data.part.13+0xf8c>
    cbb4:	mov	r1, r0
    cbb8:	mov	r2, r4
    cbbc:	mov	r0, r7
    cbc0:	sub	sl, sl, #2
    cbc4:	bl	1520 <fread@plt>
    cbc8:	mov	r5, r0
    cbcc:	mov	r9, #0
    cbd0:	cmp	r4, r9
    cbd4:	ble	bd00 <ReadUInt16Data.part.13+0xa0>
    cbd8:	add	r0, r7, r9, lsl #3
    cbdc:	add	r9, r9, #1
    cbe0:	bl	17ec <Mat_int64Swap>
    cbe4:	strh	r0, [sl, #2]!
    cbe8:	b	cbd0 <ReadUInt16Data.part.13+0xf70>
    cbec:	mov	r8, #0
    cbf0:	sub	r3, r4, #256	; 0x100
    cbf4:	add	r9, sl, #512	; 0x200
    cbf8:	mov	r5, r8
    cbfc:	str	r3, [sp, #8]
    cc00:	ldr	r3, [sp, #4]
    cc04:	mov	r2, #256	; 0x100
    cc08:	mov	r1, r6
    cc0c:	mov	r0, r7
    cc10:	sub	fp, r9, #512	; 0x200
    cc14:	ldr	r3, [r3]
    cc18:	bl	1520 <fread@plt>
    cc1c:	add	r5, r5, r0
    cc20:	mov	r3, r7
    cc24:	mov	r0, r3
    cc28:	str	r3, [sp, #12]
    cc2c:	bl	17ec <Mat_int64Swap>
    cc30:	ldr	r3, [sp, #12]
    cc34:	strh	r0, [fp], #2
    cc38:	cmp	r9, fp
    cc3c:	add	r3, r3, #8
    cc40:	bne	cc24 <ReadUInt16Data.part.13+0xfc4>
    cc44:	ldr	r3, [sp, #8]
    cc48:	add	r8, r8, #256	; 0x100
    cc4c:	add	r9, r9, #512	; 0x200
    cc50:	cmp	r8, r3
    cc54:	blt	cc00 <ReadUInt16Data.part.13+0xfa0>
    cc58:	sub	r8, r4, #256	; 0x100
    cc5c:	sub	r8, r8, #1
    cc60:	lsr	r8, r8, #8
    cc64:	add	r8, r8, #1
    cc68:	lsl	r3, r8, #8
    cc6c:	cmp	r4, r3
    cc70:	ble	bd00 <ReadUInt16Data.part.13+0xa0>
    cc74:	sub	r4, r4, r3
    cc78:	ldr	r3, [sp, #4]
    cc7c:	mov	r1, r6
    cc80:	mov	r2, r4
    cc84:	mov	r0, r7
    cc88:	add	r8, sl, r8, lsl #9
    cc8c:	mov	r9, #0
    cc90:	ldr	r3, [r3]
    cc94:	bl	1520 <fread@plt>
    cc98:	add	r5, r5, r0
    cc9c:	cmp	r4, r9
    cca0:	ble	bd00 <ReadUInt16Data.part.13+0xa0>
    cca4:	add	r0, r7, r9, lsl #3
    cca8:	add	r9, r9, #1
    ccac:	bl	17ec <Mat_int64Swap>
    ccb0:	strh	r0, [r8], #2
    ccb4:	b	cc9c <ReadUInt16Data.part.13+0x103c>
    ccb8:	cmp	r4, #256	; 0x100
    ccbc:	bgt	ccf0 <ReadUInt16Data.part.13+0x1090>
    ccc0:	mov	r1, r0
    ccc4:	mov	r2, r4
    ccc8:	mov	r0, r7
    cccc:	sub	r8, sl, #2
    ccd0:	bl	1520 <fread@plt>
    ccd4:	mov	r5, r0
    ccd8:	cmp	r4, r9
    ccdc:	ble	bd00 <ReadUInt16Data.part.13+0xa0>
    cce0:	ldr	r3, [r7], #8
    cce4:	add	r9, r9, #1
    cce8:	strh	r3, [r8, #2]!
    ccec:	b	ccd8 <ReadUInt16Data.part.13+0x1078>
    ccf0:	sub	r3, r4, #256	; 0x100
    ccf4:	add	r8, sl, #512	; 0x200
    ccf8:	mov	fp, r9
    ccfc:	mov	r5, r9
    cd00:	str	r3, [sp, #12]
    cd04:	ldr	r3, [sp, #4]
    cd08:	mov	r2, #256	; 0x100
    cd0c:	mov	r1, r6
    cd10:	mov	r0, r7
    cd14:	ldr	r3, [r3]
    cd18:	bl	1520 <fread@plt>
    cd1c:	add	r5, r5, r0
    cd20:	sub	r3, r8, #512	; 0x200
    cd24:	str	r7, [sp, #8]
    cd28:	mov	r2, r7
    cd2c:	ldr	r1, [r2], #8
    cd30:	strh	r1, [r3], #2
    cd34:	cmp	r3, r8
    cd38:	bne	cd2c <ReadUInt16Data.part.13+0x10cc>
    cd3c:	add	r8, r3, #512	; 0x200
    cd40:	ldr	r3, [sp, #12]
    cd44:	add	fp, fp, #256	; 0x100
    cd48:	cmp	fp, r3
    cd4c:	blt	cd04 <ReadUInt16Data.part.13+0x10a4>
    cd50:	sub	r8, r4, #256	; 0x100
    cd54:	sub	r8, r8, #1
    cd58:	lsr	r8, r8, #8
    cd5c:	add	r8, r8, #1
    cd60:	lsl	r3, r8, #8
    cd64:	cmp	r4, r3
    cd68:	ble	bd00 <ReadUInt16Data.part.13+0xa0>
    cd6c:	sub	r4, r4, r3
    cd70:	ldr	r3, [sp, #4]
    cd74:	mov	r1, r6
    cd78:	mov	r2, r4
    cd7c:	mov	r0, r7
    cd80:	add	r8, sl, r8, lsl #9
    cd84:	ldr	r3, [r3]
    cd88:	bl	1520 <fread@plt>
    cd8c:	add	r5, r5, r0
    cd90:	cmp	r4, r9
    cd94:	ble	bd00 <ReadUInt16Data.part.13+0xa0>
    cd98:	ldr	r2, [sp, #8]
    cd9c:	add	r9, r9, #1
    cda0:	ldr	r3, [r2], #8
    cda4:	strh	r3, [r8], #2
    cda8:	str	r2, [sp, #8]
    cdac:	b	cd90 <ReadUInt16Data.part.13+0x1130>
    cdb0:	cmp	r5, #13
    cdb4:	movne	r5, #0
    cdb8:	bne	bd00 <ReadUInt16Data.part.13+0xa0>
    cdbc:	ldr	r3, [sp, #4]
    cdc0:	add	r7, sp, #16
    cdc4:	ldr	r9, [r3, #20]
    cdc8:	ldr	r3, [r3]
    cdcc:	cmp	r9, #0
    cdd0:	beq	cee0 <ReadUInt16Data.part.13+0x1280>
    cdd4:	cmp	r4, #256	; 0x100
    cdd8:	bgt	ce14 <ReadUInt16Data.part.13+0x11b4>
    cddc:	mov	r1, r0
    cde0:	mov	r2, r4
    cde4:	mov	r0, r7
    cde8:	sub	sl, sl, #2
    cdec:	bl	1520 <fread@plt>
    cdf0:	mov	r5, r0
    cdf4:	mov	r9, #0
    cdf8:	cmp	r4, r9
    cdfc:	ble	bd00 <ReadUInt16Data.part.13+0xa0>
    ce00:	add	r0, r7, r9, lsl #3
    ce04:	add	r9, r9, #1
    ce08:	bl	1844 <Mat_uint64Swap>
    ce0c:	strh	r0, [sl, #2]!
    ce10:	b	cdf8 <ReadUInt16Data.part.13+0x1198>
    ce14:	mov	r8, #0
    ce18:	sub	r3, r4, #256	; 0x100
    ce1c:	add	r9, sl, #512	; 0x200
    ce20:	mov	r5, r8
    ce24:	str	r3, [sp, #8]
    ce28:	ldr	r3, [sp, #4]
    ce2c:	mov	r2, #256	; 0x100
    ce30:	mov	r1, r6
    ce34:	mov	r0, r7
    ce38:	sub	fp, r9, #512	; 0x200
    ce3c:	ldr	r3, [r3]
    ce40:	bl	1520 <fread@plt>
    ce44:	add	r5, r5, r0
    ce48:	mov	r3, r7
    ce4c:	mov	r0, r3
    ce50:	str	r3, [sp, #12]
    ce54:	bl	1844 <Mat_uint64Swap>
    ce58:	ldr	r3, [sp, #12]
    ce5c:	strh	r0, [fp], #2
    ce60:	cmp	fp, r9
    ce64:	add	r3, r3, #8
    ce68:	bne	ce4c <ReadUInt16Data.part.13+0x11ec>
    ce6c:	ldr	r3, [sp, #8]
    ce70:	add	r8, r8, #256	; 0x100
    ce74:	add	r9, fp, #512	; 0x200
    ce78:	cmp	r8, r3
    ce7c:	blt	ce28 <ReadUInt16Data.part.13+0x11c8>
    ce80:	sub	r8, r4, #256	; 0x100
    ce84:	sub	r8, r8, #1
    ce88:	lsr	r8, r8, #8
    ce8c:	add	r8, r8, #1
    ce90:	lsl	r3, r8, #8
    ce94:	cmp	r4, r3
    ce98:	ble	bd00 <ReadUInt16Data.part.13+0xa0>
    ce9c:	sub	r4, r4, r3
    cea0:	ldr	r3, [sp, #4]
    cea4:	mov	r1, r6
    cea8:	mov	r2, r4
    ceac:	mov	r0, r7
    ceb0:	add	r8, sl, r8, lsl #9
    ceb4:	mov	r9, #0
    ceb8:	ldr	r3, [r3]
    cebc:	bl	1520 <fread@plt>
    cec0:	add	r5, r5, r0
    cec4:	cmp	r4, r9
    cec8:	ble	bd00 <ReadUInt16Data.part.13+0xa0>
    cecc:	add	r0, r7, r9, lsl #3
    ced0:	add	r9, r9, #1
    ced4:	bl	1844 <Mat_uint64Swap>
    ced8:	strh	r0, [r8], #2
    cedc:	b	cec4 <ReadUInt16Data.part.13+0x1264>
    cee0:	cmp	r4, #256	; 0x100
    cee4:	bgt	cf18 <ReadUInt16Data.part.13+0x12b8>
    cee8:	mov	r1, r0
    ceec:	mov	r2, r4
    cef0:	mov	r0, r7
    cef4:	sub	r8, sl, #2
    cef8:	bl	1520 <fread@plt>
    cefc:	mov	r5, r0
    cf00:	cmp	r4, r9
    cf04:	ble	bd00 <ReadUInt16Data.part.13+0xa0>
    cf08:	ldr	r3, [r7], #8
    cf0c:	add	r9, r9, #1
    cf10:	strh	r3, [r8, #2]!
    cf14:	b	cf00 <ReadUInt16Data.part.13+0x12a0>
    cf18:	sub	r3, r4, #256	; 0x100
    cf1c:	add	r8, sl, #512	; 0x200
    cf20:	mov	fp, r9
    cf24:	mov	r5, r9
    cf28:	str	r3, [sp, #12]
    cf2c:	ldr	r3, [sp, #4]
    cf30:	mov	r2, #256	; 0x100
    cf34:	mov	r1, r6
    cf38:	mov	r0, r7
    cf3c:	ldr	r3, [r3]
    cf40:	bl	1520 <fread@plt>
    cf44:	add	r5, r5, r0
    cf48:	sub	r3, r8, #512	; 0x200
    cf4c:	str	r7, [sp, #8]
    cf50:	mov	r2, r7
    cf54:	ldr	r1, [r2], #8
    cf58:	strh	r1, [r3], #2
    cf5c:	cmp	r3, r8
    cf60:	bne	cf54 <ReadUInt16Data.part.13+0x12f4>
    cf64:	add	r8, r3, #512	; 0x200
    cf68:	ldr	r3, [sp, #12]
    cf6c:	add	fp, fp, #256	; 0x100
    cf70:	cmp	fp, r3
    cf74:	blt	cf2c <ReadUInt16Data.part.13+0x12cc>
    cf78:	sub	r8, r4, #256	; 0x100
    cf7c:	sub	r8, r8, #1
    cf80:	lsr	r8, r8, #8
    cf84:	add	r8, r8, #1
    cf88:	lsl	r3, r8, #8
    cf8c:	cmp	r4, r3
    cf90:	ble	bd00 <ReadUInt16Data.part.13+0xa0>
    cf94:	sub	r4, r4, r3
    cf98:	ldr	r3, [sp, #4]
    cf9c:	mov	r1, r6
    cfa0:	mov	r2, r4
    cfa4:	mov	r0, r7
    cfa8:	add	r8, sl, r8, lsl #9
    cfac:	ldr	r3, [r3]
    cfb0:	bl	1520 <fread@plt>
    cfb4:	add	r5, r5, r0
    cfb8:	cmp	r4, r9
    cfbc:	ble	bd00 <ReadUInt16Data.part.13+0xa0>
    cfc0:	ldr	r2, [sp, #8]
    cfc4:	add	r9, r9, #1
    cfc8:	ldr	r3, [r2], #8
    cfcc:	strh	r3, [r8], #2
    cfd0:	str	r2, [sp, #8]
    cfd4:	b	cfb8 <ReadUInt16Data.part.13+0x1358>

0000cfd8 <ReadInt8Data.part.15>:
    cfd8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    cfdc:	sub	sp, sp, #2064	; 0x810
    cfe0:	mov	r5, r2
    cfe4:	sub	sp, sp, #4
    cfe8:	mov	fp, r0
    cfec:	mov	r0, r2
    cff0:	mov	r4, r3
    cff4:	mov	r6, r1
    cff8:	bl	1598 <Mat_SizeOf@plt>
    cffc:	sub	r3, r5, #1
    d000:	mov	r7, r0
    d004:	cmp	r3, #8
    d008:	addls	pc, pc, r3, lsl #2
    d00c:	b	de84 <ReadInt8Data.part.15+0xeac>
    d010:	b	dca4 <ReadInt8Data.part.15+0xccc>
    d014:	b	dd94 <ReadInt8Data.part.15+0xdbc>
    d018:	b	d89c <ReadInt8Data.part.15+0x8c4>
    d01c:	b	daa0 <ReadInt8Data.part.15+0xac8>
    d020:	b	d4ac <ReadInt8Data.part.15+0x4d4>
    d024:	b	d6a4 <ReadInt8Data.part.15+0x6cc>
    d028:	b	d278 <ReadInt8Data.part.15+0x2a0>
    d02c:	b	de84 <ReadInt8Data.part.15+0xeac>
    d030:	b	d034 <ReadInt8Data.part.15+0x5c>
    d034:	add	r8, sp, #16
    d038:	ldr	r3, [fp]
    d03c:	ldr	sl, [fp, #20]
    d040:	cmp	sl, #0
    d044:	beq	d170 <ReadInt8Data.part.15+0x198>
    d048:	cmp	r4, #256	; 0x100
    d04c:	bgt	d09c <ReadInt8Data.part.15+0xc4>
    d050:	mov	r1, r0
    d054:	mov	r2, r4
    d058:	mov	r0, r8
    d05c:	mov	r9, #0
    d060:	bl	1520 <fread@plt>
    d064:	mov	r5, r0
    d068:	cmp	r4, r9
    d06c:	bgt	d080 <ReadInt8Data.part.15+0xa8>
    d070:	mul	r0, r7, r5
    d074:	add	sp, sp, #2064	; 0x810
    d078:	add	sp, sp, #4
    d07c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    d080:	add	r0, r8, r9, lsl #3
    d084:	bl	196c <Mat_doubleSwap>
    d088:	vcvt.s32.f64	s15, d0
    d08c:	vmov	r3, s15
    d090:	strb	r3, [r6, r9]
    d094:	add	r9, r9, #1
    d098:	b	d068 <ReadInt8Data.part.15+0x90>
    d09c:	mvn	sl, #255	; 0xff
    d0a0:	sub	r3, r4, #256	; 0x100
    d0a4:	add	r9, r6, #256	; 0x100
    d0a8:	mov	r5, #0
    d0ac:	sub	sl, sl, r6
    d0b0:	str	r3, [sp, #4]
    d0b4:	mov	r2, #256	; 0x100
    d0b8:	mov	r1, r7
    d0bc:	ldr	r3, [fp]
    d0c0:	mov	r0, r8
    d0c4:	bl	1520 <fread@plt>
    d0c8:	add	r5, r5, r0
    d0cc:	sub	r3, r9, #256	; 0x100
    d0d0:	mov	r2, r8
    d0d4:	mov	r0, r2
    d0d8:	strd	r2, [sp, #8]
    d0dc:	bl	196c <Mat_doubleSwap>
    d0e0:	vcvt.s32.f64	s15, d0
    d0e4:	ldrd	r2, [sp, #8]
    d0e8:	add	r2, r2, #8
    d0ec:	vmov	r1, s15
    d0f0:	strb	r1, [r3], #1
    d0f4:	cmp	r3, r9
    d0f8:	bne	d0d4 <ReadInt8Data.part.15+0xfc>
    d0fc:	ldr	r2, [sp, #4]
    d100:	add	r9, r3, #256	; 0x100
    d104:	add	r3, sl, r9
    d108:	cmp	r2, r3
    d10c:	bgt	d0b4 <ReadInt8Data.part.15+0xdc>
    d110:	sub	r9, r4, #256	; 0x100
    d114:	sub	r9, r9, #1
    d118:	bic	r9, r9, #255	; 0xff
    d11c:	add	r9, r9, #256	; 0x100
    d120:	cmp	r4, r9
    d124:	ble	d070 <ReadInt8Data.part.15+0x98>
    d128:	sub	r4, r4, r9
    d12c:	mov	r1, r7
    d130:	ldr	r3, [fp]
    d134:	mov	r2, r4
    d138:	mov	r0, r8
    d13c:	bl	1520 <fread@plt>
    d140:	add	r6, r6, r9
    d144:	add	r5, r5, r0
    d148:	mov	r9, #0
    d14c:	cmp	r4, r9
    d150:	ble	d070 <ReadInt8Data.part.15+0x98>
    d154:	add	r0, r8, r9, lsl #3
    d158:	add	r9, r9, #1
    d15c:	bl	196c <Mat_doubleSwap>
    d160:	vcvt.s32.f64	s15, d0
    d164:	vmov	r3, s15
    d168:	strb	r3, [r6], #1
    d16c:	b	d14c <ReadInt8Data.part.15+0x174>
    d170:	cmp	r4, #256	; 0x100
    d174:	bgt	d1ac <ReadInt8Data.part.15+0x1d4>
    d178:	mov	r1, r0
    d17c:	mov	r2, r4
    d180:	mov	r0, r8
    d184:	bl	1520 <fread@plt>
    d188:	mov	r5, r0
    d18c:	cmp	r4, sl
    d190:	ble	d070 <ReadInt8Data.part.15+0x98>
    d194:	vldmia	r8!, {d7}
    d198:	vcvt.s32.f64	s15, d7
    d19c:	vmov	r3, s15
    d1a0:	strb	r3, [r6, sl]
    d1a4:	add	sl, sl, #1
    d1a8:	b	d18c <ReadInt8Data.part.15+0x1b4>
    d1ac:	sub	r3, r4, #256	; 0x100
    d1b0:	add	r9, r6, #256	; 0x100
    d1b4:	mov	r5, sl
    d1b8:	str	r3, [sp, #8]
    d1bc:	mvn	r3, #255	; 0xff
    d1c0:	sub	r3, r3, r6
    d1c4:	str	r3, [sp, #12]
    d1c8:	mov	r1, r7
    d1cc:	mov	r2, #256	; 0x100
    d1d0:	ldr	r3, [fp]
    d1d4:	mov	r0, r8
    d1d8:	bl	1520 <fread@plt>
    d1dc:	add	r5, r5, r0
    d1e0:	sub	r3, r9, #256	; 0x100
    d1e4:	str	r8, [sp, #4]
    d1e8:	mov	r1, r8
    d1ec:	vldmia	r1!, {d7}
    d1f0:	vcvt.s32.f64	s15, d7
    d1f4:	vmov	r2, s15
    d1f8:	strb	r2, [r3], #1
    d1fc:	cmp	r3, r9
    d200:	bne	d1ec <ReadInt8Data.part.15+0x214>
    d204:	add	r9, r3, #256	; 0x100
    d208:	ldrd	r2, [sp, #8]
    d20c:	add	r3, r3, r9
    d210:	cmp	r2, r3
    d214:	bgt	d1c8 <ReadInt8Data.part.15+0x1f0>
    d218:	sub	r9, r4, #256	; 0x100
    d21c:	sub	r9, r9, #1
    d220:	bic	r9, r9, #255	; 0xff
    d224:	add	r9, r9, #256	; 0x100
    d228:	cmp	r4, r9
    d22c:	ble	d070 <ReadInt8Data.part.15+0x98>
    d230:	sub	r4, r4, r9
    d234:	mov	r1, r7
    d238:	ldr	r3, [fp]
    d23c:	mov	r2, r4
    d240:	mov	r0, r8
    d244:	bl	1520 <fread@plt>
    d248:	add	r6, r6, r9
    d24c:	add	r5, r5, r0
    d250:	cmp	r4, sl
    d254:	ble	d070 <ReadInt8Data.part.15+0x98>
    d258:	ldr	r3, [sp, #4]
    d25c:	add	sl, sl, #1
    d260:	vldmia	r3!, {d7}
    d264:	vcvt.s32.f64	s15, d7
    d268:	str	r3, [sp, #4]
    d26c:	vmov	r3, s15
    d270:	strb	r3, [r6], #1
    d274:	b	d250 <ReadInt8Data.part.15+0x278>
    d278:	add	r8, sp, #16
    d27c:	ldr	r3, [fp]
    d280:	ldr	sl, [fp, #20]
    d284:	cmp	sl, #0
    d288:	beq	d3a4 <ReadInt8Data.part.15+0x3cc>
    d28c:	cmp	r4, #256	; 0x100
    d290:	bgt	d2d0 <ReadInt8Data.part.15+0x2f8>
    d294:	mov	r1, r0
    d298:	mov	r2, r4
    d29c:	mov	r0, r8
    d2a0:	mov	r9, #0
    d2a4:	bl	1520 <fread@plt>
    d2a8:	mov	r5, r0
    d2ac:	cmp	r4, r9
    d2b0:	ble	d070 <ReadInt8Data.part.15+0x98>
    d2b4:	add	r0, r8, r9, lsl #2
    d2b8:	bl	193c <Mat_floatSwap>
    d2bc:	vcvt.s32.f32	s15, s0
    d2c0:	vmov	r3, s15
    d2c4:	strb	r3, [r6, r9]
    d2c8:	add	r9, r9, #1
    d2cc:	b	d2ac <ReadInt8Data.part.15+0x2d4>
    d2d0:	mvn	sl, #255	; 0xff
    d2d4:	sub	r3, r4, #256	; 0x100
    d2d8:	add	r9, r6, #256	; 0x100
    d2dc:	mov	r5, #0
    d2e0:	sub	sl, sl, r6
    d2e4:	str	r3, [sp, #4]
    d2e8:	mov	r2, #256	; 0x100
    d2ec:	mov	r1, r7
    d2f0:	ldr	r3, [fp]
    d2f4:	mov	r0, r8
    d2f8:	bl	1520 <fread@plt>
    d2fc:	add	r5, r5, r0
    d300:	sub	r3, r9, #256	; 0x100
    d304:	mov	r2, r8
    d308:	mov	r0, r2
    d30c:	strd	r2, [sp, #8]
    d310:	bl	193c <Mat_floatSwap>
    d314:	vcvt.s32.f32	s15, s0
    d318:	ldrd	r2, [sp, #8]
    d31c:	add	r2, r2, #4
    d320:	vmov	r1, s15
    d324:	strb	r1, [r3], #1
    d328:	cmp	r3, r9
    d32c:	bne	d308 <ReadInt8Data.part.15+0x330>
    d330:	ldr	r2, [sp, #4]
    d334:	add	r9, r3, #256	; 0x100
    d338:	add	r3, sl, r9
    d33c:	cmp	r2, r3
    d340:	bgt	d2e8 <ReadInt8Data.part.15+0x310>
    d344:	sub	r9, r4, #256	; 0x100
    d348:	sub	r9, r9, #1
    d34c:	bic	r9, r9, #255	; 0xff
    d350:	add	r9, r9, #256	; 0x100
    d354:	cmp	r4, r9
    d358:	ble	d070 <ReadInt8Data.part.15+0x98>
    d35c:	sub	r4, r4, r9
    d360:	mov	r1, r7
    d364:	ldr	r3, [fp]
    d368:	mov	r2, r4
    d36c:	mov	r0, r8
    d370:	bl	1520 <fread@plt>
    d374:	add	r6, r6, r9
    d378:	add	r5, r5, r0
    d37c:	mov	r9, #0
    d380:	cmp	r4, r9
    d384:	ble	d070 <ReadInt8Data.part.15+0x98>
    d388:	add	r0, r8, r9, lsl #2
    d38c:	add	r9, r9, #1
    d390:	bl	193c <Mat_floatSwap>
    d394:	vcvt.s32.f32	s15, s0
    d398:	vmov	r3, s15
    d39c:	strb	r3, [r6], #1
    d3a0:	b	d380 <ReadInt8Data.part.15+0x3a8>
    d3a4:	cmp	r4, #256	; 0x100
    d3a8:	bgt	d3e0 <ReadInt8Data.part.15+0x408>
    d3ac:	mov	r1, r0
    d3b0:	mov	r2, r4
    d3b4:	mov	r0, r8
    d3b8:	bl	1520 <fread@plt>
    d3bc:	mov	r5, r0
    d3c0:	cmp	r4, sl
    d3c4:	ble	d070 <ReadInt8Data.part.15+0x98>
    d3c8:	vldmia	r8!, {s15}
    d3cc:	vcvt.s32.f32	s15, s15
    d3d0:	vmov	r3, s15
    d3d4:	strb	r3, [r6, sl]
    d3d8:	add	sl, sl, #1
    d3dc:	b	d3c0 <ReadInt8Data.part.15+0x3e8>
    d3e0:	sub	r3, r4, #256	; 0x100
    d3e4:	add	r9, r6, #256	; 0x100
    d3e8:	mov	r5, sl
    d3ec:	str	r3, [sp, #8]
    d3f0:	mvn	r3, #255	; 0xff
    d3f4:	sub	r3, r3, r6
    d3f8:	str	r3, [sp, #12]
    d3fc:	mov	r1, r7
    d400:	mov	r2, #256	; 0x100
    d404:	ldr	r3, [fp]
    d408:	mov	r0, r8
    d40c:	bl	1520 <fread@plt>
    d410:	add	r5, r5, r0
    d414:	sub	r3, r9, #256	; 0x100
    d418:	str	r8, [sp, #4]
    d41c:	mov	r1, r8
    d420:	vldmia	r1!, {s15}
    d424:	vcvt.s32.f32	s15, s15
    d428:	vmov	r2, s15
    d42c:	strb	r2, [r3], #1
    d430:	cmp	r3, r9
    d434:	bne	d420 <ReadInt8Data.part.15+0x448>
    d438:	add	r9, r3, #256	; 0x100
    d43c:	ldrd	r2, [sp, #8]
    d440:	add	r3, r3, r9
    d444:	cmp	r2, r3
    d448:	bgt	d3fc <ReadInt8Data.part.15+0x424>
    d44c:	sub	r9, r4, #256	; 0x100
    d450:	sub	r9, r9, #1
    d454:	bic	r9, r9, #255	; 0xff
    d458:	add	r9, r9, #256	; 0x100
    d45c:	cmp	r4, r9
    d460:	ble	d070 <ReadInt8Data.part.15+0x98>
    d464:	sub	r4, r4, r9
    d468:	mov	r1, r7
    d46c:	ldr	r3, [fp]
    d470:	mov	r2, r4
    d474:	mov	r0, r8
    d478:	bl	1520 <fread@plt>
    d47c:	add	r6, r6, r9
    d480:	add	r5, r5, r0
    d484:	cmp	r4, sl
    d488:	ble	d070 <ReadInt8Data.part.15+0x98>
    d48c:	ldr	r3, [sp, #4]
    d490:	add	sl, sl, #1
    d494:	vldmia	r3!, {s15}
    d498:	vcvt.s32.f32	s15, s15
    d49c:	str	r3, [sp, #4]
    d4a0:	vmov	r3, s15
    d4a4:	strb	r3, [r6], #1
    d4a8:	b	d484 <ReadInt8Data.part.15+0x4ac>
    d4ac:	add	r8, sp, #16
    d4b0:	ldr	r3, [fp]
    d4b4:	ldr	r9, [fp, #20]
    d4b8:	cmp	r9, #0
    d4bc:	beq	d5c0 <ReadInt8Data.part.15+0x5e8>
    d4c0:	cmp	r4, #256	; 0x100
    d4c4:	bgt	d4fc <ReadInt8Data.part.15+0x524>
    d4c8:	mov	r1, r0
    d4cc:	mov	r2, r4
    d4d0:	mov	r0, r8
    d4d4:	mov	r9, #0
    d4d8:	bl	1520 <fread@plt>
    d4dc:	mov	r5, r0
    d4e0:	cmp	r4, r9
    d4e4:	ble	d070 <ReadInt8Data.part.15+0x98>
    d4e8:	add	r0, r8, r9, lsl #2
    d4ec:	bl	189c <Mat_int32Swap>
    d4f0:	strb	r0, [r6, r9]
    d4f4:	add	r9, r9, #1
    d4f8:	b	d4e0 <ReadInt8Data.part.15+0x508>
    d4fc:	mvn	sl, #255	; 0xff
    d500:	sub	r3, r4, #256	; 0x100
    d504:	add	r9, r6, #256	; 0x100
    d508:	mov	r5, #0
    d50c:	sub	sl, sl, r6
    d510:	str	r3, [sp, #4]
    d514:	mov	r2, #256	; 0x100
    d518:	mov	r1, r7
    d51c:	ldr	r3, [fp]
    d520:	mov	r0, r8
    d524:	bl	1520 <fread@plt>
    d528:	add	r5, r5, r0
    d52c:	sub	r3, r9, #256	; 0x100
    d530:	mov	r2, r8
    d534:	mov	r0, r2
    d538:	strd	r2, [sp, #8]
    d53c:	bl	189c <Mat_int32Swap>
    d540:	ldrd	r2, [sp, #8]
    d544:	strb	r0, [r3], #1
    d548:	cmp	r3, r9
    d54c:	add	r2, r2, #4
    d550:	bne	d534 <ReadInt8Data.part.15+0x55c>
    d554:	ldr	r2, [sp, #4]
    d558:	add	r9, r3, #256	; 0x100
    d55c:	add	r3, sl, r9
    d560:	cmp	r2, r3
    d564:	bgt	d514 <ReadInt8Data.part.15+0x53c>
    d568:	sub	r9, r4, #256	; 0x100
    d56c:	sub	r9, r9, #1
    d570:	bic	r9, r9, #255	; 0xff
    d574:	add	r9, r9, #256	; 0x100
    d578:	cmp	r4, r9
    d57c:	ble	d070 <ReadInt8Data.part.15+0x98>
    d580:	sub	r4, r4, r9
    d584:	mov	r1, r7
    d588:	ldr	r3, [fp]
    d58c:	mov	r2, r4
    d590:	mov	r0, r8
    d594:	bl	1520 <fread@plt>
    d598:	add	r6, r6, r9
    d59c:	add	r5, r5, r0
    d5a0:	mov	r9, #0
    d5a4:	cmp	r4, r9
    d5a8:	ble	d070 <ReadInt8Data.part.15+0x98>
    d5ac:	add	r0, r8, r9, lsl #2
    d5b0:	add	r9, r9, #1
    d5b4:	bl	189c <Mat_int32Swap>
    d5b8:	strb	r0, [r6], #1
    d5bc:	b	d5a4 <ReadInt8Data.part.15+0x5cc>
    d5c0:	cmp	r4, #256	; 0x100
    d5c4:	bgt	d5f4 <ReadInt8Data.part.15+0x61c>
    d5c8:	mov	r1, r0
    d5cc:	mov	r2, r4
    d5d0:	mov	r0, r8
    d5d4:	bl	1520 <fread@plt>
    d5d8:	mov	r5, r0
    d5dc:	cmp	r4, r9
    d5e0:	ble	d070 <ReadInt8Data.part.15+0x98>
    d5e4:	ldr	r3, [r8, r9, lsl #2]
    d5e8:	strb	r3, [r6, r9]
    d5ec:	add	r9, r9, #1
    d5f0:	b	d5dc <ReadInt8Data.part.15+0x604>
    d5f4:	sub	r3, r4, #256	; 0x100
    d5f8:	add	sl, r6, #256	; 0x100
    d5fc:	mov	r5, r9
    d600:	str	r3, [sp, #4]
    d604:	mvn	r3, #255	; 0xff
    d608:	sub	r3, r3, r6
    d60c:	str	r3, [sp, #8]
    d610:	mov	r2, #256	; 0x100
    d614:	mov	r1, r7
    d618:	ldr	r3, [fp]
    d61c:	mov	r0, r8
    d620:	bl	1520 <fread@plt>
    d624:	add	r5, r5, r0
    d628:	mov	r2, r8
    d62c:	sub	r3, sl, #256	; 0x100
    d630:	ldr	r1, [r2], #4
    d634:	strb	r1, [r3], #1
    d638:	cmp	r3, sl
    d63c:	bne	d630 <ReadInt8Data.part.15+0x658>
    d640:	add	sl, r3, #256	; 0x100
    d644:	ldrd	r2, [sp, #4]
    d648:	add	r3, r3, sl
    d64c:	cmp	r2, r3
    d650:	bgt	d610 <ReadInt8Data.part.15+0x638>
    d654:	sub	sl, r4, #256	; 0x100
    d658:	sub	sl, sl, #1
    d65c:	bic	sl, sl, #255	; 0xff
    d660:	add	sl, sl, #256	; 0x100
    d664:	cmp	r4, sl
    d668:	ble	d070 <ReadInt8Data.part.15+0x98>
    d66c:	sub	r4, r4, sl
    d670:	mov	r1, r7
    d674:	ldr	r3, [fp]
    d678:	mov	r2, r4
    d67c:	mov	r0, r8
    d680:	bl	1520 <fread@plt>
    d684:	add	r6, r6, sl
    d688:	add	r5, r5, r0
    d68c:	cmp	r4, r9
    d690:	ble	d070 <ReadInt8Data.part.15+0x98>
    d694:	ldr	r3, [r8, r9, lsl #2]
    d698:	add	r9, r9, #1
    d69c:	strb	r3, [r6], #1
    d6a0:	b	d68c <ReadInt8Data.part.15+0x6b4>
    d6a4:	add	r8, sp, #16
    d6a8:	ldr	r3, [fp]
    d6ac:	ldr	r9, [fp, #20]
    d6b0:	cmp	r9, #0
    d6b4:	beq	d7b8 <ReadInt8Data.part.15+0x7e0>
    d6b8:	cmp	r4, #256	; 0x100
    d6bc:	bgt	d6f4 <ReadInt8Data.part.15+0x71c>
    d6c0:	mov	r1, r0
    d6c4:	mov	r2, r4
    d6c8:	mov	r0, r8
    d6cc:	mov	r9, #0
    d6d0:	bl	1520 <fread@plt>
    d6d4:	mov	r5, r0
    d6d8:	cmp	r4, r9
    d6dc:	ble	d070 <ReadInt8Data.part.15+0x98>
    d6e0:	add	r0, r8, r9, lsl #2
    d6e4:	bl	18cc <Mat_uint32Swap>
    d6e8:	strb	r0, [r6, r9]
    d6ec:	add	r9, r9, #1
    d6f0:	b	d6d8 <ReadInt8Data.part.15+0x700>
    d6f4:	mvn	sl, #255	; 0xff
    d6f8:	sub	r3, r4, #256	; 0x100
    d6fc:	add	r9, r6, #256	; 0x100
    d700:	mov	r5, #0
    d704:	sub	sl, sl, r6
    d708:	str	r3, [sp, #4]
    d70c:	mov	r2, #256	; 0x100
    d710:	mov	r1, r7
    d714:	ldr	r3, [fp]
    d718:	mov	r0, r8
    d71c:	bl	1520 <fread@plt>
    d720:	add	r5, r5, r0
    d724:	sub	r3, r9, #256	; 0x100
    d728:	mov	r2, r8
    d72c:	mov	r0, r2
    d730:	strd	r2, [sp, #8]
    d734:	bl	18cc <Mat_uint32Swap>
    d738:	ldrd	r2, [sp, #8]
    d73c:	strb	r0, [r3], #1
    d740:	cmp	r3, r9
    d744:	add	r2, r2, #4
    d748:	bne	d72c <ReadInt8Data.part.15+0x754>
    d74c:	ldr	r2, [sp, #4]
    d750:	add	r9, r3, #256	; 0x100
    d754:	add	r3, sl, r9
    d758:	cmp	r2, r3
    d75c:	bgt	d70c <ReadInt8Data.part.15+0x734>
    d760:	sub	r9, r4, #256	; 0x100
    d764:	sub	r9, r9, #1
    d768:	bic	r9, r9, #255	; 0xff
    d76c:	add	r9, r9, #256	; 0x100
    d770:	cmp	r4, r9
    d774:	ble	d070 <ReadInt8Data.part.15+0x98>
    d778:	sub	r4, r4, r9
    d77c:	mov	r1, r7
    d780:	ldr	r3, [fp]
    d784:	mov	r2, r4
    d788:	mov	r0, r8
    d78c:	bl	1520 <fread@plt>
    d790:	add	r6, r6, r9
    d794:	add	r5, r5, r0
    d798:	mov	r9, #0
    d79c:	cmp	r4, r9
    d7a0:	ble	d070 <ReadInt8Data.part.15+0x98>
    d7a4:	add	r0, r8, r9, lsl #2
    d7a8:	add	r9, r9, #1
    d7ac:	bl	18cc <Mat_uint32Swap>
    d7b0:	strb	r0, [r6], #1
    d7b4:	b	d79c <ReadInt8Data.part.15+0x7c4>
    d7b8:	cmp	r4, #256	; 0x100
    d7bc:	bgt	d7ec <ReadInt8Data.part.15+0x814>
    d7c0:	mov	r1, r0
    d7c4:	mov	r2, r4
    d7c8:	mov	r0, r8
    d7cc:	bl	1520 <fread@plt>
    d7d0:	mov	r5, r0
    d7d4:	cmp	r4, r9
    d7d8:	ble	d070 <ReadInt8Data.part.15+0x98>
    d7dc:	ldr	r3, [r8, r9, lsl #2]
    d7e0:	strb	r3, [r6, r9]
    d7e4:	add	r9, r9, #1
    d7e8:	b	d7d4 <ReadInt8Data.part.15+0x7fc>
    d7ec:	sub	r3, r4, #256	; 0x100
    d7f0:	add	sl, r6, #256	; 0x100
    d7f4:	mov	r5, r9
    d7f8:	str	r3, [sp, #4]
    d7fc:	mvn	r3, #255	; 0xff
    d800:	sub	r3, r3, r6
    d804:	str	r3, [sp, #8]
    d808:	mov	r2, #256	; 0x100
    d80c:	mov	r1, r7
    d810:	ldr	r3, [fp]
    d814:	mov	r0, r8
    d818:	bl	1520 <fread@plt>
    d81c:	add	r5, r5, r0
    d820:	mov	r2, r8
    d824:	sub	r3, sl, #256	; 0x100
    d828:	ldr	r1, [r2], #4
    d82c:	strb	r1, [r3], #1
    d830:	cmp	r3, sl
    d834:	bne	d828 <ReadInt8Data.part.15+0x850>
    d838:	add	sl, r3, #256	; 0x100
    d83c:	ldrd	r2, [sp, #4]
    d840:	add	r3, r3, sl
    d844:	cmp	r2, r3
    d848:	bgt	d808 <ReadInt8Data.part.15+0x830>
    d84c:	sub	sl, r4, #256	; 0x100
    d850:	sub	sl, sl, #1
    d854:	bic	sl, sl, #255	; 0xff
    d858:	add	sl, sl, #256	; 0x100
    d85c:	cmp	r4, sl
    d860:	ble	d070 <ReadInt8Data.part.15+0x98>
    d864:	sub	r4, r4, sl
    d868:	mov	r1, r7
    d86c:	ldr	r3, [fp]
    d870:	mov	r2, r4
    d874:	mov	r0, r8
    d878:	bl	1520 <fread@plt>
    d87c:	add	r6, r6, sl
    d880:	add	r5, r5, r0
    d884:	cmp	r4, r9
    d888:	ble	d070 <ReadInt8Data.part.15+0x98>
    d88c:	ldr	r3, [r8, r9, lsl #2]
    d890:	add	r9, r9, #1
    d894:	strb	r3, [r6], #1
    d898:	b	d884 <ReadInt8Data.part.15+0x8ac>
    d89c:	add	r8, sp, #16
    d8a0:	ldr	r3, [fp]
    d8a4:	ldr	sl, [fp, #20]
    d8a8:	cmp	sl, #0
    d8ac:	beq	d9b0 <ReadInt8Data.part.15+0x9d8>
    d8b0:	cmp	r4, #256	; 0x100
    d8b4:	bgt	d8ec <ReadInt8Data.part.15+0x914>
    d8b8:	mov	r1, r0
    d8bc:	mov	r2, r4
    d8c0:	mov	r0, r8
    d8c4:	mov	r9, #0
    d8c8:	bl	1520 <fread@plt>
    d8cc:	mov	r5, r0
    d8d0:	cmp	r4, r9
    d8d4:	ble	d070 <ReadInt8Data.part.15+0x98>
    d8d8:	add	r0, r8, r9, lsl #1
    d8dc:	bl	18fc <Mat_int16Swap>
    d8e0:	strb	r0, [r6, r9]
    d8e4:	add	r9, r9, #1
    d8e8:	b	d8d0 <ReadInt8Data.part.15+0x8f8>
    d8ec:	mvn	sl, #255	; 0xff
    d8f0:	sub	r3, r4, #256	; 0x100
    d8f4:	add	r9, r6, #256	; 0x100
    d8f8:	mov	r5, #0
    d8fc:	sub	sl, sl, r6
    d900:	str	r3, [sp, #4]
    d904:	mov	r2, #256	; 0x100
    d908:	mov	r1, r7
    d90c:	ldr	r3, [fp]
    d910:	mov	r0, r8
    d914:	bl	1520 <fread@plt>
    d918:	add	r5, r5, r0
    d91c:	sub	r3, r9, #256	; 0x100
    d920:	mov	r2, r8
    d924:	mov	r0, r2
    d928:	strd	r2, [sp, #8]
    d92c:	bl	18fc <Mat_int16Swap>
    d930:	ldrd	r2, [sp, #8]
    d934:	strb	r0, [r3], #1
    d938:	cmp	r3, r9
    d93c:	add	r2, r2, #2
    d940:	bne	d924 <ReadInt8Data.part.15+0x94c>
    d944:	ldr	r2, [sp, #4]
    d948:	add	r9, r3, #256	; 0x100
    d94c:	add	r3, sl, r9
    d950:	cmp	r2, r3
    d954:	bgt	d904 <ReadInt8Data.part.15+0x92c>
    d958:	sub	r9, r4, #256	; 0x100
    d95c:	sub	r9, r9, #1
    d960:	bic	r9, r9, #255	; 0xff
    d964:	add	r9, r9, #256	; 0x100
    d968:	cmp	r4, r9
    d96c:	ble	d070 <ReadInt8Data.part.15+0x98>
    d970:	sub	r4, r4, r9
    d974:	mov	r1, r7
    d978:	ldr	r3, [fp]
    d97c:	mov	r2, r4
    d980:	mov	r0, r8
    d984:	bl	1520 <fread@plt>
    d988:	add	r6, r6, r9
    d98c:	add	r5, r5, r0
    d990:	mov	r9, #0
    d994:	cmp	r4, r9
    d998:	ble	d070 <ReadInt8Data.part.15+0x98>
    d99c:	add	r0, r8, r9, lsl #1
    d9a0:	add	r9, r9, #1
    d9a4:	bl	18fc <Mat_int16Swap>
    d9a8:	strb	r0, [r6], #1
    d9ac:	b	d994 <ReadInt8Data.part.15+0x9bc>
    d9b0:	cmp	r4, #256	; 0x100
    d9b4:	bgt	d9e4 <ReadInt8Data.part.15+0xa0c>
    d9b8:	mov	r1, r0
    d9bc:	mov	r2, r4
    d9c0:	mov	r0, r8
    d9c4:	bl	1520 <fread@plt>
    d9c8:	mov	r5, r0
    d9cc:	cmp	r4, sl
    d9d0:	ble	d070 <ReadInt8Data.part.15+0x98>
    d9d4:	ldrsh	r3, [r8], #2
    d9d8:	strb	r3, [r6, sl]
    d9dc:	add	sl, sl, #1
    d9e0:	b	d9cc <ReadInt8Data.part.15+0x9f4>
    d9e4:	sub	r3, r4, #256	; 0x100
    d9e8:	add	r9, r6, #256	; 0x100
    d9ec:	mov	r5, sl
    d9f0:	str	r3, [sp, #8]
    d9f4:	mvn	r3, #255	; 0xff
    d9f8:	sub	r3, r3, r6
    d9fc:	str	r3, [sp, #12]
    da00:	mov	r2, #256	; 0x100
    da04:	mov	r1, r7
    da08:	ldr	r3, [fp]
    da0c:	mov	r0, r8
    da10:	bl	1520 <fread@plt>
    da14:	add	r5, r5, r0
    da18:	sub	r3, r9, #256	; 0x100
    da1c:	str	r8, [sp, #4]
    da20:	mov	r2, r8
    da24:	ldrsh	r1, [r2], #2
    da28:	strb	r1, [r3], #1
    da2c:	cmp	r3, r9
    da30:	bne	da24 <ReadInt8Data.part.15+0xa4c>
    da34:	add	r9, r3, #256	; 0x100
    da38:	ldrd	r2, [sp, #8]
    da3c:	add	r3, r3, r9
    da40:	cmp	r2, r3
    da44:	bgt	da00 <ReadInt8Data.part.15+0xa28>
    da48:	sub	r9, r4, #256	; 0x100
    da4c:	sub	r9, r9, #1
    da50:	bic	r9, r9, #255	; 0xff
    da54:	add	r9, r9, #256	; 0x100
    da58:	cmp	r4, r9
    da5c:	ble	d070 <ReadInt8Data.part.15+0x98>
    da60:	sub	r4, r4, r9
    da64:	mov	r1, r7
    da68:	ldr	r3, [fp]
    da6c:	mov	r2, r4
    da70:	mov	r0, r8
    da74:	bl	1520 <fread@plt>
    da78:	add	r6, r6, r9
    da7c:	add	r5, r5, r0
    da80:	cmp	r4, sl
    da84:	ble	d070 <ReadInt8Data.part.15+0x98>
    da88:	ldr	r2, [sp, #4]
    da8c:	add	sl, sl, #1
    da90:	ldrsh	r3, [r2], #2
    da94:	strb	r3, [r6], #1
    da98:	str	r2, [sp, #4]
    da9c:	b	da80 <ReadInt8Data.part.15+0xaa8>
    daa0:	add	r8, sp, #16
    daa4:	ldr	r3, [fp]
    daa8:	ldr	sl, [fp, #20]
    daac:	cmp	sl, #0
    dab0:	beq	dbb4 <ReadInt8Data.part.15+0xbdc>
    dab4:	cmp	r4, #256	; 0x100
    dab8:	bgt	daf0 <ReadInt8Data.part.15+0xb18>
    dabc:	mov	r1, r0
    dac0:	mov	r2, r4
    dac4:	mov	r0, r8
    dac8:	mov	r9, #0
    dacc:	bl	1520 <fread@plt>
    dad0:	mov	r5, r0
    dad4:	cmp	r4, r9
    dad8:	ble	d070 <ReadInt8Data.part.15+0x98>
    dadc:	add	r0, r8, r9, lsl #1
    dae0:	bl	191c <Mat_uint16Swap>
    dae4:	strb	r0, [r6, r9]
    dae8:	add	r9, r9, #1
    daec:	b	dad4 <ReadInt8Data.part.15+0xafc>
    daf0:	mvn	sl, #255	; 0xff
    daf4:	sub	r3, r4, #256	; 0x100
    daf8:	add	r9, r6, #256	; 0x100
    dafc:	mov	r5, #0
    db00:	sub	sl, sl, r6
    db04:	str	r3, [sp, #4]
    db08:	mov	r2, #256	; 0x100
    db0c:	mov	r1, r7
    db10:	ldr	r3, [fp]
    db14:	mov	r0, r8
    db18:	bl	1520 <fread@plt>
    db1c:	add	r5, r5, r0
    db20:	sub	r3, r9, #256	; 0x100
    db24:	mov	r2, r8
    db28:	mov	r0, r2
    db2c:	strd	r2, [sp, #8]
    db30:	bl	191c <Mat_uint16Swap>
    db34:	ldrd	r2, [sp, #8]
    db38:	strb	r0, [r3], #1
    db3c:	cmp	r3, r9
    db40:	add	r2, r2, #2
    db44:	bne	db28 <ReadInt8Data.part.15+0xb50>
    db48:	ldr	r2, [sp, #4]
    db4c:	add	r9, r3, #256	; 0x100
    db50:	add	r3, sl, r9
    db54:	cmp	r2, r3
    db58:	bgt	db08 <ReadInt8Data.part.15+0xb30>
    db5c:	sub	r9, r4, #256	; 0x100
    db60:	sub	r9, r9, #1
    db64:	bic	r9, r9, #255	; 0xff
    db68:	add	r9, r9, #256	; 0x100
    db6c:	cmp	r4, r9
    db70:	ble	d070 <ReadInt8Data.part.15+0x98>
    db74:	sub	r4, r4, r9
    db78:	mov	r1, r7
    db7c:	ldr	r3, [fp]
    db80:	mov	r2, r4
    db84:	mov	r0, r8
    db88:	bl	1520 <fread@plt>
    db8c:	add	r6, r6, r9
    db90:	add	r5, r5, r0
    db94:	mov	r9, #0
    db98:	cmp	r4, r9
    db9c:	ble	d070 <ReadInt8Data.part.15+0x98>
    dba0:	add	r0, r8, r9, lsl #1
    dba4:	add	r9, r9, #1
    dba8:	bl	191c <Mat_uint16Swap>
    dbac:	strb	r0, [r6], #1
    dbb0:	b	db98 <ReadInt8Data.part.15+0xbc0>
    dbb4:	cmp	r4, #256	; 0x100
    dbb8:	bgt	dbe8 <ReadInt8Data.part.15+0xc10>
    dbbc:	mov	r1, r0
    dbc0:	mov	r2, r4
    dbc4:	mov	r0, r8
    dbc8:	bl	1520 <fread@plt>
    dbcc:	mov	r5, r0
    dbd0:	cmp	r4, sl
    dbd4:	ble	d070 <ReadInt8Data.part.15+0x98>
    dbd8:	ldrh	r3, [r8], #2
    dbdc:	strb	r3, [r6, sl]
    dbe0:	add	sl, sl, #1
    dbe4:	b	dbd0 <ReadInt8Data.part.15+0xbf8>
    dbe8:	sub	r3, r4, #256	; 0x100
    dbec:	add	r9, r6, #256	; 0x100
    dbf0:	mov	r5, sl
    dbf4:	str	r3, [sp, #8]
    dbf8:	mvn	r3, #255	; 0xff
    dbfc:	sub	r3, r3, r6
    dc00:	str	r3, [sp, #12]
    dc04:	mov	r2, #256	; 0x100
    dc08:	mov	r1, r7
    dc0c:	ldr	r3, [fp]
    dc10:	mov	r0, r8
    dc14:	bl	1520 <fread@plt>
    dc18:	add	r5, r5, r0
    dc1c:	sub	r3, r9, #256	; 0x100
    dc20:	str	r8, [sp, #4]
    dc24:	mov	r2, r8
    dc28:	ldrh	r1, [r2], #2
    dc2c:	strb	r1, [r3], #1
    dc30:	cmp	r3, r9
    dc34:	bne	dc28 <ReadInt8Data.part.15+0xc50>
    dc38:	add	r9, r3, #256	; 0x100
    dc3c:	ldrd	r2, [sp, #8]
    dc40:	add	r3, r3, r9
    dc44:	cmp	r2, r3
    dc48:	bgt	dc04 <ReadInt8Data.part.15+0xc2c>
    dc4c:	sub	r9, r4, #256	; 0x100
    dc50:	sub	r9, r9, #1
    dc54:	bic	r9, r9, #255	; 0xff
    dc58:	add	r9, r9, #256	; 0x100
    dc5c:	cmp	r4, r9
    dc60:	ble	d070 <ReadInt8Data.part.15+0x98>
    dc64:	sub	r4, r4, r9
    dc68:	mov	r1, r7
    dc6c:	ldr	r3, [fp]
    dc70:	mov	r2, r4
    dc74:	mov	r0, r8
    dc78:	bl	1520 <fread@plt>
    dc7c:	add	r6, r6, r9
    dc80:	add	r5, r5, r0
    dc84:	cmp	r4, sl
    dc88:	ble	d070 <ReadInt8Data.part.15+0x98>
    dc8c:	ldr	r2, [sp, #4]
    dc90:	add	sl, sl, #1
    dc94:	ldrh	r3, [r2], #2
    dc98:	strb	r3, [r6], #1
    dc9c:	str	r2, [sp, #4]
    dca0:	b	dc84 <ReadInt8Data.part.15+0xcac>
    dca4:	cmp	r4, #256	; 0x100
    dca8:	add	r8, sp, #16
    dcac:	bgt	dce4 <ReadInt8Data.part.15+0xd0c>
    dcb0:	mov	r1, r0
    dcb4:	mov	r2, r4
    dcb8:	ldr	r3, [fp]
    dcbc:	mov	r0, r8
    dcc0:	bl	1520 <fread@plt>
    dcc4:	mov	r5, r0
    dcc8:	mov	r3, #0
    dccc:	cmp	r4, r3
    dcd0:	ble	d070 <ReadInt8Data.part.15+0x98>
    dcd4:	ldrb	r2, [r8, r3]
    dcd8:	strb	r2, [r6, r3]
    dcdc:	add	r3, r3, #1
    dce0:	b	dccc <ReadInt8Data.part.15+0xcf4>
    dce4:	mvn	sl, #255	; 0xff
    dce8:	sub	r3, r4, #256	; 0x100
    dcec:	add	r9, r6, #256	; 0x100
    dcf0:	mov	r5, #0
    dcf4:	sub	sl, sl, r6
    dcf8:	str	r3, [sp, #4]
    dcfc:	mov	r2, #256	; 0x100
    dd00:	mov	r1, r7
    dd04:	ldr	r3, [fp]
    dd08:	mov	r0, r8
    dd0c:	bl	1520 <fread@plt>
    dd10:	add	r5, r5, r0
    dd14:	mov	r2, r8
    dd18:	sub	r3, r9, #256	; 0x100
    dd1c:	ldrsb	r1, [r2], #1
    dd20:	strb	r1, [r3], #1
    dd24:	cmp	r3, r9
    dd28:	bne	dd1c <ReadInt8Data.part.15+0xd44>
    dd2c:	ldr	r2, [sp, #4]
    dd30:	add	r9, r3, #256	; 0x100
    dd34:	add	r3, sl, r9
    dd38:	cmp	r2, r3
    dd3c:	bgt	dcfc <ReadInt8Data.part.15+0xd24>
    dd40:	sub	r9, r4, #256	; 0x100
    dd44:	sub	r9, r9, #1
    dd48:	bic	r9, r9, #255	; 0xff
    dd4c:	add	r9, r9, #256	; 0x100
    dd50:	cmp	r4, r9
    dd54:	ble	d070 <ReadInt8Data.part.15+0x98>
    dd58:	sub	r4, r4, r9
    dd5c:	mov	r1, r7
    dd60:	ldr	r3, [fp]
    dd64:	mov	r2, r4
    dd68:	mov	r0, r8
    dd6c:	bl	1520 <fread@plt>
    dd70:	add	r6, r6, r9
    dd74:	add	r5, r5, r0
    dd78:	mov	r3, #0
    dd7c:	cmp	r4, r3
    dd80:	ble	d070 <ReadInt8Data.part.15+0x98>
    dd84:	ldrb	r2, [r8, r3]
    dd88:	add	r3, r3, #1
    dd8c:	strb	r2, [r6], #1
    dd90:	b	dd7c <ReadInt8Data.part.15+0xda4>
    dd94:	cmp	r4, #256	; 0x100
    dd98:	add	r8, sp, #16
    dd9c:	bgt	ddd4 <ReadInt8Data.part.15+0xdfc>
    dda0:	mov	r1, r0
    dda4:	mov	r2, r4
    dda8:	ldr	r3, [fp]
    ddac:	mov	r0, r8
    ddb0:	bl	1520 <fread@plt>
    ddb4:	mov	r5, r0
    ddb8:	mov	r3, #0
    ddbc:	cmp	r4, r3
    ddc0:	ble	d070 <ReadInt8Data.part.15+0x98>
    ddc4:	ldrb	r2, [r8, r3]
    ddc8:	strb	r2, [r6, r3]
    ddcc:	add	r3, r3, #1
    ddd0:	b	ddbc <ReadInt8Data.part.15+0xde4>
    ddd4:	mvn	sl, #255	; 0xff
    ddd8:	sub	r3, r4, #256	; 0x100
    dddc:	add	r9, r6, #256	; 0x100
    dde0:	mov	r5, #0
    dde4:	sub	sl, sl, r6
    dde8:	str	r3, [sp, #4]
    ddec:	mov	r2, #256	; 0x100
    ddf0:	mov	r1, r7
    ddf4:	ldr	r3, [fp]
    ddf8:	mov	r0, r8
    ddfc:	bl	1520 <fread@plt>
    de00:	add	r5, r5, r0
    de04:	mov	r2, r8
    de08:	sub	r3, r9, #256	; 0x100
    de0c:	ldrb	r1, [r2], #1
    de10:	strb	r1, [r3], #1
    de14:	cmp	r3, r9
    de18:	bne	de0c <ReadInt8Data.part.15+0xe34>
    de1c:	ldr	r2, [sp, #4]
    de20:	add	r9, r3, #256	; 0x100
    de24:	add	r3, sl, r9
    de28:	cmp	r2, r3
    de2c:	bgt	ddec <ReadInt8Data.part.15+0xe14>
    de30:	sub	r9, r4, #256	; 0x100
    de34:	sub	r9, r9, #1
    de38:	bic	r9, r9, #255	; 0xff
    de3c:	add	r9, r9, #256	; 0x100
    de40:	cmp	r4, r9
    de44:	ble	d070 <ReadInt8Data.part.15+0x98>
    de48:	sub	r4, r4, r9
    de4c:	mov	r1, r7
    de50:	ldr	r3, [fp]
    de54:	mov	r2, r4
    de58:	mov	r0, r8
    de5c:	bl	1520 <fread@plt>
    de60:	add	r6, r6, r9
    de64:	add	r5, r5, r0
    de68:	mov	r3, #0
    de6c:	cmp	r4, r3
    de70:	ble	d070 <ReadInt8Data.part.15+0x98>
    de74:	ldrb	r2, [r8, r3]
    de78:	add	r3, r3, #1
    de7c:	strb	r2, [r6], #1
    de80:	b	de6c <ReadInt8Data.part.15+0xe94>
    de84:	cmp	r5, #12
    de88:	bne	e090 <ReadInt8Data.part.15+0x10b8>
    de8c:	add	r8, sp, #16
    de90:	ldr	r3, [fp]
    de94:	ldr	sl, [fp, #20]
    de98:	cmp	sl, #0
    de9c:	beq	dfa0 <ReadInt8Data.part.15+0xfc8>
    dea0:	cmp	r4, #256	; 0x100
    dea4:	bgt	dedc <ReadInt8Data.part.15+0xf04>
    dea8:	mov	r1, r0
    deac:	mov	r2, r4
    deb0:	mov	r0, r8
    deb4:	mov	r9, #0
    deb8:	bl	1520 <fread@plt>
    debc:	mov	r5, r0
    dec0:	cmp	r4, r9
    dec4:	ble	d070 <ReadInt8Data.part.15+0x98>
    dec8:	add	r0, r8, r9, lsl #3
    decc:	bl	17ec <Mat_int64Swap>
    ded0:	strb	r0, [r6, r9]
    ded4:	add	r9, r9, #1
    ded8:	b	dec0 <ReadInt8Data.part.15+0xee8>
    dedc:	mvn	sl, #255	; 0xff
    dee0:	sub	r3, r4, #256	; 0x100
    dee4:	add	r9, r6, #256	; 0x100
    dee8:	mov	r5, #0
    deec:	sub	sl, sl, r6
    def0:	str	r3, [sp, #4]
    def4:	mov	r2, #256	; 0x100
    def8:	mov	r1, r7
    defc:	ldr	r3, [fp]
    df00:	mov	r0, r8
    df04:	bl	1520 <fread@plt>
    df08:	add	r5, r5, r0
    df0c:	sub	r3, r9, #256	; 0x100
    df10:	mov	r2, r8
    df14:	mov	r0, r2
    df18:	strd	r2, [sp, #8]
    df1c:	bl	17ec <Mat_int64Swap>
    df20:	ldrd	r2, [sp, #8]
    df24:	strb	r0, [r3], #1
    df28:	cmp	r3, r9
    df2c:	add	r2, r2, #8
    df30:	bne	df14 <ReadInt8Data.part.15+0xf3c>
    df34:	ldr	r2, [sp, #4]
    df38:	add	r9, r3, #256	; 0x100
    df3c:	add	r3, sl, r9
    df40:	cmp	r3, r2
    df44:	blt	def4 <ReadInt8Data.part.15+0xf1c>
    df48:	sub	r9, r4, #256	; 0x100
    df4c:	sub	r9, r9, #1
    df50:	bic	r9, r9, #255	; 0xff
    df54:	add	r9, r9, #256	; 0x100
    df58:	cmp	r4, r9
    df5c:	ble	d070 <ReadInt8Data.part.15+0x98>
    df60:	sub	r4, r4, r9
    df64:	mov	r1, r7
    df68:	ldr	r3, [fp]
    df6c:	mov	r2, r4
    df70:	mov	r0, r8
    df74:	bl	1520 <fread@plt>
    df78:	add	r6, r6, r9
    df7c:	add	r5, r5, r0
    df80:	mov	r9, #0
    df84:	cmp	r4, r9
    df88:	ble	d070 <ReadInt8Data.part.15+0x98>
    df8c:	add	r0, r8, r9, lsl #3
    df90:	add	r9, r9, #1
    df94:	bl	17ec <Mat_int64Swap>
    df98:	strb	r0, [r6], #1
    df9c:	b	df84 <ReadInt8Data.part.15+0xfac>
    dfa0:	cmp	r4, #256	; 0x100
    dfa4:	bgt	dfd4 <ReadInt8Data.part.15+0xffc>
    dfa8:	mov	r1, r0
    dfac:	mov	r2, r4
    dfb0:	mov	r0, r8
    dfb4:	bl	1520 <fread@plt>
    dfb8:	mov	r5, r0
    dfbc:	cmp	r4, sl
    dfc0:	ble	d070 <ReadInt8Data.part.15+0x98>
    dfc4:	ldr	r3, [r8], #8
    dfc8:	strb	r3, [r6, sl]
    dfcc:	add	sl, sl, #1
    dfd0:	b	dfbc <ReadInt8Data.part.15+0xfe4>
    dfd4:	sub	r3, r4, #256	; 0x100
    dfd8:	add	r9, r6, #256	; 0x100
    dfdc:	mov	r5, sl
    dfe0:	str	r3, [sp, #8]
    dfe4:	mvn	r3, #255	; 0xff
    dfe8:	sub	r3, r3, r6
    dfec:	str	r3, [sp, #12]
    dff0:	mov	r2, #256	; 0x100
    dff4:	mov	r1, r7
    dff8:	ldr	r3, [fp]
    dffc:	mov	r0, r8
    e000:	bl	1520 <fread@plt>
    e004:	add	r5, r5, r0
    e008:	sub	r3, r9, #256	; 0x100
    e00c:	str	r8, [sp, #4]
    e010:	mov	r2, r8
    e014:	ldr	r1, [r2], #8
    e018:	strb	r1, [r3], #1
    e01c:	cmp	r9, r3
    e020:	bne	e014 <ReadInt8Data.part.15+0x103c>
    e024:	ldrd	r2, [sp, #8]
    e028:	add	r9, r9, #256	; 0x100
    e02c:	add	r3, r3, r9
    e030:	cmp	r2, r3
    e034:	bgt	dff0 <ReadInt8Data.part.15+0x1018>
    e038:	sub	r9, r4, #256	; 0x100
    e03c:	sub	r9, r9, #1
    e040:	bic	r9, r9, #255	; 0xff
    e044:	add	r9, r9, #256	; 0x100
    e048:	cmp	r4, r9
    e04c:	ble	d070 <ReadInt8Data.part.15+0x98>
    e050:	sub	r4, r4, r9
    e054:	mov	r1, r7
    e058:	ldr	r3, [fp]
    e05c:	mov	r2, r4
    e060:	mov	r0, r8
    e064:	bl	1520 <fread@plt>
    e068:	add	r6, r6, r9
    e06c:	add	r5, r5, r0
    e070:	cmp	r4, sl
    e074:	ble	d070 <ReadInt8Data.part.15+0x98>
    e078:	ldr	r2, [sp, #4]
    e07c:	add	sl, sl, #1
    e080:	ldr	r3, [r2], #8
    e084:	strb	r3, [r6], #1
    e088:	str	r2, [sp, #4]
    e08c:	b	e070 <ReadInt8Data.part.15+0x1098>
    e090:	cmp	r5, #13
    e094:	movne	r5, #0
    e098:	bne	d070 <ReadInt8Data.part.15+0x98>
    e09c:	add	r8, sp, #16
    e0a0:	ldr	r3, [fp]
    e0a4:	ldr	r9, [fp, #20]
    e0a8:	cmp	r9, #0
    e0ac:	beq	e1b0 <ReadInt8Data.part.15+0x11d8>
    e0b0:	cmp	r4, #256	; 0x100
    e0b4:	bgt	e0ec <ReadInt8Data.part.15+0x1114>
    e0b8:	mov	r1, r0
    e0bc:	mov	r2, r4
    e0c0:	mov	r0, r8
    e0c4:	mov	r9, #0
    e0c8:	bl	1520 <fread@plt>
    e0cc:	mov	r5, r0
    e0d0:	cmp	r4, r9
    e0d4:	ble	d070 <ReadInt8Data.part.15+0x98>
    e0d8:	add	r0, r8, r9, lsl #3
    e0dc:	bl	1844 <Mat_uint64Swap>
    e0e0:	strb	r0, [r6, r9]
    e0e4:	add	r9, r9, #1
    e0e8:	b	e0d0 <ReadInt8Data.part.15+0x10f8>
    e0ec:	mvn	sl, #255	; 0xff
    e0f0:	sub	r3, r4, #256	; 0x100
    e0f4:	add	r9, r6, #256	; 0x100
    e0f8:	mov	r5, #0
    e0fc:	sub	sl, sl, r6
    e100:	str	r3, [sp, #4]
    e104:	mov	r2, #256	; 0x100
    e108:	mov	r1, r7
    e10c:	ldr	r3, [fp]
    e110:	mov	r0, r8
    e114:	bl	1520 <fread@plt>
    e118:	add	r5, r5, r0
    e11c:	sub	r3, r9, #256	; 0x100
    e120:	mov	r2, r8
    e124:	mov	r0, r2
    e128:	strd	r2, [sp, #8]
    e12c:	bl	1844 <Mat_uint64Swap>
    e130:	ldrd	r2, [sp, #8]
    e134:	strb	r0, [r3], #1
    e138:	cmp	r3, r9
    e13c:	add	r2, r2, #8
    e140:	bne	e124 <ReadInt8Data.part.15+0x114c>
    e144:	ldr	r2, [sp, #4]
    e148:	add	r9, r3, #256	; 0x100
    e14c:	add	r3, sl, r9
    e150:	cmp	r2, r3
    e154:	bgt	e104 <ReadInt8Data.part.15+0x112c>
    e158:	sub	r9, r4, #256	; 0x100
    e15c:	sub	r9, r9, #1
    e160:	bic	r9, r9, #255	; 0xff
    e164:	add	r9, r9, #256	; 0x100
    e168:	cmp	r4, r9
    e16c:	ble	d070 <ReadInt8Data.part.15+0x98>
    e170:	sub	r4, r4, r9
    e174:	mov	r1, r7
    e178:	ldr	r3, [fp]
    e17c:	mov	r2, r4
    e180:	mov	r0, r8
    e184:	bl	1520 <fread@plt>
    e188:	add	r6, r6, r9
    e18c:	add	r5, r5, r0
    e190:	mov	r9, #0
    e194:	cmp	r4, r9
    e198:	ble	d070 <ReadInt8Data.part.15+0x98>
    e19c:	add	r0, r8, r9, lsl #3
    e1a0:	add	r9, r9, #1
    e1a4:	bl	1844 <Mat_uint64Swap>
    e1a8:	strb	r0, [r6], #1
    e1ac:	b	e194 <ReadInt8Data.part.15+0x11bc>
    e1b0:	cmp	r4, #256	; 0x100
    e1b4:	bgt	e1e4 <ReadInt8Data.part.15+0x120c>
    e1b8:	mov	r1, r0
    e1bc:	mov	r2, r4
    e1c0:	mov	r0, r8
    e1c4:	bl	1520 <fread@plt>
    e1c8:	mov	r5, r0
    e1cc:	cmp	r4, r9
    e1d0:	ble	d070 <ReadInt8Data.part.15+0x98>
    e1d4:	ldr	r3, [r8], #8
    e1d8:	strb	r3, [r6, r9]
    e1dc:	add	r9, r9, #1
    e1e0:	b	e1cc <ReadInt8Data.part.15+0x11f4>
    e1e4:	sub	r3, r4, #256	; 0x100
    e1e8:	add	sl, r6, #256	; 0x100
    e1ec:	mov	r5, r9
    e1f0:	str	r3, [sp, #8]
    e1f4:	mvn	r3, #255	; 0xff
    e1f8:	sub	r3, r3, r6
    e1fc:	str	r3, [sp, #12]
    e200:	mov	r2, #256	; 0x100
    e204:	mov	r1, r7
    e208:	ldr	r3, [fp]
    e20c:	mov	r0, r8
    e210:	bl	1520 <fread@plt>
    e214:	add	r5, r5, r0
    e218:	sub	r3, sl, #256	; 0x100
    e21c:	str	r8, [sp, #4]
    e220:	mov	r2, r8
    e224:	ldr	r1, [r2], #8
    e228:	strb	r1, [r3], #1
    e22c:	cmp	r3, sl
    e230:	bne	e224 <ReadInt8Data.part.15+0x124c>
    e234:	add	sl, r3, #256	; 0x100
    e238:	ldrd	r2, [sp, #8]
    e23c:	add	r3, r3, sl
    e240:	cmp	r2, r3
    e244:	bgt	e200 <ReadInt8Data.part.15+0x1228>
    e248:	sub	sl, r4, #256	; 0x100
    e24c:	sub	sl, sl, #1
    e250:	bic	sl, sl, #255	; 0xff
    e254:	add	sl, sl, #256	; 0x100
    e258:	cmp	r4, sl
    e25c:	ble	d070 <ReadInt8Data.part.15+0x98>
    e260:	sub	r4, r4, sl
    e264:	mov	r1, r7
    e268:	ldr	r3, [fp]
    e26c:	mov	r2, r4
    e270:	mov	r0, r8
    e274:	bl	1520 <fread@plt>
    e278:	add	r6, r6, sl
    e27c:	add	r5, r5, r0
    e280:	cmp	r4, r9
    e284:	ble	d070 <ReadInt8Data.part.15+0x98>
    e288:	ldr	r2, [sp, #4]
    e28c:	add	r9, r9, #1
    e290:	ldr	r3, [r2], #8
    e294:	strb	r3, [r6], #1
    e298:	str	r2, [sp, #4]
    e29c:	b	e280 <ReadInt8Data.part.15+0x12a8>

0000e2a0 <ReadUInt8Data.part.17>:
    e2a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    e2a4:	sub	sp, sp, #2064	; 0x810
    e2a8:	mov	r5, r2
    e2ac:	sub	sp, sp, #4
    e2b0:	mov	fp, r0
    e2b4:	mov	r0, r2
    e2b8:	mov	r4, r3
    e2bc:	mov	r6, r1
    e2c0:	bl	1598 <Mat_SizeOf@plt>
    e2c4:	sub	r3, r5, #1
    e2c8:	mov	r7, r0
    e2cc:	cmp	r3, #8
    e2d0:	addls	pc, pc, r3, lsl #2
    e2d4:	b	f14c <ReadUInt8Data.part.17+0xeac>
    e2d8:	b	ef6c <ReadUInt8Data.part.17+0xccc>
    e2dc:	b	f05c <ReadUInt8Data.part.17+0xdbc>
    e2e0:	b	eb64 <ReadUInt8Data.part.17+0x8c4>
    e2e4:	b	ed68 <ReadUInt8Data.part.17+0xac8>
    e2e8:	b	e774 <ReadUInt8Data.part.17+0x4d4>
    e2ec:	b	e96c <ReadUInt8Data.part.17+0x6cc>
    e2f0:	b	e540 <ReadUInt8Data.part.17+0x2a0>
    e2f4:	b	f14c <ReadUInt8Data.part.17+0xeac>
    e2f8:	b	e2fc <ReadUInt8Data.part.17+0x5c>
    e2fc:	add	r8, sp, #16
    e300:	ldr	r3, [fp]
    e304:	ldr	sl, [fp, #20]
    e308:	cmp	sl, #0
    e30c:	beq	e438 <ReadUInt8Data.part.17+0x198>
    e310:	cmp	r4, #256	; 0x100
    e314:	bgt	e364 <ReadUInt8Data.part.17+0xc4>
    e318:	mov	r1, r0
    e31c:	mov	r2, r4
    e320:	mov	r0, r8
    e324:	mov	r9, #0
    e328:	bl	1520 <fread@plt>
    e32c:	mov	r5, r0
    e330:	cmp	r4, r9
    e334:	bgt	e348 <ReadUInt8Data.part.17+0xa8>
    e338:	mul	r0, r7, r5
    e33c:	add	sp, sp, #2064	; 0x810
    e340:	add	sp, sp, #4
    e344:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    e348:	add	r0, r8, r9, lsl #3
    e34c:	bl	196c <Mat_doubleSwap>
    e350:	vcvt.u32.f64	s15, d0
    e354:	vmov	r3, s15
    e358:	strb	r3, [r6, r9]
    e35c:	add	r9, r9, #1
    e360:	b	e330 <ReadUInt8Data.part.17+0x90>
    e364:	mvn	sl, #255	; 0xff
    e368:	sub	r3, r4, #256	; 0x100
    e36c:	add	r9, r6, #256	; 0x100
    e370:	mov	r5, #0
    e374:	sub	sl, sl, r6
    e378:	str	r3, [sp, #4]
    e37c:	mov	r2, #256	; 0x100
    e380:	mov	r1, r7
    e384:	ldr	r3, [fp]
    e388:	mov	r0, r8
    e38c:	bl	1520 <fread@plt>
    e390:	add	r5, r5, r0
    e394:	sub	r3, r9, #256	; 0x100
    e398:	mov	r2, r8
    e39c:	mov	r0, r2
    e3a0:	strd	r2, [sp, #8]
    e3a4:	bl	196c <Mat_doubleSwap>
    e3a8:	vcvt.u32.f64	s15, d0
    e3ac:	ldrd	r2, [sp, #8]
    e3b0:	add	r2, r2, #8
    e3b4:	vmov	r1, s15
    e3b8:	strb	r1, [r3], #1
    e3bc:	cmp	r3, r9
    e3c0:	bne	e39c <ReadUInt8Data.part.17+0xfc>
    e3c4:	ldr	r2, [sp, #4]
    e3c8:	add	r9, r3, #256	; 0x100
    e3cc:	add	r3, sl, r9
    e3d0:	cmp	r2, r3
    e3d4:	bgt	e37c <ReadUInt8Data.part.17+0xdc>
    e3d8:	sub	r9, r4, #256	; 0x100
    e3dc:	sub	r9, r9, #1
    e3e0:	bic	r9, r9, #255	; 0xff
    e3e4:	add	r9, r9, #256	; 0x100
    e3e8:	cmp	r4, r9
    e3ec:	ble	e338 <ReadUInt8Data.part.17+0x98>
    e3f0:	sub	r4, r4, r9
    e3f4:	mov	r1, r7
    e3f8:	ldr	r3, [fp]
    e3fc:	mov	r2, r4
    e400:	mov	r0, r8
    e404:	bl	1520 <fread@plt>
    e408:	add	r6, r6, r9
    e40c:	add	r5, r5, r0
    e410:	mov	r9, #0
    e414:	cmp	r4, r9
    e418:	ble	e338 <ReadUInt8Data.part.17+0x98>
    e41c:	add	r0, r8, r9, lsl #3
    e420:	add	r9, r9, #1
    e424:	bl	196c <Mat_doubleSwap>
    e428:	vcvt.u32.f64	s15, d0
    e42c:	vmov	r3, s15
    e430:	strb	r3, [r6], #1
    e434:	b	e414 <ReadUInt8Data.part.17+0x174>
    e438:	cmp	r4, #256	; 0x100
    e43c:	bgt	e474 <ReadUInt8Data.part.17+0x1d4>
    e440:	mov	r1, r0
    e444:	mov	r2, r4
    e448:	mov	r0, r8
    e44c:	bl	1520 <fread@plt>
    e450:	mov	r5, r0
    e454:	cmp	r4, sl
    e458:	ble	e338 <ReadUInt8Data.part.17+0x98>
    e45c:	vldmia	r8!, {d7}
    e460:	vcvt.u32.f64	s15, d7
    e464:	vmov	r3, s15
    e468:	strb	r3, [r6, sl]
    e46c:	add	sl, sl, #1
    e470:	b	e454 <ReadUInt8Data.part.17+0x1b4>
    e474:	sub	r3, r4, #256	; 0x100
    e478:	add	r9, r6, #256	; 0x100
    e47c:	mov	r5, sl
    e480:	str	r3, [sp, #8]
    e484:	mvn	r3, #255	; 0xff
    e488:	sub	r3, r3, r6
    e48c:	str	r3, [sp, #12]
    e490:	mov	r1, r7
    e494:	mov	r2, #256	; 0x100
    e498:	ldr	r3, [fp]
    e49c:	mov	r0, r8
    e4a0:	bl	1520 <fread@plt>
    e4a4:	add	r5, r5, r0
    e4a8:	sub	r3, r9, #256	; 0x100
    e4ac:	str	r8, [sp, #4]
    e4b0:	mov	r1, r8
    e4b4:	vldmia	r1!, {d7}
    e4b8:	vcvt.u32.f64	s15, d7
    e4bc:	vmov	r2, s15
    e4c0:	strb	r2, [r3], #1
    e4c4:	cmp	r3, r9
    e4c8:	bne	e4b4 <ReadUInt8Data.part.17+0x214>
    e4cc:	add	r9, r3, #256	; 0x100
    e4d0:	ldrd	r2, [sp, #8]
    e4d4:	add	r3, r3, r9
    e4d8:	cmp	r2, r3
    e4dc:	bgt	e490 <ReadUInt8Data.part.17+0x1f0>
    e4e0:	sub	r9, r4, #256	; 0x100
    e4e4:	sub	r9, r9, #1
    e4e8:	bic	r9, r9, #255	; 0xff
    e4ec:	add	r9, r9, #256	; 0x100
    e4f0:	cmp	r4, r9
    e4f4:	ble	e338 <ReadUInt8Data.part.17+0x98>
    e4f8:	sub	r4, r4, r9
    e4fc:	mov	r1, r7
    e500:	ldr	r3, [fp]
    e504:	mov	r2, r4
    e508:	mov	r0, r8
    e50c:	bl	1520 <fread@plt>
    e510:	add	r6, r6, r9
    e514:	add	r5, r5, r0
    e518:	cmp	r4, sl
    e51c:	ble	e338 <ReadUInt8Data.part.17+0x98>
    e520:	ldr	r3, [sp, #4]
    e524:	add	sl, sl, #1
    e528:	vldmia	r3!, {d7}
    e52c:	vcvt.u32.f64	s15, d7
    e530:	str	r3, [sp, #4]
    e534:	vmov	r3, s15
    e538:	strb	r3, [r6], #1
    e53c:	b	e518 <ReadUInt8Data.part.17+0x278>
    e540:	add	r8, sp, #16
    e544:	ldr	r3, [fp]
    e548:	ldr	sl, [fp, #20]
    e54c:	cmp	sl, #0
    e550:	beq	e66c <ReadUInt8Data.part.17+0x3cc>
    e554:	cmp	r4, #256	; 0x100
    e558:	bgt	e598 <ReadUInt8Data.part.17+0x2f8>
    e55c:	mov	r1, r0
    e560:	mov	r2, r4
    e564:	mov	r0, r8
    e568:	mov	r9, #0
    e56c:	bl	1520 <fread@plt>
    e570:	mov	r5, r0
    e574:	cmp	r4, r9
    e578:	ble	e338 <ReadUInt8Data.part.17+0x98>
    e57c:	add	r0, r8, r9, lsl #2
    e580:	bl	193c <Mat_floatSwap>
    e584:	vcvt.u32.f32	s15, s0
    e588:	vmov	r3, s15
    e58c:	strb	r3, [r6, r9]
    e590:	add	r9, r9, #1
    e594:	b	e574 <ReadUInt8Data.part.17+0x2d4>
    e598:	mvn	sl, #255	; 0xff
    e59c:	sub	r3, r4, #256	; 0x100
    e5a0:	add	r9, r6, #256	; 0x100
    e5a4:	mov	r5, #0
    e5a8:	sub	sl, sl, r6
    e5ac:	str	r3, [sp, #4]
    e5b0:	mov	r2, #256	; 0x100
    e5b4:	mov	r1, r7
    e5b8:	ldr	r3, [fp]
    e5bc:	mov	r0, r8
    e5c0:	bl	1520 <fread@plt>
    e5c4:	add	r5, r5, r0
    e5c8:	sub	r3, r9, #256	; 0x100
    e5cc:	mov	r2, r8
    e5d0:	mov	r0, r2
    e5d4:	strd	r2, [sp, #8]
    e5d8:	bl	193c <Mat_floatSwap>
    e5dc:	vcvt.u32.f32	s15, s0
    e5e0:	ldrd	r2, [sp, #8]
    e5e4:	add	r2, r2, #4
    e5e8:	vmov	r1, s15
    e5ec:	strb	r1, [r3], #1
    e5f0:	cmp	r3, r9
    e5f4:	bne	e5d0 <ReadUInt8Data.part.17+0x330>
    e5f8:	ldr	r2, [sp, #4]
    e5fc:	add	r9, r3, #256	; 0x100
    e600:	add	r3, sl, r9
    e604:	cmp	r2, r3
    e608:	bgt	e5b0 <ReadUInt8Data.part.17+0x310>
    e60c:	sub	r9, r4, #256	; 0x100
    e610:	sub	r9, r9, #1
    e614:	bic	r9, r9, #255	; 0xff
    e618:	add	r9, r9, #256	; 0x100
    e61c:	cmp	r4, r9
    e620:	ble	e338 <ReadUInt8Data.part.17+0x98>
    e624:	sub	r4, r4, r9
    e628:	mov	r1, r7
    e62c:	ldr	r3, [fp]
    e630:	mov	r2, r4
    e634:	mov	r0, r8
    e638:	bl	1520 <fread@plt>
    e63c:	add	r6, r6, r9
    e640:	add	r5, r5, r0
    e644:	mov	r9, #0
    e648:	cmp	r4, r9
    e64c:	ble	e338 <ReadUInt8Data.part.17+0x98>
    e650:	add	r0, r8, r9, lsl #2
    e654:	add	r9, r9, #1
    e658:	bl	193c <Mat_floatSwap>
    e65c:	vcvt.u32.f32	s15, s0
    e660:	vmov	r3, s15
    e664:	strb	r3, [r6], #1
    e668:	b	e648 <ReadUInt8Data.part.17+0x3a8>
    e66c:	cmp	r4, #256	; 0x100
    e670:	bgt	e6a8 <ReadUInt8Data.part.17+0x408>
    e674:	mov	r1, r0
    e678:	mov	r2, r4
    e67c:	mov	r0, r8
    e680:	bl	1520 <fread@plt>
    e684:	mov	r5, r0
    e688:	cmp	r4, sl
    e68c:	ble	e338 <ReadUInt8Data.part.17+0x98>
    e690:	vldmia	r8!, {s15}
    e694:	vcvt.u32.f32	s15, s15
    e698:	vmov	r3, s15
    e69c:	strb	r3, [r6, sl]
    e6a0:	add	sl, sl, #1
    e6a4:	b	e688 <ReadUInt8Data.part.17+0x3e8>
    e6a8:	sub	r3, r4, #256	; 0x100
    e6ac:	add	r9, r6, #256	; 0x100
    e6b0:	mov	r5, sl
    e6b4:	str	r3, [sp, #8]
    e6b8:	mvn	r3, #255	; 0xff
    e6bc:	sub	r3, r3, r6
    e6c0:	str	r3, [sp, #12]
    e6c4:	mov	r1, r7
    e6c8:	mov	r2, #256	; 0x100
    e6cc:	ldr	r3, [fp]
    e6d0:	mov	r0, r8
    e6d4:	bl	1520 <fread@plt>
    e6d8:	add	r5, r5, r0
    e6dc:	sub	r3, r9, #256	; 0x100
    e6e0:	str	r8, [sp, #4]
    e6e4:	mov	r1, r8
    e6e8:	vldmia	r1!, {s15}
    e6ec:	vcvt.u32.f32	s15, s15
    e6f0:	vmov	r2, s15
    e6f4:	strb	r2, [r3], #1
    e6f8:	cmp	r3, r9
    e6fc:	bne	e6e8 <ReadUInt8Data.part.17+0x448>
    e700:	add	r9, r3, #256	; 0x100
    e704:	ldrd	r2, [sp, #8]
    e708:	add	r3, r3, r9
    e70c:	cmp	r2, r3
    e710:	bgt	e6c4 <ReadUInt8Data.part.17+0x424>
    e714:	sub	r9, r4, #256	; 0x100
    e718:	sub	r9, r9, #1
    e71c:	bic	r9, r9, #255	; 0xff
    e720:	add	r9, r9, #256	; 0x100
    e724:	cmp	r4, r9
    e728:	ble	e338 <ReadUInt8Data.part.17+0x98>
    e72c:	sub	r4, r4, r9
    e730:	mov	r1, r7
    e734:	ldr	r3, [fp]
    e738:	mov	r2, r4
    e73c:	mov	r0, r8
    e740:	bl	1520 <fread@plt>
    e744:	add	r6, r6, r9
    e748:	add	r5, r5, r0
    e74c:	cmp	r4, sl
    e750:	ble	e338 <ReadUInt8Data.part.17+0x98>
    e754:	ldr	r3, [sp, #4]
    e758:	add	sl, sl, #1
    e75c:	vldmia	r3!, {s15}
    e760:	vcvt.u32.f32	s15, s15
    e764:	str	r3, [sp, #4]
    e768:	vmov	r3, s15
    e76c:	strb	r3, [r6], #1
    e770:	b	e74c <ReadUInt8Data.part.17+0x4ac>
    e774:	add	r8, sp, #16
    e778:	ldr	r3, [fp]
    e77c:	ldr	r9, [fp, #20]
    e780:	cmp	r9, #0
    e784:	beq	e888 <ReadUInt8Data.part.17+0x5e8>
    e788:	cmp	r4, #256	; 0x100
    e78c:	bgt	e7c4 <ReadUInt8Data.part.17+0x524>
    e790:	mov	r1, r0
    e794:	mov	r2, r4
    e798:	mov	r0, r8
    e79c:	mov	r9, #0
    e7a0:	bl	1520 <fread@plt>
    e7a4:	mov	r5, r0
    e7a8:	cmp	r4, r9
    e7ac:	ble	e338 <ReadUInt8Data.part.17+0x98>
    e7b0:	add	r0, r8, r9, lsl #2
    e7b4:	bl	189c <Mat_int32Swap>
    e7b8:	strb	r0, [r6, r9]
    e7bc:	add	r9, r9, #1
    e7c0:	b	e7a8 <ReadUInt8Data.part.17+0x508>
    e7c4:	mvn	sl, #255	; 0xff
    e7c8:	sub	r3, r4, #256	; 0x100
    e7cc:	add	r9, r6, #256	; 0x100
    e7d0:	mov	r5, #0
    e7d4:	sub	sl, sl, r6
    e7d8:	str	r3, [sp, #4]
    e7dc:	mov	r2, #256	; 0x100
    e7e0:	mov	r1, r7
    e7e4:	ldr	r3, [fp]
    e7e8:	mov	r0, r8
    e7ec:	bl	1520 <fread@plt>
    e7f0:	add	r5, r5, r0
    e7f4:	sub	r3, r9, #256	; 0x100
    e7f8:	mov	r2, r8
    e7fc:	mov	r0, r2
    e800:	strd	r2, [sp, #8]
    e804:	bl	189c <Mat_int32Swap>
    e808:	ldrd	r2, [sp, #8]
    e80c:	strb	r0, [r3], #1
    e810:	cmp	r3, r9
    e814:	add	r2, r2, #4
    e818:	bne	e7fc <ReadUInt8Data.part.17+0x55c>
    e81c:	ldr	r2, [sp, #4]
    e820:	add	r9, r3, #256	; 0x100
    e824:	add	r3, sl, r9
    e828:	cmp	r2, r3
    e82c:	bgt	e7dc <ReadUInt8Data.part.17+0x53c>
    e830:	sub	r9, r4, #256	; 0x100
    e834:	sub	r9, r9, #1
    e838:	bic	r9, r9, #255	; 0xff
    e83c:	add	r9, r9, #256	; 0x100
    e840:	cmp	r4, r9
    e844:	ble	e338 <ReadUInt8Data.part.17+0x98>
    e848:	sub	r4, r4, r9
    e84c:	mov	r1, r7
    e850:	ldr	r3, [fp]
    e854:	mov	r2, r4
    e858:	mov	r0, r8
    e85c:	bl	1520 <fread@plt>
    e860:	add	r6, r6, r9
    e864:	add	r5, r5, r0
    e868:	mov	r9, #0
    e86c:	cmp	r4, r9
    e870:	ble	e338 <ReadUInt8Data.part.17+0x98>
    e874:	add	r0, r8, r9, lsl #2
    e878:	add	r9, r9, #1
    e87c:	bl	189c <Mat_int32Swap>
    e880:	strb	r0, [r6], #1
    e884:	b	e86c <ReadUInt8Data.part.17+0x5cc>
    e888:	cmp	r4, #256	; 0x100
    e88c:	bgt	e8bc <ReadUInt8Data.part.17+0x61c>
    e890:	mov	r1, r0
    e894:	mov	r2, r4
    e898:	mov	r0, r8
    e89c:	bl	1520 <fread@plt>
    e8a0:	mov	r5, r0
    e8a4:	cmp	r4, r9
    e8a8:	ble	e338 <ReadUInt8Data.part.17+0x98>
    e8ac:	ldr	r3, [r8, r9, lsl #2]
    e8b0:	strb	r3, [r6, r9]
    e8b4:	add	r9, r9, #1
    e8b8:	b	e8a4 <ReadUInt8Data.part.17+0x604>
    e8bc:	sub	r3, r4, #256	; 0x100
    e8c0:	add	sl, r6, #256	; 0x100
    e8c4:	mov	r5, r9
    e8c8:	str	r3, [sp, #4]
    e8cc:	mvn	r3, #255	; 0xff
    e8d0:	sub	r3, r3, r6
    e8d4:	str	r3, [sp, #8]
    e8d8:	mov	r2, #256	; 0x100
    e8dc:	mov	r1, r7
    e8e0:	ldr	r3, [fp]
    e8e4:	mov	r0, r8
    e8e8:	bl	1520 <fread@plt>
    e8ec:	add	r5, r5, r0
    e8f0:	mov	r2, r8
    e8f4:	sub	r3, sl, #256	; 0x100
    e8f8:	ldr	r1, [r2], #4
    e8fc:	strb	r1, [r3], #1
    e900:	cmp	r3, sl
    e904:	bne	e8f8 <ReadUInt8Data.part.17+0x658>
    e908:	add	sl, r3, #256	; 0x100
    e90c:	ldrd	r2, [sp, #4]
    e910:	add	r3, r3, sl
    e914:	cmp	r2, r3
    e918:	bgt	e8d8 <ReadUInt8Data.part.17+0x638>
    e91c:	sub	sl, r4, #256	; 0x100
    e920:	sub	sl, sl, #1
    e924:	bic	sl, sl, #255	; 0xff
    e928:	add	sl, sl, #256	; 0x100
    e92c:	cmp	r4, sl
    e930:	ble	e338 <ReadUInt8Data.part.17+0x98>
    e934:	sub	r4, r4, sl
    e938:	mov	r1, r7
    e93c:	ldr	r3, [fp]
    e940:	mov	r2, r4
    e944:	mov	r0, r8
    e948:	bl	1520 <fread@plt>
    e94c:	add	r6, r6, sl
    e950:	add	r5, r5, r0
    e954:	cmp	r4, r9
    e958:	ble	e338 <ReadUInt8Data.part.17+0x98>
    e95c:	ldr	r3, [r8, r9, lsl #2]
    e960:	add	r9, r9, #1
    e964:	strb	r3, [r6], #1
    e968:	b	e954 <ReadUInt8Data.part.17+0x6b4>
    e96c:	add	r8, sp, #16
    e970:	ldr	r3, [fp]
    e974:	ldr	r9, [fp, #20]
    e978:	cmp	r9, #0
    e97c:	beq	ea80 <ReadUInt8Data.part.17+0x7e0>
    e980:	cmp	r4, #256	; 0x100
    e984:	bgt	e9bc <ReadUInt8Data.part.17+0x71c>
    e988:	mov	r1, r0
    e98c:	mov	r2, r4
    e990:	mov	r0, r8
    e994:	mov	r9, #0
    e998:	bl	1520 <fread@plt>
    e99c:	mov	r5, r0
    e9a0:	cmp	r4, r9
    e9a4:	ble	e338 <ReadUInt8Data.part.17+0x98>
    e9a8:	add	r0, r8, r9, lsl #2
    e9ac:	bl	18cc <Mat_uint32Swap>
    e9b0:	strb	r0, [r6, r9]
    e9b4:	add	r9, r9, #1
    e9b8:	b	e9a0 <ReadUInt8Data.part.17+0x700>
    e9bc:	mvn	sl, #255	; 0xff
    e9c0:	sub	r3, r4, #256	; 0x100
    e9c4:	add	r9, r6, #256	; 0x100
    e9c8:	mov	r5, #0
    e9cc:	sub	sl, sl, r6
    e9d0:	str	r3, [sp, #4]
    e9d4:	mov	r2, #256	; 0x100
    e9d8:	mov	r1, r7
    e9dc:	ldr	r3, [fp]
    e9e0:	mov	r0, r8
    e9e4:	bl	1520 <fread@plt>
    e9e8:	add	r5, r5, r0
    e9ec:	sub	r3, r9, #256	; 0x100
    e9f0:	mov	r2, r8
    e9f4:	mov	r0, r2
    e9f8:	strd	r2, [sp, #8]
    e9fc:	bl	18cc <Mat_uint32Swap>
    ea00:	ldrd	r2, [sp, #8]
    ea04:	strb	r0, [r3], #1
    ea08:	cmp	r3, r9
    ea0c:	add	r2, r2, #4
    ea10:	bne	e9f4 <ReadUInt8Data.part.17+0x754>
    ea14:	ldr	r2, [sp, #4]
    ea18:	add	r9, r3, #256	; 0x100
    ea1c:	add	r3, sl, r9
    ea20:	cmp	r2, r3
    ea24:	bgt	e9d4 <ReadUInt8Data.part.17+0x734>
    ea28:	sub	r9, r4, #256	; 0x100
    ea2c:	sub	r9, r9, #1
    ea30:	bic	r9, r9, #255	; 0xff
    ea34:	add	r9, r9, #256	; 0x100
    ea38:	cmp	r4, r9
    ea3c:	ble	e338 <ReadUInt8Data.part.17+0x98>
    ea40:	sub	r4, r4, r9
    ea44:	mov	r1, r7
    ea48:	ldr	r3, [fp]
    ea4c:	mov	r2, r4
    ea50:	mov	r0, r8
    ea54:	bl	1520 <fread@plt>
    ea58:	add	r6, r6, r9
    ea5c:	add	r5, r5, r0
    ea60:	mov	r9, #0
    ea64:	cmp	r4, r9
    ea68:	ble	e338 <ReadUInt8Data.part.17+0x98>
    ea6c:	add	r0, r8, r9, lsl #2
    ea70:	add	r9, r9, #1
    ea74:	bl	18cc <Mat_uint32Swap>
    ea78:	strb	r0, [r6], #1
    ea7c:	b	ea64 <ReadUInt8Data.part.17+0x7c4>
    ea80:	cmp	r4, #256	; 0x100
    ea84:	bgt	eab4 <ReadUInt8Data.part.17+0x814>
    ea88:	mov	r1, r0
    ea8c:	mov	r2, r4
    ea90:	mov	r0, r8
    ea94:	bl	1520 <fread@plt>
    ea98:	mov	r5, r0
    ea9c:	cmp	r4, r9
    eaa0:	ble	e338 <ReadUInt8Data.part.17+0x98>
    eaa4:	ldr	r3, [r8, r9, lsl #2]
    eaa8:	strb	r3, [r6, r9]
    eaac:	add	r9, r9, #1
    eab0:	b	ea9c <ReadUInt8Data.part.17+0x7fc>
    eab4:	sub	r3, r4, #256	; 0x100
    eab8:	add	sl, r6, #256	; 0x100
    eabc:	mov	r5, r9
    eac0:	str	r3, [sp, #4]
    eac4:	mvn	r3, #255	; 0xff
    eac8:	sub	r3, r3, r6
    eacc:	str	r3, [sp, #8]
    ead0:	mov	r2, #256	; 0x100
    ead4:	mov	r1, r7
    ead8:	ldr	r3, [fp]
    eadc:	mov	r0, r8
    eae0:	bl	1520 <fread@plt>
    eae4:	add	r5, r5, r0
    eae8:	mov	r2, r8
    eaec:	sub	r3, sl, #256	; 0x100
    eaf0:	ldr	r1, [r2], #4
    eaf4:	strb	r1, [r3], #1
    eaf8:	cmp	r3, sl
    eafc:	bne	eaf0 <ReadUInt8Data.part.17+0x850>
    eb00:	add	sl, r3, #256	; 0x100
    eb04:	ldrd	r2, [sp, #4]
    eb08:	add	r3, r3, sl
    eb0c:	cmp	r2, r3
    eb10:	bgt	ead0 <ReadUInt8Data.part.17+0x830>
    eb14:	sub	sl, r4, #256	; 0x100
    eb18:	sub	sl, sl, #1
    eb1c:	bic	sl, sl, #255	; 0xff
    eb20:	add	sl, sl, #256	; 0x100
    eb24:	cmp	r4, sl
    eb28:	ble	e338 <ReadUInt8Data.part.17+0x98>
    eb2c:	sub	r4, r4, sl
    eb30:	mov	r1, r7
    eb34:	ldr	r3, [fp]
    eb38:	mov	r2, r4
    eb3c:	mov	r0, r8
    eb40:	bl	1520 <fread@plt>
    eb44:	add	r6, r6, sl
    eb48:	add	r5, r5, r0
    eb4c:	cmp	r4, r9
    eb50:	ble	e338 <ReadUInt8Data.part.17+0x98>
    eb54:	ldr	r3, [r8, r9, lsl #2]
    eb58:	add	r9, r9, #1
    eb5c:	strb	r3, [r6], #1
    eb60:	b	eb4c <ReadUInt8Data.part.17+0x8ac>
    eb64:	add	r8, sp, #16
    eb68:	ldr	r3, [fp]
    eb6c:	ldr	sl, [fp, #20]
    eb70:	cmp	sl, #0
    eb74:	beq	ec78 <ReadUInt8Data.part.17+0x9d8>
    eb78:	cmp	r4, #256	; 0x100
    eb7c:	bgt	ebb4 <ReadUInt8Data.part.17+0x914>
    eb80:	mov	r1, r0
    eb84:	mov	r2, r4
    eb88:	mov	r0, r8
    eb8c:	mov	r9, #0
    eb90:	bl	1520 <fread@plt>
    eb94:	mov	r5, r0
    eb98:	cmp	r4, r9
    eb9c:	ble	e338 <ReadUInt8Data.part.17+0x98>
    eba0:	add	r0, r8, r9, lsl #1
    eba4:	bl	18fc <Mat_int16Swap>
    eba8:	strb	r0, [r6, r9]
    ebac:	add	r9, r9, #1
    ebb0:	b	eb98 <ReadUInt8Data.part.17+0x8f8>
    ebb4:	mvn	sl, #255	; 0xff
    ebb8:	sub	r3, r4, #256	; 0x100
    ebbc:	add	r9, r6, #256	; 0x100
    ebc0:	mov	r5, #0
    ebc4:	sub	sl, sl, r6
    ebc8:	str	r3, [sp, #4]
    ebcc:	mov	r2, #256	; 0x100
    ebd0:	mov	r1, r7
    ebd4:	ldr	r3, [fp]
    ebd8:	mov	r0, r8
    ebdc:	bl	1520 <fread@plt>
    ebe0:	add	r5, r5, r0
    ebe4:	sub	r3, r9, #256	; 0x100
    ebe8:	mov	r2, r8
    ebec:	mov	r0, r2
    ebf0:	strd	r2, [sp, #8]
    ebf4:	bl	18fc <Mat_int16Swap>
    ebf8:	ldrd	r2, [sp, #8]
    ebfc:	strb	r0, [r3], #1
    ec00:	cmp	r3, r9
    ec04:	add	r2, r2, #2
    ec08:	bne	ebec <ReadUInt8Data.part.17+0x94c>
    ec0c:	ldr	r2, [sp, #4]
    ec10:	add	r9, r3, #256	; 0x100
    ec14:	add	r3, sl, r9
    ec18:	cmp	r2, r3
    ec1c:	bgt	ebcc <ReadUInt8Data.part.17+0x92c>
    ec20:	sub	r9, r4, #256	; 0x100
    ec24:	sub	r9, r9, #1
    ec28:	bic	r9, r9, #255	; 0xff
    ec2c:	add	r9, r9, #256	; 0x100
    ec30:	cmp	r4, r9
    ec34:	ble	e338 <ReadUInt8Data.part.17+0x98>
    ec38:	sub	r4, r4, r9
    ec3c:	mov	r1, r7
    ec40:	ldr	r3, [fp]
    ec44:	mov	r2, r4
    ec48:	mov	r0, r8
    ec4c:	bl	1520 <fread@plt>
    ec50:	add	r6, r6, r9
    ec54:	add	r5, r5, r0
    ec58:	mov	r9, #0
    ec5c:	cmp	r4, r9
    ec60:	ble	e338 <ReadUInt8Data.part.17+0x98>
    ec64:	add	r0, r8, r9, lsl #1
    ec68:	add	r9, r9, #1
    ec6c:	bl	18fc <Mat_int16Swap>
    ec70:	strb	r0, [r6], #1
    ec74:	b	ec5c <ReadUInt8Data.part.17+0x9bc>
    ec78:	cmp	r4, #256	; 0x100
    ec7c:	bgt	ecac <ReadUInt8Data.part.17+0xa0c>
    ec80:	mov	r1, r0
    ec84:	mov	r2, r4
    ec88:	mov	r0, r8
    ec8c:	bl	1520 <fread@plt>
    ec90:	mov	r5, r0
    ec94:	cmp	r4, sl
    ec98:	ble	e338 <ReadUInt8Data.part.17+0x98>
    ec9c:	ldrsh	r3, [r8], #2
    eca0:	strb	r3, [r6, sl]
    eca4:	add	sl, sl, #1
    eca8:	b	ec94 <ReadUInt8Data.part.17+0x9f4>
    ecac:	sub	r3, r4, #256	; 0x100
    ecb0:	add	r9, r6, #256	; 0x100
    ecb4:	mov	r5, sl
    ecb8:	str	r3, [sp, #8]
    ecbc:	mvn	r3, #255	; 0xff
    ecc0:	sub	r3, r3, r6
    ecc4:	str	r3, [sp, #12]
    ecc8:	mov	r2, #256	; 0x100
    eccc:	mov	r1, r7
    ecd0:	ldr	r3, [fp]
    ecd4:	mov	r0, r8
    ecd8:	bl	1520 <fread@plt>
    ecdc:	add	r5, r5, r0
    ece0:	sub	r3, r9, #256	; 0x100
    ece4:	str	r8, [sp, #4]
    ece8:	mov	r2, r8
    ecec:	ldrsh	r1, [r2], #2
    ecf0:	strb	r1, [r3], #1
    ecf4:	cmp	r3, r9
    ecf8:	bne	ecec <ReadUInt8Data.part.17+0xa4c>
    ecfc:	add	r9, r3, #256	; 0x100
    ed00:	ldrd	r2, [sp, #8]
    ed04:	add	r3, r3, r9
    ed08:	cmp	r2, r3
    ed0c:	bgt	ecc8 <ReadUInt8Data.part.17+0xa28>
    ed10:	sub	r9, r4, #256	; 0x100
    ed14:	sub	r9, r9, #1
    ed18:	bic	r9, r9, #255	; 0xff
    ed1c:	add	r9, r9, #256	; 0x100
    ed20:	cmp	r4, r9
    ed24:	ble	e338 <ReadUInt8Data.part.17+0x98>
    ed28:	sub	r4, r4, r9
    ed2c:	mov	r1, r7
    ed30:	ldr	r3, [fp]
    ed34:	mov	r2, r4
    ed38:	mov	r0, r8
    ed3c:	bl	1520 <fread@plt>
    ed40:	add	r6, r6, r9
    ed44:	add	r5, r5, r0
    ed48:	cmp	r4, sl
    ed4c:	ble	e338 <ReadUInt8Data.part.17+0x98>
    ed50:	ldr	r2, [sp, #4]
    ed54:	add	sl, sl, #1
    ed58:	ldrsh	r3, [r2], #2
    ed5c:	strb	r3, [r6], #1
    ed60:	str	r2, [sp, #4]
    ed64:	b	ed48 <ReadUInt8Data.part.17+0xaa8>
    ed68:	add	r8, sp, #16
    ed6c:	ldr	r3, [fp]
    ed70:	ldr	sl, [fp, #20]
    ed74:	cmp	sl, #0
    ed78:	beq	ee7c <ReadUInt8Data.part.17+0xbdc>
    ed7c:	cmp	r4, #256	; 0x100
    ed80:	bgt	edb8 <ReadUInt8Data.part.17+0xb18>
    ed84:	mov	r1, r0
    ed88:	mov	r2, r4
    ed8c:	mov	r0, r8
    ed90:	mov	r9, #0
    ed94:	bl	1520 <fread@plt>
    ed98:	mov	r5, r0
    ed9c:	cmp	r4, r9
    eda0:	ble	e338 <ReadUInt8Data.part.17+0x98>
    eda4:	add	r0, r8, r9, lsl #1
    eda8:	bl	191c <Mat_uint16Swap>
    edac:	strb	r0, [r6, r9]
    edb0:	add	r9, r9, #1
    edb4:	b	ed9c <ReadUInt8Data.part.17+0xafc>
    edb8:	mvn	sl, #255	; 0xff
    edbc:	sub	r3, r4, #256	; 0x100
    edc0:	add	r9, r6, #256	; 0x100
    edc4:	mov	r5, #0
    edc8:	sub	sl, sl, r6
    edcc:	str	r3, [sp, #4]
    edd0:	mov	r2, #256	; 0x100
    edd4:	mov	r1, r7
    edd8:	ldr	r3, [fp]
    eddc:	mov	r0, r8
    ede0:	bl	1520 <fread@plt>
    ede4:	add	r5, r5, r0
    ede8:	sub	r3, r9, #256	; 0x100
    edec:	mov	r2, r8
    edf0:	mov	r0, r2
    edf4:	strd	r2, [sp, #8]
    edf8:	bl	191c <Mat_uint16Swap>
    edfc:	ldrd	r2, [sp, #8]
    ee00:	strb	r0, [r3], #1
    ee04:	cmp	r3, r9
    ee08:	add	r2, r2, #2
    ee0c:	bne	edf0 <ReadUInt8Data.part.17+0xb50>
    ee10:	ldr	r2, [sp, #4]
    ee14:	add	r9, r3, #256	; 0x100
    ee18:	add	r3, sl, r9
    ee1c:	cmp	r2, r3
    ee20:	bgt	edd0 <ReadUInt8Data.part.17+0xb30>
    ee24:	sub	r9, r4, #256	; 0x100
    ee28:	sub	r9, r9, #1
    ee2c:	bic	r9, r9, #255	; 0xff
    ee30:	add	r9, r9, #256	; 0x100
    ee34:	cmp	r4, r9
    ee38:	ble	e338 <ReadUInt8Data.part.17+0x98>
    ee3c:	sub	r4, r4, r9
    ee40:	mov	r1, r7
    ee44:	ldr	r3, [fp]
    ee48:	mov	r2, r4
    ee4c:	mov	r0, r8
    ee50:	bl	1520 <fread@plt>
    ee54:	add	r6, r6, r9
    ee58:	add	r5, r5, r0
    ee5c:	mov	r9, #0
    ee60:	cmp	r4, r9
    ee64:	ble	e338 <ReadUInt8Data.part.17+0x98>
    ee68:	add	r0, r8, r9, lsl #1
    ee6c:	add	r9, r9, #1
    ee70:	bl	191c <Mat_uint16Swap>
    ee74:	strb	r0, [r6], #1
    ee78:	b	ee60 <ReadUInt8Data.part.17+0xbc0>
    ee7c:	cmp	r4, #256	; 0x100
    ee80:	bgt	eeb0 <ReadUInt8Data.part.17+0xc10>
    ee84:	mov	r1, r0
    ee88:	mov	r2, r4
    ee8c:	mov	r0, r8
    ee90:	bl	1520 <fread@plt>
    ee94:	mov	r5, r0
    ee98:	cmp	r4, sl
    ee9c:	ble	e338 <ReadUInt8Data.part.17+0x98>
    eea0:	ldrh	r3, [r8], #2
    eea4:	strb	r3, [r6, sl]
    eea8:	add	sl, sl, #1
    eeac:	b	ee98 <ReadUInt8Data.part.17+0xbf8>
    eeb0:	sub	r3, r4, #256	; 0x100
    eeb4:	add	r9, r6, #256	; 0x100
    eeb8:	mov	r5, sl
    eebc:	str	r3, [sp, #8]
    eec0:	mvn	r3, #255	; 0xff
    eec4:	sub	r3, r3, r6
    eec8:	str	r3, [sp, #12]
    eecc:	mov	r2, #256	; 0x100
    eed0:	mov	r1, r7
    eed4:	ldr	r3, [fp]
    eed8:	mov	r0, r8
    eedc:	bl	1520 <fread@plt>
    eee0:	add	r5, r5, r0
    eee4:	sub	r3, r9, #256	; 0x100
    eee8:	str	r8, [sp, #4]
    eeec:	mov	r2, r8
    eef0:	ldrh	r1, [r2], #2
    eef4:	strb	r1, [r3], #1
    eef8:	cmp	r3, r9
    eefc:	bne	eef0 <ReadUInt8Data.part.17+0xc50>
    ef00:	add	r9, r3, #256	; 0x100
    ef04:	ldrd	r2, [sp, #8]
    ef08:	add	r3, r3, r9
    ef0c:	cmp	r2, r3
    ef10:	bgt	eecc <ReadUInt8Data.part.17+0xc2c>
    ef14:	sub	r9, r4, #256	; 0x100
    ef18:	sub	r9, r9, #1
    ef1c:	bic	r9, r9, #255	; 0xff
    ef20:	add	r9, r9, #256	; 0x100
    ef24:	cmp	r4, r9
    ef28:	ble	e338 <ReadUInt8Data.part.17+0x98>
    ef2c:	sub	r4, r4, r9
    ef30:	mov	r1, r7
    ef34:	ldr	r3, [fp]
    ef38:	mov	r2, r4
    ef3c:	mov	r0, r8
    ef40:	bl	1520 <fread@plt>
    ef44:	add	r6, r6, r9
    ef48:	add	r5, r5, r0
    ef4c:	cmp	r4, sl
    ef50:	ble	e338 <ReadUInt8Data.part.17+0x98>
    ef54:	ldr	r2, [sp, #4]
    ef58:	add	sl, sl, #1
    ef5c:	ldrh	r3, [r2], #2
    ef60:	strb	r3, [r6], #1
    ef64:	str	r2, [sp, #4]
    ef68:	b	ef4c <ReadUInt8Data.part.17+0xcac>
    ef6c:	cmp	r4, #256	; 0x100
    ef70:	add	r8, sp, #16
    ef74:	bgt	efac <ReadUInt8Data.part.17+0xd0c>
    ef78:	mov	r1, r0
    ef7c:	mov	r2, r4
    ef80:	ldr	r3, [fp]
    ef84:	mov	r0, r8
    ef88:	bl	1520 <fread@plt>
    ef8c:	mov	r5, r0
    ef90:	mov	r3, #0
    ef94:	cmp	r4, r3
    ef98:	ble	e338 <ReadUInt8Data.part.17+0x98>
    ef9c:	ldrb	r2, [r8, r3]
    efa0:	strb	r2, [r6, r3]
    efa4:	add	r3, r3, #1
    efa8:	b	ef94 <ReadUInt8Data.part.17+0xcf4>
    efac:	mvn	sl, #255	; 0xff
    efb0:	sub	r3, r4, #256	; 0x100
    efb4:	add	r9, r6, #256	; 0x100
    efb8:	mov	r5, #0
    efbc:	sub	sl, sl, r6
    efc0:	str	r3, [sp, #4]
    efc4:	mov	r2, #256	; 0x100
    efc8:	mov	r1, r7
    efcc:	ldr	r3, [fp]
    efd0:	mov	r0, r8
    efd4:	bl	1520 <fread@plt>
    efd8:	add	r5, r5, r0
    efdc:	mov	r2, r8
    efe0:	sub	r3, r9, #256	; 0x100
    efe4:	ldrsb	r1, [r2], #1
    efe8:	strb	r1, [r3], #1
    efec:	cmp	r3, r9
    eff0:	bne	efe4 <ReadUInt8Data.part.17+0xd44>
    eff4:	ldr	r2, [sp, #4]
    eff8:	add	r9, r3, #256	; 0x100
    effc:	add	r3, sl, r9
    f000:	cmp	r2, r3
    f004:	bgt	efc4 <ReadUInt8Data.part.17+0xd24>
    f008:	sub	r9, r4, #256	; 0x100
    f00c:	sub	r9, r9, #1
    f010:	bic	r9, r9, #255	; 0xff
    f014:	add	r9, r9, #256	; 0x100
    f018:	cmp	r4, r9
    f01c:	ble	e338 <ReadUInt8Data.part.17+0x98>
    f020:	sub	r4, r4, r9
    f024:	mov	r1, r7
    f028:	ldr	r3, [fp]
    f02c:	mov	r2, r4
    f030:	mov	r0, r8
    f034:	bl	1520 <fread@plt>
    f038:	add	r6, r6, r9
    f03c:	add	r5, r5, r0
    f040:	mov	r3, #0
    f044:	cmp	r4, r3
    f048:	ble	e338 <ReadUInt8Data.part.17+0x98>
    f04c:	ldrb	r2, [r8, r3]
    f050:	add	r3, r3, #1
    f054:	strb	r2, [r6], #1
    f058:	b	f044 <ReadUInt8Data.part.17+0xda4>
    f05c:	cmp	r4, #256	; 0x100
    f060:	add	r8, sp, #16
    f064:	bgt	f09c <ReadUInt8Data.part.17+0xdfc>
    f068:	mov	r1, r0
    f06c:	mov	r2, r4
    f070:	ldr	r3, [fp]
    f074:	mov	r0, r8
    f078:	bl	1520 <fread@plt>
    f07c:	mov	r5, r0
    f080:	mov	r3, #0
    f084:	cmp	r4, r3
    f088:	ble	e338 <ReadUInt8Data.part.17+0x98>
    f08c:	ldrb	r2, [r8, r3]
    f090:	strb	r2, [r6, r3]
    f094:	add	r3, r3, #1
    f098:	b	f084 <ReadUInt8Data.part.17+0xde4>
    f09c:	mvn	sl, #255	; 0xff
    f0a0:	sub	r3, r4, #256	; 0x100
    f0a4:	add	r9, r6, #256	; 0x100
    f0a8:	mov	r5, #0
    f0ac:	sub	sl, sl, r6
    f0b0:	str	r3, [sp, #4]
    f0b4:	mov	r2, #256	; 0x100
    f0b8:	mov	r1, r7
    f0bc:	ldr	r3, [fp]
    f0c0:	mov	r0, r8
    f0c4:	bl	1520 <fread@plt>
    f0c8:	add	r5, r5, r0
    f0cc:	mov	r2, r8
    f0d0:	sub	r3, r9, #256	; 0x100
    f0d4:	ldrb	r1, [r2], #1
    f0d8:	strb	r1, [r3], #1
    f0dc:	cmp	r3, r9
    f0e0:	bne	f0d4 <ReadUInt8Data.part.17+0xe34>
    f0e4:	ldr	r2, [sp, #4]
    f0e8:	add	r9, r3, #256	; 0x100
    f0ec:	add	r3, sl, r9
    f0f0:	cmp	r2, r3
    f0f4:	bgt	f0b4 <ReadUInt8Data.part.17+0xe14>
    f0f8:	sub	r9, r4, #256	; 0x100
    f0fc:	sub	r9, r9, #1
    f100:	bic	r9, r9, #255	; 0xff
    f104:	add	r9, r9, #256	; 0x100
    f108:	cmp	r4, r9
    f10c:	ble	e338 <ReadUInt8Data.part.17+0x98>
    f110:	sub	r4, r4, r9
    f114:	mov	r1, r7
    f118:	ldr	r3, [fp]
    f11c:	mov	r2, r4
    f120:	mov	r0, r8
    f124:	bl	1520 <fread@plt>
    f128:	add	r6, r6, r9
    f12c:	add	r5, r5, r0
    f130:	mov	r3, #0
    f134:	cmp	r4, r3
    f138:	ble	e338 <ReadUInt8Data.part.17+0x98>
    f13c:	ldrb	r2, [r8, r3]
    f140:	add	r3, r3, #1
    f144:	strb	r2, [r6], #1
    f148:	b	f134 <ReadUInt8Data.part.17+0xe94>
    f14c:	cmp	r5, #12
    f150:	bne	f358 <ReadUInt8Data.part.17+0x10b8>
    f154:	add	r8, sp, #16
    f158:	ldr	r3, [fp]
    f15c:	ldr	sl, [fp, #20]
    f160:	cmp	sl, #0
    f164:	beq	f268 <ReadUInt8Data.part.17+0xfc8>
    f168:	cmp	r4, #256	; 0x100
    f16c:	bgt	f1a4 <ReadUInt8Data.part.17+0xf04>
    f170:	mov	r1, r0
    f174:	mov	r2, r4
    f178:	mov	r0, r8
    f17c:	mov	r9, #0
    f180:	bl	1520 <fread@plt>
    f184:	mov	r5, r0
    f188:	cmp	r4, r9
    f18c:	ble	e338 <ReadUInt8Data.part.17+0x98>
    f190:	add	r0, r8, r9, lsl #3
    f194:	bl	17ec <Mat_int64Swap>
    f198:	strb	r0, [r6, r9]
    f19c:	add	r9, r9, #1
    f1a0:	b	f188 <ReadUInt8Data.part.17+0xee8>
    f1a4:	mvn	sl, #255	; 0xff
    f1a8:	sub	r3, r4, #256	; 0x100
    f1ac:	add	r9, r6, #256	; 0x100
    f1b0:	mov	r5, #0
    f1b4:	sub	sl, sl, r6
    f1b8:	str	r3, [sp, #4]
    f1bc:	mov	r2, #256	; 0x100
    f1c0:	mov	r1, r7
    f1c4:	ldr	r3, [fp]
    f1c8:	mov	r0, r8
    f1cc:	bl	1520 <fread@plt>
    f1d0:	add	r5, r5, r0
    f1d4:	sub	r3, r9, #256	; 0x100
    f1d8:	mov	r2, r8
    f1dc:	mov	r0, r2
    f1e0:	strd	r2, [sp, #8]
    f1e4:	bl	17ec <Mat_int64Swap>
    f1e8:	ldrd	r2, [sp, #8]
    f1ec:	strb	r0, [r3], #1
    f1f0:	cmp	r3, r9
    f1f4:	add	r2, r2, #8
    f1f8:	bne	f1dc <ReadUInt8Data.part.17+0xf3c>
    f1fc:	ldr	r2, [sp, #4]
    f200:	add	r9, r3, #256	; 0x100
    f204:	add	r3, sl, r9
    f208:	cmp	r3, r2
    f20c:	blt	f1bc <ReadUInt8Data.part.17+0xf1c>
    f210:	sub	r9, r4, #256	; 0x100
    f214:	sub	r9, r9, #1
    f218:	bic	r9, r9, #255	; 0xff
    f21c:	add	r9, r9, #256	; 0x100
    f220:	cmp	r4, r9
    f224:	ble	e338 <ReadUInt8Data.part.17+0x98>
    f228:	sub	r4, r4, r9
    f22c:	mov	r1, r7
    f230:	ldr	r3, [fp]
    f234:	mov	r2, r4
    f238:	mov	r0, r8
    f23c:	bl	1520 <fread@plt>
    f240:	add	r6, r6, r9
    f244:	add	r5, r5, r0
    f248:	mov	r9, #0
    f24c:	cmp	r4, r9
    f250:	ble	e338 <ReadUInt8Data.part.17+0x98>
    f254:	add	r0, r8, r9, lsl #3
    f258:	add	r9, r9, #1
    f25c:	bl	17ec <Mat_int64Swap>
    f260:	strb	r0, [r6], #1
    f264:	b	f24c <ReadUInt8Data.part.17+0xfac>
    f268:	cmp	r4, #256	; 0x100
    f26c:	bgt	f29c <ReadUInt8Data.part.17+0xffc>
    f270:	mov	r1, r0
    f274:	mov	r2, r4
    f278:	mov	r0, r8
    f27c:	bl	1520 <fread@plt>
    f280:	mov	r5, r0
    f284:	cmp	r4, sl
    f288:	ble	e338 <ReadUInt8Data.part.17+0x98>
    f28c:	ldr	r3, [r8], #8
    f290:	strb	r3, [r6, sl]
    f294:	add	sl, sl, #1
    f298:	b	f284 <ReadUInt8Data.part.17+0xfe4>
    f29c:	sub	r3, r4, #256	; 0x100
    f2a0:	add	r9, r6, #256	; 0x100
    f2a4:	mov	r5, sl
    f2a8:	str	r3, [sp, #8]
    f2ac:	mvn	r3, #255	; 0xff
    f2b0:	sub	r3, r3, r6
    f2b4:	str	r3, [sp, #12]
    f2b8:	mov	r2, #256	; 0x100
    f2bc:	mov	r1, r7
    f2c0:	ldr	r3, [fp]
    f2c4:	mov	r0, r8
    f2c8:	bl	1520 <fread@plt>
    f2cc:	add	r5, r5, r0
    f2d0:	sub	r3, r9, #256	; 0x100
    f2d4:	str	r8, [sp, #4]
    f2d8:	mov	r2, r8
    f2dc:	ldr	r1, [r2], #8
    f2e0:	strb	r1, [r3], #1
    f2e4:	cmp	r9, r3
    f2e8:	bne	f2dc <ReadUInt8Data.part.17+0x103c>
    f2ec:	ldrd	r2, [sp, #8]
    f2f0:	add	r9, r9, #256	; 0x100
    f2f4:	add	r3, r3, r9
    f2f8:	cmp	r2, r3
    f2fc:	bgt	f2b8 <ReadUInt8Data.part.17+0x1018>
    f300:	sub	r9, r4, #256	; 0x100
    f304:	sub	r9, r9, #1
    f308:	bic	r9, r9, #255	; 0xff
    f30c:	add	r9, r9, #256	; 0x100
    f310:	cmp	r4, r9
    f314:	ble	e338 <ReadUInt8Data.part.17+0x98>
    f318:	sub	r4, r4, r9
    f31c:	mov	r1, r7
    f320:	ldr	r3, [fp]
    f324:	mov	r2, r4
    f328:	mov	r0, r8
    f32c:	bl	1520 <fread@plt>
    f330:	add	r6, r6, r9
    f334:	add	r5, r5, r0
    f338:	cmp	r4, sl
    f33c:	ble	e338 <ReadUInt8Data.part.17+0x98>
    f340:	ldr	r2, [sp, #4]
    f344:	add	sl, sl, #1
    f348:	ldr	r3, [r2], #8
    f34c:	strb	r3, [r6], #1
    f350:	str	r2, [sp, #4]
    f354:	b	f338 <ReadUInt8Data.part.17+0x1098>
    f358:	cmp	r5, #13
    f35c:	movne	r5, #0
    f360:	bne	e338 <ReadUInt8Data.part.17+0x98>
    f364:	add	r8, sp, #16
    f368:	ldr	r3, [fp]
    f36c:	ldr	r9, [fp, #20]
    f370:	cmp	r9, #0
    f374:	beq	f478 <ReadUInt8Data.part.17+0x11d8>
    f378:	cmp	r4, #256	; 0x100
    f37c:	bgt	f3b4 <ReadUInt8Data.part.17+0x1114>
    f380:	mov	r1, r0
    f384:	mov	r2, r4
    f388:	mov	r0, r8
    f38c:	mov	r9, #0
    f390:	bl	1520 <fread@plt>
    f394:	mov	r5, r0
    f398:	cmp	r4, r9
    f39c:	ble	e338 <ReadUInt8Data.part.17+0x98>
    f3a0:	add	r0, r8, r9, lsl #3
    f3a4:	bl	1844 <Mat_uint64Swap>
    f3a8:	strb	r0, [r6, r9]
    f3ac:	add	r9, r9, #1
    f3b0:	b	f398 <ReadUInt8Data.part.17+0x10f8>
    f3b4:	mvn	sl, #255	; 0xff
    f3b8:	sub	r3, r4, #256	; 0x100
    f3bc:	add	r9, r6, #256	; 0x100
    f3c0:	mov	r5, #0
    f3c4:	sub	sl, sl, r6
    f3c8:	str	r3, [sp, #4]
    f3cc:	mov	r2, #256	; 0x100
    f3d0:	mov	r1, r7
    f3d4:	ldr	r3, [fp]
    f3d8:	mov	r0, r8
    f3dc:	bl	1520 <fread@plt>
    f3e0:	add	r5, r5, r0
    f3e4:	sub	r3, r9, #256	; 0x100
    f3e8:	mov	r2, r8
    f3ec:	mov	r0, r2
    f3f0:	strd	r2, [sp, #8]
    f3f4:	bl	1844 <Mat_uint64Swap>
    f3f8:	ldrd	r2, [sp, #8]
    f3fc:	strb	r0, [r3], #1
    f400:	cmp	r3, r9
    f404:	add	r2, r2, #8
    f408:	bne	f3ec <ReadUInt8Data.part.17+0x114c>
    f40c:	ldr	r2, [sp, #4]
    f410:	add	r9, r3, #256	; 0x100
    f414:	add	r3, sl, r9
    f418:	cmp	r2, r3
    f41c:	bgt	f3cc <ReadUInt8Data.part.17+0x112c>
    f420:	sub	r9, r4, #256	; 0x100
    f424:	sub	r9, r9, #1
    f428:	bic	r9, r9, #255	; 0xff
    f42c:	add	r9, r9, #256	; 0x100
    f430:	cmp	r4, r9
    f434:	ble	e338 <ReadUInt8Data.part.17+0x98>
    f438:	sub	r4, r4, r9
    f43c:	mov	r1, r7
    f440:	ldr	r3, [fp]
    f444:	mov	r2, r4
    f448:	mov	r0, r8
    f44c:	bl	1520 <fread@plt>
    f450:	add	r6, r6, r9
    f454:	add	r5, r5, r0
    f458:	mov	r9, #0
    f45c:	cmp	r4, r9
    f460:	ble	e338 <ReadUInt8Data.part.17+0x98>
    f464:	add	r0, r8, r9, lsl #3
    f468:	add	r9, r9, #1
    f46c:	bl	1844 <Mat_uint64Swap>
    f470:	strb	r0, [r6], #1
    f474:	b	f45c <ReadUInt8Data.part.17+0x11bc>
    f478:	cmp	r4, #256	; 0x100
    f47c:	bgt	f4ac <ReadUInt8Data.part.17+0x120c>
    f480:	mov	r1, r0
    f484:	mov	r2, r4
    f488:	mov	r0, r8
    f48c:	bl	1520 <fread@plt>
    f490:	mov	r5, r0
    f494:	cmp	r4, r9
    f498:	ble	e338 <ReadUInt8Data.part.17+0x98>
    f49c:	ldr	r3, [r8], #8
    f4a0:	strb	r3, [r6, r9]
    f4a4:	add	r9, r9, #1
    f4a8:	b	f494 <ReadUInt8Data.part.17+0x11f4>
    f4ac:	sub	r3, r4, #256	; 0x100
    f4b0:	add	sl, r6, #256	; 0x100
    f4b4:	mov	r5, r9
    f4b8:	str	r3, [sp, #8]
    f4bc:	mvn	r3, #255	; 0xff
    f4c0:	sub	r3, r3, r6
    f4c4:	str	r3, [sp, #12]
    f4c8:	mov	r2, #256	; 0x100
    f4cc:	mov	r1, r7
    f4d0:	ldr	r3, [fp]
    f4d4:	mov	r0, r8
    f4d8:	bl	1520 <fread@plt>
    f4dc:	add	r5, r5, r0
    f4e0:	sub	r3, sl, #256	; 0x100
    f4e4:	str	r8, [sp, #4]
    f4e8:	mov	r2, r8
    f4ec:	ldr	r1, [r2], #8
    f4f0:	strb	r1, [r3], #1
    f4f4:	cmp	r3, sl
    f4f8:	bne	f4ec <ReadUInt8Data.part.17+0x124c>
    f4fc:	add	sl, r3, #256	; 0x100
    f500:	ldrd	r2, [sp, #8]
    f504:	add	r3, r3, sl
    f508:	cmp	r2, r3
    f50c:	bgt	f4c8 <ReadUInt8Data.part.17+0x1228>
    f510:	sub	sl, r4, #256	; 0x100
    f514:	sub	sl, sl, #1
    f518:	bic	sl, sl, #255	; 0xff
    f51c:	add	sl, sl, #256	; 0x100
    f520:	cmp	r4, sl
    f524:	ble	e338 <ReadUInt8Data.part.17+0x98>
    f528:	sub	r4, r4, sl
    f52c:	mov	r1, r7
    f530:	ldr	r3, [fp]
    f534:	mov	r2, r4
    f538:	mov	r0, r8
    f53c:	bl	1520 <fread@plt>
    f540:	add	r6, r6, sl
    f544:	add	r5, r5, r0
    f548:	cmp	r4, r9
    f54c:	ble	e338 <ReadUInt8Data.part.17+0x98>
    f550:	ldr	r2, [sp, #4]
    f554:	add	r9, r9, #1
    f558:	ldr	r3, [r2], #8
    f55c:	strb	r3, [r6], #1
    f560:	str	r2, [sp, #4]
    f564:	b	f548 <ReadUInt8Data.part.17+0x12a8>

0000f568 <ReadDoubleData>:
    f568:	cmp	r1, #0
    f56c:	cmpne	r0, #0
    f570:	beq	f584 <ReadDoubleData+0x1c>
    f574:	ldr	ip, [r0]
    f578:	cmp	ip, #0
    f57c:	beq	f584 <ReadDoubleData+0x1c>
    f580:	b	335c <ReadDoubleData.part.0>
    f584:	mov	r0, #0
    f588:	bx	lr

0000f58c <ReadCompressedDoubleData>:
    f58c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    f590:	sub	sp, sp, #1056	; 0x420
    f594:	mov	r5, r0
    f598:	sub	sp, sp, #4
    f59c:	mov	r0, r3
    f5a0:	mov	fp, r1
    f5a4:	mov	sl, r2
    f5a8:	sub	r6, r3, #1
    f5ac:	ldr	r4, [sp, #1096]	; 0x448
    f5b0:	bl	1598 <Mat_SizeOf@plt>
    f5b4:	mov	r9, r0
    f5b8:	cmp	r6, #12
    f5bc:	addls	pc, pc, r6, lsl #2
    f5c0:	b	106c4 <ReadCompressedDoubleData+0x1138>
    f5c4:	b	105cc <ReadCompressedDoubleData+0x1040>
    f5c8:	b	104d4 <ReadCompressedDoubleData+0xf48>
    f5cc:	b	1008c <ReadCompressedDoubleData+0xb00>
    f5d0:	b	102b0 <ReadCompressedDoubleData+0xd24>
    f5d4:	b	fc64 <ReadCompressedDoubleData+0x6d8>
    f5d8:	b	fe78 <ReadCompressedDoubleData+0x8ec>
    f5dc:	b	f64c <ReadCompressedDoubleData+0xc0>
    f5e0:	b	106c4 <ReadCompressedDoubleData+0x1138>
    f5e4:	b	f5f8 <ReadCompressedDoubleData+0x6c>
    f5e8:	b	106c4 <ReadCompressedDoubleData+0x1138>
    f5ec:	b	106c4 <ReadCompressedDoubleData+0x1138>
    f5f0:	b	f874 <ReadCompressedDoubleData+0x2e8>
    f5f4:	b	fa6c <ReadCompressedDoubleData+0x4e0>
    f5f8:	ldr	r2, [r5, #20]
    f5fc:	mul	r3, r0, r4
    f600:	mov	r1, fp
    f604:	mov	r0, r5
    f608:	cmp	r2, #0
    f60c:	mov	r2, sl
    f610:	beq	f644 <ReadCompressedDoubleData+0xb8>
    f614:	mov	r5, #0
    f618:	bl	2dac <InflateData>
    f61c:	cmp	r5, r4
    f620:	blt	f634 <ReadCompressedDoubleData+0xa8>
    f624:	mul	r0, r9, r4
    f628:	add	sp, sp, #1056	; 0x420
    f62c:	add	sp, sp, #4
    f630:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    f634:	add	r0, sl, r5, lsl #3
    f638:	add	r5, r5, #1
    f63c:	bl	196c <Mat_doubleSwap>
    f640:	b	f61c <ReadCompressedDoubleData+0x90>
    f644:	bl	2dac <InflateData>
    f648:	b	f624 <ReadCompressedDoubleData+0x98>
    f64c:	ldr	r7, [r5, #20]
    f650:	add	r8, sp, #32
    f654:	cmp	r7, #0
    f658:	beq	f76c <ReadCompressedDoubleData+0x1e0>
    f65c:	cmp	r4, #256	; 0x100
    f660:	bgt	f69c <ReadCompressedDoubleData+0x110>
    f664:	mul	r3, r0, r4
    f668:	mov	r2, r8
    f66c:	mov	r0, r5
    f670:	mov	r1, fp
    f674:	mov	r5, #0
    f678:	bl	2dac <InflateData>
    f67c:	cmp	r5, r4
    f680:	bge	f624 <ReadCompressedDoubleData+0x98>
    f684:	add	r0, r8, r5, lsl #2
    f688:	add	r5, r5, #1
    f68c:	bl	193c <Mat_floatSwap>
    f690:	vcvt.f64.f32	d0, s0
    f694:	vstmia	sl!, {d0}
    f698:	b	f67c <ReadCompressedDoubleData+0xf0>
    f69c:	sub	r3, r4, #256	; 0x100
    f6a0:	mov	r7, #0
    f6a4:	mov	r6, r8
    f6a8:	str	r3, [sp, #12]
    f6ac:	lsl	r3, r0, #8
    f6b0:	str	r3, [sp, #8]
    f6b4:	add	r3, sl, #2048	; 0x800
    f6b8:	str	r3, [sp, #4]
    f6bc:	mov	r2, r6
    f6c0:	mov	r1, fp
    f6c4:	ldr	r3, [sp, #8]
    f6c8:	mov	r0, r5
    f6cc:	bl	2dac <InflateData>
    f6d0:	ldr	r3, [sp, #4]
    f6d4:	mov	r2, r6
    f6d8:	sub	r3, r3, #2048	; 0x800
    f6dc:	mov	r0, r2
    f6e0:	strd	r2, [sp, #16]
    f6e4:	bl	193c <Mat_floatSwap>
    f6e8:	vcvt.f64.f32	d0, s0
    f6ec:	ldr	r1, [sp, #4]
    f6f0:	ldrd	r2, [sp, #16]
    f6f4:	vstmia	r3!, {d0}
    f6f8:	cmp	r3, r1
    f6fc:	add	r2, r2, #4
    f700:	bne	f6dc <ReadCompressedDoubleData+0x150>
    f704:	add	r3, r3, #2048	; 0x800
    f708:	add	r7, r7, #256	; 0x100
    f70c:	str	r3, [sp, #4]
    f710:	ldr	r3, [sp, #12]
    f714:	cmp	r3, r7
    f718:	bgt	f6bc <ReadCompressedDoubleData+0x130>
    f71c:	sub	r3, r4, #256	; 0x100
    f720:	mov	r0, r5
    f724:	sub	r3, r3, #1
    f728:	mov	r2, r8
    f72c:	lsr	r3, r3, #8
    f730:	mov	r1, fp
    f734:	mov	r5, #0
    f738:	add	r7, r3, #1
    f73c:	sub	r4, r4, r7, lsl #8
    f740:	add	r7, sl, r7, lsl #11
    f744:	mul	r3, r9, r4
    f748:	bl	2dac <InflateData>
    f74c:	cmp	r5, r4
    f750:	bge	f624 <ReadCompressedDoubleData+0x98>
    f754:	add	r0, r6, r5, lsl #2
    f758:	add	r5, r5, #1
    f75c:	bl	193c <Mat_floatSwap>
    f760:	vcvt.f64.f32	d0, s0
    f764:	vstmia	r7!, {d0}
    f768:	b	f74c <ReadCompressedDoubleData+0x1c0>
    f76c:	cmp	r4, #256	; 0x100
    f770:	bgt	f7ac <ReadCompressedDoubleData+0x220>
    f774:	mul	r3, r0, r4
    f778:	mov	r1, fp
    f77c:	mov	r2, r8
    f780:	mov	r0, r5
    f784:	mov	fp, r8
    f788:	bl	2dac <InflateData>
    f78c:	mov	r3, sl
    f790:	cmp	r7, r4
    f794:	bge	f624 <ReadCompressedDoubleData+0x98>
    f798:	vldmia	fp!, {s14}
    f79c:	add	r7, r7, #1
    f7a0:	vcvt.f64.f32	d7, s14
    f7a4:	vstmia	r3!, {d7}
    f7a8:	b	f790 <ReadCompressedDoubleData+0x204>
    f7ac:	sub	r3, r4, #256	; 0x100
    f7b0:	mov	r6, r8
    f7b4:	str	r7, [sp, #4]
    f7b8:	str	r3, [sp, #20]
    f7bc:	lsl	r3, r0, #8
    f7c0:	str	r3, [sp, #16]
    f7c4:	add	r3, sl, #2048	; 0x800
    f7c8:	str	r3, [sp, #8]
    f7cc:	mov	r2, r6
    f7d0:	mov	r1, fp
    f7d4:	ldr	r3, [sp, #16]
    f7d8:	mov	r0, r5
    f7dc:	bl	2dac <InflateData>
    f7e0:	ldr	r3, [sp, #8]
    f7e4:	mov	r2, r6
    f7e8:	str	r6, [sp, #12]
    f7ec:	sub	r3, r3, #2048	; 0x800
    f7f0:	vldmia	r2!, {s14}
    f7f4:	ldr	r1, [sp, #8]
    f7f8:	vcvt.f64.f32	d7, s14
    f7fc:	vstmia	r3!, {d7}
    f800:	cmp	r3, r1
    f804:	bne	f7f0 <ReadCompressedDoubleData+0x264>
    f808:	ldr	r2, [sp, #4]
    f80c:	add	r3, r3, #2048	; 0x800
    f810:	add	r2, r2, #256	; 0x100
    f814:	strd	r2, [sp, #4]
    f818:	ldr	r3, [sp, #20]
    f81c:	cmp	r3, r2
    f820:	bgt	f7cc <ReadCompressedDoubleData+0x240>
    f824:	sub	r6, r4, #256	; 0x100
    f828:	mov	r2, r8
    f82c:	sub	r6, r6, #1
    f830:	mov	r1, fp
    f834:	lsr	r6, r6, #8
    f838:	mov	r0, r5
    f83c:	add	r6, r6, #1
    f840:	sub	r4, r4, r6, lsl #8
    f844:	add	r6, sl, r6, lsl #11
    f848:	mul	r3, r9, r4
    f84c:	bl	2dac <InflateData>
    f850:	cmp	r7, r4
    f854:	bge	f624 <ReadCompressedDoubleData+0x98>
    f858:	ldr	r3, [sp, #12]
    f85c:	add	r7, r7, #1
    f860:	vldmia	r3!, {s14}
    f864:	vcvt.f64.f32	d7, s14
    f868:	str	r3, [sp, #12]
    f86c:	vstmia	r6!, {d7}
    f870:	b	f850 <ReadCompressedDoubleData+0x2c4>
    f874:	ldr	r7, [r5, #20]
    f878:	add	r6, sp, #32
    f87c:	cmp	r7, #0
    f880:	beq	f974 <ReadCompressedDoubleData+0x3e8>
    f884:	cmp	r4, #128	; 0x80
    f888:	bgt	f8c4 <ReadCompressedDoubleData+0x338>
    f88c:	mul	r3, r0, r4
    f890:	mov	r2, r6
    f894:	mov	r0, r5
    f898:	mov	r1, fp
    f89c:	mov	r5, #0
    f8a0:	bl	2dac <InflateData>
    f8a4:	cmp	r5, r4
    f8a8:	bge	f624 <ReadCompressedDoubleData+0x98>
    f8ac:	add	r0, r6, r5, lsl #3
    f8b0:	add	r5, r5, #1
    f8b4:	bl	17ec <Mat_int64Swap>
    f8b8:	bl	3e530 <__aeabi_l2d>
    f8bc:	strd	r0, [sl], #8
    f8c0:	b	f8a4 <ReadCompressedDoubleData+0x318>
    f8c4:	lsl	r3, r0, #7
    f8c8:	sub	r8, r4, #128	; 0x80
    f8cc:	mov	r7, #0
    f8d0:	str	r3, [sp, #4]
    f8d4:	mov	r2, r6
    f8d8:	mov	r1, fp
    f8dc:	ldr	r3, [sp, #4]
    f8e0:	mov	r0, r5
    f8e4:	bl	2dac <InflateData>
    f8e8:	add	r2, sl, r7, lsl #3
    f8ec:	mov	r3, #0
    f8f0:	add	r0, r6, r3
    f8f4:	str	r3, [sp, #8]
    f8f8:	str	r2, [sp, #12]
    f8fc:	bl	17ec <Mat_int64Swap>
    f900:	bl	3e530 <__aeabi_l2d>
    f904:	ldr	r3, [sp, #8]
    f908:	ldr	r2, [sp, #12]
    f90c:	add	r3, r3, #8
    f910:	cmp	r3, #1024	; 0x400
    f914:	strd	r0, [r2], #8
    f918:	bne	f8f0 <ReadCompressedDoubleData+0x364>
    f91c:	add	r7, r7, #128	; 0x80
    f920:	cmp	r8, r7
    f924:	bgt	f8d4 <ReadCompressedDoubleData+0x348>
    f928:	sub	r7, r4, #129	; 0x81
    f92c:	mov	r0, r5
    f930:	lsr	r7, r7, #7
    f934:	mov	r2, r6
    f938:	mov	r1, fp
    f93c:	mov	r5, #0
    f940:	add	r7, r7, #1
    f944:	sub	r4, r4, r7, lsl #7
    f948:	add	r7, sl, r7, lsl #10
    f94c:	mul	r3, r9, r4
    f950:	bl	2dac <InflateData>
    f954:	cmp	r5, r4
    f958:	bge	f624 <ReadCompressedDoubleData+0x98>
    f95c:	add	r0, r6, r5, lsl #3
    f960:	add	r5, r5, #1
    f964:	bl	17ec <Mat_int64Swap>
    f968:	bl	3e530 <__aeabi_l2d>
    f96c:	strd	r0, [r7], #8
    f970:	b	f954 <ReadCompressedDoubleData+0x3c8>
    f974:	cmp	r4, #128	; 0x80
    f978:	bgt	f9ac <ReadCompressedDoubleData+0x420>
    f97c:	mul	r3, r0, r4
    f980:	mov	r2, r6
    f984:	mov	r1, fp
    f988:	mov	r0, r5
    f98c:	bl	2dac <InflateData>
    f990:	cmp	r7, r4
    f994:	bge	f624 <ReadCompressedDoubleData+0x98>
    f998:	ldrd	r0, [r6], #8
    f99c:	add	r7, r7, #1
    f9a0:	bl	3e530 <__aeabi_l2d>
    f9a4:	strd	r0, [sl], #8
    f9a8:	b	f990 <ReadCompressedDoubleData+0x404>
    f9ac:	sub	r3, r4, #128	; 0x80
    f9b0:	add	r8, sl, #1024	; 0x400
    f9b4:	str	r7, [sp, #4]
    f9b8:	str	r3, [sp, #16]
    f9bc:	lsl	r3, r0, #7
    f9c0:	str	r3, [sp, #12]
    f9c4:	mov	r2, r6
    f9c8:	mov	r1, fp
    f9cc:	ldr	r3, [sp, #12]
    f9d0:	mov	r0, r5
    f9d4:	bl	2dac <InflateData>
    f9d8:	sub	r3, r8, #1024	; 0x400
    f9dc:	mov	r2, r6
    f9e0:	str	r6, [sp, #8]
    f9e4:	ldrd	r0, [r2], #8
    f9e8:	strd	r2, [sp, #20]
    f9ec:	str	r2, [sp, #28]
    f9f0:	bl	3e530 <__aeabi_l2d>
    f9f4:	ldrd	r2, [sp, #20]
    f9f8:	strd	r0, [r3], #8
    f9fc:	cmp	r3, r8
    fa00:	bne	f9e4 <ReadCompressedDoubleData+0x458>
    fa04:	ldr	r2, [sp, #4]
    fa08:	add	r8, r3, #1024	; 0x400
    fa0c:	ldr	r3, [sp, #16]
    fa10:	add	r2, r2, #128	; 0x80
    fa14:	cmp	r3, r2
    fa18:	str	r2, [sp, #4]
    fa1c:	bgt	f9c4 <ReadCompressedDoubleData+0x438>
    fa20:	sub	r8, r4, #129	; 0x81
    fa24:	mov	r2, r6
    fa28:	lsr	r8, r8, #7
    fa2c:	mov	r1, fp
    fa30:	mov	r0, r5
    fa34:	add	r8, r8, #1
    fa38:	sub	r4, r4, r8, lsl #7
    fa3c:	add	r8, sl, r8, lsl #10
    fa40:	mul	r3, r9, r4
    fa44:	bl	2dac <InflateData>
    fa48:	cmp	r7, r4
    fa4c:	bge	f624 <ReadCompressedDoubleData+0x98>
    fa50:	ldr	r3, [sp, #8]
    fa54:	add	r7, r7, #1
    fa58:	ldrd	r0, [r3], #8
    fa5c:	str	r3, [sp, #8]
    fa60:	bl	3e530 <__aeabi_l2d>
    fa64:	strd	r0, [r8], #8
    fa68:	b	fa48 <ReadCompressedDoubleData+0x4bc>
    fa6c:	ldr	r7, [r5, #20]
    fa70:	add	r6, sp, #32
    fa74:	cmp	r7, #0
    fa78:	beq	fb6c <ReadCompressedDoubleData+0x5e0>
    fa7c:	cmp	r4, #128	; 0x80
    fa80:	bgt	fabc <ReadCompressedDoubleData+0x530>
    fa84:	mul	r3, r0, r4
    fa88:	mov	r2, r6
    fa8c:	mov	r0, r5
    fa90:	mov	r1, fp
    fa94:	mov	r5, #0
    fa98:	bl	2dac <InflateData>
    fa9c:	cmp	r5, r4
    faa0:	bge	f624 <ReadCompressedDoubleData+0x98>
    faa4:	add	r0, r6, r5, lsl #3
    faa8:	add	r5, r5, #1
    faac:	bl	1844 <Mat_uint64Swap>
    fab0:	bl	3e51c <__aeabi_ul2d>
    fab4:	strd	r0, [sl], #8
    fab8:	b	fa9c <ReadCompressedDoubleData+0x510>
    fabc:	lsl	r3, r0, #7
    fac0:	sub	r8, r4, #128	; 0x80
    fac4:	mov	r7, #0
    fac8:	str	r3, [sp, #4]
    facc:	mov	r2, r6
    fad0:	mov	r1, fp
    fad4:	ldr	r3, [sp, #4]
    fad8:	mov	r0, r5
    fadc:	bl	2dac <InflateData>
    fae0:	add	r2, sl, r7, lsl #3
    fae4:	mov	r3, #0
    fae8:	add	r0, r6, r3
    faec:	str	r3, [sp, #8]
    faf0:	str	r2, [sp, #12]
    faf4:	bl	1844 <Mat_uint64Swap>
    faf8:	bl	3e51c <__aeabi_ul2d>
    fafc:	ldr	r3, [sp, #8]
    fb00:	ldr	r2, [sp, #12]
    fb04:	add	r3, r3, #8
    fb08:	cmp	r3, #1024	; 0x400
    fb0c:	strd	r0, [r2], #8
    fb10:	bne	fae8 <ReadCompressedDoubleData+0x55c>
    fb14:	add	r7, r7, #128	; 0x80
    fb18:	cmp	r8, r7
    fb1c:	bgt	facc <ReadCompressedDoubleData+0x540>
    fb20:	sub	r7, r4, #129	; 0x81
    fb24:	mov	r0, r5
    fb28:	lsr	r7, r7, #7
    fb2c:	mov	r2, r6
    fb30:	mov	r1, fp
    fb34:	mov	r5, #0
    fb38:	add	r7, r7, #1
    fb3c:	sub	r4, r4, r7, lsl #7
    fb40:	add	r7, sl, r7, lsl #10
    fb44:	mul	r3, r9, r4
    fb48:	bl	2dac <InflateData>
    fb4c:	cmp	r5, r4
    fb50:	bge	f624 <ReadCompressedDoubleData+0x98>
    fb54:	add	r0, r6, r5, lsl #3
    fb58:	add	r5, r5, #1
    fb5c:	bl	1844 <Mat_uint64Swap>
    fb60:	bl	3e51c <__aeabi_ul2d>
    fb64:	strd	r0, [r7], #8
    fb68:	b	fb4c <ReadCompressedDoubleData+0x5c0>
    fb6c:	cmp	r4, #128	; 0x80
    fb70:	bgt	fba4 <ReadCompressedDoubleData+0x618>
    fb74:	mul	r3, r0, r4
    fb78:	mov	r2, r6
    fb7c:	mov	r1, fp
    fb80:	mov	r0, r5
    fb84:	bl	2dac <InflateData>
    fb88:	cmp	r7, r4
    fb8c:	bge	f624 <ReadCompressedDoubleData+0x98>
    fb90:	ldrd	r0, [r6], #8
    fb94:	add	r7, r7, #1
    fb98:	bl	3e51c <__aeabi_ul2d>
    fb9c:	strd	r0, [sl], #8
    fba0:	b	fb88 <ReadCompressedDoubleData+0x5fc>
    fba4:	sub	r3, r4, #128	; 0x80
    fba8:	add	r8, sl, #1024	; 0x400
    fbac:	str	r7, [sp, #4]
    fbb0:	str	r3, [sp, #16]
    fbb4:	lsl	r3, r0, #7
    fbb8:	str	r3, [sp, #12]
    fbbc:	mov	r2, r6
    fbc0:	mov	r1, fp
    fbc4:	ldr	r3, [sp, #12]
    fbc8:	mov	r0, r5
    fbcc:	bl	2dac <InflateData>
    fbd0:	sub	r3, r8, #1024	; 0x400
    fbd4:	mov	r2, r6
    fbd8:	str	r6, [sp, #8]
    fbdc:	ldrd	r0, [r2], #8
    fbe0:	strd	r2, [sp, #20]
    fbe4:	str	r2, [sp, #28]
    fbe8:	bl	3e51c <__aeabi_ul2d>
    fbec:	ldrd	r2, [sp, #20]
    fbf0:	strd	r0, [r3], #8
    fbf4:	cmp	r3, r8
    fbf8:	bne	fbdc <ReadCompressedDoubleData+0x650>
    fbfc:	ldr	r2, [sp, #4]
    fc00:	add	r8, r3, #1024	; 0x400
    fc04:	ldr	r3, [sp, #16]
    fc08:	add	r2, r2, #128	; 0x80
    fc0c:	cmp	r3, r2
    fc10:	str	r2, [sp, #4]
    fc14:	bgt	fbbc <ReadCompressedDoubleData+0x630>
    fc18:	sub	r8, r4, #129	; 0x81
    fc1c:	mov	r2, r6
    fc20:	lsr	r8, r8, #7
    fc24:	mov	r1, fp
    fc28:	mov	r0, r5
    fc2c:	add	r8, r8, #1
    fc30:	sub	r4, r4, r8, lsl #7
    fc34:	add	r8, sl, r8, lsl #10
    fc38:	mul	r3, r9, r4
    fc3c:	bl	2dac <InflateData>
    fc40:	cmp	r7, r4
    fc44:	bge	f624 <ReadCompressedDoubleData+0x98>
    fc48:	ldr	r3, [sp, #8]
    fc4c:	add	r7, r7, #1
    fc50:	ldrd	r0, [r3], #8
    fc54:	str	r3, [sp, #8]
    fc58:	bl	3e51c <__aeabi_ul2d>
    fc5c:	strd	r0, [r8], #8
    fc60:	b	fc40 <ReadCompressedDoubleData+0x6b4>
    fc64:	ldr	r6, [r5, #20]
    fc68:	add	r7, sp, #32
    fc6c:	cmp	r6, #0
    fc70:	beq	fd80 <ReadCompressedDoubleData+0x7f4>
    fc74:	cmp	r4, #256	; 0x100
    fc78:	bgt	fcb8 <ReadCompressedDoubleData+0x72c>
    fc7c:	mul	r3, r0, r4
    fc80:	mov	r2, r7
    fc84:	mov	r0, r5
    fc88:	mov	r1, fp
    fc8c:	mov	r5, #0
    fc90:	bl	2dac <InflateData>
    fc94:	cmp	r5, r4
    fc98:	bge	f624 <ReadCompressedDoubleData+0x98>
    fc9c:	add	r0, r7, r5, lsl #2
    fca0:	add	r5, r5, #1
    fca4:	bl	189c <Mat_int32Swap>
    fca8:	vmov	s15, r0
    fcac:	vcvt.f64.s32	d7, s15
    fcb0:	vstmia	sl!, {d7}
    fcb4:	b	fc94 <ReadCompressedDoubleData+0x708>
    fcb8:	sub	r3, r4, #256	; 0x100
    fcbc:	add	r8, sl, #2048	; 0x800
    fcc0:	str	r7, [sp, #4]
    fcc4:	mov	r6, #0
    fcc8:	str	r3, [sp, #12]
    fccc:	lsl	r3, r0, #8
    fcd0:	str	r3, [sp, #8]
    fcd4:	mov	r1, fp
    fcd8:	mov	r0, r5
    fcdc:	ldrd	r2, [sp, #4]
    fce0:	bl	2dac <InflateData>
    fce4:	ldr	r2, [sp, #4]
    fce8:	sub	r3, r8, #2048	; 0x800
    fcec:	mov	r0, r2
    fcf0:	strd	r2, [sp, #16]
    fcf4:	bl	189c <Mat_int32Swap>
    fcf8:	vmov	s15, r0
    fcfc:	ldrd	r2, [sp, #16]
    fd00:	add	r2, r2, #4
    fd04:	vcvt.f64.s32	d7, s15
    fd08:	vstmia	r3!, {d7}
    fd0c:	cmp	r3, r8
    fd10:	bne	fcec <ReadCompressedDoubleData+0x760>
    fd14:	add	r8, r3, #2048	; 0x800
    fd18:	ldr	r3, [sp, #12]
    fd1c:	add	r6, r6, #256	; 0x100
    fd20:	cmp	r3, r6
    fd24:	bgt	fcd4 <ReadCompressedDoubleData+0x748>
    fd28:	sub	r3, r4, #256	; 0x100
    fd2c:	mov	r0, r5
    fd30:	sub	r3, r3, #1
    fd34:	mov	r2, r7
    fd38:	lsr	r3, r3, #8
    fd3c:	mov	r1, fp
    fd40:	mov	r5, #0
    fd44:	add	r6, r3, #1
    fd48:	sub	r4, r4, r6, lsl #8
    fd4c:	add	r6, sl, r6, lsl #11
    fd50:	mul	r3, r9, r4
    fd54:	bl	2dac <InflateData>
    fd58:	cmp	r5, r4
    fd5c:	bge	f624 <ReadCompressedDoubleData+0x98>
    fd60:	ldr	r3, [sp, #4]
    fd64:	add	r0, r3, r5, lsl #2
    fd68:	add	r5, r5, #1
    fd6c:	bl	189c <Mat_int32Swap>
    fd70:	vmov	s15, r0
    fd74:	vcvt.f64.s32	d7, s15
    fd78:	vstmia	r6!, {d7}
    fd7c:	b	fd58 <ReadCompressedDoubleData+0x7cc>
    fd80:	cmp	r4, #256	; 0x100
    fd84:	bgt	fdc0 <ReadCompressedDoubleData+0x834>
    fd88:	mul	r3, r0, r4
    fd8c:	mov	r2, r7
    fd90:	mov	r1, fp
    fd94:	mov	r0, r5
    fd98:	bl	2dac <InflateData>
    fd9c:	mov	r3, sl
    fda0:	cmp	r6, r4
    fda4:	bge	f624 <ReadCompressedDoubleData+0x98>
    fda8:	ldr	r2, [r7, r6, lsl #2]
    fdac:	add	r6, r6, #1
    fdb0:	vmov	s15, r2
    fdb4:	vcvt.f64.s32	d7, s15
    fdb8:	vstmia	r3!, {d7}
    fdbc:	b	fda0 <ReadCompressedDoubleData+0x814>
    fdc0:	sub	r3, r4, #256	; 0x100
    fdc4:	mov	r8, r6
    fdc8:	str	r7, [sp, #8]
    fdcc:	str	r3, [sp, #16]
    fdd0:	lsl	r3, r0, #8
    fdd4:	str	r3, [sp, #12]
    fdd8:	add	r3, sl, #2048	; 0x800
    fddc:	str	r3, [sp, #4]
    fde0:	mov	r1, fp
    fde4:	mov	r0, r5
    fde8:	ldrd	r2, [sp, #8]
    fdec:	bl	2dac <InflateData>
    fdf0:	ldr	r3, [sp, #4]
    fdf4:	ldr	r2, [sp, #8]
    fdf8:	sub	r3, r3, #2048	; 0x800
    fdfc:	vldmia	r2!, {s14}
    fe00:	ldr	r1, [sp, #4]
    fe04:	vcvt.f64.s32	d7, s14
    fe08:	vstmia	r3!, {d7}
    fe0c:	cmp	r3, r1
    fe10:	bne	fdfc <ReadCompressedDoubleData+0x870>
    fe14:	add	r3, r3, #2048	; 0x800
    fe18:	add	r8, r8, #256	; 0x100
    fe1c:	str	r3, [sp, #4]
    fe20:	ldr	r3, [sp, #16]
    fe24:	cmp	r3, r8
    fe28:	bgt	fde0 <ReadCompressedDoubleData+0x854>
    fe2c:	sub	r3, r4, #256	; 0x100
    fe30:	mov	r2, r7
    fe34:	sub	r3, r3, #1
    fe38:	mov	r1, fp
    fe3c:	lsr	r3, r3, #8
    fe40:	mov	r0, r5
    fe44:	add	r8, r3, #1
    fe48:	sub	r4, r4, r8, lsl #8
    fe4c:	add	r8, sl, r8, lsl #11
    fe50:	mul	r3, r9, r4
    fe54:	bl	2dac <InflateData>
    fe58:	cmp	r6, r4
    fe5c:	bge	f624 <ReadCompressedDoubleData+0x98>
    fe60:	ldr	r3, [r7, r6, lsl #2]
    fe64:	add	r6, r6, #1
    fe68:	vmov	s15, r3
    fe6c:	vcvt.f64.s32	d7, s15
    fe70:	vstmia	r8!, {d7}
    fe74:	b	fe58 <ReadCompressedDoubleData+0x8cc>
    fe78:	ldr	r6, [r5, #20]
    fe7c:	add	r7, sp, #32
    fe80:	cmp	r6, #0
    fe84:	beq	ff94 <ReadCompressedDoubleData+0xa08>
    fe88:	cmp	r4, #256	; 0x100
    fe8c:	bgt	fecc <ReadCompressedDoubleData+0x940>
    fe90:	mul	r3, r0, r4
    fe94:	mov	r2, r7
    fe98:	mov	r0, r5
    fe9c:	mov	r1, fp
    fea0:	mov	r5, #0
    fea4:	bl	2dac <InflateData>
    fea8:	cmp	r5, r4
    feac:	bge	f624 <ReadCompressedDoubleData+0x98>
    feb0:	add	r0, r7, r5, lsl #2
    feb4:	add	r5, r5, #1
    feb8:	bl	18cc <Mat_uint32Swap>
    febc:	vmov	s15, r0
    fec0:	vcvt.f64.u32	d7, s15
    fec4:	vstmia	sl!, {d7}
    fec8:	b	fea8 <ReadCompressedDoubleData+0x91c>
    fecc:	sub	r3, r4, #256	; 0x100
    fed0:	add	r8, sl, #2048	; 0x800
    fed4:	str	r7, [sp, #4]
    fed8:	mov	r6, #0
    fedc:	str	r3, [sp, #12]
    fee0:	lsl	r3, r0, #8
    fee4:	str	r3, [sp, #8]
    fee8:	mov	r1, fp
    feec:	mov	r0, r5
    fef0:	ldrd	r2, [sp, #4]
    fef4:	bl	2dac <InflateData>
    fef8:	ldr	r2, [sp, #4]
    fefc:	sub	r3, r8, #2048	; 0x800
    ff00:	mov	r0, r2
    ff04:	strd	r2, [sp, #16]
    ff08:	bl	18cc <Mat_uint32Swap>
    ff0c:	vmov	s15, r0
    ff10:	ldrd	r2, [sp, #16]
    ff14:	add	r2, r2, #4
    ff18:	vcvt.f64.u32	d7, s15
    ff1c:	vstmia	r3!, {d7}
    ff20:	cmp	r3, r8
    ff24:	bne	ff00 <ReadCompressedDoubleData+0x974>
    ff28:	add	r8, r3, #2048	; 0x800
    ff2c:	ldr	r3, [sp, #12]
    ff30:	add	r6, r6, #256	; 0x100
    ff34:	cmp	r3, r6
    ff38:	bgt	fee8 <ReadCompressedDoubleData+0x95c>
    ff3c:	sub	r3, r4, #256	; 0x100
    ff40:	mov	r0, r5
    ff44:	sub	r3, r3, #1
    ff48:	mov	r2, r7
    ff4c:	lsr	r3, r3, #8
    ff50:	mov	r1, fp
    ff54:	mov	r5, #0
    ff58:	add	r6, r3, #1
    ff5c:	sub	r4, r4, r6, lsl #8
    ff60:	add	r6, sl, r6, lsl #11
    ff64:	mul	r3, r9, r4
    ff68:	bl	2dac <InflateData>
    ff6c:	cmp	r5, r4
    ff70:	bge	f624 <ReadCompressedDoubleData+0x98>
    ff74:	ldr	r3, [sp, #4]
    ff78:	add	r0, r3, r5, lsl #2
    ff7c:	add	r5, r5, #1
    ff80:	bl	18cc <Mat_uint32Swap>
    ff84:	vmov	s15, r0
    ff88:	vcvt.f64.u32	d7, s15
    ff8c:	vstmia	r6!, {d7}
    ff90:	b	ff6c <ReadCompressedDoubleData+0x9e0>
    ff94:	cmp	r4, #256	; 0x100
    ff98:	bgt	ffd4 <ReadCompressedDoubleData+0xa48>
    ff9c:	mul	r3, r0, r4
    ffa0:	mov	r2, r7
    ffa4:	mov	r1, fp
    ffa8:	mov	r0, r5
    ffac:	bl	2dac <InflateData>
    ffb0:	mov	r3, sl
    ffb4:	cmp	r6, r4
    ffb8:	bge	f624 <ReadCompressedDoubleData+0x98>
    ffbc:	ldr	r2, [r7, r6, lsl #2]
    ffc0:	add	r6, r6, #1
    ffc4:	vmov	s15, r2
    ffc8:	vcvt.f64.u32	d7, s15
    ffcc:	vstmia	r3!, {d7}
    ffd0:	b	ffb4 <ReadCompressedDoubleData+0xa28>
    ffd4:	sub	r3, r4, #256	; 0x100
    ffd8:	mov	r8, r6
    ffdc:	str	r7, [sp, #8]
    ffe0:	str	r3, [sp, #16]
    ffe4:	lsl	r3, r0, #8
    ffe8:	str	r3, [sp, #12]
    ffec:	add	r3, sl, #2048	; 0x800
    fff0:	str	r3, [sp, #4]
    fff4:	mov	r1, fp
    fff8:	mov	r0, r5
    fffc:	ldrd	r2, [sp, #8]
   10000:	bl	2dac <InflateData>
   10004:	ldr	r3, [sp, #4]
   10008:	ldr	r2, [sp, #8]
   1000c:	sub	r3, r3, #2048	; 0x800
   10010:	vldmia	r2!, {s14}
   10014:	ldr	r1, [sp, #4]
   10018:	vcvt.f64.u32	d7, s14
   1001c:	vstmia	r3!, {d7}
   10020:	cmp	r3, r1
   10024:	bne	10010 <ReadCompressedDoubleData+0xa84>
   10028:	add	r3, r3, #2048	; 0x800
   1002c:	add	r8, r8, #256	; 0x100
   10030:	str	r3, [sp, #4]
   10034:	ldr	r3, [sp, #16]
   10038:	cmp	r3, r8
   1003c:	bgt	fff4 <ReadCompressedDoubleData+0xa68>
   10040:	sub	r3, r4, #256	; 0x100
   10044:	mov	r2, r7
   10048:	sub	r3, r3, #1
   1004c:	mov	r1, fp
   10050:	lsr	r3, r3, #8
   10054:	mov	r0, r5
   10058:	add	r8, r3, #1
   1005c:	sub	r4, r4, r8, lsl #8
   10060:	add	r8, sl, r8, lsl #11
   10064:	mul	r3, r9, r4
   10068:	bl	2dac <InflateData>
   1006c:	cmp	r6, r4
   10070:	bge	f624 <ReadCompressedDoubleData+0x98>
   10074:	ldr	r3, [r7, r6, lsl #2]
   10078:	add	r6, r6, #1
   1007c:	vmov	s15, r3
   10080:	vcvt.f64.u32	d7, s15
   10084:	vstmia	r8!, {d7}
   10088:	b	1006c <ReadCompressedDoubleData+0xae0>
   1008c:	ldr	r7, [r5, #20]
   10090:	add	r6, sp, #32
   10094:	cmp	r7, #0
   10098:	beq	101a8 <ReadCompressedDoubleData+0xc1c>
   1009c:	cmp	r4, #512	; 0x200
   100a0:	bgt	100e0 <ReadCompressedDoubleData+0xb54>
   100a4:	mul	r3, r0, r4
   100a8:	mov	r2, r6
   100ac:	mov	r0, r5
   100b0:	mov	r1, fp
   100b4:	mov	r5, #0
   100b8:	bl	2dac <InflateData>
   100bc:	cmp	r5, r4
   100c0:	bge	f624 <ReadCompressedDoubleData+0x98>
   100c4:	add	r0, r6, r5, lsl #1
   100c8:	add	r5, r5, #1
   100cc:	bl	18fc <Mat_int16Swap>
   100d0:	vmov	s15, r0
   100d4:	vcvt.f64.s32	d7, s15
   100d8:	vstmia	sl!, {d7}
   100dc:	b	100bc <ReadCompressedDoubleData+0xb30>
   100e0:	sub	r3, r4, #512	; 0x200
   100e4:	add	r7, sl, #4096	; 0x1000
   100e8:	str	r6, [sp, #4]
   100ec:	mov	r8, #0
   100f0:	str	r3, [sp, #12]
   100f4:	lsl	r3, r0, #9
   100f8:	str	r3, [sp, #8]
   100fc:	mov	r1, fp
   10100:	mov	r0, r5
   10104:	ldrd	r2, [sp, #4]
   10108:	bl	2dac <InflateData>
   1010c:	ldr	r2, [sp, #4]
   10110:	sub	r3, r7, #4096	; 0x1000
   10114:	mov	r0, r2
   10118:	strd	r2, [sp, #16]
   1011c:	bl	18fc <Mat_int16Swap>
   10120:	vmov	s15, r0
   10124:	ldrd	r2, [sp, #16]
   10128:	add	r2, r2, #2
   1012c:	vcvt.f64.s32	d7, s15
   10130:	vstmia	r3!, {d7}
   10134:	cmp	r7, r3
   10138:	bne	10114 <ReadCompressedDoubleData+0xb88>
   1013c:	ldr	r3, [sp, #12]
   10140:	add	r8, r8, #512	; 0x200
   10144:	add	r7, r7, #4096	; 0x1000
   10148:	cmp	r3, r8
   1014c:	bgt	100fc <ReadCompressedDoubleData+0xb70>
   10150:	sub	r3, r4, #512	; 0x200
   10154:	mov	r0, r5
   10158:	sub	r3, r3, #1
   1015c:	mov	r2, r6
   10160:	lsr	r3, r3, #9
   10164:	mov	r1, fp
   10168:	mov	r5, #0
   1016c:	add	r7, r3, #1
   10170:	sub	r4, r4, r7, lsl #9
   10174:	add	r7, sl, r7, lsl #12
   10178:	mul	r3, r9, r4
   1017c:	bl	2dac <InflateData>
   10180:	cmp	r5, r4
   10184:	bge	f624 <ReadCompressedDoubleData+0x98>
   10188:	ldr	r3, [sp, #4]
   1018c:	add	r0, r3, r5, lsl #1
   10190:	add	r5, r5, #1
   10194:	bl	18fc <Mat_int16Swap>
   10198:	vmov	s15, r0
   1019c:	vcvt.f64.s32	d7, s15
   101a0:	vstmia	r7!, {d7}
   101a4:	b	10180 <ReadCompressedDoubleData+0xbf4>
   101a8:	cmp	r4, #512	; 0x200
   101ac:	bgt	101e8 <ReadCompressedDoubleData+0xc5c>
   101b0:	mul	r3, r0, r4
   101b4:	mov	r2, r6
   101b8:	mov	r1, fp
   101bc:	mov	r0, r5
   101c0:	bl	2dac <InflateData>
   101c4:	mov	r3, sl
   101c8:	cmp	r7, r4
   101cc:	bge	f624 <ReadCompressedDoubleData+0x98>
   101d0:	ldrsh	r2, [r6], #2
   101d4:	add	r7, r7, #1
   101d8:	vmov	s14, r2
   101dc:	vcvt.f64.s32	d7, s14
   101e0:	vstmia	r3!, {d7}
   101e4:	b	101c8 <ReadCompressedDoubleData+0xc3c>
   101e8:	sub	r3, r4, #512	; 0x200
   101ec:	mov	r8, r7
   101f0:	str	r3, [sp, #16]
   101f4:	lsl	r3, r0, #9
   101f8:	str	r3, [sp, #12]
   101fc:	add	r3, sl, #4096	; 0x1000
   10200:	str	r3, [sp, #4]
   10204:	mov	r2, r6
   10208:	mov	r1, fp
   1020c:	ldr	r3, [sp, #12]
   10210:	mov	r0, r5
   10214:	bl	2dac <InflateData>
   10218:	ldr	r3, [sp, #4]
   1021c:	mov	r2, r6
   10220:	str	r6, [sp, #8]
   10224:	sub	r3, r3, #4096	; 0x1000
   10228:	ldrsh	r1, [r2], #2
   1022c:	vmov	s14, r1
   10230:	ldr	r1, [sp, #4]
   10234:	vcvt.f64.s32	d7, s14
   10238:	vstmia	r3!, {d7}
   1023c:	cmp	r3, r1
   10240:	bne	10228 <ReadCompressedDoubleData+0xc9c>
   10244:	add	r3, r3, #4096	; 0x1000
   10248:	add	r8, r8, #512	; 0x200
   1024c:	str	r3, [sp, #4]
   10250:	ldr	r3, [sp, #16]
   10254:	cmp	r3, r8
   10258:	bgt	10204 <ReadCompressedDoubleData+0xc78>
   1025c:	sub	r8, r4, #512	; 0x200
   10260:	mov	r2, r6
   10264:	sub	r8, r8, #1
   10268:	mov	r1, fp
   1026c:	lsr	r8, r8, #9
   10270:	mov	r0, r5
   10274:	add	r8, r8, #1
   10278:	sub	r4, r4, r8, lsl #9
   1027c:	add	r8, sl, r8, lsl #12
   10280:	mul	r3, r9, r4
   10284:	bl	2dac <InflateData>
   10288:	cmp	r7, r4
   1028c:	bge	f624 <ReadCompressedDoubleData+0x98>
   10290:	ldr	r3, [sp, #8]
   10294:	add	r7, r7, #1
   10298:	ldrsh	r2, [r3], #2
   1029c:	vmov	s14, r2
   102a0:	str	r3, [sp, #8]
   102a4:	vcvt.f64.s32	d7, s14
   102a8:	vstmia	r8!, {d7}
   102ac:	b	10288 <ReadCompressedDoubleData+0xcfc>
   102b0:	ldr	r7, [r5, #20]
   102b4:	add	r6, sp, #32
   102b8:	cmp	r7, #0
   102bc:	beq	103cc <ReadCompressedDoubleData+0xe40>
   102c0:	cmp	r4, #512	; 0x200
   102c4:	bgt	10304 <ReadCompressedDoubleData+0xd78>
   102c8:	mul	r3, r0, r4
   102cc:	mov	r2, r6
   102d0:	mov	r0, r5
   102d4:	mov	r1, fp
   102d8:	mov	r5, #0
   102dc:	bl	2dac <InflateData>
   102e0:	cmp	r5, r4
   102e4:	bge	f624 <ReadCompressedDoubleData+0x98>
   102e8:	add	r0, r6, r5, lsl #1
   102ec:	add	r5, r5, #1
   102f0:	bl	191c <Mat_uint16Swap>
   102f4:	vmov	s15, r0
   102f8:	vcvt.f64.u32	d7, s15
   102fc:	vstmia	sl!, {d7}
   10300:	b	102e0 <ReadCompressedDoubleData+0xd54>
   10304:	sub	r3, r4, #512	; 0x200
   10308:	add	r8, sl, #4096	; 0x1000
   1030c:	str	r6, [sp, #4]
   10310:	mov	r7, #0
   10314:	str	r3, [sp, #12]
   10318:	lsl	r3, r0, #9
   1031c:	str	r3, [sp, #8]
   10320:	mov	r1, fp
   10324:	mov	r0, r5
   10328:	ldrd	r2, [sp, #4]
   1032c:	bl	2dac <InflateData>
   10330:	ldr	r2, [sp, #4]
   10334:	sub	r3, r8, #4096	; 0x1000
   10338:	mov	r0, r2
   1033c:	strd	r2, [sp, #16]
   10340:	bl	191c <Mat_uint16Swap>
   10344:	vmov	s15, r0
   10348:	ldrd	r2, [sp, #16]
   1034c:	add	r2, r2, #2
   10350:	vcvt.f64.u32	d7, s15
   10354:	vstmia	r3!, {d7}
   10358:	cmp	r3, r8
   1035c:	bne	10338 <ReadCompressedDoubleData+0xdac>
   10360:	add	r8, r3, #4096	; 0x1000
   10364:	ldr	r3, [sp, #12]
   10368:	add	r7, r7, #512	; 0x200
   1036c:	cmp	r3, r7
   10370:	bgt	10320 <ReadCompressedDoubleData+0xd94>
   10374:	sub	r3, r4, #512	; 0x200
   10378:	mov	r0, r5
   1037c:	sub	r3, r3, #1
   10380:	mov	r2, r6
   10384:	lsr	r3, r3, #9
   10388:	mov	r1, fp
   1038c:	mov	r5, #0
   10390:	add	r7, r3, #1
   10394:	sub	r4, r4, r7, lsl #9
   10398:	add	r7, sl, r7, lsl #12
   1039c:	mul	r3, r9, r4
   103a0:	bl	2dac <InflateData>
   103a4:	cmp	r5, r4
   103a8:	bge	f624 <ReadCompressedDoubleData+0x98>
   103ac:	ldr	r3, [sp, #4]
   103b0:	add	r0, r3, r5, lsl #1
   103b4:	add	r5, r5, #1
   103b8:	bl	191c <Mat_uint16Swap>
   103bc:	vmov	s15, r0
   103c0:	vcvt.f64.u32	d7, s15
   103c4:	vstmia	r7!, {d7}
   103c8:	b	103a4 <ReadCompressedDoubleData+0xe18>
   103cc:	cmp	r4, #512	; 0x200
   103d0:	bgt	1040c <ReadCompressedDoubleData+0xe80>
   103d4:	mul	r3, r0, r4
   103d8:	mov	r2, r6
   103dc:	mov	r1, fp
   103e0:	mov	r0, r5
   103e4:	bl	2dac <InflateData>
   103e8:	mov	r3, sl
   103ec:	cmp	r7, r4
   103f0:	bge	f624 <ReadCompressedDoubleData+0x98>
   103f4:	ldrh	r2, [r6], #2
   103f8:	add	r7, r7, #1
   103fc:	vmov	s14, r2
   10400:	vcvt.f64.u32	d7, s14
   10404:	vstmia	r3!, {d7}
   10408:	b	103ec <ReadCompressedDoubleData+0xe60>
   1040c:	sub	r3, r4, #512	; 0x200
   10410:	mov	r8, r7
   10414:	str	r3, [sp, #16]
   10418:	lsl	r3, r0, #9
   1041c:	str	r3, [sp, #12]
   10420:	add	r3, sl, #4096	; 0x1000
   10424:	str	r3, [sp, #4]
   10428:	mov	r2, r6
   1042c:	mov	r1, fp
   10430:	ldr	r3, [sp, #12]
   10434:	mov	r0, r5
   10438:	bl	2dac <InflateData>
   1043c:	ldr	r3, [sp, #4]
   10440:	mov	r2, r6
   10444:	str	r6, [sp, #8]
   10448:	sub	r3, r3, #4096	; 0x1000
   1044c:	ldrh	r1, [r2], #2
   10450:	vmov	s14, r1
   10454:	ldr	r1, [sp, #4]
   10458:	vcvt.f64.u32	d7, s14
   1045c:	vstmia	r3!, {d7}
   10460:	cmp	r3, r1
   10464:	bne	1044c <ReadCompressedDoubleData+0xec0>
   10468:	add	r3, r3, #4096	; 0x1000
   1046c:	add	r8, r8, #512	; 0x200
   10470:	str	r3, [sp, #4]
   10474:	ldr	r3, [sp, #16]
   10478:	cmp	r3, r8
   1047c:	bgt	10428 <ReadCompressedDoubleData+0xe9c>
   10480:	sub	r8, r4, #512	; 0x200
   10484:	mov	r2, r6
   10488:	sub	r8, r8, #1
   1048c:	mov	r1, fp
   10490:	lsr	r8, r8, #9
   10494:	mov	r0, r5
   10498:	add	r8, r8, #1
   1049c:	sub	r4, r4, r8, lsl #9
   104a0:	add	r8, sl, r8, lsl #12
   104a4:	mul	r3, r9, r4
   104a8:	bl	2dac <InflateData>
   104ac:	cmp	r7, r4
   104b0:	bge	f624 <ReadCompressedDoubleData+0x98>
   104b4:	ldr	r3, [sp, #8]
   104b8:	add	r7, r7, #1
   104bc:	ldrh	r2, [r3], #2
   104c0:	vmov	s14, r2
   104c4:	str	r3, [sp, #8]
   104c8:	vcvt.f64.u32	d7, s14
   104cc:	vstmia	r8!, {d7}
   104d0:	b	104ac <ReadCompressedDoubleData+0xf20>
   104d4:	cmp	r4, #1024	; 0x400
   104d8:	add	r6, sp, #32
   104dc:	bgt	1051c <ReadCompressedDoubleData+0xf90>
   104e0:	mul	r3, r0, r4
   104e4:	mov	r2, r6
   104e8:	mov	r1, fp
   104ec:	mov	r0, r5
   104f0:	bl	2dac <InflateData>
   104f4:	mov	r2, sl
   104f8:	mov	r3, #0
   104fc:	cmp	r3, r4
   10500:	bge	f624 <ReadCompressedDoubleData+0x98>
   10504:	ldrb	r1, [r6, r3]
   10508:	add	r3, r3, #1
   1050c:	vmov	s14, r1
   10510:	vcvt.f64.u32	d7, s14
   10514:	vstmia	r2!, {d7}
   10518:	b	104fc <ReadCompressedDoubleData+0xf70>
   1051c:	sub	r3, r4, #1024	; 0x400
   10520:	add	r7, sl, #8192	; 0x2000
   10524:	str	r6, [sp, #4]
   10528:	mov	r8, #0
   1052c:	str	r3, [sp, #12]
   10530:	lsl	r3, r0, #10
   10534:	str	r3, [sp, #8]
   10538:	mov	r1, fp
   1053c:	mov	r0, r5
   10540:	ldrd	r2, [sp, #4]
   10544:	bl	2dac <InflateData>
   10548:	ldr	r2, [sp, #4]
   1054c:	sub	r3, r7, #8192	; 0x2000
   10550:	ldrb	r1, [r2], #1
   10554:	vmov	s14, r1
   10558:	vcvt.f64.u32	d7, s14
   1055c:	vstmia	r3!, {d7}
   10560:	cmp	r7, r3
   10564:	bne	10550 <ReadCompressedDoubleData+0xfc4>
   10568:	ldr	r3, [sp, #12]
   1056c:	add	r8, r8, #1024	; 0x400
   10570:	add	r7, r7, #8192	; 0x2000
   10574:	cmp	r3, r8
   10578:	bgt	10538 <ReadCompressedDoubleData+0xfac>
   1057c:	sub	r3, r4, #1024	; 0x400
   10580:	mov	r2, r6
   10584:	sub	r3, r3, #1
   10588:	mov	r1, fp
   1058c:	lsr	r3, r3, #10
   10590:	mov	r0, r5
   10594:	add	r7, r3, #1
   10598:	sub	r4, r4, r7, lsl #10
   1059c:	add	r7, sl, r7, lsl #13
   105a0:	mul	r3, r9, r4
   105a4:	bl	2dac <InflateData>
   105a8:	mov	r3, #0
   105ac:	cmp	r3, r4
   105b0:	bge	f624 <ReadCompressedDoubleData+0x98>
   105b4:	ldrb	r2, [r6, r3]
   105b8:	add	r3, r3, #1
   105bc:	vmov	s14, r2
   105c0:	vcvt.f64.u32	d7, s14
   105c4:	vstmia	r7!, {d7}
   105c8:	b	105ac <ReadCompressedDoubleData+0x1020>
   105cc:	cmp	r4, #1024	; 0x400
   105d0:	add	r6, sp, #32
   105d4:	bgt	10614 <ReadCompressedDoubleData+0x1088>
   105d8:	mul	r3, r0, r4
   105dc:	mov	r2, r6
   105e0:	mov	r1, fp
   105e4:	mov	r0, r5
   105e8:	bl	2dac <InflateData>
   105ec:	mov	r2, sl
   105f0:	mov	r3, #0
   105f4:	cmp	r3, r4
   105f8:	bge	f624 <ReadCompressedDoubleData+0x98>
   105fc:	ldrsb	r1, [r6, r3]
   10600:	add	r3, r3, #1
   10604:	vmov	s14, r1
   10608:	vcvt.f64.s32	d7, s14
   1060c:	vstmia	r2!, {d7}
   10610:	b	105f4 <ReadCompressedDoubleData+0x1068>
   10614:	sub	r3, r4, #1024	; 0x400
   10618:	add	r7, sl, #8192	; 0x2000
   1061c:	str	r6, [sp, #4]
   10620:	mov	r8, #0
   10624:	str	r3, [sp, #12]
   10628:	lsl	r3, r0, #10
   1062c:	str	r3, [sp, #8]
   10630:	mov	r1, fp
   10634:	mov	r0, r5
   10638:	ldrd	r2, [sp, #4]
   1063c:	bl	2dac <InflateData>
   10640:	ldr	r2, [sp, #4]
   10644:	sub	r3, r7, #8192	; 0x2000
   10648:	ldrsb	r1, [r2], #1
   1064c:	vmov	s14, r1
   10650:	vcvt.f64.s32	d7, s14
   10654:	vstmia	r3!, {d7}
   10658:	cmp	r7, r3
   1065c:	bne	10648 <ReadCompressedDoubleData+0x10bc>
   10660:	ldr	r3, [sp, #12]
   10664:	add	r8, r8, #1024	; 0x400
   10668:	add	r7, r7, #8192	; 0x2000
   1066c:	cmp	r3, r8
   10670:	bgt	10630 <ReadCompressedDoubleData+0x10a4>
   10674:	sub	r3, r4, #1024	; 0x400
   10678:	mov	r2, r6
   1067c:	sub	r3, r3, #1
   10680:	mov	r1, fp
   10684:	lsr	r3, r3, #10
   10688:	mov	r0, r5
   1068c:	add	r7, r3, #1
   10690:	sub	r4, r4, r7, lsl #10
   10694:	mul	r3, r9, r4
   10698:	bl	2dac <InflateData>
   1069c:	add	r3, sl, r7, lsl #13
   106a0:	mov	r2, #0
   106a4:	cmp	r2, r4
   106a8:	bge	f624 <ReadCompressedDoubleData+0x98>
   106ac:	ldrsb	r1, [r6, r2]
   106b0:	add	r2, r2, #1
   106b4:	vmov	s14, r1
   106b8:	vcvt.f64.s32	d7, s14
   106bc:	vstmia	r3!, {d7}
   106c0:	b	106a4 <ReadCompressedDoubleData+0x1118>
   106c4:	mov	r0, #0
   106c8:	b	f628 <ReadCompressedDoubleData+0x9c>

000106cc <ReadSingleData>:
   106cc:	cmp	r1, #0
   106d0:	cmpne	r0, #0
   106d4:	beq	106e8 <ReadSingleData+0x1c>
   106d8:	ldr	ip, [r0]
   106dc:	cmp	ip, #0
   106e0:	beq	106e8 <ReadSingleData+0x1c>
   106e4:	b	45c4 <ReadSingleData.part.1>
   106e8:	mov	r0, #0
   106ec:	bx	lr

000106f0 <ReadCompressedSingleData>:
   106f0:	push	{r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
   106f4:	cmp	r2, #0
   106f8:	mov	r7, r1
   106fc:	clz	r1, r1
   10700:	lsr	r1, r1, #5
   10704:	moveq	r1, #1
   10708:	cmp	r0, #0
   1070c:	moveq	r1, #1
   10710:	ldr	r8, [sp, #40]	; 0x28
   10714:	cmp	r1, #0
   10718:	movne	r0, #0
   1071c:	bne	10860 <ReadCompressedSingleData+0x170>
   10720:	mov	r9, r3
   10724:	mov	r5, r0
   10728:	mov	r0, r3
   1072c:	mov	r4, r2
   10730:	bl	1598 <Mat_SizeOf@plt>
   10734:	sub	r3, r9, #1
   10738:	mov	r6, r0
   1073c:	cmp	r3, #8
   10740:	addls	pc, pc, r3, lsl #2
   10744:	b	10ae4 <ReadCompressedSingleData+0x3f4>
   10748:	b	107a8 <ReadCompressedSingleData+0xb8>
   1074c:	b	1076c <ReadCompressedSingleData+0x7c>
   10750:	b	109dc <ReadCompressedSingleData+0x2ec>
   10754:	b	10a60 <ReadCompressedSingleData+0x370>
   10758:	b	108dc <ReadCompressedSingleData+0x1ec>
   1075c:	b	1095c <ReadCompressedSingleData+0x26c>
   10760:	b	10868 <ReadCompressedSingleData+0x178>
   10764:	b	10ae4 <ReadCompressedSingleData+0x3f4>
   10768:	b	107e4 <ReadCompressedSingleData+0xf4>
   1076c:	mov	r9, #0
   10770:	mov	sl, sp
   10774:	cmp	r8, r9
   10778:	ble	1085c <ReadCompressedSingleData+0x16c>
   1077c:	mov	r3, r6
   10780:	mov	r2, sl
   10784:	mov	r1, r7
   10788:	mov	r0, r5
   1078c:	bl	2dac <InflateData>
   10790:	ldrb	r3, [sp]
   10794:	add	r9, r9, #1
   10798:	vmov	s15, r3
   1079c:	vcvt.f32.u32	s15, s15
   107a0:	vstmia	r4!, {s15}
   107a4:	b	10774 <ReadCompressedSingleData+0x84>
   107a8:	mov	r9, #0
   107ac:	mov	sl, sp
   107b0:	cmp	r8, r9
   107b4:	ble	1085c <ReadCompressedSingleData+0x16c>
   107b8:	mov	r3, r6
   107bc:	mov	r2, sl
   107c0:	mov	r1, r7
   107c4:	mov	r0, r5
   107c8:	bl	2dac <InflateData>
   107cc:	ldrsb	r3, [sp]
   107d0:	add	r9, r9, #1
   107d4:	vmov	s15, r3
   107d8:	vcvt.f32.s32	s15, s15
   107dc:	vstmia	r4!, {s15}
   107e0:	b	107b0 <ReadCompressedSingleData+0xc0>
   107e4:	ldr	r9, [r5, #20]
   107e8:	cmp	r9, #0
   107ec:	moveq	sl, sp
   107f0:	movne	r9, #0
   107f4:	movne	sl, sp
   107f8:	bne	10854 <ReadCompressedSingleData+0x164>
   107fc:	cmp	r8, r9
   10800:	ble	1085c <ReadCompressedSingleData+0x16c>
   10804:	mov	r3, r6
   10808:	mov	r2, sl
   1080c:	mov	r1, r7
   10810:	mov	r0, r5
   10814:	bl	2dac <InflateData>
   10818:	vldr	d7, [sp]
   1081c:	add	r9, r9, #1
   10820:	vcvt.f32.f64	s14, d7
   10824:	vstmia	r4!, {s14}
   10828:	b	107fc <ReadCompressedSingleData+0x10c>
   1082c:	mov	r3, r6
   10830:	mov	r2, sl
   10834:	mov	r1, r7
   10838:	mov	r0, r5
   1083c:	bl	2dac <InflateData>
   10840:	mov	r0, sl
   10844:	add	r9, r9, #1
   10848:	bl	196c <Mat_doubleSwap>
   1084c:	vcvt.f32.f64	s0, d0
   10850:	vstmia	r4!, {s0}
   10854:	cmp	r8, r9
   10858:	bgt	1082c <ReadCompressedSingleData+0x13c>
   1085c:	mul	r0, r6, r8
   10860:	add	sp, sp, #8
   10864:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10868:	ldr	r9, [r5, #20]
   1086c:	cmp	r9, #0
   10870:	moveq	sl, sp
   10874:	movne	r9, #0
   10878:	movne	sl, sp
   1087c:	bne	108d0 <ReadCompressedSingleData+0x1e0>
   10880:	cmp	r8, r9
   10884:	ble	1085c <ReadCompressedSingleData+0x16c>
   10888:	mov	r3, r6
   1088c:	mov	r2, sl
   10890:	mov	r1, r7
   10894:	mov	r0, r5
   10898:	bl	2dac <InflateData>
   1089c:	ldr	r3, [sp]
   108a0:	add	r9, r9, #1
   108a4:	str	r3, [r4], #4
   108a8:	b	10880 <ReadCompressedSingleData+0x190>
   108ac:	mov	r3, r6
   108b0:	mov	r2, sl
   108b4:	mov	r1, r7
   108b8:	mov	r0, r5
   108bc:	bl	2dac <InflateData>
   108c0:	add	r9, r9, #1
   108c4:	mov	r0, sl
   108c8:	bl	193c <Mat_floatSwap>
   108cc:	vstmia	r4!, {s0}
   108d0:	cmp	r8, r9
   108d4:	bgt	108ac <ReadCompressedSingleData+0x1bc>
   108d8:	b	1085c <ReadCompressedSingleData+0x16c>
   108dc:	ldr	r9, [r5, #20]
   108e0:	cmp	r9, #0
   108e4:	moveq	sl, sp
   108e8:	movne	r9, #0
   108ec:	movne	sl, sp
   108f0:	bne	10950 <ReadCompressedSingleData+0x260>
   108f4:	cmp	r8, r9
   108f8:	ble	1085c <ReadCompressedSingleData+0x16c>
   108fc:	mov	r3, r6
   10900:	mov	r2, sl
   10904:	mov	r1, r7
   10908:	mov	r0, r5
   1090c:	bl	2dac <InflateData>
   10910:	vldr	s15, [sp]
   10914:	add	r9, r9, #1
   10918:	vcvt.f32.s32	s15, s15
   1091c:	vstmia	r4!, {s15}
   10920:	b	108f4 <ReadCompressedSingleData+0x204>
   10924:	mov	r3, r6
   10928:	mov	r2, sl
   1092c:	mov	r1, r7
   10930:	mov	r0, r5
   10934:	bl	2dac <InflateData>
   10938:	mov	r0, sl
   1093c:	add	r9, r9, #1
   10940:	bl	189c <Mat_int32Swap>
   10944:	vmov	s15, r0
   10948:	vcvt.f32.s32	s15, s15
   1094c:	vstmia	r4!, {s15}
   10950:	cmp	r8, r9
   10954:	bgt	10924 <ReadCompressedSingleData+0x234>
   10958:	b	1085c <ReadCompressedSingleData+0x16c>
   1095c:	ldr	r9, [r5, #20]
   10960:	cmp	r9, #0
   10964:	moveq	sl, sp
   10968:	movne	r9, #0
   1096c:	movne	sl, sp
   10970:	bne	109d0 <ReadCompressedSingleData+0x2e0>
   10974:	cmp	r8, r9
   10978:	ble	1085c <ReadCompressedSingleData+0x16c>
   1097c:	mov	r3, r6
   10980:	mov	r2, sl
   10984:	mov	r1, r7
   10988:	mov	r0, r5
   1098c:	bl	2dac <InflateData>
   10990:	vldr	s15, [sp]
   10994:	add	r9, r9, #1
   10998:	vcvt.f32.u32	s15, s15
   1099c:	vstmia	r4!, {s15}
   109a0:	b	10974 <ReadCompressedSingleData+0x284>
   109a4:	mov	r3, r6
   109a8:	mov	r2, sl
   109ac:	mov	r1, r7
   109b0:	mov	r0, r5
   109b4:	bl	2dac <InflateData>
   109b8:	mov	r0, sl
   109bc:	add	r9, r9, #1
   109c0:	bl	18cc <Mat_uint32Swap>
   109c4:	vmov	s15, r0
   109c8:	vcvt.f32.u32	s15, s15
   109cc:	vstmia	r4!, {s15}
   109d0:	cmp	r8, r9
   109d4:	bgt	109a4 <ReadCompressedSingleData+0x2b4>
   109d8:	b	1085c <ReadCompressedSingleData+0x16c>
   109dc:	ldr	r9, [r5, #20]
   109e0:	cmp	r9, #0
   109e4:	moveq	sl, sp
   109e8:	movne	r9, #0
   109ec:	movne	sl, sp
   109f0:	bne	10a54 <ReadCompressedSingleData+0x364>
   109f4:	cmp	r8, r9
   109f8:	ble	1085c <ReadCompressedSingleData+0x16c>
   109fc:	mov	r3, r6
   10a00:	mov	r2, sl
   10a04:	mov	r1, r7
   10a08:	mov	r0, r5
   10a0c:	bl	2dac <InflateData>
   10a10:	ldrsh	r3, [sp]
   10a14:	add	r9, r9, #1
   10a18:	vmov	s15, r3
   10a1c:	vcvt.f32.s32	s15, s15
   10a20:	vstmia	r4!, {s15}
   10a24:	b	109f4 <ReadCompressedSingleData+0x304>
   10a28:	mov	r3, r6
   10a2c:	mov	r2, sl
   10a30:	mov	r1, r7
   10a34:	mov	r0, r5
   10a38:	bl	2dac <InflateData>
   10a3c:	mov	r0, sl
   10a40:	add	r9, r9, #1
   10a44:	bl	18fc <Mat_int16Swap>
   10a48:	vmov	s15, r0
   10a4c:	vcvt.f32.s32	s15, s15
   10a50:	vstmia	r4!, {s15}
   10a54:	cmp	r8, r9
   10a58:	bgt	10a28 <ReadCompressedSingleData+0x338>
   10a5c:	b	1085c <ReadCompressedSingleData+0x16c>
   10a60:	ldr	r9, [r5, #20]
   10a64:	cmp	r9, #0
   10a68:	moveq	sl, sp
   10a6c:	movne	r9, #0
   10a70:	movne	sl, sp
   10a74:	bne	10ad8 <ReadCompressedSingleData+0x3e8>
   10a78:	cmp	r8, r9
   10a7c:	ble	1085c <ReadCompressedSingleData+0x16c>
   10a80:	mov	r3, r6
   10a84:	mov	r2, sl
   10a88:	mov	r1, r7
   10a8c:	mov	r0, r5
   10a90:	bl	2dac <InflateData>
   10a94:	ldrh	r3, [sp]
   10a98:	add	r9, r9, #1
   10a9c:	vmov	s15, r3
   10aa0:	vcvt.f32.u32	s15, s15
   10aa4:	vstmia	r4!, {s15}
   10aa8:	b	10a78 <ReadCompressedSingleData+0x388>
   10aac:	mov	r3, r6
   10ab0:	mov	r2, sl
   10ab4:	mov	r1, r7
   10ab8:	mov	r0, r5
   10abc:	bl	2dac <InflateData>
   10ac0:	mov	r0, sl
   10ac4:	add	r9, r9, #1
   10ac8:	bl	191c <Mat_uint16Swap>
   10acc:	vmov	s15, r0
   10ad0:	vcvt.f32.u32	s15, s15
   10ad4:	vstmia	r4!, {s15}
   10ad8:	cmp	r8, r9
   10adc:	bgt	10aac <ReadCompressedSingleData+0x3bc>
   10ae0:	b	1085c <ReadCompressedSingleData+0x16c>
   10ae4:	cmp	r9, #12
   10ae8:	bne	10b68 <ReadCompressedSingleData+0x478>
   10aec:	ldr	r9, [r5, #20]
   10af0:	cmp	r9, #0
   10af4:	moveq	sl, sp
   10af8:	movne	r9, #0
   10afc:	movne	sl, sp
   10b00:	bne	10b5c <ReadCompressedSingleData+0x46c>
   10b04:	cmp	r8, r9
   10b08:	ble	1085c <ReadCompressedSingleData+0x16c>
   10b0c:	mov	r3, r6
   10b10:	mov	r2, sl
   10b14:	mov	r1, r7
   10b18:	mov	r0, r5
   10b1c:	bl	2dac <InflateData>
   10b20:	ldrd	r0, [sp]
   10b24:	add	r9, r9, #1
   10b28:	bl	3e764 <__aeabi_l2f>
   10b2c:	str	r0, [r4], #4
   10b30:	b	10b04 <ReadCompressedSingleData+0x414>
   10b34:	mov	r3, r6
   10b38:	mov	r2, sl
   10b3c:	mov	r1, r7
   10b40:	mov	r0, r5
   10b44:	bl	2dac <InflateData>
   10b48:	mov	r0, sl
   10b4c:	add	r9, r9, #1
   10b50:	bl	17ec <Mat_int64Swap>
   10b54:	bl	3e764 <__aeabi_l2f>
   10b58:	str	r0, [r4], #4
   10b5c:	cmp	r8, r9
   10b60:	bgt	10b34 <ReadCompressedSingleData+0x444>
   10b64:	b	1085c <ReadCompressedSingleData+0x16c>
   10b68:	cmp	r9, #13
   10b6c:	bne	1085c <ReadCompressedSingleData+0x16c>
   10b70:	ldr	r9, [r5, #20]
   10b74:	cmp	r9, #0
   10b78:	moveq	sl, sp
   10b7c:	movne	r9, #0
   10b80:	movne	sl, sp
   10b84:	bne	10be0 <ReadCompressedSingleData+0x4f0>
   10b88:	cmp	r8, r9
   10b8c:	ble	1085c <ReadCompressedSingleData+0x16c>
   10b90:	mov	r3, r6
   10b94:	mov	r2, sl
   10b98:	mov	r1, r7
   10b9c:	mov	r0, r5
   10ba0:	bl	2dac <InflateData>
   10ba4:	ldrd	r0, [sp]
   10ba8:	add	r9, r9, #1
   10bac:	bl	3e754 <__aeabi_ul2f>
   10bb0:	str	r0, [r4], #4
   10bb4:	b	10b88 <ReadCompressedSingleData+0x498>
   10bb8:	mov	r3, r6
   10bbc:	mov	r2, sl
   10bc0:	mov	r1, r7
   10bc4:	mov	r0, r5
   10bc8:	bl	2dac <InflateData>
   10bcc:	mov	r0, sl
   10bd0:	add	r9, r9, #1
   10bd4:	bl	1844 <Mat_uint64Swap>
   10bd8:	bl	3e754 <__aeabi_ul2f>
   10bdc:	str	r0, [r4], #4
   10be0:	cmp	r8, r9
   10be4:	bgt	10bb8 <ReadCompressedSingleData+0x4c8>
   10be8:	b	1085c <ReadCompressedSingleData+0x16c>

00010bec <ReadInt64Data>:
   10bec:	cmp	r1, #0
   10bf0:	cmpne	r0, #0
   10bf4:	beq	10c08 <ReadInt64Data+0x1c>
   10bf8:	ldr	ip, [r0]
   10bfc:	cmp	ip, #0
   10c00:	beq	10c08 <ReadInt64Data+0x1c>
   10c04:	b	5a20 <ReadInt64Data.part.3>
   10c08:	mov	r0, #0
   10c0c:	bx	lr

00010c10 <ReadCompressedInt64Data>:
   10c10:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10c14:	cmp	r2, #0
   10c18:	mov	r7, r1
   10c1c:	clz	r1, r1
   10c20:	lsr	r1, r1, #5
   10c24:	moveq	r1, #1
   10c28:	cmp	r0, #0
   10c2c:	moveq	r1, #1
   10c30:	ldr	r8, [sp, #48]	; 0x30
   10c34:	cmp	r1, #0
   10c38:	movne	r0, #0
   10c3c:	bne	10d88 <ReadCompressedInt64Data+0x178>
   10c40:	mov	r9, r3
   10c44:	mov	r5, r0
   10c48:	mov	r0, r3
   10c4c:	mov	r4, r2
   10c50:	bl	1598 <Mat_SizeOf@plt>
   10c54:	sub	r3, r9, #1
   10c58:	mov	r6, r0
   10c5c:	cmp	r3, #8
   10c60:	addls	pc, pc, r3, lsl #2
   10c64:	b	11024 <ReadCompressedInt64Data+0x414>
   10c68:	b	10cc8 <ReadCompressedInt64Data+0xb8>
   10c6c:	b	10c8c <ReadCompressedInt64Data+0x7c>
   10c70:	b	10f1c <ReadCompressedInt64Data+0x30c>
   10c74:	b	10fa0 <ReadCompressedInt64Data+0x390>
   10c78:	b	10e14 <ReadCompressedInt64Data+0x204>
   10c7c:	b	10e94 <ReadCompressedInt64Data+0x284>
   10c80:	b	10d90 <ReadCompressedInt64Data+0x180>
   10c84:	b	11024 <ReadCompressedInt64Data+0x414>
   10c88:	b	10d04 <ReadCompressedInt64Data+0xf4>
   10c8c:	sub	r4, r4, #8
   10c90:	mov	r9, #0
   10c94:	mov	sl, sp
   10c98:	cmp	r8, r9
   10c9c:	ble	10d84 <ReadCompressedInt64Data+0x174>
   10ca0:	mov	r3, r6
   10ca4:	mov	r2, sl
   10ca8:	mov	r1, r7
   10cac:	mov	r0, r5
   10cb0:	bl	2dac <InflateData>
   10cb4:	ldrb	r2, [sp]
   10cb8:	mov	r3, #0
   10cbc:	add	r9, r9, #1
   10cc0:	strd	r2, [r4, #8]!
   10cc4:	b	10c98 <ReadCompressedInt64Data+0x88>
   10cc8:	sub	r4, r4, #8
   10ccc:	mov	r9, #0
   10cd0:	mov	sl, sp
   10cd4:	cmp	r8, r9
   10cd8:	ble	10d84 <ReadCompressedInt64Data+0x174>
   10cdc:	mov	r3, r6
   10ce0:	mov	r2, sl
   10ce4:	mov	r1, r7
   10ce8:	mov	r0, r5
   10cec:	bl	2dac <InflateData>
   10cf0:	ldrsb	r2, [sp]
   10cf4:	add	r9, r9, #1
   10cf8:	asr	r3, r2, #31
   10cfc:	strd	r2, [r4, #8]!
   10d00:	b	10cd4 <ReadCompressedInt64Data+0xc4>
   10d04:	ldr	r9, [r5, #20]
   10d08:	sub	r4, r4, #8
   10d0c:	cmp	r9, #0
   10d10:	moveq	sl, sp
   10d14:	movne	r9, #0
   10d18:	movne	sl, sp
   10d1c:	bne	10d7c <ReadCompressedInt64Data+0x16c>
   10d20:	cmp	r8, r9
   10d24:	ble	10d84 <ReadCompressedInt64Data+0x174>
   10d28:	mov	r3, r6
   10d2c:	mov	r2, sl
   10d30:	mov	r1, r7
   10d34:	mov	r0, r5
   10d38:	bl	2dac <InflateData>
   10d3c:	ldrd	r0, [sp]
   10d40:	add	r9, r9, #1
   10d44:	bl	3e80c <__aeabi_d2lz>
   10d48:	strd	r0, [r4, #8]!
   10d4c:	b	10d20 <ReadCompressedInt64Data+0x110>
   10d50:	mov	r3, r6
   10d54:	mov	r2, sl
   10d58:	mov	r1, r7
   10d5c:	mov	r0, r5
   10d60:	bl	2dac <InflateData>
   10d64:	mov	r0, sl
   10d68:	add	r9, r9, #1
   10d6c:	bl	196c <Mat_doubleSwap>
   10d70:	vmov	r0, r1, d0
   10d74:	bl	3e80c <__aeabi_d2lz>
   10d78:	strd	r0, [r4, #8]!
   10d7c:	cmp	r8, r9
   10d80:	bgt	10d50 <ReadCompressedInt64Data+0x140>
   10d84:	mul	r0, r6, r8
   10d88:	add	sp, sp, #12
   10d8c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10d90:	ldr	r9, [r5, #20]
   10d94:	sub	r4, r4, #8
   10d98:	cmp	r9, #0
   10d9c:	moveq	sl, sp
   10da0:	movne	r9, #0
   10da4:	movne	sl, sp
   10da8:	bne	10e08 <ReadCompressedInt64Data+0x1f8>
   10dac:	cmp	r8, r9
   10db0:	ble	10d84 <ReadCompressedInt64Data+0x174>
   10db4:	mov	r3, r6
   10db8:	mov	r2, sl
   10dbc:	mov	r1, r7
   10dc0:	mov	r0, r5
   10dc4:	bl	2dac <InflateData>
   10dc8:	ldr	r0, [sp]
   10dcc:	add	r9, r9, #1
   10dd0:	bl	3e7e0 <__aeabi_f2lz>
   10dd4:	strd	r0, [r4, #8]!
   10dd8:	b	10dac <ReadCompressedInt64Data+0x19c>
   10ddc:	mov	r3, r6
   10de0:	mov	r2, sl
   10de4:	mov	r1, r7
   10de8:	mov	r0, r5
   10dec:	bl	2dac <InflateData>
   10df0:	mov	r0, sl
   10df4:	add	r9, r9, #1
   10df8:	bl	193c <Mat_floatSwap>
   10dfc:	vmov	r0, s0
   10e00:	bl	3e7e0 <__aeabi_f2lz>
   10e04:	strd	r0, [r4, #8]!
   10e08:	cmp	r8, r9
   10e0c:	bgt	10ddc <ReadCompressedInt64Data+0x1cc>
   10e10:	b	10d84 <ReadCompressedInt64Data+0x174>
   10e14:	ldr	r9, [r5, #20]
   10e18:	sub	r4, r4, #8
   10e1c:	cmp	r9, #0
   10e20:	moveq	sl, sp
   10e24:	movne	r9, #0
   10e28:	movne	sl, sp
   10e2c:	bne	10e88 <ReadCompressedInt64Data+0x278>
   10e30:	cmp	r8, r9
   10e34:	ble	10d84 <ReadCompressedInt64Data+0x174>
   10e38:	mov	r3, r6
   10e3c:	mov	r2, sl
   10e40:	mov	r1, r7
   10e44:	mov	r0, r5
   10e48:	bl	2dac <InflateData>
   10e4c:	ldr	r2, [sp]
   10e50:	add	r9, r9, #1
   10e54:	asr	r3, r2, #31
   10e58:	strd	r2, [r4, #8]!
   10e5c:	b	10e30 <ReadCompressedInt64Data+0x220>
   10e60:	mov	r1, r7
   10e64:	mov	r3, r6
   10e68:	mov	r2, sl
   10e6c:	mov	r0, r5
   10e70:	bl	2dac <InflateData>
   10e74:	mov	r0, sl
   10e78:	add	r9, r9, #1
   10e7c:	bl	189c <Mat_int32Swap>
   10e80:	asr	r1, r0, #31
   10e84:	strd	r0, [r4, #8]!
   10e88:	cmp	r8, r9
   10e8c:	bgt	10e60 <ReadCompressedInt64Data+0x250>
   10e90:	b	10d84 <ReadCompressedInt64Data+0x174>
   10e94:	ldr	r9, [r5, #20]
   10e98:	sub	r4, r4, #8
   10e9c:	cmp	r9, #0
   10ea0:	movne	r9, #0
   10ea4:	moveq	sl, sp
   10ea8:	moveq	fp, r9
   10eac:	movne	sl, sp
   10eb0:	movne	fp, r9
   10eb4:	bne	10f10 <ReadCompressedInt64Data+0x300>
   10eb8:	cmp	r8, r9
   10ebc:	ble	10d84 <ReadCompressedInt64Data+0x174>
   10ec0:	mov	r3, r6
   10ec4:	mov	r2, sl
   10ec8:	mov	r1, r7
   10ecc:	mov	r0, r5
   10ed0:	bl	2dac <InflateData>
   10ed4:	ldr	r3, [sp]
   10ed8:	add	r9, r9, #1
   10edc:	str	r3, [r4, #8]!
   10ee0:	str	fp, [r4, #4]
   10ee4:	b	10eb8 <ReadCompressedInt64Data+0x2a8>
   10ee8:	mov	r3, r6
   10eec:	mov	r2, sl
   10ef0:	mov	r1, r7
   10ef4:	mov	r0, r5
   10ef8:	bl	2dac <InflateData>
   10efc:	add	r9, r9, #1
   10f00:	mov	r0, sl
   10f04:	bl	18cc <Mat_uint32Swap>
   10f08:	str	r0, [r4, #8]!
   10f0c:	str	fp, [r4, #4]
   10f10:	cmp	r8, r9
   10f14:	bgt	10ee8 <ReadCompressedInt64Data+0x2d8>
   10f18:	b	10d84 <ReadCompressedInt64Data+0x174>
   10f1c:	ldr	r9, [r5, #20]
   10f20:	sub	r4, r4, #8
   10f24:	cmp	r9, #0
   10f28:	moveq	sl, sp
   10f2c:	movne	r9, #0
   10f30:	movne	sl, sp
   10f34:	bne	10f94 <ReadCompressedInt64Data+0x384>
   10f38:	cmp	r8, r9
   10f3c:	ble	10d84 <ReadCompressedInt64Data+0x174>
   10f40:	mov	r3, r6
   10f44:	mov	r2, sl
   10f48:	mov	r1, r7
   10f4c:	mov	r0, r5
   10f50:	bl	2dac <InflateData>
   10f54:	ldrsh	r2, [sp]
   10f58:	add	r9, r9, #1
   10f5c:	asr	r3, r2, #31
   10f60:	strd	r2, [r4, #8]!
   10f64:	b	10f38 <ReadCompressedInt64Data+0x328>
   10f68:	mov	r1, r7
   10f6c:	mov	r3, r6
   10f70:	mov	r2, sl
   10f74:	mov	r0, r5
   10f78:	bl	2dac <InflateData>
   10f7c:	mov	r0, sl
   10f80:	add	r9, r9, #1
   10f84:	bl	18fc <Mat_int16Swap>
   10f88:	sxth	r0, r0
   10f8c:	asr	r1, r0, #31
   10f90:	strd	r0, [r4, #8]!
   10f94:	cmp	r8, r9
   10f98:	bgt	10f68 <ReadCompressedInt64Data+0x358>
   10f9c:	b	10d84 <ReadCompressedInt64Data+0x174>
   10fa0:	ldr	r9, [r5, #20]
   10fa4:	sub	r4, r4, #8
   10fa8:	cmp	r9, #0
   10fac:	moveq	sl, sp
   10fb0:	movne	r9, #0
   10fb4:	movne	sl, sp
   10fb8:	bne	11018 <ReadCompressedInt64Data+0x408>
   10fbc:	cmp	r8, r9
   10fc0:	ble	10d84 <ReadCompressedInt64Data+0x174>
   10fc4:	mov	r3, r6
   10fc8:	mov	r2, sl
   10fcc:	mov	r1, r7
   10fd0:	mov	r0, r5
   10fd4:	bl	2dac <InflateData>
   10fd8:	ldrh	r2, [sp]
   10fdc:	mov	r3, #0
   10fe0:	add	r9, r9, #1
   10fe4:	strd	r2, [r4, #8]!
   10fe8:	b	10fbc <ReadCompressedInt64Data+0x3ac>
   10fec:	mov	r1, r7
   10ff0:	mov	r3, r6
   10ff4:	mov	r2, sl
   10ff8:	mov	r0, r5
   10ffc:	bl	2dac <InflateData>
   11000:	mov	r0, sl
   11004:	add	r9, r9, #1
   11008:	bl	191c <Mat_uint16Swap>
   1100c:	uxth	r0, r0
   11010:	mov	r1, #0
   11014:	strd	r0, [r4, #8]!
   11018:	cmp	r8, r9
   1101c:	bgt	10fec <ReadCompressedInt64Data+0x3dc>
   11020:	b	10d84 <ReadCompressedInt64Data+0x174>
   11024:	cmp	r9, #12
   11028:	bne	110a4 <ReadCompressedInt64Data+0x494>
   1102c:	ldr	r9, [r5, #20]
   11030:	sub	r4, r4, #8
   11034:	cmp	r9, #0
   11038:	moveq	sl, sp
   1103c:	movne	r9, #0
   11040:	movne	sl, sp
   11044:	bne	11098 <ReadCompressedInt64Data+0x488>
   11048:	cmp	r8, r9
   1104c:	ble	10d84 <ReadCompressedInt64Data+0x174>
   11050:	mov	r3, r6
   11054:	mov	r2, sl
   11058:	mov	r1, r7
   1105c:	mov	r0, r5
   11060:	bl	2dac <InflateData>
   11064:	ldrd	r2, [sp]
   11068:	add	r9, r9, #1
   1106c:	strd	r2, [r4, #8]!
   11070:	b	11048 <ReadCompressedInt64Data+0x438>
   11074:	mov	r3, r6
   11078:	mov	r2, sl
   1107c:	mov	r1, r7
   11080:	mov	r0, r5
   11084:	bl	2dac <InflateData>
   11088:	add	r9, r9, #1
   1108c:	mov	r0, sl
   11090:	bl	17ec <Mat_int64Swap>
   11094:	strd	r0, [r4, #8]!
   11098:	cmp	r8, r9
   1109c:	bgt	11074 <ReadCompressedInt64Data+0x464>
   110a0:	b	10d84 <ReadCompressedInt64Data+0x174>
   110a4:	cmp	r9, #13
   110a8:	bne	10d84 <ReadCompressedInt64Data+0x174>
   110ac:	ldr	r9, [r5, #20]
   110b0:	sub	r4, r4, #8
   110b4:	cmp	r9, #0
   110b8:	moveq	sl, sp
   110bc:	movne	r9, #0
   110c0:	movne	sl, sp
   110c4:	bne	11118 <ReadCompressedInt64Data+0x508>
   110c8:	cmp	r8, r9
   110cc:	ble	10d84 <ReadCompressedInt64Data+0x174>
   110d0:	mov	r3, r6
   110d4:	mov	r2, sl
   110d8:	mov	r1, r7
   110dc:	mov	r0, r5
   110e0:	bl	2dac <InflateData>
   110e4:	ldrd	r2, [sp]
   110e8:	add	r9, r9, #1
   110ec:	strd	r2, [r4, #8]!
   110f0:	b	110c8 <ReadCompressedInt64Data+0x4b8>
   110f4:	mov	r3, r6
   110f8:	mov	r2, sl
   110fc:	mov	r1, r7
   11100:	mov	r0, r5
   11104:	bl	2dac <InflateData>
   11108:	add	r9, r9, #1
   1110c:	mov	r0, sl
   11110:	bl	1844 <Mat_uint64Swap>
   11114:	strd	r0, [r4, #8]!
   11118:	cmp	r8, r9
   1111c:	bgt	110f4 <ReadCompressedInt64Data+0x4e4>
   11120:	b	10d84 <ReadCompressedInt64Data+0x174>

00011124 <ReadUInt64Data>:
   11124:	cmp	r1, #0
   11128:	cmpne	r0, #0
   1112c:	beq	11140 <ReadUInt64Data+0x1c>
   11130:	ldr	ip, [r0]
   11134:	cmp	ip, #0
   11138:	beq	11140 <ReadUInt64Data+0x1c>
   1113c:	b	6e30 <ReadUInt64Data.part.5>
   11140:	mov	r0, #0
   11144:	bx	lr

00011148 <ReadCompressedUInt64Data>:
   11148:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1114c:	cmp	r2, #0
   11150:	mov	r7, r1
   11154:	clz	r1, r1
   11158:	lsr	r1, r1, #5
   1115c:	moveq	r1, #1
   11160:	cmp	r0, #0
   11164:	moveq	r1, #1
   11168:	ldr	r8, [sp, #48]	; 0x30
   1116c:	cmp	r1, #0
   11170:	movne	r0, #0
   11174:	bne	112c0 <ReadCompressedUInt64Data+0x178>
   11178:	mov	r9, r3
   1117c:	mov	r5, r0
   11180:	mov	r0, r3
   11184:	mov	r4, r2
   11188:	bl	1598 <Mat_SizeOf@plt>
   1118c:	sub	r3, r9, #1
   11190:	mov	r6, r0
   11194:	cmp	r3, #8
   11198:	addls	pc, pc, r3, lsl #2
   1119c:	b	1155c <ReadCompressedUInt64Data+0x414>
   111a0:	b	11200 <ReadCompressedUInt64Data+0xb8>
   111a4:	b	111c4 <ReadCompressedUInt64Data+0x7c>
   111a8:	b	11454 <ReadCompressedUInt64Data+0x30c>
   111ac:	b	114d8 <ReadCompressedUInt64Data+0x390>
   111b0:	b	1134c <ReadCompressedUInt64Data+0x204>
   111b4:	b	113cc <ReadCompressedUInt64Data+0x284>
   111b8:	b	112c8 <ReadCompressedUInt64Data+0x180>
   111bc:	b	1155c <ReadCompressedUInt64Data+0x414>
   111c0:	b	1123c <ReadCompressedUInt64Data+0xf4>
   111c4:	sub	r4, r4, #8
   111c8:	mov	r9, #0
   111cc:	mov	sl, sp
   111d0:	cmp	r8, r9
   111d4:	ble	112bc <ReadCompressedUInt64Data+0x174>
   111d8:	mov	r3, r6
   111dc:	mov	r2, sl
   111e0:	mov	r1, r7
   111e4:	mov	r0, r5
   111e8:	bl	2dac <InflateData>
   111ec:	ldrb	r2, [sp]
   111f0:	mov	r3, #0
   111f4:	add	r9, r9, #1
   111f8:	strd	r2, [r4, #8]!
   111fc:	b	111d0 <ReadCompressedUInt64Data+0x88>
   11200:	sub	r4, r4, #8
   11204:	mov	r9, #0
   11208:	mov	sl, sp
   1120c:	cmp	r8, r9
   11210:	ble	112bc <ReadCompressedUInt64Data+0x174>
   11214:	mov	r3, r6
   11218:	mov	r2, sl
   1121c:	mov	r1, r7
   11220:	mov	r0, r5
   11224:	bl	2dac <InflateData>
   11228:	ldrsb	r2, [sp]
   1122c:	add	r9, r9, #1
   11230:	asr	r3, r2, #31
   11234:	strd	r2, [r4, #8]!
   11238:	b	1120c <ReadCompressedUInt64Data+0xc4>
   1123c:	ldr	r9, [r5, #20]
   11240:	sub	r4, r4, #8
   11244:	cmp	r9, #0
   11248:	moveq	sl, sp
   1124c:	movne	r9, #0
   11250:	movne	sl, sp
   11254:	bne	112b4 <ReadCompressedUInt64Data+0x16c>
   11258:	cmp	r8, r9
   1125c:	ble	112bc <ReadCompressedUInt64Data+0x174>
   11260:	mov	r3, r6
   11264:	mov	r2, sl
   11268:	mov	r1, r7
   1126c:	mov	r0, r5
   11270:	bl	2dac <InflateData>
   11274:	ldrd	r0, [sp]
   11278:	add	r9, r9, #1
   1127c:	bl	3e878 <__aeabi_d2ulz>
   11280:	strd	r0, [r4, #8]!
   11284:	b	11258 <ReadCompressedUInt64Data+0x110>
   11288:	mov	r3, r6
   1128c:	mov	r2, sl
   11290:	mov	r1, r7
   11294:	mov	r0, r5
   11298:	bl	2dac <InflateData>
   1129c:	mov	r0, sl
   112a0:	add	r9, r9, #1
   112a4:	bl	196c <Mat_doubleSwap>
   112a8:	vmov	r0, r1, d0
   112ac:	bl	3e878 <__aeabi_d2ulz>
   112b0:	strd	r0, [r4, #8]!
   112b4:	cmp	r8, r9
   112b8:	bgt	11288 <ReadCompressedUInt64Data+0x140>
   112bc:	mul	r0, r6, r8
   112c0:	add	sp, sp, #12
   112c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   112c8:	ldr	r9, [r5, #20]
   112cc:	sub	r4, r4, #8
   112d0:	cmp	r9, #0
   112d4:	moveq	sl, sp
   112d8:	movne	r9, #0
   112dc:	movne	sl, sp
   112e0:	bne	11340 <ReadCompressedUInt64Data+0x1f8>
   112e4:	cmp	r8, r9
   112e8:	ble	112bc <ReadCompressedUInt64Data+0x174>
   112ec:	mov	r3, r6
   112f0:	mov	r2, sl
   112f4:	mov	r1, r7
   112f8:	mov	r0, r5
   112fc:	bl	2dac <InflateData>
   11300:	ldr	r0, [sp]
   11304:	add	r9, r9, #1
   11308:	bl	3e838 <__aeabi_f2ulz>
   1130c:	strd	r0, [r4, #8]!
   11310:	b	112e4 <ReadCompressedUInt64Data+0x19c>
   11314:	mov	r3, r6
   11318:	mov	r2, sl
   1131c:	mov	r1, r7
   11320:	mov	r0, r5
   11324:	bl	2dac <InflateData>
   11328:	mov	r0, sl
   1132c:	add	r9, r9, #1
   11330:	bl	193c <Mat_floatSwap>
   11334:	vmov	r0, s0
   11338:	bl	3e838 <__aeabi_f2ulz>
   1133c:	strd	r0, [r4, #8]!
   11340:	cmp	r8, r9
   11344:	bgt	11314 <ReadCompressedUInt64Data+0x1cc>
   11348:	b	112bc <ReadCompressedUInt64Data+0x174>
   1134c:	ldr	r9, [r5, #20]
   11350:	sub	r4, r4, #8
   11354:	cmp	r9, #0
   11358:	moveq	sl, sp
   1135c:	movne	r9, #0
   11360:	movne	sl, sp
   11364:	bne	113c0 <ReadCompressedUInt64Data+0x278>
   11368:	cmp	r8, r9
   1136c:	ble	112bc <ReadCompressedUInt64Data+0x174>
   11370:	mov	r3, r6
   11374:	mov	r2, sl
   11378:	mov	r1, r7
   1137c:	mov	r0, r5
   11380:	bl	2dac <InflateData>
   11384:	ldr	r2, [sp]
   11388:	add	r9, r9, #1
   1138c:	asr	r3, r2, #31
   11390:	strd	r2, [r4, #8]!
   11394:	b	11368 <ReadCompressedUInt64Data+0x220>
   11398:	mov	r1, r7
   1139c:	mov	r3, r6
   113a0:	mov	r2, sl
   113a4:	mov	r0, r5
   113a8:	bl	2dac <InflateData>
   113ac:	mov	r0, sl
   113b0:	add	r9, r9, #1
   113b4:	bl	189c <Mat_int32Swap>
   113b8:	asr	r1, r0, #31
   113bc:	strd	r0, [r4, #8]!
   113c0:	cmp	r8, r9
   113c4:	bgt	11398 <ReadCompressedUInt64Data+0x250>
   113c8:	b	112bc <ReadCompressedUInt64Data+0x174>
   113cc:	ldr	r9, [r5, #20]
   113d0:	sub	r4, r4, #8
   113d4:	cmp	r9, #0
   113d8:	movne	r9, #0
   113dc:	moveq	sl, sp
   113e0:	moveq	fp, r9
   113e4:	movne	sl, sp
   113e8:	movne	fp, r9
   113ec:	bne	11448 <ReadCompressedUInt64Data+0x300>
   113f0:	cmp	r8, r9
   113f4:	ble	112bc <ReadCompressedUInt64Data+0x174>
   113f8:	mov	r3, r6
   113fc:	mov	r2, sl
   11400:	mov	r1, r7
   11404:	mov	r0, r5
   11408:	bl	2dac <InflateData>
   1140c:	ldr	r3, [sp]
   11410:	add	r9, r9, #1
   11414:	str	r3, [r4, #8]!
   11418:	str	fp, [r4, #4]
   1141c:	b	113f0 <ReadCompressedUInt64Data+0x2a8>
   11420:	mov	r3, r6
   11424:	mov	r2, sl
   11428:	mov	r1, r7
   1142c:	mov	r0, r5
   11430:	bl	2dac <InflateData>
   11434:	add	r9, r9, #1
   11438:	mov	r0, sl
   1143c:	bl	18cc <Mat_uint32Swap>
   11440:	str	r0, [r4, #8]!
   11444:	str	fp, [r4, #4]
   11448:	cmp	r8, r9
   1144c:	bgt	11420 <ReadCompressedUInt64Data+0x2d8>
   11450:	b	112bc <ReadCompressedUInt64Data+0x174>
   11454:	ldr	r9, [r5, #20]
   11458:	sub	r4, r4, #8
   1145c:	cmp	r9, #0
   11460:	moveq	sl, sp
   11464:	movne	r9, #0
   11468:	movne	sl, sp
   1146c:	bne	114cc <ReadCompressedUInt64Data+0x384>
   11470:	cmp	r8, r9
   11474:	ble	112bc <ReadCompressedUInt64Data+0x174>
   11478:	mov	r3, r6
   1147c:	mov	r2, sl
   11480:	mov	r1, r7
   11484:	mov	r0, r5
   11488:	bl	2dac <InflateData>
   1148c:	ldrsh	r2, [sp]
   11490:	add	r9, r9, #1
   11494:	asr	r3, r2, #31
   11498:	strd	r2, [r4, #8]!
   1149c:	b	11470 <ReadCompressedUInt64Data+0x328>
   114a0:	mov	r1, r7
   114a4:	mov	r3, r6
   114a8:	mov	r2, sl
   114ac:	mov	r0, r5
   114b0:	bl	2dac <InflateData>
   114b4:	mov	r0, sl
   114b8:	add	r9, r9, #1
   114bc:	bl	18fc <Mat_int16Swap>
   114c0:	sxth	r0, r0
   114c4:	asr	r1, r0, #31
   114c8:	strd	r0, [r4, #8]!
   114cc:	cmp	r8, r9
   114d0:	bgt	114a0 <ReadCompressedUInt64Data+0x358>
   114d4:	b	112bc <ReadCompressedUInt64Data+0x174>
   114d8:	ldr	r9, [r5, #20]
   114dc:	sub	r4, r4, #8
   114e0:	cmp	r9, #0
   114e4:	moveq	sl, sp
   114e8:	movne	r9, #0
   114ec:	movne	sl, sp
   114f0:	bne	11550 <ReadCompressedUInt64Data+0x408>
   114f4:	cmp	r8, r9
   114f8:	ble	112bc <ReadCompressedUInt64Data+0x174>
   114fc:	mov	r3, r6
   11500:	mov	r2, sl
   11504:	mov	r1, r7
   11508:	mov	r0, r5
   1150c:	bl	2dac <InflateData>
   11510:	ldrh	r2, [sp]
   11514:	mov	r3, #0
   11518:	add	r9, r9, #1
   1151c:	strd	r2, [r4, #8]!
   11520:	b	114f4 <ReadCompressedUInt64Data+0x3ac>
   11524:	mov	r1, r7
   11528:	mov	r3, r6
   1152c:	mov	r2, sl
   11530:	mov	r0, r5
   11534:	bl	2dac <InflateData>
   11538:	mov	r0, sl
   1153c:	add	r9, r9, #1
   11540:	bl	191c <Mat_uint16Swap>
   11544:	uxth	r0, r0
   11548:	mov	r1, #0
   1154c:	strd	r0, [r4, #8]!
   11550:	cmp	r8, r9
   11554:	bgt	11524 <ReadCompressedUInt64Data+0x3dc>
   11558:	b	112bc <ReadCompressedUInt64Data+0x174>
   1155c:	cmp	r9, #12
   11560:	bne	115dc <ReadCompressedUInt64Data+0x494>
   11564:	ldr	r9, [r5, #20]
   11568:	sub	r4, r4, #8
   1156c:	cmp	r9, #0
   11570:	moveq	sl, sp
   11574:	movne	r9, #0
   11578:	movne	sl, sp
   1157c:	bne	115d0 <ReadCompressedUInt64Data+0x488>
   11580:	cmp	r8, r9
   11584:	ble	112bc <ReadCompressedUInt64Data+0x174>
   11588:	mov	r3, r6
   1158c:	mov	r2, sl
   11590:	mov	r1, r7
   11594:	mov	r0, r5
   11598:	bl	2dac <InflateData>
   1159c:	ldrd	r2, [sp]
   115a0:	add	r9, r9, #1
   115a4:	strd	r2, [r4, #8]!
   115a8:	b	11580 <ReadCompressedUInt64Data+0x438>
   115ac:	mov	r3, r6
   115b0:	mov	r2, sl
   115b4:	mov	r1, r7
   115b8:	mov	r0, r5
   115bc:	bl	2dac <InflateData>
   115c0:	add	r9, r9, #1
   115c4:	mov	r0, sl
   115c8:	bl	17ec <Mat_int64Swap>
   115cc:	strd	r0, [r4, #8]!
   115d0:	cmp	r8, r9
   115d4:	bgt	115ac <ReadCompressedUInt64Data+0x464>
   115d8:	b	112bc <ReadCompressedUInt64Data+0x174>
   115dc:	cmp	r9, #13
   115e0:	bne	112bc <ReadCompressedUInt64Data+0x174>
   115e4:	ldr	r9, [r5, #20]
   115e8:	sub	r4, r4, #8
   115ec:	cmp	r9, #0
   115f0:	moveq	sl, sp
   115f4:	movne	r9, #0
   115f8:	movne	sl, sp
   115fc:	bne	11650 <ReadCompressedUInt64Data+0x508>
   11600:	cmp	r8, r9
   11604:	ble	112bc <ReadCompressedUInt64Data+0x174>
   11608:	mov	r3, r6
   1160c:	mov	r2, sl
   11610:	mov	r1, r7
   11614:	mov	r0, r5
   11618:	bl	2dac <InflateData>
   1161c:	ldrd	r2, [sp]
   11620:	add	r9, r9, #1
   11624:	strd	r2, [r4, #8]!
   11628:	b	11600 <ReadCompressedUInt64Data+0x4b8>
   1162c:	mov	r3, r6
   11630:	mov	r2, sl
   11634:	mov	r1, r7
   11638:	mov	r0, r5
   1163c:	bl	2dac <InflateData>
   11640:	add	r9, r9, #1
   11644:	mov	r0, sl
   11648:	bl	1844 <Mat_uint64Swap>
   1164c:	strd	r0, [r4, #8]!
   11650:	cmp	r8, r9
   11654:	bgt	1162c <ReadCompressedUInt64Data+0x4e4>
   11658:	b	112bc <ReadCompressedUInt64Data+0x174>

0001165c <ReadInt32Data>:
   1165c:	cmp	r1, #0
   11660:	cmpne	r0, #0
   11664:	beq	11678 <ReadInt32Data+0x1c>
   11668:	ldr	ip, [r0]
   1166c:	cmp	ip, #0
   11670:	beq	11678 <ReadInt32Data+0x1c>
   11674:	b	8240 <ReadInt32Data.part.7>
   11678:	mov	r0, #0
   1167c:	bx	lr

00011680 <ReadCompressedInt32Data>:
   11680:	push	{r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
   11684:	cmp	r2, #0
   11688:	mov	r7, r1
   1168c:	clz	r1, r1
   11690:	lsr	r1, r1, #5
   11694:	moveq	r1, #1
   11698:	cmp	r0, #0
   1169c:	moveq	r1, #1
   116a0:	ldr	r8, [sp, #40]	; 0x28
   116a4:	cmp	r1, #0
   116a8:	movne	r0, #0
   116ac:	bne	11750 <ReadCompressedInt32Data+0xd0>
   116b0:	mov	r9, r3
   116b4:	mov	r4, r0
   116b8:	mov	r0, r3
   116bc:	mov	r6, r2
   116c0:	bl	1598 <Mat_SizeOf@plt>
   116c4:	sub	r3, r9, #1
   116c8:	mov	r5, r0
   116cc:	cmp	r3, #8
   116d0:	addls	pc, pc, r3, lsl #2
   116d4:	b	11a64 <ReadCompressedInt32Data+0x3e4>
   116d8:	b	11a58 <ReadCompressedInt32Data+0x3d8>
   116dc:	b	11a20 <ReadCompressedInt32Data+0x3a0>
   116e0:	b	11904 <ReadCompressedInt32Data+0x284>
   116e4:	b	1197c <ReadCompressedInt32Data+0x2fc>
   116e8:	b	11814 <ReadCompressedInt32Data+0x194>
   116ec:	b	1188c <ReadCompressedInt32Data+0x20c>
   116f0:	b	1178c <ReadCompressedInt32Data+0x10c>
   116f4:	b	11a64 <ReadCompressedInt32Data+0x3e4>
   116f8:	b	116fc <ReadCompressedInt32Data+0x7c>
   116fc:	ldr	r9, [r4, #20]
   11700:	cmp	r9, #0
   11704:	moveq	sl, sp
   11708:	beq	11780 <ReadCompressedInt32Data+0x100>
   1170c:	mov	r9, #0
   11710:	mov	sl, sp
   11714:	b	11744 <ReadCompressedInt32Data+0xc4>
   11718:	mov	r3, r5
   1171c:	mov	r2, sl
   11720:	mov	r1, r7
   11724:	mov	r0, r4
   11728:	bl	2dac <InflateData>
   1172c:	mov	r0, sl
   11730:	bl	196c <Mat_doubleSwap>
   11734:	vcvt.s32.f64	s0, d0
   11738:	vmov	r3, s0
   1173c:	str	r3, [r6, r9, lsl #2]
   11740:	add	r9, r9, #1
   11744:	cmp	r8, r9
   11748:	bgt	11718 <ReadCompressedInt32Data+0x98>
   1174c:	mul	r0, r5, r8
   11750:	add	sp, sp, #8
   11754:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11758:	mov	r3, r5
   1175c:	mov	r2, sl
   11760:	mov	r1, r7
   11764:	mov	r0, r4
   11768:	bl	2dac <InflateData>
   1176c:	vldr	d7, [sp]
   11770:	vcvt.s32.f64	s14, d7
   11774:	vmov	r3, s14
   11778:	str	r3, [r6, r9, lsl #2]
   1177c:	add	r9, r9, #1
   11780:	cmp	r8, r9
   11784:	bgt	11758 <ReadCompressedInt32Data+0xd8>
   11788:	b	1174c <ReadCompressedInt32Data+0xcc>
   1178c:	ldr	r9, [r4, #20]
   11790:	cmp	r9, #0
   11794:	moveq	sl, sp
   11798:	beq	11808 <ReadCompressedInt32Data+0x188>
   1179c:	mov	r9, #0
   117a0:	mov	sl, sp
   117a4:	b	117d4 <ReadCompressedInt32Data+0x154>
   117a8:	mov	r3, r5
   117ac:	mov	r2, sl
   117b0:	mov	r1, r7
   117b4:	mov	r0, r4
   117b8:	bl	2dac <InflateData>
   117bc:	mov	r0, sl
   117c0:	bl	193c <Mat_floatSwap>
   117c4:	vcvt.s32.f32	s0, s0
   117c8:	vmov	r3, s0
   117cc:	str	r3, [r6, r9, lsl #2]
   117d0:	add	r9, r9, #1
   117d4:	cmp	r8, r9
   117d8:	bgt	117a8 <ReadCompressedInt32Data+0x128>
   117dc:	b	1174c <ReadCompressedInt32Data+0xcc>
   117e0:	mov	r3, r5
   117e4:	mov	r2, sl
   117e8:	mov	r1, r7
   117ec:	mov	r0, r4
   117f0:	bl	2dac <InflateData>
   117f4:	vldr	s15, [sp]
   117f8:	vcvt.s32.f32	s15, s15
   117fc:	vmov	r3, s15
   11800:	str	r3, [r6, r9, lsl #2]
   11804:	add	r9, r9, #1
   11808:	cmp	r8, r9
   1180c:	bgt	117e0 <ReadCompressedInt32Data+0x160>
   11810:	b	1174c <ReadCompressedInt32Data+0xcc>
   11814:	ldr	r9, [r4, #20]
   11818:	cmp	r9, #0
   1181c:	moveq	sl, sp
   11820:	beq	11880 <ReadCompressedInt32Data+0x200>
   11824:	mov	r9, #0
   11828:	mov	sl, sp
   1182c:	b	11854 <ReadCompressedInt32Data+0x1d4>
   11830:	mov	r3, r5
   11834:	mov	r2, sl
   11838:	mov	r1, r7
   1183c:	mov	r0, r4
   11840:	bl	2dac <InflateData>
   11844:	mov	r0, sl
   11848:	bl	189c <Mat_int32Swap>
   1184c:	str	r0, [r6, r9, lsl #2]
   11850:	add	r9, r9, #1
   11854:	cmp	r8, r9
   11858:	bgt	11830 <ReadCompressedInt32Data+0x1b0>
   1185c:	b	1174c <ReadCompressedInt32Data+0xcc>
   11860:	mov	r3, r5
   11864:	mov	r2, sl
   11868:	mov	r1, r7
   1186c:	mov	r0, r4
   11870:	bl	2dac <InflateData>
   11874:	ldr	r3, [sp]
   11878:	str	r3, [r6, r9, lsl #2]
   1187c:	add	r9, r9, #1
   11880:	cmp	r8, r9
   11884:	bgt	11860 <ReadCompressedInt32Data+0x1e0>
   11888:	b	1174c <ReadCompressedInt32Data+0xcc>
   1188c:	ldr	r9, [r4, #20]
   11890:	cmp	r9, #0
   11894:	moveq	sl, sp
   11898:	beq	118f8 <ReadCompressedInt32Data+0x278>
   1189c:	mov	r9, #0
   118a0:	mov	sl, sp
   118a4:	b	118cc <ReadCompressedInt32Data+0x24c>
   118a8:	mov	r3, r5
   118ac:	mov	r2, sl
   118b0:	mov	r1, r7
   118b4:	mov	r0, r4
   118b8:	bl	2dac <InflateData>
   118bc:	mov	r0, sl
   118c0:	bl	18cc <Mat_uint32Swap>
   118c4:	str	r0, [r6, r9, lsl #2]
   118c8:	add	r9, r9, #1
   118cc:	cmp	r8, r9
   118d0:	bgt	118a8 <ReadCompressedInt32Data+0x228>
   118d4:	b	1174c <ReadCompressedInt32Data+0xcc>
   118d8:	mov	r3, r5
   118dc:	mov	r2, sl
   118e0:	mov	r1, r7
   118e4:	mov	r0, r4
   118e8:	bl	2dac <InflateData>
   118ec:	ldr	r3, [sp]
   118f0:	str	r3, [r6, r9, lsl #2]
   118f4:	add	r9, r9, #1
   118f8:	cmp	r8, r9
   118fc:	bgt	118d8 <ReadCompressedInt32Data+0x258>
   11900:	b	1174c <ReadCompressedInt32Data+0xcc>
   11904:	ldr	r9, [r4, #20]
   11908:	cmp	r9, #0
   1190c:	moveq	sl, sp
   11910:	beq	11970 <ReadCompressedInt32Data+0x2f0>
   11914:	mov	r9, #0
   11918:	mov	sl, sp
   1191c:	b	11944 <ReadCompressedInt32Data+0x2c4>
   11920:	mov	r3, r5
   11924:	mov	r2, sl
   11928:	mov	r1, r7
   1192c:	mov	r0, r4
   11930:	bl	2dac <InflateData>
   11934:	mov	r0, sl
   11938:	bl	18fc <Mat_int16Swap>
   1193c:	str	r0, [r6, r9, lsl #2]
   11940:	add	r9, r9, #1
   11944:	cmp	r8, r9
   11948:	bgt	11920 <ReadCompressedInt32Data+0x2a0>
   1194c:	b	1174c <ReadCompressedInt32Data+0xcc>
   11950:	mov	r3, r5
   11954:	mov	r2, sl
   11958:	mov	r1, r7
   1195c:	mov	r0, r4
   11960:	bl	2dac <InflateData>
   11964:	ldrsh	r3, [sp]
   11968:	str	r3, [r6, r9, lsl #2]
   1196c:	add	r9, r9, #1
   11970:	cmp	r8, r9
   11974:	bgt	11950 <ReadCompressedInt32Data+0x2d0>
   11978:	b	1174c <ReadCompressedInt32Data+0xcc>
   1197c:	ldr	r9, [r4, #20]
   11980:	cmp	r9, #0
   11984:	moveq	sl, sp
   11988:	beq	119e8 <ReadCompressedInt32Data+0x368>
   1198c:	mov	r9, #0
   11990:	mov	sl, sp
   11994:	b	119bc <ReadCompressedInt32Data+0x33c>
   11998:	mov	r3, r5
   1199c:	mov	r2, sl
   119a0:	mov	r1, r7
   119a4:	mov	r0, r4
   119a8:	bl	2dac <InflateData>
   119ac:	mov	r0, sl
   119b0:	bl	191c <Mat_uint16Swap>
   119b4:	str	r0, [r6, r9, lsl #2]
   119b8:	add	r9, r9, #1
   119bc:	cmp	r8, r9
   119c0:	bgt	11998 <ReadCompressedInt32Data+0x318>
   119c4:	b	1174c <ReadCompressedInt32Data+0xcc>
   119c8:	mov	r3, r5
   119cc:	mov	r2, sl
   119d0:	mov	r1, r7
   119d4:	mov	r0, r4
   119d8:	bl	2dac <InflateData>
   119dc:	ldrh	r3, [sp]
   119e0:	str	r3, [r6, r9, lsl #2]
   119e4:	add	r9, r9, #1
   119e8:	cmp	r8, r9
   119ec:	bgt	119c8 <ReadCompressedInt32Data+0x348>
   119f0:	b	1174c <ReadCompressedInt32Data+0xcc>
   119f4:	mov	r3, r5
   119f8:	mov	r2, sl
   119fc:	mov	r1, r7
   11a00:	mov	r0, r4
   11a04:	bl	2dac <InflateData>
   11a08:	ldrb	r3, [sp]
   11a0c:	str	r3, [r6, r9, lsl #2]
   11a10:	add	r9, r9, #1
   11a14:	cmp	r8, r9
   11a18:	bgt	119f4 <ReadCompressedInt32Data+0x374>
   11a1c:	b	1174c <ReadCompressedInt32Data+0xcc>
   11a20:	mov	r9, #0
   11a24:	mov	sl, sp
   11a28:	b	11a14 <ReadCompressedInt32Data+0x394>
   11a2c:	mov	r3, r5
   11a30:	mov	r2, sl
   11a34:	mov	r1, r7
   11a38:	mov	r0, r4
   11a3c:	bl	2dac <InflateData>
   11a40:	ldrsb	r3, [sp]
   11a44:	str	r3, [r6, r9, lsl #2]
   11a48:	add	r9, r9, #1
   11a4c:	cmp	r8, r9
   11a50:	bgt	11a2c <ReadCompressedInt32Data+0x3ac>
   11a54:	b	1174c <ReadCompressedInt32Data+0xcc>
   11a58:	mov	r9, #0
   11a5c:	mov	sl, sp
   11a60:	b	11a4c <ReadCompressedInt32Data+0x3cc>
   11a64:	cmp	r9, #12
   11a68:	bne	11ae4 <ReadCompressedInt32Data+0x464>
   11a6c:	ldr	r9, [r4, #20]
   11a70:	cmp	r9, #0
   11a74:	moveq	sl, sp
   11a78:	beq	11ad8 <ReadCompressedInt32Data+0x458>
   11a7c:	mov	r9, #0
   11a80:	mov	sl, sp
   11a84:	b	11aac <ReadCompressedInt32Data+0x42c>
   11a88:	mov	r3, r5
   11a8c:	mov	r2, sl
   11a90:	mov	r1, r7
   11a94:	mov	r0, r4
   11a98:	bl	2dac <InflateData>
   11a9c:	mov	r0, sl
   11aa0:	bl	17ec <Mat_int64Swap>
   11aa4:	str	r0, [r6, r9, lsl #2]
   11aa8:	add	r9, r9, #1
   11aac:	cmp	r8, r9
   11ab0:	bgt	11a88 <ReadCompressedInt32Data+0x408>
   11ab4:	b	1174c <ReadCompressedInt32Data+0xcc>
   11ab8:	mov	r3, r5
   11abc:	mov	r2, sl
   11ac0:	mov	r1, r7
   11ac4:	mov	r0, r4
   11ac8:	bl	2dac <InflateData>
   11acc:	ldr	r3, [sp]
   11ad0:	str	r3, [r6, r9, lsl #2]
   11ad4:	add	r9, r9, #1
   11ad8:	cmp	r8, r9
   11adc:	bgt	11ab8 <ReadCompressedInt32Data+0x438>
   11ae0:	b	1174c <ReadCompressedInt32Data+0xcc>
   11ae4:	cmp	r9, #13
   11ae8:	bne	1174c <ReadCompressedInt32Data+0xcc>
   11aec:	ldr	r9, [r4, #20]
   11af0:	cmp	r9, #0
   11af4:	moveq	sl, sp
   11af8:	beq	11b58 <ReadCompressedInt32Data+0x4d8>
   11afc:	mov	r9, #0
   11b00:	mov	sl, sp
   11b04:	b	11b2c <ReadCompressedInt32Data+0x4ac>
   11b08:	mov	r3, r5
   11b0c:	mov	r2, sl
   11b10:	mov	r1, r7
   11b14:	mov	r0, r4
   11b18:	bl	2dac <InflateData>
   11b1c:	mov	r0, sl
   11b20:	bl	1844 <Mat_uint64Swap>
   11b24:	str	r0, [r6, r9, lsl #2]
   11b28:	add	r9, r9, #1
   11b2c:	cmp	r8, r9
   11b30:	bgt	11b08 <ReadCompressedInt32Data+0x488>
   11b34:	b	1174c <ReadCompressedInt32Data+0xcc>
   11b38:	mov	r3, r5
   11b3c:	mov	r2, sl
   11b40:	mov	r1, r7
   11b44:	mov	r0, r4
   11b48:	bl	2dac <InflateData>
   11b4c:	ldr	r3, [sp]
   11b50:	str	r3, [r6, r9, lsl #2]
   11b54:	add	r9, r9, #1
   11b58:	cmp	r8, r9
   11b5c:	bgt	11b38 <ReadCompressedInt32Data+0x4b8>
   11b60:	b	1174c <ReadCompressedInt32Data+0xcc>

00011b64 <ReadUInt32Data>:
   11b64:	cmp	r1, #0
   11b68:	cmpne	r0, #0
   11b6c:	beq	11b80 <ReadUInt32Data+0x1c>
   11b70:	ldr	ip, [r0]
   11b74:	cmp	ip, #0
   11b78:	beq	11b80 <ReadUInt32Data+0x1c>
   11b7c:	b	9594 <ReadUInt32Data.part.9>
   11b80:	mov	r0, #0
   11b84:	bx	lr

00011b88 <ReadCompressedUInt32Data>:
   11b88:	push	{r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
   11b8c:	cmp	r2, #0
   11b90:	mov	r7, r1
   11b94:	clz	r1, r1
   11b98:	lsr	r1, r1, #5
   11b9c:	moveq	r1, #1
   11ba0:	cmp	r0, #0
   11ba4:	moveq	r1, #1
   11ba8:	ldr	r8, [sp, #40]	; 0x28
   11bac:	cmp	r1, #0
   11bb0:	movne	r0, #0
   11bb4:	bne	11c58 <ReadCompressedUInt32Data+0xd0>
   11bb8:	mov	r9, r3
   11bbc:	mov	r4, r0
   11bc0:	mov	r0, r3
   11bc4:	mov	r6, r2
   11bc8:	bl	1598 <Mat_SizeOf@plt>
   11bcc:	sub	r3, r9, #1
   11bd0:	mov	r5, r0
   11bd4:	cmp	r3, #8
   11bd8:	addls	pc, pc, r3, lsl #2
   11bdc:	b	11f6c <ReadCompressedUInt32Data+0x3e4>
   11be0:	b	11f60 <ReadCompressedUInt32Data+0x3d8>
   11be4:	b	11f28 <ReadCompressedUInt32Data+0x3a0>
   11be8:	b	11e0c <ReadCompressedUInt32Data+0x284>
   11bec:	b	11e84 <ReadCompressedUInt32Data+0x2fc>
   11bf0:	b	11d1c <ReadCompressedUInt32Data+0x194>
   11bf4:	b	11d94 <ReadCompressedUInt32Data+0x20c>
   11bf8:	b	11c94 <ReadCompressedUInt32Data+0x10c>
   11bfc:	b	11f6c <ReadCompressedUInt32Data+0x3e4>
   11c00:	b	11c04 <ReadCompressedUInt32Data+0x7c>
   11c04:	ldr	r9, [r4, #20]
   11c08:	cmp	r9, #0
   11c0c:	moveq	sl, sp
   11c10:	beq	11c88 <ReadCompressedUInt32Data+0x100>
   11c14:	mov	r9, #0
   11c18:	mov	sl, sp
   11c1c:	b	11c4c <ReadCompressedUInt32Data+0xc4>
   11c20:	mov	r3, r5
   11c24:	mov	r2, sl
   11c28:	mov	r1, r7
   11c2c:	mov	r0, r4
   11c30:	bl	2dac <InflateData>
   11c34:	mov	r0, sl
   11c38:	bl	196c <Mat_doubleSwap>
   11c3c:	vcvt.u32.f64	s0, d0
   11c40:	vmov	r3, s0
   11c44:	str	r3, [r6, r9, lsl #2]
   11c48:	add	r9, r9, #1
   11c4c:	cmp	r8, r9
   11c50:	bgt	11c20 <ReadCompressedUInt32Data+0x98>
   11c54:	mul	r0, r5, r8
   11c58:	add	sp, sp, #8
   11c5c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11c60:	mov	r3, r5
   11c64:	mov	r2, sl
   11c68:	mov	r1, r7
   11c6c:	mov	r0, r4
   11c70:	bl	2dac <InflateData>
   11c74:	vldr	d7, [sp]
   11c78:	vcvt.u32.f64	s14, d7
   11c7c:	vmov	r3, s14
   11c80:	str	r3, [r6, r9, lsl #2]
   11c84:	add	r9, r9, #1
   11c88:	cmp	r8, r9
   11c8c:	bgt	11c60 <ReadCompressedUInt32Data+0xd8>
   11c90:	b	11c54 <ReadCompressedUInt32Data+0xcc>
   11c94:	ldr	r9, [r4, #20]
   11c98:	cmp	r9, #0
   11c9c:	moveq	sl, sp
   11ca0:	beq	11d10 <ReadCompressedUInt32Data+0x188>
   11ca4:	mov	r9, #0
   11ca8:	mov	sl, sp
   11cac:	b	11cdc <ReadCompressedUInt32Data+0x154>
   11cb0:	mov	r3, r5
   11cb4:	mov	r2, sl
   11cb8:	mov	r1, r7
   11cbc:	mov	r0, r4
   11cc0:	bl	2dac <InflateData>
   11cc4:	mov	r0, sl
   11cc8:	bl	193c <Mat_floatSwap>
   11ccc:	vcvt.u32.f32	s0, s0
   11cd0:	vmov	r3, s0
   11cd4:	str	r3, [r6, r9, lsl #2]
   11cd8:	add	r9, r9, #1
   11cdc:	cmp	r8, r9
   11ce0:	bgt	11cb0 <ReadCompressedUInt32Data+0x128>
   11ce4:	b	11c54 <ReadCompressedUInt32Data+0xcc>
   11ce8:	mov	r3, r5
   11cec:	mov	r2, sl
   11cf0:	mov	r1, r7
   11cf4:	mov	r0, r4
   11cf8:	bl	2dac <InflateData>
   11cfc:	vldr	s15, [sp]
   11d00:	vcvt.u32.f32	s15, s15
   11d04:	vmov	r3, s15
   11d08:	str	r3, [r6, r9, lsl #2]
   11d0c:	add	r9, r9, #1
   11d10:	cmp	r8, r9
   11d14:	bgt	11ce8 <ReadCompressedUInt32Data+0x160>
   11d18:	b	11c54 <ReadCompressedUInt32Data+0xcc>
   11d1c:	ldr	r9, [r4, #20]
   11d20:	cmp	r9, #0
   11d24:	moveq	sl, sp
   11d28:	beq	11d88 <ReadCompressedUInt32Data+0x200>
   11d2c:	mov	r9, #0
   11d30:	mov	sl, sp
   11d34:	b	11d5c <ReadCompressedUInt32Data+0x1d4>
   11d38:	mov	r3, r5
   11d3c:	mov	r2, sl
   11d40:	mov	r1, r7
   11d44:	mov	r0, r4
   11d48:	bl	2dac <InflateData>
   11d4c:	mov	r0, sl
   11d50:	bl	189c <Mat_int32Swap>
   11d54:	str	r0, [r6, r9, lsl #2]
   11d58:	add	r9, r9, #1
   11d5c:	cmp	r8, r9
   11d60:	bgt	11d38 <ReadCompressedUInt32Data+0x1b0>
   11d64:	b	11c54 <ReadCompressedUInt32Data+0xcc>
   11d68:	mov	r3, r5
   11d6c:	mov	r2, sl
   11d70:	mov	r1, r7
   11d74:	mov	r0, r4
   11d78:	bl	2dac <InflateData>
   11d7c:	ldr	r3, [sp]
   11d80:	str	r3, [r6, r9, lsl #2]
   11d84:	add	r9, r9, #1
   11d88:	cmp	r8, r9
   11d8c:	bgt	11d68 <ReadCompressedUInt32Data+0x1e0>
   11d90:	b	11c54 <ReadCompressedUInt32Data+0xcc>
   11d94:	ldr	r9, [r4, #20]
   11d98:	cmp	r9, #0
   11d9c:	moveq	sl, sp
   11da0:	beq	11e00 <ReadCompressedUInt32Data+0x278>
   11da4:	mov	r9, #0
   11da8:	mov	sl, sp
   11dac:	b	11dd4 <ReadCompressedUInt32Data+0x24c>
   11db0:	mov	r3, r5
   11db4:	mov	r2, sl
   11db8:	mov	r1, r7
   11dbc:	mov	r0, r4
   11dc0:	bl	2dac <InflateData>
   11dc4:	mov	r0, sl
   11dc8:	bl	18cc <Mat_uint32Swap>
   11dcc:	str	r0, [r6, r9, lsl #2]
   11dd0:	add	r9, r9, #1
   11dd4:	cmp	r8, r9
   11dd8:	bgt	11db0 <ReadCompressedUInt32Data+0x228>
   11ddc:	b	11c54 <ReadCompressedUInt32Data+0xcc>
   11de0:	mov	r3, r5
   11de4:	mov	r2, sl
   11de8:	mov	r1, r7
   11dec:	mov	r0, r4
   11df0:	bl	2dac <InflateData>
   11df4:	ldr	r3, [sp]
   11df8:	str	r3, [r6, r9, lsl #2]
   11dfc:	add	r9, r9, #1
   11e00:	cmp	r8, r9
   11e04:	bgt	11de0 <ReadCompressedUInt32Data+0x258>
   11e08:	b	11c54 <ReadCompressedUInt32Data+0xcc>
   11e0c:	ldr	r9, [r4, #20]
   11e10:	cmp	r9, #0
   11e14:	moveq	sl, sp
   11e18:	beq	11e78 <ReadCompressedUInt32Data+0x2f0>
   11e1c:	mov	r9, #0
   11e20:	mov	sl, sp
   11e24:	b	11e4c <ReadCompressedUInt32Data+0x2c4>
   11e28:	mov	r3, r5
   11e2c:	mov	r2, sl
   11e30:	mov	r1, r7
   11e34:	mov	r0, r4
   11e38:	bl	2dac <InflateData>
   11e3c:	mov	r0, sl
   11e40:	bl	18fc <Mat_int16Swap>
   11e44:	str	r0, [r6, r9, lsl #2]
   11e48:	add	r9, r9, #1
   11e4c:	cmp	r8, r9
   11e50:	bgt	11e28 <ReadCompressedUInt32Data+0x2a0>
   11e54:	b	11c54 <ReadCompressedUInt32Data+0xcc>
   11e58:	mov	r3, r5
   11e5c:	mov	r2, sl
   11e60:	mov	r1, r7
   11e64:	mov	r0, r4
   11e68:	bl	2dac <InflateData>
   11e6c:	ldrsh	r3, [sp]
   11e70:	str	r3, [r6, r9, lsl #2]
   11e74:	add	r9, r9, #1
   11e78:	cmp	r8, r9
   11e7c:	bgt	11e58 <ReadCompressedUInt32Data+0x2d0>
   11e80:	b	11c54 <ReadCompressedUInt32Data+0xcc>
   11e84:	ldr	r9, [r4, #20]
   11e88:	cmp	r9, #0
   11e8c:	moveq	sl, sp
   11e90:	beq	11ef0 <ReadCompressedUInt32Data+0x368>
   11e94:	mov	r9, #0
   11e98:	mov	sl, sp
   11e9c:	b	11ec4 <ReadCompressedUInt32Data+0x33c>
   11ea0:	mov	r3, r5
   11ea4:	mov	r2, sl
   11ea8:	mov	r1, r7
   11eac:	mov	r0, r4
   11eb0:	bl	2dac <InflateData>
   11eb4:	mov	r0, sl
   11eb8:	bl	191c <Mat_uint16Swap>
   11ebc:	str	r0, [r6, r9, lsl #2]
   11ec0:	add	r9, r9, #1
   11ec4:	cmp	r8, r9
   11ec8:	bgt	11ea0 <ReadCompressedUInt32Data+0x318>
   11ecc:	b	11c54 <ReadCompressedUInt32Data+0xcc>
   11ed0:	mov	r3, r5
   11ed4:	mov	r2, sl
   11ed8:	mov	r1, r7
   11edc:	mov	r0, r4
   11ee0:	bl	2dac <InflateData>
   11ee4:	ldrh	r3, [sp]
   11ee8:	str	r3, [r6, r9, lsl #2]
   11eec:	add	r9, r9, #1
   11ef0:	cmp	r8, r9
   11ef4:	bgt	11ed0 <ReadCompressedUInt32Data+0x348>
   11ef8:	b	11c54 <ReadCompressedUInt32Data+0xcc>
   11efc:	mov	r3, r5
   11f00:	mov	r2, sl
   11f04:	mov	r1, r7
   11f08:	mov	r0, r4
   11f0c:	bl	2dac <InflateData>
   11f10:	ldrb	r3, [sp]
   11f14:	str	r3, [r6, r9, lsl #2]
   11f18:	add	r9, r9, #1
   11f1c:	cmp	r8, r9
   11f20:	bgt	11efc <ReadCompressedUInt32Data+0x374>
   11f24:	b	11c54 <ReadCompressedUInt32Data+0xcc>
   11f28:	mov	r9, #0
   11f2c:	mov	sl, sp
   11f30:	b	11f1c <ReadCompressedUInt32Data+0x394>
   11f34:	mov	r3, r5
   11f38:	mov	r2, sl
   11f3c:	mov	r1, r7
   11f40:	mov	r0, r4
   11f44:	bl	2dac <InflateData>
   11f48:	ldrsb	r3, [sp]
   11f4c:	str	r3, [r6, r9, lsl #2]
   11f50:	add	r9, r9, #1
   11f54:	cmp	r8, r9
   11f58:	bgt	11f34 <ReadCompressedUInt32Data+0x3ac>
   11f5c:	b	11c54 <ReadCompressedUInt32Data+0xcc>
   11f60:	mov	r9, #0
   11f64:	mov	sl, sp
   11f68:	b	11f54 <ReadCompressedUInt32Data+0x3cc>
   11f6c:	cmp	r9, #12
   11f70:	bne	11fec <ReadCompressedUInt32Data+0x464>
   11f74:	ldr	r9, [r4, #20]
   11f78:	cmp	r9, #0
   11f7c:	moveq	sl, sp
   11f80:	beq	11fe0 <ReadCompressedUInt32Data+0x458>
   11f84:	mov	r9, #0
   11f88:	mov	sl, sp
   11f8c:	b	11fb4 <ReadCompressedUInt32Data+0x42c>
   11f90:	mov	r3, r5
   11f94:	mov	r2, sl
   11f98:	mov	r1, r7
   11f9c:	mov	r0, r4
   11fa0:	bl	2dac <InflateData>
   11fa4:	mov	r0, sl
   11fa8:	bl	17ec <Mat_int64Swap>
   11fac:	str	r0, [r6, r9, lsl #2]
   11fb0:	add	r9, r9, #1
   11fb4:	cmp	r8, r9
   11fb8:	bgt	11f90 <ReadCompressedUInt32Data+0x408>
   11fbc:	b	11c54 <ReadCompressedUInt32Data+0xcc>
   11fc0:	mov	r3, r5
   11fc4:	mov	r2, sl
   11fc8:	mov	r1, r7
   11fcc:	mov	r0, r4
   11fd0:	bl	2dac <InflateData>
   11fd4:	ldr	r3, [sp]
   11fd8:	str	r3, [r6, r9, lsl #2]
   11fdc:	add	r9, r9, #1
   11fe0:	cmp	r8, r9
   11fe4:	bgt	11fc0 <ReadCompressedUInt32Data+0x438>
   11fe8:	b	11c54 <ReadCompressedUInt32Data+0xcc>
   11fec:	cmp	r9, #13
   11ff0:	bne	11c54 <ReadCompressedUInt32Data+0xcc>
   11ff4:	ldr	r9, [r4, #20]
   11ff8:	cmp	r9, #0
   11ffc:	moveq	sl, sp
   12000:	beq	12060 <ReadCompressedUInt32Data+0x4d8>
   12004:	mov	r9, #0
   12008:	mov	sl, sp
   1200c:	b	12034 <ReadCompressedUInt32Data+0x4ac>
   12010:	mov	r3, r5
   12014:	mov	r2, sl
   12018:	mov	r1, r7
   1201c:	mov	r0, r4
   12020:	bl	2dac <InflateData>
   12024:	mov	r0, sl
   12028:	bl	1844 <Mat_uint64Swap>
   1202c:	str	r0, [r6, r9, lsl #2]
   12030:	add	r9, r9, #1
   12034:	cmp	r8, r9
   12038:	bgt	12010 <ReadCompressedUInt32Data+0x488>
   1203c:	b	11c54 <ReadCompressedUInt32Data+0xcc>
   12040:	mov	r3, r5
   12044:	mov	r2, sl
   12048:	mov	r1, r7
   1204c:	mov	r0, r4
   12050:	bl	2dac <InflateData>
   12054:	ldr	r3, [sp]
   12058:	str	r3, [r6, r9, lsl #2]
   1205c:	add	r9, r9, #1
   12060:	cmp	r8, r9
   12064:	bgt	12040 <ReadCompressedUInt32Data+0x4b8>
   12068:	b	11c54 <ReadCompressedUInt32Data+0xcc>

0001206c <ReadInt16Data>:
   1206c:	cmp	r1, #0
   12070:	cmpne	r0, #0
   12074:	beq	12088 <ReadInt16Data+0x1c>
   12078:	ldr	ip, [r0]
   1207c:	cmp	ip, #0
   12080:	beq	12088 <ReadInt16Data+0x1c>
   12084:	b	a8e8 <ReadInt16Data.part.11>
   12088:	mov	r0, #0
   1208c:	bx	lr

00012090 <ReadCompressedInt16Data>:
   12090:	push	{r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
   12094:	cmp	r2, #0
   12098:	mov	r7, r1
   1209c:	clz	r1, r1
   120a0:	lsr	r1, r1, #5
   120a4:	moveq	r1, #1
   120a8:	cmp	r0, #0
   120ac:	moveq	r1, #1
   120b0:	ldr	r8, [sp, #40]	; 0x28
   120b4:	cmp	r1, #0
   120b8:	movne	r0, #0
   120bc:	bne	12204 <ReadCompressedInt16Data+0x174>
   120c0:	mov	r9, r3
   120c4:	mov	r5, r0
   120c8:	mov	r0, r3
   120cc:	mov	r4, r2
   120d0:	bl	1598 <Mat_SizeOf@plt>
   120d4:	sub	r3, r9, #1
   120d8:	mov	r6, r0
   120dc:	cmp	r3, #8
   120e0:	addls	pc, pc, r3, lsl #2
   120e4:	b	12474 <ReadCompressedInt16Data+0x3e4>
   120e8:	b	12144 <ReadCompressedInt16Data+0xb4>
   120ec:	b	1210c <ReadCompressedInt16Data+0x7c>
   120f0:	b	12384 <ReadCompressedInt16Data+0x2f4>
   120f4:	b	123fc <ReadCompressedInt16Data+0x36c>
   120f8:	b	12294 <ReadCompressedInt16Data+0x204>
   120fc:	b	1230c <ReadCompressedInt16Data+0x27c>
   12100:	b	1220c <ReadCompressedInt16Data+0x17c>
   12104:	b	12474 <ReadCompressedInt16Data+0x3e4>
   12108:	b	1217c <ReadCompressedInt16Data+0xec>
   1210c:	sub	r4, r4, #2
   12110:	mov	r9, #0
   12114:	mov	sl, sp
   12118:	cmp	r8, r9
   1211c:	ble	12200 <ReadCompressedInt16Data+0x170>
   12120:	mov	r3, r6
   12124:	mov	r2, sl
   12128:	mov	r1, r7
   1212c:	mov	r0, r5
   12130:	bl	2dac <InflateData>
   12134:	ldrb	r3, [sp]
   12138:	add	r9, r9, #1
   1213c:	strh	r3, [r4, #2]!
   12140:	b	12118 <ReadCompressedInt16Data+0x88>
   12144:	sub	r4, r4, #2
   12148:	mov	r9, #0
   1214c:	mov	sl, sp
   12150:	cmp	r8, r9
   12154:	ble	12200 <ReadCompressedInt16Data+0x170>
   12158:	mov	r3, r6
   1215c:	mov	r2, sl
   12160:	mov	r1, r7
   12164:	mov	r0, r5
   12168:	bl	2dac <InflateData>
   1216c:	ldrsb	r3, [sp]
   12170:	add	r9, r9, #1
   12174:	strh	r3, [r4, #2]!
   12178:	b	12150 <ReadCompressedInt16Data+0xc0>
   1217c:	ldr	r9, [r5, #20]
   12180:	sub	r4, r4, #2
   12184:	cmp	r9, #0
   12188:	moveq	sl, sp
   1218c:	movne	r9, #0
   12190:	movne	sl, sp
   12194:	bne	121f8 <ReadCompressedInt16Data+0x168>
   12198:	cmp	r8, r9
   1219c:	ble	12200 <ReadCompressedInt16Data+0x170>
   121a0:	mov	r3, r6
   121a4:	mov	r2, sl
   121a8:	mov	r1, r7
   121ac:	mov	r0, r5
   121b0:	bl	2dac <InflateData>
   121b4:	vldr	d7, [sp]
   121b8:	add	r9, r9, #1
   121bc:	vcvt.s32.f64	s14, d7
   121c0:	vmov	r3, s14
   121c4:	strh	r3, [r4, #2]!
   121c8:	b	12198 <ReadCompressedInt16Data+0x108>
   121cc:	mov	r3, r6
   121d0:	mov	r2, sl
   121d4:	mov	r1, r7
   121d8:	mov	r0, r5
   121dc:	bl	2dac <InflateData>
   121e0:	mov	r0, sl
   121e4:	add	r9, r9, #1
   121e8:	bl	196c <Mat_doubleSwap>
   121ec:	vcvt.s32.f64	s0, d0
   121f0:	vmov	r3, s0
   121f4:	strh	r3, [r4, #2]!
   121f8:	cmp	r8, r9
   121fc:	bgt	121cc <ReadCompressedInt16Data+0x13c>
   12200:	mul	r0, r6, r8
   12204:	add	sp, sp, #8
   12208:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1220c:	ldr	r9, [r5, #20]
   12210:	sub	r4, r4, #2
   12214:	cmp	r9, #0
   12218:	moveq	sl, sp
   1221c:	movne	r9, #0
   12220:	movne	sl, sp
   12224:	bne	12288 <ReadCompressedInt16Data+0x1f8>
   12228:	cmp	r8, r9
   1222c:	ble	12200 <ReadCompressedInt16Data+0x170>
   12230:	mov	r3, r6
   12234:	mov	r2, sl
   12238:	mov	r1, r7
   1223c:	mov	r0, r5
   12240:	bl	2dac <InflateData>
   12244:	vldr	s15, [sp]
   12248:	add	r9, r9, #1
   1224c:	vcvt.s32.f32	s15, s15
   12250:	vmov	r3, s15
   12254:	strh	r3, [r4, #2]!
   12258:	b	12228 <ReadCompressedInt16Data+0x198>
   1225c:	mov	r3, r6
   12260:	mov	r2, sl
   12264:	mov	r1, r7
   12268:	mov	r0, r5
   1226c:	bl	2dac <InflateData>
   12270:	mov	r0, sl
   12274:	add	r9, r9, #1
   12278:	bl	193c <Mat_floatSwap>
   1227c:	vcvt.s32.f32	s0, s0
   12280:	vmov	r3, s0
   12284:	strh	r3, [r4, #2]!
   12288:	cmp	r8, r9
   1228c:	bgt	1225c <ReadCompressedInt16Data+0x1cc>
   12290:	b	12200 <ReadCompressedInt16Data+0x170>
   12294:	ldr	r9, [r5, #20]
   12298:	sub	r4, r4, #2
   1229c:	cmp	r9, #0
   122a0:	moveq	sl, sp
   122a4:	movne	r9, #0
   122a8:	movne	sl, sp
   122ac:	bne	12300 <ReadCompressedInt16Data+0x270>
   122b0:	cmp	r8, r9
   122b4:	ble	12200 <ReadCompressedInt16Data+0x170>
   122b8:	mov	r3, r6
   122bc:	mov	r2, sl
   122c0:	mov	r1, r7
   122c4:	mov	r0, r5
   122c8:	bl	2dac <InflateData>
   122cc:	ldr	r3, [sp]
   122d0:	add	r9, r9, #1
   122d4:	strh	r3, [r4, #2]!
   122d8:	b	122b0 <ReadCompressedInt16Data+0x220>
   122dc:	mov	r3, r6
   122e0:	mov	r2, sl
   122e4:	mov	r1, r7
   122e8:	mov	r0, r5
   122ec:	bl	2dac <InflateData>
   122f0:	add	r9, r9, #1
   122f4:	mov	r0, sl
   122f8:	bl	189c <Mat_int32Swap>
   122fc:	strh	r0, [r4, #2]!
   12300:	cmp	r8, r9
   12304:	bgt	122dc <ReadCompressedInt16Data+0x24c>
   12308:	b	12200 <ReadCompressedInt16Data+0x170>
   1230c:	ldr	r9, [r5, #20]
   12310:	sub	r4, r4, #2
   12314:	cmp	r9, #0
   12318:	moveq	sl, sp
   1231c:	movne	r9, #0
   12320:	movne	sl, sp
   12324:	bne	12378 <ReadCompressedInt16Data+0x2e8>
   12328:	cmp	r8, r9
   1232c:	ble	12200 <ReadCompressedInt16Data+0x170>
   12330:	mov	r3, r6
   12334:	mov	r2, sl
   12338:	mov	r1, r7
   1233c:	mov	r0, r5
   12340:	bl	2dac <InflateData>
   12344:	ldr	r3, [sp]
   12348:	add	r9, r9, #1
   1234c:	strh	r3, [r4, #2]!
   12350:	b	12328 <ReadCompressedInt16Data+0x298>
   12354:	mov	r3, r6
   12358:	mov	r2, sl
   1235c:	mov	r1, r7
   12360:	mov	r0, r5
   12364:	bl	2dac <InflateData>
   12368:	add	r9, r9, #1
   1236c:	mov	r0, sl
   12370:	bl	18cc <Mat_uint32Swap>
   12374:	strh	r0, [r4, #2]!
   12378:	cmp	r8, r9
   1237c:	bgt	12354 <ReadCompressedInt16Data+0x2c4>
   12380:	b	12200 <ReadCompressedInt16Data+0x170>
   12384:	ldr	r9, [r5, #20]
   12388:	sub	r4, r4, #2
   1238c:	cmp	r9, #0
   12390:	moveq	sl, sp
   12394:	movne	r9, #0
   12398:	movne	sl, sp
   1239c:	bne	123f0 <ReadCompressedInt16Data+0x360>
   123a0:	cmp	r8, r9
   123a4:	ble	12200 <ReadCompressedInt16Data+0x170>
   123a8:	mov	r3, r6
   123ac:	mov	r2, sl
   123b0:	mov	r1, r7
   123b4:	mov	r0, r5
   123b8:	bl	2dac <InflateData>
   123bc:	ldrh	r3, [sp]
   123c0:	add	r9, r9, #1
   123c4:	strh	r3, [r4, #2]!
   123c8:	b	123a0 <ReadCompressedInt16Data+0x310>
   123cc:	mov	r3, r6
   123d0:	mov	r2, sl
   123d4:	mov	r1, r7
   123d8:	mov	r0, r5
   123dc:	bl	2dac <InflateData>
   123e0:	add	r9, r9, #1
   123e4:	mov	r0, sl
   123e8:	bl	18fc <Mat_int16Swap>
   123ec:	strh	r0, [r4, #2]!
   123f0:	cmp	r8, r9
   123f4:	bgt	123cc <ReadCompressedInt16Data+0x33c>
   123f8:	b	12200 <ReadCompressedInt16Data+0x170>
   123fc:	ldr	r9, [r5, #20]
   12400:	sub	r4, r4, #2
   12404:	cmp	r9, #0
   12408:	moveq	sl, sp
   1240c:	movne	r9, #0
   12410:	movne	sl, sp
   12414:	bne	12468 <ReadCompressedInt16Data+0x3d8>
   12418:	cmp	r8, r9
   1241c:	ble	12200 <ReadCompressedInt16Data+0x170>
   12420:	mov	r3, r6
   12424:	mov	r2, sl
   12428:	mov	r1, r7
   1242c:	mov	r0, r5
   12430:	bl	2dac <InflateData>
   12434:	ldrh	r3, [sp]
   12438:	add	r9, r9, #1
   1243c:	strh	r3, [r4, #2]!
   12440:	b	12418 <ReadCompressedInt16Data+0x388>
   12444:	mov	r3, r6
   12448:	mov	r2, sl
   1244c:	mov	r1, r7
   12450:	mov	r0, r5
   12454:	bl	2dac <InflateData>
   12458:	add	r9, r9, #1
   1245c:	mov	r0, sl
   12460:	bl	191c <Mat_uint16Swap>
   12464:	strh	r0, [r4, #2]!
   12468:	cmp	r8, r9
   1246c:	bgt	12444 <ReadCompressedInt16Data+0x3b4>
   12470:	b	12200 <ReadCompressedInt16Data+0x170>
   12474:	cmp	r9, #12
   12478:	bne	124f4 <ReadCompressedInt16Data+0x464>
   1247c:	ldr	r9, [r5, #20]
   12480:	sub	r4, r4, #2
   12484:	cmp	r9, #0
   12488:	moveq	sl, sp
   1248c:	movne	r9, #0
   12490:	movne	sl, sp
   12494:	bne	124e8 <ReadCompressedInt16Data+0x458>
   12498:	cmp	r8, r9
   1249c:	ble	12200 <ReadCompressedInt16Data+0x170>
   124a0:	mov	r3, r6
   124a4:	mov	r2, sl
   124a8:	mov	r1, r7
   124ac:	mov	r0, r5
   124b0:	bl	2dac <InflateData>
   124b4:	ldr	r3, [sp]
   124b8:	add	r9, r9, #1
   124bc:	strh	r3, [r4, #2]!
   124c0:	b	12498 <ReadCompressedInt16Data+0x408>
   124c4:	mov	r3, r6
   124c8:	mov	r2, sl
   124cc:	mov	r1, r7
   124d0:	mov	r0, r5
   124d4:	bl	2dac <InflateData>
   124d8:	add	r9, r9, #1
   124dc:	mov	r0, sl
   124e0:	bl	17ec <Mat_int64Swap>
   124e4:	strh	r0, [r4, #2]!
   124e8:	cmp	r8, r9
   124ec:	bgt	124c4 <ReadCompressedInt16Data+0x434>
   124f0:	b	12200 <ReadCompressedInt16Data+0x170>
   124f4:	cmp	r9, #13
   124f8:	bne	12200 <ReadCompressedInt16Data+0x170>
   124fc:	ldr	r9, [r5, #20]
   12500:	sub	r4, r4, #2
   12504:	cmp	r9, #0
   12508:	moveq	sl, sp
   1250c:	movne	r9, #0
   12510:	movne	sl, sp
   12514:	bne	12568 <ReadCompressedInt16Data+0x4d8>
   12518:	cmp	r8, r9
   1251c:	ble	12200 <ReadCompressedInt16Data+0x170>
   12520:	mov	r3, r6
   12524:	mov	r2, sl
   12528:	mov	r1, r7
   1252c:	mov	r0, r5
   12530:	bl	2dac <InflateData>
   12534:	ldr	r3, [sp]
   12538:	add	r9, r9, #1
   1253c:	strh	r3, [r4, #2]!
   12540:	b	12518 <ReadCompressedInt16Data+0x488>
   12544:	mov	r3, r6
   12548:	mov	r2, sl
   1254c:	mov	r1, r7
   12550:	mov	r0, r5
   12554:	bl	2dac <InflateData>
   12558:	add	r9, r9, #1
   1255c:	mov	r0, sl
   12560:	bl	1844 <Mat_uint64Swap>
   12564:	strh	r0, [r4, #2]!
   12568:	cmp	r8, r9
   1256c:	bgt	12544 <ReadCompressedInt16Data+0x4b4>
   12570:	b	12200 <ReadCompressedInt16Data+0x170>

00012574 <ReadUInt16Data>:
   12574:	cmp	r1, #0
   12578:	cmpne	r0, #0
   1257c:	beq	12590 <ReadUInt16Data+0x1c>
   12580:	ldr	ip, [r0]
   12584:	cmp	ip, #0
   12588:	beq	12590 <ReadUInt16Data+0x1c>
   1258c:	b	bc60 <ReadUInt16Data.part.13>
   12590:	mov	r0, #0
   12594:	bx	lr

00012598 <ReadCompressedUInt16Data>:
   12598:	push	{r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
   1259c:	cmp	r2, #0
   125a0:	mov	r7, r1
   125a4:	clz	r1, r1
   125a8:	lsr	r1, r1, #5
   125ac:	moveq	r1, #1
   125b0:	cmp	r0, #0
   125b4:	moveq	r1, #1
   125b8:	ldr	r8, [sp, #40]	; 0x28
   125bc:	cmp	r1, #0
   125c0:	movne	r0, #0
   125c4:	bne	1270c <ReadCompressedUInt16Data+0x174>
   125c8:	mov	r9, r3
   125cc:	mov	r5, r0
   125d0:	mov	r0, r3
   125d4:	mov	r4, r2
   125d8:	bl	1598 <Mat_SizeOf@plt>
   125dc:	sub	r3, r9, #1
   125e0:	mov	r6, r0
   125e4:	cmp	r3, #8
   125e8:	addls	pc, pc, r3, lsl #2
   125ec:	b	1297c <ReadCompressedUInt16Data+0x3e4>
   125f0:	b	1264c <ReadCompressedUInt16Data+0xb4>
   125f4:	b	12614 <ReadCompressedUInt16Data+0x7c>
   125f8:	b	1288c <ReadCompressedUInt16Data+0x2f4>
   125fc:	b	12904 <ReadCompressedUInt16Data+0x36c>
   12600:	b	1279c <ReadCompressedUInt16Data+0x204>
   12604:	b	12814 <ReadCompressedUInt16Data+0x27c>
   12608:	b	12714 <ReadCompressedUInt16Data+0x17c>
   1260c:	b	1297c <ReadCompressedUInt16Data+0x3e4>
   12610:	b	12684 <ReadCompressedUInt16Data+0xec>
   12614:	sub	r4, r4, #2
   12618:	mov	r9, #0
   1261c:	mov	sl, sp
   12620:	cmp	r8, r9
   12624:	ble	12708 <ReadCompressedUInt16Data+0x170>
   12628:	mov	r3, r6
   1262c:	mov	r2, sl
   12630:	mov	r1, r7
   12634:	mov	r0, r5
   12638:	bl	2dac <InflateData>
   1263c:	ldrb	r3, [sp]
   12640:	add	r9, r9, #1
   12644:	strh	r3, [r4, #2]!
   12648:	b	12620 <ReadCompressedUInt16Data+0x88>
   1264c:	sub	r4, r4, #2
   12650:	mov	r9, #0
   12654:	mov	sl, sp
   12658:	cmp	r8, r9
   1265c:	ble	12708 <ReadCompressedUInt16Data+0x170>
   12660:	mov	r3, r6
   12664:	mov	r2, sl
   12668:	mov	r1, r7
   1266c:	mov	r0, r5
   12670:	bl	2dac <InflateData>
   12674:	ldrsb	r3, [sp]
   12678:	add	r9, r9, #1
   1267c:	strh	r3, [r4, #2]!
   12680:	b	12658 <ReadCompressedUInt16Data+0xc0>
   12684:	ldr	r9, [r5, #20]
   12688:	sub	r4, r4, #2
   1268c:	cmp	r9, #0
   12690:	moveq	sl, sp
   12694:	movne	r9, #0
   12698:	movne	sl, sp
   1269c:	bne	12700 <ReadCompressedUInt16Data+0x168>
   126a0:	cmp	r8, r9
   126a4:	ble	12708 <ReadCompressedUInt16Data+0x170>
   126a8:	mov	r3, r6
   126ac:	mov	r2, sl
   126b0:	mov	r1, r7
   126b4:	mov	r0, r5
   126b8:	bl	2dac <InflateData>
   126bc:	vldr	d7, [sp]
   126c0:	add	r9, r9, #1
   126c4:	vcvt.u32.f64	s14, d7
   126c8:	vmov	r3, s14
   126cc:	strh	r3, [r4, #2]!
   126d0:	b	126a0 <ReadCompressedUInt16Data+0x108>
   126d4:	mov	r3, r6
   126d8:	mov	r2, sl
   126dc:	mov	r1, r7
   126e0:	mov	r0, r5
   126e4:	bl	2dac <InflateData>
   126e8:	mov	r0, sl
   126ec:	add	r9, r9, #1
   126f0:	bl	196c <Mat_doubleSwap>
   126f4:	vcvt.u32.f64	s0, d0
   126f8:	vmov	r3, s0
   126fc:	strh	r3, [r4, #2]!
   12700:	cmp	r8, r9
   12704:	bgt	126d4 <ReadCompressedUInt16Data+0x13c>
   12708:	mul	r0, r6, r8
   1270c:	add	sp, sp, #8
   12710:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12714:	ldr	r9, [r5, #20]
   12718:	sub	r4, r4, #2
   1271c:	cmp	r9, #0
   12720:	moveq	sl, sp
   12724:	movne	r9, #0
   12728:	movne	sl, sp
   1272c:	bne	12790 <ReadCompressedUInt16Data+0x1f8>
   12730:	cmp	r8, r9
   12734:	ble	12708 <ReadCompressedUInt16Data+0x170>
   12738:	mov	r3, r6
   1273c:	mov	r2, sl
   12740:	mov	r1, r7
   12744:	mov	r0, r5
   12748:	bl	2dac <InflateData>
   1274c:	vldr	s15, [sp]
   12750:	add	r9, r9, #1
   12754:	vcvt.u32.f32	s15, s15
   12758:	vmov	r3, s15
   1275c:	strh	r3, [r4, #2]!
   12760:	b	12730 <ReadCompressedUInt16Data+0x198>
   12764:	mov	r3, r6
   12768:	mov	r2, sl
   1276c:	mov	r1, r7
   12770:	mov	r0, r5
   12774:	bl	2dac <InflateData>
   12778:	mov	r0, sl
   1277c:	add	r9, r9, #1
   12780:	bl	193c <Mat_floatSwap>
   12784:	vcvt.u32.f32	s0, s0
   12788:	vmov	r3, s0
   1278c:	strh	r3, [r4, #2]!
   12790:	cmp	r8, r9
   12794:	bgt	12764 <ReadCompressedUInt16Data+0x1cc>
   12798:	b	12708 <ReadCompressedUInt16Data+0x170>
   1279c:	ldr	r9, [r5, #20]
   127a0:	sub	r4, r4, #2
   127a4:	cmp	r9, #0
   127a8:	moveq	sl, sp
   127ac:	movne	r9, #0
   127b0:	movne	sl, sp
   127b4:	bne	12808 <ReadCompressedUInt16Data+0x270>
   127b8:	cmp	r8, r9
   127bc:	ble	12708 <ReadCompressedUInt16Data+0x170>
   127c0:	mov	r3, r6
   127c4:	mov	r2, sl
   127c8:	mov	r1, r7
   127cc:	mov	r0, r5
   127d0:	bl	2dac <InflateData>
   127d4:	ldr	r3, [sp]
   127d8:	add	r9, r9, #1
   127dc:	strh	r3, [r4, #2]!
   127e0:	b	127b8 <ReadCompressedUInt16Data+0x220>
   127e4:	mov	r3, r6
   127e8:	mov	r2, sl
   127ec:	mov	r1, r7
   127f0:	mov	r0, r5
   127f4:	bl	2dac <InflateData>
   127f8:	add	r9, r9, #1
   127fc:	mov	r0, sl
   12800:	bl	189c <Mat_int32Swap>
   12804:	strh	r0, [r4, #2]!
   12808:	cmp	r8, r9
   1280c:	bgt	127e4 <ReadCompressedUInt16Data+0x24c>
   12810:	b	12708 <ReadCompressedUInt16Data+0x170>
   12814:	ldr	r9, [r5, #20]
   12818:	sub	r4, r4, #2
   1281c:	cmp	r9, #0
   12820:	moveq	sl, sp
   12824:	movne	r9, #0
   12828:	movne	sl, sp
   1282c:	bne	12880 <ReadCompressedUInt16Data+0x2e8>
   12830:	cmp	r8, r9
   12834:	ble	12708 <ReadCompressedUInt16Data+0x170>
   12838:	mov	r3, r6
   1283c:	mov	r2, sl
   12840:	mov	r1, r7
   12844:	mov	r0, r5
   12848:	bl	2dac <InflateData>
   1284c:	ldr	r3, [sp]
   12850:	add	r9, r9, #1
   12854:	strh	r3, [r4, #2]!
   12858:	b	12830 <ReadCompressedUInt16Data+0x298>
   1285c:	mov	r3, r6
   12860:	mov	r2, sl
   12864:	mov	r1, r7
   12868:	mov	r0, r5
   1286c:	bl	2dac <InflateData>
   12870:	add	r9, r9, #1
   12874:	mov	r0, sl
   12878:	bl	18cc <Mat_uint32Swap>
   1287c:	strh	r0, [r4, #2]!
   12880:	cmp	r8, r9
   12884:	bgt	1285c <ReadCompressedUInt16Data+0x2c4>
   12888:	b	12708 <ReadCompressedUInt16Data+0x170>
   1288c:	ldr	r9, [r5, #20]
   12890:	sub	r4, r4, #2
   12894:	cmp	r9, #0
   12898:	moveq	sl, sp
   1289c:	movne	r9, #0
   128a0:	movne	sl, sp
   128a4:	bne	128f8 <ReadCompressedUInt16Data+0x360>
   128a8:	cmp	r8, r9
   128ac:	ble	12708 <ReadCompressedUInt16Data+0x170>
   128b0:	mov	r3, r6
   128b4:	mov	r2, sl
   128b8:	mov	r1, r7
   128bc:	mov	r0, r5
   128c0:	bl	2dac <InflateData>
   128c4:	ldrh	r3, [sp]
   128c8:	add	r9, r9, #1
   128cc:	strh	r3, [r4, #2]!
   128d0:	b	128a8 <ReadCompressedUInt16Data+0x310>
   128d4:	mov	r3, r6
   128d8:	mov	r2, sl
   128dc:	mov	r1, r7
   128e0:	mov	r0, r5
   128e4:	bl	2dac <InflateData>
   128e8:	add	r9, r9, #1
   128ec:	mov	r0, sl
   128f0:	bl	18fc <Mat_int16Swap>
   128f4:	strh	r0, [r4, #2]!
   128f8:	cmp	r8, r9
   128fc:	bgt	128d4 <ReadCompressedUInt16Data+0x33c>
   12900:	b	12708 <ReadCompressedUInt16Data+0x170>
   12904:	ldr	r9, [r5, #20]
   12908:	sub	r4, r4, #2
   1290c:	cmp	r9, #0
   12910:	moveq	sl, sp
   12914:	movne	r9, #0
   12918:	movne	sl, sp
   1291c:	bne	12970 <ReadCompressedUInt16Data+0x3d8>
   12920:	cmp	r8, r9
   12924:	ble	12708 <ReadCompressedUInt16Data+0x170>
   12928:	mov	r3, r6
   1292c:	mov	r2, sl
   12930:	mov	r1, r7
   12934:	mov	r0, r5
   12938:	bl	2dac <InflateData>
   1293c:	ldrh	r3, [sp]
   12940:	add	r9, r9, #1
   12944:	strh	r3, [r4, #2]!
   12948:	b	12920 <ReadCompressedUInt16Data+0x388>
   1294c:	mov	r3, r6
   12950:	mov	r2, sl
   12954:	mov	r1, r7
   12958:	mov	r0, r5
   1295c:	bl	2dac <InflateData>
   12960:	add	r9, r9, #1
   12964:	mov	r0, sl
   12968:	bl	191c <Mat_uint16Swap>
   1296c:	strh	r0, [r4, #2]!
   12970:	cmp	r8, r9
   12974:	bgt	1294c <ReadCompressedUInt16Data+0x3b4>
   12978:	b	12708 <ReadCompressedUInt16Data+0x170>
   1297c:	cmp	r9, #12
   12980:	bne	129fc <ReadCompressedUInt16Data+0x464>
   12984:	ldr	r9, [r5, #20]
   12988:	sub	r4, r4, #2
   1298c:	cmp	r9, #0
   12990:	moveq	sl, sp
   12994:	movne	r9, #0
   12998:	movne	sl, sp
   1299c:	bne	129f0 <ReadCompressedUInt16Data+0x458>
   129a0:	cmp	r8, r9
   129a4:	ble	12708 <ReadCompressedUInt16Data+0x170>
   129a8:	mov	r3, r6
   129ac:	mov	r2, sl
   129b0:	mov	r1, r7
   129b4:	mov	r0, r5
   129b8:	bl	2dac <InflateData>
   129bc:	ldr	r3, [sp]
   129c0:	add	r9, r9, #1
   129c4:	strh	r3, [r4, #2]!
   129c8:	b	129a0 <ReadCompressedUInt16Data+0x408>
   129cc:	mov	r3, r6
   129d0:	mov	r2, sl
   129d4:	mov	r1, r7
   129d8:	mov	r0, r5
   129dc:	bl	2dac <InflateData>
   129e0:	add	r9, r9, #1
   129e4:	mov	r0, sl
   129e8:	bl	17ec <Mat_int64Swap>
   129ec:	strh	r0, [r4, #2]!
   129f0:	cmp	r8, r9
   129f4:	bgt	129cc <ReadCompressedUInt16Data+0x434>
   129f8:	b	12708 <ReadCompressedUInt16Data+0x170>
   129fc:	cmp	r9, #13
   12a00:	bne	12708 <ReadCompressedUInt16Data+0x170>
   12a04:	ldr	r9, [r5, #20]
   12a08:	sub	r4, r4, #2
   12a0c:	cmp	r9, #0
   12a10:	moveq	sl, sp
   12a14:	movne	r9, #0
   12a18:	movne	sl, sp
   12a1c:	bne	12a70 <ReadCompressedUInt16Data+0x4d8>
   12a20:	cmp	r8, r9
   12a24:	ble	12708 <ReadCompressedUInt16Data+0x170>
   12a28:	mov	r3, r6
   12a2c:	mov	r2, sl
   12a30:	mov	r1, r7
   12a34:	mov	r0, r5
   12a38:	bl	2dac <InflateData>
   12a3c:	ldr	r3, [sp]
   12a40:	add	r9, r9, #1
   12a44:	strh	r3, [r4, #2]!
   12a48:	b	12a20 <ReadCompressedUInt16Data+0x488>
   12a4c:	mov	r3, r6
   12a50:	mov	r2, sl
   12a54:	mov	r1, r7
   12a58:	mov	r0, r5
   12a5c:	bl	2dac <InflateData>
   12a60:	add	r9, r9, #1
   12a64:	mov	r0, sl
   12a68:	bl	1844 <Mat_uint64Swap>
   12a6c:	strh	r0, [r4, #2]!
   12a70:	cmp	r8, r9
   12a74:	bgt	12a4c <ReadCompressedUInt16Data+0x4b4>
   12a78:	b	12708 <ReadCompressedUInt16Data+0x170>

00012a7c <ReadInt8Data>:
   12a7c:	cmp	r1, #0
   12a80:	cmpne	r0, #0
   12a84:	beq	12a98 <ReadInt8Data+0x1c>
   12a88:	ldr	ip, [r0]
   12a8c:	cmp	ip, #0
   12a90:	beq	12a98 <ReadInt8Data+0x1c>
   12a94:	b	cfd8 <ReadInt8Data.part.15>
   12a98:	mov	r0, #0
   12a9c:	bx	lr

00012aa0 <ReadCompressedInt8Data>:
   12aa0:	push	{r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
   12aa4:	cmp	r2, #0
   12aa8:	mov	r7, r1
   12aac:	clz	r1, r1
   12ab0:	lsr	r1, r1, #5
   12ab4:	moveq	r1, #1
   12ab8:	cmp	r0, #0
   12abc:	moveq	r1, #1
   12ac0:	ldr	r8, [sp, #40]	; 0x28
   12ac4:	cmp	r1, #0
   12ac8:	movne	r0, #0
   12acc:	bne	12b70 <ReadCompressedInt8Data+0xd0>
   12ad0:	mov	r9, r3
   12ad4:	mov	r4, r0
   12ad8:	mov	r0, r3
   12adc:	mov	r6, r2
   12ae0:	bl	1598 <Mat_SizeOf@plt>
   12ae4:	sub	r3, r9, #1
   12ae8:	mov	r5, r0
   12aec:	cmp	r3, #8
   12af0:	addls	pc, pc, r3, lsl #2
   12af4:	b	12e84 <ReadCompressedInt8Data+0x3e4>
   12af8:	b	12e78 <ReadCompressedInt8Data+0x3d8>
   12afc:	b	12e40 <ReadCompressedInt8Data+0x3a0>
   12b00:	b	12d24 <ReadCompressedInt8Data+0x284>
   12b04:	b	12d9c <ReadCompressedInt8Data+0x2fc>
   12b08:	b	12c34 <ReadCompressedInt8Data+0x194>
   12b0c:	b	12cac <ReadCompressedInt8Data+0x20c>
   12b10:	b	12bac <ReadCompressedInt8Data+0x10c>
   12b14:	b	12e84 <ReadCompressedInt8Data+0x3e4>
   12b18:	b	12b1c <ReadCompressedInt8Data+0x7c>
   12b1c:	ldr	r9, [r4, #20]
   12b20:	cmp	r9, #0
   12b24:	moveq	sl, sp
   12b28:	beq	12ba0 <ReadCompressedInt8Data+0x100>
   12b2c:	mov	r9, #0
   12b30:	mov	sl, sp
   12b34:	b	12b64 <ReadCompressedInt8Data+0xc4>
   12b38:	mov	r3, r5
   12b3c:	mov	r2, sl
   12b40:	mov	r1, r7
   12b44:	mov	r0, r4
   12b48:	bl	2dac <InflateData>
   12b4c:	mov	r0, sl
   12b50:	bl	196c <Mat_doubleSwap>
   12b54:	vcvt.s32.f64	s15, d0
   12b58:	vmov	r3, s15
   12b5c:	strb	r3, [r6, r9]
   12b60:	add	r9, r9, #1
   12b64:	cmp	r8, r9
   12b68:	bgt	12b38 <ReadCompressedInt8Data+0x98>
   12b6c:	mul	r0, r5, r8
   12b70:	add	sp, sp, #8
   12b74:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12b78:	mov	r3, r5
   12b7c:	mov	r2, sl
   12b80:	mov	r1, r7
   12b84:	mov	r0, r4
   12b88:	bl	2dac <InflateData>
   12b8c:	vldr	d7, [sp]
   12b90:	vcvt.s32.f64	s15, d7
   12b94:	vmov	r3, s15
   12b98:	strb	r3, [r6, r9]
   12b9c:	add	r9, r9, #1
   12ba0:	cmp	r8, r9
   12ba4:	bgt	12b78 <ReadCompressedInt8Data+0xd8>
   12ba8:	b	12b6c <ReadCompressedInt8Data+0xcc>
   12bac:	ldr	r9, [r4, #20]
   12bb0:	cmp	r9, #0
   12bb4:	moveq	sl, sp
   12bb8:	beq	12c28 <ReadCompressedInt8Data+0x188>
   12bbc:	mov	r9, #0
   12bc0:	mov	sl, sp
   12bc4:	b	12bf4 <ReadCompressedInt8Data+0x154>
   12bc8:	mov	r3, r5
   12bcc:	mov	r2, sl
   12bd0:	mov	r1, r7
   12bd4:	mov	r0, r4
   12bd8:	bl	2dac <InflateData>
   12bdc:	mov	r0, sl
   12be0:	bl	193c <Mat_floatSwap>
   12be4:	vcvt.s32.f32	s15, s0
   12be8:	vmov	r3, s15
   12bec:	strb	r3, [r6, r9]
   12bf0:	add	r9, r9, #1
   12bf4:	cmp	r8, r9
   12bf8:	bgt	12bc8 <ReadCompressedInt8Data+0x128>
   12bfc:	b	12b6c <ReadCompressedInt8Data+0xcc>
   12c00:	mov	r3, r5
   12c04:	mov	r2, sl
   12c08:	mov	r1, r7
   12c0c:	mov	r0, r4
   12c10:	bl	2dac <InflateData>
   12c14:	vldr	s15, [sp]
   12c18:	vcvt.s32.f32	s15, s15
   12c1c:	vmov	r3, s15
   12c20:	strb	r3, [r6, r9]
   12c24:	add	r9, r9, #1
   12c28:	cmp	r8, r9
   12c2c:	bgt	12c00 <ReadCompressedInt8Data+0x160>
   12c30:	b	12b6c <ReadCompressedInt8Data+0xcc>
   12c34:	ldr	r9, [r4, #20]
   12c38:	cmp	r9, #0
   12c3c:	moveq	sl, sp
   12c40:	beq	12ca0 <ReadCompressedInt8Data+0x200>
   12c44:	mov	r9, #0
   12c48:	mov	sl, sp
   12c4c:	b	12c74 <ReadCompressedInt8Data+0x1d4>
   12c50:	mov	r3, r5
   12c54:	mov	r2, sl
   12c58:	mov	r1, r7
   12c5c:	mov	r0, r4
   12c60:	bl	2dac <InflateData>
   12c64:	mov	r0, sl
   12c68:	bl	189c <Mat_int32Swap>
   12c6c:	strb	r0, [r6, r9]
   12c70:	add	r9, r9, #1
   12c74:	cmp	r8, r9
   12c78:	bgt	12c50 <ReadCompressedInt8Data+0x1b0>
   12c7c:	b	12b6c <ReadCompressedInt8Data+0xcc>
   12c80:	mov	r3, r5
   12c84:	mov	r2, sl
   12c88:	mov	r1, r7
   12c8c:	mov	r0, r4
   12c90:	bl	2dac <InflateData>
   12c94:	ldr	r3, [sp]
   12c98:	strb	r3, [r6, r9]
   12c9c:	add	r9, r9, #1
   12ca0:	cmp	r8, r9
   12ca4:	bgt	12c80 <ReadCompressedInt8Data+0x1e0>
   12ca8:	b	12b6c <ReadCompressedInt8Data+0xcc>
   12cac:	ldr	r9, [r4, #20]
   12cb0:	cmp	r9, #0
   12cb4:	moveq	sl, sp
   12cb8:	beq	12d18 <ReadCompressedInt8Data+0x278>
   12cbc:	mov	r9, #0
   12cc0:	mov	sl, sp
   12cc4:	b	12cec <ReadCompressedInt8Data+0x24c>
   12cc8:	mov	r3, r5
   12ccc:	mov	r2, sl
   12cd0:	mov	r1, r7
   12cd4:	mov	r0, r4
   12cd8:	bl	2dac <InflateData>
   12cdc:	mov	r0, sl
   12ce0:	bl	18cc <Mat_uint32Swap>
   12ce4:	strb	r0, [r6, r9]
   12ce8:	add	r9, r9, #1
   12cec:	cmp	r8, r9
   12cf0:	bgt	12cc8 <ReadCompressedInt8Data+0x228>
   12cf4:	b	12b6c <ReadCompressedInt8Data+0xcc>
   12cf8:	mov	r3, r5
   12cfc:	mov	r2, sl
   12d00:	mov	r1, r7
   12d04:	mov	r0, r4
   12d08:	bl	2dac <InflateData>
   12d0c:	ldr	r3, [sp]
   12d10:	strb	r3, [r6, r9]
   12d14:	add	r9, r9, #1
   12d18:	cmp	r8, r9
   12d1c:	bgt	12cf8 <ReadCompressedInt8Data+0x258>
   12d20:	b	12b6c <ReadCompressedInt8Data+0xcc>
   12d24:	ldr	r9, [r4, #20]
   12d28:	cmp	r9, #0
   12d2c:	moveq	sl, sp
   12d30:	beq	12d90 <ReadCompressedInt8Data+0x2f0>
   12d34:	mov	r9, #0
   12d38:	mov	sl, sp
   12d3c:	b	12d64 <ReadCompressedInt8Data+0x2c4>
   12d40:	mov	r3, r5
   12d44:	mov	r2, sl
   12d48:	mov	r1, r7
   12d4c:	mov	r0, r4
   12d50:	bl	2dac <InflateData>
   12d54:	mov	r0, sl
   12d58:	bl	18fc <Mat_int16Swap>
   12d5c:	strb	r0, [r6, r9]
   12d60:	add	r9, r9, #1
   12d64:	cmp	r8, r9
   12d68:	bgt	12d40 <ReadCompressedInt8Data+0x2a0>
   12d6c:	b	12b6c <ReadCompressedInt8Data+0xcc>
   12d70:	mov	r3, r5
   12d74:	mov	r2, sl
   12d78:	mov	r1, r7
   12d7c:	mov	r0, r4
   12d80:	bl	2dac <InflateData>
   12d84:	ldrh	r3, [sp]
   12d88:	strb	r3, [r6, r9]
   12d8c:	add	r9, r9, #1
   12d90:	cmp	r8, r9
   12d94:	bgt	12d70 <ReadCompressedInt8Data+0x2d0>
   12d98:	b	12b6c <ReadCompressedInt8Data+0xcc>
   12d9c:	ldr	r9, [r4, #20]
   12da0:	cmp	r9, #0
   12da4:	moveq	sl, sp
   12da8:	beq	12e08 <ReadCompressedInt8Data+0x368>
   12dac:	mov	r9, #0
   12db0:	mov	sl, sp
   12db4:	b	12ddc <ReadCompressedInt8Data+0x33c>
   12db8:	mov	r3, r5
   12dbc:	mov	r2, sl
   12dc0:	mov	r1, r7
   12dc4:	mov	r0, r4
   12dc8:	bl	2dac <InflateData>
   12dcc:	mov	r0, sl
   12dd0:	bl	191c <Mat_uint16Swap>
   12dd4:	strb	r0, [r6, r9]
   12dd8:	add	r9, r9, #1
   12ddc:	cmp	r8, r9
   12de0:	bgt	12db8 <ReadCompressedInt8Data+0x318>
   12de4:	b	12b6c <ReadCompressedInt8Data+0xcc>
   12de8:	mov	r3, r5
   12dec:	mov	r2, sl
   12df0:	mov	r1, r7
   12df4:	mov	r0, r4
   12df8:	bl	2dac <InflateData>
   12dfc:	ldrh	r3, [sp]
   12e00:	strb	r3, [r6, r9]
   12e04:	add	r9, r9, #1
   12e08:	cmp	r8, r9
   12e0c:	bgt	12de8 <ReadCompressedInt8Data+0x348>
   12e10:	b	12b6c <ReadCompressedInt8Data+0xcc>
   12e14:	mov	r3, r5
   12e18:	mov	r2, sl
   12e1c:	mov	r1, r7
   12e20:	mov	r0, r4
   12e24:	bl	2dac <InflateData>
   12e28:	ldrb	r3, [sp]
   12e2c:	strb	r3, [r6, r9]
   12e30:	add	r9, r9, #1
   12e34:	cmp	r8, r9
   12e38:	bgt	12e14 <ReadCompressedInt8Data+0x374>
   12e3c:	b	12b6c <ReadCompressedInt8Data+0xcc>
   12e40:	mov	r9, #0
   12e44:	mov	sl, sp
   12e48:	b	12e34 <ReadCompressedInt8Data+0x394>
   12e4c:	mov	r3, r5
   12e50:	mov	r2, sl
   12e54:	mov	r1, r7
   12e58:	mov	r0, r4
   12e5c:	bl	2dac <InflateData>
   12e60:	ldrb	r3, [sp]
   12e64:	strb	r3, [r6, r9]
   12e68:	add	r9, r9, #1
   12e6c:	cmp	r8, r9
   12e70:	bgt	12e4c <ReadCompressedInt8Data+0x3ac>
   12e74:	b	12b6c <ReadCompressedInt8Data+0xcc>
   12e78:	mov	r9, #0
   12e7c:	mov	sl, sp
   12e80:	b	12e6c <ReadCompressedInt8Data+0x3cc>
   12e84:	cmp	r9, #12
   12e88:	bne	12f04 <ReadCompressedInt8Data+0x464>
   12e8c:	ldr	r9, [r4, #20]
   12e90:	cmp	r9, #0
   12e94:	moveq	sl, sp
   12e98:	beq	12ef8 <ReadCompressedInt8Data+0x458>
   12e9c:	mov	r9, #0
   12ea0:	mov	sl, sp
   12ea4:	b	12ecc <ReadCompressedInt8Data+0x42c>
   12ea8:	mov	r3, r5
   12eac:	mov	r2, sl
   12eb0:	mov	r1, r7
   12eb4:	mov	r0, r4
   12eb8:	bl	2dac <InflateData>
   12ebc:	mov	r0, sl
   12ec0:	bl	17ec <Mat_int64Swap>
   12ec4:	strb	r0, [r6, r9]
   12ec8:	add	r9, r9, #1
   12ecc:	cmp	r8, r9
   12ed0:	bgt	12ea8 <ReadCompressedInt8Data+0x408>
   12ed4:	b	12b6c <ReadCompressedInt8Data+0xcc>
   12ed8:	mov	r3, r5
   12edc:	mov	r2, sl
   12ee0:	mov	r1, r7
   12ee4:	mov	r0, r4
   12ee8:	bl	2dac <InflateData>
   12eec:	ldr	r3, [sp]
   12ef0:	strb	r3, [r6, r9]
   12ef4:	add	r9, r9, #1
   12ef8:	cmp	r8, r9
   12efc:	bgt	12ed8 <ReadCompressedInt8Data+0x438>
   12f00:	b	12b6c <ReadCompressedInt8Data+0xcc>
   12f04:	cmp	r9, #13
   12f08:	bne	12b6c <ReadCompressedInt8Data+0xcc>
   12f0c:	ldr	r9, [r4, #20]
   12f10:	cmp	r9, #0
   12f14:	moveq	sl, sp
   12f18:	beq	12f78 <ReadCompressedInt8Data+0x4d8>
   12f1c:	mov	r9, #0
   12f20:	mov	sl, sp
   12f24:	b	12f4c <ReadCompressedInt8Data+0x4ac>
   12f28:	mov	r3, r5
   12f2c:	mov	r2, sl
   12f30:	mov	r1, r7
   12f34:	mov	r0, r4
   12f38:	bl	2dac <InflateData>
   12f3c:	mov	r0, sl
   12f40:	bl	1844 <Mat_uint64Swap>
   12f44:	strb	r0, [r6, r9]
   12f48:	add	r9, r9, #1
   12f4c:	cmp	r8, r9
   12f50:	bgt	12f28 <ReadCompressedInt8Data+0x488>
   12f54:	b	12b6c <ReadCompressedInt8Data+0xcc>
   12f58:	mov	r3, r5
   12f5c:	mov	r2, sl
   12f60:	mov	r1, r7
   12f64:	mov	r0, r4
   12f68:	bl	2dac <InflateData>
   12f6c:	ldr	r3, [sp]
   12f70:	strb	r3, [r6, r9]
   12f74:	add	r9, r9, #1
   12f78:	cmp	r8, r9
   12f7c:	bgt	12f58 <ReadCompressedInt8Data+0x4b8>
   12f80:	b	12b6c <ReadCompressedInt8Data+0xcc>

00012f84 <ReadUInt8Data>:
   12f84:	cmp	r1, #0
   12f88:	cmpne	r0, #0
   12f8c:	beq	12fa0 <ReadUInt8Data+0x1c>
   12f90:	ldr	ip, [r0]
   12f94:	cmp	ip, #0
   12f98:	beq	12fa0 <ReadUInt8Data+0x1c>
   12f9c:	b	e2a0 <ReadUInt8Data.part.17>
   12fa0:	mov	r0, #0
   12fa4:	bx	lr

00012fa8 <ReadCompressedUInt8Data>:
   12fa8:	push	{r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
   12fac:	cmp	r2, #0
   12fb0:	mov	r7, r1
   12fb4:	clz	r1, r1
   12fb8:	lsr	r1, r1, #5
   12fbc:	moveq	r1, #1
   12fc0:	cmp	r0, #0
   12fc4:	moveq	r1, #1
   12fc8:	ldr	r8, [sp, #40]	; 0x28
   12fcc:	cmp	r1, #0
   12fd0:	movne	r0, #0
   12fd4:	bne	13078 <ReadCompressedUInt8Data+0xd0>
   12fd8:	mov	r9, r3
   12fdc:	mov	r4, r0
   12fe0:	mov	r0, r3
   12fe4:	mov	r6, r2
   12fe8:	bl	1598 <Mat_SizeOf@plt>
   12fec:	sub	r3, r9, #1
   12ff0:	mov	r5, r0
   12ff4:	cmp	r3, #8
   12ff8:	addls	pc, pc, r3, lsl #2
   12ffc:	b	1338c <ReadCompressedUInt8Data+0x3e4>
   13000:	b	13380 <ReadCompressedUInt8Data+0x3d8>
   13004:	b	13348 <ReadCompressedUInt8Data+0x3a0>
   13008:	b	1322c <ReadCompressedUInt8Data+0x284>
   1300c:	b	132a4 <ReadCompressedUInt8Data+0x2fc>
   13010:	b	1313c <ReadCompressedUInt8Data+0x194>
   13014:	b	131b4 <ReadCompressedUInt8Data+0x20c>
   13018:	b	130b4 <ReadCompressedUInt8Data+0x10c>
   1301c:	b	1338c <ReadCompressedUInt8Data+0x3e4>
   13020:	b	13024 <ReadCompressedUInt8Data+0x7c>
   13024:	ldr	r9, [r4, #20]
   13028:	cmp	r9, #0
   1302c:	moveq	sl, sp
   13030:	beq	130a8 <ReadCompressedUInt8Data+0x100>
   13034:	mov	r9, #0
   13038:	mov	sl, sp
   1303c:	b	1306c <ReadCompressedUInt8Data+0xc4>
   13040:	mov	r3, r5
   13044:	mov	r2, sl
   13048:	mov	r1, r7
   1304c:	mov	r0, r4
   13050:	bl	2dac <InflateData>
   13054:	mov	r0, sl
   13058:	bl	196c <Mat_doubleSwap>
   1305c:	vcvt.u32.f64	s15, d0
   13060:	vmov	r3, s15
   13064:	strb	r3, [r6, r9]
   13068:	add	r9, r9, #1
   1306c:	cmp	r8, r9
   13070:	bgt	13040 <ReadCompressedUInt8Data+0x98>
   13074:	mul	r0, r5, r8
   13078:	add	sp, sp, #8
   1307c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13080:	mov	r3, r5
   13084:	mov	r2, sl
   13088:	mov	r1, r7
   1308c:	mov	r0, r4
   13090:	bl	2dac <InflateData>
   13094:	vldr	d7, [sp]
   13098:	vcvt.u32.f64	s15, d7
   1309c:	vmov	r3, s15
   130a0:	strb	r3, [r6, r9]
   130a4:	add	r9, r9, #1
   130a8:	cmp	r8, r9
   130ac:	bgt	13080 <ReadCompressedUInt8Data+0xd8>
   130b0:	b	13074 <ReadCompressedUInt8Data+0xcc>
   130b4:	ldr	r9, [r4, #20]
   130b8:	cmp	r9, #0
   130bc:	moveq	sl, sp
   130c0:	beq	13130 <ReadCompressedUInt8Data+0x188>
   130c4:	mov	r9, #0
   130c8:	mov	sl, sp
   130cc:	b	130fc <ReadCompressedUInt8Data+0x154>
   130d0:	mov	r3, r5
   130d4:	mov	r2, sl
   130d8:	mov	r1, r7
   130dc:	mov	r0, r4
   130e0:	bl	2dac <InflateData>
   130e4:	mov	r0, sl
   130e8:	bl	193c <Mat_floatSwap>
   130ec:	vcvt.u32.f32	s15, s0
   130f0:	vmov	r3, s15
   130f4:	strb	r3, [r6, r9]
   130f8:	add	r9, r9, #1
   130fc:	cmp	r8, r9
   13100:	bgt	130d0 <ReadCompressedUInt8Data+0x128>
   13104:	b	13074 <ReadCompressedUInt8Data+0xcc>
   13108:	mov	r3, r5
   1310c:	mov	r2, sl
   13110:	mov	r1, r7
   13114:	mov	r0, r4
   13118:	bl	2dac <InflateData>
   1311c:	vldr	s15, [sp]
   13120:	vcvt.u32.f32	s15, s15
   13124:	vmov	r3, s15
   13128:	strb	r3, [r6, r9]
   1312c:	add	r9, r9, #1
   13130:	cmp	r8, r9
   13134:	bgt	13108 <ReadCompressedUInt8Data+0x160>
   13138:	b	13074 <ReadCompressedUInt8Data+0xcc>
   1313c:	ldr	r9, [r4, #20]
   13140:	cmp	r9, #0
   13144:	moveq	sl, sp
   13148:	beq	131a8 <ReadCompressedUInt8Data+0x200>
   1314c:	mov	r9, #0
   13150:	mov	sl, sp
   13154:	b	1317c <ReadCompressedUInt8Data+0x1d4>
   13158:	mov	r3, r5
   1315c:	mov	r2, sl
   13160:	mov	r1, r7
   13164:	mov	r0, r4
   13168:	bl	2dac <InflateData>
   1316c:	mov	r0, sl
   13170:	bl	189c <Mat_int32Swap>
   13174:	strb	r0, [r6, r9]
   13178:	add	r9, r9, #1
   1317c:	cmp	r8, r9
   13180:	bgt	13158 <ReadCompressedUInt8Data+0x1b0>
   13184:	b	13074 <ReadCompressedUInt8Data+0xcc>
   13188:	mov	r3, r5
   1318c:	mov	r2, sl
   13190:	mov	r1, r7
   13194:	mov	r0, r4
   13198:	bl	2dac <InflateData>
   1319c:	ldr	r3, [sp]
   131a0:	strb	r3, [r6, r9]
   131a4:	add	r9, r9, #1
   131a8:	cmp	r8, r9
   131ac:	bgt	13188 <ReadCompressedUInt8Data+0x1e0>
   131b0:	b	13074 <ReadCompressedUInt8Data+0xcc>
   131b4:	ldr	r9, [r4, #20]
   131b8:	cmp	r9, #0
   131bc:	moveq	sl, sp
   131c0:	beq	13220 <ReadCompressedUInt8Data+0x278>
   131c4:	mov	r9, #0
   131c8:	mov	sl, sp
   131cc:	b	131f4 <ReadCompressedUInt8Data+0x24c>
   131d0:	mov	r3, r5
   131d4:	mov	r2, sl
   131d8:	mov	r1, r7
   131dc:	mov	r0, r4
   131e0:	bl	2dac <InflateData>
   131e4:	mov	r0, sl
   131e8:	bl	18cc <Mat_uint32Swap>
   131ec:	strb	r0, [r6, r9]
   131f0:	add	r9, r9, #1
   131f4:	cmp	r8, r9
   131f8:	bgt	131d0 <ReadCompressedUInt8Data+0x228>
   131fc:	b	13074 <ReadCompressedUInt8Data+0xcc>
   13200:	mov	r3, r5
   13204:	mov	r2, sl
   13208:	mov	r1, r7
   1320c:	mov	r0, r4
   13210:	bl	2dac <InflateData>
   13214:	ldr	r3, [sp]
   13218:	strb	r3, [r6, r9]
   1321c:	add	r9, r9, #1
   13220:	cmp	r8, r9
   13224:	bgt	13200 <ReadCompressedUInt8Data+0x258>
   13228:	b	13074 <ReadCompressedUInt8Data+0xcc>
   1322c:	ldr	r9, [r4, #20]
   13230:	cmp	r9, #0
   13234:	moveq	sl, sp
   13238:	beq	13298 <ReadCompressedUInt8Data+0x2f0>
   1323c:	mov	r9, #0
   13240:	mov	sl, sp
   13244:	b	1326c <ReadCompressedUInt8Data+0x2c4>
   13248:	mov	r3, r5
   1324c:	mov	r2, sl
   13250:	mov	r1, r7
   13254:	mov	r0, r4
   13258:	bl	2dac <InflateData>
   1325c:	mov	r0, sl
   13260:	bl	18fc <Mat_int16Swap>
   13264:	strb	r0, [r6, r9]
   13268:	add	r9, r9, #1
   1326c:	cmp	r8, r9
   13270:	bgt	13248 <ReadCompressedUInt8Data+0x2a0>
   13274:	b	13074 <ReadCompressedUInt8Data+0xcc>
   13278:	mov	r3, r5
   1327c:	mov	r2, sl
   13280:	mov	r1, r7
   13284:	mov	r0, r4
   13288:	bl	2dac <InflateData>
   1328c:	ldrh	r3, [sp]
   13290:	strb	r3, [r6, r9]
   13294:	add	r9, r9, #1
   13298:	cmp	r8, r9
   1329c:	bgt	13278 <ReadCompressedUInt8Data+0x2d0>
   132a0:	b	13074 <ReadCompressedUInt8Data+0xcc>
   132a4:	ldr	r9, [r4, #20]
   132a8:	cmp	r9, #0
   132ac:	moveq	sl, sp
   132b0:	beq	13310 <ReadCompressedUInt8Data+0x368>
   132b4:	mov	r9, #0
   132b8:	mov	sl, sp
   132bc:	b	132e4 <ReadCompressedUInt8Data+0x33c>
   132c0:	mov	r3, r5
   132c4:	mov	r2, sl
   132c8:	mov	r1, r7
   132cc:	mov	r0, r4
   132d0:	bl	2dac <InflateData>
   132d4:	mov	r0, sl
   132d8:	bl	191c <Mat_uint16Swap>
   132dc:	strb	r0, [r6, r9]
   132e0:	add	r9, r9, #1
   132e4:	cmp	r8, r9
   132e8:	bgt	132c0 <ReadCompressedUInt8Data+0x318>
   132ec:	b	13074 <ReadCompressedUInt8Data+0xcc>
   132f0:	mov	r3, r5
   132f4:	mov	r2, sl
   132f8:	mov	r1, r7
   132fc:	mov	r0, r4
   13300:	bl	2dac <InflateData>
   13304:	ldrh	r3, [sp]
   13308:	strb	r3, [r6, r9]
   1330c:	add	r9, r9, #1
   13310:	cmp	r8, r9
   13314:	bgt	132f0 <ReadCompressedUInt8Data+0x348>
   13318:	b	13074 <ReadCompressedUInt8Data+0xcc>
   1331c:	mov	r3, r5
   13320:	mov	r2, sl
   13324:	mov	r1, r7
   13328:	mov	r0, r4
   1332c:	bl	2dac <InflateData>
   13330:	ldrb	r3, [sp]
   13334:	strb	r3, [r6, r9]
   13338:	add	r9, r9, #1
   1333c:	cmp	r8, r9
   13340:	bgt	1331c <ReadCompressedUInt8Data+0x374>
   13344:	b	13074 <ReadCompressedUInt8Data+0xcc>
   13348:	mov	r9, #0
   1334c:	mov	sl, sp
   13350:	b	1333c <ReadCompressedUInt8Data+0x394>
   13354:	mov	r3, r5
   13358:	mov	r2, sl
   1335c:	mov	r1, r7
   13360:	mov	r0, r4
   13364:	bl	2dac <InflateData>
   13368:	ldrb	r3, [sp]
   1336c:	strb	r3, [r6, r9]
   13370:	add	r9, r9, #1
   13374:	cmp	r8, r9
   13378:	bgt	13354 <ReadCompressedUInt8Data+0x3ac>
   1337c:	b	13074 <ReadCompressedUInt8Data+0xcc>
   13380:	mov	r9, #0
   13384:	mov	sl, sp
   13388:	b	13374 <ReadCompressedUInt8Data+0x3cc>
   1338c:	cmp	r9, #12
   13390:	bne	1340c <ReadCompressedUInt8Data+0x464>
   13394:	ldr	r9, [r4, #20]
   13398:	cmp	r9, #0
   1339c:	moveq	sl, sp
   133a0:	beq	13400 <ReadCompressedUInt8Data+0x458>
   133a4:	mov	r9, #0
   133a8:	mov	sl, sp
   133ac:	b	133d4 <ReadCompressedUInt8Data+0x42c>
   133b0:	mov	r3, r5
   133b4:	mov	r2, sl
   133b8:	mov	r1, r7
   133bc:	mov	r0, r4
   133c0:	bl	2dac <InflateData>
   133c4:	mov	r0, sl
   133c8:	bl	17ec <Mat_int64Swap>
   133cc:	strb	r0, [r6, r9]
   133d0:	add	r9, r9, #1
   133d4:	cmp	r8, r9
   133d8:	bgt	133b0 <ReadCompressedUInt8Data+0x408>
   133dc:	b	13074 <ReadCompressedUInt8Data+0xcc>
   133e0:	mov	r3, r5
   133e4:	mov	r2, sl
   133e8:	mov	r1, r7
   133ec:	mov	r0, r4
   133f0:	bl	2dac <InflateData>
   133f4:	ldr	r3, [sp]
   133f8:	strb	r3, [r6, r9]
   133fc:	add	r9, r9, #1
   13400:	cmp	r8, r9
   13404:	bgt	133e0 <ReadCompressedUInt8Data+0x438>
   13408:	b	13074 <ReadCompressedUInt8Data+0xcc>
   1340c:	cmp	r9, #13
   13410:	bne	13074 <ReadCompressedUInt8Data+0xcc>
   13414:	ldr	r9, [r4, #20]
   13418:	cmp	r9, #0
   1341c:	moveq	sl, sp
   13420:	beq	13480 <ReadCompressedUInt8Data+0x4d8>
   13424:	mov	r9, #0
   13428:	mov	sl, sp
   1342c:	b	13454 <ReadCompressedUInt8Data+0x4ac>
   13430:	mov	r3, r5
   13434:	mov	r2, sl
   13438:	mov	r1, r7
   1343c:	mov	r0, r4
   13440:	bl	2dac <InflateData>
   13444:	mov	r0, sl
   13448:	bl	1844 <Mat_uint64Swap>
   1344c:	strb	r0, [r6, r9]
   13450:	add	r9, r9, #1
   13454:	cmp	r8, r9
   13458:	bgt	13430 <ReadCompressedUInt8Data+0x488>
   1345c:	b	13074 <ReadCompressedUInt8Data+0xcc>
   13460:	mov	r3, r5
   13464:	mov	r2, sl
   13468:	mov	r1, r7
   1346c:	mov	r0, r4
   13470:	bl	2dac <InflateData>
   13474:	ldr	r3, [sp]
   13478:	strb	r3, [r6, r9]
   1347c:	add	r9, r9, #1
   13480:	cmp	r8, r9
   13484:	bgt	13460 <ReadCompressedUInt8Data+0x4b8>
   13488:	b	13074 <ReadCompressedUInt8Data+0xcc>

0001348c <ReadCompressedCharData>:
   1348c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13490:	cmp	r2, #0
   13494:	cmpne	r0, #0
   13498:	ldr	r8, [sp, #32]
   1349c:	beq	1355c <ReadCompressedCharData+0xd0>
   134a0:	ldr	r4, [r0]
   134a4:	cmp	r4, #0
   134a8:	beq	1353c <ReadCompressedCharData+0xb0>
   134ac:	mov	r5, r3
   134b0:	mov	r6, r0
   134b4:	mov	r0, r3
   134b8:	mov	r7, r2
   134bc:	mov	r9, r1
   134c0:	bl	1598 <Mat_SizeOf@plt>
   134c4:	cmp	r5, #4
   134c8:	mul	r4, r8, r0
   134cc:	beq	13500 <ReadCompressedCharData+0x74>
   134d0:	bhi	134f0 <ReadCompressedCharData+0x64>
   134d4:	cmp	r5, #2
   134d8:	beq	13528 <ReadCompressedCharData+0x9c>
   134dc:	ldr	r0, [pc, #128]	; 13564 <ReadCompressedCharData+0xd8>
   134e0:	mov	r1, r5
   134e4:	add	r0, pc, r0
   134e8:	bl	1484 <Mat_Warning@plt>
   134ec:	b	1353c <ReadCompressedCharData+0xb0>
   134f0:	cmp	r5, #16
   134f4:	beq	13528 <ReadCompressedCharData+0x9c>
   134f8:	cmp	r5, #17
   134fc:	bne	134dc <ReadCompressedCharData+0x50>
   13500:	mov	r3, r4
   13504:	mov	r2, r7
   13508:	mov	r1, r9
   1350c:	mov	r0, r6
   13510:	bl	2dac <InflateData>
   13514:	ldr	r3, [r6, #20]
   13518:	cmp	r3, #0
   1351c:	beq	1353c <ReadCompressedCharData+0xb0>
   13520:	mov	r5, #0
   13524:	b	13550 <ReadCompressedCharData+0xc4>
   13528:	mov	r3, r4
   1352c:	mov	r2, r7
   13530:	mov	r1, r9
   13534:	mov	r0, r6
   13538:	bl	2dac <InflateData>
   1353c:	mov	r0, r4
   13540:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13544:	add	r0, r7, r5, lsl #1
   13548:	add	r5, r5, #1
   1354c:	bl	191c <Mat_uint16Swap>
   13550:	cmp	r5, r8
   13554:	blt	13544 <ReadCompressedCharData+0xb8>
   13558:	b	1353c <ReadCompressedCharData+0xb0>
   1355c:	mov	r0, #0
   13560:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13564:	.word	0x0002b675

00013568 <ReadCharData>:
   13568:	cmp	r1, #0
   1356c:	cmpne	r0, #0
   13570:	push	{r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
   13574:	beq	135c4 <ReadCharData+0x5c>
   13578:	ldr	r4, [r0]
   1357c:	cmp	r4, #0
   13580:	beq	13618 <ReadCharData+0xb0>
   13584:	mov	r4, r2
   13588:	mov	r6, r0
   1358c:	mov	r0, r2
   13590:	mov	r7, r1
   13594:	mov	r8, r3
   13598:	bl	1598 <Mat_SizeOf@plt>
   1359c:	cmp	r4, #4
   135a0:	mov	r9, r0
   135a4:	beq	135dc <ReadCharData+0x74>
   135a8:	bhi	135cc <ReadCharData+0x64>
   135ac:	cmp	r4, #2
   135b0:	beq	13600 <ReadCharData+0x98>
   135b4:	ldr	r0, [pc, #204]	; 13688 <ReadCharData+0x120>
   135b8:	mov	r1, r4
   135bc:	add	r0, pc, r0
   135c0:	bl	1484 <Mat_Warning@plt>
   135c4:	mov	r4, #0
   135c8:	b	13618 <ReadCharData+0xb0>
   135cc:	cmp	r4, #16
   135d0:	beq	13600 <ReadCharData+0x98>
   135d4:	cmp	r4, #17
   135d8:	bne	135b4 <ReadCharData+0x4c>
   135dc:	ldr	r4, [r6, #20]
   135e0:	cmp	r4, #0
   135e4:	moveq	r5, r4
   135e8:	addeq	sl, sp, #6
   135ec:	beq	1367c <ReadCharData+0x114>
   135f0:	mov	r5, #0
   135f4:	add	sl, sp, #6
   135f8:	mov	r4, r5
   135fc:	b	1364c <ReadCharData+0xe4>
   13600:	mov	r2, r8
   13604:	mov	r1, r9
   13608:	ldr	r3, [r6]
   1360c:	mov	r0, r7
   13610:	bl	1520 <fread@plt>
   13614:	mov	r4, r0
   13618:	mov	r0, r4
   1361c:	add	sp, sp, #8
   13620:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13624:	mov	r2, #1
   13628:	mov	r1, r9
   1362c:	ldr	r3, [r6]
   13630:	mov	r0, sl
   13634:	bl	1520 <fread@plt>
   13638:	add	r4, r4, r0
   1363c:	mov	r0, sl
   13640:	bl	191c <Mat_uint16Swap>
   13644:	strb	r0, [r7, r5]
   13648:	add	r5, r5, #1
   1364c:	cmp	r5, r8
   13650:	blt	13624 <ReadCharData+0xbc>
   13654:	b	13618 <ReadCharData+0xb0>
   13658:	mov	r2, #1
   1365c:	mov	r1, r9
   13660:	ldr	r3, [r6]
   13664:	mov	r0, sl
   13668:	bl	1520 <fread@plt>
   1366c:	ldrh	r3, [sp, #6]
   13670:	add	r4, r4, r0
   13674:	strb	r3, [r7, r5]
   13678:	add	r5, r5, #1
   1367c:	cmp	r5, r8
   13680:	blt	13658 <ReadCharData+0xf0>
   13684:	b	13618 <ReadCharData+0xb0>
   13688:	.word	0x0002b5e8

0001368c <ReadDataSlabN>:
   1368c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13690:	sub	sp, sp, #156	; 0x9c
   13694:	mov	fp, r0
   13698:	mov	r7, r2
   1369c:	add	r0, sp, #32
   136a0:	mov	r2, #40	; 0x28
   136a4:	stmib	sp, {r1, r3}
   136a8:	mov	r1, #0
   136ac:	ldr	r4, [sp, #200]	; 0xc8
   136b0:	ldr	r6, [sp, #204]	; 0xcc
   136b4:	ldr	r5, [sp, #208]	; 0xd0
   136b8:	bl	15f8 <memset@plt>
   136bc:	mov	r2, #40	; 0x28
   136c0:	mov	r1, #0
   136c4:	add	r0, sp, #72	; 0x48
   136c8:	bl	15f8 <memset@plt>
   136cc:	mov	r2, #40	; 0x28
   136d0:	mov	r1, #0
   136d4:	add	r0, sp, #112	; 0x70
   136d8:	bl	15f8 <memset@plt>
   136dc:	ldr	r3, [sp, #4]
   136e0:	cmp	r3, #0
   136e4:	cmpne	fp, #0
   136e8:	beq	16238 <ReadDataSlabN+0x2bac>
   136ec:	ldr	r3, [fp]
   136f0:	cmp	r3, #0
   136f4:	beq	16238 <ReadDataSlabN+0x2bac>
   136f8:	ldr	r2, [sp, #192]	; 0xc0
   136fc:	cmp	r4, #0
   13700:	clz	r3, r6
   13704:	lsr	r3, r3, #5
   13708:	moveq	r3, #1
   1370c:	cmp	r5, #0
   13710:	moveq	r3, #1
   13714:	cmp	r2, #10
   13718:	orrgt	r3, r3, #1
   1371c:	cmp	r3, #0
   13720:	bne	16238 <ReadDataSlabN+0x2bac>
   13724:	ldr	r0, [sp, #8]
   13728:	sub	r7, r7, #6
   1372c:	bl	1598 <Mat_SizeOf@plt>
   13730:	str	r0, [sp]
   13734:	cmp	r7, #9
   13738:	addls	pc, pc, r7, lsl #2
   1373c:	b	13b04 <ReadDataSlabN+0x478>
   13740:	b	13768 <ReadDataSlabN+0xdc>
   13744:	b	13bb8 <ReadDataSlabN+0x52c>
   13748:	b	159b0 <ReadDataSlabN+0x2324>
   1374c:	b	15df4 <ReadDataSlabN+0x2768>
   13750:	b	15120 <ReadDataSlabN+0x1a94>
   13754:	b	15568 <ReadDataSlabN+0x1edc>
   13758:	b	14890 <ReadDataSlabN+0x1204>
   1375c:	b	14cd8 <ReadDataSlabN+0x164c>
   13760:	b	14000 <ReadDataSlabN+0x974>
   13764:	b	14448 <ReadDataSlabN+0xdbc>
   13768:	ldr	r3, [r6]
   1376c:	add	r1, sp, #32
   13770:	mov	r7, #0
   13774:	ldr	ip, [sp, #196]	; 0xc4
   13778:	sub	r3, r3, #1
   1377c:	str	r3, [sp, #32]
   13780:	ldr	r3, [sp, #196]	; 0xc4
   13784:	ldr	r3, [r3]
   13788:	str	r3, [sp, #112]	; 0x70
   1378c:	ldr	r3, [r5]
   13790:	str	r3, [sp, #20]
   13794:	add	r3, sp, #112	; 0x70
   13798:	mov	r2, r3
   1379c:	str	r3, [sp, #24]
   137a0:	mov	r3, #1
   137a4:	ldr	r0, [sp, #192]	; 0xc0
   137a8:	cmp	r3, r0
   137ac:	blt	13908 <ReadDataSlabN+0x27c>
   137b0:	ldr	r3, [sp]
   137b4:	mov	r2, #1
   137b8:	ldr	r0, [fp]
   137bc:	mul	r1, r3, r7
   137c0:	bl	1694 <fseek@plt>
   137c4:	ldr	r3, [r6]
   137c8:	cmp	r3, #1
   137cc:	mov	r3, #0
   137d0:	beq	13af0 <ReadDataSlabN+0x464>
   137d4:	str	r3, [sp, #16]
   137d8:	ldr	r3, [sp, #16]
   137dc:	ldr	r2, [sp, #20]
   137e0:	cmp	r3, r2
   137e4:	bge	13b04 <ReadDataSlabN+0x478>
   137e8:	ldr	r1, [r4]
   137ec:	cmp	r1, #0
   137f0:	beq	13810 <ReadDataSlabN+0x184>
   137f4:	ldr	r3, [sp]
   137f8:	mov	r2, #1
   137fc:	ldr	r0, [fp]
   13800:	mul	r1, r3, r1
   13804:	bl	1694 <fseek@plt>
   13808:	ldr	r3, [r4]
   1380c:	add	r7, r7, r3
   13810:	ldr	r3, [sp, #4]
   13814:	mov	r8, #0
   13818:	ldr	r2, [sp, #16]
   1381c:	add	r9, r3, r2, lsl #3
   13820:	ldr	r1, [r5]
   13824:	cmp	r1, r8
   13828:	bgt	13b0c <ReadDataSlabN+0x480>
   1382c:	ldr	r3, [sp, #196]	; 0xc4
   13830:	add	sl, sp, #72	; 0x48
   13834:	mov	r8, #1
   13838:	ldr	r2, [r4]
   1383c:	ldr	r0, [fp]
   13840:	ldr	r3, [r3]
   13844:	sub	r3, r3, r2
   13848:	ldr	r2, [r6]
   1384c:	mls	r1, r2, r1, r3
   13850:	ldr	r3, [sp]
   13854:	mov	r2, #1
   13858:	add	r7, r7, r1
   1385c:	mul	r1, r3, r1
   13860:	bl	1694 <fseek@plt>
   13864:	ldr	r3, [sp, #24]
   13868:	str	r3, [sp, #12]
   1386c:	ldr	r3, [sp, #192]	; 0xc0
   13870:	cmp	r8, r3
   13874:	bge	13ba8 <ReadDataSlabN+0x51c>
   13878:	ldr	r3, [sl, #4]
   1387c:	ldr	r1, [r5, r8, lsl #2]
   13880:	add	r3, r3, #1
   13884:	sdiv	r2, r3, r1
   13888:	str	r3, [sl, #4]
   1388c:	mls	r3, r1, r2, r3
   13890:	cmp	r3, #0
   13894:	bne	13b84 <ReadDataSlabN+0x4f8>
   13898:	str	r3, [sl, #4]
   1389c:	ldr	r3, [sp, #12]
   138a0:	ldr	r1, [r4, r8, lsl #2]
   138a4:	ldr	r9, [r3, #4]
   138a8:	sdiv	r3, r7, r9
   138ac:	mls	r3, r9, r3, r7
   138b0:	cmp	r3, #0
   138b4:	beq	13b50 <ReadDataSlabN+0x4c4>
   138b8:	sub	r9, r9, r3
   138bc:	ldr	r3, [sp, #12]
   138c0:	mov	r2, #1
   138c4:	ldr	r0, [fp]
   138c8:	ldr	r3, [r3]
   138cc:	mla	r1, r1, r3, r9
   138d0:	str	r3, [sp, #28]
   138d4:	ldr	r3, [sp]
   138d8:	mul	r1, r3, r1
   138dc:	bl	1694 <fseek@plt>
   138e0:	ldr	r2, [r4, r8, lsl #2]
   138e4:	ldr	r3, [sp, #28]
   138e8:	mla	r9, r2, r3, r9
   138ec:	add	r7, r7, r9
   138f0:	ldr	r3, [sp, #12]
   138f4:	add	r8, r8, #1
   138f8:	add	sl, sl, #4
   138fc:	add	r3, r3, #4
   13900:	str	r3, [sp, #12]
   13904:	b	1386c <ReadDataSlabN+0x1e0>
   13908:	ldr	r0, [r6, r3, lsl #2]
   1390c:	mov	r8, r2
   13910:	sub	r0, r0, #1
   13914:	str	r0, [r1, #4]
   13918:	ldr	r0, [ip], #4
   1391c:	str	r0, [r2, #4]
   13920:	mov	r0, ip
   13924:	ldr	lr, [sp, #196]	; 0xc4
   13928:	cmp	lr, r0
   1392c:	bne	1395c <ReadDataSlabN+0x2d0>
   13930:	ldr	r0, [r5, r3, lsl #2]
   13934:	add	r2, r2, #4
   13938:	add	r1, r1, #4
   1393c:	ldr	lr, [sp, #20]
   13940:	mul	r0, r0, lr
   13944:	ldr	lr, [r4, r3, lsl #2]
   13948:	add	r3, r3, #1
   1394c:	str	r0, [sp, #20]
   13950:	ldr	r0, [r8]
   13954:	mla	r7, lr, r0, r7
   13958:	b	137a4 <ReadDataSlabN+0x118>
   1395c:	mov	r9, r0
   13960:	ldr	lr, [r0, #-4]!
   13964:	ldr	sl, [r1, #4]
   13968:	mul	lr, lr, sl
   1396c:	ldr	sl, [r2, #4]
   13970:	str	lr, [r1, #4]
   13974:	ldr	lr, [r9]
   13978:	mul	lr, lr, sl
   1397c:	str	lr, [r2, #4]
   13980:	b	13924 <ReadDataSlabN+0x298>
   13984:	ldr	r1, [r4]
   13988:	cmp	r1, #0
   1398c:	beq	139ac <ReadDataSlabN+0x320>
   13990:	ldr	r3, [sp]
   13994:	mov	r2, #1
   13998:	ldr	r0, [fp]
   1399c:	mul	r1, r3, r1
   139a0:	bl	1694 <fseek@plt>
   139a4:	ldr	r3, [r4]
   139a8:	add	r7, r7, r3
   139ac:	ldmib	sp, {r1, r2}
   139b0:	add	r9, sp, #72	; 0x48
   139b4:	mov	r6, #1
   139b8:	ldr	r0, [sp, #12]
   139bc:	ldr	r3, [r5]
   139c0:	add	r1, r1, r0, lsl #3
   139c4:	mov	r0, fp
   139c8:	bl	f568 <ReadDoubleData>
   139cc:	ldr	r3, [sp, #196]	; 0xc4
   139d0:	ldr	r1, [r4]
   139d4:	ldr	r0, [fp]
   139d8:	ldr	r3, [r3]
   139dc:	sub	r2, r3, r1
   139e0:	add	r7, r2, r7
   139e4:	ldr	r2, [r5]
   139e8:	sub	r3, r3, r2
   139ec:	mov	r2, #1
   139f0:	sub	r1, r3, r1
   139f4:	ldr	r3, [sp]
   139f8:	mul	r1, r3, r1
   139fc:	bl	1694 <fseek@plt>
   13a00:	ldr	sl, [sp, #24]
   13a04:	ldr	r3, [sp, #192]	; 0xc0
   13a08:	cmp	r6, r3
   13a0c:	bge	13ae4 <ReadDataSlabN+0x458>
   13a10:	ldr	r3, [r9, #4]
   13a14:	ldr	r1, [r5, r6, lsl #2]
   13a18:	add	r3, r3, #1
   13a1c:	sdiv	r2, r3, r1
   13a20:	str	r3, [r9, #4]
   13a24:	mls	r3, r1, r2, r3
   13a28:	cmp	r3, #0
   13a2c:	bne	13ac0 <ReadDataSlabN+0x434>
   13a30:	ldr	r8, [sl, #4]
   13a34:	str	r3, [r9, #4]
   13a38:	ldr	r1, [r4, r6, lsl #2]
   13a3c:	sdiv	r3, r7, r8
   13a40:	mls	r3, r8, r3, r7
   13a44:	cmp	r3, #0
   13a48:	beq	13a90 <ReadDataSlabN+0x404>
   13a4c:	sub	r8, r8, r3
   13a50:	ldr	r3, [sl]
   13a54:	mov	r2, #1
   13a58:	ldr	r0, [fp]
   13a5c:	mla	r1, r1, r3, r8
   13a60:	str	r3, [sp, #16]
   13a64:	ldr	r3, [sp]
   13a68:	mul	r1, r3, r1
   13a6c:	bl	1694 <fseek@plt>
   13a70:	ldr	r2, [r4, r6, lsl #2]
   13a74:	ldr	r3, [sp, #16]
   13a78:	mla	r8, r2, r3, r8
   13a7c:	add	r7, r7, r8
   13a80:	add	r6, r6, #1
   13a84:	add	sl, sl, #4
   13a88:	add	r9, r9, #4
   13a8c:	b	13a04 <ReadDataSlabN+0x378>
   13a90:	cmp	r1, #0
   13a94:	beq	13a80 <ReadDataSlabN+0x3f4>
   13a98:	ldr	r8, [sl]
   13a9c:	mov	r2, #1
   13aa0:	ldr	r3, [sp]
   13aa4:	ldr	r0, [fp]
   13aa8:	mul	r1, r1, r8
   13aac:	mul	r1, r3, r1
   13ab0:	bl	1694 <fseek@plt>
   13ab4:	ldr	r3, [r4, r6, lsl #2]
   13ab8:	mla	r7, r3, r8, r7
   13abc:	b	13a80 <ReadDataSlabN+0x3f4>
   13ac0:	add	r3, sp, #152	; 0x98
   13ac4:	mov	r2, #1
   13ac8:	ldr	r0, [fp]
   13acc:	add	r6, r3, r6, lsl #2
   13ad0:	ldr	r3, [sp]
   13ad4:	ldr	r1, [r6, #-120]	; 0xffffff88
   13ad8:	add	r7, r7, r1
   13adc:	mul	r1, r3, r1
   13ae0:	bl	1694 <fseek@plt>
   13ae4:	ldr	r3, [r5]
   13ae8:	ldr	r2, [sp, #12]
   13aec:	add	r3, r2, r3
   13af0:	str	r3, [sp, #12]
   13af4:	ldr	r3, [sp, #12]
   13af8:	ldr	r2, [sp, #20]
   13afc:	cmp	r3, r2
   13b00:	blt	13984 <ReadDataSlabN+0x2f8>
   13b04:	mov	r0, #0
   13b08:	b	1623c <ReadDataSlabN+0x2bb0>
   13b0c:	mov	r1, r9
   13b10:	mov	r3, #1
   13b14:	ldr	r2, [sp, #8]
   13b18:	mov	r0, fp
   13b1c:	add	r8, r8, #1
   13b20:	bl	f568 <ReadDoubleData>
   13b24:	ldr	r1, [r6]
   13b28:	mov	r2, #1
   13b2c:	add	r9, r9, #8
   13b30:	ldr	r3, [sp]
   13b34:	ldr	r0, [fp]
   13b38:	sub	r1, r1, #1
   13b3c:	mul	r1, r3, r1
   13b40:	bl	1694 <fseek@plt>
   13b44:	ldr	r3, [r6]
   13b48:	add	r7, r7, r3
   13b4c:	b	13820 <ReadDataSlabN+0x194>
   13b50:	cmp	r1, #0
   13b54:	beq	138f0 <ReadDataSlabN+0x264>
   13b58:	ldr	r3, [sp, #12]
   13b5c:	mov	r2, #1
   13b60:	ldr	r0, [fp]
   13b64:	ldr	r9, [r3]
   13b68:	ldr	r3, [sp]
   13b6c:	mul	r1, r1, r9
   13b70:	mul	r1, r3, r1
   13b74:	bl	1694 <fseek@plt>
   13b78:	ldr	r3, [r4, r8, lsl #2]
   13b7c:	mla	r7, r3, r9, r7
   13b80:	b	138f0 <ReadDataSlabN+0x264>
   13b84:	add	r3, sp, #152	; 0x98
   13b88:	mov	r2, #1
   13b8c:	ldr	r0, [fp]
   13b90:	add	r8, r3, r8, lsl #2
   13b94:	ldr	r3, [sp]
   13b98:	ldr	r1, [r8, #-120]	; 0xffffff88
   13b9c:	add	r7, r7, r1
   13ba0:	mul	r1, r3, r1
   13ba4:	bl	1694 <fseek@plt>
   13ba8:	ldr	r3, [r5]
   13bac:	ldr	r2, [sp, #16]
   13bb0:	add	r3, r2, r3
   13bb4:	b	137d4 <ReadDataSlabN+0x148>
   13bb8:	ldr	r3, [r6]
   13bbc:	add	r1, sp, #32
   13bc0:	mov	r7, #0
   13bc4:	ldr	ip, [sp, #196]	; 0xc4
   13bc8:	sub	r3, r3, #1
   13bcc:	str	r3, [sp, #32]
   13bd0:	ldr	r3, [sp, #196]	; 0xc4
   13bd4:	ldr	r3, [r3]
   13bd8:	str	r3, [sp, #112]	; 0x70
   13bdc:	ldr	r3, [r5]
   13be0:	str	r3, [sp, #20]
   13be4:	add	r3, sp, #112	; 0x70
   13be8:	mov	r2, r3
   13bec:	str	r3, [sp, #24]
   13bf0:	mov	r3, #1
   13bf4:	ldr	r0, [sp, #192]	; 0xc0
   13bf8:	cmp	r3, r0
   13bfc:	blt	13d58 <ReadDataSlabN+0x6cc>
   13c00:	ldr	r3, [sp]
   13c04:	mov	r2, #1
   13c08:	ldr	r0, [fp]
   13c0c:	mul	r1, r3, r7
   13c10:	bl	1694 <fseek@plt>
   13c14:	ldr	r3, [r6]
   13c18:	cmp	r3, #1
   13c1c:	mov	r3, #0
   13c20:	beq	13e34 <ReadDataSlabN+0x7a8>
   13c24:	str	r3, [sp, #16]
   13c28:	ldr	r3, [sp, #16]
   13c2c:	ldr	r2, [sp, #20]
   13c30:	cmp	r3, r2
   13c34:	bge	13b04 <ReadDataSlabN+0x478>
   13c38:	ldr	r1, [r4]
   13c3c:	cmp	r1, #0
   13c40:	beq	13c60 <ReadDataSlabN+0x5d4>
   13c44:	ldr	r3, [sp]
   13c48:	mov	r2, #1
   13c4c:	ldr	r0, [fp]
   13c50:	mul	r1, r3, r1
   13c54:	bl	1694 <fseek@plt>
   13c58:	ldr	r3, [r4]
   13c5c:	add	r7, r7, r3
   13c60:	ldr	r3, [sp, #4]
   13c64:	mov	r8, #0
   13c68:	ldr	r2, [sp, #16]
   13c6c:	add	r9, r3, r2, lsl #2
   13c70:	ldr	r1, [r5]
   13c74:	cmp	r1, r8
   13c78:	bgt	13f54 <ReadDataSlabN+0x8c8>
   13c7c:	ldr	r3, [sp, #196]	; 0xc4
   13c80:	add	sl, sp, #72	; 0x48
   13c84:	mov	r8, #1
   13c88:	ldr	r2, [r4]
   13c8c:	ldr	r0, [fp]
   13c90:	ldr	r3, [r3]
   13c94:	sub	r3, r3, r2
   13c98:	ldr	r2, [r6]
   13c9c:	mls	r1, r2, r1, r3
   13ca0:	ldr	r3, [sp]
   13ca4:	mov	r2, #1
   13ca8:	add	r7, r7, r1
   13cac:	mul	r1, r3, r1
   13cb0:	bl	1694 <fseek@plt>
   13cb4:	ldr	r3, [sp, #24]
   13cb8:	str	r3, [sp, #12]
   13cbc:	ldr	r3, [sp, #192]	; 0xc0
   13cc0:	cmp	r8, r3
   13cc4:	bge	13ff0 <ReadDataSlabN+0x964>
   13cc8:	ldr	r3, [sl, #4]
   13ccc:	ldr	r1, [r5, r8, lsl #2]
   13cd0:	add	r3, r3, #1
   13cd4:	sdiv	r2, r3, r1
   13cd8:	str	r3, [sl, #4]
   13cdc:	mls	r3, r1, r2, r3
   13ce0:	cmp	r3, #0
   13ce4:	bne	13fcc <ReadDataSlabN+0x940>
   13ce8:	str	r3, [sl, #4]
   13cec:	ldr	r3, [sp, #12]
   13cf0:	ldr	r1, [r4, r8, lsl #2]
   13cf4:	ldr	r9, [r3, #4]
   13cf8:	sdiv	r3, r7, r9
   13cfc:	mls	r3, r9, r3, r7
   13d00:	cmp	r3, #0
   13d04:	beq	13f98 <ReadDataSlabN+0x90c>
   13d08:	sub	r9, r9, r3
   13d0c:	ldr	r3, [sp, #12]
   13d10:	mov	r2, #1
   13d14:	ldr	r0, [fp]
   13d18:	ldr	r3, [r3]
   13d1c:	mla	r1, r1, r3, r9
   13d20:	str	r3, [sp, #28]
   13d24:	ldr	r3, [sp]
   13d28:	mul	r1, r3, r1
   13d2c:	bl	1694 <fseek@plt>
   13d30:	ldr	r2, [r4, r8, lsl #2]
   13d34:	ldr	r3, [sp, #28]
   13d38:	mla	r9, r2, r3, r9
   13d3c:	add	r7, r7, r9
   13d40:	ldr	r3, [sp, #12]
   13d44:	add	r8, r8, #1
   13d48:	add	sl, sl, #4
   13d4c:	add	r3, r3, #4
   13d50:	str	r3, [sp, #12]
   13d54:	b	13cbc <ReadDataSlabN+0x630>
   13d58:	ldr	r0, [r6, r3, lsl #2]
   13d5c:	mov	r8, r2
   13d60:	sub	r0, r0, #1
   13d64:	str	r0, [r1, #4]
   13d68:	ldr	r0, [ip], #4
   13d6c:	str	r0, [r2, #4]
   13d70:	mov	r0, ip
   13d74:	ldr	lr, [sp, #196]	; 0xc4
   13d78:	cmp	lr, r0
   13d7c:	bne	13dac <ReadDataSlabN+0x720>
   13d80:	ldr	r0, [r5, r3, lsl #2]
   13d84:	add	r2, r2, #4
   13d88:	add	r1, r1, #4
   13d8c:	ldr	lr, [sp, #20]
   13d90:	mul	r0, r0, lr
   13d94:	ldr	lr, [r4, r3, lsl #2]
   13d98:	add	r3, r3, #1
   13d9c:	str	r0, [sp, #20]
   13da0:	ldr	r0, [r8]
   13da4:	mla	r7, lr, r0, r7
   13da8:	b	13bf4 <ReadDataSlabN+0x568>
   13dac:	mov	r9, r0
   13db0:	ldr	lr, [r0, #-4]!
   13db4:	ldr	sl, [r1, #4]
   13db8:	mul	lr, lr, sl
   13dbc:	ldr	sl, [r2, #4]
   13dc0:	str	lr, [r1, #4]
   13dc4:	ldr	lr, [r9]
   13dc8:	mul	lr, lr, sl
   13dcc:	str	lr, [r2, #4]
   13dd0:	b	13d74 <ReadDataSlabN+0x6e8>
   13dd4:	cmp	r1, #0
   13dd8:	beq	13f44 <ReadDataSlabN+0x8b8>
   13ddc:	ldr	r8, [sl]
   13de0:	mov	r2, #1
   13de4:	ldr	r3, [sp]
   13de8:	ldr	r0, [fp]
   13dec:	mul	r1, r1, r8
   13df0:	mul	r1, r3, r1
   13df4:	bl	1694 <fseek@plt>
   13df8:	ldr	r3, [r4, r6, lsl #2]
   13dfc:	mla	r7, r3, r8, r7
   13e00:	b	13f44 <ReadDataSlabN+0x8b8>
   13e04:	add	r3, sp, #152	; 0x98
   13e08:	mov	r2, #1
   13e0c:	ldr	r0, [fp]
   13e10:	add	r6, r3, r6, lsl #2
   13e14:	ldr	r3, [sp]
   13e18:	ldr	r1, [r6, #-120]	; 0xffffff88
   13e1c:	add	r7, r7, r1
   13e20:	mul	r1, r3, r1
   13e24:	bl	1694 <fseek@plt>
   13e28:	ldr	r3, [r5]
   13e2c:	ldr	r2, [sp, #12]
   13e30:	add	r3, r2, r3
   13e34:	str	r3, [sp, #12]
   13e38:	ldr	r3, [sp, #12]
   13e3c:	ldr	r2, [sp, #20]
   13e40:	cmp	r3, r2
   13e44:	bge	13b04 <ReadDataSlabN+0x478>
   13e48:	ldr	r1, [r4]
   13e4c:	cmp	r1, #0
   13e50:	beq	13e70 <ReadDataSlabN+0x7e4>
   13e54:	ldr	r3, [sp]
   13e58:	mov	r2, #1
   13e5c:	ldr	r0, [fp]
   13e60:	mul	r1, r3, r1
   13e64:	bl	1694 <fseek@plt>
   13e68:	ldr	r3, [r4]
   13e6c:	add	r7, r7, r3
   13e70:	ldmib	sp, {r1, r2}
   13e74:	add	r9, sp, #72	; 0x48
   13e78:	mov	r6, #1
   13e7c:	ldr	r0, [sp, #12]
   13e80:	ldr	r3, [r5]
   13e84:	add	r1, r1, r0, lsl #2
   13e88:	mov	r0, fp
   13e8c:	bl	106cc <ReadSingleData>
   13e90:	ldr	r3, [sp, #196]	; 0xc4
   13e94:	ldr	r1, [r4]
   13e98:	ldr	r0, [fp]
   13e9c:	ldr	r3, [r3]
   13ea0:	sub	r2, r3, r1
   13ea4:	add	r7, r2, r7
   13ea8:	ldr	r2, [r5]
   13eac:	sub	r3, r3, r2
   13eb0:	mov	r2, #1
   13eb4:	sub	r1, r3, r1
   13eb8:	ldr	r3, [sp]
   13ebc:	mul	r1, r3, r1
   13ec0:	bl	1694 <fseek@plt>
   13ec4:	ldr	sl, [sp, #24]
   13ec8:	ldr	r3, [sp, #192]	; 0xc0
   13ecc:	cmp	r6, r3
   13ed0:	bge	13e28 <ReadDataSlabN+0x79c>
   13ed4:	ldr	r3, [r9, #4]
   13ed8:	ldr	r1, [r5, r6, lsl #2]
   13edc:	add	r3, r3, #1
   13ee0:	sdiv	r2, r3, r1
   13ee4:	str	r3, [r9, #4]
   13ee8:	mls	r3, r1, r2, r3
   13eec:	cmp	r3, #0
   13ef0:	bne	13e04 <ReadDataSlabN+0x778>
   13ef4:	ldr	r8, [sl, #4]
   13ef8:	str	r3, [r9, #4]
   13efc:	ldr	r1, [r4, r6, lsl #2]
   13f00:	sdiv	r3, r7, r8
   13f04:	mls	r3, r8, r3, r7
   13f08:	cmp	r3, #0
   13f0c:	beq	13dd4 <ReadDataSlabN+0x748>
   13f10:	sub	r8, r8, r3
   13f14:	ldr	r3, [sl]
   13f18:	mov	r2, #1
   13f1c:	ldr	r0, [fp]
   13f20:	mla	r1, r1, r3, r8
   13f24:	str	r3, [sp, #16]
   13f28:	ldr	r3, [sp]
   13f2c:	mul	r1, r3, r1
   13f30:	bl	1694 <fseek@plt>
   13f34:	ldr	r2, [r4, r6, lsl #2]
   13f38:	ldr	r3, [sp, #16]
   13f3c:	mla	r8, r2, r3, r8
   13f40:	add	r7, r7, r8
   13f44:	add	r6, r6, #1
   13f48:	add	sl, sl, #4
   13f4c:	add	r9, r9, #4
   13f50:	b	13ec8 <ReadDataSlabN+0x83c>
   13f54:	mov	r1, r9
   13f58:	mov	r3, #1
   13f5c:	ldr	r2, [sp, #8]
   13f60:	mov	r0, fp
   13f64:	add	r8, r8, #1
   13f68:	bl	106cc <ReadSingleData>
   13f6c:	ldr	r1, [r6]
   13f70:	mov	r2, #1
   13f74:	add	r9, r9, #4
   13f78:	ldr	r3, [sp]
   13f7c:	ldr	r0, [fp]
   13f80:	sub	r1, r1, #1
   13f84:	mul	r1, r3, r1
   13f88:	bl	1694 <fseek@plt>
   13f8c:	ldr	r3, [r6]
   13f90:	add	r7, r7, r3
   13f94:	b	13c70 <ReadDataSlabN+0x5e4>
   13f98:	cmp	r1, #0
   13f9c:	beq	13d40 <ReadDataSlabN+0x6b4>
   13fa0:	ldr	r3, [sp, #12]
   13fa4:	mov	r2, #1
   13fa8:	ldr	r0, [fp]
   13fac:	ldr	r9, [r3]
   13fb0:	ldr	r3, [sp]
   13fb4:	mul	r1, r1, r9
   13fb8:	mul	r1, r3, r1
   13fbc:	bl	1694 <fseek@plt>
   13fc0:	ldr	r3, [r4, r8, lsl #2]
   13fc4:	mla	r7, r3, r9, r7
   13fc8:	b	13d40 <ReadDataSlabN+0x6b4>
   13fcc:	add	r3, sp, #152	; 0x98
   13fd0:	mov	r2, #1
   13fd4:	ldr	r0, [fp]
   13fd8:	add	r8, r3, r8, lsl #2
   13fdc:	ldr	r3, [sp]
   13fe0:	ldr	r1, [r8, #-120]	; 0xffffff88
   13fe4:	add	r7, r7, r1
   13fe8:	mul	r1, r3, r1
   13fec:	bl	1694 <fseek@plt>
   13ff0:	ldr	r3, [r5]
   13ff4:	ldr	r2, [sp, #16]
   13ff8:	add	r3, r2, r3
   13ffc:	b	13c24 <ReadDataSlabN+0x598>
   14000:	ldr	r3, [r6]
   14004:	add	r1, sp, #32
   14008:	mov	r7, #0
   1400c:	ldr	ip, [sp, #196]	; 0xc4
   14010:	sub	r3, r3, #1
   14014:	str	r3, [sp, #32]
   14018:	ldr	r3, [sp, #196]	; 0xc4
   1401c:	ldr	r3, [r3]
   14020:	str	r3, [sp, #112]	; 0x70
   14024:	ldr	r3, [r5]
   14028:	str	r3, [sp, #20]
   1402c:	add	r3, sp, #112	; 0x70
   14030:	mov	r2, r3
   14034:	str	r3, [sp, #24]
   14038:	mov	r3, #1
   1403c:	ldr	r0, [sp, #192]	; 0xc0
   14040:	cmp	r3, r0
   14044:	blt	141a0 <ReadDataSlabN+0xb14>
   14048:	ldr	r3, [sp]
   1404c:	mov	r2, #1
   14050:	ldr	r0, [fp]
   14054:	mul	r1, r3, r7
   14058:	bl	1694 <fseek@plt>
   1405c:	ldr	r3, [r6]
   14060:	cmp	r3, #1
   14064:	mov	r3, #0
   14068:	beq	1427c <ReadDataSlabN+0xbf0>
   1406c:	str	r3, [sp, #16]
   14070:	ldr	r3, [sp, #16]
   14074:	ldr	r2, [sp, #20]
   14078:	cmp	r3, r2
   1407c:	bge	13b04 <ReadDataSlabN+0x478>
   14080:	ldr	r1, [r4]
   14084:	cmp	r1, #0
   14088:	beq	140a8 <ReadDataSlabN+0xa1c>
   1408c:	ldr	r3, [sp]
   14090:	mov	r2, #1
   14094:	ldr	r0, [fp]
   14098:	mul	r1, r3, r1
   1409c:	bl	1694 <fseek@plt>
   140a0:	ldr	r3, [r4]
   140a4:	add	r7, r7, r3
   140a8:	ldr	r3, [sp, #4]
   140ac:	mov	r8, #0
   140b0:	ldr	r2, [sp, #16]
   140b4:	add	r9, r3, r2, lsl #3
   140b8:	ldr	r1, [r5]
   140bc:	cmp	r1, r8
   140c0:	bgt	1439c <ReadDataSlabN+0xd10>
   140c4:	ldr	r3, [sp, #196]	; 0xc4
   140c8:	add	sl, sp, #72	; 0x48
   140cc:	mov	r8, #1
   140d0:	ldr	r2, [r4]
   140d4:	ldr	r0, [fp]
   140d8:	ldr	r3, [r3]
   140dc:	sub	r3, r3, r2
   140e0:	ldr	r2, [r6]
   140e4:	mls	r1, r2, r1, r3
   140e8:	ldr	r3, [sp]
   140ec:	mov	r2, #1
   140f0:	add	r7, r7, r1
   140f4:	mul	r1, r3, r1
   140f8:	bl	1694 <fseek@plt>
   140fc:	ldr	r3, [sp, #24]
   14100:	str	r3, [sp, #12]
   14104:	ldr	r3, [sp, #192]	; 0xc0
   14108:	cmp	r8, r3
   1410c:	bge	14438 <ReadDataSlabN+0xdac>
   14110:	ldr	r3, [sl, #4]
   14114:	ldr	r1, [r5, r8, lsl #2]
   14118:	add	r3, r3, #1
   1411c:	sdiv	r2, r3, r1
   14120:	str	r3, [sl, #4]
   14124:	mls	r3, r1, r2, r3
   14128:	cmp	r3, #0
   1412c:	bne	14414 <ReadDataSlabN+0xd88>
   14130:	str	r3, [sl, #4]
   14134:	ldr	r3, [sp, #12]
   14138:	ldr	r1, [r4, r8, lsl #2]
   1413c:	ldr	r9, [r3, #4]
   14140:	sdiv	r3, r7, r9
   14144:	mls	r3, r9, r3, r7
   14148:	cmp	r3, #0
   1414c:	beq	143e0 <ReadDataSlabN+0xd54>
   14150:	sub	r9, r9, r3
   14154:	ldr	r3, [sp, #12]
   14158:	mov	r2, #1
   1415c:	ldr	r0, [fp]
   14160:	ldr	r3, [r3]
   14164:	mla	r1, r1, r3, r9
   14168:	str	r3, [sp, #28]
   1416c:	ldr	r3, [sp]
   14170:	mul	r1, r3, r1
   14174:	bl	1694 <fseek@plt>
   14178:	ldr	r2, [r4, r8, lsl #2]
   1417c:	ldr	r3, [sp, #28]
   14180:	mla	r9, r2, r3, r9
   14184:	add	r7, r7, r9
   14188:	ldr	r3, [sp, #12]
   1418c:	add	r8, r8, #1
   14190:	add	sl, sl, #4
   14194:	add	r3, r3, #4
   14198:	str	r3, [sp, #12]
   1419c:	b	14104 <ReadDataSlabN+0xa78>
   141a0:	ldr	r0, [r6, r3, lsl #2]
   141a4:	mov	r8, r2
   141a8:	sub	r0, r0, #1
   141ac:	str	r0, [r1, #4]
   141b0:	ldr	r0, [ip], #4
   141b4:	str	r0, [r2, #4]
   141b8:	mov	r0, ip
   141bc:	ldr	lr, [sp, #196]	; 0xc4
   141c0:	cmp	r0, lr
   141c4:	bne	141f4 <ReadDataSlabN+0xb68>
   141c8:	ldr	r0, [r5, r3, lsl #2]
   141cc:	add	r2, r2, #4
   141d0:	add	r1, r1, #4
   141d4:	ldr	lr, [sp, #20]
   141d8:	mul	r0, r0, lr
   141dc:	ldr	lr, [r4, r3, lsl #2]
   141e0:	add	r3, r3, #1
   141e4:	str	r0, [sp, #20]
   141e8:	ldr	r0, [r8]
   141ec:	mla	r7, lr, r0, r7
   141f0:	b	1403c <ReadDataSlabN+0x9b0>
   141f4:	mov	r9, r0
   141f8:	ldr	lr, [r0, #-4]!
   141fc:	ldr	sl, [r1, #4]
   14200:	mul	lr, lr, sl
   14204:	ldr	sl, [r2, #4]
   14208:	str	lr, [r1, #4]
   1420c:	ldr	lr, [r9]
   14210:	mul	lr, lr, sl
   14214:	str	lr, [r2, #4]
   14218:	b	141bc <ReadDataSlabN+0xb30>
   1421c:	cmp	r1, #0
   14220:	beq	1438c <ReadDataSlabN+0xd00>
   14224:	ldr	r8, [sl]
   14228:	mov	r2, #1
   1422c:	ldr	r3, [sp]
   14230:	ldr	r0, [fp]
   14234:	mul	r1, r1, r8
   14238:	mul	r1, r3, r1
   1423c:	bl	1694 <fseek@plt>
   14240:	ldr	r3, [r4, r6, lsl #2]
   14244:	mla	r7, r3, r8, r7
   14248:	b	1438c <ReadDataSlabN+0xd00>
   1424c:	add	r3, sp, #152	; 0x98
   14250:	mov	r2, #1
   14254:	ldr	r0, [fp]
   14258:	add	r6, r3, r6, lsl #2
   1425c:	ldr	r3, [sp]
   14260:	ldr	r1, [r6, #-120]	; 0xffffff88
   14264:	add	r7, r7, r1
   14268:	mul	r1, r3, r1
   1426c:	bl	1694 <fseek@plt>
   14270:	ldr	r3, [r5]
   14274:	ldr	r2, [sp, #12]
   14278:	add	r3, r2, r3
   1427c:	str	r3, [sp, #12]
   14280:	ldr	r3, [sp, #12]
   14284:	ldr	r2, [sp, #20]
   14288:	cmp	r3, r2
   1428c:	bge	13b04 <ReadDataSlabN+0x478>
   14290:	ldr	r1, [r4]
   14294:	cmp	r1, #0
   14298:	beq	142b8 <ReadDataSlabN+0xc2c>
   1429c:	ldr	r3, [sp]
   142a0:	mov	r2, #1
   142a4:	ldr	r0, [fp]
   142a8:	mul	r1, r3, r1
   142ac:	bl	1694 <fseek@plt>
   142b0:	ldr	r3, [r4]
   142b4:	add	r7, r7, r3
   142b8:	ldmib	sp, {r1, r2}
   142bc:	add	r9, sp, #72	; 0x48
   142c0:	mov	r6, #1
   142c4:	ldr	r0, [sp, #12]
   142c8:	ldr	r3, [r5]
   142cc:	add	r1, r1, r0, lsl #3
   142d0:	mov	r0, fp
   142d4:	bl	10bec <ReadInt64Data>
   142d8:	ldr	r3, [sp, #196]	; 0xc4
   142dc:	ldr	r1, [r4]
   142e0:	ldr	r0, [fp]
   142e4:	ldr	r3, [r3]
   142e8:	sub	r2, r3, r1
   142ec:	add	r7, r2, r7
   142f0:	ldr	r2, [r5]
   142f4:	sub	r3, r3, r2
   142f8:	mov	r2, #1
   142fc:	sub	r1, r3, r1
   14300:	ldr	r3, [sp]
   14304:	mul	r1, r3, r1
   14308:	bl	1694 <fseek@plt>
   1430c:	ldr	sl, [sp, #24]
   14310:	ldr	r3, [sp, #192]	; 0xc0
   14314:	cmp	r6, r3
   14318:	bge	14270 <ReadDataSlabN+0xbe4>
   1431c:	ldr	r3, [r9, #4]
   14320:	ldr	r1, [r5, r6, lsl #2]
   14324:	add	r3, r3, #1
   14328:	sdiv	r2, r3, r1
   1432c:	str	r3, [r9, #4]
   14330:	mls	r3, r1, r2, r3
   14334:	cmp	r3, #0
   14338:	bne	1424c <ReadDataSlabN+0xbc0>
   1433c:	ldr	r8, [sl, #4]
   14340:	str	r3, [r9, #4]
   14344:	ldr	r1, [r4, r6, lsl #2]
   14348:	sdiv	r3, r7, r8
   1434c:	mls	r3, r8, r3, r7
   14350:	cmp	r3, #0
   14354:	beq	1421c <ReadDataSlabN+0xb90>
   14358:	sub	r8, r8, r3
   1435c:	ldr	r3, [sl]
   14360:	mov	r2, #1
   14364:	ldr	r0, [fp]
   14368:	mla	r1, r1, r3, r8
   1436c:	str	r3, [sp, #16]
   14370:	ldr	r3, [sp]
   14374:	mul	r1, r3, r1
   14378:	bl	1694 <fseek@plt>
   1437c:	ldr	r2, [r4, r6, lsl #2]
   14380:	ldr	r3, [sp, #16]
   14384:	mla	r8, r2, r3, r8
   14388:	add	r7, r7, r8
   1438c:	add	r6, r6, #1
   14390:	add	sl, sl, #4
   14394:	add	r9, r9, #4
   14398:	b	14310 <ReadDataSlabN+0xc84>
   1439c:	mov	r1, r9
   143a0:	mov	r3, #1
   143a4:	ldr	r2, [sp, #8]
   143a8:	mov	r0, fp
   143ac:	add	r8, r8, #1
   143b0:	bl	10bec <ReadInt64Data>
   143b4:	ldr	r1, [r6]
   143b8:	mov	r2, #1
   143bc:	add	r9, r9, #8
   143c0:	ldr	r3, [sp]
   143c4:	ldr	r0, [fp]
   143c8:	sub	r1, r1, #1
   143cc:	mul	r1, r3, r1
   143d0:	bl	1694 <fseek@plt>
   143d4:	ldr	r3, [r6]
   143d8:	add	r7, r7, r3
   143dc:	b	140b8 <ReadDataSlabN+0xa2c>
   143e0:	cmp	r1, #0
   143e4:	beq	14188 <ReadDataSlabN+0xafc>
   143e8:	ldr	r3, [sp, #12]
   143ec:	mov	r2, #1
   143f0:	ldr	r0, [fp]
   143f4:	ldr	r9, [r3]
   143f8:	ldr	r3, [sp]
   143fc:	mul	r1, r1, r9
   14400:	mul	r1, r3, r1
   14404:	bl	1694 <fseek@plt>
   14408:	ldr	r3, [r4, r8, lsl #2]
   1440c:	mla	r7, r3, r9, r7
   14410:	b	14188 <ReadDataSlabN+0xafc>
   14414:	add	r3, sp, #152	; 0x98
   14418:	mov	r2, #1
   1441c:	ldr	r0, [fp]
   14420:	add	r8, r3, r8, lsl #2
   14424:	ldr	r3, [sp]
   14428:	ldr	r1, [r8, #-120]	; 0xffffff88
   1442c:	add	r7, r7, r1
   14430:	mul	r1, r3, r1
   14434:	bl	1694 <fseek@plt>
   14438:	ldr	r3, [r5]
   1443c:	ldr	r2, [sp, #16]
   14440:	add	r3, r2, r3
   14444:	b	1406c <ReadDataSlabN+0x9e0>
   14448:	ldr	r3, [r6]
   1444c:	add	r1, sp, #32
   14450:	mov	r7, #0
   14454:	ldr	ip, [sp, #196]	; 0xc4
   14458:	sub	r3, r3, #1
   1445c:	str	r3, [sp, #32]
   14460:	ldr	r3, [sp, #196]	; 0xc4
   14464:	ldr	r3, [r3]
   14468:	str	r3, [sp, #112]	; 0x70
   1446c:	ldr	r3, [r5]
   14470:	str	r3, [sp, #20]
   14474:	add	r3, sp, #112	; 0x70
   14478:	mov	r2, r3
   1447c:	str	r3, [sp, #24]
   14480:	mov	r3, #1
   14484:	ldr	r0, [sp, #192]	; 0xc0
   14488:	cmp	r3, r0
   1448c:	blt	145e8 <ReadDataSlabN+0xf5c>
   14490:	ldr	r3, [sp]
   14494:	mov	r2, #1
   14498:	ldr	r0, [fp]
   1449c:	mul	r1, r3, r7
   144a0:	bl	1694 <fseek@plt>
   144a4:	ldr	r3, [r6]
   144a8:	cmp	r3, #1
   144ac:	mov	r3, #0
   144b0:	beq	146c4 <ReadDataSlabN+0x1038>
   144b4:	str	r3, [sp, #16]
   144b8:	ldr	r3, [sp, #16]
   144bc:	ldr	r2, [sp, #20]
   144c0:	cmp	r3, r2
   144c4:	bge	13b04 <ReadDataSlabN+0x478>
   144c8:	ldr	r1, [r4]
   144cc:	cmp	r1, #0
   144d0:	beq	144f0 <ReadDataSlabN+0xe64>
   144d4:	ldr	r3, [sp]
   144d8:	mov	r2, #1
   144dc:	ldr	r0, [fp]
   144e0:	mul	r1, r3, r1
   144e4:	bl	1694 <fseek@plt>
   144e8:	ldr	r3, [r4]
   144ec:	add	r7, r7, r3
   144f0:	ldr	r3, [sp, #4]
   144f4:	mov	r8, #0
   144f8:	ldr	r2, [sp, #16]
   144fc:	add	r9, r3, r2, lsl #3
   14500:	ldr	r1, [r5]
   14504:	cmp	r1, r8
   14508:	bgt	147e4 <ReadDataSlabN+0x1158>
   1450c:	ldr	r3, [sp, #196]	; 0xc4
   14510:	add	sl, sp, #72	; 0x48
   14514:	mov	r8, #1
   14518:	ldr	r2, [r4]
   1451c:	ldr	r0, [fp]
   14520:	ldr	r3, [r3]
   14524:	sub	r3, r3, r2
   14528:	ldr	r2, [r6]
   1452c:	mls	r1, r2, r1, r3
   14530:	ldr	r3, [sp]
   14534:	mov	r2, #1
   14538:	add	r7, r7, r1
   1453c:	mul	r1, r3, r1
   14540:	bl	1694 <fseek@plt>
   14544:	ldr	r3, [sp, #24]
   14548:	str	r3, [sp, #12]
   1454c:	ldr	r3, [sp, #192]	; 0xc0
   14550:	cmp	r8, r3
   14554:	bge	14880 <ReadDataSlabN+0x11f4>
   14558:	ldr	r3, [sl, #4]
   1455c:	ldr	r1, [r5, r8, lsl #2]
   14560:	add	r3, r3, #1
   14564:	sdiv	r2, r3, r1
   14568:	str	r3, [sl, #4]
   1456c:	mls	r3, r1, r2, r3
   14570:	cmp	r3, #0
   14574:	bne	1485c <ReadDataSlabN+0x11d0>
   14578:	str	r3, [sl, #4]
   1457c:	ldr	r3, [sp, #12]
   14580:	ldr	r1, [r4, r8, lsl #2]
   14584:	ldr	r9, [r3, #4]
   14588:	sdiv	r3, r7, r9
   1458c:	mls	r3, r9, r3, r7
   14590:	cmp	r3, #0
   14594:	beq	14828 <ReadDataSlabN+0x119c>
   14598:	sub	r9, r9, r3
   1459c:	ldr	r3, [sp, #12]
   145a0:	mov	r2, #1
   145a4:	ldr	r0, [fp]
   145a8:	ldr	r3, [r3]
   145ac:	mla	r1, r1, r3, r9
   145b0:	str	r3, [sp, #28]
   145b4:	ldr	r3, [sp]
   145b8:	mul	r1, r3, r1
   145bc:	bl	1694 <fseek@plt>
   145c0:	ldr	r2, [r4, r8, lsl #2]
   145c4:	ldr	r3, [sp, #28]
   145c8:	mla	r9, r2, r3, r9
   145cc:	add	r7, r7, r9
   145d0:	ldr	r3, [sp, #12]
   145d4:	add	r8, r8, #1
   145d8:	add	sl, sl, #4
   145dc:	add	r3, r3, #4
   145e0:	str	r3, [sp, #12]
   145e4:	b	1454c <ReadDataSlabN+0xec0>
   145e8:	ldr	r0, [r6, r3, lsl #2]
   145ec:	mov	r8, r2
   145f0:	sub	r0, r0, #1
   145f4:	str	r0, [r1, #4]
   145f8:	ldr	r0, [ip], #4
   145fc:	str	r0, [r2, #4]
   14600:	mov	r0, ip
   14604:	ldr	lr, [sp, #196]	; 0xc4
   14608:	cmp	r0, lr
   1460c:	bne	1463c <ReadDataSlabN+0xfb0>
   14610:	ldr	r0, [r5, r3, lsl #2]
   14614:	add	r2, r2, #4
   14618:	add	r1, r1, #4
   1461c:	ldr	lr, [sp, #20]
   14620:	mul	r0, r0, lr
   14624:	ldr	lr, [r4, r3, lsl #2]
   14628:	add	r3, r3, #1
   1462c:	str	r0, [sp, #20]
   14630:	ldr	r0, [r8]
   14634:	mla	r7, lr, r0, r7
   14638:	b	14484 <ReadDataSlabN+0xdf8>
   1463c:	mov	r9, r0
   14640:	ldr	lr, [r0, #-4]!
   14644:	ldr	sl, [r1, #4]
   14648:	mul	lr, lr, sl
   1464c:	ldr	sl, [r2, #4]
   14650:	str	lr, [r1, #4]
   14654:	ldr	lr, [r9]
   14658:	mul	lr, lr, sl
   1465c:	str	lr, [r2, #4]
   14660:	b	14604 <ReadDataSlabN+0xf78>
   14664:	cmp	r1, #0
   14668:	beq	147d4 <ReadDataSlabN+0x1148>
   1466c:	ldr	r8, [r9]
   14670:	mov	r2, #1
   14674:	ldr	r3, [sp]
   14678:	ldr	r0, [fp]
   1467c:	mul	r1, r1, r8
   14680:	mul	r1, r3, r1
   14684:	bl	1694 <fseek@plt>
   14688:	ldr	r3, [r4, r6, lsl #2]
   1468c:	mla	r7, r3, r8, r7
   14690:	b	147d4 <ReadDataSlabN+0x1148>
   14694:	add	r3, sp, #152	; 0x98
   14698:	mov	r2, #1
   1469c:	ldr	r0, [fp]
   146a0:	add	r6, r3, r6, lsl #2
   146a4:	ldr	r3, [sp]
   146a8:	ldr	r1, [r6, #-120]	; 0xffffff88
   146ac:	add	r7, r7, r1
   146b0:	mul	r1, r3, r1
   146b4:	bl	1694 <fseek@plt>
   146b8:	ldr	r3, [r5]
   146bc:	ldr	r2, [sp, #12]
   146c0:	add	r3, r2, r3
   146c4:	str	r3, [sp, #12]
   146c8:	ldr	r3, [sp, #12]
   146cc:	ldr	r2, [sp, #20]
   146d0:	cmp	r3, r2
   146d4:	bge	13b04 <ReadDataSlabN+0x478>
   146d8:	ldr	r1, [r4]
   146dc:	cmp	r1, #0
   146e0:	beq	14700 <ReadDataSlabN+0x1074>
   146e4:	ldr	r3, [sp]
   146e8:	mov	r2, #1
   146ec:	ldr	r0, [fp]
   146f0:	mul	r1, r3, r1
   146f4:	bl	1694 <fseek@plt>
   146f8:	ldr	r3, [r4]
   146fc:	add	r7, r7, r3
   14700:	ldmib	sp, {r1, r2}
   14704:	add	sl, sp, #72	; 0x48
   14708:	mov	r6, #1
   1470c:	ldr	r0, [sp, #12]
   14710:	ldr	r3, [r5]
   14714:	add	r1, r1, r0, lsl #3
   14718:	mov	r0, fp
   1471c:	bl	11124 <ReadUInt64Data>
   14720:	ldr	r3, [sp, #196]	; 0xc4
   14724:	ldr	r1, [r4]
   14728:	ldr	r0, [fp]
   1472c:	ldr	r3, [r3]
   14730:	sub	r2, r3, r1
   14734:	add	r7, r2, r7
   14738:	ldr	r2, [r5]
   1473c:	sub	r3, r3, r2
   14740:	mov	r2, #1
   14744:	sub	r1, r3, r1
   14748:	ldr	r3, [sp]
   1474c:	mul	r1, r3, r1
   14750:	bl	1694 <fseek@plt>
   14754:	ldr	r9, [sp, #24]
   14758:	ldr	r3, [sp, #192]	; 0xc0
   1475c:	cmp	r6, r3
   14760:	bge	146b8 <ReadDataSlabN+0x102c>
   14764:	ldr	r3, [sl, #4]
   14768:	ldr	r1, [r5, r6, lsl #2]
   1476c:	add	r3, r3, #1
   14770:	sdiv	r2, r3, r1
   14774:	str	r3, [sl, #4]
   14778:	mls	r3, r1, r2, r3
   1477c:	cmp	r3, #0
   14780:	bne	14694 <ReadDataSlabN+0x1008>
   14784:	ldr	r8, [r9, #4]
   14788:	str	r3, [sl, #4]
   1478c:	ldr	r1, [r4, r6, lsl #2]
   14790:	sdiv	r3, r7, r8
   14794:	mls	r3, r8, r3, r7
   14798:	cmp	r3, #0
   1479c:	beq	14664 <ReadDataSlabN+0xfd8>
   147a0:	sub	r8, r8, r3
   147a4:	ldr	r3, [r9]
   147a8:	mov	r2, #1
   147ac:	ldr	r0, [fp]
   147b0:	mla	r1, r1, r3, r8
   147b4:	str	r3, [sp, #16]
   147b8:	ldr	r3, [sp]
   147bc:	mul	r1, r3, r1
   147c0:	bl	1694 <fseek@plt>
   147c4:	ldr	r2, [r4, r6, lsl #2]
   147c8:	ldr	r3, [sp, #16]
   147cc:	mla	r8, r2, r3, r8
   147d0:	add	r7, r7, r8
   147d4:	add	r6, r6, #1
   147d8:	add	r9, r9, #4
   147dc:	add	sl, sl, #4
   147e0:	b	14758 <ReadDataSlabN+0x10cc>
   147e4:	mov	r1, r9
   147e8:	mov	r3, #1
   147ec:	ldr	r2, [sp, #8]
   147f0:	mov	r0, fp
   147f4:	add	r8, r8, #1
   147f8:	bl	11124 <ReadUInt64Data>
   147fc:	ldr	r1, [r6]
   14800:	mov	r2, #1
   14804:	add	r9, r9, #8
   14808:	ldr	r3, [sp]
   1480c:	ldr	r0, [fp]
   14810:	sub	r1, r1, #1
   14814:	mul	r1, r3, r1
   14818:	bl	1694 <fseek@plt>
   1481c:	ldr	r3, [r6]
   14820:	add	r7, r7, r3
   14824:	b	14500 <ReadDataSlabN+0xe74>
   14828:	cmp	r1, #0
   1482c:	beq	145d0 <ReadDataSlabN+0xf44>
   14830:	ldr	r3, [sp, #12]
   14834:	mov	r2, #1
   14838:	ldr	r0, [fp]
   1483c:	ldr	r9, [r3]
   14840:	ldr	r3, [sp]
   14844:	mul	r1, r1, r9
   14848:	mul	r1, r3, r1
   1484c:	bl	1694 <fseek@plt>
   14850:	ldr	r3, [r4, r8, lsl #2]
   14854:	mla	r7, r3, r9, r7
   14858:	b	145d0 <ReadDataSlabN+0xf44>
   1485c:	add	r3, sp, #152	; 0x98
   14860:	mov	r2, #1
   14864:	ldr	r0, [fp]
   14868:	add	r8, r3, r8, lsl #2
   1486c:	ldr	r3, [sp]
   14870:	ldr	r1, [r8, #-120]	; 0xffffff88
   14874:	add	r7, r7, r1
   14878:	mul	r1, r3, r1
   1487c:	bl	1694 <fseek@plt>
   14880:	ldr	r3, [r5]
   14884:	ldr	r2, [sp, #16]
   14888:	add	r3, r2, r3
   1488c:	b	144b4 <ReadDataSlabN+0xe28>
   14890:	ldr	r3, [r6]
   14894:	add	r1, sp, #32
   14898:	mov	r7, #0
   1489c:	ldr	ip, [sp, #196]	; 0xc4
   148a0:	sub	r3, r3, #1
   148a4:	str	r3, [sp, #32]
   148a8:	ldr	r3, [sp, #196]	; 0xc4
   148ac:	ldr	r3, [r3]
   148b0:	str	r3, [sp, #112]	; 0x70
   148b4:	ldr	r3, [r5]
   148b8:	str	r3, [sp, #20]
   148bc:	add	r3, sp, #112	; 0x70
   148c0:	mov	r2, r3
   148c4:	str	r3, [sp, #24]
   148c8:	mov	r3, #1
   148cc:	ldr	r0, [sp, #192]	; 0xc0
   148d0:	cmp	r3, r0
   148d4:	blt	14a30 <ReadDataSlabN+0x13a4>
   148d8:	ldr	r3, [sp]
   148dc:	mov	r2, #1
   148e0:	ldr	r0, [fp]
   148e4:	mul	r1, r3, r7
   148e8:	bl	1694 <fseek@plt>
   148ec:	ldr	r3, [r6]
   148f0:	cmp	r3, #1
   148f4:	mov	r3, #0
   148f8:	beq	14b0c <ReadDataSlabN+0x1480>
   148fc:	str	r3, [sp, #16]
   14900:	ldr	r3, [sp, #16]
   14904:	ldr	r2, [sp, #20]
   14908:	cmp	r3, r2
   1490c:	bge	13b04 <ReadDataSlabN+0x478>
   14910:	ldr	r1, [r4]
   14914:	cmp	r1, #0
   14918:	beq	14938 <ReadDataSlabN+0x12ac>
   1491c:	ldr	r3, [sp]
   14920:	mov	r2, #1
   14924:	ldr	r0, [fp]
   14928:	mul	r1, r3, r1
   1492c:	bl	1694 <fseek@plt>
   14930:	ldr	r3, [r4]
   14934:	add	r7, r7, r3
   14938:	ldr	r3, [sp, #4]
   1493c:	mov	r8, #0
   14940:	ldr	r2, [sp, #16]
   14944:	add	r9, r3, r2, lsl #2
   14948:	ldr	r1, [r5]
   1494c:	cmp	r1, r8
   14950:	bgt	14c2c <ReadDataSlabN+0x15a0>
   14954:	ldr	r3, [sp, #196]	; 0xc4
   14958:	add	sl, sp, #72	; 0x48
   1495c:	mov	r8, #1
   14960:	ldr	r2, [r4]
   14964:	ldr	r0, [fp]
   14968:	ldr	r3, [r3]
   1496c:	sub	r3, r3, r2
   14970:	ldr	r2, [r6]
   14974:	mls	r1, r2, r1, r3
   14978:	ldr	r3, [sp]
   1497c:	mov	r2, #1
   14980:	add	r7, r7, r1
   14984:	mul	r1, r3, r1
   14988:	bl	1694 <fseek@plt>
   1498c:	ldr	r3, [sp, #24]
   14990:	str	r3, [sp, #12]
   14994:	ldr	r3, [sp, #192]	; 0xc0
   14998:	cmp	r8, r3
   1499c:	bge	14cc8 <ReadDataSlabN+0x163c>
   149a0:	ldr	r3, [sl, #4]
   149a4:	ldr	r1, [r5, r8, lsl #2]
   149a8:	add	r3, r3, #1
   149ac:	sdiv	r2, r3, r1
   149b0:	str	r3, [sl, #4]
   149b4:	mls	r3, r1, r2, r3
   149b8:	cmp	r3, #0
   149bc:	bne	14ca4 <ReadDataSlabN+0x1618>
   149c0:	str	r3, [sl, #4]
   149c4:	ldr	r3, [sp, #12]
   149c8:	ldr	r1, [r4, r8, lsl #2]
   149cc:	ldr	r9, [r3, #4]
   149d0:	sdiv	r3, r7, r9
   149d4:	mls	r3, r9, r3, r7
   149d8:	cmp	r3, #0
   149dc:	beq	14c70 <ReadDataSlabN+0x15e4>
   149e0:	sub	r9, r9, r3
   149e4:	ldr	r3, [sp, #12]
   149e8:	mov	r2, #1
   149ec:	ldr	r0, [fp]
   149f0:	ldr	r3, [r3]
   149f4:	mla	r1, r1, r3, r9
   149f8:	str	r3, [sp, #28]
   149fc:	ldr	r3, [sp]
   14a00:	mul	r1, r3, r1
   14a04:	bl	1694 <fseek@plt>
   14a08:	ldr	r2, [r4, r8, lsl #2]
   14a0c:	ldr	r3, [sp, #28]
   14a10:	mla	r9, r2, r3, r9
   14a14:	add	r7, r7, r9
   14a18:	ldr	r3, [sp, #12]
   14a1c:	add	r8, r8, #1
   14a20:	add	sl, sl, #4
   14a24:	add	r3, r3, #4
   14a28:	str	r3, [sp, #12]
   14a2c:	b	14994 <ReadDataSlabN+0x1308>
   14a30:	ldr	r0, [r6, r3, lsl #2]
   14a34:	mov	r8, r2
   14a38:	sub	r0, r0, #1
   14a3c:	str	r0, [r1, #4]
   14a40:	ldr	r0, [ip], #4
   14a44:	str	r0, [r2, #4]
   14a48:	mov	r0, ip
   14a4c:	ldr	lr, [sp, #196]	; 0xc4
   14a50:	cmp	lr, r0
   14a54:	bne	14a84 <ReadDataSlabN+0x13f8>
   14a58:	ldr	r0, [r5, r3, lsl #2]
   14a5c:	add	r2, r2, #4
   14a60:	add	r1, r1, #4
   14a64:	ldr	lr, [sp, #20]
   14a68:	mul	r0, r0, lr
   14a6c:	ldr	lr, [r4, r3, lsl #2]
   14a70:	add	r3, r3, #1
   14a74:	str	r0, [sp, #20]
   14a78:	ldr	r0, [r8]
   14a7c:	mla	r7, lr, r0, r7
   14a80:	b	148cc <ReadDataSlabN+0x1240>
   14a84:	mov	r9, r0
   14a88:	ldr	lr, [r0, #-4]!
   14a8c:	ldr	sl, [r1, #4]
   14a90:	mul	lr, lr, sl
   14a94:	ldr	sl, [r2, #4]
   14a98:	str	lr, [r1, #4]
   14a9c:	ldr	lr, [r9]
   14aa0:	mul	lr, lr, sl
   14aa4:	str	lr, [r2, #4]
   14aa8:	b	14a4c <ReadDataSlabN+0x13c0>
   14aac:	cmp	r1, #0
   14ab0:	beq	14c1c <ReadDataSlabN+0x1590>
   14ab4:	ldr	r8, [sl]
   14ab8:	mov	r2, #1
   14abc:	ldr	r3, [sp]
   14ac0:	ldr	r0, [fp]
   14ac4:	mul	r1, r1, r8
   14ac8:	mul	r1, r3, r1
   14acc:	bl	1694 <fseek@plt>
   14ad0:	ldr	r3, [r4, r6, lsl #2]
   14ad4:	mla	r7, r3, r8, r7
   14ad8:	b	14c1c <ReadDataSlabN+0x1590>
   14adc:	add	r3, sp, #152	; 0x98
   14ae0:	mov	r2, #1
   14ae4:	ldr	r0, [fp]
   14ae8:	add	r6, r3, r6, lsl #2
   14aec:	ldr	r3, [sp]
   14af0:	ldr	r1, [r6, #-120]	; 0xffffff88
   14af4:	add	r7, r7, r1
   14af8:	mul	r1, r3, r1
   14afc:	bl	1694 <fseek@plt>
   14b00:	ldr	r3, [r5]
   14b04:	ldr	r2, [sp, #12]
   14b08:	add	r3, r2, r3
   14b0c:	str	r3, [sp, #12]
   14b10:	ldr	r3, [sp, #12]
   14b14:	ldr	r2, [sp, #20]
   14b18:	cmp	r3, r2
   14b1c:	bge	13b04 <ReadDataSlabN+0x478>
   14b20:	ldr	r1, [r4]
   14b24:	cmp	r1, #0
   14b28:	beq	14b48 <ReadDataSlabN+0x14bc>
   14b2c:	ldr	r3, [sp]
   14b30:	mov	r2, #1
   14b34:	ldr	r0, [fp]
   14b38:	mul	r1, r3, r1
   14b3c:	bl	1694 <fseek@plt>
   14b40:	ldr	r3, [r4]
   14b44:	add	r7, r7, r3
   14b48:	ldmib	sp, {r1, r2}
   14b4c:	add	r9, sp, #72	; 0x48
   14b50:	mov	r6, #1
   14b54:	ldr	r0, [sp, #12]
   14b58:	ldr	r3, [r5]
   14b5c:	add	r1, r1, r0, lsl #2
   14b60:	mov	r0, fp
   14b64:	bl	1165c <ReadInt32Data>
   14b68:	ldr	r3, [sp, #196]	; 0xc4
   14b6c:	ldr	r1, [r4]
   14b70:	ldr	r0, [fp]
   14b74:	ldr	r3, [r3]
   14b78:	sub	r2, r3, r1
   14b7c:	add	r7, r2, r7
   14b80:	ldr	r2, [r5]
   14b84:	sub	r3, r3, r2
   14b88:	mov	r2, #1
   14b8c:	sub	r1, r3, r1
   14b90:	ldr	r3, [sp]
   14b94:	mul	r1, r3, r1
   14b98:	bl	1694 <fseek@plt>
   14b9c:	ldr	sl, [sp, #24]
   14ba0:	ldr	r3, [sp, #192]	; 0xc0
   14ba4:	cmp	r6, r3
   14ba8:	bge	14b00 <ReadDataSlabN+0x1474>
   14bac:	ldr	r3, [r9, #4]
   14bb0:	ldr	r1, [r5, r6, lsl #2]
   14bb4:	add	r3, r3, #1
   14bb8:	sdiv	r2, r3, r1
   14bbc:	str	r3, [r9, #4]
   14bc0:	mls	r3, r1, r2, r3
   14bc4:	cmp	r3, #0
   14bc8:	bne	14adc <ReadDataSlabN+0x1450>
   14bcc:	ldr	r8, [sl, #4]
   14bd0:	str	r3, [r9, #4]
   14bd4:	ldr	r1, [r4, r6, lsl #2]
   14bd8:	sdiv	r3, r7, r8
   14bdc:	mls	r3, r8, r3, r7
   14be0:	cmp	r3, #0
   14be4:	beq	14aac <ReadDataSlabN+0x1420>
   14be8:	sub	r8, r8, r3
   14bec:	ldr	r3, [sl]
   14bf0:	mov	r2, #1
   14bf4:	ldr	r0, [fp]
   14bf8:	mla	r1, r1, r3, r8
   14bfc:	str	r3, [sp, #16]
   14c00:	ldr	r3, [sp]
   14c04:	mul	r1, r3, r1
   14c08:	bl	1694 <fseek@plt>
   14c0c:	ldr	r2, [r4, r6, lsl #2]
   14c10:	ldr	r3, [sp, #16]
   14c14:	mla	r8, r2, r3, r8
   14c18:	add	r7, r7, r8
   14c1c:	add	r6, r6, #1
   14c20:	add	sl, sl, #4
   14c24:	add	r9, r9, #4
   14c28:	b	14ba0 <ReadDataSlabN+0x1514>
   14c2c:	mov	r1, r9
   14c30:	mov	r3, #1
   14c34:	ldr	r2, [sp, #8]
   14c38:	mov	r0, fp
   14c3c:	add	r8, r8, #1
   14c40:	bl	1165c <ReadInt32Data>
   14c44:	ldr	r1, [r6]
   14c48:	mov	r2, #1
   14c4c:	add	r9, r9, #4
   14c50:	ldr	r3, [sp]
   14c54:	ldr	r0, [fp]
   14c58:	sub	r1, r1, #1
   14c5c:	mul	r1, r3, r1
   14c60:	bl	1694 <fseek@plt>
   14c64:	ldr	r3, [r6]
   14c68:	add	r7, r7, r3
   14c6c:	b	14948 <ReadDataSlabN+0x12bc>
   14c70:	cmp	r1, #0
   14c74:	beq	14a18 <ReadDataSlabN+0x138c>
   14c78:	ldr	r3, [sp, #12]
   14c7c:	mov	r2, #1
   14c80:	ldr	r0, [fp]
   14c84:	ldr	r9, [r3]
   14c88:	ldr	r3, [sp]
   14c8c:	mul	r1, r1, r9
   14c90:	mul	r1, r3, r1
   14c94:	bl	1694 <fseek@plt>
   14c98:	ldr	r3, [r4, r8, lsl #2]
   14c9c:	mla	r7, r3, r9, r7
   14ca0:	b	14a18 <ReadDataSlabN+0x138c>
   14ca4:	add	r3, sp, #152	; 0x98
   14ca8:	mov	r2, #1
   14cac:	ldr	r0, [fp]
   14cb0:	add	r8, r3, r8, lsl #2
   14cb4:	ldr	r3, [sp]
   14cb8:	ldr	r1, [r8, #-120]	; 0xffffff88
   14cbc:	add	r7, r7, r1
   14cc0:	mul	r1, r3, r1
   14cc4:	bl	1694 <fseek@plt>
   14cc8:	ldr	r3, [r5]
   14ccc:	ldr	r2, [sp, #16]
   14cd0:	add	r3, r2, r3
   14cd4:	b	148fc <ReadDataSlabN+0x1270>
   14cd8:	ldr	r3, [r6]
   14cdc:	add	r1, sp, #32
   14ce0:	mov	r7, #0
   14ce4:	ldr	ip, [sp, #196]	; 0xc4
   14ce8:	sub	r3, r3, #1
   14cec:	str	r3, [sp, #32]
   14cf0:	ldr	r3, [sp, #196]	; 0xc4
   14cf4:	ldr	r3, [r3]
   14cf8:	str	r3, [sp, #112]	; 0x70
   14cfc:	ldr	r3, [r5]
   14d00:	str	r3, [sp, #20]
   14d04:	add	r3, sp, #112	; 0x70
   14d08:	mov	r2, r3
   14d0c:	str	r3, [sp, #24]
   14d10:	mov	r3, #1
   14d14:	ldr	r0, [sp, #192]	; 0xc0
   14d18:	cmp	r3, r0
   14d1c:	blt	14e78 <ReadDataSlabN+0x17ec>
   14d20:	ldr	r3, [sp]
   14d24:	mov	r2, #1
   14d28:	ldr	r0, [fp]
   14d2c:	mul	r1, r3, r7
   14d30:	bl	1694 <fseek@plt>
   14d34:	ldr	r3, [r6]
   14d38:	cmp	r3, #1
   14d3c:	mov	r3, #0
   14d40:	beq	14f54 <ReadDataSlabN+0x18c8>
   14d44:	str	r3, [sp, #16]
   14d48:	ldr	r3, [sp, #16]
   14d4c:	ldr	r2, [sp, #20]
   14d50:	cmp	r3, r2
   14d54:	bge	13b04 <ReadDataSlabN+0x478>
   14d58:	ldr	r1, [r4]
   14d5c:	cmp	r1, #0
   14d60:	beq	14d80 <ReadDataSlabN+0x16f4>
   14d64:	ldr	r3, [sp]
   14d68:	mov	r2, #1
   14d6c:	ldr	r0, [fp]
   14d70:	mul	r1, r3, r1
   14d74:	bl	1694 <fseek@plt>
   14d78:	ldr	r3, [r4]
   14d7c:	add	r7, r7, r3
   14d80:	ldr	r3, [sp, #4]
   14d84:	mov	r8, #0
   14d88:	ldr	r2, [sp, #16]
   14d8c:	add	r9, r3, r2, lsl #2
   14d90:	ldr	r1, [r5]
   14d94:	cmp	r1, r8
   14d98:	bgt	15074 <ReadDataSlabN+0x19e8>
   14d9c:	ldr	r3, [sp, #196]	; 0xc4
   14da0:	add	sl, sp, #72	; 0x48
   14da4:	mov	r8, #1
   14da8:	ldr	r2, [r4]
   14dac:	ldr	r0, [fp]
   14db0:	ldr	r3, [r3]
   14db4:	sub	r3, r3, r2
   14db8:	ldr	r2, [r6]
   14dbc:	mls	r1, r2, r1, r3
   14dc0:	ldr	r3, [sp]
   14dc4:	mov	r2, #1
   14dc8:	add	r7, r7, r1
   14dcc:	mul	r1, r3, r1
   14dd0:	bl	1694 <fseek@plt>
   14dd4:	ldr	r3, [sp, #24]
   14dd8:	str	r3, [sp, #12]
   14ddc:	ldr	r3, [sp, #192]	; 0xc0
   14de0:	cmp	r8, r3
   14de4:	bge	15110 <ReadDataSlabN+0x1a84>
   14de8:	ldr	r3, [sl, #4]
   14dec:	ldr	r1, [r5, r8, lsl #2]
   14df0:	add	r3, r3, #1
   14df4:	sdiv	r2, r3, r1
   14df8:	str	r3, [sl, #4]
   14dfc:	mls	r3, r1, r2, r3
   14e00:	cmp	r3, #0
   14e04:	bne	150ec <ReadDataSlabN+0x1a60>
   14e08:	str	r3, [sl, #4]
   14e0c:	ldr	r3, [sp, #12]
   14e10:	ldr	r1, [r4, r8, lsl #2]
   14e14:	ldr	r9, [r3, #4]
   14e18:	sdiv	r3, r7, r9
   14e1c:	mls	r3, r9, r3, r7
   14e20:	cmp	r3, #0
   14e24:	beq	150b8 <ReadDataSlabN+0x1a2c>
   14e28:	sub	r9, r9, r3
   14e2c:	ldr	r3, [sp, #12]
   14e30:	mov	r2, #1
   14e34:	ldr	r0, [fp]
   14e38:	ldr	r3, [r3]
   14e3c:	mla	r1, r1, r3, r9
   14e40:	str	r3, [sp, #28]
   14e44:	ldr	r3, [sp]
   14e48:	mul	r1, r3, r1
   14e4c:	bl	1694 <fseek@plt>
   14e50:	ldr	r2, [r4, r8, lsl #2]
   14e54:	ldr	r3, [sp, #28]
   14e58:	mla	r9, r2, r3, r9
   14e5c:	add	r7, r7, r9
   14e60:	ldr	r3, [sp, #12]
   14e64:	add	r8, r8, #1
   14e68:	add	sl, sl, #4
   14e6c:	add	r3, r3, #4
   14e70:	str	r3, [sp, #12]
   14e74:	b	14ddc <ReadDataSlabN+0x1750>
   14e78:	ldr	r0, [r6, r3, lsl #2]
   14e7c:	mov	r8, r2
   14e80:	sub	r0, r0, #1
   14e84:	str	r0, [r1, #4]
   14e88:	ldr	r0, [ip], #4
   14e8c:	str	r0, [r2, #4]
   14e90:	mov	r0, ip
   14e94:	ldr	lr, [sp, #196]	; 0xc4
   14e98:	cmp	lr, r0
   14e9c:	bne	14ecc <ReadDataSlabN+0x1840>
   14ea0:	ldr	r0, [r5, r3, lsl #2]
   14ea4:	add	r2, r2, #4
   14ea8:	add	r1, r1, #4
   14eac:	ldr	lr, [sp, #20]
   14eb0:	mul	r0, r0, lr
   14eb4:	ldr	lr, [r4, r3, lsl #2]
   14eb8:	add	r3, r3, #1
   14ebc:	str	r0, [sp, #20]
   14ec0:	ldr	r0, [r8]
   14ec4:	mla	r7, lr, r0, r7
   14ec8:	b	14d14 <ReadDataSlabN+0x1688>
   14ecc:	mov	r9, r0
   14ed0:	ldr	lr, [r0, #-4]!
   14ed4:	ldr	sl, [r1, #4]
   14ed8:	mul	lr, lr, sl
   14edc:	ldr	sl, [r2, #4]
   14ee0:	str	lr, [r1, #4]
   14ee4:	ldr	lr, [r9]
   14ee8:	mul	lr, lr, sl
   14eec:	str	lr, [r2, #4]
   14ef0:	b	14e94 <ReadDataSlabN+0x1808>
   14ef4:	cmp	r1, #0
   14ef8:	beq	15064 <ReadDataSlabN+0x19d8>
   14efc:	ldr	r8, [sl]
   14f00:	mov	r2, #1
   14f04:	ldr	r3, [sp]
   14f08:	ldr	r0, [fp]
   14f0c:	mul	r1, r1, r8
   14f10:	mul	r1, r3, r1
   14f14:	bl	1694 <fseek@plt>
   14f18:	ldr	r3, [r4, r6, lsl #2]
   14f1c:	mla	r7, r3, r8, r7
   14f20:	b	15064 <ReadDataSlabN+0x19d8>
   14f24:	add	r3, sp, #152	; 0x98
   14f28:	mov	r2, #1
   14f2c:	ldr	r0, [fp]
   14f30:	add	r6, r3, r6, lsl #2
   14f34:	ldr	r3, [sp]
   14f38:	ldr	r1, [r6, #-120]	; 0xffffff88
   14f3c:	add	r7, r7, r1
   14f40:	mul	r1, r3, r1
   14f44:	bl	1694 <fseek@plt>
   14f48:	ldr	r3, [r5]
   14f4c:	ldr	r2, [sp, #12]
   14f50:	add	r3, r2, r3
   14f54:	str	r3, [sp, #12]
   14f58:	ldr	r3, [sp, #12]
   14f5c:	ldr	r2, [sp, #20]
   14f60:	cmp	r3, r2
   14f64:	bge	13b04 <ReadDataSlabN+0x478>
   14f68:	ldr	r1, [r4]
   14f6c:	cmp	r1, #0
   14f70:	beq	14f90 <ReadDataSlabN+0x1904>
   14f74:	ldr	r3, [sp]
   14f78:	mov	r2, #1
   14f7c:	ldr	r0, [fp]
   14f80:	mul	r1, r3, r1
   14f84:	bl	1694 <fseek@plt>
   14f88:	ldr	r3, [r4]
   14f8c:	add	r7, r7, r3
   14f90:	ldmib	sp, {r1, r2}
   14f94:	add	r9, sp, #72	; 0x48
   14f98:	mov	r6, #1
   14f9c:	ldr	r0, [sp, #12]
   14fa0:	ldr	r3, [r5]
   14fa4:	add	r1, r1, r0, lsl #2
   14fa8:	mov	r0, fp
   14fac:	bl	11b64 <ReadUInt32Data>
   14fb0:	ldr	r3, [sp, #196]	; 0xc4
   14fb4:	ldr	r1, [r4]
   14fb8:	ldr	r0, [fp]
   14fbc:	ldr	r3, [r3]
   14fc0:	sub	r2, r3, r1
   14fc4:	add	r7, r2, r7
   14fc8:	ldr	r2, [r5]
   14fcc:	sub	r3, r3, r2
   14fd0:	mov	r2, #1
   14fd4:	sub	r1, r3, r1
   14fd8:	ldr	r3, [sp]
   14fdc:	mul	r1, r3, r1
   14fe0:	bl	1694 <fseek@plt>
   14fe4:	ldr	sl, [sp, #24]
   14fe8:	ldr	r3, [sp, #192]	; 0xc0
   14fec:	cmp	r6, r3
   14ff0:	bge	14f48 <ReadDataSlabN+0x18bc>
   14ff4:	ldr	r3, [r9, #4]
   14ff8:	ldr	r1, [r5, r6, lsl #2]
   14ffc:	add	r3, r3, #1
   15000:	sdiv	r2, r3, r1
   15004:	str	r3, [r9, #4]
   15008:	mls	r3, r1, r2, r3
   1500c:	cmp	r3, #0
   15010:	bne	14f24 <ReadDataSlabN+0x1898>
   15014:	ldr	r8, [sl, #4]
   15018:	str	r3, [r9, #4]
   1501c:	ldr	r1, [r4, r6, lsl #2]
   15020:	sdiv	r3, r7, r8
   15024:	mls	r3, r8, r3, r7
   15028:	cmp	r3, #0
   1502c:	beq	14ef4 <ReadDataSlabN+0x1868>
   15030:	sub	r8, r8, r3
   15034:	ldr	r3, [sl]
   15038:	mov	r2, #1
   1503c:	ldr	r0, [fp]
   15040:	mla	r1, r1, r3, r8
   15044:	str	r3, [sp, #16]
   15048:	ldr	r3, [sp]
   1504c:	mul	r1, r3, r1
   15050:	bl	1694 <fseek@plt>
   15054:	ldr	r2, [r4, r6, lsl #2]
   15058:	ldr	r3, [sp, #16]
   1505c:	mla	r8, r2, r3, r8
   15060:	add	r7, r7, r8
   15064:	add	r6, r6, #1
   15068:	add	sl, sl, #4
   1506c:	add	r9, r9, #4
   15070:	b	14fe8 <ReadDataSlabN+0x195c>
   15074:	mov	r1, r9
   15078:	mov	r3, #1
   1507c:	ldr	r2, [sp, #8]
   15080:	mov	r0, fp
   15084:	add	r8, r8, #1
   15088:	bl	11b64 <ReadUInt32Data>
   1508c:	ldr	r1, [r6]
   15090:	mov	r2, #1
   15094:	add	r9, r9, #4
   15098:	ldr	r3, [sp]
   1509c:	ldr	r0, [fp]
   150a0:	sub	r1, r1, #1
   150a4:	mul	r1, r3, r1
   150a8:	bl	1694 <fseek@plt>
   150ac:	ldr	r3, [r6]
   150b0:	add	r7, r7, r3
   150b4:	b	14d90 <ReadDataSlabN+0x1704>
   150b8:	cmp	r1, #0
   150bc:	beq	14e60 <ReadDataSlabN+0x17d4>
   150c0:	ldr	r3, [sp, #12]
   150c4:	mov	r2, #1
   150c8:	ldr	r0, [fp]
   150cc:	ldr	r9, [r3]
   150d0:	ldr	r3, [sp]
   150d4:	mul	r1, r1, r9
   150d8:	mul	r1, r3, r1
   150dc:	bl	1694 <fseek@plt>
   150e0:	ldr	r3, [r4, r8, lsl #2]
   150e4:	mla	r7, r3, r9, r7
   150e8:	b	14e60 <ReadDataSlabN+0x17d4>
   150ec:	add	r3, sp, #152	; 0x98
   150f0:	mov	r2, #1
   150f4:	ldr	r0, [fp]
   150f8:	add	r8, r3, r8, lsl #2
   150fc:	ldr	r3, [sp]
   15100:	ldr	r1, [r8, #-120]	; 0xffffff88
   15104:	add	r7, r7, r1
   15108:	mul	r1, r3, r1
   1510c:	bl	1694 <fseek@plt>
   15110:	ldr	r3, [r5]
   15114:	ldr	r2, [sp, #16]
   15118:	add	r3, r2, r3
   1511c:	b	14d44 <ReadDataSlabN+0x16b8>
   15120:	ldr	r3, [r6]
   15124:	add	r1, sp, #32
   15128:	mov	r7, #0
   1512c:	ldr	ip, [sp, #196]	; 0xc4
   15130:	sub	r3, r3, #1
   15134:	str	r3, [sp, #32]
   15138:	ldr	r3, [sp, #196]	; 0xc4
   1513c:	ldr	r3, [r3]
   15140:	str	r3, [sp, #112]	; 0x70
   15144:	ldr	r3, [r5]
   15148:	str	r3, [sp, #20]
   1514c:	add	r3, sp, #112	; 0x70
   15150:	mov	r2, r3
   15154:	str	r3, [sp, #24]
   15158:	mov	r3, #1
   1515c:	ldr	r0, [sp, #192]	; 0xc0
   15160:	cmp	r3, r0
   15164:	blt	152c0 <ReadDataSlabN+0x1c34>
   15168:	ldr	r3, [sp]
   1516c:	mov	r2, #1
   15170:	ldr	r0, [fp]
   15174:	mul	r1, r3, r7
   15178:	bl	1694 <fseek@plt>
   1517c:	ldr	r3, [r6]
   15180:	cmp	r3, #1
   15184:	mov	r3, #0
   15188:	beq	1539c <ReadDataSlabN+0x1d10>
   1518c:	str	r3, [sp, #16]
   15190:	ldr	r3, [sp, #16]
   15194:	ldr	r2, [sp, #20]
   15198:	cmp	r3, r2
   1519c:	bge	13b04 <ReadDataSlabN+0x478>
   151a0:	ldr	r1, [r4]
   151a4:	cmp	r1, #0
   151a8:	beq	151c8 <ReadDataSlabN+0x1b3c>
   151ac:	ldr	r3, [sp]
   151b0:	mov	r2, #1
   151b4:	ldr	r0, [fp]
   151b8:	mul	r1, r3, r1
   151bc:	bl	1694 <fseek@plt>
   151c0:	ldr	r3, [r4]
   151c4:	add	r7, r7, r3
   151c8:	ldr	r3, [sp, #4]
   151cc:	mov	r8, #0
   151d0:	ldr	r2, [sp, #16]
   151d4:	add	r9, r3, r2, lsl #1
   151d8:	ldr	r1, [r5]
   151dc:	cmp	r1, r8
   151e0:	bgt	154bc <ReadDataSlabN+0x1e30>
   151e4:	ldr	r3, [sp, #196]	; 0xc4
   151e8:	add	sl, sp, #72	; 0x48
   151ec:	mov	r8, #1
   151f0:	ldr	r2, [r4]
   151f4:	ldr	r0, [fp]
   151f8:	ldr	r3, [r3]
   151fc:	sub	r3, r3, r2
   15200:	ldr	r2, [r6]
   15204:	mls	r1, r2, r1, r3
   15208:	ldr	r3, [sp]
   1520c:	mov	r2, #1
   15210:	add	r7, r7, r1
   15214:	mul	r1, r3, r1
   15218:	bl	1694 <fseek@plt>
   1521c:	ldr	r3, [sp, #24]
   15220:	str	r3, [sp, #12]
   15224:	ldr	r3, [sp, #192]	; 0xc0
   15228:	cmp	r8, r3
   1522c:	bge	15558 <ReadDataSlabN+0x1ecc>
   15230:	ldr	r3, [sl, #4]
   15234:	ldr	r1, [r5, r8, lsl #2]
   15238:	add	r3, r3, #1
   1523c:	sdiv	r2, r3, r1
   15240:	str	r3, [sl, #4]
   15244:	mls	r3, r1, r2, r3
   15248:	cmp	r3, #0
   1524c:	bne	15534 <ReadDataSlabN+0x1ea8>
   15250:	str	r3, [sl, #4]
   15254:	ldr	r3, [sp, #12]
   15258:	ldr	r1, [r4, r8, lsl #2]
   1525c:	ldr	r9, [r3, #4]
   15260:	sdiv	r3, r7, r9
   15264:	mls	r3, r9, r3, r7
   15268:	cmp	r3, #0
   1526c:	beq	15500 <ReadDataSlabN+0x1e74>
   15270:	sub	r9, r9, r3
   15274:	ldr	r3, [sp, #12]
   15278:	mov	r2, #1
   1527c:	ldr	r0, [fp]
   15280:	ldr	r3, [r3]
   15284:	mla	r1, r1, r3, r9
   15288:	str	r3, [sp, #28]
   1528c:	ldr	r3, [sp]
   15290:	mul	r1, r3, r1
   15294:	bl	1694 <fseek@plt>
   15298:	ldr	r2, [r4, r8, lsl #2]
   1529c:	ldr	r3, [sp, #28]
   152a0:	mla	r9, r2, r3, r9
   152a4:	add	r7, r7, r9
   152a8:	ldr	r3, [sp, #12]
   152ac:	add	r8, r8, #1
   152b0:	add	sl, sl, #4
   152b4:	add	r3, r3, #4
   152b8:	str	r3, [sp, #12]
   152bc:	b	15224 <ReadDataSlabN+0x1b98>
   152c0:	ldr	r0, [r6, r3, lsl #2]
   152c4:	mov	r8, r2
   152c8:	sub	r0, r0, #1
   152cc:	str	r0, [r1, #4]
   152d0:	ldr	r0, [ip], #4
   152d4:	str	r0, [r2, #4]
   152d8:	mov	r0, ip
   152dc:	ldr	lr, [sp, #196]	; 0xc4
   152e0:	cmp	lr, r0
   152e4:	bne	15314 <ReadDataSlabN+0x1c88>
   152e8:	ldr	r0, [r5, r3, lsl #2]
   152ec:	add	r2, r2, #4
   152f0:	add	r1, r1, #4
   152f4:	ldr	lr, [sp, #20]
   152f8:	mul	r0, r0, lr
   152fc:	ldr	lr, [r4, r3, lsl #2]
   15300:	add	r3, r3, #1
   15304:	str	r0, [sp, #20]
   15308:	ldr	r0, [r8]
   1530c:	mla	r7, lr, r0, r7
   15310:	b	1515c <ReadDataSlabN+0x1ad0>
   15314:	mov	r9, r0
   15318:	ldr	lr, [r0, #-4]!
   1531c:	ldr	sl, [r1, #4]
   15320:	mul	lr, lr, sl
   15324:	ldr	sl, [r2, #4]
   15328:	str	lr, [r1, #4]
   1532c:	ldr	lr, [r9]
   15330:	mul	lr, lr, sl
   15334:	str	lr, [r2, #4]
   15338:	b	152dc <ReadDataSlabN+0x1c50>
   1533c:	cmp	r1, #0
   15340:	beq	154ac <ReadDataSlabN+0x1e20>
   15344:	ldr	r8, [sl]
   15348:	mov	r2, #1
   1534c:	ldr	r3, [sp]
   15350:	ldr	r0, [fp]
   15354:	mul	r1, r1, r8
   15358:	mul	r1, r3, r1
   1535c:	bl	1694 <fseek@plt>
   15360:	ldr	r3, [r4, r6, lsl #2]
   15364:	mla	r7, r3, r8, r7
   15368:	b	154ac <ReadDataSlabN+0x1e20>
   1536c:	add	r3, sp, #152	; 0x98
   15370:	mov	r2, #1
   15374:	ldr	r0, [fp]
   15378:	add	r6, r3, r6, lsl #2
   1537c:	ldr	r3, [sp]
   15380:	ldr	r1, [r6, #-120]	; 0xffffff88
   15384:	add	r7, r7, r1
   15388:	mul	r1, r3, r1
   1538c:	bl	1694 <fseek@plt>
   15390:	ldr	r3, [r5]
   15394:	ldr	r2, [sp, #12]
   15398:	add	r3, r2, r3
   1539c:	str	r3, [sp, #12]
   153a0:	ldr	r3, [sp, #12]
   153a4:	ldr	r2, [sp, #20]
   153a8:	cmp	r3, r2
   153ac:	bge	13b04 <ReadDataSlabN+0x478>
   153b0:	ldr	r1, [r4]
   153b4:	cmp	r1, #0
   153b8:	beq	153d8 <ReadDataSlabN+0x1d4c>
   153bc:	ldr	r3, [sp]
   153c0:	mov	r2, #1
   153c4:	ldr	r0, [fp]
   153c8:	mul	r1, r3, r1
   153cc:	bl	1694 <fseek@plt>
   153d0:	ldr	r3, [r4]
   153d4:	add	r7, r7, r3
   153d8:	ldmib	sp, {r1, r2}
   153dc:	add	r9, sp, #72	; 0x48
   153e0:	mov	r6, #1
   153e4:	ldr	r0, [sp, #12]
   153e8:	ldr	r3, [r5]
   153ec:	add	r1, r1, r0, lsl #1
   153f0:	mov	r0, fp
   153f4:	bl	1206c <ReadInt16Data>
   153f8:	ldr	r3, [sp, #196]	; 0xc4
   153fc:	ldr	r1, [r4]
   15400:	ldr	r0, [fp]
   15404:	ldr	r3, [r3]
   15408:	sub	r2, r3, r1
   1540c:	add	r7, r2, r7
   15410:	ldr	r2, [r5]
   15414:	sub	r3, r3, r2
   15418:	mov	r2, #1
   1541c:	sub	r1, r3, r1
   15420:	ldr	r3, [sp]
   15424:	mul	r1, r3, r1
   15428:	bl	1694 <fseek@plt>
   1542c:	ldr	sl, [sp, #24]
   15430:	ldr	r3, [sp, #192]	; 0xc0
   15434:	cmp	r6, r3
   15438:	bge	15390 <ReadDataSlabN+0x1d04>
   1543c:	ldr	r3, [r9, #4]
   15440:	ldr	r1, [r5, r6, lsl #2]
   15444:	add	r3, r3, #1
   15448:	sdiv	r2, r3, r1
   1544c:	str	r3, [r9, #4]
   15450:	mls	r3, r1, r2, r3
   15454:	cmp	r3, #0
   15458:	bne	1536c <ReadDataSlabN+0x1ce0>
   1545c:	ldr	r8, [sl, #4]
   15460:	str	r3, [r9, #4]
   15464:	ldr	r1, [r4, r6, lsl #2]
   15468:	sdiv	r3, r7, r8
   1546c:	mls	r3, r8, r3, r7
   15470:	cmp	r3, #0
   15474:	beq	1533c <ReadDataSlabN+0x1cb0>
   15478:	sub	r8, r8, r3
   1547c:	ldr	r3, [sl]
   15480:	mov	r2, #1
   15484:	ldr	r0, [fp]
   15488:	mla	r1, r1, r3, r8
   1548c:	str	r3, [sp, #16]
   15490:	ldr	r3, [sp]
   15494:	mul	r1, r3, r1
   15498:	bl	1694 <fseek@plt>
   1549c:	ldr	r2, [r4, r6, lsl #2]
   154a0:	ldr	r3, [sp, #16]
   154a4:	mla	r8, r2, r3, r8
   154a8:	add	r7, r7, r8
   154ac:	add	r6, r6, #1
   154b0:	add	sl, sl, #4
   154b4:	add	r9, r9, #4
   154b8:	b	15430 <ReadDataSlabN+0x1da4>
   154bc:	mov	r1, r9
   154c0:	mov	r3, #1
   154c4:	ldr	r2, [sp, #8]
   154c8:	mov	r0, fp
   154cc:	add	r8, r8, #1
   154d0:	bl	1206c <ReadInt16Data>
   154d4:	ldr	r1, [r6]
   154d8:	mov	r2, #1
   154dc:	add	r9, r9, #2
   154e0:	ldr	r3, [sp]
   154e4:	ldr	r0, [fp]
   154e8:	sub	r1, r1, #1
   154ec:	mul	r1, r3, r1
   154f0:	bl	1694 <fseek@plt>
   154f4:	ldr	r3, [r6]
   154f8:	add	r7, r7, r3
   154fc:	b	151d8 <ReadDataSlabN+0x1b4c>
   15500:	cmp	r1, #0
   15504:	beq	152a8 <ReadDataSlabN+0x1c1c>
   15508:	ldr	r3, [sp, #12]
   1550c:	mov	r2, #1
   15510:	ldr	r0, [fp]
   15514:	ldr	r9, [r3]
   15518:	ldr	r3, [sp]
   1551c:	mul	r1, r1, r9
   15520:	mul	r1, r3, r1
   15524:	bl	1694 <fseek@plt>
   15528:	ldr	r3, [r4, r8, lsl #2]
   1552c:	mla	r7, r3, r9, r7
   15530:	b	152a8 <ReadDataSlabN+0x1c1c>
   15534:	add	r3, sp, #152	; 0x98
   15538:	mov	r2, #1
   1553c:	ldr	r0, [fp]
   15540:	add	r8, r3, r8, lsl #2
   15544:	ldr	r3, [sp]
   15548:	ldr	r1, [r8, #-120]	; 0xffffff88
   1554c:	add	r7, r7, r1
   15550:	mul	r1, r3, r1
   15554:	bl	1694 <fseek@plt>
   15558:	ldr	r3, [r5]
   1555c:	ldr	r2, [sp, #16]
   15560:	add	r3, r2, r3
   15564:	b	1518c <ReadDataSlabN+0x1b00>
   15568:	ldr	r3, [r6]
   1556c:	add	r1, sp, #32
   15570:	mov	r7, #0
   15574:	ldr	ip, [sp, #196]	; 0xc4
   15578:	sub	r3, r3, #1
   1557c:	str	r3, [sp, #32]
   15580:	ldr	r3, [sp, #196]	; 0xc4
   15584:	ldr	r3, [r3]
   15588:	str	r3, [sp, #112]	; 0x70
   1558c:	ldr	r3, [r5]
   15590:	str	r3, [sp, #20]
   15594:	add	r3, sp, #112	; 0x70
   15598:	mov	r2, r3
   1559c:	str	r3, [sp, #24]
   155a0:	mov	r3, #1
   155a4:	ldr	r0, [sp, #192]	; 0xc0
   155a8:	cmp	r3, r0
   155ac:	blt	15708 <ReadDataSlabN+0x207c>
   155b0:	ldr	r3, [sp]
   155b4:	mov	r2, #1
   155b8:	ldr	r0, [fp]
   155bc:	mul	r1, r3, r7
   155c0:	bl	1694 <fseek@plt>
   155c4:	ldr	r3, [r6]
   155c8:	cmp	r3, #1
   155cc:	mov	r3, #0
   155d0:	beq	157e4 <ReadDataSlabN+0x2158>
   155d4:	str	r3, [sp, #16]
   155d8:	ldr	r3, [sp, #16]
   155dc:	ldr	r2, [sp, #20]
   155e0:	cmp	r3, r2
   155e4:	bge	13b04 <ReadDataSlabN+0x478>
   155e8:	ldr	r1, [r4]
   155ec:	cmp	r1, #0
   155f0:	beq	15610 <ReadDataSlabN+0x1f84>
   155f4:	ldr	r3, [sp]
   155f8:	mov	r2, #1
   155fc:	ldr	r0, [fp]
   15600:	mul	r1, r3, r1
   15604:	bl	1694 <fseek@plt>
   15608:	ldr	r3, [r4]
   1560c:	add	r7, r7, r3
   15610:	ldr	r3, [sp, #4]
   15614:	mov	r8, #0
   15618:	ldr	r2, [sp, #16]
   1561c:	add	r9, r3, r2, lsl #1
   15620:	ldr	r1, [r5]
   15624:	cmp	r1, r8
   15628:	bgt	15904 <ReadDataSlabN+0x2278>
   1562c:	ldr	r3, [sp, #196]	; 0xc4
   15630:	add	sl, sp, #72	; 0x48
   15634:	mov	r8, #1
   15638:	ldr	r2, [r4]
   1563c:	ldr	r0, [fp]
   15640:	ldr	r3, [r3]
   15644:	sub	r3, r3, r2
   15648:	ldr	r2, [r6]
   1564c:	mls	r1, r2, r1, r3
   15650:	ldr	r3, [sp]
   15654:	mov	r2, #1
   15658:	add	r7, r7, r1
   1565c:	mul	r1, r3, r1
   15660:	bl	1694 <fseek@plt>
   15664:	ldr	r3, [sp, #24]
   15668:	str	r3, [sp, #12]
   1566c:	ldr	r3, [sp, #192]	; 0xc0
   15670:	cmp	r8, r3
   15674:	bge	159a0 <ReadDataSlabN+0x2314>
   15678:	ldr	r3, [sl, #4]
   1567c:	ldr	r1, [r5, r8, lsl #2]
   15680:	add	r3, r3, #1
   15684:	sdiv	r2, r3, r1
   15688:	str	r3, [sl, #4]
   1568c:	mls	r3, r1, r2, r3
   15690:	cmp	r3, #0
   15694:	bne	1597c <ReadDataSlabN+0x22f0>
   15698:	str	r3, [sl, #4]
   1569c:	ldr	r3, [sp, #12]
   156a0:	ldr	r1, [r4, r8, lsl #2]
   156a4:	ldr	r9, [r3, #4]
   156a8:	sdiv	r3, r7, r9
   156ac:	mls	r3, r9, r3, r7
   156b0:	cmp	r3, #0
   156b4:	beq	15948 <ReadDataSlabN+0x22bc>
   156b8:	sub	r9, r9, r3
   156bc:	ldr	r3, [sp, #12]
   156c0:	mov	r2, #1
   156c4:	ldr	r0, [fp]
   156c8:	ldr	r3, [r3]
   156cc:	mla	r1, r1, r3, r9
   156d0:	str	r3, [sp, #28]
   156d4:	ldr	r3, [sp]
   156d8:	mul	r1, r3, r1
   156dc:	bl	1694 <fseek@plt>
   156e0:	ldr	r2, [r4, r8, lsl #2]
   156e4:	ldr	r3, [sp, #28]
   156e8:	mla	r9, r2, r3, r9
   156ec:	add	r7, r7, r9
   156f0:	ldr	r3, [sp, #12]
   156f4:	add	r8, r8, #1
   156f8:	add	sl, sl, #4
   156fc:	add	r3, r3, #4
   15700:	str	r3, [sp, #12]
   15704:	b	1566c <ReadDataSlabN+0x1fe0>
   15708:	ldr	r0, [r6, r3, lsl #2]
   1570c:	mov	r8, r2
   15710:	sub	r0, r0, #1
   15714:	str	r0, [r1, #4]
   15718:	ldr	r0, [ip], #4
   1571c:	str	r0, [r2, #4]
   15720:	mov	r0, ip
   15724:	ldr	lr, [sp, #196]	; 0xc4
   15728:	cmp	lr, r0
   1572c:	bne	1575c <ReadDataSlabN+0x20d0>
   15730:	ldr	r0, [r5, r3, lsl #2]
   15734:	add	r2, r2, #4
   15738:	add	r1, r1, #4
   1573c:	ldr	lr, [sp, #20]
   15740:	mul	r0, r0, lr
   15744:	ldr	lr, [r4, r3, lsl #2]
   15748:	add	r3, r3, #1
   1574c:	str	r0, [sp, #20]
   15750:	ldr	r0, [r8]
   15754:	mla	r7, lr, r0, r7
   15758:	b	155a4 <ReadDataSlabN+0x1f18>
   1575c:	mov	r9, r0
   15760:	ldr	lr, [r0, #-4]!
   15764:	ldr	sl, [r1, #4]
   15768:	mul	lr, lr, sl
   1576c:	ldr	sl, [r2, #4]
   15770:	str	lr, [r1, #4]
   15774:	ldr	lr, [r9]
   15778:	mul	lr, lr, sl
   1577c:	str	lr, [r2, #4]
   15780:	b	15724 <ReadDataSlabN+0x2098>
   15784:	cmp	r1, #0
   15788:	beq	158f4 <ReadDataSlabN+0x2268>
   1578c:	ldr	r8, [sl]
   15790:	mov	r2, #1
   15794:	ldr	r3, [sp]
   15798:	ldr	r0, [fp]
   1579c:	mul	r1, r1, r8
   157a0:	mul	r1, r3, r1
   157a4:	bl	1694 <fseek@plt>
   157a8:	ldr	r3, [r4, r6, lsl #2]
   157ac:	mla	r7, r3, r8, r7
   157b0:	b	158f4 <ReadDataSlabN+0x2268>
   157b4:	add	r3, sp, #152	; 0x98
   157b8:	mov	r2, #1
   157bc:	ldr	r0, [fp]
   157c0:	add	r6, r3, r6, lsl #2
   157c4:	ldr	r3, [sp]
   157c8:	ldr	r1, [r6, #-120]	; 0xffffff88
   157cc:	add	r7, r7, r1
   157d0:	mul	r1, r3, r1
   157d4:	bl	1694 <fseek@plt>
   157d8:	ldr	r3, [r5]
   157dc:	ldr	r2, [sp, #12]
   157e0:	add	r3, r2, r3
   157e4:	str	r3, [sp, #12]
   157e8:	ldr	r3, [sp, #12]
   157ec:	ldr	r2, [sp, #20]
   157f0:	cmp	r3, r2
   157f4:	bge	13b04 <ReadDataSlabN+0x478>
   157f8:	ldr	r1, [r4]
   157fc:	cmp	r1, #0
   15800:	beq	15820 <ReadDataSlabN+0x2194>
   15804:	ldr	r3, [sp]
   15808:	mov	r2, #1
   1580c:	ldr	r0, [fp]
   15810:	mul	r1, r3, r1
   15814:	bl	1694 <fseek@plt>
   15818:	ldr	r3, [r4]
   1581c:	add	r7, r7, r3
   15820:	ldmib	sp, {r1, r2}
   15824:	add	r9, sp, #72	; 0x48
   15828:	mov	r6, #1
   1582c:	ldr	r0, [sp, #12]
   15830:	ldr	r3, [r5]
   15834:	add	r1, r1, r0, lsl #1
   15838:	mov	r0, fp
   1583c:	bl	12574 <ReadUInt16Data>
   15840:	ldr	r3, [sp, #196]	; 0xc4
   15844:	ldr	r1, [r4]
   15848:	ldr	r0, [fp]
   1584c:	ldr	r3, [r3]
   15850:	sub	r2, r3, r1
   15854:	add	r7, r2, r7
   15858:	ldr	r2, [r5]
   1585c:	sub	r3, r3, r2
   15860:	mov	r2, #1
   15864:	sub	r1, r3, r1
   15868:	ldr	r3, [sp]
   1586c:	mul	r1, r3, r1
   15870:	bl	1694 <fseek@plt>
   15874:	ldr	sl, [sp, #24]
   15878:	ldr	r3, [sp, #192]	; 0xc0
   1587c:	cmp	r6, r3
   15880:	bge	157d8 <ReadDataSlabN+0x214c>
   15884:	ldr	r3, [r9, #4]
   15888:	ldr	r1, [r5, r6, lsl #2]
   1588c:	add	r3, r3, #1
   15890:	sdiv	r2, r3, r1
   15894:	str	r3, [r9, #4]
   15898:	mls	r3, r1, r2, r3
   1589c:	cmp	r3, #0
   158a0:	bne	157b4 <ReadDataSlabN+0x2128>
   158a4:	ldr	r8, [sl, #4]
   158a8:	str	r3, [r9, #4]
   158ac:	ldr	r1, [r4, r6, lsl #2]
   158b0:	sdiv	r3, r7, r8
   158b4:	mls	r3, r8, r3, r7
   158b8:	cmp	r3, #0
   158bc:	beq	15784 <ReadDataSlabN+0x20f8>
   158c0:	sub	r8, r8, r3
   158c4:	ldr	r3, [sl]
   158c8:	mov	r2, #1
   158cc:	ldr	r0, [fp]
   158d0:	mla	r1, r1, r3, r8
   158d4:	str	r3, [sp, #16]
   158d8:	ldr	r3, [sp]
   158dc:	mul	r1, r3, r1
   158e0:	bl	1694 <fseek@plt>
   158e4:	ldr	r2, [r4, r6, lsl #2]
   158e8:	ldr	r3, [sp, #16]
   158ec:	mla	r8, r2, r3, r8
   158f0:	add	r7, r7, r8
   158f4:	add	r6, r6, #1
   158f8:	add	sl, sl, #4
   158fc:	add	r9, r9, #4
   15900:	b	15878 <ReadDataSlabN+0x21ec>
   15904:	mov	r1, r9
   15908:	mov	r3, #1
   1590c:	ldr	r2, [sp, #8]
   15910:	mov	r0, fp
   15914:	add	r8, r8, #1
   15918:	bl	12574 <ReadUInt16Data>
   1591c:	ldr	r1, [r6]
   15920:	mov	r2, #1
   15924:	add	r9, r9, #2
   15928:	ldr	r3, [sp]
   1592c:	ldr	r0, [fp]
   15930:	sub	r1, r1, #1
   15934:	mul	r1, r3, r1
   15938:	bl	1694 <fseek@plt>
   1593c:	ldr	r3, [r6]
   15940:	add	r7, r7, r3
   15944:	b	15620 <ReadDataSlabN+0x1f94>
   15948:	cmp	r1, #0
   1594c:	beq	156f0 <ReadDataSlabN+0x2064>
   15950:	ldr	r3, [sp, #12]
   15954:	mov	r2, #1
   15958:	ldr	r0, [fp]
   1595c:	ldr	r9, [r3]
   15960:	ldr	r3, [sp]
   15964:	mul	r1, r1, r9
   15968:	mul	r1, r3, r1
   1596c:	bl	1694 <fseek@plt>
   15970:	ldr	r3, [r4, r8, lsl #2]
   15974:	mla	r7, r3, r9, r7
   15978:	b	156f0 <ReadDataSlabN+0x2064>
   1597c:	add	r3, sp, #152	; 0x98
   15980:	mov	r2, #1
   15984:	ldr	r0, [fp]
   15988:	add	r8, r3, r8, lsl #2
   1598c:	ldr	r3, [sp]
   15990:	ldr	r1, [r8, #-120]	; 0xffffff88
   15994:	add	r7, r7, r1
   15998:	mul	r1, r3, r1
   1599c:	bl	1694 <fseek@plt>
   159a0:	ldr	r3, [r5]
   159a4:	ldr	r2, [sp, #16]
   159a8:	add	r3, r2, r3
   159ac:	b	155d4 <ReadDataSlabN+0x1f48>
   159b0:	ldr	r3, [r6]
   159b4:	add	r1, sp, #32
   159b8:	mov	r7, #0
   159bc:	ldr	ip, [sp, #196]	; 0xc4
   159c0:	sub	r3, r3, #1
   159c4:	str	r3, [sp, #32]
   159c8:	ldr	r3, [sp, #196]	; 0xc4
   159cc:	ldr	r3, [r3]
   159d0:	str	r3, [sp, #112]	; 0x70
   159d4:	ldr	r3, [r5]
   159d8:	str	r3, [sp, #20]
   159dc:	add	r3, sp, #112	; 0x70
   159e0:	mov	r2, r3
   159e4:	str	r3, [sp, #24]
   159e8:	mov	r3, #1
   159ec:	ldr	r0, [sp, #192]	; 0xc0
   159f0:	cmp	r3, r0
   159f4:	blt	15b50 <ReadDataSlabN+0x24c4>
   159f8:	ldr	r3, [sp]
   159fc:	mov	r2, #1
   15a00:	ldr	r0, [fp]
   15a04:	mul	r1, r3, r7
   15a08:	bl	1694 <fseek@plt>
   15a0c:	ldr	r3, [r6]
   15a10:	cmp	r3, #1
   15a14:	mov	r3, #0
   15a18:	beq	15c2c <ReadDataSlabN+0x25a0>
   15a1c:	str	r3, [sp, #16]
   15a20:	ldr	r3, [sp, #16]
   15a24:	ldr	r2, [sp, #20]
   15a28:	cmp	r3, r2
   15a2c:	bge	13b04 <ReadDataSlabN+0x478>
   15a30:	ldr	r1, [r4]
   15a34:	cmp	r1, #0
   15a38:	beq	15a58 <ReadDataSlabN+0x23cc>
   15a3c:	ldr	r3, [sp]
   15a40:	mov	r2, #1
   15a44:	ldr	r0, [fp]
   15a48:	mul	r1, r3, r1
   15a4c:	bl	1694 <fseek@plt>
   15a50:	ldr	r3, [r4]
   15a54:	add	r7, r7, r3
   15a58:	ldr	r3, [sp, #4]
   15a5c:	mov	r8, #0
   15a60:	ldr	r2, [sp, #16]
   15a64:	add	r9, r3, r2
   15a68:	ldr	r1, [r5]
   15a6c:	cmp	r1, r8
   15a70:	bgt	15d4c <ReadDataSlabN+0x26c0>
   15a74:	ldr	r3, [sp, #196]	; 0xc4
   15a78:	add	sl, sp, #72	; 0x48
   15a7c:	mov	r8, #1
   15a80:	ldr	r2, [r4]
   15a84:	ldr	r0, [fp]
   15a88:	ldr	r3, [r3]
   15a8c:	sub	r3, r3, r2
   15a90:	ldr	r2, [r6]
   15a94:	mls	r1, r2, r1, r3
   15a98:	ldr	r3, [sp]
   15a9c:	mov	r2, #1
   15aa0:	add	r7, r7, r1
   15aa4:	mul	r1, r3, r1
   15aa8:	bl	1694 <fseek@plt>
   15aac:	ldr	r3, [sp, #24]
   15ab0:	str	r3, [sp, #12]
   15ab4:	ldr	r3, [sp, #192]	; 0xc0
   15ab8:	cmp	r8, r3
   15abc:	bge	15de4 <ReadDataSlabN+0x2758>
   15ac0:	ldr	r3, [sl, #4]
   15ac4:	ldr	r1, [r5, r8, lsl #2]
   15ac8:	add	r3, r3, #1
   15acc:	sdiv	r2, r3, r1
   15ad0:	str	r3, [sl, #4]
   15ad4:	mls	r3, r1, r2, r3
   15ad8:	cmp	r3, #0
   15adc:	bne	15dc0 <ReadDataSlabN+0x2734>
   15ae0:	str	r3, [sl, #4]
   15ae4:	ldr	r3, [sp, #12]
   15ae8:	ldr	r1, [r4, r8, lsl #2]
   15aec:	ldr	r9, [r3, #4]
   15af0:	sdiv	r3, r7, r9
   15af4:	mls	r3, r9, r3, r7
   15af8:	cmp	r3, #0
   15afc:	beq	15d8c <ReadDataSlabN+0x2700>
   15b00:	sub	r9, r9, r3
   15b04:	ldr	r3, [sp, #12]
   15b08:	mov	r2, #1
   15b0c:	ldr	r0, [fp]
   15b10:	ldr	r3, [r3]
   15b14:	mla	r1, r1, r3, r9
   15b18:	str	r3, [sp, #28]
   15b1c:	ldr	r3, [sp]
   15b20:	mul	r1, r3, r1
   15b24:	bl	1694 <fseek@plt>
   15b28:	ldr	r2, [r4, r8, lsl #2]
   15b2c:	ldr	r3, [sp, #28]
   15b30:	mla	r9, r2, r3, r9
   15b34:	add	r7, r7, r9
   15b38:	ldr	r3, [sp, #12]
   15b3c:	add	r8, r8, #1
   15b40:	add	sl, sl, #4
   15b44:	add	r3, r3, #4
   15b48:	str	r3, [sp, #12]
   15b4c:	b	15ab4 <ReadDataSlabN+0x2428>
   15b50:	ldr	r0, [r6, r3, lsl #2]
   15b54:	mov	r8, r2
   15b58:	sub	r0, r0, #1
   15b5c:	str	r0, [r1, #4]
   15b60:	ldr	r0, [ip], #4
   15b64:	str	r0, [r2, #4]
   15b68:	mov	r0, ip
   15b6c:	ldr	lr, [sp, #196]	; 0xc4
   15b70:	cmp	lr, r0
   15b74:	bne	15ba4 <ReadDataSlabN+0x2518>
   15b78:	ldr	r0, [r5, r3, lsl #2]
   15b7c:	add	r2, r2, #4
   15b80:	add	r1, r1, #4
   15b84:	ldr	lr, [sp, #20]
   15b88:	mul	r0, r0, lr
   15b8c:	ldr	lr, [r4, r3, lsl #2]
   15b90:	add	r3, r3, #1
   15b94:	str	r0, [sp, #20]
   15b98:	ldr	r0, [r8]
   15b9c:	mla	r7, lr, r0, r7
   15ba0:	b	159ec <ReadDataSlabN+0x2360>
   15ba4:	mov	r9, r0
   15ba8:	ldr	lr, [r0, #-4]!
   15bac:	ldr	sl, [r1, #4]
   15bb0:	mul	lr, lr, sl
   15bb4:	ldr	sl, [r2, #4]
   15bb8:	str	lr, [r1, #4]
   15bbc:	ldr	lr, [r9]
   15bc0:	mul	lr, lr, sl
   15bc4:	str	lr, [r2, #4]
   15bc8:	b	15b6c <ReadDataSlabN+0x24e0>
   15bcc:	cmp	r1, #0
   15bd0:	beq	15d3c <ReadDataSlabN+0x26b0>
   15bd4:	ldr	r8, [sl]
   15bd8:	mov	r2, #1
   15bdc:	ldr	r3, [sp]
   15be0:	ldr	r0, [fp]
   15be4:	mul	r1, r1, r8
   15be8:	mul	r1, r3, r1
   15bec:	bl	1694 <fseek@plt>
   15bf0:	ldr	r3, [r4, r6, lsl #2]
   15bf4:	mla	r7, r3, r8, r7
   15bf8:	b	15d3c <ReadDataSlabN+0x26b0>
   15bfc:	add	r3, sp, #152	; 0x98
   15c00:	mov	r2, #1
   15c04:	ldr	r0, [fp]
   15c08:	add	r6, r3, r6, lsl #2
   15c0c:	ldr	r3, [sp]
   15c10:	ldr	r1, [r6, #-120]	; 0xffffff88
   15c14:	add	r7, r7, r1
   15c18:	mul	r1, r3, r1
   15c1c:	bl	1694 <fseek@plt>
   15c20:	ldr	r3, [r5]
   15c24:	ldr	r2, [sp, #12]
   15c28:	add	r3, r2, r3
   15c2c:	str	r3, [sp, #12]
   15c30:	ldr	r3, [sp, #12]
   15c34:	ldr	r2, [sp, #20]
   15c38:	cmp	r3, r2
   15c3c:	bge	13b04 <ReadDataSlabN+0x478>
   15c40:	ldr	r1, [r4]
   15c44:	cmp	r1, #0
   15c48:	beq	15c68 <ReadDataSlabN+0x25dc>
   15c4c:	ldr	r3, [sp]
   15c50:	mov	r2, #1
   15c54:	ldr	r0, [fp]
   15c58:	mul	r1, r3, r1
   15c5c:	bl	1694 <fseek@plt>
   15c60:	ldr	r3, [r4]
   15c64:	add	r7, r7, r3
   15c68:	ldmib	sp, {r1, r2}
   15c6c:	add	r9, sp, #72	; 0x48
   15c70:	mov	r6, #1
   15c74:	ldr	r0, [sp, #12]
   15c78:	ldr	r3, [r5]
   15c7c:	add	r1, r1, r0
   15c80:	mov	r0, fp
   15c84:	bl	12a7c <ReadInt8Data>
   15c88:	ldr	r3, [sp, #196]	; 0xc4
   15c8c:	ldr	r1, [r4]
   15c90:	ldr	r0, [fp]
   15c94:	ldr	r3, [r3]
   15c98:	sub	r2, r3, r1
   15c9c:	add	r7, r2, r7
   15ca0:	ldr	r2, [r5]
   15ca4:	sub	r3, r3, r2
   15ca8:	mov	r2, #1
   15cac:	sub	r1, r3, r1
   15cb0:	ldr	r3, [sp]
   15cb4:	mul	r1, r3, r1
   15cb8:	bl	1694 <fseek@plt>
   15cbc:	ldr	sl, [sp, #24]
   15cc0:	ldr	r3, [sp, #192]	; 0xc0
   15cc4:	cmp	r6, r3
   15cc8:	bge	15c20 <ReadDataSlabN+0x2594>
   15ccc:	ldr	r3, [r9, #4]
   15cd0:	ldr	r1, [r5, r6, lsl #2]
   15cd4:	add	r3, r3, #1
   15cd8:	sdiv	r2, r3, r1
   15cdc:	str	r3, [r9, #4]
   15ce0:	mls	r3, r1, r2, r3
   15ce4:	cmp	r3, #0
   15ce8:	bne	15bfc <ReadDataSlabN+0x2570>
   15cec:	ldr	r8, [sl, #4]
   15cf0:	str	r3, [r9, #4]
   15cf4:	ldr	r1, [r4, r6, lsl #2]
   15cf8:	sdiv	r3, r7, r8
   15cfc:	mls	r3, r8, r3, r7
   15d00:	cmp	r3, #0
   15d04:	beq	15bcc <ReadDataSlabN+0x2540>
   15d08:	sub	r8, r8, r3
   15d0c:	ldr	r3, [sl]
   15d10:	mov	r2, #1
   15d14:	ldr	r0, [fp]
   15d18:	mla	r1, r1, r3, r8
   15d1c:	str	r3, [sp, #16]
   15d20:	ldr	r3, [sp]
   15d24:	mul	r1, r3, r1
   15d28:	bl	1694 <fseek@plt>
   15d2c:	ldr	r2, [r4, r6, lsl #2]
   15d30:	ldr	r3, [sp, #16]
   15d34:	mla	r8, r2, r3, r8
   15d38:	add	r7, r7, r8
   15d3c:	add	r6, r6, #1
   15d40:	add	sl, sl, #4
   15d44:	add	r9, r9, #4
   15d48:	b	15cc0 <ReadDataSlabN+0x2634>
   15d4c:	add	r1, r9, r8
   15d50:	mov	r3, #1
   15d54:	ldr	r2, [sp, #8]
   15d58:	mov	r0, fp
   15d5c:	add	r8, r8, #1
   15d60:	bl	12a7c <ReadInt8Data>
   15d64:	ldr	r1, [r6]
   15d68:	mov	r2, #1
   15d6c:	ldr	r3, [sp]
   15d70:	ldr	r0, [fp]
   15d74:	sub	r1, r1, #1
   15d78:	mul	r1, r3, r1
   15d7c:	bl	1694 <fseek@plt>
   15d80:	ldr	r3, [r6]
   15d84:	add	r7, r7, r3
   15d88:	b	15a68 <ReadDataSlabN+0x23dc>
   15d8c:	cmp	r1, #0
   15d90:	beq	15b38 <ReadDataSlabN+0x24ac>
   15d94:	ldr	r3, [sp, #12]
   15d98:	mov	r2, #1
   15d9c:	ldr	r0, [fp]
   15da0:	ldr	r9, [r3]
   15da4:	ldr	r3, [sp]
   15da8:	mul	r1, r1, r9
   15dac:	mul	r1, r3, r1
   15db0:	bl	1694 <fseek@plt>
   15db4:	ldr	r3, [r4, r8, lsl #2]
   15db8:	mla	r7, r3, r9, r7
   15dbc:	b	15b38 <ReadDataSlabN+0x24ac>
   15dc0:	add	r3, sp, #152	; 0x98
   15dc4:	mov	r2, #1
   15dc8:	ldr	r0, [fp]
   15dcc:	add	r8, r3, r8, lsl #2
   15dd0:	ldr	r3, [sp]
   15dd4:	ldr	r1, [r8, #-120]	; 0xffffff88
   15dd8:	add	r7, r7, r1
   15ddc:	mul	r1, r3, r1
   15de0:	bl	1694 <fseek@plt>
   15de4:	ldr	r3, [r5]
   15de8:	ldr	r2, [sp, #16]
   15dec:	add	r3, r2, r3
   15df0:	b	15a1c <ReadDataSlabN+0x2390>
   15df4:	ldr	r3, [r6]
   15df8:	add	r1, sp, #32
   15dfc:	mov	r7, #0
   15e00:	ldr	ip, [sp, #196]	; 0xc4
   15e04:	sub	r3, r3, #1
   15e08:	str	r3, [sp, #32]
   15e0c:	ldr	r3, [sp, #196]	; 0xc4
   15e10:	ldr	r3, [r3]
   15e14:	str	r3, [sp, #112]	; 0x70
   15e18:	ldr	r3, [r5]
   15e1c:	str	r3, [sp, #20]
   15e20:	add	r3, sp, #112	; 0x70
   15e24:	mov	r2, r3
   15e28:	str	r3, [sp, #24]
   15e2c:	mov	r3, #1
   15e30:	ldr	r0, [sp, #192]	; 0xc0
   15e34:	cmp	r3, r0
   15e38:	blt	15f94 <ReadDataSlabN+0x2908>
   15e3c:	ldr	r3, [sp]
   15e40:	mov	r2, #1
   15e44:	ldr	r0, [fp]
   15e48:	mul	r1, r3, r7
   15e4c:	bl	1694 <fseek@plt>
   15e50:	ldr	r3, [r6]
   15e54:	cmp	r3, #1
   15e58:	mov	r3, #0
   15e5c:	beq	16070 <ReadDataSlabN+0x29e4>
   15e60:	str	r3, [sp, #16]
   15e64:	ldr	r3, [sp, #16]
   15e68:	ldr	r2, [sp, #20]
   15e6c:	cmp	r3, r2
   15e70:	bge	13b04 <ReadDataSlabN+0x478>
   15e74:	ldr	r1, [r4]
   15e78:	cmp	r1, #0
   15e7c:	beq	15e9c <ReadDataSlabN+0x2810>
   15e80:	ldr	r3, [sp]
   15e84:	mov	r2, #1
   15e88:	ldr	r0, [fp]
   15e8c:	mul	r1, r3, r1
   15e90:	bl	1694 <fseek@plt>
   15e94:	ldr	r3, [r4]
   15e98:	add	r7, r7, r3
   15e9c:	ldr	r3, [sp, #4]
   15ea0:	mov	r8, #0
   15ea4:	ldr	r2, [sp, #16]
   15ea8:	add	r9, r3, r2
   15eac:	ldr	r1, [r5]
   15eb0:	cmp	r1, r8
   15eb4:	bgt	16190 <ReadDataSlabN+0x2b04>
   15eb8:	ldr	r3, [sp, #196]	; 0xc4
   15ebc:	add	sl, sp, #72	; 0x48
   15ec0:	mov	r8, #1
   15ec4:	ldr	r2, [r4]
   15ec8:	ldr	r0, [fp]
   15ecc:	ldr	r3, [r3]
   15ed0:	sub	r3, r3, r2
   15ed4:	ldr	r2, [r6]
   15ed8:	mls	r1, r2, r1, r3
   15edc:	ldr	r3, [sp]
   15ee0:	mov	r2, #1
   15ee4:	add	r7, r7, r1
   15ee8:	mul	r1, r3, r1
   15eec:	bl	1694 <fseek@plt>
   15ef0:	ldr	r3, [sp, #24]
   15ef4:	str	r3, [sp, #12]
   15ef8:	ldr	r3, [sp, #192]	; 0xc0
   15efc:	cmp	r8, r3
   15f00:	bge	16228 <ReadDataSlabN+0x2b9c>
   15f04:	ldr	r3, [sl, #4]
   15f08:	ldr	r1, [r5, r8, lsl #2]
   15f0c:	add	r3, r3, #1
   15f10:	sdiv	r2, r3, r1
   15f14:	str	r3, [sl, #4]
   15f18:	mls	r3, r1, r2, r3
   15f1c:	cmp	r3, #0
   15f20:	bne	16204 <ReadDataSlabN+0x2b78>
   15f24:	str	r3, [sl, #4]
   15f28:	ldr	r3, [sp, #12]
   15f2c:	ldr	r1, [r4, r8, lsl #2]
   15f30:	ldr	r9, [r3, #4]
   15f34:	sdiv	r3, r7, r9
   15f38:	mls	r3, r9, r3, r7
   15f3c:	cmp	r3, #0
   15f40:	beq	161d0 <ReadDataSlabN+0x2b44>
   15f44:	sub	r9, r9, r3
   15f48:	ldr	r3, [sp, #12]
   15f4c:	mov	r2, #1
   15f50:	ldr	r0, [fp]
   15f54:	ldr	r3, [r3]
   15f58:	mla	r1, r1, r3, r9
   15f5c:	str	r3, [sp, #28]
   15f60:	ldr	r3, [sp]
   15f64:	mul	r1, r3, r1
   15f68:	bl	1694 <fseek@plt>
   15f6c:	ldr	r2, [r4, r8, lsl #2]
   15f70:	ldr	r3, [sp, #28]
   15f74:	mla	r9, r2, r3, r9
   15f78:	add	r7, r7, r9
   15f7c:	ldr	r3, [sp, #12]
   15f80:	add	r8, r8, #1
   15f84:	add	sl, sl, #4
   15f88:	add	r3, r3, #4
   15f8c:	str	r3, [sp, #12]
   15f90:	b	15ef8 <ReadDataSlabN+0x286c>
   15f94:	ldr	r0, [r6, r3, lsl #2]
   15f98:	mov	r8, r2
   15f9c:	sub	r0, r0, #1
   15fa0:	str	r0, [r1, #4]
   15fa4:	ldr	r0, [ip], #4
   15fa8:	str	r0, [r2, #4]
   15fac:	mov	r0, ip
   15fb0:	ldr	lr, [sp, #196]	; 0xc4
   15fb4:	cmp	lr, r0
   15fb8:	bne	15fe8 <ReadDataSlabN+0x295c>
   15fbc:	ldr	r0, [r5, r3, lsl #2]
   15fc0:	add	r2, r2, #4
   15fc4:	add	r1, r1, #4
   15fc8:	ldr	lr, [sp, #20]
   15fcc:	mul	r0, r0, lr
   15fd0:	ldr	lr, [r4, r3, lsl #2]
   15fd4:	add	r3, r3, #1
   15fd8:	str	r0, [sp, #20]
   15fdc:	ldr	r0, [r8]
   15fe0:	mla	r7, lr, r0, r7
   15fe4:	b	15e30 <ReadDataSlabN+0x27a4>
   15fe8:	mov	r9, r0
   15fec:	ldr	lr, [r0, #-4]!
   15ff0:	ldr	sl, [r1, #4]
   15ff4:	mul	lr, lr, sl
   15ff8:	ldr	sl, [r2, #4]
   15ffc:	str	lr, [r1, #4]
   16000:	ldr	lr, [r9]
   16004:	mul	lr, lr, sl
   16008:	str	lr, [r2, #4]
   1600c:	b	15fb0 <ReadDataSlabN+0x2924>
   16010:	cmp	r1, #0
   16014:	beq	16180 <ReadDataSlabN+0x2af4>
   16018:	ldr	r8, [sl]
   1601c:	mov	r2, #1
   16020:	ldr	r3, [sp]
   16024:	ldr	r0, [fp]
   16028:	mul	r1, r1, r8
   1602c:	mul	r1, r3, r1
   16030:	bl	1694 <fseek@plt>
   16034:	ldr	r3, [r4, r6, lsl #2]
   16038:	mla	r7, r3, r8, r7
   1603c:	b	16180 <ReadDataSlabN+0x2af4>
   16040:	add	r3, sp, #152	; 0x98
   16044:	mov	r2, #1
   16048:	ldr	r0, [fp]
   1604c:	add	r6, r3, r6, lsl #2
   16050:	ldr	r3, [sp]
   16054:	ldr	r1, [r6, #-120]	; 0xffffff88
   16058:	add	r7, r7, r1
   1605c:	mul	r1, r3, r1
   16060:	bl	1694 <fseek@plt>
   16064:	ldr	r3, [r5]
   16068:	ldr	r2, [sp, #12]
   1606c:	add	r3, r2, r3
   16070:	str	r3, [sp, #12]
   16074:	ldr	r3, [sp, #12]
   16078:	ldr	r2, [sp, #20]
   1607c:	cmp	r3, r2
   16080:	bge	13b04 <ReadDataSlabN+0x478>
   16084:	ldr	r1, [r4]
   16088:	cmp	r1, #0
   1608c:	beq	160ac <ReadDataSlabN+0x2a20>
   16090:	ldr	r3, [sp]
   16094:	mov	r2, #1
   16098:	ldr	r0, [fp]
   1609c:	mul	r1, r3, r1
   160a0:	bl	1694 <fseek@plt>
   160a4:	ldr	r3, [r4]
   160a8:	add	r7, r7, r3
   160ac:	ldmib	sp, {r1, r2}
   160b0:	add	r9, sp, #72	; 0x48
   160b4:	mov	r6, #1
   160b8:	ldr	r0, [sp, #12]
   160bc:	ldr	r3, [r5]
   160c0:	add	r1, r1, r0
   160c4:	mov	r0, fp
   160c8:	bl	12f84 <ReadUInt8Data>
   160cc:	ldr	r3, [sp, #196]	; 0xc4
   160d0:	ldr	r1, [r4]
   160d4:	ldr	r0, [fp]
   160d8:	ldr	r3, [r3]
   160dc:	sub	r2, r3, r1
   160e0:	add	r7, r2, r7
   160e4:	ldr	r2, [r5]
   160e8:	sub	r3, r3, r2
   160ec:	mov	r2, #1
   160f0:	sub	r1, r3, r1
   160f4:	ldr	r3, [sp]
   160f8:	mul	r1, r3, r1
   160fc:	bl	1694 <fseek@plt>
   16100:	ldr	sl, [sp, #24]
   16104:	ldr	r3, [sp, #192]	; 0xc0
   16108:	cmp	r6, r3
   1610c:	bge	16064 <ReadDataSlabN+0x29d8>
   16110:	ldr	r3, [r9, #4]
   16114:	ldr	r1, [r5, r6, lsl #2]
   16118:	add	r3, r3, #1
   1611c:	sdiv	r2, r3, r1
   16120:	str	r3, [r9, #4]
   16124:	mls	r3, r1, r2, r3
   16128:	cmp	r3, #0
   1612c:	bne	16040 <ReadDataSlabN+0x29b4>
   16130:	ldr	r8, [sl, #4]
   16134:	str	r3, [r9, #4]
   16138:	ldr	r1, [r4, r6, lsl #2]
   1613c:	sdiv	r3, r7, r8
   16140:	mls	r3, r8, r3, r7
   16144:	cmp	r3, #0
   16148:	beq	16010 <ReadDataSlabN+0x2984>
   1614c:	sub	r8, r8, r3
   16150:	ldr	r3, [sl]
   16154:	mov	r2, #1
   16158:	ldr	r0, [fp]
   1615c:	mla	r1, r1, r3, r8
   16160:	str	r3, [sp, #16]
   16164:	ldr	r3, [sp]
   16168:	mul	r1, r3, r1
   1616c:	bl	1694 <fseek@plt>
   16170:	ldr	r2, [r4, r6, lsl #2]
   16174:	ldr	r3, [sp, #16]
   16178:	mla	r8, r2, r3, r8
   1617c:	add	r7, r7, r8
   16180:	add	r6, r6, #1
   16184:	add	sl, sl, #4
   16188:	add	r9, r9, #4
   1618c:	b	16104 <ReadDataSlabN+0x2a78>
   16190:	add	r1, r9, r8
   16194:	mov	r3, #1
   16198:	ldr	r2, [sp, #8]
   1619c:	mov	r0, fp
   161a0:	add	r8, r8, #1
   161a4:	bl	12f84 <ReadUInt8Data>
   161a8:	ldr	r1, [r6]
   161ac:	mov	r2, #1
   161b0:	ldr	r3, [sp]
   161b4:	ldr	r0, [fp]
   161b8:	sub	r1, r1, #1
   161bc:	mul	r1, r3, r1
   161c0:	bl	1694 <fseek@plt>
   161c4:	ldr	r3, [r6]
   161c8:	add	r7, r7, r3
   161cc:	b	15eac <ReadDataSlabN+0x2820>
   161d0:	cmp	r1, #0
   161d4:	beq	15f7c <ReadDataSlabN+0x28f0>
   161d8:	ldr	r3, [sp, #12]
   161dc:	mov	r2, #1
   161e0:	ldr	r0, [fp]
   161e4:	ldr	r9, [r3]
   161e8:	ldr	r3, [sp]
   161ec:	mul	r1, r1, r9
   161f0:	mul	r1, r3, r1
   161f4:	bl	1694 <fseek@plt>
   161f8:	ldr	r3, [r4, r8, lsl #2]
   161fc:	mla	r7, r3, r9, r7
   16200:	b	15f7c <ReadDataSlabN+0x28f0>
   16204:	add	r3, sp, #152	; 0x98
   16208:	mov	r2, #1
   1620c:	ldr	r0, [fp]
   16210:	add	r8, r3, r8, lsl #2
   16214:	ldr	r3, [sp]
   16218:	ldr	r1, [r8, #-120]	; 0xffffff88
   1621c:	add	r7, r7, r1
   16220:	mul	r1, r3, r1
   16224:	bl	1694 <fseek@plt>
   16228:	ldr	r3, [r5]
   1622c:	ldr	r2, [sp, #16]
   16230:	add	r3, r2, r3
   16234:	b	15e60 <ReadDataSlabN+0x27d4>
   16238:	mvn	r0, #0
   1623c:	add	sp, sp, #156	; 0x9c
   16240:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00016244 <ReadCompressedDataSlabN>:
   16244:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16248:	sub	sp, sp, #220	; 0xdc
   1624c:	mov	sl, r0
   16250:	mov	r6, r1
   16254:	mov	r1, #0
   16258:	mov	r5, r3
   1625c:	str	r2, [sp, #12]
   16260:	mov	r2, #40	; 0x28
   16264:	add	r0, sp, r2
   16268:	ldr	r4, [sp, #268]	; 0x10c
   1626c:	ldr	fp, [sp, #272]	; 0x110
   16270:	ldr	r9, [sp, #276]	; 0x114
   16274:	bl	15f8 <memset@plt>
   16278:	mov	r2, #40	; 0x28
   1627c:	mov	r1, #0
   16280:	add	r0, sp, #80	; 0x50
   16284:	bl	15f8 <memset@plt>
   16288:	mov	r2, #40	; 0x28
   1628c:	mov	r1, #0
   16290:	add	r0, sp, #120	; 0x78
   16294:	bl	15f8 <memset@plt>
   16298:	add	r3, sp, #160	; 0xa0
   1629c:	mov	r2, #56	; 0x38
   162a0:	mov	r1, #0
   162a4:	mov	r0, r3
   162a8:	bl	15f8 <memset@plt>
   162ac:	ldr	r2, [sp, #12]
   162b0:	cmp	r2, #0
   162b4:	cmpne	sl, #0
   162b8:	beq	19158 <ReadCompressedDataSlabN+0x2f14>
   162bc:	ldr	r2, [sl]
   162c0:	cmp	r2, #0
   162c4:	beq	19158 <ReadCompressedDataSlabN+0x2f14>
   162c8:	ldr	r1, [sp, #260]	; 0x104
   162cc:	cmp	r4, #0
   162d0:	clz	r2, fp
   162d4:	lsr	r2, r2, #5
   162d8:	moveq	r2, #1
   162dc:	cmp	r9, #0
   162e0:	moveq	r2, #1
   162e4:	cmp	r1, #10
   162e8:	orrgt	r2, r2, #1
   162ec:	cmp	r2, #0
   162f0:	bne	19158 <ReadCompressedDataSlabN+0x2f14>
   162f4:	mov	r1, r6
   162f8:	sub	r5, r5, #6
   162fc:	bl	15bc <inflateCopy@plt>
   16300:	cmp	r5, #9
   16304:	addls	pc, pc, r5, lsl #2
   16308:	b	163c0 <ReadCompressedDataSlabN+0x17c>
   1630c:	b	16334 <ReadCompressedDataSlabN+0xf0>
   16310:	b	167e4 <ReadCompressedDataSlabN+0x5a0>
   16314:	b	18828 <ReadCompressedDataSlabN+0x25e4>
   16318:	b	18cc0 <ReadCompressedDataSlabN+0x2a7c>
   1631c:	b	17ef0 <ReadCompressedDataSlabN+0x1cac>
   16320:	b	1838c <ReadCompressedDataSlabN+0x2148>
   16324:	b	175b8 <ReadCompressedDataSlabN+0x1374>
   16328:	b	17a54 <ReadCompressedDataSlabN+0x1810>
   1632c:	b	16c80 <ReadCompressedDataSlabN+0xa3c>
   16330:	b	1711c <ReadCompressedDataSlabN+0xed8>
   16334:	ldr	r3, [fp]
   16338:	add	r1, sp, #40	; 0x28
   1633c:	mov	r5, #0
   16340:	ldr	ip, [sp, #264]	; 0x108
   16344:	sub	r3, r3, #1
   16348:	str	r3, [sp, #40]	; 0x28
   1634c:	ldr	r3, [sp, #264]	; 0x108
   16350:	ldr	r3, [r3]
   16354:	str	r3, [sp, #120]	; 0x78
   16358:	ldr	r3, [r9]
   1635c:	str	r3, [sp, #28]
   16360:	add	r3, sp, #120	; 0x78
   16364:	mov	r2, r3
   16368:	str	r3, [sp, #32]
   1636c:	mov	r3, #1
   16370:	ldr	r0, [sp, #260]	; 0x104
   16374:	cmp	r3, r0
   16378:	blt	163d4 <ReadCompressedDataSlabN+0x190>
   1637c:	add	r6, sp, #160	; 0xa0
   16380:	mov	r3, r5
   16384:	ldr	r2, [sp, #256]	; 0x100
   16388:	mov	r1, r6
   1638c:	mov	r0, sl
   16390:	bl	21bc <InflateSkipData>
   16394:	ldr	r3, [fp]
   16398:	cmp	r3, #1
   1639c:	mov	r3, #0
   163a0:	movne	r8, r6
   163a4:	strne	r3, [sp, #24]
   163a8:	bne	16678 <ReadCompressedDataSlabN+0x434>
   163ac:	str	r3, [sp, #20]
   163b0:	ldr	r3, [sp, #20]
   163b4:	ldr	r2, [sp, #28]
   163b8:	cmp	r3, r2
   163bc:	blt	16450 <ReadCompressedDataSlabN+0x20c>
   163c0:	add	r0, sp, #160	; 0xa0
   163c4:	bl	15b0 <inflateEnd@plt>
   163c8:	mov	r0, #0
   163cc:	add	sp, sp, #220	; 0xdc
   163d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   163d4:	ldr	r0, [fp, r3, lsl #2]
   163d8:	mov	r6, r2
   163dc:	sub	r0, r0, #1
   163e0:	str	r0, [r1, #4]
   163e4:	ldr	r0, [ip], #4
   163e8:	str	r0, [r2, #4]
   163ec:	mov	r0, ip
   163f0:	ldr	lr, [sp, #264]	; 0x108
   163f4:	cmp	lr, r0
   163f8:	bne	16428 <ReadCompressedDataSlabN+0x1e4>
   163fc:	ldr	r0, [r9, r3, lsl #2]
   16400:	add	r2, r2, #4
   16404:	add	r1, r1, #4
   16408:	ldr	lr, [sp, #28]
   1640c:	mul	r0, r0, lr
   16410:	ldr	lr, [r4, r3, lsl #2]
   16414:	add	r3, r3, #1
   16418:	str	r0, [sp, #28]
   1641c:	ldr	r0, [r6]
   16420:	mla	r5, lr, r0, r5
   16424:	b	16370 <ReadCompressedDataSlabN+0x12c>
   16428:	mov	r7, r0
   1642c:	ldr	lr, [r0, #-4]!
   16430:	ldr	r8, [r1, #4]
   16434:	mul	lr, lr, r8
   16438:	ldr	r8, [r2, #4]
   1643c:	str	lr, [r1, #4]
   16440:	ldr	lr, [r7]
   16444:	mul	lr, lr, r8
   16448:	str	lr, [r2, #4]
   1644c:	b	163f0 <ReadCompressedDataSlabN+0x1ac>
   16450:	ldr	r3, [r4]
   16454:	cmp	r3, #0
   16458:	beq	16474 <ReadCompressedDataSlabN+0x230>
   1645c:	mov	r1, r6
   16460:	mov	r0, sl
   16464:	ldr	r2, [sp, #256]	; 0x100
   16468:	bl	21bc <InflateSkipData>
   1646c:	ldr	r3, [r4]
   16470:	add	r5, r5, r3
   16474:	ldr	r3, [r9]
   16478:	mov	r0, sl
   1647c:	add	fp, sp, #80	; 0x50
   16480:	mov	r7, #1
   16484:	ldr	r2, [sp, #12]
   16488:	ldr	r1, [sp, #20]
   1648c:	str	r3, [sp]
   16490:	ldr	r3, [sp, #256]	; 0x100
   16494:	add	r2, r2, r1, lsl #3
   16498:	mov	r1, r6
   1649c:	bl	f58c <ReadCompressedDoubleData>
   164a0:	ldr	r3, [sp, #264]	; 0x108
   164a4:	mov	r1, r6
   164a8:	mov	r0, sl
   164ac:	ldr	r2, [r9]
   164b0:	ldr	r3, [r3]
   164b4:	sub	r3, r3, r2
   164b8:	ldr	r2, [r4]
   164bc:	sub	r3, r3, r2
   164c0:	ldr	r2, [sp, #256]	; 0x100
   164c4:	bl	21bc <InflateSkipData>
   164c8:	ldr	r3, [sp, #264]	; 0x108
   164cc:	ldr	r2, [r4]
   164d0:	ldr	r3, [r3]
   164d4:	sub	r3, r3, r2
   164d8:	add	r5, r3, r5
   164dc:	ldr	r3, [sp, #32]
   164e0:	str	r3, [sp, #16]
   164e4:	ldr	r3, [sp, #260]	; 0x104
   164e8:	cmp	r7, r3
   164ec:	bge	165d4 <ReadCompressedDataSlabN+0x390>
   164f0:	ldr	r3, [fp, #4]
   164f4:	ldr	r1, [r9, r7, lsl #2]
   164f8:	add	r3, r3, #1
   164fc:	sdiv	r2, r3, r1
   16500:	str	r3, [fp, #4]
   16504:	mls	r3, r1, r2, r3
   16508:	cmp	r3, #0
   1650c:	bne	165ac <ReadCompressedDataSlabN+0x368>
   16510:	str	r3, [fp, #4]
   16514:	ldr	r3, [sp, #16]
   16518:	ldr	r8, [r3, #4]
   1651c:	ldr	r3, [r4, r7, lsl #2]
   16520:	sdiv	r2, r5, r8
   16524:	mls	r2, r8, r2, r5
   16528:	cmp	r2, #0
   1652c:	beq	1657c <ReadCompressedDataSlabN+0x338>
   16530:	sub	r8, r8, r2
   16534:	ldr	r2, [sp, #16]
   16538:	mov	r1, r6
   1653c:	mov	r0, sl
   16540:	ldr	r2, [r2]
   16544:	mla	r3, r3, r2, r8
   16548:	str	r2, [sp, #24]
   1654c:	ldr	r2, [sp, #256]	; 0x100
   16550:	bl	21bc <InflateSkipData>
   16554:	ldr	r3, [r4, r7, lsl #2]
   16558:	ldr	r2, [sp, #24]
   1655c:	mla	r8, r3, r2, r8
   16560:	add	r5, r5, r8
   16564:	ldr	r3, [sp, #16]
   16568:	add	r7, r7, #1
   1656c:	add	fp, fp, #4
   16570:	add	r3, r3, #4
   16574:	str	r3, [sp, #16]
   16578:	b	164e4 <ReadCompressedDataSlabN+0x2a0>
   1657c:	cmp	r3, #0
   16580:	beq	16564 <ReadCompressedDataSlabN+0x320>
   16584:	ldr	r2, [sp, #16]
   16588:	mov	r1, r6
   1658c:	mov	r0, sl
   16590:	ldr	r8, [r2]
   16594:	ldr	r2, [sp, #256]	; 0x100
   16598:	mul	r3, r3, r8
   1659c:	bl	21bc <InflateSkipData>
   165a0:	ldr	r3, [r4, r7, lsl #2]
   165a4:	mla	r5, r3, r8, r5
   165a8:	b	16564 <ReadCompressedDataSlabN+0x320>
   165ac:	add	r3, sp, #216	; 0xd8
   165b0:	add	r7, r3, r7, lsl #2
   165b4:	ldr	r3, [r7, #-176]	; 0xffffff50
   165b8:	cmp	r3, #0
   165bc:	beq	165d4 <ReadCompressedDataSlabN+0x390>
   165c0:	mov	r1, r6
   165c4:	mov	r0, sl
   165c8:	ldr	r2, [sp, #256]	; 0x100
   165cc:	add	r5, r5, r3
   165d0:	bl	21bc <InflateSkipData>
   165d4:	ldr	r3, [r9]
   165d8:	ldr	r2, [sp, #20]
   165dc:	add	r3, r2, r3
   165e0:	b	163ac <ReadCompressedDataSlabN+0x168>
   165e4:	bl	f58c <ReadCompressedDoubleData>
   165e8:	ldr	r3, [fp]
   165ec:	mov	r1, r8
   165f0:	mov	r0, sl
   165f4:	add	r6, r6, #1
   165f8:	ldr	r2, [sp, #256]	; 0x100
   165fc:	sub	r3, r3, #1
   16600:	bl	21bc <InflateSkipData>
   16604:	ldr	r3, [fp]
   16608:	add	r5, r5, r3
   1660c:	b	166bc <ReadCompressedDataSlabN+0x478>
   16610:	cmp	r3, #0
   16614:	beq	167c4 <ReadCompressedDataSlabN+0x580>
   16618:	ldr	r2, [sp, #20]
   1661c:	mov	r1, r8
   16620:	mov	r0, sl
   16624:	ldr	r7, [r2]
   16628:	ldr	r2, [sp, #256]	; 0x100
   1662c:	mul	r3, r3, r7
   16630:	bl	21bc <InflateSkipData>
   16634:	ldr	r3, [r4, r6, lsl #2]
   16638:	mla	r5, r3, r7, r5
   1663c:	b	167c4 <ReadCompressedDataSlabN+0x580>
   16640:	add	r3, sp, #216	; 0xd8
   16644:	add	r6, r3, r6, lsl #2
   16648:	ldr	r3, [r6, #-176]	; 0xffffff50
   1664c:	cmp	r3, #0
   16650:	beq	16668 <ReadCompressedDataSlabN+0x424>
   16654:	mov	r1, r8
   16658:	mov	r0, sl
   1665c:	ldr	r2, [sp, #256]	; 0x100
   16660:	add	r5, r5, r3
   16664:	bl	21bc <InflateSkipData>
   16668:	ldr	r3, [r9]
   1666c:	ldr	r2, [sp, #24]
   16670:	add	r3, r2, r3
   16674:	str	r3, [sp, #24]
   16678:	ldr	r3, [sp, #24]
   1667c:	ldr	r2, [sp, #28]
   16680:	cmp	r3, r2
   16684:	bge	163c0 <ReadCompressedDataSlabN+0x17c>
   16688:	ldr	r3, [r4]
   1668c:	cmp	r3, #0
   16690:	beq	166ac <ReadCompressedDataSlabN+0x468>
   16694:	mov	r1, r8
   16698:	mov	r0, sl
   1669c:	ldr	r2, [sp, #256]	; 0x100
   166a0:	bl	21bc <InflateSkipData>
   166a4:	ldr	r3, [r4]
   166a8:	add	r5, r5, r3
   166ac:	ldr	r3, [sp, #12]
   166b0:	mov	r6, #0
   166b4:	ldr	r2, [sp, #24]
   166b8:	add	r7, r3, r2, lsl #3
   166bc:	ldr	r3, [r9]
   166c0:	mov	r2, r7
   166c4:	mov	r1, r8
   166c8:	add	r7, r7, #8
   166cc:	mov	r0, sl
   166d0:	sub	r3, r3, #1
   166d4:	cmp	r3, r6
   166d8:	mov	r3, #1
   166dc:	str	r3, [sp]
   166e0:	ldr	r3, [sp, #256]	; 0x100
   166e4:	bgt	165e4 <ReadCompressedDataSlabN+0x3a0>
   166e8:	bl	f58c <ReadCompressedDoubleData>
   166ec:	ldr	r3, [r9]
   166f0:	mov	r0, sl
   166f4:	mov	r6, #1
   166f8:	ldr	r2, [r4]
   166fc:	ldr	r1, [fp]
   16700:	sub	r3, r3, #1
   16704:	mla	r3, r1, r3, r2
   16708:	ldr	r2, [sp, #264]	; 0x108
   1670c:	mov	r1, r8
   16710:	ldr	r2, [r2]
   16714:	sub	r3, r2, r3
   16718:	ldr	r2, [sp, #256]	; 0x100
   1671c:	add	r5, r5, r3
   16720:	sub	r3, r3, #1
   16724:	bl	21bc <InflateSkipData>
   16728:	add	r3, sp, #80	; 0x50
   1672c:	str	r3, [sp, #16]
   16730:	ldr	r3, [sp, #32]
   16734:	str	r3, [sp, #20]
   16738:	ldr	r3, [sp, #260]	; 0x104
   1673c:	cmp	r6, r3
   16740:	bge	16668 <ReadCompressedDataSlabN+0x424>
   16744:	ldr	r3, [sp, #16]
   16748:	ldr	r1, [r9, r6, lsl #2]
   1674c:	ldr	r2, [sp, #16]
   16750:	ldr	r3, [r3, #4]
   16754:	add	r3, r3, #1
   16758:	str	r3, [r2, #4]
   1675c:	sdiv	r2, r3, r1
   16760:	mls	r3, r1, r2, r3
   16764:	cmp	r3, #0
   16768:	bne	16640 <ReadCompressedDataSlabN+0x3fc>
   1676c:	ldr	r2, [sp, #16]
   16770:	str	r3, [r2, #4]
   16774:	ldr	r3, [sp, #20]
   16778:	ldr	r7, [r3, #4]
   1677c:	ldr	r3, [r4, r6, lsl #2]
   16780:	sdiv	r2, r5, r7
   16784:	mls	r2, r7, r2, r5
   16788:	cmp	r2, #0
   1678c:	beq	16610 <ReadCompressedDataSlabN+0x3cc>
   16790:	sub	r7, r7, r2
   16794:	ldr	r2, [sp, #20]
   16798:	mov	r1, r8
   1679c:	mov	r0, sl
   167a0:	ldr	r2, [r2]
   167a4:	mla	r3, r3, r2, r7
   167a8:	str	r2, [sp, #36]	; 0x24
   167ac:	ldr	r2, [sp, #256]	; 0x100
   167b0:	bl	21bc <InflateSkipData>
   167b4:	ldr	r3, [r4, r6, lsl #2]
   167b8:	ldr	r2, [sp, #36]	; 0x24
   167bc:	mla	r7, r3, r2, r7
   167c0:	add	r5, r5, r7
   167c4:	ldr	r3, [sp, #20]
   167c8:	add	r6, r6, #1
   167cc:	add	r3, r3, #4
   167d0:	str	r3, [sp, #20]
   167d4:	ldr	r3, [sp, #16]
   167d8:	add	r3, r3, #4
   167dc:	str	r3, [sp, #16]
   167e0:	b	16738 <ReadCompressedDataSlabN+0x4f4>
   167e4:	ldr	r3, [fp]
   167e8:	add	r1, sp, #40	; 0x28
   167ec:	mov	r5, #0
   167f0:	ldr	ip, [sp, #264]	; 0x108
   167f4:	sub	r3, r3, #1
   167f8:	str	r3, [sp, #40]	; 0x28
   167fc:	ldr	r3, [sp, #264]	; 0x108
   16800:	ldr	r3, [r3]
   16804:	str	r3, [sp, #120]	; 0x78
   16808:	ldr	r3, [r9]
   1680c:	str	r3, [sp, #28]
   16810:	add	r3, sp, #120	; 0x78
   16814:	mov	r2, r3
   16818:	str	r3, [sp, #32]
   1681c:	mov	r3, #1
   16820:	ldr	r0, [sp, #260]	; 0x104
   16824:	cmp	r3, r0
   16828:	blt	1699c <ReadCompressedDataSlabN+0x758>
   1682c:	add	r6, sp, #160	; 0xa0
   16830:	mov	r3, r5
   16834:	ldr	r2, [sp, #256]	; 0x100
   16838:	mov	r1, r6
   1683c:	mov	r0, sl
   16840:	bl	21bc <InflateSkipData>
   16844:	ldr	r3, [fp]
   16848:	cmp	r3, #1
   1684c:	mov	r3, #0
   16850:	movne	r8, r6
   16854:	strne	r3, [sp, #24]
   16858:	bne	16b14 <ReadCompressedDataSlabN+0x8d0>
   1685c:	str	r3, [sp, #20]
   16860:	ldr	r3, [sp, #20]
   16864:	ldr	r2, [sp, #28]
   16868:	cmp	r3, r2
   1686c:	bge	163c0 <ReadCompressedDataSlabN+0x17c>
   16870:	ldr	r3, [r4]
   16874:	cmp	r3, #0
   16878:	beq	16894 <ReadCompressedDataSlabN+0x650>
   1687c:	mov	r1, r6
   16880:	mov	r0, sl
   16884:	ldr	r2, [sp, #256]	; 0x100
   16888:	bl	21bc <InflateSkipData>
   1688c:	ldr	r3, [r4]
   16890:	add	r5, r5, r3
   16894:	ldr	r3, [r9]
   16898:	mov	r0, sl
   1689c:	add	fp, sp, #80	; 0x50
   168a0:	mov	r7, #1
   168a4:	ldr	r2, [sp, #12]
   168a8:	ldr	r1, [sp, #20]
   168ac:	str	r3, [sp]
   168b0:	ldr	r3, [sp, #256]	; 0x100
   168b4:	add	r2, r2, r1, lsl #2
   168b8:	mov	r1, r6
   168bc:	bl	106f0 <ReadCompressedSingleData>
   168c0:	ldr	r3, [sp, #264]	; 0x108
   168c4:	mov	r1, r6
   168c8:	mov	r0, sl
   168cc:	ldr	r2, [r9]
   168d0:	ldr	r3, [r3]
   168d4:	sub	r3, r3, r2
   168d8:	ldr	r2, [r4]
   168dc:	sub	r3, r3, r2
   168e0:	ldr	r2, [sp, #256]	; 0x100
   168e4:	bl	21bc <InflateSkipData>
   168e8:	ldr	r3, [sp, #264]	; 0x108
   168ec:	ldr	r2, [r4]
   168f0:	ldr	r3, [r3]
   168f4:	sub	r3, r3, r2
   168f8:	add	r5, r3, r5
   168fc:	ldr	r3, [sp, #32]
   16900:	str	r3, [sp, #16]
   16904:	ldr	r3, [sp, #260]	; 0x104
   16908:	cmp	r7, r3
   1690c:	bge	16a70 <ReadCompressedDataSlabN+0x82c>
   16910:	ldr	r3, [fp, #4]
   16914:	ldr	r1, [r9, r7, lsl #2]
   16918:	add	r3, r3, #1
   1691c:	sdiv	r2, r3, r1
   16920:	str	r3, [fp, #4]
   16924:	mls	r3, r1, r2, r3
   16928:	cmp	r3, #0
   1692c:	bne	16a48 <ReadCompressedDataSlabN+0x804>
   16930:	str	r3, [fp, #4]
   16934:	ldr	r3, [sp, #16]
   16938:	ldr	r8, [r3, #4]
   1693c:	ldr	r3, [r4, r7, lsl #2]
   16940:	sdiv	r2, r5, r8
   16944:	mls	r2, r8, r2, r5
   16948:	cmp	r2, #0
   1694c:	beq	16a18 <ReadCompressedDataSlabN+0x7d4>
   16950:	sub	r8, r8, r2
   16954:	ldr	r2, [sp, #16]
   16958:	mov	r1, r6
   1695c:	mov	r0, sl
   16960:	ldr	r2, [r2]
   16964:	mla	r3, r3, r2, r8
   16968:	str	r2, [sp, #24]
   1696c:	ldr	r2, [sp, #256]	; 0x100
   16970:	bl	21bc <InflateSkipData>
   16974:	ldr	r3, [r4, r7, lsl #2]
   16978:	ldr	r2, [sp, #24]
   1697c:	mla	r8, r3, r2, r8
   16980:	add	r5, r5, r8
   16984:	ldr	r3, [sp, #16]
   16988:	add	r7, r7, #1
   1698c:	add	fp, fp, #4
   16990:	add	r3, r3, #4
   16994:	str	r3, [sp, #16]
   16998:	b	16904 <ReadCompressedDataSlabN+0x6c0>
   1699c:	ldr	r0, [fp, r3, lsl #2]
   169a0:	mov	r6, r2
   169a4:	sub	r0, r0, #1
   169a8:	str	r0, [r1, #4]
   169ac:	ldr	r0, [ip], #4
   169b0:	str	r0, [r2, #4]
   169b4:	mov	r0, ip
   169b8:	ldr	lr, [sp, #264]	; 0x108
   169bc:	cmp	lr, r0
   169c0:	bne	169f0 <ReadCompressedDataSlabN+0x7ac>
   169c4:	ldr	r0, [r9, r3, lsl #2]
   169c8:	add	r2, r2, #4
   169cc:	add	r1, r1, #4
   169d0:	ldr	lr, [sp, #28]
   169d4:	mul	r0, r0, lr
   169d8:	ldr	lr, [r4, r3, lsl #2]
   169dc:	add	r3, r3, #1
   169e0:	str	r0, [sp, #28]
   169e4:	ldr	r0, [r6]
   169e8:	mla	r5, lr, r0, r5
   169ec:	b	16820 <ReadCompressedDataSlabN+0x5dc>
   169f0:	mov	r7, r0
   169f4:	ldr	lr, [r0, #-4]!
   169f8:	ldr	r8, [r1, #4]
   169fc:	mul	lr, lr, r8
   16a00:	ldr	r8, [r2, #4]
   16a04:	str	lr, [r1, #4]
   16a08:	ldr	lr, [r7]
   16a0c:	mul	lr, lr, r8
   16a10:	str	lr, [r2, #4]
   16a14:	b	169b8 <ReadCompressedDataSlabN+0x774>
   16a18:	cmp	r3, #0
   16a1c:	beq	16984 <ReadCompressedDataSlabN+0x740>
   16a20:	ldr	r2, [sp, #16]
   16a24:	mov	r1, r6
   16a28:	mov	r0, sl
   16a2c:	ldr	r8, [r2]
   16a30:	ldr	r2, [sp, #256]	; 0x100
   16a34:	mul	r3, r3, r8
   16a38:	bl	21bc <InflateSkipData>
   16a3c:	ldr	r3, [r4, r7, lsl #2]
   16a40:	mla	r5, r3, r8, r5
   16a44:	b	16984 <ReadCompressedDataSlabN+0x740>
   16a48:	add	r3, sp, #216	; 0xd8
   16a4c:	add	r7, r3, r7, lsl #2
   16a50:	ldr	r3, [r7, #-176]	; 0xffffff50
   16a54:	cmp	r3, #0
   16a58:	beq	16a70 <ReadCompressedDataSlabN+0x82c>
   16a5c:	mov	r1, r6
   16a60:	mov	r0, sl
   16a64:	ldr	r2, [sp, #256]	; 0x100
   16a68:	add	r5, r5, r3
   16a6c:	bl	21bc <InflateSkipData>
   16a70:	ldr	r3, [r9]
   16a74:	ldr	r2, [sp, #20]
   16a78:	add	r3, r2, r3
   16a7c:	b	1685c <ReadCompressedDataSlabN+0x618>
   16a80:	bl	106f0 <ReadCompressedSingleData>
   16a84:	ldr	r3, [fp]
   16a88:	mov	r1, r8
   16a8c:	mov	r0, sl
   16a90:	add	r6, r6, #1
   16a94:	ldr	r2, [sp, #256]	; 0x100
   16a98:	sub	r3, r3, #1
   16a9c:	bl	21bc <InflateSkipData>
   16aa0:	ldr	r3, [fp]
   16aa4:	add	r5, r5, r3
   16aa8:	b	16b58 <ReadCompressedDataSlabN+0x914>
   16aac:	cmp	r3, #0
   16ab0:	beq	16c60 <ReadCompressedDataSlabN+0xa1c>
   16ab4:	ldr	r2, [sp, #20]
   16ab8:	mov	r1, r8
   16abc:	mov	r0, sl
   16ac0:	ldr	r7, [r2]
   16ac4:	ldr	r2, [sp, #256]	; 0x100
   16ac8:	mul	r3, r3, r7
   16acc:	bl	21bc <InflateSkipData>
   16ad0:	ldr	r3, [r4, r6, lsl #2]
   16ad4:	mla	r5, r3, r7, r5
   16ad8:	b	16c60 <ReadCompressedDataSlabN+0xa1c>
   16adc:	add	r3, sp, #216	; 0xd8
   16ae0:	add	r6, r3, r6, lsl #2
   16ae4:	ldr	r3, [r6, #-176]	; 0xffffff50
   16ae8:	cmp	r3, #0
   16aec:	beq	16b04 <ReadCompressedDataSlabN+0x8c0>
   16af0:	mov	r1, r8
   16af4:	mov	r0, sl
   16af8:	ldr	r2, [sp, #256]	; 0x100
   16afc:	add	r5, r5, r3
   16b00:	bl	21bc <InflateSkipData>
   16b04:	ldr	r3, [r9]
   16b08:	ldr	r2, [sp, #24]
   16b0c:	add	r3, r2, r3
   16b10:	str	r3, [sp, #24]
   16b14:	ldr	r3, [sp, #24]
   16b18:	ldr	r2, [sp, #28]
   16b1c:	cmp	r3, r2
   16b20:	bge	163c0 <ReadCompressedDataSlabN+0x17c>
   16b24:	ldr	r3, [r4]
   16b28:	cmp	r3, #0
   16b2c:	beq	16b48 <ReadCompressedDataSlabN+0x904>
   16b30:	mov	r1, r8
   16b34:	mov	r0, sl
   16b38:	ldr	r2, [sp, #256]	; 0x100
   16b3c:	bl	21bc <InflateSkipData>
   16b40:	ldr	r3, [r4]
   16b44:	add	r5, r5, r3
   16b48:	ldr	r3, [sp, #12]
   16b4c:	mov	r6, #0
   16b50:	ldr	r2, [sp, #24]
   16b54:	add	r7, r3, r2, lsl #2
   16b58:	ldr	r3, [r9]
   16b5c:	mov	r2, r7
   16b60:	mov	r1, r8
   16b64:	add	r7, r7, #4
   16b68:	mov	r0, sl
   16b6c:	sub	r3, r3, #1
   16b70:	cmp	r3, r6
   16b74:	mov	r3, #1
   16b78:	str	r3, [sp]
   16b7c:	ldr	r3, [sp, #256]	; 0x100
   16b80:	bgt	16a80 <ReadCompressedDataSlabN+0x83c>
   16b84:	bl	106f0 <ReadCompressedSingleData>
   16b88:	ldr	r3, [r9]
   16b8c:	mov	r0, sl
   16b90:	mov	r6, #1
   16b94:	ldr	r2, [r4]
   16b98:	ldr	r1, [fp]
   16b9c:	sub	r3, r3, #1
   16ba0:	mla	r3, r1, r3, r2
   16ba4:	ldr	r2, [sp, #264]	; 0x108
   16ba8:	mov	r1, r8
   16bac:	ldr	r2, [r2]
   16bb0:	sub	r3, r2, r3
   16bb4:	ldr	r2, [sp, #256]	; 0x100
   16bb8:	add	r5, r5, r3
   16bbc:	sub	r3, r3, #1
   16bc0:	bl	21bc <InflateSkipData>
   16bc4:	add	r3, sp, #80	; 0x50
   16bc8:	str	r3, [sp, #16]
   16bcc:	ldr	r3, [sp, #32]
   16bd0:	str	r3, [sp, #20]
   16bd4:	ldr	r3, [sp, #260]	; 0x104
   16bd8:	cmp	r6, r3
   16bdc:	bge	16b04 <ReadCompressedDataSlabN+0x8c0>
   16be0:	ldr	r3, [sp, #16]
   16be4:	ldr	r1, [r9, r6, lsl #2]
   16be8:	ldr	r2, [sp, #16]
   16bec:	ldr	r3, [r3, #4]
   16bf0:	add	r3, r3, #1
   16bf4:	str	r3, [r2, #4]
   16bf8:	sdiv	r2, r3, r1
   16bfc:	mls	r3, r1, r2, r3
   16c00:	cmp	r3, #0
   16c04:	bne	16adc <ReadCompressedDataSlabN+0x898>
   16c08:	ldr	r2, [sp, #16]
   16c0c:	str	r3, [r2, #4]
   16c10:	ldr	r3, [sp, #20]
   16c14:	ldr	r7, [r3, #4]
   16c18:	ldr	r3, [r4, r6, lsl #2]
   16c1c:	sdiv	r2, r5, r7
   16c20:	mls	r2, r7, r2, r5
   16c24:	cmp	r2, #0
   16c28:	beq	16aac <ReadCompressedDataSlabN+0x868>
   16c2c:	sub	r7, r7, r2
   16c30:	ldr	r2, [sp, #20]
   16c34:	mov	r1, r8
   16c38:	mov	r0, sl
   16c3c:	ldr	r2, [r2]
   16c40:	mla	r3, r3, r2, r7
   16c44:	str	r2, [sp, #36]	; 0x24
   16c48:	ldr	r2, [sp, #256]	; 0x100
   16c4c:	bl	21bc <InflateSkipData>
   16c50:	ldr	r3, [r4, r6, lsl #2]
   16c54:	ldr	r2, [sp, #36]	; 0x24
   16c58:	mla	r7, r3, r2, r7
   16c5c:	add	r5, r5, r7
   16c60:	ldr	r3, [sp, #20]
   16c64:	add	r6, r6, #1
   16c68:	add	r3, r3, #4
   16c6c:	str	r3, [sp, #20]
   16c70:	ldr	r3, [sp, #16]
   16c74:	add	r3, r3, #4
   16c78:	str	r3, [sp, #16]
   16c7c:	b	16bd4 <ReadCompressedDataSlabN+0x990>
   16c80:	ldr	r3, [fp]
   16c84:	add	r1, sp, #40	; 0x28
   16c88:	mov	r5, #0
   16c8c:	ldr	ip, [sp, #264]	; 0x108
   16c90:	sub	r3, r3, #1
   16c94:	str	r3, [sp, #40]	; 0x28
   16c98:	ldr	r3, [sp, #264]	; 0x108
   16c9c:	ldr	r3, [r3]
   16ca0:	str	r3, [sp, #120]	; 0x78
   16ca4:	ldr	r3, [r9]
   16ca8:	str	r3, [sp, #28]
   16cac:	add	r3, sp, #120	; 0x78
   16cb0:	mov	r2, r3
   16cb4:	str	r3, [sp, #32]
   16cb8:	mov	r3, #1
   16cbc:	ldr	r0, [sp, #260]	; 0x104
   16cc0:	cmp	r3, r0
   16cc4:	blt	16e38 <ReadCompressedDataSlabN+0xbf4>
   16cc8:	add	r6, sp, #160	; 0xa0
   16ccc:	mov	r3, r5
   16cd0:	ldr	r2, [sp, #256]	; 0x100
   16cd4:	mov	r1, r6
   16cd8:	mov	r0, sl
   16cdc:	bl	21bc <InflateSkipData>
   16ce0:	ldr	r3, [fp]
   16ce4:	cmp	r3, #1
   16ce8:	mov	r3, #0
   16cec:	movne	r8, r6
   16cf0:	strne	r3, [sp, #24]
   16cf4:	bne	16fb0 <ReadCompressedDataSlabN+0xd6c>
   16cf8:	str	r3, [sp, #20]
   16cfc:	ldr	r3, [sp, #20]
   16d00:	ldr	r2, [sp, #28]
   16d04:	cmp	r3, r2
   16d08:	bge	163c0 <ReadCompressedDataSlabN+0x17c>
   16d0c:	ldr	r3, [r4]
   16d10:	cmp	r3, #0
   16d14:	beq	16d30 <ReadCompressedDataSlabN+0xaec>
   16d18:	mov	r1, r6
   16d1c:	mov	r0, sl
   16d20:	ldr	r2, [sp, #256]	; 0x100
   16d24:	bl	21bc <InflateSkipData>
   16d28:	ldr	r3, [r4]
   16d2c:	add	r5, r5, r3
   16d30:	ldr	r3, [r9]
   16d34:	mov	r0, sl
   16d38:	add	fp, sp, #80	; 0x50
   16d3c:	mov	r7, #1
   16d40:	ldr	r2, [sp, #12]
   16d44:	ldr	r1, [sp, #20]
   16d48:	str	r3, [sp]
   16d4c:	ldr	r3, [sp, #256]	; 0x100
   16d50:	add	r2, r2, r1, lsl #3
   16d54:	mov	r1, r6
   16d58:	bl	10c10 <ReadCompressedInt64Data>
   16d5c:	ldr	r3, [sp, #264]	; 0x108
   16d60:	mov	r1, r6
   16d64:	mov	r0, sl
   16d68:	ldr	r2, [r9]
   16d6c:	ldr	r3, [r3]
   16d70:	sub	r3, r3, r2
   16d74:	ldr	r2, [r4]
   16d78:	sub	r3, r3, r2
   16d7c:	ldr	r2, [sp, #256]	; 0x100
   16d80:	bl	21bc <InflateSkipData>
   16d84:	ldr	r3, [sp, #264]	; 0x108
   16d88:	ldr	r2, [r4]
   16d8c:	ldr	r3, [r3]
   16d90:	sub	r3, r3, r2
   16d94:	add	r5, r3, r5
   16d98:	ldr	r3, [sp, #32]
   16d9c:	str	r3, [sp, #16]
   16da0:	ldr	r3, [sp, #260]	; 0x104
   16da4:	cmp	r7, r3
   16da8:	bge	16f0c <ReadCompressedDataSlabN+0xcc8>
   16dac:	ldr	r3, [fp, #4]
   16db0:	ldr	r1, [r9, r7, lsl #2]
   16db4:	add	r3, r3, #1
   16db8:	sdiv	r2, r3, r1
   16dbc:	str	r3, [fp, #4]
   16dc0:	mls	r3, r1, r2, r3
   16dc4:	cmp	r3, #0
   16dc8:	bne	16ee4 <ReadCompressedDataSlabN+0xca0>
   16dcc:	str	r3, [fp, #4]
   16dd0:	ldr	r3, [sp, #16]
   16dd4:	ldr	r8, [r3, #4]
   16dd8:	ldr	r3, [r4, r7, lsl #2]
   16ddc:	sdiv	r2, r5, r8
   16de0:	mls	r2, r8, r2, r5
   16de4:	cmp	r2, #0
   16de8:	beq	16eb4 <ReadCompressedDataSlabN+0xc70>
   16dec:	sub	r8, r8, r2
   16df0:	ldr	r2, [sp, #16]
   16df4:	mov	r1, r6
   16df8:	mov	r0, sl
   16dfc:	ldr	r2, [r2]
   16e00:	mla	r3, r3, r2, r8
   16e04:	str	r2, [sp, #24]
   16e08:	ldr	r2, [sp, #256]	; 0x100
   16e0c:	bl	21bc <InflateSkipData>
   16e10:	ldr	r3, [r4, r7, lsl #2]
   16e14:	ldr	r2, [sp, #24]
   16e18:	mla	r8, r3, r2, r8
   16e1c:	add	r5, r5, r8
   16e20:	ldr	r3, [sp, #16]
   16e24:	add	r7, r7, #1
   16e28:	add	fp, fp, #4
   16e2c:	add	r3, r3, #4
   16e30:	str	r3, [sp, #16]
   16e34:	b	16da0 <ReadCompressedDataSlabN+0xb5c>
   16e38:	ldr	r0, [fp, r3, lsl #2]
   16e3c:	mov	r6, r2
   16e40:	sub	r0, r0, #1
   16e44:	str	r0, [r1, #4]
   16e48:	ldr	r0, [ip], #4
   16e4c:	str	r0, [r2, #4]
   16e50:	mov	r0, ip
   16e54:	ldr	lr, [sp, #264]	; 0x108
   16e58:	cmp	r0, lr
   16e5c:	bne	16e8c <ReadCompressedDataSlabN+0xc48>
   16e60:	ldr	r0, [r9, r3, lsl #2]
   16e64:	add	r2, r2, #4
   16e68:	add	r1, r1, #4
   16e6c:	ldr	lr, [sp, #28]
   16e70:	mul	r0, r0, lr
   16e74:	ldr	lr, [r4, r3, lsl #2]
   16e78:	add	r3, r3, #1
   16e7c:	str	r0, [sp, #28]
   16e80:	ldr	r0, [r6]
   16e84:	mla	r5, lr, r0, r5
   16e88:	b	16cbc <ReadCompressedDataSlabN+0xa78>
   16e8c:	mov	r7, r0
   16e90:	ldr	lr, [r0, #-4]!
   16e94:	ldr	r8, [r1, #4]
   16e98:	mul	lr, lr, r8
   16e9c:	ldr	r8, [r2, #4]
   16ea0:	str	lr, [r1, #4]
   16ea4:	ldr	lr, [r7]
   16ea8:	mul	lr, lr, r8
   16eac:	str	lr, [r2, #4]
   16eb0:	b	16e54 <ReadCompressedDataSlabN+0xc10>
   16eb4:	cmp	r3, #0
   16eb8:	beq	16e20 <ReadCompressedDataSlabN+0xbdc>
   16ebc:	ldr	r2, [sp, #16]
   16ec0:	mov	r1, r6
   16ec4:	mov	r0, sl
   16ec8:	ldr	r8, [r2]
   16ecc:	ldr	r2, [sp, #256]	; 0x100
   16ed0:	mul	r3, r3, r8
   16ed4:	bl	21bc <InflateSkipData>
   16ed8:	ldr	r3, [r4, r7, lsl #2]
   16edc:	mla	r5, r3, r8, r5
   16ee0:	b	16e20 <ReadCompressedDataSlabN+0xbdc>
   16ee4:	add	r3, sp, #216	; 0xd8
   16ee8:	add	r7, r3, r7, lsl #2
   16eec:	ldr	r3, [r7, #-176]	; 0xffffff50
   16ef0:	cmp	r3, #0
   16ef4:	beq	16f0c <ReadCompressedDataSlabN+0xcc8>
   16ef8:	mov	r1, r6
   16efc:	mov	r0, sl
   16f00:	ldr	r2, [sp, #256]	; 0x100
   16f04:	add	r5, r5, r3
   16f08:	bl	21bc <InflateSkipData>
   16f0c:	ldr	r3, [r9]
   16f10:	ldr	r2, [sp, #20]
   16f14:	add	r3, r2, r3
   16f18:	b	16cf8 <ReadCompressedDataSlabN+0xab4>
   16f1c:	bl	10c10 <ReadCompressedInt64Data>
   16f20:	ldr	r3, [fp]
   16f24:	mov	r1, r8
   16f28:	mov	r0, sl
   16f2c:	add	r6, r6, #1
   16f30:	ldr	r2, [sp, #256]	; 0x100
   16f34:	sub	r3, r3, #1
   16f38:	bl	21bc <InflateSkipData>
   16f3c:	ldr	r3, [fp]
   16f40:	add	r5, r5, r3
   16f44:	b	16ff4 <ReadCompressedDataSlabN+0xdb0>
   16f48:	cmp	r3, #0
   16f4c:	beq	170fc <ReadCompressedDataSlabN+0xeb8>
   16f50:	ldr	r2, [sp, #16]
   16f54:	mov	r1, r8
   16f58:	mov	r0, sl
   16f5c:	ldr	r7, [r2]
   16f60:	ldr	r2, [sp, #256]	; 0x100
   16f64:	mul	r3, r3, r7
   16f68:	bl	21bc <InflateSkipData>
   16f6c:	ldr	r3, [r4, r6, lsl #2]
   16f70:	mla	r5, r3, r7, r5
   16f74:	b	170fc <ReadCompressedDataSlabN+0xeb8>
   16f78:	add	r3, sp, #216	; 0xd8
   16f7c:	add	r6, r3, r6, lsl #2
   16f80:	ldr	r3, [r6, #-176]	; 0xffffff50
   16f84:	cmp	r3, #0
   16f88:	beq	16fa0 <ReadCompressedDataSlabN+0xd5c>
   16f8c:	mov	r1, r8
   16f90:	mov	r0, sl
   16f94:	ldr	r2, [sp, #256]	; 0x100
   16f98:	add	r5, r5, r3
   16f9c:	bl	21bc <InflateSkipData>
   16fa0:	ldr	r3, [r9]
   16fa4:	ldr	r2, [sp, #24]
   16fa8:	add	r3, r2, r3
   16fac:	str	r3, [sp, #24]
   16fb0:	ldr	r3, [sp, #24]
   16fb4:	ldr	r2, [sp, #28]
   16fb8:	cmp	r3, r2
   16fbc:	bge	163c0 <ReadCompressedDataSlabN+0x17c>
   16fc0:	ldr	r3, [r4]
   16fc4:	cmp	r3, #0
   16fc8:	beq	16fe4 <ReadCompressedDataSlabN+0xda0>
   16fcc:	mov	r1, r8
   16fd0:	mov	r0, sl
   16fd4:	ldr	r2, [sp, #256]	; 0x100
   16fd8:	bl	21bc <InflateSkipData>
   16fdc:	ldr	r3, [r4]
   16fe0:	add	r5, r5, r3
   16fe4:	ldr	r3, [sp, #12]
   16fe8:	mov	r6, #0
   16fec:	ldr	r2, [sp, #24]
   16ff0:	add	r7, r3, r2, lsl #3
   16ff4:	ldr	r3, [r9]
   16ff8:	mov	r2, r7
   16ffc:	mov	r1, r8
   17000:	add	r7, r7, #8
   17004:	mov	r0, sl
   17008:	sub	r3, r3, #1
   1700c:	cmp	r3, r6
   17010:	mov	r3, #1
   17014:	str	r3, [sp]
   17018:	ldr	r3, [sp, #256]	; 0x100
   1701c:	bgt	16f1c <ReadCompressedDataSlabN+0xcd8>
   17020:	bl	10c10 <ReadCompressedInt64Data>
   17024:	ldr	r3, [r9]
   17028:	mov	r0, sl
   1702c:	mov	r6, #1
   17030:	ldr	r2, [r4]
   17034:	ldr	r1, [fp]
   17038:	sub	r3, r3, #1
   1703c:	mla	r3, r1, r3, r2
   17040:	ldr	r2, [sp, #264]	; 0x108
   17044:	mov	r1, r8
   17048:	ldr	r2, [r2]
   1704c:	sub	r3, r2, r3
   17050:	ldr	r2, [sp, #256]	; 0x100
   17054:	add	r5, r5, r3
   17058:	sub	r3, r3, #1
   1705c:	bl	21bc <InflateSkipData>
   17060:	add	r3, sp, #80	; 0x50
   17064:	str	r3, [sp, #20]
   17068:	ldr	r3, [sp, #32]
   1706c:	str	r3, [sp, #16]
   17070:	ldr	r3, [sp, #260]	; 0x104
   17074:	cmp	r6, r3
   17078:	bge	16fa0 <ReadCompressedDataSlabN+0xd5c>
   1707c:	ldr	r3, [sp, #20]
   17080:	ldr	r1, [r9, r6, lsl #2]
   17084:	ldr	r2, [sp, #20]
   17088:	ldr	r3, [r3, #4]
   1708c:	add	r3, r3, #1
   17090:	str	r3, [r2, #4]
   17094:	sdiv	r2, r3, r1
   17098:	mls	r3, r1, r2, r3
   1709c:	cmp	r3, #0
   170a0:	bne	16f78 <ReadCompressedDataSlabN+0xd34>
   170a4:	ldr	r2, [sp, #20]
   170a8:	str	r3, [r2, #4]
   170ac:	ldr	r3, [sp, #16]
   170b0:	ldr	r7, [r3, #4]
   170b4:	ldr	r3, [r4, r6, lsl #2]
   170b8:	sdiv	r2, r5, r7
   170bc:	mls	r2, r7, r2, r5
   170c0:	cmp	r2, #0
   170c4:	beq	16f48 <ReadCompressedDataSlabN+0xd04>
   170c8:	sub	r7, r7, r2
   170cc:	ldr	r2, [sp, #16]
   170d0:	mov	r1, r8
   170d4:	mov	r0, sl
   170d8:	ldr	r2, [r2]
   170dc:	mla	r3, r3, r2, r7
   170e0:	str	r2, [sp, #36]	; 0x24
   170e4:	ldr	r2, [sp, #256]	; 0x100
   170e8:	bl	21bc <InflateSkipData>
   170ec:	ldr	r3, [r4, r6, lsl #2]
   170f0:	ldr	r2, [sp, #36]	; 0x24
   170f4:	mla	r7, r3, r2, r7
   170f8:	add	r5, r5, r7
   170fc:	ldr	r3, [sp, #16]
   17100:	add	r6, r6, #1
   17104:	add	r3, r3, #4
   17108:	str	r3, [sp, #16]
   1710c:	ldr	r3, [sp, #20]
   17110:	add	r3, r3, #4
   17114:	str	r3, [sp, #20]
   17118:	b	17070 <ReadCompressedDataSlabN+0xe2c>
   1711c:	ldr	r3, [fp]
   17120:	add	r1, sp, #40	; 0x28
   17124:	mov	r5, #0
   17128:	ldr	ip, [sp, #264]	; 0x108
   1712c:	sub	r3, r3, #1
   17130:	str	r3, [sp, #40]	; 0x28
   17134:	ldr	r3, [sp, #264]	; 0x108
   17138:	ldr	r3, [r3]
   1713c:	str	r3, [sp, #120]	; 0x78
   17140:	ldr	r3, [r9]
   17144:	str	r3, [sp, #28]
   17148:	add	r3, sp, #120	; 0x78
   1714c:	mov	r2, r3
   17150:	str	r3, [sp, #32]
   17154:	mov	r3, #1
   17158:	ldr	r0, [sp, #260]	; 0x104
   1715c:	cmp	r3, r0
   17160:	blt	172d4 <ReadCompressedDataSlabN+0x1090>
   17164:	add	r6, sp, #160	; 0xa0
   17168:	mov	r3, r5
   1716c:	ldr	r2, [sp, #256]	; 0x100
   17170:	mov	r1, r6
   17174:	mov	r0, sl
   17178:	bl	21bc <InflateSkipData>
   1717c:	ldr	r3, [fp]
   17180:	cmp	r3, #1
   17184:	mov	r3, #0
   17188:	movne	r8, r6
   1718c:	strne	r3, [sp, #24]
   17190:	bne	1744c <ReadCompressedDataSlabN+0x1208>
   17194:	str	r3, [sp, #20]
   17198:	ldr	r3, [sp, #20]
   1719c:	ldr	r2, [sp, #28]
   171a0:	cmp	r3, r2
   171a4:	bge	163c0 <ReadCompressedDataSlabN+0x17c>
   171a8:	ldr	r3, [r4]
   171ac:	cmp	r3, #0
   171b0:	beq	171cc <ReadCompressedDataSlabN+0xf88>
   171b4:	mov	r1, r6
   171b8:	mov	r0, sl
   171bc:	ldr	r2, [sp, #256]	; 0x100
   171c0:	bl	21bc <InflateSkipData>
   171c4:	ldr	r3, [r4]
   171c8:	add	r5, r5, r3
   171cc:	ldr	r3, [r9]
   171d0:	mov	r0, sl
   171d4:	add	fp, sp, #80	; 0x50
   171d8:	mov	r7, #1
   171dc:	ldr	r2, [sp, #12]
   171e0:	ldr	r1, [sp, #20]
   171e4:	str	r3, [sp]
   171e8:	ldr	r3, [sp, #256]	; 0x100
   171ec:	add	r2, r2, r1, lsl #3
   171f0:	mov	r1, r6
   171f4:	bl	11148 <ReadCompressedUInt64Data>
   171f8:	ldr	r3, [sp, #264]	; 0x108
   171fc:	mov	r1, r6
   17200:	mov	r0, sl
   17204:	ldr	r2, [r9]
   17208:	ldr	r3, [r3]
   1720c:	sub	r3, r3, r2
   17210:	ldr	r2, [r4]
   17214:	sub	r3, r3, r2
   17218:	ldr	r2, [sp, #256]	; 0x100
   1721c:	bl	21bc <InflateSkipData>
   17220:	ldr	r3, [sp, #264]	; 0x108
   17224:	ldr	r2, [r4]
   17228:	ldr	r3, [r3]
   1722c:	sub	r3, r3, r2
   17230:	add	r5, r3, r5
   17234:	ldr	r3, [sp, #32]
   17238:	str	r3, [sp, #16]
   1723c:	ldr	r3, [sp, #260]	; 0x104
   17240:	cmp	r7, r3
   17244:	bge	173a8 <ReadCompressedDataSlabN+0x1164>
   17248:	ldr	r3, [fp, #4]
   1724c:	ldr	r1, [r9, r7, lsl #2]
   17250:	add	r3, r3, #1
   17254:	sdiv	r2, r3, r1
   17258:	str	r3, [fp, #4]
   1725c:	mls	r3, r1, r2, r3
   17260:	cmp	r3, #0
   17264:	bne	17380 <ReadCompressedDataSlabN+0x113c>
   17268:	str	r3, [fp, #4]
   1726c:	ldr	r3, [sp, #16]
   17270:	ldr	r8, [r3, #4]
   17274:	ldr	r3, [r4, r7, lsl #2]
   17278:	sdiv	r2, r5, r8
   1727c:	mls	r2, r8, r2, r5
   17280:	cmp	r2, #0
   17284:	beq	17350 <ReadCompressedDataSlabN+0x110c>
   17288:	sub	r8, r8, r2
   1728c:	ldr	r2, [sp, #16]
   17290:	mov	r1, r6
   17294:	mov	r0, sl
   17298:	ldr	r2, [r2]
   1729c:	mla	r3, r3, r2, r8
   172a0:	str	r2, [sp, #24]
   172a4:	ldr	r2, [sp, #256]	; 0x100
   172a8:	bl	21bc <InflateSkipData>
   172ac:	ldr	r3, [r4, r7, lsl #2]
   172b0:	ldr	r2, [sp, #24]
   172b4:	mla	r8, r3, r2, r8
   172b8:	add	r5, r5, r8
   172bc:	ldr	r3, [sp, #16]
   172c0:	add	r7, r7, #1
   172c4:	add	fp, fp, #4
   172c8:	add	r3, r3, #4
   172cc:	str	r3, [sp, #16]
   172d0:	b	1723c <ReadCompressedDataSlabN+0xff8>
   172d4:	ldr	r0, [fp, r3, lsl #2]
   172d8:	mov	r6, r2
   172dc:	sub	r0, r0, #1
   172e0:	str	r0, [r1, #4]
   172e4:	ldr	r0, [ip], #4
   172e8:	str	r0, [r2, #4]
   172ec:	mov	r0, ip
   172f0:	ldr	lr, [sp, #264]	; 0x108
   172f4:	cmp	r0, lr
   172f8:	bne	17328 <ReadCompressedDataSlabN+0x10e4>
   172fc:	ldr	r0, [r9, r3, lsl #2]
   17300:	add	r2, r2, #4
   17304:	add	r1, r1, #4
   17308:	ldr	lr, [sp, #28]
   1730c:	mul	r0, r0, lr
   17310:	ldr	lr, [r4, r3, lsl #2]
   17314:	add	r3, r3, #1
   17318:	str	r0, [sp, #28]
   1731c:	ldr	r0, [r6]
   17320:	mla	r5, lr, r0, r5
   17324:	b	17158 <ReadCompressedDataSlabN+0xf14>
   17328:	mov	r7, r0
   1732c:	ldr	lr, [r0, #-4]!
   17330:	ldr	r8, [r1, #4]
   17334:	mul	lr, lr, r8
   17338:	ldr	r8, [r2, #4]
   1733c:	str	lr, [r1, #4]
   17340:	ldr	lr, [r7]
   17344:	mul	lr, lr, r8
   17348:	str	lr, [r2, #4]
   1734c:	b	172f0 <ReadCompressedDataSlabN+0x10ac>
   17350:	cmp	r3, #0
   17354:	beq	172bc <ReadCompressedDataSlabN+0x1078>
   17358:	ldr	r2, [sp, #16]
   1735c:	mov	r1, r6
   17360:	mov	r0, sl
   17364:	ldr	r8, [r2]
   17368:	ldr	r2, [sp, #256]	; 0x100
   1736c:	mul	r3, r3, r8
   17370:	bl	21bc <InflateSkipData>
   17374:	ldr	r3, [r4, r7, lsl #2]
   17378:	mla	r5, r3, r8, r5
   1737c:	b	172bc <ReadCompressedDataSlabN+0x1078>
   17380:	add	r3, sp, #216	; 0xd8
   17384:	add	r7, r3, r7, lsl #2
   17388:	ldr	r3, [r7, #-176]	; 0xffffff50
   1738c:	cmp	r3, #0
   17390:	beq	173a8 <ReadCompressedDataSlabN+0x1164>
   17394:	mov	r1, r6
   17398:	mov	r0, sl
   1739c:	ldr	r2, [sp, #256]	; 0x100
   173a0:	add	r5, r5, r3
   173a4:	bl	21bc <InflateSkipData>
   173a8:	ldr	r3, [r9]
   173ac:	ldr	r2, [sp, #20]
   173b0:	add	r3, r2, r3
   173b4:	b	17194 <ReadCompressedDataSlabN+0xf50>
   173b8:	bl	11148 <ReadCompressedUInt64Data>
   173bc:	ldr	r3, [fp]
   173c0:	mov	r1, r8
   173c4:	mov	r0, sl
   173c8:	add	r6, r6, #1
   173cc:	ldr	r2, [sp, #256]	; 0x100
   173d0:	sub	r3, r3, #1
   173d4:	bl	21bc <InflateSkipData>
   173d8:	ldr	r3, [fp]
   173dc:	add	r5, r5, r3
   173e0:	b	17490 <ReadCompressedDataSlabN+0x124c>
   173e4:	cmp	r3, #0
   173e8:	beq	17598 <ReadCompressedDataSlabN+0x1354>
   173ec:	ldr	r2, [sp, #16]
   173f0:	mov	r1, r8
   173f4:	mov	r0, sl
   173f8:	ldr	r7, [r2]
   173fc:	ldr	r2, [sp, #256]	; 0x100
   17400:	mul	r3, r3, r7
   17404:	bl	21bc <InflateSkipData>
   17408:	ldr	r3, [r4, r6, lsl #2]
   1740c:	mla	r5, r3, r7, r5
   17410:	b	17598 <ReadCompressedDataSlabN+0x1354>
   17414:	add	r3, sp, #216	; 0xd8
   17418:	add	r6, r3, r6, lsl #2
   1741c:	ldr	r3, [r6, #-176]	; 0xffffff50
   17420:	cmp	r3, #0
   17424:	beq	1743c <ReadCompressedDataSlabN+0x11f8>
   17428:	mov	r1, r8
   1742c:	mov	r0, sl
   17430:	ldr	r2, [sp, #256]	; 0x100
   17434:	add	r5, r5, r3
   17438:	bl	21bc <InflateSkipData>
   1743c:	ldr	r3, [r9]
   17440:	ldr	r2, [sp, #24]
   17444:	add	r3, r2, r3
   17448:	str	r3, [sp, #24]
   1744c:	ldr	r3, [sp, #24]
   17450:	ldr	r2, [sp, #28]
   17454:	cmp	r3, r2
   17458:	bge	163c0 <ReadCompressedDataSlabN+0x17c>
   1745c:	ldr	r3, [r4]
   17460:	cmp	r3, #0
   17464:	beq	17480 <ReadCompressedDataSlabN+0x123c>
   17468:	mov	r1, r8
   1746c:	mov	r0, sl
   17470:	ldr	r2, [sp, #256]	; 0x100
   17474:	bl	21bc <InflateSkipData>
   17478:	ldr	r3, [r4]
   1747c:	add	r5, r5, r3
   17480:	ldr	r3, [sp, #12]
   17484:	mov	r6, #0
   17488:	ldr	r2, [sp, #24]
   1748c:	add	r7, r3, r2, lsl #3
   17490:	ldr	r3, [r9]
   17494:	mov	r2, r7
   17498:	mov	r1, r8
   1749c:	add	r7, r7, #8
   174a0:	mov	r0, sl
   174a4:	sub	r3, r3, #1
   174a8:	cmp	r3, r6
   174ac:	mov	r3, #1
   174b0:	str	r3, [sp]
   174b4:	ldr	r3, [sp, #256]	; 0x100
   174b8:	bgt	173b8 <ReadCompressedDataSlabN+0x1174>
   174bc:	bl	11148 <ReadCompressedUInt64Data>
   174c0:	ldr	r3, [r9]
   174c4:	mov	r0, sl
   174c8:	mov	r6, #1
   174cc:	ldr	r2, [r4]
   174d0:	ldr	r1, [fp]
   174d4:	sub	r3, r3, #1
   174d8:	mla	r3, r1, r3, r2
   174dc:	ldr	r2, [sp, #264]	; 0x108
   174e0:	mov	r1, r8
   174e4:	ldr	r2, [r2]
   174e8:	sub	r3, r2, r3
   174ec:	ldr	r2, [sp, #256]	; 0x100
   174f0:	add	r5, r5, r3
   174f4:	sub	r3, r3, #1
   174f8:	bl	21bc <InflateSkipData>
   174fc:	add	r3, sp, #80	; 0x50
   17500:	str	r3, [sp, #20]
   17504:	ldr	r3, [sp, #32]
   17508:	str	r3, [sp, #16]
   1750c:	ldr	r3, [sp, #260]	; 0x104
   17510:	cmp	r6, r3
   17514:	bge	1743c <ReadCompressedDataSlabN+0x11f8>
   17518:	ldr	r3, [sp, #20]
   1751c:	ldr	r1, [r9, r6, lsl #2]
   17520:	ldr	r2, [sp, #20]
   17524:	ldr	r3, [r3, #4]
   17528:	add	r3, r3, #1
   1752c:	str	r3, [r2, #4]
   17530:	sdiv	r2, r3, r1
   17534:	mls	r3, r1, r2, r3
   17538:	cmp	r3, #0
   1753c:	bne	17414 <ReadCompressedDataSlabN+0x11d0>
   17540:	ldr	r2, [sp, #20]
   17544:	str	r3, [r2, #4]
   17548:	ldr	r3, [sp, #16]
   1754c:	ldr	r7, [r3, #4]
   17550:	ldr	r3, [r4, r6, lsl #2]
   17554:	sdiv	r2, r5, r7
   17558:	mls	r2, r7, r2, r5
   1755c:	cmp	r2, #0
   17560:	beq	173e4 <ReadCompressedDataSlabN+0x11a0>
   17564:	sub	r7, r7, r2
   17568:	ldr	r2, [sp, #16]
   1756c:	mov	r1, r8
   17570:	mov	r0, sl
   17574:	ldr	r2, [r2]
   17578:	mla	r3, r3, r2, r7
   1757c:	str	r2, [sp, #36]	; 0x24
   17580:	ldr	r2, [sp, #256]	; 0x100
   17584:	bl	21bc <InflateSkipData>
   17588:	ldr	r3, [r4, r6, lsl #2]
   1758c:	ldr	r2, [sp, #36]	; 0x24
   17590:	mla	r7, r3, r2, r7
   17594:	add	r5, r5, r7
   17598:	ldr	r3, [sp, #16]
   1759c:	add	r6, r6, #1
   175a0:	add	r3, r3, #4
   175a4:	str	r3, [sp, #16]
   175a8:	ldr	r3, [sp, #20]
   175ac:	add	r3, r3, #4
   175b0:	str	r3, [sp, #20]
   175b4:	b	1750c <ReadCompressedDataSlabN+0x12c8>
   175b8:	ldr	r3, [fp]
   175bc:	add	r1, sp, #40	; 0x28
   175c0:	mov	r5, #0
   175c4:	ldr	ip, [sp, #264]	; 0x108
   175c8:	sub	r3, r3, #1
   175cc:	str	r3, [sp, #40]	; 0x28
   175d0:	ldr	r3, [sp, #264]	; 0x108
   175d4:	ldr	r3, [r3]
   175d8:	str	r3, [sp, #120]	; 0x78
   175dc:	ldr	r3, [r9]
   175e0:	str	r3, [sp, #28]
   175e4:	add	r3, sp, #120	; 0x78
   175e8:	mov	r2, r3
   175ec:	str	r3, [sp, #32]
   175f0:	mov	r3, #1
   175f4:	ldr	r0, [sp, #260]	; 0x104
   175f8:	cmp	r3, r0
   175fc:	blt	17770 <ReadCompressedDataSlabN+0x152c>
   17600:	add	r6, sp, #160	; 0xa0
   17604:	mov	r3, r5
   17608:	ldr	r2, [sp, #256]	; 0x100
   1760c:	mov	r1, r6
   17610:	mov	r0, sl
   17614:	bl	21bc <InflateSkipData>
   17618:	ldr	r3, [fp]
   1761c:	cmp	r3, #1
   17620:	mov	r3, #0
   17624:	movne	r8, r6
   17628:	strne	r3, [sp, #24]
   1762c:	bne	178e8 <ReadCompressedDataSlabN+0x16a4>
   17630:	str	r3, [sp, #20]
   17634:	ldr	r3, [sp, #20]
   17638:	ldr	r2, [sp, #28]
   1763c:	cmp	r3, r2
   17640:	bge	163c0 <ReadCompressedDataSlabN+0x17c>
   17644:	ldr	r3, [r4]
   17648:	cmp	r3, #0
   1764c:	beq	17668 <ReadCompressedDataSlabN+0x1424>
   17650:	mov	r1, r6
   17654:	mov	r0, sl
   17658:	ldr	r2, [sp, #256]	; 0x100
   1765c:	bl	21bc <InflateSkipData>
   17660:	ldr	r3, [r4]
   17664:	add	r5, r5, r3
   17668:	ldr	r3, [r9]
   1766c:	mov	r0, sl
   17670:	add	fp, sp, #80	; 0x50
   17674:	mov	r7, #1
   17678:	ldr	r2, [sp, #12]
   1767c:	ldr	r1, [sp, #20]
   17680:	str	r3, [sp]
   17684:	ldr	r3, [sp, #256]	; 0x100
   17688:	add	r2, r2, r1, lsl #2
   1768c:	mov	r1, r6
   17690:	bl	11680 <ReadCompressedInt32Data>
   17694:	ldr	r3, [sp, #264]	; 0x108
   17698:	mov	r1, r6
   1769c:	mov	r0, sl
   176a0:	ldr	r2, [r9]
   176a4:	ldr	r3, [r3]
   176a8:	sub	r3, r3, r2
   176ac:	ldr	r2, [r4]
   176b0:	sub	r3, r3, r2
   176b4:	ldr	r2, [sp, #256]	; 0x100
   176b8:	bl	21bc <InflateSkipData>
   176bc:	ldr	r3, [sp, #264]	; 0x108
   176c0:	ldr	r2, [r4]
   176c4:	ldr	r3, [r3]
   176c8:	sub	r3, r3, r2
   176cc:	add	r5, r3, r5
   176d0:	ldr	r3, [sp, #32]
   176d4:	str	r3, [sp, #16]
   176d8:	ldr	r3, [sp, #260]	; 0x104
   176dc:	cmp	r7, r3
   176e0:	bge	17844 <ReadCompressedDataSlabN+0x1600>
   176e4:	ldr	r3, [fp, #4]
   176e8:	ldr	r1, [r9, r7, lsl #2]
   176ec:	add	r3, r3, #1
   176f0:	sdiv	r2, r3, r1
   176f4:	str	r3, [fp, #4]
   176f8:	mls	r3, r1, r2, r3
   176fc:	cmp	r3, #0
   17700:	bne	1781c <ReadCompressedDataSlabN+0x15d8>
   17704:	str	r3, [fp, #4]
   17708:	ldr	r3, [sp, #16]
   1770c:	ldr	r8, [r3, #4]
   17710:	ldr	r3, [r4, r7, lsl #2]
   17714:	sdiv	r2, r5, r8
   17718:	mls	r2, r8, r2, r5
   1771c:	cmp	r2, #0
   17720:	beq	177ec <ReadCompressedDataSlabN+0x15a8>
   17724:	sub	r8, r8, r2
   17728:	ldr	r2, [sp, #16]
   1772c:	mov	r1, r6
   17730:	mov	r0, sl
   17734:	ldr	r2, [r2]
   17738:	mla	r3, r3, r2, r8
   1773c:	str	r2, [sp, #24]
   17740:	ldr	r2, [sp, #256]	; 0x100
   17744:	bl	21bc <InflateSkipData>
   17748:	ldr	r3, [r4, r7, lsl #2]
   1774c:	ldr	r2, [sp, #24]
   17750:	mla	r8, r3, r2, r8
   17754:	add	r5, r5, r8
   17758:	ldr	r3, [sp, #16]
   1775c:	add	r7, r7, #1
   17760:	add	fp, fp, #4
   17764:	add	r3, r3, #4
   17768:	str	r3, [sp, #16]
   1776c:	b	176d8 <ReadCompressedDataSlabN+0x1494>
   17770:	ldr	r0, [fp, r3, lsl #2]
   17774:	mov	r6, r2
   17778:	sub	r0, r0, #1
   1777c:	str	r0, [r1, #4]
   17780:	ldr	r0, [ip], #4
   17784:	str	r0, [r2, #4]
   17788:	mov	r0, ip
   1778c:	ldr	lr, [sp, #264]	; 0x108
   17790:	cmp	r0, lr
   17794:	bne	177c4 <ReadCompressedDataSlabN+0x1580>
   17798:	ldr	r0, [r9, r3, lsl #2]
   1779c:	add	r2, r2, #4
   177a0:	add	r1, r1, #4
   177a4:	ldr	lr, [sp, #28]
   177a8:	mul	r0, r0, lr
   177ac:	ldr	lr, [r4, r3, lsl #2]
   177b0:	add	r3, r3, #1
   177b4:	str	r0, [sp, #28]
   177b8:	ldr	r0, [r6]
   177bc:	mla	r5, lr, r0, r5
   177c0:	b	175f4 <ReadCompressedDataSlabN+0x13b0>
   177c4:	mov	r7, r0
   177c8:	ldr	lr, [r0, #-4]!
   177cc:	ldr	r8, [r1, #4]
   177d0:	mul	lr, lr, r8
   177d4:	ldr	r8, [r2, #4]
   177d8:	str	lr, [r1, #4]
   177dc:	ldr	lr, [r7]
   177e0:	mul	lr, lr, r8
   177e4:	str	lr, [r2, #4]
   177e8:	b	1778c <ReadCompressedDataSlabN+0x1548>
   177ec:	cmp	r3, #0
   177f0:	beq	17758 <ReadCompressedDataSlabN+0x1514>
   177f4:	ldr	r2, [sp, #16]
   177f8:	mov	r1, r6
   177fc:	mov	r0, sl
   17800:	ldr	r8, [r2]
   17804:	ldr	r2, [sp, #256]	; 0x100
   17808:	mul	r3, r3, r8
   1780c:	bl	21bc <InflateSkipData>
   17810:	ldr	r3, [r4, r7, lsl #2]
   17814:	mla	r5, r3, r8, r5
   17818:	b	17758 <ReadCompressedDataSlabN+0x1514>
   1781c:	add	r3, sp, #216	; 0xd8
   17820:	add	r7, r3, r7, lsl #2
   17824:	ldr	r3, [r7, #-176]	; 0xffffff50
   17828:	cmp	r3, #0
   1782c:	beq	17844 <ReadCompressedDataSlabN+0x1600>
   17830:	mov	r1, r6
   17834:	mov	r0, sl
   17838:	ldr	r2, [sp, #256]	; 0x100
   1783c:	add	r5, r5, r3
   17840:	bl	21bc <InflateSkipData>
   17844:	ldr	r3, [r9]
   17848:	ldr	r2, [sp, #20]
   1784c:	add	r3, r2, r3
   17850:	b	17630 <ReadCompressedDataSlabN+0x13ec>
   17854:	bl	11680 <ReadCompressedInt32Data>
   17858:	ldr	r3, [fp]
   1785c:	mov	r1, r8
   17860:	mov	r0, sl
   17864:	add	r6, r6, #1
   17868:	ldr	r2, [sp, #256]	; 0x100
   1786c:	sub	r3, r3, #1
   17870:	bl	21bc <InflateSkipData>
   17874:	ldr	r3, [fp]
   17878:	add	r5, r5, r3
   1787c:	b	1792c <ReadCompressedDataSlabN+0x16e8>
   17880:	cmp	r3, #0
   17884:	beq	17a34 <ReadCompressedDataSlabN+0x17f0>
   17888:	ldr	r2, [sp, #16]
   1788c:	mov	r1, r8
   17890:	mov	r0, sl
   17894:	ldr	r7, [r2]
   17898:	ldr	r2, [sp, #256]	; 0x100
   1789c:	mul	r3, r3, r7
   178a0:	bl	21bc <InflateSkipData>
   178a4:	ldr	r3, [r4, r6, lsl #2]
   178a8:	mla	r5, r3, r7, r5
   178ac:	b	17a34 <ReadCompressedDataSlabN+0x17f0>
   178b0:	add	r3, sp, #216	; 0xd8
   178b4:	add	r6, r3, r6, lsl #2
   178b8:	ldr	r3, [r6, #-176]	; 0xffffff50
   178bc:	cmp	r3, #0
   178c0:	beq	178d8 <ReadCompressedDataSlabN+0x1694>
   178c4:	mov	r1, r8
   178c8:	mov	r0, sl
   178cc:	ldr	r2, [sp, #256]	; 0x100
   178d0:	add	r5, r5, r3
   178d4:	bl	21bc <InflateSkipData>
   178d8:	ldr	r3, [r9]
   178dc:	ldr	r2, [sp, #24]
   178e0:	add	r3, r2, r3
   178e4:	str	r3, [sp, #24]
   178e8:	ldr	r3, [sp, #24]
   178ec:	ldr	r2, [sp, #28]
   178f0:	cmp	r3, r2
   178f4:	bge	163c0 <ReadCompressedDataSlabN+0x17c>
   178f8:	ldr	r3, [r4]
   178fc:	cmp	r3, #0
   17900:	beq	1791c <ReadCompressedDataSlabN+0x16d8>
   17904:	mov	r1, r8
   17908:	mov	r0, sl
   1790c:	ldr	r2, [sp, #256]	; 0x100
   17910:	bl	21bc <InflateSkipData>
   17914:	ldr	r3, [r4]
   17918:	add	r5, r5, r3
   1791c:	ldr	r3, [sp, #12]
   17920:	mov	r6, #0
   17924:	ldr	r2, [sp, #24]
   17928:	add	r7, r3, r2, lsl #2
   1792c:	ldr	r3, [r9]
   17930:	mov	r2, r7
   17934:	mov	r1, r8
   17938:	add	r7, r7, #4
   1793c:	mov	r0, sl
   17940:	sub	r3, r3, #1
   17944:	cmp	r3, r6
   17948:	mov	r3, #1
   1794c:	str	r3, [sp]
   17950:	ldr	r3, [sp, #256]	; 0x100
   17954:	bgt	17854 <ReadCompressedDataSlabN+0x1610>
   17958:	bl	11680 <ReadCompressedInt32Data>
   1795c:	ldr	r3, [r9]
   17960:	mov	r0, sl
   17964:	mov	r6, #1
   17968:	ldr	r2, [r4]
   1796c:	ldr	r1, [fp]
   17970:	sub	r3, r3, #1
   17974:	mla	r3, r1, r3, r2
   17978:	ldr	r2, [sp, #264]	; 0x108
   1797c:	mov	r1, r8
   17980:	ldr	r2, [r2]
   17984:	sub	r3, r2, r3
   17988:	ldr	r2, [sp, #256]	; 0x100
   1798c:	add	r5, r5, r3
   17990:	sub	r3, r3, #1
   17994:	bl	21bc <InflateSkipData>
   17998:	add	r3, sp, #80	; 0x50
   1799c:	str	r3, [sp, #20]
   179a0:	ldr	r3, [sp, #32]
   179a4:	str	r3, [sp, #16]
   179a8:	ldr	r3, [sp, #260]	; 0x104
   179ac:	cmp	r6, r3
   179b0:	bge	178d8 <ReadCompressedDataSlabN+0x1694>
   179b4:	ldr	r3, [sp, #20]
   179b8:	ldr	r1, [r9, r6, lsl #2]
   179bc:	ldr	r2, [sp, #20]
   179c0:	ldr	r3, [r3, #4]
   179c4:	add	r3, r3, #1
   179c8:	str	r3, [r2, #4]
   179cc:	sdiv	r2, r3, r1
   179d0:	mls	r3, r1, r2, r3
   179d4:	cmp	r3, #0
   179d8:	bne	178b0 <ReadCompressedDataSlabN+0x166c>
   179dc:	ldr	r2, [sp, #20]
   179e0:	str	r3, [r2, #4]
   179e4:	ldr	r3, [sp, #16]
   179e8:	ldr	r7, [r3, #4]
   179ec:	ldr	r3, [r4, r6, lsl #2]
   179f0:	sdiv	r2, r5, r7
   179f4:	mls	r2, r7, r2, r5
   179f8:	cmp	r2, #0
   179fc:	beq	17880 <ReadCompressedDataSlabN+0x163c>
   17a00:	sub	r7, r7, r2
   17a04:	ldr	r2, [sp, #16]
   17a08:	mov	r1, r8
   17a0c:	mov	r0, sl
   17a10:	ldr	r2, [r2]
   17a14:	mla	r3, r3, r2, r7
   17a18:	str	r2, [sp, #36]	; 0x24
   17a1c:	ldr	r2, [sp, #256]	; 0x100
   17a20:	bl	21bc <InflateSkipData>
   17a24:	ldr	r3, [r4, r6, lsl #2]
   17a28:	ldr	r2, [sp, #36]	; 0x24
   17a2c:	mla	r7, r3, r2, r7
   17a30:	add	r5, r5, r7
   17a34:	ldr	r3, [sp, #16]
   17a38:	add	r6, r6, #1
   17a3c:	add	r3, r3, #4
   17a40:	str	r3, [sp, #16]
   17a44:	ldr	r3, [sp, #20]
   17a48:	add	r3, r3, #4
   17a4c:	str	r3, [sp, #20]
   17a50:	b	179a8 <ReadCompressedDataSlabN+0x1764>
   17a54:	ldr	r3, [fp]
   17a58:	add	r1, sp, #40	; 0x28
   17a5c:	mov	r5, #0
   17a60:	ldr	ip, [sp, #264]	; 0x108
   17a64:	sub	r3, r3, #1
   17a68:	str	r3, [sp, #40]	; 0x28
   17a6c:	ldr	r3, [sp, #264]	; 0x108
   17a70:	ldr	r3, [r3]
   17a74:	str	r3, [sp, #120]	; 0x78
   17a78:	ldr	r3, [r9]
   17a7c:	str	r3, [sp, #28]
   17a80:	add	r3, sp, #120	; 0x78
   17a84:	mov	r2, r3
   17a88:	str	r3, [sp, #32]
   17a8c:	mov	r3, #1
   17a90:	ldr	r0, [sp, #260]	; 0x104
   17a94:	cmp	r3, r0
   17a98:	blt	17c0c <ReadCompressedDataSlabN+0x19c8>
   17a9c:	add	r6, sp, #160	; 0xa0
   17aa0:	mov	r3, r5
   17aa4:	ldr	r2, [sp, #256]	; 0x100
   17aa8:	mov	r1, r6
   17aac:	mov	r0, sl
   17ab0:	bl	21bc <InflateSkipData>
   17ab4:	ldr	r3, [fp]
   17ab8:	cmp	r3, #1
   17abc:	mov	r3, #0
   17ac0:	movne	r8, r6
   17ac4:	strne	r3, [sp, #24]
   17ac8:	bne	17d84 <ReadCompressedDataSlabN+0x1b40>
   17acc:	str	r3, [sp, #20]
   17ad0:	ldr	r3, [sp, #20]
   17ad4:	ldr	r2, [sp, #28]
   17ad8:	cmp	r3, r2
   17adc:	bge	163c0 <ReadCompressedDataSlabN+0x17c>
   17ae0:	ldr	r3, [r4]
   17ae4:	cmp	r3, #0
   17ae8:	beq	17b04 <ReadCompressedDataSlabN+0x18c0>
   17aec:	mov	r1, r6
   17af0:	mov	r0, sl
   17af4:	ldr	r2, [sp, #256]	; 0x100
   17af8:	bl	21bc <InflateSkipData>
   17afc:	ldr	r3, [r4]
   17b00:	add	r5, r5, r3
   17b04:	ldr	r3, [r9]
   17b08:	mov	r0, sl
   17b0c:	add	fp, sp, #80	; 0x50
   17b10:	mov	r7, #1
   17b14:	ldr	r2, [sp, #12]
   17b18:	ldr	r1, [sp, #20]
   17b1c:	str	r3, [sp]
   17b20:	ldr	r3, [sp, #256]	; 0x100
   17b24:	add	r2, r2, r1, lsl #2
   17b28:	mov	r1, r6
   17b2c:	bl	11b88 <ReadCompressedUInt32Data>
   17b30:	ldr	r3, [sp, #264]	; 0x108
   17b34:	mov	r1, r6
   17b38:	mov	r0, sl
   17b3c:	ldr	r2, [r9]
   17b40:	ldr	r3, [r3]
   17b44:	sub	r3, r3, r2
   17b48:	ldr	r2, [r4]
   17b4c:	sub	r3, r3, r2
   17b50:	ldr	r2, [sp, #256]	; 0x100
   17b54:	bl	21bc <InflateSkipData>
   17b58:	ldr	r3, [sp, #264]	; 0x108
   17b5c:	ldr	r2, [r4]
   17b60:	ldr	r3, [r3]
   17b64:	sub	r3, r3, r2
   17b68:	add	r5, r3, r5
   17b6c:	ldr	r3, [sp, #32]
   17b70:	str	r3, [sp, #16]
   17b74:	ldr	r3, [sp, #260]	; 0x104
   17b78:	cmp	r7, r3
   17b7c:	bge	17ce0 <ReadCompressedDataSlabN+0x1a9c>
   17b80:	ldr	r3, [fp, #4]
   17b84:	ldr	r1, [r9, r7, lsl #2]
   17b88:	add	r3, r3, #1
   17b8c:	sdiv	r2, r3, r1
   17b90:	str	r3, [fp, #4]
   17b94:	mls	r3, r1, r2, r3
   17b98:	cmp	r3, #0
   17b9c:	bne	17cb8 <ReadCompressedDataSlabN+0x1a74>
   17ba0:	str	r3, [fp, #4]
   17ba4:	ldr	r3, [sp, #16]
   17ba8:	ldr	r8, [r3, #4]
   17bac:	ldr	r3, [r4, r7, lsl #2]
   17bb0:	sdiv	r2, r5, r8
   17bb4:	mls	r2, r8, r2, r5
   17bb8:	cmp	r2, #0
   17bbc:	beq	17c88 <ReadCompressedDataSlabN+0x1a44>
   17bc0:	sub	r8, r8, r2
   17bc4:	ldr	r2, [sp, #16]
   17bc8:	mov	r1, r6
   17bcc:	mov	r0, sl
   17bd0:	ldr	r2, [r2]
   17bd4:	mla	r3, r3, r2, r8
   17bd8:	str	r2, [sp, #24]
   17bdc:	ldr	r2, [sp, #256]	; 0x100
   17be0:	bl	21bc <InflateSkipData>
   17be4:	ldr	r3, [r4, r7, lsl #2]
   17be8:	ldr	r2, [sp, #24]
   17bec:	mla	r8, r3, r2, r8
   17bf0:	add	r5, r5, r8
   17bf4:	ldr	r3, [sp, #16]
   17bf8:	add	r7, r7, #1
   17bfc:	add	fp, fp, #4
   17c00:	add	r3, r3, #4
   17c04:	str	r3, [sp, #16]
   17c08:	b	17b74 <ReadCompressedDataSlabN+0x1930>
   17c0c:	ldr	r0, [fp, r3, lsl #2]
   17c10:	mov	r6, r2
   17c14:	sub	r0, r0, #1
   17c18:	str	r0, [r1, #4]
   17c1c:	ldr	r0, [ip], #4
   17c20:	str	r0, [r2, #4]
   17c24:	mov	r0, ip
   17c28:	ldr	lr, [sp, #264]	; 0x108
   17c2c:	cmp	r0, lr
   17c30:	bne	17c60 <ReadCompressedDataSlabN+0x1a1c>
   17c34:	ldr	r0, [r9, r3, lsl #2]
   17c38:	add	r2, r2, #4
   17c3c:	add	r1, r1, #4
   17c40:	ldr	lr, [sp, #28]
   17c44:	mul	r0, r0, lr
   17c48:	ldr	lr, [r4, r3, lsl #2]
   17c4c:	add	r3, r3, #1
   17c50:	str	r0, [sp, #28]
   17c54:	ldr	r0, [r6]
   17c58:	mla	r5, lr, r0, r5
   17c5c:	b	17a90 <ReadCompressedDataSlabN+0x184c>
   17c60:	mov	r7, r0
   17c64:	ldr	lr, [r0, #-4]!
   17c68:	ldr	r8, [r1, #4]
   17c6c:	mul	lr, lr, r8
   17c70:	ldr	r8, [r2, #4]
   17c74:	str	lr, [r1, #4]
   17c78:	ldr	lr, [r7]
   17c7c:	mul	lr, lr, r8
   17c80:	str	lr, [r2, #4]
   17c84:	b	17c28 <ReadCompressedDataSlabN+0x19e4>
   17c88:	cmp	r3, #0
   17c8c:	beq	17bf4 <ReadCompressedDataSlabN+0x19b0>
   17c90:	ldr	r2, [sp, #16]
   17c94:	mov	r1, r6
   17c98:	mov	r0, sl
   17c9c:	ldr	r8, [r2]
   17ca0:	ldr	r2, [sp, #256]	; 0x100
   17ca4:	mul	r3, r3, r8
   17ca8:	bl	21bc <InflateSkipData>
   17cac:	ldr	r3, [r4, r7, lsl #2]
   17cb0:	mla	r5, r3, r8, r5
   17cb4:	b	17bf4 <ReadCompressedDataSlabN+0x19b0>
   17cb8:	add	r3, sp, #216	; 0xd8
   17cbc:	add	r7, r3, r7, lsl #2
   17cc0:	ldr	r3, [r7, #-176]	; 0xffffff50
   17cc4:	cmp	r3, #0
   17cc8:	beq	17ce0 <ReadCompressedDataSlabN+0x1a9c>
   17ccc:	mov	r1, r6
   17cd0:	mov	r0, sl
   17cd4:	ldr	r2, [sp, #256]	; 0x100
   17cd8:	add	r5, r5, r3
   17cdc:	bl	21bc <InflateSkipData>
   17ce0:	ldr	r3, [r9]
   17ce4:	ldr	r2, [sp, #20]
   17ce8:	add	r3, r2, r3
   17cec:	b	17acc <ReadCompressedDataSlabN+0x1888>
   17cf0:	bl	11b88 <ReadCompressedUInt32Data>
   17cf4:	ldr	r3, [fp]
   17cf8:	mov	r1, r8
   17cfc:	mov	r0, sl
   17d00:	add	r6, r6, #1
   17d04:	ldr	r2, [sp, #256]	; 0x100
   17d08:	sub	r3, r3, #1
   17d0c:	bl	21bc <InflateSkipData>
   17d10:	ldr	r3, [fp]
   17d14:	add	r5, r5, r3
   17d18:	b	17dc8 <ReadCompressedDataSlabN+0x1b84>
   17d1c:	cmp	r3, #0
   17d20:	beq	17ed0 <ReadCompressedDataSlabN+0x1c8c>
   17d24:	ldr	r2, [sp, #16]
   17d28:	mov	r1, r8
   17d2c:	mov	r0, sl
   17d30:	ldr	r7, [r2]
   17d34:	ldr	r2, [sp, #256]	; 0x100
   17d38:	mul	r3, r3, r7
   17d3c:	bl	21bc <InflateSkipData>
   17d40:	ldr	r3, [r4, r6, lsl #2]
   17d44:	mla	r5, r3, r7, r5
   17d48:	b	17ed0 <ReadCompressedDataSlabN+0x1c8c>
   17d4c:	add	r3, sp, #216	; 0xd8
   17d50:	add	r6, r3, r6, lsl #2
   17d54:	ldr	r3, [r6, #-176]	; 0xffffff50
   17d58:	cmp	r3, #0
   17d5c:	beq	17d74 <ReadCompressedDataSlabN+0x1b30>
   17d60:	mov	r1, r8
   17d64:	mov	r0, sl
   17d68:	ldr	r2, [sp, #256]	; 0x100
   17d6c:	add	r5, r5, r3
   17d70:	bl	21bc <InflateSkipData>
   17d74:	ldr	r3, [r9]
   17d78:	ldr	r2, [sp, #24]
   17d7c:	add	r3, r2, r3
   17d80:	str	r3, [sp, #24]
   17d84:	ldr	r3, [sp, #24]
   17d88:	ldr	r2, [sp, #28]
   17d8c:	cmp	r3, r2
   17d90:	bge	163c0 <ReadCompressedDataSlabN+0x17c>
   17d94:	ldr	r3, [r4]
   17d98:	cmp	r3, #0
   17d9c:	beq	17db8 <ReadCompressedDataSlabN+0x1b74>
   17da0:	mov	r1, r8
   17da4:	mov	r0, sl
   17da8:	ldr	r2, [sp, #256]	; 0x100
   17dac:	bl	21bc <InflateSkipData>
   17db0:	ldr	r3, [r4]
   17db4:	add	r5, r5, r3
   17db8:	ldr	r3, [sp, #12]
   17dbc:	mov	r6, #0
   17dc0:	ldr	r2, [sp, #24]
   17dc4:	add	r7, r3, r2, lsl #2
   17dc8:	ldr	r3, [r9]
   17dcc:	mov	r2, r7
   17dd0:	mov	r1, r8
   17dd4:	add	r7, r7, #4
   17dd8:	mov	r0, sl
   17ddc:	sub	r3, r3, #1
   17de0:	cmp	r3, r6
   17de4:	mov	r3, #1
   17de8:	str	r3, [sp]
   17dec:	ldr	r3, [sp, #256]	; 0x100
   17df0:	bgt	17cf0 <ReadCompressedDataSlabN+0x1aac>
   17df4:	bl	11b88 <ReadCompressedUInt32Data>
   17df8:	ldr	r3, [r9]
   17dfc:	mov	r0, sl
   17e00:	mov	r6, #1
   17e04:	ldr	r2, [r4]
   17e08:	ldr	r1, [fp]
   17e0c:	sub	r3, r3, #1
   17e10:	mla	r3, r1, r3, r2
   17e14:	ldr	r2, [sp, #264]	; 0x108
   17e18:	mov	r1, r8
   17e1c:	ldr	r2, [r2]
   17e20:	sub	r3, r2, r3
   17e24:	ldr	r2, [sp, #256]	; 0x100
   17e28:	add	r5, r5, r3
   17e2c:	sub	r3, r3, #1
   17e30:	bl	21bc <InflateSkipData>
   17e34:	add	r3, sp, #80	; 0x50
   17e38:	str	r3, [sp, #20]
   17e3c:	ldr	r3, [sp, #32]
   17e40:	str	r3, [sp, #16]
   17e44:	ldr	r3, [sp, #260]	; 0x104
   17e48:	cmp	r6, r3
   17e4c:	bge	17d74 <ReadCompressedDataSlabN+0x1b30>
   17e50:	ldr	r3, [sp, #20]
   17e54:	ldr	r1, [r9, r6, lsl #2]
   17e58:	ldr	r2, [sp, #20]
   17e5c:	ldr	r3, [r3, #4]
   17e60:	add	r3, r3, #1
   17e64:	str	r3, [r2, #4]
   17e68:	sdiv	r2, r3, r1
   17e6c:	mls	r3, r1, r2, r3
   17e70:	cmp	r3, #0
   17e74:	bne	17d4c <ReadCompressedDataSlabN+0x1b08>
   17e78:	ldr	r2, [sp, #20]
   17e7c:	str	r3, [r2, #4]
   17e80:	ldr	r3, [sp, #16]
   17e84:	ldr	r7, [r3, #4]
   17e88:	ldr	r3, [r4, r6, lsl #2]
   17e8c:	sdiv	r2, r5, r7
   17e90:	mls	r2, r7, r2, r5
   17e94:	cmp	r2, #0
   17e98:	beq	17d1c <ReadCompressedDataSlabN+0x1ad8>
   17e9c:	sub	r7, r7, r2
   17ea0:	ldr	r2, [sp, #16]
   17ea4:	mov	r1, r8
   17ea8:	mov	r0, sl
   17eac:	ldr	r2, [r2]
   17eb0:	mla	r3, r3, r2, r7
   17eb4:	str	r2, [sp, #36]	; 0x24
   17eb8:	ldr	r2, [sp, #256]	; 0x100
   17ebc:	bl	21bc <InflateSkipData>
   17ec0:	ldr	r3, [r4, r6, lsl #2]
   17ec4:	ldr	r2, [sp, #36]	; 0x24
   17ec8:	mla	r7, r3, r2, r7
   17ecc:	add	r5, r5, r7
   17ed0:	ldr	r3, [sp, #16]
   17ed4:	add	r6, r6, #1
   17ed8:	add	r3, r3, #4
   17edc:	str	r3, [sp, #16]
   17ee0:	ldr	r3, [sp, #20]
   17ee4:	add	r3, r3, #4
   17ee8:	str	r3, [sp, #20]
   17eec:	b	17e44 <ReadCompressedDataSlabN+0x1c00>
   17ef0:	ldr	r3, [fp]
   17ef4:	add	r1, sp, #40	; 0x28
   17ef8:	mov	r5, #0
   17efc:	ldr	ip, [sp, #264]	; 0x108
   17f00:	sub	r3, r3, #1
   17f04:	str	r3, [sp, #40]	; 0x28
   17f08:	ldr	r3, [sp, #264]	; 0x108
   17f0c:	ldr	r3, [r3]
   17f10:	str	r3, [sp, #120]	; 0x78
   17f14:	ldr	r3, [r9]
   17f18:	str	r3, [sp, #28]
   17f1c:	add	r3, sp, #120	; 0x78
   17f20:	mov	r2, r3
   17f24:	str	r3, [sp, #32]
   17f28:	mov	r3, #1
   17f2c:	ldr	r0, [sp, #260]	; 0x104
   17f30:	cmp	r3, r0
   17f34:	blt	180a8 <ReadCompressedDataSlabN+0x1e64>
   17f38:	add	r6, sp, #160	; 0xa0
   17f3c:	mov	r3, r5
   17f40:	ldr	r2, [sp, #256]	; 0x100
   17f44:	mov	r1, r6
   17f48:	mov	r0, sl
   17f4c:	bl	21bc <InflateSkipData>
   17f50:	ldr	r3, [fp]
   17f54:	cmp	r3, #1
   17f58:	mov	r3, #0
   17f5c:	movne	r8, r6
   17f60:	strne	r3, [sp, #24]
   17f64:	bne	18220 <ReadCompressedDataSlabN+0x1fdc>
   17f68:	str	r3, [sp, #20]
   17f6c:	ldr	r3, [sp, #20]
   17f70:	ldr	r2, [sp, #28]
   17f74:	cmp	r3, r2
   17f78:	bge	163c0 <ReadCompressedDataSlabN+0x17c>
   17f7c:	ldr	r3, [r4]
   17f80:	cmp	r3, #0
   17f84:	beq	17fa0 <ReadCompressedDataSlabN+0x1d5c>
   17f88:	mov	r1, r6
   17f8c:	mov	r0, sl
   17f90:	ldr	r2, [sp, #256]	; 0x100
   17f94:	bl	21bc <InflateSkipData>
   17f98:	ldr	r3, [r4]
   17f9c:	add	r5, r5, r3
   17fa0:	ldr	r3, [r9]
   17fa4:	mov	r0, sl
   17fa8:	add	fp, sp, #80	; 0x50
   17fac:	mov	r7, #1
   17fb0:	ldr	r2, [sp, #12]
   17fb4:	ldr	r1, [sp, #20]
   17fb8:	str	r3, [sp]
   17fbc:	ldr	r3, [sp, #256]	; 0x100
   17fc0:	add	r2, r2, r1, lsl #1
   17fc4:	mov	r1, r6
   17fc8:	bl	12090 <ReadCompressedInt16Data>
   17fcc:	ldr	r3, [sp, #264]	; 0x108
   17fd0:	mov	r1, r6
   17fd4:	mov	r0, sl
   17fd8:	ldr	r2, [r9]
   17fdc:	ldr	r3, [r3]
   17fe0:	sub	r3, r3, r2
   17fe4:	ldr	r2, [r4]
   17fe8:	sub	r3, r3, r2
   17fec:	ldr	r2, [sp, #256]	; 0x100
   17ff0:	bl	21bc <InflateSkipData>
   17ff4:	ldr	r3, [sp, #264]	; 0x108
   17ff8:	ldr	r2, [r4]
   17ffc:	ldr	r3, [r3]
   18000:	sub	r3, r3, r2
   18004:	add	r5, r3, r5
   18008:	ldr	r3, [sp, #32]
   1800c:	str	r3, [sp, #16]
   18010:	ldr	r3, [sp, #260]	; 0x104
   18014:	cmp	r7, r3
   18018:	bge	1817c <ReadCompressedDataSlabN+0x1f38>
   1801c:	ldr	r3, [fp, #4]
   18020:	ldr	r1, [r9, r7, lsl #2]
   18024:	add	r3, r3, #1
   18028:	sdiv	r2, r3, r1
   1802c:	str	r3, [fp, #4]
   18030:	mls	r3, r1, r2, r3
   18034:	cmp	r3, #0
   18038:	bne	18154 <ReadCompressedDataSlabN+0x1f10>
   1803c:	str	r3, [fp, #4]
   18040:	ldr	r3, [sp, #16]
   18044:	ldr	r8, [r3, #4]
   18048:	ldr	r3, [r4, r7, lsl #2]
   1804c:	sdiv	r2, r5, r8
   18050:	mls	r2, r8, r2, r5
   18054:	cmp	r2, #0
   18058:	beq	18124 <ReadCompressedDataSlabN+0x1ee0>
   1805c:	sub	r8, r8, r2
   18060:	ldr	r2, [sp, #16]
   18064:	mov	r1, r6
   18068:	mov	r0, sl
   1806c:	ldr	r2, [r2]
   18070:	mla	r3, r3, r2, r8
   18074:	str	r2, [sp, #24]
   18078:	ldr	r2, [sp, #256]	; 0x100
   1807c:	bl	21bc <InflateSkipData>
   18080:	ldr	r3, [r4, r7, lsl #2]
   18084:	ldr	r2, [sp, #24]
   18088:	mla	r8, r3, r2, r8
   1808c:	add	r5, r5, r8
   18090:	ldr	r3, [sp, #16]
   18094:	add	r7, r7, #1
   18098:	add	fp, fp, #4
   1809c:	add	r3, r3, #4
   180a0:	str	r3, [sp, #16]
   180a4:	b	18010 <ReadCompressedDataSlabN+0x1dcc>
   180a8:	ldr	r0, [fp, r3, lsl #2]
   180ac:	mov	r6, r2
   180b0:	sub	r0, r0, #1
   180b4:	str	r0, [r1, #4]
   180b8:	ldr	r0, [ip], #4
   180bc:	str	r0, [r2, #4]
   180c0:	mov	r0, ip
   180c4:	ldr	lr, [sp, #264]	; 0x108
   180c8:	cmp	lr, r0
   180cc:	bne	180fc <ReadCompressedDataSlabN+0x1eb8>
   180d0:	ldr	r0, [r9, r3, lsl #2]
   180d4:	add	r2, r2, #4
   180d8:	add	r1, r1, #4
   180dc:	ldr	lr, [sp, #28]
   180e0:	mul	r0, r0, lr
   180e4:	ldr	lr, [r4, r3, lsl #2]
   180e8:	add	r3, r3, #1
   180ec:	str	r0, [sp, #28]
   180f0:	ldr	r0, [r6]
   180f4:	mla	r5, lr, r0, r5
   180f8:	b	17f2c <ReadCompressedDataSlabN+0x1ce8>
   180fc:	mov	r7, r0
   18100:	ldr	lr, [r0, #-4]!
   18104:	ldr	r8, [r1, #4]
   18108:	mul	lr, lr, r8
   1810c:	ldr	r8, [r2, #4]
   18110:	str	lr, [r1, #4]
   18114:	ldr	lr, [r7]
   18118:	mul	lr, lr, r8
   1811c:	str	lr, [r2, #4]
   18120:	b	180c4 <ReadCompressedDataSlabN+0x1e80>
   18124:	cmp	r3, #0
   18128:	beq	18090 <ReadCompressedDataSlabN+0x1e4c>
   1812c:	ldr	r2, [sp, #16]
   18130:	mov	r1, r6
   18134:	mov	r0, sl
   18138:	ldr	r8, [r2]
   1813c:	ldr	r2, [sp, #256]	; 0x100
   18140:	mul	r3, r3, r8
   18144:	bl	21bc <InflateSkipData>
   18148:	ldr	r3, [r4, r7, lsl #2]
   1814c:	mla	r5, r3, r8, r5
   18150:	b	18090 <ReadCompressedDataSlabN+0x1e4c>
   18154:	add	r3, sp, #216	; 0xd8
   18158:	add	r7, r3, r7, lsl #2
   1815c:	ldr	r3, [r7, #-176]	; 0xffffff50
   18160:	cmp	r3, #0
   18164:	beq	1817c <ReadCompressedDataSlabN+0x1f38>
   18168:	mov	r1, r6
   1816c:	mov	r0, sl
   18170:	ldr	r2, [sp, #256]	; 0x100
   18174:	add	r5, r5, r3
   18178:	bl	21bc <InflateSkipData>
   1817c:	ldr	r3, [r9]
   18180:	ldr	r2, [sp, #20]
   18184:	add	r3, r2, r3
   18188:	b	17f68 <ReadCompressedDataSlabN+0x1d24>
   1818c:	bl	12090 <ReadCompressedInt16Data>
   18190:	ldr	r3, [fp]
   18194:	mov	r1, r8
   18198:	mov	r0, sl
   1819c:	add	r6, r6, #1
   181a0:	ldr	r2, [sp, #256]	; 0x100
   181a4:	sub	r3, r3, #1
   181a8:	bl	21bc <InflateSkipData>
   181ac:	ldr	r3, [fp]
   181b0:	add	r5, r5, r3
   181b4:	b	18264 <ReadCompressedDataSlabN+0x2020>
   181b8:	cmp	r3, #0
   181bc:	beq	1836c <ReadCompressedDataSlabN+0x2128>
   181c0:	ldr	r2, [sp, #20]
   181c4:	mov	r1, r8
   181c8:	mov	r0, sl
   181cc:	ldr	r7, [r2]
   181d0:	ldr	r2, [sp, #256]	; 0x100
   181d4:	mul	r3, r3, r7
   181d8:	bl	21bc <InflateSkipData>
   181dc:	ldr	r3, [r4, r6, lsl #2]
   181e0:	mla	r5, r3, r7, r5
   181e4:	b	1836c <ReadCompressedDataSlabN+0x2128>
   181e8:	add	r3, sp, #216	; 0xd8
   181ec:	add	r6, r3, r6, lsl #2
   181f0:	ldr	r3, [r6, #-176]	; 0xffffff50
   181f4:	cmp	r3, #0
   181f8:	beq	18210 <ReadCompressedDataSlabN+0x1fcc>
   181fc:	mov	r1, r8
   18200:	mov	r0, sl
   18204:	ldr	r2, [sp, #256]	; 0x100
   18208:	add	r5, r5, r3
   1820c:	bl	21bc <InflateSkipData>
   18210:	ldr	r3, [r9]
   18214:	ldr	r2, [sp, #24]
   18218:	add	r3, r2, r3
   1821c:	str	r3, [sp, #24]
   18220:	ldr	r3, [sp, #24]
   18224:	ldr	r2, [sp, #28]
   18228:	cmp	r3, r2
   1822c:	bge	163c0 <ReadCompressedDataSlabN+0x17c>
   18230:	ldr	r3, [r4]
   18234:	cmp	r3, #0
   18238:	beq	18254 <ReadCompressedDataSlabN+0x2010>
   1823c:	mov	r1, r8
   18240:	mov	r0, sl
   18244:	ldr	r2, [sp, #256]	; 0x100
   18248:	bl	21bc <InflateSkipData>
   1824c:	ldr	r3, [r4]
   18250:	add	r5, r5, r3
   18254:	ldr	r3, [sp, #12]
   18258:	mov	r6, #0
   1825c:	ldr	r2, [sp, #24]
   18260:	add	r7, r3, r2, lsl #1
   18264:	ldr	r3, [r9]
   18268:	mov	r2, r7
   1826c:	mov	r1, r8
   18270:	add	r7, r7, #2
   18274:	mov	r0, sl
   18278:	sub	r3, r3, #1
   1827c:	cmp	r3, r6
   18280:	mov	r3, #1
   18284:	str	r3, [sp]
   18288:	ldr	r3, [sp, #256]	; 0x100
   1828c:	bgt	1818c <ReadCompressedDataSlabN+0x1f48>
   18290:	bl	12090 <ReadCompressedInt16Data>
   18294:	ldr	r3, [r9]
   18298:	mov	r0, sl
   1829c:	mov	r6, #1
   182a0:	ldr	r2, [r4]
   182a4:	ldr	r1, [fp]
   182a8:	sub	r3, r3, #1
   182ac:	mla	r3, r1, r3, r2
   182b0:	ldr	r2, [sp, #264]	; 0x108
   182b4:	mov	r1, r8
   182b8:	ldr	r2, [r2]
   182bc:	sub	r3, r2, r3
   182c0:	ldr	r2, [sp, #256]	; 0x100
   182c4:	add	r5, r5, r3
   182c8:	sub	r3, r3, #1
   182cc:	bl	21bc <InflateSkipData>
   182d0:	add	r3, sp, #80	; 0x50
   182d4:	str	r3, [sp, #16]
   182d8:	ldr	r3, [sp, #32]
   182dc:	str	r3, [sp, #20]
   182e0:	ldr	r3, [sp, #260]	; 0x104
   182e4:	cmp	r6, r3
   182e8:	bge	18210 <ReadCompressedDataSlabN+0x1fcc>
   182ec:	ldr	r3, [sp, #16]
   182f0:	ldr	r1, [r9, r6, lsl #2]
   182f4:	ldr	r2, [sp, #16]
   182f8:	ldr	r3, [r3, #4]
   182fc:	add	r3, r3, #1
   18300:	str	r3, [r2, #4]
   18304:	sdiv	r2, r3, r1
   18308:	mls	r3, r1, r2, r3
   1830c:	cmp	r3, #0
   18310:	bne	181e8 <ReadCompressedDataSlabN+0x1fa4>
   18314:	ldr	r2, [sp, #16]
   18318:	str	r3, [r2, #4]
   1831c:	ldr	r3, [sp, #20]
   18320:	ldr	r7, [r3, #4]
   18324:	ldr	r3, [r4, r6, lsl #2]
   18328:	sdiv	r2, r5, r7
   1832c:	mls	r2, r7, r2, r5
   18330:	cmp	r2, #0
   18334:	beq	181b8 <ReadCompressedDataSlabN+0x1f74>
   18338:	sub	r7, r7, r2
   1833c:	ldr	r2, [sp, #20]
   18340:	mov	r1, r8
   18344:	mov	r0, sl
   18348:	ldr	r2, [r2]
   1834c:	mla	r3, r3, r2, r7
   18350:	str	r2, [sp, #36]	; 0x24
   18354:	ldr	r2, [sp, #256]	; 0x100
   18358:	bl	21bc <InflateSkipData>
   1835c:	ldr	r3, [r4, r6, lsl #2]
   18360:	ldr	r2, [sp, #36]	; 0x24
   18364:	mla	r7, r3, r2, r7
   18368:	add	r5, r5, r7
   1836c:	ldr	r3, [sp, #20]
   18370:	add	r6, r6, #1
   18374:	add	r3, r3, #4
   18378:	str	r3, [sp, #20]
   1837c:	ldr	r3, [sp, #16]
   18380:	add	r3, r3, #4
   18384:	str	r3, [sp, #16]
   18388:	b	182e0 <ReadCompressedDataSlabN+0x209c>
   1838c:	ldr	r3, [fp]
   18390:	add	r1, sp, #40	; 0x28
   18394:	mov	r5, #0
   18398:	ldr	ip, [sp, #264]	; 0x108
   1839c:	sub	r3, r3, #1
   183a0:	str	r3, [sp, #40]	; 0x28
   183a4:	ldr	r3, [sp, #264]	; 0x108
   183a8:	ldr	r3, [r3]
   183ac:	str	r3, [sp, #120]	; 0x78
   183b0:	ldr	r3, [r9]
   183b4:	str	r3, [sp, #28]
   183b8:	add	r3, sp, #120	; 0x78
   183bc:	mov	r2, r3
   183c0:	str	r3, [sp, #32]
   183c4:	mov	r3, #1
   183c8:	ldr	r0, [sp, #260]	; 0x104
   183cc:	cmp	r3, r0
   183d0:	blt	18544 <ReadCompressedDataSlabN+0x2300>
   183d4:	add	r6, sp, #160	; 0xa0
   183d8:	mov	r3, r5
   183dc:	ldr	r2, [sp, #256]	; 0x100
   183e0:	mov	r1, r6
   183e4:	mov	r0, sl
   183e8:	bl	21bc <InflateSkipData>
   183ec:	ldr	r3, [fp]
   183f0:	cmp	r3, #1
   183f4:	mov	r3, #0
   183f8:	movne	r8, r6
   183fc:	strne	r3, [sp, #24]
   18400:	bne	186bc <ReadCompressedDataSlabN+0x2478>
   18404:	str	r3, [sp, #20]
   18408:	ldr	r3, [sp, #20]
   1840c:	ldr	r2, [sp, #28]
   18410:	cmp	r3, r2
   18414:	bge	163c0 <ReadCompressedDataSlabN+0x17c>
   18418:	ldr	r3, [r4]
   1841c:	cmp	r3, #0
   18420:	beq	1843c <ReadCompressedDataSlabN+0x21f8>
   18424:	mov	r1, r6
   18428:	mov	r0, sl
   1842c:	ldr	r2, [sp, #256]	; 0x100
   18430:	bl	21bc <InflateSkipData>
   18434:	ldr	r3, [r4]
   18438:	add	r5, r5, r3
   1843c:	ldr	r3, [r9]
   18440:	mov	r0, sl
   18444:	add	fp, sp, #80	; 0x50
   18448:	mov	r7, #1
   1844c:	ldr	r2, [sp, #12]
   18450:	ldr	r1, [sp, #20]
   18454:	str	r3, [sp]
   18458:	ldr	r3, [sp, #256]	; 0x100
   1845c:	add	r2, r2, r1, lsl #1
   18460:	mov	r1, r6
   18464:	bl	12598 <ReadCompressedUInt16Data>
   18468:	ldr	r3, [sp, #264]	; 0x108
   1846c:	mov	r1, r6
   18470:	mov	r0, sl
   18474:	ldr	r2, [r9]
   18478:	ldr	r3, [r3]
   1847c:	sub	r3, r3, r2
   18480:	ldr	r2, [r4]
   18484:	sub	r3, r3, r2
   18488:	ldr	r2, [sp, #256]	; 0x100
   1848c:	bl	21bc <InflateSkipData>
   18490:	ldr	r3, [sp, #264]	; 0x108
   18494:	ldr	r2, [r4]
   18498:	ldr	r3, [r3]
   1849c:	sub	r3, r3, r2
   184a0:	add	r5, r3, r5
   184a4:	ldr	r3, [sp, #32]
   184a8:	str	r3, [sp, #16]
   184ac:	ldr	r3, [sp, #260]	; 0x104
   184b0:	cmp	r7, r3
   184b4:	bge	18618 <ReadCompressedDataSlabN+0x23d4>
   184b8:	ldr	r3, [fp, #4]
   184bc:	ldr	r1, [r9, r7, lsl #2]
   184c0:	add	r3, r3, #1
   184c4:	sdiv	r2, r3, r1
   184c8:	str	r3, [fp, #4]
   184cc:	mls	r3, r1, r2, r3
   184d0:	cmp	r3, #0
   184d4:	bne	185f0 <ReadCompressedDataSlabN+0x23ac>
   184d8:	str	r3, [fp, #4]
   184dc:	ldr	r3, [sp, #16]
   184e0:	ldr	r8, [r3, #4]
   184e4:	ldr	r3, [r4, r7, lsl #2]
   184e8:	sdiv	r2, r5, r8
   184ec:	mls	r2, r8, r2, r5
   184f0:	cmp	r2, #0
   184f4:	beq	185c0 <ReadCompressedDataSlabN+0x237c>
   184f8:	sub	r8, r8, r2
   184fc:	ldr	r2, [sp, #16]
   18500:	mov	r1, r6
   18504:	mov	r0, sl
   18508:	ldr	r2, [r2]
   1850c:	mla	r3, r3, r2, r8
   18510:	str	r2, [sp, #24]
   18514:	ldr	r2, [sp, #256]	; 0x100
   18518:	bl	21bc <InflateSkipData>
   1851c:	ldr	r3, [r4, r7, lsl #2]
   18520:	ldr	r2, [sp, #24]
   18524:	mla	r8, r3, r2, r8
   18528:	add	r5, r5, r8
   1852c:	ldr	r3, [sp, #16]
   18530:	add	r7, r7, #1
   18534:	add	fp, fp, #4
   18538:	add	r3, r3, #4
   1853c:	str	r3, [sp, #16]
   18540:	b	184ac <ReadCompressedDataSlabN+0x2268>
   18544:	ldr	r0, [fp, r3, lsl #2]
   18548:	mov	r6, r2
   1854c:	sub	r0, r0, #1
   18550:	str	r0, [r1, #4]
   18554:	ldr	r0, [ip], #4
   18558:	str	r0, [r2, #4]
   1855c:	mov	r0, ip
   18560:	ldr	lr, [sp, #264]	; 0x108
   18564:	cmp	r0, lr
   18568:	bne	18598 <ReadCompressedDataSlabN+0x2354>
   1856c:	ldr	r0, [r9, r3, lsl #2]
   18570:	add	r2, r2, #4
   18574:	add	r1, r1, #4
   18578:	ldr	lr, [sp, #28]
   1857c:	mul	r0, r0, lr
   18580:	ldr	lr, [r4, r3, lsl #2]
   18584:	add	r3, r3, #1
   18588:	str	r0, [sp, #28]
   1858c:	ldr	r0, [r6]
   18590:	mla	r5, lr, r0, r5
   18594:	b	183c8 <ReadCompressedDataSlabN+0x2184>
   18598:	mov	r7, r0
   1859c:	ldr	lr, [r0, #-4]!
   185a0:	ldr	r8, [r1, #4]
   185a4:	mul	lr, lr, r8
   185a8:	ldr	r8, [r2, #4]
   185ac:	str	lr, [r1, #4]
   185b0:	ldr	lr, [r7]
   185b4:	mul	lr, lr, r8
   185b8:	str	lr, [r2, #4]
   185bc:	b	18560 <ReadCompressedDataSlabN+0x231c>
   185c0:	cmp	r3, #0
   185c4:	beq	1852c <ReadCompressedDataSlabN+0x22e8>
   185c8:	ldr	r2, [sp, #16]
   185cc:	mov	r1, r6
   185d0:	mov	r0, sl
   185d4:	ldr	r8, [r2]
   185d8:	ldr	r2, [sp, #256]	; 0x100
   185dc:	mul	r3, r3, r8
   185e0:	bl	21bc <InflateSkipData>
   185e4:	ldr	r3, [r4, r7, lsl #2]
   185e8:	mla	r5, r3, r8, r5
   185ec:	b	1852c <ReadCompressedDataSlabN+0x22e8>
   185f0:	add	r3, sp, #216	; 0xd8
   185f4:	add	r7, r3, r7, lsl #2
   185f8:	ldr	r3, [r7, #-176]	; 0xffffff50
   185fc:	cmp	r3, #0
   18600:	beq	18618 <ReadCompressedDataSlabN+0x23d4>
   18604:	mov	r1, r6
   18608:	mov	r0, sl
   1860c:	ldr	r2, [sp, #256]	; 0x100
   18610:	add	r5, r5, r3
   18614:	bl	21bc <InflateSkipData>
   18618:	ldr	r3, [r9]
   1861c:	ldr	r2, [sp, #20]
   18620:	add	r3, r2, r3
   18624:	b	18404 <ReadCompressedDataSlabN+0x21c0>
   18628:	bl	12598 <ReadCompressedUInt16Data>
   1862c:	ldr	r3, [fp]
   18630:	mov	r1, r8
   18634:	mov	r0, sl
   18638:	add	r6, r6, #1
   1863c:	ldr	r2, [sp, #256]	; 0x100
   18640:	sub	r3, r3, #1
   18644:	bl	21bc <InflateSkipData>
   18648:	ldr	r3, [fp]
   1864c:	add	r5, r5, r3
   18650:	b	18700 <ReadCompressedDataSlabN+0x24bc>
   18654:	cmp	r3, #0
   18658:	beq	18808 <ReadCompressedDataSlabN+0x25c4>
   1865c:	ldr	r2, [sp, #20]
   18660:	mov	r1, r8
   18664:	mov	r0, sl
   18668:	ldr	r7, [r2]
   1866c:	ldr	r2, [sp, #256]	; 0x100
   18670:	mul	r3, r3, r7
   18674:	bl	21bc <InflateSkipData>
   18678:	ldr	r3, [r4, r6, lsl #2]
   1867c:	mla	r5, r3, r7, r5
   18680:	b	18808 <ReadCompressedDataSlabN+0x25c4>
   18684:	add	r3, sp, #216	; 0xd8
   18688:	add	r6, r3, r6, lsl #2
   1868c:	ldr	r3, [r6, #-176]	; 0xffffff50
   18690:	cmp	r3, #0
   18694:	beq	186ac <ReadCompressedDataSlabN+0x2468>
   18698:	mov	r1, r8
   1869c:	mov	r0, sl
   186a0:	ldr	r2, [sp, #256]	; 0x100
   186a4:	add	r5, r5, r3
   186a8:	bl	21bc <InflateSkipData>
   186ac:	ldr	r3, [r9]
   186b0:	ldr	r2, [sp, #24]
   186b4:	add	r3, r2, r3
   186b8:	str	r3, [sp, #24]
   186bc:	ldr	r3, [sp, #24]
   186c0:	ldr	r2, [sp, #28]
   186c4:	cmp	r3, r2
   186c8:	bge	163c0 <ReadCompressedDataSlabN+0x17c>
   186cc:	ldr	r3, [r4]
   186d0:	cmp	r3, #0
   186d4:	beq	186f0 <ReadCompressedDataSlabN+0x24ac>
   186d8:	mov	r1, r8
   186dc:	mov	r0, sl
   186e0:	ldr	r2, [sp, #256]	; 0x100
   186e4:	bl	21bc <InflateSkipData>
   186e8:	ldr	r3, [r4]
   186ec:	add	r5, r5, r3
   186f0:	ldr	r3, [sp, #12]
   186f4:	mov	r6, #0
   186f8:	ldr	r2, [sp, #24]
   186fc:	add	r7, r3, r2, lsl #1
   18700:	ldr	r3, [r9]
   18704:	mov	r2, r7
   18708:	mov	r1, r8
   1870c:	add	r7, r7, #2
   18710:	mov	r0, sl
   18714:	sub	r3, r3, #1
   18718:	cmp	r3, r6
   1871c:	mov	r3, #1
   18720:	str	r3, [sp]
   18724:	ldr	r3, [sp, #256]	; 0x100
   18728:	bgt	18628 <ReadCompressedDataSlabN+0x23e4>
   1872c:	bl	12598 <ReadCompressedUInt16Data>
   18730:	ldr	r3, [r9]
   18734:	mov	r0, sl
   18738:	mov	r6, #1
   1873c:	ldr	r2, [r4]
   18740:	ldr	r1, [fp]
   18744:	sub	r3, r3, #1
   18748:	mla	r3, r1, r3, r2
   1874c:	ldr	r2, [sp, #264]	; 0x108
   18750:	mov	r1, r8
   18754:	ldr	r2, [r2]
   18758:	sub	r3, r2, r3
   1875c:	ldr	r2, [sp, #256]	; 0x100
   18760:	add	r5, r5, r3
   18764:	sub	r3, r3, #1
   18768:	bl	21bc <InflateSkipData>
   1876c:	add	r3, sp, #80	; 0x50
   18770:	str	r3, [sp, #16]
   18774:	ldr	r3, [sp, #32]
   18778:	str	r3, [sp, #20]
   1877c:	ldr	r3, [sp, #260]	; 0x104
   18780:	cmp	r6, r3
   18784:	bge	186ac <ReadCompressedDataSlabN+0x2468>
   18788:	ldr	r3, [sp, #16]
   1878c:	ldr	r1, [r9, r6, lsl #2]
   18790:	ldr	r2, [sp, #16]
   18794:	ldr	r3, [r3, #4]
   18798:	add	r3, r3, #1
   1879c:	str	r3, [r2, #4]
   187a0:	sdiv	r2, r3, r1
   187a4:	mls	r3, r1, r2, r3
   187a8:	cmp	r3, #0
   187ac:	bne	18684 <ReadCompressedDataSlabN+0x2440>
   187b0:	ldr	r2, [sp, #16]
   187b4:	str	r3, [r2, #4]
   187b8:	ldr	r3, [sp, #20]
   187bc:	ldr	r7, [r3, #4]
   187c0:	ldr	r3, [r4, r6, lsl #2]
   187c4:	sdiv	r2, r5, r7
   187c8:	mls	r2, r7, r2, r5
   187cc:	cmp	r2, #0
   187d0:	beq	18654 <ReadCompressedDataSlabN+0x2410>
   187d4:	sub	r7, r7, r2
   187d8:	ldr	r2, [sp, #20]
   187dc:	mov	r1, r8
   187e0:	mov	r0, sl
   187e4:	ldr	r2, [r2]
   187e8:	mla	r3, r3, r2, r7
   187ec:	str	r2, [sp, #36]	; 0x24
   187f0:	ldr	r2, [sp, #256]	; 0x100
   187f4:	bl	21bc <InflateSkipData>
   187f8:	ldr	r3, [r4, r6, lsl #2]
   187fc:	ldr	r2, [sp, #36]	; 0x24
   18800:	mla	r7, r3, r2, r7
   18804:	add	r5, r5, r7
   18808:	ldr	r3, [sp, #20]
   1880c:	add	r6, r6, #1
   18810:	add	r3, r3, #4
   18814:	str	r3, [sp, #20]
   18818:	ldr	r3, [sp, #16]
   1881c:	add	r3, r3, #4
   18820:	str	r3, [sp, #16]
   18824:	b	1877c <ReadCompressedDataSlabN+0x2538>
   18828:	ldr	r3, [fp]
   1882c:	add	r1, sp, #40	; 0x28
   18830:	mov	r5, #0
   18834:	ldr	ip, [sp, #264]	; 0x108
   18838:	sub	r3, r3, #1
   1883c:	str	r3, [sp, #40]	; 0x28
   18840:	ldr	r3, [sp, #264]	; 0x108
   18844:	ldr	r3, [r3]
   18848:	str	r3, [sp, #120]	; 0x78
   1884c:	ldr	r3, [r9]
   18850:	str	r3, [sp, #28]
   18854:	add	r3, sp, #120	; 0x78
   18858:	mov	r2, r3
   1885c:	str	r3, [sp, #32]
   18860:	mov	r3, #1
   18864:	ldr	r0, [sp, #260]	; 0x104
   18868:	cmp	r3, r0
   1886c:	blt	189e0 <ReadCompressedDataSlabN+0x279c>
   18870:	add	r6, sp, #160	; 0xa0
   18874:	mov	r3, r5
   18878:	ldr	r2, [sp, #256]	; 0x100
   1887c:	mov	r1, r6
   18880:	mov	r0, sl
   18884:	bl	21bc <InflateSkipData>
   18888:	ldr	r3, [fp]
   1888c:	cmp	r3, #1
   18890:	mov	r3, #0
   18894:	movne	r8, r6
   18898:	strne	r3, [sp, #24]
   1889c:	bne	18b58 <ReadCompressedDataSlabN+0x2914>
   188a0:	str	r3, [sp, #20]
   188a4:	ldr	r3, [sp, #20]
   188a8:	ldr	r2, [sp, #28]
   188ac:	cmp	r3, r2
   188b0:	bge	163c0 <ReadCompressedDataSlabN+0x17c>
   188b4:	ldr	r3, [r4]
   188b8:	cmp	r3, #0
   188bc:	beq	188d8 <ReadCompressedDataSlabN+0x2694>
   188c0:	mov	r1, r6
   188c4:	mov	r0, sl
   188c8:	ldr	r2, [sp, #256]	; 0x100
   188cc:	bl	21bc <InflateSkipData>
   188d0:	ldr	r3, [r4]
   188d4:	add	r5, r5, r3
   188d8:	ldr	r3, [r9]
   188dc:	mov	r0, sl
   188e0:	add	fp, sp, #80	; 0x50
   188e4:	mov	r7, #1
   188e8:	ldr	r2, [sp, #12]
   188ec:	ldr	r1, [sp, #20]
   188f0:	str	r3, [sp]
   188f4:	ldr	r3, [sp, #256]	; 0x100
   188f8:	add	r2, r2, r1
   188fc:	mov	r1, r6
   18900:	bl	12aa0 <ReadCompressedInt8Data>
   18904:	ldr	r3, [sp, #264]	; 0x108
   18908:	mov	r1, r6
   1890c:	mov	r0, sl
   18910:	ldr	r2, [r9]
   18914:	ldr	r3, [r3]
   18918:	sub	r3, r3, r2
   1891c:	ldr	r2, [r4]
   18920:	sub	r3, r3, r2
   18924:	ldr	r2, [sp, #256]	; 0x100
   18928:	bl	21bc <InflateSkipData>
   1892c:	ldr	r3, [sp, #264]	; 0x108
   18930:	ldr	r2, [r4]
   18934:	ldr	r3, [r3]
   18938:	sub	r3, r3, r2
   1893c:	add	r5, r3, r5
   18940:	ldr	r3, [sp, #32]
   18944:	str	r3, [sp, #16]
   18948:	ldr	r3, [sp, #260]	; 0x104
   1894c:	cmp	r7, r3
   18950:	bge	18ab4 <ReadCompressedDataSlabN+0x2870>
   18954:	ldr	r3, [fp, #4]
   18958:	ldr	r1, [r9, r7, lsl #2]
   1895c:	add	r3, r3, #1
   18960:	sdiv	r2, r3, r1
   18964:	str	r3, [fp, #4]
   18968:	mls	r3, r1, r2, r3
   1896c:	cmp	r3, #0
   18970:	bne	18a8c <ReadCompressedDataSlabN+0x2848>
   18974:	str	r3, [fp, #4]
   18978:	ldr	r3, [sp, #16]
   1897c:	ldr	r8, [r3, #4]
   18980:	ldr	r3, [r4, r7, lsl #2]
   18984:	sdiv	r2, r5, r8
   18988:	mls	r2, r8, r2, r5
   1898c:	cmp	r2, #0
   18990:	beq	18a5c <ReadCompressedDataSlabN+0x2818>
   18994:	sub	r8, r8, r2
   18998:	ldr	r2, [sp, #16]
   1899c:	mov	r1, r6
   189a0:	mov	r0, sl
   189a4:	ldr	r2, [r2]
   189a8:	mla	r3, r3, r2, r8
   189ac:	str	r2, [sp, #24]
   189b0:	ldr	r2, [sp, #256]	; 0x100
   189b4:	bl	21bc <InflateSkipData>
   189b8:	ldr	r3, [r4, r7, lsl #2]
   189bc:	ldr	r2, [sp, #24]
   189c0:	mla	r8, r3, r2, r8
   189c4:	add	r5, r5, r8
   189c8:	ldr	r3, [sp, #16]
   189cc:	add	r7, r7, #1
   189d0:	add	fp, fp, #4
   189d4:	add	r3, r3, #4
   189d8:	str	r3, [sp, #16]
   189dc:	b	18948 <ReadCompressedDataSlabN+0x2704>
   189e0:	ldr	r0, [fp, r3, lsl #2]
   189e4:	mov	r6, r2
   189e8:	sub	r0, r0, #1
   189ec:	str	r0, [r1, #4]
   189f0:	ldr	r0, [ip], #4
   189f4:	str	r0, [r2, #4]
   189f8:	mov	r0, ip
   189fc:	ldr	lr, [sp, #264]	; 0x108
   18a00:	cmp	r0, lr
   18a04:	bne	18a34 <ReadCompressedDataSlabN+0x27f0>
   18a08:	ldr	r0, [r9, r3, lsl #2]
   18a0c:	add	r2, r2, #4
   18a10:	add	r1, r1, #4
   18a14:	ldr	lr, [sp, #28]
   18a18:	mul	r0, r0, lr
   18a1c:	ldr	lr, [r4, r3, lsl #2]
   18a20:	add	r3, r3, #1
   18a24:	str	r0, [sp, #28]
   18a28:	ldr	r0, [r6]
   18a2c:	mla	r5, lr, r0, r5
   18a30:	b	18864 <ReadCompressedDataSlabN+0x2620>
   18a34:	mov	r7, r0
   18a38:	ldr	lr, [r0, #-4]!
   18a3c:	ldr	r8, [r1, #4]
   18a40:	mul	lr, lr, r8
   18a44:	ldr	r8, [r2, #4]
   18a48:	str	lr, [r1, #4]
   18a4c:	ldr	lr, [r7]
   18a50:	mul	lr, lr, r8
   18a54:	str	lr, [r2, #4]
   18a58:	b	189fc <ReadCompressedDataSlabN+0x27b8>
   18a5c:	cmp	r3, #0
   18a60:	beq	189c8 <ReadCompressedDataSlabN+0x2784>
   18a64:	ldr	r2, [sp, #16]
   18a68:	mov	r1, r6
   18a6c:	mov	r0, sl
   18a70:	ldr	r8, [r2]
   18a74:	ldr	r2, [sp, #256]	; 0x100
   18a78:	mul	r3, r3, r8
   18a7c:	bl	21bc <InflateSkipData>
   18a80:	ldr	r3, [r4, r7, lsl #2]
   18a84:	mla	r5, r3, r8, r5
   18a88:	b	189c8 <ReadCompressedDataSlabN+0x2784>
   18a8c:	add	r3, sp, #216	; 0xd8
   18a90:	add	r7, r3, r7, lsl #2
   18a94:	ldr	r3, [r7, #-176]	; 0xffffff50
   18a98:	cmp	r3, #0
   18a9c:	beq	18ab4 <ReadCompressedDataSlabN+0x2870>
   18aa0:	mov	r1, r6
   18aa4:	mov	r0, sl
   18aa8:	ldr	r2, [sp, #256]	; 0x100
   18aac:	add	r5, r5, r3
   18ab0:	bl	21bc <InflateSkipData>
   18ab4:	ldr	r3, [r9]
   18ab8:	ldr	r2, [sp, #20]
   18abc:	add	r3, r2, r3
   18ac0:	b	188a0 <ReadCompressedDataSlabN+0x265c>
   18ac4:	bl	12aa0 <ReadCompressedInt8Data>
   18ac8:	ldr	r3, [fp]
   18acc:	mov	r1, r8
   18ad0:	mov	r0, sl
   18ad4:	add	r6, r6, #1
   18ad8:	ldr	r2, [sp, #256]	; 0x100
   18adc:	sub	r3, r3, #1
   18ae0:	bl	21bc <InflateSkipData>
   18ae4:	ldr	r3, [fp]
   18ae8:	add	r5, r5, r3
   18aec:	b	18b9c <ReadCompressedDataSlabN+0x2958>
   18af0:	cmp	r3, #0
   18af4:	beq	18ca0 <ReadCompressedDataSlabN+0x2a5c>
   18af8:	ldr	r2, [sp, #20]
   18afc:	mov	r1, r8
   18b00:	mov	r0, sl
   18b04:	ldr	r7, [r2]
   18b08:	ldr	r2, [sp, #256]	; 0x100
   18b0c:	mul	r3, r3, r7
   18b10:	bl	21bc <InflateSkipData>
   18b14:	ldr	r3, [r4, r6, lsl #2]
   18b18:	mla	r5, r3, r7, r5
   18b1c:	b	18ca0 <ReadCompressedDataSlabN+0x2a5c>
   18b20:	add	r3, sp, #216	; 0xd8
   18b24:	add	r6, r3, r6, lsl #2
   18b28:	ldr	r3, [r6, #-176]	; 0xffffff50
   18b2c:	cmp	r3, #0
   18b30:	beq	18b48 <ReadCompressedDataSlabN+0x2904>
   18b34:	mov	r1, r8
   18b38:	mov	r0, sl
   18b3c:	ldr	r2, [sp, #256]	; 0x100
   18b40:	add	r5, r5, r3
   18b44:	bl	21bc <InflateSkipData>
   18b48:	ldr	r3, [r9]
   18b4c:	ldr	r2, [sp, #24]
   18b50:	add	r3, r2, r3
   18b54:	str	r3, [sp, #24]
   18b58:	ldr	r3, [sp, #24]
   18b5c:	ldr	r2, [sp, #28]
   18b60:	cmp	r3, r2
   18b64:	bge	163c0 <ReadCompressedDataSlabN+0x17c>
   18b68:	ldr	r3, [r4]
   18b6c:	cmp	r3, #0
   18b70:	beq	18b8c <ReadCompressedDataSlabN+0x2948>
   18b74:	mov	r1, r8
   18b78:	mov	r0, sl
   18b7c:	ldr	r2, [sp, #256]	; 0x100
   18b80:	bl	21bc <InflateSkipData>
   18b84:	ldr	r3, [r4]
   18b88:	add	r5, r5, r3
   18b8c:	ldr	r3, [sp, #12]
   18b90:	mov	r6, #0
   18b94:	ldr	r2, [sp, #24]
   18b98:	add	r7, r3, r2
   18b9c:	ldr	r3, [r9]
   18ba0:	add	r2, r7, r6
   18ba4:	mov	r1, r8
   18ba8:	mov	r0, sl
   18bac:	sub	r3, r3, #1
   18bb0:	cmp	r3, r6
   18bb4:	mov	r3, #1
   18bb8:	str	r3, [sp]
   18bbc:	ldr	r3, [sp, #256]	; 0x100
   18bc0:	bgt	18ac4 <ReadCompressedDataSlabN+0x2880>
   18bc4:	bl	12aa0 <ReadCompressedInt8Data>
   18bc8:	ldr	r3, [r9]
   18bcc:	mov	r0, sl
   18bd0:	mov	r6, #1
   18bd4:	ldr	r2, [r4]
   18bd8:	ldr	r1, [fp]
   18bdc:	sub	r3, r3, #1
   18be0:	mla	r3, r1, r3, r2
   18be4:	ldr	r2, [sp, #264]	; 0x108
   18be8:	mov	r1, r8
   18bec:	ldr	r2, [r2]
   18bf0:	sub	r3, r2, r3
   18bf4:	ldr	r2, [sp, #256]	; 0x100
   18bf8:	add	r5, r5, r3
   18bfc:	sub	r3, r3, #1
   18c00:	bl	21bc <InflateSkipData>
   18c04:	add	r3, sp, #80	; 0x50
   18c08:	str	r3, [sp, #16]
   18c0c:	ldr	r3, [sp, #32]
   18c10:	str	r3, [sp, #20]
   18c14:	ldr	r3, [sp, #260]	; 0x104
   18c18:	cmp	r6, r3
   18c1c:	bge	18b48 <ReadCompressedDataSlabN+0x2904>
   18c20:	ldr	r3, [sp, #16]
   18c24:	ldr	r1, [r9, r6, lsl #2]
   18c28:	ldr	r2, [sp, #16]
   18c2c:	ldr	r3, [r3, #4]
   18c30:	add	r3, r3, #1
   18c34:	str	r3, [r2, #4]
   18c38:	sdiv	r2, r3, r1
   18c3c:	mls	r3, r1, r2, r3
   18c40:	cmp	r3, #0
   18c44:	bne	18b20 <ReadCompressedDataSlabN+0x28dc>
   18c48:	ldr	r2, [sp, #16]
   18c4c:	str	r3, [r2, #4]
   18c50:	ldr	r3, [sp, #20]
   18c54:	ldr	r7, [r3, #4]
   18c58:	ldr	r3, [r4, r6, lsl #2]
   18c5c:	sdiv	r2, r5, r7
   18c60:	mls	r2, r7, r2, r5
   18c64:	cmp	r2, #0
   18c68:	beq	18af0 <ReadCompressedDataSlabN+0x28ac>
   18c6c:	sub	r7, r7, r2
   18c70:	ldr	r2, [sp, #20]
   18c74:	mov	r1, r8
   18c78:	mov	r0, sl
   18c7c:	ldr	r2, [r2]
   18c80:	mla	r3, r3, r2, r7
   18c84:	str	r2, [sp, #36]	; 0x24
   18c88:	ldr	r2, [sp, #256]	; 0x100
   18c8c:	bl	21bc <InflateSkipData>
   18c90:	ldr	r3, [r4, r6, lsl #2]
   18c94:	ldr	r2, [sp, #36]	; 0x24
   18c98:	mla	r7, r3, r2, r7
   18c9c:	add	r5, r5, r7
   18ca0:	ldr	r3, [sp, #20]
   18ca4:	add	r6, r6, #1
   18ca8:	add	r3, r3, #4
   18cac:	str	r3, [sp, #20]
   18cb0:	ldr	r3, [sp, #16]
   18cb4:	add	r3, r3, #4
   18cb8:	str	r3, [sp, #16]
   18cbc:	b	18c14 <ReadCompressedDataSlabN+0x29d0>
   18cc0:	ldr	r3, [fp]
   18cc4:	add	r1, sp, #40	; 0x28
   18cc8:	mov	r5, #0
   18ccc:	ldr	ip, [sp, #264]	; 0x108
   18cd0:	sub	r3, r3, #1
   18cd4:	str	r3, [sp, #40]	; 0x28
   18cd8:	ldr	r3, [sp, #264]	; 0x108
   18cdc:	ldr	r3, [r3]
   18ce0:	str	r3, [sp, #120]	; 0x78
   18ce4:	ldr	r3, [r9]
   18ce8:	str	r3, [sp, #28]
   18cec:	add	r3, sp, #120	; 0x78
   18cf0:	mov	r2, r3
   18cf4:	str	r3, [sp, #32]
   18cf8:	mov	r3, #1
   18cfc:	ldr	r0, [sp, #260]	; 0x104
   18d00:	cmp	r3, r0
   18d04:	blt	18e78 <ReadCompressedDataSlabN+0x2c34>
   18d08:	add	r6, sp, #160	; 0xa0
   18d0c:	mov	r3, r5
   18d10:	ldr	r2, [sp, #256]	; 0x100
   18d14:	mov	r1, r6
   18d18:	mov	r0, sl
   18d1c:	bl	21bc <InflateSkipData>
   18d20:	ldr	r3, [fp]
   18d24:	cmp	r3, #1
   18d28:	mov	r3, #0
   18d2c:	movne	r8, r6
   18d30:	strne	r3, [sp, #24]
   18d34:	bne	18ff0 <ReadCompressedDataSlabN+0x2dac>
   18d38:	str	r3, [sp, #20]
   18d3c:	ldr	r3, [sp, #20]
   18d40:	ldr	r2, [sp, #28]
   18d44:	cmp	r3, r2
   18d48:	bge	163c0 <ReadCompressedDataSlabN+0x17c>
   18d4c:	ldr	r3, [r4]
   18d50:	cmp	r3, #0
   18d54:	beq	18d70 <ReadCompressedDataSlabN+0x2b2c>
   18d58:	mov	r1, r6
   18d5c:	mov	r0, sl
   18d60:	ldr	r2, [sp, #256]	; 0x100
   18d64:	bl	21bc <InflateSkipData>
   18d68:	ldr	r3, [r4]
   18d6c:	add	r5, r5, r3
   18d70:	ldr	r3, [r9]
   18d74:	mov	r0, sl
   18d78:	add	fp, sp, #80	; 0x50
   18d7c:	mov	r7, #1
   18d80:	ldr	r2, [sp, #12]
   18d84:	ldr	r1, [sp, #20]
   18d88:	str	r3, [sp]
   18d8c:	ldr	r3, [sp, #256]	; 0x100
   18d90:	add	r2, r2, r1
   18d94:	mov	r1, r6
   18d98:	bl	12fa8 <ReadCompressedUInt8Data>
   18d9c:	ldr	r3, [sp, #264]	; 0x108
   18da0:	mov	r1, r6
   18da4:	mov	r0, sl
   18da8:	ldr	r2, [r9]
   18dac:	ldr	r3, [r3]
   18db0:	sub	r3, r3, r2
   18db4:	ldr	r2, [r4]
   18db8:	sub	r3, r3, r2
   18dbc:	ldr	r2, [sp, #256]	; 0x100
   18dc0:	bl	21bc <InflateSkipData>
   18dc4:	ldr	r3, [sp, #264]	; 0x108
   18dc8:	ldr	r2, [r4]
   18dcc:	ldr	r3, [r3]
   18dd0:	sub	r3, r3, r2
   18dd4:	add	r5, r3, r5
   18dd8:	ldr	r3, [sp, #32]
   18ddc:	str	r3, [sp, #16]
   18de0:	ldr	r3, [sp, #260]	; 0x104
   18de4:	cmp	r7, r3
   18de8:	bge	18f4c <ReadCompressedDataSlabN+0x2d08>
   18dec:	ldr	r3, [fp, #4]
   18df0:	ldr	r1, [r9, r7, lsl #2]
   18df4:	add	r3, r3, #1
   18df8:	sdiv	r2, r3, r1
   18dfc:	str	r3, [fp, #4]
   18e00:	mls	r3, r1, r2, r3
   18e04:	cmp	r3, #0
   18e08:	bne	18f24 <ReadCompressedDataSlabN+0x2ce0>
   18e0c:	str	r3, [fp, #4]
   18e10:	ldr	r3, [sp, #16]
   18e14:	ldr	r8, [r3, #4]
   18e18:	ldr	r3, [r4, r7, lsl #2]
   18e1c:	sdiv	r2, r5, r8
   18e20:	mls	r2, r8, r2, r5
   18e24:	cmp	r2, #0
   18e28:	beq	18ef4 <ReadCompressedDataSlabN+0x2cb0>
   18e2c:	sub	r8, r8, r2
   18e30:	ldr	r2, [sp, #16]
   18e34:	mov	r1, r6
   18e38:	mov	r0, sl
   18e3c:	ldr	r2, [r2]
   18e40:	mla	r3, r3, r2, r8
   18e44:	str	r2, [sp, #24]
   18e48:	ldr	r2, [sp, #256]	; 0x100
   18e4c:	bl	21bc <InflateSkipData>
   18e50:	ldr	r3, [r4, r7, lsl #2]
   18e54:	ldr	r2, [sp, #24]
   18e58:	mla	r8, r3, r2, r8
   18e5c:	add	r5, r5, r8
   18e60:	ldr	r3, [sp, #16]
   18e64:	add	r7, r7, #1
   18e68:	add	fp, fp, #4
   18e6c:	add	r3, r3, #4
   18e70:	str	r3, [sp, #16]
   18e74:	b	18de0 <ReadCompressedDataSlabN+0x2b9c>
   18e78:	ldr	r0, [fp, r3, lsl #2]
   18e7c:	mov	r6, r2
   18e80:	sub	r0, r0, #1
   18e84:	str	r0, [r1, #4]
   18e88:	ldr	r0, [ip], #4
   18e8c:	str	r0, [r2, #4]
   18e90:	mov	r0, ip
   18e94:	ldr	lr, [sp, #264]	; 0x108
   18e98:	cmp	r0, lr
   18e9c:	bne	18ecc <ReadCompressedDataSlabN+0x2c88>
   18ea0:	ldr	r0, [r9, r3, lsl #2]
   18ea4:	add	r2, r2, #4
   18ea8:	add	r1, r1, #4
   18eac:	ldr	lr, [sp, #28]
   18eb0:	mul	r0, r0, lr
   18eb4:	ldr	lr, [r4, r3, lsl #2]
   18eb8:	add	r3, r3, #1
   18ebc:	str	r0, [sp, #28]
   18ec0:	ldr	r0, [r6]
   18ec4:	mla	r5, lr, r0, r5
   18ec8:	b	18cfc <ReadCompressedDataSlabN+0x2ab8>
   18ecc:	mov	r7, r0
   18ed0:	ldr	lr, [r0, #-4]!
   18ed4:	ldr	r8, [r1, #4]
   18ed8:	mul	lr, lr, r8
   18edc:	ldr	r8, [r2, #4]
   18ee0:	str	lr, [r1, #4]
   18ee4:	ldr	lr, [r7]
   18ee8:	mul	lr, lr, r8
   18eec:	str	lr, [r2, #4]
   18ef0:	b	18e94 <ReadCompressedDataSlabN+0x2c50>
   18ef4:	cmp	r3, #0
   18ef8:	beq	18e60 <ReadCompressedDataSlabN+0x2c1c>
   18efc:	ldr	r2, [sp, #16]
   18f00:	mov	r1, r6
   18f04:	mov	r0, sl
   18f08:	ldr	r8, [r2]
   18f0c:	ldr	r2, [sp, #256]	; 0x100
   18f10:	mul	r3, r3, r8
   18f14:	bl	21bc <InflateSkipData>
   18f18:	ldr	r3, [r4, r7, lsl #2]
   18f1c:	mla	r5, r3, r8, r5
   18f20:	b	18e60 <ReadCompressedDataSlabN+0x2c1c>
   18f24:	add	r3, sp, #216	; 0xd8
   18f28:	add	r7, r3, r7, lsl #2
   18f2c:	ldr	r3, [r7, #-176]	; 0xffffff50
   18f30:	cmp	r3, #0
   18f34:	beq	18f4c <ReadCompressedDataSlabN+0x2d08>
   18f38:	mov	r1, r6
   18f3c:	mov	r0, sl
   18f40:	ldr	r2, [sp, #256]	; 0x100
   18f44:	add	r5, r5, r3
   18f48:	bl	21bc <InflateSkipData>
   18f4c:	ldr	r3, [r9]
   18f50:	ldr	r2, [sp, #20]
   18f54:	add	r3, r2, r3
   18f58:	b	18d38 <ReadCompressedDataSlabN+0x2af4>
   18f5c:	bl	12fa8 <ReadCompressedUInt8Data>
   18f60:	ldr	r3, [fp]
   18f64:	mov	r1, r8
   18f68:	mov	r0, sl
   18f6c:	add	r6, r6, #1
   18f70:	ldr	r2, [sp, #256]	; 0x100
   18f74:	sub	r3, r3, #1
   18f78:	bl	21bc <InflateSkipData>
   18f7c:	ldr	r3, [fp]
   18f80:	add	r5, r5, r3
   18f84:	b	19034 <ReadCompressedDataSlabN+0x2df0>
   18f88:	cmp	r3, #0
   18f8c:	beq	19138 <ReadCompressedDataSlabN+0x2ef4>
   18f90:	ldr	r2, [sp, #20]
   18f94:	mov	r1, r8
   18f98:	mov	r0, sl
   18f9c:	ldr	r7, [r2]
   18fa0:	ldr	r2, [sp, #256]	; 0x100
   18fa4:	mul	r3, r3, r7
   18fa8:	bl	21bc <InflateSkipData>
   18fac:	ldr	r3, [r4, r6, lsl #2]
   18fb0:	mla	r5, r3, r7, r5
   18fb4:	b	19138 <ReadCompressedDataSlabN+0x2ef4>
   18fb8:	add	r3, sp, #216	; 0xd8
   18fbc:	add	r6, r3, r6, lsl #2
   18fc0:	ldr	r3, [r6, #-176]	; 0xffffff50
   18fc4:	cmp	r3, #0
   18fc8:	beq	18fe0 <ReadCompressedDataSlabN+0x2d9c>
   18fcc:	mov	r1, r8
   18fd0:	mov	r0, sl
   18fd4:	ldr	r2, [sp, #256]	; 0x100
   18fd8:	add	r5, r5, r3
   18fdc:	bl	21bc <InflateSkipData>
   18fe0:	ldr	r3, [r9]
   18fe4:	ldr	r2, [sp, #24]
   18fe8:	add	r3, r2, r3
   18fec:	str	r3, [sp, #24]
   18ff0:	ldr	r3, [sp, #24]
   18ff4:	ldr	r2, [sp, #28]
   18ff8:	cmp	r3, r2
   18ffc:	bge	163c0 <ReadCompressedDataSlabN+0x17c>
   19000:	ldr	r3, [r4]
   19004:	cmp	r3, #0
   19008:	beq	19024 <ReadCompressedDataSlabN+0x2de0>
   1900c:	mov	r1, r8
   19010:	mov	r0, sl
   19014:	ldr	r2, [sp, #256]	; 0x100
   19018:	bl	21bc <InflateSkipData>
   1901c:	ldr	r3, [r4]
   19020:	add	r5, r5, r3
   19024:	ldr	r3, [sp, #12]
   19028:	mov	r6, #0
   1902c:	ldr	r2, [sp, #24]
   19030:	add	r7, r3, r2
   19034:	ldr	r3, [r9]
   19038:	add	r2, r7, r6
   1903c:	mov	r1, r8
   19040:	mov	r0, sl
   19044:	sub	r3, r3, #1
   19048:	cmp	r3, r6
   1904c:	mov	r3, #1
   19050:	str	r3, [sp]
   19054:	ldr	r3, [sp, #256]	; 0x100
   19058:	bgt	18f5c <ReadCompressedDataSlabN+0x2d18>
   1905c:	bl	12fa8 <ReadCompressedUInt8Data>
   19060:	ldr	r3, [r9]
   19064:	mov	r0, sl
   19068:	mov	r6, #1
   1906c:	ldr	r2, [r4]
   19070:	ldr	r1, [fp]
   19074:	sub	r3, r3, #1
   19078:	mla	r3, r1, r3, r2
   1907c:	ldr	r2, [sp, #264]	; 0x108
   19080:	mov	r1, r8
   19084:	ldr	r2, [r2]
   19088:	sub	r3, r2, r3
   1908c:	ldr	r2, [sp, #256]	; 0x100
   19090:	add	r5, r5, r3
   19094:	sub	r3, r3, #1
   19098:	bl	21bc <InflateSkipData>
   1909c:	add	r3, sp, #80	; 0x50
   190a0:	str	r3, [sp, #16]
   190a4:	ldr	r3, [sp, #32]
   190a8:	str	r3, [sp, #20]
   190ac:	ldr	r3, [sp, #260]	; 0x104
   190b0:	cmp	r6, r3
   190b4:	bge	18fe0 <ReadCompressedDataSlabN+0x2d9c>
   190b8:	ldr	r3, [sp, #16]
   190bc:	ldr	r1, [r9, r6, lsl #2]
   190c0:	ldr	r2, [sp, #16]
   190c4:	ldr	r3, [r3, #4]
   190c8:	add	r3, r3, #1
   190cc:	str	r3, [r2, #4]
   190d0:	sdiv	r2, r3, r1
   190d4:	mls	r3, r1, r2, r3
   190d8:	cmp	r3, #0
   190dc:	bne	18fb8 <ReadCompressedDataSlabN+0x2d74>
   190e0:	ldr	r2, [sp, #16]
   190e4:	str	r3, [r2, #4]
   190e8:	ldr	r3, [sp, #20]
   190ec:	ldr	r7, [r3, #4]
   190f0:	ldr	r3, [r4, r6, lsl #2]
   190f4:	sdiv	r2, r5, r7
   190f8:	mls	r2, r7, r2, r5
   190fc:	cmp	r2, #0
   19100:	beq	18f88 <ReadCompressedDataSlabN+0x2d44>
   19104:	sub	r7, r7, r2
   19108:	ldr	r2, [sp, #20]
   1910c:	mov	r1, r8
   19110:	mov	r0, sl
   19114:	ldr	r2, [r2]
   19118:	mla	r3, r3, r2, r7
   1911c:	str	r2, [sp, #36]	; 0x24
   19120:	ldr	r2, [sp, #256]	; 0x100
   19124:	bl	21bc <InflateSkipData>
   19128:	ldr	r3, [r4, r6, lsl #2]
   1912c:	ldr	r2, [sp, #36]	; 0x24
   19130:	mla	r7, r3, r2, r7
   19134:	add	r5, r5, r7
   19138:	ldr	r3, [sp, #20]
   1913c:	add	r6, r6, #1
   19140:	add	r3, r3, #4
   19144:	str	r3, [sp, #20]
   19148:	ldr	r3, [sp, #16]
   1914c:	add	r3, r3, #4
   19150:	str	r3, [sp, #16]
   19154:	b	190ac <ReadCompressedDataSlabN+0x2e68>
   19158:	mov	r0, #1
   1915c:	b	163cc <ReadCompressedDataSlabN+0x188>

00019160 <ReadDataSlab1>:
   19160:	push	{r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19164:	mov	r5, r0
   19168:	mov	r0, r3
   1916c:	mov	r4, r2
   19170:	mov	r9, r1
   19174:	mov	r7, r3
   19178:	ldr	fp, [sp, #40]	; 0x28
   1917c:	ldr	sl, [sp, #44]	; 0x2c
   19180:	ldr	r8, [sp, #48]	; 0x30
   19184:	bl	1598 <Mat_SizeOf@plt>
   19188:	mul	r1, r0, fp
   1918c:	mov	r2, #1
   19190:	sub	sl, sl, #1
   19194:	mul	r6, r0, sl
   19198:	ldr	r0, [r5]
   1919c:	bl	1694 <fseek@plt>
   191a0:	sub	r2, r4, #6
   191a4:	cmp	r2, #9
   191a8:	addls	pc, pc, r2, lsl #2
   191ac:	b	195c8 <ReadDataSlab1+0x468>
   191b0:	b	191d8 <ReadDataSlab1+0x78>
   191b4:	b	19244 <ReadDataSlab1+0xe4>
   191b8:	b	19500 <ReadDataSlab1+0x3a0>
   191bc:	b	19564 <ReadDataSlab1+0x404>
   191c0:	b	19438 <ReadDataSlab1+0x2d8>
   191c4:	b	1949c <ReadDataSlab1+0x33c>
   191c8:	b	19370 <ReadDataSlab1+0x210>
   191cc:	b	193d4 <ReadDataSlab1+0x274>
   191d0:	b	192a8 <ReadDataSlab1+0x148>
   191d4:	b	1930c <ReadDataSlab1+0x1ac>
   191d8:	cmp	r6, #0
   191dc:	movne	r4, #0
   191e0:	movne	sl, r4
   191e4:	bne	19230 <ReadDataSlab1+0xd0>
   191e8:	mov	r3, r8
   191ec:	mov	r2, r7
   191f0:	mov	r1, r9
   191f4:	mov	r0, r5
   191f8:	add	sp, sp, #4
   191fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19200:	b	f568 <ReadDoubleData>
   19204:	add	r1, r9, sl, lsl #3
   19208:	mov	r2, r7
   1920c:	mov	r3, #1
   19210:	mov	r0, r5
   19214:	add	sl, sl, #1
   19218:	bl	f568 <ReadDoubleData>
   1921c:	add	r4, r4, r0
   19220:	mov	r2, #1
   19224:	ldr	r0, [r5]
   19228:	mov	r1, r6
   1922c:	bl	1694 <fseek@plt>
   19230:	cmp	sl, r8
   19234:	blt	19204 <ReadDataSlab1+0xa4>
   19238:	mov	r0, r4
   1923c:	add	sp, sp, #4
   19240:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19244:	cmp	r6, #0
   19248:	movne	r4, #0
   1924c:	movne	sl, r4
   19250:	bne	1929c <ReadDataSlab1+0x13c>
   19254:	mov	r3, r8
   19258:	mov	r2, r7
   1925c:	mov	r1, r9
   19260:	mov	r0, r5
   19264:	add	sp, sp, #4
   19268:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1926c:	b	106cc <ReadSingleData>
   19270:	add	r1, r9, sl, lsl #2
   19274:	mov	r2, r7
   19278:	mov	r3, #1
   1927c:	mov	r0, r5
   19280:	add	sl, sl, #1
   19284:	bl	106cc <ReadSingleData>
   19288:	add	r4, r4, r0
   1928c:	mov	r2, #1
   19290:	ldr	r0, [r5]
   19294:	mov	r1, r6
   19298:	bl	1694 <fseek@plt>
   1929c:	cmp	sl, r8
   192a0:	blt	19270 <ReadDataSlab1+0x110>
   192a4:	b	19238 <ReadDataSlab1+0xd8>
   192a8:	cmp	r6, #0
   192ac:	movne	r4, #0
   192b0:	movne	sl, r4
   192b4:	bne	19300 <ReadDataSlab1+0x1a0>
   192b8:	mov	r3, r8
   192bc:	mov	r2, r7
   192c0:	mov	r1, r9
   192c4:	mov	r0, r5
   192c8:	add	sp, sp, #4
   192cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   192d0:	b	10bec <ReadInt64Data>
   192d4:	add	r1, r9, sl, lsl #3
   192d8:	mov	r2, r7
   192dc:	mov	r3, #1
   192e0:	mov	r0, r5
   192e4:	add	sl, sl, #1
   192e8:	bl	10bec <ReadInt64Data>
   192ec:	add	r4, r4, r0
   192f0:	mov	r2, #1
   192f4:	ldr	r0, [r5]
   192f8:	mov	r1, r6
   192fc:	bl	1694 <fseek@plt>
   19300:	cmp	sl, r8
   19304:	blt	192d4 <ReadDataSlab1+0x174>
   19308:	b	19238 <ReadDataSlab1+0xd8>
   1930c:	cmp	r6, #0
   19310:	movne	r4, #0
   19314:	movne	sl, r4
   19318:	bne	19364 <ReadDataSlab1+0x204>
   1931c:	mov	r3, r8
   19320:	mov	r2, r7
   19324:	mov	r1, r9
   19328:	mov	r0, r5
   1932c:	add	sp, sp, #4
   19330:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19334:	b	11124 <ReadUInt64Data>
   19338:	add	r1, r9, sl, lsl #3
   1933c:	mov	r2, r7
   19340:	mov	r3, #1
   19344:	mov	r0, r5
   19348:	add	sl, sl, #1
   1934c:	bl	11124 <ReadUInt64Data>
   19350:	add	r4, r4, r0
   19354:	mov	r2, #1
   19358:	ldr	r0, [r5]
   1935c:	mov	r1, r6
   19360:	bl	1694 <fseek@plt>
   19364:	cmp	sl, r8
   19368:	blt	19338 <ReadDataSlab1+0x1d8>
   1936c:	b	19238 <ReadDataSlab1+0xd8>
   19370:	cmp	r6, #0
   19374:	movne	r4, #0
   19378:	movne	sl, r4
   1937c:	bne	193c8 <ReadDataSlab1+0x268>
   19380:	mov	r3, r8
   19384:	mov	r2, r7
   19388:	mov	r1, r9
   1938c:	mov	r0, r5
   19390:	add	sp, sp, #4
   19394:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19398:	b	1165c <ReadInt32Data>
   1939c:	add	r1, r9, sl, lsl #2
   193a0:	mov	r2, r7
   193a4:	mov	r3, #1
   193a8:	mov	r0, r5
   193ac:	add	sl, sl, #1
   193b0:	bl	1165c <ReadInt32Data>
   193b4:	add	r4, r4, r0
   193b8:	mov	r2, #1
   193bc:	ldr	r0, [r5]
   193c0:	mov	r1, r6
   193c4:	bl	1694 <fseek@plt>
   193c8:	cmp	sl, r8
   193cc:	blt	1939c <ReadDataSlab1+0x23c>
   193d0:	b	19238 <ReadDataSlab1+0xd8>
   193d4:	cmp	r6, #0
   193d8:	movne	r4, #0
   193dc:	movne	sl, r4
   193e0:	bne	1942c <ReadDataSlab1+0x2cc>
   193e4:	mov	r3, r8
   193e8:	mov	r2, r7
   193ec:	mov	r1, r9
   193f0:	mov	r0, r5
   193f4:	add	sp, sp, #4
   193f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   193fc:	b	11b64 <ReadUInt32Data>
   19400:	add	r1, r9, sl, lsl #2
   19404:	mov	r2, r7
   19408:	mov	r3, #1
   1940c:	mov	r0, r5
   19410:	add	sl, sl, #1
   19414:	bl	11b64 <ReadUInt32Data>
   19418:	add	r4, r4, r0
   1941c:	mov	r2, #1
   19420:	ldr	r0, [r5]
   19424:	mov	r1, r6
   19428:	bl	1694 <fseek@plt>
   1942c:	cmp	sl, r8
   19430:	blt	19400 <ReadDataSlab1+0x2a0>
   19434:	b	19238 <ReadDataSlab1+0xd8>
   19438:	cmp	r6, #0
   1943c:	movne	r4, #0
   19440:	movne	sl, r4
   19444:	bne	19490 <ReadDataSlab1+0x330>
   19448:	mov	r3, r8
   1944c:	mov	r2, r7
   19450:	mov	r1, r9
   19454:	mov	r0, r5
   19458:	add	sp, sp, #4
   1945c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19460:	b	1206c <ReadInt16Data>
   19464:	mov	r3, #1
   19468:	mov	r2, r7
   1946c:	add	r1, r9, sl, lsl r3
   19470:	mov	r0, r5
   19474:	add	sl, sl, #1
   19478:	bl	1206c <ReadInt16Data>
   1947c:	add	r4, r4, r0
   19480:	mov	r2, #1
   19484:	ldr	r0, [r5]
   19488:	mov	r1, r6
   1948c:	bl	1694 <fseek@plt>
   19490:	cmp	sl, r8
   19494:	blt	19464 <ReadDataSlab1+0x304>
   19498:	b	19238 <ReadDataSlab1+0xd8>
   1949c:	cmp	r6, #0
   194a0:	movne	r4, #0
   194a4:	movne	sl, r4
   194a8:	bne	194f4 <ReadDataSlab1+0x394>
   194ac:	mov	r3, r8
   194b0:	mov	r2, r7
   194b4:	mov	r1, r9
   194b8:	mov	r0, r5
   194bc:	add	sp, sp, #4
   194c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   194c4:	b	12574 <ReadUInt16Data>
   194c8:	mov	r3, #1
   194cc:	mov	r2, r7
   194d0:	add	r1, r9, sl, lsl r3
   194d4:	mov	r0, r5
   194d8:	add	sl, sl, #1
   194dc:	bl	12574 <ReadUInt16Data>
   194e0:	add	r4, r4, r0
   194e4:	mov	r2, #1
   194e8:	ldr	r0, [r5]
   194ec:	mov	r1, r6
   194f0:	bl	1694 <fseek@plt>
   194f4:	cmp	sl, r8
   194f8:	blt	194c8 <ReadDataSlab1+0x368>
   194fc:	b	19238 <ReadDataSlab1+0xd8>
   19500:	cmp	r6, #0
   19504:	movne	r4, #0
   19508:	movne	sl, r4
   1950c:	bne	19558 <ReadDataSlab1+0x3f8>
   19510:	mov	r3, r8
   19514:	mov	r2, r7
   19518:	mov	r1, r9
   1951c:	mov	r0, r5
   19520:	add	sp, sp, #4
   19524:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19528:	b	12a7c <ReadInt8Data>
   1952c:	add	r1, r9, sl
   19530:	mov	r2, r7
   19534:	mov	r3, #1
   19538:	mov	r0, r5
   1953c:	bl	12a7c <ReadInt8Data>
   19540:	add	r4, r4, r0
   19544:	mov	r2, #1
   19548:	ldr	r0, [r5]
   1954c:	mov	r1, r6
   19550:	add	sl, sl, #1
   19554:	bl	1694 <fseek@plt>
   19558:	cmp	sl, r8
   1955c:	blt	1952c <ReadDataSlab1+0x3cc>
   19560:	b	19238 <ReadDataSlab1+0xd8>
   19564:	cmp	r6, #0
   19568:	movne	r4, #0
   1956c:	movne	sl, r4
   19570:	bne	195bc <ReadDataSlab1+0x45c>
   19574:	mov	r3, r8
   19578:	mov	r2, r7
   1957c:	mov	r1, r9
   19580:	mov	r0, r5
   19584:	add	sp, sp, #4
   19588:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1958c:	b	12f84 <ReadUInt8Data>
   19590:	add	r1, r9, sl
   19594:	mov	r2, r7
   19598:	mov	r3, #1
   1959c:	mov	r0, r5
   195a0:	bl	12f84 <ReadUInt8Data>
   195a4:	add	r4, r4, r0
   195a8:	mov	r2, #1
   195ac:	ldr	r0, [r5]
   195b0:	mov	r1, r6
   195b4:	add	sl, sl, #1
   195b8:	bl	1694 <fseek@plt>
   195bc:	cmp	sl, r8
   195c0:	blt	19590 <ReadDataSlab1+0x430>
   195c4:	b	19238 <ReadDataSlab1+0xd8>
   195c8:	mov	r4, #0
   195cc:	b	19238 <ReadDataSlab1+0xd8>

000195d0 <ReadDataSlab2>:
   195d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   195d4:	sub	sp, sp, #20
   195d8:	cmp	r1, #0
   195dc:	cmpne	r0, #0
   195e0:	str	r3, [sp]
   195e4:	ldr	r9, [sp, #56]	; 0x38
   195e8:	ldr	r8, [sp, #60]	; 0x3c
   195ec:	ldr	sl, [sp, #64]	; 0x40
   195f0:	ldr	r5, [sp, #68]	; 0x44
   195f4:	bne	19600 <ReadDataSlab2+0x30>
   195f8:	mov	r0, #0
   195fc:	b	196f4 <ReadDataSlab2+0x124>
   19600:	ldr	r3, [r0]
   19604:	mov	r4, r0
   19608:	cmp	r3, #0
   1960c:	beq	195f8 <ReadDataSlab2+0x28>
   19610:	cmp	r8, #0
   19614:	clz	r3, sl
   19618:	lsr	r3, r3, #5
   1961c:	moveq	r3, #1
   19620:	cmp	r5, #0
   19624:	moveq	r3, #1
   19628:	cmp	r3, #0
   1962c:	bne	195f8 <ReadDataSlab2+0x28>
   19630:	ldr	r0, [sp]
   19634:	mov	r7, r1
   19638:	sub	fp, r2, #6
   1963c:	bl	1598 <Mat_SizeOf@plt>
   19640:	mov	r6, r0
   19644:	cmp	fp, #9
   19648:	addls	pc, pc, fp, lsl #2
   1964c:	b	195f8 <ReadDataSlab2+0x28>
   19650:	b	19678 <ReadDataSlab2+0xa8>
   19654:	b	197c8 <ReadDataSlab2+0x1f8>
   19658:	b	1a048 <ReadDataSlab2+0xa78>
   1965c:	b	1a17c <ReadDataSlab2+0xbac>
   19660:	b	19de0 <ReadDataSlab2+0x810>
   19664:	b	19f14 <ReadDataSlab2+0x944>
   19668:	b	19b70 <ReadDataSlab2+0x5a0>
   1966c:	b	19ca8 <ReadDataSlab2+0x6d8>
   19670:	b	19900 <ReadDataSlab2+0x330>
   19674:	b	19a38 <ReadDataSlab2+0x468>
   19678:	ldr	r1, [sl]
   1967c:	ldr	r2, [r9]
   19680:	ldr	r0, [sl, #4]
   19684:	cmp	r1, #1
   19688:	bne	196bc <ReadDataSlab2+0xec>
   1968c:	ldr	r3, [r5]
   19690:	cmp	r3, r2
   19694:	bne	196bc <ReadDataSlab2+0xec>
   19698:	cmp	r0, #1
   1969c:	bne	196bc <ReadDataSlab2+0xec>
   196a0:	ldr	r2, [r5, #4]
   196a4:	mov	r1, r7
   196a8:	mov	r0, r4
   196ac:	mul	r3, r2, r3
   196b0:	ldr	r2, [sp]
   196b4:	bl	f568 <ReadDoubleData>
   196b8:	b	195f8 <ReadDataSlab2+0x28>
   196bc:	sub	r1, r1, #1
   196c0:	mul	r2, r2, r0
   196c4:	ldr	r0, [r4]
   196c8:	mul	r3, r6, r1
   196cc:	str	r3, [sp, #8]
   196d0:	mul	r3, r6, r2
   196d4:	str	r3, [sp, #12]
   196d8:	bl	14b4 <ftell@plt>
   196dc:	cmn	r0, #1
   196e0:	bne	196fc <ReadDataSlab2+0x12c>
   196e4:	ldr	r0, [pc, #3012]	; 1a2b0 <ReadDataSlab2+0xce0>
   196e8:	add	r0, pc, r0
   196ec:	bl	161c <Mat_Critical@plt>
   196f0:	mvn	r0, #0
   196f4:	add	sp, sp, #20
   196f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   196fc:	ldr	r1, [r9]
   19700:	mov	r2, #1
   19704:	mov	sl, #0
   19708:	ldr	r3, [r8, #4]
   1970c:	ldr	r0, [r4]
   19710:	mul	r1, r1, r3
   19714:	mul	r1, r6, r1
   19718:	bl	1694 <fseek@plt>
   1971c:	ldr	r3, [r5, #4]
   19720:	cmp	r3, sl
   19724:	ble	195f8 <ReadDataSlab2+0x28>
   19728:	ldr	r0, [r4]
   1972c:	bl	14b4 <ftell@plt>
   19730:	cmn	r0, #1
   19734:	str	r0, [sp, #4]
   19738:	beq	196e4 <ReadDataSlab2+0x114>
   1973c:	ldr	r1, [r8]
   19740:	mov	r2, #1
   19744:	mov	r9, #0
   19748:	ldr	r0, [r4]
   1974c:	mul	r1, r1, r6
   19750:	bl	1694 <fseek@plt>
   19754:	ldr	r3, [r5]
   19758:	add	fp, r7, r9, lsl #3
   1975c:	cmp	r3, r9
   19760:	bgt	1979c <ReadDataSlab2+0x1cc>
   19764:	ldr	r0, [r4]
   19768:	bl	14b4 <ftell@plt>
   1976c:	cmn	r0, #1
   19770:	beq	196e4 <ReadDataSlab2+0x114>
   19774:	ldr	r3, [sp, #12]
   19778:	mov	r2, #1
   1977c:	add	sl, sl, #1
   19780:	mov	r7, fp
   19784:	sub	r1, r3, r0
   19788:	ldr	r3, [sp, #4]
   1978c:	ldr	r0, [r4]
   19790:	add	r1, r1, r3
   19794:	bl	1694 <fseek@plt>
   19798:	b	1971c <ReadDataSlab2+0x14c>
   1979c:	mov	r1, fp
   197a0:	mov	r3, #1
   197a4:	ldr	r2, [sp]
   197a8:	mov	r0, r4
   197ac:	add	r9, r9, #1
   197b0:	bl	f568 <ReadDoubleData>
   197b4:	mov	r2, #1
   197b8:	ldr	r0, [r4]
   197bc:	ldr	r1, [sp, #8]
   197c0:	bl	1694 <fseek@plt>
   197c4:	b	19754 <ReadDataSlab2+0x184>
   197c8:	ldr	r1, [sl]
   197cc:	ldr	r2, [r9]
   197d0:	ldr	r0, [sl, #4]
   197d4:	cmp	r1, #1
   197d8:	bne	1980c <ReadDataSlab2+0x23c>
   197dc:	ldr	r3, [r5]
   197e0:	cmp	r3, r2
   197e4:	bne	1980c <ReadDataSlab2+0x23c>
   197e8:	cmp	r0, #1
   197ec:	bne	1980c <ReadDataSlab2+0x23c>
   197f0:	ldr	r2, [r5, #4]
   197f4:	mov	r1, r7
   197f8:	mov	r0, r4
   197fc:	mul	r3, r2, r3
   19800:	ldr	r2, [sp]
   19804:	bl	106cc <ReadSingleData>
   19808:	b	195f8 <ReadDataSlab2+0x28>
   1980c:	sub	r1, r1, #1
   19810:	mul	r2, r2, r0
   19814:	ldr	r0, [r4]
   19818:	mul	r3, r6, r1
   1981c:	str	r3, [sp, #8]
   19820:	mul	r3, r6, r2
   19824:	str	r3, [sp, #12]
   19828:	bl	14b4 <ftell@plt>
   1982c:	cmn	r0, #1
   19830:	beq	196e4 <ReadDataSlab2+0x114>
   19834:	ldr	r1, [r9]
   19838:	mov	r2, #1
   1983c:	mov	sl, #0
   19840:	ldr	r3, [r8, #4]
   19844:	ldr	r0, [r4]
   19848:	mul	r1, r1, r3
   1984c:	mul	r1, r6, r1
   19850:	bl	1694 <fseek@plt>
   19854:	ldr	r3, [r5, #4]
   19858:	cmp	r3, sl
   1985c:	ble	195f8 <ReadDataSlab2+0x28>
   19860:	ldr	r0, [r4]
   19864:	bl	14b4 <ftell@plt>
   19868:	cmn	r0, #1
   1986c:	str	r0, [sp, #4]
   19870:	beq	196e4 <ReadDataSlab2+0x114>
   19874:	ldr	r1, [r8]
   19878:	mov	r2, #1
   1987c:	mov	r9, #0
   19880:	ldr	r0, [r4]
   19884:	mul	r1, r1, r6
   19888:	bl	1694 <fseek@plt>
   1988c:	ldr	r3, [r5]
   19890:	add	fp, r7, r9, lsl #2
   19894:	cmp	r3, r9
   19898:	bgt	198d4 <ReadDataSlab2+0x304>
   1989c:	ldr	r0, [r4]
   198a0:	bl	14b4 <ftell@plt>
   198a4:	cmn	r0, #1
   198a8:	beq	196e4 <ReadDataSlab2+0x114>
   198ac:	ldr	r3, [sp, #12]
   198b0:	mov	r2, #1
   198b4:	add	sl, sl, #1
   198b8:	mov	r7, fp
   198bc:	sub	r1, r3, r0
   198c0:	ldr	r3, [sp, #4]
   198c4:	ldr	r0, [r4]
   198c8:	add	r1, r1, r3
   198cc:	bl	1694 <fseek@plt>
   198d0:	b	19854 <ReadDataSlab2+0x284>
   198d4:	mov	r1, fp
   198d8:	mov	r3, #1
   198dc:	ldr	r2, [sp]
   198e0:	mov	r0, r4
   198e4:	add	r9, r9, #1
   198e8:	bl	106cc <ReadSingleData>
   198ec:	mov	r2, #1
   198f0:	ldr	r0, [r4]
   198f4:	ldr	r1, [sp, #8]
   198f8:	bl	1694 <fseek@plt>
   198fc:	b	1988c <ReadDataSlab2+0x2bc>
   19900:	ldr	r1, [sl]
   19904:	ldr	r2, [r9]
   19908:	ldr	r0, [sl, #4]
   1990c:	cmp	r1, #1
   19910:	bne	19944 <ReadDataSlab2+0x374>
   19914:	ldr	r3, [r5]
   19918:	cmp	r3, r2
   1991c:	bne	19944 <ReadDataSlab2+0x374>
   19920:	cmp	r0, #1
   19924:	bne	19944 <ReadDataSlab2+0x374>
   19928:	ldr	r2, [r5, #4]
   1992c:	mov	r1, r7
   19930:	mov	r0, r4
   19934:	mul	r3, r2, r3
   19938:	ldr	r2, [sp]
   1993c:	bl	10bec <ReadInt64Data>
   19940:	b	195f8 <ReadDataSlab2+0x28>
   19944:	sub	r1, r1, #1
   19948:	mul	r2, r2, r0
   1994c:	ldr	r0, [r4]
   19950:	mul	r3, r6, r1
   19954:	str	r3, [sp, #8]
   19958:	mul	r3, r6, r2
   1995c:	str	r3, [sp, #12]
   19960:	bl	14b4 <ftell@plt>
   19964:	cmn	r0, #1
   19968:	beq	196e4 <ReadDataSlab2+0x114>
   1996c:	ldr	r1, [r9]
   19970:	mov	r2, #1
   19974:	mov	sl, #0
   19978:	ldr	r3, [r8, #4]
   1997c:	ldr	r0, [r4]
   19980:	mul	r1, r1, r3
   19984:	mul	r1, r6, r1
   19988:	bl	1694 <fseek@plt>
   1998c:	ldr	r3, [r5, #4]
   19990:	cmp	r3, sl
   19994:	ble	195f8 <ReadDataSlab2+0x28>
   19998:	ldr	r0, [r4]
   1999c:	bl	14b4 <ftell@plt>
   199a0:	cmn	r0, #1
   199a4:	str	r0, [sp, #4]
   199a8:	beq	196e4 <ReadDataSlab2+0x114>
   199ac:	ldr	r1, [r8]
   199b0:	mov	r2, #1
   199b4:	mov	r9, #0
   199b8:	ldr	r0, [r4]
   199bc:	mul	r1, r1, r6
   199c0:	bl	1694 <fseek@plt>
   199c4:	ldr	r3, [r5]
   199c8:	add	fp, r7, r9, lsl #3
   199cc:	cmp	r3, r9
   199d0:	bgt	19a0c <ReadDataSlab2+0x43c>
   199d4:	ldr	r0, [r4]
   199d8:	bl	14b4 <ftell@plt>
   199dc:	cmn	r0, #1
   199e0:	beq	196e4 <ReadDataSlab2+0x114>
   199e4:	ldr	r3, [sp, #12]
   199e8:	mov	r2, #1
   199ec:	add	sl, sl, #1
   199f0:	mov	r7, fp
   199f4:	sub	r1, r3, r0
   199f8:	ldr	r3, [sp, #4]
   199fc:	ldr	r0, [r4]
   19a00:	add	r1, r1, r3
   19a04:	bl	1694 <fseek@plt>
   19a08:	b	1998c <ReadDataSlab2+0x3bc>
   19a0c:	mov	r1, fp
   19a10:	mov	r3, #1
   19a14:	ldr	r2, [sp]
   19a18:	mov	r0, r4
   19a1c:	add	r9, r9, #1
   19a20:	bl	10bec <ReadInt64Data>
   19a24:	mov	r2, #1
   19a28:	ldr	r0, [r4]
   19a2c:	ldr	r1, [sp, #8]
   19a30:	bl	1694 <fseek@plt>
   19a34:	b	199c4 <ReadDataSlab2+0x3f4>
   19a38:	ldr	r1, [sl]
   19a3c:	ldr	r2, [r9]
   19a40:	ldr	r0, [sl, #4]
   19a44:	cmp	r1, #1
   19a48:	bne	19a7c <ReadDataSlab2+0x4ac>
   19a4c:	ldr	r3, [r5]
   19a50:	cmp	r3, r2
   19a54:	bne	19a7c <ReadDataSlab2+0x4ac>
   19a58:	cmp	r0, #1
   19a5c:	bne	19a7c <ReadDataSlab2+0x4ac>
   19a60:	ldr	r2, [r5, #4]
   19a64:	mov	r1, r7
   19a68:	mov	r0, r4
   19a6c:	mul	r3, r2, r3
   19a70:	ldr	r2, [sp]
   19a74:	bl	11124 <ReadUInt64Data>
   19a78:	b	195f8 <ReadDataSlab2+0x28>
   19a7c:	sub	r1, r1, #1
   19a80:	mul	r2, r2, r0
   19a84:	ldr	r0, [r4]
   19a88:	mul	r3, r6, r1
   19a8c:	str	r3, [sp, #8]
   19a90:	mul	r3, r6, r2
   19a94:	str	r3, [sp, #12]
   19a98:	bl	14b4 <ftell@plt>
   19a9c:	cmn	r0, #1
   19aa0:	beq	196e4 <ReadDataSlab2+0x114>
   19aa4:	ldr	r1, [r9]
   19aa8:	mov	r2, #1
   19aac:	mov	sl, #0
   19ab0:	ldr	r3, [r8, #4]
   19ab4:	ldr	r0, [r4]
   19ab8:	mul	r1, r1, r3
   19abc:	mul	r1, r6, r1
   19ac0:	bl	1694 <fseek@plt>
   19ac4:	ldr	r3, [r5, #4]
   19ac8:	cmp	r3, sl
   19acc:	ble	195f8 <ReadDataSlab2+0x28>
   19ad0:	ldr	r0, [r4]
   19ad4:	bl	14b4 <ftell@plt>
   19ad8:	cmn	r0, #1
   19adc:	str	r0, [sp, #4]
   19ae0:	beq	196e4 <ReadDataSlab2+0x114>
   19ae4:	ldr	r1, [r8]
   19ae8:	mov	r2, #1
   19aec:	mov	r9, #0
   19af0:	ldr	r0, [r4]
   19af4:	mul	r1, r1, r6
   19af8:	bl	1694 <fseek@plt>
   19afc:	ldr	r3, [r5]
   19b00:	add	fp, r7, r9, lsl #3
   19b04:	cmp	r3, r9
   19b08:	bgt	19b44 <ReadDataSlab2+0x574>
   19b0c:	ldr	r0, [r4]
   19b10:	bl	14b4 <ftell@plt>
   19b14:	cmn	r0, #1
   19b18:	beq	196e4 <ReadDataSlab2+0x114>
   19b1c:	ldr	r3, [sp, #12]
   19b20:	mov	r2, #1
   19b24:	add	sl, sl, #1
   19b28:	mov	r7, fp
   19b2c:	sub	r1, r3, r0
   19b30:	ldr	r3, [sp, #4]
   19b34:	ldr	r0, [r4]
   19b38:	add	r1, r1, r3
   19b3c:	bl	1694 <fseek@plt>
   19b40:	b	19ac4 <ReadDataSlab2+0x4f4>
   19b44:	mov	r1, fp
   19b48:	mov	r3, #1
   19b4c:	ldr	r2, [sp]
   19b50:	mov	r0, r4
   19b54:	add	r9, r9, #1
   19b58:	bl	11124 <ReadUInt64Data>
   19b5c:	mov	r2, #1
   19b60:	ldr	r0, [r4]
   19b64:	ldr	r1, [sp, #8]
   19b68:	bl	1694 <fseek@plt>
   19b6c:	b	19afc <ReadDataSlab2+0x52c>
   19b70:	ldr	r1, [sl]
   19b74:	ldr	r2, [r9]
   19b78:	ldr	r0, [sl, #4]
   19b7c:	cmp	r1, #1
   19b80:	bne	19bb4 <ReadDataSlab2+0x5e4>
   19b84:	ldr	r3, [r5]
   19b88:	cmp	r3, r2
   19b8c:	bne	19bb4 <ReadDataSlab2+0x5e4>
   19b90:	cmp	r0, #1
   19b94:	bne	19bb4 <ReadDataSlab2+0x5e4>
   19b98:	ldr	r2, [r5, #4]
   19b9c:	mov	r1, r7
   19ba0:	mov	r0, r4
   19ba4:	mul	r3, r2, r3
   19ba8:	ldr	r2, [sp]
   19bac:	bl	1165c <ReadInt32Data>
   19bb0:	b	195f8 <ReadDataSlab2+0x28>
   19bb4:	sub	r1, r1, #1
   19bb8:	mul	r2, r2, r0
   19bbc:	ldr	r0, [r4]
   19bc0:	mul	r3, r6, r1
   19bc4:	str	r3, [sp, #8]
   19bc8:	mul	r3, r6, r2
   19bcc:	str	r3, [sp, #12]
   19bd0:	bl	14b4 <ftell@plt>
   19bd4:	cmn	r0, #1
   19bd8:	beq	196e4 <ReadDataSlab2+0x114>
   19bdc:	ldr	r1, [r9]
   19be0:	mov	r2, #1
   19be4:	mov	sl, #0
   19be8:	ldr	r3, [r8, #4]
   19bec:	ldr	r0, [r4]
   19bf0:	mul	r1, r1, r3
   19bf4:	mul	r1, r6, r1
   19bf8:	bl	1694 <fseek@plt>
   19bfc:	ldr	r3, [r5, #4]
   19c00:	cmp	r3, sl
   19c04:	ble	195f8 <ReadDataSlab2+0x28>
   19c08:	ldr	r0, [r4]
   19c0c:	bl	14b4 <ftell@plt>
   19c10:	cmn	r0, #1
   19c14:	str	r0, [sp, #4]
   19c18:	beq	196e4 <ReadDataSlab2+0x114>
   19c1c:	ldr	r1, [r8]
   19c20:	mov	r2, #1
   19c24:	mov	r9, #0
   19c28:	ldr	r0, [r4]
   19c2c:	mul	r1, r1, r6
   19c30:	bl	1694 <fseek@plt>
   19c34:	ldr	r3, [r5]
   19c38:	add	fp, r7, r9, lsl #2
   19c3c:	cmp	r3, r9
   19c40:	bgt	19c7c <ReadDataSlab2+0x6ac>
   19c44:	ldr	r0, [r4]
   19c48:	bl	14b4 <ftell@plt>
   19c4c:	cmn	r0, #1
   19c50:	beq	196e4 <ReadDataSlab2+0x114>
   19c54:	ldr	r3, [sp, #12]
   19c58:	mov	r2, #1
   19c5c:	add	sl, sl, #1
   19c60:	mov	r7, fp
   19c64:	sub	r1, r3, r0
   19c68:	ldr	r3, [sp, #4]
   19c6c:	ldr	r0, [r4]
   19c70:	add	r1, r1, r3
   19c74:	bl	1694 <fseek@plt>
   19c78:	b	19bfc <ReadDataSlab2+0x62c>
   19c7c:	mov	r1, fp
   19c80:	mov	r3, #1
   19c84:	ldr	r2, [sp]
   19c88:	mov	r0, r4
   19c8c:	add	r9, r9, #1
   19c90:	bl	1165c <ReadInt32Data>
   19c94:	mov	r2, #1
   19c98:	ldr	r0, [r4]
   19c9c:	ldr	r1, [sp, #8]
   19ca0:	bl	1694 <fseek@plt>
   19ca4:	b	19c34 <ReadDataSlab2+0x664>
   19ca8:	ldr	r1, [sl]
   19cac:	ldr	r2, [r9]
   19cb0:	ldr	r0, [sl, #4]
   19cb4:	cmp	r1, #1
   19cb8:	bne	19cec <ReadDataSlab2+0x71c>
   19cbc:	ldr	r3, [r5]
   19cc0:	cmp	r3, r2
   19cc4:	bne	19cec <ReadDataSlab2+0x71c>
   19cc8:	cmp	r0, #1
   19ccc:	bne	19cec <ReadDataSlab2+0x71c>
   19cd0:	ldr	r2, [r5, #4]
   19cd4:	mov	r1, r7
   19cd8:	mov	r0, r4
   19cdc:	mul	r3, r2, r3
   19ce0:	ldr	r2, [sp]
   19ce4:	bl	11b64 <ReadUInt32Data>
   19ce8:	b	195f8 <ReadDataSlab2+0x28>
   19cec:	sub	r1, r1, #1
   19cf0:	mul	r2, r2, r0
   19cf4:	ldr	r0, [r4]
   19cf8:	mul	r3, r6, r1
   19cfc:	str	r3, [sp, #8]
   19d00:	mul	r3, r6, r2
   19d04:	str	r3, [sp, #12]
   19d08:	bl	14b4 <ftell@plt>
   19d0c:	cmn	r0, #1
   19d10:	beq	196e4 <ReadDataSlab2+0x114>
   19d14:	ldr	r1, [r9]
   19d18:	mov	r2, #1
   19d1c:	mov	sl, #0
   19d20:	ldr	r3, [r8, #4]
   19d24:	ldr	r0, [r4]
   19d28:	mul	r1, r1, r3
   19d2c:	mul	r1, r6, r1
   19d30:	bl	1694 <fseek@plt>
   19d34:	ldr	r3, [r5, #4]
   19d38:	cmp	r3, sl
   19d3c:	ble	195f8 <ReadDataSlab2+0x28>
   19d40:	ldr	r0, [r4]
   19d44:	bl	14b4 <ftell@plt>
   19d48:	cmn	r0, #1
   19d4c:	str	r0, [sp, #4]
   19d50:	beq	196e4 <ReadDataSlab2+0x114>
   19d54:	ldr	r1, [r8]
   19d58:	mov	r2, #1
   19d5c:	mov	r9, #0
   19d60:	ldr	r0, [r4]
   19d64:	mul	r1, r1, r6
   19d68:	bl	1694 <fseek@plt>
   19d6c:	ldr	r3, [r5]
   19d70:	add	fp, r7, r9, lsl #2
   19d74:	cmp	r3, r9
   19d78:	bgt	19db4 <ReadDataSlab2+0x7e4>
   19d7c:	ldr	r0, [r4]
   19d80:	bl	14b4 <ftell@plt>
   19d84:	cmn	r0, #1
   19d88:	beq	196e4 <ReadDataSlab2+0x114>
   19d8c:	ldr	r3, [sp, #12]
   19d90:	mov	r2, #1
   19d94:	add	sl, sl, #1
   19d98:	mov	r7, fp
   19d9c:	sub	r1, r3, r0
   19da0:	ldr	r3, [sp, #4]
   19da4:	ldr	r0, [r4]
   19da8:	add	r1, r1, r3
   19dac:	bl	1694 <fseek@plt>
   19db0:	b	19d34 <ReadDataSlab2+0x764>
   19db4:	mov	r1, fp
   19db8:	mov	r3, #1
   19dbc:	ldr	r2, [sp]
   19dc0:	mov	r0, r4
   19dc4:	add	r9, r9, #1
   19dc8:	bl	11b64 <ReadUInt32Data>
   19dcc:	mov	r2, #1
   19dd0:	ldr	r0, [r4]
   19dd4:	ldr	r1, [sp, #8]
   19dd8:	bl	1694 <fseek@plt>
   19ddc:	b	19d6c <ReadDataSlab2+0x79c>
   19de0:	ldr	r2, [sl]
   19de4:	ldr	r3, [r9]
   19de8:	ldr	r1, [sl, #4]
   19dec:	cmp	r2, #1
   19df0:	bne	19e24 <ReadDataSlab2+0x854>
   19df4:	ldr	r0, [r5]
   19df8:	cmp	r3, r0
   19dfc:	bne	19e24 <ReadDataSlab2+0x854>
   19e00:	cmp	r1, #1
   19e04:	bne	19e24 <ReadDataSlab2+0x854>
   19e08:	ldr	r2, [r5, #4]
   19e0c:	mov	r1, r7
   19e10:	mov	r0, r4
   19e14:	mul	r3, r2, r3
   19e18:	ldr	r2, [sp]
   19e1c:	bl	1206c <ReadInt16Data>
   19e20:	b	195f8 <ReadDataSlab2+0x28>
   19e24:	mul	r3, r3, r1
   19e28:	sub	r2, r2, #1
   19e2c:	ldr	r0, [r4]
   19e30:	mul	r2, r6, r2
   19e34:	mul	r3, r6, r3
   19e38:	strd	r2, [sp, #8]
   19e3c:	bl	14b4 <ftell@plt>
   19e40:	cmn	r0, #1
   19e44:	beq	196e4 <ReadDataSlab2+0x114>
   19e48:	ldr	r1, [r9]
   19e4c:	mov	r2, #1
   19e50:	mov	sl, #0
   19e54:	ldr	r3, [r8, #4]
   19e58:	ldr	r0, [r4]
   19e5c:	mul	r1, r1, r3
   19e60:	mul	r1, r6, r1
   19e64:	bl	1694 <fseek@plt>
   19e68:	ldr	r3, [r5, #4]
   19e6c:	cmp	r3, sl
   19e70:	ble	195f8 <ReadDataSlab2+0x28>
   19e74:	ldr	r0, [r4]
   19e78:	bl	14b4 <ftell@plt>
   19e7c:	cmn	r0, #1
   19e80:	str	r0, [sp, #4]
   19e84:	beq	196e4 <ReadDataSlab2+0x114>
   19e88:	ldr	r1, [r8]
   19e8c:	mov	r2, #1
   19e90:	mov	r9, #0
   19e94:	ldr	r0, [r4]
   19e98:	mul	r1, r1, r6
   19e9c:	bl	1694 <fseek@plt>
   19ea0:	ldr	r3, [r5]
   19ea4:	add	fp, r7, r9, lsl #1
   19ea8:	cmp	r3, r9
   19eac:	bgt	19ee8 <ReadDataSlab2+0x918>
   19eb0:	ldr	r0, [r4]
   19eb4:	bl	14b4 <ftell@plt>
   19eb8:	cmn	r0, #1
   19ebc:	beq	196e4 <ReadDataSlab2+0x114>
   19ec0:	ldr	r3, [sp, #12]
   19ec4:	mov	r2, #1
   19ec8:	add	sl, sl, #1
   19ecc:	mov	r7, fp
   19ed0:	sub	r1, r3, r0
   19ed4:	ldr	r3, [sp, #4]
   19ed8:	ldr	r0, [r4]
   19edc:	add	r1, r1, r3
   19ee0:	bl	1694 <fseek@plt>
   19ee4:	b	19e68 <ReadDataSlab2+0x898>
   19ee8:	mov	r1, fp
   19eec:	mov	r3, #1
   19ef0:	ldr	r2, [sp]
   19ef4:	mov	r0, r4
   19ef8:	add	r9, r9, #1
   19efc:	bl	1206c <ReadInt16Data>
   19f00:	mov	r2, #1
   19f04:	ldr	r0, [r4]
   19f08:	ldr	r1, [sp, #8]
   19f0c:	bl	1694 <fseek@plt>
   19f10:	b	19ea0 <ReadDataSlab2+0x8d0>
   19f14:	ldr	r2, [sl]
   19f18:	ldr	r3, [r9]
   19f1c:	ldr	r1, [sl, #4]
   19f20:	cmp	r2, #1
   19f24:	bne	19f58 <ReadDataSlab2+0x988>
   19f28:	ldr	r0, [r5]
   19f2c:	cmp	r3, r0
   19f30:	bne	19f58 <ReadDataSlab2+0x988>
   19f34:	cmp	r1, #1
   19f38:	bne	19f58 <ReadDataSlab2+0x988>
   19f3c:	ldr	r2, [r5, #4]
   19f40:	mov	r1, r7
   19f44:	mov	r0, r4
   19f48:	mul	r3, r2, r3
   19f4c:	ldr	r2, [sp]
   19f50:	bl	12574 <ReadUInt16Data>
   19f54:	b	195f8 <ReadDataSlab2+0x28>
   19f58:	mul	r3, r3, r1
   19f5c:	sub	r2, r2, #1
   19f60:	ldr	r0, [r4]
   19f64:	mul	r2, r6, r2
   19f68:	mul	r3, r6, r3
   19f6c:	strd	r2, [sp, #8]
   19f70:	bl	14b4 <ftell@plt>
   19f74:	cmn	r0, #1
   19f78:	beq	196e4 <ReadDataSlab2+0x114>
   19f7c:	ldr	r1, [r9]
   19f80:	mov	r2, #1
   19f84:	mov	sl, #0
   19f88:	ldr	r3, [r8, #4]
   19f8c:	ldr	r0, [r4]
   19f90:	mul	r1, r1, r3
   19f94:	mul	r1, r6, r1
   19f98:	bl	1694 <fseek@plt>
   19f9c:	ldr	r3, [r5, #4]
   19fa0:	cmp	r3, sl
   19fa4:	ble	195f8 <ReadDataSlab2+0x28>
   19fa8:	ldr	r0, [r4]
   19fac:	bl	14b4 <ftell@plt>
   19fb0:	cmn	r0, #1
   19fb4:	str	r0, [sp, #4]
   19fb8:	beq	196e4 <ReadDataSlab2+0x114>
   19fbc:	ldr	r1, [r8]
   19fc0:	mov	r2, #1
   19fc4:	mov	r9, #0
   19fc8:	ldr	r0, [r4]
   19fcc:	mul	r1, r1, r6
   19fd0:	bl	1694 <fseek@plt>
   19fd4:	ldr	r3, [r5]
   19fd8:	add	fp, r7, r9, lsl #1
   19fdc:	cmp	r3, r9
   19fe0:	bgt	1a01c <ReadDataSlab2+0xa4c>
   19fe4:	ldr	r0, [r4]
   19fe8:	bl	14b4 <ftell@plt>
   19fec:	cmn	r0, #1
   19ff0:	beq	196e4 <ReadDataSlab2+0x114>
   19ff4:	ldr	r3, [sp, #12]
   19ff8:	mov	r2, #1
   19ffc:	add	sl, sl, #1
   1a000:	mov	r7, fp
   1a004:	sub	r1, r3, r0
   1a008:	ldr	r3, [sp, #4]
   1a00c:	ldr	r0, [r4]
   1a010:	add	r1, r1, r3
   1a014:	bl	1694 <fseek@plt>
   1a018:	b	19f9c <ReadDataSlab2+0x9cc>
   1a01c:	mov	r1, fp
   1a020:	mov	r3, #1
   1a024:	ldr	r2, [sp]
   1a028:	mov	r0, r4
   1a02c:	add	r9, r9, #1
   1a030:	bl	12574 <ReadUInt16Data>
   1a034:	mov	r2, #1
   1a038:	ldr	r0, [r4]
   1a03c:	ldr	r1, [sp, #8]
   1a040:	bl	1694 <fseek@plt>
   1a044:	b	19fd4 <ReadDataSlab2+0xa04>
   1a048:	ldr	r2, [sl]
   1a04c:	ldr	r3, [r9]
   1a050:	ldr	r1, [sl, #4]
   1a054:	cmp	r2, #1
   1a058:	bne	1a08c <ReadDataSlab2+0xabc>
   1a05c:	ldr	r0, [r5]
   1a060:	cmp	r3, r0
   1a064:	bne	1a08c <ReadDataSlab2+0xabc>
   1a068:	cmp	r1, #1
   1a06c:	bne	1a08c <ReadDataSlab2+0xabc>
   1a070:	ldr	r2, [r5, #4]
   1a074:	mov	r1, r7
   1a078:	mov	r0, r4
   1a07c:	mul	r3, r2, r3
   1a080:	ldr	r2, [sp]
   1a084:	bl	12a7c <ReadInt8Data>
   1a088:	b	195f8 <ReadDataSlab2+0x28>
   1a08c:	mul	r3, r3, r1
   1a090:	sub	r2, r2, #1
   1a094:	ldr	r0, [r4]
   1a098:	mul	r2, r6, r2
   1a09c:	mul	r3, r6, r3
   1a0a0:	strd	r2, [sp, #8]
   1a0a4:	bl	14b4 <ftell@plt>
   1a0a8:	cmn	r0, #1
   1a0ac:	beq	196e4 <ReadDataSlab2+0x114>
   1a0b0:	ldr	r1, [r9]
   1a0b4:	mov	r2, #1
   1a0b8:	mov	sl, #0
   1a0bc:	ldr	r3, [r8, #4]
   1a0c0:	ldr	r0, [r4]
   1a0c4:	mul	r1, r1, r3
   1a0c8:	mul	r1, r6, r1
   1a0cc:	bl	1694 <fseek@plt>
   1a0d0:	ldr	r3, [r5, #4]
   1a0d4:	cmp	r3, sl
   1a0d8:	ble	195f8 <ReadDataSlab2+0x28>
   1a0dc:	ldr	r0, [r4]
   1a0e0:	bl	14b4 <ftell@plt>
   1a0e4:	cmn	r0, #1
   1a0e8:	str	r0, [sp, #4]
   1a0ec:	beq	196e4 <ReadDataSlab2+0x114>
   1a0f0:	ldr	r1, [r8]
   1a0f4:	mov	r2, #1
   1a0f8:	mov	r9, #0
   1a0fc:	ldr	r0, [r4]
   1a100:	mul	r1, r1, r6
   1a104:	bl	1694 <fseek@plt>
   1a108:	ldr	r3, [r5]
   1a10c:	add	fp, r7, r9
   1a110:	cmp	r3, r9
   1a114:	bgt	1a150 <ReadDataSlab2+0xb80>
   1a118:	ldr	r0, [r4]
   1a11c:	bl	14b4 <ftell@plt>
   1a120:	cmn	r0, #1
   1a124:	beq	196e4 <ReadDataSlab2+0x114>
   1a128:	ldr	r3, [sp, #12]
   1a12c:	mov	r2, #1
   1a130:	add	sl, sl, #1
   1a134:	mov	r7, fp
   1a138:	sub	r1, r3, r0
   1a13c:	ldr	r3, [sp, #4]
   1a140:	ldr	r0, [r4]
   1a144:	add	r1, r1, r3
   1a148:	bl	1694 <fseek@plt>
   1a14c:	b	1a0d0 <ReadDataSlab2+0xb00>
   1a150:	mov	r1, fp
   1a154:	mov	r3, #1
   1a158:	ldr	r2, [sp]
   1a15c:	mov	r0, r4
   1a160:	add	r9, r9, #1
   1a164:	bl	12a7c <ReadInt8Data>
   1a168:	mov	r2, #1
   1a16c:	ldr	r0, [r4]
   1a170:	ldr	r1, [sp, #8]
   1a174:	bl	1694 <fseek@plt>
   1a178:	b	1a108 <ReadDataSlab2+0xb38>
   1a17c:	ldr	r2, [sl]
   1a180:	ldr	r3, [r9]
   1a184:	ldr	r1, [sl, #4]
   1a188:	cmp	r2, #1
   1a18c:	bne	1a1c0 <ReadDataSlab2+0xbf0>
   1a190:	ldr	r0, [r5]
   1a194:	cmp	r3, r0
   1a198:	bne	1a1c0 <ReadDataSlab2+0xbf0>
   1a19c:	cmp	r1, #1
   1a1a0:	bne	1a1c0 <ReadDataSlab2+0xbf0>
   1a1a4:	ldr	r2, [r5, #4]
   1a1a8:	mov	r1, r7
   1a1ac:	mov	r0, r4
   1a1b0:	mul	r3, r2, r3
   1a1b4:	ldr	r2, [sp]
   1a1b8:	bl	12f84 <ReadUInt8Data>
   1a1bc:	b	195f8 <ReadDataSlab2+0x28>
   1a1c0:	mul	r3, r3, r1
   1a1c4:	sub	r2, r2, #1
   1a1c8:	ldr	r0, [r4]
   1a1cc:	mul	r2, r6, r2
   1a1d0:	mul	r3, r6, r3
   1a1d4:	strd	r2, [sp, #8]
   1a1d8:	bl	14b4 <ftell@plt>
   1a1dc:	cmn	r0, #1
   1a1e0:	beq	196e4 <ReadDataSlab2+0x114>
   1a1e4:	ldr	r1, [r9]
   1a1e8:	mov	r2, #1
   1a1ec:	mov	sl, #0
   1a1f0:	ldr	r3, [r8, #4]
   1a1f4:	ldr	r0, [r4]
   1a1f8:	mul	r1, r1, r3
   1a1fc:	mul	r1, r6, r1
   1a200:	bl	1694 <fseek@plt>
   1a204:	ldr	r3, [r5, #4]
   1a208:	cmp	r3, sl
   1a20c:	ble	195f8 <ReadDataSlab2+0x28>
   1a210:	ldr	r0, [r4]
   1a214:	bl	14b4 <ftell@plt>
   1a218:	cmn	r0, #1
   1a21c:	str	r0, [sp, #4]
   1a220:	beq	196e4 <ReadDataSlab2+0x114>
   1a224:	ldr	r1, [r8]
   1a228:	mov	r2, #1
   1a22c:	mov	r9, #0
   1a230:	ldr	r0, [r4]
   1a234:	mul	r1, r1, r6
   1a238:	bl	1694 <fseek@plt>
   1a23c:	ldr	r3, [r5]
   1a240:	add	fp, r7, r9
   1a244:	cmp	r3, r9
   1a248:	bgt	1a284 <ReadDataSlab2+0xcb4>
   1a24c:	ldr	r0, [r4]
   1a250:	bl	14b4 <ftell@plt>
   1a254:	cmn	r0, #1
   1a258:	beq	196e4 <ReadDataSlab2+0x114>
   1a25c:	ldr	r3, [sp, #12]
   1a260:	mov	r2, #1
   1a264:	add	sl, sl, #1
   1a268:	mov	r7, fp
   1a26c:	sub	r1, r3, r0
   1a270:	ldr	r3, [sp, #4]
   1a274:	ldr	r0, [r4]
   1a278:	add	r1, r1, r3
   1a27c:	bl	1694 <fseek@plt>
   1a280:	b	1a204 <ReadDataSlab2+0xc34>
   1a284:	mov	r1, fp
   1a288:	mov	r3, #1
   1a28c:	ldr	r2, [sp]
   1a290:	mov	r0, r4
   1a294:	add	r9, r9, #1
   1a298:	bl	12f84 <ReadUInt8Data>
   1a29c:	mov	r2, #1
   1a2a0:	ldr	r0, [r4]
   1a2a4:	ldr	r1, [sp, #8]
   1a2a8:	bl	1694 <fseek@plt>
   1a2ac:	b	1a23c <ReadDataSlab2+0xc6c>
   1a2b0:	.word	0x000254fd

0001a2b4 <ReadCompressedDataSlab1>:
   1a2b4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a2b8:	sub	sp, sp, #68	; 0x44
   1a2bc:	mov	r6, r0
   1a2c0:	add	r5, sp, #8
   1a2c4:	mov	r4, r1
   1a2c8:	mov	r9, r2
   1a2cc:	mov	r1, #0
   1a2d0:	mov	r2, #56	; 0x38
   1a2d4:	mov	r0, r5
   1a2d8:	ldr	r7, [sp, #104]	; 0x68
   1a2dc:	mov	fp, r3
   1a2e0:	ldr	sl, [sp, #116]	; 0x74
   1a2e4:	bl	15f8 <memset@plt>
   1a2e8:	cmp	r9, #0
   1a2ec:	cmpne	r6, #0
   1a2f0:	moveq	r4, #0
   1a2f4:	beq	1a3e0 <ReadCompressedDataSlab1+0x12c>
   1a2f8:	ldr	r3, [r6]
   1a2fc:	cmp	r3, #0
   1a300:	moveq	r4, r3
   1a304:	beq	1a3e0 <ReadCompressedDataSlab1+0x12c>
   1a308:	ldr	r8, [sp, #112]	; 0x70
   1a30c:	mov	r1, r4
   1a310:	mov	r0, r5
   1a314:	bl	15bc <inflateCopy@plt>
   1a318:	mov	r2, r7
   1a31c:	mov	r1, r5
   1a320:	ldr	r3, [sp, #108]	; 0x6c
   1a324:	mov	r0, r6
   1a328:	bl	21bc <InflateSkipData>
   1a32c:	sub	r3, fp, #6
   1a330:	sub	r8, r8, #1
   1a334:	cmp	r3, #9
   1a338:	addls	pc, pc, r3, lsl #2
   1a33c:	b	1a7dc <ReadCompressedDataSlab1+0x528>
   1a340:	b	1a368 <ReadCompressedDataSlab1+0xb4>
   1a344:	b	1a3ec <ReadCompressedDataSlab1+0x138>
   1a348:	b	1a6fc <ReadCompressedDataSlab1+0x448>
   1a34c:	b	1a76c <ReadCompressedDataSlab1+0x4b8>
   1a350:	b	1a61c <ReadCompressedDataSlab1+0x368>
   1a354:	b	1a68c <ReadCompressedDataSlab1+0x3d8>
   1a358:	b	1a53c <ReadCompressedDataSlab1+0x288>
   1a35c:	b	1a5ac <ReadCompressedDataSlab1+0x2f8>
   1a360:	b	1a45c <ReadCompressedDataSlab1+0x1a8>
   1a364:	b	1a4cc <ReadCompressedDataSlab1+0x218>
   1a368:	cmp	r8, #0
   1a36c:	movne	fp, #0
   1a370:	movne	r4, fp
   1a374:	bne	1a3d0 <ReadCompressedDataSlab1+0x11c>
   1a378:	mov	r3, r7
   1a37c:	mov	r2, r9
   1a380:	str	sl, [sp]
   1a384:	mov	r1, r5
   1a388:	mov	r0, r6
   1a38c:	bl	f58c <ReadCompressedDoubleData>
   1a390:	mov	r4, r0
   1a394:	b	1a3d8 <ReadCompressedDataSlab1+0x124>
   1a398:	mov	r3, #1
   1a39c:	add	r2, r9, fp, lsl #3
   1a3a0:	mov	r1, r5
   1a3a4:	mov	r0, r6
   1a3a8:	add	fp, fp, #1
   1a3ac:	str	r3, [sp]
   1a3b0:	mov	r3, r7
   1a3b4:	bl	f58c <ReadCompressedDoubleData>
   1a3b8:	add	r4, r4, r0
   1a3bc:	mov	r3, r8
   1a3c0:	mov	r2, r7
   1a3c4:	mov	r1, r5
   1a3c8:	mov	r0, r6
   1a3cc:	bl	21bc <InflateSkipData>
   1a3d0:	cmp	fp, sl
   1a3d4:	blt	1a398 <ReadCompressedDataSlab1+0xe4>
   1a3d8:	mov	r0, r5
   1a3dc:	bl	15b0 <inflateEnd@plt>
   1a3e0:	mov	r0, r4
   1a3e4:	add	sp, sp, #68	; 0x44
   1a3e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a3ec:	cmp	r8, #0
   1a3f0:	movne	fp, #0
   1a3f4:	movne	r4, fp
   1a3f8:	bne	1a450 <ReadCompressedDataSlab1+0x19c>
   1a3fc:	mov	r3, r7
   1a400:	mov	r2, r9
   1a404:	str	sl, [sp]
   1a408:	mov	r1, r5
   1a40c:	mov	r0, r6
   1a410:	bl	106f0 <ReadCompressedSingleData>
   1a414:	b	1a390 <ReadCompressedDataSlab1+0xdc>
   1a418:	mov	r3, #1
   1a41c:	add	r2, r9, fp, lsl #2
   1a420:	mov	r1, r5
   1a424:	mov	r0, r6
   1a428:	add	fp, fp, #1
   1a42c:	str	r3, [sp]
   1a430:	mov	r3, r7
   1a434:	bl	106f0 <ReadCompressedSingleData>
   1a438:	add	r4, r4, r0
   1a43c:	mov	r3, r8
   1a440:	mov	r2, r7
   1a444:	mov	r1, r5
   1a448:	mov	r0, r6
   1a44c:	bl	21bc <InflateSkipData>
   1a450:	cmp	fp, sl
   1a454:	blt	1a418 <ReadCompressedDataSlab1+0x164>
   1a458:	b	1a3d8 <ReadCompressedDataSlab1+0x124>
   1a45c:	cmp	r8, #0
   1a460:	movne	fp, #0
   1a464:	movne	r4, fp
   1a468:	bne	1a4c0 <ReadCompressedDataSlab1+0x20c>
   1a46c:	mov	r3, r7
   1a470:	mov	r2, r9
   1a474:	str	sl, [sp]
   1a478:	mov	r1, r5
   1a47c:	mov	r0, r6
   1a480:	bl	10c10 <ReadCompressedInt64Data>
   1a484:	b	1a390 <ReadCompressedDataSlab1+0xdc>
   1a488:	mov	r3, #1
   1a48c:	add	r2, r9, fp, lsl #3
   1a490:	mov	r1, r5
   1a494:	mov	r0, r6
   1a498:	add	fp, fp, #1
   1a49c:	str	r3, [sp]
   1a4a0:	mov	r3, r7
   1a4a4:	bl	10c10 <ReadCompressedInt64Data>
   1a4a8:	add	r4, r4, r0
   1a4ac:	mov	r3, r8
   1a4b0:	mov	r2, r7
   1a4b4:	mov	r1, r5
   1a4b8:	mov	r0, r6
   1a4bc:	bl	21bc <InflateSkipData>
   1a4c0:	cmp	fp, sl
   1a4c4:	blt	1a488 <ReadCompressedDataSlab1+0x1d4>
   1a4c8:	b	1a3d8 <ReadCompressedDataSlab1+0x124>
   1a4cc:	cmp	r8, #0
   1a4d0:	movne	fp, #0
   1a4d4:	movne	r4, fp
   1a4d8:	bne	1a530 <ReadCompressedDataSlab1+0x27c>
   1a4dc:	mov	r3, r7
   1a4e0:	mov	r2, r9
   1a4e4:	str	sl, [sp]
   1a4e8:	mov	r1, r5
   1a4ec:	mov	r0, r6
   1a4f0:	bl	11148 <ReadCompressedUInt64Data>
   1a4f4:	b	1a390 <ReadCompressedDataSlab1+0xdc>
   1a4f8:	mov	r3, #1
   1a4fc:	add	r2, r9, fp, lsl #3
   1a500:	mov	r1, r5
   1a504:	mov	r0, r6
   1a508:	add	fp, fp, #1
   1a50c:	str	r3, [sp]
   1a510:	mov	r3, r7
   1a514:	bl	11148 <ReadCompressedUInt64Data>
   1a518:	add	r4, r4, r0
   1a51c:	mov	r3, r8
   1a520:	mov	r2, r7
   1a524:	mov	r1, r5
   1a528:	mov	r0, r6
   1a52c:	bl	21bc <InflateSkipData>
   1a530:	cmp	fp, sl
   1a534:	blt	1a4f8 <ReadCompressedDataSlab1+0x244>
   1a538:	b	1a3d8 <ReadCompressedDataSlab1+0x124>
   1a53c:	cmp	r8, #0
   1a540:	movne	fp, #0
   1a544:	movne	r4, fp
   1a548:	bne	1a5a0 <ReadCompressedDataSlab1+0x2ec>
   1a54c:	mov	r3, r7
   1a550:	mov	r2, r9
   1a554:	str	sl, [sp]
   1a558:	mov	r1, r5
   1a55c:	mov	r0, r6
   1a560:	bl	11680 <ReadCompressedInt32Data>
   1a564:	b	1a390 <ReadCompressedDataSlab1+0xdc>
   1a568:	mov	r3, #1
   1a56c:	add	r2, r9, fp, lsl #2
   1a570:	mov	r1, r5
   1a574:	mov	r0, r6
   1a578:	add	fp, fp, #1
   1a57c:	str	r3, [sp]
   1a580:	mov	r3, r7
   1a584:	bl	11680 <ReadCompressedInt32Data>
   1a588:	add	r4, r4, r0
   1a58c:	mov	r3, r8
   1a590:	mov	r2, r7
   1a594:	mov	r1, r5
   1a598:	mov	r0, r6
   1a59c:	bl	21bc <InflateSkipData>
   1a5a0:	cmp	fp, sl
   1a5a4:	blt	1a568 <ReadCompressedDataSlab1+0x2b4>
   1a5a8:	b	1a3d8 <ReadCompressedDataSlab1+0x124>
   1a5ac:	cmp	r8, #0
   1a5b0:	movne	fp, #0
   1a5b4:	movne	r4, fp
   1a5b8:	bne	1a610 <ReadCompressedDataSlab1+0x35c>
   1a5bc:	mov	r3, r7
   1a5c0:	mov	r2, r9
   1a5c4:	str	sl, [sp]
   1a5c8:	mov	r1, r5
   1a5cc:	mov	r0, r6
   1a5d0:	bl	11b88 <ReadCompressedUInt32Data>
   1a5d4:	b	1a390 <ReadCompressedDataSlab1+0xdc>
   1a5d8:	mov	r3, #1
   1a5dc:	add	r2, r9, fp, lsl #2
   1a5e0:	mov	r1, r5
   1a5e4:	mov	r0, r6
   1a5e8:	add	fp, fp, #1
   1a5ec:	str	r3, [sp]
   1a5f0:	mov	r3, r7
   1a5f4:	bl	11b88 <ReadCompressedUInt32Data>
   1a5f8:	add	r4, r4, r0
   1a5fc:	mov	r3, r8
   1a600:	mov	r2, r7
   1a604:	mov	r1, r5
   1a608:	mov	r0, r6
   1a60c:	bl	21bc <InflateSkipData>
   1a610:	cmp	fp, sl
   1a614:	blt	1a5d8 <ReadCompressedDataSlab1+0x324>
   1a618:	b	1a3d8 <ReadCompressedDataSlab1+0x124>
   1a61c:	cmp	r8, #0
   1a620:	movne	fp, #0
   1a624:	movne	r4, fp
   1a628:	bne	1a680 <ReadCompressedDataSlab1+0x3cc>
   1a62c:	mov	r3, r7
   1a630:	mov	r2, r9
   1a634:	str	sl, [sp]
   1a638:	mov	r1, r5
   1a63c:	mov	r0, r6
   1a640:	bl	12090 <ReadCompressedInt16Data>
   1a644:	b	1a390 <ReadCompressedDataSlab1+0xdc>
   1a648:	mov	r3, #1
   1a64c:	add	r2, r9, fp, lsl #1
   1a650:	mov	r1, r5
   1a654:	mov	r0, r6
   1a658:	add	fp, fp, #1
   1a65c:	str	r3, [sp]
   1a660:	mov	r3, r7
   1a664:	bl	12090 <ReadCompressedInt16Data>
   1a668:	add	r4, r4, r0
   1a66c:	mov	r3, r8
   1a670:	mov	r2, r7
   1a674:	mov	r1, r5
   1a678:	mov	r0, r6
   1a67c:	bl	21bc <InflateSkipData>
   1a680:	cmp	fp, sl
   1a684:	blt	1a648 <ReadCompressedDataSlab1+0x394>
   1a688:	b	1a3d8 <ReadCompressedDataSlab1+0x124>
   1a68c:	cmp	r8, #0
   1a690:	movne	fp, #0
   1a694:	movne	r4, fp
   1a698:	bne	1a6f0 <ReadCompressedDataSlab1+0x43c>
   1a69c:	mov	r3, r7
   1a6a0:	mov	r2, r9
   1a6a4:	str	sl, [sp]
   1a6a8:	mov	r1, r5
   1a6ac:	mov	r0, r6
   1a6b0:	bl	12598 <ReadCompressedUInt16Data>
   1a6b4:	b	1a390 <ReadCompressedDataSlab1+0xdc>
   1a6b8:	mov	r3, #1
   1a6bc:	add	r2, r9, fp, lsl #1
   1a6c0:	mov	r1, r5
   1a6c4:	mov	r0, r6
   1a6c8:	add	fp, fp, #1
   1a6cc:	str	r3, [sp]
   1a6d0:	mov	r3, r7
   1a6d4:	bl	12598 <ReadCompressedUInt16Data>
   1a6d8:	add	r4, r4, r0
   1a6dc:	mov	r3, r8
   1a6e0:	mov	r2, r7
   1a6e4:	mov	r1, r5
   1a6e8:	mov	r0, r6
   1a6ec:	bl	21bc <InflateSkipData>
   1a6f0:	cmp	fp, sl
   1a6f4:	blt	1a6b8 <ReadCompressedDataSlab1+0x404>
   1a6f8:	b	1a3d8 <ReadCompressedDataSlab1+0x124>
   1a6fc:	cmp	r8, #0
   1a700:	movne	fp, #0
   1a704:	movne	r4, fp
   1a708:	bne	1a760 <ReadCompressedDataSlab1+0x4ac>
   1a70c:	mov	r3, r7
   1a710:	mov	r2, r9
   1a714:	str	sl, [sp]
   1a718:	mov	r1, r5
   1a71c:	mov	r0, r6
   1a720:	bl	12aa0 <ReadCompressedInt8Data>
   1a724:	b	1a390 <ReadCompressedDataSlab1+0xdc>
   1a728:	mov	r3, #1
   1a72c:	add	r2, r9, fp
   1a730:	mov	r1, r5
   1a734:	mov	r0, r6
   1a738:	str	r3, [sp]
   1a73c:	mov	r3, r7
   1a740:	add	fp, fp, #1
   1a744:	bl	12aa0 <ReadCompressedInt8Data>
   1a748:	add	r4, r4, r0
   1a74c:	mov	r3, r8
   1a750:	mov	r2, r7
   1a754:	mov	r1, r5
   1a758:	mov	r0, r6
   1a75c:	bl	21bc <InflateSkipData>
   1a760:	cmp	fp, sl
   1a764:	blt	1a728 <ReadCompressedDataSlab1+0x474>
   1a768:	b	1a3d8 <ReadCompressedDataSlab1+0x124>
   1a76c:	cmp	r8, #0
   1a770:	movne	fp, #0
   1a774:	movne	r4, fp
   1a778:	bne	1a7d0 <ReadCompressedDataSlab1+0x51c>
   1a77c:	mov	r3, r7
   1a780:	mov	r2, r9
   1a784:	str	sl, [sp]
   1a788:	mov	r1, r5
   1a78c:	mov	r0, r6
   1a790:	bl	12fa8 <ReadCompressedUInt8Data>
   1a794:	b	1a390 <ReadCompressedDataSlab1+0xdc>
   1a798:	mov	r3, #1
   1a79c:	add	r2, r9, fp
   1a7a0:	mov	r1, r5
   1a7a4:	mov	r0, r6
   1a7a8:	str	r3, [sp]
   1a7ac:	mov	r3, r7
   1a7b0:	add	fp, fp, #1
   1a7b4:	bl	12fa8 <ReadCompressedUInt8Data>
   1a7b8:	add	r4, r4, r0
   1a7bc:	mov	r3, r8
   1a7c0:	mov	r2, r7
   1a7c4:	mov	r1, r5
   1a7c8:	mov	r0, r6
   1a7cc:	bl	21bc <InflateSkipData>
   1a7d0:	cmp	fp, sl
   1a7d4:	blt	1a798 <ReadCompressedDataSlab1+0x4e4>
   1a7d8:	b	1a3d8 <ReadCompressedDataSlab1+0x124>
   1a7dc:	mov	r4, #0
   1a7e0:	b	1a3d8 <ReadCompressedDataSlab1+0x124>

0001a7e4 <ReadCompressedDataSlab2>:
   1a7e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a7e8:	sub	sp, sp, #84	; 0x54
   1a7ec:	mov	sl, r3
   1a7f0:	add	r3, sp, #24
   1a7f4:	mov	r4, r0
   1a7f8:	mov	r6, r2
   1a7fc:	mov	fp, r1
   1a800:	mov	r2, #56	; 0x38
   1a804:	mov	r1, #0
   1a808:	ldr	r5, [sp, #120]	; 0x78
   1a80c:	mov	r0, r3
   1a810:	ldr	r9, [sp, #128]	; 0x80
   1a814:	ldr	r8, [sp, #132]	; 0x84
   1a818:	ldr	r7, [sp, #136]	; 0x88
   1a81c:	bl	15f8 <memset@plt>
   1a820:	cmp	r6, #0
   1a824:	cmpne	r4, #0
   1a828:	beq	1a924 <ReadCompressedDataSlab2+0x140>
   1a82c:	ldr	r2, [r4]
   1a830:	cmp	r2, #0
   1a834:	beq	1a924 <ReadCompressedDataSlab2+0x140>
   1a838:	cmp	r9, #0
   1a83c:	clz	r2, r8
   1a840:	lsr	r2, r2, #5
   1a844:	moveq	r2, #1
   1a848:	cmp	r7, #0
   1a84c:	moveq	r2, #1
   1a850:	cmp	r2, #0
   1a854:	bne	1a924 <ReadCompressedDataSlab2+0x140>
   1a858:	mov	r1, fp
   1a85c:	sub	sl, sl, #6
   1a860:	bl	15bc <inflateCopy@plt>
   1a864:	cmp	sl, #9
   1a868:	addls	pc, pc, sl, lsl #2
   1a86c:	b	1a91c <ReadCompressedDataSlab2+0x138>
   1a870:	b	1a898 <ReadCompressedDataSlab2+0xb4>
   1a874:	b	1aa9c <ReadCompressedDataSlab2+0x2b8>
   1a878:	b	1b848 <ReadCompressedDataSlab2+0x1064>
   1a87c:	b	1ba3c <ReadCompressedDataSlab2+0x1258>
   1a880:	b	1b460 <ReadCompressedDataSlab2+0xc7c>
   1a884:	b	1b654 <ReadCompressedDataSlab2+0xe70>
   1a888:	b	1b078 <ReadCompressedDataSlab2+0x894>
   1a88c:	b	1b26c <ReadCompressedDataSlab2+0xa88>
   1a890:	b	1ac90 <ReadCompressedDataSlab2+0x4ac>
   1a894:	b	1ae84 <ReadCompressedDataSlab2+0x6a0>
   1a898:	ldr	r3, [sp, #124]	; 0x7c
   1a89c:	add	sl, sp, #24
   1a8a0:	mov	r0, r4
   1a8a4:	mov	r1, sl
   1a8a8:	ldr	fp, [r8]
   1a8ac:	ldr	r2, [r8, #4]
   1a8b0:	ldr	r3, [r3]
   1a8b4:	sub	r2, r2, #1
   1a8b8:	mul	r2, r3, r2
   1a8bc:	str	r2, [sp, #16]
   1a8c0:	ldr	r2, [r9, #4]
   1a8c4:	mul	r3, r2, r3
   1a8c8:	mov	r2, r5
   1a8cc:	bl	21bc <InflateSkipData>
   1a8d0:	ldr	r3, [r8]
   1a8d4:	cmp	r3, #1
   1a8d8:	bne	1aa88 <ReadCompressedDataSlab2+0x2a4>
   1a8dc:	ldr	r3, [sp, #124]	; 0x7c
   1a8e0:	ldr	r2, [r7]
   1a8e4:	ldr	r3, [r3]
   1a8e8:	cmp	r2, r3
   1a8ec:	bne	1a9b4 <ReadCompressedDataSlab2+0x1d0>
   1a8f0:	ldr	r3, [r8, #4]
   1a8f4:	cmp	r3, #1
   1a8f8:	bne	1a9b4 <ReadCompressedDataSlab2+0x1d0>
   1a8fc:	ldr	r3, [r7, #4]
   1a900:	mov	r1, sl
   1a904:	mov	r0, r4
   1a908:	mul	r3, r3, r2
   1a90c:	mov	r2, r6
   1a910:	str	r3, [sp]
   1a914:	mov	r3, r5
   1a918:	bl	f58c <ReadCompressedDoubleData>
   1a91c:	add	r0, sp, #24
   1a920:	bl	15b0 <inflateEnd@plt>
   1a924:	mov	r0, #0
   1a928:	add	sp, sp, #84	; 0x54
   1a92c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a930:	mov	r2, r5
   1a934:	mov	r1, fp
   1a938:	ldr	r3, [r9]
   1a93c:	mov	r0, r4
   1a940:	add	sl, sl, #1
   1a944:	bl	21bc <InflateSkipData>
   1a948:	ldr	r3, [r7]
   1a94c:	mov	r2, r6
   1a950:	mov	r1, fp
   1a954:	mov	r0, r4
   1a958:	str	r3, [sp]
   1a95c:	mov	r3, r5
   1a960:	bl	f58c <ReadCompressedDoubleData>
   1a964:	ldr	r1, [sp, #16]
   1a968:	mov	r0, r4
   1a96c:	ldr	r3, [sp, #124]	; 0x7c
   1a970:	ldr	r2, [r7]
   1a974:	ldr	r3, [r3]
   1a978:	add	r6, r6, r2, lsl #3
   1a97c:	sub	r2, r2, #1
   1a980:	sub	r3, r3, #1
   1a984:	add	r3, r3, r1
   1a988:	ldr	r1, [r8]
   1a98c:	mls	r2, r1, r2, r3
   1a990:	ldr	r3, [r9]
   1a994:	mov	r1, fp
   1a998:	sub	r3, r2, r3
   1a99c:	mov	r2, r5
   1a9a0:	bl	21bc <InflateSkipData>
   1a9a4:	ldr	r3, [r7, #4]
   1a9a8:	cmp	r3, sl
   1a9ac:	bgt	1a930 <ReadCompressedDataSlab2+0x14c>
   1a9b0:	b	1a91c <ReadCompressedDataSlab2+0x138>
   1a9b4:	mov	sl, #0
   1a9b8:	add	fp, sp, #24
   1a9bc:	b	1a9a4 <ReadCompressedDataSlab2+0x1c0>
   1a9c0:	mov	r2, r5
   1a9c4:	mov	r1, sl
   1a9c8:	ldr	r3, [r9]
   1a9cc:	mov	r0, r4
   1a9d0:	mov	fp, #0
   1a9d4:	bl	21bc <InflateSkipData>
   1a9d8:	mov	r2, r6
   1a9dc:	ldr	r3, [r7]
   1a9e0:	add	r6, r6, #8
   1a9e4:	mov	r1, sl
   1a9e8:	mov	r0, r4
   1a9ec:	sub	r3, r3, #1
   1a9f0:	cmp	r3, fp
   1a9f4:	mov	r3, #1
   1a9f8:	str	r3, [sp]
   1a9fc:	mov	r3, r5
   1aa00:	bgt	1aa64 <ReadCompressedDataSlab2+0x280>
   1aa04:	bl	f58c <ReadCompressedDoubleData>
   1aa08:	ldr	r2, [sp, #16]
   1aa0c:	mov	r0, r4
   1aa10:	ldr	r3, [sp, #124]	; 0x7c
   1aa14:	ldr	r1, [r8]
   1aa18:	ldr	r3, [r3]
   1aa1c:	sub	r3, r3, #1
   1aa20:	add	r2, r3, r2
   1aa24:	ldr	r3, [r7]
   1aa28:	sub	r3, r3, #1
   1aa2c:	mls	r3, r1, r3, r2
   1aa30:	ldr	r2, [r9]
   1aa34:	mov	r1, sl
   1aa38:	sub	r3, r3, r2
   1aa3c:	mov	r2, r5
   1aa40:	bl	21bc <InflateSkipData>
   1aa44:	ldr	r3, [sp, #12]
   1aa48:	add	r3, r3, #1
   1aa4c:	str	r3, [sp, #12]
   1aa50:	ldr	r3, [r7, #4]
   1aa54:	ldr	r2, [sp, #12]
   1aa58:	cmp	r3, r2
   1aa5c:	bgt	1a9c0 <ReadCompressedDataSlab2+0x1dc>
   1aa60:	b	1a91c <ReadCompressedDataSlab2+0x138>
   1aa64:	bl	f58c <ReadCompressedDoubleData>
   1aa68:	mov	r2, r5
   1aa6c:	mov	r1, sl
   1aa70:	ldr	r3, [sp, #20]
   1aa74:	mov	r0, r4
   1aa78:	add	fp, fp, #1
   1aa7c:	bl	21bc <InflateSkipData>
   1aa80:	mov	r2, r6
   1aa84:	b	1a9dc <ReadCompressedDataSlab2+0x1f8>
   1aa88:	mov	r3, #0
   1aa8c:	str	r3, [sp, #12]
   1aa90:	sub	r3, fp, #1
   1aa94:	str	r3, [sp, #20]
   1aa98:	b	1aa50 <ReadCompressedDataSlab2+0x26c>
   1aa9c:	ldr	r3, [sp, #124]	; 0x7c
   1aaa0:	add	sl, sp, #24
   1aaa4:	mov	r0, r4
   1aaa8:	mov	r1, sl
   1aaac:	ldr	fp, [r8]
   1aab0:	ldr	r2, [r8, #4]
   1aab4:	ldr	r3, [r3]
   1aab8:	sub	r2, r2, #1
   1aabc:	mul	r2, r3, r2
   1aac0:	str	r2, [sp, #16]
   1aac4:	ldr	r2, [r9, #4]
   1aac8:	mul	r3, r2, r3
   1aacc:	mov	r2, r5
   1aad0:	bl	21bc <InflateSkipData>
   1aad4:	ldr	r3, [r8]
   1aad8:	cmp	r3, #1
   1aadc:	bne	1ac7c <ReadCompressedDataSlab2+0x498>
   1aae0:	ldr	r3, [sp, #124]	; 0x7c
   1aae4:	ldr	r2, [r7]
   1aae8:	ldr	r3, [r3]
   1aaec:	cmp	r2, r3
   1aaf0:	bne	1aba8 <ReadCompressedDataSlab2+0x3c4>
   1aaf4:	ldr	r3, [r8, #4]
   1aaf8:	cmp	r3, #1
   1aafc:	bne	1aba8 <ReadCompressedDataSlab2+0x3c4>
   1ab00:	ldr	r3, [r7, #4]
   1ab04:	mov	r1, sl
   1ab08:	mov	r0, r4
   1ab0c:	mul	r3, r3, r2
   1ab10:	mov	r2, r6
   1ab14:	str	r3, [sp]
   1ab18:	mov	r3, r5
   1ab1c:	bl	106f0 <ReadCompressedSingleData>
   1ab20:	b	1a91c <ReadCompressedDataSlab2+0x138>
   1ab24:	mov	r2, r5
   1ab28:	mov	r1, fp
   1ab2c:	ldr	r3, [r9]
   1ab30:	mov	r0, r4
   1ab34:	add	sl, sl, #1
   1ab38:	bl	21bc <InflateSkipData>
   1ab3c:	ldr	r3, [r7]
   1ab40:	mov	r2, r6
   1ab44:	mov	r1, fp
   1ab48:	mov	r0, r4
   1ab4c:	str	r3, [sp]
   1ab50:	mov	r3, r5
   1ab54:	bl	106f0 <ReadCompressedSingleData>
   1ab58:	ldr	r1, [sp, #16]
   1ab5c:	mov	r0, r4
   1ab60:	ldr	r3, [sp, #124]	; 0x7c
   1ab64:	ldr	r2, [r7]
   1ab68:	ldr	r3, [r3]
   1ab6c:	add	r6, r6, r2, lsl #2
   1ab70:	sub	r2, r2, #1
   1ab74:	sub	r3, r3, #1
   1ab78:	add	r3, r3, r1
   1ab7c:	ldr	r1, [r8]
   1ab80:	mls	r2, r1, r2, r3
   1ab84:	ldr	r3, [r9]
   1ab88:	mov	r1, fp
   1ab8c:	sub	r3, r2, r3
   1ab90:	mov	r2, r5
   1ab94:	bl	21bc <InflateSkipData>
   1ab98:	ldr	r3, [r7, #4]
   1ab9c:	cmp	r3, sl
   1aba0:	bgt	1ab24 <ReadCompressedDataSlab2+0x340>
   1aba4:	b	1a91c <ReadCompressedDataSlab2+0x138>
   1aba8:	mov	sl, #0
   1abac:	add	fp, sp, #24
   1abb0:	b	1ab98 <ReadCompressedDataSlab2+0x3b4>
   1abb4:	mov	r2, r5
   1abb8:	mov	r1, sl
   1abbc:	ldr	r3, [r9]
   1abc0:	mov	r0, r4
   1abc4:	mov	fp, #0
   1abc8:	bl	21bc <InflateSkipData>
   1abcc:	mov	r2, r6
   1abd0:	ldr	r3, [r7]
   1abd4:	add	r6, r6, #4
   1abd8:	mov	r1, sl
   1abdc:	mov	r0, r4
   1abe0:	sub	r3, r3, #1
   1abe4:	cmp	r3, fp
   1abe8:	mov	r3, #1
   1abec:	str	r3, [sp]
   1abf0:	mov	r3, r5
   1abf4:	bgt	1ac58 <ReadCompressedDataSlab2+0x474>
   1abf8:	bl	106f0 <ReadCompressedSingleData>
   1abfc:	ldr	r2, [sp, #16]
   1ac00:	mov	r0, r4
   1ac04:	ldr	r3, [sp, #124]	; 0x7c
   1ac08:	ldr	r1, [r8]
   1ac0c:	ldr	r3, [r3]
   1ac10:	sub	r3, r3, #1
   1ac14:	add	r2, r3, r2
   1ac18:	ldr	r3, [r7]
   1ac1c:	sub	r3, r3, #1
   1ac20:	mls	r3, r1, r3, r2
   1ac24:	ldr	r2, [r9]
   1ac28:	mov	r1, sl
   1ac2c:	sub	r3, r3, r2
   1ac30:	mov	r2, r5
   1ac34:	bl	21bc <InflateSkipData>
   1ac38:	ldr	r3, [sp, #12]
   1ac3c:	add	r3, r3, #1
   1ac40:	str	r3, [sp, #12]
   1ac44:	ldr	r3, [r7, #4]
   1ac48:	ldr	r2, [sp, #12]
   1ac4c:	cmp	r3, r2
   1ac50:	bgt	1abb4 <ReadCompressedDataSlab2+0x3d0>
   1ac54:	b	1a91c <ReadCompressedDataSlab2+0x138>
   1ac58:	bl	106f0 <ReadCompressedSingleData>
   1ac5c:	mov	r2, r5
   1ac60:	mov	r1, sl
   1ac64:	ldr	r3, [sp, #20]
   1ac68:	mov	r0, r4
   1ac6c:	add	fp, fp, #1
   1ac70:	bl	21bc <InflateSkipData>
   1ac74:	mov	r2, r6
   1ac78:	b	1abd0 <ReadCompressedDataSlab2+0x3ec>
   1ac7c:	mov	r3, #0
   1ac80:	str	r3, [sp, #12]
   1ac84:	sub	r3, fp, #1
   1ac88:	str	r3, [sp, #20]
   1ac8c:	b	1ac44 <ReadCompressedDataSlab2+0x460>
   1ac90:	ldr	r3, [sp, #124]	; 0x7c
   1ac94:	add	sl, sp, #24
   1ac98:	mov	r0, r4
   1ac9c:	mov	r1, sl
   1aca0:	ldr	fp, [r8]
   1aca4:	ldr	r2, [r8, #4]
   1aca8:	ldr	r3, [r3]
   1acac:	sub	r2, r2, #1
   1acb0:	mul	r2, r3, r2
   1acb4:	str	r2, [sp, #16]
   1acb8:	ldr	r2, [r9, #4]
   1acbc:	mul	r3, r2, r3
   1acc0:	mov	r2, r5
   1acc4:	bl	21bc <InflateSkipData>
   1acc8:	ldr	r3, [r8]
   1accc:	cmp	r3, #1
   1acd0:	bne	1ae70 <ReadCompressedDataSlab2+0x68c>
   1acd4:	ldr	r3, [sp, #124]	; 0x7c
   1acd8:	ldr	r2, [r7]
   1acdc:	ldr	r3, [r3]
   1ace0:	cmp	r2, r3
   1ace4:	bne	1ad9c <ReadCompressedDataSlab2+0x5b8>
   1ace8:	ldr	r3, [r8, #4]
   1acec:	cmp	r3, #1
   1acf0:	bne	1ad9c <ReadCompressedDataSlab2+0x5b8>
   1acf4:	ldr	r3, [r7, #4]
   1acf8:	mov	r1, sl
   1acfc:	mov	r0, r4
   1ad00:	mul	r3, r3, r2
   1ad04:	mov	r2, r6
   1ad08:	str	r3, [sp]
   1ad0c:	mov	r3, r5
   1ad10:	bl	10c10 <ReadCompressedInt64Data>
   1ad14:	b	1a91c <ReadCompressedDataSlab2+0x138>
   1ad18:	mov	r2, r5
   1ad1c:	mov	r1, fp
   1ad20:	ldr	r3, [r9]
   1ad24:	mov	r0, r4
   1ad28:	add	sl, sl, #1
   1ad2c:	bl	21bc <InflateSkipData>
   1ad30:	ldr	r3, [r7]
   1ad34:	mov	r2, r6
   1ad38:	mov	r1, fp
   1ad3c:	mov	r0, r4
   1ad40:	str	r3, [sp]
   1ad44:	mov	r3, r5
   1ad48:	bl	10c10 <ReadCompressedInt64Data>
   1ad4c:	ldr	r1, [sp, #16]
   1ad50:	mov	r0, r4
   1ad54:	ldr	r3, [sp, #124]	; 0x7c
   1ad58:	ldr	r2, [r7]
   1ad5c:	ldr	r3, [r3]
   1ad60:	add	r6, r6, r2, lsl #3
   1ad64:	sub	r2, r2, #1
   1ad68:	sub	r3, r3, #1
   1ad6c:	add	r3, r3, r1
   1ad70:	ldr	r1, [r8]
   1ad74:	mls	r2, r1, r2, r3
   1ad78:	ldr	r3, [r9]
   1ad7c:	mov	r1, fp
   1ad80:	sub	r3, r2, r3
   1ad84:	mov	r2, r5
   1ad88:	bl	21bc <InflateSkipData>
   1ad8c:	ldr	r3, [r7, #4]
   1ad90:	cmp	r3, sl
   1ad94:	bgt	1ad18 <ReadCompressedDataSlab2+0x534>
   1ad98:	b	1a91c <ReadCompressedDataSlab2+0x138>
   1ad9c:	mov	sl, #0
   1ada0:	add	fp, sp, #24
   1ada4:	b	1ad8c <ReadCompressedDataSlab2+0x5a8>
   1ada8:	mov	r2, r5
   1adac:	mov	r1, sl
   1adb0:	ldr	r3, [r9]
   1adb4:	mov	r0, r4
   1adb8:	mov	fp, #0
   1adbc:	bl	21bc <InflateSkipData>
   1adc0:	mov	r2, r6
   1adc4:	ldr	r3, [r7]
   1adc8:	add	r6, r6, #8
   1adcc:	mov	r1, sl
   1add0:	mov	r0, r4
   1add4:	sub	r3, r3, #1
   1add8:	cmp	r3, fp
   1addc:	mov	r3, #1
   1ade0:	str	r3, [sp]
   1ade4:	mov	r3, r5
   1ade8:	bgt	1ae4c <ReadCompressedDataSlab2+0x668>
   1adec:	bl	10c10 <ReadCompressedInt64Data>
   1adf0:	ldr	r2, [sp, #16]
   1adf4:	mov	r0, r4
   1adf8:	ldr	r3, [sp, #124]	; 0x7c
   1adfc:	ldr	r1, [r8]
   1ae00:	ldr	r3, [r3]
   1ae04:	sub	r3, r3, #1
   1ae08:	add	r2, r3, r2
   1ae0c:	ldr	r3, [r7]
   1ae10:	sub	r3, r3, #1
   1ae14:	mls	r3, r1, r3, r2
   1ae18:	ldr	r2, [r9]
   1ae1c:	mov	r1, sl
   1ae20:	sub	r3, r3, r2
   1ae24:	mov	r2, r5
   1ae28:	bl	21bc <InflateSkipData>
   1ae2c:	ldr	r3, [sp, #12]
   1ae30:	add	r3, r3, #1
   1ae34:	str	r3, [sp, #12]
   1ae38:	ldr	r3, [r7, #4]
   1ae3c:	ldr	r2, [sp, #12]
   1ae40:	cmp	r3, r2
   1ae44:	bgt	1ada8 <ReadCompressedDataSlab2+0x5c4>
   1ae48:	b	1a91c <ReadCompressedDataSlab2+0x138>
   1ae4c:	bl	10c10 <ReadCompressedInt64Data>
   1ae50:	mov	r2, r5
   1ae54:	mov	r1, sl
   1ae58:	ldr	r3, [sp, #20]
   1ae5c:	mov	r0, r4
   1ae60:	add	fp, fp, #1
   1ae64:	bl	21bc <InflateSkipData>
   1ae68:	mov	r2, r6
   1ae6c:	b	1adc4 <ReadCompressedDataSlab2+0x5e0>
   1ae70:	mov	r3, #0
   1ae74:	str	r3, [sp, #12]
   1ae78:	sub	r3, fp, #1
   1ae7c:	str	r3, [sp, #20]
   1ae80:	b	1ae38 <ReadCompressedDataSlab2+0x654>
   1ae84:	ldr	r3, [sp, #124]	; 0x7c
   1ae88:	add	sl, sp, #24
   1ae8c:	mov	r0, r4
   1ae90:	mov	r1, sl
   1ae94:	ldr	fp, [r8]
   1ae98:	ldr	r2, [r8, #4]
   1ae9c:	ldr	r3, [r3]
   1aea0:	sub	r2, r2, #1
   1aea4:	mul	r2, r3, r2
   1aea8:	str	r2, [sp, #16]
   1aeac:	ldr	r2, [r9, #4]
   1aeb0:	mul	r3, r2, r3
   1aeb4:	mov	r2, r5
   1aeb8:	bl	21bc <InflateSkipData>
   1aebc:	ldr	r3, [r8]
   1aec0:	cmp	r3, #1
   1aec4:	bne	1b064 <ReadCompressedDataSlab2+0x880>
   1aec8:	ldr	r3, [sp, #124]	; 0x7c
   1aecc:	ldr	r2, [r7]
   1aed0:	ldr	r3, [r3]
   1aed4:	cmp	r2, r3
   1aed8:	bne	1af90 <ReadCompressedDataSlab2+0x7ac>
   1aedc:	ldr	r3, [r8, #4]
   1aee0:	cmp	r3, #1
   1aee4:	bne	1af90 <ReadCompressedDataSlab2+0x7ac>
   1aee8:	ldr	r3, [r7, #4]
   1aeec:	mov	r1, sl
   1aef0:	mov	r0, r4
   1aef4:	mul	r3, r3, r2
   1aef8:	mov	r2, r6
   1aefc:	str	r3, [sp]
   1af00:	mov	r3, r5
   1af04:	bl	11148 <ReadCompressedUInt64Data>
   1af08:	b	1a91c <ReadCompressedDataSlab2+0x138>
   1af0c:	mov	r2, r5
   1af10:	mov	r1, fp
   1af14:	ldr	r3, [r9]
   1af18:	mov	r0, r4
   1af1c:	add	sl, sl, #1
   1af20:	bl	21bc <InflateSkipData>
   1af24:	ldr	r3, [r7]
   1af28:	mov	r2, r6
   1af2c:	mov	r1, fp
   1af30:	mov	r0, r4
   1af34:	str	r3, [sp]
   1af38:	mov	r3, r5
   1af3c:	bl	11148 <ReadCompressedUInt64Data>
   1af40:	ldr	r1, [sp, #16]
   1af44:	mov	r0, r4
   1af48:	ldr	r3, [sp, #124]	; 0x7c
   1af4c:	ldr	r2, [r7]
   1af50:	ldr	r3, [r3]
   1af54:	add	r6, r6, r2, lsl #3
   1af58:	sub	r2, r2, #1
   1af5c:	sub	r3, r3, #1
   1af60:	add	r3, r3, r1
   1af64:	ldr	r1, [r8]
   1af68:	mls	r2, r1, r2, r3
   1af6c:	ldr	r3, [r9]
   1af70:	mov	r1, fp
   1af74:	sub	r3, r2, r3
   1af78:	mov	r2, r5
   1af7c:	bl	21bc <InflateSkipData>
   1af80:	ldr	r3, [r7, #4]
   1af84:	cmp	r3, sl
   1af88:	bgt	1af0c <ReadCompressedDataSlab2+0x728>
   1af8c:	b	1a91c <ReadCompressedDataSlab2+0x138>
   1af90:	mov	sl, #0
   1af94:	add	fp, sp, #24
   1af98:	b	1af80 <ReadCompressedDataSlab2+0x79c>
   1af9c:	mov	r2, r5
   1afa0:	mov	r1, sl
   1afa4:	ldr	r3, [r9]
   1afa8:	mov	r0, r4
   1afac:	mov	fp, #0
   1afb0:	bl	21bc <InflateSkipData>
   1afb4:	mov	r2, r6
   1afb8:	ldr	r3, [r7]
   1afbc:	add	r6, r6, #8
   1afc0:	mov	r1, sl
   1afc4:	mov	r0, r4
   1afc8:	sub	r3, r3, #1
   1afcc:	cmp	r3, fp
   1afd0:	mov	r3, #1
   1afd4:	str	r3, [sp]
   1afd8:	mov	r3, r5
   1afdc:	bgt	1b040 <ReadCompressedDataSlab2+0x85c>
   1afe0:	bl	11148 <ReadCompressedUInt64Data>
   1afe4:	ldr	r2, [sp, #16]
   1afe8:	mov	r0, r4
   1afec:	ldr	r3, [sp, #124]	; 0x7c
   1aff0:	ldr	r1, [r8]
   1aff4:	ldr	r3, [r3]
   1aff8:	sub	r3, r3, #1
   1affc:	add	r2, r3, r2
   1b000:	ldr	r3, [r7]
   1b004:	sub	r3, r3, #1
   1b008:	mls	r3, r1, r3, r2
   1b00c:	ldr	r2, [r9]
   1b010:	mov	r1, sl
   1b014:	sub	r3, r3, r2
   1b018:	mov	r2, r5
   1b01c:	bl	21bc <InflateSkipData>
   1b020:	ldr	r3, [sp, #12]
   1b024:	add	r3, r3, #1
   1b028:	str	r3, [sp, #12]
   1b02c:	ldr	r3, [r7, #4]
   1b030:	ldr	r2, [sp, #12]
   1b034:	cmp	r3, r2
   1b038:	bgt	1af9c <ReadCompressedDataSlab2+0x7b8>
   1b03c:	b	1a91c <ReadCompressedDataSlab2+0x138>
   1b040:	bl	11148 <ReadCompressedUInt64Data>
   1b044:	mov	r2, r5
   1b048:	mov	r1, sl
   1b04c:	ldr	r3, [sp, #20]
   1b050:	mov	r0, r4
   1b054:	add	fp, fp, #1
   1b058:	bl	21bc <InflateSkipData>
   1b05c:	mov	r2, r6
   1b060:	b	1afb8 <ReadCompressedDataSlab2+0x7d4>
   1b064:	mov	r3, #0
   1b068:	str	r3, [sp, #12]
   1b06c:	sub	r3, fp, #1
   1b070:	str	r3, [sp, #20]
   1b074:	b	1b02c <ReadCompressedDataSlab2+0x848>
   1b078:	ldr	r3, [sp, #124]	; 0x7c
   1b07c:	add	sl, sp, #24
   1b080:	mov	r0, r4
   1b084:	mov	r1, sl
   1b088:	ldr	fp, [r8]
   1b08c:	ldr	r2, [r8, #4]
   1b090:	ldr	r3, [r3]
   1b094:	sub	r2, r2, #1
   1b098:	mul	r2, r3, r2
   1b09c:	str	r2, [sp, #16]
   1b0a0:	ldr	r2, [r9, #4]
   1b0a4:	mul	r3, r2, r3
   1b0a8:	mov	r2, r5
   1b0ac:	bl	21bc <InflateSkipData>
   1b0b0:	ldr	r3, [r8]
   1b0b4:	cmp	r3, #1
   1b0b8:	bne	1b258 <ReadCompressedDataSlab2+0xa74>
   1b0bc:	ldr	r3, [sp, #124]	; 0x7c
   1b0c0:	ldr	r2, [r7]
   1b0c4:	ldr	r3, [r3]
   1b0c8:	cmp	r2, r3
   1b0cc:	bne	1b184 <ReadCompressedDataSlab2+0x9a0>
   1b0d0:	ldr	r3, [r8, #4]
   1b0d4:	cmp	r3, #1
   1b0d8:	bne	1b184 <ReadCompressedDataSlab2+0x9a0>
   1b0dc:	ldr	r3, [r7, #4]
   1b0e0:	mov	r1, sl
   1b0e4:	mov	r0, r4
   1b0e8:	mul	r3, r3, r2
   1b0ec:	mov	r2, r6
   1b0f0:	str	r3, [sp]
   1b0f4:	mov	r3, r5
   1b0f8:	bl	11680 <ReadCompressedInt32Data>
   1b0fc:	b	1a91c <ReadCompressedDataSlab2+0x138>
   1b100:	mov	r2, r5
   1b104:	mov	r1, fp
   1b108:	ldr	r3, [r9]
   1b10c:	mov	r0, r4
   1b110:	add	sl, sl, #1
   1b114:	bl	21bc <InflateSkipData>
   1b118:	ldr	r3, [r7]
   1b11c:	mov	r2, r6
   1b120:	mov	r1, fp
   1b124:	mov	r0, r4
   1b128:	str	r3, [sp]
   1b12c:	mov	r3, r5
   1b130:	bl	11680 <ReadCompressedInt32Data>
   1b134:	ldr	r1, [sp, #16]
   1b138:	mov	r0, r4
   1b13c:	ldr	r3, [sp, #124]	; 0x7c
   1b140:	ldr	r2, [r7]
   1b144:	ldr	r3, [r3]
   1b148:	add	r6, r6, r2, lsl #2
   1b14c:	sub	r2, r2, #1
   1b150:	sub	r3, r3, #1
   1b154:	add	r3, r3, r1
   1b158:	ldr	r1, [r8]
   1b15c:	mls	r2, r1, r2, r3
   1b160:	ldr	r3, [r9]
   1b164:	mov	r1, fp
   1b168:	sub	r3, r2, r3
   1b16c:	mov	r2, r5
   1b170:	bl	21bc <InflateSkipData>
   1b174:	ldr	r3, [r7, #4]
   1b178:	cmp	r3, sl
   1b17c:	bgt	1b100 <ReadCompressedDataSlab2+0x91c>
   1b180:	b	1a91c <ReadCompressedDataSlab2+0x138>
   1b184:	mov	sl, #0
   1b188:	add	fp, sp, #24
   1b18c:	b	1b174 <ReadCompressedDataSlab2+0x990>
   1b190:	mov	r2, r5
   1b194:	mov	r1, sl
   1b198:	ldr	r3, [r9]
   1b19c:	mov	r0, r4
   1b1a0:	mov	fp, #0
   1b1a4:	bl	21bc <InflateSkipData>
   1b1a8:	mov	r2, r6
   1b1ac:	ldr	r3, [r7]
   1b1b0:	add	r6, r6, #4
   1b1b4:	mov	r1, sl
   1b1b8:	mov	r0, r4
   1b1bc:	sub	r3, r3, #1
   1b1c0:	cmp	r3, fp
   1b1c4:	mov	r3, #1
   1b1c8:	str	r3, [sp]
   1b1cc:	mov	r3, r5
   1b1d0:	bgt	1b234 <ReadCompressedDataSlab2+0xa50>
   1b1d4:	bl	11680 <ReadCompressedInt32Data>
   1b1d8:	ldr	r2, [sp, #16]
   1b1dc:	mov	r0, r4
   1b1e0:	ldr	r3, [sp, #124]	; 0x7c
   1b1e4:	ldr	r1, [r8]
   1b1e8:	ldr	r3, [r3]
   1b1ec:	sub	r3, r3, #1
   1b1f0:	add	r2, r3, r2
   1b1f4:	ldr	r3, [r7]
   1b1f8:	sub	r3, r3, #1
   1b1fc:	mls	r3, r1, r3, r2
   1b200:	ldr	r2, [r9]
   1b204:	mov	r1, sl
   1b208:	sub	r3, r3, r2
   1b20c:	mov	r2, r5
   1b210:	bl	21bc <InflateSkipData>
   1b214:	ldr	r3, [sp, #12]
   1b218:	add	r3, r3, #1
   1b21c:	str	r3, [sp, #12]
   1b220:	ldr	r3, [r7, #4]
   1b224:	ldr	r2, [sp, #12]
   1b228:	cmp	r3, r2
   1b22c:	bgt	1b190 <ReadCompressedDataSlab2+0x9ac>
   1b230:	b	1a91c <ReadCompressedDataSlab2+0x138>
   1b234:	bl	11680 <ReadCompressedInt32Data>
   1b238:	mov	r2, r5
   1b23c:	mov	r1, sl
   1b240:	ldr	r3, [sp, #20]
   1b244:	mov	r0, r4
   1b248:	add	fp, fp, #1
   1b24c:	bl	21bc <InflateSkipData>
   1b250:	mov	r2, r6
   1b254:	b	1b1ac <ReadCompressedDataSlab2+0x9c8>
   1b258:	mov	r3, #0
   1b25c:	str	r3, [sp, #12]
   1b260:	sub	r3, fp, #1
   1b264:	str	r3, [sp, #20]
   1b268:	b	1b220 <ReadCompressedDataSlab2+0xa3c>
   1b26c:	ldr	r3, [sp, #124]	; 0x7c
   1b270:	add	sl, sp, #24
   1b274:	mov	r0, r4
   1b278:	mov	r1, sl
   1b27c:	ldr	fp, [r8]
   1b280:	ldr	r2, [r8, #4]
   1b284:	ldr	r3, [r3]
   1b288:	sub	r2, r2, #1
   1b28c:	mul	r2, r3, r2
   1b290:	str	r2, [sp, #16]
   1b294:	ldr	r2, [r9, #4]
   1b298:	mul	r3, r2, r3
   1b29c:	mov	r2, r5
   1b2a0:	bl	21bc <InflateSkipData>
   1b2a4:	ldr	r3, [r8]
   1b2a8:	cmp	r3, #1
   1b2ac:	bne	1b44c <ReadCompressedDataSlab2+0xc68>
   1b2b0:	ldr	r3, [sp, #124]	; 0x7c
   1b2b4:	ldr	r2, [r7]
   1b2b8:	ldr	r3, [r3]
   1b2bc:	cmp	r2, r3
   1b2c0:	bne	1b378 <ReadCompressedDataSlab2+0xb94>
   1b2c4:	ldr	r3, [r8, #4]
   1b2c8:	cmp	r3, #1
   1b2cc:	bne	1b378 <ReadCompressedDataSlab2+0xb94>
   1b2d0:	ldr	r3, [r7, #4]
   1b2d4:	mov	r1, sl
   1b2d8:	mov	r0, r4
   1b2dc:	mul	r3, r3, r2
   1b2e0:	mov	r2, r6
   1b2e4:	str	r3, [sp]
   1b2e8:	mov	r3, r5
   1b2ec:	bl	11b88 <ReadCompressedUInt32Data>
   1b2f0:	b	1a91c <ReadCompressedDataSlab2+0x138>
   1b2f4:	mov	r2, r5
   1b2f8:	mov	r1, fp
   1b2fc:	ldr	r3, [r9]
   1b300:	mov	r0, r4
   1b304:	add	sl, sl, #1
   1b308:	bl	21bc <InflateSkipData>
   1b30c:	ldr	r3, [r7]
   1b310:	mov	r2, r6
   1b314:	mov	r1, fp
   1b318:	mov	r0, r4
   1b31c:	str	r3, [sp]
   1b320:	mov	r3, r5
   1b324:	bl	11b88 <ReadCompressedUInt32Data>
   1b328:	ldr	r1, [sp, #16]
   1b32c:	mov	r0, r4
   1b330:	ldr	r3, [sp, #124]	; 0x7c
   1b334:	ldr	r2, [r7]
   1b338:	ldr	r3, [r3]
   1b33c:	add	r6, r6, r2, lsl #2
   1b340:	sub	r2, r2, #1
   1b344:	sub	r3, r3, #1
   1b348:	add	r3, r3, r1
   1b34c:	ldr	r1, [r8]
   1b350:	mls	r2, r1, r2, r3
   1b354:	ldr	r3, [r9]
   1b358:	mov	r1, fp
   1b35c:	sub	r3, r2, r3
   1b360:	mov	r2, r5
   1b364:	bl	21bc <InflateSkipData>
   1b368:	ldr	r3, [r7, #4]
   1b36c:	cmp	r3, sl
   1b370:	bgt	1b2f4 <ReadCompressedDataSlab2+0xb10>
   1b374:	b	1a91c <ReadCompressedDataSlab2+0x138>
   1b378:	mov	sl, #0
   1b37c:	add	fp, sp, #24
   1b380:	b	1b368 <ReadCompressedDataSlab2+0xb84>
   1b384:	mov	r2, r5
   1b388:	mov	r1, sl
   1b38c:	ldr	r3, [r9]
   1b390:	mov	r0, r4
   1b394:	mov	fp, #0
   1b398:	bl	21bc <InflateSkipData>
   1b39c:	mov	r2, r6
   1b3a0:	ldr	r3, [r7]
   1b3a4:	add	r6, r6, #4
   1b3a8:	mov	r1, sl
   1b3ac:	mov	r0, r4
   1b3b0:	sub	r3, r3, #1
   1b3b4:	cmp	r3, fp
   1b3b8:	mov	r3, #1
   1b3bc:	str	r3, [sp]
   1b3c0:	mov	r3, r5
   1b3c4:	bgt	1b428 <ReadCompressedDataSlab2+0xc44>
   1b3c8:	bl	11b88 <ReadCompressedUInt32Data>
   1b3cc:	ldr	r2, [sp, #16]
   1b3d0:	mov	r0, r4
   1b3d4:	ldr	r3, [sp, #124]	; 0x7c
   1b3d8:	ldr	r1, [r8]
   1b3dc:	ldr	r3, [r3]
   1b3e0:	sub	r3, r3, #1
   1b3e4:	add	r2, r3, r2
   1b3e8:	ldr	r3, [r7]
   1b3ec:	sub	r3, r3, #1
   1b3f0:	mls	r3, r1, r3, r2
   1b3f4:	ldr	r2, [r9]
   1b3f8:	mov	r1, sl
   1b3fc:	sub	r3, r3, r2
   1b400:	mov	r2, r5
   1b404:	bl	21bc <InflateSkipData>
   1b408:	ldr	r3, [sp, #12]
   1b40c:	add	r3, r3, #1
   1b410:	str	r3, [sp, #12]
   1b414:	ldr	r3, [r7, #4]
   1b418:	ldr	r2, [sp, #12]
   1b41c:	cmp	r3, r2
   1b420:	bgt	1b384 <ReadCompressedDataSlab2+0xba0>
   1b424:	b	1a91c <ReadCompressedDataSlab2+0x138>
   1b428:	bl	11b88 <ReadCompressedUInt32Data>
   1b42c:	mov	r2, r5
   1b430:	mov	r1, sl
   1b434:	ldr	r3, [sp, #20]
   1b438:	mov	r0, r4
   1b43c:	add	fp, fp, #1
   1b440:	bl	21bc <InflateSkipData>
   1b444:	mov	r2, r6
   1b448:	b	1b3a0 <ReadCompressedDataSlab2+0xbbc>
   1b44c:	mov	r3, #0
   1b450:	str	r3, [sp, #12]
   1b454:	sub	r3, fp, #1
   1b458:	str	r3, [sp, #20]
   1b45c:	b	1b414 <ReadCompressedDataSlab2+0xc30>
   1b460:	ldr	r3, [sp, #124]	; 0x7c
   1b464:	add	sl, sp, #24
   1b468:	mov	r0, r4
   1b46c:	mov	r1, sl
   1b470:	ldr	fp, [r8]
   1b474:	ldr	r2, [r8, #4]
   1b478:	ldr	r3, [r3]
   1b47c:	sub	r2, r2, #1
   1b480:	mul	r2, r3, r2
   1b484:	str	r2, [sp, #16]
   1b488:	ldr	r2, [r9, #4]
   1b48c:	mul	r3, r2, r3
   1b490:	mov	r2, r5
   1b494:	bl	21bc <InflateSkipData>
   1b498:	ldr	r3, [r8]
   1b49c:	cmp	r3, #1
   1b4a0:	bne	1b640 <ReadCompressedDataSlab2+0xe5c>
   1b4a4:	ldr	r3, [sp, #124]	; 0x7c
   1b4a8:	ldr	r2, [r7]
   1b4ac:	ldr	r3, [r3]
   1b4b0:	cmp	r2, r3
   1b4b4:	bne	1b56c <ReadCompressedDataSlab2+0xd88>
   1b4b8:	ldr	r3, [r8, #4]
   1b4bc:	cmp	r3, #1
   1b4c0:	bne	1b56c <ReadCompressedDataSlab2+0xd88>
   1b4c4:	ldr	r3, [r7, #4]
   1b4c8:	mov	r1, sl
   1b4cc:	mov	r0, r4
   1b4d0:	mul	r3, r3, r2
   1b4d4:	mov	r2, r6
   1b4d8:	str	r3, [sp]
   1b4dc:	mov	r3, r5
   1b4e0:	bl	12090 <ReadCompressedInt16Data>
   1b4e4:	b	1a91c <ReadCompressedDataSlab2+0x138>
   1b4e8:	mov	r2, r5
   1b4ec:	mov	r1, fp
   1b4f0:	ldr	r3, [r9]
   1b4f4:	mov	r0, r4
   1b4f8:	add	sl, sl, #1
   1b4fc:	bl	21bc <InflateSkipData>
   1b500:	ldr	r3, [r7]
   1b504:	mov	r2, r6
   1b508:	mov	r1, fp
   1b50c:	mov	r0, r4
   1b510:	str	r3, [sp]
   1b514:	mov	r3, r5
   1b518:	bl	12090 <ReadCompressedInt16Data>
   1b51c:	ldr	r1, [sp, #16]
   1b520:	mov	r0, r4
   1b524:	ldr	r3, [sp, #124]	; 0x7c
   1b528:	ldr	r2, [r7]
   1b52c:	ldr	r3, [r3]
   1b530:	add	r6, r6, r2, lsl #1
   1b534:	sub	r2, r2, #1
   1b538:	sub	r3, r3, #1
   1b53c:	add	r3, r3, r1
   1b540:	ldr	r1, [r8]
   1b544:	mls	r2, r1, r2, r3
   1b548:	ldr	r3, [r9]
   1b54c:	mov	r1, fp
   1b550:	sub	r3, r2, r3
   1b554:	mov	r2, r5
   1b558:	bl	21bc <InflateSkipData>
   1b55c:	ldr	r3, [r7, #4]
   1b560:	cmp	r3, sl
   1b564:	bgt	1b4e8 <ReadCompressedDataSlab2+0xd04>
   1b568:	b	1a91c <ReadCompressedDataSlab2+0x138>
   1b56c:	mov	sl, #0
   1b570:	add	fp, sp, #24
   1b574:	b	1b55c <ReadCompressedDataSlab2+0xd78>
   1b578:	mov	r2, r5
   1b57c:	mov	r1, sl
   1b580:	ldr	r3, [r9]
   1b584:	mov	r0, r4
   1b588:	mov	fp, #0
   1b58c:	bl	21bc <InflateSkipData>
   1b590:	mov	r2, r6
   1b594:	ldr	r3, [r7]
   1b598:	add	r6, r6, #2
   1b59c:	mov	r1, sl
   1b5a0:	mov	r0, r4
   1b5a4:	sub	r3, r3, #1
   1b5a8:	cmp	r3, fp
   1b5ac:	mov	r3, #1
   1b5b0:	str	r3, [sp]
   1b5b4:	mov	r3, r5
   1b5b8:	bgt	1b61c <ReadCompressedDataSlab2+0xe38>
   1b5bc:	bl	12090 <ReadCompressedInt16Data>
   1b5c0:	ldr	r2, [sp, #16]
   1b5c4:	mov	r0, r4
   1b5c8:	ldr	r3, [sp, #124]	; 0x7c
   1b5cc:	ldr	r1, [r8]
   1b5d0:	ldr	r3, [r3]
   1b5d4:	sub	r3, r3, #1
   1b5d8:	add	r2, r3, r2
   1b5dc:	ldr	r3, [r7]
   1b5e0:	sub	r3, r3, #1
   1b5e4:	mls	r3, r1, r3, r2
   1b5e8:	ldr	r2, [r9]
   1b5ec:	mov	r1, sl
   1b5f0:	sub	r3, r3, r2
   1b5f4:	mov	r2, r5
   1b5f8:	bl	21bc <InflateSkipData>
   1b5fc:	ldr	r3, [sp, #12]
   1b600:	add	r3, r3, #1
   1b604:	str	r3, [sp, #12]
   1b608:	ldr	r3, [r7, #4]
   1b60c:	ldr	r2, [sp, #12]
   1b610:	cmp	r3, r2
   1b614:	bgt	1b578 <ReadCompressedDataSlab2+0xd94>
   1b618:	b	1a91c <ReadCompressedDataSlab2+0x138>
   1b61c:	bl	12090 <ReadCompressedInt16Data>
   1b620:	mov	r2, r5
   1b624:	mov	r1, sl
   1b628:	ldr	r3, [sp, #20]
   1b62c:	mov	r0, r4
   1b630:	add	fp, fp, #1
   1b634:	bl	21bc <InflateSkipData>
   1b638:	mov	r2, r6
   1b63c:	b	1b594 <ReadCompressedDataSlab2+0xdb0>
   1b640:	mov	r3, #0
   1b644:	str	r3, [sp, #12]
   1b648:	sub	r3, fp, #1
   1b64c:	str	r3, [sp, #20]
   1b650:	b	1b608 <ReadCompressedDataSlab2+0xe24>
   1b654:	ldr	r3, [sp, #124]	; 0x7c
   1b658:	add	sl, sp, #24
   1b65c:	mov	r0, r4
   1b660:	mov	r1, sl
   1b664:	ldr	fp, [r8]
   1b668:	ldr	r2, [r8, #4]
   1b66c:	ldr	r3, [r3]
   1b670:	sub	r2, r2, #1
   1b674:	mul	r2, r3, r2
   1b678:	str	r2, [sp, #16]
   1b67c:	ldr	r2, [r9, #4]
   1b680:	mul	r3, r2, r3
   1b684:	mov	r2, r5
   1b688:	bl	21bc <InflateSkipData>
   1b68c:	ldr	r3, [r8]
   1b690:	cmp	r3, #1
   1b694:	bne	1b834 <ReadCompressedDataSlab2+0x1050>
   1b698:	ldr	r3, [sp, #124]	; 0x7c
   1b69c:	ldr	r2, [r7]
   1b6a0:	ldr	r3, [r3]
   1b6a4:	cmp	r2, r3
   1b6a8:	bne	1b760 <ReadCompressedDataSlab2+0xf7c>
   1b6ac:	ldr	r3, [r8, #4]
   1b6b0:	cmp	r3, #1
   1b6b4:	bne	1b760 <ReadCompressedDataSlab2+0xf7c>
   1b6b8:	ldr	r3, [r7, #4]
   1b6bc:	mov	r1, sl
   1b6c0:	mov	r0, r4
   1b6c4:	mul	r3, r3, r2
   1b6c8:	mov	r2, r6
   1b6cc:	str	r3, [sp]
   1b6d0:	mov	r3, r5
   1b6d4:	bl	12598 <ReadCompressedUInt16Data>
   1b6d8:	b	1a91c <ReadCompressedDataSlab2+0x138>
   1b6dc:	mov	r2, r5
   1b6e0:	mov	r1, fp
   1b6e4:	ldr	r3, [r9]
   1b6e8:	mov	r0, r4
   1b6ec:	add	sl, sl, #1
   1b6f0:	bl	21bc <InflateSkipData>
   1b6f4:	ldr	r3, [r7]
   1b6f8:	mov	r2, r6
   1b6fc:	mov	r1, fp
   1b700:	mov	r0, r4
   1b704:	str	r3, [sp]
   1b708:	mov	r3, r5
   1b70c:	bl	12598 <ReadCompressedUInt16Data>
   1b710:	ldr	r1, [sp, #16]
   1b714:	mov	r0, r4
   1b718:	ldr	r3, [sp, #124]	; 0x7c
   1b71c:	ldr	r2, [r7]
   1b720:	ldr	r3, [r3]
   1b724:	add	r6, r6, r2, lsl #1
   1b728:	sub	r2, r2, #1
   1b72c:	sub	r3, r3, #1
   1b730:	add	r3, r3, r1
   1b734:	ldr	r1, [r8]
   1b738:	mls	r2, r1, r2, r3
   1b73c:	ldr	r3, [r9]
   1b740:	mov	r1, fp
   1b744:	sub	r3, r2, r3
   1b748:	mov	r2, r5
   1b74c:	bl	21bc <InflateSkipData>
   1b750:	ldr	r3, [r7, #4]
   1b754:	cmp	r3, sl
   1b758:	bgt	1b6dc <ReadCompressedDataSlab2+0xef8>
   1b75c:	b	1a91c <ReadCompressedDataSlab2+0x138>
   1b760:	mov	sl, #0
   1b764:	add	fp, sp, #24
   1b768:	b	1b750 <ReadCompressedDataSlab2+0xf6c>
   1b76c:	mov	r2, r5
   1b770:	mov	r1, sl
   1b774:	ldr	r3, [r9]
   1b778:	mov	r0, r4
   1b77c:	mov	fp, #0
   1b780:	bl	21bc <InflateSkipData>
   1b784:	mov	r2, r6
   1b788:	ldr	r3, [r7]
   1b78c:	add	r6, r6, #2
   1b790:	mov	r1, sl
   1b794:	mov	r0, r4
   1b798:	sub	r3, r3, #1
   1b79c:	cmp	r3, fp
   1b7a0:	mov	r3, #1
   1b7a4:	str	r3, [sp]
   1b7a8:	mov	r3, r5
   1b7ac:	bgt	1b810 <ReadCompressedDataSlab2+0x102c>
   1b7b0:	bl	12598 <ReadCompressedUInt16Data>
   1b7b4:	ldr	r2, [sp, #16]
   1b7b8:	mov	r0, r4
   1b7bc:	ldr	r3, [sp, #124]	; 0x7c
   1b7c0:	ldr	r1, [r8]
   1b7c4:	ldr	r3, [r3]
   1b7c8:	sub	r3, r3, #1
   1b7cc:	add	r2, r3, r2
   1b7d0:	ldr	r3, [r7]
   1b7d4:	sub	r3, r3, #1
   1b7d8:	mls	r3, r1, r3, r2
   1b7dc:	ldr	r2, [r9]
   1b7e0:	mov	r1, sl
   1b7e4:	sub	r3, r3, r2
   1b7e8:	mov	r2, r5
   1b7ec:	bl	21bc <InflateSkipData>
   1b7f0:	ldr	r3, [sp, #12]
   1b7f4:	add	r3, r3, #1
   1b7f8:	str	r3, [sp, #12]
   1b7fc:	ldr	r3, [r7, #4]
   1b800:	ldr	r2, [sp, #12]
   1b804:	cmp	r3, r2
   1b808:	bgt	1b76c <ReadCompressedDataSlab2+0xf88>
   1b80c:	b	1a91c <ReadCompressedDataSlab2+0x138>
   1b810:	bl	12598 <ReadCompressedUInt16Data>
   1b814:	mov	r2, r5
   1b818:	mov	r1, sl
   1b81c:	ldr	r3, [sp, #20]
   1b820:	mov	r0, r4
   1b824:	add	fp, fp, #1
   1b828:	bl	21bc <InflateSkipData>
   1b82c:	mov	r2, r6
   1b830:	b	1b788 <ReadCompressedDataSlab2+0xfa4>
   1b834:	mov	r3, #0
   1b838:	str	r3, [sp, #12]
   1b83c:	sub	r3, fp, #1
   1b840:	str	r3, [sp, #20]
   1b844:	b	1b7fc <ReadCompressedDataSlab2+0x1018>
   1b848:	ldr	r3, [sp, #124]	; 0x7c
   1b84c:	add	sl, sp, #24
   1b850:	mov	r0, r4
   1b854:	mov	r1, sl
   1b858:	ldr	fp, [r8]
   1b85c:	ldr	r2, [r8, #4]
   1b860:	ldr	r3, [r3]
   1b864:	sub	r2, r2, #1
   1b868:	mul	r2, r3, r2
   1b86c:	str	r2, [sp, #16]
   1b870:	ldr	r2, [r9, #4]
   1b874:	mul	r3, r2, r3
   1b878:	mov	r2, r5
   1b87c:	bl	21bc <InflateSkipData>
   1b880:	ldr	r3, [r8]
   1b884:	cmp	r3, #1
   1b888:	movne	r3, #0
   1b88c:	subne	fp, fp, #1
   1b890:	strne	r3, [sp, #12]
   1b894:	bne	1ba08 <ReadCompressedDataSlab2+0x1224>
   1b898:	ldr	r3, [sp, #124]	; 0x7c
   1b89c:	ldr	r2, [r7]
   1b8a0:	ldr	r3, [r3]
   1b8a4:	cmp	r2, r3
   1b8a8:	bne	1b960 <ReadCompressedDataSlab2+0x117c>
   1b8ac:	ldr	r3, [r8, #4]
   1b8b0:	cmp	r3, #1
   1b8b4:	bne	1b960 <ReadCompressedDataSlab2+0x117c>
   1b8b8:	ldr	r3, [r7, #4]
   1b8bc:	mov	r1, sl
   1b8c0:	mov	r0, r4
   1b8c4:	mul	r3, r3, r2
   1b8c8:	mov	r2, r6
   1b8cc:	str	r3, [sp]
   1b8d0:	mov	r3, r5
   1b8d4:	bl	12aa0 <ReadCompressedInt8Data>
   1b8d8:	b	1a91c <ReadCompressedDataSlab2+0x138>
   1b8dc:	mov	r2, r5
   1b8e0:	mov	r1, fp
   1b8e4:	ldr	r3, [r9]
   1b8e8:	mov	r0, r4
   1b8ec:	add	sl, sl, #1
   1b8f0:	bl	21bc <InflateSkipData>
   1b8f4:	ldr	r3, [r7]
   1b8f8:	mov	r2, r6
   1b8fc:	mov	r1, fp
   1b900:	mov	r0, r4
   1b904:	str	r3, [sp]
   1b908:	mov	r3, r5
   1b90c:	bl	12aa0 <ReadCompressedInt8Data>
   1b910:	ldr	r1, [sp, #16]
   1b914:	mov	r0, r4
   1b918:	ldr	r3, [sp, #124]	; 0x7c
   1b91c:	ldr	r2, [r7]
   1b920:	ldr	r3, [r3]
   1b924:	add	r6, r6, r2
   1b928:	sub	r2, r2, #1
   1b92c:	sub	r3, r3, #1
   1b930:	add	r3, r3, r1
   1b934:	ldr	r1, [r8]
   1b938:	mls	r2, r1, r2, r3
   1b93c:	ldr	r3, [r9]
   1b940:	mov	r1, fp
   1b944:	sub	r3, r2, r3
   1b948:	mov	r2, r5
   1b94c:	bl	21bc <InflateSkipData>
   1b950:	ldr	r3, [r7, #4]
   1b954:	cmp	r3, sl
   1b958:	bgt	1b8dc <ReadCompressedDataSlab2+0x10f8>
   1b95c:	b	1a91c <ReadCompressedDataSlab2+0x138>
   1b960:	mov	sl, #0
   1b964:	add	fp, sp, #24
   1b968:	b	1b950 <ReadCompressedDataSlab2+0x116c>
   1b96c:	mov	r2, r5
   1b970:	mov	r1, sl
   1b974:	ldr	r3, [r9]
   1b978:	mov	r0, r4
   1b97c:	bl	21bc <InflateSkipData>
   1b980:	mvn	r3, r6
   1b984:	mov	r2, r6
   1b988:	str	r3, [sp, #20]
   1b98c:	ldr	r3, [sp, #20]
   1b990:	add	r6, r2, #1
   1b994:	mov	r0, r4
   1b998:	add	r1, r6, r3
   1b99c:	ldr	r3, [r7]
   1b9a0:	sub	r3, r3, #1
   1b9a4:	cmp	r1, r3
   1b9a8:	mov	r3, #1
   1b9ac:	mov	r1, sl
   1b9b0:	str	r3, [sp]
   1b9b4:	mov	r3, r5
   1b9b8:	blt	1ba1c <ReadCompressedDataSlab2+0x1238>
   1b9bc:	bl	12aa0 <ReadCompressedInt8Data>
   1b9c0:	ldr	r2, [sp, #16]
   1b9c4:	mov	r0, r4
   1b9c8:	ldr	r3, [sp, #124]	; 0x7c
   1b9cc:	ldr	r1, [r8]
   1b9d0:	ldr	r3, [r3]
   1b9d4:	sub	r3, r3, #1
   1b9d8:	add	r2, r3, r2
   1b9dc:	ldr	r3, [r7]
   1b9e0:	sub	r3, r3, #1
   1b9e4:	mls	r3, r1, r3, r2
   1b9e8:	ldr	r2, [r9]
   1b9ec:	mov	r1, sl
   1b9f0:	sub	r3, r3, r2
   1b9f4:	mov	r2, r5
   1b9f8:	bl	21bc <InflateSkipData>
   1b9fc:	ldr	r3, [sp, #12]
   1ba00:	add	r3, r3, #1
   1ba04:	str	r3, [sp, #12]
   1ba08:	ldr	r3, [r7, #4]
   1ba0c:	ldr	r2, [sp, #12]
   1ba10:	cmp	r3, r2
   1ba14:	bgt	1b96c <ReadCompressedDataSlab2+0x1188>
   1ba18:	b	1a91c <ReadCompressedDataSlab2+0x138>
   1ba1c:	bl	12aa0 <ReadCompressedInt8Data>
   1ba20:	mov	r2, r5
   1ba24:	mov	r3, fp
   1ba28:	mov	r1, sl
   1ba2c:	mov	r0, r4
   1ba30:	bl	21bc <InflateSkipData>
   1ba34:	mov	r2, r6
   1ba38:	b	1b98c <ReadCompressedDataSlab2+0x11a8>
   1ba3c:	ldr	r3, [sp, #124]	; 0x7c
   1ba40:	add	sl, sp, #24
   1ba44:	mov	r0, r4
   1ba48:	mov	r1, sl
   1ba4c:	ldr	fp, [r8]
   1ba50:	ldr	r2, [r8, #4]
   1ba54:	ldr	r3, [r3]
   1ba58:	sub	r2, r2, #1
   1ba5c:	mul	r2, r3, r2
   1ba60:	str	r2, [sp, #16]
   1ba64:	ldr	r2, [r9, #4]
   1ba68:	mul	r3, r2, r3
   1ba6c:	mov	r2, r5
   1ba70:	bl	21bc <InflateSkipData>
   1ba74:	ldr	r3, [r8]
   1ba78:	cmp	r3, #1
   1ba7c:	movne	r3, #0
   1ba80:	subne	fp, fp, #1
   1ba84:	strne	r3, [sp, #12]
   1ba88:	bne	1bbfc <ReadCompressedDataSlab2+0x1418>
   1ba8c:	ldr	r3, [sp, #124]	; 0x7c
   1ba90:	ldr	r2, [r7]
   1ba94:	ldr	r3, [r3]
   1ba98:	cmp	r2, r3
   1ba9c:	bne	1bb54 <ReadCompressedDataSlab2+0x1370>
   1baa0:	ldr	r3, [r8, #4]
   1baa4:	cmp	r3, #1
   1baa8:	bne	1bb54 <ReadCompressedDataSlab2+0x1370>
   1baac:	ldr	r3, [r7, #4]
   1bab0:	mov	r1, sl
   1bab4:	mov	r0, r4
   1bab8:	mul	r3, r3, r2
   1babc:	mov	r2, r6
   1bac0:	str	r3, [sp]
   1bac4:	mov	r3, r5
   1bac8:	bl	12fa8 <ReadCompressedUInt8Data>
   1bacc:	b	1a91c <ReadCompressedDataSlab2+0x138>
   1bad0:	mov	r2, r5
   1bad4:	mov	r1, fp
   1bad8:	ldr	r3, [r9]
   1badc:	mov	r0, r4
   1bae0:	add	sl, sl, #1
   1bae4:	bl	21bc <InflateSkipData>
   1bae8:	ldr	r3, [r7]
   1baec:	mov	r2, r6
   1baf0:	mov	r1, fp
   1baf4:	mov	r0, r4
   1baf8:	str	r3, [sp]
   1bafc:	mov	r3, r5
   1bb00:	bl	12fa8 <ReadCompressedUInt8Data>
   1bb04:	ldr	r1, [sp, #16]
   1bb08:	mov	r0, r4
   1bb0c:	ldr	r3, [sp, #124]	; 0x7c
   1bb10:	ldr	r2, [r7]
   1bb14:	ldr	r3, [r3]
   1bb18:	add	r6, r6, r2
   1bb1c:	sub	r2, r2, #1
   1bb20:	sub	r3, r3, #1
   1bb24:	add	r3, r3, r1
   1bb28:	ldr	r1, [r8]
   1bb2c:	mls	r2, r1, r2, r3
   1bb30:	ldr	r3, [r9]
   1bb34:	mov	r1, fp
   1bb38:	sub	r3, r2, r3
   1bb3c:	mov	r2, r5
   1bb40:	bl	21bc <InflateSkipData>
   1bb44:	ldr	r3, [r7, #4]
   1bb48:	cmp	r3, sl
   1bb4c:	bgt	1bad0 <ReadCompressedDataSlab2+0x12ec>
   1bb50:	b	1a91c <ReadCompressedDataSlab2+0x138>
   1bb54:	mov	sl, #0
   1bb58:	add	fp, sp, #24
   1bb5c:	b	1bb44 <ReadCompressedDataSlab2+0x1360>
   1bb60:	mov	r2, r5
   1bb64:	mov	r1, sl
   1bb68:	ldr	r3, [r9]
   1bb6c:	mov	r0, r4
   1bb70:	bl	21bc <InflateSkipData>
   1bb74:	mvn	r3, r6
   1bb78:	mov	r2, r6
   1bb7c:	str	r3, [sp, #20]
   1bb80:	ldr	r3, [sp, #20]
   1bb84:	add	r6, r2, #1
   1bb88:	mov	r0, r4
   1bb8c:	add	r1, r6, r3
   1bb90:	ldr	r3, [r7]
   1bb94:	sub	r3, r3, #1
   1bb98:	cmp	r1, r3
   1bb9c:	mov	r3, #1
   1bba0:	mov	r1, sl
   1bba4:	str	r3, [sp]
   1bba8:	mov	r3, r5
   1bbac:	blt	1bc10 <ReadCompressedDataSlab2+0x142c>
   1bbb0:	bl	12fa8 <ReadCompressedUInt8Data>
   1bbb4:	ldr	r2, [sp, #16]
   1bbb8:	mov	r0, r4
   1bbbc:	ldr	r3, [sp, #124]	; 0x7c
   1bbc0:	ldr	r1, [r8]
   1bbc4:	ldr	r3, [r3]
   1bbc8:	sub	r3, r3, #1
   1bbcc:	add	r2, r3, r2
   1bbd0:	ldr	r3, [r7]
   1bbd4:	sub	r3, r3, #1
   1bbd8:	mls	r3, r1, r3, r2
   1bbdc:	ldr	r2, [r9]
   1bbe0:	mov	r1, sl
   1bbe4:	sub	r3, r3, r2
   1bbe8:	mov	r2, r5
   1bbec:	bl	21bc <InflateSkipData>
   1bbf0:	ldr	r3, [sp, #12]
   1bbf4:	add	r3, r3, #1
   1bbf8:	str	r3, [sp, #12]
   1bbfc:	ldr	r3, [r7, #4]
   1bc00:	ldr	r2, [sp, #12]
   1bc04:	cmp	r3, r2
   1bc08:	bgt	1bb60 <ReadCompressedDataSlab2+0x137c>
   1bc0c:	b	1a91c <ReadCompressedDataSlab2+0x138>
   1bc10:	bl	12fa8 <ReadCompressedUInt8Data>
   1bc14:	mov	r2, r5
   1bc18:	mov	r3, fp
   1bc1c:	mov	r1, sl
   1bc20:	mov	r0, r4
   1bc24:	bl	21bc <InflateSkipData>
   1bc28:	mov	r2, r6
   1bc2c:	b	1bb80 <ReadCompressedDataSlab2+0x139c>

0001bc30 <WriteData>:
   1bc30:	push	{r4, r5, r6, r7, lr}
   1bc34:	mov	ip, #0
   1bc38:	sub	sp, sp, #20
   1bc3c:	subs	r4, r0, #0
   1bc40:	moveq	r0, r4
   1bc44:	str	r3, [sp, #4]
   1bc48:	str	ip, [sp, #12]
   1bc4c:	beq	1bcc4 <WriteData+0x94>
   1bc50:	ldr	r0, [r4]
   1bc54:	cmp	r0, ip
   1bc58:	beq	1bcc4 <WriteData+0x94>
   1bc5c:	mov	r5, r2
   1bc60:	mov	r0, r3
   1bc64:	mov	r6, r1
   1bc68:	bl	1598 <Mat_SizeOf@plt>
   1bc6c:	mul	r3, r5, r0
   1bc70:	mov	r1, #4
   1bc74:	mov	r2, #1
   1bc78:	mov	r7, r0
   1bc7c:	add	r0, sp, r1
   1bc80:	str	r3, [sp, #12]
   1bc84:	ldr	r3, [r4]
   1bc88:	bl	1514 <fwrite@plt>
   1bc8c:	mov	r2, #1
   1bc90:	mov	r1, #4
   1bc94:	ldr	r3, [r4]
   1bc98:	add	r0, sp, #12
   1bc9c:	bl	1514 <fwrite@plt>
   1bca0:	cmp	r6, #0
   1bca4:	cmpne	r5, #0
   1bca8:	ble	1bcc0 <WriteData+0x90>
   1bcac:	mov	r2, r5
   1bcb0:	mov	r1, r7
   1bcb4:	ldr	r3, [r4]
   1bcb8:	mov	r0, r6
   1bcbc:	bl	1514 <fwrite@plt>
   1bcc0:	ldr	r0, [sp, #12]
   1bcc4:	add	sp, sp, #20
   1bcc8:	pop	{r4, r5, r6, r7, pc}

0001bccc <Mat_VarReadNumeric5>:
   1bccc:	push	{r4, r5, r6, r7, r8, r9, lr}
   1bcd0:	mov	r8, r3
   1bcd4:	sub	sp, sp, #20
   1bcd8:	mov	r4, r0
   1bcdc:	mov	r6, r1
   1bce0:	mov	r7, r2
   1bce4:	add	r5, sp, #8
   1bce8:	ldr	r3, [r1, #48]	; 0x30
   1bcec:	ldr	r9, [pc, #1036]	; 1c100 <Mat_VarReadNumeric5+0x434>
   1bcf0:	cmp	r3, #1
   1bcf4:	bne	1bdd0 <Mat_VarReadNumeric5+0x104>
   1bcf8:	ldr	r3, [r1, #52]	; 0x34
   1bcfc:	mov	r2, r5
   1bd00:	ldr	r1, [r3, #12]
   1bd04:	mov	r3, #0
   1bd08:	str	r3, [r1, #4]
   1bd0c:	bl	2c70 <InflateDataType>
   1bd10:	ldr	r3, [r4, #20]
   1bd14:	cmp	r3, #0
   1bd18:	beq	1bd24 <Mat_VarReadNumeric5+0x58>
   1bd1c:	mov	r0, r5
   1bd20:	bl	18cc <Mat_uint32Swap>
   1bd24:	ldr	r0, [sp, #8]
   1bd28:	uxtb	r5, r0
   1bd2c:	cmp	r5, #25
   1bd30:	movcs	r5, #0
   1bd34:	tst	r0, r9
   1bd38:	beq	1bd8c <Mat_VarReadNumeric5+0xc0>
   1bd3c:	lsr	r0, r0, #16
   1bd40:	mov	r9, #1
   1bd44:	ldr	r3, [r6, #48]	; 0x30
   1bd48:	cmp	r3, #0
   1bd4c:	bne	1bf4c <Mat_VarReadNumeric5+0x280>
   1bd50:	ldr	r3, [r6, #16]
   1bd54:	sub	r3, r3, #6
   1bd58:	cmp	r3, #9
   1bd5c:	addls	pc, pc, r3, lsl #2
   1bd60:	b	1be40 <Mat_VarReadNumeric5+0x174>
   1bd64:	b	1be2c <Mat_VarReadNumeric5+0x160>
   1bd68:	b	1be74 <Mat_VarReadNumeric5+0x1a8>
   1bd6c:	b	1bf1c <Mat_VarReadNumeric5+0x250>
   1bd70:	b	1bf34 <Mat_VarReadNumeric5+0x268>
   1bd74:	b	1beec <Mat_VarReadNumeric5+0x220>
   1bd78:	b	1bf04 <Mat_VarReadNumeric5+0x238>
   1bd7c:	b	1bebc <Mat_VarReadNumeric5+0x1f0>
   1bd80:	b	1bed4 <Mat_VarReadNumeric5+0x208>
   1bd84:	b	1be8c <Mat_VarReadNumeric5+0x1c0>
   1bd88:	b	1bea4 <Mat_VarReadNumeric5+0x1d8>
   1bd8c:	ldr	r3, [r6, #52]	; 0x34
   1bd90:	add	r9, sp, #12
   1bd94:	mov	r0, r4
   1bd98:	mov	r2, r9
   1bd9c:	ldr	r1, [r3, #12]
   1bda0:	bl	2c70 <InflateDataType>
   1bda4:	ldr	r3, [r4, #20]
   1bda8:	cmp	r3, #0
   1bdac:	beq	1bdb8 <Mat_VarReadNumeric5+0xec>
   1bdb0:	mov	r0, r9
   1bdb4:	bl	18cc <Mat_uint32Swap>
   1bdb8:	ldr	r0, [sp, #12]
   1bdbc:	cmp	r0, #0
   1bdc0:	streq	r0, [r6]
   1bdc4:	beq	1be6c <Mat_VarReadNumeric5+0x1a0>
   1bdc8:	mov	r9, #0
   1bdcc:	b	1bd44 <Mat_VarReadNumeric5+0x78>
   1bdd0:	mov	r2, #1
   1bdd4:	mov	r1, #4
   1bdd8:	ldr	r3, [r4]
   1bddc:	mov	r0, r5
   1bde0:	bl	1520 <fread@plt>
   1bde4:	ldr	r3, [r4, #20]
   1bde8:	cmp	r3, #0
   1bdec:	beq	1bdf8 <Mat_VarReadNumeric5+0x12c>
   1bdf0:	mov	r0, r5
   1bdf4:	bl	18cc <Mat_uint32Swap>
   1bdf8:	ldr	r0, [sp, #8]
   1bdfc:	uxtb	r5, r0
   1be00:	cmp	r5, #25
   1be04:	movcs	r5, #0
   1be08:	tst	r0, r9
   1be0c:	bne	1bd3c <Mat_VarReadNumeric5+0x70>
   1be10:	add	r9, sp, #12
   1be14:	mov	r2, #1
   1be18:	ldr	r3, [r4]
   1be1c:	mov	r1, #4
   1be20:	mov	r0, r9
   1be24:	bl	1520 <fread@plt>
   1be28:	b	1bda4 <Mat_VarReadNumeric5+0xd8>
   1be2c:	mov	r3, r8
   1be30:	mov	r2, r5
   1be34:	mov	r1, r7
   1be38:	mov	r0, r4
   1be3c:	bl	f568 <ReadDoubleData>
   1be40:	cmp	r9, #0
   1be44:	addne	r0, r0, #4
   1be48:	ands	r1, r0, #7
   1be4c:	beq	1be6c <Mat_VarReadNumeric5+0x1a0>
   1be50:	rsbs	r0, r0, #0
   1be54:	mov	r2, #1
   1be58:	and	r0, r0, #7
   1be5c:	rsbpl	r1, r0, #0
   1be60:	ldr	r0, [r4]
   1be64:	rsb	r1, r1, #8
   1be68:	bl	1694 <fseek@plt>
   1be6c:	add	sp, sp, #20
   1be70:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1be74:	mov	r3, r8
   1be78:	mov	r2, r5
   1be7c:	mov	r1, r7
   1be80:	mov	r0, r4
   1be84:	bl	106cc <ReadSingleData>
   1be88:	b	1be40 <Mat_VarReadNumeric5+0x174>
   1be8c:	mov	r3, r8
   1be90:	mov	r2, r5
   1be94:	mov	r1, r7
   1be98:	mov	r0, r4
   1be9c:	bl	10bec <ReadInt64Data>
   1bea0:	b	1be40 <Mat_VarReadNumeric5+0x174>
   1bea4:	mov	r3, r8
   1bea8:	mov	r2, r5
   1beac:	mov	r1, r7
   1beb0:	mov	r0, r4
   1beb4:	bl	11124 <ReadUInt64Data>
   1beb8:	b	1be40 <Mat_VarReadNumeric5+0x174>
   1bebc:	mov	r3, r8
   1bec0:	mov	r2, r5
   1bec4:	mov	r1, r7
   1bec8:	mov	r0, r4
   1becc:	bl	1165c <ReadInt32Data>
   1bed0:	b	1be40 <Mat_VarReadNumeric5+0x174>
   1bed4:	mov	r3, r8
   1bed8:	mov	r2, r5
   1bedc:	mov	r1, r7
   1bee0:	mov	r0, r4
   1bee4:	bl	11b64 <ReadUInt32Data>
   1bee8:	b	1be40 <Mat_VarReadNumeric5+0x174>
   1beec:	mov	r3, r8
   1bef0:	mov	r2, r5
   1bef4:	mov	r1, r7
   1bef8:	mov	r0, r4
   1befc:	bl	1206c <ReadInt16Data>
   1bf00:	b	1be40 <Mat_VarReadNumeric5+0x174>
   1bf04:	mov	r3, r8
   1bf08:	mov	r2, r5
   1bf0c:	mov	r1, r7
   1bf10:	mov	r0, r4
   1bf14:	bl	12574 <ReadUInt16Data>
   1bf18:	b	1be40 <Mat_VarReadNumeric5+0x174>
   1bf1c:	mov	r3, r8
   1bf20:	mov	r2, r5
   1bf24:	mov	r1, r7
   1bf28:	mov	r0, r4
   1bf2c:	bl	12a7c <ReadInt8Data>
   1bf30:	b	1be40 <Mat_VarReadNumeric5+0x174>
   1bf34:	mov	r3, r8
   1bf38:	mov	r2, r5
   1bf3c:	mov	r1, r7
   1bf40:	mov	r0, r4
   1bf44:	bl	12f84 <ReadUInt8Data>
   1bf48:	b	1be40 <Mat_VarReadNumeric5+0x174>
   1bf4c:	cmp	r3, #1
   1bf50:	bne	1be6c <Mat_VarReadNumeric5+0x1a0>
   1bf54:	ldr	r3, [r6, #16]
   1bf58:	sub	r3, r3, #6
   1bf5c:	cmp	r3, #9
   1bf60:	addls	pc, pc, r3, lsl #2
   1bf64:	b	1bfac <Mat_VarReadNumeric5+0x2e0>
   1bf68:	b	1bf90 <Mat_VarReadNumeric5+0x2c4>
   1bf6c:	b	1bfe0 <Mat_VarReadNumeric5+0x314>
   1bf70:	b	1c0c0 <Mat_VarReadNumeric5+0x3f4>
   1bf74:	b	1c0e0 <Mat_VarReadNumeric5+0x414>
   1bf78:	b	1c080 <Mat_VarReadNumeric5+0x3b4>
   1bf7c:	b	1c0a0 <Mat_VarReadNumeric5+0x3d4>
   1bf80:	b	1c040 <Mat_VarReadNumeric5+0x374>
   1bf84:	b	1c060 <Mat_VarReadNumeric5+0x394>
   1bf88:	b	1c000 <Mat_VarReadNumeric5+0x334>
   1bf8c:	b	1c020 <Mat_VarReadNumeric5+0x354>
   1bf90:	ldr	r1, [r6, #52]	; 0x34
   1bf94:	mov	r3, r5
   1bf98:	mov	r2, r7
   1bf9c:	mov	r0, r4
   1bfa0:	str	r8, [sp]
   1bfa4:	ldr	r1, [r1, #12]
   1bfa8:	bl	f58c <ReadCompressedDoubleData>
   1bfac:	cmp	r9, #0
   1bfb0:	addne	r0, r0, #4
   1bfb4:	ands	r2, r0, #7
   1bfb8:	beq	1be6c <Mat_VarReadNumeric5+0x1a0>
   1bfbc:	ldr	r3, [r6, #52]	; 0x34
   1bfc0:	rsbs	r0, r0, #0
   1bfc4:	and	r0, r0, #7
   1bfc8:	rsbpl	r2, r0, #0
   1bfcc:	mov	r0, r4
   1bfd0:	rsb	r2, r2, #8
   1bfd4:	ldr	r1, [r3, #12]
   1bfd8:	bl	1e78 <InflateSkip>
   1bfdc:	b	1be6c <Mat_VarReadNumeric5+0x1a0>
   1bfe0:	ldr	r1, [r6, #52]	; 0x34
   1bfe4:	mov	r3, r5
   1bfe8:	mov	r2, r7
   1bfec:	mov	r0, r4
   1bff0:	str	r8, [sp]
   1bff4:	ldr	r1, [r1, #12]
   1bff8:	bl	106f0 <ReadCompressedSingleData>
   1bffc:	b	1bfac <Mat_VarReadNumeric5+0x2e0>
   1c000:	ldr	r1, [r6, #52]	; 0x34
   1c004:	mov	r3, r5
   1c008:	mov	r2, r7
   1c00c:	mov	r0, r4
   1c010:	str	r8, [sp]
   1c014:	ldr	r1, [r1, #12]
   1c018:	bl	10c10 <ReadCompressedInt64Data>
   1c01c:	b	1bfac <Mat_VarReadNumeric5+0x2e0>
   1c020:	ldr	r1, [r6, #52]	; 0x34
   1c024:	mov	r3, r5
   1c028:	mov	r2, r7
   1c02c:	mov	r0, r4
   1c030:	str	r8, [sp]
   1c034:	ldr	r1, [r1, #12]
   1c038:	bl	11148 <ReadCompressedUInt64Data>
   1c03c:	b	1bfac <Mat_VarReadNumeric5+0x2e0>
   1c040:	ldr	r1, [r6, #52]	; 0x34
   1c044:	mov	r3, r5
   1c048:	mov	r2, r7
   1c04c:	mov	r0, r4
   1c050:	str	r8, [sp]
   1c054:	ldr	r1, [r1, #12]
   1c058:	bl	11680 <ReadCompressedInt32Data>
   1c05c:	b	1bfac <Mat_VarReadNumeric5+0x2e0>
   1c060:	ldr	r1, [r6, #52]	; 0x34
   1c064:	mov	r3, r5
   1c068:	mov	r2, r7
   1c06c:	mov	r0, r4
   1c070:	str	r8, [sp]
   1c074:	ldr	r1, [r1, #12]
   1c078:	bl	11b88 <ReadCompressedUInt32Data>
   1c07c:	b	1bfac <Mat_VarReadNumeric5+0x2e0>
   1c080:	ldr	r1, [r6, #52]	; 0x34
   1c084:	mov	r3, r5
   1c088:	mov	r2, r7
   1c08c:	mov	r0, r4
   1c090:	str	r8, [sp]
   1c094:	ldr	r1, [r1, #12]
   1c098:	bl	12090 <ReadCompressedInt16Data>
   1c09c:	b	1bfac <Mat_VarReadNumeric5+0x2e0>
   1c0a0:	ldr	r1, [r6, #52]	; 0x34
   1c0a4:	mov	r3, r5
   1c0a8:	mov	r2, r7
   1c0ac:	mov	r0, r4
   1c0b0:	str	r8, [sp]
   1c0b4:	ldr	r1, [r1, #12]
   1c0b8:	bl	12598 <ReadCompressedUInt16Data>
   1c0bc:	b	1bfac <Mat_VarReadNumeric5+0x2e0>
   1c0c0:	ldr	r1, [r6, #52]	; 0x34
   1c0c4:	mov	r3, r5
   1c0c8:	mov	r2, r7
   1c0cc:	mov	r0, r4
   1c0d0:	str	r8, [sp]
   1c0d4:	ldr	r1, [r1, #12]
   1c0d8:	bl	12aa0 <ReadCompressedInt8Data>
   1c0dc:	b	1bfac <Mat_VarReadNumeric5+0x2e0>
   1c0e0:	ldr	r1, [r6, #52]	; 0x34
   1c0e4:	mov	r3, r5
   1c0e8:	mov	r2, r7
   1c0ec:	mov	r0, r4
   1c0f0:	str	r8, [sp]
   1c0f4:	ldr	r1, [r1, #12]
   1c0f8:	bl	12fa8 <ReadCompressedUInt8Data>
   1c0fc:	b	1bfac <Mat_VarReadNumeric5+0x2e0>
   1c100:	.word	0xffff0000

0001c104 <GetDataSlab>:
   1c104:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c108:	sub	sp, sp, #156	; 0x9c
   1c10c:	cmp	r2, #6
   1c110:	cmpeq	r3, #9
   1c114:	mov	r6, r2
   1c118:	mov	r5, r3
   1c11c:	str	r1, [sp]
   1c120:	str	r0, [sp, #4]
   1c124:	ldr	fp, [sp, #192]	; 0xc0
   1c128:	ldr	sl, [sp, #200]	; 0xc8
   1c12c:	beq	1c240 <GetDataSlab+0x13c>
   1c130:	cmp	r2, #7
   1c134:	cmpeq	r3, #7
   1c138:	beq	1c240 <GetDataSlab+0x13c>
   1c13c:	cmp	r2, #10
   1c140:	cmpeq	r3, #3
   1c144:	beq	1c240 <GetDataSlab+0x13c>
   1c148:	cmp	r2, #12
   1c14c:	cmpeq	r3, #5
   1c150:	beq	1c240 <GetDataSlab+0x13c>
   1c154:	cmp	r2, #14
   1c158:	cmpeq	r3, #12
   1c15c:	beq	1c240 <GetDataSlab+0x13c>
   1c160:	cmp	r2, #8
   1c164:	cmpeq	r3, #1
   1c168:	beq	1c240 <GetDataSlab+0x13c>
   1c16c:	cmp	r2, #11
   1c170:	cmpeq	r3, #4
   1c174:	beq	1c240 <GetDataSlab+0x13c>
   1c178:	cmp	r2, #13
   1c17c:	cmpeq	r3, #6
   1c180:	beq	1c240 <GetDataSlab+0x13c>
   1c184:	cmp	r2, #15
   1c188:	cmpeq	r3, #13
   1c18c:	beq	1c240 <GetDataSlab+0x13c>
   1c190:	cmp	r2, #9
   1c194:	cmpeq	r3, #2
   1c198:	moveq	r7, #1
   1c19c:	movne	r7, #0
   1c1a0:	ldr	r3, [sp, #208]	; 0xd0
   1c1a4:	cmp	r3, #2
   1c1a8:	bne	1eff4 <GetDataSlab+0x2ef0>
   1c1ac:	ldr	r3, [sp, #204]	; 0xcc
   1c1b0:	ldr	r0, [sl]
   1c1b4:	ldr	r4, [r3]
   1c1b8:	ldr	r3, [sp, #196]	; 0xc4
   1c1bc:	sub	ip, r4, #1
   1c1c0:	ldr	r1, [r3]
   1c1c4:	ldr	r3, [fp]
   1c1c8:	add	r2, r1, #1
   1c1cc:	mla	r2, r0, ip, r2
   1c1d0:	cmp	r2, r3
   1c1d4:	bhi	3236c <GetDataSlab+0x16268>
   1c1d8:	ldr	r2, [sp, #204]	; 0xcc
   1c1dc:	ldr	ip, [sl, #4]
   1c1e0:	ldr	r9, [r2, #4]
   1c1e4:	ldr	r2, [sp, #196]	; 0xc4
   1c1e8:	sub	r8, r9, #1
   1c1ec:	ldr	r2, [r2, #4]
   1c1f0:	add	lr, r2, #1
   1c1f4:	mla	lr, ip, r8, lr
   1c1f8:	ldr	r8, [fp, #4]
   1c1fc:	cmp	lr, r8
   1c200:	bhi	3236c <GetDataSlab+0x16268>
   1c204:	cmp	r0, #1
   1c208:	bne	1c248 <GetDataSlab+0x144>
   1c20c:	cmp	r4, r3
   1c210:	cmpeq	ip, #1
   1c214:	moveq	lr, #1
   1c218:	movne	lr, #0
   1c21c:	tst	lr, r7
   1c220:	beq	1c248 <GetDataSlab+0x144>
   1c224:	ldrd	r0, [sp]
   1c228:	ldr	r2, [sp, #212]	; 0xd4
   1c22c:	bl	1490 <memcpy@plt>
   1c230:	mov	r3, #0
   1c234:	mov	r0, r3
   1c238:	add	sp, sp, #156	; 0x9c
   1c23c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c240:	mov	r7, #1
   1c244:	b	1c1a0 <GetDataSlab+0x9c>
   1c248:	sub	lr, r6, #6
   1c24c:	cmp	lr, #9
   1c250:	addls	pc, pc, lr, lsl #2
   1c254:	b	3236c <GetDataSlab+0x16268>
   1c258:	b	1c280 <GetDataSlab+0x17c>
   1c25c:	b	1c728 <GetDataSlab+0x624>
   1c260:	b	1e6cc <GetDataSlab+0x25c8>
   1c264:	b	1eb60 <GetDataSlab+0x2a5c>
   1c268:	b	1de14 <GetDataSlab+0x1d10>
   1c26c:	b	1e270 <GetDataSlab+0x216c>
   1c270:	b	1d4fc <GetDataSlab+0x13f8>
   1c274:	b	1d988 <GetDataSlab+0x1884>
   1c278:	b	1cbd0 <GetDataSlab+0xacc>
   1c27c:	b	1d064 <GetDataSlab+0xf60>
   1c280:	sub	lr, r5, #1
   1c284:	cmp	lr, #8
   1c288:	addls	pc, pc, lr, lsl #2
   1c28c:	b	1c620 <GetDataSlab+0x51c>
   1c290:	b	1c550 <GetDataSlab+0x44c>
   1c294:	b	1c5b8 <GetDataSlab+0x4b4>
   1c298:	b	1c470 <GetDataSlab+0x36c>
   1c29c:	b	1c4e0 <GetDataSlab+0x3dc>
   1c2a0:	b	1c390 <GetDataSlab+0x28c>
   1c2a4:	b	1c400 <GetDataSlab+0x2fc>
   1c2a8:	b	1c320 <GetDataSlab+0x21c>
   1c2ac:	b	1c620 <GetDataSlab+0x51c>
   1c2b0:	b	1c2b4 <GetDataSlab+0x1b0>
   1c2b4:	mla	r2, r2, r3, r1
   1c2b8:	ldr	r1, [sp, #4]
   1c2bc:	mul	r3, ip, r3
   1c2c0:	lsl	r5, r0, #3
   1c2c4:	mov	r0, #0
   1c2c8:	lsl	lr, r3, #3
   1c2cc:	bic	r3, r4, r4, asr #31
   1c2d0:	add	r1, r1, r2, lsl #3
   1c2d4:	lsl	r6, r3, #3
   1c2d8:	cmp	r9, r0
   1c2dc:	ble	1c230 <GetDataSlab+0x12c>
   1c2e0:	mov	r3, r1
   1c2e4:	mov	r2, #0
   1c2e8:	ldr	ip, [sp]
   1c2ec:	b	1c300 <GetDataSlab+0x1fc>
   1c2f0:	ldrd	sl, [r3]
   1c2f4:	add	r2, r2, #1
   1c2f8:	add	r3, r3, r5
   1c2fc:	strd	sl, [ip], #8
   1c300:	cmp	r4, r2
   1c304:	bgt	1c2f0 <GetDataSlab+0x1ec>
   1c308:	ldr	r3, [sp]
   1c30c:	add	r1, r1, lr
   1c310:	add	r0, r0, #1
   1c314:	add	r3, r3, r6
   1c318:	str	r3, [sp]
   1c31c:	b	1c2d8 <GetDataSlab+0x1d4>
   1c320:	mla	r2, r2, r3, r1
   1c324:	ldr	r1, [sp, #4]
   1c328:	mul	r3, ip, r3
   1c32c:	lsl	r6, r0, #2
   1c330:	mov	r0, #0
   1c334:	lsl	lr, r3, #2
   1c338:	bic	r3, r4, r4, asr #31
   1c33c:	add	r1, r1, r2, lsl #2
   1c340:	lsl	r5, r3, #3
   1c344:	cmp	r9, r0
   1c348:	ble	1c230 <GetDataSlab+0x12c>
   1c34c:	mov	r3, r1
   1c350:	mov	r2, #0
   1c354:	ldr	ip, [sp]
   1c358:	b	1c370 <GetDataSlab+0x26c>
   1c35c:	vldr	s15, [r3]
   1c360:	add	r2, r2, #1
   1c364:	add	r3, r3, r6
   1c368:	vcvt.f64.f32	d7, s15
   1c36c:	vstmia	ip!, {d7}
   1c370:	cmp	r4, r2
   1c374:	bgt	1c35c <GetDataSlab+0x258>
   1c378:	ldr	r3, [sp]
   1c37c:	add	r1, r1, lr
   1c380:	add	r0, r0, #1
   1c384:	add	r3, r3, r5
   1c388:	str	r3, [sp]
   1c38c:	b	1c344 <GetDataSlab+0x240>
   1c390:	mla	r2, r2, r3, r1
   1c394:	ldr	r1, [sp, #4]
   1c398:	mul	r3, ip, r3
   1c39c:	lsl	r6, r0, #2
   1c3a0:	lsl	lr, r3, #2
   1c3a4:	bic	r3, r4, r4, asr #31
   1c3a8:	add	r2, r1, r2, lsl #2
   1c3ac:	mov	r1, #0
   1c3b0:	lsl	r5, r3, #3
   1c3b4:	cmp	r9, r1
   1c3b8:	ble	1c230 <GetDataSlab+0x12c>
   1c3bc:	mov	ip, r2
   1c3c0:	mov	r3, #0
   1c3c4:	ldr	r0, [sp]
   1c3c8:	b	1c3e0 <GetDataSlab+0x2dc>
   1c3cc:	ldr	r7, [ip], r6
   1c3d0:	add	r3, r3, #1
   1c3d4:	vmov	s15, r7
   1c3d8:	vcvt.f64.s32	d7, s15
   1c3dc:	vstmia	r0!, {d7}
   1c3e0:	cmp	r4, r3
   1c3e4:	bgt	1c3cc <GetDataSlab+0x2c8>
   1c3e8:	ldr	r3, [sp]
   1c3ec:	add	r2, r2, lr
   1c3f0:	add	r1, r1, #1
   1c3f4:	add	r3, r3, r5
   1c3f8:	str	r3, [sp]
   1c3fc:	b	1c3b4 <GetDataSlab+0x2b0>
   1c400:	mla	r2, r2, r3, r1
   1c404:	ldr	r1, [sp, #4]
   1c408:	mul	r3, ip, r3
   1c40c:	lsl	r6, r0, #2
   1c410:	lsl	lr, r3, #2
   1c414:	bic	r3, r4, r4, asr #31
   1c418:	add	r2, r1, r2, lsl #2
   1c41c:	mov	r1, #0
   1c420:	lsl	r5, r3, #3
   1c424:	cmp	r9, r1
   1c428:	ble	1c230 <GetDataSlab+0x12c>
   1c42c:	mov	ip, r2
   1c430:	mov	r3, #0
   1c434:	ldr	r0, [sp]
   1c438:	b	1c450 <GetDataSlab+0x34c>
   1c43c:	ldr	r7, [ip], r6
   1c440:	add	r3, r3, #1
   1c444:	vmov	s15, r7
   1c448:	vcvt.f64.u32	d7, s15
   1c44c:	vstmia	r0!, {d7}
   1c450:	cmp	r4, r3
   1c454:	bgt	1c43c <GetDataSlab+0x338>
   1c458:	ldr	r3, [sp]
   1c45c:	add	r2, r2, lr
   1c460:	add	r1, r1, #1
   1c464:	add	r3, r3, r5
   1c468:	str	r3, [sp]
   1c46c:	b	1c424 <GetDataSlab+0x320>
   1c470:	mla	r2, r2, r3, r1
   1c474:	ldr	r1, [sp, #4]
   1c478:	mul	r3, ip, r3
   1c47c:	lsl	r6, r0, #1
   1c480:	lsl	lr, r3, #1
   1c484:	bic	r3, r4, r4, asr #31
   1c488:	add	r2, r1, r2, lsl #1
   1c48c:	mov	r1, #0
   1c490:	lsl	r5, r3, #3
   1c494:	cmp	r9, r1
   1c498:	ble	1c230 <GetDataSlab+0x12c>
   1c49c:	mov	ip, r2
   1c4a0:	mov	r3, #0
   1c4a4:	ldr	r0, [sp]
   1c4a8:	b	1c4c0 <GetDataSlab+0x3bc>
   1c4ac:	ldrsh	r7, [ip], r6
   1c4b0:	add	r3, r3, #1
   1c4b4:	vmov	s15, r7
   1c4b8:	vcvt.f64.s32	d7, s15
   1c4bc:	vstmia	r0!, {d7}
   1c4c0:	cmp	r4, r3
   1c4c4:	bgt	1c4ac <GetDataSlab+0x3a8>
   1c4c8:	ldr	r3, [sp]
   1c4cc:	add	r2, r2, lr
   1c4d0:	add	r1, r1, #1
   1c4d4:	add	r3, r3, r5
   1c4d8:	str	r3, [sp]
   1c4dc:	b	1c494 <GetDataSlab+0x390>
   1c4e0:	mla	r2, r2, r3, r1
   1c4e4:	ldr	r1, [sp, #4]
   1c4e8:	mul	r3, ip, r3
   1c4ec:	lsl	r6, r0, #1
   1c4f0:	lsl	lr, r3, #1
   1c4f4:	bic	r3, r4, r4, asr #31
   1c4f8:	add	r2, r1, r2, lsl #1
   1c4fc:	mov	r1, #0
   1c500:	lsl	r5, r3, #3
   1c504:	cmp	r9, r1
   1c508:	ble	1c230 <GetDataSlab+0x12c>
   1c50c:	mov	ip, r2
   1c510:	mov	r3, #0
   1c514:	ldr	r0, [sp]
   1c518:	b	1c530 <GetDataSlab+0x42c>
   1c51c:	ldrh	r7, [ip], r6
   1c520:	add	r3, r3, #1
   1c524:	vmov	s15, r7
   1c528:	vcvt.f64.u32	d7, s15
   1c52c:	vstmia	r0!, {d7}
   1c530:	cmp	r4, r3
   1c534:	bgt	1c51c <GetDataSlab+0x418>
   1c538:	ldr	r3, [sp]
   1c53c:	add	r2, r2, lr
   1c540:	add	r1, r1, #1
   1c544:	add	r3, r3, r5
   1c548:	str	r3, [sp]
   1c54c:	b	1c504 <GetDataSlab+0x400>
   1c550:	mla	r2, r2, r3, r1
   1c554:	ldr	r1, [sp, #4]
   1c558:	mul	r5, ip, r3
   1c55c:	bic	r3, r4, r4, asr #31
   1c560:	lsl	r6, r3, #3
   1c564:	add	r2, r1, r2
   1c568:	mov	r1, #0
   1c56c:	cmp	r9, r1
   1c570:	ble	1c230 <GetDataSlab+0x12c>
   1c574:	mov	lr, r2
   1c578:	mov	r3, #0
   1c57c:	ldr	ip, [sp]
   1c580:	b	1c598 <GetDataSlab+0x494>
   1c584:	ldrsb	r7, [lr], r0
   1c588:	add	r3, r3, #1
   1c58c:	vmov	s15, r7
   1c590:	vcvt.f64.s32	d7, s15
   1c594:	vstmia	ip!, {d7}
   1c598:	cmp	r4, r3
   1c59c:	bgt	1c584 <GetDataSlab+0x480>
   1c5a0:	ldr	r3, [sp]
   1c5a4:	add	r2, r2, r5
   1c5a8:	add	r1, r1, #1
   1c5ac:	add	r3, r3, r6
   1c5b0:	str	r3, [sp]
   1c5b4:	b	1c56c <GetDataSlab+0x468>
   1c5b8:	mla	r2, r2, r3, r1
   1c5bc:	ldr	r1, [sp, #4]
   1c5c0:	mul	r5, ip, r3
   1c5c4:	bic	r3, r4, r4, asr #31
   1c5c8:	lsl	r6, r3, #3
   1c5cc:	add	r2, r1, r2
   1c5d0:	mov	r1, #0
   1c5d4:	cmp	r9, r1
   1c5d8:	ble	1c230 <GetDataSlab+0x12c>
   1c5dc:	mov	lr, r2
   1c5e0:	mov	r3, #0
   1c5e4:	ldr	ip, [sp]
   1c5e8:	b	1c600 <GetDataSlab+0x4fc>
   1c5ec:	ldrb	r7, [lr], r0
   1c5f0:	add	r3, r3, #1
   1c5f4:	vmov	s15, r7
   1c5f8:	vcvt.f64.u32	d7, s15
   1c5fc:	vstmia	ip!, {d7}
   1c600:	cmp	r4, r3
   1c604:	bgt	1c5ec <GetDataSlab+0x4e8>
   1c608:	ldr	r3, [sp]
   1c60c:	add	r2, r2, r5
   1c610:	add	r1, r1, #1
   1c614:	add	r3, r3, r6
   1c618:	str	r3, [sp]
   1c61c:	b	1c5d4 <GetDataSlab+0x4d0>
   1c620:	cmp	r5, #12
   1c624:	bne	1c6a4 <GetDataSlab+0x5a0>
   1c628:	mla	r2, r2, r3, r1
   1c62c:	ldr	r1, [sp, #4]
   1c630:	mov	r8, #0
   1c634:	mul	r3, ip, r3
   1c638:	lsl	fp, r3, #3
   1c63c:	lsl	r3, r0, #3
   1c640:	add	r7, r1, r2, lsl #3
   1c644:	str	r3, [sp, #8]
   1c648:	bic	r3, r4, r4, asr #31
   1c64c:	lsl	r3, r3, #3
   1c650:	str	r3, [sp, #4]
   1c654:	cmp	r9, r8
   1c658:	ble	1c230 <GetDataSlab+0x12c>
   1c65c:	mov	r6, r7
   1c660:	mov	r5, #0
   1c664:	ldr	sl, [sp]
   1c668:	b	1c684 <GetDataSlab+0x580>
   1c66c:	ldrd	r0, [r6]
   1c670:	add	r5, r5, #1
   1c674:	bl	3e530 <__aeabi_l2d>
   1c678:	ldr	r3, [sp, #8]
   1c67c:	strd	r0, [sl], #8
   1c680:	add	r6, r6, r3
   1c684:	cmp	r4, r5
   1c688:	bgt	1c66c <GetDataSlab+0x568>
   1c68c:	ldrd	r2, [sp]
   1c690:	add	r7, r7, fp
   1c694:	add	r8, r8, #1
   1c698:	add	r3, r3, r2
   1c69c:	str	r3, [sp]
   1c6a0:	b	1c654 <GetDataSlab+0x550>
   1c6a4:	cmp	r5, #13
   1c6a8:	bne	3236c <GetDataSlab+0x16268>
   1c6ac:	mla	r2, r2, r3, r1
   1c6b0:	ldr	r1, [sp, #4]
   1c6b4:	mov	r8, #0
   1c6b8:	mul	r3, ip, r3
   1c6bc:	lsl	fp, r3, #3
   1c6c0:	lsl	r3, r0, #3
   1c6c4:	add	r7, r1, r2, lsl #3
   1c6c8:	str	r3, [sp, #8]
   1c6cc:	bic	r3, r4, r4, asr #31
   1c6d0:	lsl	r3, r3, #3
   1c6d4:	str	r3, [sp, #4]
   1c6d8:	cmp	r9, r8
   1c6dc:	ble	1c230 <GetDataSlab+0x12c>
   1c6e0:	mov	r6, r7
   1c6e4:	mov	r5, #0
   1c6e8:	ldr	sl, [sp]
   1c6ec:	b	1c708 <GetDataSlab+0x604>
   1c6f0:	ldrd	r0, [r6]
   1c6f4:	add	r5, r5, #1
   1c6f8:	bl	3e51c <__aeabi_ul2d>
   1c6fc:	ldr	r3, [sp, #8]
   1c700:	strd	r0, [sl], #8
   1c704:	add	r6, r6, r3
   1c708:	cmp	r4, r5
   1c70c:	bgt	1c6f0 <GetDataSlab+0x5ec>
   1c710:	ldrd	r2, [sp]
   1c714:	add	r7, r7, fp
   1c718:	add	r8, r8, #1
   1c71c:	add	r3, r3, r2
   1c720:	str	r3, [sp]
   1c724:	b	1c6d8 <GetDataSlab+0x5d4>
   1c728:	sub	lr, r5, #1
   1c72c:	cmp	lr, #8
   1c730:	addls	pc, pc, lr, lsl #2
   1c734:	b	1cac8 <GetDataSlab+0x9c4>
   1c738:	b	1c9f8 <GetDataSlab+0x8f4>
   1c73c:	b	1ca60 <GetDataSlab+0x95c>
   1c740:	b	1c918 <GetDataSlab+0x814>
   1c744:	b	1c988 <GetDataSlab+0x884>
   1c748:	b	1c838 <GetDataSlab+0x734>
   1c74c:	b	1c8a8 <GetDataSlab+0x7a4>
   1c750:	b	1c7cc <GetDataSlab+0x6c8>
   1c754:	b	1cac8 <GetDataSlab+0x9c4>
   1c758:	b	1c75c <GetDataSlab+0x658>
   1c75c:	mla	r2, r2, r3, r1
   1c760:	ldr	r1, [sp, #4]
   1c764:	mul	r3, ip, r3
   1c768:	lsl	r5, r0, #3
   1c76c:	mov	r0, #0
   1c770:	lsl	lr, r3, #3
   1c774:	bic	r3, r4, r4, asr #31
   1c778:	add	r1, r1, r2, lsl #3
   1c77c:	lsl	r6, r3, #2
   1c780:	cmp	r9, r0
   1c784:	ble	1c230 <GetDataSlab+0x12c>
   1c788:	mov	r3, r1
   1c78c:	mov	r2, #0
   1c790:	ldr	ip, [sp]
   1c794:	b	1c7ac <GetDataSlab+0x6a8>
   1c798:	vldr	d7, [r3]
   1c79c:	add	r2, r2, #1
   1c7a0:	add	r3, r3, r5
   1c7a4:	vcvt.f32.f64	s15, d7
   1c7a8:	vstmia	ip!, {s15}
   1c7ac:	cmp	r4, r2
   1c7b0:	bgt	1c798 <GetDataSlab+0x694>
   1c7b4:	ldr	r3, [sp]
   1c7b8:	add	r1, r1, lr
   1c7bc:	add	r0, r0, #1
   1c7c0:	add	r3, r3, r6
   1c7c4:	str	r3, [sp]
   1c7c8:	b	1c780 <GetDataSlab+0x67c>
   1c7cc:	mla	r2, r2, r3, r1
   1c7d0:	ldr	r1, [sp, #4]
   1c7d4:	mul	r3, ip, r3
   1c7d8:	lsl	r5, r0, #2
   1c7dc:	mov	r0, #0
   1c7e0:	lsl	lr, r3, #2
   1c7e4:	bic	r3, r4, r4, asr #31
   1c7e8:	add	r1, r1, r2, lsl #2
   1c7ec:	lsl	r6, r3, #2
   1c7f0:	cmp	r9, r0
   1c7f4:	ble	1c230 <GetDataSlab+0x12c>
   1c7f8:	mov	r3, r1
   1c7fc:	mov	r2, #0
   1c800:	ldr	ip, [sp]
   1c804:	b	1c818 <GetDataSlab+0x714>
   1c808:	ldr	r7, [r3]
   1c80c:	add	r2, r2, #1
   1c810:	add	r3, r3, r5
   1c814:	str	r7, [ip], #4
   1c818:	cmp	r4, r2
   1c81c:	bgt	1c808 <GetDataSlab+0x704>
   1c820:	ldr	r3, [sp]
   1c824:	add	r1, r1, lr
   1c828:	add	r0, r0, #1
   1c82c:	add	r3, r3, r6
   1c830:	str	r3, [sp]
   1c834:	b	1c7f0 <GetDataSlab+0x6ec>
   1c838:	mla	r2, r2, r3, r1
   1c83c:	ldr	r1, [sp, #4]
   1c840:	mul	r3, ip, r3
   1c844:	lsl	r6, r0, #2
   1c848:	lsl	lr, r3, #2
   1c84c:	bic	r3, r4, r4, asr #31
   1c850:	add	r2, r1, r2, lsl #2
   1c854:	mov	r1, #0
   1c858:	lsl	r5, r3, #2
   1c85c:	cmp	r9, r1
   1c860:	ble	1c230 <GetDataSlab+0x12c>
   1c864:	mov	ip, r2
   1c868:	mov	r3, #0
   1c86c:	ldr	r0, [sp]
   1c870:	b	1c888 <GetDataSlab+0x784>
   1c874:	ldr	r7, [ip], r6
   1c878:	add	r3, r3, #1
   1c87c:	vmov	s15, r7
   1c880:	vcvt.f32.s32	s15, s15
   1c884:	vstmia	r0!, {s15}
   1c888:	cmp	r4, r3
   1c88c:	bgt	1c874 <GetDataSlab+0x770>
   1c890:	ldr	r3, [sp]
   1c894:	add	r2, r2, lr
   1c898:	add	r1, r1, #1
   1c89c:	add	r3, r3, r5
   1c8a0:	str	r3, [sp]
   1c8a4:	b	1c85c <GetDataSlab+0x758>
   1c8a8:	mla	r2, r2, r3, r1
   1c8ac:	ldr	r1, [sp, #4]
   1c8b0:	mul	r3, ip, r3
   1c8b4:	lsl	r6, r0, #2
   1c8b8:	lsl	lr, r3, #2
   1c8bc:	bic	r3, r4, r4, asr #31
   1c8c0:	add	r2, r1, r2, lsl #2
   1c8c4:	mov	r1, #0
   1c8c8:	lsl	r5, r3, #2
   1c8cc:	cmp	r9, r1
   1c8d0:	ble	1c230 <GetDataSlab+0x12c>
   1c8d4:	mov	ip, r2
   1c8d8:	mov	r3, #0
   1c8dc:	ldr	r0, [sp]
   1c8e0:	b	1c8f8 <GetDataSlab+0x7f4>
   1c8e4:	ldr	r7, [ip], r6
   1c8e8:	add	r3, r3, #1
   1c8ec:	vmov	s15, r7
   1c8f0:	vcvt.f32.u32	s15, s15
   1c8f4:	vstmia	r0!, {s15}
   1c8f8:	cmp	r4, r3
   1c8fc:	bgt	1c8e4 <GetDataSlab+0x7e0>
   1c900:	ldr	r3, [sp]
   1c904:	add	r2, r2, lr
   1c908:	add	r1, r1, #1
   1c90c:	add	r3, r3, r5
   1c910:	str	r3, [sp]
   1c914:	b	1c8cc <GetDataSlab+0x7c8>
   1c918:	mla	r2, r2, r3, r1
   1c91c:	ldr	r1, [sp, #4]
   1c920:	mul	r3, ip, r3
   1c924:	lsl	r6, r0, #1
   1c928:	lsl	lr, r3, #1
   1c92c:	bic	r3, r4, r4, asr #31
   1c930:	add	r2, r1, r2, lsl #1
   1c934:	mov	r1, #0
   1c938:	lsl	r5, r3, #2
   1c93c:	cmp	r9, r1
   1c940:	ble	1c230 <GetDataSlab+0x12c>
   1c944:	mov	ip, r2
   1c948:	mov	r3, #0
   1c94c:	ldr	r0, [sp]
   1c950:	b	1c968 <GetDataSlab+0x864>
   1c954:	ldrsh	r7, [ip], r6
   1c958:	add	r3, r3, #1
   1c95c:	vmov	s15, r7
   1c960:	vcvt.f32.s32	s15, s15
   1c964:	vstmia	r0!, {s15}
   1c968:	cmp	r4, r3
   1c96c:	bgt	1c954 <GetDataSlab+0x850>
   1c970:	ldr	r3, [sp]
   1c974:	add	r2, r2, lr
   1c978:	add	r1, r1, #1
   1c97c:	add	r3, r3, r5
   1c980:	str	r3, [sp]
   1c984:	b	1c93c <GetDataSlab+0x838>
   1c988:	mla	r2, r2, r3, r1
   1c98c:	ldr	r1, [sp, #4]
   1c990:	mul	r3, ip, r3
   1c994:	lsl	r6, r0, #1
   1c998:	lsl	lr, r3, #1
   1c99c:	bic	r3, r4, r4, asr #31
   1c9a0:	add	r2, r1, r2, lsl #1
   1c9a4:	mov	r1, #0
   1c9a8:	lsl	r5, r3, #2
   1c9ac:	cmp	r9, r1
   1c9b0:	ble	1c230 <GetDataSlab+0x12c>
   1c9b4:	mov	ip, r2
   1c9b8:	mov	r3, #0
   1c9bc:	ldr	r0, [sp]
   1c9c0:	b	1c9d8 <GetDataSlab+0x8d4>
   1c9c4:	ldrh	r7, [ip], r6
   1c9c8:	add	r3, r3, #1
   1c9cc:	vmov	s15, r7
   1c9d0:	vcvt.f32.u32	s15, s15
   1c9d4:	vstmia	r0!, {s15}
   1c9d8:	cmp	r4, r3
   1c9dc:	bgt	1c9c4 <GetDataSlab+0x8c0>
   1c9e0:	ldr	r3, [sp]
   1c9e4:	add	r2, r2, lr
   1c9e8:	add	r1, r1, #1
   1c9ec:	add	r3, r3, r5
   1c9f0:	str	r3, [sp]
   1c9f4:	b	1c9ac <GetDataSlab+0x8a8>
   1c9f8:	mla	r2, r2, r3, r1
   1c9fc:	ldr	r1, [sp, #4]
   1ca00:	mul	r5, ip, r3
   1ca04:	bic	r3, r4, r4, asr #31
   1ca08:	lsl	r6, r3, #2
   1ca0c:	add	r2, r1, r2
   1ca10:	mov	r1, #0
   1ca14:	cmp	r9, r1
   1ca18:	ble	1c230 <GetDataSlab+0x12c>
   1ca1c:	mov	lr, r2
   1ca20:	mov	r3, #0
   1ca24:	ldr	ip, [sp]
   1ca28:	b	1ca40 <GetDataSlab+0x93c>
   1ca2c:	ldrsb	r7, [lr], r0
   1ca30:	add	r3, r3, #1
   1ca34:	vmov	s15, r7
   1ca38:	vcvt.f32.s32	s15, s15
   1ca3c:	vstmia	ip!, {s15}
   1ca40:	cmp	r4, r3
   1ca44:	bgt	1ca2c <GetDataSlab+0x928>
   1ca48:	ldr	r3, [sp]
   1ca4c:	add	r2, r2, r5
   1ca50:	add	r1, r1, #1
   1ca54:	add	r3, r3, r6
   1ca58:	str	r3, [sp]
   1ca5c:	b	1ca14 <GetDataSlab+0x910>
   1ca60:	mla	r2, r2, r3, r1
   1ca64:	ldr	r1, [sp, #4]
   1ca68:	mul	r5, ip, r3
   1ca6c:	bic	r3, r4, r4, asr #31
   1ca70:	lsl	r6, r3, #2
   1ca74:	add	r2, r1, r2
   1ca78:	mov	r1, #0
   1ca7c:	cmp	r9, r1
   1ca80:	ble	1c230 <GetDataSlab+0x12c>
   1ca84:	mov	lr, r2
   1ca88:	mov	r3, #0
   1ca8c:	ldr	ip, [sp]
   1ca90:	b	1caa8 <GetDataSlab+0x9a4>
   1ca94:	ldrb	r7, [lr], r0
   1ca98:	add	r3, r3, #1
   1ca9c:	vmov	s15, r7
   1caa0:	vcvt.f32.u32	s15, s15
   1caa4:	vstmia	ip!, {s15}
   1caa8:	cmp	r4, r3
   1caac:	bgt	1ca94 <GetDataSlab+0x990>
   1cab0:	ldr	r3, [sp]
   1cab4:	add	r2, r2, r5
   1cab8:	add	r1, r1, #1
   1cabc:	add	r3, r3, r6
   1cac0:	str	r3, [sp]
   1cac4:	b	1ca7c <GetDataSlab+0x978>
   1cac8:	cmp	r5, #12
   1cacc:	bne	1cb4c <GetDataSlab+0xa48>
   1cad0:	mla	r2, r2, r3, r1
   1cad4:	ldr	r1, [sp, #4]
   1cad8:	mov	r8, #0
   1cadc:	mul	r3, ip, r3
   1cae0:	lsl	fp, r3, #3
   1cae4:	lsl	r3, r0, #3
   1cae8:	add	r7, r1, r2, lsl #3
   1caec:	str	r3, [sp, #8]
   1caf0:	bic	r3, r4, r4, asr #31
   1caf4:	lsl	r3, r3, #2
   1caf8:	str	r3, [sp, #4]
   1cafc:	cmp	r9, r8
   1cb00:	ble	1c230 <GetDataSlab+0x12c>
   1cb04:	mov	r6, r7
   1cb08:	mov	r5, #0
   1cb0c:	ldr	sl, [sp]
   1cb10:	b	1cb2c <GetDataSlab+0xa28>
   1cb14:	ldrd	r0, [r6]
   1cb18:	add	r5, r5, #1
   1cb1c:	bl	3e764 <__aeabi_l2f>
   1cb20:	ldr	r3, [sp, #8]
   1cb24:	str	r0, [sl], #4
   1cb28:	add	r6, r6, r3
   1cb2c:	cmp	r4, r5
   1cb30:	bgt	1cb14 <GetDataSlab+0xa10>
   1cb34:	ldrd	r2, [sp]
   1cb38:	add	r7, r7, fp
   1cb3c:	add	r8, r8, #1
   1cb40:	add	r3, r3, r2
   1cb44:	str	r3, [sp]
   1cb48:	b	1cafc <GetDataSlab+0x9f8>
   1cb4c:	cmp	r5, #13
   1cb50:	bne	3236c <GetDataSlab+0x16268>
   1cb54:	mla	r2, r2, r3, r1
   1cb58:	ldr	r1, [sp, #4]
   1cb5c:	mov	r8, #0
   1cb60:	mul	r3, ip, r3
   1cb64:	lsl	fp, r3, #3
   1cb68:	lsl	r3, r0, #3
   1cb6c:	add	r7, r1, r2, lsl #3
   1cb70:	str	r3, [sp, #8]
   1cb74:	bic	r3, r4, r4, asr #31
   1cb78:	lsl	r3, r3, #2
   1cb7c:	str	r3, [sp, #4]
   1cb80:	cmp	r9, r8
   1cb84:	ble	1c230 <GetDataSlab+0x12c>
   1cb88:	mov	r6, r7
   1cb8c:	mov	r5, #0
   1cb90:	ldr	sl, [sp]
   1cb94:	b	1cbb0 <GetDataSlab+0xaac>
   1cb98:	ldrd	r0, [r6]
   1cb9c:	add	r5, r5, #1
   1cba0:	bl	3e754 <__aeabi_ul2f>
   1cba4:	ldr	r3, [sp, #8]
   1cba8:	str	r0, [sl], #4
   1cbac:	add	r6, r6, r3
   1cbb0:	cmp	r4, r5
   1cbb4:	bgt	1cb98 <GetDataSlab+0xa94>
   1cbb8:	ldrd	r2, [sp]
   1cbbc:	add	r7, r7, fp
   1cbc0:	add	r8, r8, #1
   1cbc4:	add	r3, r3, r2
   1cbc8:	str	r3, [sp]
   1cbcc:	b	1cb80 <GetDataSlab+0xa7c>
   1cbd0:	sub	lr, r5, #1
   1cbd4:	cmp	lr, #8
   1cbd8:	addls	pc, pc, lr, lsl #2
   1cbdc:	b	1cf7c <GetDataSlab+0xe78>
   1cbe0:	b	1ceb4 <GetDataSlab+0xdb0>
   1cbe4:	b	1cf18 <GetDataSlab+0xe14>
   1cbe8:	b	1cddc <GetDataSlab+0xcd8>
   1cbec:	b	1ce48 <GetDataSlab+0xd44>
   1cbf0:	b	1ccfc <GetDataSlab+0xbf8>
   1cbf4:	b	1cd68 <GetDataSlab+0xc64>
   1cbf8:	b	1cc80 <GetDataSlab+0xb7c>
   1cbfc:	b	1cf7c <GetDataSlab+0xe78>
   1cc00:	b	1cc04 <GetDataSlab+0xb00>
   1cc04:	mla	r2, r2, r3, r1
   1cc08:	ldr	r1, [sp, #4]
   1cc0c:	mov	r8, #0
   1cc10:	mul	r3, ip, r3
   1cc14:	lsl	fp, r3, #3
   1cc18:	lsl	r3, r0, #3
   1cc1c:	add	r7, r1, r2, lsl #3
   1cc20:	str	r3, [sp, #8]
   1cc24:	bic	r3, r4, r4, asr #31
   1cc28:	lsl	r3, r3, #3
   1cc2c:	str	r3, [sp, #4]
   1cc30:	cmp	r9, r8
   1cc34:	ble	1c230 <GetDataSlab+0x12c>
   1cc38:	mov	r6, r7
   1cc3c:	mov	r5, #0
   1cc40:	ldr	sl, [sp]
   1cc44:	b	1cc60 <GetDataSlab+0xb5c>
   1cc48:	ldrd	r0, [r6]
   1cc4c:	add	r5, r5, #1
   1cc50:	bl	3e80c <__aeabi_d2lz>
   1cc54:	ldr	r3, [sp, #8]
   1cc58:	strd	r0, [sl], #8
   1cc5c:	add	r6, r6, r3
   1cc60:	cmp	r4, r5
   1cc64:	bgt	1cc48 <GetDataSlab+0xb44>
   1cc68:	ldrd	r2, [sp]
   1cc6c:	add	r7, r7, fp
   1cc70:	add	r8, r8, #1
   1cc74:	add	r3, r3, r2
   1cc78:	str	r3, [sp]
   1cc7c:	b	1cc30 <GetDataSlab+0xb2c>
   1cc80:	mla	r2, r2, r3, r1
   1cc84:	ldr	r1, [sp, #4]
   1cc88:	mov	r8, #0
   1cc8c:	mul	r3, ip, r3
   1cc90:	lsl	fp, r3, #2
   1cc94:	lsl	r3, r0, #2
   1cc98:	add	r7, r1, r2, lsl #2
   1cc9c:	str	r3, [sp, #8]
   1cca0:	bic	r3, r4, r4, asr #31
   1cca4:	lsl	r3, r3, #3
   1cca8:	str	r3, [sp, #4]
   1ccac:	cmp	r9, r8
   1ccb0:	ble	1c230 <GetDataSlab+0x12c>
   1ccb4:	mov	r6, r7
   1ccb8:	mov	r5, #0
   1ccbc:	ldr	sl, [sp]
   1ccc0:	b	1ccdc <GetDataSlab+0xbd8>
   1ccc4:	ldr	r0, [r6]
   1ccc8:	add	r5, r5, #1
   1cccc:	bl	3e7e0 <__aeabi_f2lz>
   1ccd0:	ldr	r3, [sp, #8]
   1ccd4:	strd	r0, [sl], #8
   1ccd8:	add	r6, r6, r3
   1ccdc:	cmp	r4, r5
   1cce0:	bgt	1ccc4 <GetDataSlab+0xbc0>
   1cce4:	ldrd	r2, [sp]
   1cce8:	add	r7, r7, fp
   1ccec:	add	r8, r8, #1
   1ccf0:	add	r3, r3, r2
   1ccf4:	str	r3, [sp]
   1ccf8:	b	1ccac <GetDataSlab+0xba8>
   1ccfc:	mla	r2, r2, r3, r1
   1cd00:	ldr	r1, [sp, #4]
   1cd04:	mul	r3, ip, r3
   1cd08:	lsl	r8, r0, #2
   1cd0c:	lsl	lr, r3, #2
   1cd10:	bic	r3, r4, r4, asr #31
   1cd14:	add	r2, r1, r2, lsl #2
   1cd18:	mov	r1, #0
   1cd1c:	lsl	r5, r3, #3
   1cd20:	cmp	r9, r1
   1cd24:	ble	1c230 <GetDataSlab+0x12c>
   1cd28:	mov	ip, r2
   1cd2c:	mov	r3, #0
   1cd30:	ldr	r0, [sp]
   1cd34:	b	1cd48 <GetDataSlab+0xc44>
   1cd38:	ldr	r6, [ip], r8
   1cd3c:	add	r3, r3, #1
   1cd40:	asr	r7, r6, #31
   1cd44:	strd	r6, [r0], #8
   1cd48:	cmp	r4, r3
   1cd4c:	bgt	1cd38 <GetDataSlab+0xc34>
   1cd50:	ldr	r3, [sp]
   1cd54:	add	r2, r2, lr
   1cd58:	add	r1, r1, #1
   1cd5c:	add	r3, r3, r5
   1cd60:	str	r3, [sp]
   1cd64:	b	1cd20 <GetDataSlab+0xc1c>
   1cd68:	mla	r2, r2, r3, r1
   1cd6c:	ldr	r1, [sp, #4]
   1cd70:	mul	r3, ip, r3
   1cd74:	lsl	r8, r0, #2
   1cd78:	lsl	ip, r3, #2
   1cd7c:	bic	r3, r4, r4, asr #31
   1cd80:	add	lr, r1, r2, lsl #2
   1cd84:	mov	r2, #0
   1cd88:	lsl	r5, r3, #3
   1cd8c:	mov	r6, r2
   1cd90:	cmp	r9, r2
   1cd94:	ble	1c230 <GetDataSlab+0x12c>
   1cd98:	mov	r0, lr
   1cd9c:	mov	r1, #0
   1cda0:	ldr	r3, [sp]
   1cda4:	b	1cdbc <GetDataSlab+0xcb8>
   1cda8:	ldr	r7, [r0], r8
   1cdac:	add	r1, r1, #1
   1cdb0:	add	r3, r3, #8
   1cdb4:	str	r7, [r3, #-8]
   1cdb8:	str	r6, [r3, #-4]
   1cdbc:	cmp	r4, r1
   1cdc0:	bgt	1cda8 <GetDataSlab+0xca4>
   1cdc4:	ldr	r3, [sp]
   1cdc8:	add	lr, lr, ip
   1cdcc:	add	r2, r2, #1
   1cdd0:	add	r3, r3, r5
   1cdd4:	str	r3, [sp]
   1cdd8:	b	1cd90 <GetDataSlab+0xc8c>
   1cddc:	mla	r2, r2, r3, r1
   1cde0:	ldr	r1, [sp, #4]
   1cde4:	mul	r3, ip, r3
   1cde8:	lsl	r8, r0, #1
   1cdec:	lsl	lr, r3, #1
   1cdf0:	bic	r3, r4, r4, asr #31
   1cdf4:	add	r2, r1, r2, lsl #1
   1cdf8:	mov	r1, #0
   1cdfc:	lsl	r5, r3, #3
   1ce00:	cmp	r9, r1
   1ce04:	ble	1c230 <GetDataSlab+0x12c>
   1ce08:	mov	ip, r2
   1ce0c:	mov	r3, #0
   1ce10:	ldr	r0, [sp]
   1ce14:	b	1ce28 <GetDataSlab+0xd24>
   1ce18:	ldrsh	r6, [ip], r8
   1ce1c:	add	r3, r3, #1
   1ce20:	asr	r7, r6, #31
   1ce24:	strd	r6, [r0], #8
   1ce28:	cmp	r4, r3
   1ce2c:	bgt	1ce18 <GetDataSlab+0xd14>
   1ce30:	ldr	r3, [sp]
   1ce34:	add	r2, r2, lr
   1ce38:	add	r1, r1, #1
   1ce3c:	add	r3, r3, r5
   1ce40:	str	r3, [sp]
   1ce44:	b	1ce00 <GetDataSlab+0xcfc>
   1ce48:	mla	r2, r2, r3, r1
   1ce4c:	ldr	r1, [sp, #4]
   1ce50:	mul	r3, ip, r3
   1ce54:	lsl	r8, r0, #1
   1ce58:	lsl	lr, r3, #1
   1ce5c:	bic	r3, r4, r4, asr #31
   1ce60:	add	r2, r1, r2, lsl #1
   1ce64:	mov	r1, #0
   1ce68:	lsl	r5, r3, #3
   1ce6c:	cmp	r9, r1
   1ce70:	ble	1c230 <GetDataSlab+0x12c>
   1ce74:	mov	ip, r2
   1ce78:	mov	r3, #0
   1ce7c:	ldr	r0, [sp]
   1ce80:	b	1ce94 <GetDataSlab+0xd90>
   1ce84:	ldrh	r6, [ip], r8
   1ce88:	mov	r7, #0
   1ce8c:	add	r3, r3, #1
   1ce90:	strd	r6, [r0], #8
   1ce94:	cmp	r4, r3
   1ce98:	bgt	1ce84 <GetDataSlab+0xd80>
   1ce9c:	ldr	r3, [sp]
   1cea0:	add	r2, r2, lr
   1cea4:	add	r1, r1, #1
   1cea8:	add	r3, r3, r5
   1ceac:	str	r3, [sp]
   1ceb0:	b	1ce6c <GetDataSlab+0xd68>
   1ceb4:	mla	r2, r2, r3, r1
   1ceb8:	ldr	r1, [sp, #4]
   1cebc:	mul	r5, ip, r3
   1cec0:	bic	r3, r4, r4, asr #31
   1cec4:	lsl	r8, r3, #3
   1cec8:	add	r2, r1, r2
   1cecc:	mov	r1, #0
   1ced0:	cmp	r9, r1
   1ced4:	ble	1c230 <GetDataSlab+0x12c>
   1ced8:	mov	lr, r2
   1cedc:	mov	r3, #0
   1cee0:	ldr	ip, [sp]
   1cee4:	b	1cef8 <GetDataSlab+0xdf4>
   1cee8:	ldrsb	r6, [lr], r0
   1ceec:	add	r3, r3, #1
   1cef0:	asr	r7, r6, #31
   1cef4:	strd	r6, [ip], #8
   1cef8:	cmp	r4, r3
   1cefc:	bgt	1cee8 <GetDataSlab+0xde4>
   1cf00:	ldr	r3, [sp]
   1cf04:	add	r2, r2, r5
   1cf08:	add	r1, r1, #1
   1cf0c:	add	r3, r3, r8
   1cf10:	str	r3, [sp]
   1cf14:	b	1ced0 <GetDataSlab+0xdcc>
   1cf18:	mla	r2, r2, r3, r1
   1cf1c:	ldr	r1, [sp, #4]
   1cf20:	mul	r5, ip, r3
   1cf24:	bic	r3, r4, r4, asr #31
   1cf28:	lsl	r8, r3, #3
   1cf2c:	add	r2, r1, r2
   1cf30:	mov	r1, #0
   1cf34:	cmp	r9, r1
   1cf38:	ble	1c230 <GetDataSlab+0x12c>
   1cf3c:	mov	lr, r2
   1cf40:	mov	r3, #0
   1cf44:	ldr	ip, [sp]
   1cf48:	b	1cf5c <GetDataSlab+0xe58>
   1cf4c:	ldrb	r6, [lr], r0
   1cf50:	mov	r7, #0
   1cf54:	add	r3, r3, #1
   1cf58:	strd	r6, [ip], #8
   1cf5c:	cmp	r4, r3
   1cf60:	bgt	1cf4c <GetDataSlab+0xe48>
   1cf64:	ldr	r3, [sp]
   1cf68:	add	r2, r2, r5
   1cf6c:	add	r1, r1, #1
   1cf70:	add	r3, r3, r8
   1cf74:	str	r3, [sp]
   1cf78:	b	1cf34 <GetDataSlab+0xe30>
   1cf7c:	cmp	r5, #12
   1cf80:	bne	1cff0 <GetDataSlab+0xeec>
   1cf84:	mla	r2, r2, r3, r1
   1cf88:	ldr	r1, [sp, #4]
   1cf8c:	mul	r3, ip, r3
   1cf90:	lsl	r6, r0, #3
   1cf94:	mov	r0, #0
   1cf98:	lsl	lr, r3, #3
   1cf9c:	bic	r3, r4, r4, asr #31
   1cfa0:	add	r1, r1, r2, lsl #3
   1cfa4:	lsl	r5, r3, #3
   1cfa8:	cmp	r9, r0
   1cfac:	ble	1c230 <GetDataSlab+0x12c>
   1cfb0:	mov	r3, r1
   1cfb4:	mov	r2, #0
   1cfb8:	ldr	ip, [sp]
   1cfbc:	b	1cfd0 <GetDataSlab+0xecc>
   1cfc0:	ldrd	sl, [r3]
   1cfc4:	add	r2, r2, #1
   1cfc8:	add	r3, r3, r6
   1cfcc:	strd	sl, [ip], #8
   1cfd0:	cmp	r4, r2
   1cfd4:	bgt	1cfc0 <GetDataSlab+0xebc>
   1cfd8:	ldr	r3, [sp]
   1cfdc:	add	r1, r1, lr
   1cfe0:	add	r0, r0, #1
   1cfe4:	add	r3, r3, r5
   1cfe8:	str	r3, [sp]
   1cfec:	b	1cfa8 <GetDataSlab+0xea4>
   1cff0:	cmp	r5, #13
   1cff4:	bne	3236c <GetDataSlab+0x16268>
   1cff8:	mla	r2, r2, r3, r1
   1cffc:	ldr	r1, [sp, #4]
   1d000:	mul	r3, ip, r3
   1d004:	lsl	r6, r0, #3
   1d008:	mov	r0, #0
   1d00c:	lsl	lr, r3, #3
   1d010:	bic	r3, r4, r4, asr #31
   1d014:	add	r1, r1, r2, lsl #3
   1d018:	lsl	r5, r3, #3
   1d01c:	cmp	r9, r0
   1d020:	ble	1c230 <GetDataSlab+0x12c>
   1d024:	mov	r3, r1
   1d028:	mov	r2, #0
   1d02c:	ldr	ip, [sp]
   1d030:	b	1d044 <GetDataSlab+0xf40>
   1d034:	ldrd	sl, [r3]
   1d038:	add	r2, r2, #1
   1d03c:	add	r3, r3, r6
   1d040:	strd	sl, [ip], #8
   1d044:	cmp	r4, r2
   1d048:	bgt	1d034 <GetDataSlab+0xf30>
   1d04c:	ldr	r3, [sp]
   1d050:	add	r1, r1, lr
   1d054:	add	r0, r0, #1
   1d058:	add	r3, r3, r5
   1d05c:	str	r3, [sp]
   1d060:	b	1d01c <GetDataSlab+0xf18>
   1d064:	sub	lr, r5, #1
   1d068:	cmp	lr, #8
   1d06c:	addls	pc, pc, lr, lsl #2
   1d070:	b	1d414 <GetDataSlab+0x1310>
   1d074:	b	1d34c <GetDataSlab+0x1248>
   1d078:	b	1d3b0 <GetDataSlab+0x12ac>
   1d07c:	b	1d274 <GetDataSlab+0x1170>
   1d080:	b	1d2e0 <GetDataSlab+0x11dc>
   1d084:	b	1d194 <GetDataSlab+0x1090>
   1d088:	b	1d200 <GetDataSlab+0x10fc>
   1d08c:	b	1d114 <GetDataSlab+0x1010>
   1d090:	b	1d414 <GetDataSlab+0x1310>
   1d094:	b	1d098 <GetDataSlab+0xf94>
   1d098:	mla	r2, r2, r3, r1
   1d09c:	ldr	r1, [sp, #4]
   1d0a0:	mov	r8, #0
   1d0a4:	mul	r3, ip, r3
   1d0a8:	lsl	fp, r3, #3
   1d0ac:	lsl	r3, r0, #3
   1d0b0:	add	r7, r1, r2, lsl #3
   1d0b4:	str	r3, [sp, #8]
   1d0b8:	bic	r3, r4, r4, asr #31
   1d0bc:	lsl	r3, r3, #3
   1d0c0:	str	r3, [sp, #4]
   1d0c4:	cmp	r9, r8
   1d0c8:	ble	1c230 <GetDataSlab+0x12c>
   1d0cc:	mov	r6, r7
   1d0d0:	mov	r5, #0
   1d0d4:	ldr	sl, [sp]
   1d0d8:	b	1d0f4 <GetDataSlab+0xff0>
   1d0dc:	ldrd	r0, [r6]
   1d0e0:	add	r5, r5, #1
   1d0e4:	bl	3e878 <__aeabi_d2ulz>
   1d0e8:	ldr	r3, [sp, #8]
   1d0ec:	strd	r0, [sl], #8
   1d0f0:	add	r6, r6, r3
   1d0f4:	cmp	r4, r5
   1d0f8:	bgt	1d0dc <GetDataSlab+0xfd8>
   1d0fc:	ldrd	r2, [sp]
   1d100:	add	r7, r7, fp
   1d104:	add	r8, r8, #1
   1d108:	add	r3, r3, r2
   1d10c:	str	r3, [sp]
   1d110:	b	1d0c4 <GetDataSlab+0xfc0>
   1d114:	mla	r2, r2, r3, r1
   1d118:	ldr	r1, [sp, #4]
   1d11c:	mov	r8, #0
   1d120:	mul	r3, ip, r3
   1d124:	lsl	fp, r3, #2
   1d128:	lsl	r3, r0, #2
   1d12c:	add	r7, r1, r2, lsl #2
   1d130:	str	r3, [sp, #4]
   1d134:	bic	r3, r4, r4, asr #31
   1d138:	lsl	r3, r3, #3
   1d13c:	str	r3, [sp, #8]
   1d140:	cmp	r9, r8
   1d144:	ble	1c230 <GetDataSlab+0x12c>
   1d148:	mov	r6, r7
   1d14c:	mov	r5, #0
   1d150:	ldr	sl, [sp]
   1d154:	b	1d170 <GetDataSlab+0x106c>
   1d158:	ldr	r0, [r6]
   1d15c:	add	r5, r5, #1
   1d160:	bl	3e838 <__aeabi_f2ulz>
   1d164:	ldr	r3, [sp, #4]
   1d168:	strd	r0, [sl], #8
   1d16c:	add	r6, r6, r3
   1d170:	cmp	r4, r5
   1d174:	bgt	1d158 <GetDataSlab+0x1054>
   1d178:	ldr	r3, [sp]
   1d17c:	add	r7, r7, fp
   1d180:	add	r8, r8, #1
   1d184:	ldr	r2, [sp, #8]
   1d188:	add	r3, r3, r2
   1d18c:	str	r3, [sp]
   1d190:	b	1d140 <GetDataSlab+0x103c>
   1d194:	mla	r2, r2, r3, r1
   1d198:	ldr	r1, [sp, #4]
   1d19c:	mul	r3, ip, r3
   1d1a0:	lsl	r8, r0, #2
   1d1a4:	lsl	lr, r3, #2
   1d1a8:	bic	r3, r4, r4, asr #31
   1d1ac:	add	r2, r1, r2, lsl #2
   1d1b0:	mov	r1, #0
   1d1b4:	lsl	r5, r3, #3
   1d1b8:	cmp	r9, r1
   1d1bc:	ble	1c230 <GetDataSlab+0x12c>
   1d1c0:	mov	ip, r2
   1d1c4:	mov	r3, #0
   1d1c8:	ldr	r0, [sp]
   1d1cc:	b	1d1e0 <GetDataSlab+0x10dc>
   1d1d0:	ldr	r6, [ip], r8
   1d1d4:	add	r3, r3, #1
   1d1d8:	asr	r7, r6, #31
   1d1dc:	strd	r6, [r0], #8
   1d1e0:	cmp	r4, r3
   1d1e4:	bgt	1d1d0 <GetDataSlab+0x10cc>
   1d1e8:	ldr	r3, [sp]
   1d1ec:	add	r2, r2, lr
   1d1f0:	add	r1, r1, #1
   1d1f4:	add	r3, r3, r5
   1d1f8:	str	r3, [sp]
   1d1fc:	b	1d1b8 <GetDataSlab+0x10b4>
   1d200:	mla	r2, r2, r3, r1
   1d204:	ldr	r1, [sp, #4]
   1d208:	mul	r3, ip, r3
   1d20c:	lsl	r8, r0, #2
   1d210:	lsl	ip, r3, #2
   1d214:	bic	r3, r4, r4, asr #31
   1d218:	add	lr, r1, r2, lsl #2
   1d21c:	mov	r2, #0
   1d220:	lsl	r5, r3, #3
   1d224:	mov	r6, r2
   1d228:	cmp	r9, r2
   1d22c:	ble	1c230 <GetDataSlab+0x12c>
   1d230:	mov	r0, lr
   1d234:	mov	r1, #0
   1d238:	ldr	r3, [sp]
   1d23c:	b	1d254 <GetDataSlab+0x1150>
   1d240:	ldr	r7, [r0], r8
   1d244:	add	r1, r1, #1
   1d248:	add	r3, r3, #8
   1d24c:	str	r7, [r3, #-8]
   1d250:	str	r6, [r3, #-4]
   1d254:	cmp	r4, r1
   1d258:	bgt	1d240 <GetDataSlab+0x113c>
   1d25c:	ldr	r3, [sp]
   1d260:	add	lr, lr, ip
   1d264:	add	r2, r2, #1
   1d268:	add	r3, r3, r5
   1d26c:	str	r3, [sp]
   1d270:	b	1d228 <GetDataSlab+0x1124>
   1d274:	mla	r2, r2, r3, r1
   1d278:	ldr	r1, [sp, #4]
   1d27c:	mul	r3, ip, r3
   1d280:	lsl	r8, r0, #1
   1d284:	lsl	lr, r3, #1
   1d288:	bic	r3, r4, r4, asr #31
   1d28c:	add	r2, r1, r2, lsl #1
   1d290:	mov	r1, #0
   1d294:	lsl	r5, r3, #3
   1d298:	cmp	r9, r1
   1d29c:	ble	1c230 <GetDataSlab+0x12c>
   1d2a0:	mov	ip, r2
   1d2a4:	mov	r3, #0
   1d2a8:	ldr	r0, [sp]
   1d2ac:	b	1d2c0 <GetDataSlab+0x11bc>
   1d2b0:	ldrsh	r6, [ip], r8
   1d2b4:	add	r3, r3, #1
   1d2b8:	asr	r7, r6, #31
   1d2bc:	strd	r6, [r0], #8
   1d2c0:	cmp	r4, r3
   1d2c4:	bgt	1d2b0 <GetDataSlab+0x11ac>
   1d2c8:	ldr	r3, [sp]
   1d2cc:	add	r2, r2, lr
   1d2d0:	add	r1, r1, #1
   1d2d4:	add	r3, r3, r5
   1d2d8:	str	r3, [sp]
   1d2dc:	b	1d298 <GetDataSlab+0x1194>
   1d2e0:	mla	r2, r2, r3, r1
   1d2e4:	ldr	r1, [sp, #4]
   1d2e8:	mul	r3, ip, r3
   1d2ec:	lsl	r8, r0, #1
   1d2f0:	lsl	lr, r3, #1
   1d2f4:	bic	r3, r4, r4, asr #31
   1d2f8:	add	r2, r1, r2, lsl #1
   1d2fc:	mov	r1, #0
   1d300:	lsl	r5, r3, #3
   1d304:	cmp	r9, r1
   1d308:	ble	1c230 <GetDataSlab+0x12c>
   1d30c:	mov	ip, r2
   1d310:	mov	r3, #0
   1d314:	ldr	r0, [sp]
   1d318:	b	1d32c <GetDataSlab+0x1228>
   1d31c:	ldrh	r6, [ip], r8
   1d320:	mov	r7, #0
   1d324:	add	r3, r3, #1
   1d328:	strd	r6, [r0], #8
   1d32c:	cmp	r4, r3
   1d330:	bgt	1d31c <GetDataSlab+0x1218>
   1d334:	ldr	r3, [sp]
   1d338:	add	r2, r2, lr
   1d33c:	add	r1, r1, #1
   1d340:	add	r3, r3, r5
   1d344:	str	r3, [sp]
   1d348:	b	1d304 <GetDataSlab+0x1200>
   1d34c:	mla	r2, r2, r3, r1
   1d350:	ldr	r1, [sp, #4]
   1d354:	mul	r5, ip, r3
   1d358:	bic	r3, r4, r4, asr #31
   1d35c:	lsl	r8, r3, #3
   1d360:	add	r2, r1, r2
   1d364:	mov	r1, #0
   1d368:	cmp	r9, r1
   1d36c:	ble	1c230 <GetDataSlab+0x12c>
   1d370:	mov	lr, r2
   1d374:	mov	r3, #0
   1d378:	ldr	ip, [sp]
   1d37c:	b	1d390 <GetDataSlab+0x128c>
   1d380:	ldrsb	r6, [lr], r0
   1d384:	add	r3, r3, #1
   1d388:	asr	r7, r6, #31
   1d38c:	strd	r6, [ip], #8
   1d390:	cmp	r4, r3
   1d394:	bgt	1d380 <GetDataSlab+0x127c>
   1d398:	ldr	r3, [sp]
   1d39c:	add	r2, r2, r5
   1d3a0:	add	r1, r1, #1
   1d3a4:	add	r3, r3, r8
   1d3a8:	str	r3, [sp]
   1d3ac:	b	1d368 <GetDataSlab+0x1264>
   1d3b0:	mla	r2, r2, r3, r1
   1d3b4:	ldr	r1, [sp, #4]
   1d3b8:	mul	r5, ip, r3
   1d3bc:	bic	r3, r4, r4, asr #31
   1d3c0:	lsl	r8, r3, #3
   1d3c4:	add	r2, r1, r2
   1d3c8:	mov	r1, #0
   1d3cc:	cmp	r9, r1
   1d3d0:	ble	1c230 <GetDataSlab+0x12c>
   1d3d4:	mov	lr, r2
   1d3d8:	mov	r3, #0
   1d3dc:	ldr	ip, [sp]
   1d3e0:	b	1d3f4 <GetDataSlab+0x12f0>
   1d3e4:	ldrb	r6, [lr], r0
   1d3e8:	mov	r7, #0
   1d3ec:	add	r3, r3, #1
   1d3f0:	strd	r6, [ip], #8
   1d3f4:	cmp	r4, r3
   1d3f8:	bgt	1d3e4 <GetDataSlab+0x12e0>
   1d3fc:	ldr	r3, [sp]
   1d400:	add	r2, r2, r5
   1d404:	add	r1, r1, #1
   1d408:	add	r3, r3, r8
   1d40c:	str	r3, [sp]
   1d410:	b	1d3cc <GetDataSlab+0x12c8>
   1d414:	cmp	r5, #12
   1d418:	bne	1d488 <GetDataSlab+0x1384>
   1d41c:	mla	r2, r2, r3, r1
   1d420:	ldr	r1, [sp, #4]
   1d424:	mul	r3, ip, r3
   1d428:	lsl	r6, r0, #3
   1d42c:	mov	r0, #0
   1d430:	lsl	lr, r3, #3
   1d434:	bic	r3, r4, r4, asr #31
   1d438:	add	r1, r1, r2, lsl #3
   1d43c:	lsl	r5, r3, #3
   1d440:	cmp	r9, r0
   1d444:	ble	1c230 <GetDataSlab+0x12c>
   1d448:	mov	r3, r1
   1d44c:	mov	r2, #0
   1d450:	ldr	ip, [sp]
   1d454:	b	1d468 <GetDataSlab+0x1364>
   1d458:	ldrd	sl, [r3]
   1d45c:	add	r2, r2, #1
   1d460:	add	r3, r3, r6
   1d464:	strd	sl, [ip], #8
   1d468:	cmp	r4, r2
   1d46c:	bgt	1d458 <GetDataSlab+0x1354>
   1d470:	ldr	r3, [sp]
   1d474:	add	r1, r1, lr
   1d478:	add	r0, r0, #1
   1d47c:	add	r3, r3, r5
   1d480:	str	r3, [sp]
   1d484:	b	1d440 <GetDataSlab+0x133c>
   1d488:	cmp	r5, #13
   1d48c:	bne	3236c <GetDataSlab+0x16268>
   1d490:	mla	r2, r2, r3, r1
   1d494:	ldr	r1, [sp, #4]
   1d498:	mul	r3, ip, r3
   1d49c:	lsl	r6, r0, #3
   1d4a0:	mov	r0, #0
   1d4a4:	lsl	lr, r3, #3
   1d4a8:	bic	r3, r4, r4, asr #31
   1d4ac:	add	r1, r1, r2, lsl #3
   1d4b0:	lsl	r5, r3, #3
   1d4b4:	cmp	r9, r0
   1d4b8:	ble	1c230 <GetDataSlab+0x12c>
   1d4bc:	mov	r3, r1
   1d4c0:	mov	r2, #0
   1d4c4:	ldr	ip, [sp]
   1d4c8:	b	1d4dc <GetDataSlab+0x13d8>
   1d4cc:	ldrd	sl, [r3]
   1d4d0:	add	r2, r2, #1
   1d4d4:	add	r3, r3, r6
   1d4d8:	strd	sl, [ip], #8
   1d4dc:	cmp	r4, r2
   1d4e0:	bgt	1d4cc <GetDataSlab+0x13c8>
   1d4e4:	ldr	r3, [sp]
   1d4e8:	add	r1, r1, lr
   1d4ec:	add	r0, r0, #1
   1d4f0:	add	r3, r3, r5
   1d4f4:	str	r3, [sp]
   1d4f8:	b	1d4b4 <GetDataSlab+0x13b0>
   1d4fc:	sub	r0, r5, #1
   1d500:	cmp	r0, #8
   1d504:	addls	pc, pc, r0, lsl #2
   1d508:	b	1d8a0 <GetDataSlab+0x179c>
   1d50c:	b	1d7d0 <GetDataSlab+0x16cc>
   1d510:	b	1d838 <GetDataSlab+0x1734>
   1d514:	b	1d6f0 <GetDataSlab+0x15ec>
   1d518:	b	1d760 <GetDataSlab+0x165c>
   1d51c:	b	1d618 <GetDataSlab+0x1514>
   1d520:	b	1d684 <GetDataSlab+0x1580>
   1d524:	b	1d5a4 <GetDataSlab+0x14a0>
   1d528:	b	1d8a0 <GetDataSlab+0x179c>
   1d52c:	b	1d530 <GetDataSlab+0x142c>
   1d530:	mla	r3, r2, r3, r1
   1d534:	ldr	r2, [sp, #4]
   1d538:	add	r1, r2, r3, lsl #3
   1d53c:	mov	r2, #0
   1d540:	ldr	r3, [sp, #204]	; 0xcc
   1d544:	ldr	r3, [r3, #4]
   1d548:	cmp	r3, r2
   1d54c:	ble	1c230 <GetDataSlab+0x12c>
   1d550:	mov	r3, #0
   1d554:	b	1d57c <GetDataSlab+0x1478>
   1d558:	ldr	r0, [sl]
   1d55c:	ldr	ip, [sp]
   1d560:	mul	r0, r0, r3
   1d564:	add	r3, r3, #1
   1d568:	add	r0, r1, r0, lsl #3
   1d56c:	vldr	d7, [r0]
   1d570:	vcvt.s32.f64	s15, d7
   1d574:	vstmia	ip!, {s15}
   1d578:	str	ip, [sp]
   1d57c:	ldr	r0, [sp, #204]	; 0xcc
   1d580:	ldr	r0, [r0]
   1d584:	cmp	r0, r3
   1d588:	bgt	1d558 <GetDataSlab+0x1454>
   1d58c:	ldr	r0, [fp]
   1d590:	add	r2, r2, #1
   1d594:	ldr	r3, [sl, #4]
   1d598:	mul	r3, r0, r3
   1d59c:	add	r1, r1, r3, lsl #3
   1d5a0:	b	1d540 <GetDataSlab+0x143c>
   1d5a4:	mla	r3, r2, r3, r1
   1d5a8:	ldr	r2, [sp, #4]
   1d5ac:	add	r1, r2, r3, lsl #2
   1d5b0:	mov	r2, #0
   1d5b4:	ldr	r3, [sp, #204]	; 0xcc
   1d5b8:	ldr	r3, [r3, #4]
   1d5bc:	cmp	r3, r2
   1d5c0:	ble	1c230 <GetDataSlab+0x12c>
   1d5c4:	mov	r3, #0
   1d5c8:	b	1d5f0 <GetDataSlab+0x14ec>
   1d5cc:	ldr	r0, [sl]
   1d5d0:	ldr	ip, [sp]
   1d5d4:	mul	r0, r0, r3
   1d5d8:	add	r3, r3, #1
   1d5dc:	add	r0, r1, r0, lsl #2
   1d5e0:	vldr	s15, [r0]
   1d5e4:	vcvt.s32.f32	s15, s15
   1d5e8:	vstmia	ip!, {s15}
   1d5ec:	str	ip, [sp]
   1d5f0:	ldr	r0, [sp, #204]	; 0xcc
   1d5f4:	ldr	r0, [r0]
   1d5f8:	cmp	r0, r3
   1d5fc:	bgt	1d5cc <GetDataSlab+0x14c8>
   1d600:	ldr	r0, [fp]
   1d604:	add	r2, r2, #1
   1d608:	ldr	r3, [sl, #4]
   1d60c:	mul	r3, r0, r3
   1d610:	add	r1, r1, r3, lsl #2
   1d614:	b	1d5b4 <GetDataSlab+0x14b0>
   1d618:	mla	r3, r2, r3, r1
   1d61c:	ldr	r2, [sp, #4]
   1d620:	add	r1, r2, r3, lsl #2
   1d624:	mov	r2, #0
   1d628:	ldr	r3, [sp, #204]	; 0xcc
   1d62c:	ldr	r3, [r3, #4]
   1d630:	cmp	r3, r2
   1d634:	ble	1c230 <GetDataSlab+0x12c>
   1d638:	mov	r3, #0
   1d63c:	b	1d65c <GetDataSlab+0x1558>
   1d640:	ldr	r0, [sl]
   1d644:	ldr	ip, [sp]
   1d648:	mul	r0, r0, r3
   1d64c:	add	r3, r3, #1
   1d650:	ldr	r0, [r1, r0, lsl #2]
   1d654:	str	r0, [ip], #4
   1d658:	str	ip, [sp]
   1d65c:	ldr	r0, [sp, #204]	; 0xcc
   1d660:	ldr	r0, [r0]
   1d664:	cmp	r0, r3
   1d668:	bgt	1d640 <GetDataSlab+0x153c>
   1d66c:	ldr	r0, [fp]
   1d670:	add	r2, r2, #1
   1d674:	ldr	r3, [sl, #4]
   1d678:	mul	r3, r0, r3
   1d67c:	add	r1, r1, r3, lsl #2
   1d680:	b	1d628 <GetDataSlab+0x1524>
   1d684:	mla	r3, r2, r3, r1
   1d688:	ldr	r2, [sp, #4]
   1d68c:	add	r1, r2, r3, lsl #2
   1d690:	mov	r2, #0
   1d694:	ldr	r3, [sp, #204]	; 0xcc
   1d698:	ldr	r3, [r3, #4]
   1d69c:	cmp	r3, r2
   1d6a0:	ble	1c230 <GetDataSlab+0x12c>
   1d6a4:	mov	r3, #0
   1d6a8:	b	1d6c8 <GetDataSlab+0x15c4>
   1d6ac:	ldr	r0, [sl]
   1d6b0:	ldr	ip, [sp]
   1d6b4:	mul	r0, r0, r3
   1d6b8:	add	r3, r3, #1
   1d6bc:	ldr	r0, [r1, r0, lsl #2]
   1d6c0:	str	r0, [ip], #4
   1d6c4:	str	ip, [sp]
   1d6c8:	ldr	r0, [sp, #204]	; 0xcc
   1d6cc:	ldr	r0, [r0]
   1d6d0:	cmp	r0, r3
   1d6d4:	bgt	1d6ac <GetDataSlab+0x15a8>
   1d6d8:	ldr	r0, [fp]
   1d6dc:	add	r2, r2, #1
   1d6e0:	ldr	r3, [sl, #4]
   1d6e4:	mul	r3, r0, r3
   1d6e8:	add	r1, r1, r3, lsl #2
   1d6ec:	b	1d694 <GetDataSlab+0x1590>
   1d6f0:	mla	r3, r2, r3, r1
   1d6f4:	ldr	r2, [sp, #4]
   1d6f8:	add	r1, r2, r3, lsl #1
   1d6fc:	mov	r2, #0
   1d700:	ldr	r3, [sp, #204]	; 0xcc
   1d704:	ldr	r3, [r3, #4]
   1d708:	cmp	r3, r2
   1d70c:	ble	1c230 <GetDataSlab+0x12c>
   1d710:	mov	r3, #0
   1d714:	b	1d738 <GetDataSlab+0x1634>
   1d718:	ldr	r0, [sl]
   1d71c:	ldr	ip, [sp]
   1d720:	mul	r0, r0, r3
   1d724:	add	r3, r3, #1
   1d728:	lsl	r0, r0, #1
   1d72c:	ldrsh	r0, [r1, r0]
   1d730:	str	r0, [ip], #4
   1d734:	str	ip, [sp]
   1d738:	ldr	r0, [sp, #204]	; 0xcc
   1d73c:	ldr	r0, [r0]
   1d740:	cmp	r0, r3
   1d744:	bgt	1d718 <GetDataSlab+0x1614>
   1d748:	ldr	r0, [fp]
   1d74c:	add	r2, r2, #1
   1d750:	ldr	r3, [sl, #4]
   1d754:	mul	r3, r0, r3
   1d758:	add	r1, r1, r3, lsl #1
   1d75c:	b	1d700 <GetDataSlab+0x15fc>
   1d760:	mla	r3, r2, r3, r1
   1d764:	ldr	r2, [sp, #4]
   1d768:	add	r1, r2, r3, lsl #1
   1d76c:	mov	r2, #0
   1d770:	ldr	r3, [sp, #204]	; 0xcc
   1d774:	ldr	r3, [r3, #4]
   1d778:	cmp	r3, r2
   1d77c:	ble	1c230 <GetDataSlab+0x12c>
   1d780:	mov	r3, #0
   1d784:	b	1d7a8 <GetDataSlab+0x16a4>
   1d788:	ldr	r0, [sl]
   1d78c:	ldr	ip, [sp]
   1d790:	mul	r0, r0, r3
   1d794:	add	r3, r3, #1
   1d798:	lsl	r0, r0, #1
   1d79c:	ldrh	r0, [r1, r0]
   1d7a0:	str	r0, [ip], #4
   1d7a4:	str	ip, [sp]
   1d7a8:	ldr	r0, [sp, #204]	; 0xcc
   1d7ac:	ldr	r0, [r0]
   1d7b0:	cmp	r0, r3
   1d7b4:	bgt	1d788 <GetDataSlab+0x1684>
   1d7b8:	ldr	r0, [fp]
   1d7bc:	add	r2, r2, #1
   1d7c0:	ldr	r3, [sl, #4]
   1d7c4:	mul	r3, r0, r3
   1d7c8:	add	r1, r1, r3, lsl #1
   1d7cc:	b	1d770 <GetDataSlab+0x166c>
   1d7d0:	mla	r3, r2, r3, r1
   1d7d4:	ldr	r2, [sp, #4]
   1d7d8:	add	r1, r2, r3
   1d7dc:	mov	r2, #0
   1d7e0:	ldr	r3, [sp, #204]	; 0xcc
   1d7e4:	ldr	r3, [r3, #4]
   1d7e8:	cmp	r3, r2
   1d7ec:	ble	1c230 <GetDataSlab+0x12c>
   1d7f0:	mov	r3, #0
   1d7f4:	b	1d814 <GetDataSlab+0x1710>
   1d7f8:	ldr	r0, [sl]
   1d7fc:	ldr	ip, [sp]
   1d800:	mul	r0, r0, r3
   1d804:	add	r3, r3, #1
   1d808:	ldrsb	r0, [r1, r0]
   1d80c:	str	r0, [ip], #4
   1d810:	str	ip, [sp]
   1d814:	ldr	r0, [sp, #204]	; 0xcc
   1d818:	ldr	r0, [r0]
   1d81c:	cmp	r0, r3
   1d820:	bgt	1d7f8 <GetDataSlab+0x16f4>
   1d824:	ldr	r0, [fp]
   1d828:	add	r2, r2, #1
   1d82c:	ldr	r3, [sl, #4]
   1d830:	mla	r1, r0, r3, r1
   1d834:	b	1d7e0 <GetDataSlab+0x16dc>
   1d838:	mla	r3, r2, r3, r1
   1d83c:	ldr	r2, [sp, #4]
   1d840:	add	r1, r2, r3
   1d844:	mov	r2, #0
   1d848:	ldr	r3, [sp, #204]	; 0xcc
   1d84c:	ldr	r3, [r3, #4]
   1d850:	cmp	r3, r2
   1d854:	ble	1c230 <GetDataSlab+0x12c>
   1d858:	mov	r3, #0
   1d85c:	b	1d87c <GetDataSlab+0x1778>
   1d860:	ldr	r0, [sl]
   1d864:	ldr	ip, [sp]
   1d868:	mul	r0, r0, r3
   1d86c:	add	r3, r3, #1
   1d870:	ldrb	r0, [r1, r0]
   1d874:	str	r0, [ip], #4
   1d878:	str	ip, [sp]
   1d87c:	ldr	r0, [sp, #204]	; 0xcc
   1d880:	ldr	r0, [r0]
   1d884:	cmp	r0, r3
   1d888:	bgt	1d860 <GetDataSlab+0x175c>
   1d88c:	ldr	r0, [fp]
   1d890:	add	r2, r2, #1
   1d894:	ldr	r3, [sl, #4]
   1d898:	mla	r1, r0, r3, r1
   1d89c:	b	1d848 <GetDataSlab+0x1744>
   1d8a0:	cmp	r5, #12
   1d8a4:	bne	1d914 <GetDataSlab+0x1810>
   1d8a8:	mla	r3, r2, r3, r1
   1d8ac:	ldr	r2, [sp, #4]
   1d8b0:	add	r1, r2, r3, lsl #3
   1d8b4:	mov	r2, #0
   1d8b8:	ldr	r3, [sp, #204]	; 0xcc
   1d8bc:	ldr	r3, [r3, #4]
   1d8c0:	cmp	r3, r2
   1d8c4:	ble	1c230 <GetDataSlab+0x12c>
   1d8c8:	mov	r3, #0
   1d8cc:	b	1d8ec <GetDataSlab+0x17e8>
   1d8d0:	ldr	r0, [sl]
   1d8d4:	ldr	ip, [sp]
   1d8d8:	mul	r0, r0, r3
   1d8dc:	add	r3, r3, #1
   1d8e0:	ldr	r0, [r1, r0, lsl #3]
   1d8e4:	str	r0, [ip], #4
   1d8e8:	str	ip, [sp]
   1d8ec:	ldr	r0, [sp, #204]	; 0xcc
   1d8f0:	ldr	r0, [r0]
   1d8f4:	cmp	r0, r3
   1d8f8:	bgt	1d8d0 <GetDataSlab+0x17cc>
   1d8fc:	ldr	r0, [fp]
   1d900:	add	r2, r2, #1
   1d904:	ldr	r3, [sl, #4]
   1d908:	mul	r3, r0, r3
   1d90c:	add	r1, r1, r3, lsl #3
   1d910:	b	1d8b8 <GetDataSlab+0x17b4>
   1d914:	cmp	r5, #13
   1d918:	bne	3236c <GetDataSlab+0x16268>
   1d91c:	mla	r3, r2, r3, r1
   1d920:	ldr	r2, [sp, #4]
   1d924:	add	r1, r2, r3, lsl #3
   1d928:	mov	r2, #0
   1d92c:	ldr	r3, [sp, #204]	; 0xcc
   1d930:	ldr	r3, [r3, #4]
   1d934:	cmp	r3, r2
   1d938:	ble	1c230 <GetDataSlab+0x12c>
   1d93c:	mov	r3, #0
   1d940:	b	1d960 <GetDataSlab+0x185c>
   1d944:	ldr	r0, [sl]
   1d948:	ldr	ip, [sp]
   1d94c:	mul	r0, r0, r3
   1d950:	add	r3, r3, #1
   1d954:	ldr	r0, [r1, r0, lsl #3]
   1d958:	str	r0, [ip], #4
   1d95c:	str	ip, [sp]
   1d960:	ldr	r0, [sp, #204]	; 0xcc
   1d964:	ldr	r0, [r0]
   1d968:	cmp	r0, r3
   1d96c:	bgt	1d944 <GetDataSlab+0x1840>
   1d970:	ldr	r0, [fp]
   1d974:	add	r2, r2, #1
   1d978:	ldr	r3, [sl, #4]
   1d97c:	mul	r3, r0, r3
   1d980:	add	r1, r1, r3, lsl #3
   1d984:	b	1d92c <GetDataSlab+0x1828>
   1d988:	sub	r0, r5, #1
   1d98c:	cmp	r0, #8
   1d990:	addls	pc, pc, r0, lsl #2
   1d994:	b	1dd2c <GetDataSlab+0x1c28>
   1d998:	b	1dc5c <GetDataSlab+0x1b58>
   1d99c:	b	1dcc4 <GetDataSlab+0x1bc0>
   1d9a0:	b	1db7c <GetDataSlab+0x1a78>
   1d9a4:	b	1dbec <GetDataSlab+0x1ae8>
   1d9a8:	b	1daa4 <GetDataSlab+0x19a0>
   1d9ac:	b	1db10 <GetDataSlab+0x1a0c>
   1d9b0:	b	1da30 <GetDataSlab+0x192c>
   1d9b4:	b	1dd2c <GetDataSlab+0x1c28>
   1d9b8:	b	1d9bc <GetDataSlab+0x18b8>
   1d9bc:	mla	r3, r2, r3, r1
   1d9c0:	ldr	r2, [sp, #4]
   1d9c4:	add	r1, r2, r3, lsl #3
   1d9c8:	mov	r2, #0
   1d9cc:	ldr	r3, [sp, #204]	; 0xcc
   1d9d0:	ldr	r3, [r3, #4]
   1d9d4:	cmp	r3, r2
   1d9d8:	ble	1c230 <GetDataSlab+0x12c>
   1d9dc:	mov	r3, #0
   1d9e0:	b	1da08 <GetDataSlab+0x1904>
   1d9e4:	ldr	r0, [sl]
   1d9e8:	ldr	ip, [sp]
   1d9ec:	mul	r0, r0, r3
   1d9f0:	add	r3, r3, #1
   1d9f4:	add	r0, r1, r0, lsl #3
   1d9f8:	vldr	d7, [r0]
   1d9fc:	vcvt.u32.f64	s15, d7
   1da00:	vstmia	ip!, {s15}
   1da04:	str	ip, [sp]
   1da08:	ldr	r0, [sp, #204]	; 0xcc
   1da0c:	ldr	r0, [r0]
   1da10:	cmp	r0, r3
   1da14:	bgt	1d9e4 <GetDataSlab+0x18e0>
   1da18:	ldr	r0, [fp]
   1da1c:	add	r2, r2, #1
   1da20:	ldr	r3, [sl, #4]
   1da24:	mul	r3, r0, r3
   1da28:	add	r1, r1, r3, lsl #3
   1da2c:	b	1d9cc <GetDataSlab+0x18c8>
   1da30:	mla	r3, r2, r3, r1
   1da34:	ldr	r2, [sp, #4]
   1da38:	add	r1, r2, r3, lsl #2
   1da3c:	mov	r2, #0
   1da40:	ldr	r3, [sp, #204]	; 0xcc
   1da44:	ldr	r3, [r3, #4]
   1da48:	cmp	r3, r2
   1da4c:	ble	1c230 <GetDataSlab+0x12c>
   1da50:	mov	r3, #0
   1da54:	b	1da7c <GetDataSlab+0x1978>
   1da58:	ldr	r0, [sl]
   1da5c:	ldr	ip, [sp]
   1da60:	mul	r0, r0, r3
   1da64:	add	r3, r3, #1
   1da68:	add	r0, r1, r0, lsl #2
   1da6c:	vldr	s15, [r0]
   1da70:	vcvt.u32.f32	s15, s15
   1da74:	vstmia	ip!, {s15}
   1da78:	str	ip, [sp]
   1da7c:	ldr	r0, [sp, #204]	; 0xcc
   1da80:	ldr	r0, [r0]
   1da84:	cmp	r0, r3
   1da88:	bgt	1da58 <GetDataSlab+0x1954>
   1da8c:	ldr	r0, [fp]
   1da90:	add	r2, r2, #1
   1da94:	ldr	r3, [sl, #4]
   1da98:	mul	r3, r0, r3
   1da9c:	add	r1, r1, r3, lsl #2
   1daa0:	b	1da40 <GetDataSlab+0x193c>
   1daa4:	mla	r3, r2, r3, r1
   1daa8:	ldr	r2, [sp, #4]
   1daac:	add	r1, r2, r3, lsl #2
   1dab0:	mov	r2, #0
   1dab4:	ldr	r3, [sp, #204]	; 0xcc
   1dab8:	ldr	r3, [r3, #4]
   1dabc:	cmp	r3, r2
   1dac0:	ble	1c230 <GetDataSlab+0x12c>
   1dac4:	mov	r3, #0
   1dac8:	b	1dae8 <GetDataSlab+0x19e4>
   1dacc:	ldr	r0, [sl]
   1dad0:	ldr	ip, [sp]
   1dad4:	mul	r0, r0, r3
   1dad8:	add	r3, r3, #1
   1dadc:	ldr	r0, [r1, r0, lsl #2]
   1dae0:	str	r0, [ip], #4
   1dae4:	str	ip, [sp]
   1dae8:	ldr	r0, [sp, #204]	; 0xcc
   1daec:	ldr	r0, [r0]
   1daf0:	cmp	r0, r3
   1daf4:	bgt	1dacc <GetDataSlab+0x19c8>
   1daf8:	ldr	r0, [fp]
   1dafc:	add	r2, r2, #1
   1db00:	ldr	r3, [sl, #4]
   1db04:	mul	r3, r0, r3
   1db08:	add	r1, r1, r3, lsl #2
   1db0c:	b	1dab4 <GetDataSlab+0x19b0>
   1db10:	mla	r3, r2, r3, r1
   1db14:	ldr	r2, [sp, #4]
   1db18:	add	r1, r2, r3, lsl #2
   1db1c:	mov	r2, #0
   1db20:	ldr	r3, [sp, #204]	; 0xcc
   1db24:	ldr	r3, [r3, #4]
   1db28:	cmp	r3, r2
   1db2c:	ble	1c230 <GetDataSlab+0x12c>
   1db30:	mov	r3, #0
   1db34:	b	1db54 <GetDataSlab+0x1a50>
   1db38:	ldr	r0, [sl]
   1db3c:	ldr	ip, [sp]
   1db40:	mul	r0, r0, r3
   1db44:	add	r3, r3, #1
   1db48:	ldr	r0, [r1, r0, lsl #2]
   1db4c:	str	r0, [ip], #4
   1db50:	str	ip, [sp]
   1db54:	ldr	r0, [sp, #204]	; 0xcc
   1db58:	ldr	r0, [r0]
   1db5c:	cmp	r0, r3
   1db60:	bgt	1db38 <GetDataSlab+0x1a34>
   1db64:	ldr	r0, [fp]
   1db68:	add	r2, r2, #1
   1db6c:	ldr	r3, [sl, #4]
   1db70:	mul	r3, r0, r3
   1db74:	add	r1, r1, r3, lsl #2
   1db78:	b	1db20 <GetDataSlab+0x1a1c>
   1db7c:	mla	r3, r2, r3, r1
   1db80:	ldr	r2, [sp, #4]
   1db84:	add	r1, r2, r3, lsl #1
   1db88:	mov	r2, #0
   1db8c:	ldr	r3, [sp, #204]	; 0xcc
   1db90:	ldr	r3, [r3, #4]
   1db94:	cmp	r3, r2
   1db98:	ble	1c230 <GetDataSlab+0x12c>
   1db9c:	mov	r3, #0
   1dba0:	b	1dbc4 <GetDataSlab+0x1ac0>
   1dba4:	ldr	r0, [sl]
   1dba8:	ldr	ip, [sp]
   1dbac:	mul	r0, r0, r3
   1dbb0:	add	r3, r3, #1
   1dbb4:	lsl	r0, r0, #1
   1dbb8:	ldrsh	r0, [r1, r0]
   1dbbc:	str	r0, [ip], #4
   1dbc0:	str	ip, [sp]
   1dbc4:	ldr	r0, [sp, #204]	; 0xcc
   1dbc8:	ldr	r0, [r0]
   1dbcc:	cmp	r0, r3
   1dbd0:	bgt	1dba4 <GetDataSlab+0x1aa0>
   1dbd4:	ldr	r0, [fp]
   1dbd8:	add	r2, r2, #1
   1dbdc:	ldr	r3, [sl, #4]
   1dbe0:	mul	r3, r0, r3
   1dbe4:	add	r1, r1, r3, lsl #1
   1dbe8:	b	1db8c <GetDataSlab+0x1a88>
   1dbec:	mla	r3, r2, r3, r1
   1dbf0:	ldr	r2, [sp, #4]
   1dbf4:	add	r1, r2, r3, lsl #1
   1dbf8:	mov	r2, #0
   1dbfc:	ldr	r3, [sp, #204]	; 0xcc
   1dc00:	ldr	r3, [r3, #4]
   1dc04:	cmp	r3, r2
   1dc08:	ble	1c230 <GetDataSlab+0x12c>
   1dc0c:	mov	r3, #0
   1dc10:	b	1dc34 <GetDataSlab+0x1b30>
   1dc14:	ldr	r0, [sl]
   1dc18:	ldr	ip, [sp]
   1dc1c:	mul	r0, r0, r3
   1dc20:	add	r3, r3, #1
   1dc24:	lsl	r0, r0, #1
   1dc28:	ldrh	r0, [r1, r0]
   1dc2c:	str	r0, [ip], #4
   1dc30:	str	ip, [sp]
   1dc34:	ldr	r0, [sp, #204]	; 0xcc
   1dc38:	ldr	r0, [r0]
   1dc3c:	cmp	r0, r3
   1dc40:	bgt	1dc14 <GetDataSlab+0x1b10>
   1dc44:	ldr	r0, [fp]
   1dc48:	add	r2, r2, #1
   1dc4c:	ldr	r3, [sl, #4]
   1dc50:	mul	r3, r0, r3
   1dc54:	add	r1, r1, r3, lsl #1
   1dc58:	b	1dbfc <GetDataSlab+0x1af8>
   1dc5c:	mla	r3, r2, r3, r1
   1dc60:	ldr	r2, [sp, #4]
   1dc64:	add	r1, r2, r3
   1dc68:	mov	r2, #0
   1dc6c:	ldr	r3, [sp, #204]	; 0xcc
   1dc70:	ldr	r3, [r3, #4]
   1dc74:	cmp	r3, r2
   1dc78:	ble	1c230 <GetDataSlab+0x12c>
   1dc7c:	mov	r3, #0
   1dc80:	b	1dca0 <GetDataSlab+0x1b9c>
   1dc84:	ldr	r0, [sl]
   1dc88:	ldr	ip, [sp]
   1dc8c:	mul	r0, r0, r3
   1dc90:	add	r3, r3, #1
   1dc94:	ldrsb	r0, [r1, r0]
   1dc98:	str	r0, [ip], #4
   1dc9c:	str	ip, [sp]
   1dca0:	ldr	r0, [sp, #204]	; 0xcc
   1dca4:	ldr	r0, [r0]
   1dca8:	cmp	r0, r3
   1dcac:	bgt	1dc84 <GetDataSlab+0x1b80>
   1dcb0:	ldr	r0, [fp]
   1dcb4:	add	r2, r2, #1
   1dcb8:	ldr	r3, [sl, #4]
   1dcbc:	mla	r1, r0, r3, r1
   1dcc0:	b	1dc6c <GetDataSlab+0x1b68>
   1dcc4:	mla	r3, r2, r3, r1
   1dcc8:	ldr	r2, [sp, #4]
   1dccc:	add	r1, r2, r3
   1dcd0:	mov	r2, #0
   1dcd4:	ldr	r3, [sp, #204]	; 0xcc
   1dcd8:	ldr	r3, [r3, #4]
   1dcdc:	cmp	r3, r2
   1dce0:	ble	1c230 <GetDataSlab+0x12c>
   1dce4:	mov	r3, #0
   1dce8:	b	1dd08 <GetDataSlab+0x1c04>
   1dcec:	ldr	r0, [sl]
   1dcf0:	ldr	ip, [sp]
   1dcf4:	mul	r0, r0, r3
   1dcf8:	add	r3, r3, #1
   1dcfc:	ldrb	r0, [r1, r0]
   1dd00:	str	r0, [ip], #4
   1dd04:	str	ip, [sp]
   1dd08:	ldr	r0, [sp, #204]	; 0xcc
   1dd0c:	ldr	r0, [r0]
   1dd10:	cmp	r0, r3
   1dd14:	bgt	1dcec <GetDataSlab+0x1be8>
   1dd18:	ldr	r0, [fp]
   1dd1c:	add	r2, r2, #1
   1dd20:	ldr	r3, [sl, #4]
   1dd24:	mla	r1, r0, r3, r1
   1dd28:	b	1dcd4 <GetDataSlab+0x1bd0>
   1dd2c:	cmp	r5, #12
   1dd30:	bne	1dda0 <GetDataSlab+0x1c9c>
   1dd34:	mla	r3, r2, r3, r1
   1dd38:	ldr	r2, [sp, #4]
   1dd3c:	add	r1, r2, r3, lsl #3
   1dd40:	mov	r2, #0
   1dd44:	ldr	r3, [sp, #204]	; 0xcc
   1dd48:	ldr	r3, [r3, #4]
   1dd4c:	cmp	r3, r2
   1dd50:	ble	1c230 <GetDataSlab+0x12c>
   1dd54:	mov	r3, #0
   1dd58:	b	1dd78 <GetDataSlab+0x1c74>
   1dd5c:	ldr	r0, [sl]
   1dd60:	ldr	ip, [sp]
   1dd64:	mul	r0, r0, r3
   1dd68:	add	r3, r3, #1
   1dd6c:	ldr	r0, [r1, r0, lsl #3]
   1dd70:	str	r0, [ip], #4
   1dd74:	str	ip, [sp]
   1dd78:	ldr	r0, [sp, #204]	; 0xcc
   1dd7c:	ldr	r0, [r0]
   1dd80:	cmp	r0, r3
   1dd84:	bgt	1dd5c <GetDataSlab+0x1c58>
   1dd88:	ldr	r0, [fp]
   1dd8c:	add	r2, r2, #1
   1dd90:	ldr	r3, [sl, #4]
   1dd94:	mul	r3, r0, r3
   1dd98:	add	r1, r1, r3, lsl #3
   1dd9c:	b	1dd44 <GetDataSlab+0x1c40>
   1dda0:	cmp	r5, #13
   1dda4:	bne	3236c <GetDataSlab+0x16268>
   1dda8:	mla	r3, r2, r3, r1
   1ddac:	ldr	r2, [sp, #4]
   1ddb0:	add	r1, r2, r3, lsl #3
   1ddb4:	mov	r2, #0
   1ddb8:	ldr	r3, [sp, #204]	; 0xcc
   1ddbc:	ldr	r3, [r3, #4]
   1ddc0:	cmp	r3, r2
   1ddc4:	ble	1c230 <GetDataSlab+0x12c>
   1ddc8:	mov	r3, #0
   1ddcc:	b	1ddec <GetDataSlab+0x1ce8>
   1ddd0:	ldr	r0, [sl]
   1ddd4:	ldr	ip, [sp]
   1ddd8:	mul	r0, r0, r3
   1dddc:	add	r3, r3, #1
   1dde0:	ldr	r0, [r1, r0, lsl #3]
   1dde4:	str	r0, [ip], #4
   1dde8:	str	ip, [sp]
   1ddec:	ldr	r0, [sp, #204]	; 0xcc
   1ddf0:	ldr	r0, [r0]
   1ddf4:	cmp	r0, r3
   1ddf8:	bgt	1ddd0 <GetDataSlab+0x1ccc>
   1ddfc:	ldr	r0, [fp]
   1de00:	add	r2, r2, #1
   1de04:	ldr	r3, [sl, #4]
   1de08:	mul	r3, r0, r3
   1de0c:	add	r1, r1, r3, lsl #3
   1de10:	b	1ddb8 <GetDataSlab+0x1cb4>
   1de14:	sub	lr, r5, #1
   1de18:	cmp	lr, #8
   1de1c:	addls	pc, pc, lr, lsl #2
   1de20:	b	1e190 <GetDataSlab+0x208c>
   1de24:	b	1e0d0 <GetDataSlab+0x1fcc>
   1de28:	b	1e130 <GetDataSlab+0x202c>
   1de2c:	b	1e000 <GetDataSlab+0x1efc>
   1de30:	b	1e068 <GetDataSlab+0x1f64>
   1de34:	b	1df30 <GetDataSlab+0x1e2c>
   1de38:	b	1df98 <GetDataSlab+0x1e94>
   1de3c:	b	1debc <GetDataSlab+0x1db8>
   1de40:	b	1e190 <GetDataSlab+0x208c>
   1de44:	b	1de48 <GetDataSlab+0x1d44>
   1de48:	mla	r2, r2, r3, r1
   1de4c:	ldr	r1, [sp, #4]
   1de50:	mul	r3, ip, r3
   1de54:	lsl	r6, r0, #3
   1de58:	mov	r0, #0
   1de5c:	lsl	lr, r3, #3
   1de60:	bic	r3, r4, r4, asr #31
   1de64:	add	r1, r1, r2, lsl #3
   1de68:	lsl	r5, r3, #1
   1de6c:	cmp	r9, r0
   1de70:	ble	1c230 <GetDataSlab+0x12c>
   1de74:	mov	r3, r1
   1de78:	mov	r2, #0
   1de7c:	ldr	ip, [sp]
   1de80:	b	1de9c <GetDataSlab+0x1d98>
   1de84:	vldr	d7, [r3]
   1de88:	add	r2, r2, #1
   1de8c:	add	r3, r3, r6
   1de90:	vcvt.s32.f64	s15, d7
   1de94:	vmov	r7, s15
   1de98:	strh	r7, [ip], #2
   1de9c:	cmp	r4, r2
   1dea0:	bgt	1de84 <GetDataSlab+0x1d80>
   1dea4:	ldr	r3, [sp]
   1dea8:	add	r1, r1, lr
   1deac:	add	r0, r0, #1
   1deb0:	add	r3, r3, r5
   1deb4:	str	r3, [sp]
   1deb8:	b	1de6c <GetDataSlab+0x1d68>
   1debc:	mla	r2, r2, r3, r1
   1dec0:	ldr	r1, [sp, #4]
   1dec4:	mul	r3, ip, r3
   1dec8:	lsl	r6, r0, #2
   1decc:	mov	r0, #0
   1ded0:	lsl	lr, r3, #2
   1ded4:	bic	r3, r4, r4, asr #31
   1ded8:	add	r1, r1, r2, lsl #2
   1dedc:	lsl	r5, r3, #1
   1dee0:	cmp	r9, r0
   1dee4:	ble	1c230 <GetDataSlab+0x12c>
   1dee8:	mov	r3, r1
   1deec:	mov	r2, #0
   1def0:	ldr	ip, [sp]
   1def4:	b	1df10 <GetDataSlab+0x1e0c>
   1def8:	vldr	s15, [r3]
   1defc:	add	r2, r2, #1
   1df00:	add	r3, r3, r6
   1df04:	vcvt.s32.f32	s15, s15
   1df08:	vmov	r7, s15
   1df0c:	strh	r7, [ip], #2
   1df10:	cmp	r4, r2
   1df14:	bgt	1def8 <GetDataSlab+0x1df4>
   1df18:	ldr	r3, [sp]
   1df1c:	add	r1, r1, lr
   1df20:	add	r0, r0, #1
   1df24:	add	r3, r3, r5
   1df28:	str	r3, [sp]
   1df2c:	b	1dee0 <GetDataSlab+0x1ddc>
   1df30:	mla	r2, r2, r3, r1
   1df34:	ldr	r1, [sp, #4]
   1df38:	mul	r3, ip, r3
   1df3c:	lsl	r7, r0, #2
   1df40:	lsl	lr, r3, #2
   1df44:	bic	r3, r4, r4, asr #31
   1df48:	add	r2, r1, r2, lsl #2
   1df4c:	mov	r1, #0
   1df50:	lsl	r5, r3, #1
   1df54:	cmp	r9, r1
   1df58:	ble	1c230 <GetDataSlab+0x12c>
   1df5c:	mov	ip, r2
   1df60:	mov	r3, #0
   1df64:	ldr	r0, [sp]
   1df68:	b	1df78 <GetDataSlab+0x1e74>
   1df6c:	ldr	r6, [ip], r7
   1df70:	add	r3, r3, #1
   1df74:	strh	r6, [r0], #2
   1df78:	cmp	r4, r3
   1df7c:	bgt	1df6c <GetDataSlab+0x1e68>
   1df80:	ldr	r3, [sp]
   1df84:	add	r2, r2, lr
   1df88:	add	r1, r1, #1
   1df8c:	add	r3, r3, r5
   1df90:	str	r3, [sp]
   1df94:	b	1df54 <GetDataSlab+0x1e50>
   1df98:	mla	r2, r2, r3, r1
   1df9c:	ldr	r1, [sp, #4]
   1dfa0:	mul	r3, ip, r3
   1dfa4:	lsl	r7, r0, #2
   1dfa8:	lsl	lr, r3, #2
   1dfac:	bic	r3, r4, r4, asr #31
   1dfb0:	add	r2, r1, r2, lsl #2
   1dfb4:	mov	r1, #0
   1dfb8:	lsl	r5, r3, #1
   1dfbc:	cmp	r9, r1
   1dfc0:	ble	1c230 <GetDataSlab+0x12c>
   1dfc4:	mov	ip, r2
   1dfc8:	mov	r3, #0
   1dfcc:	ldr	r0, [sp]
   1dfd0:	b	1dfe0 <GetDataSlab+0x1edc>
   1dfd4:	ldr	r6, [ip], r7
   1dfd8:	add	r3, r3, #1
   1dfdc:	strh	r6, [r0], #2
   1dfe0:	cmp	r4, r3
   1dfe4:	bgt	1dfd4 <GetDataSlab+0x1ed0>
   1dfe8:	ldr	r3, [sp]
   1dfec:	add	r2, r2, lr
   1dff0:	add	r1, r1, #1
   1dff4:	add	r3, r3, r5
   1dff8:	str	r3, [sp]
   1dffc:	b	1dfbc <GetDataSlab+0x1eb8>
   1e000:	mla	r2, r2, r3, r1
   1e004:	ldr	r1, [sp, #4]
   1e008:	mul	r3, ip, r3
   1e00c:	lsl	r7, r0, #1
   1e010:	lsl	lr, r3, #1
   1e014:	bic	r3, r4, r4, asr #31
   1e018:	add	r2, r1, r2, lsl #1
   1e01c:	mov	r1, #0
   1e020:	lsl	r5, r3, #1
   1e024:	cmp	r9, r1
   1e028:	ble	1c230 <GetDataSlab+0x12c>
   1e02c:	mov	ip, r2
   1e030:	mov	r3, #0
   1e034:	ldr	r0, [sp]
   1e038:	b	1e048 <GetDataSlab+0x1f44>
   1e03c:	ldrsh	r6, [ip], r7
   1e040:	add	r3, r3, #1
   1e044:	strh	r6, [r0], #2
   1e048:	cmp	r4, r3
   1e04c:	bgt	1e03c <GetDataSlab+0x1f38>
   1e050:	ldr	r3, [sp]
   1e054:	add	r2, r2, lr
   1e058:	add	r1, r1, #1
   1e05c:	add	r3, r3, r5
   1e060:	str	r3, [sp]
   1e064:	b	1e024 <GetDataSlab+0x1f20>
   1e068:	mla	r2, r2, r3, r1
   1e06c:	ldr	r1, [sp, #4]
   1e070:	mul	r3, ip, r3
   1e074:	lsl	r7, r0, #1
   1e078:	lsl	lr, r3, #1
   1e07c:	bic	r3, r4, r4, asr #31
   1e080:	add	r2, r1, r2, lsl #1
   1e084:	mov	r1, #0
   1e088:	lsl	r5, r3, #1
   1e08c:	cmp	r9, r1
   1e090:	ble	1c230 <GetDataSlab+0x12c>
   1e094:	mov	ip, r2
   1e098:	mov	r3, #0
   1e09c:	ldr	r0, [sp]
   1e0a0:	b	1e0b0 <GetDataSlab+0x1fac>
   1e0a4:	ldrh	r6, [ip], r7
   1e0a8:	add	r3, r3, #1
   1e0ac:	strh	r6, [r0], #2
   1e0b0:	cmp	r4, r3
   1e0b4:	bgt	1e0a4 <GetDataSlab+0x1fa0>
   1e0b8:	ldr	r3, [sp]
   1e0bc:	add	r2, r2, lr
   1e0c0:	add	r1, r1, #1
   1e0c4:	add	r3, r3, r5
   1e0c8:	str	r3, [sp]
   1e0cc:	b	1e08c <GetDataSlab+0x1f88>
   1e0d0:	mla	r2, r2, r3, r1
   1e0d4:	ldr	r1, [sp, #4]
   1e0d8:	mul	r5, ip, r3
   1e0dc:	bic	r3, r4, r4, asr #31
   1e0e0:	lsl	r6, r3, #1
   1e0e4:	add	r2, r1, r2
   1e0e8:	mov	r1, #0
   1e0ec:	cmp	r9, r1
   1e0f0:	ble	1c230 <GetDataSlab+0x12c>
   1e0f4:	mov	lr, r2
   1e0f8:	mov	r3, #0
   1e0fc:	ldr	ip, [sp]
   1e100:	b	1e110 <GetDataSlab+0x200c>
   1e104:	ldrsb	r7, [lr], r0
   1e108:	add	r3, r3, #1
   1e10c:	strh	r7, [ip], #2
   1e110:	cmp	r4, r3
   1e114:	bgt	1e104 <GetDataSlab+0x2000>
   1e118:	ldr	r3, [sp]
   1e11c:	add	r2, r2, r5
   1e120:	add	r1, r1, #1
   1e124:	add	r3, r3, r6
   1e128:	str	r3, [sp]
   1e12c:	b	1e0ec <GetDataSlab+0x1fe8>
   1e130:	mla	r2, r2, r3, r1
   1e134:	ldr	r1, [sp, #4]
   1e138:	mul	r5, ip, r3
   1e13c:	bic	r3, r4, r4, asr #31
   1e140:	lsl	r6, r3, #1
   1e144:	add	r2, r1, r2
   1e148:	mov	r1, #0
   1e14c:	cmp	r9, r1
   1e150:	ble	1c230 <GetDataSlab+0x12c>
   1e154:	mov	lr, r2
   1e158:	mov	r3, #0
   1e15c:	ldr	ip, [sp]
   1e160:	b	1e170 <GetDataSlab+0x206c>
   1e164:	ldrb	r7, [lr], r0
   1e168:	add	r3, r3, #1
   1e16c:	strh	r7, [ip], #2
   1e170:	cmp	r4, r3
   1e174:	bgt	1e164 <GetDataSlab+0x2060>
   1e178:	ldr	r3, [sp]
   1e17c:	add	r2, r2, r5
   1e180:	add	r1, r1, #1
   1e184:	add	r3, r3, r6
   1e188:	str	r3, [sp]
   1e18c:	b	1e14c <GetDataSlab+0x2048>
   1e190:	cmp	r5, #12
   1e194:	bne	1e200 <GetDataSlab+0x20fc>
   1e198:	mla	r2, r2, r3, r1
   1e19c:	ldr	r1, [sp, #4]
   1e1a0:	mul	r3, ip, r3
   1e1a4:	lsl	r7, r0, #3
   1e1a8:	lsl	lr, r3, #3
   1e1ac:	bic	r3, r4, r4, asr #31
   1e1b0:	add	r2, r1, r2, lsl #3
   1e1b4:	mov	r1, #0
   1e1b8:	lsl	r5, r3, #1
   1e1bc:	cmp	r9, r1
   1e1c0:	ble	1c230 <GetDataSlab+0x12c>
   1e1c4:	mov	ip, r2
   1e1c8:	mov	r3, #0
   1e1cc:	ldr	r0, [sp]
   1e1d0:	b	1e1e0 <GetDataSlab+0x20dc>
   1e1d4:	ldr	r6, [ip], r7
   1e1d8:	add	r3, r3, #1
   1e1dc:	strh	r6, [r0], #2
   1e1e0:	cmp	r4, r3
   1e1e4:	bgt	1e1d4 <GetDataSlab+0x20d0>
   1e1e8:	ldr	r3, [sp]
   1e1ec:	add	r2, r2, lr
   1e1f0:	add	r1, r1, #1
   1e1f4:	add	r3, r3, r5
   1e1f8:	str	r3, [sp]
   1e1fc:	b	1e1bc <GetDataSlab+0x20b8>
   1e200:	cmp	r5, #13
   1e204:	bne	3236c <GetDataSlab+0x16268>
   1e208:	mla	r2, r2, r3, r1
   1e20c:	ldr	r1, [sp, #4]
   1e210:	mul	r3, ip, r3
   1e214:	lsl	r7, r0, #3
   1e218:	lsl	lr, r3, #3
   1e21c:	bic	r3, r4, r4, asr #31
   1e220:	add	r2, r1, r2, lsl #3
   1e224:	mov	r1, #0
   1e228:	lsl	r5, r3, #1
   1e22c:	cmp	r9, r1
   1e230:	ble	1c230 <GetDataSlab+0x12c>
   1e234:	mov	ip, r2
   1e238:	mov	r3, #0
   1e23c:	ldr	r0, [sp]
   1e240:	b	1e250 <GetDataSlab+0x214c>
   1e244:	ldr	r6, [ip], r7
   1e248:	add	r3, r3, #1
   1e24c:	strh	r6, [r0], #2
   1e250:	cmp	r4, r3
   1e254:	bgt	1e244 <GetDataSlab+0x2140>
   1e258:	ldr	r3, [sp]
   1e25c:	add	r2, r2, lr
   1e260:	add	r1, r1, #1
   1e264:	add	r3, r3, r5
   1e268:	str	r3, [sp]
   1e26c:	b	1e22c <GetDataSlab+0x2128>
   1e270:	sub	lr, r5, #1
   1e274:	cmp	lr, #8
   1e278:	addls	pc, pc, lr, lsl #2
   1e27c:	b	1e5ec <GetDataSlab+0x24e8>
   1e280:	b	1e52c <GetDataSlab+0x2428>
   1e284:	b	1e58c <GetDataSlab+0x2488>
   1e288:	b	1e45c <GetDataSlab+0x2358>
   1e28c:	b	1e4c4 <GetDataSlab+0x23c0>
   1e290:	b	1e38c <GetDataSlab+0x2288>
   1e294:	b	1e3f4 <GetDataSlab+0x22f0>
   1e298:	b	1e318 <GetDataSlab+0x2214>
   1e29c:	b	1e5ec <GetDataSlab+0x24e8>
   1e2a0:	b	1e2a4 <GetDataSlab+0x21a0>
   1e2a4:	mla	r2, r2, r3, r1
   1e2a8:	ldr	r1, [sp, #4]
   1e2ac:	mul	r3, ip, r3
   1e2b0:	lsl	r6, r0, #3
   1e2b4:	mov	r0, #0
   1e2b8:	lsl	lr, r3, #3
   1e2bc:	bic	r3, r4, r4, asr #31
   1e2c0:	add	r1, r1, r2, lsl #3
   1e2c4:	lsl	r5, r3, #1
   1e2c8:	cmp	r9, r0
   1e2cc:	ble	1c230 <GetDataSlab+0x12c>
   1e2d0:	mov	r3, r1
   1e2d4:	mov	r2, #0
   1e2d8:	ldr	ip, [sp]
   1e2dc:	b	1e2f8 <GetDataSlab+0x21f4>
   1e2e0:	vldr	d7, [r3]
   1e2e4:	add	r2, r2, #1
   1e2e8:	add	r3, r3, r6
   1e2ec:	vcvt.u32.f64	s15, d7
   1e2f0:	vmov	r7, s15
   1e2f4:	strh	r7, [ip], #2
   1e2f8:	cmp	r4, r2
   1e2fc:	bgt	1e2e0 <GetDataSlab+0x21dc>
   1e300:	ldr	r3, [sp]
   1e304:	add	r1, r1, lr
   1e308:	add	r0, r0, #1
   1e30c:	add	r3, r3, r5
   1e310:	str	r3, [sp]
   1e314:	b	1e2c8 <GetDataSlab+0x21c4>
   1e318:	mla	r2, r2, r3, r1
   1e31c:	ldr	r1, [sp, #4]
   1e320:	mul	r3, ip, r3
   1e324:	lsl	r6, r0, #2
   1e328:	mov	r0, #0
   1e32c:	lsl	lr, r3, #2
   1e330:	bic	r3, r4, r4, asr #31
   1e334:	add	r1, r1, r2, lsl #2
   1e338:	lsl	r5, r3, #1
   1e33c:	cmp	r9, r0
   1e340:	ble	1c230 <GetDataSlab+0x12c>
   1e344:	mov	r3, r1
   1e348:	mov	r2, #0
   1e34c:	ldr	ip, [sp]
   1e350:	b	1e36c <GetDataSlab+0x2268>
   1e354:	vldr	s15, [r3]
   1e358:	add	r2, r2, #1
   1e35c:	add	r3, r3, r6
   1e360:	vcvt.u32.f32	s15, s15
   1e364:	vmov	r7, s15
   1e368:	strh	r7, [ip], #2
   1e36c:	cmp	r4, r2
   1e370:	bgt	1e354 <GetDataSlab+0x2250>
   1e374:	ldr	r3, [sp]
   1e378:	add	r1, r1, lr
   1e37c:	add	r0, r0, #1
   1e380:	add	r3, r3, r5
   1e384:	str	r3, [sp]
   1e388:	b	1e33c <GetDataSlab+0x2238>
   1e38c:	mla	r2, r2, r3, r1
   1e390:	ldr	r1, [sp, #4]
   1e394:	mul	r3, ip, r3
   1e398:	lsl	r7, r0, #2
   1e39c:	lsl	lr, r3, #2
   1e3a0:	bic	r3, r4, r4, asr #31
   1e3a4:	add	r2, r1, r2, lsl #2
   1e3a8:	mov	r1, #0
   1e3ac:	lsl	r5, r3, #1
   1e3b0:	cmp	r9, r1
   1e3b4:	ble	1c230 <GetDataSlab+0x12c>
   1e3b8:	mov	ip, r2
   1e3bc:	mov	r3, #0
   1e3c0:	ldr	r0, [sp]
   1e3c4:	b	1e3d4 <GetDataSlab+0x22d0>
   1e3c8:	ldr	r6, [ip], r7
   1e3cc:	add	r3, r3, #1
   1e3d0:	strh	r6, [r0], #2
   1e3d4:	cmp	r4, r3
   1e3d8:	bgt	1e3c8 <GetDataSlab+0x22c4>
   1e3dc:	ldr	r3, [sp]
   1e3e0:	add	r2, r2, lr
   1e3e4:	add	r1, r1, #1
   1e3e8:	add	r3, r3, r5
   1e3ec:	str	r3, [sp]
   1e3f0:	b	1e3b0 <GetDataSlab+0x22ac>
   1e3f4:	mla	r2, r2, r3, r1
   1e3f8:	ldr	r1, [sp, #4]
   1e3fc:	mul	r3, ip, r3
   1e400:	lsl	r7, r0, #2
   1e404:	lsl	lr, r3, #2
   1e408:	bic	r3, r4, r4, asr #31
   1e40c:	add	r2, r1, r2, lsl #2
   1e410:	mov	r1, #0
   1e414:	lsl	r5, r3, #1
   1e418:	cmp	r9, r1
   1e41c:	ble	1c230 <GetDataSlab+0x12c>
   1e420:	mov	ip, r2
   1e424:	mov	r3, #0
   1e428:	ldr	r0, [sp]
   1e42c:	b	1e43c <GetDataSlab+0x2338>
   1e430:	ldr	r6, [ip], r7
   1e434:	add	r3, r3, #1
   1e438:	strh	r6, [r0], #2
   1e43c:	cmp	r4, r3
   1e440:	bgt	1e430 <GetDataSlab+0x232c>
   1e444:	ldr	r3, [sp]
   1e448:	add	r2, r2, lr
   1e44c:	add	r1, r1, #1
   1e450:	add	r3, r3, r5
   1e454:	str	r3, [sp]
   1e458:	b	1e418 <GetDataSlab+0x2314>
   1e45c:	mla	r2, r2, r3, r1
   1e460:	ldr	r1, [sp, #4]
   1e464:	mul	r3, ip, r3
   1e468:	lsl	r7, r0, #1
   1e46c:	lsl	lr, r3, #1
   1e470:	bic	r3, r4, r4, asr #31
   1e474:	add	r2, r1, r2, lsl #1
   1e478:	mov	r1, #0
   1e47c:	lsl	r5, r3, #1
   1e480:	cmp	r9, r1
   1e484:	ble	1c230 <GetDataSlab+0x12c>
   1e488:	mov	ip, r2
   1e48c:	mov	r3, #0
   1e490:	ldr	r0, [sp]
   1e494:	b	1e4a4 <GetDataSlab+0x23a0>
   1e498:	ldrh	r6, [ip], r7
   1e49c:	add	r3, r3, #1
   1e4a0:	strh	r6, [r0], #2
   1e4a4:	cmp	r4, r3
   1e4a8:	bgt	1e498 <GetDataSlab+0x2394>
   1e4ac:	ldr	r3, [sp]
   1e4b0:	add	r2, r2, lr
   1e4b4:	add	r1, r1, #1
   1e4b8:	add	r3, r3, r5
   1e4bc:	str	r3, [sp]
   1e4c0:	b	1e480 <GetDataSlab+0x237c>
   1e4c4:	mla	r2, r2, r3, r1
   1e4c8:	ldr	r1, [sp, #4]
   1e4cc:	mul	r3, ip, r3
   1e4d0:	lsl	r7, r0, #1
   1e4d4:	lsl	lr, r3, #1
   1e4d8:	bic	r3, r4, r4, asr #31
   1e4dc:	add	r2, r1, r2, lsl #1
   1e4e0:	mov	r1, #0
   1e4e4:	lsl	r5, r3, #1
   1e4e8:	cmp	r9, r1
   1e4ec:	ble	1c230 <GetDataSlab+0x12c>
   1e4f0:	mov	ip, r2
   1e4f4:	mov	r3, #0
   1e4f8:	ldr	r0, [sp]
   1e4fc:	b	1e50c <GetDataSlab+0x2408>
   1e500:	ldrh	r6, [ip], r7
   1e504:	add	r3, r3, #1
   1e508:	strh	r6, [r0], #2
   1e50c:	cmp	r4, r3
   1e510:	bgt	1e500 <GetDataSlab+0x23fc>
   1e514:	ldr	r3, [sp]
   1e518:	add	r2, r2, lr
   1e51c:	add	r1, r1, #1
   1e520:	add	r3, r3, r5
   1e524:	str	r3, [sp]
   1e528:	b	1e4e8 <GetDataSlab+0x23e4>
   1e52c:	mla	r2, r2, r3, r1
   1e530:	ldr	r1, [sp, #4]
   1e534:	mul	r5, ip, r3
   1e538:	bic	r3, r4, r4, asr #31
   1e53c:	lsl	r6, r3, #1
   1e540:	add	r2, r1, r2
   1e544:	mov	r1, #0
   1e548:	cmp	r9, r1
   1e54c:	ble	1c230 <GetDataSlab+0x12c>
   1e550:	mov	lr, r2
   1e554:	mov	r3, #0
   1e558:	ldr	ip, [sp]
   1e55c:	b	1e56c <GetDataSlab+0x2468>
   1e560:	ldrsb	r7, [lr], r0
   1e564:	add	r3, r3, #1
   1e568:	strh	r7, [ip], #2
   1e56c:	cmp	r4, r3
   1e570:	bgt	1e560 <GetDataSlab+0x245c>
   1e574:	ldr	r3, [sp]
   1e578:	add	r2, r2, r5
   1e57c:	add	r1, r1, #1
   1e580:	add	r3, r3, r6
   1e584:	str	r3, [sp]
   1e588:	b	1e548 <GetDataSlab+0x2444>
   1e58c:	mla	r2, r2, r3, r1
   1e590:	ldr	r1, [sp, #4]
   1e594:	mul	r5, ip, r3
   1e598:	bic	r3, r4, r4, asr #31
   1e59c:	lsl	r6, r3, #1
   1e5a0:	add	r2, r1, r2
   1e5a4:	mov	r1, #0
   1e5a8:	cmp	r9, r1
   1e5ac:	ble	1c230 <GetDataSlab+0x12c>
   1e5b0:	mov	lr, r2
   1e5b4:	mov	r3, #0
   1e5b8:	ldr	ip, [sp]
   1e5bc:	b	1e5cc <GetDataSlab+0x24c8>
   1e5c0:	ldrb	r7, [lr], r0
   1e5c4:	add	r3, r3, #1
   1e5c8:	strh	r7, [ip], #2
   1e5cc:	cmp	r4, r3
   1e5d0:	bgt	1e5c0 <GetDataSlab+0x24bc>
   1e5d4:	ldr	r3, [sp]
   1e5d8:	add	r2, r2, r5
   1e5dc:	add	r1, r1, #1
   1e5e0:	add	r3, r3, r6
   1e5e4:	str	r3, [sp]
   1e5e8:	b	1e5a8 <GetDataSlab+0x24a4>
   1e5ec:	cmp	r5, #12
   1e5f0:	bne	1e65c <GetDataSlab+0x2558>
   1e5f4:	mla	r2, r2, r3, r1
   1e5f8:	ldr	r1, [sp, #4]
   1e5fc:	mul	r3, ip, r3
   1e600:	lsl	r7, r0, #3
   1e604:	lsl	lr, r3, #3
   1e608:	bic	r3, r4, r4, asr #31
   1e60c:	add	r2, r1, r2, lsl #3
   1e610:	mov	r1, #0
   1e614:	lsl	r5, r3, #1
   1e618:	cmp	r9, r1
   1e61c:	ble	1c230 <GetDataSlab+0x12c>
   1e620:	mov	ip, r2
   1e624:	mov	r3, #0
   1e628:	ldr	r0, [sp]
   1e62c:	b	1e63c <GetDataSlab+0x2538>
   1e630:	ldr	r6, [ip], r7
   1e634:	add	r3, r3, #1
   1e638:	strh	r6, [r0], #2
   1e63c:	cmp	r4, r3
   1e640:	bgt	1e630 <GetDataSlab+0x252c>
   1e644:	ldr	r3, [sp]
   1e648:	add	r2, r2, lr
   1e64c:	add	r1, r1, #1
   1e650:	add	r3, r3, r5
   1e654:	str	r3, [sp]
   1e658:	b	1e618 <GetDataSlab+0x2514>
   1e65c:	cmp	r5, #13
   1e660:	bne	3236c <GetDataSlab+0x16268>
   1e664:	mla	r2, r2, r3, r1
   1e668:	ldr	r1, [sp, #4]
   1e66c:	mul	r3, ip, r3
   1e670:	lsl	r7, r0, #3
   1e674:	lsl	lr, r3, #3
   1e678:	bic	r3, r4, r4, asr #31
   1e67c:	add	r2, r1, r2, lsl #3
   1e680:	mov	r1, #0
   1e684:	lsl	r5, r3, #1
   1e688:	cmp	r9, r1
   1e68c:	ble	1c230 <GetDataSlab+0x12c>
   1e690:	mov	ip, r2
   1e694:	mov	r3, #0
   1e698:	ldr	r0, [sp]
   1e69c:	b	1e6ac <GetDataSlab+0x25a8>
   1e6a0:	ldr	r6, [ip], r7
   1e6a4:	add	r3, r3, #1
   1e6a8:	strh	r6, [r0], #2
   1e6ac:	cmp	r4, r3
   1e6b0:	bgt	1e6a0 <GetDataSlab+0x259c>
   1e6b4:	ldr	r3, [sp]
   1e6b8:	add	r2, r2, lr
   1e6bc:	add	r1, r1, #1
   1e6c0:	add	r3, r3, r5
   1e6c4:	str	r3, [sp]
   1e6c8:	b	1e688 <GetDataSlab+0x2584>
   1e6cc:	sub	r0, r5, #1
   1e6d0:	cmp	r0, #8
   1e6d4:	addls	pc, pc, r0, lsl #2
   1e6d8:	b	1ea78 <GetDataSlab+0x2974>
   1e6dc:	b	1e9a8 <GetDataSlab+0x28a4>
   1e6e0:	b	1ea10 <GetDataSlab+0x290c>
   1e6e4:	b	1e8c8 <GetDataSlab+0x27c4>
   1e6e8:	b	1e938 <GetDataSlab+0x2834>
   1e6ec:	b	1e7f0 <GetDataSlab+0x26ec>
   1e6f0:	b	1e85c <GetDataSlab+0x2758>
   1e6f4:	b	1e778 <GetDataSlab+0x2674>
   1e6f8:	b	1ea78 <GetDataSlab+0x2974>
   1e6fc:	b	1e700 <GetDataSlab+0x25fc>
   1e700:	mla	r3, r2, r3, r1
   1e704:	ldr	r2, [sp, #4]
   1e708:	add	r1, r2, r3, lsl #3
   1e70c:	mov	r2, #0
   1e710:	ldr	r3, [sp, #204]	; 0xcc
   1e714:	ldr	r3, [r3, #4]
   1e718:	cmp	r3, r2
   1e71c:	ble	1c230 <GetDataSlab+0x12c>
   1e720:	mov	r3, #0
   1e724:	b	1e750 <GetDataSlab+0x264c>
   1e728:	ldr	r0, [sl]
   1e72c:	ldr	ip, [sp]
   1e730:	mul	r0, r0, r3
   1e734:	add	r3, r3, #1
   1e738:	add	r0, r1, r0, lsl #3
   1e73c:	vldr	d7, [r0]
   1e740:	vcvt.s32.f64	s15, d7
   1e744:	vmov	r0, s15
   1e748:	strb	r0, [ip], #1
   1e74c:	str	ip, [sp]
   1e750:	ldr	r0, [sp, #204]	; 0xcc
   1e754:	ldr	r0, [r0]
   1e758:	cmp	r0, r3
   1e75c:	bgt	1e728 <GetDataSlab+0x2624>
   1e760:	ldr	r0, [fp]
   1e764:	add	r2, r2, #1
   1e768:	ldr	r3, [sl, #4]
   1e76c:	mul	r3, r0, r3
   1e770:	add	r1, r1, r3, lsl #3
   1e774:	b	1e710 <GetDataSlab+0x260c>
   1e778:	mla	r3, r2, r3, r1
   1e77c:	ldr	r2, [sp, #4]
   1e780:	add	r1, r2, r3, lsl #2
   1e784:	mov	r2, #0
   1e788:	ldr	r3, [sp, #204]	; 0xcc
   1e78c:	ldr	r3, [r3, #4]
   1e790:	cmp	r3, r2
   1e794:	ble	1c230 <GetDataSlab+0x12c>
   1e798:	mov	r3, #0
   1e79c:	b	1e7c8 <GetDataSlab+0x26c4>
   1e7a0:	ldr	r0, [sl]
   1e7a4:	ldr	ip, [sp]
   1e7a8:	mul	r0, r0, r3
   1e7ac:	add	r3, r3, #1
   1e7b0:	add	r0, r1, r0, lsl #2
   1e7b4:	vldr	s15, [r0]
   1e7b8:	vcvt.s32.f32	s15, s15
   1e7bc:	vmov	r0, s15
   1e7c0:	strb	r0, [ip], #1
   1e7c4:	str	ip, [sp]
   1e7c8:	ldr	r0, [sp, #204]	; 0xcc
   1e7cc:	ldr	r0, [r0]
   1e7d0:	cmp	r0, r3
   1e7d4:	bgt	1e7a0 <GetDataSlab+0x269c>
   1e7d8:	ldr	r0, [fp]
   1e7dc:	add	r2, r2, #1
   1e7e0:	ldr	r3, [sl, #4]
   1e7e4:	mul	r3, r0, r3
   1e7e8:	add	r1, r1, r3, lsl #2
   1e7ec:	b	1e788 <GetDataSlab+0x2684>
   1e7f0:	mla	r3, r2, r3, r1
   1e7f4:	ldr	r2, [sp, #4]
   1e7f8:	add	r1, r2, r3, lsl #2
   1e7fc:	mov	r2, #0
   1e800:	ldr	r3, [sp, #204]	; 0xcc
   1e804:	ldr	r3, [r3, #4]
   1e808:	cmp	r3, r2
   1e80c:	ble	1c230 <GetDataSlab+0x12c>
   1e810:	mov	r3, #0
   1e814:	b	1e834 <GetDataSlab+0x2730>
   1e818:	ldr	r0, [sl]
   1e81c:	ldr	ip, [sp]
   1e820:	mul	r0, r0, r3
   1e824:	add	r3, r3, #1
   1e828:	ldr	r0, [r1, r0, lsl #2]
   1e82c:	strb	r0, [ip], #1
   1e830:	str	ip, [sp]
   1e834:	ldr	r0, [sp, #204]	; 0xcc
   1e838:	ldr	r0, [r0]
   1e83c:	cmp	r0, r3
   1e840:	bgt	1e818 <GetDataSlab+0x2714>
   1e844:	ldr	r0, [fp]
   1e848:	add	r2, r2, #1
   1e84c:	ldr	r3, [sl, #4]
   1e850:	mul	r3, r0, r3
   1e854:	add	r1, r1, r3, lsl #2
   1e858:	b	1e800 <GetDataSlab+0x26fc>
   1e85c:	mla	r3, r2, r3, r1
   1e860:	ldr	r2, [sp, #4]
   1e864:	add	r1, r2, r3, lsl #2
   1e868:	mov	r2, #0
   1e86c:	ldr	r3, [sp, #204]	; 0xcc
   1e870:	ldr	r3, [r3, #4]
   1e874:	cmp	r3, r2
   1e878:	ble	1c230 <GetDataSlab+0x12c>
   1e87c:	mov	r3, #0
   1e880:	b	1e8a0 <GetDataSlab+0x279c>
   1e884:	ldr	r0, [sl]
   1e888:	ldr	ip, [sp]
   1e88c:	mul	r0, r0, r3
   1e890:	add	r3, r3, #1
   1e894:	ldr	r0, [r1, r0, lsl #2]
   1e898:	strb	r0, [ip], #1
   1e89c:	str	ip, [sp]
   1e8a0:	ldr	r0, [sp, #204]	; 0xcc
   1e8a4:	ldr	r0, [r0]
   1e8a8:	cmp	r0, r3
   1e8ac:	bgt	1e884 <GetDataSlab+0x2780>
   1e8b0:	ldr	r0, [fp]
   1e8b4:	add	r2, r2, #1
   1e8b8:	ldr	r3, [sl, #4]
   1e8bc:	mul	r3, r0, r3
   1e8c0:	add	r1, r1, r3, lsl #2
   1e8c4:	b	1e86c <GetDataSlab+0x2768>
   1e8c8:	mla	r3, r2, r3, r1
   1e8cc:	ldr	r2, [sp, #4]
   1e8d0:	add	r1, r2, r3, lsl #1
   1e8d4:	mov	r2, #0
   1e8d8:	ldr	r3, [sp, #204]	; 0xcc
   1e8dc:	ldr	r3, [r3, #4]
   1e8e0:	cmp	r3, r2
   1e8e4:	ble	1c230 <GetDataSlab+0x12c>
   1e8e8:	mov	r3, #0
   1e8ec:	b	1e910 <GetDataSlab+0x280c>
   1e8f0:	ldr	r0, [sl]
   1e8f4:	ldr	ip, [sp]
   1e8f8:	mul	r0, r0, r3
   1e8fc:	add	r3, r3, #1
   1e900:	lsl	r0, r0, #1
   1e904:	ldrh	r0, [r1, r0]
   1e908:	strb	r0, [ip], #1
   1e90c:	str	ip, [sp]
   1e910:	ldr	r0, [sp, #204]	; 0xcc
   1e914:	ldr	r0, [r0]
   1e918:	cmp	r0, r3
   1e91c:	bgt	1e8f0 <GetDataSlab+0x27ec>
   1e920:	ldr	r0, [fp]
   1e924:	add	r2, r2, #1
   1e928:	ldr	r3, [sl, #4]
   1e92c:	mul	r3, r0, r3
   1e930:	add	r1, r1, r3, lsl #1
   1e934:	b	1e8d8 <GetDataSlab+0x27d4>
   1e938:	mla	r3, r2, r3, r1
   1e93c:	ldr	r2, [sp, #4]
   1e940:	add	r1, r2, r3, lsl #1
   1e944:	mov	r2, #0
   1e948:	ldr	r3, [sp, #204]	; 0xcc
   1e94c:	ldr	r3, [r3, #4]
   1e950:	cmp	r3, r2
   1e954:	ble	1c230 <GetDataSlab+0x12c>
   1e958:	mov	r3, #0
   1e95c:	b	1e980 <GetDataSlab+0x287c>
   1e960:	ldr	r0, [sl]
   1e964:	ldr	ip, [sp]
   1e968:	mul	r0, r0, r3
   1e96c:	add	r3, r3, #1
   1e970:	lsl	r0, r0, #1
   1e974:	ldrh	r0, [r1, r0]
   1e978:	strb	r0, [ip], #1
   1e97c:	str	ip, [sp]
   1e980:	ldr	r0, [sp, #204]	; 0xcc
   1e984:	ldr	r0, [r0]
   1e988:	cmp	r0, r3
   1e98c:	bgt	1e960 <GetDataSlab+0x285c>
   1e990:	ldr	r0, [fp]
   1e994:	add	r2, r2, #1
   1e998:	ldr	r3, [sl, #4]
   1e99c:	mul	r3, r0, r3
   1e9a0:	add	r1, r1, r3, lsl #1
   1e9a4:	b	1e948 <GetDataSlab+0x2844>
   1e9a8:	mla	r3, r2, r3, r1
   1e9ac:	ldr	r2, [sp, #4]
   1e9b0:	add	r1, r2, r3
   1e9b4:	mov	r2, #0
   1e9b8:	ldr	r3, [sp, #204]	; 0xcc
   1e9bc:	ldr	r3, [r3, #4]
   1e9c0:	cmp	r3, r2
   1e9c4:	ble	1c230 <GetDataSlab+0x12c>
   1e9c8:	mov	r3, #0
   1e9cc:	b	1e9ec <GetDataSlab+0x28e8>
   1e9d0:	ldr	r0, [sl]
   1e9d4:	ldr	ip, [sp]
   1e9d8:	mul	r0, r0, r3
   1e9dc:	add	r3, r3, #1
   1e9e0:	ldrsb	r0, [r1, r0]
   1e9e4:	strb	r0, [ip], #1
   1e9e8:	str	ip, [sp]
   1e9ec:	ldr	r0, [sp, #204]	; 0xcc
   1e9f0:	ldr	r0, [r0]
   1e9f4:	cmp	r0, r3
   1e9f8:	bgt	1e9d0 <GetDataSlab+0x28cc>
   1e9fc:	ldr	r0, [fp]
   1ea00:	add	r2, r2, #1
   1ea04:	ldr	r3, [sl, #4]
   1ea08:	mla	r1, r0, r3, r1
   1ea0c:	b	1e9b8 <GetDataSlab+0x28b4>
   1ea10:	mla	r3, r2, r3, r1
   1ea14:	ldr	r2, [sp, #4]
   1ea18:	add	r1, r2, r3
   1ea1c:	mov	r2, #0
   1ea20:	ldr	r3, [sp, #204]	; 0xcc
   1ea24:	ldr	r3, [r3, #4]
   1ea28:	cmp	r3, r2
   1ea2c:	ble	1c230 <GetDataSlab+0x12c>
   1ea30:	mov	r3, #0
   1ea34:	b	1ea54 <GetDataSlab+0x2950>
   1ea38:	ldr	r0, [sl]
   1ea3c:	ldr	ip, [sp]
   1ea40:	mul	r0, r0, r3
   1ea44:	add	r3, r3, #1
   1ea48:	ldrb	r0, [r1, r0]
   1ea4c:	strb	r0, [ip], #1
   1ea50:	str	ip, [sp]
   1ea54:	ldr	r0, [sp, #204]	; 0xcc
   1ea58:	ldr	r0, [r0]
   1ea5c:	cmp	r0, r3
   1ea60:	bgt	1ea38 <GetDataSlab+0x2934>
   1ea64:	ldr	r0, [fp]
   1ea68:	add	r2, r2, #1
   1ea6c:	ldr	r3, [sl, #4]
   1ea70:	mla	r1, r0, r3, r1
   1ea74:	b	1ea20 <GetDataSlab+0x291c>
   1ea78:	cmp	r5, #12
   1ea7c:	bne	1eaec <GetDataSlab+0x29e8>
   1ea80:	mla	r3, r2, r3, r1
   1ea84:	ldr	r2, [sp, #4]
   1ea88:	add	r1, r2, r3, lsl #3
   1ea8c:	mov	r2, #0
   1ea90:	ldr	r3, [sp, #204]	; 0xcc
   1ea94:	ldr	r3, [r3, #4]
   1ea98:	cmp	r3, r2
   1ea9c:	ble	1c230 <GetDataSlab+0x12c>
   1eaa0:	mov	r3, #0
   1eaa4:	b	1eac4 <GetDataSlab+0x29c0>
   1eaa8:	ldr	r0, [sl]
   1eaac:	ldr	ip, [sp]
   1eab0:	mul	r0, r0, r3
   1eab4:	add	r3, r3, #1
   1eab8:	ldr	r0, [r1, r0, lsl #3]
   1eabc:	strb	r0, [ip], #1
   1eac0:	str	ip, [sp]
   1eac4:	ldr	r0, [sp, #204]	; 0xcc
   1eac8:	ldr	r0, [r0]
   1eacc:	cmp	r0, r3
   1ead0:	bgt	1eaa8 <GetDataSlab+0x29a4>
   1ead4:	ldr	r0, [fp]
   1ead8:	add	r2, r2, #1
   1eadc:	ldr	r3, [sl, #4]
   1eae0:	mul	r3, r0, r3
   1eae4:	add	r1, r1, r3, lsl #3
   1eae8:	b	1ea90 <GetDataSlab+0x298c>
   1eaec:	cmp	r5, #13
   1eaf0:	bne	3236c <GetDataSlab+0x16268>
   1eaf4:	mla	r3, r2, r3, r1
   1eaf8:	ldr	r2, [sp, #4]
   1eafc:	add	r1, r2, r3, lsl #3
   1eb00:	mov	r2, #0
   1eb04:	ldr	r3, [sp, #204]	; 0xcc
   1eb08:	ldr	r3, [r3, #4]
   1eb0c:	cmp	r3, r2
   1eb10:	ble	1c230 <GetDataSlab+0x12c>
   1eb14:	mov	r3, #0
   1eb18:	b	1eb38 <GetDataSlab+0x2a34>
   1eb1c:	ldr	r0, [sl]
   1eb20:	ldr	ip, [sp]
   1eb24:	mul	r0, r0, r3
   1eb28:	add	r3, r3, #1
   1eb2c:	ldr	r0, [r1, r0, lsl #3]
   1eb30:	strb	r0, [ip], #1
   1eb34:	str	ip, [sp]
   1eb38:	ldr	r0, [sp, #204]	; 0xcc
   1eb3c:	ldr	r0, [r0]
   1eb40:	cmp	r0, r3
   1eb44:	bgt	1eb1c <GetDataSlab+0x2a18>
   1eb48:	ldr	r0, [fp]
   1eb4c:	add	r2, r2, #1
   1eb50:	ldr	r3, [sl, #4]
   1eb54:	mul	r3, r0, r3
   1eb58:	add	r1, r1, r3, lsl #3
   1eb5c:	b	1eb04 <GetDataSlab+0x2a00>
   1eb60:	sub	r0, r5, #1
   1eb64:	cmp	r0, #8
   1eb68:	addls	pc, pc, r0, lsl #2
   1eb6c:	b	1ef0c <GetDataSlab+0x2e08>
   1eb70:	b	1ee3c <GetDataSlab+0x2d38>
   1eb74:	b	1eea4 <GetDataSlab+0x2da0>
   1eb78:	b	1ed5c <GetDataSlab+0x2c58>
   1eb7c:	b	1edcc <GetDataSlab+0x2cc8>
   1eb80:	b	1ec84 <GetDataSlab+0x2b80>
   1eb84:	b	1ecf0 <GetDataSlab+0x2bec>
   1eb88:	b	1ec0c <GetDataSlab+0x2b08>
   1eb8c:	b	1ef0c <GetDataSlab+0x2e08>
   1eb90:	b	1eb94 <GetDataSlab+0x2a90>
   1eb94:	mla	r3, r2, r3, r1
   1eb98:	ldr	r2, [sp, #4]
   1eb9c:	add	r1, r2, r3, lsl #3
   1eba0:	mov	r2, #0
   1eba4:	ldr	r3, [sp, #204]	; 0xcc
   1eba8:	ldr	r3, [r3, #4]
   1ebac:	cmp	r3, r2
   1ebb0:	ble	1c230 <GetDataSlab+0x12c>
   1ebb4:	mov	r3, #0
   1ebb8:	b	1ebe4 <GetDataSlab+0x2ae0>
   1ebbc:	ldr	r0, [sl]
   1ebc0:	ldr	ip, [sp]
   1ebc4:	mul	r0, r0, r3
   1ebc8:	add	r3, r3, #1
   1ebcc:	add	r0, r1, r0, lsl #3
   1ebd0:	vldr	d7, [r0]
   1ebd4:	vcvt.u32.f64	s15, d7
   1ebd8:	vmov	r0, s15
   1ebdc:	strb	r0, [ip], #1
   1ebe0:	str	ip, [sp]
   1ebe4:	ldr	r0, [sp, #204]	; 0xcc
   1ebe8:	ldr	r0, [r0]
   1ebec:	cmp	r0, r3
   1ebf0:	bgt	1ebbc <GetDataSlab+0x2ab8>
   1ebf4:	ldr	r0, [fp]
   1ebf8:	add	r2, r2, #1
   1ebfc:	ldr	r3, [sl, #4]
   1ec00:	mul	r3, r0, r3
   1ec04:	add	r1, r1, r3, lsl #3
   1ec08:	b	1eba4 <GetDataSlab+0x2aa0>
   1ec0c:	mla	r3, r2, r3, r1
   1ec10:	ldr	r2, [sp, #4]
   1ec14:	add	r1, r2, r3, lsl #2
   1ec18:	mov	r2, #0
   1ec1c:	ldr	r3, [sp, #204]	; 0xcc
   1ec20:	ldr	r3, [r3, #4]
   1ec24:	cmp	r3, r2
   1ec28:	ble	1c230 <GetDataSlab+0x12c>
   1ec2c:	mov	r3, #0
   1ec30:	b	1ec5c <GetDataSlab+0x2b58>
   1ec34:	ldr	r0, [sl]
   1ec38:	ldr	ip, [sp]
   1ec3c:	mul	r0, r0, r3
   1ec40:	add	r3, r3, #1
   1ec44:	add	r0, r1, r0, lsl #2
   1ec48:	vldr	s15, [r0]
   1ec4c:	vcvt.u32.f32	s15, s15
   1ec50:	vmov	r0, s15
   1ec54:	strb	r0, [ip], #1
   1ec58:	str	ip, [sp]
   1ec5c:	ldr	r0, [sp, #204]	; 0xcc
   1ec60:	ldr	r0, [r0]
   1ec64:	cmp	r0, r3
   1ec68:	bgt	1ec34 <GetDataSlab+0x2b30>
   1ec6c:	ldr	r0, [fp]
   1ec70:	add	r2, r2, #1
   1ec74:	ldr	r3, [sl, #4]
   1ec78:	mul	r3, r0, r3
   1ec7c:	add	r1, r1, r3, lsl #2
   1ec80:	b	1ec1c <GetDataSlab+0x2b18>
   1ec84:	mla	r3, r2, r3, r1
   1ec88:	ldr	r2, [sp, #4]
   1ec8c:	add	r1, r2, r3, lsl #2
   1ec90:	mov	r2, #0
   1ec94:	ldr	r3, [sp, #204]	; 0xcc
   1ec98:	ldr	r3, [r3, #4]
   1ec9c:	cmp	r3, r2
   1eca0:	ble	1c230 <GetDataSlab+0x12c>
   1eca4:	mov	r3, #0
   1eca8:	b	1ecc8 <GetDataSlab+0x2bc4>
   1ecac:	ldr	r0, [sl]
   1ecb0:	ldr	ip, [sp]
   1ecb4:	mul	r0, r0, r3
   1ecb8:	add	r3, r3, #1
   1ecbc:	ldr	r0, [r1, r0, lsl #2]
   1ecc0:	strb	r0, [ip], #1
   1ecc4:	str	ip, [sp]
   1ecc8:	ldr	r0, [sp, #204]	; 0xcc
   1eccc:	ldr	r0, [r0]
   1ecd0:	cmp	r0, r3
   1ecd4:	bgt	1ecac <GetDataSlab+0x2ba8>
   1ecd8:	ldr	r0, [fp]
   1ecdc:	add	r2, r2, #1
   1ece0:	ldr	r3, [sl, #4]
   1ece4:	mul	r3, r0, r3
   1ece8:	add	r1, r1, r3, lsl #2
   1ecec:	b	1ec94 <GetDataSlab+0x2b90>
   1ecf0:	mla	r3, r2, r3, r1
   1ecf4:	ldr	r2, [sp, #4]
   1ecf8:	add	r1, r2, r3, lsl #2
   1ecfc:	mov	r2, #0
   1ed00:	ldr	r3, [sp, #204]	; 0xcc
   1ed04:	ldr	r3, [r3, #4]
   1ed08:	cmp	r3, r2
   1ed0c:	ble	1c230 <GetDataSlab+0x12c>
   1ed10:	mov	r3, #0
   1ed14:	b	1ed34 <GetDataSlab+0x2c30>
   1ed18:	ldr	r0, [sl]
   1ed1c:	ldr	ip, [sp]
   1ed20:	mul	r0, r0, r3
   1ed24:	add	r3, r3, #1
   1ed28:	ldr	r0, [r1, r0, lsl #2]
   1ed2c:	strb	r0, [ip], #1
   1ed30:	str	ip, [sp]
   1ed34:	ldr	r0, [sp, #204]	; 0xcc
   1ed38:	ldr	r0, [r0]
   1ed3c:	cmp	r0, r3
   1ed40:	bgt	1ed18 <GetDataSlab+0x2c14>
   1ed44:	ldr	r0, [fp]
   1ed48:	add	r2, r2, #1
   1ed4c:	ldr	r3, [sl, #4]
   1ed50:	mul	r3, r0, r3
   1ed54:	add	r1, r1, r3, lsl #2
   1ed58:	b	1ed00 <GetDataSlab+0x2bfc>
   1ed5c:	mla	r3, r2, r3, r1
   1ed60:	ldr	r2, [sp, #4]
   1ed64:	add	r1, r2, r3, lsl #1
   1ed68:	mov	r2, #0
   1ed6c:	ldr	r3, [sp, #204]	; 0xcc
   1ed70:	ldr	r3, [r3, #4]
   1ed74:	cmp	r3, r2
   1ed78:	ble	1c230 <GetDataSlab+0x12c>
   1ed7c:	mov	r3, #0
   1ed80:	b	1eda4 <GetDataSlab+0x2ca0>
   1ed84:	ldr	r0, [sl]
   1ed88:	ldr	ip, [sp]
   1ed8c:	mul	r0, r0, r3
   1ed90:	add	r3, r3, #1
   1ed94:	lsl	r0, r0, #1
   1ed98:	ldrh	r0, [r1, r0]
   1ed9c:	strb	r0, [ip], #1
   1eda0:	str	ip, [sp]
   1eda4:	ldr	r0, [sp, #204]	; 0xcc
   1eda8:	ldr	r0, [r0]
   1edac:	cmp	r0, r3
   1edb0:	bgt	1ed84 <GetDataSlab+0x2c80>
   1edb4:	ldr	r0, [fp]
   1edb8:	add	r2, r2, #1
   1edbc:	ldr	r3, [sl, #4]
   1edc0:	mul	r3, r0, r3
   1edc4:	add	r1, r1, r3, lsl #1
   1edc8:	b	1ed6c <GetDataSlab+0x2c68>
   1edcc:	mla	r3, r2, r3, r1
   1edd0:	ldr	r2, [sp, #4]
   1edd4:	add	r1, r2, r3, lsl #1
   1edd8:	mov	r2, #0
   1eddc:	ldr	r3, [sp, #204]	; 0xcc
   1ede0:	ldr	r3, [r3, #4]
   1ede4:	cmp	r3, r2
   1ede8:	ble	1c230 <GetDataSlab+0x12c>
   1edec:	mov	r3, #0
   1edf0:	b	1ee14 <GetDataSlab+0x2d10>
   1edf4:	ldr	r0, [sl]
   1edf8:	ldr	ip, [sp]
   1edfc:	mul	r0, r0, r3
   1ee00:	add	r3, r3, #1
   1ee04:	lsl	r0, r0, #1
   1ee08:	ldrh	r0, [r1, r0]
   1ee0c:	strb	r0, [ip], #1
   1ee10:	str	ip, [sp]
   1ee14:	ldr	r0, [sp, #204]	; 0xcc
   1ee18:	ldr	r0, [r0]
   1ee1c:	cmp	r0, r3
   1ee20:	bgt	1edf4 <GetDataSlab+0x2cf0>
   1ee24:	ldr	r0, [fp]
   1ee28:	add	r2, r2, #1
   1ee2c:	ldr	r3, [sl, #4]
   1ee30:	mul	r3, r0, r3
   1ee34:	add	r1, r1, r3, lsl #1
   1ee38:	b	1eddc <GetDataSlab+0x2cd8>
   1ee3c:	mla	r3, r2, r3, r1
   1ee40:	ldr	r2, [sp, #4]
   1ee44:	add	r1, r2, r3
   1ee48:	mov	r2, #0
   1ee4c:	ldr	r3, [sp, #204]	; 0xcc
   1ee50:	ldr	r3, [r3, #4]
   1ee54:	cmp	r3, r2
   1ee58:	ble	1c230 <GetDataSlab+0x12c>
   1ee5c:	mov	r3, #0
   1ee60:	b	1ee80 <GetDataSlab+0x2d7c>
   1ee64:	ldr	r0, [sl]
   1ee68:	ldr	ip, [sp]
   1ee6c:	mul	r0, r0, r3
   1ee70:	add	r3, r3, #1
   1ee74:	ldrb	r0, [r1, r0]
   1ee78:	strb	r0, [ip], #1
   1ee7c:	str	ip, [sp]
   1ee80:	ldr	r0, [sp, #204]	; 0xcc
   1ee84:	ldr	r0, [r0]
   1ee88:	cmp	r0, r3
   1ee8c:	bgt	1ee64 <GetDataSlab+0x2d60>
   1ee90:	ldr	r0, [fp]
   1ee94:	add	r2, r2, #1
   1ee98:	ldr	r3, [sl, #4]
   1ee9c:	mla	r1, r0, r3, r1
   1eea0:	b	1ee4c <GetDataSlab+0x2d48>
   1eea4:	mla	r3, r2, r3, r1
   1eea8:	ldr	r2, [sp, #4]
   1eeac:	add	r1, r2, r3
   1eeb0:	mov	r2, #0
   1eeb4:	ldr	r3, [sp, #204]	; 0xcc
   1eeb8:	ldr	r3, [r3, #4]
   1eebc:	cmp	r3, r2
   1eec0:	ble	1c230 <GetDataSlab+0x12c>
   1eec4:	mov	r3, #0
   1eec8:	b	1eee8 <GetDataSlab+0x2de4>
   1eecc:	ldr	r0, [sl]
   1eed0:	ldr	ip, [sp]
   1eed4:	mul	r0, r0, r3
   1eed8:	add	r3, r3, #1
   1eedc:	ldrb	r0, [r1, r0]
   1eee0:	strb	r0, [ip], #1
   1eee4:	str	ip, [sp]
   1eee8:	ldr	r0, [sp, #204]	; 0xcc
   1eeec:	ldr	r0, [r0]
   1eef0:	cmp	r0, r3
   1eef4:	bgt	1eecc <GetDataSlab+0x2dc8>
   1eef8:	ldr	r0, [fp]
   1eefc:	add	r2, r2, #1
   1ef00:	ldr	r3, [sl, #4]
   1ef04:	mla	r1, r0, r3, r1
   1ef08:	b	1eeb4 <GetDataSlab+0x2db0>
   1ef0c:	cmp	r5, #12
   1ef10:	bne	1ef80 <GetDataSlab+0x2e7c>
   1ef14:	mla	r3, r2, r3, r1
   1ef18:	ldr	r2, [sp, #4]
   1ef1c:	add	r1, r2, r3, lsl #3
   1ef20:	mov	r2, #0
   1ef24:	ldr	r3, [sp, #204]	; 0xcc
   1ef28:	ldr	r3, [r3, #4]
   1ef2c:	cmp	r3, r2
   1ef30:	ble	1c230 <GetDataSlab+0x12c>
   1ef34:	mov	r3, #0
   1ef38:	b	1ef58 <GetDataSlab+0x2e54>
   1ef3c:	ldr	r0, [sl]
   1ef40:	ldr	ip, [sp]
   1ef44:	mul	r0, r0, r3
   1ef48:	add	r3, r3, #1
   1ef4c:	ldr	r0, [r1, r0, lsl #3]
   1ef50:	strb	r0, [ip], #1
   1ef54:	str	ip, [sp]
   1ef58:	ldr	r0, [sp, #204]	; 0xcc
   1ef5c:	ldr	r0, [r0]
   1ef60:	cmp	r0, r3
   1ef64:	bgt	1ef3c <GetDataSlab+0x2e38>
   1ef68:	ldr	r0, [fp]
   1ef6c:	add	r2, r2, #1
   1ef70:	ldr	r3, [sl, #4]
   1ef74:	mul	r3, r0, r3
   1ef78:	add	r1, r1, r3, lsl #3
   1ef7c:	b	1ef24 <GetDataSlab+0x2e20>
   1ef80:	cmp	r5, #13
   1ef84:	bne	3236c <GetDataSlab+0x16268>
   1ef88:	mla	r3, r2, r3, r1
   1ef8c:	ldr	r2, [sp, #4]
   1ef90:	add	r1, r2, r3, lsl #3
   1ef94:	mov	r2, #0
   1ef98:	ldr	r3, [sp, #204]	; 0xcc
   1ef9c:	ldr	r3, [r3, #4]
   1efa0:	cmp	r3, r2
   1efa4:	ble	1c230 <GetDataSlab+0x12c>
   1efa8:	mov	r3, #0
   1efac:	b	1efcc <GetDataSlab+0x2ec8>
   1efb0:	ldr	r0, [sl]
   1efb4:	ldr	ip, [sp]
   1efb8:	mul	r0, r0, r3
   1efbc:	add	r3, r3, #1
   1efc0:	ldr	r0, [r1, r0, lsl #3]
   1efc4:	strb	r0, [ip], #1
   1efc8:	str	ip, [sp]
   1efcc:	ldr	r0, [sp, #204]	; 0xcc
   1efd0:	ldr	r0, [r0]
   1efd4:	cmp	r0, r3
   1efd8:	bgt	1efb0 <GetDataSlab+0x2eac>
   1efdc:	ldr	r0, [fp]
   1efe0:	add	r2, r2, #1
   1efe4:	ldr	r3, [sl, #4]
   1efe8:	mul	r3, r0, r3
   1efec:	add	r1, r1, r3, lsl #3
   1eff0:	b	1ef98 <GetDataSlab+0x2e94>
   1eff4:	mov	r2, #40	; 0x28
   1eff8:	mov	r1, #0
   1effc:	add	r0, sp, #32
   1f000:	bl	15f8 <memset@plt>
   1f004:	mov	r2, #40	; 0x28
   1f008:	mov	r1, #0
   1f00c:	add	r0, sp, #72	; 0x48
   1f010:	bl	15f8 <memset@plt>
   1f014:	mov	r2, #40	; 0x28
   1f018:	mov	r1, #0
   1f01c:	add	r0, sp, #112	; 0x70
   1f020:	bl	15f8 <memset@plt>
   1f024:	sub	r3, r6, #6
   1f028:	cmp	r3, #9
   1f02c:	addls	pc, pc, r3, lsl #2
   1f030:	b	3236c <GetDataSlab+0x16268>
   1f034:	b	1f05c <GetDataSlab+0x2f58>
   1f038:	b	20fbc <GetDataSlab+0x4eb8>
   1f03c:	b	2e714 <GetDataSlab+0x12610>
   1f040:	b	30540 <GetDataSlab+0x1443c>
   1f044:	b	2a9fc <GetDataSlab+0xe8f8>
   1f048:	b	2c888 <GetDataSlab+0x10784>
   1f04c:	b	26dc4 <GetDataSlab+0xacc0>
   1f050:	b	28be0 <GetDataSlab+0xcadc>
   1f054:	b	22f1c <GetDataSlab+0x6e18>
   1f058:	b	24e70 <GetDataSlab+0x8d6c>
   1f05c:	sub	r3, r5, #1
   1f060:	cmp	r3, #8
   1f064:	addls	pc, pc, r3, lsl #2
   1f068:	b	20910 <GetDataSlab+0x480c>
   1f06c:	b	20308 <GetDataSlab+0x4204>
   1f070:	b	2060c <GetDataSlab+0x4508>
   1f074:	b	1fcd8 <GetDataSlab+0x3bd4>
   1f078:	b	1fff0 <GetDataSlab+0x3eec>
   1f07c:	b	1f6b0 <GetDataSlab+0x35ac>
   1f080:	b	1f9c4 <GetDataSlab+0x38c0>
   1f084:	b	1f39c <GetDataSlab+0x3298>
   1f088:	b	20910 <GetDataSlab+0x480c>
   1f08c:	b	1f090 <GetDataSlab+0x2f8c>
   1f090:	ldr	r5, [sl]
   1f094:	add	lr, sp, #32
   1f098:	mov	r6, fp
   1f09c:	mov	r4, #0
   1f0a0:	mov	r2, #1
   1f0a4:	sub	r3, r5, #1
   1f0a8:	str	r3, [sp, #32]
   1f0ac:	ldr	r3, [fp]
   1f0b0:	str	r3, [sp, #8]
   1f0b4:	str	r3, [sp, #112]	; 0x70
   1f0b8:	ldr	r3, [sp, #204]	; 0xcc
   1f0bc:	ldr	r7, [r3]
   1f0c0:	add	r3, sp, #112	; 0x70
   1f0c4:	mov	ip, r3
   1f0c8:	str	r3, [sp, #12]
   1f0cc:	mov	r9, r7
   1f0d0:	ldr	r3, [sp, #208]	; 0xd0
   1f0d4:	cmp	r2, r3
   1f0d8:	blt	1f1ec <GetDataSlab+0x30e8>
   1f0dc:	ldr	r3, [sp, #4]
   1f0e0:	cmp	r5, #1
   1f0e4:	add	ip, r3, r4, lsl #3
   1f0e8:	beq	1f364 <GetDataSlab+0x3260>
   1f0ec:	bic	r3, r7, r7, asr #31
   1f0f0:	mov	r6, #0
   1f0f4:	lsl	r8, r5, #3
   1f0f8:	mul	sl, r5, r7
   1f0fc:	mul	fp, r3, r5
   1f100:	mul	r3, r3, r8
   1f104:	str	r3, [sp, #4]
   1f108:	cmp	r6, r9
   1f10c:	bge	1c230 <GetDataSlab+0x12c>
   1f110:	ldr	r3, [sp, #196]	; 0xc4
   1f114:	mov	r2, #0
   1f118:	ldr	r1, [r3]
   1f11c:	ldr	r3, [sp]
   1f120:	cmp	r1, #0
   1f124:	addne	ip, ip, r1, lsl #3
   1f128:	addne	r4, r4, r1
   1f12c:	add	r0, r3, r6, lsl #3
   1f130:	mov	r3, ip
   1f134:	cmp	r2, r7
   1f138:	blt	1f36c <GetDataSlab+0x3268>
   1f13c:	ldr	r3, [sp, #8]
   1f140:	add	r5, sp, #72	; 0x48
   1f144:	mov	lr, #1
   1f148:	ldr	r0, [sp, #12]
   1f14c:	sub	r3, r3, r1
   1f150:	sub	r2, r3, sl
   1f154:	add	r3, r4, fp
   1f158:	add	r4, r3, r2
   1f15c:	ldr	r3, [sp, #4]
   1f160:	add	r3, r3, r2, lsl #3
   1f164:	add	ip, ip, r3
   1f168:	ldr	r3, [sp, #208]	; 0xd0
   1f16c:	cmp	lr, r3
   1f170:	bge	1f394 <GetDataSlab+0x3290>
   1f174:	ldr	r3, [r5, #4]
   1f178:	add	r2, r3, #1
   1f17c:	ldr	r3, [sp, #204]	; 0xcc
   1f180:	str	r2, [r5, #4]
   1f184:	ldr	r1, [r3, lr, lsl #2]
   1f188:	sdiv	r3, r2, r1
   1f18c:	mls	r3, r1, r3, r2
   1f190:	cmp	r3, #0
   1f194:	bne	1f380 <GetDataSlab+0x327c>
   1f198:	ldr	r2, [r0, #4]
   1f19c:	str	r3, [r5, #4]
   1f1a0:	ldr	r1, [sp, #196]	; 0xc4
   1f1a4:	sdiv	r3, r4, r2
   1f1a8:	ldr	r1, [r1, lr, lsl #2]
   1f1ac:	mls	r3, r2, r3, r4
   1f1b0:	cmp	r3, #0
   1f1b4:	subne	r3, r2, r3
   1f1b8:	ldrne	r2, [r0]
   1f1bc:	mlane	r3, r1, r2, r3
   1f1c0:	bne	1f1d4 <GetDataSlab+0x30d0>
   1f1c4:	cmp	r1, #0
   1f1c8:	beq	1f1dc <GetDataSlab+0x30d8>
   1f1cc:	ldr	r3, [r0]
   1f1d0:	mul	r3, r3, r1
   1f1d4:	add	ip, ip, r3, lsl #3
   1f1d8:	add	r4, r4, r3
   1f1dc:	add	lr, lr, #1
   1f1e0:	add	r0, r0, #4
   1f1e4:	add	r5, r5, #4
   1f1e8:	b	1f168 <GetDataSlab+0x3064>
   1f1ec:	ldr	r3, [sl, r2, lsl #2]
   1f1f0:	mov	r8, ip
   1f1f4:	sub	r3, r3, #1
   1f1f8:	str	r3, [lr, #4]
   1f1fc:	ldr	r3, [r6], #4
   1f200:	mov	r1, r6
   1f204:	str	r3, [ip, #4]
   1f208:	cmp	r1, fp
   1f20c:	bne	1f23c <GetDataSlab+0x3138>
   1f210:	ldr	r1, [sp, #196]	; 0xc4
   1f214:	add	ip, ip, #4
   1f218:	add	lr, lr, #4
   1f21c:	ldr	r3, [sp, #204]	; 0xcc
   1f220:	ldr	r1, [r1, r2, lsl #2]
   1f224:	ldr	r3, [r3, r2, lsl #2]
   1f228:	add	r2, r2, #1
   1f22c:	mul	r9, r3, r9
   1f230:	ldr	r3, [r8]
   1f234:	mla	r4, r1, r3, r4
   1f238:	b	1f0d0 <GetDataSlab+0x2fcc>
   1f23c:	str	r1, [sp, #16]
   1f240:	ldr	r3, [r1, #-4]!
   1f244:	ldr	r0, [lr, #4]
   1f248:	mul	r3, r3, r0
   1f24c:	ldr	r0, [ip, #4]
   1f250:	str	r3, [lr, #4]
   1f254:	ldr	r3, [sp, #16]
   1f258:	ldr	r3, [r3]
   1f25c:	mul	r3, r3, r0
   1f260:	str	r3, [ip, #4]
   1f264:	b	1f208 <GetDataSlab+0x3104>
   1f268:	ldrd	r2, [r5], #8
   1f26c:	add	r0, r0, #1
   1f270:	strd	r2, [lr], #8
   1f274:	b	1f2bc <GetDataSlab+0x31b8>
   1f278:	add	r3, sp, #152	; 0x98
   1f27c:	add	r3, r3, r0, lsl #2
   1f280:	ldr	r3, [r3, #-120]	; 0xffffff88
   1f284:	add	ip, ip, r3, lsl #3
   1f288:	add	r4, r4, r3
   1f28c:	add	r6, r6, r7
   1f290:	cmp	r6, r9
   1f294:	bge	1c230 <GetDataSlab+0x12c>
   1f298:	ldr	r3, [sp, #196]	; 0xc4
   1f29c:	mov	r0, #0
   1f2a0:	ldr	r1, [r3]
   1f2a4:	ldr	r3, [sp]
   1f2a8:	cmp	r1, #0
   1f2ac:	addne	ip, ip, r1, lsl #3
   1f2b0:	addne	r4, r4, r1
   1f2b4:	add	lr, r3, r6, lsl #3
   1f2b8:	mov	r5, ip
   1f2bc:	cmp	r0, r7
   1f2c0:	blt	1f268 <GetDataSlab+0x3164>
   1f2c4:	ldr	r3, [sp, #8]
   1f2c8:	add	r5, sp, #72	; 0x48
   1f2cc:	mov	r0, #1
   1f2d0:	ldr	lr, [sp, #12]
   1f2d4:	sub	r3, r3, r1
   1f2d8:	add	ip, ip, r3, lsl #3
   1f2dc:	add	r4, r4, r3
   1f2e0:	ldr	r3, [sp, #208]	; 0xd0
   1f2e4:	cmp	r0, r3
   1f2e8:	bge	1f28c <GetDataSlab+0x3188>
   1f2ec:	ldr	r3, [r5, #4]
   1f2f0:	add	r2, r3, #1
   1f2f4:	ldr	r3, [sp, #204]	; 0xcc
   1f2f8:	str	r2, [r5, #4]
   1f2fc:	ldr	r1, [r3, r0, lsl #2]
   1f300:	sdiv	r3, r2, r1
   1f304:	mls	r3, r1, r3, r2
   1f308:	cmp	r3, #0
   1f30c:	bne	1f278 <GetDataSlab+0x3174>
   1f310:	ldr	r2, [lr, #4]
   1f314:	str	r3, [r5, #4]
   1f318:	ldr	r1, [sp, #196]	; 0xc4
   1f31c:	sdiv	r3, r4, r2
   1f320:	ldr	r1, [r1, r0, lsl #2]
   1f324:	mls	r3, r2, r3, r4
   1f328:	cmp	r3, #0
   1f32c:	ldrne	r8, [lr]
   1f330:	subne	r3, r2, r3
   1f334:	mlane	r3, r1, r8, r3
   1f338:	bne	1f34c <GetDataSlab+0x3248>
   1f33c:	cmp	r1, #0
   1f340:	beq	1f354 <GetDataSlab+0x3250>
   1f344:	ldr	r3, [lr]
   1f348:	mul	r3, r3, r1
   1f34c:	add	ip, ip, r3, lsl #3
   1f350:	add	r4, r4, r3
   1f354:	add	r0, r0, #1
   1f358:	add	lr, lr, #4
   1f35c:	add	r5, r5, #4
   1f360:	b	1f2e0 <GetDataSlab+0x31dc>
   1f364:	mov	r6, #0
   1f368:	b	1f290 <GetDataSlab+0x318c>
   1f36c:	vldr	d7, [r3]
   1f370:	add	r2, r2, #1
   1f374:	add	r3, r3, r8
   1f378:	vstmia	r0!, {d7}
   1f37c:	b	1f134 <GetDataSlab+0x3030>
   1f380:	add	r3, sp, #152	; 0x98
   1f384:	add	r3, r3, lr, lsl #2
   1f388:	ldr	r3, [r3, #-120]	; 0xffffff88
   1f38c:	add	ip, ip, r3, lsl #3
   1f390:	add	r4, r4, r3
   1f394:	add	r6, r6, r7
   1f398:	b	1f108 <GetDataSlab+0x3004>
   1f39c:	ldr	r5, [sl]
   1f3a0:	add	lr, sp, #32
   1f3a4:	mov	r6, fp
   1f3a8:	mov	r4, #0
   1f3ac:	mov	r2, #1
   1f3b0:	sub	r3, r5, #1
   1f3b4:	str	r3, [sp, #32]
   1f3b8:	ldr	r3, [fp]
   1f3bc:	str	r3, [sp, #8]
   1f3c0:	str	r3, [sp, #112]	; 0x70
   1f3c4:	ldr	r3, [sp, #204]	; 0xcc
   1f3c8:	ldr	r7, [r3]
   1f3cc:	add	r3, sp, #112	; 0x70
   1f3d0:	mov	ip, r3
   1f3d4:	str	r3, [sp, #12]
   1f3d8:	mov	r9, r7
   1f3dc:	ldr	r3, [sp, #208]	; 0xd0
   1f3e0:	cmp	r2, r3
   1f3e4:	blt	1f4f8 <GetDataSlab+0x33f4>
   1f3e8:	ldr	r3, [sp, #4]
   1f3ec:	cmp	r5, #1
   1f3f0:	add	r0, r3, r4, lsl #2
   1f3f4:	beq	1f674 <GetDataSlab+0x3570>
   1f3f8:	bic	r3, r7, r7, asr #31
   1f3fc:	mov	r6, #0
   1f400:	lsl	r8, r5, #2
   1f404:	mul	sl, r5, r7
   1f408:	mul	fp, r3, r5
   1f40c:	mul	r3, r3, r8
   1f410:	str	r3, [sp, #4]
   1f414:	cmp	r6, r9
   1f418:	bge	1c230 <GetDataSlab+0x12c>
   1f41c:	ldr	r3, [sp, #196]	; 0xc4
   1f420:	mov	r2, #0
   1f424:	ldr	r1, [r3]
   1f428:	ldr	r3, [sp]
   1f42c:	cmp	r1, #0
   1f430:	addne	r0, r0, r1, lsl #2
   1f434:	addne	r4, r4, r1
   1f438:	add	ip, r3, r6, lsl #3
   1f43c:	mov	r3, r0
   1f440:	cmp	r2, r7
   1f444:	blt	1f67c <GetDataSlab+0x3578>
   1f448:	ldr	r3, [sp, #8]
   1f44c:	add	r5, sp, #72	; 0x48
   1f450:	mov	lr, #1
   1f454:	ldr	ip, [sp, #12]
   1f458:	sub	r3, r3, r1
   1f45c:	sub	r2, r3, sl
   1f460:	add	r3, r4, fp
   1f464:	add	r4, r3, r2
   1f468:	ldr	r3, [sp, #4]
   1f46c:	add	r3, r3, r2, lsl #2
   1f470:	add	r0, r0, r3
   1f474:	ldr	r3, [sp, #208]	; 0xd0
   1f478:	cmp	lr, r3
   1f47c:	bge	1f6a8 <GetDataSlab+0x35a4>
   1f480:	ldr	r3, [r5, #4]
   1f484:	add	r2, r3, #1
   1f488:	ldr	r3, [sp, #204]	; 0xcc
   1f48c:	str	r2, [r5, #4]
   1f490:	ldr	r1, [r3, lr, lsl #2]
   1f494:	sdiv	r3, r2, r1
   1f498:	mls	r3, r1, r3, r2
   1f49c:	cmp	r3, #0
   1f4a0:	bne	1f694 <GetDataSlab+0x3590>
   1f4a4:	ldr	r2, [ip, #4]
   1f4a8:	str	r3, [r5, #4]
   1f4ac:	ldr	r1, [sp, #196]	; 0xc4
   1f4b0:	sdiv	r3, r4, r2
   1f4b4:	ldr	r1, [r1, lr, lsl #2]
   1f4b8:	mls	r3, r2, r3, r4
   1f4bc:	cmp	r3, #0
   1f4c0:	subne	r3, r2, r3
   1f4c4:	ldrne	r2, [ip]
   1f4c8:	mlane	r3, r1, r2, r3
   1f4cc:	bne	1f4e0 <GetDataSlab+0x33dc>
   1f4d0:	cmp	r1, #0
   1f4d4:	beq	1f4e8 <GetDataSlab+0x33e4>
   1f4d8:	ldr	r3, [ip]
   1f4dc:	mul	r3, r3, r1
   1f4e0:	add	r0, r0, r3, lsl #2
   1f4e4:	add	r4, r4, r3
   1f4e8:	add	lr, lr, #1
   1f4ec:	add	ip, ip, #4
   1f4f0:	add	r5, r5, #4
   1f4f4:	b	1f474 <GetDataSlab+0x3370>
   1f4f8:	ldr	r3, [sl, r2, lsl #2]
   1f4fc:	mov	r8, ip
   1f500:	sub	r3, r3, #1
   1f504:	str	r3, [lr, #4]
   1f508:	ldr	r3, [r6], #4
   1f50c:	mov	r1, r6
   1f510:	str	r3, [ip, #4]
   1f514:	cmp	r1, fp
   1f518:	bne	1f548 <GetDataSlab+0x3444>
   1f51c:	ldr	r1, [sp, #196]	; 0xc4
   1f520:	add	ip, ip, #4
   1f524:	add	lr, lr, #4
   1f528:	ldr	r3, [sp, #204]	; 0xcc
   1f52c:	ldr	r1, [r1, r2, lsl #2]
   1f530:	ldr	r3, [r3, r2, lsl #2]
   1f534:	add	r2, r2, #1
   1f538:	mul	r9, r3, r9
   1f53c:	ldr	r3, [r8]
   1f540:	mla	r4, r1, r3, r4
   1f544:	b	1f3dc <GetDataSlab+0x32d8>
   1f548:	str	r1, [sp, #16]
   1f54c:	ldr	r3, [r1, #-4]!
   1f550:	ldr	r0, [lr, #4]
   1f554:	mul	r3, r3, r0
   1f558:	ldr	r0, [ip, #4]
   1f55c:	str	r3, [lr, #4]
   1f560:	ldr	r3, [sp, #16]
   1f564:	ldr	r3, [r3]
   1f568:	mul	r3, r3, r0
   1f56c:	str	r3, [ip, #4]
   1f570:	b	1f514 <GetDataSlab+0x3410>
   1f574:	vldmia	ip!, {s15}
   1f578:	add	r2, r2, #1
   1f57c:	vcvt.f64.f32	d7, s15
   1f580:	vstmia	r1!, {d7}
   1f584:	b	1f5cc <GetDataSlab+0x34c8>
   1f588:	add	r3, sp, #152	; 0x98
   1f58c:	add	r3, r3, ip, lsl #2
   1f590:	ldr	r3, [r3, #-120]	; 0xffffff88
   1f594:	add	r0, r0, r3, lsl #2
   1f598:	add	r4, r4, r3
   1f59c:	add	r6, r6, r7
   1f5a0:	cmp	r6, r9
   1f5a4:	bge	1c230 <GetDataSlab+0x12c>
   1f5a8:	ldr	r2, [sp]
   1f5ac:	ldr	r3, [sp, #196]	; 0xc4
   1f5b0:	add	r1, r2, r6, lsl #3
   1f5b4:	mov	r2, #0
   1f5b8:	ldr	r3, [r3]
   1f5bc:	cmp	r3, #0
   1f5c0:	addne	r0, r0, r3, lsl #2
   1f5c4:	addne	r4, r4, r3
   1f5c8:	mov	ip, r0
   1f5cc:	cmp	r2, r7
   1f5d0:	blt	1f574 <GetDataSlab+0x3470>
   1f5d4:	ldr	r2, [sp, #8]
   1f5d8:	add	r5, sp, #72	; 0x48
   1f5dc:	mov	ip, #1
   1f5e0:	ldr	lr, [sp, #12]
   1f5e4:	sub	r3, r2, r3
   1f5e8:	add	r0, r0, r3, lsl #2
   1f5ec:	add	r4, r4, r3
   1f5f0:	ldr	r3, [sp, #208]	; 0xd0
   1f5f4:	cmp	ip, r3
   1f5f8:	bge	1f59c <GetDataSlab+0x3498>
   1f5fc:	ldr	r3, [r5, #4]
   1f600:	add	r2, r3, #1
   1f604:	ldr	r3, [sp, #204]	; 0xcc
   1f608:	str	r2, [r5, #4]
   1f60c:	ldr	r1, [r3, ip, lsl #2]
   1f610:	sdiv	r3, r2, r1
   1f614:	mls	r3, r1, r3, r2
   1f618:	cmp	r3, #0
   1f61c:	bne	1f588 <GetDataSlab+0x3484>
   1f620:	ldr	r2, [lr, #4]
   1f624:	str	r3, [r5, #4]
   1f628:	ldr	r1, [sp, #196]	; 0xc4
   1f62c:	sdiv	r3, r4, r2
   1f630:	ldr	r1, [r1, ip, lsl #2]
   1f634:	mls	r3, r2, r3, r4
   1f638:	cmp	r3, #0
   1f63c:	ldrne	r8, [lr]
   1f640:	subne	r3, r2, r3
   1f644:	mlane	r3, r1, r8, r3
   1f648:	bne	1f65c <GetDataSlab+0x3558>
   1f64c:	cmp	r1, #0
   1f650:	beq	1f664 <GetDataSlab+0x3560>
   1f654:	ldr	r3, [lr]
   1f658:	mul	r3, r3, r1
   1f65c:	add	r0, r0, r3, lsl #2
   1f660:	add	r4, r4, r3
   1f664:	add	ip, ip, #1
   1f668:	add	lr, lr, #4
   1f66c:	add	r5, r5, #4
   1f670:	b	1f5f0 <GetDataSlab+0x34ec>
   1f674:	mov	r6, #0
   1f678:	b	1f5a0 <GetDataSlab+0x349c>
   1f67c:	vldr	s15, [r3]
   1f680:	add	r2, r2, #1
   1f684:	add	r3, r3, r8
   1f688:	vcvt.f64.f32	d7, s15
   1f68c:	vstmia	ip!, {d7}
   1f690:	b	1f440 <GetDataSlab+0x333c>
   1f694:	add	r3, sp, #152	; 0x98
   1f698:	add	r3, r3, lr, lsl #2
   1f69c:	ldr	r3, [r3, #-120]	; 0xffffff88
   1f6a0:	add	r0, r0, r3, lsl #2
   1f6a4:	add	r4, r4, r3
   1f6a8:	add	r6, r6, r7
   1f6ac:	b	1f414 <GetDataSlab+0x3310>
   1f6b0:	ldr	r5, [sl]
   1f6b4:	add	r4, sp, #32
   1f6b8:	mov	r6, fp
   1f6bc:	mov	ip, #0
   1f6c0:	mov	r2, #1
   1f6c4:	sub	r3, r5, #1
   1f6c8:	str	r3, [sp, #32]
   1f6cc:	ldr	r3, [fp]
   1f6d0:	str	r3, [sp, #8]
   1f6d4:	str	r3, [sp, #112]	; 0x70
   1f6d8:	ldr	r3, [sp, #204]	; 0xcc
   1f6dc:	ldr	r7, [r3]
   1f6e0:	add	r3, sp, #112	; 0x70
   1f6e4:	mov	lr, r3
   1f6e8:	str	r3, [sp, #12]
   1f6ec:	mov	r9, r7
   1f6f0:	ldr	r3, [sp, #208]	; 0xd0
   1f6f4:	cmp	r2, r3
   1f6f8:	blt	1f80c <GetDataSlab+0x3708>
   1f6fc:	ldr	r3, [sp, #4]
   1f700:	cmp	r5, #1
   1f704:	add	r0, r3, ip, lsl #2
   1f708:	beq	1f988 <GetDataSlab+0x3884>
   1f70c:	bic	r3, r7, r7, asr #31
   1f710:	mov	r6, #0
   1f714:	lsl	r8, r5, #2
   1f718:	mul	sl, r5, r7
   1f71c:	mul	fp, r3, r5
   1f720:	mul	r3, r3, r8
   1f724:	str	r3, [sp, #4]
   1f728:	cmp	r6, r9
   1f72c:	bge	1c230 <GetDataSlab+0x12c>
   1f730:	ldr	r3, [sp, #196]	; 0xc4
   1f734:	ldr	r1, [r3]
   1f738:	ldr	r3, [sp]
   1f73c:	cmp	r1, #0
   1f740:	addne	r0, r0, r1, lsl #2
   1f744:	addne	ip, ip, r1
   1f748:	add	lr, r3, r6, lsl #3
   1f74c:	mov	r3, #0
   1f750:	mov	r4, r0
   1f754:	cmp	r3, r7
   1f758:	blt	1f990 <GetDataSlab+0x388c>
   1f75c:	ldr	r3, [sp, #8]
   1f760:	add	r5, sp, #72	; 0x48
   1f764:	mov	r4, #1
   1f768:	ldr	lr, [sp, #12]
   1f76c:	sub	r3, r3, r1
   1f770:	sub	r2, r3, sl
   1f774:	add	r3, ip, fp
   1f778:	add	ip, r3, r2
   1f77c:	ldr	r3, [sp, #4]
   1f780:	add	r3, r3, r2, lsl #2
   1f784:	add	r0, r0, r3
   1f788:	ldr	r3, [sp, #208]	; 0xd0
   1f78c:	cmp	r4, r3
   1f790:	bge	1f9bc <GetDataSlab+0x38b8>
   1f794:	ldr	r3, [r5, #4]
   1f798:	add	r2, r3, #1
   1f79c:	ldr	r3, [sp, #204]	; 0xcc
   1f7a0:	str	r2, [r5, #4]
   1f7a4:	ldr	r1, [r3, r4, lsl #2]
   1f7a8:	sdiv	r3, r2, r1
   1f7ac:	mls	r3, r1, r3, r2
   1f7b0:	cmp	r3, #0
   1f7b4:	bne	1f9a8 <GetDataSlab+0x38a4>
   1f7b8:	ldr	r2, [lr, #4]
   1f7bc:	str	r3, [r5, #4]
   1f7c0:	ldr	r1, [sp, #196]	; 0xc4
   1f7c4:	sdiv	r3, ip, r2
   1f7c8:	ldr	r1, [r1, r4, lsl #2]
   1f7cc:	mls	r3, r2, r3, ip
   1f7d0:	cmp	r3, #0
   1f7d4:	subne	r3, r2, r3
   1f7d8:	ldrne	r2, [lr]
   1f7dc:	mlane	r3, r1, r2, r3
   1f7e0:	bne	1f7f4 <GetDataSlab+0x36f0>
   1f7e4:	cmp	r1, #0
   1f7e8:	beq	1f7fc <GetDataSlab+0x36f8>
   1f7ec:	ldr	r3, [lr]
   1f7f0:	mul	r3, r3, r1
   1f7f4:	add	r0, r0, r3, lsl #2
   1f7f8:	add	ip, ip, r3
   1f7fc:	add	r4, r4, #1
   1f800:	add	lr, lr, #4
   1f804:	add	r5, r5, #4
   1f808:	b	1f788 <GetDataSlab+0x3684>
   1f80c:	ldr	r3, [sl, r2, lsl #2]
   1f810:	mov	r8, lr
   1f814:	sub	r3, r3, #1
   1f818:	str	r3, [r4, #4]
   1f81c:	ldr	r3, [r6], #4
   1f820:	mov	r1, r6
   1f824:	str	r3, [lr, #4]
   1f828:	cmp	r1, fp
   1f82c:	bne	1f85c <GetDataSlab+0x3758>
   1f830:	ldr	r1, [sp, #196]	; 0xc4
   1f834:	add	lr, lr, #4
   1f838:	add	r4, r4, #4
   1f83c:	ldr	r3, [sp, #204]	; 0xcc
   1f840:	ldr	r1, [r1, r2, lsl #2]
   1f844:	ldr	r3, [r3, r2, lsl #2]
   1f848:	add	r2, r2, #1
   1f84c:	mul	r9, r3, r9
   1f850:	ldr	r3, [r8]
   1f854:	mla	ip, r1, r3, ip
   1f858:	b	1f6f0 <GetDataSlab+0x35ec>
   1f85c:	str	r1, [sp, #16]
   1f860:	ldr	r3, [r1, #-4]!
   1f864:	ldr	r0, [r4, #4]
   1f868:	mul	r3, r3, r0
   1f86c:	ldr	r0, [lr, #4]
   1f870:	str	r3, [r4, #4]
   1f874:	ldr	r3, [sp, #16]
   1f878:	ldr	r3, [r3]
   1f87c:	mul	r3, r3, r0
   1f880:	str	r3, [lr, #4]
   1f884:	b	1f828 <GetDataSlab+0x3724>
   1f888:	ldr	lr, [r0, r3, lsl #2]
   1f88c:	add	r3, r3, #1
   1f890:	vmov	s15, lr
   1f894:	vcvt.f64.s32	d7, s15
   1f898:	vstmia	r1!, {d7}
   1f89c:	b	1f8e0 <GetDataSlab+0x37dc>
   1f8a0:	add	r3, sp, #152	; 0x98
   1f8a4:	add	r3, r3, lr, lsl #2
   1f8a8:	ldr	r3, [r3, #-120]	; 0xffffff88
   1f8ac:	add	r0, r0, r3, lsl #2
   1f8b0:	add	ip, ip, r3
   1f8b4:	add	r6, r6, r7
   1f8b8:	cmp	r6, r9
   1f8bc:	bge	1c230 <GetDataSlab+0x12c>
   1f8c0:	ldr	r3, [sp, #196]	; 0xc4
   1f8c4:	ldr	r2, [r3]
   1f8c8:	ldr	r3, [sp]
   1f8cc:	cmp	r2, #0
   1f8d0:	addne	r0, r0, r2, lsl #2
   1f8d4:	addne	ip, ip, r2
   1f8d8:	add	r1, r3, r6, lsl #3
   1f8dc:	mov	r3, #0
   1f8e0:	cmp	r3, r7
   1f8e4:	blt	1f888 <GetDataSlab+0x3784>
   1f8e8:	ldr	r3, [sp, #8]
   1f8ec:	add	r5, sp, #72	; 0x48
   1f8f0:	mov	lr, #1
   1f8f4:	ldr	r4, [sp, #12]
   1f8f8:	sub	r3, r3, r2
   1f8fc:	add	r0, r0, r3, lsl #2
   1f900:	add	ip, ip, r3
   1f904:	ldr	r3, [sp, #208]	; 0xd0
   1f908:	cmp	lr, r3
   1f90c:	bge	1f8b4 <GetDataSlab+0x37b0>
   1f910:	ldr	r3, [r5, #4]
   1f914:	add	r2, r3, #1
   1f918:	ldr	r3, [sp, #204]	; 0xcc
   1f91c:	str	r2, [r5, #4]
   1f920:	ldr	r1, [r3, lr, lsl #2]
   1f924:	sdiv	r3, r2, r1
   1f928:	mls	r3, r1, r3, r2
   1f92c:	cmp	r3, #0
   1f930:	bne	1f8a0 <GetDataSlab+0x379c>
   1f934:	ldr	r2, [r4, #4]
   1f938:	str	r3, [r5, #4]
   1f93c:	ldr	r1, [sp, #196]	; 0xc4
   1f940:	sdiv	r3, ip, r2
   1f944:	ldr	r1, [r1, lr, lsl #2]
   1f948:	mls	r3, r2, r3, ip
   1f94c:	cmp	r3, #0
   1f950:	ldrne	r8, [r4]
   1f954:	subne	r3, r2, r3
   1f958:	mlane	r3, r1, r8, r3
   1f95c:	bne	1f970 <GetDataSlab+0x386c>
   1f960:	cmp	r1, #0
   1f964:	beq	1f978 <GetDataSlab+0x3874>
   1f968:	ldr	r3, [r4]
   1f96c:	mul	r3, r3, r1
   1f970:	add	r0, r0, r3, lsl #2
   1f974:	add	ip, ip, r3
   1f978:	add	lr, lr, #1
   1f97c:	add	r4, r4, #4
   1f980:	add	r5, r5, #4
   1f984:	b	1f904 <GetDataSlab+0x3800>
   1f988:	mov	r6, #0
   1f98c:	b	1f8b8 <GetDataSlab+0x37b4>
   1f990:	ldr	r2, [r4], r8
   1f994:	add	r3, r3, #1
   1f998:	vmov	s15, r2
   1f99c:	vcvt.f64.s32	d7, s15
   1f9a0:	vstmia	lr!, {d7}
   1f9a4:	b	1f754 <GetDataSlab+0x3650>
   1f9a8:	add	r3, sp, #152	; 0x98
   1f9ac:	add	r3, r3, r4, lsl #2
   1f9b0:	ldr	r3, [r3, #-120]	; 0xffffff88
   1f9b4:	add	r0, r0, r3, lsl #2
   1f9b8:	add	ip, ip, r3
   1f9bc:	add	r6, r6, r7
   1f9c0:	b	1f728 <GetDataSlab+0x3624>
   1f9c4:	ldr	r5, [sl]
   1f9c8:	add	r4, sp, #32
   1f9cc:	mov	r6, fp
   1f9d0:	mov	ip, #0
   1f9d4:	mov	r2, #1
   1f9d8:	sub	r3, r5, #1
   1f9dc:	str	r3, [sp, #32]
   1f9e0:	ldr	r3, [fp]
   1f9e4:	str	r3, [sp, #8]
   1f9e8:	str	r3, [sp, #112]	; 0x70
   1f9ec:	ldr	r3, [sp, #204]	; 0xcc
   1f9f0:	ldr	r7, [r3]
   1f9f4:	add	r3, sp, #112	; 0x70
   1f9f8:	mov	lr, r3
   1f9fc:	str	r3, [sp, #12]
   1fa00:	mov	r9, r7
   1fa04:	ldr	r3, [sp, #208]	; 0xd0
   1fa08:	cmp	r2, r3
   1fa0c:	blt	1fb20 <GetDataSlab+0x3a1c>
   1fa10:	ldr	r3, [sp, #4]
   1fa14:	cmp	r5, #1
   1fa18:	add	r0, r3, ip, lsl #2
   1fa1c:	beq	1fc9c <GetDataSlab+0x3b98>
   1fa20:	bic	r3, r7, r7, asr #31
   1fa24:	mov	r6, #0
   1fa28:	lsl	r8, r5, #2
   1fa2c:	mul	sl, r5, r7
   1fa30:	mul	r2, r3, r5
   1fa34:	mul	fp, r3, r8
   1fa38:	str	r2, [sp, #4]
   1fa3c:	cmp	r6, r9
   1fa40:	bge	1c230 <GetDataSlab+0x12c>
   1fa44:	ldr	r3, [sp, #196]	; 0xc4
   1fa48:	ldr	r1, [r3]
   1fa4c:	ldr	r3, [sp]
   1fa50:	cmp	r1, #0
   1fa54:	addne	r0, r0, r1, lsl #2
   1fa58:	addne	ip, ip, r1
   1fa5c:	add	lr, r3, r6, lsl #3
   1fa60:	mov	r3, #0
   1fa64:	mov	r4, r0
   1fa68:	cmp	r3, r7
   1fa6c:	blt	1fca4 <GetDataSlab+0x3ba0>
   1fa70:	ldr	r3, [sp, #8]
   1fa74:	add	r5, sp, #72	; 0x48
   1fa78:	mov	r4, #1
   1fa7c:	ldr	lr, [sp, #12]
   1fa80:	sub	r3, r3, r1
   1fa84:	sub	r2, r3, sl
   1fa88:	ldr	r3, [sp, #4]
   1fa8c:	add	r3, ip, r3
   1fa90:	add	ip, r3, r2
   1fa94:	add	r3, fp, r2, lsl #2
   1fa98:	add	r0, r0, r3
   1fa9c:	ldr	r3, [sp, #208]	; 0xd0
   1faa0:	cmp	r4, r3
   1faa4:	bge	1fcd0 <GetDataSlab+0x3bcc>
   1faa8:	ldr	r3, [r5, #4]
   1faac:	add	r2, r3, #1
   1fab0:	ldr	r3, [sp, #204]	; 0xcc
   1fab4:	str	r2, [r5, #4]
   1fab8:	ldr	r1, [r3, r4, lsl #2]
   1fabc:	sdiv	r3, r2, r1
   1fac0:	mls	r3, r1, r3, r2
   1fac4:	cmp	r3, #0
   1fac8:	bne	1fcbc <GetDataSlab+0x3bb8>
   1facc:	ldr	r2, [lr, #4]
   1fad0:	str	r3, [r5, #4]
   1fad4:	ldr	r1, [sp, #196]	; 0xc4
   1fad8:	sdiv	r3, ip, r2
   1fadc:	ldr	r1, [r1, r4, lsl #2]
   1fae0:	mls	r3, r2, r3, ip
   1fae4:	cmp	r3, #0
   1fae8:	subne	r3, r2, r3
   1faec:	ldrne	r2, [lr]
   1faf0:	mlane	r3, r1, r2, r3
   1faf4:	bne	1fb08 <GetDataSlab+0x3a04>
   1faf8:	cmp	r1, #0
   1fafc:	beq	1fb10 <GetDataSlab+0x3a0c>
   1fb00:	ldr	r3, [lr]
   1fb04:	mul	r3, r3, r1
   1fb08:	add	r0, r0, r3, lsl #2
   1fb0c:	add	ip, ip, r3
   1fb10:	add	r4, r4, #1
   1fb14:	add	lr, lr, #4
   1fb18:	add	r5, r5, #4
   1fb1c:	b	1fa9c <GetDataSlab+0x3998>
   1fb20:	ldr	r3, [sl, r2, lsl #2]
   1fb24:	mov	r8, lr
   1fb28:	sub	r3, r3, #1
   1fb2c:	str	r3, [r4, #4]
   1fb30:	ldr	r3, [r6], #4
   1fb34:	mov	r1, r6
   1fb38:	str	r3, [lr, #4]
   1fb3c:	cmp	fp, r1
   1fb40:	bne	1fb70 <GetDataSlab+0x3a6c>
   1fb44:	ldr	r1, [sp, #196]	; 0xc4
   1fb48:	add	lr, lr, #4
   1fb4c:	add	r4, r4, #4
   1fb50:	ldr	r3, [sp, #204]	; 0xcc
   1fb54:	ldr	r1, [r1, r2, lsl #2]
   1fb58:	ldr	r3, [r3, r2, lsl #2]
   1fb5c:	add	r2, r2, #1
   1fb60:	mul	r9, r3, r9
   1fb64:	ldr	r3, [r8]
   1fb68:	mla	ip, r1, r3, ip
   1fb6c:	b	1fa04 <GetDataSlab+0x3900>
   1fb70:	str	r1, [sp, #16]
   1fb74:	ldr	r3, [r1, #-4]!
   1fb78:	ldr	r0, [r4, #4]
   1fb7c:	mul	r3, r3, r0
   1fb80:	ldr	r0, [lr, #4]
   1fb84:	str	r3, [r4, #4]
   1fb88:	ldr	r3, [sp, #16]
   1fb8c:	ldr	r3, [r3]
   1fb90:	mul	r3, r3, r0
   1fb94:	str	r3, [lr, #4]
   1fb98:	b	1fb3c <GetDataSlab+0x3a38>
   1fb9c:	ldr	lr, [r0, r3, lsl #2]
   1fba0:	add	r3, r3, #1
   1fba4:	vmov	s15, lr
   1fba8:	vcvt.f64.u32	d7, s15
   1fbac:	vstmia	r1!, {d7}
   1fbb0:	b	1fbf4 <GetDataSlab+0x3af0>
   1fbb4:	add	r3, sp, #152	; 0x98
   1fbb8:	add	r3, r3, lr, lsl #2
   1fbbc:	ldr	r3, [r3, #-120]	; 0xffffff88
   1fbc0:	add	r0, r0, r3, lsl #2
   1fbc4:	add	ip, ip, r3
   1fbc8:	add	r6, r6, r7
   1fbcc:	cmp	r6, r9
   1fbd0:	bge	1c230 <GetDataSlab+0x12c>
   1fbd4:	ldr	r3, [sp, #196]	; 0xc4
   1fbd8:	ldr	r2, [r3]
   1fbdc:	ldr	r3, [sp]
   1fbe0:	cmp	r2, #0
   1fbe4:	addne	r0, r0, r2, lsl #2
   1fbe8:	addne	ip, ip, r2
   1fbec:	add	r1, r3, r6, lsl #3
   1fbf0:	mov	r3, #0
   1fbf4:	cmp	r3, r7
   1fbf8:	blt	1fb9c <GetDataSlab+0x3a98>
   1fbfc:	ldr	r3, [sp, #8]
   1fc00:	add	r5, sp, #72	; 0x48
   1fc04:	mov	lr, #1
   1fc08:	ldr	r4, [sp, #12]
   1fc0c:	sub	r3, r3, r2
   1fc10:	add	r0, r0, r3, lsl #2
   1fc14:	add	ip, ip, r3
   1fc18:	ldr	r3, [sp, #208]	; 0xd0
   1fc1c:	cmp	lr, r3
   1fc20:	bge	1fbc8 <GetDataSlab+0x3ac4>
   1fc24:	ldr	r3, [r5, #4]
   1fc28:	add	r2, r3, #1
   1fc2c:	ldr	r3, [sp, #204]	; 0xcc
   1fc30:	str	r2, [r5, #4]
   1fc34:	ldr	r1, [r3, lr, lsl #2]
   1fc38:	sdiv	r3, r2, r1
   1fc3c:	mls	r3, r1, r3, r2
   1fc40:	cmp	r3, #0
   1fc44:	bne	1fbb4 <GetDataSlab+0x3ab0>
   1fc48:	ldr	r2, [r4, #4]
   1fc4c:	str	r3, [r5, #4]
   1fc50:	ldr	r1, [sp, #196]	; 0xc4
   1fc54:	sdiv	r3, ip, r2
   1fc58:	ldr	r1, [r1, lr, lsl #2]
   1fc5c:	mls	r3, r2, r3, ip
   1fc60:	cmp	r3, #0
   1fc64:	ldrne	r8, [r4]
   1fc68:	subne	r3, r2, r3
   1fc6c:	mlane	r3, r1, r8, r3
   1fc70:	bne	1fc84 <GetDataSlab+0x3b80>
   1fc74:	cmp	r1, #0
   1fc78:	beq	1fc8c <GetDataSlab+0x3b88>
   1fc7c:	ldr	r3, [r4]
   1fc80:	mul	r3, r3, r1
   1fc84:	add	r0, r0, r3, lsl #2
   1fc88:	add	ip, ip, r3
   1fc8c:	add	lr, lr, #1
   1fc90:	add	r4, r4, #4
   1fc94:	add	r5, r5, #4
   1fc98:	b	1fc18 <GetDataSlab+0x3b14>
   1fc9c:	mov	r6, #0
   1fca0:	b	1fbcc <GetDataSlab+0x3ac8>
   1fca4:	ldr	r2, [r4], r8
   1fca8:	add	r3, r3, #1
   1fcac:	vmov	s15, r2
   1fcb0:	vcvt.f64.u32	d7, s15
   1fcb4:	vstmia	lr!, {d7}
   1fcb8:	b	1fa68 <GetDataSlab+0x3964>
   1fcbc:	add	r3, sp, #152	; 0x98
   1fcc0:	add	r3, r3, r4, lsl #2
   1fcc4:	ldr	r3, [r3, #-120]	; 0xffffff88
   1fcc8:	add	r0, r0, r3, lsl #2
   1fccc:	add	ip, ip, r3
   1fcd0:	add	r6, r6, r7
   1fcd4:	b	1fa3c <GetDataSlab+0x3938>
   1fcd8:	ldr	r5, [sl]
   1fcdc:	add	lr, sp, #32
   1fce0:	mov	r6, fp
   1fce4:	mov	r4, #0
   1fce8:	mov	r2, #1
   1fcec:	sub	r3, r5, #1
   1fcf0:	str	r3, [sp, #32]
   1fcf4:	ldr	r3, [fp]
   1fcf8:	str	r3, [sp, #8]
   1fcfc:	str	r3, [sp, #112]	; 0x70
   1fd00:	ldr	r3, [sp, #204]	; 0xcc
   1fd04:	ldr	r7, [r3]
   1fd08:	add	r3, sp, #112	; 0x70
   1fd0c:	mov	ip, r3
   1fd10:	str	r3, [sp, #12]
   1fd14:	mov	r9, r7
   1fd18:	ldr	r3, [sp, #208]	; 0xd0
   1fd1c:	cmp	r2, r3
   1fd20:	blt	1fe34 <GetDataSlab+0x3d30>
   1fd24:	ldr	r3, [sp, #4]
   1fd28:	cmp	r5, #1
   1fd2c:	add	r0, r3, r4, lsl #1
   1fd30:	beq	1ffb4 <GetDataSlab+0x3eb0>
   1fd34:	bic	r3, r7, r7, asr #31
   1fd38:	mov	r6, #0
   1fd3c:	lsl	r8, r5, #1
   1fd40:	mul	sl, r5, r7
   1fd44:	mul	r2, r3, r5
   1fd48:	mul	fp, r3, r8
   1fd4c:	str	r2, [sp, #4]
   1fd50:	cmp	r6, r9
   1fd54:	bge	1c230 <GetDataSlab+0x12c>
   1fd58:	ldr	r3, [sp, #196]	; 0xc4
   1fd5c:	ldr	r1, [r3]
   1fd60:	ldr	r3, [sp]
   1fd64:	cmp	r1, #0
   1fd68:	addne	r0, r0, r1, lsl #1
   1fd6c:	addne	r4, r4, r1
   1fd70:	add	ip, r3, r6, lsl #3
   1fd74:	mov	r3, #0
   1fd78:	mov	lr, r0
   1fd7c:	cmp	r3, r7
   1fd80:	blt	1ffbc <GetDataSlab+0x3eb8>
   1fd84:	ldr	r3, [sp, #8]
   1fd88:	add	r5, sp, #72	; 0x48
   1fd8c:	mov	lr, #1
   1fd90:	ldr	ip, [sp, #12]
   1fd94:	sub	r3, r3, r1
   1fd98:	sub	r2, r3, sl
   1fd9c:	ldr	r3, [sp, #4]
   1fda0:	add	r3, r4, r3
   1fda4:	add	r4, r3, r2
   1fda8:	add	r3, fp, r2, lsl #1
   1fdac:	add	r0, r0, r3
   1fdb0:	ldr	r3, [sp, #208]	; 0xd0
   1fdb4:	cmp	lr, r3
   1fdb8:	bge	1ffe8 <GetDataSlab+0x3ee4>
   1fdbc:	ldr	r3, [r5, #4]
   1fdc0:	add	r2, r3, #1
   1fdc4:	ldr	r3, [sp, #204]	; 0xcc
   1fdc8:	str	r2, [r5, #4]
   1fdcc:	ldr	r1, [r3, lr, lsl #2]
   1fdd0:	sdiv	r3, r2, r1
   1fdd4:	mls	r3, r1, r3, r2
   1fdd8:	cmp	r3, #0
   1fddc:	bne	1ffd4 <GetDataSlab+0x3ed0>
   1fde0:	ldr	r2, [ip, #4]
   1fde4:	str	r3, [r5, #4]
   1fde8:	ldr	r1, [sp, #196]	; 0xc4
   1fdec:	sdiv	r3, r4, r2
   1fdf0:	ldr	r1, [r1, lr, lsl #2]
   1fdf4:	mls	r3, r2, r3, r4
   1fdf8:	cmp	r3, #0
   1fdfc:	subne	r3, r2, r3
   1fe00:	ldrne	r2, [ip]
   1fe04:	mlane	r3, r1, r2, r3
   1fe08:	bne	1fe1c <GetDataSlab+0x3d18>
   1fe0c:	cmp	r1, #0
   1fe10:	beq	1fe24 <GetDataSlab+0x3d20>
   1fe14:	ldr	r3, [ip]
   1fe18:	mul	r3, r3, r1
   1fe1c:	add	r0, r0, r3, lsl #1
   1fe20:	add	r4, r4, r3
   1fe24:	add	lr, lr, #1
   1fe28:	add	ip, ip, #4
   1fe2c:	add	r5, r5, #4
   1fe30:	b	1fdb0 <GetDataSlab+0x3cac>
   1fe34:	ldr	r3, [sl, r2, lsl #2]
   1fe38:	mov	r8, ip
   1fe3c:	sub	r3, r3, #1
   1fe40:	str	r3, [lr, #4]
   1fe44:	ldr	r3, [r6], #4
   1fe48:	mov	r1, r6
   1fe4c:	str	r3, [ip, #4]
   1fe50:	cmp	r1, fp
   1fe54:	bne	1fe84 <GetDataSlab+0x3d80>
   1fe58:	ldr	r1, [sp, #196]	; 0xc4
   1fe5c:	add	ip, ip, #4
   1fe60:	add	lr, lr, #4
   1fe64:	ldr	r3, [sp, #204]	; 0xcc
   1fe68:	ldr	r1, [r1, r2, lsl #2]
   1fe6c:	ldr	r3, [r3, r2, lsl #2]
   1fe70:	add	r2, r2, #1
   1fe74:	mul	r9, r3, r9
   1fe78:	ldr	r3, [r8]
   1fe7c:	mla	r4, r1, r3, r4
   1fe80:	b	1fd18 <GetDataSlab+0x3c14>
   1fe84:	str	r1, [sp, #16]
   1fe88:	ldr	r3, [r1, #-4]!
   1fe8c:	ldr	r0, [lr, #4]
   1fe90:	mul	r3, r3, r0
   1fe94:	ldr	r0, [ip, #4]
   1fe98:	str	r3, [lr, #4]
   1fe9c:	ldr	r3, [sp, #16]
   1fea0:	ldr	r3, [r3]
   1fea4:	mul	r3, r3, r0
   1fea8:	str	r3, [ip, #4]
   1feac:	b	1fe50 <GetDataSlab+0x3d4c>
   1feb0:	ldrsh	r1, [ip, #2]!
   1feb4:	add	r2, r2, #1
   1feb8:	vmov	s15, r1
   1febc:	vcvt.f64.s32	d7, s15
   1fec0:	vstmia	lr!, {d7}
   1fec4:	b	1ff0c <GetDataSlab+0x3e08>
   1fec8:	add	r3, sp, #152	; 0x98
   1fecc:	add	r3, r3, ip, lsl #2
   1fed0:	ldr	r3, [r3, #-120]	; 0xffffff88
   1fed4:	add	r0, r0, r3, lsl #1
   1fed8:	add	r4, r4, r3
   1fedc:	add	r6, r6, r7
   1fee0:	cmp	r6, r9
   1fee4:	bge	1c230 <GetDataSlab+0x12c>
   1fee8:	ldr	r2, [sp]
   1feec:	ldr	r3, [sp, #196]	; 0xc4
   1fef0:	add	lr, r2, r6, lsl #3
   1fef4:	mov	r2, #0
   1fef8:	ldr	r3, [r3]
   1fefc:	cmp	r3, #0
   1ff00:	addne	r0, r0, r3, lsl #1
   1ff04:	addne	r4, r4, r3
   1ff08:	sub	ip, r0, #2
   1ff0c:	cmp	r2, r7
   1ff10:	blt	1feb0 <GetDataSlab+0x3dac>
   1ff14:	ldr	r2, [sp, #8]
   1ff18:	add	r5, sp, #72	; 0x48
   1ff1c:	mov	ip, #1
   1ff20:	ldr	lr, [sp, #12]
   1ff24:	sub	r3, r2, r3
   1ff28:	add	r0, r0, r3, lsl #1
   1ff2c:	add	r4, r4, r3
   1ff30:	ldr	r3, [sp, #208]	; 0xd0
   1ff34:	cmp	ip, r3
   1ff38:	bge	1fedc <GetDataSlab+0x3dd8>
   1ff3c:	ldr	r3, [r5, #4]
   1ff40:	add	r2, r3, #1
   1ff44:	ldr	r3, [sp, #204]	; 0xcc
   1ff48:	str	r2, [r5, #4]
   1ff4c:	ldr	r1, [r3, ip, lsl #2]
   1ff50:	sdiv	r3, r2, r1
   1ff54:	mls	r3, r1, r3, r2
   1ff58:	cmp	r3, #0
   1ff5c:	bne	1fec8 <GetDataSlab+0x3dc4>
   1ff60:	ldr	r2, [lr, #4]
   1ff64:	str	r3, [r5, #4]
   1ff68:	ldr	r1, [sp, #196]	; 0xc4
   1ff6c:	sdiv	r3, r4, r2
   1ff70:	ldr	r1, [r1, ip, lsl #2]
   1ff74:	mls	r3, r2, r3, r4
   1ff78:	cmp	r3, #0
   1ff7c:	ldrne	r8, [lr]
   1ff80:	subne	r3, r2, r3
   1ff84:	mlane	r3, r1, r8, r3
   1ff88:	bne	1ff9c <GetDataSlab+0x3e98>
   1ff8c:	cmp	r1, #0
   1ff90:	beq	1ffa4 <GetDataSlab+0x3ea0>
   1ff94:	ldr	r3, [lr]
   1ff98:	mul	r3, r3, r1
   1ff9c:	add	r0, r0, r3, lsl #1
   1ffa0:	add	r4, r4, r3
   1ffa4:	add	ip, ip, #1
   1ffa8:	add	lr, lr, #4
   1ffac:	add	r5, r5, #4
   1ffb0:	b	1ff30 <GetDataSlab+0x3e2c>
   1ffb4:	mov	r6, #0
   1ffb8:	b	1fee0 <GetDataSlab+0x3ddc>
   1ffbc:	ldrsh	r2, [lr], r8
   1ffc0:	add	r3, r3, #1
   1ffc4:	vmov	s15, r2
   1ffc8:	vcvt.f64.s32	d7, s15
   1ffcc:	vstmia	ip!, {d7}
   1ffd0:	b	1fd7c <GetDataSlab+0x3c78>
   1ffd4:	add	r3, sp, #152	; 0x98
   1ffd8:	add	r3, r3, lr, lsl #2
   1ffdc:	ldr	r3, [r3, #-120]	; 0xffffff88
   1ffe0:	add	r0, r0, r3, lsl #1
   1ffe4:	add	r4, r4, r3
   1ffe8:	add	r6, r6, r7
   1ffec:	b	1fd50 <GetDataSlab+0x3c4c>
   1fff0:	ldr	r5, [sl]
   1fff4:	add	lr, sp, #32
   1fff8:	mov	r6, fp
   1fffc:	mov	r4, #0
   20000:	mov	r2, #1
   20004:	sub	r3, r5, #1
   20008:	str	r3, [sp, #32]
   2000c:	ldr	r3, [fp]
   20010:	str	r3, [sp, #8]
   20014:	str	r3, [sp, #112]	; 0x70
   20018:	ldr	r3, [sp, #204]	; 0xcc
   2001c:	ldr	r7, [r3]
   20020:	add	r3, sp, #112	; 0x70
   20024:	mov	ip, r3
   20028:	str	r3, [sp, #12]
   2002c:	mov	r9, r7
   20030:	ldr	r3, [sp, #208]	; 0xd0
   20034:	cmp	r2, r3
   20038:	blt	2014c <GetDataSlab+0x4048>
   2003c:	ldr	r3, [sp, #4]
   20040:	cmp	r5, #1
   20044:	add	r0, r3, r4, lsl #1
   20048:	beq	202cc <GetDataSlab+0x41c8>
   2004c:	bic	r3, r7, r7, asr #31
   20050:	mov	r6, #0
   20054:	lsl	r8, r5, #1
   20058:	mul	sl, r5, r7
   2005c:	mul	r2, r3, r5
   20060:	mul	fp, r3, r8
   20064:	str	r2, [sp, #4]
   20068:	cmp	r6, r9
   2006c:	bge	1c230 <GetDataSlab+0x12c>
   20070:	ldr	r3, [sp, #196]	; 0xc4
   20074:	ldr	r1, [r3]
   20078:	ldr	r3, [sp]
   2007c:	cmp	r1, #0
   20080:	addne	r0, r0, r1, lsl #1
   20084:	addne	r4, r4, r1
   20088:	add	ip, r3, r6, lsl #3
   2008c:	mov	r3, #0
   20090:	mov	lr, r0
   20094:	cmp	r3, r7
   20098:	blt	202d4 <GetDataSlab+0x41d0>
   2009c:	ldr	r3, [sp, #8]
   200a0:	add	r5, sp, #72	; 0x48
   200a4:	mov	lr, #1
   200a8:	ldr	ip, [sp, #12]
   200ac:	sub	r3, r3, r1
   200b0:	sub	r2, r3, sl
   200b4:	ldr	r3, [sp, #4]
   200b8:	add	r3, r4, r3
   200bc:	add	r4, r3, r2
   200c0:	add	r3, fp, r2, lsl #1
   200c4:	add	r0, r0, r3
   200c8:	ldr	r3, [sp, #208]	; 0xd0
   200cc:	cmp	lr, r3
   200d0:	bge	20300 <GetDataSlab+0x41fc>
   200d4:	ldr	r3, [r5, #4]
   200d8:	add	r2, r3, #1
   200dc:	ldr	r3, [sp, #204]	; 0xcc
   200e0:	str	r2, [r5, #4]
   200e4:	ldr	r1, [r3, lr, lsl #2]
   200e8:	sdiv	r3, r2, r1
   200ec:	mls	r3, r1, r3, r2
   200f0:	cmp	r3, #0
   200f4:	bne	202ec <GetDataSlab+0x41e8>
   200f8:	ldr	r2, [ip, #4]
   200fc:	str	r3, [r5, #4]
   20100:	ldr	r1, [sp, #196]	; 0xc4
   20104:	sdiv	r3, r4, r2
   20108:	ldr	r1, [r1, lr, lsl #2]
   2010c:	mls	r3, r2, r3, r4
   20110:	cmp	r3, #0
   20114:	subne	r3, r2, r3
   20118:	ldrne	r2, [ip]
   2011c:	mlane	r3, r1, r2, r3
   20120:	bne	20134 <GetDataSlab+0x4030>
   20124:	cmp	r1, #0
   20128:	beq	2013c <GetDataSlab+0x4038>
   2012c:	ldr	r3, [ip]
   20130:	mul	r3, r3, r1
   20134:	add	r0, r0, r3, lsl #1
   20138:	add	r4, r4, r3
   2013c:	add	lr, lr, #1
   20140:	add	ip, ip, #4
   20144:	add	r5, r5, #4
   20148:	b	200c8 <GetDataSlab+0x3fc4>
   2014c:	ldr	r3, [sl, r2, lsl #2]
   20150:	mov	r8, ip
   20154:	sub	r3, r3, #1
   20158:	str	r3, [lr, #4]
   2015c:	ldr	r3, [r6], #4
   20160:	mov	r1, r6
   20164:	str	r3, [ip, #4]
   20168:	cmp	r1, fp
   2016c:	bne	2019c <GetDataSlab+0x4098>
   20170:	ldr	r1, [sp, #196]	; 0xc4
   20174:	add	ip, ip, #4
   20178:	add	lr, lr, #4
   2017c:	ldr	r3, [sp, #204]	; 0xcc
   20180:	ldr	r1, [r1, r2, lsl #2]
   20184:	ldr	r3, [r3, r2, lsl #2]
   20188:	add	r2, r2, #1
   2018c:	mul	r9, r3, r9
   20190:	ldr	r3, [r8]
   20194:	mla	r4, r1, r3, r4
   20198:	b	20030 <GetDataSlab+0x3f2c>
   2019c:	str	r1, [sp, #16]
   201a0:	ldr	r3, [r1, #-4]!
   201a4:	ldr	r0, [lr, #4]
   201a8:	mul	r3, r3, r0
   201ac:	ldr	r0, [ip, #4]
   201b0:	str	r3, [lr, #4]
   201b4:	ldr	r3, [sp, #16]
   201b8:	ldr	r3, [r3]
   201bc:	mul	r3, r3, r0
   201c0:	str	r3, [ip, #4]
   201c4:	b	20168 <GetDataSlab+0x4064>
   201c8:	ldrh	r1, [ip, #2]!
   201cc:	add	r2, r2, #1
   201d0:	vmov	s15, r1
   201d4:	vcvt.f64.u32	d7, s15
   201d8:	vstmia	lr!, {d7}
   201dc:	b	20224 <GetDataSlab+0x4120>
   201e0:	add	r3, sp, #152	; 0x98
   201e4:	add	r3, r3, ip, lsl #2
   201e8:	ldr	r3, [r3, #-120]	; 0xffffff88
   201ec:	add	r0, r0, r3, lsl #1
   201f0:	add	r4, r4, r3
   201f4:	add	r6, r6, r7
   201f8:	cmp	r6, r9
   201fc:	bge	1c230 <GetDataSlab+0x12c>
   20200:	ldr	r2, [sp]
   20204:	ldr	r3, [sp, #196]	; 0xc4
   20208:	add	lr, r2, r6, lsl #3
   2020c:	mov	r2, #0
   20210:	ldr	r3, [r3]
   20214:	cmp	r3, #0
   20218:	addne	r0, r0, r3, lsl #1
   2021c:	addne	r4, r4, r3
   20220:	sub	ip, r0, #2
   20224:	cmp	r2, r7
   20228:	blt	201c8 <GetDataSlab+0x40c4>
   2022c:	ldr	r2, [sp, #8]
   20230:	add	r5, sp, #72	; 0x48
   20234:	mov	ip, #1
   20238:	ldr	lr, [sp, #12]
   2023c:	sub	r3, r2, r3
   20240:	add	r0, r0, r3, lsl #1
   20244:	add	r4, r4, r3
   20248:	ldr	r3, [sp, #208]	; 0xd0
   2024c:	cmp	ip, r3
   20250:	bge	201f4 <GetDataSlab+0x40f0>
   20254:	ldr	r3, [r5, #4]
   20258:	add	r2, r3, #1
   2025c:	ldr	r3, [sp, #204]	; 0xcc
   20260:	str	r2, [r5, #4]
   20264:	ldr	r1, [r3, ip, lsl #2]
   20268:	sdiv	r3, r2, r1
   2026c:	mls	r3, r1, r3, r2
   20270:	cmp	r3, #0
   20274:	bne	201e0 <GetDataSlab+0x40dc>
   20278:	ldr	r2, [lr, #4]
   2027c:	str	r3, [r5, #4]
   20280:	ldr	r1, [sp, #196]	; 0xc4
   20284:	sdiv	r3, r4, r2
   20288:	ldr	r1, [r1, ip, lsl #2]
   2028c:	mls	r3, r2, r3, r4
   20290:	cmp	r3, #0
   20294:	ldrne	r8, [lr]
   20298:	subne	r3, r2, r3
   2029c:	mlane	r3, r1, r8, r3
   202a0:	bne	202b4 <GetDataSlab+0x41b0>
   202a4:	cmp	r1, #0
   202a8:	beq	202bc <GetDataSlab+0x41b8>
   202ac:	ldr	r3, [lr]
   202b0:	mul	r3, r3, r1
   202b4:	add	r0, r0, r3, lsl #1
   202b8:	add	r4, r4, r3
   202bc:	add	ip, ip, #1
   202c0:	add	lr, lr, #4
   202c4:	add	r5, r5, #4
   202c8:	b	20248 <GetDataSlab+0x4144>
   202cc:	mov	r6, #0
   202d0:	b	201f8 <GetDataSlab+0x40f4>
   202d4:	ldrh	r2, [lr], r8
   202d8:	add	r3, r3, #1
   202dc:	vmov	s15, r2
   202e0:	vcvt.f64.u32	d7, s15
   202e4:	vstmia	ip!, {d7}
   202e8:	b	20094 <GetDataSlab+0x3f90>
   202ec:	add	r3, sp, #152	; 0x98
   202f0:	add	r3, r3, lr, lsl #2
   202f4:	ldr	r3, [r3, #-120]	; 0xffffff88
   202f8:	add	r0, r0, r3, lsl #1
   202fc:	add	r4, r4, r3
   20300:	add	r6, r6, r7
   20304:	b	20068 <GetDataSlab+0x3f64>
   20308:	ldr	r8, [sl]
   2030c:	add	r4, sp, #32
   20310:	mov	r5, fp
   20314:	mov	ip, #0
   20318:	mov	r2, #1
   2031c:	sub	r3, r8, #1
   20320:	str	r3, [sp, #32]
   20324:	ldr	r3, [fp]
   20328:	str	r3, [sp, #8]
   2032c:	str	r3, [sp, #112]	; 0x70
   20330:	ldr	r3, [sp, #204]	; 0xcc
   20334:	ldr	r7, [r3]
   20338:	add	r3, sp, #112	; 0x70
   2033c:	mov	lr, r3
   20340:	str	r3, [sp, #12]
   20344:	mov	r9, r7
   20348:	ldr	r3, [sp, #208]	; 0xd0
   2034c:	cmp	r2, r3
   20350:	blt	20454 <GetDataSlab+0x4350>
   20354:	ldr	r3, [sp, #4]
   20358:	cmp	r8, #1
   2035c:	add	r0, r3, ip
   20360:	beq	205d0 <GetDataSlab+0x44cc>
   20364:	bic	r3, r7, r7, asr #31
   20368:	mov	r6, #0
   2036c:	mul	fp, r8, r7
   20370:	mul	sl, r8, r3
   20374:	cmp	r6, r9
   20378:	bge	1c230 <GetDataSlab+0x12c>
   2037c:	ldr	r3, [sp, #196]	; 0xc4
   20380:	ldr	r1, [r3]
   20384:	ldr	r3, [sp]
   20388:	cmp	r1, #0
   2038c:	addne	r0, r0, r1
   20390:	addne	ip, ip, r1
   20394:	add	lr, r3, r6, lsl #3
   20398:	mov	r4, r0
   2039c:	mov	r3, #0
   203a0:	cmp	r3, r7
   203a4:	blt	205d8 <GetDataSlab+0x44d4>
   203a8:	ldr	r3, [sp, #8]
   203ac:	add	r5, sp, #72	; 0x48
   203b0:	mov	r4, #1
   203b4:	ldr	lr, [sp, #12]
   203b8:	sub	r3, r3, r1
   203bc:	sub	r2, r3, fp
   203c0:	add	r3, ip, sl
   203c4:	add	ip, r3, r2
   203c8:	add	r3, r2, sl
   203cc:	add	r0, r0, r3
   203d0:	ldr	r3, [sp, #208]	; 0xd0
   203d4:	cmp	r4, r3
   203d8:	bge	20604 <GetDataSlab+0x4500>
   203dc:	ldr	r3, [r5, #4]
   203e0:	add	r2, r3, #1
   203e4:	ldr	r3, [sp, #204]	; 0xcc
   203e8:	str	r2, [r5, #4]
   203ec:	ldr	r1, [r3, r4, lsl #2]
   203f0:	sdiv	r3, r2, r1
   203f4:	mls	r3, r1, r3, r2
   203f8:	cmp	r3, #0
   203fc:	bne	205f0 <GetDataSlab+0x44ec>
   20400:	ldr	r2, [lr, #4]
   20404:	str	r3, [r5, #4]
   20408:	ldr	r1, [sp, #196]	; 0xc4
   2040c:	sdiv	r3, ip, r2
   20410:	ldr	r1, [r1, r4, lsl #2]
   20414:	mls	r3, r2, r3, ip
   20418:	cmp	r3, #0
   2041c:	subne	r3, r2, r3
   20420:	ldrne	r2, [lr]
   20424:	mlane	r3, r1, r2, r3
   20428:	bne	2043c <GetDataSlab+0x4338>
   2042c:	cmp	r1, #0
   20430:	beq	20444 <GetDataSlab+0x4340>
   20434:	ldr	r3, [lr]
   20438:	mul	r3, r3, r1
   2043c:	add	r0, r0, r3
   20440:	add	ip, ip, r3
   20444:	add	r4, r4, #1
   20448:	add	lr, lr, #4
   2044c:	add	r5, r5, #4
   20450:	b	203d0 <GetDataSlab+0x42cc>
   20454:	ldr	r3, [sl, r2, lsl #2]
   20458:	mov	r6, lr
   2045c:	sub	r3, r3, #1
   20460:	str	r3, [r4, #4]
   20464:	ldr	r3, [r5], #4
   20468:	mov	r1, r5
   2046c:	str	r3, [lr, #4]
   20470:	cmp	fp, r1
   20474:	bne	204a4 <GetDataSlab+0x43a0>
   20478:	ldr	r1, [sp, #196]	; 0xc4
   2047c:	add	lr, lr, #4
   20480:	add	r4, r4, #4
   20484:	ldr	r3, [sp, #204]	; 0xcc
   20488:	ldr	r1, [r1, r2, lsl #2]
   2048c:	ldr	r3, [r3, r2, lsl #2]
   20490:	add	r2, r2, #1
   20494:	mul	r9, r3, r9
   20498:	ldr	r3, [r6]
   2049c:	mla	ip, r1, r3, ip
   204a0:	b	20348 <GetDataSlab+0x4244>
   204a4:	str	r1, [sp, #16]
   204a8:	ldr	r3, [r1, #-4]!
   204ac:	ldr	r0, [r4, #4]
   204b0:	mul	r3, r3, r0
   204b4:	ldr	r0, [lr, #4]
   204b8:	str	r3, [r4, #4]
   204bc:	ldr	r3, [sp, #16]
   204c0:	ldr	r3, [r3]
   204c4:	mul	r3, r3, r0
   204c8:	str	r3, [lr, #4]
   204cc:	b	20470 <GetDataSlab+0x436c>
   204d0:	ldrsb	lr, [r0, r2]
   204d4:	add	r2, r2, #1
   204d8:	vmov	s15, lr
   204dc:	vcvt.f64.s32	d7, s15
   204e0:	vstmia	r1!, {d7}
   204e4:	b	20528 <GetDataSlab+0x4424>
   204e8:	add	r3, sp, #152	; 0x98
   204ec:	add	r3, r3, lr, lsl #2
   204f0:	ldr	r3, [r3, #-120]	; 0xffffff88
   204f4:	add	ip, ip, r3
   204f8:	add	r0, r0, r3
   204fc:	add	r6, r6, r7
   20500:	cmp	r6, r9
   20504:	bge	1c230 <GetDataSlab+0x12c>
   20508:	ldr	r2, [sp]
   2050c:	ldr	r3, [sp, #196]	; 0xc4
   20510:	add	r1, r2, r6, lsl #3
   20514:	mov	r2, #0
   20518:	ldr	r3, [r3]
   2051c:	cmp	r3, #0
   20520:	addne	r0, r0, r3
   20524:	addne	ip, ip, r3
   20528:	cmp	r2, r7
   2052c:	blt	204d0 <GetDataSlab+0x43cc>
   20530:	ldr	r2, [sp, #8]
   20534:	add	r5, sp, #72	; 0x48
   20538:	mov	lr, #1
   2053c:	ldr	r4, [sp, #12]
   20540:	sub	r3, r2, r3
   20544:	add	ip, ip, r3
   20548:	add	r0, r0, r3
   2054c:	ldr	r3, [sp, #208]	; 0xd0
   20550:	cmp	lr, r3
   20554:	bge	204fc <GetDataSlab+0x43f8>
   20558:	ldr	r3, [r5, #4]
   2055c:	add	r2, r3, #1
   20560:	ldr	r3, [sp, #204]	; 0xcc
   20564:	str	r2, [r5, #4]
   20568:	ldr	r1, [r3, lr, lsl #2]
   2056c:	sdiv	r3, r2, r1
   20570:	mls	r3, r1, r3, r2
   20574:	cmp	r3, #0
   20578:	bne	204e8 <GetDataSlab+0x43e4>
   2057c:	ldr	r2, [r4, #4]
   20580:	str	r3, [r5, #4]
   20584:	ldr	r1, [sp, #196]	; 0xc4
   20588:	sdiv	r3, ip, r2
   2058c:	ldr	r1, [r1, lr, lsl #2]
   20590:	mls	r3, r2, r3, ip
   20594:	cmp	r3, #0
   20598:	ldrne	r8, [r4]
   2059c:	subne	r3, r2, r3
   205a0:	mlane	r3, r1, r8, r3
   205a4:	bne	205b8 <GetDataSlab+0x44b4>
   205a8:	cmp	r1, #0
   205ac:	beq	205c0 <GetDataSlab+0x44bc>
   205b0:	ldr	r3, [r4]
   205b4:	mul	r3, r3, r1
   205b8:	add	r0, r0, r3
   205bc:	add	ip, ip, r3
   205c0:	add	lr, lr, #1
   205c4:	add	r4, r4, #4
   205c8:	add	r5, r5, #4
   205cc:	b	2054c <GetDataSlab+0x4448>
   205d0:	mov	r6, #0
   205d4:	b	20500 <GetDataSlab+0x43fc>
   205d8:	ldrsb	r2, [r4], r8
   205dc:	add	r3, r3, #1
   205e0:	vmov	s15, r2
   205e4:	vcvt.f64.s32	d7, s15
   205e8:	vstmia	lr!, {d7}
   205ec:	b	203a0 <GetDataSlab+0x429c>
   205f0:	add	r3, sp, #152	; 0x98
   205f4:	add	r3, r3, r4, lsl #2
   205f8:	ldr	r3, [r3, #-120]	; 0xffffff88
   205fc:	add	ip, ip, r3
   20600:	add	r0, r0, r3
   20604:	add	r6, r6, r7
   20608:	b	20374 <GetDataSlab+0x4270>
   2060c:	ldr	r8, [sl]
   20610:	add	r4, sp, #32
   20614:	mov	r5, fp
   20618:	mov	ip, #0
   2061c:	mov	r2, #1
   20620:	sub	r3, r8, #1
   20624:	str	r3, [sp, #32]
   20628:	ldr	r3, [fp]
   2062c:	str	r3, [sp, #8]
   20630:	str	r3, [sp, #112]	; 0x70
   20634:	ldr	r3, [sp, #204]	; 0xcc
   20638:	ldr	r7, [r3]
   2063c:	add	r3, sp, #112	; 0x70
   20640:	mov	lr, r3
   20644:	str	r3, [sp, #12]
   20648:	mov	r9, r7
   2064c:	ldr	r3, [sp, #208]	; 0xd0
   20650:	cmp	r2, r3
   20654:	blt	20758 <GetDataSlab+0x4654>
   20658:	ldr	r3, [sp, #4]
   2065c:	cmp	r8, #1
   20660:	add	r0, r3, ip
   20664:	beq	208d4 <GetDataSlab+0x47d0>
   20668:	bic	r3, r7, r7, asr #31
   2066c:	mov	r6, #0
   20670:	mul	fp, r8, r7
   20674:	mul	sl, r8, r3
   20678:	cmp	r6, r9
   2067c:	bge	1c230 <GetDataSlab+0x12c>
   20680:	ldr	r3, [sp, #196]	; 0xc4
   20684:	ldr	r1, [r3]
   20688:	ldr	r3, [sp]
   2068c:	cmp	r1, #0
   20690:	addne	r0, r0, r1
   20694:	addne	ip, ip, r1
   20698:	add	lr, r3, r6, lsl #3
   2069c:	mov	r4, r0
   206a0:	mov	r3, #0
   206a4:	cmp	r3, r7
   206a8:	blt	208dc <GetDataSlab+0x47d8>
   206ac:	ldr	r3, [sp, #8]
   206b0:	add	r5, sp, #72	; 0x48
   206b4:	mov	r4, #1
   206b8:	ldr	lr, [sp, #12]
   206bc:	sub	r3, r3, r1
   206c0:	sub	r2, r3, fp
   206c4:	add	r3, ip, sl
   206c8:	add	ip, r3, r2
   206cc:	add	r3, r2, sl
   206d0:	add	r0, r0, r3
   206d4:	ldr	r3, [sp, #208]	; 0xd0
   206d8:	cmp	r4, r3
   206dc:	bge	20908 <GetDataSlab+0x4804>
   206e0:	ldr	r3, [r5, #4]
   206e4:	add	r2, r3, #1
   206e8:	ldr	r3, [sp, #204]	; 0xcc
   206ec:	str	r2, [r5, #4]
   206f0:	ldr	r1, [r3, r4, lsl #2]
   206f4:	sdiv	r3, r2, r1
   206f8:	mls	r3, r1, r3, r2
   206fc:	cmp	r3, #0
   20700:	bne	208f4 <GetDataSlab+0x47f0>
   20704:	ldr	r2, [lr, #4]
   20708:	str	r3, [r5, #4]
   2070c:	ldr	r1, [sp, #196]	; 0xc4
   20710:	sdiv	r3, ip, r2
   20714:	ldr	r1, [r1, r4, lsl #2]
   20718:	mls	r3, r2, r3, ip
   2071c:	cmp	r3, #0
   20720:	subne	r3, r2, r3
   20724:	ldrne	r2, [lr]
   20728:	mlane	r3, r1, r2, r3
   2072c:	bne	20740 <GetDataSlab+0x463c>
   20730:	cmp	r1, #0
   20734:	beq	20748 <GetDataSlab+0x4644>
   20738:	ldr	r3, [lr]
   2073c:	mul	r3, r3, r1
   20740:	add	r0, r0, r3
   20744:	add	ip, ip, r3
   20748:	add	r4, r4, #1
   2074c:	add	lr, lr, #4
   20750:	add	r5, r5, #4
   20754:	b	206d4 <GetDataSlab+0x45d0>
   20758:	ldr	r3, [sl, r2, lsl #2]
   2075c:	mov	r6, lr
   20760:	sub	r3, r3, #1
   20764:	str	r3, [r4, #4]
   20768:	ldr	r3, [r5], #4
   2076c:	mov	r1, r5
   20770:	str	r3, [lr, #4]
   20774:	cmp	r1, fp
   20778:	bne	207a8 <GetDataSlab+0x46a4>
   2077c:	ldr	r1, [sp, #196]	; 0xc4
   20780:	add	lr, lr, #4
   20784:	add	r4, r4, #4
   20788:	ldr	r3, [sp, #204]	; 0xcc
   2078c:	ldr	r1, [r1, r2, lsl #2]
   20790:	ldr	r3, [r3, r2, lsl #2]
   20794:	add	r2, r2, #1
   20798:	mul	r9, r3, r9
   2079c:	ldr	r3, [r6]
   207a0:	mla	ip, r1, r3, ip
   207a4:	b	2064c <GetDataSlab+0x4548>
   207a8:	str	r1, [sp, #16]
   207ac:	ldr	r3, [r1, #-4]!
   207b0:	ldr	r0, [r4, #4]
   207b4:	mul	r3, r3, r0
   207b8:	ldr	r0, [lr, #4]
   207bc:	str	r3, [r4, #4]
   207c0:	ldr	r3, [sp, #16]
   207c4:	ldr	r3, [r3]
   207c8:	mul	r3, r3, r0
   207cc:	str	r3, [lr, #4]
   207d0:	b	20774 <GetDataSlab+0x4670>
   207d4:	ldrb	lr, [r0, r2]
   207d8:	add	r2, r2, #1
   207dc:	vmov	s15, lr
   207e0:	vcvt.f64.u32	d7, s15
   207e4:	vstmia	r1!, {d7}
   207e8:	b	2082c <GetDataSlab+0x4728>
   207ec:	add	r3, sp, #152	; 0x98
   207f0:	add	r3, r3, lr, lsl #2
   207f4:	ldr	r3, [r3, #-120]	; 0xffffff88
   207f8:	add	ip, ip, r3
   207fc:	add	r0, r0, r3
   20800:	add	r6, r6, r7
   20804:	cmp	r6, r9
   20808:	bge	1c230 <GetDataSlab+0x12c>
   2080c:	ldr	r2, [sp]
   20810:	ldr	r3, [sp, #196]	; 0xc4
   20814:	add	r1, r2, r6, lsl #3
   20818:	mov	r2, #0
   2081c:	ldr	r3, [r3]
   20820:	cmp	r3, #0
   20824:	addne	r0, r0, r3
   20828:	addne	ip, ip, r3
   2082c:	cmp	r2, r7
   20830:	blt	207d4 <GetDataSlab+0x46d0>
   20834:	ldr	r2, [sp, #8]
   20838:	add	r5, sp, #72	; 0x48
   2083c:	mov	lr, #1
   20840:	ldr	r4, [sp, #12]
   20844:	sub	r3, r2, r3
   20848:	add	ip, ip, r3
   2084c:	add	r0, r0, r3
   20850:	ldr	r3, [sp, #208]	; 0xd0
   20854:	cmp	lr, r3
   20858:	bge	20800 <GetDataSlab+0x46fc>
   2085c:	ldr	r3, [r5, #4]
   20860:	add	r2, r3, #1
   20864:	ldr	r3, [sp, #204]	; 0xcc
   20868:	str	r2, [r5, #4]
   2086c:	ldr	r1, [r3, lr, lsl #2]
   20870:	sdiv	r3, r2, r1
   20874:	mls	r3, r1, r3, r2
   20878:	cmp	r3, #0
   2087c:	bne	207ec <GetDataSlab+0x46e8>
   20880:	ldr	r2, [r4, #4]
   20884:	str	r3, [r5, #4]
   20888:	ldr	r1, [sp, #196]	; 0xc4
   2088c:	sdiv	r3, ip, r2
   20890:	ldr	r1, [r1, lr, lsl #2]
   20894:	mls	r3, r2, r3, ip
   20898:	cmp	r3, #0
   2089c:	ldrne	r8, [r4]
   208a0:	subne	r3, r2, r3
   208a4:	mlane	r3, r1, r8, r3
   208a8:	bne	208bc <GetDataSlab+0x47b8>
   208ac:	cmp	r1, #0
   208b0:	beq	208c4 <GetDataSlab+0x47c0>
   208b4:	ldr	r3, [r4]
   208b8:	mul	r3, r3, r1
   208bc:	add	r0, r0, r3
   208c0:	add	ip, ip, r3
   208c4:	add	lr, lr, #1
   208c8:	add	r4, r4, #4
   208cc:	add	r5, r5, #4
   208d0:	b	20850 <GetDataSlab+0x474c>
   208d4:	mov	r6, #0
   208d8:	b	20804 <GetDataSlab+0x4700>
   208dc:	ldrb	r2, [r4], r8
   208e0:	add	r3, r3, #1
   208e4:	vmov	s15, r2
   208e8:	vcvt.f64.u32	d7, s15
   208ec:	vstmia	lr!, {d7}
   208f0:	b	206a4 <GetDataSlab+0x45a0>
   208f4:	add	r3, sp, #152	; 0x98
   208f8:	add	r3, r3, r4, lsl #2
   208fc:	ldr	r3, [r3, #-120]	; 0xffffff88
   20900:	add	ip, ip, r3
   20904:	add	r0, r0, r3
   20908:	add	r6, r6, r7
   2090c:	b	20678 <GetDataSlab+0x4574>
   20910:	cmp	r5, #12
   20914:	bne	20c68 <GetDataSlab+0x4b64>
   20918:	ldr	r4, [sl]
   2091c:	add	lr, sp, #32
   20920:	mov	r5, fp
   20924:	mov	r7, #0
   20928:	mov	r2, #1
   2092c:	sub	r3, r4, #1
   20930:	str	r3, [sp, #32]
   20934:	ldr	r3, [fp]
   20938:	str	r3, [sp, #16]
   2093c:	str	r3, [sp, #112]	; 0x70
   20940:	ldr	r3, [sp, #204]	; 0xcc
   20944:	ldr	r3, [r3]
   20948:	str	r3, [sp, #8]
   2094c:	add	r3, sp, #112	; 0x70
   20950:	mov	ip, r3
   20954:	str	r3, [sp, #20]
   20958:	ldr	r3, [sp, #8]
   2095c:	str	r3, [sp, #12]
   20960:	ldr	r3, [sp, #208]	; 0xd0
   20964:	cmp	r2, r3
   20968:	blt	20a9c <GetDataSlab+0x4998>
   2096c:	ldr	r3, [sp, #4]
   20970:	cmp	r4, #1
   20974:	add	r6, r3, r7, lsl #3
   20978:	beq	20c28 <GetDataSlab+0x4b24>
   2097c:	ldr	r3, [sp, #8]
   20980:	lsl	fp, r4, #3
   20984:	mov	sl, #0
   20988:	mul	r3, r4, r3
   2098c:	str	r3, [sp, #4]
   20990:	ldr	r3, [sp, #8]
   20994:	bic	r3, r3, r3, asr #31
   20998:	mul	r2, r3, r4
   2099c:	mul	r3, r3, fp
   209a0:	str	r3, [sp, #24]
   209a4:	str	r2, [sp, #28]
   209a8:	ldr	r3, [sp, #12]
   209ac:	cmp	sl, r3
   209b0:	bge	1c230 <GetDataSlab+0x12c>
   209b4:	ldr	r3, [sp, #196]	; 0xc4
   209b8:	mov	r4, #0
   209bc:	ldr	r8, [r3]
   209c0:	ldr	r3, [sp]
   209c4:	cmp	r8, #0
   209c8:	addne	r6, r6, r8, lsl #3
   209cc:	addne	r7, r7, r8
   209d0:	add	r9, r3, sl, lsl #3
   209d4:	mov	r5, r6
   209d8:	ldr	r3, [sp, #8]
   209dc:	cmp	r4, r3
   209e0:	blt	20c30 <GetDataSlab+0x4b2c>
   209e4:	ldr	r2, [sp, #4]
   209e8:	add	lr, sp, #72	; 0x48
   209ec:	mov	ip, #1
   209f0:	ldr	r3, [sp, #16]
   209f4:	ldr	r0, [sp, #20]
   209f8:	sub	r3, r3, r8
   209fc:	sub	r2, r3, r2
   20a00:	ldr	r3, [sp, #28]
   20a04:	add	r3, r7, r3
   20a08:	add	r7, r3, r2
   20a0c:	ldr	r3, [sp, #24]
   20a10:	add	r3, r3, r2, lsl #3
   20a14:	add	r6, r6, r3
   20a18:	ldr	r3, [sp, #208]	; 0xd0
   20a1c:	cmp	ip, r3
   20a20:	bge	20c5c <GetDataSlab+0x4b58>
   20a24:	ldr	r3, [lr, #4]
   20a28:	add	r2, r3, #1
   20a2c:	ldr	r3, [sp, #204]	; 0xcc
   20a30:	str	r2, [lr, #4]
   20a34:	ldr	r1, [r3, ip, lsl #2]
   20a38:	sdiv	r3, r2, r1
   20a3c:	mls	r3, r1, r3, r2
   20a40:	cmp	r3, #0
   20a44:	bne	20c48 <GetDataSlab+0x4b44>
   20a48:	ldr	r2, [r0, #4]
   20a4c:	str	r3, [lr, #4]
   20a50:	ldr	r1, [sp, #196]	; 0xc4
   20a54:	sdiv	r3, r7, r2
   20a58:	ldr	r1, [r1, ip, lsl #2]
   20a5c:	mls	r3, r2, r3, r7
   20a60:	cmp	r3, #0
   20a64:	ldrne	r4, [r0]
   20a68:	subne	r3, r2, r3
   20a6c:	mlane	r3, r1, r4, r3
   20a70:	bne	20a84 <GetDataSlab+0x4980>
   20a74:	cmp	r1, #0
   20a78:	beq	20a8c <GetDataSlab+0x4988>
   20a7c:	ldr	r3, [r0]
   20a80:	mul	r3, r3, r1
   20a84:	add	r6, r6, r3, lsl #3
   20a88:	add	r7, r7, r3
   20a8c:	add	ip, ip, #1
   20a90:	add	r0, r0, #4
   20a94:	add	lr, lr, #4
   20a98:	b	20a18 <GetDataSlab+0x4914>
   20a9c:	ldr	r3, [sl, r2, lsl #2]
   20aa0:	mov	r6, ip
   20aa4:	sub	r3, r3, #1
   20aa8:	str	r3, [lr, #4]
   20aac:	ldr	r3, [r5], #4
   20ab0:	mov	r1, r5
   20ab4:	str	r3, [ip, #4]
   20ab8:	cmp	fp, r1
   20abc:	bne	20af4 <GetDataSlab+0x49f0>
   20ac0:	ldr	r1, [sp, #12]
   20ac4:	add	ip, ip, #4
   20ac8:	add	lr, lr, #4
   20acc:	ldr	r3, [sp, #204]	; 0xcc
   20ad0:	ldr	r3, [r3, r2, lsl #2]
   20ad4:	mul	r3, r3, r1
   20ad8:	ldr	r1, [sp, #196]	; 0xc4
   20adc:	str	r3, [sp, #12]
   20ae0:	ldr	r3, [r6]
   20ae4:	ldr	r1, [r1, r2, lsl #2]
   20ae8:	add	r2, r2, #1
   20aec:	mla	r7, r1, r3, r7
   20af0:	b	20960 <GetDataSlab+0x485c>
   20af4:	mov	r0, r1
   20af8:	ldr	r3, [r1, #-4]!
   20afc:	ldr	r8, [lr, #4]
   20b00:	mul	r3, r3, r8
   20b04:	ldr	r8, [ip, #4]
   20b08:	str	r3, [lr, #4]
   20b0c:	ldr	r3, [r0]
   20b10:	mul	r3, r3, r8
   20b14:	str	r3, [ip, #4]
   20b18:	b	20ab8 <GetDataSlab+0x49b4>
   20b1c:	ldrd	r0, [r8, #8]!
   20b20:	add	r5, r5, #1
   20b24:	bl	3e530 <__aeabi_l2d>
   20b28:	strd	r0, [r9], #8
   20b2c:	b	20b7c <GetDataSlab+0x4a78>
   20b30:	add	r3, sp, #152	; 0x98
   20b34:	add	r3, r3, r0, lsl #2
   20b38:	ldr	r3, [r3, #-120]	; 0xffffff88
   20b3c:	add	r6, r6, r3, lsl #3
   20b40:	add	r7, r7, r3
   20b44:	ldr	r3, [sp, #8]
   20b48:	add	sl, sl, r3
   20b4c:	ldr	r3, [sp, #12]
   20b50:	cmp	sl, r3
   20b54:	bge	1c230 <GetDataSlab+0x12c>
   20b58:	ldr	r3, [sp, #196]	; 0xc4
   20b5c:	mov	r5, #0
   20b60:	ldr	r4, [r3]
   20b64:	ldr	r3, [sp]
   20b68:	cmp	r4, #0
   20b6c:	addne	r6, r6, r4, lsl #3
   20b70:	addne	r7, r7, r4
   20b74:	add	r9, r3, sl, lsl #3
   20b78:	sub	r8, r6, #8
   20b7c:	ldr	r3, [sp, #8]
   20b80:	cmp	r5, r3
   20b84:	blt	20b1c <GetDataSlab+0x4a18>
   20b88:	ldr	r3, [sp, #16]
   20b8c:	add	lr, sp, #72	; 0x48
   20b90:	mov	r0, #1
   20b94:	ldr	ip, [sp, #20]
   20b98:	sub	r3, r3, r4
   20b9c:	add	r6, r6, r3, lsl #3
   20ba0:	add	r7, r7, r3
   20ba4:	ldr	r3, [sp, #208]	; 0xd0
   20ba8:	cmp	r0, r3
   20bac:	bge	20b44 <GetDataSlab+0x4a40>
   20bb0:	ldr	r3, [lr, #4]
   20bb4:	add	r2, r3, #1
   20bb8:	ldr	r3, [sp, #204]	; 0xcc
   20bbc:	str	r2, [lr, #4]
   20bc0:	ldr	r1, [r3, r0, lsl #2]
   20bc4:	sdiv	r3, r2, r1
   20bc8:	mls	r3, r1, r3, r2
   20bcc:	cmp	r3, #0
   20bd0:	bne	20b30 <GetDataSlab+0x4a2c>
   20bd4:	ldr	r2, [ip, #4]
   20bd8:	str	r3, [lr, #4]
   20bdc:	ldr	r1, [sp, #196]	; 0xc4
   20be0:	sdiv	r3, r7, r2
   20be4:	ldr	r1, [r1, r0, lsl #2]
   20be8:	mls	r3, r2, r3, r7
   20bec:	cmp	r3, #0
   20bf0:	ldrne	r4, [ip]
   20bf4:	subne	r3, r2, r3
   20bf8:	mlane	r3, r1, r4, r3
   20bfc:	bne	20c10 <GetDataSlab+0x4b0c>
   20c00:	cmp	r1, #0
   20c04:	beq	20c18 <GetDataSlab+0x4b14>
   20c08:	ldr	r3, [ip]
   20c0c:	mul	r3, r3, r1
   20c10:	add	r6, r6, r3, lsl #3
   20c14:	add	r7, r7, r3
   20c18:	add	r0, r0, #1
   20c1c:	add	ip, ip, #4
   20c20:	add	lr, lr, #4
   20c24:	b	20ba4 <GetDataSlab+0x4aa0>
   20c28:	mov	sl, #0
   20c2c:	b	20b4c <GetDataSlab+0x4a48>
   20c30:	ldrd	r0, [r5]
   20c34:	add	r4, r4, #1
   20c38:	add	r5, r5, fp
   20c3c:	bl	3e530 <__aeabi_l2d>
   20c40:	strd	r0, [r9], #8
   20c44:	b	209d8 <GetDataSlab+0x48d4>
   20c48:	add	r3, sp, #152	; 0x98
   20c4c:	add	r3, r3, ip, lsl #2
   20c50:	ldr	r3, [r3, #-120]	; 0xffffff88
   20c54:	add	r6, r6, r3, lsl #3
   20c58:	add	r7, r7, r3
   20c5c:	ldr	r3, [sp, #8]
   20c60:	add	sl, sl, r3
   20c64:	b	209a8 <GetDataSlab+0x48a4>
   20c68:	cmp	r5, #13
   20c6c:	bne	3236c <GetDataSlab+0x16268>
   20c70:	ldr	r4, [sl]
   20c74:	add	lr, sp, #32
   20c78:	mov	r5, fp
   20c7c:	mov	r7, #0
   20c80:	mov	r2, #1
   20c84:	sub	r3, r4, #1
   20c88:	str	r3, [sp, #32]
   20c8c:	ldr	r3, [fp]
   20c90:	str	r3, [sp, #16]
   20c94:	str	r3, [sp, #112]	; 0x70
   20c98:	ldr	r3, [sp, #204]	; 0xcc
   20c9c:	ldr	r3, [r3]
   20ca0:	str	r3, [sp, #8]
   20ca4:	add	r3, sp, #112	; 0x70
   20ca8:	mov	ip, r3
   20cac:	str	r3, [sp, #20]
   20cb0:	ldr	r3, [sp, #8]
   20cb4:	str	r3, [sp, #12]
   20cb8:	ldr	r3, [sp, #208]	; 0xd0
   20cbc:	cmp	r2, r3
   20cc0:	blt	20df0 <GetDataSlab+0x4cec>
   20cc4:	ldr	r3, [sp, #4]
   20cc8:	cmp	r4, #1
   20ccc:	add	r6, r3, r7, lsl #3
   20cd0:	beq	20f7c <GetDataSlab+0x4e78>
   20cd4:	ldr	r3, [sp, #8]
   20cd8:	lsl	fp, r4, #3
   20cdc:	mov	sl, #0
   20ce0:	mul	r3, r4, r3
   20ce4:	str	r3, [sp, #4]
   20ce8:	ldr	r3, [sp, #8]
   20cec:	bic	r3, r3, r3, asr #31
   20cf0:	mul	r2, r3, r4
   20cf4:	mul	r3, r3, fp
   20cf8:	strd	r2, [sp, #24]
   20cfc:	ldr	r3, [sp, #12]
   20d00:	cmp	sl, r3
   20d04:	bge	1c230 <GetDataSlab+0x12c>
   20d08:	ldr	r3, [sp, #196]	; 0xc4
   20d0c:	mov	r4, #0
   20d10:	ldr	r8, [r3]
   20d14:	ldr	r3, [sp]
   20d18:	cmp	r8, #0
   20d1c:	addne	r6, r6, r8, lsl #3
   20d20:	addne	r7, r7, r8
   20d24:	add	r9, r3, sl, lsl #3
   20d28:	mov	r5, r6
   20d2c:	ldr	r3, [sp, #8]
   20d30:	cmp	r4, r3
   20d34:	blt	20f84 <GetDataSlab+0x4e80>
   20d38:	ldr	r2, [sp, #4]
   20d3c:	add	lr, sp, #72	; 0x48
   20d40:	mov	ip, #1
   20d44:	ldr	r3, [sp, #16]
   20d48:	ldr	r0, [sp, #20]
   20d4c:	sub	r3, r3, r8
   20d50:	sub	r2, r3, r2
   20d54:	ldr	r3, [sp, #24]
   20d58:	add	r3, r7, r3
   20d5c:	add	r7, r3, r2
   20d60:	ldr	r3, [sp, #28]
   20d64:	add	r3, r3, r2, lsl #3
   20d68:	add	r6, r6, r3
   20d6c:	ldr	r3, [sp, #208]	; 0xd0
   20d70:	cmp	ip, r3
   20d74:	bge	20fb0 <GetDataSlab+0x4eac>
   20d78:	ldr	r3, [lr, #4]
   20d7c:	add	r2, r3, #1
   20d80:	ldr	r3, [sp, #204]	; 0xcc
   20d84:	str	r2, [lr, #4]
   20d88:	ldr	r1, [r3, ip, lsl #2]
   20d8c:	sdiv	r3, r2, r1
   20d90:	mls	r3, r1, r3, r2
   20d94:	cmp	r3, #0
   20d98:	bne	20f9c <GetDataSlab+0x4e98>
   20d9c:	ldr	r2, [r0, #4]
   20da0:	str	r3, [lr, #4]
   20da4:	ldr	r1, [sp, #196]	; 0xc4
   20da8:	sdiv	r3, r7, r2
   20dac:	ldr	r1, [r1, ip, lsl #2]
   20db0:	mls	r3, r2, r3, r7
   20db4:	cmp	r3, #0
   20db8:	ldrne	r4, [r0]
   20dbc:	subne	r3, r2, r3
   20dc0:	mlane	r3, r1, r4, r3
   20dc4:	bne	20dd8 <GetDataSlab+0x4cd4>
   20dc8:	cmp	r1, #0
   20dcc:	beq	20de0 <GetDataSlab+0x4cdc>
   20dd0:	ldr	r3, [r0]
   20dd4:	mul	r3, r3, r1
   20dd8:	add	r6, r6, r3, lsl #3
   20ddc:	add	r7, r7, r3
   20de0:	add	ip, ip, #1
   20de4:	add	r0, r0, #4
   20de8:	add	lr, lr, #4
   20dec:	b	20d6c <GetDataSlab+0x4c68>
   20df0:	ldr	r3, [sl, r2, lsl #2]
   20df4:	mov	r6, ip
   20df8:	sub	r3, r3, #1
   20dfc:	str	r3, [lr, #4]
   20e00:	ldr	r3, [r5], #4
   20e04:	mov	r1, r5
   20e08:	str	r3, [ip, #4]
   20e0c:	cmp	fp, r1
   20e10:	bne	20e48 <GetDataSlab+0x4d44>
   20e14:	ldr	r1, [sp, #12]
   20e18:	add	ip, ip, #4
   20e1c:	add	lr, lr, #4
   20e20:	ldr	r3, [sp, #204]	; 0xcc
   20e24:	ldr	r3, [r3, r2, lsl #2]
   20e28:	mul	r3, r3, r1
   20e2c:	ldr	r1, [sp, #196]	; 0xc4
   20e30:	str	r3, [sp, #12]
   20e34:	ldr	r3, [r6]
   20e38:	ldr	r1, [r1, r2, lsl #2]
   20e3c:	add	r2, r2, #1
   20e40:	mla	r7, r1, r3, r7
   20e44:	b	20cb8 <GetDataSlab+0x4bb4>
   20e48:	mov	r0, r1
   20e4c:	ldr	r3, [r1, #-4]!
   20e50:	ldr	r8, [lr, #4]
   20e54:	mul	r3, r3, r8
   20e58:	ldr	r8, [ip, #4]
   20e5c:	str	r3, [lr, #4]
   20e60:	ldr	r3, [r0]
   20e64:	mul	r3, r3, r8
   20e68:	str	r3, [ip, #4]
   20e6c:	b	20e0c <GetDataSlab+0x4d08>
   20e70:	ldrd	r0, [r8, #8]!
   20e74:	add	r5, r5, #1
   20e78:	bl	3e51c <__aeabi_ul2d>
   20e7c:	strd	r0, [r9], #8
   20e80:	b	20ed0 <GetDataSlab+0x4dcc>
   20e84:	add	r3, sp, #152	; 0x98
   20e88:	add	r3, r3, r0, lsl #2
   20e8c:	ldr	r3, [r3, #-120]	; 0xffffff88
   20e90:	add	r6, r6, r3, lsl #3
   20e94:	add	r7, r7, r3
   20e98:	ldr	r3, [sp, #8]
   20e9c:	add	sl, sl, r3
   20ea0:	ldr	r3, [sp, #12]
   20ea4:	cmp	sl, r3
   20ea8:	bge	1c230 <GetDataSlab+0x12c>
   20eac:	ldr	r3, [sp, #196]	; 0xc4
   20eb0:	mov	r5, #0
   20eb4:	ldr	r4, [r3]
   20eb8:	ldr	r3, [sp]
   20ebc:	cmp	r4, #0
   20ec0:	addne	r6, r6, r4, lsl #3
   20ec4:	addne	r7, r7, r4
   20ec8:	add	r9, r3, sl, lsl #3
   20ecc:	sub	r8, r6, #8
   20ed0:	ldr	r3, [sp, #8]
   20ed4:	cmp	r5, r3
   20ed8:	blt	20e70 <GetDataSlab+0x4d6c>
   20edc:	ldr	r3, [sp, #16]
   20ee0:	add	lr, sp, #72	; 0x48
   20ee4:	mov	r0, #1
   20ee8:	ldr	ip, [sp, #20]
   20eec:	sub	r3, r3, r4
   20ef0:	add	r6, r6, r3, lsl #3
   20ef4:	add	r7, r7, r3
   20ef8:	ldr	r3, [sp, #208]	; 0xd0
   20efc:	cmp	r0, r3
   20f00:	bge	20e98 <GetDataSlab+0x4d94>
   20f04:	ldr	r3, [lr, #4]
   20f08:	add	r2, r3, #1
   20f0c:	ldr	r3, [sp, #204]	; 0xcc
   20f10:	str	r2, [lr, #4]
   20f14:	ldr	r1, [r3, r0, lsl #2]
   20f18:	sdiv	r3, r2, r1
   20f1c:	mls	r3, r1, r3, r2
   20f20:	cmp	r3, #0
   20f24:	bne	20e84 <GetDataSlab+0x4d80>
   20f28:	ldr	r2, [ip, #4]
   20f2c:	str	r3, [lr, #4]
   20f30:	ldr	r1, [sp, #196]	; 0xc4
   20f34:	sdiv	r3, r7, r2
   20f38:	ldr	r1, [r1, r0, lsl #2]
   20f3c:	mls	r3, r2, r3, r7
   20f40:	cmp	r3, #0
   20f44:	ldrne	r4, [ip]
   20f48:	subne	r3, r2, r3
   20f4c:	mlane	r3, r1, r4, r3
   20f50:	bne	20f64 <GetDataSlab+0x4e60>
   20f54:	cmp	r1, #0
   20f58:	beq	20f6c <GetDataSlab+0x4e68>
   20f5c:	ldr	r3, [ip]
   20f60:	mul	r3, r3, r1
   20f64:	add	r6, r6, r3, lsl #3
   20f68:	add	r7, r7, r3
   20f6c:	add	r0, r0, #1
   20f70:	add	ip, ip, #4
   20f74:	add	lr, lr, #4
   20f78:	b	20ef8 <GetDataSlab+0x4df4>
   20f7c:	mov	sl, #0
   20f80:	b	20ea0 <GetDataSlab+0x4d9c>
   20f84:	ldrd	r0, [r5]
   20f88:	add	r4, r4, #1
   20f8c:	add	r5, r5, fp
   20f90:	bl	3e51c <__aeabi_ul2d>
   20f94:	strd	r0, [r9], #8
   20f98:	b	20d2c <GetDataSlab+0x4c28>
   20f9c:	add	r3, sp, #152	; 0x98
   20fa0:	add	r3, r3, ip, lsl #2
   20fa4:	ldr	r3, [r3, #-120]	; 0xffffff88
   20fa8:	add	r6, r6, r3, lsl #3
   20fac:	add	r7, r7, r3
   20fb0:	ldr	r3, [sp, #8]
   20fb4:	add	sl, sl, r3
   20fb8:	b	20cfc <GetDataSlab+0x4bf8>
   20fbc:	sub	r3, r5, #1
   20fc0:	cmp	r3, #8
   20fc4:	addls	pc, pc, r3, lsl #2
   20fc8:	b	22870 <GetDataSlab+0x676c>
   20fcc:	b	22268 <GetDataSlab+0x6164>
   20fd0:	b	2256c <GetDataSlab+0x6468>
   20fd4:	b	21c38 <GetDataSlab+0x5b34>
   20fd8:	b	21f50 <GetDataSlab+0x5e4c>
   20fdc:	b	21610 <GetDataSlab+0x550c>
   20fe0:	b	21924 <GetDataSlab+0x5820>
   20fe4:	b	21304 <GetDataSlab+0x5200>
   20fe8:	b	22870 <GetDataSlab+0x676c>
   20fec:	b	20ff0 <GetDataSlab+0x4eec>
   20ff0:	ldr	r5, [sl]
   20ff4:	add	lr, sp, #32
   20ff8:	mov	r6, fp
   20ffc:	mov	r4, #0
   21000:	mov	r2, #1
   21004:	sub	r3, r5, #1
   21008:	str	r3, [sp, #32]
   2100c:	ldr	r3, [fp]
   21010:	str	r3, [sp, #8]
   21014:	str	r3, [sp, #112]	; 0x70
   21018:	ldr	r3, [sp, #204]	; 0xcc
   2101c:	ldr	r7, [r3]
   21020:	add	r3, sp, #112	; 0x70
   21024:	mov	ip, r3
   21028:	str	r3, [sp, #12]
   2102c:	mov	r9, r7
   21030:	ldr	r3, [sp, #208]	; 0xd0
   21034:	cmp	r2, r3
   21038:	blt	2114c <GetDataSlab+0x5048>
   2103c:	ldr	r3, [sp, #4]
   21040:	cmp	r5, #1
   21044:	add	r0, r3, r4, lsl #3
   21048:	beq	212c8 <GetDataSlab+0x51c4>
   2104c:	bic	r3, r7, r7, asr #31
   21050:	mov	r6, #0
   21054:	lsl	r8, r5, #3
   21058:	mul	sl, r5, r7
   2105c:	mul	fp, r5, r3
   21060:	mul	r3, r3, r8
   21064:	str	r3, [sp, #4]
   21068:	cmp	r6, r9
   2106c:	bge	1c230 <GetDataSlab+0x12c>
   21070:	ldr	r3, [sp, #196]	; 0xc4
   21074:	mov	r2, #0
   21078:	ldr	r1, [r3]
   2107c:	ldr	r3, [sp]
   21080:	cmp	r1, #0
   21084:	addne	r0, r0, r1, lsl #3
   21088:	addne	r4, r4, r1
   2108c:	add	ip, r3, r6, lsl #2
   21090:	mov	r3, r0
   21094:	cmp	r2, r7
   21098:	blt	212d0 <GetDataSlab+0x51cc>
   2109c:	ldr	r3, [sp, #8]
   210a0:	add	r5, sp, #72	; 0x48
   210a4:	mov	lr, #1
   210a8:	ldr	ip, [sp, #12]
   210ac:	sub	r3, r3, r1
   210b0:	sub	r2, r3, sl
   210b4:	add	r3, r4, fp
   210b8:	add	r4, r3, r2
   210bc:	ldr	r3, [sp, #4]
   210c0:	add	r3, r3, r2, lsl #3
   210c4:	add	r0, r0, r3
   210c8:	ldr	r3, [sp, #208]	; 0xd0
   210cc:	cmp	lr, r3
   210d0:	bge	212fc <GetDataSlab+0x51f8>
   210d4:	ldr	r3, [r5, #4]
   210d8:	add	r2, r3, #1
   210dc:	ldr	r3, [sp, #204]	; 0xcc
   210e0:	str	r2, [r5, #4]
   210e4:	ldr	r1, [r3, lr, lsl #2]
   210e8:	sdiv	r3, r2, r1
   210ec:	mls	r3, r1, r3, r2
   210f0:	cmp	r3, #0
   210f4:	bne	212e8 <GetDataSlab+0x51e4>
   210f8:	ldr	r2, [ip, #4]
   210fc:	str	r3, [r5, #4]
   21100:	ldr	r1, [sp, #196]	; 0xc4
   21104:	sdiv	r3, r4, r2
   21108:	ldr	r1, [r1, lr, lsl #2]
   2110c:	mls	r3, r2, r3, r4
   21110:	cmp	r3, #0
   21114:	subne	r3, r2, r3
   21118:	ldrne	r2, [ip]
   2111c:	mlane	r3, r1, r2, r3
   21120:	bne	21134 <GetDataSlab+0x5030>
   21124:	cmp	r1, #0
   21128:	beq	2113c <GetDataSlab+0x5038>
   2112c:	ldr	r3, [ip]
   21130:	mul	r3, r3, r1
   21134:	add	r0, r0, r3, lsl #3
   21138:	add	r4, r4, r3
   2113c:	add	lr, lr, #1
   21140:	add	ip, ip, #4
   21144:	add	r5, r5, #4
   21148:	b	210c8 <GetDataSlab+0x4fc4>
   2114c:	ldr	r3, [sl, r2, lsl #2]
   21150:	mov	r8, ip
   21154:	sub	r3, r3, #1
   21158:	str	r3, [lr, #4]
   2115c:	ldr	r3, [r6], #4
   21160:	mov	r1, r6
   21164:	str	r3, [ip, #4]
   21168:	cmp	fp, r1
   2116c:	bne	2119c <GetDataSlab+0x5098>
   21170:	ldr	r1, [sp, #196]	; 0xc4
   21174:	add	ip, ip, #4
   21178:	add	lr, lr, #4
   2117c:	ldr	r3, [sp, #204]	; 0xcc
   21180:	ldr	r1, [r1, r2, lsl #2]
   21184:	ldr	r3, [r3, r2, lsl #2]
   21188:	add	r2, r2, #1
   2118c:	mul	r9, r3, r9
   21190:	ldr	r3, [r8]
   21194:	mla	r4, r1, r3, r4
   21198:	b	21030 <GetDataSlab+0x4f2c>
   2119c:	str	r1, [sp, #16]
   211a0:	ldr	r3, [r1, #-4]!
   211a4:	ldr	r0, [lr, #4]
   211a8:	mul	r3, r3, r0
   211ac:	ldr	r0, [ip, #4]
   211b0:	str	r3, [lr, #4]
   211b4:	ldr	r3, [sp, #16]
   211b8:	ldr	r3, [r3]
   211bc:	mul	r3, r3, r0
   211c0:	str	r3, [ip, #4]
   211c4:	b	21168 <GetDataSlab+0x5064>
   211c8:	vldmia	r1!, {d7}
   211cc:	add	r2, r2, #1
   211d0:	vcvt.f32.f64	s15, d7
   211d4:	vstmia	ip!, {s15}
   211d8:	b	21220 <GetDataSlab+0x511c>
   211dc:	add	r3, sp, #152	; 0x98
   211e0:	add	r3, r3, ip, lsl #2
   211e4:	ldr	r3, [r3, #-120]	; 0xffffff88
   211e8:	add	r0, r0, r3, lsl #3
   211ec:	add	r4, r4, r3
   211f0:	add	r6, r6, r7
   211f4:	cmp	r6, r9
   211f8:	bge	1c230 <GetDataSlab+0x12c>
   211fc:	ldr	r2, [sp]
   21200:	ldr	r3, [sp, #196]	; 0xc4
   21204:	add	ip, r2, r6, lsl #2
   21208:	mov	r2, #0
   2120c:	ldr	r3, [r3]
   21210:	cmp	r3, #0
   21214:	addne	r0, r0, r3, lsl #3
   21218:	addne	r4, r4, r3
   2121c:	mov	r1, r0
   21220:	cmp	r2, r7
   21224:	blt	211c8 <GetDataSlab+0x50c4>
   21228:	ldr	r2, [sp, #8]
   2122c:	add	r5, sp, #72	; 0x48
   21230:	mov	ip, #1
   21234:	ldr	lr, [sp, #12]
   21238:	sub	r3, r2, r3
   2123c:	add	r0, r0, r3, lsl #3
   21240:	add	r4, r4, r3
   21244:	ldr	r3, [sp, #208]	; 0xd0
   21248:	cmp	ip, r3
   2124c:	bge	211f0 <GetDataSlab+0x50ec>
   21250:	ldr	r3, [r5, #4]
   21254:	add	r2, r3, #1
   21258:	ldr	r3, [sp, #204]	; 0xcc
   2125c:	str	r2, [r5, #4]
   21260:	ldr	r1, [r3, ip, lsl #2]
   21264:	sdiv	r3, r2, r1
   21268:	mls	r3, r1, r3, r2
   2126c:	cmp	r3, #0
   21270:	bne	211dc <GetDataSlab+0x50d8>
   21274:	ldr	r2, [lr, #4]
   21278:	str	r3, [r5, #4]
   2127c:	ldr	r1, [sp, #196]	; 0xc4
   21280:	sdiv	r3, r4, r2
   21284:	ldr	r1, [r1, ip, lsl #2]
   21288:	mls	r3, r2, r3, r4
   2128c:	cmp	r3, #0
   21290:	ldrne	r8, [lr]
   21294:	subne	r3, r2, r3
   21298:	mlane	r3, r1, r8, r3
   2129c:	bne	212b0 <GetDataSlab+0x51ac>
   212a0:	cmp	r1, #0
   212a4:	beq	212b8 <GetDataSlab+0x51b4>
   212a8:	ldr	r3, [lr]
   212ac:	mul	r3, r3, r1
   212b0:	add	r0, r0, r3, lsl #3
   212b4:	add	r4, r4, r3
   212b8:	add	ip, ip, #1
   212bc:	add	lr, lr, #4
   212c0:	add	r5, r5, #4
   212c4:	b	21244 <GetDataSlab+0x5140>
   212c8:	mov	r6, #0
   212cc:	b	211f4 <GetDataSlab+0x50f0>
   212d0:	vldr	d7, [r3]
   212d4:	add	r2, r2, #1
   212d8:	add	r3, r3, r8
   212dc:	vcvt.f32.f64	s15, d7
   212e0:	vstmia	ip!, {s15}
   212e4:	b	21094 <GetDataSlab+0x4f90>
   212e8:	add	r3, sp, #152	; 0x98
   212ec:	add	r3, r3, lr, lsl #2
   212f0:	ldr	r3, [r3, #-120]	; 0xffffff88
   212f4:	add	r0, r0, r3, lsl #3
   212f8:	add	r4, r4, r3
   212fc:	add	r6, r6, r7
   21300:	b	21068 <GetDataSlab+0x4f64>
   21304:	ldr	r5, [sl]
   21308:	add	lr, sp, #32
   2130c:	mov	r6, fp
   21310:	mov	r4, #0
   21314:	mov	r2, #1
   21318:	sub	r3, r5, #1
   2131c:	str	r3, [sp, #32]
   21320:	ldr	r3, [fp]
   21324:	str	r3, [sp, #8]
   21328:	str	r3, [sp, #112]	; 0x70
   2132c:	ldr	r3, [sp, #204]	; 0xcc
   21330:	ldr	r7, [r3]
   21334:	add	r3, sp, #112	; 0x70
   21338:	mov	ip, r3
   2133c:	str	r3, [sp, #12]
   21340:	mov	r9, r7
   21344:	ldr	r3, [sp, #208]	; 0xd0
   21348:	cmp	r2, r3
   2134c:	blt	21460 <GetDataSlab+0x535c>
   21350:	ldr	r3, [sp, #4]
   21354:	cmp	r5, #1
   21358:	add	r0, r3, r4, lsl #2
   2135c:	beq	215d8 <GetDataSlab+0x54d4>
   21360:	bic	r3, r7, r7, asr #31
   21364:	mov	r6, #0
   21368:	lsl	r8, r5, #2
   2136c:	mul	sl, r5, r7
   21370:	mul	fp, r3, r5
   21374:	mul	r3, r3, r8
   21378:	str	r3, [sp, #4]
   2137c:	cmp	r6, r9
   21380:	bge	1c230 <GetDataSlab+0x12c>
   21384:	ldr	r3, [sp, #196]	; 0xc4
   21388:	mov	r2, #0
   2138c:	ldr	r1, [r3]
   21390:	ldr	r3, [sp]
   21394:	cmp	r1, #0
   21398:	addne	r0, r0, r1, lsl #2
   2139c:	addne	r4, r4, r1
   213a0:	add	ip, r3, r6, lsl #2
   213a4:	mov	r3, r0
   213a8:	cmp	r2, r7
   213ac:	blt	215e0 <GetDataSlab+0x54dc>
   213b0:	ldr	r3, [sp, #8]
   213b4:	add	r5, sp, #72	; 0x48
   213b8:	mov	lr, #1
   213bc:	ldr	ip, [sp, #12]
   213c0:	sub	r3, r3, r1
   213c4:	sub	r2, r3, sl
   213c8:	add	r3, r4, fp
   213cc:	add	r4, r3, r2
   213d0:	ldr	r3, [sp, #4]
   213d4:	add	r3, r3, r2, lsl #2
   213d8:	add	r0, r0, r3
   213dc:	ldr	r3, [sp, #208]	; 0xd0
   213e0:	cmp	lr, r3
   213e4:	bge	21608 <GetDataSlab+0x5504>
   213e8:	ldr	r3, [r5, #4]
   213ec:	add	r2, r3, #1
   213f0:	ldr	r3, [sp, #204]	; 0xcc
   213f4:	str	r2, [r5, #4]
   213f8:	ldr	r1, [r3, lr, lsl #2]
   213fc:	sdiv	r3, r2, r1
   21400:	mls	r3, r1, r3, r2
   21404:	cmp	r3, #0
   21408:	bne	215f4 <GetDataSlab+0x54f0>
   2140c:	ldr	r2, [ip, #4]
   21410:	str	r3, [r5, #4]
   21414:	ldr	r1, [sp, #196]	; 0xc4
   21418:	sdiv	r3, r4, r2
   2141c:	ldr	r1, [r1, lr, lsl #2]
   21420:	mls	r3, r2, r3, r4
   21424:	cmp	r3, #0
   21428:	subne	r3, r2, r3
   2142c:	ldrne	r2, [ip]
   21430:	mlane	r3, r1, r2, r3
   21434:	bne	21448 <GetDataSlab+0x5344>
   21438:	cmp	r1, #0
   2143c:	beq	21450 <GetDataSlab+0x534c>
   21440:	ldr	r3, [ip]
   21444:	mul	r3, r3, r1
   21448:	add	r0, r0, r3, lsl #2
   2144c:	add	r4, r4, r3
   21450:	add	lr, lr, #1
   21454:	add	ip, ip, #4
   21458:	add	r5, r5, #4
   2145c:	b	213dc <GetDataSlab+0x52d8>
   21460:	ldr	r3, [sl, r2, lsl #2]
   21464:	mov	r8, ip
   21468:	sub	r3, r3, #1
   2146c:	str	r3, [lr, #4]
   21470:	ldr	r3, [r6], #4
   21474:	mov	r1, r6
   21478:	str	r3, [ip, #4]
   2147c:	cmp	fp, r1
   21480:	bne	214b0 <GetDataSlab+0x53ac>
   21484:	ldr	r1, [sp, #196]	; 0xc4
   21488:	add	ip, ip, #4
   2148c:	add	lr, lr, #4
   21490:	ldr	r3, [sp, #204]	; 0xcc
   21494:	ldr	r1, [r1, r2, lsl #2]
   21498:	ldr	r3, [r3, r2, lsl #2]
   2149c:	add	r2, r2, #1
   214a0:	mul	r9, r3, r9
   214a4:	ldr	r3, [r8]
   214a8:	mla	r4, r1, r3, r4
   214ac:	b	21344 <GetDataSlab+0x5240>
   214b0:	str	r1, [sp, #16]
   214b4:	ldr	r3, [r1, #-4]!
   214b8:	ldr	r0, [lr, #4]
   214bc:	mul	r3, r3, r0
   214c0:	ldr	r0, [ip, #4]
   214c4:	str	r3, [lr, #4]
   214c8:	ldr	r3, [sp, #16]
   214cc:	ldr	r3, [r3]
   214d0:	mul	r3, r3, r0
   214d4:	str	r3, [ip, #4]
   214d8:	b	2147c <GetDataSlab+0x5378>
   214dc:	ldr	r3, [ip], #4
   214e0:	add	r1, r1, #1
   214e4:	str	r3, [lr], #4
   214e8:	b	21530 <GetDataSlab+0x542c>
   214ec:	add	r3, sp, #152	; 0x98
   214f0:	add	r3, r3, ip, lsl #2
   214f4:	ldr	r3, [r3, #-120]	; 0xffffff88
   214f8:	add	r0, r0, r3, lsl #2
   214fc:	add	r4, r4, r3
   21500:	add	r6, r6, r7
   21504:	cmp	r6, r9
   21508:	bge	1c230 <GetDataSlab+0x12c>
   2150c:	ldr	r3, [sp, #196]	; 0xc4
   21510:	mov	r1, #0
   21514:	ldr	r2, [r3]
   21518:	ldr	r3, [sp]
   2151c:	cmp	r2, #0
   21520:	addne	r0, r0, r2, lsl #2
   21524:	addne	r4, r4, r2
   21528:	add	lr, r3, r6, lsl #2
   2152c:	mov	ip, r0
   21530:	cmp	r1, r7
   21534:	blt	214dc <GetDataSlab+0x53d8>
   21538:	ldr	r3, [sp, #8]
   2153c:	add	r5, sp, #72	; 0x48
   21540:	mov	ip, #1
   21544:	ldr	lr, [sp, #12]
   21548:	sub	r3, r3, r2
   2154c:	add	r0, r0, r3, lsl #2
   21550:	add	r4, r4, r3
   21554:	ldr	r3, [sp, #208]	; 0xd0
   21558:	cmp	ip, r3
   2155c:	bge	21500 <GetDataSlab+0x53fc>
   21560:	ldr	r3, [r5, #4]
   21564:	add	r2, r3, #1
   21568:	ldr	r3, [sp, #204]	; 0xcc
   2156c:	str	r2, [r5, #4]
   21570:	ldr	r1, [r3, ip, lsl #2]
   21574:	sdiv	r3, r2, r1
   21578:	mls	r3, r1, r3, r2
   2157c:	cmp	r3, #0
   21580:	bne	214ec <GetDataSlab+0x53e8>
   21584:	ldr	r2, [lr, #4]
   21588:	str	r3, [r5, #4]
   2158c:	ldr	r1, [sp, #196]	; 0xc4
   21590:	sdiv	r3, r4, r2
   21594:	ldr	r1, [r1, ip, lsl #2]
   21598:	mls	r3, r2, r3, r4
   2159c:	cmp	r3, #0
   215a0:	ldrne	r8, [lr]
   215a4:	subne	r3, r2, r3
   215a8:	mlane	r3, r1, r8, r3
   215ac:	bne	215c0 <GetDataSlab+0x54bc>
   215b0:	cmp	r1, #0
   215b4:	beq	215c8 <GetDataSlab+0x54c4>
   215b8:	ldr	r3, [lr]
   215bc:	mul	r3, r3, r1
   215c0:	add	r0, r0, r3, lsl #2
   215c4:	add	r4, r4, r3
   215c8:	add	ip, ip, #1
   215cc:	add	lr, lr, #4
   215d0:	add	r5, r5, #4
   215d4:	b	21554 <GetDataSlab+0x5450>
   215d8:	mov	r6, #0
   215dc:	b	21504 <GetDataSlab+0x5400>
   215e0:	ldr	lr, [r3]
   215e4:	add	r2, r2, #1
   215e8:	add	r3, r3, r8
   215ec:	str	lr, [ip], #4
   215f0:	b	213a8 <GetDataSlab+0x52a4>
   215f4:	add	r3, sp, #152	; 0x98
   215f8:	add	r3, r3, lr, lsl #2
   215fc:	ldr	r3, [r3, #-120]	; 0xffffff88
   21600:	add	r0, r0, r3, lsl #2
   21604:	add	r4, r4, r3
   21608:	add	r6, r6, r7
   2160c:	b	2137c <GetDataSlab+0x5278>
   21610:	ldr	r5, [sl]
   21614:	add	r4, sp, #32
   21618:	mov	r6, fp
   2161c:	mov	ip, #0
   21620:	mov	r2, #1
   21624:	sub	r3, r5, #1
   21628:	str	r3, [sp, #32]
   2162c:	ldr	r3, [fp]
   21630:	str	r3, [sp, #8]
   21634:	str	r3, [sp, #112]	; 0x70
   21638:	ldr	r3, [sp, #204]	; 0xcc
   2163c:	ldr	r7, [r3]
   21640:	add	r3, sp, #112	; 0x70
   21644:	mov	lr, r3
   21648:	str	r3, [sp, #12]
   2164c:	mov	r9, r7
   21650:	ldr	r3, [sp, #208]	; 0xd0
   21654:	cmp	r2, r3
   21658:	blt	2176c <GetDataSlab+0x5668>
   2165c:	ldr	r3, [sp, #4]
   21660:	cmp	r5, #1
   21664:	add	r0, r3, ip, lsl #2
   21668:	beq	218e8 <GetDataSlab+0x57e4>
   2166c:	bic	r3, r7, r7, asr #31
   21670:	mov	r6, #0
   21674:	lsl	r8, r5, #2
   21678:	mul	sl, r5, r7
   2167c:	mul	fp, r5, r3
   21680:	mul	r3, r3, r8
   21684:	str	r3, [sp, #4]
   21688:	cmp	r6, r9
   2168c:	bge	1c230 <GetDataSlab+0x12c>
   21690:	ldr	r3, [sp, #196]	; 0xc4
   21694:	ldr	r1, [r3]
   21698:	ldr	r3, [sp]
   2169c:	cmp	r1, #0
   216a0:	addne	r0, r0, r1, lsl #2
   216a4:	addne	ip, ip, r1
   216a8:	add	lr, r3, r6, lsl #2
   216ac:	mov	r3, #0
   216b0:	mov	r4, r0
   216b4:	cmp	r3, r7
   216b8:	blt	218f0 <GetDataSlab+0x57ec>
   216bc:	ldr	r3, [sp, #8]
   216c0:	add	r5, sp, #72	; 0x48
   216c4:	mov	r4, #1
   216c8:	ldr	lr, [sp, #12]
   216cc:	sub	r3, r3, r1
   216d0:	sub	r2, r3, sl
   216d4:	add	r3, ip, fp
   216d8:	add	ip, r3, r2
   216dc:	ldr	r3, [sp, #4]
   216e0:	add	r3, r3, r2, lsl #2
   216e4:	add	r0, r0, r3
   216e8:	ldr	r3, [sp, #208]	; 0xd0
   216ec:	cmp	r4, r3
   216f0:	bge	2191c <GetDataSlab+0x5818>
   216f4:	ldr	r3, [r5, #4]
   216f8:	add	r2, r3, #1
   216fc:	ldr	r3, [sp, #204]	; 0xcc
   21700:	str	r2, [r5, #4]
   21704:	ldr	r1, [r3, r4, lsl #2]
   21708:	sdiv	r3, r2, r1
   2170c:	mls	r3, r1, r3, r2
   21710:	cmp	r3, #0
   21714:	bne	21908 <GetDataSlab+0x5804>
   21718:	ldr	r2, [lr, #4]
   2171c:	str	r3, [r5, #4]
   21720:	ldr	r1, [sp, #196]	; 0xc4
   21724:	sdiv	r3, ip, r2
   21728:	ldr	r1, [r1, r4, lsl #2]
   2172c:	mls	r3, r2, r3, ip
   21730:	cmp	r3, #0
   21734:	subne	r3, r2, r3
   21738:	ldrne	r2, [lr]
   2173c:	mlane	r3, r1, r2, r3
   21740:	bne	21754 <GetDataSlab+0x5650>
   21744:	cmp	r1, #0
   21748:	beq	2175c <GetDataSlab+0x5658>
   2174c:	ldr	r3, [lr]
   21750:	mul	r3, r3, r1
   21754:	add	r0, r0, r3, lsl #2
   21758:	add	ip, ip, r3
   2175c:	add	r4, r4, #1
   21760:	add	lr, lr, #4
   21764:	add	r5, r5, #4
   21768:	b	216e8 <GetDataSlab+0x55e4>
   2176c:	ldr	r3, [sl, r2, lsl #2]
   21770:	mov	r8, lr
   21774:	sub	r3, r3, #1
   21778:	str	r3, [r4, #4]
   2177c:	ldr	r3, [r6], #4
   21780:	mov	r1, r6
   21784:	str	r3, [lr, #4]
   21788:	cmp	r1, fp
   2178c:	bne	217bc <GetDataSlab+0x56b8>
   21790:	ldr	r1, [sp, #196]	; 0xc4
   21794:	add	lr, lr, #4
   21798:	add	r4, r4, #4
   2179c:	ldr	r3, [sp, #204]	; 0xcc
   217a0:	ldr	r1, [r1, r2, lsl #2]
   217a4:	ldr	r3, [r3, r2, lsl #2]
   217a8:	add	r2, r2, #1
   217ac:	mul	r9, r3, r9
   217b0:	ldr	r3, [r8]
   217b4:	mla	ip, r1, r3, ip
   217b8:	b	21650 <GetDataSlab+0x554c>
   217bc:	str	r1, [sp, #16]
   217c0:	ldr	r3, [r1, #-4]!
   217c4:	ldr	r0, [r4, #4]
   217c8:	mul	r3, r3, r0
   217cc:	ldr	r0, [lr, #4]
   217d0:	str	r3, [r4, #4]
   217d4:	ldr	r3, [sp, #16]
   217d8:	ldr	r3, [r3]
   217dc:	mul	r3, r3, r0
   217e0:	str	r3, [lr, #4]
   217e4:	b	21788 <GetDataSlab+0x5684>
   217e8:	ldr	lr, [r0, r3, lsl #2]
   217ec:	add	r3, r3, #1
   217f0:	vmov	s15, lr
   217f4:	vcvt.f32.s32	s15, s15
   217f8:	vstmia	r1!, {s15}
   217fc:	b	21840 <GetDataSlab+0x573c>
   21800:	add	r3, sp, #152	; 0x98
   21804:	add	r3, r3, lr, lsl #2
   21808:	ldr	r3, [r3, #-120]	; 0xffffff88
   2180c:	add	r0, r0, r3, lsl #2
   21810:	add	ip, ip, r3
   21814:	add	r6, r6, r7
   21818:	cmp	r6, r9
   2181c:	bge	1c230 <GetDataSlab+0x12c>
   21820:	ldr	r3, [sp, #196]	; 0xc4
   21824:	ldr	r2, [r3]
   21828:	ldr	r3, [sp]
   2182c:	cmp	r2, #0
   21830:	addne	r0, r0, r2, lsl #2
   21834:	addne	ip, ip, r2
   21838:	add	r1, r3, r6, lsl #2
   2183c:	mov	r3, #0
   21840:	cmp	r3, r7
   21844:	blt	217e8 <GetDataSlab+0x56e4>
   21848:	ldr	r3, [sp, #8]
   2184c:	add	r5, sp, #72	; 0x48
   21850:	mov	lr, #1
   21854:	ldr	r4, [sp, #12]
   21858:	sub	r3, r3, r2
   2185c:	add	r0, r0, r3, lsl #2
   21860:	add	ip, ip, r3
   21864:	ldr	r3, [sp, #208]	; 0xd0
   21868:	cmp	lr, r3
   2186c:	bge	21814 <GetDataSlab+0x5710>
   21870:	ldr	r3, [r5, #4]
   21874:	add	r2, r3, #1
   21878:	ldr	r3, [sp, #204]	; 0xcc
   2187c:	str	r2, [r5, #4]
   21880:	ldr	r1, [r3, lr, lsl #2]
   21884:	sdiv	r3, r2, r1
   21888:	mls	r3, r1, r3, r2
   2188c:	cmp	r3, #0
   21890:	bne	21800 <GetDataSlab+0x56fc>
   21894:	ldr	r2, [r4, #4]
   21898:	str	r3, [r5, #4]
   2189c:	ldr	r1, [sp, #196]	; 0xc4
   218a0:	sdiv	r3, ip, r2
   218a4:	ldr	r1, [r1, lr, lsl #2]
   218a8:	mls	r3, r2, r3, ip
   218ac:	cmp	r3, #0
   218b0:	ldrne	r8, [r4]
   218b4:	subne	r3, r2, r3
   218b8:	mlane	r3, r1, r8, r3
   218bc:	bne	218d0 <GetDataSlab+0x57cc>
   218c0:	cmp	r1, #0
   218c4:	beq	218d8 <GetDataSlab+0x57d4>
   218c8:	ldr	r3, [r4]
   218cc:	mul	r3, r3, r1
   218d0:	add	r0, r0, r3, lsl #2
   218d4:	add	ip, ip, r3
   218d8:	add	lr, lr, #1
   218dc:	add	r4, r4, #4
   218e0:	add	r5, r5, #4
   218e4:	b	21864 <GetDataSlab+0x5760>
   218e8:	mov	r6, #0
   218ec:	b	21818 <GetDataSlab+0x5714>
   218f0:	ldr	r2, [r4], r8
   218f4:	add	r3, r3, #1
   218f8:	vmov	s15, r2
   218fc:	vcvt.f32.s32	s15, s15
   21900:	vstmia	lr!, {s15}
   21904:	b	216b4 <GetDataSlab+0x55b0>
   21908:	add	r3, sp, #152	; 0x98
   2190c:	add	r3, r3, r4, lsl #2
   21910:	ldr	r3, [r3, #-120]	; 0xffffff88
   21914:	add	r0, r0, r3, lsl #2
   21918:	add	ip, ip, r3
   2191c:	add	r6, r6, r7
   21920:	b	21688 <GetDataSlab+0x5584>
   21924:	ldr	r5, [sl]
   21928:	add	r4, sp, #32
   2192c:	mov	r6, fp
   21930:	mov	ip, #0
   21934:	mov	r2, #1
   21938:	sub	r3, r5, #1
   2193c:	str	r3, [sp, #32]
   21940:	ldr	r3, [fp]
   21944:	str	r3, [sp, #8]
   21948:	str	r3, [sp, #112]	; 0x70
   2194c:	ldr	r3, [sp, #204]	; 0xcc
   21950:	ldr	r7, [r3]
   21954:	add	r3, sp, #112	; 0x70
   21958:	mov	lr, r3
   2195c:	str	r3, [sp, #12]
   21960:	mov	r9, r7
   21964:	ldr	r3, [sp, #208]	; 0xd0
   21968:	cmp	r2, r3
   2196c:	blt	21a80 <GetDataSlab+0x597c>
   21970:	ldr	r3, [sp, #4]
   21974:	cmp	r5, #1
   21978:	add	r0, r3, ip, lsl #2
   2197c:	beq	21bfc <GetDataSlab+0x5af8>
   21980:	bic	r3, r7, r7, asr #31
   21984:	mov	r6, #0
   21988:	lsl	r8, r5, #2
   2198c:	mul	sl, r5, r7
   21990:	mul	r2, r5, r3
   21994:	mul	fp, r3, r8
   21998:	str	r2, [sp, #4]
   2199c:	cmp	r6, r9
   219a0:	bge	1c230 <GetDataSlab+0x12c>
   219a4:	ldr	r3, [sp, #196]	; 0xc4
   219a8:	ldr	r1, [r3]
   219ac:	ldr	r3, [sp]
   219b0:	cmp	r1, #0
   219b4:	addne	r0, r0, r1, lsl #2
   219b8:	addne	ip, ip, r1
   219bc:	add	lr, r3, r6, lsl #2
   219c0:	mov	r3, #0
   219c4:	mov	r4, r0
   219c8:	cmp	r3, r7
   219cc:	blt	21c04 <GetDataSlab+0x5b00>
   219d0:	ldr	r3, [sp, #8]
   219d4:	add	r5, sp, #72	; 0x48
   219d8:	mov	r4, #1
   219dc:	ldr	lr, [sp, #12]
   219e0:	sub	r3, r3, r1
   219e4:	sub	r2, r3, sl
   219e8:	ldr	r3, [sp, #4]
   219ec:	add	r3, ip, r3
   219f0:	add	ip, r3, r2
   219f4:	add	r3, fp, r2, lsl #2
   219f8:	add	r0, r0, r3
   219fc:	ldr	r3, [sp, #208]	; 0xd0
   21a00:	cmp	r4, r3
   21a04:	bge	21c30 <GetDataSlab+0x5b2c>
   21a08:	ldr	r3, [r5, #4]
   21a0c:	add	r2, r3, #1
   21a10:	ldr	r3, [sp, #204]	; 0xcc
   21a14:	str	r2, [r5, #4]
   21a18:	ldr	r1, [r3, r4, lsl #2]
   21a1c:	sdiv	r3, r2, r1
   21a20:	mls	r3, r1, r3, r2
   21a24:	cmp	r3, #0
   21a28:	bne	21c1c <GetDataSlab+0x5b18>
   21a2c:	ldr	r2, [lr, #4]
   21a30:	str	r3, [r5, #4]
   21a34:	ldr	r1, [sp, #196]	; 0xc4
   21a38:	sdiv	r3, ip, r2
   21a3c:	ldr	r1, [r1, r4, lsl #2]
   21a40:	mls	r3, r2, r3, ip
   21a44:	cmp	r3, #0
   21a48:	subne	r3, r2, r3
   21a4c:	ldrne	r2, [lr]
   21a50:	mlane	r3, r1, r2, r3
   21a54:	bne	21a68 <GetDataSlab+0x5964>
   21a58:	cmp	r1, #0
   21a5c:	beq	21a70 <GetDataSlab+0x596c>
   21a60:	ldr	r3, [lr]
   21a64:	mul	r3, r3, r1
   21a68:	add	r0, r0, r3, lsl #2
   21a6c:	add	ip, ip, r3
   21a70:	add	r4, r4, #1
   21a74:	add	lr, lr, #4
   21a78:	add	r5, r5, #4
   21a7c:	b	219fc <GetDataSlab+0x58f8>
   21a80:	ldr	r3, [sl, r2, lsl #2]
   21a84:	mov	r8, lr
   21a88:	sub	r3, r3, #1
   21a8c:	str	r3, [r4, #4]
   21a90:	ldr	r3, [r6], #4
   21a94:	mov	r1, r6
   21a98:	str	r3, [lr, #4]
   21a9c:	cmp	fp, r1
   21aa0:	bne	21ad0 <GetDataSlab+0x59cc>
   21aa4:	ldr	r1, [sp, #196]	; 0xc4
   21aa8:	add	lr, lr, #4
   21aac:	add	r4, r4, #4
   21ab0:	ldr	r3, [sp, #204]	; 0xcc
   21ab4:	ldr	r1, [r1, r2, lsl #2]
   21ab8:	ldr	r3, [r3, r2, lsl #2]
   21abc:	add	r2, r2, #1
   21ac0:	mul	r9, r3, r9
   21ac4:	ldr	r3, [r8]
   21ac8:	mla	ip, r1, r3, ip
   21acc:	b	21964 <GetDataSlab+0x5860>
   21ad0:	str	r1, [sp, #16]
   21ad4:	ldr	r3, [r1, #-4]!
   21ad8:	ldr	r0, [r4, #4]
   21adc:	mul	r3, r3, r0
   21ae0:	ldr	r0, [lr, #4]
   21ae4:	str	r3, [r4, #4]
   21ae8:	ldr	r3, [sp, #16]
   21aec:	ldr	r3, [r3]
   21af0:	mul	r3, r3, r0
   21af4:	str	r3, [lr, #4]
   21af8:	b	21a9c <GetDataSlab+0x5998>
   21afc:	ldr	lr, [r0, r3, lsl #2]
   21b00:	add	r3, r3, #1
   21b04:	vmov	s15, lr
   21b08:	vcvt.f32.u32	s15, s15
   21b0c:	vstmia	r1!, {s15}
   21b10:	b	21b54 <GetDataSlab+0x5a50>
   21b14:	add	r3, sp, #152	; 0x98
   21b18:	add	r3, r3, lr, lsl #2
   21b1c:	ldr	r3, [r3, #-120]	; 0xffffff88
   21b20:	add	r0, r0, r3, lsl #2
   21b24:	add	ip, ip, r3
   21b28:	add	r6, r6, r7
   21b2c:	cmp	r6, r9
   21b30:	bge	1c230 <GetDataSlab+0x12c>
   21b34:	ldr	r3, [sp, #196]	; 0xc4
   21b38:	ldr	r2, [r3]
   21b3c:	ldr	r3, [sp]
   21b40:	cmp	r2, #0
   21b44:	addne	r0, r0, r2, lsl #2
   21b48:	addne	ip, ip, r2
   21b4c:	add	r1, r3, r6, lsl #2
   21b50:	mov	r3, #0
   21b54:	cmp	r3, r7
   21b58:	blt	21afc <GetDataSlab+0x59f8>
   21b5c:	ldr	r3, [sp, #8]
   21b60:	add	r5, sp, #72	; 0x48
   21b64:	mov	lr, #1
   21b68:	ldr	r4, [sp, #12]
   21b6c:	sub	r3, r3, r2
   21b70:	add	r0, r0, r3, lsl #2
   21b74:	add	ip, ip, r3
   21b78:	ldr	r3, [sp, #208]	; 0xd0
   21b7c:	cmp	lr, r3
   21b80:	bge	21b28 <GetDataSlab+0x5a24>
   21b84:	ldr	r3, [r5, #4]
   21b88:	add	r2, r3, #1
   21b8c:	ldr	r3, [sp, #204]	; 0xcc
   21b90:	str	r2, [r5, #4]
   21b94:	ldr	r1, [r3, lr, lsl #2]
   21b98:	sdiv	r3, r2, r1
   21b9c:	mls	r3, r1, r3, r2
   21ba0:	cmp	r3, #0
   21ba4:	bne	21b14 <GetDataSlab+0x5a10>
   21ba8:	ldr	r2, [r4, #4]
   21bac:	str	r3, [r5, #4]
   21bb0:	ldr	r1, [sp, #196]	; 0xc4
   21bb4:	sdiv	r3, ip, r2
   21bb8:	ldr	r1, [r1, lr, lsl #2]
   21bbc:	mls	r3, r2, r3, ip
   21bc0:	cmp	r3, #0
   21bc4:	ldrne	r8, [r4]
   21bc8:	subne	r3, r2, r3
   21bcc:	mlane	r3, r1, r8, r3
   21bd0:	bne	21be4 <GetDataSlab+0x5ae0>
   21bd4:	cmp	r1, #0
   21bd8:	beq	21bec <GetDataSlab+0x5ae8>
   21bdc:	ldr	r3, [r4]
   21be0:	mul	r3, r3, r1
   21be4:	add	r0, r0, r3, lsl #2
   21be8:	add	ip, ip, r3
   21bec:	add	lr, lr, #1
   21bf0:	add	r4, r4, #4
   21bf4:	add	r5, r5, #4
   21bf8:	b	21b78 <GetDataSlab+0x5a74>
   21bfc:	mov	r6, #0
   21c00:	b	21b2c <GetDataSlab+0x5a28>
   21c04:	ldr	r2, [r4], r8
   21c08:	add	r3, r3, #1
   21c0c:	vmov	s15, r2
   21c10:	vcvt.f32.u32	s15, s15
   21c14:	vstmia	lr!, {s15}
   21c18:	b	219c8 <GetDataSlab+0x58c4>
   21c1c:	add	r3, sp, #152	; 0x98
   21c20:	add	r3, r3, r4, lsl #2
   21c24:	ldr	r3, [r3, #-120]	; 0xffffff88
   21c28:	add	r0, r0, r3, lsl #2
   21c2c:	add	ip, ip, r3
   21c30:	add	r6, r6, r7
   21c34:	b	2199c <GetDataSlab+0x5898>
   21c38:	ldr	r5, [sl]
   21c3c:	add	lr, sp, #32
   21c40:	mov	r6, fp
   21c44:	mov	r4, #0
   21c48:	mov	r2, #1
   21c4c:	sub	r3, r5, #1
   21c50:	str	r3, [sp, #32]
   21c54:	ldr	r3, [fp]
   21c58:	str	r3, [sp, #8]
   21c5c:	str	r3, [sp, #112]	; 0x70
   21c60:	ldr	r3, [sp, #204]	; 0xcc
   21c64:	ldr	r7, [r3]
   21c68:	add	r3, sp, #112	; 0x70
   21c6c:	mov	ip, r3
   21c70:	str	r3, [sp, #12]
   21c74:	mov	r9, r7
   21c78:	ldr	r3, [sp, #208]	; 0xd0
   21c7c:	cmp	r2, r3
   21c80:	blt	21d94 <GetDataSlab+0x5c90>
   21c84:	ldr	r3, [sp, #4]
   21c88:	cmp	r5, #1
   21c8c:	add	r0, r3, r4, lsl #1
   21c90:	beq	21f14 <GetDataSlab+0x5e10>
   21c94:	bic	r3, r7, r7, asr #31
   21c98:	mov	r6, #0
   21c9c:	lsl	r8, r5, #1
   21ca0:	mul	sl, r5, r7
   21ca4:	mul	fp, r3, r5
   21ca8:	mul	r3, r3, r8
   21cac:	str	r3, [sp, #4]
   21cb0:	cmp	r6, r9
   21cb4:	bge	1c230 <GetDataSlab+0x12c>
   21cb8:	ldr	r3, [sp, #196]	; 0xc4
   21cbc:	ldr	r1, [r3]
   21cc0:	ldr	r3, [sp]
   21cc4:	cmp	r1, #0
   21cc8:	addne	r0, r0, r1, lsl #1
   21ccc:	addne	r4, r4, r1
   21cd0:	add	ip, r3, r6, lsl #2
   21cd4:	mov	r3, #0
   21cd8:	mov	lr, r0
   21cdc:	cmp	r3, r7
   21ce0:	blt	21f1c <GetDataSlab+0x5e18>
   21ce4:	ldr	r3, [sp, #8]
   21ce8:	add	r5, sp, #72	; 0x48
   21cec:	mov	lr, #1
   21cf0:	ldr	ip, [sp, #12]
   21cf4:	sub	r3, r3, r1
   21cf8:	sub	r2, r3, sl
   21cfc:	add	r3, r4, fp
   21d00:	add	r4, r3, r2
   21d04:	ldr	r3, [sp, #4]
   21d08:	add	r3, r3, r2, lsl #1
   21d0c:	add	r0, r0, r3
   21d10:	ldr	r3, [sp, #208]	; 0xd0
   21d14:	cmp	lr, r3
   21d18:	bge	21f48 <GetDataSlab+0x5e44>
   21d1c:	ldr	r3, [r5, #4]
   21d20:	add	r2, r3, #1
   21d24:	ldr	r3, [sp, #204]	; 0xcc
   21d28:	str	r2, [r5, #4]
   21d2c:	ldr	r1, [r3, lr, lsl #2]
   21d30:	sdiv	r3, r2, r1
   21d34:	mls	r3, r1, r3, r2
   21d38:	cmp	r3, #0
   21d3c:	bne	21f34 <GetDataSlab+0x5e30>
   21d40:	ldr	r2, [ip, #4]
   21d44:	str	r3, [r5, #4]
   21d48:	ldr	r1, [sp, #196]	; 0xc4
   21d4c:	sdiv	r3, r4, r2
   21d50:	ldr	r1, [r1, lr, lsl #2]
   21d54:	mls	r3, r2, r3, r4
   21d58:	cmp	r3, #0
   21d5c:	subne	r3, r2, r3
   21d60:	ldrne	r2, [ip]
   21d64:	mlane	r3, r1, r2, r3
   21d68:	bne	21d7c <GetDataSlab+0x5c78>
   21d6c:	cmp	r1, #0
   21d70:	beq	21d84 <GetDataSlab+0x5c80>
   21d74:	ldr	r3, [ip]
   21d78:	mul	r3, r3, r1
   21d7c:	add	r0, r0, r3, lsl #1
   21d80:	add	r4, r4, r3
   21d84:	add	lr, lr, #1
   21d88:	add	ip, ip, #4
   21d8c:	add	r5, r5, #4
   21d90:	b	21d10 <GetDataSlab+0x5c0c>
   21d94:	ldr	r3, [sl, r2, lsl #2]
   21d98:	mov	r8, ip
   21d9c:	sub	r3, r3, #1
   21da0:	str	r3, [lr, #4]
   21da4:	ldr	r3, [r6], #4
   21da8:	mov	r1, r6
   21dac:	str	r3, [ip, #4]
   21db0:	cmp	r1, fp
   21db4:	bne	21de4 <GetDataSlab+0x5ce0>
   21db8:	ldr	r1, [sp, #196]	; 0xc4
   21dbc:	add	ip, ip, #4
   21dc0:	add	lr, lr, #4
   21dc4:	ldr	r3, [sp, #204]	; 0xcc
   21dc8:	ldr	r1, [r1, r2, lsl #2]
   21dcc:	ldr	r3, [r3, r2, lsl #2]
   21dd0:	add	r2, r2, #1
   21dd4:	mul	r9, r3, r9
   21dd8:	ldr	r3, [r8]
   21ddc:	mla	r4, r1, r3, r4
   21de0:	b	21c78 <GetDataSlab+0x5b74>
   21de4:	str	r1, [sp, #16]
   21de8:	ldr	r3, [r1, #-4]!
   21dec:	ldr	r0, [lr, #4]
   21df0:	mul	r3, r3, r0
   21df4:	ldr	r0, [ip, #4]
   21df8:	str	r3, [lr, #4]
   21dfc:	ldr	r3, [sp, #16]
   21e00:	ldr	r3, [r3]
   21e04:	mul	r3, r3, r0
   21e08:	str	r3, [ip, #4]
   21e0c:	b	21db0 <GetDataSlab+0x5cac>
   21e10:	ldrsh	r1, [ip, #2]!
   21e14:	add	r2, r2, #1
   21e18:	vmov	s15, r1
   21e1c:	vcvt.f32.s32	s15, s15
   21e20:	vstmia	lr!, {s15}
   21e24:	b	21e6c <GetDataSlab+0x5d68>
   21e28:	add	r3, sp, #152	; 0x98
   21e2c:	add	r3, r3, ip, lsl #2
   21e30:	ldr	r3, [r3, #-120]	; 0xffffff88
   21e34:	add	r0, r0, r3, lsl #1
   21e38:	add	r4, r4, r3
   21e3c:	add	r6, r6, r7
   21e40:	cmp	r6, r9
   21e44:	bge	1c230 <GetDataSlab+0x12c>
   21e48:	ldr	r2, [sp]
   21e4c:	ldr	r3, [sp, #196]	; 0xc4
   21e50:	add	lr, r2, r6, lsl #2
   21e54:	mov	r2, #0
   21e58:	ldr	r3, [r3]
   21e5c:	cmp	r3, #0
   21e60:	addne	r0, r0, r3, lsl #1
   21e64:	addne	r4, r4, r3
   21e68:	sub	ip, r0, #2
   21e6c:	cmp	r2, r7
   21e70:	blt	21e10 <GetDataSlab+0x5d0c>
   21e74:	ldr	r2, [sp, #8]
   21e78:	add	r5, sp, #72	; 0x48
   21e7c:	mov	ip, #1
   21e80:	ldr	lr, [sp, #12]
   21e84:	sub	r3, r2, r3
   21e88:	add	r0, r0, r3, lsl #1
   21e8c:	add	r4, r4, r3
   21e90:	ldr	r3, [sp, #208]	; 0xd0
   21e94:	cmp	ip, r3
   21e98:	bge	21e3c <GetDataSlab+0x5d38>
   21e9c:	ldr	r3, [r5, #4]
   21ea0:	add	r2, r3, #1
   21ea4:	ldr	r3, [sp, #204]	; 0xcc
   21ea8:	str	r2, [r5, #4]
   21eac:	ldr	r1, [r3, ip, lsl #2]
   21eb0:	sdiv	r3, r2, r1
   21eb4:	mls	r3, r1, r3, r2
   21eb8:	cmp	r3, #0
   21ebc:	bne	21e28 <GetDataSlab+0x5d24>
   21ec0:	ldr	r2, [lr, #4]
   21ec4:	str	r3, [r5, #4]
   21ec8:	ldr	r1, [sp, #196]	; 0xc4
   21ecc:	sdiv	r3, r4, r2
   21ed0:	ldr	r1, [r1, ip, lsl #2]
   21ed4:	mls	r3, r2, r3, r4
   21ed8:	cmp	r3, #0
   21edc:	ldrne	r8, [lr]
   21ee0:	subne	r3, r2, r3
   21ee4:	mlane	r3, r1, r8, r3
   21ee8:	bne	21efc <GetDataSlab+0x5df8>
   21eec:	cmp	r1, #0
   21ef0:	beq	21f04 <GetDataSlab+0x5e00>
   21ef4:	ldr	r3, [lr]
   21ef8:	mul	r3, r3, r1
   21efc:	add	r0, r0, r3, lsl #1
   21f00:	add	r4, r4, r3
   21f04:	add	ip, ip, #1
   21f08:	add	lr, lr, #4
   21f0c:	add	r5, r5, #4
   21f10:	b	21e90 <GetDataSlab+0x5d8c>
   21f14:	mov	r6, #0
   21f18:	b	21e40 <GetDataSlab+0x5d3c>
   21f1c:	ldrsh	r2, [lr], r8
   21f20:	add	r3, r3, #1
   21f24:	vmov	s15, r2
   21f28:	vcvt.f32.s32	s15, s15
   21f2c:	vstmia	ip!, {s15}
   21f30:	b	21cdc <GetDataSlab+0x5bd8>
   21f34:	add	r3, sp, #152	; 0x98
   21f38:	add	r3, r3, lr, lsl #2
   21f3c:	ldr	r3, [r3, #-120]	; 0xffffff88
   21f40:	add	r0, r0, r3, lsl #1
   21f44:	add	r4, r4, r3
   21f48:	add	r6, r6, r7
   21f4c:	b	21cb0 <GetDataSlab+0x5bac>
   21f50:	ldr	r5, [sl]
   21f54:	add	lr, sp, #32
   21f58:	mov	r6, fp
   21f5c:	mov	r4, #0
   21f60:	mov	r2, #1
   21f64:	sub	r3, r5, #1
   21f68:	str	r3, [sp, #32]
   21f6c:	ldr	r3, [fp]
   21f70:	str	r3, [sp, #8]
   21f74:	str	r3, [sp, #112]	; 0x70
   21f78:	ldr	r3, [sp, #204]	; 0xcc
   21f7c:	ldr	r7, [r3]
   21f80:	add	r3, sp, #112	; 0x70
   21f84:	mov	ip, r3
   21f88:	str	r3, [sp, #12]
   21f8c:	mov	r9, r7
   21f90:	ldr	r3, [sp, #208]	; 0xd0
   21f94:	cmp	r2, r3
   21f98:	blt	220ac <GetDataSlab+0x5fa8>
   21f9c:	ldr	r3, [sp, #4]
   21fa0:	cmp	r5, #1
   21fa4:	add	r0, r3, r4, lsl #1
   21fa8:	beq	2222c <GetDataSlab+0x6128>
   21fac:	bic	r3, r7, r7, asr #31
   21fb0:	mov	r6, #0
   21fb4:	lsl	r8, r5, #1
   21fb8:	mul	sl, r5, r7
   21fbc:	mul	r2, r5, r3
   21fc0:	mul	fp, r3, r8
   21fc4:	str	r2, [sp, #4]
   21fc8:	cmp	r6, r9
   21fcc:	bge	1c230 <GetDataSlab+0x12c>
   21fd0:	ldr	r3, [sp, #196]	; 0xc4
   21fd4:	ldr	r1, [r3]
   21fd8:	ldr	r3, [sp]
   21fdc:	cmp	r1, #0
   21fe0:	addne	r0, r0, r1, lsl #1
   21fe4:	addne	r4, r4, r1
   21fe8:	add	ip, r3, r6, lsl #2
   21fec:	mov	r3, #0
   21ff0:	mov	lr, r0
   21ff4:	cmp	r3, r7
   21ff8:	blt	22234 <GetDataSlab+0x6130>
   21ffc:	ldr	r3, [sp, #8]
   22000:	add	r5, sp, #72	; 0x48
   22004:	mov	lr, #1
   22008:	ldr	ip, [sp, #12]
   2200c:	sub	r3, r3, r1
   22010:	sub	r2, r3, sl
   22014:	ldr	r3, [sp, #4]
   22018:	add	r3, r4, r3
   2201c:	add	r4, r3, r2
   22020:	add	r3, fp, r2, lsl #1
   22024:	add	r0, r0, r3
   22028:	ldr	r3, [sp, #208]	; 0xd0
   2202c:	cmp	lr, r3
   22030:	bge	22260 <GetDataSlab+0x615c>
   22034:	ldr	r3, [r5, #4]
   22038:	add	r2, r3, #1
   2203c:	ldr	r3, [sp, #204]	; 0xcc
   22040:	str	r2, [r5, #4]
   22044:	ldr	r1, [r3, lr, lsl #2]
   22048:	sdiv	r3, r2, r1
   2204c:	mls	r3, r1, r3, r2
   22050:	cmp	r3, #0
   22054:	bne	2224c <GetDataSlab+0x6148>
   22058:	ldr	r2, [ip, #4]
   2205c:	str	r3, [r5, #4]
   22060:	ldr	r1, [sp, #196]	; 0xc4
   22064:	sdiv	r3, r4, r2
   22068:	ldr	r1, [r1, lr, lsl #2]
   2206c:	mls	r3, r2, r3, r4
   22070:	cmp	r3, #0
   22074:	subne	r3, r2, r3
   22078:	ldrne	r2, [ip]
   2207c:	mlane	r3, r1, r2, r3
   22080:	bne	22094 <GetDataSlab+0x5f90>
   22084:	cmp	r1, #0
   22088:	beq	2209c <GetDataSlab+0x5f98>
   2208c:	ldr	r3, [ip]
   22090:	mul	r3, r3, r1
   22094:	add	r0, r0, r3, lsl #1
   22098:	add	r4, r4, r3
   2209c:	add	lr, lr, #1
   220a0:	add	ip, ip, #4
   220a4:	add	r5, r5, #4
   220a8:	b	22028 <GetDataSlab+0x5f24>
   220ac:	ldr	r3, [sl, r2, lsl #2]
   220b0:	mov	r8, ip
   220b4:	sub	r3, r3, #1
   220b8:	str	r3, [lr, #4]
   220bc:	ldr	r3, [r6], #4
   220c0:	mov	r1, r6
   220c4:	str	r3, [ip, #4]
   220c8:	cmp	r1, fp
   220cc:	bne	220fc <GetDataSlab+0x5ff8>
   220d0:	ldr	r1, [sp, #196]	; 0xc4
   220d4:	add	ip, ip, #4
   220d8:	add	lr, lr, #4
   220dc:	ldr	r3, [sp, #204]	; 0xcc
   220e0:	ldr	r1, [r1, r2, lsl #2]
   220e4:	ldr	r3, [r3, r2, lsl #2]
   220e8:	add	r2, r2, #1
   220ec:	mul	r9, r3, r9
   220f0:	ldr	r3, [r8]
   220f4:	mla	r4, r1, r3, r4
   220f8:	b	21f90 <GetDataSlab+0x5e8c>
   220fc:	str	r1, [sp, #16]
   22100:	ldr	r3, [r1, #-4]!
   22104:	ldr	r0, [lr, #4]
   22108:	mul	r3, r3, r0
   2210c:	ldr	r0, [ip, #4]
   22110:	str	r3, [lr, #4]
   22114:	ldr	r3, [sp, #16]
   22118:	ldr	r3, [r3]
   2211c:	mul	r3, r3, r0
   22120:	str	r3, [ip, #4]
   22124:	b	220c8 <GetDataSlab+0x5fc4>
   22128:	ldrh	r1, [lr, #2]!
   2212c:	add	r2, r2, #1
   22130:	vmov	s15, r1
   22134:	vcvt.f32.u32	s15, s15
   22138:	vstmia	ip!, {s15}
   2213c:	b	22184 <GetDataSlab+0x6080>
   22140:	add	r3, sp, #152	; 0x98
   22144:	add	r3, r3, ip, lsl #2
   22148:	ldr	r3, [r3, #-120]	; 0xffffff88
   2214c:	add	r0, r0, r3, lsl #1
   22150:	add	r4, r4, r3
   22154:	add	r6, r6, r7
   22158:	cmp	r6, r9
   2215c:	bge	1c230 <GetDataSlab+0x12c>
   22160:	ldr	r2, [sp]
   22164:	ldr	r3, [sp, #196]	; 0xc4
   22168:	add	ip, r2, r6, lsl #2
   2216c:	mov	r2, #0
   22170:	ldr	r3, [r3]
   22174:	cmp	r3, #0
   22178:	addne	r0, r0, r3, lsl #1
   2217c:	addne	r4, r4, r3
   22180:	sub	lr, r0, #2
   22184:	cmp	r2, r7
   22188:	blt	22128 <GetDataSlab+0x6024>
   2218c:	ldr	r2, [sp, #8]
   22190:	add	r5, sp, #72	; 0x48
   22194:	mov	ip, #1
   22198:	ldr	lr, [sp, #12]
   2219c:	sub	r3, r2, r3
   221a0:	add	r0, r0, r3, lsl #1
   221a4:	add	r4, r4, r3
   221a8:	ldr	r3, [sp, #208]	; 0xd0
   221ac:	cmp	ip, r3
   221b0:	bge	22154 <GetDataSlab+0x6050>
   221b4:	ldr	r3, [r5, #4]
   221b8:	add	r2, r3, #1
   221bc:	ldr	r3, [sp, #204]	; 0xcc
   221c0:	str	r2, [r5, #4]
   221c4:	ldr	r1, [r3, ip, lsl #2]
   221c8:	sdiv	r3, r2, r1
   221cc:	mls	r3, r1, r3, r2
   221d0:	cmp	r3, #0
   221d4:	bne	22140 <GetDataSlab+0x603c>
   221d8:	ldr	r2, [lr, #4]
   221dc:	str	r3, [r5, #4]
   221e0:	ldr	r1, [sp, #196]	; 0xc4
   221e4:	sdiv	r3, r4, r2
   221e8:	ldr	r1, [r1, ip, lsl #2]
   221ec:	mls	r3, r2, r3, r4
   221f0:	cmp	r3, #0
   221f4:	ldrne	r8, [lr]
   221f8:	subne	r3, r2, r3
   221fc:	mlane	r3, r1, r8, r3
   22200:	bne	22214 <GetDataSlab+0x6110>
   22204:	cmp	r1, #0
   22208:	beq	2221c <GetDataSlab+0x6118>
   2220c:	ldr	r3, [lr]
   22210:	mul	r3, r3, r1
   22214:	add	r0, r0, r3, lsl #1
   22218:	add	r4, r4, r3
   2221c:	add	ip, ip, #1
   22220:	add	lr, lr, #4
   22224:	add	r5, r5, #4
   22228:	b	221a8 <GetDataSlab+0x60a4>
   2222c:	mov	r6, #0
   22230:	b	22158 <GetDataSlab+0x6054>
   22234:	ldrh	r2, [lr], r8
   22238:	add	r3, r3, #1
   2223c:	vmov	s15, r2
   22240:	vcvt.f32.u32	s15, s15
   22244:	vstmia	ip!, {s15}
   22248:	b	21ff4 <GetDataSlab+0x5ef0>
   2224c:	add	r3, sp, #152	; 0x98
   22250:	add	r3, r3, lr, lsl #2
   22254:	ldr	r3, [r3, #-120]	; 0xffffff88
   22258:	add	r0, r0, r3, lsl #1
   2225c:	add	r4, r4, r3
   22260:	add	r6, r6, r7
   22264:	b	21fc8 <GetDataSlab+0x5ec4>
   22268:	ldr	r8, [sl]
   2226c:	add	r4, sp, #32
   22270:	mov	r5, fp
   22274:	mov	ip, #0
   22278:	mov	r2, #1
   2227c:	sub	r3, r8, #1
   22280:	str	r3, [sp, #32]
   22284:	ldr	r3, [fp]
   22288:	str	r3, [sp, #8]
   2228c:	str	r3, [sp, #112]	; 0x70
   22290:	ldr	r3, [sp, #204]	; 0xcc
   22294:	ldr	r7, [r3]
   22298:	add	r3, sp, #112	; 0x70
   2229c:	mov	lr, r3
   222a0:	str	r3, [sp, #12]
   222a4:	mov	r9, r7
   222a8:	ldr	r3, [sp, #208]	; 0xd0
   222ac:	cmp	r2, r3
   222b0:	blt	223b4 <GetDataSlab+0x62b0>
   222b4:	ldr	r3, [sp, #4]
   222b8:	cmp	r8, #1
   222bc:	add	r0, r3, ip
   222c0:	beq	22530 <GetDataSlab+0x642c>
   222c4:	bic	r3, r7, r7, asr #31
   222c8:	mov	r6, #0
   222cc:	mul	fp, r8, r7
   222d0:	mul	sl, r8, r3
   222d4:	cmp	r6, r9
   222d8:	bge	1c230 <GetDataSlab+0x12c>
   222dc:	ldr	r3, [sp, #196]	; 0xc4
   222e0:	ldr	r1, [r3]
   222e4:	ldr	r3, [sp]
   222e8:	cmp	r1, #0
   222ec:	addne	r0, r0, r1
   222f0:	addne	ip, ip, r1
   222f4:	add	lr, r3, r6, lsl #2
   222f8:	mov	r4, r0
   222fc:	mov	r3, #0
   22300:	cmp	r3, r7
   22304:	blt	22538 <GetDataSlab+0x6434>
   22308:	ldr	r3, [sp, #8]
   2230c:	add	r5, sp, #72	; 0x48
   22310:	mov	r4, #1
   22314:	ldr	lr, [sp, #12]
   22318:	sub	r3, r3, r1
   2231c:	sub	r2, r3, fp
   22320:	add	r3, ip, sl
   22324:	add	ip, r3, r2
   22328:	add	r3, r2, sl
   2232c:	add	r0, r0, r3
   22330:	ldr	r3, [sp, #208]	; 0xd0
   22334:	cmp	r4, r3
   22338:	bge	22564 <GetDataSlab+0x6460>
   2233c:	ldr	r3, [r5, #4]
   22340:	add	r2, r3, #1
   22344:	ldr	r3, [sp, #204]	; 0xcc
   22348:	str	r2, [r5, #4]
   2234c:	ldr	r1, [r3, r4, lsl #2]
   22350:	sdiv	r3, r2, r1
   22354:	mls	r3, r1, r3, r2
   22358:	cmp	r3, #0
   2235c:	bne	22550 <GetDataSlab+0x644c>
   22360:	ldr	r2, [lr, #4]
   22364:	str	r3, [r5, #4]
   22368:	ldr	r1, [sp, #196]	; 0xc4
   2236c:	sdiv	r3, ip, r2
   22370:	ldr	r1, [r1, r4, lsl #2]
   22374:	mls	r3, r2, r3, ip
   22378:	cmp	r3, #0
   2237c:	subne	r3, r2, r3
   22380:	ldrne	r2, [lr]
   22384:	mlane	r3, r1, r2, r3
   22388:	bne	2239c <GetDataSlab+0x6298>
   2238c:	cmp	r1, #0
   22390:	beq	223a4 <GetDataSlab+0x62a0>
   22394:	ldr	r3, [lr]
   22398:	mul	r3, r3, r1
   2239c:	add	r0, r0, r3
   223a0:	add	ip, ip, r3
   223a4:	add	r4, r4, #1
   223a8:	add	lr, lr, #4
   223ac:	add	r5, r5, #4
   223b0:	b	22330 <GetDataSlab+0x622c>
   223b4:	ldr	r3, [sl, r2, lsl #2]
   223b8:	mov	r6, lr
   223bc:	sub	r3, r3, #1
   223c0:	str	r3, [r4, #4]
   223c4:	ldr	r3, [r5], #4
   223c8:	mov	r1, r5
   223cc:	str	r3, [lr, #4]
   223d0:	cmp	r1, fp
   223d4:	bne	22404 <GetDataSlab+0x6300>
   223d8:	ldr	r1, [sp, #196]	; 0xc4
   223dc:	add	lr, lr, #4
   223e0:	add	r4, r4, #4
   223e4:	ldr	r3, [sp, #204]	; 0xcc
   223e8:	ldr	r1, [r1, r2, lsl #2]
   223ec:	ldr	r3, [r3, r2, lsl #2]
   223f0:	add	r2, r2, #1
   223f4:	mul	r9, r3, r9
   223f8:	ldr	r3, [r6]
   223fc:	mla	ip, r1, r3, ip
   22400:	b	222a8 <GetDataSlab+0x61a4>
   22404:	str	r1, [sp, #16]
   22408:	ldr	r3, [r1, #-4]!
   2240c:	ldr	r0, [r4, #4]
   22410:	mul	r3, r3, r0
   22414:	ldr	r0, [lr, #4]
   22418:	str	r3, [r4, #4]
   2241c:	ldr	r3, [sp, #16]
   22420:	ldr	r3, [r3]
   22424:	mul	r3, r3, r0
   22428:	str	r3, [lr, #4]
   2242c:	b	223d0 <GetDataSlab+0x62cc>
   22430:	ldrsb	lr, [r0, r2]
   22434:	add	r2, r2, #1
   22438:	vmov	s15, lr
   2243c:	vcvt.f32.s32	s15, s15
   22440:	vstmia	r1!, {s15}
   22444:	b	22488 <GetDataSlab+0x6384>
   22448:	add	r3, sp, #152	; 0x98
   2244c:	add	r3, r3, lr, lsl #2
   22450:	ldr	r3, [r3, #-120]	; 0xffffff88
   22454:	add	ip, ip, r3
   22458:	add	r0, r0, r3
   2245c:	add	r6, r6, r7
   22460:	cmp	r6, r9
   22464:	bge	1c230 <GetDataSlab+0x12c>
   22468:	ldr	r2, [sp]
   2246c:	ldr	r3, [sp, #196]	; 0xc4
   22470:	add	r1, r2, r6, lsl #2
   22474:	mov	r2, #0
   22478:	ldr	r3, [r3]
   2247c:	cmp	r3, #0
   22480:	addne	r0, r0, r3
   22484:	addne	ip, ip, r3
   22488:	cmp	r2, r7
   2248c:	blt	22430 <GetDataSlab+0x632c>
   22490:	ldr	r2, [sp, #8]
   22494:	add	r5, sp, #72	; 0x48
   22498:	mov	lr, #1
   2249c:	ldr	r4, [sp, #12]
   224a0:	sub	r3, r2, r3
   224a4:	add	ip, ip, r3
   224a8:	add	r0, r0, r3
   224ac:	ldr	r3, [sp, #208]	; 0xd0
   224b0:	cmp	lr, r3
   224b4:	bge	2245c <GetDataSlab+0x6358>
   224b8:	ldr	r3, [r5, #4]
   224bc:	add	r2, r3, #1
   224c0:	ldr	r3, [sp, #204]	; 0xcc
   224c4:	str	r2, [r5, #4]
   224c8:	ldr	r1, [r3, lr, lsl #2]
   224cc:	sdiv	r3, r2, r1
   224d0:	mls	r3, r1, r3, r2
   224d4:	cmp	r3, #0
   224d8:	bne	22448 <GetDataSlab+0x6344>
   224dc:	ldr	r2, [r4, #4]
   224e0:	str	r3, [r5, #4]
   224e4:	ldr	r1, [sp, #196]	; 0xc4
   224e8:	sdiv	r3, ip, r2
   224ec:	ldr	r1, [r1, lr, lsl #2]
   224f0:	mls	r3, r2, r3, ip
   224f4:	cmp	r3, #0
   224f8:	ldrne	r8, [r4]
   224fc:	subne	r3, r2, r3
   22500:	mlane	r3, r1, r8, r3
   22504:	bne	22518 <GetDataSlab+0x6414>
   22508:	cmp	r1, #0
   2250c:	beq	22520 <GetDataSlab+0x641c>
   22510:	ldr	r3, [r4]
   22514:	mul	r3, r3, r1
   22518:	add	r0, r0, r3
   2251c:	add	ip, ip, r3
   22520:	add	lr, lr, #1
   22524:	add	r4, r4, #4
   22528:	add	r5, r5, #4
   2252c:	b	224ac <GetDataSlab+0x63a8>
   22530:	mov	r6, #0
   22534:	b	22460 <GetDataSlab+0x635c>
   22538:	ldrsb	r2, [r4], r8
   2253c:	add	r3, r3, #1
   22540:	vmov	s15, r2
   22544:	vcvt.f32.s32	s15, s15
   22548:	vstmia	lr!, {s15}
   2254c:	b	22300 <GetDataSlab+0x61fc>
   22550:	add	r3, sp, #152	; 0x98
   22554:	add	r3, r3, r4, lsl #2
   22558:	ldr	r3, [r3, #-120]	; 0xffffff88
   2255c:	add	ip, ip, r3
   22560:	add	r0, r0, r3
   22564:	add	r6, r6, r7
   22568:	b	222d4 <GetDataSlab+0x61d0>
   2256c:	ldr	r8, [sl]
   22570:	add	r4, sp, #32
   22574:	mov	r5, fp
   22578:	mov	ip, #0
   2257c:	mov	r2, #1
   22580:	sub	r3, r8, #1
   22584:	str	r3, [sp, #32]
   22588:	ldr	r3, [fp]
   2258c:	str	r3, [sp, #8]
   22590:	str	r3, [sp, #112]	; 0x70
   22594:	ldr	r3, [sp, #204]	; 0xcc
   22598:	ldr	r7, [r3]
   2259c:	add	r3, sp, #112	; 0x70
   225a0:	mov	lr, r3
   225a4:	str	r3, [sp, #12]
   225a8:	mov	r9, r7
   225ac:	ldr	r3, [sp, #208]	; 0xd0
   225b0:	cmp	r2, r3
   225b4:	blt	226b8 <GetDataSlab+0x65b4>
   225b8:	ldr	r3, [sp, #4]
   225bc:	cmp	r8, #1
   225c0:	add	r0, r3, ip
   225c4:	beq	22834 <GetDataSlab+0x6730>
   225c8:	bic	r3, r7, r7, asr #31
   225cc:	mov	r6, #0
   225d0:	mul	fp, r8, r7
   225d4:	mul	sl, r8, r3
   225d8:	cmp	r6, r9
   225dc:	bge	1c230 <GetDataSlab+0x12c>
   225e0:	ldr	r3, [sp, #196]	; 0xc4
   225e4:	ldr	r1, [r3]
   225e8:	ldr	r3, [sp]
   225ec:	cmp	r1, #0
   225f0:	addne	r0, r0, r1
   225f4:	addne	ip, ip, r1
   225f8:	add	lr, r3, r6, lsl #2
   225fc:	mov	r4, r0
   22600:	mov	r3, #0
   22604:	cmp	r3, r7
   22608:	blt	2283c <GetDataSlab+0x6738>
   2260c:	ldr	r3, [sp, #8]
   22610:	add	r5, sp, #72	; 0x48
   22614:	mov	r4, #1
   22618:	ldr	lr, [sp, #12]
   2261c:	sub	r3, r3, r1
   22620:	sub	r2, r3, fp
   22624:	add	r3, ip, sl
   22628:	add	ip, r3, r2
   2262c:	add	r3, r2, sl
   22630:	add	r0, r0, r3
   22634:	ldr	r3, [sp, #208]	; 0xd0
   22638:	cmp	r4, r3
   2263c:	bge	22868 <GetDataSlab+0x6764>
   22640:	ldr	r3, [r5, #4]
   22644:	add	r2, r3, #1
   22648:	ldr	r3, [sp, #204]	; 0xcc
   2264c:	str	r2, [r5, #4]
   22650:	ldr	r1, [r3, r4, lsl #2]
   22654:	sdiv	r3, r2, r1
   22658:	mls	r3, r1, r3, r2
   2265c:	cmp	r3, #0
   22660:	bne	22854 <GetDataSlab+0x6750>
   22664:	ldr	r2, [lr, #4]
   22668:	str	r3, [r5, #4]
   2266c:	ldr	r1, [sp, #196]	; 0xc4
   22670:	sdiv	r3, ip, r2
   22674:	ldr	r1, [r1, r4, lsl #2]
   22678:	mls	r3, r2, r3, ip
   2267c:	cmp	r3, #0
   22680:	subne	r3, r2, r3
   22684:	ldrne	r2, [lr]
   22688:	mlane	r3, r1, r2, r3
   2268c:	bne	226a0 <GetDataSlab+0x659c>
   22690:	cmp	r1, #0
   22694:	beq	226a8 <GetDataSlab+0x65a4>
   22698:	ldr	r3, [lr]
   2269c:	mul	r3, r3, r1
   226a0:	add	r0, r0, r3
   226a4:	add	ip, ip, r3
   226a8:	add	r4, r4, #1
   226ac:	add	lr, lr, #4
   226b0:	add	r5, r5, #4
   226b4:	b	22634 <GetDataSlab+0x6530>
   226b8:	ldr	r3, [sl, r2, lsl #2]
   226bc:	mov	r6, lr
   226c0:	sub	r3, r3, #1
   226c4:	str	r3, [r4, #4]
   226c8:	ldr	r3, [r5], #4
   226cc:	mov	r1, r5
   226d0:	str	r3, [lr, #4]
   226d4:	cmp	fp, r1
   226d8:	bne	22708 <GetDataSlab+0x6604>
   226dc:	ldr	r1, [sp, #196]	; 0xc4
   226e0:	add	lr, lr, #4
   226e4:	add	r4, r4, #4
   226e8:	ldr	r3, [sp, #204]	; 0xcc
   226ec:	ldr	r1, [r1, r2, lsl #2]
   226f0:	ldr	r3, [r3, r2, lsl #2]
   226f4:	add	r2, r2, #1
   226f8:	mul	r9, r3, r9
   226fc:	ldr	r3, [r6]
   22700:	mla	ip, r1, r3, ip
   22704:	b	225ac <GetDataSlab+0x64a8>
   22708:	str	r1, [sp, #16]
   2270c:	ldr	r3, [r1, #-4]!
   22710:	ldr	r0, [r4, #4]
   22714:	mul	r3, r3, r0
   22718:	ldr	r0, [lr, #4]
   2271c:	str	r3, [r4, #4]
   22720:	ldr	r3, [sp, #16]
   22724:	ldr	r3, [r3]
   22728:	mul	r3, r3, r0
   2272c:	str	r3, [lr, #4]
   22730:	b	226d4 <GetDataSlab+0x65d0>
   22734:	ldrb	lr, [r0, r2]
   22738:	add	r2, r2, #1
   2273c:	vmov	s15, lr
   22740:	vcvt.f32.u32	s15, s15
   22744:	vstmia	r1!, {s15}
   22748:	b	2278c <GetDataSlab+0x6688>
   2274c:	add	r3, sp, #152	; 0x98
   22750:	add	r3, r3, lr, lsl #2
   22754:	ldr	r3, [r3, #-120]	; 0xffffff88
   22758:	add	ip, ip, r3
   2275c:	add	r0, r0, r3
   22760:	add	r6, r6, r7
   22764:	cmp	r6, r9
   22768:	bge	1c230 <GetDataSlab+0x12c>
   2276c:	ldr	r2, [sp]
   22770:	ldr	r3, [sp, #196]	; 0xc4
   22774:	add	r1, r2, r6, lsl #2
   22778:	mov	r2, #0
   2277c:	ldr	r3, [r3]
   22780:	cmp	r3, #0
   22784:	addne	r0, r0, r3
   22788:	addne	ip, ip, r3
   2278c:	cmp	r2, r7
   22790:	blt	22734 <GetDataSlab+0x6630>
   22794:	ldr	r2, [sp, #8]
   22798:	add	r5, sp, #72	; 0x48
   2279c:	mov	lr, #1
   227a0:	ldr	r4, [sp, #12]
   227a4:	sub	r3, r2, r3
   227a8:	add	ip, ip, r3
   227ac:	add	r0, r0, r3
   227b0:	ldr	r3, [sp, #208]	; 0xd0
   227b4:	cmp	lr, r3
   227b8:	bge	22760 <GetDataSlab+0x665c>
   227bc:	ldr	r3, [r5, #4]
   227c0:	add	r2, r3, #1
   227c4:	ldr	r3, [sp, #204]	; 0xcc
   227c8:	str	r2, [r5, #4]
   227cc:	ldr	r1, [r3, lr, lsl #2]
   227d0:	sdiv	r3, r2, r1
   227d4:	mls	r3, r1, r3, r2
   227d8:	cmp	r3, #0
   227dc:	bne	2274c <GetDataSlab+0x6648>
   227e0:	ldr	r2, [r4, #4]
   227e4:	str	r3, [r5, #4]
   227e8:	ldr	r1, [sp, #196]	; 0xc4
   227ec:	sdiv	r3, ip, r2
   227f0:	ldr	r1, [r1, lr, lsl #2]
   227f4:	mls	r3, r2, r3, ip
   227f8:	cmp	r3, #0
   227fc:	ldrne	r8, [r4]
   22800:	subne	r3, r2, r3
   22804:	mlane	r3, r1, r8, r3
   22808:	bne	2281c <GetDataSlab+0x6718>
   2280c:	cmp	r1, #0
   22810:	beq	22824 <GetDataSlab+0x6720>
   22814:	ldr	r3, [r4]
   22818:	mul	r3, r3, r1
   2281c:	add	r0, r0, r3
   22820:	add	ip, ip, r3
   22824:	add	lr, lr, #1
   22828:	add	r4, r4, #4
   2282c:	add	r5, r5, #4
   22830:	b	227b0 <GetDataSlab+0x66ac>
   22834:	mov	r6, #0
   22838:	b	22764 <GetDataSlab+0x6660>
   2283c:	ldrb	r2, [r4], r8
   22840:	add	r3, r3, #1
   22844:	vmov	s15, r2
   22848:	vcvt.f32.u32	s15, s15
   2284c:	vstmia	lr!, {s15}
   22850:	b	22604 <GetDataSlab+0x6500>
   22854:	add	r3, sp, #152	; 0x98
   22858:	add	r3, r3, r4, lsl #2
   2285c:	ldr	r3, [r3, #-120]	; 0xffffff88
   22860:	add	ip, ip, r3
   22864:	add	r0, r0, r3
   22868:	add	r6, r6, r7
   2286c:	b	225d8 <GetDataSlab+0x64d4>
   22870:	cmp	r5, #12
   22874:	bne	22bc8 <GetDataSlab+0x6ac4>
   22878:	ldr	r4, [sl]
   2287c:	add	lr, sp, #32
   22880:	mov	r5, fp
   22884:	mov	r7, #0
   22888:	mov	r2, #1
   2288c:	sub	r3, r4, #1
   22890:	str	r3, [sp, #32]
   22894:	ldr	r3, [fp]
   22898:	str	r3, [sp, #16]
   2289c:	str	r3, [sp, #112]	; 0x70
   228a0:	ldr	r3, [sp, #204]	; 0xcc
   228a4:	ldr	r3, [r3]
   228a8:	str	r3, [sp, #8]
   228ac:	add	r3, sp, #112	; 0x70
   228b0:	mov	ip, r3
   228b4:	str	r3, [sp, #20]
   228b8:	ldr	r3, [sp, #8]
   228bc:	str	r3, [sp, #12]
   228c0:	ldr	r3, [sp, #208]	; 0xd0
   228c4:	cmp	r2, r3
   228c8:	blt	229fc <GetDataSlab+0x68f8>
   228cc:	ldr	r3, [sp, #4]
   228d0:	cmp	r4, #1
   228d4:	add	r6, r3, r7, lsl #3
   228d8:	beq	22b88 <GetDataSlab+0x6a84>
   228dc:	ldr	r3, [sp, #8]
   228e0:	lsl	fp, r4, #3
   228e4:	mov	sl, #0
   228e8:	mul	r3, r4, r3
   228ec:	str	r3, [sp, #4]
   228f0:	ldr	r3, [sp, #8]
   228f4:	bic	r3, r3, r3, asr #31
   228f8:	mul	r2, r3, r4
   228fc:	mul	r3, r3, fp
   22900:	str	r3, [sp, #24]
   22904:	str	r2, [sp, #28]
   22908:	ldr	r3, [sp, #12]
   2290c:	cmp	sl, r3
   22910:	bge	1c230 <GetDataSlab+0x12c>
   22914:	ldr	r3, [sp, #196]	; 0xc4
   22918:	mov	r4, #0
   2291c:	ldr	r8, [r3]
   22920:	ldr	r3, [sp]
   22924:	cmp	r8, #0
   22928:	addne	r6, r6, r8, lsl #3
   2292c:	addne	r7, r7, r8
   22930:	add	r9, r3, sl, lsl #2
   22934:	mov	r5, r6
   22938:	ldr	r3, [sp, #8]
   2293c:	cmp	r4, r3
   22940:	blt	22b90 <GetDataSlab+0x6a8c>
   22944:	ldr	r2, [sp, #4]
   22948:	add	lr, sp, #72	; 0x48
   2294c:	mov	ip, #1
   22950:	ldr	r3, [sp, #16]
   22954:	ldr	r0, [sp, #20]
   22958:	sub	r3, r3, r8
   2295c:	sub	r2, r3, r2
   22960:	ldr	r3, [sp, #28]
   22964:	add	r3, r7, r3
   22968:	add	r7, r3, r2
   2296c:	ldr	r3, [sp, #24]
   22970:	add	r3, r3, r2, lsl #3
   22974:	add	r6, r6, r3
   22978:	ldr	r3, [sp, #208]	; 0xd0
   2297c:	cmp	ip, r3
   22980:	bge	22bbc <GetDataSlab+0x6ab8>
   22984:	ldr	r3, [lr, #4]
   22988:	add	r2, r3, #1
   2298c:	ldr	r3, [sp, #204]	; 0xcc
   22990:	str	r2, [lr, #4]
   22994:	ldr	r1, [r3, ip, lsl #2]
   22998:	sdiv	r3, r2, r1
   2299c:	mls	r3, r1, r3, r2
   229a0:	cmp	r3, #0
   229a4:	bne	22ba8 <GetDataSlab+0x6aa4>
   229a8:	ldr	r2, [r0, #4]
   229ac:	str	r3, [lr, #4]
   229b0:	ldr	r1, [sp, #196]	; 0xc4
   229b4:	sdiv	r3, r7, r2
   229b8:	ldr	r1, [r1, ip, lsl #2]
   229bc:	mls	r3, r2, r3, r7
   229c0:	cmp	r3, #0
   229c4:	ldrne	r4, [r0]
   229c8:	subne	r3, r2, r3
   229cc:	mlane	r3, r1, r4, r3
   229d0:	bne	229e4 <GetDataSlab+0x68e0>
   229d4:	cmp	r1, #0
   229d8:	beq	229ec <GetDataSlab+0x68e8>
   229dc:	ldr	r3, [r0]
   229e0:	mul	r3, r3, r1
   229e4:	add	r6, r6, r3, lsl #3
   229e8:	add	r7, r7, r3
   229ec:	add	ip, ip, #1
   229f0:	add	r0, r0, #4
   229f4:	add	lr, lr, #4
   229f8:	b	22978 <GetDataSlab+0x6874>
   229fc:	ldr	r3, [sl, r2, lsl #2]
   22a00:	mov	r6, ip
   22a04:	sub	r3, r3, #1
   22a08:	str	r3, [lr, #4]
   22a0c:	ldr	r3, [r5], #4
   22a10:	mov	r1, r5
   22a14:	str	r3, [ip, #4]
   22a18:	cmp	fp, r1
   22a1c:	bne	22a54 <GetDataSlab+0x6950>
   22a20:	ldr	r1, [sp, #12]
   22a24:	add	ip, ip, #4
   22a28:	add	lr, lr, #4
   22a2c:	ldr	r3, [sp, #204]	; 0xcc
   22a30:	ldr	r3, [r3, r2, lsl #2]
   22a34:	mul	r3, r3, r1
   22a38:	ldr	r1, [sp, #196]	; 0xc4
   22a3c:	str	r3, [sp, #12]
   22a40:	ldr	r3, [r6]
   22a44:	ldr	r1, [r1, r2, lsl #2]
   22a48:	add	r2, r2, #1
   22a4c:	mla	r7, r1, r3, r7
   22a50:	b	228c0 <GetDataSlab+0x67bc>
   22a54:	mov	r0, r1
   22a58:	ldr	r3, [r1, #-4]!
   22a5c:	ldr	r8, [lr, #4]
   22a60:	mul	r3, r3, r8
   22a64:	ldr	r8, [ip, #4]
   22a68:	str	r3, [lr, #4]
   22a6c:	ldr	r3, [r0]
   22a70:	mul	r3, r3, r8
   22a74:	str	r3, [ip, #4]
   22a78:	b	22a18 <GetDataSlab+0x6914>
   22a7c:	ldrd	r0, [r9, #8]!
   22a80:	add	r5, r5, #1
   22a84:	bl	3e764 <__aeabi_l2f>
   22a88:	str	r0, [r8], #4
   22a8c:	b	22adc <GetDataSlab+0x69d8>
   22a90:	add	r3, sp, #152	; 0x98
   22a94:	add	r3, r3, r0, lsl #2
   22a98:	ldr	r3, [r3, #-120]	; 0xffffff88
   22a9c:	add	r6, r6, r3, lsl #3
   22aa0:	add	r7, r7, r3
   22aa4:	ldr	r3, [sp, #8]
   22aa8:	add	sl, sl, r3
   22aac:	ldr	r3, [sp, #12]
   22ab0:	cmp	sl, r3
   22ab4:	bge	1c230 <GetDataSlab+0x12c>
   22ab8:	ldr	r3, [sp, #196]	; 0xc4
   22abc:	mov	r5, #0
   22ac0:	ldr	r4, [r3]
   22ac4:	ldr	r3, [sp]
   22ac8:	cmp	r4, #0
   22acc:	addne	r6, r6, r4, lsl #3
   22ad0:	addne	r7, r7, r4
   22ad4:	add	r8, r3, sl, lsl #2
   22ad8:	sub	r9, r6, #8
   22adc:	ldr	r3, [sp, #8]
   22ae0:	cmp	r5, r3
   22ae4:	blt	22a7c <GetDataSlab+0x6978>
   22ae8:	ldr	r3, [sp, #16]
   22aec:	add	lr, sp, #72	; 0x48
   22af0:	mov	r0, #1
   22af4:	ldr	ip, [sp, #20]
   22af8:	sub	r3, r3, r4
   22afc:	add	r6, r6, r3, lsl #3
   22b00:	add	r7, r7, r3
   22b04:	ldr	r3, [sp, #208]	; 0xd0
   22b08:	cmp	r0, r3
   22b0c:	bge	22aa4 <GetDataSlab+0x69a0>
   22b10:	ldr	r3, [lr, #4]
   22b14:	add	r2, r3, #1
   22b18:	ldr	r3, [sp, #204]	; 0xcc
   22b1c:	str	r2, [lr, #4]
   22b20:	ldr	r1, [r3, r0, lsl #2]
   22b24:	sdiv	r3, r2, r1
   22b28:	mls	r3, r1, r3, r2
   22b2c:	cmp	r3, #0
   22b30:	bne	22a90 <GetDataSlab+0x698c>
   22b34:	ldr	r2, [ip, #4]
   22b38:	str	r3, [lr, #4]
   22b3c:	ldr	r1, [sp, #196]	; 0xc4
   22b40:	sdiv	r3, r7, r2
   22b44:	ldr	r1, [r1, r0, lsl #2]
   22b48:	mls	r3, r2, r3, r7
   22b4c:	cmp	r3, #0
   22b50:	ldrne	r4, [ip]
   22b54:	subne	r3, r2, r3
   22b58:	mlane	r3, r1, r4, r3
   22b5c:	bne	22b70 <GetDataSlab+0x6a6c>
   22b60:	cmp	r1, #0
   22b64:	beq	22b78 <GetDataSlab+0x6a74>
   22b68:	ldr	r3, [ip]
   22b6c:	mul	r3, r3, r1
   22b70:	add	r6, r6, r3, lsl #3
   22b74:	add	r7, r7, r3
   22b78:	add	r0, r0, #1
   22b7c:	add	ip, ip, #4
   22b80:	add	lr, lr, #4
   22b84:	b	22b04 <GetDataSlab+0x6a00>
   22b88:	mov	sl, #0
   22b8c:	b	22aac <GetDataSlab+0x69a8>
   22b90:	ldrd	r0, [r5]
   22b94:	add	r4, r4, #1
   22b98:	add	r5, r5, fp
   22b9c:	bl	3e764 <__aeabi_l2f>
   22ba0:	str	r0, [r9], #4
   22ba4:	b	22938 <GetDataSlab+0x6834>
   22ba8:	add	r3, sp, #152	; 0x98
   22bac:	add	r3, r3, ip, lsl #2
   22bb0:	ldr	r3, [r3, #-120]	; 0xffffff88
   22bb4:	add	r6, r6, r3, lsl #3
   22bb8:	add	r7, r7, r3
   22bbc:	ldr	r3, [sp, #8]
   22bc0:	add	sl, sl, r3
   22bc4:	b	22908 <GetDataSlab+0x6804>
   22bc8:	cmp	r5, #13
   22bcc:	bne	3236c <GetDataSlab+0x16268>
   22bd0:	ldr	r4, [sl]
   22bd4:	add	lr, sp, #32
   22bd8:	mov	r5, fp
   22bdc:	mov	r7, #0
   22be0:	mov	r2, #1
   22be4:	sub	r3, r4, #1
   22be8:	str	r3, [sp, #32]
   22bec:	ldr	r3, [fp]
   22bf0:	str	r3, [sp, #16]
   22bf4:	str	r3, [sp, #112]	; 0x70
   22bf8:	ldr	r3, [sp, #204]	; 0xcc
   22bfc:	ldr	r3, [r3]
   22c00:	str	r3, [sp, #8]
   22c04:	add	r3, sp, #112	; 0x70
   22c08:	mov	ip, r3
   22c0c:	str	r3, [sp, #20]
   22c10:	ldr	r3, [sp, #8]
   22c14:	str	r3, [sp, #12]
   22c18:	ldr	r3, [sp, #208]	; 0xd0
   22c1c:	cmp	r2, r3
   22c20:	blt	22d50 <GetDataSlab+0x6c4c>
   22c24:	ldr	r3, [sp, #4]
   22c28:	cmp	r4, #1
   22c2c:	add	r6, r3, r7, lsl #3
   22c30:	beq	22edc <GetDataSlab+0x6dd8>
   22c34:	ldr	r3, [sp, #8]
   22c38:	lsl	fp, r4, #3
   22c3c:	mov	sl, #0
   22c40:	mul	r3, r4, r3
   22c44:	str	r3, [sp, #4]
   22c48:	ldr	r3, [sp, #8]
   22c4c:	bic	r3, r3, r3, asr #31
   22c50:	mul	r2, r3, r4
   22c54:	mul	r3, r3, fp
   22c58:	strd	r2, [sp, #24]
   22c5c:	ldr	r3, [sp, #12]
   22c60:	cmp	sl, r3
   22c64:	bge	1c230 <GetDataSlab+0x12c>
   22c68:	ldr	r3, [sp, #196]	; 0xc4
   22c6c:	mov	r4, #0
   22c70:	ldr	r8, [r3]
   22c74:	ldr	r3, [sp]
   22c78:	cmp	r8, #0
   22c7c:	addne	r6, r6, r8, lsl #3
   22c80:	addne	r7, r7, r8
   22c84:	add	r9, r3, sl, lsl #2
   22c88:	mov	r5, r6
   22c8c:	ldr	r3, [sp, #8]
   22c90:	cmp	r4, r3
   22c94:	blt	22ee4 <GetDataSlab+0x6de0>
   22c98:	ldr	r2, [sp, #4]
   22c9c:	add	lr, sp, #72	; 0x48
   22ca0:	mov	ip, #1
   22ca4:	ldr	r3, [sp, #16]
   22ca8:	ldr	r0, [sp, #20]
   22cac:	sub	r3, r3, r8
   22cb0:	sub	r2, r3, r2
   22cb4:	ldr	r3, [sp, #24]
   22cb8:	add	r3, r7, r3
   22cbc:	add	r7, r3, r2
   22cc0:	ldr	r3, [sp, #28]
   22cc4:	add	r3, r3, r2, lsl #3
   22cc8:	add	r6, r6, r3
   22ccc:	ldr	r3, [sp, #208]	; 0xd0
   22cd0:	cmp	ip, r3
   22cd4:	bge	22f10 <GetDataSlab+0x6e0c>
   22cd8:	ldr	r3, [lr, #4]
   22cdc:	add	r2, r3, #1
   22ce0:	ldr	r3, [sp, #204]	; 0xcc
   22ce4:	str	r2, [lr, #4]
   22ce8:	ldr	r1, [r3, ip, lsl #2]
   22cec:	sdiv	r3, r2, r1
   22cf0:	mls	r3, r1, r3, r2
   22cf4:	cmp	r3, #0
   22cf8:	bne	22efc <GetDataSlab+0x6df8>
   22cfc:	ldr	r2, [r0, #4]
   22d00:	str	r3, [lr, #4]
   22d04:	ldr	r1, [sp, #196]	; 0xc4
   22d08:	sdiv	r3, r7, r2
   22d0c:	ldr	r1, [r1, ip, lsl #2]
   22d10:	mls	r3, r2, r3, r7
   22d14:	cmp	r3, #0
   22d18:	ldrne	r4, [r0]
   22d1c:	subne	r3, r2, r3
   22d20:	mlane	r3, r1, r4, r3
   22d24:	bne	22d38 <GetDataSlab+0x6c34>
   22d28:	cmp	r1, #0
   22d2c:	beq	22d40 <GetDataSlab+0x6c3c>
   22d30:	ldr	r3, [r0]
   22d34:	mul	r3, r3, r1
   22d38:	add	r6, r6, r3, lsl #3
   22d3c:	add	r7, r7, r3
   22d40:	add	ip, ip, #1
   22d44:	add	r0, r0, #4
   22d48:	add	lr, lr, #4
   22d4c:	b	22ccc <GetDataSlab+0x6bc8>
   22d50:	ldr	r3, [sl, r2, lsl #2]
   22d54:	mov	r6, ip
   22d58:	sub	r3, r3, #1
   22d5c:	str	r3, [lr, #4]
   22d60:	ldr	r3, [r5], #4
   22d64:	mov	r1, r5
   22d68:	str	r3, [ip, #4]
   22d6c:	cmp	r1, fp
   22d70:	bne	22da8 <GetDataSlab+0x6ca4>
   22d74:	ldr	r1, [sp, #12]
   22d78:	add	ip, ip, #4
   22d7c:	add	lr, lr, #4
   22d80:	ldr	r3, [sp, #204]	; 0xcc
   22d84:	ldr	r3, [r3, r2, lsl #2]
   22d88:	mul	r3, r3, r1
   22d8c:	ldr	r1, [sp, #196]	; 0xc4
   22d90:	str	r3, [sp, #12]
   22d94:	ldr	r3, [r6]
   22d98:	ldr	r1, [r1, r2, lsl #2]
   22d9c:	add	r2, r2, #1
   22da0:	mla	r7, r1, r3, r7
   22da4:	b	22c18 <GetDataSlab+0x6b14>
   22da8:	mov	r0, r1
   22dac:	ldr	r3, [r1, #-4]!
   22db0:	ldr	r8, [lr, #4]
   22db4:	mul	r3, r3, r8
   22db8:	ldr	r8, [ip, #4]
   22dbc:	str	r3, [lr, #4]
   22dc0:	ldr	r3, [r0]
   22dc4:	mul	r3, r3, r8
   22dc8:	str	r3, [ip, #4]
   22dcc:	b	22d6c <GetDataSlab+0x6c68>
   22dd0:	ldrd	r0, [r8, #8]!
   22dd4:	add	r5, r5, #1
   22dd8:	bl	3e754 <__aeabi_ul2f>
   22ddc:	str	r0, [r9], #4
   22de0:	b	22e30 <GetDataSlab+0x6d2c>
   22de4:	add	r3, sp, #152	; 0x98
   22de8:	add	r3, r3, r0, lsl #2
   22dec:	ldr	r3, [r3, #-120]	; 0xffffff88
   22df0:	add	r6, r6, r3, lsl #3
   22df4:	add	r7, r7, r3
   22df8:	ldr	r3, [sp, #8]
   22dfc:	add	sl, sl, r3
   22e00:	ldr	r3, [sp, #12]
   22e04:	cmp	sl, r3
   22e08:	bge	1c230 <GetDataSlab+0x12c>
   22e0c:	ldr	r3, [sp, #196]	; 0xc4
   22e10:	mov	r5, #0
   22e14:	ldr	r4, [r3]
   22e18:	ldr	r3, [sp]
   22e1c:	cmp	r4, #0
   22e20:	addne	r6, r6, r4, lsl #3
   22e24:	addne	r7, r7, r4
   22e28:	add	r9, r3, sl, lsl #2
   22e2c:	sub	r8, r6, #8
   22e30:	ldr	r3, [sp, #8]
   22e34:	cmp	r5, r3
   22e38:	blt	22dd0 <GetDataSlab+0x6ccc>
   22e3c:	ldr	r3, [sp, #16]
   22e40:	add	lr, sp, #72	; 0x48
   22e44:	mov	r0, #1
   22e48:	ldr	ip, [sp, #20]
   22e4c:	sub	r3, r3, r4
   22e50:	add	r6, r6, r3, lsl #3
   22e54:	add	r7, r7, r3
   22e58:	ldr	r3, [sp, #208]	; 0xd0
   22e5c:	cmp	r0, r3
   22e60:	bge	22df8 <GetDataSlab+0x6cf4>
   22e64:	ldr	r3, [lr, #4]
   22e68:	add	r2, r3, #1
   22e6c:	ldr	r3, [sp, #204]	; 0xcc
   22e70:	str	r2, [lr, #4]
   22e74:	ldr	r1, [r3, r0, lsl #2]
   22e78:	sdiv	r3, r2, r1
   22e7c:	mls	r3, r1, r3, r2
   22e80:	cmp	r3, #0
   22e84:	bne	22de4 <GetDataSlab+0x6ce0>
   22e88:	ldr	r2, [ip, #4]
   22e8c:	str	r3, [lr, #4]
   22e90:	ldr	r1, [sp, #196]	; 0xc4
   22e94:	sdiv	r3, r7, r2
   22e98:	ldr	r1, [r1, r0, lsl #2]
   22e9c:	mls	r3, r2, r3, r7
   22ea0:	cmp	r3, #0
   22ea4:	ldrne	r4, [ip]
   22ea8:	subne	r3, r2, r3
   22eac:	mlane	r3, r1, r4, r3
   22eb0:	bne	22ec4 <GetDataSlab+0x6dc0>
   22eb4:	cmp	r1, #0
   22eb8:	beq	22ecc <GetDataSlab+0x6dc8>
   22ebc:	ldr	r3, [ip]
   22ec0:	mul	r3, r3, r1
   22ec4:	add	r6, r6, r3, lsl #3
   22ec8:	add	r7, r7, r3
   22ecc:	add	r0, r0, #1
   22ed0:	add	ip, ip, #4
   22ed4:	add	lr, lr, #4
   22ed8:	b	22e58 <GetDataSlab+0x6d54>
   22edc:	mov	sl, #0
   22ee0:	b	22e00 <GetDataSlab+0x6cfc>
   22ee4:	ldrd	r0, [r5]
   22ee8:	add	r4, r4, #1
   22eec:	add	r5, r5, fp
   22ef0:	bl	3e754 <__aeabi_ul2f>
   22ef4:	str	r0, [r9], #4
   22ef8:	b	22c8c <GetDataSlab+0x6b88>
   22efc:	add	r3, sp, #152	; 0x98
   22f00:	add	r3, r3, ip, lsl #2
   22f04:	ldr	r3, [r3, #-120]	; 0xffffff88
   22f08:	add	r6, r6, r3, lsl #3
   22f0c:	add	r7, r7, r3
   22f10:	ldr	r3, [sp, #8]
   22f14:	add	sl, sl, r3
   22f18:	b	22c5c <GetDataSlab+0x6b58>
   22f1c:	sub	r3, r5, #1
   22f20:	cmp	r3, #8
   22f24:	addls	pc, pc, r3, lsl #2
   22f28:	b	24834 <GetDataSlab+0x8730>
   22f2c:	b	2423c <GetDataSlab+0x8138>
   22f30:	b	24538 <GetDataSlab+0x8434>
   22f34:	b	23c1c <GetDataSlab+0x7b18>
   22f38:	b	23f2c <GetDataSlab+0x7e28>
   22f3c:	b	235e8 <GetDataSlab+0x74e4>
   22f40:	b	238fc <GetDataSlab+0x77f8>
   22f44:	b	2329c <GetDataSlab+0x7198>
   22f48:	b	24834 <GetDataSlab+0x8730>
   22f4c:	b	22f50 <GetDataSlab+0x6e4c>
   22f50:	ldr	r4, [sl]
   22f54:	add	lr, sp, #32
   22f58:	mov	r5, fp
   22f5c:	mov	r7, #0
   22f60:	mov	r2, #1
   22f64:	sub	r3, r4, #1
   22f68:	str	r3, [sp, #32]
   22f6c:	ldr	r3, [fp]
   22f70:	str	r3, [sp, #16]
   22f74:	str	r3, [sp, #112]	; 0x70
   22f78:	ldr	r3, [sp, #204]	; 0xcc
   22f7c:	ldr	r3, [r3]
   22f80:	str	r3, [sp, #8]
   22f84:	add	r3, sp, #112	; 0x70
   22f88:	mov	ip, r3
   22f8c:	str	r3, [sp, #20]
   22f90:	ldr	r3, [sp, #8]
   22f94:	str	r3, [sp, #12]
   22f98:	ldr	r3, [sp, #208]	; 0xd0
   22f9c:	cmp	r2, r3
   22fa0:	blt	230d0 <GetDataSlab+0x6fcc>
   22fa4:	ldr	r3, [sp, #4]
   22fa8:	cmp	r4, #1
   22fac:	add	r6, r3, r7, lsl #3
   22fb0:	beq	2325c <GetDataSlab+0x7158>
   22fb4:	ldr	r3, [sp, #8]
   22fb8:	lsl	fp, r4, #3
   22fbc:	mov	sl, #0
   22fc0:	mul	r3, r4, r3
   22fc4:	str	r3, [sp, #4]
   22fc8:	ldr	r3, [sp, #8]
   22fcc:	bic	r3, r3, r3, asr #31
   22fd0:	mul	r2, r4, r3
   22fd4:	mul	r3, r3, fp
   22fd8:	strd	r2, [sp, #24]
   22fdc:	ldr	r3, [sp, #12]
   22fe0:	cmp	sl, r3
   22fe4:	bge	1c230 <GetDataSlab+0x12c>
   22fe8:	ldr	r3, [sp, #196]	; 0xc4
   22fec:	mov	r4, #0
   22ff0:	ldr	r8, [r3]
   22ff4:	ldr	r3, [sp]
   22ff8:	cmp	r8, #0
   22ffc:	addne	r6, r6, r8, lsl #3
   23000:	addne	r7, r7, r8
   23004:	add	r9, r3, sl, lsl #3
   23008:	mov	r5, r6
   2300c:	ldr	r3, [sp, #8]
   23010:	cmp	r4, r3
   23014:	blt	23264 <GetDataSlab+0x7160>
   23018:	ldr	r2, [sp, #4]
   2301c:	add	lr, sp, #72	; 0x48
   23020:	mov	ip, #1
   23024:	ldr	r3, [sp, #16]
   23028:	ldr	r0, [sp, #20]
   2302c:	sub	r3, r3, r8
   23030:	sub	r2, r3, r2
   23034:	ldr	r3, [sp, #24]
   23038:	add	r3, r7, r3
   2303c:	add	r7, r3, r2
   23040:	ldr	r3, [sp, #28]
   23044:	add	r3, r3, r2, lsl #3
   23048:	add	r6, r6, r3
   2304c:	ldr	r3, [sp, #208]	; 0xd0
   23050:	cmp	ip, r3
   23054:	bge	23290 <GetDataSlab+0x718c>
   23058:	ldr	r3, [lr, #4]
   2305c:	add	r2, r3, #1
   23060:	ldr	r3, [sp, #204]	; 0xcc
   23064:	str	r2, [lr, #4]
   23068:	ldr	r1, [r3, ip, lsl #2]
   2306c:	sdiv	r3, r2, r1
   23070:	mls	r3, r1, r3, r2
   23074:	cmp	r3, #0
   23078:	bne	2327c <GetDataSlab+0x7178>
   2307c:	ldr	r2, [r0, #4]
   23080:	str	r3, [lr, #4]
   23084:	ldr	r1, [sp, #196]	; 0xc4
   23088:	sdiv	r3, r7, r2
   2308c:	ldr	r1, [r1, ip, lsl #2]
   23090:	mls	r3, r2, r3, r7
   23094:	cmp	r3, #0
   23098:	ldrne	r4, [r0]
   2309c:	subne	r3, r2, r3
   230a0:	mlane	r3, r1, r4, r3
   230a4:	bne	230b8 <GetDataSlab+0x6fb4>
   230a8:	cmp	r1, #0
   230ac:	beq	230c0 <GetDataSlab+0x6fbc>
   230b0:	ldr	r3, [r0]
   230b4:	mul	r3, r3, r1
   230b8:	add	r6, r6, r3, lsl #3
   230bc:	add	r7, r7, r3
   230c0:	add	ip, ip, #1
   230c4:	add	r0, r0, #4
   230c8:	add	lr, lr, #4
   230cc:	b	2304c <GetDataSlab+0x6f48>
   230d0:	ldr	r3, [sl, r2, lsl #2]
   230d4:	mov	r6, ip
   230d8:	sub	r3, r3, #1
   230dc:	str	r3, [lr, #4]
   230e0:	ldr	r3, [r5], #4
   230e4:	mov	r1, r5
   230e8:	str	r3, [ip, #4]
   230ec:	cmp	r1, fp
   230f0:	bne	23128 <GetDataSlab+0x7024>
   230f4:	ldr	r1, [sp, #12]
   230f8:	add	ip, ip, #4
   230fc:	add	lr, lr, #4
   23100:	ldr	r3, [sp, #204]	; 0xcc
   23104:	ldr	r3, [r3, r2, lsl #2]
   23108:	mul	r3, r3, r1
   2310c:	ldr	r1, [sp, #196]	; 0xc4
   23110:	str	r3, [sp, #12]
   23114:	ldr	r3, [r6]
   23118:	ldr	r1, [r1, r2, lsl #2]
   2311c:	add	r2, r2, #1
   23120:	mla	r7, r1, r3, r7
   23124:	b	22f98 <GetDataSlab+0x6e94>
   23128:	mov	r0, r1
   2312c:	ldr	r3, [r1, #-4]!
   23130:	ldr	r8, [lr, #4]
   23134:	mul	r3, r3, r8
   23138:	ldr	r8, [ip, #4]
   2313c:	str	r3, [lr, #4]
   23140:	ldr	r3, [r0]
   23144:	mul	r3, r3, r8
   23148:	str	r3, [ip, #4]
   2314c:	b	230ec <GetDataSlab+0x6fe8>
   23150:	ldrd	r0, [r8], #8
   23154:	add	r5, r5, #1
   23158:	bl	3e80c <__aeabi_d2lz>
   2315c:	strd	r0, [r9], #8
   23160:	b	231b0 <GetDataSlab+0x70ac>
   23164:	add	r3, sp, #152	; 0x98
   23168:	add	r3, r3, r0, lsl #2
   2316c:	ldr	r3, [r3, #-120]	; 0xffffff88
   23170:	add	r6, r6, r3, lsl #3
   23174:	add	r7, r7, r3
   23178:	ldr	r3, [sp, #8]
   2317c:	add	sl, sl, r3
   23180:	ldr	r3, [sp, #12]
   23184:	cmp	sl, r3
   23188:	bge	1c230 <GetDataSlab+0x12c>
   2318c:	ldr	r3, [sp, #196]	; 0xc4
   23190:	mov	r5, #0
   23194:	ldr	r4, [r3]
   23198:	ldr	r3, [sp]
   2319c:	cmp	r4, #0
   231a0:	addne	r6, r6, r4, lsl #3
   231a4:	addne	r7, r7, r4
   231a8:	add	r9, r3, sl, lsl #3
   231ac:	mov	r8, r6
   231b0:	ldr	r3, [sp, #8]
   231b4:	cmp	r5, r3
   231b8:	blt	23150 <GetDataSlab+0x704c>
   231bc:	ldr	r3, [sp, #16]
   231c0:	add	lr, sp, #72	; 0x48
   231c4:	mov	r0, #1
   231c8:	ldr	ip, [sp, #20]
   231cc:	sub	r3, r3, r4
   231d0:	add	r6, r6, r3, lsl #3
   231d4:	add	r7, r7, r3
   231d8:	ldr	r3, [sp, #208]	; 0xd0
   231dc:	cmp	r0, r3
   231e0:	bge	23178 <GetDataSlab+0x7074>
   231e4:	ldr	r3, [lr, #4]
   231e8:	add	r2, r3, #1
   231ec:	ldr	r3, [sp, #204]	; 0xcc
   231f0:	str	r2, [lr, #4]
   231f4:	ldr	r1, [r3, r0, lsl #2]
   231f8:	sdiv	r3, r2, r1
   231fc:	mls	r3, r1, r3, r2
   23200:	cmp	r3, #0
   23204:	bne	23164 <GetDataSlab+0x7060>
   23208:	ldr	r2, [ip, #4]
   2320c:	str	r3, [lr, #4]
   23210:	ldr	r1, [sp, #196]	; 0xc4
   23214:	sdiv	r3, r7, r2
   23218:	ldr	r1, [r1, r0, lsl #2]
   2321c:	mls	r3, r2, r3, r7
   23220:	cmp	r3, #0
   23224:	ldrne	r4, [ip]
   23228:	subne	r3, r2, r3
   2322c:	mlane	r3, r1, r4, r3
   23230:	bne	23244 <GetDataSlab+0x7140>
   23234:	cmp	r1, #0
   23238:	beq	2324c <GetDataSlab+0x7148>
   2323c:	ldr	r3, [ip]
   23240:	mul	r3, r3, r1
   23244:	add	r6, r6, r3, lsl #3
   23248:	add	r7, r7, r3
   2324c:	add	r0, r0, #1
   23250:	add	ip, ip, #4
   23254:	add	lr, lr, #4
   23258:	b	231d8 <GetDataSlab+0x70d4>
   2325c:	mov	sl, #0
   23260:	b	23180 <GetDataSlab+0x707c>
   23264:	ldrd	r0, [r5]
   23268:	add	r4, r4, #1
   2326c:	add	r5, r5, fp
   23270:	bl	3e80c <__aeabi_d2lz>
   23274:	strd	r0, [r9], #8
   23278:	b	2300c <GetDataSlab+0x6f08>
   2327c:	add	r3, sp, #152	; 0x98
   23280:	add	r3, r3, ip, lsl #2
   23284:	ldr	r3, [r3, #-120]	; 0xffffff88
   23288:	add	r6, r6, r3, lsl #3
   2328c:	add	r7, r7, r3
   23290:	ldr	r3, [sp, #8]
   23294:	add	sl, sl, r3
   23298:	b	22fdc <GetDataSlab+0x6ed8>
   2329c:	ldr	r4, [sl]
   232a0:	add	lr, sp, #32
   232a4:	mov	r5, fp
   232a8:	mov	r7, #0
   232ac:	mov	r2, #1
   232b0:	sub	r3, r4, #1
   232b4:	str	r3, [sp, #32]
   232b8:	ldr	r3, [fp]
   232bc:	str	r3, [sp, #16]
   232c0:	str	r3, [sp, #112]	; 0x70
   232c4:	ldr	r3, [sp, #204]	; 0xcc
   232c8:	ldr	r3, [r3]
   232cc:	str	r3, [sp, #8]
   232d0:	add	r3, sp, #112	; 0x70
   232d4:	mov	ip, r3
   232d8:	str	r3, [sp, #20]
   232dc:	ldr	r3, [sp, #8]
   232e0:	str	r3, [sp, #12]
   232e4:	ldr	r3, [sp, #208]	; 0xd0
   232e8:	cmp	r2, r3
   232ec:	blt	2341c <GetDataSlab+0x7318>
   232f0:	ldr	r3, [sp, #4]
   232f4:	cmp	r4, #1
   232f8:	add	r6, r3, r7, lsl #2
   232fc:	beq	235a8 <GetDataSlab+0x74a4>
   23300:	ldr	r3, [sp, #8]
   23304:	lsl	fp, r4, #2
   23308:	mov	sl, #0
   2330c:	mul	r3, r4, r3
   23310:	str	r3, [sp, #4]
   23314:	ldr	r3, [sp, #8]
   23318:	bic	r3, r3, r3, asr #31
   2331c:	mul	r2, r4, r3
   23320:	mul	r3, r3, fp
   23324:	strd	r2, [sp, #24]
   23328:	ldr	r3, [sp, #12]
   2332c:	cmp	sl, r3
   23330:	bge	1c230 <GetDataSlab+0x12c>
   23334:	ldr	r3, [sp, #196]	; 0xc4
   23338:	mov	r4, #0
   2333c:	ldr	r8, [r3]
   23340:	ldr	r3, [sp]
   23344:	cmp	r8, #0
   23348:	addne	r6, r6, r8, lsl #2
   2334c:	addne	r7, r7, r8
   23350:	add	r9, r3, sl, lsl #3
   23354:	mov	r5, r6
   23358:	ldr	r3, [sp, #8]
   2335c:	cmp	r4, r3
   23360:	blt	235b0 <GetDataSlab+0x74ac>
   23364:	ldr	r2, [sp, #4]
   23368:	add	lr, sp, #72	; 0x48
   2336c:	mov	ip, #1
   23370:	ldr	r3, [sp, #16]
   23374:	ldr	r0, [sp, #20]
   23378:	sub	r3, r3, r8
   2337c:	sub	r2, r3, r2
   23380:	ldr	r3, [sp, #24]
   23384:	add	r3, r7, r3
   23388:	add	r7, r3, r2
   2338c:	ldr	r3, [sp, #28]
   23390:	add	r3, r3, r2, lsl #2
   23394:	add	r6, r6, r3
   23398:	ldr	r3, [sp, #208]	; 0xd0
   2339c:	cmp	ip, r3
   233a0:	bge	235dc <GetDataSlab+0x74d8>
   233a4:	ldr	r3, [lr, #4]
   233a8:	add	r2, r3, #1
   233ac:	ldr	r3, [sp, #204]	; 0xcc
   233b0:	str	r2, [lr, #4]
   233b4:	ldr	r1, [r3, ip, lsl #2]
   233b8:	sdiv	r3, r2, r1
   233bc:	mls	r3, r1, r3, r2
   233c0:	cmp	r3, #0
   233c4:	bne	235c8 <GetDataSlab+0x74c4>
   233c8:	ldr	r2, [r0, #4]
   233cc:	str	r3, [lr, #4]
   233d0:	ldr	r1, [sp, #196]	; 0xc4
   233d4:	sdiv	r3, r7, r2
   233d8:	ldr	r1, [r1, ip, lsl #2]
   233dc:	mls	r3, r2, r3, r7
   233e0:	cmp	r3, #0
   233e4:	ldrne	r4, [r0]
   233e8:	subne	r3, r2, r3
   233ec:	mlane	r3, r1, r4, r3
   233f0:	bne	23404 <GetDataSlab+0x7300>
   233f4:	cmp	r1, #0
   233f8:	beq	2340c <GetDataSlab+0x7308>
   233fc:	ldr	r3, [r0]
   23400:	mul	r3, r3, r1
   23404:	add	r6, r6, r3, lsl #2
   23408:	add	r7, r7, r3
   2340c:	add	ip, ip, #1
   23410:	add	r0, r0, #4
   23414:	add	lr, lr, #4
   23418:	b	23398 <GetDataSlab+0x7294>
   2341c:	ldr	r3, [sl, r2, lsl #2]
   23420:	mov	r6, ip
   23424:	sub	r3, r3, #1
   23428:	str	r3, [lr, #4]
   2342c:	ldr	r3, [r5], #4
   23430:	mov	r1, r5
   23434:	str	r3, [ip, #4]
   23438:	cmp	r1, fp
   2343c:	bne	23474 <GetDataSlab+0x7370>
   23440:	ldr	r1, [sp, #12]
   23444:	add	ip, ip, #4
   23448:	add	lr, lr, #4
   2344c:	ldr	r3, [sp, #204]	; 0xcc
   23450:	ldr	r3, [r3, r2, lsl #2]
   23454:	mul	r3, r3, r1
   23458:	ldr	r1, [sp, #196]	; 0xc4
   2345c:	str	r3, [sp, #12]
   23460:	ldr	r3, [r6]
   23464:	ldr	r1, [r1, r2, lsl #2]
   23468:	add	r2, r2, #1
   2346c:	mla	r7, r1, r3, r7
   23470:	b	232e4 <GetDataSlab+0x71e0>
   23474:	mov	r0, r1
   23478:	ldr	r3, [r1, #-4]!
   2347c:	ldr	r8, [lr, #4]
   23480:	mul	r3, r3, r8
   23484:	ldr	r8, [ip, #4]
   23488:	str	r3, [lr, #4]
   2348c:	ldr	r3, [r0]
   23490:	mul	r3, r3, r8
   23494:	str	r3, [ip, #4]
   23498:	b	23438 <GetDataSlab+0x7334>
   2349c:	ldr	r0, [r8], #4
   234a0:	add	r5, r5, #1
   234a4:	bl	3e7e0 <__aeabi_f2lz>
   234a8:	strd	r0, [r9], #8
   234ac:	b	234fc <GetDataSlab+0x73f8>
   234b0:	add	r3, sp, #152	; 0x98
   234b4:	add	r3, r3, r0, lsl #2
   234b8:	ldr	r3, [r3, #-120]	; 0xffffff88
   234bc:	add	r6, r6, r3, lsl #2
   234c0:	add	r7, r7, r3
   234c4:	ldr	r3, [sp, #8]
   234c8:	add	sl, sl, r3
   234cc:	ldr	r3, [sp, #12]
   234d0:	cmp	sl, r3
   234d4:	bge	1c230 <GetDataSlab+0x12c>
   234d8:	ldr	r3, [sp, #196]	; 0xc4
   234dc:	mov	r5, #0
   234e0:	ldr	r4, [r3]
   234e4:	ldr	r3, [sp]
   234e8:	cmp	r4, #0
   234ec:	addne	r6, r6, r4, lsl #2
   234f0:	addne	r7, r7, r4
   234f4:	add	r9, r3, sl, lsl #3
   234f8:	mov	r8, r6
   234fc:	ldr	r3, [sp, #8]
   23500:	cmp	r5, r3
   23504:	blt	2349c <GetDataSlab+0x7398>
   23508:	ldr	r3, [sp, #16]
   2350c:	add	lr, sp, #72	; 0x48
   23510:	mov	r0, #1
   23514:	ldr	ip, [sp, #20]
   23518:	sub	r3, r3, r4
   2351c:	add	r6, r6, r3, lsl #2
   23520:	add	r7, r7, r3
   23524:	ldr	r3, [sp, #208]	; 0xd0
   23528:	cmp	r0, r3
   2352c:	bge	234c4 <GetDataSlab+0x73c0>
   23530:	ldr	r3, [lr, #4]
   23534:	add	r2, r3, #1
   23538:	ldr	r3, [sp, #204]	; 0xcc
   2353c:	str	r2, [lr, #4]
   23540:	ldr	r1, [r3, r0, lsl #2]
   23544:	sdiv	r3, r2, r1
   23548:	mls	r3, r1, r3, r2
   2354c:	cmp	r3, #0
   23550:	bne	234b0 <GetDataSlab+0x73ac>
   23554:	ldr	r2, [ip, #4]
   23558:	str	r3, [lr, #4]
   2355c:	ldr	r1, [sp, #196]	; 0xc4
   23560:	sdiv	r3, r7, r2
   23564:	ldr	r1, [r1, r0, lsl #2]
   23568:	mls	r3, r2, r3, r7
   2356c:	cmp	r3, #0
   23570:	ldrne	r4, [ip]
   23574:	subne	r3, r2, r3
   23578:	mlane	r3, r1, r4, r3
   2357c:	bne	23590 <GetDataSlab+0x748c>
   23580:	cmp	r1, #0
   23584:	beq	23598 <GetDataSlab+0x7494>
   23588:	ldr	r3, [ip]
   2358c:	mul	r3, r3, r1
   23590:	add	r6, r6, r3, lsl #2
   23594:	add	r7, r7, r3
   23598:	add	r0, r0, #1
   2359c:	add	ip, ip, #4
   235a0:	add	lr, lr, #4
   235a4:	b	23524 <GetDataSlab+0x7420>
   235a8:	mov	sl, #0
   235ac:	b	234cc <GetDataSlab+0x73c8>
   235b0:	ldr	r0, [r5]
   235b4:	add	r4, r4, #1
   235b8:	add	r5, r5, fp
   235bc:	bl	3e7e0 <__aeabi_f2lz>
   235c0:	strd	r0, [r9], #8
   235c4:	b	23358 <GetDataSlab+0x7254>
   235c8:	add	r3, sp, #152	; 0x98
   235cc:	add	r3, r3, ip, lsl #2
   235d0:	ldr	r3, [r3, #-120]	; 0xffffff88
   235d4:	add	r6, r6, r3, lsl #2
   235d8:	add	r7, r7, r3
   235dc:	ldr	r3, [sp, #8]
   235e0:	add	sl, sl, r3
   235e4:	b	23328 <GetDataSlab+0x7224>
   235e8:	ldr	r5, [sl]
   235ec:	add	lr, sp, #32
   235f0:	mov	r6, fp
   235f4:	mov	r4, #0
   235f8:	mov	r2, #1
   235fc:	sub	r3, r5, #1
   23600:	str	r3, [sp, #32]
   23604:	ldr	r3, [fp]
   23608:	str	r3, [sp, #8]
   2360c:	str	r3, [sp, #112]	; 0x70
   23610:	ldr	r3, [sp, #204]	; 0xcc
   23614:	ldr	r7, [r3]
   23618:	add	r3, sp, #112	; 0x70
   2361c:	mov	ip, r3
   23620:	str	r3, [sp, #12]
   23624:	mov	r9, r7
   23628:	ldr	r3, [sp, #208]	; 0xd0
   2362c:	cmp	r2, r3
   23630:	blt	23744 <GetDataSlab+0x7640>
   23634:	ldr	r3, [sp, #4]
   23638:	cmp	r5, #1
   2363c:	add	lr, r3, r4, lsl #2
   23640:	beq	238c0 <GetDataSlab+0x77bc>
   23644:	bic	r3, r7, r7, asr #31
   23648:	mov	r6, #0
   2364c:	lsl	r8, r5, #2
   23650:	mul	sl, r5, r7
   23654:	mul	fp, r5, r3
   23658:	mul	r3, r3, r8
   2365c:	str	r3, [sp, #4]
   23660:	cmp	r6, r9
   23664:	bge	1c230 <GetDataSlab+0x12c>
   23668:	ldr	r3, [sp, #196]	; 0xc4
   2366c:	mov	r1, #0
   23670:	ldr	r0, [r3]
   23674:	ldr	r3, [sp]
   23678:	cmp	r0, #0
   2367c:	addne	lr, lr, r0, lsl #2
   23680:	addne	r4, r4, r0
   23684:	add	ip, r3, r6, lsl #3
   23688:	mov	r5, lr
   2368c:	cmp	r1, r7
   23690:	blt	238c8 <GetDataSlab+0x77c4>
   23694:	ldr	r3, [sp, #8]
   23698:	add	r5, sp, #72	; 0x48
   2369c:	mov	ip, #1
   236a0:	sub	r3, r3, r0
   236a4:	ldr	r0, [sp, #12]
   236a8:	sub	r2, r3, sl
   236ac:	add	r3, r4, fp
   236b0:	add	r4, r3, r2
   236b4:	ldr	r3, [sp, #4]
   236b8:	add	r3, r3, r2, lsl #2
   236bc:	add	lr, lr, r3
   236c0:	ldr	r3, [sp, #208]	; 0xd0
   236c4:	cmp	ip, r3
   236c8:	bge	238f4 <GetDataSlab+0x77f0>
   236cc:	ldr	r3, [r5, #4]
   236d0:	add	r2, r3, #1
   236d4:	ldr	r3, [sp, #204]	; 0xcc
   236d8:	str	r2, [r5, #4]
   236dc:	ldr	r1, [r3, ip, lsl #2]
   236e0:	sdiv	r3, r2, r1
   236e4:	mls	r3, r1, r3, r2
   236e8:	cmp	r3, #0
   236ec:	bne	238e0 <GetDataSlab+0x77dc>
   236f0:	ldr	r2, [r0, #4]
   236f4:	str	r3, [r5, #4]
   236f8:	ldr	r1, [sp, #196]	; 0xc4
   236fc:	sdiv	r3, r4, r2
   23700:	ldr	r1, [r1, ip, lsl #2]
   23704:	mls	r3, r2, r3, r4
   23708:	cmp	r3, #0
   2370c:	subne	r3, r2, r3
   23710:	ldrne	r2, [r0]
   23714:	mlane	r3, r1, r2, r3
   23718:	bne	2372c <GetDataSlab+0x7628>
   2371c:	cmp	r1, #0
   23720:	beq	23734 <GetDataSlab+0x7630>
   23724:	ldr	r3, [r0]
   23728:	mul	r3, r3, r1
   2372c:	add	lr, lr, r3, lsl #2
   23730:	add	r4, r4, r3
   23734:	add	ip, ip, #1
   23738:	add	r0, r0, #4
   2373c:	add	r5, r5, #4
   23740:	b	236c0 <GetDataSlab+0x75bc>
   23744:	ldr	r3, [sl, r2, lsl #2]
   23748:	mov	r8, ip
   2374c:	sub	r3, r3, #1
   23750:	str	r3, [lr, #4]
   23754:	ldr	r3, [r6], #4
   23758:	mov	r1, r6
   2375c:	str	r3, [ip, #4]
   23760:	cmp	r1, fp
   23764:	bne	23794 <GetDataSlab+0x7690>
   23768:	ldr	r1, [sp, #196]	; 0xc4
   2376c:	add	ip, ip, #4
   23770:	add	lr, lr, #4
   23774:	ldr	r3, [sp, #204]	; 0xcc
   23778:	ldr	r1, [r1, r2, lsl #2]
   2377c:	ldr	r3, [r3, r2, lsl #2]
   23780:	add	r2, r2, #1
   23784:	mul	r9, r3, r9
   23788:	ldr	r3, [r8]
   2378c:	mla	r4, r1, r3, r4
   23790:	b	23628 <GetDataSlab+0x7524>
   23794:	str	r1, [sp, #16]
   23798:	ldr	r3, [r1, #-4]!
   2379c:	ldr	r0, [lr, #4]
   237a0:	mul	r3, r3, r0
   237a4:	ldr	r0, [ip, #4]
   237a8:	str	r3, [lr, #4]
   237ac:	ldr	r3, [sp, #16]
   237b0:	ldr	r3, [r3]
   237b4:	mul	r3, r3, r0
   237b8:	str	r3, [ip, #4]
   237bc:	b	23760 <GetDataSlab+0x765c>
   237c0:	ldr	r1, [lr, r3, lsl #2]
   237c4:	add	r3, r3, #1
   237c8:	mov	r0, r1
   237cc:	asr	r1, r1, #31
   237d0:	strd	r0, [ip], #8
   237d4:	b	23818 <GetDataSlab+0x7714>
   237d8:	add	r3, sp, #152	; 0x98
   237dc:	add	r3, r3, r0, lsl #2
   237e0:	ldr	r3, [r3, #-120]	; 0xffffff88
   237e4:	add	lr, lr, r3, lsl #2
   237e8:	add	r4, r4, r3
   237ec:	add	r6, r6, r7
   237f0:	cmp	r6, r9
   237f4:	bge	1c230 <GetDataSlab+0x12c>
   237f8:	ldr	r3, [sp, #196]	; 0xc4
   237fc:	ldr	r2, [r3]
   23800:	ldr	r3, [sp]
   23804:	cmp	r2, #0
   23808:	addne	lr, lr, r2, lsl #2
   2380c:	addne	r4, r4, r2
   23810:	add	ip, r3, r6, lsl #3
   23814:	mov	r3, #0
   23818:	cmp	r3, r7
   2381c:	blt	237c0 <GetDataSlab+0x76bc>
   23820:	ldr	r3, [sp, #8]
   23824:	add	r5, sp, #72	; 0x48
   23828:	mov	r0, #1
   2382c:	ldr	ip, [sp, #12]
   23830:	sub	r3, r3, r2
   23834:	add	lr, lr, r3, lsl #2
   23838:	add	r4, r4, r3
   2383c:	ldr	r3, [sp, #208]	; 0xd0
   23840:	cmp	r0, r3
   23844:	bge	237ec <GetDataSlab+0x76e8>
   23848:	ldr	r3, [r5, #4]
   2384c:	add	r2, r3, #1
   23850:	ldr	r3, [sp, #204]	; 0xcc
   23854:	str	r2, [r5, #4]
   23858:	ldr	r1, [r3, r0, lsl #2]
   2385c:	sdiv	r3, r2, r1
   23860:	mls	r3, r1, r3, r2
   23864:	cmp	r3, #0
   23868:	bne	237d8 <GetDataSlab+0x76d4>
   2386c:	ldr	r2, [ip, #4]
   23870:	str	r3, [r5, #4]
   23874:	ldr	r1, [sp, #196]	; 0xc4
   23878:	sdiv	r3, r4, r2
   2387c:	ldr	r1, [r1, r0, lsl #2]
   23880:	mls	r3, r2, r3, r4
   23884:	cmp	r3, #0
   23888:	ldrne	r8, [ip]
   2388c:	subne	r3, r2, r3
   23890:	mlane	r3, r1, r8, r3
   23894:	bne	238a8 <GetDataSlab+0x77a4>
   23898:	cmp	r1, #0
   2389c:	beq	238b0 <GetDataSlab+0x77ac>
   238a0:	ldr	r3, [ip]
   238a4:	mul	r3, r3, r1
   238a8:	add	lr, lr, r3, lsl #2
   238ac:	add	r4, r4, r3
   238b0:	add	r0, r0, #1
   238b4:	add	ip, ip, #4
   238b8:	add	r5, r5, #4
   238bc:	b	2383c <GetDataSlab+0x7738>
   238c0:	mov	r6, #0
   238c4:	b	237f0 <GetDataSlab+0x76ec>
   238c8:	ldr	r3, [r5], r8
   238cc:	add	r1, r1, #1
   238d0:	mov	r2, r3
   238d4:	asr	r3, r3, #31
   238d8:	strd	r2, [ip], #8
   238dc:	b	2368c <GetDataSlab+0x7588>
   238e0:	add	r3, sp, #152	; 0x98
   238e4:	add	r3, r3, ip, lsl #2
   238e8:	ldr	r3, [r3, #-120]	; 0xffffff88
   238ec:	add	lr, lr, r3, lsl #2
   238f0:	add	r4, r4, r3
   238f4:	add	r6, r6, r7
   238f8:	b	23660 <GetDataSlab+0x755c>
   238fc:	ldr	r5, [sl]
   23900:	add	r4, sp, #32
   23904:	mov	r6, fp
   23908:	mov	ip, #0
   2390c:	mov	r2, #1
   23910:	sub	r3, r5, #1
   23914:	str	r3, [sp, #32]
   23918:	ldr	r3, [fp]
   2391c:	str	r3, [sp, #8]
   23920:	str	r3, [sp, #112]	; 0x70
   23924:	ldr	r3, [sp, #204]	; 0xcc
   23928:	ldr	r8, [r3]
   2392c:	add	r3, sp, #112	; 0x70
   23930:	mov	lr, r3
   23934:	str	r3, [sp, #12]
   23938:	mov	r9, r8
   2393c:	ldr	r3, [sp, #208]	; 0xd0
   23940:	cmp	r2, r3
   23944:	blt	23a64 <GetDataSlab+0x7960>
   23948:	ldr	r3, [sp, #4]
   2394c:	cmp	r5, #1
   23950:	add	r0, r3, ip, lsl #2
   23954:	beq	23be0 <GetDataSlab+0x7adc>
   23958:	bic	r3, r8, r8, asr #31
   2395c:	mov	r6, #0
   23960:	lsl	r7, r5, #2
   23964:	mov	sl, r6
   23968:	mul	fp, r5, r8
   2396c:	mul	r2, r3, r5
   23970:	mul	r3, r3, r7
   23974:	str	r3, [sp, #4]
   23978:	str	r2, [sp, #16]
   2397c:	cmp	r6, r9
   23980:	bge	1c230 <GetDataSlab+0x12c>
   23984:	ldr	r3, [sp, #196]	; 0xc4
   23988:	mov	r2, #0
   2398c:	ldr	lr, [r3]
   23990:	ldr	r3, [sp]
   23994:	cmp	lr, #0
   23998:	addne	r0, r0, lr, lsl #2
   2399c:	addne	ip, ip, lr
   239a0:	add	r1, r3, r6, lsl #3
   239a4:	mov	r4, r0
   239a8:	cmp	r2, r8
   239ac:	blt	23bec <GetDataSlab+0x7ae8>
   239b0:	ldr	r3, [sp, #8]
   239b4:	add	r5, sp, #72	; 0x48
   239b8:	mov	r4, #1
   239bc:	sub	r3, r3, lr
   239c0:	ldr	lr, [sp, #12]
   239c4:	sub	r2, r3, fp
   239c8:	ldr	r3, [sp, #16]
   239cc:	add	r3, ip, r3
   239d0:	add	ip, r3, r2
   239d4:	ldr	r3, [sp, #4]
   239d8:	add	r3, r3, r2, lsl #2
   239dc:	add	r0, r0, r3
   239e0:	ldr	r3, [sp, #208]	; 0xd0
   239e4:	cmp	r4, r3
   239e8:	bge	23c14 <GetDataSlab+0x7b10>
   239ec:	ldr	r3, [r5, #4]
   239f0:	add	r2, r3, #1
   239f4:	ldr	r3, [sp, #204]	; 0xcc
   239f8:	str	r2, [r5, #4]
   239fc:	ldr	r1, [r3, r4, lsl #2]
   23a00:	sdiv	r3, r2, r1
   23a04:	mls	r3, r1, r3, r2
   23a08:	cmp	r3, #0
   23a0c:	bne	23c00 <GetDataSlab+0x7afc>
   23a10:	ldr	r2, [lr, #4]
   23a14:	str	r3, [r5, #4]
   23a18:	ldr	r1, [sp, #196]	; 0xc4
   23a1c:	sdiv	r3, ip, r2
   23a20:	ldr	r1, [r1, r4, lsl #2]
   23a24:	mls	r3, r2, r3, ip
   23a28:	cmp	r3, #0
   23a2c:	subne	r3, r2, r3
   23a30:	ldrne	r2, [lr]
   23a34:	mlane	r3, r1, r2, r3
   23a38:	bne	23a4c <GetDataSlab+0x7948>
   23a3c:	cmp	r1, #0
   23a40:	beq	23a54 <GetDataSlab+0x7950>
   23a44:	ldr	r3, [lr]
   23a48:	mul	r3, r3, r1
   23a4c:	add	r0, r0, r3, lsl #2
   23a50:	add	ip, ip, r3
   23a54:	add	r4, r4, #1
   23a58:	add	lr, lr, #4
   23a5c:	add	r5, r5, #4
   23a60:	b	239e0 <GetDataSlab+0x78dc>
   23a64:	ldr	r3, [sl, r2, lsl #2]
   23a68:	mov	r7, lr
   23a6c:	sub	r3, r3, #1
   23a70:	str	r3, [r4, #4]
   23a74:	ldr	r3, [r6], #4
   23a78:	mov	r1, r6
   23a7c:	str	r3, [lr, #4]
   23a80:	cmp	r1, fp
   23a84:	bne	23ab4 <GetDataSlab+0x79b0>
   23a88:	ldr	r1, [sp, #196]	; 0xc4
   23a8c:	add	lr, lr, #4
   23a90:	add	r4, r4, #4
   23a94:	ldr	r3, [sp, #204]	; 0xcc
   23a98:	ldr	r1, [r1, r2, lsl #2]
   23a9c:	ldr	r3, [r3, r2, lsl #2]
   23aa0:	add	r2, r2, #1
   23aa4:	mul	r9, r3, r9
   23aa8:	ldr	r3, [r7]
   23aac:	mla	ip, r1, r3, ip
   23ab0:	b	2393c <GetDataSlab+0x7838>
   23ab4:	str	r1, [sp, #16]
   23ab8:	ldr	r3, [r1, #-4]!
   23abc:	ldr	r0, [r4, #4]
   23ac0:	mul	r3, r3, r0
   23ac4:	ldr	r0, [lr, #4]
   23ac8:	str	r3, [r4, #4]
   23acc:	ldr	r3, [sp, #16]
   23ad0:	ldr	r3, [r3]
   23ad4:	mul	r3, r3, r0
   23ad8:	str	r3, [lr, #4]
   23adc:	b	23a80 <GetDataSlab+0x797c>
   23ae0:	ldr	lr, [r0, r3, lsl #2]
   23ae4:	add	r1, r1, #8
   23ae8:	add	r3, r3, #1
   23aec:	str	lr, [r1, #-8]
   23af0:	str	r7, [r1, #-4]
   23af4:	b	23b38 <GetDataSlab+0x7a34>
   23af8:	add	r3, sp, #152	; 0x98
   23afc:	add	r3, r3, lr, lsl #2
   23b00:	ldr	r3, [r3, #-120]	; 0xffffff88
   23b04:	add	r0, r0, r3, lsl #2
   23b08:	add	ip, ip, r3
   23b0c:	add	r6, r6, r8
   23b10:	cmp	r6, r9
   23b14:	bge	1c230 <GetDataSlab+0x12c>
   23b18:	ldr	r3, [sp, #196]	; 0xc4
   23b1c:	ldr	r2, [r3]
   23b20:	ldr	r3, [sp]
   23b24:	cmp	r2, #0
   23b28:	addne	r0, r0, r2, lsl #2
   23b2c:	addne	ip, ip, r2
   23b30:	add	r1, r3, r6, lsl #3
   23b34:	mov	r3, #0
   23b38:	cmp	r3, r8
   23b3c:	blt	23ae0 <GetDataSlab+0x79dc>
   23b40:	ldr	r3, [sp, #8]
   23b44:	add	r5, sp, #72	; 0x48
   23b48:	mov	lr, #1
   23b4c:	ldr	r4, [sp, #12]
   23b50:	sub	r3, r3, r2
   23b54:	add	r0, r0, r3, lsl #2
   23b58:	add	ip, ip, r3
   23b5c:	ldr	r3, [sp, #208]	; 0xd0
   23b60:	cmp	lr, r3
   23b64:	bge	23b0c <GetDataSlab+0x7a08>
   23b68:	ldr	r3, [r5, #4]
   23b6c:	add	r2, r3, #1
   23b70:	ldr	r3, [sp, #204]	; 0xcc
   23b74:	str	r2, [r5, #4]
   23b78:	ldr	r1, [r3, lr, lsl #2]
   23b7c:	sdiv	r3, r2, r1
   23b80:	mls	r3, r1, r3, r2
   23b84:	cmp	r3, #0
   23b88:	bne	23af8 <GetDataSlab+0x79f4>
   23b8c:	ldr	r2, [r4, #4]
   23b90:	str	r3, [r5, #4]
   23b94:	ldr	r1, [sp, #196]	; 0xc4
   23b98:	sdiv	r3, ip, r2
   23b9c:	ldr	r1, [r1, lr, lsl #2]
   23ba0:	mls	r3, r2, r3, ip
   23ba4:	cmp	r3, #0
   23ba8:	ldrne	sl, [r4]
   23bac:	subne	r3, r2, r3
   23bb0:	mlane	r3, r1, sl, r3
   23bb4:	bne	23bc8 <GetDataSlab+0x7ac4>
   23bb8:	cmp	r1, #0
   23bbc:	beq	23bd0 <GetDataSlab+0x7acc>
   23bc0:	ldr	r3, [r4]
   23bc4:	mul	r3, r3, r1
   23bc8:	add	r0, r0, r3, lsl #2
   23bcc:	add	ip, ip, r3
   23bd0:	add	lr, lr, #1
   23bd4:	add	r4, r4, #4
   23bd8:	add	r5, r5, #4
   23bdc:	b	23b5c <GetDataSlab+0x7a58>
   23be0:	mov	r6, #0
   23be4:	mov	r7, r6
   23be8:	b	23b10 <GetDataSlab+0x7a0c>
   23bec:	ldr	r3, [r4], r7
   23bf0:	add	r2, r2, #1
   23bf4:	stm	r1, {r3, sl}
   23bf8:	add	r1, r1, #8
   23bfc:	b	239a8 <GetDataSlab+0x78a4>
   23c00:	add	r3, sp, #152	; 0x98
   23c04:	add	r3, r3, r4, lsl #2
   23c08:	ldr	r3, [r3, #-120]	; 0xffffff88
   23c0c:	add	r0, r0, r3, lsl #2
   23c10:	add	ip, ip, r3
   23c14:	add	r6, r6, r8
   23c18:	b	2397c <GetDataSlab+0x7878>
   23c1c:	ldr	r5, [sl]
   23c20:	add	lr, sp, #32
   23c24:	mov	r6, fp
   23c28:	mov	r4, #0
   23c2c:	mov	r2, #1
   23c30:	sub	r3, r5, #1
   23c34:	str	r3, [sp, #32]
   23c38:	ldr	r3, [fp]
   23c3c:	str	r3, [sp, #8]
   23c40:	str	r3, [sp, #112]	; 0x70
   23c44:	ldr	r3, [sp, #204]	; 0xcc
   23c48:	ldr	r7, [r3]
   23c4c:	add	r3, sp, #112	; 0x70
   23c50:	mov	ip, r3
   23c54:	str	r3, [sp, #12]
   23c58:	mov	r9, r7
   23c5c:	ldr	r3, [sp, #208]	; 0xd0
   23c60:	cmp	r2, r3
   23c64:	blt	23d78 <GetDataSlab+0x7c74>
   23c68:	ldr	r3, [sp, #4]
   23c6c:	cmp	r5, #1
   23c70:	add	ip, r3, r4, lsl #1
   23c74:	beq	23ef4 <GetDataSlab+0x7df0>
   23c78:	bic	r3, r7, r7, asr #31
   23c7c:	mov	r6, #0
   23c80:	lsl	r8, r5, #1
   23c84:	mul	sl, r5, r7
   23c88:	mul	fp, r5, r3
   23c8c:	mul	r3, r3, r8
   23c90:	str	r3, [sp, #4]
   23c94:	cmp	r6, r9
   23c98:	bge	1c230 <GetDataSlab+0x12c>
   23c9c:	ldr	r3, [sp, #196]	; 0xc4
   23ca0:	mov	r1, #0
   23ca4:	ldr	r0, [r3]
   23ca8:	ldr	r3, [sp]
   23cac:	cmp	r0, #0
   23cb0:	addne	ip, ip, r0, lsl #1
   23cb4:	addne	r4, r4, r0
   23cb8:	add	r5, r3, r6, lsl #3
   23cbc:	mov	lr, ip
   23cc0:	cmp	r1, r7
   23cc4:	blt	23efc <GetDataSlab+0x7df8>
   23cc8:	ldr	r3, [sp, #8]
   23ccc:	add	r5, sp, #72	; 0x48
   23cd0:	mov	lr, #1
   23cd4:	sub	r3, r3, r0
   23cd8:	ldr	r0, [sp, #12]
   23cdc:	sub	r2, r3, sl
   23ce0:	add	r3, r4, fp
   23ce4:	add	r4, r3, r2
   23ce8:	ldr	r3, [sp, #4]
   23cec:	add	r3, r3, r2, lsl #1
   23cf0:	add	ip, ip, r3
   23cf4:	ldr	r3, [sp, #208]	; 0xd0
   23cf8:	cmp	lr, r3
   23cfc:	bge	23f24 <GetDataSlab+0x7e20>
   23d00:	ldr	r3, [r5, #4]
   23d04:	add	r2, r3, #1
   23d08:	ldr	r3, [sp, #204]	; 0xcc
   23d0c:	str	r2, [r5, #4]
   23d10:	ldr	r1, [r3, lr, lsl #2]
   23d14:	sdiv	r3, r2, r1
   23d18:	mls	r3, r1, r3, r2
   23d1c:	cmp	r3, #0
   23d20:	bne	23f10 <GetDataSlab+0x7e0c>
   23d24:	ldr	r2, [r0, #4]
   23d28:	str	r3, [r5, #4]
   23d2c:	ldr	r1, [sp, #196]	; 0xc4
   23d30:	sdiv	r3, r4, r2
   23d34:	ldr	r1, [r1, lr, lsl #2]
   23d38:	mls	r3, r2, r3, r4
   23d3c:	cmp	r3, #0
   23d40:	subne	r3, r2, r3
   23d44:	ldrne	r2, [r0]
   23d48:	mlane	r3, r1, r2, r3
   23d4c:	bne	23d60 <GetDataSlab+0x7c5c>
   23d50:	cmp	r1, #0
   23d54:	beq	23d68 <GetDataSlab+0x7c64>
   23d58:	ldr	r3, [r0]
   23d5c:	mul	r3, r3, r1
   23d60:	add	ip, ip, r3, lsl #1
   23d64:	add	r4, r4, r3
   23d68:	add	lr, lr, #1
   23d6c:	add	r0, r0, #4
   23d70:	add	r5, r5, #4
   23d74:	b	23cf4 <GetDataSlab+0x7bf0>
   23d78:	ldr	r3, [sl, r2, lsl #2]
   23d7c:	mov	r8, ip
   23d80:	sub	r3, r3, #1
   23d84:	str	r3, [lr, #4]
   23d88:	ldr	r3, [r6], #4
   23d8c:	mov	r1, r6
   23d90:	str	r3, [ip, #4]
   23d94:	cmp	r1, fp
   23d98:	bne	23dc8 <GetDataSlab+0x7cc4>
   23d9c:	ldr	r1, [sp, #196]	; 0xc4
   23da0:	add	ip, ip, #4
   23da4:	add	lr, lr, #4
   23da8:	ldr	r3, [sp, #204]	; 0xcc
   23dac:	ldr	r1, [r1, r2, lsl #2]
   23db0:	ldr	r3, [r3, r2, lsl #2]
   23db4:	add	r2, r2, #1
   23db8:	mul	r9, r3, r9
   23dbc:	ldr	r3, [r8]
   23dc0:	mla	r4, r1, r3, r4
   23dc4:	b	23c5c <GetDataSlab+0x7b58>
   23dc8:	str	r1, [sp, #16]
   23dcc:	ldr	r3, [r1, #-4]!
   23dd0:	ldr	r0, [lr, #4]
   23dd4:	mul	r3, r3, r0
   23dd8:	ldr	r0, [ip, #4]
   23ddc:	str	r3, [lr, #4]
   23de0:	ldr	r3, [sp, #16]
   23de4:	ldr	r3, [r3]
   23de8:	mul	r3, r3, r0
   23dec:	str	r3, [ip, #4]
   23df0:	b	23d94 <GetDataSlab+0x7c90>
   23df4:	ldrsh	r2, [lr, #2]!
   23df8:	add	r0, r0, #1
   23dfc:	asr	r3, r2, #31
   23e00:	strd	r2, [r5], #8
   23e04:	b	23e4c <GetDataSlab+0x7d48>
   23e08:	add	r3, sp, #152	; 0x98
   23e0c:	add	r3, r3, r0, lsl #2
   23e10:	ldr	r3, [r3, #-120]	; 0xffffff88
   23e14:	add	ip, ip, r3, lsl #1
   23e18:	add	r4, r4, r3
   23e1c:	add	r6, r6, r7
   23e20:	cmp	r6, r9
   23e24:	bge	1c230 <GetDataSlab+0x12c>
   23e28:	ldr	r3, [sp, #196]	; 0xc4
   23e2c:	mov	r0, #0
   23e30:	ldr	r1, [r3]
   23e34:	ldr	r3, [sp]
   23e38:	cmp	r1, #0
   23e3c:	addne	ip, ip, r1, lsl #1
   23e40:	addne	r4, r4, r1
   23e44:	add	r5, r3, r6, lsl #3
   23e48:	sub	lr, ip, #2
   23e4c:	cmp	r0, r7
   23e50:	blt	23df4 <GetDataSlab+0x7cf0>
   23e54:	ldr	r3, [sp, #8]
   23e58:	add	r5, sp, #72	; 0x48
   23e5c:	mov	r0, #1
   23e60:	ldr	lr, [sp, #12]
   23e64:	sub	r3, r3, r1
   23e68:	add	ip, ip, r3, lsl #1
   23e6c:	add	r4, r4, r3
   23e70:	ldr	r3, [sp, #208]	; 0xd0
   23e74:	cmp	r0, r3
   23e78:	bge	23e1c <GetDataSlab+0x7d18>
   23e7c:	ldr	r3, [r5, #4]
   23e80:	add	r2, r3, #1
   23e84:	ldr	r3, [sp, #204]	; 0xcc
   23e88:	str	r2, [r5, #4]
   23e8c:	ldr	r1, [r3, r0, lsl #2]
   23e90:	sdiv	r3, r2, r1
   23e94:	mls	r3, r1, r3, r2
   23e98:	cmp	r3, #0
   23e9c:	bne	23e08 <GetDataSlab+0x7d04>
   23ea0:	ldr	r2, [lr, #4]
   23ea4:	str	r3, [r5, #4]
   23ea8:	ldr	r1, [sp, #196]	; 0xc4
   23eac:	sdiv	r3, r4, r2
   23eb0:	ldr	r1, [r1, r0, lsl #2]
   23eb4:	mls	r3, r2, r3, r4
   23eb8:	cmp	r3, #0
   23ebc:	ldrne	r8, [lr]
   23ec0:	subne	r3, r2, r3
   23ec4:	mlane	r3, r1, r8, r3
   23ec8:	bne	23edc <GetDataSlab+0x7dd8>
   23ecc:	cmp	r1, #0
   23ed0:	beq	23ee4 <GetDataSlab+0x7de0>
   23ed4:	ldr	r3, [lr]
   23ed8:	mul	r3, r3, r1
   23edc:	add	ip, ip, r3, lsl #1
   23ee0:	add	r4, r4, r3
   23ee4:	add	r0, r0, #1
   23ee8:	add	lr, lr, #4
   23eec:	add	r5, r5, #4
   23ef0:	b	23e70 <GetDataSlab+0x7d6c>
   23ef4:	mov	r6, #0
   23ef8:	b	23e20 <GetDataSlab+0x7d1c>
   23efc:	ldrsh	r2, [lr], r8
   23f00:	add	r1, r1, #1
   23f04:	asr	r3, r2, #31
   23f08:	strd	r2, [r5], #8
   23f0c:	b	23cc0 <GetDataSlab+0x7bbc>
   23f10:	add	r3, sp, #152	; 0x98
   23f14:	add	r3, r3, lr, lsl #2
   23f18:	ldr	r3, [r3, #-120]	; 0xffffff88
   23f1c:	add	ip, ip, r3, lsl #1
   23f20:	add	r4, r4, r3
   23f24:	add	r6, r6, r7
   23f28:	b	23c94 <GetDataSlab+0x7b90>
   23f2c:	ldr	r5, [sl]
   23f30:	add	lr, sp, #32
   23f34:	mov	r6, fp
   23f38:	mov	r4, #0
   23f3c:	mov	r2, #1
   23f40:	sub	r3, r5, #1
   23f44:	str	r3, [sp, #32]
   23f48:	ldr	r3, [fp]
   23f4c:	str	r3, [sp, #8]
   23f50:	str	r3, [sp, #112]	; 0x70
   23f54:	ldr	r3, [sp, #204]	; 0xcc
   23f58:	ldr	r7, [r3]
   23f5c:	add	r3, sp, #112	; 0x70
   23f60:	mov	ip, r3
   23f64:	str	r3, [sp, #12]
   23f68:	mov	r9, r7
   23f6c:	ldr	r3, [sp, #208]	; 0xd0
   23f70:	cmp	r2, r3
   23f74:	blt	24088 <GetDataSlab+0x7f84>
   23f78:	ldr	r3, [sp, #4]
   23f7c:	cmp	r5, #1
   23f80:	add	ip, r3, r4, lsl #1
   23f84:	beq	24204 <GetDataSlab+0x8100>
   23f88:	bic	r3, r7, r7, asr #31
   23f8c:	mov	r6, #0
   23f90:	lsl	r8, r5, #1
   23f94:	mul	sl, r5, r7
   23f98:	mul	r2, r5, r3
   23f9c:	mul	fp, r3, r8
   23fa0:	str	r2, [sp, #4]
   23fa4:	cmp	r6, r9
   23fa8:	bge	1c230 <GetDataSlab+0x12c>
   23fac:	ldr	r3, [sp, #196]	; 0xc4
   23fb0:	mov	r1, #0
   23fb4:	ldr	r0, [r3]
   23fb8:	ldr	r3, [sp]
   23fbc:	cmp	r0, #0
   23fc0:	addne	ip, ip, r0, lsl #1
   23fc4:	addne	r4, r4, r0
   23fc8:	add	r5, r3, r6, lsl #3
   23fcc:	mov	lr, ip
   23fd0:	cmp	r1, r7
   23fd4:	blt	2420c <GetDataSlab+0x8108>
   23fd8:	ldr	r3, [sp, #8]
   23fdc:	add	r5, sp, #72	; 0x48
   23fe0:	mov	lr, #1
   23fe4:	sub	r3, r3, r0
   23fe8:	ldr	r0, [sp, #12]
   23fec:	sub	r2, r3, sl
   23ff0:	ldr	r3, [sp, #4]
   23ff4:	add	r3, r4, r3
   23ff8:	add	r4, r3, r2
   23ffc:	add	r3, fp, r2, lsl #1
   24000:	add	ip, ip, r3
   24004:	ldr	r3, [sp, #208]	; 0xd0
   24008:	cmp	lr, r3
   2400c:	bge	24234 <GetDataSlab+0x8130>
   24010:	ldr	r3, [r5, #4]
   24014:	add	r2, r3, #1
   24018:	ldr	r3, [sp, #204]	; 0xcc
   2401c:	str	r2, [r5, #4]
   24020:	ldr	r1, [r3, lr, lsl #2]
   24024:	sdiv	r3, r2, r1
   24028:	mls	r3, r1, r3, r2
   2402c:	cmp	r3, #0
   24030:	bne	24220 <GetDataSlab+0x811c>
   24034:	ldr	r2, [r0, #4]
   24038:	str	r3, [r5, #4]
   2403c:	ldr	r1, [sp, #196]	; 0xc4
   24040:	sdiv	r3, r4, r2
   24044:	ldr	r1, [r1, lr, lsl #2]
   24048:	mls	r3, r2, r3, r4
   2404c:	cmp	r3, #0
   24050:	subne	r3, r2, r3
   24054:	ldrne	r2, [r0]
   24058:	mlane	r3, r1, r2, r3
   2405c:	bne	24070 <GetDataSlab+0x7f6c>
   24060:	cmp	r1, #0
   24064:	beq	24078 <GetDataSlab+0x7f74>
   24068:	ldr	r3, [r0]
   2406c:	mul	r3, r3, r1
   24070:	add	ip, ip, r3, lsl #1
   24074:	add	r4, r4, r3
   24078:	add	lr, lr, #1
   2407c:	add	r0, r0, #4
   24080:	add	r5, r5, #4
   24084:	b	24004 <GetDataSlab+0x7f00>
   24088:	ldr	r3, [sl, r2, lsl #2]
   2408c:	mov	r8, ip
   24090:	sub	r3, r3, #1
   24094:	str	r3, [lr, #4]
   24098:	ldr	r3, [r6], #4
   2409c:	mov	r1, r6
   240a0:	str	r3, [ip, #4]
   240a4:	cmp	r1, fp
   240a8:	bne	240d8 <GetDataSlab+0x7fd4>
   240ac:	ldr	r1, [sp, #196]	; 0xc4
   240b0:	add	ip, ip, #4
   240b4:	add	lr, lr, #4
   240b8:	ldr	r3, [sp, #204]	; 0xcc
   240bc:	ldr	r1, [r1, r2, lsl #2]
   240c0:	ldr	r3, [r3, r2, lsl #2]
   240c4:	add	r2, r2, #1
   240c8:	mul	r9, r3, r9
   240cc:	ldr	r3, [r8]
   240d0:	mla	r4, r1, r3, r4
   240d4:	b	23f6c <GetDataSlab+0x7e68>
   240d8:	str	r1, [sp, #16]
   240dc:	ldr	r3, [r1, #-4]!
   240e0:	ldr	r0, [lr, #4]
   240e4:	mul	r3, r3, r0
   240e8:	ldr	r0, [ip, #4]
   240ec:	str	r3, [lr, #4]
   240f0:	ldr	r3, [sp, #16]
   240f4:	ldr	r3, [r3]
   240f8:	mul	r3, r3, r0
   240fc:	str	r3, [ip, #4]
   24100:	b	240a4 <GetDataSlab+0x7fa0>
   24104:	ldrh	r2, [lr, #2]!
   24108:	mov	r3, #0
   2410c:	add	r0, r0, #1
   24110:	strd	r2, [r5], #8
   24114:	b	2415c <GetDataSlab+0x8058>
   24118:	add	r3, sp, #152	; 0x98
   2411c:	add	r3, r3, r0, lsl #2
   24120:	ldr	r3, [r3, #-120]	; 0xffffff88
   24124:	add	ip, ip, r3, lsl #1
   24128:	add	r4, r4, r3
   2412c:	add	r6, r6, r7
   24130:	cmp	r6, r9
   24134:	bge	1c230 <GetDataSlab+0x12c>
   24138:	ldr	r3, [sp, #196]	; 0xc4
   2413c:	mov	r0, #0
   24140:	ldr	r1, [r3]
   24144:	ldr	r3, [sp]
   24148:	cmp	r1, #0
   2414c:	addne	ip, ip, r1, lsl #1
   24150:	addne	r4, r4, r1
   24154:	add	r5, r3, r6, lsl #3
   24158:	sub	lr, ip, #2
   2415c:	cmp	r0, r7
   24160:	blt	24104 <GetDataSlab+0x8000>
   24164:	ldr	r3, [sp, #8]
   24168:	add	r5, sp, #72	; 0x48
   2416c:	mov	r0, #1
   24170:	ldr	lr, [sp, #12]
   24174:	sub	r3, r3, r1
   24178:	add	ip, ip, r3, lsl #1
   2417c:	add	r4, r4, r3
   24180:	ldr	r3, [sp, #208]	; 0xd0
   24184:	cmp	r0, r3
   24188:	bge	2412c <GetDataSlab+0x8028>
   2418c:	ldr	r3, [r5, #4]
   24190:	add	r2, r3, #1
   24194:	ldr	r3, [sp, #204]	; 0xcc
   24198:	str	r2, [r5, #4]
   2419c:	ldr	r1, [r3, r0, lsl #2]
   241a0:	sdiv	r3, r2, r1
   241a4:	mls	r3, r1, r3, r2
   241a8:	cmp	r3, #0
   241ac:	bne	24118 <GetDataSlab+0x8014>
   241b0:	ldr	r2, [lr, #4]
   241b4:	str	r3, [r5, #4]
   241b8:	ldr	r1, [sp, #196]	; 0xc4
   241bc:	sdiv	r3, r4, r2
   241c0:	ldr	r1, [r1, r0, lsl #2]
   241c4:	mls	r3, r2, r3, r4
   241c8:	cmp	r3, #0
   241cc:	ldrne	r8, [lr]
   241d0:	subne	r3, r2, r3
   241d4:	mlane	r3, r1, r8, r3
   241d8:	bne	241ec <GetDataSlab+0x80e8>
   241dc:	cmp	r1, #0
   241e0:	beq	241f4 <GetDataSlab+0x80f0>
   241e4:	ldr	r3, [lr]
   241e8:	mul	r3, r3, r1
   241ec:	add	ip, ip, r3, lsl #1
   241f0:	add	r4, r4, r3
   241f4:	add	r0, r0, #1
   241f8:	add	lr, lr, #4
   241fc:	add	r5, r5, #4
   24200:	b	24180 <GetDataSlab+0x807c>
   24204:	mov	r6, #0
   24208:	b	24130 <GetDataSlab+0x802c>
   2420c:	ldrh	r2, [lr], r8
   24210:	mov	r3, #0
   24214:	add	r1, r1, #1
   24218:	strd	r2, [r5], #8
   2421c:	b	23fd0 <GetDataSlab+0x7ecc>
   24220:	add	r3, sp, #152	; 0x98
   24224:	add	r3, r3, lr, lsl #2
   24228:	ldr	r3, [r3, #-120]	; 0xffffff88
   2422c:	add	ip, ip, r3, lsl #1
   24230:	add	r4, r4, r3
   24234:	add	r6, r6, r7
   24238:	b	23fa4 <GetDataSlab+0x7ea0>
   2423c:	ldr	r8, [sl]
   24240:	add	lr, sp, #32
   24244:	mov	r5, fp
   24248:	mov	r4, #0
   2424c:	mov	r2, #1
   24250:	sub	r3, r8, #1
   24254:	str	r3, [sp, #32]
   24258:	ldr	r3, [fp]
   2425c:	str	r3, [sp, #8]
   24260:	str	r3, [sp, #112]	; 0x70
   24264:	ldr	r3, [sp, #204]	; 0xcc
   24268:	ldr	r7, [r3]
   2426c:	add	r3, sp, #112	; 0x70
   24270:	mov	ip, r3
   24274:	str	r3, [sp, #12]
   24278:	mov	r9, r7
   2427c:	ldr	r3, [sp, #208]	; 0xd0
   24280:	cmp	r2, r3
   24284:	blt	24388 <GetDataSlab+0x8284>
   24288:	ldr	r3, [sp, #4]
   2428c:	cmp	r8, #1
   24290:	add	lr, r3, r4
   24294:	beq	24500 <GetDataSlab+0x83fc>
   24298:	bic	r3, r7, r7, asr #31
   2429c:	mov	r6, #0
   242a0:	mul	fp, r8, r7
   242a4:	mul	sl, r8, r3
   242a8:	cmp	r6, r9
   242ac:	bge	1c230 <GetDataSlab+0x12c>
   242b0:	ldr	r3, [sp, #196]	; 0xc4
   242b4:	mov	r1, #0
   242b8:	ldr	r0, [r3]
   242bc:	ldr	r3, [sp]
   242c0:	cmp	r0, #0
   242c4:	addne	lr, lr, r0
   242c8:	addne	r4, r4, r0
   242cc:	add	r5, r3, r6, lsl #3
   242d0:	mov	ip, lr
   242d4:	cmp	r1, r7
   242d8:	blt	24508 <GetDataSlab+0x8404>
   242dc:	ldr	r3, [sp, #8]
   242e0:	add	r5, sp, #72	; 0x48
   242e4:	mov	ip, #1
   242e8:	sub	r3, r3, r0
   242ec:	ldr	r0, [sp, #12]
   242f0:	sub	r2, r3, fp
   242f4:	add	r3, r4, sl
   242f8:	add	r4, r3, r2
   242fc:	add	r3, r2, sl
   24300:	add	lr, lr, r3
   24304:	ldr	r3, [sp, #208]	; 0xd0
   24308:	cmp	ip, r3
   2430c:	bge	24530 <GetDataSlab+0x842c>
   24310:	ldr	r3, [r5, #4]
   24314:	add	r2, r3, #1
   24318:	ldr	r3, [sp, #204]	; 0xcc
   2431c:	str	r2, [r5, #4]
   24320:	ldr	r1, [r3, ip, lsl #2]
   24324:	sdiv	r3, r2, r1
   24328:	mls	r3, r1, r3, r2
   2432c:	cmp	r3, #0
   24330:	bne	2451c <GetDataSlab+0x8418>
   24334:	ldr	r2, [r0, #4]
   24338:	str	r3, [r5, #4]
   2433c:	ldr	r1, [sp, #196]	; 0xc4
   24340:	sdiv	r3, r4, r2
   24344:	ldr	r1, [r1, ip, lsl #2]
   24348:	mls	r3, r2, r3, r4
   2434c:	cmp	r3, #0
   24350:	subne	r3, r2, r3
   24354:	ldrne	r2, [r0]
   24358:	mlane	r3, r1, r2, r3
   2435c:	bne	24370 <GetDataSlab+0x826c>
   24360:	cmp	r1, #0
   24364:	beq	24378 <GetDataSlab+0x8274>
   24368:	ldr	r3, [r0]
   2436c:	mul	r3, r3, r1
   24370:	add	lr, lr, r3
   24374:	add	r4, r4, r3
   24378:	add	ip, ip, #1
   2437c:	add	r0, r0, #4
   24380:	add	r5, r5, #4
   24384:	b	24304 <GetDataSlab+0x8200>
   24388:	ldr	r3, [sl, r2, lsl #2]
   2438c:	mov	r6, ip
   24390:	sub	r3, r3, #1
   24394:	str	r3, [lr, #4]
   24398:	ldr	r3, [r5], #4
   2439c:	mov	r1, r5
   243a0:	str	r3, [ip, #4]
   243a4:	cmp	r1, fp
   243a8:	bne	243d8 <GetDataSlab+0x82d4>
   243ac:	ldr	r1, [sp, #196]	; 0xc4
   243b0:	add	ip, ip, #4
   243b4:	add	lr, lr, #4
   243b8:	ldr	r3, [sp, #204]	; 0xcc
   243bc:	ldr	r1, [r1, r2, lsl #2]
   243c0:	ldr	r3, [r3, r2, lsl #2]
   243c4:	add	r2, r2, #1
   243c8:	mul	r9, r3, r9
   243cc:	ldr	r3, [r6]
   243d0:	mla	r4, r1, r3, r4
   243d4:	b	2427c <GetDataSlab+0x8178>
   243d8:	str	r1, [sp, #16]
   243dc:	ldr	r3, [r1, #-4]!
   243e0:	ldr	r0, [lr, #4]
   243e4:	mul	r3, r3, r0
   243e8:	ldr	r0, [ip, #4]
   243ec:	str	r3, [lr, #4]
   243f0:	ldr	r3, [sp, #16]
   243f4:	ldr	r3, [r3]
   243f8:	mul	r3, r3, r0
   243fc:	str	r3, [ip, #4]
   24400:	b	243a4 <GetDataSlab+0x82a0>
   24404:	ldrsb	r0, [lr, r2]
   24408:	add	r2, r2, #1
   2440c:	asr	r1, r0, #31
   24410:	strd	r0, [ip], #8
   24414:	b	24458 <GetDataSlab+0x8354>
   24418:	add	r3, sp, #152	; 0x98
   2441c:	add	r3, r3, r0, lsl #2
   24420:	ldr	r3, [r3, #-120]	; 0xffffff88
   24424:	add	r4, r4, r3
   24428:	add	lr, lr, r3
   2442c:	add	r6, r6, r7
   24430:	cmp	r6, r9
   24434:	bge	1c230 <GetDataSlab+0x12c>
   24438:	ldr	r2, [sp]
   2443c:	ldr	r3, [sp, #196]	; 0xc4
   24440:	add	ip, r2, r6, lsl #3
   24444:	mov	r2, #0
   24448:	ldr	r3, [r3]
   2444c:	cmp	r3, #0
   24450:	addne	lr, lr, r3
   24454:	addne	r4, r4, r3
   24458:	cmp	r2, r7
   2445c:	blt	24404 <GetDataSlab+0x8300>
   24460:	ldr	r2, [sp, #8]
   24464:	add	r5, sp, #72	; 0x48
   24468:	mov	r0, #1
   2446c:	ldr	ip, [sp, #12]
   24470:	sub	r3, r2, r3
   24474:	add	r4, r4, r3
   24478:	add	lr, lr, r3
   2447c:	ldr	r3, [sp, #208]	; 0xd0
   24480:	cmp	r0, r3
   24484:	bge	2442c <GetDataSlab+0x8328>
   24488:	ldr	r3, [r5, #4]
   2448c:	add	r2, r3, #1
   24490:	ldr	r3, [sp, #204]	; 0xcc
   24494:	str	r2, [r5, #4]
   24498:	ldr	r1, [r3, r0, lsl #2]
   2449c:	sdiv	r3, r2, r1
   244a0:	mls	r3, r1, r3, r2
   244a4:	cmp	r3, #0
   244a8:	bne	24418 <GetDataSlab+0x8314>
   244ac:	ldr	r2, [ip, #4]
   244b0:	str	r3, [r5, #4]
   244b4:	ldr	r1, [sp, #196]	; 0xc4
   244b8:	sdiv	r3, r4, r2
   244bc:	ldr	r1, [r1, r0, lsl #2]
   244c0:	mls	r3, r2, r3, r4
   244c4:	cmp	r3, #0
   244c8:	ldrne	r8, [ip]
   244cc:	subne	r3, r2, r3
   244d0:	mlane	r3, r1, r8, r3
   244d4:	bne	244e8 <GetDataSlab+0x83e4>
   244d8:	cmp	r1, #0
   244dc:	beq	244f0 <GetDataSlab+0x83ec>
   244e0:	ldr	r3, [ip]
   244e4:	mul	r3, r3, r1
   244e8:	add	lr, lr, r3
   244ec:	add	r4, r4, r3
   244f0:	add	r0, r0, #1
   244f4:	add	ip, ip, #4
   244f8:	add	r5, r5, #4
   244fc:	b	2447c <GetDataSlab+0x8378>
   24500:	mov	r6, #0
   24504:	b	24430 <GetDataSlab+0x832c>
   24508:	ldrsb	r2, [ip], r8
   2450c:	add	r1, r1, #1
   24510:	asr	r3, r2, #31
   24514:	strd	r2, [r5], #8
   24518:	b	242d4 <GetDataSlab+0x81d0>
   2451c:	add	r3, sp, #152	; 0x98
   24520:	add	r3, r3, ip, lsl #2
   24524:	ldr	r3, [r3, #-120]	; 0xffffff88
   24528:	add	r4, r4, r3
   2452c:	add	lr, lr, r3
   24530:	add	r6, r6, r7
   24534:	b	242a8 <GetDataSlab+0x81a4>
   24538:	ldr	r8, [sl]
   2453c:	add	lr, sp, #32
   24540:	mov	r5, fp
   24544:	mov	r4, #0
   24548:	mov	r2, #1
   2454c:	sub	r3, r8, #1
   24550:	str	r3, [sp, #32]
   24554:	ldr	r3, [fp]
   24558:	str	r3, [sp, #8]
   2455c:	str	r3, [sp, #112]	; 0x70
   24560:	ldr	r3, [sp, #204]	; 0xcc
   24564:	ldr	r7, [r3]
   24568:	add	r3, sp, #112	; 0x70
   2456c:	mov	ip, r3
   24570:	str	r3, [sp, #12]
   24574:	mov	r9, r7
   24578:	ldr	r3, [sp, #208]	; 0xd0
   2457c:	cmp	r2, r3
   24580:	blt	24684 <GetDataSlab+0x8580>
   24584:	ldr	r3, [sp, #4]
   24588:	cmp	r8, #1
   2458c:	add	lr, r3, r4
   24590:	beq	247fc <GetDataSlab+0x86f8>
   24594:	bic	r3, r7, r7, asr #31
   24598:	mov	r6, #0
   2459c:	mul	fp, r8, r7
   245a0:	mul	sl, r8, r3
   245a4:	cmp	r6, r9
   245a8:	bge	1c230 <GetDataSlab+0x12c>
   245ac:	ldr	r3, [sp, #196]	; 0xc4
   245b0:	mov	r1, #0
   245b4:	ldr	r0, [r3]
   245b8:	ldr	r3, [sp]
   245bc:	cmp	r0, #0
   245c0:	addne	lr, lr, r0
   245c4:	addne	r4, r4, r0
   245c8:	add	r5, r3, r6, lsl #3
   245cc:	mov	ip, lr
   245d0:	cmp	r1, r7
   245d4:	blt	24804 <GetDataSlab+0x8700>
   245d8:	ldr	r3, [sp, #8]
   245dc:	add	r5, sp, #72	; 0x48
   245e0:	mov	ip, #1
   245e4:	sub	r3, r3, r0
   245e8:	ldr	r0, [sp, #12]
   245ec:	sub	r2, r3, fp
   245f0:	add	r3, r4, sl
   245f4:	add	r4, r3, r2
   245f8:	add	r3, r2, sl
   245fc:	add	lr, lr, r3
   24600:	ldr	r3, [sp, #208]	; 0xd0
   24604:	cmp	ip, r3
   24608:	bge	2482c <GetDataSlab+0x8728>
   2460c:	ldr	r3, [r5, #4]
   24610:	add	r2, r3, #1
   24614:	ldr	r3, [sp, #204]	; 0xcc
   24618:	str	r2, [r5, #4]
   2461c:	ldr	r1, [r3, ip, lsl #2]
   24620:	sdiv	r3, r2, r1
   24624:	mls	r3, r1, r3, r2
   24628:	cmp	r3, #0
   2462c:	bne	24818 <GetDataSlab+0x8714>
   24630:	ldr	r2, [r0, #4]
   24634:	str	r3, [r5, #4]
   24638:	ldr	r1, [sp, #196]	; 0xc4
   2463c:	sdiv	r3, r4, r2
   24640:	ldr	r1, [r1, ip, lsl #2]
   24644:	mls	r3, r2, r3, r4
   24648:	cmp	r3, #0
   2464c:	subne	r3, r2, r3
   24650:	ldrne	r2, [r0]
   24654:	mlane	r3, r1, r2, r3
   24658:	bne	2466c <GetDataSlab+0x8568>
   2465c:	cmp	r1, #0
   24660:	beq	24674 <GetDataSlab+0x8570>
   24664:	ldr	r3, [r0]
   24668:	mul	r3, r3, r1
   2466c:	add	lr, lr, r3
   24670:	add	r4, r4, r3
   24674:	add	ip, ip, #1
   24678:	add	r0, r0, #4
   2467c:	add	r5, r5, #4
   24680:	b	24600 <GetDataSlab+0x84fc>
   24684:	ldr	r3, [sl, r2, lsl #2]
   24688:	mov	r6, ip
   2468c:	sub	r3, r3, #1
   24690:	str	r3, [lr, #4]
   24694:	ldr	r3, [r5], #4
   24698:	mov	r1, r5
   2469c:	str	r3, [ip, #4]
   246a0:	cmp	r1, fp
   246a4:	bne	246d4 <GetDataSlab+0x85d0>
   246a8:	ldr	r1, [sp, #196]	; 0xc4
   246ac:	add	ip, ip, #4
   246b0:	add	lr, lr, #4
   246b4:	ldr	r3, [sp, #204]	; 0xcc
   246b8:	ldr	r1, [r1, r2, lsl #2]
   246bc:	ldr	r3, [r3, r2, lsl #2]
   246c0:	add	r2, r2, #1
   246c4:	mul	r9, r3, r9
   246c8:	ldr	r3, [r6]
   246cc:	mla	r4, r1, r3, r4
   246d0:	b	24578 <GetDataSlab+0x8474>
   246d4:	str	r1, [sp, #16]
   246d8:	ldr	r3, [r1, #-4]!
   246dc:	ldr	r0, [lr, #4]
   246e0:	mul	r3, r3, r0
   246e4:	ldr	r0, [ip, #4]
   246e8:	str	r3, [lr, #4]
   246ec:	ldr	r3, [sp, #16]
   246f0:	ldr	r3, [r3]
   246f4:	mul	r3, r3, r0
   246f8:	str	r3, [ip, #4]
   246fc:	b	246a0 <GetDataSlab+0x859c>
   24700:	ldrb	r0, [lr, r2]
   24704:	mov	r1, #0
   24708:	add	r2, r2, #1
   2470c:	strd	r0, [ip], #8
   24710:	b	24754 <GetDataSlab+0x8650>
   24714:	add	r3, sp, #152	; 0x98
   24718:	add	r3, r3, r0, lsl #2
   2471c:	ldr	r3, [r3, #-120]	; 0xffffff88
   24720:	add	r4, r4, r3
   24724:	add	lr, lr, r3
   24728:	add	r6, r6, r7
   2472c:	cmp	r6, r9
   24730:	bge	1c230 <GetDataSlab+0x12c>
   24734:	ldr	r2, [sp]
   24738:	ldr	r3, [sp, #196]	; 0xc4
   2473c:	add	ip, r2, r6, lsl #3
   24740:	mov	r2, #0
   24744:	ldr	r3, [r3]
   24748:	cmp	r3, #0
   2474c:	addne	lr, lr, r3
   24750:	addne	r4, r4, r3
   24754:	cmp	r2, r7
   24758:	blt	24700 <GetDataSlab+0x85fc>
   2475c:	ldr	r2, [sp, #8]
   24760:	add	r5, sp, #72	; 0x48
   24764:	mov	r0, #1
   24768:	ldr	ip, [sp, #12]
   2476c:	sub	r3, r2, r3
   24770:	add	r4, r4, r3
   24774:	add	lr, lr, r3
   24778:	ldr	r3, [sp, #208]	; 0xd0
   2477c:	cmp	r0, r3
   24780:	bge	24728 <GetDataSlab+0x8624>
   24784:	ldr	r3, [r5, #4]
   24788:	add	r2, r3, #1
   2478c:	ldr	r3, [sp, #204]	; 0xcc
   24790:	str	r2, [r5, #4]
   24794:	ldr	r1, [r3, r0, lsl #2]
   24798:	sdiv	r3, r2, r1
   2479c:	mls	r3, r1, r3, r2
   247a0:	cmp	r3, #0
   247a4:	bne	24714 <GetDataSlab+0x8610>
   247a8:	ldr	r2, [ip, #4]
   247ac:	str	r3, [r5, #4]
   247b0:	ldr	r1, [sp, #196]	; 0xc4
   247b4:	sdiv	r3, r4, r2
   247b8:	ldr	r1, [r1, r0, lsl #2]
   247bc:	mls	r3, r2, r3, r4
   247c0:	cmp	r3, #0
   247c4:	ldrne	r8, [ip]
   247c8:	subne	r3, r2, r3
   247cc:	mlane	r3, r1, r8, r3
   247d0:	bne	247e4 <GetDataSlab+0x86e0>
   247d4:	cmp	r1, #0
   247d8:	beq	247ec <GetDataSlab+0x86e8>
   247dc:	ldr	r3, [ip]
   247e0:	mul	r3, r3, r1
   247e4:	add	lr, lr, r3
   247e8:	add	r4, r4, r3
   247ec:	add	r0, r0, #1
   247f0:	add	ip, ip, #4
   247f4:	add	r5, r5, #4
   247f8:	b	24778 <GetDataSlab+0x8674>
   247fc:	mov	r6, #0
   24800:	b	2472c <GetDataSlab+0x8628>
   24804:	ldrb	r2, [ip], r8
   24808:	mov	r3, #0
   2480c:	add	r1, r1, #1
   24810:	strd	r2, [r5], #8
   24814:	b	245d0 <GetDataSlab+0x84cc>
   24818:	add	r3, sp, #152	; 0x98
   2481c:	add	r3, r3, ip, lsl #2
   24820:	ldr	r3, [r3, #-120]	; 0xffffff88
   24824:	add	r4, r4, r3
   24828:	add	lr, lr, r3
   2482c:	add	r6, r6, r7
   24830:	b	245a4 <GetDataSlab+0x84a0>
   24834:	cmp	r5, #12
   24838:	bne	24b54 <GetDataSlab+0x8a50>
   2483c:	ldr	r5, [sl]
   24840:	add	lr, sp, #32
   24844:	mov	r6, fp
   24848:	mov	r4, #0
   2484c:	mov	r2, #1
   24850:	sub	r3, r5, #1
   24854:	str	r3, [sp, #32]
   24858:	ldr	r3, [fp]
   2485c:	str	r3, [sp, #8]
   24860:	str	r3, [sp, #112]	; 0x70
   24864:	ldr	r3, [sp, #204]	; 0xcc
   24868:	ldr	r7, [r3]
   2486c:	add	r3, sp, #112	; 0x70
   24870:	mov	ip, r3
   24874:	str	r3, [sp, #12]
   24878:	mov	r9, r7
   2487c:	ldr	r3, [sp, #208]	; 0xd0
   24880:	cmp	r2, r3
   24884:	blt	249a4 <GetDataSlab+0x88a0>
   24888:	ldr	r3, [sp, #4]
   2488c:	cmp	r5, #1
   24890:	add	ip, r3, r4, lsl #3
   24894:	beq	24b1c <GetDataSlab+0x8a18>
   24898:	mul	r3, r5, r7
   2489c:	mov	r6, #0
   248a0:	lsl	r8, r5, #3
   248a4:	str	r3, [sp, #4]
   248a8:	bic	r3, r7, r7, asr #31
   248ac:	mul	r2, r3, r5
   248b0:	mul	r3, r3, r8
   248b4:	str	r3, [sp, #16]
   248b8:	str	r2, [sp, #20]
   248bc:	cmp	r6, r9
   248c0:	bge	1c230 <GetDataSlab+0x12c>
   248c4:	ldr	r3, [sp, #196]	; 0xc4
   248c8:	mov	r2, #0
   248cc:	ldr	r1, [r3]
   248d0:	ldr	r3, [sp]
   248d4:	cmp	r1, #0
   248d8:	addne	ip, ip, r1, lsl #3
   248dc:	addne	r4, r4, r1
   248e0:	add	r0, r3, r6, lsl #3
   248e4:	mov	r3, ip
   248e8:	cmp	r2, r7
   248ec:	blt	24b24 <GetDataSlab+0x8a20>
   248f0:	ldrd	r2, [sp, #4]
   248f4:	add	r5, sp, #72	; 0x48
   248f8:	mov	lr, #1
   248fc:	ldr	r0, [sp, #12]
   24900:	sub	r3, r3, r1
   24904:	sub	r2, r3, r2
   24908:	ldr	r3, [sp, #20]
   2490c:	add	r3, r4, r3
   24910:	add	r4, r3, r2
   24914:	ldr	r3, [sp, #16]
   24918:	add	r3, r3, r2, lsl #3
   2491c:	add	ip, ip, r3
   24920:	ldr	r3, [sp, #208]	; 0xd0
   24924:	cmp	lr, r3
   24928:	bge	24b4c <GetDataSlab+0x8a48>
   2492c:	ldr	r3, [r5, #4]
   24930:	add	r2, r3, #1
   24934:	ldr	r3, [sp, #204]	; 0xcc
   24938:	str	r2, [r5, #4]
   2493c:	ldr	r1, [r3, lr, lsl #2]
   24940:	sdiv	r3, r2, r1
   24944:	mls	r3, r1, r3, r2
   24948:	cmp	r3, #0
   2494c:	bne	24b38 <GetDataSlab+0x8a34>
   24950:	ldr	r2, [r0, #4]
   24954:	str	r3, [r5, #4]
   24958:	ldr	r1, [sp, #196]	; 0xc4
   2495c:	sdiv	r3, r4, r2
   24960:	ldr	r1, [r1, lr, lsl #2]
   24964:	mls	r3, r2, r3, r4
   24968:	cmp	r3, #0
   2496c:	subne	r3, r2, r3
   24970:	ldrne	r2, [r0]
   24974:	mlane	r3, r1, r2, r3
   24978:	bne	2498c <GetDataSlab+0x8888>
   2497c:	cmp	r1, #0
   24980:	beq	24994 <GetDataSlab+0x8890>
   24984:	ldr	r3, [r0]
   24988:	mul	r3, r3, r1
   2498c:	add	ip, ip, r3, lsl #3
   24990:	add	r4, r4, r3
   24994:	add	lr, lr, #1
   24998:	add	r0, r0, #4
   2499c:	add	r5, r5, #4
   249a0:	b	24920 <GetDataSlab+0x881c>
   249a4:	ldr	r3, [sl, r2, lsl #2]
   249a8:	mov	r8, ip
   249ac:	sub	r3, r3, #1
   249b0:	str	r3, [lr, #4]
   249b4:	ldr	r3, [r6], #4
   249b8:	mov	r1, r6
   249bc:	str	r3, [ip, #4]
   249c0:	cmp	r1, fp
   249c4:	bne	249f4 <GetDataSlab+0x88f0>
   249c8:	ldr	r1, [sp, #196]	; 0xc4
   249cc:	add	ip, ip, #4
   249d0:	add	lr, lr, #4
   249d4:	ldr	r3, [sp, #204]	; 0xcc
   249d8:	ldr	r1, [r1, r2, lsl #2]
   249dc:	ldr	r3, [r3, r2, lsl #2]
   249e0:	add	r2, r2, #1
   249e4:	mul	r9, r3, r9
   249e8:	ldr	r3, [r8]
   249ec:	mla	r4, r1, r3, r4
   249f0:	b	2487c <GetDataSlab+0x8778>
   249f4:	str	r1, [sp, #16]
   249f8:	ldr	r3, [r1, #-4]!
   249fc:	ldr	r0, [lr, #4]
   24a00:	mul	r3, r3, r0
   24a04:	ldr	r0, [ip, #4]
   24a08:	str	r3, [lr, #4]
   24a0c:	ldr	r3, [sp, #16]
   24a10:	ldr	r3, [r3]
   24a14:	mul	r3, r3, r0
   24a18:	str	r3, [ip, #4]
   24a1c:	b	249c0 <GetDataSlab+0x88bc>
   24a20:	ldrd	r2, [lr, #8]!
   24a24:	add	r0, r0, #1
   24a28:	strd	r2, [r5], #8
   24a2c:	b	24a74 <GetDataSlab+0x8970>
   24a30:	add	r3, sp, #152	; 0x98
   24a34:	add	r3, r3, r0, lsl #2
   24a38:	ldr	r3, [r3, #-120]	; 0xffffff88
   24a3c:	add	ip, ip, r3, lsl #3
   24a40:	add	r4, r4, r3
   24a44:	add	r6, r6, r7
   24a48:	cmp	r6, r9
   24a4c:	bge	1c230 <GetDataSlab+0x12c>
   24a50:	ldr	r3, [sp, #196]	; 0xc4
   24a54:	mov	r0, #0
   24a58:	ldr	r1, [r3]
   24a5c:	ldr	r3, [sp]
   24a60:	cmp	r1, #0
   24a64:	addne	ip, ip, r1, lsl #3
   24a68:	addne	r4, r4, r1
   24a6c:	add	r5, r3, r6, lsl #3
   24a70:	sub	lr, ip, #8
   24a74:	cmp	r0, r7
   24a78:	blt	24a20 <GetDataSlab+0x891c>
   24a7c:	ldr	r3, [sp, #8]
   24a80:	add	r5, sp, #72	; 0x48
   24a84:	mov	r0, #1
   24a88:	ldr	lr, [sp, #12]
   24a8c:	sub	r3, r3, r1
   24a90:	add	ip, ip, r3, lsl #3
   24a94:	add	r4, r4, r3
   24a98:	ldr	r3, [sp, #208]	; 0xd0
   24a9c:	cmp	r0, r3
   24aa0:	bge	24a44 <GetDataSlab+0x8940>
   24aa4:	ldr	r3, [r5, #4]
   24aa8:	add	r2, r3, #1
   24aac:	ldr	r3, [sp, #204]	; 0xcc
   24ab0:	str	r2, [r5, #4]
   24ab4:	ldr	r1, [r3, r0, lsl #2]
   24ab8:	sdiv	r3, r2, r1
   24abc:	mls	r3, r1, r3, r2
   24ac0:	cmp	r3, #0
   24ac4:	bne	24a30 <GetDataSlab+0x892c>
   24ac8:	ldr	r2, [lr, #4]
   24acc:	str	r3, [r5, #4]
   24ad0:	ldr	r1, [sp, #196]	; 0xc4
   24ad4:	sdiv	r3, r4, r2
   24ad8:	ldr	r1, [r1, r0, lsl #2]
   24adc:	mls	r3, r2, r3, r4
   24ae0:	cmp	r3, #0
   24ae4:	ldrne	r8, [lr]
   24ae8:	subne	r3, r2, r3
   24aec:	mlane	r3, r1, r8, r3
   24af0:	bne	24b04 <GetDataSlab+0x8a00>
   24af4:	cmp	r1, #0
   24af8:	beq	24b0c <GetDataSlab+0x8a08>
   24afc:	ldr	r3, [lr]
   24b00:	mul	r3, r3, r1
   24b04:	add	ip, ip, r3, lsl #3
   24b08:	add	r4, r4, r3
   24b0c:	add	r0, r0, #1
   24b10:	add	lr, lr, #4
   24b14:	add	r5, r5, #4
   24b18:	b	24a98 <GetDataSlab+0x8994>
   24b1c:	mov	r6, #0
   24b20:	b	24a48 <GetDataSlab+0x8944>
   24b24:	ldrd	sl, [r3]
   24b28:	add	r2, r2, #1
   24b2c:	add	r3, r3, r8
   24b30:	strd	sl, [r0], #8
   24b34:	b	248e8 <GetDataSlab+0x87e4>
   24b38:	add	r3, sp, #152	; 0x98
   24b3c:	add	r3, r3, lr, lsl #2
   24b40:	ldr	r3, [r3, #-120]	; 0xffffff88
   24b44:	add	ip, ip, r3, lsl #3
   24b48:	add	r4, r4, r3
   24b4c:	add	r6, r6, r7
   24b50:	b	248bc <GetDataSlab+0x87b8>
   24b54:	cmp	r5, #13
   24b58:	bne	3236c <GetDataSlab+0x16268>
   24b5c:	ldr	r5, [sl]
   24b60:	add	lr, sp, #32
   24b64:	mov	r6, fp
   24b68:	mov	r4, #0
   24b6c:	mov	r2, #1
   24b70:	sub	r3, r5, #1
   24b74:	str	r3, [sp, #32]
   24b78:	ldr	r3, [fp]
   24b7c:	str	r3, [sp, #8]
   24b80:	str	r3, [sp, #112]	; 0x70
   24b84:	ldr	r3, [sp, #204]	; 0xcc
   24b88:	ldr	r7, [r3]
   24b8c:	add	r3, sp, #112	; 0x70
   24b90:	mov	ip, r3
   24b94:	str	r3, [sp, #12]
   24b98:	mov	r9, r7
   24b9c:	ldr	r3, [sp, #208]	; 0xd0
   24ba0:	cmp	r2, r3
   24ba4:	blt	24cc0 <GetDataSlab+0x8bbc>
   24ba8:	ldr	r3, [sp, #4]
   24bac:	cmp	r5, #1
   24bb0:	add	ip, r3, r4, lsl #3
   24bb4:	beq	24e38 <GetDataSlab+0x8d34>
   24bb8:	mul	r3, r5, r7
   24bbc:	mov	r6, #0
   24bc0:	lsl	r8, r5, #3
   24bc4:	str	r3, [sp, #4]
   24bc8:	bic	r3, r7, r7, asr #31
   24bcc:	mul	r2, r3, r5
   24bd0:	mul	r3, r3, r8
   24bd4:	strd	r2, [sp, #16]
   24bd8:	cmp	r6, r9
   24bdc:	bge	1c230 <GetDataSlab+0x12c>
   24be0:	ldr	r3, [sp, #196]	; 0xc4
   24be4:	mov	r2, #0
   24be8:	ldr	r1, [r3]
   24bec:	ldr	r3, [sp]
   24bf0:	cmp	r1, #0
   24bf4:	addne	ip, ip, r1, lsl #3
   24bf8:	addne	r4, r4, r1
   24bfc:	add	r0, r3, r6, lsl #3
   24c00:	mov	r3, ip
   24c04:	cmp	r2, r7
   24c08:	blt	24e40 <GetDataSlab+0x8d3c>
   24c0c:	ldrd	r2, [sp, #4]
   24c10:	add	r5, sp, #72	; 0x48
   24c14:	mov	lr, #1
   24c18:	ldr	r0, [sp, #12]
   24c1c:	sub	r3, r3, r1
   24c20:	sub	r2, r3, r2
   24c24:	ldr	r3, [sp, #16]
   24c28:	add	r3, r4, r3
   24c2c:	add	r4, r3, r2
   24c30:	ldr	r3, [sp, #20]
   24c34:	add	r3, r3, r2, lsl #3
   24c38:	add	ip, ip, r3
   24c3c:	ldr	r3, [sp, #208]	; 0xd0
   24c40:	cmp	lr, r3
   24c44:	bge	24e68 <GetDataSlab+0x8d64>
   24c48:	ldr	r3, [r5, #4]
   24c4c:	add	r2, r3, #1
   24c50:	ldr	r3, [sp, #204]	; 0xcc
   24c54:	str	r2, [r5, #4]
   24c58:	ldr	r1, [r3, lr, lsl #2]
   24c5c:	sdiv	r3, r2, r1
   24c60:	mls	r3, r1, r3, r2
   24c64:	cmp	r3, #0
   24c68:	bne	24e54 <GetDataSlab+0x8d50>
   24c6c:	ldr	r2, [r0, #4]
   24c70:	str	r3, [r5, #4]
   24c74:	ldr	r1, [sp, #196]	; 0xc4
   24c78:	sdiv	r3, r4, r2
   24c7c:	ldr	r1, [r1, lr, lsl #2]
   24c80:	mls	r3, r2, r3, r4
   24c84:	cmp	r3, #0
   24c88:	subne	r3, r2, r3
   24c8c:	ldrne	r2, [r0]
   24c90:	mlane	r3, r1, r2, r3
   24c94:	bne	24ca8 <GetDataSlab+0x8ba4>
   24c98:	cmp	r1, #0
   24c9c:	beq	24cb0 <GetDataSlab+0x8bac>
   24ca0:	ldr	r3, [r0]
   24ca4:	mul	r3, r3, r1
   24ca8:	add	ip, ip, r3, lsl #3
   24cac:	add	r4, r4, r3
   24cb0:	add	lr, lr, #1
   24cb4:	add	r0, r0, #4
   24cb8:	add	r5, r5, #4
   24cbc:	b	24c3c <GetDataSlab+0x8b38>
   24cc0:	ldr	r3, [sl, r2, lsl #2]
   24cc4:	mov	r8, ip
   24cc8:	sub	r3, r3, #1
   24ccc:	str	r3, [lr, #4]
   24cd0:	ldr	r3, [r6], #4
   24cd4:	mov	r1, r6
   24cd8:	str	r3, [ip, #4]
   24cdc:	cmp	r1, fp
   24ce0:	bne	24d10 <GetDataSlab+0x8c0c>
   24ce4:	ldr	r1, [sp, #196]	; 0xc4
   24ce8:	add	ip, ip, #4
   24cec:	add	lr, lr, #4
   24cf0:	ldr	r3, [sp, #204]	; 0xcc
   24cf4:	ldr	r1, [r1, r2, lsl #2]
   24cf8:	ldr	r3, [r3, r2, lsl #2]
   24cfc:	add	r2, r2, #1
   24d00:	mul	r9, r3, r9
   24d04:	ldr	r3, [r8]
   24d08:	mla	r4, r1, r3, r4
   24d0c:	b	24b9c <GetDataSlab+0x8a98>
   24d10:	str	r1, [sp, #16]
   24d14:	ldr	r3, [r1, #-4]!
   24d18:	ldr	r0, [lr, #4]
   24d1c:	mul	r3, r3, r0
   24d20:	ldr	r0, [ip, #4]
   24d24:	str	r3, [lr, #4]
   24d28:	ldr	r3, [sp, #16]
   24d2c:	ldr	r3, [r3]
   24d30:	mul	r3, r3, r0
   24d34:	str	r3, [ip, #4]
   24d38:	b	24cdc <GetDataSlab+0x8bd8>
   24d3c:	ldrd	r2, [lr, #8]!
   24d40:	add	r0, r0, #1
   24d44:	strd	r2, [r5], #8
   24d48:	b	24d90 <GetDataSlab+0x8c8c>
   24d4c:	add	r3, sp, #152	; 0x98
   24d50:	add	r3, r3, r0, lsl #2
   24d54:	ldr	r3, [r3, #-120]	; 0xffffff88
   24d58:	add	ip, ip, r3, lsl #3
   24d5c:	add	r4, r4, r3
   24d60:	add	r6, r6, r7
   24d64:	cmp	r6, r9
   24d68:	bge	1c230 <GetDataSlab+0x12c>
   24d6c:	ldr	r3, [sp, #196]	; 0xc4
   24d70:	mov	r0, #0
   24d74:	ldr	r1, [r3]
   24d78:	ldr	r3, [sp]
   24d7c:	cmp	r1, #0
   24d80:	addne	ip, ip, r1, lsl #3
   24d84:	addne	r4, r4, r1
   24d88:	add	r5, r3, r6, lsl #3
   24d8c:	sub	lr, ip, #8
   24d90:	cmp	r0, r7
   24d94:	blt	24d3c <GetDataSlab+0x8c38>
   24d98:	ldr	r3, [sp, #8]
   24d9c:	add	r5, sp, #72	; 0x48
   24da0:	mov	r0, #1
   24da4:	ldr	lr, [sp, #12]
   24da8:	sub	r3, r3, r1
   24dac:	add	ip, ip, r3, lsl #3
   24db0:	add	r4, r4, r3
   24db4:	ldr	r3, [sp, #208]	; 0xd0
   24db8:	cmp	r0, r3
   24dbc:	bge	24d60 <GetDataSlab+0x8c5c>
   24dc0:	ldr	r3, [r5, #4]
   24dc4:	add	r2, r3, #1
   24dc8:	ldr	r3, [sp, #204]	; 0xcc
   24dcc:	str	r2, [r5, #4]
   24dd0:	ldr	r1, [r3, r0, lsl #2]
   24dd4:	sdiv	r3, r2, r1
   24dd8:	mls	r3, r1, r3, r2
   24ddc:	cmp	r3, #0
   24de0:	bne	24d4c <GetDataSlab+0x8c48>
   24de4:	ldr	r2, [lr, #4]
   24de8:	str	r3, [r5, #4]
   24dec:	ldr	r1, [sp, #196]	; 0xc4
   24df0:	sdiv	r3, r4, r2
   24df4:	ldr	r1, [r1, r0, lsl #2]
   24df8:	mls	r3, r2, r3, r4
   24dfc:	cmp	r3, #0
   24e00:	ldrne	r8, [lr]
   24e04:	subne	r3, r2, r3
   24e08:	mlane	r3, r1, r8, r3
   24e0c:	bne	24e20 <GetDataSlab+0x8d1c>
   24e10:	cmp	r1, #0
   24e14:	beq	24e28 <GetDataSlab+0x8d24>
   24e18:	ldr	r3, [lr]
   24e1c:	mul	r3, r3, r1
   24e20:	add	ip, ip, r3, lsl #3
   24e24:	add	r4, r4, r3
   24e28:	add	r0, r0, #1
   24e2c:	add	lr, lr, #4
   24e30:	add	r5, r5, #4
   24e34:	b	24db4 <GetDataSlab+0x8cb0>
   24e38:	mov	r6, #0
   24e3c:	b	24d64 <GetDataSlab+0x8c60>
   24e40:	ldrd	sl, [r3]
   24e44:	add	r2, r2, #1
   24e48:	add	r3, r3, r8
   24e4c:	strd	sl, [r0], #8
   24e50:	b	24c04 <GetDataSlab+0x8b00>
   24e54:	add	r3, sp, #152	; 0x98
   24e58:	add	r3, r3, lr, lsl #2
   24e5c:	ldr	r3, [r3, #-120]	; 0xffffff88
   24e60:	add	ip, ip, r3, lsl #3
   24e64:	add	r4, r4, r3
   24e68:	add	r6, r6, r7
   24e6c:	b	24bd8 <GetDataSlab+0x8ad4>
   24e70:	sub	r3, r5, #1
   24e74:	cmp	r3, #8
   24e78:	addls	pc, pc, r3, lsl #2
   24e7c:	b	26788 <GetDataSlab+0xa684>
   24e80:	b	26190 <GetDataSlab+0xa08c>
   24e84:	b	2648c <GetDataSlab+0xa388>
   24e88:	b	25b70 <GetDataSlab+0x9a6c>
   24e8c:	b	25e80 <GetDataSlab+0x9d7c>
   24e90:	b	2553c <GetDataSlab+0x9438>
   24e94:	b	25850 <GetDataSlab+0x974c>
   24e98:	b	251f0 <GetDataSlab+0x90ec>
   24e9c:	b	26788 <GetDataSlab+0xa684>
   24ea0:	b	24ea4 <GetDataSlab+0x8da0>
   24ea4:	ldr	r4, [sl]
   24ea8:	add	lr, sp, #32
   24eac:	mov	r5, fp
   24eb0:	mov	r7, #0
   24eb4:	mov	r2, #1
   24eb8:	sub	r3, r4, #1
   24ebc:	str	r3, [sp, #32]
   24ec0:	ldr	r3, [fp]
   24ec4:	str	r3, [sp, #16]
   24ec8:	str	r3, [sp, #112]	; 0x70
   24ecc:	ldr	r3, [sp, #204]	; 0xcc
   24ed0:	ldr	r3, [r3]
   24ed4:	str	r3, [sp, #8]
   24ed8:	add	r3, sp, #112	; 0x70
   24edc:	mov	ip, r3
   24ee0:	str	r3, [sp, #20]
   24ee4:	ldr	r3, [sp, #8]
   24ee8:	str	r3, [sp, #12]
   24eec:	ldr	r3, [sp, #208]	; 0xd0
   24ef0:	cmp	r2, r3
   24ef4:	blt	25024 <GetDataSlab+0x8f20>
   24ef8:	ldr	r3, [sp, #4]
   24efc:	cmp	r4, #1
   24f00:	add	r6, r3, r7, lsl #3
   24f04:	beq	251b0 <GetDataSlab+0x90ac>
   24f08:	ldr	r3, [sp, #8]
   24f0c:	lsl	fp, r4, #3
   24f10:	mov	sl, #0
   24f14:	mul	r3, r4, r3
   24f18:	str	r3, [sp, #4]
   24f1c:	ldr	r3, [sp, #8]
   24f20:	bic	r3, r3, r3, asr #31
   24f24:	mul	r2, r3, r4
   24f28:	mul	r3, r3, fp
   24f2c:	strd	r2, [sp, #24]
   24f30:	ldr	r3, [sp, #12]
   24f34:	cmp	sl, r3
   24f38:	bge	1c230 <GetDataSlab+0x12c>
   24f3c:	ldr	r3, [sp, #196]	; 0xc4
   24f40:	mov	r4, #0
   24f44:	ldr	r8, [r3]
   24f48:	ldr	r3, [sp]
   24f4c:	cmp	r8, #0
   24f50:	addne	r6, r6, r8, lsl #3
   24f54:	addne	r7, r7, r8
   24f58:	add	r9, r3, sl, lsl #3
   24f5c:	mov	r5, r6
   24f60:	ldr	r3, [sp, #8]
   24f64:	cmp	r4, r3
   24f68:	blt	251b8 <GetDataSlab+0x90b4>
   24f6c:	ldr	r2, [sp, #4]
   24f70:	add	lr, sp, #72	; 0x48
   24f74:	mov	ip, #1
   24f78:	ldr	r3, [sp, #16]
   24f7c:	ldr	r0, [sp, #20]
   24f80:	sub	r3, r3, r8
   24f84:	sub	r2, r3, r2
   24f88:	ldr	r3, [sp, #24]
   24f8c:	add	r3, r7, r3
   24f90:	add	r7, r3, r2
   24f94:	ldr	r3, [sp, #28]
   24f98:	add	r3, r3, r2, lsl #3
   24f9c:	add	r6, r6, r3
   24fa0:	ldr	r3, [sp, #208]	; 0xd0
   24fa4:	cmp	ip, r3
   24fa8:	bge	251e4 <GetDataSlab+0x90e0>
   24fac:	ldr	r3, [lr, #4]
   24fb0:	add	r2, r3, #1
   24fb4:	ldr	r3, [sp, #204]	; 0xcc
   24fb8:	str	r2, [lr, #4]
   24fbc:	ldr	r1, [r3, ip, lsl #2]
   24fc0:	sdiv	r3, r2, r1
   24fc4:	mls	r3, r1, r3, r2
   24fc8:	cmp	r3, #0
   24fcc:	bne	251d0 <GetDataSlab+0x90cc>
   24fd0:	ldr	r2, [r0, #4]
   24fd4:	str	r3, [lr, #4]
   24fd8:	ldr	r1, [sp, #196]	; 0xc4
   24fdc:	sdiv	r3, r7, r2
   24fe0:	ldr	r1, [r1, ip, lsl #2]
   24fe4:	mls	r3, r2, r3, r7
   24fe8:	cmp	r3, #0
   24fec:	ldrne	r4, [r0]
   24ff0:	subne	r3, r2, r3
   24ff4:	mlane	r3, r1, r4, r3
   24ff8:	bne	2500c <GetDataSlab+0x8f08>
   24ffc:	cmp	r1, #0
   25000:	beq	25014 <GetDataSlab+0x8f10>
   25004:	ldr	r3, [r0]
   25008:	mul	r3, r3, r1
   2500c:	add	r6, r6, r3, lsl #3
   25010:	add	r7, r7, r3
   25014:	add	ip, ip, #1
   25018:	add	r0, r0, #4
   2501c:	add	lr, lr, #4
   25020:	b	24fa0 <GetDataSlab+0x8e9c>
   25024:	ldr	r3, [sl, r2, lsl #2]
   25028:	mov	r6, ip
   2502c:	sub	r3, r3, #1
   25030:	str	r3, [lr, #4]
   25034:	ldr	r3, [r5], #4
   25038:	mov	r1, r5
   2503c:	str	r3, [ip, #4]
   25040:	cmp	r1, fp
   25044:	bne	2507c <GetDataSlab+0x8f78>
   25048:	ldr	r1, [sp, #12]
   2504c:	add	ip, ip, #4
   25050:	add	lr, lr, #4
   25054:	ldr	r3, [sp, #204]	; 0xcc
   25058:	ldr	r3, [r3, r2, lsl #2]
   2505c:	mul	r3, r3, r1
   25060:	ldr	r1, [sp, #196]	; 0xc4
   25064:	str	r3, [sp, #12]
   25068:	ldr	r3, [r6]
   2506c:	ldr	r1, [r1, r2, lsl #2]
   25070:	add	r2, r2, #1
   25074:	mla	r7, r1, r3, r7
   25078:	b	24eec <GetDataSlab+0x8de8>
   2507c:	mov	r0, r1
   25080:	ldr	r3, [r1, #-4]!
   25084:	ldr	r8, [lr, #4]
   25088:	mul	r3, r3, r8
   2508c:	ldr	r8, [ip, #4]
   25090:	str	r3, [lr, #4]
   25094:	ldr	r3, [r0]
   25098:	mul	r3, r3, r8
   2509c:	str	r3, [ip, #4]
   250a0:	b	25040 <GetDataSlab+0x8f3c>
   250a4:	ldrd	r0, [r8], #8
   250a8:	add	r5, r5, #1
   250ac:	bl	3e878 <__aeabi_d2ulz>
   250b0:	strd	r0, [r9], #8
   250b4:	b	25104 <GetDataSlab+0x9000>
   250b8:	add	r3, sp, #152	; 0x98
   250bc:	add	r3, r3, r0, lsl #2
   250c0:	ldr	r3, [r3, #-120]	; 0xffffff88
   250c4:	add	r6, r6, r3, lsl #3
   250c8:	add	r7, r7, r3
   250cc:	ldr	r3, [sp, #8]
   250d0:	add	sl, sl, r3
   250d4:	ldr	r3, [sp, #12]
   250d8:	cmp	sl, r3
   250dc:	bge	1c230 <GetDataSlab+0x12c>
   250e0:	ldr	r3, [sp, #196]	; 0xc4
   250e4:	mov	r5, #0
   250e8:	ldr	r4, [r3]
   250ec:	ldr	r3, [sp]
   250f0:	cmp	r4, #0
   250f4:	addne	r6, r6, r4, lsl #3
   250f8:	addne	r7, r7, r4
   250fc:	add	r9, r3, sl, lsl #3
   25100:	mov	r8, r6
   25104:	ldr	r3, [sp, #8]
   25108:	cmp	r5, r3
   2510c:	blt	250a4 <GetDataSlab+0x8fa0>
   25110:	ldr	r3, [sp, #16]
   25114:	add	lr, sp, #72	; 0x48
   25118:	mov	r0, #1
   2511c:	ldr	ip, [sp, #20]
   25120:	sub	r3, r3, r4
   25124:	add	r6, r6, r3, lsl #3
   25128:	add	r7, r7, r3
   2512c:	ldr	r3, [sp, #208]	; 0xd0
   25130:	cmp	r0, r3
   25134:	bge	250cc <GetDataSlab+0x8fc8>
   25138:	ldr	r3, [lr, #4]
   2513c:	add	r2, r3, #1
   25140:	ldr	r3, [sp, #204]	; 0xcc
   25144:	str	r2, [lr, #4]
   25148:	ldr	r1, [r3, r0, lsl #2]
   2514c:	sdiv	r3, r2, r1
   25150:	mls	r3, r1, r3, r2
   25154:	cmp	r3, #0
   25158:	bne	250b8 <GetDataSlab+0x8fb4>
   2515c:	ldr	r2, [ip, #4]
   25160:	str	r3, [lr, #4]
   25164:	ldr	r1, [sp, #196]	; 0xc4
   25168:	sdiv	r3, r7, r2
   2516c:	ldr	r1, [r1, r0, lsl #2]
   25170:	mls	r3, r2, r3, r7
   25174:	cmp	r3, #0
   25178:	ldrne	r4, [ip]
   2517c:	subne	r3, r2, r3
   25180:	mlane	r3, r1, r4, r3
   25184:	bne	25198 <GetDataSlab+0x9094>
   25188:	cmp	r1, #0
   2518c:	beq	251a0 <GetDataSlab+0x909c>
   25190:	ldr	r3, [ip]
   25194:	mul	r3, r3, r1
   25198:	add	r6, r6, r3, lsl #3
   2519c:	add	r7, r7, r3
   251a0:	add	r0, r0, #1
   251a4:	add	ip, ip, #4
   251a8:	add	lr, lr, #4
   251ac:	b	2512c <GetDataSlab+0x9028>
   251b0:	mov	sl, #0
   251b4:	b	250d4 <GetDataSlab+0x8fd0>
   251b8:	ldrd	r0, [r5]
   251bc:	add	r4, r4, #1
   251c0:	add	r5, r5, fp
   251c4:	bl	3e878 <__aeabi_d2ulz>
   251c8:	strd	r0, [r9], #8
   251cc:	b	24f60 <GetDataSlab+0x8e5c>
   251d0:	add	r3, sp, #152	; 0x98
   251d4:	add	r3, r3, ip, lsl #2
   251d8:	ldr	r3, [r3, #-120]	; 0xffffff88
   251dc:	add	r6, r6, r3, lsl #3
   251e0:	add	r7, r7, r3
   251e4:	ldr	r3, [sp, #8]
   251e8:	add	sl, sl, r3
   251ec:	b	24f30 <GetDataSlab+0x8e2c>
   251f0:	ldr	r4, [sl]
   251f4:	add	lr, sp, #32
   251f8:	mov	r5, fp
   251fc:	mov	r7, #0
   25200:	mov	r2, #1
   25204:	sub	r3, r4, #1
   25208:	str	r3, [sp, #32]
   2520c:	ldr	r3, [fp]
   25210:	str	r3, [sp, #16]
   25214:	str	r3, [sp, #112]	; 0x70
   25218:	ldr	r3, [sp, #204]	; 0xcc
   2521c:	ldr	r3, [r3]
   25220:	str	r3, [sp, #8]
   25224:	add	r3, sp, #112	; 0x70
   25228:	mov	ip, r3
   2522c:	str	r3, [sp, #20]
   25230:	ldr	r3, [sp, #8]
   25234:	str	r3, [sp, #12]
   25238:	ldr	r3, [sp, #208]	; 0xd0
   2523c:	cmp	r2, r3
   25240:	blt	25370 <GetDataSlab+0x926c>
   25244:	ldr	r3, [sp, #4]
   25248:	cmp	r4, #1
   2524c:	add	r6, r3, r7, lsl #2
   25250:	beq	254fc <GetDataSlab+0x93f8>
   25254:	ldr	r3, [sp, #8]
   25258:	lsl	fp, r4, #2
   2525c:	mov	sl, #0
   25260:	mul	r3, r4, r3
   25264:	str	r3, [sp, #4]
   25268:	ldr	r3, [sp, #8]
   2526c:	bic	r3, r3, r3, asr #31
   25270:	mul	r2, r3, r4
   25274:	mul	r3, fp, r3
   25278:	strd	r2, [sp, #24]
   2527c:	ldr	r3, [sp, #12]
   25280:	cmp	sl, r3
   25284:	bge	1c230 <GetDataSlab+0x12c>
   25288:	ldr	r3, [sp, #196]	; 0xc4
   2528c:	mov	r4, #0
   25290:	ldr	r8, [r3]
   25294:	ldr	r3, [sp]
   25298:	cmp	r8, #0
   2529c:	addne	r6, r6, r8, lsl #2
   252a0:	addne	r7, r7, r8
   252a4:	add	r9, r3, sl, lsl #3
   252a8:	mov	r5, r6
   252ac:	ldr	r3, [sp, #8]
   252b0:	cmp	r4, r3
   252b4:	blt	25504 <GetDataSlab+0x9400>
   252b8:	ldr	r2, [sp, #4]
   252bc:	add	lr, sp, #72	; 0x48
   252c0:	mov	ip, #1
   252c4:	ldr	r3, [sp, #16]
   252c8:	ldr	r0, [sp, #20]
   252cc:	sub	r3, r3, r8
   252d0:	sub	r2, r3, r2
   252d4:	ldr	r3, [sp, #24]
   252d8:	add	r3, r7, r3
   252dc:	add	r7, r3, r2
   252e0:	ldr	r3, [sp, #28]
   252e4:	add	r3, r3, r2, lsl #2
   252e8:	add	r6, r6, r3
   252ec:	ldr	r3, [sp, #208]	; 0xd0
   252f0:	cmp	ip, r3
   252f4:	bge	25530 <GetDataSlab+0x942c>
   252f8:	ldr	r3, [lr, #4]
   252fc:	add	r2, r3, #1
   25300:	ldr	r3, [sp, #204]	; 0xcc
   25304:	str	r2, [lr, #4]
   25308:	ldr	r1, [r3, ip, lsl #2]
   2530c:	sdiv	r3, r2, r1
   25310:	mls	r3, r1, r3, r2
   25314:	cmp	r3, #0
   25318:	bne	2551c <GetDataSlab+0x9418>
   2531c:	ldr	r2, [r0, #4]
   25320:	str	r3, [lr, #4]
   25324:	ldr	r1, [sp, #196]	; 0xc4
   25328:	sdiv	r3, r7, r2
   2532c:	ldr	r1, [r1, ip, lsl #2]
   25330:	mls	r3, r2, r3, r7
   25334:	cmp	r3, #0
   25338:	ldrne	r4, [r0]
   2533c:	subne	r3, r2, r3
   25340:	mlane	r3, r1, r4, r3
   25344:	bne	25358 <GetDataSlab+0x9254>
   25348:	cmp	r1, #0
   2534c:	beq	25360 <GetDataSlab+0x925c>
   25350:	ldr	r3, [r0]
   25354:	mul	r3, r3, r1
   25358:	add	r6, r6, r3, lsl #2
   2535c:	add	r7, r7, r3
   25360:	add	ip, ip, #1
   25364:	add	r0, r0, #4
   25368:	add	lr, lr, #4
   2536c:	b	252ec <GetDataSlab+0x91e8>
   25370:	ldr	r3, [sl, r2, lsl #2]
   25374:	mov	r6, ip
   25378:	sub	r3, r3, #1
   2537c:	str	r3, [lr, #4]
   25380:	ldr	r3, [r5], #4
   25384:	mov	r1, r5
   25388:	str	r3, [ip, #4]
   2538c:	cmp	r1, fp
   25390:	bne	253c8 <GetDataSlab+0x92c4>
   25394:	ldr	r1, [sp, #12]
   25398:	add	ip, ip, #4
   2539c:	add	lr, lr, #4
   253a0:	ldr	r3, [sp, #204]	; 0xcc
   253a4:	ldr	r3, [r3, r2, lsl #2]
   253a8:	mul	r3, r3, r1
   253ac:	ldr	r1, [sp, #196]	; 0xc4
   253b0:	str	r3, [sp, #12]
   253b4:	ldr	r3, [r6]
   253b8:	ldr	r1, [r1, r2, lsl #2]
   253bc:	add	r2, r2, #1
   253c0:	mla	r7, r1, r3, r7
   253c4:	b	25238 <GetDataSlab+0x9134>
   253c8:	mov	r0, r1
   253cc:	ldr	r3, [r1, #-4]!
   253d0:	ldr	r8, [lr, #4]
   253d4:	mul	r3, r3, r8
   253d8:	ldr	r8, [ip, #4]
   253dc:	str	r3, [lr, #4]
   253e0:	ldr	r3, [r0]
   253e4:	mul	r3, r3, r8
   253e8:	str	r3, [ip, #4]
   253ec:	b	2538c <GetDataSlab+0x9288>
   253f0:	ldr	r0, [r8], #4
   253f4:	add	r5, r5, #1
   253f8:	bl	3e838 <__aeabi_f2ulz>
   253fc:	strd	r0, [r9], #8
   25400:	b	25450 <GetDataSlab+0x934c>
   25404:	add	r3, sp, #152	; 0x98
   25408:	add	r3, r3, r0, lsl #2
   2540c:	ldr	r3, [r3, #-120]	; 0xffffff88
   25410:	add	r6, r6, r3, lsl #2
   25414:	add	r7, r7, r3
   25418:	ldr	r3, [sp, #8]
   2541c:	add	sl, sl, r3
   25420:	ldr	r3, [sp, #12]
   25424:	cmp	sl, r3
   25428:	bge	1c230 <GetDataSlab+0x12c>
   2542c:	ldr	r3, [sp, #196]	; 0xc4
   25430:	mov	r5, #0
   25434:	ldr	r4, [r3]
   25438:	ldr	r3, [sp]
   2543c:	cmp	r4, #0
   25440:	addne	r6, r6, r4, lsl #2
   25444:	addne	r7, r7, r4
   25448:	add	r9, r3, sl, lsl #3
   2544c:	mov	r8, r6
   25450:	ldr	r3, [sp, #8]
   25454:	cmp	r5, r3
   25458:	blt	253f0 <GetDataSlab+0x92ec>
   2545c:	ldr	r3, [sp, #16]
   25460:	add	lr, sp, #72	; 0x48
   25464:	mov	r0, #1
   25468:	ldr	ip, [sp, #20]
   2546c:	sub	r3, r3, r4
   25470:	add	r6, r6, r3, lsl #2
   25474:	add	r7, r7, r3
   25478:	ldr	r3, [sp, #208]	; 0xd0
   2547c:	cmp	r0, r3
   25480:	bge	25418 <GetDataSlab+0x9314>
   25484:	ldr	r3, [lr, #4]
   25488:	add	r2, r3, #1
   2548c:	ldr	r3, [sp, #204]	; 0xcc
   25490:	str	r2, [lr, #4]
   25494:	ldr	r1, [r3, r0, lsl #2]
   25498:	sdiv	r3, r2, r1
   2549c:	mls	r3, r1, r3, r2
   254a0:	cmp	r3, #0
   254a4:	bne	25404 <GetDataSlab+0x9300>
   254a8:	ldr	r2, [ip, #4]
   254ac:	str	r3, [lr, #4]
   254b0:	ldr	r1, [sp, #196]	; 0xc4
   254b4:	sdiv	r3, r7, r2
   254b8:	ldr	r1, [r1, r0, lsl #2]
   254bc:	mls	r3, r2, r3, r7
   254c0:	cmp	r3, #0
   254c4:	ldrne	r4, [ip]
   254c8:	subne	r3, r2, r3
   254cc:	mlane	r3, r1, r4, r3
   254d0:	bne	254e4 <GetDataSlab+0x93e0>
   254d4:	cmp	r1, #0
   254d8:	beq	254ec <GetDataSlab+0x93e8>
   254dc:	ldr	r3, [ip]
   254e0:	mul	r3, r3, r1
   254e4:	add	r6, r6, r3, lsl #2
   254e8:	add	r7, r7, r3
   254ec:	add	r0, r0, #1
   254f0:	add	ip, ip, #4
   254f4:	add	lr, lr, #4
   254f8:	b	25478 <GetDataSlab+0x9374>
   254fc:	mov	sl, #0
   25500:	b	25420 <GetDataSlab+0x931c>
   25504:	ldr	r0, [r5]
   25508:	add	r4, r4, #1
   2550c:	add	r5, r5, fp
   25510:	bl	3e838 <__aeabi_f2ulz>
   25514:	strd	r0, [r9], #8
   25518:	b	252ac <GetDataSlab+0x91a8>
   2551c:	add	r3, sp, #152	; 0x98
   25520:	add	r3, r3, ip, lsl #2
   25524:	ldr	r3, [r3, #-120]	; 0xffffff88
   25528:	add	r6, r6, r3, lsl #2
   2552c:	add	r7, r7, r3
   25530:	ldr	r3, [sp, #8]
   25534:	add	sl, sl, r3
   25538:	b	2527c <GetDataSlab+0x9178>
   2553c:	ldr	r5, [sl]
   25540:	add	lr, sp, #32
   25544:	mov	r6, fp
   25548:	mov	r4, #0
   2554c:	mov	r2, #1
   25550:	sub	r3, r5, #1
   25554:	str	r3, [sp, #32]
   25558:	ldr	r3, [fp]
   2555c:	str	r3, [sp, #8]
   25560:	str	r3, [sp, #112]	; 0x70
   25564:	ldr	r3, [sp, #204]	; 0xcc
   25568:	ldr	r7, [r3]
   2556c:	add	r3, sp, #112	; 0x70
   25570:	mov	ip, r3
   25574:	str	r3, [sp, #12]
   25578:	mov	r9, r7
   2557c:	ldr	r3, [sp, #208]	; 0xd0
   25580:	cmp	r2, r3
   25584:	blt	25698 <GetDataSlab+0x9594>
   25588:	ldr	r3, [sp, #4]
   2558c:	cmp	r5, #1
   25590:	add	lr, r3, r4, lsl #2
   25594:	beq	25814 <GetDataSlab+0x9710>
   25598:	bic	r3, r7, r7, asr #31
   2559c:	mov	r6, #0
   255a0:	lsl	r8, r5, #2
   255a4:	mul	sl, r5, r7
   255a8:	mul	fp, r5, r3
   255ac:	mul	r3, r8, r3
   255b0:	str	r3, [sp, #4]
   255b4:	cmp	r6, r9
   255b8:	bge	1c230 <GetDataSlab+0x12c>
   255bc:	ldr	r3, [sp, #196]	; 0xc4
   255c0:	mov	r1, #0
   255c4:	ldr	r0, [r3]
   255c8:	ldr	r3, [sp]
   255cc:	cmp	r0, #0
   255d0:	addne	lr, lr, r0, lsl #2
   255d4:	addne	r4, r4, r0
   255d8:	add	ip, r3, r6, lsl #3
   255dc:	mov	r5, lr
   255e0:	cmp	r1, r7
   255e4:	blt	2581c <GetDataSlab+0x9718>
   255e8:	ldr	r3, [sp, #8]
   255ec:	add	r5, sp, #72	; 0x48
   255f0:	mov	ip, #1
   255f4:	sub	r3, r3, r0
   255f8:	ldr	r0, [sp, #12]
   255fc:	sub	r2, r3, sl
   25600:	add	r3, r4, fp
   25604:	add	r4, r3, r2
   25608:	ldr	r3, [sp, #4]
   2560c:	add	r3, r3, r2, lsl #2
   25610:	add	lr, lr, r3
   25614:	ldr	r3, [sp, #208]	; 0xd0
   25618:	cmp	ip, r3
   2561c:	bge	25848 <GetDataSlab+0x9744>
   25620:	ldr	r3, [r5, #4]
   25624:	add	r2, r3, #1
   25628:	ldr	r3, [sp, #204]	; 0xcc
   2562c:	str	r2, [r5, #4]
   25630:	ldr	r1, [r3, ip, lsl #2]
   25634:	sdiv	r3, r2, r1
   25638:	mls	r3, r1, r3, r2
   2563c:	cmp	r3, #0
   25640:	bne	25834 <GetDataSlab+0x9730>
   25644:	ldr	r2, [r0, #4]
   25648:	str	r3, [r5, #4]
   2564c:	ldr	r1, [sp, #196]	; 0xc4
   25650:	sdiv	r3, r4, r2
   25654:	ldr	r1, [r1, ip, lsl #2]
   25658:	mls	r3, r2, r3, r4
   2565c:	cmp	r3, #0
   25660:	subne	r3, r2, r3
   25664:	ldrne	r2, [r0]
   25668:	mlane	r3, r1, r2, r3
   2566c:	bne	25680 <GetDataSlab+0x957c>
   25670:	cmp	r1, #0
   25674:	beq	25688 <GetDataSlab+0x9584>
   25678:	ldr	r3, [r0]
   2567c:	mul	r3, r3, r1
   25680:	add	lr, lr, r3, lsl #2
   25684:	add	r4, r4, r3
   25688:	add	ip, ip, #1
   2568c:	add	r0, r0, #4
   25690:	add	r5, r5, #4
   25694:	b	25614 <GetDataSlab+0x9510>
   25698:	ldr	r3, [sl, r2, lsl #2]
   2569c:	mov	r8, ip
   256a0:	sub	r3, r3, #1
   256a4:	str	r3, [lr, #4]
   256a8:	ldr	r3, [r6], #4
   256ac:	mov	r1, r6
   256b0:	str	r3, [ip, #4]
   256b4:	cmp	r1, fp
   256b8:	bne	256e8 <GetDataSlab+0x95e4>
   256bc:	ldr	r1, [sp, #196]	; 0xc4
   256c0:	add	ip, ip, #4
   256c4:	add	lr, lr, #4
   256c8:	ldr	r3, [sp, #204]	; 0xcc
   256cc:	ldr	r1, [r1, r2, lsl #2]
   256d0:	ldr	r3, [r3, r2, lsl #2]
   256d4:	add	r2, r2, #1
   256d8:	mul	r9, r3, r9
   256dc:	ldr	r3, [r8]
   256e0:	mla	r4, r1, r3, r4
   256e4:	b	2557c <GetDataSlab+0x9478>
   256e8:	str	r1, [sp, #16]
   256ec:	ldr	r3, [r1, #-4]!
   256f0:	ldr	r0, [lr, #4]
   256f4:	mul	r3, r3, r0
   256f8:	ldr	r0, [ip, #4]
   256fc:	str	r3, [lr, #4]
   25700:	ldr	r3, [sp, #16]
   25704:	ldr	r3, [r3]
   25708:	mul	r3, r3, r0
   2570c:	str	r3, [ip, #4]
   25710:	b	256b4 <GetDataSlab+0x95b0>
   25714:	ldr	r1, [lr, r3, lsl #2]
   25718:	add	r3, r3, #1
   2571c:	mov	r0, r1
   25720:	asr	r1, r1, #31
   25724:	strd	r0, [ip], #8
   25728:	b	2576c <GetDataSlab+0x9668>
   2572c:	add	r3, sp, #152	; 0x98
   25730:	add	r3, r3, r0, lsl #2
   25734:	ldr	r3, [r3, #-120]	; 0xffffff88
   25738:	add	lr, lr, r3, lsl #2
   2573c:	add	r4, r4, r3
   25740:	add	r6, r6, r7
   25744:	cmp	r6, r9
   25748:	bge	1c230 <GetDataSlab+0x12c>
   2574c:	ldr	r3, [sp, #196]	; 0xc4
   25750:	ldr	r2, [r3]
   25754:	ldr	r3, [sp]
   25758:	cmp	r2, #0
   2575c:	addne	lr, lr, r2, lsl #2
   25760:	addne	r4, r4, r2
   25764:	add	ip, r3, r6, lsl #3
   25768:	mov	r3, #0
   2576c:	cmp	r3, r7
   25770:	blt	25714 <GetDataSlab+0x9610>
   25774:	ldr	r3, [sp, #8]
   25778:	add	r5, sp, #72	; 0x48
   2577c:	mov	r0, #1
   25780:	ldr	ip, [sp, #12]
   25784:	sub	r3, r3, r2
   25788:	add	lr, lr, r3, lsl #2
   2578c:	add	r4, r4, r3
   25790:	ldr	r3, [sp, #208]	; 0xd0
   25794:	cmp	r0, r3
   25798:	bge	25740 <GetDataSlab+0x963c>
   2579c:	ldr	r3, [r5, #4]
   257a0:	add	r2, r3, #1
   257a4:	ldr	r3, [sp, #204]	; 0xcc
   257a8:	str	r2, [r5, #4]
   257ac:	ldr	r1, [r3, r0, lsl #2]
   257b0:	sdiv	r3, r2, r1
   257b4:	mls	r3, r1, r3, r2
   257b8:	cmp	r3, #0
   257bc:	bne	2572c <GetDataSlab+0x9628>
   257c0:	ldr	r2, [ip, #4]
   257c4:	str	r3, [r5, #4]
   257c8:	ldr	r1, [sp, #196]	; 0xc4
   257cc:	sdiv	r3, r4, r2
   257d0:	ldr	r1, [r1, r0, lsl #2]
   257d4:	mls	r3, r2, r3, r4
   257d8:	cmp	r3, #0
   257dc:	ldrne	r8, [ip]
   257e0:	subne	r3, r2, r3
   257e4:	mlane	r3, r1, r8, r3
   257e8:	bne	257fc <GetDataSlab+0x96f8>
   257ec:	cmp	r1, #0
   257f0:	beq	25804 <GetDataSlab+0x9700>
   257f4:	ldr	r3, [ip]
   257f8:	mul	r3, r3, r1
   257fc:	add	lr, lr, r3, lsl #2
   25800:	add	r4, r4, r3
   25804:	add	r0, r0, #1
   25808:	add	ip, ip, #4
   2580c:	add	r5, r5, #4
   25810:	b	25790 <GetDataSlab+0x968c>
   25814:	mov	r6, #0
   25818:	b	25744 <GetDataSlab+0x9640>
   2581c:	ldr	r3, [r5], r8
   25820:	add	r1, r1, #1
   25824:	mov	r2, r3
   25828:	asr	r3, r3, #31
   2582c:	strd	r2, [ip], #8
   25830:	b	255e0 <GetDataSlab+0x94dc>
   25834:	add	r3, sp, #152	; 0x98
   25838:	add	r3, r3, ip, lsl #2
   2583c:	ldr	r3, [r3, #-120]	; 0xffffff88
   25840:	add	lr, lr, r3, lsl #2
   25844:	add	r4, r4, r3
   25848:	add	r6, r6, r7
   2584c:	b	255b4 <GetDataSlab+0x94b0>
   25850:	ldr	r5, [sl]
   25854:	add	r4, sp, #32
   25858:	mov	r6, fp
   2585c:	mov	ip, #0
   25860:	mov	r2, #1
   25864:	sub	r3, r5, #1
   25868:	str	r3, [sp, #32]
   2586c:	ldr	r3, [fp]
   25870:	str	r3, [sp, #8]
   25874:	str	r3, [sp, #112]	; 0x70
   25878:	ldr	r3, [sp, #204]	; 0xcc
   2587c:	ldr	r8, [r3]
   25880:	add	r3, sp, #112	; 0x70
   25884:	mov	lr, r3
   25888:	str	r3, [sp, #12]
   2588c:	mov	r9, r8
   25890:	ldr	r3, [sp, #208]	; 0xd0
   25894:	cmp	r2, r3
   25898:	blt	259b8 <GetDataSlab+0x98b4>
   2589c:	ldr	r3, [sp, #4]
   258a0:	cmp	r5, #1
   258a4:	add	r0, r3, ip, lsl #2
   258a8:	beq	25b34 <GetDataSlab+0x9a30>
   258ac:	bic	r3, r8, r8, asr #31
   258b0:	mov	r6, #0
   258b4:	lsl	r7, r5, #2
   258b8:	mov	sl, r6
   258bc:	mul	fp, r5, r8
   258c0:	mul	r2, r5, r3
   258c4:	mul	r3, r7, r3
   258c8:	str	r3, [sp, #4]
   258cc:	str	r2, [sp, #16]
   258d0:	cmp	r6, r9
   258d4:	bge	1c230 <GetDataSlab+0x12c>
   258d8:	ldr	r3, [sp, #196]	; 0xc4
   258dc:	mov	r2, #0
   258e0:	ldr	lr, [r3]
   258e4:	ldr	r3, [sp]
   258e8:	cmp	lr, #0
   258ec:	addne	r0, r0, lr, lsl #2
   258f0:	addne	ip, ip, lr
   258f4:	add	r1, r3, r6, lsl #3
   258f8:	mov	r4, r0
   258fc:	cmp	r2, r8
   25900:	blt	25b40 <GetDataSlab+0x9a3c>
   25904:	ldr	r3, [sp, #8]
   25908:	add	r5, sp, #72	; 0x48
   2590c:	mov	r4, #1
   25910:	sub	r3, r3, lr
   25914:	ldr	lr, [sp, #12]
   25918:	sub	r2, r3, fp
   2591c:	ldr	r3, [sp, #16]
   25920:	add	r3, ip, r3
   25924:	add	ip, r3, r2
   25928:	ldr	r3, [sp, #4]
   2592c:	add	r3, r3, r2, lsl #2
   25930:	add	r0, r0, r3
   25934:	ldr	r3, [sp, #208]	; 0xd0
   25938:	cmp	r4, r3
   2593c:	bge	25b68 <GetDataSlab+0x9a64>
   25940:	ldr	r3, [r5, #4]
   25944:	add	r2, r3, #1
   25948:	ldr	r3, [sp, #204]	; 0xcc
   2594c:	str	r2, [r5, #4]
   25950:	ldr	r1, [r3, r4, lsl #2]
   25954:	sdiv	r3, r2, r1
   25958:	mls	r3, r1, r3, r2
   2595c:	cmp	r3, #0
   25960:	bne	25b54 <GetDataSlab+0x9a50>
   25964:	ldr	r2, [lr, #4]
   25968:	str	r3, [r5, #4]
   2596c:	ldr	r1, [sp, #196]	; 0xc4
   25970:	sdiv	r3, ip, r2
   25974:	ldr	r1, [r1, r4, lsl #2]
   25978:	mls	r3, r2, r3, ip
   2597c:	cmp	r3, #0
   25980:	subne	r3, r2, r3
   25984:	ldrne	r2, [lr]
   25988:	mlane	r3, r1, r2, r3
   2598c:	bne	259a0 <GetDataSlab+0x989c>
   25990:	cmp	r1, #0
   25994:	beq	259a8 <GetDataSlab+0x98a4>
   25998:	ldr	r3, [lr]
   2599c:	mul	r3, r3, r1
   259a0:	add	r0, r0, r3, lsl #2
   259a4:	add	ip, ip, r3
   259a8:	add	r4, r4, #1
   259ac:	add	lr, lr, #4
   259b0:	add	r5, r5, #4
   259b4:	b	25934 <GetDataSlab+0x9830>
   259b8:	ldr	r3, [sl, r2, lsl #2]
   259bc:	mov	r7, lr
   259c0:	sub	r3, r3, #1
   259c4:	str	r3, [r4, #4]
   259c8:	ldr	r3, [r6], #4
   259cc:	mov	r1, r6
   259d0:	str	r3, [lr, #4]
   259d4:	cmp	r1, fp
   259d8:	bne	25a08 <GetDataSlab+0x9904>
   259dc:	ldr	r1, [sp, #196]	; 0xc4
   259e0:	add	lr, lr, #4
   259e4:	add	r4, r4, #4
   259e8:	ldr	r3, [sp, #204]	; 0xcc
   259ec:	ldr	r1, [r1, r2, lsl #2]
   259f0:	ldr	r3, [r3, r2, lsl #2]
   259f4:	add	r2, r2, #1
   259f8:	mul	r9, r3, r9
   259fc:	ldr	r3, [r7]
   25a00:	mla	ip, r1, r3, ip
   25a04:	b	25890 <GetDataSlab+0x978c>
   25a08:	str	r1, [sp, #16]
   25a0c:	ldr	r3, [r1, #-4]!
   25a10:	ldr	r0, [r4, #4]
   25a14:	mul	r3, r3, r0
   25a18:	ldr	r0, [lr, #4]
   25a1c:	str	r3, [r4, #4]
   25a20:	ldr	r3, [sp, #16]
   25a24:	ldr	r3, [r3]
   25a28:	mul	r3, r3, r0
   25a2c:	str	r3, [lr, #4]
   25a30:	b	259d4 <GetDataSlab+0x98d0>
   25a34:	ldr	lr, [r0, r3, lsl #2]
   25a38:	add	r1, r1, #8
   25a3c:	add	r3, r3, #1
   25a40:	str	lr, [r1, #-8]
   25a44:	str	r7, [r1, #-4]
   25a48:	b	25a8c <GetDataSlab+0x9988>
   25a4c:	add	r3, sp, #152	; 0x98
   25a50:	add	r3, r3, lr, lsl #2
   25a54:	ldr	r3, [r3, #-120]	; 0xffffff88
   25a58:	add	r0, r0, r3, lsl #2
   25a5c:	add	ip, ip, r3
   25a60:	add	r6, r6, r8
   25a64:	cmp	r6, r9
   25a68:	bge	1c230 <GetDataSlab+0x12c>
   25a6c:	ldr	r3, [sp, #196]	; 0xc4
   25a70:	ldr	r2, [r3]
   25a74:	ldr	r3, [sp]
   25a78:	cmp	r2, #0
   25a7c:	addne	r0, r0, r2, lsl #2
   25a80:	addne	ip, ip, r2
   25a84:	add	r1, r3, r6, lsl #3
   25a88:	mov	r3, #0
   25a8c:	cmp	r3, r8
   25a90:	blt	25a34 <GetDataSlab+0x9930>
   25a94:	ldr	r3, [sp, #8]
   25a98:	add	r5, sp, #72	; 0x48
   25a9c:	mov	lr, #1
   25aa0:	ldr	r4, [sp, #12]
   25aa4:	sub	r3, r3, r2
   25aa8:	add	r0, r0, r3, lsl #2
   25aac:	add	ip, ip, r3
   25ab0:	ldr	r3, [sp, #208]	; 0xd0
   25ab4:	cmp	lr, r3
   25ab8:	bge	25a60 <GetDataSlab+0x995c>
   25abc:	ldr	r3, [r5, #4]
   25ac0:	add	r2, r3, #1
   25ac4:	ldr	r3, [sp, #204]	; 0xcc
   25ac8:	str	r2, [r5, #4]
   25acc:	ldr	r1, [r3, lr, lsl #2]
   25ad0:	sdiv	r3, r2, r1
   25ad4:	mls	r3, r1, r3, r2
   25ad8:	cmp	r3, #0
   25adc:	bne	25a4c <GetDataSlab+0x9948>
   25ae0:	ldr	r2, [r4, #4]
   25ae4:	str	r3, [r5, #4]
   25ae8:	ldr	r1, [sp, #196]	; 0xc4
   25aec:	sdiv	r3, ip, r2
   25af0:	ldr	r1, [r1, lr, lsl #2]
   25af4:	mls	r3, r2, r3, ip
   25af8:	cmp	r3, #0
   25afc:	ldrne	sl, [r4]
   25b00:	subne	r3, r2, r3
   25b04:	mlane	r3, r1, sl, r3
   25b08:	bne	25b1c <GetDataSlab+0x9a18>
   25b0c:	cmp	r1, #0
   25b10:	beq	25b24 <GetDataSlab+0x9a20>
   25b14:	ldr	r3, [r4]
   25b18:	mul	r3, r3, r1
   25b1c:	add	r0, r0, r3, lsl #2
   25b20:	add	ip, ip, r3
   25b24:	add	lr, lr, #1
   25b28:	add	r4, r4, #4
   25b2c:	add	r5, r5, #4
   25b30:	b	25ab0 <GetDataSlab+0x99ac>
   25b34:	mov	r6, #0
   25b38:	mov	r7, r6
   25b3c:	b	25a64 <GetDataSlab+0x9960>
   25b40:	ldr	r3, [r4], r7
   25b44:	add	r2, r2, #1
   25b48:	stm	r1, {r3, sl}
   25b4c:	add	r1, r1, #8
   25b50:	b	258fc <GetDataSlab+0x97f8>
   25b54:	add	r3, sp, #152	; 0x98
   25b58:	add	r3, r3, r4, lsl #2
   25b5c:	ldr	r3, [r3, #-120]	; 0xffffff88
   25b60:	add	r0, r0, r3, lsl #2
   25b64:	add	ip, ip, r3
   25b68:	add	r6, r6, r8
   25b6c:	b	258d0 <GetDataSlab+0x97cc>
   25b70:	ldr	r5, [sl]
   25b74:	add	lr, sp, #32
   25b78:	mov	r6, fp
   25b7c:	mov	r4, #0
   25b80:	mov	r2, #1
   25b84:	sub	r3, r5, #1
   25b88:	str	r3, [sp, #32]
   25b8c:	ldr	r3, [fp]
   25b90:	str	r3, [sp, #8]
   25b94:	str	r3, [sp, #112]	; 0x70
   25b98:	ldr	r3, [sp, #204]	; 0xcc
   25b9c:	ldr	r7, [r3]
   25ba0:	add	r3, sp, #112	; 0x70
   25ba4:	mov	ip, r3
   25ba8:	str	r3, [sp, #12]
   25bac:	mov	r9, r7
   25bb0:	ldr	r3, [sp, #208]	; 0xd0
   25bb4:	cmp	r2, r3
   25bb8:	blt	25ccc <GetDataSlab+0x9bc8>
   25bbc:	ldr	r3, [sp, #4]
   25bc0:	cmp	r5, #1
   25bc4:	add	ip, r3, r4, lsl #1
   25bc8:	beq	25e48 <GetDataSlab+0x9d44>
   25bcc:	bic	r3, r7, r7, asr #31
   25bd0:	mov	r6, #0
   25bd4:	lsl	r8, r5, #1
   25bd8:	mul	sl, r5, r7
   25bdc:	mul	fp, r5, r3
   25be0:	mul	r3, r8, r3
   25be4:	str	r3, [sp, #4]
   25be8:	cmp	r6, r9
   25bec:	bge	1c230 <GetDataSlab+0x12c>
   25bf0:	ldr	r3, [sp, #196]	; 0xc4
   25bf4:	mov	r1, #0
   25bf8:	ldr	r0, [r3]
   25bfc:	ldr	r3, [sp]
   25c00:	cmp	r0, #0
   25c04:	addne	ip, ip, r0, lsl #1
   25c08:	addne	r4, r4, r0
   25c0c:	add	r5, r3, r6, lsl #3
   25c10:	mov	lr, ip
   25c14:	cmp	r1, r7
   25c18:	blt	25e50 <GetDataSlab+0x9d4c>
   25c1c:	ldr	r3, [sp, #8]
   25c20:	add	r5, sp, #72	; 0x48
   25c24:	mov	lr, #1
   25c28:	sub	r3, r3, r0
   25c2c:	ldr	r0, [sp, #12]
   25c30:	sub	r2, r3, sl
   25c34:	add	r3, r4, fp
   25c38:	add	r4, r3, r2
   25c3c:	ldr	r3, [sp, #4]
   25c40:	add	r3, r3, r2, lsl #1
   25c44:	add	ip, ip, r3
   25c48:	ldr	r3, [sp, #208]	; 0xd0
   25c4c:	cmp	lr, r3
   25c50:	bge	25e78 <GetDataSlab+0x9d74>
   25c54:	ldr	r3, [r5, #4]
   25c58:	add	r2, r3, #1
   25c5c:	ldr	r3, [sp, #204]	; 0xcc
   25c60:	str	r2, [r5, #4]
   25c64:	ldr	r1, [r3, lr, lsl #2]
   25c68:	sdiv	r3, r2, r1
   25c6c:	mls	r3, r1, r3, r2
   25c70:	cmp	r3, #0
   25c74:	bne	25e64 <GetDataSlab+0x9d60>
   25c78:	ldr	r2, [r0, #4]
   25c7c:	str	r3, [r5, #4]
   25c80:	ldr	r1, [sp, #196]	; 0xc4
   25c84:	sdiv	r3, r4, r2
   25c88:	ldr	r1, [r1, lr, lsl #2]
   25c8c:	mls	r3, r2, r3, r4
   25c90:	cmp	r3, #0
   25c94:	subne	r3, r2, r3
   25c98:	ldrne	r2, [r0]
   25c9c:	mlane	r3, r1, r2, r3
   25ca0:	bne	25cb4 <GetDataSlab+0x9bb0>
   25ca4:	cmp	r1, #0
   25ca8:	beq	25cbc <GetDataSlab+0x9bb8>
   25cac:	ldr	r3, [r0]
   25cb0:	mul	r3, r3, r1
   25cb4:	add	ip, ip, r3, lsl #1
   25cb8:	add	r4, r4, r3
   25cbc:	add	lr, lr, #1
   25cc0:	add	r0, r0, #4
   25cc4:	add	r5, r5, #4
   25cc8:	b	25c48 <GetDataSlab+0x9b44>
   25ccc:	ldr	r3, [sl, r2, lsl #2]
   25cd0:	mov	r8, ip
   25cd4:	sub	r3, r3, #1
   25cd8:	str	r3, [lr, #4]
   25cdc:	ldr	r3, [r6], #4
   25ce0:	mov	r1, r6
   25ce4:	str	r3, [ip, #4]
   25ce8:	cmp	r1, fp
   25cec:	bne	25d1c <GetDataSlab+0x9c18>
   25cf0:	ldr	r1, [sp, #196]	; 0xc4
   25cf4:	add	ip, ip, #4
   25cf8:	add	lr, lr, #4
   25cfc:	ldr	r3, [sp, #204]	; 0xcc
   25d00:	ldr	r1, [r1, r2, lsl #2]
   25d04:	ldr	r3, [r3, r2, lsl #2]
   25d08:	add	r2, r2, #1
   25d0c:	mul	r9, r3, r9
   25d10:	ldr	r3, [r8]
   25d14:	mla	r4, r1, r3, r4
   25d18:	b	25bb0 <GetDataSlab+0x9aac>
   25d1c:	str	r1, [sp, #16]
   25d20:	ldr	r3, [r1, #-4]!
   25d24:	ldr	r0, [lr, #4]
   25d28:	mul	r3, r3, r0
   25d2c:	ldr	r0, [ip, #4]
   25d30:	str	r3, [lr, #4]
   25d34:	ldr	r3, [sp, #16]
   25d38:	ldr	r3, [r3]
   25d3c:	mul	r3, r3, r0
   25d40:	str	r3, [ip, #4]
   25d44:	b	25ce8 <GetDataSlab+0x9be4>
   25d48:	ldrsh	r2, [lr, #2]!
   25d4c:	add	r0, r0, #1
   25d50:	asr	r3, r2, #31
   25d54:	strd	r2, [r5], #8
   25d58:	b	25da0 <GetDataSlab+0x9c9c>
   25d5c:	add	r3, sp, #152	; 0x98
   25d60:	add	r3, r3, r0, lsl #2
   25d64:	ldr	r3, [r3, #-120]	; 0xffffff88
   25d68:	add	ip, ip, r3, lsl #1
   25d6c:	add	r4, r4, r3
   25d70:	add	r6, r6, r7
   25d74:	cmp	r6, r9
   25d78:	bge	1c230 <GetDataSlab+0x12c>
   25d7c:	ldr	r3, [sp, #196]	; 0xc4
   25d80:	mov	r0, #0
   25d84:	ldr	r1, [r3]
   25d88:	ldr	r3, [sp]
   25d8c:	cmp	r1, #0
   25d90:	addne	ip, ip, r1, lsl #1
   25d94:	addne	r4, r4, r1
   25d98:	add	r5, r3, r6, lsl #3
   25d9c:	sub	lr, ip, #2
   25da0:	cmp	r0, r7
   25da4:	blt	25d48 <GetDataSlab+0x9c44>
   25da8:	ldr	r3, [sp, #8]
   25dac:	add	r5, sp, #72	; 0x48
   25db0:	mov	r0, #1
   25db4:	ldr	lr, [sp, #12]
   25db8:	sub	r3, r3, r1
   25dbc:	add	ip, ip, r3, lsl #1
   25dc0:	add	r4, r4, r3
   25dc4:	ldr	r3, [sp, #208]	; 0xd0
   25dc8:	cmp	r0, r3
   25dcc:	bge	25d70 <GetDataSlab+0x9c6c>
   25dd0:	ldr	r3, [r5, #4]
   25dd4:	add	r2, r3, #1
   25dd8:	ldr	r3, [sp, #204]	; 0xcc
   25ddc:	str	r2, [r5, #4]
   25de0:	ldr	r1, [r3, r0, lsl #2]
   25de4:	sdiv	r3, r2, r1
   25de8:	mls	r3, r1, r3, r2
   25dec:	cmp	r3, #0
   25df0:	bne	25d5c <GetDataSlab+0x9c58>
   25df4:	ldr	r2, [lr, #4]
   25df8:	str	r3, [r5, #4]
   25dfc:	ldr	r1, [sp, #196]	; 0xc4
   25e00:	sdiv	r3, r4, r2
   25e04:	ldr	r1, [r1, r0, lsl #2]
   25e08:	mls	r3, r2, r3, r4
   25e0c:	cmp	r3, #0
   25e10:	ldrne	r8, [lr]
   25e14:	subne	r3, r2, r3
   25e18:	mlane	r3, r1, r8, r3
   25e1c:	bne	25e30 <GetDataSlab+0x9d2c>
   25e20:	cmp	r1, #0
   25e24:	beq	25e38 <GetDataSlab+0x9d34>
   25e28:	ldr	r3, [lr]
   25e2c:	mul	r3, r3, r1
   25e30:	add	ip, ip, r3, lsl #1
   25e34:	add	r4, r4, r3
   25e38:	add	r0, r0, #1
   25e3c:	add	lr, lr, #4
   25e40:	add	r5, r5, #4
   25e44:	b	25dc4 <GetDataSlab+0x9cc0>
   25e48:	mov	r6, #0
   25e4c:	b	25d74 <GetDataSlab+0x9c70>
   25e50:	ldrsh	r2, [lr], r8
   25e54:	add	r1, r1, #1
   25e58:	asr	r3, r2, #31
   25e5c:	strd	r2, [r5], #8
   25e60:	b	25c14 <GetDataSlab+0x9b10>
   25e64:	add	r3, sp, #152	; 0x98
   25e68:	add	r3, r3, lr, lsl #2
   25e6c:	ldr	r3, [r3, #-120]	; 0xffffff88
   25e70:	add	ip, ip, r3, lsl #1
   25e74:	add	r4, r4, r3
   25e78:	add	r6, r6, r7
   25e7c:	b	25be8 <GetDataSlab+0x9ae4>
   25e80:	ldr	r5, [sl]
   25e84:	add	lr, sp, #32
   25e88:	mov	r6, fp
   25e8c:	mov	r4, #0
   25e90:	mov	r2, #1
   25e94:	sub	r3, r5, #1
   25e98:	str	r3, [sp, #32]
   25e9c:	ldr	r3, [fp]
   25ea0:	str	r3, [sp, #8]
   25ea4:	str	r3, [sp, #112]	; 0x70
   25ea8:	ldr	r3, [sp, #204]	; 0xcc
   25eac:	ldr	r7, [r3]
   25eb0:	add	r3, sp, #112	; 0x70
   25eb4:	mov	ip, r3
   25eb8:	str	r3, [sp, #12]
   25ebc:	mov	r9, r7
   25ec0:	ldr	r3, [sp, #208]	; 0xd0
   25ec4:	cmp	r2, r3
   25ec8:	blt	25fdc <GetDataSlab+0x9ed8>
   25ecc:	ldr	r3, [sp, #4]
   25ed0:	cmp	r5, #1
   25ed4:	add	ip, r3, r4, lsl #1
   25ed8:	beq	26158 <GetDataSlab+0xa054>
   25edc:	bic	r3, r7, r7, asr #31
   25ee0:	mov	r6, #0
   25ee4:	lsl	r8, r5, #1
   25ee8:	mul	sl, r5, r7
   25eec:	mul	r2, r3, r5
   25ef0:	mul	fp, r3, r8
   25ef4:	str	r2, [sp, #4]
   25ef8:	cmp	r6, r9
   25efc:	bge	1c230 <GetDataSlab+0x12c>
   25f00:	ldr	r3, [sp, #196]	; 0xc4
   25f04:	mov	r1, #0
   25f08:	ldr	r0, [r3]
   25f0c:	ldr	r3, [sp]
   25f10:	cmp	r0, #0
   25f14:	addne	ip, ip, r0, lsl #1
   25f18:	addne	r4, r4, r0
   25f1c:	add	r5, r3, r6, lsl #3
   25f20:	mov	lr, ip
   25f24:	cmp	r1, r7
   25f28:	blt	26160 <GetDataSlab+0xa05c>
   25f2c:	ldr	r3, [sp, #8]
   25f30:	add	r5, sp, #72	; 0x48
   25f34:	mov	lr, #1
   25f38:	sub	r3, r3, r0
   25f3c:	ldr	r0, [sp, #12]
   25f40:	sub	r2, r3, sl
   25f44:	ldr	r3, [sp, #4]
   25f48:	add	r3, r4, r3
   25f4c:	add	r4, r3, r2
   25f50:	add	r3, fp, r2, lsl #1
   25f54:	add	ip, ip, r3
   25f58:	ldr	r3, [sp, #208]	; 0xd0
   25f5c:	cmp	lr, r3
   25f60:	bge	26188 <GetDataSlab+0xa084>
   25f64:	ldr	r3, [r5, #4]
   25f68:	add	r2, r3, #1
   25f6c:	ldr	r3, [sp, #204]	; 0xcc
   25f70:	str	r2, [r5, #4]
   25f74:	ldr	r1, [r3, lr, lsl #2]
   25f78:	sdiv	r3, r2, r1
   25f7c:	mls	r3, r1, r3, r2
   25f80:	cmp	r3, #0
   25f84:	bne	26174 <GetDataSlab+0xa070>
   25f88:	ldr	r2, [r0, #4]
   25f8c:	str	r3, [r5, #4]
   25f90:	ldr	r1, [sp, #196]	; 0xc4
   25f94:	sdiv	r3, r4, r2
   25f98:	ldr	r1, [r1, lr, lsl #2]
   25f9c:	mls	r3, r2, r3, r4
   25fa0:	cmp	r3, #0
   25fa4:	subne	r3, r2, r3
   25fa8:	ldrne	r2, [r0]
   25fac:	mlane	r3, r1, r2, r3
   25fb0:	bne	25fc4 <GetDataSlab+0x9ec0>
   25fb4:	cmp	r1, #0
   25fb8:	beq	25fcc <GetDataSlab+0x9ec8>
   25fbc:	ldr	r3, [r0]
   25fc0:	mul	r3, r3, r1
   25fc4:	add	ip, ip, r3, lsl #1
   25fc8:	add	r4, r4, r3
   25fcc:	add	lr, lr, #1
   25fd0:	add	r0, r0, #4
   25fd4:	add	r5, r5, #4
   25fd8:	b	25f58 <GetDataSlab+0x9e54>
   25fdc:	ldr	r3, [sl, r2, lsl #2]
   25fe0:	mov	r8, ip
   25fe4:	sub	r3, r3, #1
   25fe8:	str	r3, [lr, #4]
   25fec:	ldr	r3, [r6], #4
   25ff0:	mov	r1, r6
   25ff4:	str	r3, [ip, #4]
   25ff8:	cmp	r1, fp
   25ffc:	bne	2602c <GetDataSlab+0x9f28>
   26000:	ldr	r1, [sp, #196]	; 0xc4
   26004:	add	ip, ip, #4
   26008:	add	lr, lr, #4
   2600c:	ldr	r3, [sp, #204]	; 0xcc
   26010:	ldr	r1, [r1, r2, lsl #2]
   26014:	ldr	r3, [r3, r2, lsl #2]
   26018:	add	r2, r2, #1
   2601c:	mul	r9, r3, r9
   26020:	ldr	r3, [r8]
   26024:	mla	r4, r1, r3, r4
   26028:	b	25ec0 <GetDataSlab+0x9dbc>
   2602c:	str	r1, [sp, #16]
   26030:	ldr	r3, [r1, #-4]!
   26034:	ldr	r0, [lr, #4]
   26038:	mul	r3, r3, r0
   2603c:	ldr	r0, [ip, #4]
   26040:	str	r3, [lr, #4]
   26044:	ldr	r3, [sp, #16]
   26048:	ldr	r3, [r3]
   2604c:	mul	r3, r3, r0
   26050:	str	r3, [ip, #4]
   26054:	b	25ff8 <GetDataSlab+0x9ef4>
   26058:	ldrh	r2, [lr, #2]!
   2605c:	mov	r3, #0
   26060:	add	r0, r0, #1
   26064:	strd	r2, [r5], #8
   26068:	b	260b0 <GetDataSlab+0x9fac>
   2606c:	add	r3, sp, #152	; 0x98
   26070:	add	r3, r3, r0, lsl #2
   26074:	ldr	r3, [r3, #-120]	; 0xffffff88
   26078:	add	ip, ip, r3, lsl #1
   2607c:	add	r4, r4, r3
   26080:	add	r6, r6, r7
   26084:	cmp	r6, r9
   26088:	bge	1c230 <GetDataSlab+0x12c>
   2608c:	ldr	r3, [sp, #196]	; 0xc4
   26090:	mov	r0, #0
   26094:	ldr	r1, [r3]
   26098:	ldr	r3, [sp]
   2609c:	cmp	r1, #0
   260a0:	addne	ip, ip, r1, lsl #1
   260a4:	addne	r4, r4, r1
   260a8:	add	r5, r3, r6, lsl #3
   260ac:	sub	lr, ip, #2
   260b0:	cmp	r0, r7
   260b4:	blt	26058 <GetDataSlab+0x9f54>
   260b8:	ldr	r3, [sp, #8]
   260bc:	add	r5, sp, #72	; 0x48
   260c0:	mov	r0, #1
   260c4:	ldr	lr, [sp, #12]
   260c8:	sub	r3, r3, r1
   260cc:	add	ip, ip, r3, lsl #1
   260d0:	add	r4, r4, r3
   260d4:	ldr	r3, [sp, #208]	; 0xd0
   260d8:	cmp	r0, r3
   260dc:	bge	26080 <GetDataSlab+0x9f7c>
   260e0:	ldr	r3, [r5, #4]
   260e4:	add	r2, r3, #1
   260e8:	ldr	r3, [sp, #204]	; 0xcc
   260ec:	str	r2, [r5, #4]
   260f0:	ldr	r1, [r3, r0, lsl #2]
   260f4:	sdiv	r3, r2, r1
   260f8:	mls	r3, r1, r3, r2
   260fc:	cmp	r3, #0
   26100:	bne	2606c <GetDataSlab+0x9f68>
   26104:	ldr	r2, [lr, #4]
   26108:	str	r3, [r5, #4]
   2610c:	ldr	r1, [sp, #196]	; 0xc4
   26110:	sdiv	r3, r4, r2
   26114:	ldr	r1, [r1, r0, lsl #2]
   26118:	mls	r3, r2, r3, r4
   2611c:	cmp	r3, #0
   26120:	ldrne	r8, [lr]
   26124:	subne	r3, r2, r3
   26128:	mlane	r3, r1, r8, r3
   2612c:	bne	26140 <GetDataSlab+0xa03c>
   26130:	cmp	r1, #0
   26134:	beq	26148 <GetDataSlab+0xa044>
   26138:	ldr	r3, [lr]
   2613c:	mul	r3, r3, r1
   26140:	add	ip, ip, r3, lsl #1
   26144:	add	r4, r4, r3
   26148:	add	r0, r0, #1
   2614c:	add	lr, lr, #4
   26150:	add	r5, r5, #4
   26154:	b	260d4 <GetDataSlab+0x9fd0>
   26158:	mov	r6, #0
   2615c:	b	26084 <GetDataSlab+0x9f80>
   26160:	ldrh	r2, [lr], r8
   26164:	mov	r3, #0
   26168:	add	r1, r1, #1
   2616c:	strd	r2, [r5], #8
   26170:	b	25f24 <GetDataSlab+0x9e20>
   26174:	add	r3, sp, #152	; 0x98
   26178:	add	r3, r3, lr, lsl #2
   2617c:	ldr	r3, [r3, #-120]	; 0xffffff88
   26180:	add	ip, ip, r3, lsl #1
   26184:	add	r4, r4, r3
   26188:	add	r6, r6, r7
   2618c:	b	25ef8 <GetDataSlab+0x9df4>
   26190:	ldr	r8, [sl]
   26194:	add	lr, sp, #32
   26198:	mov	r5, fp
   2619c:	mov	r4, #0
   261a0:	mov	r2, #1
   261a4:	sub	r3, r8, #1
   261a8:	str	r3, [sp, #32]
   261ac:	ldr	r3, [fp]
   261b0:	str	r3, [sp, #8]
   261b4:	str	r3, [sp, #112]	; 0x70
   261b8:	ldr	r3, [sp, #204]	; 0xcc
   261bc:	ldr	r7, [r3]
   261c0:	add	r3, sp, #112	; 0x70
   261c4:	mov	ip, r3
   261c8:	str	r3, [sp, #12]
   261cc:	mov	r9, r7
   261d0:	ldr	r3, [sp, #208]	; 0xd0
   261d4:	cmp	r2, r3
   261d8:	blt	262dc <GetDataSlab+0xa1d8>
   261dc:	ldr	r3, [sp, #4]
   261e0:	cmp	r8, #1
   261e4:	add	lr, r3, r4
   261e8:	beq	26454 <GetDataSlab+0xa350>
   261ec:	bic	r3, r7, r7, asr #31
   261f0:	mov	r6, #0
   261f4:	mul	fp, r8, r7
   261f8:	mul	sl, r8, r3
   261fc:	cmp	r6, r9
   26200:	bge	1c230 <GetDataSlab+0x12c>
   26204:	ldr	r3, [sp, #196]	; 0xc4
   26208:	mov	r1, #0
   2620c:	ldr	r0, [r3]
   26210:	ldr	r3, [sp]
   26214:	cmp	r0, #0
   26218:	addne	lr, lr, r0
   2621c:	addne	r4, r4, r0
   26220:	add	r5, r3, r6, lsl #3
   26224:	mov	ip, lr
   26228:	cmp	r1, r7
   2622c:	blt	2645c <GetDataSlab+0xa358>
   26230:	ldr	r3, [sp, #8]
   26234:	add	r5, sp, #72	; 0x48
   26238:	mov	ip, #1
   2623c:	sub	r3, r3, r0
   26240:	ldr	r0, [sp, #12]
   26244:	sub	r2, r3, fp
   26248:	add	r3, r4, sl
   2624c:	add	r4, r3, r2
   26250:	add	r3, sl, r2
   26254:	add	lr, lr, r3
   26258:	ldr	r3, [sp, #208]	; 0xd0
   2625c:	cmp	ip, r3
   26260:	bge	26484 <GetDataSlab+0xa380>
   26264:	ldr	r3, [r5, #4]
   26268:	add	r2, r3, #1
   2626c:	ldr	r3, [sp, #204]	; 0xcc
   26270:	str	r2, [r5, #4]
   26274:	ldr	r1, [r3, ip, lsl #2]
   26278:	sdiv	r3, r2, r1
   2627c:	mls	r3, r1, r3, r2
   26280:	cmp	r3, #0
   26284:	bne	26470 <GetDataSlab+0xa36c>
   26288:	ldr	r2, [r0, #4]
   2628c:	str	r3, [r5, #4]
   26290:	ldr	r1, [sp, #196]	; 0xc4
   26294:	sdiv	r3, r4, r2
   26298:	ldr	r1, [r1, ip, lsl #2]
   2629c:	mls	r3, r2, r3, r4
   262a0:	cmp	r3, #0
   262a4:	subne	r3, r2, r3
   262a8:	ldrne	r2, [r0]
   262ac:	mlane	r3, r1, r2, r3
   262b0:	bne	262c4 <GetDataSlab+0xa1c0>
   262b4:	cmp	r1, #0
   262b8:	beq	262cc <GetDataSlab+0xa1c8>
   262bc:	ldr	r3, [r0]
   262c0:	mul	r3, r3, r1
   262c4:	add	lr, lr, r3
   262c8:	add	r4, r4, r3
   262cc:	add	ip, ip, #1
   262d0:	add	r0, r0, #4
   262d4:	add	r5, r5, #4
   262d8:	b	26258 <GetDataSlab+0xa154>
   262dc:	ldr	r3, [sl, r2, lsl #2]
   262e0:	mov	r6, ip
   262e4:	sub	r3, r3, #1
   262e8:	str	r3, [lr, #4]
   262ec:	ldr	r3, [r5], #4
   262f0:	mov	r1, r5
   262f4:	str	r3, [ip, #4]
   262f8:	cmp	r1, fp
   262fc:	bne	2632c <GetDataSlab+0xa228>
   26300:	ldr	r1, [sp, #196]	; 0xc4
   26304:	add	ip, ip, #4
   26308:	add	lr, lr, #4
   2630c:	ldr	r3, [sp, #204]	; 0xcc
   26310:	ldr	r1, [r1, r2, lsl #2]
   26314:	ldr	r3, [r3, r2, lsl #2]
   26318:	add	r2, r2, #1
   2631c:	mul	r9, r3, r9
   26320:	ldr	r3, [r6]
   26324:	mla	r4, r1, r3, r4
   26328:	b	261d0 <GetDataSlab+0xa0cc>
   2632c:	str	r1, [sp, #16]
   26330:	ldr	r3, [r1, #-4]!
   26334:	ldr	r0, [lr, #4]
   26338:	mul	r3, r3, r0
   2633c:	ldr	r0, [ip, #4]
   26340:	str	r3, [lr, #4]
   26344:	ldr	r3, [sp, #16]
   26348:	ldr	r3, [r3]
   2634c:	mul	r3, r3, r0
   26350:	str	r3, [ip, #4]
   26354:	b	262f8 <GetDataSlab+0xa1f4>
   26358:	ldrsb	r0, [lr, r2]
   2635c:	add	r2, r2, #1
   26360:	asr	r1, r0, #31
   26364:	strd	r0, [ip], #8
   26368:	b	263ac <GetDataSlab+0xa2a8>
   2636c:	add	r3, sp, #152	; 0x98
   26370:	add	r3, r3, r0, lsl #2
   26374:	ldr	r3, [r3, #-120]	; 0xffffff88
   26378:	add	r4, r4, r3
   2637c:	add	lr, lr, r3
   26380:	add	r6, r6, r7
   26384:	cmp	r6, r9
   26388:	bge	1c230 <GetDataSlab+0x12c>
   2638c:	ldr	r2, [sp]
   26390:	ldr	r3, [sp, #196]	; 0xc4
   26394:	add	ip, r2, r6, lsl #3
   26398:	mov	r2, #0
   2639c:	ldr	r3, [r3]
   263a0:	cmp	r3, #0
   263a4:	addne	lr, lr, r3
   263a8:	addne	r4, r4, r3
   263ac:	cmp	r2, r7
   263b0:	blt	26358 <GetDataSlab+0xa254>
   263b4:	ldr	r2, [sp, #8]
   263b8:	add	r5, sp, #72	; 0x48
   263bc:	mov	r0, #1
   263c0:	ldr	ip, [sp, #12]
   263c4:	sub	r3, r2, r3
   263c8:	add	r4, r4, r3
   263cc:	add	lr, lr, r3
   263d0:	ldr	r3, [sp, #208]	; 0xd0
   263d4:	cmp	r0, r3
   263d8:	bge	26380 <GetDataSlab+0xa27c>
   263dc:	ldr	r3, [r5, #4]
   263e0:	add	r2, r3, #1
   263e4:	ldr	r3, [sp, #204]	; 0xcc
   263e8:	str	r2, [r5, #4]
   263ec:	ldr	r1, [r3, r0, lsl #2]
   263f0:	sdiv	r3, r2, r1
   263f4:	mls	r3, r1, r3, r2
   263f8:	cmp	r3, #0
   263fc:	bne	2636c <GetDataSlab+0xa268>
   26400:	ldr	r2, [ip, #4]
   26404:	str	r3, [r5, #4]
   26408:	ldr	r1, [sp, #196]	; 0xc4
   2640c:	sdiv	r3, r4, r2
   26410:	ldr	r1, [r1, r0, lsl #2]
   26414:	mls	r3, r2, r3, r4
   26418:	cmp	r3, #0
   2641c:	ldrne	r8, [ip]
   26420:	subne	r3, r2, r3
   26424:	mlane	r3, r1, r8, r3
   26428:	bne	2643c <GetDataSlab+0xa338>
   2642c:	cmp	r1, #0
   26430:	beq	26444 <GetDataSlab+0xa340>
   26434:	ldr	r3, [ip]
   26438:	mul	r3, r3, r1
   2643c:	add	lr, lr, r3
   26440:	add	r4, r4, r3
   26444:	add	r0, r0, #1
   26448:	add	ip, ip, #4
   2644c:	add	r5, r5, #4
   26450:	b	263d0 <GetDataSlab+0xa2cc>
   26454:	mov	r6, #0
   26458:	b	26384 <GetDataSlab+0xa280>
   2645c:	ldrsb	r2, [ip], r8
   26460:	add	r1, r1, #1
   26464:	asr	r3, r2, #31
   26468:	strd	r2, [r5], #8
   2646c:	b	26228 <GetDataSlab+0xa124>
   26470:	add	r3, sp, #152	; 0x98
   26474:	add	r3, r3, ip, lsl #2
   26478:	ldr	r3, [r3, #-120]	; 0xffffff88
   2647c:	add	r4, r4, r3
   26480:	add	lr, lr, r3
   26484:	add	r6, r6, r7
   26488:	b	261fc <GetDataSlab+0xa0f8>
   2648c:	ldr	r8, [sl]
   26490:	add	lr, sp, #32
   26494:	mov	r5, fp
   26498:	mov	r4, #0
   2649c:	mov	r2, #1
   264a0:	sub	r3, r8, #1
   264a4:	str	r3, [sp, #32]
   264a8:	ldr	r3, [fp]
   264ac:	str	r3, [sp, #8]
   264b0:	str	r3, [sp, #112]	; 0x70
   264b4:	ldr	r3, [sp, #204]	; 0xcc
   264b8:	ldr	r7, [r3]
   264bc:	add	r3, sp, #112	; 0x70
   264c0:	mov	ip, r3
   264c4:	str	r3, [sp, #12]
   264c8:	mov	r9, r7
   264cc:	ldr	r3, [sp, #208]	; 0xd0
   264d0:	cmp	r2, r3
   264d4:	blt	265d8 <GetDataSlab+0xa4d4>
   264d8:	ldr	r3, [sp, #4]
   264dc:	cmp	r8, #1
   264e0:	add	lr, r3, r4
   264e4:	beq	26750 <GetDataSlab+0xa64c>
   264e8:	bic	r3, r7, r7, asr #31
   264ec:	mov	r6, #0
   264f0:	mul	fp, r8, r7
   264f4:	mul	sl, r8, r3
   264f8:	cmp	r6, r9
   264fc:	bge	1c230 <GetDataSlab+0x12c>
   26500:	ldr	r3, [sp, #196]	; 0xc4
   26504:	mov	r1, #0
   26508:	ldr	r0, [r3]
   2650c:	ldr	r3, [sp]
   26510:	cmp	r0, #0
   26514:	addne	lr, lr, r0
   26518:	addne	r4, r4, r0
   2651c:	add	r5, r3, r6, lsl #3
   26520:	mov	ip, lr
   26524:	cmp	r1, r7
   26528:	blt	26758 <GetDataSlab+0xa654>
   2652c:	ldr	r3, [sp, #8]
   26530:	add	r5, sp, #72	; 0x48
   26534:	mov	ip, #1
   26538:	sub	r3, r3, r0
   2653c:	ldr	r0, [sp, #12]
   26540:	sub	r2, r3, fp
   26544:	add	r3, r4, sl
   26548:	add	r4, r3, r2
   2654c:	add	r3, r2, sl
   26550:	add	lr, lr, r3
   26554:	ldr	r3, [sp, #208]	; 0xd0
   26558:	cmp	ip, r3
   2655c:	bge	26780 <GetDataSlab+0xa67c>
   26560:	ldr	r3, [r5, #4]
   26564:	add	r2, r3, #1
   26568:	ldr	r3, [sp, #204]	; 0xcc
   2656c:	str	r2, [r5, #4]
   26570:	ldr	r1, [r3, ip, lsl #2]
   26574:	sdiv	r3, r2, r1
   26578:	mls	r3, r1, r3, r2
   2657c:	cmp	r3, #0
   26580:	bne	2676c <GetDataSlab+0xa668>
   26584:	ldr	r2, [r0, #4]
   26588:	str	r3, [r5, #4]
   2658c:	ldr	r1, [sp, #196]	; 0xc4
   26590:	sdiv	r3, r4, r2
   26594:	ldr	r1, [r1, ip, lsl #2]
   26598:	mls	r3, r2, r3, r4
   2659c:	cmp	r3, #0
   265a0:	subne	r3, r2, r3
   265a4:	ldrne	r2, [r0]
   265a8:	mlane	r3, r1, r2, r3
   265ac:	bne	265c0 <GetDataSlab+0xa4bc>
   265b0:	cmp	r1, #0
   265b4:	beq	265c8 <GetDataSlab+0xa4c4>
   265b8:	ldr	r3, [r0]
   265bc:	mul	r3, r3, r1
   265c0:	add	lr, lr, r3
   265c4:	add	r4, r4, r3
   265c8:	add	ip, ip, #1
   265cc:	add	r0, r0, #4
   265d0:	add	r5, r5, #4
   265d4:	b	26554 <GetDataSlab+0xa450>
   265d8:	ldr	r3, [sl, r2, lsl #2]
   265dc:	mov	r6, ip
   265e0:	sub	r3, r3, #1
   265e4:	str	r3, [lr, #4]
   265e8:	ldr	r3, [r5], #4
   265ec:	mov	r1, r5
   265f0:	str	r3, [ip, #4]
   265f4:	cmp	r1, fp
   265f8:	bne	26628 <GetDataSlab+0xa524>
   265fc:	ldr	r1, [sp, #196]	; 0xc4
   26600:	add	ip, ip, #4
   26604:	add	lr, lr, #4
   26608:	ldr	r3, [sp, #204]	; 0xcc
   2660c:	ldr	r1, [r1, r2, lsl #2]
   26610:	ldr	r3, [r3, r2, lsl #2]
   26614:	add	r2, r2, #1
   26618:	mul	r9, r3, r9
   2661c:	ldr	r3, [r6]
   26620:	mla	r4, r1, r3, r4
   26624:	b	264cc <GetDataSlab+0xa3c8>
   26628:	str	r1, [sp, #16]
   2662c:	ldr	r3, [r1, #-4]!
   26630:	ldr	r0, [lr, #4]
   26634:	mul	r3, r3, r0
   26638:	ldr	r0, [ip, #4]
   2663c:	str	r3, [lr, #4]
   26640:	ldr	r3, [sp, #16]
   26644:	ldr	r3, [r3]
   26648:	mul	r3, r3, r0
   2664c:	str	r3, [ip, #4]
   26650:	b	265f4 <GetDataSlab+0xa4f0>
   26654:	ldrb	r0, [lr, r2]
   26658:	mov	r1, #0
   2665c:	add	r2, r2, #1
   26660:	strd	r0, [ip], #8
   26664:	b	266a8 <GetDataSlab+0xa5a4>
   26668:	add	r3, sp, #152	; 0x98
   2666c:	add	r3, r3, r0, lsl #2
   26670:	ldr	r3, [r3, #-120]	; 0xffffff88
   26674:	add	r4, r4, r3
   26678:	add	lr, lr, r3
   2667c:	add	r6, r6, r7
   26680:	cmp	r6, r9
   26684:	bge	1c230 <GetDataSlab+0x12c>
   26688:	ldr	r2, [sp]
   2668c:	ldr	r3, [sp, #196]	; 0xc4
   26690:	add	ip, r2, r6, lsl #3
   26694:	mov	r2, #0
   26698:	ldr	r3, [r3]
   2669c:	cmp	r3, #0
   266a0:	addne	lr, lr, r3
   266a4:	addne	r4, r4, r3
   266a8:	cmp	r2, r7
   266ac:	blt	26654 <GetDataSlab+0xa550>
   266b0:	ldr	r2, [sp, #8]
   266b4:	add	r5, sp, #72	; 0x48
   266b8:	mov	r0, #1
   266bc:	ldr	ip, [sp, #12]
   266c0:	sub	r3, r2, r3
   266c4:	add	r4, r4, r3
   266c8:	add	lr, lr, r3
   266cc:	ldr	r3, [sp, #208]	; 0xd0
   266d0:	cmp	r0, r3
   266d4:	bge	2667c <GetDataSlab+0xa578>
   266d8:	ldr	r3, [r5, #4]
   266dc:	add	r2, r3, #1
   266e0:	ldr	r3, [sp, #204]	; 0xcc
   266e4:	str	r2, [r5, #4]
   266e8:	ldr	r1, [r3, r0, lsl #2]
   266ec:	sdiv	r3, r2, r1
   266f0:	mls	r3, r1, r3, r2
   266f4:	cmp	r3, #0
   266f8:	bne	26668 <GetDataSlab+0xa564>
   266fc:	ldr	r2, [ip, #4]
   26700:	str	r3, [r5, #4]
   26704:	ldr	r1, [sp, #196]	; 0xc4
   26708:	sdiv	r3, r4, r2
   2670c:	ldr	r1, [r1, r0, lsl #2]
   26710:	mls	r3, r2, r3, r4
   26714:	cmp	r3, #0
   26718:	ldrne	r8, [ip]
   2671c:	subne	r3, r2, r3
   26720:	mlane	r3, r1, r8, r3
   26724:	bne	26738 <GetDataSlab+0xa634>
   26728:	cmp	r1, #0
   2672c:	beq	26740 <GetDataSlab+0xa63c>
   26730:	ldr	r3, [ip]
   26734:	mul	r3, r3, r1
   26738:	add	lr, lr, r3
   2673c:	add	r4, r4, r3
   26740:	add	r0, r0, #1
   26744:	add	ip, ip, #4
   26748:	add	r5, r5, #4
   2674c:	b	266cc <GetDataSlab+0xa5c8>
   26750:	mov	r6, #0
   26754:	b	26680 <GetDataSlab+0xa57c>
   26758:	ldrb	r2, [ip], r8
   2675c:	mov	r3, #0
   26760:	add	r1, r1, #1
   26764:	strd	r2, [r5], #8
   26768:	b	26524 <GetDataSlab+0xa420>
   2676c:	add	r3, sp, #152	; 0x98
   26770:	add	r3, r3, ip, lsl #2
   26774:	ldr	r3, [r3, #-120]	; 0xffffff88
   26778:	add	r4, r4, r3
   2677c:	add	lr, lr, r3
   26780:	add	r6, r6, r7
   26784:	b	264f8 <GetDataSlab+0xa3f4>
   26788:	cmp	r5, #12
   2678c:	bne	26aa8 <GetDataSlab+0xa9a4>
   26790:	ldr	r5, [sl]
   26794:	add	lr, sp, #32
   26798:	mov	r6, fp
   2679c:	mov	r4, #0
   267a0:	mov	r2, #1
   267a4:	sub	r3, r5, #1
   267a8:	str	r3, [sp, #32]
   267ac:	ldr	r3, [fp]
   267b0:	str	r3, [sp, #8]
   267b4:	str	r3, [sp, #112]	; 0x70
   267b8:	ldr	r3, [sp, #204]	; 0xcc
   267bc:	ldr	r7, [r3]
   267c0:	add	r3, sp, #112	; 0x70
   267c4:	mov	ip, r3
   267c8:	str	r3, [sp, #12]
   267cc:	mov	r9, r7
   267d0:	ldr	r3, [sp, #208]	; 0xd0
   267d4:	cmp	r2, r3
   267d8:	blt	268f8 <GetDataSlab+0xa7f4>
   267dc:	ldr	r3, [sp, #4]
   267e0:	cmp	r5, #1
   267e4:	add	ip, r3, r4, lsl #3
   267e8:	beq	26a70 <GetDataSlab+0xa96c>
   267ec:	mul	r3, r5, r7
   267f0:	mov	r6, #0
   267f4:	lsl	r8, r5, #3
   267f8:	str	r3, [sp, #4]
   267fc:	bic	r3, r7, r7, asr #31
   26800:	mul	r2, r5, r3
   26804:	mul	r3, r8, r3
   26808:	str	r3, [sp, #16]
   2680c:	str	r2, [sp, #20]
   26810:	cmp	r6, r9
   26814:	bge	1c230 <GetDataSlab+0x12c>
   26818:	ldr	r3, [sp, #196]	; 0xc4
   2681c:	mov	r2, #0
   26820:	ldr	r1, [r3]
   26824:	ldr	r3, [sp]
   26828:	cmp	r1, #0
   2682c:	addne	ip, ip, r1, lsl #3
   26830:	addne	r4, r4, r1
   26834:	add	r0, r3, r6, lsl #3
   26838:	mov	r3, ip
   2683c:	cmp	r2, r7
   26840:	blt	26a78 <GetDataSlab+0xa974>
   26844:	ldrd	r2, [sp, #4]
   26848:	add	r5, sp, #72	; 0x48
   2684c:	mov	lr, #1
   26850:	ldr	r0, [sp, #12]
   26854:	sub	r3, r3, r1
   26858:	sub	r2, r3, r2
   2685c:	ldr	r3, [sp, #20]
   26860:	add	r3, r4, r3
   26864:	add	r4, r3, r2
   26868:	ldr	r3, [sp, #16]
   2686c:	add	r3, r3, r2, lsl #3
   26870:	add	ip, ip, r3
   26874:	ldr	r3, [sp, #208]	; 0xd0
   26878:	cmp	lr, r3
   2687c:	bge	26aa0 <GetDataSlab+0xa99c>
   26880:	ldr	r3, [r5, #4]
   26884:	add	r2, r3, #1
   26888:	ldr	r3, [sp, #204]	; 0xcc
   2688c:	str	r2, [r5, #4]
   26890:	ldr	r1, [r3, lr, lsl #2]
   26894:	sdiv	r3, r2, r1
   26898:	mls	r3, r1, r3, r2
   2689c:	cmp	r3, #0
   268a0:	bne	26a8c <GetDataSlab+0xa988>
   268a4:	ldr	r2, [r0, #4]
   268a8:	str	r3, [r5, #4]
   268ac:	ldr	r1, [sp, #196]	; 0xc4
   268b0:	sdiv	r3, r4, r2
   268b4:	ldr	r1, [r1, lr, lsl #2]
   268b8:	mls	r3, r2, r3, r4
   268bc:	cmp	r3, #0
   268c0:	subne	r3, r2, r3
   268c4:	ldrne	r2, [r0]
   268c8:	mlane	r3, r1, r2, r3
   268cc:	bne	268e0 <GetDataSlab+0xa7dc>
   268d0:	cmp	r1, #0
   268d4:	beq	268e8 <GetDataSlab+0xa7e4>
   268d8:	ldr	r3, [r0]
   268dc:	mul	r3, r3, r1
   268e0:	add	ip, ip, r3, lsl #3
   268e4:	add	r4, r4, r3
   268e8:	add	lr, lr, #1
   268ec:	add	r0, r0, #4
   268f0:	add	r5, r5, #4
   268f4:	b	26874 <GetDataSlab+0xa770>
   268f8:	ldr	r3, [sl, r2, lsl #2]
   268fc:	mov	r8, ip
   26900:	sub	r3, r3, #1
   26904:	str	r3, [lr, #4]
   26908:	ldr	r3, [r6], #4
   2690c:	mov	r1, r6
   26910:	str	r3, [ip, #4]
   26914:	cmp	r1, fp
   26918:	bne	26948 <GetDataSlab+0xa844>
   2691c:	ldr	r1, [sp, #196]	; 0xc4
   26920:	add	ip, ip, #4
   26924:	add	lr, lr, #4
   26928:	ldr	r3, [sp, #204]	; 0xcc
   2692c:	ldr	r1, [r1, r2, lsl #2]
   26930:	ldr	r3, [r3, r2, lsl #2]
   26934:	add	r2, r2, #1
   26938:	mul	r9, r3, r9
   2693c:	ldr	r3, [r8]
   26940:	mla	r4, r1, r3, r4
   26944:	b	267d0 <GetDataSlab+0xa6cc>
   26948:	str	r1, [sp, #16]
   2694c:	ldr	r3, [r1, #-4]!
   26950:	ldr	r0, [lr, #4]
   26954:	mul	r3, r3, r0
   26958:	ldr	r0, [ip, #4]
   2695c:	str	r3, [lr, #4]
   26960:	ldr	r3, [sp, #16]
   26964:	ldr	r3, [r3]
   26968:	mul	r3, r3, r0
   2696c:	str	r3, [ip, #4]
   26970:	b	26914 <GetDataSlab+0xa810>
   26974:	ldrd	r2, [lr, #8]!
   26978:	add	r0, r0, #1
   2697c:	strd	r2, [r5], #8
   26980:	b	269c8 <GetDataSlab+0xa8c4>
   26984:	add	r3, sp, #152	; 0x98
   26988:	add	r3, r3, r0, lsl #2
   2698c:	ldr	r3, [r3, #-120]	; 0xffffff88
   26990:	add	ip, ip, r3, lsl #3
   26994:	add	r4, r4, r3
   26998:	add	r6, r6, r7
   2699c:	cmp	r6, r9
   269a0:	bge	1c230 <GetDataSlab+0x12c>
   269a4:	ldr	r3, [sp, #196]	; 0xc4
   269a8:	mov	r0, #0
   269ac:	ldr	r1, [r3]
   269b0:	ldr	r3, [sp]
   269b4:	cmp	r1, #0
   269b8:	addne	ip, ip, r1, lsl #3
   269bc:	addne	r4, r4, r1
   269c0:	add	r5, r3, r6, lsl #3
   269c4:	sub	lr, ip, #8
   269c8:	cmp	r0, r7
   269cc:	blt	26974 <GetDataSlab+0xa870>
   269d0:	ldr	r3, [sp, #8]
   269d4:	add	r5, sp, #72	; 0x48
   269d8:	mov	r0, #1
   269dc:	ldr	lr, [sp, #12]
   269e0:	sub	r3, r3, r1
   269e4:	add	ip, ip, r3, lsl #3
   269e8:	add	r4, r4, r3
   269ec:	ldr	r3, [sp, #208]	; 0xd0
   269f0:	cmp	r0, r3
   269f4:	bge	26998 <GetDataSlab+0xa894>
   269f8:	ldr	r3, [r5, #4]
   269fc:	add	r2, r3, #1
   26a00:	ldr	r3, [sp, #204]	; 0xcc
   26a04:	str	r2, [r5, #4]
   26a08:	ldr	r1, [r3, r0, lsl #2]
   26a0c:	sdiv	r3, r2, r1
   26a10:	mls	r3, r1, r3, r2
   26a14:	cmp	r3, #0
   26a18:	bne	26984 <GetDataSlab+0xa880>
   26a1c:	ldr	r2, [lr, #4]
   26a20:	str	r3, [r5, #4]
   26a24:	ldr	r1, [sp, #196]	; 0xc4
   26a28:	sdiv	r3, r4, r2
   26a2c:	ldr	r1, [r1, r0, lsl #2]
   26a30:	mls	r3, r2, r3, r4
   26a34:	cmp	r3, #0
   26a38:	ldrne	r8, [lr]
   26a3c:	subne	r3, r2, r3
   26a40:	mlane	r3, r1, r8, r3
   26a44:	bne	26a58 <GetDataSlab+0xa954>
   26a48:	cmp	r1, #0
   26a4c:	beq	26a60 <GetDataSlab+0xa95c>
   26a50:	ldr	r3, [lr]
   26a54:	mul	r3, r3, r1
   26a58:	add	ip, ip, r3, lsl #3
   26a5c:	add	r4, r4, r3
   26a60:	add	r0, r0, #1
   26a64:	add	lr, lr, #4
   26a68:	add	r5, r5, #4
   26a6c:	b	269ec <GetDataSlab+0xa8e8>
   26a70:	mov	r6, #0
   26a74:	b	2699c <GetDataSlab+0xa898>
   26a78:	ldrd	sl, [r3]
   26a7c:	add	r2, r2, #1
   26a80:	add	r3, r3, r8
   26a84:	strd	sl, [r0], #8
   26a88:	b	2683c <GetDataSlab+0xa738>
   26a8c:	add	r3, sp, #152	; 0x98
   26a90:	add	r3, r3, lr, lsl #2
   26a94:	ldr	r3, [r3, #-120]	; 0xffffff88
   26a98:	add	ip, ip, r3, lsl #3
   26a9c:	add	r4, r4, r3
   26aa0:	add	r6, r6, r7
   26aa4:	b	26810 <GetDataSlab+0xa70c>
   26aa8:	cmp	r5, #13
   26aac:	bne	3236c <GetDataSlab+0x16268>
   26ab0:	ldr	r5, [sl]
   26ab4:	add	lr, sp, #32
   26ab8:	mov	r6, fp
   26abc:	mov	r4, #0
   26ac0:	mov	r2, #1
   26ac4:	sub	r3, r5, #1
   26ac8:	str	r3, [sp, #32]
   26acc:	ldr	r3, [fp]
   26ad0:	str	r3, [sp, #8]
   26ad4:	str	r3, [sp, #112]	; 0x70
   26ad8:	ldr	r3, [sp, #204]	; 0xcc
   26adc:	ldr	r7, [r3]
   26ae0:	add	r3, sp, #112	; 0x70
   26ae4:	mov	ip, r3
   26ae8:	str	r3, [sp, #12]
   26aec:	mov	r9, r7
   26af0:	ldr	r3, [sp, #208]	; 0xd0
   26af4:	cmp	r2, r3
   26af8:	blt	26c14 <GetDataSlab+0xab10>
   26afc:	ldr	r3, [sp, #4]
   26b00:	cmp	r5, #1
   26b04:	add	ip, r3, r4, lsl #3
   26b08:	beq	26d8c <GetDataSlab+0xac88>
   26b0c:	mul	r3, r5, r7
   26b10:	mov	r6, #0
   26b14:	lsl	r8, r5, #3
   26b18:	str	r3, [sp, #4]
   26b1c:	bic	r3, r7, r7, asr #31
   26b20:	mul	r2, r5, r3
   26b24:	mul	r3, r8, r3
   26b28:	strd	r2, [sp, #16]
   26b2c:	cmp	r6, r9
   26b30:	bge	1c230 <GetDataSlab+0x12c>
   26b34:	ldr	r3, [sp, #196]	; 0xc4
   26b38:	mov	r2, #0
   26b3c:	ldr	r1, [r3]
   26b40:	ldr	r3, [sp]
   26b44:	cmp	r1, #0
   26b48:	addne	ip, ip, r1, lsl #3
   26b4c:	addne	r4, r4, r1
   26b50:	add	r0, r3, r6, lsl #3
   26b54:	mov	r3, ip
   26b58:	cmp	r2, r7
   26b5c:	blt	26d94 <GetDataSlab+0xac90>
   26b60:	ldrd	r2, [sp, #4]
   26b64:	add	r5, sp, #72	; 0x48
   26b68:	mov	lr, #1
   26b6c:	ldr	r0, [sp, #12]
   26b70:	sub	r3, r3, r1
   26b74:	sub	r2, r3, r2
   26b78:	ldr	r3, [sp, #16]
   26b7c:	add	r3, r4, r3
   26b80:	add	r4, r3, r2
   26b84:	ldr	r3, [sp, #20]
   26b88:	add	r3, r3, r2, lsl #3
   26b8c:	add	ip, ip, r3
   26b90:	ldr	r3, [sp, #208]	; 0xd0
   26b94:	cmp	lr, r3
   26b98:	bge	26dbc <GetDataSlab+0xacb8>
   26b9c:	ldr	r3, [r5, #4]
   26ba0:	add	r2, r3, #1
   26ba4:	ldr	r3, [sp, #204]	; 0xcc
   26ba8:	str	r2, [r5, #4]
   26bac:	ldr	r1, [r3, lr, lsl #2]
   26bb0:	sdiv	r3, r2, r1
   26bb4:	mls	r3, r1, r3, r2
   26bb8:	cmp	r3, #0
   26bbc:	bne	26da8 <GetDataSlab+0xaca4>
   26bc0:	ldr	r2, [r0, #4]
   26bc4:	str	r3, [r5, #4]
   26bc8:	ldr	r1, [sp, #196]	; 0xc4
   26bcc:	sdiv	r3, r4, r2
   26bd0:	ldr	r1, [r1, lr, lsl #2]
   26bd4:	mls	r3, r2, r3, r4
   26bd8:	cmp	r3, #0
   26bdc:	subne	r3, r2, r3
   26be0:	ldrne	r2, [r0]
   26be4:	mlane	r3, r1, r2, r3
   26be8:	bne	26bfc <GetDataSlab+0xaaf8>
   26bec:	cmp	r1, #0
   26bf0:	beq	26c04 <GetDataSlab+0xab00>
   26bf4:	ldr	r3, [r0]
   26bf8:	mul	r3, r3, r1
   26bfc:	add	ip, ip, r3, lsl #3
   26c00:	add	r4, r4, r3
   26c04:	add	lr, lr, #1
   26c08:	add	r0, r0, #4
   26c0c:	add	r5, r5, #4
   26c10:	b	26b90 <GetDataSlab+0xaa8c>
   26c14:	ldr	r3, [sl, r2, lsl #2]
   26c18:	mov	r8, ip
   26c1c:	sub	r3, r3, #1
   26c20:	str	r3, [lr, #4]
   26c24:	ldr	r3, [r6], #4
   26c28:	mov	r1, r6
   26c2c:	str	r3, [ip, #4]
   26c30:	cmp	r1, fp
   26c34:	bne	26c64 <GetDataSlab+0xab60>
   26c38:	ldr	r1, [sp, #196]	; 0xc4
   26c3c:	add	ip, ip, #4
   26c40:	add	lr, lr, #4
   26c44:	ldr	r3, [sp, #204]	; 0xcc
   26c48:	ldr	r1, [r1, r2, lsl #2]
   26c4c:	ldr	r3, [r3, r2, lsl #2]
   26c50:	add	r2, r2, #1
   26c54:	mul	r9, r3, r9
   26c58:	ldr	r3, [r8]
   26c5c:	mla	r4, r1, r3, r4
   26c60:	b	26af0 <GetDataSlab+0xa9ec>
   26c64:	str	r1, [sp, #16]
   26c68:	ldr	r3, [r1, #-4]!
   26c6c:	ldr	r0, [lr, #4]
   26c70:	mul	r3, r3, r0
   26c74:	ldr	r0, [ip, #4]
   26c78:	str	r3, [lr, #4]
   26c7c:	ldr	r3, [sp, #16]
   26c80:	ldr	r3, [r3]
   26c84:	mul	r3, r3, r0
   26c88:	str	r3, [ip, #4]
   26c8c:	b	26c30 <GetDataSlab+0xab2c>
   26c90:	ldrd	r2, [lr, #8]!
   26c94:	add	r0, r0, #1
   26c98:	strd	r2, [r5], #8
   26c9c:	b	26ce4 <GetDataSlab+0xabe0>
   26ca0:	add	r3, sp, #152	; 0x98
   26ca4:	add	r3, r3, r0, lsl #2
   26ca8:	ldr	r3, [r3, #-120]	; 0xffffff88
   26cac:	add	ip, ip, r3, lsl #3
   26cb0:	add	r4, r4, r3
   26cb4:	add	r6, r6, r7
   26cb8:	cmp	r6, r9
   26cbc:	bge	1c230 <GetDataSlab+0x12c>
   26cc0:	ldr	r3, [sp, #196]	; 0xc4
   26cc4:	mov	r0, #0
   26cc8:	ldr	r1, [r3]
   26ccc:	ldr	r3, [sp]
   26cd0:	cmp	r1, #0
   26cd4:	addne	ip, ip, r1, lsl #3
   26cd8:	addne	r4, r4, r1
   26cdc:	add	r5, r3, r6, lsl #3
   26ce0:	sub	lr, ip, #8
   26ce4:	cmp	r0, r7
   26ce8:	blt	26c90 <GetDataSlab+0xab8c>
   26cec:	ldr	r3, [sp, #8]
   26cf0:	add	r5, sp, #72	; 0x48
   26cf4:	mov	r0, #1
   26cf8:	ldr	lr, [sp, #12]
   26cfc:	sub	r3, r3, r1
   26d00:	add	ip, ip, r3, lsl #3
   26d04:	add	r4, r4, r3
   26d08:	ldr	r3, [sp, #208]	; 0xd0
   26d0c:	cmp	r0, r3
   26d10:	bge	26cb4 <GetDataSlab+0xabb0>
   26d14:	ldr	r3, [r5, #4]
   26d18:	add	r2, r3, #1
   26d1c:	ldr	r3, [sp, #204]	; 0xcc
   26d20:	str	r2, [r5, #4]
   26d24:	ldr	r1, [r3, r0, lsl #2]
   26d28:	sdiv	r3, r2, r1
   26d2c:	mls	r3, r1, r3, r2
   26d30:	cmp	r3, #0
   26d34:	bne	26ca0 <GetDataSlab+0xab9c>
   26d38:	ldr	r2, [lr, #4]
   26d3c:	str	r3, [r5, #4]
   26d40:	ldr	r1, [sp, #196]	; 0xc4
   26d44:	sdiv	r3, r4, r2
   26d48:	ldr	r1, [r1, r0, lsl #2]
   26d4c:	mls	r3, r2, r3, r4
   26d50:	cmp	r3, #0
   26d54:	ldrne	r8, [lr]
   26d58:	subne	r3, r2, r3
   26d5c:	mlane	r3, r1, r8, r3
   26d60:	bne	26d74 <GetDataSlab+0xac70>
   26d64:	cmp	r1, #0
   26d68:	beq	26d7c <GetDataSlab+0xac78>
   26d6c:	ldr	r3, [lr]
   26d70:	mul	r3, r3, r1
   26d74:	add	ip, ip, r3, lsl #3
   26d78:	add	r4, r4, r3
   26d7c:	add	r0, r0, #1
   26d80:	add	lr, lr, #4
   26d84:	add	r5, r5, #4
   26d88:	b	26d08 <GetDataSlab+0xac04>
   26d8c:	mov	r6, #0
   26d90:	b	26cb8 <GetDataSlab+0xabb4>
   26d94:	ldrd	sl, [r3]
   26d98:	add	r2, r2, #1
   26d9c:	add	r3, r3, r8
   26da0:	strd	sl, [r0], #8
   26da4:	b	26b58 <GetDataSlab+0xaa54>
   26da8:	add	r3, sp, #152	; 0x98
   26dac:	add	r3, r3, lr, lsl #2
   26db0:	ldr	r3, [r3, #-120]	; 0xffffff88
   26db4:	add	ip, ip, r3, lsl #3
   26db8:	add	r4, r4, r3
   26dbc:	add	r6, r6, r7
   26dc0:	b	26b2c <GetDataSlab+0xaa28>
   26dc4:	sub	r3, r5, #1
   26dc8:	cmp	r3, #8
   26dcc:	addls	pc, pc, r3, lsl #2
   26dd0:	b	285d8 <GetDataSlab+0xc4d4>
   26dd4:	b	27fe8 <GetDataSlab+0xbee4>
   26dd8:	b	282e0 <GetDataSlab+0xc1dc>
   26ddc:	b	279f0 <GetDataSlab+0xb8ec>
   26de0:	b	27cec <GetDataSlab+0xbbe8>
   26de4:	b	27400 <GetDataSlab+0xb2fc>
   26de8:	b	276f8 <GetDataSlab+0xb5f4>
   26dec:	b	270fc <GetDataSlab+0xaff8>
   26df0:	b	285d8 <GetDataSlab+0xc4d4>
   26df4:	b	26df8 <GetDataSlab+0xacf4>
   26df8:	ldr	r7, [sl]
   26dfc:	add	r9, sp, #112	; 0x70
   26e00:	add	r4, sp, #32
   26e04:	mov	r5, fp
   26e08:	mov	r0, r9
   26e0c:	mov	lr, #0
   26e10:	mov	r2, #1
   26e14:	sub	r3, r7, #1
   26e18:	str	r3, [sp, #32]
   26e1c:	ldr	r3, [fp]
   26e20:	str	r3, [sp, #112]	; 0x70
   26e24:	ldr	r3, [sp, #204]	; 0xcc
   26e28:	ldr	r8, [r3]
   26e2c:	ldr	r3, [sp, #208]	; 0xd0
   26e30:	cmp	r2, r3
   26e34:	blt	26f34 <GetDataSlab+0xae30>
   26e38:	ldr	r3, [sp, #4]
   26e3c:	cmp	r7, #1
   26e40:	mov	r6, #0
   26e44:	add	ip, r3, lr, lsl #3
   26e48:	beq	26fdc <GetDataSlab+0xaed8>
   26e4c:	cmp	r6, r8
   26e50:	bge	1c230 <GetDataSlab+0x12c>
   26e54:	ldr	r3, [sp, #196]	; 0xc4
   26e58:	ldr	r3, [r3]
   26e5c:	cmp	r3, #0
   26e60:	addne	ip, ip, r3, lsl #3
   26e64:	addne	lr, lr, r3
   26e68:	ldr	r3, [sp]
   26e6c:	add	r2, r3, r6, lsl #2
   26e70:	mov	r3, #0
   26e74:	ldr	r1, [sp, #204]	; 0xcc
   26e78:	ldr	r7, [r1]
   26e7c:	cmp	r7, r3
   26e80:	bgt	270c0 <GetDataSlab+0xafbc>
   26e84:	ldr	r3, [sp, #196]	; 0xc4
   26e88:	add	r5, sp, #72	; 0x48
   26e8c:	mov	r4, r9
   26e90:	mov	r0, #1
   26e94:	ldr	r2, [fp]
   26e98:	ldr	r3, [r3]
   26e9c:	sub	r3, r2, r3
   26ea0:	ldr	r2, [sl]
   26ea4:	mls	r3, r2, r7, r3
   26ea8:	add	ip, ip, r3, lsl #3
   26eac:	add	lr, lr, r3
   26eb0:	ldr	r3, [sp, #208]	; 0xd0
   26eb4:	cmp	r0, r3
   26eb8:	bge	270f4 <GetDataSlab+0xaff0>
   26ebc:	ldr	r3, [r5, #4]
   26ec0:	add	r2, r3, #1
   26ec4:	ldr	r3, [sp, #204]	; 0xcc
   26ec8:	str	r2, [r5, #4]
   26ecc:	ldr	r1, [r3, r0, lsl #2]
   26ed0:	sdiv	r3, r2, r1
   26ed4:	mls	r3, r1, r3, r2
   26ed8:	cmp	r3, #0
   26edc:	bne	270e0 <GetDataSlab+0xafdc>
   26ee0:	ldr	r2, [r4, #4]
   26ee4:	str	r3, [r5, #4]
   26ee8:	ldr	r1, [sp, #196]	; 0xc4
   26eec:	sdiv	r3, lr, r2
   26ef0:	ldr	r1, [r1, r0, lsl #2]
   26ef4:	mls	r3, r2, r3, lr
   26ef8:	cmp	r3, #0
   26efc:	subne	r3, r2, r3
   26f00:	ldrne	r2, [r4]
   26f04:	mlane	r3, r1, r2, r3
   26f08:	bne	26f1c <GetDataSlab+0xae18>
   26f0c:	cmp	r1, #0
   26f10:	beq	26f24 <GetDataSlab+0xae20>
   26f14:	ldr	r3, [r4]
   26f18:	mul	r3, r3, r1
   26f1c:	add	ip, ip, r3, lsl #3
   26f20:	add	lr, lr, r3
   26f24:	add	r0, r0, #1
   26f28:	add	r4, r4, #4
   26f2c:	add	r5, r5, #4
   26f30:	b	26eb0 <GetDataSlab+0xadac>
   26f34:	ldr	r3, [sl, r2, lsl #2]
   26f38:	mov	r6, r0
   26f3c:	sub	r3, r3, #1
   26f40:	str	r3, [r4, #4]
   26f44:	ldr	r3, [r5], #4
   26f48:	mov	r1, r5
   26f4c:	str	r3, [r0, #4]
   26f50:	cmp	r1, fp
   26f54:	bne	26f84 <GetDataSlab+0xae80>
   26f58:	ldr	r1, [sp, #196]	; 0xc4
   26f5c:	add	r0, r0, #4
   26f60:	add	r4, r4, #4
   26f64:	ldr	r3, [sp, #204]	; 0xcc
   26f68:	ldr	r1, [r1, r2, lsl #2]
   26f6c:	ldr	r3, [r3, r2, lsl #2]
   26f70:	add	r2, r2, #1
   26f74:	mul	r8, r3, r8
   26f78:	ldr	r3, [r6]
   26f7c:	mla	lr, r1, r3, lr
   26f80:	b	26e2c <GetDataSlab+0xad28>
   26f84:	str	r1, [sp, #8]
   26f88:	ldr	r3, [r1, #-4]!
   26f8c:	ldr	ip, [r4, #4]
   26f90:	mul	r3, r3, ip
   26f94:	ldr	ip, [r0, #4]
   26f98:	str	r3, [r4, #4]
   26f9c:	ldr	r3, [sp, #8]
   26fa0:	ldr	r3, [r3]
   26fa4:	mul	r3, r3, ip
   26fa8:	str	r3, [r0, #4]
   26fac:	b	26f50 <GetDataSlab+0xae4c>
   26fb0:	vldmia	r2!, {d7}
   26fb4:	add	r3, r3, #1
   26fb8:	vcvt.s32.f64	s15, d7
   26fbc:	vstmia	r1!, {s15}
   26fc0:	b	27008 <GetDataSlab+0xaf04>
   26fc4:	add	r3, sp, #152	; 0x98
   26fc8:	add	r3, r3, r0, lsl #2
   26fcc:	ldr	r3, [r3, #-120]	; 0xffffff88
   26fd0:	add	ip, ip, r3, lsl #3
   26fd4:	add	lr, lr, r3
   26fd8:	add	r6, r6, r7
   26fdc:	cmp	r6, r8
   26fe0:	bge	1c230 <GetDataSlab+0x12c>
   26fe4:	ldr	r3, [sp, #196]	; 0xc4
   26fe8:	ldr	r3, [r3]
   26fec:	cmp	r3, #0
   26ff0:	addne	ip, ip, r3, lsl #3
   26ff4:	addne	lr, lr, r3
   26ff8:	ldr	r3, [sp]
   26ffc:	mov	r2, ip
   27000:	add	r1, r3, r6, lsl #2
   27004:	mov	r3, #0
   27008:	ldr	r0, [sp, #204]	; 0xcc
   2700c:	ldr	r7, [r0]
   27010:	cmp	r7, r3
   27014:	bgt	26fb0 <GetDataSlab+0xaeac>
   27018:	ldr	r3, [sp, #196]	; 0xc4
   2701c:	add	r5, sp, #72	; 0x48
   27020:	mov	r4, r9
   27024:	mov	r0, #1
   27028:	ldr	r2, [fp]
   2702c:	ldr	r3, [r3]
   27030:	sub	r3, r2, r3
   27034:	add	ip, ip, r3, lsl #3
   27038:	add	lr, lr, r3
   2703c:	ldr	r3, [sp, #208]	; 0xd0
   27040:	cmp	r0, r3
   27044:	bge	26fd8 <GetDataSlab+0xaed4>
   27048:	ldr	r3, [r5, #4]
   2704c:	add	r2, r3, #1
   27050:	ldr	r3, [sp, #204]	; 0xcc
   27054:	str	r2, [r5, #4]
   27058:	ldr	r1, [r3, r0, lsl #2]
   2705c:	sdiv	r3, r2, r1
   27060:	mls	r3, r1, r3, r2
   27064:	cmp	r3, #0
   27068:	bne	26fc4 <GetDataSlab+0xaec0>
   2706c:	ldr	r2, [r4, #4]
   27070:	str	r3, [r5, #4]
   27074:	ldr	r1, [sp, #196]	; 0xc4
   27078:	sdiv	r3, lr, r2
   2707c:	ldr	r1, [r1, r0, lsl #2]
   27080:	mls	r3, r2, r3, lr
   27084:	cmp	r3, #0
   27088:	ldrne	sl, [r4]
   2708c:	subne	r3, r2, r3
   27090:	mlane	r3, r1, sl, r3
   27094:	bne	270a8 <GetDataSlab+0xafa4>
   27098:	cmp	r1, #0
   2709c:	beq	270b0 <GetDataSlab+0xafac>
   270a0:	ldr	r3, [r4]
   270a4:	mul	r3, r3, r1
   270a8:	add	ip, ip, r3, lsl #3
   270ac:	add	lr, lr, r3
   270b0:	add	r0, r0, #1
   270b4:	add	r4, r4, #4
   270b8:	add	r5, r5, #4
   270bc:	b	2703c <GetDataSlab+0xaf38>
   270c0:	vldr	d7, [ip]
   270c4:	add	r3, r3, #1
   270c8:	vcvt.s32.f64	s15, d7
   270cc:	vstmia	r2!, {s15}
   270d0:	ldr	r1, [sl]
   270d4:	add	ip, ip, r1, lsl #3
   270d8:	add	lr, lr, r1
   270dc:	b	26e74 <GetDataSlab+0xad70>
   270e0:	add	r3, sp, #152	; 0x98
   270e4:	add	r3, r3, r0, lsl #2
   270e8:	ldr	r3, [r3, #-120]	; 0xffffff88
   270ec:	add	ip, ip, r3, lsl #3
   270f0:	add	lr, lr, r3
   270f4:	add	r6, r6, r7
   270f8:	b	26e4c <GetDataSlab+0xad48>
   270fc:	ldr	r7, [sl]
   27100:	add	r9, sp, #112	; 0x70
   27104:	add	r4, sp, #32
   27108:	mov	r5, fp
   2710c:	mov	r0, r9
   27110:	mov	lr, #0
   27114:	mov	r2, #1
   27118:	sub	r3, r7, #1
   2711c:	str	r3, [sp, #32]
   27120:	ldr	r3, [fp]
   27124:	str	r3, [sp, #112]	; 0x70
   27128:	ldr	r3, [sp, #204]	; 0xcc
   2712c:	ldr	r8, [r3]
   27130:	ldr	r3, [sp, #208]	; 0xd0
   27134:	cmp	r2, r3
   27138:	blt	27238 <GetDataSlab+0xb134>
   2713c:	ldr	r3, [sp, #4]
   27140:	cmp	r7, #1
   27144:	mov	r6, #0
   27148:	add	ip, r3, lr, lsl #2
   2714c:	beq	272e0 <GetDataSlab+0xb1dc>
   27150:	cmp	r6, r8
   27154:	bge	1c230 <GetDataSlab+0x12c>
   27158:	ldr	r3, [sp, #196]	; 0xc4
   2715c:	ldr	r3, [r3]
   27160:	cmp	r3, #0
   27164:	addne	ip, ip, r3, lsl #2
   27168:	addne	lr, lr, r3
   2716c:	ldr	r3, [sp]
   27170:	add	r2, r3, r6, lsl #2
   27174:	mov	r3, #0
   27178:	ldr	r1, [sp, #204]	; 0xcc
   2717c:	ldr	r7, [r1]
   27180:	cmp	r7, r3
   27184:	bgt	273c4 <GetDataSlab+0xb2c0>
   27188:	ldr	r3, [sp, #196]	; 0xc4
   2718c:	add	r5, sp, #72	; 0x48
   27190:	mov	r4, r9
   27194:	mov	r0, #1
   27198:	ldr	r2, [fp]
   2719c:	ldr	r3, [r3]
   271a0:	sub	r3, r2, r3
   271a4:	ldr	r2, [sl]
   271a8:	mls	r3, r2, r7, r3
   271ac:	add	ip, ip, r3, lsl #2
   271b0:	add	lr, lr, r3
   271b4:	ldr	r3, [sp, #208]	; 0xd0
   271b8:	cmp	r0, r3
   271bc:	bge	273f8 <GetDataSlab+0xb2f4>
   271c0:	ldr	r3, [r5, #4]
   271c4:	add	r2, r3, #1
   271c8:	ldr	r3, [sp, #204]	; 0xcc
   271cc:	str	r2, [r5, #4]
   271d0:	ldr	r1, [r3, r0, lsl #2]
   271d4:	sdiv	r3, r2, r1
   271d8:	mls	r3, r1, r3, r2
   271dc:	cmp	r3, #0
   271e0:	bne	273e4 <GetDataSlab+0xb2e0>
   271e4:	ldr	r2, [r4, #4]
   271e8:	str	r3, [r5, #4]
   271ec:	ldr	r1, [sp, #196]	; 0xc4
   271f0:	sdiv	r3, lr, r2
   271f4:	ldr	r1, [r1, r0, lsl #2]
   271f8:	mls	r3, r2, r3, lr
   271fc:	cmp	r3, #0
   27200:	subne	r3, r2, r3
   27204:	ldrne	r2, [r4]
   27208:	mlane	r3, r1, r2, r3
   2720c:	bne	27220 <GetDataSlab+0xb11c>
   27210:	cmp	r1, #0
   27214:	beq	27228 <GetDataSlab+0xb124>
   27218:	ldr	r3, [r4]
   2721c:	mul	r3, r3, r1
   27220:	add	ip, ip, r3, lsl #2
   27224:	add	lr, lr, r3
   27228:	add	r0, r0, #1
   2722c:	add	r4, r4, #4
   27230:	add	r5, r5, #4
   27234:	b	271b4 <GetDataSlab+0xb0b0>
   27238:	ldr	r3, [sl, r2, lsl #2]
   2723c:	mov	r6, r0
   27240:	sub	r3, r3, #1
   27244:	str	r3, [r4, #4]
   27248:	ldr	r3, [r5], #4
   2724c:	mov	r1, r5
   27250:	str	r3, [r0, #4]
   27254:	cmp	r1, fp
   27258:	bne	27288 <GetDataSlab+0xb184>
   2725c:	ldr	r1, [sp, #196]	; 0xc4
   27260:	add	r0, r0, #4
   27264:	add	r4, r4, #4
   27268:	ldr	r3, [sp, #204]	; 0xcc
   2726c:	ldr	r1, [r1, r2, lsl #2]
   27270:	ldr	r3, [r3, r2, lsl #2]
   27274:	add	r2, r2, #1
   27278:	mul	r8, r3, r8
   2727c:	ldr	r3, [r6]
   27280:	mla	lr, r1, r3, lr
   27284:	b	27130 <GetDataSlab+0xb02c>
   27288:	str	r1, [sp, #8]
   2728c:	ldr	r3, [r1, #-4]!
   27290:	ldr	ip, [r4, #4]
   27294:	mul	r3, r3, ip
   27298:	ldr	ip, [r0, #4]
   2729c:	str	r3, [r4, #4]
   272a0:	ldr	r3, [sp, #8]
   272a4:	ldr	r3, [r3]
   272a8:	mul	r3, r3, ip
   272ac:	str	r3, [r0, #4]
   272b0:	b	27254 <GetDataSlab+0xb150>
   272b4:	vldmia	r2!, {s15}
   272b8:	add	r3, r3, #1
   272bc:	vcvt.s32.f32	s15, s15
   272c0:	vstmia	r1!, {s15}
   272c4:	b	2730c <GetDataSlab+0xb208>
   272c8:	add	r3, sp, #152	; 0x98
   272cc:	add	r3, r3, r0, lsl #2
   272d0:	ldr	r3, [r3, #-120]	; 0xffffff88
   272d4:	add	ip, ip, r3, lsl #2
   272d8:	add	lr, lr, r3
   272dc:	add	r6, r6, r7
   272e0:	cmp	r6, r8
   272e4:	bge	1c230 <GetDataSlab+0x12c>
   272e8:	ldr	r3, [sp, #196]	; 0xc4
   272ec:	ldr	r3, [r3]
   272f0:	cmp	r3, #0
   272f4:	addne	ip, ip, r3, lsl #2
   272f8:	addne	lr, lr, r3
   272fc:	ldr	r3, [sp]
   27300:	mov	r2, ip
   27304:	add	r1, r3, r6, lsl #2
   27308:	mov	r3, #0
   2730c:	ldr	r0, [sp, #204]	; 0xcc
   27310:	ldr	r7, [r0]
   27314:	cmp	r7, r3
   27318:	bgt	272b4 <GetDataSlab+0xb1b0>
   2731c:	ldr	r3, [sp, #196]	; 0xc4
   27320:	add	r5, sp, #72	; 0x48
   27324:	mov	r4, r9
   27328:	mov	r0, #1
   2732c:	ldr	r2, [fp]
   27330:	ldr	r3, [r3]
   27334:	sub	r3, r2, r3
   27338:	add	ip, ip, r3, lsl #2
   2733c:	add	lr, lr, r3
   27340:	ldr	r3, [sp, #208]	; 0xd0
   27344:	cmp	r0, r3
   27348:	bge	272dc <GetDataSlab+0xb1d8>
   2734c:	ldr	r3, [r5, #4]
   27350:	add	r2, r3, #1
   27354:	ldr	r3, [sp, #204]	; 0xcc
   27358:	str	r2, [r5, #4]
   2735c:	ldr	r1, [r3, r0, lsl #2]
   27360:	sdiv	r3, r2, r1
   27364:	mls	r3, r1, r3, r2
   27368:	cmp	r3, #0
   2736c:	bne	272c8 <GetDataSlab+0xb1c4>
   27370:	ldr	r2, [r4, #4]
   27374:	str	r3, [r5, #4]
   27378:	ldr	r1, [sp, #196]	; 0xc4
   2737c:	sdiv	r3, lr, r2
   27380:	ldr	r1, [r1, r0, lsl #2]
   27384:	mls	r3, r2, r3, lr
   27388:	cmp	r3, #0
   2738c:	ldrne	sl, [r4]
   27390:	subne	r3, r2, r3
   27394:	mlane	r3, r1, sl, r3
   27398:	bne	273ac <GetDataSlab+0xb2a8>
   2739c:	cmp	r1, #0
   273a0:	beq	273b4 <GetDataSlab+0xb2b0>
   273a4:	ldr	r3, [r4]
   273a8:	mul	r3, r3, r1
   273ac:	add	ip, ip, r3, lsl #2
   273b0:	add	lr, lr, r3
   273b4:	add	r0, r0, #1
   273b8:	add	r4, r4, #4
   273bc:	add	r5, r5, #4
   273c0:	b	27340 <GetDataSlab+0xb23c>
   273c4:	vldr	s15, [ip]
   273c8:	add	r3, r3, #1
   273cc:	vcvt.s32.f32	s15, s15
   273d0:	vstmia	r2!, {s15}
   273d4:	ldr	r1, [sl]
   273d8:	add	ip, ip, r1, lsl #2
   273dc:	add	lr, lr, r1
   273e0:	b	27178 <GetDataSlab+0xb074>
   273e4:	add	r3, sp, #152	; 0x98
   273e8:	add	r3, r3, r0, lsl #2
   273ec:	ldr	r3, [r3, #-120]	; 0xffffff88
   273f0:	add	ip, ip, r3, lsl #2
   273f4:	add	lr, lr, r3
   273f8:	add	r6, r6, r7
   273fc:	b	27150 <GetDataSlab+0xb04c>
   27400:	ldr	r7, [sl]
   27404:	add	r9, sp, #112	; 0x70
   27408:	add	r4, sp, #32
   2740c:	mov	r5, fp
   27410:	mov	r0, r9
   27414:	mov	ip, #0
   27418:	mov	r2, #1
   2741c:	sub	r3, r7, #1
   27420:	str	r3, [sp, #32]
   27424:	ldr	r3, [fp]
   27428:	str	r3, [sp, #112]	; 0x70
   2742c:	ldr	r3, [sp, #204]	; 0xcc
   27430:	ldr	r8, [r3]
   27434:	ldr	r3, [sp, #208]	; 0xd0
   27438:	cmp	r2, r3
   2743c:	blt	2753c <GetDataSlab+0xb438>
   27440:	ldr	r3, [sp, #4]
   27444:	cmp	r7, #1
   27448:	mov	r6, #0
   2744c:	add	r0, r3, ip, lsl #2
   27450:	beq	275e0 <GetDataSlab+0xb4dc>
   27454:	cmp	r6, r8
   27458:	bge	1c230 <GetDataSlab+0x12c>
   2745c:	ldr	r3, [sp, #196]	; 0xc4
   27460:	ldr	r3, [r3]
   27464:	cmp	r3, #0
   27468:	addne	r0, r0, r3, lsl #2
   2746c:	addne	ip, ip, r3
   27470:	ldr	r3, [sp]
   27474:	add	r2, r3, r6, lsl #2
   27478:	mov	r3, #0
   2747c:	ldr	r1, [sp, #204]	; 0xcc
   27480:	ldr	r7, [r1]
   27484:	cmp	r7, r3
   27488:	bgt	276c0 <GetDataSlab+0xb5bc>
   2748c:	ldr	r3, [sp, #196]	; 0xc4
   27490:	add	r5, sp, #72	; 0x48
   27494:	mov	r4, r9
   27498:	mov	lr, #1
   2749c:	ldr	r2, [fp]
   274a0:	ldr	r3, [r3]
   274a4:	sub	r3, r2, r3
   274a8:	ldr	r2, [sl]
   274ac:	mls	r3, r2, r7, r3
   274b0:	add	r0, r0, r3, lsl #2
   274b4:	add	ip, ip, r3
   274b8:	ldr	r3, [sp, #208]	; 0xd0
   274bc:	cmp	lr, r3
   274c0:	bge	276f0 <GetDataSlab+0xb5ec>
   274c4:	ldr	r3, [r5, #4]
   274c8:	add	r2, r3, #1
   274cc:	ldr	r3, [sp, #204]	; 0xcc
   274d0:	str	r2, [r5, #4]
   274d4:	ldr	r1, [r3, lr, lsl #2]
   274d8:	sdiv	r3, r2, r1
   274dc:	mls	r3, r1, r3, r2
   274e0:	cmp	r3, #0
   274e4:	bne	276dc <GetDataSlab+0xb5d8>
   274e8:	ldr	r2, [r4, #4]
   274ec:	str	r3, [r5, #4]
   274f0:	ldr	r1, [sp, #196]	; 0xc4
   274f4:	sdiv	r3, ip, r2
   274f8:	ldr	r1, [r1, lr, lsl #2]
   274fc:	mls	r3, r2, r3, ip
   27500:	cmp	r3, #0
   27504:	subne	r3, r2, r3
   27508:	ldrne	r2, [r4]
   2750c:	mlane	r3, r1, r2, r3
   27510:	bne	27524 <GetDataSlab+0xb420>
   27514:	cmp	r1, #0
   27518:	beq	2752c <GetDataSlab+0xb428>
   2751c:	ldr	r3, [r4]
   27520:	mul	r3, r3, r1
   27524:	add	r0, r0, r3, lsl #2
   27528:	add	ip, ip, r3
   2752c:	add	lr, lr, #1
   27530:	add	r4, r4, #4
   27534:	add	r5, r5, #4
   27538:	b	274b8 <GetDataSlab+0xb3b4>
   2753c:	ldr	r3, [sl, r2, lsl #2]
   27540:	mov	r6, r0
   27544:	sub	r3, r3, #1
   27548:	str	r3, [r4, #4]
   2754c:	ldr	r3, [r5], #4
   27550:	mov	r1, r5
   27554:	str	r3, [r0, #4]
   27558:	cmp	r1, fp
   2755c:	bne	2758c <GetDataSlab+0xb488>
   27560:	ldr	r1, [sp, #196]	; 0xc4
   27564:	add	r0, r0, #4
   27568:	add	r4, r4, #4
   2756c:	ldr	r3, [sp, #204]	; 0xcc
   27570:	ldr	r1, [r1, r2, lsl #2]
   27574:	ldr	r3, [r3, r2, lsl #2]
   27578:	add	r2, r2, #1
   2757c:	mul	r8, r3, r8
   27580:	ldr	r3, [r6]
   27584:	mla	ip, r1, r3, ip
   27588:	b	27434 <GetDataSlab+0xb330>
   2758c:	str	r1, [sp, #8]
   27590:	ldr	r3, [r1, #-4]!
   27594:	ldr	lr, [r4, #4]
   27598:	mul	r3, r3, lr
   2759c:	ldr	lr, [r0, #4]
   275a0:	str	r3, [r4, #4]
   275a4:	ldr	r3, [sp, #8]
   275a8:	ldr	r3, [r3]
   275ac:	mul	r3, r3, lr
   275b0:	str	r3, [r0, #4]
   275b4:	b	27558 <GetDataSlab+0xb454>
   275b8:	ldr	r1, [r0, r3, lsl #2]
   275bc:	add	r3, r3, #1
   275c0:	str	r1, [r2], #4
   275c4:	b	27608 <GetDataSlab+0xb504>
   275c8:	add	r3, sp, #152	; 0x98
   275cc:	add	r3, r3, lr, lsl #2
   275d0:	ldr	r3, [r3, #-120]	; 0xffffff88
   275d4:	add	r0, r0, r3, lsl #2
   275d8:	add	ip, ip, r3
   275dc:	add	r6, r6, r7
   275e0:	cmp	r6, r8
   275e4:	bge	1c230 <GetDataSlab+0x12c>
   275e8:	ldr	r3, [sp, #196]	; 0xc4
   275ec:	ldr	r3, [r3]
   275f0:	cmp	r3, #0
   275f4:	addne	r0, r0, r3, lsl #2
   275f8:	addne	ip, ip, r3
   275fc:	ldr	r3, [sp]
   27600:	add	r2, r3, r6, lsl #2
   27604:	mov	r3, #0
   27608:	ldr	r1, [sp, #204]	; 0xcc
   2760c:	ldr	r7, [r1]
   27610:	cmp	r7, r3
   27614:	bgt	275b8 <GetDataSlab+0xb4b4>
   27618:	ldr	r3, [sp, #196]	; 0xc4
   2761c:	add	r5, sp, #72	; 0x48
   27620:	mov	r4, r9
   27624:	mov	lr, #1
   27628:	ldr	r2, [fp]
   2762c:	ldr	r3, [r3]
   27630:	sub	r3, r2, r3
   27634:	add	r0, r0, r3, lsl #2
   27638:	add	ip, ip, r3
   2763c:	ldr	r3, [sp, #208]	; 0xd0
   27640:	cmp	lr, r3
   27644:	bge	275dc <GetDataSlab+0xb4d8>
   27648:	ldr	r3, [r5, #4]
   2764c:	add	r2, r3, #1
   27650:	ldr	r3, [sp, #204]	; 0xcc
   27654:	str	r2, [r5, #4]
   27658:	ldr	r1, [r3, lr, lsl #2]
   2765c:	sdiv	r3, r2, r1
   27660:	mls	r3, r1, r3, r2
   27664:	cmp	r3, #0
   27668:	bne	275c8 <GetDataSlab+0xb4c4>
   2766c:	ldr	r2, [r4, #4]
   27670:	str	r3, [r5, #4]
   27674:	ldr	r1, [sp, #196]	; 0xc4
   27678:	sdiv	r3, ip, r2
   2767c:	ldr	r1, [r1, lr, lsl #2]
   27680:	mls	r3, r2, r3, ip
   27684:	cmp	r3, #0
   27688:	ldrne	sl, [r4]
   2768c:	subne	r3, r2, r3
   27690:	mlane	r3, r1, sl, r3
   27694:	bne	276a8 <GetDataSlab+0xb5a4>
   27698:	cmp	r1, #0
   2769c:	beq	276b0 <GetDataSlab+0xb5ac>
   276a0:	ldr	r3, [r4]
   276a4:	mul	r3, r3, r1
   276a8:	add	r0, r0, r3, lsl #2
   276ac:	add	ip, ip, r3
   276b0:	add	lr, lr, #1
   276b4:	add	r4, r4, #4
   276b8:	add	r5, r5, #4
   276bc:	b	2763c <GetDataSlab+0xb538>
   276c0:	ldr	r1, [r0]
   276c4:	add	r3, r3, #1
   276c8:	str	r1, [r2], #4
   276cc:	ldr	r1, [sl]
   276d0:	add	r0, r0, r1, lsl #2
   276d4:	add	ip, ip, r1
   276d8:	b	2747c <GetDataSlab+0xb378>
   276dc:	add	r3, sp, #152	; 0x98
   276e0:	add	r3, r3, lr, lsl #2
   276e4:	ldr	r3, [r3, #-120]	; 0xffffff88
   276e8:	add	r0, r0, r3, lsl #2
   276ec:	add	ip, ip, r3
   276f0:	add	r6, r6, r7
   276f4:	b	27454 <GetDataSlab+0xb350>
   276f8:	ldr	r7, [sl]
   276fc:	add	r9, sp, #112	; 0x70
   27700:	add	r4, sp, #32
   27704:	mov	r5, fp
   27708:	mov	r0, r9
   2770c:	mov	ip, #0
   27710:	mov	r2, #1
   27714:	sub	r3, r7, #1
   27718:	str	r3, [sp, #32]
   2771c:	ldr	r3, [fp]
   27720:	str	r3, [sp, #112]	; 0x70
   27724:	ldr	r3, [sp, #204]	; 0xcc
   27728:	ldr	r8, [r3]
   2772c:	ldr	r3, [sp, #208]	; 0xd0
   27730:	cmp	r2, r3
   27734:	blt	27834 <GetDataSlab+0xb730>
   27738:	ldr	r3, [sp, #4]
   2773c:	cmp	r7, #1
   27740:	mov	r6, #0
   27744:	add	r0, r3, ip, lsl #2
   27748:	beq	278d8 <GetDataSlab+0xb7d4>
   2774c:	cmp	r6, r8
   27750:	bge	1c230 <GetDataSlab+0x12c>
   27754:	ldr	r3, [sp, #196]	; 0xc4
   27758:	ldr	r3, [r3]
   2775c:	cmp	r3, #0
   27760:	addne	r0, r0, r3, lsl #2
   27764:	addne	ip, ip, r3
   27768:	ldr	r3, [sp]
   2776c:	add	r2, r3, r6, lsl #2
   27770:	mov	r3, #0
   27774:	ldr	r1, [sp, #204]	; 0xcc
   27778:	ldr	r7, [r1]
   2777c:	cmp	r7, r3
   27780:	bgt	279b8 <GetDataSlab+0xb8b4>
   27784:	ldr	r3, [sp, #196]	; 0xc4
   27788:	add	r5, sp, #72	; 0x48
   2778c:	mov	r4, r9
   27790:	mov	lr, #1
   27794:	ldr	r2, [fp]
   27798:	ldr	r3, [r3]
   2779c:	sub	r3, r2, r3
   277a0:	ldr	r2, [sl]
   277a4:	mls	r3, r2, r7, r3
   277a8:	add	r0, r0, r3, lsl #2
   277ac:	add	ip, ip, r3
   277b0:	ldr	r3, [sp, #208]	; 0xd0
   277b4:	cmp	lr, r3
   277b8:	bge	279e8 <GetDataSlab+0xb8e4>
   277bc:	ldr	r3, [r5, #4]
   277c0:	add	r2, r3, #1
   277c4:	ldr	r3, [sp, #204]	; 0xcc
   277c8:	str	r2, [r5, #4]
   277cc:	ldr	r1, [r3, lr, lsl #2]
   277d0:	sdiv	r3, r2, r1
   277d4:	mls	r3, r1, r3, r2
   277d8:	cmp	r3, #0
   277dc:	bne	279d4 <GetDataSlab+0xb8d0>
   277e0:	ldr	r2, [r4, #4]
   277e4:	str	r3, [r5, #4]
   277e8:	ldr	r1, [sp, #196]	; 0xc4
   277ec:	sdiv	r3, ip, r2
   277f0:	ldr	r1, [r1, lr, lsl #2]
   277f4:	mls	r3, r2, r3, ip
   277f8:	cmp	r3, #0
   277fc:	subne	r3, r2, r3
   27800:	ldrne	r2, [r4]
   27804:	mlane	r3, r1, r2, r3
   27808:	bne	2781c <GetDataSlab+0xb718>
   2780c:	cmp	r1, #0
   27810:	beq	27824 <GetDataSlab+0xb720>
   27814:	ldr	r3, [r4]
   27818:	mul	r3, r3, r1
   2781c:	add	r0, r0, r3, lsl #2
   27820:	add	ip, ip, r3
   27824:	add	lr, lr, #1
   27828:	add	r4, r4, #4
   2782c:	add	r5, r5, #4
   27830:	b	277b0 <GetDataSlab+0xb6ac>
   27834:	ldr	r3, [sl, r2, lsl #2]
   27838:	mov	r6, r0
   2783c:	sub	r3, r3, #1
   27840:	str	r3, [r4, #4]
   27844:	ldr	r3, [r5], #4
   27848:	mov	r1, r5
   2784c:	str	r3, [r0, #4]
   27850:	cmp	r1, fp
   27854:	bne	27884 <GetDataSlab+0xb780>
   27858:	ldr	r1, [sp, #196]	; 0xc4
   2785c:	add	r0, r0, #4
   27860:	add	r4, r4, #4
   27864:	ldr	r3, [sp, #204]	; 0xcc
   27868:	ldr	r1, [r1, r2, lsl #2]
   2786c:	ldr	r3, [r3, r2, lsl #2]
   27870:	add	r2, r2, #1
   27874:	mul	r8, r3, r8
   27878:	ldr	r3, [r6]
   2787c:	mla	ip, r1, r3, ip
   27880:	b	2772c <GetDataSlab+0xb628>
   27884:	str	r1, [sp, #8]
   27888:	ldr	r3, [r1, #-4]!
   2788c:	ldr	lr, [r4, #4]
   27890:	mul	r3, r3, lr
   27894:	ldr	lr, [r0, #4]
   27898:	str	r3, [r4, #4]
   2789c:	ldr	r3, [sp, #8]
   278a0:	ldr	r3, [r3]
   278a4:	mul	r3, r3, lr
   278a8:	str	r3, [r0, #4]
   278ac:	b	27850 <GetDataSlab+0xb74c>
   278b0:	ldr	r1, [r0, r3, lsl #2]
   278b4:	add	r3, r3, #1
   278b8:	str	r1, [r2], #4
   278bc:	b	27900 <GetDataSlab+0xb7fc>
   278c0:	add	r3, sp, #152	; 0x98
   278c4:	add	r3, r3, lr, lsl #2
   278c8:	ldr	r3, [r3, #-120]	; 0xffffff88
   278cc:	add	r0, r0, r3, lsl #2
   278d0:	add	ip, ip, r3
   278d4:	add	r6, r6, r7
   278d8:	cmp	r6, r8
   278dc:	bge	1c230 <GetDataSlab+0x12c>
   278e0:	ldr	r3, [sp, #196]	; 0xc4
   278e4:	ldr	r3, [r3]
   278e8:	cmp	r3, #0
   278ec:	addne	r0, r0, r3, lsl #2
   278f0:	addne	ip, ip, r3
   278f4:	ldr	r3, [sp]
   278f8:	add	r2, r3, r6, lsl #2
   278fc:	mov	r3, #0
   27900:	ldr	r1, [sp, #204]	; 0xcc
   27904:	ldr	r7, [r1]
   27908:	cmp	r7, r3
   2790c:	bgt	278b0 <GetDataSlab+0xb7ac>
   27910:	ldr	r3, [sp, #196]	; 0xc4
   27914:	add	r5, sp, #72	; 0x48
   27918:	mov	r4, r9
   2791c:	mov	lr, #1
   27920:	ldr	r2, [fp]
   27924:	ldr	r3, [r3]
   27928:	sub	r3, r2, r3
   2792c:	add	r0, r0, r3, lsl #2
   27930:	add	ip, ip, r3
   27934:	ldr	r3, [sp, #208]	; 0xd0
   27938:	cmp	lr, r3
   2793c:	bge	278d4 <GetDataSlab+0xb7d0>
   27940:	ldr	r3, [r5, #4]
   27944:	add	r2, r3, #1
   27948:	ldr	r3, [sp, #204]	; 0xcc
   2794c:	str	r2, [r5, #4]
   27950:	ldr	r1, [r3, lr, lsl #2]
   27954:	sdiv	r3, r2, r1
   27958:	mls	r3, r1, r3, r2
   2795c:	cmp	r3, #0
   27960:	bne	278c0 <GetDataSlab+0xb7bc>
   27964:	ldr	r2, [r4, #4]
   27968:	str	r3, [r5, #4]
   2796c:	ldr	r1, [sp, #196]	; 0xc4
   27970:	sdiv	r3, ip, r2
   27974:	ldr	r1, [r1, lr, lsl #2]
   27978:	mls	r3, r2, r3, ip
   2797c:	cmp	r3, #0
   27980:	ldrne	sl, [r4]
   27984:	subne	r3, r2, r3
   27988:	mlane	r3, r1, sl, r3
   2798c:	bne	279a0 <GetDataSlab+0xb89c>
   27990:	cmp	r1, #0
   27994:	beq	279a8 <GetDataSlab+0xb8a4>
   27998:	ldr	r3, [r4]
   2799c:	mul	r3, r3, r1
   279a0:	add	r0, r0, r3, lsl #2
   279a4:	add	ip, ip, r3
   279a8:	add	lr, lr, #1
   279ac:	add	r4, r4, #4
   279b0:	add	r5, r5, #4
   279b4:	b	27934 <GetDataSlab+0xb830>
   279b8:	ldr	r1, [r0]
   279bc:	add	r3, r3, #1
   279c0:	str	r1, [r2], #4
   279c4:	ldr	r1, [sl]
   279c8:	add	r0, r0, r1, lsl #2
   279cc:	add	ip, ip, r1
   279d0:	b	27774 <GetDataSlab+0xb670>
   279d4:	add	r3, sp, #152	; 0x98
   279d8:	add	r3, r3, lr, lsl #2
   279dc:	ldr	r3, [r3, #-120]	; 0xffffff88
   279e0:	add	r0, r0, r3, lsl #2
   279e4:	add	ip, ip, r3
   279e8:	add	r6, r6, r7
   279ec:	b	2774c <GetDataSlab+0xb648>
   279f0:	ldr	r7, [sl]
   279f4:	add	r9, sp, #112	; 0x70
   279f8:	add	r4, sp, #32
   279fc:	mov	r5, fp
   27a00:	mov	r0, r9
   27a04:	mov	lr, #0
   27a08:	mov	r2, #1
   27a0c:	sub	r3, r7, #1
   27a10:	str	r3, [sp, #32]
   27a14:	ldr	r3, [fp]
   27a18:	str	r3, [sp, #112]	; 0x70
   27a1c:	ldr	r3, [sp, #204]	; 0xcc
   27a20:	ldr	r8, [r3]
   27a24:	ldr	r3, [sp, #208]	; 0xd0
   27a28:	cmp	r2, r3
   27a2c:	blt	27b2c <GetDataSlab+0xba28>
   27a30:	ldr	r3, [sp, #4]
   27a34:	cmp	r7, #1
   27a38:	mov	r6, #0
   27a3c:	add	ip, r3, lr, lsl #1
   27a40:	beq	27bd0 <GetDataSlab+0xbacc>
   27a44:	cmp	r6, r8
   27a48:	bge	1c230 <GetDataSlab+0x12c>
   27a4c:	ldr	r3, [sp, #196]	; 0xc4
   27a50:	ldr	r3, [r3]
   27a54:	cmp	r3, #0
   27a58:	addne	ip, ip, r3, lsl #1
   27a5c:	addne	lr, lr, r3
   27a60:	ldr	r3, [sp]
   27a64:	add	r2, r3, r6, lsl #2
   27a68:	mov	r3, #0
   27a6c:	ldr	r1, [sp, #204]	; 0xcc
   27a70:	ldr	r7, [r1]
   27a74:	cmp	r7, r3
   27a78:	bgt	27cb4 <GetDataSlab+0xbbb0>
   27a7c:	ldr	r3, [sp, #196]	; 0xc4
   27a80:	add	r5, sp, #72	; 0x48
   27a84:	mov	r4, r9
   27a88:	mov	r0, #1
   27a8c:	ldr	r2, [fp]
   27a90:	ldr	r3, [r3]
   27a94:	sub	r3, r2, r3
   27a98:	ldr	r2, [sl]
   27a9c:	mls	r3, r2, r7, r3
   27aa0:	add	ip, ip, r3, lsl #1
   27aa4:	add	lr, lr, r3
   27aa8:	ldr	r3, [sp, #208]	; 0xd0
   27aac:	cmp	r0, r3
   27ab0:	bge	27ce4 <GetDataSlab+0xbbe0>
   27ab4:	ldr	r3, [r5, #4]
   27ab8:	add	r2, r3, #1
   27abc:	ldr	r3, [sp, #204]	; 0xcc
   27ac0:	str	r2, [r5, #4]
   27ac4:	ldr	r1, [r3, r0, lsl #2]
   27ac8:	sdiv	r3, r2, r1
   27acc:	mls	r3, r1, r3, r2
   27ad0:	cmp	r3, #0
   27ad4:	bne	27cd0 <GetDataSlab+0xbbcc>
   27ad8:	ldr	r2, [r4, #4]
   27adc:	str	r3, [r5, #4]
   27ae0:	ldr	r1, [sp, #196]	; 0xc4
   27ae4:	sdiv	r3, lr, r2
   27ae8:	ldr	r1, [r1, r0, lsl #2]
   27aec:	mls	r3, r2, r3, lr
   27af0:	cmp	r3, #0
   27af4:	subne	r3, r2, r3
   27af8:	ldrne	r2, [r4]
   27afc:	mlane	r3, r1, r2, r3
   27b00:	bne	27b14 <GetDataSlab+0xba10>
   27b04:	cmp	r1, #0
   27b08:	beq	27b1c <GetDataSlab+0xba18>
   27b0c:	ldr	r3, [r4]
   27b10:	mul	r3, r3, r1
   27b14:	add	ip, ip, r3, lsl #1
   27b18:	add	lr, lr, r3
   27b1c:	add	r0, r0, #1
   27b20:	add	r4, r4, #4
   27b24:	add	r5, r5, #4
   27b28:	b	27aa8 <GetDataSlab+0xb9a4>
   27b2c:	ldr	r3, [sl, r2, lsl #2]
   27b30:	mov	r6, r0
   27b34:	sub	r3, r3, #1
   27b38:	str	r3, [r4, #4]
   27b3c:	ldr	r3, [r5], #4
   27b40:	mov	r1, r5
   27b44:	str	r3, [r0, #4]
   27b48:	cmp	r1, fp
   27b4c:	bne	27b7c <GetDataSlab+0xba78>
   27b50:	ldr	r1, [sp, #196]	; 0xc4
   27b54:	add	r0, r0, #4
   27b58:	add	r4, r4, #4
   27b5c:	ldr	r3, [sp, #204]	; 0xcc
   27b60:	ldr	r1, [r1, r2, lsl #2]
   27b64:	ldr	r3, [r3, r2, lsl #2]
   27b68:	add	r2, r2, #1
   27b6c:	mul	r8, r3, r8
   27b70:	ldr	r3, [r6]
   27b74:	mla	lr, r1, r3, lr
   27b78:	b	27a24 <GetDataSlab+0xb920>
   27b7c:	str	r1, [sp, #8]
   27b80:	ldr	r3, [r1, #-4]!
   27b84:	ldr	ip, [r4, #4]
   27b88:	mul	r3, r3, ip
   27b8c:	ldr	ip, [r0, #4]
   27b90:	str	r3, [r4, #4]
   27b94:	ldr	r3, [sp, #8]
   27b98:	ldr	r3, [r3]
   27b9c:	mul	r3, r3, ip
   27ba0:	str	r3, [r0, #4]
   27ba4:	b	27b48 <GetDataSlab+0xba44>
   27ba8:	ldrsh	r0, [r2, #2]!
   27bac:	add	r3, r3, #1
   27bb0:	str	r0, [r1], #4
   27bb4:	b	27bfc <GetDataSlab+0xbaf8>
   27bb8:	add	r3, sp, #152	; 0x98
   27bbc:	add	r3, r3, r0, lsl #2
   27bc0:	ldr	r3, [r3, #-120]	; 0xffffff88
   27bc4:	add	ip, ip, r3, lsl #1
   27bc8:	add	lr, lr, r3
   27bcc:	add	r6, r6, r7
   27bd0:	cmp	r6, r8
   27bd4:	bge	1c230 <GetDataSlab+0x12c>
   27bd8:	ldr	r3, [sp, #196]	; 0xc4
   27bdc:	ldr	r3, [r3]
   27be0:	cmp	r3, #0
   27be4:	addne	ip, ip, r3, lsl #1
   27be8:	addne	lr, lr, r3
   27bec:	ldr	r3, [sp]
   27bf0:	sub	r2, ip, #2
   27bf4:	add	r1, r3, r6, lsl #2
   27bf8:	mov	r3, #0
   27bfc:	ldr	r0, [sp, #204]	; 0xcc
   27c00:	ldr	r7, [r0]
   27c04:	cmp	r7, r3
   27c08:	bgt	27ba8 <GetDataSlab+0xbaa4>
   27c0c:	ldr	r3, [sp, #196]	; 0xc4
   27c10:	add	r5, sp, #72	; 0x48
   27c14:	mov	r4, r9
   27c18:	mov	r0, #1
   27c1c:	ldr	r2, [fp]
   27c20:	ldr	r3, [r3]
   27c24:	sub	r3, r2, r3
   27c28:	add	ip, ip, r3, lsl #1
   27c2c:	add	lr, lr, r3
   27c30:	ldr	r3, [sp, #208]	; 0xd0
   27c34:	cmp	r0, r3
   27c38:	bge	27bcc <GetDataSlab+0xbac8>
   27c3c:	ldr	r3, [r5, #4]
   27c40:	add	r2, r3, #1
   27c44:	ldr	r3, [sp, #204]	; 0xcc
   27c48:	str	r2, [r5, #4]
   27c4c:	ldr	r1, [r3, r0, lsl #2]
   27c50:	sdiv	r3, r2, r1
   27c54:	mls	r3, r1, r3, r2
   27c58:	cmp	r3, #0
   27c5c:	bne	27bb8 <GetDataSlab+0xbab4>
   27c60:	ldr	r2, [r4, #4]
   27c64:	str	r3, [r5, #4]
   27c68:	ldr	r1, [sp, #196]	; 0xc4
   27c6c:	sdiv	r3, lr, r2
   27c70:	ldr	r1, [r1, r0, lsl #2]
   27c74:	mls	r3, r2, r3, lr
   27c78:	cmp	r3, #0
   27c7c:	ldrne	sl, [r4]
   27c80:	subne	r3, r2, r3
   27c84:	mlane	r3, r1, sl, r3
   27c88:	bne	27c9c <GetDataSlab+0xbb98>
   27c8c:	cmp	r1, #0
   27c90:	beq	27ca4 <GetDataSlab+0xbba0>
   27c94:	ldr	r3, [r4]
   27c98:	mul	r3, r3, r1
   27c9c:	add	ip, ip, r3, lsl #1
   27ca0:	add	lr, lr, r3
   27ca4:	add	r0, r0, #1
   27ca8:	add	r4, r4, #4
   27cac:	add	r5, r5, #4
   27cb0:	b	27c30 <GetDataSlab+0xbb2c>
   27cb4:	ldrsh	r1, [ip]
   27cb8:	add	r3, r3, #1
   27cbc:	str	r1, [r2], #4
   27cc0:	ldr	r1, [sl]
   27cc4:	add	ip, ip, r1, lsl #1
   27cc8:	add	lr, lr, r1
   27ccc:	b	27a6c <GetDataSlab+0xb968>
   27cd0:	add	r3, sp, #152	; 0x98
   27cd4:	add	r3, r3, r0, lsl #2
   27cd8:	ldr	r3, [r3, #-120]	; 0xffffff88
   27cdc:	add	ip, ip, r3, lsl #1
   27ce0:	add	lr, lr, r3
   27ce4:	add	r6, r6, r7
   27ce8:	b	27a44 <GetDataSlab+0xb940>
   27cec:	ldr	r7, [sl]
   27cf0:	add	r9, sp, #112	; 0x70
   27cf4:	add	r4, sp, #32
   27cf8:	mov	r5, fp
   27cfc:	mov	r0, r9
   27d00:	mov	lr, #0
   27d04:	mov	r2, #1
   27d08:	sub	r3, r7, #1
   27d0c:	str	r3, [sp, #32]
   27d10:	ldr	r3, [fp]
   27d14:	str	r3, [sp, #112]	; 0x70
   27d18:	ldr	r3, [sp, #204]	; 0xcc
   27d1c:	ldr	r8, [r3]
   27d20:	ldr	r3, [sp, #208]	; 0xd0
   27d24:	cmp	r2, r3
   27d28:	blt	27e28 <GetDataSlab+0xbd24>
   27d2c:	ldr	r3, [sp, #4]
   27d30:	cmp	r7, #1
   27d34:	mov	r6, #0
   27d38:	add	ip, r3, lr, lsl #1
   27d3c:	beq	27ecc <GetDataSlab+0xbdc8>
   27d40:	cmp	r6, r8
   27d44:	bge	1c230 <GetDataSlab+0x12c>
   27d48:	ldr	r3, [sp, #196]	; 0xc4
   27d4c:	ldr	r3, [r3]
   27d50:	cmp	r3, #0
   27d54:	addne	ip, ip, r3, lsl #1
   27d58:	addne	lr, lr, r3
   27d5c:	ldr	r3, [sp]
   27d60:	add	r2, r3, r6, lsl #2
   27d64:	mov	r3, #0
   27d68:	ldr	r1, [sp, #204]	; 0xcc
   27d6c:	ldr	r7, [r1]
   27d70:	cmp	r7, r3
   27d74:	bgt	27fb0 <GetDataSlab+0xbeac>
   27d78:	ldr	r3, [sp, #196]	; 0xc4
   27d7c:	add	r5, sp, #72	; 0x48
   27d80:	mov	r4, r9
   27d84:	mov	r0, #1
   27d88:	ldr	r2, [fp]
   27d8c:	ldr	r3, [r3]
   27d90:	sub	r3, r2, r3
   27d94:	ldr	r2, [sl]
   27d98:	mls	r3, r2, r7, r3
   27d9c:	add	ip, ip, r3, lsl #1
   27da0:	add	lr, lr, r3
   27da4:	ldr	r3, [sp, #208]	; 0xd0
   27da8:	cmp	r0, r3
   27dac:	bge	27fe0 <GetDataSlab+0xbedc>
   27db0:	ldr	r3, [r5, #4]
   27db4:	add	r2, r3, #1
   27db8:	ldr	r3, [sp, #204]	; 0xcc
   27dbc:	str	r2, [r5, #4]
   27dc0:	ldr	r1, [r3, r0, lsl #2]
   27dc4:	sdiv	r3, r2, r1
   27dc8:	mls	r3, r1, r3, r2
   27dcc:	cmp	r3, #0
   27dd0:	bne	27fcc <GetDataSlab+0xbec8>
   27dd4:	ldr	r2, [r4, #4]
   27dd8:	str	r3, [r5, #4]
   27ddc:	ldr	r1, [sp, #196]	; 0xc4
   27de0:	sdiv	r3, lr, r2
   27de4:	ldr	r1, [r1, r0, lsl #2]
   27de8:	mls	r3, r2, r3, lr
   27dec:	cmp	r3, #0
   27df0:	subne	r3, r2, r3
   27df4:	ldrne	r2, [r4]
   27df8:	mlane	r3, r1, r2, r3
   27dfc:	bne	27e10 <GetDataSlab+0xbd0c>
   27e00:	cmp	r1, #0
   27e04:	beq	27e18 <GetDataSlab+0xbd14>
   27e08:	ldr	r3, [r4]
   27e0c:	mul	r3, r3, r1
   27e10:	add	ip, ip, r3, lsl #1
   27e14:	add	lr, lr, r3
   27e18:	add	r0, r0, #1
   27e1c:	add	r4, r4, #4
   27e20:	add	r5, r5, #4
   27e24:	b	27da4 <GetDataSlab+0xbca0>
   27e28:	ldr	r3, [sl, r2, lsl #2]
   27e2c:	mov	r6, r0
   27e30:	sub	r3, r3, #1
   27e34:	str	r3, [r4, #4]
   27e38:	ldr	r3, [r5], #4
   27e3c:	mov	r1, r5
   27e40:	str	r3, [r0, #4]
   27e44:	cmp	r1, fp
   27e48:	bne	27e78 <GetDataSlab+0xbd74>
   27e4c:	ldr	r1, [sp, #196]	; 0xc4
   27e50:	add	r0, r0, #4
   27e54:	add	r4, r4, #4
   27e58:	ldr	r3, [sp, #204]	; 0xcc
   27e5c:	ldr	r1, [r1, r2, lsl #2]
   27e60:	ldr	r3, [r3, r2, lsl #2]
   27e64:	add	r2, r2, #1
   27e68:	mul	r8, r3, r8
   27e6c:	ldr	r3, [r6]
   27e70:	mla	lr, r1, r3, lr
   27e74:	b	27d20 <GetDataSlab+0xbc1c>
   27e78:	str	r1, [sp, #8]
   27e7c:	ldr	r3, [r1, #-4]!
   27e80:	ldr	ip, [r4, #4]
   27e84:	mul	r3, r3, ip
   27e88:	ldr	ip, [r0, #4]
   27e8c:	str	r3, [r4, #4]
   27e90:	ldr	r3, [sp, #8]
   27e94:	ldr	r3, [r3]
   27e98:	mul	r3, r3, ip
   27e9c:	str	r3, [r0, #4]
   27ea0:	b	27e44 <GetDataSlab+0xbd40>
   27ea4:	ldrh	r0, [r2, #2]!
   27ea8:	add	r3, r3, #1
   27eac:	str	r0, [r1], #4
   27eb0:	b	27ef8 <GetDataSlab+0xbdf4>
   27eb4:	add	r3, sp, #152	; 0x98
   27eb8:	add	r3, r3, r0, lsl #2
   27ebc:	ldr	r3, [r3, #-120]	; 0xffffff88
   27ec0:	add	ip, ip, r3, lsl #1
   27ec4:	add	lr, lr, r3
   27ec8:	add	r6, r6, r7
   27ecc:	cmp	r6, r8
   27ed0:	bge	1c230 <GetDataSlab+0x12c>
   27ed4:	ldr	r3, [sp, #196]	; 0xc4
   27ed8:	ldr	r3, [r3]
   27edc:	cmp	r3, #0
   27ee0:	addne	ip, ip, r3, lsl #1
   27ee4:	addne	lr, lr, r3
   27ee8:	ldr	r3, [sp]
   27eec:	sub	r2, ip, #2
   27ef0:	add	r1, r3, r6, lsl #2
   27ef4:	mov	r3, #0
   27ef8:	ldr	r0, [sp, #204]	; 0xcc
   27efc:	ldr	r7, [r0]
   27f00:	cmp	r7, r3
   27f04:	bgt	27ea4 <GetDataSlab+0xbda0>
   27f08:	ldr	r3, [sp, #196]	; 0xc4
   27f0c:	add	r5, sp, #72	; 0x48
   27f10:	mov	r4, r9
   27f14:	mov	r0, #1
   27f18:	ldr	r2, [fp]
   27f1c:	ldr	r3, [r3]
   27f20:	sub	r3, r2, r3
   27f24:	add	ip, ip, r3, lsl #1
   27f28:	add	lr, lr, r3
   27f2c:	ldr	r3, [sp, #208]	; 0xd0
   27f30:	cmp	r0, r3
   27f34:	bge	27ec8 <GetDataSlab+0xbdc4>
   27f38:	ldr	r3, [r5, #4]
   27f3c:	add	r2, r3, #1
   27f40:	ldr	r3, [sp, #204]	; 0xcc
   27f44:	str	r2, [r5, #4]
   27f48:	ldr	r1, [r3, r0, lsl #2]
   27f4c:	sdiv	r3, r2, r1
   27f50:	mls	r3, r1, r3, r2
   27f54:	cmp	r3, #0
   27f58:	bne	27eb4 <GetDataSlab+0xbdb0>
   27f5c:	ldr	r2, [r4, #4]
   27f60:	str	r3, [r5, #4]
   27f64:	ldr	r1, [sp, #196]	; 0xc4
   27f68:	sdiv	r3, lr, r2
   27f6c:	ldr	r1, [r1, r0, lsl #2]
   27f70:	mls	r3, r2, r3, lr
   27f74:	cmp	r3, #0
   27f78:	ldrne	sl, [r4]
   27f7c:	subne	r3, r2, r3
   27f80:	mlane	r3, r1, sl, r3
   27f84:	bne	27f98 <GetDataSlab+0xbe94>
   27f88:	cmp	r1, #0
   27f8c:	beq	27fa0 <GetDataSlab+0xbe9c>
   27f90:	ldr	r3, [r4]
   27f94:	mul	r3, r3, r1
   27f98:	add	ip, ip, r3, lsl #1
   27f9c:	add	lr, lr, r3
   27fa0:	add	r0, r0, #1
   27fa4:	add	r4, r4, #4
   27fa8:	add	r5, r5, #4
   27fac:	b	27f2c <GetDataSlab+0xbe28>
   27fb0:	ldrh	r1, [ip]
   27fb4:	add	r3, r3, #1
   27fb8:	str	r1, [r2], #4
   27fbc:	ldr	r1, [sl]
   27fc0:	add	ip, ip, r1, lsl #1
   27fc4:	add	lr, lr, r1
   27fc8:	b	27d68 <GetDataSlab+0xbc64>
   27fcc:	add	r3, sp, #152	; 0x98
   27fd0:	add	r3, r3, r0, lsl #2
   27fd4:	ldr	r3, [r3, #-120]	; 0xffffff88
   27fd8:	add	ip, ip, r3, lsl #1
   27fdc:	add	lr, lr, r3
   27fe0:	add	r6, r6, r7
   27fe4:	b	27d40 <GetDataSlab+0xbc3c>
   27fe8:	ldr	r7, [sl]
   27fec:	add	r9, sp, #112	; 0x70
   27ff0:	add	r4, sp, #32
   27ff4:	mov	r5, fp
   27ff8:	mov	r0, r9
   27ffc:	mov	ip, #0
   28000:	mov	r2, #1
   28004:	sub	r3, r7, #1
   28008:	str	r3, [sp, #32]
   2800c:	ldr	r3, [fp]
   28010:	str	r3, [sp, #112]	; 0x70
   28014:	ldr	r3, [sp, #204]	; 0xcc
   28018:	ldr	r8, [r3]
   2801c:	ldr	r3, [sp, #208]	; 0xd0
   28020:	cmp	r2, r3
   28024:	blt	28124 <GetDataSlab+0xc020>
   28028:	ldr	r3, [sp, #4]
   2802c:	cmp	r7, #1
   28030:	mov	r6, #0
   28034:	add	r0, r3, ip
   28038:	beq	281c8 <GetDataSlab+0xc0c4>
   2803c:	cmp	r6, r8
   28040:	bge	1c230 <GetDataSlab+0x12c>
   28044:	ldr	r3, [sp, #196]	; 0xc4
   28048:	ldr	r3, [r3]
   2804c:	cmp	r3, #0
   28050:	addne	r0, r0, r3
   28054:	addne	ip, ip, r3
   28058:	ldr	r3, [sp]
   2805c:	add	r2, r3, r6, lsl #2
   28060:	mov	r3, #0
   28064:	ldr	r1, [sp, #204]	; 0xcc
   28068:	ldr	r7, [r1]
   2806c:	cmp	r7, r3
   28070:	bgt	282a8 <GetDataSlab+0xc1a4>
   28074:	ldr	r3, [sp, #196]	; 0xc4
   28078:	add	r5, sp, #72	; 0x48
   2807c:	mov	r4, r9
   28080:	mov	lr, #1
   28084:	ldr	r2, [fp]
   28088:	ldr	r3, [r3]
   2808c:	sub	r3, r2, r3
   28090:	ldr	r2, [sl]
   28094:	mls	r3, r2, r7, r3
   28098:	add	ip, ip, r3
   2809c:	add	r0, r0, r3
   280a0:	ldr	r3, [sp, #208]	; 0xd0
   280a4:	cmp	lr, r3
   280a8:	bge	282d8 <GetDataSlab+0xc1d4>
   280ac:	ldr	r3, [r5, #4]
   280b0:	add	r2, r3, #1
   280b4:	ldr	r3, [sp, #204]	; 0xcc
   280b8:	str	r2, [r5, #4]
   280bc:	ldr	r1, [r3, lr, lsl #2]
   280c0:	sdiv	r3, r2, r1
   280c4:	mls	r3, r1, r3, r2
   280c8:	cmp	r3, #0
   280cc:	bne	282c4 <GetDataSlab+0xc1c0>
   280d0:	ldr	r2, [r4, #4]
   280d4:	str	r3, [r5, #4]
   280d8:	ldr	r1, [sp, #196]	; 0xc4
   280dc:	sdiv	r3, ip, r2
   280e0:	ldr	r1, [r1, lr, lsl #2]
   280e4:	mls	r3, r2, r3, ip
   280e8:	cmp	r3, #0
   280ec:	subne	r3, r2, r3
   280f0:	ldrne	r2, [r4]
   280f4:	mlane	r3, r1, r2, r3
   280f8:	bne	2810c <GetDataSlab+0xc008>
   280fc:	cmp	r1, #0
   28100:	beq	28114 <GetDataSlab+0xc010>
   28104:	ldr	r3, [r4]
   28108:	mul	r3, r3, r1
   2810c:	add	r0, r0, r3
   28110:	add	ip, ip, r3
   28114:	add	lr, lr, #1
   28118:	add	r4, r4, #4
   2811c:	add	r5, r5, #4
   28120:	b	280a0 <GetDataSlab+0xbf9c>
   28124:	ldr	r3, [sl, r2, lsl #2]
   28128:	mov	r6, r0
   2812c:	sub	r3, r3, #1
   28130:	str	r3, [r4, #4]
   28134:	ldr	r3, [r5], #4
   28138:	mov	r1, r5
   2813c:	str	r3, [r0, #4]
   28140:	cmp	r1, fp
   28144:	bne	28174 <GetDataSlab+0xc070>
   28148:	ldr	r1, [sp, #196]	; 0xc4
   2814c:	add	r0, r0, #4
   28150:	add	r4, r4, #4
   28154:	ldr	r3, [sp, #204]	; 0xcc
   28158:	ldr	r1, [r1, r2, lsl #2]
   2815c:	ldr	r3, [r3, r2, lsl #2]
   28160:	add	r2, r2, #1
   28164:	mul	r8, r3, r8
   28168:	ldr	r3, [r6]
   2816c:	mla	ip, r1, r3, ip
   28170:	b	2801c <GetDataSlab+0xbf18>
   28174:	str	r1, [sp, #8]
   28178:	ldr	r3, [r1, #-4]!
   2817c:	ldr	lr, [r4, #4]
   28180:	mul	r3, r3, lr
   28184:	ldr	lr, [r0, #4]
   28188:	str	r3, [r4, #4]
   2818c:	ldr	r3, [sp, #8]
   28190:	ldr	r3, [r3]
   28194:	mul	r3, r3, lr
   28198:	str	r3, [r0, #4]
   2819c:	b	28140 <GetDataSlab+0xc03c>
   281a0:	ldrsb	r1, [r0, r3]
   281a4:	add	r3, r3, #1
   281a8:	str	r1, [r2], #4
   281ac:	b	281f0 <GetDataSlab+0xc0ec>
   281b0:	add	r3, sp, #152	; 0x98
   281b4:	add	r3, r3, lr, lsl #2
   281b8:	ldr	r3, [r3, #-120]	; 0xffffff88
   281bc:	add	ip, ip, r3
   281c0:	add	r0, r0, r3
   281c4:	add	r6, r6, r7
   281c8:	cmp	r6, r8
   281cc:	bge	1c230 <GetDataSlab+0x12c>
   281d0:	ldr	r3, [sp, #196]	; 0xc4
   281d4:	ldr	r3, [r3]
   281d8:	cmp	r3, #0
   281dc:	addne	r0, r0, r3
   281e0:	addne	ip, ip, r3
   281e4:	ldr	r3, [sp]
   281e8:	add	r2, r3, r6, lsl #2
   281ec:	mov	r3, #0
   281f0:	ldr	r1, [sp, #204]	; 0xcc
   281f4:	ldr	r7, [r1]
   281f8:	cmp	r7, r3
   281fc:	bgt	281a0 <GetDataSlab+0xc09c>
   28200:	ldr	r3, [sp, #196]	; 0xc4
   28204:	add	r5, sp, #72	; 0x48
   28208:	mov	r4, r9
   2820c:	mov	lr, #1
   28210:	ldr	r2, [fp]
   28214:	ldr	r3, [r3]
   28218:	sub	r3, r2, r3
   2821c:	add	ip, ip, r3
   28220:	add	r0, r0, r3
   28224:	ldr	r3, [sp, #208]	; 0xd0
   28228:	cmp	lr, r3
   2822c:	bge	281c4 <GetDataSlab+0xc0c0>
   28230:	ldr	r3, [r5, #4]
   28234:	add	r2, r3, #1
   28238:	ldr	r3, [sp, #204]	; 0xcc
   2823c:	str	r2, [r5, #4]
   28240:	ldr	r1, [r3, lr, lsl #2]
   28244:	sdiv	r3, r2, r1
   28248:	mls	r3, r1, r3, r2
   2824c:	cmp	r3, #0
   28250:	bne	281b0 <GetDataSlab+0xc0ac>
   28254:	ldr	r2, [r4, #4]
   28258:	str	r3, [r5, #4]
   2825c:	ldr	r1, [sp, #196]	; 0xc4
   28260:	sdiv	r3, ip, r2
   28264:	ldr	r1, [r1, lr, lsl #2]
   28268:	mls	r3, r2, r3, ip
   2826c:	cmp	r3, #0
   28270:	ldrne	sl, [r4]
   28274:	subne	r3, r2, r3
   28278:	mlane	r3, r1, sl, r3
   2827c:	bne	28290 <GetDataSlab+0xc18c>
   28280:	cmp	r1, #0
   28284:	beq	28298 <GetDataSlab+0xc194>
   28288:	ldr	r3, [r4]
   2828c:	mul	r3, r3, r1
   28290:	add	r0, r0, r3
   28294:	add	ip, ip, r3
   28298:	add	lr, lr, #1
   2829c:	add	r4, r4, #4
   282a0:	add	r5, r5, #4
   282a4:	b	28224 <GetDataSlab+0xc120>
   282a8:	ldrsb	r1, [r0]
   282ac:	add	r3, r3, #1
   282b0:	str	r1, [r2], #4
   282b4:	ldr	r1, [sl]
   282b8:	add	r0, r0, r1
   282bc:	add	ip, ip, r1
   282c0:	b	28064 <GetDataSlab+0xbf60>
   282c4:	add	r3, sp, #152	; 0x98
   282c8:	add	r3, r3, lr, lsl #2
   282cc:	ldr	r3, [r3, #-120]	; 0xffffff88
   282d0:	add	ip, ip, r3
   282d4:	add	r0, r0, r3
   282d8:	add	r6, r6, r7
   282dc:	b	2803c <GetDataSlab+0xbf38>
   282e0:	ldr	r7, [sl]
   282e4:	add	r9, sp, #112	; 0x70
   282e8:	add	r4, sp, #32
   282ec:	mov	r5, fp
   282f0:	mov	r0, r9
   282f4:	mov	ip, #0
   282f8:	mov	r2, #1
   282fc:	sub	r3, r7, #1
   28300:	str	r3, [sp, #32]
   28304:	ldr	r3, [fp]
   28308:	str	r3, [sp, #112]	; 0x70
   2830c:	ldr	r3, [sp, #204]	; 0xcc
   28310:	ldr	r8, [r3]
   28314:	ldr	r3, [sp, #208]	; 0xd0
   28318:	cmp	r2, r3
   2831c:	blt	2841c <GetDataSlab+0xc318>
   28320:	ldr	r3, [sp, #4]
   28324:	cmp	r7, #1
   28328:	mov	r6, #0
   2832c:	add	r0, r3, ip
   28330:	beq	284c0 <GetDataSlab+0xc3bc>
   28334:	cmp	r6, r8
   28338:	bge	1c230 <GetDataSlab+0x12c>
   2833c:	ldr	r3, [sp, #196]	; 0xc4
   28340:	ldr	r3, [r3]
   28344:	cmp	r3, #0
   28348:	addne	r0, r0, r3
   2834c:	addne	ip, ip, r3
   28350:	ldr	r3, [sp]
   28354:	add	r2, r3, r6, lsl #2
   28358:	mov	r3, #0
   2835c:	ldr	r1, [sp, #204]	; 0xcc
   28360:	ldr	r7, [r1]
   28364:	cmp	r7, r3
   28368:	bgt	285a0 <GetDataSlab+0xc49c>
   2836c:	ldr	r3, [sp, #196]	; 0xc4
   28370:	add	r5, sp, #72	; 0x48
   28374:	mov	r4, r9
   28378:	mov	lr, #1
   2837c:	ldr	r2, [fp]
   28380:	ldr	r3, [r3]
   28384:	sub	r3, r2, r3
   28388:	ldr	r2, [sl]
   2838c:	mls	r3, r2, r7, r3
   28390:	add	ip, ip, r3
   28394:	add	r0, r0, r3
   28398:	ldr	r3, [sp, #208]	; 0xd0
   2839c:	cmp	lr, r3
   283a0:	bge	285d0 <GetDataSlab+0xc4cc>
   283a4:	ldr	r3, [r5, #4]
   283a8:	add	r2, r3, #1
   283ac:	ldr	r3, [sp, #204]	; 0xcc
   283b0:	str	r2, [r5, #4]
   283b4:	ldr	r1, [r3, lr, lsl #2]
   283b8:	sdiv	r3, r2, r1
   283bc:	mls	r3, r1, r3, r2
   283c0:	cmp	r3, #0
   283c4:	bne	285bc <GetDataSlab+0xc4b8>
   283c8:	ldr	r2, [r4, #4]
   283cc:	str	r3, [r5, #4]
   283d0:	ldr	r1, [sp, #196]	; 0xc4
   283d4:	sdiv	r3, ip, r2
   283d8:	ldr	r1, [r1, lr, lsl #2]
   283dc:	mls	r3, r2, r3, ip
   283e0:	cmp	r3, #0
   283e4:	subne	r3, r2, r3
   283e8:	ldrne	r2, [r4]
   283ec:	mlane	r3, r1, r2, r3
   283f0:	bne	28404 <GetDataSlab+0xc300>
   283f4:	cmp	r1, #0
   283f8:	beq	2840c <GetDataSlab+0xc308>
   283fc:	ldr	r3, [r4]
   28400:	mul	r3, r3, r1
   28404:	add	r0, r0, r3
   28408:	add	ip, ip, r3
   2840c:	add	lr, lr, #1
   28410:	add	r4, r4, #4
   28414:	add	r5, r5, #4
   28418:	b	28398 <GetDataSlab+0xc294>
   2841c:	ldr	r3, [sl, r2, lsl #2]
   28420:	mov	r6, r0
   28424:	sub	r3, r3, #1
   28428:	str	r3, [r4, #4]
   2842c:	ldr	r3, [r5], #4
   28430:	mov	r1, r5
   28434:	str	r3, [r0, #4]
   28438:	cmp	r1, fp
   2843c:	bne	2846c <GetDataSlab+0xc368>
   28440:	ldr	r1, [sp, #196]	; 0xc4
   28444:	add	r0, r0, #4
   28448:	add	r4, r4, #4
   2844c:	ldr	r3, [sp, #204]	; 0xcc
   28450:	ldr	r1, [r1, r2, lsl #2]
   28454:	ldr	r3, [r3, r2, lsl #2]
   28458:	add	r2, r2, #1
   2845c:	mul	r8, r3, r8
   28460:	ldr	r3, [r6]
   28464:	mla	ip, r1, r3, ip
   28468:	b	28314 <GetDataSlab+0xc210>
   2846c:	str	r1, [sp, #8]
   28470:	ldr	r3, [r1, #-4]!
   28474:	ldr	lr, [r4, #4]
   28478:	mul	r3, r3, lr
   2847c:	ldr	lr, [r0, #4]
   28480:	str	r3, [r4, #4]
   28484:	ldr	r3, [sp, #8]
   28488:	ldr	r3, [r3]
   2848c:	mul	r3, r3, lr
   28490:	str	r3, [r0, #4]
   28494:	b	28438 <GetDataSlab+0xc334>
   28498:	ldrb	r1, [r0, r3]
   2849c:	add	r3, r3, #1
   284a0:	str	r1, [r2], #4
   284a4:	b	284e8 <GetDataSlab+0xc3e4>
   284a8:	add	r3, sp, #152	; 0x98
   284ac:	add	r3, r3, lr, lsl #2
   284b0:	ldr	r3, [r3, #-120]	; 0xffffff88
   284b4:	add	ip, ip, r3
   284b8:	add	r0, r0, r3
   284bc:	add	r6, r6, r7
   284c0:	cmp	r6, r8
   284c4:	bge	1c230 <GetDataSlab+0x12c>
   284c8:	ldr	r3, [sp, #196]	; 0xc4
   284cc:	ldr	r3, [r3]
   284d0:	cmp	r3, #0
   284d4:	addne	r0, r0, r3
   284d8:	addne	ip, ip, r3
   284dc:	ldr	r3, [sp]
   284e0:	add	r2, r3, r6, lsl #2
   284e4:	mov	r3, #0
   284e8:	ldr	r1, [sp, #204]	; 0xcc
   284ec:	ldr	r7, [r1]
   284f0:	cmp	r7, r3
   284f4:	bgt	28498 <GetDataSlab+0xc394>
   284f8:	ldr	r3, [sp, #196]	; 0xc4
   284fc:	add	r5, sp, #72	; 0x48
   28500:	mov	r4, r9
   28504:	mov	lr, #1
   28508:	ldr	r2, [fp]
   2850c:	ldr	r3, [r3]
   28510:	sub	r3, r2, r3
   28514:	add	ip, ip, r3
   28518:	add	r0, r0, r3
   2851c:	ldr	r3, [sp, #208]	; 0xd0
   28520:	cmp	lr, r3
   28524:	bge	284bc <GetDataSlab+0xc3b8>
   28528:	ldr	r3, [r5, #4]
   2852c:	add	r2, r3, #1
   28530:	ldr	r3, [sp, #204]	; 0xcc
   28534:	str	r2, [r5, #4]
   28538:	ldr	r1, [r3, lr, lsl #2]
   2853c:	sdiv	r3, r2, r1
   28540:	mls	r3, r1, r3, r2
   28544:	cmp	r3, #0
   28548:	bne	284a8 <GetDataSlab+0xc3a4>
   2854c:	ldr	r2, [r4, #4]
   28550:	str	r3, [r5, #4]
   28554:	ldr	r1, [sp, #196]	; 0xc4
   28558:	sdiv	r3, ip, r2
   2855c:	ldr	r1, [r1, lr, lsl #2]
   28560:	mls	r3, r2, r3, ip
   28564:	cmp	r3, #0
   28568:	ldrne	sl, [r4]
   2856c:	subne	r3, r2, r3
   28570:	mlane	r3, r1, sl, r3
   28574:	bne	28588 <GetDataSlab+0xc484>
   28578:	cmp	r1, #0
   2857c:	beq	28590 <GetDataSlab+0xc48c>
   28580:	ldr	r3, [r4]
   28584:	mul	r3, r3, r1
   28588:	add	r0, r0, r3
   2858c:	add	ip, ip, r3
   28590:	add	lr, lr, #1
   28594:	add	r4, r4, #4
   28598:	add	r5, r5, #4
   2859c:	b	2851c <GetDataSlab+0xc418>
   285a0:	ldrb	r1, [r0]
   285a4:	add	r3, r3, #1
   285a8:	str	r1, [r2], #4
   285ac:	ldr	r1, [sl]
   285b0:	add	r0, r0, r1
   285b4:	add	ip, ip, r1
   285b8:	b	2835c <GetDataSlab+0xc258>
   285bc:	add	r3, sp, #152	; 0x98
   285c0:	add	r3, r3, lr, lsl #2
   285c4:	ldr	r3, [r3, #-120]	; 0xffffff88
   285c8:	add	ip, ip, r3
   285cc:	add	r0, r0, r3
   285d0:	add	r6, r6, r7
   285d4:	b	28334 <GetDataSlab+0xc230>
   285d8:	cmp	r5, #12
   285dc:	bne	288dc <GetDataSlab+0xc7d8>
   285e0:	ldr	r7, [sl]
   285e4:	add	r9, sp, #112	; 0x70
   285e8:	add	r4, sp, #32
   285ec:	mov	r5, fp
   285f0:	mov	r0, r9
   285f4:	mov	lr, #0
   285f8:	mov	r2, #1
   285fc:	sub	r3, r7, #1
   28600:	str	r3, [sp, #32]
   28604:	ldr	r3, [fp]
   28608:	str	r3, [sp, #112]	; 0x70
   2860c:	ldr	r3, [sp, #204]	; 0xcc
   28610:	ldr	r8, [r3]
   28614:	ldr	r3, [sp, #208]	; 0xd0
   28618:	cmp	r2, r3
   2861c:	blt	2871c <GetDataSlab+0xc618>
   28620:	ldr	r3, [sp, #4]
   28624:	cmp	r7, #1
   28628:	mov	r6, #0
   2862c:	add	ip, r3, lr, lsl #3
   28630:	beq	287c0 <GetDataSlab+0xc6bc>
   28634:	cmp	r6, r8
   28638:	bge	1c230 <GetDataSlab+0x12c>
   2863c:	ldr	r3, [sp, #196]	; 0xc4
   28640:	ldr	r3, [r3]
   28644:	cmp	r3, #0
   28648:	addne	ip, ip, r3, lsl #3
   2864c:	addne	lr, lr, r3
   28650:	ldr	r3, [sp]
   28654:	add	r2, r3, r6, lsl #2
   28658:	mov	r3, #0
   2865c:	ldr	r1, [sp, #204]	; 0xcc
   28660:	ldr	r7, [r1]
   28664:	cmp	r7, r3
   28668:	bgt	288a4 <GetDataSlab+0xc7a0>
   2866c:	ldr	r3, [sp, #196]	; 0xc4
   28670:	add	r5, sp, #72	; 0x48
   28674:	mov	r4, r9
   28678:	mov	r0, #1
   2867c:	ldr	r2, [fp]
   28680:	ldr	r3, [r3]
   28684:	sub	r3, r2, r3
   28688:	ldr	r2, [sl]
   2868c:	mls	r3, r2, r7, r3
   28690:	add	ip, ip, r3, lsl #3
   28694:	add	lr, lr, r3
   28698:	ldr	r3, [sp, #208]	; 0xd0
   2869c:	cmp	r0, r3
   286a0:	bge	288d4 <GetDataSlab+0xc7d0>
   286a4:	ldr	r3, [r5, #4]
   286a8:	add	r2, r3, #1
   286ac:	ldr	r3, [sp, #204]	; 0xcc
   286b0:	str	r2, [r5, #4]
   286b4:	ldr	r1, [r3, r0, lsl #2]
   286b8:	sdiv	r3, r2, r1
   286bc:	mls	r3, r1, r3, r2
   286c0:	cmp	r3, #0
   286c4:	bne	288c0 <GetDataSlab+0xc7bc>
   286c8:	ldr	r2, [r4, #4]
   286cc:	str	r3, [r5, #4]
   286d0:	ldr	r1, [sp, #196]	; 0xc4
   286d4:	sdiv	r3, lr, r2
   286d8:	ldr	r1, [r1, r0, lsl #2]
   286dc:	mls	r3, r2, r3, lr
   286e0:	cmp	r3, #0
   286e4:	subne	r3, r2, r3
   286e8:	ldrne	r2, [r4]
   286ec:	mlane	r3, r1, r2, r3
   286f0:	bne	28704 <GetDataSlab+0xc600>
   286f4:	cmp	r1, #0
   286f8:	beq	2870c <GetDataSlab+0xc608>
   286fc:	ldr	r3, [r4]
   28700:	mul	r3, r3, r1
   28704:	add	ip, ip, r3, lsl #3
   28708:	add	lr, lr, r3
   2870c:	add	r0, r0, #1
   28710:	add	r4, r4, #4
   28714:	add	r5, r5, #4
   28718:	b	28698 <GetDataSlab+0xc594>
   2871c:	ldr	r3, [sl, r2, lsl #2]
   28720:	mov	r6, r0
   28724:	sub	r3, r3, #1
   28728:	str	r3, [r4, #4]
   2872c:	ldr	r3, [r5], #4
   28730:	mov	r1, r5
   28734:	str	r3, [r0, #4]
   28738:	cmp	r1, fp
   2873c:	bne	2876c <GetDataSlab+0xc668>
   28740:	ldr	r1, [sp, #196]	; 0xc4
   28744:	add	r0, r0, #4
   28748:	add	r4, r4, #4
   2874c:	ldr	r3, [sp, #204]	; 0xcc
   28750:	ldr	r1, [r1, r2, lsl #2]
   28754:	ldr	r3, [r3, r2, lsl #2]
   28758:	add	r2, r2, #1
   2875c:	mul	r8, r3, r8
   28760:	ldr	r3, [r6]
   28764:	mla	lr, r1, r3, lr
   28768:	b	28614 <GetDataSlab+0xc510>
   2876c:	str	r1, [sp, #8]
   28770:	ldr	r3, [r1, #-4]!
   28774:	ldr	ip, [r4, #4]
   28778:	mul	r3, r3, ip
   2877c:	ldr	ip, [r0, #4]
   28780:	str	r3, [r4, #4]
   28784:	ldr	r3, [sp, #8]
   28788:	ldr	r3, [r3]
   2878c:	mul	r3, r3, ip
   28790:	str	r3, [r0, #4]
   28794:	b	28738 <GetDataSlab+0xc634>
   28798:	ldr	r0, [r2, #8]!
   2879c:	add	r3, r3, #1
   287a0:	str	r0, [r1], #4
   287a4:	b	287ec <GetDataSlab+0xc6e8>
   287a8:	add	r3, sp, #152	; 0x98
   287ac:	add	r3, r3, r0, lsl #2
   287b0:	ldr	r3, [r3, #-120]	; 0xffffff88
   287b4:	add	ip, ip, r3, lsl #3
   287b8:	add	lr, lr, r3
   287bc:	add	r6, r6, r7
   287c0:	cmp	r6, r8
   287c4:	bge	1c230 <GetDataSlab+0x12c>
   287c8:	ldr	r3, [sp, #196]	; 0xc4
   287cc:	ldr	r3, [r3]
   287d0:	cmp	r3, #0
   287d4:	addne	ip, ip, r3, lsl #3
   287d8:	addne	lr, lr, r3
   287dc:	ldr	r3, [sp]
   287e0:	sub	r2, ip, #8
   287e4:	add	r1, r3, r6, lsl #2
   287e8:	mov	r3, #0
   287ec:	ldr	r0, [sp, #204]	; 0xcc
   287f0:	ldr	r7, [r0]
   287f4:	cmp	r7, r3
   287f8:	bgt	28798 <GetDataSlab+0xc694>
   287fc:	ldr	r3, [sp, #196]	; 0xc4
   28800:	add	r5, sp, #72	; 0x48
   28804:	mov	r4, r9
   28808:	mov	r0, #1
   2880c:	ldr	r2, [fp]
   28810:	ldr	r3, [r3]
   28814:	sub	r3, r2, r3
   28818:	add	ip, ip, r3, lsl #3
   2881c:	add	lr, lr, r3
   28820:	ldr	r3, [sp, #208]	; 0xd0
   28824:	cmp	r0, r3
   28828:	bge	287bc <GetDataSlab+0xc6b8>
   2882c:	ldr	r3, [r5, #4]
   28830:	add	r2, r3, #1
   28834:	ldr	r3, [sp, #204]	; 0xcc
   28838:	str	r2, [r5, #4]
   2883c:	ldr	r1, [r3, r0, lsl #2]
   28840:	sdiv	r3, r2, r1
   28844:	mls	r3, r1, r3, r2
   28848:	cmp	r3, #0
   2884c:	bne	287a8 <GetDataSlab+0xc6a4>
   28850:	ldr	r2, [r4, #4]
   28854:	str	r3, [r5, #4]
   28858:	ldr	r1, [sp, #196]	; 0xc4
   2885c:	sdiv	r3, lr, r2
   28860:	ldr	r1, [r1, r0, lsl #2]
   28864:	mls	r3, r2, r3, lr
   28868:	cmp	r3, #0
   2886c:	ldrne	sl, [r4]
   28870:	subne	r3, r2, r3
   28874:	mlane	r3, r1, sl, r3
   28878:	bne	2888c <GetDataSlab+0xc788>
   2887c:	cmp	r1, #0
   28880:	beq	28894 <GetDataSlab+0xc790>
   28884:	ldr	r3, [r4]
   28888:	mul	r3, r3, r1
   2888c:	add	ip, ip, r3, lsl #3
   28890:	add	lr, lr, r3
   28894:	add	r0, r0, #1
   28898:	add	r4, r4, #4
   2889c:	add	r5, r5, #4
   288a0:	b	28820 <GetDataSlab+0xc71c>
   288a4:	ldr	r1, [ip]
   288a8:	add	r3, r3, #1
   288ac:	str	r1, [r2], #4
   288b0:	ldr	r1, [sl]
   288b4:	add	ip, ip, r1, lsl #3
   288b8:	add	lr, lr, r1
   288bc:	b	2865c <GetDataSlab+0xc558>
   288c0:	add	r3, sp, #152	; 0x98
   288c4:	add	r3, r3, r0, lsl #2
   288c8:	ldr	r3, [r3, #-120]	; 0xffffff88
   288cc:	add	ip, ip, r3, lsl #3
   288d0:	add	lr, lr, r3
   288d4:	add	r6, r6, r7
   288d8:	b	28634 <GetDataSlab+0xc530>
   288dc:	cmp	r5, #13
   288e0:	bne	3236c <GetDataSlab+0x16268>
   288e4:	ldr	r7, [sl]
   288e8:	add	r9, sp, #112	; 0x70
   288ec:	add	r4, sp, #32
   288f0:	mov	r5, fp
   288f4:	mov	r0, r9
   288f8:	mov	lr, #0
   288fc:	mov	r2, #1
   28900:	sub	r3, r7, #1
   28904:	str	r3, [sp, #32]
   28908:	ldr	r3, [fp]
   2890c:	str	r3, [sp, #112]	; 0x70
   28910:	ldr	r3, [sp, #204]	; 0xcc
   28914:	ldr	r8, [r3]
   28918:	ldr	r3, [sp, #208]	; 0xd0
   2891c:	cmp	r2, r3
   28920:	blt	28a20 <GetDataSlab+0xc91c>
   28924:	ldr	r3, [sp, #4]
   28928:	cmp	r7, #1
   2892c:	mov	r6, #0
   28930:	add	ip, r3, lr, lsl #3
   28934:	beq	28ac4 <GetDataSlab+0xc9c0>
   28938:	cmp	r6, r8
   2893c:	bge	1c230 <GetDataSlab+0x12c>
   28940:	ldr	r3, [sp, #196]	; 0xc4
   28944:	ldr	r3, [r3]
   28948:	cmp	r3, #0
   2894c:	addne	ip, ip, r3, lsl #3
   28950:	addne	lr, lr, r3
   28954:	ldr	r3, [sp]
   28958:	add	r2, r3, r6, lsl #2
   2895c:	mov	r3, #0
   28960:	ldr	r1, [sp, #204]	; 0xcc
   28964:	ldr	r7, [r1]
   28968:	cmp	r7, r3
   2896c:	bgt	28ba8 <GetDataSlab+0xcaa4>
   28970:	ldr	r3, [sp, #196]	; 0xc4
   28974:	add	r5, sp, #72	; 0x48
   28978:	mov	r4, r9
   2897c:	mov	r0, #1
   28980:	ldr	r2, [fp]
   28984:	ldr	r3, [r3]
   28988:	sub	r3, r2, r3
   2898c:	ldr	r2, [sl]
   28990:	mls	r3, r2, r7, r3
   28994:	add	ip, ip, r3, lsl #3
   28998:	add	lr, lr, r3
   2899c:	ldr	r3, [sp, #208]	; 0xd0
   289a0:	cmp	r0, r3
   289a4:	bge	28bd8 <GetDataSlab+0xcad4>
   289a8:	ldr	r3, [r5, #4]
   289ac:	add	r2, r3, #1
   289b0:	ldr	r3, [sp, #204]	; 0xcc
   289b4:	str	r2, [r5, #4]
   289b8:	ldr	r1, [r3, r0, lsl #2]
   289bc:	sdiv	r3, r2, r1
   289c0:	mls	r3, r1, r3, r2
   289c4:	cmp	r3, #0
   289c8:	bne	28bc4 <GetDataSlab+0xcac0>
   289cc:	ldr	r2, [r4, #4]
   289d0:	str	r3, [r5, #4]
   289d4:	ldr	r1, [sp, #196]	; 0xc4
   289d8:	sdiv	r3, lr, r2
   289dc:	ldr	r1, [r1, r0, lsl #2]
   289e0:	mls	r3, r2, r3, lr
   289e4:	cmp	r3, #0
   289e8:	subne	r3, r2, r3
   289ec:	ldrne	r2, [r4]
   289f0:	mlane	r3, r1, r2, r3
   289f4:	bne	28a08 <GetDataSlab+0xc904>
   289f8:	cmp	r1, #0
   289fc:	beq	28a10 <GetDataSlab+0xc90c>
   28a00:	ldr	r3, [r4]
   28a04:	mul	r3, r3, r1
   28a08:	add	ip, ip, r3, lsl #3
   28a0c:	add	lr, lr, r3
   28a10:	add	r0, r0, #1
   28a14:	add	r4, r4, #4
   28a18:	add	r5, r5, #4
   28a1c:	b	2899c <GetDataSlab+0xc898>
   28a20:	ldr	r3, [sl, r2, lsl #2]
   28a24:	mov	r6, r0
   28a28:	sub	r3, r3, #1
   28a2c:	str	r3, [r4, #4]
   28a30:	ldr	r3, [r5], #4
   28a34:	mov	r1, r5
   28a38:	str	r3, [r0, #4]
   28a3c:	cmp	r1, fp
   28a40:	bne	28a70 <GetDataSlab+0xc96c>
   28a44:	ldr	r1, [sp, #196]	; 0xc4
   28a48:	add	r0, r0, #4
   28a4c:	add	r4, r4, #4
   28a50:	ldr	r3, [sp, #204]	; 0xcc
   28a54:	ldr	r1, [r1, r2, lsl #2]
   28a58:	ldr	r3, [r3, r2, lsl #2]
   28a5c:	add	r2, r2, #1
   28a60:	mul	r8, r3, r8
   28a64:	ldr	r3, [r6]
   28a68:	mla	lr, r1, r3, lr
   28a6c:	b	28918 <GetDataSlab+0xc814>
   28a70:	str	r1, [sp, #8]
   28a74:	ldr	r3, [r1, #-4]!
   28a78:	ldr	ip, [r4, #4]
   28a7c:	mul	r3, r3, ip
   28a80:	ldr	ip, [r0, #4]
   28a84:	str	r3, [r4, #4]
   28a88:	ldr	r3, [sp, #8]
   28a8c:	ldr	r3, [r3]
   28a90:	mul	r3, r3, ip
   28a94:	str	r3, [r0, #4]
   28a98:	b	28a3c <GetDataSlab+0xc938>
   28a9c:	ldr	r0, [r2, #8]!
   28aa0:	add	r3, r3, #1
   28aa4:	str	r0, [r1], #4
   28aa8:	b	28af0 <GetDataSlab+0xc9ec>
   28aac:	add	r3, sp, #152	; 0x98
   28ab0:	add	r3, r3, r0, lsl #2
   28ab4:	ldr	r3, [r3, #-120]	; 0xffffff88
   28ab8:	add	ip, ip, r3, lsl #3
   28abc:	add	lr, lr, r3
   28ac0:	add	r6, r6, r7
   28ac4:	cmp	r6, r8
   28ac8:	bge	1c230 <GetDataSlab+0x12c>
   28acc:	ldr	r3, [sp, #196]	; 0xc4
   28ad0:	ldr	r3, [r3]
   28ad4:	cmp	r3, #0
   28ad8:	addne	ip, ip, r3, lsl #3
   28adc:	addne	lr, lr, r3
   28ae0:	ldr	r3, [sp]
   28ae4:	sub	r2, ip, #8
   28ae8:	add	r1, r3, r6, lsl #2
   28aec:	mov	r3, #0
   28af0:	ldr	r0, [sp, #204]	; 0xcc
   28af4:	ldr	r7, [r0]
   28af8:	cmp	r7, r3
   28afc:	bgt	28a9c <GetDataSlab+0xc998>
   28b00:	ldr	r3, [sp, #196]	; 0xc4
   28b04:	add	r5, sp, #72	; 0x48
   28b08:	mov	r4, r9
   28b0c:	mov	r0, #1
   28b10:	ldr	r2, [fp]
   28b14:	ldr	r3, [r3]
   28b18:	sub	r3, r2, r3
   28b1c:	add	ip, ip, r3, lsl #3
   28b20:	add	lr, lr, r3
   28b24:	ldr	r3, [sp, #208]	; 0xd0
   28b28:	cmp	r0, r3
   28b2c:	bge	28ac0 <GetDataSlab+0xc9bc>
   28b30:	ldr	r3, [r5, #4]
   28b34:	add	r2, r3, #1
   28b38:	ldr	r3, [sp, #204]	; 0xcc
   28b3c:	str	r2, [r5, #4]
   28b40:	ldr	r1, [r3, r0, lsl #2]
   28b44:	sdiv	r3, r2, r1
   28b48:	mls	r3, r1, r3, r2
   28b4c:	cmp	r3, #0
   28b50:	bne	28aac <GetDataSlab+0xc9a8>
   28b54:	ldr	r2, [r4, #4]
   28b58:	str	r3, [r5, #4]
   28b5c:	ldr	r1, [sp, #196]	; 0xc4
   28b60:	sdiv	r3, lr, r2
   28b64:	ldr	r1, [r1, r0, lsl #2]
   28b68:	mls	r3, r2, r3, lr
   28b6c:	cmp	r3, #0
   28b70:	ldrne	sl, [r4]
   28b74:	subne	r3, r2, r3
   28b78:	mlane	r3, r1, sl, r3
   28b7c:	bne	28b90 <GetDataSlab+0xca8c>
   28b80:	cmp	r1, #0
   28b84:	beq	28b98 <GetDataSlab+0xca94>
   28b88:	ldr	r3, [r4]
   28b8c:	mul	r3, r3, r1
   28b90:	add	ip, ip, r3, lsl #3
   28b94:	add	lr, lr, r3
   28b98:	add	r0, r0, #1
   28b9c:	add	r4, r4, #4
   28ba0:	add	r5, r5, #4
   28ba4:	b	28b24 <GetDataSlab+0xca20>
   28ba8:	ldr	r1, [ip]
   28bac:	add	r3, r3, #1
   28bb0:	str	r1, [r2], #4
   28bb4:	ldr	r1, [sl]
   28bb8:	add	ip, ip, r1, lsl #3
   28bbc:	add	lr, lr, r1
   28bc0:	b	28960 <GetDataSlab+0xc85c>
   28bc4:	add	r3, sp, #152	; 0x98
   28bc8:	add	r3, r3, r0, lsl #2
   28bcc:	ldr	r3, [r3, #-120]	; 0xffffff88
   28bd0:	add	ip, ip, r3, lsl #3
   28bd4:	add	lr, lr, r3
   28bd8:	add	r6, r6, r7
   28bdc:	b	28938 <GetDataSlab+0xc834>
   28be0:	sub	r3, r5, #1
   28be4:	cmp	r3, #8
   28be8:	addls	pc, pc, r3, lsl #2
   28bec:	b	2a3f4 <GetDataSlab+0xe2f0>
   28bf0:	b	29e04 <GetDataSlab+0xdd00>
   28bf4:	b	2a0fc <GetDataSlab+0xdff8>
   28bf8:	b	2980c <GetDataSlab+0xd708>
   28bfc:	b	29b08 <GetDataSlab+0xda04>
   28c00:	b	2921c <GetDataSlab+0xd118>
   28c04:	b	29514 <GetDataSlab+0xd410>
   28c08:	b	28f18 <GetDataSlab+0xce14>
   28c0c:	b	2a3f4 <GetDataSlab+0xe2f0>
   28c10:	b	28c14 <GetDataSlab+0xcb10>
   28c14:	ldr	r7, [sl]
   28c18:	add	r9, sp, #112	; 0x70
   28c1c:	add	r4, sp, #32
   28c20:	mov	r5, fp
   28c24:	mov	r0, r9
   28c28:	mov	lr, #0
   28c2c:	mov	r2, #1
   28c30:	sub	r3, r7, #1
   28c34:	str	r3, [sp, #32]
   28c38:	ldr	r3, [fp]
   28c3c:	str	r3, [sp, #112]	; 0x70
   28c40:	ldr	r3, [sp, #204]	; 0xcc
   28c44:	ldr	r8, [r3]
   28c48:	ldr	r3, [sp, #208]	; 0xd0
   28c4c:	cmp	r2, r3
   28c50:	blt	28d50 <GetDataSlab+0xcc4c>
   28c54:	ldr	r3, [sp, #4]
   28c58:	cmp	r7, #1
   28c5c:	mov	r6, #0
   28c60:	add	ip, r3, lr, lsl #3
   28c64:	beq	28df8 <GetDataSlab+0xccf4>
   28c68:	cmp	r6, r8
   28c6c:	bge	1c230 <GetDataSlab+0x12c>
   28c70:	ldr	r3, [sp, #196]	; 0xc4
   28c74:	ldr	r3, [r3]
   28c78:	cmp	r3, #0
   28c7c:	addne	ip, ip, r3, lsl #3
   28c80:	addne	lr, lr, r3
   28c84:	ldr	r3, [sp]
   28c88:	add	r2, r3, r6, lsl #2
   28c8c:	mov	r3, #0
   28c90:	ldr	r1, [sp, #204]	; 0xcc
   28c94:	ldr	r7, [r1]
   28c98:	cmp	r7, r3
   28c9c:	bgt	28edc <GetDataSlab+0xcdd8>
   28ca0:	ldr	r3, [sp, #196]	; 0xc4
   28ca4:	add	r5, sp, #72	; 0x48
   28ca8:	mov	r4, r9
   28cac:	mov	r0, #1
   28cb0:	ldr	r2, [fp]
   28cb4:	ldr	r3, [r3]
   28cb8:	sub	r3, r2, r3
   28cbc:	ldr	r2, [sl]
   28cc0:	mls	r3, r2, r7, r3
   28cc4:	add	ip, ip, r3, lsl #3
   28cc8:	add	lr, lr, r3
   28ccc:	ldr	r3, [sp, #208]	; 0xd0
   28cd0:	cmp	r0, r3
   28cd4:	bge	28f10 <GetDataSlab+0xce0c>
   28cd8:	ldr	r3, [r5, #4]
   28cdc:	add	r2, r3, #1
   28ce0:	ldr	r3, [sp, #204]	; 0xcc
   28ce4:	str	r2, [r5, #4]
   28ce8:	ldr	r1, [r3, r0, lsl #2]
   28cec:	sdiv	r3, r2, r1
   28cf0:	mls	r3, r1, r3, r2
   28cf4:	cmp	r3, #0
   28cf8:	bne	28efc <GetDataSlab+0xcdf8>
   28cfc:	ldr	r2, [r4, #4]
   28d00:	str	r3, [r5, #4]
   28d04:	ldr	r1, [sp, #196]	; 0xc4
   28d08:	sdiv	r3, lr, r2
   28d0c:	ldr	r1, [r1, r0, lsl #2]
   28d10:	mls	r3, r2, r3, lr
   28d14:	cmp	r3, #0
   28d18:	subne	r3, r2, r3
   28d1c:	ldrne	r2, [r4]
   28d20:	mlane	r3, r1, r2, r3
   28d24:	bne	28d38 <GetDataSlab+0xcc34>
   28d28:	cmp	r1, #0
   28d2c:	beq	28d40 <GetDataSlab+0xcc3c>
   28d30:	ldr	r3, [r4]
   28d34:	mul	r3, r3, r1
   28d38:	add	ip, ip, r3, lsl #3
   28d3c:	add	lr, lr, r3
   28d40:	add	r0, r0, #1
   28d44:	add	r4, r4, #4
   28d48:	add	r5, r5, #4
   28d4c:	b	28ccc <GetDataSlab+0xcbc8>
   28d50:	ldr	r3, [sl, r2, lsl #2]
   28d54:	mov	r6, r0
   28d58:	sub	r3, r3, #1
   28d5c:	str	r3, [r4, #4]
   28d60:	ldr	r3, [r5], #4
   28d64:	mov	r1, r5
   28d68:	str	r3, [r0, #4]
   28d6c:	cmp	r1, fp
   28d70:	bne	28da0 <GetDataSlab+0xcc9c>
   28d74:	ldr	r1, [sp, #196]	; 0xc4
   28d78:	add	r0, r0, #4
   28d7c:	add	r4, r4, #4
   28d80:	ldr	r3, [sp, #204]	; 0xcc
   28d84:	ldr	r1, [r1, r2, lsl #2]
   28d88:	ldr	r3, [r3, r2, lsl #2]
   28d8c:	add	r2, r2, #1
   28d90:	mul	r8, r3, r8
   28d94:	ldr	r3, [r6]
   28d98:	mla	lr, r1, r3, lr
   28d9c:	b	28c48 <GetDataSlab+0xcb44>
   28da0:	str	r1, [sp, #8]
   28da4:	ldr	r3, [r1, #-4]!
   28da8:	ldr	ip, [r4, #4]
   28dac:	mul	r3, r3, ip
   28db0:	ldr	ip, [r0, #4]
   28db4:	str	r3, [r4, #4]
   28db8:	ldr	r3, [sp, #8]
   28dbc:	ldr	r3, [r3]
   28dc0:	mul	r3, r3, ip
   28dc4:	str	r3, [r0, #4]
   28dc8:	b	28d6c <GetDataSlab+0xcc68>
   28dcc:	vldmia	r2!, {d7}
   28dd0:	add	r3, r3, #1
   28dd4:	vcvt.u32.f64	s15, d7
   28dd8:	vstmia	r1!, {s15}
   28ddc:	b	28e24 <GetDataSlab+0xcd20>
   28de0:	add	r3, sp, #152	; 0x98
   28de4:	add	r3, r3, r0, lsl #2
   28de8:	ldr	r3, [r3, #-120]	; 0xffffff88
   28dec:	add	ip, ip, r3, lsl #3
   28df0:	add	lr, lr, r3
   28df4:	add	r6, r6, r7
   28df8:	cmp	r6, r8
   28dfc:	bge	1c230 <GetDataSlab+0x12c>
   28e00:	ldr	r3, [sp, #196]	; 0xc4
   28e04:	ldr	r3, [r3]
   28e08:	cmp	r3, #0
   28e0c:	addne	ip, ip, r3, lsl #3
   28e10:	addne	lr, lr, r3
   28e14:	ldr	r3, [sp]
   28e18:	mov	r2, ip
   28e1c:	add	r1, r3, r6, lsl #2
   28e20:	mov	r3, #0
   28e24:	ldr	r0, [sp, #204]	; 0xcc
   28e28:	ldr	r7, [r0]
   28e2c:	cmp	r7, r3
   28e30:	bgt	28dcc <GetDataSlab+0xccc8>
   28e34:	ldr	r3, [sp, #196]	; 0xc4
   28e38:	add	r5, sp, #72	; 0x48
   28e3c:	mov	r4, r9
   28e40:	mov	r0, #1
   28e44:	ldr	r2, [fp]
   28e48:	ldr	r3, [r3]
   28e4c:	sub	r3, r2, r3
   28e50:	add	ip, ip, r3, lsl #3
   28e54:	add	lr, lr, r3
   28e58:	ldr	r3, [sp, #208]	; 0xd0
   28e5c:	cmp	r0, r3
   28e60:	bge	28df4 <GetDataSlab+0xccf0>
   28e64:	ldr	r3, [r5, #4]
   28e68:	add	r2, r3, #1
   28e6c:	ldr	r3, [sp, #204]	; 0xcc
   28e70:	str	r2, [r5, #4]
   28e74:	ldr	r1, [r3, r0, lsl #2]
   28e78:	sdiv	r3, r2, r1
   28e7c:	mls	r3, r1, r3, r2
   28e80:	cmp	r3, #0
   28e84:	bne	28de0 <GetDataSlab+0xccdc>
   28e88:	ldr	r2, [r4, #4]
   28e8c:	str	r3, [r5, #4]
   28e90:	ldr	r1, [sp, #196]	; 0xc4
   28e94:	sdiv	r3, lr, r2
   28e98:	ldr	r1, [r1, r0, lsl #2]
   28e9c:	mls	r3, r2, r3, lr
   28ea0:	cmp	r3, #0
   28ea4:	ldrne	sl, [r4]
   28ea8:	subne	r3, r2, r3
   28eac:	mlane	r3, r1, sl, r3
   28eb0:	bne	28ec4 <GetDataSlab+0xcdc0>
   28eb4:	cmp	r1, #0
   28eb8:	beq	28ecc <GetDataSlab+0xcdc8>
   28ebc:	ldr	r3, [r4]
   28ec0:	mul	r3, r3, r1
   28ec4:	add	ip, ip, r3, lsl #3
   28ec8:	add	lr, lr, r3
   28ecc:	add	r0, r0, #1
   28ed0:	add	r4, r4, #4
   28ed4:	add	r5, r5, #4
   28ed8:	b	28e58 <GetDataSlab+0xcd54>
   28edc:	vldr	d7, [ip]
   28ee0:	add	r3, r3, #1
   28ee4:	vcvt.u32.f64	s15, d7
   28ee8:	vstmia	r2!, {s15}
   28eec:	ldr	r1, [sl]
   28ef0:	add	ip, ip, r1, lsl #3
   28ef4:	add	lr, lr, r1
   28ef8:	b	28c90 <GetDataSlab+0xcb8c>
   28efc:	add	r3, sp, #152	; 0x98
   28f00:	add	r3, r3, r0, lsl #2
   28f04:	ldr	r3, [r3, #-120]	; 0xffffff88
   28f08:	add	ip, ip, r3, lsl #3
   28f0c:	add	lr, lr, r3
   28f10:	add	r6, r6, r7
   28f14:	b	28c68 <GetDataSlab+0xcb64>
   28f18:	ldr	r7, [sl]
   28f1c:	add	r9, sp, #112	; 0x70
   28f20:	add	r4, sp, #32
   28f24:	mov	r5, fp
   28f28:	mov	r0, r9
   28f2c:	mov	lr, #0
   28f30:	mov	r2, #1
   28f34:	sub	r3, r7, #1
   28f38:	str	r3, [sp, #32]
   28f3c:	ldr	r3, [fp]
   28f40:	str	r3, [sp, #112]	; 0x70
   28f44:	ldr	r3, [sp, #204]	; 0xcc
   28f48:	ldr	r8, [r3]
   28f4c:	ldr	r3, [sp, #208]	; 0xd0
   28f50:	cmp	r2, r3
   28f54:	blt	29054 <GetDataSlab+0xcf50>
   28f58:	ldr	r3, [sp, #4]
   28f5c:	cmp	r7, #1
   28f60:	mov	r6, #0
   28f64:	add	ip, r3, lr, lsl #2
   28f68:	beq	290fc <GetDataSlab+0xcff8>
   28f6c:	cmp	r6, r8
   28f70:	bge	1c230 <GetDataSlab+0x12c>
   28f74:	ldr	r3, [sp, #196]	; 0xc4
   28f78:	ldr	r3, [r3]
   28f7c:	cmp	r3, #0
   28f80:	addne	ip, ip, r3, lsl #2
   28f84:	addne	lr, lr, r3
   28f88:	ldr	r3, [sp]
   28f8c:	add	r2, r3, r6, lsl #2
   28f90:	mov	r3, #0
   28f94:	ldr	r1, [sp, #204]	; 0xcc
   28f98:	ldr	r7, [r1]
   28f9c:	cmp	r7, r3
   28fa0:	bgt	291e0 <GetDataSlab+0xd0dc>
   28fa4:	ldr	r3, [sp, #196]	; 0xc4
   28fa8:	add	r5, sp, #72	; 0x48
   28fac:	mov	r4, r9
   28fb0:	mov	r0, #1
   28fb4:	ldr	r2, [fp]
   28fb8:	ldr	r3, [r3]
   28fbc:	sub	r3, r2, r3
   28fc0:	ldr	r2, [sl]
   28fc4:	mls	r3, r2, r7, r3
   28fc8:	add	ip, ip, r3, lsl #2
   28fcc:	add	lr, lr, r3
   28fd0:	ldr	r3, [sp, #208]	; 0xd0
   28fd4:	cmp	r0, r3
   28fd8:	bge	29214 <GetDataSlab+0xd110>
   28fdc:	ldr	r3, [r5, #4]
   28fe0:	add	r2, r3, #1
   28fe4:	ldr	r3, [sp, #204]	; 0xcc
   28fe8:	str	r2, [r5, #4]
   28fec:	ldr	r1, [r3, r0, lsl #2]
   28ff0:	sdiv	r3, r2, r1
   28ff4:	mls	r3, r1, r3, r2
   28ff8:	cmp	r3, #0
   28ffc:	bne	29200 <GetDataSlab+0xd0fc>
   29000:	ldr	r2, [r4, #4]
   29004:	str	r3, [r5, #4]
   29008:	ldr	r1, [sp, #196]	; 0xc4
   2900c:	sdiv	r3, lr, r2
   29010:	ldr	r1, [r1, r0, lsl #2]
   29014:	mls	r3, r2, r3, lr
   29018:	cmp	r3, #0
   2901c:	subne	r3, r2, r3
   29020:	ldrne	r2, [r4]
   29024:	mlane	r3, r1, r2, r3
   29028:	bne	2903c <GetDataSlab+0xcf38>
   2902c:	cmp	r1, #0
   29030:	beq	29044 <GetDataSlab+0xcf40>
   29034:	ldr	r3, [r4]
   29038:	mul	r3, r3, r1
   2903c:	add	ip, ip, r3, lsl #2
   29040:	add	lr, lr, r3
   29044:	add	r0, r0, #1
   29048:	add	r4, r4, #4
   2904c:	add	r5, r5, #4
   29050:	b	28fd0 <GetDataSlab+0xcecc>
   29054:	ldr	r3, [sl, r2, lsl #2]
   29058:	mov	r6, r0
   2905c:	sub	r3, r3, #1
   29060:	str	r3, [r4, #4]
   29064:	ldr	r3, [r5], #4
   29068:	mov	r1, r5
   2906c:	str	r3, [r0, #4]
   29070:	cmp	r1, fp
   29074:	bne	290a4 <GetDataSlab+0xcfa0>
   29078:	ldr	r1, [sp, #196]	; 0xc4
   2907c:	add	r0, r0, #4
   29080:	add	r4, r4, #4
   29084:	ldr	r3, [sp, #204]	; 0xcc
   29088:	ldr	r1, [r1, r2, lsl #2]
   2908c:	ldr	r3, [r3, r2, lsl #2]
   29090:	add	r2, r2, #1
   29094:	mul	r8, r3, r8
   29098:	ldr	r3, [r6]
   2909c:	mla	lr, r1, r3, lr
   290a0:	b	28f4c <GetDataSlab+0xce48>
   290a4:	str	r1, [sp, #8]
   290a8:	ldr	r3, [r1, #-4]!
   290ac:	ldr	ip, [r4, #4]
   290b0:	mul	r3, r3, ip
   290b4:	ldr	ip, [r0, #4]
   290b8:	str	r3, [r4, #4]
   290bc:	ldr	r3, [sp, #8]
   290c0:	ldr	r3, [r3]
   290c4:	mul	r3, r3, ip
   290c8:	str	r3, [r0, #4]
   290cc:	b	29070 <GetDataSlab+0xcf6c>
   290d0:	vldmia	r2!, {s15}
   290d4:	add	r3, r3, #1
   290d8:	vcvt.u32.f32	s15, s15
   290dc:	vstmia	r1!, {s15}
   290e0:	b	29128 <GetDataSlab+0xd024>
   290e4:	add	r3, sp, #152	; 0x98
   290e8:	add	r3, r3, r0, lsl #2
   290ec:	ldr	r3, [r3, #-120]	; 0xffffff88
   290f0:	add	ip, ip, r3, lsl #2
   290f4:	add	lr, lr, r3
   290f8:	add	r6, r6, r7
   290fc:	cmp	r6, r8
   29100:	bge	1c230 <GetDataSlab+0x12c>
   29104:	ldr	r3, [sp, #196]	; 0xc4
   29108:	ldr	r3, [r3]
   2910c:	cmp	r3, #0
   29110:	addne	ip, ip, r3, lsl #2
   29114:	addne	lr, lr, r3
   29118:	ldr	r3, [sp]
   2911c:	mov	r2, ip
   29120:	add	r1, r3, r6, lsl #2
   29124:	mov	r3, #0
   29128:	ldr	r0, [sp, #204]	; 0xcc
   2912c:	ldr	r7, [r0]
   29130:	cmp	r7, r3
   29134:	bgt	290d0 <GetDataSlab+0xcfcc>
   29138:	ldr	r3, [sp, #196]	; 0xc4
   2913c:	add	r5, sp, #72	; 0x48
   29140:	mov	r4, r9
   29144:	mov	r0, #1
   29148:	ldr	r2, [fp]
   2914c:	ldr	r3, [r3]
   29150:	sub	r3, r2, r3
   29154:	add	ip, ip, r3, lsl #2
   29158:	add	lr, lr, r3
   2915c:	ldr	r3, [sp, #208]	; 0xd0
   29160:	cmp	r0, r3
   29164:	bge	290f8 <GetDataSlab+0xcff4>
   29168:	ldr	r3, [r5, #4]
   2916c:	add	r2, r3, #1
   29170:	ldr	r3, [sp, #204]	; 0xcc
   29174:	str	r2, [r5, #4]
   29178:	ldr	r1, [r3, r0, lsl #2]
   2917c:	sdiv	r3, r2, r1
   29180:	mls	r3, r1, r3, r2
   29184:	cmp	r3, #0
   29188:	bne	290e4 <GetDataSlab+0xcfe0>
   2918c:	ldr	r2, [r4, #4]
   29190:	str	r3, [r5, #4]
   29194:	ldr	r1, [sp, #196]	; 0xc4
   29198:	sdiv	r3, lr, r2
   2919c:	ldr	r1, [r1, r0, lsl #2]
   291a0:	mls	r3, r2, r3, lr
   291a4:	cmp	r3, #0
   291a8:	ldrne	sl, [r4]
   291ac:	subne	r3, r2, r3
   291b0:	mlane	r3, r1, sl, r3
   291b4:	bne	291c8 <GetDataSlab+0xd0c4>
   291b8:	cmp	r1, #0
   291bc:	beq	291d0 <GetDataSlab+0xd0cc>
   291c0:	ldr	r3, [r4]
   291c4:	mul	r3, r3, r1
   291c8:	add	ip, ip, r3, lsl #2
   291cc:	add	lr, lr, r3
   291d0:	add	r0, r0, #1
   291d4:	add	r4, r4, #4
   291d8:	add	r5, r5, #4
   291dc:	b	2915c <GetDataSlab+0xd058>
   291e0:	vldr	s15, [ip]
   291e4:	add	r3, r3, #1
   291e8:	vcvt.u32.f32	s15, s15
   291ec:	vstmia	r2!, {s15}
   291f0:	ldr	r1, [sl]
   291f4:	add	ip, ip, r1, lsl #2
   291f8:	add	lr, lr, r1
   291fc:	b	28f94 <GetDataSlab+0xce90>
   29200:	add	r3, sp, #152	; 0x98
   29204:	add	r3, r3, r0, lsl #2
   29208:	ldr	r3, [r3, #-120]	; 0xffffff88
   2920c:	add	ip, ip, r3, lsl #2
   29210:	add	lr, lr, r3
   29214:	add	r6, r6, r7
   29218:	b	28f6c <GetDataSlab+0xce68>
   2921c:	ldr	r7, [sl]
   29220:	add	r9, sp, #112	; 0x70
   29224:	add	r4, sp, #32
   29228:	mov	r5, fp
   2922c:	mov	r0, r9
   29230:	mov	ip, #0
   29234:	mov	r2, #1
   29238:	sub	r3, r7, #1
   2923c:	str	r3, [sp, #32]
   29240:	ldr	r3, [fp]
   29244:	str	r3, [sp, #112]	; 0x70
   29248:	ldr	r3, [sp, #204]	; 0xcc
   2924c:	ldr	r8, [r3]
   29250:	ldr	r3, [sp, #208]	; 0xd0
   29254:	cmp	r2, r3
   29258:	blt	29358 <GetDataSlab+0xd254>
   2925c:	ldr	r3, [sp, #4]
   29260:	cmp	r7, #1
   29264:	mov	r6, #0
   29268:	add	r0, r3, ip, lsl #2
   2926c:	beq	293fc <GetDataSlab+0xd2f8>
   29270:	cmp	r6, r8
   29274:	bge	1c230 <GetDataSlab+0x12c>
   29278:	ldr	r3, [sp, #196]	; 0xc4
   2927c:	ldr	r3, [r3]
   29280:	cmp	r3, #0
   29284:	addne	r0, r0, r3, lsl #2
   29288:	addne	ip, ip, r3
   2928c:	ldr	r3, [sp]
   29290:	add	r2, r3, r6, lsl #2
   29294:	mov	r3, #0
   29298:	ldr	r1, [sp, #204]	; 0xcc
   2929c:	ldr	r7, [r1]
   292a0:	cmp	r7, r3
   292a4:	bgt	294dc <GetDataSlab+0xd3d8>
   292a8:	ldr	r3, [sp, #196]	; 0xc4
   292ac:	add	r5, sp, #72	; 0x48
   292b0:	mov	r4, r9
   292b4:	mov	lr, #1
   292b8:	ldr	r2, [fp]
   292bc:	ldr	r3, [r3]
   292c0:	sub	r3, r2, r3
   292c4:	ldr	r2, [sl]
   292c8:	mls	r3, r2, r7, r3
   292cc:	add	r0, r0, r3, lsl #2
   292d0:	add	ip, ip, r3
   292d4:	ldr	r3, [sp, #208]	; 0xd0
   292d8:	cmp	lr, r3
   292dc:	bge	2950c <GetDataSlab+0xd408>
   292e0:	ldr	r3, [r5, #4]
   292e4:	add	r2, r3, #1
   292e8:	ldr	r3, [sp, #204]	; 0xcc
   292ec:	str	r2, [r5, #4]
   292f0:	ldr	r1, [r3, lr, lsl #2]
   292f4:	sdiv	r3, r2, r1
   292f8:	mls	r3, r1, r3, r2
   292fc:	cmp	r3, #0
   29300:	bne	294f8 <GetDataSlab+0xd3f4>
   29304:	ldr	r2, [r4, #4]
   29308:	str	r3, [r5, #4]
   2930c:	ldr	r1, [sp, #196]	; 0xc4
   29310:	sdiv	r3, ip, r2
   29314:	ldr	r1, [r1, lr, lsl #2]
   29318:	mls	r3, r2, r3, ip
   2931c:	cmp	r3, #0
   29320:	subne	r3, r2, r3
   29324:	ldrne	r2, [r4]
   29328:	mlane	r3, r1, r2, r3
   2932c:	bne	29340 <GetDataSlab+0xd23c>
   29330:	cmp	r1, #0
   29334:	beq	29348 <GetDataSlab+0xd244>
   29338:	ldr	r3, [r4]
   2933c:	mul	r3, r3, r1
   29340:	add	r0, r0, r3, lsl #2
   29344:	add	ip, ip, r3
   29348:	add	lr, lr, #1
   2934c:	add	r4, r4, #4
   29350:	add	r5, r5, #4
   29354:	b	292d4 <GetDataSlab+0xd1d0>
   29358:	ldr	r3, [sl, r2, lsl #2]
   2935c:	mov	r6, r0
   29360:	sub	r3, r3, #1
   29364:	str	r3, [r4, #4]
   29368:	ldr	r3, [r5], #4
   2936c:	mov	r1, r5
   29370:	str	r3, [r0, #4]
   29374:	cmp	r1, fp
   29378:	bne	293a8 <GetDataSlab+0xd2a4>
   2937c:	ldr	r1, [sp, #196]	; 0xc4
   29380:	add	r0, r0, #4
   29384:	add	r4, r4, #4
   29388:	ldr	r3, [sp, #204]	; 0xcc
   2938c:	ldr	r1, [r1, r2, lsl #2]
   29390:	ldr	r3, [r3, r2, lsl #2]
   29394:	add	r2, r2, #1
   29398:	mul	r8, r3, r8
   2939c:	ldr	r3, [r6]
   293a0:	mla	ip, r1, r3, ip
   293a4:	b	29250 <GetDataSlab+0xd14c>
   293a8:	str	r1, [sp, #8]
   293ac:	ldr	r3, [r1, #-4]!
   293b0:	ldr	lr, [r4, #4]
   293b4:	mul	r3, r3, lr
   293b8:	ldr	lr, [r0, #4]
   293bc:	str	r3, [r4, #4]
   293c0:	ldr	r3, [sp, #8]
   293c4:	ldr	r3, [r3]
   293c8:	mul	r3, r3, lr
   293cc:	str	r3, [r0, #4]
   293d0:	b	29374 <GetDataSlab+0xd270>
   293d4:	ldr	r1, [r0, r3, lsl #2]
   293d8:	add	r3, r3, #1
   293dc:	str	r1, [r2], #4
   293e0:	b	29424 <GetDataSlab+0xd320>
   293e4:	add	r3, sp, #152	; 0x98
   293e8:	add	r3, r3, lr, lsl #2
   293ec:	ldr	r3, [r3, #-120]	; 0xffffff88
   293f0:	add	r0, r0, r3, lsl #2
   293f4:	add	ip, ip, r3
   293f8:	add	r6, r6, r7
   293fc:	cmp	r6, r8
   29400:	bge	1c230 <GetDataSlab+0x12c>
   29404:	ldr	r3, [sp, #196]	; 0xc4
   29408:	ldr	r3, [r3]
   2940c:	cmp	r3, #0
   29410:	addne	r0, r0, r3, lsl #2
   29414:	addne	ip, ip, r3
   29418:	ldr	r3, [sp]
   2941c:	add	r2, r3, r6, lsl #2
   29420:	mov	r3, #0
   29424:	ldr	r1, [sp, #204]	; 0xcc
   29428:	ldr	r7, [r1]
   2942c:	cmp	r7, r3
   29430:	bgt	293d4 <GetDataSlab+0xd2d0>
   29434:	ldr	r3, [sp, #196]	; 0xc4
   29438:	add	r5, sp, #72	; 0x48
   2943c:	mov	r4, r9
   29440:	mov	lr, #1
   29444:	ldr	r2, [fp]
   29448:	ldr	r3, [r3]
   2944c:	sub	r3, r2, r3
   29450:	add	r0, r0, r3, lsl #2
   29454:	add	ip, ip, r3
   29458:	ldr	r3, [sp, #208]	; 0xd0
   2945c:	cmp	lr, r3
   29460:	bge	293f8 <GetDataSlab+0xd2f4>
   29464:	ldr	r3, [r5, #4]
   29468:	add	r2, r3, #1
   2946c:	ldr	r3, [sp, #204]	; 0xcc
   29470:	str	r2, [r5, #4]
   29474:	ldr	r1, [r3, lr, lsl #2]
   29478:	sdiv	r3, r2, r1
   2947c:	mls	r3, r1, r3, r2
   29480:	cmp	r3, #0
   29484:	bne	293e4 <GetDataSlab+0xd2e0>
   29488:	ldr	r2, [r4, #4]
   2948c:	str	r3, [r5, #4]
   29490:	ldr	r1, [sp, #196]	; 0xc4
   29494:	sdiv	r3, ip, r2
   29498:	ldr	r1, [r1, lr, lsl #2]
   2949c:	mls	r3, r2, r3, ip
   294a0:	cmp	r3, #0
   294a4:	ldrne	sl, [r4]
   294a8:	subne	r3, r2, r3
   294ac:	mlane	r3, r1, sl, r3
   294b0:	bne	294c4 <GetDataSlab+0xd3c0>
   294b4:	cmp	r1, #0
   294b8:	beq	294cc <GetDataSlab+0xd3c8>
   294bc:	ldr	r3, [r4]
   294c0:	mul	r3, r3, r1
   294c4:	add	r0, r0, r3, lsl #2
   294c8:	add	ip, ip, r3
   294cc:	add	lr, lr, #1
   294d0:	add	r4, r4, #4
   294d4:	add	r5, r5, #4
   294d8:	b	29458 <GetDataSlab+0xd354>
   294dc:	ldr	r1, [r0]
   294e0:	add	r3, r3, #1
   294e4:	str	r1, [r2], #4
   294e8:	ldr	r1, [sl]
   294ec:	add	r0, r0, r1, lsl #2
   294f0:	add	ip, ip, r1
   294f4:	b	29298 <GetDataSlab+0xd194>
   294f8:	add	r3, sp, #152	; 0x98
   294fc:	add	r3, r3, lr, lsl #2
   29500:	ldr	r3, [r3, #-120]	; 0xffffff88
   29504:	add	r0, r0, r3, lsl #2
   29508:	add	ip, ip, r3
   2950c:	add	r6, r6, r7
   29510:	b	29270 <GetDataSlab+0xd16c>
   29514:	ldr	r7, [sl]
   29518:	add	r9, sp, #112	; 0x70
   2951c:	add	r4, sp, #32
   29520:	mov	r5, fp
   29524:	mov	r0, r9
   29528:	mov	ip, #0
   2952c:	mov	r2, #1
   29530:	sub	r3, r7, #1
   29534:	str	r3, [sp, #32]
   29538:	ldr	r3, [fp]
   2953c:	str	r3, [sp, #112]	; 0x70
   29540:	ldr	r3, [sp, #204]	; 0xcc
   29544:	ldr	r8, [r3]
   29548:	ldr	r3, [sp, #208]	; 0xd0
   2954c:	cmp	r2, r3
   29550:	blt	29650 <GetDataSlab+0xd54c>
   29554:	ldr	r3, [sp, #4]
   29558:	cmp	r7, #1
   2955c:	mov	r6, #0
   29560:	add	r0, r3, ip, lsl #2
   29564:	beq	296f4 <GetDataSlab+0xd5f0>
   29568:	cmp	r6, r8
   2956c:	bge	1c230 <GetDataSlab+0x12c>
   29570:	ldr	r3, [sp, #196]	; 0xc4
   29574:	ldr	r3, [r3]
   29578:	cmp	r3, #0
   2957c:	addne	r0, r0, r3, lsl #2
   29580:	addne	ip, ip, r3
   29584:	ldr	r3, [sp]
   29588:	add	r2, r3, r6, lsl #2
   2958c:	mov	r3, #0
   29590:	ldr	r1, [sp, #204]	; 0xcc
   29594:	ldr	r7, [r1]
   29598:	cmp	r7, r3
   2959c:	bgt	297d4 <GetDataSlab+0xd6d0>
   295a0:	ldr	r3, [sp, #196]	; 0xc4
   295a4:	add	r5, sp, #72	; 0x48
   295a8:	mov	r4, r9
   295ac:	mov	lr, #1
   295b0:	ldr	r2, [fp]
   295b4:	ldr	r3, [r3]
   295b8:	sub	r3, r2, r3
   295bc:	ldr	r2, [sl]
   295c0:	mls	r3, r2, r7, r3
   295c4:	add	r0, r0, r3, lsl #2
   295c8:	add	ip, ip, r3
   295cc:	ldr	r3, [sp, #208]	; 0xd0
   295d0:	cmp	lr, r3
   295d4:	bge	29804 <GetDataSlab+0xd700>
   295d8:	ldr	r3, [r5, #4]
   295dc:	add	r2, r3, #1
   295e0:	ldr	r3, [sp, #204]	; 0xcc
   295e4:	str	r2, [r5, #4]
   295e8:	ldr	r1, [r3, lr, lsl #2]
   295ec:	sdiv	r3, r2, r1
   295f0:	mls	r3, r1, r3, r2
   295f4:	cmp	r3, #0
   295f8:	bne	297f0 <GetDataSlab+0xd6ec>
   295fc:	ldr	r2, [r4, #4]
   29600:	str	r3, [r5, #4]
   29604:	ldr	r1, [sp, #196]	; 0xc4
   29608:	sdiv	r3, ip, r2
   2960c:	ldr	r1, [r1, lr, lsl #2]
   29610:	mls	r3, r2, r3, ip
   29614:	cmp	r3, #0
   29618:	subne	r3, r2, r3
   2961c:	ldrne	r2, [r4]
   29620:	mlane	r3, r1, r2, r3
   29624:	bne	29638 <GetDataSlab+0xd534>
   29628:	cmp	r1, #0
   2962c:	beq	29640 <GetDataSlab+0xd53c>
   29630:	ldr	r3, [r4]
   29634:	mul	r3, r3, r1
   29638:	add	r0, r0, r3, lsl #2
   2963c:	add	ip, ip, r3
   29640:	add	lr, lr, #1
   29644:	add	r4, r4, #4
   29648:	add	r5, r5, #4
   2964c:	b	295cc <GetDataSlab+0xd4c8>
   29650:	ldr	r3, [sl, r2, lsl #2]
   29654:	mov	r6, r0
   29658:	sub	r3, r3, #1
   2965c:	str	r3, [r4, #4]
   29660:	ldr	r3, [r5], #4
   29664:	mov	r1, r5
   29668:	str	r3, [r0, #4]
   2966c:	cmp	r1, fp
   29670:	bne	296a0 <GetDataSlab+0xd59c>
   29674:	ldr	r1, [sp, #196]	; 0xc4
   29678:	add	r0, r0, #4
   2967c:	add	r4, r4, #4
   29680:	ldr	r3, [sp, #204]	; 0xcc
   29684:	ldr	r1, [r1, r2, lsl #2]
   29688:	ldr	r3, [r3, r2, lsl #2]
   2968c:	add	r2, r2, #1
   29690:	mul	r8, r3, r8
   29694:	ldr	r3, [r6]
   29698:	mla	ip, r1, r3, ip
   2969c:	b	29548 <GetDataSlab+0xd444>
   296a0:	str	r1, [sp, #8]
   296a4:	ldr	r3, [r1, #-4]!
   296a8:	ldr	lr, [r4, #4]
   296ac:	mul	r3, r3, lr
   296b0:	ldr	lr, [r0, #4]
   296b4:	str	r3, [r4, #4]
   296b8:	ldr	r3, [sp, #8]
   296bc:	ldr	r3, [r3]
   296c0:	mul	r3, r3, lr
   296c4:	str	r3, [r0, #4]
   296c8:	b	2966c <GetDataSlab+0xd568>
   296cc:	ldr	r1, [r0, r3, lsl #2]
   296d0:	add	r3, r3, #1
   296d4:	str	r1, [r2], #4
   296d8:	b	2971c <GetDataSlab+0xd618>
   296dc:	add	r3, sp, #152	; 0x98
   296e0:	add	r3, r3, lr, lsl #2
   296e4:	ldr	r3, [r3, #-120]	; 0xffffff88
   296e8:	add	r0, r0, r3, lsl #2
   296ec:	add	ip, ip, r3
   296f0:	add	r6, r6, r7
   296f4:	cmp	r6, r8
   296f8:	bge	1c230 <GetDataSlab+0x12c>
   296fc:	ldr	r3, [sp, #196]	; 0xc4
   29700:	ldr	r3, [r3]
   29704:	cmp	r3, #0
   29708:	addne	r0, r0, r3, lsl #2
   2970c:	addne	ip, ip, r3
   29710:	ldr	r3, [sp]
   29714:	add	r2, r3, r6, lsl #2
   29718:	mov	r3, #0
   2971c:	ldr	r1, [sp, #204]	; 0xcc
   29720:	ldr	r7, [r1]
   29724:	cmp	r7, r3
   29728:	bgt	296cc <GetDataSlab+0xd5c8>
   2972c:	ldr	r3, [sp, #196]	; 0xc4
   29730:	add	r5, sp, #72	; 0x48
   29734:	mov	r4, r9
   29738:	mov	lr, #1
   2973c:	ldr	r2, [fp]
   29740:	ldr	r3, [r3]
   29744:	sub	r3, r2, r3
   29748:	add	r0, r0, r3, lsl #2
   2974c:	add	ip, ip, r3
   29750:	ldr	r3, [sp, #208]	; 0xd0
   29754:	cmp	lr, r3
   29758:	bge	296f0 <GetDataSlab+0xd5ec>
   2975c:	ldr	r3, [r5, #4]
   29760:	add	r2, r3, #1
   29764:	ldr	r3, [sp, #204]	; 0xcc
   29768:	str	r2, [r5, #4]
   2976c:	ldr	r1, [r3, lr, lsl #2]
   29770:	sdiv	r3, r2, r1
   29774:	mls	r3, r1, r3, r2
   29778:	cmp	r3, #0
   2977c:	bne	296dc <GetDataSlab+0xd5d8>
   29780:	ldr	r2, [r4, #4]
   29784:	str	r3, [r5, #4]
   29788:	ldr	r1, [sp, #196]	; 0xc4
   2978c:	sdiv	r3, ip, r2
   29790:	ldr	r1, [r1, lr, lsl #2]
   29794:	mls	r3, r2, r3, ip
   29798:	cmp	r3, #0
   2979c:	ldrne	sl, [r4]
   297a0:	subne	r3, r2, r3
   297a4:	mlane	r3, r1, sl, r3
   297a8:	bne	297bc <GetDataSlab+0xd6b8>
   297ac:	cmp	r1, #0
   297b0:	beq	297c4 <GetDataSlab+0xd6c0>
   297b4:	ldr	r3, [r4]
   297b8:	mul	r3, r3, r1
   297bc:	add	r0, r0, r3, lsl #2
   297c0:	add	ip, ip, r3
   297c4:	add	lr, lr, #1
   297c8:	add	r4, r4, #4
   297cc:	add	r5, r5, #4
   297d0:	b	29750 <GetDataSlab+0xd64c>
   297d4:	ldr	r1, [r0]
   297d8:	add	r3, r3, #1
   297dc:	str	r1, [r2], #4
   297e0:	ldr	r1, [sl]
   297e4:	add	r0, r0, r1, lsl #2
   297e8:	add	ip, ip, r1
   297ec:	b	29590 <GetDataSlab+0xd48c>
   297f0:	add	r3, sp, #152	; 0x98
   297f4:	add	r3, r3, lr, lsl #2
   297f8:	ldr	r3, [r3, #-120]	; 0xffffff88
   297fc:	add	r0, r0, r3, lsl #2
   29800:	add	ip, ip, r3
   29804:	add	r6, r6, r7
   29808:	b	29568 <GetDataSlab+0xd464>
   2980c:	ldr	r7, [sl]
   29810:	add	r9, sp, #112	; 0x70
   29814:	add	r4, sp, #32
   29818:	mov	r5, fp
   2981c:	mov	r0, r9
   29820:	mov	lr, #0
   29824:	mov	r2, #1
   29828:	sub	r3, r7, #1
   2982c:	str	r3, [sp, #32]
   29830:	ldr	r3, [fp]
   29834:	str	r3, [sp, #112]	; 0x70
   29838:	ldr	r3, [sp, #204]	; 0xcc
   2983c:	ldr	r8, [r3]
   29840:	ldr	r3, [sp, #208]	; 0xd0
   29844:	cmp	r2, r3
   29848:	blt	29948 <GetDataSlab+0xd844>
   2984c:	ldr	r3, [sp, #4]
   29850:	cmp	r7, #1
   29854:	mov	r6, #0
   29858:	add	ip, r3, lr, lsl #1
   2985c:	beq	299ec <GetDataSlab+0xd8e8>
   29860:	cmp	r6, r8
   29864:	bge	1c230 <GetDataSlab+0x12c>
   29868:	ldr	r3, [sp, #196]	; 0xc4
   2986c:	ldr	r3, [r3]
   29870:	cmp	r3, #0
   29874:	addne	ip, ip, r3, lsl #1
   29878:	addne	lr, lr, r3
   2987c:	ldr	r3, [sp]
   29880:	add	r2, r3, r6, lsl #2
   29884:	mov	r3, #0
   29888:	ldr	r1, [sp, #204]	; 0xcc
   2988c:	ldr	r7, [r1]
   29890:	cmp	r7, r3
   29894:	bgt	29ad0 <GetDataSlab+0xd9cc>
   29898:	ldr	r3, [sp, #196]	; 0xc4
   2989c:	add	r5, sp, #72	; 0x48
   298a0:	mov	r4, r9
   298a4:	mov	r0, #1
   298a8:	ldr	r2, [fp]
   298ac:	ldr	r3, [r3]
   298b0:	sub	r3, r2, r3
   298b4:	ldr	r2, [sl]
   298b8:	mls	r3, r2, r7, r3
   298bc:	add	ip, ip, r3, lsl #1
   298c0:	add	lr, lr, r3
   298c4:	ldr	r3, [sp, #208]	; 0xd0
   298c8:	cmp	r0, r3
   298cc:	bge	29b00 <GetDataSlab+0xd9fc>
   298d0:	ldr	r3, [r5, #4]
   298d4:	add	r2, r3, #1
   298d8:	ldr	r3, [sp, #204]	; 0xcc
   298dc:	str	r2, [r5, #4]
   298e0:	ldr	r1, [r3, r0, lsl #2]
   298e4:	sdiv	r3, r2, r1
   298e8:	mls	r3, r1, r3, r2
   298ec:	cmp	r3, #0
   298f0:	bne	29aec <GetDataSlab+0xd9e8>
   298f4:	ldr	r2, [r4, #4]
   298f8:	str	r3, [r5, #4]
   298fc:	ldr	r1, [sp, #196]	; 0xc4
   29900:	sdiv	r3, lr, r2
   29904:	ldr	r1, [r1, r0, lsl #2]
   29908:	mls	r3, r2, r3, lr
   2990c:	cmp	r3, #0
   29910:	subne	r3, r2, r3
   29914:	ldrne	r2, [r4]
   29918:	mlane	r3, r1, r2, r3
   2991c:	bne	29930 <GetDataSlab+0xd82c>
   29920:	cmp	r1, #0
   29924:	beq	29938 <GetDataSlab+0xd834>
   29928:	ldr	r3, [r4]
   2992c:	mul	r3, r3, r1
   29930:	add	ip, ip, r3, lsl #1
   29934:	add	lr, lr, r3
   29938:	add	r0, r0, #1
   2993c:	add	r4, r4, #4
   29940:	add	r5, r5, #4
   29944:	b	298c4 <GetDataSlab+0xd7c0>
   29948:	ldr	r3, [sl, r2, lsl #2]
   2994c:	mov	r6, r0
   29950:	sub	r3, r3, #1
   29954:	str	r3, [r4, #4]
   29958:	ldr	r3, [r5], #4
   2995c:	mov	r1, r5
   29960:	str	r3, [r0, #4]
   29964:	cmp	r1, fp
   29968:	bne	29998 <GetDataSlab+0xd894>
   2996c:	ldr	r1, [sp, #196]	; 0xc4
   29970:	add	r0, r0, #4
   29974:	add	r4, r4, #4
   29978:	ldr	r3, [sp, #204]	; 0xcc
   2997c:	ldr	r1, [r1, r2, lsl #2]
   29980:	ldr	r3, [r3, r2, lsl #2]
   29984:	add	r2, r2, #1
   29988:	mul	r8, r3, r8
   2998c:	ldr	r3, [r6]
   29990:	mla	lr, r1, r3, lr
   29994:	b	29840 <GetDataSlab+0xd73c>
   29998:	str	r1, [sp, #8]
   2999c:	ldr	r3, [r1, #-4]!
   299a0:	ldr	ip, [r4, #4]
   299a4:	mul	r3, r3, ip
   299a8:	ldr	ip, [r0, #4]
   299ac:	str	r3, [r4, #4]
   299b0:	ldr	r3, [sp, #8]
   299b4:	ldr	r3, [r3]
   299b8:	mul	r3, r3, ip
   299bc:	str	r3, [r0, #4]
   299c0:	b	29964 <GetDataSlab+0xd860>
   299c4:	ldrsh	r0, [r2, #2]!
   299c8:	add	r3, r3, #1
   299cc:	str	r0, [r1], #4
   299d0:	b	29a18 <GetDataSlab+0xd914>
   299d4:	add	r3, sp, #152	; 0x98
   299d8:	add	r3, r3, r0, lsl #2
   299dc:	ldr	r3, [r3, #-120]	; 0xffffff88
   299e0:	add	ip, ip, r3, lsl #1
   299e4:	add	lr, lr, r3
   299e8:	add	r6, r6, r7
   299ec:	cmp	r6, r8
   299f0:	bge	1c230 <GetDataSlab+0x12c>
   299f4:	ldr	r3, [sp, #196]	; 0xc4
   299f8:	ldr	r3, [r3]
   299fc:	cmp	r3, #0
   29a00:	addne	ip, ip, r3, lsl #1
   29a04:	addne	lr, lr, r3
   29a08:	ldr	r3, [sp]
   29a0c:	sub	r2, ip, #2
   29a10:	add	r1, r3, r6, lsl #2
   29a14:	mov	r3, #0
   29a18:	ldr	r0, [sp, #204]	; 0xcc
   29a1c:	ldr	r7, [r0]
   29a20:	cmp	r7, r3
   29a24:	bgt	299c4 <GetDataSlab+0xd8c0>
   29a28:	ldr	r3, [sp, #196]	; 0xc4
   29a2c:	add	r5, sp, #72	; 0x48
   29a30:	mov	r4, r9
   29a34:	mov	r0, #1
   29a38:	ldr	r2, [fp]
   29a3c:	ldr	r3, [r3]
   29a40:	sub	r3, r2, r3
   29a44:	add	ip, ip, r3, lsl #1
   29a48:	add	lr, lr, r3
   29a4c:	ldr	r3, [sp, #208]	; 0xd0
   29a50:	cmp	r0, r3
   29a54:	bge	299e8 <GetDataSlab+0xd8e4>
   29a58:	ldr	r3, [r5, #4]
   29a5c:	add	r2, r3, #1
   29a60:	ldr	r3, [sp, #204]	; 0xcc
   29a64:	str	r2, [r5, #4]
   29a68:	ldr	r1, [r3, r0, lsl #2]
   29a6c:	sdiv	r3, r2, r1
   29a70:	mls	r3, r1, r3, r2
   29a74:	cmp	r3, #0
   29a78:	bne	299d4 <GetDataSlab+0xd8d0>
   29a7c:	ldr	r2, [r4, #4]
   29a80:	str	r3, [r5, #4]
   29a84:	ldr	r1, [sp, #196]	; 0xc4
   29a88:	sdiv	r3, lr, r2
   29a8c:	ldr	r1, [r1, r0, lsl #2]
   29a90:	mls	r3, r2, r3, lr
   29a94:	cmp	r3, #0
   29a98:	ldrne	sl, [r4]
   29a9c:	subne	r3, r2, r3
   29aa0:	mlane	r3, r1, sl, r3
   29aa4:	bne	29ab8 <GetDataSlab+0xd9b4>
   29aa8:	cmp	r1, #0
   29aac:	beq	29ac0 <GetDataSlab+0xd9bc>
   29ab0:	ldr	r3, [r4]
   29ab4:	mul	r3, r3, r1
   29ab8:	add	ip, ip, r3, lsl #1
   29abc:	add	lr, lr, r3
   29ac0:	add	r0, r0, #1
   29ac4:	add	r4, r4, #4
   29ac8:	add	r5, r5, #4
   29acc:	b	29a4c <GetDataSlab+0xd948>
   29ad0:	ldrsh	r1, [ip]
   29ad4:	add	r3, r3, #1
   29ad8:	str	r1, [r2], #4
   29adc:	ldr	r1, [sl]
   29ae0:	add	ip, ip, r1, lsl #1
   29ae4:	add	lr, lr, r1
   29ae8:	b	29888 <GetDataSlab+0xd784>
   29aec:	add	r3, sp, #152	; 0x98
   29af0:	add	r3, r3, r0, lsl #2
   29af4:	ldr	r3, [r3, #-120]	; 0xffffff88
   29af8:	add	ip, ip, r3, lsl #1
   29afc:	add	lr, lr, r3
   29b00:	add	r6, r6, r7
   29b04:	b	29860 <GetDataSlab+0xd75c>
   29b08:	ldr	r7, [sl]
   29b0c:	add	r9, sp, #112	; 0x70
   29b10:	add	r4, sp, #32
   29b14:	mov	r5, fp
   29b18:	mov	r0, r9
   29b1c:	mov	lr, #0
   29b20:	mov	r2, #1
   29b24:	sub	r3, r7, #1
   29b28:	str	r3, [sp, #32]
   29b2c:	ldr	r3, [fp]
   29b30:	str	r3, [sp, #112]	; 0x70
   29b34:	ldr	r3, [sp, #204]	; 0xcc
   29b38:	ldr	r8, [r3]
   29b3c:	ldr	r3, [sp, #208]	; 0xd0
   29b40:	cmp	r2, r3
   29b44:	blt	29c44 <GetDataSlab+0xdb40>
   29b48:	ldr	r3, [sp, #4]
   29b4c:	cmp	r7, #1
   29b50:	mov	r6, #0
   29b54:	add	ip, r3, lr, lsl #1
   29b58:	beq	29ce8 <GetDataSlab+0xdbe4>
   29b5c:	cmp	r6, r8
   29b60:	bge	1c230 <GetDataSlab+0x12c>
   29b64:	ldr	r3, [sp, #196]	; 0xc4
   29b68:	ldr	r3, [r3]
   29b6c:	cmp	r3, #0
   29b70:	addne	ip, ip, r3, lsl #1
   29b74:	addne	lr, lr, r3
   29b78:	ldr	r3, [sp]
   29b7c:	add	r2, r3, r6, lsl #2
   29b80:	mov	r3, #0
   29b84:	ldr	r1, [sp, #204]	; 0xcc
   29b88:	ldr	r7, [r1]
   29b8c:	cmp	r7, r3
   29b90:	bgt	29dcc <GetDataSlab+0xdcc8>
   29b94:	ldr	r3, [sp, #196]	; 0xc4
   29b98:	add	r5, sp, #72	; 0x48
   29b9c:	mov	r4, r9
   29ba0:	mov	r0, #1
   29ba4:	ldr	r2, [fp]
   29ba8:	ldr	r3, [r3]
   29bac:	sub	r3, r2, r3
   29bb0:	ldr	r2, [sl]
   29bb4:	mls	r3, r2, r7, r3
   29bb8:	add	ip, ip, r3, lsl #1
   29bbc:	add	lr, lr, r3
   29bc0:	ldr	r3, [sp, #208]	; 0xd0
   29bc4:	cmp	r0, r3
   29bc8:	bge	29dfc <GetDataSlab+0xdcf8>
   29bcc:	ldr	r3, [r5, #4]
   29bd0:	add	r2, r3, #1
   29bd4:	ldr	r3, [sp, #204]	; 0xcc
   29bd8:	str	r2, [r5, #4]
   29bdc:	ldr	r1, [r3, r0, lsl #2]
   29be0:	sdiv	r3, r2, r1
   29be4:	mls	r3, r1, r3, r2
   29be8:	cmp	r3, #0
   29bec:	bne	29de8 <GetDataSlab+0xdce4>
   29bf0:	ldr	r2, [r4, #4]
   29bf4:	str	r3, [r5, #4]
   29bf8:	ldr	r1, [sp, #196]	; 0xc4
   29bfc:	sdiv	r3, lr, r2
   29c00:	ldr	r1, [r1, r0, lsl #2]
   29c04:	mls	r3, r2, r3, lr
   29c08:	cmp	r3, #0
   29c0c:	subne	r3, r2, r3
   29c10:	ldrne	r2, [r4]
   29c14:	mlane	r3, r1, r2, r3
   29c18:	bne	29c2c <GetDataSlab+0xdb28>
   29c1c:	cmp	r1, #0
   29c20:	beq	29c34 <GetDataSlab+0xdb30>
   29c24:	ldr	r3, [r4]
   29c28:	mul	r3, r3, r1
   29c2c:	add	ip, ip, r3, lsl #1
   29c30:	add	lr, lr, r3
   29c34:	add	r0, r0, #1
   29c38:	add	r4, r4, #4
   29c3c:	add	r5, r5, #4
   29c40:	b	29bc0 <GetDataSlab+0xdabc>
   29c44:	ldr	r3, [sl, r2, lsl #2]
   29c48:	mov	r6, r0
   29c4c:	sub	r3, r3, #1
   29c50:	str	r3, [r4, #4]
   29c54:	ldr	r3, [r5], #4
   29c58:	mov	r1, r5
   29c5c:	str	r3, [r0, #4]
   29c60:	cmp	r1, fp
   29c64:	bne	29c94 <GetDataSlab+0xdb90>
   29c68:	ldr	r1, [sp, #196]	; 0xc4
   29c6c:	add	r0, r0, #4
   29c70:	add	r4, r4, #4
   29c74:	ldr	r3, [sp, #204]	; 0xcc
   29c78:	ldr	r1, [r1, r2, lsl #2]
   29c7c:	ldr	r3, [r3, r2, lsl #2]
   29c80:	add	r2, r2, #1
   29c84:	mul	r8, r3, r8
   29c88:	ldr	r3, [r6]
   29c8c:	mla	lr, r1, r3, lr
   29c90:	b	29b3c <GetDataSlab+0xda38>
   29c94:	str	r1, [sp, #8]
   29c98:	ldr	r3, [r1, #-4]!
   29c9c:	ldr	ip, [r4, #4]
   29ca0:	mul	r3, r3, ip
   29ca4:	ldr	ip, [r0, #4]
   29ca8:	str	r3, [r4, #4]
   29cac:	ldr	r3, [sp, #8]
   29cb0:	ldr	r3, [r3]
   29cb4:	mul	r3, r3, ip
   29cb8:	str	r3, [r0, #4]
   29cbc:	b	29c60 <GetDataSlab+0xdb5c>
   29cc0:	ldrh	r0, [r2, #2]!
   29cc4:	add	r3, r3, #1
   29cc8:	str	r0, [r1], #4
   29ccc:	b	29d14 <GetDataSlab+0xdc10>
   29cd0:	add	r3, sp, #152	; 0x98
   29cd4:	add	r3, r3, r0, lsl #2
   29cd8:	ldr	r3, [r3, #-120]	; 0xffffff88
   29cdc:	add	ip, ip, r3, lsl #1
   29ce0:	add	lr, lr, r3
   29ce4:	add	r6, r6, r7
   29ce8:	cmp	r6, r8
   29cec:	bge	1c230 <GetDataSlab+0x12c>
   29cf0:	ldr	r3, [sp, #196]	; 0xc4
   29cf4:	ldr	r3, [r3]
   29cf8:	cmp	r3, #0
   29cfc:	addne	ip, ip, r3, lsl #1
   29d00:	addne	lr, lr, r3
   29d04:	ldr	r3, [sp]
   29d08:	sub	r2, ip, #2
   29d0c:	add	r1, r3, r6, lsl #2
   29d10:	mov	r3, #0
   29d14:	ldr	r0, [sp, #204]	; 0xcc
   29d18:	ldr	r7, [r0]
   29d1c:	cmp	r7, r3
   29d20:	bgt	29cc0 <GetDataSlab+0xdbbc>
   29d24:	ldr	r3, [sp, #196]	; 0xc4
   29d28:	add	r5, sp, #72	; 0x48
   29d2c:	mov	r4, r9
   29d30:	mov	r0, #1
   29d34:	ldr	r2, [fp]
   29d38:	ldr	r3, [r3]
   29d3c:	sub	r3, r2, r3
   29d40:	add	ip, ip, r3, lsl #1
   29d44:	add	lr, lr, r3
   29d48:	ldr	r3, [sp, #208]	; 0xd0
   29d4c:	cmp	r0, r3
   29d50:	bge	29ce4 <GetDataSlab+0xdbe0>
   29d54:	ldr	r3, [r5, #4]
   29d58:	add	r2, r3, #1
   29d5c:	ldr	r3, [sp, #204]	; 0xcc
   29d60:	str	r2, [r5, #4]
   29d64:	ldr	r1, [r3, r0, lsl #2]
   29d68:	sdiv	r3, r2, r1
   29d6c:	mls	r3, r1, r3, r2
   29d70:	cmp	r3, #0
   29d74:	bne	29cd0 <GetDataSlab+0xdbcc>
   29d78:	ldr	r2, [r4, #4]
   29d7c:	str	r3, [r5, #4]
   29d80:	ldr	r1, [sp, #196]	; 0xc4
   29d84:	sdiv	r3, lr, r2
   29d88:	ldr	r1, [r1, r0, lsl #2]
   29d8c:	mls	r3, r2, r3, lr
   29d90:	cmp	r3, #0
   29d94:	ldrne	sl, [r4]
   29d98:	subne	r3, r2, r3
   29d9c:	mlane	r3, r1, sl, r3
   29da0:	bne	29db4 <GetDataSlab+0xdcb0>
   29da4:	cmp	r1, #0
   29da8:	beq	29dbc <GetDataSlab+0xdcb8>
   29dac:	ldr	r3, [r4]
   29db0:	mul	r3, r3, r1
   29db4:	add	ip, ip, r3, lsl #1
   29db8:	add	lr, lr, r3
   29dbc:	add	r0, r0, #1
   29dc0:	add	r4, r4, #4
   29dc4:	add	r5, r5, #4
   29dc8:	b	29d48 <GetDataSlab+0xdc44>
   29dcc:	ldrh	r1, [ip]
   29dd0:	add	r3, r3, #1
   29dd4:	str	r1, [r2], #4
   29dd8:	ldr	r1, [sl]
   29ddc:	add	ip, ip, r1, lsl #1
   29de0:	add	lr, lr, r1
   29de4:	b	29b84 <GetDataSlab+0xda80>
   29de8:	add	r3, sp, #152	; 0x98
   29dec:	add	r3, r3, r0, lsl #2
   29df0:	ldr	r3, [r3, #-120]	; 0xffffff88
   29df4:	add	ip, ip, r3, lsl #1
   29df8:	add	lr, lr, r3
   29dfc:	add	r6, r6, r7
   29e00:	b	29b5c <GetDataSlab+0xda58>
   29e04:	ldr	r7, [sl]
   29e08:	add	r9, sp, #112	; 0x70
   29e0c:	add	r4, sp, #32
   29e10:	mov	r5, fp
   29e14:	mov	r0, r9
   29e18:	mov	ip, #0
   29e1c:	mov	r2, #1
   29e20:	sub	r3, r7, #1
   29e24:	str	r3, [sp, #32]
   29e28:	ldr	r3, [fp]
   29e2c:	str	r3, [sp, #112]	; 0x70
   29e30:	ldr	r3, [sp, #204]	; 0xcc
   29e34:	ldr	r8, [r3]
   29e38:	ldr	r3, [sp, #208]	; 0xd0
   29e3c:	cmp	r2, r3
   29e40:	blt	29f40 <GetDataSlab+0xde3c>
   29e44:	ldr	r3, [sp, #4]
   29e48:	cmp	r7, #1
   29e4c:	mov	r6, #0
   29e50:	add	r0, r3, ip
   29e54:	beq	29fe4 <GetDataSlab+0xdee0>
   29e58:	cmp	r6, r8
   29e5c:	bge	1c230 <GetDataSlab+0x12c>
   29e60:	ldr	r3, [sp, #196]	; 0xc4
   29e64:	ldr	r3, [r3]
   29e68:	cmp	r3, #0
   29e6c:	addne	r0, r0, r3
   29e70:	addne	ip, ip, r3
   29e74:	ldr	r3, [sp]
   29e78:	add	r2, r3, r6, lsl #2
   29e7c:	mov	r3, #0
   29e80:	ldr	r1, [sp, #204]	; 0xcc
   29e84:	ldr	r7, [r1]
   29e88:	cmp	r7, r3
   29e8c:	bgt	2a0c4 <GetDataSlab+0xdfc0>
   29e90:	ldr	r3, [sp, #196]	; 0xc4
   29e94:	add	r5, sp, #72	; 0x48
   29e98:	mov	r4, r9
   29e9c:	mov	lr, #1
   29ea0:	ldr	r2, [fp]
   29ea4:	ldr	r3, [r3]
   29ea8:	sub	r3, r2, r3
   29eac:	ldr	r2, [sl]
   29eb0:	mls	r3, r2, r7, r3
   29eb4:	add	ip, ip, r3
   29eb8:	add	r0, r0, r3
   29ebc:	ldr	r3, [sp, #208]	; 0xd0
   29ec0:	cmp	lr, r3
   29ec4:	bge	2a0f4 <GetDataSlab+0xdff0>
   29ec8:	ldr	r3, [r5, #4]
   29ecc:	add	r2, r3, #1
   29ed0:	ldr	r3, [sp, #204]	; 0xcc
   29ed4:	str	r2, [r5, #4]
   29ed8:	ldr	r1, [r3, lr, lsl #2]
   29edc:	sdiv	r3, r2, r1
   29ee0:	mls	r3, r1, r3, r2
   29ee4:	cmp	r3, #0
   29ee8:	bne	2a0e0 <GetDataSlab+0xdfdc>
   29eec:	ldr	r2, [r4, #4]
   29ef0:	str	r3, [r5, #4]
   29ef4:	ldr	r1, [sp, #196]	; 0xc4
   29ef8:	sdiv	r3, ip, r2
   29efc:	ldr	r1, [r1, lr, lsl #2]
   29f00:	mls	r3, r2, r3, ip
   29f04:	cmp	r3, #0
   29f08:	subne	r3, r2, r3
   29f0c:	ldrne	r2, [r4]
   29f10:	mlane	r3, r1, r2, r3
   29f14:	bne	29f28 <GetDataSlab+0xde24>
   29f18:	cmp	r1, #0
   29f1c:	beq	29f30 <GetDataSlab+0xde2c>
   29f20:	ldr	r3, [r4]
   29f24:	mul	r3, r3, r1
   29f28:	add	r0, r0, r3
   29f2c:	add	ip, ip, r3
   29f30:	add	lr, lr, #1
   29f34:	add	r4, r4, #4
   29f38:	add	r5, r5, #4
   29f3c:	b	29ebc <GetDataSlab+0xddb8>
   29f40:	ldr	r3, [sl, r2, lsl #2]
   29f44:	mov	r6, r0
   29f48:	sub	r3, r3, #1
   29f4c:	str	r3, [r4, #4]
   29f50:	ldr	r3, [r5], #4
   29f54:	mov	r1, r5
   29f58:	str	r3, [r0, #4]
   29f5c:	cmp	r1, fp
   29f60:	bne	29f90 <GetDataSlab+0xde8c>
   29f64:	ldr	r1, [sp, #196]	; 0xc4
   29f68:	add	r0, r0, #4
   29f6c:	add	r4, r4, #4
   29f70:	ldr	r3, [sp, #204]	; 0xcc
   29f74:	ldr	r1, [r1, r2, lsl #2]
   29f78:	ldr	r3, [r3, r2, lsl #2]
   29f7c:	add	r2, r2, #1
   29f80:	mul	r8, r3, r8
   29f84:	ldr	r3, [r6]
   29f88:	mla	ip, r1, r3, ip
   29f8c:	b	29e38 <GetDataSlab+0xdd34>
   29f90:	str	r1, [sp, #8]
   29f94:	ldr	r3, [r1, #-4]!
   29f98:	ldr	lr, [r4, #4]
   29f9c:	mul	r3, r3, lr
   29fa0:	ldr	lr, [r0, #4]
   29fa4:	str	r3, [r4, #4]
   29fa8:	ldr	r3, [sp, #8]
   29fac:	ldr	r3, [r3]
   29fb0:	mul	r3, r3, lr
   29fb4:	str	r3, [r0, #4]
   29fb8:	b	29f5c <GetDataSlab+0xde58>
   29fbc:	ldrsb	r1, [r0, r3]
   29fc0:	add	r3, r3, #1
   29fc4:	str	r1, [r2], #4
   29fc8:	b	2a00c <GetDataSlab+0xdf08>
   29fcc:	add	r3, sp, #152	; 0x98
   29fd0:	add	r3, r3, lr, lsl #2
   29fd4:	ldr	r3, [r3, #-120]	; 0xffffff88
   29fd8:	add	ip, ip, r3
   29fdc:	add	r0, r0, r3
   29fe0:	add	r6, r6, r7
   29fe4:	cmp	r6, r8
   29fe8:	bge	1c230 <GetDataSlab+0x12c>
   29fec:	ldr	r3, [sp, #196]	; 0xc4
   29ff0:	ldr	r3, [r3]
   29ff4:	cmp	r3, #0
   29ff8:	addne	r0, r0, r3
   29ffc:	addne	ip, ip, r3
   2a000:	ldr	r3, [sp]
   2a004:	add	r2, r3, r6, lsl #2
   2a008:	mov	r3, #0
   2a00c:	ldr	r1, [sp, #204]	; 0xcc
   2a010:	ldr	r7, [r1]
   2a014:	cmp	r7, r3
   2a018:	bgt	29fbc <GetDataSlab+0xdeb8>
   2a01c:	ldr	r3, [sp, #196]	; 0xc4
   2a020:	add	r5, sp, #72	; 0x48
   2a024:	mov	r4, r9
   2a028:	mov	lr, #1
   2a02c:	ldr	r2, [fp]
   2a030:	ldr	r3, [r3]
   2a034:	sub	r3, r2, r3
   2a038:	add	ip, ip, r3
   2a03c:	add	r0, r0, r3
   2a040:	ldr	r3, [sp, #208]	; 0xd0
   2a044:	cmp	lr, r3
   2a048:	bge	29fe0 <GetDataSlab+0xdedc>
   2a04c:	ldr	r3, [r5, #4]
   2a050:	add	r2, r3, #1
   2a054:	ldr	r3, [sp, #204]	; 0xcc
   2a058:	str	r2, [r5, #4]
   2a05c:	ldr	r1, [r3, lr, lsl #2]
   2a060:	sdiv	r3, r2, r1
   2a064:	mls	r3, r1, r3, r2
   2a068:	cmp	r3, #0
   2a06c:	bne	29fcc <GetDataSlab+0xdec8>
   2a070:	ldr	r2, [r4, #4]
   2a074:	str	r3, [r5, #4]
   2a078:	ldr	r1, [sp, #196]	; 0xc4
   2a07c:	sdiv	r3, ip, r2
   2a080:	ldr	r1, [r1, lr, lsl #2]
   2a084:	mls	r3, r2, r3, ip
   2a088:	cmp	r3, #0
   2a08c:	ldrne	sl, [r4]
   2a090:	subne	r3, r2, r3
   2a094:	mlane	r3, r1, sl, r3
   2a098:	bne	2a0ac <GetDataSlab+0xdfa8>
   2a09c:	cmp	r1, #0
   2a0a0:	beq	2a0b4 <GetDataSlab+0xdfb0>
   2a0a4:	ldr	r3, [r4]
   2a0a8:	mul	r3, r3, r1
   2a0ac:	add	r0, r0, r3
   2a0b0:	add	ip, ip, r3
   2a0b4:	add	lr, lr, #1
   2a0b8:	add	r4, r4, #4
   2a0bc:	add	r5, r5, #4
   2a0c0:	b	2a040 <GetDataSlab+0xdf3c>
   2a0c4:	ldrsb	r1, [r0]
   2a0c8:	add	r3, r3, #1
   2a0cc:	str	r1, [r2], #4
   2a0d0:	ldr	r1, [sl]
   2a0d4:	add	r0, r0, r1
   2a0d8:	add	ip, ip, r1
   2a0dc:	b	29e80 <GetDataSlab+0xdd7c>
   2a0e0:	add	r3, sp, #152	; 0x98
   2a0e4:	add	r3, r3, lr, lsl #2
   2a0e8:	ldr	r3, [r3, #-120]	; 0xffffff88
   2a0ec:	add	ip, ip, r3
   2a0f0:	add	r0, r0, r3
   2a0f4:	add	r6, r6, r7
   2a0f8:	b	29e58 <GetDataSlab+0xdd54>
   2a0fc:	ldr	r7, [sl]
   2a100:	add	r9, sp, #112	; 0x70
   2a104:	add	r4, sp, #32
   2a108:	mov	r5, fp
   2a10c:	mov	r0, r9
   2a110:	mov	ip, #0
   2a114:	mov	r2, #1
   2a118:	sub	r3, r7, #1
   2a11c:	str	r3, [sp, #32]
   2a120:	ldr	r3, [fp]
   2a124:	str	r3, [sp, #112]	; 0x70
   2a128:	ldr	r3, [sp, #204]	; 0xcc
   2a12c:	ldr	r8, [r3]
   2a130:	ldr	r3, [sp, #208]	; 0xd0
   2a134:	cmp	r2, r3
   2a138:	blt	2a238 <GetDataSlab+0xe134>
   2a13c:	ldr	r3, [sp, #4]
   2a140:	cmp	r7, #1
   2a144:	mov	r6, #0
   2a148:	add	r0, r3, ip
   2a14c:	beq	2a2dc <GetDataSlab+0xe1d8>
   2a150:	cmp	r6, r8
   2a154:	bge	1c230 <GetDataSlab+0x12c>
   2a158:	ldr	r3, [sp, #196]	; 0xc4
   2a15c:	ldr	r3, [r3]
   2a160:	cmp	r3, #0
   2a164:	addne	r0, r0, r3
   2a168:	addne	ip, ip, r3
   2a16c:	ldr	r3, [sp]
   2a170:	add	r2, r3, r6, lsl #2
   2a174:	mov	r3, #0
   2a178:	ldr	r1, [sp, #204]	; 0xcc
   2a17c:	ldr	r7, [r1]
   2a180:	cmp	r7, r3
   2a184:	bgt	2a3bc <GetDataSlab+0xe2b8>
   2a188:	ldr	r3, [sp, #196]	; 0xc4
   2a18c:	add	r5, sp, #72	; 0x48
   2a190:	mov	r4, r9
   2a194:	mov	lr, #1
   2a198:	ldr	r2, [fp]
   2a19c:	ldr	r3, [r3]
   2a1a0:	sub	r3, r2, r3
   2a1a4:	ldr	r2, [sl]
   2a1a8:	mls	r3, r2, r7, r3
   2a1ac:	add	ip, ip, r3
   2a1b0:	add	r0, r0, r3
   2a1b4:	ldr	r3, [sp, #208]	; 0xd0
   2a1b8:	cmp	lr, r3
   2a1bc:	bge	2a3ec <GetDataSlab+0xe2e8>
   2a1c0:	ldr	r3, [r5, #4]
   2a1c4:	add	r2, r3, #1
   2a1c8:	ldr	r3, [sp, #204]	; 0xcc
   2a1cc:	str	r2, [r5, #4]
   2a1d0:	ldr	r1, [r3, lr, lsl #2]
   2a1d4:	sdiv	r3, r2, r1
   2a1d8:	mls	r3, r1, r3, r2
   2a1dc:	cmp	r3, #0
   2a1e0:	bne	2a3d8 <GetDataSlab+0xe2d4>
   2a1e4:	ldr	r2, [r4, #4]
   2a1e8:	str	r3, [r5, #4]
   2a1ec:	ldr	r1, [sp, #196]	; 0xc4
   2a1f0:	sdiv	r3, ip, r2
   2a1f4:	ldr	r1, [r1, lr, lsl #2]
   2a1f8:	mls	r3, r2, r3, ip
   2a1fc:	cmp	r3, #0
   2a200:	subne	r3, r2, r3
   2a204:	ldrne	r2, [r4]
   2a208:	mlane	r3, r1, r2, r3
   2a20c:	bne	2a220 <GetDataSlab+0xe11c>
   2a210:	cmp	r1, #0
   2a214:	beq	2a228 <GetDataSlab+0xe124>
   2a218:	ldr	r3, [r4]
   2a21c:	mul	r3, r3, r1
   2a220:	add	r0, r0, r3
   2a224:	add	ip, ip, r3
   2a228:	add	lr, lr, #1
   2a22c:	add	r4, r4, #4
   2a230:	add	r5, r5, #4
   2a234:	b	2a1b4 <GetDataSlab+0xe0b0>
   2a238:	ldr	r3, [sl, r2, lsl #2]
   2a23c:	mov	r6, r0
   2a240:	sub	r3, r3, #1
   2a244:	str	r3, [r4, #4]
   2a248:	ldr	r3, [r5], #4
   2a24c:	mov	r1, r5
   2a250:	str	r3, [r0, #4]
   2a254:	cmp	r1, fp
   2a258:	bne	2a288 <GetDataSlab+0xe184>
   2a25c:	ldr	r1, [sp, #196]	; 0xc4
   2a260:	add	r0, r0, #4
   2a264:	add	r4, r4, #4
   2a268:	ldr	r3, [sp, #204]	; 0xcc
   2a26c:	ldr	r1, [r1, r2, lsl #2]
   2a270:	ldr	r3, [r3, r2, lsl #2]
   2a274:	add	r2, r2, #1
   2a278:	mul	r8, r3, r8
   2a27c:	ldr	r3, [r6]
   2a280:	mla	ip, r1, r3, ip
   2a284:	b	2a130 <GetDataSlab+0xe02c>
   2a288:	str	r1, [sp, #8]
   2a28c:	ldr	r3, [r1, #-4]!
   2a290:	ldr	lr, [r4, #4]
   2a294:	mul	r3, r3, lr
   2a298:	ldr	lr, [r0, #4]
   2a29c:	str	r3, [r4, #4]
   2a2a0:	ldr	r3, [sp, #8]
   2a2a4:	ldr	r3, [r3]
   2a2a8:	mul	r3, r3, lr
   2a2ac:	str	r3, [r0, #4]
   2a2b0:	b	2a254 <GetDataSlab+0xe150>
   2a2b4:	ldrb	r1, [r0, r3]
   2a2b8:	add	r3, r3, #1
   2a2bc:	str	r1, [r2], #4
   2a2c0:	b	2a304 <GetDataSlab+0xe200>
   2a2c4:	add	r3, sp, #152	; 0x98
   2a2c8:	add	r3, r3, lr, lsl #2
   2a2cc:	ldr	r3, [r3, #-120]	; 0xffffff88
   2a2d0:	add	ip, ip, r3
   2a2d4:	add	r0, r0, r3
   2a2d8:	add	r6, r6, r7
   2a2dc:	cmp	r6, r8
   2a2e0:	bge	1c230 <GetDataSlab+0x12c>
   2a2e4:	ldr	r3, [sp, #196]	; 0xc4
   2a2e8:	ldr	r3, [r3]
   2a2ec:	cmp	r3, #0
   2a2f0:	addne	r0, r0, r3
   2a2f4:	addne	ip, ip, r3
   2a2f8:	ldr	r3, [sp]
   2a2fc:	add	r2, r3, r6, lsl #2
   2a300:	mov	r3, #0
   2a304:	ldr	r1, [sp, #204]	; 0xcc
   2a308:	ldr	r7, [r1]
   2a30c:	cmp	r7, r3
   2a310:	bgt	2a2b4 <GetDataSlab+0xe1b0>
   2a314:	ldr	r3, [sp, #196]	; 0xc4
   2a318:	add	r5, sp, #72	; 0x48
   2a31c:	mov	r4, r9
   2a320:	mov	lr, #1
   2a324:	ldr	r2, [fp]
   2a328:	ldr	r3, [r3]
   2a32c:	sub	r3, r2, r3
   2a330:	add	ip, ip, r3
   2a334:	add	r0, r0, r3
   2a338:	ldr	r3, [sp, #208]	; 0xd0
   2a33c:	cmp	lr, r3
   2a340:	bge	2a2d8 <GetDataSlab+0xe1d4>
   2a344:	ldr	r3, [r5, #4]
   2a348:	add	r2, r3, #1
   2a34c:	ldr	r3, [sp, #204]	; 0xcc
   2a350:	str	r2, [r5, #4]
   2a354:	ldr	r1, [r3, lr, lsl #2]
   2a358:	sdiv	r3, r2, r1
   2a35c:	mls	r3, r1, r3, r2
   2a360:	cmp	r3, #0
   2a364:	bne	2a2c4 <GetDataSlab+0xe1c0>
   2a368:	ldr	r2, [r4, #4]
   2a36c:	str	r3, [r5, #4]
   2a370:	ldr	r1, [sp, #196]	; 0xc4
   2a374:	sdiv	r3, ip, r2
   2a378:	ldr	r1, [r1, lr, lsl #2]
   2a37c:	mls	r3, r2, r3, ip
   2a380:	cmp	r3, #0
   2a384:	ldrne	sl, [r4]
   2a388:	subne	r3, r2, r3
   2a38c:	mlane	r3, r1, sl, r3
   2a390:	bne	2a3a4 <GetDataSlab+0xe2a0>
   2a394:	cmp	r1, #0
   2a398:	beq	2a3ac <GetDataSlab+0xe2a8>
   2a39c:	ldr	r3, [r4]
   2a3a0:	mul	r3, r3, r1
   2a3a4:	add	r0, r0, r3
   2a3a8:	add	ip, ip, r3
   2a3ac:	add	lr, lr, #1
   2a3b0:	add	r4, r4, #4
   2a3b4:	add	r5, r5, #4
   2a3b8:	b	2a338 <GetDataSlab+0xe234>
   2a3bc:	ldrb	r1, [r0]
   2a3c0:	add	r3, r3, #1
   2a3c4:	str	r1, [r2], #4
   2a3c8:	ldr	r1, [sl]
   2a3cc:	add	r0, r0, r1
   2a3d0:	add	ip, ip, r1
   2a3d4:	b	2a178 <GetDataSlab+0xe074>
   2a3d8:	add	r3, sp, #152	; 0x98
   2a3dc:	add	r3, r3, lr, lsl #2
   2a3e0:	ldr	r3, [r3, #-120]	; 0xffffff88
   2a3e4:	add	ip, ip, r3
   2a3e8:	add	r0, r0, r3
   2a3ec:	add	r6, r6, r7
   2a3f0:	b	2a150 <GetDataSlab+0xe04c>
   2a3f4:	cmp	r5, #12
   2a3f8:	bne	2a6f8 <GetDataSlab+0xe5f4>
   2a3fc:	ldr	r7, [sl]
   2a400:	add	r9, sp, #112	; 0x70
   2a404:	add	r4, sp, #32
   2a408:	mov	r5, fp
   2a40c:	mov	r0, r9
   2a410:	mov	lr, #0
   2a414:	mov	r2, #1
   2a418:	sub	r3, r7, #1
   2a41c:	str	r3, [sp, #32]
   2a420:	ldr	r3, [fp]
   2a424:	str	r3, [sp, #112]	; 0x70
   2a428:	ldr	r3, [sp, #204]	; 0xcc
   2a42c:	ldr	r8, [r3]
   2a430:	ldr	r3, [sp, #208]	; 0xd0
   2a434:	cmp	r2, r3
   2a438:	blt	2a538 <GetDataSlab+0xe434>
   2a43c:	ldr	r3, [sp, #4]
   2a440:	cmp	r7, #1
   2a444:	mov	r6, #0
   2a448:	add	ip, r3, lr, lsl #3
   2a44c:	beq	2a5dc <GetDataSlab+0xe4d8>
   2a450:	cmp	r6, r8
   2a454:	bge	1c230 <GetDataSlab+0x12c>
   2a458:	ldr	r3, [sp, #196]	; 0xc4
   2a45c:	ldr	r3, [r3]
   2a460:	cmp	r3, #0
   2a464:	addne	ip, ip, r3, lsl #3
   2a468:	addne	lr, lr, r3
   2a46c:	ldr	r3, [sp]
   2a470:	add	r2, r3, r6, lsl #2
   2a474:	mov	r3, #0
   2a478:	ldr	r1, [sp, #204]	; 0xcc
   2a47c:	ldr	r7, [r1]
   2a480:	cmp	r7, r3
   2a484:	bgt	2a6c0 <GetDataSlab+0xe5bc>
   2a488:	ldr	r3, [sp, #196]	; 0xc4
   2a48c:	add	r5, sp, #72	; 0x48
   2a490:	mov	r4, r9
   2a494:	mov	r0, #1
   2a498:	ldr	r2, [fp]
   2a49c:	ldr	r3, [r3]
   2a4a0:	sub	r3, r2, r3
   2a4a4:	ldr	r2, [sl]
   2a4a8:	mls	r3, r2, r7, r3
   2a4ac:	add	ip, ip, r3, lsl #3
   2a4b0:	add	lr, lr, r3
   2a4b4:	ldr	r3, [sp, #208]	; 0xd0
   2a4b8:	cmp	r0, r3
   2a4bc:	bge	2a6f0 <GetDataSlab+0xe5ec>
   2a4c0:	ldr	r3, [r5, #4]
   2a4c4:	add	r2, r3, #1
   2a4c8:	ldr	r3, [sp, #204]	; 0xcc
   2a4cc:	str	r2, [r5, #4]
   2a4d0:	ldr	r1, [r3, r0, lsl #2]
   2a4d4:	sdiv	r3, r2, r1
   2a4d8:	mls	r3, r1, r3, r2
   2a4dc:	cmp	r3, #0
   2a4e0:	bne	2a6dc <GetDataSlab+0xe5d8>
   2a4e4:	ldr	r2, [r4, #4]
   2a4e8:	str	r3, [r5, #4]
   2a4ec:	ldr	r1, [sp, #196]	; 0xc4
   2a4f0:	sdiv	r3, lr, r2
   2a4f4:	ldr	r1, [r1, r0, lsl #2]
   2a4f8:	mls	r3, r2, r3, lr
   2a4fc:	cmp	r3, #0
   2a500:	subne	r3, r2, r3
   2a504:	ldrne	r2, [r4]
   2a508:	mlane	r3, r1, r2, r3
   2a50c:	bne	2a520 <GetDataSlab+0xe41c>
   2a510:	cmp	r1, #0
   2a514:	beq	2a528 <GetDataSlab+0xe424>
   2a518:	ldr	r3, [r4]
   2a51c:	mul	r3, r3, r1
   2a520:	add	ip, ip, r3, lsl #3
   2a524:	add	lr, lr, r3
   2a528:	add	r0, r0, #1
   2a52c:	add	r4, r4, #4
   2a530:	add	r5, r5, #4
   2a534:	b	2a4b4 <GetDataSlab+0xe3b0>
   2a538:	ldr	r3, [sl, r2, lsl #2]
   2a53c:	mov	r6, r0
   2a540:	sub	r3, r3, #1
   2a544:	str	r3, [r4, #4]
   2a548:	ldr	r3, [r5], #4
   2a54c:	mov	r1, r5
   2a550:	str	r3, [r0, #4]
   2a554:	cmp	r1, fp
   2a558:	bne	2a588 <GetDataSlab+0xe484>
   2a55c:	ldr	r1, [sp, #196]	; 0xc4
   2a560:	add	r0, r0, #4
   2a564:	add	r4, r4, #4
   2a568:	ldr	r3, [sp, #204]	; 0xcc
   2a56c:	ldr	r1, [r1, r2, lsl #2]
   2a570:	ldr	r3, [r3, r2, lsl #2]
   2a574:	add	r2, r2, #1
   2a578:	mul	r8, r3, r8
   2a57c:	ldr	r3, [r6]
   2a580:	mla	lr, r1, r3, lr
   2a584:	b	2a430 <GetDataSlab+0xe32c>
   2a588:	str	r1, [sp, #8]
   2a58c:	ldr	r3, [r1, #-4]!
   2a590:	ldr	ip, [r4, #4]
   2a594:	mul	r3, r3, ip
   2a598:	ldr	ip, [r0, #4]
   2a59c:	str	r3, [r4, #4]
   2a5a0:	ldr	r3, [sp, #8]
   2a5a4:	ldr	r3, [r3]
   2a5a8:	mul	r3, r3, ip
   2a5ac:	str	r3, [r0, #4]
   2a5b0:	b	2a554 <GetDataSlab+0xe450>
   2a5b4:	ldr	r0, [r2, #8]!
   2a5b8:	add	r3, r3, #1
   2a5bc:	str	r0, [r1], #4
   2a5c0:	b	2a608 <GetDataSlab+0xe504>
   2a5c4:	add	r3, sp, #152	; 0x98
   2a5c8:	add	r3, r3, r0, lsl #2
   2a5cc:	ldr	r3, [r3, #-120]	; 0xffffff88
   2a5d0:	add	ip, ip, r3, lsl #3
   2a5d4:	add	lr, lr, r3
   2a5d8:	add	r6, r6, r7
   2a5dc:	cmp	r6, r8
   2a5e0:	bge	1c230 <GetDataSlab+0x12c>
   2a5e4:	ldr	r3, [sp, #196]	; 0xc4
   2a5e8:	ldr	r3, [r3]
   2a5ec:	cmp	r3, #0
   2a5f0:	addne	ip, ip, r3, lsl #3
   2a5f4:	addne	lr, lr, r3
   2a5f8:	ldr	r3, [sp]
   2a5fc:	sub	r2, ip, #8
   2a600:	add	r1, r3, r6, lsl #2
   2a604:	mov	r3, #0
   2a608:	ldr	r0, [sp, #204]	; 0xcc
   2a60c:	ldr	r7, [r0]
   2a610:	cmp	r7, r3
   2a614:	bgt	2a5b4 <GetDataSlab+0xe4b0>
   2a618:	ldr	r3, [sp, #196]	; 0xc4
   2a61c:	add	r5, sp, #72	; 0x48
   2a620:	mov	r4, r9
   2a624:	mov	r0, #1
   2a628:	ldr	r2, [fp]
   2a62c:	ldr	r3, [r3]
   2a630:	sub	r3, r2, r3
   2a634:	add	ip, ip, r3, lsl #3
   2a638:	add	lr, lr, r3
   2a63c:	ldr	r3, [sp, #208]	; 0xd0
   2a640:	cmp	r0, r3
   2a644:	bge	2a5d8 <GetDataSlab+0xe4d4>
   2a648:	ldr	r3, [r5, #4]
   2a64c:	add	r2, r3, #1
   2a650:	ldr	r3, [sp, #204]	; 0xcc
   2a654:	str	r2, [r5, #4]
   2a658:	ldr	r1, [r3, r0, lsl #2]
   2a65c:	sdiv	r3, r2, r1
   2a660:	mls	r3, r1, r3, r2
   2a664:	cmp	r3, #0
   2a668:	bne	2a5c4 <GetDataSlab+0xe4c0>
   2a66c:	ldr	r2, [r4, #4]
   2a670:	str	r3, [r5, #4]
   2a674:	ldr	r1, [sp, #196]	; 0xc4
   2a678:	sdiv	r3, lr, r2
   2a67c:	ldr	r1, [r1, r0, lsl #2]
   2a680:	mls	r3, r2, r3, lr
   2a684:	cmp	r3, #0
   2a688:	ldrne	sl, [r4]
   2a68c:	subne	r3, r2, r3
   2a690:	mlane	r3, r1, sl, r3
   2a694:	bne	2a6a8 <GetDataSlab+0xe5a4>
   2a698:	cmp	r1, #0
   2a69c:	beq	2a6b0 <GetDataSlab+0xe5ac>
   2a6a0:	ldr	r3, [r4]
   2a6a4:	mul	r3, r3, r1
   2a6a8:	add	ip, ip, r3, lsl #3
   2a6ac:	add	lr, lr, r3
   2a6b0:	add	r0, r0, #1
   2a6b4:	add	r4, r4, #4
   2a6b8:	add	r5, r5, #4
   2a6bc:	b	2a63c <GetDataSlab+0xe538>
   2a6c0:	ldr	r1, [ip]
   2a6c4:	add	r3, r3, #1
   2a6c8:	str	r1, [r2], #4
   2a6cc:	ldr	r1, [sl]
   2a6d0:	add	ip, ip, r1, lsl #3
   2a6d4:	add	lr, lr, r1
   2a6d8:	b	2a478 <GetDataSlab+0xe374>
   2a6dc:	add	r3, sp, #152	; 0x98
   2a6e0:	add	r3, r3, r0, lsl #2
   2a6e4:	ldr	r3, [r3, #-120]	; 0xffffff88
   2a6e8:	add	ip, ip, r3, lsl #3
   2a6ec:	add	lr, lr, r3
   2a6f0:	add	r6, r6, r7
   2a6f4:	b	2a450 <GetDataSlab+0xe34c>
   2a6f8:	cmp	r5, #13
   2a6fc:	bne	3236c <GetDataSlab+0x16268>
   2a700:	ldr	r7, [sl]
   2a704:	add	r9, sp, #112	; 0x70
   2a708:	add	r4, sp, #32
   2a70c:	mov	r5, fp
   2a710:	mov	r0, r9
   2a714:	mov	lr, #0
   2a718:	mov	r2, #1
   2a71c:	sub	r3, r7, #1
   2a720:	str	r3, [sp, #32]
   2a724:	ldr	r3, [fp]
   2a728:	str	r3, [sp, #112]	; 0x70
   2a72c:	ldr	r3, [sp, #204]	; 0xcc
   2a730:	ldr	r8, [r3]
   2a734:	ldr	r3, [sp, #208]	; 0xd0
   2a738:	cmp	r2, r3
   2a73c:	blt	2a83c <GetDataSlab+0xe738>
   2a740:	ldr	r3, [sp, #4]
   2a744:	cmp	r7, #1
   2a748:	mov	r6, #0
   2a74c:	add	ip, r3, lr, lsl #3
   2a750:	beq	2a8e0 <GetDataSlab+0xe7dc>
   2a754:	cmp	r6, r8
   2a758:	bge	1c230 <GetDataSlab+0x12c>
   2a75c:	ldr	r3, [sp, #196]	; 0xc4
   2a760:	ldr	r3, [r3]
   2a764:	cmp	r3, #0
   2a768:	addne	ip, ip, r3, lsl #3
   2a76c:	addne	lr, lr, r3
   2a770:	ldr	r3, [sp]
   2a774:	add	r2, r3, r6, lsl #2
   2a778:	mov	r3, #0
   2a77c:	ldr	r1, [sp, #204]	; 0xcc
   2a780:	ldr	r7, [r1]
   2a784:	cmp	r7, r3
   2a788:	bgt	2a9c4 <GetDataSlab+0xe8c0>
   2a78c:	ldr	r3, [sp, #196]	; 0xc4
   2a790:	add	r5, sp, #72	; 0x48
   2a794:	mov	r4, r9
   2a798:	mov	r0, #1
   2a79c:	ldr	r2, [fp]
   2a7a0:	ldr	r3, [r3]
   2a7a4:	sub	r3, r2, r3
   2a7a8:	ldr	r2, [sl]
   2a7ac:	mls	r3, r2, r7, r3
   2a7b0:	add	ip, ip, r3, lsl #3
   2a7b4:	add	lr, lr, r3
   2a7b8:	ldr	r3, [sp, #208]	; 0xd0
   2a7bc:	cmp	r0, r3
   2a7c0:	bge	2a9f4 <GetDataSlab+0xe8f0>
   2a7c4:	ldr	r3, [r5, #4]
   2a7c8:	add	r2, r3, #1
   2a7cc:	ldr	r3, [sp, #204]	; 0xcc
   2a7d0:	str	r2, [r5, #4]
   2a7d4:	ldr	r1, [r3, r0, lsl #2]
   2a7d8:	sdiv	r3, r2, r1
   2a7dc:	mls	r3, r1, r3, r2
   2a7e0:	cmp	r3, #0
   2a7e4:	bne	2a9e0 <GetDataSlab+0xe8dc>
   2a7e8:	ldr	r2, [r4, #4]
   2a7ec:	str	r3, [r5, #4]
   2a7f0:	ldr	r1, [sp, #196]	; 0xc4
   2a7f4:	sdiv	r3, lr, r2
   2a7f8:	ldr	r1, [r1, r0, lsl #2]
   2a7fc:	mls	r3, r2, r3, lr
   2a800:	cmp	r3, #0
   2a804:	subne	r3, r2, r3
   2a808:	ldrne	r2, [r4]
   2a80c:	mlane	r3, r1, r2, r3
   2a810:	bne	2a824 <GetDataSlab+0xe720>
   2a814:	cmp	r1, #0
   2a818:	beq	2a82c <GetDataSlab+0xe728>
   2a81c:	ldr	r3, [r4]
   2a820:	mul	r3, r3, r1
   2a824:	add	ip, ip, r3, lsl #3
   2a828:	add	lr, lr, r3
   2a82c:	add	r0, r0, #1
   2a830:	add	r4, r4, #4
   2a834:	add	r5, r5, #4
   2a838:	b	2a7b8 <GetDataSlab+0xe6b4>
   2a83c:	ldr	r3, [sl, r2, lsl #2]
   2a840:	mov	r6, r0
   2a844:	sub	r3, r3, #1
   2a848:	str	r3, [r4, #4]
   2a84c:	ldr	r3, [r5], #4
   2a850:	mov	r1, r5
   2a854:	str	r3, [r0, #4]
   2a858:	cmp	r1, fp
   2a85c:	bne	2a88c <GetDataSlab+0xe788>
   2a860:	ldr	r1, [sp, #196]	; 0xc4
   2a864:	add	r0, r0, #4
   2a868:	add	r4, r4, #4
   2a86c:	ldr	r3, [sp, #204]	; 0xcc
   2a870:	ldr	r1, [r1, r2, lsl #2]
   2a874:	ldr	r3, [r3, r2, lsl #2]
   2a878:	add	r2, r2, #1
   2a87c:	mul	r8, r3, r8
   2a880:	ldr	r3, [r6]
   2a884:	mla	lr, r1, r3, lr
   2a888:	b	2a734 <GetDataSlab+0xe630>
   2a88c:	str	r1, [sp, #8]
   2a890:	ldr	r3, [r1, #-4]!
   2a894:	ldr	ip, [r4, #4]
   2a898:	mul	r3, r3, ip
   2a89c:	ldr	ip, [r0, #4]
   2a8a0:	str	r3, [r4, #4]
   2a8a4:	ldr	r3, [sp, #8]
   2a8a8:	ldr	r3, [r3]
   2a8ac:	mul	r3, r3, ip
   2a8b0:	str	r3, [r0, #4]
   2a8b4:	b	2a858 <GetDataSlab+0xe754>
   2a8b8:	ldr	r0, [r2, #8]!
   2a8bc:	add	r3, r3, #1
   2a8c0:	str	r0, [r1], #4
   2a8c4:	b	2a90c <GetDataSlab+0xe808>
   2a8c8:	add	r3, sp, #152	; 0x98
   2a8cc:	add	r3, r3, r0, lsl #2
   2a8d0:	ldr	r3, [r3, #-120]	; 0xffffff88
   2a8d4:	add	ip, ip, r3, lsl #3
   2a8d8:	add	lr, lr, r3
   2a8dc:	add	r6, r6, r7
   2a8e0:	cmp	r6, r8
   2a8e4:	bge	1c230 <GetDataSlab+0x12c>
   2a8e8:	ldr	r3, [sp, #196]	; 0xc4
   2a8ec:	ldr	r3, [r3]
   2a8f0:	cmp	r3, #0
   2a8f4:	addne	ip, ip, r3, lsl #3
   2a8f8:	addne	lr, lr, r3
   2a8fc:	ldr	r3, [sp]
   2a900:	sub	r2, ip, #8
   2a904:	add	r1, r3, r6, lsl #2
   2a908:	mov	r3, #0
   2a90c:	ldr	r0, [sp, #204]	; 0xcc
   2a910:	ldr	r7, [r0]
   2a914:	cmp	r7, r3
   2a918:	bgt	2a8b8 <GetDataSlab+0xe7b4>
   2a91c:	ldr	r3, [sp, #196]	; 0xc4
   2a920:	add	r5, sp, #72	; 0x48
   2a924:	mov	r4, r9
   2a928:	mov	r0, #1
   2a92c:	ldr	r2, [fp]
   2a930:	ldr	r3, [r3]
   2a934:	sub	r3, r2, r3
   2a938:	add	ip, ip, r3, lsl #3
   2a93c:	add	lr, lr, r3
   2a940:	ldr	r3, [sp, #208]	; 0xd0
   2a944:	cmp	r0, r3
   2a948:	bge	2a8dc <GetDataSlab+0xe7d8>
   2a94c:	ldr	r3, [r5, #4]
   2a950:	add	r2, r3, #1
   2a954:	ldr	r3, [sp, #204]	; 0xcc
   2a958:	str	r2, [r5, #4]
   2a95c:	ldr	r1, [r3, r0, lsl #2]
   2a960:	sdiv	r3, r2, r1
   2a964:	mls	r3, r1, r3, r2
   2a968:	cmp	r3, #0
   2a96c:	bne	2a8c8 <GetDataSlab+0xe7c4>
   2a970:	ldr	r2, [r4, #4]
   2a974:	str	r3, [r5, #4]
   2a978:	ldr	r1, [sp, #196]	; 0xc4
   2a97c:	sdiv	r3, lr, r2
   2a980:	ldr	r1, [r1, r0, lsl #2]
   2a984:	mls	r3, r2, r3, lr
   2a988:	cmp	r3, #0
   2a98c:	ldrne	sl, [r4]
   2a990:	subne	r3, r2, r3
   2a994:	mlane	r3, r1, sl, r3
   2a998:	bne	2a9ac <GetDataSlab+0xe8a8>
   2a99c:	cmp	r1, #0
   2a9a0:	beq	2a9b4 <GetDataSlab+0xe8b0>
   2a9a4:	ldr	r3, [r4]
   2a9a8:	mul	r3, r3, r1
   2a9ac:	add	ip, ip, r3, lsl #3
   2a9b0:	add	lr, lr, r3
   2a9b4:	add	r0, r0, #1
   2a9b8:	add	r4, r4, #4
   2a9bc:	add	r5, r5, #4
   2a9c0:	b	2a940 <GetDataSlab+0xe83c>
   2a9c4:	ldr	r1, [ip]
   2a9c8:	add	r3, r3, #1
   2a9cc:	str	r1, [r2], #4
   2a9d0:	ldr	r1, [sl]
   2a9d4:	add	ip, ip, r1, lsl #3
   2a9d8:	add	lr, lr, r1
   2a9dc:	b	2a77c <GetDataSlab+0xe678>
   2a9e0:	add	r3, sp, #152	; 0x98
   2a9e4:	add	r3, r3, r0, lsl #2
   2a9e8:	ldr	r3, [r3, #-120]	; 0xffffff88
   2a9ec:	add	ip, ip, r3, lsl #3
   2a9f0:	add	lr, lr, r3
   2a9f4:	add	r6, r6, r7
   2a9f8:	b	2a754 <GetDataSlab+0xe650>
   2a9fc:	sub	r3, r5, #1
   2aa00:	cmp	r3, #8
   2aa04:	addls	pc, pc, r3, lsl #2
   2aa08:	b	2c268 <GetDataSlab+0x10164>
   2aa0c:	b	2bc80 <GetDataSlab+0xfb7c>
   2aa10:	b	2bf74 <GetDataSlab+0xfe70>
   2aa14:	b	2b670 <GetDataSlab+0xf56c>
   2aa18:	b	2b978 <GetDataSlab+0xf874>
   2aa1c:	b	2b068 <GetDataSlab+0xef64>
   2aa20:	b	2b36c <GetDataSlab+0xf268>
   2aa24:	b	2ad4c <GetDataSlab+0xec48>
   2aa28:	b	2c268 <GetDataSlab+0x10164>
   2aa2c:	b	2aa30 <GetDataSlab+0xe92c>
   2aa30:	ldr	r5, [sl]
   2aa34:	add	lr, sp, #32
   2aa38:	mov	r6, fp
   2aa3c:	mov	r4, #0
   2aa40:	mov	r2, #1
   2aa44:	sub	r3, r5, #1
   2aa48:	str	r3, [sp, #32]
   2aa4c:	ldr	r3, [fp]
   2aa50:	str	r3, [sp, #8]
   2aa54:	str	r3, [sp, #112]	; 0x70
   2aa58:	ldr	r3, [sp, #204]	; 0xcc
   2aa5c:	ldr	r7, [r3]
   2aa60:	add	r3, sp, #112	; 0x70
   2aa64:	mov	ip, r3
   2aa68:	str	r3, [sp, #12]
   2aa6c:	mov	r9, r7
   2aa70:	ldr	r3, [sp, #208]	; 0xd0
   2aa74:	cmp	r2, r3
   2aa78:	blt	2ab8c <GetDataSlab+0xea88>
   2aa7c:	ldr	r3, [sp, #4]
   2aa80:	cmp	r5, #1
   2aa84:	add	r0, r3, r4, lsl #3
   2aa88:	beq	2ad0c <GetDataSlab+0xec08>
   2aa8c:	bic	r3, r7, r7, asr #31
   2aa90:	mov	r6, #0
   2aa94:	lsl	r8, r5, #3
   2aa98:	mul	sl, r5, r7
   2aa9c:	mul	fp, r5, r3
   2aaa0:	mul	r3, r8, r3
   2aaa4:	str	r3, [sp, #4]
   2aaa8:	cmp	r6, r9
   2aaac:	bge	1c230 <GetDataSlab+0x12c>
   2aab0:	ldr	r3, [sp, #196]	; 0xc4
   2aab4:	mov	r2, #0
   2aab8:	ldr	ip, [r3]
   2aabc:	ldr	r3, [sp]
   2aac0:	cmp	ip, #0
   2aac4:	addne	r0, r0, ip, lsl #3
   2aac8:	addne	r4, r4, ip
   2aacc:	add	lr, r3, r6, lsl #1
   2aad0:	mov	r3, r0
   2aad4:	cmp	r2, r7
   2aad8:	blt	2ad14 <GetDataSlab+0xec10>
   2aadc:	ldr	r3, [sp, #8]
   2aae0:	add	r5, sp, #72	; 0x48
   2aae4:	mov	lr, #1
   2aae8:	sub	r3, r3, ip
   2aaec:	ldr	ip, [sp, #12]
   2aaf0:	sub	r2, r3, sl
   2aaf4:	add	r3, fp, r4
   2aaf8:	add	r4, r3, r2
   2aafc:	ldr	r3, [sp, #4]
   2ab00:	add	r3, r3, r2, lsl #3
   2ab04:	add	r0, r0, r3
   2ab08:	ldr	r3, [sp, #208]	; 0xd0
   2ab0c:	cmp	lr, r3
   2ab10:	bge	2ad44 <GetDataSlab+0xec40>
   2ab14:	ldr	r3, [r5, #4]
   2ab18:	add	r2, r3, #1
   2ab1c:	ldr	r3, [sp, #204]	; 0xcc
   2ab20:	str	r2, [r5, #4]
   2ab24:	ldr	r1, [r3, lr, lsl #2]
   2ab28:	sdiv	r3, r2, r1
   2ab2c:	mls	r3, r1, r3, r2
   2ab30:	cmp	r3, #0
   2ab34:	bne	2ad30 <GetDataSlab+0xec2c>
   2ab38:	ldr	r2, [ip, #4]
   2ab3c:	str	r3, [r5, #4]
   2ab40:	ldr	r1, [sp, #196]	; 0xc4
   2ab44:	sdiv	r3, r4, r2
   2ab48:	ldr	r1, [r1, lr, lsl #2]
   2ab4c:	mls	r3, r2, r3, r4
   2ab50:	cmp	r3, #0
   2ab54:	subne	r3, r2, r3
   2ab58:	ldrne	r2, [ip]
   2ab5c:	mlane	r3, r1, r2, r3
   2ab60:	bne	2ab74 <GetDataSlab+0xea70>
   2ab64:	cmp	r1, #0
   2ab68:	beq	2ab7c <GetDataSlab+0xea78>
   2ab6c:	ldr	r3, [ip]
   2ab70:	mul	r3, r3, r1
   2ab74:	add	r0, r0, r3, lsl #3
   2ab78:	add	r4, r4, r3
   2ab7c:	add	lr, lr, #1
   2ab80:	add	ip, ip, #4
   2ab84:	add	r5, r5, #4
   2ab88:	b	2ab08 <GetDataSlab+0xea04>
   2ab8c:	ldr	r3, [sl, r2, lsl #2]
   2ab90:	mov	r8, ip
   2ab94:	sub	r3, r3, #1
   2ab98:	str	r3, [lr, #4]
   2ab9c:	ldr	r3, [r6], #4
   2aba0:	mov	r1, r6
   2aba4:	str	r3, [ip, #4]
   2aba8:	cmp	r1, fp
   2abac:	bne	2abdc <GetDataSlab+0xead8>
   2abb0:	ldr	r1, [sp, #196]	; 0xc4
   2abb4:	add	ip, ip, #4
   2abb8:	add	lr, lr, #4
   2abbc:	ldr	r3, [sp, #204]	; 0xcc
   2abc0:	ldr	r1, [r1, r2, lsl #2]
   2abc4:	ldr	r3, [r3, r2, lsl #2]
   2abc8:	add	r2, r2, #1
   2abcc:	mul	r9, r3, r9
   2abd0:	ldr	r3, [r8]
   2abd4:	mla	r4, r1, r3, r4
   2abd8:	b	2aa70 <GetDataSlab+0xe96c>
   2abdc:	str	r1, [sp, #16]
   2abe0:	ldr	r3, [r1, #-4]!
   2abe4:	ldr	r0, [lr, #4]
   2abe8:	mul	r3, r3, r0
   2abec:	ldr	r0, [ip, #4]
   2abf0:	str	r3, [lr, #4]
   2abf4:	ldr	r3, [sp, #16]
   2abf8:	ldr	r3, [r3]
   2abfc:	mul	r3, r3, r0
   2ac00:	str	r3, [ip, #4]
   2ac04:	b	2aba8 <GetDataSlab+0xeaa4>
   2ac08:	vldmia	ip!, {d7}
   2ac0c:	add	r2, r2, #1
   2ac10:	vcvt.s32.f64	s15, d7
   2ac14:	vmov	r1, s15
   2ac18:	strh	r1, [lr], #2
   2ac1c:	b	2ac64 <GetDataSlab+0xeb60>
   2ac20:	add	r3, sp, #152	; 0x98
   2ac24:	add	r3, r3, ip, lsl #2
   2ac28:	ldr	r3, [r3, #-120]	; 0xffffff88
   2ac2c:	add	r0, r0, r3, lsl #3
   2ac30:	add	r4, r4, r3
   2ac34:	add	r6, r6, r7
   2ac38:	cmp	r6, r9
   2ac3c:	bge	1c230 <GetDataSlab+0x12c>
   2ac40:	ldr	r2, [sp]
   2ac44:	ldr	r3, [sp, #196]	; 0xc4
   2ac48:	add	lr, r2, r6, lsl #1
   2ac4c:	mov	r2, #0
   2ac50:	ldr	r3, [r3]
   2ac54:	cmp	r3, #0
   2ac58:	addne	r0, r0, r3, lsl #3
   2ac5c:	addne	r4, r4, r3
   2ac60:	mov	ip, r0
   2ac64:	cmp	r2, r7
   2ac68:	blt	2ac08 <GetDataSlab+0xeb04>
   2ac6c:	ldr	r2, [sp, #8]
   2ac70:	add	r5, sp, #72	; 0x48
   2ac74:	mov	ip, #1
   2ac78:	ldr	lr, [sp, #12]
   2ac7c:	sub	r3, r2, r3
   2ac80:	add	r0, r0, r3, lsl #3
   2ac84:	add	r4, r4, r3
   2ac88:	ldr	r3, [sp, #208]	; 0xd0
   2ac8c:	cmp	ip, r3
   2ac90:	bge	2ac34 <GetDataSlab+0xeb30>
   2ac94:	ldr	r3, [r5, #4]
   2ac98:	add	r2, r3, #1
   2ac9c:	ldr	r3, [sp, #204]	; 0xcc
   2aca0:	str	r2, [r5, #4]
   2aca4:	ldr	r1, [r3, ip, lsl #2]
   2aca8:	sdiv	r3, r2, r1
   2acac:	mls	r3, r1, r3, r2
   2acb0:	cmp	r3, #0
   2acb4:	bne	2ac20 <GetDataSlab+0xeb1c>
   2acb8:	ldr	r2, [lr, #4]
   2acbc:	str	r3, [r5, #4]
   2acc0:	ldr	r1, [sp, #196]	; 0xc4
   2acc4:	sdiv	r3, r4, r2
   2acc8:	ldr	r1, [r1, ip, lsl #2]
   2accc:	mls	r3, r2, r3, r4
   2acd0:	cmp	r3, #0
   2acd4:	ldrne	r8, [lr]
   2acd8:	subne	r3, r2, r3
   2acdc:	mlane	r3, r1, r8, r3
   2ace0:	bne	2acf4 <GetDataSlab+0xebf0>
   2ace4:	cmp	r1, #0
   2ace8:	beq	2acfc <GetDataSlab+0xebf8>
   2acec:	ldr	r3, [lr]
   2acf0:	mul	r3, r3, r1
   2acf4:	add	r0, r0, r3, lsl #3
   2acf8:	add	r4, r4, r3
   2acfc:	add	ip, ip, #1
   2ad00:	add	lr, lr, #4
   2ad04:	add	r5, r5, #4
   2ad08:	b	2ac88 <GetDataSlab+0xeb84>
   2ad0c:	mov	r6, #0
   2ad10:	b	2ac38 <GetDataSlab+0xeb34>
   2ad14:	vldr	d7, [r3]
   2ad18:	add	r2, r2, #1
   2ad1c:	add	r3, r3, r8
   2ad20:	vcvt.s32.f64	s15, d7
   2ad24:	vmov	r1, s15
   2ad28:	strh	r1, [lr], #2
   2ad2c:	b	2aad4 <GetDataSlab+0xe9d0>
   2ad30:	add	r3, sp, #152	; 0x98
   2ad34:	add	r3, r3, lr, lsl #2
   2ad38:	ldr	r3, [r3, #-120]	; 0xffffff88
   2ad3c:	add	r0, r0, r3, lsl #3
   2ad40:	add	r4, r4, r3
   2ad44:	add	r6, r6, r7
   2ad48:	b	2aaa8 <GetDataSlab+0xe9a4>
   2ad4c:	ldr	r5, [sl]
   2ad50:	add	lr, sp, #32
   2ad54:	mov	r6, fp
   2ad58:	mov	r4, #0
   2ad5c:	mov	r2, #1
   2ad60:	sub	r3, r5, #1
   2ad64:	str	r3, [sp, #32]
   2ad68:	ldr	r3, [fp]
   2ad6c:	str	r3, [sp, #8]
   2ad70:	str	r3, [sp, #112]	; 0x70
   2ad74:	ldr	r3, [sp, #204]	; 0xcc
   2ad78:	ldr	r7, [r3]
   2ad7c:	add	r3, sp, #112	; 0x70
   2ad80:	mov	ip, r3
   2ad84:	str	r3, [sp, #12]
   2ad88:	mov	r9, r7
   2ad8c:	ldr	r3, [sp, #208]	; 0xd0
   2ad90:	cmp	r2, r3
   2ad94:	blt	2aea8 <GetDataSlab+0xeda4>
   2ad98:	ldr	r3, [sp, #4]
   2ad9c:	cmp	r5, #1
   2ada0:	add	r0, r3, r4, lsl #2
   2ada4:	beq	2b028 <GetDataSlab+0xef24>
   2ada8:	bic	r3, r7, r7, asr #31
   2adac:	mov	r6, #0
   2adb0:	lsl	r8, r5, #2
   2adb4:	mul	sl, r5, r7
   2adb8:	mul	fp, r5, r3
   2adbc:	mul	r3, r8, r3
   2adc0:	str	r3, [sp, #4]
   2adc4:	cmp	r6, r9
   2adc8:	bge	1c230 <GetDataSlab+0x12c>
   2adcc:	ldr	r3, [sp, #196]	; 0xc4
   2add0:	mov	r2, #0
   2add4:	ldr	ip, [r3]
   2add8:	ldr	r3, [sp]
   2addc:	cmp	ip, #0
   2ade0:	addne	r0, r0, ip, lsl #2
   2ade4:	addne	r4, r4, ip
   2ade8:	add	lr, r3, r6, lsl #1
   2adec:	mov	r3, r0
   2adf0:	cmp	r2, r7
   2adf4:	blt	2b030 <GetDataSlab+0xef2c>
   2adf8:	ldr	r3, [sp, #8]
   2adfc:	add	r5, sp, #72	; 0x48
   2ae00:	mov	lr, #1
   2ae04:	sub	r3, r3, ip
   2ae08:	ldr	ip, [sp, #12]
   2ae0c:	sub	r2, r3, sl
   2ae10:	add	r3, fp, r4
   2ae14:	add	r4, r3, r2
   2ae18:	ldr	r3, [sp, #4]
   2ae1c:	add	r3, r3, r2, lsl #2
   2ae20:	add	r0, r0, r3
   2ae24:	ldr	r3, [sp, #208]	; 0xd0
   2ae28:	cmp	lr, r3
   2ae2c:	bge	2b060 <GetDataSlab+0xef5c>
   2ae30:	ldr	r3, [r5, #4]
   2ae34:	add	r2, r3, #1
   2ae38:	ldr	r3, [sp, #204]	; 0xcc
   2ae3c:	str	r2, [r5, #4]
   2ae40:	ldr	r1, [r3, lr, lsl #2]
   2ae44:	sdiv	r3, r2, r1
   2ae48:	mls	r3, r1, r3, r2
   2ae4c:	cmp	r3, #0
   2ae50:	bne	2b04c <GetDataSlab+0xef48>
   2ae54:	ldr	r2, [ip, #4]
   2ae58:	str	r3, [r5, #4]
   2ae5c:	ldr	r1, [sp, #196]	; 0xc4
   2ae60:	sdiv	r3, r4, r2
   2ae64:	ldr	r1, [r1, lr, lsl #2]
   2ae68:	mls	r3, r2, r3, r4
   2ae6c:	cmp	r3, #0
   2ae70:	subne	r3, r2, r3
   2ae74:	ldrne	r2, [ip]
   2ae78:	mlane	r3, r1, r2, r3
   2ae7c:	bne	2ae90 <GetDataSlab+0xed8c>
   2ae80:	cmp	r1, #0
   2ae84:	beq	2ae98 <GetDataSlab+0xed94>
   2ae88:	ldr	r3, [ip]
   2ae8c:	mul	r3, r3, r1
   2ae90:	add	r0, r0, r3, lsl #2
   2ae94:	add	r4, r4, r3
   2ae98:	add	lr, lr, #1
   2ae9c:	add	ip, ip, #4
   2aea0:	add	r5, r5, #4
   2aea4:	b	2ae24 <GetDataSlab+0xed20>
   2aea8:	ldr	r3, [sl, r2, lsl #2]
   2aeac:	mov	r8, ip
   2aeb0:	sub	r3, r3, #1
   2aeb4:	str	r3, [lr, #4]
   2aeb8:	ldr	r3, [r6], #4
   2aebc:	mov	r1, r6
   2aec0:	str	r3, [ip, #4]
   2aec4:	cmp	r1, fp
   2aec8:	bne	2aef8 <GetDataSlab+0xedf4>
   2aecc:	ldr	r1, [sp, #196]	; 0xc4
   2aed0:	add	ip, ip, #4
   2aed4:	add	lr, lr, #4
   2aed8:	ldr	r3, [sp, #204]	; 0xcc
   2aedc:	ldr	r1, [r1, r2, lsl #2]
   2aee0:	ldr	r3, [r3, r2, lsl #2]
   2aee4:	add	r2, r2, #1
   2aee8:	mul	r9, r3, r9
   2aeec:	ldr	r3, [r8]
   2aef0:	mla	r4, r1, r3, r4
   2aef4:	b	2ad8c <GetDataSlab+0xec88>
   2aef8:	str	r1, [sp, #16]
   2aefc:	ldr	r3, [r1, #-4]!
   2af00:	ldr	r0, [lr, #4]
   2af04:	mul	r3, r3, r0
   2af08:	ldr	r0, [ip, #4]
   2af0c:	str	r3, [lr, #4]
   2af10:	ldr	r3, [sp, #16]
   2af14:	ldr	r3, [r3]
   2af18:	mul	r3, r3, r0
   2af1c:	str	r3, [ip, #4]
   2af20:	b	2aec4 <GetDataSlab+0xedc0>
   2af24:	vldmia	ip!, {s15}
   2af28:	add	r2, r2, #1
   2af2c:	vcvt.s32.f32	s15, s15
   2af30:	vmov	r1, s15
   2af34:	strh	r1, [lr], #2
   2af38:	b	2af80 <GetDataSlab+0xee7c>
   2af3c:	add	r3, sp, #152	; 0x98
   2af40:	add	r3, r3, ip, lsl #2
   2af44:	ldr	r3, [r3, #-120]	; 0xffffff88
   2af48:	add	r0, r0, r3, lsl #2
   2af4c:	add	r4, r4, r3
   2af50:	add	r6, r6, r7
   2af54:	cmp	r6, r9
   2af58:	bge	1c230 <GetDataSlab+0x12c>
   2af5c:	ldr	r2, [sp]
   2af60:	ldr	r3, [sp, #196]	; 0xc4
   2af64:	add	lr, r2, r6, lsl #1
   2af68:	mov	r2, #0
   2af6c:	ldr	r3, [r3]
   2af70:	cmp	r3, #0
   2af74:	addne	r0, r0, r3, lsl #2
   2af78:	addne	r4, r4, r3
   2af7c:	mov	ip, r0
   2af80:	cmp	r2, r7
   2af84:	blt	2af24 <GetDataSlab+0xee20>
   2af88:	ldr	r2, [sp, #8]
   2af8c:	add	r5, sp, #72	; 0x48
   2af90:	mov	ip, #1
   2af94:	ldr	lr, [sp, #12]
   2af98:	sub	r3, r2, r3
   2af9c:	add	r0, r0, r3, lsl #2
   2afa0:	add	r4, r4, r3
   2afa4:	ldr	r3, [sp, #208]	; 0xd0
   2afa8:	cmp	ip, r3
   2afac:	bge	2af50 <GetDataSlab+0xee4c>
   2afb0:	ldr	r3, [r5, #4]
   2afb4:	add	r2, r3, #1
   2afb8:	ldr	r3, [sp, #204]	; 0xcc
   2afbc:	str	r2, [r5, #4]
   2afc0:	ldr	r1, [r3, ip, lsl #2]
   2afc4:	sdiv	r3, r2, r1
   2afc8:	mls	r3, r1, r3, r2
   2afcc:	cmp	r3, #0
   2afd0:	bne	2af3c <GetDataSlab+0xee38>
   2afd4:	ldr	r2, [lr, #4]
   2afd8:	str	r3, [r5, #4]
   2afdc:	ldr	r1, [sp, #196]	; 0xc4
   2afe0:	sdiv	r3, r4, r2
   2afe4:	ldr	r1, [r1, ip, lsl #2]
   2afe8:	mls	r3, r2, r3, r4
   2afec:	cmp	r3, #0
   2aff0:	ldrne	r8, [lr]
   2aff4:	subne	r3, r2, r3
   2aff8:	mlane	r3, r1, r8, r3
   2affc:	bne	2b010 <GetDataSlab+0xef0c>
   2b000:	cmp	r1, #0
   2b004:	beq	2b018 <GetDataSlab+0xef14>
   2b008:	ldr	r3, [lr]
   2b00c:	mul	r3, r3, r1
   2b010:	add	r0, r0, r3, lsl #2
   2b014:	add	r4, r4, r3
   2b018:	add	ip, ip, #1
   2b01c:	add	lr, lr, #4
   2b020:	add	r5, r5, #4
   2b024:	b	2afa4 <GetDataSlab+0xeea0>
   2b028:	mov	r6, #0
   2b02c:	b	2af54 <GetDataSlab+0xee50>
   2b030:	vldr	s15, [r3]
   2b034:	add	r2, r2, #1
   2b038:	add	r3, r3, r8
   2b03c:	vcvt.s32.f32	s15, s15
   2b040:	vmov	r1, s15
   2b044:	strh	r1, [lr], #2
   2b048:	b	2adf0 <GetDataSlab+0xecec>
   2b04c:	add	r3, sp, #152	; 0x98
   2b050:	add	r3, r3, lr, lsl #2
   2b054:	ldr	r3, [r3, #-120]	; 0xffffff88
   2b058:	add	r0, r0, r3, lsl #2
   2b05c:	add	r4, r4, r3
   2b060:	add	r6, r6, r7
   2b064:	b	2adc4 <GetDataSlab+0xecc0>
   2b068:	ldr	r5, [sl]
   2b06c:	add	r4, sp, #32
   2b070:	mov	r6, fp
   2b074:	mov	ip, #0
   2b078:	mov	r2, #1
   2b07c:	sub	r3, r5, #1
   2b080:	str	r3, [sp, #32]
   2b084:	ldr	r3, [fp]
   2b088:	str	r3, [sp, #8]
   2b08c:	str	r3, [sp, #112]	; 0x70
   2b090:	ldr	r3, [sp, #204]	; 0xcc
   2b094:	ldr	r7, [r3]
   2b098:	add	r3, sp, #112	; 0x70
   2b09c:	mov	lr, r3
   2b0a0:	str	r3, [sp, #12]
   2b0a4:	mov	r9, r7
   2b0a8:	ldr	r3, [sp, #208]	; 0xd0
   2b0ac:	cmp	r2, r3
   2b0b0:	blt	2b1c4 <GetDataSlab+0xf0c0>
   2b0b4:	ldr	r3, [sp, #4]
   2b0b8:	cmp	r5, #1
   2b0bc:	add	r0, r3, ip, lsl #2
   2b0c0:	beq	2b338 <GetDataSlab+0xf234>
   2b0c4:	bic	r3, r7, r7, asr #31
   2b0c8:	mov	r6, #0
   2b0cc:	lsl	r8, r5, #2
   2b0d0:	mul	sl, r5, r7
   2b0d4:	mul	fp, r5, r3
   2b0d8:	mul	r3, r8, r3
   2b0dc:	str	r3, [sp, #4]
   2b0e0:	cmp	r6, r9
   2b0e4:	bge	1c230 <GetDataSlab+0x12c>
   2b0e8:	ldr	r3, [sp, #196]	; 0xc4
   2b0ec:	mov	r2, #0
   2b0f0:	ldr	r1, [r3]
   2b0f4:	ldr	r3, [sp]
   2b0f8:	cmp	r1, #0
   2b0fc:	addne	r0, r0, r1, lsl #2
   2b100:	addne	ip, ip, r1
   2b104:	add	r4, r3, r6, lsl #1
   2b108:	mov	lr, r0
   2b10c:	cmp	r2, r7
   2b110:	blt	2b340 <GetDataSlab+0xf23c>
   2b114:	ldr	r3, [sp, #8]
   2b118:	add	r5, sp, #72	; 0x48
   2b11c:	mov	r4, #1
   2b120:	ldr	lr, [sp, #12]
   2b124:	sub	r3, r3, r1
   2b128:	sub	r2, r3, sl
   2b12c:	add	r3, ip, fp
   2b130:	add	ip, r3, r2
   2b134:	ldr	r3, [sp, #4]
   2b138:	add	r3, r3, r2, lsl #2
   2b13c:	add	r0, r0, r3
   2b140:	ldr	r3, [sp, #208]	; 0xd0
   2b144:	cmp	r4, r3
   2b148:	bge	2b364 <GetDataSlab+0xf260>
   2b14c:	ldr	r3, [r5, #4]
   2b150:	add	r2, r3, #1
   2b154:	ldr	r3, [sp, #204]	; 0xcc
   2b158:	str	r2, [r5, #4]
   2b15c:	ldr	r1, [r3, r4, lsl #2]
   2b160:	sdiv	r3, r2, r1
   2b164:	mls	r3, r1, r3, r2
   2b168:	cmp	r3, #0
   2b16c:	bne	2b350 <GetDataSlab+0xf24c>
   2b170:	ldr	r2, [lr, #4]
   2b174:	str	r3, [r5, #4]
   2b178:	ldr	r1, [sp, #196]	; 0xc4
   2b17c:	sdiv	r3, ip, r2
   2b180:	ldr	r1, [r1, r4, lsl #2]
   2b184:	mls	r3, r2, r3, ip
   2b188:	cmp	r3, #0
   2b18c:	subne	r3, r2, r3
   2b190:	ldrne	r2, [lr]
   2b194:	mlane	r3, r1, r2, r3
   2b198:	bne	2b1ac <GetDataSlab+0xf0a8>
   2b19c:	cmp	r1, #0
   2b1a0:	beq	2b1b4 <GetDataSlab+0xf0b0>
   2b1a4:	ldr	r3, [lr]
   2b1a8:	mul	r3, r3, r1
   2b1ac:	add	r0, r0, r3, lsl #2
   2b1b0:	add	ip, ip, r3
   2b1b4:	add	r4, r4, #1
   2b1b8:	add	lr, lr, #4
   2b1bc:	add	r5, r5, #4
   2b1c0:	b	2b140 <GetDataSlab+0xf03c>
   2b1c4:	ldr	r3, [sl, r2, lsl #2]
   2b1c8:	mov	r8, lr
   2b1cc:	sub	r3, r3, #1
   2b1d0:	str	r3, [r4, #4]
   2b1d4:	ldr	r3, [r6], #4
   2b1d8:	mov	r1, r6
   2b1dc:	str	r3, [lr, #4]
   2b1e0:	cmp	r1, fp
   2b1e4:	bne	2b214 <GetDataSlab+0xf110>
   2b1e8:	ldr	r1, [sp, #196]	; 0xc4
   2b1ec:	add	lr, lr, #4
   2b1f0:	add	r4, r4, #4
   2b1f4:	ldr	r3, [sp, #204]	; 0xcc
   2b1f8:	ldr	r1, [r1, r2, lsl #2]
   2b1fc:	ldr	r3, [r3, r2, lsl #2]
   2b200:	add	r2, r2, #1
   2b204:	mul	r9, r3, r9
   2b208:	ldr	r3, [r8]
   2b20c:	mla	ip, r1, r3, ip
   2b210:	b	2b0a8 <GetDataSlab+0xefa4>
   2b214:	str	r1, [sp, #16]
   2b218:	ldr	r3, [r1, #-4]!
   2b21c:	ldr	r0, [r4, #4]
   2b220:	mul	r3, r3, r0
   2b224:	ldr	r0, [lr, #4]
   2b228:	str	r3, [r4, #4]
   2b22c:	ldr	r3, [sp, #16]
   2b230:	ldr	r3, [r3]
   2b234:	mul	r3, r3, r0
   2b238:	str	r3, [lr, #4]
   2b23c:	b	2b1e0 <GetDataSlab+0xf0dc>
   2b240:	ldr	lr, [r0, r3, lsl #2]
   2b244:	add	r3, r3, #1
   2b248:	strh	lr, [r1], #2
   2b24c:	b	2b290 <GetDataSlab+0xf18c>
   2b250:	add	r3, sp, #152	; 0x98
   2b254:	add	r3, r3, lr, lsl #2
   2b258:	ldr	r3, [r3, #-120]	; 0xffffff88
   2b25c:	add	r0, r0, r3, lsl #2
   2b260:	add	ip, ip, r3
   2b264:	add	r6, r6, r7
   2b268:	cmp	r6, r9
   2b26c:	bge	1c230 <GetDataSlab+0x12c>
   2b270:	ldr	r3, [sp, #196]	; 0xc4
   2b274:	ldr	r2, [r3]
   2b278:	ldr	r3, [sp]
   2b27c:	cmp	r2, #0
   2b280:	addne	r0, r0, r2, lsl #2
   2b284:	addne	ip, ip, r2
   2b288:	add	r1, r3, r6, lsl #1
   2b28c:	mov	r3, #0
   2b290:	cmp	r3, r7
   2b294:	blt	2b240 <GetDataSlab+0xf13c>
   2b298:	ldr	r3, [sp, #8]
   2b29c:	add	r5, sp, #72	; 0x48
   2b2a0:	mov	lr, #1
   2b2a4:	ldr	r4, [sp, #12]
   2b2a8:	sub	r3, r3, r2
   2b2ac:	add	r0, r0, r3, lsl #2
   2b2b0:	add	ip, ip, r3
   2b2b4:	ldr	r3, [sp, #208]	; 0xd0
   2b2b8:	cmp	lr, r3
   2b2bc:	bge	2b264 <GetDataSlab+0xf160>
   2b2c0:	ldr	r3, [r5, #4]
   2b2c4:	add	r2, r3, #1
   2b2c8:	ldr	r3, [sp, #204]	; 0xcc
   2b2cc:	str	r2, [r5, #4]
   2b2d0:	ldr	r1, [r3, lr, lsl #2]
   2b2d4:	sdiv	r3, r2, r1
   2b2d8:	mls	r3, r1, r3, r2
   2b2dc:	cmp	r3, #0
   2b2e0:	bne	2b250 <GetDataSlab+0xf14c>
   2b2e4:	ldr	r2, [r4, #4]
   2b2e8:	str	r3, [r5, #4]
   2b2ec:	ldr	r1, [sp, #196]	; 0xc4
   2b2f0:	sdiv	r3, ip, r2
   2b2f4:	ldr	r1, [r1, lr, lsl #2]
   2b2f8:	mls	r3, r2, r3, ip
   2b2fc:	cmp	r3, #0
   2b300:	ldrne	r8, [r4]
   2b304:	subne	r3, r2, r3
   2b308:	mlane	r3, r1, r8, r3
   2b30c:	bne	2b320 <GetDataSlab+0xf21c>
   2b310:	cmp	r1, #0
   2b314:	beq	2b328 <GetDataSlab+0xf224>
   2b318:	ldr	r3, [r4]
   2b31c:	mul	r3, r3, r1
   2b320:	add	r0, r0, r3, lsl #2
   2b324:	add	ip, ip, r3
   2b328:	add	lr, lr, #1
   2b32c:	add	r4, r4, #4
   2b330:	add	r5, r5, #4
   2b334:	b	2b2b4 <GetDataSlab+0xf1b0>
   2b338:	mov	r6, #0
   2b33c:	b	2b268 <GetDataSlab+0xf164>
   2b340:	ldr	r3, [lr], r8
   2b344:	add	r2, r2, #1
   2b348:	strh	r3, [r4], #2
   2b34c:	b	2b10c <GetDataSlab+0xf008>
   2b350:	add	r3, sp, #152	; 0x98
   2b354:	add	r3, r3, r4, lsl #2
   2b358:	ldr	r3, [r3, #-120]	; 0xffffff88
   2b35c:	add	r0, r0, r3, lsl #2
   2b360:	add	ip, ip, r3
   2b364:	add	r6, r6, r7
   2b368:	b	2b0e0 <GetDataSlab+0xefdc>
   2b36c:	ldr	r5, [sl]
   2b370:	add	r4, sp, #32
   2b374:	mov	r6, fp
   2b378:	mov	ip, #0
   2b37c:	mov	r2, #1
   2b380:	sub	r3, r5, #1
   2b384:	str	r3, [sp, #32]
   2b388:	ldr	r3, [fp]
   2b38c:	str	r3, [sp, #8]
   2b390:	str	r3, [sp, #112]	; 0x70
   2b394:	ldr	r3, [sp, #204]	; 0xcc
   2b398:	ldr	r7, [r3]
   2b39c:	add	r3, sp, #112	; 0x70
   2b3a0:	mov	lr, r3
   2b3a4:	str	r3, [sp, #12]
   2b3a8:	mov	r9, r7
   2b3ac:	ldr	r3, [sp, #208]	; 0xd0
   2b3b0:	cmp	r2, r3
   2b3b4:	blt	2b4c8 <GetDataSlab+0xf3c4>
   2b3b8:	ldr	r3, [sp, #4]
   2b3bc:	cmp	r5, #1
   2b3c0:	add	r0, r3, ip, lsl #2
   2b3c4:	beq	2b63c <GetDataSlab+0xf538>
   2b3c8:	bic	r3, r7, r7, asr #31
   2b3cc:	mov	r6, #0
   2b3d0:	lsl	r8, r5, #2
   2b3d4:	mul	sl, r5, r7
   2b3d8:	mul	r2, r3, r5
   2b3dc:	mul	fp, r8, r3
   2b3e0:	str	r2, [sp, #4]
   2b3e4:	cmp	r6, r9
   2b3e8:	bge	1c230 <GetDataSlab+0x12c>
   2b3ec:	ldr	r3, [sp, #196]	; 0xc4
   2b3f0:	mov	r2, #0
   2b3f4:	ldr	r1, [r3]
   2b3f8:	ldr	r3, [sp]
   2b3fc:	cmp	r1, #0
   2b400:	addne	r0, r0, r1, lsl #2
   2b404:	addne	ip, ip, r1
   2b408:	add	r4, r3, r6, lsl #1
   2b40c:	mov	lr, r0
   2b410:	cmp	r2, r7
   2b414:	blt	2b644 <GetDataSlab+0xf540>
   2b418:	ldr	r3, [sp, #8]
   2b41c:	add	r5, sp, #72	; 0x48
   2b420:	mov	r4, #1
   2b424:	ldr	lr, [sp, #12]
   2b428:	sub	r3, r3, r1
   2b42c:	sub	r2, r3, sl
   2b430:	ldr	r3, [sp, #4]
   2b434:	add	r3, ip, r3
   2b438:	add	ip, r3, r2
   2b43c:	add	r3, fp, r2, lsl #2
   2b440:	add	r0, r0, r3
   2b444:	ldr	r3, [sp, #208]	; 0xd0
   2b448:	cmp	r4, r3
   2b44c:	bge	2b668 <GetDataSlab+0xf564>
   2b450:	ldr	r3, [r5, #4]
   2b454:	add	r2, r3, #1
   2b458:	ldr	r3, [sp, #204]	; 0xcc
   2b45c:	str	r2, [r5, #4]
   2b460:	ldr	r1, [r3, r4, lsl #2]
   2b464:	sdiv	r3, r2, r1
   2b468:	mls	r3, r1, r3, r2
   2b46c:	cmp	r3, #0
   2b470:	bne	2b654 <GetDataSlab+0xf550>
   2b474:	ldr	r2, [lr, #4]
   2b478:	str	r3, [r5, #4]
   2b47c:	ldr	r1, [sp, #196]	; 0xc4
   2b480:	sdiv	r3, ip, r2
   2b484:	ldr	r1, [r1, r4, lsl #2]
   2b488:	mls	r3, r2, r3, ip
   2b48c:	cmp	r3, #0
   2b490:	subne	r3, r2, r3
   2b494:	ldrne	r2, [lr]
   2b498:	mlane	r3, r1, r2, r3
   2b49c:	bne	2b4b0 <GetDataSlab+0xf3ac>
   2b4a0:	cmp	r1, #0
   2b4a4:	beq	2b4b8 <GetDataSlab+0xf3b4>
   2b4a8:	ldr	r3, [lr]
   2b4ac:	mul	r3, r3, r1
   2b4b0:	add	r0, r0, r3, lsl #2
   2b4b4:	add	ip, ip, r3
   2b4b8:	add	r4, r4, #1
   2b4bc:	add	lr, lr, #4
   2b4c0:	add	r5, r5, #4
   2b4c4:	b	2b444 <GetDataSlab+0xf340>
   2b4c8:	ldr	r3, [sl, r2, lsl #2]
   2b4cc:	mov	r8, lr
   2b4d0:	sub	r3, r3, #1
   2b4d4:	str	r3, [r4, #4]
   2b4d8:	ldr	r3, [r6], #4
   2b4dc:	mov	r1, r6
   2b4e0:	str	r3, [lr, #4]
   2b4e4:	cmp	r1, fp
   2b4e8:	bne	2b518 <GetDataSlab+0xf414>
   2b4ec:	ldr	r1, [sp, #196]	; 0xc4
   2b4f0:	add	lr, lr, #4
   2b4f4:	add	r4, r4, #4
   2b4f8:	ldr	r3, [sp, #204]	; 0xcc
   2b4fc:	ldr	r1, [r1, r2, lsl #2]
   2b500:	ldr	r3, [r3, r2, lsl #2]
   2b504:	add	r2, r2, #1
   2b508:	mul	r9, r3, r9
   2b50c:	ldr	r3, [r8]
   2b510:	mla	ip, r1, r3, ip
   2b514:	b	2b3ac <GetDataSlab+0xf2a8>
   2b518:	str	r1, [sp, #16]
   2b51c:	ldr	r3, [r1, #-4]!
   2b520:	ldr	r0, [r4, #4]
   2b524:	mul	r3, r3, r0
   2b528:	ldr	r0, [lr, #4]
   2b52c:	str	r3, [r4, #4]
   2b530:	ldr	r3, [sp, #16]
   2b534:	ldr	r3, [r3]
   2b538:	mul	r3, r3, r0
   2b53c:	str	r3, [lr, #4]
   2b540:	b	2b4e4 <GetDataSlab+0xf3e0>
   2b544:	ldr	lr, [r0, r3, lsl #2]
   2b548:	add	r3, r3, #1
   2b54c:	strh	lr, [r1], #2
   2b550:	b	2b594 <GetDataSlab+0xf490>
   2b554:	add	r3, sp, #152	; 0x98
   2b558:	add	r3, r3, lr, lsl #2
   2b55c:	ldr	r3, [r3, #-120]	; 0xffffff88
   2b560:	add	r0, r0, r3, lsl #2
   2b564:	add	ip, ip, r3
   2b568:	add	r6, r6, r7
   2b56c:	cmp	r6, r9
   2b570:	bge	1c230 <GetDataSlab+0x12c>
   2b574:	ldr	r3, [sp, #196]	; 0xc4
   2b578:	ldr	r2, [r3]
   2b57c:	ldr	r3, [sp]
   2b580:	cmp	r2, #0
   2b584:	addne	r0, r0, r2, lsl #2
   2b588:	addne	ip, ip, r2
   2b58c:	add	r1, r3, r6, lsl #1
   2b590:	mov	r3, #0
   2b594:	cmp	r3, r7
   2b598:	blt	2b544 <GetDataSlab+0xf440>
   2b59c:	ldr	r3, [sp, #8]
   2b5a0:	add	r5, sp, #72	; 0x48
   2b5a4:	mov	lr, #1
   2b5a8:	ldr	r4, [sp, #12]
   2b5ac:	sub	r3, r3, r2
   2b5b0:	add	r0, r0, r3, lsl #2
   2b5b4:	add	ip, ip, r3
   2b5b8:	ldr	r3, [sp, #208]	; 0xd0
   2b5bc:	cmp	lr, r3
   2b5c0:	bge	2b568 <GetDataSlab+0xf464>
   2b5c4:	ldr	r3, [r5, #4]
   2b5c8:	add	r2, r3, #1
   2b5cc:	ldr	r3, [sp, #204]	; 0xcc
   2b5d0:	str	r2, [r5, #4]
   2b5d4:	ldr	r1, [r3, lr, lsl #2]
   2b5d8:	sdiv	r3, r2, r1
   2b5dc:	mls	r3, r1, r3, r2
   2b5e0:	cmp	r3, #0
   2b5e4:	bne	2b554 <GetDataSlab+0xf450>
   2b5e8:	ldr	r2, [r4, #4]
   2b5ec:	str	r3, [r5, #4]
   2b5f0:	ldr	r1, [sp, #196]	; 0xc4
   2b5f4:	sdiv	r3, ip, r2
   2b5f8:	ldr	r1, [r1, lr, lsl #2]
   2b5fc:	mls	r3, r2, r3, ip
   2b600:	cmp	r3, #0
   2b604:	ldrne	r8, [r4]
   2b608:	subne	r3, r2, r3
   2b60c:	mlane	r3, r1, r8, r3
   2b610:	bne	2b624 <GetDataSlab+0xf520>
   2b614:	cmp	r1, #0
   2b618:	beq	2b62c <GetDataSlab+0xf528>
   2b61c:	ldr	r3, [r4]
   2b620:	mul	r3, r3, r1
   2b624:	add	r0, r0, r3, lsl #2
   2b628:	add	ip, ip, r3
   2b62c:	add	lr, lr, #1
   2b630:	add	r4, r4, #4
   2b634:	add	r5, r5, #4
   2b638:	b	2b5b8 <GetDataSlab+0xf4b4>
   2b63c:	mov	r6, #0
   2b640:	b	2b56c <GetDataSlab+0xf468>
   2b644:	ldr	r3, [lr], r8
   2b648:	add	r2, r2, #1
   2b64c:	strh	r3, [r4], #2
   2b650:	b	2b410 <GetDataSlab+0xf30c>
   2b654:	add	r3, sp, #152	; 0x98
   2b658:	add	r3, r3, r4, lsl #2
   2b65c:	ldr	r3, [r3, #-120]	; 0xffffff88
   2b660:	add	r0, r0, r3, lsl #2
   2b664:	add	ip, ip, r3
   2b668:	add	r6, r6, r7
   2b66c:	b	2b3e4 <GetDataSlab+0xf2e0>
   2b670:	ldr	r5, [sl]
   2b674:	add	lr, sp, #32
   2b678:	mov	r6, fp
   2b67c:	mov	r4, #0
   2b680:	mov	r2, #1
   2b684:	sub	r3, r5, #1
   2b688:	str	r3, [sp, #32]
   2b68c:	ldr	r3, [fp]
   2b690:	str	r3, [sp, #8]
   2b694:	str	r3, [sp, #112]	; 0x70
   2b698:	ldr	r3, [sp, #204]	; 0xcc
   2b69c:	ldr	r7, [r3]
   2b6a0:	add	r3, sp, #112	; 0x70
   2b6a4:	mov	ip, r3
   2b6a8:	str	r3, [sp, #12]
   2b6ac:	mov	r9, r7
   2b6b0:	ldr	r3, [sp, #208]	; 0xd0
   2b6b4:	cmp	r2, r3
   2b6b8:	blt	2b7cc <GetDataSlab+0xf6c8>
   2b6bc:	ldr	r3, [sp, #4]
   2b6c0:	cmp	r5, #1
   2b6c4:	add	r0, r3, r4, lsl #1
   2b6c8:	beq	2b944 <GetDataSlab+0xf840>
   2b6cc:	bic	r3, r7, r7, asr #31
   2b6d0:	mov	r6, #0
   2b6d4:	lsl	r8, r5, #1
   2b6d8:	mul	sl, r5, r7
   2b6dc:	mul	fp, r5, r3
   2b6e0:	mul	r3, r8, r3
   2b6e4:	str	r3, [sp, #4]
   2b6e8:	cmp	r6, r9
   2b6ec:	bge	1c230 <GetDataSlab+0x12c>
   2b6f0:	ldr	r3, [sp, #196]	; 0xc4
   2b6f4:	mov	r2, #0
   2b6f8:	ldr	r1, [r3]
   2b6fc:	ldr	r3, [sp]
   2b700:	cmp	r1, #0
   2b704:	addne	r0, r0, r1, lsl #1
   2b708:	addne	r4, r4, r1
   2b70c:	add	lr, r3, r6, lsl #1
   2b710:	mov	ip, r0
   2b714:	cmp	r2, r7
   2b718:	blt	2b94c <GetDataSlab+0xf848>
   2b71c:	ldr	r3, [sp, #8]
   2b720:	add	r5, sp, #72	; 0x48
   2b724:	mov	lr, #1
   2b728:	ldr	ip, [sp, #12]
   2b72c:	sub	r3, r3, r1
   2b730:	sub	r2, r3, sl
   2b734:	add	r3, r4, fp
   2b738:	add	r4, r3, r2
   2b73c:	ldr	r3, [sp, #4]
   2b740:	add	r3, r3, r2, lsl #1
   2b744:	add	r0, r0, r3
   2b748:	ldr	r3, [sp, #208]	; 0xd0
   2b74c:	cmp	lr, r3
   2b750:	bge	2b970 <GetDataSlab+0xf86c>
   2b754:	ldr	r3, [r5, #4]
   2b758:	add	r2, r3, #1
   2b75c:	ldr	r3, [sp, #204]	; 0xcc
   2b760:	str	r2, [r5, #4]
   2b764:	ldr	r1, [r3, lr, lsl #2]
   2b768:	sdiv	r3, r2, r1
   2b76c:	mls	r3, r1, r3, r2
   2b770:	cmp	r3, #0
   2b774:	bne	2b95c <GetDataSlab+0xf858>
   2b778:	ldr	r2, [ip, #4]
   2b77c:	str	r3, [r5, #4]
   2b780:	ldr	r1, [sp, #196]	; 0xc4
   2b784:	sdiv	r3, r4, r2
   2b788:	ldr	r1, [r1, lr, lsl #2]
   2b78c:	mls	r3, r2, r3, r4
   2b790:	cmp	r3, #0
   2b794:	subne	r3, r2, r3
   2b798:	ldrne	r2, [ip]
   2b79c:	mlane	r3, r1, r2, r3
   2b7a0:	bne	2b7b4 <GetDataSlab+0xf6b0>
   2b7a4:	cmp	r1, #0
   2b7a8:	beq	2b7bc <GetDataSlab+0xf6b8>
   2b7ac:	ldr	r3, [ip]
   2b7b0:	mul	r3, r3, r1
   2b7b4:	add	r0, r0, r3, lsl #1
   2b7b8:	add	r4, r4, r3
   2b7bc:	add	lr, lr, #1
   2b7c0:	add	ip, ip, #4
   2b7c4:	add	r5, r5, #4
   2b7c8:	b	2b748 <GetDataSlab+0xf644>
   2b7cc:	ldr	r3, [sl, r2, lsl #2]
   2b7d0:	mov	r8, ip
   2b7d4:	sub	r3, r3, #1
   2b7d8:	str	r3, [lr, #4]
   2b7dc:	ldr	r3, [r6], #4
   2b7e0:	mov	r1, r6
   2b7e4:	str	r3, [ip, #4]
   2b7e8:	cmp	r1, fp
   2b7ec:	bne	2b81c <GetDataSlab+0xf718>
   2b7f0:	ldr	r1, [sp, #196]	; 0xc4
   2b7f4:	add	ip, ip, #4
   2b7f8:	add	lr, lr, #4
   2b7fc:	ldr	r3, [sp, #204]	; 0xcc
   2b800:	ldr	r1, [r1, r2, lsl #2]
   2b804:	ldr	r3, [r3, r2, lsl #2]
   2b808:	add	r2, r2, #1
   2b80c:	mul	r9, r3, r9
   2b810:	ldr	r3, [r8]
   2b814:	mla	r4, r1, r3, r4
   2b818:	b	2b6b0 <GetDataSlab+0xf5ac>
   2b81c:	str	r1, [sp, #16]
   2b820:	ldr	r3, [r1, #-4]!
   2b824:	ldr	r0, [lr, #4]
   2b828:	mul	r3, r3, r0
   2b82c:	ldr	r0, [ip, #4]
   2b830:	str	r3, [lr, #4]
   2b834:	ldr	r3, [sp, #16]
   2b838:	ldr	r3, [r3]
   2b83c:	mul	r3, r3, r0
   2b840:	str	r3, [ip, #4]
   2b844:	b	2b7e8 <GetDataSlab+0xf6e4>
   2b848:	ldrsh	r3, [ip, #2]!
   2b84c:	add	r1, r1, #1
   2b850:	strh	r3, [lr], #2
   2b854:	b	2b89c <GetDataSlab+0xf798>
   2b858:	add	r3, sp, #152	; 0x98
   2b85c:	add	r3, r3, ip, lsl #2
   2b860:	ldr	r3, [r3, #-120]	; 0xffffff88
   2b864:	add	r0, r0, r3, lsl #1
   2b868:	add	r4, r4, r3
   2b86c:	add	r6, r6, r7
   2b870:	cmp	r6, r9
   2b874:	bge	1c230 <GetDataSlab+0x12c>
   2b878:	ldr	r3, [sp, #196]	; 0xc4
   2b87c:	mov	r1, #0
   2b880:	ldr	r2, [r3]
   2b884:	ldr	r3, [sp]
   2b888:	cmp	r2, #0
   2b88c:	addne	r0, r0, r2, lsl #1
   2b890:	addne	r4, r4, r2
   2b894:	add	lr, r3, r6, lsl #1
   2b898:	sub	ip, r0, #2
   2b89c:	cmp	r1, r7
   2b8a0:	blt	2b848 <GetDataSlab+0xf744>
   2b8a4:	ldr	r3, [sp, #8]
   2b8a8:	add	r5, sp, #72	; 0x48
   2b8ac:	mov	ip, #1
   2b8b0:	ldr	lr, [sp, #12]
   2b8b4:	sub	r3, r3, r2
   2b8b8:	add	r0, r0, r3, lsl #1
   2b8bc:	add	r4, r4, r3
   2b8c0:	ldr	r3, [sp, #208]	; 0xd0
   2b8c4:	cmp	ip, r3
   2b8c8:	bge	2b86c <GetDataSlab+0xf768>
   2b8cc:	ldr	r3, [r5, #4]
   2b8d0:	add	r2, r3, #1
   2b8d4:	ldr	r3, [sp, #204]	; 0xcc
   2b8d8:	str	r2, [r5, #4]
   2b8dc:	ldr	r1, [r3, ip, lsl #2]
   2b8e0:	sdiv	r3, r2, r1
   2b8e4:	mls	r3, r1, r3, r2
   2b8e8:	cmp	r3, #0
   2b8ec:	bne	2b858 <GetDataSlab+0xf754>
   2b8f0:	ldr	r2, [lr, #4]
   2b8f4:	str	r3, [r5, #4]
   2b8f8:	ldr	r1, [sp, #196]	; 0xc4
   2b8fc:	sdiv	r3, r4, r2
   2b900:	ldr	r1, [r1, ip, lsl #2]
   2b904:	mls	r3, r2, r3, r4
   2b908:	cmp	r3, #0
   2b90c:	ldrne	r8, [lr]
   2b910:	subne	r3, r2, r3
   2b914:	mlane	r3, r1, r8, r3
   2b918:	bne	2b92c <GetDataSlab+0xf828>
   2b91c:	cmp	r1, #0
   2b920:	beq	2b934 <GetDataSlab+0xf830>
   2b924:	ldr	r3, [lr]
   2b928:	mul	r3, r3, r1
   2b92c:	add	r0, r0, r3, lsl #1
   2b930:	add	r4, r4, r3
   2b934:	add	ip, ip, #1
   2b938:	add	lr, lr, #4
   2b93c:	add	r5, r5, #4
   2b940:	b	2b8c0 <GetDataSlab+0xf7bc>
   2b944:	mov	r6, #0
   2b948:	b	2b870 <GetDataSlab+0xf76c>
   2b94c:	ldrsh	r3, [ip], r8
   2b950:	add	r2, r2, #1
   2b954:	strh	r3, [lr], #2
   2b958:	b	2b714 <GetDataSlab+0xf610>
   2b95c:	add	r3, sp, #152	; 0x98
   2b960:	add	r3, r3, lr, lsl #2
   2b964:	ldr	r3, [r3, #-120]	; 0xffffff88
   2b968:	add	r0, r0, r3, lsl #1
   2b96c:	add	r4, r4, r3
   2b970:	add	r6, r6, r7
   2b974:	b	2b6e8 <GetDataSlab+0xf5e4>
   2b978:	ldr	r5, [sl]
   2b97c:	add	lr, sp, #32
   2b980:	mov	r6, fp
   2b984:	mov	r4, #0
   2b988:	mov	r2, #1
   2b98c:	sub	r3, r5, #1
   2b990:	str	r3, [sp, #32]
   2b994:	ldr	r3, [fp]
   2b998:	str	r3, [sp, #8]
   2b99c:	str	r3, [sp, #112]	; 0x70
   2b9a0:	ldr	r3, [sp, #204]	; 0xcc
   2b9a4:	ldr	r7, [r3]
   2b9a8:	add	r3, sp, #112	; 0x70
   2b9ac:	mov	ip, r3
   2b9b0:	str	r3, [sp, #12]
   2b9b4:	mov	r9, r7
   2b9b8:	ldr	r3, [sp, #208]	; 0xd0
   2b9bc:	cmp	r2, r3
   2b9c0:	blt	2bad4 <GetDataSlab+0xf9d0>
   2b9c4:	ldr	r3, [sp, #4]
   2b9c8:	cmp	r5, #1
   2b9cc:	add	r0, r3, r4, lsl #1
   2b9d0:	beq	2bc4c <GetDataSlab+0xfb48>
   2b9d4:	bic	r3, r7, r7, asr #31
   2b9d8:	mov	r6, #0
   2b9dc:	lsl	r8, r5, #1
   2b9e0:	mul	sl, r5, r7
   2b9e4:	mul	r2, r5, r3
   2b9e8:	mul	fp, r8, r3
   2b9ec:	str	r2, [sp, #4]
   2b9f0:	cmp	r6, r9
   2b9f4:	bge	1c230 <GetDataSlab+0x12c>
   2b9f8:	ldr	r3, [sp, #196]	; 0xc4
   2b9fc:	mov	r2, #0
   2ba00:	ldr	r1, [r3]
   2ba04:	ldr	r3, [sp]
   2ba08:	cmp	r1, #0
   2ba0c:	addne	r0, r0, r1, lsl #1
   2ba10:	addne	r4, r4, r1
   2ba14:	add	lr, r3, r6, lsl #1
   2ba18:	mov	ip, r0
   2ba1c:	cmp	r2, r7
   2ba20:	blt	2bc54 <GetDataSlab+0xfb50>
   2ba24:	ldr	r3, [sp, #8]
   2ba28:	add	r5, sp, #72	; 0x48
   2ba2c:	mov	lr, #1
   2ba30:	ldr	ip, [sp, #12]
   2ba34:	sub	r3, r3, r1
   2ba38:	sub	r2, r3, sl
   2ba3c:	ldr	r3, [sp, #4]
   2ba40:	add	r3, r4, r3
   2ba44:	add	r4, r3, r2
   2ba48:	add	r3, fp, r2, lsl #1
   2ba4c:	add	r0, r0, r3
   2ba50:	ldr	r3, [sp, #208]	; 0xd0
   2ba54:	cmp	lr, r3
   2ba58:	bge	2bc78 <GetDataSlab+0xfb74>
   2ba5c:	ldr	r3, [r5, #4]
   2ba60:	add	r2, r3, #1
   2ba64:	ldr	r3, [sp, #204]	; 0xcc
   2ba68:	str	r2, [r5, #4]
   2ba6c:	ldr	r1, [r3, lr, lsl #2]
   2ba70:	sdiv	r3, r2, r1
   2ba74:	mls	r3, r1, r3, r2
   2ba78:	cmp	r3, #0
   2ba7c:	bne	2bc64 <GetDataSlab+0xfb60>
   2ba80:	ldr	r2, [ip, #4]
   2ba84:	str	r3, [r5, #4]
   2ba88:	ldr	r1, [sp, #196]	; 0xc4
   2ba8c:	sdiv	r3, r4, r2
   2ba90:	ldr	r1, [r1, lr, lsl #2]
   2ba94:	mls	r3, r2, r3, r4
   2ba98:	cmp	r3, #0
   2ba9c:	subne	r3, r2, r3
   2baa0:	ldrne	r2, [ip]
   2baa4:	mlane	r3, r1, r2, r3
   2baa8:	bne	2babc <GetDataSlab+0xf9b8>
   2baac:	cmp	r1, #0
   2bab0:	beq	2bac4 <GetDataSlab+0xf9c0>
   2bab4:	ldr	r3, [ip]
   2bab8:	mul	r3, r3, r1
   2babc:	add	r0, r0, r3, lsl #1
   2bac0:	add	r4, r4, r3
   2bac4:	add	lr, lr, #1
   2bac8:	add	ip, ip, #4
   2bacc:	add	r5, r5, #4
   2bad0:	b	2ba50 <GetDataSlab+0xf94c>
   2bad4:	ldr	r3, [sl, r2, lsl #2]
   2bad8:	mov	r8, ip
   2badc:	sub	r3, r3, #1
   2bae0:	str	r3, [lr, #4]
   2bae4:	ldr	r3, [r6], #4
   2bae8:	mov	r1, r6
   2baec:	str	r3, [ip, #4]
   2baf0:	cmp	r1, fp
   2baf4:	bne	2bb24 <GetDataSlab+0xfa20>
   2baf8:	ldr	r1, [sp, #196]	; 0xc4
   2bafc:	add	ip, ip, #4
   2bb00:	add	lr, lr, #4
   2bb04:	ldr	r3, [sp, #204]	; 0xcc
   2bb08:	ldr	r1, [r1, r2, lsl #2]
   2bb0c:	ldr	r3, [r3, r2, lsl #2]
   2bb10:	add	r2, r2, #1
   2bb14:	mul	r9, r3, r9
   2bb18:	ldr	r3, [r8]
   2bb1c:	mla	r4, r1, r3, r4
   2bb20:	b	2b9b8 <GetDataSlab+0xf8b4>
   2bb24:	str	r1, [sp, #16]
   2bb28:	ldr	r3, [r1, #-4]!
   2bb2c:	ldr	r0, [lr, #4]
   2bb30:	mul	r3, r3, r0
   2bb34:	ldr	r0, [ip, #4]
   2bb38:	str	r3, [lr, #4]
   2bb3c:	ldr	r3, [sp, #16]
   2bb40:	ldr	r3, [r3]
   2bb44:	mul	r3, r3, r0
   2bb48:	str	r3, [ip, #4]
   2bb4c:	b	2baf0 <GetDataSlab+0xf9ec>
   2bb50:	ldrh	r3, [ip, #2]!
   2bb54:	add	r1, r1, #1
   2bb58:	strh	r3, [lr], #2
   2bb5c:	b	2bba4 <GetDataSlab+0xfaa0>
   2bb60:	add	r3, sp, #152	; 0x98
   2bb64:	add	r3, r3, ip, lsl #2
   2bb68:	ldr	r3, [r3, #-120]	; 0xffffff88
   2bb6c:	add	r0, r0, r3, lsl #1
   2bb70:	add	r4, r4, r3
   2bb74:	add	r6, r6, r7
   2bb78:	cmp	r6, r9
   2bb7c:	bge	1c230 <GetDataSlab+0x12c>
   2bb80:	ldr	r3, [sp, #196]	; 0xc4
   2bb84:	mov	r1, #0
   2bb88:	ldr	r2, [r3]
   2bb8c:	ldr	r3, [sp]
   2bb90:	cmp	r2, #0
   2bb94:	addne	r0, r0, r2, lsl #1
   2bb98:	addne	r4, r4, r2
   2bb9c:	add	lr, r3, r6, lsl #1
   2bba0:	sub	ip, r0, #2
   2bba4:	cmp	r1, r7
   2bba8:	blt	2bb50 <GetDataSlab+0xfa4c>
   2bbac:	ldr	r3, [sp, #8]
   2bbb0:	add	r5, sp, #72	; 0x48
   2bbb4:	mov	ip, #1
   2bbb8:	ldr	lr, [sp, #12]
   2bbbc:	sub	r3, r3, r2
   2bbc0:	add	r0, r0, r3, lsl #1
   2bbc4:	add	r4, r4, r3
   2bbc8:	ldr	r3, [sp, #208]	; 0xd0
   2bbcc:	cmp	ip, r3
   2bbd0:	bge	2bb74 <GetDataSlab+0xfa70>
   2bbd4:	ldr	r3, [r5, #4]
   2bbd8:	add	r2, r3, #1
   2bbdc:	ldr	r3, [sp, #204]	; 0xcc
   2bbe0:	str	r2, [r5, #4]
   2bbe4:	ldr	r1, [r3, ip, lsl #2]
   2bbe8:	sdiv	r3, r2, r1
   2bbec:	mls	r3, r1, r3, r2
   2bbf0:	cmp	r3, #0
   2bbf4:	bne	2bb60 <GetDataSlab+0xfa5c>
   2bbf8:	ldr	r2, [lr, #4]
   2bbfc:	str	r3, [r5, #4]
   2bc00:	ldr	r1, [sp, #196]	; 0xc4
   2bc04:	sdiv	r3, r4, r2
   2bc08:	ldr	r1, [r1, ip, lsl #2]
   2bc0c:	mls	r3, r2, r3, r4
   2bc10:	cmp	r3, #0
   2bc14:	ldrne	r8, [lr]
   2bc18:	subne	r3, r2, r3
   2bc1c:	mlane	r3, r1, r8, r3
   2bc20:	bne	2bc34 <GetDataSlab+0xfb30>
   2bc24:	cmp	r1, #0
   2bc28:	beq	2bc3c <GetDataSlab+0xfb38>
   2bc2c:	ldr	r3, [lr]
   2bc30:	mul	r3, r3, r1
   2bc34:	add	r0, r0, r3, lsl #1
   2bc38:	add	r4, r4, r3
   2bc3c:	add	ip, ip, #1
   2bc40:	add	lr, lr, #4
   2bc44:	add	r5, r5, #4
   2bc48:	b	2bbc8 <GetDataSlab+0xfac4>
   2bc4c:	mov	r6, #0
   2bc50:	b	2bb78 <GetDataSlab+0xfa74>
   2bc54:	ldrh	r3, [ip], r8
   2bc58:	add	r2, r2, #1
   2bc5c:	strh	r3, [lr], #2
   2bc60:	b	2ba1c <GetDataSlab+0xf918>
   2bc64:	add	r3, sp, #152	; 0x98
   2bc68:	add	r3, r3, lr, lsl #2
   2bc6c:	ldr	r3, [r3, #-120]	; 0xffffff88
   2bc70:	add	r0, r0, r3, lsl #1
   2bc74:	add	r4, r4, r3
   2bc78:	add	r6, r6, r7
   2bc7c:	b	2b9f0 <GetDataSlab+0xf8ec>
   2bc80:	ldr	r8, [sl]
   2bc84:	add	r4, sp, #32
   2bc88:	mov	r5, fp
   2bc8c:	mov	lr, #0
   2bc90:	mov	r2, #1
   2bc94:	sub	r3, r8, #1
   2bc98:	str	r3, [sp, #32]
   2bc9c:	ldr	r3, [fp]
   2bca0:	str	r3, [sp, #8]
   2bca4:	str	r3, [sp, #112]	; 0x70
   2bca8:	ldr	r3, [sp, #204]	; 0xcc
   2bcac:	ldr	r7, [r3]
   2bcb0:	add	r3, sp, #112	; 0x70
   2bcb4:	mov	ip, r3
   2bcb8:	str	r3, [sp, #12]
   2bcbc:	mov	r9, r7
   2bcc0:	ldr	r3, [sp, #208]	; 0xd0
   2bcc4:	cmp	r2, r3
   2bcc8:	blt	2bdcc <GetDataSlab+0xfcc8>
   2bccc:	ldr	r3, [sp, #4]
   2bcd0:	cmp	r8, #1
   2bcd4:	add	ip, r3, lr
   2bcd8:	beq	2bf40 <GetDataSlab+0xfe3c>
   2bcdc:	bic	r3, r7, r7, asr #31
   2bce0:	mov	r6, #0
   2bce4:	mul	fp, r8, r7
   2bce8:	mul	sl, r8, r3
   2bcec:	cmp	r6, r9
   2bcf0:	bge	1c230 <GetDataSlab+0x12c>
   2bcf4:	ldr	r3, [sp, #196]	; 0xc4
   2bcf8:	mov	r2, #0
   2bcfc:	ldr	r1, [r3]
   2bd00:	ldr	r3, [sp]
   2bd04:	cmp	r1, #0
   2bd08:	addne	ip, ip, r1
   2bd0c:	addne	lr, lr, r1
   2bd10:	add	r4, r3, r6, lsl #1
   2bd14:	mov	r0, ip
   2bd18:	cmp	r2, r7
   2bd1c:	blt	2bf48 <GetDataSlab+0xfe44>
   2bd20:	ldr	r3, [sp, #8]
   2bd24:	add	r5, sp, #72	; 0x48
   2bd28:	mov	r4, #1
   2bd2c:	ldr	r0, [sp, #12]
   2bd30:	sub	r3, r3, r1
   2bd34:	sub	r2, r3, fp
   2bd38:	add	r3, lr, sl
   2bd3c:	add	lr, r3, r2
   2bd40:	add	r3, sl, r2
   2bd44:	add	ip, ip, r3
   2bd48:	ldr	r3, [sp, #208]	; 0xd0
   2bd4c:	cmp	r4, r3
   2bd50:	bge	2bf6c <GetDataSlab+0xfe68>
   2bd54:	ldr	r3, [r5, #4]
   2bd58:	add	r2, r3, #1
   2bd5c:	ldr	r3, [sp, #204]	; 0xcc
   2bd60:	str	r2, [r5, #4]
   2bd64:	ldr	r1, [r3, r4, lsl #2]
   2bd68:	sdiv	r3, r2, r1
   2bd6c:	mls	r3, r1, r3, r2
   2bd70:	cmp	r3, #0
   2bd74:	bne	2bf58 <GetDataSlab+0xfe54>
   2bd78:	ldr	r2, [r0, #4]
   2bd7c:	str	r3, [r5, #4]
   2bd80:	ldr	r1, [sp, #196]	; 0xc4
   2bd84:	sdiv	r3, lr, r2
   2bd88:	ldr	r1, [r1, r4, lsl #2]
   2bd8c:	mls	r3, r2, r3, lr
   2bd90:	cmp	r3, #0
   2bd94:	subne	r3, r2, r3
   2bd98:	ldrne	r2, [r0]
   2bd9c:	mlane	r3, r1, r2, r3
   2bda0:	bne	2bdb4 <GetDataSlab+0xfcb0>
   2bda4:	cmp	r1, #0
   2bda8:	beq	2bdbc <GetDataSlab+0xfcb8>
   2bdac:	ldr	r3, [r0]
   2bdb0:	mul	r3, r3, r1
   2bdb4:	add	ip, ip, r3
   2bdb8:	add	lr, lr, r3
   2bdbc:	add	r4, r4, #1
   2bdc0:	add	r0, r0, #4
   2bdc4:	add	r5, r5, #4
   2bdc8:	b	2bd48 <GetDataSlab+0xfc44>
   2bdcc:	ldr	r3, [sl, r2, lsl #2]
   2bdd0:	mov	r6, ip
   2bdd4:	sub	r3, r3, #1
   2bdd8:	str	r3, [r4, #4]
   2bddc:	ldr	r3, [r5], #4
   2bde0:	mov	r1, r5
   2bde4:	str	r3, [ip, #4]
   2bde8:	cmp	r1, fp
   2bdec:	bne	2be1c <GetDataSlab+0xfd18>
   2bdf0:	ldr	r1, [sp, #196]	; 0xc4
   2bdf4:	add	ip, ip, #4
   2bdf8:	add	r4, r4, #4
   2bdfc:	ldr	r3, [sp, #204]	; 0xcc
   2be00:	ldr	r1, [r1, r2, lsl #2]
   2be04:	ldr	r3, [r3, r2, lsl #2]
   2be08:	add	r2, r2, #1
   2be0c:	mul	r9, r3, r9
   2be10:	ldr	r3, [r6]
   2be14:	mla	lr, r1, r3, lr
   2be18:	b	2bcc0 <GetDataSlab+0xfbbc>
   2be1c:	str	r1, [sp, #16]
   2be20:	ldr	r3, [r1, #-4]!
   2be24:	ldr	r0, [r4, #4]
   2be28:	mul	r3, r3, r0
   2be2c:	ldr	r0, [ip, #4]
   2be30:	str	r3, [r4, #4]
   2be34:	ldr	r3, [sp, #16]
   2be38:	ldr	r3, [r3]
   2be3c:	mul	r3, r3, r0
   2be40:	str	r3, [ip, #4]
   2be44:	b	2bde8 <GetDataSlab+0xfce4>
   2be48:	ldrsb	r0, [ip, r2]
   2be4c:	add	r2, r2, #1
   2be50:	strh	r0, [r1], #2
   2be54:	b	2be98 <GetDataSlab+0xfd94>
   2be58:	add	r3, sp, #152	; 0x98
   2be5c:	add	r3, r3, r0, lsl #2
   2be60:	ldr	r3, [r3, #-120]	; 0xffffff88
   2be64:	add	lr, lr, r3
   2be68:	add	ip, ip, r3
   2be6c:	add	r6, r6, r7
   2be70:	cmp	r6, r9
   2be74:	bge	1c230 <GetDataSlab+0x12c>
   2be78:	ldr	r2, [sp]
   2be7c:	ldr	r3, [sp, #196]	; 0xc4
   2be80:	add	r1, r2, r6, lsl #1
   2be84:	mov	r2, #0
   2be88:	ldr	r3, [r3]
   2be8c:	cmp	r3, #0
   2be90:	addne	ip, ip, r3
   2be94:	addne	lr, lr, r3
   2be98:	cmp	r2, r7
   2be9c:	blt	2be48 <GetDataSlab+0xfd44>
   2bea0:	ldr	r2, [sp, #8]
   2bea4:	add	r5, sp, #72	; 0x48
   2bea8:	mov	r0, #1
   2beac:	ldr	r4, [sp, #12]
   2beb0:	sub	r3, r2, r3
   2beb4:	add	lr, lr, r3
   2beb8:	add	ip, ip, r3
   2bebc:	ldr	r3, [sp, #208]	; 0xd0
   2bec0:	cmp	r0, r3
   2bec4:	bge	2be6c <GetDataSlab+0xfd68>
   2bec8:	ldr	r3, [r5, #4]
   2becc:	add	r2, r3, #1
   2bed0:	ldr	r3, [sp, #204]	; 0xcc
   2bed4:	str	r2, [r5, #4]
   2bed8:	ldr	r1, [r3, r0, lsl #2]
   2bedc:	sdiv	r3, r2, r1
   2bee0:	mls	r3, r1, r3, r2
   2bee4:	cmp	r3, #0
   2bee8:	bne	2be58 <GetDataSlab+0xfd54>
   2beec:	ldr	r2, [r4, #4]
   2bef0:	str	r3, [r5, #4]
   2bef4:	ldr	r1, [sp, #196]	; 0xc4
   2bef8:	sdiv	r3, lr, r2
   2befc:	ldr	r1, [r1, r0, lsl #2]
   2bf00:	mls	r3, r2, r3, lr
   2bf04:	cmp	r3, #0
   2bf08:	ldrne	r8, [r4]
   2bf0c:	subne	r3, r2, r3
   2bf10:	mlane	r3, r1, r8, r3
   2bf14:	bne	2bf28 <GetDataSlab+0xfe24>
   2bf18:	cmp	r1, #0
   2bf1c:	beq	2bf30 <GetDataSlab+0xfe2c>
   2bf20:	ldr	r3, [r4]
   2bf24:	mul	r3, r3, r1
   2bf28:	add	ip, ip, r3
   2bf2c:	add	lr, lr, r3
   2bf30:	add	r0, r0, #1
   2bf34:	add	r4, r4, #4
   2bf38:	add	r5, r5, #4
   2bf3c:	b	2bebc <GetDataSlab+0xfdb8>
   2bf40:	mov	r6, #0
   2bf44:	b	2be70 <GetDataSlab+0xfd6c>
   2bf48:	ldrsb	r3, [r0], r8
   2bf4c:	add	r2, r2, #1
   2bf50:	strh	r3, [r4], #2
   2bf54:	b	2bd18 <GetDataSlab+0xfc14>
   2bf58:	add	r3, sp, #152	; 0x98
   2bf5c:	add	r3, r3, r4, lsl #2
   2bf60:	ldr	r3, [r3, #-120]	; 0xffffff88
   2bf64:	add	lr, lr, r3
   2bf68:	add	ip, ip, r3
   2bf6c:	add	r6, r6, r7
   2bf70:	b	2bcec <GetDataSlab+0xfbe8>
   2bf74:	ldr	r8, [sl]
   2bf78:	add	r4, sp, #32
   2bf7c:	mov	r5, fp
   2bf80:	mov	lr, #0
   2bf84:	mov	r2, #1
   2bf88:	sub	r3, r8, #1
   2bf8c:	str	r3, [sp, #32]
   2bf90:	ldr	r3, [fp]
   2bf94:	str	r3, [sp, #8]
   2bf98:	str	r3, [sp, #112]	; 0x70
   2bf9c:	ldr	r3, [sp, #204]	; 0xcc
   2bfa0:	ldr	r7, [r3]
   2bfa4:	add	r3, sp, #112	; 0x70
   2bfa8:	mov	ip, r3
   2bfac:	str	r3, [sp, #12]
   2bfb0:	mov	r9, r7
   2bfb4:	ldr	r3, [sp, #208]	; 0xd0
   2bfb8:	cmp	r2, r3
   2bfbc:	blt	2c0c0 <GetDataSlab+0xffbc>
   2bfc0:	ldr	r3, [sp, #4]
   2bfc4:	cmp	r8, #1
   2bfc8:	add	ip, r3, lr
   2bfcc:	beq	2c234 <GetDataSlab+0x10130>
   2bfd0:	bic	r3, r7, r7, asr #31
   2bfd4:	mov	r6, #0
   2bfd8:	mul	fp, r8, r7
   2bfdc:	mul	sl, r8, r3
   2bfe0:	cmp	r6, r9
   2bfe4:	bge	1c230 <GetDataSlab+0x12c>
   2bfe8:	ldr	r3, [sp, #196]	; 0xc4
   2bfec:	mov	r2, #0
   2bff0:	ldr	r1, [r3]
   2bff4:	ldr	r3, [sp]
   2bff8:	cmp	r1, #0
   2bffc:	addne	ip, ip, r1
   2c000:	addne	lr, lr, r1
   2c004:	add	r4, r3, r6, lsl #1
   2c008:	mov	r0, ip
   2c00c:	cmp	r2, r7
   2c010:	blt	2c23c <GetDataSlab+0x10138>
   2c014:	ldr	r3, [sp, #8]
   2c018:	add	r5, sp, #72	; 0x48
   2c01c:	mov	r4, #1
   2c020:	ldr	r0, [sp, #12]
   2c024:	sub	r3, r3, r1
   2c028:	sub	r2, r3, fp
   2c02c:	add	r3, lr, sl
   2c030:	add	lr, r3, r2
   2c034:	add	r3, r2, sl
   2c038:	add	ip, ip, r3
   2c03c:	ldr	r3, [sp, #208]	; 0xd0
   2c040:	cmp	r4, r3
   2c044:	bge	2c260 <GetDataSlab+0x1015c>
   2c048:	ldr	r3, [r5, #4]
   2c04c:	add	r2, r3, #1
   2c050:	ldr	r3, [sp, #204]	; 0xcc
   2c054:	str	r2, [r5, #4]
   2c058:	ldr	r1, [r3, r4, lsl #2]
   2c05c:	sdiv	r3, r2, r1
   2c060:	mls	r3, r1, r3, r2
   2c064:	cmp	r3, #0
   2c068:	bne	2c24c <GetDataSlab+0x10148>
   2c06c:	ldr	r2, [r0, #4]
   2c070:	str	r3, [r5, #4]
   2c074:	ldr	r1, [sp, #196]	; 0xc4
   2c078:	sdiv	r3, lr, r2
   2c07c:	ldr	r1, [r1, r4, lsl #2]
   2c080:	mls	r3, r2, r3, lr
   2c084:	cmp	r3, #0
   2c088:	subne	r3, r2, r3
   2c08c:	ldrne	r2, [r0]
   2c090:	mlane	r3, r1, r2, r3
   2c094:	bne	2c0a8 <GetDataSlab+0xffa4>
   2c098:	cmp	r1, #0
   2c09c:	beq	2c0b0 <GetDataSlab+0xffac>
   2c0a0:	ldr	r3, [r0]
   2c0a4:	mul	r3, r3, r1
   2c0a8:	add	ip, ip, r3
   2c0ac:	add	lr, lr, r3
   2c0b0:	add	r4, r4, #1
   2c0b4:	add	r0, r0, #4
   2c0b8:	add	r5, r5, #4
   2c0bc:	b	2c03c <GetDataSlab+0xff38>
   2c0c0:	ldr	r3, [sl, r2, lsl #2]
   2c0c4:	mov	r6, ip
   2c0c8:	sub	r3, r3, #1
   2c0cc:	str	r3, [r4, #4]
   2c0d0:	ldr	r3, [r5], #4
   2c0d4:	mov	r1, r5
   2c0d8:	str	r3, [ip, #4]
   2c0dc:	cmp	r1, fp
   2c0e0:	bne	2c110 <GetDataSlab+0x1000c>
   2c0e4:	ldr	r1, [sp, #196]	; 0xc4
   2c0e8:	add	ip, ip, #4
   2c0ec:	add	r4, r4, #4
   2c0f0:	ldr	r3, [sp, #204]	; 0xcc
   2c0f4:	ldr	r1, [r1, r2, lsl #2]
   2c0f8:	ldr	r3, [r3, r2, lsl #2]
   2c0fc:	add	r2, r2, #1
   2c100:	mul	r9, r3, r9
   2c104:	ldr	r3, [r6]
   2c108:	mla	lr, r1, r3, lr
   2c10c:	b	2bfb4 <GetDataSlab+0xfeb0>
   2c110:	str	r1, [sp, #16]
   2c114:	ldr	r3, [r1, #-4]!
   2c118:	ldr	r0, [r4, #4]
   2c11c:	mul	r3, r3, r0
   2c120:	ldr	r0, [ip, #4]
   2c124:	str	r3, [r4, #4]
   2c128:	ldr	r3, [sp, #16]
   2c12c:	ldr	r3, [r3]
   2c130:	mul	r3, r3, r0
   2c134:	str	r3, [ip, #4]
   2c138:	b	2c0dc <GetDataSlab+0xffd8>
   2c13c:	ldrb	r0, [ip, r2]
   2c140:	add	r2, r2, #1
   2c144:	strh	r0, [r1], #2
   2c148:	b	2c18c <GetDataSlab+0x10088>
   2c14c:	add	r3, sp, #152	; 0x98
   2c150:	add	r3, r3, r0, lsl #2
   2c154:	ldr	r3, [r3, #-120]	; 0xffffff88
   2c158:	add	lr, lr, r3
   2c15c:	add	ip, ip, r3
   2c160:	add	r6, r6, r7
   2c164:	cmp	r6, r9
   2c168:	bge	1c230 <GetDataSlab+0x12c>
   2c16c:	ldr	r2, [sp]
   2c170:	ldr	r3, [sp, #196]	; 0xc4
   2c174:	add	r1, r2, r6, lsl #1
   2c178:	mov	r2, #0
   2c17c:	ldr	r3, [r3]
   2c180:	cmp	r3, #0
   2c184:	addne	ip, ip, r3
   2c188:	addne	lr, lr, r3
   2c18c:	cmp	r2, r7
   2c190:	blt	2c13c <GetDataSlab+0x10038>
   2c194:	ldr	r2, [sp, #8]
   2c198:	add	r5, sp, #72	; 0x48
   2c19c:	mov	r0, #1
   2c1a0:	ldr	r4, [sp, #12]
   2c1a4:	sub	r3, r2, r3
   2c1a8:	add	lr, lr, r3
   2c1ac:	add	ip, ip, r3
   2c1b0:	ldr	r3, [sp, #208]	; 0xd0
   2c1b4:	cmp	r0, r3
   2c1b8:	bge	2c160 <GetDataSlab+0x1005c>
   2c1bc:	ldr	r3, [r5, #4]
   2c1c0:	add	r2, r3, #1
   2c1c4:	ldr	r3, [sp, #204]	; 0xcc
   2c1c8:	str	r2, [r5, #4]
   2c1cc:	ldr	r1, [r3, r0, lsl #2]
   2c1d0:	sdiv	r3, r2, r1
   2c1d4:	mls	r3, r1, r3, r2
   2c1d8:	cmp	r3, #0
   2c1dc:	bne	2c14c <GetDataSlab+0x10048>
   2c1e0:	ldr	r2, [r4, #4]
   2c1e4:	str	r3, [r5, #4]
   2c1e8:	ldr	r1, [sp, #196]	; 0xc4
   2c1ec:	sdiv	r3, lr, r2
   2c1f0:	ldr	r1, [r1, r0, lsl #2]
   2c1f4:	mls	r3, r2, r3, lr
   2c1f8:	cmp	r3, #0
   2c1fc:	ldrne	r8, [r4]
   2c200:	subne	r3, r2, r3
   2c204:	mlane	r3, r1, r8, r3
   2c208:	bne	2c21c <GetDataSlab+0x10118>
   2c20c:	cmp	r1, #0
   2c210:	beq	2c224 <GetDataSlab+0x10120>
   2c214:	ldr	r3, [r4]
   2c218:	mul	r3, r3, r1
   2c21c:	add	ip, ip, r3
   2c220:	add	lr, lr, r3
   2c224:	add	r0, r0, #1
   2c228:	add	r4, r4, #4
   2c22c:	add	r5, r5, #4
   2c230:	b	2c1b0 <GetDataSlab+0x100ac>
   2c234:	mov	r6, #0
   2c238:	b	2c164 <GetDataSlab+0x10060>
   2c23c:	ldrb	r3, [r0], r8
   2c240:	add	r2, r2, #1
   2c244:	strh	r3, [r4], #2
   2c248:	b	2c00c <GetDataSlab+0xff08>
   2c24c:	add	r3, sp, #152	; 0x98
   2c250:	add	r3, r3, r4, lsl #2
   2c254:	ldr	r3, [r3, #-120]	; 0xffffff88
   2c258:	add	lr, lr, r3
   2c25c:	add	ip, ip, r3
   2c260:	add	r6, r6, r7
   2c264:	b	2bfe0 <GetDataSlab+0xfedc>
   2c268:	cmp	r5, #12
   2c26c:	bne	2c578 <GetDataSlab+0x10474>
   2c270:	ldr	r5, [sl]
   2c274:	add	lr, sp, #32
   2c278:	mov	r6, fp
   2c27c:	mov	r4, #0
   2c280:	mov	r2, #1
   2c284:	sub	r3, r5, #1
   2c288:	str	r3, [sp, #32]
   2c28c:	ldr	r3, [fp]
   2c290:	str	r3, [sp, #8]
   2c294:	str	r3, [sp, #112]	; 0x70
   2c298:	ldr	r3, [sp, #204]	; 0xcc
   2c29c:	ldr	r7, [r3]
   2c2a0:	add	r3, sp, #112	; 0x70
   2c2a4:	mov	ip, r3
   2c2a8:	str	r3, [sp, #12]
   2c2ac:	mov	r9, r7
   2c2b0:	ldr	r3, [sp, #208]	; 0xd0
   2c2b4:	cmp	r2, r3
   2c2b8:	blt	2c3cc <GetDataSlab+0x102c8>
   2c2bc:	ldr	r3, [sp, #4]
   2c2c0:	cmp	r5, #1
   2c2c4:	add	r0, r3, r4, lsl #3
   2c2c8:	beq	2c544 <GetDataSlab+0x10440>
   2c2cc:	bic	r3, r7, r7, asr #31
   2c2d0:	mov	r6, #0
   2c2d4:	lsl	r8, r5, #3
   2c2d8:	mul	sl, r5, r7
   2c2dc:	mul	r2, r5, r3
   2c2e0:	mul	fp, r8, r3
   2c2e4:	str	r2, [sp, #4]
   2c2e8:	cmp	r6, r9
   2c2ec:	bge	1c230 <GetDataSlab+0x12c>
   2c2f0:	ldr	r3, [sp, #196]	; 0xc4
   2c2f4:	mov	r2, #0
   2c2f8:	ldr	r1, [r3]
   2c2fc:	ldr	r3, [sp]
   2c300:	cmp	r1, #0
   2c304:	addne	r0, r0, r1, lsl #3
   2c308:	addne	r4, r4, r1
   2c30c:	add	lr, r3, r6, lsl #1
   2c310:	mov	ip, r0
   2c314:	cmp	r2, r7
   2c318:	blt	2c54c <GetDataSlab+0x10448>
   2c31c:	ldr	r3, [sp, #8]
   2c320:	add	r5, sp, #72	; 0x48
   2c324:	mov	lr, #1
   2c328:	ldr	ip, [sp, #12]
   2c32c:	sub	r3, r3, r1
   2c330:	sub	r2, r3, sl
   2c334:	ldr	r3, [sp, #4]
   2c338:	add	r3, r4, r3
   2c33c:	add	r4, r3, r2
   2c340:	add	r3, fp, r2, lsl #3
   2c344:	add	r0, r0, r3
   2c348:	ldr	r3, [sp, #208]	; 0xd0
   2c34c:	cmp	lr, r3
   2c350:	bge	2c570 <GetDataSlab+0x1046c>
   2c354:	ldr	r3, [r5, #4]
   2c358:	add	r2, r3, #1
   2c35c:	ldr	r3, [sp, #204]	; 0xcc
   2c360:	str	r2, [r5, #4]
   2c364:	ldr	r1, [r3, lr, lsl #2]
   2c368:	sdiv	r3, r2, r1
   2c36c:	mls	r3, r1, r3, r2
   2c370:	cmp	r3, #0
   2c374:	bne	2c55c <GetDataSlab+0x10458>
   2c378:	ldr	r2, [ip, #4]
   2c37c:	str	r3, [r5, #4]
   2c380:	ldr	r1, [sp, #196]	; 0xc4
   2c384:	sdiv	r3, r4, r2
   2c388:	ldr	r1, [r1, lr, lsl #2]
   2c38c:	mls	r3, r2, r3, r4
   2c390:	cmp	r3, #0
   2c394:	subne	r3, r2, r3
   2c398:	ldrne	r2, [ip]
   2c39c:	mlane	r3, r1, r2, r3
   2c3a0:	bne	2c3b4 <GetDataSlab+0x102b0>
   2c3a4:	cmp	r1, #0
   2c3a8:	beq	2c3bc <GetDataSlab+0x102b8>
   2c3ac:	ldr	r3, [ip]
   2c3b0:	mul	r3, r3, r1
   2c3b4:	add	r0, r0, r3, lsl #3
   2c3b8:	add	r4, r4, r3
   2c3bc:	add	lr, lr, #1
   2c3c0:	add	ip, ip, #4
   2c3c4:	add	r5, r5, #4
   2c3c8:	b	2c348 <GetDataSlab+0x10244>
   2c3cc:	ldr	r3, [sl, r2, lsl #2]
   2c3d0:	mov	r8, ip
   2c3d4:	sub	r3, r3, #1
   2c3d8:	str	r3, [lr, #4]
   2c3dc:	ldr	r3, [r6], #4
   2c3e0:	mov	r1, r6
   2c3e4:	str	r3, [ip, #4]
   2c3e8:	cmp	r1, fp
   2c3ec:	bne	2c41c <GetDataSlab+0x10318>
   2c3f0:	ldr	r1, [sp, #196]	; 0xc4
   2c3f4:	add	ip, ip, #4
   2c3f8:	add	lr, lr, #4
   2c3fc:	ldr	r3, [sp, #204]	; 0xcc
   2c400:	ldr	r1, [r1, r2, lsl #2]
   2c404:	ldr	r3, [r3, r2, lsl #2]
   2c408:	add	r2, r2, #1
   2c40c:	mul	r9, r3, r9
   2c410:	ldr	r3, [r8]
   2c414:	mla	r4, r1, r3, r4
   2c418:	b	2c2b0 <GetDataSlab+0x101ac>
   2c41c:	str	r1, [sp, #16]
   2c420:	ldr	r3, [r1, #-4]!
   2c424:	ldr	r0, [lr, #4]
   2c428:	mul	r3, r3, r0
   2c42c:	ldr	r0, [ip, #4]
   2c430:	str	r3, [lr, #4]
   2c434:	ldr	r3, [sp, #16]
   2c438:	ldr	r3, [r3]
   2c43c:	mul	r3, r3, r0
   2c440:	str	r3, [ip, #4]
   2c444:	b	2c3e8 <GetDataSlab+0x102e4>
   2c448:	ldr	r3, [ip, #8]!
   2c44c:	add	r1, r1, #1
   2c450:	strh	r3, [lr], #2
   2c454:	b	2c49c <GetDataSlab+0x10398>
   2c458:	add	r3, sp, #152	; 0x98
   2c45c:	add	r3, r3, ip, lsl #2
   2c460:	ldr	r3, [r3, #-120]	; 0xffffff88
   2c464:	add	r0, r0, r3, lsl #3
   2c468:	add	r4, r4, r3
   2c46c:	add	r6, r6, r7
   2c470:	cmp	r6, r9
   2c474:	bge	1c230 <GetDataSlab+0x12c>
   2c478:	ldr	r3, [sp, #196]	; 0xc4
   2c47c:	mov	r1, #0
   2c480:	ldr	r2, [r3]
   2c484:	ldr	r3, [sp]
   2c488:	cmp	r2, #0
   2c48c:	addne	r0, r0, r2, lsl #3
   2c490:	addne	r4, r4, r2
   2c494:	add	lr, r3, r6, lsl #1
   2c498:	sub	ip, r0, #8
   2c49c:	cmp	r1, r7
   2c4a0:	blt	2c448 <GetDataSlab+0x10344>
   2c4a4:	ldr	r3, [sp, #8]
   2c4a8:	add	r5, sp, #72	; 0x48
   2c4ac:	mov	ip, #1
   2c4b0:	ldr	lr, [sp, #12]
   2c4b4:	sub	r3, r3, r2
   2c4b8:	add	r0, r0, r3, lsl #3
   2c4bc:	add	r4, r4, r3
   2c4c0:	ldr	r3, [sp, #208]	; 0xd0
   2c4c4:	cmp	ip, r3
   2c4c8:	bge	2c46c <GetDataSlab+0x10368>
   2c4cc:	ldr	r3, [r5, #4]
   2c4d0:	add	r2, r3, #1
   2c4d4:	ldr	r3, [sp, #204]	; 0xcc
   2c4d8:	str	r2, [r5, #4]
   2c4dc:	ldr	r1, [r3, ip, lsl #2]
   2c4e0:	sdiv	r3, r2, r1
   2c4e4:	mls	r3, r1, r3, r2
   2c4e8:	cmp	r3, #0
   2c4ec:	bne	2c458 <GetDataSlab+0x10354>
   2c4f0:	ldr	r2, [lr, #4]
   2c4f4:	str	r3, [r5, #4]
   2c4f8:	ldr	r1, [sp, #196]	; 0xc4
   2c4fc:	sdiv	r3, r4, r2
   2c500:	ldr	r1, [r1, ip, lsl #2]
   2c504:	mls	r3, r2, r3, r4
   2c508:	cmp	r3, #0
   2c50c:	ldrne	r8, [lr]
   2c510:	subne	r3, r2, r3
   2c514:	mlane	r3, r1, r8, r3
   2c518:	bne	2c52c <GetDataSlab+0x10428>
   2c51c:	cmp	r1, #0
   2c520:	beq	2c534 <GetDataSlab+0x10430>
   2c524:	ldr	r3, [lr]
   2c528:	mul	r3, r3, r1
   2c52c:	add	r0, r0, r3, lsl #3
   2c530:	add	r4, r4, r3
   2c534:	add	ip, ip, #1
   2c538:	add	lr, lr, #4
   2c53c:	add	r5, r5, #4
   2c540:	b	2c4c0 <GetDataSlab+0x103bc>
   2c544:	mov	r6, #0
   2c548:	b	2c470 <GetDataSlab+0x1036c>
   2c54c:	ldr	r3, [ip], r8
   2c550:	add	r2, r2, #1
   2c554:	strh	r3, [lr], #2
   2c558:	b	2c314 <GetDataSlab+0x10210>
   2c55c:	add	r3, sp, #152	; 0x98
   2c560:	add	r3, r3, lr, lsl #2
   2c564:	ldr	r3, [r3, #-120]	; 0xffffff88
   2c568:	add	r0, r0, r3, lsl #3
   2c56c:	add	r4, r4, r3
   2c570:	add	r6, r6, r7
   2c574:	b	2c2e8 <GetDataSlab+0x101e4>
   2c578:	cmp	r5, #13
   2c57c:	bne	3236c <GetDataSlab+0x16268>
   2c580:	ldr	r5, [sl]
   2c584:	add	lr, sp, #32
   2c588:	mov	r6, fp
   2c58c:	mov	r4, #0
   2c590:	mov	r2, #1
   2c594:	sub	r3, r5, #1
   2c598:	str	r3, [sp, #32]
   2c59c:	ldr	r3, [fp]
   2c5a0:	str	r3, [sp, #8]
   2c5a4:	str	r3, [sp, #112]	; 0x70
   2c5a8:	ldr	r3, [sp, #204]	; 0xcc
   2c5ac:	ldr	r7, [r3]
   2c5b0:	add	r3, sp, #112	; 0x70
   2c5b4:	mov	ip, r3
   2c5b8:	str	r3, [sp, #12]
   2c5bc:	mov	r9, r7
   2c5c0:	ldr	r3, [sp, #208]	; 0xd0
   2c5c4:	cmp	r2, r3
   2c5c8:	blt	2c6dc <GetDataSlab+0x105d8>
   2c5cc:	ldr	r3, [sp, #4]
   2c5d0:	cmp	r5, #1
   2c5d4:	add	r0, r3, r4, lsl #3
   2c5d8:	beq	2c854 <GetDataSlab+0x10750>
   2c5dc:	bic	r3, r7, r7, asr #31
   2c5e0:	mov	r6, #0
   2c5e4:	lsl	r8, r5, #3
   2c5e8:	mul	sl, r5, r7
   2c5ec:	mul	fp, r3, r5
   2c5f0:	mul	r3, r8, r3
   2c5f4:	str	r3, [sp, #4]
   2c5f8:	cmp	r6, r9
   2c5fc:	bge	1c230 <GetDataSlab+0x12c>
   2c600:	ldr	r3, [sp, #196]	; 0xc4
   2c604:	mov	r2, #0
   2c608:	ldr	r1, [r3]
   2c60c:	ldr	r3, [sp]
   2c610:	cmp	r1, #0
   2c614:	addne	r0, r0, r1, lsl #3
   2c618:	addne	r4, r4, r1
   2c61c:	add	lr, r3, r6, lsl #1
   2c620:	mov	ip, r0
   2c624:	cmp	r2, r7
   2c628:	blt	2c85c <GetDataSlab+0x10758>
   2c62c:	ldr	r3, [sp, #8]
   2c630:	add	r5, sp, #72	; 0x48
   2c634:	mov	lr, #1
   2c638:	ldr	ip, [sp, #12]
   2c63c:	sub	r3, r3, r1
   2c640:	sub	r2, r3, sl
   2c644:	add	r3, r4, fp
   2c648:	add	r4, r3, r2
   2c64c:	ldr	r3, [sp, #4]
   2c650:	add	r3, r3, r2, lsl #3
   2c654:	add	r0, r0, r3
   2c658:	ldr	r3, [sp, #208]	; 0xd0
   2c65c:	cmp	lr, r3
   2c660:	bge	2c880 <GetDataSlab+0x1077c>
   2c664:	ldr	r3, [r5, #4]
   2c668:	add	r2, r3, #1
   2c66c:	ldr	r3, [sp, #204]	; 0xcc
   2c670:	str	r2, [r5, #4]
   2c674:	ldr	r1, [r3, lr, lsl #2]
   2c678:	sdiv	r3, r2, r1
   2c67c:	mls	r3, r1, r3, r2
   2c680:	cmp	r3, #0
   2c684:	bne	2c86c <GetDataSlab+0x10768>
   2c688:	ldr	r2, [ip, #4]
   2c68c:	str	r3, [r5, #4]
   2c690:	ldr	r1, [sp, #196]	; 0xc4
   2c694:	sdiv	r3, r4, r2
   2c698:	ldr	r1, [r1, lr, lsl #2]
   2c69c:	mls	r3, r2, r3, r4
   2c6a0:	cmp	r3, #0
   2c6a4:	subne	r3, r2, r3
   2c6a8:	ldrne	r2, [ip]
   2c6ac:	mlane	r3, r1, r2, r3
   2c6b0:	bne	2c6c4 <GetDataSlab+0x105c0>
   2c6b4:	cmp	r1, #0
   2c6b8:	beq	2c6cc <GetDataSlab+0x105c8>
   2c6bc:	ldr	r3, [ip]
   2c6c0:	mul	r3, r3, r1
   2c6c4:	add	r0, r0, r3, lsl #3
   2c6c8:	add	r4, r4, r3
   2c6cc:	add	lr, lr, #1
   2c6d0:	add	ip, ip, #4
   2c6d4:	add	r5, r5, #4
   2c6d8:	b	2c658 <GetDataSlab+0x10554>
   2c6dc:	ldr	r3, [sl, r2, lsl #2]
   2c6e0:	mov	r8, ip
   2c6e4:	sub	r3, r3, #1
   2c6e8:	str	r3, [lr, #4]
   2c6ec:	ldr	r3, [r6], #4
   2c6f0:	mov	r1, r6
   2c6f4:	str	r3, [ip, #4]
   2c6f8:	cmp	r1, fp
   2c6fc:	bne	2c72c <GetDataSlab+0x10628>
   2c700:	ldr	r1, [sp, #196]	; 0xc4
   2c704:	add	ip, ip, #4
   2c708:	add	lr, lr, #4
   2c70c:	ldr	r3, [sp, #204]	; 0xcc
   2c710:	ldr	r1, [r1, r2, lsl #2]
   2c714:	ldr	r3, [r3, r2, lsl #2]
   2c718:	add	r2, r2, #1
   2c71c:	mul	r9, r3, r9
   2c720:	ldr	r3, [r8]
   2c724:	mla	r4, r1, r3, r4
   2c728:	b	2c5c0 <GetDataSlab+0x104bc>
   2c72c:	str	r1, [sp, #16]
   2c730:	ldr	r3, [r1, #-4]!
   2c734:	ldr	r0, [lr, #4]
   2c738:	mul	r3, r3, r0
   2c73c:	ldr	r0, [ip, #4]
   2c740:	str	r3, [lr, #4]
   2c744:	ldr	r3, [sp, #16]
   2c748:	ldr	r3, [r3]
   2c74c:	mul	r3, r3, r0
   2c750:	str	r3, [ip, #4]
   2c754:	b	2c6f8 <GetDataSlab+0x105f4>
   2c758:	ldr	r3, [ip, #8]!
   2c75c:	add	r1, r1, #1
   2c760:	strh	r3, [lr], #2
   2c764:	b	2c7ac <GetDataSlab+0x106a8>
   2c768:	add	r3, sp, #152	; 0x98
   2c76c:	add	r3, r3, ip, lsl #2
   2c770:	ldr	r3, [r3, #-120]	; 0xffffff88
   2c774:	add	r0, r0, r3, lsl #3
   2c778:	add	r4, r4, r3
   2c77c:	add	r6, r6, r7
   2c780:	cmp	r6, r9
   2c784:	bge	1c230 <GetDataSlab+0x12c>
   2c788:	ldr	r3, [sp, #196]	; 0xc4
   2c78c:	mov	r1, #0
   2c790:	ldr	r2, [r3]
   2c794:	ldr	r3, [sp]
   2c798:	cmp	r2, #0
   2c79c:	addne	r0, r0, r2, lsl #3
   2c7a0:	addne	r4, r4, r2
   2c7a4:	add	lr, r3, r6, lsl #1
   2c7a8:	sub	ip, r0, #8
   2c7ac:	cmp	r1, r7
   2c7b0:	blt	2c758 <GetDataSlab+0x10654>
   2c7b4:	ldr	r3, [sp, #8]
   2c7b8:	add	r5, sp, #72	; 0x48
   2c7bc:	mov	ip, #1
   2c7c0:	ldr	lr, [sp, #12]
   2c7c4:	sub	r3, r3, r2
   2c7c8:	add	r0, r0, r3, lsl #3
   2c7cc:	add	r4, r4, r3
   2c7d0:	ldr	r3, [sp, #208]	; 0xd0
   2c7d4:	cmp	ip, r3
   2c7d8:	bge	2c77c <GetDataSlab+0x10678>
   2c7dc:	ldr	r3, [r5, #4]
   2c7e0:	add	r2, r3, #1
   2c7e4:	ldr	r3, [sp, #204]	; 0xcc
   2c7e8:	str	r2, [r5, #4]
   2c7ec:	ldr	r1, [r3, ip, lsl #2]
   2c7f0:	sdiv	r3, r2, r1
   2c7f4:	mls	r3, r1, r3, r2
   2c7f8:	cmp	r3, #0
   2c7fc:	bne	2c768 <GetDataSlab+0x10664>
   2c800:	ldr	r2, [lr, #4]
   2c804:	str	r3, [r5, #4]
   2c808:	ldr	r1, [sp, #196]	; 0xc4
   2c80c:	sdiv	r3, r4, r2
   2c810:	ldr	r1, [r1, ip, lsl #2]
   2c814:	mls	r3, r2, r3, r4
   2c818:	cmp	r3, #0
   2c81c:	ldrne	r8, [lr]
   2c820:	subne	r3, r2, r3
   2c824:	mlane	r3, r1, r8, r3
   2c828:	bne	2c83c <GetDataSlab+0x10738>
   2c82c:	cmp	r1, #0
   2c830:	beq	2c844 <GetDataSlab+0x10740>
   2c834:	ldr	r3, [lr]
   2c838:	mul	r3, r3, r1
   2c83c:	add	r0, r0, r3, lsl #3
   2c840:	add	r4, r4, r3
   2c844:	add	ip, ip, #1
   2c848:	add	lr, lr, #4
   2c84c:	add	r5, r5, #4
   2c850:	b	2c7d0 <GetDataSlab+0x106cc>
   2c854:	mov	r6, #0
   2c858:	b	2c780 <GetDataSlab+0x1067c>
   2c85c:	ldr	r3, [ip], r8
   2c860:	add	r2, r2, #1
   2c864:	strh	r3, [lr], #2
   2c868:	b	2c624 <GetDataSlab+0x10520>
   2c86c:	add	r3, sp, #152	; 0x98
   2c870:	add	r3, r3, lr, lsl #2
   2c874:	ldr	r3, [r3, #-120]	; 0xffffff88
   2c878:	add	r0, r0, r3, lsl #3
   2c87c:	add	r4, r4, r3
   2c880:	add	r6, r6, r7
   2c884:	b	2c5f8 <GetDataSlab+0x104f4>
   2c888:	sub	r3, r5, #1
   2c88c:	cmp	r3, #8
   2c890:	addls	pc, pc, r3, lsl #2
   2c894:	b	2e0f4 <GetDataSlab+0x11ff0>
   2c898:	b	2db0c <GetDataSlab+0x11a08>
   2c89c:	b	2de00 <GetDataSlab+0x11cfc>
   2c8a0:	b	2d4fc <GetDataSlab+0x113f8>
   2c8a4:	b	2d804 <GetDataSlab+0x11700>
   2c8a8:	b	2cef4 <GetDataSlab+0x10df0>
   2c8ac:	b	2d1f8 <GetDataSlab+0x110f4>
   2c8b0:	b	2cbd8 <GetDataSlab+0x10ad4>
   2c8b4:	b	2e0f4 <GetDataSlab+0x11ff0>
   2c8b8:	b	2c8bc <GetDataSlab+0x107b8>
   2c8bc:	ldr	r5, [sl]
   2c8c0:	add	lr, sp, #32
   2c8c4:	mov	r6, fp
   2c8c8:	mov	r4, #0
   2c8cc:	mov	r2, #1
   2c8d0:	sub	r3, r5, #1
   2c8d4:	str	r3, [sp, #32]
   2c8d8:	ldr	r3, [fp]
   2c8dc:	str	r3, [sp, #8]
   2c8e0:	str	r3, [sp, #112]	; 0x70
   2c8e4:	ldr	r3, [sp, #204]	; 0xcc
   2c8e8:	ldr	r7, [r3]
   2c8ec:	add	r3, sp, #112	; 0x70
   2c8f0:	mov	ip, r3
   2c8f4:	str	r3, [sp, #12]
   2c8f8:	mov	r9, r7
   2c8fc:	ldr	r3, [sp, #208]	; 0xd0
   2c900:	cmp	r2, r3
   2c904:	blt	2ca18 <GetDataSlab+0x10914>
   2c908:	ldr	r3, [sp, #4]
   2c90c:	cmp	r5, #1
   2c910:	add	r0, r3, r4, lsl #3
   2c914:	beq	2cb98 <GetDataSlab+0x10a94>
   2c918:	bic	r3, r7, r7, asr #31
   2c91c:	mov	r6, #0
   2c920:	lsl	r8, r5, #3
   2c924:	mul	sl, r5, r7
   2c928:	mul	fp, r5, r3
   2c92c:	mul	r3, r8, r3
   2c930:	str	r3, [sp, #4]
   2c934:	cmp	r6, r9
   2c938:	bge	1c230 <GetDataSlab+0x12c>
   2c93c:	ldr	r3, [sp, #196]	; 0xc4
   2c940:	mov	r2, #0
   2c944:	ldr	ip, [r3]
   2c948:	ldr	r3, [sp]
   2c94c:	cmp	ip, #0
   2c950:	addne	r0, r0, ip, lsl #3
   2c954:	addne	r4, r4, ip
   2c958:	add	lr, r3, r6, lsl #1
   2c95c:	mov	r3, r0
   2c960:	cmp	r2, r7
   2c964:	blt	2cba0 <GetDataSlab+0x10a9c>
   2c968:	ldr	r3, [sp, #8]
   2c96c:	add	r5, sp, #72	; 0x48
   2c970:	mov	lr, #1
   2c974:	sub	r3, r3, ip
   2c978:	ldr	ip, [sp, #12]
   2c97c:	sub	r2, r3, sl
   2c980:	add	r3, r4, fp
   2c984:	add	r4, r3, r2
   2c988:	ldr	r3, [sp, #4]
   2c98c:	add	r3, r3, r2, lsl #3
   2c990:	add	r0, r0, r3
   2c994:	ldr	r3, [sp, #208]	; 0xd0
   2c998:	cmp	lr, r3
   2c99c:	bge	2cbd0 <GetDataSlab+0x10acc>
   2c9a0:	ldr	r3, [r5, #4]
   2c9a4:	add	r2, r3, #1
   2c9a8:	ldr	r3, [sp, #204]	; 0xcc
   2c9ac:	str	r2, [r5, #4]
   2c9b0:	ldr	r1, [r3, lr, lsl #2]
   2c9b4:	sdiv	r3, r2, r1
   2c9b8:	mls	r3, r1, r3, r2
   2c9bc:	cmp	r3, #0
   2c9c0:	bne	2cbbc <GetDataSlab+0x10ab8>
   2c9c4:	ldr	r2, [ip, #4]
   2c9c8:	str	r3, [r5, #4]
   2c9cc:	ldr	r1, [sp, #196]	; 0xc4
   2c9d0:	sdiv	r3, r4, r2
   2c9d4:	ldr	r1, [r1, lr, lsl #2]
   2c9d8:	mls	r3, r2, r3, r4
   2c9dc:	cmp	r3, #0
   2c9e0:	subne	r3, r2, r3
   2c9e4:	ldrne	r2, [ip]
   2c9e8:	mlane	r3, r1, r2, r3
   2c9ec:	bne	2ca00 <GetDataSlab+0x108fc>
   2c9f0:	cmp	r1, #0
   2c9f4:	beq	2ca08 <GetDataSlab+0x10904>
   2c9f8:	ldr	r3, [ip]
   2c9fc:	mul	r3, r3, r1
   2ca00:	add	r0, r0, r3, lsl #3
   2ca04:	add	r4, r4, r3
   2ca08:	add	lr, lr, #1
   2ca0c:	add	ip, ip, #4
   2ca10:	add	r5, r5, #4
   2ca14:	b	2c994 <GetDataSlab+0x10890>
   2ca18:	ldr	r3, [sl, r2, lsl #2]
   2ca1c:	mov	r8, ip
   2ca20:	sub	r3, r3, #1
   2ca24:	str	r3, [lr, #4]
   2ca28:	ldr	r3, [r6], #4
   2ca2c:	mov	r1, r6
   2ca30:	str	r3, [ip, #4]
   2ca34:	cmp	r1, fp
   2ca38:	bne	2ca68 <GetDataSlab+0x10964>
   2ca3c:	ldr	r1, [sp, #196]	; 0xc4
   2ca40:	add	ip, ip, #4
   2ca44:	add	lr, lr, #4
   2ca48:	ldr	r3, [sp, #204]	; 0xcc
   2ca4c:	ldr	r1, [r1, r2, lsl #2]
   2ca50:	ldr	r3, [r3, r2, lsl #2]
   2ca54:	add	r2, r2, #1
   2ca58:	mul	r9, r3, r9
   2ca5c:	ldr	r3, [r8]
   2ca60:	mla	r4, r1, r3, r4
   2ca64:	b	2c8fc <GetDataSlab+0x107f8>
   2ca68:	str	r1, [sp, #16]
   2ca6c:	ldr	r3, [r1, #-4]!
   2ca70:	ldr	r0, [lr, #4]
   2ca74:	mul	r3, r3, r0
   2ca78:	ldr	r0, [ip, #4]
   2ca7c:	str	r3, [lr, #4]
   2ca80:	ldr	r3, [sp, #16]
   2ca84:	ldr	r3, [r3]
   2ca88:	mul	r3, r3, r0
   2ca8c:	str	r3, [ip, #4]
   2ca90:	b	2ca34 <GetDataSlab+0x10930>
   2ca94:	vldmia	ip!, {d7}
   2ca98:	add	r2, r2, #1
   2ca9c:	vcvt.u32.f64	s15, d7
   2caa0:	vmov	r1, s15
   2caa4:	strh	r1, [lr], #2
   2caa8:	b	2caf0 <GetDataSlab+0x109ec>
   2caac:	add	r3, sp, #152	; 0x98
   2cab0:	add	r3, r3, ip, lsl #2
   2cab4:	ldr	r3, [r3, #-120]	; 0xffffff88
   2cab8:	add	r0, r0, r3, lsl #3
   2cabc:	add	r4, r4, r3
   2cac0:	add	r6, r6, r7
   2cac4:	cmp	r6, r9
   2cac8:	bge	1c230 <GetDataSlab+0x12c>
   2cacc:	ldr	r2, [sp]
   2cad0:	ldr	r3, [sp, #196]	; 0xc4
   2cad4:	add	lr, r2, r6, lsl #1
   2cad8:	mov	r2, #0
   2cadc:	ldr	r3, [r3]
   2cae0:	cmp	r3, #0
   2cae4:	addne	r0, r0, r3, lsl #3
   2cae8:	addne	r4, r4, r3
   2caec:	mov	ip, r0
   2caf0:	cmp	r2, r7
   2caf4:	blt	2ca94 <GetDataSlab+0x10990>
   2caf8:	ldr	r2, [sp, #8]
   2cafc:	add	r5, sp, #72	; 0x48
   2cb00:	mov	ip, #1
   2cb04:	ldr	lr, [sp, #12]
   2cb08:	sub	r3, r2, r3
   2cb0c:	add	r0, r0, r3, lsl #3
   2cb10:	add	r4, r4, r3
   2cb14:	ldr	r3, [sp, #208]	; 0xd0
   2cb18:	cmp	ip, r3
   2cb1c:	bge	2cac0 <GetDataSlab+0x109bc>
   2cb20:	ldr	r3, [r5, #4]
   2cb24:	add	r2, r3, #1
   2cb28:	ldr	r3, [sp, #204]	; 0xcc
   2cb2c:	str	r2, [r5, #4]
   2cb30:	ldr	r1, [r3, ip, lsl #2]
   2cb34:	sdiv	r3, r2, r1
   2cb38:	mls	r3, r1, r3, r2
   2cb3c:	cmp	r3, #0
   2cb40:	bne	2caac <GetDataSlab+0x109a8>
   2cb44:	ldr	r2, [lr, #4]
   2cb48:	str	r3, [r5, #4]
   2cb4c:	ldr	r1, [sp, #196]	; 0xc4
   2cb50:	sdiv	r3, r4, r2
   2cb54:	ldr	r1, [r1, ip, lsl #2]
   2cb58:	mls	r3, r2, r3, r4
   2cb5c:	cmp	r3, #0
   2cb60:	ldrne	r8, [lr]
   2cb64:	subne	r3, r2, r3
   2cb68:	mlane	r3, r1, r8, r3
   2cb6c:	bne	2cb80 <GetDataSlab+0x10a7c>
   2cb70:	cmp	r1, #0
   2cb74:	beq	2cb88 <GetDataSlab+0x10a84>
   2cb78:	ldr	r3, [lr]
   2cb7c:	mul	r3, r3, r1
   2cb80:	add	r0, r0, r3, lsl #3
   2cb84:	add	r4, r4, r3
   2cb88:	add	ip, ip, #1
   2cb8c:	add	lr, lr, #4
   2cb90:	add	r5, r5, #4
   2cb94:	b	2cb14 <GetDataSlab+0x10a10>
   2cb98:	mov	r6, #0
   2cb9c:	b	2cac4 <GetDataSlab+0x109c0>
   2cba0:	vldr	d7, [r3]
   2cba4:	add	r2, r2, #1
   2cba8:	add	r3, r3, r8
   2cbac:	vcvt.u32.f64	s15, d7
   2cbb0:	vmov	r1, s15
   2cbb4:	strh	r1, [lr], #2
   2cbb8:	b	2c960 <GetDataSlab+0x1085c>
   2cbbc:	add	r3, sp, #152	; 0x98
   2cbc0:	add	r3, r3, lr, lsl #2
   2cbc4:	ldr	r3, [r3, #-120]	; 0xffffff88
   2cbc8:	add	r0, r0, r3, lsl #3
   2cbcc:	add	r4, r4, r3
   2cbd0:	add	r6, r6, r7
   2cbd4:	b	2c934 <GetDataSlab+0x10830>
   2cbd8:	ldr	r5, [sl]
   2cbdc:	add	lr, sp, #32
   2cbe0:	mov	r6, fp
   2cbe4:	mov	r4, #0
   2cbe8:	mov	r2, #1
   2cbec:	sub	r3, r5, #1
   2cbf0:	str	r3, [sp, #32]
   2cbf4:	ldr	r3, [fp]
   2cbf8:	str	r3, [sp, #8]
   2cbfc:	str	r3, [sp, #112]	; 0x70
   2cc00:	ldr	r3, [sp, #204]	; 0xcc
   2cc04:	ldr	r7, [r3]
   2cc08:	add	r3, sp, #112	; 0x70
   2cc0c:	mov	ip, r3
   2cc10:	str	r3, [sp, #12]
   2cc14:	mov	r9, r7
   2cc18:	ldr	r3, [sp, #208]	; 0xd0
   2cc1c:	cmp	r2, r3
   2cc20:	blt	2cd34 <GetDataSlab+0x10c30>
   2cc24:	ldr	r3, [sp, #4]
   2cc28:	cmp	r5, #1
   2cc2c:	add	r0, r3, r4, lsl #2
   2cc30:	beq	2ceb4 <GetDataSlab+0x10db0>
   2cc34:	bic	r3, r7, r7, asr #31
   2cc38:	mov	r6, #0
   2cc3c:	lsl	r8, r5, #2
   2cc40:	mul	sl, r5, r7
   2cc44:	mul	fp, r3, r5
   2cc48:	mul	r3, r3, r8
   2cc4c:	str	r3, [sp, #4]
   2cc50:	cmp	r6, r9
   2cc54:	bge	1c230 <GetDataSlab+0x12c>
   2cc58:	ldr	r3, [sp, #196]	; 0xc4
   2cc5c:	mov	r2, #0
   2cc60:	ldr	ip, [r3]
   2cc64:	ldr	r3, [sp]
   2cc68:	cmp	ip, #0
   2cc6c:	addne	r0, r0, ip, lsl #2
   2cc70:	addne	r4, r4, ip
   2cc74:	add	lr, r3, r6, lsl #1
   2cc78:	mov	r3, r0
   2cc7c:	cmp	r2, r7
   2cc80:	blt	2cebc <GetDataSlab+0x10db8>
   2cc84:	ldr	r3, [sp, #8]
   2cc88:	add	r5, sp, #72	; 0x48
   2cc8c:	mov	lr, #1
   2cc90:	sub	r3, r3, ip
   2cc94:	ldr	ip, [sp, #12]
   2cc98:	sub	r2, r3, sl
   2cc9c:	add	r3, r4, fp
   2cca0:	add	r4, r3, r2
   2cca4:	ldr	r3, [sp, #4]
   2cca8:	add	r3, r3, r2, lsl #2
   2ccac:	add	r0, r0, r3
   2ccb0:	ldr	r3, [sp, #208]	; 0xd0
   2ccb4:	cmp	lr, r3
   2ccb8:	bge	2ceec <GetDataSlab+0x10de8>
   2ccbc:	ldr	r3, [r5, #4]
   2ccc0:	add	r2, r3, #1
   2ccc4:	ldr	r3, [sp, #204]	; 0xcc
   2ccc8:	str	r2, [r5, #4]
   2cccc:	ldr	r1, [r3, lr, lsl #2]
   2ccd0:	sdiv	r3, r2, r1
   2ccd4:	mls	r3, r1, r3, r2
   2ccd8:	cmp	r3, #0
   2ccdc:	bne	2ced8 <GetDataSlab+0x10dd4>
   2cce0:	ldr	r2, [ip, #4]
   2cce4:	str	r3, [r5, #4]
   2cce8:	ldr	r1, [sp, #196]	; 0xc4
   2ccec:	sdiv	r3, r4, r2
   2ccf0:	ldr	r1, [r1, lr, lsl #2]
   2ccf4:	mls	r3, r2, r3, r4
   2ccf8:	cmp	r3, #0
   2ccfc:	subne	r3, r2, r3
   2cd00:	ldrne	r2, [ip]
   2cd04:	mlane	r3, r1, r2, r3
   2cd08:	bne	2cd1c <GetDataSlab+0x10c18>
   2cd0c:	cmp	r1, #0
   2cd10:	beq	2cd24 <GetDataSlab+0x10c20>
   2cd14:	ldr	r3, [ip]
   2cd18:	mul	r3, r3, r1
   2cd1c:	add	r0, r0, r3, lsl #2
   2cd20:	add	r4, r4, r3
   2cd24:	add	lr, lr, #1
   2cd28:	add	ip, ip, #4
   2cd2c:	add	r5, r5, #4
   2cd30:	b	2ccb0 <GetDataSlab+0x10bac>
   2cd34:	ldr	r3, [sl, r2, lsl #2]
   2cd38:	mov	r8, ip
   2cd3c:	sub	r3, r3, #1
   2cd40:	str	r3, [lr, #4]
   2cd44:	ldr	r3, [r6], #4
   2cd48:	mov	r1, r6
   2cd4c:	str	r3, [ip, #4]
   2cd50:	cmp	r1, fp
   2cd54:	bne	2cd84 <GetDataSlab+0x10c80>
   2cd58:	ldr	r1, [sp, #196]	; 0xc4
   2cd5c:	add	ip, ip, #4
   2cd60:	add	lr, lr, #4
   2cd64:	ldr	r3, [sp, #204]	; 0xcc
   2cd68:	ldr	r1, [r1, r2, lsl #2]
   2cd6c:	ldr	r3, [r3, r2, lsl #2]
   2cd70:	add	r2, r2, #1
   2cd74:	mul	r9, r3, r9
   2cd78:	ldr	r3, [r8]
   2cd7c:	mla	r4, r1, r3, r4
   2cd80:	b	2cc18 <GetDataSlab+0x10b14>
   2cd84:	str	r1, [sp, #16]
   2cd88:	ldr	r3, [r1, #-4]!
   2cd8c:	ldr	r0, [lr, #4]
   2cd90:	mul	r3, r3, r0
   2cd94:	ldr	r0, [ip, #4]
   2cd98:	str	r3, [lr, #4]
   2cd9c:	ldr	r3, [sp, #16]
   2cda0:	ldr	r3, [r3]
   2cda4:	mul	r3, r3, r0
   2cda8:	str	r3, [ip, #4]
   2cdac:	b	2cd50 <GetDataSlab+0x10c4c>
   2cdb0:	vldmia	ip!, {s15}
   2cdb4:	add	r2, r2, #1
   2cdb8:	vcvt.u32.f32	s15, s15
   2cdbc:	vmov	r1, s15
   2cdc0:	strh	r1, [lr], #2
   2cdc4:	b	2ce0c <GetDataSlab+0x10d08>
   2cdc8:	add	r3, sp, #152	; 0x98
   2cdcc:	add	r3, r3, ip, lsl #2
   2cdd0:	ldr	r3, [r3, #-120]	; 0xffffff88
   2cdd4:	add	r0, r0, r3, lsl #2
   2cdd8:	add	r4, r4, r3
   2cddc:	add	r6, r6, r7
   2cde0:	cmp	r6, r9
   2cde4:	bge	1c230 <GetDataSlab+0x12c>
   2cde8:	ldr	r2, [sp]
   2cdec:	ldr	r3, [sp, #196]	; 0xc4
   2cdf0:	add	lr, r2, r6, lsl #1
   2cdf4:	mov	r2, #0
   2cdf8:	ldr	r3, [r3]
   2cdfc:	cmp	r3, #0
   2ce00:	addne	r0, r0, r3, lsl #2
   2ce04:	addne	r4, r4, r3
   2ce08:	mov	ip, r0
   2ce0c:	cmp	r2, r7
   2ce10:	blt	2cdb0 <GetDataSlab+0x10cac>
   2ce14:	ldr	r2, [sp, #8]
   2ce18:	add	r5, sp, #72	; 0x48
   2ce1c:	mov	ip, #1
   2ce20:	ldr	lr, [sp, #12]
   2ce24:	sub	r3, r2, r3
   2ce28:	add	r0, r0, r3, lsl #2
   2ce2c:	add	r4, r4, r3
   2ce30:	ldr	r3, [sp, #208]	; 0xd0
   2ce34:	cmp	ip, r3
   2ce38:	bge	2cddc <GetDataSlab+0x10cd8>
   2ce3c:	ldr	r3, [r5, #4]
   2ce40:	add	r2, r3, #1
   2ce44:	ldr	r3, [sp, #204]	; 0xcc
   2ce48:	str	r2, [r5, #4]
   2ce4c:	ldr	r1, [r3, ip, lsl #2]
   2ce50:	sdiv	r3, r2, r1
   2ce54:	mls	r3, r1, r3, r2
   2ce58:	cmp	r3, #0
   2ce5c:	bne	2cdc8 <GetDataSlab+0x10cc4>
   2ce60:	ldr	r2, [lr, #4]
   2ce64:	str	r3, [r5, #4]
   2ce68:	ldr	r1, [sp, #196]	; 0xc4
   2ce6c:	sdiv	r3, r4, r2
   2ce70:	ldr	r1, [r1, ip, lsl #2]
   2ce74:	mls	r3, r2, r3, r4
   2ce78:	cmp	r3, #0
   2ce7c:	ldrne	r8, [lr]
   2ce80:	subne	r3, r2, r3
   2ce84:	mlane	r3, r1, r8, r3
   2ce88:	bne	2ce9c <GetDataSlab+0x10d98>
   2ce8c:	cmp	r1, #0
   2ce90:	beq	2cea4 <GetDataSlab+0x10da0>
   2ce94:	ldr	r3, [lr]
   2ce98:	mul	r3, r3, r1
   2ce9c:	add	r0, r0, r3, lsl #2
   2cea0:	add	r4, r4, r3
   2cea4:	add	ip, ip, #1
   2cea8:	add	lr, lr, #4
   2ceac:	add	r5, r5, #4
   2ceb0:	b	2ce30 <GetDataSlab+0x10d2c>
   2ceb4:	mov	r6, #0
   2ceb8:	b	2cde0 <GetDataSlab+0x10cdc>
   2cebc:	vldr	s15, [r3]
   2cec0:	add	r2, r2, #1
   2cec4:	add	r3, r3, r8
   2cec8:	vcvt.u32.f32	s15, s15
   2cecc:	vmov	r1, s15
   2ced0:	strh	r1, [lr], #2
   2ced4:	b	2cc7c <GetDataSlab+0x10b78>
   2ced8:	add	r3, sp, #152	; 0x98
   2cedc:	add	r3, r3, lr, lsl #2
   2cee0:	ldr	r3, [r3, #-120]	; 0xffffff88
   2cee4:	add	r0, r0, r3, lsl #2
   2cee8:	add	r4, r4, r3
   2ceec:	add	r6, r6, r7
   2cef0:	b	2cc50 <GetDataSlab+0x10b4c>
   2cef4:	ldr	r5, [sl]
   2cef8:	add	r4, sp, #32
   2cefc:	mov	r6, fp
   2cf00:	mov	ip, #0
   2cf04:	mov	r2, #1
   2cf08:	sub	r3, r5, #1
   2cf0c:	str	r3, [sp, #32]
   2cf10:	ldr	r3, [fp]
   2cf14:	str	r3, [sp, #8]
   2cf18:	str	r3, [sp, #112]	; 0x70
   2cf1c:	ldr	r3, [sp, #204]	; 0xcc
   2cf20:	ldr	r7, [r3]
   2cf24:	add	r3, sp, #112	; 0x70
   2cf28:	mov	lr, r3
   2cf2c:	str	r3, [sp, #12]
   2cf30:	mov	r9, r7
   2cf34:	ldr	r3, [sp, #208]	; 0xd0
   2cf38:	cmp	r2, r3
   2cf3c:	blt	2d050 <GetDataSlab+0x10f4c>
   2cf40:	ldr	r3, [sp, #4]
   2cf44:	cmp	r5, #1
   2cf48:	add	r0, r3, ip, lsl #2
   2cf4c:	beq	2d1c4 <GetDataSlab+0x110c0>
   2cf50:	bic	r3, r7, r7, asr #31
   2cf54:	mov	r6, #0
   2cf58:	lsl	r8, r5, #2
   2cf5c:	mul	sl, r5, r7
   2cf60:	mul	fp, r5, r3
   2cf64:	mul	r3, r8, r3
   2cf68:	str	r3, [sp, #4]
   2cf6c:	cmp	r6, r9
   2cf70:	bge	1c230 <GetDataSlab+0x12c>
   2cf74:	ldr	r3, [sp, #196]	; 0xc4
   2cf78:	mov	r2, #0
   2cf7c:	ldr	r1, [r3]
   2cf80:	ldr	r3, [sp]
   2cf84:	cmp	r1, #0
   2cf88:	addne	r0, r0, r1, lsl #2
   2cf8c:	addne	ip, ip, r1
   2cf90:	add	r4, r3, r6, lsl #1
   2cf94:	mov	lr, r0
   2cf98:	cmp	r2, r7
   2cf9c:	blt	2d1cc <GetDataSlab+0x110c8>
   2cfa0:	ldr	r3, [sp, #8]
   2cfa4:	add	r5, sp, #72	; 0x48
   2cfa8:	mov	r4, #1
   2cfac:	ldr	lr, [sp, #12]
   2cfb0:	sub	r3, r3, r1
   2cfb4:	sub	r2, r3, sl
   2cfb8:	add	r3, ip, fp
   2cfbc:	add	ip, r3, r2
   2cfc0:	ldr	r3, [sp, #4]
   2cfc4:	add	r3, r3, r2, lsl #2
   2cfc8:	add	r0, r0, r3
   2cfcc:	ldr	r3, [sp, #208]	; 0xd0
   2cfd0:	cmp	r4, r3
   2cfd4:	bge	2d1f0 <GetDataSlab+0x110ec>
   2cfd8:	ldr	r3, [r5, #4]
   2cfdc:	add	r2, r3, #1
   2cfe0:	ldr	r3, [sp, #204]	; 0xcc
   2cfe4:	str	r2, [r5, #4]
   2cfe8:	ldr	r1, [r3, r4, lsl #2]
   2cfec:	sdiv	r3, r2, r1
   2cff0:	mls	r3, r1, r3, r2
   2cff4:	cmp	r3, #0
   2cff8:	bne	2d1dc <GetDataSlab+0x110d8>
   2cffc:	ldr	r2, [lr, #4]
   2d000:	str	r3, [r5, #4]
   2d004:	ldr	r1, [sp, #196]	; 0xc4
   2d008:	sdiv	r3, ip, r2
   2d00c:	ldr	r1, [r1, r4, lsl #2]
   2d010:	mls	r3, r2, r3, ip
   2d014:	cmp	r3, #0
   2d018:	subne	r3, r2, r3
   2d01c:	ldrne	r2, [lr]
   2d020:	mlane	r3, r1, r2, r3
   2d024:	bne	2d038 <GetDataSlab+0x10f34>
   2d028:	cmp	r1, #0
   2d02c:	beq	2d040 <GetDataSlab+0x10f3c>
   2d030:	ldr	r3, [lr]
   2d034:	mul	r3, r3, r1
   2d038:	add	r0, r0, r3, lsl #2
   2d03c:	add	ip, ip, r3
   2d040:	add	r4, r4, #1
   2d044:	add	lr, lr, #4
   2d048:	add	r5, r5, #4
   2d04c:	b	2cfcc <GetDataSlab+0x10ec8>
   2d050:	ldr	r3, [sl, r2, lsl #2]
   2d054:	mov	r8, lr
   2d058:	sub	r3, r3, #1
   2d05c:	str	r3, [r4, #4]
   2d060:	ldr	r3, [r6], #4
   2d064:	mov	r1, r6
   2d068:	str	r3, [lr, #4]
   2d06c:	cmp	r1, fp
   2d070:	bne	2d0a0 <GetDataSlab+0x10f9c>
   2d074:	ldr	r1, [sp, #196]	; 0xc4
   2d078:	add	lr, lr, #4
   2d07c:	add	r4, r4, #4
   2d080:	ldr	r3, [sp, #204]	; 0xcc
   2d084:	ldr	r1, [r1, r2, lsl #2]
   2d088:	ldr	r3, [r3, r2, lsl #2]
   2d08c:	add	r2, r2, #1
   2d090:	mul	r9, r3, r9
   2d094:	ldr	r3, [r8]
   2d098:	mla	ip, r1, r3, ip
   2d09c:	b	2cf34 <GetDataSlab+0x10e30>
   2d0a0:	str	r1, [sp, #16]
   2d0a4:	ldr	r3, [r1, #-4]!
   2d0a8:	ldr	r0, [r4, #4]
   2d0ac:	mul	r3, r3, r0
   2d0b0:	ldr	r0, [lr, #4]
   2d0b4:	str	r3, [r4, #4]
   2d0b8:	ldr	r3, [sp, #16]
   2d0bc:	ldr	r3, [r3]
   2d0c0:	mul	r3, r3, r0
   2d0c4:	str	r3, [lr, #4]
   2d0c8:	b	2d06c <GetDataSlab+0x10f68>
   2d0cc:	ldr	lr, [r0, r3, lsl #2]
   2d0d0:	add	r3, r3, #1
   2d0d4:	strh	lr, [r1], #2
   2d0d8:	b	2d11c <GetDataSlab+0x11018>
   2d0dc:	add	r3, sp, #152	; 0x98
   2d0e0:	add	r3, r3, lr, lsl #2
   2d0e4:	ldr	r3, [r3, #-120]	; 0xffffff88
   2d0e8:	add	r0, r0, r3, lsl #2
   2d0ec:	add	ip, ip, r3
   2d0f0:	add	r6, r6, r7
   2d0f4:	cmp	r6, r9
   2d0f8:	bge	1c230 <GetDataSlab+0x12c>
   2d0fc:	ldr	r3, [sp, #196]	; 0xc4
   2d100:	ldr	r2, [r3]
   2d104:	ldr	r3, [sp]
   2d108:	cmp	r2, #0
   2d10c:	addne	r0, r0, r2, lsl #2
   2d110:	addne	ip, ip, r2
   2d114:	add	r1, r3, r6, lsl #1
   2d118:	mov	r3, #0
   2d11c:	cmp	r3, r7
   2d120:	blt	2d0cc <GetDataSlab+0x10fc8>
   2d124:	ldr	r3, [sp, #8]
   2d128:	add	r5, sp, #72	; 0x48
   2d12c:	mov	lr, #1
   2d130:	ldr	r4, [sp, #12]
   2d134:	sub	r3, r3, r2
   2d138:	add	r0, r0, r3, lsl #2
   2d13c:	add	ip, ip, r3
   2d140:	ldr	r3, [sp, #208]	; 0xd0
   2d144:	cmp	lr, r3
   2d148:	bge	2d0f0 <GetDataSlab+0x10fec>
   2d14c:	ldr	r3, [r5, #4]
   2d150:	add	r2, r3, #1
   2d154:	ldr	r3, [sp, #204]	; 0xcc
   2d158:	str	r2, [r5, #4]
   2d15c:	ldr	r1, [r3, lr, lsl #2]
   2d160:	sdiv	r3, r2, r1
   2d164:	mls	r3, r1, r3, r2
   2d168:	cmp	r3, #0
   2d16c:	bne	2d0dc <GetDataSlab+0x10fd8>
   2d170:	ldr	r2, [r4, #4]
   2d174:	str	r3, [r5, #4]
   2d178:	ldr	r1, [sp, #196]	; 0xc4
   2d17c:	sdiv	r3, ip, r2
   2d180:	ldr	r1, [r1, lr, lsl #2]
   2d184:	mls	r3, r2, r3, ip
   2d188:	cmp	r3, #0
   2d18c:	ldrne	r8, [r4]
   2d190:	subne	r3, r2, r3
   2d194:	mlane	r3, r1, r8, r3
   2d198:	bne	2d1ac <GetDataSlab+0x110a8>
   2d19c:	cmp	r1, #0
   2d1a0:	beq	2d1b4 <GetDataSlab+0x110b0>
   2d1a4:	ldr	r3, [r4]
   2d1a8:	mul	r3, r3, r1
   2d1ac:	add	r0, r0, r3, lsl #2
   2d1b0:	add	ip, ip, r3
   2d1b4:	add	lr, lr, #1
   2d1b8:	add	r4, r4, #4
   2d1bc:	add	r5, r5, #4
   2d1c0:	b	2d140 <GetDataSlab+0x1103c>
   2d1c4:	mov	r6, #0
   2d1c8:	b	2d0f4 <GetDataSlab+0x10ff0>
   2d1cc:	ldr	r3, [lr], r8
   2d1d0:	add	r2, r2, #1
   2d1d4:	strh	r3, [r4], #2
   2d1d8:	b	2cf98 <GetDataSlab+0x10e94>
   2d1dc:	add	r3, sp, #152	; 0x98
   2d1e0:	add	r3, r3, r4, lsl #2
   2d1e4:	ldr	r3, [r3, #-120]	; 0xffffff88
   2d1e8:	add	r0, r0, r3, lsl #2
   2d1ec:	add	ip, ip, r3
   2d1f0:	add	r6, r6, r7
   2d1f4:	b	2cf6c <GetDataSlab+0x10e68>
   2d1f8:	ldr	r5, [sl]
   2d1fc:	add	r4, sp, #32
   2d200:	mov	r6, fp
   2d204:	mov	ip, #0
   2d208:	mov	r2, #1
   2d20c:	sub	r3, r5, #1
   2d210:	str	r3, [sp, #32]
   2d214:	ldr	r3, [fp]
   2d218:	str	r3, [sp, #8]
   2d21c:	str	r3, [sp, #112]	; 0x70
   2d220:	ldr	r3, [sp, #204]	; 0xcc
   2d224:	ldr	r7, [r3]
   2d228:	add	r3, sp, #112	; 0x70
   2d22c:	mov	lr, r3
   2d230:	str	r3, [sp, #12]
   2d234:	mov	r9, r7
   2d238:	ldr	r3, [sp, #208]	; 0xd0
   2d23c:	cmp	r2, r3
   2d240:	blt	2d354 <GetDataSlab+0x11250>
   2d244:	ldr	r3, [sp, #4]
   2d248:	cmp	r5, #1
   2d24c:	add	r0, r3, ip, lsl #2
   2d250:	beq	2d4c8 <GetDataSlab+0x113c4>
   2d254:	bic	r3, r7, r7, asr #31
   2d258:	mov	r6, #0
   2d25c:	lsl	r8, r5, #2
   2d260:	mul	sl, r5, r7
   2d264:	mul	r2, r5, r3
   2d268:	mul	fp, r3, r8
   2d26c:	str	r2, [sp, #4]
   2d270:	cmp	r6, r9
   2d274:	bge	1c230 <GetDataSlab+0x12c>
   2d278:	ldr	r3, [sp, #196]	; 0xc4
   2d27c:	mov	r2, #0
   2d280:	ldr	r1, [r3]
   2d284:	ldr	r3, [sp]
   2d288:	cmp	r1, #0
   2d28c:	addne	r0, r0, r1, lsl #2
   2d290:	addne	ip, ip, r1
   2d294:	add	r4, r3, r6, lsl #1
   2d298:	mov	lr, r0
   2d29c:	cmp	r2, r7
   2d2a0:	blt	2d4d0 <GetDataSlab+0x113cc>
   2d2a4:	ldr	r3, [sp, #8]
   2d2a8:	add	r5, sp, #72	; 0x48
   2d2ac:	mov	r4, #1
   2d2b0:	ldr	lr, [sp, #12]
   2d2b4:	sub	r3, r3, r1
   2d2b8:	sub	r2, r3, sl
   2d2bc:	ldr	r3, [sp, #4]
   2d2c0:	add	r3, ip, r3
   2d2c4:	add	ip, r3, r2
   2d2c8:	add	r3, fp, r2, lsl #2
   2d2cc:	add	r0, r0, r3
   2d2d0:	ldr	r3, [sp, #208]	; 0xd0
   2d2d4:	cmp	r4, r3
   2d2d8:	bge	2d4f4 <GetDataSlab+0x113f0>
   2d2dc:	ldr	r3, [r5, #4]
   2d2e0:	add	r2, r3, #1
   2d2e4:	ldr	r3, [sp, #204]	; 0xcc
   2d2e8:	str	r2, [r5, #4]
   2d2ec:	ldr	r1, [r3, r4, lsl #2]
   2d2f0:	sdiv	r3, r2, r1
   2d2f4:	mls	r3, r1, r3, r2
   2d2f8:	cmp	r3, #0
   2d2fc:	bne	2d4e0 <GetDataSlab+0x113dc>
   2d300:	ldr	r2, [lr, #4]
   2d304:	str	r3, [r5, #4]
   2d308:	ldr	r1, [sp, #196]	; 0xc4
   2d30c:	sdiv	r3, ip, r2
   2d310:	ldr	r1, [r1, r4, lsl #2]
   2d314:	mls	r3, r2, r3, ip
   2d318:	cmp	r3, #0
   2d31c:	subne	r3, r2, r3
   2d320:	ldrne	r2, [lr]
   2d324:	mlane	r3, r1, r2, r3
   2d328:	bne	2d33c <GetDataSlab+0x11238>
   2d32c:	cmp	r1, #0
   2d330:	beq	2d344 <GetDataSlab+0x11240>
   2d334:	ldr	r3, [lr]
   2d338:	mul	r3, r3, r1
   2d33c:	add	r0, r0, r3, lsl #2
   2d340:	add	ip, ip, r3
   2d344:	add	r4, r4, #1
   2d348:	add	lr, lr, #4
   2d34c:	add	r5, r5, #4
   2d350:	b	2d2d0 <GetDataSlab+0x111cc>
   2d354:	ldr	r3, [sl, r2, lsl #2]
   2d358:	mov	r8, lr
   2d35c:	sub	r3, r3, #1
   2d360:	str	r3, [r4, #4]
   2d364:	ldr	r3, [r6], #4
   2d368:	mov	r1, r6
   2d36c:	str	r3, [lr, #4]
   2d370:	cmp	r1, fp
   2d374:	bne	2d3a4 <GetDataSlab+0x112a0>
   2d378:	ldr	r1, [sp, #196]	; 0xc4
   2d37c:	add	lr, lr, #4
   2d380:	add	r4, r4, #4
   2d384:	ldr	r3, [sp, #204]	; 0xcc
   2d388:	ldr	r1, [r1, r2, lsl #2]
   2d38c:	ldr	r3, [r3, r2, lsl #2]
   2d390:	add	r2, r2, #1
   2d394:	mul	r9, r3, r9
   2d398:	ldr	r3, [r8]
   2d39c:	mla	ip, r1, r3, ip
   2d3a0:	b	2d238 <GetDataSlab+0x11134>
   2d3a4:	str	r1, [sp, #16]
   2d3a8:	ldr	r3, [r1, #-4]!
   2d3ac:	ldr	r0, [r4, #4]
   2d3b0:	mul	r3, r3, r0
   2d3b4:	ldr	r0, [lr, #4]
   2d3b8:	str	r3, [r4, #4]
   2d3bc:	ldr	r3, [sp, #16]
   2d3c0:	ldr	r3, [r3]
   2d3c4:	mul	r3, r3, r0
   2d3c8:	str	r3, [lr, #4]
   2d3cc:	b	2d370 <GetDataSlab+0x1126c>
   2d3d0:	ldr	lr, [r0, r3, lsl #2]
   2d3d4:	add	r3, r3, #1
   2d3d8:	strh	lr, [r1], #2
   2d3dc:	b	2d420 <GetDataSlab+0x1131c>
   2d3e0:	add	r3, sp, #152	; 0x98
   2d3e4:	add	r3, r3, lr, lsl #2
   2d3e8:	ldr	r3, [r3, #-120]	; 0xffffff88
   2d3ec:	add	r0, r0, r3, lsl #2
   2d3f0:	add	ip, ip, r3
   2d3f4:	add	r6, r6, r7
   2d3f8:	cmp	r6, r9
   2d3fc:	bge	1c230 <GetDataSlab+0x12c>
   2d400:	ldr	r3, [sp, #196]	; 0xc4
   2d404:	ldr	r2, [r3]
   2d408:	ldr	r3, [sp]
   2d40c:	cmp	r2, #0
   2d410:	addne	r0, r0, r2, lsl #2
   2d414:	addne	ip, ip, r2
   2d418:	add	r1, r3, r6, lsl #1
   2d41c:	mov	r3, #0
   2d420:	cmp	r3, r7
   2d424:	blt	2d3d0 <GetDataSlab+0x112cc>
   2d428:	ldr	r3, [sp, #8]
   2d42c:	add	r5, sp, #72	; 0x48
   2d430:	mov	lr, #1
   2d434:	ldr	r4, [sp, #12]
   2d438:	sub	r3, r3, r2
   2d43c:	add	r0, r0, r3, lsl #2
   2d440:	add	ip, ip, r3
   2d444:	ldr	r3, [sp, #208]	; 0xd0
   2d448:	cmp	lr, r3
   2d44c:	bge	2d3f4 <GetDataSlab+0x112f0>
   2d450:	ldr	r3, [r5, #4]
   2d454:	add	r2, r3, #1
   2d458:	ldr	r3, [sp, #204]	; 0xcc
   2d45c:	str	r2, [r5, #4]
   2d460:	ldr	r1, [r3, lr, lsl #2]
   2d464:	sdiv	r3, r2, r1
   2d468:	mls	r3, r1, r3, r2
   2d46c:	cmp	r3, #0
   2d470:	bne	2d3e0 <GetDataSlab+0x112dc>
   2d474:	ldr	r2, [r4, #4]
   2d478:	str	r3, [r5, #4]
   2d47c:	ldr	r1, [sp, #196]	; 0xc4
   2d480:	sdiv	r3, ip, r2
   2d484:	ldr	r1, [r1, lr, lsl #2]
   2d488:	mls	r3, r2, r3, ip
   2d48c:	cmp	r3, #0
   2d490:	ldrne	r8, [r4]
   2d494:	subne	r3, r2, r3
   2d498:	mlane	r3, r1, r8, r3
   2d49c:	bne	2d4b0 <GetDataSlab+0x113ac>
   2d4a0:	cmp	r1, #0
   2d4a4:	beq	2d4b8 <GetDataSlab+0x113b4>
   2d4a8:	ldr	r3, [r4]
   2d4ac:	mul	r3, r3, r1
   2d4b0:	add	r0, r0, r3, lsl #2
   2d4b4:	add	ip, ip, r3
   2d4b8:	add	lr, lr, #1
   2d4bc:	add	r4, r4, #4
   2d4c0:	add	r5, r5, #4
   2d4c4:	b	2d444 <GetDataSlab+0x11340>
   2d4c8:	mov	r6, #0
   2d4cc:	b	2d3f8 <GetDataSlab+0x112f4>
   2d4d0:	ldr	r3, [lr], r8
   2d4d4:	add	r2, r2, #1
   2d4d8:	strh	r3, [r4], #2
   2d4dc:	b	2d29c <GetDataSlab+0x11198>
   2d4e0:	add	r3, sp, #152	; 0x98
   2d4e4:	add	r3, r3, r4, lsl #2
   2d4e8:	ldr	r3, [r3, #-120]	; 0xffffff88
   2d4ec:	add	r0, r0, r3, lsl #2
   2d4f0:	add	ip, ip, r3
   2d4f4:	add	r6, r6, r7
   2d4f8:	b	2d270 <GetDataSlab+0x1116c>
   2d4fc:	ldr	r5, [sl]
   2d500:	add	lr, sp, #32
   2d504:	mov	r6, fp
   2d508:	mov	r4, #0
   2d50c:	mov	r2, #1
   2d510:	sub	r3, r5, #1
   2d514:	str	r3, [sp, #32]
   2d518:	ldr	r3, [fp]
   2d51c:	str	r3, [sp, #8]
   2d520:	str	r3, [sp, #112]	; 0x70
   2d524:	ldr	r3, [sp, #204]	; 0xcc
   2d528:	ldr	r7, [r3]
   2d52c:	add	r3, sp, #112	; 0x70
   2d530:	mov	ip, r3
   2d534:	str	r3, [sp, #12]
   2d538:	mov	r9, r7
   2d53c:	ldr	r3, [sp, #208]	; 0xd0
   2d540:	cmp	r2, r3
   2d544:	blt	2d658 <GetDataSlab+0x11554>
   2d548:	ldr	r3, [sp, #4]
   2d54c:	cmp	r5, #1
   2d550:	add	r0, r3, r4, lsl #1
   2d554:	beq	2d7d0 <GetDataSlab+0x116cc>
   2d558:	bic	r3, r7, r7, asr #31
   2d55c:	mov	r6, #0
   2d560:	lsl	r8, r5, #1
   2d564:	mul	sl, r5, r7
   2d568:	mul	fp, r5, r3
   2d56c:	mul	r3, r8, r3
   2d570:	str	r3, [sp, #4]
   2d574:	cmp	r6, r9
   2d578:	bge	1c230 <GetDataSlab+0x12c>
   2d57c:	ldr	r3, [sp, #196]	; 0xc4
   2d580:	mov	r2, #0
   2d584:	ldr	r1, [r3]
   2d588:	ldr	r3, [sp]
   2d58c:	cmp	r1, #0
   2d590:	addne	r0, r0, r1, lsl #1
   2d594:	addne	r4, r4, r1
   2d598:	add	lr, r3, r6, lsl #1
   2d59c:	mov	ip, r0
   2d5a0:	cmp	r2, r7
   2d5a4:	blt	2d7d8 <GetDataSlab+0x116d4>
   2d5a8:	ldr	r3, [sp, #8]
   2d5ac:	add	r5, sp, #72	; 0x48
   2d5b0:	mov	lr, #1
   2d5b4:	ldr	ip, [sp, #12]
   2d5b8:	sub	r3, r3, r1
   2d5bc:	sub	r2, r3, sl
   2d5c0:	add	r3, r4, fp
   2d5c4:	add	r4, r3, r2
   2d5c8:	ldr	r3, [sp, #4]
   2d5cc:	add	r3, r3, r2, lsl #1
   2d5d0:	add	r0, r0, r3
   2d5d4:	ldr	r3, [sp, #208]	; 0xd0
   2d5d8:	cmp	lr, r3
   2d5dc:	bge	2d7fc <GetDataSlab+0x116f8>
   2d5e0:	ldr	r3, [r5, #4]
   2d5e4:	add	r2, r3, #1
   2d5e8:	ldr	r3, [sp, #204]	; 0xcc
   2d5ec:	str	r2, [r5, #4]
   2d5f0:	ldr	r1, [r3, lr, lsl #2]
   2d5f4:	sdiv	r3, r2, r1
   2d5f8:	mls	r3, r1, r3, r2
   2d5fc:	cmp	r3, #0
   2d600:	bne	2d7e8 <GetDataSlab+0x116e4>
   2d604:	ldr	r2, [ip, #4]
   2d608:	str	r3, [r5, #4]
   2d60c:	ldr	r1, [sp, #196]	; 0xc4
   2d610:	sdiv	r3, r4, r2
   2d614:	ldr	r1, [r1, lr, lsl #2]
   2d618:	mls	r3, r2, r3, r4
   2d61c:	cmp	r3, #0
   2d620:	subne	r3, r2, r3
   2d624:	ldrne	r2, [ip]
   2d628:	mlane	r3, r1, r2, r3
   2d62c:	bne	2d640 <GetDataSlab+0x1153c>
   2d630:	cmp	r1, #0
   2d634:	beq	2d648 <GetDataSlab+0x11544>
   2d638:	ldr	r3, [ip]
   2d63c:	mul	r3, r3, r1
   2d640:	add	r0, r0, r3, lsl #1
   2d644:	add	r4, r4, r3
   2d648:	add	lr, lr, #1
   2d64c:	add	ip, ip, #4
   2d650:	add	r5, r5, #4
   2d654:	b	2d5d4 <GetDataSlab+0x114d0>
   2d658:	ldr	r3, [sl, r2, lsl #2]
   2d65c:	mov	r8, ip
   2d660:	sub	r3, r3, #1
   2d664:	str	r3, [lr, #4]
   2d668:	ldr	r3, [r6], #4
   2d66c:	mov	r1, r6
   2d670:	str	r3, [ip, #4]
   2d674:	cmp	r1, fp
   2d678:	bne	2d6a8 <GetDataSlab+0x115a4>
   2d67c:	ldr	r1, [sp, #196]	; 0xc4
   2d680:	add	ip, ip, #4
   2d684:	add	lr, lr, #4
   2d688:	ldr	r3, [sp, #204]	; 0xcc
   2d68c:	ldr	r1, [r1, r2, lsl #2]
   2d690:	ldr	r3, [r3, r2, lsl #2]
   2d694:	add	r2, r2, #1
   2d698:	mul	r9, r3, r9
   2d69c:	ldr	r3, [r8]
   2d6a0:	mla	r4, r1, r3, r4
   2d6a4:	b	2d53c <GetDataSlab+0x11438>
   2d6a8:	str	r1, [sp, #16]
   2d6ac:	ldr	r3, [r1, #-4]!
   2d6b0:	ldr	r0, [lr, #4]
   2d6b4:	mul	r3, r3, r0
   2d6b8:	ldr	r0, [ip, #4]
   2d6bc:	str	r3, [lr, #4]
   2d6c0:	ldr	r3, [sp, #16]
   2d6c4:	ldr	r3, [r3]
   2d6c8:	mul	r3, r3, r0
   2d6cc:	str	r3, [ip, #4]
   2d6d0:	b	2d674 <GetDataSlab+0x11570>
   2d6d4:	ldrh	r3, [ip, #2]!
   2d6d8:	add	r1, r1, #1
   2d6dc:	strh	r3, [lr], #2
   2d6e0:	b	2d728 <GetDataSlab+0x11624>
   2d6e4:	add	r3, sp, #152	; 0x98
   2d6e8:	add	r3, r3, ip, lsl #2
   2d6ec:	ldr	r3, [r3, #-120]	; 0xffffff88
   2d6f0:	add	r0, r0, r3, lsl #1
   2d6f4:	add	r4, r4, r3
   2d6f8:	add	r6, r6, r7
   2d6fc:	cmp	r6, r9
   2d700:	bge	1c230 <GetDataSlab+0x12c>
   2d704:	ldr	r3, [sp, #196]	; 0xc4
   2d708:	mov	r1, #0
   2d70c:	ldr	r2, [r3]
   2d710:	ldr	r3, [sp]
   2d714:	cmp	r2, #0
   2d718:	addne	r0, r0, r2, lsl #1
   2d71c:	addne	r4, r4, r2
   2d720:	add	lr, r3, r6, lsl #1
   2d724:	sub	ip, r0, #2
   2d728:	cmp	r1, r7
   2d72c:	blt	2d6d4 <GetDataSlab+0x115d0>
   2d730:	ldr	r3, [sp, #8]
   2d734:	add	r5, sp, #72	; 0x48
   2d738:	mov	ip, #1
   2d73c:	ldr	lr, [sp, #12]
   2d740:	sub	r3, r3, r2
   2d744:	add	r0, r0, r3, lsl #1
   2d748:	add	r4, r4, r3
   2d74c:	ldr	r3, [sp, #208]	; 0xd0
   2d750:	cmp	ip, r3
   2d754:	bge	2d6f8 <GetDataSlab+0x115f4>
   2d758:	ldr	r3, [r5, #4]
   2d75c:	add	r2, r3, #1
   2d760:	ldr	r3, [sp, #204]	; 0xcc
   2d764:	str	r2, [r5, #4]
   2d768:	ldr	r1, [r3, ip, lsl #2]
   2d76c:	sdiv	r3, r2, r1
   2d770:	mls	r3, r1, r3, r2
   2d774:	cmp	r3, #0
   2d778:	bne	2d6e4 <GetDataSlab+0x115e0>
   2d77c:	ldr	r2, [lr, #4]
   2d780:	str	r3, [r5, #4]
   2d784:	ldr	r1, [sp, #196]	; 0xc4
   2d788:	sdiv	r3, r4, r2
   2d78c:	ldr	r1, [r1, ip, lsl #2]
   2d790:	mls	r3, r2, r3, r4
   2d794:	cmp	r3, #0
   2d798:	ldrne	r8, [lr]
   2d79c:	subne	r3, r2, r3
   2d7a0:	mlane	r3, r1, r8, r3
   2d7a4:	bne	2d7b8 <GetDataSlab+0x116b4>
   2d7a8:	cmp	r1, #0
   2d7ac:	beq	2d7c0 <GetDataSlab+0x116bc>
   2d7b0:	ldr	r3, [lr]
   2d7b4:	mul	r3, r3, r1
   2d7b8:	add	r0, r0, r3, lsl #1
   2d7bc:	add	r4, r4, r3
   2d7c0:	add	ip, ip, #1
   2d7c4:	add	lr, lr, #4
   2d7c8:	add	r5, r5, #4
   2d7cc:	b	2d74c <GetDataSlab+0x11648>
   2d7d0:	mov	r6, #0
   2d7d4:	b	2d6fc <GetDataSlab+0x115f8>
   2d7d8:	ldrh	r3, [ip], r8
   2d7dc:	add	r2, r2, #1
   2d7e0:	strh	r3, [lr], #2
   2d7e4:	b	2d5a0 <GetDataSlab+0x1149c>
   2d7e8:	add	r3, sp, #152	; 0x98
   2d7ec:	add	r3, r3, lr, lsl #2
   2d7f0:	ldr	r3, [r3, #-120]	; 0xffffff88
   2d7f4:	add	r0, r0, r3, lsl #1
   2d7f8:	add	r4, r4, r3
   2d7fc:	add	r6, r6, r7
   2d800:	b	2d574 <GetDataSlab+0x11470>
   2d804:	ldr	r5, [sl]
   2d808:	add	lr, sp, #32
   2d80c:	mov	r6, fp
   2d810:	mov	r4, #0
   2d814:	mov	r2, #1
   2d818:	sub	r3, r5, #1
   2d81c:	str	r3, [sp, #32]
   2d820:	ldr	r3, [fp]
   2d824:	str	r3, [sp, #8]
   2d828:	str	r3, [sp, #112]	; 0x70
   2d82c:	ldr	r3, [sp, #204]	; 0xcc
   2d830:	ldr	r7, [r3]
   2d834:	add	r3, sp, #112	; 0x70
   2d838:	mov	ip, r3
   2d83c:	str	r3, [sp, #12]
   2d840:	mov	r9, r7
   2d844:	ldr	r3, [sp, #208]	; 0xd0
   2d848:	cmp	r2, r3
   2d84c:	blt	2d960 <GetDataSlab+0x1185c>
   2d850:	ldr	r3, [sp, #4]
   2d854:	cmp	r5, #1
   2d858:	add	r0, r3, r4, lsl #1
   2d85c:	beq	2dad8 <GetDataSlab+0x119d4>
   2d860:	bic	r3, r7, r7, asr #31
   2d864:	mov	r6, #0
   2d868:	lsl	r8, r5, #1
   2d86c:	mul	sl, r5, r7
   2d870:	mul	r2, r3, r5
   2d874:	mul	fp, r3, r8
   2d878:	str	r2, [sp, #4]
   2d87c:	cmp	r6, r9
   2d880:	bge	1c230 <GetDataSlab+0x12c>
   2d884:	ldr	r3, [sp, #196]	; 0xc4
   2d888:	mov	r2, #0
   2d88c:	ldr	r1, [r3]
   2d890:	ldr	r3, [sp]
   2d894:	cmp	r1, #0
   2d898:	addne	r0, r0, r1, lsl #1
   2d89c:	addne	r4, r4, r1
   2d8a0:	add	lr, r3, r6, lsl #1
   2d8a4:	mov	ip, r0
   2d8a8:	cmp	r2, r7
   2d8ac:	blt	2dae0 <GetDataSlab+0x119dc>
   2d8b0:	ldr	r3, [sp, #8]
   2d8b4:	add	r5, sp, #72	; 0x48
   2d8b8:	mov	lr, #1
   2d8bc:	ldr	ip, [sp, #12]
   2d8c0:	sub	r3, r3, r1
   2d8c4:	sub	r2, r3, sl
   2d8c8:	ldr	r3, [sp, #4]
   2d8cc:	add	r3, r4, r3
   2d8d0:	add	r4, r3, r2
   2d8d4:	add	r3, fp, r2, lsl #1
   2d8d8:	add	r0, r0, r3
   2d8dc:	ldr	r3, [sp, #208]	; 0xd0
   2d8e0:	cmp	lr, r3
   2d8e4:	bge	2db04 <GetDataSlab+0x11a00>
   2d8e8:	ldr	r3, [r5, #4]
   2d8ec:	add	r2, r3, #1
   2d8f0:	ldr	r3, [sp, #204]	; 0xcc
   2d8f4:	str	r2, [r5, #4]
   2d8f8:	ldr	r1, [r3, lr, lsl #2]
   2d8fc:	sdiv	r3, r2, r1
   2d900:	mls	r3, r1, r3, r2
   2d904:	cmp	r3, #0
   2d908:	bne	2daf0 <GetDataSlab+0x119ec>
   2d90c:	ldr	r2, [ip, #4]
   2d910:	str	r3, [r5, #4]
   2d914:	ldr	r1, [sp, #196]	; 0xc4
   2d918:	sdiv	r3, r4, r2
   2d91c:	ldr	r1, [r1, lr, lsl #2]
   2d920:	mls	r3, r2, r3, r4
   2d924:	cmp	r3, #0
   2d928:	subne	r3, r2, r3
   2d92c:	ldrne	r2, [ip]
   2d930:	mlane	r3, r1, r2, r3
   2d934:	bne	2d948 <GetDataSlab+0x11844>
   2d938:	cmp	r1, #0
   2d93c:	beq	2d950 <GetDataSlab+0x1184c>
   2d940:	ldr	r3, [ip]
   2d944:	mul	r3, r3, r1
   2d948:	add	r0, r0, r3, lsl #1
   2d94c:	add	r4, r4, r3
   2d950:	add	lr, lr, #1
   2d954:	add	ip, ip, #4
   2d958:	add	r5, r5, #4
   2d95c:	b	2d8dc <GetDataSlab+0x117d8>
   2d960:	ldr	r3, [sl, r2, lsl #2]
   2d964:	mov	r8, ip
   2d968:	sub	r3, r3, #1
   2d96c:	str	r3, [lr, #4]
   2d970:	ldr	r3, [r6], #4
   2d974:	mov	r1, r6
   2d978:	str	r3, [ip, #4]
   2d97c:	cmp	r1, fp
   2d980:	bne	2d9b0 <GetDataSlab+0x118ac>
   2d984:	ldr	r1, [sp, #196]	; 0xc4
   2d988:	add	ip, ip, #4
   2d98c:	add	lr, lr, #4
   2d990:	ldr	r3, [sp, #204]	; 0xcc
   2d994:	ldr	r1, [r1, r2, lsl #2]
   2d998:	ldr	r3, [r3, r2, lsl #2]
   2d99c:	add	r2, r2, #1
   2d9a0:	mul	r9, r3, r9
   2d9a4:	ldr	r3, [r8]
   2d9a8:	mla	r4, r1, r3, r4
   2d9ac:	b	2d844 <GetDataSlab+0x11740>
   2d9b0:	str	r1, [sp, #16]
   2d9b4:	ldr	r3, [r1, #-4]!
   2d9b8:	ldr	r0, [lr, #4]
   2d9bc:	mul	r3, r3, r0
   2d9c0:	ldr	r0, [ip, #4]
   2d9c4:	str	r3, [lr, #4]
   2d9c8:	ldr	r3, [sp, #16]
   2d9cc:	ldr	r3, [r3]
   2d9d0:	mul	r3, r3, r0
   2d9d4:	str	r3, [ip, #4]
   2d9d8:	b	2d97c <GetDataSlab+0x11878>
   2d9dc:	ldrh	r3, [ip, #2]!
   2d9e0:	add	r1, r1, #1
   2d9e4:	strh	r3, [lr], #2
   2d9e8:	b	2da30 <GetDataSlab+0x1192c>
   2d9ec:	add	r3, sp, #152	; 0x98
   2d9f0:	add	r3, r3, ip, lsl #2
   2d9f4:	ldr	r3, [r3, #-120]	; 0xffffff88
   2d9f8:	add	r0, r0, r3, lsl #1
   2d9fc:	add	r4, r4, r3
   2da00:	add	r6, r6, r7
   2da04:	cmp	r6, r9
   2da08:	bge	1c230 <GetDataSlab+0x12c>
   2da0c:	ldr	r3, [sp, #196]	; 0xc4
   2da10:	mov	r1, #0
   2da14:	ldr	r2, [r3]
   2da18:	ldr	r3, [sp]
   2da1c:	cmp	r2, #0
   2da20:	addne	r0, r0, r2, lsl #1
   2da24:	addne	r4, r4, r2
   2da28:	add	lr, r3, r6, lsl #1
   2da2c:	sub	ip, r0, #2
   2da30:	cmp	r1, r7
   2da34:	blt	2d9dc <GetDataSlab+0x118d8>
   2da38:	ldr	r3, [sp, #8]
   2da3c:	add	r5, sp, #72	; 0x48
   2da40:	mov	ip, #1
   2da44:	ldr	lr, [sp, #12]
   2da48:	sub	r3, r3, r2
   2da4c:	add	r0, r0, r3, lsl #1
   2da50:	add	r4, r4, r3
   2da54:	ldr	r3, [sp, #208]	; 0xd0
   2da58:	cmp	ip, r3
   2da5c:	bge	2da00 <GetDataSlab+0x118fc>
   2da60:	ldr	r3, [r5, #4]
   2da64:	add	r2, r3, #1
   2da68:	ldr	r3, [sp, #204]	; 0xcc
   2da6c:	str	r2, [r5, #4]
   2da70:	ldr	r1, [r3, ip, lsl #2]
   2da74:	sdiv	r3, r2, r1
   2da78:	mls	r3, r1, r3, r2
   2da7c:	cmp	r3, #0
   2da80:	bne	2d9ec <GetDataSlab+0x118e8>
   2da84:	ldr	r2, [lr, #4]
   2da88:	str	r3, [r5, #4]
   2da8c:	ldr	r1, [sp, #196]	; 0xc4
   2da90:	sdiv	r3, r4, r2
   2da94:	ldr	r1, [r1, ip, lsl #2]
   2da98:	mls	r3, r2, r3, r4
   2da9c:	cmp	r3, #0
   2daa0:	ldrne	r8, [lr]
   2daa4:	subne	r3, r2, r3
   2daa8:	mlane	r3, r1, r8, r3
   2daac:	bne	2dac0 <GetDataSlab+0x119bc>
   2dab0:	cmp	r1, #0
   2dab4:	beq	2dac8 <GetDataSlab+0x119c4>
   2dab8:	ldr	r3, [lr]
   2dabc:	mul	r3, r3, r1
   2dac0:	add	r0, r0, r3, lsl #1
   2dac4:	add	r4, r4, r3
   2dac8:	add	ip, ip, #1
   2dacc:	add	lr, lr, #4
   2dad0:	add	r5, r5, #4
   2dad4:	b	2da54 <GetDataSlab+0x11950>
   2dad8:	mov	r6, #0
   2dadc:	b	2da04 <GetDataSlab+0x11900>
   2dae0:	ldrh	r3, [ip], r8
   2dae4:	add	r2, r2, #1
   2dae8:	strh	r3, [lr], #2
   2daec:	b	2d8a8 <GetDataSlab+0x117a4>
   2daf0:	add	r3, sp, #152	; 0x98
   2daf4:	add	r3, r3, lr, lsl #2
   2daf8:	ldr	r3, [r3, #-120]	; 0xffffff88
   2dafc:	add	r0, r0, r3, lsl #1
   2db00:	add	r4, r4, r3
   2db04:	add	r6, r6, r7
   2db08:	b	2d87c <GetDataSlab+0x11778>
   2db0c:	ldr	r8, [sl]
   2db10:	add	r4, sp, #32
   2db14:	mov	r5, fp
   2db18:	mov	lr, #0
   2db1c:	mov	r2, #1
   2db20:	sub	r3, r8, #1
   2db24:	str	r3, [sp, #32]
   2db28:	ldr	r3, [fp]
   2db2c:	str	r3, [sp, #8]
   2db30:	str	r3, [sp, #112]	; 0x70
   2db34:	ldr	r3, [sp, #204]	; 0xcc
   2db38:	ldr	r7, [r3]
   2db3c:	add	r3, sp, #112	; 0x70
   2db40:	mov	ip, r3
   2db44:	str	r3, [sp, #12]
   2db48:	mov	r9, r7
   2db4c:	ldr	r3, [sp, #208]	; 0xd0
   2db50:	cmp	r2, r3
   2db54:	blt	2dc58 <GetDataSlab+0x11b54>
   2db58:	ldr	r3, [sp, #4]
   2db5c:	cmp	r8, #1
   2db60:	add	ip, r3, lr
   2db64:	beq	2ddcc <GetDataSlab+0x11cc8>
   2db68:	bic	r3, r7, r7, asr #31
   2db6c:	mov	r6, #0
   2db70:	mul	fp, r8, r7
   2db74:	mul	sl, r8, r3
   2db78:	cmp	r6, r9
   2db7c:	bge	1c230 <GetDataSlab+0x12c>
   2db80:	ldr	r3, [sp, #196]	; 0xc4
   2db84:	mov	r2, #0
   2db88:	ldr	r1, [r3]
   2db8c:	ldr	r3, [sp]
   2db90:	cmp	r1, #0
   2db94:	addne	ip, ip, r1
   2db98:	addne	lr, lr, r1
   2db9c:	add	r4, r3, r6, lsl #1
   2dba0:	mov	r0, ip
   2dba4:	cmp	r2, r7
   2dba8:	blt	2ddd4 <GetDataSlab+0x11cd0>
   2dbac:	ldr	r3, [sp, #8]
   2dbb0:	add	r5, sp, #72	; 0x48
   2dbb4:	mov	r4, #1
   2dbb8:	ldr	r0, [sp, #12]
   2dbbc:	sub	r3, r3, r1
   2dbc0:	sub	r2, r3, fp
   2dbc4:	add	r3, lr, sl
   2dbc8:	add	lr, r3, r2
   2dbcc:	add	r3, sl, r2
   2dbd0:	add	ip, ip, r3
   2dbd4:	ldr	r3, [sp, #208]	; 0xd0
   2dbd8:	cmp	r4, r3
   2dbdc:	bge	2ddf8 <GetDataSlab+0x11cf4>
   2dbe0:	ldr	r3, [r5, #4]
   2dbe4:	add	r2, r3, #1
   2dbe8:	ldr	r3, [sp, #204]	; 0xcc
   2dbec:	str	r2, [r5, #4]
   2dbf0:	ldr	r1, [r3, r4, lsl #2]
   2dbf4:	sdiv	r3, r2, r1
   2dbf8:	mls	r3, r1, r3, r2
   2dbfc:	cmp	r3, #0
   2dc00:	bne	2dde4 <GetDataSlab+0x11ce0>
   2dc04:	ldr	r2, [r0, #4]
   2dc08:	str	r3, [r5, #4]
   2dc0c:	ldr	r1, [sp, #196]	; 0xc4
   2dc10:	sdiv	r3, lr, r2
   2dc14:	ldr	r1, [r1, r4, lsl #2]
   2dc18:	mls	r3, r2, r3, lr
   2dc1c:	cmp	r3, #0
   2dc20:	subne	r3, r2, r3
   2dc24:	ldrne	r2, [r0]
   2dc28:	mlane	r3, r1, r2, r3
   2dc2c:	bne	2dc40 <GetDataSlab+0x11b3c>
   2dc30:	cmp	r1, #0
   2dc34:	beq	2dc48 <GetDataSlab+0x11b44>
   2dc38:	ldr	r3, [r0]
   2dc3c:	mul	r3, r3, r1
   2dc40:	add	ip, ip, r3
   2dc44:	add	lr, lr, r3
   2dc48:	add	r4, r4, #1
   2dc4c:	add	r0, r0, #4
   2dc50:	add	r5, r5, #4
   2dc54:	b	2dbd4 <GetDataSlab+0x11ad0>
   2dc58:	ldr	r3, [sl, r2, lsl #2]
   2dc5c:	mov	r6, ip
   2dc60:	sub	r3, r3, #1
   2dc64:	str	r3, [r4, #4]
   2dc68:	ldr	r3, [r5], #4
   2dc6c:	mov	r1, r5
   2dc70:	str	r3, [ip, #4]
   2dc74:	cmp	r1, fp
   2dc78:	bne	2dca8 <GetDataSlab+0x11ba4>
   2dc7c:	ldr	r1, [sp, #196]	; 0xc4
   2dc80:	add	ip, ip, #4
   2dc84:	add	r4, r4, #4
   2dc88:	ldr	r3, [sp, #204]	; 0xcc
   2dc8c:	ldr	r1, [r1, r2, lsl #2]
   2dc90:	ldr	r3, [r3, r2, lsl #2]
   2dc94:	add	r2, r2, #1
   2dc98:	mul	r9, r3, r9
   2dc9c:	ldr	r3, [r6]
   2dca0:	mla	lr, r1, r3, lr
   2dca4:	b	2db4c <GetDataSlab+0x11a48>
   2dca8:	str	r1, [sp, #16]
   2dcac:	ldr	r3, [r1, #-4]!
   2dcb0:	ldr	r0, [r4, #4]
   2dcb4:	mul	r3, r3, r0
   2dcb8:	ldr	r0, [ip, #4]
   2dcbc:	str	r3, [r4, #4]
   2dcc0:	ldr	r3, [sp, #16]
   2dcc4:	ldr	r3, [r3]
   2dcc8:	mul	r3, r3, r0
   2dccc:	str	r3, [ip, #4]
   2dcd0:	b	2dc74 <GetDataSlab+0x11b70>
   2dcd4:	ldrsb	r0, [ip, r2]
   2dcd8:	add	r2, r2, #1
   2dcdc:	strh	r0, [r1], #2
   2dce0:	b	2dd24 <GetDataSlab+0x11c20>
   2dce4:	add	r3, sp, #152	; 0x98
   2dce8:	add	r3, r3, r0, lsl #2
   2dcec:	ldr	r3, [r3, #-120]	; 0xffffff88
   2dcf0:	add	lr, lr, r3
   2dcf4:	add	ip, ip, r3
   2dcf8:	add	r6, r6, r7
   2dcfc:	cmp	r6, r9
   2dd00:	bge	1c230 <GetDataSlab+0x12c>
   2dd04:	ldr	r2, [sp]
   2dd08:	ldr	r3, [sp, #196]	; 0xc4
   2dd0c:	add	r1, r2, r6, lsl #1
   2dd10:	mov	r2, #0
   2dd14:	ldr	r3, [r3]
   2dd18:	cmp	r3, #0
   2dd1c:	addne	ip, ip, r3
   2dd20:	addne	lr, lr, r3
   2dd24:	cmp	r2, r7
   2dd28:	blt	2dcd4 <GetDataSlab+0x11bd0>
   2dd2c:	ldr	r2, [sp, #8]
   2dd30:	add	r5, sp, #72	; 0x48
   2dd34:	mov	r0, #1
   2dd38:	ldr	r4, [sp, #12]
   2dd3c:	sub	r3, r2, r3
   2dd40:	add	lr, lr, r3
   2dd44:	add	ip, ip, r3
   2dd48:	ldr	r3, [sp, #208]	; 0xd0
   2dd4c:	cmp	r0, r3
   2dd50:	bge	2dcf8 <GetDataSlab+0x11bf4>
   2dd54:	ldr	r3, [r5, #4]
   2dd58:	add	r2, r3, #1
   2dd5c:	ldr	r3, [sp, #204]	; 0xcc
   2dd60:	str	r2, [r5, #4]
   2dd64:	ldr	r1, [r3, r0, lsl #2]
   2dd68:	sdiv	r3, r2, r1
   2dd6c:	mls	r3, r1, r3, r2
   2dd70:	cmp	r3, #0
   2dd74:	bne	2dce4 <GetDataSlab+0x11be0>
   2dd78:	ldr	r2, [r4, #4]
   2dd7c:	str	r3, [r5, #4]
   2dd80:	ldr	r1, [sp, #196]	; 0xc4
   2dd84:	sdiv	r3, lr, r2
   2dd88:	ldr	r1, [r1, r0, lsl #2]
   2dd8c:	mls	r3, r2, r3, lr
   2dd90:	cmp	r3, #0
   2dd94:	ldrne	r8, [r4]
   2dd98:	subne	r3, r2, r3
   2dd9c:	mlane	r3, r1, r8, r3
   2dda0:	bne	2ddb4 <GetDataSlab+0x11cb0>
   2dda4:	cmp	r1, #0
   2dda8:	beq	2ddbc <GetDataSlab+0x11cb8>
   2ddac:	ldr	r3, [r4]
   2ddb0:	mul	r3, r3, r1
   2ddb4:	add	ip, ip, r3
   2ddb8:	add	lr, lr, r3
   2ddbc:	add	r0, r0, #1
   2ddc0:	add	r4, r4, #4
   2ddc4:	add	r5, r5, #4
   2ddc8:	b	2dd48 <GetDataSlab+0x11c44>
   2ddcc:	mov	r6, #0
   2ddd0:	b	2dcfc <GetDataSlab+0x11bf8>
   2ddd4:	ldrsb	r3, [r0], r8
   2ddd8:	add	r2, r2, #1
   2dddc:	strh	r3, [r4], #2
   2dde0:	b	2dba4 <GetDataSlab+0x11aa0>
   2dde4:	add	r3, sp, #152	; 0x98
   2dde8:	add	r3, r3, r4, lsl #2
   2ddec:	ldr	r3, [r3, #-120]	; 0xffffff88
   2ddf0:	add	lr, lr, r3
   2ddf4:	add	ip, ip, r3
   2ddf8:	add	r6, r6, r7
   2ddfc:	b	2db78 <GetDataSlab+0x11a74>
   2de00:	ldr	r8, [sl]
   2de04:	add	r4, sp, #32
   2de08:	mov	r5, fp
   2de0c:	mov	lr, #0
   2de10:	mov	r2, #1
   2de14:	sub	r3, r8, #1
   2de18:	str	r3, [sp, #32]
   2de1c:	ldr	r3, [fp]
   2de20:	str	r3, [sp, #8]
   2de24:	str	r3, [sp, #112]	; 0x70
   2de28:	ldr	r3, [sp, #204]	; 0xcc
   2de2c:	ldr	r7, [r3]
   2de30:	add	r3, sp, #112	; 0x70
   2de34:	mov	ip, r3
   2de38:	str	r3, [sp, #12]
   2de3c:	mov	r9, r7
   2de40:	ldr	r3, [sp, #208]	; 0xd0
   2de44:	cmp	r2, r3
   2de48:	blt	2df4c <GetDataSlab+0x11e48>
   2de4c:	ldr	r3, [sp, #4]
   2de50:	cmp	r8, #1
   2de54:	add	ip, r3, lr
   2de58:	beq	2e0c0 <GetDataSlab+0x11fbc>
   2de5c:	bic	r3, r7, r7, asr #31
   2de60:	mov	r6, #0
   2de64:	mul	fp, r8, r7
   2de68:	mul	sl, r8, r3
   2de6c:	cmp	r6, r9
   2de70:	bge	1c230 <GetDataSlab+0x12c>
   2de74:	ldr	r3, [sp, #196]	; 0xc4
   2de78:	mov	r2, #0
   2de7c:	ldr	r1, [r3]
   2de80:	ldr	r3, [sp]
   2de84:	cmp	r1, #0
   2de88:	addne	ip, ip, r1
   2de8c:	addne	lr, lr, r1
   2de90:	add	r4, r3, r6, lsl #1
   2de94:	mov	r0, ip
   2de98:	cmp	r2, r7
   2de9c:	blt	2e0c8 <GetDataSlab+0x11fc4>
   2dea0:	ldr	r3, [sp, #8]
   2dea4:	add	r5, sp, #72	; 0x48
   2dea8:	mov	r4, #1
   2deac:	ldr	r0, [sp, #12]
   2deb0:	sub	r3, r3, r1
   2deb4:	sub	r2, r3, fp
   2deb8:	add	r3, lr, sl
   2debc:	add	lr, r3, r2
   2dec0:	add	r3, sl, r2
   2dec4:	add	ip, ip, r3
   2dec8:	ldr	r3, [sp, #208]	; 0xd0
   2decc:	cmp	r4, r3
   2ded0:	bge	2e0ec <GetDataSlab+0x11fe8>
   2ded4:	ldr	r3, [r5, #4]
   2ded8:	add	r2, r3, #1
   2dedc:	ldr	r3, [sp, #204]	; 0xcc
   2dee0:	str	r2, [r5, #4]
   2dee4:	ldr	r1, [r3, r4, lsl #2]
   2dee8:	sdiv	r3, r2, r1
   2deec:	mls	r3, r1, r3, r2
   2def0:	cmp	r3, #0
   2def4:	bne	2e0d8 <GetDataSlab+0x11fd4>
   2def8:	ldr	r2, [r0, #4]
   2defc:	str	r3, [r5, #4]
   2df00:	ldr	r1, [sp, #196]	; 0xc4
   2df04:	sdiv	r3, lr, r2
   2df08:	ldr	r1, [r1, r4, lsl #2]
   2df0c:	mls	r3, r2, r3, lr
   2df10:	cmp	r3, #0
   2df14:	subne	r3, r2, r3
   2df18:	ldrne	r2, [r0]
   2df1c:	mlane	r3, r1, r2, r3
   2df20:	bne	2df34 <GetDataSlab+0x11e30>
   2df24:	cmp	r1, #0
   2df28:	beq	2df3c <GetDataSlab+0x11e38>
   2df2c:	ldr	r3, [r0]
   2df30:	mul	r3, r3, r1
   2df34:	add	ip, ip, r3
   2df38:	add	lr, lr, r3
   2df3c:	add	r4, r4, #1
   2df40:	add	r0, r0, #4
   2df44:	add	r5, r5, #4
   2df48:	b	2dec8 <GetDataSlab+0x11dc4>
   2df4c:	ldr	r3, [sl, r2, lsl #2]
   2df50:	mov	r6, ip
   2df54:	sub	r3, r3, #1
   2df58:	str	r3, [r4, #4]
   2df5c:	ldr	r3, [r5], #4
   2df60:	mov	r1, r5
   2df64:	str	r3, [ip, #4]
   2df68:	cmp	r1, fp
   2df6c:	bne	2df9c <GetDataSlab+0x11e98>
   2df70:	ldr	r1, [sp, #196]	; 0xc4
   2df74:	add	ip, ip, #4
   2df78:	add	r4, r4, #4
   2df7c:	ldr	r3, [sp, #204]	; 0xcc
   2df80:	ldr	r1, [r1, r2, lsl #2]
   2df84:	ldr	r3, [r3, r2, lsl #2]
   2df88:	add	r2, r2, #1
   2df8c:	mul	r9, r3, r9
   2df90:	ldr	r3, [r6]
   2df94:	mla	lr, r1, r3, lr
   2df98:	b	2de40 <GetDataSlab+0x11d3c>
   2df9c:	str	r1, [sp, #16]
   2dfa0:	ldr	r3, [r1, #-4]!
   2dfa4:	ldr	r0, [r4, #4]
   2dfa8:	mul	r3, r3, r0
   2dfac:	ldr	r0, [ip, #4]
   2dfb0:	str	r3, [r4, #4]
   2dfb4:	ldr	r3, [sp, #16]
   2dfb8:	ldr	r3, [r3]
   2dfbc:	mul	r3, r3, r0
   2dfc0:	str	r3, [ip, #4]
   2dfc4:	b	2df68 <GetDataSlab+0x11e64>
   2dfc8:	ldrb	r0, [ip, r2]
   2dfcc:	add	r2, r2, #1
   2dfd0:	strh	r0, [r1], #2
   2dfd4:	b	2e018 <GetDataSlab+0x11f14>
   2dfd8:	add	r3, sp, #152	; 0x98
   2dfdc:	add	r3, r3, r0, lsl #2
   2dfe0:	ldr	r3, [r3, #-120]	; 0xffffff88
   2dfe4:	add	lr, lr, r3
   2dfe8:	add	ip, ip, r3
   2dfec:	add	r6, r6, r7
   2dff0:	cmp	r6, r9
   2dff4:	bge	1c230 <GetDataSlab+0x12c>
   2dff8:	ldr	r2, [sp]
   2dffc:	ldr	r3, [sp, #196]	; 0xc4
   2e000:	add	r1, r2, r6, lsl #1
   2e004:	mov	r2, #0
   2e008:	ldr	r3, [r3]
   2e00c:	cmp	r3, #0
   2e010:	addne	ip, ip, r3
   2e014:	addne	lr, lr, r3
   2e018:	cmp	r2, r7
   2e01c:	blt	2dfc8 <GetDataSlab+0x11ec4>
   2e020:	ldr	r2, [sp, #8]
   2e024:	add	r5, sp, #72	; 0x48
   2e028:	mov	r0, #1
   2e02c:	ldr	r4, [sp, #12]
   2e030:	sub	r3, r2, r3
   2e034:	add	lr, lr, r3
   2e038:	add	ip, ip, r3
   2e03c:	ldr	r3, [sp, #208]	; 0xd0
   2e040:	cmp	r0, r3
   2e044:	bge	2dfec <GetDataSlab+0x11ee8>
   2e048:	ldr	r3, [r5, #4]
   2e04c:	add	r2, r3, #1
   2e050:	ldr	r3, [sp, #204]	; 0xcc
   2e054:	str	r2, [r5, #4]
   2e058:	ldr	r1, [r3, r0, lsl #2]
   2e05c:	sdiv	r3, r2, r1
   2e060:	mls	r3, r1, r3, r2
   2e064:	cmp	r3, #0
   2e068:	bne	2dfd8 <GetDataSlab+0x11ed4>
   2e06c:	ldr	r2, [r4, #4]
   2e070:	str	r3, [r5, #4]
   2e074:	ldr	r1, [sp, #196]	; 0xc4
   2e078:	sdiv	r3, lr, r2
   2e07c:	ldr	r1, [r1, r0, lsl #2]
   2e080:	mls	r3, r2, r3, lr
   2e084:	cmp	r3, #0
   2e088:	ldrne	r8, [r4]
   2e08c:	subne	r3, r2, r3
   2e090:	mlane	r3, r1, r8, r3
   2e094:	bne	2e0a8 <GetDataSlab+0x11fa4>
   2e098:	cmp	r1, #0
   2e09c:	beq	2e0b0 <GetDataSlab+0x11fac>
   2e0a0:	ldr	r3, [r4]
   2e0a4:	mul	r3, r3, r1
   2e0a8:	add	ip, ip, r3
   2e0ac:	add	lr, lr, r3
   2e0b0:	add	r0, r0, #1
   2e0b4:	add	r4, r4, #4
   2e0b8:	add	r5, r5, #4
   2e0bc:	b	2e03c <GetDataSlab+0x11f38>
   2e0c0:	mov	r6, #0
   2e0c4:	b	2dff0 <GetDataSlab+0x11eec>
   2e0c8:	ldrb	r3, [r0], r8
   2e0cc:	add	r2, r2, #1
   2e0d0:	strh	r3, [r4], #2
   2e0d4:	b	2de98 <GetDataSlab+0x11d94>
   2e0d8:	add	r3, sp, #152	; 0x98
   2e0dc:	add	r3, r3, r4, lsl #2
   2e0e0:	ldr	r3, [r3, #-120]	; 0xffffff88
   2e0e4:	add	lr, lr, r3
   2e0e8:	add	ip, ip, r3
   2e0ec:	add	r6, r6, r7
   2e0f0:	b	2de6c <GetDataSlab+0x11d68>
   2e0f4:	cmp	r5, #12
   2e0f8:	bne	2e404 <GetDataSlab+0x12300>
   2e0fc:	ldr	r5, [sl]
   2e100:	add	lr, sp, #32
   2e104:	mov	r6, fp
   2e108:	mov	r4, #0
   2e10c:	mov	r2, #1
   2e110:	sub	r3, r5, #1
   2e114:	str	r3, [sp, #32]
   2e118:	ldr	r3, [fp]
   2e11c:	str	r3, [sp, #8]
   2e120:	str	r3, [sp, #112]	; 0x70
   2e124:	ldr	r3, [sp, #204]	; 0xcc
   2e128:	ldr	r7, [r3]
   2e12c:	add	r3, sp, #112	; 0x70
   2e130:	mov	ip, r3
   2e134:	str	r3, [sp, #12]
   2e138:	mov	r9, r7
   2e13c:	ldr	r3, [sp, #208]	; 0xd0
   2e140:	cmp	r2, r3
   2e144:	blt	2e258 <GetDataSlab+0x12154>
   2e148:	ldr	r3, [sp, #4]
   2e14c:	cmp	r5, #1
   2e150:	add	r0, r3, r4, lsl #3
   2e154:	beq	2e3d0 <GetDataSlab+0x122cc>
   2e158:	bic	r3, r7, r7, asr #31
   2e15c:	mov	r6, #0
   2e160:	lsl	r8, r5, #3
   2e164:	mul	sl, r5, r7
   2e168:	mul	r2, r3, r5
   2e16c:	mul	fp, r3, r8
   2e170:	str	r2, [sp, #4]
   2e174:	cmp	r6, r9
   2e178:	bge	1c230 <GetDataSlab+0x12c>
   2e17c:	ldr	r3, [sp, #196]	; 0xc4
   2e180:	mov	r2, #0
   2e184:	ldr	r1, [r3]
   2e188:	ldr	r3, [sp]
   2e18c:	cmp	r1, #0
   2e190:	addne	r0, r0, r1, lsl #3
   2e194:	addne	r4, r4, r1
   2e198:	add	lr, r3, r6, lsl #1
   2e19c:	mov	ip, r0
   2e1a0:	cmp	r2, r7
   2e1a4:	blt	2e3d8 <GetDataSlab+0x122d4>
   2e1a8:	ldr	r3, [sp, #8]
   2e1ac:	add	r5, sp, #72	; 0x48
   2e1b0:	mov	lr, #1
   2e1b4:	ldr	ip, [sp, #12]
   2e1b8:	sub	r3, r3, r1
   2e1bc:	sub	r2, r3, sl
   2e1c0:	ldr	r3, [sp, #4]
   2e1c4:	add	r3, r4, r3
   2e1c8:	add	r4, r3, r2
   2e1cc:	add	r3, fp, r2, lsl #3
   2e1d0:	add	r0, r0, r3
   2e1d4:	ldr	r3, [sp, #208]	; 0xd0
   2e1d8:	cmp	lr, r3
   2e1dc:	bge	2e3fc <GetDataSlab+0x122f8>
   2e1e0:	ldr	r3, [r5, #4]
   2e1e4:	add	r2, r3, #1
   2e1e8:	ldr	r3, [sp, #204]	; 0xcc
   2e1ec:	str	r2, [r5, #4]
   2e1f0:	ldr	r1, [r3, lr, lsl #2]
   2e1f4:	sdiv	r3, r2, r1
   2e1f8:	mls	r3, r1, r3, r2
   2e1fc:	cmp	r3, #0
   2e200:	bne	2e3e8 <GetDataSlab+0x122e4>
   2e204:	ldr	r2, [ip, #4]
   2e208:	str	r3, [r5, #4]
   2e20c:	ldr	r1, [sp, #196]	; 0xc4
   2e210:	sdiv	r3, r4, r2
   2e214:	ldr	r1, [r1, lr, lsl #2]
   2e218:	mls	r3, r2, r3, r4
   2e21c:	cmp	r3, #0
   2e220:	subne	r3, r2, r3
   2e224:	ldrne	r2, [ip]
   2e228:	mlane	r3, r1, r2, r3
   2e22c:	bne	2e240 <GetDataSlab+0x1213c>
   2e230:	cmp	r1, #0
   2e234:	beq	2e248 <GetDataSlab+0x12144>
   2e238:	ldr	r3, [ip]
   2e23c:	mul	r3, r3, r1
   2e240:	add	r0, r0, r3, lsl #3
   2e244:	add	r4, r4, r3
   2e248:	add	lr, lr, #1
   2e24c:	add	ip, ip, #4
   2e250:	add	r5, r5, #4
   2e254:	b	2e1d4 <GetDataSlab+0x120d0>
   2e258:	ldr	r3, [sl, r2, lsl #2]
   2e25c:	mov	r8, ip
   2e260:	sub	r3, r3, #1
   2e264:	str	r3, [lr, #4]
   2e268:	ldr	r3, [r6], #4
   2e26c:	mov	r1, r6
   2e270:	str	r3, [ip, #4]
   2e274:	cmp	r1, fp
   2e278:	bne	2e2a8 <GetDataSlab+0x121a4>
   2e27c:	ldr	r1, [sp, #196]	; 0xc4
   2e280:	add	ip, ip, #4
   2e284:	add	lr, lr, #4
   2e288:	ldr	r3, [sp, #204]	; 0xcc
   2e28c:	ldr	r1, [r1, r2, lsl #2]
   2e290:	ldr	r3, [r3, r2, lsl #2]
   2e294:	add	r2, r2, #1
   2e298:	mul	r9, r3, r9
   2e29c:	ldr	r3, [r8]
   2e2a0:	mla	r4, r1, r3, r4
   2e2a4:	b	2e13c <GetDataSlab+0x12038>
   2e2a8:	str	r1, [sp, #16]
   2e2ac:	ldr	r3, [r1, #-4]!
   2e2b0:	ldr	r0, [lr, #4]
   2e2b4:	mul	r3, r3, r0
   2e2b8:	ldr	r0, [ip, #4]
   2e2bc:	str	r3, [lr, #4]
   2e2c0:	ldr	r3, [sp, #16]
   2e2c4:	ldr	r3, [r3]
   2e2c8:	mul	r3, r3, r0
   2e2cc:	str	r3, [ip, #4]
   2e2d0:	b	2e274 <GetDataSlab+0x12170>
   2e2d4:	ldr	r3, [ip, #8]!
   2e2d8:	add	r1, r1, #1
   2e2dc:	strh	r3, [lr], #2
   2e2e0:	b	2e328 <GetDataSlab+0x12224>
   2e2e4:	add	r3, sp, #152	; 0x98
   2e2e8:	add	r3, r3, ip, lsl #2
   2e2ec:	ldr	r3, [r3, #-120]	; 0xffffff88
   2e2f0:	add	r0, r0, r3, lsl #3
   2e2f4:	add	r4, r4, r3
   2e2f8:	add	r6, r6, r7
   2e2fc:	cmp	r6, r9
   2e300:	bge	1c230 <GetDataSlab+0x12c>
   2e304:	ldr	r3, [sp, #196]	; 0xc4
   2e308:	mov	r1, #0
   2e30c:	ldr	r2, [r3]
   2e310:	ldr	r3, [sp]
   2e314:	cmp	r2, #0
   2e318:	addne	r0, r0, r2, lsl #3
   2e31c:	addne	r4, r4, r2
   2e320:	add	lr, r3, r6, lsl #1
   2e324:	sub	ip, r0, #8
   2e328:	cmp	r1, r7
   2e32c:	blt	2e2d4 <GetDataSlab+0x121d0>
   2e330:	ldr	r3, [sp, #8]
   2e334:	add	r5, sp, #72	; 0x48
   2e338:	mov	ip, #1
   2e33c:	ldr	lr, [sp, #12]
   2e340:	sub	r3, r3, r2
   2e344:	add	r0, r0, r3, lsl #3
   2e348:	add	r4, r4, r3
   2e34c:	ldr	r3, [sp, #208]	; 0xd0
   2e350:	cmp	ip, r3
   2e354:	bge	2e2f8 <GetDataSlab+0x121f4>
   2e358:	ldr	r3, [r5, #4]
   2e35c:	add	r2, r3, #1
   2e360:	ldr	r3, [sp, #204]	; 0xcc
   2e364:	str	r2, [r5, #4]
   2e368:	ldr	r1, [r3, ip, lsl #2]
   2e36c:	sdiv	r3, r2, r1
   2e370:	mls	r3, r1, r3, r2
   2e374:	cmp	r3, #0
   2e378:	bne	2e2e4 <GetDataSlab+0x121e0>
   2e37c:	ldr	r2, [lr, #4]
   2e380:	str	r3, [r5, #4]
   2e384:	ldr	r1, [sp, #196]	; 0xc4
   2e388:	sdiv	r3, r4, r2
   2e38c:	ldr	r1, [r1, ip, lsl #2]
   2e390:	mls	r3, r2, r3, r4
   2e394:	cmp	r3, #0
   2e398:	ldrne	r8, [lr]
   2e39c:	subne	r3, r2, r3
   2e3a0:	mlane	r3, r1, r8, r3
   2e3a4:	bne	2e3b8 <GetDataSlab+0x122b4>
   2e3a8:	cmp	r1, #0
   2e3ac:	beq	2e3c0 <GetDataSlab+0x122bc>
   2e3b0:	ldr	r3, [lr]
   2e3b4:	mul	r3, r3, r1
   2e3b8:	add	r0, r0, r3, lsl #3
   2e3bc:	add	r4, r4, r3
   2e3c0:	add	ip, ip, #1
   2e3c4:	add	lr, lr, #4
   2e3c8:	add	r5, r5, #4
   2e3cc:	b	2e34c <GetDataSlab+0x12248>
   2e3d0:	mov	r6, #0
   2e3d4:	b	2e2fc <GetDataSlab+0x121f8>
   2e3d8:	ldr	r3, [ip], r8
   2e3dc:	add	r2, r2, #1
   2e3e0:	strh	r3, [lr], #2
   2e3e4:	b	2e1a0 <GetDataSlab+0x1209c>
   2e3e8:	add	r3, sp, #152	; 0x98
   2e3ec:	add	r3, r3, lr, lsl #2
   2e3f0:	ldr	r3, [r3, #-120]	; 0xffffff88
   2e3f4:	add	r0, r0, r3, lsl #3
   2e3f8:	add	r4, r4, r3
   2e3fc:	add	r6, r6, r7
   2e400:	b	2e174 <GetDataSlab+0x12070>
   2e404:	cmp	r5, #13
   2e408:	bne	3236c <GetDataSlab+0x16268>
   2e40c:	ldr	r5, [sl]
   2e410:	add	lr, sp, #32
   2e414:	mov	r6, fp
   2e418:	mov	r4, #0
   2e41c:	mov	r2, #1
   2e420:	sub	r3, r5, #1
   2e424:	str	r3, [sp, #32]
   2e428:	ldr	r3, [fp]
   2e42c:	str	r3, [sp, #8]
   2e430:	str	r3, [sp, #112]	; 0x70
   2e434:	ldr	r3, [sp, #204]	; 0xcc
   2e438:	ldr	r7, [r3]
   2e43c:	add	r3, sp, #112	; 0x70
   2e440:	mov	ip, r3
   2e444:	str	r3, [sp, #12]
   2e448:	mov	r9, r7
   2e44c:	ldr	r3, [sp, #208]	; 0xd0
   2e450:	cmp	r2, r3
   2e454:	blt	2e568 <GetDataSlab+0x12464>
   2e458:	ldr	r3, [sp, #4]
   2e45c:	cmp	r5, #1
   2e460:	add	r0, r3, r4, lsl #3
   2e464:	beq	2e6e0 <GetDataSlab+0x125dc>
   2e468:	bic	r3, r7, r7, asr #31
   2e46c:	mov	r6, #0
   2e470:	lsl	r8, r5, #3
   2e474:	mul	sl, r5, r7
   2e478:	mul	fp, r5, r3
   2e47c:	mul	r3, r8, r3
   2e480:	str	r3, [sp, #4]
   2e484:	cmp	r6, r9
   2e488:	bge	1c230 <GetDataSlab+0x12c>
   2e48c:	ldr	r3, [sp, #196]	; 0xc4
   2e490:	mov	r2, #0
   2e494:	ldr	r1, [r3]
   2e498:	ldr	r3, [sp]
   2e49c:	cmp	r1, #0
   2e4a0:	addne	r0, r0, r1, lsl #3
   2e4a4:	addne	r4, r4, r1
   2e4a8:	add	lr, r3, r6, lsl #1
   2e4ac:	mov	ip, r0
   2e4b0:	cmp	r2, r7
   2e4b4:	blt	2e6e8 <GetDataSlab+0x125e4>
   2e4b8:	ldr	r3, [sp, #8]
   2e4bc:	add	r5, sp, #72	; 0x48
   2e4c0:	mov	lr, #1
   2e4c4:	ldr	ip, [sp, #12]
   2e4c8:	sub	r3, r3, r1
   2e4cc:	sub	r2, r3, sl
   2e4d0:	add	r3, r4, fp
   2e4d4:	add	r4, r3, r2
   2e4d8:	ldr	r3, [sp, #4]
   2e4dc:	add	r3, r3, r2, lsl #3
   2e4e0:	add	r0, r0, r3
   2e4e4:	ldr	r3, [sp, #208]	; 0xd0
   2e4e8:	cmp	lr, r3
   2e4ec:	bge	2e70c <GetDataSlab+0x12608>
   2e4f0:	ldr	r3, [r5, #4]
   2e4f4:	add	r2, r3, #1
   2e4f8:	ldr	r3, [sp, #204]	; 0xcc
   2e4fc:	str	r2, [r5, #4]
   2e500:	ldr	r1, [r3, lr, lsl #2]
   2e504:	sdiv	r3, r2, r1
   2e508:	mls	r3, r1, r3, r2
   2e50c:	cmp	r3, #0
   2e510:	bne	2e6f8 <GetDataSlab+0x125f4>
   2e514:	ldr	r2, [ip, #4]
   2e518:	str	r3, [r5, #4]
   2e51c:	ldr	r1, [sp, #196]	; 0xc4
   2e520:	sdiv	r3, r4, r2
   2e524:	ldr	r1, [r1, lr, lsl #2]
   2e528:	mls	r3, r2, r3, r4
   2e52c:	cmp	r3, #0
   2e530:	subne	r3, r2, r3
   2e534:	ldrne	r2, [ip]
   2e538:	mlane	r3, r1, r2, r3
   2e53c:	bne	2e550 <GetDataSlab+0x1244c>
   2e540:	cmp	r1, #0
   2e544:	beq	2e558 <GetDataSlab+0x12454>
   2e548:	ldr	r3, [ip]
   2e54c:	mul	r3, r3, r1
   2e550:	add	r0, r0, r3, lsl #3
   2e554:	add	r4, r4, r3
   2e558:	add	lr, lr, #1
   2e55c:	add	ip, ip, #4
   2e560:	add	r5, r5, #4
   2e564:	b	2e4e4 <GetDataSlab+0x123e0>
   2e568:	ldr	r3, [sl, r2, lsl #2]
   2e56c:	mov	r8, ip
   2e570:	sub	r3, r3, #1
   2e574:	str	r3, [lr, #4]
   2e578:	ldr	r3, [r6], #4
   2e57c:	mov	r1, r6
   2e580:	str	r3, [ip, #4]
   2e584:	cmp	r1, fp
   2e588:	bne	2e5b8 <GetDataSlab+0x124b4>
   2e58c:	ldr	r1, [sp, #196]	; 0xc4
   2e590:	add	ip, ip, #4
   2e594:	add	lr, lr, #4
   2e598:	ldr	r3, [sp, #204]	; 0xcc
   2e59c:	ldr	r1, [r1, r2, lsl #2]
   2e5a0:	ldr	r3, [r3, r2, lsl #2]
   2e5a4:	add	r2, r2, #1
   2e5a8:	mul	r9, r3, r9
   2e5ac:	ldr	r3, [r8]
   2e5b0:	mla	r4, r1, r3, r4
   2e5b4:	b	2e44c <GetDataSlab+0x12348>
   2e5b8:	str	r1, [sp, #16]
   2e5bc:	ldr	r3, [r1, #-4]!
   2e5c0:	ldr	r0, [lr, #4]
   2e5c4:	mul	r3, r3, r0
   2e5c8:	ldr	r0, [ip, #4]
   2e5cc:	str	r3, [lr, #4]
   2e5d0:	ldr	r3, [sp, #16]
   2e5d4:	ldr	r3, [r3]
   2e5d8:	mul	r3, r3, r0
   2e5dc:	str	r3, [ip, #4]
   2e5e0:	b	2e584 <GetDataSlab+0x12480>
   2e5e4:	ldr	r3, [ip, #8]!
   2e5e8:	add	r1, r1, #1
   2e5ec:	strh	r3, [lr], #2
   2e5f0:	b	2e638 <GetDataSlab+0x12534>
   2e5f4:	add	r3, sp, #152	; 0x98
   2e5f8:	add	r3, r3, ip, lsl #2
   2e5fc:	ldr	r3, [r3, #-120]	; 0xffffff88
   2e600:	add	r0, r0, r3, lsl #3
   2e604:	add	r4, r4, r3
   2e608:	add	r6, r6, r7
   2e60c:	cmp	r6, r9
   2e610:	bge	1c230 <GetDataSlab+0x12c>
   2e614:	ldr	r3, [sp, #196]	; 0xc4
   2e618:	mov	r1, #0
   2e61c:	ldr	r2, [r3]
   2e620:	ldr	r3, [sp]
   2e624:	cmp	r2, #0
   2e628:	addne	r0, r0, r2, lsl #3
   2e62c:	addne	r4, r4, r2
   2e630:	add	lr, r3, r6, lsl #1
   2e634:	sub	ip, r0, #8
   2e638:	cmp	r1, r7
   2e63c:	blt	2e5e4 <GetDataSlab+0x124e0>
   2e640:	ldr	r3, [sp, #8]
   2e644:	add	r5, sp, #72	; 0x48
   2e648:	mov	ip, #1
   2e64c:	ldr	lr, [sp, #12]
   2e650:	sub	r3, r3, r2
   2e654:	add	r0, r0, r3, lsl #3
   2e658:	add	r4, r4, r3
   2e65c:	ldr	r3, [sp, #208]	; 0xd0
   2e660:	cmp	ip, r3
   2e664:	bge	2e608 <GetDataSlab+0x12504>
   2e668:	ldr	r3, [r5, #4]
   2e66c:	add	r2, r3, #1
   2e670:	ldr	r3, [sp, #204]	; 0xcc
   2e674:	str	r2, [r5, #4]
   2e678:	ldr	r1, [r3, ip, lsl #2]
   2e67c:	sdiv	r3, r2, r1
   2e680:	mls	r3, r1, r3, r2
   2e684:	cmp	r3, #0
   2e688:	bne	2e5f4 <GetDataSlab+0x124f0>
   2e68c:	ldr	r2, [lr, #4]
   2e690:	str	r3, [r5, #4]
   2e694:	ldr	r1, [sp, #196]	; 0xc4
   2e698:	sdiv	r3, r4, r2
   2e69c:	ldr	r1, [r1, ip, lsl #2]
   2e6a0:	mls	r3, r2, r3, r4
   2e6a4:	cmp	r3, #0
   2e6a8:	ldrne	r8, [lr]
   2e6ac:	subne	r3, r2, r3
   2e6b0:	mlane	r3, r1, r8, r3
   2e6b4:	bne	2e6c8 <GetDataSlab+0x125c4>
   2e6b8:	cmp	r1, #0
   2e6bc:	beq	2e6d0 <GetDataSlab+0x125cc>
   2e6c0:	ldr	r3, [lr]
   2e6c4:	mul	r3, r3, r1
   2e6c8:	add	r0, r0, r3, lsl #3
   2e6cc:	add	r4, r4, r3
   2e6d0:	add	ip, ip, #1
   2e6d4:	add	lr, lr, #4
   2e6d8:	add	r5, r5, #4
   2e6dc:	b	2e65c <GetDataSlab+0x12558>
   2e6e0:	mov	r6, #0
   2e6e4:	b	2e60c <GetDataSlab+0x12508>
   2e6e8:	ldr	r3, [ip], r8
   2e6ec:	add	r2, r2, #1
   2e6f0:	strh	r3, [lr], #2
   2e6f4:	b	2e4b0 <GetDataSlab+0x123ac>
   2e6f8:	add	r3, sp, #152	; 0x98
   2e6fc:	add	r3, r3, lr, lsl #2
   2e700:	ldr	r3, [r3, #-120]	; 0xffffff88
   2e704:	add	r0, r0, r3, lsl #3
   2e708:	add	r4, r4, r3
   2e70c:	add	r6, r6, r7
   2e710:	b	2e484 <GetDataSlab+0x12380>
   2e714:	sub	r3, r5, #1
   2e718:	cmp	r3, #8
   2e71c:	addls	pc, pc, r3, lsl #2
   2e720:	b	2ff38 <GetDataSlab+0x13e34>
   2e724:	b	2f948 <GetDataSlab+0x13844>
   2e728:	b	2fc40 <GetDataSlab+0x13b3c>
   2e72c:	b	2f350 <GetDataSlab+0x1324c>
   2e730:	b	2f64c <GetDataSlab+0x13548>
   2e734:	b	2ed60 <GetDataSlab+0x12c5c>
   2e738:	b	2f058 <GetDataSlab+0x12f54>
   2e73c:	b	2ea54 <GetDataSlab+0x12950>
   2e740:	b	2ff38 <GetDataSlab+0x13e34>
   2e744:	b	2e748 <GetDataSlab+0x12644>
   2e748:	ldr	r7, [sl]
   2e74c:	add	r9, sp, #112	; 0x70
   2e750:	add	r4, sp, #32
   2e754:	mov	r5, fp
   2e758:	mov	r0, r9
   2e75c:	mov	lr, #0
   2e760:	mov	r2, #1
   2e764:	sub	r3, r7, #1
   2e768:	str	r3, [sp, #32]
   2e76c:	ldr	r3, [fp]
   2e770:	str	r3, [sp, #112]	; 0x70
   2e774:	ldr	r3, [sp, #204]	; 0xcc
   2e778:	ldr	r8, [r3]
   2e77c:	ldr	r3, [sp, #208]	; 0xd0
   2e780:	cmp	r2, r3
   2e784:	blt	2e884 <GetDataSlab+0x12780>
   2e788:	ldr	r3, [sp, #4]
   2e78c:	cmp	r7, #1
   2e790:	mov	r6, #0
   2e794:	add	ip, r3, lr, lsl #3
   2e798:	beq	2e930 <GetDataSlab+0x1282c>
   2e79c:	cmp	r6, r8
   2e7a0:	bge	1c230 <GetDataSlab+0x12c>
   2e7a4:	ldr	r3, [sp, #196]	; 0xc4
   2e7a8:	ldr	r3, [r3]
   2e7ac:	cmp	r3, #0
   2e7b0:	addne	ip, ip, r3, lsl #3
   2e7b4:	addne	lr, lr, r3
   2e7b8:	ldr	r3, [sp]
   2e7bc:	add	r2, r3, r6
   2e7c0:	mov	r3, #0
   2e7c4:	ldr	r1, [sp, #204]	; 0xcc
   2e7c8:	ldr	r7, [r1]
   2e7cc:	cmp	r7, r3
   2e7d0:	bgt	2ea14 <GetDataSlab+0x12910>
   2e7d4:	ldr	r3, [sp, #196]	; 0xc4
   2e7d8:	add	r5, sp, #72	; 0x48
   2e7dc:	mov	r4, r9
   2e7e0:	mov	r0, #1
   2e7e4:	ldr	r2, [fp]
   2e7e8:	ldr	r3, [r3]
   2e7ec:	sub	r3, r2, r3
   2e7f0:	ldr	r2, [sl]
   2e7f4:	mls	r3, r2, r7, r3
   2e7f8:	add	ip, ip, r3, lsl #3
   2e7fc:	add	lr, lr, r3
   2e800:	ldr	r3, [sp, #208]	; 0xd0
   2e804:	cmp	r0, r3
   2e808:	bge	2ea4c <GetDataSlab+0x12948>
   2e80c:	ldr	r3, [r5, #4]
   2e810:	add	r2, r3, #1
   2e814:	ldr	r3, [sp, #204]	; 0xcc
   2e818:	str	r2, [r5, #4]
   2e81c:	ldr	r1, [r3, r0, lsl #2]
   2e820:	sdiv	r3, r2, r1
   2e824:	mls	r3, r1, r3, r2
   2e828:	cmp	r3, #0
   2e82c:	bne	2ea38 <GetDataSlab+0x12934>
   2e830:	ldr	r2, [r4, #4]
   2e834:	str	r3, [r5, #4]
   2e838:	ldr	r1, [sp, #196]	; 0xc4
   2e83c:	sdiv	r3, lr, r2
   2e840:	ldr	r1, [r1, r0, lsl #2]
   2e844:	mls	r3, r2, r3, lr
   2e848:	cmp	r3, #0
   2e84c:	subne	r3, r2, r3
   2e850:	ldrne	r2, [r4]
   2e854:	mlane	r3, r1, r2, r3
   2e858:	bne	2e86c <GetDataSlab+0x12768>
   2e85c:	cmp	r1, #0
   2e860:	beq	2e874 <GetDataSlab+0x12770>
   2e864:	ldr	r3, [r4]
   2e868:	mul	r3, r3, r1
   2e86c:	add	ip, ip, r3, lsl #3
   2e870:	add	lr, lr, r3
   2e874:	add	r0, r0, #1
   2e878:	add	r4, r4, #4
   2e87c:	add	r5, r5, #4
   2e880:	b	2e800 <GetDataSlab+0x126fc>
   2e884:	ldr	r3, [sl, r2, lsl #2]
   2e888:	mov	r6, r0
   2e88c:	sub	r3, r3, #1
   2e890:	str	r3, [r4, #4]
   2e894:	ldr	r3, [r5], #4
   2e898:	mov	r1, r5
   2e89c:	str	r3, [r0, #4]
   2e8a0:	cmp	fp, r1
   2e8a4:	bne	2e8d4 <GetDataSlab+0x127d0>
   2e8a8:	ldr	r1, [sp, #196]	; 0xc4
   2e8ac:	add	r0, r0, #4
   2e8b0:	add	r4, r4, #4
   2e8b4:	ldr	r3, [sp, #204]	; 0xcc
   2e8b8:	ldr	r1, [r1, r2, lsl #2]
   2e8bc:	ldr	r3, [r3, r2, lsl #2]
   2e8c0:	add	r2, r2, #1
   2e8c4:	mul	r8, r3, r8
   2e8c8:	ldr	r3, [r6]
   2e8cc:	mla	lr, r1, r3, lr
   2e8d0:	b	2e77c <GetDataSlab+0x12678>
   2e8d4:	str	r1, [sp, #8]
   2e8d8:	ldr	r3, [r1, #-4]!
   2e8dc:	ldr	ip, [r4, #4]
   2e8e0:	mul	r3, r3, ip
   2e8e4:	ldr	ip, [r0, #4]
   2e8e8:	str	r3, [r4, #4]
   2e8ec:	ldr	r3, [sp, #8]
   2e8f0:	ldr	r3, [r3]
   2e8f4:	mul	r3, r3, ip
   2e8f8:	str	r3, [r0, #4]
   2e8fc:	b	2e8a0 <GetDataSlab+0x1279c>
   2e900:	vldmia	r1!, {d7}
   2e904:	add	r3, r3, #1
   2e908:	vcvt.s32.f64	s15, d7
   2e90c:	vmov	r0, s15
   2e910:	strb	r0, [r2], #1
   2e914:	b	2e95c <GetDataSlab+0x12858>
   2e918:	add	r3, sp, #152	; 0x98
   2e91c:	add	r3, r3, r0, lsl #2
   2e920:	ldr	r3, [r3, #-120]	; 0xffffff88
   2e924:	add	ip, ip, r3, lsl #3
   2e928:	add	lr, lr, r3
   2e92c:	add	r6, r6, r7
   2e930:	cmp	r6, r8
   2e934:	bge	1c230 <GetDataSlab+0x12c>
   2e938:	ldr	r3, [sp, #196]	; 0xc4
   2e93c:	ldr	r3, [r3]
   2e940:	cmp	r3, #0
   2e944:	addne	ip, ip, r3, lsl #3
   2e948:	addne	lr, lr, r3
   2e94c:	ldr	r3, [sp]
   2e950:	mov	r1, ip
   2e954:	add	r2, r3, r6
   2e958:	mov	r3, #0
   2e95c:	ldr	r0, [sp, #204]	; 0xcc
   2e960:	ldr	r7, [r0]
   2e964:	cmp	r7, r3
   2e968:	bgt	2e900 <GetDataSlab+0x127fc>
   2e96c:	ldr	r3, [sp, #196]	; 0xc4
   2e970:	add	r5, sp, #72	; 0x48
   2e974:	mov	r4, r9
   2e978:	mov	r0, #1
   2e97c:	ldr	r2, [fp]
   2e980:	ldr	r3, [r3]
   2e984:	sub	r3, r2, r3
   2e988:	add	ip, ip, r3, lsl #3
   2e98c:	add	lr, lr, r3
   2e990:	ldr	r3, [sp, #208]	; 0xd0
   2e994:	cmp	r0, r3
   2e998:	bge	2e92c <GetDataSlab+0x12828>
   2e99c:	ldr	r3, [r5, #4]
   2e9a0:	add	r2, r3, #1
   2e9a4:	ldr	r3, [sp, #204]	; 0xcc
   2e9a8:	str	r2, [r5, #4]
   2e9ac:	ldr	r1, [r3, r0, lsl #2]
   2e9b0:	sdiv	r3, r2, r1
   2e9b4:	mls	r3, r1, r3, r2
   2e9b8:	cmp	r3, #0
   2e9bc:	bne	2e918 <GetDataSlab+0x12814>
   2e9c0:	ldr	r2, [r4, #4]
   2e9c4:	str	r3, [r5, #4]
   2e9c8:	ldr	r1, [sp, #196]	; 0xc4
   2e9cc:	sdiv	r3, lr, r2
   2e9d0:	ldr	r1, [r1, r0, lsl #2]
   2e9d4:	mls	r3, r2, r3, lr
   2e9d8:	cmp	r3, #0
   2e9dc:	ldrne	sl, [r4]
   2e9e0:	subne	r3, r2, r3
   2e9e4:	mlane	r3, r1, sl, r3
   2e9e8:	bne	2e9fc <GetDataSlab+0x128f8>
   2e9ec:	cmp	r1, #0
   2e9f0:	beq	2ea04 <GetDataSlab+0x12900>
   2e9f4:	ldr	r3, [r4]
   2e9f8:	mul	r3, r3, r1
   2e9fc:	add	ip, ip, r3, lsl #3
   2ea00:	add	lr, lr, r3
   2ea04:	add	r0, r0, #1
   2ea08:	add	r4, r4, #4
   2ea0c:	add	r5, r5, #4
   2ea10:	b	2e990 <GetDataSlab+0x1288c>
   2ea14:	vldr	d7, [ip]
   2ea18:	add	r3, r3, #1
   2ea1c:	vcvt.s32.f64	s15, d7
   2ea20:	vmov	r1, s15
   2ea24:	strb	r1, [r2], #1
   2ea28:	ldr	r1, [sl]
   2ea2c:	add	ip, ip, r1, lsl #3
   2ea30:	add	lr, lr, r1
   2ea34:	b	2e7c4 <GetDataSlab+0x126c0>
   2ea38:	add	r3, sp, #152	; 0x98
   2ea3c:	add	r3, r3, r0, lsl #2
   2ea40:	ldr	r3, [r3, #-120]	; 0xffffff88
   2ea44:	add	ip, ip, r3, lsl #3
   2ea48:	add	lr, lr, r3
   2ea4c:	add	r6, r6, r7
   2ea50:	b	2e79c <GetDataSlab+0x12698>
   2ea54:	ldr	r7, [sl]
   2ea58:	add	r9, sp, #112	; 0x70
   2ea5c:	add	r4, sp, #32
   2ea60:	mov	r5, fp
   2ea64:	mov	r0, r9
   2ea68:	mov	lr, #0
   2ea6c:	mov	r2, #1
   2ea70:	sub	r3, r7, #1
   2ea74:	str	r3, [sp, #32]
   2ea78:	ldr	r3, [fp]
   2ea7c:	str	r3, [sp, #112]	; 0x70
   2ea80:	ldr	r3, [sp, #204]	; 0xcc
   2ea84:	ldr	r8, [r3]
   2ea88:	ldr	r3, [sp, #208]	; 0xd0
   2ea8c:	cmp	r2, r3
   2ea90:	blt	2eb90 <GetDataSlab+0x12a8c>
   2ea94:	ldr	r3, [sp, #4]
   2ea98:	cmp	r7, #1
   2ea9c:	mov	r6, #0
   2eaa0:	add	ip, r3, lr, lsl #2
   2eaa4:	beq	2ec3c <GetDataSlab+0x12b38>
   2eaa8:	cmp	r6, r8
   2eaac:	bge	1c230 <GetDataSlab+0x12c>
   2eab0:	ldr	r3, [sp, #196]	; 0xc4
   2eab4:	ldr	r3, [r3]
   2eab8:	cmp	r3, #0
   2eabc:	addne	ip, ip, r3, lsl #2
   2eac0:	addne	lr, lr, r3
   2eac4:	ldr	r3, [sp]
   2eac8:	add	r2, r3, r6
   2eacc:	mov	r3, #0
   2ead0:	ldr	r1, [sp, #204]	; 0xcc
   2ead4:	ldr	r7, [r1]
   2ead8:	cmp	r7, r3
   2eadc:	bgt	2ed20 <GetDataSlab+0x12c1c>
   2eae0:	ldr	r3, [sp, #196]	; 0xc4
   2eae4:	add	r5, sp, #72	; 0x48
   2eae8:	mov	r4, r9
   2eaec:	mov	r0, #1
   2eaf0:	ldr	r2, [fp]
   2eaf4:	ldr	r3, [r3]
   2eaf8:	sub	r3, r2, r3
   2eafc:	ldr	r2, [sl]
   2eb00:	mls	r3, r2, r7, r3
   2eb04:	add	ip, ip, r3, lsl #2
   2eb08:	add	lr, lr, r3
   2eb0c:	ldr	r3, [sp, #208]	; 0xd0
   2eb10:	cmp	r0, r3
   2eb14:	bge	2ed58 <GetDataSlab+0x12c54>
   2eb18:	ldr	r3, [r5, #4]
   2eb1c:	add	r2, r3, #1
   2eb20:	ldr	r3, [sp, #204]	; 0xcc
   2eb24:	str	r2, [r5, #4]
   2eb28:	ldr	r1, [r3, r0, lsl #2]
   2eb2c:	sdiv	r3, r2, r1
   2eb30:	mls	r3, r1, r3, r2
   2eb34:	cmp	r3, #0
   2eb38:	bne	2ed44 <GetDataSlab+0x12c40>
   2eb3c:	ldr	r2, [r4, #4]
   2eb40:	str	r3, [r5, #4]
   2eb44:	ldr	r1, [sp, #196]	; 0xc4
   2eb48:	sdiv	r3, lr, r2
   2eb4c:	ldr	r1, [r1, r0, lsl #2]
   2eb50:	mls	r3, r2, r3, lr
   2eb54:	cmp	r3, #0
   2eb58:	subne	r3, r2, r3
   2eb5c:	ldrne	r2, [r4]
   2eb60:	mlane	r3, r1, r2, r3
   2eb64:	bne	2eb78 <GetDataSlab+0x12a74>
   2eb68:	cmp	r1, #0
   2eb6c:	beq	2eb80 <GetDataSlab+0x12a7c>
   2eb70:	ldr	r3, [r4]
   2eb74:	mul	r3, r3, r1
   2eb78:	add	ip, ip, r3, lsl #2
   2eb7c:	add	lr, lr, r3
   2eb80:	add	r0, r0, #1
   2eb84:	add	r4, r4, #4
   2eb88:	add	r5, r5, #4
   2eb8c:	b	2eb0c <GetDataSlab+0x12a08>
   2eb90:	ldr	r3, [sl, r2, lsl #2]
   2eb94:	mov	r6, r0
   2eb98:	sub	r3, r3, #1
   2eb9c:	str	r3, [r4, #4]
   2eba0:	ldr	r3, [r5], #4
   2eba4:	mov	r1, r5
   2eba8:	str	r3, [r0, #4]
   2ebac:	cmp	fp, r1
   2ebb0:	bne	2ebe0 <GetDataSlab+0x12adc>
   2ebb4:	ldr	r1, [sp, #196]	; 0xc4
   2ebb8:	add	r0, r0, #4
   2ebbc:	add	r4, r4, #4
   2ebc0:	ldr	r3, [sp, #204]	; 0xcc
   2ebc4:	ldr	r1, [r1, r2, lsl #2]
   2ebc8:	ldr	r3, [r3, r2, lsl #2]
   2ebcc:	add	r2, r2, #1
   2ebd0:	mul	r8, r3, r8
   2ebd4:	ldr	r3, [r6]
   2ebd8:	mla	lr, r1, r3, lr
   2ebdc:	b	2ea88 <GetDataSlab+0x12984>
   2ebe0:	str	r1, [sp, #8]
   2ebe4:	ldr	r3, [r1, #-4]!
   2ebe8:	ldr	ip, [r4, #4]
   2ebec:	mul	r3, r3, ip
   2ebf0:	ldr	ip, [r0, #4]
   2ebf4:	str	r3, [r4, #4]
   2ebf8:	ldr	r3, [sp, #8]
   2ebfc:	ldr	r3, [r3]
   2ec00:	mul	r3, r3, ip
   2ec04:	str	r3, [r0, #4]
   2ec08:	b	2ebac <GetDataSlab+0x12aa8>
   2ec0c:	vldmia	r1!, {s15}
   2ec10:	add	r3, r3, #1
   2ec14:	vcvt.s32.f32	s15, s15
   2ec18:	vmov	r0, s15
   2ec1c:	strb	r0, [r2], #1
   2ec20:	b	2ec68 <GetDataSlab+0x12b64>
   2ec24:	add	r3, sp, #152	; 0x98
   2ec28:	add	r3, r3, r0, lsl #2
   2ec2c:	ldr	r3, [r3, #-120]	; 0xffffff88
   2ec30:	add	ip, ip, r3, lsl #2
   2ec34:	add	lr, lr, r3
   2ec38:	add	r6, r6, r7
   2ec3c:	cmp	r6, r8
   2ec40:	bge	1c230 <GetDataSlab+0x12c>
   2ec44:	ldr	r3, [sp, #196]	; 0xc4
   2ec48:	ldr	r3, [r3]
   2ec4c:	cmp	r3, #0
   2ec50:	addne	ip, ip, r3, lsl #2
   2ec54:	addne	lr, lr, r3
   2ec58:	ldr	r3, [sp]
   2ec5c:	mov	r1, ip
   2ec60:	add	r2, r3, r6
   2ec64:	mov	r3, #0
   2ec68:	ldr	r0, [sp, #204]	; 0xcc
   2ec6c:	ldr	r7, [r0]
   2ec70:	cmp	r7, r3
   2ec74:	bgt	2ec0c <GetDataSlab+0x12b08>
   2ec78:	ldr	r3, [sp, #196]	; 0xc4
   2ec7c:	add	r5, sp, #72	; 0x48
   2ec80:	mov	r4, r9
   2ec84:	mov	r0, #1
   2ec88:	ldr	r2, [fp]
   2ec8c:	ldr	r3, [r3]
   2ec90:	sub	r3, r2, r3
   2ec94:	add	ip, ip, r3, lsl #2
   2ec98:	add	lr, lr, r3
   2ec9c:	ldr	r3, [sp, #208]	; 0xd0
   2eca0:	cmp	r0, r3
   2eca4:	bge	2ec38 <GetDataSlab+0x12b34>
   2eca8:	ldr	r3, [r5, #4]
   2ecac:	add	r2, r3, #1
   2ecb0:	ldr	r3, [sp, #204]	; 0xcc
   2ecb4:	str	r2, [r5, #4]
   2ecb8:	ldr	r1, [r3, r0, lsl #2]
   2ecbc:	sdiv	r3, r2, r1
   2ecc0:	mls	r3, r1, r3, r2
   2ecc4:	cmp	r3, #0
   2ecc8:	bne	2ec24 <GetDataSlab+0x12b20>
   2eccc:	ldr	r2, [r4, #4]
   2ecd0:	str	r3, [r5, #4]
   2ecd4:	ldr	r1, [sp, #196]	; 0xc4
   2ecd8:	sdiv	r3, lr, r2
   2ecdc:	ldr	r1, [r1, r0, lsl #2]
   2ece0:	mls	r3, r2, r3, lr
   2ece4:	cmp	r3, #0
   2ece8:	ldrne	sl, [r4]
   2ecec:	subne	r3, r2, r3
   2ecf0:	mlane	r3, r1, sl, r3
   2ecf4:	bne	2ed08 <GetDataSlab+0x12c04>
   2ecf8:	cmp	r1, #0
   2ecfc:	beq	2ed10 <GetDataSlab+0x12c0c>
   2ed00:	ldr	r3, [r4]
   2ed04:	mul	r3, r3, r1
   2ed08:	add	ip, ip, r3, lsl #2
   2ed0c:	add	lr, lr, r3
   2ed10:	add	r0, r0, #1
   2ed14:	add	r4, r4, #4
   2ed18:	add	r5, r5, #4
   2ed1c:	b	2ec9c <GetDataSlab+0x12b98>
   2ed20:	vldr	s15, [ip]
   2ed24:	add	r3, r3, #1
   2ed28:	vcvt.s32.f32	s15, s15
   2ed2c:	vmov	r1, s15
   2ed30:	strb	r1, [r2], #1
   2ed34:	ldr	r1, [sl]
   2ed38:	add	ip, ip, r1, lsl #2
   2ed3c:	add	lr, lr, r1
   2ed40:	b	2ead0 <GetDataSlab+0x129cc>
   2ed44:	add	r3, sp, #152	; 0x98
   2ed48:	add	r3, r3, r0, lsl #2
   2ed4c:	ldr	r3, [r3, #-120]	; 0xffffff88
   2ed50:	add	ip, ip, r3, lsl #2
   2ed54:	add	lr, lr, r3
   2ed58:	add	r6, r6, r7
   2ed5c:	b	2eaa8 <GetDataSlab+0x129a4>
   2ed60:	ldr	r7, [sl]
   2ed64:	add	r9, sp, #112	; 0x70
   2ed68:	add	r4, sp, #32
   2ed6c:	mov	r5, fp
   2ed70:	mov	r0, r9
   2ed74:	mov	ip, #0
   2ed78:	mov	r2, #1
   2ed7c:	sub	r3, r7, #1
   2ed80:	str	r3, [sp, #32]
   2ed84:	ldr	r3, [fp]
   2ed88:	str	r3, [sp, #112]	; 0x70
   2ed8c:	ldr	r3, [sp, #204]	; 0xcc
   2ed90:	ldr	r8, [r3]
   2ed94:	ldr	r3, [sp, #208]	; 0xd0
   2ed98:	cmp	r2, r3
   2ed9c:	blt	2ee9c <GetDataSlab+0x12d98>
   2eda0:	ldr	r3, [sp, #4]
   2eda4:	cmp	r7, #1
   2eda8:	mov	r6, #0
   2edac:	add	r0, r3, ip, lsl #2
   2edb0:	beq	2ef40 <GetDataSlab+0x12e3c>
   2edb4:	cmp	r6, r8
   2edb8:	bge	1c230 <GetDataSlab+0x12c>
   2edbc:	ldr	r3, [sp, #196]	; 0xc4
   2edc0:	ldr	r3, [r3]
   2edc4:	cmp	r3, #0
   2edc8:	addne	r0, r0, r3, lsl #2
   2edcc:	addne	ip, ip, r3
   2edd0:	ldr	r3, [sp]
   2edd4:	add	r2, r3, r6
   2edd8:	mov	r3, #0
   2eddc:	ldr	r1, [sp, #204]	; 0xcc
   2ede0:	ldr	r7, [r1]
   2ede4:	cmp	r7, r3
   2ede8:	bgt	2f020 <GetDataSlab+0x12f1c>
   2edec:	ldr	r3, [sp, #196]	; 0xc4
   2edf0:	add	r5, sp, #72	; 0x48
   2edf4:	mov	r4, r9
   2edf8:	mov	lr, #1
   2edfc:	ldr	r2, [fp]
   2ee00:	ldr	r3, [r3]
   2ee04:	sub	r3, r2, r3
   2ee08:	ldr	r2, [sl]
   2ee0c:	mls	r3, r2, r7, r3
   2ee10:	add	r0, r0, r3, lsl #2
   2ee14:	add	ip, ip, r3
   2ee18:	ldr	r3, [sp, #208]	; 0xd0
   2ee1c:	cmp	lr, r3
   2ee20:	bge	2f050 <GetDataSlab+0x12f4c>
   2ee24:	ldr	r3, [r5, #4]
   2ee28:	add	r2, r3, #1
   2ee2c:	ldr	r3, [sp, #204]	; 0xcc
   2ee30:	str	r2, [r5, #4]
   2ee34:	ldr	r1, [r3, lr, lsl #2]
   2ee38:	sdiv	r3, r2, r1
   2ee3c:	mls	r3, r1, r3, r2
   2ee40:	cmp	r3, #0
   2ee44:	bne	2f03c <GetDataSlab+0x12f38>
   2ee48:	ldr	r2, [r4, #4]
   2ee4c:	str	r3, [r5, #4]
   2ee50:	ldr	r1, [sp, #196]	; 0xc4
   2ee54:	sdiv	r3, ip, r2
   2ee58:	ldr	r1, [r1, lr, lsl #2]
   2ee5c:	mls	r3, r2, r3, ip
   2ee60:	cmp	r3, #0
   2ee64:	subne	r3, r2, r3
   2ee68:	ldrne	r2, [r4]
   2ee6c:	mlane	r3, r1, r2, r3
   2ee70:	bne	2ee84 <GetDataSlab+0x12d80>
   2ee74:	cmp	r1, #0
   2ee78:	beq	2ee8c <GetDataSlab+0x12d88>
   2ee7c:	ldr	r3, [r4]
   2ee80:	mul	r3, r3, r1
   2ee84:	add	r0, r0, r3, lsl #2
   2ee88:	add	ip, ip, r3
   2ee8c:	add	lr, lr, #1
   2ee90:	add	r4, r4, #4
   2ee94:	add	r5, r5, #4
   2ee98:	b	2ee18 <GetDataSlab+0x12d14>
   2ee9c:	ldr	r3, [sl, r2, lsl #2]
   2eea0:	mov	r6, r0
   2eea4:	sub	r3, r3, #1
   2eea8:	str	r3, [r4, #4]
   2eeac:	ldr	r3, [r5], #4
   2eeb0:	mov	r1, r5
   2eeb4:	str	r3, [r0, #4]
   2eeb8:	cmp	fp, r1
   2eebc:	bne	2eeec <GetDataSlab+0x12de8>
   2eec0:	ldr	r1, [sp, #196]	; 0xc4
   2eec4:	add	r0, r0, #4
   2eec8:	add	r4, r4, #4
   2eecc:	ldr	r3, [sp, #204]	; 0xcc
   2eed0:	ldr	r1, [r1, r2, lsl #2]
   2eed4:	ldr	r3, [r3, r2, lsl #2]
   2eed8:	add	r2, r2, #1
   2eedc:	mul	r8, r3, r8
   2eee0:	ldr	r3, [r6]
   2eee4:	mla	ip, r1, r3, ip
   2eee8:	b	2ed94 <GetDataSlab+0x12c90>
   2eeec:	str	r1, [sp, #8]
   2eef0:	ldr	r3, [r1, #-4]!
   2eef4:	ldr	lr, [r4, #4]
   2eef8:	mul	r3, r3, lr
   2eefc:	ldr	lr, [r0, #4]
   2ef00:	str	r3, [r4, #4]
   2ef04:	ldr	r3, [sp, #8]
   2ef08:	ldr	r3, [r3]
   2ef0c:	mul	r3, r3, lr
   2ef10:	str	r3, [r0, #4]
   2ef14:	b	2eeb8 <GetDataSlab+0x12db4>
   2ef18:	ldr	r1, [r0, r3, lsl #2]
   2ef1c:	add	r3, r3, #1
   2ef20:	strb	r1, [r2], #1
   2ef24:	b	2ef68 <GetDataSlab+0x12e64>
   2ef28:	add	r3, sp, #152	; 0x98
   2ef2c:	add	r3, r3, lr, lsl #2
   2ef30:	ldr	r3, [r3, #-120]	; 0xffffff88
   2ef34:	add	r0, r0, r3, lsl #2
   2ef38:	add	ip, ip, r3
   2ef3c:	add	r6, r6, r7
   2ef40:	cmp	r6, r8
   2ef44:	bge	1c230 <GetDataSlab+0x12c>
   2ef48:	ldr	r3, [sp, #196]	; 0xc4
   2ef4c:	ldr	r3, [r3]
   2ef50:	cmp	r3, #0
   2ef54:	addne	r0, r0, r3, lsl #2
   2ef58:	addne	ip, ip, r3
   2ef5c:	ldr	r3, [sp]
   2ef60:	add	r2, r3, r6
   2ef64:	mov	r3, #0
   2ef68:	ldr	r1, [sp, #204]	; 0xcc
   2ef6c:	ldr	r7, [r1]
   2ef70:	cmp	r7, r3
   2ef74:	bgt	2ef18 <GetDataSlab+0x12e14>
   2ef78:	ldr	r3, [sp, #196]	; 0xc4
   2ef7c:	add	r5, sp, #72	; 0x48
   2ef80:	mov	r4, r9
   2ef84:	mov	lr, #1
   2ef88:	ldr	r2, [fp]
   2ef8c:	ldr	r3, [r3]
   2ef90:	sub	r3, r2, r3
   2ef94:	add	r0, r0, r3, lsl #2
   2ef98:	add	ip, ip, r3
   2ef9c:	ldr	r3, [sp, #208]	; 0xd0
   2efa0:	cmp	lr, r3
   2efa4:	bge	2ef3c <GetDataSlab+0x12e38>
   2efa8:	ldr	r3, [r5, #4]
   2efac:	add	r2, r3, #1
   2efb0:	ldr	r3, [sp, #204]	; 0xcc
   2efb4:	str	r2, [r5, #4]
   2efb8:	ldr	r1, [r3, lr, lsl #2]
   2efbc:	sdiv	r3, r2, r1
   2efc0:	mls	r3, r1, r3, r2
   2efc4:	cmp	r3, #0
   2efc8:	bne	2ef28 <GetDataSlab+0x12e24>
   2efcc:	ldr	r2, [r4, #4]
   2efd0:	str	r3, [r5, #4]
   2efd4:	ldr	r1, [sp, #196]	; 0xc4
   2efd8:	sdiv	r3, ip, r2
   2efdc:	ldr	r1, [r1, lr, lsl #2]
   2efe0:	mls	r3, r2, r3, ip
   2efe4:	cmp	r3, #0
   2efe8:	ldrne	sl, [r4]
   2efec:	subne	r3, r2, r3
   2eff0:	mlane	r3, r1, sl, r3
   2eff4:	bne	2f008 <GetDataSlab+0x12f04>
   2eff8:	cmp	r1, #0
   2effc:	beq	2f010 <GetDataSlab+0x12f0c>
   2f000:	ldr	r3, [r4]
   2f004:	mul	r3, r3, r1
   2f008:	add	r0, r0, r3, lsl #2
   2f00c:	add	ip, ip, r3
   2f010:	add	lr, lr, #1
   2f014:	add	r4, r4, #4
   2f018:	add	r5, r5, #4
   2f01c:	b	2ef9c <GetDataSlab+0x12e98>
   2f020:	ldr	r1, [r0]
   2f024:	add	r3, r3, #1
   2f028:	strb	r1, [r2], #1
   2f02c:	ldr	r1, [sl]
   2f030:	add	r0, r0, r1, lsl #2
   2f034:	add	ip, ip, r1
   2f038:	b	2eddc <GetDataSlab+0x12cd8>
   2f03c:	add	r3, sp, #152	; 0x98
   2f040:	add	r3, r3, lr, lsl #2
   2f044:	ldr	r3, [r3, #-120]	; 0xffffff88
   2f048:	add	r0, r0, r3, lsl #2
   2f04c:	add	ip, ip, r3
   2f050:	add	r6, r6, r7
   2f054:	b	2edb4 <GetDataSlab+0x12cb0>
   2f058:	ldr	r7, [sl]
   2f05c:	add	r9, sp, #112	; 0x70
   2f060:	add	r4, sp, #32
   2f064:	mov	r5, fp
   2f068:	mov	r0, r9
   2f06c:	mov	ip, #0
   2f070:	mov	r2, #1
   2f074:	sub	r3, r7, #1
   2f078:	str	r3, [sp, #32]
   2f07c:	ldr	r3, [fp]
   2f080:	str	r3, [sp, #112]	; 0x70
   2f084:	ldr	r3, [sp, #204]	; 0xcc
   2f088:	ldr	r8, [r3]
   2f08c:	ldr	r3, [sp, #208]	; 0xd0
   2f090:	cmp	r2, r3
   2f094:	blt	2f194 <GetDataSlab+0x13090>
   2f098:	ldr	r3, [sp, #4]
   2f09c:	cmp	r7, #1
   2f0a0:	mov	r6, #0
   2f0a4:	add	r0, r3, ip, lsl #2
   2f0a8:	beq	2f238 <GetDataSlab+0x13134>
   2f0ac:	cmp	r6, r8
   2f0b0:	bge	1c230 <GetDataSlab+0x12c>
   2f0b4:	ldr	r3, [sp, #196]	; 0xc4
   2f0b8:	ldr	r3, [r3]
   2f0bc:	cmp	r3, #0
   2f0c0:	addne	r0, r0, r3, lsl #2
   2f0c4:	addne	ip, ip, r3
   2f0c8:	ldr	r3, [sp]
   2f0cc:	add	r2, r3, r6
   2f0d0:	mov	r3, #0
   2f0d4:	ldr	r1, [sp, #204]	; 0xcc
   2f0d8:	ldr	r7, [r1]
   2f0dc:	cmp	r7, r3
   2f0e0:	bgt	2f318 <GetDataSlab+0x13214>
   2f0e4:	ldr	r3, [sp, #196]	; 0xc4
   2f0e8:	add	r5, sp, #72	; 0x48
   2f0ec:	mov	r4, r9
   2f0f0:	mov	lr, #1
   2f0f4:	ldr	r2, [fp]
   2f0f8:	ldr	r3, [r3]
   2f0fc:	sub	r3, r2, r3
   2f100:	ldr	r2, [sl]
   2f104:	mls	r3, r2, r7, r3
   2f108:	add	r0, r0, r3, lsl #2
   2f10c:	add	ip, ip, r3
   2f110:	ldr	r3, [sp, #208]	; 0xd0
   2f114:	cmp	lr, r3
   2f118:	bge	2f348 <GetDataSlab+0x13244>
   2f11c:	ldr	r3, [r5, #4]
   2f120:	add	r2, r3, #1
   2f124:	ldr	r3, [sp, #204]	; 0xcc
   2f128:	str	r2, [r5, #4]
   2f12c:	ldr	r1, [r3, lr, lsl #2]
   2f130:	sdiv	r3, r2, r1
   2f134:	mls	r3, r1, r3, r2
   2f138:	cmp	r3, #0
   2f13c:	bne	2f334 <GetDataSlab+0x13230>
   2f140:	ldr	r2, [r4, #4]
   2f144:	str	r3, [r5, #4]
   2f148:	ldr	r1, [sp, #196]	; 0xc4
   2f14c:	sdiv	r3, ip, r2
   2f150:	ldr	r1, [r1, lr, lsl #2]
   2f154:	mls	r3, r2, r3, ip
   2f158:	cmp	r3, #0
   2f15c:	subne	r3, r2, r3
   2f160:	ldrne	r2, [r4]
   2f164:	mlane	r3, r1, r2, r3
   2f168:	bne	2f17c <GetDataSlab+0x13078>
   2f16c:	cmp	r1, #0
   2f170:	beq	2f184 <GetDataSlab+0x13080>
   2f174:	ldr	r3, [r4]
   2f178:	mul	r3, r3, r1
   2f17c:	add	r0, r0, r3, lsl #2
   2f180:	add	ip, ip, r3
   2f184:	add	lr, lr, #1
   2f188:	add	r4, r4, #4
   2f18c:	add	r5, r5, #4
   2f190:	b	2f110 <GetDataSlab+0x1300c>
   2f194:	ldr	r3, [sl, r2, lsl #2]
   2f198:	mov	r6, r0
   2f19c:	sub	r3, r3, #1
   2f1a0:	str	r3, [r4, #4]
   2f1a4:	ldr	r3, [r5], #4
   2f1a8:	mov	r1, r5
   2f1ac:	str	r3, [r0, #4]
   2f1b0:	cmp	fp, r1
   2f1b4:	bne	2f1e4 <GetDataSlab+0x130e0>
   2f1b8:	ldr	r1, [sp, #196]	; 0xc4
   2f1bc:	add	r0, r0, #4
   2f1c0:	add	r4, r4, #4
   2f1c4:	ldr	r3, [sp, #204]	; 0xcc
   2f1c8:	ldr	r1, [r1, r2, lsl #2]
   2f1cc:	ldr	r3, [r3, r2, lsl #2]
   2f1d0:	add	r2, r2, #1
   2f1d4:	mul	r8, r3, r8
   2f1d8:	ldr	r3, [r6]
   2f1dc:	mla	ip, r1, r3, ip
   2f1e0:	b	2f08c <GetDataSlab+0x12f88>
   2f1e4:	str	r1, [sp, #8]
   2f1e8:	ldr	r3, [r1, #-4]!
   2f1ec:	ldr	lr, [r4, #4]
   2f1f0:	mul	r3, r3, lr
   2f1f4:	ldr	lr, [r0, #4]
   2f1f8:	str	r3, [r4, #4]
   2f1fc:	ldr	r3, [sp, #8]
   2f200:	ldr	r3, [r3]
   2f204:	mul	r3, r3, lr
   2f208:	str	r3, [r0, #4]
   2f20c:	b	2f1b0 <GetDataSlab+0x130ac>
   2f210:	ldr	r1, [r0, r3, lsl #2]
   2f214:	add	r3, r3, #1
   2f218:	strb	r1, [r2], #1
   2f21c:	b	2f260 <GetDataSlab+0x1315c>
   2f220:	add	r3, sp, #152	; 0x98
   2f224:	add	r3, r3, lr, lsl #2
   2f228:	ldr	r3, [r3, #-120]	; 0xffffff88
   2f22c:	add	r0, r0, r3, lsl #2
   2f230:	add	ip, ip, r3
   2f234:	add	r6, r6, r7
   2f238:	cmp	r6, r8
   2f23c:	bge	1c230 <GetDataSlab+0x12c>
   2f240:	ldr	r3, [sp, #196]	; 0xc4
   2f244:	ldr	r3, [r3]
   2f248:	cmp	r3, #0
   2f24c:	addne	r0, r0, r3, lsl #2
   2f250:	addne	ip, ip, r3
   2f254:	ldr	r3, [sp]
   2f258:	add	r2, r3, r6
   2f25c:	mov	r3, #0
   2f260:	ldr	r1, [sp, #204]	; 0xcc
   2f264:	ldr	r7, [r1]
   2f268:	cmp	r7, r3
   2f26c:	bgt	2f210 <GetDataSlab+0x1310c>
   2f270:	ldr	r3, [sp, #196]	; 0xc4
   2f274:	add	r5, sp, #72	; 0x48
   2f278:	mov	r4, r9
   2f27c:	mov	lr, #1
   2f280:	ldr	r2, [fp]
   2f284:	ldr	r3, [r3]
   2f288:	sub	r3, r2, r3
   2f28c:	add	r0, r0, r3, lsl #2
   2f290:	add	ip, ip, r3
   2f294:	ldr	r3, [sp, #208]	; 0xd0
   2f298:	cmp	lr, r3
   2f29c:	bge	2f234 <GetDataSlab+0x13130>
   2f2a0:	ldr	r3, [r5, #4]
   2f2a4:	add	r2, r3, #1
   2f2a8:	ldr	r3, [sp, #204]	; 0xcc
   2f2ac:	str	r2, [r5, #4]
   2f2b0:	ldr	r1, [r3, lr, lsl #2]
   2f2b4:	sdiv	r3, r2, r1
   2f2b8:	mls	r3, r1, r3, r2
   2f2bc:	cmp	r3, #0
   2f2c0:	bne	2f220 <GetDataSlab+0x1311c>
   2f2c4:	ldr	r2, [r4, #4]
   2f2c8:	str	r3, [r5, #4]
   2f2cc:	ldr	r1, [sp, #196]	; 0xc4
   2f2d0:	sdiv	r3, ip, r2
   2f2d4:	ldr	r1, [r1, lr, lsl #2]
   2f2d8:	mls	r3, r2, r3, ip
   2f2dc:	cmp	r3, #0
   2f2e0:	ldrne	sl, [r4]
   2f2e4:	subne	r3, r2, r3
   2f2e8:	mlane	r3, r1, sl, r3
   2f2ec:	bne	2f300 <GetDataSlab+0x131fc>
   2f2f0:	cmp	r1, #0
   2f2f4:	beq	2f308 <GetDataSlab+0x13204>
   2f2f8:	ldr	r3, [r4]
   2f2fc:	mul	r3, r3, r1
   2f300:	add	r0, r0, r3, lsl #2
   2f304:	add	ip, ip, r3
   2f308:	add	lr, lr, #1
   2f30c:	add	r4, r4, #4
   2f310:	add	r5, r5, #4
   2f314:	b	2f294 <GetDataSlab+0x13190>
   2f318:	ldr	r1, [r0]
   2f31c:	add	r3, r3, #1
   2f320:	strb	r1, [r2], #1
   2f324:	ldr	r1, [sl]
   2f328:	add	r0, r0, r1, lsl #2
   2f32c:	add	ip, ip, r1
   2f330:	b	2f0d4 <GetDataSlab+0x12fd0>
   2f334:	add	r3, sp, #152	; 0x98
   2f338:	add	r3, r3, lr, lsl #2
   2f33c:	ldr	r3, [r3, #-120]	; 0xffffff88
   2f340:	add	r0, r0, r3, lsl #2
   2f344:	add	ip, ip, r3
   2f348:	add	r6, r6, r7
   2f34c:	b	2f0ac <GetDataSlab+0x12fa8>
   2f350:	ldr	r7, [sl]
   2f354:	add	r9, sp, #112	; 0x70
   2f358:	add	r4, sp, #32
   2f35c:	mov	r5, fp
   2f360:	mov	r0, r9
   2f364:	mov	lr, #0
   2f368:	mov	r2, #1
   2f36c:	sub	r3, r7, #1
   2f370:	str	r3, [sp, #32]
   2f374:	ldr	r3, [fp]
   2f378:	str	r3, [sp, #112]	; 0x70
   2f37c:	ldr	r3, [sp, #204]	; 0xcc
   2f380:	ldr	r8, [r3]
   2f384:	ldr	r3, [sp, #208]	; 0xd0
   2f388:	cmp	r2, r3
   2f38c:	blt	2f48c <GetDataSlab+0x13388>
   2f390:	ldr	r3, [sp, #4]
   2f394:	cmp	r7, #1
   2f398:	mov	r6, #0
   2f39c:	add	ip, r3, lr, lsl #1
   2f3a0:	beq	2f530 <GetDataSlab+0x1342c>
   2f3a4:	cmp	r6, r8
   2f3a8:	bge	1c230 <GetDataSlab+0x12c>
   2f3ac:	ldr	r3, [sp, #196]	; 0xc4
   2f3b0:	ldr	r3, [r3]
   2f3b4:	cmp	r3, #0
   2f3b8:	addne	ip, ip, r3, lsl #1
   2f3bc:	addne	lr, lr, r3
   2f3c0:	ldr	r3, [sp]
   2f3c4:	add	r2, r3, r6
   2f3c8:	mov	r3, #0
   2f3cc:	ldr	r1, [sp, #204]	; 0xcc
   2f3d0:	ldr	r7, [r1]
   2f3d4:	cmp	r7, r3
   2f3d8:	bgt	2f614 <GetDataSlab+0x13510>
   2f3dc:	ldr	r3, [sp, #196]	; 0xc4
   2f3e0:	add	r5, sp, #72	; 0x48
   2f3e4:	mov	r4, r9
   2f3e8:	mov	r0, #1
   2f3ec:	ldr	r2, [fp]
   2f3f0:	ldr	r3, [r3]
   2f3f4:	sub	r3, r2, r3
   2f3f8:	ldr	r2, [sl]
   2f3fc:	mls	r3, r2, r7, r3
   2f400:	add	ip, ip, r3, lsl #1
   2f404:	add	lr, lr, r3
   2f408:	ldr	r3, [sp, #208]	; 0xd0
   2f40c:	cmp	r0, r3
   2f410:	bge	2f644 <GetDataSlab+0x13540>
   2f414:	ldr	r3, [r5, #4]
   2f418:	add	r2, r3, #1
   2f41c:	ldr	r3, [sp, #204]	; 0xcc
   2f420:	str	r2, [r5, #4]
   2f424:	ldr	r1, [r3, r0, lsl #2]
   2f428:	sdiv	r3, r2, r1
   2f42c:	mls	r3, r1, r3, r2
   2f430:	cmp	r3, #0
   2f434:	bne	2f630 <GetDataSlab+0x1352c>
   2f438:	ldr	r2, [r4, #4]
   2f43c:	str	r3, [r5, #4]
   2f440:	ldr	r1, [sp, #196]	; 0xc4
   2f444:	sdiv	r3, lr, r2
   2f448:	ldr	r1, [r1, r0, lsl #2]
   2f44c:	mls	r3, r2, r3, lr
   2f450:	cmp	r3, #0
   2f454:	subne	r3, r2, r3
   2f458:	ldrne	r2, [r4]
   2f45c:	mlane	r3, r1, r2, r3
   2f460:	bne	2f474 <GetDataSlab+0x13370>
   2f464:	cmp	r1, #0
   2f468:	beq	2f47c <GetDataSlab+0x13378>
   2f46c:	ldr	r3, [r4]
   2f470:	mul	r3, r3, r1
   2f474:	add	ip, ip, r3, lsl #1
   2f478:	add	lr, lr, r3
   2f47c:	add	r0, r0, #1
   2f480:	add	r4, r4, #4
   2f484:	add	r5, r5, #4
   2f488:	b	2f408 <GetDataSlab+0x13304>
   2f48c:	ldr	r3, [sl, r2, lsl #2]
   2f490:	mov	r6, r0
   2f494:	sub	r3, r3, #1
   2f498:	str	r3, [r4, #4]
   2f49c:	ldr	r3, [r5], #4
   2f4a0:	mov	r1, r5
   2f4a4:	str	r3, [r0, #4]
   2f4a8:	cmp	r1, fp
   2f4ac:	bne	2f4dc <GetDataSlab+0x133d8>
   2f4b0:	ldr	r1, [sp, #196]	; 0xc4
   2f4b4:	add	r0, r0, #4
   2f4b8:	add	r4, r4, #4
   2f4bc:	ldr	r3, [sp, #204]	; 0xcc
   2f4c0:	ldr	r1, [r1, r2, lsl #2]
   2f4c4:	ldr	r3, [r3, r2, lsl #2]
   2f4c8:	add	r2, r2, #1
   2f4cc:	mul	r8, r3, r8
   2f4d0:	ldr	r3, [r6]
   2f4d4:	mla	lr, r1, r3, lr
   2f4d8:	b	2f384 <GetDataSlab+0x13280>
   2f4dc:	str	r1, [sp, #8]
   2f4e0:	ldr	r3, [r1, #-4]!
   2f4e4:	ldr	ip, [r4, #4]
   2f4e8:	mul	r3, r3, ip
   2f4ec:	ldr	ip, [r0, #4]
   2f4f0:	str	r3, [r4, #4]
   2f4f4:	ldr	r3, [sp, #8]
   2f4f8:	ldr	r3, [r3]
   2f4fc:	mul	r3, r3, ip
   2f500:	str	r3, [r0, #4]
   2f504:	b	2f4a8 <GetDataSlab+0x133a4>
   2f508:	ldrh	r0, [r2, #2]!
   2f50c:	add	r3, r3, #1
   2f510:	strb	r0, [r1], #1
   2f514:	b	2f55c <GetDataSlab+0x13458>
   2f518:	add	r3, sp, #152	; 0x98
   2f51c:	add	r3, r3, r0, lsl #2
   2f520:	ldr	r3, [r3, #-120]	; 0xffffff88
   2f524:	add	ip, ip, r3, lsl #1
   2f528:	add	lr, lr, r3
   2f52c:	add	r6, r6, r7
   2f530:	cmp	r6, r8
   2f534:	bge	1c230 <GetDataSlab+0x12c>
   2f538:	ldr	r3, [sp, #196]	; 0xc4
   2f53c:	ldr	r3, [r3]
   2f540:	cmp	r3, #0
   2f544:	addne	ip, ip, r3, lsl #1
   2f548:	addne	lr, lr, r3
   2f54c:	ldr	r3, [sp]
   2f550:	sub	r2, ip, #2
   2f554:	add	r1, r3, r6
   2f558:	mov	r3, #0
   2f55c:	ldr	r0, [sp, #204]	; 0xcc
   2f560:	ldr	r7, [r0]
   2f564:	cmp	r7, r3
   2f568:	bgt	2f508 <GetDataSlab+0x13404>
   2f56c:	ldr	r3, [sp, #196]	; 0xc4
   2f570:	add	r5, sp, #72	; 0x48
   2f574:	mov	r4, r9
   2f578:	mov	r0, #1
   2f57c:	ldr	r2, [fp]
   2f580:	ldr	r3, [r3]
   2f584:	sub	r3, r2, r3
   2f588:	add	ip, ip, r3, lsl #1
   2f58c:	add	lr, lr, r3
   2f590:	ldr	r3, [sp, #208]	; 0xd0
   2f594:	cmp	r0, r3
   2f598:	bge	2f52c <GetDataSlab+0x13428>
   2f59c:	ldr	r3, [r5, #4]
   2f5a0:	add	r2, r3, #1
   2f5a4:	ldr	r3, [sp, #204]	; 0xcc
   2f5a8:	str	r2, [r5, #4]
   2f5ac:	ldr	r1, [r3, r0, lsl #2]
   2f5b0:	sdiv	r3, r2, r1
   2f5b4:	mls	r3, r1, r3, r2
   2f5b8:	cmp	r3, #0
   2f5bc:	bne	2f518 <GetDataSlab+0x13414>
   2f5c0:	ldr	r2, [r4, #4]
   2f5c4:	str	r3, [r5, #4]
   2f5c8:	ldr	r1, [sp, #196]	; 0xc4
   2f5cc:	sdiv	r3, lr, r2
   2f5d0:	ldr	r1, [r1, r0, lsl #2]
   2f5d4:	mls	r3, r2, r3, lr
   2f5d8:	cmp	r3, #0
   2f5dc:	ldrne	sl, [r4]
   2f5e0:	subne	r3, r2, r3
   2f5e4:	mlane	r3, r1, sl, r3
   2f5e8:	bne	2f5fc <GetDataSlab+0x134f8>
   2f5ec:	cmp	r1, #0
   2f5f0:	beq	2f604 <GetDataSlab+0x13500>
   2f5f4:	ldr	r3, [r4]
   2f5f8:	mul	r3, r3, r1
   2f5fc:	add	ip, ip, r3, lsl #1
   2f600:	add	lr, lr, r3
   2f604:	add	r0, r0, #1
   2f608:	add	r4, r4, #4
   2f60c:	add	r5, r5, #4
   2f610:	b	2f590 <GetDataSlab+0x1348c>
   2f614:	ldrh	r1, [ip]
   2f618:	add	r3, r3, #1
   2f61c:	strb	r1, [r2], #1
   2f620:	ldr	r1, [sl]
   2f624:	add	ip, ip, r1, lsl #1
   2f628:	add	lr, lr, r1
   2f62c:	b	2f3cc <GetDataSlab+0x132c8>
   2f630:	add	r3, sp, #152	; 0x98
   2f634:	add	r3, r3, r0, lsl #2
   2f638:	ldr	r3, [r3, #-120]	; 0xffffff88
   2f63c:	add	ip, ip, r3, lsl #1
   2f640:	add	lr, lr, r3
   2f644:	add	r6, r6, r7
   2f648:	b	2f3a4 <GetDataSlab+0x132a0>
   2f64c:	ldr	r7, [sl]
   2f650:	add	r9, sp, #112	; 0x70
   2f654:	add	r4, sp, #32
   2f658:	mov	r5, fp
   2f65c:	mov	r0, r9
   2f660:	mov	lr, #0
   2f664:	mov	r2, #1
   2f668:	sub	r3, r7, #1
   2f66c:	str	r3, [sp, #32]
   2f670:	ldr	r3, [fp]
   2f674:	str	r3, [sp, #112]	; 0x70
   2f678:	ldr	r3, [sp, #204]	; 0xcc
   2f67c:	ldr	r8, [r3]
   2f680:	ldr	r3, [sp, #208]	; 0xd0
   2f684:	cmp	r2, r3
   2f688:	blt	2f788 <GetDataSlab+0x13684>
   2f68c:	ldr	r3, [sp, #4]
   2f690:	cmp	r7, #1
   2f694:	mov	r6, #0
   2f698:	add	ip, r3, lr, lsl #1
   2f69c:	beq	2f82c <GetDataSlab+0x13728>
   2f6a0:	cmp	r6, r8
   2f6a4:	bge	1c230 <GetDataSlab+0x12c>
   2f6a8:	ldr	r3, [sp, #196]	; 0xc4
   2f6ac:	ldr	r3, [r3]
   2f6b0:	cmp	r3, #0
   2f6b4:	addne	ip, ip, r3, lsl #1
   2f6b8:	addne	lr, lr, r3
   2f6bc:	ldr	r3, [sp]
   2f6c0:	add	r2, r3, r6
   2f6c4:	mov	r3, #0
   2f6c8:	ldr	r1, [sp, #204]	; 0xcc
   2f6cc:	ldr	r7, [r1]
   2f6d0:	cmp	r7, r3
   2f6d4:	bgt	2f910 <GetDataSlab+0x1380c>
   2f6d8:	ldr	r3, [sp, #196]	; 0xc4
   2f6dc:	add	r5, sp, #72	; 0x48
   2f6e0:	mov	r4, r9
   2f6e4:	mov	r0, #1
   2f6e8:	ldr	r2, [fp]
   2f6ec:	ldr	r3, [r3]
   2f6f0:	sub	r3, r2, r3
   2f6f4:	ldr	r2, [sl]
   2f6f8:	mls	r3, r2, r7, r3
   2f6fc:	add	ip, ip, r3, lsl #1
   2f700:	add	lr, lr, r3
   2f704:	ldr	r3, [sp, #208]	; 0xd0
   2f708:	cmp	r0, r3
   2f70c:	bge	2f940 <GetDataSlab+0x1383c>
   2f710:	ldr	r3, [r5, #4]
   2f714:	add	r2, r3, #1
   2f718:	ldr	r3, [sp, #204]	; 0xcc
   2f71c:	str	r2, [r5, #4]
   2f720:	ldr	r1, [r3, r0, lsl #2]
   2f724:	sdiv	r3, r2, r1
   2f728:	mls	r3, r1, r3, r2
   2f72c:	cmp	r3, #0
   2f730:	bne	2f92c <GetDataSlab+0x13828>
   2f734:	ldr	r2, [r4, #4]
   2f738:	str	r3, [r5, #4]
   2f73c:	ldr	r1, [sp, #196]	; 0xc4
   2f740:	sdiv	r3, lr, r2
   2f744:	ldr	r1, [r1, r0, lsl #2]
   2f748:	mls	r3, r2, r3, lr
   2f74c:	cmp	r3, #0
   2f750:	subne	r3, r2, r3
   2f754:	ldrne	r2, [r4]
   2f758:	mlane	r3, r1, r2, r3
   2f75c:	bne	2f770 <GetDataSlab+0x1366c>
   2f760:	cmp	r1, #0
   2f764:	beq	2f778 <GetDataSlab+0x13674>
   2f768:	ldr	r3, [r4]
   2f76c:	mul	r3, r3, r1
   2f770:	add	ip, ip, r3, lsl #1
   2f774:	add	lr, lr, r3
   2f778:	add	r0, r0, #1
   2f77c:	add	r4, r4, #4
   2f780:	add	r5, r5, #4
   2f784:	b	2f704 <GetDataSlab+0x13600>
   2f788:	ldr	r3, [sl, r2, lsl #2]
   2f78c:	mov	r6, r0
   2f790:	sub	r3, r3, #1
   2f794:	str	r3, [r4, #4]
   2f798:	ldr	r3, [r5], #4
   2f79c:	mov	r1, r5
   2f7a0:	str	r3, [r0, #4]
   2f7a4:	cmp	r1, fp
   2f7a8:	bne	2f7d8 <GetDataSlab+0x136d4>
   2f7ac:	ldr	r1, [sp, #196]	; 0xc4
   2f7b0:	add	r0, r0, #4
   2f7b4:	add	r4, r4, #4
   2f7b8:	ldr	r3, [sp, #204]	; 0xcc
   2f7bc:	ldr	r1, [r1, r2, lsl #2]
   2f7c0:	ldr	r3, [r3, r2, lsl #2]
   2f7c4:	add	r2, r2, #1
   2f7c8:	mul	r8, r3, r8
   2f7cc:	ldr	r3, [r6]
   2f7d0:	mla	lr, r1, r3, lr
   2f7d4:	b	2f680 <GetDataSlab+0x1357c>
   2f7d8:	str	r1, [sp, #8]
   2f7dc:	ldr	r3, [r1, #-4]!
   2f7e0:	ldr	ip, [r4, #4]
   2f7e4:	mul	r3, r3, ip
   2f7e8:	ldr	ip, [r0, #4]
   2f7ec:	str	r3, [r4, #4]
   2f7f0:	ldr	r3, [sp, #8]
   2f7f4:	ldr	r3, [r3]
   2f7f8:	mul	r3, r3, ip
   2f7fc:	str	r3, [r0, #4]
   2f800:	b	2f7a4 <GetDataSlab+0x136a0>
   2f804:	ldrh	r0, [r2, #2]!
   2f808:	add	r3, r3, #1
   2f80c:	strb	r0, [r1], #1
   2f810:	b	2f858 <GetDataSlab+0x13754>
   2f814:	add	r3, sp, #152	; 0x98
   2f818:	add	r3, r3, r0, lsl #2
   2f81c:	ldr	r3, [r3, #-120]	; 0xffffff88
   2f820:	add	ip, ip, r3, lsl #1
   2f824:	add	lr, lr, r3
   2f828:	add	r6, r6, r7
   2f82c:	cmp	r6, r8
   2f830:	bge	1c230 <GetDataSlab+0x12c>
   2f834:	ldr	r3, [sp, #196]	; 0xc4
   2f838:	ldr	r3, [r3]
   2f83c:	cmp	r3, #0
   2f840:	addne	ip, ip, r3, lsl #1
   2f844:	addne	lr, lr, r3
   2f848:	ldr	r3, [sp]
   2f84c:	sub	r2, ip, #2
   2f850:	add	r1, r3, r6
   2f854:	mov	r3, #0
   2f858:	ldr	r0, [sp, #204]	; 0xcc
   2f85c:	ldr	r7, [r0]
   2f860:	cmp	r7, r3
   2f864:	bgt	2f804 <GetDataSlab+0x13700>
   2f868:	ldr	r3, [sp, #196]	; 0xc4
   2f86c:	add	r5, sp, #72	; 0x48
   2f870:	mov	r4, r9
   2f874:	mov	r0, #1
   2f878:	ldr	r2, [fp]
   2f87c:	ldr	r3, [r3]
   2f880:	sub	r3, r2, r3
   2f884:	add	ip, ip, r3, lsl #1
   2f888:	add	lr, lr, r3
   2f88c:	ldr	r3, [sp, #208]	; 0xd0
   2f890:	cmp	r0, r3
   2f894:	bge	2f828 <GetDataSlab+0x13724>
   2f898:	ldr	r3, [r5, #4]
   2f89c:	add	r2, r3, #1
   2f8a0:	ldr	r3, [sp, #204]	; 0xcc
   2f8a4:	str	r2, [r5, #4]
   2f8a8:	ldr	r1, [r3, r0, lsl #2]
   2f8ac:	sdiv	r3, r2, r1
   2f8b0:	mls	r3, r1, r3, r2
   2f8b4:	cmp	r3, #0
   2f8b8:	bne	2f814 <GetDataSlab+0x13710>
   2f8bc:	ldr	r2, [r4, #4]
   2f8c0:	str	r3, [r5, #4]
   2f8c4:	ldr	r1, [sp, #196]	; 0xc4
   2f8c8:	sdiv	r3, lr, r2
   2f8cc:	ldr	r1, [r1, r0, lsl #2]
   2f8d0:	mls	r3, r2, r3, lr
   2f8d4:	cmp	r3, #0
   2f8d8:	ldrne	sl, [r4]
   2f8dc:	subne	r3, r2, r3
   2f8e0:	mlane	r3, r1, sl, r3
   2f8e4:	bne	2f8f8 <GetDataSlab+0x137f4>
   2f8e8:	cmp	r1, #0
   2f8ec:	beq	2f900 <GetDataSlab+0x137fc>
   2f8f0:	ldr	r3, [r4]
   2f8f4:	mul	r3, r3, r1
   2f8f8:	add	ip, ip, r3, lsl #1
   2f8fc:	add	lr, lr, r3
   2f900:	add	r0, r0, #1
   2f904:	add	r4, r4, #4
   2f908:	add	r5, r5, #4
   2f90c:	b	2f88c <GetDataSlab+0x13788>
   2f910:	ldrh	r1, [ip]
   2f914:	add	r3, r3, #1
   2f918:	strb	r1, [r2], #1
   2f91c:	ldr	r1, [sl]
   2f920:	add	ip, ip, r1, lsl #1
   2f924:	add	lr, lr, r1
   2f928:	b	2f6c8 <GetDataSlab+0x135c4>
   2f92c:	add	r3, sp, #152	; 0x98
   2f930:	add	r3, r3, r0, lsl #2
   2f934:	ldr	r3, [r3, #-120]	; 0xffffff88
   2f938:	add	ip, ip, r3, lsl #1
   2f93c:	add	lr, lr, r3
   2f940:	add	r6, r6, r7
   2f944:	b	2f6a0 <GetDataSlab+0x1359c>
   2f948:	ldr	r7, [sl]
   2f94c:	add	r9, sp, #112	; 0x70
   2f950:	add	r4, sp, #32
   2f954:	mov	r5, fp
   2f958:	mov	r0, r9
   2f95c:	mov	ip, #0
   2f960:	mov	r2, #1
   2f964:	sub	r3, r7, #1
   2f968:	str	r3, [sp, #32]
   2f96c:	ldr	r3, [fp]
   2f970:	str	r3, [sp, #112]	; 0x70
   2f974:	ldr	r3, [sp, #204]	; 0xcc
   2f978:	ldr	r8, [r3]
   2f97c:	ldr	r3, [sp, #208]	; 0xd0
   2f980:	cmp	r2, r3
   2f984:	blt	2fa84 <GetDataSlab+0x13980>
   2f988:	ldr	r3, [sp, #4]
   2f98c:	cmp	r7, #1
   2f990:	mov	r6, #0
   2f994:	add	r0, r3, ip
   2f998:	beq	2fb28 <GetDataSlab+0x13a24>
   2f99c:	cmp	r6, r8
   2f9a0:	bge	1c230 <GetDataSlab+0x12c>
   2f9a4:	ldr	r3, [sp, #196]	; 0xc4
   2f9a8:	ldr	r3, [r3]
   2f9ac:	cmp	r3, #0
   2f9b0:	addne	r0, r0, r3
   2f9b4:	addne	ip, ip, r3
   2f9b8:	ldr	r3, [sp]
   2f9bc:	add	r2, r3, r6
   2f9c0:	mov	r3, #0
   2f9c4:	ldr	r1, [sp, #204]	; 0xcc
   2f9c8:	ldr	r7, [r1]
   2f9cc:	cmp	r7, r3
   2f9d0:	bgt	2fc08 <GetDataSlab+0x13b04>
   2f9d4:	ldr	r3, [sp, #196]	; 0xc4
   2f9d8:	add	r5, sp, #72	; 0x48
   2f9dc:	mov	r4, r9
   2f9e0:	mov	lr, #1
   2f9e4:	ldr	r2, [fp]
   2f9e8:	ldr	r3, [r3]
   2f9ec:	sub	r3, r2, r3
   2f9f0:	ldr	r2, [sl]
   2f9f4:	mls	r3, r2, r7, r3
   2f9f8:	add	ip, ip, r3
   2f9fc:	add	r0, r0, r3
   2fa00:	ldr	r3, [sp, #208]	; 0xd0
   2fa04:	cmp	lr, r3
   2fa08:	bge	2fc38 <GetDataSlab+0x13b34>
   2fa0c:	ldr	r3, [r5, #4]
   2fa10:	add	r2, r3, #1
   2fa14:	ldr	r3, [sp, #204]	; 0xcc
   2fa18:	str	r2, [r5, #4]
   2fa1c:	ldr	r1, [r3, lr, lsl #2]
   2fa20:	sdiv	r3, r2, r1
   2fa24:	mls	r3, r1, r3, r2
   2fa28:	cmp	r3, #0
   2fa2c:	bne	2fc24 <GetDataSlab+0x13b20>
   2fa30:	ldr	r2, [r4, #4]
   2fa34:	str	r3, [r5, #4]
   2fa38:	ldr	r1, [sp, #196]	; 0xc4
   2fa3c:	sdiv	r3, ip, r2
   2fa40:	ldr	r1, [r1, lr, lsl #2]
   2fa44:	mls	r3, r2, r3, ip
   2fa48:	cmp	r3, #0
   2fa4c:	subne	r3, r2, r3
   2fa50:	ldrne	r2, [r4]
   2fa54:	mlane	r3, r1, r2, r3
   2fa58:	bne	2fa6c <GetDataSlab+0x13968>
   2fa5c:	cmp	r1, #0
   2fa60:	beq	2fa74 <GetDataSlab+0x13970>
   2fa64:	ldr	r3, [r4]
   2fa68:	mul	r3, r3, r1
   2fa6c:	add	r0, r0, r3
   2fa70:	add	ip, ip, r3
   2fa74:	add	lr, lr, #1
   2fa78:	add	r4, r4, #4
   2fa7c:	add	r5, r5, #4
   2fa80:	b	2fa00 <GetDataSlab+0x138fc>
   2fa84:	ldr	r3, [sl, r2, lsl #2]
   2fa88:	mov	r6, r0
   2fa8c:	sub	r3, r3, #1
   2fa90:	str	r3, [r4, #4]
   2fa94:	ldr	r3, [r5], #4
   2fa98:	mov	r1, r5
   2fa9c:	str	r3, [r0, #4]
   2faa0:	cmp	r1, fp
   2faa4:	bne	2fad4 <GetDataSlab+0x139d0>
   2faa8:	ldr	r1, [sp, #196]	; 0xc4
   2faac:	add	r0, r0, #4
   2fab0:	add	r4, r4, #4
   2fab4:	ldr	r3, [sp, #204]	; 0xcc
   2fab8:	ldr	r1, [r1, r2, lsl #2]
   2fabc:	ldr	r3, [r3, r2, lsl #2]
   2fac0:	add	r2, r2, #1
   2fac4:	mul	r8, r3, r8
   2fac8:	ldr	r3, [r6]
   2facc:	mla	ip, r1, r3, ip
   2fad0:	b	2f97c <GetDataSlab+0x13878>
   2fad4:	str	r1, [sp, #8]
   2fad8:	ldr	r3, [r1, #-4]!
   2fadc:	ldr	lr, [r4, #4]
   2fae0:	mul	r3, r3, lr
   2fae4:	ldr	lr, [r0, #4]
   2fae8:	str	r3, [r4, #4]
   2faec:	ldr	r3, [sp, #8]
   2faf0:	ldr	r3, [r3]
   2faf4:	mul	r3, r3, lr
   2faf8:	str	r3, [r0, #4]
   2fafc:	b	2faa0 <GetDataSlab+0x1399c>
   2fb00:	ldrsb	r1, [r0, r3]
   2fb04:	add	r3, r3, #1
   2fb08:	strb	r1, [r2], #1
   2fb0c:	b	2fb50 <GetDataSlab+0x13a4c>
   2fb10:	add	r3, sp, #152	; 0x98
   2fb14:	add	r3, r3, lr, lsl #2
   2fb18:	ldr	r3, [r3, #-120]	; 0xffffff88
   2fb1c:	add	ip, ip, r3
   2fb20:	add	r0, r0, r3
   2fb24:	add	r6, r6, r7
   2fb28:	cmp	r6, r8
   2fb2c:	bge	1c230 <GetDataSlab+0x12c>
   2fb30:	ldr	r3, [sp, #196]	; 0xc4
   2fb34:	ldr	r3, [r3]
   2fb38:	cmp	r3, #0
   2fb3c:	addne	r0, r0, r3
   2fb40:	addne	ip, ip, r3
   2fb44:	ldr	r3, [sp]
   2fb48:	add	r2, r3, r6
   2fb4c:	mov	r3, #0
   2fb50:	ldr	r1, [sp, #204]	; 0xcc
   2fb54:	ldr	r7, [r1]
   2fb58:	cmp	r7, r3
   2fb5c:	bgt	2fb00 <GetDataSlab+0x139fc>
   2fb60:	ldr	r3, [sp, #196]	; 0xc4
   2fb64:	add	r5, sp, #72	; 0x48
   2fb68:	mov	r4, r9
   2fb6c:	mov	lr, #1
   2fb70:	ldr	r2, [fp]
   2fb74:	ldr	r3, [r3]
   2fb78:	sub	r3, r2, r3
   2fb7c:	add	ip, ip, r3
   2fb80:	add	r0, r0, r3
   2fb84:	ldr	r3, [sp, #208]	; 0xd0
   2fb88:	cmp	lr, r3
   2fb8c:	bge	2fb24 <GetDataSlab+0x13a20>
   2fb90:	ldr	r3, [r5, #4]
   2fb94:	add	r2, r3, #1
   2fb98:	ldr	r3, [sp, #204]	; 0xcc
   2fb9c:	str	r2, [r5, #4]
   2fba0:	ldr	r1, [r3, lr, lsl #2]
   2fba4:	sdiv	r3, r2, r1
   2fba8:	mls	r3, r1, r3, r2
   2fbac:	cmp	r3, #0
   2fbb0:	bne	2fb10 <GetDataSlab+0x13a0c>
   2fbb4:	ldr	r2, [r4, #4]
   2fbb8:	str	r3, [r5, #4]
   2fbbc:	ldr	r1, [sp, #196]	; 0xc4
   2fbc0:	sdiv	r3, ip, r2
   2fbc4:	ldr	r1, [r1, lr, lsl #2]
   2fbc8:	mls	r3, r2, r3, ip
   2fbcc:	cmp	r3, #0
   2fbd0:	ldrne	sl, [r4]
   2fbd4:	subne	r3, r2, r3
   2fbd8:	mlane	r3, r1, sl, r3
   2fbdc:	bne	2fbf0 <GetDataSlab+0x13aec>
   2fbe0:	cmp	r1, #0
   2fbe4:	beq	2fbf8 <GetDataSlab+0x13af4>
   2fbe8:	ldr	r3, [r4]
   2fbec:	mul	r3, r3, r1
   2fbf0:	add	r0, r0, r3
   2fbf4:	add	ip, ip, r3
   2fbf8:	add	lr, lr, #1
   2fbfc:	add	r4, r4, #4
   2fc00:	add	r5, r5, #4
   2fc04:	b	2fb84 <GetDataSlab+0x13a80>
   2fc08:	ldrsb	r1, [r0]
   2fc0c:	add	r3, r3, #1
   2fc10:	strb	r1, [r2], #1
   2fc14:	ldr	r1, [sl]
   2fc18:	add	r0, r0, r1
   2fc1c:	add	ip, ip, r1
   2fc20:	b	2f9c4 <GetDataSlab+0x138c0>
   2fc24:	add	r3, sp, #152	; 0x98
   2fc28:	add	r3, r3, lr, lsl #2
   2fc2c:	ldr	r3, [r3, #-120]	; 0xffffff88
   2fc30:	add	ip, ip, r3
   2fc34:	add	r0, r0, r3
   2fc38:	add	r6, r6, r7
   2fc3c:	b	2f99c <GetDataSlab+0x13898>
   2fc40:	ldr	r7, [sl]
   2fc44:	add	r9, sp, #112	; 0x70
   2fc48:	add	r4, sp, #32
   2fc4c:	mov	r5, fp
   2fc50:	mov	r0, r9
   2fc54:	mov	ip, #0
   2fc58:	mov	r2, #1
   2fc5c:	sub	r3, r7, #1
   2fc60:	str	r3, [sp, #32]
   2fc64:	ldr	r3, [fp]
   2fc68:	str	r3, [sp, #112]	; 0x70
   2fc6c:	ldr	r3, [sp, #204]	; 0xcc
   2fc70:	ldr	r8, [r3]
   2fc74:	ldr	r3, [sp, #208]	; 0xd0
   2fc78:	cmp	r2, r3
   2fc7c:	blt	2fd7c <GetDataSlab+0x13c78>
   2fc80:	ldr	r3, [sp, #4]
   2fc84:	cmp	r7, #1
   2fc88:	mov	r6, #0
   2fc8c:	add	r0, r3, ip
   2fc90:	beq	2fe20 <GetDataSlab+0x13d1c>
   2fc94:	cmp	r6, r8
   2fc98:	bge	1c230 <GetDataSlab+0x12c>
   2fc9c:	ldr	r3, [sp, #196]	; 0xc4
   2fca0:	ldr	r3, [r3]
   2fca4:	cmp	r3, #0
   2fca8:	addne	r0, r0, r3
   2fcac:	addne	ip, ip, r3
   2fcb0:	ldr	r3, [sp]
   2fcb4:	add	r2, r3, r6
   2fcb8:	mov	r3, #0
   2fcbc:	ldr	r1, [sp, #204]	; 0xcc
   2fcc0:	ldr	r7, [r1]
   2fcc4:	cmp	r7, r3
   2fcc8:	bgt	2ff00 <GetDataSlab+0x13dfc>
   2fccc:	ldr	r3, [sp, #196]	; 0xc4
   2fcd0:	add	r5, sp, #72	; 0x48
   2fcd4:	mov	r4, r9
   2fcd8:	mov	lr, #1
   2fcdc:	ldr	r2, [fp]
   2fce0:	ldr	r3, [r3]
   2fce4:	sub	r3, r2, r3
   2fce8:	ldr	r2, [sl]
   2fcec:	mls	r3, r2, r7, r3
   2fcf0:	add	ip, ip, r3
   2fcf4:	add	r0, r0, r3
   2fcf8:	ldr	r3, [sp, #208]	; 0xd0
   2fcfc:	cmp	lr, r3
   2fd00:	bge	2ff30 <GetDataSlab+0x13e2c>
   2fd04:	ldr	r3, [r5, #4]
   2fd08:	add	r2, r3, #1
   2fd0c:	ldr	r3, [sp, #204]	; 0xcc
   2fd10:	str	r2, [r5, #4]
   2fd14:	ldr	r1, [r3, lr, lsl #2]
   2fd18:	sdiv	r3, r2, r1
   2fd1c:	mls	r3, r1, r3, r2
   2fd20:	cmp	r3, #0
   2fd24:	bne	2ff1c <GetDataSlab+0x13e18>
   2fd28:	ldr	r2, [r4, #4]
   2fd2c:	str	r3, [r5, #4]
   2fd30:	ldr	r1, [sp, #196]	; 0xc4
   2fd34:	sdiv	r3, ip, r2
   2fd38:	ldr	r1, [r1, lr, lsl #2]
   2fd3c:	mls	r3, r2, r3, ip
   2fd40:	cmp	r3, #0
   2fd44:	subne	r3, r2, r3
   2fd48:	ldrne	r2, [r4]
   2fd4c:	mlane	r3, r1, r2, r3
   2fd50:	bne	2fd64 <GetDataSlab+0x13c60>
   2fd54:	cmp	r1, #0
   2fd58:	beq	2fd6c <GetDataSlab+0x13c68>
   2fd5c:	ldr	r3, [r4]
   2fd60:	mul	r3, r3, r1
   2fd64:	add	r0, r0, r3
   2fd68:	add	ip, ip, r3
   2fd6c:	add	lr, lr, #1
   2fd70:	add	r4, r4, #4
   2fd74:	add	r5, r5, #4
   2fd78:	b	2fcf8 <GetDataSlab+0x13bf4>
   2fd7c:	ldr	r3, [sl, r2, lsl #2]
   2fd80:	mov	r6, r0
   2fd84:	sub	r3, r3, #1
   2fd88:	str	r3, [r4, #4]
   2fd8c:	ldr	r3, [r5], #4
   2fd90:	mov	r1, r5
   2fd94:	str	r3, [r0, #4]
   2fd98:	cmp	r1, fp
   2fd9c:	bne	2fdcc <GetDataSlab+0x13cc8>
   2fda0:	ldr	r1, [sp, #196]	; 0xc4
   2fda4:	add	r0, r0, #4
   2fda8:	add	r4, r4, #4
   2fdac:	ldr	r3, [sp, #204]	; 0xcc
   2fdb0:	ldr	r1, [r1, r2, lsl #2]
   2fdb4:	ldr	r3, [r3, r2, lsl #2]
   2fdb8:	add	r2, r2, #1
   2fdbc:	mul	r8, r3, r8
   2fdc0:	ldr	r3, [r6]
   2fdc4:	mla	ip, r1, r3, ip
   2fdc8:	b	2fc74 <GetDataSlab+0x13b70>
   2fdcc:	str	r1, [sp, #8]
   2fdd0:	ldr	r3, [r1, #-4]!
   2fdd4:	ldr	lr, [r4, #4]
   2fdd8:	mul	r3, r3, lr
   2fddc:	ldr	lr, [r0, #4]
   2fde0:	str	r3, [r4, #4]
   2fde4:	ldr	r3, [sp, #8]
   2fde8:	ldr	r3, [r3]
   2fdec:	mul	r3, r3, lr
   2fdf0:	str	r3, [r0, #4]
   2fdf4:	b	2fd98 <GetDataSlab+0x13c94>
   2fdf8:	ldrb	r1, [r0, r3]
   2fdfc:	add	r3, r3, #1
   2fe00:	strb	r1, [r2], #1
   2fe04:	b	2fe48 <GetDataSlab+0x13d44>
   2fe08:	add	r3, sp, #152	; 0x98
   2fe0c:	add	r3, r3, lr, lsl #2
   2fe10:	ldr	r3, [r3, #-120]	; 0xffffff88
   2fe14:	add	ip, ip, r3
   2fe18:	add	r0, r0, r3
   2fe1c:	add	r6, r6, r7
   2fe20:	cmp	r6, r8
   2fe24:	bge	1c230 <GetDataSlab+0x12c>
   2fe28:	ldr	r3, [sp, #196]	; 0xc4
   2fe2c:	ldr	r3, [r3]
   2fe30:	cmp	r3, #0
   2fe34:	addne	r0, r0, r3
   2fe38:	addne	ip, ip, r3
   2fe3c:	ldr	r3, [sp]
   2fe40:	add	r2, r3, r6
   2fe44:	mov	r3, #0
   2fe48:	ldr	r1, [sp, #204]	; 0xcc
   2fe4c:	ldr	r7, [r1]
   2fe50:	cmp	r7, r3
   2fe54:	bgt	2fdf8 <GetDataSlab+0x13cf4>
   2fe58:	ldr	r3, [sp, #196]	; 0xc4
   2fe5c:	add	r5, sp, #72	; 0x48
   2fe60:	mov	r4, r9
   2fe64:	mov	lr, #1
   2fe68:	ldr	r2, [fp]
   2fe6c:	ldr	r3, [r3]
   2fe70:	sub	r3, r2, r3
   2fe74:	add	ip, ip, r3
   2fe78:	add	r0, r0, r3
   2fe7c:	ldr	r3, [sp, #208]	; 0xd0
   2fe80:	cmp	lr, r3
   2fe84:	bge	2fe1c <GetDataSlab+0x13d18>
   2fe88:	ldr	r3, [r5, #4]
   2fe8c:	add	r2, r3, #1
   2fe90:	ldr	r3, [sp, #204]	; 0xcc
   2fe94:	str	r2, [r5, #4]
   2fe98:	ldr	r1, [r3, lr, lsl #2]
   2fe9c:	sdiv	r3, r2, r1
   2fea0:	mls	r3, r1, r3, r2
   2fea4:	cmp	r3, #0
   2fea8:	bne	2fe08 <GetDataSlab+0x13d04>
   2feac:	ldr	r2, [r4, #4]
   2feb0:	str	r3, [r5, #4]
   2feb4:	ldr	r1, [sp, #196]	; 0xc4
   2feb8:	sdiv	r3, ip, r2
   2febc:	ldr	r1, [r1, lr, lsl #2]
   2fec0:	mls	r3, r2, r3, ip
   2fec4:	cmp	r3, #0
   2fec8:	ldrne	sl, [r4]
   2fecc:	subne	r3, r2, r3
   2fed0:	mlane	r3, r1, sl, r3
   2fed4:	bne	2fee8 <GetDataSlab+0x13de4>
   2fed8:	cmp	r1, #0
   2fedc:	beq	2fef0 <GetDataSlab+0x13dec>
   2fee0:	ldr	r3, [r4]
   2fee4:	mul	r3, r3, r1
   2fee8:	add	r0, r0, r3
   2feec:	add	ip, ip, r3
   2fef0:	add	lr, lr, #1
   2fef4:	add	r4, r4, #4
   2fef8:	add	r5, r5, #4
   2fefc:	b	2fe7c <GetDataSlab+0x13d78>
   2ff00:	ldrb	r1, [r0]
   2ff04:	add	r3, r3, #1
   2ff08:	strb	r1, [r2], #1
   2ff0c:	ldr	r1, [sl]
   2ff10:	add	r0, r0, r1
   2ff14:	add	ip, ip, r1
   2ff18:	b	2fcbc <GetDataSlab+0x13bb8>
   2ff1c:	add	r3, sp, #152	; 0x98
   2ff20:	add	r3, r3, lr, lsl #2
   2ff24:	ldr	r3, [r3, #-120]	; 0xffffff88
   2ff28:	add	ip, ip, r3
   2ff2c:	add	r0, r0, r3
   2ff30:	add	r6, r6, r7
   2ff34:	b	2fc94 <GetDataSlab+0x13b90>
   2ff38:	cmp	r5, #12
   2ff3c:	bne	3023c <GetDataSlab+0x14138>
   2ff40:	ldr	r7, [sl]
   2ff44:	add	r9, sp, #112	; 0x70
   2ff48:	add	r4, sp, #32
   2ff4c:	mov	r5, fp
   2ff50:	mov	r0, r9
   2ff54:	mov	lr, #0
   2ff58:	mov	r2, #1
   2ff5c:	sub	r3, r7, #1
   2ff60:	str	r3, [sp, #32]
   2ff64:	ldr	r3, [fp]
   2ff68:	str	r3, [sp, #112]	; 0x70
   2ff6c:	ldr	r3, [sp, #204]	; 0xcc
   2ff70:	ldr	r8, [r3]
   2ff74:	ldr	r3, [sp, #208]	; 0xd0
   2ff78:	cmp	r2, r3
   2ff7c:	blt	3007c <GetDataSlab+0x13f78>
   2ff80:	ldr	r3, [sp, #4]
   2ff84:	cmp	r7, #1
   2ff88:	mov	r6, #0
   2ff8c:	add	ip, r3, lr, lsl #3
   2ff90:	beq	30120 <GetDataSlab+0x1401c>
   2ff94:	cmp	r6, r8
   2ff98:	bge	1c230 <GetDataSlab+0x12c>
   2ff9c:	ldr	r3, [sp, #196]	; 0xc4
   2ffa0:	ldr	r3, [r3]
   2ffa4:	cmp	r3, #0
   2ffa8:	addne	ip, ip, r3, lsl #3
   2ffac:	addne	lr, lr, r3
   2ffb0:	ldr	r3, [sp]
   2ffb4:	add	r2, r3, r6
   2ffb8:	mov	r3, #0
   2ffbc:	ldr	r1, [sp, #204]	; 0xcc
   2ffc0:	ldr	r7, [r1]
   2ffc4:	cmp	r7, r3
   2ffc8:	bgt	30204 <GetDataSlab+0x14100>
   2ffcc:	ldr	r3, [sp, #196]	; 0xc4
   2ffd0:	add	r5, sp, #72	; 0x48
   2ffd4:	mov	r4, r9
   2ffd8:	mov	r0, #1
   2ffdc:	ldr	r2, [fp]
   2ffe0:	ldr	r3, [r3]
   2ffe4:	sub	r3, r2, r3
   2ffe8:	ldr	r2, [sl]
   2ffec:	mls	r3, r2, r7, r3
   2fff0:	add	ip, ip, r3, lsl #3
   2fff4:	add	lr, lr, r3
   2fff8:	ldr	r3, [sp, #208]	; 0xd0
   2fffc:	cmp	r0, r3
   30000:	bge	30234 <GetDataSlab+0x14130>
   30004:	ldr	r3, [r5, #4]
   30008:	add	r2, r3, #1
   3000c:	ldr	r3, [sp, #204]	; 0xcc
   30010:	str	r2, [r5, #4]
   30014:	ldr	r1, [r3, r0, lsl #2]
   30018:	sdiv	r3, r2, r1
   3001c:	mls	r3, r1, r3, r2
   30020:	cmp	r3, #0
   30024:	bne	30220 <GetDataSlab+0x1411c>
   30028:	ldr	r2, [r4, #4]
   3002c:	str	r3, [r5, #4]
   30030:	ldr	r1, [sp, #196]	; 0xc4
   30034:	sdiv	r3, lr, r2
   30038:	ldr	r1, [r1, r0, lsl #2]
   3003c:	mls	r3, r2, r3, lr
   30040:	cmp	r3, #0
   30044:	subne	r3, r2, r3
   30048:	ldrne	r2, [r4]
   3004c:	mlane	r3, r1, r2, r3
   30050:	bne	30064 <GetDataSlab+0x13f60>
   30054:	cmp	r1, #0
   30058:	beq	3006c <GetDataSlab+0x13f68>
   3005c:	ldr	r3, [r4]
   30060:	mul	r3, r3, r1
   30064:	add	ip, ip, r3, lsl #3
   30068:	add	lr, lr, r3
   3006c:	add	r0, r0, #1
   30070:	add	r4, r4, #4
   30074:	add	r5, r5, #4
   30078:	b	2fff8 <GetDataSlab+0x13ef4>
   3007c:	ldr	r3, [sl, r2, lsl #2]
   30080:	mov	r6, r0
   30084:	sub	r3, r3, #1
   30088:	str	r3, [r4, #4]
   3008c:	ldr	r3, [r5], #4
   30090:	mov	r1, r5
   30094:	str	r3, [r0, #4]
   30098:	cmp	r1, fp
   3009c:	bne	300cc <GetDataSlab+0x13fc8>
   300a0:	ldr	r1, [sp, #196]	; 0xc4
   300a4:	add	r0, r0, #4
   300a8:	add	r4, r4, #4
   300ac:	ldr	r3, [sp, #204]	; 0xcc
   300b0:	ldr	r1, [r1, r2, lsl #2]
   300b4:	ldr	r3, [r3, r2, lsl #2]
   300b8:	add	r2, r2, #1
   300bc:	mul	r8, r3, r8
   300c0:	ldr	r3, [r6]
   300c4:	mla	lr, r1, r3, lr
   300c8:	b	2ff74 <GetDataSlab+0x13e70>
   300cc:	str	r1, [sp, #8]
   300d0:	ldr	r3, [r1, #-4]!
   300d4:	ldr	ip, [r4, #4]
   300d8:	mul	r3, r3, ip
   300dc:	ldr	ip, [r0, #4]
   300e0:	str	r3, [r4, #4]
   300e4:	ldr	r3, [sp, #8]
   300e8:	ldr	r3, [r3]
   300ec:	mul	r3, r3, ip
   300f0:	str	r3, [r0, #4]
   300f4:	b	30098 <GetDataSlab+0x13f94>
   300f8:	ldr	r0, [r2, #8]!
   300fc:	add	r3, r3, #1
   30100:	strb	r0, [r1], #1
   30104:	b	3014c <GetDataSlab+0x14048>
   30108:	add	r3, sp, #152	; 0x98
   3010c:	add	r3, r3, r0, lsl #2
   30110:	ldr	r3, [r3, #-120]	; 0xffffff88
   30114:	add	ip, ip, r3, lsl #3
   30118:	add	lr, lr, r3
   3011c:	add	r6, r6, r7
   30120:	cmp	r6, r8
   30124:	bge	1c230 <GetDataSlab+0x12c>
   30128:	ldr	r3, [sp, #196]	; 0xc4
   3012c:	ldr	r3, [r3]
   30130:	cmp	r3, #0
   30134:	addne	ip, ip, r3, lsl #3
   30138:	addne	lr, lr, r3
   3013c:	ldr	r3, [sp]
   30140:	sub	r2, ip, #8
   30144:	add	r1, r3, r6
   30148:	mov	r3, #0
   3014c:	ldr	r0, [sp, #204]	; 0xcc
   30150:	ldr	r7, [r0]
   30154:	cmp	r7, r3
   30158:	bgt	300f8 <GetDataSlab+0x13ff4>
   3015c:	ldr	r3, [sp, #196]	; 0xc4
   30160:	add	r5, sp, #72	; 0x48
   30164:	mov	r4, r9
   30168:	mov	r0, #1
   3016c:	ldr	r2, [fp]
   30170:	ldr	r3, [r3]
   30174:	sub	r3, r2, r3
   30178:	add	ip, ip, r3, lsl #3
   3017c:	add	lr, lr, r3
   30180:	ldr	r3, [sp, #208]	; 0xd0
   30184:	cmp	r0, r3
   30188:	bge	3011c <GetDataSlab+0x14018>
   3018c:	ldr	r3, [r5, #4]
   30190:	add	r2, r3, #1
   30194:	ldr	r3, [sp, #204]	; 0xcc
   30198:	str	r2, [r5, #4]
   3019c:	ldr	r1, [r3, r0, lsl #2]
   301a0:	sdiv	r3, r2, r1
   301a4:	mls	r3, r1, r3, r2
   301a8:	cmp	r3, #0
   301ac:	bne	30108 <GetDataSlab+0x14004>
   301b0:	ldr	r2, [r4, #4]
   301b4:	str	r3, [r5, #4]
   301b8:	ldr	r1, [sp, #196]	; 0xc4
   301bc:	sdiv	r3, lr, r2
   301c0:	ldr	r1, [r1, r0, lsl #2]
   301c4:	mls	r3, r2, r3, lr
   301c8:	cmp	r3, #0
   301cc:	ldrne	sl, [r4]
   301d0:	subne	r3, r2, r3
   301d4:	mlane	r3, r1, sl, r3
   301d8:	bne	301ec <GetDataSlab+0x140e8>
   301dc:	cmp	r1, #0
   301e0:	beq	301f4 <GetDataSlab+0x140f0>
   301e4:	ldr	r3, [r4]
   301e8:	mul	r3, r3, r1
   301ec:	add	ip, ip, r3, lsl #3
   301f0:	add	lr, lr, r3
   301f4:	add	r0, r0, #1
   301f8:	add	r4, r4, #4
   301fc:	add	r5, r5, #4
   30200:	b	30180 <GetDataSlab+0x1407c>
   30204:	ldr	r1, [ip]
   30208:	add	r3, r3, #1
   3020c:	strb	r1, [r2], #1
   30210:	ldr	r1, [sl]
   30214:	add	ip, ip, r1, lsl #3
   30218:	add	lr, lr, r1
   3021c:	b	2ffbc <GetDataSlab+0x13eb8>
   30220:	add	r3, sp, #152	; 0x98
   30224:	add	r3, r3, r0, lsl #2
   30228:	ldr	r3, [r3, #-120]	; 0xffffff88
   3022c:	add	ip, ip, r3, lsl #3
   30230:	add	lr, lr, r3
   30234:	add	r6, r6, r7
   30238:	b	2ff94 <GetDataSlab+0x13e90>
   3023c:	cmp	r5, #13
   30240:	bne	3236c <GetDataSlab+0x16268>
   30244:	ldr	r7, [sl]
   30248:	add	r9, sp, #112	; 0x70
   3024c:	add	r4, sp, #32
   30250:	mov	r5, fp
   30254:	mov	r0, r9
   30258:	mov	lr, #0
   3025c:	mov	r2, #1
   30260:	sub	r3, r7, #1
   30264:	str	r3, [sp, #32]
   30268:	ldr	r3, [fp]
   3026c:	str	r3, [sp, #112]	; 0x70
   30270:	ldr	r3, [sp, #204]	; 0xcc
   30274:	ldr	r8, [r3]
   30278:	ldr	r3, [sp, #208]	; 0xd0
   3027c:	cmp	r2, r3
   30280:	blt	30380 <GetDataSlab+0x1427c>
   30284:	ldr	r3, [sp, #4]
   30288:	cmp	r7, #1
   3028c:	mov	r6, #0
   30290:	add	ip, r3, lr, lsl #3
   30294:	beq	30424 <GetDataSlab+0x14320>
   30298:	cmp	r6, r8
   3029c:	bge	1c230 <GetDataSlab+0x12c>
   302a0:	ldr	r3, [sp, #196]	; 0xc4
   302a4:	ldr	r3, [r3]
   302a8:	cmp	r3, #0
   302ac:	addne	ip, ip, r3, lsl #3
   302b0:	addne	lr, lr, r3
   302b4:	ldr	r3, [sp]
   302b8:	add	r2, r3, r6
   302bc:	mov	r3, #0
   302c0:	ldr	r1, [sp, #204]	; 0xcc
   302c4:	ldr	r7, [r1]
   302c8:	cmp	r7, r3
   302cc:	bgt	30508 <GetDataSlab+0x14404>
   302d0:	ldr	r3, [sp, #196]	; 0xc4
   302d4:	add	r5, sp, #72	; 0x48
   302d8:	mov	r4, r9
   302dc:	mov	r0, #1
   302e0:	ldr	r2, [fp]
   302e4:	ldr	r3, [r3]
   302e8:	sub	r3, r2, r3
   302ec:	ldr	r2, [sl]
   302f0:	mls	r3, r2, r7, r3
   302f4:	add	ip, ip, r3, lsl #3
   302f8:	add	lr, lr, r3
   302fc:	ldr	r3, [sp, #208]	; 0xd0
   30300:	cmp	r0, r3
   30304:	bge	30538 <GetDataSlab+0x14434>
   30308:	ldr	r3, [r5, #4]
   3030c:	add	r2, r3, #1
   30310:	ldr	r3, [sp, #204]	; 0xcc
   30314:	str	r2, [r5, #4]
   30318:	ldr	r1, [r3, r0, lsl #2]
   3031c:	sdiv	r3, r2, r1
   30320:	mls	r3, r1, r3, r2
   30324:	cmp	r3, #0
   30328:	bne	30524 <GetDataSlab+0x14420>
   3032c:	ldr	r2, [r4, #4]
   30330:	str	r3, [r5, #4]
   30334:	ldr	r1, [sp, #196]	; 0xc4
   30338:	sdiv	r3, lr, r2
   3033c:	ldr	r1, [r1, r0, lsl #2]
   30340:	mls	r3, r2, r3, lr
   30344:	cmp	r3, #0
   30348:	subne	r3, r2, r3
   3034c:	ldrne	r2, [r4]
   30350:	mlane	r3, r1, r2, r3
   30354:	bne	30368 <GetDataSlab+0x14264>
   30358:	cmp	r1, #0
   3035c:	beq	30370 <GetDataSlab+0x1426c>
   30360:	ldr	r3, [r4]
   30364:	mul	r3, r3, r1
   30368:	add	ip, ip, r3, lsl #3
   3036c:	add	lr, lr, r3
   30370:	add	r0, r0, #1
   30374:	add	r4, r4, #4
   30378:	add	r5, r5, #4
   3037c:	b	302fc <GetDataSlab+0x141f8>
   30380:	ldr	r3, [sl, r2, lsl #2]
   30384:	mov	r6, r0
   30388:	sub	r3, r3, #1
   3038c:	str	r3, [r4, #4]
   30390:	ldr	r3, [r5], #4
   30394:	mov	r1, r5
   30398:	str	r3, [r0, #4]
   3039c:	cmp	r1, fp
   303a0:	bne	303d0 <GetDataSlab+0x142cc>
   303a4:	ldr	r1, [sp, #196]	; 0xc4
   303a8:	add	r0, r0, #4
   303ac:	add	r4, r4, #4
   303b0:	ldr	r3, [sp, #204]	; 0xcc
   303b4:	ldr	r1, [r1, r2, lsl #2]
   303b8:	ldr	r3, [r3, r2, lsl #2]
   303bc:	add	r2, r2, #1
   303c0:	mul	r8, r3, r8
   303c4:	ldr	r3, [r6]
   303c8:	mla	lr, r1, r3, lr
   303cc:	b	30278 <GetDataSlab+0x14174>
   303d0:	str	r1, [sp, #8]
   303d4:	ldr	r3, [r1, #-4]!
   303d8:	ldr	ip, [r4, #4]
   303dc:	mul	r3, r3, ip
   303e0:	ldr	ip, [r0, #4]
   303e4:	str	r3, [r4, #4]
   303e8:	ldr	r3, [sp, #8]
   303ec:	ldr	r3, [r3]
   303f0:	mul	r3, r3, ip
   303f4:	str	r3, [r0, #4]
   303f8:	b	3039c <GetDataSlab+0x14298>
   303fc:	ldr	r0, [r2, #8]!
   30400:	add	r3, r3, #1
   30404:	strb	r0, [r1], #1
   30408:	b	30450 <GetDataSlab+0x1434c>
   3040c:	add	r3, sp, #152	; 0x98
   30410:	add	r3, r3, r0, lsl #2
   30414:	ldr	r3, [r3, #-120]	; 0xffffff88
   30418:	add	ip, ip, r3, lsl #3
   3041c:	add	lr, lr, r3
   30420:	add	r6, r6, r7
   30424:	cmp	r6, r8
   30428:	bge	1c230 <GetDataSlab+0x12c>
   3042c:	ldr	r3, [sp, #196]	; 0xc4
   30430:	ldr	r3, [r3]
   30434:	cmp	r3, #0
   30438:	addne	ip, ip, r3, lsl #3
   3043c:	addne	lr, lr, r3
   30440:	ldr	r3, [sp]
   30444:	sub	r2, ip, #8
   30448:	add	r1, r3, r6
   3044c:	mov	r3, #0
   30450:	ldr	r0, [sp, #204]	; 0xcc
   30454:	ldr	r7, [r0]
   30458:	cmp	r7, r3
   3045c:	bgt	303fc <GetDataSlab+0x142f8>
   30460:	ldr	r3, [sp, #196]	; 0xc4
   30464:	add	r5, sp, #72	; 0x48
   30468:	mov	r4, r9
   3046c:	mov	r0, #1
   30470:	ldr	r2, [fp]
   30474:	ldr	r3, [r3]
   30478:	sub	r3, r2, r3
   3047c:	add	ip, ip, r3, lsl #3
   30480:	add	lr, lr, r3
   30484:	ldr	r3, [sp, #208]	; 0xd0
   30488:	cmp	r0, r3
   3048c:	bge	30420 <GetDataSlab+0x1431c>
   30490:	ldr	r3, [r5, #4]
   30494:	add	r2, r3, #1
   30498:	ldr	r3, [sp, #204]	; 0xcc
   3049c:	str	r2, [r5, #4]
   304a0:	ldr	r1, [r3, r0, lsl #2]
   304a4:	sdiv	r3, r2, r1
   304a8:	mls	r3, r1, r3, r2
   304ac:	cmp	r3, #0
   304b0:	bne	3040c <GetDataSlab+0x14308>
   304b4:	ldr	r2, [r4, #4]
   304b8:	str	r3, [r5, #4]
   304bc:	ldr	r1, [sp, #196]	; 0xc4
   304c0:	sdiv	r3, lr, r2
   304c4:	ldr	r1, [r1, r0, lsl #2]
   304c8:	mls	r3, r2, r3, lr
   304cc:	cmp	r3, #0
   304d0:	ldrne	sl, [r4]
   304d4:	subne	r3, r2, r3
   304d8:	mlane	r3, r1, sl, r3
   304dc:	bne	304f0 <GetDataSlab+0x143ec>
   304e0:	cmp	r1, #0
   304e4:	beq	304f8 <GetDataSlab+0x143f4>
   304e8:	ldr	r3, [r4]
   304ec:	mul	r3, r3, r1
   304f0:	add	ip, ip, r3, lsl #3
   304f4:	add	lr, lr, r3
   304f8:	add	r0, r0, #1
   304fc:	add	r4, r4, #4
   30500:	add	r5, r5, #4
   30504:	b	30484 <GetDataSlab+0x14380>
   30508:	ldr	r1, [ip]
   3050c:	add	r3, r3, #1
   30510:	strb	r1, [r2], #1
   30514:	ldr	r1, [sl]
   30518:	add	ip, ip, r1, lsl #3
   3051c:	add	lr, lr, r1
   30520:	b	302c0 <GetDataSlab+0x141bc>
   30524:	add	r3, sp, #152	; 0x98
   30528:	add	r3, r3, r0, lsl #2
   3052c:	ldr	r3, [r3, #-120]	; 0xffffff88
   30530:	add	ip, ip, r3, lsl #3
   30534:	add	lr, lr, r3
   30538:	add	r6, r6, r7
   3053c:	b	30298 <GetDataSlab+0x14194>
   30540:	sub	r3, r5, #1
   30544:	cmp	r3, #8
   30548:	addls	pc, pc, r3, lsl #2
   3054c:	b	31d64 <GetDataSlab+0x15c60>
   30550:	b	31774 <GetDataSlab+0x15670>
   30554:	b	31a6c <GetDataSlab+0x15968>
   30558:	b	3117c <GetDataSlab+0x15078>
   3055c:	b	31478 <GetDataSlab+0x15374>
   30560:	b	30b8c <GetDataSlab+0x14a88>
   30564:	b	30e84 <GetDataSlab+0x14d80>
   30568:	b	30880 <GetDataSlab+0x1477c>
   3056c:	b	31d64 <GetDataSlab+0x15c60>
   30570:	b	30574 <GetDataSlab+0x14470>
   30574:	ldr	r7, [sl]
   30578:	add	r9, sp, #112	; 0x70
   3057c:	add	r4, sp, #32
   30580:	mov	r5, fp
   30584:	mov	r0, r9
   30588:	mov	lr, #0
   3058c:	mov	r2, #1
   30590:	sub	r3, r7, #1
   30594:	str	r3, [sp, #32]
   30598:	ldr	r3, [fp]
   3059c:	str	r3, [sp, #112]	; 0x70
   305a0:	ldr	r3, [sp, #204]	; 0xcc
   305a4:	ldr	r8, [r3]
   305a8:	ldr	r3, [sp, #208]	; 0xd0
   305ac:	cmp	r2, r3
   305b0:	blt	306b0 <GetDataSlab+0x145ac>
   305b4:	ldr	r3, [sp, #4]
   305b8:	cmp	r7, #1
   305bc:	mov	r6, #0
   305c0:	add	ip, r3, lr, lsl #3
   305c4:	beq	3075c <GetDataSlab+0x14658>
   305c8:	cmp	r6, r8
   305cc:	bge	1c230 <GetDataSlab+0x12c>
   305d0:	ldr	r3, [sp, #196]	; 0xc4
   305d4:	ldr	r3, [r3]
   305d8:	cmp	r3, #0
   305dc:	addne	ip, ip, r3, lsl #3
   305e0:	addne	lr, lr, r3
   305e4:	ldr	r3, [sp]
   305e8:	add	r2, r3, r6
   305ec:	mov	r3, #0
   305f0:	ldr	r1, [sp, #204]	; 0xcc
   305f4:	ldr	r7, [r1]
   305f8:	cmp	r7, r3
   305fc:	bgt	30840 <GetDataSlab+0x1473c>
   30600:	ldr	r3, [sp, #196]	; 0xc4
   30604:	add	r5, sp, #72	; 0x48
   30608:	mov	r4, r9
   3060c:	mov	r0, #1
   30610:	ldr	r2, [fp]
   30614:	ldr	r3, [r3]
   30618:	sub	r3, r2, r3
   3061c:	ldr	r2, [sl]
   30620:	mls	r3, r2, r7, r3
   30624:	add	ip, ip, r3, lsl #3
   30628:	add	lr, lr, r3
   3062c:	ldr	r3, [sp, #208]	; 0xd0
   30630:	cmp	r0, r3
   30634:	bge	30878 <GetDataSlab+0x14774>
   30638:	ldr	r3, [r5, #4]
   3063c:	add	r2, r3, #1
   30640:	ldr	r3, [sp, #204]	; 0xcc
   30644:	str	r2, [r5, #4]
   30648:	ldr	r1, [r3, r0, lsl #2]
   3064c:	sdiv	r3, r2, r1
   30650:	mls	r3, r1, r3, r2
   30654:	cmp	r3, #0
   30658:	bne	30864 <GetDataSlab+0x14760>
   3065c:	ldr	r2, [r4, #4]
   30660:	str	r3, [r5, #4]
   30664:	ldr	r1, [sp, #196]	; 0xc4
   30668:	sdiv	r3, lr, r2
   3066c:	ldr	r1, [r1, r0, lsl #2]
   30670:	mls	r3, r2, r3, lr
   30674:	cmp	r3, #0
   30678:	subne	r3, r2, r3
   3067c:	ldrne	r2, [r4]
   30680:	mlane	r3, r1, r2, r3
   30684:	bne	30698 <GetDataSlab+0x14594>
   30688:	cmp	r1, #0
   3068c:	beq	306a0 <GetDataSlab+0x1459c>
   30690:	ldr	r3, [r4]
   30694:	mul	r3, r3, r1
   30698:	add	ip, ip, r3, lsl #3
   3069c:	add	lr, lr, r3
   306a0:	add	r0, r0, #1
   306a4:	add	r4, r4, #4
   306a8:	add	r5, r5, #4
   306ac:	b	3062c <GetDataSlab+0x14528>
   306b0:	ldr	r3, [sl, r2, lsl #2]
   306b4:	mov	r6, r0
   306b8:	sub	r3, r3, #1
   306bc:	str	r3, [r4, #4]
   306c0:	ldr	r3, [r5], #4
   306c4:	mov	r1, r5
   306c8:	str	r3, [r0, #4]
   306cc:	cmp	r1, fp
   306d0:	bne	30700 <GetDataSlab+0x145fc>
   306d4:	ldr	r1, [sp, #196]	; 0xc4
   306d8:	add	r0, r0, #4
   306dc:	add	r4, r4, #4
   306e0:	ldr	r3, [sp, #204]	; 0xcc
   306e4:	ldr	r1, [r1, r2, lsl #2]
   306e8:	ldr	r3, [r3, r2, lsl #2]
   306ec:	add	r2, r2, #1
   306f0:	mul	r8, r3, r8
   306f4:	ldr	r3, [r6]
   306f8:	mla	lr, r1, r3, lr
   306fc:	b	305a8 <GetDataSlab+0x144a4>
   30700:	str	r1, [sp, #8]
   30704:	ldr	r3, [r1, #-4]!
   30708:	ldr	ip, [r4, #4]
   3070c:	mul	r3, r3, ip
   30710:	ldr	ip, [r0, #4]
   30714:	str	r3, [r4, #4]
   30718:	ldr	r3, [sp, #8]
   3071c:	ldr	r3, [r3]
   30720:	mul	r3, r3, ip
   30724:	str	r3, [r0, #4]
   30728:	b	306cc <GetDataSlab+0x145c8>
   3072c:	vldmia	r2!, {d7}
   30730:	add	r3, r3, #1
   30734:	vcvt.u32.f64	s15, d7
   30738:	vmov	r0, s15
   3073c:	strb	r0, [r1], #1
   30740:	b	30788 <GetDataSlab+0x14684>
   30744:	add	r3, sp, #152	; 0x98
   30748:	add	r3, r3, r0, lsl #2
   3074c:	ldr	r3, [r3, #-120]	; 0xffffff88
   30750:	add	ip, ip, r3, lsl #3
   30754:	add	lr, lr, r3
   30758:	add	r6, r6, r7
   3075c:	cmp	r6, r8
   30760:	bge	1c230 <GetDataSlab+0x12c>
   30764:	ldr	r3, [sp, #196]	; 0xc4
   30768:	ldr	r3, [r3]
   3076c:	cmp	r3, #0
   30770:	addne	ip, ip, r3, lsl #3
   30774:	addne	lr, lr, r3
   30778:	ldr	r3, [sp]
   3077c:	mov	r2, ip
   30780:	add	r1, r3, r6
   30784:	mov	r3, #0
   30788:	ldr	r0, [sp, #204]	; 0xcc
   3078c:	ldr	r7, [r0]
   30790:	cmp	r7, r3
   30794:	bgt	3072c <GetDataSlab+0x14628>
   30798:	ldr	r3, [sp, #196]	; 0xc4
   3079c:	add	r5, sp, #72	; 0x48
   307a0:	mov	r4, r9
   307a4:	mov	r0, #1
   307a8:	ldr	r2, [fp]
   307ac:	ldr	r3, [r3]
   307b0:	sub	r3, r2, r3
   307b4:	add	ip, ip, r3, lsl #3
   307b8:	add	lr, lr, r3
   307bc:	ldr	r3, [sp, #208]	; 0xd0
   307c0:	cmp	r0, r3
   307c4:	bge	30758 <GetDataSlab+0x14654>
   307c8:	ldr	r3, [r5, #4]
   307cc:	add	r2, r3, #1
   307d0:	ldr	r3, [sp, #204]	; 0xcc
   307d4:	str	r2, [r5, #4]
   307d8:	ldr	r1, [r3, r0, lsl #2]
   307dc:	sdiv	r3, r2, r1
   307e0:	mls	r3, r1, r3, r2
   307e4:	cmp	r3, #0
   307e8:	bne	30744 <GetDataSlab+0x14640>
   307ec:	ldr	r2, [r4, #4]
   307f0:	str	r3, [r5, #4]
   307f4:	ldr	r1, [sp, #196]	; 0xc4
   307f8:	sdiv	r3, lr, r2
   307fc:	ldr	r1, [r1, r0, lsl #2]
   30800:	mls	r3, r2, r3, lr
   30804:	cmp	r3, #0
   30808:	ldrne	sl, [r4]
   3080c:	subne	r3, r2, r3
   30810:	mlane	r3, r1, sl, r3
   30814:	bne	30828 <GetDataSlab+0x14724>
   30818:	cmp	r1, #0
   3081c:	beq	30830 <GetDataSlab+0x1472c>
   30820:	ldr	r3, [r4]
   30824:	mul	r3, r3, r1
   30828:	add	ip, ip, r3, lsl #3
   3082c:	add	lr, lr, r3
   30830:	add	r0, r0, #1
   30834:	add	r4, r4, #4
   30838:	add	r5, r5, #4
   3083c:	b	307bc <GetDataSlab+0x146b8>
   30840:	vldr	d7, [ip]
   30844:	add	r3, r3, #1
   30848:	vcvt.u32.f64	s15, d7
   3084c:	vmov	r1, s15
   30850:	strb	r1, [r2], #1
   30854:	ldr	r1, [sl]
   30858:	add	ip, ip, r1, lsl #3
   3085c:	add	lr, lr, r1
   30860:	b	305f0 <GetDataSlab+0x144ec>
   30864:	add	r3, sp, #152	; 0x98
   30868:	add	r3, r3, r0, lsl #2
   3086c:	ldr	r3, [r3, #-120]	; 0xffffff88
   30870:	add	ip, ip, r3, lsl #3
   30874:	add	lr, lr, r3
   30878:	add	r6, r6, r7
   3087c:	b	305c8 <GetDataSlab+0x144c4>
   30880:	ldr	r7, [sl]
   30884:	add	r9, sp, #112	; 0x70
   30888:	add	r4, sp, #32
   3088c:	mov	r5, fp
   30890:	mov	r0, r9
   30894:	mov	lr, #0
   30898:	mov	r2, #1
   3089c:	sub	r3, r7, #1
   308a0:	str	r3, [sp, #32]
   308a4:	ldr	r3, [fp]
   308a8:	str	r3, [sp, #112]	; 0x70
   308ac:	ldr	r3, [sp, #204]	; 0xcc
   308b0:	ldr	r8, [r3]
   308b4:	ldr	r3, [sp, #208]	; 0xd0
   308b8:	cmp	r2, r3
   308bc:	blt	309bc <GetDataSlab+0x148b8>
   308c0:	ldr	r3, [sp, #4]
   308c4:	cmp	r7, #1
   308c8:	mov	r6, #0
   308cc:	add	ip, r3, lr, lsl #2
   308d0:	beq	30a68 <GetDataSlab+0x14964>
   308d4:	cmp	r6, r8
   308d8:	bge	1c230 <GetDataSlab+0x12c>
   308dc:	ldr	r3, [sp, #196]	; 0xc4
   308e0:	ldr	r3, [r3]
   308e4:	cmp	r3, #0
   308e8:	addne	ip, ip, r3, lsl #2
   308ec:	addne	lr, lr, r3
   308f0:	ldr	r3, [sp]
   308f4:	add	r2, r3, r6
   308f8:	mov	r3, #0
   308fc:	ldr	r1, [sp, #204]	; 0xcc
   30900:	ldr	r7, [r1]
   30904:	cmp	r7, r3
   30908:	bgt	30b4c <GetDataSlab+0x14a48>
   3090c:	ldr	r3, [sp, #196]	; 0xc4
   30910:	add	r5, sp, #72	; 0x48
   30914:	mov	r4, r9
   30918:	mov	r0, #1
   3091c:	ldr	r2, [fp]
   30920:	ldr	r3, [r3]
   30924:	sub	r3, r2, r3
   30928:	ldr	r2, [sl]
   3092c:	mls	r3, r2, r7, r3
   30930:	add	ip, ip, r3, lsl #2
   30934:	add	lr, lr, r3
   30938:	ldr	r3, [sp, #208]	; 0xd0
   3093c:	cmp	r0, r3
   30940:	bge	30b84 <GetDataSlab+0x14a80>
   30944:	ldr	r3, [r5, #4]
   30948:	add	r2, r3, #1
   3094c:	ldr	r3, [sp, #204]	; 0xcc
   30950:	str	r2, [r5, #4]
   30954:	ldr	r1, [r3, r0, lsl #2]
   30958:	sdiv	r3, r2, r1
   3095c:	mls	r3, r1, r3, r2
   30960:	cmp	r3, #0
   30964:	bne	30b70 <GetDataSlab+0x14a6c>
   30968:	ldr	r2, [r4, #4]
   3096c:	str	r3, [r5, #4]
   30970:	ldr	r1, [sp, #196]	; 0xc4
   30974:	sdiv	r3, lr, r2
   30978:	ldr	r1, [r1, r0, lsl #2]
   3097c:	mls	r3, r2, r3, lr
   30980:	cmp	r3, #0
   30984:	subne	r3, r2, r3
   30988:	ldrne	r2, [r4]
   3098c:	mlane	r3, r1, r2, r3
   30990:	bne	309a4 <GetDataSlab+0x148a0>
   30994:	cmp	r1, #0
   30998:	beq	309ac <GetDataSlab+0x148a8>
   3099c:	ldr	r3, [r4]
   309a0:	mul	r3, r3, r1
   309a4:	add	ip, ip, r3, lsl #2
   309a8:	add	lr, lr, r3
   309ac:	add	r0, r0, #1
   309b0:	add	r4, r4, #4
   309b4:	add	r5, r5, #4
   309b8:	b	30938 <GetDataSlab+0x14834>
   309bc:	ldr	r3, [sl, r2, lsl #2]
   309c0:	mov	r6, r0
   309c4:	sub	r3, r3, #1
   309c8:	str	r3, [r4, #4]
   309cc:	ldr	r3, [r5], #4
   309d0:	mov	r1, r5
   309d4:	str	r3, [r0, #4]
   309d8:	cmp	r1, fp
   309dc:	bne	30a0c <GetDataSlab+0x14908>
   309e0:	ldr	r1, [sp, #196]	; 0xc4
   309e4:	add	r0, r0, #4
   309e8:	add	r4, r4, #4
   309ec:	ldr	r3, [sp, #204]	; 0xcc
   309f0:	ldr	r1, [r1, r2, lsl #2]
   309f4:	ldr	r3, [r3, r2, lsl #2]
   309f8:	add	r2, r2, #1
   309fc:	mul	r8, r3, r8
   30a00:	ldr	r3, [r6]
   30a04:	mla	lr, r1, r3, lr
   30a08:	b	308b4 <GetDataSlab+0x147b0>
   30a0c:	str	r1, [sp, #8]
   30a10:	ldr	r3, [r1, #-4]!
   30a14:	ldr	ip, [r4, #4]
   30a18:	mul	r3, r3, ip
   30a1c:	ldr	ip, [r0, #4]
   30a20:	str	r3, [r4, #4]
   30a24:	ldr	r3, [sp, #8]
   30a28:	ldr	r3, [r3]
   30a2c:	mul	r3, r3, ip
   30a30:	str	r3, [r0, #4]
   30a34:	b	309d8 <GetDataSlab+0x148d4>
   30a38:	vldmia	r2!, {s15}
   30a3c:	add	r3, r3, #1
   30a40:	vcvt.u32.f32	s15, s15
   30a44:	vmov	r0, s15
   30a48:	strb	r0, [r1], #1
   30a4c:	b	30a94 <GetDataSlab+0x14990>
   30a50:	add	r3, sp, #152	; 0x98
   30a54:	add	r3, r3, r0, lsl #2
   30a58:	ldr	r3, [r3, #-120]	; 0xffffff88
   30a5c:	add	ip, ip, r3, lsl #2
   30a60:	add	lr, lr, r3
   30a64:	add	r6, r6, r7
   30a68:	cmp	r6, r8
   30a6c:	bge	1c230 <GetDataSlab+0x12c>
   30a70:	ldr	r3, [sp, #196]	; 0xc4
   30a74:	ldr	r3, [r3]
   30a78:	cmp	r3, #0
   30a7c:	addne	ip, ip, r3, lsl #2
   30a80:	addne	lr, lr, r3
   30a84:	ldr	r3, [sp]
   30a88:	mov	r2, ip
   30a8c:	add	r1, r3, r6
   30a90:	mov	r3, #0
   30a94:	ldr	r0, [sp, #204]	; 0xcc
   30a98:	ldr	r7, [r0]
   30a9c:	cmp	r7, r3
   30aa0:	bgt	30a38 <GetDataSlab+0x14934>
   30aa4:	ldr	r3, [sp, #196]	; 0xc4
   30aa8:	add	r5, sp, #72	; 0x48
   30aac:	mov	r4, r9
   30ab0:	mov	r0, #1
   30ab4:	ldr	r2, [fp]
   30ab8:	ldr	r3, [r3]
   30abc:	sub	r3, r2, r3
   30ac0:	add	ip, ip, r3, lsl #2
   30ac4:	add	lr, lr, r3
   30ac8:	ldr	r3, [sp, #208]	; 0xd0
   30acc:	cmp	r0, r3
   30ad0:	bge	30a64 <GetDataSlab+0x14960>
   30ad4:	ldr	r3, [r5, #4]
   30ad8:	add	r2, r3, #1
   30adc:	ldr	r3, [sp, #204]	; 0xcc
   30ae0:	str	r2, [r5, #4]
   30ae4:	ldr	r1, [r3, r0, lsl #2]
   30ae8:	sdiv	r3, r2, r1
   30aec:	mls	r3, r1, r3, r2
   30af0:	cmp	r3, #0
   30af4:	bne	30a50 <GetDataSlab+0x1494c>
   30af8:	ldr	r2, [r4, #4]
   30afc:	str	r3, [r5, #4]
   30b00:	ldr	r1, [sp, #196]	; 0xc4
   30b04:	sdiv	r3, lr, r2
   30b08:	ldr	r1, [r1, r0, lsl #2]
   30b0c:	mls	r3, r2, r3, lr
   30b10:	cmp	r3, #0
   30b14:	ldrne	sl, [r4]
   30b18:	subne	r3, r2, r3
   30b1c:	mlane	r3, r1, sl, r3
   30b20:	bne	30b34 <GetDataSlab+0x14a30>
   30b24:	cmp	r1, #0
   30b28:	beq	30b3c <GetDataSlab+0x14a38>
   30b2c:	ldr	r3, [r4]
   30b30:	mul	r3, r3, r1
   30b34:	add	ip, ip, r3, lsl #2
   30b38:	add	lr, lr, r3
   30b3c:	add	r0, r0, #1
   30b40:	add	r4, r4, #4
   30b44:	add	r5, r5, #4
   30b48:	b	30ac8 <GetDataSlab+0x149c4>
   30b4c:	vldr	s15, [ip]
   30b50:	add	r3, r3, #1
   30b54:	vcvt.u32.f32	s15, s15
   30b58:	vmov	r1, s15
   30b5c:	strb	r1, [r2], #1
   30b60:	ldr	r1, [sl]
   30b64:	add	ip, ip, r1, lsl #2
   30b68:	add	lr, lr, r1
   30b6c:	b	308fc <GetDataSlab+0x147f8>
   30b70:	add	r3, sp, #152	; 0x98
   30b74:	add	r3, r3, r0, lsl #2
   30b78:	ldr	r3, [r3, #-120]	; 0xffffff88
   30b7c:	add	ip, ip, r3, lsl #2
   30b80:	add	lr, lr, r3
   30b84:	add	r6, r6, r7
   30b88:	b	308d4 <GetDataSlab+0x147d0>
   30b8c:	ldr	r7, [sl]
   30b90:	add	r9, sp, #112	; 0x70
   30b94:	add	r4, sp, #32
   30b98:	mov	r5, fp
   30b9c:	mov	r0, r9
   30ba0:	mov	ip, #0
   30ba4:	mov	r2, #1
   30ba8:	sub	r3, r7, #1
   30bac:	str	r3, [sp, #32]
   30bb0:	ldr	r3, [fp]
   30bb4:	str	r3, [sp, #112]	; 0x70
   30bb8:	ldr	r3, [sp, #204]	; 0xcc
   30bbc:	ldr	r8, [r3]
   30bc0:	ldr	r3, [sp, #208]	; 0xd0
   30bc4:	cmp	r2, r3
   30bc8:	blt	30cc8 <GetDataSlab+0x14bc4>
   30bcc:	ldr	r3, [sp, #4]
   30bd0:	cmp	r7, #1
   30bd4:	mov	r6, #0
   30bd8:	add	r0, r3, ip, lsl #2
   30bdc:	beq	30d6c <GetDataSlab+0x14c68>
   30be0:	cmp	r6, r8
   30be4:	bge	1c230 <GetDataSlab+0x12c>
   30be8:	ldr	r3, [sp, #196]	; 0xc4
   30bec:	ldr	r3, [r3]
   30bf0:	cmp	r3, #0
   30bf4:	addne	r0, r0, r3, lsl #2
   30bf8:	addne	ip, ip, r3
   30bfc:	ldr	r3, [sp]
   30c00:	add	r2, r3, r6
   30c04:	mov	r3, #0
   30c08:	ldr	r1, [sp, #204]	; 0xcc
   30c0c:	ldr	r7, [r1]
   30c10:	cmp	r7, r3
   30c14:	bgt	30e4c <GetDataSlab+0x14d48>
   30c18:	ldr	r3, [sp, #196]	; 0xc4
   30c1c:	add	r5, sp, #72	; 0x48
   30c20:	mov	r4, r9
   30c24:	mov	lr, #1
   30c28:	ldr	r2, [fp]
   30c2c:	ldr	r3, [r3]
   30c30:	sub	r3, r2, r3
   30c34:	ldr	r2, [sl]
   30c38:	mls	r3, r2, r7, r3
   30c3c:	add	r0, r0, r3, lsl #2
   30c40:	add	ip, ip, r3
   30c44:	ldr	r3, [sp, #208]	; 0xd0
   30c48:	cmp	lr, r3
   30c4c:	bge	30e7c <GetDataSlab+0x14d78>
   30c50:	ldr	r3, [r5, #4]
   30c54:	add	r2, r3, #1
   30c58:	ldr	r3, [sp, #204]	; 0xcc
   30c5c:	str	r2, [r5, #4]
   30c60:	ldr	r1, [r3, lr, lsl #2]
   30c64:	sdiv	r3, r2, r1
   30c68:	mls	r3, r1, r3, r2
   30c6c:	cmp	r3, #0
   30c70:	bne	30e68 <GetDataSlab+0x14d64>
   30c74:	ldr	r2, [r4, #4]
   30c78:	str	r3, [r5, #4]
   30c7c:	ldr	r1, [sp, #196]	; 0xc4
   30c80:	sdiv	r3, ip, r2
   30c84:	ldr	r1, [r1, lr, lsl #2]
   30c88:	mls	r3, r2, r3, ip
   30c8c:	cmp	r3, #0
   30c90:	subne	r3, r2, r3
   30c94:	ldrne	r2, [r4]
   30c98:	mlane	r3, r1, r2, r3
   30c9c:	bne	30cb0 <GetDataSlab+0x14bac>
   30ca0:	cmp	r1, #0
   30ca4:	beq	30cb8 <GetDataSlab+0x14bb4>
   30ca8:	ldr	r3, [r4]
   30cac:	mul	r3, r3, r1
   30cb0:	add	r0, r0, r3, lsl #2
   30cb4:	add	ip, ip, r3
   30cb8:	add	lr, lr, #1
   30cbc:	add	r4, r4, #4
   30cc0:	add	r5, r5, #4
   30cc4:	b	30c44 <GetDataSlab+0x14b40>
   30cc8:	ldr	r3, [sl, r2, lsl #2]
   30ccc:	mov	r6, r0
   30cd0:	sub	r3, r3, #1
   30cd4:	str	r3, [r4, #4]
   30cd8:	ldr	r3, [r5], #4
   30cdc:	mov	r1, r5
   30ce0:	str	r3, [r0, #4]
   30ce4:	cmp	r1, fp
   30ce8:	bne	30d18 <GetDataSlab+0x14c14>
   30cec:	ldr	r1, [sp, #196]	; 0xc4
   30cf0:	add	r0, r0, #4
   30cf4:	add	r4, r4, #4
   30cf8:	ldr	r3, [sp, #204]	; 0xcc
   30cfc:	ldr	r1, [r1, r2, lsl #2]
   30d00:	ldr	r3, [r3, r2, lsl #2]
   30d04:	add	r2, r2, #1
   30d08:	mul	r8, r3, r8
   30d0c:	ldr	r3, [r6]
   30d10:	mla	ip, r1, r3, ip
   30d14:	b	30bc0 <GetDataSlab+0x14abc>
   30d18:	str	r1, [sp, #8]
   30d1c:	ldr	r3, [r1, #-4]!
   30d20:	ldr	lr, [r4, #4]
   30d24:	mul	r3, r3, lr
   30d28:	ldr	lr, [r0, #4]
   30d2c:	str	r3, [r4, #4]
   30d30:	ldr	r3, [sp, #8]
   30d34:	ldr	r3, [r3]
   30d38:	mul	r3, r3, lr
   30d3c:	str	r3, [r0, #4]
   30d40:	b	30ce4 <GetDataSlab+0x14be0>
   30d44:	ldr	r1, [r0, r3, lsl #2]
   30d48:	add	r3, r3, #1
   30d4c:	strb	r1, [r2], #1
   30d50:	b	30d94 <GetDataSlab+0x14c90>
   30d54:	add	r3, sp, #152	; 0x98
   30d58:	add	r3, r3, lr, lsl #2
   30d5c:	ldr	r3, [r3, #-120]	; 0xffffff88
   30d60:	add	r0, r0, r3, lsl #2
   30d64:	add	ip, ip, r3
   30d68:	add	r6, r6, r7
   30d6c:	cmp	r6, r8
   30d70:	bge	1c230 <GetDataSlab+0x12c>
   30d74:	ldr	r3, [sp, #196]	; 0xc4
   30d78:	ldr	r3, [r3]
   30d7c:	cmp	r3, #0
   30d80:	addne	r0, r0, r3, lsl #2
   30d84:	addne	ip, ip, r3
   30d88:	ldr	r3, [sp]
   30d8c:	add	r2, r3, r6
   30d90:	mov	r3, #0
   30d94:	ldr	r1, [sp, #204]	; 0xcc
   30d98:	ldr	r7, [r1]
   30d9c:	cmp	r7, r3
   30da0:	bgt	30d44 <GetDataSlab+0x14c40>
   30da4:	ldr	r3, [sp, #196]	; 0xc4
   30da8:	add	r5, sp, #72	; 0x48
   30dac:	mov	r4, r9
   30db0:	mov	lr, #1
   30db4:	ldr	r2, [fp]
   30db8:	ldr	r3, [r3]
   30dbc:	sub	r3, r2, r3
   30dc0:	add	r0, r0, r3, lsl #2
   30dc4:	add	ip, ip, r3
   30dc8:	ldr	r3, [sp, #208]	; 0xd0
   30dcc:	cmp	lr, r3
   30dd0:	bge	30d68 <GetDataSlab+0x14c64>
   30dd4:	ldr	r3, [r5, #4]
   30dd8:	add	r2, r3, #1
   30ddc:	ldr	r3, [sp, #204]	; 0xcc
   30de0:	str	r2, [r5, #4]
   30de4:	ldr	r1, [r3, lr, lsl #2]
   30de8:	sdiv	r3, r2, r1
   30dec:	mls	r3, r1, r3, r2
   30df0:	cmp	r3, #0
   30df4:	bne	30d54 <GetDataSlab+0x14c50>
   30df8:	ldr	r2, [r4, #4]
   30dfc:	str	r3, [r5, #4]
   30e00:	ldr	r1, [sp, #196]	; 0xc4
   30e04:	sdiv	r3, ip, r2
   30e08:	ldr	r1, [r1, lr, lsl #2]
   30e0c:	mls	r3, r2, r3, ip
   30e10:	cmp	r3, #0
   30e14:	ldrne	sl, [r4]
   30e18:	subne	r3, r2, r3
   30e1c:	mlane	r3, r1, sl, r3
   30e20:	bne	30e34 <GetDataSlab+0x14d30>
   30e24:	cmp	r1, #0
   30e28:	beq	30e3c <GetDataSlab+0x14d38>
   30e2c:	ldr	r3, [r4]
   30e30:	mul	r3, r3, r1
   30e34:	add	r0, r0, r3, lsl #2
   30e38:	add	ip, ip, r3
   30e3c:	add	lr, lr, #1
   30e40:	add	r4, r4, #4
   30e44:	add	r5, r5, #4
   30e48:	b	30dc8 <GetDataSlab+0x14cc4>
   30e4c:	ldr	r1, [r0]
   30e50:	add	r3, r3, #1
   30e54:	strb	r1, [r2], #1
   30e58:	ldr	r1, [sl]
   30e5c:	add	r0, r0, r1, lsl #2
   30e60:	add	ip, ip, r1
   30e64:	b	30c08 <GetDataSlab+0x14b04>
   30e68:	add	r3, sp, #152	; 0x98
   30e6c:	add	r3, r3, lr, lsl #2
   30e70:	ldr	r3, [r3, #-120]	; 0xffffff88
   30e74:	add	r0, r0, r3, lsl #2
   30e78:	add	ip, ip, r3
   30e7c:	add	r6, r6, r7
   30e80:	b	30be0 <GetDataSlab+0x14adc>
   30e84:	ldr	r7, [sl]
   30e88:	add	r9, sp, #112	; 0x70
   30e8c:	add	r4, sp, #32
   30e90:	mov	r5, fp
   30e94:	mov	r0, r9
   30e98:	mov	ip, #0
   30e9c:	mov	r2, #1
   30ea0:	sub	r3, r7, #1
   30ea4:	str	r3, [sp, #32]
   30ea8:	ldr	r3, [fp]
   30eac:	str	r3, [sp, #112]	; 0x70
   30eb0:	ldr	r3, [sp, #204]	; 0xcc
   30eb4:	ldr	r8, [r3]
   30eb8:	ldr	r3, [sp, #208]	; 0xd0
   30ebc:	cmp	r2, r3
   30ec0:	blt	30fc0 <GetDataSlab+0x14ebc>
   30ec4:	ldr	r3, [sp, #4]
   30ec8:	cmp	r7, #1
   30ecc:	mov	r6, #0
   30ed0:	add	r0, r3, ip, lsl #2
   30ed4:	beq	31064 <GetDataSlab+0x14f60>
   30ed8:	cmp	r6, r8
   30edc:	bge	1c230 <GetDataSlab+0x12c>
   30ee0:	ldr	r3, [sp, #196]	; 0xc4
   30ee4:	ldr	r3, [r3]
   30ee8:	cmp	r3, #0
   30eec:	addne	r0, r0, r3, lsl #2
   30ef0:	addne	ip, ip, r3
   30ef4:	ldr	r3, [sp]
   30ef8:	add	r2, r3, r6
   30efc:	mov	r3, #0
   30f00:	ldr	r1, [sp, #204]	; 0xcc
   30f04:	ldr	r7, [r1]
   30f08:	cmp	r7, r3
   30f0c:	bgt	31144 <GetDataSlab+0x15040>
   30f10:	ldr	r3, [sp, #196]	; 0xc4
   30f14:	add	r5, sp, #72	; 0x48
   30f18:	mov	r4, r9
   30f1c:	mov	lr, #1
   30f20:	ldr	r2, [fp]
   30f24:	ldr	r3, [r3]
   30f28:	sub	r3, r2, r3
   30f2c:	ldr	r2, [sl]
   30f30:	mls	r3, r2, r7, r3
   30f34:	add	r0, r0, r3, lsl #2
   30f38:	add	ip, ip, r3
   30f3c:	ldr	r3, [sp, #208]	; 0xd0
   30f40:	cmp	lr, r3
   30f44:	bge	31174 <GetDataSlab+0x15070>
   30f48:	ldr	r3, [r5, #4]
   30f4c:	add	r2, r3, #1
   30f50:	ldr	r3, [sp, #204]	; 0xcc
   30f54:	str	r2, [r5, #4]
   30f58:	ldr	r1, [r3, lr, lsl #2]
   30f5c:	sdiv	r3, r2, r1
   30f60:	mls	r3, r1, r3, r2
   30f64:	cmp	r3, #0
   30f68:	bne	31160 <GetDataSlab+0x1505c>
   30f6c:	ldr	r2, [r4, #4]
   30f70:	str	r3, [r5, #4]
   30f74:	ldr	r1, [sp, #196]	; 0xc4
   30f78:	sdiv	r3, ip, r2
   30f7c:	ldr	r1, [r1, lr, lsl #2]
   30f80:	mls	r3, r2, r3, ip
   30f84:	cmp	r3, #0
   30f88:	subne	r3, r2, r3
   30f8c:	ldrne	r2, [r4]
   30f90:	mlane	r3, r1, r2, r3
   30f94:	bne	30fa8 <GetDataSlab+0x14ea4>
   30f98:	cmp	r1, #0
   30f9c:	beq	30fb0 <GetDataSlab+0x14eac>
   30fa0:	ldr	r3, [r4]
   30fa4:	mul	r3, r3, r1
   30fa8:	add	r0, r0, r3, lsl #2
   30fac:	add	ip, ip, r3
   30fb0:	add	lr, lr, #1
   30fb4:	add	r4, r4, #4
   30fb8:	add	r5, r5, #4
   30fbc:	b	30f3c <GetDataSlab+0x14e38>
   30fc0:	ldr	r3, [sl, r2, lsl #2]
   30fc4:	mov	r6, r0
   30fc8:	sub	r3, r3, #1
   30fcc:	str	r3, [r4, #4]
   30fd0:	ldr	r3, [r5], #4
   30fd4:	mov	r1, r5
   30fd8:	str	r3, [r0, #4]
   30fdc:	cmp	r1, fp
   30fe0:	bne	31010 <GetDataSlab+0x14f0c>
   30fe4:	ldr	r1, [sp, #196]	; 0xc4
   30fe8:	add	r0, r0, #4
   30fec:	add	r4, r4, #4
   30ff0:	ldr	r3, [sp, #204]	; 0xcc
   30ff4:	ldr	r1, [r1, r2, lsl #2]
   30ff8:	ldr	r3, [r3, r2, lsl #2]
   30ffc:	add	r2, r2, #1
   31000:	mul	r8, r3, r8
   31004:	ldr	r3, [r6]
   31008:	mla	ip, r1, r3, ip
   3100c:	b	30eb8 <GetDataSlab+0x14db4>
   31010:	str	r1, [sp, #8]
   31014:	ldr	r3, [r1, #-4]!
   31018:	ldr	lr, [r4, #4]
   3101c:	mul	r3, r3, lr
   31020:	ldr	lr, [r0, #4]
   31024:	str	r3, [r4, #4]
   31028:	ldr	r3, [sp, #8]
   3102c:	ldr	r3, [r3]
   31030:	mul	r3, r3, lr
   31034:	str	r3, [r0, #4]
   31038:	b	30fdc <GetDataSlab+0x14ed8>
   3103c:	ldr	r1, [r0, r3, lsl #2]
   31040:	add	r3, r3, #1
   31044:	strb	r1, [r2], #1
   31048:	b	3108c <GetDataSlab+0x14f88>
   3104c:	add	r3, sp, #152	; 0x98
   31050:	add	r3, r3, lr, lsl #2
   31054:	ldr	r3, [r3, #-120]	; 0xffffff88
   31058:	add	r0, r0, r3, lsl #2
   3105c:	add	ip, ip, r3
   31060:	add	r6, r6, r7
   31064:	cmp	r6, r8
   31068:	bge	1c230 <GetDataSlab+0x12c>
   3106c:	ldr	r3, [sp, #196]	; 0xc4
   31070:	ldr	r3, [r3]
   31074:	cmp	r3, #0
   31078:	addne	r0, r0, r3, lsl #2
   3107c:	addne	ip, ip, r3
   31080:	ldr	r3, [sp]
   31084:	add	r2, r3, r6
   31088:	mov	r3, #0
   3108c:	ldr	r1, [sp, #204]	; 0xcc
   31090:	ldr	r7, [r1]
   31094:	cmp	r7, r3
   31098:	bgt	3103c <GetDataSlab+0x14f38>
   3109c:	ldr	r3, [sp, #196]	; 0xc4
   310a0:	add	r5, sp, #72	; 0x48
   310a4:	mov	r4, r9
   310a8:	mov	lr, #1
   310ac:	ldr	r2, [fp]
   310b0:	ldr	r3, [r3]
   310b4:	sub	r3, r2, r3
   310b8:	add	r0, r0, r3, lsl #2
   310bc:	add	ip, ip, r3
   310c0:	ldr	r3, [sp, #208]	; 0xd0
   310c4:	cmp	lr, r3
   310c8:	bge	31060 <GetDataSlab+0x14f5c>
   310cc:	ldr	r3, [r5, #4]
   310d0:	add	r2, r3, #1
   310d4:	ldr	r3, [sp, #204]	; 0xcc
   310d8:	str	r2, [r5, #4]
   310dc:	ldr	r1, [r3, lr, lsl #2]
   310e0:	sdiv	r3, r2, r1
   310e4:	mls	r3, r1, r3, r2
   310e8:	cmp	r3, #0
   310ec:	bne	3104c <GetDataSlab+0x14f48>
   310f0:	ldr	r2, [r4, #4]
   310f4:	str	r3, [r5, #4]
   310f8:	ldr	r1, [sp, #196]	; 0xc4
   310fc:	sdiv	r3, ip, r2
   31100:	ldr	r1, [r1, lr, lsl #2]
   31104:	mls	r3, r2, r3, ip
   31108:	cmp	r3, #0
   3110c:	ldrne	sl, [r4]
   31110:	subne	r3, r2, r3
   31114:	mlane	r3, r1, sl, r3
   31118:	bne	3112c <GetDataSlab+0x15028>
   3111c:	cmp	r1, #0
   31120:	beq	31134 <GetDataSlab+0x15030>
   31124:	ldr	r3, [r4]
   31128:	mul	r3, r3, r1
   3112c:	add	r0, r0, r3, lsl #2
   31130:	add	ip, ip, r3
   31134:	add	lr, lr, #1
   31138:	add	r4, r4, #4
   3113c:	add	r5, r5, #4
   31140:	b	310c0 <GetDataSlab+0x14fbc>
   31144:	ldr	r1, [r0]
   31148:	add	r3, r3, #1
   3114c:	strb	r1, [r2], #1
   31150:	ldr	r1, [sl]
   31154:	add	r0, r0, r1, lsl #2
   31158:	add	ip, ip, r1
   3115c:	b	30f00 <GetDataSlab+0x14dfc>
   31160:	add	r3, sp, #152	; 0x98
   31164:	add	r3, r3, lr, lsl #2
   31168:	ldr	r3, [r3, #-120]	; 0xffffff88
   3116c:	add	r0, r0, r3, lsl #2
   31170:	add	ip, ip, r3
   31174:	add	r6, r6, r7
   31178:	b	30ed8 <GetDataSlab+0x14dd4>
   3117c:	ldr	r7, [sl]
   31180:	add	r9, sp, #112	; 0x70
   31184:	add	r4, sp, #32
   31188:	mov	r5, fp
   3118c:	mov	r0, r9
   31190:	mov	lr, #0
   31194:	mov	r2, #1
   31198:	sub	r3, r7, #1
   3119c:	str	r3, [sp, #32]
   311a0:	ldr	r3, [fp]
   311a4:	str	r3, [sp, #112]	; 0x70
   311a8:	ldr	r3, [sp, #204]	; 0xcc
   311ac:	ldr	r8, [r3]
   311b0:	ldr	r3, [sp, #208]	; 0xd0
   311b4:	cmp	r2, r3
   311b8:	blt	312b8 <GetDataSlab+0x151b4>
   311bc:	ldr	r3, [sp, #4]
   311c0:	cmp	r7, #1
   311c4:	mov	r6, #0
   311c8:	add	ip, r3, lr, lsl #1
   311cc:	beq	3135c <GetDataSlab+0x15258>
   311d0:	cmp	r6, r8
   311d4:	bge	1c230 <GetDataSlab+0x12c>
   311d8:	ldr	r3, [sp, #196]	; 0xc4
   311dc:	ldr	r3, [r3]
   311e0:	cmp	r3, #0
   311e4:	addne	ip, ip, r3, lsl #1
   311e8:	addne	lr, lr, r3
   311ec:	ldr	r3, [sp]
   311f0:	add	r2, r3, r6
   311f4:	mov	r3, #0
   311f8:	ldr	r1, [sp, #204]	; 0xcc
   311fc:	ldr	r7, [r1]
   31200:	cmp	r7, r3
   31204:	bgt	31440 <GetDataSlab+0x1533c>
   31208:	ldr	r3, [sp, #196]	; 0xc4
   3120c:	add	r5, sp, #72	; 0x48
   31210:	mov	r4, r9
   31214:	mov	r0, #1
   31218:	ldr	r2, [fp]
   3121c:	ldr	r3, [r3]
   31220:	sub	r3, r2, r3
   31224:	ldr	r2, [sl]
   31228:	mls	r3, r2, r7, r3
   3122c:	add	ip, ip, r3, lsl #1
   31230:	add	lr, lr, r3
   31234:	ldr	r3, [sp, #208]	; 0xd0
   31238:	cmp	r0, r3
   3123c:	bge	31470 <GetDataSlab+0x1536c>
   31240:	ldr	r3, [r5, #4]
   31244:	add	r2, r3, #1
   31248:	ldr	r3, [sp, #204]	; 0xcc
   3124c:	str	r2, [r5, #4]
   31250:	ldr	r1, [r3, r0, lsl #2]
   31254:	sdiv	r3, r2, r1
   31258:	mls	r3, r1, r3, r2
   3125c:	cmp	r3, #0
   31260:	bne	3145c <GetDataSlab+0x15358>
   31264:	ldr	r2, [r4, #4]
   31268:	str	r3, [r5, #4]
   3126c:	ldr	r1, [sp, #196]	; 0xc4
   31270:	sdiv	r3, lr, r2
   31274:	ldr	r1, [r1, r0, lsl #2]
   31278:	mls	r3, r2, r3, lr
   3127c:	cmp	r3, #0
   31280:	subne	r3, r2, r3
   31284:	ldrne	r2, [r4]
   31288:	mlane	r3, r1, r2, r3
   3128c:	bne	312a0 <GetDataSlab+0x1519c>
   31290:	cmp	r1, #0
   31294:	beq	312a8 <GetDataSlab+0x151a4>
   31298:	ldr	r3, [r4]
   3129c:	mul	r3, r3, r1
   312a0:	add	ip, ip, r3, lsl #1
   312a4:	add	lr, lr, r3
   312a8:	add	r0, r0, #1
   312ac:	add	r4, r4, #4
   312b0:	add	r5, r5, #4
   312b4:	b	31234 <GetDataSlab+0x15130>
   312b8:	ldr	r3, [sl, r2, lsl #2]
   312bc:	mov	r6, r0
   312c0:	sub	r3, r3, #1
   312c4:	str	r3, [r4, #4]
   312c8:	ldr	r3, [r5], #4
   312cc:	mov	r1, r5
   312d0:	str	r3, [r0, #4]
   312d4:	cmp	r1, fp
   312d8:	bne	31308 <GetDataSlab+0x15204>
   312dc:	ldr	r1, [sp, #196]	; 0xc4
   312e0:	add	r0, r0, #4
   312e4:	add	r4, r4, #4
   312e8:	ldr	r3, [sp, #204]	; 0xcc
   312ec:	ldr	r1, [r1, r2, lsl #2]
   312f0:	ldr	r3, [r3, r2, lsl #2]
   312f4:	add	r2, r2, #1
   312f8:	mul	r8, r3, r8
   312fc:	ldr	r3, [r6]
   31300:	mla	lr, r1, r3, lr
   31304:	b	311b0 <GetDataSlab+0x150ac>
   31308:	str	r1, [sp, #8]
   3130c:	ldr	r3, [r1, #-4]!
   31310:	ldr	ip, [r4, #4]
   31314:	mul	r3, r3, ip
   31318:	ldr	ip, [r0, #4]
   3131c:	str	r3, [r4, #4]
   31320:	ldr	r3, [sp, #8]
   31324:	ldr	r3, [r3]
   31328:	mul	r3, r3, ip
   3132c:	str	r3, [r0, #4]
   31330:	b	312d4 <GetDataSlab+0x151d0>
   31334:	ldrh	r0, [r2, #2]!
   31338:	add	r3, r3, #1
   3133c:	strb	r0, [r1], #1
   31340:	b	31388 <GetDataSlab+0x15284>
   31344:	add	r3, sp, #152	; 0x98
   31348:	add	r3, r3, r0, lsl #2
   3134c:	ldr	r3, [r3, #-120]	; 0xffffff88
   31350:	add	ip, ip, r3, lsl #1
   31354:	add	lr, lr, r3
   31358:	add	r6, r6, r7
   3135c:	cmp	r6, r8
   31360:	bge	1c230 <GetDataSlab+0x12c>
   31364:	ldr	r3, [sp, #196]	; 0xc4
   31368:	ldr	r3, [r3]
   3136c:	cmp	r3, #0
   31370:	addne	ip, ip, r3, lsl #1
   31374:	addne	lr, lr, r3
   31378:	ldr	r3, [sp]
   3137c:	sub	r2, ip, #2
   31380:	add	r1, r3, r6
   31384:	mov	r3, #0
   31388:	ldr	r0, [sp, #204]	; 0xcc
   3138c:	ldr	r7, [r0]
   31390:	cmp	r7, r3
   31394:	bgt	31334 <GetDataSlab+0x15230>
   31398:	ldr	r3, [sp, #196]	; 0xc4
   3139c:	add	r5, sp, #72	; 0x48
   313a0:	mov	r4, r9
   313a4:	mov	r0, #1
   313a8:	ldr	r2, [fp]
   313ac:	ldr	r3, [r3]
   313b0:	sub	r3, r2, r3
   313b4:	add	ip, ip, r3, lsl #1
   313b8:	add	lr, lr, r3
   313bc:	ldr	r3, [sp, #208]	; 0xd0
   313c0:	cmp	r0, r3
   313c4:	bge	31358 <GetDataSlab+0x15254>
   313c8:	ldr	r3, [r5, #4]
   313cc:	add	r2, r3, #1
   313d0:	ldr	r3, [sp, #204]	; 0xcc
   313d4:	str	r2, [r5, #4]
   313d8:	ldr	r1, [r3, r0, lsl #2]
   313dc:	sdiv	r3, r2, r1
   313e0:	mls	r3, r1, r3, r2
   313e4:	cmp	r3, #0
   313e8:	bne	31344 <GetDataSlab+0x15240>
   313ec:	ldr	r2, [r4, #4]
   313f0:	str	r3, [r5, #4]
   313f4:	ldr	r1, [sp, #196]	; 0xc4
   313f8:	sdiv	r3, lr, r2
   313fc:	ldr	r1, [r1, r0, lsl #2]
   31400:	mls	r3, r2, r3, lr
   31404:	cmp	r3, #0
   31408:	ldrne	sl, [r4]
   3140c:	subne	r3, r2, r3
   31410:	mlane	r3, r1, sl, r3
   31414:	bne	31428 <GetDataSlab+0x15324>
   31418:	cmp	r1, #0
   3141c:	beq	31430 <GetDataSlab+0x1532c>
   31420:	ldr	r3, [r4]
   31424:	mul	r3, r3, r1
   31428:	add	ip, ip, r3, lsl #1
   3142c:	add	lr, lr, r3
   31430:	add	r0, r0, #1
   31434:	add	r4, r4, #4
   31438:	add	r5, r5, #4
   3143c:	b	313bc <GetDataSlab+0x152b8>
   31440:	ldrh	r1, [ip]
   31444:	add	r3, r3, #1
   31448:	strb	r1, [r2], #1
   3144c:	ldr	r1, [sl]
   31450:	add	ip, ip, r1, lsl #1
   31454:	add	lr, lr, r1
   31458:	b	311f8 <GetDataSlab+0x150f4>
   3145c:	add	r3, sp, #152	; 0x98
   31460:	add	r3, r3, r0, lsl #2
   31464:	ldr	r3, [r3, #-120]	; 0xffffff88
   31468:	add	ip, ip, r3, lsl #1
   3146c:	add	lr, lr, r3
   31470:	add	r6, r6, r7
   31474:	b	311d0 <GetDataSlab+0x150cc>
   31478:	ldr	r7, [sl]
   3147c:	add	r9, sp, #112	; 0x70
   31480:	add	r4, sp, #32
   31484:	mov	r5, fp
   31488:	mov	r0, r9
   3148c:	mov	lr, #0
   31490:	mov	r2, #1
   31494:	sub	r3, r7, #1
   31498:	str	r3, [sp, #32]
   3149c:	ldr	r3, [fp]
   314a0:	str	r3, [sp, #112]	; 0x70
   314a4:	ldr	r3, [sp, #204]	; 0xcc
   314a8:	ldr	r8, [r3]
   314ac:	ldr	r3, [sp, #208]	; 0xd0
   314b0:	cmp	r2, r3
   314b4:	blt	315b4 <GetDataSlab+0x154b0>
   314b8:	ldr	r3, [sp, #4]
   314bc:	cmp	r7, #1
   314c0:	mov	r6, #0
   314c4:	add	ip, r3, lr, lsl #1
   314c8:	beq	31658 <GetDataSlab+0x15554>
   314cc:	cmp	r6, r8
   314d0:	bge	1c230 <GetDataSlab+0x12c>
   314d4:	ldr	r3, [sp, #196]	; 0xc4
   314d8:	ldr	r3, [r3]
   314dc:	cmp	r3, #0
   314e0:	addne	ip, ip, r3, lsl #1
   314e4:	addne	lr, lr, r3
   314e8:	ldr	r3, [sp]
   314ec:	add	r2, r3, r6
   314f0:	mov	r3, #0
   314f4:	ldr	r1, [sp, #204]	; 0xcc
   314f8:	ldr	r7, [r1]
   314fc:	cmp	r7, r3
   31500:	bgt	3173c <GetDataSlab+0x15638>
   31504:	ldr	r3, [sp, #196]	; 0xc4
   31508:	add	r5, sp, #72	; 0x48
   3150c:	mov	r4, r9
   31510:	mov	r0, #1
   31514:	ldr	r2, [fp]
   31518:	ldr	r3, [r3]
   3151c:	sub	r3, r2, r3
   31520:	ldr	r2, [sl]
   31524:	mls	r3, r2, r7, r3
   31528:	add	ip, ip, r3, lsl #1
   3152c:	add	lr, lr, r3
   31530:	ldr	r3, [sp, #208]	; 0xd0
   31534:	cmp	r0, r3
   31538:	bge	3176c <GetDataSlab+0x15668>
   3153c:	ldr	r3, [r5, #4]
   31540:	add	r2, r3, #1
   31544:	ldr	r3, [sp, #204]	; 0xcc
   31548:	str	r2, [r5, #4]
   3154c:	ldr	r1, [r3, r0, lsl #2]
   31550:	sdiv	r3, r2, r1
   31554:	mls	r3, r1, r3, r2
   31558:	cmp	r3, #0
   3155c:	bne	31758 <GetDataSlab+0x15654>
   31560:	ldr	r2, [r4, #4]
   31564:	str	r3, [r5, #4]
   31568:	ldr	r1, [sp, #196]	; 0xc4
   3156c:	sdiv	r3, lr, r2
   31570:	ldr	r1, [r1, r0, lsl #2]
   31574:	mls	r3, r2, r3, lr
   31578:	cmp	r3, #0
   3157c:	subne	r3, r2, r3
   31580:	ldrne	r2, [r4]
   31584:	mlane	r3, r1, r2, r3
   31588:	bne	3159c <GetDataSlab+0x15498>
   3158c:	cmp	r1, #0
   31590:	beq	315a4 <GetDataSlab+0x154a0>
   31594:	ldr	r3, [r4]
   31598:	mul	r3, r3, r1
   3159c:	add	ip, ip, r3, lsl #1
   315a0:	add	lr, lr, r3
   315a4:	add	r0, r0, #1
   315a8:	add	r4, r4, #4
   315ac:	add	r5, r5, #4
   315b0:	b	31530 <GetDataSlab+0x1542c>
   315b4:	ldr	r3, [sl, r2, lsl #2]
   315b8:	mov	r6, r0
   315bc:	sub	r3, r3, #1
   315c0:	str	r3, [r4, #4]
   315c4:	ldr	r3, [r5], #4
   315c8:	mov	r1, r5
   315cc:	str	r3, [r0, #4]
   315d0:	cmp	r1, fp
   315d4:	bne	31604 <GetDataSlab+0x15500>
   315d8:	ldr	r1, [sp, #196]	; 0xc4
   315dc:	add	r0, r0, #4
   315e0:	add	r4, r4, #4
   315e4:	ldr	r3, [sp, #204]	; 0xcc
   315e8:	ldr	r1, [r1, r2, lsl #2]
   315ec:	ldr	r3, [r3, r2, lsl #2]
   315f0:	add	r2, r2, #1
   315f4:	mul	r8, r3, r8
   315f8:	ldr	r3, [r6]
   315fc:	mla	lr, r1, r3, lr
   31600:	b	314ac <GetDataSlab+0x153a8>
   31604:	str	r1, [sp, #8]
   31608:	ldr	r3, [r1, #-4]!
   3160c:	ldr	ip, [r4, #4]
   31610:	mul	r3, r3, ip
   31614:	ldr	ip, [r0, #4]
   31618:	str	r3, [r4, #4]
   3161c:	ldr	r3, [sp, #8]
   31620:	ldr	r3, [r3]
   31624:	mul	r3, r3, ip
   31628:	str	r3, [r0, #4]
   3162c:	b	315d0 <GetDataSlab+0x154cc>
   31630:	ldrh	r0, [r2, #2]!
   31634:	add	r3, r3, #1
   31638:	strb	r0, [r1], #1
   3163c:	b	31684 <GetDataSlab+0x15580>
   31640:	add	r3, sp, #152	; 0x98
   31644:	add	r3, r3, r0, lsl #2
   31648:	ldr	r3, [r3, #-120]	; 0xffffff88
   3164c:	add	ip, ip, r3, lsl #1
   31650:	add	lr, lr, r3
   31654:	add	r6, r6, r7
   31658:	cmp	r6, r8
   3165c:	bge	1c230 <GetDataSlab+0x12c>
   31660:	ldr	r3, [sp, #196]	; 0xc4
   31664:	ldr	r3, [r3]
   31668:	cmp	r3, #0
   3166c:	addne	ip, ip, r3, lsl #1
   31670:	addne	lr, lr, r3
   31674:	ldr	r3, [sp]
   31678:	sub	r2, ip, #2
   3167c:	add	r1, r3, r6
   31680:	mov	r3, #0
   31684:	ldr	r0, [sp, #204]	; 0xcc
   31688:	ldr	r7, [r0]
   3168c:	cmp	r7, r3
   31690:	bgt	31630 <GetDataSlab+0x1552c>
   31694:	ldr	r3, [sp, #196]	; 0xc4
   31698:	add	r5, sp, #72	; 0x48
   3169c:	mov	r4, r9
   316a0:	mov	r0, #1
   316a4:	ldr	r2, [fp]
   316a8:	ldr	r3, [r3]
   316ac:	sub	r3, r2, r3
   316b0:	add	ip, ip, r3, lsl #1
   316b4:	add	lr, lr, r3
   316b8:	ldr	r3, [sp, #208]	; 0xd0
   316bc:	cmp	r0, r3
   316c0:	bge	31654 <GetDataSlab+0x15550>
   316c4:	ldr	r3, [r5, #4]
   316c8:	add	r2, r3, #1
   316cc:	ldr	r3, [sp, #204]	; 0xcc
   316d0:	str	r2, [r5, #4]
   316d4:	ldr	r1, [r3, r0, lsl #2]
   316d8:	sdiv	r3, r2, r1
   316dc:	mls	r3, r1, r3, r2
   316e0:	cmp	r3, #0
   316e4:	bne	31640 <GetDataSlab+0x1553c>
   316e8:	ldr	r2, [r4, #4]
   316ec:	str	r3, [r5, #4]
   316f0:	ldr	r1, [sp, #196]	; 0xc4
   316f4:	sdiv	r3, lr, r2
   316f8:	ldr	r1, [r1, r0, lsl #2]
   316fc:	mls	r3, r2, r3, lr
   31700:	cmp	r3, #0
   31704:	ldrne	sl, [r4]
   31708:	subne	r3, r2, r3
   3170c:	mlane	r3, r1, sl, r3
   31710:	bne	31724 <GetDataSlab+0x15620>
   31714:	cmp	r1, #0
   31718:	beq	3172c <GetDataSlab+0x15628>
   3171c:	ldr	r3, [r4]
   31720:	mul	r3, r3, r1
   31724:	add	ip, ip, r3, lsl #1
   31728:	add	lr, lr, r3
   3172c:	add	r0, r0, #1
   31730:	add	r4, r4, #4
   31734:	add	r5, r5, #4
   31738:	b	316b8 <GetDataSlab+0x155b4>
   3173c:	ldrh	r1, [ip]
   31740:	add	r3, r3, #1
   31744:	strb	r1, [r2], #1
   31748:	ldr	r1, [sl]
   3174c:	add	ip, ip, r1, lsl #1
   31750:	add	lr, lr, r1
   31754:	b	314f4 <GetDataSlab+0x153f0>
   31758:	add	r3, sp, #152	; 0x98
   3175c:	add	r3, r3, r0, lsl #2
   31760:	ldr	r3, [r3, #-120]	; 0xffffff88
   31764:	add	ip, ip, r3, lsl #1
   31768:	add	lr, lr, r3
   3176c:	add	r6, r6, r7
   31770:	b	314cc <GetDataSlab+0x153c8>
   31774:	ldr	r7, [sl]
   31778:	add	r9, sp, #112	; 0x70
   3177c:	add	r4, sp, #32
   31780:	mov	r5, fp
   31784:	mov	r0, r9
   31788:	mov	ip, #0
   3178c:	mov	r2, #1
   31790:	sub	r3, r7, #1
   31794:	str	r3, [sp, #32]
   31798:	ldr	r3, [fp]
   3179c:	str	r3, [sp, #112]	; 0x70
   317a0:	ldr	r3, [sp, #204]	; 0xcc
   317a4:	ldr	r8, [r3]
   317a8:	ldr	r3, [sp, #208]	; 0xd0
   317ac:	cmp	r2, r3
   317b0:	blt	318b0 <GetDataSlab+0x157ac>
   317b4:	ldr	r3, [sp, #4]
   317b8:	cmp	r7, #1
   317bc:	mov	r6, #0
   317c0:	add	r0, r3, ip
   317c4:	beq	31954 <GetDataSlab+0x15850>
   317c8:	cmp	r6, r8
   317cc:	bge	1c230 <GetDataSlab+0x12c>
   317d0:	ldr	r3, [sp, #196]	; 0xc4
   317d4:	ldr	r3, [r3]
   317d8:	cmp	r3, #0
   317dc:	addne	r0, r0, r3
   317e0:	addne	ip, ip, r3
   317e4:	ldr	r3, [sp]
   317e8:	add	r2, r3, r6
   317ec:	mov	r3, #0
   317f0:	ldr	r1, [sp, #204]	; 0xcc
   317f4:	ldr	r7, [r1]
   317f8:	cmp	r7, r3
   317fc:	bgt	31a34 <GetDataSlab+0x15930>
   31800:	ldr	r3, [sp, #196]	; 0xc4
   31804:	add	r5, sp, #72	; 0x48
   31808:	mov	r4, r9
   3180c:	mov	lr, #1
   31810:	ldr	r2, [fp]
   31814:	ldr	r3, [r3]
   31818:	sub	r3, r2, r3
   3181c:	ldr	r2, [sl]
   31820:	mls	r3, r2, r7, r3
   31824:	add	ip, ip, r3
   31828:	add	r0, r0, r3
   3182c:	ldr	r3, [sp, #208]	; 0xd0
   31830:	cmp	lr, r3
   31834:	bge	31a64 <GetDataSlab+0x15960>
   31838:	ldr	r3, [r5, #4]
   3183c:	add	r2, r3, #1
   31840:	ldr	r3, [sp, #204]	; 0xcc
   31844:	str	r2, [r5, #4]
   31848:	ldr	r1, [r3, lr, lsl #2]
   3184c:	sdiv	r3, r2, r1
   31850:	mls	r3, r1, r3, r2
   31854:	cmp	r3, #0
   31858:	bne	31a50 <GetDataSlab+0x1594c>
   3185c:	ldr	r2, [r4, #4]
   31860:	str	r3, [r5, #4]
   31864:	ldr	r1, [sp, #196]	; 0xc4
   31868:	sdiv	r3, ip, r2
   3186c:	ldr	r1, [r1, lr, lsl #2]
   31870:	mls	r3, r2, r3, ip
   31874:	cmp	r3, #0
   31878:	subne	r3, r2, r3
   3187c:	ldrne	r2, [r4]
   31880:	mlane	r3, r1, r2, r3
   31884:	bne	31898 <GetDataSlab+0x15794>
   31888:	cmp	r1, #0
   3188c:	beq	318a0 <GetDataSlab+0x1579c>
   31890:	ldr	r3, [r4]
   31894:	mul	r3, r3, r1
   31898:	add	r0, r0, r3
   3189c:	add	ip, ip, r3
   318a0:	add	lr, lr, #1
   318a4:	add	r4, r4, #4
   318a8:	add	r5, r5, #4
   318ac:	b	3182c <GetDataSlab+0x15728>
   318b0:	ldr	r3, [sl, r2, lsl #2]
   318b4:	mov	r6, r0
   318b8:	sub	r3, r3, #1
   318bc:	str	r3, [r4, #4]
   318c0:	ldr	r3, [r5], #4
   318c4:	mov	r1, r5
   318c8:	str	r3, [r0, #4]
   318cc:	cmp	r1, fp
   318d0:	bne	31900 <GetDataSlab+0x157fc>
   318d4:	ldr	r1, [sp, #196]	; 0xc4
   318d8:	add	r0, r0, #4
   318dc:	add	r4, r4, #4
   318e0:	ldr	r3, [sp, #204]	; 0xcc
   318e4:	ldr	r1, [r1, r2, lsl #2]
   318e8:	ldr	r3, [r3, r2, lsl #2]
   318ec:	add	r2, r2, #1
   318f0:	mul	r8, r3, r8
   318f4:	ldr	r3, [r6]
   318f8:	mla	ip, r1, r3, ip
   318fc:	b	317a8 <GetDataSlab+0x156a4>
   31900:	str	r1, [sp, #8]
   31904:	ldr	r3, [r1, #-4]!
   31908:	ldr	lr, [r4, #4]
   3190c:	mul	r3, r3, lr
   31910:	ldr	lr, [r0, #4]
   31914:	str	r3, [r4, #4]
   31918:	ldr	r3, [sp, #8]
   3191c:	ldr	r3, [r3]
   31920:	mul	r3, r3, lr
   31924:	str	r3, [r0, #4]
   31928:	b	318cc <GetDataSlab+0x157c8>
   3192c:	ldrb	r1, [r0, r3]
   31930:	add	r3, r3, #1
   31934:	strb	r1, [r2], #1
   31938:	b	3197c <GetDataSlab+0x15878>
   3193c:	add	r3, sp, #152	; 0x98
   31940:	add	r3, r3, lr, lsl #2
   31944:	ldr	r3, [r3, #-120]	; 0xffffff88
   31948:	add	ip, ip, r3
   3194c:	add	r0, r0, r3
   31950:	add	r6, r6, r7
   31954:	cmp	r6, r8
   31958:	bge	1c230 <GetDataSlab+0x12c>
   3195c:	ldr	r3, [sp, #196]	; 0xc4
   31960:	ldr	r3, [r3]
   31964:	cmp	r3, #0
   31968:	addne	r0, r0, r3
   3196c:	addne	ip, ip, r3
   31970:	ldr	r3, [sp]
   31974:	add	r2, r3, r6
   31978:	mov	r3, #0
   3197c:	ldr	r1, [sp, #204]	; 0xcc
   31980:	ldr	r7, [r1]
   31984:	cmp	r7, r3
   31988:	bgt	3192c <GetDataSlab+0x15828>
   3198c:	ldr	r3, [sp, #196]	; 0xc4
   31990:	add	r5, sp, #72	; 0x48
   31994:	mov	r4, r9
   31998:	mov	lr, #1
   3199c:	ldr	r2, [fp]
   319a0:	ldr	r3, [r3]
   319a4:	sub	r3, r2, r3
   319a8:	add	ip, ip, r3
   319ac:	add	r0, r0, r3
   319b0:	ldr	r3, [sp, #208]	; 0xd0
   319b4:	cmp	lr, r3
   319b8:	bge	31950 <GetDataSlab+0x1584c>
   319bc:	ldr	r3, [r5, #4]
   319c0:	add	r2, r3, #1
   319c4:	ldr	r3, [sp, #204]	; 0xcc
   319c8:	str	r2, [r5, #4]
   319cc:	ldr	r1, [r3, lr, lsl #2]
   319d0:	sdiv	r3, r2, r1
   319d4:	mls	r3, r1, r3, r2
   319d8:	cmp	r3, #0
   319dc:	bne	3193c <GetDataSlab+0x15838>
   319e0:	ldr	r2, [r4, #4]
   319e4:	str	r3, [r5, #4]
   319e8:	ldr	r1, [sp, #196]	; 0xc4
   319ec:	sdiv	r3, ip, r2
   319f0:	ldr	r1, [r1, lr, lsl #2]
   319f4:	mls	r3, r2, r3, ip
   319f8:	cmp	r3, #0
   319fc:	ldrne	sl, [r4]
   31a00:	subne	r3, r2, r3
   31a04:	mlane	r3, r1, sl, r3
   31a08:	bne	31a1c <GetDataSlab+0x15918>
   31a0c:	cmp	r1, #0
   31a10:	beq	31a24 <GetDataSlab+0x15920>
   31a14:	ldr	r3, [r4]
   31a18:	mul	r3, r3, r1
   31a1c:	add	r0, r0, r3
   31a20:	add	ip, ip, r3
   31a24:	add	lr, lr, #1
   31a28:	add	r4, r4, #4
   31a2c:	add	r5, r5, #4
   31a30:	b	319b0 <GetDataSlab+0x158ac>
   31a34:	ldrb	r1, [r0]
   31a38:	add	r3, r3, #1
   31a3c:	strb	r1, [r2], #1
   31a40:	ldr	r1, [sl]
   31a44:	add	r0, r0, r1
   31a48:	add	ip, ip, r1
   31a4c:	b	317f0 <GetDataSlab+0x156ec>
   31a50:	add	r3, sp, #152	; 0x98
   31a54:	add	r3, r3, lr, lsl #2
   31a58:	ldr	r3, [r3, #-120]	; 0xffffff88
   31a5c:	add	ip, ip, r3
   31a60:	add	r0, r0, r3
   31a64:	add	r6, r6, r7
   31a68:	b	317c8 <GetDataSlab+0x156c4>
   31a6c:	ldr	r7, [sl]
   31a70:	add	r9, sp, #112	; 0x70
   31a74:	add	r4, sp, #32
   31a78:	mov	r5, fp
   31a7c:	mov	r0, r9
   31a80:	mov	ip, #0
   31a84:	mov	r2, #1
   31a88:	sub	r3, r7, #1
   31a8c:	str	r3, [sp, #32]
   31a90:	ldr	r3, [fp]
   31a94:	str	r3, [sp, #112]	; 0x70
   31a98:	ldr	r3, [sp, #204]	; 0xcc
   31a9c:	ldr	r8, [r3]
   31aa0:	ldr	r3, [sp, #208]	; 0xd0
   31aa4:	cmp	r2, r3
   31aa8:	blt	31ba8 <GetDataSlab+0x15aa4>
   31aac:	ldr	r3, [sp, #4]
   31ab0:	cmp	r7, #1
   31ab4:	mov	r6, #0
   31ab8:	add	r0, r3, ip
   31abc:	beq	31c4c <GetDataSlab+0x15b48>
   31ac0:	cmp	r6, r8
   31ac4:	bge	1c230 <GetDataSlab+0x12c>
   31ac8:	ldr	r3, [sp, #196]	; 0xc4
   31acc:	ldr	r3, [r3]
   31ad0:	cmp	r3, #0
   31ad4:	addne	r0, r0, r3
   31ad8:	addne	ip, ip, r3
   31adc:	ldr	r3, [sp]
   31ae0:	add	r2, r3, r6
   31ae4:	mov	r3, #0
   31ae8:	ldr	r1, [sp, #204]	; 0xcc
   31aec:	ldr	r7, [r1]
   31af0:	cmp	r7, r3
   31af4:	bgt	31d2c <GetDataSlab+0x15c28>
   31af8:	ldr	r3, [sp, #196]	; 0xc4
   31afc:	add	r5, sp, #72	; 0x48
   31b00:	mov	r4, r9
   31b04:	mov	lr, #1
   31b08:	ldr	r2, [fp]
   31b0c:	ldr	r3, [r3]
   31b10:	sub	r3, r2, r3
   31b14:	ldr	r2, [sl]
   31b18:	mls	r3, r2, r7, r3
   31b1c:	add	ip, ip, r3
   31b20:	add	r0, r0, r3
   31b24:	ldr	r3, [sp, #208]	; 0xd0
   31b28:	cmp	lr, r3
   31b2c:	bge	31d5c <GetDataSlab+0x15c58>
   31b30:	ldr	r3, [r5, #4]
   31b34:	add	r2, r3, #1
   31b38:	ldr	r3, [sp, #204]	; 0xcc
   31b3c:	str	r2, [r5, #4]
   31b40:	ldr	r1, [r3, lr, lsl #2]
   31b44:	sdiv	r3, r2, r1
   31b48:	mls	r3, r1, r3, r2
   31b4c:	cmp	r3, #0
   31b50:	bne	31d48 <GetDataSlab+0x15c44>
   31b54:	ldr	r2, [r4, #4]
   31b58:	str	r3, [r5, #4]
   31b5c:	ldr	r1, [sp, #196]	; 0xc4
   31b60:	sdiv	r3, ip, r2
   31b64:	ldr	r1, [r1, lr, lsl #2]
   31b68:	mls	r3, r2, r3, ip
   31b6c:	cmp	r3, #0
   31b70:	subne	r3, r2, r3
   31b74:	ldrne	r2, [r4]
   31b78:	mlane	r3, r1, r2, r3
   31b7c:	bne	31b90 <GetDataSlab+0x15a8c>
   31b80:	cmp	r1, #0
   31b84:	beq	31b98 <GetDataSlab+0x15a94>
   31b88:	ldr	r3, [r4]
   31b8c:	mul	r3, r3, r1
   31b90:	add	r0, r0, r3
   31b94:	add	ip, ip, r3
   31b98:	add	lr, lr, #1
   31b9c:	add	r4, r4, #4
   31ba0:	add	r5, r5, #4
   31ba4:	b	31b24 <GetDataSlab+0x15a20>
   31ba8:	ldr	r3, [sl, r2, lsl #2]
   31bac:	mov	r6, r0
   31bb0:	sub	r3, r3, #1
   31bb4:	str	r3, [r4, #4]
   31bb8:	ldr	r3, [r5], #4
   31bbc:	mov	r1, r5
   31bc0:	str	r3, [r0, #4]
   31bc4:	cmp	r1, fp
   31bc8:	bne	31bf8 <GetDataSlab+0x15af4>
   31bcc:	ldr	r1, [sp, #196]	; 0xc4
   31bd0:	add	r0, r0, #4
   31bd4:	add	r4, r4, #4
   31bd8:	ldr	r3, [sp, #204]	; 0xcc
   31bdc:	ldr	r1, [r1, r2, lsl #2]
   31be0:	ldr	r3, [r3, r2, lsl #2]
   31be4:	add	r2, r2, #1
   31be8:	mul	r8, r3, r8
   31bec:	ldr	r3, [r6]
   31bf0:	mla	ip, r1, r3, ip
   31bf4:	b	31aa0 <GetDataSlab+0x1599c>
   31bf8:	str	r1, [sp, #8]
   31bfc:	ldr	r3, [r1, #-4]!
   31c00:	ldr	lr, [r4, #4]
   31c04:	mul	r3, r3, lr
   31c08:	ldr	lr, [r0, #4]
   31c0c:	str	r3, [r4, #4]
   31c10:	ldr	r3, [sp, #8]
   31c14:	ldr	r3, [r3]
   31c18:	mul	r3, r3, lr
   31c1c:	str	r3, [r0, #4]
   31c20:	b	31bc4 <GetDataSlab+0x15ac0>
   31c24:	ldrb	r1, [r0, r3]
   31c28:	add	r3, r3, #1
   31c2c:	strb	r1, [r2], #1
   31c30:	b	31c74 <GetDataSlab+0x15b70>
   31c34:	add	r3, sp, #152	; 0x98
   31c38:	add	r3, r3, lr, lsl #2
   31c3c:	ldr	r3, [r3, #-120]	; 0xffffff88
   31c40:	add	ip, ip, r3
   31c44:	add	r0, r0, r3
   31c48:	add	r6, r6, r7
   31c4c:	cmp	r6, r8
   31c50:	bge	1c230 <GetDataSlab+0x12c>
   31c54:	ldr	r3, [sp, #196]	; 0xc4
   31c58:	ldr	r3, [r3]
   31c5c:	cmp	r3, #0
   31c60:	addne	r0, r0, r3
   31c64:	addne	ip, ip, r3
   31c68:	ldr	r3, [sp]
   31c6c:	add	r2, r3, r6
   31c70:	mov	r3, #0
   31c74:	ldr	r1, [sp, #204]	; 0xcc
   31c78:	ldr	r7, [r1]
   31c7c:	cmp	r7, r3
   31c80:	bgt	31c24 <GetDataSlab+0x15b20>
   31c84:	ldr	r3, [sp, #196]	; 0xc4
   31c88:	add	r5, sp, #72	; 0x48
   31c8c:	mov	r4, r9
   31c90:	mov	lr, #1
   31c94:	ldr	r2, [fp]
   31c98:	ldr	r3, [r3]
   31c9c:	sub	r3, r2, r3
   31ca0:	add	ip, ip, r3
   31ca4:	add	r0, r0, r3
   31ca8:	ldr	r3, [sp, #208]	; 0xd0
   31cac:	cmp	lr, r3
   31cb0:	bge	31c48 <GetDataSlab+0x15b44>
   31cb4:	ldr	r3, [r5, #4]
   31cb8:	add	r2, r3, #1
   31cbc:	ldr	r3, [sp, #204]	; 0xcc
   31cc0:	str	r2, [r5, #4]
   31cc4:	ldr	r1, [r3, lr, lsl #2]
   31cc8:	sdiv	r3, r2, r1
   31ccc:	mls	r3, r1, r3, r2
   31cd0:	cmp	r3, #0
   31cd4:	bne	31c34 <GetDataSlab+0x15b30>
   31cd8:	ldr	r2, [r4, #4]
   31cdc:	str	r3, [r5, #4]
   31ce0:	ldr	r1, [sp, #196]	; 0xc4
   31ce4:	sdiv	r3, ip, r2
   31ce8:	ldr	r1, [r1, lr, lsl #2]
   31cec:	mls	r3, r2, r3, ip
   31cf0:	cmp	r3, #0
   31cf4:	ldrne	sl, [r4]
   31cf8:	subne	r3, r2, r3
   31cfc:	mlane	r3, r1, sl, r3
   31d00:	bne	31d14 <GetDataSlab+0x15c10>
   31d04:	cmp	r1, #0
   31d08:	beq	31d1c <GetDataSlab+0x15c18>
   31d0c:	ldr	r3, [r4]
   31d10:	mul	r3, r3, r1
   31d14:	add	r0, r0, r3
   31d18:	add	ip, ip, r3
   31d1c:	add	lr, lr, #1
   31d20:	add	r4, r4, #4
   31d24:	add	r5, r5, #4
   31d28:	b	31ca8 <GetDataSlab+0x15ba4>
   31d2c:	ldrb	r1, [r0]
   31d30:	add	r3, r3, #1
   31d34:	strb	r1, [r2], #1
   31d38:	ldr	r1, [sl]
   31d3c:	add	r0, r0, r1
   31d40:	add	ip, ip, r1
   31d44:	b	31ae8 <GetDataSlab+0x159e4>
   31d48:	add	r3, sp, #152	; 0x98
   31d4c:	add	r3, r3, lr, lsl #2
   31d50:	ldr	r3, [r3, #-120]	; 0xffffff88
   31d54:	add	ip, ip, r3
   31d58:	add	r0, r0, r3
   31d5c:	add	r6, r6, r7
   31d60:	b	31ac0 <GetDataSlab+0x159bc>
   31d64:	cmp	r5, #12
   31d68:	bne	32068 <GetDataSlab+0x15f64>
   31d6c:	ldr	r7, [sl]
   31d70:	add	r9, sp, #112	; 0x70
   31d74:	add	r4, sp, #32
   31d78:	mov	r5, fp
   31d7c:	mov	r0, r9
   31d80:	mov	lr, #0
   31d84:	mov	r2, #1
   31d88:	sub	r3, r7, #1
   31d8c:	str	r3, [sp, #32]
   31d90:	ldr	r3, [fp]
   31d94:	str	r3, [sp, #112]	; 0x70
   31d98:	ldr	r3, [sp, #204]	; 0xcc
   31d9c:	ldr	r8, [r3]
   31da0:	ldr	r3, [sp, #208]	; 0xd0
   31da4:	cmp	r2, r3
   31da8:	blt	31ea8 <GetDataSlab+0x15da4>
   31dac:	ldr	r3, [sp, #4]
   31db0:	cmp	r7, #1
   31db4:	mov	r6, #0
   31db8:	add	ip, r3, lr, lsl #3
   31dbc:	beq	31f4c <GetDataSlab+0x15e48>
   31dc0:	cmp	r6, r8
   31dc4:	bge	1c230 <GetDataSlab+0x12c>
   31dc8:	ldr	r3, [sp, #196]	; 0xc4
   31dcc:	ldr	r3, [r3]
   31dd0:	cmp	r3, #0
   31dd4:	addne	ip, ip, r3, lsl #3
   31dd8:	addne	lr, lr, r3
   31ddc:	ldr	r3, [sp]
   31de0:	add	r2, r3, r6
   31de4:	mov	r3, #0
   31de8:	ldr	r1, [sp, #204]	; 0xcc
   31dec:	ldr	r7, [r1]
   31df0:	cmp	r7, r3
   31df4:	bgt	32030 <GetDataSlab+0x15f2c>
   31df8:	ldr	r3, [sp, #196]	; 0xc4
   31dfc:	add	r5, sp, #72	; 0x48
   31e00:	mov	r4, r9
   31e04:	mov	r0, #1
   31e08:	ldr	r2, [fp]
   31e0c:	ldr	r3, [r3]
   31e10:	sub	r3, r2, r3
   31e14:	ldr	r2, [sl]
   31e18:	mls	r3, r2, r7, r3
   31e1c:	add	ip, ip, r3, lsl #3
   31e20:	add	lr, lr, r3
   31e24:	ldr	r3, [sp, #208]	; 0xd0
   31e28:	cmp	r0, r3
   31e2c:	bge	32060 <GetDataSlab+0x15f5c>
   31e30:	ldr	r3, [r5, #4]
   31e34:	add	r2, r3, #1
   31e38:	ldr	r3, [sp, #204]	; 0xcc
   31e3c:	str	r2, [r5, #4]
   31e40:	ldr	r1, [r3, r0, lsl #2]
   31e44:	sdiv	r3, r2, r1
   31e48:	mls	r3, r1, r3, r2
   31e4c:	cmp	r3, #0
   31e50:	bne	3204c <GetDataSlab+0x15f48>
   31e54:	ldr	r2, [r4, #4]
   31e58:	str	r3, [r5, #4]
   31e5c:	ldr	r1, [sp, #196]	; 0xc4
   31e60:	sdiv	r3, lr, r2
   31e64:	ldr	r1, [r1, r0, lsl #2]
   31e68:	mls	r3, r2, r3, lr
   31e6c:	cmp	r3, #0
   31e70:	subne	r3, r2, r3
   31e74:	ldrne	r2, [r4]
   31e78:	mlane	r3, r1, r2, r3
   31e7c:	bne	31e90 <GetDataSlab+0x15d8c>
   31e80:	cmp	r1, #0
   31e84:	beq	31e98 <GetDataSlab+0x15d94>
   31e88:	ldr	r3, [r4]
   31e8c:	mul	r3, r3, r1
   31e90:	add	ip, ip, r3, lsl #3
   31e94:	add	lr, lr, r3
   31e98:	add	r0, r0, #1
   31e9c:	add	r4, r4, #4
   31ea0:	add	r5, r5, #4
   31ea4:	b	31e24 <GetDataSlab+0x15d20>
   31ea8:	ldr	r3, [sl, r2, lsl #2]
   31eac:	mov	r6, r0
   31eb0:	sub	r3, r3, #1
   31eb4:	str	r3, [r4, #4]
   31eb8:	ldr	r3, [r5], #4
   31ebc:	mov	r1, r5
   31ec0:	str	r3, [r0, #4]
   31ec4:	cmp	fp, r1
   31ec8:	bne	31ef8 <GetDataSlab+0x15df4>
   31ecc:	ldr	r1, [sp, #196]	; 0xc4
   31ed0:	add	r0, r0, #4
   31ed4:	add	r4, r4, #4
   31ed8:	ldr	r3, [sp, #204]	; 0xcc
   31edc:	ldr	r1, [r1, r2, lsl #2]
   31ee0:	ldr	r3, [r3, r2, lsl #2]
   31ee4:	add	r2, r2, #1
   31ee8:	mul	r8, r3, r8
   31eec:	ldr	r3, [r6]
   31ef0:	mla	lr, r1, r3, lr
   31ef4:	b	31da0 <GetDataSlab+0x15c9c>
   31ef8:	str	r1, [sp, #8]
   31efc:	ldr	r3, [r1, #-4]!
   31f00:	ldr	ip, [r4, #4]
   31f04:	mul	r3, r3, ip
   31f08:	ldr	ip, [r0, #4]
   31f0c:	str	r3, [r4, #4]
   31f10:	ldr	r3, [sp, #8]
   31f14:	ldr	r3, [r3]
   31f18:	mul	r3, r3, ip
   31f1c:	str	r3, [r0, #4]
   31f20:	b	31ec4 <GetDataSlab+0x15dc0>
   31f24:	ldr	r0, [r1, #8]!
   31f28:	add	r3, r3, #1
   31f2c:	strb	r0, [r2], #1
   31f30:	b	31f78 <GetDataSlab+0x15e74>
   31f34:	add	r3, sp, #152	; 0x98
   31f38:	add	r3, r3, r0, lsl #2
   31f3c:	ldr	r3, [r3, #-120]	; 0xffffff88
   31f40:	add	ip, ip, r3, lsl #3
   31f44:	add	lr, lr, r3
   31f48:	add	r6, r6, r7
   31f4c:	cmp	r6, r8
   31f50:	bge	1c230 <GetDataSlab+0x12c>
   31f54:	ldr	r3, [sp, #196]	; 0xc4
   31f58:	ldr	r3, [r3]
   31f5c:	cmp	r3, #0
   31f60:	addne	ip, ip, r3, lsl #3
   31f64:	addne	lr, lr, r3
   31f68:	ldr	r3, [sp]
   31f6c:	sub	r1, ip, #8
   31f70:	add	r2, r3, r6
   31f74:	mov	r3, #0
   31f78:	ldr	r0, [sp, #204]	; 0xcc
   31f7c:	ldr	r7, [r0]
   31f80:	cmp	r7, r3
   31f84:	bgt	31f24 <GetDataSlab+0x15e20>
   31f88:	ldr	r3, [sp, #196]	; 0xc4
   31f8c:	add	r5, sp, #72	; 0x48
   31f90:	mov	r4, r9
   31f94:	mov	r0, #1
   31f98:	ldr	r2, [fp]
   31f9c:	ldr	r3, [r3]
   31fa0:	sub	r3, r2, r3
   31fa4:	add	ip, ip, r3, lsl #3
   31fa8:	add	lr, lr, r3
   31fac:	ldr	r3, [sp, #208]	; 0xd0
   31fb0:	cmp	r0, r3
   31fb4:	bge	31f48 <GetDataSlab+0x15e44>
   31fb8:	ldr	r3, [r5, #4]
   31fbc:	add	r2, r3, #1
   31fc0:	ldr	r3, [sp, #204]	; 0xcc
   31fc4:	str	r2, [r5, #4]
   31fc8:	ldr	r1, [r3, r0, lsl #2]
   31fcc:	sdiv	r3, r2, r1
   31fd0:	mls	r3, r1, r3, r2
   31fd4:	cmp	r3, #0
   31fd8:	bne	31f34 <GetDataSlab+0x15e30>
   31fdc:	ldr	r2, [r4, #4]
   31fe0:	str	r3, [r5, #4]
   31fe4:	ldr	r1, [sp, #196]	; 0xc4
   31fe8:	sdiv	r3, lr, r2
   31fec:	ldr	r1, [r1, r0, lsl #2]
   31ff0:	mls	r3, r2, r3, lr
   31ff4:	cmp	r3, #0
   31ff8:	ldrne	sl, [r4]
   31ffc:	subne	r3, r2, r3
   32000:	mlane	r3, r1, sl, r3
   32004:	bne	32018 <GetDataSlab+0x15f14>
   32008:	cmp	r1, #0
   3200c:	beq	32020 <GetDataSlab+0x15f1c>
   32010:	ldr	r3, [r4]
   32014:	mul	r3, r3, r1
   32018:	add	ip, ip, r3, lsl #3
   3201c:	add	lr, lr, r3
   32020:	add	r0, r0, #1
   32024:	add	r4, r4, #4
   32028:	add	r5, r5, #4
   3202c:	b	31fac <GetDataSlab+0x15ea8>
   32030:	ldr	r1, [ip]
   32034:	add	r3, r3, #1
   32038:	strb	r1, [r2], #1
   3203c:	ldr	r1, [sl]
   32040:	add	ip, ip, r1, lsl #3
   32044:	add	lr, lr, r1
   32048:	b	31de8 <GetDataSlab+0x15ce4>
   3204c:	add	r3, sp, #152	; 0x98
   32050:	add	r3, r3, r0, lsl #2
   32054:	ldr	r3, [r3, #-120]	; 0xffffff88
   32058:	add	ip, ip, r3, lsl #3
   3205c:	add	lr, lr, r3
   32060:	add	r6, r6, r7
   32064:	b	31dc0 <GetDataSlab+0x15cbc>
   32068:	cmp	r5, #13
   3206c:	bne	3236c <GetDataSlab+0x16268>
   32070:	ldr	r7, [sl]
   32074:	add	r9, sp, #112	; 0x70
   32078:	add	r4, sp, #32
   3207c:	mov	r5, fp
   32080:	mov	r0, r9
   32084:	mov	lr, #0
   32088:	mov	r2, #1
   3208c:	sub	r3, r7, #1
   32090:	str	r3, [sp, #32]
   32094:	ldr	r3, [fp]
   32098:	str	r3, [sp, #112]	; 0x70
   3209c:	ldr	r3, [sp, #204]	; 0xcc
   320a0:	ldr	r8, [r3]
   320a4:	ldr	r3, [sp, #208]	; 0xd0
   320a8:	cmp	r2, r3
   320ac:	blt	321ac <GetDataSlab+0x160a8>
   320b0:	ldr	r3, [sp, #4]
   320b4:	cmp	r7, #1
   320b8:	mov	r6, #0
   320bc:	add	ip, r3, lr, lsl #3
   320c0:	beq	32250 <GetDataSlab+0x1614c>
   320c4:	cmp	r6, r8
   320c8:	bge	1c230 <GetDataSlab+0x12c>
   320cc:	ldr	r3, [sp, #196]	; 0xc4
   320d0:	ldr	r3, [r3]
   320d4:	cmp	r3, #0
   320d8:	addne	ip, ip, r3, lsl #3
   320dc:	addne	lr, lr, r3
   320e0:	ldr	r3, [sp]
   320e4:	add	r2, r3, r6
   320e8:	mov	r3, #0
   320ec:	ldr	r1, [sp, #204]	; 0xcc
   320f0:	ldr	r7, [r1]
   320f4:	cmp	r7, r3
   320f8:	bgt	32334 <GetDataSlab+0x16230>
   320fc:	ldr	r3, [sp, #196]	; 0xc4
   32100:	add	r5, sp, #72	; 0x48
   32104:	mov	r4, r9
   32108:	mov	r0, #1
   3210c:	ldr	r2, [fp]
   32110:	ldr	r3, [r3]
   32114:	sub	r3, r2, r3
   32118:	ldr	r2, [sl]
   3211c:	mls	r3, r2, r7, r3
   32120:	add	ip, ip, r3, lsl #3
   32124:	add	lr, lr, r3
   32128:	ldr	r3, [sp, #208]	; 0xd0
   3212c:	cmp	r0, r3
   32130:	bge	32364 <GetDataSlab+0x16260>
   32134:	ldr	r3, [r5, #4]
   32138:	add	r2, r3, #1
   3213c:	ldr	r3, [sp, #204]	; 0xcc
   32140:	str	r2, [r5, #4]
   32144:	ldr	r1, [r3, r0, lsl #2]
   32148:	sdiv	r3, r2, r1
   3214c:	mls	r3, r1, r3, r2
   32150:	cmp	r3, #0
   32154:	bne	32350 <GetDataSlab+0x1624c>
   32158:	ldr	r2, [r4, #4]
   3215c:	str	r3, [r5, #4]
   32160:	ldr	r1, [sp, #196]	; 0xc4
   32164:	sdiv	r3, lr, r2
   32168:	ldr	r1, [r1, r0, lsl #2]
   3216c:	mls	r3, r2, r3, lr
   32170:	cmp	r3, #0
   32174:	subne	r3, r2, r3
   32178:	ldrne	r2, [r4]
   3217c:	mlane	r3, r1, r2, r3
   32180:	bne	32194 <GetDataSlab+0x16090>
   32184:	cmp	r1, #0
   32188:	beq	3219c <GetDataSlab+0x16098>
   3218c:	ldr	r3, [r4]
   32190:	mul	r3, r3, r1
   32194:	add	ip, ip, r3, lsl #3
   32198:	add	lr, lr, r3
   3219c:	add	r0, r0, #1
   321a0:	add	r4, r4, #4
   321a4:	add	r5, r5, #4
   321a8:	b	32128 <GetDataSlab+0x16024>
   321ac:	ldr	r3, [sl, r2, lsl #2]
   321b0:	mov	r6, r0
   321b4:	sub	r3, r3, #1
   321b8:	str	r3, [r4, #4]
   321bc:	ldr	r3, [r5], #4
   321c0:	mov	r1, r5
   321c4:	str	r3, [r0, #4]
   321c8:	cmp	fp, r1
   321cc:	bne	321fc <GetDataSlab+0x160f8>
   321d0:	ldr	r1, [sp, #196]	; 0xc4
   321d4:	add	r0, r0, #4
   321d8:	add	r4, r4, #4
   321dc:	ldr	r3, [sp, #204]	; 0xcc
   321e0:	ldr	r1, [r1, r2, lsl #2]
   321e4:	ldr	r3, [r3, r2, lsl #2]
   321e8:	add	r2, r2, #1
   321ec:	mul	r8, r3, r8
   321f0:	ldr	r3, [r6]
   321f4:	mla	lr, r1, r3, lr
   321f8:	b	320a4 <GetDataSlab+0x15fa0>
   321fc:	str	r1, [sp, #8]
   32200:	ldr	r3, [r1, #-4]!
   32204:	ldr	ip, [r4, #4]
   32208:	mul	r3, r3, ip
   3220c:	ldr	ip, [r0, #4]
   32210:	str	r3, [r4, #4]
   32214:	ldr	r3, [sp, #8]
   32218:	ldr	r3, [r3]
   3221c:	mul	r3, r3, ip
   32220:	str	r3, [r0, #4]
   32224:	b	321c8 <GetDataSlab+0x160c4>
   32228:	ldr	r0, [r2, #8]!
   3222c:	add	r3, r3, #1
   32230:	strb	r0, [r1], #1
   32234:	b	3227c <GetDataSlab+0x16178>
   32238:	add	r3, sp, #152	; 0x98
   3223c:	add	r3, r3, r0, lsl #2
   32240:	ldr	r3, [r3, #-120]	; 0xffffff88
   32244:	add	ip, ip, r3, lsl #3
   32248:	add	lr, lr, r3
   3224c:	add	r6, r6, r7
   32250:	cmp	r6, r8
   32254:	bge	1c230 <GetDataSlab+0x12c>
   32258:	ldr	r3, [sp, #196]	; 0xc4
   3225c:	ldr	r3, [r3]
   32260:	cmp	r3, #0
   32264:	addne	ip, ip, r3, lsl #3
   32268:	addne	lr, lr, r3
   3226c:	ldr	r3, [sp]
   32270:	sub	r2, ip, #8
   32274:	add	r1, r3, r6
   32278:	mov	r3, #0
   3227c:	ldr	r0, [sp, #204]	; 0xcc
   32280:	ldr	r7, [r0]
   32284:	cmp	r7, r3
   32288:	bgt	32228 <GetDataSlab+0x16124>
   3228c:	ldr	r3, [sp, #196]	; 0xc4
   32290:	add	r5, sp, #72	; 0x48
   32294:	mov	r4, r9
   32298:	mov	r0, #1
   3229c:	ldr	r2, [fp]
   322a0:	ldr	r3, [r3]
   322a4:	sub	r3, r2, r3
   322a8:	add	ip, ip, r3, lsl #3
   322ac:	add	lr, lr, r3
   322b0:	ldr	r3, [sp, #208]	; 0xd0
   322b4:	cmp	r0, r3
   322b8:	bge	3224c <GetDataSlab+0x16148>
   322bc:	ldr	r3, [r5, #4]
   322c0:	add	r2, r3, #1
   322c4:	ldr	r3, [sp, #204]	; 0xcc
   322c8:	str	r2, [r5, #4]
   322cc:	ldr	r1, [r3, r0, lsl #2]
   322d0:	sdiv	r3, r2, r1
   322d4:	mls	r3, r1, r3, r2
   322d8:	cmp	r3, #0
   322dc:	bne	32238 <GetDataSlab+0x16134>
   322e0:	ldr	r2, [r4, #4]
   322e4:	str	r3, [r5, #4]
   322e8:	ldr	r1, [sp, #196]	; 0xc4
   322ec:	sdiv	r3, lr, r2
   322f0:	ldr	r1, [r1, r0, lsl #2]
   322f4:	mls	r3, r2, r3, lr
   322f8:	cmp	r3, #0
   322fc:	ldrne	sl, [r4]
   32300:	subne	r3, r2, r3
   32304:	mlane	r3, r1, sl, r3
   32308:	bne	3231c <GetDataSlab+0x16218>
   3230c:	cmp	r1, #0
   32310:	beq	32324 <GetDataSlab+0x16220>
   32314:	ldr	r3, [r4]
   32318:	mul	r3, r3, r1
   3231c:	add	ip, ip, r3, lsl #3
   32320:	add	lr, lr, r3
   32324:	add	r0, r0, #1
   32328:	add	r4, r4, #4
   3232c:	add	r5, r5, #4
   32330:	b	322b0 <GetDataSlab+0x161ac>
   32334:	ldr	r1, [ip]
   32338:	add	r3, r3, #1
   3233c:	strb	r1, [r2], #1
   32340:	ldr	r1, [sl]
   32344:	add	ip, ip, r1, lsl #3
   32348:	add	lr, lr, r1
   3234c:	b	320ec <GetDataSlab+0x15fe8>
   32350:	add	r3, sp, #152	; 0x98
   32354:	add	r3, r3, r0, lsl #2
   32358:	ldr	r3, [r3, #-120]	; 0xffffff88
   3235c:	add	ip, ip, r3, lsl #3
   32360:	add	lr, lr, r3
   32364:	add	r6, r6, r7
   32368:	b	320c4 <GetDataSlab+0x15fc0>
   3236c:	mov	r3, #1
   32370:	b	1c234 <GetDataSlab+0x130>

00032374 <GetDataLinear>:
   32374:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   32378:	mov	sl, r2
   3237c:	mov	r4, r0
   32380:	mov	r0, r3
   32384:	mov	r6, r1
   32388:	ldr	r9, [sp, #32]
   3238c:	ldr	r8, [sp, #36]	; 0x24
   32390:	ldr	r5, [sp, #40]	; 0x28
   32394:	bl	1598 <Mat_SizeOf@plt>
   32398:	sub	r2, sl, #6
   3239c:	mov	r7, r0
   323a0:	cmp	r2, #9
   323a4:	addls	pc, pc, r2, lsl #2
   323a8:	b	3263c <GetDataLinear+0x2c8>
   323ac:	b	323d4 <GetDataLinear+0x60>
   323b0:	b	32428 <GetDataLinear+0xb4>
   323b4:	b	325cc <GetDataLinear+0x258>
   323b8:	b	32604 <GetDataLinear+0x290>
   323bc:	b	32554 <GetDataLinear+0x1e0>
   323c0:	b	32590 <GetDataLinear+0x21c>
   323c4:	b	324dc <GetDataLinear+0x168>
   323c8:	b	32518 <GetDataLinear+0x1a4>
   323cc:	b	32464 <GetDataLinear+0xf0>
   323d0:	b	324a0 <GetDataLinear+0x12c>
   323d4:	add	r1, r4, r9, lsl #3
   323d8:	cmp	r8, #0
   323dc:	lslne	r8, r8, #3
   323e0:	movne	r9, #0
   323e4:	movne	r4, r1
   323e8:	bne	32410 <GetDataLinear+0x9c>
   323ec:	mul	r2, r7, r5
   323f0:	mov	r0, r6
   323f4:	bl	1490 <memcpy@plt>
   323f8:	b	32420 <GetDataLinear+0xac>
   323fc:	mov	r1, r4
   32400:	mov	r2, r7
   32404:	add	r9, r9, #1
   32408:	add	r4, r4, r8
   3240c:	bl	1490 <memcpy@plt>
   32410:	cmp	r9, r5
   32414:	add	r0, r6, r9, lsl #3
   32418:	blt	323fc <GetDataLinear+0x88>
   3241c:	mov	r8, #0
   32420:	mov	r0, r8
   32424:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   32428:	add	r1, r4, r9, lsl #2
   3242c:	cmp	r8, #0
   32430:	lslne	r8, r8, #2
   32434:	movne	r9, #0
   32438:	movne	r4, r1
   3243c:	beq	323ec <GetDataLinear+0x78>
   32440:	cmp	r9, r5
   32444:	add	r0, r6, r9, lsl #2
   32448:	bge	3241c <GetDataLinear+0xa8>
   3244c:	mov	r1, r4
   32450:	mov	r2, r7
   32454:	bl	1490 <memcpy@plt>
   32458:	add	r9, r9, #1
   3245c:	add	r4, r4, r8
   32460:	b	32440 <GetDataLinear+0xcc>
   32464:	add	r1, r4, r9, lsl #3
   32468:	cmp	r8, #0
   3246c:	lslne	r8, r8, #3
   32470:	movne	r9, #0
   32474:	movne	r4, r1
   32478:	beq	323ec <GetDataLinear+0x78>
   3247c:	cmp	r9, r5
   32480:	add	r0, r6, r9, lsl #3
   32484:	bge	3241c <GetDataLinear+0xa8>
   32488:	mov	r1, r4
   3248c:	mov	r2, r7
   32490:	bl	1490 <memcpy@plt>
   32494:	add	r9, r9, #1
   32498:	add	r4, r4, r8
   3249c:	b	3247c <GetDataLinear+0x108>
   324a0:	add	r1, r4, r9, lsl #3
   324a4:	cmp	r8, #0
   324a8:	lslne	r8, r8, #3
   324ac:	movne	r9, #0
   324b0:	movne	r4, r1
   324b4:	beq	323ec <GetDataLinear+0x78>
   324b8:	cmp	r9, r5
   324bc:	add	r0, r6, r9, lsl #3
   324c0:	bge	3241c <GetDataLinear+0xa8>
   324c4:	mov	r1, r4
   324c8:	mov	r2, r7
   324cc:	bl	1490 <memcpy@plt>
   324d0:	add	r9, r9, #1
   324d4:	add	r4, r4, r8
   324d8:	b	324b8 <GetDataLinear+0x144>
   324dc:	add	r1, r4, r9, lsl #2
   324e0:	cmp	r8, #0
   324e4:	lslne	r8, r8, #2
   324e8:	movne	r9, #0
   324ec:	movne	r4, r1
   324f0:	beq	323ec <GetDataLinear+0x78>
   324f4:	cmp	r9, r5
   324f8:	add	r0, r6, r9, lsl #2
   324fc:	bge	3241c <GetDataLinear+0xa8>
   32500:	mov	r1, r4
   32504:	mov	r2, r7
   32508:	bl	1490 <memcpy@plt>
   3250c:	add	r9, r9, #1
   32510:	add	r4, r4, r8
   32514:	b	324f4 <GetDataLinear+0x180>
   32518:	add	r1, r4, r9, lsl #2
   3251c:	cmp	r8, #0
   32520:	lslne	r8, r8, #2
   32524:	movne	r9, #0
   32528:	movne	r4, r1
   3252c:	beq	323ec <GetDataLinear+0x78>
   32530:	cmp	r9, r5
   32534:	add	r0, r6, r9, lsl #2
   32538:	bge	3241c <GetDataLinear+0xa8>
   3253c:	mov	r1, r4
   32540:	mov	r2, r7
   32544:	bl	1490 <memcpy@plt>
   32548:	add	r9, r9, #1
   3254c:	add	r4, r4, r8
   32550:	b	32530 <GetDataLinear+0x1bc>
   32554:	add	r1, r4, r9, lsl #1
   32558:	cmp	r8, #0
   3255c:	lslne	r8, r8, #1
   32560:	movne	r9, #0
   32564:	movne	r4, r1
   32568:	beq	323ec <GetDataLinear+0x78>
   3256c:	cmp	r9, r5
   32570:	add	r0, r6, r9, lsl #1
   32574:	bge	3241c <GetDataLinear+0xa8>
   32578:	mov	r1, r4
   3257c:	mov	r2, r7
   32580:	bl	1490 <memcpy@plt>
   32584:	add	r9, r9, #1
   32588:	add	r4, r4, r8
   3258c:	b	3256c <GetDataLinear+0x1f8>
   32590:	add	r1, r4, r9, lsl #1
   32594:	cmp	r8, #0
   32598:	lslne	r8, r8, #1
   3259c:	movne	r9, #0
   325a0:	movne	r4, r1
   325a4:	beq	323ec <GetDataLinear+0x78>
   325a8:	cmp	r9, r5
   325ac:	add	r0, r6, r9, lsl #1
   325b0:	bge	3241c <GetDataLinear+0xa8>
   325b4:	mov	r1, r4
   325b8:	mov	r2, r7
   325bc:	bl	1490 <memcpy@plt>
   325c0:	add	r9, r9, #1
   325c4:	add	r4, r4, r8
   325c8:	b	325a8 <GetDataLinear+0x234>
   325cc:	add	r1, r4, r9
   325d0:	cmp	r8, #0
   325d4:	movne	r4, r1
   325d8:	movne	r9, #0
   325dc:	beq	323ec <GetDataLinear+0x78>
   325e0:	cmp	r9, r5
   325e4:	add	r0, r6, r9
   325e8:	bge	3241c <GetDataLinear+0xa8>
   325ec:	mov	r1, r4
   325f0:	mov	r2, r7
   325f4:	bl	1490 <memcpy@plt>
   325f8:	add	r9, r9, #1
   325fc:	add	r4, r4, r8
   32600:	b	325e0 <GetDataLinear+0x26c>
   32604:	add	r1, r4, r9
   32608:	cmp	r8, #0
   3260c:	movne	r4, r1
   32610:	movne	r9, #0
   32614:	beq	323ec <GetDataLinear+0x78>
   32618:	cmp	r9, r5
   3261c:	add	r0, r6, r9
   32620:	bge	3241c <GetDataLinear+0xa8>
   32624:	mov	r1, r4
   32628:	mov	r2, r7
   3262c:	bl	1490 <memcpy@plt>
   32630:	add	r9, r9, #1
   32634:	add	r4, r4, r8
   32638:	b	32618 <GetDataLinear+0x2a4>
   3263c:	mov	r8, #1
   32640:	b	32420 <GetDataLinear+0xac>

00032644 <WriteCompressedData>:
   32644:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   32648:	sub	sp, sp, #1040	; 0x410
   3264c:	mov	r8, #0
   32650:	sub	sp, sp, #4
   32654:	mov	r9, #0
   32658:	add	r7, sp, #16
   3265c:	strd	r8, [r7, #-8]
   32660:	subs	r8, r0, #0
   32664:	moveq	r0, r8
   32668:	ldr	r5, [sp, #1080]	; 0x438
   3266c:	beq	327ac <WriteCompressedData+0x168>
   32670:	ldr	r0, [r8]
   32674:	cmp	r0, #0
   32678:	beq	327ac <WriteCompressedData+0x168>
   3267c:	mov	sl, r3
   32680:	mov	r0, r5
   32684:	mov	r4, r1
   32688:	mov	r9, r2
   3268c:	bl	1598 <Mat_SizeOf@plt>
   32690:	mov	r3, sp
   32694:	str	r5, [sp]
   32698:	mul	r5, sl, r0
   3269c:	mov	r6, #0
   326a0:	mov	fp, #1024	; 0x400
   326a4:	str	r3, [r4]
   326a8:	mov	r3, #8
   326ac:	str	r5, [sp, #4]
   326b0:	str	r3, [r4, #4]
   326b4:	mov	r1, #0
   326b8:	mov	r0, r4
   326bc:	str	r7, [r4, #12]
   326c0:	str	fp, [r4, #16]
   326c4:	bl	14fc <deflate@plt>
   326c8:	ldr	r2, [r4, #16]
   326cc:	mov	r1, #1
   326d0:	mov	r0, r7
   326d4:	ldr	r3, [r8]
   326d8:	rsb	r2, r2, #1024	; 0x400
   326dc:	bl	1514 <fwrite@plt>
   326e0:	ldr	r3, [r4, #16]
   326e4:	add	r6, r6, r0
   326e8:	mov	r0, r6
   326ec:	cmp	r3, #0
   326f0:	beq	326b4 <WriteCompressedData+0x70>
   326f4:	cmp	r9, #0
   326f8:	cmpne	sl, #0
   326fc:	ble	327ac <WriteCompressedData+0x168>
   32700:	str	r9, [r4]
   32704:	mov	r9, #1024	; 0x400
   32708:	str	r5, [r4, #4]
   3270c:	mov	r1, #0
   32710:	mov	r0, r4
   32714:	str	r7, [r4, #12]
   32718:	str	r9, [r4, #16]
   3271c:	bl	14fc <deflate@plt>
   32720:	ldr	r2, [r4, #16]
   32724:	mov	r1, #1
   32728:	mov	r0, r7
   3272c:	ldr	r3, [r8]
   32730:	rsb	r2, r2, #1024	; 0x400
   32734:	bl	1514 <fwrite@plt>
   32738:	ldr	r3, [r4, #16]
   3273c:	add	r6, r6, r0
   32740:	cmp	r3, #0
   32744:	beq	3270c <WriteCompressedData+0xc8>
   32748:	ands	r3, r5, #7
   3274c:	beq	327a8 <WriteCompressedData+0x164>
   32750:	rsbs	r5, r5, #0
   32754:	sub	r2, r7, #8
   32758:	and	r5, r5, #7
   3275c:	rsbpl	r3, r5, #0
   32760:	mov	r5, #1024	; 0x400
   32764:	rsb	r3, r3, #8
   32768:	strd	r2, [r4]
   3276c:	mov	r1, #0
   32770:	mov	r0, r4
   32774:	str	r7, [r4, #12]
   32778:	str	r5, [r4, #16]
   3277c:	bl	14fc <deflate@plt>
   32780:	ldr	r2, [r4, #16]
   32784:	mov	r1, #1
   32788:	mov	r0, r7
   3278c:	ldr	r3, [r8]
   32790:	rsb	r2, r2, #1024	; 0x400
   32794:	bl	1514 <fwrite@plt>
   32798:	ldr	r3, [r4, #16]
   3279c:	add	r6, r6, r0
   327a0:	cmp	r3, #0
   327a4:	beq	3276c <WriteCompressedData+0x128>
   327a8:	mov	r0, r6
   327ac:	add	sp, sp, #1040	; 0x410
   327b0:	add	sp, sp, #4
   327b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000327b8 <GetTypeBufSize>:
   327b8:	mov	r3, #1
   327bc:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   327c0:	mov	r5, r0
   327c4:	mov	r1, sp
   327c8:	str	r3, [sp]
   327cc:	bl	3a864 <SafeMulDims>
   327d0:	ldr	r4, [r5, #4]
   327d4:	ldr	r3, [r5, #16]
   327d8:	tst	r4, #1
   327dc:	lsl	r4, r4, #2
   327e0:	sub	r3, r3, #1
   327e4:	addne	r4, r4, #12
   327e8:	addeq	r4, r4, #8
   327ec:	cmp	r3, #4
   327f0:	addls	pc, pc, r3, lsl #2
   327f4:	b	32a48 <GetTypeBufSize+0x290>
   327f8:	b	328d0 <GetTypeBufSize+0x118>
   327fc:	b	3280c <GetTypeBufSize+0x54>
   32800:	b	32a48 <GetTypeBufSize+0x290>
   32804:	b	329f8 <GetTypeBufSize+0x240>
   32808:	b	32948 <GetTypeBufSize+0x190>
   3280c:	mov	r7, #0
   32810:	ldr	r8, [r5, #40]	; 0x28
   32814:	ldr	r9, [r5, #52]	; 0x34
   32818:	mov	r5, r7
   3281c:	ldr	r6, [r9, #4]
   32820:	cmp	r7, r6
   32824:	bne	3287c <GetTypeBufSize+0xc4>
   32828:	mla	r0, r5, r6, r6
   3282c:	ands	r5, r0, #7
   32830:	add	r3, r6, r0
   32834:	bne	328a0 <GetTypeBufSize+0xe8>
   32838:	add	r4, r4, #16
   3283c:	cmp	r8, #0
   32840:	cmpne	r6, #0
   32844:	add	r4, r4, r0
   32848:	beq	32870 <GetTypeBufSize+0xb8>
   3284c:	mov	r3, #1
   32850:	mov	r2, r6
   32854:	ldr	r1, [sp]
   32858:	add	r0, sp, #4
   3285c:	str	r3, [sp, #4]
   32860:	bl	3a8c4 <SafeMul>
   32864:	ldr	r3, [sp, #4]
   32868:	cmp	r3, r5
   3286c:	bhi	328a8 <GetTypeBufSize+0xf0>
   32870:	mov	r0, r4
   32874:	add	sp, sp, #12
   32878:	pop	{r4, r5, r6, r7, r8, r9, pc}
   3287c:	ldr	r3, [r9, #8]
   32880:	ldr	r0, [r3, r7, lsl #2]
   32884:	cmp	r0, #0
   32888:	beq	32898 <GetTypeBufSize+0xe0>
   3288c:	bl	15c8 <strlen@plt>
   32890:	cmp	r5, r0
   32894:	movcc	r5, r0
   32898:	add	r7, r7, #1
   3289c:	b	32820 <GetTypeBufSize+0x68>
   328a0:	mov	r0, r3
   328a4:	b	3282c <GetTypeBufSize+0x74>
   328a8:	ldr	r0, [r8, r5, lsl #2]
   328ac:	cmp	r0, #0
   328b0:	moveq	r0, #48	; 0x30
   328b4:	beq	328c0 <GetTypeBufSize+0x108>
   328b8:	bl	327b8 <GetTypeBufSize>
   328bc:	add	r0, r0, #24
   328c0:	add	r0, r0, #8
   328c4:	add	r5, r5, #1
   328c8:	add	r4, r4, r0
   328cc:	b	32864 <GetTypeBufSize+0xac>
   328d0:	ldr	r3, [r5]
   328d4:	cmp	r3, #0
   328d8:	beq	32870 <GetTypeBufSize+0xb8>
   328dc:	ldr	r2, [r5, #12]
   328e0:	cmp	r2, #0
   328e4:	beq	32870 <GetTypeBufSize+0xb8>
   328e8:	udiv	r1, r3, r2
   328ec:	ldr	r6, [r5, #40]	; 0x28
   328f0:	cmp	r3, r2
   328f4:	movcc	r3, #0
   328f8:	movcs	r3, #1
   328fc:	cmp	r6, #0
   32900:	moveq	r3, #0
   32904:	cmp	r3, #0
   32908:	str	r1, [sp]
   3290c:	beq	32870 <GetTypeBufSize+0xb8>
   32910:	mov	r5, #0
   32914:	b	32938 <GetTypeBufSize+0x180>
   32918:	ldr	r0, [r6, r5, lsl #2]
   3291c:	cmp	r0, #0
   32920:	beq	3292c <GetTypeBufSize+0x174>
   32924:	bl	327b8 <GetTypeBufSize>
   32928:	add	r0, r0, #24
   3292c:	add	r0, r0, #8
   32930:	add	r5, r5, #1
   32934:	add	r4, r4, r0
   32938:	ldr	r3, [sp]
   3293c:	cmp	r3, r5
   32940:	bhi	32918 <GetTypeBufSize+0x160>
   32944:	b	32870 <GetTypeBufSize+0xb8>
   32948:	ldr	r8, [r5, #40]	; 0x28
   3294c:	add	r7, sp, #4
   32950:	mov	r2, #4
   32954:	mov	r0, r7
   32958:	ldr	r1, [r8, #8]
   3295c:	bl	3a8c4 <SafeMul>
   32960:	ldr	r3, [sp, #4]
   32964:	mov	r2, #4
   32968:	mov	r0, r7
   3296c:	tst	r3, #7
   32970:	bicne	r3, r3, #7
   32974:	addne	r3, r3, #8
   32978:	strne	r3, [sp, #4]
   3297c:	ldr	r1, [r8, #16]
   32980:	ldr	r6, [sp, #4]
   32984:	bl	3a8c4 <SafeMul>
   32988:	ldr	r3, [sp, #4]
   3298c:	ldr	r0, [r5, #8]
   32990:	tst	r3, #7
   32994:	bicne	r3, r3, #7
   32998:	addne	r3, r3, #8
   3299c:	strne	r3, [sp, #4]
   329a0:	ldr	r3, [sp, #4]
   329a4:	ldr	r8, [r8, #20]
   329a8:	add	r6, r6, r3
   329ac:	bl	1598 <Mat_SizeOf@plt>
   329b0:	mov	r2, r0
   329b4:	mov	r1, r8
   329b8:	mov	r0, r7
   329bc:	add	r6, r6, #16
   329c0:	bl	3a8c4 <SafeMul>
   329c4:	ldr	r3, [sp, #4]
   329c8:	tst	r3, #7
   329cc:	bicne	r3, r3, #7
   329d0:	addne	r3, r3, #8
   329d4:	strne	r3, [sp, #4]
   329d8:	ldr	r3, [sp, #4]
   329dc:	add	r3, r3, #8
   329e0:	add	r6, r3, r6
   329e4:	add	r4, r4, r6
   329e8:	ldr	r2, [r5, #20]
   329ec:	cmp	r2, #0
   329f0:	addne	r4, r4, r3
   329f4:	b	32870 <GetTypeBufSize+0xb8>
   329f8:	ldr	r0, [r5, #8]
   329fc:	add	r6, sp, #4
   32a00:	ldr	r7, [sp]
   32a04:	sub	r3, r0, #1
   32a08:	cmp	r3, #1
   32a0c:	movls	r0, #4
   32a10:	bl	1598 <Mat_SizeOf@plt>
   32a14:	mov	r2, r0
   32a18:	mov	r1, r7
   32a1c:	mov	r0, r6
   32a20:	bl	3a8c4 <SafeMul>
   32a24:	ldr	r3, [sp, #4]
   32a28:	tst	r3, #7
   32a2c:	bicne	r3, r3, #7
   32a30:	addne	r3, r3, #8
   32a34:	strne	r3, [sp, #4]
   32a38:	ldr	r3, [sp, #4]
   32a3c:	add	r3, r3, #8
   32a40:	add	r4, r4, r3
   32a44:	b	329e8 <GetTypeBufSize+0x230>
   32a48:	ldr	r6, [sp]
   32a4c:	ldr	r0, [r5, #8]
   32a50:	bl	1598 <Mat_SizeOf@plt>
   32a54:	mov	r2, r0
   32a58:	add	r0, sp, #4
   32a5c:	mov	r1, r6
   32a60:	b	32a20 <GetTypeBufSize+0x268>

00032a64 <ReadRankDims>:
   32a64:	cmp	r2, #5
   32a68:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   32a6c:	movne	r4, #0
   32a70:	bne	32b60 <ReadRankDims+0xfc>
   32a74:	lsr	r2, r3, #2
   32a78:	mov	r7, r0
   32a7c:	bic	r0, r3, #3
   32a80:	mov	r6, r1
   32a84:	str	r2, [r1, #4]
   32a88:	bl	1544 <malloc@plt>
   32a8c:	cmp	r0, #0
   32a90:	mov	r4, r0
   32a94:	str	r0, [r6, #32]
   32a98:	movne	r5, #0
   32a9c:	addne	r8, sp, #4
   32aa0:	bne	32af8 <ReadRankDims+0x94>
   32aa4:	ldr	r0, [pc, #192]	; 32b6c <ReadRankDims+0x108>
   32aa8:	str	r4, [r6, #4]
   32aac:	add	r0, pc, r0
   32ab0:	b	32b5c <ReadRankDims+0xf8>
   32ab4:	mov	r2, #1
   32ab8:	mov	r1, #4
   32abc:	ldr	r3, [r7]
   32ac0:	mov	r0, r8
   32ac4:	bl	1520 <fread@plt>
   32ac8:	cmp	r0, #1
   32acc:	bne	32b40 <ReadRankDims+0xdc>
   32ad0:	ldr	r3, [r7, #20]
   32ad4:	ldr	r9, [r6, #32]
   32ad8:	cmp	r3, #0
   32adc:	ldreq	r3, [sp, #4]
   32ae0:	streq	r3, [r9, r4]
   32ae4:	beq	32af4 <ReadRankDims+0x90>
   32ae8:	mov	r0, r8
   32aec:	bl	18cc <Mat_uint32Swap>
   32af0:	str	r0, [r9, r4]
   32af4:	add	r5, r5, #1
   32af8:	ldr	r3, [r6, #4]
   32afc:	lsl	r4, r5, #2
   32b00:	cmp	r5, r3
   32b04:	blt	32ab4 <ReadRankDims+0x50>
   32b08:	tst	r3, #1
   32b0c:	beq	32b60 <ReadRankDims+0xfc>
   32b10:	mov	r1, #4
   32b14:	mov	r2, #1
   32b18:	ldr	r3, [r7]
   32b1c:	add	r0, sp, r1
   32b20:	bl	1520 <fread@plt>
   32b24:	cmp	r0, #1
   32b28:	addeq	r4, r5, #1
   32b2c:	lsleq	r4, r4, #2
   32b30:	beq	32b60 <ReadRankDims+0xfc>
   32b34:	ldr	r0, [pc, #52]	; 32b70 <ReadRankDims+0x10c>
   32b38:	add	r0, pc, r0
   32b3c:	b	32b5c <ReadRankDims+0xf8>
   32b40:	ldr	r0, [r6, #32]
   32b44:	bl	1478 <free@plt>
   32b48:	ldr	r0, [pc, #36]	; 32b74 <ReadRankDims+0x110>
   32b4c:	mov	r3, #0
   32b50:	str	r3, [r6, #4]
   32b54:	str	r3, [r6, #32]
   32b58:	add	r0, pc, r0
   32b5c:	bl	161c <Mat_Critical@plt>
   32b60:	mov	r0, r4
   32b64:	add	sp, sp, #12
   32b68:	pop	{r4, r5, r6, r7, r8, r9, pc}
   32b6c:	.word	0x0000bf55
   32b70:	.word	0x0000c0ce
   32b74:	.word	0x0000c0ae

00032b78 <WriteType>:
   32b78:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   32b7c:	mov	r3, #1
   32b80:	sub	sp, sp, #100	; 0x64
   32b84:	mov	r5, r1
   32b88:	mov	r2, #0
   32b8c:	mov	r4, r0
   32b90:	add	r1, sp, #16
   32b94:	mov	r0, r5
   32b98:	strb	r2, [sp, #8]
   32b9c:	strh	r3, [sp, #10]
   32ba0:	str	r3, [sp, #16]
   32ba4:	bl	3a864 <SafeMulDims>
   32ba8:	ldr	r3, [r5, #16]
   32bac:	sub	r3, r3, #1
   32bb0:	cmp	r3, #14
   32bb4:	addls	pc, pc, r3, lsl #2
   32bb8:	b	32c54 <WriteType+0xdc>
   32bbc:	b	32f50 <WriteType+0x3d8>
   32bc0:	b	33388 <WriteType+0x810>
   32bc4:	b	32c54 <WriteType+0xdc>
   32bc8:	b	32d14 <WriteType+0x19c>
   32bcc:	b	33a3c <WriteType+0xec4>
   32bd0:	b	32bf8 <WriteType+0x80>
   32bd4:	b	32bf8 <WriteType+0x80>
   32bd8:	b	32bf8 <WriteType+0x80>
   32bdc:	b	32bf8 <WriteType+0x80>
   32be0:	b	32bf8 <WriteType+0x80>
   32be4:	b	32bf8 <WriteType+0x80>
   32be8:	b	32bf8 <WriteType+0x80>
   32bec:	b	32bf8 <WriteType+0x80>
   32bf0:	b	32bf8 <WriteType+0x80>
   32bf4:	b	32bf8 <WriteType+0x80>
   32bf8:	ldr	r3, [r5, #8]
   32bfc:	ldr	r1, [r5, #20]
   32c00:	ldr	r2, [sp, #16]
   32c04:	ldr	r6, [r5, #40]	; 0x28
   32c08:	cmp	r1, #0
   32c0c:	beq	32cc8 <WriteType+0x150>
   32c10:	cmp	r6, #0
   32c14:	ldreq	r6, [pc, #4044]	; 33be8 <WriteType+0x1070>
   32c18:	addeq	r6, pc, r6
   32c1c:	mov	r0, r4
   32c20:	ldr	r1, [r6]
   32c24:	bl	1bc30 <WriteData>
   32c28:	ands	r7, r0, #7
   32c2c:	str	r0, [sp, #12]
   32c30:	bne	32c60 <WriteType+0xe8>
   32c34:	mov	r0, r4
   32c38:	ldr	r1, [r6, #4]
   32c3c:	ldr	r3, [r5, #8]
   32c40:	ldr	r2, [sp, #16]
   32c44:	bl	1bc30 <WriteData>
   32c48:	ands	r5, r0, #7
   32c4c:	str	r0, [sp, #12]
   32c50:	bne	32c94 <WriteType+0x11c>
   32c54:	mov	r0, #0
   32c58:	add	sp, sp, #100	; 0x64
   32c5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   32c60:	rsbs	r0, r0, #0
   32c64:	add	r8, sp, #8
   32c68:	and	r0, r0, #7
   32c6c:	rsbpl	r7, r0, #0
   32c70:	mov	r2, #1
   32c74:	mov	r0, r8
   32c78:	ldr	r3, [r4]
   32c7c:	mov	r1, r2
   32c80:	add	r7, r7, #1
   32c84:	bl	1514 <fwrite@plt>
   32c88:	cmp	r7, #8
   32c8c:	bne	32c70 <WriteType+0xf8>
   32c90:	b	32c34 <WriteType+0xbc>
   32c94:	rsbs	r0, r0, #0
   32c98:	add	r6, sp, #8
   32c9c:	and	r0, r0, #7
   32ca0:	rsbpl	r5, r0, #0
   32ca4:	mov	r2, #1
   32ca8:	mov	r0, r6
   32cac:	ldr	r3, [r4]
   32cb0:	mov	r1, r2
   32cb4:	add	r5, r5, #1
   32cb8:	bl	1514 <fwrite@plt>
   32cbc:	cmp	r5, #8
   32cc0:	bne	32ca4 <WriteType+0x12c>
   32cc4:	b	32c54 <WriteType+0xdc>
   32cc8:	mov	r1, r6
   32ccc:	mov	r0, r4
   32cd0:	bl	1bc30 <WriteData>
   32cd4:	ands	r5, r0, #7
   32cd8:	str	r0, [sp, #12]
   32cdc:	beq	32c54 <WriteType+0xdc>
   32ce0:	rsbs	r0, r0, #0
   32ce4:	add	r6, sp, #8
   32ce8:	and	r0, r0, #7
   32cec:	rsbpl	r5, r0, #0
   32cf0:	mov	r2, #1
   32cf4:	mov	r0, r6
   32cf8:	ldr	r3, [r4]
   32cfc:	mov	r1, r2
   32d00:	add	r5, r5, #1
   32d04:	bl	1514 <fwrite@plt>
   32d08:	cmp	r5, #8
   32d0c:	bne	32cf0 <WriteType+0x178>
   32d10:	b	32c54 <WriteType+0xdc>
   32d14:	ldr	r6, [r5, #8]
   32d18:	ldr	r7, [r5, #40]	; 0x28
   32d1c:	mov	r5, #0
   32d20:	strb	r5, [sp, #80]	; 0x50
   32d24:	cmp	r6, #2
   32d28:	str	r6, [sp, #88]	; 0x58
   32d2c:	ldr	r8, [sp, #16]
   32d30:	bhi	32dcc <WriteType+0x254>
   32d34:	cmp	r6, r5
   32d38:	lsl	r3, r8, #1
   32d3c:	add	r0, sp, #88	; 0x58
   32d40:	add	r9, sp, #92	; 0x5c
   32d44:	mov	r6, #4
   32d48:	beq	32f20 <WriteType+0x3a8>
   32d4c:	mov	r1, r6
   32d50:	mov	r2, #1
   32d54:	str	r6, [sp, #88]	; 0x58
   32d58:	str	r3, [sp, #92]	; 0x5c
   32d5c:	ldr	r3, [r4]
   32d60:	bl	1514 <fwrite@plt>
   32d64:	mov	r1, r6
   32d68:	mov	r2, #1
   32d6c:	ldr	r3, [r4]
   32d70:	mov	r0, r9
   32d74:	bl	1514 <fwrite@plt>
   32d78:	cmp	r7, #0
   32d7c:	addne	r6, sp, #84	; 0x54
   32d80:	beq	32c54 <WriteType+0xdc>
   32d84:	cmp	r8, r5
   32d88:	bgt	32efc <WriteType+0x384>
   32d8c:	ldr	r3, [sp, #92]	; 0x5c
   32d90:	ands	r5, r3, #7
   32d94:	beq	32c54 <WriteType+0xdc>
   32d98:	rsbs	r3, r3, #0
   32d9c:	add	r6, sp, #80	; 0x50
   32da0:	and	r3, r3, #7
   32da4:	rsbpl	r5, r3, #0
   32da8:	mov	r2, #1
   32dac:	mov	r0, r6
   32db0:	ldr	r3, [r4]
   32db4:	mov	r1, r2
   32db8:	add	r5, r5, #1
   32dbc:	bl	1514 <fwrite@plt>
   32dc0:	cmp	r5, #8
   32dc4:	bne	32da8 <WriteType+0x230>
   32dc8:	b	32c54 <WriteType+0xdc>
   32dcc:	cmp	r6, #4
   32dd0:	beq	32e6c <WriteType+0x2f4>
   32dd4:	cmp	r6, #16
   32dd8:	bne	32c54 <WriteType+0xdc>
   32ddc:	mov	r2, #1
   32de0:	mov	r1, #4
   32de4:	ldr	r3, [r4]
   32de8:	add	r0, sp, #88	; 0x58
   32dec:	str	r8, [sp, #92]	; 0x5c
   32df0:	bl	1514 <fwrite@plt>
   32df4:	mov	r2, #1
   32df8:	mov	r1, #4
   32dfc:	ldr	r3, [r4]
   32e00:	add	r0, sp, #92	; 0x5c
   32e04:	bl	1514 <fwrite@plt>
   32e08:	cmp	r7, #0
   32e0c:	beq	32e2c <WriteType+0x2b4>
   32e10:	ldr	r2, [sp, #92]	; 0x5c
   32e14:	cmp	r2, #0
   32e18:	ble	32e2c <WriteType+0x2b4>
   32e1c:	mov	r1, #1
   32e20:	mov	r0, r7
   32e24:	ldr	r3, [r4]
   32e28:	bl	1514 <fwrite@plt>
   32e2c:	ldr	r3, [sp, #92]	; 0x5c
   32e30:	ands	r5, r3, #7
   32e34:	beq	32c54 <WriteType+0xdc>
   32e38:	rsbs	r3, r3, #0
   32e3c:	add	r6, sp, #80	; 0x50
   32e40:	and	r3, r3, #7
   32e44:	rsbpl	r5, r3, #0
   32e48:	mov	r2, #1
   32e4c:	mov	r0, r6
   32e50:	ldr	r3, [r4]
   32e54:	mov	r1, r2
   32e58:	add	r5, r5, #1
   32e5c:	bl	1514 <fwrite@plt>
   32e60:	cmp	r5, #8
   32e64:	bne	32e48 <WriteType+0x2d0>
   32e68:	b	32c54 <WriteType+0xdc>
   32e6c:	lsl	r3, r8, #1
   32e70:	mov	r2, #1
   32e74:	mov	r1, r6
   32e78:	add	r0, sp, #88	; 0x58
   32e7c:	str	r3, [sp, #92]	; 0x5c
   32e80:	ldr	r3, [r4]
   32e84:	bl	1514 <fwrite@plt>
   32e88:	mov	r2, #1
   32e8c:	mov	r1, r6
   32e90:	ldr	r3, [r4]
   32e94:	add	r0, sp, #92	; 0x5c
   32e98:	bl	1514 <fwrite@plt>
   32e9c:	cmp	r7, #0
   32ea0:	cmpne	r8, #0
   32ea4:	ble	32ebc <WriteType+0x344>
   32ea8:	mov	r2, r8
   32eac:	mov	r1, #2
   32eb0:	ldr	r3, [r4]
   32eb4:	mov	r0, r7
   32eb8:	bl	1514 <fwrite@plt>
   32ebc:	ldr	r3, [sp, #92]	; 0x5c
   32ec0:	ands	r5, r3, #7
   32ec4:	beq	32c54 <WriteType+0xdc>
   32ec8:	rsbs	r3, r3, #0
   32ecc:	add	r6, sp, #80	; 0x50
   32ed0:	and	r3, r3, #7
   32ed4:	rsbpl	r5, r3, #0
   32ed8:	mov	r2, #1
   32edc:	mov	r0, r6
   32ee0:	ldr	r3, [r4]
   32ee4:	mov	r1, r2
   32ee8:	add	r5, r5, #1
   32eec:	bl	1514 <fwrite@plt>
   32ef0:	cmp	r5, #8
   32ef4:	bne	32ed8 <WriteType+0x360>
   32ef8:	b	32c54 <WriteType+0xdc>
   32efc:	ldrb	r3, [r7, r5]
   32f00:	mov	r2, #1
   32f04:	mov	r1, #2
   32f08:	mov	r0, r6
   32f0c:	add	r5, r5, #1
   32f10:	strh	r3, [sp, #84]	; 0x54
   32f14:	ldr	r3, [r4]
   32f18:	bl	1514 <fwrite@plt>
   32f1c:	b	32d84 <WriteType+0x20c>
   32f20:	mov	r2, #1
   32f24:	mov	r1, r6
   32f28:	str	r6, [sp, #88]	; 0x58
   32f2c:	str	r3, [sp, #92]	; 0x5c
   32f30:	ldr	r3, [r4]
   32f34:	bl	1514 <fwrite@plt>
   32f38:	ldr	r3, [r4]
   32f3c:	mov	r2, #1
   32f40:	mov	r1, r6
   32f44:	mov	r0, r9
   32f48:	bl	1514 <fwrite@plt>
   32f4c:	b	32c54 <WriteType+0xdc>
   32f50:	ldr	r3, [r5]
   32f54:	cmp	r3, #0
   32f58:	beq	32c54 <WriteType+0xdc>
   32f5c:	ldr	r2, [r5, #40]	; 0x28
   32f60:	str	r2, [sp]
   32f64:	ldr	r2, [r5, #12]
   32f68:	ldr	r1, [sp]
   32f6c:	clz	r6, r2
   32f70:	lsr	r6, r6, #5
   32f74:	cmp	r1, #0
   32f78:	moveq	r6, #1
   32f7c:	cmp	r6, #0
   32f80:	bne	32c54 <WriteType+0xdc>
   32f84:	udiv	r3, r3, r2
   32f88:	str	r3, [sp, #16]
   32f8c:	ldr	r3, [pc, #3160]	; 33bec <WriteType+0x1074>
   32f90:	add	r3, pc, r3
   32f94:	str	r3, [sp, #4]
   32f98:	ldr	r3, [sp, #16]
   32f9c:	cmp	r3, r6
   32fa0:	bls	32c54 <WriteType+0xdc>
   32fa4:	ldr	r3, [sp]
   32fa8:	mov	r2, #14
   32fac:	mov	r0, #6
   32fb0:	mov	r1, #5
   32fb4:	ldr	r5, [r3, r6, lsl #2]
   32fb8:	mov	r3, #1
   32fbc:	strh	r3, [sp, #56]	; 0x38
   32fc0:	mov	r3, #8
   32fc4:	strd	r0, [sp, #64]	; 0x40
   32fc8:	str	r3, [sp, #72]	; 0x48
   32fcc:	mov	r3, #0
   32fd0:	cmp	r4, r3
   32fd4:	cmpne	r5, r3
   32fd8:	strb	r3, [sp, #52]	; 0x34
   32fdc:	str	r3, [sp, #76]	; 0x4c
   32fe0:	str	r2, [sp, #80]	; 0x50
   32fe4:	str	r3, [sp, #88]	; 0x58
   32fe8:	beq	3322c <WriteType+0x6b4>
   32fec:	mov	r2, #1
   32ff0:	mov	r1, #4
   32ff4:	ldr	r3, [r4]
   32ff8:	add	r0, sp, #80	; 0x50
   32ffc:	add	r9, sp, #76	; 0x4c
   33000:	bl	1514 <fwrite@plt>
   33004:	mov	r2, #1
   33008:	mov	r1, #4
   3300c:	ldr	r3, [r4]
   33010:	mov	r0, r9
   33014:	bl	1514 <fwrite@plt>
   33018:	ldr	r3, [r5, #16]
   3301c:	cmp	r3, #0
   33020:	beq	3322c <WriteType+0x6b4>
   33024:	ldr	r0, [r4]
   33028:	add	r8, sp, #60	; 0x3c
   3302c:	bl	14b4 <ftell@plt>
   33030:	ldr	r2, [r5, #16]
   33034:	mov	r7, r0
   33038:	uxtb	r3, r2
   3303c:	str	r3, [sp, #60]	; 0x3c
   33040:	ldr	r1, [r5, #20]
   33044:	cmp	r1, #0
   33048:	orrne	r3, r3, #2048	; 0x800
   3304c:	strne	r3, [sp, #60]	; 0x3c
   33050:	ldr	r3, [r5, #24]
   33054:	cmp	r3, #0
   33058:	ldrne	r3, [sp, #60]	; 0x3c
   3305c:	orrne	r3, r3, #1024	; 0x400
   33060:	strne	r3, [sp, #60]	; 0x3c
   33064:	ldr	r3, [r5, #28]
   33068:	cmp	r3, #0
   3306c:	ldrne	r3, [sp, #60]	; 0x3c
   33070:	orrne	r3, r3, #512	; 0x200
   33074:	strne	r3, [sp, #60]	; 0x3c
   33078:	cmp	r2, #5
   3307c:	ldreq	r3, [r5, #40]	; 0x28
   33080:	ldreq	r3, [r3]
   33084:	streq	r3, [sp, #88]	; 0x58
   33088:	ldr	r3, [r4, #20]
   3308c:	cmp	r3, #0
   33090:	beq	330a0 <WriteType+0x528>
   33094:	mov	r0, r8
   33098:	bl	189c <Mat_int32Swap>
   3309c:	str	r0, [sp, #60]	; 0x3c
   330a0:	mov	r2, #1
   330a4:	mov	r1, #4
   330a8:	ldr	r3, [r4]
   330ac:	add	r0, sp, #64	; 0x40
   330b0:	add	sl, sp, #84	; 0x54
   330b4:	bl	1514 <fwrite@plt>
   330b8:	mov	r2, #1
   330bc:	mov	r1, #4
   330c0:	ldr	r3, [r4]
   330c4:	add	r0, sp, #72	; 0x48
   330c8:	add	fp, sp, #92	; 0x5c
   330cc:	bl	1514 <fwrite@plt>
   330d0:	mov	r2, #1
   330d4:	mov	r1, #4
   330d8:	ldr	r3, [r4]
   330dc:	mov	r0, r8
   330e0:	mov	r8, #0
   330e4:	bl	1514 <fwrite@plt>
   330e8:	mov	r2, #1
   330ec:	mov	r1, #4
   330f0:	ldr	r3, [r4]
   330f4:	add	r0, sp, #88	; 0x58
   330f8:	bl	1514 <fwrite@plt>
   330fc:	ldr	r3, [r5, #4]
   33100:	mov	r2, #1
   33104:	mov	r1, #4
   33108:	add	r0, sp, #68	; 0x44
   3310c:	lsl	r3, r3, #2
   33110:	str	r3, [sp, #84]	; 0x54
   33114:	ldr	r3, [r4]
   33118:	bl	1514 <fwrite@plt>
   3311c:	mov	r2, #1
   33120:	mov	r1, #4
   33124:	ldr	r3, [r4]
   33128:	mov	r0, sl
   3312c:	bl	1514 <fwrite@plt>
   33130:	ldr	r2, [r5, #4]
   33134:	ldr	r3, [r4]
   33138:	cmp	r8, r2
   3313c:	blt	33234 <WriteType+0x6bc>
   33140:	tst	r2, #1
   33144:	beq	33158 <WriteType+0x5e0>
   33148:	mov	r2, #1
   3314c:	mov	r1, #4
   33150:	mov	r0, r9
   33154:	bl	1514 <fwrite@plt>
   33158:	ldr	r0, [r5, #36]	; 0x24
   3315c:	add	r8, sp, #56	; 0x38
   33160:	ldr	fp, [r4]
   33164:	cmp	r0, #0
   33168:	bne	33258 <WriteType+0x6e0>
   3316c:	mov	r3, fp
   33170:	mov	r2, #1
   33174:	mov	r1, #2
   33178:	mov	r0, r8
   3317c:	bl	1514 <fwrite@plt>
   33180:	add	r8, sp, #52	; 0x34
   33184:	mov	r2, #1
   33188:	ldr	r3, [r4]
   3318c:	mov	r1, r2
   33190:	mov	r0, r8
   33194:	bl	1514 <fwrite@plt>
   33198:	mov	r2, #1
   3319c:	mov	r0, r8
   331a0:	ldr	r3, [r4]
   331a4:	mov	r1, r2
   331a8:	bl	1514 <fwrite@plt>
   331ac:	mov	r2, #1
   331b0:	mov	r1, #4
   331b4:	ldr	r3, [r4]
   331b8:	mov	r0, r9
   331bc:	bl	1514 <fwrite@plt>
   331c0:	mov	r1, r5
   331c4:	mov	r0, r4
   331c8:	bl	32b78 <WriteType>
   331cc:	ldr	r0, [r4]
   331d0:	bl	14b4 <ftell@plt>
   331d4:	cmn	r0, #1
   331d8:	cmnne	r7, #1
   331dc:	mov	r5, r0
   331e0:	beq	3337c <WriteType+0x804>
   331e4:	sub	r1, r0, r7
   331e8:	mov	r2, #1
   331ec:	ldr	r0, [r4]
   331f0:	str	r1, [sp, #84]	; 0x54
   331f4:	rsb	r1, r1, #-16777216	; 0xff000000
   331f8:	add	r1, r1, #16711680	; 0xff0000
   331fc:	add	r1, r1, #65280	; 0xff00
   33200:	add	r1, r1, #252	; 0xfc
   33204:	bl	1694 <fseek@plt>
   33208:	mov	r2, #1
   3320c:	mov	r1, #4
   33210:	ldr	r3, [r4]
   33214:	mov	r0, sl
   33218:	bl	1514 <fwrite@plt>
   3321c:	mov	r2, #0
   33220:	mov	r1, r5
   33224:	ldr	r0, [r4]
   33228:	bl	1694 <fseek@plt>
   3322c:	add	r6, r6, #1
   33230:	b	32f98 <WriteType+0x420>
   33234:	ldr	r2, [r5, #32]
   33238:	mov	r1, #4
   3323c:	mov	r0, fp
   33240:	ldr	r2, [r2, r8, lsl #2]
   33244:	add	r8, r8, #1
   33248:	str	r2, [sp, #92]	; 0x5c
   3324c:	mov	r2, #1
   33250:	bl	1514 <fwrite@plt>
   33254:	b	33130 <WriteType+0x5b8>
   33258:	bl	15c8 <strlen@plt>
   3325c:	cmp	r0, #4
   33260:	add	r9, sp, #92	; 0x5c
   33264:	bhi	332d4 <WriteType+0x75c>
   33268:	mov	r3, fp
   3326c:	mov	r2, #1
   33270:	strh	r0, [sp, #92]	; 0x5c
   33274:	mov	r1, #2
   33278:	mov	r0, r8
   3327c:	bl	1514 <fwrite@plt>
   33280:	mov	r2, #1
   33284:	mov	r1, #2
   33288:	ldr	r3, [r4]
   3328c:	mov	r0, r9
   33290:	add	r9, sp, #52	; 0x34
   33294:	bl	1514 <fwrite@plt>
   33298:	ldrsh	r2, [sp, #92]	; 0x5c
   3329c:	mov	r1, #1
   332a0:	ldr	r3, [r4]
   332a4:	ldr	r0, [r5, #36]	; 0x24
   332a8:	bl	1514 <fwrite@plt>
   332ac:	ldrsh	r8, [sp, #92]	; 0x5c
   332b0:	cmp	r8, #3
   332b4:	bgt	331c0 <WriteType+0x648>
   332b8:	mov	r2, #1
   332bc:	mov	r0, r9
   332c0:	ldr	r3, [r4]
   332c4:	mov	r1, r2
   332c8:	add	r8, r8, #1
   332cc:	bl	1514 <fwrite@plt>
   332d0:	b	332b0 <WriteType+0x738>
   332d4:	mov	r3, fp
   332d8:	mov	r2, #1
   332dc:	str	r0, [sp, #92]	; 0x5c
   332e0:	mov	r1, #2
   332e4:	mov	r0, r8
   332e8:	bl	1514 <fwrite@plt>
   332ec:	add	r8, sp, #52	; 0x34
   332f0:	mov	r2, #1
   332f4:	ldr	r3, [r4]
   332f8:	mov	r1, r2
   332fc:	mov	r0, r8
   33300:	bl	1514 <fwrite@plt>
   33304:	mov	r2, #1
   33308:	mov	r0, r8
   3330c:	ldr	r3, [r4]
   33310:	mov	r1, r2
   33314:	bl	1514 <fwrite@plt>
   33318:	mov	r2, #1
   3331c:	mov	r1, #4
   33320:	ldr	r3, [r4]
   33324:	mov	r0, r9
   33328:	bl	1514 <fwrite@plt>
   3332c:	mov	r1, #1
   33330:	ldr	r3, [r4]
   33334:	ldr	r0, [r5, #36]	; 0x24
   33338:	ldr	r2, [sp, #92]	; 0x5c
   3333c:	bl	1514 <fwrite@plt>
   33340:	ldr	r3, [sp, #92]	; 0x5c
   33344:	ands	r9, r3, #7
   33348:	beq	331c0 <WriteType+0x648>
   3334c:	rsbs	r3, r3, #0
   33350:	and	r3, r3, #7
   33354:	rsbpl	r9, r3, #0
   33358:	mov	r2, #1
   3335c:	mov	r0, r8
   33360:	ldr	r3, [r4]
   33364:	mov	r1, r2
   33368:	add	r9, r9, #1
   3336c:	bl	1514 <fwrite@plt>
   33370:	cmp	r9, #8
   33374:	bne	33358 <WriteType+0x7e0>
   33378:	b	331c0 <WriteType+0x648>
   3337c:	ldr	r0, [sp, #4]
   33380:	bl	161c <Mat_Critical@plt>
   33384:	b	3322c <WriteType+0x6b4>
   33388:	ldr	sl, [r5, #52]	; 0x34
   3338c:	ldr	r9, [r4]
   33390:	ldr	r7, [sl, #4]
   33394:	cmp	r7, #0
   33398:	movne	r8, #0
   3339c:	movne	r6, r8
   333a0:	bne	33434 <WriteType+0x8bc>
   333a4:	ldr	r3, [pc, #2116]	; 33bf0 <WriteType+0x1078>
   333a8:	mov	r5, #1
   333ac:	mov	r2, #1
   333b0:	mov	r1, #4
   333b4:	add	r0, sp, #28
   333b8:	add	r6, sp, #8
   333bc:	str	r3, [sp, #28]
   333c0:	mov	r3, r9
   333c4:	bl	1514 <fwrite@plt>
   333c8:	mov	r2, r5
   333cc:	mov	r1, #4
   333d0:	ldr	r3, [r4]
   333d4:	add	r0, sp, #20
   333d8:	str	r5, [sp, #20]
   333dc:	bl	1514 <fwrite@plt>
   333e0:	mov	r2, r5
   333e4:	mov	r1, #2
   333e8:	ldr	r3, [r4]
   333ec:	add	r0, sp, #10
   333f0:	bl	1514 <fwrite@plt>
   333f4:	mov	r2, r5
   333f8:	mov	r1, r5
   333fc:	ldr	r3, [r4]
   33400:	mov	r0, r6
   33404:	bl	1514 <fwrite@plt>
   33408:	mov	r2, r5
   3340c:	mov	r1, r5
   33410:	ldr	r3, [r4]
   33414:	mov	r0, r6
   33418:	bl	1514 <fwrite@plt>
   3341c:	mov	r2, r5
   33420:	mov	r1, #4
   33424:	str	r7, [sp, #12]
   33428:	add	r0, sp, #12
   3342c:	ldr	r3, [r4]
   33430:	b	32f48 <WriteType+0x3d0>
   33434:	ldr	r3, [sl, #8]
   33438:	ldr	r0, [r3, r8, lsl #2]
   3343c:	add	r8, r8, #1
   33440:	bl	15c8 <strlen@plt>
   33444:	cmp	r6, r0
   33448:	movcc	r6, r0
   3344c:	cmp	r7, r8
   33450:	bne	33434 <WriteType+0x8bc>
   33454:	ldr	r3, [r5, #40]	; 0x28
   33458:	add	r0, r6, #1
   3345c:	mul	r2, r0, r7
   33460:	str	r3, [sp]
   33464:	mov	r3, #0
   33468:	str	r0, [sp, #20]
   3346c:	and	r6, r2, #7
   33470:	mov	r1, r0
   33474:	cmp	r6, #0
   33478:	add	r0, r0, #1
   3347c:	add	r2, r2, r7
   33480:	bne	33790 <WriteType+0xc18>
   33484:	cmp	r3, #0
   33488:	ldr	r3, [pc, #1888]	; 33bf0 <WriteType+0x1078>
   3348c:	mov	r2, #1
   33490:	add	r0, sp, #28
   33494:	add	r8, sp, #8
   33498:	strne	r1, [sp, #20]
   3349c:	mov	r1, #4
   334a0:	str	r3, [sp, #28]
   334a4:	mov	r3, r9
   334a8:	bl	1514 <fwrite@plt>
   334ac:	mov	r2, #1
   334b0:	mov	r1, #4
   334b4:	ldr	r3, [r4]
   334b8:	add	r0, sp, #20
   334bc:	bl	1514 <fwrite@plt>
   334c0:	mov	r2, #1
   334c4:	mov	r1, #2
   334c8:	ldr	r3, [r4]
   334cc:	add	r0, sp, #10
   334d0:	bl	1514 <fwrite@plt>
   334d4:	mov	r2, #1
   334d8:	mov	r0, r8
   334dc:	ldr	r3, [r4]
   334e0:	mov	r1, r2
   334e4:	bl	1514 <fwrite@plt>
   334e8:	mov	r2, #1
   334ec:	mov	r0, r8
   334f0:	ldr	r3, [r4]
   334f4:	mov	r1, r2
   334f8:	mov	r8, #0
   334fc:	bl	1514 <fwrite@plt>
   33500:	ldr	r3, [sp, #20]
   33504:	mov	r2, #1
   33508:	mov	r1, #4
   3350c:	add	r0, sp, #12
   33510:	mul	r3, r7, r3
   33514:	str	r3, [sp, #12]
   33518:	ldr	r3, [r4]
   3351c:	bl	1514 <fwrite@plt>
   33520:	mov	r1, #1
   33524:	ldr	r0, [sp, #20]
   33528:	bl	140c <calloc@plt>
   3352c:	mov	r9, r0
   33530:	ldr	r3, [r5, #52]	; 0x34
   33534:	ldr	r3, [r3, #8]
   33538:	ldr	fp, [r3, r8, lsl #2]
   3353c:	add	r8, r8, #1
   33540:	mov	r0, fp
   33544:	bl	15c8 <strlen@plt>
   33548:	mov	r2, r0
   3354c:	mov	sl, r0
   33550:	ldr	r3, [r4]
   33554:	mov	r1, #1
   33558:	mov	r0, fp
   3355c:	bl	1514 <fwrite@plt>
   33560:	ldr	r2, [sp, #20]
   33564:	mov	r1, #1
   33568:	mov	r0, r9
   3356c:	ldr	r3, [r4]
   33570:	sub	r2, r2, sl
   33574:	bl	1514 <fwrite@plt>
   33578:	cmp	r7, r8
   3357c:	bne	33530 <WriteType+0x9b8>
   33580:	mov	r0, r9
   33584:	add	r9, sp, #92	; 0x5c
   33588:	bl	1478 <free@plt>
   3358c:	mov	r2, r7
   33590:	add	r0, sp, #24
   33594:	ldr	r1, [sp, #16]
   33598:	bl	3a8c4 <SafeMul>
   3359c:	ldr	r3, [pc, #1616]	; 33bf4 <WriteType+0x107c>
   335a0:	add	r3, pc, r3
   335a4:	str	r3, [sp, #4]
   335a8:	ldr	r3, [sp, #24]
   335ac:	cmp	r3, r6
   335b0:	bls	32c54 <WriteType+0xdc>
   335b4:	ldr	r3, [sp]
   335b8:	mov	r7, #1
   335bc:	mov	r8, #6
   335c0:	mov	r1, #5
   335c4:	mov	r2, #8
   335c8:	mov	r0, #14
   335cc:	ldr	r5, [r3, r6, lsl #2]
   335d0:	mov	r3, #0
   335d4:	str	r7, [sp, #32]
   335d8:	str	r8, [sp, #36]	; 0x24
   335dc:	str	r1, [sp, #40]	; 0x28
   335e0:	strd	r2, [sp, #44]	; 0x2c
   335e4:	cmp	r5, #0
   335e8:	str	r0, [sp, #52]	; 0x34
   335ec:	str	r3, [sp, #56]	; 0x38
   335f0:	ldr	r3, [r4]
   335f4:	bne	3381c <WriteType+0xca4>
   335f8:	add	sl, sp, #84	; 0x54
   335fc:	strb	r5, [sp, #9]
   33600:	str	r0, [sp, #68]	; 0x44
   33604:	add	r0, sp, #68	; 0x44
   33608:	str	r1, [sp, #76]	; 0x4c
   3360c:	mov	r1, #4
   33610:	str	r2, [sp, #80]	; 0x50
   33614:	mov	r2, r7
   33618:	str	r7, [sp, #64]	; 0x40
   3361c:	str	r8, [sp, #72]	; 0x48
   33620:	str	r5, [sp, #84]	; 0x54
   33624:	bl	1514 <fwrite@plt>
   33628:	mov	r2, r7
   3362c:	mov	r1, #4
   33630:	ldr	r3, [r4]
   33634:	mov	r0, sl
   33638:	add	r7, sp, #60	; 0x3c
   3363c:	bl	1514 <fwrite@plt>
   33640:	ldr	r0, [r4]
   33644:	bl	14b4 <ftell@plt>
   33648:	ldr	r3, [r4, #20]
   3364c:	mov	r5, r0
   33650:	str	r8, [sp, #60]	; 0x3c
   33654:	cmp	r3, #0
   33658:	beq	33668 <WriteType+0xaf0>
   3365c:	mov	r0, r7
   33660:	bl	189c <Mat_int32Swap>
   33664:	str	r0, [sp, #60]	; 0x3c
   33668:	mov	r2, #1
   3366c:	mov	r1, #4
   33670:	ldr	r3, [r4]
   33674:	add	r0, sp, #72	; 0x48
   33678:	add	r8, sp, #88	; 0x58
   3367c:	bl	1514 <fwrite@plt>
   33680:	mov	r2, #1
   33684:	mov	r1, #4
   33688:	ldr	r3, [r4]
   3368c:	add	r0, sp, #80	; 0x50
   33690:	bl	1514 <fwrite@plt>
   33694:	mov	r2, #1
   33698:	mov	r1, #4
   3369c:	ldr	r3, [r4]
   336a0:	mov	r0, r7
   336a4:	mov	r7, #0
   336a8:	bl	1514 <fwrite@plt>
   336ac:	mov	r2, #1
   336b0:	mov	r1, #4
   336b4:	ldr	r3, [r4]
   336b8:	mov	r0, sl
   336bc:	bl	1514 <fwrite@plt>
   336c0:	mov	r3, #8
   336c4:	mov	r2, #1
   336c8:	mov	r1, #4
   336cc:	add	r0, sp, #76	; 0x4c
   336d0:	str	r3, [sp, #88]	; 0x58
   336d4:	ldr	r3, [r4]
   336d8:	bl	1514 <fwrite@plt>
   336dc:	mov	r2, #1
   336e0:	mov	r1, #4
   336e4:	ldr	r3, [r4]
   336e8:	mov	r0, r8
   336ec:	bl	1514 <fwrite@plt>
   336f0:	mov	r2, #1
   336f4:	mov	r1, #4
   336f8:	ldr	r3, [r4]
   336fc:	mov	r0, r9
   33700:	str	r7, [sp, #92]	; 0x5c
   33704:	bl	1514 <fwrite@plt>
   33708:	mov	r2, #1
   3370c:	mov	r1, #4
   33710:	ldr	r3, [r4]
   33714:	mov	r0, r9
   33718:	str	r7, [sp, #92]	; 0x5c
   3371c:	bl	1514 <fwrite@plt>
   33720:	mov	r2, #1
   33724:	mov	r1, #4
   33728:	ldr	r3, [r4]
   3372c:	add	r0, sp, #64	; 0x40
   33730:	bl	1514 <fwrite@plt>
   33734:	mov	r2, #1
   33738:	mov	r1, #4
   3373c:	ldr	r3, [r4]
   33740:	mov	r0, sl
   33744:	bl	1514 <fwrite@plt>
   33748:	mov	r2, r7
   3374c:	mov	r1, r7
   33750:	mov	r3, #9
   33754:	mov	r0, r4
   33758:	bl	1bc30 <WriteData>
   3375c:	ands	r7, r0, #7
   33760:	str	r0, [sp, #88]	; 0x58
   33764:	bne	33798 <WriteType+0xc20>
   33768:	ldr	r0, [r4]
   3376c:	bl	14b4 <ftell@plt>
   33770:	cmn	r0, #1
   33774:	cmnne	r5, #1
   33778:	mov	r7, r0
   3377c:	bne	337cc <WriteType+0xc54>
   33780:	ldr	r0, [pc, #1136]	; 33bf8 <WriteType+0x1080>
   33784:	add	r0, pc, r0
   33788:	bl	161c <Mat_Critical@plt>
   3378c:	b	33814 <WriteType+0xc9c>
   33790:	mov	r3, #1
   33794:	b	3346c <WriteType+0x8f4>
   33798:	rsbs	r0, r0, #0
   3379c:	add	sl, sp, #9
   337a0:	and	r0, r0, #7
   337a4:	rsbpl	r7, r0, #0
   337a8:	mov	r2, #1
   337ac:	mov	r0, sl
   337b0:	ldr	r3, [r4]
   337b4:	mov	r1, r2
   337b8:	add	r7, r7, #1
   337bc:	bl	1514 <fwrite@plt>
   337c0:	cmp	r7, #8
   337c4:	bne	337a8 <WriteType+0xc30>
   337c8:	b	33768 <WriteType+0xbf0>
   337cc:	sub	r1, r0, r5
   337d0:	mov	r2, #1
   337d4:	ldr	r0, [r4]
   337d8:	str	r1, [sp, #88]	; 0x58
   337dc:	rsb	r1, r1, #-16777216	; 0xff000000
   337e0:	add	r1, r1, #16711680	; 0xff0000
   337e4:	add	r1, r1, #65280	; 0xff00
   337e8:	add	r1, r1, #252	; 0xfc
   337ec:	bl	1694 <fseek@plt>
   337f0:	mov	r2, #1
   337f4:	mov	r1, #4
   337f8:	ldr	r3, [r4]
   337fc:	mov	r0, r8
   33800:	bl	1514 <fwrite@plt>
   33804:	mov	r2, #0
   33808:	mov	r1, r7
   3380c:	ldr	r0, [r4]
   33810:	bl	1694 <fseek@plt>
   33814:	add	r6, r6, #1
   33818:	b	335a8 <WriteType+0xa30>
   3381c:	mov	r2, r7
   33820:	mov	r1, #4
   33824:	add	r0, sp, #52	; 0x34
   33828:	add	sl, sp, #48	; 0x30
   3382c:	bl	1514 <fwrite@plt>
   33830:	mov	r2, r7
   33834:	mov	r1, #4
   33838:	ldr	r3, [r4]
   3383c:	mov	r0, sl
   33840:	bl	1514 <fwrite@plt>
   33844:	ldr	r3, [r5, #16]
   33848:	cmp	r3, #0
   3384c:	beq	33814 <WriteType+0xc9c>
   33850:	ldr	r0, [r4]
   33854:	add	r8, sp, #84	; 0x54
   33858:	bl	14b4 <ftell@plt>
   3385c:	ldr	r2, [r5, #16]
   33860:	mov	r7, r0
   33864:	uxtb	r3, r2
   33868:	str	r3, [sp, #84]	; 0x54
   3386c:	ldr	r1, [r5, #20]
   33870:	cmp	r1, #0
   33874:	orrne	r3, r3, #2048	; 0x800
   33878:	strne	r3, [sp, #84]	; 0x54
   3387c:	ldr	r3, [r5, #24]
   33880:	cmp	r3, #0
   33884:	ldrne	r3, [sp, #84]	; 0x54
   33888:	orrne	r3, r3, #1024	; 0x400
   3388c:	strne	r3, [sp, #84]	; 0x54
   33890:	ldr	r3, [r5, #28]
   33894:	cmp	r3, #0
   33898:	ldrne	r3, [sp, #84]	; 0x54
   3389c:	orrne	r3, r3, #512	; 0x200
   338a0:	strne	r3, [sp, #84]	; 0x54
   338a4:	cmp	r2, #5
   338a8:	ldreq	r3, [r5, #40]	; 0x28
   338ac:	ldreq	r3, [r3]
   338b0:	streq	r3, [sp, #56]	; 0x38
   338b4:	ldr	r3, [r4, #20]
   338b8:	cmp	r3, #0
   338bc:	beq	338cc <WriteType+0xd54>
   338c0:	mov	r0, r8
   338c4:	bl	189c <Mat_int32Swap>
   338c8:	str	r0, [sp, #84]	; 0x54
   338cc:	mov	r2, #1
   338d0:	mov	r1, #4
   338d4:	ldr	r3, [r4]
   338d8:	add	r0, sp, #36	; 0x24
   338dc:	add	fp, sp, #88	; 0x58
   338e0:	bl	1514 <fwrite@plt>
   338e4:	mov	r2, #1
   338e8:	mov	r1, #4
   338ec:	ldr	r3, [r4]
   338f0:	add	r0, sp, #44	; 0x2c
   338f4:	bl	1514 <fwrite@plt>
   338f8:	mov	r2, #1
   338fc:	mov	r1, #4
   33900:	ldr	r3, [r4]
   33904:	mov	r0, r8
   33908:	mov	r8, #0
   3390c:	bl	1514 <fwrite@plt>
   33910:	mov	r2, #1
   33914:	mov	r1, #4
   33918:	ldr	r3, [r4]
   3391c:	add	r0, sp, #56	; 0x38
   33920:	bl	1514 <fwrite@plt>
   33924:	ldr	r3, [r5, #4]
   33928:	mov	r2, #1
   3392c:	mov	r1, #4
   33930:	add	r0, sp, #40	; 0x28
   33934:	lsl	r3, r3, #2
   33938:	str	r3, [sp, #88]	; 0x58
   3393c:	ldr	r3, [r4]
   33940:	bl	1514 <fwrite@plt>
   33944:	mov	r2, #1
   33948:	mov	r1, #4
   3394c:	ldr	r3, [r4]
   33950:	mov	r0, fp
   33954:	bl	1514 <fwrite@plt>
   33958:	ldr	r2, [r5, #4]
   3395c:	ldr	r3, [r4]
   33960:	cmp	r8, r2
   33964:	blt	33a10 <WriteType+0xe98>
   33968:	tst	r2, #1
   3396c:	beq	33980 <WriteType+0xe08>
   33970:	mov	r2, #1
   33974:	mov	r1, #4
   33978:	mov	r0, sl
   3397c:	bl	1514 <fwrite@plt>
   33980:	mov	r2, #1
   33984:	mov	r1, #4
   33988:	ldr	r3, [r4]
   3398c:	add	r0, sp, #32
   33990:	bl	1514 <fwrite@plt>
   33994:	mov	r2, #1
   33998:	mov	r1, #4
   3399c:	ldr	r3, [r4]
   339a0:	mov	r0, sl
   339a4:	bl	1514 <fwrite@plt>
   339a8:	mov	r1, r5
   339ac:	mov	r0, r4
   339b0:	bl	32b78 <WriteType>
   339b4:	ldr	r0, [r4]
   339b8:	bl	14b4 <ftell@plt>
   339bc:	cmn	r0, #1
   339c0:	cmnne	r7, #1
   339c4:	mov	r5, r0
   339c8:	beq	33a34 <WriteType+0xebc>
   339cc:	sub	r1, r0, r7
   339d0:	mov	r2, #1
   339d4:	ldr	r0, [r4]
   339d8:	str	r1, [sp, #88]	; 0x58
   339dc:	rsb	r1, r1, #-16777216	; 0xff000000
   339e0:	add	r1, r1, #16711680	; 0xff0000
   339e4:	add	r1, r1, #65280	; 0xff00
   339e8:	add	r1, r1, #252	; 0xfc
   339ec:	bl	1694 <fseek@plt>
   339f0:	mov	r2, #1
   339f4:	mov	r1, #4
   339f8:	ldr	r3, [r4]
   339fc:	mov	r0, fp
   33a00:	bl	1514 <fwrite@plt>
   33a04:	mov	r2, #0
   33a08:	mov	r1, r5
   33a0c:	b	3380c <WriteType+0xc94>
   33a10:	ldr	r2, [r5, #32]
   33a14:	mov	r1, #4
   33a18:	mov	r0, r9
   33a1c:	ldr	r2, [r2, r8, lsl #2]
   33a20:	add	r8, r8, #1
   33a24:	str	r2, [sp, #92]	; 0x5c
   33a28:	mov	r2, #1
   33a2c:	bl	1514 <fwrite@plt>
   33a30:	b	33958 <WriteType+0xde0>
   33a34:	ldr	r0, [sp, #4]
   33a38:	b	33788 <WriteType+0xc10>
   33a3c:	ldr	r6, [r5, #40]	; 0x28
   33a40:	mov	r3, #5
   33a44:	mov	r0, r4
   33a48:	ldmib	r6, {r1, r2}
   33a4c:	bl	1bc30 <WriteData>
   33a50:	ands	r7, r0, #7
   33a54:	str	r0, [sp, #12]
   33a58:	bne	33ae0 <WriteType+0xf68>
   33a5c:	mov	r3, #5
   33a60:	mov	r0, r4
   33a64:	ldr	r1, [r6, #12]
   33a68:	ldr	r2, [r6, #16]
   33a6c:	bl	1bc30 <WriteData>
   33a70:	ands	r7, r0, #7
   33a74:	str	r0, [sp, #12]
   33a78:	bne	33b14 <WriteType+0xf9c>
   33a7c:	ldr	r3, [r5, #8]
   33a80:	ldr	r1, [r5, #20]
   33a84:	ldr	r2, [r6, #20]
   33a88:	ldr	r8, [r6, #24]
   33a8c:	cmp	r1, #0
   33a90:	bne	33b48 <WriteType+0xfd0>
   33a94:	mov	r1, r8
   33a98:	mov	r0, r4
   33a9c:	bl	1bc30 <WriteData>
   33aa0:	ands	r5, r0, #7
   33aa4:	str	r0, [sp, #12]
   33aa8:	beq	32c54 <WriteType+0xdc>
   33aac:	rsbs	r0, r0, #0
   33ab0:	add	r6, sp, #8
   33ab4:	and	r0, r0, #7
   33ab8:	rsbpl	r5, r0, #0
   33abc:	mov	r2, #1
   33ac0:	mov	r0, r6
   33ac4:	ldr	r3, [r4]
   33ac8:	mov	r1, r2
   33acc:	add	r5, r5, #1
   33ad0:	bl	1514 <fwrite@plt>
   33ad4:	cmp	r5, #8
   33ad8:	bne	33abc <WriteType+0xf44>
   33adc:	b	32c54 <WriteType+0xdc>
   33ae0:	rsbs	r0, r0, #0
   33ae4:	add	r8, sp, #8
   33ae8:	and	r0, r0, #7
   33aec:	rsbpl	r7, r0, #0
   33af0:	mov	r2, #1
   33af4:	mov	r0, r8
   33af8:	ldr	r3, [r4]
   33afc:	mov	r1, r2
   33b00:	add	r7, r7, #1
   33b04:	bl	1514 <fwrite@plt>
   33b08:	cmp	r7, #8
   33b0c:	bne	33af0 <WriteType+0xf78>
   33b10:	b	33a5c <WriteType+0xee4>
   33b14:	rsbs	r0, r0, #0
   33b18:	add	r8, sp, #8
   33b1c:	and	r0, r0, #7
   33b20:	rsbpl	r7, r0, #0
   33b24:	mov	r2, #1
   33b28:	mov	r0, r8
   33b2c:	ldr	r3, [r4]
   33b30:	mov	r1, r2
   33b34:	add	r7, r7, #1
   33b38:	bl	1514 <fwrite@plt>
   33b3c:	cmp	r7, #8
   33b40:	bne	33b24 <WriteType+0xfac>
   33b44:	b	33a7c <WriteType+0xf04>
   33b48:	mov	r0, r4
   33b4c:	ldr	r1, [r8]
   33b50:	bl	1bc30 <WriteData>
   33b54:	ands	r7, r0, #7
   33b58:	str	r0, [sp, #12]
   33b5c:	bne	33bb4 <WriteType+0x103c>
   33b60:	mov	r0, r4
   33b64:	ldr	r1, [r8, #4]
   33b68:	ldr	r3, [r5, #8]
   33b6c:	ldr	r2, [r6, #20]
   33b70:	bl	1bc30 <WriteData>
   33b74:	ands	r5, r0, #7
   33b78:	str	r0, [sp, #12]
   33b7c:	beq	32c54 <WriteType+0xdc>
   33b80:	rsbs	r0, r0, #0
   33b84:	add	r6, sp, #8
   33b88:	and	r0, r0, #7
   33b8c:	rsbpl	r5, r0, #0
   33b90:	mov	r2, #1
   33b94:	mov	r0, r6
   33b98:	ldr	r3, [r4]
   33b9c:	mov	r1, r2
   33ba0:	add	r5, r5, #1
   33ba4:	bl	1514 <fwrite@plt>
   33ba8:	cmp	r5, #8
   33bac:	bne	33b90 <WriteType+0x1018>
   33bb0:	b	32c54 <WriteType+0xdc>
   33bb4:	rsbs	r0, r0, #0
   33bb8:	add	r9, sp, #8
   33bbc:	and	r0, r0, #7
   33bc0:	rsbpl	r7, r0, #0
   33bc4:	mov	r2, #1
   33bc8:	mov	r0, r9
   33bcc:	ldr	r3, [r4]
   33bd0:	mov	r1, r2
   33bd4:	add	r7, r7, #1
   33bd8:	bl	1514 <fwrite@plt>
   33bdc:	cmp	r7, #8
   33be0:	bne	33bc4 <WriteType+0x104c>
   33be4:	b	33b60 <WriteType+0xfe8>
   33be8:	.word	0x0001d5b4
   33bec:	.word	0x0000bc55
   33bf0:	.word	0x00040005
   33bf4:	.word	0x0000b645
   33bf8:	.word	0x0000b461

00033bfc <WriteCompressedType>:
   33bfc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   33c00:	sub	sp, sp, #10240	; 0x2800
   33c04:	mov	r8, r1
   33c08:	sub	sp, sp, #36	; 0x24
   33c0c:	mov	r6, r0
   33c10:	add	r7, sp, #2080	; 0x820
   33c14:	mov	r4, r2
   33c18:	mov	r1, #0
   33c1c:	mov	r2, #2048	; 0x800
   33c20:	mov	r0, r7
   33c24:	bl	15f8 <memset@plt>
   33c28:	mov	r3, #1
   33c2c:	str	r3, [r7, #-2056]	; 0xfffff7f8
   33c30:	ldr	r3, [r8, #16]
   33c34:	cmp	r3, #0
   33c38:	bne	33c44 <WriteCompressedType+0x48>
   33c3c:	mov	r5, #0
   33c40:	b	33d18 <WriteCompressedType+0x11c>
   33c44:	add	sl, sp, #32
   33c48:	mov	r0, r8
   33c4c:	sub	r1, sl, #8
   33c50:	bl	3a864 <SafeMulDims>
   33c54:	ldr	r3, [r8, #16]
   33c58:	sub	r3, r3, #1
   33c5c:	cmp	r3, #14
   33c60:	addls	pc, pc, r3, lsl #2
   33c64:	b	33c3c <WriteCompressedType+0x40>
   33c68:	b	33f24 <WriteCompressedType+0x328>
   33c6c:	b	3403c <WriteCompressedType+0x440>
   33c70:	b	33c3c <WriteCompressedType+0x40>
   33c74:	b	33d28 <WriteCompressedType+0x12c>
   33c78:	b	344e4 <WriteCompressedType+0x8e8>
   33c7c:	b	33ca4 <WriteCompressedType+0xa8>
   33c80:	b	33ca4 <WriteCompressedType+0xa8>
   33c84:	b	33ca4 <WriteCompressedType+0xa8>
   33c88:	b	33ca4 <WriteCompressedType+0xa8>
   33c8c:	b	33ca4 <WriteCompressedType+0xa8>
   33c90:	b	33ca4 <WriteCompressedType+0xa8>
   33c94:	b	33ca4 <WriteCompressedType+0xa8>
   33c98:	b	33ca4 <WriteCompressedType+0xa8>
   33c9c:	b	33ca4 <WriteCompressedType+0xa8>
   33ca0:	b	33ca4 <WriteCompressedType+0xa8>
   33ca4:	ldr	r3, [r7, #-2056]	; 0xfffff7f8
   33ca8:	ldr	r1, [r8, #20]
   33cac:	ldr	r2, [r8, #8]
   33cb0:	ldr	r9, [r8, #40]	; 0x28
   33cb4:	cmp	r1, #0
   33cb8:	beq	33d00 <WriteCompressedType+0x104>
   33cbc:	cmp	r9, #0
   33cc0:	ldreq	r9, [pc, #2236]	; 34584 <WriteCompressedType+0x988>
   33cc4:	addeq	r9, pc, r9
   33cc8:	mov	r1, r4
   33ccc:	mov	r0, r6
   33cd0:	str	r2, [sp]
   33cd4:	ldr	r2, [r9]
   33cd8:	bl	32644 <WriteCompressedData>
   33cdc:	ldr	r3, [r8, #8]
   33ce0:	mov	r5, r0
   33ce4:	str	r3, [sp]
   33ce8:	ldr	r3, [r7, #-2056]	; 0xfffff7f8
   33cec:	ldr	r2, [r9, #4]
   33cf0:	mov	r1, r4
   33cf4:	mov	r0, r6
   33cf8:	bl	32644 <WriteCompressedData>
   33cfc:	b	3456c <WriteCompressedType+0x970>
   33d00:	mov	r1, r4
   33d04:	mov	r0, r6
   33d08:	str	r2, [sp]
   33d0c:	mov	r2, r9
   33d10:	bl	32644 <WriteCompressedData>
   33d14:	mov	r5, r0
   33d18:	mov	r0, r5
   33d1c:	add	sp, sp, #10240	; 0x2800
   33d20:	add	sp, sp, #36	; 0x24
   33d24:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   33d28:	ldr	sl, [r7, #-2056]	; 0xfffff7f8
   33d2c:	mov	r2, #0
   33d30:	mov	r3, #0
   33d34:	cmp	r6, #0
   33d38:	ldr	r7, [r8, #8]
   33d3c:	ldr	fp, [r8, #40]	; 0x28
   33d40:	add	r8, sp, #6144	; 0x1800
   33d44:	add	r8, r8, #32
   33d48:	strd	r2, [r8]
   33d4c:	beq	33c3c <WriteCompressedType+0x40>
   33d50:	ldr	r5, [r6]
   33d54:	cmp	r5, #0
   33d58:	beq	33d18 <WriteCompressedType+0x11c>
   33d5c:	cmp	r7, #17
   33d60:	bhi	33c3c <WriteCompressedType+0x40>
   33d64:	ldr	r5, [pc, #2076]	; 34588 <WriteCompressedType+0x98c>
   33d68:	mov	r0, #1
   33d6c:	ands	r5, r5, r0, lsl r7
   33d70:	bne	33df0 <WriteCompressedType+0x1f4>
   33d74:	cmp	r7, #0
   33d78:	bne	33d18 <WriteCompressedType+0x11c>
   33d7c:	mov	r3, #4
   33d80:	lsl	sl, sl, #1
   33d84:	mov	r5, r7
   33d88:	add	r7, sp, #8192	; 0x2000
   33d8c:	str	r3, [r8, #-2048]	; 0xfffff800
   33d90:	add	r3, sp, #4096	; 0x1000
   33d94:	add	r7, r7, #32
   33d98:	add	r3, r3, #32
   33d9c:	str	sl, [r8, #-2044]	; 0xfffff804
   33da0:	mov	r8, #1024	; 0x400
   33da4:	str	r3, [r4]
   33da8:	mov	r3, #8
   33dac:	str	r3, [r4, #4]
   33db0:	mov	r1, #0
   33db4:	mov	r0, r4
   33db8:	str	r7, [r4, #12]
   33dbc:	str	r8, [r4, #16]
   33dc0:	bl	14fc <deflate@plt>
   33dc4:	ldr	r2, [r4, #16]
   33dc8:	mov	r1, #1
   33dcc:	mov	r0, r7
   33dd0:	ldr	r3, [r6]
   33dd4:	rsb	r2, r2, #1024	; 0x400
   33dd8:	bl	1514 <fwrite@plt>
   33ddc:	ldr	r3, [r4, #16]
   33de0:	add	r5, r5, r0
   33de4:	cmp	r3, #0
   33de8:	beq	33db0 <WriteCompressedType+0x1b4>
   33dec:	b	33d18 <WriteCompressedType+0x11c>
   33df0:	mov	r0, r7
   33df4:	add	r9, sp, #8192	; 0x2000
   33df8:	bl	1598 <Mat_SizeOf@plt>
   33dfc:	cmp	r7, #2
   33e00:	add	r3, sp, #4096	; 0x1000
   33e04:	moveq	r7, #16
   33e08:	add	r3, r3, #32
   33e0c:	mov	r5, #0
   33e10:	add	r9, r9, #32
   33e14:	str	r7, [r8, #-2048]	; 0xfffff800
   33e18:	mul	r7, r0, sl
   33e1c:	str	r3, [r4]
   33e20:	mov	r3, #8
   33e24:	str	r7, [r8, #-2044]	; 0xfffff804
   33e28:	str	r3, [r4, #4]
   33e2c:	mov	r3, #1024	; 0x400
   33e30:	mov	r1, #0
   33e34:	str	r9, [r4, #12]
   33e38:	mov	r0, r4
   33e3c:	str	r3, [r4, #16]
   33e40:	bl	14fc <deflate@plt>
   33e44:	ldr	r2, [r4, #16]
   33e48:	mov	r1, #1
   33e4c:	mov	r0, r9
   33e50:	ldr	r3, [r6]
   33e54:	rsb	r2, r2, #1024	; 0x400
   33e58:	bl	1514 <fwrite@plt>
   33e5c:	ldr	r3, [r4, #16]
   33e60:	add	r5, r5, r0
   33e64:	cmp	r3, #0
   33e68:	beq	33e2c <WriteCompressedType+0x230>
   33e6c:	cmp	fp, #0
   33e70:	cmpne	sl, #0
   33e74:	ble	33d18 <WriteCompressedType+0x11c>
   33e78:	mov	sl, #1024	; 0x400
   33e7c:	str	fp, [r4]
   33e80:	str	r7, [r4, #4]
   33e84:	mov	r1, #0
   33e88:	mov	r0, r4
   33e8c:	str	r9, [r4, #12]
   33e90:	str	sl, [r4, #16]
   33e94:	bl	14fc <deflate@plt>
   33e98:	ldr	r2, [r4, #16]
   33e9c:	mov	r1, #1
   33ea0:	mov	r0, r9
   33ea4:	ldr	r3, [r6]
   33ea8:	rsb	r2, r2, #1024	; 0x400
   33eac:	bl	1514 <fwrite@plt>
   33eb0:	ldr	r3, [r4, #16]
   33eb4:	add	r5, r5, r0
   33eb8:	cmp	r3, #0
   33ebc:	beq	33e84 <WriteCompressedType+0x288>
   33ec0:	ands	r3, r7, #7
   33ec4:	beq	33d18 <WriteCompressedType+0x11c>
   33ec8:	rsbs	r7, r7, #0
   33ecc:	str	r8, [r4]
   33ed0:	and	r7, r7, #7
   33ed4:	rsbpl	r3, r7, #0
   33ed8:	mov	r7, #1024	; 0x400
   33edc:	rsb	r3, r3, #8
   33ee0:	str	r3, [r4, #4]
   33ee4:	mov	r1, #0
   33ee8:	mov	r0, r4
   33eec:	str	r9, [r4, #12]
   33ef0:	str	r7, [r4, #16]
   33ef4:	bl	14fc <deflate@plt>
   33ef8:	ldr	r2, [r4, #16]
   33efc:	mov	r1, #1
   33f00:	mov	r0, r9
   33f04:	ldr	r3, [r6]
   33f08:	rsb	r2, r2, #1024	; 0x400
   33f0c:	bl	1514 <fwrite@plt>
   33f10:	ldr	r3, [r4, #16]
   33f14:	add	r5, r5, r0
   33f18:	cmp	r3, #0
   33f1c:	beq	33ee4 <WriteCompressedType+0x2e8>
   33f20:	b	33d18 <WriteCompressedType+0x11c>
   33f24:	ldr	r3, [r8]
   33f28:	cmp	r3, #0
   33f2c:	beq	33c3c <WriteCompressedType+0x40>
   33f30:	ldr	r2, [r8, #12]
   33f34:	ldr	r9, [r8, #40]	; 0x28
   33f38:	clz	r5, r2
   33f3c:	lsr	r5, r5, #5
   33f40:	cmp	r9, #0
   33f44:	moveq	r5, #1
   33f48:	cmp	r5, #0
   33f4c:	bne	33c3c <WriteCompressedType+0x40>
   33f50:	udiv	r3, r3, r2
   33f54:	add	sl, sp, #8192	; 0x2000
   33f58:	add	sl, sl, #32
   33f5c:	str	r3, [r7, #-2056]	; 0xfffff7f8
   33f60:	ldr	r3, [r7, #-2056]	; 0xfffff7f8
   33f64:	cmp	r3, r5
   33f68:	bls	33c3c <WriteCompressedType+0x40>
   33f6c:	ldr	r8, [r9, r5, lsl #2]
   33f70:	mov	r2, #2048	; 0x800
   33f74:	mov	r1, #0
   33f78:	mov	r0, sl
   33f7c:	bl	15f8 <memset@plt>
   33f80:	cmp	r6, #0
   33f84:	clz	r3, r4
   33f88:	lsr	r3, r3, #5
   33f8c:	moveq	r3, #1
   33f90:	cmp	r8, #0
   33f94:	moveq	r3, #1
   33f98:	cmp	r3, #0
   33f9c:	bne	34034 <WriteCompressedType+0x438>
   33fa0:	add	r2, sp, #8192	; 0x2000
   33fa4:	mov	r3, #14
   33fa8:	add	r2, r2, #32
   33fac:	str	r3, [r2]
   33fb0:	ldr	r3, [r8, #16]
   33fb4:	cmp	r3, #0
   33fb8:	beq	33fd4 <WriteCompressedType+0x3d8>
   33fbc:	mov	r0, r8
   33fc0:	bl	327b8 <GetTypeBufSize>
   33fc4:	add	r3, sp, #8192	; 0x2000
   33fc8:	add	r0, r0, #24
   33fcc:	add	r3, r3, #36	; 0x24
   33fd0:	str	r0, [r3]
   33fd4:	add	fp, sp, #6144	; 0x1800
   33fd8:	mov	r3, #8
   33fdc:	str	sl, [r4]
   33fe0:	add	fp, fp, #32
   33fe4:	str	r3, [r4, #4]
   33fe8:	mov	r3, #2048	; 0x800
   33fec:	mov	r1, #0
   33ff0:	str	fp, [r4, #12]
   33ff4:	mov	r0, r4
   33ff8:	str	r3, [r4, #16]
   33ffc:	bl	14fc <deflate@plt>
   34000:	ldr	r2, [r4, #16]
   34004:	mov	r1, #1
   34008:	mov	r0, fp
   3400c:	ldr	r3, [r6]
   34010:	rsb	r2, r2, #2048	; 0x800
   34014:	bl	1514 <fwrite@plt>
   34018:	ldr	r3, [r4, #16]
   3401c:	cmp	r3, #0
   34020:	beq	33fe8 <WriteCompressedType+0x3ec>
   34024:	mov	r2, r4
   34028:	mov	r1, r8
   3402c:	mov	r0, r6
   34030:	bl	34590 <WriteCompressedTypeArrayFlags>
   34034:	add	r5, r5, #1
   34038:	b	33f60 <WriteCompressedType+0x364>
   3403c:	ldr	r3, [r8, #52]	; 0x34
   34040:	ldr	r5, [r3, #4]
   34044:	cmp	r5, #0
   34048:	bne	340b4 <WriteCompressedType+0x4b8>
   3404c:	ldr	r3, [pc, #1336]	; 3458c <WriteCompressedType+0x990>
   34050:	str	r7, [r4]
   34054:	str	r3, [r7]
   34058:	mov	r3, #1
   3405c:	str	r3, [r7, #4]
   34060:	str	r3, [r7, #8]
   34064:	mov	r3, #16
   34068:	str	r5, [r7, #12]
   3406c:	mov	r7, #2048	; 0x800
   34070:	str	r3, [r4, #4]
   34074:	mov	r1, #0
   34078:	mov	r0, r4
   3407c:	str	sl, [r4, #12]
   34080:	str	r7, [r4, #16]
   34084:	bl	14fc <deflate@plt>
   34088:	ldr	r2, [r4, #16]
   3408c:	mov	r1, #1
   34090:	mov	r0, sl
   34094:	ldr	r3, [r6]
   34098:	rsb	r2, r2, #2048	; 0x800
   3409c:	bl	1514 <fwrite@plt>
   340a0:	ldr	r3, [r4, #16]
   340a4:	add	r5, r5, r0
   340a8:	cmp	r3, #0
   340ac:	beq	34074 <WriteCompressedType+0x478>
   340b0:	b	33d18 <WriteCompressedType+0x11c>
   340b4:	mov	fp, #0
   340b8:	mov	r9, fp
   340bc:	ldr	r2, [r3, #8]
   340c0:	str	r3, [sp, #8]
   340c4:	ldr	r0, [r2, fp, lsl #2]
   340c8:	add	fp, fp, #1
   340cc:	bl	15c8 <strlen@plt>
   340d0:	cmp	r9, r0
   340d4:	ldr	r3, [sp, #8]
   340d8:	movcc	r9, r0
   340dc:	cmp	r5, fp
   340e0:	bne	340bc <WriteCompressedType+0x4c0>
   340e4:	add	r9, r9, #1
   340e8:	mul	r3, r9, r5
   340ec:	ands	fp, r3, #7
   340f0:	add	r1, r5, r3
   340f4:	bne	34448 <WriteCompressedType+0x84c>
   340f8:	ldr	r1, [pc, #1164]	; 3458c <WriteCompressedType+0x990>
   340fc:	mov	r0, r9
   34100:	ldr	r2, [r8, #40]	; 0x28
   34104:	stm	r7, {r1, r9}
   34108:	mov	r1, #1
   3410c:	str	r3, [r7, #12]
   34110:	str	r1, [r7, #8]
   34114:	str	r2, [sp, #16]
   34118:	bl	140c <calloc@plt>
   3411c:	mov	r3, #16
   34120:	str	r7, [r4]
   34124:	mov	r7, #2048	; 0x800
   34128:	str	r0, [sp, #8]
   3412c:	str	r3, [r4, #4]
   34130:	mov	r1, #0
   34134:	mov	r0, r4
   34138:	str	sl, [r4, #12]
   3413c:	str	r7, [r4, #16]
   34140:	bl	14fc <deflate@plt>
   34144:	ldr	r2, [r4, #16]
   34148:	mov	r1, #1
   3414c:	mov	r0, sl
   34150:	ldr	r3, [r6]
   34154:	rsb	r2, r2, #2048	; 0x800
   34158:	bl	1514 <fwrite@plt>
   3415c:	ldr	r3, [r4, #16]
   34160:	add	fp, fp, r0
   34164:	cmp	r3, #0
   34168:	beq	34130 <WriteCompressedType+0x534>
   3416c:	mov	r7, #0
   34170:	ldr	r3, [r8, #52]	; 0x34
   34174:	ldr	r2, [r3, #8]
   34178:	str	r3, [sp, #20]
   3417c:	ldr	r0, [r2, r7, lsl #2]
   34180:	bl	15c8 <strlen@plt>
   34184:	mov	r2, r9
   34188:	mov	r1, #0
   3418c:	str	r0, [sp, #12]
   34190:	ldr	r0, [sp, #8]
   34194:	bl	15f8 <memset@plt>
   34198:	ldr	r0, [sp, #8]
   3419c:	ldr	r3, [sp, #20]
   341a0:	ldr	r2, [sp, #12]
   341a4:	ldr	r1, [r3, #8]
   341a8:	ldr	r1, [r1, r7, lsl #2]
   341ac:	bl	1490 <memcpy@plt>
   341b0:	ldr	r3, [sp, #8]
   341b4:	stm	r4, {r3, r9}
   341b8:	mov	r3, #2048	; 0x800
   341bc:	mov	r1, #0
   341c0:	str	sl, [r4, #12]
   341c4:	mov	r0, r4
   341c8:	str	r3, [r4, #16]
   341cc:	bl	14fc <deflate@plt>
   341d0:	ldr	r2, [r4, #16]
   341d4:	mov	r1, #1
   341d8:	mov	r0, sl
   341dc:	ldr	r3, [r6]
   341e0:	rsb	r2, r2, #2048	; 0x800
   341e4:	bl	1514 <fwrite@plt>
   341e8:	ldr	r3, [r4, #16]
   341ec:	add	fp, fp, r0
   341f0:	cmp	r3, #0
   341f4:	beq	341b8 <WriteCompressedType+0x5bc>
   341f8:	add	r7, r7, #1
   341fc:	cmp	r5, r7
   34200:	bne	34170 <WriteCompressedType+0x574>
   34204:	ldr	r0, [sp, #8]
   34208:	add	r8, sp, #6144	; 0x1800
   3420c:	bl	1478 <free@plt>
   34210:	add	r3, sp, #2080	; 0x820
   34214:	mov	r2, r5
   34218:	ldr	r1, [r3, #-2056]	; 0xfffff7f8
   3421c:	sub	r0, sl, #4
   34220:	add	r8, r8, #32
   34224:	str	r3, [sp, #8]
   34228:	mov	sl, #0
   3422c:	mov	r5, fp
   34230:	bl	3a8c4 <SafeMul>
   34234:	add	r3, sp, #4096	; 0x1000
   34238:	add	r3, r3, #32
   3423c:	str	r3, [sp, #12]
   34240:	ldr	r3, [sp, #8]
   34244:	ldr	r3, [r3, #-2052]	; 0xfffff7fc
   34248:	cmp	r3, sl
   3424c:	bls	33d18 <WriteCompressedType+0x11c>
   34250:	mov	r2, #2048	; 0x800
   34254:	mov	r1, #0
   34258:	ldr	r0, [sp, #12]
   3425c:	add	fp, sp, #8192	; 0x2000
   34260:	ldr	r3, [sp, #16]
   34264:	add	fp, fp, #32
   34268:	ldr	r9, [r3, sl, lsl #2]
   3426c:	bl	15f8 <memset@plt>
   34270:	cmp	r9, #0
   34274:	bne	34454 <WriteCompressedType+0x858>
   34278:	mov	r2, #2048	; 0x800
   3427c:	mov	r1, r9
   34280:	mov	r0, fp
   34284:	mov	r7, #2048	; 0x800
   34288:	bl	15f8 <memset@plt>
   3428c:	add	r2, sp, #8192	; 0x2000
   34290:	mov	r3, #14
   34294:	str	fp, [r4]
   34298:	add	r2, r2, #32
   3429c:	str	r3, [r2]
   342a0:	add	r2, sp, #8192	; 0x2000
   342a4:	mov	r3, #48	; 0x30
   342a8:	add	r2, r2, #36	; 0x24
   342ac:	str	r3, [r2]
   342b0:	mov	r3, #8
   342b4:	str	r3, [r4, #4]
   342b8:	mov	r1, #0
   342bc:	mov	r0, r4
   342c0:	str	r8, [r4, #12]
   342c4:	str	r7, [r4, #16]
   342c8:	bl	14fc <deflate@plt>
   342cc:	ldr	r2, [r4, #16]
   342d0:	mov	r1, #1
   342d4:	mov	r0, r8
   342d8:	ldr	r3, [r6]
   342dc:	rsb	r2, r2, #2048	; 0x800
   342e0:	bl	1514 <fwrite@plt>
   342e4:	ldr	r3, [r4, #16]
   342e8:	add	r9, r9, r0
   342ec:	cmp	r3, #0
   342f0:	beq	342b8 <WriteCompressedType+0x6bc>
   342f4:	add	r2, sp, #8192	; 0x2000
   342f8:	mov	r3, #6
   342fc:	str	fp, [r4]
   34300:	add	r2, r2, #32
   34304:	add	r1, sp, #8192	; 0x2000
   34308:	add	r1, r1, #36	; 0x24
   3430c:	str	r3, [r2]
   34310:	mov	r2, #8
   34314:	add	r0, sp, #8192	; 0x2000
   34318:	mov	r7, #2048	; 0x800
   3431c:	str	r2, [r1]
   34320:	add	r1, sp, #8192	; 0x2000
   34324:	add	r0, r0, #48	; 0x30
   34328:	add	r1, r1, #40	; 0x28
   3432c:	str	r3, [r1]
   34330:	add	r1, sp, #8192	; 0x2000
   34334:	mov	r3, #0
   34338:	add	r1, r1, #44	; 0x2c
   3433c:	str	r3, [r1]
   34340:	mov	r1, #5
   34344:	str	r1, [r0]
   34348:	add	r1, sp, #8192	; 0x2000
   3434c:	add	r1, r1, #52	; 0x34
   34350:	str	r2, [r1]
   34354:	add	r2, sp, #8192	; 0x2000
   34358:	add	r2, r2, #56	; 0x38
   3435c:	str	r3, [r2]
   34360:	add	r2, sp, #8192	; 0x2000
   34364:	add	r2, r2, #60	; 0x3c
   34368:	str	r3, [r2]
   3436c:	mov	r3, #32
   34370:	str	r3, [r4, #4]
   34374:	mov	r1, #0
   34378:	mov	r0, r4
   3437c:	str	r8, [r4, #12]
   34380:	str	r7, [r4, #16]
   34384:	bl	14fc <deflate@plt>
   34388:	ldr	r2, [r4, #16]
   3438c:	mov	r1, #1
   34390:	mov	r0, r8
   34394:	ldr	r3, [r6]
   34398:	rsb	r2, r2, #2048	; 0x800
   3439c:	bl	1514 <fwrite@plt>
   343a0:	ldr	r3, [r4, #16]
   343a4:	add	r9, r9, r0
   343a8:	cmp	r3, #0
   343ac:	beq	34374 <WriteCompressedType+0x778>
   343b0:	add	r2, sp, #8192	; 0x2000
   343b4:	mov	r3, #1
   343b8:	str	fp, [r4]
   343bc:	add	r2, r2, #32
   343c0:	mov	r7, #2048	; 0x800
   343c4:	str	r3, [r2]
   343c8:	add	r2, sp, #8192	; 0x2000
   343cc:	mov	r3, #0
   343d0:	add	r2, r2, #36	; 0x24
   343d4:	str	r3, [r2]
   343d8:	mov	r3, #8
   343dc:	str	r3, [r4, #4]
   343e0:	mov	r1, #0
   343e4:	mov	r0, r4
   343e8:	str	r8, [r4, #12]
   343ec:	str	r7, [r4, #16]
   343f0:	bl	14fc <deflate@plt>
   343f4:	ldr	r2, [r4, #16]
   343f8:	mov	r1, #1
   343fc:	mov	r0, r8
   34400:	ldr	r3, [r6]
   34404:	rsb	r2, r2, #2048	; 0x800
   34408:	bl	1514 <fwrite@plt>
   3440c:	ldr	r3, [r4, #16]
   34410:	add	r9, r9, r0
   34414:	cmp	r3, #0
   34418:	beq	343e0 <WriteCompressedType+0x7e4>
   3441c:	mov	r3, #9
   34420:	mov	r1, r4
   34424:	mov	r0, r6
   34428:	str	r3, [sp]
   3442c:	mov	r3, #0
   34430:	mov	r2, r3
   34434:	bl	32644 <WriteCompressedData>
   34438:	add	r0, r9, r0
   3443c:	add	r5, r5, r0
   34440:	add	sl, sl, #1
   34444:	b	34240 <WriteCompressedType+0x644>
   34448:	add	r9, r9, #1
   3444c:	mov	r3, r1
   34450:	b	340ec <WriteCompressedType+0x4f0>
   34454:	mov	r3, #14
   34458:	str	r3, [r8, #-2048]	; 0xfffff800
   3445c:	ldr	r3, [r9, #16]
   34460:	cmp	r3, #0
   34464:	beq	34478 <WriteCompressedType+0x87c>
   34468:	mov	r0, r9
   3446c:	bl	327b8 <GetTypeBufSize>
   34470:	add	r0, r0, #24
   34474:	str	r0, [r8, #-2044]	; 0xfffff804
   34478:	ldr	r3, [sp, #12]
   3447c:	mov	r7, #0
   34480:	str	r3, [r4]
   34484:	mov	r3, #8
   34488:	str	r3, [r4, #4]
   3448c:	mov	r3, #2048	; 0x800
   34490:	mov	r1, #0
   34494:	str	fp, [r4, #12]
   34498:	mov	r0, r4
   3449c:	str	r3, [r4, #16]
   344a0:	bl	14fc <deflate@plt>
   344a4:	ldr	r2, [r4, #16]
   344a8:	mov	r1, #1
   344ac:	mov	r0, fp
   344b0:	ldr	r3, [r6]
   344b4:	rsb	r2, r2, #2048	; 0x800
   344b8:	bl	1514 <fwrite@plt>
   344bc:	ldr	r3, [r4, #16]
   344c0:	add	r7, r7, r0
   344c4:	cmp	r3, #0
   344c8:	beq	3448c <WriteCompressedType+0x890>
   344cc:	mov	r2, r4
   344d0:	mov	r1, r9
   344d4:	mov	r0, r6
   344d8:	bl	34590 <WriteCompressedTypeArrayFlags>
   344dc:	add	r0, r7, r0
   344e0:	b	3443c <WriteCompressedType+0x840>
   344e4:	ldr	r7, [r8, #40]	; 0x28
   344e8:	mov	r9, #5
   344ec:	mov	r1, r4
   344f0:	mov	r0, r6
   344f4:	str	r9, [sp]
   344f8:	ldrd	r2, [r7, #4]
   344fc:	bl	32644 <WriteCompressedData>
   34500:	mov	r5, r0
   34504:	mov	r1, r4
   34508:	str	r9, [sp]
   3450c:	mov	r0, r6
   34510:	ldrd	r2, [r7, #12]
   34514:	bl	32644 <WriteCompressedData>
   34518:	ldr	r3, [r8, #20]
   3451c:	add	r5, r5, r0
   34520:	cmp	r3, #0
   34524:	ldr	r3, [r8, #8]
   34528:	beq	34574 <WriteCompressedType+0x978>
   3452c:	ldr	sl, [r7, #24]
   34530:	mov	r1, r4
   34534:	mov	r0, r6
   34538:	str	r3, [sp]
   3453c:	ldr	r3, [r7, #20]
   34540:	ldr	r2, [sl]
   34544:	bl	32644 <WriteCompressedData>
   34548:	ldr	r3, [r8, #8]
   3454c:	mov	r9, r0
   34550:	mov	r1, r4
   34554:	mov	r0, r6
   34558:	str	r3, [sp]
   3455c:	ldr	r2, [sl, #4]
   34560:	ldr	r3, [r7, #20]
   34564:	bl	32644 <WriteCompressedData>
   34568:	add	r0, r9, r0
   3456c:	add	r5, r5, r0
   34570:	b	33d18 <WriteCompressedType+0x11c>
   34574:	str	r3, [sp]
   34578:	ldr	r3, [r7, #20]
   3457c:	ldr	r2, [r7, #24]
   34580:	b	33cf0 <WriteCompressedType+0xf4>
   34584:	.word	0x0001c508
   34588:	.word	0x00030014
   3458c:	.word	0x00040005

00034590 <WriteCompressedTypeArrayFlags>:
   34590:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   34594:	sub	sp, sp, #4096	; 0x1000
   34598:	mov	r6, r1
   3459c:	add	r8, sp, #2048	; 0x800
   345a0:	mov	r7, r0
   345a4:	mov	r4, r2
   345a8:	mov	r1, #0
   345ac:	mov	r2, #2048	; 0x800
   345b0:	mov	r0, r8
   345b4:	bl	15f8 <memset@plt>
   345b8:	ldr	r0, [r6, #16]
   345bc:	cmp	r0, #0
   345c0:	beq	34750 <WriteCompressedTypeArrayFlags+0x1c0>
   345c4:	ldr	r2, [r6, #20]
   345c8:	uxtb	r3, r0
   345cc:	mov	r1, #6
   345d0:	cmp	r2, #0
   345d4:	ldr	r2, [r6, #24]
   345d8:	orrne	r3, r3, #2048	; 0x800
   345dc:	cmp	r2, #0
   345e0:	ldr	r2, [r6, #28]
   345e4:	orrne	r3, r3, #1024	; 0x400
   345e8:	cmp	r2, #0
   345ec:	orrne	r3, r3, #512	; 0x200
   345f0:	cmp	r0, #5
   345f4:	ldreq	r2, [r6, #40]	; 0x28
   345f8:	movne	r2, #0
   345fc:	ldreq	r2, [r2]
   34600:	str	r1, [sp, #2048]	; 0x800
   34604:	mov	r1, #8
   34608:	str	r3, [sp, #2056]	; 0x808
   3460c:	mov	r3, #5
   34610:	str	r1, [sp, #2052]	; 0x804
   34614:	add	r1, r8, #24
   34618:	str	r2, [sp, #2060]	; 0x80c
   3461c:	ldr	r2, [r6, #4]
   34620:	str	r3, [sp, #2064]	; 0x810
   34624:	lsl	r3, r2, #2
   34628:	str	r3, [sp, #2068]	; 0x814
   3462c:	mov	r3, #0
   34630:	cmp	r2, r3
   34634:	bgt	34758 <WriteCompressedTypeArrayFlags+0x1c8>
   34638:	bic	r3, r2, r2, asr #31
   3463c:	tst	r2, #1
   34640:	add	r1, r3, #6
   34644:	beq	3465c <WriteCompressedTypeArrayFlags+0xcc>
   34648:	add	r2, sp, #4096	; 0x1000
   3464c:	add	r3, r3, #1
   34650:	add	r2, r2, r1, lsl #2
   34654:	mov	r1, #0
   34658:	str	r1, [r2, #-2048]	; 0xfffff800
   3465c:	add	r3, r3, #6
   34660:	mov	r5, #0
   34664:	str	r8, [r4]
   34668:	lsl	r3, r3, #2
   3466c:	mov	r9, sp
   34670:	mov	sl, #2048	; 0x800
   34674:	str	r3, [r4, #4]
   34678:	mov	r1, #0
   3467c:	mov	r0, r4
   34680:	str	r9, [r4, #12]
   34684:	str	sl, [r4, #16]
   34688:	bl	14fc <deflate@plt>
   3468c:	ldr	r2, [r4, #16]
   34690:	mov	r1, #1
   34694:	mov	r0, r9
   34698:	ldr	r3, [r7]
   3469c:	rsb	r2, r2, #2048	; 0x800
   346a0:	bl	1514 <fwrite@plt>
   346a4:	ldr	r3, [r4, #16]
   346a8:	add	r5, r5, r0
   346ac:	cmp	r3, #0
   346b0:	beq	34678 <WriteCompressedTypeArrayFlags+0xe8>
   346b4:	mov	r3, #1
   346b8:	str	r8, [r4]
   346bc:	mov	r8, #2048	; 0x800
   346c0:	str	r3, [sp, #2048]	; 0x800
   346c4:	mov	r3, #0
   346c8:	str	r3, [sp, #2052]	; 0x804
   346cc:	mov	r3, #8
   346d0:	str	r3, [r4, #4]
   346d4:	mov	r1, #0
   346d8:	mov	r0, r4
   346dc:	str	r9, [r4, #12]
   346e0:	str	r8, [r4, #16]
   346e4:	bl	14fc <deflate@plt>
   346e8:	ldr	r2, [r4, #16]
   346ec:	mov	r1, #1
   346f0:	mov	r0, r9
   346f4:	ldr	r3, [r7]
   346f8:	rsb	r2, r2, #2048	; 0x800
   346fc:	bl	1514 <fwrite@plt>
   34700:	ldr	r3, [r4, #16]
   34704:	add	r5, r5, r0
   34708:	cmp	r3, #0
   3470c:	beq	346d4 <WriteCompressedTypeArrayFlags+0x144>
   34710:	ldr	r0, [r7]
   34714:	ldr	r8, [r6, #52]	; 0x34
   34718:	bl	14b4 <ftell@plt>
   3471c:	ldr	r3, [r6, #52]	; 0x34
   34720:	str	r0, [r8]
   34724:	ldr	r3, [r3]
   34728:	cmn	r3, #1
   3472c:	bne	3473c <WriteCompressedTypeArrayFlags+0x1ac>
   34730:	ldr	r0, [pc, #52]	; 3476c <WriteCompressedTypeArrayFlags+0x1dc>
   34734:	add	r0, pc, r0
   34738:	bl	161c <Mat_Critical@plt>
   3473c:	mov	r2, r4
   34740:	mov	r1, r6
   34744:	mov	r0, r7
   34748:	bl	33bfc <WriteCompressedType>
   3474c:	add	r0, r5, r0
   34750:	add	sp, sp, #4096	; 0x1000
   34754:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   34758:	ldr	r0, [r6, #32]
   3475c:	ldr	r0, [r0, r3, lsl #2]
   34760:	add	r3, r3, #1
   34764:	str	r0, [r1], #4
   34768:	b	34630 <WriteCompressedTypeArrayFlags+0xa0>
   3476c:	.word	0x0000a4b1

00034770 <Mat_Create5>:
   34770:	push	{r4, r5, r6, r7, r8, r9, lr}
   34774:	mov	r8, r1
   34778:	sub	sp, sp, #28
   3477c:	mov	r5, #0
   34780:	mov	r9, r0
   34784:	ldr	r1, [pc, #428]	; 34938 <Mat_Create5+0x1c8>
   34788:	strh	r5, [sp, #16]
   3478c:	add	r1, pc, r1
   34790:	bl	1454 <fopen@plt>
   34794:	subs	r6, r0, #0
   34798:	moveq	r4, r6
   3479c:	beq	347b8 <Mat_Create5+0x48>
   347a0:	mov	r0, #44	; 0x2c
   347a4:	bl	1544 <malloc@plt>
   347a8:	subs	r4, r0, #0
   347ac:	bne	347c4 <Mat_Create5+0x54>
   347b0:	mov	r0, r6
   347b4:	bl	1634 <fclose@plt>
   347b8:	mov	r0, r4
   347bc:	add	sp, sp, #28
   347c0:	pop	{r4, r5, r6, r7, r8, r9, pc}
   347c4:	mov	r7, #128	; 0x80
   347c8:	mov	r0, r5
   347cc:	str	r5, [r4]
   347d0:	str	r5, [r4, #4]
   347d4:	str	r5, [r4, #8]
   347d8:	str	r5, [r4, #12]
   347dc:	str	r5, [r4, #16]
   347e0:	str	r5, [r4, #20]
   347e4:	str	r5, [r4, #24]
   347e8:	str	r7, [r4, #28]
   347ec:	str	r5, [r4, #32]
   347f0:	str	r5, [r4, #36]	; 0x24
   347f4:	str	r5, [r4, #40]	; 0x28
   347f8:	bl	14a8 <time@plt>
   347fc:	str	r6, [r4]
   34800:	mov	r1, r9
   34804:	mov	r9, #1
   34808:	ldr	r6, [pc, #300]	; 3493c <Mat_Create5+0x1cc>
   3480c:	str	r0, [sp, #20]
   34810:	add	r6, pc, r6
   34814:	mov	r0, r6
   34818:	bl	1bfc <strdup_printf>
   3481c:	str	r0, [r4, #12]
   34820:	mov	r0, r7
   34824:	str	r5, [r4, #20]
   34828:	str	r9, [r4, #24]
   3482c:	bl	1544 <malloc@plt>
   34830:	mov	r5, r0
   34834:	mov	r0, #8
   34838:	str	r5, [r4, #4]
   3483c:	bl	1544 <malloc@plt>
   34840:	mov	r2, r7
   34844:	mov	r1, #32
   34848:	str	r0, [r4, #8]
   3484c:	mov	r0, r5
   34850:	bl	15f8 <memset@plt>
   34854:	cmp	r8, #0
   34858:	bne	34920 <Mat_Create5+0x1b0>
   3485c:	add	r0, sp, #20
   34860:	bl	14c0 <ctime@plt>
   34864:	mov	r3, #15
   34868:	ldr	r2, [pc, #208]	; 34940 <Mat_Create5+0x1d0>
   3486c:	mov	r1, #116	; 0x74
   34870:	str	r9, [sp]
   34874:	str	r3, [sp, #8]
   34878:	mov	r3, #5
   3487c:	str	r3, [sp, #4]
   34880:	ldr	r3, [pc, #188]	; 34944 <Mat_Create5+0x1d4>
   34884:	add	r2, pc, r2
   34888:	str	r0, [sp, #12]
   3488c:	mov	r0, r5
   34890:	add	r3, pc, r3
   34894:	bl	15e0 <snprintf@plt>
   34898:	cmp	r0, #115	; 0x73
   3489c:	mov	r1, #1
   348a0:	ldrhi	r3, [r4, #4]
   348a4:	movhi	r2, #0
   348a8:	strbhi	r2, [r3, #115]	; 0x73
   348ac:	ldr	r2, [pc, #148]	; 34948 <Mat_Create5+0x1d8>
   348b0:	ldr	r3, [r4, #8]
   348b4:	str	r2, [r3]
   348b8:	str	r2, [r3, #4]
   348bc:	mov	r3, #256	; 0x100
   348c0:	movw	r2, #19785	; 0x4d49
   348c4:	ldr	r0, [r4, #4]
   348c8:	str	r3, [r4, #16]
   348cc:	strh	r2, [sp, #16]
   348d0:	mov	r2, #116	; 0x74
   348d4:	strh	r3, [sp, #18]
   348d8:	ldr	r3, [r4]
   348dc:	bl	1514 <fwrite@plt>
   348e0:	mov	r2, #8
   348e4:	mov	r1, #1
   348e8:	ldr	r3, [r4]
   348ec:	ldr	r0, [r4, #8]
   348f0:	bl	1514 <fwrite@plt>
   348f4:	mov	r2, #1
   348f8:	mov	r1, #2
   348fc:	ldr	r3, [r4]
   34900:	add	r0, sp, #18
   34904:	bl	1514 <fwrite@plt>
   34908:	mov	r2, #1
   3490c:	mov	r1, #2
   34910:	ldr	r3, [r4]
   34914:	add	r0, sp, #16
   34918:	bl	1514 <fwrite@plt>
   3491c:	b	347b8 <Mat_Create5+0x48>
   34920:	mov	r3, r8
   34924:	mov	r2, r6
   34928:	mov	r1, #116	; 0x74
   3492c:	mov	r0, r5
   34930:	bl	15e0 <snprintf@plt>
   34934:	b	34898 <Mat_Create5+0x128>
   34938:	.word	0x0000a4a4
   3493c:	.word	0x0000ab53
   34940:	.word	0x0000a3cf
   34944:	.word	0x0000a3a4
   34948:	.word	0x20202020

0003494c <Mat_VarRead5>:
   3494c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   34950:	mov	r3, #1
   34954:	sub	sp, sp, #44	; 0x2c
   34958:	subs	r4, r1, #0
   3495c:	str	r3, [sp, #24]
   34960:	beq	349b0 <Mat_VarRead5+0x64>
   34964:	ldr	r3, [r4, #4]
   34968:	cmp	r3, #0
   3496c:	beq	349b0 <Mat_VarRead5+0x64>
   34970:	ldr	r3, [r4, #52]	; 0x34
   34974:	ldr	r2, [r3, #16]
   34978:	cmp	r2, #0
   3497c:	strne	r2, [r4, #40]	; 0x28
   34980:	movne	r2, #0
   34984:	strne	r2, [r3, #16]
   34988:	bne	349b0 <Mat_VarRead5+0x64>
   3498c:	mov	r5, r0
   34990:	ldr	r0, [r0]
   34994:	bl	14b4 <ftell@plt>
   34998:	cmn	r0, #1
   3499c:	str	r0, [sp, #20]
   349a0:	bne	349b8 <Mat_VarRead5+0x6c>
   349a4:	ldr	r0, [pc, #3876]	; 358d0 <Mat_VarRead5+0xf84>
   349a8:	add	r0, pc, r0
   349ac:	bl	161c <Mat_Critical@plt>
   349b0:	add	sp, sp, #44	; 0x2c
   349b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   349b8:	add	r1, sp, #24
   349bc:	mov	r0, r4
   349c0:	bl	3a864 <SafeMulDims>
   349c4:	subs	r3, r0, #0
   349c8:	str	r3, [sp, #16]
   349cc:	ldrne	r0, [pc, #3840]	; 358d4 <Mat_VarRead5+0xf88>
   349d0:	addne	r0, pc, r0
   349d4:	bne	349ac <Mat_VarRead5+0x60>
   349d8:	ldr	r1, [r4, #16]
   349dc:	ldr	r3, [r5, #20]
   349e0:	str	r3, [sp, #8]
   349e4:	cmp	r1, #16
   349e8:	addls	pc, pc, r1, lsl #2
   349ec:	b	36030 <Mat_VarRead5+0x16e4>
   349f0:	b	34a34 <Mat_VarRead5+0xe8>
   349f4:	b	34f28 <Mat_VarRead5+0x5dc>
   349f8:	b	34eb8 <Mat_VarRead5+0x56c>
   349fc:	b	36030 <Mat_VarRead5+0x16e4>
   34a00:	b	34c28 <Mat_VarRead5+0x2dc>
   34a04:	b	34f78 <Mat_VarRead5+0x62c>
   34a08:	b	34a78 <Mat_VarRead5+0x12c>
   34a0c:	b	34ae8 <Mat_VarRead5+0x19c>
   34a10:	b	34be4 <Mat_VarRead5+0x298>
   34a14:	b	34c04 <Mat_VarRead5+0x2b8>
   34a18:	b	34b9c <Mat_VarRead5+0x250>
   34a1c:	b	34bc0 <Mat_VarRead5+0x274>
   34a20:	b	34b54 <Mat_VarRead5+0x208>
   34a24:	b	34b78 <Mat_VarRead5+0x22c>
   34a28:	b	34b0c <Mat_VarRead5+0x1c0>
   34a2c:	b	34b30 <Mat_VarRead5+0x1e4>
   34a30:	b	35fe0 <Mat_VarRead5+0x1694>
   34a34:	mov	r3, #9
   34a38:	mov	r6, #0
   34a3c:	mov	r0, #8
   34a40:	str	r6, [r4]
   34a44:	str	r3, [r4, #8]
   34a48:	mov	r3, #2
   34a4c:	str	r3, [r4, #4]
   34a50:	str	r0, [r4, #12]
   34a54:	bl	1544 <malloc@plt>
   34a58:	str	r6, [r0]
   34a5c:	str	r6, [r0, #4]
   34a60:	str	r0, [r4, #32]
   34a64:	mov	r2, #0
   34a68:	ldr	r0, [r5]
   34a6c:	ldr	r1, [sp, #20]
   34a70:	bl	1694 <fseek@plt>
   34a74:	b	349b0 <Mat_VarRead5+0x64>
   34a78:	ldr	r3, [r4, #52]	; 0x34
   34a7c:	mov	r2, #0
   34a80:	ldr	r0, [r5]
   34a84:	ldr	r1, [r3]
   34a88:	bl	1694 <fseek@plt>
   34a8c:	mov	r3, #8
   34a90:	str	r3, [r4, #12]
   34a94:	mov	r3, #9
   34a98:	str	r3, [r4, #8]
   34a9c:	ldr	r3, [r4, #16]
   34aa0:	sub	r3, r3, #6
   34aa4:	cmp	r3, #9
   34aa8:	bhi	34a64 <Mat_VarRead5+0x118>
   34aac:	mov	r0, r4
   34ab0:	ldr	r2, [r4, #12]
   34ab4:	ldr	r3, [r4, #20]
   34ab8:	ldr	r1, [sp, #24]
   34abc:	cmp	r3, #0
   34ac0:	beq	3606c <Mat_VarRead5+0x1720>
   34ac4:	bl	3a8c4 <SafeMul>
   34ac8:	ldr	r0, [r4]
   34acc:	bl	3a7c8 <ComplexMalloc>
   34ad0:	subs	r6, r0, #0
   34ad4:	bne	3603c <Mat_VarRead5+0x16f0>
   34ad8:	ldr	r0, [pc, #3576]	; 358d8 <Mat_VarRead5+0xf8c>
   34adc:	add	r0, pc, r0
   34ae0:	bl	161c <Mat_Critical@plt>
   34ae4:	b	34a64 <Mat_VarRead5+0x118>
   34ae8:	ldr	r3, [r4, #52]	; 0x34
   34aec:	mov	r2, #0
   34af0:	ldr	r0, [r5]
   34af4:	ldr	r1, [r3]
   34af8:	bl	1694 <fseek@plt>
   34afc:	mov	r3, #4
   34b00:	str	r3, [r4, #12]
   34b04:	mov	r3, #7
   34b08:	b	34a98 <Mat_VarRead5+0x14c>
   34b0c:	ldr	r3, [r4, #52]	; 0x34
   34b10:	mov	r2, #0
   34b14:	ldr	r0, [r5]
   34b18:	ldr	r1, [r3]
   34b1c:	bl	1694 <fseek@plt>
   34b20:	mov	r3, #8
   34b24:	str	r3, [r4, #12]
   34b28:	mov	r3, #12
   34b2c:	b	34a98 <Mat_VarRead5+0x14c>
   34b30:	ldr	r3, [r4, #52]	; 0x34
   34b34:	mov	r2, #0
   34b38:	ldr	r0, [r5]
   34b3c:	ldr	r1, [r3]
   34b40:	bl	1694 <fseek@plt>
   34b44:	mov	r3, #8
   34b48:	str	r3, [r4, #12]
   34b4c:	mov	r3, #13
   34b50:	b	34a98 <Mat_VarRead5+0x14c>
   34b54:	ldr	r3, [r4, #52]	; 0x34
   34b58:	mov	r2, #0
   34b5c:	ldr	r0, [r5]
   34b60:	ldr	r1, [r3]
   34b64:	bl	1694 <fseek@plt>
   34b68:	mov	r3, #4
   34b6c:	str	r3, [r4, #12]
   34b70:	mov	r3, #5
   34b74:	b	34a98 <Mat_VarRead5+0x14c>
   34b78:	ldr	r3, [r4, #52]	; 0x34
   34b7c:	mov	r2, #0
   34b80:	ldr	r0, [r5]
   34b84:	ldr	r1, [r3]
   34b88:	bl	1694 <fseek@plt>
   34b8c:	mov	r3, #4
   34b90:	str	r3, [r4, #12]
   34b94:	mov	r3, #6
   34b98:	b	34a98 <Mat_VarRead5+0x14c>
   34b9c:	ldr	r3, [r4, #52]	; 0x34
   34ba0:	mov	r2, #0
   34ba4:	ldr	r0, [r5]
   34ba8:	ldr	r1, [r3]
   34bac:	bl	1694 <fseek@plt>
   34bb0:	mov	r3, #2
   34bb4:	str	r3, [r4, #12]
   34bb8:	mov	r3, #3
   34bbc:	b	34a98 <Mat_VarRead5+0x14c>
   34bc0:	ldr	r3, [r4, #52]	; 0x34
   34bc4:	mov	r2, #0
   34bc8:	ldr	r0, [r5]
   34bcc:	ldr	r1, [r3]
   34bd0:	bl	1694 <fseek@plt>
   34bd4:	mov	r3, #2
   34bd8:	str	r3, [r4, #12]
   34bdc:	mov	r3, #4
   34be0:	b	34a98 <Mat_VarRead5+0x14c>
   34be4:	ldr	r3, [r4, #52]	; 0x34
   34be8:	mov	r2, #0
   34bec:	ldr	r0, [r5]
   34bf0:	ldr	r1, [r3]
   34bf4:	bl	1694 <fseek@plt>
   34bf8:	mov	r3, #1
   34bfc:	str	r3, [r4, #12]
   34c00:	b	34a98 <Mat_VarRead5+0x14c>
   34c04:	ldr	r3, [r4, #52]	; 0x34
   34c08:	mov	r2, #0
   34c0c:	ldr	r0, [r5]
   34c10:	ldr	r1, [r3]
   34c14:	bl	1694 <fseek@plt>
   34c18:	mov	r3, #1
   34c1c:	str	r3, [r4, #12]
   34c20:	mov	r3, #2
   34c24:	b	34a98 <Mat_VarRead5+0x14c>
   34c28:	ldr	r3, [r4, #52]	; 0x34
   34c2c:	mov	r2, #0
   34c30:	add	r6, sp, #32
   34c34:	ldr	r0, [r5]
   34c38:	ldr	r7, [pc, #3256]	; 358f8 <Mat_VarRead5+0xfac>
   34c3c:	ldr	r1, [r3]
   34c40:	bl	1694 <fseek@plt>
   34c44:	ldr	r3, [r4, #48]	; 0x30
   34c48:	cmp	r3, #1
   34c4c:	bne	34d24 <Mat_VarRead5+0x3d8>
   34c50:	ldr	r3, [r4, #52]	; 0x34
   34c54:	mov	r2, r6
   34c58:	mov	r0, r5
   34c5c:	ldr	r1, [r3, #12]
   34c60:	mov	r3, #0
   34c64:	str	r3, [r1, #4]
   34c68:	bl	2c70 <InflateDataType>
   34c6c:	ldr	r3, [sp, #8]
   34c70:	cmp	r3, #0
   34c74:	beq	34c80 <Mat_VarRead5+0x334>
   34c78:	mov	r0, r6
   34c7c:	bl	18cc <Mat_uint32Swap>
   34c80:	ldr	r3, [sp, #32]
   34c84:	uxtb	r6, r3
   34c88:	cmp	r6, #25
   34c8c:	movcs	r6, #0
   34c90:	tst	r3, r7
   34c94:	lsrne	r7, r3, #16
   34c98:	movne	r3, #1
   34c9c:	strne	r3, [sp, #16]
   34ca0:	bne	34cd4 <Mat_VarRead5+0x388>
   34ca4:	ldr	r3, [r4, #52]	; 0x34
   34ca8:	add	r7, sp, #36	; 0x24
   34cac:	mov	r0, r5
   34cb0:	mov	r2, r7
   34cb4:	ldr	r1, [r3, #12]
   34cb8:	bl	2c70 <InflateDataType>
   34cbc:	ldr	r3, [sp, #8]
   34cc0:	cmp	r3, #0
   34cc4:	beq	34cd0 <Mat_VarRead5+0x384>
   34cc8:	mov	r0, r7
   34ccc:	bl	18cc <Mat_uint32Swap>
   34cd0:	ldr	r7, [sp, #36]	; 0x24
   34cd4:	mov	r0, r6
   34cd8:	str	r6, [r4, #8]
   34cdc:	bl	1598 <Mat_SizeOf@plt>
   34ce0:	ldr	r3, [sp, #16]
   34ce4:	str	r7, [r4]
   34ce8:	str	r0, [r4, #12]
   34cec:	str	r3, [sp, #8]
   34cf0:	ldr	r3, [r4, #20]
   34cf4:	cmp	r3, #0
   34cf8:	bne	34a9c <Mat_VarRead5+0x150>
   34cfc:	ldr	r7, [r4]
   34d00:	mov	r1, #1
   34d04:	add	r0, r7, r1
   34d08:	bl	140c <calloc@plt>
   34d0c:	cmp	r0, #0
   34d10:	str	r0, [r4, #40]	; 0x28
   34d14:	bne	34dd4 <Mat_VarRead5+0x488>
   34d18:	ldr	r0, [pc, #3004]	; 358dc <Mat_VarRead5+0xf90>
   34d1c:	add	r0, pc, r0
   34d20:	b	34dcc <Mat_VarRead5+0x480>
   34d24:	mov	r2, #1
   34d28:	mov	r1, #4
   34d2c:	ldr	r3, [r5]
   34d30:	mov	r0, r6
   34d34:	bl	1520 <fread@plt>
   34d38:	ldr	r3, [sp, #8]
   34d3c:	cmp	r3, #0
   34d40:	beq	34d4c <Mat_VarRead5+0x400>
   34d44:	mov	r0, r6
   34d48:	bl	18cc <Mat_uint32Swap>
   34d4c:	ldr	r3, [sp, #32]
   34d50:	uxtb	r6, r3
   34d54:	cmp	r6, #25
   34d58:	movcs	r6, #0
   34d5c:	ands	r7, r3, r7
   34d60:	movne	r3, #1
   34d64:	strne	r3, [sp, #8]
   34d68:	bne	34d9c <Mat_VarRead5+0x450>
   34d6c:	add	r8, sp, #36	; 0x24
   34d70:	mov	r2, #1
   34d74:	ldr	r3, [r5]
   34d78:	mov	r1, #4
   34d7c:	mov	r0, r8
   34d80:	bl	1520 <fread@plt>
   34d84:	ldr	r3, [sp, #8]
   34d88:	cmp	r3, #0
   34d8c:	beq	34d9c <Mat_VarRead5+0x450>
   34d90:	mov	r0, r8
   34d94:	bl	18cc <Mat_uint32Swap>
   34d98:	str	r7, [sp, #8]
   34d9c:	mov	r0, #2
   34da0:	str	r0, [r4, #8]
   34da4:	bl	1598 <Mat_SizeOf@plt>
   34da8:	mov	r2, r0
   34dac:	mov	r0, r4
   34db0:	ldr	r1, [sp, #24]
   34db4:	str	r2, [r4, #12]
   34db8:	bl	3a8c4 <SafeMul>
   34dbc:	cmp	r0, #0
   34dc0:	beq	34cf0 <Mat_VarRead5+0x3a4>
   34dc4:	ldr	r0, [pc, #2836]	; 358e0 <Mat_VarRead5+0xf94>
   34dc8:	add	r0, pc, r0
   34dcc:	bl	161c <Mat_Critical@plt>
   34dd0:	b	34a9c <Mat_VarRead5+0x150>
   34dd4:	cmp	r7, #0
   34dd8:	beq	34a9c <Mat_VarRead5+0x150>
   34ddc:	add	r0, sp, #28
   34de0:	ldr	r2, [r4, #12]
   34de4:	ldr	r1, [sp, #24]
   34de8:	bl	3a8c4 <SafeMul>
   34dec:	cmp	r0, #0
   34df0:	bne	34a9c <Mat_VarRead5+0x150>
   34df4:	ldr	r2, [r4]
   34df8:	ldr	r3, [sp, #28]
   34dfc:	cmp	r2, r3
   34e00:	bcc	34a9c <Mat_VarRead5+0x150>
   34e04:	ldr	r3, [r4, #48]	; 0x30
   34e08:	cmp	r3, #0
   34e0c:	bne	34e58 <Mat_VarRead5+0x50c>
   34e10:	mov	r2, r6
   34e14:	mov	r0, r5
   34e18:	ldr	r3, [sp, #24]
   34e1c:	ldr	r1, [r4, #40]	; 0x28
   34e20:	bl	13568 <ReadCharData>
   34e24:	ldr	r3, [sp, #8]
   34e28:	cmp	r3, #0
   34e2c:	addne	r0, r0, #4
   34e30:	ands	r1, r0, #7
   34e34:	beq	34a9c <Mat_VarRead5+0x150>
   34e38:	rsbs	r0, r0, #0
   34e3c:	and	r0, r0, #7
   34e40:	rsbpl	r1, r0, #0
   34e44:	mov	r2, #1
   34e48:	rsb	r1, r1, #8
   34e4c:	ldr	r0, [r5]
   34e50:	bl	1694 <fseek@plt>
   34e54:	b	34a9c <Mat_VarRead5+0x150>
   34e58:	cmp	r3, #1
   34e5c:	bne	34a9c <Mat_VarRead5+0x150>
   34e60:	ldr	r3, [sp, #24]
   34e64:	mov	r0, r5
   34e68:	ldr	r1, [r4, #52]	; 0x34
   34e6c:	str	r3, [sp]
   34e70:	mov	r3, r6
   34e74:	ldr	r2, [r4, #40]	; 0x28
   34e78:	ldr	r1, [r1, #12]
   34e7c:	bl	1348c <ReadCompressedCharData>
   34e80:	ldr	r3, [sp, #8]
   34e84:	cmp	r3, #0
   34e88:	addne	r0, r0, #4
   34e8c:	ands	r2, r0, #7
   34e90:	beq	34a9c <Mat_VarRead5+0x150>
   34e94:	rsbs	r0, r0, #0
   34e98:	and	r0, r0, #7
   34e9c:	rsbpl	r2, r0, #0
   34ea0:	ldr	r3, [r4, #52]	; 0x34
   34ea4:	rsb	r2, r2, #8
   34ea8:	mov	r0, r5
   34eac:	ldr	r1, [r3, #12]
   34eb0:	bl	1e78 <InflateSkip>
   34eb4:	b	34a9c <Mat_VarRead5+0x150>
   34eb8:	mov	r3, #22
   34ebc:	str	r3, [r4, #8]
   34ec0:	ldr	r3, [r4]
   34ec4:	cmp	r3, #0
   34ec8:	beq	34a9c <Mat_VarRead5+0x150>
   34ecc:	ldr	r3, [r4, #12]
   34ed0:	cmp	r3, #0
   34ed4:	beq	34a9c <Mat_VarRead5+0x150>
   34ed8:	ldr	r3, [r4, #40]	; 0x28
   34edc:	cmp	r3, #0
   34ee0:	beq	34a9c <Mat_VarRead5+0x150>
   34ee4:	ldr	r3, [r4, #52]	; 0x34
   34ee8:	add	r0, sp, #32
   34eec:	mov	r6, #0
   34ef0:	ldr	r1, [sp, #24]
   34ef4:	ldr	r2, [r3, #4]
   34ef8:	bl	3a8c4 <SafeMul>
   34efc:	ldr	r7, [r4, #40]	; 0x28
   34f00:	ldr	r3, [sp, #32]
   34f04:	cmp	r3, r6
   34f08:	bls	34a9c <Mat_VarRead5+0x150>
   34f0c:	ldr	r1, [r7, r6, lsl #2]
   34f10:	cmp	r1, #0
   34f14:	beq	34f20 <Mat_VarRead5+0x5d4>
   34f18:	mov	r0, r5
   34f1c:	bl	3494c <Mat_VarRead5>
   34f20:	add	r6, r6, #1
   34f24:	b	34f00 <Mat_VarRead5+0x5b4>
   34f28:	ldr	r7, [r4, #40]	; 0x28
   34f2c:	cmp	r7, #0
   34f30:	movne	r6, #0
   34f34:	bne	34f64 <Mat_VarRead5+0x618>
   34f38:	ldr	r0, [pc, #2468]	; 358e4 <Mat_VarRead5+0xf98>
   34f3c:	ldr	r1, [r4, #36]	; 0x24
   34f40:	add	r0, pc, r0
   34f44:	bl	161c <Mat_Critical@plt>
   34f48:	b	34a9c <Mat_VarRead5+0x150>
   34f4c:	ldr	r1, [r7, r6, lsl #2]
   34f50:	cmp	r1, #0
   34f54:	beq	34f60 <Mat_VarRead5+0x614>
   34f58:	mov	r0, r5
   34f5c:	bl	3494c <Mat_VarRead5>
   34f60:	add	r6, r6, #1
   34f64:	ldr	r3, [sp, #24]
   34f68:	cmp	r3, r6
   34f6c:	bhi	34f4c <Mat_VarRead5+0x600>
   34f70:	mov	r3, #21
   34f74:	b	34a98 <Mat_VarRead5+0x14c>
   34f78:	mov	r0, #28
   34f7c:	mov	r6, #0
   34f80:	str	r0, [r4, #12]
   34f84:	str	r6, [sp, #28]
   34f88:	bl	1544 <malloc@plt>
   34f8c:	cmp	r0, r6
   34f90:	mov	r7, r0
   34f94:	str	r0, [r4, #40]	; 0x28
   34f98:	ldreq	r0, [pc, #2376]	; 358e8 <Mat_VarRead5+0xf9c>
   34f9c:	addeq	r0, pc, r0
   34fa0:	beq	34dcc <Mat_VarRead5+0x480>
   34fa4:	ldr	r3, [r4]
   34fa8:	mov	r2, r6
   34fac:	add	fp, sp, #32
   34fb0:	ldr	r0, [r5]
   34fb4:	str	r3, [r7]
   34fb8:	ldr	r3, [r4, #52]	; 0x34
   34fbc:	ldr	r1, [r3]
   34fc0:	bl	1694 <fseek@plt>
   34fc4:	ldr	r3, [r4, #48]	; 0x30
   34fc8:	cmp	r3, #1
   34fcc:	bne	35130 <Mat_VarRead5+0x7e4>
   34fd0:	ldr	r3, [r4, #52]	; 0x34
   34fd4:	mov	r2, fp
   34fd8:	mov	r0, r5
   34fdc:	ldr	r1, [r3, #12]
   34fe0:	str	r6, [r1, #4]
   34fe4:	bl	2c70 <InflateDataType>
   34fe8:	ldr	r3, [r5, #20]
   34fec:	cmp	r3, #0
   34ff0:	beq	34ffc <Mat_VarRead5+0x6b0>
   34ff4:	mov	r0, fp
   34ff8:	bl	18cc <Mat_uint32Swap>
   34ffc:	ldr	r3, [sp, #32]
   35000:	ldr	r2, [pc, #2288]	; 358f8 <Mat_VarRead5+0xfac>
   35004:	uxtb	r6, r3
   35008:	cmp	r6, #25
   3500c:	movcs	r6, #0
   35010:	ands	r8, r3, r2
   35014:	mov	r2, #1
   35018:	beq	3502c <Mat_VarRead5+0x6e0>
   3501c:	lsr	r3, r3, #16
   35020:	mov	r8, #1
   35024:	str	r3, [sp, #28]
   35028:	b	35048 <Mat_VarRead5+0x6fc>
   3502c:	ldr	r1, [r4, #52]	; 0x34
   35030:	mov	r3, #5
   35034:	mov	r0, r5
   35038:	str	r2, [sp]
   3503c:	add	r2, sp, #28
   35040:	ldr	r1, [r1, #12]
   35044:	bl	11680 <ReadCompressedInt32Data>
   35048:	ldr	r9, [sp, #28]
   3504c:	cmp	r9, #0
   35050:	add	r3, r9, #3
   35054:	movlt	r9, r3
   35058:	asr	r9, r9, #2
   3505c:	lsl	r0, r9, #2
   35060:	str	r9, [r7, #8]
   35064:	bl	1544 <malloc@plt>
   35068:	cmp	r0, #0
   3506c:	mov	r1, r0
   35070:	str	r0, [r7, #4]
   35074:	beq	35208 <Mat_VarRead5+0x8bc>
   35078:	ldr	r3, [r4, #48]	; 0x30
   3507c:	cmp	r3, #0
   35080:	bne	351a8 <Mat_VarRead5+0x85c>
   35084:	mov	r2, r6
   35088:	mov	r3, r9
   3508c:	mov	r0, r5
   35090:	bl	1165c <ReadInt32Data>
   35094:	cmp	r8, #0
   35098:	mov	r6, r0
   3509c:	addne	r6, r0, #4
   350a0:	ands	r1, r6, #7
   350a4:	beq	350c4 <Mat_VarRead5+0x778>
   350a8:	rsbs	r3, r6, #0
   350ac:	mov	r2, #1
   350b0:	ldr	r0, [r5]
   350b4:	and	r3, r3, #7
   350b8:	rsbpl	r1, r3, #0
   350bc:	rsb	r1, r1, #8
   350c0:	bl	1694 <fseek@plt>
   350c4:	ldr	r3, [r4, #48]	; 0x30
   350c8:	cmp	r3, #1
   350cc:	bne	353a4 <Mat_VarRead5+0xa58>
   350d0:	ldr	r3, [r4, #52]	; 0x34
   350d4:	mov	r2, fp
   350d8:	mov	r0, r5
   350dc:	ldr	r1, [r3, #12]
   350e0:	mov	r3, #0
   350e4:	str	r3, [r1, #4]
   350e8:	bl	2c70 <InflateDataType>
   350ec:	ldr	r3, [r5, #20]
   350f0:	cmp	r3, #0
   350f4:	beq	35100 <Mat_VarRead5+0x7b4>
   350f8:	mov	r0, fp
   350fc:	bl	18cc <Mat_uint32Swap>
   35100:	ldr	r3, [sp, #32]
   35104:	ldr	r2, [pc, #2028]	; 358f8 <Mat_VarRead5+0xfac>
   35108:	uxtb	r9, r3
   3510c:	cmp	r9, #25
   35110:	movcs	r9, #0
   35114:	ands	r8, r3, r2
   35118:	mov	r2, #1
   3511c:	beq	35214 <Mat_VarRead5+0x8c8>
   35120:	lsr	r3, r3, #16
   35124:	mov	r8, #1
   35128:	str	r3, [sp, #28]
   3512c:	b	35230 <Mat_VarRead5+0x8e4>
   35130:	mov	r2, #1
   35134:	mov	r1, #4
   35138:	ldr	r3, [r5]
   3513c:	mov	r0, fp
   35140:	bl	1520 <fread@plt>
   35144:	ldr	r3, [r5, #20]
   35148:	cmp	r3, #0
   3514c:	beq	35158 <Mat_VarRead5+0x80c>
   35150:	mov	r0, fp
   35154:	bl	18cc <Mat_uint32Swap>
   35158:	ldr	r3, [sp, #32]
   3515c:	ldr	r2, [pc, #1940]	; 358f8 <Mat_VarRead5+0xfac>
   35160:	uxtb	r6, r3
   35164:	cmp	r6, #25
   35168:	movcs	r6, #0
   3516c:	ands	sl, r3, r2
   35170:	bne	3501c <Mat_VarRead5+0x6d0>
   35174:	add	r9, sp, #28
   35178:	mov	r2, #1
   3517c:	ldr	r3, [r5]
   35180:	mov	r1, #4
   35184:	mov	r0, r9
   35188:	bl	1520 <fread@plt>
   3518c:	ldr	r8, [r5, #20]
   35190:	cmp	r8, #0
   35194:	beq	35048 <Mat_VarRead5+0x6fc>
   35198:	mov	r0, r9
   3519c:	mov	r8, sl
   351a0:	bl	189c <Mat_int32Swap>
   351a4:	b	35048 <Mat_VarRead5+0x6fc>
   351a8:	cmp	r3, #1
   351ac:	movne	r6, #0
   351b0:	bne	350c4 <Mat_VarRead5+0x778>
   351b4:	mov	r2, r0
   351b8:	ldr	r0, [r4, #52]	; 0x34
   351bc:	mov	r3, r6
   351c0:	str	r9, [sp]
   351c4:	ldr	r1, [r0, #12]
   351c8:	mov	r0, r5
   351cc:	bl	11680 <ReadCompressedInt32Data>
   351d0:	cmp	r8, #0
   351d4:	mov	r6, r0
   351d8:	addne	r6, r0, #4
   351dc:	ands	r2, r6, #7
   351e0:	beq	350c4 <Mat_VarRead5+0x778>
   351e4:	rsbs	r3, r6, #0
   351e8:	mov	r0, r5
   351ec:	and	r3, r3, #7
   351f0:	rsbpl	r2, r3, #0
   351f4:	ldr	r3, [r4, #52]	; 0x34
   351f8:	rsb	r2, r2, #8
   351fc:	ldr	r1, [r3, #12]
   35200:	bl	1e78 <InflateSkip>
   35204:	b	350c4 <Mat_VarRead5+0x778>
   35208:	ldr	r0, [pc, #1756]	; 358ec <Mat_VarRead5+0xfa0>
   3520c:	add	r0, pc, r0
   35210:	b	34dcc <Mat_VarRead5+0x480>
   35214:	ldr	r1, [r4, #52]	; 0x34
   35218:	mov	r3, #5
   3521c:	mov	r0, r5
   35220:	str	r2, [sp]
   35224:	add	r2, sp, #28
   35228:	ldr	r1, [r1, #12]
   3522c:	bl	11680 <ReadCompressedInt32Data>
   35230:	ldr	sl, [sp, #28]
   35234:	cmp	sl, #0
   35238:	add	r3, sl, #3
   3523c:	movlt	sl, r3
   35240:	asr	sl, sl, #2
   35244:	lsl	r0, sl, #2
   35248:	str	sl, [r7, #16]
   3524c:	bl	1544 <malloc@plt>
   35250:	cmp	r0, #0
   35254:	mov	r1, r0
   35258:	str	r0, [r7, #12]
   3525c:	beq	3547c <Mat_VarRead5+0xb30>
   35260:	ldr	r3, [r4, #48]	; 0x30
   35264:	cmp	r3, #0
   35268:	bne	35420 <Mat_VarRead5+0xad4>
   3526c:	mov	r3, sl
   35270:	mov	r2, r9
   35274:	mov	r0, r5
   35278:	bl	1165c <ReadInt32Data>
   3527c:	cmp	r8, #0
   35280:	mov	r6, r0
   35284:	addne	r6, r0, #4
   35288:	ands	r1, r6, #7
   3528c:	beq	352ac <Mat_VarRead5+0x960>
   35290:	rsbs	r3, r6, #0
   35294:	mov	r2, #1
   35298:	ldr	r0, [r5]
   3529c:	and	r3, r3, #7
   352a0:	rsbpl	r1, r3, #0
   352a4:	rsb	r1, r1, #8
   352a8:	bl	1694 <fseek@plt>
   352ac:	ldr	r3, [r4, #48]	; 0x30
   352b0:	cmp	r3, #1
   352b4:	bne	35488 <Mat_VarRead5+0xb3c>
   352b8:	ldr	r3, [r4, #52]	; 0x34
   352bc:	mov	r2, fp
   352c0:	mov	r0, r5
   352c4:	ldr	r1, [r3, #12]
   352c8:	mov	r3, #0
   352cc:	str	r3, [r1, #4]
   352d0:	bl	2c70 <InflateDataType>
   352d4:	ldr	r3, [r5, #20]
   352d8:	cmp	r3, #0
   352dc:	beq	352e8 <Mat_VarRead5+0x99c>
   352e0:	mov	r0, fp
   352e4:	bl	18cc <Mat_uint32Swap>
   352e8:	ldr	r3, [sp, #32]
   352ec:	ldr	r2, [pc, #1540]	; 358f8 <Mat_VarRead5+0xfac>
   352f0:	uxtb	r8, r3
   352f4:	cmp	r8, #25
   352f8:	movcs	r8, #0
   352fc:	ands	r9, r3, r2
   35300:	lsrne	r3, r3, #16
   35304:	mov	r2, #1
   35308:	strne	r2, [sp, #12]
   3530c:	strne	r3, [sp, #28]
   35310:	bne	35334 <Mat_VarRead5+0x9e8>
   35314:	ldr	r1, [r4, #52]	; 0x34
   35318:	mov	r3, #5
   3531c:	mov	r0, r5
   35320:	str	r2, [sp]
   35324:	add	r2, sp, #28
   35328:	ldr	r1, [r1, #12]
   3532c:	bl	11680 <ReadCompressedInt32Data>
   35330:	str	r9, [sp, #12]
   35334:	ldr	r2, [r4, #28]
   35338:	sub	r3, r8, #9
   3533c:	clz	r3, r3
   35340:	lsr	r3, r3, #5
   35344:	cmp	r2, #0
   35348:	moveq	r3, #0
   3534c:	cmp	r3, #0
   35350:	movne	r8, #2
   35354:	mov	r0, r8
   35358:	str	r8, [r4, #8]
   3535c:	bl	1598 <Mat_SizeOf@plt>
   35360:	cmp	r0, #0
   35364:	beq	34a9c <Mat_VarRead5+0x150>
   35368:	ldr	r9, [sp, #28]
   3536c:	ldr	r3, [r4, #20]
   35370:	udiv	r9, r9, r0
   35374:	ldr	r0, [r4, #8]
   35378:	cmp	r3, #0
   3537c:	str	r9, [r7, #20]
   35380:	beq	35ca0 <Mat_VarRead5+0x1354>
   35384:	bl	1598 <Mat_SizeOf@plt>
   35388:	mul	r0, r0, r9
   3538c:	bl	3a7c8 <ComplexMalloc>
   35390:	subs	r9, r0, #0
   35394:	bne	35518 <Mat_VarRead5+0xbcc>
   35398:	ldr	r0, [pc, #1360]	; 358f0 <Mat_VarRead5+0xfa4>
   3539c:	add	r0, pc, r0
   353a0:	b	34dcc <Mat_VarRead5+0x480>
   353a4:	mov	r2, #1
   353a8:	mov	r1, #4
   353ac:	ldr	r3, [r5]
   353b0:	mov	r0, fp
   353b4:	bl	1520 <fread@plt>
   353b8:	ldr	r3, [r5, #20]
   353bc:	cmp	r3, #0
   353c0:	beq	353cc <Mat_VarRead5+0xa80>
   353c4:	mov	r0, fp
   353c8:	bl	18cc <Mat_uint32Swap>
   353cc:	ldr	r3, [sp, #32]
   353d0:	ldr	r2, [pc, #1312]	; 358f8 <Mat_VarRead5+0xfac>
   353d4:	uxtb	r9, r3
   353d8:	cmp	r9, #25
   353dc:	movcs	r9, #0
   353e0:	ands	r2, r3, r2
   353e4:	str	r2, [sp, #12]
   353e8:	bne	35120 <Mat_VarRead5+0x7d4>
   353ec:	add	sl, sp, #28
   353f0:	mov	r2, #1
   353f4:	ldr	r3, [r5]
   353f8:	mov	r1, #4
   353fc:	mov	r0, sl
   35400:	bl	1520 <fread@plt>
   35404:	ldr	r8, [r5, #20]
   35408:	cmp	r8, #0
   3540c:	beq	35230 <Mat_VarRead5+0x8e4>
   35410:	mov	r0, sl
   35414:	bl	189c <Mat_int32Swap>
   35418:	ldr	r8, [sp, #12]
   3541c:	b	35230 <Mat_VarRead5+0x8e4>
   35420:	cmp	r3, #1
   35424:	bne	352ac <Mat_VarRead5+0x960>
   35428:	mov	r2, r0
   3542c:	ldr	r0, [r4, #52]	; 0x34
   35430:	mov	r3, r9
   35434:	str	sl, [sp]
   35438:	ldr	r1, [r0, #12]
   3543c:	mov	r0, r5
   35440:	bl	11680 <ReadCompressedInt32Data>
   35444:	cmp	r8, #0
   35448:	mov	r6, r0
   3544c:	addne	r6, r0, #4
   35450:	ands	r2, r6, #7
   35454:	beq	352ac <Mat_VarRead5+0x960>
   35458:	rsbs	r3, r6, #0
   3545c:	mov	r0, r5
   35460:	and	r3, r3, #7
   35464:	rsbpl	r2, r3, #0
   35468:	ldr	r3, [r4, #52]	; 0x34
   3546c:	rsb	r2, r2, #8
   35470:	ldr	r1, [r3, #12]
   35474:	bl	1e78 <InflateSkip>
   35478:	b	352ac <Mat_VarRead5+0x960>
   3547c:	ldr	r0, [pc, #1136]	; 358f4 <Mat_VarRead5+0xfa8>
   35480:	add	r0, pc, r0
   35484:	b	34dcc <Mat_VarRead5+0x480>
   35488:	mov	r2, #1
   3548c:	mov	r1, #4
   35490:	ldr	r3, [r5]
   35494:	mov	r0, fp
   35498:	bl	1520 <fread@plt>
   3549c:	ldr	r3, [r5, #20]
   354a0:	cmp	r3, #0
   354a4:	beq	354b0 <Mat_VarRead5+0xb64>
   354a8:	mov	r0, fp
   354ac:	bl	18cc <Mat_uint32Swap>
   354b0:	ldr	r3, [sp, #32]
   354b4:	ldr	r2, [pc, #1084]	; 358f8 <Mat_VarRead5+0xfac>
   354b8:	uxtb	r8, r3
   354bc:	cmp	r8, #25
   354c0:	movcs	r8, #0
   354c4:	ands	sl, r3, r2
   354c8:	beq	354e0 <Mat_VarRead5+0xb94>
   354cc:	lsr	r3, r3, #16
   354d0:	str	r3, [sp, #28]
   354d4:	mov	r3, #1
   354d8:	str	r3, [sp, #12]
   354dc:	b	35334 <Mat_VarRead5+0x9e8>
   354e0:	add	r9, sp, #28
   354e4:	mov	r2, #1
   354e8:	ldr	r3, [r5]
   354ec:	mov	r1, #4
   354f0:	mov	r0, r9
   354f4:	bl	1520 <fread@plt>
   354f8:	ldr	r3, [r5, #20]
   354fc:	cmp	r3, #0
   35500:	str	r3, [sp, #12]
   35504:	beq	35334 <Mat_VarRead5+0x9e8>
   35508:	mov	r0, r9
   3550c:	bl	189c <Mat_int32Swap>
   35510:	str	sl, [sp, #12]
   35514:	b	35334 <Mat_VarRead5+0x9e8>
   35518:	ldr	sl, [r4, #48]	; 0x30
   3551c:	cmp	sl, #0
   35520:	bne	35878 <Mat_VarRead5+0xf2c>
   35524:	ldr	r3, [r4, #8]
   35528:	sub	r3, r3, #1
   3552c:	cmp	r3, #12
   35530:	addls	pc, pc, r3, lsl #2
   35534:	b	35584 <Mat_VarRead5+0xc38>
   35538:	b	35724 <Mat_VarRead5+0xdd8>
   3553c:	b	3573c <Mat_VarRead5+0xdf0>
   35540:	b	356f4 <Mat_VarRead5+0xda8>
   35544:	b	3570c <Mat_VarRead5+0xdc0>
   35548:	b	356c4 <Mat_VarRead5+0xd78>
   3554c:	b	356dc <Mat_VarRead5+0xd90>
   35550:	b	3567c <Mat_VarRead5+0xd30>
   35554:	b	35584 <Mat_VarRead5+0xc38>
   35558:	b	3556c <Mat_VarRead5+0xc20>
   3555c:	b	35584 <Mat_VarRead5+0xc38>
   35560:	b	35584 <Mat_VarRead5+0xc38>
   35564:	b	35694 <Mat_VarRead5+0xd48>
   35568:	b	356ac <Mat_VarRead5+0xd60>
   3556c:	mov	r2, r8
   35570:	mov	r0, r5
   35574:	ldr	r1, [r9]
   35578:	ldr	r3, [r7, #20]
   3557c:	bl	f568 <ReadDoubleData>
   35580:	mov	r6, r0
   35584:	ldr	r3, [sp, #12]
   35588:	cmp	r3, #0
   3558c:	addne	r6, r6, #4
   35590:	ands	r1, r6, #7
   35594:	beq	355b4 <Mat_VarRead5+0xc68>
   35598:	rsbs	r6, r6, #0
   3559c:	mov	r2, #1
   355a0:	ldr	r0, [r5]
   355a4:	and	r6, r6, #7
   355a8:	rsbpl	r1, r6, #0
   355ac:	rsb	r1, r1, #8
   355b0:	bl	1694 <fseek@plt>
   355b4:	mov	r2, #1
   355b8:	mov	r1, #4
   355bc:	ldr	r3, [r5]
   355c0:	mov	r0, fp
   355c4:	bl	1520 <fread@plt>
   355c8:	ldr	r3, [sp, #8]
   355cc:	cmp	r3, #0
   355d0:	beq	355dc <Mat_VarRead5+0xc90>
   355d4:	mov	r0, fp
   355d8:	bl	18cc <Mat_uint32Swap>
   355dc:	ldr	r0, [sp, #32]
   355e0:	uxtb	r3, r0
   355e4:	cmp	r3, #24
   355e8:	movls	sl, r3
   355ec:	ldr	r3, [pc, #772]	; 358f8 <Mat_VarRead5+0xfac>
   355f0:	tst	r0, r3
   355f4:	movne	r3, #1
   355f8:	lsrne	r0, r0, #16
   355fc:	strne	r3, [sp, #16]
   35600:	bne	35634 <Mat_VarRead5+0xce8>
   35604:	add	r6, sp, #36	; 0x24
   35608:	mov	r2, #1
   3560c:	ldr	r3, [r5]
   35610:	mov	r1, #4
   35614:	mov	r0, r6
   35618:	bl	1520 <fread@plt>
   3561c:	ldr	r3, [sp, #8]
   35620:	cmp	r3, #0
   35624:	beq	35630 <Mat_VarRead5+0xce4>
   35628:	mov	r0, r6
   3562c:	bl	18cc <Mat_uint32Swap>
   35630:	ldr	r0, [sp, #36]	; 0x24
   35634:	ldr	r3, [r4, #8]
   35638:	sub	r3, r3, #1
   3563c:	cmp	r3, #12
   35640:	addls	pc, pc, r3, lsl #2
   35644:	b	35768 <Mat_VarRead5+0xe1c>
   35648:	b	35848 <Mat_VarRead5+0xefc>
   3564c:	b	35860 <Mat_VarRead5+0xf14>
   35650:	b	35818 <Mat_VarRead5+0xecc>
   35654:	b	35830 <Mat_VarRead5+0xee4>
   35658:	b	357e8 <Mat_VarRead5+0xe9c>
   3565c:	b	35800 <Mat_VarRead5+0xeb4>
   35660:	b	357a0 <Mat_VarRead5+0xe54>
   35664:	b	35768 <Mat_VarRead5+0xe1c>
   35668:	b	35754 <Mat_VarRead5+0xe08>
   3566c:	b	35768 <Mat_VarRead5+0xe1c>
   35670:	b	35768 <Mat_VarRead5+0xe1c>
   35674:	b	357b8 <Mat_VarRead5+0xe6c>
   35678:	b	357d0 <Mat_VarRead5+0xe84>
   3567c:	mov	r2, r8
   35680:	mov	r0, r5
   35684:	ldr	r1, [r9]
   35688:	ldr	r3, [r7, #20]
   3568c:	bl	106cc <ReadSingleData>
   35690:	b	35580 <Mat_VarRead5+0xc34>
   35694:	mov	r2, r8
   35698:	mov	r0, r5
   3569c:	ldr	r1, [r9]
   356a0:	ldr	r3, [r7, #20]
   356a4:	bl	10bec <ReadInt64Data>
   356a8:	b	35580 <Mat_VarRead5+0xc34>
   356ac:	mov	r2, r8
   356b0:	mov	r0, r5
   356b4:	ldr	r1, [r9]
   356b8:	ldr	r3, [r7, #20]
   356bc:	bl	11124 <ReadUInt64Data>
   356c0:	b	35580 <Mat_VarRead5+0xc34>
   356c4:	mov	r2, r8
   356c8:	mov	r0, r5
   356cc:	ldr	r1, [r9]
   356d0:	ldr	r3, [r7, #20]
   356d4:	bl	1165c <ReadInt32Data>
   356d8:	b	35580 <Mat_VarRead5+0xc34>
   356dc:	mov	r2, r8
   356e0:	mov	r0, r5
   356e4:	ldr	r1, [r9]
   356e8:	ldr	r3, [r7, #20]
   356ec:	bl	11b64 <ReadUInt32Data>
   356f0:	b	35580 <Mat_VarRead5+0xc34>
   356f4:	mov	r2, r8
   356f8:	mov	r0, r5
   356fc:	ldr	r1, [r9]
   35700:	ldr	r3, [r7, #20]
   35704:	bl	1206c <ReadInt16Data>
   35708:	b	35580 <Mat_VarRead5+0xc34>
   3570c:	mov	r2, r8
   35710:	mov	r0, r5
   35714:	ldr	r1, [r9]
   35718:	ldr	r3, [r7, #20]
   3571c:	bl	12574 <ReadUInt16Data>
   35720:	b	35580 <Mat_VarRead5+0xc34>
   35724:	mov	r2, r8
   35728:	mov	r0, r5
   3572c:	ldr	r1, [r9]
   35730:	ldr	r3, [r7, #20]
   35734:	bl	12a7c <ReadInt8Data>
   35738:	b	35580 <Mat_VarRead5+0xc34>
   3573c:	mov	r2, r8
   35740:	mov	r0, r5
   35744:	ldr	r1, [r9]
   35748:	ldr	r3, [r7, #20]
   3574c:	bl	12f84 <ReadUInt8Data>
   35750:	b	35580 <Mat_VarRead5+0xc34>
   35754:	mov	r2, sl
   35758:	mov	r0, r5
   3575c:	ldr	r1, [r9, #4]
   35760:	ldr	r3, [r7, #20]
   35764:	bl	f568 <ReadDoubleData>
   35768:	ldr	r3, [sp, #16]
   3576c:	cmp	r3, #0
   35770:	addne	r0, r0, #4
   35774:	ands	r1, r0, #7
   35778:	beq	35798 <Mat_VarRead5+0xe4c>
   3577c:	rsbs	r0, r0, #0
   35780:	mov	r2, #1
   35784:	and	r0, r0, #7
   35788:	rsbpl	r1, r0, #0
   3578c:	ldr	r0, [r5]
   35790:	rsb	r1, r1, #8
   35794:	bl	1694 <fseek@plt>
   35798:	str	r9, [r7, #24]
   3579c:	b	34a9c <Mat_VarRead5+0x150>
   357a0:	mov	r2, sl
   357a4:	mov	r0, r5
   357a8:	ldr	r1, [r9, #4]
   357ac:	ldr	r3, [r7, #20]
   357b0:	bl	106cc <ReadSingleData>
   357b4:	b	35768 <Mat_VarRead5+0xe1c>
   357b8:	mov	r2, sl
   357bc:	mov	r0, r5
   357c0:	ldr	r1, [r9, #4]
   357c4:	ldr	r3, [r7, #20]
   357c8:	bl	10bec <ReadInt64Data>
   357cc:	b	35768 <Mat_VarRead5+0xe1c>
   357d0:	mov	r2, sl
   357d4:	mov	r0, r5
   357d8:	ldr	r1, [r9, #4]
   357dc:	ldr	r3, [r7, #20]
   357e0:	bl	11124 <ReadUInt64Data>
   357e4:	b	35768 <Mat_VarRead5+0xe1c>
   357e8:	mov	r2, sl
   357ec:	mov	r0, r5
   357f0:	ldr	r1, [r9, #4]
   357f4:	ldr	r3, [r7, #20]
   357f8:	bl	1165c <ReadInt32Data>
   357fc:	b	35768 <Mat_VarRead5+0xe1c>
   35800:	mov	r2, sl
   35804:	mov	r0, r5
   35808:	ldr	r1, [r9, #4]
   3580c:	ldr	r3, [r7, #20]
   35810:	bl	11b64 <ReadUInt32Data>
   35814:	b	35768 <Mat_VarRead5+0xe1c>
   35818:	mov	r2, sl
   3581c:	mov	r0, r5
   35820:	ldr	r1, [r9, #4]
   35824:	ldr	r3, [r7, #20]
   35828:	bl	1206c <ReadInt16Data>
   3582c:	b	35768 <Mat_VarRead5+0xe1c>
   35830:	mov	r2, sl
   35834:	mov	r0, r5
   35838:	ldr	r1, [r9, #4]
   3583c:	ldr	r3, [r7, #20]
   35840:	bl	12574 <ReadUInt16Data>
   35844:	b	35768 <Mat_VarRead5+0xe1c>
   35848:	mov	r2, sl
   3584c:	mov	r0, r5
   35850:	ldr	r1, [r9, #4]
   35854:	ldr	r3, [r7, #20]
   35858:	bl	12a7c <ReadInt8Data>
   3585c:	b	35768 <Mat_VarRead5+0xe1c>
   35860:	mov	r2, sl
   35864:	mov	r0, r5
   35868:	ldr	r1, [r9, #4]
   3586c:	ldr	r3, [r7, #20]
   35870:	bl	12f84 <ReadUInt8Data>
   35874:	b	35768 <Mat_VarRead5+0xe1c>
   35878:	cmp	sl, #1
   3587c:	bne	35798 <Mat_VarRead5+0xe4c>
   35880:	ldr	r3, [r4, #52]	; 0x34
   35884:	ldr	r1, [r3, #12]
   35888:	ldr	r3, [r4, #8]
   3588c:	sub	r3, r3, #1
   35890:	cmp	r3, #12
   35894:	addls	pc, pc, r3, lsl #2
   35898:	b	35924 <Mat_VarRead5+0xfd8>
   3589c:	b	35af4 <Mat_VarRead5+0x11a8>
   358a0:	b	35b10 <Mat_VarRead5+0x11c4>
   358a4:	b	35abc <Mat_VarRead5+0x1170>
   358a8:	b	35ad8 <Mat_VarRead5+0x118c>
   358ac:	b	35a84 <Mat_VarRead5+0x1138>
   358b0:	b	35aa0 <Mat_VarRead5+0x1154>
   358b4:	b	35a30 <Mat_VarRead5+0x10e4>
   358b8:	b	35924 <Mat_VarRead5+0xfd8>
   358bc:	b	35908 <Mat_VarRead5+0xfbc>
   358c0:	b	35924 <Mat_VarRead5+0xfd8>
   358c4:	b	35924 <Mat_VarRead5+0xfd8>
   358c8:	b	35a4c <Mat_VarRead5+0x1100>
   358cc:	b	35a68 <Mat_VarRead5+0x111c>
   358d0:	.word	0x0000a23d
   358d4:	.word	0x0000a2cb
   358d8:	.word	0x0000a33c
   358dc:	.word	0x00009f9f
   358e0:	.word	0x00009ed3
   358e4:	.word	0x00009da1
   358e8:	.word	0x00009d64
   358ec:	.word	0x00009b24
   358f0:	.word	0x000099f0
   358f4:	.word	0x000098de
   358f8:	.word	0xffff0000
   358fc:	.word	0x00009105
   35900:	.word	0x00008dba
   35904:	.word	0x00008c33
   35908:	ldr	r3, [r7, #20]
   3590c:	mov	r0, r5
   35910:	str	r3, [sp]
   35914:	mov	r3, r8
   35918:	ldr	r2, [r9]
   3591c:	bl	f58c <ReadCompressedDoubleData>
   35920:	mov	r6, r0
   35924:	ldr	r3, [sp, #12]
   35928:	cmp	r3, #0
   3592c:	addne	r6, r6, #4
   35930:	ands	r2, r6, #7
   35934:	beq	35958 <Mat_VarRead5+0x100c>
   35938:	ldr	r3, [r4, #52]	; 0x34
   3593c:	rsbs	r6, r6, #0
   35940:	mov	r0, r5
   35944:	and	r6, r6, #7
   35948:	rsbpl	r2, r6, #0
   3594c:	rsb	r2, r2, #8
   35950:	ldr	r1, [r3, #12]
   35954:	bl	1e78 <InflateSkip>
   35958:	ldr	r3, [r4, #52]	; 0x34
   3595c:	mov	r2, fp
   35960:	mov	r0, r5
   35964:	ldr	r1, [r3, #12]
   35968:	bl	2c70 <InflateDataType>
   3596c:	ldr	r3, [sp, #8]
   35970:	cmp	r3, #0
   35974:	beq	35980 <Mat_VarRead5+0x1034>
   35978:	mov	r0, fp
   3597c:	bl	18cc <Mat_uint32Swap>
   35980:	ldr	r0, [sp, #32]
   35984:	ldr	r2, [pc, #-148]	; 358f8 <Mat_VarRead5+0xfac>
   35988:	uxtb	r3, r0
   3598c:	cmp	r3, #25
   35990:	movcs	r3, #0
   35994:	tst	r0, r2
   35998:	movne	r2, #1
   3599c:	lsrne	r0, r0, #16
   359a0:	strne	r2, [sp, #16]
   359a4:	bne	359e8 <Mat_VarRead5+0x109c>
   359a8:	ldr	r1, [r4, #52]	; 0x34
   359ac:	add	r6, sp, #36	; 0x24
   359b0:	mov	r0, r5
   359b4:	mov	r2, r6
   359b8:	str	r3, [sp, #12]
   359bc:	ldr	r1, [r1, #12]
   359c0:	bl	2c70 <InflateDataType>
   359c4:	ldr	r3, [sp, #8]
   359c8:	cmp	r3, #0
   359cc:	ldr	r3, [sp, #12]
   359d0:	beq	359e4 <Mat_VarRead5+0x1098>
   359d4:	mov	r0, r6
   359d8:	str	r3, [sp, #8]
   359dc:	bl	18cc <Mat_uint32Swap>
   359e0:	ldr	r3, [sp, #8]
   359e4:	ldr	r0, [sp, #36]	; 0x24
   359e8:	ldr	r2, [r4, #8]
   359ec:	sub	r2, r2, #1
   359f0:	cmp	r2, #12
   359f4:	addls	pc, pc, r2, lsl #2
   359f8:	b	35b48 <Mat_VarRead5+0x11fc>
   359fc:	b	35c60 <Mat_VarRead5+0x1314>
   35a00:	b	35c80 <Mat_VarRead5+0x1334>
   35a04:	b	35c20 <Mat_VarRead5+0x12d4>
   35a08:	b	35c40 <Mat_VarRead5+0x12f4>
   35a0c:	b	35be0 <Mat_VarRead5+0x1294>
   35a10:	b	35c00 <Mat_VarRead5+0x12b4>
   35a14:	b	35b80 <Mat_VarRead5+0x1234>
   35a18:	b	35b48 <Mat_VarRead5+0x11fc>
   35a1c:	b	35b2c <Mat_VarRead5+0x11e0>
   35a20:	b	35b48 <Mat_VarRead5+0x11fc>
   35a24:	b	35b48 <Mat_VarRead5+0x11fc>
   35a28:	b	35ba0 <Mat_VarRead5+0x1254>
   35a2c:	b	35bc0 <Mat_VarRead5+0x1274>
   35a30:	ldr	r3, [r7, #20]
   35a34:	mov	r0, r5
   35a38:	str	r3, [sp]
   35a3c:	mov	r3, r8
   35a40:	ldr	r2, [r9]
   35a44:	bl	106f0 <ReadCompressedSingleData>
   35a48:	b	35920 <Mat_VarRead5+0xfd4>
   35a4c:	ldr	r3, [r7, #20]
   35a50:	mov	r0, r5
   35a54:	str	r3, [sp]
   35a58:	mov	r3, r8
   35a5c:	ldr	r2, [r9]
   35a60:	bl	10c10 <ReadCompressedInt64Data>
   35a64:	b	35920 <Mat_VarRead5+0xfd4>
   35a68:	ldr	r3, [r7, #20]
   35a6c:	mov	r0, r5
   35a70:	str	r3, [sp]
   35a74:	mov	r3, r8
   35a78:	ldr	r2, [r9]
   35a7c:	bl	11148 <ReadCompressedUInt64Data>
   35a80:	b	35920 <Mat_VarRead5+0xfd4>
   35a84:	ldr	r3, [r7, #20]
   35a88:	mov	r0, r5
   35a8c:	str	r3, [sp]
   35a90:	mov	r3, r8
   35a94:	ldr	r2, [r9]
   35a98:	bl	11680 <ReadCompressedInt32Data>
   35a9c:	b	35920 <Mat_VarRead5+0xfd4>
   35aa0:	ldr	r3, [r7, #20]
   35aa4:	mov	r0, r5
   35aa8:	str	r3, [sp]
   35aac:	mov	r3, r8
   35ab0:	ldr	r2, [r9]
   35ab4:	bl	11b88 <ReadCompressedUInt32Data>
   35ab8:	b	35920 <Mat_VarRead5+0xfd4>
   35abc:	ldr	r3, [r7, #20]
   35ac0:	mov	r0, r5
   35ac4:	str	r3, [sp]
   35ac8:	mov	r3, r8
   35acc:	ldr	r2, [r9]
   35ad0:	bl	12090 <ReadCompressedInt16Data>
   35ad4:	b	35920 <Mat_VarRead5+0xfd4>
   35ad8:	ldr	r3, [r7, #20]
   35adc:	mov	r0, r5
   35ae0:	str	r3, [sp]
   35ae4:	mov	r3, r8
   35ae8:	ldr	r2, [r9]
   35aec:	bl	12598 <ReadCompressedUInt16Data>
   35af0:	b	35920 <Mat_VarRead5+0xfd4>
   35af4:	ldr	r3, [r7, #20]
   35af8:	mov	r0, r5
   35afc:	str	r3, [sp]
   35b00:	mov	r3, r8
   35b04:	ldr	r2, [r9]
   35b08:	bl	12aa0 <ReadCompressedInt8Data>
   35b0c:	b	35920 <Mat_VarRead5+0xfd4>
   35b10:	ldr	r3, [r7, #20]
   35b14:	mov	r0, r5
   35b18:	str	r3, [sp]
   35b1c:	mov	r3, r8
   35b20:	ldr	r2, [r9]
   35b24:	bl	12fa8 <ReadCompressedUInt8Data>
   35b28:	b	35920 <Mat_VarRead5+0xfd4>
   35b2c:	ldr	r2, [r7, #20]
   35b30:	mov	r0, r5
   35b34:	ldr	r1, [r4, #52]	; 0x34
   35b38:	str	r2, [sp]
   35b3c:	ldr	r2, [r9, #4]
   35b40:	ldr	r1, [r1, #12]
   35b44:	bl	f58c <ReadCompressedDoubleData>
   35b48:	ldr	r3, [sp, #16]
   35b4c:	cmp	r3, #0
   35b50:	addne	r0, r0, #4
   35b54:	ands	r2, r0, #7
   35b58:	beq	35798 <Mat_VarRead5+0xe4c>
   35b5c:	ldr	r3, [r4, #52]	; 0x34
   35b60:	rsbs	r0, r0, #0
   35b64:	and	r0, r0, #7
   35b68:	rsbpl	r2, r0, #0
   35b6c:	mov	r0, r5
   35b70:	rsb	r2, r2, #8
   35b74:	ldr	r1, [r3, #12]
   35b78:	bl	1e78 <InflateSkip>
   35b7c:	b	35798 <Mat_VarRead5+0xe4c>
   35b80:	ldr	r2, [r7, #20]
   35b84:	mov	r0, r5
   35b88:	ldr	r1, [r4, #52]	; 0x34
   35b8c:	str	r2, [sp]
   35b90:	ldr	r2, [r9, #4]
   35b94:	ldr	r1, [r1, #12]
   35b98:	bl	106f0 <ReadCompressedSingleData>
   35b9c:	b	35b48 <Mat_VarRead5+0x11fc>
   35ba0:	ldr	r2, [r7, #20]
   35ba4:	mov	r0, r5
   35ba8:	ldr	r1, [r4, #52]	; 0x34
   35bac:	str	r2, [sp]
   35bb0:	ldr	r2, [r9, #4]
   35bb4:	ldr	r1, [r1, #12]
   35bb8:	bl	10c10 <ReadCompressedInt64Data>
   35bbc:	b	35b48 <Mat_VarRead5+0x11fc>
   35bc0:	ldr	r2, [r7, #20]
   35bc4:	mov	r0, r5
   35bc8:	ldr	r1, [r4, #52]	; 0x34
   35bcc:	str	r2, [sp]
   35bd0:	ldr	r2, [r9, #4]
   35bd4:	ldr	r1, [r1, #12]
   35bd8:	bl	11148 <ReadCompressedUInt64Data>
   35bdc:	b	35b48 <Mat_VarRead5+0x11fc>
   35be0:	ldr	r2, [r7, #20]
   35be4:	mov	r0, r5
   35be8:	ldr	r1, [r4, #52]	; 0x34
   35bec:	str	r2, [sp]
   35bf0:	ldr	r2, [r9, #4]
   35bf4:	ldr	r1, [r1, #12]
   35bf8:	bl	11680 <ReadCompressedInt32Data>
   35bfc:	b	35b48 <Mat_VarRead5+0x11fc>
   35c00:	ldr	r2, [r7, #20]
   35c04:	mov	r0, r5
   35c08:	ldr	r1, [r4, #52]	; 0x34
   35c0c:	str	r2, [sp]
   35c10:	ldr	r2, [r9, #4]
   35c14:	ldr	r1, [r1, #12]
   35c18:	bl	11b88 <ReadCompressedUInt32Data>
   35c1c:	b	35b48 <Mat_VarRead5+0x11fc>
   35c20:	ldr	r2, [r7, #20]
   35c24:	mov	r0, r5
   35c28:	ldr	r1, [r4, #52]	; 0x34
   35c2c:	str	r2, [sp]
   35c30:	ldr	r2, [r9, #4]
   35c34:	ldr	r1, [r1, #12]
   35c38:	bl	12090 <ReadCompressedInt16Data>
   35c3c:	b	35b48 <Mat_VarRead5+0x11fc>
   35c40:	ldr	r2, [r7, #20]
   35c44:	mov	r0, r5
   35c48:	ldr	r1, [r4, #52]	; 0x34
   35c4c:	str	r2, [sp]
   35c50:	ldr	r2, [r9, #4]
   35c54:	ldr	r1, [r1, #12]
   35c58:	bl	12598 <ReadCompressedUInt16Data>
   35c5c:	b	35b48 <Mat_VarRead5+0x11fc>
   35c60:	ldr	r2, [r7, #20]
   35c64:	mov	r0, r5
   35c68:	ldr	r1, [r4, #52]	; 0x34
   35c6c:	str	r2, [sp]
   35c70:	ldr	r2, [r9, #4]
   35c74:	ldr	r1, [r1, #12]
   35c78:	bl	12aa0 <ReadCompressedInt8Data>
   35c7c:	b	35b48 <Mat_VarRead5+0x11fc>
   35c80:	ldr	r2, [r7, #20]
   35c84:	mov	r0, r5
   35c88:	ldr	r1, [r4, #52]	; 0x34
   35c8c:	str	r2, [sp]
   35c90:	ldr	r2, [r9, #4]
   35c94:	ldr	r1, [r1, #12]
   35c98:	bl	12fa8 <ReadCompressedUInt8Data>
   35c9c:	b	35b48 <Mat_VarRead5+0x11fc>
   35ca0:	bl	1598 <Mat_SizeOf@plt>
   35ca4:	mul	r0, r0, r9
   35ca8:	bl	1544 <malloc@plt>
   35cac:	cmp	r0, #0
   35cb0:	mov	r1, r0
   35cb4:	str	r0, [r7, #24]
   35cb8:	ldreq	r0, [pc, #-964]	; 358fc <Mat_VarRead5+0xfb0>
   35cbc:	addeq	r0, pc, r0
   35cc0:	beq	34dcc <Mat_VarRead5+0x480>
   35cc4:	ldr	r3, [r4, #48]	; 0x30
   35cc8:	cmp	r3, #0
   35ccc:	bne	35e04 <Mat_VarRead5+0x14b8>
   35cd0:	ldr	r3, [r4, #8]
   35cd4:	sub	r3, r3, #1
   35cd8:	cmp	r3, #12
   35cdc:	addls	pc, pc, r3, lsl #2
   35ce0:	b	35d2c <Mat_VarRead5+0x13e0>
   35ce4:	b	35ddc <Mat_VarRead5+0x1490>
   35ce8:	b	35df0 <Mat_VarRead5+0x14a4>
   35cec:	b	35db4 <Mat_VarRead5+0x1468>
   35cf0:	b	35dc8 <Mat_VarRead5+0x147c>
   35cf4:	b	35d8c <Mat_VarRead5+0x1440>
   35cf8:	b	35da0 <Mat_VarRead5+0x1454>
   35cfc:	b	35d50 <Mat_VarRead5+0x1404>
   35d00:	b	35d2c <Mat_VarRead5+0x13e0>
   35d04:	b	35d18 <Mat_VarRead5+0x13cc>
   35d08:	b	35d2c <Mat_VarRead5+0x13e0>
   35d0c:	b	35d2c <Mat_VarRead5+0x13e0>
   35d10:	b	35d64 <Mat_VarRead5+0x1418>
   35d14:	b	35d78 <Mat_VarRead5+0x142c>
   35d18:	mov	r2, r8
   35d1c:	mov	r0, r5
   35d20:	ldr	r3, [r7, #20]
   35d24:	bl	f568 <ReadDoubleData>
   35d28:	mov	r6, r0
   35d2c:	ldr	r3, [sp, #12]
   35d30:	cmp	r3, #0
   35d34:	addne	r6, r6, #4
   35d38:	ands	r1, r6, #7
   35d3c:	beq	34a9c <Mat_VarRead5+0x150>
   35d40:	rsbs	r6, r6, #0
   35d44:	and	r6, r6, #7
   35d48:	rsbpl	r1, r6, #0
   35d4c:	b	34e44 <Mat_VarRead5+0x4f8>
   35d50:	mov	r2, r8
   35d54:	mov	r0, r5
   35d58:	ldr	r3, [r7, #20]
   35d5c:	bl	106cc <ReadSingleData>
   35d60:	b	35d28 <Mat_VarRead5+0x13dc>
   35d64:	mov	r2, r8
   35d68:	mov	r0, r5
   35d6c:	ldr	r3, [r7, #20]
   35d70:	bl	10bec <ReadInt64Data>
   35d74:	b	35d28 <Mat_VarRead5+0x13dc>
   35d78:	mov	r2, r8
   35d7c:	mov	r0, r5
   35d80:	ldr	r3, [r7, #20]
   35d84:	bl	11124 <ReadUInt64Data>
   35d88:	b	35d28 <Mat_VarRead5+0x13dc>
   35d8c:	mov	r2, r8
   35d90:	mov	r0, r5
   35d94:	ldr	r3, [r7, #20]
   35d98:	bl	1165c <ReadInt32Data>
   35d9c:	b	35d28 <Mat_VarRead5+0x13dc>
   35da0:	mov	r2, r8
   35da4:	mov	r0, r5
   35da8:	ldr	r3, [r7, #20]
   35dac:	bl	11b64 <ReadUInt32Data>
   35db0:	b	35d28 <Mat_VarRead5+0x13dc>
   35db4:	mov	r2, r8
   35db8:	mov	r0, r5
   35dbc:	ldr	r3, [r7, #20]
   35dc0:	bl	1206c <ReadInt16Data>
   35dc4:	b	35d28 <Mat_VarRead5+0x13dc>
   35dc8:	mov	r2, r8
   35dcc:	mov	r0, r5
   35dd0:	ldr	r3, [r7, #20]
   35dd4:	bl	12574 <ReadUInt16Data>
   35dd8:	b	35d28 <Mat_VarRead5+0x13dc>
   35ddc:	mov	r2, r8
   35de0:	mov	r0, r5
   35de4:	ldr	r3, [r7, #20]
   35de8:	bl	12a7c <ReadInt8Data>
   35dec:	b	35d28 <Mat_VarRead5+0x13dc>
   35df0:	mov	r2, r8
   35df4:	mov	r0, r5
   35df8:	ldr	r3, [r7, #20]
   35dfc:	bl	12f84 <ReadUInt8Data>
   35e00:	b	35d28 <Mat_VarRead5+0x13dc>
   35e04:	cmp	r3, #1
   35e08:	bne	34a9c <Mat_VarRead5+0x150>
   35e0c:	ldr	r3, [r4, #8]
   35e10:	sub	r3, r3, #1
   35e14:	cmp	r3, #12
   35e18:	addls	pc, pc, r3, lsl #2
   35e1c:	b	35e78 <Mat_VarRead5+0x152c>
   35e20:	b	35f98 <Mat_VarRead5+0x164c>
   35e24:	b	35fbc <Mat_VarRead5+0x1670>
   35e28:	b	35f50 <Mat_VarRead5+0x1604>
   35e2c:	b	35f74 <Mat_VarRead5+0x1628>
   35e30:	b	35f08 <Mat_VarRead5+0x15bc>
   35e34:	b	35f2c <Mat_VarRead5+0x15e0>
   35e38:	b	35e9c <Mat_VarRead5+0x1550>
   35e3c:	b	35e78 <Mat_VarRead5+0x152c>
   35e40:	b	35e54 <Mat_VarRead5+0x1508>
   35e44:	b	35e78 <Mat_VarRead5+0x152c>
   35e48:	b	35e78 <Mat_VarRead5+0x152c>
   35e4c:	b	35ec0 <Mat_VarRead5+0x1574>
   35e50:	b	35ee4 <Mat_VarRead5+0x1598>
   35e54:	mov	r2, r0
   35e58:	ldr	r3, [r7, #20]
   35e5c:	ldr	r0, [r4, #52]	; 0x34
   35e60:	str	r3, [sp]
   35e64:	mov	r3, r8
   35e68:	ldr	r1, [r0, #12]
   35e6c:	mov	r0, r5
   35e70:	bl	f58c <ReadCompressedDoubleData>
   35e74:	mov	r6, r0
   35e78:	ldr	r3, [sp, #12]
   35e7c:	cmp	r3, #0
   35e80:	addne	r6, r6, #4
   35e84:	ands	r2, r6, #7
   35e88:	beq	34a9c <Mat_VarRead5+0x150>
   35e8c:	rsbs	r6, r6, #0
   35e90:	and	r6, r6, #7
   35e94:	rsbpl	r2, r6, #0
   35e98:	b	34ea0 <Mat_VarRead5+0x554>
   35e9c:	mov	r2, r0
   35ea0:	ldr	r3, [r7, #20]
   35ea4:	ldr	r0, [r4, #52]	; 0x34
   35ea8:	str	r3, [sp]
   35eac:	mov	r3, r8
   35eb0:	ldr	r1, [r0, #12]
   35eb4:	mov	r0, r5
   35eb8:	bl	106f0 <ReadCompressedSingleData>
   35ebc:	b	35e74 <Mat_VarRead5+0x1528>
   35ec0:	mov	r2, r0
   35ec4:	ldr	r3, [r7, #20]
   35ec8:	ldr	r0, [r4, #52]	; 0x34
   35ecc:	str	r3, [sp]
   35ed0:	mov	r3, r8
   35ed4:	ldr	r1, [r0, #12]
   35ed8:	mov	r0, r5
   35edc:	bl	10c10 <ReadCompressedInt64Data>
   35ee0:	b	35e74 <Mat_VarRead5+0x1528>
   35ee4:	mov	r2, r0
   35ee8:	ldr	r3, [r7, #20]
   35eec:	ldr	r0, [r4, #52]	; 0x34
   35ef0:	str	r3, [sp]
   35ef4:	mov	r3, r8
   35ef8:	ldr	r1, [r0, #12]
   35efc:	mov	r0, r5
   35f00:	bl	11148 <ReadCompressedUInt64Data>
   35f04:	b	35e74 <Mat_VarRead5+0x1528>
   35f08:	mov	r2, r0
   35f0c:	ldr	r3, [r7, #20]
   35f10:	ldr	r0, [r4, #52]	; 0x34
   35f14:	str	r3, [sp]
   35f18:	mov	r3, r8
   35f1c:	ldr	r1, [r0, #12]
   35f20:	mov	r0, r5
   35f24:	bl	11680 <ReadCompressedInt32Data>
   35f28:	b	35e74 <Mat_VarRead5+0x1528>
   35f2c:	mov	r2, r0
   35f30:	ldr	r3, [r7, #20]
   35f34:	ldr	r0, [r4, #52]	; 0x34
   35f38:	str	r3, [sp]
   35f3c:	mov	r3, r8
   35f40:	ldr	r1, [r0, #12]
   35f44:	mov	r0, r5
   35f48:	bl	11b88 <ReadCompressedUInt32Data>
   35f4c:	b	35e74 <Mat_VarRead5+0x1528>
   35f50:	mov	r2, r0
   35f54:	ldr	r3, [r7, #20]
   35f58:	ldr	r0, [r4, #52]	; 0x34
   35f5c:	str	r3, [sp]
   35f60:	mov	r3, r8
   35f64:	ldr	r1, [r0, #12]
   35f68:	mov	r0, r5
   35f6c:	bl	12090 <ReadCompressedInt16Data>
   35f70:	b	35e74 <Mat_VarRead5+0x1528>
   35f74:	mov	r2, r0
   35f78:	ldr	r3, [r7, #20]
   35f7c:	ldr	r0, [r4, #52]	; 0x34
   35f80:	str	r3, [sp]
   35f84:	mov	r3, r8
   35f88:	ldr	r1, [r0, #12]
   35f8c:	mov	r0, r5
   35f90:	bl	12598 <ReadCompressedUInt16Data>
   35f94:	b	35e74 <Mat_VarRead5+0x1528>
   35f98:	mov	r2, r0
   35f9c:	ldr	r3, [r7, #20]
   35fa0:	ldr	r0, [r4, #52]	; 0x34
   35fa4:	str	r3, [sp]
   35fa8:	mov	r3, r8
   35fac:	ldr	r1, [r0, #12]
   35fb0:	mov	r0, r5
   35fb4:	bl	12aa0 <ReadCompressedInt8Data>
   35fb8:	b	35e74 <Mat_VarRead5+0x1528>
   35fbc:	mov	r2, r0
   35fc0:	ldr	r3, [r7, #20]
   35fc4:	ldr	r0, [r4, #52]	; 0x34
   35fc8:	str	r3, [sp]
   35fcc:	mov	r3, r8
   35fd0:	ldr	r1, [r0, #12]
   35fd4:	mov	r0, r5
   35fd8:	bl	12fa8 <ReadCompressedUInt8Data>
   35fdc:	b	35e74 <Mat_VarRead5+0x1528>
   35fe0:	ldr	r3, [r4]
   35fe4:	cmp	r3, #0
   35fe8:	beq	34a64 <Mat_VarRead5+0x118>
   35fec:	ldr	r6, [r4, #12]
   35ff0:	cmp	r6, #0
   35ff4:	beq	34a64 <Mat_VarRead5+0x118>
   35ff8:	ldr	r8, [r4, #40]	; 0x28
   35ffc:	cmp	r8, #0
   36000:	movne	r7, #0
   36004:	udivne	r6, r3, r6
   36008:	bne	36024 <Mat_VarRead5+0x16d8>
   3600c:	mov	r3, #24
   36010:	b	34a98 <Mat_VarRead5+0x14c>
   36014:	mov	r0, r5
   36018:	ldr	r1, [r8, r7, lsl #2]
   3601c:	add	r7, r7, #1
   36020:	bl	3494c <Mat_VarRead5>
   36024:	cmp	r7, r6
   36028:	bcc	36014 <Mat_VarRead5+0x16c8>
   3602c:	b	3600c <Mat_VarRead5+0x16c0>
   36030:	ldr	r0, [pc, #-1848]	; 35900 <Mat_VarRead5+0xfb4>
   36034:	add	r0, pc, r0
   36038:	b	34f44 <Mat_VarRead5+0x5f8>
   3603c:	mov	r1, r4
   36040:	mov	r0, r5
   36044:	ldr	r2, [r6]
   36048:	ldr	r3, [sp, #24]
   3604c:	bl	1bccc <Mat_VarReadNumeric5>
   36050:	mov	r1, r4
   36054:	mov	r0, r5
   36058:	ldr	r2, [r6, #4]
   3605c:	ldr	r3, [sp, #24]
   36060:	bl	1bccc <Mat_VarReadNumeric5>
   36064:	str	r6, [r4, #40]	; 0x28
   36068:	b	34a64 <Mat_VarRead5+0x118>
   3606c:	bl	3a8c4 <SafeMul>
   36070:	ldr	r0, [r4]
   36074:	bl	1544 <malloc@plt>
   36078:	cmp	r0, #0
   3607c:	mov	r2, r0
   36080:	str	r0, [r4, #40]	; 0x28
   36084:	ldreq	r0, [pc, #-1928]	; 35904 <Mat_VarRead5+0xfb8>
   36088:	addeq	r0, pc, r0
   3608c:	beq	34ae0 <Mat_VarRead5+0x194>
   36090:	mov	r1, r4
   36094:	mov	r0, r5
   36098:	ldr	r3, [sp, #24]
   3609c:	bl	1bccc <Mat_VarReadNumeric5>
   360a0:	b	34a64 <Mat_VarRead5+0x118>

000360a4 <ReadNextCell>:
   360a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   360a8:	mov	r3, #1
   360ac:	sub	sp, sp, #108	; 0x6c
   360b0:	mov	r7, r1
   360b4:	mov	fp, r0
   360b8:	add	r1, sp, #32
   360bc:	mov	r0, r7
   360c0:	str	r3, [sp, #32]
   360c4:	bl	3a864 <SafeMulDims>
   360c8:	cmp	r0, #0
   360cc:	beq	360ec <ReadNextCell+0x48>
   360d0:	ldr	r0, [pc, #2172]	; 36954 <ReadNextCell+0x8b0>
   360d4:	add	r0, pc, r0
   360d8:	bl	161c <Mat_Critical@plt>
   360dc:	mov	r5, #0
   360e0:	mov	r0, r5
   360e4:	add	sp, sp, #108	; 0x6c
   360e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   360ec:	mov	r2, #4
   360f0:	mov	r0, r7
   360f4:	ldr	r1, [sp, #32]
   360f8:	str	r2, [r7, #12]
   360fc:	bl	3a8c4 <SafeMul>
   36100:	subs	r6, r0, #0
   36104:	bne	360d0 <ReadNextCell+0x2c>
   36108:	ldr	r1, [r7, #12]
   3610c:	ldr	r0, [sp, #32]
   36110:	bl	140c <calloc@plt>
   36114:	cmp	r0, #0
   36118:	mov	r4, r0
   3611c:	str	r0, [r7, #40]	; 0x28
   36120:	bne	36144 <ReadNextCell+0xa0>
   36124:	ldr	r1, [r7, #36]	; 0x24
   36128:	cmp	r1, #0
   3612c:	moveq	r5, r1
   36130:	beq	360e0 <ReadNextCell+0x3c>
   36134:	ldr	r0, [pc, #2076]	; 36958 <ReadNextCell+0x8b4>
   36138:	add	r0, pc, r0
   3613c:	bl	161c <Mat_Critical@plt>
   36140:	b	360dc <ReadNextCell+0x38>
   36144:	ldr	r3, [r7, #48]	; 0x30
   36148:	cmp	r3, #1
   3614c:	beq	3619c <ReadNextCell+0xf8>
   36150:	ldr	r8, [pc, #2052]	; 3695c <ReadNextCell+0x8b8>
   36154:	mov	r5, r6
   36158:	add	r7, sp, #40	; 0x28
   3615c:	ldr	r9, [pc, #2044]	; 36960 <ReadNextCell+0x8bc>
   36160:	add	r8, pc, r8
   36164:	add	r9, pc, r9
   36168:	ldr	r3, [sp, #32]
   3616c:	cmp	r3, r6
   36170:	bls	360e0 <ReadNextCell+0x3c>
   36174:	bl	1508 <Mat_VarCalloc@plt>
   36178:	cmp	r0, #0
   3617c:	str	r0, [r4]
   36180:	bne	366f4 <ReadNextCell+0x650>
   36184:	mov	r1, r6
   36188:	mov	r0, r9
   3618c:	bl	161c <Mat_Critical@plt>
   36190:	add	r6, r6, #1
   36194:	add	r4, r4, #4
   36198:	b	36168 <ReadNextCell+0xc4>
   3619c:	add	r8, sp, #40	; 0x28
   361a0:	mov	r2, #64	; 0x40
   361a4:	mov	r1, r6
   361a8:	mov	r0, r8
   361ac:	bl	15f8 <memset@plt>
   361b0:	ldr	r3, [pc, #1964]	; 36964 <ReadNextCell+0x8c0>
   361b4:	mov	r5, r6
   361b8:	str	r6, [sp, #12]
   361bc:	add	r3, pc, r3
   361c0:	str	r3, [sp, #16]
   361c4:	ldr	r3, [pc, #1948]	; 36968 <ReadNextCell+0x8c4>
   361c8:	add	r3, pc, r3
   361cc:	str	r3, [sp, #20]
   361d0:	ldr	r3, [pc, #1940]	; 3696c <ReadNextCell+0x8c8>
   361d4:	add	r3, pc, r3
   361d8:	str	r3, [sp, #24]
   361dc:	ldr	r2, [sp, #12]
   361e0:	ldr	r3, [sp, #32]
   361e4:	cmp	r3, r2
   361e8:	bls	360e0 <ReadNextCell+0x3c>
   361ec:	bl	1508 <Mat_VarCalloc@plt>
   361f0:	cmp	r0, #0
   361f4:	str	r0, [r4]
   361f8:	bne	36220 <ReadNextCell+0x17c>
   361fc:	ldr	r0, [pc, #1900]	; 36970 <ReadNextCell+0x8cc>
   36200:	ldr	r1, [sp, #12]
   36204:	add	r0, pc, r0
   36208:	bl	161c <Mat_Critical@plt>
   3620c:	ldr	r3, [sp, #12]
   36210:	add	r4, r4, #4
   36214:	add	r3, r3, #1
   36218:	str	r3, [sp, #12]
   3621c:	b	361dc <ReadNextCell+0x138>
   36220:	mov	r3, #0
   36224:	mov	r2, r8
   36228:	mov	r1, r7
   3622c:	mov	r0, fp
   36230:	str	r3, [sp, #40]	; 0x28
   36234:	str	r3, [sp, #44]	; 0x2c
   36238:	bl	2260 <InflateVarTag>
   3623c:	ldr	r3, [fp, #20]
   36240:	add	r5, r5, r0
   36244:	cmp	r3, #0
   36248:	beq	3625c <ReadNextCell+0x1b8>
   3624c:	mov	r0, r8
   36250:	bl	18cc <Mat_uint32Swap>
   36254:	add	r0, sp, #44	; 0x2c
   36258:	bl	18cc <Mat_uint32Swap>
   3625c:	ldr	r6, [sp, #44]	; 0x2c
   36260:	ldr	r0, [r4]
   36264:	cmp	r6, #0
   36268:	bne	36280 <ReadNextCell+0x1dc>
   3626c:	ldr	r0, [r0, #52]	; 0x34
   36270:	bl	1478 <free@plt>
   36274:	ldr	r3, [r4]
   36278:	str	r6, [r3, #52]	; 0x34
   3627c:	b	3620c <ReadNextCell+0x168>
   36280:	ldr	r3, [sp, #40]	; 0x28
   36284:	cmp	r3, #14
   36288:	beq	362ac <ReadNextCell+0x208>
   3628c:	bl	158c <Mat_VarFree@plt>
   36290:	ldr	r0, [pc, #1756]	; 36974 <ReadNextCell+0x8d0>
   36294:	mov	r3, #0
   36298:	ldr	r1, [sp, #12]
   3629c:	str	r3, [r4]
   362a0:	add	r0, pc, r0
   362a4:	bl	161c <Mat_Critical@plt>
   362a8:	b	360e0 <ReadNextCell+0x3c>
   362ac:	mov	r3, #1
   362b0:	mov	r2, r8
   362b4:	mov	r1, r7
   362b8:	sub	r9, r6, #16
   362bc:	str	r3, [r0, #48]	; 0x30
   362c0:	mov	r0, fp
   362c4:	bl	23bc <InflateArrayFlags>
   362c8:	ldr	r3, [fp, #20]
   362cc:	add	r5, r5, r0
   362d0:	cmp	r3, #0
   362d4:	beq	362f8 <ReadNextCell+0x254>
   362d8:	mov	r0, r8
   362dc:	bl	18cc <Mat_uint32Swap>
   362e0:	add	r0, sp, #44	; 0x2c
   362e4:	bl	18cc <Mat_uint32Swap>
   362e8:	add	r0, sp, #48	; 0x30
   362ec:	bl	18cc <Mat_uint32Swap>
   362f0:	add	r0, sp, #52	; 0x34
   362f4:	bl	18cc <Mat_uint32Swap>
   362f8:	ldr	r1, [sp, #40]	; 0x28
   362fc:	cmp	r1, #6
   36300:	bne	363fc <ReadNextCell+0x358>
   36304:	ldr	r3, [sp, #48]	; 0x30
   36308:	ldr	r2, [r4]
   3630c:	uxtb	r1, r3
   36310:	and	r0, r3, #2048	; 0x800
   36314:	cmp	r1, #18
   36318:	movcs	r1, #0
   3631c:	cmp	r1, #5
   36320:	str	r0, [r2, #20]
   36324:	and	r0, r3, #1024	; 0x400
   36328:	and	r3, r3, #512	; 0x200
   3632c:	str	r1, [r2, #16]
   36330:	str	r0, [r2, #24]
   36334:	str	r3, [r2, #28]
   36338:	ldreq	r3, [sp, #52]	; 0x34
   3633c:	streq	r3, [r2]
   36340:	ldr	r3, [r4]
   36344:	ldr	r3, [r3, #16]
   36348:	cmp	r3, #17
   3634c:	beq	365fc <ReadNextCell+0x558>
   36350:	mov	r3, #0
   36354:	mov	r2, r8
   36358:	mov	r1, r7
   3635c:	mov	r0, fp
   36360:	str	r3, [sp, #36]	; 0x24
   36364:	add	r3, sp, #36	; 0x24
   36368:	sub	r6, r6, #24
   3636c:	str	r3, [sp]
   36370:	mov	r3, #64	; 0x40
   36374:	bl	2518 <InflateRankDims>
   36378:	add	r9, r5, r0
   3637c:	ldr	r5, [sp, #36]	; 0x24
   36380:	cmp	r5, #0
   36384:	addeq	r3, sp, #48	; 0x30
   36388:	movne	r5, #1
   3638c:	streq	r3, [sp, #36]	; 0x24
   36390:	ldr	r3, [fp, #20]
   36394:	cmp	r3, #0
   36398:	beq	363ac <ReadNextCell+0x308>
   3639c:	mov	r0, r8
   363a0:	bl	18cc <Mat_uint32Swap>
   363a4:	add	r0, sp, #44	; 0x2c
   363a8:	bl	18cc <Mat_uint32Swap>
   363ac:	ldr	r3, [sp, #40]	; 0x28
   363b0:	cmp	r3, #5
   363b4:	bne	36464 <ReadNextCell+0x3c0>
   363b8:	ldr	r0, [sp, #44]	; 0x2c
   363bc:	ldr	sl, [r4]
   363c0:	add	r3, r0, #3
   363c4:	cmp	r0, #0
   363c8:	sub	r6, r6, r0
   363cc:	movlt	r0, r3
   363d0:	asr	r0, r0, #2
   363d4:	str	r0, [sl, #4]
   363d8:	lsl	r0, r0, #2
   363dc:	bl	1544 <malloc@plt>
   363e0:	ldr	r3, [fp, #20]
   363e4:	str	r0, [sl, #32]
   363e8:	cmp	r3, #0
   363ec:	ldreq	r1, [sp, #36]	; 0x24
   363f0:	beq	36624 <ReadNextCell+0x580>
   363f4:	mov	sl, #0
   363f8:	b	36444 <ReadNextCell+0x3a0>
   363fc:	ldr	r0, [pc, #1396]	; 36978 <ReadNextCell+0x8d4>
   36400:	add	r0, pc, r0
   36404:	bl	161c <Mat_Critical@plt>
   36408:	ldr	r3, [r7, #52]	; 0x34
   3640c:	mov	r2, r9
   36410:	mov	r0, fp
   36414:	ldr	r1, [r3, #12]
   36418:	bl	1e78 <InflateSkip>
   3641c:	add	r5, r5, r0
   36420:	b	36340 <ReadNextCell+0x29c>
   36424:	ldr	r0, [sp, #36]	; 0x24
   36428:	ldr	r3, [r3, #32]
   3642c:	add	r0, r0, sl, lsl #2
   36430:	str	r3, [sp, #28]
   36434:	bl	18cc <Mat_uint32Swap>
   36438:	ldr	r3, [sp, #28]
   3643c:	str	r0, [r3, sl, lsl #2]
   36440:	add	sl, sl, #1
   36444:	ldr	r3, [r4]
   36448:	ldr	r2, [r3, #4]
   3644c:	cmp	r2, sl
   36450:	bgt	36424 <ReadNextCell+0x380>
   36454:	ldr	r3, [r4]
   36458:	ldr	r3, [r3, #4]
   3645c:	tst	r3, #1
   36460:	subne	r6, r6, #4
   36464:	cmp	r5, #0
   36468:	beq	36474 <ReadNextCell+0x3d0>
   3646c:	ldr	r0, [sp, #36]	; 0x24
   36470:	bl	1478 <free@plt>
   36474:	mov	r2, r8
   36478:	mov	r1, r7
   3647c:	mov	r0, fp
   36480:	bl	2830 <InflateVarNameTag>
   36484:	ldr	r3, [fp, #20]
   36488:	add	r5, r9, r0
   3648c:	sub	r9, r6, #8
   36490:	cmp	r3, #0
   36494:	beq	364a8 <ReadNextCell+0x404>
   36498:	mov	r0, r8
   3649c:	bl	18cc <Mat_uint32Swap>
   364a0:	add	r0, sp, #44	; 0x2c
   364a4:	bl	18cc <Mat_uint32Swap>
   364a8:	ldr	r6, [sp, #44]	; 0x2c
   364ac:	cmp	r6, #0
   364b0:	beq	36510 <ReadNextCell+0x46c>
   364b4:	ldr	r3, [sp, #40]	; 0x28
   364b8:	ldr	sl, [r4]
   364bc:	cmp	r3, #1
   364c0:	bne	36634 <ReadNextCell+0x590>
   364c4:	tst	r6, #7
   364c8:	bicne	r6, r6, #7
   364cc:	addne	r6, r6, #8
   364d0:	add	r0, r6, #1
   364d4:	sub	r9, r9, r6
   364d8:	bl	1544 <malloc@plt>
   364dc:	cmp	r0, #0
   364e0:	mov	r2, r0
   364e4:	str	r0, [sl, #36]	; 0x24
   364e8:	beq	36510 <ReadNextCell+0x46c>
   364ec:	mov	r3, r6
   364f0:	mov	r1, r7
   364f4:	mov	r0, fp
   364f8:	bl	298c <InflateVarName>
   364fc:	ldr	r3, [r4]
   36500:	mov	r2, #0
   36504:	add	r5, r5, r0
   36508:	ldr	r3, [r3, #36]	; 0x24
   3650c:	strb	r2, [r3, r6]
   36510:	ldr	r3, [r4]
   36514:	mov	r1, #56	; 0x38
   36518:	mov	r0, #1
   3651c:	ldr	r6, [r3, #52]	; 0x34
   36520:	bl	140c <calloc@plt>
   36524:	cmp	r0, #0
   36528:	str	r0, [r6, #12]
   3652c:	beq	366e8 <ReadNextCell+0x644>
   36530:	ldr	r3, [r7, #52]	; 0x34
   36534:	ldr	r1, [r3, #12]
   36538:	bl	15bc <inflateCopy@plt>
   3653c:	subs	r6, r0, #0
   36540:	bne	366d4 <ReadNextCell+0x630>
   36544:	ldr	r3, [r4]
   36548:	ldr	r0, [fp]
   3654c:	ldr	sl, [r3, #52]	; 0x34
   36550:	bl	14b4 <ftell@plt>
   36554:	ldr	r1, [r4]
   36558:	ldr	r2, [r1, #52]	; 0x34
   3655c:	str	r0, [sl]
   36560:	ldr	r3, [r2]
   36564:	cmn	r3, #1
   36568:	beq	366c8 <ReadNextCell+0x624>
   3656c:	ldr	r0, [r7, #52]	; 0x34
   36570:	ldr	r0, [r0, #12]
   36574:	ldr	r0, [r0, #4]
   36578:	sub	r3, r3, r0
   3657c:	str	r3, [r2]
   36580:	ldr	r3, [r1, #16]
   36584:	cmp	r3, #2
   36588:	bne	36688 <ReadNextCell+0x5e4>
   3658c:	mov	r0, fp
   36590:	bl	36980 <ReadNextStructField>
   36594:	add	r5, r5, r0
   36598:	ldr	r3, [r4]
   3659c:	mov	r2, #0
   365a0:	ldr	r0, [fp]
   365a4:	ldr	r3, [r3, #52]	; 0x34
   365a8:	ldr	r1, [r3]
   365ac:	bl	1694 <fseek@plt>
   365b0:	ldr	r3, [r4]
   365b4:	ldr	r2, [r3, #52]	; 0x34
   365b8:	ldr	r1, [r2, #16]
   365bc:	cmp	r1, #0
   365c0:	bne	365d4 <ReadNextCell+0x530>
   365c4:	ldr	r3, [r3, #16]
   365c8:	sub	r3, r3, #1
   365cc:	cmp	r3, #1
   365d0:	bhi	365fc <ReadNextCell+0x558>
   365d4:	ldr	r0, [r2, #12]
   365d8:	bl	15b0 <inflateEnd@plt>
   365dc:	ldr	r3, [r4]
   365e0:	ldr	r3, [r3, #52]	; 0x34
   365e4:	ldr	r0, [r3, #12]
   365e8:	bl	1478 <free@plt>
   365ec:	ldr	r3, [r4]
   365f0:	mov	r2, #0
   365f4:	ldr	r3, [r3, #52]	; 0x34
   365f8:	str	r2, [r3, #12]
   365fc:	ldr	r3, [r7, #52]	; 0x34
   36600:	mov	r2, r9
   36604:	mov	r0, fp
   36608:	ldr	r1, [r3, #12]
   3660c:	bl	1e78 <InflateSkip>
   36610:	add	r5, r5, r0
   36614:	b	3620c <ReadNextCell+0x168>
   36618:	ldr	r2, [r1, r3, lsl #2]
   3661c:	str	r2, [r0, r3, lsl #2]
   36620:	add	r3, r3, #1
   36624:	ldr	r2, [sl, #4]
   36628:	cmp	r2, r3
   3662c:	bgt	36618 <ReadNextCell+0x574>
   36630:	b	36454 <ReadNextCell+0x3b0>
   36634:	uxth	r2, r3
   36638:	cmp	r2, #1
   3663c:	bne	36510 <ReadNextCell+0x46c>
   36640:	lsr	r6, r3, #16
   36644:	sub	r2, r6, #1
   36648:	cmp	r2, #3
   3664c:	bhi	36510 <ReadNextCell+0x46c>
   36650:	add	r0, r6, #1
   36654:	str	r3, [sp, #28]
   36658:	bl	1544 <malloc@plt>
   3665c:	cmp	r0, #0
   36660:	str	r0, [sl, #36]	; 0x24
   36664:	beq	36510 <ReadNextCell+0x46c>
   36668:	mov	r2, r6
   3666c:	add	r1, sp, #44	; 0x2c
   36670:	bl	1490 <memcpy@plt>
   36674:	ldr	r3, [sp, #28]
   36678:	mov	r1, #0
   3667c:	ldr	r2, [sl, #36]	; 0x24
   36680:	strb	r1, [r2, r3, lsr #16]
   36684:	b	36510 <ReadNextCell+0x46c>
   36688:	cmp	r3, #1
   3668c:	bne	3669c <ReadNextCell+0x5f8>
   36690:	mov	r0, fp
   36694:	bl	360a4 <ReadNextCell>
   36698:	b	36594 <ReadNextCell+0x4f0>
   3669c:	cmp	r9, #32768	; 0x8000
   366a0:	bgt	36598 <ReadNextCell+0x4f4>
   366a4:	mov	r0, fp
   366a8:	bl	3494c <Mat_VarRead5>
   366ac:	ldr	r3, [r4]
   366b0:	ldr	r2, [r3, #52]	; 0x34
   366b4:	ldr	r3, [r3, #40]	; 0x28
   366b8:	str	r3, [r2, #16]
   366bc:	ldr	r3, [r4]
   366c0:	str	r6, [r3, #40]	; 0x28
   366c4:	b	36598 <ReadNextCell+0x4f4>
   366c8:	ldr	r0, [sp, #24]
   366cc:	bl	161c <Mat_Critical@plt>
   366d0:	b	365b0 <ReadNextCell+0x50c>
   366d4:	bl	14f0 <zError@plt>
   366d8:	mov	r1, r0
   366dc:	ldr	r0, [sp, #20]
   366e0:	bl	161c <Mat_Critical@plt>
   366e4:	b	365fc <ReadNextCell+0x558>
   366e8:	ldr	r0, [sp, #16]
   366ec:	bl	161c <Mat_Critical@plt>
   366f0:	b	365fc <ReadNextCell+0x558>
   366f4:	mov	r2, #2
   366f8:	mov	r1, #4
   366fc:	ldr	r3, [fp]
   36700:	mov	r0, r7
   36704:	bl	1520 <fread@plt>
   36708:	cmp	r0, #0
   3670c:	beq	36190 <ReadNextCell+0xec>
   36710:	ldr	r3, [fp, #20]
   36714:	add	r5, r5, r0
   36718:	cmp	r3, #0
   3671c:	beq	36730 <ReadNextCell+0x68c>
   36720:	mov	r0, r7
   36724:	bl	18cc <Mat_uint32Swap>
   36728:	add	r0, sp, #44	; 0x2c
   3672c:	bl	18cc <Mat_uint32Swap>
   36730:	ldr	sl, [sp, #44]	; 0x2c
   36734:	cmp	sl, #0
   36738:	bne	36754 <ReadNextCell+0x6b0>
   3673c:	ldr	r3, [r4]
   36740:	ldr	r0, [r3, #52]	; 0x34
   36744:	bl	1478 <free@plt>
   36748:	ldr	r3, [r4]
   3674c:	str	sl, [r3, #52]	; 0x34
   36750:	b	36190 <ReadNextCell+0xec>
   36754:	ldr	r3, [sp, #40]	; 0x28
   36758:	cmp	r3, #14
   3675c:	beq	36790 <ReadNextCell+0x6ec>
   36760:	ldr	r0, [r4]
   36764:	bl	158c <Mat_VarFree@plt>
   36768:	mov	r3, #0
   3676c:	ldr	r0, [fp]
   36770:	str	r3, [r4]
   36774:	bl	14b4 <ftell@plt>
   36778:	mov	r2, r0
   3677c:	ldr	r0, [pc, #504]	; 3697c <ReadNextCell+0x8d8>
   36780:	mov	r1, r6
   36784:	add	r0, pc, r0
   36788:	bl	161c <Mat_Critical@plt>
   3678c:	b	360e0 <ReadNextCell+0x3c>
   36790:	mov	r2, #6
   36794:	mov	r1, #4
   36798:	ldr	r3, [fp]
   3679c:	mov	r0, r7
   367a0:	bl	1520 <fread@plt>
   367a4:	ldr	r3, [fp, #20]
   367a8:	add	r5, r5, r0
   367ac:	cmp	r3, #0
   367b0:	beq	367e4 <ReadNextCell+0x740>
   367b4:	mov	r0, r7
   367b8:	bl	18cc <Mat_uint32Swap>
   367bc:	add	r0, sp, #44	; 0x2c
   367c0:	bl	18cc <Mat_uint32Swap>
   367c4:	add	r0, sp, #48	; 0x30
   367c8:	bl	18cc <Mat_uint32Swap>
   367cc:	add	r0, sp, #52	; 0x34
   367d0:	bl	18cc <Mat_uint32Swap>
   367d4:	add	r0, sp, #56	; 0x38
   367d8:	bl	18cc <Mat_uint32Swap>
   367dc:	add	r0, sp, #60	; 0x3c
   367e0:	bl	18cc <Mat_uint32Swap>
   367e4:	ldr	r3, [sp, #40]	; 0x28
   367e8:	sub	sl, sl, #24
   367ec:	cmp	r3, #6
   367f0:	bne	36830 <ReadNextCell+0x78c>
   367f4:	ldr	r3, [sp, #48]	; 0x30
   367f8:	ldr	r2, [r4]
   367fc:	uxtb	r1, r3
   36800:	and	r0, r3, #2048	; 0x800
   36804:	cmp	r1, #18
   36808:	movcs	r1, #0
   3680c:	cmp	r1, #5
   36810:	str	r0, [r2, #20]
   36814:	and	r0, r3, #1024	; 0x400
   36818:	and	r3, r3, #512	; 0x200
   3681c:	str	r1, [r2, #16]
   36820:	str	r0, [r2, #24]
   36824:	str	r3, [r2, #28]
   36828:	ldreq	r3, [sp, #52]	; 0x34
   3682c:	streq	r3, [r2]
   36830:	mov	r0, fp
   36834:	ldr	r1, [r4]
   36838:	ldrd	r2, [sp, #56]	; 0x38
   3683c:	bl	32a64 <ReadRankDims>
   36840:	add	r5, r5, r0
   36844:	sub	sl, sl, r0
   36848:	ldr	r3, [fp]
   3684c:	mov	r2, #8
   36850:	mov	r1, #1
   36854:	mov	r0, r7
   36858:	sub	sl, sl, #8
   3685c:	bl	1520 <fread@plt>
   36860:	ldr	r3, [fp, #20]
   36864:	add	r5, r5, r0
   36868:	cmp	r3, #0
   3686c:	beq	36880 <ReadNextCell+0x7dc>
   36870:	mov	r0, r7
   36874:	bl	18cc <Mat_uint32Swap>
   36878:	add	r0, sp, #44	; 0x2c
   3687c:	bl	18cc <Mat_uint32Swap>
   36880:	ldr	r1, [sp, #44]	; 0x2c
   36884:	cmp	r1, #0
   36888:	beq	368c4 <ReadNextCell+0x820>
   3688c:	ldr	r3, [sp, #40]	; 0x28
   36890:	cmp	r3, #1
   36894:	bne	368c4 <ReadNextCell+0x820>
   36898:	rsbs	r2, r1, #0
   3689c:	and	r3, r1, #7
   368a0:	ldr	r0, [fp]
   368a4:	and	r2, r2, #7
   368a8:	rsbpl	r3, r2, #0
   368ac:	mov	r2, #1
   368b0:	cmp	r3, #0
   368b4:	rsbgt	r3, r3, #8
   368b8:	addgt	r1, r1, r3
   368bc:	sub	sl, sl, r1
   368c0:	bl	1694 <fseek@plt>
   368c4:	ldr	r3, [r4]
   368c8:	ldr	r0, [fp]
   368cc:	ldr	r3, [r3, #52]	; 0x34
   368d0:	str	r3, [sp, #12]
   368d4:	bl	14b4 <ftell@plt>
   368d8:	ldr	r1, [r4]
   368dc:	ldr	r3, [sp, #12]
   368e0:	str	r0, [r3]
   368e4:	ldr	r3, [r1, #52]	; 0x34
   368e8:	ldr	r3, [r3]
   368ec:	cmn	r3, #1
   368f0:	beq	36948 <ReadNextCell+0x8a4>
   368f4:	ldr	r3, [r1, #16]
   368f8:	cmp	r3, #2
   368fc:	bne	3690c <ReadNextCell+0x868>
   36900:	mov	r0, fp
   36904:	bl	36980 <ReadNextStructField>
   36908:	add	r5, r5, r0
   3690c:	ldr	r1, [r4]
   36910:	ldr	r3, [r1, #16]
   36914:	cmp	r3, #1
   36918:	bne	36928 <ReadNextCell+0x884>
   3691c:	mov	r0, fp
   36920:	bl	360a4 <ReadNextCell>
   36924:	add	r5, r5, r0
   36928:	ldr	r3, [r4]
   3692c:	mov	r2, #0
   36930:	ldr	r0, [fp]
   36934:	ldr	r3, [r3, #52]	; 0x34
   36938:	ldr	r1, [r3]
   3693c:	add	r1, sl, r1
   36940:	bl	1694 <fseek@plt>
   36944:	b	36190 <ReadNextCell+0xec>
   36948:	mov	r0, r8
   3694c:	bl	161c <Mat_Critical@plt>
   36950:	b	36190 <ReadNextCell+0xec>
   36954:	.word	0x00008bc7
   36958:	.word	0x00008d0e
   3695c:	.word	0x00008a85
   36960:	.word	0x00008d08
   36964:	.word	0x00008d50
   36968:	.word	0x00008d26
   3696c:	.word	0x00008a11
   36970:	.word	0x00008c68
   36974:	.word	0x00008bf2
   36978:	.word	0x00008ac1
   3697c:	.word	0x000087a1

00036980 <ReadNextStructField>:
   36980:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   36984:	mov	r3, #1
   36988:	sub	sp, sp, #116	; 0x74
   3698c:	mov	r6, r1
   36990:	mov	r5, r0
   36994:	add	r1, sp, #36	; 0x24
   36998:	mov	r0, r6
   3699c:	str	r3, [sp, #36]	; 0x24
   369a0:	bl	3a864 <SafeMulDims>
   369a4:	subs	r1, r0, #0
   369a8:	beq	369c8 <ReadNextStructField+0x48>
   369ac:	ldr	r0, [pc, #3064]	; 375ac <ReadNextStructField+0xc2c>
   369b0:	mov	r4, #0
   369b4:	add	r0, pc, r0
   369b8:	bl	161c <Mat_Critical@plt>
   369bc:	mov	r0, r4
   369c0:	add	sp, sp, #116	; 0x74
   369c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   369c8:	ldr	r3, [r6, #48]	; 0x30
   369cc:	add	fp, sp, #48	; 0x30
   369d0:	cmp	r3, #1
   369d4:	bne	3710c <ReadNextStructField+0x78c>
   369d8:	mov	r2, #64	; 0x40
   369dc:	mov	r0, fp
   369e0:	bl	15f8 <memset@plt>
   369e4:	mov	r2, fp
   369e8:	mov	r1, r6
   369ec:	mov	r0, r5
   369f0:	bl	2f40 <InflateFieldNameLength>
   369f4:	ldr	r3, [r5, #20]
   369f8:	mov	r4, r0
   369fc:	cmp	r3, #0
   36a00:	beq	36a14 <ReadNextStructField+0x94>
   36a04:	mov	r0, fp
   36a08:	bl	18cc <Mat_uint32Swap>
   36a0c:	add	r0, sp, #52	; 0x34
   36a10:	bl	18cc <Mat_uint32Swap>
   36a14:	ldrh	r3, [sp, #48]	; 0x30
   36a18:	cmp	r3, #5
   36a1c:	bne	36af8 <ReadNextStructField+0x178>
   36a20:	mov	r2, fp
   36a24:	mov	r1, r6
   36a28:	ldr	r7, [sp, #52]	; 0x34
   36a2c:	mov	r0, r5
   36a30:	bl	309c <InflateFieldNamesTag>
   36a34:	ldr	r3, [r5, #20]
   36a38:	add	r4, r4, r0
   36a3c:	cmp	r3, #0
   36a40:	beq	36a54 <ReadNextStructField+0xd4>
   36a44:	mov	r0, fp
   36a48:	bl	18cc <Mat_uint32Swap>
   36a4c:	add	r0, sp, #52	; 0x34
   36a50:	bl	18cc <Mat_uint32Swap>
   36a54:	ldr	r3, [sp, #52]	; 0x34
   36a58:	mov	r2, #4
   36a5c:	str	r2, [r6, #12]
   36a60:	udiv	r8, r3, r7
   36a64:	mul	r0, r8, r7
   36a68:	ands	r9, r0, #7
   36a6c:	rsbne	r9, r9, #8
   36a70:	cmp	r3, r7
   36a74:	bcc	36b78 <ReadNextStructField+0x1f8>
   36a78:	add	r0, r0, r9
   36a7c:	bl	1544 <malloc@plt>
   36a80:	subs	sl, r0, #0
   36a84:	beq	36ad4 <ReadNextStructField+0x154>
   36a88:	mov	r3, r8
   36a8c:	mov	r2, sl
   36a90:	stm	sp, {r7, r9}
   36a94:	mov	r1, r6
   36a98:	mov	r0, r5
   36a9c:	bl	31f8 <InflateFieldNames>
   36aa0:	ldr	r9, [r6, #52]	; 0x34
   36aa4:	add	r4, r4, r0
   36aa8:	mov	r1, #4
   36aac:	mov	r0, r8
   36ab0:	str	r8, [r9, #4]
   36ab4:	bl	140c <calloc@plt>
   36ab8:	cmp	r0, #0
   36abc:	str	r0, [r9, #8]
   36ac0:	movne	r3, sl
   36ac4:	movne	r9, #0
   36ac8:	bne	36b6c <ReadNextStructField+0x1ec>
   36acc:	mov	r0, sl
   36ad0:	bl	1478 <free@plt>
   36ad4:	mov	r2, r8
   36ad8:	add	r0, sp, #40	; 0x28
   36adc:	ldr	r1, [sp, #36]	; 0x24
   36ae0:	bl	3a8c4 <SafeMul>
   36ae4:	cmp	r0, #0
   36ae8:	beq	36b8c <ReadNextStructField+0x20c>
   36aec:	ldr	r0, [pc, #2748]	; 375b0 <ReadNextStructField+0xc30>
   36af0:	add	r0, pc, r0
   36af4:	b	36b00 <ReadNextStructField+0x180>
   36af8:	ldr	r0, [pc, #2740]	; 375b4 <ReadNextStructField+0xc34>
   36afc:	add	r0, pc, r0
   36b00:	bl	161c <Mat_Critical@plt>
   36b04:	b	369bc <ReadNextStructField+0x3c>
   36b08:	str	r3, [sp, #16]
   36b0c:	mov	r0, r7
   36b10:	ldr	r3, [r6, #52]	; 0x34
   36b14:	ldr	r1, [r3, #8]
   36b18:	str	r3, [sp, #8]
   36b1c:	str	r1, [sp, #12]
   36b20:	bl	1544 <malloc@plt>
   36b24:	ldr	r1, [sp, #12]
   36b28:	cmp	r0, #0
   36b2c:	ldr	r3, [sp, #16]
   36b30:	str	r0, [r1, r9, lsl #2]
   36b34:	beq	36b64 <ReadNextStructField+0x1e4>
   36b38:	mov	r2, r7
   36b3c:	mov	r1, r3
   36b40:	str	r3, [sp, #12]
   36b44:	bl	1490 <memcpy@plt>
   36b48:	ldr	r3, [sp, #8]
   36b4c:	ldr	r2, [r3, #8]
   36b50:	mov	r3, #0
   36b54:	ldr	r2, [r2, r9, lsl #2]
   36b58:	add	r2, r2, r7
   36b5c:	strb	r3, [r2, #-1]
   36b60:	ldr	r3, [sp, #12]
   36b64:	add	r9, r9, #1
   36b68:	add	r3, r3, r7
   36b6c:	cmp	r9, r8
   36b70:	bne	36b08 <ReadNextStructField+0x188>
   36b74:	b	36acc <ReadNextStructField+0x14c>
   36b78:	ldr	r3, [r6, #52]	; 0x34
   36b7c:	mov	r2, #0
   36b80:	str	r2, [r3, #4]
   36b84:	str	r2, [r3, #8]
   36b88:	b	36ad4 <ReadNextStructField+0x154>
   36b8c:	mov	r0, r6
   36b90:	ldr	r2, [r6, #12]
   36b94:	ldr	r1, [sp, #40]	; 0x28
   36b98:	bl	3a8c4 <SafeMul>
   36b9c:	subs	r9, r0, #0
   36ba0:	ldrne	r0, [pc, #2576]	; 375b8 <ReadNextStructField+0xc38>
   36ba4:	addne	r0, pc, r0
   36ba8:	bne	36b00 <ReadNextStructField+0x180>
   36bac:	ldr	r3, [r6]
   36bb0:	cmp	r3, #0
   36bb4:	beq	369bc <ReadNextStructField+0x3c>
   36bb8:	ldr	r1, [r6, #12]
   36bbc:	ldr	r0, [sp, #40]	; 0x28
   36bc0:	bl	140c <calloc@plt>
   36bc4:	cmp	r0, #0
   36bc8:	mov	r7, r0
   36bcc:	str	r0, [r6, #40]	; 0x28
   36bd0:	beq	36c14 <ReadNextStructField+0x294>
   36bd4:	lsl	r3, r8, #2
   36bd8:	mvn	r1, #7
   36bdc:	str	r0, [sp, #8]
   36be0:	add	r2, r0, r3
   36be4:	mul	r1, r1, r8
   36be8:	str	r3, [sp, #16]
   36bec:	mvn	r3, #3
   36bf0:	mul	r3, r3, r8
   36bf4:	str	r3, [sp, #12]
   36bf8:	ldr	r3, [sp, #36]	; 0x24
   36bfc:	cmp	r3, r9
   36c00:	bls	36c54 <ReadNextStructField+0x2d4>
   36c04:	ldr	r3, [sp, #12]
   36c08:	add	r3, r3, r2
   36c0c:	mov	sl, r3
   36c10:	b	36c40 <ReadNextStructField+0x2c0>
   36c14:	ldr	r0, [pc, #2464]	; 375bc <ReadNextStructField+0xc3c>
   36c18:	add	r0, pc, r0
   36c1c:	b	36b00 <ReadNextStructField+0x180>
   36c20:	str	r3, [sp, #20]
   36c24:	str	r2, [sp, #24]
   36c28:	str	r1, [sp, #28]
   36c2c:	bl	1508 <Mat_VarCalloc@plt>
   36c30:	ldr	r3, [sp, #20]
   36c34:	str	r0, [sl], #4
   36c38:	ldr	r2, [sp, #24]
   36c3c:	ldr	r1, [sp, #28]
   36c40:	cmp	r2, sl
   36c44:	bne	36c20 <ReadNextStructField+0x2a0>
   36c48:	add	r9, r9, #1
   36c4c:	sub	r2, r3, r1
   36c50:	b	36bf8 <ReadNextStructField+0x278>
   36c54:	ldr	r2, [r6, #52]	; 0x34
   36c58:	ldr	r2, [r2, #8]
   36c5c:	cmp	r2, #0
   36c60:	movne	sl, #0
   36c64:	bne	36d54 <ReadNextStructField+0x3d4>
   36c68:	ldr	r3, [pc, #2384]	; 375c0 <ReadNextStructField+0xc40>
   36c6c:	mov	r8, #0
   36c70:	add	r3, pc, r3
   36c74:	str	r3, [sp, #8]
   36c78:	ldr	r3, [pc, #2372]	; 375c4 <ReadNextStructField+0xc44>
   36c7c:	add	r3, pc, r3
   36c80:	str	r3, [sp, #12]
   36c84:	ldr	r3, [pc, #2364]	; 375c8 <ReadNextStructField+0xc48>
   36c88:	add	r3, pc, r3
   36c8c:	str	r3, [sp, #16]
   36c90:	ldr	r3, [sp, #40]	; 0x28
   36c94:	cmp	r3, r8
   36c98:	bls	369bc <ReadNextStructField+0x3c>
   36c9c:	mov	r2, fp
   36ca0:	mov	r1, r6
   36ca4:	mov	r0, r5
   36ca8:	bl	2260 <InflateVarTag>
   36cac:	ldr	r3, [r5, #20]
   36cb0:	add	r4, r4, r0
   36cb4:	cmp	r3, #0
   36cb8:	beq	36ccc <ReadNextStructField+0x34c>
   36cbc:	mov	r0, fp
   36cc0:	bl	18cc <Mat_uint32Swap>
   36cc4:	add	r0, sp, #52	; 0x34
   36cc8:	bl	18cc <Mat_uint32Swap>
   36ccc:	ldr	r3, [sp, #48]	; 0x30
   36cd0:	ldr	r0, [r7, r8, lsl #2]
   36cd4:	cmp	r3, #14
   36cd8:	beq	36d64 <ReadNextStructField+0x3e4>
   36cdc:	bl	158c <Mat_VarFree@plt>
   36ce0:	ldr	r0, [pc, #2276]	; 375cc <ReadNextStructField+0xc4c>
   36ce4:	mov	r3, #0
   36ce8:	mov	r1, r8
   36cec:	str	r3, [r7, r8, lsl #2]
   36cf0:	add	r0, pc, r0
   36cf4:	bl	161c <Mat_Critical@plt>
   36cf8:	add	r8, r8, #1
   36cfc:	b	36c90 <ReadNextStructField+0x310>
   36d00:	ldr	r0, [r2, r9, lsl #2]
   36d04:	cmp	r0, #0
   36d08:	beq	36d34 <ReadNextStructField+0x3b4>
   36d0c:	str	r3, [sp, #20]
   36d10:	ldr	r3, [sp, #8]
   36d14:	str	r2, [sp, #24]
   36d18:	ldr	r1, [r3, r9, lsl #2]
   36d1c:	str	r1, [sp, #12]
   36d20:	bl	14cc <strdup@plt>
   36d24:	ldr	r1, [sp, #12]
   36d28:	ldr	r3, [sp, #20]
   36d2c:	ldr	r2, [sp, #24]
   36d30:	str	r0, [r1, #36]	; 0x24
   36d34:	add	r9, r9, #1
   36d38:	cmp	r9, r8
   36d3c:	bne	36d00 <ReadNextStructField+0x380>
   36d40:	ldr	r1, [sp, #8]
   36d44:	add	sl, sl, #1
   36d48:	ldr	r0, [sp, #16]
   36d4c:	add	r1, r1, r0
   36d50:	str	r1, [sp, #8]
   36d54:	cmp	r3, sl
   36d58:	beq	36c68 <ReadNextStructField+0x2e8>
   36d5c:	mov	r9, #0
   36d60:	b	36d38 <ReadNextStructField+0x3b8>
   36d64:	ldr	r9, [sp, #52]	; 0x34
   36d68:	cmp	r9, #0
   36d6c:	bne	36d84 <ReadNextStructField+0x404>
   36d70:	ldr	r0, [r0, #52]	; 0x34
   36d74:	bl	1478 <free@plt>
   36d78:	ldr	r3, [r7, r8, lsl #2]
   36d7c:	str	r9, [r3, #52]	; 0x34
   36d80:	b	36cf8 <ReadNextStructField+0x378>
   36d84:	mov	r3, #1
   36d88:	mov	r2, fp
   36d8c:	mov	r1, r6
   36d90:	sub	sl, r9, #16
   36d94:	str	r3, [r0, #48]	; 0x30
   36d98:	mov	r0, r5
   36d9c:	bl	23bc <InflateArrayFlags>
   36da0:	ldr	r3, [r5, #20]
   36da4:	add	r4, r4, r0
   36da8:	cmp	r3, #0
   36dac:	beq	36dd0 <ReadNextStructField+0x450>
   36db0:	mov	r0, fp
   36db4:	bl	18cc <Mat_uint32Swap>
   36db8:	add	r0, sp, #52	; 0x34
   36dbc:	bl	18cc <Mat_uint32Swap>
   36dc0:	add	r0, sp, #56	; 0x38
   36dc4:	bl	18cc <Mat_uint32Swap>
   36dc8:	add	r0, sp, #60	; 0x3c
   36dcc:	bl	18cc <Mat_uint32Swap>
   36dd0:	ldr	r1, [sp, #48]	; 0x30
   36dd4:	cmp	r1, #6
   36dd8:	bne	36edc <ReadNextStructField+0x55c>
   36ddc:	ldr	r3, [sp, #56]	; 0x38
   36de0:	ldr	r2, [r7, r8, lsl #2]
   36de4:	uxtb	r1, r3
   36de8:	and	r0, r3, #2048	; 0x800
   36dec:	cmp	r1, #18
   36df0:	movcs	r1, #0
   36df4:	cmp	r1, #5
   36df8:	str	r0, [r2, #20]
   36dfc:	and	r0, r3, #1024	; 0x400
   36e00:	and	r3, r3, #512	; 0x200
   36e04:	str	r1, [r2, #16]
   36e08:	str	r0, [r2, #24]
   36e0c:	str	r3, [r2, #28]
   36e10:	ldreq	r3, [sp, #60]	; 0x3c
   36e14:	streq	r3, [r2]
   36e18:	ldr	r3, [r7, r8, lsl #2]
   36e1c:	ldr	r3, [r3, #16]
   36e20:	cmp	r3, #17
   36e24:	beq	37068 <ReadNextStructField+0x6e8>
   36e28:	mov	r3, #0
   36e2c:	mov	r2, fp
   36e30:	mov	r1, r6
   36e34:	mov	r0, r5
   36e38:	str	r3, [sp, #44]	; 0x2c
   36e3c:	add	r3, sp, #44	; 0x2c
   36e40:	sub	r9, r9, #24
   36e44:	str	r3, [sp]
   36e48:	mov	r3, #64	; 0x40
   36e4c:	bl	2518 <InflateRankDims>
   36e50:	ldr	sl, [sp, #44]	; 0x2c
   36e54:	add	r4, r4, r0
   36e58:	cmp	sl, #0
   36e5c:	addeq	r3, sp, #56	; 0x38
   36e60:	movne	sl, #1
   36e64:	streq	r3, [sp, #44]	; 0x2c
   36e68:	ldr	r3, [r5, #20]
   36e6c:	cmp	r3, #0
   36e70:	beq	36e84 <ReadNextStructField+0x504>
   36e74:	mov	r0, fp
   36e78:	bl	18cc <Mat_uint32Swap>
   36e7c:	add	r0, sp, #52	; 0x34
   36e80:	bl	18cc <Mat_uint32Swap>
   36e84:	ldr	r3, [sp, #48]	; 0x30
   36e88:	cmp	r3, #5
   36e8c:	bne	36f4c <ReadNextStructField+0x5cc>
   36e90:	ldr	r0, [sp, #52]	; 0x34
   36e94:	ldr	r3, [r7, r8, lsl #2]
   36e98:	add	r2, r0, #3
   36e9c:	cmp	r0, #0
   36ea0:	sub	r9, r9, r0
   36ea4:	movlt	r0, r2
   36ea8:	asr	r0, r0, #2
   36eac:	str	r3, [sp, #20]
   36eb0:	str	r0, [r3, #4]
   36eb4:	lsl	r0, r0, #2
   36eb8:	bl	1544 <malloc@plt>
   36ebc:	ldr	r2, [r5, #20]
   36ec0:	ldr	r3, [sp, #20]
   36ec4:	cmp	r2, #0
   36ec8:	ldreq	ip, [sp, #44]	; 0x2c
   36ecc:	str	r0, [r3, #32]
   36ed0:	beq	37090 <ReadNextStructField+0x710>
   36ed4:	mov	r3, #0
   36ed8:	b	36f2c <ReadNextStructField+0x5ac>
   36edc:	ldr	r0, [pc, #1772]	; 375d0 <ReadNextStructField+0xc50>
   36ee0:	add	r0, pc, r0
   36ee4:	bl	161c <Mat_Critical@plt>
   36ee8:	ldr	r3, [r6, #52]	; 0x34
   36eec:	mov	r2, sl
   36ef0:	mov	r0, r5
   36ef4:	ldr	r1, [r3, #12]
   36ef8:	bl	1e78 <InflateSkip>
   36efc:	add	r4, r4, r0
   36f00:	b	36e18 <ReadNextStructField+0x498>
   36f04:	ldr	r0, [sp, #44]	; 0x2c
   36f08:	str	r3, [sp, #20]
   36f0c:	ldr	r2, [r2, #32]
   36f10:	add	r0, r0, r3, lsl #2
   36f14:	str	r2, [sp, #24]
   36f18:	bl	18cc <Mat_uint32Swap>
   36f1c:	ldr	r3, [sp, #20]
   36f20:	ldr	r2, [sp, #24]
   36f24:	str	r0, [r2, r3, lsl #2]
   36f28:	add	r3, r3, #1
   36f2c:	ldr	r2, [r7, r8, lsl #2]
   36f30:	ldr	r1, [r2, #4]
   36f34:	cmp	r1, r3
   36f38:	bgt	36f04 <ReadNextStructField+0x584>
   36f3c:	ldr	r3, [r7, r8, lsl #2]
   36f40:	ldr	r3, [r3, #4]
   36f44:	tst	r3, #1
   36f48:	subne	r9, r9, #4
   36f4c:	cmp	sl, #0
   36f50:	beq	36f5c <ReadNextStructField+0x5dc>
   36f54:	ldr	r0, [sp, #44]	; 0x2c
   36f58:	bl	1478 <free@plt>
   36f5c:	mov	r2, fp
   36f60:	mov	r1, r6
   36f64:	mov	r0, r5
   36f68:	sub	sl, r9, #8
   36f6c:	bl	2830 <InflateVarNameTag>
   36f70:	ldr	r3, [r7, r8, lsl #2]
   36f74:	add	r4, r4, r0
   36f78:	mov	r1, #56	; 0x38
   36f7c:	mov	r0, #1
   36f80:	ldr	r9, [r3, #52]	; 0x34
   36f84:	bl	140c <calloc@plt>
   36f88:	cmp	r0, #0
   36f8c:	str	r0, [r9, #12]
   36f90:	beq	37100 <ReadNextStructField+0x780>
   36f94:	ldr	r3, [r6, #52]	; 0x34
   36f98:	ldr	r1, [r3, #12]
   36f9c:	bl	15bc <inflateCopy@plt>
   36fa0:	subs	r9, r0, #0
   36fa4:	bne	370ec <ReadNextStructField+0x76c>
   36fa8:	ldr	r3, [r7, r8, lsl #2]
   36fac:	ldr	r0, [r5]
   36fb0:	ldr	r3, [r3, #52]	; 0x34
   36fb4:	str	r3, [sp, #20]
   36fb8:	bl	14b4 <ftell@plt>
   36fbc:	ldr	r1, [r7, r8, lsl #2]
   36fc0:	ldr	r3, [sp, #20]
   36fc4:	ldr	r2, [r1, #52]	; 0x34
   36fc8:	str	r0, [r3]
   36fcc:	ldr	r3, [r2]
   36fd0:	cmn	r3, #1
   36fd4:	beq	370e0 <ReadNextStructField+0x760>
   36fd8:	ldr	r0, [r6, #52]	; 0x34
   36fdc:	ldr	r0, [r0, #12]
   36fe0:	ldr	r0, [r0, #4]
   36fe4:	sub	r3, r3, r0
   36fe8:	str	r3, [r2]
   36fec:	ldr	r3, [r1, #16]
   36ff0:	cmp	r3, #2
   36ff4:	bne	370a0 <ReadNextStructField+0x720>
   36ff8:	mov	r0, r5
   36ffc:	bl	36980 <ReadNextStructField>
   37000:	add	r4, r4, r0
   37004:	ldr	r3, [r7, r8, lsl #2]
   37008:	mov	r2, #0
   3700c:	ldr	r0, [r5]
   37010:	ldr	r3, [r3, #52]	; 0x34
   37014:	ldr	r1, [r3]
   37018:	bl	1694 <fseek@plt>
   3701c:	ldr	r3, [r7, r8, lsl #2]
   37020:	ldr	r2, [r3, #52]	; 0x34
   37024:	ldr	r1, [r2, #16]
   37028:	cmp	r1, #0
   3702c:	bne	37040 <ReadNextStructField+0x6c0>
   37030:	ldr	r3, [r3, #16]
   37034:	sub	r3, r3, #1
   37038:	cmp	r3, #1
   3703c:	bhi	37068 <ReadNextStructField+0x6e8>
   37040:	ldr	r0, [r2, #12]
   37044:	bl	15b0 <inflateEnd@plt>
   37048:	ldr	r3, [r7, r8, lsl #2]
   3704c:	ldr	r3, [r3, #52]	; 0x34
   37050:	ldr	r0, [r3, #12]
   37054:	bl	1478 <free@plt>
   37058:	ldr	r3, [r7, r8, lsl #2]
   3705c:	mov	r2, #0
   37060:	ldr	r3, [r3, #52]	; 0x34
   37064:	str	r2, [r3, #12]
   37068:	ldr	r3, [r6, #52]	; 0x34
   3706c:	mov	r2, sl
   37070:	mov	r0, r5
   37074:	ldr	r1, [r3, #12]
   37078:	bl	1e78 <InflateSkip>
   3707c:	add	r4, r4, r0
   37080:	b	36cf8 <ReadNextStructField+0x378>
   37084:	ldr	r1, [ip, r2, lsl #2]
   37088:	str	r1, [r0, r2, lsl #2]
   3708c:	add	r2, r2, #1
   37090:	ldr	r1, [r3, #4]
   37094:	cmp	r1, r2
   37098:	bgt	37084 <ReadNextStructField+0x704>
   3709c:	b	36f3c <ReadNextStructField+0x5bc>
   370a0:	cmp	r3, #1
   370a4:	bne	370b4 <ReadNextStructField+0x734>
   370a8:	mov	r0, r5
   370ac:	bl	360a4 <ReadNextCell>
   370b0:	b	37000 <ReadNextStructField+0x680>
   370b4:	cmp	sl, #32768	; 0x8000
   370b8:	bgt	37004 <ReadNextStructField+0x684>
   370bc:	mov	r0, r5
   370c0:	bl	3494c <Mat_VarRead5>
   370c4:	ldr	r3, [r7, r8, lsl #2]
   370c8:	ldr	r2, [r3, #52]	; 0x34
   370cc:	ldr	r3, [r3, #40]	; 0x28
   370d0:	str	r3, [r2, #16]
   370d4:	ldr	r3, [r7, r8, lsl #2]
   370d8:	str	r9, [r3, #40]	; 0x28
   370dc:	b	37004 <ReadNextStructField+0x684>
   370e0:	ldr	r0, [sp, #16]
   370e4:	bl	161c <Mat_Critical@plt>
   370e8:	b	3701c <ReadNextStructField+0x69c>
   370ec:	bl	14f0 <zError@plt>
   370f0:	mov	r1, r0
   370f4:	ldr	r0, [sp, #12]
   370f8:	bl	161c <Mat_Critical@plt>
   370fc:	b	37068 <ReadNextStructField+0x6e8>
   37100:	ldr	r0, [sp, #8]
   37104:	bl	161c <Mat_Critical@plt>
   37108:	b	37068 <ReadNextStructField+0x6e8>
   3710c:	mov	r2, #2
   37110:	mov	r1, #4
   37114:	ldr	r3, [r5]
   37118:	mov	r0, fp
   3711c:	bl	1520 <fread@plt>
   37120:	ldr	r3, [r5, #20]
   37124:	mov	r4, r0
   37128:	cmp	r3, #0
   3712c:	beq	37140 <ReadNextStructField+0x7c0>
   37130:	mov	r0, fp
   37134:	bl	18cc <Mat_uint32Swap>
   37138:	add	r0, sp, #52	; 0x34
   3713c:	bl	18cc <Mat_uint32Swap>
   37140:	ldrh	r3, [sp, #48]	; 0x30
   37144:	cmp	r3, #5
   37148:	bne	37214 <ReadNextStructField+0x894>
   3714c:	mov	r2, #2
   37150:	mov	r1, #4
   37154:	ldr	r3, [r5]
   37158:	mov	r0, fp
   3715c:	ldr	r7, [sp, #52]	; 0x34
   37160:	bl	1520 <fread@plt>
   37164:	ldr	r3, [r5, #20]
   37168:	add	r4, r4, r0
   3716c:	cmp	r3, #0
   37170:	beq	37184 <ReadNextStructField+0x804>
   37174:	mov	r0, fp
   37178:	bl	18cc <Mat_uint32Swap>
   3717c:	add	r0, sp, #52	; 0x34
   37180:	bl	18cc <Mat_uint32Swap>
   37184:	ldr	r3, [sp, #52]	; 0x34
   37188:	mov	r1, #4
   3718c:	ldr	r9, [r6, #52]	; 0x34
   37190:	str	r1, [r6, #12]
   37194:	cmp	r3, r7
   37198:	udiv	r8, r3, r7
   3719c:	movcc	r3, #0
   371a0:	strcc	r3, [r9, #4]
   371a4:	strcc	r3, [r9, #8]
   371a8:	bcc	371cc <ReadNextStructField+0x84c>
   371ac:	mov	r0, r8
   371b0:	str	r8, [r9, #4]
   371b4:	bl	140c <calloc@plt>
   371b8:	cmp	r0, #0
   371bc:	str	r0, [r9, #8]
   371c0:	movne	r9, #0
   371c4:	movne	sl, r9
   371c8:	bne	37270 <ReadNextStructField+0x8f0>
   371cc:	mul	r7, r8, r7
   371d0:	ands	r7, r7, #7
   371d4:	beq	371f0 <ReadNextStructField+0x870>
   371d8:	rsb	r7, r7, #8
   371dc:	mov	r2, #1
   371e0:	ldr	r0, [r5]
   371e4:	mov	r1, r7
   371e8:	add	r4, r4, r7
   371ec:	bl	1694 <fseek@plt>
   371f0:	mov	r2, r8
   371f4:	add	r0, sp, #40	; 0x28
   371f8:	ldr	r1, [sp, #36]	; 0x24
   371fc:	bl	3a8c4 <SafeMul>
   37200:	cmp	r0, #0
   37204:	beq	3727c <ReadNextStructField+0x8fc>
   37208:	ldr	r0, [pc, #964]	; 375d4 <ReadNextStructField+0xc54>
   3720c:	add	r0, pc, r0
   37210:	b	36b00 <ReadNextStructField+0x180>
   37214:	ldr	r0, [pc, #956]	; 375d8 <ReadNextStructField+0xc58>
   37218:	add	r0, pc, r0
   3721c:	b	36b00 <ReadNextStructField+0x180>
   37220:	ldr	r3, [r6, #52]	; 0x34
   37224:	mov	r0, r7
   37228:	ldr	r2, [r3, #8]
   3722c:	str	r2, [sp, #8]
   37230:	bl	1544 <malloc@plt>
   37234:	ldr	r2, [sp, #8]
   37238:	cmp	r0, #0
   3723c:	str	r0, [r2, r9, lsl #2]
   37240:	beq	3726c <ReadNextStructField+0x8ec>
   37244:	mov	r2, r7
   37248:	mov	r1, #1
   3724c:	ldr	r3, [r5]
   37250:	bl	1520 <fread@plt>
   37254:	ldr	r3, [r6, #52]	; 0x34
   37258:	add	r4, r4, r0
   3725c:	ldr	r3, [r3, #8]
   37260:	ldr	r3, [r3, r9, lsl #2]
   37264:	add	r3, r3, r7
   37268:	strb	sl, [r3, #-1]
   3726c:	add	r9, r9, #1
   37270:	cmp	r9, r8
   37274:	bne	37220 <ReadNextStructField+0x8a0>
   37278:	b	371cc <ReadNextStructField+0x84c>
   3727c:	mov	r0, r6
   37280:	ldr	r2, [r6, #12]
   37284:	ldr	r1, [sp, #40]	; 0x28
   37288:	bl	3a8c4 <SafeMul>
   3728c:	subs	sl, r0, #0
   37290:	ldrne	r0, [pc, #836]	; 375dc <ReadNextStructField+0xc5c>
   37294:	addne	r0, pc, r0
   37298:	bne	36b00 <ReadNextStructField+0x180>
   3729c:	ldr	r0, [r6]
   372a0:	cmp	r0, #0
   372a4:	beq	369bc <ReadNextStructField+0x3c>
   372a8:	bl	1544 <malloc@plt>
   372ac:	cmp	r0, #0
   372b0:	mov	r9, r0
   372b4:	str	r0, [r6, #40]	; 0x28
   372b8:	beq	369bc <ReadNextStructField+0x3c>
   372bc:	lsl	r3, r8, #2
   372c0:	mov	r7, r0
   372c4:	add	r2, r0, r3
   372c8:	str	r3, [sp, #12]
   372cc:	mvn	r3, #3
   372d0:	mul	r3, r3, r8
   372d4:	str	r3, [sp, #8]
   372d8:	mvn	r3, #7
   372dc:	mul	r3, r3, r8
   372e0:	str	r3, [sp, #16]
   372e4:	ldr	r3, [sp, #36]	; 0x24
   372e8:	cmp	r3, sl
   372ec:	bls	37338 <ReadNextStructField+0x9b8>
   372f0:	ldr	r3, [sp, #8]
   372f4:	add	r1, r3, r2
   372f8:	mov	r3, r1
   372fc:	b	37320 <ReadNextStructField+0x9a0>
   37300:	str	r1, [sp, #20]
   37304:	str	r3, [sp, #24]
   37308:	str	r2, [sp, #28]
   3730c:	bl	1508 <Mat_VarCalloc@plt>
   37310:	ldr	r1, [sp, #20]
   37314:	ldr	r3, [sp, #24]
   37318:	ldr	r2, [sp, #28]
   3731c:	str	r0, [r3], #4
   37320:	cmp	r3, r2
   37324:	bne	37300 <ReadNextStructField+0x980>
   37328:	ldr	r3, [sp, #16]
   3732c:	add	sl, sl, #1
   37330:	sub	r2, r1, r3
   37334:	b	372e4 <ReadNextStructField+0x964>
   37338:	ldr	r2, [r6, #52]	; 0x34
   3733c:	ldr	r2, [r2, #8]
   37340:	cmp	r2, #0
   37344:	movne	sl, #0
   37348:	bne	37420 <ReadNextStructField+0xaa0>
   3734c:	ldr	r9, [pc, #652]	; 375e0 <ReadNextStructField+0xc60>
   37350:	mov	r8, #0
   37354:	add	r9, pc, r9
   37358:	ldr	r3, [sp, #40]	; 0x28
   3735c:	cmp	r3, r8
   37360:	bls	369bc <ReadNextStructField+0x3c>
   37364:	mov	r2, #2
   37368:	mov	r1, #4
   3736c:	ldr	r3, [r5]
   37370:	mov	r0, fp
   37374:	bl	1520 <fread@plt>
   37378:	ldr	r3, [r5, #20]
   3737c:	add	r4, r4, r0
   37380:	cmp	r3, #0
   37384:	beq	37398 <ReadNextStructField+0xa18>
   37388:	mov	r0, fp
   3738c:	bl	18cc <Mat_uint32Swap>
   37390:	add	r0, sp, #52	; 0x34
   37394:	bl	18cc <Mat_uint32Swap>
   37398:	ldr	r3, [sp, #48]	; 0x30
   3739c:	ldr	r6, [sp, #52]	; 0x34
   373a0:	cmp	r3, #14
   373a4:	beq	37430 <ReadNextStructField+0xab0>
   373a8:	ldr	r0, [r7]
   373ac:	bl	158c <Mat_VarFree@plt>
   373b0:	mov	r3, #0
   373b4:	ldr	r0, [r5]
   373b8:	str	r3, [r7]
   373bc:	bl	14b4 <ftell@plt>
   373c0:	mov	r2, r0
   373c4:	ldr	r0, [pc, #536]	; 375e4 <ReadNextStructField+0xc64>
   373c8:	mov	r1, r8
   373cc:	add	r0, pc, r0
   373d0:	bl	161c <Mat_Critical@plt>
   373d4:	b	369bc <ReadNextStructField+0x3c>
   373d8:	ldr	r0, [r2, r6, lsl #2]
   373dc:	cmp	r0, #0
   373e0:	beq	37408 <ReadNextStructField+0xa88>
   373e4:	ldr	r1, [r9, r6, lsl #2]
   373e8:	str	r1, [sp, #8]
   373ec:	str	r3, [sp, #16]
   373f0:	str	r2, [sp, #20]
   373f4:	bl	14cc <strdup@plt>
   373f8:	ldr	r1, [sp, #8]
   373fc:	ldr	r3, [sp, #16]
   37400:	ldr	r2, [sp, #20]
   37404:	str	r0, [r1, #36]	; 0x24
   37408:	add	r6, r6, #1
   3740c:	cmp	r6, r8
   37410:	bne	373d8 <ReadNextStructField+0xa58>
   37414:	ldr	r1, [sp, #12]
   37418:	add	sl, sl, #1
   3741c:	add	r9, r9, r1
   37420:	cmp	r3, sl
   37424:	beq	3734c <ReadNextStructField+0x9cc>
   37428:	mov	r6, #0
   3742c:	b	3740c <ReadNextStructField+0xa8c>
   37430:	cmp	r6, #0
   37434:	bne	37458 <ReadNextStructField+0xad8>
   37438:	ldr	r3, [r7]
   3743c:	ldr	r0, [r3, #52]	; 0x34
   37440:	bl	1478 <free@plt>
   37444:	ldr	r3, [r7]
   37448:	str	r6, [r3, #52]	; 0x34
   3744c:	add	r8, r8, #1
   37450:	add	r7, r7, #4
   37454:	b	37358 <ReadNextStructField+0x9d8>
   37458:	mov	r2, #6
   3745c:	mov	r1, #4
   37460:	ldr	r3, [r5]
   37464:	mov	r0, fp
   37468:	bl	1520 <fread@plt>
   3746c:	ldr	r3, [r5, #20]
   37470:	add	r4, r4, r0
   37474:	cmp	r3, #0
   37478:	beq	374ac <ReadNextStructField+0xb2c>
   3747c:	mov	r0, fp
   37480:	bl	18cc <Mat_uint32Swap>
   37484:	add	r0, sp, #52	; 0x34
   37488:	bl	18cc <Mat_uint32Swap>
   3748c:	add	r0, sp, #56	; 0x38
   37490:	bl	18cc <Mat_uint32Swap>
   37494:	add	r0, sp, #60	; 0x3c
   37498:	bl	18cc <Mat_uint32Swap>
   3749c:	add	r0, sp, #64	; 0x40
   374a0:	bl	18cc <Mat_uint32Swap>
   374a4:	add	r0, sp, #68	; 0x44
   374a8:	bl	18cc <Mat_uint32Swap>
   374ac:	ldr	r3, [sp, #48]	; 0x30
   374b0:	sub	r6, r6, #24
   374b4:	cmp	r3, #6
   374b8:	bne	374f8 <ReadNextStructField+0xb78>
   374bc:	ldr	r3, [sp, #56]	; 0x38
   374c0:	ldr	r2, [r7]
   374c4:	uxtb	r1, r3
   374c8:	and	r0, r3, #2048	; 0x800
   374cc:	cmp	r1, #18
   374d0:	movcs	r1, #0
   374d4:	cmp	r1, #5
   374d8:	str	r0, [r2, #20]
   374dc:	and	r0, r3, #1024	; 0x400
   374e0:	and	r3, r3, #512	; 0x200
   374e4:	str	r1, [r2, #16]
   374e8:	str	r0, [r2, #24]
   374ec:	str	r3, [r2, #28]
   374f0:	ldreq	r3, [sp, #60]	; 0x3c
   374f4:	streq	r3, [r2]
   374f8:	mov	r0, r5
   374fc:	ldr	r1, [r7]
   37500:	ldrd	r2, [sp, #64]	; 0x40
   37504:	bl	32a64 <ReadRankDims>
   37508:	add	r4, r4, r0
   3750c:	mov	r1, #1
   37510:	ldr	r3, [r5]
   37514:	sub	r6, r6, r0
   37518:	mov	r2, #8
   3751c:	mov	r0, fp
   37520:	sub	r6, r6, #8
   37524:	bl	1520 <fread@plt>
   37528:	ldr	r3, [r7]
   3752c:	add	r4, r4, r0
   37530:	ldr	r0, [r5]
   37534:	ldr	sl, [r3, #52]	; 0x34
   37538:	bl	14b4 <ftell@plt>
   3753c:	ldr	r1, [r7]
   37540:	ldr	r3, [r1, #52]	; 0x34
   37544:	str	r0, [sl]
   37548:	ldr	r3, [r3]
   3754c:	cmn	r3, #1
   37550:	beq	375a0 <ReadNextStructField+0xc20>
   37554:	ldr	r3, [r1, #16]
   37558:	cmp	r3, #2
   3755c:	bne	3758c <ReadNextStructField+0xc0c>
   37560:	mov	r0, r5
   37564:	bl	36980 <ReadNextStructField>
   37568:	add	r4, r4, r0
   3756c:	ldr	r3, [r7]
   37570:	mov	r2, #0
   37574:	ldr	r0, [r5]
   37578:	ldr	r3, [r3, #52]	; 0x34
   3757c:	ldr	r1, [r3]
   37580:	add	r1, r6, r1
   37584:	bl	1694 <fseek@plt>
   37588:	b	3744c <ReadNextStructField+0xacc>
   3758c:	cmp	r3, #1
   37590:	bne	3756c <ReadNextStructField+0xbec>
   37594:	mov	r0, r5
   37598:	bl	360a4 <ReadNextCell>
   3759c:	b	37568 <ReadNextStructField+0xbe8>
   375a0:	mov	r0, r9
   375a4:	bl	161c <Mat_Critical@plt>
   375a8:	b	3744c <ReadNextStructField+0xacc>
   375ac:	.word	0x000082e7
   375b0:	.word	0x000081ab
   375b4:	.word	0x00008451
   375b8:	.word	0x000080f7
   375bc:	.word	0x000080a3
   375c0:	.word	0x0000829c
   375c4:	.word	0x00008272
   375c8:	.word	0x00007f5d
   375cc:	.word	0x0000827a
   375d0:	.word	0x00007fe1
   375d4:	.word	0x00007a8f
   375d8:	.word	0x00007d35
   375dc:	.word	0x00007a07
   375e0:	.word	0x00007891
   375e4:	.word	0x00007bce

000375e8 <Mat_VarReadData5>:
   375e8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   375ec:	mov	r6, r3
   375f0:	sub	sp, sp, #100	; 0x64
   375f4:	mov	r4, r1
   375f8:	mov	r5, r0
   375fc:	mov	r9, r2
   37600:	mov	r2, #0
   37604:	ldr	r3, [r1, #52]	; 0x34
   37608:	ldr	r0, [r0]
   3760c:	ldr	r7, [sp, #136]	; 0x88
   37610:	ldr	r1, [r3]
   37614:	ldr	r8, [sp, #140]	; 0x8c
   37618:	bl	1694 <fseek@plt>
   3761c:	ldr	sl, [r4, #48]	; 0x30
   37620:	cmp	sl, #0
   37624:	bne	3769c <Mat_VarReadData5+0xb4>
   37628:	add	fp, sp, #32
   3762c:	mov	r2, #2
   37630:	ldr	r3, [r5]
   37634:	mov	r1, #4
   37638:	mov	r0, fp
   3763c:	bl	1520 <fread@plt>
   37640:	ldr	r3, [r5, #20]
   37644:	cmp	r3, #0
   37648:	beq	3765c <Mat_VarReadData5+0x74>
   3764c:	mov	r0, fp
   37650:	bl	189c <Mat_int32Swap>
   37654:	add	r0, sp, #36	; 0x24
   37658:	bl	189c <Mat_int32Swap>
   3765c:	ldr	r3, [sp, #32]
   37660:	uxtb	r2, r3
   37664:	lsr	r3, r3, #16
   37668:	cmp	r2, #24
   3766c:	lsl	r3, r3, #16
   37670:	movle	sl, r2
   37674:	cmp	r3, #0
   37678:	str	sl, [r4, #8]
   3767c:	beq	377f4 <Mat_VarReadData5+0x20c>
   37680:	mov	r2, #1
   37684:	mvn	r1, #3
   37688:	ldr	r0, [r5]
   3768c:	bl	1694 <fseek@plt>
   37690:	ldrsh	r3, [sp, #34]	; 0x22
   37694:	add	r3, r3, #4
   37698:	b	377fc <Mat_VarReadData5+0x214>
   3769c:	cmp	sl, #1
   376a0:	movne	r3, #0
   376a4:	bne	377fc <Mat_VarReadData5+0x214>
   376a8:	ldr	r3, [r4, #52]	; 0x34
   376ac:	ldr	fp, [r3, #16]
   376b0:	cmp	fp, #0
   376b4:	beq	37744 <Mat_VarReadData5+0x15c>
   376b8:	ldr	ip, [r4]
   376bc:	ldr	lr, [r4, #20]
   376c0:	ldmib	r4, {r0, r3}
   376c4:	ldr	r2, [r4, #16]
   376c8:	cmp	lr, #0
   376cc:	ldr	r1, [r4, #32]
   376d0:	stm	sp, {r1, r6, r7, r8}
   376d4:	str	r0, [sp, #16]
   376d8:	str	ip, [sp, #20]
   376dc:	beq	37738 <Mat_VarReadData5+0x150>
   376e0:	ldr	r1, [r9]
   376e4:	ldr	r0, [fp]
   376e8:	bl	1c104 <GetDataSlab>
   376ec:	subs	sl, r0, #0
   376f0:	bne	3772c <Mat_VarReadData5+0x144>
   376f4:	ldr	r3, [r4]
   376f8:	ldr	r1, [r9, #4]
   376fc:	ldr	r2, [r4, #16]
   37700:	strd	r6, [sp, #4]
   37704:	str	r8, [sp, #12]
   37708:	str	r3, [sp, #20]
   3770c:	ldr	r3, [r4, #4]
   37710:	str	r3, [sp, #16]
   37714:	ldr	r3, [r4, #32]
   37718:	str	r3, [sp]
   3771c:	ldr	r0, [fp, #4]
   37720:	ldr	r3, [r4, #8]
   37724:	bl	1c104 <GetDataSlab>
   37728:	mov	sl, r0
   3772c:	mov	r0, sl
   37730:	add	sp, sp, #100	; 0x64
   37734:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   37738:	mov	r1, r9
   3773c:	mov	r0, fp
   37740:	b	37724 <Mat_VarReadData5+0x13c>
   37744:	add	sl, sp, #40	; 0x28
   37748:	ldr	r1, [r3, #12]
   3774c:	mov	r0, sl
   37750:	bl	15bc <inflateCopy@plt>
   37754:	subs	r3, r0, #0
   37758:	beq	37778 <Mat_VarReadData5+0x190>
   3775c:	bl	14f0 <zError@plt>
   37760:	mov	r1, r0
   37764:	ldr	r0, [pc, #1416]	; 37cf4 <Mat_VarReadData5+0x70c>
   37768:	mvn	sl, #0
   3776c:	add	r0, pc, r0
   37770:	bl	161c <Mat_Critical@plt>
   37774:	b	3772c <Mat_VarReadData5+0x144>
   37778:	add	fp, sp, #32
   3777c:	mov	r1, sl
   37780:	str	r3, [sp, #44]	; 0x2c
   37784:	mov	r2, fp
   37788:	mov	r0, r5
   3778c:	bl	2c70 <InflateDataType>
   37790:	ldr	r3, [r5, #20]
   37794:	cmp	r3, #0
   37798:	beq	377a4 <Mat_VarReadData5+0x1bc>
   3779c:	mov	r0, fp
   377a0:	bl	189c <Mat_int32Swap>
   377a4:	ldr	r3, [sp, #32]
   377a8:	uxtb	r2, r3
   377ac:	cmp	r2, #24
   377b0:	movgt	r2, #0
   377b4:	str	r2, [r4, #8]
   377b8:	lsr	r2, r3, #16
   377bc:	lsl	r2, r2, #16
   377c0:	cmp	r2, #0
   377c4:	asrne	r3, r3, #16
   377c8:	bne	37694 <Mat_VarReadData5+0xac>
   377cc:	add	fp, sp, #36	; 0x24
   377d0:	mov	r1, sl
   377d4:	mov	r2, fp
   377d8:	mov	r0, r5
   377dc:	bl	2c70 <InflateDataType>
   377e0:	ldr	r3, [r5, #20]
   377e4:	cmp	r3, #0
   377e8:	beq	377f4 <Mat_VarReadData5+0x20c>
   377ec:	mov	r0, fp
   377f0:	bl	189c <Mat_int32Swap>
   377f4:	ldr	r3, [sp, #36]	; 0x24
   377f8:	add	r3, r3, #8
   377fc:	str	r3, [sp, #24]
   37800:	ldr	r3, [sp, #24]
   37804:	ands	r3, r3, #7
   37808:	beq	3782c <Mat_VarReadData5+0x244>
   3780c:	ldr	r2, [sp, #24]
   37810:	rsbs	r2, r2, #0
   37814:	and	r2, r2, #7
   37818:	rsbpl	r3, r2, #0
   3781c:	ldr	r2, [sp, #24]
   37820:	rsb	r3, r3, #8
   37824:	add	r3, r2, r3
   37828:	str	r3, [sp, #24]
   3782c:	ldr	r3, [r4, #4]
   37830:	cmp	r3, #2
   37834:	str	r3, [sp, #28]
   37838:	bne	37ab4 <Mat_VarReadData5+0x4cc>
   3783c:	ldr	r3, [r8]
   37840:	ldr	r2, [r6]
   37844:	ldr	r0, [r7]
   37848:	sub	r3, r3, #1
   3784c:	ldr	r1, [r4, #32]
   37850:	mla	r3, r0, r3, r2
   37854:	ldr	r2, [r1]
   37858:	add	r3, r3, #1
   3785c:	cmp	r3, r2
   37860:	bhi	37cec <Mat_VarReadData5+0x704>
   37864:	ldr	r3, [r8, #4]
   37868:	ldr	r2, [r6, #4]
   3786c:	ldr	r0, [r7, #4]
   37870:	sub	r3, r3, #1
   37874:	mla	r3, r0, r3, r2
   37878:	ldr	r2, [r1, #4]
   3787c:	add	r3, r3, #1
   37880:	cmp	r3, r2
   37884:	bhi	37cec <Mat_VarReadData5+0x704>
   37888:	ldr	r2, [r4, #16]
   3788c:	ldr	fp, [r4, #48]	; 0x30
   37890:	cmp	fp, #0
   37894:	bne	3797c <Mat_VarReadData5+0x394>
   37898:	ldr	r3, [r4, #8]
   3789c:	ldr	r0, [r4, #20]
   378a0:	stm	sp, {r1, r6, r7, r8}
   378a4:	cmp	r0, #0
   378a8:	moveq	r1, r9
   378ac:	beq	37954 <Mat_VarReadData5+0x36c>
   378b0:	mov	r0, r5
   378b4:	ldr	r1, [r9]
   378b8:	add	sl, sp, #32
   378bc:	bl	195d0 <ReadDataSlab2>
   378c0:	ldr	r3, [r4, #52]	; 0x34
   378c4:	mov	r2, fp
   378c8:	ldr	r0, [r5]
   378cc:	ldr	r1, [r3]
   378d0:	ldr	r3, [sp, #24]
   378d4:	add	r1, r3, r1
   378d8:	bl	1694 <fseek@plt>
   378dc:	mov	r1, #4
   378e0:	mov	r0, sl
   378e4:	ldr	r3, [r5]
   378e8:	ldr	r2, [sp, #28]
   378ec:	bl	1520 <fread@plt>
   378f0:	ldr	r3, [r5, #20]
   378f4:	cmp	r3, #0
   378f8:	beq	3790c <Mat_VarReadData5+0x324>
   378fc:	mov	r0, sl
   37900:	bl	189c <Mat_int32Swap>
   37904:	add	r0, sp, #36	; 0x24
   37908:	bl	189c <Mat_int32Swap>
   3790c:	ldr	r3, [sp, #32]
   37910:	uxtb	r2, r3
   37914:	lsr	r3, r3, #16
   37918:	cmp	r2, #24
   3791c:	lsl	r3, r3, #16
   37920:	movle	fp, r2
   37924:	cmp	r3, #0
   37928:	str	fp, [r4, #8]
   3792c:	beq	37940 <Mat_VarReadData5+0x358>
   37930:	mov	r2, #1
   37934:	mvn	r1, #3
   37938:	ldr	r0, [r5]
   3793c:	bl	1694 <fseek@plt>
   37940:	ldr	r1, [r9, #4]
   37944:	ldr	r3, [r4, #32]
   37948:	ldr	r2, [r4, #16]
   3794c:	stm	sp, {r3, r6, r7, r8}
   37950:	ldr	r3, [r4, #8]
   37954:	mov	r0, r5
   37958:	bl	195d0 <ReadDataSlab2>
   3795c:	ldr	r0, [r4, #16]
   37960:	mov	sl, #0
   37964:	bl	3a83c <ClassType2DataType>
   37968:	str	r0, [r4, #8]
   3796c:	ldr	r0, [r4, #16]
   37970:	bl	167c <Mat_SizeOfClass@plt>
   37974:	str	r0, [r4, #12]
   37978:	b	3772c <Mat_VarReadData5+0x144>
   3797c:	cmp	fp, #1
   37980:	bne	3795c <Mat_VarReadData5+0x374>
   37984:	ldr	r3, [r4, #8]
   37988:	add	fp, sp, #40	; 0x28
   3798c:	ldr	sl, [r4, #20]
   37990:	str	r3, [sp]
   37994:	mov	r3, r2
   37998:	stmib	sp, {r1, r6, r7, r8}
   3799c:	cmp	sl, #0
   379a0:	moveq	r2, r9
   379a4:	beq	37a94 <Mat_VarReadData5+0x4ac>
   379a8:	mov	r1, fp
   379ac:	mov	r0, r5
   379b0:	ldr	r2, [r9]
   379b4:	bl	1a7e4 <ReadCompressedDataSlab2>
   379b8:	ldr	r3, [r4, #52]	; 0x34
   379bc:	mov	r2, #0
   379c0:	ldr	r0, [r5]
   379c4:	ldr	r1, [r3]
   379c8:	bl	1694 <fseek@plt>
   379cc:	mov	r0, fp
   379d0:	bl	15b0 <inflateEnd@plt>
   379d4:	ldr	r3, [r4, #52]	; 0x34
   379d8:	mov	r0, fp
   379dc:	ldr	r1, [r3, #12]
   379e0:	bl	15bc <inflateCopy@plt>
   379e4:	subs	sl, r0, #0
   379e8:	beq	37a00 <Mat_VarReadData5+0x418>
   379ec:	bl	14f0 <zError@plt>
   379f0:	mov	r1, r0
   379f4:	ldr	r0, [pc, #764]	; 37cf8 <Mat_VarReadData5+0x710>
   379f8:	add	r0, pc, r0
   379fc:	bl	161c <Mat_Critical@plt>
   37a00:	mov	r1, fp
   37a04:	mov	r0, r5
   37a08:	ldr	r2, [sp, #24]
   37a0c:	bl	1e78 <InflateSkip>
   37a10:	mov	r3, #0
   37a14:	mov	r1, fp
   37a18:	mov	r0, r5
   37a1c:	str	r3, [sp, #44]	; 0x2c
   37a20:	add	r3, sp, #32
   37a24:	mov	r2, r3
   37a28:	str	r3, [sp, #24]
   37a2c:	bl	2c70 <InflateDataType>
   37a30:	ldr	r2, [r5, #20]
   37a34:	ldr	r3, [sp, #24]
   37a38:	cmp	r2, #0
   37a3c:	beq	37a48 <Mat_VarReadData5+0x460>
   37a40:	mov	r0, r3
   37a44:	bl	189c <Mat_int32Swap>
   37a48:	ldr	r3, [sp, #32]
   37a4c:	uxtb	r2, r3
   37a50:	lsr	r3, r3, #16
   37a54:	cmp	r2, #24
   37a58:	lsl	r3, r3, #16
   37a5c:	movgt	r2, #0
   37a60:	cmp	r3, #0
   37a64:	str	r2, [r4, #8]
   37a68:	bne	37a7c <Mat_VarReadData5+0x494>
   37a6c:	mov	r2, #4
   37a70:	mov	r1, fp
   37a74:	mov	r0, r5
   37a78:	bl	1e78 <InflateSkip>
   37a7c:	ldr	r3, [r4, #32]
   37a80:	ldr	r2, [r9, #4]
   37a84:	stmib	sp, {r3, r6, r7, r8}
   37a88:	ldr	r3, [r4, #8]
   37a8c:	str	r3, [sp]
   37a90:	ldr	r3, [r4, #16]
   37a94:	mov	r1, fp
   37a98:	mov	r0, r5
   37a9c:	bl	1a7e4 <ReadCompressedDataSlab2>
   37aa0:	mov	r0, fp
   37aa4:	bl	15b0 <inflateEnd@plt>
   37aa8:	cmp	sl, #0
   37aac:	bne	3772c <Mat_VarReadData5+0x144>
   37ab0:	b	3795c <Mat_VarReadData5+0x374>
   37ab4:	ldr	r2, [r4, #16]
   37ab8:	ldr	sl, [r4, #48]	; 0x30
   37abc:	cmp	sl, #0
   37ac0:	bne	37ba0 <Mat_VarReadData5+0x5b8>
   37ac4:	ldr	r3, [r4, #8]
   37ac8:	ldr	r1, [r4, #32]
   37acc:	ldr	r0, [r4, #20]
   37ad0:	stmib	sp, {r1, r6, r7, r8}
   37ad4:	cmp	r0, #0
   37ad8:	ldr	r1, [sp, #28]
   37adc:	str	r1, [sp]
   37ae0:	moveq	r1, r9
   37ae4:	beq	37b94 <Mat_VarReadData5+0x5ac>
   37ae8:	mov	r0, r5
   37aec:	ldr	r1, [r9]
   37af0:	add	fp, sp, #32
   37af4:	bl	1368c <ReadDataSlabN>
   37af8:	ldr	r3, [r4, #52]	; 0x34
   37afc:	mov	r2, sl
   37b00:	ldr	r0, [r5]
   37b04:	ldr	r1, [r3]
   37b08:	ldr	r3, [sp, #24]
   37b0c:	add	r1, r3, r1
   37b10:	bl	1694 <fseek@plt>
   37b14:	mov	r2, #2
   37b18:	mov	r1, #4
   37b1c:	ldr	r3, [r5]
   37b20:	mov	r0, fp
   37b24:	bl	1520 <fread@plt>
   37b28:	ldr	r3, [r5, #20]
   37b2c:	cmp	r3, #0
   37b30:	beq	37b44 <Mat_VarReadData5+0x55c>
   37b34:	mov	r0, fp
   37b38:	bl	189c <Mat_int32Swap>
   37b3c:	add	r0, sp, #36	; 0x24
   37b40:	bl	189c <Mat_int32Swap>
   37b44:	ldr	r3, [sp, #32]
   37b48:	uxtb	r2, r3
   37b4c:	lsr	r3, r3, #16
   37b50:	cmp	r2, #24
   37b54:	lsl	r3, r3, #16
   37b58:	movle	sl, r2
   37b5c:	cmp	r3, #0
   37b60:	str	sl, [r4, #8]
   37b64:	beq	37b78 <Mat_VarReadData5+0x590>
   37b68:	mov	r2, #1
   37b6c:	mvn	r1, #3
   37b70:	ldr	r0, [r5]
   37b74:	bl	1694 <fseek@plt>
   37b78:	ldr	r1, [r9, #4]
   37b7c:	ldr	r3, [r4, #32]
   37b80:	ldr	r2, [r4, #16]
   37b84:	stmib	sp, {r3, r6, r7, r8}
   37b88:	ldr	r3, [r4, #4]
   37b8c:	str	r3, [sp]
   37b90:	ldr	r3, [r4, #8]
   37b94:	mov	r0, r5
   37b98:	bl	1368c <ReadDataSlabN>
   37b9c:	b	3795c <Mat_VarReadData5+0x374>
   37ba0:	cmp	sl, #1
   37ba4:	bne	3795c <Mat_VarReadData5+0x374>
   37ba8:	ldr	r3, [r4, #8]
   37bac:	add	fp, sp, #40	; 0x28
   37bb0:	ldr	r1, [r4, #32]
   37bb4:	ldr	sl, [r4, #20]
   37bb8:	str	r3, [sp]
   37bbc:	mov	r3, r2
   37bc0:	str	r1, [sp, #8]
   37bc4:	ldr	r1, [sp, #28]
   37bc8:	cmp	sl, #0
   37bcc:	moveq	r2, r9
   37bd0:	str	r1, [sp, #4]
   37bd4:	strd	r6, [sp, #12]
   37bd8:	str	r8, [sp, #20]
   37bdc:	beq	37cdc <Mat_VarReadData5+0x6f4>
   37be0:	mov	r1, fp
   37be4:	mov	r0, r5
   37be8:	ldr	r2, [r9]
   37bec:	bl	16244 <ReadCompressedDataSlabN>
   37bf0:	ldr	r3, [r4, #52]	; 0x34
   37bf4:	mov	r2, #0
   37bf8:	ldr	r0, [r5]
   37bfc:	ldr	r1, [r3]
   37c00:	bl	1694 <fseek@plt>
   37c04:	mov	r0, fp
   37c08:	bl	15b0 <inflateEnd@plt>
   37c0c:	ldr	r3, [r4, #52]	; 0x34
   37c10:	mov	r0, fp
   37c14:	ldr	r1, [r3, #12]
   37c18:	bl	15bc <inflateCopy@plt>
   37c1c:	subs	sl, r0, #0
   37c20:	beq	37c38 <Mat_VarReadData5+0x650>
   37c24:	bl	14f0 <zError@plt>
   37c28:	mov	r1, r0
   37c2c:	ldr	r0, [pc, #200]	; 37cfc <Mat_VarReadData5+0x714>
   37c30:	add	r0, pc, r0
   37c34:	bl	161c <Mat_Critical@plt>
   37c38:	mov	r1, fp
   37c3c:	mov	r0, r5
   37c40:	ldr	r2, [sp, #24]
   37c44:	bl	1e78 <InflateSkip>
   37c48:	mov	r3, #0
   37c4c:	mov	r1, fp
   37c50:	mov	r0, r5
   37c54:	str	r3, [sp, #44]	; 0x2c
   37c58:	add	r3, sp, #32
   37c5c:	mov	r2, r3
   37c60:	str	r3, [sp, #24]
   37c64:	bl	2c70 <InflateDataType>
   37c68:	ldr	r2, [r5, #20]
   37c6c:	ldr	r3, [sp, #24]
   37c70:	cmp	r2, #0
   37c74:	beq	37c80 <Mat_VarReadData5+0x698>
   37c78:	mov	r0, r3
   37c7c:	bl	189c <Mat_int32Swap>
   37c80:	ldr	r3, [sp, #32]
   37c84:	uxtb	r2, r3
   37c88:	lsr	r3, r3, #16
   37c8c:	cmp	r2, #24
   37c90:	lsl	r3, r3, #16
   37c94:	movgt	r2, #0
   37c98:	cmp	r3, #0
   37c9c:	str	r2, [r4, #8]
   37ca0:	bne	37cb4 <Mat_VarReadData5+0x6cc>
   37ca4:	mov	r2, #4
   37ca8:	mov	r1, fp
   37cac:	mov	r0, r5
   37cb0:	bl	1e78 <InflateSkip>
   37cb4:	ldr	r3, [r4, #32]
   37cb8:	ldr	r2, [r9, #4]
   37cbc:	str	r3, [sp, #8]
   37cc0:	strd	r6, [sp, #12]
   37cc4:	str	r8, [sp, #20]
   37cc8:	ldr	r3, [r4, #4]
   37ccc:	str	r3, [sp, #4]
   37cd0:	ldr	r3, [r4, #8]
   37cd4:	str	r3, [sp]
   37cd8:	ldr	r3, [r4, #16]
   37cdc:	mov	r1, fp
   37ce0:	mov	r0, r5
   37ce4:	bl	16244 <ReadCompressedDataSlabN>
   37ce8:	b	37aa0 <Mat_VarReadData5+0x4b8>
   37cec:	mov	sl, #1
   37cf0:	b	3772c <Mat_VarReadData5+0x144>
   37cf4:	.word	0x00007782
   37cf8:	.word	0x000074f6
   37cfc:	.word	0x000072be

00037d00 <Mat_VarReadDataLinear5>:
   37d00:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   37d04:	mov	ip, #1
   37d08:	sub	sp, sp, #92	; 0x5c
   37d0c:	str	ip, [sp, #20]
   37d10:	ldr	ip, [r0, #16]
   37d14:	ldr	r9, [sp, #132]	; 0x84
   37d18:	cmp	ip, #16
   37d1c:	beq	37e78 <Mat_VarReadDataLinear5+0x178>
   37d20:	mov	r7, r3
   37d24:	ldr	r3, [r1, #52]	; 0x34
   37d28:	mov	r4, r1
   37d2c:	mov	r8, r2
   37d30:	mov	r5, r0
   37d34:	mov	r2, #0
   37d38:	ldr	r0, [r0]
   37d3c:	ldr	r1, [r3]
   37d40:	bl	1694 <fseek@plt>
   37d44:	ldr	r3, [r4, #48]	; 0x30
   37d48:	cmp	r3, #0
   37d4c:	bne	37dbc <Mat_VarReadDataLinear5+0xbc>
   37d50:	add	r6, sp, #24
   37d54:	mov	r2, #2
   37d58:	ldr	r3, [r5]
   37d5c:	mov	r1, #4
   37d60:	mov	r0, r6
   37d64:	bl	1520 <fread@plt>
   37d68:	ldr	r3, [r5, #20]
   37d6c:	cmp	r3, #0
   37d70:	beq	37d84 <Mat_VarReadDataLinear5+0x84>
   37d74:	mov	r0, r6
   37d78:	bl	189c <Mat_int32Swap>
   37d7c:	add	r0, sp, #28
   37d80:	bl	189c <Mat_int32Swap>
   37d84:	ldr	r3, [sp, #24]
   37d88:	uxtb	r2, r3
   37d8c:	lsr	r3, r3, #16
   37d90:	lsl	r3, r3, #16
   37d94:	str	r2, [r4, #8]
   37d98:	cmp	r3, #0
   37d9c:	beq	37ef8 <Mat_VarReadDataLinear5+0x1f8>
   37da0:	mov	r2, #1
   37da4:	mvn	r1, #3
   37da8:	ldr	r0, [r5]
   37dac:	bl	1694 <fseek@plt>
   37db0:	ldrsh	r6, [sp, #26]
   37db4:	add	r6, r6, #4
   37db8:	b	37f00 <Mat_VarReadDataLinear5+0x200>
   37dbc:	cmp	r3, #1
   37dc0:	movne	r6, #0
   37dc4:	bne	37f00 <Mat_VarReadDataLinear5+0x200>
   37dc8:	ldr	r3, [r4, #52]	; 0x34
   37dcc:	ldr	r6, [r3, #16]
   37dd0:	cmp	r6, #0
   37dd4:	beq	37e48 <Mat_VarReadDataLinear5+0x148>
   37dd8:	ldr	r3, [r4, #8]
   37ddc:	ldr	r1, [r4, #20]
   37de0:	ldr	r2, [r4, #16]
   37de4:	str	r7, [sp]
   37de8:	cmp	r1, #0
   37dec:	ldr	r1, [sp, #128]	; 0x80
   37df0:	stmib	sp, {r1, r9}
   37df4:	beq	37e3c <Mat_VarReadDataLinear5+0x13c>
   37df8:	ldr	r0, [r6]
   37dfc:	ldr	r1, [r8]
   37e00:	bl	32374 <GetDataLinear>
   37e04:	subs	fp, r0, #0
   37e08:	bne	37e30 <Mat_VarReadDataLinear5+0x130>
   37e0c:	ldr	r3, [sp, #128]	; 0x80
   37e10:	str	r7, [sp]
   37e14:	stmib	sp, {r3, r9}
   37e18:	ldr	r0, [r6, #4]
   37e1c:	ldr	r1, [r8, #4]
   37e20:	ldr	r3, [r4, #8]
   37e24:	ldr	r2, [r4, #16]
   37e28:	bl	32374 <GetDataLinear>
   37e2c:	mov	fp, r0
   37e30:	mov	r0, fp
   37e34:	add	sp, sp, #92	; 0x5c
   37e38:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   37e3c:	mov	r1, r8
   37e40:	mov	r0, r6
   37e44:	b	37e28 <Mat_VarReadDataLinear5+0x128>
   37e48:	ldr	r1, [r3, #12]
   37e4c:	add	sl, sp, #32
   37e50:	mov	r0, sl
   37e54:	str	r6, [r1, #4]
   37e58:	bl	15bc <inflateCopy@plt>
   37e5c:	cmp	r0, #0
   37e60:	beq	37e80 <Mat_VarReadDataLinear5+0x180>
   37e64:	bl	14f0 <zError@plt>
   37e68:	mov	r1, r0
   37e6c:	ldr	r0, [pc, #776]	; 3817c <Mat_VarReadDataLinear5+0x47c>
   37e70:	add	r0, pc, r0
   37e74:	bl	161c <Mat_Critical@plt>
   37e78:	mvn	fp, #0
   37e7c:	b	37e30 <Mat_VarReadDataLinear5+0x130>
   37e80:	add	r6, sp, #24
   37e84:	mov	r1, sl
   37e88:	mov	r2, r6
   37e8c:	mov	r0, r5
   37e90:	bl	2c70 <InflateDataType>
   37e94:	ldr	r3, [r5, #20]
   37e98:	cmp	r3, #0
   37e9c:	beq	37eb0 <Mat_VarReadDataLinear5+0x1b0>
   37ea0:	mov	r0, r6
   37ea4:	bl	189c <Mat_int32Swap>
   37ea8:	add	r0, sp, #28
   37eac:	bl	189c <Mat_int32Swap>
   37eb0:	ldr	r6, [sp, #24]
   37eb4:	uxtb	r3, r6
   37eb8:	str	r3, [r4, #8]
   37ebc:	lsr	r3, r6, #16
   37ec0:	lsl	r3, r3, #16
   37ec4:	cmp	r3, #0
   37ec8:	asrne	r6, r6, #16
   37ecc:	bne	37db4 <Mat_VarReadDataLinear5+0xb4>
   37ed0:	add	r6, sp, #28
   37ed4:	mov	r1, sl
   37ed8:	mov	r2, r6
   37edc:	mov	r0, r5
   37ee0:	bl	2c70 <InflateDataType>
   37ee4:	ldr	r3, [r5, #20]
   37ee8:	cmp	r3, #0
   37eec:	beq	37ef8 <Mat_VarReadDataLinear5+0x1f8>
   37ef0:	mov	r0, r6
   37ef4:	bl	189c <Mat_int32Swap>
   37ef8:	ldr	r6, [sp, #28]
   37efc:	add	r6, r6, #8
   37f00:	ands	r3, r6, #7
   37f04:	beq	37f1c <Mat_VarReadDataLinear5+0x21c>
   37f08:	rsbs	r2, r6, #0
   37f0c:	and	r2, r2, #7
   37f10:	rsbpl	r3, r2, #0
   37f14:	rsb	r3, r3, #8
   37f18:	add	r6, r6, r3
   37f1c:	add	r1, sp, #20
   37f20:	mov	r0, r4
   37f24:	bl	3a864 <SafeMulDims>
   37f28:	subs	fp, r0, #0
   37f2c:	beq	37f3c <Mat_VarReadDataLinear5+0x23c>
   37f30:	ldr	r0, [pc, #584]	; 38180 <Mat_VarReadDataLinear5+0x480>
   37f34:	add	r0, pc, r0
   37f38:	bl	161c <Mat_Critical@plt>
   37f3c:	ldr	r2, [sp, #128]	; 0x80
   37f40:	sub	r3, r9, #1
   37f44:	mla	r3, r2, r3, r7
   37f48:	ldr	r2, [sp, #20]
   37f4c:	add	r3, r3, #1
   37f50:	cmp	r3, r2
   37f54:	movhi	fp, #1
   37f58:	bhi	38030 <Mat_VarReadDataLinear5+0x330>
   37f5c:	ldr	r2, [r4, #16]
   37f60:	ldr	sl, [r4, #48]	; 0x30
   37f64:	cmp	sl, #0
   37f68:	bne	3804c <Mat_VarReadDataLinear5+0x34c>
   37f6c:	ldr	r3, [r4, #8]
   37f70:	ldr	r1, [r4, #20]
   37f74:	str	r7, [sp]
   37f78:	cmp	r1, #0
   37f7c:	ldr	r1, [sp, #128]	; 0x80
   37f80:	stmib	sp, {r1, r9}
   37f84:	moveq	r1, r8
   37f88:	beq	38028 <Mat_VarReadDataLinear5+0x328>
   37f8c:	mov	r0, r5
   37f90:	ldr	r1, [r8]
   37f94:	bl	19160 <ReadDataSlab1>
   37f98:	ldr	r3, [r4, #52]	; 0x34
   37f9c:	mov	r2, sl
   37fa0:	ldr	r0, [r5]
   37fa4:	ldr	r1, [r3]
   37fa8:	add	r1, r6, r1
   37fac:	add	r6, sp, #24
   37fb0:	bl	1694 <fseek@plt>
   37fb4:	mov	r2, #2
   37fb8:	mov	r1, #4
   37fbc:	ldr	r3, [r5]
   37fc0:	mov	r0, r6
   37fc4:	bl	1520 <fread@plt>
   37fc8:	ldr	r3, [r5, #20]
   37fcc:	cmp	r3, #0
   37fd0:	beq	37fe4 <Mat_VarReadDataLinear5+0x2e4>
   37fd4:	mov	r0, r6
   37fd8:	bl	189c <Mat_int32Swap>
   37fdc:	add	r0, sp, #28
   37fe0:	bl	189c <Mat_int32Swap>
   37fe4:	ldr	r3, [sp, #24]
   37fe8:	uxtb	r2, r3
   37fec:	lsr	r3, r3, #16
   37ff0:	lsl	r3, r3, #16
   37ff4:	str	r2, [r4, #8]
   37ff8:	cmp	r3, #0
   37ffc:	beq	38010 <Mat_VarReadDataLinear5+0x310>
   38000:	mov	r2, #1
   38004:	mvn	r1, #3
   38008:	ldr	r0, [r5]
   3800c:	bl	1694 <fseek@plt>
   38010:	ldr	r3, [sp, #128]	; 0x80
   38014:	str	r7, [sp]
   38018:	stmib	sp, {r3, r9}
   3801c:	ldr	r1, [r8, #4]
   38020:	ldr	r3, [r4, #8]
   38024:	ldr	r2, [r4, #16]
   38028:	mov	r0, r5
   3802c:	bl	19160 <ReadDataSlab1>
   38030:	ldr	r0, [r4, #16]
   38034:	bl	3a83c <ClassType2DataType>
   38038:	str	r0, [r4, #8]
   3803c:	ldr	r0, [r4, #16]
   38040:	bl	167c <Mat_SizeOfClass@plt>
   38044:	str	r0, [r4, #12]
   38048:	b	37e30 <Mat_VarReadDataLinear5+0x130>
   3804c:	cmp	sl, #1
   38050:	bne	38030 <Mat_VarReadDataLinear5+0x330>
   38054:	ldr	r3, [r4, #8]
   38058:	add	sl, sp, #32
   3805c:	ldr	r1, [r4, #20]
   38060:	stm	sp, {r3, r7}
   38064:	mov	r3, r2
   38068:	str	r9, [sp, #12]
   3806c:	cmp	r1, #0
   38070:	ldr	r1, [sp, #128]	; 0x80
   38074:	moveq	r2, r8
   38078:	str	r1, [sp, #8]
   3807c:	beq	38164 <Mat_VarReadDataLinear5+0x464>
   38080:	mov	r1, sl
   38084:	mov	r0, r5
   38088:	ldr	r2, [r8]
   3808c:	bl	1a2b4 <ReadCompressedDataSlab1>
   38090:	ldr	r3, [r4, #52]	; 0x34
   38094:	mov	r2, #0
   38098:	ldr	r0, [r5]
   3809c:	ldr	r1, [r3]
   380a0:	bl	1694 <fseek@plt>
   380a4:	mov	r0, sl
   380a8:	bl	15b0 <inflateEnd@plt>
   380ac:	ldr	r3, [r4, #52]	; 0x34
   380b0:	mov	r0, sl
   380b4:	ldr	r1, [r3, #12]
   380b8:	bl	15bc <inflateCopy@plt>
   380bc:	subs	fp, r0, #0
   380c0:	beq	380d8 <Mat_VarReadDataLinear5+0x3d8>
   380c4:	bl	14f0 <zError@plt>
   380c8:	mov	r1, r0
   380cc:	ldr	r0, [pc, #176]	; 38184 <Mat_VarReadDataLinear5+0x484>
   380d0:	add	r0, pc, r0
   380d4:	bl	161c <Mat_Critical@plt>
   380d8:	mov	r2, r6
   380dc:	mov	r1, sl
   380e0:	mov	r0, r5
   380e4:	add	r6, sp, #24
   380e8:	bl	1e78 <InflateSkip>
   380ec:	mov	r3, #0
   380f0:	mov	r2, r6
   380f4:	mov	r1, sl
   380f8:	mov	r0, r5
   380fc:	str	r3, [sp, #36]	; 0x24
   38100:	bl	2c70 <InflateDataType>
   38104:	ldr	r3, [r5, #20]
   38108:	cmp	r3, #0
   3810c:	beq	38118 <Mat_VarReadDataLinear5+0x418>
   38110:	mov	r0, r6
   38114:	bl	189c <Mat_int32Swap>
   38118:	ldr	r3, [sp, #24]
   3811c:	uxtb	r2, r3
   38120:	lsr	r3, r3, #16
   38124:	lsl	r3, r3, #16
   38128:	str	r2, [r4, #8]
   3812c:	cmp	r3, #0
   38130:	bne	38144 <Mat_VarReadDataLinear5+0x444>
   38134:	mov	r2, #4
   38138:	mov	r1, sl
   3813c:	mov	r0, r5
   38140:	bl	1e78 <InflateSkip>
   38144:	ldr	r3, [sp, #128]	; 0x80
   38148:	str	r7, [sp, #4]
   3814c:	str	r3, [sp, #8]
   38150:	str	r9, [sp, #12]
   38154:	ldr	r3, [r4, #8]
   38158:	str	r3, [sp]
   3815c:	ldr	r2, [r8, #4]
   38160:	ldr	r3, [r4, #16]
   38164:	mov	r1, sl
   38168:	mov	r0, r5
   3816c:	bl	1a2b4 <ReadCompressedDataSlab1>
   38170:	mov	r0, sl
   38174:	bl	15b0 <inflateEnd@plt>
   38178:	b	38030 <Mat_VarReadDataLinear5+0x330>
   3817c:	.word	0x0000707e
   38180:	.word	0x00006d67
   38184:	.word	0x00006e1e

00038188 <Mat_VarWrite5>:
   38188:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3818c:	sub	sp, sp, #4096	; 0x1000
   38190:	mov	r3, #6
   38194:	sub	sp, sp, #44	; 0x2c
   38198:	mov	r8, #0
   3819c:	add	r4, sp, #40	; 0x28
   381a0:	mov	sl, #5
   381a4:	mov	fp, #8
   381a8:	str	r3, [r4, #-28]	; 0xffffffe4
   381ac:	mov	r3, #14
   381b0:	subs	r6, r0, #0
   381b4:	strd	sl, [r4, #-24]	; 0xffffffe8
   381b8:	str	r8, [r4, #-16]
   381bc:	str	r3, [r4, #-12]
   381c0:	str	r8, [r4, #-4]
   381c4:	bne	381d8 <Mat_VarWrite5+0x50>
   381c8:	mvn	r0, #0
   381cc:	add	sp, sp, #4096	; 0x1000
   381d0:	add	sp, sp, #44	; 0x2c
   381d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   381d8:	mov	r7, r1
   381dc:	mov	fp, r2
   381e0:	ldr	r0, [r6]
   381e4:	mov	r2, #2
   381e8:	mov	r1, r8
   381ec:	bl	1694 <fseek@plt>
   381f0:	cmp	r7, #0
   381f4:	beq	381c8 <Mat_VarWrite5+0x40>
   381f8:	ldr	r3, [r7, #36]	; 0x24
   381fc:	cmp	r3, #0
   38200:	beq	381c8 <Mat_VarWrite5+0x40>
   38204:	cmp	fp, #0
   38208:	bne	38544 <Mat_VarWrite5+0x3bc>
   3820c:	mov	r2, #1
   38210:	mov	r1, #4
   38214:	ldr	r3, [r6]
   38218:	sub	r0, r4, #12
   3821c:	sub	r5, r4, #16
   38220:	bl	1514 <fwrite@plt>
   38224:	mov	r2, #1
   38228:	mov	r1, #4
   3822c:	ldr	r3, [r6]
   38230:	mov	r0, r5
   38234:	add	sl, sp, #2080	; 0x820
   38238:	bl	1514 <fwrite@plt>
   3823c:	ldr	r0, [r6]
   38240:	add	sl, sl, #8
   38244:	bl	14b4 <ftell@plt>
   38248:	ldr	r2, [r7, #16]
   3824c:	mov	r8, r0
   38250:	sub	r0, r4, #28
   38254:	ldr	r1, [r7, #20]
   38258:	uxtb	r3, r2
   3825c:	cmp	r1, #0
   38260:	str	r3, [r4, #-32]	; 0xffffffe0
   38264:	mov	r1, #4
   38268:	orrne	r3, r3, #2048	; 0x800
   3826c:	strne	r3, [r4, #-32]	; 0xffffffe0
   38270:	ldr	r3, [r7, #24]
   38274:	cmp	r3, #0
   38278:	ldrne	r3, [r4, #-32]	; 0xffffffe0
   3827c:	orrne	r3, r3, #1024	; 0x400
   38280:	strne	r3, [r4, #-32]	; 0xffffffe0
   38284:	ldr	r3, [r7, #28]
   38288:	cmp	r3, #0
   3828c:	ldrne	r3, [r4, #-32]	; 0xffffffe0
   38290:	orrne	r3, r3, #512	; 0x200
   38294:	strne	r3, [r4, #-32]	; 0xffffffe0
   38298:	cmp	r2, #5
   3829c:	mov	r2, #1
   382a0:	ldreq	r3, [r7, #40]	; 0x28
   382a4:	ldreq	r3, [r3]
   382a8:	streq	r3, [r4, #-4]
   382ac:	ldr	r3, [r6]
   382b0:	bl	1514 <fwrite@plt>
   382b4:	mov	r2, #1
   382b8:	mov	r1, #4
   382bc:	ldr	r3, [r6]
   382c0:	sub	r0, r4, #20
   382c4:	bl	1514 <fwrite@plt>
   382c8:	mov	r2, #1
   382cc:	mov	r1, #4
   382d0:	ldr	r3, [r6]
   382d4:	sub	r0, r4, #32
   382d8:	bl	1514 <fwrite@plt>
   382dc:	mov	r2, #1
   382e0:	mov	r1, #4
   382e4:	ldr	r3, [r6]
   382e8:	sub	r0, r4, #4
   382ec:	bl	1514 <fwrite@plt>
   382f0:	ldr	r3, [r7, #4]
   382f4:	mov	r2, #1
   382f8:	mov	r1, #4
   382fc:	sub	r0, r4, #24
   38300:	lsl	r3, r3, #2
   38304:	str	r3, [r4, #-8]
   38308:	ldr	r3, [r6]
   3830c:	bl	1514 <fwrite@plt>
   38310:	mov	r2, #1
   38314:	mov	r1, #4
   38318:	ldr	r3, [r6]
   3831c:	sub	r0, r4, #8
   38320:	bl	1514 <fwrite@plt>
   38324:	ldr	r2, [r7, #4]
   38328:	ldr	r3, [r6]
   3832c:	cmp	r2, fp
   38330:	bgt	38470 <Mat_VarWrite5+0x2e8>
   38334:	tst	r2, #1
   38338:	beq	3834c <Mat_VarWrite5+0x1c4>
   3833c:	mov	r2, #1
   38340:	mov	r1, #4
   38344:	mov	r0, r5
   38348:	bl	1514 <fwrite@plt>
   3834c:	ldr	r9, [r7, #36]	; 0x24
   38350:	mov	r5, #1
   38354:	mov	r0, r9
   38358:	bl	15c8 <strlen@plt>
   3835c:	cmp	r0, #4
   38360:	ldr	fp, [r6]
   38364:	bhi	384b0 <Mat_VarWrite5+0x328>
   38368:	mov	r0, r9
   3836c:	str	r5, [sp, #2088]	; 0x828
   38370:	bl	15c8 <strlen@plt>
   38374:	mov	r3, #0
   38378:	mov	r9, r0
   3837c:	mov	r2, r5
   38380:	mov	r1, #4
   38384:	strb	r3, [r4]
   38388:	lsl	r3, r9, #16
   3838c:	mov	r0, sl
   38390:	orr	r3, r3, r5
   38394:	str	r3, [sp, #2088]	; 0x828
   38398:	mov	r3, fp
   3839c:	bl	1514 <fwrite@plt>
   383a0:	mov	r2, r9
   383a4:	mov	r1, r5
   383a8:	ldr	r3, [r6]
   383ac:	ldr	r0, [r7, #36]	; 0x24
   383b0:	bl	1514 <fwrite@plt>
   383b4:	cmp	r9, #3
   383b8:	ble	38494 <Mat_VarWrite5+0x30c>
   383bc:	ldr	r5, [r7, #52]	; 0x34
   383c0:	cmp	r5, #0
   383c4:	streq	r5, [r7, #16]
   383c8:	beq	383f4 <Mat_VarWrite5+0x26c>
   383cc:	ldr	r0, [r6]
   383d0:	bl	14b4 <ftell@plt>
   383d4:	ldr	r3, [r7, #52]	; 0x34
   383d8:	str	r0, [r5]
   383dc:	ldr	r3, [r3]
   383e0:	cmn	r3, #1
   383e4:	bne	383f4 <Mat_VarWrite5+0x26c>
   383e8:	ldr	r0, [pc, #1408]	; 38970 <Mat_VarWrite5+0x7e8>
   383ec:	add	r0, pc, r0
   383f0:	bl	161c <Mat_Critical@plt>
   383f4:	mov	r1, r7
   383f8:	mov	r0, r6
   383fc:	bl	32b78 <WriteType>
   38400:	ldr	r0, [r6]
   38404:	bl	14b4 <ftell@plt>
   38408:	cmn	r0, #1
   3840c:	cmnne	r8, #1
   38410:	mov	r7, r0
   38414:	movne	r5, #1
   38418:	moveq	r5, #0
   3841c:	beq	3895c <Mat_VarWrite5+0x7d4>
   38420:	sub	r1, r0, r8
   38424:	mov	r2, #1
   38428:	ldr	r0, [r6]
   3842c:	str	r1, [r4, #-8]!
   38430:	rsb	r1, r1, #-16777216	; 0xff000000
   38434:	add	r1, r1, #16711680	; 0xff0000
   38438:	add	r1, r1, #65280	; 0xff00
   3843c:	add	r1, r1, #252	; 0xfc
   38440:	bl	1694 <fseek@plt>
   38444:	mov	r2, #1
   38448:	mov	r1, #4
   3844c:	ldr	r3, [r6]
   38450:	mov	r0, r4
   38454:	bl	1514 <fwrite@plt>
   38458:	mov	r2, #0
   3845c:	mov	r1, r7
   38460:	ldr	r0, [r6]
   38464:	bl	1694 <fseek@plt>
   38468:	mov	r0, #0
   3846c:	b	381cc <Mat_VarWrite5+0x44>
   38470:	ldr	r2, [r7, #32]
   38474:	mov	r1, #4
   38478:	mov	r0, sl
   3847c:	ldr	r2, [r2, fp, lsl #2]
   38480:	add	fp, fp, #1
   38484:	str	r2, [sp, #2088]	; 0x828
   38488:	mov	r2, #1
   3848c:	bl	1514 <fwrite@plt>
   38490:	b	38324 <Mat_VarWrite5+0x19c>
   38494:	mov	r2, #1
   38498:	mov	r0, r4
   3849c:	ldr	r3, [r6]
   384a0:	mov	r1, r2
   384a4:	add	r9, r9, #1
   384a8:	bl	1514 <fwrite@plt>
   384ac:	b	383b4 <Mat_VarWrite5+0x22c>
   384b0:	mov	r0, r9
   384b4:	str	r5, [r4]
   384b8:	bl	15c8 <strlen@plt>
   384bc:	mov	r3, #0
   384c0:	mov	r2, r5
   384c4:	str	r0, [sp, #2088]	; 0x828
   384c8:	mov	r1, #4
   384cc:	mov	r0, r4
   384d0:	strb	r3, [r4, #-33]	; 0xffffffdf
   384d4:	mov	r3, fp
   384d8:	bl	1514 <fwrite@plt>
   384dc:	mov	r2, r5
   384e0:	mov	r1, #4
   384e4:	ldr	r3, [r6]
   384e8:	mov	r0, sl
   384ec:	bl	1514 <fwrite@plt>
   384f0:	mov	r1, r5
   384f4:	ldr	r3, [r6]
   384f8:	ldr	r0, [r7, #36]	; 0x24
   384fc:	ldr	r2, [sp, #2088]	; 0x828
   38500:	bl	1514 <fwrite@plt>
   38504:	ldr	r3, [sp, #2088]	; 0x828
   38508:	ands	r5, r3, #7
   3850c:	beq	383bc <Mat_VarWrite5+0x234>
   38510:	rsbs	r3, r3, #0
   38514:	sub	r9, r4, #33	; 0x21
   38518:	and	r3, r3, #7
   3851c:	rsbpl	r5, r3, #0
   38520:	mov	r2, #1
   38524:	mov	r0, r9
   38528:	ldr	r3, [r6]
   3852c:	mov	r1, r2
   38530:	add	r5, r5, #1
   38534:	bl	1514 <fwrite@plt>
   38538:	cmp	r5, #8
   3853c:	bne	38520 <Mat_VarWrite5+0x398>
   38540:	b	383bc <Mat_VarWrite5+0x234>
   38544:	cmp	fp, #1
   38548:	bne	38400 <Mat_VarWrite5+0x278>
   3854c:	add	r9, sp, #2080	; 0x820
   38550:	mov	r2, #2048	; 0x800
   38554:	add	r9, r9, #8
   38558:	mov	r1, r8
   3855c:	mov	r0, r9
   38560:	bl	15f8 <memset@plt>
   38564:	mov	r1, #56	; 0x38
   38568:	mov	r0, fp
   3856c:	bl	140c <calloc@plt>
   38570:	subs	r5, r0, #0
   38574:	beq	381c8 <Mat_VarWrite5+0x40>
   38578:	ldr	r2, [pc, #1012]	; 38974 <Mat_VarWrite5+0x7ec>
   3857c:	mov	r3, #56	; 0x38
   38580:	mvn	r1, #0
   38584:	add	r2, pc, r2
   38588:	bl	1550 <deflateInit_@plt>
   3858c:	subs	sl, r0, #0
   38590:	beq	385b8 <Mat_VarWrite5+0x430>
   38594:	mov	r0, r5
   38598:	bl	1478 <free@plt>
   3859c:	mov	r0, sl
   385a0:	bl	14f0 <zError@plt>
   385a4:	mov	r1, r0
   385a8:	ldr	r0, [pc, #968]	; 38978 <Mat_VarWrite5+0x7f0>
   385ac:	add	r0, pc, r0
   385b0:	bl	161c <Mat_Critical@plt>
   385b4:	b	381c8 <Mat_VarWrite5+0x40>
   385b8:	mov	r0, r4
   385bc:	mov	r3, #15
   385c0:	mov	r2, fp
   385c4:	mov	r1, #4
   385c8:	str	r3, [r0, #-12]!
   385cc:	ldr	r3, [r6]
   385d0:	bl	1514 <fwrite@plt>
   385d4:	mov	r2, fp
   385d8:	mov	r1, #4
   385dc:	ldr	r3, [r6]
   385e0:	sub	r0, r4, #16
   385e4:	bl	1514 <fwrite@plt>
   385e8:	ldr	r0, [r6]
   385ec:	bl	14b4 <ftell@plt>
   385f0:	ldr	r2, [r7, #16]
   385f4:	mov	r8, r0
   385f8:	ldr	r1, [r7, #20]
   385fc:	ldr	r0, [r7, #36]	; 0x24
   38600:	uxtb	r3, r2
   38604:	cmp	r1, #0
   38608:	str	r3, [r4, #-32]	; 0xffffffe0
   3860c:	orrne	r3, r3, #2048	; 0x800
   38610:	strne	r3, [r4, #-32]	; 0xffffffe0
   38614:	ldr	r3, [r7, #24]
   38618:	cmp	r3, #0
   3861c:	ldrne	r3, [r4, #-32]	; 0xffffffe0
   38620:	orrne	r3, r3, #1024	; 0x400
   38624:	strne	r3, [r4, #-32]	; 0xffffffe0
   38628:	ldr	r3, [r7, #28]
   3862c:	cmp	r3, #0
   38630:	ldrne	r3, [r4, #-32]	; 0xffffffe0
   38634:	orrne	r3, r3, #512	; 0x200
   38638:	strne	r3, [r4, #-32]	; 0xffffffe0
   3863c:	cmp	r2, #5
   38640:	ldreq	r3, [r7, #40]	; 0x28
   38644:	ldreq	r3, [r3]
   38648:	streq	r3, [r4, #-4]
   3864c:	mov	r3, #14
   38650:	cmp	r0, #0
   38654:	str	r3, [sp, #2088]	; 0x828
   38658:	beq	38820 <Mat_VarWrite5+0x698>
   3865c:	bl	15c8 <strlen@plt>
   38660:	cmp	r0, #4
   38664:	bls	38820 <Mat_VarWrite5+0x698>
   38668:	tst	r0, #7
   3866c:	bicne	r0, r0, #7
   38670:	addne	r0, r0, #8
   38674:	add	fp, r0, #24
   38678:	mov	r0, r7
   3867c:	bl	327b8 <GetTypeBufSize>
   38680:	add	r0, r0, fp
   38684:	mov	r3, #8
   38688:	str	r9, [r5]
   3868c:	mov	fp, #2048	; 0x800
   38690:	str	r3, [r5, #4]
   38694:	str	r0, [sp, #2092]	; 0x82c
   38698:	mov	r1, #0
   3869c:	mov	r0, r5
   386a0:	str	r4, [r5, #12]
   386a4:	str	fp, [r5, #16]
   386a8:	bl	14fc <deflate@plt>
   386ac:	ldr	r2, [r5, #16]
   386b0:	mov	r1, #1
   386b4:	mov	r0, r4
   386b8:	ldr	r3, [r6]
   386bc:	rsb	r2, r2, #2048	; 0x800
   386c0:	bl	1514 <fwrite@plt>
   386c4:	ldr	r3, [r5, #16]
   386c8:	cmp	r3, #0
   386cc:	beq	38698 <Mat_VarWrite5+0x510>
   386d0:	ldr	r3, [r4, #-28]	; 0xffffffe4
   386d4:	ldr	r2, [r7, #4]
   386d8:	ldr	r1, [r4, #-24]	; 0xffffffe8
   386dc:	str	r3, [sp, #2088]	; 0x828
   386e0:	ldr	r3, [r4, #-20]	; 0xffffffec
   386e4:	str	r3, [sp, #2092]	; 0x82c
   386e8:	ldr	r3, [r4, #-32]	; 0xffffffe0
   386ec:	str	r1, [sp, #2104]	; 0x838
   386f0:	str	r3, [sp, #2096]	; 0x830
   386f4:	ldr	r3, [r4, #-4]
   386f8:	str	r3, [sp, #2100]	; 0x834
   386fc:	lsl	r3, r2, #2
   38700:	str	r3, [r4, #-8]
   38704:	str	r3, [sp, #2108]	; 0x83c
   38708:	add	r3, r9, #24
   3870c:	cmp	r2, sl
   38710:	bgt	38828 <Mat_VarWrite5+0x6a0>
   38714:	bic	r3, r2, r2, asr #31
   38718:	tst	r2, #1
   3871c:	add	r1, r3, #6
   38720:	beq	3873c <Mat_VarWrite5+0x5b4>
   38724:	add	r2, sp, #4096	; 0x1000
   38728:	add	r3, r3, #1
   3872c:	add	r2, r2, #40	; 0x28
   38730:	add	r2, r2, r1, lsl #2
   38734:	ldr	r1, [r4, #-16]
   38738:	str	r1, [r2, #-2048]	; 0xfffff800
   3873c:	add	r3, r3, #6
   38740:	mov	sl, #2048	; 0x800
   38744:	str	r9, [r5]
   38748:	lsl	r3, r3, #2
   3874c:	str	r3, [r5, #4]
   38750:	mov	r1, #0
   38754:	mov	r0, r5
   38758:	str	r4, [r5, #12]
   3875c:	str	sl, [r5, #16]
   38760:	bl	14fc <deflate@plt>
   38764:	ldr	r2, [r5, #16]
   38768:	mov	r1, #1
   3876c:	mov	r0, r4
   38770:	ldr	r3, [r6]
   38774:	rsb	r2, r2, #2048	; 0x800
   38778:	bl	1514 <fwrite@plt>
   3877c:	ldr	r3, [r5, #16]
   38780:	cmp	r3, #0
   38784:	beq	38750 <Mat_VarWrite5+0x5c8>
   38788:	ldr	fp, [r7, #36]	; 0x24
   3878c:	mov	r0, fp
   38790:	bl	15c8 <strlen@plt>
   38794:	cmp	r0, #4
   38798:	mov	sl, r0
   3879c:	bhi	3883c <Mat_VarWrite5+0x6b4>
   387a0:	mov	r3, #0
   387a4:	mov	r2, r0
   387a8:	mov	r1, fp
   387ac:	add	r0, r9, #4
   387b0:	str	r3, [sp, #2092]	; 0x82c
   387b4:	lsl	r3, sl, #16
   387b8:	orr	r3, r3, #1
   387bc:	str	r3, [sp, #2088]	; 0x828
   387c0:	bl	1490 <memcpy@plt>
   387c4:	mov	r3, #8
   387c8:	str	r9, [r5]
   387cc:	mov	r9, #2048	; 0x800
   387d0:	str	r3, [r5, #4]
   387d4:	mov	r1, #0
   387d8:	mov	r0, r5
   387dc:	str	r4, [r5, #12]
   387e0:	str	r9, [r5, #16]
   387e4:	bl	14fc <deflate@plt>
   387e8:	ldr	r2, [r5, #16]
   387ec:	mov	r1, #1
   387f0:	mov	r0, r4
   387f4:	ldr	r3, [r6]
   387f8:	rsb	r2, r2, #2048	; 0x800
   387fc:	bl	1514 <fwrite@plt>
   38800:	ldr	r3, [r5, #16]
   38804:	cmp	r3, #0
   38808:	beq	387d4 <Mat_VarWrite5+0x64c>
   3880c:	ldr	r9, [r7, #52]	; 0x34
   38810:	cmp	r9, #0
   38814:	bne	388bc <Mat_VarWrite5+0x734>
   38818:	str	r9, [r7, #16]
   3881c:	b	388e4 <Mat_VarWrite5+0x75c>
   38820:	mov	fp, #24
   38824:	b	38678 <Mat_VarWrite5+0x4f0>
   38828:	ldr	r1, [r7, #32]
   3882c:	ldr	r1, [r1, sl, lsl #2]
   38830:	add	sl, sl, #1
   38834:	str	r1, [r3], #4
   38838:	b	3870c <Mat_VarWrite5+0x584>
   3883c:	mov	r2, #2048	; 0x800
   38840:	mov	r1, #0
   38844:	mov	r0, r9
   38848:	bl	15f8 <memset@plt>
   3884c:	mov	r3, #1
   38850:	mov	r2, sl
   38854:	add	r0, r9, #8
   38858:	mov	r1, fp
   3885c:	str	r3, [sp, #2088]	; 0x828
   38860:	str	sl, [sp, #2092]	; 0x82c
   38864:	bl	1490 <memcpy@plt>
   38868:	ands	r3, sl, #7
   3886c:	rsbne	r3, r3, #8
   38870:	addne	sl, sl, r3
   38874:	add	sl, sl, #8
   38878:	stm	r5, {r9, sl}
   3887c:	mov	r9, #2048	; 0x800
   38880:	mov	r1, #0
   38884:	mov	r0, r5
   38888:	str	r4, [r5, #12]
   3888c:	str	r9, [r5, #16]
   38890:	bl	14fc <deflate@plt>
   38894:	ldr	r2, [r5, #16]
   38898:	mov	r1, #1
   3889c:	mov	r0, r4
   388a0:	ldr	r3, [r6]
   388a4:	rsb	r2, r2, #2048	; 0x800
   388a8:	bl	1514 <fwrite@plt>
   388ac:	ldr	r3, [r5, #16]
   388b0:	cmp	r3, #0
   388b4:	beq	38880 <Mat_VarWrite5+0x6f8>
   388b8:	b	3880c <Mat_VarWrite5+0x684>
   388bc:	ldr	r0, [r6]
   388c0:	bl	14b4 <ftell@plt>
   388c4:	ldr	r3, [r7, #52]	; 0x34
   388c8:	str	r0, [r9]
   388cc:	ldr	r3, [r3]
   388d0:	cmn	r3, #1
   388d4:	bne	388e4 <Mat_VarWrite5+0x75c>
   388d8:	ldr	r0, [pc, #156]	; 3897c <Mat_VarWrite5+0x7f4>
   388dc:	add	r0, pc, r0
   388e0:	bl	161c <Mat_Critical@plt>
   388e4:	mov	r1, r7
   388e8:	mov	r2, r5
   388ec:	mov	r0, r6
   388f0:	mov	r7, #2048	; 0x800
   388f4:	bl	33bfc <WriteCompressedType>
   388f8:	mov	r3, #0
   388fc:	str	r3, [r5]
   38900:	str	r3, [r5, #4]
   38904:	mov	r1, #4
   38908:	mov	r0, r5
   3890c:	str	r4, [r5, #12]
   38910:	str	r7, [r5, #16]
   38914:	bl	14fc <deflate@plt>
   38918:	ldr	r2, [r5, #16]
   3891c:	mov	r9, r0
   38920:	mov	r1, #1
   38924:	mov	r0, r4
   38928:	ldr	r3, [r6]
   3892c:	rsb	r2, r2, #2048	; 0x800
   38930:	bl	1514 <fwrite@plt>
   38934:	cmp	r9, #1
   38938:	beq	38948 <Mat_VarWrite5+0x7c0>
   3893c:	ldr	r3, [r5, #16]
   38940:	cmp	r3, #0
   38944:	beq	38904 <Mat_VarWrite5+0x77c>
   38948:	mov	r0, r5
   3894c:	bl	1628 <deflateEnd@plt>
   38950:	mov	r0, r5
   38954:	bl	1478 <free@plt>
   38958:	b	38400 <Mat_VarWrite5+0x278>
   3895c:	ldr	r0, [pc, #28]	; 38980 <Mat_VarWrite5+0x7f8>
   38960:	add	r0, pc, r0
   38964:	bl	161c <Mat_Critical@plt>
   38968:	mov	r0, r5
   3896c:	b	381cc <Mat_VarWrite5+0x44>
   38970:	.word	0x000067f9
   38974:	.word	0x00006a3f
   38978:	.word	0x00006a1e
   3897c:	.word	0x00006309
   38980:	.word	0x00006285

00038984 <Mat_VarReadNextInfo5>:
   38984:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   38988:	subs	r5, r0, #0
   3898c:	sub	sp, sp, #88	; 0x58
   38990:	bne	3899c <Mat_VarReadNextInfo5+0x18>
   38994:	mov	r4, #0
   38998:	b	38cfc <Mat_VarReadNextInfo5+0x378>
   3899c:	ldr	r0, [r5]
   389a0:	bl	14b4 <ftell@plt>
   389a4:	cmn	r0, #1
   389a8:	mov	r9, r0
   389ac:	bne	389c0 <Mat_VarReadNextInfo5+0x3c>
   389b0:	ldr	r0, [pc, #1720]	; 39070 <Mat_VarReadNextInfo5+0x6ec>
   389b4:	add	r0, pc, r0
   389b8:	bl	161c <Mat_Critical@plt>
   389bc:	b	38994 <Mat_VarReadNextInfo5+0x10>
   389c0:	add	r6, sp, #12
   389c4:	mov	r2, #1
   389c8:	ldr	r3, [r5]
   389cc:	mov	r1, #4
   389d0:	mov	r0, r6
   389d4:	bl	1520 <fread@plt>
   389d8:	cmp	r0, #0
   389dc:	beq	38994 <Mat_VarReadNextInfo5+0x10>
   389e0:	add	r4, sp, #16
   389e4:	mov	r2, #1
   389e8:	ldr	r3, [r5]
   389ec:	mov	r1, #4
   389f0:	mov	r0, r4
   389f4:	bl	1520 <fread@plt>
   389f8:	ldr	r3, [r5, #20]
   389fc:	cmp	r3, #0
   38a00:	beq	38a14 <Mat_VarReadNextInfo5+0x90>
   38a04:	mov	r0, r6
   38a08:	bl	189c <Mat_int32Swap>
   38a0c:	mov	r0, r4
   38a10:	bl	189c <Mat_int32Swap>
   38a14:	ldr	r1, [sp, #12]
   38a18:	cmp	r1, #14
   38a1c:	beq	38de4 <Mat_VarReadNextInfo5+0x460>
   38a20:	cmp	r1, #15
   38a24:	bne	39064 <Mat_VarReadNextInfo5+0x6e0>
   38a28:	add	r6, sp, #24
   38a2c:	mov	r2, #64	; 0x40
   38a30:	mov	r1, #0
   38a34:	mov	r0, r6
   38a38:	bl	15f8 <memset@plt>
   38a3c:	bl	1508 <Mat_VarCalloc@plt>
   38a40:	mov	r4, r0
   38a44:	mov	r0, #1
   38a48:	mov	r1, #56	; 0x38
   38a4c:	ldr	r7, [r4, #52]	; 0x34
   38a50:	str	r0, [r4, #48]	; 0x30
   38a54:	bl	140c <calloc@plt>
   38a58:	ldr	r1, [pc, #1556]	; 39074 <Mat_VarReadNextInfo5+0x6f0>
   38a5c:	mov	r2, #56	; 0x38
   38a60:	str	r0, [r7, #12]
   38a64:	add	r1, pc, r1
   38a68:	bl	1640 <inflateInit_@plt>
   38a6c:	subs	r7, r0, #0
   38a70:	beq	38a98 <Mat_VarReadNextInfo5+0x114>
   38a74:	mov	r0, r4
   38a78:	bl	158c <Mat_VarFree@plt>
   38a7c:	mov	r0, r7
   38a80:	bl	14f0 <zError@plt>
   38a84:	mov	r1, r0
   38a88:	ldr	r0, [pc, #1512]	; 39078 <Mat_VarReadNextInfo5+0x6f4>
   38a8c:	add	r0, pc, r0
   38a90:	bl	161c <Mat_Critical@plt>
   38a94:	b	38994 <Mat_VarReadNextInfo5+0x10>
   38a98:	mov	r2, r6
   38a9c:	mov	r1, r4
   38aa0:	mov	r0, r5
   38aa4:	bl	2260 <InflateVarTag>
   38aa8:	ldr	r3, [r5, #20]
   38aac:	mov	r8, r0
   38ab0:	cmp	r3, #0
   38ab4:	beq	38ac8 <Mat_VarReadNextInfo5+0x144>
   38ab8:	mov	r0, r6
   38abc:	bl	18cc <Mat_uint32Swap>
   38ac0:	add	r0, sp, #28
   38ac4:	bl	18cc <Mat_uint32Swap>
   38ac8:	ldr	r3, [sp, #24]
   38acc:	cmp	r3, #14
   38ad0:	beq	38afc <Mat_VarReadNextInfo5+0x178>
   38ad4:	ldr	r1, [sp, #16]
   38ad8:	mov	r2, #1
   38adc:	ldr	r0, [r5]
   38ae0:	sub	r1, r1, r8
   38ae4:	bl	1694 <fseek@plt>
   38ae8:	mov	r0, r4
   38aec:	bl	158c <Mat_VarFree@plt>
   38af0:	ldr	r0, [pc, #1412]	; 3907c <Mat_VarReadNextInfo5+0x6f8>
   38af4:	add	r0, pc, r0
   38af8:	b	389b8 <Mat_VarReadNextInfo5+0x34>
   38afc:	mov	r2, r6
   38b00:	mov	r1, r4
   38b04:	mov	r0, r5
   38b08:	bl	23bc <InflateArrayFlags>
   38b0c:	ldr	r3, [r5, #20]
   38b10:	cmp	r3, #0
   38b14:	beq	38b30 <Mat_VarReadNextInfo5+0x1ac>
   38b18:	mov	r0, r6
   38b1c:	bl	18cc <Mat_uint32Swap>
   38b20:	add	r0, sp, #32
   38b24:	bl	18cc <Mat_uint32Swap>
   38b28:	add	r0, sp, #36	; 0x24
   38b2c:	bl	18cc <Mat_uint32Swap>
   38b30:	ldr	r3, [sp, #24]
   38b34:	cmp	r3, #6
   38b38:	bne	38b78 <Mat_VarReadNextInfo5+0x1f4>
   38b3c:	ldr	r3, [sp, #32]
   38b40:	uxtb	r2, r3
   38b44:	and	r1, r3, #2048	; 0x800
   38b48:	cmp	r2, #18
   38b4c:	movcs	r2, #0
   38b50:	cmp	r2, #5
   38b54:	str	r1, [r4, #20]
   38b58:	and	r1, r3, #1024	; 0x400
   38b5c:	and	r3, r3, #512	; 0x200
   38b60:	str	r2, [r4, #16]
   38b64:	str	r1, [r4, #24]
   38b68:	str	r3, [r4, #28]
   38b6c:	ldreq	r3, [sp, #36]	; 0x24
   38b70:	streq	r3, [r4]
   38b74:	beq	38b84 <Mat_VarReadNextInfo5+0x200>
   38b78:	ldr	r3, [r4, #16]
   38b7c:	cmp	r3, #17
   38b80:	beq	38ce4 <Mat_VarReadNextInfo5+0x360>
   38b84:	mov	r3, #0
   38b88:	mov	r2, r6
   38b8c:	mov	r1, r4
   38b90:	mov	r0, r5
   38b94:	str	r3, [sp, #20]
   38b98:	add	r3, sp, #20
   38b9c:	str	r3, [sp]
   38ba0:	mov	r3, #64	; 0x40
   38ba4:	bl	2518 <InflateRankDims>
   38ba8:	ldr	r8, [sp, #20]
   38bac:	cmp	r8, #0
   38bb0:	addeq	r3, sp, #32
   38bb4:	movne	r8, #1
   38bb8:	streq	r3, [sp, #20]
   38bbc:	ldr	r3, [r5, #20]
   38bc0:	cmp	r3, #0
   38bc4:	beq	38bd8 <Mat_VarReadNextInfo5+0x254>
   38bc8:	mov	r0, r6
   38bcc:	bl	18cc <Mat_uint32Swap>
   38bd0:	add	r0, sp, #28
   38bd4:	bl	18cc <Mat_uint32Swap>
   38bd8:	ldr	r3, [sp, #24]
   38bdc:	cmp	r3, #5
   38be0:	beq	38d08 <Mat_VarReadNextInfo5+0x384>
   38be4:	cmp	r8, #0
   38be8:	beq	38bf4 <Mat_VarReadNextInfo5+0x270>
   38bec:	ldr	r0, [sp, #20]
   38bf0:	bl	1478 <free@plt>
   38bf4:	mov	r2, r6
   38bf8:	mov	r1, r4
   38bfc:	mov	r0, r5
   38c00:	bl	2830 <InflateVarNameTag>
   38c04:	ldr	r3, [r5, #20]
   38c08:	cmp	r3, #0
   38c0c:	beq	38c18 <Mat_VarReadNextInfo5+0x294>
   38c10:	mov	r0, r6
   38c14:	bl	18cc <Mat_uint32Swap>
   38c18:	ldr	r6, [sp, #24]
   38c1c:	cmp	r6, #1
   38c20:	bne	38d80 <Mat_VarReadNextInfo5+0x3fc>
   38c24:	ldr	r3, [r5, #20]
   38c28:	cmp	r3, #0
   38c2c:	ldreq	r6, [sp, #28]
   38c30:	beq	38c40 <Mat_VarReadNextInfo5+0x2bc>
   38c34:	add	r0, sp, #28
   38c38:	bl	18cc <Mat_uint32Swap>
   38c3c:	mov	r6, r0
   38c40:	tst	r6, #7
   38c44:	bicne	r7, r6, #7
   38c48:	moveq	r7, r6
   38c4c:	addne	r7, r7, #8
   38c50:	add	r0, r7, #1
   38c54:	bl	1544 <malloc@plt>
   38c58:	cmp	r0, #0
   38c5c:	mov	r2, r0
   38c60:	str	r0, [r4, #36]	; 0x24
   38c64:	beq	38c84 <Mat_VarReadNextInfo5+0x300>
   38c68:	mov	r3, r7
   38c6c:	mov	r1, r4
   38c70:	mov	r0, r5
   38c74:	bl	298c <InflateVarName>
   38c78:	ldr	r3, [r4, #36]	; 0x24
   38c7c:	mov	r2, #0
   38c80:	strb	r2, [r3, r6]
   38c84:	ldr	r3, [r4, #16]
   38c88:	cmp	r3, #2
   38c8c:	bne	38dcc <Mat_VarReadNextInfo5+0x448>
   38c90:	mov	r1, r4
   38c94:	mov	r0, r5
   38c98:	bl	36980 <ReadNextStructField>
   38c9c:	ldr	r3, [r4, #52]	; 0x34
   38ca0:	mov	r2, #1
   38ca4:	ldr	r0, [r5]
   38ca8:	ldr	r3, [r3, #12]
   38cac:	ldr	r1, [r3, #4]
   38cb0:	rsb	r1, r1, #0
   38cb4:	bl	1694 <fseek@plt>
   38cb8:	ldr	r0, [r5]
   38cbc:	ldr	r6, [r4, #52]	; 0x34
   38cc0:	bl	14b4 <ftell@plt>
   38cc4:	ldr	r3, [r4, #52]	; 0x34
   38cc8:	str	r0, [r6]
   38ccc:	ldr	r3, [r3]
   38cd0:	cmn	r3, #1
   38cd4:	bne	38ce4 <Mat_VarReadNextInfo5+0x360>
   38cd8:	ldr	r0, [pc, #928]	; 39080 <Mat_VarReadNextInfo5+0x6fc>
   38cdc:	add	r0, pc, r0
   38ce0:	bl	161c <Mat_Critical@plt>
   38ce4:	ldr	r1, [sp, #16]
   38ce8:	mov	r2, #0
   38cec:	ldr	r0, [r5]
   38cf0:	add	r1, r1, #8
   38cf4:	add	r1, r1, r9
   38cf8:	bl	1694 <fseek@plt>
   38cfc:	mov	r0, r4
   38d00:	add	sp, sp, #88	; 0x58
   38d04:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   38d08:	ldr	r0, [sp, #28]
   38d0c:	add	r3, r0, #3
   38d10:	cmp	r0, #0
   38d14:	movlt	r0, r3
   38d18:	asr	r0, r0, #2
   38d1c:	str	r0, [r4, #4]
   38d20:	lsl	r0, r0, #2
   38d24:	bl	1544 <malloc@plt>
   38d28:	ldr	r3, [r5, #20]
   38d2c:	str	r0, [r4, #32]
   38d30:	cmp	r3, #0
   38d34:	ldreq	r1, [sp, #20]
   38d38:	beq	38d70 <Mat_VarReadNextInfo5+0x3ec>
   38d3c:	ldr	r3, [r4, #4]
   38d40:	cmp	r3, r7
   38d44:	ble	38be4 <Mat_VarReadNextInfo5+0x260>
   38d48:	ldr	r0, [sp, #20]
   38d4c:	ldr	sl, [r4, #32]
   38d50:	add	r0, r0, r7, lsl #2
   38d54:	bl	18cc <Mat_uint32Swap>
   38d58:	str	r0, [sl, r7, lsl #2]
   38d5c:	add	r7, r7, #1
   38d60:	b	38d3c <Mat_VarReadNextInfo5+0x3b8>
   38d64:	ldr	r2, [r1, r3, lsl #2]
   38d68:	str	r2, [r0, r3, lsl #2]
   38d6c:	add	r3, r3, #1
   38d70:	ldr	r2, [r4, #4]
   38d74:	cmp	r2, r3
   38d78:	bgt	38d64 <Mat_VarReadNextInfo5+0x3e0>
   38d7c:	b	38be4 <Mat_VarReadNextInfo5+0x260>
   38d80:	uxth	r3, r6
   38d84:	cmp	r3, #1
   38d88:	bne	38c84 <Mat_VarReadNextInfo5+0x300>
   38d8c:	lsr	r7, r6, #16
   38d90:	sub	r3, r7, #1
   38d94:	cmp	r3, #3
   38d98:	bhi	38c84 <Mat_VarReadNextInfo5+0x300>
   38d9c:	add	r0, r7, #1
   38da0:	bl	1544 <malloc@plt>
   38da4:	cmp	r0, #0
   38da8:	str	r0, [r4, #36]	; 0x24
   38dac:	beq	38c84 <Mat_VarReadNextInfo5+0x300>
   38db0:	mov	r2, r7
   38db4:	add	r1, sp, #28
   38db8:	bl	1490 <memcpy@plt>
   38dbc:	ldr	r3, [r4, #36]	; 0x24
   38dc0:	mov	r2, #0
   38dc4:	strb	r2, [r3, r6, lsr #16]
   38dc8:	b	38c84 <Mat_VarReadNextInfo5+0x300>
   38dcc:	cmp	r3, #1
   38dd0:	bne	38c9c <Mat_VarReadNextInfo5+0x318>
   38dd4:	mov	r1, r4
   38dd8:	mov	r0, r5
   38ddc:	bl	360a4 <ReadNextCell>
   38de0:	b	38c9c <Mat_VarReadNextInfo5+0x318>
   38de4:	bl	1508 <Mat_VarCalloc@plt>
   38de8:	add	r6, sp, #24
   38dec:	mov	r4, r0
   38df0:	ldr	r3, [r5]
   38df4:	mov	r2, #6
   38df8:	mov	r1, #4
   38dfc:	mov	r0, r6
   38e00:	bl	1520 <fread@plt>
   38e04:	ldr	r3, [r5, #20]
   38e08:	cmp	r3, #0
   38e0c:	beq	38e40 <Mat_VarReadNextInfo5+0x4bc>
   38e10:	mov	r0, r6
   38e14:	bl	18cc <Mat_uint32Swap>
   38e18:	add	r0, sp, #28
   38e1c:	bl	18cc <Mat_uint32Swap>
   38e20:	add	r0, sp, #32
   38e24:	bl	18cc <Mat_uint32Swap>
   38e28:	add	r0, sp, #36	; 0x24
   38e2c:	bl	18cc <Mat_uint32Swap>
   38e30:	add	r0, sp, #40	; 0x28
   38e34:	bl	18cc <Mat_uint32Swap>
   38e38:	add	r0, sp, #44	; 0x2c
   38e3c:	bl	18cc <Mat_uint32Swap>
   38e40:	ldr	r3, [sp, #24]
   38e44:	cmp	r3, #6
   38e48:	bne	38e84 <Mat_VarReadNextInfo5+0x500>
   38e4c:	ldr	r3, [sp, #32]
   38e50:	uxtb	r2, r3
   38e54:	and	r1, r3, #2048	; 0x800
   38e58:	cmp	r2, #18
   38e5c:	movcs	r2, #0
   38e60:	cmp	r2, #5
   38e64:	str	r1, [r4, #20]
   38e68:	and	r1, r3, #1024	; 0x400
   38e6c:	and	r3, r3, #512	; 0x200
   38e70:	str	r2, [r4, #16]
   38e74:	str	r1, [r4, #24]
   38e78:	str	r3, [r4, #28]
   38e7c:	ldreq	r3, [sp, #36]	; 0x24
   38e80:	streq	r3, [r4]
   38e84:	mov	r1, r4
   38e88:	mov	r0, r5
   38e8c:	ldrd	r2, [sp, #40]	; 0x28
   38e90:	bl	32a64 <ReadRankDims>
   38e94:	mov	r2, #2
   38e98:	mov	r1, #4
   38e9c:	ldr	r3, [r5]
   38ea0:	mov	r0, r6
   38ea4:	bl	1520 <fread@plt>
   38ea8:	ldr	r3, [r5, #20]
   38eac:	cmp	r3, #0
   38eb0:	beq	38ebc <Mat_VarReadNextInfo5+0x538>
   38eb4:	mov	r0, r6
   38eb8:	bl	18cc <Mat_uint32Swap>
   38ebc:	ldr	r6, [sp, #24]
   38ec0:	cmp	r6, #1
   38ec4:	bne	38f88 <Mat_VarReadNextInfo5+0x604>
   38ec8:	ldr	r3, [r5, #20]
   38ecc:	cmp	r3, #0
   38ed0:	ldreq	r7, [sp, #28]
   38ed4:	beq	38ee4 <Mat_VarReadNextInfo5+0x560>
   38ed8:	add	r0, sp, #28
   38edc:	bl	18cc <Mat_uint32Swap>
   38ee0:	mov	r7, r0
   38ee4:	tst	r7, #7
   38ee8:	bicne	r6, r7, #7
   38eec:	moveq	r6, r7
   38ef0:	addne	r6, r6, #8
   38ef4:	add	r0, r6, #1
   38ef8:	bl	1544 <malloc@plt>
   38efc:	cmp	r0, #0
   38f00:	str	r0, [r4, #36]	; 0x24
   38f04:	beq	38f44 <Mat_VarReadNextInfo5+0x5c0>
   38f08:	mov	r2, r6
   38f0c:	mov	r1, #1
   38f10:	ldr	r3, [r5]
   38f14:	bl	1520 <fread@plt>
   38f18:	cmp	r6, r0
   38f1c:	mov	r6, #0
   38f20:	ldreq	r3, [r4, #36]	; 0x24
   38f24:	strbeq	r6, [r3, r7]
   38f28:	beq	38f44 <Mat_VarReadNextInfo5+0x5c0>
   38f2c:	ldr	r0, [r4, #36]	; 0x24
   38f30:	bl	1478 <free@plt>
   38f34:	ldr	r0, [pc, #328]	; 39084 <Mat_VarReadNextInfo5+0x700>
   38f38:	str	r6, [r4, #36]	; 0x24
   38f3c:	add	r0, pc, r0
   38f40:	bl	161c <Mat_Critical@plt>
   38f44:	ldr	r3, [r4, #16]
   38f48:	cmp	r3, #2
   38f4c:	bne	38fd4 <Mat_VarReadNextInfo5+0x650>
   38f50:	mov	r1, r4
   38f54:	mov	r0, r5
   38f58:	bl	36980 <ReadNextStructField>
   38f5c:	ldr	r0, [r5]
   38f60:	ldr	r6, [r4, #52]	; 0x34
   38f64:	bl	14b4 <ftell@plt>
   38f68:	ldr	r3, [r4, #52]	; 0x34
   38f6c:	str	r0, [r6]
   38f70:	ldr	r3, [r3]
   38f74:	cmn	r3, #1
   38f78:	bne	38ce4 <Mat_VarReadNextInfo5+0x360>
   38f7c:	ldr	r0, [pc, #260]	; 39088 <Mat_VarReadNextInfo5+0x704>
   38f80:	add	r0, pc, r0
   38f84:	b	38ce0 <Mat_VarReadNextInfo5+0x35c>
   38f88:	uxth	r3, r6
   38f8c:	cmp	r3, #1
   38f90:	bne	38f44 <Mat_VarReadNextInfo5+0x5c0>
   38f94:	lsr	r7, r6, #16
   38f98:	sub	r3, r7, #1
   38f9c:	cmp	r3, #3
   38fa0:	bhi	38f44 <Mat_VarReadNextInfo5+0x5c0>
   38fa4:	add	r0, r7, #1
   38fa8:	bl	1544 <malloc@plt>
   38fac:	cmp	r0, #0
   38fb0:	str	r0, [r4, #36]	; 0x24
   38fb4:	beq	38f44 <Mat_VarReadNextInfo5+0x5c0>
   38fb8:	mov	r2, r7
   38fbc:	add	r1, sp, #28
   38fc0:	bl	1490 <memcpy@plt>
   38fc4:	ldr	r3, [r4, #36]	; 0x24
   38fc8:	mov	r2, #0
   38fcc:	strb	r2, [r3, r6, lsr #16]
   38fd0:	b	38f44 <Mat_VarReadNextInfo5+0x5c0>
   38fd4:	cmp	r3, #1
   38fd8:	bne	38fec <Mat_VarReadNextInfo5+0x668>
   38fdc:	mov	r1, r4
   38fe0:	mov	r0, r5
   38fe4:	bl	360a4 <ReadNextCell>
   38fe8:	b	38f5c <Mat_VarReadNextInfo5+0x5d8>
   38fec:	cmp	r3, #16
   38ff0:	bne	38f5c <Mat_VarReadNextInfo5+0x5d8>
   38ff4:	mov	r3, #1
   38ff8:	add	r1, sp, #20
   38ffc:	mov	r0, r4
   39000:	str	r3, [sp, #20]
   39004:	bl	3a864 <SafeMulDims>
   39008:	mov	r2, #4
   3900c:	mov	r0, r4
   39010:	str	r2, [r4, #12]
   39014:	ldr	r1, [sp, #20]
   39018:	bl	3a8c4 <SafeMul>
   3901c:	ldr	r0, [r4]
   39020:	bl	1544 <malloc@plt>
   39024:	cmp	r0, #0
   39028:	mov	r6, r0
   3902c:	str	r0, [r4, #40]	; 0x28
   39030:	movne	r7, #0
   39034:	bne	39054 <Mat_VarReadNextInfo5+0x6d0>
   39038:	str	r0, [r4]
   3903c:	str	r0, [r4, #12]
   39040:	b	38f5c <Mat_VarReadNextInfo5+0x5d8>
   39044:	mov	r0, r5
   39048:	bl	16b8 <Mat_VarReadNextInfo@plt>
   3904c:	str	r0, [r6, r7, lsl #2]
   39050:	add	r7, r7, #1
   39054:	ldr	r3, [sp, #20]
   39058:	cmp	r7, r3
   3905c:	bcc	39044 <Mat_VarReadNextInfo5+0x6c0>
   39060:	b	38f5c <Mat_VarReadNextInfo5+0x5d8>
   39064:	ldr	r0, [pc, #32]	; 3908c <Mat_VarReadNextInfo5+0x708>
   39068:	add	r0, pc, r0
   3906c:	b	38a90 <Mat_VarReadNextInfo5+0x10c>
   39070:	.word	0x00006231
   39074:	.word	0x0000655f
   39078:	.word	0x00006556
   3907c:	.word	0x00006483
   39080:	.word	0x00005f09
   39084:	.word	0x00005cca
   39088:	.word	0x00005c65
   3908c:	.word	0x00005f92

00039090 <Mat_Create4>:
   39090:	ldr	r1, [pc, #148]	; 3912c <Mat_Create4+0x9c>
   39094:	push	{r4, r5, r6, lr}
   39098:	mov	r6, r0
   3909c:	add	r1, pc, r1
   390a0:	bl	1454 <fopen@plt>
   390a4:	subs	r5, r0, #0
   390a8:	moveq	r4, r5
   390ac:	beq	390d4 <Mat_Create4+0x44>
   390b0:	mov	r0, #44	; 0x2c
   390b4:	bl	1544 <malloc@plt>
   390b8:	subs	r4, r0, #0
   390bc:	bne	390dc <Mat_Create4+0x4c>
   390c0:	mov	r0, r5
   390c4:	bl	1634 <fclose@plt>
   390c8:	ldr	r0, [pc, #96]	; 39130 <Mat_Create4+0xa0>
   390cc:	add	r0, pc, r0
   390d0:	bl	161c <Mat_Critical@plt>
   390d4:	mov	r0, r4
   390d8:	pop	{r4, r5, r6, pc}
   390dc:	ldr	r0, [pc, #80]	; 39134 <Mat_Create4+0xa4>
   390e0:	mov	r1, r6
   390e4:	str	r5, [r4]
   390e8:	mov	r5, #0
   390ec:	str	r5, [r4, #4]
   390f0:	str	r5, [r4, #8]
   390f4:	add	r0, pc, r0
   390f8:	bl	1bfc <strdup_printf>
   390fc:	mov	r3, #16
   39100:	str	r0, [r4, #12]
   39104:	mov	r0, r4
   39108:	str	r3, [r4, #16]
   3910c:	str	r5, [r4, #20]
   39110:	str	r5, [r4, #24]
   39114:	str	r5, [r4, #28]
   39118:	str	r5, [r4, #32]
   3911c:	str	r5, [r4, #36]	; 0x24
   39120:	str	r5, [r4, #40]	; 0x28
   39124:	bl	15ec <Mat_Rewind@plt>
   39128:	b	390d4 <Mat_Create4+0x44>
   3912c:	.word	0x00005b94
   39130:	.word	0x00005f61
   39134:	.word	0x0000626f

00039138 <Mat_VarWrite4>:
   39138:	cmp	r1, #0
   3913c:	cmpne	r0, #0
   39140:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   39144:	sub	sp, sp, #44	; 0x2c
   39148:	beq	39654 <Mat_VarWrite4+0x51c>
   3914c:	ldr	r2, [r1, #36]	; 0x24
   39150:	cmp	r2, #0
   39154:	beq	39654 <Mat_VarWrite4+0x51c>
   39158:	ldr	r4, [r1, #4]
   3915c:	cmp	r4, #2
   39160:	bne	39654 <Mat_VarWrite4+0x51c>
   39164:	ldr	r3, [r1, #8]
   39168:	sub	r3, r3, #2
   3916c:	cmp	r3, #7
   39170:	addls	pc, pc, r3, lsl #2
   39174:	b	392ec <Mat_VarWrite4+0x1b4>
   39178:	b	392c0 <Mat_VarWrite4+0x188>
   3917c:	b	392b0 <Mat_VarWrite4+0x178>
   39180:	b	392b8 <Mat_VarWrite4+0x180>
   39184:	b	392a8 <Mat_VarWrite4+0x170>
   39188:	b	392ec <Mat_VarWrite4+0x1b4>
   3918c:	b	392a0 <Mat_VarWrite4+0x168>
   39190:	b	392ec <Mat_VarWrite4+0x1b4>
   39194:	b	39198 <Mat_VarWrite4+0x60>
   39198:	mov	r3, #0
   3919c:	mov	r5, r0
   391a0:	mov	r0, r2
   391a4:	str	r3, [sp, #20]
   391a8:	mov	r8, r1
   391ac:	bl	15c8 <strlen@plt>
   391b0:	add	r0, r0, #1
   391b4:	mov	r2, #2
   391b8:	mov	r1, #0
   391bc:	str	r0, [sp, #36]	; 0x24
   391c0:	ldr	r0, [r5]
   391c4:	bl	1694 <fseek@plt>
   391c8:	ldr	r4, [r8, #16]
   391cc:	cmp	r4, #12
   391d0:	bhi	39298 <Mat_VarWrite4+0x160>
   391d4:	mov	r7, #1
   391d8:	lsl	r4, r7, r4
   391dc:	tst	r4, #7872	; 0x1ec0
   391e0:	bne	39200 <Mat_VarWrite4+0xc8>
   391e4:	tst	r4, #32
   391e8:	bne	392f8 <Mat_VarWrite4+0x1c0>
   391ec:	ands	r4, r4, #16
   391f0:	beq	392ec <Mat_VarWrite4+0x1b4>
   391f4:	ldr	r3, [sp, #20]
   391f8:	add	r3, r3, r7
   391fc:	str	r3, [sp, #20]
   39200:	ldr	r1, [r8, #4]
   39204:	mov	r3, #0
   39208:	mov	r6, #1
   3920c:	ldr	r2, [r8, #32]
   39210:	cmp	r1, r3
   39214:	bgt	392c8 <Mat_VarWrite4+0x190>
   39218:	ldr	r3, [r2]
   3921c:	mov	r1, #20
   39220:	add	r0, sp, r1
   39224:	str	r3, [sp, #24]
   39228:	ldr	r3, [r2, #4]
   3922c:	mov	r2, #1
   39230:	str	r3, [sp, #28]
   39234:	ldr	r3, [r8, #20]
   39238:	adds	r3, r3, #0
   3923c:	movne	r3, #1
   39240:	str	r3, [sp, #32]
   39244:	ldr	r3, [r5]
   39248:	bl	1514 <fwrite@plt>
   3924c:	mov	r1, #1
   39250:	ldr	r3, [r5]
   39254:	ldr	r0, [r8, #36]	; 0x24
   39258:	ldr	r2, [sp, #36]	; 0x24
   3925c:	bl	1514 <fwrite@plt>
   39260:	ldr	r4, [r8, #20]
   39264:	cmp	r4, #0
   39268:	beq	392d8 <Mat_VarWrite4+0x1a0>
   3926c:	mov	r2, r6
   39270:	ldr	r3, [r5]
   39274:	ldr	r4, [r8, #40]	; 0x28
   39278:	ldr	r1, [r8, #12]
   3927c:	ldr	r0, [r4]
   39280:	bl	1514 <fwrite@plt>
   39284:	ldr	r3, [r5]
   39288:	mov	r2, r6
   3928c:	ldr	r0, [r4, #4]
   39290:	ldr	r1, [r8, #12]
   39294:	bl	1514 <fwrite@plt>
   39298:	mov	r4, #0
   3929c:	b	392ec <Mat_VarWrite4+0x1b4>
   392a0:	mov	r3, #10
   392a4:	b	3919c <Mat_VarWrite4+0x64>
   392a8:	mov	r3, #20
   392ac:	b	3919c <Mat_VarWrite4+0x64>
   392b0:	mov	r3, #30
   392b4:	b	3919c <Mat_VarWrite4+0x64>
   392b8:	mov	r3, #40	; 0x28
   392bc:	b	3919c <Mat_VarWrite4+0x64>
   392c0:	mov	r3, #50	; 0x32
   392c4:	b	3919c <Mat_VarWrite4+0x64>
   392c8:	ldr	r0, [r2, r3, lsl #2]
   392cc:	add	r3, r3, #1
   392d0:	mul	r6, r0, r6
   392d4:	b	39210 <Mat_VarWrite4+0xd8>
   392d8:	mov	r2, r6
   392dc:	ldr	r3, [r5]
   392e0:	ldr	r1, [r8, #12]
   392e4:	ldr	r0, [r8, #40]	; 0x28
   392e8:	bl	1514 <fwrite@plt>
   392ec:	mov	r0, r4
   392f0:	add	sp, sp, #44	; 0x2c
   392f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   392f8:	ldr	r0, [r8, #8]
   392fc:	add	fp, sp, #8
   39300:	bl	1598 <Mat_SizeOf@plt>
   39304:	ldr	r3, [sp, #20]
   39308:	mov	r1, #20
   3930c:	mov	r6, r0
   39310:	add	r0, sp, r1
   39314:	ldr	r4, [r8, #40]	; 0x28
   39318:	add	r3, r3, #2
   3931c:	str	r3, [sp, #20]
   39320:	ldr	r3, [r4, #16]
   39324:	cmp	r3, #0
   39328:	ldrgt	r2, [r4, #12]
   3932c:	subgt	r3, r3, #-1073741823	; 0xc0000001
   39330:	ldrgt	r7, [r2, r3, lsl #2]
   39334:	mov	r2, #1
   39338:	ldr	r3, [r8, #20]
   3933c:	addgt	r7, r7, #1
   39340:	cmp	r3, #0
   39344:	str	r7, [sp, #24]
   39348:	mov	r7, #0
   3934c:	movne	r3, #4
   39350:	moveq	r3, #3
   39354:	str	r3, [sp, #28]
   39358:	ldr	r3, [r5]
   3935c:	str	r7, [sp, #32]
   39360:	bl	1514 <fwrite@plt>
   39364:	mov	r1, #1
   39368:	ldr	r3, [r5]
   3936c:	ldr	r0, [r8, #36]	; 0x24
   39370:	ldr	r2, [sp, #36]	; 0x24
   39374:	bl	1514 <fwrite@plt>
   39378:	ldr	r3, [r4, #16]
   3937c:	sub	r3, r3, #1
   39380:	cmp	r3, r7
   39384:	bgt	39468 <Mat_VarWrite4+0x330>
   39388:	ldr	r3, [r8, #32]
   3938c:	add	r7, sp, #8
   39390:	mov	r2, #1
   39394:	mov	r1, #8
   39398:	mov	r0, r7
   3939c:	mov	r9, #1
   393a0:	vldr	s14, [r3]
   393a4:	ldr	r3, [r5]
   393a8:	vcvt.f64.u32	d7, s14
   393ac:	vstr	d7, [sp, #8]
   393b0:	bl	1514 <fwrite@plt>
   393b4:	ldr	r3, [r4, #16]
   393b8:	sub	r2, r9, #1
   393bc:	sub	r3, r3, #1
   393c0:	cmp	r3, r2
   393c4:	bgt	394d0 <Mat_VarWrite4+0x398>
   393c8:	ldr	r3, [r8, #32]
   393cc:	mov	r2, #1
   393d0:	mov	r1, #8
   393d4:	mov	r0, r7
   393d8:	vldr	s14, [r3, #4]
   393dc:	ldr	r3, [r5]
   393e0:	vcvt.f64.u32	d7, s14
   393e4:	vstr	d7, [sp, #8]
   393e8:	bl	1514 <fwrite@plt>
   393ec:	ldr	r8, [r8, #20]
   393f0:	mov	r2, #0
   393f4:	mov	r3, #0
   393f8:	strd	r2, [sp, #8]
   393fc:	ldr	sl, [r4, #24]
   39400:	cmp	r8, #0
   39404:	beq	39624 <Mat_VarWrite4+0x4ec>
   39408:	ldr	r3, [sl]
   3940c:	mov	r8, #0
   39410:	str	r3, [sp]
   39414:	ldr	r3, [sl, #4]
   39418:	str	r3, [sp, #4]
   3941c:	ldr	r3, [r4, #16]
   39420:	sub	r3, r3, #1
   39424:	cmp	r3, r8
   39428:	bgt	3952c <Mat_VarWrite4+0x3f4>
   3942c:	mov	r2, #1
   39430:	mov	r1, r6
   39434:	ldr	r3, [r5]
   39438:	mov	r0, r7
   3943c:	mov	r8, #0
   39440:	bl	1514 <fwrite@plt>
   39444:	ldr	r3, [r4, #16]
   39448:	sub	r3, r3, #1
   3944c:	cmp	r3, r8
   39450:	bgt	39588 <Mat_VarWrite4+0x450>
   39454:	mov	r2, #1
   39458:	mov	r1, r6
   3945c:	ldr	r3, [r5]
   39460:	mov	r0, r7
   39464:	b	39294 <Mat_VarWrite4+0x15c>
   39468:	ldr	r3, [r4, #12]
   3946c:	lsl	sl, r7, #2
   39470:	add	sl, sl, #4
   39474:	ldr	r9, [r3, r7, lsl #2]
   39478:	ldr	r2, [r4, #12]
   3947c:	ldr	r3, [r5]
   39480:	ldr	r2, [r2, sl]
   39484:	cmp	r2, r9
   39488:	ble	39498 <Mat_VarWrite4+0x360>
   3948c:	ldr	r2, [r4, #20]
   39490:	cmp	r2, r9
   39494:	bgt	394a0 <Mat_VarWrite4+0x368>
   39498:	add	r7, r7, #1
   3949c:	b	39378 <Mat_VarWrite4+0x240>
   394a0:	ldr	r2, [r4, #4]
   394a4:	mov	r1, #8
   394a8:	mov	r0, fp
   394ac:	ldr	r2, [r2, r9, lsl #2]
   394b0:	add	r9, r9, #1
   394b4:	add	r2, r2, #1
   394b8:	vmov	s15, r2
   394bc:	mov	r2, #1
   394c0:	vcvt.f64.s32	d7, s15
   394c4:	vstr	d7, [sp, #8]
   394c8:	bl	1514 <fwrite@plt>
   394cc:	b	39478 <Mat_VarWrite4+0x340>
   394d0:	ldr	r3, [r4, #12]
   394d4:	lsl	fp, r9, #2
   394d8:	add	r3, r3, fp
   394dc:	ldr	sl, [r3, #-4]
   394e0:	ldr	r2, [r4, #12]
   394e4:	ldr	r3, [r5]
   394e8:	ldr	r2, [r2, fp]
   394ec:	cmp	r2, sl
   394f0:	ble	39500 <Mat_VarWrite4+0x3c8>
   394f4:	ldr	r2, [r4, #20]
   394f8:	cmp	r2, sl
   394fc:	bgt	39508 <Mat_VarWrite4+0x3d0>
   39500:	add	r9, r9, #1
   39504:	b	393b4 <Mat_VarWrite4+0x27c>
   39508:	vmov	s15, r9
   3950c:	mov	r2, #1
   39510:	mov	r1, #8
   39514:	mov	r0, r7
   39518:	add	sl, sl, #1
   3951c:	vcvt.f64.s32	d7, s15
   39520:	vstr	d7, [sp, #8]
   39524:	bl	1514 <fwrite@plt>
   39528:	b	394e0 <Mat_VarWrite4+0x3a8>
   3952c:	ldr	r3, [r4, #12]
   39530:	lsl	sl, r8, #2
   39534:	add	sl, sl, #4
   39538:	ldr	r9, [r3, r8, lsl #2]
   3953c:	ldr	r3, [sp]
   39540:	mla	fp, r6, r9, r3
   39544:	ldr	r2, [r4, #12]
   39548:	ldr	r3, [r5]
   3954c:	ldr	r2, [r2, sl]
   39550:	cmp	r2, r9
   39554:	ble	39564 <Mat_VarWrite4+0x42c>
   39558:	ldr	r2, [r4, #20]
   3955c:	cmp	r2, r9
   39560:	bgt	3956c <Mat_VarWrite4+0x434>
   39564:	add	r8, r8, #1
   39568:	b	3941c <Mat_VarWrite4+0x2e4>
   3956c:	mov	r0, fp
   39570:	mov	r2, #1
   39574:	mov	r1, r6
   39578:	add	r9, r9, #1
   3957c:	bl	1514 <fwrite@plt>
   39580:	add	fp, fp, r6
   39584:	b	39544 <Mat_VarWrite4+0x40c>
   39588:	ldr	r3, [r4, #12]
   3958c:	lsl	sl, r8, #2
   39590:	add	sl, sl, #4
   39594:	ldr	r9, [r3, r8, lsl #2]
   39598:	ldr	r3, [sp, #4]
   3959c:	mla	fp, r6, r9, r3
   395a0:	ldr	r2, [r4, #12]
   395a4:	ldr	r3, [r5]
   395a8:	ldr	r2, [r2, sl]
   395ac:	cmp	r2, r9
   395b0:	ble	395c0 <Mat_VarWrite4+0x488>
   395b4:	ldr	r2, [r4, #20]
   395b8:	cmp	r2, r9
   395bc:	bgt	395c8 <Mat_VarWrite4+0x490>
   395c0:	add	r8, r8, #1
   395c4:	b	39444 <Mat_VarWrite4+0x30c>
   395c8:	mov	r0, fp
   395cc:	mov	r2, #1
   395d0:	mov	r1, r6
   395d4:	add	r9, r9, #1
   395d8:	bl	1514 <fwrite@plt>
   395dc:	add	fp, fp, r6
   395e0:	b	395a0 <Mat_VarWrite4+0x468>
   395e4:	ldr	r2, [r4, #12]
   395e8:	lsl	r3, r8, #2
   395ec:	add	r3, r3, #4
   395f0:	str	r3, [sp]
   395f4:	ldr	r9, [r2, r8, lsl #2]
   395f8:	mla	fp, r6, r9, sl
   395fc:	ldr	r1, [sp]
   39600:	ldr	r2, [r4, #12]
   39604:	ldr	r3, [r5]
   39608:	ldr	r2, [r2, r1]
   3960c:	cmp	r2, r9
   39610:	ble	39620 <Mat_VarWrite4+0x4e8>
   39614:	ldr	r2, [r4, #20]
   39618:	cmp	r2, r9
   3961c:	bgt	39638 <Mat_VarWrite4+0x500>
   39620:	add	r8, r8, #1
   39624:	ldr	r3, [r4, #16]
   39628:	sub	r3, r3, #1
   3962c:	cmp	r3, r8
   39630:	bgt	395e4 <Mat_VarWrite4+0x4ac>
   39634:	b	39454 <Mat_VarWrite4+0x31c>
   39638:	mov	r0, fp
   3963c:	mov	r2, #1
   39640:	mov	r1, r6
   39644:	add	r9, r9, #1
   39648:	bl	1514 <fwrite@plt>
   3964c:	add	fp, fp, r6
   39650:	b	395fc <Mat_VarWrite4+0x4c4>
   39654:	mvn	r4, #0
   39658:	b	392ec <Mat_VarWrite4+0x1b4>

0003965c <Mat_VarRead4>:
   3965c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   39660:	mov	r6, r1
   39664:	sub	sp, sp, #28
   39668:	mov	r4, #1
   3966c:	mov	r5, r0
   39670:	add	r1, sp, #8
   39674:	mov	r0, r6
   39678:	str	r4, [sp, #8]
   3967c:	bl	3a864 <SafeMulDims>
   39680:	ldr	r3, [r6, #52]	; 0x34
   39684:	mov	r2, #0
   39688:	ldr	r0, [r5]
   3968c:	ldr	r1, [r3]
   39690:	bl	1694 <fseek@plt>
   39694:	ldr	r3, [r6, #16]
   39698:	cmp	r3, #5
   3969c:	beq	397a0 <Mat_VarRead4+0x144>
   396a0:	cmp	r3, #6
   396a4:	beq	396ec <Mat_VarRead4+0x90>
   396a8:	cmp	r3, #4
   396ac:	bne	39f00 <Mat_VarRead4+0x8a4>
   396b0:	str	r4, [r6, #12]
   396b4:	ldr	r4, [sp, #8]
   396b8:	mov	r0, r4
   396bc:	str	r4, [r6]
   396c0:	bl	1544 <malloc@plt>
   396c4:	cmp	r0, #0
   396c8:	mov	r1, r0
   396cc:	str	r0, [r6, #40]	; 0x28
   396d0:	beq	39790 <Mat_VarRead4+0x134>
   396d4:	mov	r3, r4
   396d8:	mov	r0, r5
   396dc:	ldr	r2, [r6, #8]
   396e0:	bl	12f84 <ReadUInt8Data>
   396e4:	mov	r3, #2
   396e8:	b	3974c <Mat_VarRead4+0xf0>
   396ec:	mov	r2, #8
   396f0:	mov	r0, r6
   396f4:	ldr	r1, [sp, #8]
   396f8:	str	r2, [r6, #12]
   396fc:	bl	3a8c4 <SafeMul>
   39700:	ldr	r0, [r6]
   39704:	ldr	r3, [r6, #20]
   39708:	cmp	r3, #0
   3970c:	beq	39768 <Mat_VarRead4+0x10c>
   39710:	bl	3a7c8 <ComplexMalloc>
   39714:	subs	r4, r0, #0
   39718:	beq	39758 <Mat_VarRead4+0xfc>
   3971c:	mov	r0, r5
   39720:	ldr	r1, [r4]
   39724:	str	r4, [r6, #40]	; 0x28
   39728:	ldr	r2, [r6, #8]
   3972c:	ldr	r3, [sp, #8]
   39730:	bl	f568 <ReadDoubleData>
   39734:	ldr	r1, [r4, #4]
   39738:	ldr	r2, [r6, #8]
   3973c:	ldr	r3, [sp, #8]
   39740:	mov	r0, r5
   39744:	bl	f568 <ReadDoubleData>
   39748:	mov	r3, #9
   3974c:	str	r3, [r6, #8]
   39750:	add	sp, sp, #28
   39754:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   39758:	ldr	r0, [pc, #1408]	; 39ce0 <Mat_VarRead4+0x684>
   3975c:	add	r0, pc, r0
   39760:	bl	161c <Mat_Critical@plt>
   39764:	b	39748 <Mat_VarRead4+0xec>
   39768:	bl	1544 <malloc@plt>
   3976c:	cmp	r0, #0
   39770:	mov	r1, r0
   39774:	str	r0, [r6, #40]	; 0x28
   39778:	ldrne	r2, [r6, #8]
   3977c:	ldrne	r3, [sp, #8]
   39780:	bne	39740 <Mat_VarRead4+0xe4>
   39784:	ldr	r0, [pc, #1368]	; 39ce4 <Mat_VarRead4+0x688>
   39788:	add	r0, pc, r0
   3978c:	b	39760 <Mat_VarRead4+0x104>
   39790:	ldr	r0, [pc, #1360]	; 39ce8 <Mat_VarRead4+0x68c>
   39794:	add	r0, pc, r0
   39798:	bl	161c <Mat_Critical@plt>
   3979c:	b	396e4 <Mat_VarRead4+0x88>
   397a0:	mov	r0, #28
   397a4:	str	r0, [r6, #12]
   397a8:	bl	1544 <malloc@plt>
   397ac:	cmp	r0, #0
   397b0:	mov	r4, r0
   397b4:	str	r0, [r6, #40]	; 0x28
   397b8:	beq	39ef4 <Mat_VarRead4+0x898>
   397bc:	ldr	r2, [r6, #32]
   397c0:	ldr	r3, [r2, #4]
   397c4:	sub	r3, r3, #4
   397c8:	clz	r3, r3
   397cc:	lsr	r3, r3, #5
   397d0:	str	r3, [r6, #20]
   397d4:	ldr	r7, [r2]
   397d8:	sub	r7, r7, #1
   397dc:	lsl	r0, r7, #2
   397e0:	str	r7, [r4]
   397e4:	str	r7, [r4, #8]
   397e8:	bl	1544 <malloc@plt>
   397ec:	cmp	r0, #0
   397f0:	mov	r8, r0
   397f4:	str	r0, [r4, #4]
   397f8:	beq	39898 <Mat_VarRead4+0x23c>
   397fc:	mov	r3, r7
   39800:	mov	r1, r0
   39804:	mov	r2, #9
   39808:	mov	r0, r5
   3980c:	bl	1165c <ReadInt32Data>
   39810:	mov	r3, #0
   39814:	ldr	r2, [r4, #8]
   39818:	cmp	r2, r3
   3981c:	bgt	39880 <Mat_VarRead4+0x224>
   39820:	add	r8, sp, #16
   39824:	mov	r3, #1
   39828:	mov	r2, #9
   3982c:	mov	r1, r8
   39830:	mov	r0, r5
   39834:	bl	f568 <ReadDoubleData>
   39838:	vldr	d7, [sp, #16]
   3983c:	ldr	r3, [r6, #32]
   39840:	ldr	r0, [r5]
   39844:	vcvt.u32.f64	s14, d7
   39848:	vstr	s14, [r3]
   3984c:	bl	14b4 <ftell@plt>
   39850:	cmn	r0, #1
   39854:	mov	r7, r0
   39858:	bne	398b4 <Mat_VarRead4+0x258>
   3985c:	ldr	r0, [r4, #4]
   39860:	bl	1478 <free@plt>
   39864:	ldr	r0, [r6, #40]	; 0x28
   39868:	bl	1478 <free@plt>
   3986c:	ldr	r0, [pc, #1144]	; 39cec <Mat_VarRead4+0x690>
   39870:	mov	r3, #0
   39874:	str	r3, [r6, #40]	; 0x28
   39878:	add	r0, pc, r0
   3987c:	b	398ac <Mat_VarRead4+0x250>
   39880:	ldr	r1, [r4, #4]
   39884:	ldr	r2, [r1, r3, lsl #2]
   39888:	sub	r2, r2, #1
   3988c:	str	r2, [r1, r3, lsl #2]
   39890:	add	r3, r3, #1
   39894:	b	39814 <Mat_VarRead4+0x1b8>
   39898:	mov	r0, r4
   3989c:	bl	1478 <free@plt>
   398a0:	ldr	r0, [pc, #1096]	; 39cf0 <Mat_VarRead4+0x694>
   398a4:	str	r8, [r6, #40]	; 0x28
   398a8:	add	r0, pc, r0
   398ac:	bl	161c <Mat_Critical@plt>
   398b0:	b	39750 <Mat_VarRead4+0xf4>
   398b4:	ldr	r9, [r5]
   398b8:	mov	r0, #9
   398bc:	ldr	sl, [r4, #8]
   398c0:	bl	1598 <Mat_SizeOf@plt>
   398c4:	mov	r2, #1
   398c8:	mul	r1, r0, sl
   398cc:	mov	r0, r9
   398d0:	bl	1694 <fseek@plt>
   398d4:	mov	r3, #1
   398d8:	mov	r2, #9
   398dc:	mov	r1, r8
   398e0:	mov	r0, r5
   398e4:	bl	f568 <ReadDoubleData>
   398e8:	vldr	d6, [pc, #1000]	; 39cd8 <Mat_VarRead4+0x67c>
   398ec:	vldr	d7, [sp, #16]
   398f0:	vcmpe.f64	d7, d6
   398f4:	vmrs	APSR_nzcv, fpscr
   398f8:	bgt	39908 <Mat_VarRead4+0x2ac>
   398fc:	vcmpe.f64	d7, #0.0
   39900:	vmrs	APSR_nzcv, fpscr
   39904:	bpl	3992c <Mat_VarRead4+0x2d0>
   39908:	ldr	r0, [r4, #4]
   3990c:	bl	1478 <free@plt>
   39910:	ldr	r0, [r6, #40]	; 0x28
   39914:	bl	1478 <free@plt>
   39918:	ldr	r0, [pc, #980]	; 39cf4 <Mat_VarRead4+0x698>
   3991c:	mov	r3, #0
   39920:	str	r3, [r6, #40]	; 0x28
   39924:	add	r0, pc, r0
   39928:	b	398ac <Mat_VarRead4+0x250>
   3992c:	vcvt.u32.f64	s14, d7
   39930:	ldr	r3, [r6, #32]
   39934:	mov	r2, #0
   39938:	mov	r1, r7
   3993c:	ldr	r0, [r5]
   39940:	vstr	s14, [r3, #4]
   39944:	bl	1694 <fseek@plt>
   39948:	ldr	r3, [r6, #32]
   3994c:	ldr	r0, [r3, #4]
   39950:	cmn	r0, #-2147483646	; 0x80000002
   39954:	bls	3997c <Mat_VarRead4+0x320>
   39958:	ldr	r0, [r4, #4]
   3995c:	bl	1478 <free@plt>
   39960:	ldr	r0, [r6, #40]	; 0x28
   39964:	bl	1478 <free@plt>
   39968:	ldr	r0, [pc, #904]	; 39cf8 <Mat_VarRead4+0x69c>
   3996c:	mov	r3, #0
   39970:	str	r3, [r6, #40]	; 0x28
   39974:	add	r0, pc, r0
   39978:	b	398ac <Mat_VarRead4+0x250>
   3997c:	add	r0, r0, #1
   39980:	str	r0, [r4, #16]
   39984:	lsl	r0, r0, #2
   39988:	bl	1544 <malloc@plt>
   3998c:	cmp	r0, #0
   39990:	mov	r9, r0
   39994:	str	r0, [r4, #12]
   39998:	beq	39ac8 <Mat_VarRead4+0x46c>
   3999c:	ldr	fp, [r4, #8]
   399a0:	lsl	r0, fp, #2
   399a4:	bl	1544 <malloc@plt>
   399a8:	subs	sl, r0, #0
   399ac:	beq	39aa0 <Mat_VarRead4+0x444>
   399b0:	mov	r7, #0
   399b4:	mov	r3, fp
   399b8:	mov	r2, #9
   399bc:	mov	r1, sl
   399c0:	mov	r0, r5
   399c4:	str	r7, [r9]
   399c8:	bl	1165c <ReadInt32Data>
   399cc:	mov	r3, r7
   399d0:	mov	r2, #1
   399d4:	ldr	r9, [r4, #8]
   399d8:	ldr	r7, [r4, #16]
   399dc:	sub	r1, r7, #1
   399e0:	cmp	r1, r2
   399e4:	bgt	39a7c <Mat_VarRead4+0x420>
   399e8:	mov	r0, sl
   399ec:	sub	r7, r7, #-1073741823	; 0xc0000001
   399f0:	bl	1478 <free@plt>
   399f4:	ldr	r3, [r4, #12]
   399f8:	mov	r2, #9
   399fc:	mov	r1, r8
   39a00:	mov	r0, r5
   39a04:	str	r9, [r3, r7, lsl #2]
   39a08:	mov	r3, #1
   39a0c:	bl	f568 <ReadDoubleData>
   39a10:	ldr	r7, [r4, #8]
   39a14:	ldr	r3, [r6, #20]
   39a18:	ldr	r9, [r6, #8]
   39a1c:	str	r7, [r4, #20]
   39a20:	cmp	r3, #0
   39a24:	bne	39ae8 <Mat_VarRead4+0x48c>
   39a28:	mov	r0, r9
   39a2c:	bl	1598 <Mat_SizeOf@plt>
   39a30:	mul	r0, r0, r7
   39a34:	bl	1544 <malloc@plt>
   39a38:	cmp	r0, #0
   39a3c:	mov	r1, r0
   39a40:	str	r0, [r4, #24]
   39a44:	beq	39ec4 <Mat_VarRead4+0x868>
   39a48:	sub	r3, r9, #2
   39a4c:	cmp	r3, #7
   39a50:	addls	pc, pc, r3, lsl #2
   39a54:	b	39e90 <Mat_VarRead4+0x834>
   39a58:	b	39e70 <Mat_VarRead4+0x814>
   39a5c:	b	39e30 <Mat_VarRead4+0x7d4>
   39a60:	b	39e50 <Mat_VarRead4+0x7f4>
   39a64:	b	39e10 <Mat_VarRead4+0x7b4>
   39a68:	b	39e90 <Mat_VarRead4+0x834>
   39a6c:	b	39df0 <Mat_VarRead4+0x794>
   39a70:	b	39e90 <Mat_VarRead4+0x834>
   39a74:	b	39de4 <Mat_VarRead4+0x788>
   39a78:	add	r3, r3, #1
   39a7c:	cmp	r3, r9
   39a80:	bge	39a90 <Mat_VarRead4+0x434>
   39a84:	ldr	r1, [sl, r3, lsl #2]
   39a88:	cmp	r1, r2
   39a8c:	ble	39a78 <Mat_VarRead4+0x41c>
   39a90:	ldr	r1, [r4, #12]
   39a94:	str	r3, [r1, r2, lsl #2]
   39a98:	add	r2, r2, #1
   39a9c:	b	399d4 <Mat_VarRead4+0x378>
   39aa0:	mov	r0, r9
   39aa4:	bl	1478 <free@plt>
   39aa8:	ldr	r0, [r4, #4]
   39aac:	bl	1478 <free@plt>
   39ab0:	ldr	r0, [r6, #40]	; 0x28
   39ab4:	bl	1478 <free@plt>
   39ab8:	ldr	r0, [pc, #572]	; 39cfc <Mat_VarRead4+0x6a0>
   39abc:	str	sl, [r6, #40]	; 0x28
   39ac0:	add	r0, pc, r0
   39ac4:	b	398ac <Mat_VarRead4+0x250>
   39ac8:	ldr	r0, [r4, #4]
   39acc:	bl	1478 <free@plt>
   39ad0:	ldr	r0, [r6, #40]	; 0x28
   39ad4:	bl	1478 <free@plt>
   39ad8:	ldr	r0, [pc, #544]	; 39d00 <Mat_VarRead4+0x6a4>
   39adc:	str	r9, [r6, #40]	; 0x28
   39ae0:	add	r0, pc, r0
   39ae4:	b	398ac <Mat_VarRead4+0x250>
   39ae8:	mov	r0, r9
   39aec:	bl	1598 <Mat_SizeOf@plt>
   39af0:	mul	r0, r0, r7
   39af4:	bl	3a7c8 <ComplexMalloc>
   39af8:	subs	r7, r0, #0
   39afc:	beq	39dbc <Mat_VarRead4+0x760>
   39b00:	sub	r3, r9, #2
   39b04:	ldr	r1, [r7]
   39b08:	str	r7, [r4, #24]
   39b0c:	cmp	r3, #7
   39b10:	addls	pc, pc, r3, lsl #2
   39b14:	b	39d70 <Mat_VarRead4+0x714>
   39b18:	b	39d1c <Mat_VarRead4+0x6c0>
   39b1c:	b	39c30 <Mat_VarRead4+0x5d4>
   39b20:	b	39c84 <Mat_VarRead4+0x628>
   39b24:	b	39bdc <Mat_VarRead4+0x580>
   39b28:	b	39d70 <Mat_VarRead4+0x714>
   39b2c:	b	39b88 <Mat_VarRead4+0x52c>
   39b30:	b	39d70 <Mat_VarRead4+0x714>
   39b34:	b	39b38 <Mat_VarRead4+0x4dc>
   39b38:	mov	r2, #9
   39b3c:	mov	r0, r5
   39b40:	ldr	r3, [r4, #20]
   39b44:	bl	f568 <ReadDoubleData>
   39b48:	mov	r3, #1
   39b4c:	mov	r2, #9
   39b50:	mov	r1, r8
   39b54:	mov	r0, r5
   39b58:	bl	f568 <ReadDoubleData>
   39b5c:	ldr	r1, [r7, #4]
   39b60:	mov	r2, #9
   39b64:	ldr	r3, [r4, #20]
   39b68:	mov	r0, r5
   39b6c:	bl	f568 <ReadDoubleData>
   39b70:	mov	r3, #1
   39b74:	mov	r2, #9
   39b78:	mov	r1, r8
   39b7c:	mov	r0, r5
   39b80:	bl	f568 <ReadDoubleData>
   39b84:	b	39750 <Mat_VarRead4+0xf4>
   39b88:	mov	r2, #7
   39b8c:	add	r6, sp, #12
   39b90:	ldr	r3, [r4, #20]
   39b94:	mov	r0, r5
   39b98:	bl	106cc <ReadSingleData>
   39b9c:	mov	r3, #1
   39ba0:	mov	r2, #7
   39ba4:	mov	r1, r6
   39ba8:	mov	r0, r5
   39bac:	bl	106cc <ReadSingleData>
   39bb0:	mov	r2, #7
   39bb4:	mov	r0, r5
   39bb8:	ldr	r1, [r7, #4]
   39bbc:	ldr	r3, [r4, #20]
   39bc0:	bl	106cc <ReadSingleData>
   39bc4:	mov	r3, #1
   39bc8:	mov	r2, #7
   39bcc:	mov	r1, r6
   39bd0:	mov	r0, r5
   39bd4:	bl	106cc <ReadSingleData>
   39bd8:	b	39750 <Mat_VarRead4+0xf4>
   39bdc:	mov	r2, #5
   39be0:	add	r6, sp, #12
   39be4:	ldr	r3, [r4, #20]
   39be8:	mov	r0, r5
   39bec:	bl	1165c <ReadInt32Data>
   39bf0:	mov	r3, #1
   39bf4:	mov	r2, #5
   39bf8:	mov	r1, r6
   39bfc:	mov	r0, r5
   39c00:	bl	1165c <ReadInt32Data>
   39c04:	mov	r2, #5
   39c08:	mov	r0, r5
   39c0c:	ldr	r1, [r7, #4]
   39c10:	ldr	r3, [r4, #20]
   39c14:	bl	1165c <ReadInt32Data>
   39c18:	mov	r3, #1
   39c1c:	mov	r2, #5
   39c20:	mov	r1, r6
   39c24:	mov	r0, r5
   39c28:	bl	1165c <ReadInt32Data>
   39c2c:	b	39750 <Mat_VarRead4+0xf4>
   39c30:	mov	r2, #3
   39c34:	add	r6, sp, #12
   39c38:	ldr	r3, [r4, #20]
   39c3c:	mov	r0, r5
   39c40:	bl	1206c <ReadInt16Data>
   39c44:	mov	r3, #1
   39c48:	mov	r2, #3
   39c4c:	mov	r1, r6
   39c50:	mov	r0, r5
   39c54:	bl	1206c <ReadInt16Data>
   39c58:	mov	r2, #3
   39c5c:	mov	r0, r5
   39c60:	ldr	r1, [r7, #4]
   39c64:	ldr	r3, [r4, #20]
   39c68:	bl	1206c <ReadInt16Data>
   39c6c:	mov	r3, #1
   39c70:	mov	r2, #3
   39c74:	mov	r1, r6
   39c78:	mov	r0, r5
   39c7c:	bl	1206c <ReadInt16Data>
   39c80:	b	39750 <Mat_VarRead4+0xf4>
   39c84:	mov	r2, #4
   39c88:	add	r6, sp, #12
   39c8c:	ldr	r3, [r4, #20]
   39c90:	mov	r0, r5
   39c94:	bl	12574 <ReadUInt16Data>
   39c98:	mov	r3, #1
   39c9c:	mov	r2, #4
   39ca0:	mov	r1, r6
   39ca4:	mov	r0, r5
   39ca8:	bl	12574 <ReadUInt16Data>
   39cac:	mov	r2, #4
   39cb0:	mov	r0, r5
   39cb4:	ldr	r1, [r7, #4]
   39cb8:	ldr	r3, [r4, #20]
   39cbc:	bl	12574 <ReadUInt16Data>
   39cc0:	mov	r3, #1
   39cc4:	mov	r2, #4
   39cc8:	mov	r1, r6
   39ccc:	mov	r0, r5
   39cd0:	bl	12574 <ReadUInt16Data>
   39cd4:	b	39750 <Mat_VarRead4+0xf4>
   39cd8:	.word	0xff800000
   39cdc:	.word	0x41dfffff
   39ce0:	.word	0x000056bc
   39ce4:	.word	0x00005533
   39ce8:	.word	0x00005527
   39cec:	.word	0x0000536d
   39cf0:	.word	0x000057af
   39cf4:	.word	0x00005765
   39cf8:	.word	0x00005715
   39cfc:	.word	0x000055f4
   39d00:	.word	0x000055d4
   39d04:	.word	0x00005338
   39d08:	.word	0x00004fb0
   39d0c:	.word	0x0000522c
   39d10:	.word	0x00004ed9
   39d14:	.word	0x00004dc3
   39d18:	.word	0x00005226
   39d1c:	mov	r2, #2
   39d20:	add	r6, sp, #12
   39d24:	ldr	r3, [r4, #20]
   39d28:	mov	r0, r5
   39d2c:	bl	12f84 <ReadUInt8Data>
   39d30:	mov	r3, #1
   39d34:	mov	r2, #2
   39d38:	mov	r1, r6
   39d3c:	mov	r0, r5
   39d40:	bl	12f84 <ReadUInt8Data>
   39d44:	mov	r2, #2
   39d48:	mov	r0, r5
   39d4c:	ldr	r1, [r7, #4]
   39d50:	ldr	r3, [r4, #20]
   39d54:	bl	12f84 <ReadUInt8Data>
   39d58:	mov	r3, #1
   39d5c:	mov	r2, #2
   39d60:	mov	r1, r6
   39d64:	mov	r0, r5
   39d68:	bl	12f84 <ReadUInt8Data>
   39d6c:	b	39750 <Mat_VarRead4+0xf4>
   39d70:	mov	r0, r1
   39d74:	bl	1478 <free@plt>
   39d78:	ldr	r0, [r7, #4]
   39d7c:	bl	1478 <free@plt>
   39d80:	mov	r0, r7
   39d84:	bl	1478 <free@plt>
   39d88:	ldr	r0, [r4, #12]
   39d8c:	bl	1478 <free@plt>
   39d90:	ldr	r0, [r4, #4]
   39d94:	bl	1478 <free@plt>
   39d98:	ldr	r0, [r6, #40]	; 0x28
   39d9c:	bl	1478 <free@plt>
   39da0:	ldr	r0, [pc, #-164]	; 39d04 <Mat_VarRead4+0x6a8>
   39da4:	mov	r3, #0
   39da8:	mov	r1, r9
   39dac:	str	r3, [r6, #40]	; 0x28
   39db0:	add	r0, pc, r0
   39db4:	bl	161c <Mat_Critical@plt>
   39db8:	b	39750 <Mat_VarRead4+0xf4>
   39dbc:	ldr	r0, [r4, #12]
   39dc0:	bl	1478 <free@plt>
   39dc4:	ldr	r0, [r4, #4]
   39dc8:	bl	1478 <free@plt>
   39dcc:	ldr	r0, [r6, #40]	; 0x28
   39dd0:	bl	1478 <free@plt>
   39dd4:	ldr	r0, [pc, #-212]	; 39d08 <Mat_VarRead4+0x6ac>
   39dd8:	str	r7, [r6, #40]	; 0x28
   39ddc:	add	r0, pc, r0
   39de0:	b	398ac <Mat_VarRead4+0x250>
   39de4:	mov	r2, #9
   39de8:	ldr	r3, [r4, #20]
   39dec:	b	39b68 <Mat_VarRead4+0x50c>
   39df0:	mov	r2, #7
   39df4:	mov	r0, r5
   39df8:	ldr	r3, [r4, #20]
   39dfc:	bl	106cc <ReadSingleData>
   39e00:	mov	r3, #1
   39e04:	mov	r2, #7
   39e08:	add	r1, sp, #12
   39e0c:	b	39bd0 <Mat_VarRead4+0x574>
   39e10:	mov	r2, #5
   39e14:	mov	r0, r5
   39e18:	ldr	r3, [r4, #20]
   39e1c:	bl	1165c <ReadInt32Data>
   39e20:	mov	r3, #1
   39e24:	mov	r2, #5
   39e28:	add	r1, sp, #12
   39e2c:	b	39c24 <Mat_VarRead4+0x5c8>
   39e30:	mov	r2, #3
   39e34:	mov	r0, r5
   39e38:	ldr	r3, [r4, #20]
   39e3c:	bl	1206c <ReadInt16Data>
   39e40:	mov	r3, #1
   39e44:	mov	r2, #3
   39e48:	add	r1, sp, #12
   39e4c:	b	39c78 <Mat_VarRead4+0x61c>
   39e50:	mov	r2, #4
   39e54:	mov	r0, r5
   39e58:	ldr	r3, [r4, #20]
   39e5c:	bl	12574 <ReadUInt16Data>
   39e60:	mov	r3, #1
   39e64:	mov	r2, #4
   39e68:	add	r1, sp, #12
   39e6c:	b	39ccc <Mat_VarRead4+0x670>
   39e70:	mov	r2, #2
   39e74:	mov	r0, r5
   39e78:	ldr	r3, [r4, #20]
   39e7c:	bl	12f84 <ReadUInt8Data>
   39e80:	mov	r3, #1
   39e84:	mov	r2, #2
   39e88:	add	r1, sp, #12
   39e8c:	b	39d64 <Mat_VarRead4+0x708>
   39e90:	bl	1478 <free@plt>
   39e94:	ldr	r0, [r4, #12]
   39e98:	bl	1478 <free@plt>
   39e9c:	ldr	r0, [r4, #4]
   39ea0:	bl	1478 <free@plt>
   39ea4:	ldr	r0, [r6, #40]	; 0x28
   39ea8:	bl	1478 <free@plt>
   39eac:	ldr	r0, [pc, #-424]	; 39d0c <Mat_VarRead4+0x6b0>
   39eb0:	mov	r3, #0
   39eb4:	mov	r1, r9
   39eb8:	str	r3, [r6, #40]	; 0x28
   39ebc:	add	r0, pc, r0
   39ec0:	b	39db4 <Mat_VarRead4+0x758>
   39ec4:	ldr	r0, [r4, #12]
   39ec8:	str	r1, [sp, #4]
   39ecc:	bl	1478 <free@plt>
   39ed0:	ldr	r0, [r4, #4]
   39ed4:	bl	1478 <free@plt>
   39ed8:	ldr	r0, [r6, #40]	; 0x28
   39edc:	bl	1478 <free@plt>
   39ee0:	ldr	r0, [pc, #-472]	; 39d10 <Mat_VarRead4+0x6b4>
   39ee4:	ldr	r1, [sp, #4]
   39ee8:	add	r0, pc, r0
   39eec:	str	r1, [r6, #40]	; 0x28
   39ef0:	b	398ac <Mat_VarRead4+0x250>
   39ef4:	ldr	r0, [pc, #-488]	; 39d14 <Mat_VarRead4+0x6b8>
   39ef8:	add	r0, pc, r0
   39efc:	b	398ac <Mat_VarRead4+0x250>
   39f00:	ldr	r0, [pc, #-496]	; 39d18 <Mat_VarRead4+0x6bc>
   39f04:	add	r0, pc, r0
   39f08:	b	398ac <Mat_VarRead4+0x250>

00039f0c <Mat_VarReadData4>:
   39f0c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   39f10:	mov	r7, r3
   39f14:	sub	sp, sp, #36	; 0x24
   39f18:	mov	r4, r1
   39f1c:	mov	r6, r0
   39f20:	mov	sl, r2
   39f24:	mov	r2, #0
   39f28:	ldr	r3, [r1, #52]	; 0x34
   39f2c:	mov	r5, #1
   39f30:	ldr	r0, [r0]
   39f34:	ldrd	r8, [sp, #72]	; 0x48
   39f38:	ldr	r1, [r3]
   39f3c:	bl	1694 <fseek@plt>
   39f40:	ldr	r3, [r4, #8]
   39f44:	cmp	r3, #9
   39f48:	bhi	3a02c <Mat_VarReadData4+0x120>
   39f4c:	lsl	r2, r5, r3
   39f50:	tst	r2, #700	; 0x2bc
   39f54:	beq	3a02c <Mat_VarReadData4+0x120>
   39f58:	ldr	r2, [r4, #4]
   39f5c:	ldr	fp, [r4, #20]
   39f60:	cmp	r2, #2
   39f64:	bne	3a048 <Mat_VarReadData4+0x13c>
   39f68:	ldr	r0, [r7]
   39f6c:	ldr	r2, [r9]
   39f70:	ldr	ip, [r8]
   39f74:	add	r0, r0, r5
   39f78:	ldr	r1, [r4, #32]
   39f7c:	sub	r2, r2, #1
   39f80:	mla	r2, ip, r2, r0
   39f84:	ldr	r0, [r1]
   39f88:	cmp	r2, r0
   39f8c:	bhi	39fb8 <Mat_VarReadData4+0xac>
   39f90:	ldr	r2, [r7, #4]
   39f94:	ldr	r5, [r9, #4]
   39f98:	ldr	r0, [r8, #4]
   39f9c:	add	r2, r2, #1
   39fa0:	sub	r5, r5, #1
   39fa4:	mla	r5, r0, r5, r2
   39fa8:	ldr	r2, [r1, #4]
   39fac:	cmp	r5, r2
   39fb0:	movls	r5, #0
   39fb4:	movhi	r5, #1
   39fb8:	cmp	fp, #0
   39fbc:	beq	3a038 <Mat_VarReadData4+0x12c>
   39fc0:	mov	r0, r3
   39fc4:	bl	1598 <Mat_SizeOf@plt>
   39fc8:	add	r1, sp, #28
   39fcc:	str	r0, [sp, #28]
   39fd0:	mov	r0, r4
   39fd4:	bl	3a864 <SafeMulDims>
   39fd8:	mov	r0, r6
   39fdc:	ldr	r1, [sl]
   39fe0:	ldr	r3, [r4, #32]
   39fe4:	ldr	r2, [r4, #16]
   39fe8:	stm	sp, {r3, r7, r8, r9}
   39fec:	ldr	r3, [r4, #8]
   39ff0:	bl	195d0 <ReadDataSlab2>
   39ff4:	ldr	r3, [r4, #52]	; 0x34
   39ff8:	mov	r2, #0
   39ffc:	ldr	r0, [r6]
   3a000:	ldr	r1, [r3]
   3a004:	ldr	r3, [sp, #28]
   3a008:	add	r1, r1, r3
   3a00c:	bl	1694 <fseek@plt>
   3a010:	ldr	r1, [sl, #4]
   3a014:	ldr	r3, [r4, #32]
   3a018:	ldr	r2, [r4, #16]
   3a01c:	stm	sp, {r3, r7, r8, r9}
   3a020:	ldr	r3, [r4, #8]
   3a024:	mov	r0, r6
   3a028:	bl	195d0 <ReadDataSlab2>
   3a02c:	mov	r0, r5
   3a030:	add	sp, sp, #36	; 0x24
   3a034:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3a038:	ldr	r2, [r4, #16]
   3a03c:	stm	sp, {r1, r7, r8, r9}
   3a040:	mov	r1, sl
   3a044:	b	3a024 <Mat_VarReadData4+0x118>
   3a048:	cmp	fp, #0
   3a04c:	beq	3a0d4 <Mat_VarReadData4+0x1c8>
   3a050:	mov	r0, r3
   3a054:	mov	r5, #0
   3a058:	bl	1598 <Mat_SizeOf@plt>
   3a05c:	add	r1, sp, #28
   3a060:	str	r0, [sp, #28]
   3a064:	mov	r0, r4
   3a068:	bl	3a864 <SafeMulDims>
   3a06c:	ldr	r1, [sl]
   3a070:	mov	r0, r6
   3a074:	ldr	r3, [r4, #32]
   3a078:	ldr	r2, [r4, #16]
   3a07c:	stmib	sp, {r3, r7, r8, r9}
   3a080:	ldr	r3, [r4, #4]
   3a084:	str	r3, [sp]
   3a088:	ldr	r3, [r4, #8]
   3a08c:	bl	1368c <ReadDataSlabN>
   3a090:	ldr	r3, [r4, #52]	; 0x34
   3a094:	mov	r2, #0
   3a098:	ldr	r0, [r6]
   3a09c:	ldr	r1, [r3]
   3a0a0:	ldr	r3, [sp, #28]
   3a0a4:	add	r1, r1, r3
   3a0a8:	bl	1694 <fseek@plt>
   3a0ac:	ldr	r1, [sl, #4]
   3a0b0:	mov	r0, r6
   3a0b4:	ldr	r3, [r4, #32]
   3a0b8:	ldr	r2, [r4, #16]
   3a0bc:	stmib	sp, {r3, r7, r8, r9}
   3a0c0:	ldr	r3, [r4, #4]
   3a0c4:	str	r3, [sp]
   3a0c8:	ldr	r3, [r4, #8]
   3a0cc:	bl	1368c <ReadDataSlabN>
   3a0d0:	b	3a02c <Mat_VarReadData4+0x120>
   3a0d4:	ldr	r1, [r4, #32]
   3a0d8:	mov	r0, r6
   3a0dc:	mov	r5, fp
   3a0e0:	str	r2, [sp]
   3a0e4:	stmib	sp, {r1, r7, r8, r9}
   3a0e8:	mov	r1, sl
   3a0ec:	ldr	r2, [r4, #16]
   3a0f0:	bl	1368c <ReadDataSlabN>
   3a0f4:	b	3a02c <Mat_VarReadData4+0x120>

0003a0f8 <Mat_VarReadDataLinear4>:
   3a0f8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3a0fc:	mov	r4, r1
   3a100:	sub	sp, sp, #28
   3a104:	mov	r6, r3
   3a108:	mov	r3, #1
   3a10c:	mov	r5, r0
   3a110:	add	r1, sp, #20
   3a114:	mov	r0, r4
   3a118:	mov	r8, r2
   3a11c:	str	r3, [sp, #20]
   3a120:	ldr	r7, [sp, #68]	; 0x44
   3a124:	bl	3a864 <SafeMulDims>
   3a128:	ldr	r1, [r4, #52]	; 0x34
   3a12c:	mov	r2, #0
   3a130:	mov	r9, r0
   3a134:	ldr	r0, [r5]
   3a138:	ldr	r1, [r1]
   3a13c:	bl	1694 <fseek@plt>
   3a140:	ldr	r0, [r4, #8]
   3a144:	bl	1598 <Mat_SizeOf@plt>
   3a148:	sub	r2, r7, #1
   3a14c:	add	r1, r6, #1
   3a150:	ldr	fp, [sp, #20]
   3a154:	str	r0, [r4, #12]
   3a158:	ldr	r3, [sp, #64]	; 0x40
   3a15c:	mla	r2, r3, r2, r1
   3a160:	cmp	r2, fp
   3a164:	movhi	r3, #1
   3a168:	movhi	r9, r3
   3a16c:	bhi	3a1d8 <Mat_VarReadDataLinear4+0xe0>
   3a170:	ldr	r3, [r4, #8]
   3a174:	ldr	r1, [r4, #20]
   3a178:	ldr	r2, [r4, #16]
   3a17c:	cmp	r1, #0
   3a180:	beq	3a1e4 <Mat_VarReadDataLinear4+0xec>
   3a184:	ldr	r1, [sp, #64]	; 0x40
   3a188:	mov	sl, r0
   3a18c:	mov	r0, r5
   3a190:	str	r6, [sp]
   3a194:	stmib	sp, {r1, r7}
   3a198:	ldr	r1, [r8]
   3a19c:	bl	19160 <ReadDataSlab1>
   3a1a0:	ldr	r3, [r4, #52]	; 0x34
   3a1a4:	mov	r2, #0
   3a1a8:	ldr	r0, [r5]
   3a1ac:	ldr	r1, [r3]
   3a1b0:	mla	r1, fp, sl, r1
   3a1b4:	bl	1694 <fseek@plt>
   3a1b8:	ldr	r3, [sp, #64]	; 0x40
   3a1bc:	ldr	r1, [r8, #4]
   3a1c0:	ldr	r2, [r4, #16]
   3a1c4:	str	r6, [sp]
   3a1c8:	stmib	sp, {r3, r7}
   3a1cc:	ldr	r3, [r4, #8]
   3a1d0:	mov	r0, r5
   3a1d4:	bl	19160 <ReadDataSlab1>
   3a1d8:	mov	r0, r9
   3a1dc:	add	sp, sp, #28
   3a1e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3a1e4:	ldr	r1, [sp, #64]	; 0x40
   3a1e8:	str	r6, [sp]
   3a1ec:	stmib	sp, {r1, r7}
   3a1f0:	mov	r1, r8
   3a1f4:	b	3a1d0 <Mat_VarReadDataLinear4+0xd8>

0003a1f8 <Mat_VarReadNextInfo4>:
   3a1f8:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   3a1fc:	subs	r6, r0, #0
   3a200:	bne	3a214 <Mat_VarReadNextInfo4+0x1c>
   3a204:	mov	r5, #0
   3a208:	mov	r0, r5
   3a20c:	add	sp, sp, #12
   3a210:	pop	{r4, r5, r6, r7, r8, r9, pc}
   3a214:	ldr	r3, [r6]
   3a218:	cmp	r3, #0
   3a21c:	beq	3a204 <Mat_VarReadNextInfo4+0xc>
   3a220:	bl	1508 <Mat_VarCalloc@plt>
   3a224:	subs	r4, r0, #0
   3a228:	beq	3a204 <Mat_VarReadNextInfo4+0xc>
   3a22c:	mov	r7, sp
   3a230:	mov	r2, #1
   3a234:	ldr	r3, [r6]
   3a238:	mov	r1, #4
   3a23c:	mov	r0, r7
   3a240:	bl	1520 <fread@plt>
   3a244:	subs	r5, r0, #0
   3a248:	bne	3a258 <Mat_VarReadNextInfo4+0x60>
   3a24c:	mov	r0, r4
   3a250:	bl	158c <Mat_VarFree@plt>
   3a254:	b	3a208 <Mat_VarReadNextInfo4+0x10>
   3a258:	ldr	r3, [sp]
   3a25c:	movw	r5, #4052	; 0xfd4
   3a260:	cmp	r3, r5
   3a264:	bls	3a284 <Mat_VarReadNextInfo4+0x8c>
   3a268:	mov	r0, r7
   3a26c:	bl	189c <Mat_int32Swap>
   3a270:	cmp	r0, r5
   3a274:	ble	3a284 <Mat_VarReadNextInfo4+0x8c>
   3a278:	mov	r0, r4
   3a27c:	bl	158c <Mat_VarFree@plt>
   3a280:	b	3a204 <Mat_VarReadNextInfo4+0xc>
   3a284:	ldr	r8, [sp]
   3a288:	vmov	s15, r8
   3a28c:	vcvt.f64.s32	d0, s15
   3a290:	vldr	d7, [pc, #696]	; 3a550 <Mat_VarReadNextInfo4+0x358>
   3a294:	vdiv.f64	d0, d0, d7
   3a298:	bl	152c <floor@plt>
   3a29c:	vcvt.s32.f64	s15, d0
   3a2a0:	ldr	r3, [pc, #704]	; 3a568 <Mat_VarReadNextInfo4+0x370>
   3a2a4:	vmov	r5, s15
   3a2a8:	mla	r8, r3, r5, r8
   3a2ac:	vmov	s15, r8
   3a2b0:	vcvt.f64.s32	d0, s15
   3a2b4:	vldr	d7, [pc, #668]	; 3a558 <Mat_VarReadNextInfo4+0x360>
   3a2b8:	vdiv.f64	d0, d0, d7
   3a2bc:	bl	152c <floor@plt>
   3a2c0:	vcvt.s32.f64	s15, d0
   3a2c4:	mvn	r3, #99	; 0x63
   3a2c8:	vmov	r9, s15
   3a2cc:	mla	r8, r3, r9, r8
   3a2d0:	vmov	s15, r8
   3a2d4:	vcvt.f64.s32	d0, s15
   3a2d8:	vldr	d7, [pc, #640]	; 3a560 <Mat_VarReadNextInfo4+0x368>
   3a2dc:	vdiv.f64	d0, d0, d7
   3a2e0:	bl	152c <floor@plt>
   3a2e4:	vcvt.s32.f64	s15, d0
   3a2e8:	mvn	r3, #9
   3a2ec:	cmp	r5, #0
   3a2f0:	vmov	r2, s15
   3a2f4:	mla	r3, r3, r2, r8
   3a2f8:	str	r3, [sp]
   3a2fc:	beq	3a308 <Mat_VarReadNextInfo4+0x110>
   3a300:	cmp	r5, #1
   3a304:	bne	3a278 <Mat_VarReadNextInfo4+0x80>
   3a308:	cmp	r9, #0
   3a30c:	str	r5, [r6, #20]
   3a310:	bne	3a278 <Mat_VarReadNextInfo4+0x80>
   3a314:	cmp	r2, #5
   3a318:	addls	pc, pc, r2, lsl #2
   3a31c:	b	3a278 <Mat_VarReadNextInfo4+0x80>
   3a320:	b	3a338 <Mat_VarReadNextInfo4+0x140>
   3a324:	b	3a4d4 <Mat_VarReadNextInfo4+0x2dc>
   3a328:	b	3a4dc <Mat_VarReadNextInfo4+0x2e4>
   3a32c:	b	3a4e4 <Mat_VarReadNextInfo4+0x2ec>
   3a330:	b	3a4ec <Mat_VarReadNextInfo4+0x2f4>
   3a334:	b	3a4f4 <Mat_VarReadNextInfo4+0x2fc>
   3a338:	mov	r2, #9
   3a33c:	cmp	r3, #1
   3a340:	str	r2, [r4, #8]
   3a344:	beq	3a4fc <Mat_VarReadNextInfo4+0x304>
   3a348:	cmp	r3, #2
   3a34c:	beq	3a504 <Mat_VarReadNextInfo4+0x30c>
   3a350:	cmp	r3, #0
   3a354:	moveq	r3, #6
   3a358:	bne	3a278 <Mat_VarReadNextInfo4+0x80>
   3a35c:	str	r3, [r4, #16]
   3a360:	mov	r3, #2
   3a364:	mov	r0, #8
   3a368:	str	r3, [r4, #4]
   3a36c:	bl	1544 <malloc@plt>
   3a370:	cmp	r0, #0
   3a374:	mov	r5, r0
   3a378:	str	r0, [r4, #32]
   3a37c:	beq	3a24c <Mat_VarReadNextInfo4+0x54>
   3a380:	mov	r2, #1
   3a384:	mov	r1, #4
   3a388:	ldr	r3, [r6]
   3a38c:	mov	r0, r7
   3a390:	bl	1520 <fread@plt>
   3a394:	ldr	r3, [r6, #20]
   3a398:	mov	r5, r0
   3a39c:	cmp	r3, #0
   3a3a0:	beq	3a3ac <Mat_VarReadNextInfo4+0x1b4>
   3a3a4:	mov	r0, r7
   3a3a8:	bl	189c <Mat_int32Swap>
   3a3ac:	ldr	r2, [sp]
   3a3b0:	cmp	r5, #0
   3a3b4:	ldr	r3, [r4, #32]
   3a3b8:	str	r2, [r3]
   3a3bc:	beq	3a24c <Mat_VarReadNextInfo4+0x54>
   3a3c0:	mov	r2, #1
   3a3c4:	mov	r1, #4
   3a3c8:	ldr	r3, [r6]
   3a3cc:	mov	r0, r7
   3a3d0:	bl	1520 <fread@plt>
   3a3d4:	ldr	r3, [r6, #20]
   3a3d8:	mov	r5, r0
   3a3dc:	cmp	r3, #0
   3a3e0:	beq	3a3ec <Mat_VarReadNextInfo4+0x1f4>
   3a3e4:	mov	r0, r7
   3a3e8:	bl	189c <Mat_int32Swap>
   3a3ec:	ldr	r2, [sp]
   3a3f0:	cmp	r5, #0
   3a3f4:	ldr	r3, [r4, #32]
   3a3f8:	str	r2, [r3, #4]
   3a3fc:	beq	3a24c <Mat_VarReadNextInfo4+0x54>
   3a400:	mov	r2, #1
   3a404:	mov	r1, #4
   3a408:	ldr	r3, [r6]
   3a40c:	add	r0, r4, #20
   3a410:	bl	1520 <fread@plt>
   3a414:	subs	r5, r0, #0
   3a418:	beq	3a24c <Mat_VarReadNextInfo4+0x54>
   3a41c:	ldr	r3, [r4, #20]
   3a420:	cmp	r3, #0
   3a424:	beq	3a434 <Mat_VarReadNextInfo4+0x23c>
   3a428:	ldr	r3, [r4, #16]
   3a42c:	cmp	r3, #4
   3a430:	beq	3a278 <Mat_VarReadNextInfo4+0x80>
   3a434:	mov	r2, #1
   3a438:	mov	r1, #4
   3a43c:	ldr	r3, [r6]
   3a440:	mov	r0, r7
   3a444:	bl	1520 <fread@plt>
   3a448:	subs	r5, r0, #0
   3a44c:	beq	3a24c <Mat_VarReadNextInfo4+0x54>
   3a450:	ldr	r3, [r6, #20]
   3a454:	cmp	r3, #0
   3a458:	beq	3a464 <Mat_VarReadNextInfo4+0x26c>
   3a45c:	mov	r0, r7
   3a460:	bl	189c <Mat_int32Swap>
   3a464:	ldr	r0, [sp]
   3a468:	cmp	r0, #0
   3a46c:	ble	3a278 <Mat_VarReadNextInfo4+0x80>
   3a470:	bl	1544 <malloc@plt>
   3a474:	cmp	r0, #0
   3a478:	mov	r5, r0
   3a47c:	str	r0, [r4, #36]	; 0x24
   3a480:	beq	3a24c <Mat_VarReadNextInfo4+0x54>
   3a484:	mov	r1, #1
   3a488:	ldr	r3, [r6]
   3a48c:	ldr	r2, [sp]
   3a490:	bl	1520 <fread@plt>
   3a494:	subs	r5, r0, #0
   3a498:	beq	3a24c <Mat_VarReadNextInfo4+0x54>
   3a49c:	ldr	r0, [r6]
   3a4a0:	ldr	r5, [r4, #52]	; 0x34
   3a4a4:	bl	14b4 <ftell@plt>
   3a4a8:	ldr	r3, [r4, #52]	; 0x34
   3a4ac:	str	r0, [r5]
   3a4b0:	ldr	r3, [r3]
   3a4b4:	cmn	r3, #1
   3a4b8:	bne	3a50c <Mat_VarReadNextInfo4+0x314>
   3a4bc:	mov	r0, r4
   3a4c0:	bl	158c <Mat_VarFree@plt>
   3a4c4:	ldr	r0, [pc, #160]	; 3a56c <Mat_VarReadNextInfo4+0x374>
   3a4c8:	add	r0, pc, r0
   3a4cc:	bl	161c <Mat_Critical@plt>
   3a4d0:	b	3a204 <Mat_VarReadNextInfo4+0xc>
   3a4d4:	mov	r2, #7
   3a4d8:	b	3a33c <Mat_VarReadNextInfo4+0x144>
   3a4dc:	mov	r2, #5
   3a4e0:	b	3a33c <Mat_VarReadNextInfo4+0x144>
   3a4e4:	mov	r2, #3
   3a4e8:	b	3a33c <Mat_VarReadNextInfo4+0x144>
   3a4ec:	mov	r2, #4
   3a4f0:	b	3a33c <Mat_VarReadNextInfo4+0x144>
   3a4f4:	mov	r2, #2
   3a4f8:	b	3a33c <Mat_VarReadNextInfo4+0x144>
   3a4fc:	mov	r3, #4
   3a500:	b	3a35c <Mat_VarReadNextInfo4+0x164>
   3a504:	mov	r3, #5
   3a508:	b	3a35c <Mat_VarReadNextInfo4+0x164>
   3a50c:	ldr	r0, [r4, #8]
   3a510:	mov	r5, r4
   3a514:	bl	1598 <Mat_SizeOf@plt>
   3a518:	ldr	r3, [r4, #20]
   3a51c:	add	r1, sp, #4
   3a520:	str	r0, [sp, #4]
   3a524:	cmp	r3, #0
   3a528:	lslne	r0, r0, #1
   3a52c:	strne	r0, [sp, #4]
   3a530:	mov	r0, r4
   3a534:	bl	3a864 <SafeMulDims>
   3a538:	mov	r2, #1
   3a53c:	ldr	r0, [r6]
   3a540:	ldr	r1, [sp, #4]
   3a544:	bl	1694 <fseek@plt>
   3a548:	b	3a208 <Mat_VarReadNextInfo4+0x10>
   3a54c:	nop	{0}
   3a550:	.word	0x00000000
   3a554:	.word	0x408f4000
   3a558:	.word	0x00000000
   3a55c:	.word	0x40590000
   3a560:	.word	0x00000000
   3a564:	.word	0x40240000
   3a568:	.word	0xfffffc18
   3a56c:	.word	0x0000471d

0003a570 <mat_copy>:
   3a570:	push	{r4, r5, r6, r7, r8, lr}
   3a574:	sub	sp, sp, #8192	; 0x2000
   3a578:	mov	r4, r0
   3a57c:	mov	r7, sp
   3a580:	mov	r2, #8192	; 0x2000
   3a584:	mov	r8, r1
   3a588:	mov	r0, r7
   3a58c:	mov	r1, #0
   3a590:	bl	15f8 <memset@plt>
   3a594:	ldr	r1, [pc, #204]	; 3a668 <mat_copy+0xf8>
   3a598:	mov	r0, r4
   3a59c:	add	r1, pc, r1
   3a5a0:	bl	1454 <fopen@plt>
   3a5a4:	subs	r5, r0, #0
   3a5a8:	bne	3a5c8 <mat_copy+0x58>
   3a5ac:	ldr	r0, [pc, #184]	; 3a66c <mat_copy+0xfc>
   3a5b0:	mov	r1, r4
   3a5b4:	add	r0, pc, r0
   3a5b8:	bl	161c <Mat_Critical@plt>
   3a5bc:	mvn	r0, #0
   3a5c0:	add	sp, sp, #8192	; 0x2000
   3a5c4:	pop	{r4, r5, r6, r7, r8, pc}
   3a5c8:	ldr	r1, [pc, #160]	; 3a670 <mat_copy+0x100>
   3a5cc:	mov	r0, r8
   3a5d0:	add	r1, pc, r1
   3a5d4:	bl	1454 <fopen@plt>
   3a5d8:	subs	r6, r0, #0
   3a5dc:	bne	3a634 <mat_copy+0xc4>
   3a5e0:	mov	r0, r5
   3a5e4:	bl	1634 <fclose@plt>
   3a5e8:	ldr	r0, [pc, #132]	; 3a674 <mat_copy+0x104>
   3a5ec:	mov	r1, r8
   3a5f0:	add	r0, pc, r0
   3a5f4:	b	3a5b8 <mat_copy+0x48>
   3a5f8:	mov	r3, r6
   3a5fc:	mov	r2, r4
   3a600:	mov	r1, #1
   3a604:	mov	r0, r7
   3a608:	bl	1514 <fwrite@plt>
   3a60c:	cmp	r0, r4
   3a610:	beq	3a634 <mat_copy+0xc4>
   3a614:	mov	r0, r5
   3a618:	bl	1634 <fclose@plt>
   3a61c:	mov	r0, r6
   3a620:	bl	1634 <fclose@plt>
   3a624:	ldr	r0, [pc, #76]	; 3a678 <mat_copy+0x108>
   3a628:	mov	r1, r8
   3a62c:	add	r0, pc, r0
   3a630:	b	3a5b8 <mat_copy+0x48>
   3a634:	mov	r3, r5
   3a638:	mov	r2, #8192	; 0x2000
   3a63c:	mov	r1, #1
   3a640:	mov	r0, r7
   3a644:	bl	1520 <fread@plt>
   3a648:	subs	r4, r0, #0
   3a64c:	bne	3a5f8 <mat_copy+0x88>
   3a650:	mov	r0, r5
   3a654:	bl	1634 <fclose@plt>
   3a658:	mov	r0, r6
   3a65c:	bl	1634 <fclose@plt>
   3a660:	mov	r0, r4
   3a664:	b	3a5c0 <mat_copy+0x50>
   3a668:	.word	0x00004bc0
   3a66c:	.word	0x00004bab
   3a670:	.word	0x00004bb2
   3a674:	.word	0x00004b95
   3a678:	.word	0x00004b7c

0003a67c <Mat_PrintNumber>:
   3a67c:	sub	r0, r0, #1
   3a680:	cmp	r0, #12
   3a684:	addls	pc, pc, r0, lsl #2
   3a688:	b	3a768 <Mat_PrintNumber+0xec>
   3a68c:	b	3a748 <Mat_PrintNumber+0xcc>
   3a690:	b	3a758 <Mat_PrintNumber+0xdc>
   3a694:	b	3a728 <Mat_PrintNumber+0xac>
   3a698:	b	3a738 <Mat_PrintNumber+0xbc>
   3a69c:	b	3a708 <Mat_PrintNumber+0x8c>
   3a6a0:	b	3a718 <Mat_PrintNumber+0x9c>
   3a6a4:	b	3a6d0 <Mat_PrintNumber+0x54>
   3a6a8:	b	3a768 <Mat_PrintNumber+0xec>
   3a6ac:	b	3a6c0 <Mat_PrintNumber+0x44>
   3a6b0:	b	3a768 <Mat_PrintNumber+0xec>
   3a6b4:	b	3a768 <Mat_PrintNumber+0xec>
   3a6b8:	b	3a6e8 <Mat_PrintNumber+0x6c>
   3a6bc:	b	3a6f8 <Mat_PrintNumber+0x7c>
   3a6c0:	ldr	r0, [pc, #164]	; 3a76c <Mat_PrintNumber+0xf0>
   3a6c4:	ldrd	r2, [r1]
   3a6c8:	add	r0, pc, r0
   3a6cc:	b	1448 <printf@plt>
   3a6d0:	vldr	s15, [r1]
   3a6d4:	ldr	r0, [pc, #148]	; 3a770 <Mat_PrintNumber+0xf4>
   3a6d8:	vcvt.f64.f32	d7, s15
   3a6dc:	add	r0, pc, r0
   3a6e0:	vmov	r2, r3, d7
   3a6e4:	b	3a6cc <Mat_PrintNumber+0x50>
   3a6e8:	ldr	r0, [pc, #132]	; 3a774 <Mat_PrintNumber+0xf8>
   3a6ec:	ldrd	r2, [r1]
   3a6f0:	add	r0, pc, r0
   3a6f4:	b	1448 <printf@plt>
   3a6f8:	ldr	r0, [pc, #120]	; 3a778 <Mat_PrintNumber+0xfc>
   3a6fc:	ldrd	r2, [r1]
   3a700:	add	r0, pc, r0
   3a704:	b	3a6f4 <Mat_PrintNumber+0x78>
   3a708:	ldr	r0, [pc, #108]	; 3a77c <Mat_PrintNumber+0x100>
   3a70c:	ldr	r1, [r1]
   3a710:	add	r0, pc, r0
   3a714:	b	1448 <printf@plt>
   3a718:	ldr	r0, [pc, #96]	; 3a780 <Mat_PrintNumber+0x104>
   3a71c:	ldr	r1, [r1]
   3a720:	add	r0, pc, r0
   3a724:	b	3a714 <Mat_PrintNumber+0x98>
   3a728:	ldr	r0, [pc, #84]	; 3a784 <Mat_PrintNumber+0x108>
   3a72c:	ldrsh	r1, [r1]
   3a730:	add	r0, pc, r0
   3a734:	b	3a714 <Mat_PrintNumber+0x98>
   3a738:	ldr	r0, [pc, #72]	; 3a788 <Mat_PrintNumber+0x10c>
   3a73c:	ldrh	r1, [r1]
   3a740:	add	r0, pc, r0
   3a744:	b	3a714 <Mat_PrintNumber+0x98>
   3a748:	ldr	r0, [pc, #60]	; 3a78c <Mat_PrintNumber+0x110>
   3a74c:	ldrsb	r1, [r1]
   3a750:	add	r0, pc, r0
   3a754:	b	3a714 <Mat_PrintNumber+0x98>
   3a758:	ldr	r0, [pc, #48]	; 3a790 <Mat_PrintNumber+0x114>
   3a75c:	ldrb	r1, [r1]
   3a760:	add	r0, pc, r0
   3a764:	b	3a714 <Mat_PrintNumber+0x98>
   3a768:	bx	lr
   3a76c:	.word	0x00004afc
   3a770:	.word	0x00004ae8
   3a774:	.word	0x00004ad7
   3a778:	.word	0x00004acc
   3a77c:	.word	0x000047db
   3a780:	.word	0x00004ab1
   3a784:	.word	0x00004aa4
   3a788:	.word	0x00004a98
   3a78c:	.word	0x00004a8c
   3a790:	.word	0x00004a81

0003a794 <ReadData>:
   3a794:	cmp	r1, #0
   3a798:	cmpne	r0, #0
   3a79c:	bxeq	lr
   3a7a0:	ldr	r2, [r0]
   3a7a4:	cmp	r2, #0
   3a7a8:	bxeq	lr
   3a7ac:	ldr	r3, [r0, #16]
   3a7b0:	cmp	r3, #256	; 0x100
   3a7b4:	bne	3a7bc <ReadData+0x28>
   3a7b8:	b	3494c <Mat_VarRead5>
   3a7bc:	cmp	r3, #16
   3a7c0:	bxne	lr
   3a7c4:	b	3965c <Mat_VarRead4>

0003a7c8 <ComplexMalloc>:
   3a7c8:	push	{r4, r5, r6, lr}
   3a7cc:	mov	r6, r0
   3a7d0:	mov	r0, #8
   3a7d4:	bl	1544 <malloc@plt>
   3a7d8:	subs	r4, r0, #0
   3a7dc:	beq	3a824 <ComplexMalloc+0x5c>
   3a7e0:	mov	r0, r6
   3a7e4:	bl	1544 <malloc@plt>
   3a7e8:	cmp	r0, #0
   3a7ec:	mov	r5, r0
   3a7f0:	str	r0, [r4]
   3a7f4:	beq	3a82c <ComplexMalloc+0x64>
   3a7f8:	mov	r0, r6
   3a7fc:	bl	1544 <malloc@plt>
   3a800:	cmp	r0, #0
   3a804:	mov	r6, r0
   3a808:	str	r0, [r4, #4]
   3a80c:	bne	3a824 <ComplexMalloc+0x5c>
   3a810:	mov	r0, r5
   3a814:	bl	1478 <free@plt>
   3a818:	mov	r0, r4
   3a81c:	mov	r4, r6
   3a820:	bl	1478 <free@plt>
   3a824:	mov	r0, r4
   3a828:	pop	{r4, r5, r6, pc}
   3a82c:	mov	r0, r4
   3a830:	mov	r4, r5
   3a834:	bl	1478 <free@plt>
   3a838:	b	3a824 <ComplexMalloc+0x5c>

0003a83c <ClassType2DataType>:
   3a83c:	sub	r0, r0, #1
   3a840:	cmp	r0, #14
   3a844:	bhi	3a858 <ClassType2DataType+0x1c>
   3a848:	ldr	r3, [pc, #16]	; 3a860 <ClassType2DataType+0x24>
   3a84c:	add	r3, pc, r3
   3a850:	ldrb	r0, [r3, r0]
   3a854:	bx	lr
   3a858:	mov	r0, #0
   3a85c:	bx	lr
   3a860:	.word	0x000048f5

0003a864 <SafeMulDims>:
   3a864:	ldr	r2, [r0, #4]
   3a868:	mov	r3, #0
   3a86c:	cmp	r2, r3
   3a870:	bgt	3a894 <SafeMulDims+0x30>
   3a874:	mov	r0, #0
   3a878:	bx	lr
   3a87c:	ldr	r2, [r0, #4]
   3a880:	add	r3, r3, #1
   3a884:	cmp	r2, r3
   3a888:	bgt	3a898 <SafeMulDims+0x34>
   3a88c:	mov	r0, #0
   3a890:	pop	{r4, r5, pc}
   3a894:	push	{r4, r5, lr}
   3a898:	ldr	r2, [r0, #32]
   3a89c:	ldr	r4, [r1]
   3a8a0:	ldr	r2, [r2, r3, lsl #2]
   3a8a4:	umull	r4, r5, r4, r2
   3a8a8:	cmp	r5, #0
   3a8ac:	str	r4, [r1]
   3a8b0:	beq	3a87c <SafeMulDims+0x18>
   3a8b4:	mov	r3, #0
   3a8b8:	mov	r0, #1
   3a8bc:	str	r3, [r1]
   3a8c0:	pop	{r4, r5, pc}

0003a8c4 <SafeMul>:
   3a8c4:	push	{r4, r5, lr}
   3a8c8:	umull	r4, r5, r1, r2
   3a8cc:	adds	r3, r5, #0
   3a8d0:	movne	r3, #1
   3a8d4:	cmp	r3, #0
   3a8d8:	moveq	r2, r4
   3a8dc:	movne	r2, #0
   3a8e0:	str	r2, [r0]
   3a8e4:	movne	r0, #1
   3a8e8:	moveq	r0, #0
   3a8ec:	pop	{r4, r5, pc}

0003a8f0 <Mat_GetLibraryVersion>:
   3a8f0:	cmp	r0, #0
   3a8f4:	movne	r3, #1
   3a8f8:	strne	r3, [r0]
   3a8fc:	cmp	r1, #0
   3a900:	movne	r3, #5
   3a904:	strne	r3, [r1]
   3a908:	cmp	r2, #0
   3a90c:	movne	r3, #15
   3a910:	strne	r3, [r2]
   3a914:	bx	lr

0003a918 <Mat_CreateVer>:
   3a918:	cmp	r2, #16
   3a91c:	beq	3a930 <Mat_CreateVer+0x18>
   3a920:	cmp	r2, #256	; 0x100
   3a924:	beq	3a934 <Mat_CreateVer+0x1c>
   3a928:	mov	r0, #0
   3a92c:	bx	lr
   3a930:	b	39090 <Mat_Create4>
   3a934:	b	34770 <Mat_Create5>

0003a938 <Mat_Close>:
   3a938:	push	{r4, r5, r6, lr}
   3a93c:	subs	r4, r0, #0
   3a940:	beq	3a99c <Mat_Close+0x64>
   3a944:	ldr	r0, [r4]
   3a948:	cmp	r0, #0
   3a94c:	beq	3a954 <Mat_Close+0x1c>
   3a950:	bl	1634 <fclose@plt>
   3a954:	ldr	r0, [r4, #4]
   3a958:	cmp	r0, #0
   3a95c:	beq	3a964 <Mat_Close+0x2c>
   3a960:	bl	1478 <free@plt>
   3a964:	ldr	r0, [r4, #8]
   3a968:	cmp	r0, #0
   3a96c:	beq	3a974 <Mat_Close+0x3c>
   3a970:	bl	1478 <free@plt>
   3a974:	ldr	r0, [r4, #12]
   3a978:	cmp	r0, #0
   3a97c:	beq	3a984 <Mat_Close+0x4c>
   3a980:	bl	1478 <free@plt>
   3a984:	ldr	r3, [r4, #40]	; 0x28
   3a988:	cmp	r3, #0
   3a98c:	movne	r5, #0
   3a990:	bne	3a9b8 <Mat_Close+0x80>
   3a994:	mov	r0, r4
   3a998:	bl	1478 <free@plt>
   3a99c:	mov	r0, #0
   3a9a0:	pop	{r4, r5, r6, pc}
   3a9a4:	ldr	r0, [r0, r5, lsl #2]
   3a9a8:	cmp	r0, #0
   3a9ac:	beq	3a9b4 <Mat_Close+0x7c>
   3a9b0:	bl	1478 <free@plt>
   3a9b4:	add	r5, r5, #1
   3a9b8:	ldr	r3, [r4, #36]	; 0x24
   3a9bc:	ldr	r0, [r4, #40]	; 0x28
   3a9c0:	cmp	r3, r5
   3a9c4:	bhi	3a9a4 <Mat_Close+0x6c>
   3a9c8:	bl	1478 <free@plt>
   3a9cc:	b	3a994 <Mat_Close+0x5c>

0003a9d0 <Mat_GetFilename>:
   3a9d0:	cmp	r0, #0
   3a9d4:	ldrne	r0, [r0, #12]
   3a9d8:	bx	lr

0003a9dc <Mat_GetHeader>:
   3a9dc:	cmp	r0, #0
   3a9e0:	ldrne	r0, [r0, #4]
   3a9e4:	bx	lr

0003a9e8 <Mat_GetVersion>:
   3a9e8:	cmp	r0, #0
   3a9ec:	ldrne	r0, [r0, #16]
   3a9f0:	bx	lr

0003a9f4 <Mat_Rewind>:
   3a9f4:	ldr	r3, [r0, #16]
   3a9f8:	push	{r4, lr}
   3a9fc:	cmp	r3, #256	; 0x100
   3aa00:	beq	3aa1c <Mat_Rewind+0x28>
   3aa04:	cmp	r3, #512	; 0x200
   3aa08:	beq	3aa30 <Mat_Rewind+0x3c>
   3aa0c:	cmp	r3, #16
   3aa10:	beq	3aa40 <Mat_Rewind+0x4c>
   3aa14:	mvn	r0, #0
   3aa18:	pop	{r4, pc}
   3aa1c:	mov	r2, #0
   3aa20:	mov	r1, #128	; 0x80
   3aa24:	ldr	r0, [r0]
   3aa28:	bl	1694 <fseek@plt>
   3aa2c:	b	3aa38 <Mat_Rewind+0x44>
   3aa30:	mov	r3, #0
   3aa34:	str	r3, [r0, #32]
   3aa38:	mov	r0, #0
   3aa3c:	pop	{r4, pc}
   3aa40:	mov	r2, #0
   3aa44:	mov	r1, r2
   3aa48:	b	3aa24 <Mat_Rewind+0x30>

0003aa4c <Mat_SizeOfClass>:
   3aa4c:	sub	r0, r0, #4
   3aa50:	cmp	r0, #11
   3aa54:	bhi	3aa6c <Mat_SizeOfClass+0x20>
   3aa58:	ldr	r3, [pc, #20]	; 3aa74 <Mat_SizeOfClass+0x28>
   3aa5c:	add	r3, pc, r3
   3aa60:	add	r3, r3, r0
   3aa64:	ldrb	r0, [r3, #15]
   3aa68:	bx	lr
   3aa6c:	mov	r0, #0
   3aa70:	bx	lr
   3aa74:	.word	0x000046e5

0003aa78 <Mat_VarCalloc>:
   3aa78:	push	{r4, r5, r6, lr}
   3aa7c:	mov	r0, #56	; 0x38
   3aa80:	bl	1544 <malloc@plt>
   3aa84:	subs	r5, r0, #0
   3aa88:	beq	3aae8 <Mat_VarCalloc+0x70>
   3aa8c:	mov	r4, #0
   3aa90:	mov	r0, #20
   3aa94:	str	r4, [r5]
   3aa98:	str	r4, [r5, #4]
   3aa9c:	str	r4, [r5, #8]
   3aaa0:	str	r4, [r5, #12]
   3aaa4:	str	r4, [r5, #16]
   3aaa8:	str	r4, [r5, #20]
   3aaac:	str	r4, [r5, #24]
   3aab0:	str	r4, [r5, #28]
   3aab4:	str	r4, [r5, #32]
   3aab8:	str	r4, [r5, #36]	; 0x24
   3aabc:	str	r4, [r5, #40]	; 0x28
   3aac0:	str	r4, [r5, #44]	; 0x2c
   3aac4:	str	r4, [r5, #48]	; 0x30
   3aac8:	bl	1544 <malloc@plt>
   3aacc:	cmp	r0, r4
   3aad0:	mov	r6, r0
   3aad4:	str	r0, [r5, #52]	; 0x34
   3aad8:	bne	3aaf0 <Mat_VarCalloc+0x78>
   3aadc:	mov	r0, r5
   3aae0:	mov	r5, r6
   3aae4:	bl	1478 <free@plt>
   3aae8:	mov	r0, r5
   3aaec:	pop	{r4, r5, r6, pc}
   3aaf0:	str	r4, [r0]
   3aaf4:	str	r4, [r0, #4]
   3aaf8:	str	r4, [r0, #8]
   3aafc:	str	r4, [r0, #12]
   3ab00:	str	r4, [r0, #16]
   3ab04:	b	3aae8 <Mat_VarCalloc+0x70>

0003ab08 <Mat_VarDuplicate>:
   3ab08:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3ab0c:	mov	r4, r0
   3ab10:	mov	r8, r1
   3ab14:	bl	1508 <Mat_VarCalloc@plt>
   3ab18:	subs	r5, r0, #0
   3ab1c:	beq	3add0 <Mat_VarDuplicate+0x2c8>
   3ab20:	ldr	r3, [r4]
   3ab24:	ldr	r0, [r4, #36]	; 0x24
   3ab28:	str	r3, [r5]
   3ab2c:	ldr	r3, [r4, #4]
   3ab30:	cmp	r0, #0
   3ab34:	str	r3, [r5, #4]
   3ab38:	ldr	r3, [r4, #8]
   3ab3c:	str	r3, [r5, #8]
   3ab40:	ldr	r3, [r4, #12]
   3ab44:	str	r3, [r5, #12]
   3ab48:	ldr	r3, [r4, #16]
   3ab4c:	str	r3, [r5, #16]
   3ab50:	ldr	r3, [r4, #20]
   3ab54:	str	r3, [r5, #20]
   3ab58:	ldr	r3, [r4, #24]
   3ab5c:	str	r3, [r5, #24]
   3ab60:	ldr	r3, [r4, #28]
   3ab64:	str	r3, [r5, #28]
   3ab68:	ldr	r3, [r4, #44]	; 0x2c
   3ab6c:	str	r3, [r5, #44]	; 0x2c
   3ab70:	ldr	r3, [r4, #48]	; 0x30
   3ab74:	str	r3, [r5, #48]	; 0x30
   3ab78:	beq	3aba4 <Mat_VarDuplicate+0x9c>
   3ab7c:	bl	15c8 <strlen@plt>
   3ab80:	add	r6, r0, #1
   3ab84:	mov	r0, r6
   3ab88:	bl	1544 <malloc@plt>
   3ab8c:	cmp	r0, #0
   3ab90:	str	r0, [r5, #36]	; 0x24
   3ab94:	beq	3aba4 <Mat_VarDuplicate+0x9c>
   3ab98:	mov	r2, r6
   3ab9c:	ldr	r1, [r4, #36]	; 0x24
   3aba0:	bl	1490 <memcpy@plt>
   3aba4:	ldr	r6, [r4, #4]
   3aba8:	lsl	r6, r6, #2
   3abac:	mov	r0, r6
   3abb0:	bl	1544 <malloc@plt>
   3abb4:	cmp	r0, #0
   3abb8:	str	r0, [r5, #32]
   3abbc:	beq	3abcc <Mat_VarDuplicate+0xc4>
   3abc0:	mov	r2, r6
   3abc4:	ldr	r1, [r4, #32]
   3abc8:	bl	1490 <memcpy@plt>
   3abcc:	ldr	r6, [r4, #52]	; 0x34
   3abd0:	ldr	r9, [r5, #52]	; 0x34
   3abd4:	cmp	r6, #0
   3abd8:	beq	3af1c <Mat_VarDuplicate+0x414>
   3abdc:	ldr	r3, [r6]
   3abe0:	mov	r7, #0
   3abe4:	str	r3, [r9]
   3abe8:	ldr	r3, [r6, #4]
   3abec:	str	r7, [r9, #12]
   3abf0:	str	r7, [r9, #16]
   3abf4:	str	r3, [r9, #4]
   3abf8:	ldr	r3, [r6, #8]
   3abfc:	cmp	r3, r7
   3ac00:	bne	3addc <Mat_VarDuplicate+0x2d4>
   3ac04:	ldr	r3, [r6, #12]
   3ac08:	cmp	r3, #0
   3ac0c:	bne	3ae24 <Mat_VarDuplicate+0x31c>
   3ac10:	ldr	r6, [r4, #52]	; 0x34
   3ac14:	ldr	r3, [r6, #16]
   3ac18:	cmp	r3, #0
   3ac1c:	beq	3ad78 <Mat_VarDuplicate+0x270>
   3ac20:	ldr	r3, [r4, #16]
   3ac24:	ldr	r9, [r5, #52]	; 0x34
   3ac28:	cmp	r3, #5
   3ac2c:	bne	3ae88 <Mat_VarDuplicate+0x380>
   3ac30:	mov	r0, #28
   3ac34:	bl	1544 <malloc@plt>
   3ac38:	cmp	r0, #0
   3ac3c:	mov	r7, r0
   3ac40:	str	r0, [r9, #16]
   3ac44:	beq	3ad78 <Mat_VarDuplicate+0x270>
   3ac48:	ldr	r6, [r6, #16]
   3ac4c:	ldr	r3, [r6]
   3ac50:	str	r3, [r0]
   3ac54:	ldr	r3, [r6, #8]
   3ac58:	str	r3, [r0, #8]
   3ac5c:	ldr	r9, [r6, #8]
   3ac60:	lsl	r9, r9, #2
   3ac64:	mov	r0, r9
   3ac68:	bl	1544 <malloc@plt>
   3ac6c:	cmp	r0, #0
   3ac70:	str	r0, [r7, #4]
   3ac74:	beq	3ac84 <Mat_VarDuplicate+0x17c>
   3ac78:	mov	r2, r9
   3ac7c:	ldr	r1, [r6, #4]
   3ac80:	bl	1490 <memcpy@plt>
   3ac84:	ldr	r9, [r6, #16]
   3ac88:	str	r9, [r7, #16]
   3ac8c:	lsl	r9, r9, #2
   3ac90:	mov	r0, r9
   3ac94:	bl	1544 <malloc@plt>
   3ac98:	cmp	r0, #0
   3ac9c:	str	r0, [r7, #12]
   3aca0:	beq	3acb0 <Mat_VarDuplicate+0x1a8>
   3aca4:	mov	r2, r9
   3aca8:	ldr	r1, [r6, #12]
   3acac:	bl	1490 <memcpy@plt>
   3acb0:	ldr	r2, [r5, #20]
   3acb4:	ldr	sl, [r6, #20]
   3acb8:	ldr	r3, [r6, #24]
   3acbc:	cmp	r2, #0
   3acc0:	str	sl, [r7, #20]
   3acc4:	beq	3ae44 <Mat_VarDuplicate+0x33c>
   3acc8:	cmp	r3, #0
   3accc:	beq	3ad78 <Mat_VarDuplicate+0x270>
   3acd0:	mov	r0, #8
   3acd4:	bl	1544 <malloc@plt>
   3acd8:	cmp	r0, #0
   3acdc:	mov	r9, r0
   3ace0:	str	r0, [r7, #24]
   3ace4:	beq	3ad78 <Mat_VarDuplicate+0x270>
   3ace8:	ldr	r0, [r4, #8]
   3acec:	ldr	fp, [r6, #24]
   3acf0:	bl	1598 <Mat_SizeOf@plt>
   3acf4:	mul	r0, r0, sl
   3acf8:	bl	1544 <malloc@plt>
   3acfc:	cmp	r0, #0
   3ad00:	mov	r7, r0
   3ad04:	str	r0, [r9]
   3ad08:	beq	3ad34 <Mat_VarDuplicate+0x22c>
   3ad0c:	ldr	r2, [r6, #20]
   3ad10:	ldr	r0, [r4, #8]
   3ad14:	ldr	sl, [fp]
   3ad18:	str	r2, [sp, #4]
   3ad1c:	bl	1598 <Mat_SizeOf@plt>
   3ad20:	ldr	r2, [sp, #4]
   3ad24:	mov	r1, sl
   3ad28:	mul	r2, r0, r2
   3ad2c:	mov	r0, r7
   3ad30:	bl	1490 <memcpy@plt>
   3ad34:	ldr	r7, [r6, #20]
   3ad38:	ldr	r0, [r4, #8]
   3ad3c:	bl	1598 <Mat_SizeOf@plt>
   3ad40:	mul	r0, r0, r7
   3ad44:	bl	1544 <malloc@plt>
   3ad48:	cmp	r0, #0
   3ad4c:	mov	r7, r0
   3ad50:	str	r0, [r9, #4]
   3ad54:	beq	3ad78 <Mat_VarDuplicate+0x270>
   3ad58:	ldr	r9, [fp, #4]
   3ad5c:	ldr	r6, [r6, #20]
   3ad60:	ldr	r0, [r4, #8]
   3ad64:	bl	1598 <Mat_SizeOf@plt>
   3ad68:	mov	r1, r9
   3ad6c:	mul	r2, r0, r6
   3ad70:	mov	r0, r7
   3ad74:	bl	1490 <memcpy@plt>
   3ad78:	ldr	r3, [r4, #40]	; 0x28
   3ad7c:	cmp	r8, #0
   3ad80:	streq	r3, [r5, #40]	; 0x28
   3ad84:	beq	3add0 <Mat_VarDuplicate+0x2c8>
   3ad88:	cmp	r3, #0
   3ad8c:	beq	3add0 <Mat_VarDuplicate+0x2c8>
   3ad90:	ldr	r3, [r4, #16]
   3ad94:	cmp	r3, #2
   3ad98:	bne	3af4c <Mat_VarDuplicate+0x444>
   3ad9c:	ldr	r6, [r4]
   3ada0:	mov	r0, r6
   3ada4:	bl	1544 <malloc@plt>
   3ada8:	cmp	r0, #0
   3adac:	mov	r7, r0
   3adb0:	str	r0, [r5, #40]	; 0x28
   3adb4:	beq	3add0 <Mat_VarDuplicate+0x2c8>
   3adb8:	ldr	r3, [r4, #12]
   3adbc:	cmp	r3, #0
   3adc0:	ldrgt	r9, [r4, #40]	; 0x28
   3adc4:	movgt	r4, #0
   3adc8:	udivgt	r6, r6, r3
   3adcc:	bgt	3af40 <Mat_VarDuplicate+0x438>
   3add0:	mov	r0, r5
   3add4:	add	sp, sp, #12
   3add8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3addc:	ldr	sl, [r6, #4]
   3ade0:	cmp	sl, #0
   3ade4:	beq	3ac04 <Mat_VarDuplicate+0xfc>
   3ade8:	mov	r1, #4
   3adec:	mov	r0, sl
   3adf0:	bl	140c <calloc@plt>
   3adf4:	mov	fp, r0
   3adf8:	str	r0, [r9, #8]
   3adfc:	ldr	r3, [r6, #8]
   3ae00:	ldr	r0, [r3, r7, lsl #2]
   3ae04:	cmp	r0, #0
   3ae08:	beq	3ae14 <Mat_VarDuplicate+0x30c>
   3ae0c:	bl	14cc <strdup@plt>
   3ae10:	str	r0, [fp, r7, lsl #2]
   3ae14:	add	r7, r7, #1
   3ae18:	cmp	sl, r7
   3ae1c:	bne	3adfc <Mat_VarDuplicate+0x2f4>
   3ae20:	b	3ac04 <Mat_VarDuplicate+0xfc>
   3ae24:	mov	r0, #56	; 0x38
   3ae28:	bl	1544 <malloc@plt>
   3ae2c:	cmp	r0, #0
   3ae30:	str	r0, [r9, #12]
   3ae34:	beq	3ac10 <Mat_VarDuplicate+0x108>
   3ae38:	ldr	r1, [r6, #12]
   3ae3c:	bl	15bc <inflateCopy@plt>
   3ae40:	b	3ac10 <Mat_VarDuplicate+0x108>
   3ae44:	cmp	r3, #0
   3ae48:	beq	3ad78 <Mat_VarDuplicate+0x270>
   3ae4c:	ldr	r0, [r4, #8]
   3ae50:	bl	1598 <Mat_SizeOf@plt>
   3ae54:	mul	r0, r0, sl
   3ae58:	bl	1544 <malloc@plt>
   3ae5c:	cmp	r0, #0
   3ae60:	mov	r9, r0
   3ae64:	str	r0, [r7, #24]
   3ae68:	beq	3ad78 <Mat_VarDuplicate+0x270>
   3ae6c:	ldrd	r6, [r6, #20]
   3ae70:	ldr	r0, [r4, #8]
   3ae74:	bl	1598 <Mat_SizeOf@plt>
   3ae78:	mul	r2, r0, r6
   3ae7c:	mov	r1, r7
   3ae80:	mov	r0, r9
   3ae84:	b	3ad74 <Mat_VarDuplicate+0x26c>
   3ae88:	ldr	r3, [r5, #20]
   3ae8c:	cmp	r3, #0
   3ae90:	beq	3aef8 <Mat_VarDuplicate+0x3f0>
   3ae94:	mov	r0, #8
   3ae98:	bl	1544 <malloc@plt>
   3ae9c:	cmp	r0, #0
   3aea0:	mov	r7, r0
   3aea4:	str	r0, [r9, #16]
   3aea8:	beq	3ad78 <Mat_VarDuplicate+0x270>
   3aeac:	ldr	r9, [r5]
   3aeb0:	ldr	r6, [r6, #16]
   3aeb4:	mov	r0, r9
   3aeb8:	bl	1544 <malloc@plt>
   3aebc:	cmp	r0, #0
   3aec0:	str	r0, [r7]
   3aec4:	beq	3aed4 <Mat_VarDuplicate+0x3cc>
   3aec8:	mov	r2, r9
   3aecc:	ldr	r1, [r6]
   3aed0:	bl	1490 <memcpy@plt>
   3aed4:	ldr	r9, [r5]
   3aed8:	mov	r0, r9
   3aedc:	bl	1544 <malloc@plt>
   3aee0:	cmp	r0, #0
   3aee4:	str	r0, [r7, #4]
   3aee8:	beq	3ad78 <Mat_VarDuplicate+0x270>
   3aeec:	mov	r2, r9
   3aef0:	ldr	r1, [r6, #4]
   3aef4:	b	3ad74 <Mat_VarDuplicate+0x26c>
   3aef8:	ldr	r7, [r4]
   3aefc:	mov	r0, r7
   3af00:	bl	1544 <malloc@plt>
   3af04:	cmp	r0, #0
   3af08:	str	r0, [r9, #16]
   3af0c:	movne	r2, r7
   3af10:	ldrne	r1, [r6, #16]
   3af14:	bne	3ad74 <Mat_VarDuplicate+0x26c>
   3af18:	b	3ad78 <Mat_VarDuplicate+0x270>
   3af1c:	mov	r0, r9
   3af20:	bl	1478 <free@plt>
   3af24:	str	r6, [r5, #52]	; 0x34
   3af28:	b	3ad78 <Mat_VarDuplicate+0x270>
   3af2c:	mov	r1, r8
   3af30:	ldr	r0, [r9, r4, lsl #2]
   3af34:	bl	3ab08 <Mat_VarDuplicate>
   3af38:	str	r0, [r7, r4, lsl #2]
   3af3c:	add	r4, r4, #1
   3af40:	cmp	r4, r6
   3af44:	bne	3af2c <Mat_VarDuplicate+0x424>
   3af48:	b	3add0 <Mat_VarDuplicate+0x2c8>
   3af4c:	cmp	r3, #1
   3af50:	bne	3afa8 <Mat_VarDuplicate+0x4a0>
   3af54:	ldr	r6, [r4]
   3af58:	mov	r0, r6
   3af5c:	bl	1544 <malloc@plt>
   3af60:	cmp	r0, #0
   3af64:	mov	r7, r0
   3af68:	str	r0, [r5, #40]	; 0x28
   3af6c:	beq	3add0 <Mat_VarDuplicate+0x2c8>
   3af70:	ldr	r3, [r4, #12]
   3af74:	cmp	r3, #0
   3af78:	ldrgt	r9, [r4, #40]	; 0x28
   3af7c:	movgt	r4, #0
   3af80:	udivgt	r6, r6, r3
   3af84:	ble	3add0 <Mat_VarDuplicate+0x2c8>
   3af88:	cmp	r4, r6
   3af8c:	beq	3add0 <Mat_VarDuplicate+0x2c8>
   3af90:	mov	r1, r8
   3af94:	ldr	r0, [r9, r4, lsl #2]
   3af98:	bl	3ab08 <Mat_VarDuplicate>
   3af9c:	str	r0, [r7, r4, lsl #2]
   3afa0:	add	r4, r4, #1
   3afa4:	b	3af88 <Mat_VarDuplicate+0x480>
   3afa8:	cmp	r3, #5
   3afac:	bne	3b144 <Mat_VarDuplicate+0x63c>
   3afb0:	mov	r0, #28
   3afb4:	bl	1544 <malloc@plt>
   3afb8:	cmp	r0, #0
   3afbc:	mov	r7, r0
   3afc0:	str	r0, [r5, #40]	; 0x28
   3afc4:	beq	3add0 <Mat_VarDuplicate+0x2c8>
   3afc8:	ldr	r6, [r4, #40]	; 0x28
   3afcc:	ldr	r3, [r6]
   3afd0:	str	r3, [r0]
   3afd4:	ldr	r3, [r6, #8]
   3afd8:	str	r3, [r0, #8]
   3afdc:	ldr	r8, [r6, #8]
   3afe0:	lsl	r8, r8, #2
   3afe4:	mov	r0, r8
   3afe8:	bl	1544 <malloc@plt>
   3afec:	cmp	r0, #0
   3aff0:	str	r0, [r7, #4]
   3aff4:	beq	3b004 <Mat_VarDuplicate+0x4fc>
   3aff8:	mov	r2, r8
   3affc:	ldr	r1, [r6, #4]
   3b000:	bl	1490 <memcpy@plt>
   3b004:	ldr	r8, [r6, #16]
   3b008:	str	r8, [r7, #16]
   3b00c:	lsl	r8, r8, #2
   3b010:	mov	r0, r8
   3b014:	bl	1544 <malloc@plt>
   3b018:	cmp	r0, #0
   3b01c:	str	r0, [r7, #12]
   3b020:	beq	3b030 <Mat_VarDuplicate+0x528>
   3b024:	mov	r2, r8
   3b028:	ldr	r1, [r6, #12]
   3b02c:	bl	1490 <memcpy@plt>
   3b030:	ldr	r2, [r5, #20]
   3b034:	ldr	r9, [r6, #20]
   3b038:	ldr	r3, [r6, #24]
   3b03c:	cmp	r2, #0
   3b040:	str	r9, [r7, #20]
   3b044:	beq	3b0f4 <Mat_VarDuplicate+0x5ec>
   3b048:	cmp	r3, #0
   3b04c:	beq	3b138 <Mat_VarDuplicate+0x630>
   3b050:	mov	r0, #8
   3b054:	bl	1544 <malloc@plt>
   3b058:	cmp	r0, #0
   3b05c:	mov	r8, r0
   3b060:	str	r0, [r7, #24]
   3b064:	beq	3add0 <Mat_VarDuplicate+0x2c8>
   3b068:	ldr	r0, [r4, #8]
   3b06c:	ldr	sl, [r6, #24]
   3b070:	bl	1598 <Mat_SizeOf@plt>
   3b074:	mul	r0, r0, r9
   3b078:	bl	1544 <malloc@plt>
   3b07c:	cmp	r0, #0
   3b080:	mov	r7, r0
   3b084:	str	r0, [r8]
   3b088:	beq	3b0ac <Mat_VarDuplicate+0x5a4>
   3b08c:	ldr	r9, [sl]
   3b090:	ldr	fp, [r6, #20]
   3b094:	ldr	r0, [r4, #8]
   3b098:	bl	1598 <Mat_SizeOf@plt>
   3b09c:	mov	r1, r9
   3b0a0:	mul	r2, r0, fp
   3b0a4:	mov	r0, r7
   3b0a8:	bl	1490 <memcpy@plt>
   3b0ac:	ldr	r7, [r6, #20]
   3b0b0:	ldr	r0, [r4, #8]
   3b0b4:	bl	1598 <Mat_SizeOf@plt>
   3b0b8:	mul	r0, r0, r7
   3b0bc:	bl	1544 <malloc@plt>
   3b0c0:	cmp	r0, #0
   3b0c4:	mov	r7, r0
   3b0c8:	str	r0, [r8, #4]
   3b0cc:	beq	3add0 <Mat_VarDuplicate+0x2c8>
   3b0d0:	ldr	r8, [sl, #4]
   3b0d4:	ldr	r6, [r6, #20]
   3b0d8:	ldr	r0, [r4, #8]
   3b0dc:	bl	1598 <Mat_SizeOf@plt>
   3b0e0:	mov	r1, r8
   3b0e4:	mul	r2, r0, r6
   3b0e8:	mov	r0, r7
   3b0ec:	bl	1490 <memcpy@plt>
   3b0f0:	b	3add0 <Mat_VarDuplicate+0x2c8>
   3b0f4:	cmp	r3, #0
   3b0f8:	beq	3b138 <Mat_VarDuplicate+0x630>
   3b0fc:	ldr	r0, [r4, #8]
   3b100:	bl	1598 <Mat_SizeOf@plt>
   3b104:	mul	r0, r0, r9
   3b108:	bl	1544 <malloc@plt>
   3b10c:	cmp	r0, #0
   3b110:	mov	r8, r0
   3b114:	str	r0, [r7, #24]
   3b118:	beq	3add0 <Mat_VarDuplicate+0x2c8>
   3b11c:	ldrd	r6, [r6, #20]
   3b120:	ldr	r0, [r4, #8]
   3b124:	bl	1598 <Mat_SizeOf@plt>
   3b128:	mul	r2, r0, r6
   3b12c:	mov	r1, r7
   3b130:	mov	r0, r8
   3b134:	b	3b0ec <Mat_VarDuplicate+0x5e4>
   3b138:	mov	r3, #0
   3b13c:	str	r3, [r7, #24]
   3b140:	b	3add0 <Mat_VarDuplicate+0x2c8>
   3b144:	ldr	r3, [r5, #20]
   3b148:	cmp	r3, #0
   3b14c:	beq	3b1b4 <Mat_VarDuplicate+0x6ac>
   3b150:	mov	r0, #8
   3b154:	bl	1544 <malloc@plt>
   3b158:	cmp	r0, #0
   3b15c:	mov	r6, r0
   3b160:	str	r0, [r5, #40]	; 0x28
   3b164:	beq	3add0 <Mat_VarDuplicate+0x2c8>
   3b168:	ldr	r7, [r5]
   3b16c:	ldr	r4, [r4, #40]	; 0x28
   3b170:	mov	r0, r7
   3b174:	bl	1544 <malloc@plt>
   3b178:	cmp	r0, #0
   3b17c:	str	r0, [r6]
   3b180:	beq	3b190 <Mat_VarDuplicate+0x688>
   3b184:	mov	r2, r7
   3b188:	ldr	r1, [r4]
   3b18c:	bl	1490 <memcpy@plt>
   3b190:	ldr	r7, [r5]
   3b194:	mov	r0, r7
   3b198:	bl	1544 <malloc@plt>
   3b19c:	cmp	r0, #0
   3b1a0:	str	r0, [r6, #4]
   3b1a4:	movne	r2, r7
   3b1a8:	ldrne	r1, [r4, #4]
   3b1ac:	bne	3b0ec <Mat_VarDuplicate+0x5e4>
   3b1b0:	b	3add0 <Mat_VarDuplicate+0x2c8>
   3b1b4:	ldr	r6, [r4]
   3b1b8:	mov	r0, r6
   3b1bc:	bl	1544 <malloc@plt>
   3b1c0:	cmp	r0, #0
   3b1c4:	str	r0, [r5, #40]	; 0x28
   3b1c8:	beq	3add0 <Mat_VarDuplicate+0x2c8>
   3b1cc:	mov	r2, r6
   3b1d0:	ldr	r1, [r4, #40]	; 0x28
   3b1d4:	b	3b0ec <Mat_VarDuplicate+0x5e4>

0003b1d8 <Mat_VarFree>:
   3b1d8:	mov	r3, #0
   3b1dc:	push	{r0, r1, r4, r5, r6, lr}
   3b1e0:	subs	r4, r0, #0
   3b1e4:	str	r3, [sp]
   3b1e8:	beq	3b4d4 <Mat_VarFree+0x2fc>
   3b1ec:	ldr	r3, [r4, #32]
   3b1f0:	cmp	r3, #0
   3b1f4:	beq	3b210 <Mat_VarFree+0x38>
   3b1f8:	mov	r3, #1
   3b1fc:	mov	r1, sp
   3b200:	str	r3, [sp]
   3b204:	bl	3a864 <SafeMulDims>
   3b208:	ldr	r0, [r4, #32]
   3b20c:	bl	1478 <free@plt>
   3b210:	ldr	r5, [r4, #40]	; 0x28
   3b214:	cmp	r5, #0
   3b218:	beq	3b2c4 <Mat_VarFree+0xec>
   3b21c:	ldr	r3, [r4, #16]
   3b220:	sub	r3, r3, #1
   3b224:	cmp	r3, #15
   3b228:	addls	pc, pc, r3, lsl #2
   3b22c:	b	3b2c4 <Mat_VarFree+0xec>
   3b230:	b	3b2b8 <Mat_VarFree+0xe0>
   3b234:	b	3b270 <Mat_VarFree+0x98>
   3b238:	b	3b2c4 <Mat_VarFree+0xec>
   3b23c:	b	3b3ec <Mat_VarFree+0x214>
   3b240:	b	3b37c <Mat_VarFree+0x1a4>
   3b244:	b	3b3ec <Mat_VarFree+0x214>
   3b248:	b	3b3ec <Mat_VarFree+0x214>
   3b24c:	b	3b3ec <Mat_VarFree+0x214>
   3b250:	b	3b3ec <Mat_VarFree+0x214>
   3b254:	b	3b3ec <Mat_VarFree+0x214>
   3b258:	b	3b3ec <Mat_VarFree+0x214>
   3b25c:	b	3b3ec <Mat_VarFree+0x214>
   3b260:	b	3b3ec <Mat_VarFree+0x214>
   3b264:	b	3b3ec <Mat_VarFree+0x214>
   3b268:	b	3b3ec <Mat_VarFree+0x214>
   3b26c:	b	3b414 <Mat_VarFree+0x23c>
   3b270:	ldr	r6, [r4, #44]	; 0x2c
   3b274:	cmp	r6, #0
   3b278:	bne	3b2c4 <Mat_VarFree+0xec>
   3b27c:	ldr	r3, [r4, #52]	; 0x34
   3b280:	add	r0, sp, #4
   3b284:	ldr	r1, [sp]
   3b288:	ldr	r2, [r3, #4]
   3b28c:	bl	3a8c4 <SafeMul>
   3b290:	ldr	r3, [sp, #4]
   3b294:	cmp	r3, r6
   3b298:	bhi	3b2a8 <Mat_VarFree+0xd0>
   3b29c:	ldr	r0, [r4, #40]	; 0x28
   3b2a0:	bl	1478 <free@plt>
   3b2a4:	b	3b2c4 <Mat_VarFree+0xec>
   3b2a8:	ldr	r0, [r5, r6, lsl #2]
   3b2ac:	add	r6, r6, #1
   3b2b0:	bl	3b1d8 <Mat_VarFree>
   3b2b4:	b	3b290 <Mat_VarFree+0xb8>
   3b2b8:	ldr	r6, [r4, #44]	; 0x2c
   3b2bc:	cmp	r6, #0
   3b2c0:	beq	3b36c <Mat_VarFree+0x194>
   3b2c4:	ldr	r3, [r4, #52]	; 0x34
   3b2c8:	cmp	r3, #0
   3b2cc:	beq	3b460 <Mat_VarFree+0x288>
   3b2d0:	ldr	r2, [r4, #48]	; 0x30
   3b2d4:	cmp	r2, #1
   3b2d8:	bne	3b434 <Mat_VarFree+0x25c>
   3b2dc:	ldr	r0, [r3, #12]
   3b2e0:	bl	15b0 <inflateEnd@plt>
   3b2e4:	ldr	r3, [r4, #52]	; 0x34
   3b2e8:	ldr	r0, [r3, #12]
   3b2ec:	bl	1478 <free@plt>
   3b2f0:	ldr	r3, [r4, #52]	; 0x34
   3b2f4:	ldr	r5, [r3, #16]
   3b2f8:	cmp	r5, #0
   3b2fc:	beq	3b434 <Mat_VarFree+0x25c>
   3b300:	ldr	r3, [r4, #16]
   3b304:	cmp	r3, #5
   3b308:	bne	3b480 <Mat_VarFree+0x2a8>
   3b30c:	ldr	r0, [r5, #4]
   3b310:	cmp	r0, #0
   3b314:	beq	3b31c <Mat_VarFree+0x144>
   3b318:	bl	1478 <free@plt>
   3b31c:	ldr	r0, [r5, #12]
   3b320:	cmp	r0, #0
   3b324:	beq	3b32c <Mat_VarFree+0x154>
   3b328:	bl	1478 <free@plt>
   3b32c:	ldr	r3, [r4, #20]
   3b330:	ldr	r6, [r5, #24]
   3b334:	cmp	r3, #0
   3b338:	beq	3b424 <Mat_VarFree+0x24c>
   3b33c:	cmp	r6, #0
   3b340:	beq	3b42c <Mat_VarFree+0x254>
   3b344:	ldr	r0, [r6]
   3b348:	bl	1478 <free@plt>
   3b34c:	ldr	r0, [r6, #4]
   3b350:	bl	1478 <free@plt>
   3b354:	mov	r0, r6
   3b358:	bl	1478 <free@plt>
   3b35c:	b	3b42c <Mat_VarFree+0x254>
   3b360:	ldr	r0, [r5, r6, lsl #2]
   3b364:	add	r6, r6, #1
   3b368:	bl	3b1d8 <Mat_VarFree>
   3b36c:	ldr	r3, [sp]
   3b370:	cmp	r3, r6
   3b374:	bhi	3b360 <Mat_VarFree+0x188>
   3b378:	b	3b29c <Mat_VarFree+0xc4>
   3b37c:	ldr	r3, [r4, #44]	; 0x2c
   3b380:	cmp	r3, #0
   3b384:	bne	3b2c4 <Mat_VarFree+0xec>
   3b388:	ldr	r0, [r5, #4]
   3b38c:	cmp	r0, #0
   3b390:	beq	3b398 <Mat_VarFree+0x1c0>
   3b394:	bl	1478 <free@plt>
   3b398:	ldr	r0, [r5, #12]
   3b39c:	cmp	r0, #0
   3b3a0:	beq	3b3a8 <Mat_VarFree+0x1d0>
   3b3a4:	bl	1478 <free@plt>
   3b3a8:	ldr	r3, [r4, #20]
   3b3ac:	ldr	r6, [r5, #24]
   3b3b0:	cmp	r3, #0
   3b3b4:	beq	3b3dc <Mat_VarFree+0x204>
   3b3b8:	cmp	r6, #0
   3b3bc:	beq	3b3e4 <Mat_VarFree+0x20c>
   3b3c0:	ldr	r0, [r6]
   3b3c4:	bl	1478 <free@plt>
   3b3c8:	ldr	r0, [r6, #4]
   3b3cc:	bl	1478 <free@plt>
   3b3d0:	mov	r0, r6
   3b3d4:	bl	1478 <free@plt>
   3b3d8:	b	3b3e4 <Mat_VarFree+0x20c>
   3b3dc:	cmp	r6, #0
   3b3e0:	bne	3b3d0 <Mat_VarFree+0x1f8>
   3b3e4:	mov	r0, r5
   3b3e8:	b	3b2a0 <Mat_VarFree+0xc8>
   3b3ec:	ldr	r3, [r4, #44]	; 0x2c
   3b3f0:	cmp	r3, #0
   3b3f4:	bne	3b2c4 <Mat_VarFree+0xec>
   3b3f8:	ldr	r3, [r4, #20]
   3b3fc:	cmp	r3, #0
   3b400:	beq	3b3e4 <Mat_VarFree+0x20c>
   3b404:	ldr	r0, [r5]
   3b408:	bl	1478 <free@plt>
   3b40c:	ldr	r0, [r5, #4]
   3b410:	b	3b3d4 <Mat_VarFree+0x1fc>
   3b414:	ldr	r3, [r4, #44]	; 0x2c
   3b418:	cmp	r3, #0
   3b41c:	bne	3b2c4 <Mat_VarFree+0xec>
   3b420:	b	3b3e4 <Mat_VarFree+0x20c>
   3b424:	cmp	r6, #0
   3b428:	bne	3b354 <Mat_VarFree+0x17c>
   3b42c:	mov	r0, r5
   3b430:	bl	1478 <free@plt>
   3b434:	ldr	r3, [r4, #52]	; 0x34
   3b438:	ldr	r2, [r3, #8]
   3b43c:	cmp	r2, #0
   3b440:	beq	3b450 <Mat_VarFree+0x278>
   3b444:	ldr	r3, [r3, #4]
   3b448:	cmp	r3, #0
   3b44c:	bne	3b4cc <Mat_VarFree+0x2f4>
   3b450:	ldr	r0, [r4, #52]	; 0x34
   3b454:	bl	1478 <free@plt>
   3b458:	mov	r3, #0
   3b45c:	str	r3, [r4, #52]	; 0x34
   3b460:	ldr	r0, [r4, #36]	; 0x24
   3b464:	cmp	r0, #0
   3b468:	beq	3b470 <Mat_VarFree+0x298>
   3b46c:	bl	1478 <free@plt>
   3b470:	mov	r0, r4
   3b474:	add	sp, sp, #8
   3b478:	pop	{r4, r5, r6, lr}
   3b47c:	b	1478 <free@plt>
   3b480:	ldr	r3, [r4, #20]
   3b484:	cmp	r3, #0
   3b488:	beq	3b42c <Mat_VarFree+0x254>
   3b48c:	ldr	r0, [r5]
   3b490:	bl	1478 <free@plt>
   3b494:	ldr	r0, [r5, #4]
   3b498:	b	3b358 <Mat_VarFree+0x180>
   3b49c:	ldr	r0, [r0, r5, lsl #2]
   3b4a0:	cmp	r0, #0
   3b4a4:	beq	3b4ac <Mat_VarFree+0x2d4>
   3b4a8:	bl	1478 <free@plt>
   3b4ac:	add	r5, r5, #1
   3b4b0:	ldr	r3, [r4, #52]	; 0x34
   3b4b4:	ldr	r0, [r3, #8]
   3b4b8:	ldr	r3, [r3, #4]
   3b4bc:	cmp	r3, r5
   3b4c0:	bhi	3b49c <Mat_VarFree+0x2c4>
   3b4c4:	bl	1478 <free@plt>
   3b4c8:	b	3b450 <Mat_VarFree+0x278>
   3b4cc:	mov	r5, #0
   3b4d0:	b	3b4b0 <Mat_VarFree+0x2d8>
   3b4d4:	add	sp, sp, #8
   3b4d8:	pop	{r4, r5, r6, pc}

0003b4dc <Mat_Open>:
   3b4dc:	tst	r1, #1
   3b4e0:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3b4e4:	mov	r8, r0
   3b4e8:	mov	r9, r1
   3b4ec:	bne	3b514 <Mat_Open+0x38>
   3b4f0:	ldr	r1, [pc, #784]	; 3b808 <Mat_Open+0x32c>
   3b4f4:	add	r1, pc, r1
   3b4f8:	bl	1454 <fopen@plt>
   3b4fc:	subs	r4, r0, #0
   3b500:	movne	r6, r4
   3b504:	bne	3b540 <Mat_Open+0x64>
   3b508:	mov	r0, r4
   3b50c:	add	sp, sp, #12
   3b510:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3b514:	ldr	r1, [pc, #752]	; 3b80c <Mat_Open+0x330>
   3b518:	add	r1, pc, r1
   3b51c:	bl	1454 <fopen@plt>
   3b520:	subs	r6, r0, #0
   3b524:	bne	3b540 <Mat_Open+0x64>
   3b528:	bic	r2, r9, #1
   3b52c:	mov	r1, r6
   3b530:	mov	r0, r8
   3b534:	bl	164c <Mat_CreateVer@plt>
   3b538:	mov	r4, r0
   3b53c:	b	3b508 <Mat_Open+0x2c>
   3b540:	mov	r0, #44	; 0x2c
   3b544:	bl	1544 <malloc@plt>
   3b548:	subs	r4, r0, #0
   3b54c:	bne	3b568 <Mat_Open+0x8c>
   3b550:	mov	r0, r6
   3b554:	bl	1634 <fclose@plt>
   3b558:	ldr	r0, [pc, #688]	; 3b810 <Mat_Open+0x334>
   3b55c:	add	r0, pc, r0
   3b560:	bl	161c <Mat_Critical@plt>
   3b564:	b	3b508 <Mat_Open+0x2c>
   3b568:	mov	r1, #1
   3b56c:	mov	r0, #128	; 0x80
   3b570:	str	r6, [r4]
   3b574:	bl	140c <calloc@plt>
   3b578:	cmp	r0, #0
   3b57c:	mov	r5, r0
   3b580:	str	r0, [r4, #4]
   3b584:	bne	3b5ac <Mat_Open+0xd0>
   3b588:	mov	r0, r4
   3b58c:	bl	1478 <free@plt>
   3b590:	mov	r0, r6
   3b594:	bl	1634 <fclose@plt>
   3b598:	ldr	r0, [pc, #628]	; 3b814 <Mat_Open+0x338>
   3b59c:	add	r0, pc, r0
   3b5a0:	bl	161c <Mat_Critical@plt>
   3b5a4:	mov	r4, r5
   3b5a8:	b	3b508 <Mat_Open+0x2c>
   3b5ac:	mov	r1, #1
   3b5b0:	mov	r0, #8
   3b5b4:	bl	140c <calloc@plt>
   3b5b8:	cmp	r0, #0
   3b5bc:	mov	r7, r0
   3b5c0:	str	r0, [r4, #8]
   3b5c4:	bne	3b5f4 <Mat_Open+0x118>
   3b5c8:	mov	r0, r5
   3b5cc:	bl	1478 <free@plt>
   3b5d0:	mov	r0, r4
   3b5d4:	bl	1478 <free@plt>
   3b5d8:	mov	r0, r6
   3b5dc:	bl	1634 <fclose@plt>
   3b5e0:	ldr	r0, [pc, #560]	; 3b818 <Mat_Open+0x33c>
   3b5e4:	add	r0, pc, r0
   3b5e8:	bl	161c <Mat_Critical@plt>
   3b5ec:	mov	r4, r7
   3b5f0:	b	3b508 <Mat_Open+0x2c>
   3b5f4:	mov	r7, #0
   3b5f8:	mov	r3, r6
   3b5fc:	mov	r2, #116	; 0x74
   3b600:	mov	r1, #1
   3b604:	mov	r0, r5
   3b608:	str	r7, [r4, #12]
   3b60c:	add	sl, sp, #6
   3b610:	str	r7, [r4, #16]
   3b614:	str	r7, [r4, #20]
   3b618:	str	r7, [r4, #36]	; 0x24
   3b61c:	str	r7, [r4, #40]	; 0x28
   3b620:	bl	1520 <fread@plt>
   3b624:	ldr	r3, [r4, #4]
   3b628:	mov	r5, r0
   3b62c:	mov	r2, #8
   3b630:	mov	r1, #1
   3b634:	strb	r7, [r3, #116]	; 0x74
   3b638:	mov	r3, r6
   3b63c:	ldr	r0, [r4, #8]
   3b640:	bl	1520 <fread@plt>
   3b644:	add	r5, r5, r0
   3b648:	mov	r3, r6
   3b64c:	mov	r2, #1
   3b650:	mov	r1, #2
   3b654:	mov	r0, sl
   3b658:	bl	1520 <fread@plt>
   3b65c:	mov	fp, r0
   3b660:	mov	r3, r6
   3b664:	mov	r2, #2
   3b668:	mov	r1, #1
   3b66c:	add	r0, sp, #4
   3b670:	bl	1520 <fread@plt>
   3b674:	add	r5, r0, r5
   3b678:	add	r5, r5, fp, lsl #1
   3b67c:	cmp	r5, #128	; 0x80
   3b680:	bne	3b728 <Mat_Open+0x24c>
   3b684:	mvn	r3, #0
   3b688:	movw	r2, #19785	; 0x4d49
   3b68c:	str	r3, [r4, #20]
   3b690:	ldrsh	r3, [sp, #4]
   3b694:	cmp	r3, r2
   3b698:	streq	r7, [r4, #20]
   3b69c:	beq	3b6bc <Mat_Open+0x1e0>
   3b6a0:	movw	r2, #18765	; 0x494d
   3b6a4:	cmp	r3, r2
   3b6a8:	bne	3b6bc <Mat_Open+0x1e0>
   3b6ac:	mov	r3, #1
   3b6b0:	mov	r0, sl
   3b6b4:	str	r3, [r4, #20]
   3b6b8:	bl	18fc <Mat_int16Swap>
   3b6bc:	ldrsh	r7, [sp, #6]
   3b6c0:	str	r7, [r4, #16]
   3b6c4:	sub	r7, r7, #256	; 0x100
   3b6c8:	bic	r7, r7, #256	; 0x100
   3b6cc:	uxth	r7, r7
   3b6d0:	cmp	r7, #0
   3b6d4:	bne	3b734 <Mat_Open+0x258>
   3b6d8:	ldr	r3, [r4, #20]
   3b6dc:	cmn	r3, #1
   3b6e0:	beq	3b734 <Mat_Open+0x258>
   3b6e4:	ldr	r0, [r4]
   3b6e8:	bl	14b4 <ftell@plt>
   3b6ec:	cmn	r0, #1
   3b6f0:	str	r0, [r4, #28]
   3b6f4:	strne	r7, [r4, #32]
   3b6f8:	bne	3b728 <Mat_Open+0x24c>
   3b6fc:	ldr	r0, [r4, #4]
   3b700:	bl	1478 <free@plt>
   3b704:	ldr	r0, [r4, #8]
   3b708:	bl	1478 <free@plt>
   3b70c:	mov	r0, r4
   3b710:	bl	1478 <free@plt>
   3b714:	mov	r0, r6
   3b718:	bl	1634 <fclose@plt>
   3b71c:	ldr	r0, [pc, #248]	; 3b81c <Mat_Open+0x340>
   3b720:	add	r0, pc, r0
   3b724:	b	3b5e8 <Mat_Open+0x10c>
   3b728:	ldr	r3, [r4, #16]
   3b72c:	cmp	r3, #0
   3b730:	bne	3b7b8 <Mat_Open+0x2dc>
   3b734:	ldr	r0, [r4, #4]
   3b738:	mov	r7, #0
   3b73c:	bl	1478 <free@plt>
   3b740:	ldr	r0, [r4, #8]
   3b744:	bl	1478 <free@plt>
   3b748:	mov	r3, #16
   3b74c:	mov	r0, r4
   3b750:	strd	r6, [r4]
   3b754:	str	r7, [r4, #8]
   3b758:	str	r3, [r4, #16]
   3b75c:	str	r7, [r4, #20]
   3b760:	str	r9, [r4, #24]
   3b764:	str	r7, [r4, #28]
   3b768:	str	r7, [r4, #32]
   3b76c:	bl	15ec <Mat_Rewind@plt>
   3b770:	mov	r0, r4
   3b774:	bl	3a1f8 <Mat_VarReadNextInfo4>
   3b778:	subs	r5, r5, r7
   3b77c:	movne	r5, #1
   3b780:	cmp	r0, r7
   3b784:	movne	r5, r7
   3b788:	cmp	r5, r7
   3b78c:	beq	3b7ac <Mat_Open+0x2d0>
   3b790:	mov	r0, r4
   3b794:	bl	1610 <Mat_Close@plt>
   3b798:	ldr	r0, [pc, #128]	; 3b820 <Mat_Open+0x344>
   3b79c:	mov	r1, r8
   3b7a0:	add	r0, pc, r0
   3b7a4:	bl	161c <Mat_Critical@plt>
   3b7a8:	b	3b5ec <Mat_Open+0x110>
   3b7ac:	bl	158c <Mat_VarFree@plt>
   3b7b0:	mov	r0, r4
   3b7b4:	bl	15ec <Mat_Rewind@plt>
   3b7b8:	ldr	r0, [pc, #100]	; 3b824 <Mat_Open+0x348>
   3b7bc:	mov	r1, r8
   3b7c0:	add	r0, pc, r0
   3b7c4:	bl	1bfc <strdup_printf>
   3b7c8:	ldr	r3, [r4, #16]
   3b7cc:	str	r0, [r4, #12]
   3b7d0:	str	r9, [r4, #24]
   3b7d4:	cmp	r3, #512	; 0x200
   3b7d8:	bne	3b508 <Mat_Open+0x2c>
   3b7dc:	mov	r5, #0
   3b7e0:	ldr	r0, [r4]
   3b7e4:	bl	1634 <fclose@plt>
   3b7e8:	mov	r0, r4
   3b7ec:	str	r5, [r4]
   3b7f0:	bl	1610 <Mat_Close@plt>
   3b7f4:	ldr	r0, [pc, #44]	; 3b828 <Mat_Open+0x34c>
   3b7f8:	mov	r1, r8
   3b7fc:	add	r0, pc, r0
   3b800:	bl	161c <Mat_Critical@plt>
   3b804:	b	3b5a4 <Mat_Open+0xc8>
   3b808:	.word	0x00003c68
   3b80c:	.word	0x00003cce
   3b810:	.word	0x00003ad1
   3b814:	.word	0x00003c4e
   3b818:	.word	0x00003c37
   3b81c:	.word	0x000034c5
   3b820:	.word	0x00003ab3
   3b824:	.word	0x00003ba3
   3b828:	.word	0x00003a81

0003b82c <Mat_VarCreate>:
   3b82c:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3b830:	mov	ip, #1
   3b834:	ldr	sl, [sp, #48]	; 0x30
   3b838:	str	ip, [sp, #4]
   3b83c:	ldr	r5, [sp, #52]	; 0x34
   3b840:	ldr	r8, [sp, #56]	; 0x38
   3b844:	cmp	sl, #0
   3b848:	bne	3b85c <Mat_VarCreate+0x30>
   3b84c:	mov	r4, #0
   3b850:	mov	r0, r4
   3b854:	add	sp, sp, #12
   3b858:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3b85c:	mov	r7, r3
   3b860:	mov	r6, r2
   3b864:	mov	r9, r1
   3b868:	mov	fp, r0
   3b86c:	bl	1508 <Mat_VarCalloc@plt>
   3b870:	subs	r4, r0, #0
   3b874:	beq	3b84c <Mat_VarCreate+0x20>
   3b878:	mov	r3, #0
   3b87c:	cmp	fp, #0
   3b880:	str	r3, [r4, #48]	; 0x30
   3b884:	and	r3, r8, #2048	; 0x800
   3b888:	str	r3, [r4, #20]
   3b88c:	and	r3, r8, #1024	; 0x400
   3b890:	str	r3, [r4, #24]
   3b894:	and	r3, r8, #512	; 0x200
   3b898:	str	r3, [r4, #28]
   3b89c:	beq	3b8b4 <Mat_VarCreate+0x88>
   3b8a0:	ldr	r0, [pc, #988]	; 3bc84 <Mat_VarCreate+0x458>
   3b8a4:	mov	r1, fp
   3b8a8:	add	r0, pc, r0
   3b8ac:	bl	1bfc <strdup_printf>
   3b8b0:	str	r0, [r4, #36]	; 0x24
   3b8b4:	lsl	r0, r7, #2
   3b8b8:	str	r7, [r4, #4]
   3b8bc:	bl	1544 <malloc@plt>
   3b8c0:	ldr	r2, [sp, #4]
   3b8c4:	mov	r1, #0
   3b8c8:	mov	r3, r1
   3b8cc:	str	r0, [r4, #32]
   3b8d0:	ldr	ip, [r4, #4]
   3b8d4:	cmp	ip, r3
   3b8d8:	bgt	3b954 <Mat_VarCreate+0x128>
   3b8dc:	cmp	r1, #0
   3b8e0:	str	r6, [r4, #8]
   3b8e4:	sub	r6, r6, #1
   3b8e8:	str	r9, [r4, #16]
   3b8ec:	strne	r2, [sp, #4]
   3b8f0:	cmp	r6, #21
   3b8f4:	addls	pc, pc, r6, lsl #2
   3b8f8:	b	3ba24 <Mat_VarCreate+0x1f8>
   3b8fc:	b	3ba3c <Mat_VarCreate+0x210>
   3b900:	b	3ba3c <Mat_VarCreate+0x210>
   3b904:	b	3b96c <Mat_VarCreate+0x140>
   3b908:	b	3b96c <Mat_VarCreate+0x140>
   3b90c:	b	3b9a8 <Mat_VarCreate+0x17c>
   3b910:	b	3b9a8 <Mat_VarCreate+0x17c>
   3b914:	b	3b9a8 <Mat_VarCreate+0x17c>
   3b918:	b	3ba24 <Mat_VarCreate+0x1f8>
   3b91c:	b	3ba44 <Mat_VarCreate+0x218>
   3b920:	b	3ba24 <Mat_VarCreate+0x1f8>
   3b924:	b	3ba24 <Mat_VarCreate+0x1f8>
   3b928:	b	3ba44 <Mat_VarCreate+0x218>
   3b92c:	b	3ba44 <Mat_VarCreate+0x218>
   3b930:	b	3ba24 <Mat_VarCreate+0x1f8>
   3b934:	b	3ba24 <Mat_VarCreate+0x1f8>
   3b938:	b	3ba3c <Mat_VarCreate+0x210>
   3b93c:	b	3b96c <Mat_VarCreate+0x140>
   3b940:	b	3b9a8 <Mat_VarCreate+0x17c>
   3b944:	b	3ba24 <Mat_VarCreate+0x1f8>
   3b948:	b	3ba24 <Mat_VarCreate+0x1f8>
   3b94c:	b	3b9a8 <Mat_VarCreate+0x17c>
   3b950:	b	3b99c <Mat_VarCreate+0x170>
   3b954:	ldr	r1, [sl, r3, lsl #2]
   3b958:	mul	r2, r1, r2
   3b95c:	str	r1, [r0, r3, lsl #2]
   3b960:	add	r3, r3, #1
   3b964:	mov	r1, #1
   3b968:	b	3b8d0 <Mat_VarCreate+0xa4>
   3b96c:	mov	r6, #2
   3b970:	ldr	r3, [r4, #16]
   3b974:	cmp	r3, #5
   3b978:	bne	3ba4c <Mat_VarCreate+0x220>
   3b97c:	mov	r3, #28
   3b980:	cmp	r5, #0
   3b984:	str	r3, [r4]
   3b988:	str	r3, [r4, #12]
   3b98c:	bne	3ba90 <Mat_VarCreate+0x264>
   3b990:	mov	r3, #0
   3b994:	str	r3, [r4, #40]	; 0x28
   3b998:	b	3b850 <Mat_VarCreate+0x24>
   3b99c:	cmp	r5, #0
   3b9a0:	movne	r6, #0
   3b9a4:	bne	3b9b4 <Mat_VarCreate+0x188>
   3b9a8:	mov	r6, #4
   3b9ac:	b	3b970 <Mat_VarCreate+0x144>
   3b9b0:	add	r6, r6, #1
   3b9b4:	ldr	r3, [r5, r6, lsl #2]
   3b9b8:	cmp	r3, #0
   3b9bc:	bne	3b9b0 <Mat_VarCreate+0x184>
   3b9c0:	ldr	r9, [sp, #4]
   3b9c4:	ldr	r7, [r4, #52]	; 0x34
   3b9c8:	cmp	r9, #0
   3b9cc:	udivne	r6, r6, r9
   3b9d0:	cmp	r6, #0
   3b9d4:	str	r6, [r7, #4]
   3b9d8:	beq	3b9a8 <Mat_VarCreate+0x17c>
   3b9dc:	mov	r1, #4
   3b9e0:	mov	r0, r6
   3b9e4:	bl	140c <calloc@plt>
   3b9e8:	mov	sl, r0
   3b9ec:	str	r0, [r7, #8]
   3b9f0:	mov	r7, #0
   3b9f4:	ldr	r3, [r5, r7, lsl #2]
   3b9f8:	ldr	r0, [r3, #36]	; 0x24
   3b9fc:	bl	14cc <strdup@plt>
   3ba00:	str	r0, [sl, r7, lsl #2]
   3ba04:	add	r7, r7, #1
   3ba08:	cmp	r6, r7
   3ba0c:	bne	3b9f4 <Mat_VarCreate+0x1c8>
   3ba10:	mov	r2, r6
   3ba14:	mov	r1, r9
   3ba18:	add	r0, sp, #4
   3ba1c:	bl	3a8c4 <SafeMul>
   3ba20:	b	3b9a8 <Mat_VarCreate+0x17c>
   3ba24:	mov	r0, r4
   3ba28:	bl	158c <Mat_VarFree@plt>
   3ba2c:	ldr	r0, [pc, #596]	; 3bc88 <Mat_VarCreate+0x45c>
   3ba30:	add	r0, pc, r0
   3ba34:	bl	161c <Mat_Critical@plt>
   3ba38:	b	3b84c <Mat_VarCreate+0x20>
   3ba3c:	mov	r6, #1
   3ba40:	b	3b970 <Mat_VarCreate+0x144>
   3ba44:	mov	r6, #8
   3ba48:	b	3b970 <Mat_VarCreate+0x144>
   3ba4c:	mov	r2, r6
   3ba50:	mov	r0, r4
   3ba54:	str	r6, [r4, #12]
   3ba58:	ldr	r1, [sp, #4]
   3ba5c:	bl	3a8c4 <SafeMul>
   3ba60:	cmp	r5, #0
   3ba64:	bne	3ba90 <Mat_VarCreate+0x264>
   3ba68:	ldr	r3, [r4, #16]
   3ba6c:	cmp	r3, #1
   3ba70:	bne	3b990 <Mat_VarCreate+0x164>
   3ba74:	ldr	r0, [sp, #4]
   3ba78:	cmp	r0, #0
   3ba7c:	beq	3b990 <Mat_VarCreate+0x164>
   3ba80:	mov	r1, #4
   3ba84:	bl	140c <calloc@plt>
   3ba88:	str	r0, [r4, #40]	; 0x28
   3ba8c:	b	3b850 <Mat_VarCreate+0x24>
   3ba90:	tst	r8, #1
   3ba94:	movne	r3, #1
   3ba98:	strne	r5, [r4, #40]	; 0x28
   3ba9c:	bne	3bc4c <Mat_VarCreate+0x420>
   3baa0:	ldr	r3, [r4, #16]
   3baa4:	cmp	r3, #5
   3baa8:	bne	3bbcc <Mat_VarCreate+0x3a0>
   3baac:	mov	r0, #28
   3bab0:	bl	1544 <malloc@plt>
   3bab4:	subs	r7, r0, #0
   3bab8:	beq	3bb9c <Mat_VarCreate+0x370>
   3babc:	ldr	r3, [r5]
   3bac0:	ldr	sl, [r5, #8]
   3bac4:	ldr	r9, [r5, #16]
   3bac8:	str	r3, [r7]
   3bacc:	ldr	r8, [r5, #20]
   3bad0:	str	sl, [r7, #8]
   3bad4:	lsl	sl, sl, #2
   3bad8:	mov	r0, sl
   3badc:	str	r9, [r7, #16]
   3bae0:	str	r8, [r7, #20]
   3bae4:	bl	1544 <malloc@plt>
   3bae8:	cmp	r0, #0
   3baec:	str	r0, [r7, #4]
   3baf0:	beq	3bb00 <Mat_VarCreate+0x2d4>
   3baf4:	mov	r2, sl
   3baf8:	ldr	r1, [r5, #4]
   3bafc:	bl	1490 <memcpy@plt>
   3bb00:	lsl	r9, r9, #2
   3bb04:	mov	r0, r9
   3bb08:	bl	1544 <malloc@plt>
   3bb0c:	cmp	r0, #0
   3bb10:	str	r0, [r7, #12]
   3bb14:	beq	3bb24 <Mat_VarCreate+0x2f8>
   3bb18:	mov	r2, r9
   3bb1c:	ldr	r1, [r5, #12]
   3bb20:	bl	1490 <memcpy@plt>
   3bb24:	ldr	r3, [r4, #20]
   3bb28:	cmp	r3, #0
   3bb2c:	beq	3bba4 <Mat_VarCreate+0x378>
   3bb30:	mov	r0, #8
   3bb34:	bl	1544 <malloc@plt>
   3bb38:	cmp	r0, #0
   3bb3c:	mov	r9, r0
   3bb40:	str	r0, [r7, #24]
   3bb44:	beq	3bb9c <Mat_VarCreate+0x370>
   3bb48:	mul	r6, r6, r8
   3bb4c:	ldr	sl, [r5, #24]
   3bb50:	mov	r0, r6
   3bb54:	bl	1544 <malloc@plt>
   3bb58:	mov	r8, r0
   3bb5c:	mov	r0, r6
   3bb60:	str	r8, [r9]
   3bb64:	bl	1544 <malloc@plt>
   3bb68:	cmp	r8, #0
   3bb6c:	mov	r5, r0
   3bb70:	str	r0, [r9, #4]
   3bb74:	beq	3bb88 <Mat_VarCreate+0x35c>
   3bb78:	mov	r2, r6
   3bb7c:	mov	r0, r8
   3bb80:	ldr	r1, [sl]
   3bb84:	bl	1490 <memcpy@plt>
   3bb88:	cmp	r5, #0
   3bb8c:	movne	r2, r6
   3bb90:	movne	r0, r5
   3bb94:	ldrne	r1, [sl, #4]
   3bb98:	bne	3bbc4 <Mat_VarCreate+0x398>
   3bb9c:	str	r7, [r4, #40]	; 0x28
   3bba0:	b	3b850 <Mat_VarCreate+0x24>
   3bba4:	mul	r6, r6, r8
   3bba8:	mov	r0, r6
   3bbac:	bl	1544 <malloc@plt>
   3bbb0:	cmp	r0, #0
   3bbb4:	str	r0, [r7, #24]
   3bbb8:	beq	3bb9c <Mat_VarCreate+0x370>
   3bbbc:	ldr	r1, [r5, #24]
   3bbc0:	mov	r2, r6
   3bbc4:	bl	1490 <memcpy@plt>
   3bbc8:	b	3bb9c <Mat_VarCreate+0x370>
   3bbcc:	ldr	r3, [r4, #20]
   3bbd0:	cmp	r3, #0
   3bbd4:	beq	3bc54 <Mat_VarCreate+0x428>
   3bbd8:	mov	r0, #8
   3bbdc:	bl	1544 <malloc@plt>
   3bbe0:	cmp	r0, #0
   3bbe4:	mov	r7, r0
   3bbe8:	str	r0, [r4, #40]	; 0x28
   3bbec:	beq	3bc48 <Mat_VarCreate+0x41c>
   3bbf0:	ldr	r6, [r4]
   3bbf4:	cmp	r6, #0
   3bbf8:	beq	3bc48 <Mat_VarCreate+0x41c>
   3bbfc:	mov	r0, r6
   3bc00:	bl	1544 <malloc@plt>
   3bc04:	mov	r9, r0
   3bc08:	mov	r0, r6
   3bc0c:	str	r9, [r7]
   3bc10:	bl	1544 <malloc@plt>
   3bc14:	cmp	r9, #0
   3bc18:	mov	r8, r0
   3bc1c:	str	r0, [r7, #4]
   3bc20:	beq	3bc34 <Mat_VarCreate+0x408>
   3bc24:	mov	r2, r6
   3bc28:	mov	r0, r9
   3bc2c:	ldr	r1, [r5]
   3bc30:	bl	1490 <memcpy@plt>
   3bc34:	cmp	r8, #0
   3bc38:	movne	r0, r8
   3bc3c:	ldrne	r2, [r4]
   3bc40:	ldrne	r1, [r5, #4]
   3bc44:	bne	3bc7c <Mat_VarCreate+0x450>
   3bc48:	mov	r3, #0
   3bc4c:	str	r3, [r4, #44]	; 0x2c
   3bc50:	b	3b850 <Mat_VarCreate+0x24>
   3bc54:	ldr	r6, [r4]
   3bc58:	cmp	r6, #0
   3bc5c:	beq	3bc48 <Mat_VarCreate+0x41c>
   3bc60:	mov	r0, r6
   3bc64:	bl	1544 <malloc@plt>
   3bc68:	cmp	r0, #0
   3bc6c:	str	r0, [r4, #40]	; 0x28
   3bc70:	beq	3bc48 <Mat_VarCreate+0x41c>
   3bc74:	mov	r2, r6
   3bc78:	mov	r1, r5
   3bc7c:	bl	1490 <memcpy@plt>
   3bc80:	b	3bc48 <Mat_VarCreate+0x41c>
   3bc84:	.word	0x00003abb
   3bc88:	.word	0x0000388e

0003bc8c <Mat_CalcSingleSubscript>:
   3bc8c:	mov	ip, #0
   3bc90:	push	{r4, r5, r6, lr}
   3bc94:	mov	r5, r0
   3bc98:	sub	lr, r1, #4
   3bc9c:	mov	r0, ip
   3bca0:	cmp	ip, r5
   3bca4:	popge	{r4, r5, r6, pc}
   3bca8:	ldr	r3, [r2, ip, lsl #2]
   3bcac:	ldr	r4, [lr, #4]!
   3bcb0:	cmp	r4, r3
   3bcb4:	bge	3bccc <Mat_CalcSingleSubscript+0x40>
   3bcb8:	ldr	r0, [pc, #56]	; 3bcf8 <Mat_CalcSingleSubscript+0x6c>
   3bcbc:	add	r0, pc, r0
   3bcc0:	bl	161c <Mat_Critical@plt>
   3bcc4:	mvn	r0, #0
   3bcc8:	pop	{r4, r5, r6, pc}
   3bccc:	cmp	r3, #0
   3bcd0:	ble	3bcc4 <Mat_CalcSingleSubscript+0x38>
   3bcd4:	sub	r3, r3, #1
   3bcd8:	mov	r4, lr
   3bcdc:	cmp	r1, r4
   3bce0:	addeq	r0, r0, r3
   3bce4:	addeq	ip, ip, #1
   3bce8:	beq	3bca0 <Mat_CalcSingleSubscript+0x14>
   3bcec:	ldr	r6, [r4, #-4]!
   3bcf0:	mul	r3, r6, r3
   3bcf4:	b	3bcdc <Mat_CalcSingleSubscript+0x50>
   3bcf8:	.word	0x00003619

0003bcfc <Mat_CalcSingleSubscript2>:
   3bcfc:	push	{r4, r5, r6, lr}
   3bd00:	sub	r4, r1, #4
   3bd04:	mov	lr, #0
   3bd08:	cmp	lr, r0
   3bd0c:	blt	3bd18 <Mat_CalcSingleSubscript2+0x1c>
   3bd10:	mov	r0, #0
   3bd14:	pop	{r4, r5, r6, pc}
   3bd18:	ldr	ip, [r2, lr, lsl #2]
   3bd1c:	ldr	r5, [r4, #4]!
   3bd20:	cmp	r5, ip
   3bd24:	bcs	3bd3c <Mat_CalcSingleSubscript2+0x40>
   3bd28:	ldr	r0, [pc, #68]	; 3bd74 <Mat_CalcSingleSubscript2+0x78>
   3bd2c:	add	r0, pc, r0
   3bd30:	bl	161c <Mat_Critical@plt>
   3bd34:	mov	r0, #1
   3bd38:	pop	{r4, r5, r6, pc}
   3bd3c:	cmp	ip, #0
   3bd40:	beq	3bd34 <Mat_CalcSingleSubscript2+0x38>
   3bd44:	sub	ip, ip, #1
   3bd48:	mov	r5, r4
   3bd4c:	cmp	r5, r1
   3bd50:	bne	3bd68 <Mat_CalcSingleSubscript2+0x6c>
   3bd54:	ldr	r5, [r3]
   3bd58:	add	lr, lr, #1
   3bd5c:	add	ip, r5, ip
   3bd60:	str	ip, [r3]
   3bd64:	b	3bd08 <Mat_CalcSingleSubscript2+0xc>
   3bd68:	ldr	r6, [r5, #-4]!
   3bd6c:	mul	ip, r6, ip
   3bd70:	b	3bd4c <Mat_CalcSingleSubscript2+0x50>
   3bd74:	.word	0x000035d6

0003bd78 <Mat_CalcSubscripts>:
   3bd78:	push	{r4, r5, r6, r7, r8, lr}
   3bd7c:	mov	r5, r0
   3bd80:	lsl	r0, r0, #2
   3bd84:	mov	r7, r1
   3bd88:	vpush	{d8}
   3bd8c:	vmov	s16, r2
   3bd90:	bl	1544 <malloc@plt>
   3bd94:	mov	r6, r0
   3bd98:	vcvt.f64.s32	d8, s16
   3bd9c:	subs	r5, r5, #1
   3bda0:	bcc	3bdf4 <Mat_CalcSubscripts+0x7c>
   3bda4:	add	r3, r7, r5, lsl #2
   3bda8:	mov	r4, #1
   3bdac:	b	3bdb8 <Mat_CalcSubscripts+0x40>
   3bdb0:	ldr	r2, [r3, #-4]!
   3bdb4:	mul	r4, r2, r4
   3bdb8:	cmp	r3, r7
   3bdbc:	bne	3bdb0 <Mat_CalcSubscripts+0x38>
   3bdc0:	vmov	s15, r4
   3bdc4:	vcvt.f64.s32	d0, s15
   3bdc8:	vdiv.f64	d0, d8, d0
   3bdcc:	bl	152c <floor@plt>
   3bdd0:	vcvt.s32.f64	s15, d0
   3bdd4:	vmov	r3, s15
   3bdd8:	mul	r4, r4, r3
   3bddc:	add	r3, r3, #1
   3bde0:	str	r3, [r6, r5, lsl #2]
   3bde4:	vmov	s15, r4
   3bde8:	vcvt.f64.s32	d7, s15
   3bdec:	vsub.f64	d8, d8, d7
   3bdf0:	b	3bd9c <Mat_CalcSubscripts+0x24>
   3bdf4:	vpop	{d8}
   3bdf8:	mov	r0, r6
   3bdfc:	pop	{r4, r5, r6, r7, r8, pc}

0003be00 <Mat_CalcSubscripts2>:
   3be00:	push	{r4, r5, r6, r7, r8, lr}
   3be04:	mov	r5, r0
   3be08:	lsl	r0, r0, #2
   3be0c:	mov	r7, r1
   3be10:	vpush	{d8}
   3be14:	vmov	s16, r2
   3be18:	bl	1544 <malloc@plt>
   3be1c:	mov	r6, r0
   3be20:	vcvt.f64.u32	d8, s16
   3be24:	subs	r5, r5, #1
   3be28:	bcc	3be7c <Mat_CalcSubscripts2+0x7c>
   3be2c:	add	r3, r7, r5, lsl #2
   3be30:	mov	r4, #1
   3be34:	b	3be40 <Mat_CalcSubscripts2+0x40>
   3be38:	ldr	r2, [r3, #-4]!
   3be3c:	mul	r4, r2, r4
   3be40:	cmp	r3, r7
   3be44:	bne	3be38 <Mat_CalcSubscripts2+0x38>
   3be48:	vmov	s15, r4
   3be4c:	vcvt.f64.u32	d0, s15
   3be50:	vdiv.f64	d0, d8, d0
   3be54:	bl	152c <floor@plt>
   3be58:	vcvt.u32.f64	s15, d0
   3be5c:	vmov	r3, s15
   3be60:	mul	r4, r4, r3
   3be64:	add	r3, r3, #1
   3be68:	str	r3, [r6, r5, lsl #2]
   3be6c:	vmov	s15, r4
   3be70:	vcvt.f64.u32	d7, s15
   3be74:	vsub.f64	d8, d8, d7
   3be78:	b	3be24 <Mat_CalcSubscripts2+0x24>
   3be7c:	vpop	{d8}
   3be80:	mov	r0, r6
   3be84:	pop	{r4, r5, r6, r7, r8, pc}

0003be88 <Mat_VarGetSize>:
   3be88:	ldr	r3, [r0, #16]
   3be8c:	push	{r0, r1, r4, r5, r6, lr}
   3be90:	mov	r5, #0
   3be94:	mov	r4, r0
   3be98:	str	r5, [sp]
   3be9c:	cmp	r3, #2
   3bea0:	bne	3bf34 <Mat_VarGetSize+0xac>
   3bea4:	ldr	r6, [r0, #40]	; 0x28
   3bea8:	cmp	r6, r5
   3beac:	beq	3bee0 <Mat_VarGetSize+0x58>
   3beb0:	ldr	r3, [r0, #52]	; 0x34
   3beb4:	add	r1, sp, #4
   3beb8:	ldr	r3, [r3, #4]
   3bebc:	str	r3, [sp, #4]
   3bec0:	bl	3a864 <SafeMulDims>
   3bec4:	mov	r2, #60	; 0x3c
   3bec8:	mov	r0, sp
   3becc:	ldr	r1, [sp, #4]
   3bed0:	bl	3a8c4 <SafeMul>
   3bed4:	ldr	r3, [sp, #4]
   3bed8:	cmp	r3, r5
   3bedc:	bhi	3bef8 <Mat_VarGetSize+0x70>
   3bee0:	ldr	r3, [r4, #52]	; 0x34
   3bee4:	ldr	r2, [r3, #4]
   3bee8:	ldr	r3, [sp]
   3beec:	add	r3, r3, r2, lsl #6
   3bef0:	str	r3, [sp]
   3bef4:	b	3bf70 <Mat_VarGetSize+0xe8>
   3bef8:	ldr	r0, [r6, r5, lsl #2]
   3befc:	cmp	r0, #0
   3bf00:	beq	3bf2c <Mat_VarGetSize+0xa4>
   3bf04:	ldr	r3, [r0, #16]
   3bf08:	cmp	r3, #0
   3bf0c:	ldreq	r3, [sp]
   3bf10:	subeq	r3, r3, #56	; 0x38
   3bf14:	streq	r3, [sp]
   3bf18:	beq	3bf2c <Mat_VarGetSize+0xa4>
   3bf1c:	bl	3be88 <Mat_VarGetSize>
   3bf20:	ldr	r3, [sp]
   3bf24:	add	r0, r3, r0
   3bf28:	str	r0, [sp]
   3bf2c:	add	r5, r5, #1
   3bf30:	b	3bed4 <Mat_VarGetSize+0x4c>
   3bf34:	cmp	r3, #1
   3bf38:	bne	3bfb4 <Mat_VarGetSize+0x12c>
   3bf3c:	ldr	r3, [r0, #40]	; 0x28
   3bf40:	cmp	r3, #0
   3bf44:	beq	3bf70 <Mat_VarGetSize+0xe8>
   3bf48:	ldr	r2, [r0]
   3bf4c:	mov	r4, r3
   3bf50:	ldr	r1, [r0, #12]
   3bf54:	udiv	r2, r2, r1
   3bf58:	mov	r1, #60	; 0x3c
   3bf5c:	add	r5, r3, r2, lsl #2
   3bf60:	mul	r1, r1, r2
   3bf64:	str	r1, [sp]
   3bf68:	cmp	r5, r4
   3bf6c:	bne	3bf7c <Mat_VarGetSize+0xf4>
   3bf70:	ldr	r0, [sp]
   3bf74:	add	sp, sp, #8
   3bf78:	pop	{r4, r5, r6, pc}
   3bf7c:	ldr	r0, [r4], #4
   3bf80:	cmp	r0, #0
   3bf84:	beq	3bf68 <Mat_VarGetSize+0xe0>
   3bf88:	ldr	r3, [r0, #16]
   3bf8c:	cmp	r3, #0
   3bf90:	ldreq	r3, [sp]
   3bf94:	subeq	r3, r3, #56	; 0x38
   3bf98:	streq	r3, [sp]
   3bf9c:	beq	3bf68 <Mat_VarGetSize+0xe0>
   3bfa0:	bl	3be88 <Mat_VarGetSize>
   3bfa4:	ldr	r3, [sp]
   3bfa8:	add	r0, r3, r0
   3bfac:	str	r0, [sp]
   3bfb0:	b	3bf68 <Mat_VarGetSize+0xe0>
   3bfb4:	cmp	r3, #5
   3bfb8:	bne	3c044 <Mat_VarGetSize+0x1bc>
   3bfbc:	ldr	r6, [r0, #40]	; 0x28
   3bfc0:	cmp	r6, #0
   3bfc4:	beq	3bf70 <Mat_VarGetSize+0xe8>
   3bfc8:	ldr	r5, [r6, #20]
   3bfcc:	ldr	r0, [r0, #8]
   3bfd0:	bl	1598 <Mat_SizeOf@plt>
   3bfd4:	ldr	r3, [r4, #20]
   3bfd8:	mul	r0, r0, r5
   3bfdc:	ldr	r1, [r6, #16]
   3bfe0:	str	r0, [sp]
   3bfe4:	cmp	r3, #0
   3bfe8:	ldr	r3, [r6, #8]
   3bfec:	lslne	r0, r0, #1
   3bff0:	strne	r0, [sp]
   3bff4:	ldr	r2, [sp]
   3bff8:	add	r0, r3, r1
   3bffc:	clz	r3, r3
   3c000:	lsr	r3, r3, #5
   3c004:	add	r2, r2, r0, lsl #2
   3c008:	ldr	r0, [r6, #20]
   3c00c:	str	r2, [sp]
   3c010:	cmp	r0, #0
   3c014:	moveq	r3, #1
   3c018:	cmp	r1, #0
   3c01c:	moveq	r3, #1
   3c020:	cmp	r3, #0
   3c024:	beq	3bf70 <Mat_VarGetSize+0xe8>
   3c028:	ldr	r3, [r4, #28]
   3c02c:	cmp	r3, #0
   3c030:	movne	r3, #1
   3c034:	moveq	r3, #8
   3c038:	add	r2, r2, r3
   3c03c:	str	r2, [sp]
   3c040:	b	3bf70 <Mat_VarGetSize+0xe8>
   3c044:	ldr	r2, [r0, #4]
   3c048:	cmp	r2, #0
   3c04c:	ble	3bf70 <Mat_VarGetSize+0xe8>
   3c050:	mov	r0, r3
   3c054:	bl	167c <Mat_SizeOfClass@plt>
   3c058:	mov	r1, sp
   3c05c:	str	r0, [sp]
   3c060:	mov	r0, r4
   3c064:	bl	3a864 <SafeMulDims>
   3c068:	ldr	r3, [r4, #20]
   3c06c:	cmp	r3, #0
   3c070:	beq	3bf70 <Mat_VarGetSize+0xe8>
   3c074:	ldr	r3, [sp]
   3c078:	lsl	r3, r3, #1
   3c07c:	b	3bef0 <Mat_VarGetSize+0x68>

0003c080 <Mat_VarPrint>:
   3c080:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3c084:	mov	r6, r1
   3c088:	sub	sp, sp, #196	; 0xc4
   3c08c:	mov	r3, #0
   3c090:	mov	r4, r0
   3c094:	mov	r2, #72	; 0x48
   3c098:	add	r0, sp, #20
   3c09c:	ldr	r1, [pc, #1884]	; 3c800 <Mat_VarPrint+0x780>
   3c0a0:	str	r3, [sp, #16]
   3c0a4:	add	r1, pc, r1
   3c0a8:	bl	1490 <memcpy@plt>
   3c0ac:	cmp	r4, #0
   3c0b0:	beq	3c220 <Mat_VarPrint+0x1a0>
   3c0b4:	ldr	r1, [r4, #36]	; 0x24
   3c0b8:	cmp	r1, #0
   3c0bc:	beq	3c0cc <Mat_VarPrint+0x4c>
   3c0c0:	ldr	r0, [pc, #1852]	; 3c804 <Mat_VarPrint+0x784>
   3c0c4:	add	r0, pc, r0
   3c0c8:	bl	1448 <printf@plt>
   3c0cc:	ldr	r0, [pc, #1844]	; 3c808 <Mat_VarPrint+0x788>
   3c0d0:	ldr	r1, [r4, #4]
   3c0d4:	add	r0, pc, r0
   3c0d8:	bl	1448 <printf@plt>
   3c0dc:	ldr	r3, [r4, #4]
   3c0e0:	cmp	r3, #0
   3c0e4:	ble	3c220 <Mat_VarPrint+0x1a0>
   3c0e8:	ldr	r3, [r4, #32]
   3c0ec:	cmp	r3, #0
   3c0f0:	beq	3c138 <Mat_VarPrint+0xb8>
   3c0f4:	mov	r5, #1
   3c0f8:	add	r1, sp, #16
   3c0fc:	ldr	r7, [pc, #1800]	; 3c80c <Mat_VarPrint+0x78c>
   3c100:	mov	r0, r4
   3c104:	str	r5, [sp, #16]
   3c108:	bl	3a864 <SafeMulDims>
   3c10c:	ldr	r0, [pc, #1788]	; 3c810 <Mat_VarPrint+0x790>
   3c110:	add	r7, pc, r7
   3c114:	ldr	r3, [r4, #32]
   3c118:	add	r0, pc, r0
   3c11c:	ldr	r1, [r3]
   3c120:	bl	1448 <printf@plt>
   3c124:	ldr	r3, [r4, #4]
   3c128:	cmp	r3, r5
   3c12c:	bgt	3c228 <Mat_VarPrint+0x1a8>
   3c130:	mov	r0, #10
   3c134:	bl	1604 <putchar@plt>
   3c138:	ldr	r3, [r4, #16]
   3c13c:	add	r2, sp, #192	; 0xc0
   3c140:	ldr	r0, [pc, #1740]	; 3c814 <Mat_VarPrint+0x794>
   3c144:	add	r3, r2, r3, lsl #2
   3c148:	add	r0, pc, r0
   3c14c:	ldr	r1, [r3, #-172]	; 0xffffff54
   3c150:	bl	1448 <printf@plt>
   3c154:	ldr	r3, [r4, #20]
   3c158:	cmp	r3, #0
   3c15c:	beq	3c240 <Mat_VarPrint+0x1c0>
   3c160:	ldr	r0, [pc, #1712]	; 3c818 <Mat_VarPrint+0x798>
   3c164:	add	r0, pc, r0
   3c168:	bl	1448 <printf@plt>
   3c16c:	mov	r0, #10
   3c170:	bl	1604 <putchar@plt>
   3c174:	ldr	r5, [r4, #8]
   3c178:	cmp	r5, #0
   3c17c:	beq	3c1b0 <Mat_VarPrint+0x130>
   3c180:	ldr	r1, [pc, #1684]	; 3c81c <Mat_VarPrint+0x79c>
   3c184:	mov	r2, #100	; 0x64
   3c188:	add	r0, sp, #92	; 0x5c
   3c18c:	add	r1, pc, r1
   3c190:	add	r1, r1, #72	; 0x48
   3c194:	bl	1490 <memcpy@plt>
   3c198:	ldr	r0, [pc, #1664]	; 3c820 <Mat_VarPrint+0x7a0>
   3c19c:	add	r3, sp, #192	; 0xc0
   3c1a0:	add	r5, r3, r5, lsl #2
   3c1a4:	ldr	r1, [r5, #-100]	; 0xffffff9c
   3c1a8:	add	r0, pc, r0
   3c1ac:	bl	1448 <printf@plt>
   3c1b0:	ldr	r3, [r4, #16]
   3c1b4:	ldr	r8, [r4, #40]	; 0x28
   3c1b8:	cmp	r3, #2
   3c1bc:	bne	3c2d8 <Mat_VarPrint+0x258>
   3c1c0:	ldr	r3, [r4, #52]	; 0x34
   3c1c4:	add	r0, sp, #92	; 0x5c
   3c1c8:	ldr	r1, [sp, #16]
   3c1cc:	ldr	r7, [r3, #4]
   3c1d0:	mov	r3, #1
   3c1d4:	str	r3, [sp, #92]	; 0x5c
   3c1d8:	mov	r2, r7
   3c1dc:	bl	3a8c4 <SafeMul>
   3c1e0:	ldr	r5, [sp, #92]	; 0x5c
   3c1e4:	cmp	r5, #0
   3c1e8:	beq	3c298 <Mat_VarPrint+0x218>
   3c1ec:	ldr	r0, [pc, #1584]	; 3c824 <Mat_VarPrint+0x7a4>
   3c1f0:	mov	r1, r5
   3c1f4:	mov	r5, #0
   3c1f8:	ldr	r9, [pc, #1576]	; 3c828 <Mat_VarPrint+0x7a8>
   3c1fc:	add	r0, pc, r0
   3c200:	bl	1448 <printf@plt>
   3c204:	add	r9, pc, r9
   3c208:	ldr	r3, [sp, #92]	; 0x5c
   3c20c:	cmp	r3, r5
   3c210:	bhi	3c258 <Mat_VarPrint+0x1d8>
   3c214:	ldr	r0, [pc, #1552]	; 3c82c <Mat_VarPrint+0x7ac>
   3c218:	add	r0, pc, r0
   3c21c:	bl	1538 <puts@plt>
   3c220:	add	sp, sp, #196	; 0xc4
   3c224:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3c228:	ldr	r3, [r4, #32]
   3c22c:	mov	r0, r7
   3c230:	ldr	r1, [r3, r5, lsl #2]
   3c234:	add	r5, r5, #1
   3c238:	bl	1448 <printf@plt>
   3c23c:	b	3c124 <Mat_VarPrint+0xa4>
   3c240:	ldr	r3, [r4, #28]
   3c244:	cmp	r3, #0
   3c248:	beq	3c16c <Mat_VarPrint+0xec>
   3c24c:	ldr	r0, [pc, #1500]	; 3c830 <Mat_VarPrint+0x7b0>
   3c250:	add	r0, pc, r0
   3c254:	b	3c168 <Mat_VarPrint+0xe8>
   3c258:	ldr	r2, [r8, r5, lsl #2]
   3c25c:	cmp	r2, #0
   3c260:	bne	3c288 <Mat_VarPrint+0x208>
   3c264:	udiv	r3, r5, r7
   3c268:	ldr	r1, [r4, #52]	; 0x34
   3c26c:	mov	r0, r9
   3c270:	ldr	r1, [r1, #8]
   3c274:	mls	r3, r7, r3, r5
   3c278:	ldr	r1, [r1, r3, lsl #2]
   3c27c:	bl	1448 <printf@plt>
   3c280:	add	r5, r5, #1
   3c284:	b	3c208 <Mat_VarPrint+0x188>
   3c288:	mov	r1, r6
   3c28c:	mov	r0, r2
   3c290:	bl	3c080 <Mat_VarPrint>
   3c294:	b	3c280 <Mat_VarPrint+0x200>
   3c298:	ldr	r0, [pc, #1428]	; 3c834 <Mat_VarPrint+0x7b4>
   3c29c:	mov	r1, r7
   3c2a0:	ldr	r6, [pc, #1424]	; 3c838 <Mat_VarPrint+0x7b8>
   3c2a4:	add	r0, pc, r0
   3c2a8:	bl	1448 <printf@plt>
   3c2ac:	add	r6, pc, r6
   3c2b0:	cmp	r5, r7
   3c2b4:	beq	3c214 <Mat_VarPrint+0x194>
   3c2b8:	ldr	r3, [r4, #52]	; 0x34
   3c2bc:	mov	r2, #0
   3c2c0:	mov	r0, r6
   3c2c4:	ldr	r3, [r3, #8]
   3c2c8:	ldr	r1, [r3, r5, lsl #2]
   3c2cc:	add	r5, r5, #1
   3c2d0:	bl	1448 <printf@plt>
   3c2d4:	b	3c2b0 <Mat_VarPrint+0x230>
   3c2d8:	cmp	r8, #0
   3c2dc:	beq	3c2ec <Mat_VarPrint+0x26c>
   3c2e0:	ldr	r2, [r4, #12]
   3c2e4:	cmp	r2, #0
   3c2e8:	bgt	3c300 <Mat_VarPrint+0x280>
   3c2ec:	cmp	r6, #0
   3c2f0:	beq	3c220 <Mat_VarPrint+0x1a0>
   3c2f4:	ldr	r0, [pc, #1344]	; 3c83c <Mat_VarPrint+0x7bc>
   3c2f8:	add	r0, pc, r0
   3c2fc:	b	3c21c <Mat_VarPrint+0x19c>
   3c300:	cmp	r3, #1
   3c304:	bne	3c34c <Mat_VarPrint+0x2cc>
   3c308:	ldr	r3, [r4]
   3c30c:	mov	r4, #0
   3c310:	ldr	r0, [pc, #1320]	; 3c840 <Mat_VarPrint+0x7c0>
   3c314:	udiv	r3, r3, r2
   3c318:	add	r0, pc, r0
   3c31c:	str	r3, [sp, #16]
   3c320:	bl	1538 <puts@plt>
   3c324:	ldr	r3, [sp, #16]
   3c328:	cmp	r3, r4
   3c32c:	ldrls	r0, [pc, #1296]	; 3c844 <Mat_VarPrint+0x7c4>
   3c330:	addls	r0, pc, r0
   3c334:	bls	3c21c <Mat_VarPrint+0x19c>
   3c338:	mov	r1, r6
   3c33c:	ldr	r0, [r8, r4, lsl #2]
   3c340:	add	r4, r4, #1
   3c344:	bl	3c080 <Mat_VarPrint>
   3c348:	b	3c324 <Mat_VarPrint+0x2a4>
   3c34c:	cmp	r6, #0
   3c350:	beq	3c220 <Mat_VarPrint+0x1a0>
   3c354:	ldr	r0, [pc, #1260]	; 3c848 <Mat_VarPrint+0x7c8>
   3c358:	add	r0, pc, r0
   3c35c:	bl	1538 <puts@plt>
   3c360:	ldr	r3, [r4, #4]
   3c364:	cmp	r3, #2
   3c368:	ble	3c384 <Mat_VarPrint+0x304>
   3c36c:	ldr	r0, [pc, #1240]	; 3c84c <Mat_VarPrint+0x7cc>
   3c370:	add	r0, pc, r0
   3c374:	bl	1538 <puts@plt>
   3c378:	ldr	r0, [pc, #1232]	; 3c850 <Mat_VarPrint+0x7d0>
   3c37c:	add	r0, pc, r0
   3c380:	b	3c21c <Mat_VarPrint+0x19c>
   3c384:	cmp	r3, #1
   3c388:	bne	3c3b0 <Mat_VarPrint+0x330>
   3c38c:	ldr	r3, [r4, #32]
   3c390:	cmp	r3, #0
   3c394:	beq	3c378 <Mat_VarPrint+0x2f8>
   3c398:	ldr	r3, [r3]
   3c39c:	cmp	r3, #15
   3c3a0:	bls	3c378 <Mat_VarPrint+0x2f8>
   3c3a4:	ldr	r0, [pc, #1192]	; 3c854 <Mat_VarPrint+0x7d4>
   3c3a8:	add	r0, pc, r0
   3c3ac:	b	3c374 <Mat_VarPrint+0x2f4>
   3c3b0:	cmp	r3, #2
   3c3b4:	bne	3c378 <Mat_VarPrint+0x2f8>
   3c3b8:	ldr	r3, [r4, #32]
   3c3bc:	cmp	r3, #0
   3c3c0:	beq	3c378 <Mat_VarPrint+0x2f8>
   3c3c4:	ldr	r3, [r4, #16]
   3c3c8:	sub	r3, r3, #4
   3c3cc:	cmp	r3, #11
   3c3d0:	addls	pc, pc, r3, lsl #2
   3c3d4:	b	3c378 <Mat_VarPrint+0x2f8>
   3c3d8:	b	3c56c <Mat_VarPrint+0x4ec>
   3c3dc:	b	3c684 <Mat_VarPrint+0x604>
   3c3e0:	b	3c408 <Mat_VarPrint+0x388>
   3c3e4:	b	3c408 <Mat_VarPrint+0x388>
   3c3e8:	b	3c408 <Mat_VarPrint+0x388>
   3c3ec:	b	3c408 <Mat_VarPrint+0x388>
   3c3f0:	b	3c408 <Mat_VarPrint+0x388>
   3c3f4:	b	3c408 <Mat_VarPrint+0x388>
   3c3f8:	b	3c408 <Mat_VarPrint+0x388>
   3c3fc:	b	3c408 <Mat_VarPrint+0x388>
   3c400:	b	3c408 <Mat_VarPrint+0x388>
   3c404:	b	3c408 <Mat_VarPrint+0x388>
   3c408:	ldr	r0, [r4, #8]
   3c40c:	bl	1598 <Mat_SizeOf@plt>
   3c410:	ldr	r5, [r4, #20]
   3c414:	mov	r6, r0
   3c418:	ldr	r8, [r4, #40]	; 0x28
   3c41c:	cmp	r5, #0
   3c420:	beq	3c4ec <Mat_VarPrint+0x46c>
   3c424:	ldr	r9, [pc, #1068]	; 3c858 <Mat_VarPrint+0x7d8>
   3c428:	mov	fp, #0
   3c42c:	ldr	sl, [pc, #1064]	; 3c85c <Mat_VarPrint+0x7dc>
   3c430:	ldm	r8, {r7, r8}
   3c434:	add	r9, pc, r9
   3c438:	add	sl, pc, sl
   3c43c:	ldr	r3, [r4, #32]
   3c440:	ldr	r3, [r3]
   3c444:	cmp	r3, fp
   3c448:	bls	3c378 <Mat_VarPrint+0x2f8>
   3c44c:	cmp	fp, #15
   3c450:	bne	3c4e4 <Mat_VarPrint+0x464>
   3c454:	cmp	r3, #15
   3c458:	bls	3c378 <Mat_VarPrint+0x2f8>
   3c45c:	ldr	r0, [pc, #1020]	; 3c860 <Mat_VarPrint+0x7e0>
   3c460:	add	r0, pc, r0
   3c464:	b	3c374 <Mat_VarPrint+0x2f4>
   3c468:	ldr	r5, [r1]
   3c46c:	str	r3, [sp]
   3c470:	ldr	r0, [r4, #8]
   3c474:	mla	r5, r5, r3, fp
   3c478:	mul	r5, r6, r5
   3c47c:	add	r1, r7, r5
   3c480:	bl	3a67c <Mat_PrintNumber>
   3c484:	mov	r0, r9
   3c488:	bl	1448 <printf@plt>
   3c48c:	add	r1, r8, r5
   3c490:	ldr	r0, [r4, #8]
   3c494:	bl	3a67c <Mat_PrintNumber>
   3c498:	mov	r0, sl
   3c49c:	bl	1448 <printf@plt>
   3c4a0:	ldr	r3, [sp]
   3c4a4:	add	r3, r3, #1
   3c4a8:	ldr	r1, [r4, #32]
   3c4ac:	ldr	r2, [r1, #4]
   3c4b0:	cmp	r2, r3
   3c4b4:	bls	3c4d4 <Mat_VarPrint+0x454>
   3c4b8:	cmp	r3, #15
   3c4bc:	bne	3c468 <Mat_VarPrint+0x3e8>
   3c4c0:	cmp	r2, #15
   3c4c4:	bls	3c4d4 <Mat_VarPrint+0x454>
   3c4c8:	ldr	r0, [pc, #916]	; 3c864 <Mat_VarPrint+0x7e4>
   3c4cc:	add	r0, pc, r0
   3c4d0:	bl	1448 <printf@plt>
   3c4d4:	mov	r0, #10
   3c4d8:	add	fp, fp, #1
   3c4dc:	bl	1604 <putchar@plt>
   3c4e0:	b	3c43c <Mat_VarPrint+0x3bc>
   3c4e4:	mov	r3, #0
   3c4e8:	b	3c4a8 <Mat_VarPrint+0x428>
   3c4ec:	ldr	r9, [pc, #884]	; 3c868 <Mat_VarPrint+0x7e8>
   3c4f0:	add	r9, pc, r9
   3c4f4:	ldr	r3, [r4, #32]
   3c4f8:	ldr	r3, [r3]
   3c4fc:	cmp	r3, r5
   3c500:	bls	3c378 <Mat_VarPrint+0x2f8>
   3c504:	cmp	r5, #15
   3c508:	beq	3c454 <Mat_VarPrint+0x3d4>
   3c50c:	mov	r7, #0
   3c510:	b	3c534 <Mat_VarPrint+0x4b4>
   3c514:	ldr	r1, [r2]
   3c518:	ldr	r0, [r4, #8]
   3c51c:	mla	r1, r1, r7, r5
   3c520:	add	r7, r7, #1
   3c524:	mla	r1, r6, r1, r8
   3c528:	bl	3a67c <Mat_PrintNumber>
   3c52c:	mov	r0, #32
   3c530:	bl	1604 <putchar@plt>
   3c534:	ldr	r2, [r4, #32]
   3c538:	ldr	r3, [r2, #4]
   3c53c:	cmp	r3, r7
   3c540:	bls	3c55c <Mat_VarPrint+0x4dc>
   3c544:	cmp	r7, #15
   3c548:	bne	3c514 <Mat_VarPrint+0x494>
   3c54c:	cmp	r3, #15
   3c550:	bls	3c55c <Mat_VarPrint+0x4dc>
   3c554:	mov	r0, r9
   3c558:	bl	1448 <printf@plt>
   3c55c:	mov	r0, #10
   3c560:	add	r5, r5, #1
   3c564:	bl	1604 <putchar@plt>
   3c568:	b	3c4f4 <Mat_VarPrint+0x474>
   3c56c:	ldr	r3, [r4, #8]
   3c570:	mov	r5, #0
   3c574:	ldr	r7, [r4, #40]	; 0x28
   3c578:	cmp	r3, #4
   3c57c:	beq	3c63c <Mat_VarPrint+0x5bc>
   3c580:	cmp	r3, #17
   3c584:	beq	3c63c <Mat_VarPrint+0x5bc>
   3c588:	ldr	r3, [r4, #32]
   3c58c:	ldr	r3, [r3]
   3c590:	cmp	r3, r5
   3c594:	bls	3c378 <Mat_VarPrint+0x2f8>
   3c598:	mov	r6, #0
   3c59c:	add	r8, r7, r5
   3c5a0:	b	3c664 <Mat_VarPrint+0x5e4>
   3c5a4:	ldr	r3, [r3]
   3c5a8:	mla	r3, r3, r6, r5
   3c5ac:	lsl	r3, r3, #1
   3c5b0:	ldrh	r0, [r7, r3]
   3c5b4:	cmp	r0, #127	; 0x7f
   3c5b8:	bhi	3c5f8 <Mat_VarPrint+0x578>
   3c5bc:	bl	1604 <putchar@plt>
   3c5c0:	add	r6, r6, #1
   3c5c4:	ldr	r3, [r4, #32]
   3c5c8:	ldr	r2, [r3, #4]
   3c5cc:	cmp	r2, r6
   3c5d0:	bhi	3c5a4 <Mat_VarPrint+0x524>
   3c5d4:	mov	r0, #10
   3c5d8:	add	r5, r5, #1
   3c5dc:	bl	1604 <putchar@plt>
   3c5e0:	ldr	r3, [r4, #32]
   3c5e4:	ldr	r3, [r3]
   3c5e8:	cmp	r3, r5
   3c5ec:	bls	3c378 <Mat_VarPrint+0x2f8>
   3c5f0:	mov	r6, #0
   3c5f4:	b	3c5c4 <Mat_VarPrint+0x544>
   3c5f8:	and	r3, r0, #63	; 0x3f
   3c5fc:	cmp	r0, #2048	; 0x800
   3c600:	lsr	r1, r0, #6
   3c604:	orr	r3, r3, #128	; 0x80
   3c608:	bcs	3c620 <Mat_VarPrint+0x5a0>
   3c60c:	mov	r2, r3
   3c610:	orr	r1, r1, #192	; 0xc0
   3c614:	mov	r0, r9
   3c618:	bl	1448 <printf@plt>
   3c61c:	b	3c5c0 <Mat_VarPrint+0x540>
   3c620:	lsr	r0, r0, #12
   3c624:	and	r1, r1, #63	; 0x3f
   3c628:	orr	r2, r1, #128	; 0x80
   3c62c:	orr	r1, r0, #224	; 0xe0
   3c630:	mov	r0, r8
   3c634:	bl	1448 <printf@plt>
   3c638:	b	3c5c0 <Mat_VarPrint+0x540>
   3c63c:	ldr	r8, [pc, #552]	; 3c86c <Mat_VarPrint+0x7ec>
   3c640:	ldr	r9, [pc, #552]	; 3c870 <Mat_VarPrint+0x7f0>
   3c644:	add	r8, pc, r8
   3c648:	add	r9, pc, r9
   3c64c:	b	3c5e0 <Mat_VarPrint+0x560>
   3c650:	ldr	r3, [r3]
   3c654:	mul	r3, r3, r6
   3c658:	add	r6, r6, #1
   3c65c:	ldrb	r0, [r8, r3]
   3c660:	bl	1604 <putchar@plt>
   3c664:	ldr	r3, [r4, #32]
   3c668:	ldr	r2, [r3, #4]
   3c66c:	cmp	r2, r6
   3c670:	bhi	3c650 <Mat_VarPrint+0x5d0>
   3c674:	mov	r0, #10
   3c678:	add	r5, r5, #1
   3c67c:	bl	1604 <putchar@plt>
   3c680:	b	3c588 <Mat_VarPrint+0x508>
   3c684:	ldr	r0, [r4, #8]
   3c688:	bl	1598 <Mat_SizeOf@plt>
   3c68c:	ldr	r6, [r4, #20]
   3c690:	mov	r3, r0
   3c694:	ldr	r5, [r4, #40]	; 0x28
   3c698:	cmp	r6, #0
   3c69c:	ldr	r9, [r5, #24]
   3c6a0:	beq	3c774 <Mat_VarPrint+0x6f4>
   3c6a4:	mov	r6, #0
   3c6a8:	ldr	r2, [r9]
   3c6ac:	ldr	sl, [pc, #448]	; 3c874 <Mat_VarPrint+0x7f4>
   3c6b0:	str	r2, [sp]
   3c6b4:	ldr	r2, [r9, #4]
   3c6b8:	add	sl, pc, sl
   3c6bc:	str	r2, [sp, #4]
   3c6c0:	ldr	r2, [pc, #432]	; 3c878 <Mat_VarPrint+0x7f8>
   3c6c4:	add	r2, pc, r2
   3c6c8:	str	r2, [sp, #8]
   3c6cc:	ldr	r2, [r5, #16]
   3c6d0:	sub	r2, r2, #1
   3c6d4:	cmp	r2, r6
   3c6d8:	bls	3c378 <Mat_VarPrint+0x2f8>
   3c6dc:	ldr	r2, [r5, #12]
   3c6e0:	lsl	r8, r6, #2
   3c6e4:	ldr	fp, [pc, #400]	; 3c87c <Mat_VarPrint+0x7fc>
   3c6e8:	add	r8, r8, #4
   3c6ec:	ldr	r7, [r2, r6, lsl #2]
   3c6f0:	add	r6, r6, #1
   3c6f4:	add	fp, pc, fp
   3c6f8:	mul	r9, r7, r3
   3c6fc:	ldr	r2, [r5, #12]
   3c700:	ldr	r2, [r2, r8]
   3c704:	cmp	r2, r7
   3c708:	bls	3c6cc <Mat_VarPrint+0x64c>
   3c70c:	ldr	r2, [r5, #20]
   3c710:	cmp	r2, r7
   3c714:	bls	3c6cc <Mat_VarPrint+0x64c>
   3c718:	ldr	r2, [r5, #4]
   3c71c:	str	r3, [sp, #12]
   3c720:	ldr	r0, [sp, #8]
   3c724:	ldr	r1, [r2, r7, lsl #2]
   3c728:	mov	r2, r6
   3c72c:	add	r7, r7, #1
   3c730:	add	r1, r1, #1
   3c734:	bl	1448 <printf@plt>
   3c738:	ldr	r3, [sp]
   3c73c:	ldr	r0, [r4, #8]
   3c740:	add	r1, r3, r9
   3c744:	bl	3a67c <Mat_PrintNumber>
   3c748:	mov	r0, sl
   3c74c:	bl	1448 <printf@plt>
   3c750:	ldr	r3, [sp, #4]
   3c754:	ldr	r0, [r4, #8]
   3c758:	add	r1, r3, r9
   3c75c:	bl	3a67c <Mat_PrintNumber>
   3c760:	mov	r0, fp
   3c764:	bl	1538 <puts@plt>
   3c768:	ldr	r3, [sp, #12]
   3c76c:	add	r9, r9, r3
   3c770:	b	3c6fc <Mat_VarPrint+0x67c>
   3c774:	ldr	sl, [pc, #260]	; 3c880 <Mat_VarPrint+0x800>
   3c778:	add	sl, pc, sl
   3c77c:	ldr	r2, [r5, #16]
   3c780:	sub	r2, r2, #1
   3c784:	cmp	r6, r2
   3c788:	bcs	3c378 <Mat_VarPrint+0x2f8>
   3c78c:	ldr	r2, [r5, #12]
   3c790:	lsl	r8, r6, #2
   3c794:	add	r8, r8, #4
   3c798:	ldr	r7, [r2, r6, lsl #2]
   3c79c:	add	r6, r6, #1
   3c7a0:	mla	fp, r7, r3, r9
   3c7a4:	ldr	r2, [r5, #12]
   3c7a8:	ldr	r2, [r2, r8]
   3c7ac:	cmp	r2, r7
   3c7b0:	bls	3c77c <Mat_VarPrint+0x6fc>
   3c7b4:	ldr	r2, [r5, #20]
   3c7b8:	cmp	r2, r7
   3c7bc:	bls	3c77c <Mat_VarPrint+0x6fc>
   3c7c0:	ldr	r2, [r5, #4]
   3c7c4:	mov	r0, sl
   3c7c8:	str	r3, [sp]
   3c7cc:	ldr	r1, [r2, r7, lsl #2]
   3c7d0:	mov	r2, r6
   3c7d4:	add	r7, r7, #1
   3c7d8:	add	r1, r1, #1
   3c7dc:	bl	1448 <printf@plt>
   3c7e0:	mov	r1, fp
   3c7e4:	ldr	r0, [r4, #8]
   3c7e8:	bl	3a67c <Mat_PrintNumber>
   3c7ec:	mov	r0, #10
   3c7f0:	bl	1604 <putchar@plt>
   3c7f4:	ldr	r3, [sp]
   3c7f8:	add	fp, fp, r3
   3c7fc:	b	3c7a4 <Mat_VarPrint+0x724>
   3c800:	.word	0x00014064
   3c804:	.word	0x0000326c
   3c808:	.word	0x000032d6
   3c80c:	.word	0x00003240
   3c810:	.word	0x00003228
   3c814:	.word	0x0000320f
   3c818:	.word	0x00003202
   3c81c:	.word	0x00013f7c
   3c820:	.word	0x000031d4
   3c824:	.word	0x00003190
   3c828:	.word	0x00003197
   3c82c:	.word	0x000031a4
   3c830:	.word	0x00003121
   3c834:	.word	0x000030e8
   3c838:	.word	0x000030ef
   3c83c:	.word	0x000030c2
   3c840:	.word	0x000030a6
   3c844:	.word	0x0000308c
   3c848:	.word	0x00003066
   3c84c:	.word	0x00003050
   3c850:	.word	0x00003040
   3c854:	.word	0x0000303d
   3c858:	.word	0x00002fe1
   3c85c:	.word	0x00002fe1
   3c860:	.word	0x00002fc0
   3c864:	.word	0x00002f50
   3c868:	.word	0x00002f2c
   3c86c:	.word	0x00002de2
   3c870:	.word	0x00002de0
   3c874:	.word	0x00002d5d
   3c878:	.word	0x00002d69
   3c87c:	.word	0x00002ad6
   3c880:	.word	0x00002cb5

0003c884 <Mat_VarReadData>:
   3c884:	ldr	ip, [r1, #16]
   3c888:	sub	ip, ip, #6
   3c88c:	cmp	ip, #9
   3c890:	bhi	3c8d0 <Mat_VarReadData+0x4c>
   3c894:	ldr	ip, [r0, #16]
   3c898:	push	{lr}		; (str lr, [sp, #-4]!)
   3c89c:	mov	lr, r0
   3c8a0:	cmp	ip, #256	; 0x100
   3c8a4:	beq	3c8c0 <Mat_VarReadData+0x3c>
   3c8a8:	cmp	ip, #512	; 0x200
   3c8ac:	beq	3c8d8 <Mat_VarReadData+0x54>
   3c8b0:	cmp	ip, #16
   3c8b4:	beq	3c8c8 <Mat_VarReadData+0x44>
   3c8b8:	mov	r0, #2
   3c8bc:	pop	{pc}		; (ldr pc, [sp], #4)
   3c8c0:	pop	{lr}		; (ldr lr, [sp], #4)
   3c8c4:	b	375e8 <Mat_VarReadData5>
   3c8c8:	pop	{lr}		; (ldr lr, [sp], #4)
   3c8cc:	b	39f0c <Mat_VarReadData4>
   3c8d0:	mvn	r0, #0
   3c8d4:	bx	lr
   3c8d8:	mov	r0, #1
   3c8dc:	pop	{pc}		; (ldr pc, [sp], #4)

0003c8e0 <Mat_VarReadDataAll>:
   3c8e0:	clz	r3, r1
   3c8e4:	cmp	r0, #0
   3c8e8:	push	{r4, lr}
   3c8ec:	lsr	r3, r3, #5
   3c8f0:	moveq	r4, #1
   3c8f4:	movne	r4, r3
   3c8f8:	cmp	r4, #0
   3c8fc:	bne	3c90c <Mat_VarReadDataAll+0x2c>
   3c900:	bl	3a794 <ReadData>
   3c904:	mov	r0, r4
   3c908:	pop	{r4, pc}
   3c90c:	mov	r0, #1
   3c910:	pop	{r4, pc}

0003c914 <Mat_VarReadDataLinear>:
   3c914:	ldr	ip, [r1, #16]
   3c918:	sub	ip, ip, #6
   3c91c:	cmp	ip, #9
   3c920:	bhi	3c960 <Mat_VarReadDataLinear+0x4c>
   3c924:	ldr	ip, [r0, #16]
   3c928:	push	{lr}		; (str lr, [sp, #-4]!)
   3c92c:	mov	lr, r0
   3c930:	cmp	ip, #256	; 0x100
   3c934:	beq	3c950 <Mat_VarReadDataLinear+0x3c>
   3c938:	cmp	ip, #512	; 0x200
   3c93c:	beq	3c968 <Mat_VarReadDataLinear+0x54>
   3c940:	cmp	ip, #16
   3c944:	beq	3c958 <Mat_VarReadDataLinear+0x44>
   3c948:	mov	r0, #2
   3c94c:	pop	{pc}		; (ldr pc, [sp], #4)
   3c950:	pop	{lr}		; (ldr lr, [sp], #4)
   3c954:	b	37d00 <Mat_VarReadDataLinear5>
   3c958:	pop	{lr}		; (ldr lr, [sp], #4)
   3c95c:	b	3a0f8 <Mat_VarReadDataLinear4>
   3c960:	mvn	r0, #0
   3c964:	bx	lr
   3c968:	mov	r0, #1
   3c96c:	pop	{pc}		; (ldr pc, [sp], #4)

0003c970 <Mat_VarReadNextInfo>:
   3c970:	subs	r3, r0, #0
   3c974:	beq	3c994 <Mat_VarReadNextInfo+0x24>
   3c978:	ldr	r3, [r3, #16]
   3c97c:	cmp	r3, #16
   3c980:	beq	3c990 <Mat_VarReadNextInfo+0x20>
   3c984:	cmp	r3, #256	; 0x100
   3c988:	bne	3c994 <Mat_VarReadNextInfo+0x24>
   3c98c:	b	38984 <Mat_VarReadNextInfo5>
   3c990:	b	3a1f8 <Mat_VarReadNextInfo4>
   3c994:	mov	r0, #0
   3c998:	bx	lr

0003c99c <Mat_GetDir>:
   3c99c:	push	{r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3c9a0:	subs	r5, r1, #0
   3c9a4:	beq	3c9c0 <Mat_GetDir+0x24>
   3c9a8:	cmp	r0, #0
   3c9ac:	mov	r4, r0
   3c9b0:	bne	3c9cc <Mat_GetDir+0x30>
   3c9b4:	mov	r3, #0
   3c9b8:	str	r3, [r5]
   3c9bc:	mov	r5, r3
   3c9c0:	mov	r0, r5
   3c9c4:	add	sp, sp, #4
   3c9c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3c9cc:	ldr	r3, [r0, #16]
   3c9d0:	ldr	r6, [r0, #40]	; 0x28
   3c9d4:	cmp	r6, #0
   3c9d8:	bne	3cbb0 <Mat_GetDir+0x214>
   3c9dc:	cmp	r3, #512	; 0x200
   3c9e0:	bne	3ca98 <Mat_GetDir+0xfc>
   3c9e4:	ldr	r0, [r0, #36]	; 0x24
   3c9e8:	cmp	r0, #0
   3c9ec:	beq	3c9b4 <Mat_GetDir+0x18>
   3c9f0:	mov	r1, #4
   3c9f4:	ldr	r8, [r4, #32]
   3c9f8:	bl	140c <calloc@plt>
   3c9fc:	cmp	r0, #0
   3ca00:	mov	r7, r0
   3ca04:	str	r0, [r4, #40]	; 0x28
   3ca08:	bne	3ca24 <Mat_GetDir+0x88>
   3ca0c:	ldr	r0, [pc, #464]	; 3cbe4 <Mat_GetDir+0x248>
   3ca10:	str	r7, [r5]
   3ca14:	mov	r5, r7
   3ca18:	add	r0, pc, r0
   3ca1c:	bl	161c <Mat_Critical@plt>
   3ca20:	b	3c9c0 <Mat_GetDir+0x24>
   3ca24:	ldr	r9, [pc, #444]	; 3cbe8 <Mat_GetDir+0x24c>
   3ca28:	str	r6, [r4, #32]
   3ca2c:	add	r9, pc, r9
   3ca30:	ldrd	r2, [r4, #32]
   3ca34:	cmp	r2, r3
   3ca38:	bcs	3ca88 <Mat_GetDir+0xec>
   3ca3c:	mov	r0, r4
   3ca40:	bl	16b8 <Mat_VarReadNextInfo@plt>
   3ca44:	subs	r7, r0, #0
   3ca48:	beq	3ca7c <Mat_GetDir+0xe0>
   3ca4c:	ldr	r1, [r7, #36]	; 0x24
   3ca50:	cmp	r1, #0
   3ca54:	beq	3ca70 <Mat_GetDir+0xd4>
   3ca58:	ldr	fp, [r4, #40]	; 0x28
   3ca5c:	mov	r0, r9
   3ca60:	add	sl, r6, #1
   3ca64:	bl	1bfc <strdup_printf>
   3ca68:	str	r0, [fp, r6, lsl #2]
   3ca6c:	mov	r6, sl
   3ca70:	mov	r0, r7
   3ca74:	bl	158c <Mat_VarFree@plt>
   3ca78:	b	3ca30 <Mat_GetDir+0x94>
   3ca7c:	ldr	r0, [pc, #360]	; 3cbec <Mat_GetDir+0x250>
   3ca80:	add	r0, pc, r0
   3ca84:	bl	161c <Mat_Critical@plt>
   3ca88:	str	r8, [r4, #32]
   3ca8c:	str	r6, [r5]
   3ca90:	ldr	r5, [r4, #40]	; 0x28
   3ca94:	b	3c9c0 <Mat_GetDir+0x24>
   3ca98:	ldr	r0, [r0]
   3ca9c:	bl	14b4 <ftell@plt>
   3caa0:	cmn	r0, #1
   3caa4:	mov	r8, r0
   3caa8:	bne	3cac4 <Mat_GetDir+0x128>
   3caac:	ldr	r0, [pc, #316]	; 3cbf0 <Mat_GetDir+0x254>
   3cab0:	str	r6, [r5]
   3cab4:	mov	r5, r6
   3cab8:	add	r0, pc, r0
   3cabc:	bl	161c <Mat_Critical@plt>
   3cac0:	b	3c9c0 <Mat_GetDir+0x24>
   3cac4:	ldr	r9, [pc, #296]	; 3cbf4 <Mat_GetDir+0x258>
   3cac8:	mov	r2, r6
   3cacc:	ldr	r0, [r4]
   3cad0:	ldr	r1, [r4, #28]
   3cad4:	add	r9, pc, r9
   3cad8:	bl	1694 <fseek@plt>
   3cadc:	str	r6, [r4, #36]	; 0x24
   3cae0:	mov	r0, r4
   3cae4:	bl	16b8 <Mat_VarReadNextInfo@plt>
   3cae8:	subs	r7, r0, #0
   3caec:	beq	3cb94 <Mat_GetDir+0x1f8>
   3caf0:	ldr	r3, [r7, #36]	; 0x24
   3caf4:	cmp	r3, #0
   3caf8:	beq	3cb3c <Mat_GetDir+0x1a0>
   3cafc:	ldr	r0, [r4, #40]	; 0x28
   3cb00:	cmp	r0, #0
   3cb04:	bne	3cb58 <Mat_GetDir+0x1bc>
   3cb08:	mov	r0, #4
   3cb0c:	bl	1544 <malloc@plt>
   3cb10:	cmp	r0, #0
   3cb14:	mov	r6, r0
   3cb18:	beq	3cb6c <Mat_GetDir+0x1d0>
   3cb1c:	ldr	sl, [r4, #36]	; 0x24
   3cb20:	mov	r0, r9
   3cb24:	ldr	r1, [r7, #36]	; 0x24
   3cb28:	str	r6, [r4, #40]	; 0x28
   3cb2c:	add	r3, sl, #1
   3cb30:	str	r3, [r4, #36]	; 0x24
   3cb34:	bl	1bfc <strdup_printf>
   3cb38:	str	r0, [r6, sl, lsl #2]
   3cb3c:	mov	r0, r7
   3cb40:	bl	158c <Mat_VarFree@plt>
   3cb44:	ldr	r0, [r4]
   3cb48:	bl	1580 <feof@plt>
   3cb4c:	cmp	r0, #0
   3cb50:	beq	3cae0 <Mat_GetDir+0x144>
   3cb54:	b	3cb78 <Mat_GetDir+0x1dc>
   3cb58:	ldr	r1, [r4, #36]	; 0x24
   3cb5c:	add	r1, r1, #1
   3cb60:	lsl	r1, r1, #2
   3cb64:	bl	14d8 <realloc@plt>
   3cb68:	b	3cb10 <Mat_GetDir+0x174>
   3cb6c:	ldr	r0, [pc, #132]	; 3cbf8 <Mat_GetDir+0x25c>
   3cb70:	add	r0, pc, r0
   3cb74:	bl	161c <Mat_Critical@plt>
   3cb78:	mov	r2, #0
   3cb7c:	mov	r1, r8
   3cb80:	ldr	r0, [r4]
   3cb84:	bl	1694 <fseek@plt>
   3cb88:	ldr	r3, [r4, #36]	; 0x24
   3cb8c:	str	r3, [r5]
   3cb90:	b	3ca90 <Mat_GetDir+0xf4>
   3cb94:	ldr	r0, [r4]
   3cb98:	bl	1580 <feof@plt>
   3cb9c:	cmp	r0, #0
   3cba0:	bne	3cb44 <Mat_GetDir+0x1a8>
   3cba4:	ldr	r0, [pc, #80]	; 3cbfc <Mat_GetDir+0x260>
   3cba8:	add	r0, pc, r0
   3cbac:	b	3cb74 <Mat_GetDir+0x1d8>
   3cbb0:	cmp	r3, #512	; 0x200
   3cbb4:	moveq	r3, #0
   3cbb8:	bne	3cb88 <Mat_GetDir+0x1ec>
   3cbbc:	str	r3, [r5]
   3cbc0:	ldr	r3, [r5]
   3cbc4:	ldr	r2, [r4, #36]	; 0x24
   3cbc8:	cmp	r3, r2
   3cbcc:	bcs	3ca90 <Mat_GetDir+0xf4>
   3cbd0:	ldr	r2, [r6, r3, lsl #2]
   3cbd4:	cmp	r2, #0
   3cbd8:	beq	3ca90 <Mat_GetDir+0xf4>
   3cbdc:	add	r3, r3, #1
   3cbe0:	b	3cbbc <Mat_GetDir+0x220>
   3cbe4:	.word	0x00002a24
   3cbe8:	.word	0x00002937
   3cbec:	.word	0x00002186
   3cbf0:	.word	0x0000212d
   3cbf4:	.word	0x0000288f
   3cbf8:	.word	0x000028cc
   3cbfc:	.word	0x0000205e

0003cc00 <Mat_VarReadInfo>:
   3cc00:	push	{r4, r5, r6, r7, r8, lr}
   3cc04:	clz	r4, r1
   3cc08:	cmp	r0, #0
   3cc0c:	lsr	r4, r4, #5
   3cc10:	moveq	r4, #1
   3cc14:	cmp	r4, #0
   3cc18:	movne	r4, #0
   3cc1c:	bne	3cd04 <Mat_VarReadInfo+0x104>
   3cc20:	ldr	r3, [r0, #16]
   3cc24:	mov	r7, r1
   3cc28:	mov	r5, r0
   3cc2c:	cmp	r3, #512	; 0x200
   3cc30:	ldreq	r6, [r0, #32]
   3cc34:	streq	r4, [r0, #32]
   3cc38:	beq	3cce0 <Mat_VarReadInfo+0xe0>
   3cc3c:	ldr	r0, [r0]
   3cc40:	bl	14b4 <ftell@plt>
   3cc44:	cmn	r0, #1
   3cc48:	mov	r6, r0
   3cc4c:	beq	3cd3c <Mat_VarReadInfo+0x13c>
   3cc50:	mov	r2, r4
   3cc54:	ldr	r0, [r5]
   3cc58:	ldr	r1, [r5, #28]
   3cc5c:	bl	1694 <fseek@plt>
   3cc60:	mov	r0, r5
   3cc64:	bl	16b8 <Mat_VarReadNextInfo@plt>
   3cc68:	subs	r4, r0, #0
   3cc6c:	beq	3cd0c <Mat_VarReadInfo+0x10c>
   3cc70:	ldr	r0, [r4, #36]	; 0x24
   3cc74:	cmp	r0, #0
   3cc78:	beq	3cc8c <Mat_VarReadInfo+0x8c>
   3cc7c:	mov	r1, r7
   3cc80:	bl	1424 <strcmp@plt>
   3cc84:	cmp	r0, #0
   3cc88:	beq	3cd28 <Mat_VarReadInfo+0x128>
   3cc8c:	mov	r0, r4
   3cc90:	bl	158c <Mat_VarFree@plt>
   3cc94:	ldr	r0, [r5]
   3cc98:	bl	1580 <feof@plt>
   3cc9c:	cmp	r0, #0
   3cca0:	beq	3cc60 <Mat_VarReadInfo+0x60>
   3cca4:	mov	r4, #0
   3cca8:	b	3cd28 <Mat_VarReadInfo+0x128>
   3ccac:	mov	r0, r5
   3ccb0:	bl	16b8 <Mat_VarReadNextInfo@plt>
   3ccb4:	subs	r4, r0, #0
   3ccb8:	beq	3ccf4 <Mat_VarReadInfo+0xf4>
   3ccbc:	ldr	r0, [r4, #36]	; 0x24
   3ccc0:	cmp	r0, #0
   3ccc4:	beq	3ccd8 <Mat_VarReadInfo+0xd8>
   3ccc8:	mov	r1, r7
   3cccc:	bl	1424 <strcmp@plt>
   3ccd0:	cmp	r0, #0
   3ccd4:	beq	3cd00 <Mat_VarReadInfo+0x100>
   3ccd8:	mov	r0, r4
   3ccdc:	bl	158c <Mat_VarFree@plt>
   3cce0:	ldrd	r2, [r5, #32]
   3cce4:	cmp	r2, r3
   3cce8:	bcc	3ccac <Mat_VarReadInfo+0xac>
   3ccec:	mov	r4, #0
   3ccf0:	b	3cd00 <Mat_VarReadInfo+0x100>
   3ccf4:	ldr	r0, [pc, #80]	; 3cd4c <Mat_VarReadInfo+0x14c>
   3ccf8:	add	r0, pc, r0
   3ccfc:	bl	161c <Mat_Critical@plt>
   3cd00:	str	r6, [r5, #32]
   3cd04:	mov	r0, r4
   3cd08:	pop	{r4, r5, r6, r7, r8, pc}
   3cd0c:	ldr	r0, [r5]
   3cd10:	bl	1580 <feof@plt>
   3cd14:	cmp	r0, #0
   3cd18:	bne	3cc94 <Mat_VarReadInfo+0x94>
   3cd1c:	ldr	r0, [pc, #44]	; 3cd50 <Mat_VarReadInfo+0x150>
   3cd20:	add	r0, pc, r0
   3cd24:	bl	161c <Mat_Critical@plt>
   3cd28:	mov	r2, #0
   3cd2c:	mov	r1, r6
   3cd30:	ldr	r0, [r5]
   3cd34:	bl	1694 <fseek@plt>
   3cd38:	b	3cd04 <Mat_VarReadInfo+0x104>
   3cd3c:	ldr	r0, [pc, #16]	; 3cd54 <Mat_VarReadInfo+0x154>
   3cd40:	add	r0, pc, r0
   3cd44:	bl	161c <Mat_Critical@plt>
   3cd48:	b	3cd04 <Mat_VarReadInfo+0x104>
   3cd4c:	.word	0x00001f0e
   3cd50:	.word	0x00001ee6
   3cd54:	.word	0x00001ea5

0003cd58 <Mat_VarRead>:
   3cd58:	push	{r4, r5, r6, r7, r8, lr}
   3cd5c:	clz	r4, r1
   3cd60:	cmp	r0, #0
   3cd64:	lsr	r4, r4, #5
   3cd68:	moveq	r4, #1
   3cd6c:	cmp	r4, #0
   3cd70:	movne	r4, #0
   3cd74:	bne	3cdac <Mat_VarRead+0x54>
   3cd78:	ldr	r3, [r0, #16]
   3cd7c:	mov	r5, r0
   3cd80:	cmp	r3, #512	; 0x200
   3cd84:	beq	3cde8 <Mat_VarRead+0x90>
   3cd88:	ldr	r0, [r0]
   3cd8c:	mov	r6, r1
   3cd90:	bl	14b4 <ftell@plt>
   3cd94:	cmn	r0, #1
   3cd98:	mov	r7, r0
   3cd9c:	bne	3cdb4 <Mat_VarRead+0x5c>
   3cda0:	ldr	r0, [pc, #104]	; 3ce10 <Mat_VarRead+0xb8>
   3cda4:	add	r0, pc, r0
   3cda8:	bl	161c <Mat_Critical@plt>
   3cdac:	mov	r0, r4
   3cdb0:	pop	{r4, r5, r6, r7, r8, pc}
   3cdb4:	mov	r1, r6
   3cdb8:	mov	r0, r5
   3cdbc:	bl	14e4 <Mat_VarReadInfo@plt>
   3cdc0:	subs	r4, r0, #0
   3cdc4:	beq	3cdd4 <Mat_VarRead+0x7c>
   3cdc8:	mov	r1, r4
   3cdcc:	mov	r0, r5
   3cdd0:	bl	3a794 <ReadData>
   3cdd4:	mov	r2, #0
   3cdd8:	mov	r1, r7
   3cddc:	ldr	r0, [r5]
   3cde0:	bl	1694 <fseek@plt>
   3cde4:	b	3cdac <Mat_VarRead+0x54>
   3cde8:	ldr	r6, [r0, #32]
   3cdec:	str	r4, [r0, #32]
   3cdf0:	bl	14e4 <Mat_VarReadInfo@plt>
   3cdf4:	subs	r4, r0, #0
   3cdf8:	beq	3ce08 <Mat_VarRead+0xb0>
   3cdfc:	mov	r1, r4
   3ce00:	mov	r0, r5
   3ce04:	bl	3a794 <ReadData>
   3ce08:	str	r6, [r5, #32]
   3ce0c:	b	3cdac <Mat_VarRead+0x54>
   3ce10:	.word	0x00001e41

0003ce14 <Mat_VarReadNext>:
   3ce14:	ldr	r3, [r0, #16]
   3ce18:	push	{r4, r5, r6, lr}
   3ce1c:	mov	r5, r0
   3ce20:	cmp	r3, #512	; 0x200
   3ce24:	beq	3ce68 <Mat_VarReadNext+0x54>
   3ce28:	ldr	r0, [r0]
   3ce2c:	bl	1580 <feof@plt>
   3ce30:	subs	r4, r0, #0
   3ce34:	beq	3ce44 <Mat_VarReadNext+0x30>
   3ce38:	mov	r4, #0
   3ce3c:	mov	r0, r4
   3ce40:	pop	{r4, r5, r6, pc}
   3ce44:	ldr	r0, [r5]
   3ce48:	bl	14b4 <ftell@plt>
   3ce4c:	cmn	r0, #1
   3ce50:	mov	r6, r0
   3ce54:	bne	3ce6c <Mat_VarReadNext+0x58>
   3ce58:	ldr	r0, [pc, #76]	; 3ceac <Mat_VarReadNext+0x98>
   3ce5c:	add	r0, pc, r0
   3ce60:	bl	161c <Mat_Critical@plt>
   3ce64:	b	3ce3c <Mat_VarReadNext+0x28>
   3ce68:	mov	r6, #0
   3ce6c:	mov	r0, r5
   3ce70:	bl	16b8 <Mat_VarReadNextInfo@plt>
   3ce74:	subs	r4, r0, #0
   3ce78:	beq	3ce8c <Mat_VarReadNext+0x78>
   3ce7c:	mov	r1, r4
   3ce80:	mov	r0, r5
   3ce84:	bl	3a794 <ReadData>
   3ce88:	b	3ce3c <Mat_VarReadNext+0x28>
   3ce8c:	ldr	r3, [r5, #16]
   3ce90:	cmp	r3, #512	; 0x200
   3ce94:	beq	3ce38 <Mat_VarReadNext+0x24>
   3ce98:	mov	r2, r4
   3ce9c:	mov	r1, r6
   3cea0:	ldr	r0, [r5]
   3cea4:	bl	1694 <fseek@plt>
   3cea8:	b	3ce3c <Mat_VarReadNext+0x28>
   3ceac:	.word	0x00001d89

0003ceb0 <Mat_VarWriteInfo>:
   3ceb0:	ldr	r3, [r0, #16]
   3ceb4:	push	{r4, lr}
   3ceb8:	cmp	r3, #512	; 0x200
   3cebc:	beq	3cedc <Mat_VarWriteInfo+0x2c>
   3cec0:	ldr	r1, [pc, #32]	; 3cee8 <Mat_VarWriteInfo+0x38>
   3cec4:	add	r1, pc, r1
   3cec8:	ldr	r0, [pc, #28]	; 3ceec <Mat_VarWriteInfo+0x3c>
   3cecc:	add	r0, pc, r0
   3ced0:	bl	161c <Mat_Critical@plt>
   3ced4:	mov	r0, #1
   3ced8:	pop	{r4, pc}
   3cedc:	ldr	r1, [pc, #12]	; 3cef0 <Mat_VarWriteInfo+0x40>
   3cee0:	add	r1, pc, r1
   3cee4:	b	3cec8 <Mat_VarWriteInfo+0x18>
   3cee8:	.word	0x000025c3
   3ceec:	.word	0x000025c8
   3cef0:	.word	0x00002587

0003cef4 <Mat_VarWriteData>:
   3cef4:	ldr	r3, [r0, #16]
   3cef8:	push	{r4, lr}
   3cefc:	cmp	r3, #512	; 0x200
   3cf00:	beq	3cf20 <Mat_VarWriteData+0x2c>
   3cf04:	ldr	r1, [pc, #32]	; 3cf2c <Mat_VarWriteData+0x38>
   3cf08:	add	r1, pc, r1
   3cf0c:	ldr	r0, [pc, #28]	; 3cf30 <Mat_VarWriteData+0x3c>
   3cf10:	add	r0, pc, r0
   3cf14:	bl	161c <Mat_Critical@plt>
   3cf18:	mov	r0, #1
   3cf1c:	pop	{r4, pc}
   3cf20:	ldr	r1, [pc, #12]	; 3cf34 <Mat_VarWriteData+0x40>
   3cf24:	add	r1, pc, r1
   3cf28:	b	3cf0c <Mat_VarWriteData+0x18>
   3cf2c:	.word	0x0000257f
   3cf30:	.word	0x00002584
   3cf34:	.word	0x00002543

0003cf38 <Mat_VarWrite>:
   3cf38:	cmp	r1, #0
   3cf3c:	cmpne	r0, #0
   3cf40:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   3cf44:	mvneq	r5, #0
   3cf48:	beq	3cff8 <Mat_VarWrite+0xc0>
   3cf4c:	mov	r4, r0
   3cf50:	mov	r6, r1
   3cf54:	ldr	r3, [r0, #40]	; 0x28
   3cf58:	mov	r7, r2
   3cf5c:	cmp	r3, #0
   3cf60:	bne	3cf70 <Mat_VarWrite+0x38>
   3cf64:	add	r1, sp, #4
   3cf68:	str	r3, [sp, #4]
   3cf6c:	bl	15a4 <Mat_GetDir@plt>
   3cf70:	ldr	r9, [r4, #36]	; 0x24
   3cf74:	mov	r5, #0
   3cf78:	cmp	r9, r5
   3cf7c:	bne	3d004 <Mat_VarWrite+0xcc>
   3cf80:	ldr	r3, [r4, #16]
   3cf84:	cmp	r3, #256	; 0x100
   3cf88:	bne	3d048 <Mat_VarWrite+0x110>
   3cf8c:	mov	r2, r7
   3cf90:	mov	r1, r6
   3cf94:	mov	r0, r4
   3cf98:	bl	38188 <Mat_VarWrite5>
   3cf9c:	cmp	r0, #0
   3cfa0:	mov	r5, r0
   3cfa4:	bne	3cff8 <Mat_VarWrite+0xc0>
   3cfa8:	ldr	r0, [r4, #40]	; 0x28
   3cfac:	cmp	r0, #0
   3cfb0:	bne	3d06c <Mat_VarWrite+0x134>
   3cfb4:	mov	r0, #4
   3cfb8:	bl	1544 <malloc@plt>
   3cfbc:	cmp	r0, #0
   3cfc0:	mov	r7, r0
   3cfc4:	beq	3d080 <Mat_VarWrite+0x148>
   3cfc8:	ldr	r1, [r6, #36]	; 0x24
   3cfcc:	str	r0, [r4, #40]	; 0x28
   3cfd0:	ldr	r6, [r4, #36]	; 0x24
   3cfd4:	cmp	r1, #0
   3cfd8:	add	r3, r6, #1
   3cfdc:	str	r3, [r4, #36]	; 0x24
   3cfe0:	streq	r1, [r0, r6, lsl #2]
   3cfe4:	beq	3cff8 <Mat_VarWrite+0xc0>
   3cfe8:	ldr	r0, [pc, #164]	; 3d094 <Mat_VarWrite+0x15c>
   3cfec:	add	r0, pc, r0
   3cff0:	bl	1bfc <strdup_printf>
   3cff4:	str	r0, [r7, r6, lsl #2]
   3cff8:	mov	r0, r5
   3cffc:	add	sp, sp, #12
   3d000:	pop	{r4, r5, r6, r7, r8, r9, pc}
   3d004:	ldr	r3, [r4, #40]	; 0x28
   3d008:	ldr	r0, [r3, r5, lsl #2]
   3d00c:	cmp	r0, #0
   3d010:	beq	3d040 <Mat_VarWrite+0x108>
   3d014:	ldr	r8, [r6, #36]	; 0x24
   3d018:	mov	r1, r8
   3d01c:	bl	1424 <strcmp@plt>
   3d020:	cmp	r0, #0
   3d024:	bne	3d040 <Mat_VarWrite+0x108>
   3d028:	ldr	r0, [pc, #104]	; 3d098 <Mat_VarWrite+0x160>
   3d02c:	mov	r1, r8
   3d030:	add	r0, pc, r0
   3d034:	bl	161c <Mat_Critical@plt>
   3d038:	mov	r5, #1
   3d03c:	b	3cff8 <Mat_VarWrite+0xc0>
   3d040:	add	r5, r5, #1
   3d044:	b	3cf78 <Mat_VarWrite+0x40>
   3d048:	cmp	r3, #512	; 0x200
   3d04c:	beq	3d038 <Mat_VarWrite+0x100>
   3d050:	cmp	r3, #16
   3d054:	movne	r5, #2
   3d058:	bne	3cff8 <Mat_VarWrite+0xc0>
   3d05c:	mov	r1, r6
   3d060:	mov	r0, r4
   3d064:	bl	39138 <Mat_VarWrite4>
   3d068:	b	3cf9c <Mat_VarWrite+0x64>
   3d06c:	ldr	r1, [r4, #36]	; 0x24
   3d070:	add	r1, r1, #1
   3d074:	lsl	r1, r1, #2
   3d078:	bl	14d8 <realloc@plt>
   3d07c:	b	3cfbc <Mat_VarWrite+0x84>
   3d080:	ldr	r0, [pc, #20]	; 3d09c <Mat_VarWrite+0x164>
   3d084:	mov	r5, #3
   3d088:	add	r0, pc, r0
   3d08c:	bl	161c <Mat_Critical@plt>
   3d090:	b	3cff8 <Mat_VarWrite+0xc0>
   3d094:	.word	0x00002377
   3d098:	.word	0x000024a8
   3d09c:	.word	0x000023b4

0003d0a0 <Mat_VarDelete>:
   3d0a0:	ldr	r3, [pc, #728]	; 3d380 <Mat_VarDelete+0x2e0>
   3d0a4:	push	{r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
   3d0a8:	mov	r4, r0
   3d0ac:	mov	r2, sp
   3d0b0:	cmp	r1, #0
   3d0b4:	cmpne	r4, #0
   3d0b8:	add	r3, pc, r3
   3d0bc:	ldr	r0, [r3]
   3d0c0:	str	r0, [sp]
   3d0c4:	ldrh	r0, [r3, #4]
   3d0c8:	ldrb	r3, [r3, #6]
   3d0cc:	strh	r0, [r2, #4]
   3d0d0:	strb	r3, [r2, #6]
   3d0d4:	bne	3d0e0 <Mat_VarDelete+0x40>
   3d0d8:	mov	r6, #1
   3d0dc:	b	3d1c4 <Mat_VarDelete+0x124>
   3d0e0:	mov	r0, r2
   3d0e4:	mov	r5, r1
   3d0e8:	bl	155c <mktemp@plt>
   3d0ec:	subs	r7, r0, #0
   3d0f0:	beq	3d370 <Mat_VarDelete+0x2d0>
   3d0f4:	ldr	r2, [r4, #16]
   3d0f8:	cmp	r2, #16
   3d0fc:	beq	3d10c <Mat_VarDelete+0x6c>
   3d100:	cmp	r2, #512	; 0x200
   3d104:	moveq	r2, #512	; 0x200
   3d108:	movne	r2, #256	; 0x100
   3d10c:	mov	r0, r7
   3d110:	ldr	r1, [r4, #4]
   3d114:	bl	164c <Mat_CreateVer@plt>
   3d118:	subs	r6, r0, #0
   3d11c:	beq	3d0d8 <Mat_VarDelete+0x38>
   3d120:	mov	r0, r4
   3d124:	mov	sl, #1
   3d128:	bl	15ec <Mat_Rewind@plt>
   3d12c:	mov	r0, r4
   3d130:	bl	1418 <Mat_VarReadNext@plt>
   3d134:	subs	r8, r0, #0
   3d138:	bne	3d1d0 <Mat_VarDelete+0x130>
   3d13c:	mov	r0, r6
   3d140:	ldr	r5, [r6, #40]	; 0x28
   3d144:	str	r8, [r6, #40]	; 0x28
   3d148:	ldr	r8, [r6, #36]	; 0x24
   3d14c:	bl	1610 <Mat_Close@plt>
   3d150:	cmp	sl, #0
   3d154:	bne	3d348 <Mat_VarDelete+0x2a8>
   3d158:	ldr	r0, [pc, #548]	; 3d384 <Mat_VarDelete+0x2e4>
   3d15c:	ldr	r1, [r4, #12]
   3d160:	add	r0, pc, r0
   3d164:	bl	1bfc <strdup_printf>
   3d168:	mov	r9, r0
   3d16c:	ldr	r0, [r4]
   3d170:	cmp	r0, #0
   3d174:	beq	3d180 <Mat_VarDelete+0xe0>
   3d178:	bl	1634 <fclose@plt>
   3d17c:	str	sl, [r4]
   3d180:	mov	r1, r9
   3d184:	mov	r0, r7
   3d188:	bl	3a570 <mat_copy>
   3d18c:	cmn	r0, #1
   3d190:	mov	r6, r0
   3d194:	bne	3d22c <Mat_VarDelete+0x18c>
   3d198:	cmp	r5, #0
   3d19c:	movne	r4, r5
   3d1a0:	addne	r8, r5, r8, lsl #2
   3d1a4:	bne	3d218 <Mat_VarDelete+0x178>
   3d1a8:	ldr	r0, [pc, #472]	; 3d388 <Mat_VarDelete+0x2e8>
   3d1ac:	mov	r2, r9
   3d1b0:	mov	r1, r7
   3d1b4:	add	r0, pc, r0
   3d1b8:	bl	161c <Mat_Critical@plt>
   3d1bc:	mov	r0, r9
   3d1c0:	bl	1478 <free@plt>
   3d1c4:	mov	r0, r6
   3d1c8:	add	sp, sp, #8
   3d1cc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   3d1d0:	mov	r1, r5
   3d1d4:	ldr	r0, [r8, #36]	; 0x24
   3d1d8:	bl	1424 <strcmp@plt>
   3d1dc:	subs	r9, r0, #0
   3d1e0:	beq	3d1f8 <Mat_VarDelete+0x158>
   3d1e4:	mov	r1, r8
   3d1e8:	mov	r0, r6
   3d1ec:	ldr	r2, [r8, #48]	; 0x30
   3d1f0:	mov	r9, sl
   3d1f4:	bl	149c <Mat_VarWrite@plt>
   3d1f8:	mov	r0, r8
   3d1fc:	mov	sl, r9
   3d200:	bl	158c <Mat_VarFree@plt>
   3d204:	b	3d12c <Mat_VarDelete+0x8c>
   3d208:	ldr	r0, [r4], #4
   3d20c:	cmp	r0, #0
   3d210:	beq	3d218 <Mat_VarDelete+0x178>
   3d214:	bl	1478 <free@plt>
   3d218:	cmp	r8, r4
   3d21c:	bne	3d208 <Mat_VarDelete+0x168>
   3d220:	mov	r0, r5
   3d224:	bl	1478 <free@plt>
   3d228:	b	3d1a8 <Mat_VarDelete+0x108>
   3d22c:	mov	r0, r7
   3d230:	bl	1658 <remove@plt>
   3d234:	cmn	r0, #1
   3d238:	mov	r6, r0
   3d23c:	bne	3d288 <Mat_VarDelete+0x1e8>
   3d240:	cmp	r5, #0
   3d244:	movne	r4, r5
   3d248:	addne	r8, r5, r8, lsl #2
   3d24c:	bne	3d274 <Mat_VarDelete+0x1d4>
   3d250:	ldr	r0, [pc, #308]	; 3d38c <Mat_VarDelete+0x2ec>
   3d254:	mov	r1, r7
   3d258:	add	r0, pc, r0
   3d25c:	bl	161c <Mat_Critical@plt>
   3d260:	b	3d1bc <Mat_VarDelete+0x11c>
   3d264:	ldr	r0, [r4], #4
   3d268:	cmp	r0, #0
   3d26c:	beq	3d274 <Mat_VarDelete+0x1d4>
   3d270:	bl	1478 <free@plt>
   3d274:	cmp	r8, r4
   3d278:	bne	3d264 <Mat_VarDelete+0x1c4>
   3d27c:	mov	r0, r5
   3d280:	bl	1478 <free@plt>
   3d284:	b	3d250 <Mat_VarDelete+0x1b0>
   3d288:	mov	r0, r9
   3d28c:	ldr	r1, [r4, #24]
   3d290:	bl	143c <Mat_Open@plt>
   3d294:	subs	sl, r0, #0
   3d298:	beq	3d338 <Mat_VarDelete+0x298>
   3d29c:	ldr	r0, [r4, #4]
   3d2a0:	cmp	r0, #0
   3d2a4:	beq	3d2ac <Mat_VarDelete+0x20c>
   3d2a8:	bl	1478 <free@plt>
   3d2ac:	ldr	r0, [r4, #8]
   3d2b0:	cmp	r0, #0
   3d2b4:	beq	3d2bc <Mat_VarDelete+0x21c>
   3d2b8:	bl	1478 <free@plt>
   3d2bc:	ldr	r0, [r4, #12]
   3d2c0:	cmp	r0, #0
   3d2c4:	beq	3d2cc <Mat_VarDelete+0x22c>
   3d2c8:	bl	1478 <free@plt>
   3d2cc:	ldr	r3, [r4, #40]	; 0x28
   3d2d0:	cmp	r3, #0
   3d2d4:	movne	r7, #0
   3d2d8:	bne	3d320 <Mat_VarDelete+0x280>
   3d2dc:	mov	r3, sl
   3d2e0:	mov	r2, r4
   3d2e4:	add	r1, sl, #36	; 0x24
   3d2e8:	ldr	r0, [r3], #4
   3d2ec:	cmp	r3, r1
   3d2f0:	str	r0, [r2], #4
   3d2f4:	bne	3d2e8 <Mat_VarDelete+0x248>
   3d2f8:	mov	r0, sl
   3d2fc:	bl	1478 <free@plt>
   3d300:	str	r8, [r4, #36]	; 0x24
   3d304:	str	r5, [r4, #40]	; 0x28
   3d308:	b	3d1bc <Mat_VarDelete+0x11c>
   3d30c:	ldr	r0, [r0, r7, lsl #2]
   3d310:	cmp	r0, #0
   3d314:	beq	3d31c <Mat_VarDelete+0x27c>
   3d318:	bl	1478 <free@plt>
   3d31c:	add	r7, r7, #1
   3d320:	ldr	r3, [r4, #36]	; 0x24
   3d324:	ldr	r0, [r4, #40]	; 0x28
   3d328:	cmp	r3, r7
   3d32c:	bhi	3d30c <Mat_VarDelete+0x26c>
   3d330:	bl	1478 <free@plt>
   3d334:	b	3d2dc <Mat_VarDelete+0x23c>
   3d338:	ldr	r0, [pc, #80]	; 3d390 <Mat_VarDelete+0x2f0>
   3d33c:	mov	r1, r9
   3d340:	add	r0, pc, r0
   3d344:	b	3d25c <Mat_VarDelete+0x1bc>
   3d348:	mov	r0, r7
   3d34c:	bl	1658 <remove@plt>
   3d350:	cmn	r0, #1
   3d354:	mov	r6, r0
   3d358:	bne	3d1c4 <Mat_VarDelete+0x124>
   3d35c:	ldr	r0, [pc, #48]	; 3d394 <Mat_VarDelete+0x2f4>
   3d360:	mov	r1, r7
   3d364:	add	r0, pc, r0
   3d368:	bl	161c <Mat_Critical@plt>
   3d36c:	b	3d1c4 <Mat_VarDelete+0x124>
   3d370:	ldr	r0, [pc, #32]	; 3d398 <Mat_VarDelete+0x2f8>
   3d374:	add	r0, pc, r0
   3d378:	bl	161c <Mat_Critical@plt>
   3d37c:	b	3d0d8 <Mat_VarDelete+0x38>
   3d380:	.word	0x000024b2
   3d384:	.word	0x00002203
   3d388:	.word	0x00002340
   3d38c:	.word	0x000022c0
   3d390:	.word	0x000021f1
   3d394:	.word	0x000021b4
   3d398:	.word	0x000021d4

0003d39c <Mat_VarWriteAppend>:
   3d39c:	cmp	r1, #0
   3d3a0:	cmpne	r0, #0
   3d3a4:	push	{r0, r1, r4, lr}
   3d3a8:	mvneq	r0, #0
   3d3ac:	beq	3d3dc <Mat_VarWriteAppend+0x40>
   3d3b0:	mov	r4, r0
   3d3b4:	ldr	r3, [r0, #40]	; 0x28
   3d3b8:	cmp	r3, #0
   3d3bc:	bne	3d3cc <Mat_VarWriteAppend+0x30>
   3d3c0:	add	r1, sp, #4
   3d3c4:	str	r3, [sp, #4]
   3d3c8:	bl	15a4 <Mat_GetDir@plt>
   3d3cc:	ldr	r3, [r4, #16]
   3d3d0:	cmp	r3, #512	; 0x200
   3d3d4:	moveq	r0, #1
   3d3d8:	movne	r0, #2
   3d3dc:	add	sp, sp, #8
   3d3e0:	pop	{r4, pc}

0003d3e4 <Mat_VarGetCell>:
   3d3e4:	mov	r3, #1
   3d3e8:	push	{r0, r1, r2, r4, r5, lr}
   3d3ec:	subs	r5, r0, #0
   3d3f0:	str	r3, [sp, #4]
   3d3f4:	bne	3d404 <Mat_VarGetCell+0x20>
   3d3f8:	mov	r0, #0
   3d3fc:	add	sp, sp, #12
   3d400:	pop	{r4, r5, pc}
   3d404:	mov	r4, r1
   3d408:	add	r1, sp, #4
   3d40c:	bl	3a864 <SafeMulDims>
   3d410:	cmp	r4, #0
   3d414:	blt	3d3f8 <Mat_VarGetCell+0x14>
   3d418:	ldr	r3, [sp, #4]
   3d41c:	cmp	r4, r3
   3d420:	bcs	3d3f8 <Mat_VarGetCell+0x14>
   3d424:	ldr	r3, [r5, #40]	; 0x28
   3d428:	ldr	r0, [r3, r4, lsl #2]
   3d42c:	b	3d3fc <Mat_VarGetCell+0x18>

0003d430 <Mat_VarGetCells>:
   3d430:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3d434:	sub	sp, sp, #148	; 0x94
   3d438:	mov	r6, r0
   3d43c:	add	fp, sp, #24
   3d440:	mov	r5, r1
   3d444:	mov	r7, r2
   3d448:	mov	r1, #0
   3d44c:	mov	r2, #40	; 0x28
   3d450:	mov	r0, fp
   3d454:	mov	r8, r3
   3d458:	bl	15f8 <memset@plt>
   3d45c:	mov	r2, #40	; 0x28
   3d460:	mov	r1, #0
   3d464:	add	r0, sp, #64	; 0x40
   3d468:	bl	15f8 <memset@plt>
   3d46c:	add	r3, sp, #104	; 0x68
   3d470:	mov	r2, #40	; 0x28
   3d474:	mov	r1, #0
   3d478:	mov	r0, r3
   3d47c:	str	r3, [sp]
   3d480:	bl	15f8 <memset@plt>
   3d484:	clz	r0, r5
   3d488:	cmp	r6, #0
   3d48c:	lsr	r0, r0, #5
   3d490:	moveq	r2, #1
   3d494:	movne	r2, r0
   3d498:	cmp	r2, #0
   3d49c:	movne	r0, #0
   3d4a0:	bne	3d640 <Mat_VarGetCells+0x210>
   3d4a4:	clz	r3, r8
   3d4a8:	cmp	r7, #0
   3d4ac:	lsr	r3, r3, #5
   3d4b0:	moveq	r0, #1
   3d4b4:	movne	r0, r3
   3d4b8:	cmp	r0, #0
   3d4bc:	movne	r0, r2
   3d4c0:	bne	3d640 <Mat_VarGetCells+0x210>
   3d4c4:	ldr	r9, [r6, #4]
   3d4c8:	cmp	r9, #9
   3d4cc:	bgt	3d640 <Mat_VarGetCells+0x210>
   3d4d0:	ldr	r0, [r6, #32]
   3d4d4:	ldr	r4, [r5]
   3d4d8:	ldr	sl, [r8]
   3d4dc:	ldr	r3, [r0]
   3d4e0:	str	r4, [sp, #24]
   3d4e4:	ldr	r2, [sp]
   3d4e8:	str	r3, [sp, #104]	; 0x68
   3d4ec:	mov	r3, #1
   3d4f0:	cmp	r9, r3
   3d4f4:	bgt	3d530 <Mat_VarGetCells+0x100>
   3d4f8:	lsl	r0, sl, #2
   3d4fc:	bl	1544 <malloc@plt>
   3d500:	sub	r3, r9, #1
   3d504:	mov	ip, #0
   3d508:	str	r3, [sp, #16]
   3d50c:	add	r3, r7, #4
   3d510:	str	r3, [sp, #20]
   3d514:	cmp	ip, sl
   3d518:	bge	3d640 <Mat_VarGetCells+0x210>
   3d51c:	ldr	r3, [r8]
   3d520:	add	r2, r0, ip, lsl #2
   3d524:	str	r3, [sp, #8]
   3d528:	mov	r3, #0
   3d52c:	b	3d578 <Mat_VarGetCells+0x148>
   3d530:	ldr	lr, [r0, r3, lsl #2]
   3d534:	ldr	r1, [r2]
   3d538:	ldr	ip, [r5, r3, lsl #2]
   3d53c:	mul	r1, r1, lr
   3d540:	str	ip, [fp, r3, lsl #2]
   3d544:	str	r1, [r2, #4]!
   3d548:	ldr	r1, [r8, r3, lsl #2]
   3d54c:	add	r3, r3, #1
   3d550:	mul	sl, r1, sl
   3d554:	ldr	r1, [r2, #-4]
   3d558:	mla	r4, r1, ip, r4
   3d55c:	b	3d4f0 <Mat_VarGetCells+0xc0>
   3d560:	ldr	r1, [r6, #40]	; 0x28
   3d564:	add	r3, r3, #1
   3d568:	ldr	r1, [r1, r4, lsl #2]
   3d56c:	str	r1, [r2], #4
   3d570:	ldr	r1, [r7]
   3d574:	add	r4, r4, r1
   3d578:	ldr	r1, [sp, #8]
   3d57c:	cmp	r1, r3
   3d580:	bgt	3d560 <Mat_VarGetCells+0x130>
   3d584:	ldr	r3, [sp, #68]	; 0x44
   3d588:	add	r1, sp, #64	; 0x40
   3d58c:	ldr	r2, [r7, #4]
   3d590:	ldr	r4, [r5]
   3d594:	add	r3, r3, #1
   3d598:	str	r3, [sp, #68]	; 0x44
   3d59c:	ldr	r3, [sp, #28]
   3d5a0:	str	r4, [sp, #24]
   3d5a4:	add	r3, r3, r2
   3d5a8:	ldr	r2, [sp]
   3d5ac:	str	r2, [sp, #4]
   3d5b0:	mov	r2, #1
   3d5b4:	str	r3, [sp, #28]
   3d5b8:	add	r3, sp, #28
   3d5bc:	cmp	r9, r2
   3d5c0:	ldrle	r3, [sp, #8]
   3d5c4:	addle	ip, ip, r3
   3d5c8:	ble	3d514 <Mat_VarGetCells+0xe4>
   3d5cc:	ldr	lr, [r8, r2, lsl #2]
   3d5d0:	ldr	fp, [r1, #4]
   3d5d4:	cmp	fp, lr
   3d5d8:	bne	3d618 <Mat_VarGetCells+0x1e8>
   3d5dc:	mov	lr, #0
   3d5e0:	str	lr, [r1, #4]
   3d5e4:	ldr	lr, [r5, r2, lsl #2]
   3d5e8:	str	lr, [r3]
   3d5ec:	ldr	lr, [sp, #16]
   3d5f0:	cmp	lr, r2
   3d5f4:	ble	3d618 <Mat_VarGetCells+0x1e8>
   3d5f8:	ldr	lr, [r1, #8]
   3d5fc:	ldr	fp, [sp, #20]
   3d600:	add	lr, lr, #1
   3d604:	str	lr, [r1, #8]
   3d608:	ldr	fp, [fp, r2, lsl #2]
   3d60c:	ldr	lr, [r3, #4]
   3d610:	add	lr, lr, fp
   3d614:	str	lr, [r3, #4]
   3d618:	ldr	lr, [r3], #4
   3d61c:	add	r2, r2, #1
   3d620:	add	r1, r1, #4
   3d624:	ldr	fp, [sp, #4]
   3d628:	str	lr, [sp, #12]
   3d62c:	ldr	lr, [fp], #4
   3d630:	str	fp, [sp, #4]
   3d634:	ldr	fp, [sp, #12]
   3d638:	mla	r4, lr, fp, r4
   3d63c:	b	3d5bc <Mat_VarGetCells+0x18c>
   3d640:	add	sp, sp, #148	; 0x94
   3d644:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003d648 <Mat_VarGetCellsLinear>:
   3d648:	cmp	r0, #0
   3d64c:	bxeq	lr
   3d650:	push	{r4, r5, r6, r7, r8, lr}
   3d654:	mov	r5, r2
   3d658:	mov	r4, r1
   3d65c:	mov	r7, r0
   3d660:	lsl	r0, r3, #2
   3d664:	mov	r6, r3
   3d668:	lsl	r5, r5, #2
   3d66c:	bl	1544 <malloc@plt>
   3d670:	lsl	r1, r4, #2
   3d674:	mov	r3, #0
   3d678:	cmp	r3, r6
   3d67c:	popge	{r4, r5, r6, r7, r8, pc}
   3d680:	ldr	r2, [r7, #40]	; 0x28
   3d684:	ldr	r2, [r2, r1]
   3d688:	add	r1, r1, r5
   3d68c:	str	r2, [r0, r3, lsl #2]
   3d690:	add	r3, r3, #1
   3d694:	b	3d678 <Mat_VarGetCellsLinear+0x30>

0003d698 <Mat_VarSetCell>:
   3d698:	mov	r3, #1
   3d69c:	push	{r0, r1, r4, r5, r6, lr}
   3d6a0:	str	r3, [sp, #4]
   3d6a4:	subs	r3, r0, #0
   3d6a8:	bne	3d6b8 <Mat_VarSetCell+0x20>
   3d6ac:	mov	r0, #0
   3d6b0:	add	sp, sp, #8
   3d6b4:	pop	{r4, r5, r6, pc}
   3d6b8:	ldr	ip, [r3, #4]
   3d6bc:	cmp	ip, #0
   3d6c0:	ble	3d6ac <Mat_VarSetCell+0x14>
   3d6c4:	mov	r4, r1
   3d6c8:	add	r1, sp, #4
   3d6cc:	mov	r5, r3
   3d6d0:	mov	r6, r2
   3d6d4:	bl	3a864 <SafeMulDims>
   3d6d8:	cmp	r4, #0
   3d6dc:	blt	3d6ac <Mat_VarSetCell+0x14>
   3d6e0:	ldr	r3, [sp, #4]
   3d6e4:	cmp	r4, r3
   3d6e8:	bcs	3d6ac <Mat_VarSetCell+0x14>
   3d6ec:	ldr	r3, [r5, #40]	; 0x28
   3d6f0:	ldr	r0, [r3, r4, lsl #2]
   3d6f4:	str	r6, [r3, r4, lsl #2]
   3d6f8:	b	3d6b0 <Mat_VarSetCell+0x18>

0003d6fc <Mat_VarCreateStruct>:
   3d6fc:	push	{r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
   3d700:	subs	r8, r2, #0
   3d704:	ldr	r5, [sp, #40]	; 0x28
   3d708:	bne	3d71c <Mat_VarCreateStruct+0x20>
   3d70c:	mov	r4, #0
   3d710:	mov	r0, r4
   3d714:	add	sp, sp, #8
   3d718:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   3d71c:	mov	r9, r3
   3d720:	mov	r6, r1
   3d724:	mov	r7, r0
   3d728:	bl	1508 <Mat_VarCalloc@plt>
   3d72c:	subs	r4, r0, #0
   3d730:	beq	3d70c <Mat_VarCreateStruct+0x10>
   3d734:	mov	r3, #0
   3d738:	cmp	r7, r3
   3d73c:	str	r3, [r4, #48]	; 0x30
   3d740:	beq	3d750 <Mat_VarCreateStruct+0x54>
   3d744:	mov	r0, r7
   3d748:	bl	14cc <strdup@plt>
   3d74c:	str	r0, [r4, #36]	; 0x24
   3d750:	lsl	r0, r6, #2
   3d754:	str	r6, [r4, #4]
   3d758:	mov	r7, #1
   3d75c:	bl	1544 <malloc@plt>
   3d760:	mov	r1, #0
   3d764:	str	r0, [r4, #32]
   3d768:	ldr	r3, [r4, #4]
   3d76c:	cmp	r3, r1
   3d770:	bgt	3d800 <Mat_VarCreateStruct+0x104>
   3d774:	mov	r3, #2
   3d778:	mov	r0, #22
   3d77c:	mov	r1, #4
   3d780:	cmp	r5, #0
   3d784:	strd	r0, [r4, #8]
   3d788:	str	r3, [r4, #16]
   3d78c:	beq	3d710 <Mat_VarCreateStruct+0x14>
   3d790:	ldr	r6, [r4, #52]	; 0x34
   3d794:	lsl	r0, r5, #2
   3d798:	str	r5, [r6, #4]
   3d79c:	bl	1544 <malloc@plt>
   3d7a0:	cmp	r0, #0
   3d7a4:	mov	r8, r0
   3d7a8:	str	r0, [r6, #8]
   3d7ac:	movne	r6, #0
   3d7b0:	bne	3d82c <Mat_VarCreateStruct+0x130>
   3d7b4:	mov	r0, r4
   3d7b8:	mov	r4, r8
   3d7bc:	bl	158c <Mat_VarFree@plt>
   3d7c0:	cmp	r4, #0
   3d7c4:	cmpne	r7, #0
   3d7c8:	beq	3d710 <Mat_VarCreateStruct+0x14>
   3d7cc:	mov	r2, r5
   3d7d0:	mov	r1, r7
   3d7d4:	add	r0, sp, #4
   3d7d8:	bl	3a8c4 <SafeMul>
   3d7dc:	mov	r0, r4
   3d7e0:	ldr	r1, [sp, #4]
   3d7e4:	ldr	r2, [r4, #12]
   3d7e8:	bl	3a8c4 <SafeMul>
   3d7ec:	ldr	r0, [sp, #4]
   3d7f0:	ldr	r1, [r4, #12]
   3d7f4:	bl	140c <calloc@plt>
   3d7f8:	str	r0, [r4, #40]	; 0x28
   3d7fc:	b	3d710 <Mat_VarCreateStruct+0x14>
   3d800:	ldr	r3, [r8, r1, lsl #2]
   3d804:	mul	r7, r3, r7
   3d808:	str	r3, [r0, r1, lsl #2]
   3d80c:	add	r1, r1, #1
   3d810:	b	3d768 <Mat_VarCreateStruct+0x6c>
   3d814:	mov	r0, sl
   3d818:	bl	14cc <strdup@plt>
   3d81c:	str	r0, [r8, r6, lsl #2]
   3d820:	add	r6, r6, #1
   3d824:	cmp	r5, r6
   3d828:	beq	3d7c0 <Mat_VarCreateStruct+0xc4>
   3d82c:	ldr	sl, [r9, r6, lsl #2]
   3d830:	cmp	sl, #0
   3d834:	bne	3d814 <Mat_VarCreateStruct+0x118>
   3d838:	mov	r0, r4
   3d83c:	mov	r4, sl
   3d840:	bl	158c <Mat_VarFree@plt>
   3d844:	b	3d7c0 <Mat_VarCreateStruct+0xc4>

0003d848 <Mat_VarAddStructField>:
   3d848:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3d84c:	mov	sl, r1
   3d850:	clz	r1, r1
   3d854:	lsr	r1, r1, #5
   3d858:	cmp	r0, #0
   3d85c:	mov	r3, #1
   3d860:	sub	sp, sp, #20
   3d864:	moveq	r4, r3
   3d868:	movne	r4, r1
   3d86c:	cmp	r4, #0
   3d870:	str	r3, [sp, #8]
   3d874:	beq	3d884 <Mat_VarAddStructField+0x3c>
   3d878:	mvn	r0, #0
   3d87c:	add	sp, sp, #20
   3d880:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3d884:	mov	r5, r0
   3d888:	add	r1, sp, #8
   3d88c:	bl	3a864 <SafeMulDims>
   3d890:	ldr	r3, [r5, #52]	; 0x34
   3d894:	ldr	r6, [r3, #4]
   3d898:	ldr	r0, [r3, #8]
   3d89c:	add	r9, r6, #1
   3d8a0:	lsl	r7, r9, #2
   3d8a4:	str	r9, [r3, #4]
   3d8a8:	mov	r1, r7
   3d8ac:	bl	14d8 <realloc@plt>
   3d8b0:	subs	r8, r0, #0
   3d8b4:	beq	3d878 <Mat_VarAddStructField+0x30>
   3d8b8:	ldr	r3, [r5, #52]	; 0x34
   3d8bc:	mov	r0, sl
   3d8c0:	str	r8, [r3, #8]
   3d8c4:	add	r8, r8, r7
   3d8c8:	bl	14cc <strdup@plt>
   3d8cc:	mov	r2, r9
   3d8d0:	ldr	r1, [sp, #8]
   3d8d4:	str	r0, [r8, #-4]
   3d8d8:	add	r0, sp, #12
   3d8dc:	bl	3a8c4 <SafeMul>
   3d8e0:	mov	r2, #4
   3d8e4:	mov	r0, r5
   3d8e8:	ldr	r1, [sp, #12]
   3d8ec:	bl	3a8c4 <SafeMul>
   3d8f0:	ldr	r0, [r5]
   3d8f4:	bl	1544 <malloc@plt>
   3d8f8:	subs	r8, r0, #0
   3d8fc:	streq	r8, [r5]
   3d900:	beq	3d878 <Mat_VarAddStructField+0x30>
   3d904:	ldr	r3, [sp, #8]
   3d908:	mvn	r1, #3
   3d90c:	mvn	lr, #7
   3d910:	mov	r2, r8
   3d914:	mov	sl, r4
   3d918:	ldr	r0, [r5, #40]	; 0x28
   3d91c:	mul	r1, r1, r6
   3d920:	mul	lr, lr, r6
   3d924:	str	r3, [sp]
   3d928:	sub	r3, r7, #4
   3d92c:	str	r1, [sp, #4]
   3d930:	mov	r1, r4
   3d934:	add	r3, r0, r3
   3d938:	ldr	ip, [sp]
   3d93c:	cmp	ip, r1
   3d940:	beq	3d97c <Mat_VarAddStructField+0x134>
   3d944:	ldr	ip, [sp, #4]
   3d948:	mov	r9, r2
   3d94c:	add	r4, r3, ip
   3d950:	mov	ip, r4
   3d954:	b	3d960 <Mat_VarAddStructField+0x118>
   3d958:	ldr	fp, [ip], #4
   3d95c:	str	fp, [r9], #4
   3d960:	cmp	ip, r3
   3d964:	bne	3d958 <Mat_VarAddStructField+0x110>
   3d968:	add	r1, r1, #1
   3d96c:	sub	r3, r4, lr
   3d970:	str	sl, [r2, r6, lsl #2]
   3d974:	add	r2, r2, r7
   3d978:	b	3d938 <Mat_VarAddStructField+0xf0>
   3d97c:	bl	1478 <free@plt>
   3d980:	mov	r0, #0
   3d984:	str	r8, [r5, #40]	; 0x28
   3d988:	b	3d87c <Mat_VarAddStructField+0x34>

0003d98c <Mat_VarGetNumberOfFields>:
   3d98c:	cmp	r0, #0
   3d990:	bxeq	lr
   3d994:	ldr	r3, [r0, #16]
   3d998:	cmp	r3, #2
   3d99c:	bne	3d9b0 <Mat_VarGetNumberOfFields+0x24>
   3d9a0:	ldr	r0, [r0, #52]	; 0x34
   3d9a4:	cmp	r0, #0
   3d9a8:	ldrne	r0, [r0, #4]
   3d9ac:	bx	lr
   3d9b0:	mov	r0, #0
   3d9b4:	bx	lr

0003d9b8 <Mat_VarGetStructFieldnames>:
   3d9b8:	cmp	r0, #0
   3d9bc:	bxeq	lr
   3d9c0:	ldr	r3, [r0, #16]
   3d9c4:	cmp	r3, #2
   3d9c8:	bne	3d9dc <Mat_VarGetStructFieldnames+0x24>
   3d9cc:	ldr	r0, [r0, #52]	; 0x34
   3d9d0:	cmp	r0, #0
   3d9d4:	ldrne	r0, [r0, #8]
   3d9d8:	bx	lr
   3d9dc:	mov	r0, #0
   3d9e0:	bx	lr

0003d9e4 <Mat_VarGetStructFieldByIndex>:
   3d9e4:	mov	r3, #1
   3d9e8:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   3d9ec:	str	r3, [sp, #4]
   3d9f0:	subs	r3, r0, #0
   3d9f4:	bne	3da04 <Mat_VarGetStructFieldByIndex+0x20>
   3d9f8:	mov	r0, #0
   3d9fc:	add	sp, sp, #12
   3da00:	pop	{r4, r5, r6, r7, pc}
   3da04:	ldr	ip, [r3, #16]
   3da08:	cmp	ip, #2
   3da0c:	bne	3d9f8 <Mat_VarGetStructFieldByIndex+0x14>
   3da10:	ldr	ip, [r3, #12]
   3da14:	cmp	ip, #0
   3da18:	beq	3d9f8 <Mat_VarGetStructFieldByIndex+0x14>
   3da1c:	mov	r5, r1
   3da20:	add	r1, sp, #4
   3da24:	mov	r7, r3
   3da28:	mov	r6, r2
   3da2c:	bl	3a864 <SafeMulDims>
   3da30:	ldr	r4, [sp, #4]
   3da34:	ldr	r3, [r7, #52]	; 0x34
   3da38:	cmp	r4, r6
   3da3c:	movhi	r0, #0
   3da40:	movls	r0, #1
   3da44:	cmp	r4, #0
   3da48:	ldr	r3, [r3, #4]
   3da4c:	movne	r4, r0
   3da50:	moveq	r4, #0
   3da54:	cmp	r4, #0
   3da58:	beq	3da6c <Mat_VarGetStructFieldByIndex+0x88>
   3da5c:	ldr	r0, [pc, #48]	; 3da94 <Mat_VarGetStructFieldByIndex+0xb0>
   3da60:	add	r0, pc, r0
   3da64:	bl	161c <Mat_Critical@plt>
   3da68:	b	3d9f8 <Mat_VarGetStructFieldByIndex+0x14>
   3da6c:	cmp	r3, #0
   3da70:	beq	3d9f8 <Mat_VarGetStructFieldByIndex+0x14>
   3da74:	cmp	r3, r5
   3da78:	ldrcs	r2, [r7, #40]	; 0x28
   3da7c:	mlacs	r3, r6, r3, r5
   3da80:	ldrcs	r0, [r2, r3, lsl #2]
   3da84:	bcs	3d9fc <Mat_VarGetStructFieldByIndex+0x18>
   3da88:	ldr	r0, [pc, #8]	; 3da98 <Mat_VarGetStructFieldByIndex+0xb4>
   3da8c:	add	r0, pc, r0
   3da90:	b	3da64 <Mat_VarGetStructFieldByIndex+0x80>
   3da94:	.word	0x00001e18
   3da98:	.word	0x00001e21

0003da9c <Mat_VarGetStructFieldByName>:
   3da9c:	mov	r3, #1
   3daa0:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   3daa4:	str	r3, [sp, #4]
   3daa8:	subs	r3, r0, #0
   3daac:	bne	3dabc <Mat_VarGetStructFieldByName+0x20>
   3dab0:	mov	r0, #0
   3dab4:	add	sp, sp, #12
   3dab8:	pop	{r4, r5, r6, r7, r8, r9, pc}
   3dabc:	ldr	ip, [r3, #16]
   3dac0:	cmp	ip, #2
   3dac4:	bne	3dab0 <Mat_VarGetStructFieldByName+0x14>
   3dac8:	ldr	ip, [r3, #12]
   3dacc:	cmp	ip, #0
   3dad0:	beq	3dab0 <Mat_VarGetStructFieldByName+0x14>
   3dad4:	mov	r8, r3
   3dad8:	mov	r7, r1
   3dadc:	add	r1, sp, #4
   3dae0:	mov	r6, r2
   3dae4:	bl	3a864 <SafeMulDims>
   3dae8:	ldr	r9, [r8, #52]	; 0x34
   3daec:	mov	r4, #0
   3daf0:	ldr	r5, [r9, #4]
   3daf4:	cmp	r4, r5
   3daf8:	blt	3db1c <Mat_VarGetStructFieldByName+0x80>
   3dafc:	mvn	r4, #0
   3db00:	ldr	r3, [sp, #4]
   3db04:	cmp	r3, r6
   3db08:	bhi	3db3c <Mat_VarGetStructFieldByName+0xa0>
   3db0c:	ldr	r0, [pc, #64]	; 3db54 <Mat_VarGetStructFieldByName+0xb8>
   3db10:	add	r0, pc, r0
   3db14:	bl	161c <Mat_Critical@plt>
   3db18:	b	3dab0 <Mat_VarGetStructFieldByName+0x14>
   3db1c:	ldr	r3, [r9, #8]
   3db20:	mov	r1, r7
   3db24:	ldr	r0, [r3, r4, lsl #2]
   3db28:	bl	1424 <strcmp@plt>
   3db2c:	cmp	r0, #0
   3db30:	beq	3db00 <Mat_VarGetStructFieldByName+0x64>
   3db34:	add	r4, r4, #1
   3db38:	b	3daf4 <Mat_VarGetStructFieldByName+0x58>
   3db3c:	cmn	r4, #1
   3db40:	beq	3dab0 <Mat_VarGetStructFieldByName+0x14>
   3db44:	ldr	r3, [r8, #40]	; 0x28
   3db48:	mla	r4, r6, r5, r4
   3db4c:	ldr	r0, [r3, r4, lsl #2]
   3db50:	b	3dab4 <Mat_VarGetStructFieldByName+0x18>
   3db54:	.word	0x00001d68

0003db58 <Mat_VarGetStructField>:
   3db58:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
   3db5c:	mov	r4, #1
   3db60:	mov	r5, r3
   3db64:	mov	r7, r1
   3db68:	add	r1, sp, #4
   3db6c:	mov	r6, r0
   3db70:	mov	r8, r2
   3db74:	str	r4, [sp, #4]
   3db78:	bl	3a864 <SafeMulDims>
   3db7c:	cmp	r5, #0
   3db80:	blt	3dbac <Mat_VarGetStructField+0x54>
   3db84:	ldr	r3, [r6, #52]	; 0x34
   3db88:	ldr	r0, [r3, #4]
   3db8c:	ldr	r3, [sp, #4]
   3db90:	cmp	r3, #0
   3db94:	beq	3dba0 <Mat_VarGetStructField+0x48>
   3db98:	cmp	r3, r5
   3db9c:	bls	3dbac <Mat_VarGetStructField+0x54>
   3dba0:	cmp	r0, #0
   3dba4:	movgt	r4, #0
   3dba8:	movle	r4, #1
   3dbac:	eor	r4, r4, #1
   3dbb0:	cmp	r8, #2
   3dbb4:	movne	r3, #0
   3dbb8:	andeq	r3, r4, #1
   3dbbc:	cmp	r3, #0
   3dbc0:	beq	3dbe8 <Mat_VarGetStructField+0x90>
   3dbc4:	ldr	r0, [r7]
   3dbc8:	cmp	r0, #0
   3dbcc:	beq	3dbe0 <Mat_VarGetStructField+0x88>
   3dbd0:	sub	r1, r0, #1
   3dbd4:	mov	r2, r5
   3dbd8:	mov	r0, r6
   3dbdc:	bl	1688 <Mat_VarGetStructFieldByIndex@plt>
   3dbe0:	add	sp, sp, #8
   3dbe4:	pop	{r4, r5, r6, r7, r8, pc}
   3dbe8:	cmp	r8, #1
   3dbec:	movne	r0, #0
   3dbf0:	andeq	r0, r4, #1
   3dbf4:	cmp	r0, #0
   3dbf8:	beq	3dbe0 <Mat_VarGetStructField+0x88>
   3dbfc:	mov	r2, r5
   3dc00:	mov	r1, r7
   3dc04:	mov	r0, r6
   3dc08:	bl	1670 <Mat_VarGetStructFieldByName@plt>
   3dc0c:	b	3dbe0 <Mat_VarGetStructField+0x88>

0003dc10 <Mat_VarGetStructs>:
   3dc10:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3dc14:	mov	sl, r2
   3dc18:	sub	sp, sp, #164	; 0xa4
   3dc1c:	mov	r2, #40	; 0x28
   3dc20:	mov	r6, r0
   3dc24:	mov	r7, r1
   3dc28:	add	r0, sp, r2
   3dc2c:	mov	r1, #0
   3dc30:	clz	r4, r7
   3dc34:	str	r3, [sp, #12]
   3dc38:	bl	15f8 <memset@plt>
   3dc3c:	mov	r2, #40	; 0x28
   3dc40:	mov	r1, #0
   3dc44:	lsr	r4, r4, #5
   3dc48:	add	r0, sp, #80	; 0x50
   3dc4c:	bl	15f8 <memset@plt>
   3dc50:	mov	r2, #40	; 0x28
   3dc54:	mov	r1, #0
   3dc58:	add	r0, sp, #120	; 0x78
   3dc5c:	bl	15f8 <memset@plt>
   3dc60:	cmp	r6, #0
   3dc64:	movne	r3, r4
   3dc68:	moveq	r3, #1
   3dc6c:	cmp	r3, #0
   3dc70:	bne	3dd70 <Mat_VarGetStructs+0x160>
   3dc74:	ldr	r2, [sp, #12]
   3dc78:	cmp	sl, #0
   3dc7c:	clz	r4, r2
   3dc80:	lsr	r4, r4, #5
   3dc84:	moveq	r4, #1
   3dc88:	cmp	r4, #0
   3dc8c:	movne	r4, r3
   3dc90:	bne	3dd74 <Mat_VarGetStructs+0x164>
   3dc94:	ldr	r3, [r6, #4]
   3dc98:	cmp	r3, #9
   3dc9c:	bgt	3dd74 <Mat_VarGetStructs+0x164>
   3dca0:	ldr	r3, [r6, #16]
   3dca4:	cmp	r3, #2
   3dca8:	bne	3dd74 <Mat_VarGetStructs+0x164>
   3dcac:	mov	r1, r4
   3dcb0:	mov	r0, r6
   3dcb4:	bl	16ac <Mat_VarDuplicate@plt>
   3dcb8:	ldr	r3, [sp, #200]	; 0xc8
   3dcbc:	mov	r4, r0
   3dcc0:	add	r8, sp, #40	; 0x28
   3dcc4:	ldr	ip, [r0, #32]
   3dcc8:	cmp	r3, #0
   3dccc:	moveq	r3, #1
   3dcd0:	streq	r3, [r0, #44]	; 0x2c
   3dcd4:	ldr	r0, [r6, #32]
   3dcd8:	ldr	r3, [r6, #52]	; 0x34
   3dcdc:	ldr	r5, [r7]
   3dce0:	ldr	r3, [r3, #4]
   3dce4:	str	r3, [sp, #8]
   3dce8:	ldr	r3, [r0]
   3dcec:	str	r3, [sp, #120]	; 0x78
   3dcf0:	ldr	r3, [sp, #12]
   3dcf4:	ldr	r3, [r3]
   3dcf8:	str	r3, [ip]
   3dcfc:	str	r3, [sp, #4]
   3dd00:	ldr	r3, [r7]
   3dd04:	str	r3, [sp, #40]	; 0x28
   3dd08:	add	r3, sp, #120	; 0x78
   3dd0c:	mov	r2, r3
   3dd10:	str	r3, [sp, #28]
   3dd14:	mov	r3, #1
   3dd18:	ldr	r1, [r6, #4]
   3dd1c:	cmp	r1, r3
   3dd20:	bgt	3dd80 <Mat_VarGetStructs+0x170>
   3dd24:	ldr	r3, [sp, #8]
   3dd28:	mul	r5, r3, r5
   3dd2c:	lsl	r3, r3, #2
   3dd30:	str	r3, [sp, #24]
   3dd34:	ldr	r3, [sp, #4]
   3dd38:	ldr	r2, [sp, #24]
   3dd3c:	mul	r0, r3, r2
   3dd40:	str	r0, [r4]
   3dd44:	bl	1544 <malloc@plt>
   3dd48:	cmp	r0, #0
   3dd4c:	mov	r3, r0
   3dd50:	str	r0, [sp, #16]
   3dd54:	movne	r3, #0
   3dd58:	addne	fp, sp, #80	; 0x50
   3dd5c:	str	r0, [r4, #40]	; 0x28
   3dd60:	strne	r3, [sp, #20]
   3dd64:	bne	3de90 <Mat_VarGetStructs+0x280>
   3dd68:	mov	r0, r4
   3dd6c:	bl	158c <Mat_VarFree@plt>
   3dd70:	mov	r4, #0
   3dd74:	mov	r0, r4
   3dd78:	add	sp, sp, #164	; 0xa4
   3dd7c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3dd80:	ldr	r9, [r0, r3, lsl #2]
   3dd84:	ldr	r1, [r2]
   3dd88:	ldr	lr, [r7, r3, lsl #2]
   3dd8c:	mul	r1, r1, r9
   3dd90:	ldr	r9, [sp, #4]
   3dd94:	str	lr, [r8, r3, lsl #2]
   3dd98:	str	r1, [r2, #4]!
   3dd9c:	ldr	r1, [sp, #12]
   3dda0:	ldr	r1, [r1, r3, lsl #2]
   3dda4:	mul	r9, r1, r9
   3dda8:	str	r1, [ip, r3, lsl #2]
   3ddac:	add	r3, r3, #1
   3ddb0:	str	r9, [sp, #4]
   3ddb4:	ldr	r9, [r2, #-4]
   3ddb8:	mla	r5, r9, lr, r5
   3ddbc:	b	3dd18 <Mat_VarGetStructs+0x108>
   3ddc0:	ldr	r1, [r6, #40]	; 0x28
   3ddc4:	ldr	r0, [r1, r2]
   3ddc8:	ldr	r1, [sp, #200]	; 0xc8
   3ddcc:	cmp	r1, #0
   3ddd0:	streq	r0, [r9, r8, lsl #2]
   3ddd4:	beq	3ddf4 <Mat_VarGetStructs+0x1e4>
   3ddd8:	mov	r1, #1
   3dddc:	str	r3, [sp, #32]
   3dde0:	str	r2, [sp, #36]	; 0x24
   3dde4:	bl	16ac <Mat_VarDuplicate@plt>
   3dde8:	ldr	r3, [sp, #32]
   3ddec:	str	r0, [r9, r8, lsl #2]
   3ddf0:	ldr	r2, [sp, #36]	; 0x24
   3ddf4:	add	r8, r8, #1
   3ddf8:	add	r2, r2, #4
   3ddfc:	ldr	r1, [sp, #8]
   3de00:	cmp	r8, r1
   3de04:	bne	3ddc0 <Mat_VarGetStructs+0x1b0>
   3de08:	ldr	r2, [sl]
   3de0c:	add	r3, r3, #1
   3de10:	mla	r5, r2, r1, r5
   3de14:	ldr	r2, [sp, #24]
   3de18:	add	r9, r9, r2
   3de1c:	ldr	r2, [sp, #12]
   3de20:	ldr	r8, [r2]
   3de24:	cmp	r8, r3
   3de28:	lslgt	r2, r5, #2
   3de2c:	movgt	r8, #0
   3de30:	bgt	3ddfc <Mat_VarGetStructs+0x1ec>
   3de34:	ldr	r2, [sl, #4]
   3de38:	add	r1, sp, #40	; 0x28
   3de3c:	ldr	r3, [sp, #84]	; 0x54
   3de40:	ldr	ip, [r6, #4]
   3de44:	ldr	r5, [r7]
   3de48:	add	r3, r3, #1
   3de4c:	ldr	lr, [sp, #28]
   3de50:	str	r3, [sp, #84]	; 0x54
   3de54:	ldr	r3, [sp, #44]	; 0x2c
   3de58:	str	r5, [sp, #40]	; 0x28
   3de5c:	add	r3, r3, r2
   3de60:	mov	r2, #1
   3de64:	str	r3, [sp, #44]	; 0x2c
   3de68:	sub	r3, ip, #1
   3de6c:	str	r3, [sp, #32]
   3de70:	mov	r3, r2
   3de74:	cmp	ip, r3
   3de78:	bgt	3deb4 <Mat_VarGetStructs+0x2a4>
   3de7c:	ldr	r3, [sp, #8]
   3de80:	mul	r5, r3, r5
   3de84:	ldr	r3, [sp, #20]
   3de88:	add	r3, r3, r8
   3de8c:	str	r3, [sp, #20]
   3de90:	ldr	r2, [sp, #4]
   3de94:	ldr	r3, [sp, #20]
   3de98:	cmp	r3, r2
   3de9c:	bcs	3dd74 <Mat_VarGetStructs+0x164>
   3dea0:	add	r1, sp, #16
   3dea4:	ldm	r1, {r1, r2, r3}
   3dea8:	mla	r9, r2, r3, r1
   3deac:	mov	r3, #0
   3deb0:	b	3de1c <Mat_VarGetStructs+0x20c>
   3deb4:	ldr	r0, [sp, #12]
   3deb8:	ldr	r9, [fp, r2, lsl #2]
   3debc:	ldr	r0, [r0, r3, lsl #2]
   3dec0:	add	r3, r3, #1
   3dec4:	cmp	r9, r0
   3dec8:	bne	3df04 <Mat_VarGetStructs+0x2f4>
   3decc:	mov	r0, #0
   3ded0:	str	r0, [fp, r2, lsl #2]
   3ded4:	ldr	r0, [r7, r2, lsl #2]
   3ded8:	str	r0, [r1, r2, lsl #2]
   3dedc:	ldr	r0, [sp, #32]
   3dee0:	cmp	r0, r2
   3dee4:	ble	3df04 <Mat_VarGetStructs+0x2f4>
   3dee8:	ldr	r0, [fp, r3, lsl #2]
   3deec:	ldr	r9, [sl, r3, lsl #2]
   3def0:	add	r0, r0, #1
   3def4:	str	r0, [fp, r3, lsl #2]
   3def8:	ldr	r0, [r1, r3, lsl #2]
   3defc:	add	r0, r0, r9
   3df00:	str	r0, [r1, r3, lsl #2]
   3df04:	ldr	r9, [r1, r2, lsl #2]
   3df08:	add	r2, r2, #1
   3df0c:	ldr	r0, [lr], #4
   3df10:	mla	r5, r9, r0, r5
   3df14:	b	3de74 <Mat_VarGetStructs+0x264>

0003df18 <Mat_VarGetStructsLinear>:
   3df18:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3df1c:	subs	r6, r0, #0
   3df20:	sub	sp, sp, #28
   3df24:	beq	3dfd4 <Mat_VarGetStructsLinear+0xbc>
   3df28:	ldr	ip, [r6, #4]
   3df2c:	cmp	ip, #10
   3df30:	bgt	3df90 <Mat_VarGetStructsLinear+0x78>
   3df34:	mov	r4, r1
   3df38:	mov	r1, #0
   3df3c:	mov	sl, r3
   3df40:	mov	r5, r2
   3df44:	bl	16ac <Mat_VarDuplicate@plt>
   3df48:	ldr	r3, [sp, #64]	; 0x40
   3df4c:	mov	r8, r6
   3df50:	mov	r6, r0
   3df54:	cmp	r3, #0
   3df58:	moveq	r3, #1
   3df5c:	streq	r3, [r0, #44]	; 0x2c
   3df60:	ldr	r3, [r8, #52]	; 0x34
   3df64:	ldr	r9, [r3, #4]
   3df68:	mul	r0, sl, r9
   3df6c:	lsl	r0, r0, #2
   3df70:	str	r0, [r6]
   3df74:	bl	1544 <malloc@plt>
   3df78:	cmp	r0, #0
   3df7c:	mov	r7, r0
   3df80:	str	r0, [r6, #40]	; 0x28
   3df84:	bne	3df98 <Mat_VarGetStructsLinear+0x80>
   3df88:	mov	r0, r6
   3df8c:	bl	158c <Mat_VarFree@plt>
   3df90:	mov	r6, #0
   3df94:	b	3dfd4 <Mat_VarGetStructsLinear+0xbc>
   3df98:	ldr	r3, [r6, #32]
   3df9c:	mov	r2, #1
   3dfa0:	sub	r5, r5, #1
   3dfa4:	mul	r4, r4, r9
   3dfa8:	mov	fp, #0
   3dfac:	str	sl, [r3]
   3dfb0:	str	r2, [r3, #4]
   3dfb4:	mul	r3, r9, r5
   3dfb8:	str	r3, [sp, #8]
   3dfbc:	lsl	r3, r9, #2
   3dfc0:	str	r3, [sp, #12]
   3dfc4:	bic	r3, r9, r9, asr #31
   3dfc8:	str	r3, [sp, #4]
   3dfcc:	cmp	fp, sl
   3dfd0:	blt	3dfe0 <Mat_VarGetStructsLinear+0xc8>
   3dfd4:	mov	r0, r6
   3dfd8:	add	sp, sp, #28
   3dfdc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3dfe0:	ldr	r3, [sp, #64]	; 0x40
   3dfe4:	mov	r2, r7
   3dfe8:	lsl	r5, r4, #2
   3dfec:	cmp	r3, #0
   3dff0:	bne	3e014 <Mat_VarGetStructsLinear+0xfc>
   3dff4:	cmp	r3, r9
   3dff8:	bge	3e020 <Mat_VarGetStructsLinear+0x108>
   3dffc:	ldr	r1, [r8, #40]	; 0x28
   3e000:	add	r3, r3, #1
   3e004:	ldr	r1, [r1, r5]
   3e008:	add	r5, r5, #4
   3e00c:	str	r1, [r2], #4
   3e010:	b	3dff4 <Mat_VarGetStructsLinear+0xdc>
   3e014:	mov	r3, #0
   3e018:	cmp	r3, r9
   3e01c:	blt	3e040 <Mat_VarGetStructsLinear+0x128>
   3e020:	ldr	r3, [sp, #4]
   3e024:	add	fp, fp, #1
   3e028:	add	r4, r3, r4
   3e02c:	ldr	r3, [sp, #8]
   3e030:	add	r4, r3, r4
   3e034:	ldr	r3, [sp, #12]
   3e038:	add	r7, r7, r3
   3e03c:	b	3dfcc <Mat_VarGetStructsLinear+0xb4>
   3e040:	ldr	r0, [r8, #40]	; 0x28
   3e044:	mov	r1, #1
   3e048:	strd	r2, [sp, #16]
   3e04c:	ldr	r0, [r0, r5]
   3e050:	add	r5, r5, #4
   3e054:	bl	16ac <Mat_VarDuplicate@plt>
   3e058:	ldrd	r2, [sp, #16]
   3e05c:	add	r3, r3, #1
   3e060:	str	r0, [r2], #4
   3e064:	b	3e018 <Mat_VarGetStructsLinear+0x100>

0003e068 <Mat_VarSetStructFieldByIndex>:
   3e068:	mov	ip, #1
   3e06c:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   3e070:	subs	r4, r0, #0
   3e074:	str	ip, [sp, #4]
   3e078:	bne	3e08c <Mat_VarSetStructFieldByIndex+0x24>
   3e07c:	mov	r5, #0
   3e080:	mov	r0, r5
   3e084:	add	sp, sp, #12
   3e088:	pop	{r4, r5, r6, r7, pc}
   3e08c:	ldr	ip, [r4, #16]
   3e090:	cmp	ip, #2
   3e094:	bne	3e07c <Mat_VarSetStructFieldByIndex+0x14>
   3e098:	ldr	ip, [r4, #40]	; 0x28
   3e09c:	cmp	ip, #0
   3e0a0:	beq	3e07c <Mat_VarSetStructFieldByIndex+0x14>
   3e0a4:	mov	r7, r1
   3e0a8:	add	r1, sp, #4
   3e0ac:	mov	r6, r3
   3e0b0:	mov	r5, r2
   3e0b4:	bl	3a864 <SafeMulDims>
   3e0b8:	ldr	r3, [r4, #52]	; 0x34
   3e0bc:	ldr	r0, [r3, #4]
   3e0c0:	ldr	r3, [sp, #4]
   3e0c4:	cmp	r3, r5
   3e0c8:	cmphi	r0, r7
   3e0cc:	bls	3e07c <Mat_VarSetStructFieldByIndex+0x14>
   3e0d0:	mla	r2, r5, r0, r7
   3e0d4:	ldr	r0, [r6, #36]	; 0x24
   3e0d8:	ldr	r3, [r4, #40]	; 0x28
   3e0dc:	cmp	r0, #0
   3e0e0:	ldr	r5, [r3, r2, lsl #2]
   3e0e4:	str	r6, [r3, r2, lsl #2]
   3e0e8:	beq	3e0f0 <Mat_VarSetStructFieldByIndex+0x88>
   3e0ec:	bl	1478 <free@plt>
   3e0f0:	ldr	r3, [r4, #52]	; 0x34
   3e0f4:	ldr	r3, [r3, #8]
   3e0f8:	ldr	r0, [r3, r7, lsl #2]
   3e0fc:	bl	14cc <strdup@plt>
   3e100:	str	r0, [r6, #36]	; 0x24
   3e104:	b	3e080 <Mat_VarSetStructFieldByIndex+0x18>

0003e108 <Mat_VarSetStructFieldByName>:
   3e108:	mov	ip, #1
   3e10c:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3e110:	subs	r4, r0, #0
   3e114:	str	ip, [sp, #4]
   3e118:	bne	3e12c <Mat_VarSetStructFieldByName+0x24>
   3e11c:	mov	r7, #0
   3e120:	mov	r0, r7
   3e124:	add	sp, sp, #12
   3e128:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3e12c:	ldr	ip, [r4, #16]
   3e130:	cmp	ip, #2
   3e134:	bne	3e11c <Mat_VarSetStructFieldByName+0x14>
   3e138:	ldr	ip, [r4, #40]	; 0x28
   3e13c:	cmp	ip, #0
   3e140:	beq	3e11c <Mat_VarSetStructFieldByName+0x14>
   3e144:	mov	r9, r1
   3e148:	add	r1, sp, #4
   3e14c:	mov	r6, r3
   3e150:	mov	r8, r2
   3e154:	bl	3a864 <SafeMulDims>
   3e158:	ldr	fp, [r4, #52]	; 0x34
   3e15c:	mov	r5, #0
   3e160:	ldr	r7, [fp, #4]
   3e164:	cmp	r5, r7
   3e168:	bge	3e11c <Mat_VarSetStructFieldByName+0x14>
   3e16c:	ldr	r3, [fp, #8]
   3e170:	mov	r1, r9
   3e174:	lsl	sl, r5, #2
   3e178:	ldr	r0, [r3, r5, lsl #2]
   3e17c:	bl	1424 <strcmp@plt>
   3e180:	cmp	r0, #0
   3e184:	addne	r5, r5, #1
   3e188:	bne	3e164 <Mat_VarSetStructFieldByName+0x5c>
   3e18c:	ldr	r3, [sp, #4]
   3e190:	cmp	r3, r8
   3e194:	bls	3e11c <Mat_VarSetStructFieldByName+0x14>
   3e198:	ldr	r0, [r6, #36]	; 0x24
   3e19c:	mla	r5, r8, r7, r5
   3e1a0:	ldr	r3, [r4, #40]	; 0x28
   3e1a4:	cmp	r0, #0
   3e1a8:	ldr	r7, [r3, r5, lsl #2]
   3e1ac:	str	r6, [r3, r5, lsl #2]
   3e1b0:	beq	3e1b8 <Mat_VarSetStructFieldByName+0xb0>
   3e1b4:	bl	1478 <free@plt>
   3e1b8:	ldr	r3, [r4, #52]	; 0x34
   3e1bc:	ldr	r3, [r3, #8]
   3e1c0:	ldr	r0, [r3, sl]
   3e1c4:	bl	14cc <strdup@plt>
   3e1c8:	str	r0, [r6, #36]	; 0x24
   3e1cc:	b	3e120 <Mat_VarSetStructFieldByName+0x18>

0003e1d0 <__aeabi_drsub>:
   3e1d0:	eor	r1, r1, #-2147483648	; 0x80000000
   3e1d4:	b	3e1dc <__adddf3>

0003e1d8 <__aeabi_dsub>:
   3e1d8:	eor	r3, r3, #-2147483648	; 0x80000000

0003e1dc <__adddf3>:
   3e1dc:	push	{r4, r5, lr}
   3e1e0:	lsl	r4, r1, #1
   3e1e4:	lsl	r5, r3, #1
   3e1e8:	teq	r4, r5
   3e1ec:	teqeq	r0, r2
   3e1f0:	orrsne	ip, r4, r0
   3e1f4:	orrsne	ip, r5, r2
   3e1f8:	mvnsne	ip, r4, asr #21
   3e1fc:	mvnsne	ip, r5, asr #21
   3e200:	beq	3e3ec <__adddf3+0x210>
   3e204:	lsr	r4, r4, #21
   3e208:	rsbs	r5, r4, r5, lsr #21
   3e20c:	rsblt	r5, r5, #0
   3e210:	ble	3e230 <__adddf3+0x54>
   3e214:	add	r4, r4, r5
   3e218:	eor	r2, r0, r2
   3e21c:	eor	r3, r1, r3
   3e220:	eor	r0, r2, r0
   3e224:	eor	r1, r3, r1
   3e228:	eor	r2, r0, r2
   3e22c:	eor	r3, r1, r3
   3e230:	cmp	r5, #54	; 0x36
   3e234:	pophi	{r4, r5, pc}
   3e238:	tst	r1, #-2147483648	; 0x80000000
   3e23c:	lsl	r1, r1, #12
   3e240:	mov	ip, #1048576	; 0x100000
   3e244:	orr	r1, ip, r1, lsr #12
   3e248:	beq	3e254 <__adddf3+0x78>
   3e24c:	rsbs	r0, r0, #0
   3e250:	rsc	r1, r1, #0
   3e254:	tst	r3, #-2147483648	; 0x80000000
   3e258:	lsl	r3, r3, #12
   3e25c:	orr	r3, ip, r3, lsr #12
   3e260:	beq	3e26c <__adddf3+0x90>
   3e264:	rsbs	r2, r2, #0
   3e268:	rsc	r3, r3, #0
   3e26c:	teq	r4, r5
   3e270:	beq	3e3d4 <__adddf3+0x1f8>
   3e274:	sub	r4, r4, #1
   3e278:	rsbs	lr, r5, #32
   3e27c:	blt	3e298 <__adddf3+0xbc>
   3e280:	lsl	ip, r2, lr
   3e284:	adds	r0, r0, r2, lsr r5
   3e288:	adc	r1, r1, #0
   3e28c:	adds	r0, r0, r3, lsl lr
   3e290:	adcs	r1, r1, r3, asr r5
   3e294:	b	3e2b4 <__adddf3+0xd8>
   3e298:	sub	r5, r5, #32
   3e29c:	add	lr, lr, #32
   3e2a0:	cmp	r2, #1
   3e2a4:	lsl	ip, r3, lr
   3e2a8:	orrcs	ip, ip, #2
   3e2ac:	adds	r0, r0, r3, asr r5
   3e2b0:	adcs	r1, r1, r3, asr #31
   3e2b4:	and	r5, r1, #-2147483648	; 0x80000000
   3e2b8:	bpl	3e2c8 <__adddf3+0xec>
   3e2bc:	rsbs	ip, ip, #0
   3e2c0:	rscs	r0, r0, #0
   3e2c4:	rsc	r1, r1, #0
   3e2c8:	cmp	r1, #1048576	; 0x100000
   3e2cc:	bcc	3e30c <__adddf3+0x130>
   3e2d0:	cmp	r1, #2097152	; 0x200000
   3e2d4:	bcc	3e2f4 <__adddf3+0x118>
   3e2d8:	lsrs	r1, r1, #1
   3e2dc:	rrxs	r0, r0
   3e2e0:	rrx	ip, ip
   3e2e4:	add	r4, r4, #1
   3e2e8:	lsl	r2, r4, #21
   3e2ec:	cmn	r2, #4194304	; 0x400000
   3e2f0:	bcs	3e44c <__adddf3+0x270>
   3e2f4:	cmp	ip, #-2147483648	; 0x80000000
   3e2f8:	lsrseq	ip, r0, #1
   3e2fc:	adcs	r0, r0, #0
   3e300:	adc	r1, r1, r4, lsl #20
   3e304:	orr	r1, r1, r5
   3e308:	pop	{r4, r5, pc}
   3e30c:	lsls	ip, ip, #1
   3e310:	adcs	r0, r0, r0
   3e314:	adc	r1, r1, r1
   3e318:	tst	r1, #1048576	; 0x100000
   3e31c:	sub	r4, r4, #1
   3e320:	bne	3e2f4 <__adddf3+0x118>
   3e324:	teq	r1, #0
   3e328:	moveq	r1, r0
   3e32c:	moveq	r0, #0
   3e330:	clz	r3, r1
   3e334:	addeq	r3, r3, #32
   3e338:	sub	r3, r3, #11
   3e33c:	subs	r2, r3, #32
   3e340:	bge	3e364 <__adddf3+0x188>
   3e344:	adds	r2, r2, #12
   3e348:	ble	3e360 <__adddf3+0x184>
   3e34c:	add	ip, r2, #20
   3e350:	rsb	r2, r2, #12
   3e354:	lsl	r0, r1, ip
   3e358:	lsr	r1, r1, r2
   3e35c:	b	3e374 <__adddf3+0x198>
   3e360:	add	r2, r2, #20
   3e364:	rsble	ip, r2, #32
   3e368:	lsl	r1, r1, r2
   3e36c:	orrle	r1, r1, r0, lsr ip
   3e370:	lslle	r0, r0, r2
   3e374:	subs	r4, r4, r3
   3e378:	addge	r1, r1, r4, lsl #20
   3e37c:	orrge	r1, r1, r5
   3e380:	popge	{r4, r5, pc}
   3e384:	mvn	r4, r4
   3e388:	subs	r4, r4, #31
   3e38c:	bge	3e3c8 <__adddf3+0x1ec>
   3e390:	adds	r4, r4, #12
   3e394:	bgt	3e3b0 <__adddf3+0x1d4>
   3e398:	add	r4, r4, #20
   3e39c:	rsb	r2, r4, #32
   3e3a0:	lsr	r0, r0, r4
   3e3a4:	orr	r0, r0, r1, lsl r2
   3e3a8:	orr	r1, r5, r1, lsr r4
   3e3ac:	pop	{r4, r5, pc}
   3e3b0:	rsb	r4, r4, #12
   3e3b4:	rsb	r2, r4, #32
   3e3b8:	lsr	r0, r0, r2
   3e3bc:	orr	r0, r0, r1, lsl r4
   3e3c0:	mov	r1, r5
   3e3c4:	pop	{r4, r5, pc}
   3e3c8:	lsr	r0, r1, r4
   3e3cc:	mov	r1, r5
   3e3d0:	pop	{r4, r5, pc}
   3e3d4:	teq	r4, #0
   3e3d8:	eor	r3, r3, #1048576	; 0x100000
   3e3dc:	eoreq	r1, r1, #1048576	; 0x100000
   3e3e0:	addeq	r4, r4, #1
   3e3e4:	subne	r5, r5, #1
   3e3e8:	b	3e274 <__adddf3+0x98>
   3e3ec:	mvns	ip, r4, asr #21
   3e3f0:	mvnsne	ip, r5, asr #21
   3e3f4:	beq	3e45c <__adddf3+0x280>
   3e3f8:	teq	r4, r5
   3e3fc:	teqeq	r0, r2
   3e400:	beq	3e414 <__adddf3+0x238>
   3e404:	orrs	ip, r4, r0
   3e408:	moveq	r1, r3
   3e40c:	moveq	r0, r2
   3e410:	pop	{r4, r5, pc}
   3e414:	teq	r1, r3
   3e418:	movne	r1, #0
   3e41c:	movne	r0, #0
   3e420:	popne	{r4, r5, pc}
   3e424:	lsrs	ip, r4, #21
   3e428:	bne	3e43c <__adddf3+0x260>
   3e42c:	lsls	r0, r0, #1
   3e430:	adcs	r1, r1, r1
   3e434:	orrcs	r1, r1, #-2147483648	; 0x80000000
   3e438:	pop	{r4, r5, pc}
   3e43c:	adds	r4, r4, #4194304	; 0x400000
   3e440:	addcc	r1, r1, #1048576	; 0x100000
   3e444:	popcc	{r4, r5, pc}
   3e448:	and	r5, r1, #-2147483648	; 0x80000000
   3e44c:	orr	r1, r5, #2130706432	; 0x7f000000
   3e450:	orr	r1, r1, #15728640	; 0xf00000
   3e454:	mov	r0, #0
   3e458:	pop	{r4, r5, pc}
   3e45c:	mvns	ip, r4, asr #21
   3e460:	movne	r1, r3
   3e464:	movne	r0, r2
   3e468:	mvnseq	ip, r5, asr #21
   3e46c:	movne	r3, r1
   3e470:	movne	r2, r0
   3e474:	orrs	r4, r0, r1, lsl #12
   3e478:	orrseq	r5, r2, r3, lsl #12
   3e47c:	teqeq	r1, r3
   3e480:	orrne	r1, r1, #524288	; 0x80000
   3e484:	pop	{r4, r5, pc}

0003e488 <__aeabi_ui2d>:
   3e488:	teq	r0, #0
   3e48c:	moveq	r1, #0
   3e490:	bxeq	lr
   3e494:	push	{r4, r5, lr}
   3e498:	mov	r4, #1024	; 0x400
   3e49c:	add	r4, r4, #50	; 0x32
   3e4a0:	mov	r5, #0
   3e4a4:	mov	r1, #0
   3e4a8:	b	3e324 <__adddf3+0x148>

0003e4ac <__aeabi_i2d>:
   3e4ac:	teq	r0, #0
   3e4b0:	moveq	r1, #0
   3e4b4:	bxeq	lr
   3e4b8:	push	{r4, r5, lr}
   3e4bc:	mov	r4, #1024	; 0x400
   3e4c0:	add	r4, r4, #50	; 0x32
   3e4c4:	ands	r5, r0, #-2147483648	; 0x80000000
   3e4c8:	rsbmi	r0, r0, #0
   3e4cc:	mov	r1, #0
   3e4d0:	b	3e324 <__adddf3+0x148>

0003e4d4 <__aeabi_f2d>:
   3e4d4:	lsls	r2, r0, #1
   3e4d8:	asr	r1, r2, #3
   3e4dc:	rrx	r1, r1
   3e4e0:	lsl	r0, r2, #28
   3e4e4:	andsne	r3, r2, #-16777216	; 0xff000000
   3e4e8:	teqne	r3, #-16777216	; 0xff000000
   3e4ec:	eorne	r1, r1, #939524096	; 0x38000000
   3e4f0:	bxne	lr
   3e4f4:	bics	r2, r2, #-16777216	; 0xff000000
   3e4f8:	bxeq	lr
   3e4fc:	teq	r3, #-16777216	; 0xff000000
   3e500:	orreq	r1, r1, #524288	; 0x80000
   3e504:	bxeq	lr
   3e508:	push	{r4, r5, lr}
   3e50c:	mov	r4, #896	; 0x380
   3e510:	and	r5, r1, #-2147483648	; 0x80000000
   3e514:	bic	r1, r1, #-2147483648	; 0x80000000
   3e518:	b	3e324 <__adddf3+0x148>

0003e51c <__aeabi_ul2d>:
   3e51c:	orrs	r2, r0, r1
   3e520:	bxeq	lr
   3e524:	push	{r4, r5, lr}
   3e528:	mov	r5, #0
   3e52c:	b	3e54c <__aeabi_l2d+0x1c>

0003e530 <__aeabi_l2d>:
   3e530:	orrs	r2, r0, r1
   3e534:	bxeq	lr
   3e538:	push	{r4, r5, lr}
   3e53c:	ands	r5, r1, #-2147483648	; 0x80000000
   3e540:	bpl	3e54c <__aeabi_l2d+0x1c>
   3e544:	rsbs	r0, r0, #0
   3e548:	rsc	r1, r1, #0
   3e54c:	mov	r4, #1024	; 0x400
   3e550:	add	r4, r4, #50	; 0x32
   3e554:	lsrs	ip, r1, #22
   3e558:	beq	3e2c8 <__adddf3+0xec>
   3e55c:	mov	r2, #3
   3e560:	lsrs	ip, ip, #3
   3e564:	addne	r2, r2, #3
   3e568:	lsrs	ip, ip, #3
   3e56c:	addne	r2, r2, #3
   3e570:	add	r2, r2, ip, lsr #3
   3e574:	rsb	r3, r2, #32
   3e578:	lsl	ip, r0, r3
   3e57c:	lsr	r0, r0, r2
   3e580:	orr	r0, r0, r1, lsl r3
   3e584:	lsr	r1, r1, r2
   3e588:	add	r4, r4, r2
   3e58c:	b	3e2c8 <__adddf3+0xec>

0003e590 <__aeabi_frsub>:
   3e590:	eor	r0, r0, #-2147483648	; 0x80000000
   3e594:	b	3e59c <__addsf3>

0003e598 <__aeabi_fsub>:
   3e598:	eor	r1, r1, #-2147483648	; 0x80000000

0003e59c <__addsf3>:
   3e59c:	lsls	r2, r0, #1
   3e5a0:	lslsne	r3, r1, #1
   3e5a4:	teqne	r2, r3
   3e5a8:	mvnsne	ip, r2, asr #24
   3e5ac:	mvnsne	ip, r3, asr #24
   3e5b0:	beq	3e6a8 <__addsf3+0x10c>
   3e5b4:	lsr	r2, r2, #24
   3e5b8:	rsbs	r3, r2, r3, lsr #24
   3e5bc:	addgt	r2, r2, r3
   3e5c0:	eorgt	r1, r0, r1
   3e5c4:	eorgt	r0, r1, r0
   3e5c8:	eorgt	r1, r0, r1
   3e5cc:	rsblt	r3, r3, #0
   3e5d0:	cmp	r3, #25
   3e5d4:	bxhi	lr
   3e5d8:	tst	r0, #-2147483648	; 0x80000000
   3e5dc:	orr	r0, r0, #8388608	; 0x800000
   3e5e0:	bic	r0, r0, #-16777216	; 0xff000000
   3e5e4:	rsbne	r0, r0, #0
   3e5e8:	tst	r1, #-2147483648	; 0x80000000
   3e5ec:	orr	r1, r1, #8388608	; 0x800000
   3e5f0:	bic	r1, r1, #-16777216	; 0xff000000
   3e5f4:	rsbne	r1, r1, #0
   3e5f8:	teq	r2, r3
   3e5fc:	beq	3e690 <__addsf3+0xf4>
   3e600:	sub	r2, r2, #1
   3e604:	adds	r0, r0, r1, asr r3
   3e608:	rsb	r3, r3, #32
   3e60c:	lsl	r1, r1, r3
   3e610:	and	r3, r0, #-2147483648	; 0x80000000
   3e614:	bpl	3e620 <__addsf3+0x84>
   3e618:	rsbs	r1, r1, #0
   3e61c:	rsc	r0, r0, #0
   3e620:	cmp	r0, #8388608	; 0x800000
   3e624:	bcc	3e658 <__addsf3+0xbc>
   3e628:	cmp	r0, #16777216	; 0x1000000
   3e62c:	bcc	3e644 <__addsf3+0xa8>
   3e630:	lsrs	r0, r0, #1
   3e634:	rrx	r1, r1
   3e638:	add	r2, r2, #1
   3e63c:	cmp	r2, #254	; 0xfe
   3e640:	bcs	3e6fc <__addsf3+0x160>
   3e644:	cmp	r1, #-2147483648	; 0x80000000
   3e648:	adc	r0, r0, r2, lsl #23
   3e64c:	biceq	r0, r0, #1
   3e650:	orr	r0, r0, r3
   3e654:	bx	lr
   3e658:	lsls	r1, r1, #1
   3e65c:	adc	r0, r0, r0
   3e660:	tst	r0, #8388608	; 0x800000
   3e664:	sub	r2, r2, #1
   3e668:	bne	3e644 <__addsf3+0xa8>
   3e66c:	clz	ip, r0
   3e670:	sub	ip, ip, #8
   3e674:	subs	r2, r2, ip
   3e678:	lsl	r0, r0, ip
   3e67c:	addge	r0, r0, r2, lsl #23
   3e680:	rsblt	r2, r2, #0
   3e684:	orrge	r0, r0, r3
   3e688:	orrlt	r0, r3, r0, lsr r2
   3e68c:	bx	lr
   3e690:	teq	r2, #0
   3e694:	eor	r1, r1, #8388608	; 0x800000
   3e698:	eoreq	r0, r0, #8388608	; 0x800000
   3e69c:	addeq	r2, r2, #1
   3e6a0:	subne	r3, r3, #1
   3e6a4:	b	3e600 <__addsf3+0x64>
   3e6a8:	lsl	r3, r1, #1
   3e6ac:	mvns	ip, r2, asr #24
   3e6b0:	mvnsne	ip, r3, asr #24
   3e6b4:	beq	3e708 <__addsf3+0x16c>
   3e6b8:	teq	r2, r3
   3e6bc:	beq	3e6cc <__addsf3+0x130>
   3e6c0:	teq	r2, #0
   3e6c4:	moveq	r0, r1
   3e6c8:	bx	lr
   3e6cc:	teq	r0, r1
   3e6d0:	movne	r0, #0
   3e6d4:	bxne	lr
   3e6d8:	tst	r2, #-16777216	; 0xff000000
   3e6dc:	bne	3e6ec <__addsf3+0x150>
   3e6e0:	lsls	r0, r0, #1
   3e6e4:	orrcs	r0, r0, #-2147483648	; 0x80000000
   3e6e8:	bx	lr
   3e6ec:	adds	r2, r2, #33554432	; 0x2000000
   3e6f0:	addcc	r0, r0, #8388608	; 0x800000
   3e6f4:	bxcc	lr
   3e6f8:	and	r3, r0, #-2147483648	; 0x80000000
   3e6fc:	orr	r0, r3, #2130706432	; 0x7f000000
   3e700:	orr	r0, r0, #8388608	; 0x800000
   3e704:	bx	lr
   3e708:	mvns	r2, r2, asr #24
   3e70c:	movne	r0, r1
   3e710:	mvnseq	r3, r3, asr #24
   3e714:	movne	r1, r0
   3e718:	lsls	r2, r0, #9
   3e71c:	lslseq	r3, r1, #9
   3e720:	teqeq	r0, r1
   3e724:	orrne	r0, r0, #4194304	; 0x400000
   3e728:	bx	lr

0003e72c <__aeabi_ui2f>:
   3e72c:	mov	r3, #0
   3e730:	b	3e73c <__aeabi_i2f+0x8>

0003e734 <__aeabi_i2f>:
   3e734:	ands	r3, r0, #-2147483648	; 0x80000000
   3e738:	rsbmi	r0, r0, #0
   3e73c:	movs	ip, r0
   3e740:	bxeq	lr
   3e744:	orr	r3, r3, #1258291200	; 0x4b000000
   3e748:	mov	r1, r0
   3e74c:	mov	r0, #0
   3e750:	b	3e794 <__aeabi_l2f+0x30>

0003e754 <__aeabi_ul2f>:
   3e754:	orrs	r2, r0, r1
   3e758:	bxeq	lr
   3e75c:	mov	r3, #0
   3e760:	b	3e77c <__aeabi_l2f+0x18>

0003e764 <__aeabi_l2f>:
   3e764:	orrs	r2, r0, r1
   3e768:	bxeq	lr
   3e76c:	ands	r3, r1, #-2147483648	; 0x80000000
   3e770:	bpl	3e77c <__aeabi_l2f+0x18>
   3e774:	rsbs	r0, r0, #0
   3e778:	rsc	r1, r1, #0
   3e77c:	movs	ip, r1
   3e780:	moveq	ip, r0
   3e784:	moveq	r1, r0
   3e788:	moveq	r0, #0
   3e78c:	orr	r3, r3, #1526726656	; 0x5b000000
   3e790:	subeq	r3, r3, #268435456	; 0x10000000
   3e794:	sub	r3, r3, #8388608	; 0x800000
   3e798:	clz	r2, ip
   3e79c:	subs	r2, r2, #8
   3e7a0:	sub	r3, r3, r2, lsl #23
   3e7a4:	blt	3e7c4 <__aeabi_l2f+0x60>
   3e7a8:	add	r3, r3, r1, lsl r2
   3e7ac:	lsl	ip, r0, r2
   3e7b0:	rsb	r2, r2, #32
   3e7b4:	cmp	ip, #-2147483648	; 0x80000000
   3e7b8:	adc	r0, r3, r0, lsr r2
   3e7bc:	biceq	r0, r0, #1
   3e7c0:	bx	lr
   3e7c4:	add	r2, r2, #32
   3e7c8:	lsl	ip, r1, r2
   3e7cc:	rsb	r2, r2, #32
   3e7d0:	orrs	r0, r0, ip, lsl #1
   3e7d4:	adc	r0, r3, r1, lsr r2
   3e7d8:	biceq	r0, r0, ip, lsr #31
   3e7dc:	bx	lr

0003e7e0 <__aeabi_f2lz>:
   3e7e0:	vmov	s15, r0
   3e7e4:	vcmpe.f32	s15, #0.0
   3e7e8:	vmrs	APSR_nzcv, fpscr
   3e7ec:	bmi	3e7f4 <__aeabi_f2lz+0x14>
   3e7f0:	b	3e838 <__aeabi_f2ulz>
   3e7f4:	push	{r4, lr}
   3e7f8:	eor	r0, r0, #-2147483648	; 0x80000000
   3e7fc:	bl	3e838 <__aeabi_f2ulz>
   3e800:	rsbs	r0, r0, #0
   3e804:	rsc	r1, r1, #0
   3e808:	pop	{r4, pc}

0003e80c <__aeabi_d2lz>:
   3e80c:	vmov	d7, r0, r1
   3e810:	vcmpe.f64	d7, #0.0
   3e814:	vmrs	APSR_nzcv, fpscr
   3e818:	bmi	3e820 <__aeabi_d2lz+0x14>
   3e81c:	b	3e878 <__aeabi_d2ulz>
   3e820:	push	{r4, lr}
   3e824:	eor	r1, r1, #-2147483648	; 0x80000000
   3e828:	bl	3e878 <__aeabi_d2ulz>
   3e82c:	rsbs	r0, r0, #0
   3e830:	rsc	r1, r1, #0
   3e834:	pop	{r4, pc}

0003e838 <__aeabi_f2ulz>:
   3e838:	vmov	s15, r0
   3e83c:	vldr	d5, [pc, #36]	; 3e868 <__aeabi_f2ulz+0x30>
   3e840:	vcvt.f64.f32	d6, s15
   3e844:	vldr	d7, [pc, #36]	; 3e870 <__aeabi_f2ulz+0x38>
   3e848:	vmul.f64	d7, d6, d7
   3e84c:	vcvt.u32.f64	s14, d7
   3e850:	vcvt.f64.u32	d4, s14
   3e854:	vmov	r1, s14
   3e858:	vmls.f64	d6, d4, d5
   3e85c:	vcvt.u32.f64	s15, d6
   3e860:	vmov	r0, s15
   3e864:	bx	lr
   3e868:	.word	0x00000000
   3e86c:	.word	0x41f00000
   3e870:	.word	0x00000000
   3e874:	.word	0x3df00000

0003e878 <__aeabi_d2ulz>:
   3e878:	vmov	d6, r0, r1
   3e87c:	vldr	d7, [pc, #36]	; 3e8a8 <__aeabi_d2ulz+0x30>
   3e880:	vldr	d5, [pc, #40]	; 3e8b0 <__aeabi_d2ulz+0x38>
   3e884:	vmul.f64	d7, d6, d7
   3e888:	vcvt.u32.f64	s14, d7
   3e88c:	vcvt.f64.u32	d4, s14
   3e890:	vmov	r1, s14
   3e894:	vmls.f64	d6, d4, d5
   3e898:	vcvt.u32.f64	s15, d6
   3e89c:	vmov	r0, s15
   3e8a0:	bx	lr
   3e8a4:	nop			; (mov r0, r0)
   3e8a8:	.word	0x00000000
   3e8ac:	.word	0x3df00000
   3e8b0:	.word	0x00000000
   3e8b4:	.word	0x41f00000

Disassembly of section .fini:

0003e8b8 <_fini>:
   3e8b8:	push	{r3, lr}
   3e8bc:	pop	{r3, pc}
