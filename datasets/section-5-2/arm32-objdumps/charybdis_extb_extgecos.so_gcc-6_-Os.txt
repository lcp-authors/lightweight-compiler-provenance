
../repos/charybdis/extensions/.libs/extb_extgecos.so:     file format elf32-littlearm


Disassembly of section .init:

000003bc <_init>:
 3bc:	push	{r3, lr}
 3c0:	bl	40c <call_weak_fn>
 3c4:	pop	{r3, pc}

Disassembly of section .plt:

000003c8 <.plt>:
 3c8:	push	{lr}		; (str lr, [sp, #-4]!)
 3cc:	ldr	lr, [pc, #4]	; 3d8 <.plt+0x10>
 3d0:	add	lr, pc, lr
 3d4:	ldr	pc, [lr, #8]!
 3d8:	.word	0x00010c28

000003dc <__cxa_finalize@plt>:
 3dc:	add	ip, pc, #0, 12
 3e0:	add	ip, ip, #16, 20	; 0x10000
 3e4:	ldr	pc, [ip, #3112]!	; 0xc28

000003e8 <__gmon_start__@plt>:
 3e8:	add	ip, pc, #0, 12
 3ec:	add	ip, ip, #16, 20	; 0x10000
 3f0:	ldr	pc, [ip, #3104]!	; 0xc20

000003f4 <snprintf@plt>:
 3f4:	add	ip, pc, #0, 12
 3f8:	add	ip, ip, #16, 20	; 0x10000
 3fc:	ldr	pc, [ip, #3096]!	; 0xc18

00000400 <match@plt>:
 400:	add	ip, pc, #0, 12
 404:	add	ip, ip, #16, 20	; 0x10000
 408:	ldr	pc, [ip, #3088]!	; 0xc10

Disassembly of section .text:

0000040c <call_weak_fn>:
 40c:	ldr	r3, [pc, #20]	; 428 <call_weak_fn+0x1c>
 410:	ldr	r2, [pc, #20]	; 42c <call_weak_fn+0x20>
 414:	add	r3, pc, r3
 418:	ldr	r2, [r3, r2]
 41c:	cmp	r2, #0
 420:	bxeq	lr
 424:	b	3e8 <__gmon_start__@plt>
 428:	.word	0x00010be4
 42c:	.word	0x00000024

00000430 <deregister_tm_clones>:
 430:	ldr	r3, [pc, #52]	; 46c <deregister_tm_clones+0x3c>
 434:	ldr	r0, [pc, #52]	; 470 <deregister_tm_clones+0x40>
 438:	add	r3, pc, r3
 43c:	add	r0, pc, r0
 440:	add	r3, r3, #3
 444:	sub	r3, r3, r0
 448:	cmp	r3, #6
 44c:	ldr	r3, [pc, #32]	; 474 <deregister_tm_clones+0x44>
 450:	add	r3, pc, r3
 454:	bxls	lr
 458:	ldr	r2, [pc, #24]	; 478 <deregister_tm_clones+0x48>
 45c:	ldr	r3, [r3, r2]
 460:	cmp	r3, #0
 464:	bxeq	lr
 468:	bx	r3
 46c:	.word	0x00010c20
 470:	.word	0x00010c1c
 474:	.word	0x00010ba8
 478:	.word	0x00000020

0000047c <register_tm_clones>:
 47c:	ldr	r1, [pc, #56]	; 4bc <register_tm_clones+0x40>
 480:	ldr	r0, [pc, #56]	; 4c0 <register_tm_clones+0x44>
 484:	add	r1, pc, r1
 488:	add	r0, pc, r0
 48c:	sub	r1, r1, r0
 490:	ldr	r3, [pc, #44]	; 4c4 <register_tm_clones+0x48>
 494:	asr	r1, r1, #2
 498:	add	r3, pc, r3
 49c:	add	r1, r1, r1, lsr #31
 4a0:	asrs	r1, r1, #1
 4a4:	bxeq	lr
 4a8:	ldr	r2, [pc, #24]	; 4c8 <register_tm_clones+0x4c>
 4ac:	ldr	r3, [r3, r2]
 4b0:	cmp	r3, #0
 4b4:	bxeq	lr
 4b8:	bx	r3
 4bc:	.word	0x00010bd4
 4c0:	.word	0x00010bd0
 4c4:	.word	0x00010b60
 4c8:	.word	0x00000030

000004cc <__do_global_dtors_aux>:
 4cc:	ldr	r3, [pc, #76]	; 520 <__do_global_dtors_aux+0x54>
 4d0:	ldr	r2, [pc, #76]	; 524 <__do_global_dtors_aux+0x58>
 4d4:	add	r3, pc, r3
 4d8:	add	r2, pc, r2
 4dc:	ldrb	r3, [r3]
 4e0:	cmp	r3, #0
 4e4:	bxne	lr
 4e8:	ldr	r3, [pc, #56]	; 528 <__do_global_dtors_aux+0x5c>
 4ec:	push	{r4, lr}
 4f0:	ldr	r3, [r2, r3]
 4f4:	cmp	r3, #0
 4f8:	beq	508 <__do_global_dtors_aux+0x3c>
 4fc:	ldr	r3, [pc, #40]	; 52c <__do_global_dtors_aux+0x60>
 500:	ldr	r0, [pc, r3]
 504:	bl	3dc <__cxa_finalize@plt>
 508:	bl	430 <deregister_tm_clones>
 50c:	ldr	r3, [pc, #28]	; 530 <__do_global_dtors_aux+0x64>
 510:	mov	r2, #1
 514:	add	r3, pc, r3
 518:	strb	r2, [r3]
 51c:	pop	{r4, pc}
 520:	.word	0x00010b84
 524:	.word	0x00010b20
 528:	.word	0x0000001c
 52c:	.word	0x00010b2c
 530:	.word	0x00010b44

00000534 <frame_dummy>:
 534:	ldr	r0, [pc, #56]	; 574 <frame_dummy+0x40>
 538:	ldr	r3, [pc, #56]	; 578 <frame_dummy+0x44>
 53c:	add	r0, pc, r0
 540:	ldr	r2, [r0]
 544:	add	r3, pc, r3
 548:	cmp	r2, #0
 54c:	bne	554 <frame_dummy+0x20>
 550:	b	47c <register_tm_clones>
 554:	ldr	r2, [pc, #32]	; 57c <frame_dummy+0x48>
 558:	ldr	r3, [r3, r2]
 55c:	cmp	r3, #0
 560:	beq	550 <frame_dummy+0x1c>
 564:	push	{r4, lr}
 568:	blx	r3
 56c:	pop	{r4, lr}
 570:	b	47c <register_tm_clones>
 574:	.word	0x000109b8
 578:	.word	0x00010ab4
 57c:	.word	0x00000028

00000580 <_modinit>:
 580:	ldr	r3, [pc, #28]	; 5a4 <_modinit+0x24>
 584:	ldr	r2, [pc, #28]	; 5a8 <_modinit+0x28>
 588:	add	r3, pc, r3
 58c:	mov	r0, #0
 590:	ldr	r3, [r3, r2]
 594:	ldr	r2, [pc, #16]	; 5ac <_modinit+0x2c>
 598:	add	r2, pc, r2
 59c:	str	r2, [r3, #480]	; 0x1e0
 5a0:	bx	lr
 5a4:	.word	0x00010a70
 5a8:	.word	0x0000002c
 5ac:	.word	0x00000034

000005b0 <_moddeinit>:
 5b0:	ldr	r3, [pc, #20]	; 5cc <_moddeinit+0x1c>
 5b4:	ldr	r2, [pc, #20]	; 5d0 <_moddeinit+0x20>
 5b8:	add	r3, pc, r3
 5bc:	ldr	r3, [r3, r2]
 5c0:	mov	r2, #0
 5c4:	str	r2, [r3, #480]	; 0x1e0
 5c8:	bx	lr
 5cc:	.word	0x00010a40
 5d0:	.word	0x0000002c

000005d4 <eb_extended>:
 5d4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
 5d8:	subs	r5, r0, #0
 5dc:	sub	sp, sp, #528	; 0x210
 5e0:	mvneq	r0, #0
 5e4:	beq	694 <eb_extended+0xc0>
 5e8:	ldr	r8, [pc, #172]	; 69c <eb_extended+0xc8>
 5ec:	add	r7, r1, #344	; 0x158
 5f0:	add	r3, r1, #163	; 0xa3
 5f4:	add	r9, r1, #88	; 0x58
 5f8:	add	sl, r1, #152	; 0x98
 5fc:	add	r6, sp, #16
 600:	add	r7, r7, #1
 604:	add	r8, pc, r8
 608:	str	r3, [sp, #4]
 60c:	mov	r2, r8
 610:	mov	r3, r9
 614:	mov	r4, r1
 618:	str	r7, [sp, #8]
 61c:	mov	r1, #512	; 0x200
 620:	str	sl, [sp]
 624:	mov	r0, r6
 628:	bl	3f4 <snprintf@plt>
 62c:	mov	r1, r6
 630:	mov	r0, r5
 634:	bl	400 <match@plt>
 638:	cmp	r0, #0
 63c:	movne	r0, #1
 640:	moveq	r0, #0
 644:	bne	694 <eb_extended+0xc0>
 648:	ldrd	r2, [r4, #64]	; 0x40
 64c:	mov	r3, #0
 650:	and	r2, r2, #131072	; 0x20000
 654:	orrs	r3, r2, r3
 658:	beq	694 <eb_extended+0xc0>
 65c:	add	r4, r4, #227	; 0xe3
 660:	mov	r3, r9
 664:	mov	r2, r8
 668:	mov	r1, #512	; 0x200
 66c:	str	r7, [sp, #8]
 670:	str	r4, [sp, #4]
 674:	str	sl, [sp]
 678:	mov	r0, r6
 67c:	bl	3f4 <snprintf@plt>
 680:	mov	r1, r6
 684:	mov	r0, r5
 688:	bl	400 <match@plt>
 68c:	adds	r0, r0, #0
 690:	movne	r0, #1
 694:	add	sp, sp, #528	; 0x210
 698:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
 69c:	.word	0x000000bb

Disassembly of section .fini:

000006a0 <_fini>:
 6a0:	push	{r3, lr}
 6a4:	pop	{r3, pc}
