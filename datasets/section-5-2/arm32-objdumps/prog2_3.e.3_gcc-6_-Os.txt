
../repos/prog2/3.e.3:     file format elf32-littlearm


Disassembly of section .init:

00010690 <.init>:
   10690:	push	{r3, lr}
   10694:	bl	1079c <_start@@Base+0x3c>
   10698:	pop	{r3, pc}

Disassembly of section .plt:

0001069c <__isoc99_fscanf@plt-0x14>:
   1069c:	push	{lr}		; (str lr, [sp, #-4]!)
   106a0:	ldr	lr, [pc, #4]	; 106ac <__isoc99_fscanf@plt-0x4>
   106a4:	add	lr, pc, lr
   106a8:	ldr	pc, [lr, #8]!
   106ac:	andeq	r0, r1, r4, asr r9

000106b0 <__isoc99_fscanf@plt>:
   106b0:	add	ip, pc, #0, 12
   106b4:	add	ip, ip, #16, 20	; 0x10000
   106b8:	ldr	pc, [ip, #2388]!	; 0x954

000106bc <fopen@plt>:
   106bc:	add	ip, pc, #0, 12
   106c0:	add	ip, ip, #16, 20	; 0x10000
   106c4:	ldr	pc, [ip, #2380]!	; 0x94c

000106c8 <realloc@plt>:
   106c8:	add	ip, pc, #0, 12
   106cc:	add	ip, ip, #16, 20	; 0x10000
   106d0:	ldr	pc, [ip, #2372]!	; 0x944

000106d4 <malloc@plt>:
   106d4:	add	ip, pc, #0, 12
   106d8:	add	ip, ip, #16, 20	; 0x10000
   106dc:	ldr	pc, [ip, #2364]!	; 0x93c

000106e0 <__libc_start_main@plt>:
   106e0:	add	ip, pc, #0, 12
   106e4:	add	ip, ip, #16, 20	; 0x10000
   106e8:	ldr	pc, [ip, #2356]!	; 0x934

000106ec <__gmon_start__@plt>:
   106ec:	add	ip, pc, #0, 12
   106f0:	add	ip, ip, #16, 20	; 0x10000
   106f4:	ldr	pc, [ip, #2348]!	; 0x92c

000106f8 <fprintf@plt>:
   106f8:	add	ip, pc, #0, 12
   106fc:	add	ip, ip, #16, 20	; 0x10000
   10700:	ldr	pc, [ip, #2340]!	; 0x924

00010704 <fclose@plt>:
   10704:	add	ip, pc, #0, 12
   10708:	add	ip, ip, #16, 20	; 0x10000
   1070c:	ldr	pc, [ip, #2332]!	; 0x91c

00010710 <fputs@plt>:
   10710:	add	ip, pc, #0, 12
   10714:	add	ip, ip, #16, 20	; 0x10000
   10718:	ldr	pc, [ip, #2324]!	; 0x914

0001071c <abort@plt>:
   1071c:	add	ip, pc, #0, 12
   10720:	add	ip, ip, #16, 20	; 0x10000
   10724:	ldr	pc, [ip, #2316]!	; 0x90c

Disassembly of section .text:

00010728 <main@@Base>:
   10728:	push	{r0, r1, r4, lr}
   1072c:	add	r1, sp, #8
   10730:	mov	r4, #0
   10734:	str	r4, [r1, #-4]!
   10738:	mov	r0, r4
   1073c:	bl	10888 <analisarFicheiro@@Base>
   10740:	ldr	r2, [sp, #4]
   10744:	mov	r1, r0
   10748:	ldr	r0, [pc, #12]	; 1075c <main@@Base+0x34>
   1074c:	bl	1091c <gerarRelatorio@@Base>
   10750:	mov	r0, r4
   10754:	add	sp, sp, #8
   10758:	pop	{r4, pc}
   1075c:	andeq	r0, r1, r7, ror #20

00010760 <_start@@Base>:
   10760:	mov	fp, #0
   10764:	mov	lr, #0
   10768:	pop	{r1}		; (ldr r1, [sp], #4)
   1076c:	mov	r2, sp
   10770:	push	{r2}		; (str r2, [sp, #-4]!)
   10774:	push	{r0}		; (str r0, [sp, #-4]!)
   10778:	ldr	ip, [pc, #16]	; 10790 <_start@@Base+0x30>
   1077c:	push	{ip}		; (str ip, [sp, #-4]!)
   10780:	ldr	r0, [pc, #12]	; 10794 <_start@@Base+0x34>
   10784:	ldr	r3, [pc, #12]	; 10798 <_start@@Base+0x38>
   10788:	bl	106e0 <__libc_start_main@plt>
   1078c:	bl	1071c <abort@plt>
   10790:	andeq	r0, r1, r0, lsr #20
   10794:	andeq	r0, r1, r8, lsr #14
   10798:	andeq	r0, r1, r0, asr #19
   1079c:	ldr	r3, [pc, #20]	; 107b8 <_start@@Base+0x58>
   107a0:	ldr	r2, [pc, #20]	; 107bc <_start@@Base+0x5c>
   107a4:	add	r3, pc, r3
   107a8:	ldr	r2, [r3, r2]
   107ac:	cmp	r2, #0
   107b0:	bxeq	lr
   107b4:	b	106ec <__gmon_start__@plt>
   107b8:	andeq	r0, r1, r4, asr r8
   107bc:	andeq	r0, r0, r4, lsr r0
   107c0:	ldr	r3, [pc, #28]	; 107e4 <_start@@Base+0x84>
   107c4:	ldr	r0, [pc, #28]	; 107e8 <_start@@Base+0x88>
   107c8:	sub	r3, r3, r0
   107cc:	cmp	r3, #6
   107d0:	bxls	lr
   107d4:	ldr	r3, [pc, #16]	; 107ec <_start@@Base+0x8c>
   107d8:	cmp	r3, #0
   107dc:	bxeq	lr
   107e0:	bx	r3
   107e4:	andeq	r1, r2, r3, asr #32
   107e8:	andeq	r1, r2, r0, asr #32
   107ec:	andeq	r0, r0, r0
   107f0:	ldr	r1, [pc, #36]	; 1081c <_start@@Base+0xbc>
   107f4:	ldr	r0, [pc, #36]	; 10820 <_start@@Base+0xc0>
   107f8:	sub	r1, r1, r0
   107fc:	asr	r1, r1, #2
   10800:	add	r1, r1, r1, lsr #31
   10804:	asrs	r1, r1, #1
   10808:	bxeq	lr
   1080c:	ldr	r3, [pc, #16]	; 10824 <_start@@Base+0xc4>
   10810:	cmp	r3, #0
   10814:	bxeq	lr
   10818:	bx	r3
   1081c:	andeq	r1, r2, r0, asr #32
   10820:	andeq	r1, r2, r0, asr #32
   10824:	andeq	r0, r0, r0
   10828:	push	{r4, lr}
   1082c:	ldr	r4, [pc, #24]	; 1084c <_start@@Base+0xec>
   10830:	ldrb	r3, [r4]
   10834:	cmp	r3, #0
   10838:	popne	{r4, pc}
   1083c:	bl	107c0 <_start@@Base+0x60>
   10840:	mov	r3, #1
   10844:	strb	r3, [r4]
   10848:	pop	{r4, pc}
   1084c:	andeq	r1, r2, r0, asr #32
   10850:	ldr	r0, [pc, #40]	; 10880 <_start@@Base+0x120>
   10854:	ldr	r3, [r0]
   10858:	cmp	r3, #0
   1085c:	bne	10864 <_start@@Base+0x104>
   10860:	b	107f0 <_start@@Base+0x90>
   10864:	ldr	r3, [pc, #24]	; 10884 <_start@@Base+0x124>
   10868:	cmp	r3, #0
   1086c:	beq	10860 <_start@@Base+0x100>
   10870:	push	{r4, lr}
   10874:	blx	r3
   10878:	pop	{r4, lr}
   1087c:	b	107f0 <_start@@Base+0x90>
   10880:	andeq	r0, r2, r4, lsl pc
   10884:	andeq	r0, r0, r0

00010888 <analisarFicheiro@@Base>:
   10888:	push	{r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
   1088c:	mov	r8, r1
   10890:	ldr	r0, [pc, #120]	; 10910 <analisarFicheiro@@Base+0x88>
   10894:	ldr	r1, [pc, #120]	; 10914 <analisarFicheiro@@Base+0x8c>
   10898:	bl	106bc <fopen@plt>
   1089c:	ldr	r9, [pc, #116]	; 10918 <analisarFicheiro@@Base+0x90>
   108a0:	mov	r5, #0
   108a4:	mov	sl, #104	; 0x68
   108a8:	mov	r6, r0
   108ac:	mov	r0, #104	; 0x68
   108b0:	bl	106d4 <malloc@plt>
   108b4:	mov	r4, r0
   108b8:	mul	r7, sl, r5
   108bc:	mov	r1, r9
   108c0:	add	r2, r4, r7
   108c4:	add	r3, r2, #100	; 0x64
   108c8:	str	r3, [sp]
   108cc:	mov	r0, r6
   108d0:	add	r3, r2, #50	; 0x32
   108d4:	bl	106b0 <__isoc99_fscanf@plt>
   108d8:	cmp	r0, #3
   108dc:	beq	108f8 <analisarFicheiro@@Base+0x70>
   108e0:	str	r5, [r8]
   108e4:	mov	r0, r6
   108e8:	bl	10704 <fclose@plt>
   108ec:	mov	r0, r4
   108f0:	add	sp, sp, #8
   108f4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   108f8:	mov	r0, r4
   108fc:	add	r1, r7, #104	; 0x68
   10900:	bl	106c8 <realloc@plt>
   10904:	add	r5, r5, #1
   10908:	mov	r4, r0
   1090c:	b	108b8 <analisarFicheiro@@Base+0x30>
   10910:	andeq	r0, r1, r2, lsr sl
   10914:	andeq	r0, r1, r0, lsr sl
   10918:	andeq	r0, r1, pc, lsr sl

0001091c <gerarRelatorio@@Base>:
   1091c:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10920:	mov	r8, r2
   10924:	ldr	r1, [pc, #136]	; 109b4 <gerarRelatorio@@Base+0x98>
   10928:	bl	106bc <fopen@plt>
   1092c:	ldr	sl, [pc, #132]	; 109b8 <gerarRelatorio@@Base+0x9c>
   10930:	mov	fp, #0
   10934:	mov	r9, #104	; 0x68
   10938:	mov	r1, r0
   1093c:	mov	r5, r0
   10940:	ldr	r0, [pc, #116]	; 109bc <gerarRelatorio@@Base+0xa0>
   10944:	bl	10710 <fputs@plt>
   10948:	mov	r0, #104	; 0x68
   1094c:	bl	106d4 <malloc@plt>
   10950:	mov	r6, r0
   10954:	cmp	fp, r8
   10958:	blt	1096c <gerarRelatorio@@Base+0x50>
   1095c:	mov	r0, r5
   10960:	add	sp, sp, #12
   10964:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10968:	b	10704 <fclose@plt>
   1096c:	add	r7, fp, #1
   10970:	mov	r0, r6
   10974:	mul	r4, r9, r7
   10978:	mov	r1, r4
   1097c:	bl	106c8 <realloc@plt>
   10980:	sub	r3, r4, #104	; 0x68
   10984:	mov	r1, sl
   10988:	add	r3, r0, r3
   1098c:	mov	r6, r0
   10990:	ldr	r2, [r3, #100]	; 0x64
   10994:	mov	r0, r5
   10998:	str	r2, [sp, #4]
   1099c:	str	r3, [sp]
   109a0:	mov	r2, fp
   109a4:	add	r3, r3, #50	; 0x32
   109a8:	bl	106f8 <fprintf@plt>
   109ac:	mov	fp, r7
   109b0:	b	10954 <gerarRelatorio@@Base+0x38>
   109b4:	andeq	r0, r1, r8, asr #20
   109b8:	andeq	r0, r1, r5, asr sl
   109bc:	andeq	r0, r1, sl, asr #20

000109c0 <__libc_csu_init@@Base>:
   109c0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   109c4:	mov	r7, r0
   109c8:	ldr	r6, [pc, #72]	; 10a18 <__libc_csu_init@@Base+0x58>
   109cc:	ldr	r5, [pc, #72]	; 10a1c <__libc_csu_init@@Base+0x5c>
   109d0:	add	r6, pc, r6
   109d4:	add	r5, pc, r5
   109d8:	sub	r6, r6, r5
   109dc:	mov	r8, r1
   109e0:	mov	r9, r2
   109e4:	bl	10690 <__isoc99_fscanf@plt-0x20>
   109e8:	asrs	r6, r6, #2
   109ec:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   109f0:	mov	r4, #0
   109f4:	add	r4, r4, #1
   109f8:	ldr	r3, [r5], #4
   109fc:	mov	r2, r9
   10a00:	mov	r1, r8
   10a04:	mov	r0, r7
   10a08:	blx	r3
   10a0c:	cmp	r6, r4
   10a10:	bne	109f4 <__libc_csu_init@@Base+0x34>
   10a14:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10a18:	andeq	r0, r1, r8, lsr r5
   10a1c:	andeq	r0, r1, r0, lsr r5

00010a20 <__libc_csu_fini@@Base>:
   10a20:	bx	lr

Disassembly of section .fini:

00010a24 <.fini>:
   10a24:	push	{r3, lr}
   10a28:	pop	{r3, pc}
