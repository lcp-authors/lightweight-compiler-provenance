
../repos/inetutils/ifconfig/ifconfig:     file format elf32-littlearm


Disassembly of section .init:

0001136c <.init>:
   1136c:	push	{r3, lr}
   11370:	bl	1189c <ftello64@plt+0x180>
   11374:	pop	{r3, pc}

Disassembly of section .plt:

00011378 <calloc@plt-0x14>:
   11378:	push	{lr}		; (str lr, [sp, #-4]!)
   1137c:	ldr	lr, [pc, #4]	; 11388 <calloc@plt-0x4>
   11380:	add	lr, pc, lr
   11384:	ldr	pc, [lr, #8]!
   11388:	andeq	sp, r1, r8, ror ip

0001138c <calloc@plt>:
   1138c:	add	ip, pc, #0, 12
   11390:	add	ip, ip, #118784	; 0x1d000
   11394:	ldr	pc, [ip, #3192]!	; 0xc78

00011398 <fputs_unlocked@plt>:
   11398:	add	ip, pc, #0, 12
   1139c:	add	ip, ip, #118784	; 0x1d000
   113a0:	ldr	pc, [ip, #3184]!	; 0xc70

000113a4 <strstr@plt>:
   113a4:	add	ip, pc, #0, 12
   113a8:	add	ip, ip, #118784	; 0x1d000
   113ac:	ldr	pc, [ip, #3176]!	; 0xc68

000113b0 <ether_hostton@plt>:
   113b0:	add	ip, pc, #0, 12
   113b4:	add	ip, ip, #118784	; 0x1d000
   113b8:	ldr	pc, [ip, #3168]!	; 0xc60

000113bc <inet_aton@plt>:
   113bc:	add	ip, pc, #0, 12
   113c0:	add	ip, ip, #118784	; 0x1d000
   113c4:	ldr	pc, [ip, #3160]!	; 0xc58

000113c8 <strcmp@plt>:
   113c8:	add	ip, pc, #0, 12
   113cc:	add	ip, ip, #118784	; 0x1d000
   113d0:	ldr	pc, [ip, #3152]!	; 0xc50

000113d4 <strtol@plt>:
   113d4:	add	ip, pc, #0, 12
   113d8:	add	ip, ip, #118784	; 0x1d000
   113dc:	ldr	pc, [ip, #3144]!	; 0xc48

000113e0 <printf@plt>:
   113e0:	add	ip, pc, #0, 12
   113e4:	add	ip, ip, #118784	; 0x1d000
   113e8:	ldr	pc, [ip, #3136]!	; 0xc40

000113ec <memmove@plt>:
   113ec:	add	ip, pc, #0, 12
   113f0:	add	ip, ip, #118784	; 0x1d000
   113f4:	ldr	pc, [ip, #3128]!	; 0xc38

000113f8 <strchrnul@plt>:
   113f8:	add	ip, pc, #0, 12
   113fc:	add	ip, ip, #118784	; 0x1d000
   11400:	ldr	pc, [ip, #3120]!	; 0xc30

00011404 <free@plt>:
   11404:	add	ip, pc, #0, 12
   11408:	add	ip, ip, #118784	; 0x1d000
   1140c:	ldr	pc, [ip, #3112]!	; 0xc28

00011410 <gai_strerror@plt>:
   11410:	add	ip, pc, #0, 12
   11414:	add	ip, ip, #118784	; 0x1d000
   11418:	ldr	pc, [ip, #3104]!	; 0xc20

0001141c <ferror@plt>:
   1141c:	add	ip, pc, #0, 12
   11420:	add	ip, ip, #118784	; 0x1d000
   11424:	ldr	pc, [ip, #3096]!	; 0xc18

00011428 <strndup@plt>:
   11428:	add	ip, pc, #0, 12
   1142c:	add	ip, ip, #118784	; 0x1d000
   11430:	ldr	pc, [ip, #3088]!	; 0xc10

00011434 <memcpy@plt>:
   11434:	add	ip, pc, #0, 12
   11438:	add	ip, ip, #118784	; 0x1d000
   1143c:	ldr	pc, [ip, #3080]!	; 0xc08

00011440 <fwrite_unlocked@plt>:
   11440:	add	ip, pc, #0, 12
   11444:	add	ip, ip, #118784	; 0x1d000
   11448:	ldr	pc, [ip, #3072]!	; 0xc00

0001144c <inet_ntoa@plt>:
   1144c:	add	ip, pc, #0, 12
   11450:	add	ip, ip, #118784	; 0x1d000
   11454:	ldr	pc, [ip, #3064]!	; 0xbf8

00011458 <sleep@plt>:
   11458:	add	ip, pc, #0, 12
   1145c:	add	ip, ip, #118784	; 0x1d000
   11460:	ldr	pc, [ip, #3056]!	; 0xbf0

00011464 <strdup@plt>:
   11464:	add	ip, pc, #0, 12
   11468:	add	ip, ip, #118784	; 0x1d000
   1146c:	ldr	pc, [ip, #3048]!	; 0xbe8

00011470 <realloc@plt>:
   11470:	add	ip, pc, #0, 12
   11474:	add	ip, ip, #118784	; 0x1d000
   11478:	ldr	pc, [ip, #3040]!	; 0xbe0

0001147c <strcasecmp@plt>:
   1147c:	add	ip, pc, #0, 12
   11480:	add	ip, ip, #118784	; 0x1d000
   11484:	ldr	pc, [ip, #3032]!	; 0xbd8

00011488 <funlockfile@plt>:
   11488:	add	ip, pc, #0, 12
   1148c:	add	ip, ip, #118784	; 0x1d000
   11490:	ldr	pc, [ip, #3024]!	; 0xbd0

00011494 <__fxstat64@plt>:
   11494:	add	ip, pc, #0, 12
   11498:	add	ip, ip, #118784	; 0x1d000
   1149c:	ldr	pc, [ip, #3016]!	; 0xbc8

000114a0 <ioctl@plt>:
   114a0:	add	ip, pc, #0, 12
   114a4:	add	ip, ip, #118784	; 0x1d000
   114a8:	ldr	pc, [ip, #3008]!	; 0xbc0

000114ac <strcpy@plt>:
   114ac:	add	ip, pc, #0, 12
   114b0:	add	ip, ip, #118784	; 0x1d000
   114b4:	ldr	pc, [ip, #3000]!	; 0xbb8

000114b8 <fread@plt>:
   114b8:	add	ip, pc, #0, 12
   114bc:	add	ip, ip, #118784	; 0x1d000
   114c0:	ldr	pc, [ip, #2992]!	; 0xbb0

000114c4 <error@plt>:
   114c4:	add	ip, pc, #0, 12
   114c8:	add	ip, ip, #118784	; 0x1d000
   114cc:	ldr	pc, [ip, #2984]!	; 0xba8

000114d0 <getenv@plt>:
   114d0:	add	ip, pc, #0, 12
   114d4:	add	ip, ip, #118784	; 0x1d000
   114d8:	ldr	pc, [ip, #2976]!	; 0xba0

000114dc <puts@plt>:
   114dc:	add	ip, pc, #0, 12
   114e0:	add	ip, ip, #118784	; 0x1d000
   114e4:	ldr	pc, [ip, #2968]!	; 0xb98

000114e8 <malloc@plt>:
   114e8:	add	ip, pc, #0, 12
   114ec:	add	ip, ip, #118784	; 0x1d000
   114f0:	ldr	pc, [ip, #2960]!	; 0xb90

000114f4 <__libc_start_main@plt>:
   114f4:	add	ip, pc, #0, 12
   114f8:	add	ip, ip, #118784	; 0x1d000
   114fc:	ldr	pc, [ip, #2952]!	; 0xb88

00011500 <strerror@plt>:
   11500:	add	ip, pc, #0, 12
   11504:	add	ip, ip, #118784	; 0x1d000
   11508:	ldr	pc, [ip, #2944]!	; 0xb80

0001150c <__ctype_tolower_loc@plt>:
   1150c:	add	ip, pc, #0, 12
   11510:	add	ip, ip, #118784	; 0x1d000
   11514:	ldr	pc, [ip, #2936]!	; 0xb78

00011518 <ether_aton@plt>:
   11518:	add	ip, pc, #0, 12
   1151c:	add	ip, ip, #118784	; 0x1d000
   11520:	ldr	pc, [ip, #2928]!	; 0xb70

00011524 <__gmon_start__@plt>:
   11524:	add	ip, pc, #0, 12
   11528:	add	ip, ip, #118784	; 0x1d000
   1152c:	ldr	pc, [ip, #2920]!	; 0xb68

00011530 <mempcpy@plt>:
   11530:	add	ip, pc, #0, 12
   11534:	add	ip, ip, #118784	; 0x1d000
   11538:	ldr	pc, [ip, #2912]!	; 0xb60

0001153c <__ctype_b_loc@plt>:
   1153c:	add	ip, pc, #0, 12
   11540:	add	ip, ip, #118784	; 0x1d000
   11544:	ldr	pc, [ip, #2904]!	; 0xb58

00011548 <exit@plt>:
   11548:	add	ip, pc, #0, 12
   1154c:	add	ip, ip, #118784	; 0x1d000
   11550:	ldr	pc, [ip, #2896]!	; 0xb50

00011554 <strtoul@plt>:
   11554:	add	ip, pc, #0, 12
   11558:	add	ip, ip, #118784	; 0x1d000
   1155c:	ldr	pc, [ip, #2888]!	; 0xb48

00011560 <strlen@plt>:
   11560:	add	ip, pc, #0, 12
   11564:	add	ip, ip, #118784	; 0x1d000
   11568:	ldr	pc, [ip, #2880]!	; 0xb40

0001156c <strchr@plt>:
   1156c:	add	ip, pc, #0, 12
   11570:	add	ip, ip, #118784	; 0x1d000
   11574:	ldr	pc, [ip, #2872]!	; 0xb38

00011578 <fprintf@plt>:
   11578:	add	ip, pc, #0, 12
   1157c:	add	ip, ip, #118784	; 0x1d000
   11580:	ldr	pc, [ip, #2864]!	; 0xb30

00011584 <__errno_location@plt>:
   11584:	add	ip, pc, #0, 12
   11588:	add	ip, ip, #118784	; 0x1d000
   1158c:	ldr	pc, [ip, #2856]!	; 0xb28

00011590 <strncasecmp@plt>:
   11590:	add	ip, pc, #0, 12
   11594:	add	ip, ip, #118784	; 0x1d000
   11598:	ldr	pc, [ip, #2848]!	; 0xb20

0001159c <strerror_r@plt>:
   1159c:	add	ip, pc, #0, 12
   115a0:	add	ip, ip, #118784	; 0x1d000
   115a4:	ldr	pc, [ip, #2840]!	; 0xb18

000115a8 <setvbuf@plt>:
   115a8:	add	ip, pc, #0, 12
   115ac:	add	ip, ip, #118784	; 0x1d000
   115b0:	ldr	pc, [ip, #2832]!	; 0xb10

000115b4 <memset@plt>:
   115b4:	add	ip, pc, #0, 12
   115b8:	add	ip, ip, #118784	; 0x1d000
   115bc:	ldr	pc, [ip, #2824]!	; 0xb08

000115c0 <putchar@plt>:
   115c0:	add	ip, pc, #0, 12
   115c4:	add	ip, ip, #118784	; 0x1d000
   115c8:	ldr	pc, [ip, #2816]!	; 0xb00

000115cc <strncpy@plt>:
   115cc:	add	ip, pc, #0, 12
   115d0:	add	ip, ip, #118784	; 0x1d000
   115d4:	ldr	pc, [ip, #2808]!	; 0xaf8

000115d8 <fileno@plt>:
   115d8:	add	ip, pc, #0, 12
   115dc:	add	ip, ip, #118784	; 0x1d000
   115e0:	ldr	pc, [ip, #2800]!	; 0xaf0

000115e4 <memchr@plt>:
   115e4:	add	ip, pc, #0, 12
   115e8:	add	ip, ip, #118784	; 0x1d000
   115ec:	ldr	pc, [ip, #2792]!	; 0xae8

000115f0 <fclose@plt>:
   115f0:	add	ip, pc, #0, 12
   115f4:	add	ip, ip, #118784	; 0x1d000
   115f8:	ldr	pc, [ip, #2784]!	; 0xae0

000115fc <ether_ntoa@plt>:
   115fc:	add	ip, pc, #0, 12
   11600:	add	ip, ip, #118784	; 0x1d000
   11604:	ldr	pc, [ip, #2776]!	; 0xad8

00011608 <getnameinfo@plt>:
   11608:	add	ip, pc, #0, 12
   1160c:	add	ip, ip, #118784	; 0x1d000
   11610:	ldr	pc, [ip, #2768]!	; 0xad0

00011614 <strrchr@plt>:
   11614:	add	ip, pc, #0, 12
   11618:	add	ip, ip, #118784	; 0x1d000
   1161c:	ldr	pc, [ip, #2760]!	; 0xac8

00011620 <vfprintf@plt>:
   11620:	add	ip, pc, #0, 12
   11624:	add	ip, ip, #118784	; 0x1d000
   11628:	ldr	pc, [ip, #2752]!	; 0xac0

0001162c <fputc@plt>:
   1162c:	add	ip, pc, #0, 12
   11630:	add	ip, ip, #118784	; 0x1d000
   11634:	ldr	pc, [ip, #2744]!	; 0xab8

00011638 <sscanf@plt>:
   11638:	add	ip, pc, #0, 12
   1163c:	add	ip, ip, #118784	; 0x1d000
   11640:	ldr	pc, [ip, #2736]!	; 0xab0

00011644 <putc@plt>:
   11644:	add	ip, pc, #0, 12
   11648:	add	ip, ip, #118784	; 0x1d000
   1164c:	ldr	pc, [ip, #2728]!	; 0xaa8

00011650 <flockfile@plt>:
   11650:	add	ip, pc, #0, 12
   11654:	add	ip, ip, #118784	; 0x1d000
   11658:	ldr	pc, [ip, #2720]!	; 0xaa0

0001165c <vsnprintf@plt>:
   1165c:	add	ip, pc, #0, 12
   11660:	add	ip, ip, #118784	; 0x1d000
   11664:	ldr	pc, [ip, #2712]!	; 0xa98

00011668 <atoi@plt>:
   11668:	add	ip, pc, #0, 12
   1166c:	add	ip, ip, #118784	; 0x1d000
   11670:	ldr	pc, [ip, #2704]!	; 0xa90

00011674 <fopen64@plt>:
   11674:	add	ip, pc, #0, 12
   11678:	add	ip, ip, #118784	; 0x1d000
   1167c:	ldr	pc, [ip, #2696]!	; 0xa88

00011680 <qsort@plt>:
   11680:	add	ip, pc, #0, 12
   11684:	add	ip, ip, #118784	; 0x1d000
   11688:	ldr	pc, [ip, #2688]!	; 0xa80

0001168c <explicit_bzero@plt>:
   1168c:	add	ip, pc, #0, 12
   11690:	add	ip, ip, #118784	; 0x1d000
   11694:	ldr	pc, [ip, #2680]!	; 0xa78

00011698 <freeaddrinfo@plt>:
   11698:	add	ip, pc, #0, 12
   1169c:	add	ip, ip, #118784	; 0x1d000
   116a0:	ldr	pc, [ip, #2672]!	; 0xa70

000116a4 <getaddrinfo@plt>:
   116a4:	add	ip, pc, #0, 12
   116a8:	add	ip, ip, #118784	; 0x1d000
   116ac:	ldr	pc, [ip, #2664]!	; 0xa68

000116b0 <socket@plt>:
   116b0:	add	ip, pc, #0, 12
   116b4:	add	ip, ip, #118784	; 0x1d000
   116b8:	ldr	pc, [ip, #2656]!	; 0xa60

000116bc <getline@plt>:
   116bc:	add	ip, pc, #0, 12
   116c0:	add	ip, ip, #118784	; 0x1d000
   116c4:	ldr	pc, [ip, #2648]!	; 0xa58

000116c8 <if_nametoindex@plt>:
   116c8:	add	ip, pc, #0, 12
   116cc:	add	ip, ip, #118784	; 0x1d000
   116d0:	ldr	pc, [ip, #2640]!	; 0xa50

000116d4 <fputs@plt>:
   116d4:	add	ip, pc, #0, 12
   116d8:	add	ip, ip, #118784	; 0x1d000
   116dc:	ldr	pc, [ip, #2632]!	; 0xa48

000116e0 <strncmp@plt>:
   116e0:	add	ip, pc, #0, 12
   116e4:	add	ip, ip, #118784	; 0x1d000
   116e8:	ldr	pc, [ip, #2624]!	; 0xa40

000116ec <abort@plt>:
   116ec:	add	ip, pc, #0, 12
   116f0:	add	ip, ip, #118784	; 0x1d000
   116f4:	ldr	pc, [ip, #2616]!	; 0xa38

000116f8 <close@plt>:
   116f8:	add	ip, pc, #0, 12
   116fc:	add	ip, ip, #118784	; 0x1d000
   11700:	ldr	pc, [ip, #2608]!	; 0xa30

00011704 <__assert_fail@plt>:
   11704:	add	ip, pc, #0, 12
   11708:	add	ip, ip, #118784	; 0x1d000
   1170c:	ldr	pc, [ip, #2600]!	; 0xa28

00011710 <putc_unlocked@plt>:
   11710:	add	ip, pc, #0, 12
   11714:	add	ip, ip, #118784	; 0x1d000
   11718:	ldr	pc, [ip, #2592]!	; 0xa20

0001171c <ftello64@plt>:
   1171c:	add	ip, pc, #0, 12
   11720:	add	ip, ip, #118784	; 0x1d000
   11724:	ldr	pc, [ip, #2584]!	; 0xa18

Disassembly of section .text:

00011728 <argp_parse@@Base-0x4e20>:
   11728:	push	{r4, lr}
   1172c:	bl	11584 <__errno_location@plt>
   11730:	mov	r3, #12
   11734:	str	r3, [r0]
   11738:	mov	r0, #0
   1173c:	pop	{r4, pc}
   11740:	push	{r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11744:	mov	r5, r0
   11748:	mov	r4, r1
   1174c:	ldr	r0, [r1]
   11750:	bl	17458 <_obstack_memory_used@@Base+0x24>
   11754:	mov	r1, r4
   11758:	mov	r0, r5
   1175c:	bl	1323c <ftello64@plt+0x1b20>
   11760:	mov	r2, #0
   11764:	mov	r1, #1
   11768:	mov	r0, #2
   1176c:	bl	116b0 <socket@plt>
   11770:	subs	r7, r0, #0
   11774:	bge	11794 <ftello64@plt+0x78>
   11778:	bl	11584 <__errno_location@plt>
   1177c:	ldr	r2, [pc, #200]	; 1184c <ftello64@plt+0x130>
   11780:	ldr	r1, [r0]
   11784:	mov	r0, #0
   11788:	bl	114c4 <error@plt>
   1178c:	mov	r0, #1
   11790:	bl	11548 <exit@plt>
   11794:	ldr	r6, [pc, #180]	; 11850 <ftello64@plt+0x134>
   11798:	mov	r4, #0
   1179c:	ldr	r8, [pc, #176]	; 11854 <ftello64@plt+0x138>
   117a0:	ldr	sl, [pc, #176]	; 11858 <ftello64@plt+0x13c>
   117a4:	ldr	r5, [r6]
   117a8:	mov	r9, r8
   117ac:	ldr	r2, [r6]
   117b0:	mov	r1, #56	; 0x38
   117b4:	ldr	r3, [sl]
   117b8:	ldr	r0, [r8]
   117bc:	mla	r3, r1, r3, r2
   117c0:	cmp	r5, r3
   117c4:	bcs	11820 <ftello64@plt+0x104>
   117c8:	cmp	r0, #0
   117cc:	beq	1180c <ftello64@plt+0xf0>
   117d0:	ldr	r0, [r5]
   117d4:	bl	116c8 <if_nametoindex@plt>
   117d8:	cmp	r0, #0
   117dc:	beq	11804 <ftello64@plt+0xe8>
   117e0:	cmp	r4, #0
   117e4:	add	fp, r4, #1
   117e8:	beq	117f4 <ftello64@plt+0xd8>
   117ec:	mov	r0, #32
   117f0:	bl	115c0 <putchar@plt>
   117f4:	ldr	r0, [pc, #96]	; 1185c <ftello64@plt+0x140>
   117f8:	mov	r4, fp
   117fc:	ldr	r1, [r5]
   11800:	bl	113e0 <printf@plt>
   11804:	add	r5, r5, #56	; 0x38
   11808:	b	117ac <ftello64@plt+0x90>
   1180c:	mov	r1, r5
   11810:	mov	r0, r7
   11814:	bl	1255c <ftello64@plt+0xe40>
   11818:	subs	r4, r0, #0
   1181c:	beq	11804 <ftello64@plt+0xe8>
   11820:	ldr	r3, [r9]
   11824:	cmp	r3, #0
   11828:	cmpne	r4, #0
   1182c:	beq	11838 <ftello64@plt+0x11c>
   11830:	mov	r0, #10
   11834:	bl	115c0 <putchar@plt>
   11838:	mov	r0, r7
   1183c:	bl	116f8 <close@plt>
   11840:	mov	r0, r4
   11844:	add	sp, sp, #4
   11848:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1184c:	andeq	fp, r1, r0, ror #5
   11850:	andeq	pc, r2, ip, ror #23
   11854:	andeq	pc, r2, r4, lsl #24
   11858:	strdeq	pc, [r2], -r0
   1185c:			; <UNDEFINED> instruction: 0x0001b3b0
   11860:	mov	fp, #0
   11864:	mov	lr, #0
   11868:	pop	{r1}		; (ldr r1, [sp], #4)
   1186c:	mov	r2, sp
   11870:	push	{r2}		; (str r2, [sp, #-4]!)
   11874:	push	{r0}		; (str r0, [sp, #-4]!)
   11878:	ldr	ip, [pc, #16]	; 11890 <ftello64@plt+0x174>
   1187c:	push	{ip}		; (str ip, [sp, #-4]!)
   11880:	ldr	r0, [pc, #12]	; 11894 <ftello64@plt+0x178>
   11884:	ldr	r3, [pc, #12]	; 11898 <ftello64@plt+0x17c>
   11888:	bl	114f4 <__libc_start_main@plt>
   1188c:	bl	116ec <abort@plt>
   11890:	andeq	fp, r1, r0, asr #5
   11894:	andeq	r1, r1, r0, asr #14
   11898:	andeq	fp, r1, r0, ror #4
   1189c:	ldr	r3, [pc, #20]	; 118b8 <ftello64@plt+0x19c>
   118a0:	ldr	r2, [pc, #20]	; 118bc <ftello64@plt+0x1a0>
   118a4:	add	r3, pc, r3
   118a8:	ldr	r2, [r3, r2]
   118ac:	cmp	r2, #0
   118b0:	bxeq	lr
   118b4:	b	11524 <__gmon_start__@plt>
   118b8:	andeq	sp, r1, r4, asr r7
   118bc:	andeq	r0, r0, r0, asr #2
   118c0:	ldr	r0, [pc, #24]	; 118e0 <ftello64@plt+0x1c4>
   118c4:	ldr	r3, [pc, #24]	; 118e4 <ftello64@plt+0x1c8>
   118c8:	cmp	r3, r0
   118cc:	bxeq	lr
   118d0:	ldr	r3, [pc, #16]	; 118e8 <ftello64@plt+0x1cc>
   118d4:	cmp	r3, #0
   118d8:	bxeq	lr
   118dc:	bx	r3
   118e0:	andeq	pc, r2, r0, asr #22
   118e4:	andeq	pc, r2, r0, asr #22
   118e8:	andeq	r0, r0, r0
   118ec:	ldr	r0, [pc, #36]	; 11918 <ftello64@plt+0x1fc>
   118f0:	ldr	r1, [pc, #36]	; 1191c <ftello64@plt+0x200>
   118f4:	sub	r1, r1, r0
   118f8:	asr	r1, r1, #2
   118fc:	add	r1, r1, r1, lsr #31
   11900:	asrs	r1, r1, #1
   11904:	bxeq	lr
   11908:	ldr	r3, [pc, #16]	; 11920 <ftello64@plt+0x204>
   1190c:	cmp	r3, #0
   11910:	bxeq	lr
   11914:	bx	r3
   11918:	andeq	pc, r2, r0, asr #22
   1191c:	andeq	pc, r2, r0, asr #22
   11920:	andeq	r0, r0, r0
   11924:	push	{r4, lr}
   11928:	ldr	r4, [pc, #24]	; 11948 <ftello64@plt+0x22c>
   1192c:	ldrb	r3, [r4]
   11930:	cmp	r3, #0
   11934:	popne	{r4, pc}
   11938:	bl	118c0 <ftello64@plt+0x1a4>
   1193c:	mov	r3, #1
   11940:	strb	r3, [r4]
   11944:	pop	{r4, pc}
   11948:	andeq	pc, r2, r0, asr fp	; <UNPREDICTABLE>
   1194c:	b	118ec <ftello64@plt+0x1d0>
   11950:	ldr	r0, [r0]
   11954:	ldr	r1, [r1]
   11958:	b	113c8 <strcmp@plt>
   1195c:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11960:	mov	r9, r0
   11964:	mov	r5, #0
   11968:	ldr	r6, [pc, #480]	; 11b50 <ftello64@plt+0x434>
   1196c:	ldr	r4, [r6]
   11970:	cmp	r4, #0
   11974:	bne	11a30 <ftello64@plt+0x314>
   11978:	ldr	r8, [pc, #464]	; 11b50 <ftello64@plt+0x434>
   1197c:	add	r0, r5, #80	; 0x50
   11980:	bl	17bb4 <_obstack_memory_used@@Base+0x780>
   11984:	ldr	sl, [pc, #456]	; 11b54 <ftello64@plt+0x438>
   11988:	mov	r7, r0
   1198c:	add	r3, r0, #80	; 0x50
   11990:	ldr	r6, [r8]
   11994:	cmp	r6, #0
   11998:	bne	11a54 <ftello64@plt+0x338>
   1199c:	ldr	r3, [pc, #436]	; 11b58 <ftello64@plt+0x43c>
   119a0:	mov	r2, #4
   119a4:	mov	r1, r4
   119a8:	mov	r0, r7
   119ac:	add	r5, r5, r4, lsl #1
   119b0:	bl	11680 <qsort@plt>
   119b4:	cmp	r9, #0
   119b8:	beq	119c8 <ftello64@plt+0x2ac>
   119bc:	mov	r0, r9
   119c0:	bl	11560 <strlen@plt>
   119c4:	add	r5, r5, r0
   119c8:	add	r0, r5, #36	; 0x24
   119cc:	bl	17bb4 <_obstack_memory_used@@Base+0x780>
   119d0:	cmp	r9, #0
   119d4:	mov	r8, r0
   119d8:	moveq	r5, r0
   119dc:	beq	119f4 <ftello64@plt+0x2d8>
   119e0:	mov	r1, r9
   119e4:	bl	114ac <strcpy@plt>
   119e8:	mov	r0, r9
   119ec:	bl	11560 <strlen@plt>
   119f0:	add	r5, r8, r0
   119f4:	sub	r9, r7, #4
   119f8:	mov	r6, #0
   119fc:	mov	fp, #32
   11a00:	cmp	r4, r6
   11a04:	bne	11adc <ftello64@plt+0x3c0>
   11a08:	ldr	r1, [pc, #332]	; 11b5c <ftello64@plt+0x440>
   11a0c:	mov	r0, r5
   11a10:	bl	114ac <strcpy@plt>
   11a14:	mov	r3, #0
   11a18:	mov	r0, r7
   11a1c:	strb	r3, [r5, #35]	; 0x23
   11a20:	bl	17030 <argp_usage@@Base+0x170>
   11a24:	mov	r0, r8
   11a28:	add	sp, sp, #12
   11a2c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11a30:	ldr	r3, [r6, #8]
   11a34:	cmp	r3, #0
   11a38:	bne	11a4c <ftello64@plt+0x330>
   11a3c:	mov	r0, r4
   11a40:	add	r5, r5, #1
   11a44:	bl	11560 <strlen@plt>
   11a48:	add	r5, r0, r5
   11a4c:	add	r6, r6, #12
   11a50:	b	1196c <ftello64@plt+0x250>
   11a54:	ldr	r2, [r8, #8]
   11a58:	cmp	r2, #0
   11a5c:	bne	11ab4 <ftello64@plt+0x398>
   11a60:	ldr	r2, [r8, #4]
   11a64:	tst	r2, #72	; 0x48
   11a68:	bne	11ab4 <ftello64@plt+0x398>
   11a6c:	mov	r0, r6
   11a70:	mov	r2, #2
   11a74:	str	r3, [r7, r4, lsl #2]
   11a78:	mov	r1, sl
   11a7c:	str	r3, [sp, #4]
   11a80:	add	fp, r4, #1
   11a84:	bl	116e0 <strncmp@plt>
   11a88:	ldr	r3, [sp, #4]
   11a8c:	cmp	r0, #0
   11a90:	addeq	r6, r6, #2
   11a94:	sub	r6, r6, #1
   11a98:	ldrb	r2, [r6, #1]!
   11a9c:	add	r4, r3, #1
   11aa0:	cmp	r2, #0
   11aa4:	bne	11abc <ftello64@plt+0x3a0>
   11aa8:	strb	r2, [r3]
   11aac:	mov	r3, r4
   11ab0:	mov	r4, fp
   11ab4:	add	r8, r8, #12
   11ab8:	b	11990 <ftello64@plt+0x274>
   11abc:	str	r2, [sp, #4]
   11ac0:	bl	1150c <__ctype_tolower_loc@plt>
   11ac4:	ldr	r3, [r0]
   11ac8:	ldr	r2, [sp, #4]
   11acc:	ldr	r3, [r3, r2, lsl #2]
   11ad0:	strb	r3, [r4, #-1]
   11ad4:	mov	r3, r4
   11ad8:	b	11a98 <ftello64@plt+0x37c>
   11adc:	cmp	r6, #0
   11ae0:	add	r6, r6, #1
   11ae4:	ldr	sl, [r9, #4]!
   11ae8:	beq	11b18 <ftello64@plt+0x3fc>
   11aec:	ldr	r3, [r9, #-4]
   11af0:	mov	r0, r3
   11af4:	str	r3, [sp, #4]
   11af8:	bl	11560 <strlen@plt>
   11afc:	ldr	r3, [sp, #4]
   11b00:	mov	r2, r0
   11b04:	mov	r1, sl
   11b08:	mov	r0, r3
   11b0c:	bl	116e0 <strncmp@plt>
   11b10:	cmp	r0, #0
   11b14:	beq	11a00 <ftello64@plt+0x2e4>
   11b18:	mov	r1, sl
   11b1c:	mov	r0, r5
   11b20:	bl	114ac <strcpy@plt>
   11b24:	mov	r0, sl
   11b28:	bl	11560 <strlen@plt>
   11b2c:	cmp	r4, r6
   11b30:	add	r5, r5, r0
   11b34:	bls	11a00 <ftello64@plt+0x2e4>
   11b38:	mov	r3, r5
   11b3c:	mov	r2, #44	; 0x2c
   11b40:	strb	r2, [r3], #2
   11b44:	strb	fp, [r5, #1]
   11b48:	mov	r5, r3
   11b4c:	b	11a00 <ftello64@plt+0x2e4>
   11b50:	andeq	pc, r2, ip, asr #2
   11b54:	andeq	fp, r1, sp, ror #5
   11b58:	andeq	r1, r1, r0, asr r9
   11b5c:	strdeq	fp, [r1], -r0
   11b60:	push	{r4, r5, r6, r7, r8, lr}
   11b64:	ldr	r4, [pc, #140]	; 11bf8 <ftello64@plt+0x4dc>
   11b68:	ldr	r5, [r4]
   11b6c:	cmp	r5, #0
   11b70:	beq	11bf0 <ftello64@plt+0x4d4>
   11b74:	ldr	r3, [r4, #4]
   11b78:	cmp	r3, r0
   11b7c:	bne	11b8c <ftello64@plt+0x470>
   11b80:	ldr	r3, [r4, #8]
   11b84:	cmp	r3, #0
   11b88:	beq	11b94 <ftello64@plt+0x478>
   11b8c:	add	r4, r4, #12
   11b90:	b	11b68 <ftello64@plt+0x44c>
   11b94:	mov	r6, r1
   11b98:	cmp	r1, #0
   11b9c:	beq	11be4 <ftello64@plt+0x4c8>
   11ba0:	ldr	r8, [r4]
   11ba4:	mov	r0, r6
   11ba8:	mov	r1, r8
   11bac:	bl	113a4 <strstr@plt>
   11bb0:	subs	r7, r0, #0
   11bb4:	beq	11be4 <ftello64@plt+0x4c8>
   11bb8:	ldrb	r3, [r7, #-1]
   11bbc:	cmp	r3, #58	; 0x3a
   11bc0:	bne	11be4 <ftello64@plt+0x4c8>
   11bc4:	mov	r0, r8
   11bc8:	bl	11560 <strlen@plt>
   11bcc:	ldrb	r3, [r7, r0]
   11bd0:	cmp	r3, #58	; 0x3a
   11bd4:	bne	11be4 <ftello64@plt+0x4c8>
   11bd8:	ldr	r3, [r4, #12]!
   11bdc:	cmp	r3, #0
   11be0:	b	11b9c <ftello64@plt+0x480>
   11be4:	ldr	r3, [r4]
   11be8:	cmp	r3, #0
   11bec:	movne	r5, r3
   11bf0:	mov	r0, r5
   11bf4:	pop	{r4, r5, r6, r7, r8, pc}
   11bf8:	andeq	pc, r2, ip, asr #2
   11bfc:	cmp	r1, #1
   11c00:	push	{r4, r5, r6, r7, r8, lr}
   11c04:	mov	r5, r0
   11c08:	mov	r4, r1
   11c0c:	mov	r8, r2
   11c10:	bls	11c88 <ftello64@plt+0x56c>
   11c14:	ldrb	r3, [r0]
   11c18:	cmp	r3, #45	; 0x2d
   11c1c:	addeq	r5, r0, #1
   11c20:	subeq	r4, r1, #1
   11c24:	beq	11c4c <ftello64@plt+0x530>
   11c28:	cmp	r4, #2
   11c2c:	beq	11c88 <ftello64@plt+0x56c>
   11c30:	mov	r2, #2
   11c34:	ldr	r1, [pc, #92]	; 11c98 <ftello64@plt+0x57c>
   11c38:	bl	11590 <strncasecmp@plt>
   11c3c:	cmp	r0, #0
   11c40:	bne	11c88 <ftello64@plt+0x56c>
   11c44:	add	r5, r5, #2
   11c48:	sub	r4, r4, #2
   11c4c:	mov	r7, #1
   11c50:	ldr	r6, [pc, #68]	; 11c9c <ftello64@plt+0x580>
   11c54:	ldr	r0, [r6]
   11c58:	cmp	r0, #0
   11c5c:	popeq	{r4, r5, r6, r7, r8, pc}
   11c60:	mov	r2, r4
   11c64:	mov	r1, r5
   11c68:	bl	11590 <strncasecmp@plt>
   11c6c:	cmp	r0, #0
   11c70:	bne	11c90 <ftello64@plt+0x574>
   11c74:	ldr	r3, [r6, #8]
   11c78:	eor	r7, r7, r3
   11c7c:	str	r7, [r8]
   11c80:	ldr	r0, [r6, #4]
   11c84:	pop	{r4, r5, r6, r7, r8, pc}
   11c88:	mov	r7, #0
   11c8c:	b	11c50 <ftello64@plt+0x534>
   11c90:	add	r6, r6, #12
   11c94:	b	11c54 <ftello64@plt+0x538>
   11c98:	andeq	fp, r1, sp, ror #5
   11c9c:	andeq	pc, r2, ip, asr #2
   11ca0:	push	{r4, r5, r6, lr}
   11ca4:	mov	r5, r1
   11ca8:	mov	r4, r0
   11cac:	bl	11560 <strlen@plt>
   11cb0:	mov	r1, r0
   11cb4:	mov	r2, r5
   11cb8:	mov	r0, r4
   11cbc:	pop	{r4, r5, r6, lr}
   11cc0:	b	11bfc <ftello64@plt+0x4e0>
   11cc4:	ldr	r3, [pc, #56]	; 11d04 <ftello64@plt+0x5e8>
   11cc8:	sub	r2, r2, #1
   11ccc:	cmp	r2, #0
   11cd0:	bne	11ce0 <ftello64@plt+0x5c4>
   11cd4:	mov	r3, #0
   11cd8:	strb	r3, [r1]
   11cdc:	bx	lr
   11ce0:	ldr	ip, [r3]
   11ce4:	cmp	ip, #0
   11ce8:	beq	11cd4 <ftello64@plt+0x5b8>
   11cec:	tst	ip, r0
   11cf0:	add	r3, r3, #8
   11cf4:	ldrne	ip, [r3, #-4]
   11cf8:	subne	r2, r2, #1
   11cfc:	strbne	ip, [r1], #1
   11d00:	b	11ccc <ftello64@plt+0x5b0>
   11d04:	andeq	pc, r2, r8, asr #4
   11d08:	push	{r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11d0c:	mov	r7, #1
   11d10:	mov	r5, r0
   11d14:	mov	r9, r1
   11d18:	mov	r8, r2
   11d1c:	mov	r4, #0
   11d20:	mov	r6, r7
   11d24:	ldr	sl, [pc, #144]	; 11dbc <ftello64@plt+0x6a0>
   11d28:	cmp	r5, #0
   11d2c:	cmpne	r6, #0
   11d30:	bne	11d6c <ftello64@plt+0x650>
   11d34:	cmp	r5, #0
   11d38:	beq	11d60 <ftello64@plt+0x644>
   11d3c:	cmp	r7, #0
   11d40:	bne	11d50 <ftello64@plt+0x634>
   11d44:	mov	r0, r8
   11d48:	add	r4, r4, #1
   11d4c:	bl	115c0 <putchar@plt>
   11d50:	mov	r1, r5
   11d54:	ldr	r0, [pc, #100]	; 11dc0 <ftello64@plt+0x6a4>
   11d58:	bl	113e0 <printf@plt>
   11d5c:	add	r4, r4, r0
   11d60:	mov	r0, r4
   11d64:	add	sp, sp, #4
   11d68:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11d6c:	tst	r5, r6
   11d70:	beq	11db4 <ftello64@plt+0x698>
   11d74:	mov	r1, r9
   11d78:	mov	r0, r6
   11d7c:	bl	11b60 <ftello64@plt+0x444>
   11d80:	subs	fp, r0, #0
   11d84:	beq	11db4 <ftello64@plt+0x698>
   11d88:	cmp	r7, #0
   11d8c:	bne	11d9c <ftello64@plt+0x680>
   11d90:	mov	r0, r8
   11d94:	add	r4, r4, #1
   11d98:	bl	115c0 <putchar@plt>
   11d9c:	mov	r1, fp
   11da0:	mov	r0, sl
   11da4:	bl	113e0 <printf@plt>
   11da8:	add	r4, r4, r0
   11dac:	bic	r5, r5, r6
   11db0:	mov	r7, #0
   11db4:	lsl	r6, r6, #1
   11db8:	b	11d28 <ftello64@plt+0x60c>
   11dbc:			; <UNDEFINED> instruction: 0x0001b3b0
   11dc0:	andeq	fp, r1, r4, lsl r3
   11dc4:	push	{r4, r5, r6, r7, r8, r9, lr}
   11dc8:	sub	sp, sp, #76	; 0x4c
   11dcc:	mov	r6, r2
   11dd0:	mov	r9, r0
   11dd4:	mov	r2, #32
   11dd8:	mov	r4, r1
   11ddc:	add	r0, sp, #40	; 0x28
   11de0:	mov	r1, #0
   11de4:	bl	115b4 <memset@plt>
   11de8:	mov	r3, #2
   11dec:	add	r2, sp, #40	; 0x28
   11df0:	mov	r1, #0
   11df4:	mov	r0, r6
   11df8:	str	r3, [sp, #44]	; 0x2c
   11dfc:	add	r3, sp, #20
   11e00:	bl	116a4 <getaddrinfo@plt>
   11e04:	cmp	r0, #0
   11e08:	ldreq	r0, [sp, #20]
   11e0c:	beq	11e44 <ftello64@plt+0x728>
   11e10:	bl	11410 <gai_strerror@plt>
   11e14:	mov	r1, #0
   11e18:	mov	r3, r6
   11e1c:	ldr	r2, [pc, #272]	; 11f34 <ftello64@plt+0x818>
   11e20:	str	r0, [sp]
   11e24:	mov	r0, r1
   11e28:	bl	114c4 <error@plt>
   11e2c:	mvn	r0, #0
   11e30:	b	11ee8 <ftello64@plt+0x7cc>
   11e34:	ldr	r8, [r0, #4]
   11e38:	cmp	r8, #2
   11e3c:	beq	11ef0 <ftello64@plt+0x7d4>
   11e40:	ldr	r0, [r0, #28]
   11e44:	cmp	r0, #0
   11e48:	bne	11e34 <ftello64@plt+0x718>
   11e4c:	mov	r1, r0
   11e50:	mov	r3, r6
   11e54:	ldr	r2, [pc, #220]	; 11f38 <ftello64@plt+0x81c>
   11e58:	bl	114c4 <error@plt>
   11e5c:	ldr	r0, [sp, #20]
   11e60:	bl	11698 <freeaddrinfo@plt>
   11e64:	b	11e2c <ftello64@plt+0x710>
   11e68:	add	r1, r4, #20
   11e6c:	add	r0, sp, #24
   11e70:	strh	r8, [r4, #16]
   11e74:	bl	113bc <inet_aton@plt>
   11e78:	subs	r1, r0, #0
   11e7c:	addeq	r3, sp, #24
   11e80:	ldreq	r2, [pc, #180]	; 11f3c <ftello64@plt+0x820>
   11e84:	beq	11eb4 <ftello64@plt+0x798>
   11e88:	mov	r2, r4
   11e8c:	movw	r1, #35094	; 0x8916
   11e90:	mov	r0, r9
   11e94:	bl	17120 <argp_usage@@Base+0x260>
   11e98:	cmp	r0, #0
   11e9c:	bge	11ebc <ftello64@plt+0x7a0>
   11ea0:	bl	11584 <__errno_location@plt>
   11ea4:	ldr	r3, [pc, #148]	; 11f40 <ftello64@plt+0x824>
   11ea8:	ldr	r2, [pc, #148]	; 11f44 <ftello64@plt+0x828>
   11eac:	ldr	r1, [r0]
   11eb0:	mov	r0, r5
   11eb4:	bl	114c4 <error@plt>
   11eb8:	b	11e2c <ftello64@plt+0x710>
   11ebc:	ldr	r3, [pc, #132]	; 11f48 <ftello64@plt+0x82c>
   11ec0:	ldr	r0, [r3]
   11ec4:	cmp	r0, #0
   11ec8:	beq	11ee8 <ftello64@plt+0x7cc>
   11ecc:	ldr	r0, [r4, #20]
   11ed0:	bl	1144c <inet_ntoa@plt>
   11ed4:	mov	r2, r0
   11ed8:	mov	r1, r4
   11edc:	ldr	r0, [pc, #104]	; 11f4c <ftello64@plt+0x830>
   11ee0:	bl	113e0 <printf@plt>
   11ee4:	mov	r0, r5
   11ee8:	add	sp, sp, #76	; 0x4c
   11eec:	pop	{r4, r5, r6, r7, r8, r9, pc}
   11ef0:	mov	r7, #0
   11ef4:	mov	r3, #1
   11ef8:	add	r2, sp, #24
   11efc:	str	r7, [sp]
   11f00:	str	r7, [sp, #4]
   11f04:	str	r3, [sp, #8]
   11f08:	mov	r3, #16
   11f0c:	ldr	r1, [r0, #16]
   11f10:	ldr	r0, [r0, #20]
   11f14:	bl	11608 <getnameinfo@plt>
   11f18:	mov	r5, r0
   11f1c:	ldr	r0, [sp, #20]
   11f20:	bl	11698 <freeaddrinfo@plt>
   11f24:	cmp	r5, r7
   11f28:	beq	11e68 <ftello64@plt+0x74c>
   11f2c:	mov	r0, r5
   11f30:	b	11e10 <ftello64@plt+0x6f4>
   11f34:	muleq	r1, fp, r3
   11f38:	andeq	fp, r1, fp, lsl #8
   11f3c:			; <UNDEFINED> instruction: 0x0001b3b3
   11f40:	andeq	fp, r1, pc, asr #7
   11f44:	ldrdeq	fp, [r1], -fp	; <UNPREDICTABLE>
   11f48:	andeq	pc, r2, r0, lsl #24
   11f4c:	andeq	fp, r1, r5, ror #7
   11f50:	mov	r3, #2
   11f54:	push	{r4, r5, r6, lr}
   11f58:	mov	r6, r0
   11f5c:	mov	r4, r1
   11f60:	mov	r0, r2
   11f64:	add	r1, r1, #20
   11f68:	mov	r5, r2
   11f6c:	strh	r3, [r1, #-4]
   11f70:	bl	113bc <inet_aton@plt>
   11f74:	subs	r1, r0, #0
   11f78:	moveq	r3, r5
   11f7c:	ldreq	r2, [pc, #104]	; 11fec <ftello64@plt+0x8d0>
   11f80:	beq	11fb0 <ftello64@plt+0x894>
   11f84:	mov	r2, r4
   11f88:	movw	r1, #35100	; 0x891c
   11f8c:	mov	r0, r6
   11f90:	bl	17120 <argp_usage@@Base+0x260>
   11f94:	cmp	r0, #0
   11f98:	bge	11fbc <ftello64@plt+0x8a0>
   11f9c:	bl	11584 <__errno_location@plt>
   11fa0:	ldr	r3, [pc, #72]	; 11ff0 <ftello64@plt+0x8d4>
   11fa4:	ldr	r2, [pc, #72]	; 11ff4 <ftello64@plt+0x8d8>
   11fa8:	ldr	r1, [r0]
   11fac:	mov	r0, #0
   11fb0:	bl	114c4 <error@plt>
   11fb4:	mvn	r0, #0
   11fb8:	pop	{r4, r5, r6, pc}
   11fbc:	ldr	r3, [pc, #52]	; 11ff8 <ftello64@plt+0x8dc>
   11fc0:	ldr	r0, [r3]
   11fc4:	cmp	r0, #0
   11fc8:	popeq	{r4, r5, r6, pc}
   11fcc:	ldr	r0, [r4, #20]
   11fd0:	bl	1144c <inet_ntoa@plt>
   11fd4:	mov	r2, r0
   11fd8:	mov	r1, r4
   11fdc:	ldr	r0, [pc, #24]	; 11ffc <ftello64@plt+0x8e0>
   11fe0:	bl	113e0 <printf@plt>
   11fe4:	mov	r0, #0
   11fe8:	pop	{r4, r5, r6, pc}
   11fec:			; <UNDEFINED> instruction: 0x0001b3b3
   11ff0:	andeq	fp, r1, r2, lsr r4
   11ff4:	ldrdeq	fp, [r1], -fp	; <UNPREDICTABLE>
   11ff8:	andeq	pc, r2, r0, lsl #24
   11ffc:	andeq	fp, r1, r1, asr #8
   12000:	push	{r4, r5, r6, r7, r8, r9, lr}
   12004:	sub	sp, sp, #76	; 0x4c
   12008:	mov	r6, r2
   1200c:	mov	r9, r0
   12010:	mov	r2, #32
   12014:	mov	r4, r1
   12018:	add	r0, sp, #40	; 0x28
   1201c:	mov	r1, #0
   12020:	bl	115b4 <memset@plt>
   12024:	mov	r3, #2
   12028:	add	r2, sp, #40	; 0x28
   1202c:	mov	r1, #0
   12030:	mov	r0, r6
   12034:	str	r3, [sp, #44]	; 0x2c
   12038:	add	r3, sp, #20
   1203c:	bl	116a4 <getaddrinfo@plt>
   12040:	cmp	r0, #0
   12044:	ldreq	r0, [sp, #20]
   12048:	beq	12080 <ftello64@plt+0x964>
   1204c:	bl	11410 <gai_strerror@plt>
   12050:	mov	r1, #0
   12054:	mov	r3, r6
   12058:	ldr	r2, [pc, #272]	; 12170 <ftello64@plt+0xa54>
   1205c:	str	r0, [sp]
   12060:	mov	r0, r1
   12064:	bl	114c4 <error@plt>
   12068:	mvn	r0, #0
   1206c:	b	12124 <ftello64@plt+0xa08>
   12070:	ldr	r8, [r0, #4]
   12074:	cmp	r8, #2
   12078:	beq	1212c <ftello64@plt+0xa10>
   1207c:	ldr	r0, [r0, #28]
   12080:	cmp	r0, #0
   12084:	bne	12070 <ftello64@plt+0x954>
   12088:	mov	r1, r0
   1208c:	mov	r3, r6
   12090:	ldr	r2, [pc, #220]	; 12174 <ftello64@plt+0xa58>
   12094:	bl	114c4 <error@plt>
   12098:	ldr	r0, [sp, #20]
   1209c:	bl	11698 <freeaddrinfo@plt>
   120a0:	b	12068 <ftello64@plt+0x94c>
   120a4:	add	r1, r4, #20
   120a8:	add	r0, sp, #24
   120ac:	strh	r8, [r4, #16]
   120b0:	bl	113bc <inet_aton@plt>
   120b4:	subs	r1, r0, #0
   120b8:	addeq	r3, sp, #24
   120bc:	ldreq	r2, [pc, #180]	; 12178 <ftello64@plt+0xa5c>
   120c0:	beq	120f0 <ftello64@plt+0x9d4>
   120c4:	mov	r2, r4
   120c8:	movw	r1, #35096	; 0x8918
   120cc:	mov	r0, r9
   120d0:	bl	17120 <argp_usage@@Base+0x260>
   120d4:	cmp	r0, #0
   120d8:	bge	120f8 <ftello64@plt+0x9dc>
   120dc:	bl	11584 <__errno_location@plt>
   120e0:	ldr	r3, [pc, #148]	; 1217c <ftello64@plt+0xa60>
   120e4:	ldr	r2, [pc, #148]	; 12180 <ftello64@plt+0xa64>
   120e8:	ldr	r1, [r0]
   120ec:	mov	r0, r5
   120f0:	bl	114c4 <error@plt>
   120f4:	b	12068 <ftello64@plt+0x94c>
   120f8:	ldr	r3, [pc, #132]	; 12184 <ftello64@plt+0xa68>
   120fc:	ldr	r0, [r3]
   12100:	cmp	r0, #0
   12104:	beq	12124 <ftello64@plt+0xa08>
   12108:	ldr	r0, [r4, #20]
   1210c:	bl	1144c <inet_ntoa@plt>
   12110:	mov	r2, r0
   12114:	mov	r1, r4
   12118:	ldr	r0, [pc, #104]	; 12188 <ftello64@plt+0xa6c>
   1211c:	bl	113e0 <printf@plt>
   12120:	mov	r0, r5
   12124:	add	sp, sp, #76	; 0x4c
   12128:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1212c:	mov	r7, #0
   12130:	mov	r3, #1
   12134:	add	r2, sp, #24
   12138:	str	r7, [sp]
   1213c:	str	r7, [sp, #4]
   12140:	str	r3, [sp, #8]
   12144:	mov	r3, #16
   12148:	ldr	r1, [r0, #16]
   1214c:	ldr	r0, [r0, #20]
   12150:	bl	11608 <getnameinfo@plt>
   12154:	mov	r5, r0
   12158:	ldr	r0, [sp, #20]
   1215c:	bl	11698 <freeaddrinfo@plt>
   12160:	cmp	r5, r7
   12164:	beq	120a4 <ftello64@plt+0x988>
   12168:	mov	r0, r5
   1216c:	b	1204c <ftello64@plt+0x930>
   12170:	muleq	r1, fp, r3
   12174:	andeq	fp, r1, fp, lsl #8
   12178:			; <UNDEFINED> instruction: 0x0001b3b3
   1217c:	andeq	fp, r1, r7, ror #8
   12180:	ldrdeq	fp, [r1], -fp	; <UNPREDICTABLE>
   12184:	andeq	pc, r2, r0, lsl #24
   12188:	andeq	fp, r1, r6, ror r4
   1218c:	mov	r3, #2
   12190:	push	{r4, r5, r6, lr}
   12194:	mov	r6, r0
   12198:	mov	r4, r1
   1219c:	mov	r0, r2
   121a0:	add	r1, r1, #20
   121a4:	mov	r5, r2
   121a8:	strh	r3, [r1, #-4]
   121ac:	bl	113bc <inet_aton@plt>
   121b0:	subs	r1, r0, #0
   121b4:	moveq	r3, r5
   121b8:	ldreq	r2, [pc, #104]	; 12228 <ftello64@plt+0xb0c>
   121bc:	beq	121ec <ftello64@plt+0xad0>
   121c0:	mov	r2, r4
   121c4:	movw	r1, #35098	; 0x891a
   121c8:	mov	r0, r6
   121cc:	bl	17120 <argp_usage@@Base+0x260>
   121d0:	cmp	r0, #0
   121d4:	bge	121f8 <ftello64@plt+0xadc>
   121d8:	bl	11584 <__errno_location@plt>
   121dc:	ldr	r3, [pc, #72]	; 1222c <ftello64@plt+0xb10>
   121e0:	ldr	r2, [pc, #72]	; 12230 <ftello64@plt+0xb14>
   121e4:	ldr	r1, [r0]
   121e8:	mov	r0, #0
   121ec:	bl	114c4 <error@plt>
   121f0:	mvn	r0, #0
   121f4:	pop	{r4, r5, r6, pc}
   121f8:	ldr	r3, [pc, #52]	; 12234 <ftello64@plt+0xb18>
   121fc:	ldr	r0, [r3]
   12200:	cmp	r0, #0
   12204:	popeq	{r4, r5, r6, pc}
   12208:	ldr	r0, [r4, #20]
   1220c:	bl	1144c <inet_ntoa@plt>
   12210:	mov	r2, r0
   12214:	mov	r1, r4
   12218:	ldr	r0, [pc, #24]	; 12238 <ftello64@plt+0xb1c>
   1221c:	bl	113e0 <printf@plt>
   12220:	mov	r0, #0
   12224:	pop	{r4, r5, r6, pc}
   12228:			; <UNDEFINED> instruction: 0x0001b3b3
   1222c:	andeq	fp, r1, r1, lsr #9
   12230:	ldrdeq	fp, [r1], -fp	; <UNPREDICTABLE>
   12234:	andeq	pc, r2, r0, lsl #24
   12238:			; <UNDEFINED> instruction: 0x0001b4b0
   1223c:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   12240:	mov	r7, r0
   12244:	mov	r0, r2
   12248:	mov	r4, r1
   1224c:	mov	r6, r2
   12250:	bl	11518 <ether_aton@plt>
   12254:	subs	r5, r0, #0
   12258:	bne	12294 <ftello64@plt+0xb78>
   1225c:	mov	r1, sp
   12260:	mov	r0, r6
   12264:	bl	113b0 <ether_hostton@plt>
   12268:	cmp	r0, #0
   1226c:	moveq	r5, sp
   12270:	beq	12294 <ftello64@plt+0xb78>
   12274:	ldr	r2, [pc, #148]	; 12310 <ftello64@plt+0xbf4>
   12278:	mov	r3, r6
   1227c:	mov	r1, r5
   12280:	mov	r0, #0
   12284:	bl	114c4 <error@plt>
   12288:	mvn	r0, #0
   1228c:	add	sp, sp, #12
   12290:	pop	{r4, r5, r6, r7, pc}
   12294:	mov	r2, r4
   12298:	movw	r1, #35111	; 0x8927
   1229c:	mov	r0, r7
   122a0:	bl	17120 <argp_usage@@Base+0x260>
   122a4:	ldr	r3, [r5]
   122a8:	mov	r2, r4
   122ac:	movw	r1, #35108	; 0x8924
   122b0:	mov	r0, r7
   122b4:	str	r3, [r4, #18]
   122b8:	ldrh	r3, [r5, #4]
   122bc:	strh	r3, [r4, #22]
   122c0:	bl	17120 <argp_usage@@Base+0x260>
   122c4:	cmp	r0, #0
   122c8:	bge	122e0 <ftello64@plt+0xbc4>
   122cc:	bl	11584 <__errno_location@plt>
   122d0:	ldr	r3, [pc, #60]	; 12314 <ftello64@plt+0xbf8>
   122d4:	ldr	r2, [pc, #60]	; 12318 <ftello64@plt+0xbfc>
   122d8:	ldr	r1, [r0]
   122dc:	b	12280 <ftello64@plt+0xb64>
   122e0:	ldr	r3, [pc, #52]	; 1231c <ftello64@plt+0xc00>
   122e4:	ldr	r0, [r3]
   122e8:	cmp	r0, #0
   122ec:	beq	1228c <ftello64@plt+0xb70>
   122f0:	mov	r0, r5
   122f4:	bl	115fc <ether_ntoa@plt>
   122f8:	mov	r2, r0
   122fc:	mov	r1, r4
   12300:	ldr	r0, [pc, #24]	; 12320 <ftello64@plt+0xc04>
   12304:	bl	113e0 <printf@plt>
   12308:	mov	r0, #0
   1230c:	b	1228c <ftello64@plt+0xb70>
   12310:	andeq	fp, r1, r0, ror #9
   12314:	andeq	fp, r1, r5, lsl #10
   12318:	ldrdeq	fp, [r1], -fp	; <UNPREDICTABLE>
   1231c:	andeq	pc, r2, r0, lsl #24
   12320:	andeq	fp, r1, r3, lsl r5
   12324:	push	{r4, lr}
   12328:	mov	r4, r1
   1232c:	str	r2, [r1, #16]
   12330:	mov	r2, r1
   12334:	movw	r1, #35106	; 0x8922
   12338:	bl	17120 <argp_usage@@Base+0x260>
   1233c:	cmp	r0, #0
   12340:	bge	12360 <ftello64@plt+0xc44>
   12344:	bl	11584 <__errno_location@plt>
   12348:	ldr	r2, [pc, #56]	; 12388 <ftello64@plt+0xc6c>
   1234c:	ldr	r1, [r0]
   12350:	mov	r0, #0
   12354:	bl	114c4 <error@plt>
   12358:	mvn	r0, #0
   1235c:	pop	{r4, pc}
   12360:	ldr	r3, [pc, #36]	; 1238c <ftello64@plt+0xc70>
   12364:	ldr	r0, [r3]
   12368:	cmp	r0, #0
   1236c:	popeq	{r4, pc}
   12370:	mov	r1, r4
   12374:	ldr	r0, [pc, #20]	; 12390 <ftello64@plt+0xc74>
   12378:	ldr	r2, [r4, #16]
   1237c:	bl	113e0 <printf@plt>
   12380:	mov	r0, #0
   12384:	pop	{r4, pc}
   12388:	andeq	fp, r1, r2, asr #10
   1238c:	andeq	pc, r2, r0, lsl #24
   12390:	andeq	fp, r1, r4, asr r5
   12394:	push	{r4, lr}
   12398:	mov	r4, r1
   1239c:	str	r2, [r1, #16]
   123a0:	mov	r2, r1
   123a4:	movw	r1, #35102	; 0x891e
   123a8:	bl	17120 <argp_usage@@Base+0x260>
   123ac:	cmp	r0, #0
   123b0:	bge	123d0 <ftello64@plt+0xcb4>
   123b4:	bl	11584 <__errno_location@plt>
   123b8:	ldr	r2, [pc, #56]	; 123f8 <ftello64@plt+0xcdc>
   123bc:	ldr	r1, [r0]
   123c0:	mov	r0, #0
   123c4:	bl	114c4 <error@plt>
   123c8:	mvn	r0, #0
   123cc:	pop	{r4, pc}
   123d0:	ldr	r3, [pc, #36]	; 123fc <ftello64@plt+0xce0>
   123d4:	ldr	r0, [r3]
   123d8:	cmp	r0, #0
   123dc:	popeq	{r4, pc}
   123e0:	mov	r1, r4
   123e4:	ldr	r0, [pc, #20]	; 12400 <ftello64@plt+0xce4>
   123e8:	ldr	r2, [r4, #16]
   123ec:	bl	113e0 <printf@plt>
   123f0:	mov	r0, #0
   123f4:	pop	{r4, pc}
   123f8:	andeq	fp, r1, r4, ror r5
   123fc:	andeq	pc, r2, r0, lsl #24
   12400:	andeq	fp, r1, r9, lsl #11
   12404:	push	{r4, r5, r6, r7, lr}
   12408:	mov	lr, r1
   1240c:	mov	r7, r0
   12410:	mov	r4, r1
   12414:	mov	r5, r2
   12418:	mov	r6, r3
   1241c:	sub	sp, sp, #36	; 0x24
   12420:	ldm	lr!, {r0, r1, r2, r3}
   12424:	mov	ip, sp
   12428:	stmia	ip!, {r0, r1, r2, r3}
   1242c:	ldm	lr, {r0, r1, r2, r3}
   12430:	stm	ip, {r0, r1, r2, r3}
   12434:	mov	r2, sp
   12438:	movw	r1, #35091	; 0x8913
   1243c:	mov	r0, r7
   12440:	bl	17120 <argp_usage@@Base+0x260>
   12444:	cmp	r0, #0
   12448:	bge	1246c <ftello64@plt+0xd50>
   1244c:	bl	11584 <__errno_location@plt>
   12450:	ldr	r2, [pc, #220]	; 12534 <ftello64@plt+0xe18>
   12454:	ldr	r1, [r0]
   12458:	mov	r0, #0
   1245c:	bl	114c4 <error@plt>
   12460:	mvn	r0, #0
   12464:	add	sp, sp, #36	; 0x24
   12468:	pop	{r4, r5, r6, r7, pc}
   1246c:	ldrh	r3, [sp, #16]
   12470:	mov	r2, r4
   12474:	movw	r1, #35092	; 0x8914
   12478:	mov	r0, r7
   1247c:	orr	r3, r3, r5
   12480:	bic	r3, r3, r6
   12484:	strh	r3, [r4, #16]
   12488:	bl	17120 <argp_usage@@Base+0x260>
   1248c:	cmp	r0, #0
   12490:	bge	124a0 <ftello64@plt+0xd84>
   12494:	bl	11584 <__errno_location@plt>
   12498:	ldr	r2, [pc, #152]	; 12538 <ftello64@plt+0xe1c>
   1249c:	b	12454 <ftello64@plt+0xd38>
   124a0:	ldr	r3, [pc, #148]	; 1253c <ftello64@plt+0xe20>
   124a4:	ldr	r0, [r3]
   124a8:	cmp	r0, #0
   124ac:	beq	12464 <ftello64@plt+0xd48>
   124b0:	ldr	r3, [pc, #136]	; 12540 <ftello64@plt+0xe24>
   124b4:	cmp	r5, #0
   124b8:	ldr	r1, [pc, #132]	; 12544 <ftello64@plt+0xe28>
   124bc:	ldr	r0, [pc, #132]	; 12548 <ftello64@plt+0xe2c>
   124c0:	moveq	r1, r3
   124c4:	bl	113e0 <printf@plt>
   124c8:	cmp	r5, #0
   124cc:	beq	124f0 <ftello64@plt+0xdd4>
   124d0:	ldr	r0, [pc, #116]	; 1254c <ftello64@plt+0xe30>
   124d4:	bl	113e0 <printf@plt>
   124d8:	mov	r2, #44	; 0x2c
   124dc:	mov	r1, #0
   124e0:	mov	r0, r5
   124e4:	bl	11d08 <ftello64@plt+0x5ec>
   124e8:	mov	r0, #39	; 0x27
   124ec:	bl	115c0 <putchar@plt>
   124f0:	mov	r1, r4
   124f4:	ldr	r0, [pc, #84]	; 12550 <ftello64@plt+0xe34>
   124f8:	bl	113e0 <printf@plt>
   124fc:	cmp	r6, #0
   12500:	beq	12524 <ftello64@plt+0xe08>
   12504:	ldr	r0, [pc, #72]	; 12554 <ftello64@plt+0xe38>
   12508:	bl	113e0 <printf@plt>
   1250c:	mov	r2, #44	; 0x2c
   12510:	mov	r1, #0
   12514:	mov	r0, r6
   12518:	bl	11d08 <ftello64@plt+0x5ec>
   1251c:	mov	r0, #39	; 0x27
   12520:	bl	115c0 <putchar@plt>
   12524:	ldr	r0, [pc, #44]	; 12558 <ftello64@plt+0xe3c>
   12528:	bl	114dc <puts@plt>
   1252c:	mov	r0, #0
   12530:	b	12464 <ftello64@plt+0xd48>
   12534:			; <UNDEFINED> instruction: 0x0001b5b0
   12538:	andeq	fp, r1, r4, asr #11
   1253c:	andeq	pc, r2, r0, lsl #24
   12540:	andeq	fp, r1, ip, lsr #11
   12544:	andeq	lr, r1, fp, lsl #7
   12548:	ldrdeq	fp, [r1], -r8
   1254c:	strdeq	fp, [r1], -fp	; <UNPREDICTABLE>
   12550:	andeq	fp, r1, r8, ror #11
   12554:	strdeq	fp, [r1], -r1
   12558:	andeq	ip, r1, r5, lsl #8
   1255c:	push	{r4, r5, lr}
   12560:	sub	sp, sp, #36	; 0x24
   12564:	mov	r4, r1
   12568:	mov	r2, #32
   1256c:	mov	r1, #0
   12570:	mov	r5, r0
   12574:	mov	r0, sp
   12578:	bl	115b4 <memset@plt>
   1257c:	mov	r2, #16
   12580:	mov	r0, sp
   12584:	ldr	r1, [r4]
   12588:	bl	115cc <strncpy@plt>
   1258c:	mov	r3, #0
   12590:	strb	r3, [sp, #15]
   12594:	ldr	r3, [r4, #4]
   12598:	tst	r3, #8
   1259c:	bne	126d0 <ftello64@plt+0xfb4>
   125a0:	ldr	r3, [r4, #4]
   125a4:	tst	r3, #16
   125a8:	beq	125c4 <ftello64@plt+0xea8>
   125ac:	mov	r1, sp
   125b0:	mov	r0, r5
   125b4:	ldr	r2, [r4, #24]
   125b8:	bl	11f50 <ftello64@plt+0x834>
   125bc:	cmp	r0, #0
   125c0:	bne	126e8 <ftello64@plt+0xfcc>
   125c4:	ldr	r3, [r4, #4]
   125c8:	tst	r3, #32
   125cc:	beq	125e8 <ftello64@plt+0xecc>
   125d0:	mov	r1, sp
   125d4:	mov	r0, r5
   125d8:	ldr	r2, [r4, #28]
   125dc:	bl	12000 <ftello64@plt+0x8e4>
   125e0:	cmp	r0, #0
   125e4:	bne	126e8 <ftello64@plt+0xfcc>
   125e8:	ldr	r3, [r4, #4]
   125ec:	tst	r3, #64	; 0x40
   125f0:	beq	1260c <ftello64@plt+0xef0>
   125f4:	mov	r1, sp
   125f8:	mov	r0, r5
   125fc:	ldr	r2, [r4, #32]
   12600:	bl	1218c <ftello64@plt+0xa70>
   12604:	cmp	r0, #0
   12608:	bne	126e8 <ftello64@plt+0xfcc>
   1260c:	ldr	r3, [r4, #4]
   12610:	tst	r3, #1024	; 0x400
   12614:	beq	12630 <ftello64@plt+0xf14>
   12618:	mov	r1, sp
   1261c:	mov	r0, r5
   12620:	ldr	r2, [r4, #52]	; 0x34
   12624:	bl	1223c <ftello64@plt+0xb20>
   12628:	cmp	r0, #0
   1262c:	bne	126e8 <ftello64@plt+0xfcc>
   12630:	ldr	r3, [r4, #4]
   12634:	tst	r3, #128	; 0x80
   12638:	beq	12654 <ftello64@plt+0xf38>
   1263c:	mov	r1, sp
   12640:	mov	r0, r5
   12644:	ldr	r2, [r4, #36]	; 0x24
   12648:	bl	12324 <ftello64@plt+0xc08>
   1264c:	cmp	r0, #0
   12650:	bne	126e8 <ftello64@plt+0xfcc>
   12654:	ldr	r3, [r4, #4]
   12658:	tst	r3, #256	; 0x100
   1265c:	beq	12678 <ftello64@plt+0xf5c>
   12660:	mov	r1, sp
   12664:	mov	r0, r5
   12668:	ldr	r2, [r4, #40]	; 0x28
   1266c:	bl	12394 <ftello64@plt+0xc78>
   12670:	cmp	r0, #0
   12674:	bne	126e8 <ftello64@plt+0xfcc>
   12678:	ldr	r3, [r4, #4]
   1267c:	tst	r3, #1
   12680:	beq	1269c <ftello64@plt+0xf80>
   12684:	mov	r1, sp
   12688:	mov	r0, r5
   1268c:	ldr	r2, [r4, #8]
   12690:	bl	1600c <ftello64@plt+0x48f0>
   12694:	cmp	r0, #0
   12698:	bne	126e8 <ftello64@plt+0xfcc>
   1269c:	ldrd	r2, [r4, #44]	; 0x2c
   126a0:	orrs	r1, r2, r3
   126a4:	bne	126f0 <ftello64@plt+0xfd4>
   126a8:	ldr	r0, [r4, #4]
   126ac:	ands	r0, r0, #2
   126b0:	beq	126e8 <ftello64@plt+0xfcc>
   126b4:	mov	r0, r5
   126b8:	mov	r2, sp
   126bc:	ldr	r1, [r4]
   126c0:	ldr	r3, [r4, #12]
   126c4:	bl	14900 <ftello64@plt+0x31e4>
   126c8:	mov	r0, #0
   126cc:	b	126e8 <ftello64@plt+0xfcc>
   126d0:	mov	r1, sp
   126d4:	mov	r0, r5
   126d8:	ldr	r2, [r4, #20]
   126dc:	bl	11dc4 <ftello64@plt+0x6a8>
   126e0:	cmp	r0, #0
   126e4:	beq	125a0 <ftello64@plt+0xe84>
   126e8:	add	sp, sp, #36	; 0x24
   126ec:	pop	{r4, r5, pc}
   126f0:	mov	r1, sp
   126f4:	mov	r0, r5
   126f8:	bl	12404 <ftello64@plt+0xce8>
   126fc:	cmp	r0, #0
   12700:	beq	126a8 <ftello64@plt+0xf8c>
   12704:	b	126e8 <ftello64@plt+0xfcc>
   12708:	ldr	r0, [r0]
   1270c:	ldr	r1, [r1]
   12710:	b	113c8 <strcmp@plt>
   12714:	ldr	r3, [pc, #20]	; 12730 <ftello64@plt+0x1014>
   12718:	cmp	r0, r3
   1271c:	bne	12728 <ftello64@plt+0x100c>
   12720:	ldr	r0, [pc, #12]	; 12734 <ftello64@plt+0x1018>
   12724:	b	1195c <ftello64@plt+0x240>
   12728:	mov	r0, r1
   1272c:	bx	lr
   12730:	andeq	r0, r0, #4
   12734:	andeq	fp, r1, r6, asr r6
   12738:	push	{r4, r5, r6, lr}
   1273c:	mov	r5, r0
   12740:	ldr	r4, [pc, #44]	; 12774 <ftello64@plt+0x1058>
   12744:	ldr	r0, [r4]
   12748:	cmp	r0, #0
   1274c:	bne	1275c <ftello64@plt+0x1040>
   12750:	mov	r4, r0
   12754:	mov	r0, r4
   12758:	pop	{r4, r5, r6, pc}
   1275c:	mov	r1, r5
   12760:	bl	113c8 <strcmp@plt>
   12764:	cmp	r0, #0
   12768:	beq	12754 <ftello64@plt+0x1038>
   1276c:	add	r4, r4, #12
   12770:	b	12744 <ftello64@plt+0x1028>
   12774:			; <UNDEFINED> instruction: 0x0002f2b8
   12778:	push	{r4, r5, r6, r7, r8, lr}
   1277c:	mov	r8, #1
   12780:	mov	r1, #56	; 0x38
   12784:	mov	r6, r0
   12788:	ldr	r3, [pc, #140]	; 1281c <ftello64@plt+0x1100>
   1278c:	ldr	r7, [pc, #140]	; 12820 <ftello64@plt+0x1104>
   12790:	ldr	r5, [pc, #140]	; 12824 <ftello64@plt+0x1108>
   12794:	str	r8, [r3]
   12798:	ldr	r3, [r7]
   1279c:	ldr	r0, [r5]
   127a0:	add	r3, r3, r8
   127a4:	mul	r1, r1, r3
   127a8:	str	r3, [r7]
   127ac:	bl	17f18 <_obstack_memory_used@@Base+0xae4>
   127b0:	cmp	r0, #0
   127b4:	str	r0, [r5]
   127b8:	bne	127d0 <ftello64@plt+0x10b4>
   127bc:	bl	11584 <__errno_location@plt>
   127c0:	ldr	r2, [pc, #96]	; 12828 <ftello64@plt+0x110c>
   127c4:	ldr	r1, [r0]
   127c8:	mov	r0, r8
   127cc:	bl	114c4 <error@plt>
   127d0:	ldr	r3, [r7]
   127d4:	mov	r4, #56	; 0x38
   127d8:	ldr	lr, [pc, #76]	; 1282c <ftello64@plt+0x1110>
   127dc:	ldr	r7, [r5]
   127e0:	mul	r4, r4, r3
   127e4:	ldm	lr!, {r0, r1, r2, r3}
   127e8:	sub	r4, r4, #56	; 0x38
   127ec:	add	r5, r7, r4
   127f0:	mov	ip, r5
   127f4:	stmia	ip!, {r0, r1, r2, r3}
   127f8:	ldm	lr!, {r0, r1, r2, r3}
   127fc:	stmia	ip!, {r0, r1, r2, r3}
   12800:	ldm	lr!, {r0, r1, r2, r3}
   12804:	stmia	ip!, {r0, r1, r2, r3}
   12808:	ldm	lr, {r0, r1}
   1280c:	stm	ip, {r0, r1}
   12810:	mov	r0, r5
   12814:	str	r6, [r7, r4]
   12818:	pop	{r4, r5, r6, r7, r8, pc}
   1281c:	strdeq	pc, [r2], -ip
   12820:	strdeq	pc, [r2], -r0
   12824:	andeq	pc, r2, ip, ror #23
   12828:	andeq	fp, r1, r8, ror #12
   1282c:	andeq	fp, r1, r0, lsl #12
   12830:	push	{r0, r1, r2, r4, r5, lr}
   12834:	subs	r4, r0, #0
   12838:	mov	r5, r1
   1283c:	bne	12858 <ftello64@plt+0x113c>
   12840:	mov	r1, r4
   12844:	mov	r0, #1
   12848:	ldr	r3, [pc, #72]	; 12898 <ftello64@plt+0x117c>
   1284c:	str	r5, [sp]
   12850:	ldr	r2, [pc, #68]	; 1289c <ftello64@plt+0x1180>
   12854:	bl	114c4 <error@plt>
   12858:	ldr	r3, [r4, #4]
   1285c:	tst	r3, #8
   12860:	beq	12880 <ftello64@plt+0x1164>
   12864:	ldr	r3, [r4]
   12868:	mov	r1, #0
   1286c:	mov	r0, #1
   12870:	ldr	r2, [pc, #40]	; 128a0 <ftello64@plt+0x1184>
   12874:	str	r3, [sp]
   12878:	ldr	r3, [pc, #24]	; 12898 <ftello64@plt+0x117c>
   1287c:	bl	114c4 <error@plt>
   12880:	ldr	r3, [r4, #4]
   12884:	str	r5, [r4, #20]
   12888:	orr	r3, r3, #8
   1288c:	str	r3, [r4, #4]
   12890:	add	sp, sp, #12
   12894:	pop	{r4, r5, pc}
   12898:	andeq	fp, r1, r7, asr #7
   1289c:	muleq	r1, r5, r6
   128a0:			; <UNDEFINED> instruction: 0x0001b6b8
   128a4:	push	{r0, r1, r2, r4, r5, lr}
   128a8:	subs	r4, r0, #0
   128ac:	mov	r5, r1
   128b0:	bne	128cc <ftello64@plt+0x11b0>
   128b4:	mov	r1, r4
   128b8:	mov	r0, #1
   128bc:	ldr	r3, [pc, #72]	; 1290c <ftello64@plt+0x11f0>
   128c0:	str	r5, [sp]
   128c4:	ldr	r2, [pc, #68]	; 12910 <ftello64@plt+0x11f4>
   128c8:	bl	114c4 <error@plt>
   128cc:	ldr	r3, [r4, #4]
   128d0:	tst	r3, #16
   128d4:	beq	128f4 <ftello64@plt+0x11d8>
   128d8:	ldr	r3, [r4]
   128dc:	mov	r1, #0
   128e0:	mov	r0, #1
   128e4:	ldr	r2, [pc, #40]	; 12914 <ftello64@plt+0x11f8>
   128e8:	str	r3, [sp]
   128ec:	ldr	r3, [pc, #24]	; 1290c <ftello64@plt+0x11f0>
   128f0:	bl	114c4 <error@plt>
   128f4:	ldr	r3, [r4, #4]
   128f8:	str	r5, [r4, #24]
   128fc:	orr	r3, r3, #16
   12900:	str	r3, [r4, #4]
   12904:	add	sp, sp, #12
   12908:	pop	{r4, r5, pc}
   1290c:	ldrdeq	fp, [r1], -pc	; <UNPREDICTABLE>
   12910:	muleq	r1, r5, r6
   12914:			; <UNDEFINED> instruction: 0x0001b6b8
   12918:	push	{r0, r1, r2, r4, r5, lr}
   1291c:	subs	r4, r0, #0
   12920:	mov	r5, r1
   12924:	bne	12940 <ftello64@plt+0x1224>
   12928:	mov	r1, r4
   1292c:	mov	r0, #1
   12930:	ldr	r3, [pc, #72]	; 12980 <ftello64@plt+0x1264>
   12934:	str	r5, [sp]
   12938:	ldr	r2, [pc, #68]	; 12984 <ftello64@plt+0x1268>
   1293c:	bl	114c4 <error@plt>
   12940:	ldr	r3, [r4, #4]
   12944:	tst	r3, #32
   12948:	beq	12968 <ftello64@plt+0x124c>
   1294c:	ldr	r3, [r4]
   12950:	mov	r1, #0
   12954:	mov	r0, #1
   12958:	ldr	r2, [pc, #40]	; 12988 <ftello64@plt+0x126c>
   1295c:	str	r3, [sp]
   12960:	ldr	r3, [pc, #24]	; 12980 <ftello64@plt+0x1264>
   12964:	bl	114c4 <error@plt>
   12968:	ldr	r3, [r4, #4]
   1296c:	str	r5, [r4, #28]
   12970:	orr	r3, r3, #32
   12974:	str	r3, [r4, #4]
   12978:	add	sp, sp, #12
   1297c:	pop	{r4, r5, pc}
   12980:	andeq	fp, r1, r7, ror #13
   12984:	muleq	r1, r5, r6
   12988:			; <UNDEFINED> instruction: 0x0001b6b8
   1298c:	push	{r0, r1, r2, r4, r5, lr}
   12990:	subs	r4, r0, #0
   12994:	mov	r5, r1
   12998:	bne	129b4 <ftello64@plt+0x1298>
   1299c:	mov	r1, r4
   129a0:	mov	r0, #1
   129a4:	ldr	r3, [pc, #72]	; 129f4 <ftello64@plt+0x12d8>
   129a8:	str	r5, [sp]
   129ac:	ldr	r2, [pc, #68]	; 129f8 <ftello64@plt+0x12dc>
   129b0:	bl	114c4 <error@plt>
   129b4:	ldr	r3, [r4, #4]
   129b8:	tst	r3, #64	; 0x40
   129bc:	beq	129dc <ftello64@plt+0x12c0>
   129c0:	ldr	r3, [r4]
   129c4:	mov	r1, #0
   129c8:	mov	r0, #1
   129cc:	ldr	r2, [pc, #40]	; 129fc <ftello64@plt+0x12e0>
   129d0:	str	r3, [sp]
   129d4:	ldr	r3, [pc, #24]	; 129f4 <ftello64@plt+0x12d8>
   129d8:	bl	114c4 <error@plt>
   129dc:	ldr	r3, [r4, #4]
   129e0:	str	r5, [r4, #32]
   129e4:	orr	r3, r3, #64	; 0x40
   129e8:	str	r3, [r4, #4]
   129ec:	add	sp, sp, #12
   129f0:	pop	{r4, r5, pc}
   129f4:	andeq	fp, r1, r2, lsl #14
   129f8:	muleq	r1, r5, r6
   129fc:			; <UNDEFINED> instruction: 0x0001b6b8
   12a00:	push	{r0, r1, r2, r4, r5, lr}
   12a04:	subs	r4, r0, #0
   12a08:	mov	r5, r1
   12a0c:	bne	12a28 <ftello64@plt+0x130c>
   12a10:	mov	r1, r4
   12a14:	mov	r0, #1
   12a18:	ldr	r3, [pc, #72]	; 12a68 <ftello64@plt+0x134c>
   12a1c:	str	r5, [sp]
   12a20:	ldr	r2, [pc, #68]	; 12a6c <ftello64@plt+0x1350>
   12a24:	bl	114c4 <error@plt>
   12a28:	ldr	r3, [r4, #4]
   12a2c:	tst	r3, #1024	; 0x400
   12a30:	beq	12a50 <ftello64@plt+0x1334>
   12a34:	ldr	r3, [r4]
   12a38:	mov	r1, #0
   12a3c:	mov	r0, #1
   12a40:	ldr	r2, [pc, #40]	; 12a70 <ftello64@plt+0x1354>
   12a44:	str	r3, [sp]
   12a48:	ldr	r3, [pc, #24]	; 12a68 <ftello64@plt+0x134c>
   12a4c:	bl	114c4 <error@plt>
   12a50:	ldr	r3, [r4, #4]
   12a54:	str	r5, [r4, #52]	; 0x34
   12a58:	orr	r3, r3, #1024	; 0x400
   12a5c:	str	r3, [r4, #4]
   12a60:	add	sp, sp, #12
   12a64:	pop	{r4, r5, pc}
   12a68:	strdeq	fp, [r1], -r4
   12a6c:	muleq	r1, r5, r6
   12a70:			; <UNDEFINED> instruction: 0x0001b6b8
   12a74:	push	{r4, r5, lr}
   12a78:	subs	r4, r0, #0
   12a7c:	sub	sp, sp, #20
   12a80:	mov	r5, r1
   12a84:	bne	12aa0 <ftello64@plt+0x1384>
   12a88:	mov	r1, r4
   12a8c:	mov	r0, #1
   12a90:	ldr	r3, [pc, #144]	; 12b28 <ftello64@plt+0x140c>
   12a94:	str	r5, [sp]
   12a98:	ldr	r2, [pc, #140]	; 12b2c <ftello64@plt+0x1410>
   12a9c:	bl	114c4 <error@plt>
   12aa0:	ldr	r3, [r4, #4]
   12aa4:	tst	r3, #128	; 0x80
   12aa8:	beq	12ac8 <ftello64@plt+0x13ac>
   12aac:	ldr	r3, [r4]
   12ab0:	mov	r1, #0
   12ab4:	mov	r0, #1
   12ab8:	ldr	r2, [pc, #112]	; 12b30 <ftello64@plt+0x1414>
   12abc:	str	r3, [sp]
   12ac0:	ldr	r3, [pc, #96]	; 12b28 <ftello64@plt+0x140c>
   12ac4:	bl	114c4 <error@plt>
   12ac8:	mov	r2, #0
   12acc:	add	r1, sp, #12
   12ad0:	mov	r0, r5
   12ad4:	bl	113d4 <strtol@plt>
   12ad8:	str	r0, [r4, #36]	; 0x24
   12adc:	ldrb	r3, [r5]
   12ae0:	cmp	r3, #0
   12ae4:	beq	12af8 <ftello64@plt+0x13dc>
   12ae8:	ldr	r3, [sp, #12]
   12aec:	ldrb	r3, [r3]
   12af0:	cmp	r3, #0
   12af4:	beq	12b14 <ftello64@plt+0x13f8>
   12af8:	ldr	r3, [r4]
   12afc:	mov	r1, #0
   12b00:	mov	r0, #1
   12b04:	ldr	r2, [pc, #40]	; 12b34 <ftello64@plt+0x1418>
   12b08:	str	r3, [sp]
   12b0c:	mov	r3, r5
   12b10:	bl	114c4 <error@plt>
   12b14:	ldr	r3, [r4, #4]
   12b18:	orr	r3, r3, #128	; 0x80
   12b1c:	str	r3, [r4, #4]
   12b20:	add	sp, sp, #20
   12b24:	pop	{r4, r5, pc}
   12b28:	andeq	fp, r1, r4, lsl r7
   12b2c:	andeq	fp, r1, lr, lsl r7
   12b30:			; <UNDEFINED> instruction: 0x0001b6b8
   12b34:	andeq	fp, r1, r2, asr #14
   12b38:	push	{r4, r5, lr}
   12b3c:	subs	r4, r0, #0
   12b40:	sub	sp, sp, #20
   12b44:	mov	r5, r1
   12b48:	bne	12b64 <ftello64@plt+0x1448>
   12b4c:	mov	r1, r4
   12b50:	mov	r0, #1
   12b54:	ldr	r3, [pc, #144]	; 12bec <ftello64@plt+0x14d0>
   12b58:	str	r5, [sp]
   12b5c:	ldr	r2, [pc, #140]	; 12bf0 <ftello64@plt+0x14d4>
   12b60:	bl	114c4 <error@plt>
   12b64:	ldr	r3, [r4, #4]
   12b68:	tst	r3, #256	; 0x100
   12b6c:	beq	12b8c <ftello64@plt+0x1470>
   12b70:	ldr	r3, [r4]
   12b74:	mov	r1, #0
   12b78:	mov	r0, #1
   12b7c:	ldr	r2, [pc, #112]	; 12bf4 <ftello64@plt+0x14d8>
   12b80:	str	r3, [sp]
   12b84:	ldr	r3, [pc, #96]	; 12bec <ftello64@plt+0x14d0>
   12b88:	bl	114c4 <error@plt>
   12b8c:	mov	r2, #0
   12b90:	add	r1, sp, #12
   12b94:	mov	r0, r5
   12b98:	bl	113d4 <strtol@plt>
   12b9c:	str	r0, [r4, #40]	; 0x28
   12ba0:	ldrb	r3, [r5]
   12ba4:	cmp	r3, #0
   12ba8:	beq	12bbc <ftello64@plt+0x14a0>
   12bac:	ldr	r3, [sp, #12]
   12bb0:	ldrb	r3, [r3]
   12bb4:	cmp	r3, #0
   12bb8:	beq	12bd8 <ftello64@plt+0x14bc>
   12bbc:	ldr	r3, [r4]
   12bc0:	mov	r1, #0
   12bc4:	mov	r0, #1
   12bc8:	ldr	r2, [pc, #40]	; 12bf8 <ftello64@plt+0x14dc>
   12bcc:	str	r3, [sp]
   12bd0:	mov	r3, r5
   12bd4:	bl	114c4 <error@plt>
   12bd8:	ldr	r3, [r4, #4]
   12bdc:	orr	r3, r3, #256	; 0x100
   12be0:	str	r3, [r4, #4]
   12be4:	add	sp, sp, #20
   12be8:	pop	{r4, r5, pc}
   12bec:	andeq	fp, r1, r4, ror r7
   12bf0:	andeq	fp, r1, lr, lsl r7
   12bf4:			; <UNDEFINED> instruction: 0x0001b6b8
   12bf8:	andeq	fp, r1, r2, asr #14
   12bfc:	push	{r0, r1, r2, r4, r5, lr}
   12c00:	subs	r4, r0, #0
   12c04:	mov	r5, r1
   12c08:	bne	12c20 <ftello64@plt+0x1504>
   12c0c:	mov	r3, r1
   12c10:	mov	r0, #1
   12c14:	ldr	r2, [pc, #80]	; 12c6c <ftello64@plt+0x1550>
   12c18:	mov	r1, r4
   12c1c:	bl	114c4 <error@plt>
   12c20:	ldr	r1, [pc, #72]	; 12c70 <ftello64@plt+0x1554>
   12c24:	mov	r0, r5
   12c28:	bl	1147c <strcasecmp@plt>
   12c2c:	cmp	r0, #0
   12c30:	moveq	r3, #2
   12c34:	strheq	r3, [r4, #16]
   12c38:	beq	12c58 <ftello64@plt+0x153c>
   12c3c:	ldr	r3, [r4]
   12c40:	mov	r1, #0
   12c44:	mov	r0, #1
   12c48:	ldr	r2, [pc, #36]	; 12c74 <ftello64@plt+0x1558>
   12c4c:	str	r3, [sp]
   12c50:	mov	r3, r5
   12c54:	bl	114c4 <error@plt>
   12c58:	ldr	r3, [r4, #4]
   12c5c:	orr	r3, r3, #4
   12c60:	str	r3, [r4, #4]
   12c64:	add	sp, sp, #12
   12c68:	pop	{r4, r5, pc}
   12c6c:	andeq	fp, r1, r1, lsl #15
   12c70:			; <UNDEFINED> instruction: 0x0001b7b0
   12c74:			; <UNDEFINED> instruction: 0x0001b7b5
   12c78:	cmp	r0, #0
   12c7c:	ldr	r3, [pc, #72]	; 12ccc <ftello64@plt+0x15b0>
   12c80:	push	{lr}		; (str lr, [sp, #-4]!)
   12c84:	ldrne	ip, [r0, #4]
   12c88:	ldreq	r0, [r3]
   12c8c:	orrne	ip, ip, #512	; 0x200
   12c90:	strne	ip, [r0, #4]
   12c94:	orreq	r0, r0, #512	; 0x200
   12c98:	ldmib	r3, {ip, lr}
   12c9c:	streq	r0, [r3]
   12ca0:	cmp	r2, #0
   12ca4:	mvn	r0, r1
   12ca8:	orrne	r1, r1, lr
   12cac:	orreq	r1, r1, ip
   12cb0:	andeq	r0, r0, lr
   12cb4:	strne	r1, [r3, #8]
   12cb8:	andne	r1, ip, r0
   12cbc:	streq	r1, [r3, #4]
   12cc0:	strne	r1, [r3, #4]
   12cc4:	streq	r0, [r3, #8]
   12cc8:	pop	{pc}		; (ldr pc, [sp], #4)
   12ccc:	andeq	pc, r2, r4, asr fp	; <UNPREDICTABLE>
   12cd0:	push	{r4, r5, r6, r7, r8, r9, lr}
   12cd4:	mov	r8, r0
   12cd8:	sub	sp, sp, #20
   12cdc:	mov	r4, r1
   12ce0:	ldr	r9, [pc, #136]	; 12d70 <ftello64@plt+0x1654>
   12ce4:	ldrb	r3, [r4]
   12ce8:	cmp	r3, #0
   12cec:	bne	12cf8 <ftello64@plt+0x15dc>
   12cf0:	add	sp, sp, #20
   12cf4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   12cf8:	mov	r1, #44	; 0x2c
   12cfc:	mov	r0, r4
   12d00:	bl	1156c <strchr@plt>
   12d04:	subs	r6, r0, #0
   12d08:	subne	r5, r6, r4
   12d0c:	bne	12d1c <ftello64@plt+0x1600>
   12d10:	mov	r0, r4
   12d14:	bl	11560 <strlen@plt>
   12d18:	mov	r5, r0
   12d1c:	add	r2, sp, #12
   12d20:	mov	r1, r5
   12d24:	mov	r0, r4
   12d28:	bl	11bfc <ftello64@plt+0x4e0>
   12d2c:	subs	r7, r0, #0
   12d30:	bne	12d50 <ftello64@plt+0x1634>
   12d34:	mov	r3, r5
   12d38:	mov	r2, r9
   12d3c:	str	r5, [sp]
   12d40:	mov	r1, r7
   12d44:	mov	r0, #1
   12d48:	str	r4, [sp, #4]
   12d4c:	bl	114c4 <error@plt>
   12d50:	mov	r1, r7
   12d54:	mov	r0, r8
   12d58:	ldr	r2, [sp, #12]
   12d5c:	add	r4, r4, r5
   12d60:	bl	12c78 <ftello64@plt+0x155c>
   12d64:	cmp	r6, #0
   12d68:	addne	r4, r4, #1
   12d6c:	b	12ce4 <ftello64@plt+0x15c8>
   12d70:	strdeq	fp, [r1], -r5
   12d74:	push	{r4, lr}
   12d78:	mov	r4, r0
   12d7c:	bl	12918 <ftello64@plt+0x11fc>
   12d80:	mov	r0, r4
   12d84:	mov	r2, #0
   12d88:	pop	{r4, lr}
   12d8c:	mov	r1, #16
   12d90:	b	12c78 <ftello64@plt+0x155c>
   12d94:	push	{r4, r5, r6, lr}
   12d98:	subs	r4, r0, #0
   12d9c:	bne	12db4 <ftello64@plt+0x1698>
   12da0:	ldr	r3, [pc, #96]	; 12e08 <ftello64@plt+0x16ec>
   12da4:	ldr	r4, [r3]
   12da8:	ldr	r3, [pc, #92]	; 12e0c <ftello64@plt+0x16f0>
   12dac:	cmp	r4, #0
   12db0:	moveq	r4, r3
   12db4:	ldr	r5, [pc, #84]	; 12e10 <ftello64@plt+0x16f4>
   12db8:	ldr	r1, [r5]
   12dbc:	cmp	r1, #0
   12dc0:	beq	12dd4 <ftello64@plt+0x16b8>
   12dc4:	mov	r0, r4
   12dc8:	bl	113c8 <strcmp@plt>
   12dcc:	cmp	r0, #0
   12dd0:	bne	12e00 <ftello64@plt+0x16e4>
   12dd4:	ldr	r1, [r5, #8]
   12dd8:	cmp	r1, #0
   12ddc:	bne	12df0 <ftello64@plt+0x16d4>
   12de0:	mov	r3, r4
   12de4:	ldr	r2, [pc, #40]	; 12e14 <ftello64@plt+0x16f8>
   12de8:	mov	r0, #1
   12dec:	bl	114c4 <error@plt>
   12df0:	ldr	r3, [pc, #32]	; 12e18 <ftello64@plt+0x16fc>
   12df4:	ldr	r2, [r5, #8]
   12df8:	str	r2, [r3]
   12dfc:	pop	{r4, r5, r6, pc}
   12e00:	add	r5, r5, #12
   12e04:	b	12db8 <ftello64@plt+0x169c>
   12e08:	strdeq	pc, [r2], -ip
   12e0c:	andeq	fp, r1, r8, lsl #16
   12e10:			; <UNDEFINED> instruction: 0x0002f2b8
   12e14:	andeq	fp, r1, r0, lsl r8
   12e18:	strdeq	pc, [r2], -r4
   12e1c:	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
   12e20:	mov	r3, #0
   12e24:	mov	r4, r0
   12e28:	ldr	r1, [pc, #404]	; 12fc4 <ftello64@plt+0x18a8>
   12e2c:	str	r3, [sp, #8]
   12e30:	str	r3, [sp, #12]
   12e34:	bl	11674 <fopen64@plt>
   12e38:	subs	r7, r0, #0
   12e3c:	bne	12e58 <ftello64@plt+0x173c>
   12e40:	bl	11584 <__errno_location@plt>
   12e44:	mov	r3, r4
   12e48:	ldr	r2, [pc, #376]	; 12fc8 <ftello64@plt+0x18ac>
   12e4c:	ldr	r1, [r0]
   12e50:	mov	r0, #1
   12e54:	bl	114c4 <error@plt>
   12e58:	ldr	r3, [pc, #364]	; 12fcc <ftello64@plt+0x18b0>
   12e5c:	mov	r2, #0
   12e60:	mov	r1, r2
   12e64:	ldr	r6, [pc, #356]	; 12fd0 <ftello64@plt+0x18b4>
   12e68:	ldr	r0, [pc, #356]	; 12fd4 <ftello64@plt+0x18b8>
   12e6c:	str	r3, [sp]
   12e70:	ldr	r3, [pc, #352]	; 12fd8 <ftello64@plt+0x18bc>
   12e74:	add	r8, r6, #12
   12e78:	bl	17254 <_obstack_begin@@Base>
   12e7c:	mov	r2, r7
   12e80:	add	r1, sp, #12
   12e84:	add	r0, sp, #8
   12e88:	bl	116bc <getline@plt>
   12e8c:	cmp	r0, #0
   12e90:	bgt	12f2c <ftello64@plt+0x1810>
   12e94:	ldr	r4, [pc, #308]	; 12fd0 <ftello64@plt+0x18b4>
   12e98:	ldr	r0, [sp, #8]
   12e9c:	bl	17030 <argp_usage@@Base+0x170>
   12ea0:	mov	r0, r7
   12ea4:	bl	115f0 <fclose@plt>
   12ea8:	ldr	r3, [r4, #24]
   12eac:	ldr	r2, [r4, #28]
   12eb0:	cmp	r2, r3
   12eb4:	bne	12ec4 <ftello64@plt+0x17a8>
   12eb8:	mov	r1, #1
   12ebc:	add	r0, r4, #12
   12ec0:	bl	17294 <_obstack_newchunk@@Base>
   12ec4:	ldr	r3, [r4, #24]
   12ec8:	add	r2, r3, #1
   12ecc:	str	r2, [r4, #24]
   12ed0:	mov	r2, #0
   12ed4:	strb	r2, [r3]
   12ed8:	ldr	r1, [r4, #20]
   12edc:	ldr	r3, [r4, #24]
   12ee0:	ldr	r0, [r4, #28]
   12ee4:	cmp	r3, r1
   12ee8:	ldrbeq	r2, [r4, #52]	; 0x34
   12eec:	orreq	r2, r2, #2
   12ef0:	strbeq	r2, [r4, #52]	; 0x34
   12ef4:	ldr	r2, [r4, #36]	; 0x24
   12ef8:	add	r3, r3, r2
   12efc:	bic	r3, r3, r2
   12f00:	ldr	r2, [r4, #16]
   12f04:	sub	ip, r3, r2
   12f08:	sub	r2, r0, r2
   12f0c:	cmp	ip, r2
   12f10:	movhi	r3, r0
   12f14:	str	r3, [r4, #20]
   12f18:	str	r3, [r4, #24]
   12f1c:	ldr	r3, [pc, #184]	; 12fdc <ftello64@plt+0x18c0>
   12f20:	str	r1, [r3]
   12f24:	add	sp, sp, #16
   12f28:	pop	{r4, r5, r6, r7, r8, pc}
   12f2c:	ldr	r4, [sp, #8]
   12f30:	mov	r0, r4
   12f34:	bl	11560 <strlen@plt>
   12f38:	subs	r5, r0, #0
   12f3c:	beq	12e7c <ftello64@plt+0x1760>
   12f40:	sub	r3, r5, #1
   12f44:	ldrb	r2, [r4, r3]
   12f48:	cmp	r2, #10
   12f4c:	bne	12f5c <ftello64@plt+0x1840>
   12f50:	cmp	r3, #0
   12f54:	movne	r5, r3
   12f58:	beq	12e7c <ftello64@plt+0x1760>
   12f5c:	add	r2, r4, r5
   12f60:	b	12f80 <ftello64@plt+0x1864>
   12f64:	ldrb	r3, [r4], #1
   12f68:	cmp	r3, #32
   12f6c:	beq	12f80 <ftello64@plt+0x1864>
   12f70:	cmp	r3, #35	; 0x23
   12f74:	beq	12e7c <ftello64@plt+0x1760>
   12f78:	cmp	r3, #9
   12f7c:	bne	12f88 <ftello64@plt+0x186c>
   12f80:	cmp	r4, r2
   12f84:	bne	12f64 <ftello64@plt+0x1848>
   12f88:	ldrd	r2, [r6, #24]
   12f8c:	sub	r3, r3, r2
   12f90:	cmp	r3, r5
   12f94:	bcs	12fa4 <ftello64@plt+0x1888>
   12f98:	mov	r1, r5
   12f9c:	mov	r0, r8
   12fa0:	bl	17294 <_obstack_newchunk@@Base>
   12fa4:	mov	r2, r5
   12fa8:	ldr	r1, [sp, #8]
   12fac:	ldr	r0, [r6, #24]
   12fb0:	bl	11434 <memcpy@plt>
   12fb4:	ldr	r3, [r6, #24]
   12fb8:	add	r5, r3, r5
   12fbc:	str	r5, [r6, #24]
   12fc0:	b	12e7c <ftello64@plt+0x1760>
   12fc4:	andeq	fp, r1, r4, asr #19
   12fc8:	andeq	fp, r1, sl, lsr #16
   12fcc:	andeq	r7, r1, r0, lsr r0
   12fd0:	andeq	pc, r2, r4, asr fp	; <UNPREDICTABLE>
   12fd4:	andeq	pc, r2, r0, ror #22
   12fd8:	andeq	r7, r1, ip, ror #29
   12fdc:	strdeq	pc, [r2], -r4
   12fe0:	cmp	r0, #0
   12fe4:	bxeq	lr
   12fe8:	ldr	r3, [pc, #112]	; 13060 <ftello64@plt+0x1944>
   12fec:	ldr	r1, [r0, #4]
   12ff0:	ldr	r2, [r3]
   12ff4:	cmp	r2, #0
   12ff8:	beq	13040 <ftello64@plt+0x1924>
   12ffc:	orr	r2, r2, r1
   13000:	str	r2, [r0, #4]
   13004:	mov	r2, #0
   13008:	str	r2, [r3]
   1300c:	ldmib	r3, {r2, ip}
   13010:	orrs	r1, r2, ip
   13014:	bxeq	lr
   13018:	ldr	r1, [r0, #44]	; 0x2c
   1301c:	orr	r1, r1, r2
   13020:	ldr	r2, [r0, #48]	; 0x30
   13024:	str	r1, [r0, #44]	; 0x2c
   13028:	orr	r2, r2, ip
   1302c:	str	r2, [r0, #48]	; 0x30
   13030:	mov	r2, #0
   13034:	str	r2, [r3, #4]
   13038:	str	r2, [r3, #8]
   1303c:	bx	lr
   13040:	cmp	r1, #0
   13044:	bne	1300c <ftello64@plt+0x18f0>
   13048:	mov	r2, #2
   1304c:	str	r2, [r0, #4]
   13050:	ldr	r2, [pc, #12]	; 13064 <ftello64@plt+0x1948>
   13054:	ldr	r2, [r2]
   13058:	str	r2, [r0, #12]
   1305c:	b	1300c <ftello64@plt+0x18f0>
   13060:	andeq	pc, r2, r4, asr fp	; <UNPREDICTABLE>
   13064:	strdeq	pc, [r2], -r4
   13068:	ldr	ip, [r2, #28]
   1306c:	cmp	r0, #108	; 0x6c
   13070:	mov	r3, r0
   13074:	ldr	r0, [ip]
   13078:	beq	131c4 <ftello64@plt+0x1aa8>
   1307c:	push	{r4, r5, r6, lr}
   13080:	mov	r4, r1
   13084:	mov	r5, r2
   13088:	bgt	13104 <ftello64@plt+0x19e8>
   1308c:	cmp	r3, #77	; 0x4d
   13090:	beq	131b0 <ftello64@plt+0x1a94>
   13094:	bgt	130b8 <ftello64@plt+0x199c>
   13098:	cmp	r3, #66	; 0x42
   1309c:	beq	1319c <ftello64@plt+0x1a80>
   130a0:	cmp	r3, #70	; 0x46
   130a4:	beq	131a8 <ftello64@plt+0x1a8c>
   130a8:	cmp	r3, #65	; 0x41
   130ac:	beq	13188 <ftello64@plt+0x1a6c>
   130b0:	mov	r0, #7
   130b4:	pop	{r4, r5, r6, pc}
   130b8:	cmp	r3, #98	; 0x62
   130bc:	beq	1319c <ftello64@plt+0x1a80>
   130c0:	bgt	130dc <ftello64@plt+0x19c0>
   130c4:	cmp	r3, #97	; 0x61
   130c8:	bne	130b0 <ftello64@plt+0x1994>
   130cc:	ldr	r3, [pc, #340]	; 13228 <ftello64@plt+0x1b0c>
   130d0:	mov	r2, #1
   130d4:	str	r2, [r3]
   130d8:	b	13180 <ftello64@plt+0x1a64>
   130dc:	cmp	r3, #100	; 0x64
   130e0:	beq	13190 <ftello64@plt+0x1a74>
   130e4:	cmp	r3, #105	; 0x69
   130e8:	bne	130b0 <ftello64@plt+0x1994>
   130ec:	bl	12fe0 <ftello64@plt+0x18c4>
   130f0:	mov	r0, r4
   130f4:	bl	12778 <ftello64@plt+0x105c>
   130f8:	ldr	r3, [r5, #28]
   130fc:	str	r0, [r3]
   13100:	b	13180 <ftello64@plt+0x1a64>
   13104:	cmp	r3, #256	; 0x100
   13108:	beq	131dc <ftello64@plt+0x1ac0>
   1310c:	bgt	13150 <ftello64@plt+0x1a34>
   13110:	cmp	r3, #112	; 0x70
   13114:	beq	13190 <ftello64@plt+0x1a74>
   13118:	bgt	1312c <ftello64@plt+0x1a10>
   1311c:	cmp	r3, #109	; 0x6d
   13120:	bne	130b0 <ftello64@plt+0x1994>
   13124:	bl	128a4 <ftello64@plt+0x1188>
   13128:	b	13180 <ftello64@plt+0x1a64>
   1312c:	cmp	r3, #115	; 0x73
   13130:	beq	131b8 <ftello64@plt+0x1a9c>
   13134:	cmp	r3, #118	; 0x76
   13138:	bne	130b0 <ftello64@plt+0x1994>
   1313c:	ldr	r2, [pc, #232]	; 1322c <ftello64@plt+0x1b10>
   13140:	ldr	r3, [r2]
   13144:	add	r3, r3, #1
   13148:	str	r3, [r2]
   1314c:	b	13180 <ftello64@plt+0x1a64>
   13150:	movw	r2, #258	; 0x102
   13154:	cmp	r3, r2
   13158:	beq	1320c <ftello64@plt+0x1af0>
   1315c:	blt	131e4 <ftello64@plt+0x1ac8>
   13160:	movw	r2, #259	; 0x103
   13164:	cmp	r3, r2
   13168:	beq	1321c <ftello64@plt+0x1b00>
   1316c:	ldr	r2, [pc, #188]	; 13230 <ftello64@plt+0x1b14>
   13170:	cmp	r3, r2
   13174:	ldreq	r3, [r5, #32]
   13178:	streq	ip, [r3]
   1317c:	bne	130b0 <ftello64@plt+0x1994>
   13180:	mov	r0, #0
   13184:	pop	{r4, r5, r6, pc}
   13188:	bl	12830 <ftello64@plt+0x1114>
   1318c:	b	13180 <ftello64@plt+0x1a64>
   13190:	mov	r1, r4
   13194:	bl	12d74 <ftello64@plt+0x1658>
   13198:	b	13180 <ftello64@plt+0x1a64>
   1319c:	mov	r1, r4
   131a0:	bl	1298c <ftello64@plt+0x1270>
   131a4:	b	13180 <ftello64@plt+0x1a64>
   131a8:	bl	12cd0 <ftello64@plt+0x15b4>
   131ac:	b	13180 <ftello64@plt+0x1a64>
   131b0:	bl	12a74 <ftello64@plt+0x1358>
   131b4:	b	13180 <ftello64@plt+0x1a64>
   131b8:	ldr	r0, [pc, #116]	; 13234 <ftello64@plt+0x1b18>
   131bc:	bl	12d94 <ftello64@plt+0x1678>
   131c0:	b	13180 <ftello64@plt+0x1a64>
   131c4:	ldr	r2, [pc, #108]	; 13238 <ftello64@plt+0x1b1c>
   131c8:	mov	r0, #0
   131cc:	ldr	r3, [r2]
   131d0:	add	r3, r3, #1
   131d4:	str	r3, [r2]
   131d8:	bx	lr
   131dc:	bl	12b38 <ftello64@plt+0x141c>
   131e0:	b	13180 <ftello64@plt+0x1a64>
   131e4:	cmp	r1, #0
   131e8:	beq	13204 <ftello64@plt+0x1ae8>
   131ec:	ldrb	r3, [r1]
   131f0:	cmp	r3, #64	; 0x40
   131f4:	bne	13204 <ftello64@plt+0x1ae8>
   131f8:	add	r0, r1, #1
   131fc:	bl	12e1c <ftello64@plt+0x1700>
   13200:	b	13180 <ftello64@plt+0x1a64>
   13204:	mov	r0, r4
   13208:	b	131bc <ftello64@plt+0x1aa0>
   1320c:	mov	r2, #0
   13210:	mov	r1, #65	; 0x41
   13214:	bl	12c78 <ftello64@plt+0x155c>
   13218:	b	13180 <ftello64@plt+0x1a64>
   1321c:	mov	r2, #1
   13220:	mov	r1, r2
   13224:	b	13214 <ftello64@plt+0x1af8>
   13228:	strdeq	pc, [r2], -r8
   1322c:	andeq	pc, r2, r0, lsl #24
   13230:	tsteq	r0, r3
   13234:	andeq	fp, r1, r5, asr #16
   13238:	andeq	pc, r2, r4, lsl #24
   1323c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13240:	sub	sp, sp, #20
   13244:	mov	r6, r0
   13248:	mov	r0, #0
   1324c:	mov	r8, r1
   13250:	add	r7, sp, #12
   13254:	ldr	r4, [pc, #436]	; 13410 <ftello64@plt+0x1cf4>
   13258:	ldr	r5, [pc, #436]	; 13414 <ftello64@plt+0x1cf8>
   1325c:	ldr	r3, [r4]
   13260:	str	r3, [sp, #12]
   13264:	bl	12d94 <ftello64@plt+0x1678>
   13268:	ldr	r3, [pc, #424]	; 13418 <ftello64@plt+0x1cfc>
   1326c:	add	r1, r5, #144	; 0x90
   13270:	ldr	r2, [pc, #420]	; 1341c <ftello64@plt+0x1d00>
   13274:	ldr	r0, [pc, #420]	; 13420 <ftello64@plt+0x1d04>
   13278:	str	r2, [r3]
   1327c:	bl	16f88 <argp_usage@@Base+0xc8>
   13280:	ldr	r3, [pc, #412]	; 13424 <ftello64@plt+0x1d08>
   13284:	ldr	ip, [pc, #412]	; 13428 <ftello64@plt+0x1d0c>
   13288:	ldm	r3, {r0, r1, r2, r3}
   1328c:	str	ip, [r5, #168]	; 0xa8
   13290:	stm	ip, {r0, r1, r2, r3}
   13294:	mov	r1, r6
   13298:	mov	r2, r8
   1329c:	add	r0, r5, #152	; 0x98
   132a0:	ldr	r3, [pc, #388]	; 1342c <ftello64@plt+0x1d10>
   132a4:	ldr	r3, [r3]
   132a8:	str	r3, [r5, #160]	; 0xa0
   132ac:	add	r3, sp, #8
   132b0:	str	r3, [sp]
   132b4:	mov	r3, #8
   132b8:	str	r7, [sp, #4]
   132bc:	bl	16548 <argp_parse@@Base>
   132c0:	ldr	r0, [sp, #12]
   132c4:	bl	12fe0 <ftello64@plt+0x18c4>
   132c8:	ldr	r1, [sp, #8]
   132cc:	cmp	r1, r6
   132d0:	bge	13300 <ftello64@plt+0x1be4>
   132d4:	add	r2, r8, r1, lsl #2
   132d8:	mov	r0, r7
   132dc:	sub	r1, r6, r1
   132e0:	bl	15cac <ftello64@plt+0x4590>
   132e4:	subs	r1, r0, #0
   132e8:	bne	132f8 <ftello64@plt+0x1bdc>
   132ec:	ldr	r2, [pc, #316]	; 13430 <ftello64@plt+0x1d14>
   132f0:	mov	r0, #1
   132f4:	bl	114c4 <error@plt>
   132f8:	ldr	r0, [sp, #12]
   132fc:	bl	12fe0 <ftello64@plt+0x18c4>
   13300:	ldr	r3, [r4]
   13304:	cmp	r3, #0
   13308:	bne	1336c <ftello64@plt+0x1c50>
   1330c:	ldr	r3, [pc, #288]	; 13434 <ftello64@plt+0x1d18>
   13310:	ldr	r3, [r3]
   13314:	blx	r3
   13318:	subs	r5, r0, #0
   1331c:	bne	13330 <ftello64@plt+0x1c14>
   13320:	ldr	r2, [pc, #272]	; 13438 <ftello64@plt+0x1d1c>
   13324:	mov	r1, r5
   13328:	mov	r0, #1
   1332c:	bl	114c4 <error@plt>
   13330:	ldr	r7, [pc, #260]	; 1343c <ftello64@plt+0x1d20>
   13334:	add	r5, r5, #8
   13338:	ldr	r8, [pc, #256]	; 13440 <ftello64@plt+0x1d24>
   1333c:	ldr	r9, [pc, #256]	; 13444 <ftello64@plt+0x1d28>
   13340:	ldr	r3, [r5, #-8]
   13344:	cmp	r3, #0
   13348:	bne	13374 <ftello64@plt+0x1c58>
   1334c:	ldr	r3, [r5, #-4]
   13350:	cmp	r3, #0
   13354:	bne	13374 <ftello64@plt+0x1c58>
   13358:	ldr	r3, [pc, #232]	; 13448 <ftello64@plt+0x1d2c>
   1335c:	mov	r2, #56	; 0x38
   13360:	ldr	r0, [r4]
   13364:	ldr	r1, [r7]
   13368:	bl	11680 <qsort@plt>
   1336c:	add	sp, sp, #20
   13370:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13374:	ldr	r3, [r7]
   13378:	mov	r1, #56	; 0x38
   1337c:	ldr	r0, [r4]
   13380:	add	r3, r3, #1
   13384:	mul	r1, r1, r3
   13388:	str	r3, [r7]
   1338c:	bl	17f18 <_obstack_memory_used@@Base+0xae4>
   13390:	cmp	r0, #0
   13394:	str	r0, [r4]
   13398:	bne	133b0 <ftello64@plt+0x1c94>
   1339c:	bl	11584 <__errno_location@plt>
   133a0:	mov	r2, r8
   133a4:	ldr	r1, [r0]
   133a8:	mov	r0, #1
   133ac:	bl	114c4 <error@plt>
   133b0:	ldr	r3, [r7]
   133b4:	mov	r6, #56	; 0x38
   133b8:	add	r5, r5, #8
   133bc:	ldr	lr, [pc, #136]	; 1344c <ftello64@plt+0x1d30>
   133c0:	ldr	fp, [r4]
   133c4:	mul	r6, r6, r3
   133c8:	ldm	lr!, {r0, r1, r2, r3}
   133cc:	sub	r6, r6, #56	; 0x38
   133d0:	add	sl, fp, r6
   133d4:	mov	ip, sl
   133d8:	stmia	ip!, {r0, r1, r2, r3}
   133dc:	ldm	lr!, {r0, r1, r2, r3}
   133e0:	stmia	ip!, {r0, r1, r2, r3}
   133e4:	ldm	lr!, {r0, r1, r2, r3}
   133e8:	stmia	ip!, {r0, r1, r2, r3}
   133ec:	ldm	lr, {r0, r1}
   133f0:	stm	ip, {r0, r1}
   133f4:	ldr	r3, [r5, #-12]
   133f8:	str	r3, [fp, r6]
   133fc:	mov	r3, #2
   13400:	str	r3, [sl, #4]
   13404:	ldr	r3, [r9]
   13408:	str	r3, [sl, #12]
   1340c:	b	13340 <ftello64@plt+0x1c24>
   13410:	andeq	pc, r2, ip, ror #23
   13414:			; <UNDEFINED> instruction: 0x0002f2b8
   13418:	andeq	pc, r2, r0, lsr #24
   1341c:	andeq	fp, r1, sp, asr #16
   13420:	andeq	fp, r1, r5, ror #16
   13424:	muleq	r2, ip, sl
   13428:	andeq	pc, r2, ip, lsl #23
   1342c:	strdeq	pc, [r2], -r8
   13430:	andeq	fp, r1, lr, ror #16
   13434:	muleq	r2, r8, sl
   13438:	andeq	fp, r1, r0, lsl #17
   1343c:	strdeq	pc, [r2], -r0
   13440:	andeq	fp, r1, r8, ror #12
   13444:	strdeq	pc, [r2], -r4
   13448:	andeq	r2, r1, r8, lsl #14
   1344c:	andeq	fp, r1, r0, lsl #12
   13450:	bx	lr
   13454:	cmp	r1, #0
   13458:	push	{r4, lr}
   1345c:	movle	r0, #0
   13460:	ble	13478 <ftello64@plt+0x1d5c>
   13464:	mov	r3, r2
   13468:	mov	r2, #0
   1346c:	mov	r1, r2
   13470:	ldr	r0, [r3]
   13474:	bl	11554 <strtoul@plt>
   13478:	bl	11548 <exit@plt>
   1347c:	push	{r4, r5, r6, lr}
   13480:	mov	r4, r0
   13484:	ldr	r0, [r0]
   13488:	bl	116c8 <if_nametoindex@plt>
   1348c:	subs	r5, r0, #0
   13490:	bne	134ac <ftello64@plt+0x1d90>
   13494:	bl	11584 <__errno_location@plt>
   13498:	ldr	r2, [pc, #60]	; 134dc <ftello64@plt+0x1dc0>
   1349c:	ldr	r1, [r0]
   134a0:	mov	r0, #1
   134a4:	ldr	r3, [r4]
   134a8:	bl	114c4 <error@plt>
   134ac:	mov	r1, r5
   134b0:	ldr	r0, [pc, #40]	; 134e0 <ftello64@plt+0x1dc4>
   134b4:	bl	113e0 <printf@plt>
   134b8:	ldr	r3, [pc, #36]	; 134e4 <ftello64@plt+0x1dc8>
   134bc:	ldr	r2, [r3]
   134c0:	ldr	r3, [r2]
   134c4:	add	r0, r3, r0
   134c8:	ldr	r3, [pc, #24]	; 134e8 <ftello64@plt+0x1dcc>
   134cc:	str	r0, [r2]
   134d0:	mov	r2, #1
   134d4:	str	r2, [r3]
   134d8:	pop	{r4, r5, r6, pc}
   134dc:	andeq	ip, r1, r0, lsl #24
   134e0:	andeq	sp, r1, r0
   134e4:	andeq	pc, r2, ip, lsl r5	; <UNPREDICTABLE>
   134e8:	andeq	pc, r2, r8, lsl #24
   134ec:	ldr	r3, [pc, #92]	; 13550 <ftello64@plt+0x1e34>
   134f0:	cmp	r1, #9
   134f4:	mov	r0, r1
   134f8:	push	{r4, lr}
   134fc:	ldr	r2, [r3]
   13500:	beq	13518 <ftello64@plt+0x1dfc>
   13504:	cmp	r1, #10
   13508:	moveq	r3, #0
   1350c:	ldrne	r3, [r2]
   13510:	addne	r3, r3, #1
   13514:	b	13530 <ftello64@plt+0x1e14>
   13518:	ldr	r3, [r2]
   1351c:	add	r1, r3, #7
   13520:	cmp	r3, #0
   13524:	movlt	r3, r1
   13528:	bic	r3, r3, #7
   1352c:	add	r3, r3, #8
   13530:	str	r3, [r2]
   13534:	ldr	r3, [pc, #24]	; 13554 <ftello64@plt+0x1e38>
   13538:	ldr	r1, [r3]
   1353c:	bl	11644 <putc@plt>
   13540:	ldr	r3, [pc, #16]	; 13558 <ftello64@plt+0x1e3c>
   13544:	mov	r2, #1
   13548:	str	r2, [r3]
   1354c:	pop	{r4, pc}
   13550:	andeq	pc, r2, ip, lsl r5	; <UNPREDICTABLE>
   13554:	andeq	pc, r2, r4, lsl ip	; <UNPREDICTABLE>
   13558:	andeq	pc, r2, r8, lsl #24
   1355c:	mov	r1, #10
   13560:	b	134ec <ftello64@plt+0x1dd0>
   13564:	mov	r1, #9
   13568:	b	134ec <ftello64@plt+0x1dd0>
   1356c:	push	{r4, r5, r6, lr}
   13570:	mov	r5, r1
   13574:	mov	r4, r2
   13578:	mov	r6, r0
   1357c:	bl	11584 <__errno_location@plt>
   13580:	mov	r2, #0
   13584:	cmp	r5, r2
   13588:	ldr	r5, [pc, #88]	; 135e8 <ftello64@plt+0x1ecc>
   1358c:	str	r2, [r0]
   13590:	bgt	135d0 <ftello64@plt+0x1eb4>
   13594:	ldr	r3, [r5]
   13598:	ldr	r3, [r3]
   1359c:	add	r4, r3, #7
   135a0:	cmp	r3, #0
   135a4:	movlt	r3, r4
   135a8:	bic	r4, r3, #7
   135ac:	add	r4, r4, #8
   135b0:	ldr	r3, [r5]
   135b4:	ldr	r3, [r3]
   135b8:	cmp	r3, r4
   135bc:	popge	{r4, r5, r6, pc}
   135c0:	mov	r1, #32
   135c4:	mov	r0, r6
   135c8:	bl	134ec <ftello64@plt+0x1dd0>
   135cc:	b	135b0 <ftello64@plt+0x1e94>
   135d0:	mov	r1, r2
   135d4:	ldr	r0, [r4]
   135d8:	bl	113d4 <strtol@plt>
   135dc:	subs	r4, r0, #0
   135e0:	bgt	135b0 <ftello64@plt+0x1e94>
   135e4:	b	13594 <ftello64@plt+0x1e78>
   135e8:	andeq	pc, r2, ip, lsl r5	; <UNPREDICTABLE>
   135ec:	push	{r4, r5, r6, lr}
   135f0:	mov	r5, r0
   135f4:	sub	r4, r1, #1
   135f8:	ldrb	r1, [r4, #1]!
   135fc:	cmp	r1, #0
   13600:	popeq	{r4, r5, r6, pc}
   13604:	mov	r0, r5
   13608:	bl	134ec <ftello64@plt+0x1dd0>
   1360c:	b	135f8 <ftello64@plt+0x1edc>
   13610:	cmp	r1, #0
   13614:	push	{r4, r5, r6, lr}
   13618:	mov	r5, r0
   1361c:	ldreq	r4, [r0]
   13620:	ldrne	r4, [r2]
   13624:	mov	r0, r4
   13628:	bl	12738 <ftello64@plt+0x101c>
   1362c:	subs	r6, r0, #0
   13630:	bne	1364c <ftello64@plt+0x1f30>
   13634:	bl	11584 <__errno_location@plt>
   13638:	mov	r3, r4
   1363c:	ldr	r2, [pc, #24]	; 1365c <ftello64@plt+0x1f40>
   13640:	ldr	r1, [r0]
   13644:	mov	r0, #1
   13648:	bl	114c4 <error@plt>
   1364c:	mov	r0, r5
   13650:	ldr	r1, [r6, #4]
   13654:	pop	{r4, r5, r6, lr}
   13658:	b	135ec <ftello64@plt+0x1ed0>
   1365c:	andeq	ip, r1, r9, lsr #24
   13660:	cmp	r1, #0
   13664:	push	{r4, r5, r6, lr}
   13668:	mov	r5, r0
   1366c:	ldreq	r4, [r0]
   13670:	ldrne	r4, [r2]
   13674:	mov	r0, r4
   13678:	bl	12738 <ftello64@plt+0x101c>
   1367c:	subs	r6, r0, #0
   13680:	bne	1369c <ftello64@plt+0x1f80>
   13684:	bl	11584 <__errno_location@plt>
   13688:	mov	r3, r4
   1368c:	ldr	r2, [pc, #24]	; 136ac <ftello64@plt+0x1f90>
   13690:	ldr	r1, [r0]
   13694:	mov	r0, #1
   13698:	bl	114c4 <error@plt>
   1369c:	mov	r0, r5
   136a0:	ldr	r1, [r6, #8]
   136a4:	pop	{r4, r5, r6, lr}
   136a8:	b	135ec <ftello64@plt+0x1ed0>
   136ac:	andeq	ip, r1, r9, lsr #24
   136b0:	ldr	r3, [pc, #4]	; 136bc <ftello64@plt+0x1fa0>
   136b4:	ldr	r1, [r3]
   136b8:	b	135ec <ftello64@plt+0x1ed0>
   136bc:	andeq	pc, r2, r4, asr #23
   136c0:	ldr	r1, [r0]
   136c4:	b	135ec <ftello64@plt+0x1ed0>
   136c8:	ldr	r1, [pc]	; 136d0 <ftello64@plt+0x1fb4>
   136cc:	b	135ec <ftello64@plt+0x1ed0>
   136d0:	andeq	ip, r1, lr, lsr ip
   136d4:	ldr	r1, [pc]	; 136dc <ftello64@plt+0x1fc0>
   136d8:	b	135ec <ftello64@plt+0x1ed0>
   136dc:	andeq	ip, r1, lr, lsr ip
   136e0:	cmp	r1, #0
   136e4:	push	{r4, r5, r6, lr}
   136e8:	mov	r6, r3
   136ec:	ble	137e4 <ftello64@plt+0x20c8>
   136f0:	mov	r5, r2
   136f4:	ldr	r1, [r2]
   136f8:	ldrb	r3, [r1]
   136fc:	cmp	r3, #37	; 0x25
   13700:	bne	137e4 <ftello64@plt+0x20c8>
   13704:	ldrb	r3, [r1, #1]
   13708:	cmp	r3, #35	; 0x23
   1370c:	addne	r4, r1, #1
   13710:	addeq	r4, r1, #2
   13714:	bl	1153c <__ctype_b_loc@plt>
   13718:	ldr	r2, [r0]
   1371c:	mov	r0, r4
   13720:	mov	r1, r0
   13724:	add	r0, r0, #1
   13728:	ldrb	ip, [r0, #-1]
   1372c:	lsl	r3, ip, #1
   13730:	ldrh	r3, [r2, r3]
   13734:	tst	r3, #2048	; 0x800
   13738:	bne	13720 <ftello64@plt+0x2004>
   1373c:	and	ip, ip, #223	; 0xdf
   13740:	cmp	ip, #72	; 0x48
   13744:	bne	13754 <ftello64@plt+0x2038>
   13748:	ldrb	r3, [r1, #1]
   1374c:	cmp	r3, #0
   13750:	movne	r1, r0
   13754:	ldrb	r0, [r1]
   13758:	cmp	r0, #88	; 0x58
   1375c:	beq	137d4 <ftello64@plt+0x20b8>
   13760:	bhi	137b4 <ftello64@plt+0x2098>
   13764:	cmp	r0, #72	; 0x48
   13768:	beq	137d4 <ftello64@plt+0x20b8>
   1376c:	cmp	r0, #79	; 0x4f
   13770:	beq	137dc <ftello64@plt+0x20c0>
   13774:	mov	r3, #105	; 0x69
   13778:	strb	r3, [r1]
   1377c:	mov	r3, #0
   13780:	strb	r3, [r1, #1]
   13784:	ldr	r0, [r5]
   13788:	mov	r1, r6
   1378c:	bl	113e0 <printf@plt>
   13790:	ldr	r3, [pc, #84]	; 137ec <ftello64@plt+0x20d0>
   13794:	ldr	r2, [r3]
   13798:	ldr	r3, [r2]
   1379c:	add	r0, r3, r0
   137a0:	ldr	r3, [pc, #72]	; 137f0 <ftello64@plt+0x20d4>
   137a4:	str	r0, [r2]
   137a8:	mov	r2, #1
   137ac:	str	r2, [r3]
   137b0:	pop	{r4, r5, r6, pc}
   137b4:	cmp	r0, #111	; 0x6f
   137b8:	beq	137dc <ftello64@plt+0x20c0>
   137bc:	cmp	r0, #120	; 0x78
   137c0:	beq	137cc <ftello64@plt+0x20b0>
   137c4:	cmp	r0, #104	; 0x68
   137c8:	bne	13774 <ftello64@plt+0x2058>
   137cc:	mov	r3, #120	; 0x78
   137d0:	b	13778 <ftello64@plt+0x205c>
   137d4:	mov	r3, #88	; 0x58
   137d8:	b	13778 <ftello64@plt+0x205c>
   137dc:	mov	r3, #111	; 0x6f
   137e0:	b	13778 <ftello64@plt+0x205c>
   137e4:	ldr	r0, [pc, #8]	; 137f4 <ftello64@plt+0x20d8>
   137e8:	b	13788 <ftello64@plt+0x206c>
   137ec:	andeq	pc, r2, ip, lsl r5	; <UNPREDICTABLE>
   137f0:	andeq	pc, r2, r8, lsl #24
   137f4:	andeq	sp, r1, r0
   137f8:	push	{r4, r5, r6, lr}
   137fc:	mov	r4, r0
   13800:	mov	r5, r1
   13804:	mov	r6, r2
   13808:	movw	r1, #35105	; 0x8921
   1380c:	ldr	r2, [r0, #4]
   13810:	ldr	r0, [r0, #8]
   13814:	bl	17120 <argp_usage@@Base+0x260>
   13818:	cmp	r0, #0
   1381c:	bge	1383c <ftello64@plt+0x2120>
   13820:	bl	11584 <__errno_location@plt>
   13824:	ldr	r2, [pc, #44]	; 13858 <ftello64@plt+0x213c>
   13828:	ldr	r1, [r0]
   1382c:	mov	r0, #1
   13830:	ldr	r3, [r4, #4]
   13834:	pop	{r4, r5, r6, lr}
   13838:	b	114c4 <error@plt>
   1383c:	ldr	r3, [r4, #4]
   13840:	mov	r2, r6
   13844:	mov	r1, r5
   13848:	mov	r0, r4
   1384c:	pop	{r4, r5, r6, lr}
   13850:	ldr	r3, [r3, #16]
   13854:	b	136e0 <ftello64@plt+0x1fc4>
   13858:	andeq	ip, r1, sl, asr #24
   1385c:	push	{r4, r5, r6, lr}
   13860:	mov	r4, r0
   13864:	mov	r5, r1
   13868:	mov	r6, r2
   1386c:	movw	r1, #35101	; 0x891d
   13870:	ldr	r2, [r0, #4]
   13874:	ldr	r0, [r0, #8]
   13878:	bl	17120 <argp_usage@@Base+0x260>
   1387c:	cmp	r0, #0
   13880:	bge	138a0 <ftello64@plt+0x2184>
   13884:	bl	11584 <__errno_location@plt>
   13888:	ldr	r2, [pc, #44]	; 138bc <ftello64@plt+0x21a0>
   1388c:	ldr	r1, [r0]
   13890:	mov	r0, #1
   13894:	ldr	r3, [r4, #4]
   13898:	pop	{r4, r5, r6, lr}
   1389c:	b	114c4 <error@plt>
   138a0:	ldr	r3, [r4, #4]
   138a4:	mov	r2, r6
   138a8:	mov	r1, r5
   138ac:	mov	r0, r4
   138b0:	pop	{r4, r5, r6, lr}
   138b4:	ldr	r3, [r3, #16]
   138b8:	b	136e0 <ftello64@plt+0x1fc4>
   138bc:	andeq	ip, r1, pc, ror #24
   138c0:	ldr	r3, [r0, #4]
   138c4:	ldrb	r3, [r3, #26]
   138c8:	b	136e0 <ftello64@plt+0x1fc4>
   138cc:	ldr	r3, [r0, #4]
   138d0:	ldrh	r3, [r3, #24]
   138d4:	cmp	r3, #255	; 0xff
   138d8:	bls	138e0 <ftello64@plt+0x21c4>
   138dc:	b	136e0 <ftello64@plt+0x1fc4>
   138e0:	ldr	r1, [pc]	; 138e8 <ftello64@plt+0x21cc>
   138e4:	b	135ec <ftello64@plt+0x1ed0>
   138e8:	muleq	r1, r7, ip
   138ec:	ldr	r3, [r0, #4]
   138f0:	ldrb	r3, [r3, #27]
   138f4:	cmp	r3, #0
   138f8:	beq	13900 <ftello64@plt+0x21e4>
   138fc:	b	136e0 <ftello64@plt+0x1fc4>
   13900:	ldr	r1, [pc]	; 13908 <ftello64@plt+0x21ec>
   13904:	b	135ec <ftello64@plt+0x1ed0>
   13908:	muleq	r1, r7, ip
   1390c:	cmp	r1, #0
   13910:	push	{r4, r5, r6, lr}
   13914:	mov	r6, r3
   13918:	ble	139fc <ftello64@plt+0x22e0>
   1391c:	mov	r5, r2
   13920:	ldr	r4, [r2]
   13924:	ldrb	r3, [r4]
   13928:	cmp	r3, #37	; 0x25
   1392c:	bne	139fc <ftello64@plt+0x22e0>
   13930:	bl	1153c <__ctype_b_loc@plt>
   13934:	ldr	ip, [r0]
   13938:	add	r0, r4, #1
   1393c:	mov	r1, r0
   13940:	add	r0, r0, #1
   13944:	ldrb	r2, [r0, #-1]
   13948:	lsl	r3, r2, #1
   1394c:	ldrh	r3, [ip, r3]
   13950:	tst	r3, #2048	; 0x800
   13954:	bne	1393c <ftello64@plt+0x2220>
   13958:	cmp	r2, #35	; 0x23
   1395c:	moveq	r1, r0
   13960:	ldrb	r3, [r1]
   13964:	cmp	r3, #108	; 0x6c
   13968:	addeq	r1, r1, #1
   1396c:	ldrb	r0, [r1]
   13970:	cmp	r0, #88	; 0x58
   13974:	beq	139ec <ftello64@plt+0x22d0>
   13978:	bhi	139cc <ftello64@plt+0x22b0>
   1397c:	cmp	r0, #72	; 0x48
   13980:	beq	139ec <ftello64@plt+0x22d0>
   13984:	cmp	r0, #79	; 0x4f
   13988:	beq	139f4 <ftello64@plt+0x22d8>
   1398c:	mov	r3, #105	; 0x69
   13990:	strb	r3, [r1]
   13994:	mov	r3, #0
   13998:	strb	r3, [r1, #1]
   1399c:	ldr	r0, [r5]
   139a0:	mov	r1, r6
   139a4:	bl	113e0 <printf@plt>
   139a8:	ldr	r3, [pc, #84]	; 13a04 <ftello64@plt+0x22e8>
   139ac:	ldr	r2, [r3]
   139b0:	ldr	r3, [r2]
   139b4:	add	r0, r3, r0
   139b8:	ldr	r3, [pc, #72]	; 13a08 <ftello64@plt+0x22ec>
   139bc:	str	r0, [r2]
   139c0:	mov	r2, #1
   139c4:	str	r2, [r3]
   139c8:	pop	{r4, r5, r6, pc}
   139cc:	cmp	r0, #111	; 0x6f
   139d0:	beq	139f4 <ftello64@plt+0x22d8>
   139d4:	cmp	r0, #120	; 0x78
   139d8:	beq	139e4 <ftello64@plt+0x22c8>
   139dc:	cmp	r0, #104	; 0x68
   139e0:	bne	1398c <ftello64@plt+0x2270>
   139e4:	mov	r3, #120	; 0x78
   139e8:	b	13990 <ftello64@plt+0x2274>
   139ec:	mov	r3, #88	; 0x58
   139f0:	b	13990 <ftello64@plt+0x2274>
   139f4:	mov	r3, #111	; 0x6f
   139f8:	b	13990 <ftello64@plt+0x2274>
   139fc:	ldr	r0, [pc, #8]	; 13a0c <ftello64@plt+0x22f0>
   13a00:	b	139a0 <ftello64@plt+0x2284>
   13a04:	andeq	pc, r2, ip, lsl r5	; <UNPREDICTABLE>
   13a08:	andeq	pc, r2, r8, lsl #24
   13a0c:	andeq	sp, r1, r3, asr #32
   13a10:	ldr	r3, [r0, #4]
   13a14:	ldr	r3, [r3, #16]
   13a18:	cmp	r3, #0
   13a1c:	beq	13a24 <ftello64@plt+0x2308>
   13a20:	b	1390c <ftello64@plt+0x21f0>
   13a24:	ldr	r1, [pc]	; 13a2c <ftello64@plt+0x2310>
   13a28:	b	135ec <ftello64@plt+0x1ed0>
   13a2c:	muleq	r1, r7, ip
   13a30:	ldr	r3, [r0, #4]
   13a34:	ldr	r3, [r3, #20]
   13a38:	cmp	r3, #0
   13a3c:	beq	13a44 <ftello64@plt+0x2328>
   13a40:	b	1390c <ftello64@plt+0x21f0>
   13a44:	ldr	r1, [pc]	; 13a4c <ftello64@plt+0x2330>
   13a48:	b	135ec <ftello64@plt+0x1ed0>
   13a4c:	muleq	r1, r7, ip
   13a50:	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
   13a54:	mov	r7, r0
   13a58:	mov	sl, r3
   13a5c:	mov	r8, r1
   13a60:	mov	r9, r2
   13a64:	mov	r4, #0
   13a68:	ldr	r0, [r3, #4]
   13a6c:	bl	1144c <inet_ntoa@plt>
   13a70:	mov	r1, #46	; 0x2e
   13a74:	mov	r5, r0
   13a78:	bl	1156c <strchr@plt>
   13a7c:	mov	r6, r0
   13a80:	mov	r2, r4
   13a84:	mov	r1, r4
   13a88:	mov	r0, r5
   13a8c:	strb	r4, [r6], #1
   13a90:	bl	113d4 <strtol@plt>
   13a94:	mov	r1, #46	; 0x2e
   13a98:	str	r0, [sp]
   13a9c:	mov	r0, r6
   13aa0:	bl	1156c <strchr@plt>
   13aa4:	mov	r5, r0
   13aa8:	mov	r2, r4
   13aac:	mov	r1, r4
   13ab0:	mov	r0, r6
   13ab4:	strb	r4, [r5], #1
   13ab8:	bl	113d4 <strtol@plt>
   13abc:	mov	r1, #46	; 0x2e
   13ac0:	str	r0, [sp, #4]
   13ac4:	mov	r0, r5
   13ac8:	bl	1156c <strchr@plt>
   13acc:	mov	r6, r0
   13ad0:	mov	r2, r4
   13ad4:	mov	r1, r4
   13ad8:	mov	r0, r5
   13adc:	strb	r4, [r6], #1
   13ae0:	bl	113d4 <strtol@plt>
   13ae4:	mov	r2, r4
   13ae8:	mov	r1, r4
   13aec:	str	r0, [sp, #8]
   13af0:	mov	r0, r6
   13af4:	bl	113d4 <strtol@plt>
   13af8:	str	r0, [sp, #12]
   13afc:	ldr	r0, [sl, #4]
   13b00:	bl	1144c <inet_ntoa@plt>
   13b04:	cmp	r8, r4
   13b08:	ble	13b48 <ftello64@plt+0x242c>
   13b0c:	mov	r2, r4
   13b10:	mov	r1, r4
   13b14:	ldr	r0, [r9]
   13b18:	bl	113d4 <strtol@plt>
   13b1c:	cmp	r0, #3
   13b20:	bhi	13b5c <ftello64@plt+0x2440>
   13b24:	add	r3, sp, #16
   13b28:	add	r2, r9, #4
   13b2c:	add	r0, r3, r0, lsl #2
   13b30:	sub	r1, r8, #1
   13b34:	ldr	r3, [r0, #-16]
   13b38:	mov	r0, r7
   13b3c:	add	sp, sp, #16
   13b40:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   13b44:	b	136e0 <ftello64@plt+0x1fc4>
   13b48:	mov	r1, r0
   13b4c:	mov	r0, r7
   13b50:	add	sp, sp, #16
   13b54:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   13b58:	b	135ec <ftello64@plt+0x1ed0>
   13b5c:	add	sp, sp, #16
   13b60:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13b64:	push	{r4, r5, r6, lr}
   13b68:	mov	r4, r0
   13b6c:	mov	r5, r1
   13b70:	mov	r6, r2
   13b74:	movw	r1, #35093	; 0x8915
   13b78:	ldr	r2, [r0, #4]
   13b7c:	ldr	r0, [r0, #8]
   13b80:	bl	17120 <argp_usage@@Base+0x260>
   13b84:	cmp	r0, #0
   13b88:	bge	13ba8 <ftello64@plt+0x248c>
   13b8c:	bl	11584 <__errno_location@plt>
   13b90:	ldr	r2, [pc, #44]	; 13bc4 <ftello64@plt+0x24a8>
   13b94:	ldr	r1, [r0]
   13b98:	mov	r0, #1
   13b9c:	ldr	r3, [r4, #4]
   13ba0:	pop	{r4, r5, r6, lr}
   13ba4:	b	114c4 <error@plt>
   13ba8:	ldr	r3, [r4, #4]
   13bac:	mov	r2, r6
   13bb0:	mov	r1, r5
   13bb4:	mov	r0, r4
   13bb8:	pop	{r4, r5, r6, lr}
   13bbc:	add	r3, r3, #16
   13bc0:	b	13a50 <ftello64@plt+0x2334>
   13bc4:	andeq	ip, r1, r7, lsr #25
   13bc8:	push	{r4, r5, r6, lr}
   13bcc:	mov	r4, r0
   13bd0:	mov	r5, r1
   13bd4:	mov	r6, r2
   13bd8:	movw	r1, #35099	; 0x891b
   13bdc:	ldr	r2, [r0, #4]
   13be0:	ldr	r0, [r0, #8]
   13be4:	bl	17120 <argp_usage@@Base+0x260>
   13be8:	cmp	r0, #0
   13bec:	bge	13c0c <ftello64@plt+0x24f0>
   13bf0:	bl	11584 <__errno_location@plt>
   13bf4:	ldr	r2, [pc, #44]	; 13c28 <ftello64@plt+0x250c>
   13bf8:	ldr	r1, [r0]
   13bfc:	mov	r0, #1
   13c00:	ldr	r3, [r4, #4]
   13c04:	pop	{r4, r5, r6, lr}
   13c08:	b	114c4 <error@plt>
   13c0c:	ldr	r3, [r4, #4]
   13c10:	mov	r2, r6
   13c14:	mov	r1, r5
   13c18:	mov	r0, r4
   13c1c:	pop	{r4, r5, r6, lr}
   13c20:	add	r3, r3, #16
   13c24:	b	13a50 <ftello64@plt+0x2334>
   13c28:	andeq	ip, r1, sp, asr #25
   13c2c:	push	{r4, r5, r6, lr}
   13c30:	mov	r4, r0
   13c34:	mov	r5, r1
   13c38:	mov	r6, r2
   13c3c:	movw	r1, #35097	; 0x8919
   13c40:	ldr	r2, [r0, #4]
   13c44:	ldr	r0, [r0, #8]
   13c48:	bl	17120 <argp_usage@@Base+0x260>
   13c4c:	cmp	r0, #0
   13c50:	bge	13c70 <ftello64@plt+0x2554>
   13c54:	bl	11584 <__errno_location@plt>
   13c58:	ldr	r2, [pc, #44]	; 13c8c <ftello64@plt+0x2570>
   13c5c:	ldr	r1, [r0]
   13c60:	mov	r0, #1
   13c64:	ldr	r3, [r4, #4]
   13c68:	pop	{r4, r5, r6, lr}
   13c6c:	b	114c4 <error@plt>
   13c70:	ldr	r3, [r4, #4]
   13c74:	mov	r2, r6
   13c78:	mov	r1, r5
   13c7c:	mov	r0, r4
   13c80:	pop	{r4, r5, r6, lr}
   13c84:	add	r3, r3, #16
   13c88:	b	13a50 <ftello64@plt+0x2334>
   13c8c:	strdeq	ip, [r1], -r6
   13c90:	push	{r4, r5, r6, lr}
   13c94:	mov	r4, r0
   13c98:	mov	r5, r1
   13c9c:	mov	r6, r2
   13ca0:	movw	r1, #35095	; 0x8917
   13ca4:	ldr	r2, [r0, #4]
   13ca8:	ldr	r0, [r0, #8]
   13cac:	bl	17120 <argp_usage@@Base+0x260>
   13cb0:	cmp	r0, #0
   13cb4:	bge	13cd4 <ftello64@plt+0x25b8>
   13cb8:	bl	11584 <__errno_location@plt>
   13cbc:	ldr	r2, [pc, #44]	; 13cf0 <ftello64@plt+0x25d4>
   13cc0:	ldr	r1, [r0]
   13cc4:	mov	r0, #1
   13cc8:	ldr	r3, [r4, #4]
   13ccc:	pop	{r4, r5, r6, lr}
   13cd0:	b	114c4 <error@plt>
   13cd4:	ldr	r3, [r4, #4]
   13cd8:	mov	r2, r6
   13cdc:	mov	r1, r5
   13ce0:	mov	r0, r4
   13ce4:	pop	{r4, r5, r6, lr}
   13ce8:	add	r3, r3, #16
   13cec:	b	13a50 <ftello64@plt+0x2334>
   13cf0:	andeq	ip, r1, pc, lsl sp
   13cf4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13cf8:	mov	r7, #1
   13cfc:	mov	r4, r0
   13d00:	mov	r8, r1
   13d04:	mov	r9, r2
   13d08:	mov	r5, r3
   13d0c:	mov	r6, r7
   13d10:	cmp	r5, #0
   13d14:	cmpne	r6, #0
   13d18:	bne	13d58 <ftello64@plt+0x263c>
   13d1c:	cmp	r5, #0
   13d20:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   13d24:	cmp	r7, #0
   13d28:	bne	13d40 <ftello64@plt+0x2624>
   13d2c:	cmp	r8, #0
   13d30:	ble	13dbc <ftello64@plt+0x26a0>
   13d34:	mov	r0, r4
   13d38:	ldr	r1, [r9]
   13d3c:	bl	135ec <ftello64@plt+0x1ed0>
   13d40:	mov	r3, r5
   13d44:	add	r2, r9, #4
   13d48:	sub	r1, r8, #1
   13d4c:	mov	r0, r4
   13d50:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   13d54:	b	136e0 <ftello64@plt+0x1fc4>
   13d58:	tst	r6, r5
   13d5c:	beq	13da4 <ftello64@plt+0x2688>
   13d60:	mov	r1, #0
   13d64:	mov	r0, r6
   13d68:	bl	11b60 <ftello64@plt+0x444>
   13d6c:	subs	sl, r0, #0
   13d70:	beq	13da4 <ftello64@plt+0x2688>
   13d74:	cmp	r7, #0
   13d78:	bne	13d90 <ftello64@plt+0x2674>
   13d7c:	cmp	r8, #0
   13d80:	ble	13dac <ftello64@plt+0x2690>
   13d84:	mov	r0, r4
   13d88:	ldr	r1, [r9]
   13d8c:	bl	135ec <ftello64@plt+0x1ed0>
   13d90:	mov	r1, sl
   13d94:	mov	r0, r4
   13d98:	bic	r5, r5, r6
   13d9c:	mov	r7, #0
   13da0:	bl	135ec <ftello64@plt+0x1ed0>
   13da4:	lsl	r6, r6, #1
   13da8:	b	13d10 <ftello64@plt+0x25f4>
   13dac:	mov	r1, #32
   13db0:	mov	r0, r4
   13db4:	bl	134ec <ftello64@plt+0x1dd0>
   13db8:	b	13d90 <ftello64@plt+0x2674>
   13dbc:	mov	r1, #32
   13dc0:	mov	r0, r4
   13dc4:	bl	134ec <ftello64@plt+0x1dd0>
   13dc8:	b	13d40 <ftello64@plt+0x2624>
   13dcc:	push	{r0, r1, r2, r3, r4, lr}
   13dd0:	mov	r4, r0
   13dd4:	mov	r2, #15
   13dd8:	mov	r0, r3
   13ddc:	mov	r1, sp
   13de0:	bl	11cc4 <ftello64@plt+0x5a8>
   13de4:	mov	r1, sp
   13de8:	mov	r0, r4
   13dec:	bl	135ec <ftello64@plt+0x1ed0>
   13df0:	add	sp, sp, #16
   13df4:	pop	{r4, pc}
   13df8:	push	{r4, r5, r6, r7, r8, lr}
   13dfc:	mov	r4, r0
   13e00:	mov	r5, r1
   13e04:	mov	r6, r2
   13e08:	movw	r1, #35091	; 0x8913
   13e0c:	ldr	r2, [r0, #4]
   13e10:	ldr	r0, [r0, #8]
   13e14:	bl	17120 <argp_usage@@Base+0x260>
   13e18:	cmp	r0, #0
   13e1c:	bge	13e3c <ftello64@plt+0x2720>
   13e20:	bl	11584 <__errno_location@plt>
   13e24:	ldr	r2, [pc, #184]	; 13ee4 <ftello64@plt+0x27c8>
   13e28:	ldr	r1, [r0]
   13e2c:	mov	r0, #1
   13e30:	ldr	r3, [r4, #4]
   13e34:	pop	{r4, r5, r6, r7, r8, lr}
   13e38:	b	114c4 <error@plt>
   13e3c:	ldr	r3, [r4, #4]
   13e40:	cmp	r5, #0
   13e44:	ldrh	r7, [r3, #16]
   13e48:	ble	13ed4 <ftello64@plt+0x27b8>
   13e4c:	ldr	r8, [r6]
   13e50:	ldr	r1, [pc, #144]	; 13ee8 <ftello64@plt+0x27cc>
   13e54:	mov	r0, r8
   13e58:	bl	113c8 <strcmp@plt>
   13e5c:	cmp	r0, #0
   13e60:	bne	13e7c <ftello64@plt+0x2760>
   13e64:	mov	r3, r7
   13e68:	add	r2, r6, #4
   13e6c:	sub	r1, r5, #1
   13e70:	mov	r0, r4
   13e74:	pop	{r4, r5, r6, r7, r8, lr}
   13e78:	b	136e0 <ftello64@plt+0x1fc4>
   13e7c:	ldr	r1, [pc, #104]	; 13eec <ftello64@plt+0x27d0>
   13e80:	mov	r0, r8
   13e84:	bl	113c8 <strcmp@plt>
   13e88:	cmp	r0, #0
   13e8c:	bne	13ea8 <ftello64@plt+0x278c>
   13e90:	mov	r3, r7
   13e94:	add	r2, r6, #4
   13e98:	sub	r1, r5, #1
   13e9c:	mov	r0, r4
   13ea0:	pop	{r4, r5, r6, r7, r8, lr}
   13ea4:	b	13dcc <ftello64@plt+0x26b0>
   13ea8:	ldr	r1, [pc, #64]	; 13ef0 <ftello64@plt+0x27d4>
   13eac:	mov	r0, r8
   13eb0:	bl	113c8 <strcmp@plt>
   13eb4:	cmp	r0, #0
   13eb8:	moveq	r3, r7
   13ebc:	addeq	r2, r6, #4
   13ec0:	subeq	r1, r5, #1
   13ec4:	popne	{r4, r5, r6, r7, r8, pc}
   13ec8:	mov	r0, r4
   13ecc:	pop	{r4, r5, r6, r7, r8, lr}
   13ed0:	b	13cf4 <ftello64@plt+0x25d8>
   13ed4:	mov	r3, r7
   13ed8:	mov	r2, r6
   13edc:	mov	r1, r5
   13ee0:	b	13ec8 <ftello64@plt+0x27ac>
   13ee4:	andeq	ip, r1, r8, asr #26
   13ee8:	andeq	sp, r1, pc, lsl r4
   13eec:	andeq	fp, r1, sp, asr #21
   13ef0:	andeq	ip, r1, pc, ror #26
   13ef4:	push	{r4, r5, r6, r7, r8, lr}
   13ef8:	mov	r6, r0
   13efc:	mov	r5, r1
   13f00:	mov	r7, r2
   13f04:	mov	r8, r3
   13f08:	ldr	r4, [pc, #144]	; 13fa0 <ftello64@plt+0x2884>
   13f0c:	ldr	r0, [r4]
   13f10:	cmp	r0, #0
   13f14:	bne	13f68 <ftello64@plt+0x284c>
   13f18:	ldr	r4, [pc, #132]	; 13fa4 <ftello64@plt+0x2888>
   13f1c:	ldr	r0, [pc, #132]	; 13fa8 <ftello64@plt+0x288c>
   13f20:	bl	113e0 <printf@plt>
   13f24:	mov	r1, r6
   13f28:	ldr	r2, [r4]
   13f2c:	ldr	r3, [r2]
   13f30:	add	r0, r3, r0
   13f34:	str	r0, [r2]
   13f38:	mov	r0, r5
   13f3c:	bl	135ec <ftello64@plt+0x1ed0>
   13f40:	ldr	r0, [pc, #100]	; 13fac <ftello64@plt+0x2890>
   13f44:	bl	113e0 <printf@plt>
   13f48:	ldr	r2, [r4]
   13f4c:	ldr	r3, [r2]
   13f50:	add	r0, r3, r0
   13f54:	ldr	r3, [pc, #84]	; 13fb0 <ftello64@plt+0x2894>
   13f58:	str	r0, [r2]
   13f5c:	mov	r2, #1
   13f60:	str	r2, [r3]
   13f64:	pop	{r4, r5, r6, r7, r8, pc}
   13f68:	mov	r1, r6
   13f6c:	bl	113c8 <strcmp@plt>
   13f70:	cmp	r0, #0
   13f74:	bne	13f98 <ftello64@plt+0x287c>
   13f78:	ldr	r3, [r4, #4]
   13f7c:	cmp	r3, #0
   13f80:	popeq	{r4, r5, r6, r7, r8, pc}
   13f84:	mov	r2, r8
   13f88:	mov	r1, r7
   13f8c:	mov	r0, r5
   13f90:	pop	{r4, r5, r6, r7, r8, lr}
   13f94:	bx	r3
   13f98:	add	r4, r4, #8
   13f9c:	b	13f0c <ftello64@plt+0x27f0>
   13fa0:	andeq	pc, r2, r0, lsr #10
   13fa4:	andeq	pc, r2, ip, lsl r5	; <UNPREDICTABLE>
   13fa8:	andeq	ip, r1, r6, ror sp
   13fac:	andeq	sp, r1, sl, asr r1
   13fb0:	andeq	pc, r2, r8, lsl #24
   13fb4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13fb8:	add	fp, sp, #32
   13fbc:	sub	sp, sp, #12
   13fc0:	mov	r4, r0
   13fc4:	mov	r7, r1
   13fc8:	ldr	r8, [r0, #16]
   13fcc:	ldr	r3, [r0, #20]
   13fd0:	add	r3, r3, #1
   13fd4:	str	r3, [r0, #20]
   13fd8:	ldrb	r2, [r8]
   13fdc:	ldr	r3, [r4, #20]
   13fe0:	cmp	r2, #0
   13fe4:	beq	14054 <ftello64@plt+0x2938>
   13fe8:	cmp	r3, #1
   13fec:	movgt	r3, #0
   13ff0:	movle	r3, #1
   13ff4:	cmp	r2, #125	; 0x7d
   13ff8:	orrne	r3, r3, #1
   13ffc:	cmp	r3, #0
   14000:	beq	14054 <ftello64@plt+0x2938>
   14004:	mov	r5, r8
   14008:	b	1401c <ftello64@plt+0x2900>
   1400c:	cmp	r7, #0
   14010:	bne	1401c <ftello64@plt+0x2900>
   14014:	mov	r0, r4
   14018:	bl	134ec <ftello64@plt+0x1dd0>
   1401c:	mov	r8, r5
   14020:	ldrb	r1, [r5], #1
   14024:	cmp	r1, #36	; 0x24
   14028:	cmpne	r1, #0
   1402c:	movne	r9, #1
   14030:	moveq	r9, #0
   14034:	beq	1406c <ftello64@plt+0x2950>
   14038:	ldr	r2, [r4, #20]
   1403c:	subs	r3, r1, #125	; 0x7d
   14040:	movne	r3, #1
   14044:	cmp	r2, #1
   14048:	orrle	r3, r3, #1
   1404c:	cmp	r3, #0
   14050:	bne	1400c <ftello64@plt+0x28f0>
   14054:	ldr	r3, [r4, #20]
   14058:	str	r8, [r4, #16]
   1405c:	sub	r3, r3, #1
   14060:	str	r3, [r4, #20]
   14064:	sub	sp, fp, #32
   14068:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1406c:	cmp	r1, #36	; 0x24
   14070:	bne	14054 <ftello64@plt+0x2938>
   14074:	ldrb	r3, [r8, #1]
   14078:	add	r5, r8, #2
   1407c:	cmp	r3, #123	; 0x7b
   14080:	beq	140c4 <ftello64@plt+0x29a8>
   14084:	cmp	r3, #125	; 0x7d
   14088:	beq	140b4 <ftello64@plt+0x2998>
   1408c:	cmp	r3, #36	; 0x24
   14090:	beq	140b4 <ftello64@plt+0x2998>
   14094:	cmp	r7, #0
   14098:	bne	140bc <ftello64@plt+0x29a0>
   1409c:	mov	r0, r4
   140a0:	bl	134ec <ftello64@plt+0x1dd0>
   140a4:	ldrb	r1, [r8, #1]
   140a8:	mov	r0, r4
   140ac:	bl	134ec <ftello64@plt+0x1dd0>
   140b0:	b	140bc <ftello64@plt+0x29a0>
   140b4:	cmp	r7, #0
   140b8:	beq	140a4 <ftello64@plt+0x2988>
   140bc:	mov	r8, r5
   140c0:	b	13fd8 <ftello64@plt+0x28bc>
   140c4:	mov	r1, #125	; 0x7d
   140c8:	mov	r0, r5
   140cc:	bl	1156c <strchr@plt>
   140d0:	subs	r6, r0, #0
   140d4:	bne	140f4 <ftello64@plt+0x29d8>
   140d8:	mov	r1, r8
   140dc:	mov	r0, r4
   140e0:	bl	135ec <ftello64@plt+0x1ed0>
   140e4:	mov	r0, r8
   140e8:	bl	11560 <strlen@plt>
   140ec:	add	r5, r8, r0
   140f0:	b	140bc <ftello64@plt+0x29a0>
   140f4:	sub	r8, r6, r5
   140f8:	mov	r1, r5
   140fc:	add	r3, r8, #8
   14100:	mov	r2, r8
   14104:	bic	r3, r3, #7
   14108:	add	r5, r6, #1
   1410c:	sub	sp, sp, r3
   14110:	mov	r3, sp
   14114:	lsr	sl, r3, #3
   14118:	lsl	r3, sl, #3
   1411c:	mov	r0, r3
   14120:	str	r3, [fp, #-40]	; 0xffffffd8
   14124:	bl	11434 <memcpy@plt>
   14128:	cmp	r7, #0
   1412c:	strb	r9, [r8, sl, lsl #3]
   14130:	strne	r5, [r4, #16]
   14134:	bne	141bc <ftello64@plt+0x2aa0>
   14138:	mov	r0, r6
   1413c:	mov	r6, r7
   14140:	bl	11560 <strlen@plt>
   14144:	lsr	r0, r0, #1
   14148:	add	r0, r0, #7
   1414c:	bic	r0, r0, #7
   14150:	sub	sp, sp, r0
   14154:	mov	r8, sp
   14158:	ldrb	r3, [r5]
   1415c:	cmp	r3, #123	; 0x7b
   14160:	beq	141d0 <ftello64@plt+0x2ab4>
   14164:	mov	r2, r6
   14168:	add	r6, r8, r6, lsl #2
   1416c:	mov	r3, r8
   14170:	mov	r1, r4
   14174:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14178:	bl	13ef4 <ftello64@plt+0x27d8>
   1417c:	str	r5, [r4, #16]
   14180:	cmp	r8, r6
   14184:	beq	140bc <ftello64@plt+0x29a0>
   14188:	ldr	r0, [r6, #-4]!
   1418c:	bl	17030 <argp_usage@@Base+0x170>
   14190:	b	14180 <ftello64@plt+0x2a64>
   14194:	add	r5, r5, #1
   14198:	mov	r1, #1
   1419c:	mov	r0, r4
   141a0:	str	r5, [r4, #16]
   141a4:	bl	13fb4 <ftello64@plt+0x2898>
   141a8:	ldr	r3, [r4, #16]
   141ac:	ldrb	r2, [r3]
   141b0:	cmp	r2, #125	; 0x7d
   141b4:	addeq	r3, r3, #1
   141b8:	streq	r3, [r4, #16]
   141bc:	ldr	r5, [r4, #16]
   141c0:	ldrb	r3, [r5]
   141c4:	cmp	r3, #123	; 0x7b
   141c8:	beq	14194 <ftello64@plt+0x2a78>
   141cc:	b	140bc <ftello64@plt+0x29a0>
   141d0:	add	sl, r5, #1
   141d4:	mov	r1, #1
   141d8:	mov	r0, r4
   141dc:	str	sl, [r4, #16]
   141e0:	bl	13fb4 <ftello64@plt+0x2898>
   141e4:	ldr	r5, [r4, #16]
   141e8:	sub	r9, r5, sl
   141ec:	add	r0, r9, #1
   141f0:	bl	17bb4 <_obstack_memory_used@@Base+0x780>
   141f4:	mov	r2, r9
   141f8:	mov	r1, sl
   141fc:	str	r0, [r8, r6, lsl #2]
   14200:	bl	11434 <memcpy@plt>
   14204:	mov	r2, #0
   14208:	add	r6, r6, #1
   1420c:	strb	r2, [r0, r9]
   14210:	ldrb	r3, [r5]
   14214:	cmp	r3, #125	; 0x7d
   14218:	addeq	r5, r5, #1
   1421c:	b	14158 <ftello64@plt+0x2a3c>
   14220:	cmp	r3, r1
   14224:	bxge	lr
   14228:	mov	r1, #0
   1422c:	ldr	r3, [r2, r3, lsl #2]
   14230:	str	r3, [r0, #16]
   14234:	b	13fb4 <ftello64@plt+0x2898>
   14238:	push	{r4, r5, r6, lr}
   1423c:	subs	r6, r1, #0
   14240:	pople	{r4, r5, r6, pc}
   14244:	mov	r5, r0
   14248:	mov	r4, r2
   1424c:	ldr	r0, [r2]
   14250:	bl	12738 <ftello64@plt+0x101c>
   14254:	cmp	r0, #0
   14258:	mov	r2, r4
   1425c:	mov	r1, r6
   14260:	mov	r0, r5
   14264:	pop	{r4, r5, r6, lr}
   14268:	movne	r3, #1
   1426c:	moveq	r3, #2
   14270:	b	14220 <ftello64@plt+0x2b04>
   14274:	ldr	r3, [r0, #12]
   14278:	clz	r3, r3
   1427c:	lsr	r3, r3, #5
   14280:	b	14220 <ftello64@plt+0x2b04>
   14284:	ldr	r3, [pc, #132]	; 14310 <ftello64@plt+0x2bf4>
   14288:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
   1428c:	mov	r5, r0
   14290:	mov	r6, r1
   14294:	mov	r7, r2
   14298:	ldr	r4, [r3]
   1429c:	ldr	r3, [pc, #112]	; 14314 <ftello64@plt+0x2bf8>
   142a0:	ldr	r3, [r3]
   142a4:	orrs	r4, r4, r3
   142a8:	movne	r4, #1
   142ac:	bne	142f4 <ftello64@plt+0x2bd8>
   142b0:	add	r1, sp, #4
   142b4:	ldr	r0, [pc, #92]	; 14318 <ftello64@plt+0x2bfc>
   142b8:	str	r4, [sp, #4]
   142bc:	bl	11ca0 <ftello64@plt+0x584>
   142c0:	subs	r8, r0, #0
   142c4:	beq	142f4 <ftello64@plt+0x2bd8>
   142c8:	movw	r1, #35091	; 0x8913
   142cc:	ldr	r2, [r5, #4]
   142d0:	ldr	r0, [r5, #8]
   142d4:	bl	17120 <argp_usage@@Base+0x260>
   142d8:	cmp	r0, #0
   142dc:	bne	142f4 <ftello64@plt+0x2bd8>
   142e0:	ldr	r3, [r5, #4]
   142e4:	ldrh	r3, [r3, #16]
   142e8:	tst	r3, r8
   142ec:	movne	r4, #1
   142f0:	moveq	r4, #0
   142f4:	eor	r3, r4, #1
   142f8:	mov	r2, r7
   142fc:	mov	r1, r6
   14300:	mov	r0, r5
   14304:	bl	14220 <ftello64@plt+0x2b04>
   14308:	add	sp, sp, #8
   1430c:	pop	{r4, r5, r6, r7, r8, pc}
   14310:	strdeq	pc, [r2], -r8
   14314:	strdeq	pc, [r2], -ip
   14318:	andeq	fp, r1, r8, lsl r3
   1431c:	ldr	r3, [pc, #12]	; 14330 <ftello64@plt+0x2c14>
   14320:	ldr	r3, [r3]
   14324:	clz	r3, r3
   14328:	lsr	r3, r3, #5
   1432c:	b	14220 <ftello64@plt+0x2b04>
   14330:	andeq	pc, r2, r0, lsl #24
   14334:	push	{r4, r5, r6, r7, r8, lr}
   14338:	subs	r6, r1, #0
   1433c:	pople	{r4, r5, r6, r7, r8, pc}
   14340:	mov	r4, r2
   14344:	mov	r5, r0
   14348:	ldr	r7, [pc, #64]	; 14390 <ftello64@plt+0x2c74>
   1434c:	b	14364 <ftello64@plt+0x2c48>
   14350:	ldr	r1, [r4]
   14354:	bl	113c8 <strcmp@plt>
   14358:	cmp	r0, #0
   1435c:	beq	14388 <ftello64@plt+0x2c6c>
   14360:	add	r7, r7, #8
   14364:	ldr	r0, [r7]
   14368:	cmp	r0, #0
   1436c:	bne	14350 <ftello64@plt+0x2c34>
   14370:	mov	r3, #2
   14374:	mov	r2, r4
   14378:	mov	r1, r6
   1437c:	mov	r0, r5
   14380:	pop	{r4, r5, r6, r7, r8, lr}
   14384:	b	14220 <ftello64@plt+0x2b04>
   14388:	mov	r3, #1
   1438c:	b	14374 <ftello64@plt+0x2c58>
   14390:	andeq	pc, r2, r0, lsr #10
   14394:	push	{r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14398:	mov	sl, r2
   1439c:	mov	r9, r0
   143a0:	mov	r6, r1
   143a4:	mov	r5, #0
   143a8:	ldr	r2, [pc, #84]	; 14404 <ftello64@plt+0x2ce8>
   143ac:	ldr	r4, [pc, #84]	; 14408 <ftello64@plt+0x2cec>
   143b0:	ldr	r3, [pc, #84]	; 1440c <ftello64@plt+0x2cf0>
   143b4:	ldr	r2, [r2]
   143b8:	ldr	r8, [r4]
   143bc:	mov	fp, r3
   143c0:	ldr	r7, [r3]
   143c4:	str	r2, [r4]
   143c8:	ldr	r2, [pc, #64]	; 14410 <ftello64@plt+0x2cf4>
   143cc:	str	r2, [r3]
   143d0:	cmp	r5, r6
   143d4:	blt	143e8 <ftello64@plt+0x2ccc>
   143d8:	str	r8, [r4]
   143dc:	str	r7, [fp]
   143e0:	add	sp, sp, #4
   143e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   143e8:	mov	r3, r5
   143ec:	mov	r2, sl
   143f0:	mov	r1, r6
   143f4:	mov	r0, r9
   143f8:	bl	14220 <ftello64@plt+0x2b04>
   143fc:	add	r5, r5, #1
   14400:	b	143d0 <ftello64@plt+0x2cb4>
   14404:	andeq	pc, r2, r8, asr #22
   14408:	andeq	pc, r2, r4, lsl ip	; <UNPREDICTABLE>
   1440c:	andeq	pc, r2, ip, lsl r5	; <UNPREDICTABLE>
   14410:	andeq	pc, r2, ip, lsl #24
   14414:	push	{r4, r5, r6, lr}
   14418:	mov	r4, r0
   1441c:	mov	r5, r1
   14420:	mov	r6, r2
   14424:	ldr	r0, [r0]
   14428:	bl	116c8 <if_nametoindex@plt>
   1442c:	clz	r3, r0
   14430:	mov	r2, r6
   14434:	mov	r1, r5
   14438:	mov	r0, r4
   1443c:	lsr	r3, r3, #5
   14440:	pop	{r4, r5, r6, lr}
   14444:	b	14220 <ftello64@plt+0x2b04>
   14448:	push	{r4, r5, r6, lr}
   1444c:	mov	r4, r0
   14450:	mov	r5, r1
   14454:	mov	r6, r2
   14458:	movw	r1, #35093	; 0x8915
   1445c:	ldr	r2, [r0, #4]
   14460:	ldr	r0, [r0, #8]
   14464:	bl	17120 <argp_usage@@Base+0x260>
   14468:	cmp	r0, #0
   1446c:	mov	r2, r6
   14470:	mov	r1, r5
   14474:	mov	r0, r4
   14478:	pop	{r4, r5, r6, lr}
   1447c:	movge	r3, #0
   14480:	movlt	r3, #1
   14484:	b	14220 <ftello64@plt+0x2b04>
   14488:	push	{r4, r5, r6, lr}
   1448c:	mov	r4, r0
   14490:	mov	r5, r1
   14494:	mov	r6, r2
   14498:	movw	r1, #35099	; 0x891b
   1449c:	ldr	r2, [r0, #4]
   144a0:	ldr	r0, [r0, #8]
   144a4:	bl	17120 <argp_usage@@Base+0x260>
   144a8:	cmp	r0, #0
   144ac:	mov	r2, r6
   144b0:	mov	r1, r5
   144b4:	mov	r0, r4
   144b8:	pop	{r4, r5, r6, lr}
   144bc:	movge	r3, #0
   144c0:	movlt	r3, #1
   144c4:	b	14220 <ftello64@plt+0x2b04>
   144c8:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   144cc:	mov	r4, r0
   144d0:	mov	r5, r1
   144d4:	add	r1, sp, #4
   144d8:	mov	r6, r2
   144dc:	ldr	r0, [pc, #104]	; 1454c <ftello64@plt+0x2e30>
   144e0:	bl	11ca0 <ftello64@plt+0x584>
   144e4:	subs	r7, r0, #0
   144e8:	beq	14504 <ftello64@plt+0x2de8>
   144ec:	movw	r1, #35091	; 0x8913
   144f0:	ldr	r2, [r4, #4]
   144f4:	ldr	r0, [r4, #8]
   144f8:	bl	17120 <argp_usage@@Base+0x260>
   144fc:	cmp	r0, #0
   14500:	bge	14520 <ftello64@plt+0x2e04>
   14504:	mov	r3, #1
   14508:	mov	r2, r6
   1450c:	mov	r1, r5
   14510:	mov	r0, r4
   14514:	bl	14220 <ftello64@plt+0x2b04>
   14518:	add	sp, sp, #12
   1451c:	pop	{r4, r5, r6, r7, pc}
   14520:	ldr	r2, [r4, #4]
   14524:	ldrh	r3, [r2, #16]
   14528:	tst	r3, r7
   1452c:	beq	14504 <ftello64@plt+0x2de8>
   14530:	movw	r1, #35097	; 0x8919
   14534:	ldr	r0, [r4, #8]
   14538:	bl	17120 <argp_usage@@Base+0x260>
   1453c:	cmp	r0, #0
   14540:	blt	14504 <ftello64@plt+0x2de8>
   14544:	mov	r3, #0
   14548:	b	14508 <ftello64@plt+0x2dec>
   1454c:	andeq	fp, r1, fp, lsl r3
   14550:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   14554:	mov	r4, r0
   14558:	mov	r5, r1
   1455c:	add	r1, sp, #4
   14560:	mov	r6, r2
   14564:	ldr	r0, [pc, #104]	; 145d4 <ftello64@plt+0x2eb8>
   14568:	bl	11ca0 <ftello64@plt+0x584>
   1456c:	subs	r7, r0, #0
   14570:	beq	1458c <ftello64@plt+0x2e70>
   14574:	movw	r1, #35091	; 0x8913
   14578:	ldr	r2, [r4, #4]
   1457c:	ldr	r0, [r4, #8]
   14580:	bl	17120 <argp_usage@@Base+0x260>
   14584:	cmp	r0, #0
   14588:	bge	145a8 <ftello64@plt+0x2e8c>
   1458c:	mov	r3, #1
   14590:	mov	r2, r6
   14594:	mov	r1, r5
   14598:	mov	r0, r4
   1459c:	bl	14220 <ftello64@plt+0x2b04>
   145a0:	add	sp, sp, #12
   145a4:	pop	{r4, r5, r6, r7, pc}
   145a8:	ldr	r2, [r4, #4]
   145ac:	ldrh	r3, [r2, #16]
   145b0:	tst	r3, r7
   145b4:	beq	1458c <ftello64@plt+0x2e70>
   145b8:	movw	r1, #35095	; 0x8917
   145bc:	ldr	r0, [r4, #8]
   145c0:	bl	17120 <argp_usage@@Base+0x260>
   145c4:	cmp	r0, #0
   145c8:	blt	1458c <ftello64@plt+0x2e70>
   145cc:	mov	r3, #0
   145d0:	b	14590 <ftello64@plt+0x2e74>
   145d4:	andeq	fp, r1, r4, lsr r3
   145d8:	push	{r4, r5, r6, lr}
   145dc:	mov	r4, r0
   145e0:	mov	r5, r1
   145e4:	mov	r6, r2
   145e8:	movw	r1, #35105	; 0x8921
   145ec:	ldr	r2, [r0, #4]
   145f0:	ldr	r0, [r0, #8]
   145f4:	bl	17120 <argp_usage@@Base+0x260>
   145f8:	cmp	r0, #0
   145fc:	mov	r2, r6
   14600:	mov	r1, r5
   14604:	mov	r0, r4
   14608:	pop	{r4, r5, r6, lr}
   1460c:	movge	r3, #0
   14610:	movlt	r3, #1
   14614:	b	14220 <ftello64@plt+0x2b04>
   14618:	push	{r4, r5, r6, lr}
   1461c:	mov	r4, r0
   14620:	mov	r5, r1
   14624:	mov	r6, r2
   14628:	movw	r1, #35101	; 0x891d
   1462c:	ldr	r2, [r0, #4]
   14630:	ldr	r0, [r0, #8]
   14634:	bl	17120 <argp_usage@@Base+0x260>
   14638:	cmp	r0, #0
   1463c:	blt	14654 <ftello64@plt+0x2f38>
   14640:	ldr	r3, [r4, #4]
   14644:	ldr	r3, [r3, #16]
   14648:	cmp	r3, #0
   1464c:	movgt	r3, #0
   14650:	bgt	14658 <ftello64@plt+0x2f3c>
   14654:	mov	r3, #1
   14658:	mov	r2, r6
   1465c:	mov	r1, r5
   14660:	mov	r0, r4
   14664:	pop	{r4, r5, r6, lr}
   14668:	b	14220 <ftello64@plt+0x2b04>
   1466c:	push	{r4, r5, r6, lr}
   14670:	mov	r4, r0
   14674:	mov	r5, r1
   14678:	mov	r6, r2
   1467c:	movw	r1, #35091	; 0x8913
   14680:	ldr	r2, [r0, #4]
   14684:	ldr	r0, [r0, #8]
   14688:	bl	17120 <argp_usage@@Base+0x260>
   1468c:	cmp	r0, #0
   14690:	mov	r2, r6
   14694:	mov	r1, r5
   14698:	mov	r0, r4
   1469c:	pop	{r4, r5, r6, lr}
   146a0:	movge	r3, #0
   146a4:	movlt	r3, #1
   146a8:	b	14220 <ftello64@plt+0x2b04>
   146ac:	mov	r3, #1
   146b0:	b	14220 <ftello64@plt+0x2b04>
   146b4:	b	146ac <ftello64@plt+0x2f90>
   146b8:	push	{r4, r5, r6, lr}
   146bc:	mov	r4, r0
   146c0:	mov	r5, r1
   146c4:	mov	r6, r2
   146c8:	movw	r1, #35184	; 0x8970
   146cc:	ldr	r2, [r0, #4]
   146d0:	ldr	r0, [r0, #8]
   146d4:	bl	17120 <argp_usage@@Base+0x260>
   146d8:	cmp	r0, #0
   146dc:	mov	r2, r6
   146e0:	mov	r1, r5
   146e4:	mov	r0, r4
   146e8:	pop	{r4, r5, r6, lr}
   146ec:	movge	r3, #0
   146f0:	movlt	r3, #1
   146f4:	b	14220 <ftello64@plt+0x2b04>
   146f8:	ldr	r3, [r0, #4]
   146fc:	ldrb	r3, [r3, #26]
   14700:	cmp	r3, #0
   14704:	movne	r3, #0
   14708:	moveq	r3, #1
   1470c:	b	14220 <ftello64@plt+0x2b04>
   14710:	ldr	r3, [r0, #4]
   14714:	ldrh	r3, [r3, #24]
   14718:	cmp	r3, #255	; 0xff
   1471c:	movhi	r3, #0
   14720:	movls	r3, #1
   14724:	b	14220 <ftello64@plt+0x2b04>
   14728:	ldr	r3, [r0, #4]
   1472c:	ldr	r3, [r3, #16]
   14730:	cmp	r3, #0
   14734:	movne	r3, #0
   14738:	moveq	r3, #1
   1473c:	b	14220 <ftello64@plt+0x2b04>
   14740:	ldr	r3, [r0, #4]
   14744:	ldr	r3, [r3, #20]
   14748:	cmp	r3, #0
   1474c:	movne	r3, #0
   14750:	moveq	r3, #1
   14754:	b	14220 <ftello64@plt+0x2b04>
   14758:	ldr	r3, [r0, #4]
   1475c:	ldrb	r3, [r3, #27]
   14760:	cmp	r3, #0
   14764:	movne	r3, #0
   14768:	moveq	r3, #1
   1476c:	b	14220 <ftello64@plt+0x2b04>
   14770:	cmp	r1, #0
   14774:	bxeq	lr
   14778:	push	{r4, r5, r6, r7, r8, lr}
   1477c:	mov	r6, r2
   14780:	mov	r4, r0
   14784:	ldr	r5, [pc, #52]	; 147c0 <ftello64@plt+0x30a4>
   14788:	ldr	r7, [r0]
   1478c:	ldr	r3, [r5]
   14790:	cmp	r3, #0
   14794:	bne	147a0 <ftello64@plt+0x3084>
   14798:	str	r7, [r4]
   1479c:	pop	{r4, r5, r6, r7, r8, pc}
   147a0:	str	r3, [r4]
   147a4:	mov	r1, #0
   147a8:	mov	r0, r4
   147ac:	ldr	r3, [r6]
   147b0:	add	r5, r5, #12
   147b4:	str	r3, [r4, #16]
   147b8:	bl	13fb4 <ftello64@plt+0x2898>
   147bc:	b	1478c <ftello64@plt+0x3070>
   147c0:			; <UNDEFINED> instruction: 0x0002f2b8
   147c4:	cmp	r1, #1
   147c8:	bxle	lr
   147cc:	push	{r0, r1, r4, r5, r6, lr}
   147d0:	mov	r5, r2
   147d4:	mov	r4, r0
   147d8:	mov	r2, #10
   147dc:	add	r1, sp, #4
   147e0:	ldr	r0, [r5]
   147e4:	bl	11554 <strtoul@plt>
   147e8:	ldr	r3, [sp, #4]
   147ec:	mov	r6, r0
   147f0:	ldrb	r3, [r3]
   147f4:	cmp	r3, #0
   147f8:	beq	1480c <ftello64@plt+0x30f0>
   147fc:	ldr	r2, [pc, #48]	; 14834 <ftello64@plt+0x3118>
   14800:	mov	r1, #0
   14804:	mov	r0, #1
   14808:	bl	114c4 <error@plt>
   1480c:	subs	r6, r6, #1
   14810:	bcs	1481c <ftello64@plt+0x3100>
   14814:	add	sp, sp, #8
   14818:	pop	{r4, r5, r6, pc}
   1481c:	ldr	r3, [r5, #4]
   14820:	mov	r1, #0
   14824:	mov	r0, r4
   14828:	str	r3, [r4, #16]
   1482c:	bl	13fb4 <ftello64@plt+0x2898>
   14830:	b	1480c <ftello64@plt+0x30f0>
   14834:	andeq	ip, r1, r8, ror sp
   14838:	cmp	r1, #1
   1483c:	bxle	lr
   14840:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14844:	mov	r3, #0
   14848:	add	r6, r2, r1, lsl #2
   1484c:	mov	r7, r2
   14850:	mov	r5, r0
   14854:	add	r9, r2, #4
   14858:	mov	r8, r3
   1485c:	ldr	r4, [pc, #76]	; 148b0 <ftello64@plt+0x3194>
   14860:	ldr	sl, [r4]
   14864:	str	r3, [r4]
   14868:	cmp	r9, r6
   1486c:	bne	14878 <ftello64@plt+0x315c>
   14870:	str	sl, [r4]
   14874:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14878:	ldr	r3, [r4]
   1487c:	cmp	r3, #0
   14880:	beq	14898 <ftello64@plt+0x317c>
   14884:	mov	sl, #1
   14888:	mov	r0, r5
   1488c:	ldr	r1, [r7]
   14890:	bl	135ec <ftello64@plt+0x1ed0>
   14894:	str	r8, [r4]
   14898:	ldr	r3, [r9], #4
   1489c:	mov	r1, #0
   148a0:	mov	r0, r5
   148a4:	str	r3, [r5, #16]
   148a8:	bl	13fb4 <ftello64@plt+0x2898>
   148ac:	b	14868 <ftello64@plt+0x314c>
   148b0:	andeq	pc, r2, r8, lsl #24
   148b4:	push	{r4, r5, r6, r7, r8, lr}
   148b8:	mov	r5, r0
   148bc:	mov	r6, r1
   148c0:	mov	r7, r2
   148c4:	mov	r4, #0
   148c8:	cmp	r4, r6
   148cc:	popge	{r4, r5, r6, r7, r8, pc}
   148d0:	ldr	r0, [r7, r4, lsl #2]
   148d4:	bl	12738 <ftello64@plt+0x101c>
   148d8:	cmp	r0, #0
   148dc:	beq	148f8 <ftello64@plt+0x31dc>
   148e0:	ldr	r3, [r0, #8]
   148e4:	mov	r1, #0
   148e8:	mov	r0, r5
   148ec:	str	r3, [r5, #16]
   148f0:	pop	{r4, r5, r6, r7, r8, lr}
   148f4:	b	13fb4 <ftello64@plt+0x2898>
   148f8:	add	r4, r4, #1
   148fc:	b	148c8 <ftello64@plt+0x31ac>
   14900:	ldr	ip, [pc, #88]	; 14960 <ftello64@plt+0x3244>
   14904:	push	{r0, r1, r2, r3, r4, r5, r6, lr}
   14908:	stm	sp, {r1, r2}
   1490c:	mov	r1, #0
   14910:	ldr	lr, [ip]
   14914:	str	r0, [sp, #8]
   14918:	mov	r0, sp
   1491c:	str	r3, [sp, #16]
   14920:	str	r1, [sp, #20]
   14924:	cmp	lr, #0
   14928:	ldreq	lr, [pc, #52]	; 14964 <ftello64@plt+0x3248>
   1492c:	ldreq	lr, [lr]
   14930:	streq	lr, [ip]
   14934:	ldr	ip, [pc, #44]	; 14968 <ftello64@plt+0x324c>
   14938:	ldr	lr, [ip]
   1493c:	cmp	lr, #0
   14940:	moveq	lr, #1
   14944:	movne	ip, #0
   14948:	streq	lr, [ip]
   1494c:	streq	lr, [sp, #12]
   14950:	strne	ip, [sp, #12]
   14954:	bl	13fb4 <ftello64@plt+0x2898>
   14958:	add	sp, sp, #28
   1495c:	pop	{pc}		; (ldr pc, [sp], #4)
   14960:	andeq	pc, r2, r4, lsl ip	; <UNPREDICTABLE>
   14964:	andeq	pc, r2, ip, asr #22
   14968:	andeq	pc, r2, ip, lsr #23
   1496c:	push	{r0, r1, r2, lr}
   14970:	ldrb	r3, [r1]
   14974:	ldr	r0, [pc, #56]	; 149b4 <ftello64@plt+0x3298>
   14978:	str	r3, [sp]
   1497c:	ldrb	r3, [r1, #1]
   14980:	ldrb	r2, [r1, #2]
   14984:	ldrb	r1, [r1, #3]
   14988:	bl	113e0 <printf@plt>
   1498c:	ldr	r3, [pc, #36]	; 149b8 <ftello64@plt+0x329c>
   14990:	ldr	r2, [r3]
   14994:	ldr	r3, [r2]
   14998:	add	r0, r3, r0
   1499c:	ldr	r3, [pc, #24]	; 149bc <ftello64@plt+0x32a0>
   149a0:	str	r0, [r2]
   149a4:	mov	r2, #1
   149a8:	str	r2, [r3]
   149ac:	add	sp, sp, #12
   149b0:	pop	{pc}		; (ldr pc, [sp], #4)
   149b4:	andeq	ip, r1, fp, ror #31
   149b8:	andeq	pc, r2, ip, lsl r5	; <UNPREDICTABLE>
   149bc:	andeq	pc, r2, r8, lsl #24
   149c0:	push	{r0, r1, r2, lr}
   149c4:	ldrb	r3, [r1, #4]
   149c8:	ldr	r0, [pc, #64]	; 14a10 <ftello64@plt+0x32f4>
   149cc:	str	r3, [sp, #4]
   149d0:	ldrb	r3, [r1, #3]
   149d4:	str	r3, [sp]
   149d8:	ldrb	r3, [r1, #2]
   149dc:	ldrb	r2, [r1, #1]
   149e0:	ldrb	r1, [r1]
   149e4:	bl	113e0 <printf@plt>
   149e8:	ldr	r3, [pc, #36]	; 14a14 <ftello64@plt+0x32f8>
   149ec:	ldr	r2, [r3]
   149f0:	ldr	r3, [r2]
   149f4:	add	r0, r3, r0
   149f8:	ldr	r3, [pc, #24]	; 14a18 <ftello64@plt+0x32fc>
   149fc:	str	r0, [r2]
   14a00:	mov	r2, #1
   14a04:	str	r2, [r3]
   14a08:	add	sp, sp, #12
   14a0c:	pop	{pc}		; (ldr pc, [sp], #4)
   14a10:	andeq	ip, r1, ip, asr #31
   14a14:	andeq	pc, r2, ip, lsl r5	; <UNPREDICTABLE>
   14a18:	andeq	pc, r2, r8, lsl #24
   14a1c:	push	{r4, lr}
   14a20:	ldrsh	r1, [r1]
   14a24:	ldr	r0, [pc, #36]	; 14a50 <ftello64@plt+0x3334>
   14a28:	bl	113e0 <printf@plt>
   14a2c:	ldr	r3, [pc, #32]	; 14a54 <ftello64@plt+0x3338>
   14a30:	ldr	r2, [r3]
   14a34:	ldr	r3, [r2]
   14a38:	add	r0, r3, r0
   14a3c:	ldr	r3, [pc, #20]	; 14a58 <ftello64@plt+0x333c>
   14a40:	str	r0, [r2]
   14a44:	mov	r2, #1
   14a48:	str	r2, [r3]
   14a4c:	pop	{r4, pc}
   14a50:	andeq	sp, r1, r0
   14a54:	andeq	pc, r2, ip, lsl r5	; <UNPREDICTABLE>
   14a58:	andeq	pc, r2, r8, lsl #24
   14a5c:	push	{r4, lr}
   14a60:	ldr	r0, [pc, #40]	; 14a90 <ftello64@plt+0x3374>
   14a64:	ldrb	r1, [r1]
   14a68:	bl	113e0 <printf@plt>
   14a6c:	ldr	r3, [pc, #32]	; 14a94 <ftello64@plt+0x3378>
   14a70:	ldr	r2, [r3]
   14a74:	ldr	r3, [r2]
   14a78:	add	r0, r3, r0
   14a7c:	ldr	r3, [pc, #20]	; 14a98 <ftello64@plt+0x337c>
   14a80:	str	r0, [r2]
   14a84:	mov	r2, #1
   14a88:	str	r2, [r3]
   14a8c:	pop	{r4, pc}
   14a90:	strdeq	ip, [r1], -sl
   14a94:	andeq	pc, r2, ip, lsl r5	; <UNPREDICTABLE>
   14a98:	andeq	pc, r2, r8, lsl #24
   14a9c:	push	{r0, r1, r2, r3, r4, lr}
   14aa0:	ldrb	r3, [r1, #5]
   14aa4:	ldr	r0, [pc, #72]	; 14af4 <ftello64@plt+0x33d8>
   14aa8:	str	r3, [sp, #8]
   14aac:	ldrb	r3, [r1, #4]
   14ab0:	str	r3, [sp, #4]
   14ab4:	ldrb	r3, [r1, #3]
   14ab8:	str	r3, [sp]
   14abc:	ldrb	r3, [r1, #2]
   14ac0:	ldrb	r2, [r1, #1]
   14ac4:	ldrb	r1, [r1]
   14ac8:	bl	113e0 <printf@plt>
   14acc:	ldr	r3, [pc, #36]	; 14af8 <ftello64@plt+0x33dc>
   14ad0:	ldr	r2, [r3]
   14ad4:	ldr	r3, [r2]
   14ad8:	add	r0, r3, r0
   14adc:	ldr	r3, [pc, #24]	; 14afc <ftello64@plt+0x33e0>
   14ae0:	str	r0, [r2]
   14ae4:	mov	r2, #1
   14ae8:	str	r2, [r3]
   14aec:	add	sp, sp, #20
   14af0:	pop	{pc}		; (ldr pc, [sp], #4)
   14af4:	andeq	ip, r1, r1, ror #31
   14af8:	andeq	pc, r2, ip, lsl r5	; <UNPREDICTABLE>
   14afc:	andeq	pc, r2, r8, lsl #24
   14b00:	push	{r4, r5, r6, r7, r8, lr}
   14b04:	mov	r7, r0
   14b08:	mov	r4, r1
   14b0c:	sub	r5, r1, #1
   14b10:	add	r6, r1, #5
   14b14:	ldrb	r1, [r5, #1]!
   14b18:	lsr	r1, r1, #1
   14b1c:	cmp	r1, #32
   14b20:	beq	14b34 <ftello64@plt+0x3418>
   14b24:	mov	r0, r7
   14b28:	bl	134ec <ftello64@plt+0x1dd0>
   14b2c:	cmp	r6, r5
   14b30:	bne	14b14 <ftello64@plt+0x33f8>
   14b34:	ldrb	r1, [r4, #6]
   14b38:	ubfx	r1, r1, #1, #4
   14b3c:	cmp	r1, #0
   14b40:	popeq	{r4, r5, r6, r7, r8, pc}
   14b44:	ldr	r0, [pc, #36]	; 14b70 <ftello64@plt+0x3454>
   14b48:	bl	113e0 <printf@plt>
   14b4c:	ldr	r3, [pc, #32]	; 14b74 <ftello64@plt+0x3458>
   14b50:	ldr	r2, [r3]
   14b54:	ldr	r3, [r2]
   14b58:	add	r0, r3, r0
   14b5c:	ldr	r3, [pc, #20]	; 14b78 <ftello64@plt+0x345c>
   14b60:	str	r0, [r2]
   14b64:	mov	r2, #1
   14b68:	str	r2, [r3]
   14b6c:	pop	{r4, r5, r6, r7, r8, pc}
   14b70:	strdeq	ip, [r1], -pc	; <UNPREDICTABLE>
   14b74:	andeq	pc, r2, ip, lsl r5	; <UNPREDICTABLE>
   14b78:	andeq	pc, r2, r8, lsl #24
   14b7c:	add	r3, r1, #64	; 0x40
   14b80:	push	{lr}		; (str lr, [sp, #-4]!)
   14b84:	sub	sp, sp, #60	; 0x3c
   14b88:	add	r2, r1, #24
   14b8c:	str	r3, [sp, #52]	; 0x34
   14b90:	add	r3, r1, #100	; 0x64
   14b94:	str	r3, [sp, #48]	; 0x30
   14b98:	add	r3, r1, #68	; 0x44
   14b9c:	str	r3, [sp, #44]	; 0x2c
   14ba0:	add	r3, r1, #104	; 0x68
   14ba4:	str	r3, [sp, #40]	; 0x28
   14ba8:	add	r3, r1, #52	; 0x34
   14bac:	str	r3, [sp, #36]	; 0x24
   14bb0:	add	r3, r1, #44	; 0x2c
   14bb4:	str	r3, [sp, #32]
   14bb8:	add	r3, r1, #16
   14bbc:	str	r3, [sp, #28]
   14bc0:	add	r3, r1, #32
   14bc4:	str	r3, [sp, #24]
   14bc8:	add	r3, r1, #56	; 0x38
   14bcc:	str	r3, [sp, #20]
   14bd0:	add	r3, r1, #60	; 0x3c
   14bd4:	str	r3, [sp, #16]
   14bd8:	add	r3, r1, #84	; 0x54
   14bdc:	str	r3, [sp, #12]
   14be0:	add	r3, r1, #88	; 0x58
   14be4:	str	r3, [sp, #8]
   14be8:	add	r3, r1, #48	; 0x30
   14bec:	str	r3, [sp, #4]
   14bf0:	add	r3, r1, #40	; 0x28
   14bf4:	str	r3, [sp]
   14bf8:	add	r3, r1, #8
   14bfc:	ldr	r1, [pc, #20]	; 14c18 <ftello64@plt+0x34fc>
   14c00:	bl	11638 <sscanf@plt>
   14c04:	sub	r0, r0, #16
   14c08:	clz	r0, r0
   14c0c:	lsr	r0, r0, #5
   14c10:	add	sp, sp, #60	; 0x3c
   14c14:	pop	{pc}		; (ldr pc, [sp], #4)
   14c18:	andeq	sp, r1, r3
   14c1c:	push	{r4, lr}
   14c20:	add	r3, r1, #100	; 0x64
   14c24:	sub	sp, sp, #48	; 0x30
   14c28:	mov	r4, r1
   14c2c:	add	r2, r1, #24
   14c30:	str	r3, [sp, #40]	; 0x28
   14c34:	add	r3, r4, #68	; 0x44
   14c38:	ldr	r1, [pc, #108]	; 14cac <ftello64@plt+0x3590>
   14c3c:	str	r3, [sp, #36]	; 0x24
   14c40:	add	r3, r4, #104	; 0x68
   14c44:	str	r3, [sp, #32]
   14c48:	add	r3, r4, #52	; 0x34
   14c4c:	str	r3, [sp, #28]
   14c50:	add	r3, r4, #44	; 0x2c
   14c54:	str	r3, [sp, #24]
   14c58:	add	r3, r4, #16
   14c5c:	str	r3, [sp, #20]
   14c60:	add	r3, r4, #32
   14c64:	str	r3, [sp, #16]
   14c68:	add	r3, r4, #84	; 0x54
   14c6c:	str	r3, [sp, #12]
   14c70:	add	r3, r4, #88	; 0x58
   14c74:	str	r3, [sp, #8]
   14c78:	add	r3, r4, #48	; 0x30
   14c7c:	str	r3, [sp, #4]
   14c80:	add	r3, r4, #40	; 0x28
   14c84:	str	r3, [sp]
   14c88:	add	r3, r4, #8
   14c8c:	bl	11638 <sscanf@plt>
   14c90:	sub	r0, r0, #13
   14c94:	mov	r3, #0
   14c98:	clz	r0, r0
   14c9c:	lsr	r0, r0, #5
   14ca0:	str	r3, [r4, #56]	; 0x38
   14ca4:	add	sp, sp, #48	; 0x30
   14ca8:	pop	{r4, pc}
   14cac:	andeq	sp, r1, r7, asr #32
   14cb0:	push	{r4, lr}
   14cb4:	add	r3, r1, #100	; 0x64
   14cb8:	sub	sp, sp, #40	; 0x28
   14cbc:	mov	r4, r1
   14cc0:	add	r2, r1, #8
   14cc4:	str	r3, [sp, #32]
   14cc8:	add	r3, r4, #68	; 0x44
   14ccc:	ldr	r1, [pc, #108]	; 14d40 <ftello64@plt+0x3624>
   14cd0:	str	r3, [sp, #28]
   14cd4:	add	r3, r4, #104	; 0x68
   14cd8:	str	r3, [sp, #24]
   14cdc:	add	r3, r4, #52	; 0x34
   14ce0:	str	r3, [sp, #20]
   14ce4:	add	r3, r4, #44	; 0x2c
   14ce8:	str	r3, [sp, #16]
   14cec:	add	r3, r4, #16
   14cf0:	str	r3, [sp, #12]
   14cf4:	add	r3, r4, #84	; 0x54
   14cf8:	str	r3, [sp, #8]
   14cfc:	add	r3, r4, #88	; 0x58
   14d00:	str	r3, [sp, #4]
   14d04:	add	r3, r4, #48	; 0x30
   14d08:	str	r3, [sp]
   14d0c:	add	r3, r4, #40	; 0x28
   14d10:	bl	11638 <sscanf@plt>
   14d14:	sub	r0, r0, #11
   14d18:	mov	r2, #0
   14d1c:	mov	r3, #0
   14d20:	clz	r0, r0
   14d24:	lsr	r0, r0, #5
   14d28:	strd	r2, [r4, #24]
   14d2c:	strd	r2, [r4, #32]
   14d30:	mov	r3, #0
   14d34:	str	r3, [r4, #56]	; 0x38
   14d38:	add	sp, sp, #40	; 0x28
   14d3c:	pop	{r4, pc}
   14d40:	andeq	sp, r1, pc, ror r0
   14d44:	mov	r1, #2
   14d48:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14d4c:	mov	r2, #0
   14d50:	sub	sp, sp, #52	; 0x34
   14d54:	mov	r0, r1
   14d58:	bl	116b0 <socket@plt>
   14d5c:	subs	r9, r0, #0
   14d60:	bge	14d74 <ftello64@plt+0x3658>
   14d64:	mov	r7, #0
   14d68:	mov	r0, r7
   14d6c:	add	sp, sp, #52	; 0x34
   14d70:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14d74:	add	r2, sp, #12
   14d78:	mov	r1, #0
   14d7c:	ldr	r0, [pc, #348]	; 14ee0 <ftello64@plt+0x37c4>
   14d80:	bl	17734 <_obstack_memory_used@@Base+0x300>
   14d84:	subs	r5, r0, #0
   14d88:	beq	14d64 <ftello64@plt+0x3648>
   14d8c:	ldr	r7, [sp, #12]
   14d90:	mov	r4, r5
   14d94:	mov	r6, #0
   14d98:	sub	r2, r4, r5
   14d9c:	add	r0, r4, #1
   14da0:	sub	r2, r7, r2
   14da4:	mov	r1, #58	; 0x3a
   14da8:	bl	115e4 <memchr@plt>
   14dac:	subs	r4, r0, #0
   14db0:	add	r6, r6, #1
   14db4:	bne	14d98 <ftello64@plt+0x367c>
   14db8:	lsl	r0, r6, #3
   14dbc:	bl	17eec <_obstack_memory_used@@Base+0xab8>
   14dc0:	subs	r7, r0, #0
   14dc4:	bne	14dec <ftello64@plt+0x36d0>
   14dc8:	bl	11584 <__errno_location@plt>
   14dcc:	mov	r4, r0
   14dd0:	mov	r0, r9
   14dd4:	ldr	r6, [r4]
   14dd8:	bl	116f8 <close@plt>
   14ddc:	mov	r0, r5
   14de0:	bl	17030 <argp_usage@@Base+0x170>
   14de4:	str	r6, [r4]
   14de8:	b	14d68 <ftello64@plt+0x364c>
   14dec:	mov	r1, #58	; 0x3a
   14df0:	mov	r0, r5
   14df4:	ldr	r2, [sp, #12]
   14df8:	bl	115e4 <memchr@plt>
   14dfc:	mov	r8, r7
   14e00:	mov	sl, r4
   14e04:	mvn	fp, #0
   14e08:	mov	r6, r0
   14e0c:	cmp	r6, #0
   14e10:	bne	14e2c <ftello64@plt+0x3710>
   14e14:	add	r3, r7, r4, lsl #3
   14e18:	mov	r0, r5
   14e1c:	str	r6, [r7, r4, lsl #3]
   14e20:	str	r6, [r3, #4]
   14e24:	bl	17030 <argp_usage@@Base+0x170>
   14e28:	b	14d68 <ftello64@plt+0x364c>
   14e2c:	mov	r3, r6
   14e30:	strb	sl, [r3], #-1
   14e34:	mov	r0, r3
   14e38:	ldrb	r2, [r3], #-1
   14e3c:	cmp	r2, #32
   14e40:	cmpne	r2, #10
   14e44:	bne	14e34 <ftello64@plt+0x3718>
   14e48:	add	r0, r0, #1
   14e4c:	add	r4, r4, #1
   14e50:	bl	11464 <strdup@plt>
   14e54:	mov	r1, r0
   14e58:	add	r0, sp, #16
   14e5c:	str	r4, [r8]
   14e60:	add	r8, r8, #8
   14e64:	str	r1, [r8, #-4]
   14e68:	bl	114ac <strcpy@plt>
   14e6c:	add	r2, sp, #16
   14e70:	movw	r1, #35123	; 0x8933
   14e74:	str	fp, [sp, #32]
   14e78:	mov	r0, r9
   14e7c:	bl	17120 <argp_usage@@Base+0x260>
   14e80:	cmp	r0, #0
   14e84:	ldrge	r3, [sp, #32]
   14e88:	strge	r3, [r8, #-8]
   14e8c:	ldr	r3, [r8, #-4]
   14e90:	cmp	r3, #0
   14e94:	bne	14ec0 <ftello64@plt+0x37a4>
   14e98:	str	r3, [sp, #4]
   14e9c:	bl	11584 <__errno_location@plt>
   14ea0:	mov	r4, r0
   14ea4:	mov	r0, r9
   14ea8:	ldr	r6, [r4]
   14eac:	bl	116f8 <close@plt>
   14eb0:	mov	r0, r5
   14eb4:	bl	17030 <argp_usage@@Base+0x170>
   14eb8:	str	r6, [r4]
   14ebc:	b	14d64 <ftello64@plt+0x3648>
   14ec0:	ldr	r2, [sp, #12]
   14ec4:	sub	r3, r6, r5
   14ec8:	mov	r0, r6
   14ecc:	mov	r1, #58	; 0x3a
   14ed0:	sub	r2, r2, r3
   14ed4:	bl	115e4 <memchr@plt>
   14ed8:	mov	r6, r0
   14edc:	b	14e0c <ftello64@plt+0x36f0>
   14ee0:	andeq	sp, r1, sp, lsr #1
   14ee4:	ldr	r3, [pc, #40]	; 14f14 <ftello64@plt+0x37f8>
   14ee8:	ldr	r2, [r3]
   14eec:	cmp	r2, #0
   14ef0:	bne	14f00 <ftello64@plt+0x37e4>
   14ef4:	mov	r3, r2
   14ef8:	mov	r0, r3
   14efc:	bx	lr
   14f00:	ldr	r2, [r3, #8]
   14f04:	cmp	r2, r0
   14f08:	beq	14ef8 <ftello64@plt+0x37dc>
   14f0c:	add	r3, r3, #16
   14f10:	b	14ee8 <ftello64@plt+0x37cc>
   14f14:	andeq	pc, r2, r8, asr #15
   14f18:	ldr	r2, [pc, #520]	; 15128 <ftello64@plt+0x3a0c>
   14f1c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14f20:	sub	sp, sp, #20
   14f24:	ldr	r3, [r2]
   14f28:	stm	sp, {r0, r2}
   14f2c:	cmp	r3, #0
   14f30:	bne	14f74 <ftello64@plt+0x3858>
   14f34:	ldr	r1, [pc, #496]	; 1512c <ftello64@plt+0x3a10>
   14f38:	str	r3, [sp, #8]
   14f3c:	ldr	r0, [pc, #492]	; 15130 <ftello64@plt+0x3a14>
   14f40:	str	r3, [sp, #12]
   14f44:	bl	11674 <fopen64@plt>
   14f48:	subs	r5, r0, #0
   14f4c:	bne	14f90 <ftello64@plt+0x3874>
   14f50:	bl	11584 <__errno_location@plt>
   14f54:	ldr	r3, [pc, #468]	; 15130 <ftello64@plt+0x3a14>
   14f58:	ldr	r2, [pc, #468]	; 15134 <ftello64@plt+0x3a18>
   14f5c:	ldr	r1, [r0]
   14f60:	mov	r0, r5
   14f64:	bl	114c4 <error@plt>
   14f68:	ldr	r2, [sp, #4]
   14f6c:	mov	r3, #1
   14f70:	str	r3, [r2]
   14f74:	ldr	r3, [pc, #444]	; 15138 <ftello64@plt+0x3a1c>
   14f78:	ldr	r4, [r3]
   14f7c:	cmp	r4, #0
   14f80:	bne	1510c <ftello64@plt+0x39f0>
   14f84:	mov	r0, r4
   14f88:	add	sp, sp, #20
   14f8c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14f90:	mov	r2, r5
   14f94:	add	r1, sp, #12
   14f98:	add	r0, sp, #8
   14f9c:	bl	116bc <getline@plt>
   14fa0:	cmp	r0, #0
   14fa4:	bge	14fd4 <ftello64@plt+0x38b8>
   14fa8:	bl	11584 <__errno_location@plt>
   14fac:	ldr	r3, [pc, #380]	; 15130 <ftello64@plt+0x3a14>
   14fb0:	ldr	r2, [pc, #388]	; 1513c <ftello64@plt+0x3a20>
   14fb4:	ldr	r1, [r0]
   14fb8:	mov	r0, #0
   14fbc:	bl	114c4 <error@plt>
   14fc0:	mov	r0, r5
   14fc4:	bl	115f0 <fclose@plt>
   14fc8:	ldr	r0, [sp, #8]
   14fcc:	bl	17030 <argp_usage@@Base+0x170>
   14fd0:	b	14f68 <ftello64@plt+0x384c>
   14fd4:	mov	r2, r5
   14fd8:	add	r1, sp, #12
   14fdc:	add	r0, sp, #8
   14fe0:	bl	116bc <getline@plt>
   14fe4:	cmp	r0, #0
   14fe8:	blt	14fa8 <ftello64@plt+0x388c>
   14fec:	ldr	r4, [sp, #8]
   14ff0:	ldr	r1, [pc, #328]	; 15140 <ftello64@plt+0x3a24>
   14ff4:	mov	r0, r4
   14ff8:	bl	113a4 <strstr@plt>
   14ffc:	cmp	r0, #0
   15000:	movne	r9, #2
   15004:	bne	1501c <ftello64@plt+0x3900>
   15008:	ldr	r1, [pc, #308]	; 15144 <ftello64@plt+0x3a28>
   1500c:	mov	r0, r4
   15010:	bl	113a4 <strstr@plt>
   15014:	adds	r9, r0, #0
   15018:	movne	r9, #1
   1501c:	ldr	fp, [pc, #292]	; 15148 <ftello64@plt+0x3a2c>
   15020:	ldr	sl, [pc, #292]	; 1514c <ftello64@plt+0x3a30>
   15024:	mov	r2, r5
   15028:	add	r1, sp, #12
   1502c:	add	r0, sp, #8
   15030:	bl	116bc <getline@plt>
   15034:	cmp	r0, #0
   15038:	ble	14fc0 <ftello64@plt+0x38a4>
   1503c:	mov	r0, #120	; 0x78
   15040:	bl	17db8 <_obstack_memory_used@@Base+0x984>
   15044:	ldr	r7, [sp, #8]
   15048:	mov	r4, r0
   1504c:	mov	r8, r7
   15050:	ldrb	r6, [r7], #1
   15054:	cmp	r6, #0
   15058:	beq	1507c <ftello64@plt+0x3960>
   1505c:	tst	r6, #128	; 0x80
   15060:	bne	1507c <ftello64@plt+0x3960>
   15064:	bl	1153c <__ctype_b_loc@plt>
   15068:	ldr	r3, [r0]
   1506c:	lsl	r6, r6, #1
   15070:	ldrh	r3, [r3, r6]
   15074:	tst	r3, #8192	; 0x2000
   15078:	bne	1504c <ftello64@plt+0x3930>
   1507c:	mov	r1, #58	; 0x3a
   15080:	mov	r0, r8
   15084:	bl	1156c <strchr@plt>
   15088:	subs	r6, r0, #0
   1508c:	bne	150b4 <ftello64@plt+0x3998>
   15090:	bl	11584 <__errno_location@plt>
   15094:	ldr	r3, [pc, #148]	; 15130 <ftello64@plt+0x3a14>
   15098:	ldr	r2, [pc, #156]	; 1513c <ftello64@plt+0x3a20>
   1509c:	ldr	r1, [r0]
   150a0:	mov	r0, r6
   150a4:	bl	114c4 <error@plt>
   150a8:	mov	r0, r4
   150ac:	bl	17030 <argp_usage@@Base+0x170>
   150b0:	b	14fc0 <ftello64@plt+0x38a4>
   150b4:	sub	r7, r6, r8
   150b8:	add	r0, r7, #1
   150bc:	bl	17bb4 <_obstack_memory_used@@Base+0x780>
   150c0:	mov	r1, r8
   150c4:	mov	r2, r7
   150c8:	str	r0, [r4, #4]
   150cc:	mov	r8, #0
   150d0:	bl	11434 <memcpy@plt>
   150d4:	mov	r1, r4
   150d8:	strb	r8, [r0, r7]
   150dc:	add	r0, r6, #1
   150e0:	ldr	r3, [fp, r9, lsl #2]
   150e4:	blx	r3
   150e8:	subs	r6, r0, #0
   150ec:	beq	15090 <ftello64@plt+0x3974>
   150f0:	ldr	r3, [sl]
   150f4:	str	r8, [r4]
   150f8:	cmp	r3, #0
   150fc:	ldreq	r3, [pc, #52]	; 15138 <ftello64@plt+0x3a1c>
   15100:	str	r4, [r3]
   15104:	str	r4, [sl]
   15108:	b	15024 <ftello64@plt+0x3908>
   1510c:	ldr	r1, [sp]
   15110:	ldr	r0, [r4, #4]
   15114:	bl	113c8 <strcmp@plt>
   15118:	cmp	r0, #0
   1511c:	beq	14f84 <ftello64@plt+0x3868>
   15120:	ldr	r4, [r4]
   15124:	b	14f7c <ftello64@plt+0x3860>
   15128:			; <UNDEFINED> instruction: 0x0002fbb0
   1512c:	andeq	fp, r1, r4, asr #19
   15130:	andeq	sp, r1, sp, lsr #1
   15134:	strheq	sp, [r1], -fp
   15138:	andeq	pc, r2, ip, lsl ip	; <UNPREDICTABLE>
   1513c:	andeq	sp, r1, sl, asr #1
   15140:	andeq	ip, r1, r8, lsr #28
   15144:	andeq	ip, r1, r6, ror #27
   15148:	andeq	ip, r1, r0, asr #31
   1514c:	andeq	pc, r2, r8, lsl ip	; <UNPREDICTABLE>
   15150:	push	{r4, r5, r6, lr}
   15154:	mov	r4, r0
   15158:	mov	r5, r1
   1515c:	mov	r6, r2
   15160:	ldr	r0, [r0, #4]
   15164:	bl	14f18 <ftello64@plt+0x37fc>
   15168:	clz	r3, r0
   1516c:	mov	r2, r6
   15170:	mov	r1, r5
   15174:	mov	r0, r4
   15178:	lsr	r3, r3, #5
   1517c:	pop	{r4, r5, r6, lr}
   15180:	b	14220 <ftello64@plt+0x2b04>
   15184:	push	{r4, r5, r6, lr}
   15188:	mov	r4, r0
   1518c:	mov	r5, r1
   15190:	mov	r6, r2
   15194:	ldr	r0, [r0, #4]
   15198:	bl	14f18 <ftello64@plt+0x37fc>
   1519c:	cmp	r0, #0
   151a0:	bne	151b4 <ftello64@plt+0x3a98>
   151a4:	mov	r0, r4
   151a8:	ldr	r1, [pc, #28]	; 151cc <ftello64@plt+0x3ab0>
   151ac:	pop	{r4, r5, r6, lr}
   151b0:	b	135ec <ftello64@plt+0x1ed0>
   151b4:	mov	r2, r6
   151b8:	mov	r1, r5
   151bc:	ldr	r3, [r0, #8]
   151c0:	mov	r0, r4
   151c4:	pop	{r4, r5, r6, lr}
   151c8:	b	1390c <ftello64@plt+0x21f0>
   151cc:	ldrdeq	sp, [r1], -r7
   151d0:	push	{r4, r5, r6, lr}
   151d4:	mov	r4, r0
   151d8:	mov	r5, r1
   151dc:	mov	r6, r2
   151e0:	ldr	r0, [r0, #4]
   151e4:	bl	14f18 <ftello64@plt+0x37fc>
   151e8:	cmp	r0, #0
   151ec:	bne	15200 <ftello64@plt+0x3ae4>
   151f0:	mov	r0, r4
   151f4:	ldr	r1, [pc, #28]	; 15218 <ftello64@plt+0x3afc>
   151f8:	pop	{r4, r5, r6, lr}
   151fc:	b	135ec <ftello64@plt+0x1ed0>
   15200:	mov	r2, r6
   15204:	mov	r1, r5
   15208:	ldr	r3, [r0, #16]
   1520c:	mov	r0, r4
   15210:	pop	{r4, r5, r6, lr}
   15214:	b	1390c <ftello64@plt+0x21f0>
   15218:	andeq	sp, r1, ip, ror #1
   1521c:	push	{r4, r5, r6, lr}
   15220:	mov	r4, r0
   15224:	mov	r5, r1
   15228:	mov	r6, r2
   1522c:	ldr	r0, [r0, #4]
   15230:	bl	14f18 <ftello64@plt+0x37fc>
   15234:	cmp	r0, #0
   15238:	bne	1524c <ftello64@plt+0x3b30>
   1523c:	mov	r0, r4
   15240:	ldr	r1, [pc, #28]	; 15264 <ftello64@plt+0x3b48>
   15244:	pop	{r4, r5, r6, lr}
   15248:	b	135ec <ftello64@plt+0x1ed0>
   1524c:	mov	r2, r6
   15250:	mov	r1, r5
   15254:	ldr	r3, [r0, #24]
   15258:	mov	r0, r4
   1525c:	pop	{r4, r5, r6, lr}
   15260:	b	1390c <ftello64@plt+0x21f0>
   15264:	andeq	sp, r1, r1, lsl #2
   15268:	push	{r4, r5, r6, lr}
   1526c:	mov	r4, r0
   15270:	mov	r5, r1
   15274:	mov	r6, r2
   15278:	ldr	r0, [r0, #4]
   1527c:	bl	14f18 <ftello64@plt+0x37fc>
   15280:	cmp	r0, #0
   15284:	bne	15298 <ftello64@plt+0x3b7c>
   15288:	mov	r0, r4
   1528c:	ldr	r1, [pc, #28]	; 152b0 <ftello64@plt+0x3b94>
   15290:	pop	{r4, r5, r6, lr}
   15294:	b	135ec <ftello64@plt+0x1ed0>
   15298:	mov	r2, r6
   1529c:	mov	r1, r5
   152a0:	ldr	r3, [r0, #32]
   152a4:	mov	r0, r4
   152a8:	pop	{r4, r5, r6, lr}
   152ac:	b	1390c <ftello64@plt+0x21f0>
   152b0:	andeq	sp, r1, r4, lsl r1
   152b4:	push	{r4, r5, r6, lr}
   152b8:	mov	r4, r0
   152bc:	mov	r5, r1
   152c0:	mov	r6, r2
   152c4:	ldr	r0, [r0, #4]
   152c8:	bl	14f18 <ftello64@plt+0x37fc>
   152cc:	cmp	r0, #0
   152d0:	bne	152e4 <ftello64@plt+0x3bc8>
   152d4:	mov	r0, r4
   152d8:	ldr	r1, [pc, #28]	; 152fc <ftello64@plt+0x3be0>
   152dc:	pop	{r4, r5, r6, lr}
   152e0:	b	135ec <ftello64@plt+0x1ed0>
   152e4:	mov	r2, r6
   152e8:	mov	r1, r5
   152ec:	ldr	r3, [r0, #40]	; 0x28
   152f0:	mov	r0, r4
   152f4:	pop	{r4, r5, r6, lr}
   152f8:	b	1390c <ftello64@plt+0x21f0>
   152fc:	andeq	sp, r1, r7, lsr #2
   15300:	push	{r4, r5, r6, lr}
   15304:	mov	r4, r0
   15308:	mov	r5, r1
   1530c:	mov	r6, r2
   15310:	ldr	r0, [r0, #4]
   15314:	bl	14f18 <ftello64@plt+0x37fc>
   15318:	cmp	r0, #0
   1531c:	bne	15330 <ftello64@plt+0x3c14>
   15320:	mov	r0, r4
   15324:	ldr	r1, [pc, #28]	; 15348 <ftello64@plt+0x3c2c>
   15328:	pop	{r4, r5, r6, lr}
   1532c:	b	135ec <ftello64@plt+0x1ed0>
   15330:	mov	r2, r6
   15334:	mov	r1, r5
   15338:	ldr	r3, [r0, #44]	; 0x2c
   1533c:	mov	r0, r4
   15340:	pop	{r4, r5, r6, lr}
   15344:	b	1390c <ftello64@plt+0x21f0>
   15348:	andeq	sp, r1, fp, lsr r1
   1534c:	push	{r4, r5, r6, lr}
   15350:	mov	r4, r0
   15354:	mov	r5, r1
   15358:	mov	r6, r2
   1535c:	ldr	r0, [r0, #4]
   15360:	bl	14f18 <ftello64@plt+0x37fc>
   15364:	cmp	r0, #0
   15368:	bne	1537c <ftello64@plt+0x3c60>
   1536c:	mov	r0, r4
   15370:	ldr	r1, [pc, #28]	; 15394 <ftello64@plt+0x3c78>
   15374:	pop	{r4, r5, r6, lr}
   15378:	b	135ec <ftello64@plt+0x1ed0>
   1537c:	mov	r2, r6
   15380:	mov	r1, r5
   15384:	ldr	r3, [r0, #48]	; 0x30
   15388:	mov	r0, r4
   1538c:	pop	{r4, r5, r6, lr}
   15390:	b	1390c <ftello64@plt+0x21f0>
   15394:	andeq	sp, r1, pc, asr #2
   15398:	push	{r4, r5, r6, lr}
   1539c:	mov	r4, r0
   153a0:	mov	r5, r1
   153a4:	mov	r6, r2
   153a8:	ldr	r0, [r0, #4]
   153ac:	bl	14f18 <ftello64@plt+0x37fc>
   153b0:	cmp	r0, #0
   153b4:	bne	153c8 <ftello64@plt+0x3cac>
   153b8:	mov	r0, r4
   153bc:	ldr	r1, [pc, #28]	; 153e0 <ftello64@plt+0x3cc4>
   153c0:	pop	{r4, r5, r6, lr}
   153c4:	b	135ec <ftello64@plt+0x1ed0>
   153c8:	mov	r2, r6
   153cc:	mov	r1, r5
   153d0:	ldr	r3, [r0, #52]	; 0x34
   153d4:	mov	r0, r4
   153d8:	pop	{r4, r5, r6, lr}
   153dc:	b	1390c <ftello64@plt+0x21f0>
   153e0:	andeq	sp, r1, r4, ror #2
   153e4:	push	{r4, r5, r6, lr}
   153e8:	mov	r4, r0
   153ec:	mov	r5, r1
   153f0:	mov	r6, r2
   153f4:	ldr	r0, [r0, #4]
   153f8:	bl	14f18 <ftello64@plt+0x37fc>
   153fc:	cmp	r0, #0
   15400:	bne	15414 <ftello64@plt+0x3cf8>
   15404:	mov	r0, r4
   15408:	ldr	r1, [pc, #28]	; 1542c <ftello64@plt+0x3d10>
   1540c:	pop	{r4, r5, r6, lr}
   15410:	b	135ec <ftello64@plt+0x1ed0>
   15414:	mov	r2, r6
   15418:	mov	r1, r5
   1541c:	ldr	r3, [r0, #56]	; 0x38
   15420:	mov	r0, r4
   15424:	pop	{r4, r5, r6, lr}
   15428:	b	1390c <ftello64@plt+0x21f0>
   1542c:	andeq	sp, r1, r9, ror r1
   15430:	push	{r4, r5, r6, lr}
   15434:	mov	r4, r0
   15438:	mov	r5, r1
   1543c:	mov	r6, r2
   15440:	ldr	r0, [r0, #4]
   15444:	bl	14f18 <ftello64@plt+0x37fc>
   15448:	cmp	r0, #0
   1544c:	bne	15460 <ftello64@plt+0x3d44>
   15450:	mov	r0, r4
   15454:	ldr	r1, [pc, #28]	; 15478 <ftello64@plt+0x3d5c>
   15458:	pop	{r4, r5, r6, lr}
   1545c:	b	135ec <ftello64@plt+0x1ed0>
   15460:	mov	r2, r6
   15464:	mov	r1, r5
   15468:	ldr	r3, [r0, #60]	; 0x3c
   1546c:	mov	r0, r4
   15470:	pop	{r4, r5, r6, lr}
   15474:	b	1390c <ftello64@plt+0x21f0>
   15478:	muleq	r1, r0, r1
   1547c:	push	{r4, r5, r6, lr}
   15480:	mov	r4, r0
   15484:	mov	r5, r1
   15488:	mov	r6, r2
   1548c:	ldr	r0, [r0, #4]
   15490:	bl	14f18 <ftello64@plt+0x37fc>
   15494:	cmp	r0, #0
   15498:	bne	154ac <ftello64@plt+0x3d90>
   1549c:	mov	r0, r4
   154a0:	ldr	r1, [pc, #28]	; 154c4 <ftello64@plt+0x3da8>
   154a4:	pop	{r4, r5, r6, lr}
   154a8:	b	135ec <ftello64@plt+0x1ed0>
   154ac:	mov	r2, r6
   154b0:	mov	r1, r5
   154b4:	ldr	r3, [r0, #64]	; 0x40
   154b8:	mov	r0, r4
   154bc:	pop	{r4, r5, r6, lr}
   154c0:	b	1390c <ftello64@plt+0x21f0>
   154c4:	andeq	sp, r1, r8, lsr #3
   154c8:	push	{r4, r5, r6, lr}
   154cc:	mov	r4, r0
   154d0:	mov	r5, r1
   154d4:	mov	r6, r2
   154d8:	ldr	r0, [r0, #4]
   154dc:	bl	14f18 <ftello64@plt+0x37fc>
   154e0:	cmp	r0, #0
   154e4:	bne	154f8 <ftello64@plt+0x3ddc>
   154e8:	mov	r0, r4
   154ec:	ldr	r1, [pc, #28]	; 15510 <ftello64@plt+0x3df4>
   154f0:	pop	{r4, r5, r6, lr}
   154f4:	b	135ec <ftello64@plt+0x1ed0>
   154f8:	mov	r2, r6
   154fc:	mov	r1, r5
   15500:	ldr	r3, [r0, #68]	; 0x44
   15504:	mov	r0, r4
   15508:	pop	{r4, r5, r6, lr}
   1550c:	b	1390c <ftello64@plt+0x21f0>
   15510:	andeq	sp, r1, r0, asr #3
   15514:	push	{r4, r5, r6, lr}
   15518:	mov	r4, r0
   1551c:	mov	r5, r1
   15520:	mov	r6, r2
   15524:	ldr	r0, [r0, #4]
   15528:	bl	14f18 <ftello64@plt+0x37fc>
   1552c:	cmp	r0, #0
   15530:	bne	15544 <ftello64@plt+0x3e28>
   15534:	mov	r0, r4
   15538:	ldr	r1, [pc, #28]	; 1555c <ftello64@plt+0x3e40>
   1553c:	pop	{r4, r5, r6, lr}
   15540:	b	135ec <ftello64@plt+0x1ed0>
   15544:	mov	r2, r6
   15548:	mov	r1, r5
   1554c:	ldr	r3, [r0, #72]	; 0x48
   15550:	mov	r0, r4
   15554:	pop	{r4, r5, r6, lr}
   15558:	b	1390c <ftello64@plt+0x21f0>
   1555c:	ldrdeq	sp, [r1], -r5
   15560:	push	{r4, r5, r6, lr}
   15564:	mov	r4, r0
   15568:	mov	r5, r1
   1556c:	mov	r6, r2
   15570:	ldr	r0, [r0, #4]
   15574:	bl	14f18 <ftello64@plt+0x37fc>
   15578:	cmp	r0, #0
   1557c:	bne	15590 <ftello64@plt+0x3e74>
   15580:	mov	r0, r4
   15584:	ldr	r1, [pc, #28]	; 155a8 <ftello64@plt+0x3e8c>
   15588:	pop	{r4, r5, r6, lr}
   1558c:	b	135ec <ftello64@plt+0x1ed0>
   15590:	mov	r2, r6
   15594:	mov	r1, r5
   15598:	ldr	r3, [r0, #76]	; 0x4c
   1559c:	mov	r0, r4
   155a0:	pop	{r4, r5, r6, lr}
   155a4:	b	1390c <ftello64@plt+0x21f0>
   155a8:	strdeq	sp, [r1], -r0
   155ac:	push	{r4, r5, r6, lr}
   155b0:	mov	r4, r0
   155b4:	mov	r5, r1
   155b8:	mov	r6, r2
   155bc:	ldr	r0, [r0, #4]
   155c0:	bl	14f18 <ftello64@plt+0x37fc>
   155c4:	cmp	r0, #0
   155c8:	bne	155dc <ftello64@plt+0x3ec0>
   155cc:	mov	r0, r4
   155d0:	ldr	r1, [pc, #28]	; 155f4 <ftello64@plt+0x3ed8>
   155d4:	pop	{r4, r5, r6, lr}
   155d8:	b	135ec <ftello64@plt+0x1ed0>
   155dc:	mov	r2, r6
   155e0:	mov	r1, r5
   155e4:	ldr	r3, [r0, #80]	; 0x50
   155e8:	mov	r0, r4
   155ec:	pop	{r4, r5, r6, lr}
   155f0:	b	1390c <ftello64@plt+0x21f0>
   155f4:	andeq	sp, r1, r9, lsl #4
   155f8:	push	{r4, r5, r6, lr}
   155fc:	mov	r4, r0
   15600:	mov	r5, r1
   15604:	mov	r6, r2
   15608:	ldr	r0, [r0, #4]
   1560c:	bl	14f18 <ftello64@plt+0x37fc>
   15610:	cmp	r0, #0
   15614:	bne	15628 <ftello64@plt+0x3f0c>
   15618:	mov	r0, r4
   1561c:	ldr	r1, [pc, #28]	; 15640 <ftello64@plt+0x3f24>
   15620:	pop	{r4, r5, r6, lr}
   15624:	b	135ec <ftello64@plt+0x1ed0>
   15628:	mov	r2, r6
   1562c:	mov	r1, r5
   15630:	ldr	r3, [r0, #84]	; 0x54
   15634:	mov	r0, r4
   15638:	pop	{r4, r5, r6, lr}
   1563c:	b	1390c <ftello64@plt+0x21f0>
   15640:	andeq	sp, r1, r1, lsr #4
   15644:	push	{r4, r5, r6, lr}
   15648:	mov	r4, r0
   1564c:	mov	r5, r1
   15650:	mov	r6, r2
   15654:	ldr	r0, [r0, #4]
   15658:	bl	14f18 <ftello64@plt+0x37fc>
   1565c:	cmp	r0, #0
   15660:	bne	15674 <ftello64@plt+0x3f58>
   15664:	mov	r0, r4
   15668:	ldr	r1, [pc, #28]	; 1568c <ftello64@plt+0x3f70>
   1566c:	pop	{r4, r5, r6, lr}
   15670:	b	135ec <ftello64@plt+0x1ed0>
   15674:	mov	r2, r6
   15678:	mov	r1, r5
   1567c:	ldr	r3, [r0, #88]	; 0x58
   15680:	mov	r0, r4
   15684:	pop	{r4, r5, r6, lr}
   15688:	b	1390c <ftello64@plt+0x21f0>
   1568c:	andeq	sp, r1, fp, lsr r2
   15690:	push	{r4, r5, r6, lr}
   15694:	mov	r4, r0
   15698:	mov	r5, r1
   1569c:	mov	r6, r2
   156a0:	ldr	r0, [r0, #4]
   156a4:	bl	14f18 <ftello64@plt+0x37fc>
   156a8:	cmp	r0, #0
   156ac:	bne	156c0 <ftello64@plt+0x3fa4>
   156b0:	mov	r0, r4
   156b4:	ldr	r1, [pc, #28]	; 156d8 <ftello64@plt+0x3fbc>
   156b8:	pop	{r4, r5, r6, lr}
   156bc:	b	135ec <ftello64@plt+0x1ed0>
   156c0:	mov	r2, r6
   156c4:	mov	r1, r5
   156c8:	ldr	r3, [r0, #92]	; 0x5c
   156cc:	mov	r0, r4
   156d0:	pop	{r4, r5, r6, lr}
   156d4:	b	1390c <ftello64@plt+0x21f0>
   156d8:	andeq	sp, r1, r4, asr r2
   156dc:	push	{r4, r5, r6, lr}
   156e0:	mov	r4, r0
   156e4:	mov	r5, r1
   156e8:	mov	r6, r2
   156ec:	ldr	r0, [r0, #4]
   156f0:	bl	14f18 <ftello64@plt+0x37fc>
   156f4:	cmp	r0, #0
   156f8:	bne	1570c <ftello64@plt+0x3ff0>
   156fc:	mov	r0, r4
   15700:	ldr	r1, [pc, #28]	; 15724 <ftello64@plt+0x4008>
   15704:	pop	{r4, r5, r6, lr}
   15708:	b	135ec <ftello64@plt+0x1ed0>
   1570c:	mov	r2, r6
   15710:	mov	r1, r5
   15714:	ldr	r3, [r0, #96]	; 0x60
   15718:	mov	r0, r4
   1571c:	pop	{r4, r5, r6, lr}
   15720:	b	1390c <ftello64@plt+0x21f0>
   15724:	andeq	sp, r1, pc, ror #4
   15728:	push	{r4, r5, r6, lr}
   1572c:	mov	r4, r0
   15730:	mov	r5, r1
   15734:	mov	r6, r2
   15738:	ldr	r0, [r0, #4]
   1573c:	bl	14f18 <ftello64@plt+0x37fc>
   15740:	cmp	r0, #0
   15744:	bne	15758 <ftello64@plt+0x403c>
   15748:	mov	r0, r4
   1574c:	ldr	r1, [pc, #28]	; 15770 <ftello64@plt+0x4054>
   15750:	pop	{r4, r5, r6, lr}
   15754:	b	135ec <ftello64@plt+0x1ed0>
   15758:	mov	r2, r6
   1575c:	mov	r1, r5
   15760:	ldr	r3, [r0, #100]	; 0x64
   15764:	mov	r0, r4
   15768:	pop	{r4, r5, r6, lr}
   1576c:	b	1390c <ftello64@plt+0x21f0>
   15770:	andeq	sp, r1, fp, lsl #5
   15774:	push	{r4, r5, r6, lr}
   15778:	mov	r4, r0
   1577c:	mov	r5, r1
   15780:	mov	r6, r2
   15784:	ldr	r0, [r0, #4]
   15788:	bl	14f18 <ftello64@plt+0x37fc>
   1578c:	cmp	r0, #0
   15790:	bne	157a4 <ftello64@plt+0x4088>
   15794:	mov	r0, r4
   15798:	ldr	r1, [pc, #28]	; 157bc <ftello64@plt+0x40a0>
   1579c:	pop	{r4, r5, r6, lr}
   157a0:	b	135ec <ftello64@plt+0x1ed0>
   157a4:	mov	r2, r6
   157a8:	mov	r1, r5
   157ac:	ldr	r3, [r0, #104]	; 0x68
   157b0:	mov	r0, r4
   157b4:	pop	{r4, r5, r6, lr}
   157b8:	b	1390c <ftello64@plt+0x21f0>
   157bc:	andeq	sp, r1, r7, lsr #5
   157c0:	push	{r4, r5, r6, lr}
   157c4:	mov	r4, r0
   157c8:	mov	r5, r1
   157cc:	mov	r6, r2
   157d0:	ldr	r0, [r0, #4]
   157d4:	bl	14f18 <ftello64@plt+0x37fc>
   157d8:	cmp	r0, #0
   157dc:	bne	157f0 <ftello64@plt+0x40d4>
   157e0:	mov	r0, r4
   157e4:	ldr	r1, [pc, #28]	; 15808 <ftello64@plt+0x40ec>
   157e8:	pop	{r4, r5, r6, lr}
   157ec:	b	135ec <ftello64@plt+0x1ed0>
   157f0:	mov	r2, r6
   157f4:	mov	r1, r5
   157f8:	ldr	r3, [r0, #108]	; 0x6c
   157fc:	mov	r0, r4
   15800:	pop	{r4, r5, r6, lr}
   15804:	b	1390c <ftello64@plt+0x21f0>
   15808:	andeq	sp, r1, r0, asr #5
   1580c:	push	{r4, r5, r6, lr}
   15810:	mov	r4, r0
   15814:	mov	r5, r1
   15818:	mov	r6, r2
   1581c:	ldr	r0, [r0, #4]
   15820:	bl	14f18 <ftello64@plt+0x37fc>
   15824:	cmp	r0, #0
   15828:	bne	1583c <ftello64@plt+0x4120>
   1582c:	mov	r0, r4
   15830:	ldr	r1, [pc, #28]	; 15854 <ftello64@plt+0x4138>
   15834:	pop	{r4, r5, r6, lr}
   15838:	b	135ec <ftello64@plt+0x1ed0>
   1583c:	mov	r2, r6
   15840:	mov	r1, r5
   15844:	ldr	r3, [r0, #112]	; 0x70
   15848:	mov	r0, r4
   1584c:	pop	{r4, r5, r6, lr}
   15850:	b	1390c <ftello64@plt+0x21f0>
   15854:	ldrdeq	sp, [r1], -lr
   15858:	push	{r4, r5, r6, lr}
   1585c:	mov	r4, r0
   15860:	mov	r5, r1
   15864:	mov	r6, r2
   15868:	movw	r1, #35111	; 0x8927
   1586c:	ldr	r2, [r0, #4]
   15870:	ldr	r0, [r0, #8]
   15874:	bl	17120 <argp_usage@@Base+0x260>
   15878:	cmp	r0, #0
   1587c:	bge	15894 <ftello64@plt+0x4178>
   15880:	mov	r3, #1
   15884:	mov	r2, r6
   15888:	mov	r1, r5
   1588c:	mov	r0, r4
   15890:	bl	14220 <ftello64@plt+0x2b04>
   15894:	ldr	r3, [r4, #4]
   15898:	ldrh	r0, [r3, #16]
   1589c:	bl	14ee4 <ftello64@plt+0x37c8>
   158a0:	cmp	r0, #0
   158a4:	mov	r2, r6
   158a8:	ldrne	r3, [r0, #12]
   158ac:	mov	r1, r5
   158b0:	mov	r0, r4
   158b4:	moveq	r3, #1
   158b8:	pop	{r4, r5, r6, lr}
   158bc:	clzne	r3, r3
   158c0:	lsrne	r3, r3, #5
   158c4:	b	14220 <ftello64@plt+0x2b04>
   158c8:	push	{r4, lr}
   158cc:	movw	r1, #35111	; 0x8927
   158d0:	mov	r4, r0
   158d4:	ldr	r2, [r0, #4]
   158d8:	ldr	r0, [r0, #8]
   158dc:	bl	17120 <argp_usage@@Base+0x260>
   158e0:	cmp	r0, #0
   158e4:	bge	15904 <ftello64@plt+0x41e8>
   158e8:	bl	11584 <__errno_location@plt>
   158ec:	ldr	r2, [pc, #80]	; 15944 <ftello64@plt+0x4228>
   158f0:	ldr	r1, [r0]
   158f4:	mov	r0, #1
   158f8:	ldr	r3, [r4, #4]
   158fc:	pop	{r4, lr}
   15900:	b	114c4 <error@plt>
   15904:	ldr	r1, [r4, #4]
   15908:	ldrh	r0, [r1, #16]
   1590c:	bl	14ee4 <ftello64@plt+0x37c8>
   15910:	cmp	r0, #0
   15914:	beq	15934 <ftello64@plt+0x4218>
   15918:	ldr	r3, [r0, #12]
   1591c:	cmp	r3, #0
   15920:	beq	15934 <ftello64@plt+0x4218>
   15924:	mov	r0, r4
   15928:	add	r1, r1, #18
   1592c:	pop	{r4, lr}
   15930:	bx	r3
   15934:	mov	r0, r4
   15938:	ldr	r1, [pc, #8]	; 15948 <ftello64@plt+0x422c>
   1593c:	pop	{r4, lr}
   15940:	b	135ec <ftello64@plt+0x1ed0>
   15944:	strdeq	sp, [r1], -r9
   15948:	andeq	sp, r1, r1, lsr #6
   1594c:	push	{r4, r5, r6, lr}
   15950:	mov	r4, r0
   15954:	mov	r5, r1
   15958:	mov	r6, r2
   1595c:	movw	r1, #35111	; 0x8927
   15960:	ldr	r2, [r0, #4]
   15964:	ldr	r0, [r0, #8]
   15968:	bl	17120 <argp_usage@@Base+0x260>
   1596c:	cmp	r0, #0
   15970:	mov	r2, r6
   15974:	mov	r1, r5
   15978:	mov	r0, r4
   1597c:	pop	{r4, r5, r6, lr}
   15980:	movge	r3, #0
   15984:	movlt	r3, #1
   15988:	b	14220 <ftello64@plt+0x2b04>
   1598c:	push	{r4, lr}
   15990:	movw	r1, #35111	; 0x8927
   15994:	mov	r4, r0
   15998:	ldr	r2, [r0, #4]
   1599c:	ldr	r0, [r0, #8]
   159a0:	bl	17120 <argp_usage@@Base+0x260>
   159a4:	cmp	r0, #0
   159a8:	bge	159c8 <ftello64@plt+0x42ac>
   159ac:	bl	11584 <__errno_location@plt>
   159b0:	ldr	r2, [pc, #52]	; 159ec <ftello64@plt+0x42d0>
   159b4:	ldr	r1, [r0]
   159b8:	mov	r0, #1
   159bc:	ldr	r3, [r4, #4]
   159c0:	pop	{r4, lr}
   159c4:	b	114c4 <error@plt>
   159c8:	ldr	r3, [r4, #4]
   159cc:	ldrh	r0, [r3, #16]
   159d0:	bl	14ee4 <ftello64@plt+0x37c8>
   159d4:	cmp	r0, #0
   159d8:	ldrne	r1, [r0, #4]
   159dc:	mov	r0, r4
   159e0:	pop	{r4, lr}
   159e4:	ldreq	r1, [pc, #4]	; 159f0 <ftello64@plt+0x42d4>
   159e8:	b	135ec <ftello64@plt+0x1ed0>
   159ec:	strdeq	sp, [r1], -r9
   159f0:	andeq	sp, r1, r2, lsr r3
   159f4:	push	{r4, r5, r6, lr}
   159f8:	mov	r4, r0
   159fc:	mov	r5, r1
   15a00:	mov	r6, r2
   15a04:	movw	r1, #35101	; 0x891d
   15a08:	ldr	r2, [r0, #4]
   15a0c:	ldr	r0, [r0, #8]
   15a10:	bl	17120 <argp_usage@@Base+0x260>
   15a14:	cmp	r0, #0
   15a18:	mov	r2, r6
   15a1c:	mov	r1, r5
   15a20:	mov	r0, r4
   15a24:	pop	{r4, r5, r6, lr}
   15a28:	movge	r3, #0
   15a2c:	movlt	r3, #1
   15a30:	b	14220 <ftello64@plt+0x2b04>
   15a34:	push	{r4, r5, r6, lr}
   15a38:	mov	r4, r0
   15a3c:	mov	r5, r1
   15a40:	mov	r6, r2
   15a44:	movw	r1, #35101	; 0x891d
   15a48:	ldr	r2, [r0, #4]
   15a4c:	ldr	r0, [r0, #8]
   15a50:	bl	17120 <argp_usage@@Base+0x260>
   15a54:	cmp	r0, #0
   15a58:	bge	15a78 <ftello64@plt+0x435c>
   15a5c:	bl	11584 <__errno_location@plt>
   15a60:	ldr	r2, [pc, #52]	; 15a9c <ftello64@plt+0x4380>
   15a64:	ldr	r1, [r0]
   15a68:	mov	r0, #1
   15a6c:	ldr	r3, [r4, #4]
   15a70:	pop	{r4, r5, r6, lr}
   15a74:	b	114c4 <error@plt>
   15a78:	ldr	r3, [r4, #4]
   15a7c:	mov	r2, r6
   15a80:	mov	r1, r5
   15a84:	mov	r0, r4
   15a88:	pop	{r4, r5, r6, lr}
   15a8c:	ldr	r3, [r3, #16]
   15a90:	cmp	r3, #0
   15a94:	moveq	r3, #1
   15a98:	b	136e0 <ftello64@plt+0x1fc4>
   15a9c:	andeq	ip, r1, pc, ror #24
   15aa0:	push	{r4, r5, r6, lr}
   15aa4:	mov	r4, r0
   15aa8:	mov	r5, r1
   15aac:	mov	r6, r2
   15ab0:	movw	r1, #35138	; 0x8942
   15ab4:	ldr	r2, [r0, #4]
   15ab8:	ldr	r0, [r0, #8]
   15abc:	bl	17120 <argp_usage@@Base+0x260>
   15ac0:	cmp	r0, #0
   15ac4:	mov	r2, r6
   15ac8:	ldrge	r3, [r4, #4]
   15acc:	mov	r1, r5
   15ad0:	mov	r0, r4
   15ad4:	movlt	r3, #1
   15ad8:	pop	{r4, r5, r6, lr}
   15adc:	ldrge	r3, [r3, #16]
   15ae0:	lsrge	r3, r3, #31
   15ae4:	b	14220 <ftello64@plt+0x2b04>
   15ae8:	push	{r4, r5, r6, lr}
   15aec:	mov	r4, r0
   15af0:	mov	r5, r1
   15af4:	mov	r6, r2
   15af8:	movw	r1, #35138	; 0x8942
   15afc:	ldr	r2, [r0, #4]
   15b00:	ldr	r0, [r0, #8]
   15b04:	bl	17120 <argp_usage@@Base+0x260>
   15b08:	cmp	r0, #0
   15b0c:	bge	15b2c <ftello64@plt+0x4410>
   15b10:	bl	11584 <__errno_location@plt>
   15b14:	ldr	r2, [pc, #44]	; 15b48 <ftello64@plt+0x442c>
   15b18:	ldr	r1, [r0]
   15b1c:	mov	r0, #1
   15b20:	ldr	r3, [r4, #4]
   15b24:	pop	{r4, r5, r6, lr}
   15b28:	b	114c4 <error@plt>
   15b2c:	ldr	r3, [r4, #4]
   15b30:	mov	r2, r6
   15b34:	mov	r1, r5
   15b38:	mov	r0, r4
   15b3c:	pop	{r4, r5, r6, lr}
   15b40:	ldr	r3, [r3, #16]
   15b44:	b	136e0 <ftello64@plt+0x1fc4>
   15b48:	andeq	sp, r1, r3, asr #6
   15b4c:	push	{r0, r1, r2, r3, r4, r5, r6, lr}
   15b50:	subs	r4, r0, #0
   15b54:	mov	r5, r1
   15b58:	bne	15b70 <ftello64@plt+0x4454>
   15b5c:	mov	r3, r1
   15b60:	mov	r0, #1
   15b64:	ldr	r2, [pc, #224]	; 15c4c <ftello64@plt+0x4530>
   15b68:	mov	r1, r4
   15b6c:	bl	114c4 <error@plt>
   15b70:	ldr	r3, [r4, #4]
   15b74:	tst	r3, #1
   15b78:	bne	15c24 <ftello64@plt+0x4508>
   15b7c:	mov	r0, #8
   15b80:	bl	17eec <_obstack_memory_used@@Base+0xab8>
   15b84:	cmp	r0, #0
   15b88:	str	r0, [r4, #8]
   15b8c:	bne	15ba4 <ftello64@plt+0x4488>
   15b90:	bl	11584 <__errno_location@plt>
   15b94:	ldr	r2, [pc, #180]	; 15c50 <ftello64@plt+0x4534>
   15b98:	ldr	r1, [r0]
   15b9c:	mov	r0, #1
   15ba0:	bl	114c4 <error@plt>
   15ba4:	ldr	r3, [r4, #8]
   15ba8:	mov	r2, #0
   15bac:	str	r2, [r3]
   15bb0:	ldr	r3, [r4, #4]
   15bb4:	orr	r3, r3, #1
   15bb8:	str	r3, [r4, #4]
   15bbc:	ldr	r6, [r4, #8]
   15bc0:	mov	r2, #0
   15bc4:	add	r1, sp, #12
   15bc8:	mov	r0, r5
   15bcc:	bl	113d4 <strtol@plt>
   15bd0:	str	r0, [r6, #4]
   15bd4:	ldrb	r3, [r5]
   15bd8:	cmp	r3, #0
   15bdc:	beq	15bf0 <ftello64@plt+0x44d4>
   15be0:	ldr	r3, [sp, #12]
   15be4:	ldrb	r3, [r3]
   15be8:	cmp	r3, #0
   15bec:	beq	15c0c <ftello64@plt+0x44f0>
   15bf0:	ldr	r3, [r4]
   15bf4:	mov	r1, #0
   15bf8:	mov	r0, #1
   15bfc:	ldr	r2, [pc, #80]	; 15c54 <ftello64@plt+0x4538>
   15c00:	str	r3, [sp]
   15c04:	mov	r3, r5
   15c08:	bl	114c4 <error@plt>
   15c0c:	ldr	r2, [r4, #8]
   15c10:	ldr	r3, [r2]
   15c14:	orr	r3, r3, #1
   15c18:	str	r3, [r2]
   15c1c:	add	sp, sp, #16
   15c20:	pop	{r4, r5, r6, pc}
   15c24:	ldr	r3, [r4, #8]
   15c28:	ldr	r3, [r3]
   15c2c:	tst	r3, #1
   15c30:	beq	15bbc <ftello64@plt+0x44a0>
   15c34:	ldr	r2, [pc, #28]	; 15c58 <ftello64@plt+0x453c>
   15c38:	mov	r1, #0
   15c3c:	mov	r0, #1
   15c40:	ldr	r3, [r4]
   15c44:	bl	114c4 <error@plt>
   15c48:	b	15bbc <ftello64@plt+0x44a0>
   15c4c:	andeq	sp, r1, fp, ror #6
   15c50:	muleq	r1, r2, r3
   15c54:	strdeq	sp, [r1], -r1
   15c58:	andeq	sp, r1, r6, asr #7
   15c5c:	cmp	r0, #84	; 0x54
   15c60:	bne	15c7c <ftello64@plt+0x4560>
   15c64:	ldr	r3, [r2, #28]
   15c68:	push	{r4, lr}
   15c6c:	ldr	r0, [r3]
   15c70:	bl	15b4c <ftello64@plt+0x4430>
   15c74:	mov	r0, #0
   15c78:	pop	{r4, pc}
   15c7c:	mov	r0, #7
   15c80:	bx	lr
   15c84:	cmp	r1, #84	; 0x54
   15c88:	bne	15ca4 <ftello64@plt+0x4588>
   15c8c:	push	{r4, lr}
   15c90:	mov	r1, r2
   15c94:	ldr	r0, [r0]
   15c98:	bl	15b4c <ftello64@plt+0x4430>
   15c9c:	mov	r0, #1
   15ca0:	pop	{r4, pc}
   15ca4:	mov	r0, #0
   15ca8:	bx	lr
   15cac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15cb0:	sub	sp, sp, #20
   15cb4:	mov	r5, r0
   15cb8:	mov	r6, r2
   15cbc:	ldr	r8, [pc, #752]	; 15fb4 <ftello64@plt+0x4898>
   15cc0:	str	r1, [sp, #4]
   15cc4:	ldr	r9, [pc, #748]	; 15fb8 <ftello64@plt+0x489c>
   15cc8:	ldr	sl, [pc, #748]	; 15fbc <ftello64@plt+0x48a0>
   15ccc:	ldr	r0, [r2]
   15cd0:	bl	12778 <ftello64@plt+0x105c>
   15cd4:	mov	r3, #0
   15cd8:	str	r0, [r5]
   15cdc:	mov	r4, r3
   15ce0:	ldr	r2, [sp, #4]
   15ce4:	add	r4, r4, #1
   15ce8:	cmp	r4, r2
   15cec:	blt	15d1c <ftello64@plt+0x4600>
   15cf0:	sub	r3, r3, #2
   15cf4:	cmp	r3, #6
   15cf8:	ldrls	pc, [pc, r3, lsl #2]
   15cfc:	b	15fac <ftello64@plt+0x4890>
   15d00:	andeq	r5, r1, r4, ror #30
   15d04:	andeq	r5, r1, ip, ror pc
   15d08:	andeq	r5, r1, r4, lsl #31
   15d0c:	andeq	r5, r1, ip, lsl #31
   15d10:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   15d14:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   15d18:	andeq	r5, r1, r4, lsr #31
   15d1c:	cmp	r3, #8
   15d20:	ldrls	pc, [pc, r3, lsl #2]
   15d24:	b	15e08 <ftello64@plt+0x46ec>
   15d28:	andeq	r5, r1, r0, asr #27
   15d2c:	andeq	r5, r1, r8, lsl #28
   15d30:	andeq	r5, r1, ip, asr #26
   15d34:	andeq	r5, r1, r0, ror #26
   15d38:	andeq	r5, r1, r0, ror sp
   15d3c:	andeq	r5, r1, r0, lsl #27
   15d40:	muleq	r1, r0, sp
   15d44:	andeq	r5, r1, r0, lsr #27
   15d48:			; <UNDEFINED> instruction: 0x00015db0
   15d4c:	ldr	r1, [r6, r4, lsl #2]
   15d50:	ldr	r0, [r5]
   15d54:	bl	1298c <ftello64@plt+0x1270>
   15d58:	mov	r3, #1
   15d5c:	b	15ce0 <ftello64@plt+0x45c4>
   15d60:	ldr	r1, [r6, r4, lsl #2]
   15d64:	ldr	r0, [r5]
   15d68:	bl	12d74 <ftello64@plt+0x1658>
   15d6c:	b	15d58 <ftello64@plt+0x463c>
   15d70:	ldr	r1, [r6, r4, lsl #2]
   15d74:	ldr	r0, [r5]
   15d78:	bl	128a4 <ftello64@plt+0x1188>
   15d7c:	b	15d58 <ftello64@plt+0x463c>
   15d80:	ldr	r1, [r6, r4, lsl #2]
   15d84:	ldr	r0, [r5]
   15d88:	bl	12a00 <ftello64@plt+0x12e4>
   15d8c:	b	15d58 <ftello64@plt+0x463c>
   15d90:	ldr	r1, [r6, r4, lsl #2]
   15d94:	ldr	r0, [r5]
   15d98:	bl	12a74 <ftello64@plt+0x1358>
   15d9c:	b	15d58 <ftello64@plt+0x463c>
   15da0:	ldr	r1, [r6, r4, lsl #2]
   15da4:	ldr	r0, [r5]
   15da8:	bl	12b38 <ftello64@plt+0x141c>
   15dac:	b	15d58 <ftello64@plt+0x463c>
   15db0:	ldr	r1, [r6, r4, lsl #2]
   15db4:	ldr	r0, [r5]
   15db8:	bl	15b4c <ftello64@plt+0x4430>
   15dbc:	b	15d58 <ftello64@plt+0x463c>
   15dc0:	ldr	r7, [r6, r4, lsl #2]
   15dc4:	ldr	r1, [pc, #500]	; 15fc0 <ftello64@plt+0x48a4>
   15dc8:	mov	r0, r7
   15dcc:	bl	113c8 <strcmp@plt>
   15dd0:	cmp	r0, #0
   15dd4:	beq	15d58 <ftello64@plt+0x463c>
   15dd8:	ldr	r1, [pc, #484]	; 15fc4 <ftello64@plt+0x48a8>
   15ddc:	mov	r0, r7
   15de0:	bl	113c8 <strcmp@plt>
   15de4:	subs	fp, r0, #0
   15de8:	bne	15e08 <ftello64@plt+0x46ec>
   15dec:	mov	r3, r7
   15df0:	ldr	r2, [pc, #464]	; 15fc8 <ftello64@plt+0x48ac>
   15df4:	mov	r1, fp
   15df8:	bl	114c4 <error@plt>
   15dfc:	mov	r0, fp
   15e00:	add	sp, sp, #20
   15e04:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15e08:	ldr	fp, [r6, r4, lsl #2]
   15e0c:	mov	r1, r8
   15e10:	mov	r0, fp
   15e14:	bl	113c8 <strcmp@plt>
   15e18:	cmp	r0, #0
   15e1c:	moveq	r3, #2
   15e20:	beq	15ce0 <ftello64@plt+0x45c4>
   15e24:	mov	r1, r9
   15e28:	mov	r0, fp
   15e2c:	bl	113c8 <strcmp@plt>
   15e30:	cmp	r0, #0
   15e34:	beq	15f54 <ftello64@plt+0x4838>
   15e38:	mov	r1, sl
   15e3c:	mov	r0, fp
   15e40:	bl	113c8 <strcmp@plt>
   15e44:	cmp	r0, #0
   15e48:	beq	15f54 <ftello64@plt+0x4838>
   15e4c:	ldr	r1, [pc, #376]	; 15fcc <ftello64@plt+0x48b0>
   15e50:	mov	r0, fp
   15e54:	bl	113c8 <strcmp@plt>
   15e58:	cmp	r0, #0
   15e5c:	moveq	r3, #4
   15e60:	beq	15ce0 <ftello64@plt+0x45c4>
   15e64:	ldr	r1, [pc, #356]	; 15fd0 <ftello64@plt+0x48b4>
   15e68:	mov	r0, fp
   15e6c:	bl	113c8 <strcmp@plt>
   15e70:	cmp	r0, #0
   15e74:	beq	15f5c <ftello64@plt+0x4840>
   15e78:	ldr	r1, [pc, #340]	; 15fd4 <ftello64@plt+0x48b8>
   15e7c:	mov	r0, fp
   15e80:	bl	113c8 <strcmp@plt>
   15e84:	cmp	r0, #0
   15e88:	beq	15f5c <ftello64@plt+0x4840>
   15e8c:	ldr	r1, [pc, #324]	; 15fd8 <ftello64@plt+0x48bc>
   15e90:	mov	r0, fp
   15e94:	bl	113c8 <strcmp@plt>
   15e98:	cmp	r0, #0
   15e9c:	beq	15f5c <ftello64@plt+0x4840>
   15ea0:	ldr	r1, [pc, #308]	; 15fdc <ftello64@plt+0x48c0>
   15ea4:	mov	r0, fp
   15ea8:	bl	113c8 <strcmp@plt>
   15eac:	cmp	r0, #0
   15eb0:	moveq	r3, #7
   15eb4:	beq	15ce0 <ftello64@plt+0x45c4>
   15eb8:	ldr	r1, [pc, #288]	; 15fe0 <ftello64@plt+0x48c4>
   15ebc:	mov	r0, fp
   15ec0:	bl	113c8 <strcmp@plt>
   15ec4:	cmp	r0, #0
   15ec8:	moveq	r3, #6
   15ecc:	beq	15ce0 <ftello64@plt+0x45c4>
   15ed0:	ldr	r1, [pc, #268]	; 15fe4 <ftello64@plt+0x48c8>
   15ed4:	mov	r0, fp
   15ed8:	bl	113c8 <strcmp@plt>
   15edc:	cmp	r0, #0
   15ee0:	moveq	r3, #8
   15ee4:	beq	15ce0 <ftello64@plt+0x45c4>
   15ee8:	ldr	r1, [pc, #248]	; 15fe8 <ftello64@plt+0x48cc>
   15eec:	mov	r0, fp
   15ef0:	bl	113c8 <strcmp@plt>
   15ef4:	subs	r2, r0, #0
   15ef8:	moveq	r1, #65	; 0x41
   15efc:	beq	15f38 <ftello64@plt+0x481c>
   15f00:	ldr	r1, [pc, #228]	; 15fec <ftello64@plt+0x48d0>
   15f04:	mov	r0, fp
   15f08:	bl	113c8 <strcmp@plt>
   15f0c:	cmp	r0, #0
   15f10:	moveq	r2, #1
   15f14:	moveq	r1, r2
   15f18:	beq	15f38 <ftello64@plt+0x481c>
   15f1c:	add	r1, sp, #12
   15f20:	mov	r0, fp
   15f24:	bl	11ca0 <ftello64@plt+0x584>
   15f28:	bics	r3, r0, #72	; 0x48
   15f2c:	mov	r1, r0
   15f30:	beq	15f44 <ftello64@plt+0x4828>
   15f34:	ldr	r2, [sp, #12]
   15f38:	ldr	r0, [r5]
   15f3c:	bl	12c78 <ftello64@plt+0x155c>
   15f40:	b	15d58 <ftello64@plt+0x463c>
   15f44:	ldr	r1, [r6, r4, lsl #2]
   15f48:	ldr	r0, [r5]
   15f4c:	bl	12830 <ftello64@plt+0x1114>
   15f50:	b	15d58 <ftello64@plt+0x463c>
   15f54:	mov	r3, #3
   15f58:	b	15ce0 <ftello64@plt+0x45c4>
   15f5c:	mov	r3, #5
   15f60:	b	15ce0 <ftello64@plt+0x45c4>
   15f64:	ldr	r2, [pc, #132]	; 15ff0 <ftello64@plt+0x48d4>
   15f68:	mov	r1, #0
   15f6c:	mov	fp, #0
   15f70:	mov	r0, r1
   15f74:	bl	114c4 <error@plt>
   15f78:	b	15dfc <ftello64@plt+0x46e0>
   15f7c:	ldr	r2, [pc, #112]	; 15ff4 <ftello64@plt+0x48d8>
   15f80:	b	15f68 <ftello64@plt+0x484c>
   15f84:	ldr	r2, [pc, #108]	; 15ff8 <ftello64@plt+0x48dc>
   15f88:	b	15f68 <ftello64@plt+0x484c>
   15f8c:	ldr	r2, [pc, #104]	; 15ffc <ftello64@plt+0x48e0>
   15f90:	b	15f68 <ftello64@plt+0x484c>
   15f94:	ldr	r2, [pc, #100]	; 16000 <ftello64@plt+0x48e4>
   15f98:	b	15f68 <ftello64@plt+0x484c>
   15f9c:	ldr	r2, [pc, #96]	; 16004 <ftello64@plt+0x48e8>
   15fa0:	b	15f68 <ftello64@plt+0x484c>
   15fa4:	ldr	r2, [pc, #92]	; 16008 <ftello64@plt+0x48ec>
   15fa8:	b	15f68 <ftello64@plt+0x484c>
   15fac:	mov	fp, #1
   15fb0:	b	15dfc <ftello64@plt+0x46e0>
   15fb4:	ldrdeq	fp, [r1], -r2
   15fb8:	muleq	r1, r8, r9
   15fbc:	andeq	sp, r1, r1, asr r4
   15fc0:			; <UNDEFINED> instruction: 0x0001b7b0
   15fc4:	andeq	sp, r1, r6, lsr #8
   15fc8:	andeq	sp, r1, ip, lsr #8
   15fcc:	ldrdeq	fp, [r1], -pc	; <UNPREDICTABLE>
   15fd0:	andeq	sp, r1, sp, asr r4
   15fd4:	muleq	r1, fp, sp
   15fd8:	andeq	sp, r1, r3, ror #8
   15fdc:	strdeq	fp, [r1], -sl
   15fe0:	ldrdeq	fp, [r1], -ip
   15fe4:	andeq	sp, r1, sl, ror #8
   15fe8:	andeq	fp, r1, r2, asr sl
   15fec:	andeq	fp, r1, pc, ror sl
   15ff0:	andeq	sp, r1, r5, ror r4
   15ff4:	muleq	r1, sp, r4
   15ff8:	ldrdeq	sp, [r1], -r3
   15ffc:	strdeq	sp, [r1], -r9
   16000:	andeq	sp, r1, lr, lsl r5
   16004:	andeq	sp, r1, r3, asr #10
   16008:	andeq	sp, r1, r5, ror #10
   1600c:	ldr	r3, [r2]
   16010:	tst	r3, #1
   16014:	beq	16078 <ftello64@plt+0x495c>
   16018:	ldr	r3, [r2, #4]
   1601c:	push	{r4, lr}
   16020:	mov	r4, r1
   16024:	movw	r1, #35139	; 0x8943
   16028:	mov	r2, r4
   1602c:	str	r3, [r4, #16]
   16030:	bl	17120 <argp_usage@@Base+0x260>
   16034:	cmp	r0, #0
   16038:	bge	16050 <ftello64@plt+0x4934>
   1603c:	bl	11584 <__errno_location@plt>
   16040:	ldr	r2, [pc, #56]	; 16080 <ftello64@plt+0x4964>
   16044:	ldr	r1, [r0]
   16048:	mov	r0, #0
   1604c:	bl	114c4 <error@plt>
   16050:	ldr	r3, [pc, #44]	; 16084 <ftello64@plt+0x4968>
   16054:	ldr	r3, [r3]
   16058:	cmp	r3, #0
   1605c:	beq	16070 <ftello64@plt+0x4954>
   16060:	mov	r1, r4
   16064:	ldr	r0, [pc, #28]	; 16088 <ftello64@plt+0x496c>
   16068:	ldr	r2, [r4, #16]
   1606c:	bl	113e0 <printf@plt>
   16070:	mov	r0, #0
   16074:	pop	{r4, pc}
   16078:	mov	r0, #0
   1607c:	bx	lr
   16080:	andeq	sp, r1, lr, lsl #11
   16084:	andeq	pc, r2, r0, lsl #24
   16088:	andeq	sp, r1, r3, lsr #11
   1608c:	push	{r4, r5, r6, lr}
   16090:	ldr	r6, [r0]
   16094:	cmp	r6, #0
   16098:	beq	160e0 <ftello64@plt+0x49c4>
   1609c:	mov	r4, r0
   160a0:	mov	r0, r2
   160a4:	ldr	r2, [r4, #32]
   160a8:	mov	r5, r1
   160ac:	mov	r1, r3
   160b0:	str	r2, [r5, #36]	; 0x24
   160b4:	ldr	r2, [r4, #24]
   160b8:	str	r2, [r5, #28]
   160bc:	ldr	r2, [r4, #28]
   160c0:	str	r2, [r5, #32]
   160c4:	ldr	r2, [r4, #12]
   160c8:	str	r2, [r5, #20]
   160cc:	mov	r2, r5
   160d0:	blx	r6
   160d4:	ldr	r3, [r5, #36]	; 0x24
   160d8:	str	r3, [r4, #32]
   160dc:	pop	{r4, r5, r6, pc}
   160e0:	mov	r0, #7
   160e4:	pop	{r4, r5, r6, pc}
   160e8:	push	{r4, r5, r6, r7, r8, lr}
   160ec:	mov	r4, r1
   160f0:	ldr	r7, [r0]
   160f4:	ldr	r5, [r0, #16]
   160f8:	cmp	r7, #0
   160fc:	bne	1610c <ftello64@plt+0x49f0>
   16100:	ldr	r3, [r0, #4]
   16104:	cmp	r3, #0
   16108:	beq	16128 <ftello64@plt+0x4a0c>
   1610c:	ldr	r3, [r4, #8]
   16110:	cmp	r7, #0
   16114:	movne	r6, #0
   16118:	movne	r8, #24
   1611c:	add	r3, r3, #1
   16120:	str	r3, [r4, #8]
   16124:	bne	16160 <ftello64@plt+0x4a44>
   16128:	cmp	r5, #0
   1612c:	addne	r5, r5, #16
   16130:	popeq	{r4, r5, r6, r7, r8, pc}
   16134:	add	r5, r5, #16
   16138:	ldr	r0, [r5, #-32]	; 0xffffffe0
   1613c:	cmp	r0, #0
   16140:	popeq	{r4, r5, r6, r7, r8, pc}
   16144:	mov	r1, r4
   16148:	bl	160e8 <ftello64@plt+0x49cc>
   1614c:	ldr	r3, [r4, #12]
   16150:	add	r3, r3, #1
   16154:	str	r3, [r4, #12]
   16158:	b	16134 <ftello64@plt+0x4a18>
   1615c:	add	r6, r6, #1
   16160:	mla	r0, r8, r6, r7
   16164:	bl	16f1c <argp_usage@@Base+0x5c>
   16168:	cmp	r0, #0
   1616c:	beq	1615c <ftello64@plt+0x4a40>
   16170:	ldr	r3, [r4]
   16174:	add	r2, r6, r6, lsl #1
   16178:	add	r3, r3, r2
   1617c:	str	r3, [r4]
   16180:	ldr	r3, [r4, #4]
   16184:	add	r6, r3, r6
   16188:	str	r6, [r4, #4]
   1618c:	b	16128 <ftello64@plt+0x4a0c>
   16190:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16194:	sub	sp, sp, #36	; 0x24
   16198:	mov	r9, r0
   1619c:	mov	r4, r3
   161a0:	ldr	r6, [r0]
   161a4:	str	r1, [sp, #16]
   161a8:	str	r2, [sp, #20]
   161ac:	ldr	sl, [r0, #16]
   161b0:	cmp	r6, #0
   161b4:	ldr	r5, [sp, #72]	; 0x48
   161b8:	movne	r7, r6
   161bc:	movne	fp, #0
   161c0:	bne	16370 <ftello64@plt+0x4c54>
   161c4:	ldr	r3, [r0, #4]
   161c8:	cmp	r3, #0
   161cc:	beq	16210 <ftello64@plt+0x4af4>
   161d0:	ldr	r3, [r9, #4]
   161d4:	ldr	r2, [sp, #16]
   161d8:	stm	r4, {r3, r9}
   161dc:	ldr	r3, [r5, #4]
   161e0:	str	r2, [r4, #16]
   161e4:	ldr	r2, [sp, #20]
   161e8:	str	r3, [r4, #8]
   161ec:	mov	r3, #0
   161f0:	cmp	sl, r3
   161f4:	str	r3, [r4, #12]
   161f8:	strd	r2, [r4, #20]
   161fc:	str	r3, [r4, #28]
   16200:	str	r3, [r4, #32]
   16204:	bne	16390 <ftello64@plt+0x4c74>
   16208:	mov	r6, r4
   1620c:	add	r4, r4, #36	; 0x24
   16210:	cmp	sl, #0
   16214:	movne	r2, #0
   16218:	bne	163cc <ftello64@plt+0x4cb0>
   1621c:	mov	r0, r4
   16220:	add	sp, sp, #36	; 0x24
   16224:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16228:	ldr	r3, [r7, #12]
   1622c:	tst	r3, #4
   16230:	moveq	r6, r7
   16234:	ldr	r3, [r6, #12]
   16238:	ands	r3, r3, #8
   1623c:	str	r3, [sp, #8]
   16240:	bne	1636c <ftello64@plt+0x4c50>
   16244:	mov	r0, r7
   16248:	bl	16ed4 <argp_usage@@Base+0x14>
   1624c:	cmp	r0, #0
   16250:	beq	162a8 <ftello64@plt+0x4b8c>
   16254:	ldr	r3, [r5, #4]
   16258:	ldr	r2, [r7, #4]
   1625c:	add	r1, r3, #1
   16260:	str	r1, [r5, #4]
   16264:	strb	r2, [r3]
   16268:	ldr	r3, [r6, #8]
   1626c:	cmp	r3, #0
   16270:	beq	162a0 <ftello64@plt+0x4b84>
   16274:	ldr	r3, [r5, #4]
   16278:	mov	r1, #58	; 0x3a
   1627c:	add	r2, r3, #1
   16280:	str	r2, [r5, #4]
   16284:	strb	r1, [r3]
   16288:	ldr	r3, [r6, #12]
   1628c:	tst	r3, #1
   16290:	ldrne	r3, [r5, #4]
   16294:	addne	r2, r3, #1
   16298:	strne	r2, [r5, #4]
   1629c:	strbne	r1, [r3]
   162a0:	ldr	r3, [r5, #4]
   162a4:	strb	fp, [r3]
   162a8:	ldr	r3, [r7]
   162ac:	cmp	r3, #0
   162b0:	beq	1636c <ftello64@plt+0x4c50>
   162b4:	ldr	r2, [r5]
   162b8:	str	r2, [sp, #12]
   162bc:	ldr	r2, [r2, #8]
   162c0:	mov	r8, r2
   162c4:	ldr	r0, [r8]
   162c8:	cmp	r0, #0
   162cc:	beq	162fc <ftello64@plt+0x4be0>
   162d0:	mov	r1, r3
   162d4:	str	r3, [sp, #24]
   162d8:	str	r2, [sp, #28]
   162dc:	bl	113c8 <strcmp@plt>
   162e0:	cmp	r0, #0
   162e4:	ldr	r3, [sp, #24]
   162e8:	ldr	r2, [sp, #28]
   162ec:	bne	16384 <ftello64@plt+0x4c68>
   162f0:	sub	r8, r8, r2
   162f4:	cmp	r8, #0
   162f8:	bge	1636c <ftello64@plt+0x4c50>
   162fc:	ldr	r1, [r5, #8]
   16300:	str	r3, [r1]
   16304:	ldr	r3, [r6, #8]
   16308:	cmp	r3, #0
   1630c:	beq	16324 <ftello64@plt+0x4c08>
   16310:	ldr	r3, [r6, #12]
   16314:	tst	r3, #1
   16318:	movne	r3, #2
   1631c:	moveq	r3, #1
   16320:	str	r3, [sp, #8]
   16324:	ldr	r3, [sp, #8]
   16328:	ldr	r2, [sp, #12]
   1632c:	ldr	r0, [pc, #168]	; 163dc <ftello64@plt+0x4cc0>
   16330:	stmib	r1, {r3, fp}
   16334:	ldr	r3, [r7, #4]
   16338:	ldr	r2, [r2, #48]	; 0x30
   1633c:	cmp	r3, #0
   16340:	ldreq	r3, [r6, #4]
   16344:	sub	r2, r4, r2
   16348:	asr	r2, r2, #2
   1634c:	mul	r2, r0, r2
   16350:	bic	r3, r3, #-16777216	; 0xff000000
   16354:	add	r2, r2, #1
   16358:	add	r3, r3, r2, lsl #24
   1635c:	str	r3, [r1, #12]
   16360:	add	r3, r1, #16
   16364:	str	r3, [r5, #8]
   16368:	str	fp, [r1, #16]
   1636c:	add	r7, r7, #24
   16370:	mov	r0, r7
   16374:	bl	16f1c <argp_usage@@Base+0x5c>
   16378:	cmp	r0, #0
   1637c:	beq	16228 <ftello64@plt+0x4b0c>
   16380:	b	161d0 <ftello64@plt+0x4ab4>
   16384:	add	r8, r8, #16
   16388:	b	162c4 <ftello64@plt+0x4ba8>
   1638c:	add	r3, r3, #1
   16390:	ldr	r2, [sl, r3, lsl #4]
   16394:	cmp	r2, #0
   16398:	bne	1638c <ftello64@plt+0x4c70>
   1639c:	ldr	r2, [r5, #12]
   163a0:	add	r3, r2, r3, lsl #2
   163a4:	str	r2, [r4, #28]
   163a8:	str	r3, [r5, #12]
   163ac:	b	16208 <ftello64@plt+0x4aec>
   163b0:	mov	r3, r4
   163b4:	mov	r1, r6
   163b8:	str	r5, [sp]
   163bc:	add	r7, r2, #1
   163c0:	bl	16190 <ftello64@plt+0x4a74>
   163c4:	mov	r4, r0
   163c8:	mov	r2, r7
   163cc:	ldr	r0, [sl, r2, lsl #4]
   163d0:	cmp	r0, #0
   163d4:	bne	163b0 <ftello64@plt+0x4c94>
   163d8:	b	1621c <ftello64@plt+0x4b00>
   163dc:	stmiacc	r3!, {r0, r3, r4, r5, r9, sl, fp, pc}^
   163e0:	cmp	r0, #86	; 0x56
   163e4:	bne	16450 <ftello64@plt+0x4d34>
   163e8:	ldr	r3, [pc, #112]	; 16460 <ftello64@plt+0x4d44>
   163ec:	push	{r4, lr}
   163f0:	mov	r4, r2
   163f4:	ldr	r3, [r3]
   163f8:	cmp	r3, #0
   163fc:	beq	1641c <ftello64@plt+0x4d00>
   16400:	mov	r1, r2
   16404:	ldr	r0, [r2, #48]	; 0x30
   16408:	blx	r3
   1640c:	ldr	r0, [r4, #16]
   16410:	ands	r0, r0, #32
   16414:	bne	16458 <ftello64@plt+0x4d3c>
   16418:	bl	11548 <exit@plt>
   1641c:	ldr	r3, [pc, #64]	; 16464 <ftello64@plt+0x4d48>
   16420:	ldr	r2, [r3]
   16424:	cmp	r2, #0
   16428:	beq	1643c <ftello64@plt+0x4d20>
   1642c:	ldr	r1, [pc, #52]	; 16468 <ftello64@plt+0x4d4c>
   16430:	ldr	r0, [r4, #48]	; 0x30
   16434:	bl	11578 <fprintf@plt>
   16438:	b	1640c <ftello64@plt+0x4cf0>
   1643c:	ldr	r2, [pc, #40]	; 1646c <ftello64@plt+0x4d50>
   16440:	mov	r0, r4
   16444:	ldr	r1, [pc, #36]	; 16470 <ftello64@plt+0x4d54>
   16448:	bl	19f00 <argp_error@@Base>
   1644c:	b	1640c <ftello64@plt+0x4cf0>
   16450:	mov	r0, #7
   16454:	bx	lr
   16458:	mov	r0, #0
   1645c:	pop	{r4, pc}
   16460:			; <UNDEFINED> instruction: 0x0002fbb8
   16464:	andeq	pc, r2, r4, lsr #24
   16468:	andeq	sp, r1, r5, lsr #24
   1646c:			; <UNDEFINED> instruction: 0x0001dab0
   16470:			; <UNDEFINED> instruction: 0x0001b3b0
   16474:	cmn	r0, #3
   16478:	push	{r4, r5, r6, lr}
   1647c:	mov	r4, r2
   16480:	beq	164c4 <ftello64@plt+0x4da8>
   16484:	mov	r5, r1
   16488:	bgt	1649c <ftello64@plt+0x4d80>
   1648c:	cmn	r0, #4
   16490:	beq	16500 <ftello64@plt+0x4de4>
   16494:	mov	r0, #7
   16498:	pop	{r4, r5, r6, pc}
   1649c:	cmn	r0, #2
   164a0:	beq	164cc <ftello64@plt+0x4db0>
   164a4:	cmp	r0, #63	; 0x3f
   164a8:	movweq	r2, #634	; 0x27a
   164ac:	bne	16494 <ftello64@plt+0x4d78>
   164b0:	mov	r0, r4
   164b4:	ldr	r1, [r4, #48]	; 0x30
   164b8:	bl	19e5c <argp_state_help@@Base>
   164bc:	mov	r0, #0
   164c0:	pop	{r4, r5, r6, pc}
   164c4:	movw	r2, #513	; 0x201
   164c8:	b	164b0 <ftello64@plt+0x4d94>
   164cc:	ldr	r3, [pc, #100]	; 16538 <ftello64@plt+0x4e1c>
   164d0:	mov	r0, r1
   164d4:	str	r1, [r3]
   164d8:	bl	16fac <argp_usage@@Base+0xec>
   164dc:	ldr	r3, [pc, #88]	; 1653c <ftello64@plt+0x4e20>
   164e0:	str	r0, [r4, #40]	; 0x28
   164e4:	str	r0, [r3]
   164e8:	ldr	r3, [r4, #16]
   164ec:	and	r3, r3, #3
   164f0:	cmp	r3, #1
   164f4:	ldreq	r3, [r4, #8]
   164f8:	streq	r5, [r3]
   164fc:	b	164bc <ftello64@plt+0x4da0>
   16500:	ldr	r4, [pc, #56]	; 16540 <ftello64@plt+0x4e24>
   16504:	cmp	r1, #0
   16508:	ldr	r0, [pc, #52]	; 16544 <ftello64@plt+0x4e28>
   1650c:	movne	r0, r1
   16510:	bl	11668 <atoi@plt>
   16514:	str	r0, [r4]
   16518:	ldr	r3, [r4]
   1651c:	sub	r2, r3, #1
   16520:	cmp	r3, #0
   16524:	str	r2, [r4]
   16528:	ble	164bc <ftello64@plt+0x4da0>
   1652c:	mov	r0, #1
   16530:	bl	11458 <sleep@plt>
   16534:	b	16518 <ftello64@plt+0x4dfc>
   16538:	andeq	pc, r2, r4, asr #22
   1653c:	andeq	pc, r2, r0, asr #22
   16540:			; <UNDEFINED> instruction: 0x0002fbb4
   16544:	ldrdeq	sp, [r1], -r3

00016548 <argp_parse@@Base>:
   16548:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1654c:	add	fp, sp, #32
   16550:	sub	sp, sp, #220	; 0xdc
   16554:	tst	r3, #1
   16558:	mov	r4, r0
   1655c:	mov	r8, r2
   16560:	mov	r7, r3
   16564:	str	r1, [fp, #-240]	; 0xffffff10
   16568:	bne	1659c <argp_parse@@Base+0x54>
   1656c:	ldr	r3, [pc, #2232]	; 16e2c <argp_parse@@Base+0x8e4>
   16570:	ldr	r5, [pc, #2232]	; 16e30 <argp_parse@@Base+0x8e8>
   16574:	ldr	r2, [r3]
   16578:	cmp	r2, #0
   1657c:	ldreq	r2, [r8]
   16580:	streq	r2, [r3]
   16584:	ldr	r3, [r5]
   16588:	cmp	r3, #0
   1658c:	bne	1659c <argp_parse@@Base+0x54>
   16590:	ldr	r0, [r8]
   16594:	bl	16fac <argp_usage@@Base+0xec>
   16598:	str	r0, [r5]
   1659c:	ands	r9, r7, #16
   165a0:	bne	16624 <argp_parse@@Base+0xdc>
   165a4:	sub	sp, sp, #64	; 0x40
   165a8:	mov	r2, #28
   165ac:	add	r5, sp, #8
   165b0:	sub	sp, sp, #32
   165b4:	add	r6, sp, #8
   165b8:	mov	r1, r9
   165bc:	mov	r0, r6
   165c0:	bl	115b4 <memset@plt>
   165c4:	mov	r0, r5
   165c8:	mov	r2, #64	; 0x40
   165cc:	str	r5, [r6, #16]
   165d0:	mov	r1, r9
   165d4:	bl	115b4 <memset@plt>
   165d8:	ldr	r3, [pc, #2132]	; 16e34 <argp_parse@@Base+0x8ec>
   165dc:	cmp	r4, #0
   165e0:	strne	r4, [r5], #16
   165e4:	str	r3, [r5]
   165e8:	ldr	r3, [pc, #2120]	; 16e38 <argp_parse@@Base+0x8f0>
   165ec:	ldr	r3, [r3]
   165f0:	cmp	r3, #0
   165f4:	bne	1660c <argp_parse@@Base+0xc4>
   165f8:	ldr	r3, [pc, #2108]	; 16e3c <argp_parse@@Base+0x8f4>
   165fc:	ldr	r3, [r3]
   16600:	cmp	r3, #0
   16604:	addeq	r3, r5, #16
   16608:	beq	16618 <argp_parse@@Base+0xd0>
   1660c:	ldr	r2, [pc, #2092]	; 16e40 <argp_parse@@Base+0x8f8>
   16610:	add	r3, r5, #32
   16614:	str	r2, [r5, #16]
   16618:	mov	r2, #0
   1661c:	mov	r4, r6
   16620:	str	r2, [r3]
   16624:	mov	r2, #36	; 0x24
   16628:	mov	r1, #0
   1662c:	sub	r0, fp, #196	; 0xc4
   16630:	bl	115b4 <memset@plt>
   16634:	ands	r3, r7, #4
   16638:	moveq	r3, #1
   1663c:	movne	r3, #0
   16640:	str	r3, [fp, #-228]	; 0xffffff1c
   16644:	mov	r3, #0
   16648:	cmp	r4, r3
   1664c:	str	r3, [fp, #-224]	; 0xffffff20
   16650:	str	r3, [fp, #-220]	; 0xffffff24
   16654:	str	r3, [fp, #-216]	; 0xffffff28
   16658:	beq	16668 <argp_parse@@Base+0x120>
   1665c:	sub	r1, fp, #228	; 0xe4
   16660:	mov	r0, r4
   16664:	bl	160e8 <ftello64@plt+0x49cc>
   16668:	mov	r9, #36	; 0x24
   1666c:	ldr	r0, [fp, #-228]	; 0xffffff1c
   16670:	ldr	r3, [fp, #-220]	; 0xffffff24
   16674:	ldr	sl, [fp, #-216]	; 0xffffff28
   16678:	add	r0, r0, #1
   1667c:	mla	r9, r3, r9, r9
   16680:	ldr	r3, [fp, #-224]	; 0xffffff20
   16684:	lsl	sl, sl, #2
   16688:	add	r6, r9, sl
   1668c:	add	r3, r3, #1
   16690:	add	r3, r6, r3, lsl #4
   16694:	add	r0, r0, r3
   16698:	str	r3, [fp, #-232]	; 0xffffff18
   1669c:	bl	17eec <_obstack_memory_used@@Base+0xab8>
   166a0:	cmp	r0, #0
   166a4:	mov	r5, r0
   166a8:	str	r0, [fp, #-40]	; 0xffffffd8
   166ac:	moveq	r4, #12
   166b0:	beq	16830 <argp_parse@@Base+0x2e8>
   166b4:	add	r3, r0, r6
   166b8:	sub	lr, fp, #196	; 0xc4
   166bc:	add	r9, r0, r9
   166c0:	sub	ip, fp, #148	; 0x94
   166c4:	str	r3, [fp, #-236]	; 0xffffff14
   166c8:	str	r3, [fp, #-152]	; 0xffffff68
   166cc:	ldr	r3, [fp, #-232]	; 0xffffff18
   166d0:	str	r0, [fp, #-112]	; 0xffffff90
   166d4:	str	r9, [fp, #-104]	; 0xffffff98
   166d8:	add	r6, r0, r3
   166dc:	mov	r3, #1
   166e0:	str	r3, [fp, #-196]	; 0xffffff3c
   166e4:	str	r3, [fp, #-192]	; 0xffffff40
   166e8:	ldm	lr!, {r0, r1, r2, r3}
   166ec:	str	r6, [fp, #-156]	; 0xffffff64
   166f0:	stmia	ip!, {r0, r1, r2, r3}
   166f4:	ldm	lr!, {r0, r1, r2, r3}
   166f8:	stmia	ip!, {r0, r1, r2, r3}
   166fc:	mov	r2, sl
   16700:	mov	r0, r9
   16704:	mov	r1, #0
   16708:	sub	sl, fp, #160	; 0xa0
   1670c:	ldr	r3, [lr]
   16710:	str	r3, [ip]
   16714:	bl	115b4 <memset@plt>
   16718:	ldr	r3, [fp, #-236]	; 0xffffff14
   1671c:	tst	r7, #8
   16720:	str	sl, [fp, #-212]	; 0xffffff2c
   16724:	str	r6, [fp, #-208]	; 0xffffff30
   16728:	addne	r6, r6, #1
   1672c:	strne	r6, [fp, #-208]	; 0xffffff30
   16730:	str	r3, [fp, #-204]	; 0xffffff34
   16734:	movne	r3, #45	; 0x2d
   16738:	str	r9, [fp, #-200]	; 0xffffff38
   1673c:	sub	r9, fp, #148	; 0x94
   16740:	bne	1675c <argp_parse@@Base+0x214>
   16744:	ands	r3, r7, #4
   16748:	cmp	r3, #0
   1674c:	beq	16764 <argp_parse@@Base+0x21c>
   16750:	add	r6, r6, #1
   16754:	mov	r3, #43	; 0x2b
   16758:	str	r6, [fp, #-208]	; 0xffffff30
   1675c:	ldr	r2, [fp, #-232]	; 0xffffff18
   16760:	strb	r3, [r5, r2]
   16764:	ldr	r3, [fp, #-208]	; 0xffffff30
   16768:	mov	r2, #0
   1676c:	cmp	r4, r2
   16770:	strb	r2, [r3]
   16774:	ldr	r3, [fp, #-204]	; 0xffffff34
   16778:	str	r2, [r3]
   1677c:	ldreq	r3, [fp, #-112]	; 0xffffff90
   16780:	str	r4, [fp, #-160]	; 0xffffff60
   16784:	streq	r3, [fp, #-108]	; 0xffffff94
   16788:	beq	167a8 <argp_parse@@Base+0x260>
   1678c:	sub	r3, fp, #212	; 0xd4
   16790:	mov	r1, r2
   16794:	mov	r0, r4
   16798:	str	r3, [sp]
   1679c:	ldr	r3, [fp, #-112]	; 0xffffff90
   167a0:	bl	16190 <ftello64@plt+0x4a74>
   167a4:	str	r0, [fp, #-108]	; 0xffffff94
   167a8:	mov	r2, #24
   167ac:	mov	r1, #0
   167b0:	ldr	r6, [pc, #1676]	; 16e44 <argp_parse@@Base+0x8fc>
   167b4:	sub	r0, fp, #76	; 0x4c
   167b8:	mov	r4, #0
   167bc:	bl	115b4 <memset@plt>
   167c0:	ldr	r3, [fp, #-160]	; 0xffffff60
   167c4:	ldr	r5, [fp, #-112]	; 0xffffff90
   167c8:	str	r3, [fp, #-96]	; 0xffffffa0
   167cc:	ldr	r3, [fp, #-240]	; 0xffffff10
   167d0:	str	r8, [fp, #-88]	; 0xffffffa8
   167d4:	str	r7, [fp, #-80]	; 0xffffffb0
   167d8:	str	sl, [fp, #-44]	; 0xffffffd4
   167dc:	str	r3, [fp, #-92]	; 0xffffffa4
   167e0:	ldr	r3, [pc, #1632]	; 16e48 <argp_parse@@Base+0x900>
   167e4:	ldr	r3, [r3]
   167e8:	str	r3, [fp, #-52]	; 0xffffffcc
   167ec:	ldr	r3, [pc, #1624]	; 16e4c <argp_parse@@Base+0x904>
   167f0:	ldr	r3, [r3]
   167f4:	str	r3, [fp, #-48]	; 0xffffffd0
   167f8:	mov	r3, #0
   167fc:	str	r3, [fp, #-84]	; 0xffffffac
   16800:	mov	r3, #1
   16804:	str	r3, [fp, #-100]	; 0xffffff9c
   16808:	ldr	r3, [fp, #-108]	; 0xffffff94
   1680c:	cmp	r5, r3
   16810:	ldrcc	r3, [fp, #8]
   16814:	strcc	r3, [r5, #24]
   16818:	ldr	r3, [fp, #-108]	; 0xffffff94
   1681c:	cmp	r5, r3
   16820:	bcs	168a0 <argp_parse@@Base+0x358>
   16824:	cmp	r4, #7
   16828:	cmpne	r4, #0
   1682c:	beq	1683c <argp_parse@@Base+0x2f4>
   16830:	mov	r0, r4
   16834:	sub	sp, fp, #32
   16838:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1683c:	ldr	r3, [r5, #16]
   16840:	cmp	r3, #0
   16844:	ldrne	r3, [r3, #28]
   16848:	ldrne	r2, [r5, #20]
   1684c:	ldrne	r3, [r3, r2, lsl #2]
   16850:	strne	r3, [r5, #24]
   16854:	ldr	r3, [r5]
   16858:	cmp	r3, #0
   1685c:	bne	16880 <argp_parse@@Base+0x338>
   16860:	ldr	r3, [r5, #4]
   16864:	ldr	r3, [r3, #16]
   16868:	cmp	r3, #0
   1686c:	beq	16880 <argp_parse@@Base+0x338>
   16870:	ldr	r3, [r3]
   16874:	cmp	r3, #0
   16878:	ldrdne	r2, [r5, #24]
   1687c:	strne	r2, [r3]
   16880:	mov	r0, r5
   16884:	mov	r3, #0
   16888:	mov	r2, r6
   1688c:	sub	r1, fp, #96	; 0x60
   16890:	bl	1608c <ftello64@plt+0x4970>
   16894:	mov	r4, r0
   16898:	add	r5, r5, #36	; 0x24
   1689c:	b	16818 <argp_parse@@Base+0x2d0>
   168a0:	cmp	r4, #7
   168a4:	beq	168b0 <argp_parse@@Base+0x368>
   168a8:	cmp	r4, #0
   168ac:	bne	16830 <argp_parse@@Base+0x2e8>
   168b0:	ldr	r2, [fp, #-80]	; 0xffffffb0
   168b4:	tst	r2, #2
   168b8:	moveq	r3, #1
   168bc:	streq	r3, [fp, #-144]	; 0xffffff70
   168c0:	beq	168ec <argp_parse@@Base+0x3a4>
   168c4:	mov	r1, #0
   168c8:	tst	r2, #1
   168cc:	ldr	r3, [fp, #-88]	; 0xffffffa8
   168d0:	str	r1, [fp, #-144]	; 0xffffff70
   168d4:	beq	168ec <argp_parse@@Base+0x3a4>
   168d8:	sub	r3, r3, #4
   168dc:	str	r3, [fp, #-88]	; 0xffffffa8
   168e0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   168e4:	add	r3, r3, #1
   168e8:	str	r3, [fp, #-92]	; 0xffffffa4
   168ec:	ldr	r3, [fp, #-88]	; 0xffffffa8
   168f0:	cmp	r8, r3
   168f4:	bne	16a54 <argp_parse@@Base+0x50c>
   168f8:	ldr	r0, [r8]
   168fc:	cmp	r0, #0
   16900:	beq	16a54 <argp_parse@@Base+0x50c>
   16904:	bl	16fac <argp_usage@@Base+0xec>
   16908:	str	r0, [fp, #-56]	; 0xffffffc8
   1690c:	ldr	r7, [pc, #1340]	; 16e50 <argp_parse@@Base+0x908>
   16910:	ldr	r3, [fp, #-84]	; 0xffffffac
   16914:	ldr	r2, [fp, #-72]	; 0xffffffb8
   16918:	cmp	r2, #0
   1691c:	beq	1692c <argp_parse@@Base+0x3e4>
   16920:	cmp	r2, r3
   16924:	movgt	r2, #0
   16928:	strgt	r2, [fp, #-72]	; 0xffffffb8
   1692c:	ldr	r2, [fp, #-100]	; 0xffffff9c
   16930:	cmp	r2, #0
   16934:	beq	169b0 <argp_parse@@Base+0x468>
   16938:	ldr	r6, [fp, #-72]	; 0xffffffb8
   1693c:	cmp	r6, #0
   16940:	bne	169b0 <argp_parse@@Base+0x468>
   16944:	str	r3, [fp, #-148]	; 0xffffff6c
   16948:	mvn	r3, #0
   1694c:	ldr	ip, [fp, #-80]	; 0xffffffb0
   16950:	str	r3, [fp, #-140]	; 0xffffff74
   16954:	stm	sp, {r6, r9}
   16958:	ldr	r2, [fp, #-156]	; 0xffffff64
   1695c:	tst	ip, #64	; 0x40
   16960:	ldr	r3, [fp, #-152]	; 0xffffff68
   16964:	ldrd	r0, [fp, #-92]	; 0xffffffa4
   16968:	beq	16a64 <argp_parse@@Base+0x51c>
   1696c:	bl	170f0 <argp_usage@@Base+0x230>
   16970:	ldr	r4, [fp, #-148]	; 0xffffff6c
   16974:	cmn	r0, #1
   16978:	mov	r5, r0
   1697c:	str	r4, [fp, #-84]	; 0xffffffac
   16980:	bne	16a6c <argp_parse@@Base+0x524>
   16984:	mov	r3, #0
   16988:	cmp	r4, #1
   1698c:	str	r3, [fp, #-100]	; 0xffffff9c
   16990:	ble	169b0 <argp_parse@@Base+0x468>
   16994:	ldr	r2, [fp, #-88]	; 0xffffffa8
   16998:	sub	r3, r4, #-1073741823	; 0xc0000001
   1699c:	ldr	r1, [pc, #1200]	; 16e54 <argp_parse@@Base+0x90c>
   169a0:	ldr	r0, [r2, r3, lsl #2]
   169a4:	bl	113c8 <strcmp@plt>
   169a8:	cmp	r0, #0
   169ac:	streq	r4, [fp, #-72]	; 0xffffffb8
   169b0:	ldr	r2, [fp, #-92]	; 0xffffffa4
   169b4:	ldr	r3, [fp, #-84]	; 0xffffffac
   169b8:	cmp	r3, r2
   169bc:	bge	16c38 <argp_parse@@Base+0x6f0>
   169c0:	ldr	r2, [fp, #-80]	; 0xffffffb0
   169c4:	tst	r2, #4
   169c8:	bne	16c38 <argp_parse@@Base+0x6f0>
   169cc:	add	r2, r3, #1
   169d0:	str	r2, [fp, #-84]	; 0xffffffac
   169d4:	ldr	r2, [fp, #-88]	; 0xffffffa8
   169d8:	ldr	r3, [r2, r3, lsl #2]
   169dc:	str	r3, [fp, #-136]	; 0xffffff78
   169e0:	ldr	sl, [fp, #-136]	; 0xffffff78
   169e4:	mov	r3, #0
   169e8:	mov	r4, #7
   169ec:	ldr	r8, [fp, #-84]	; 0xffffffac
   169f0:	ldr	r5, [fp, #-112]	; 0xffffff90
   169f4:	sub	r8, r8, #1
   169f8:	str	r8, [fp, #-84]	; 0xffffffac
   169fc:	ldr	r6, [fp, #-108]	; 0xffffff94
   16a00:	cmp	r5, r6
   16a04:	movcs	r2, #0
   16a08:	movcc	r2, #1
   16a0c:	cmp	r4, #7
   16a10:	movne	r2, #0
   16a14:	cmp	r2, #0
   16a18:	bne	16a88 <argp_parse@@Base+0x540>
   16a1c:	cmp	r4, #0
   16a20:	bne	16ba4 <argp_parse@@Base+0x65c>
   16a24:	cmp	r3, r7
   16a28:	ldreq	r3, [fp, #-92]	; 0xffffffa4
   16a2c:	streq	r3, [fp, #-84]	; 0xffffffac
   16a30:	ldr	r3, [fp, #-84]	; 0xffffffac
   16a34:	cmp	r8, r3
   16a38:	sublt	r8, r3, r8
   16a3c:	ldrlt	r3, [r5, #-24]	; 0xffffffe8
   16a40:	movge	r3, #1
   16a44:	strge	r3, [fp, #-100]	; 0xffffff9c
   16a48:	addlt	r8, r3, r8
   16a4c:	strlt	r8, [r5, #-24]	; 0xffffffe8
   16a50:	b	16910 <argp_parse@@Base+0x3c8>
   16a54:	ldr	r3, [pc, #980]	; 16e30 <argp_parse@@Base+0x8e8>
   16a58:	ldr	r3, [r3]
   16a5c:	str	r3, [fp, #-56]	; 0xffffffc8
   16a60:	b	1690c <argp_parse@@Base+0x3c4>
   16a64:	bl	170a4 <argp_usage@@Base+0x1e4>
   16a68:	b	16970 <argp_parse@@Base+0x428>
   16a6c:	cmp	r0, #63	; 0x3f
   16a70:	bne	16de0 <argp_parse@@Base+0x898>
   16a74:	ldr	r3, [fp, #-140]	; 0xffffff74
   16a78:	cmn	r3, #1
   16a7c:	beq	16de8 <argp_parse@@Base+0x8a0>
   16a80:	mov	r4, #7
   16a84:	b	16bc0 <argp_parse@@Base+0x678>
   16a88:	ldr	r3, [fp, #-84]	; 0xffffffac
   16a8c:	mov	r2, #0
   16a90:	sub	r1, fp, #96	; 0x60
   16a94:	mov	r0, r5
   16a98:	add	r3, r3, #1
   16a9c:	str	r3, [fp, #-84]	; 0xffffffac
   16aa0:	mov	r3, sl
   16aa4:	bl	1608c <ftello64@plt+0x4970>
   16aa8:	cmp	r0, #7
   16aac:	mov	r4, r0
   16ab0:	movne	r3, #0
   16ab4:	bne	16ae0 <argp_parse@@Base+0x598>
   16ab8:	ldr	r3, [fp, #-84]	; 0xffffffac
   16abc:	mov	r2, r7
   16ac0:	sub	r1, fp, #96	; 0x60
   16ac4:	mov	r0, r5
   16ac8:	sub	r3, r3, #1
   16acc:	str	r3, [fp, #-84]	; 0xffffffac
   16ad0:	mov	r3, #0
   16ad4:	bl	1608c <ftello64@plt+0x4970>
   16ad8:	mov	r4, r0
   16adc:	mov	r3, r7
   16ae0:	add	r5, r5, #36	; 0x24
   16ae4:	b	169fc <argp_parse@@Base+0x4b4>
   16ae8:	ldr	r0, [fp, #-112]	; 0xffffff90
   16aec:	ldr	r3, [fp, #-108]	; 0xffffff94
   16af0:	cmp	r0, r3
   16af4:	bcs	16e04 <argp_parse@@Base+0x8bc>
   16af8:	ldr	r1, [r0, #8]
   16afc:	cmp	r2, r1
   16b00:	bcs	16b58 <argp_parse@@Base+0x610>
   16b04:	ldr	r3, [fp, #-136]	; 0xffffff78
   16b08:	mov	r2, r5
   16b0c:	sub	r1, fp, #96	; 0x60
   16b10:	bl	1608c <ftello64@plt+0x4970>
   16b14:	cmp	r0, #7
   16b18:	mov	r4, r0
   16b1c:	bne	16bb8 <argp_parse@@Base+0x670>
   16b20:	cmp	r8, #0
   16b24:	beq	16e04 <argp_parse@@Base+0x8bc>
   16b28:	ldr	r3, [fp, #-152]	; 0xffffff68
   16b2c:	add	r3, r3, #16
   16b30:	ldr	r2, [r3, #-16]
   16b34:	ldr	r1, [r3, #-4]
   16b38:	cmp	r5, r1
   16b3c:	bne	16b90 <argp_parse@@Base+0x648>
   16b40:	ldr	r3, [pc, #784]	; 16e58 <argp_parse@@Base+0x910>
   16b44:	cmp	r2, #0
   16b48:	moveq	r2, r3
   16b4c:	ldr	r3, [pc, #776]	; 16e5c <argp_parse@@Base+0x914>
   16b50:	ldr	r1, [pc, #776]	; 16e60 <argp_parse@@Base+0x918>
   16b54:	b	16e10 <argp_parse@@Base+0x8c8>
   16b58:	add	r0, r0, #36	; 0x24
   16b5c:	b	16af0 <argp_parse@@Base+0x5a8>
   16b60:	mov	r0, #36	; 0x24
   16b64:	ands	r1, r5, #8388608	; 0x800000
   16b68:	ldr	r3, [fp, #-136]	; 0xffffff78
   16b6c:	movne	r1, #-16777216	; 0xff000000
   16b70:	bic	r2, r5, #-16777216	; 0xff000000
   16b74:	ldr	ip, [fp, #-112]	; 0xffffff90
   16b78:	mul	r0, r0, r8
   16b7c:	orr	r2, r2, r1
   16b80:	sub	r1, fp, #96	; 0x60
   16b84:	sub	r0, r0, #36	; 0x24
   16b88:	add	r0, ip, r0
   16b8c:	b	16b10 <argp_parse@@Base+0x5c8>
   16b90:	cmp	r2, #0
   16b94:	add	r3, r3, #16
   16b98:	bne	16b30 <argp_parse@@Base+0x5e8>
   16b9c:	ldr	r2, [pc, #692]	; 16e58 <argp_parse@@Base+0x910>
   16ba0:	b	16b4c <argp_parse@@Base+0x604>
   16ba4:	cmp	r4, #7
   16ba8:	movne	r6, r2
   16bac:	bne	16bc0 <argp_parse@@Base+0x678>
   16bb0:	mov	r5, #1
   16bb4:	b	16e18 <argp_parse@@Base+0x8d0>
   16bb8:	cmp	r0, #0
   16bbc:	beq	16910 <argp_parse@@Base+0x3c8>
   16bc0:	cmp	r4, #7
   16bc4:	movne	r6, #0
   16bc8:	andeq	r6, r6, #1
   16bcc:	cmp	r6, #0
   16bd0:	beq	16d3c <argp_parse@@Base+0x7f4>
   16bd4:	ldr	r2, [fp, #-92]	; 0xffffffa4
   16bd8:	ldr	r3, [fp, #-84]	; 0xffffffac
   16bdc:	cmp	r3, r2
   16be0:	bne	16cf0 <argp_parse@@Base+0x7a8>
   16be4:	ldr	r7, [pc, #632]	; 16e64 <argp_parse@@Base+0x91c>
   16be8:	mov	r4, #0
   16bec:	ldr	r6, [fp, #-112]	; 0xffffff90
   16bf0:	ldr	r5, [fp, #-108]	; 0xffffff94
   16bf4:	cmp	r6, r5
   16bf8:	bcs	16c08 <argp_parse@@Base+0x6c0>
   16bfc:	cmp	r4, #7
   16c00:	cmpne	r4, #0
   16c04:	beq	16c40 <argp_parse@@Base+0x6f8>
   16c08:	ldr	r6, [pc, #600]	; 16e68 <argp_parse@@Base+0x920>
   16c0c:	sub	r5, r5, #36	; 0x24
   16c10:	ldr	r3, [fp, #-112]	; 0xffffff90
   16c14:	cmp	r5, r3
   16c18:	bcc	16c88 <argp_parse@@Base+0x740>
   16c1c:	cmp	r4, #7
   16c20:	cmpne	r4, #0
   16c24:	beq	16c68 <argp_parse@@Base+0x720>
   16c28:	ldr	r3, [fp, #4]
   16c2c:	cmp	r3, #0
   16c30:	bne	16c9c <argp_parse@@Base+0x754>
   16c34:	b	16cb0 <argp_parse@@Base+0x768>
   16c38:	mov	r6, #1
   16c3c:	b	16a80 <argp_parse@@Base+0x538>
   16c40:	ldr	r3, [r6, #12]
   16c44:	cmp	r3, #0
   16c48:	bne	16c60 <argp_parse@@Base+0x718>
   16c4c:	mov	r2, r7
   16c50:	sub	r1, fp, #96	; 0x60
   16c54:	mov	r0, r6
   16c58:	bl	1608c <ftello64@plt+0x4970>
   16c5c:	mov	r4, r0
   16c60:	add	r6, r6, #36	; 0x24
   16c64:	b	16bf0 <argp_parse@@Base+0x6a8>
   16c68:	mov	r0, r5
   16c6c:	mov	r3, #0
   16c70:	mov	r2, r6
   16c74:	sub	r1, fp, #96	; 0x60
   16c78:	bl	1608c <ftello64@plt+0x4970>
   16c7c:	mov	r4, r0
   16c80:	sub	r5, r5, #36	; 0x24
   16c84:	b	16c10 <argp_parse@@Base+0x6c8>
   16c88:	cmp	r4, #7
   16c8c:	ldr	r3, [fp, #4]
   16c90:	beq	16d8c <argp_parse@@Base+0x844>
   16c94:	cmp	r3, #0
   16c98:	beq	16ca8 <argp_parse@@Base+0x760>
   16c9c:	ldr	r3, [fp, #-84]	; 0xffffffac
   16ca0:	ldr	r2, [fp, #4]
   16ca4:	str	r3, [r2]
   16ca8:	cmp	r4, #0
   16cac:	beq	16d98 <argp_parse@@Base+0x850>
   16cb0:	ldr	r6, [pc, #436]	; 16e6c <argp_parse@@Base+0x924>
   16cb4:	ldr	r5, [fp, #-112]	; 0xffffff90
   16cb8:	ldr	r3, [fp, #-108]	; 0xffffff94
   16cbc:	cmp	r5, r3
   16cc0:	bcc	16d48 <argp_parse@@Base+0x800>
   16cc4:	ldr	r5, [fp, #-108]	; 0xffffff94
   16cc8:	ldr	r6, [pc, #416]	; 16e70 <argp_parse@@Base+0x928>
   16ccc:	sub	r5, r5, #36	; 0x24
   16cd0:	ldr	r3, [fp, #-112]	; 0xffffff90
   16cd4:	cmp	r5, r3
   16cd8:	bcs	16d70 <argp_parse@@Base+0x828>
   16cdc:	cmp	r4, #7
   16ce0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16ce4:	moveq	r4, #22
   16ce8:	bl	17030 <argp_usage@@Base+0x170>
   16cec:	b	16830 <argp_parse@@Base+0x2e8>
   16cf0:	ldr	r2, [fp, #4]
   16cf4:	cmp	r2, #0
   16cf8:	strne	r3, [r2]
   16cfc:	bne	16d98 <argp_parse@@Base+0x850>
   16d00:	ldr	r3, [fp, #-80]	; 0xffffffb0
   16d04:	tst	r3, #2
   16d08:	bne	16d24 <argp_parse@@Base+0x7dc>
   16d0c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   16d10:	cmp	r0, #0
   16d14:	beq	16d24 <argp_parse@@Base+0x7dc>
   16d18:	ldr	r1, [pc, #340]	; 16e74 <argp_parse@@Base+0x92c>
   16d1c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   16d20:	bl	11578 <fprintf@plt>
   16d24:	mov	r2, #260	; 0x104
   16d28:	sub	r0, fp, #96	; 0x60
   16d2c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   16d30:	mov	r4, #7
   16d34:	bl	19e5c <argp_state_help@@Base>
   16d38:	b	16cb0 <argp_parse@@Base+0x768>
   16d3c:	cmp	r4, #7
   16d40:	bne	16cb0 <argp_parse@@Base+0x768>
   16d44:	b	16d24 <argp_parse@@Base+0x7dc>
   16d48:	mov	r0, r5
   16d4c:	mov	r3, #0
   16d50:	mov	r2, r6
   16d54:	sub	r1, fp, #96	; 0x60
   16d58:	bl	1608c <ftello64@plt+0x4970>
   16d5c:	add	r5, r5, #36	; 0x24
   16d60:	b	16cb8 <argp_parse@@Base+0x770>
   16d64:	cmp	r4, #7
   16d68:	moveq	r4, #0
   16d6c:	b	16cc4 <argp_parse@@Base+0x77c>
   16d70:	mov	r0, r5
   16d74:	mov	r3, #0
   16d78:	mov	r2, r6
   16d7c:	sub	r1, fp, #96	; 0x60
   16d80:	bl	1608c <ftello64@plt+0x4970>
   16d84:	sub	r5, r5, #36	; 0x24
   16d88:	b	16cd0 <argp_parse@@Base+0x788>
   16d8c:	cmp	r3, #0
   16d90:	movne	r4, #0
   16d94:	bne	16c9c <argp_parse@@Base+0x754>
   16d98:	ldr	r5, [fp, #-108]	; 0xffffff94
   16d9c:	mov	r4, #0
   16da0:	ldr	r6, [pc, #208]	; 16e78 <argp_parse@@Base+0x930>
   16da4:	sub	r5, r5, #36	; 0x24
   16da8:	ldr	r3, [fp, #-112]	; 0xffffff90
   16dac:	cmp	r5, r3
   16db0:	bcc	16d64 <argp_parse@@Base+0x81c>
   16db4:	cmp	r4, #7
   16db8:	cmpne	r4, #0
   16dbc:	bne	16cc4 <argp_parse@@Base+0x77c>
   16dc0:	mov	r0, r5
   16dc4:	mov	r3, #0
   16dc8:	mov	r2, r6
   16dcc:	sub	r1, fp, #96	; 0x60
   16dd0:	bl	1608c <ftello64@plt+0x4970>
   16dd4:	mov	r4, r0
   16dd8:	sub	r5, r5, #36	; 0x24
   16ddc:	b	16da8 <argp_parse@@Base+0x860>
   16de0:	cmp	r0, #1
   16de4:	beq	169e0 <argp_parse@@Base+0x498>
   16de8:	asrs	r8, r5, #24
   16dec:	bne	16b60 <argp_parse@@Base+0x618>
   16df0:	mov	r1, r5
   16df4:	ldr	r0, [fp, #-156]	; 0xffffff64
   16df8:	bl	1156c <strchr@plt>
   16dfc:	subs	r2, r0, #0
   16e00:	bne	16ae8 <argp_parse@@Base+0x5a0>
   16e04:	ldr	r3, [pc, #80]	; 16e5c <argp_parse@@Base+0x914>
   16e08:	mov	r2, r5
   16e0c:	ldr	r1, [pc, #104]	; 16e7c <argp_parse@@Base+0x934>
   16e10:	sub	r0, fp, #96	; 0x60
   16e14:	bl	19f00 <argp_error@@Base>
   16e18:	add	r5, r5, #1
   16e1c:	bics	r3, r5, #2
   16e20:	moveq	r6, #1
   16e24:	movne	r6, #0
   16e28:	b	16a80 <argp_parse@@Base+0x538>
   16e2c:	andeq	pc, r2, r4, asr #22
   16e30:	andeq	pc, r2, r0, asr #22
   16e34:	muleq	r1, r8, r9
   16e38:	andeq	pc, r2, r4, lsr #24
   16e3c:			; <UNDEFINED> instruction: 0x0002fbb8
   16e40:			; <UNDEFINED> instruction: 0x0001d9b4
   16e44:	tsteq	r0, r3
   16e48:	andeq	pc, r2, r8, asr #22
   16e4c:	andeq	pc, r2, ip, asr #22
   16e50:	tsteq	r0, r6
   16e54:	ldrdeq	sp, [r1], -ip
   16e58:	ldrdeq	sp, [r1], -r8
   16e5c:	ldrdeq	sp, [r1], -r0
   16e60:	andeq	sp, r1, r7, ror #21
   16e64:	tsteq	r0, r2
   16e68:	tsteq	r0, r1
   16e6c:	tsteq	r0, r5
   16e70:	tsteq	r0, r7
   16e74:	strdeq	sp, [r1], -r0
   16e78:	tsteq	r0, r4
   16e7c:	ldrdeq	sp, [r1], -pc	; <UNPREDICTABLE>
   16e80:	cmp	r1, #0
   16e84:	ldrne	r2, [r1, #52]	; 0x34
   16e88:	ldrne	r3, [r2, #48]	; 0x30
   16e8c:	ldrne	r2, [r2, #52]	; 0x34
   16e90:	bne	16eb0 <argp_parse@@Base+0x968>
   16e94:	mov	r0, r1
   16e98:	bx	lr
   16e9c:	ldr	r1, [r3, #4]
   16ea0:	cmp	r1, r0
   16ea4:	ldreq	r1, [r3, #24]
   16ea8:	beq	16e94 <argp_parse@@Base+0x94c>
   16eac:	add	r3, r3, #36	; 0x24
   16eb0:	cmp	r2, r3
   16eb4:	bhi	16e9c <argp_parse@@Base+0x954>
   16eb8:	mov	r1, #0
   16ebc:	b	16e94 <argp_parse@@Base+0x94c>

00016ec0 <argp_usage@@Base>:
   16ec0:	ldr	r3, [pc, #8]	; 16ed0 <argp_usage@@Base+0x10>
   16ec4:	movw	r2, #262	; 0x106
   16ec8:	ldr	r1, [r3]
   16ecc:	b	19e5c <argp_state_help@@Base>
   16ed0:	andeq	pc, r2, r8, asr #22
   16ed4:	ldr	r3, [r0, #12]
   16ed8:	ands	r3, r3, #8
   16edc:	bne	16f10 <argp_usage@@Base+0x50>
   16ee0:	push	{r4, lr}
   16ee4:	ldr	r4, [r0, #4]
   16ee8:	sub	r2, r4, #1
   16eec:	cmp	r2, #254	; 0xfe
   16ef0:	bhi	16f08 <argp_usage@@Base+0x48>
   16ef4:	bl	1153c <__ctype_b_loc@plt>
   16ef8:	ldr	r3, [r0]
   16efc:	lsl	r4, r4, #1
   16f00:	ldrh	r3, [r3, r4]
   16f04:	ubfx	r3, r3, #14, #1
   16f08:	mov	r0, r3
   16f0c:	pop	{r4, pc}
   16f10:	mov	r3, #0
   16f14:	mov	r0, r3
   16f18:	bx	lr
   16f1c:	ldr	r3, [r0, #4]
   16f20:	cmp	r3, #0
   16f24:	movne	r3, #0
   16f28:	bne	16f4c <argp_usage@@Base+0x8c>
   16f2c:	ldr	r2, [r0]
   16f30:	cmp	r2, #0
   16f34:	bne	16f4c <argp_usage@@Base+0x8c>
   16f38:	ldr	r2, [r0, #16]
   16f3c:	cmp	r2, #0
   16f40:	ldreq	r3, [r0, #20]
   16f44:	clzeq	r3, r3
   16f48:	lsreq	r3, r3, #5
   16f4c:	mov	r0, r3
   16f50:	bx	lr
   16f54:	push	{r0, r1, r2, lr}
   16f58:	ldr	r1, [pc, #28]	; 16f7c <argp_usage@@Base+0xbc>
   16f5c:	ldr	r2, [pc, #28]	; 16f80 <argp_usage@@Base+0xc0>
   16f60:	ldr	r3, [r1, #4]
   16f64:	str	r3, [sp]
   16f68:	ldr	r3, [pc, #20]	; 16f84 <argp_usage@@Base+0xc4>
   16f6c:	ldr	r1, [r1]
   16f70:	bl	17ab0 <_obstack_memory_used@@Base+0x67c>
   16f74:	add	sp, sp, #12
   16f78:	pop	{pc}		; (ldr pc, [sp], #4)
   16f7c:			; <UNDEFINED> instruction: 0x0002fbbc
   16f80:			; <UNDEFINED> instruction: 0x0001dbb6
   16f84:	andeq	sp, r1, r9, lsr #23
   16f88:	ldr	r3, [pc, #16]	; 16fa0 <argp_usage@@Base+0xe0>
   16f8c:	ldr	r2, [pc, #16]	; 16fa4 <argp_usage@@Base+0xe4>
   16f90:	str	r2, [r3]
   16f94:	ldr	r3, [pc, #12]	; 16fa8 <argp_usage@@Base+0xe8>
   16f98:	strd	r0, [r3]
   16f9c:	bx	lr
   16fa0:			; <UNDEFINED> instruction: 0x0002fbb8
   16fa4:	andeq	r6, r1, r4, asr pc
   16fa8:			; <UNDEFINED> instruction: 0x0002fbbc
   16fac:	mov	r3, r0
   16fb0:	mov	r2, r3
   16fb4:	mov	r0, r3
   16fb8:	ldrb	r1, [r2], #1
   16fbc:	cmp	r1, #47	; 0x2f
   16fc0:	beq	16fcc <argp_usage@@Base+0x10c>
   16fc4:	mov	r2, #0
   16fc8:	b	16fe8 <argp_usage@@Base+0x128>
   16fcc:	mov	r3, r2
   16fd0:	b	16fb0 <argp_usage@@Base+0xf0>
   16fd4:	cmp	r1, #47	; 0x2f
   16fd8:	moveq	r2, #1
   16fdc:	beq	16fe8 <argp_usage@@Base+0x128>
   16fe0:	cmp	r2, #0
   16fe4:	bne	16ffc <argp_usage@@Base+0x13c>
   16fe8:	mov	ip, r3
   16fec:	ldrb	r1, [r3], #1
   16ff0:	cmp	r1, #0
   16ff4:	bne	16fd4 <argp_usage@@Base+0x114>
   16ff8:	bx	lr
   16ffc:	mov	r0, ip
   17000:	b	16fc4 <argp_usage@@Base+0x104>
   17004:	push	{r4, lr}
   17008:	mov	r4, r0
   1700c:	bl	11560 <strlen@plt>
   17010:	cmp	r0, #1
   17014:	popls	{r4, pc}
   17018:	sub	r3, r0, #1
   1701c:	ldrb	r2, [r4, r3]
   17020:	cmp	r2, #47	; 0x2f
   17024:	popne	{r4, pc}
   17028:	mov	r0, r3
   1702c:	b	17010 <argp_usage@@Base+0x150>
   17030:	push	{r0, r1, r2, r4, r5, lr}
   17034:	mov	r5, r0
   17038:	bl	11584 <__errno_location@plt>
   1703c:	mov	r4, r0
   17040:	mov	r0, r5
   17044:	ldr	r3, [r4]
   17048:	str	r3, [sp]
   1704c:	str	r3, [sp, #4]
   17050:	mov	r3, #0
   17054:	str	r3, [r4]
   17058:	bl	11404 <free@plt>
   1705c:	ldr	r3, [r4]
   17060:	add	r2, sp, #8
   17064:	clz	r3, r3
   17068:	lsr	r3, r3, #5
   1706c:	add	r3, r2, r3, lsl #2
   17070:	ldr	r3, [r3, #-8]
   17074:	str	r3, [r4]
   17078:	add	sp, sp, #12
   1707c:	pop	{r4, r5, pc}
   17080:	mov	ip, #0
   17084:	push	{r0, r1, r2, r3, r4, lr}
   17088:	str	ip, [sp, #4]
   1708c:	str	ip, [sp, #8]
   17090:	ldr	ip, [sp, #24]
   17094:	str	ip, [sp]
   17098:	bl	1a9c0 <argp_error@@Base+0xac0>
   1709c:	add	sp, sp, #20
   170a0:	pop	{pc}		; (ldr pc, [sp], #4)
   170a4:	push	{r0, r1, r2, r3, r4, lr}
   170a8:	mov	ip, #0
   170ac:	ldr	lr, [sp, #28]
   170b0:	stmib	sp, {ip, lr}
   170b4:	str	ip, [sp, #12]
   170b8:	ldr	ip, [sp, #24]
   170bc:	str	ip, [sp]
   170c0:	bl	1a4cc <argp_error@@Base+0x5cc>
   170c4:	add	sp, sp, #20
   170c8:	pop	{pc}		; (ldr pc, [sp], #4)
   170cc:	push	{r0, r1, r2, r3, r4, lr}
   170d0:	mov	ip, #1
   170d4:	mov	lr, #0
   170d8:	stmib	sp, {ip, lr}
   170dc:	ldr	ip, [sp, #24]
   170e0:	str	ip, [sp]
   170e4:	bl	1a9c0 <argp_error@@Base+0xac0>
   170e8:	add	sp, sp, #20
   170ec:	pop	{pc}		; (ldr pc, [sp], #4)
   170f0:	mov	ip, #0
   170f4:	push	{r0, r1, r2, r3, r4, lr}
   170f8:	str	ip, [sp, #12]
   170fc:	ldr	ip, [sp, #28]
   17100:	str	ip, [sp, #8]
   17104:	mov	ip, #1
   17108:	str	ip, [sp, #4]
   1710c:	ldr	ip, [sp, #24]
   17110:	str	ip, [sp]
   17114:	bl	1a4cc <argp_error@@Base+0x5cc>
   17118:	add	sp, sp, #20
   1711c:	pop	{pc}		; (ldr pc, [sp], #4)
   17120:	push	{r1, r2, r3}
   17124:	push	{r0, r1, lr}
   17128:	add	r3, sp, #16
   1712c:	ldr	r1, [sp, #12]
   17130:	str	r3, [sp, #4]
   17134:	ldr	r2, [sp, #16]
   17138:	bl	114a0 <ioctl@plt>
   1713c:	add	sp, sp, #8
   17140:	pop	{lr}		; (ldr lr, [sp], #4)
   17144:	add	sp, sp, #12
   17148:	bx	lr
   1714c:	ldr	r3, [pc, #28]	; 17170 <argp_usage@@Base+0x2b0>
   17150:	push	{r4, lr}
   17154:	ldr	r2, [pc, #24]	; 17174 <argp_usage@@Base+0x2b4>
   17158:	ldr	r1, [pc, #24]	; 17178 <argp_usage@@Base+0x2b8>
   1715c:	ldr	r0, [r3]
   17160:	bl	11578 <fprintf@plt>
   17164:	ldr	r3, [pc, #16]	; 1717c <argp_usage@@Base+0x2bc>
   17168:	ldr	r0, [r3]
   1716c:	bl	11548 <exit@plt>
   17170:	andeq	pc, r2, r8, asr #22
   17174:	andeq	sp, r1, r4, asr #23
   17178:	andeq	sp, r1, r5, lsr #24
   1717c:	andeq	pc, r2, ip, lsr #22
   17180:	mov	r3, r0
   17184:	mov	r0, r1
   17188:	ldrb	ip, [r3, #40]	; 0x28
   1718c:	ldr	r2, [r3, #28]
   17190:	tst	ip, #1
   17194:	beq	171a0 <argp_usage@@Base+0x2e0>
   17198:	ldr	r0, [r3, #36]	; 0x24
   1719c:	bx	r2
   171a0:	bx	r2
   171a4:	mov	r3, r0
   171a8:	mov	r0, r1
   171ac:	ldrb	ip, [r3, #40]	; 0x28
   171b0:	ldr	r2, [r3, #32]
   171b4:	tst	ip, #1
   171b8:	beq	171c4 <argp_usage@@Base+0x304>
   171bc:	ldr	r0, [r3, #36]	; 0x24
   171c0:	bx	r2
   171c4:	bx	r2
   171c8:	push	{r4, r5, r6, lr}
   171cc:	subs	r5, r2, #0
   171d0:	movw	r3, #4072	; 0xfe8
   171d4:	moveq	r5, #8
   171d8:	cmp	r1, #0
   171dc:	moveq	r1, r3
   171e0:	sub	r6, r5, #1
   171e4:	mov	r4, r0
   171e8:	str	r1, [r0]
   171ec:	str	r6, [r0, #24]
   171f0:	bl	17180 <argp_usage@@Base+0x2c0>
   171f4:	cmp	r0, #0
   171f8:	str	r0, [r4, #4]
   171fc:	bne	1720c <argp_usage@@Base+0x34c>
   17200:	ldr	r3, [pc, #72]	; 17250 <argp_usage@@Base+0x390>
   17204:	ldr	r3, [r3]
   17208:	blx	r3
   1720c:	add	r3, r0, #8
   17210:	rsb	r2, r5, #0
   17214:	add	r3, r3, r6
   17218:	and	r2, r2, r3
   1721c:	ldr	r3, [r4]
   17220:	str	r2, [r4, #8]
   17224:	str	r2, [r4, #12]
   17228:	add	r3, r0, r3
   1722c:	str	r3, [r0]
   17230:	str	r3, [r4, #16]
   17234:	mov	r3, #0
   17238:	str	r3, [r0, #4]
   1723c:	mov	r0, #1
   17240:	ldrb	r3, [r4, #40]	; 0x28
   17244:	bic	r3, r3, #6
   17248:	strb	r3, [r4, #40]	; 0x28
   1724c:	pop	{r4, r5, r6, pc}
   17250:	andeq	pc, r2, r0, lsl #22

00017254 <_obstack_begin@@Base>:
   17254:	str	r3, [r0, #28]
   17258:	ldr	r3, [sp]
   1725c:	str	r3, [r0, #32]
   17260:	ldrb	r3, [r0, #40]	; 0x28
   17264:	bfc	r3, #0, #1
   17268:	strb	r3, [r0, #40]	; 0x28
   1726c:	b	171c8 <argp_usage@@Base+0x308>

00017270 <_obstack_begin_1@@Base>:
   17270:	str	r3, [r0, #28]
   17274:	ldr	r3, [sp]
   17278:	str	r3, [r0, #32]
   1727c:	ldr	r3, [sp, #4]
   17280:	str	r3, [r0, #36]	; 0x24
   17284:	ldrb	r3, [r0, #40]	; 0x28
   17288:	orr	r3, r3, #1
   1728c:	strb	r3, [r0, #40]	; 0x28
   17290:	b	171c8 <argp_usage@@Base+0x308>

00017294 <_obstack_newchunk@@Base>:
   17294:	push	{r4, r5, r6, r7, r8, lr}
   17298:	ldr	r7, [r0, #4]
   1729c:	ldr	r3, [r0, #8]
   172a0:	ldr	r5, [r0, #12]
   172a4:	sub	r6, r5, r3
   172a8:	ldr	r3, [r0, #24]
   172ac:	adds	r1, r6, r1
   172b0:	movcs	ip, #1
   172b4:	movcc	ip, #0
   172b8:	eor	ip, ip, #1
   172bc:	adds	r3, r3, r1
   172c0:	ldr	r1, [r0]
   172c4:	add	r5, r3, r6, lsr #3
   172c8:	movcs	r2, #1
   172cc:	movcc	r2, #0
   172d0:	add	r5, r5, #100	; 0x64
   172d4:	cmp	r3, r1
   172d8:	movcc	r3, r1
   172dc:	cmp	r3, r5
   172e0:	movcs	r5, r3
   172e4:	eor	r3, r2, #1
   172e8:	tst	ip, r3
   172ec:	bne	172fc <_obstack_newchunk@@Base+0x68>
   172f0:	ldr	r3, [pc, #164]	; 1739c <_obstack_newchunk@@Base+0x108>
   172f4:	ldr	r3, [r3]
   172f8:	blx	r3
   172fc:	mov	r1, r5
   17300:	mov	r4, r0
   17304:	bl	17180 <argp_usage@@Base+0x2c0>
   17308:	subs	r8, r0, #0
   1730c:	beq	172f0 <_obstack_newchunk@@Base+0x5c>
   17310:	add	r5, r8, r5
   17314:	mov	r3, r8
   17318:	str	r8, [r4, #4]
   1731c:	ldr	r1, [r4, #8]
   17320:	mov	r2, r6
   17324:	str	r7, [r8, #4]
   17328:	str	r5, [r4, #16]
   1732c:	str	r5, [r3], #8
   17330:	ldr	r5, [r4, #24]
   17334:	add	r3, r3, r5
   17338:	bic	r5, r3, r5
   1733c:	mov	r0, r5
   17340:	bl	11434 <memcpy@plt>
   17344:	ldrb	r3, [r4, #40]	; 0x28
   17348:	tst	r3, #2
   1734c:	bne	17380 <_obstack_newchunk@@Base+0xec>
   17350:	ldr	r2, [r4, #24]
   17354:	add	r3, r7, #8
   17358:	add	r3, r3, r2
   1735c:	bic	r3, r3, r2
   17360:	ldr	r2, [r4, #8]
   17364:	cmp	r2, r3
   17368:	bne	17380 <_obstack_newchunk@@Base+0xec>
   1736c:	ldr	r3, [r7, #4]
   17370:	mov	r1, r7
   17374:	mov	r0, r4
   17378:	str	r3, [r8, #4]
   1737c:	bl	171a4 <argp_usage@@Base+0x2e4>
   17380:	ldrb	r3, [r4, #40]	; 0x28
   17384:	str	r5, [r4, #8]
   17388:	add	r5, r5, r6
   1738c:	str	r5, [r4, #12]
   17390:	bfc	r3, #1, #1
   17394:	strb	r3, [r4, #40]	; 0x28
   17398:	pop	{r4, r5, r6, r7, r8, pc}
   1739c:	andeq	pc, r2, r0, lsl #22

000173a0 <_obstack_allocated_p@@Base>:
   173a0:	ldr	r0, [r0, #4]
   173a4:	cmp	r0, #0
   173a8:	beq	173c0 <_obstack_allocated_p@@Base+0x20>
   173ac:	cmp	r0, r1
   173b0:	bcs	173a0 <_obstack_allocated_p@@Base>
   173b4:	ldr	r3, [r0]
   173b8:	cmp	r3, r1
   173bc:	bcc	173a0 <_obstack_allocated_p@@Base>
   173c0:	adds	r0, r0, #0
   173c4:	movne	r0, #1
   173c8:	bx	lr

000173cc <_obstack_free@@Base>:
   173cc:	push	{r4, r5, r6, lr}
   173d0:	mov	r5, r1
   173d4:	mov	r4, r0
   173d8:	ldr	r1, [r0, #4]
   173dc:	cmp	r1, #0
   173e0:	beq	17428 <_obstack_free@@Base+0x5c>
   173e4:	cmp	r1, r5
   173e8:	bcs	17408 <_obstack_free@@Base+0x3c>
   173ec:	ldr	r3, [r1]
   173f0:	cmp	r3, r5
   173f4:	bcc	17408 <_obstack_free@@Base+0x3c>
   173f8:	stmib	r4, {r1, r5}
   173fc:	str	r5, [r4, #12]
   17400:	str	r3, [r4, #16]
   17404:	pop	{r4, r5, r6, pc}
   17408:	mov	r0, r4
   1740c:	ldr	r6, [r1, #4]
   17410:	bl	171a4 <argp_usage@@Base+0x2e4>
   17414:	ldrb	r3, [r4, #40]	; 0x28
   17418:	mov	r1, r6
   1741c:	orr	r3, r3, #2
   17420:	strb	r3, [r4, #40]	; 0x28
   17424:	b	173dc <_obstack_free@@Base+0x10>
   17428:	cmp	r5, #0
   1742c:	popeq	{r4, r5, r6, pc}
   17430:	bl	116ec <abort@plt>

00017434 <_obstack_memory_used@@Base>:
   17434:	ldr	r3, [r0, #4]
   17438:	mov	r0, #0
   1743c:	cmp	r3, #0
   17440:	bxeq	lr
   17444:	ldr	r2, [r3]
   17448:	sub	r2, r2, r3
   1744c:	ldr	r3, [r3, #4]
   17450:	add	r0, r0, r2
   17454:	b	1743c <_obstack_memory_used@@Base+0x8>
   17458:	push	{r4, r5, r6, lr}
   1745c:	subs	r4, r0, #0
   17460:	bne	17478 <_obstack_memory_used@@Base+0x44>
   17464:	ldr	r3, [pc, #124]	; 174e8 <_obstack_memory_used@@Base+0xb4>
   17468:	ldr	r0, [pc, #124]	; 174ec <_obstack_memory_used@@Base+0xb8>
   1746c:	ldr	r1, [r3]
   17470:	bl	116d4 <fputs@plt>
   17474:	bl	116ec <abort@plt>
   17478:	mov	r1, #47	; 0x2f
   1747c:	bl	11614 <strrchr@plt>
   17480:	subs	r6, r0, #0
   17484:	beq	174d4 <_obstack_memory_used@@Base+0xa0>
   17488:	add	r5, r6, #1
   1748c:	sub	r3, r5, r4
   17490:	cmp	r3, #6
   17494:	ble	174d4 <_obstack_memory_used@@Base+0xa0>
   17498:	mov	r2, #7
   1749c:	ldr	r1, [pc, #76]	; 174f0 <_obstack_memory_used@@Base+0xbc>
   174a0:	sub	r0, r6, #6
   174a4:	bl	116e0 <strncmp@plt>
   174a8:	cmp	r0, #0
   174ac:	bne	174d4 <_obstack_memory_used@@Base+0xa0>
   174b0:	mov	r2, #3
   174b4:	ldr	r1, [pc, #56]	; 174f4 <_obstack_memory_used@@Base+0xc0>
   174b8:	mov	r0, r5
   174bc:	bl	116e0 <strncmp@plt>
   174c0:	cmp	r0, #0
   174c4:	ldreq	r3, [pc, #44]	; 174f8 <_obstack_memory_used@@Base+0xc4>
   174c8:	addeq	r4, r6, #4
   174cc:	movne	r4, r5
   174d0:	streq	r4, [r3]
   174d4:	ldr	r3, [pc, #32]	; 174fc <_obstack_memory_used@@Base+0xc8>
   174d8:	str	r4, [r3]
   174dc:	ldr	r3, [pc, #28]	; 17500 <_obstack_memory_used@@Base+0xcc>
   174e0:	str	r4, [r3]
   174e4:	pop	{r4, r5, r6, pc}
   174e8:	andeq	pc, r2, r8, asr #22
   174ec:	ldrdeq	sp, [r1], -r5
   174f0:	andeq	sp, r1, sp, lsl #24
   174f4:	andeq	sp, r1, r5, lsl ip
   174f8:	andeq	pc, r2, r0, asr #22
   174fc:	andeq	pc, r2, r4, asr #23
   17500:	andeq	pc, r2, r4, asr #22
   17504:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17508:	sub	sp, sp, #116	; 0x74
   1750c:	mov	r8, r1
   17510:	mov	sl, r2
   17514:	mov	r9, r0
   17518:	bl	115d8 <fileno@plt>
   1751c:	add	r1, sp, #8
   17520:	bl	1b2c4 <argp_error@@Base+0x13c4>
   17524:	cmp	r0, #0
   17528:	bge	17554 <_obstack_memory_used@@Base+0x120>
   1752c:	mov	r5, #8192	; 0x2000
   17530:	mov	r0, r5
   17534:	bl	17eec <_obstack_memory_used@@Base+0xab8>
   17538:	subs	r4, r0, #0
   1753c:	movne	r6, #0
   17540:	andne	fp, r8, #2
   17544:	bne	17694 <_obstack_memory_used@@Base+0x260>
   17548:	mov	r0, r4
   1754c:	add	sp, sp, #116	; 0x74
   17550:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17554:	ldr	r3, [sp, #24]
   17558:	and	r3, r3, #61440	; 0xf000
   1755c:	cmp	r3, #32768	; 0x8000
   17560:	bne	1752c <_obstack_memory_used@@Base+0xf8>
   17564:	mov	r0, r9
   17568:	bl	1171c <ftello64@plt>
   1756c:	cmp	r0, #0
   17570:	sbcs	r3, r1, #0
   17574:	blt	1752c <_obstack_memory_used@@Base+0xf8>
   17578:	ldrd	r2, [sp, #56]	; 0x38
   1757c:	cmp	r0, r2
   17580:	sbcs	ip, r1, r3
   17584:	bge	1752c <_obstack_memory_used@@Base+0xf8>
   17588:	subs	r4, r2, r0
   1758c:	mvn	r2, #-2147483647	; 0x80000001
   17590:	sbc	r5, r3, r1
   17594:	mov	r3, #0
   17598:	cmp	r2, r4
   1759c:	sbcs	r3, r3, r5
   175a0:	addge	r5, r4, #1
   175a4:	bge	17530 <_obstack_memory_used@@Base+0xfc>
   175a8:	bl	11584 <__errno_location@plt>
   175ac:	mov	r3, #12
   175b0:	str	r3, [r0]
   175b4:	mov	r4, #0
   175b8:	b	17548 <_obstack_memory_used@@Base+0x114>
   175bc:	mov	r2, r6
   175c0:	mov	r1, r4
   175c4:	bl	11434 <memcpy@plt>
   175c8:	mov	r0, r4
   175cc:	mov	r1, r5
   175d0:	bl	1168c <explicit_bzero@plt>
   175d4:	mov	r0, r4
   175d8:	mov	r4, r7
   175dc:	bl	17030 <argp_usage@@Base+0x170>
   175e0:	b	17704 <_obstack_memory_used@@Base+0x2d0>
   175e4:	mov	r0, r4
   175e8:	bl	17f18 <_obstack_memory_used@@Base+0xae4>
   175ec:	cmp	r0, #0
   175f0:	movne	r4, r0
   175f4:	b	17704 <_obstack_memory_used@@Base+0x2d0>
   175f8:	cmn	r5, #-2147483647	; 0x80000001
   175fc:	beq	1772c <_obstack_memory_used@@Base+0x2f8>
   17600:	lsr	r7, r5, #1
   17604:	mvn	r3, #-2147483648	; 0x80000000
   17608:	sub	r3, r3, r7
   1760c:	cmp	r3, r5
   17610:	addhi	r7, r7, r5
   17614:	mvnls	r7, #-2147483648	; 0x80000000
   17618:	cmp	fp, #0
   1761c:	beq	17714 <_obstack_memory_used@@Base+0x2e0>
   17620:	mov	r0, r7
   17624:	bl	17eec <_obstack_memory_used@@Base+0xab8>
   17628:	subs	r3, r0, #0
   1762c:	bne	17664 <_obstack_memory_used@@Base+0x230>
   17630:	bl	11584 <__errno_location@plt>
   17634:	ldr	fp, [r0]
   17638:	mov	r5, r7
   1763c:	tst	r8, #2
   17640:	beq	17650 <_obstack_memory_used@@Base+0x21c>
   17644:	mov	r1, r5
   17648:	mov	r0, r4
   1764c:	bl	1168c <explicit_bzero@plt>
   17650:	mov	r0, r4
   17654:	bl	17030 <argp_usage@@Base+0x170>
   17658:	bl	11584 <__errno_location@plt>
   1765c:	str	fp, [r0]
   17660:	b	175b4 <_obstack_memory_used@@Base+0x180>
   17664:	mov	r2, r5
   17668:	mov	r1, r4
   1766c:	str	r3, [sp, #4]
   17670:	bl	11434 <memcpy@plt>
   17674:	mov	r1, r5
   17678:	mov	r0, r4
   1767c:	bl	1168c <explicit_bzero@plt>
   17680:	mov	r0, r4
   17684:	bl	17030 <argp_usage@@Base+0x170>
   17688:	ldr	r3, [sp, #4]
   1768c:	mov	r5, r7
   17690:	mov	r4, r3
   17694:	sub	r7, r5, r6
   17698:	add	r0, r4, r6
   1769c:	mov	r3, r9
   176a0:	mov	r2, r7
   176a4:	mov	r1, #1
   176a8:	bl	114b8 <fread@plt>
   176ac:	cmp	r7, r0
   176b0:	add	r6, r6, r0
   176b4:	beq	175f8 <_obstack_memory_used@@Base+0x1c4>
   176b8:	bl	11584 <__errno_location@plt>
   176bc:	ldr	fp, [r0]
   176c0:	mov	r0, r9
   176c4:	bl	1141c <ferror@plt>
   176c8:	cmp	r0, #0
   176cc:	bne	1763c <_obstack_memory_used@@Base+0x208>
   176d0:	sub	r3, r5, #1
   176d4:	cmp	r3, r6
   176d8:	bls	17704 <_obstack_memory_used@@Base+0x2d0>
   176dc:	tst	r8, #2
   176e0:	add	r1, r6, #1
   176e4:	beq	175e4 <_obstack_memory_used@@Base+0x1b0>
   176e8:	mov	r0, r1
   176ec:	bl	17eec <_obstack_memory_used@@Base+0xab8>
   176f0:	subs	r7, r0, #0
   176f4:	bne	175bc <_obstack_memory_used@@Base+0x188>
   176f8:	sub	r1, r5, r6
   176fc:	add	r0, r4, r6
   17700:	bl	1168c <explicit_bzero@plt>
   17704:	mov	r3, #0
   17708:	strb	r3, [r4, r6]
   1770c:	str	r6, [sl]
   17710:	b	17548 <_obstack_memory_used@@Base+0x114>
   17714:	mov	r1, r7
   17718:	mov	r0, r4
   1771c:	bl	17f18 <_obstack_memory_used@@Base+0xae4>
   17720:	subs	r3, r0, #0
   17724:	bne	1768c <_obstack_memory_used@@Base+0x258>
   17728:	b	17630 <_obstack_memory_used@@Base+0x1fc>
   1772c:	mov	fp, #12
   17730:	b	1763c <_obstack_memory_used@@Base+0x208>
   17734:	ldr	r3, [pc, #144]	; 177cc <_obstack_memory_used@@Base+0x398>
   17738:	tst	r1, #1
   1773c:	push	{r4, r5, r6, r7, r8, lr}
   17740:	mov	r4, r1
   17744:	mov	r5, r2
   17748:	ldr	r1, [pc, #128]	; 177d0 <_obstack_memory_used@@Base+0x39c>
   1774c:	moveq	r1, r3
   17750:	bl	11674 <fopen64@plt>
   17754:	subs	r6, r0, #0
   17758:	bne	17768 <_obstack_memory_used@@Base+0x334>
   1775c:	mov	r4, #0
   17760:	mov	r0, r4
   17764:	pop	{r4, r5, r6, r7, r8, pc}
   17768:	ands	r7, r4, #2
   1776c:	beq	17780 <_obstack_memory_used@@Base+0x34c>
   17770:	mov	r3, #0
   17774:	mov	r2, #2
   17778:	mov	r1, r3
   1777c:	bl	115a8 <setvbuf@plt>
   17780:	mov	r1, r4
   17784:	mov	r2, r5
   17788:	mov	r0, r6
   1778c:	bl	17504 <_obstack_memory_used@@Base+0xd0>
   17790:	mov	r4, r0
   17794:	mov	r0, r6
   17798:	bl	115f0 <fclose@plt>
   1779c:	cmp	r0, #0
   177a0:	beq	17760 <_obstack_memory_used@@Base+0x32c>
   177a4:	cmp	r4, #0
   177a8:	beq	1775c <_obstack_memory_used@@Base+0x328>
   177ac:	cmp	r7, #0
   177b0:	beq	177c0 <_obstack_memory_used@@Base+0x38c>
   177b4:	mov	r0, r4
   177b8:	ldr	r1, [r5]
   177bc:	bl	1168c <explicit_bzero@plt>
   177c0:	mov	r0, r4
   177c4:	bl	17030 <argp_usage@@Base+0x170>
   177c8:	b	1775c <_obstack_memory_used@@Base+0x328>
   177cc:	andeq	sp, r1, r0, lsl r8
   177d0:	andeq	sp, r1, r9, lsl ip
   177d4:	push	{r4, r5, r6, lr}
   177d8:	cmp	r1, #0
   177dc:	sub	sp, sp, #32
   177e0:	mov	r5, r0
   177e4:	ldr	r4, [sp, #48]	; 0x30
   177e8:	ldr	r6, [sp, #52]	; 0x34
   177ec:	beq	17878 <_obstack_memory_used@@Base+0x444>
   177f0:	mov	lr, r3
   177f4:	mov	r3, r2
   177f8:	mov	r2, r1
   177fc:	ldr	r1, [pc, #620]	; 17a70 <_obstack_memory_used@@Base+0x63c>
   17800:	str	lr, [sp]
   17804:	bl	11578 <fprintf@plt>
   17808:	movw	r3, #2022	; 0x7e6
   1780c:	ldr	r2, [pc, #608]	; 17a74 <_obstack_memory_used@@Base+0x640>
   17810:	mov	r0, r5
   17814:	ldr	r1, [pc, #604]	; 17a78 <_obstack_memory_used@@Base+0x644>
   17818:	bl	11578 <fprintf@plt>
   1781c:	mov	r1, r5
   17820:	mov	r0, #10
   17824:	bl	1162c <fputc@plt>
   17828:	ldr	r1, [pc, #588]	; 17a7c <_obstack_memory_used@@Base+0x648>
   1782c:	mov	r0, r5
   17830:	ldr	r2, [pc, #584]	; 17a80 <_obstack_memory_used@@Base+0x64c>
   17834:	bl	11578 <fprintf@plt>
   17838:	mov	r1, r5
   1783c:	mov	r0, #10
   17840:	bl	1162c <fputc@plt>
   17844:	cmp	r6, #9
   17848:	ldrls	pc, [pc, r6, lsl #2]
   1784c:	b	17a2c <_obstack_memory_used@@Base+0x5f8>
   17850:	andeq	r7, r1, r4, lsr #18
   17854:	andeq	r7, r1, r4, lsl #17
   17858:	muleq	r1, ip, r8
   1785c:			; <UNDEFINED> instruction: 0x000178b4
   17860:	ldrdeq	r7, [r1], -r4
   17864:	strdeq	r7, [r1], -ip
   17868:	andeq	r7, r1, ip, lsr #18
   1786c:	andeq	r7, r1, r0, ror #18
   17870:	muleq	r1, ip, r9
   17874:	andeq	r7, r1, r0, ror #19
   17878:	ldr	r1, [pc, #516]	; 17a84 <_obstack_memory_used@@Base+0x650>
   1787c:	bl	11578 <fprintf@plt>
   17880:	b	17808 <_obstack_memory_used@@Base+0x3d4>
   17884:	ldr	r1, [pc, #508]	; 17a88 <_obstack_memory_used@@Base+0x654>
   17888:	mov	r0, r5
   1788c:	ldr	r2, [r4]
   17890:	add	sp, sp, #32
   17894:	pop	{r4, r5, r6, lr}
   17898:	b	11578 <fprintf@plt>
   1789c:	ldr	r1, [pc, #488]	; 17a8c <_obstack_memory_used@@Base+0x658>
   178a0:	mov	r0, r5
   178a4:	ldrd	r2, [r4]
   178a8:	add	sp, sp, #32
   178ac:	pop	{r4, r5, r6, lr}
   178b0:	b	11578 <fprintf@plt>
   178b4:	ldr	r3, [r4, #8]
   178b8:	mov	r0, r5
   178bc:	ldr	r1, [pc, #460]	; 17a90 <_obstack_memory_used@@Base+0x65c>
   178c0:	str	r3, [sp, #48]	; 0x30
   178c4:	ldrd	r2, [r4]
   178c8:	add	sp, sp, #32
   178cc:	pop	{r4, r5, r6, lr}
   178d0:	b	11578 <fprintf@plt>
   178d4:	ldr	r3, [r4, #12]
   178d8:	mov	r0, r5
   178dc:	ldr	r1, [pc, #432]	; 17a94 <_obstack_memory_used@@Base+0x660>
   178e0:	str	r3, [sp, #52]	; 0x34
   178e4:	ldr	r3, [r4, #8]
   178e8:	str	r3, [sp, #48]	; 0x30
   178ec:	ldrd	r2, [r4]
   178f0:	add	sp, sp, #32
   178f4:	pop	{r4, r5, r6, lr}
   178f8:	b	11578 <fprintf@plt>
   178fc:	ldr	r3, [r4, #16]
   17900:	mov	r0, r5
   17904:	ldr	r1, [pc, #396]	; 17a98 <_obstack_memory_used@@Base+0x664>
   17908:	str	r3, [sp, #8]
   1790c:	ldr	r3, [r4, #12]
   17910:	str	r3, [sp, #4]
   17914:	ldr	r3, [r4, #8]
   17918:	str	r3, [sp]
   1791c:	ldrd	r2, [r4]
   17920:	bl	11578 <fprintf@plt>
   17924:	add	sp, sp, #32
   17928:	pop	{r4, r5, r6, pc}
   1792c:	ldr	r3, [r4, #20]
   17930:	mov	r0, r5
   17934:	ldr	r1, [pc, #352]	; 17a9c <_obstack_memory_used@@Base+0x668>
   17938:	str	r3, [sp, #12]
   1793c:	ldr	r3, [r4, #16]
   17940:	str	r3, [sp, #8]
   17944:	ldr	r3, [r4, #12]
   17948:	str	r3, [sp, #4]
   1794c:	ldr	r3, [r4, #8]
   17950:	str	r3, [sp]
   17954:	ldrd	r2, [r4]
   17958:	bl	11578 <fprintf@plt>
   1795c:	b	17924 <_obstack_memory_used@@Base+0x4f0>
   17960:	ldr	r3, [r4, #24]
   17964:	mov	r0, r5
   17968:	ldr	r1, [pc, #304]	; 17aa0 <_obstack_memory_used@@Base+0x66c>
   1796c:	str	r3, [sp, #16]
   17970:	ldr	r3, [r4, #20]
   17974:	str	r3, [sp, #12]
   17978:	ldr	r3, [r4, #16]
   1797c:	str	r3, [sp, #8]
   17980:	ldr	r3, [r4, #12]
   17984:	str	r3, [sp, #4]
   17988:	ldr	r3, [r4, #8]
   1798c:	str	r3, [sp]
   17990:	ldrd	r2, [r4]
   17994:	bl	11578 <fprintf@plt>
   17998:	b	17924 <_obstack_memory_used@@Base+0x4f0>
   1799c:	ldr	r3, [r4, #28]
   179a0:	mov	r0, r5
   179a4:	ldr	r1, [pc, #248]	; 17aa4 <_obstack_memory_used@@Base+0x670>
   179a8:	str	r3, [sp, #20]
   179ac:	ldr	r3, [r4, #24]
   179b0:	str	r3, [sp, #16]
   179b4:	ldr	r3, [r4, #20]
   179b8:	str	r3, [sp, #12]
   179bc:	ldr	r3, [r4, #16]
   179c0:	str	r3, [sp, #8]
   179c4:	ldr	r3, [r4, #12]
   179c8:	str	r3, [sp, #4]
   179cc:	ldr	r3, [r4, #8]
   179d0:	str	r3, [sp]
   179d4:	ldrd	r2, [r4]
   179d8:	bl	11578 <fprintf@plt>
   179dc:	b	17924 <_obstack_memory_used@@Base+0x4f0>
   179e0:	ldr	r3, [r4, #32]
   179e4:	ldr	r1, [pc, #188]	; 17aa8 <_obstack_memory_used@@Base+0x674>
   179e8:	str	r3, [sp, #24]
   179ec:	ldr	r3, [r4, #28]
   179f0:	str	r3, [sp, #20]
   179f4:	ldr	r3, [r4, #24]
   179f8:	str	r3, [sp, #16]
   179fc:	ldr	r3, [r4, #20]
   17a00:	str	r3, [sp, #12]
   17a04:	ldr	r3, [r4, #16]
   17a08:	str	r3, [sp, #8]
   17a0c:	ldr	r3, [r4, #12]
   17a10:	str	r3, [sp, #4]
   17a14:	ldr	r3, [r4, #8]
   17a18:	str	r3, [sp]
   17a1c:	ldrd	r2, [r4]
   17a20:	mov	r0, r5
   17a24:	bl	11578 <fprintf@plt>
   17a28:	b	17924 <_obstack_memory_used@@Base+0x4f0>
   17a2c:	ldr	r3, [r4, #32]
   17a30:	ldr	r1, [pc, #116]	; 17aac <_obstack_memory_used@@Base+0x678>
   17a34:	str	r3, [sp, #24]
   17a38:	ldr	r3, [r4, #28]
   17a3c:	str	r3, [sp, #20]
   17a40:	ldr	r3, [r4, #24]
   17a44:	str	r3, [sp, #16]
   17a48:	ldr	r3, [r4, #20]
   17a4c:	str	r3, [sp, #12]
   17a50:	ldr	r3, [r4, #16]
   17a54:	str	r3, [sp, #8]
   17a58:	ldr	r3, [r4, #12]
   17a5c:	str	r3, [sp, #4]
   17a60:	ldr	r3, [r4, #8]
   17a64:	str	r3, [sp]
   17a68:	ldrd	r2, [r4]
   17a6c:	b	17a20 <_obstack_memory_used@@Base+0x5ec>
   17a70:	andeq	sp, r1, sp, lsl ip
   17a74:	andeq	sp, r1, r0, lsr ip
   17a78:	andeq	sp, r1, r5, lsr #30
   17a7c:	andeq	sp, r1, r6, asr ip
   17a80:	andeq	sp, r1, r4, lsr ip
   17a84:	andeq	sp, r1, r9, lsr #24
   17a88:	andeq	sp, r1, r1, lsl #26
   17a8c:	andeq	sp, r1, r1, lsl sp
   17a90:	andeq	sp, r1, r8, lsr #26
   17a94:	andeq	sp, r1, r4, asr #26
   17a98:	andeq	sp, r1, r4, ror #26
   17a9c:	andeq	sp, r1, r8, lsl #27
   17aa0:			; <UNDEFINED> instruction: 0x0001ddb0
   17aa4:	ldrdeq	sp, [r1], -ip
   17aa8:	andeq	sp, r1, ip, lsl #28
   17aac:	andeq	sp, r1, r0, asr #28
   17ab0:	push	{r0, r1, r4, lr}
   17ab4:	mov	ip, #0
   17ab8:	ldr	lr, [sp, #16]
   17abc:	ldr	r4, [lr, ip, lsl #2]
   17ac0:	cmp	r4, #0
   17ac4:	bne	17adc <_obstack_memory_used@@Base+0x6a8>
   17ac8:	str	lr, [sp]
   17acc:	str	ip, [sp, #4]
   17ad0:	bl	177d4 <_obstack_memory_used@@Base+0x3a0>
   17ad4:	add	sp, sp, #8
   17ad8:	pop	{r4, pc}
   17adc:	add	ip, ip, #1
   17ae0:	b	17abc <_obstack_memory_used@@Base+0x688>
   17ae4:	push	{r4, r5, r6, lr}
   17ae8:	sub	sp, sp, #48	; 0x30
   17aec:	mov	ip, #0
   17af0:	add	lr, sp, #8
   17af4:	mov	r5, lr
   17af8:	ldr	r6, [sp, #64]	; 0x40
   17afc:	ldr	r4, [r6, ip, lsl #2]
   17b00:	cmp	r4, #0
   17b04:	str	r4, [lr], #4
   17b08:	beq	17b18 <_obstack_memory_used@@Base+0x6e4>
   17b0c:	add	ip, ip, #1
   17b10:	cmp	ip, #10
   17b14:	bne	17afc <_obstack_memory_used@@Base+0x6c8>
   17b18:	stm	sp, {r5, ip}
   17b1c:	bl	177d4 <_obstack_memory_used@@Base+0x3a0>
   17b20:	add	sp, sp, #48	; 0x30
   17b24:	pop	{r4, r5, r6, pc}
   17b28:	push	{r3}		; (str r3, [sp, #-4]!)
   17b2c:	push	{r0, r1, r2, r3, lr}
   17b30:	add	r3, sp, #24
   17b34:	str	r3, [sp]
   17b38:	str	r3, [sp, #12]
   17b3c:	ldr	r3, [sp, #20]
   17b40:	bl	17ae4 <_obstack_memory_used@@Base+0x6b0>
   17b44:	add	sp, sp, #16
   17b48:	pop	{lr}		; (ldr lr, [sp], #4)
   17b4c:	add	sp, sp, #4
   17b50:	bx	lr
   17b54:	ldr	r3, [pc, #56]	; 17b94 <_obstack_memory_used@@Base+0x760>
   17b58:	mov	r0, #10
   17b5c:	push	{r4, lr}
   17b60:	ldr	r1, [r3]
   17b64:	bl	1162c <fputc@plt>
   17b68:	ldr	r1, [pc, #40]	; 17b98 <_obstack_memory_used@@Base+0x764>
   17b6c:	ldr	r0, [pc, #40]	; 17b9c <_obstack_memory_used@@Base+0x768>
   17b70:	bl	113e0 <printf@plt>
   17b74:	ldr	r1, [pc, #36]	; 17ba0 <_obstack_memory_used@@Base+0x76c>
   17b78:	ldr	r2, [pc, #36]	; 17ba4 <_obstack_memory_used@@Base+0x770>
   17b7c:	ldr	r0, [pc, #36]	; 17ba8 <_obstack_memory_used@@Base+0x774>
   17b80:	bl	113e0 <printf@plt>
   17b84:	ldr	r1, [pc, #32]	; 17bac <_obstack_memory_used@@Base+0x778>
   17b88:	pop	{r4, lr}
   17b8c:	ldr	r0, [pc, #28]	; 17bb0 <_obstack_memory_used@@Base+0x77c>
   17b90:	b	113e0 <printf@plt>
   17b94:	andeq	pc, r2, ip, asr #22
   17b98:	andeq	sp, r1, ip, ror lr
   17b9c:	muleq	r1, r2, lr
   17ba0:			; <UNDEFINED> instruction: 0x0001dbb6
   17ba4:	andeq	sp, r1, r6, lsr #29
   17ba8:	andeq	sp, r1, sp, asr #29
   17bac:	andeq	sp, r1, r1, ror #29
   17bb0:	strdeq	sp, [r1], -lr
   17bb4:	push	{r4, lr}
   17bb8:	bl	17eec <_obstack_memory_used@@Base+0xab8>
   17bbc:	cmp	r0, #0
   17bc0:	popne	{r4, pc}
   17bc4:	bl	17e6c <_obstack_memory_used@@Base+0xa38>
   17bc8:	push	{r4, lr}
   17bcc:	bl	17eec <_obstack_memory_used@@Base+0xab8>
   17bd0:	cmp	r0, #0
   17bd4:	popne	{r4, pc}
   17bd8:	bl	17e6c <_obstack_memory_used@@Base+0xa38>
   17bdc:	b	17bb4 <_obstack_memory_used@@Base+0x780>
   17be0:	push	{r4, r5, r6, lr}
   17be4:	mov	r5, r0
   17be8:	mov	r4, r1
   17bec:	bl	17f18 <_obstack_memory_used@@Base+0xae4>
   17bf0:	cmp	r0, #0
   17bf4:	popne	{r4, r5, r6, pc}
   17bf8:	adds	r4, r4, #0
   17bfc:	movne	r4, #1
   17c00:	cmp	r5, #0
   17c04:	moveq	r4, #1
   17c08:	cmp	r4, #0
   17c0c:	popeq	{r4, r5, r6, pc}
   17c10:	bl	17e6c <_obstack_memory_used@@Base+0xa38>
   17c14:	push	{r4, lr}
   17c18:	bl	1aa58 <argp_error@@Base+0xb58>
   17c1c:	cmp	r0, #0
   17c20:	popne	{r4, pc}
   17c24:	bl	17e6c <_obstack_memory_used@@Base+0xa38>
   17c28:	push	{r4, r5, r6, lr}
   17c2c:	mov	r6, r0
   17c30:	mov	r5, r1
   17c34:	mov	r4, r2
   17c38:	bl	1aa7c <argp_error@@Base+0xb7c>
   17c3c:	cmp	r0, #0
   17c40:	popne	{r4, r5, r6, pc}
   17c44:	cmp	r6, #0
   17c48:	beq	17c58 <_obstack_memory_used@@Base+0x824>
   17c4c:	cmp	r5, #0
   17c50:	cmpne	r4, #0
   17c54:	popeq	{r4, r5, r6, pc}
   17c58:	bl	17e6c <_obstack_memory_used@@Base+0xa38>
   17c5c:	b	17c28 <_obstack_memory_used@@Base+0x7f4>
   17c60:	push	{r4, lr}
   17c64:	bl	1aa68 <argp_error@@Base+0xb68>
   17c68:	cmp	r0, #0
   17c6c:	popne	{r4, pc}
   17c70:	bl	17e6c <_obstack_memory_used@@Base+0xa38>
   17c74:	mov	r2, r1
   17c78:	mov	r1, r0
   17c7c:	mov	r0, #0
   17c80:	b	17c28 <_obstack_memory_used@@Base+0x7f4>
   17c84:	mov	r2, r1
   17c88:	mov	r1, r0
   17c8c:	mov	r0, #0
   17c90:	b	17c60 <_obstack_memory_used@@Base+0x82c>
   17c94:	cmp	r0, #0
   17c98:	push	{r4, r5, r6, lr}
   17c9c:	mov	r5, r1
   17ca0:	ldr	r4, [r1]
   17ca4:	bne	17cd0 <_obstack_memory_used@@Base+0x89c>
   17ca8:	cmp	r4, #0
   17cac:	bne	17cc0 <_obstack_memory_used@@Base+0x88c>
   17cb0:	mov	r4, #64	; 0x40
   17cb4:	udiv	r4, r4, r2
   17cb8:	cmp	r2, #64	; 0x40
   17cbc:	addhi	r4, r4, #1
   17cc0:	mov	r1, r4
   17cc4:	bl	17c28 <_obstack_memory_used@@Base+0x7f4>
   17cc8:	str	r4, [r5]
   17ccc:	pop	{r4, r5, r6, pc}
   17cd0:	lsr	r3, r4, #1
   17cd4:	add	r3, r3, #1
   17cd8:	adds	r4, r4, r3
   17cdc:	bcc	17cc0 <_obstack_memory_used@@Base+0x88c>
   17ce0:	bl	17e6c <_obstack_memory_used@@Base+0xa38>
   17ce4:	mov	r2, #1
   17ce8:	b	17c94 <_obstack_memory_used@@Base+0x860>
   17cec:	ldr	ip, [r1]
   17cf0:	push	{r4, r5, r6, r7, r8, lr}
   17cf4:	mov	r5, r1
   17cf8:	mvn	r8, r3
   17cfc:	lsr	r8, r8, #31
   17d00:	ldr	lr, [sp, #24]
   17d04:	asr	r1, ip, #1
   17d08:	adds	r4, ip, r1
   17d0c:	mvnvs	r4, #-2147483648	; 0x80000000
   17d10:	cmp	r3, r4
   17d14:	movge	r1, #0
   17d18:	andlt	r1, r8, #1
   17d1c:	cmp	r1, #0
   17d20:	movne	r4, r3
   17d24:	smull	r6, r7, r4, lr
   17d28:	cmp	r7, r6, asr #31
   17d2c:	bne	17d44 <_obstack_memory_used@@Base+0x910>
   17d30:	cmp	r6, #63	; 0x3f
   17d34:	mov	r1, r6
   17d38:	bgt	17d54 <_obstack_memory_used@@Base+0x920>
   17d3c:	mov	r1, #64	; 0x40
   17d40:	b	17d48 <_obstack_memory_used@@Base+0x914>
   17d44:	mvn	r1, #-2147483648	; 0x80000000
   17d48:	sdiv	r4, r1, lr
   17d4c:	mls	r6, lr, r4, r1
   17d50:	sub	r1, r1, r6
   17d54:	cmp	r0, #0
   17d58:	sub	r6, r4, ip
   17d5c:	streq	r0, [r5]
   17d60:	cmp	r6, r2
   17d64:	bge	17d98 <_obstack_memory_used@@Base+0x964>
   17d68:	adds	r4, ip, r2
   17d6c:	bvs	17d94 <_obstack_memory_used@@Base+0x960>
   17d70:	cmp	r4, r3
   17d74:	movle	r3, #0
   17d78:	andgt	r3, r8, #1
   17d7c:	cmp	r3, #0
   17d80:	bne	17d94 <_obstack_memory_used@@Base+0x960>
   17d84:	smull	r2, r3, r4, lr
   17d88:	cmp	r3, r2, asr #31
   17d8c:	mov	r1, r2
   17d90:	beq	17d98 <_obstack_memory_used@@Base+0x964>
   17d94:	bl	17e6c <_obstack_memory_used@@Base+0xa38>
   17d98:	bl	17be0 <_obstack_memory_used@@Base+0x7ac>
   17d9c:	str	r4, [r5]
   17da0:	pop	{r4, r5, r6, r7, r8, pc}
   17da4:	push	{r4, lr}
   17da8:	bl	17e98 <_obstack_memory_used@@Base+0xa64>
   17dac:	cmp	r0, #0
   17db0:	popne	{r4, pc}
   17db4:	bl	17e6c <_obstack_memory_used@@Base+0xa38>
   17db8:	mov	r1, #1
   17dbc:	b	17da4 <_obstack_memory_used@@Base+0x970>
   17dc0:	push	{r4, lr}
   17dc4:	bl	17e98 <_obstack_memory_used@@Base+0xa64>
   17dc8:	cmp	r0, #0
   17dcc:	popne	{r4, pc}
   17dd0:	bl	17e6c <_obstack_memory_used@@Base+0xa38>
   17dd4:	mov	r1, #1
   17dd8:	b	17dc0 <_obstack_memory_used@@Base+0x98c>
   17ddc:	push	{r4, r5, r6, lr}
   17de0:	mov	r4, r1
   17de4:	mov	r5, r0
   17de8:	mov	r0, r1
   17dec:	bl	17bb4 <_obstack_memory_used@@Base+0x780>
   17df0:	mov	r2, r4
   17df4:	mov	r1, r5
   17df8:	pop	{r4, r5, r6, lr}
   17dfc:	b	11434 <memcpy@plt>
   17e00:	push	{r4, r5, r6, lr}
   17e04:	mov	r4, r1
   17e08:	mov	r5, r0
   17e0c:	mov	r0, r1
   17e10:	bl	17bc8 <_obstack_memory_used@@Base+0x794>
   17e14:	mov	r2, r4
   17e18:	mov	r1, r5
   17e1c:	pop	{r4, r5, r6, lr}
   17e20:	b	11434 <memcpy@plt>
   17e24:	push	{r4, r5, r6, lr}
   17e28:	mov	r5, r0
   17e2c:	add	r0, r1, #1
   17e30:	mov	r4, r1
   17e34:	bl	17bc8 <_obstack_memory_used@@Base+0x794>
   17e38:	mov	r2, #0
   17e3c:	mov	r1, r5
   17e40:	strb	r2, [r0, r4]
   17e44:	mov	r2, r4
   17e48:	pop	{r4, r5, r6, lr}
   17e4c:	b	11434 <memcpy@plt>
   17e50:	push	{r4, lr}
   17e54:	mov	r4, r0
   17e58:	bl	11560 <strlen@plt>
   17e5c:	add	r1, r0, #1
   17e60:	mov	r0, r4
   17e64:	pop	{r4, lr}
   17e68:	b	17ddc <_obstack_memory_used@@Base+0x9a8>
   17e6c:	ldr	r3, [pc, #24]	; 17e8c <_obstack_memory_used@@Base+0xa58>
   17e70:	mov	r1, #0
   17e74:	push	{r4, lr}
   17e78:	ldr	r2, [pc, #16]	; 17e90 <_obstack_memory_used@@Base+0xa5c>
   17e7c:	ldr	r0, [r3]
   17e80:	ldr	r3, [pc, #12]	; 17e94 <_obstack_memory_used@@Base+0xa60>
   17e84:	bl	114c4 <error@plt>
   17e88:	bl	116ec <abort@plt>
   17e8c:	andeq	pc, r2, ip, lsr #22
   17e90:			; <UNDEFINED> instruction: 0x0001b3b0
   17e94:	andeq	sp, r1, r4, asr #23
   17e98:	cmp	r1, #0
   17e9c:	cmpne	r0, #0
   17ea0:	beq	17ed8 <_obstack_memory_used@@Base+0xaa4>
   17ea4:	push	{r4, r5, r6, lr}
   17ea8:	umull	r4, r5, r0, r1
   17eac:	adds	r3, r5, #0
   17eb0:	movne	r3, #1
   17eb4:	cmp	r4, #0
   17eb8:	blt	17ec4 <_obstack_memory_used@@Base+0xa90>
   17ebc:	cmp	r3, #0
   17ec0:	beq	17ee4 <_obstack_memory_used@@Base+0xab0>
   17ec4:	bl	11584 <__errno_location@plt>
   17ec8:	mov	r3, #12
   17ecc:	str	r3, [r0]
   17ed0:	mov	r0, #0
   17ed4:	pop	{r4, r5, r6, pc}
   17ed8:	mov	r1, #1
   17edc:	mov	r0, r1
   17ee0:	b	1138c <calloc@plt>
   17ee4:	pop	{r4, r5, r6, lr}
   17ee8:	b	17ee0 <_obstack_memory_used@@Base+0xaac>
   17eec:	cmp	r0, #0
   17ef0:	beq	17f10 <_obstack_memory_used@@Base+0xadc>
   17ef4:	bge	17f14 <_obstack_memory_used@@Base+0xae0>
   17ef8:	push	{r4, lr}
   17efc:	bl	11584 <__errno_location@plt>
   17f00:	mov	r3, #12
   17f04:	str	r3, [r0]
   17f08:	mov	r0, #0
   17f0c:	pop	{r4, pc}
   17f10:	mov	r0, #1
   17f14:	b	114e8 <malloc@plt>
   17f18:	cmp	r0, #0
   17f1c:	bne	17f28 <_obstack_memory_used@@Base+0xaf4>
   17f20:	mov	r0, r1
   17f24:	b	17eec <_obstack_memory_used@@Base+0xab8>
   17f28:	cmp	r1, #0
   17f2c:	push	{r4, lr}
   17f30:	bne	17f40 <_obstack_memory_used@@Base+0xb0c>
   17f34:	bl	17030 <argp_usage@@Base+0x170>
   17f38:	mov	r0, #0
   17f3c:	pop	{r4, pc}
   17f40:	blt	17f4c <_obstack_memory_used@@Base+0xb18>
   17f44:	pop	{r4, lr}
   17f48:	b	11470 <realloc@plt>
   17f4c:	bl	11584 <__errno_location@plt>
   17f50:	mov	r3, #12
   17f54:	str	r3, [r0]
   17f58:	b	17f38 <_obstack_memory_used@@Base+0xb04>
   17f5c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   17f60:	mov	r8, r1
   17f64:	mov	r9, r2
   17f68:	mov	sl, r3
   17f6c:	ldm	r0, {r5, r6, r7}
   17f70:	mov	r0, #0
   17f74:	mov	r4, r5
   17f78:	clz	r3, r0
   17f7c:	cmp	r6, #0
   17f80:	lsr	r3, r3, #5
   17f84:	moveq	r3, #0
   17f88:	cmp	r3, #0
   17f8c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   17f90:	mov	r0, r4
   17f94:	bl	16ed4 <argp_usage@@Base+0x14>
   17f98:	cmp	r0, #0
   17f9c:	beq	17fe4 <_obstack_memory_used@@Base+0xbb0>
   17fa0:	ldrb	r2, [r7]
   17fa4:	ldr	r3, [r4, #4]
   17fa8:	cmp	r2, r3
   17fac:	movne	r0, #0
   17fb0:	bne	17fe4 <_obstack_memory_used@@Base+0xbb0>
   17fb4:	ldr	r3, [r4, #12]
   17fb8:	tst	r3, #4
   17fbc:	moveq	r5, r4
   17fc0:	tst	r3, #2
   17fc4:	movne	r0, #0
   17fc8:	bne	17fe0 <_obstack_memory_used@@Base+0xbac>
   17fcc:	mov	r3, sl
   17fd0:	mov	r2, r9
   17fd4:	mov	r1, r5
   17fd8:	mov	r0, r4
   17fdc:	blx	r8
   17fe0:	add	r7, r7, #1
   17fe4:	add	r4, r4, #24
   17fe8:	sub	r6, r6, #1
   17fec:	b	17f78 <_obstack_memory_used@@Base+0xb44>
   17ff0:	push	{r4, lr}
   17ff4:	mov	r4, r0
   17ff8:	bl	16ed4 <argp_usage@@Base+0x14>
   17ffc:	cmp	r0, #0
   18000:	ldrne	r0, [r4, #4]
   18004:	pop	{r4, pc}
   18008:	ldr	r3, [r0]
   1800c:	ldr	r2, [r0, #4]
   18010:	cmp	r2, #0
   18014:	add	r3, r3, #24
   18018:	bne	18024 <_obstack_memory_used@@Base+0xbf0>
   1801c:	mov	r0, r2
   18020:	bx	lr
   18024:	ldr	r0, [r3, #-24]	; 0xffffffe8
   18028:	cmp	r0, #0
   1802c:	beq	1803c <_obstack_memory_used@@Base+0xc08>
   18030:	ldr	r1, [r3, #-12]
   18034:	tst	r1, #2
   18038:	bxeq	lr
   1803c:	sub	r2, r2, #1
   18040:	b	18010 <_obstack_memory_used@@Base+0xbdc>
   18044:	push	{r4, r5, r6, lr}
   18048:	mov	r4, r1
   1804c:	mov	r5, r0
   18050:	bl	1b234 <argp_error@@Base+0x1334>
   18054:	sub	r4, r4, r0
   18058:	cmp	r4, #0
   1805c:	pople	{r4, r5, r6, pc}
   18060:	mov	r1, #32
   18064:	mov	r0, r5
   18068:	bl	1b15c <argp_error@@Base+0x125c>
   1806c:	sub	r4, r4, #1
   18070:	b	18058 <_obstack_memory_used@@Base+0xc24>
   18074:	push	{r4, r5, r6, lr}
   18078:	mov	r4, r0
   1807c:	mov	r5, r1
   18080:	bl	1b234 <argp_error@@Base+0x1334>
   18084:	ldr	r3, [r4, #8]
   18088:	add	r0, r0, r5
   1808c:	cmp	r0, r3
   18090:	mov	r0, r4
   18094:	pop	{r4, r5, r6, lr}
   18098:	movcs	r1, #10
   1809c:	movcc	r1, #32
   180a0:	b	1b15c <argp_error@@Base+0x125c>
   180a4:	push	{r4, r5, r6, lr}
   180a8:	ldr	r5, [r0, #8]
   180ac:	cmp	r5, #0
   180b0:	bne	180c0 <_obstack_memory_used@@Base+0xc8c>
   180b4:	ldr	r5, [r1, #8]
   180b8:	cmp	r5, #0
   180bc:	beq	180f8 <_obstack_memory_used@@Base+0xcc4>
   180c0:	ldr	r2, [r0, #12]
   180c4:	ldr	r1, [r1, #12]
   180c8:	orr	r2, r2, r1
   180cc:	tst	r2, #16
   180d0:	bne	180f8 <_obstack_memory_used@@Base+0xcc4>
   180d4:	tst	r2, #1
   180d8:	mov	r6, r3
   180dc:	mov	r4, r0
   180e0:	beq	18100 <_obstack_memory_used@@Base+0xccc>
   180e4:	ldr	r1, [pc, #56]	; 18124 <_obstack_memory_used@@Base+0xcf0>
   180e8:	mov	r3, r5
   180ec:	ldr	r2, [r0, #4]
   180f0:	mov	r0, r6
   180f4:	bl	1b048 <argp_error@@Base+0x1148>
   180f8:	mov	r0, #0
   180fc:	pop	{r4, r5, r6, pc}
   18100:	mov	r0, r5
   18104:	bl	11560 <strlen@plt>
   18108:	add	r1, r0, #6
   1810c:	mov	r0, r6
   18110:	bl	18074 <_obstack_memory_used@@Base+0xc40>
   18114:	mov	r3, r5
   18118:	ldr	r1, [pc, #8]	; 18128 <_obstack_memory_used@@Base+0xcf4>
   1811c:	ldr	r2, [r4, #4]
   18120:	b	180f0 <_obstack_memory_used@@Base+0xcbc>
   18124:	strdeq	sp, [r1], -r8
   18128:	andeq	lr, r1, r3
   1812c:	push	{r4, r5, r6, lr}
   18130:	mov	r4, r0
   18134:	ldr	r0, [r0, #12]
   18138:	cmp	r0, #0
   1813c:	bne	18168 <_obstack_memory_used@@Base+0xd34>
   18140:	ldr	r3, [r4, #4]
   18144:	cmp	r3, #0
   18148:	beq	1815c <_obstack_memory_used@@Base+0xd28>
   1814c:	ldr	r0, [r4]
   18150:	bl	17030 <argp_usage@@Base+0x170>
   18154:	ldr	r0, [r4, #8]
   18158:	bl	17030 <argp_usage@@Base+0x170>
   1815c:	mov	r0, r4
   18160:	pop	{r4, r5, r6, lr}
   18164:	b	17030 <argp_usage@@Base+0x170>
   18168:	ldr	r5, [r0, #24]
   1816c:	bl	17030 <argp_usage@@Base+0x170>
   18170:	mov	r0, r5
   18174:	b	18138 <_obstack_memory_used@@Base+0xd04>
   18178:	push	{r4, r5, r6, lr}
   1817c:	ldr	r5, [r0, #16]
   18180:	ldr	r0, [r0, #8]
   18184:	cmp	r0, #0
   18188:	moveq	r4, r0
   1818c:	beq	181a0 <_obstack_memory_used@@Base+0xd6c>
   18190:	mov	r1, #10
   18194:	bl	1156c <strchr@plt>
   18198:	adds	r4, r0, #0
   1819c:	movne	r4, #1
   181a0:	cmp	r5, #0
   181a4:	addne	r5, r5, #16
   181a8:	bne	181bc <_obstack_memory_used@@Base+0xd88>
   181ac:	mov	r0, r4
   181b0:	pop	{r4, r5, r6, pc}
   181b4:	bl	18178 <_obstack_memory_used@@Base+0xd44>
   181b8:	add	r4, r4, r0
   181bc:	add	r5, r5, #16
   181c0:	ldr	r0, [r5, #-32]	; 0xffffffe0
   181c4:	cmp	r0, #0
   181c8:	bne	181b4 <_obstack_memory_used@@Base+0xd80>
   181cc:	b	181ac <_obstack_memory_used@@Base+0xd78>
   181d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   181d4:	sub	sp, sp, #28
   181d8:	mov	r8, r0
   181dc:	mov	r7, r2
   181e0:	ldr	r6, [r0, #12]
   181e4:	str	r3, [sp, #12]
   181e8:	ldr	r3, [r0, #16]
   181ec:	ldr	r4, [sp, #68]	; 0x44
   181f0:	cmp	r6, #0
   181f4:	moveq	fp, r6
   181f8:	moveq	r5, fp
   181fc:	str	r3, [sp, #16]
   18200:	str	r1, [sp, #20]
   18204:	beq	18244 <_obstack_memory_used@@Base+0xe10>
   18208:	mov	r1, #11
   1820c:	mov	r0, r6
   18210:	bl	1156c <strchr@plt>
   18214:	cmp	r7, #0
   18218:	moveq	fp, r6
   1821c:	beq	1822c <_obstack_memory_used@@Base+0xdf8>
   18220:	cmp	r0, #0
   18224:	addne	fp, r0, #1
   18228:	moveq	fp, r0
   1822c:	eor	r5, r7, #1
   18230:	cmp	r0, #0
   18234:	moveq	r5, #0
   18238:	andne	r5, r5, #1
   1823c:	cmp	r5, #0
   18240:	subne	r5, r0, r6
   18244:	ldr	r9, [r8, #20]
   18248:	cmp	r9, #0
   1824c:	moveq	sl, fp
   18250:	beq	182a4 <_obstack_memory_used@@Base+0xe70>
   18254:	cmp	r5, #0
   18258:	beq	1826c <_obstack_memory_used@@Base+0xe38>
   1825c:	mov	r0, fp
   18260:	mov	r1, r5
   18264:	bl	11428 <strndup@plt>
   18268:	mov	fp, r0
   1826c:	mov	r0, r8
   18270:	ldr	r1, [sp, #20]
   18274:	mov	sl, fp
   18278:	bl	16e80 <argp_parse@@Base+0x938>
   1827c:	ldr	ip, [pc, #460]	; 18450 <_obstack_memory_used@@Base+0x101c>
   18280:	cmp	r7, #0
   18284:	mov	r2, r0
   18288:	mov	r1, fp
   1828c:	mov	r9, r0
   18290:	ldr	r0, [pc, #444]	; 18454 <_obstack_memory_used@@Base+0x1020>
   18294:	ldr	r6, [r8, #20]
   18298:	movne	r0, ip
   1829c:	blx	r6
   182a0:	mov	fp, r0
   182a4:	cmp	fp, #0
   182a8:	moveq	r6, fp
   182ac:	beq	18318 <_obstack_memory_used@@Base+0xee4>
   182b0:	ldr	r3, [sp, #12]
   182b4:	cmp	r3, #0
   182b8:	beq	182c8 <_obstack_memory_used@@Base+0xe94>
   182bc:	mov	r1, #10
   182c0:	mov	r0, r4
   182c4:	bl	1b15c <argp_error@@Base+0x125c>
   182c8:	sub	r2, fp, sl
   182cc:	cmp	r5, #0
   182d0:	clz	r2, r2
   182d4:	lsr	r2, r2, #5
   182d8:	moveq	r2, #0
   182dc:	cmp	r2, #0
   182e0:	beq	18414 <_obstack_memory_used@@Base+0xfe0>
   182e4:	mov	r2, r5
   182e8:	mov	r1, sl
   182ec:	mov	r0, r4
   182f0:	bl	1b0bc <argp_error@@Base+0x11bc>
   182f4:	mov	r0, r4
   182f8:	bl	1b234 <argp_error@@Base+0x1334>
   182fc:	ldr	r2, [r4, #4]
   18300:	cmp	r0, r2
   18304:	bls	18314 <_obstack_memory_used@@Base+0xee0>
   18308:	mov	r1, #10
   1830c:	mov	r0, r4
   18310:	bl	1b15c <argp_error@@Base+0x125c>
   18314:	mov	r6, #1
   18318:	cmp	fp, #0
   1831c:	cmpne	fp, sl
   18320:	beq	1832c <_obstack_memory_used@@Base+0xef8>
   18324:	mov	r0, fp
   18328:	bl	17030 <argp_usage@@Base+0x170>
   1832c:	cmp	sl, #0
   18330:	cmpne	r5, #0
   18334:	beq	1834c <_obstack_memory_used@@Base+0xf18>
   18338:	ldr	r3, [r8, #20]
   1833c:	cmp	r3, #0
   18340:	beq	1834c <_obstack_memory_used@@Base+0xf18>
   18344:	mov	r0, sl
   18348:	bl	17030 <argp_usage@@Base+0x170>
   1834c:	cmp	r7, #0
   18350:	beq	183c8 <_obstack_memory_used@@Base+0xf94>
   18354:	ldr	r3, [r8, #20]
   18358:	cmp	r3, #0
   1835c:	beq	183c8 <_obstack_memory_used@@Base+0xf94>
   18360:	mov	r2, r9
   18364:	mov	r1, #0
   18368:	ldr	r0, [pc, #232]	; 18458 <_obstack_memory_used@@Base+0x1024>
   1836c:	blx	r3
   18370:	subs	r5, r0, #0
   18374:	beq	183c8 <_obstack_memory_used@@Base+0xf94>
   18378:	ldr	r3, [sp, #12]
   1837c:	orrs	r3, r6, r3
   18380:	beq	18390 <_obstack_memory_used@@Base+0xf5c>
   18384:	mov	r1, #10
   18388:	mov	r0, r4
   1838c:	bl	1b15c <argp_error@@Base+0x125c>
   18390:	mov	r1, r5
   18394:	mov	r0, r4
   18398:	bl	1b11c <argp_error@@Base+0x121c>
   1839c:	mov	r0, r5
   183a0:	bl	17030 <argp_usage@@Base+0x170>
   183a4:	mov	r0, r4
   183a8:	bl	1b234 <argp_error@@Base+0x1334>
   183ac:	ldr	r3, [r4, #4]
   183b0:	cmp	r0, r3
   183b4:	bls	183c4 <_obstack_memory_used@@Base+0xf90>
   183b8:	mov	r1, #10
   183bc:	mov	r0, r4
   183c0:	bl	1b15c <argp_error@@Base+0x125c>
   183c4:	mov	r6, r7
   183c8:	ldr	r3, [sp, #16]
   183cc:	cmp	r3, #0
   183d0:	beq	18408 <_obstack_memory_used@@Base+0xfd4>
   183d4:	add	r8, r3, #16
   183d8:	ldr	r3, [sp, #64]	; 0x40
   183dc:	eor	r5, r3, #1
   183e0:	and	r5, r5, #1
   183e4:	ldr	r0, [r8, #-16]
   183e8:	cmp	r0, #0
   183ec:	beq	18408 <_obstack_memory_used@@Base+0xfd4>
   183f0:	cmp	r6, #0
   183f4:	add	r8, r8, #16
   183f8:	movne	r3, r5
   183fc:	moveq	r3, #1
   18400:	cmp	r3, #0
   18404:	bne	18424 <_obstack_memory_used@@Base+0xff0>
   18408:	mov	r0, r6
   1840c:	add	sp, sp, #28
   18410:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18414:	mov	r1, fp
   18418:	mov	r0, r4
   1841c:	bl	1b11c <argp_error@@Base+0x121c>
   18420:	b	182f4 <_obstack_memory_used@@Base+0xec0>
   18424:	ldr	r3, [sp, #12]
   18428:	mov	r2, r7
   1842c:	ldr	r1, [sp, #20]
   18430:	orrs	r3, r6, r3
   18434:	ldr	r3, [sp, #64]	; 0x40
   18438:	stm	sp, {r3, r4}
   1843c:	movne	r3, #1
   18440:	moveq	r3, #0
   18444:	bl	181d0 <_obstack_memory_used@@Base+0xd9c>
   18448:	orr	r6, r6, r0
   1844c:	b	183e4 <_obstack_memory_used@@Base+0xfb0>
   18450:	andeq	r0, r0, #2
   18454:	andeq	r0, r0, #1
   18458:	andeq	r0, r0, #4
   1845c:	ldr	r2, [r0, #8]
   18460:	cmp	r2, #0
   18464:	bne	1849c <_obstack_memory_used@@Base+0x1068>
   18468:	ldr	r2, [r1, #8]
   1846c:	cmp	r2, #0
   18470:	bne	1849c <_obstack_memory_used@@Base+0x1068>
   18474:	ldr	r2, [r0, #12]
   18478:	ldr	r1, [r1, #12]
   1847c:	orr	r2, r2, r1
   18480:	tst	r2, #16
   18484:	bne	1849c <_obstack_memory_used@@Base+0x1068>
   18488:	ldr	r2, [r3]
   1848c:	ldr	r1, [r0, #4]
   18490:	add	r0, r2, #1
   18494:	str	r0, [r3]
   18498:	strb	r1, [r2]
   1849c:	mov	r0, #0
   184a0:	bx	lr
   184a4:	push	{r4, lr}
   184a8:	mov	r4, r0
   184ac:	bl	1153c <__ctype_b_loc@plt>
   184b0:	ldr	r1, [r0]
   184b4:	ldr	r3, [r4]
   184b8:	ldrb	r0, [r3]
   184bc:	lsl	r2, r0, #1
   184c0:	ldrh	r2, [r1, r2]
   184c4:	tst	r2, #8192	; 0x2000
   184c8:	bne	18500 <_obstack_memory_used@@Base+0x10cc>
   184cc:	subs	r0, r0, #45	; 0x2d
   184d0:	movne	r0, #1
   184d4:	ldr	r2, [r4]
   184d8:	ldrb	r3, [r2]
   184dc:	cmp	r3, #0
   184e0:	popeq	{r4, pc}
   184e4:	lsl	r3, r3, #1
   184e8:	ldrh	r3, [r1, r3]
   184ec:	tst	r3, #8
   184f0:	popne	{r4, pc}
   184f4:	add	r2, r2, #1
   184f8:	str	r2, [r4]
   184fc:	b	184d4 <_obstack_memory_used@@Base+0x10a0>
   18500:	add	r3, r3, #1
   18504:	str	r3, [r4]
   18508:	b	184b4 <_obstack_memory_used@@Base+0x1080>
   1850c:	push	{r4, r5, r6, lr}
   18510:	subs	r4, r2, #0
   18514:	popeq	{r4, r5, r6, pc}
   18518:	ldr	r2, [r4, #20]
   1851c:	cmp	r2, #0
   18520:	popeq	{r4, r5, r6, pc}
   18524:	mov	r6, r1
   18528:	mov	r5, r0
   1852c:	mov	r1, r3
   18530:	mov	r0, r4
   18534:	bl	16e80 <argp_parse@@Base+0x938>
   18538:	mov	r2, r0
   1853c:	mov	r1, r5
   18540:	ldr	r3, [r4, #20]
   18544:	mov	r0, r6
   18548:	pop	{r4, r5, r6, lr}
   1854c:	bx	r3
   18550:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18554:	mov	r4, r3
   18558:	sub	sp, sp, #28
   1855c:	mov	fp, r2
   18560:	ldr	r3, [r0, #8]
   18564:	ldr	sl, [r2]
   18568:	mov	r2, r0
   1856c:	ldr	r7, [r0, #16]
   18570:	str	r3, [sp, #8]
   18574:	mov	r3, r1
   18578:	str	r1, [sp, #12]
   1857c:	ldr	r1, [pc, #324]	; 186c8 <_obstack_memory_used@@Base+0x1294>
   18580:	ldr	r0, [sp, #8]
   18584:	bl	1850c <_obstack_memory_used@@Base+0x10d8>
   18588:	subs	r8, r0, #0
   1858c:	beq	18680 <_obstack_memory_used@@Base+0x124c>
   18590:	mov	r1, #10
   18594:	bl	113f8 <strchrnul@plt>
   18598:	ldrb	r6, [r0]
   1859c:	mov	r5, r0
   185a0:	cmp	r6, #0
   185a4:	ldrbne	r2, [sl]
   185a8:	movne	r9, r8
   185ac:	movne	r6, #0
   185b0:	bne	185e4 <_obstack_memory_used@@Base+0x11b0>
   185b4:	mov	r9, r8
   185b8:	b	18600 <_obstack_memory_used@@Base+0x11cc>
   185bc:	mov	r0, r3
   185c0:	mov	r1, #10
   185c4:	str	r3, [sp, #16]
   185c8:	str	r2, [sp, #20]
   185cc:	add	r6, r6, #1
   185d0:	bl	113f8 <strchrnul@plt>
   185d4:	ldr	r3, [sp, #16]
   185d8:	mov	r5, r0
   185dc:	ldr	r2, [sp, #20]
   185e0:	mov	r9, r3
   185e4:	cmp	r2, r6
   185e8:	add	r3, r5, #1
   185ec:	bgt	185bc <_obstack_memory_used@@Base+0x1188>
   185f0:	ldr	r3, [fp]
   185f4:	mov	r6, #1
   185f8:	add	r3, r3, #1
   185fc:	str	r3, [fp]
   18600:	add	r1, r5, #1
   18604:	ldr	r0, [sp, #64]	; 0x40
   18608:	sub	r1, r1, r9
   1860c:	bl	18074 <_obstack_memory_used@@Base+0xc40>
   18610:	sub	r2, r5, r9
   18614:	mov	r1, r9
   18618:	ldr	r0, [sp, #64]	; 0x40
   1861c:	bl	1b0bc <argp_error@@Base+0x11bc>
   18620:	ldr	r3, [sp, #8]
   18624:	cmp	r3, r8
   18628:	beq	18634 <_obstack_memory_used@@Base+0x1200>
   1862c:	mov	r0, r8
   18630:	bl	17030 <argp_usage@@Base+0x170>
   18634:	cmp	r7, #0
   18638:	bne	18690 <_obstack_memory_used@@Base+0x125c>
   1863c:	cmp	r4, #0
   18640:	moveq	r6, #0
   18644:	cmp	r6, #0
   18648:	beq	18670 <_obstack_memory_used@@Base+0x123c>
   1864c:	ldrb	r2, [r5]
   18650:	ldrb	r3, [sl]
   18654:	cmp	r2, #0
   18658:	movne	r4, #0
   1865c:	addne	r3, r3, #1
   18660:	strbne	r3, [sl]
   18664:	bne	18670 <_obstack_memory_used@@Base+0x123c>
   18668:	cmp	r3, #0
   1866c:	strbne	r2, [sl]
   18670:	clz	r0, r4
   18674:	lsr	r0, r0, #5
   18678:	add	sp, sp, #28
   1867c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18680:	cmp	r7, #0
   18684:	movne	r5, r8
   18688:	movne	r6, r5
   1868c:	beq	18670 <_obstack_memory_used@@Base+0x123c>
   18690:	add	r7, r7, #16
   18694:	add	r7, r7, #16
   18698:	ldr	r0, [r7, #-32]	; 0xffffffe0
   1869c:	cmp	r0, #0
   186a0:	beq	1863c <_obstack_memory_used@@Base+0x1208>
   186a4:	mov	r2, fp
   186a8:	ldr	r1, [sp, #12]
   186ac:	ldr	r3, [sp, #64]	; 0x40
   186b0:	str	r3, [sp]
   186b4:	mov	r3, r4
   186b8:	bl	18550 <_obstack_memory_used@@Base+0x111c>
   186bc:	clz	r4, r0
   186c0:	lsr	r4, r4, #5
   186c4:	b	18694 <_obstack_memory_used@@Base+0x1260>
   186c8:	andeq	r0, r0, #6
   186cc:	push	{r4, r5, r6, r7, r8, lr}
   186d0:	mov	r4, r2
   186d4:	mov	r7, r0
   186d8:	ldr	r3, [r2, #16]
   186dc:	mov	r2, r1
   186e0:	ldr	r1, [pc, #156]	; 18784 <_obstack_memory_used@@Base+0x1350>
   186e4:	bl	1850c <_obstack_memory_used@@Base+0x10d8>
   186e8:	subs	r5, r0, #0
   186ec:	beq	18770 <_obstack_memory_used@@Base+0x133c>
   186f0:	ldrb	r3, [r5]
   186f4:	cmp	r3, #0
   186f8:	beq	18764 <_obstack_memory_used@@Base+0x1330>
   186fc:	ldr	r3, [r4, #8]
   18700:	ldr	r3, [r3]
   18704:	cmp	r3, #0
   18708:	beq	18718 <_obstack_memory_used@@Base+0x12e4>
   1870c:	mov	r1, #10
   18710:	ldr	r0, [r4, #4]
   18714:	bl	1b15c <argp_error@@Base+0x125c>
   18718:	ldr	r6, [pc, #104]	; 18788 <_obstack_memory_used@@Base+0x1354>
   1871c:	ldr	r0, [r4, #4]
   18720:	ldr	r1, [r6, #24]
   18724:	bl	18044 <_obstack_memory_used@@Base+0xc10>
   18728:	ldr	r0, [r4, #4]
   1872c:	ldr	r1, [r6, #24]
   18730:	bl	1b1a4 <argp_error@@Base+0x12a4>
   18734:	ldr	r0, [r4, #4]
   18738:	ldr	r1, [r6, #24]
   1873c:	bl	1b204 <argp_error@@Base+0x1304>
   18740:	mov	r1, r5
   18744:	ldr	r0, [r4, #4]
   18748:	bl	1b11c <argp_error@@Base+0x121c>
   1874c:	mov	r1, #0
   18750:	ldr	r0, [r4, #4]
   18754:	bl	1b1a4 <argp_error@@Base+0x12a4>
   18758:	mov	r1, #10
   1875c:	ldr	r0, [r4, #4]
   18760:	bl	1b15c <argp_error@@Base+0x125c>
   18764:	ldr	r3, [r4, #8]
   18768:	mov	r2, #1
   1876c:	str	r2, [r3, #4]
   18770:	cmp	r7, r5
   18774:	popeq	{r4, r5, r6, r7, r8, pc}
   18778:	mov	r0, r5
   1877c:	pop	{r4, r5, r6, r7, r8, lr}
   18780:	b	17030 <argp_usage@@Base+0x170>
   18784:	andeq	r0, r0, #3
   18788:	andeq	pc, r2, r4, lsl #22
   1878c:	ldr	r3, [r1, #12]
   18790:	push	{r4, r5, r6, r7, r8, lr}
   18794:	mov	r7, r0
   18798:	mov	r4, r1
   1879c:	ldr	r0, [r1, #4]
   187a0:	cmp	r3, #0
   187a4:	beq	18868 <_obstack_memory_used@@Base+0x1434>
   187a8:	ldr	r3, [r1]
   187ac:	ldr	r2, [r1, #8]
   187b0:	ldr	r5, [r3, #16]
   187b4:	ldr	r6, [r2]
   187b8:	ldr	r2, [r2, #4]
   187bc:	cmp	r2, #0
   187c0:	cmpne	r6, #0
   187c4:	beq	187e0 <_obstack_memory_used@@Base+0x13ac>
   187c8:	ldr	r2, [r3, #12]
   187cc:	ldr	r3, [r6, #12]
   187d0:	cmp	r2, r3
   187d4:	beq	187e0 <_obstack_memory_used@@Base+0x13ac>
   187d8:	mov	r1, #10
   187dc:	bl	1b15c <argp_error@@Base+0x125c>
   187e0:	cmp	r5, #0
   187e4:	beq	18814 <_obstack_memory_used@@Base+0x13e0>
   187e8:	ldr	r0, [r5]
   187ec:	cmp	r0, #0
   187f0:	beq	18814 <_obstack_memory_used@@Base+0x13e0>
   187f4:	ldrb	r3, [r0]
   187f8:	cmp	r3, #0
   187fc:	beq	18814 <_obstack_memory_used@@Base+0x13e0>
   18800:	cmp	r6, #0
   18804:	beq	18844 <_obstack_memory_used@@Base+0x1410>
   18808:	ldr	r3, [r6, #16]
   1880c:	cmp	r3, r5
   18810:	bne	18830 <_obstack_memory_used@@Base+0x13fc>
   18814:	mov	r3, #0
   18818:	str	r3, [r4, #12]
   1881c:	mov	r1, r7
   18820:	ldr	r0, [r4, #4]
   18824:	pop	{r4, r5, r6, r7, r8, lr}
   18828:	b	18044 <_obstack_memory_used@@Base+0xc10>
   1882c:	ldr	r3, [r3, #12]
   18830:	cmp	r3, #0
   18834:	cmpne	r5, r3
   18838:	bne	1882c <_obstack_memory_used@@Base+0x13f8>
   1883c:	cmp	r5, r3
   18840:	beq	18814 <_obstack_memory_used@@Base+0x13e0>
   18844:	ldr	r3, [r4, #4]
   18848:	mov	r2, r4
   1884c:	ldr	r1, [r5, #16]
   18850:	ldr	r6, [r3, #12]
   18854:	bl	186cc <_obstack_memory_used@@Base+0x1298>
   18858:	ldr	r0, [r4, #4]
   1885c:	mov	r1, r6
   18860:	bl	1b204 <argp_error@@Base+0x1304>
   18864:	b	18814 <_obstack_memory_used@@Base+0x13e0>
   18868:	ldr	r1, [pc, #4]	; 18874 <_obstack_memory_used@@Base+0x1440>
   1886c:	bl	1b11c <argp_error@@Base+0x121c>
   18870:	b	1881c <_obstack_memory_used@@Base+0x13e8>
   18874:	andeq	lr, r1, ip
   18878:	push	{r4, r5, r6, r7, r8, lr}
   1887c:	mov	r8, r1
   18880:	ldm	r0, {r5, r6}
   18884:	cmp	r6, #0
   18888:	popeq	{r4, r5, r6, r7, r8, pc}
   1888c:	ldm	r5, {r4, r7}
   18890:	add	r4, r4, #24
   18894:	cmp	r7, #0
   18898:	subeq	r6, r6, #1
   1889c:	addeq	r5, r5, #28
   188a0:	beq	18884 <_obstack_memory_used@@Base+0x1450>
   188a4:	ldr	r0, [r4, #-24]	; 0xffffffe8
   188a8:	cmp	r0, #0
   188ac:	beq	188cc <_obstack_memory_used@@Base+0x1498>
   188b0:	ldr	r3, [r4, #-12]
   188b4:	tst	r3, #2
   188b8:	bne	188cc <_obstack_memory_used@@Base+0x1498>
   188bc:	mov	r1, r8
   188c0:	bl	113c8 <strcmp@plt>
   188c4:	cmp	r0, #0
   188c8:	beq	188d8 <_obstack_memory_used@@Base+0x14a4>
   188cc:	add	r4, r4, #24
   188d0:	sub	r7, r7, #1
   188d4:	b	18894 <_obstack_memory_used@@Base+0x1460>
   188d8:	mvn	r3, #0
   188dc:	str	r3, [r5, #12]
   188e0:	pop	{r4, r5, r6, r7, r8, pc}
   188e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   188e8:	add	fp, sp, #32
   188ec:	sub	sp, sp, #12
   188f0:	ldr	r6, [r0, #4]
   188f4:	cmp	r6, #0
   188f8:	beq	18998 <_obstack_memory_used@@Base+0x1564>
   188fc:	mov	r5, r0
   18900:	ldr	r0, [r0, #8]
   18904:	mov	r4, r1
   18908:	bl	11560 <strlen@plt>
   1890c:	add	r0, r0, #8
   18910:	ldr	r9, [pc, #316]	; 18a54 <_obstack_memory_used@@Base+0x1620>
   18914:	bic	r0, r0, #7
   18918:	ldr	r7, [r5]
   1891c:	sub	sp, sp, r0
   18920:	mov	r8, sp
   18924:	str	r8, [fp, #-40]	; 0xffffffd8
   18928:	ldr	r2, [r7, #20]
   1892c:	mov	r0, r7
   18930:	sub	r3, fp, #40	; 0x28
   18934:	mov	r1, r9
   18938:	add	r7, r7, #28
   1893c:	ldr	r2, [r2, #24]
   18940:	bl	17f5c <_obstack_memory_used@@Base+0xb28>
   18944:	subs	r6, r6, #1
   18948:	bne	18928 <_obstack_memory_used@@Base+0x14f4>
   1894c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   18950:	cmp	r3, r8
   18954:	bls	18974 <_obstack_memory_used@@Base+0x1540>
   18958:	add	r2, r3, #1
   1895c:	ldr	r1, [pc, #244]	; 18a58 <_obstack_memory_used@@Base+0x1624>
   18960:	mov	r0, r4
   18964:	str	r2, [fp, #-40]	; 0xffffffd8
   18968:	mov	r2, r8
   1896c:	strb	r6, [r3]
   18970:	bl	1b048 <argp_error@@Base+0x1148>
   18974:	ldr	r8, [pc, #224]	; 18a5c <_obstack_memory_used@@Base+0x1628>
   18978:	ldrd	r6, [r5]
   1897c:	cmp	r7, #0
   18980:	bne	189a0 <_obstack_memory_used@@Base+0x156c>
   18984:	ldm	r5, {r5, r8}
   18988:	ldr	sl, [pc, #208]	; 18a60 <_obstack_memory_used@@Base+0x162c>
   1898c:	add	r5, r5, #28
   18990:	cmp	r8, #0
   18994:	bne	189c4 <_obstack_memory_used@@Base+0x1590>
   18998:	sub	sp, fp, #32
   1899c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   189a0:	ldr	r2, [r6, #20]
   189a4:	mov	r0, r6
   189a8:	mov	r3, r4
   189ac:	mov	r1, r8
   189b0:	sub	r7, r7, #1
   189b4:	add	r6, r6, #28
   189b8:	ldr	r2, [r2, #24]
   189bc:	bl	17f5c <_obstack_memory_used@@Base+0xb28>
   189c0:	b	1897c <_obstack_memory_used@@Base+0x1548>
   189c4:	ldr	r7, [r5, #-28]	; 0xffffffe4
   189c8:	ldr	r9, [r5, #-24]	; 0xffffffe8
   189cc:	mov	r6, r7
   189d0:	cmp	r9, #0
   189d4:	subeq	r8, r8, #1
   189d8:	addeq	r5, r5, #28
   189dc:	beq	18990 <_obstack_memory_used@@Base+0x155c>
   189e0:	ldr	r2, [r6]
   189e4:	cmp	r2, #0
   189e8:	beq	18a38 <_obstack_memory_used@@Base+0x1604>
   189ec:	ldr	r1, [r6, #12]
   189f0:	tst	r1, #4
   189f4:	moveq	r7, r6
   189f8:	tst	r1, #2
   189fc:	bne	18a38 <_obstack_memory_used@@Base+0x1604>
   18a00:	ldr	r3, [r6, #8]
   18a04:	ldr	r0, [r7, #12]
   18a08:	cmp	r3, #0
   18a0c:	ldreq	r3, [r7, #8]
   18a10:	orr	r1, r1, r0
   18a14:	tst	r1, #16
   18a18:	bne	18a38 <_obstack_memory_used@@Base+0x1604>
   18a1c:	cmp	r3, #0
   18a20:	beq	18a44 <_obstack_memory_used@@Base+0x1610>
   18a24:	tst	r1, #1
   18a28:	mov	r0, r4
   18a2c:	movne	r1, sl
   18a30:	ldreq	r1, [pc, #44]	; 18a64 <_obstack_memory_used@@Base+0x1630>
   18a34:	bl	1b048 <argp_error@@Base+0x1148>
   18a38:	add	r6, r6, #24
   18a3c:	sub	r9, r9, #1
   18a40:	b	189d0 <_obstack_memory_used@@Base+0x159c>
   18a44:	ldr	r1, [pc, #28]	; 18a68 <_obstack_memory_used@@Base+0x1634>
   18a48:	mov	r0, r4
   18a4c:	bl	1b048 <argp_error@@Base+0x1148>
   18a50:	b	18a38 <_obstack_memory_used@@Base+0x1604>
   18a54:	andeq	r8, r1, ip, asr r4
   18a58:	andeq	lr, r1, pc
   18a5c:	andeq	r8, r1, r4, lsr #1
   18a60:	andeq	lr, r1, r6, lsl r0
   18a64:	andeq	lr, r1, r3, lsr #32
   18a68:	andeq	lr, r1, lr, lsr #32
   18a6c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18a70:	sub	sp, sp, #36	; 0x24
   18a74:	mov	r9, r1
   18a78:	str	r0, [sp, #8]
   18a7c:	ldr	r5, [r0]
   18a80:	ldr	r6, [r0, #16]
   18a84:	mov	r0, #16
   18a88:	bl	17eec <_obstack_memory_used@@Base+0xab8>
   18a8c:	subs	r4, r0, #0
   18a90:	bne	18aa8 <_obstack_memory_used@@Base+0x1674>
   18a94:	ldr	r3, [pc, #1172]	; 18f30 <_obstack_memory_used@@Base+0x1afc>
   18a98:	movw	r2, #450	; 0x1c2
   18a9c:	ldr	r1, [pc, #1168]	; 18f34 <_obstack_memory_used@@Base+0x1b00>
   18aa0:	ldr	r0, [pc, #1168]	; 18f38 <_obstack_memory_used@@Base+0x1b04>
   18aa4:	bl	11704 <__assert_fail@plt>
   18aa8:	mov	r3, #0
   18aac:	cmp	r5, r3
   18ab0:	str	r3, [r4, #4]
   18ab4:	str	r3, [r4, #12]
   18ab8:	beq	18c2c <_obstack_memory_used@@Base+0x17f8>
   18abc:	ldr	r8, [r5, #12]
   18ac0:	ands	r8, r8, #4
   18ac4:	moveq	r7, r5
   18ac8:	moveq	sl, r8
   18acc:	beq	18b08 <_obstack_memory_used@@Base+0x16d4>
   18ad0:	ldr	r3, [pc, #1112]	; 18f30 <_obstack_memory_used@@Base+0x1afc>
   18ad4:	mov	r2, #460	; 0x1cc
   18ad8:	ldr	r1, [pc, #1108]	; 18f34 <_obstack_memory_used@@Base+0x1b00>
   18adc:	ldr	r0, [pc, #1112]	; 18f3c <_obstack_memory_used@@Base+0x1b08>
   18ae0:	b	18aa4 <_obstack_memory_used@@Base+0x1670>
   18ae4:	ldr	r2, [r7, #12]
   18ae8:	mov	r0, r7
   18aec:	add	r7, r7, #24
   18af0:	tst	r2, #4
   18af4:	addeq	r3, r3, #1
   18af8:	streq	r3, [r4, #4]
   18afc:	bl	16ed4 <argp_usage@@Base+0x14>
   18b00:	cmp	r0, #0
   18b04:	addne	sl, sl, #1
   18b08:	mov	r0, r7
   18b0c:	bl	16f1c <argp_usage@@Base+0x5c>
   18b10:	cmp	r0, #0
   18b14:	ldr	r3, [r4, #4]
   18b18:	beq	18ae4 <_obstack_memory_used@@Base+0x16b0>
   18b1c:	mov	r0, #28
   18b20:	mul	r0, r0, r3
   18b24:	bl	17eec <_obstack_memory_used@@Base+0xab8>
   18b28:	str	r0, [r4]
   18b2c:	add	r0, sl, #1
   18b30:	bl	17eec <_obstack_memory_used@@Base+0xab8>
   18b34:	ldr	r7, [r4]
   18b38:	mov	sl, r0
   18b3c:	str	r0, [r4, #8]
   18b40:	cmp	r7, #0
   18b44:	cmpne	r0, #0
   18b48:	bne	18b60 <_obstack_memory_used@@Base+0x172c>
   18b4c:	ldr	r3, [pc, #988]	; 18f30 <_obstack_memory_used@@Base+0x1afc>
   18b50:	movw	r2, #474	; 0x1da
   18b54:	ldr	r1, [pc, #984]	; 18f34 <_obstack_memory_used@@Base+0x1b00>
   18b58:	ldr	r0, [pc, #992]	; 18f40 <_obstack_memory_used@@Base+0x1b0c>
   18b5c:	b	18aa4 <_obstack_memory_used@@Base+0x1670>
   18b60:	ldr	r3, [pc, #988]	; 18f44 <_obstack_memory_used@@Base+0x1b10>
   18b64:	ldr	r2, [r4, #4]
   18b68:	cmp	r2, r3
   18b6c:	addls	r7, r7, #28
   18b70:	movls	fp, r0
   18b74:	bls	18c14 <_obstack_memory_used@@Base+0x17e0>
   18b78:	ldr	r3, [pc, #944]	; 18f30 <_obstack_memory_used@@Base+0x1afc>
   18b7c:	mov	r2, #476	; 0x1dc
   18b80:	ldr	r1, [pc, #940]	; 18f34 <_obstack_memory_used@@Base+0x1b00>
   18b84:	ldr	r0, [pc, #956]	; 18f48 <_obstack_memory_used@@Base+0x1b14>
   18b88:	b	18aa4 <_obstack_memory_used@@Base+0x1670>
   18b8c:	str	r5, [r7, #-28]	; 0xffffffe4
   18b90:	str	r0, [r7, #-24]	; 0xffffffe8
   18b94:	ldr	r3, [r5, #20]
   18b98:	str	fp, [r7, #-20]	; 0xffffffec
   18b9c:	cmp	r3, #0
   18ba0:	movne	r8, r3
   18ba4:	bne	18bc0 <_obstack_memory_used@@Base+0x178c>
   18ba8:	ldr	r3, [r5]
   18bac:	cmp	r3, #0
   18bb0:	bne	18bc0 <_obstack_memory_used@@Base+0x178c>
   18bb4:	ldr	r3, [r5, #4]
   18bb8:	cmp	r3, #0
   18bbc:	addeq	r8, r8, #1
   18bc0:	ldr	r3, [sp, #8]
   18bc4:	strd	r8, [r7, #-16]
   18bc8:	str	r3, [r7, #-8]
   18bcc:	ldr	r3, [r7, #-24]	; 0xffffffe8
   18bd0:	mov	r0, r5
   18bd4:	add	r3, r3, #1
   18bd8:	str	r3, [r7, #-24]	; 0xffffffe8
   18bdc:	bl	16ed4 <argp_usage@@Base+0x14>
   18be0:	cmp	r0, #0
   18be4:	ldrbne	r2, [r5, #4]
   18be8:	movne	r3, sl
   18bec:	bne	18c64 <_obstack_memory_used@@Base+0x1830>
   18bf0:	add	r5, r5, #24
   18bf4:	mov	r0, r5
   18bf8:	bl	16f1c <argp_usage@@Base+0x5c>
   18bfc:	cmp	r0, #0
   18c00:	bne	18c10 <_obstack_memory_used@@Base+0x17dc>
   18c04:	ldr	r3, [r5, #12]
   18c08:	tst	r3, #4
   18c0c:	bne	18bcc <_obstack_memory_used@@Base+0x1798>
   18c10:	add	r7, r7, #28
   18c14:	mov	r0, r5
   18c18:	bl	16f1c <argp_usage@@Base+0x5c>
   18c1c:	cmp	r0, #0
   18c20:	beq	18b8c <_obstack_memory_used@@Base+0x1758>
   18c24:	mov	r3, #0
   18c28:	strb	r3, [fp]
   18c2c:	cmp	r6, #0
   18c30:	beq	18c48 <_obstack_memory_used@@Base+0x1814>
   18c34:	add	r6, r6, #16
   18c38:	ldr	r3, [r6, #-16]
   18c3c:	sub	sl, r6, #16
   18c40:	cmp	r3, #0
   18c44:	bne	18c78 <_obstack_memory_used@@Base+0x1844>
   18c48:	mov	r0, r4
   18c4c:	add	sp, sp, #36	; 0x24
   18c50:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18c54:	ldrb	r1, [r1]
   18c58:	add	r3, r3, #1
   18c5c:	cmp	r1, r2
   18c60:	beq	18bf0 <_obstack_memory_used@@Base+0x17bc>
   18c64:	cmp	r3, fp
   18c68:	mov	r1, r3
   18c6c:	bcc	18c54 <_obstack_memory_used@@Base+0x1820>
   18c70:	strb	r2, [fp], #1
   18c74:	b	18bf0 <_obstack_memory_used@@Base+0x17bc>
   18c78:	ldmdb	r6, {r7, r8}
   18c7c:	cmp	r8, #0
   18c80:	bne	18c90 <_obstack_memory_used@@Base+0x185c>
   18c84:	cmp	r7, #0
   18c88:	moveq	r1, r9
   18c8c:	beq	18ce0 <_obstack_memory_used@@Base+0x18ac>
   18c90:	ldr	r3, [sp, #8]
   18c94:	mov	r0, #28
   18c98:	ldr	r5, [r3, #16]
   18c9c:	bl	17eec <_obstack_memory_used@@Base+0xab8>
   18ca0:	subs	r1, r0, #0
   18ca4:	beq	18ce0 <_obstack_memory_used@@Base+0x18ac>
   18ca8:	ldr	r3, [sp, #8]
   18cac:	cmp	r9, #0
   18cb0:	sub	r5, sl, r5
   18cb4:	asr	r5, r5, #4
   18cb8:	str	r7, [r1]
   18cbc:	stmib	r1, {r5, r8, r9}
   18cc0:	str	r3, [r1, #16]
   18cc4:	moveq	r3, r9
   18cc8:	ldrne	r3, [r9, #20]
   18ccc:	addne	r3, r3, #1
   18cd0:	str	r3, [r1, #20]
   18cd4:	ldr	r3, [r4, #12]
   18cd8:	str	r1, [r4, #12]
   18cdc:	str	r3, [r1, #24]
   18ce0:	ldr	r0, [r6, #-16]
   18ce4:	bl	18a6c <_obstack_memory_used@@Base+0x1638>
   18ce8:	ldr	r3, [r4, #12]
   18cec:	mov	r5, r0
   18cf0:	add	r2, r4, #12
   18cf4:	cmp	r3, #0
   18cf8:	bne	18d44 <_obstack_memory_used@@Base+0x1910>
   18cfc:	ldr	r1, [r5, #12]
   18d00:	str	r1, [r2]
   18d04:	ldr	r2, [r5, #4]
   18d08:	str	r3, [r5, #12]
   18d0c:	cmp	r2, #0
   18d10:	beq	18d38 <_obstack_memory_used@@Base+0x1904>
   18d14:	ldr	r1, [r4, #4]
   18d18:	cmp	r1, #0
   18d1c:	bne	18d50 <_obstack_memory_used@@Base+0x191c>
   18d20:	str	r2, [r4, #4]
   18d24:	ldr	r2, [r5]
   18d28:	str	r2, [r4]
   18d2c:	ldr	r2, [r5, #8]
   18d30:	str	r2, [r4, #8]
   18d34:	str	r3, [r5, #4]
   18d38:	mov	r0, r5
   18d3c:	bl	1812c <_obstack_memory_used@@Base+0xcf8>
   18d40:	b	18c34 <_obstack_memory_used@@Base+0x1800>
   18d44:	add	r2, r3, #24
   18d48:	ldr	r3, [r3, #24]
   18d4c:	b	18cf4 <_obstack_memory_used@@Base+0x18c0>
   18d50:	add	r3, r2, r1
   18d54:	str	r3, [sp, #12]
   18d58:	mov	r3, #28
   18d5c:	ldr	r2, [sp, #12]
   18d60:	mul	r0, r3, r2
   18d64:	bl	17eec <_obstack_memory_used@@Base+0xab8>
   18d68:	str	r0, [sp]
   18d6c:	ldr	r0, [r4, #8]
   18d70:	bl	11560 <strlen@plt>
   18d74:	mov	fp, r0
   18d78:	ldr	r0, [r5, #8]
   18d7c:	bl	11560 <strlen@plt>
   18d80:	add	r0, fp, r0
   18d84:	add	r0, r0, #1
   18d88:	bl	17eec <_obstack_memory_used@@Base+0xab8>
   18d8c:	ldr	r3, [sp]
   18d90:	mov	r8, r0
   18d94:	cmp	r3, #0
   18d98:	cmpne	r0, #0
   18d9c:	bne	18db4 <_obstack_memory_used@@Base+0x1980>
   18da0:	ldr	r3, [pc, #420]	; 18f4c <_obstack_memory_used@@Base+0x1b18>
   18da4:	movw	r2, #970	; 0x3ca
   18da8:	ldr	r1, [pc, #388]	; 18f34 <_obstack_memory_used@@Base+0x1b00>
   18dac:	ldr	r0, [pc, #412]	; 18f50 <_obstack_memory_used@@Base+0x1b1c>
   18db0:	b	18aa4 <_obstack_memory_used@@Base+0x1670>
   18db4:	ldr	r2, [pc, #392]	; 18f44 <_obstack_memory_used@@Base+0x1b10>
   18db8:	ldr	r3, [sp, #12]
   18dbc:	cmp	r3, r2
   18dc0:	bls	18dd8 <_obstack_memory_used@@Base+0x19a4>
   18dc4:	ldr	r3, [pc, #384]	; 18f4c <_obstack_memory_used@@Base+0x1b18>
   18dc8:	mov	r2, #972	; 0x3cc
   18dcc:	ldr	r1, [pc, #352]	; 18f34 <_obstack_memory_used@@Base+0x1b00>
   18dd0:	ldr	r0, [pc, #380]	; 18f54 <_obstack_memory_used@@Base+0x1b20>
   18dd4:	b	18aa4 <_obstack_memory_used@@Base+0x1670>
   18dd8:	ldm	r4, {r3, sl}
   18ddc:	ldr	r0, [sp]
   18de0:	str	r3, [sp, #16]
   18de4:	mov	r3, #28
   18de8:	ldr	r1, [sp, #16]
   18dec:	mul	r7, r3, sl
   18df0:	mov	r2, r7
   18df4:	bl	11530 <mempcpy@plt>
   18df8:	ldm	r5, {r1, r2}
   18dfc:	mov	r3, #28
   18e00:	str	r2, [sp, #4]
   18e04:	mul	r2, r3, r2
   18e08:	bl	11434 <memcpy@plt>
   18e0c:	ldr	r3, [r4, #8]
   18e10:	mov	r2, fp
   18e14:	mov	r0, r8
   18e18:	mov	r1, r3
   18e1c:	str	r3, [sp, #20]
   18e20:	bl	11434 <memcpy@plt>
   18e24:	ldr	r1, [sp]
   18e28:	ldr	r3, [sp, #20]
   18e2c:	cmp	sl, #0
   18e30:	bne	18e84 <_obstack_memory_used@@Base+0x1a50>
   18e34:	ldr	r3, [sp]
   18e38:	add	r1, r8, fp
   18e3c:	add	r7, r7, #28
   18e40:	mov	sl, r1
   18e44:	ldr	r2, [r5, #8]
   18e48:	add	r7, r3, r7
   18e4c:	ldr	r3, [sp, #4]
   18e50:	cmp	r3, #0
   18e54:	bne	18ea0 <_obstack_memory_used@@Base+0x1a6c>
   18e58:	strb	r3, [sl]
   18e5c:	ldr	r0, [sp, #16]
   18e60:	bl	17030 <argp_usage@@Base+0x170>
   18e64:	ldr	r0, [r4, #8]
   18e68:	bl	17030 <argp_usage@@Base+0x170>
   18e6c:	ldr	r3, [sp]
   18e70:	str	r3, [r4]
   18e74:	ldr	r3, [sp, #12]
   18e78:	str	r8, [r4, #8]
   18e7c:	str	r3, [r4, #4]
   18e80:	b	18d38 <_obstack_memory_used@@Base+0x1904>
   18e84:	ldr	r2, [r1, #8]
   18e88:	sub	sl, sl, #1
   18e8c:	add	r1, r1, #28
   18e90:	sub	r2, r2, r3
   18e94:	add	r2, r8, r2
   18e98:	str	r2, [r1, #-20]	; 0xffffffec
   18e9c:	b	18e2c <_obstack_memory_used@@Base+0x19f8>
   18ea0:	ldr	fp, [r7, #-28]	; 0xffffffe4
   18ea4:	str	sl, [r7, #-20]	; 0xffffffec
   18ea8:	ldr	r3, [r7, #-24]	; 0xffffffe8
   18eac:	cmp	r3, #0
   18eb0:	bne	18ec8 <_obstack_memory_used@@Base+0x1a94>
   18eb4:	ldr	r3, [sp, #4]
   18eb8:	add	r7, r7, #28
   18ebc:	sub	r3, r3, #1
   18ec0:	str	r3, [sp, #4]
   18ec4:	b	18e4c <_obstack_memory_used@@Base+0x1a18>
   18ec8:	mov	r0, fp
   18ecc:	str	r1, [sp, #20]
   18ed0:	strd	r2, [sp, #24]
   18ed4:	bl	16ed4 <argp_usage@@Base+0x14>
   18ed8:	cmp	r0, #0
   18edc:	add	r1, sp, #20
   18ee0:	ldm	r1, {r1, r2, r3}
   18ee4:	beq	18efc <_obstack_memory_used@@Base+0x1ac8>
   18ee8:	ldrb	ip, [r2]
   18eec:	ldr	r0, [fp, #4]
   18ef0:	cmp	ip, r0
   18ef4:	moveq	r0, r8
   18ef8:	beq	18f18 <_obstack_memory_used@@Base+0x1ae4>
   18efc:	add	fp, fp, #24
   18f00:	sub	r3, r3, #1
   18f04:	b	18eac <_obstack_memory_used@@Base+0x1a78>
   18f08:	ldrb	lr, [lr]
   18f0c:	add	r0, r0, #1
   18f10:	cmp	lr, ip
   18f14:	beq	18f28 <_obstack_memory_used@@Base+0x1af4>
   18f18:	cmp	r1, r0
   18f1c:	mov	lr, r0
   18f20:	bhi	18f08 <_obstack_memory_used@@Base+0x1ad4>
   18f24:	strb	ip, [sl], #1
   18f28:	add	r2, r2, #1
   18f2c:	b	18efc <_obstack_memory_used@@Base+0x1ac8>
   18f30:	andeq	sp, r1, r4, asr pc
   18f34:	andeq	lr, r1, r6, lsr r0
   18f38:	andeq	lr, r1, r2, asr #32
   18f3c:	andeq	lr, r1, r6, asr #32
   18f40:	andeq	lr, r1, r6, asr r0
   18f44:	stmdbeq	r4!, {r0, r3, r6, r9, ip, pc}
   18f48:	andeq	lr, r1, r9, ror r0
   18f4c:	andeq	sp, r1, sp, asr pc
   18f50:	strheq	lr, [r1], -r2
   18f54:	andeq	lr, r1, lr, ror r0
   18f58:	push	{r4, r5, r6, lr}
   18f5c:	mov	r4, r0
   18f60:	mov	r5, r1
   18f64:	ldr	r0, [r0, #12]
   18f68:	ldr	r1, [r1, #12]
   18f6c:	cmp	r0, r1
   18f70:	bne	18fa4 <_obstack_memory_used@@Base+0x1b70>
   18f74:	ldr	r0, [r5, #8]
   18f78:	ldr	r3, [r4, #8]
   18f7c:	mvn	r2, r0
   18f80:	lsr	r2, r2, #31
   18f84:	cmp	r2, r3, lsr #31
   18f88:	subne	r0, r3, r0
   18f8c:	subeq	r0, r0, r3
   18f90:	cmp	r0, #0
   18f94:	ldreq	r3, [r4, #4]
   18f98:	ldreq	r0, [r5, #4]
   18f9c:	subeq	r0, r0, r3
   18fa0:	pop	{r4, r5, r6, pc}
   18fa4:	bl	18f58 <_obstack_memory_used@@Base+0x1b24>
   18fa8:	cmp	r0, #0
   18fac:	beq	18f74 <_obstack_memory_used@@Base+0x1b40>
   18fb0:	pop	{r4, r5, r6, pc}
   18fb4:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
   18fb8:	mov	r6, r0
   18fbc:	mov	r5, r1
   18fc0:	ldr	r0, [r0, #16]
   18fc4:	cmp	r0, #0
   18fc8:	movne	r3, r0
   18fcc:	bne	18fdc <_obstack_memory_used@@Base+0x1ba8>
   18fd0:	ldr	r3, [r6, #12]
   18fd4:	b	18fec <_obstack_memory_used@@Base+0x1bb8>
   18fd8:	mov	r3, r2
   18fdc:	ldr	r2, [r3, #12]
   18fe0:	cmp	r2, #0
   18fe4:	bne	18fd8 <_obstack_memory_used@@Base+0x1ba4>
   18fe8:	ldr	r3, [r3, #8]
   18fec:	ldr	r1, [r5, #16]
   18ff0:	cmp	r1, #0
   18ff4:	movne	r2, r1
   18ff8:	bne	19008 <_obstack_memory_used@@Base+0x1bd4>
   18ffc:	ldr	r4, [r5, #12]
   19000:	b	19018 <_obstack_memory_used@@Base+0x1be4>
   19004:	mov	r2, ip
   19008:	ldr	ip, [r2, #12]
   1900c:	cmp	ip, #0
   19010:	bne	19004 <_obstack_memory_used@@Base+0x1bd0>
   19014:	ldr	r4, [r2, #8]
   19018:	mvn	r2, r4
   1901c:	lsr	r2, r2, #31
   19020:	cmp	r2, r3, lsr #31
   19024:	subne	r4, r3, r4
   19028:	subeq	r4, r4, r3
   1902c:	cmp	r4, #0
   19030:	bne	19084 <_obstack_memory_used@@Base+0x1c50>
   19034:	adds	r4, r1, #0
   19038:	movne	r4, #1
   1903c:	cmp	r0, #0
   19040:	rsbeq	r4, r4, #0
   19044:	rsbne	r4, r4, #1
   19048:	cmp	r4, #0
   1904c:	bne	19084 <_obstack_memory_used@@Base+0x1c50>
   19050:	cmp	r0, #0
   19054:	beq	190c0 <_obstack_memory_used@@Base+0x1c8c>
   19058:	ldr	r3, [r0, #20]
   1905c:	ldr	r2, [r1, #20]
   19060:	cmp	r3, r2
   19064:	ble	19090 <_obstack_memory_used@@Base+0x1c5c>
   19068:	ldr	r0, [r0, #12]
   1906c:	ldr	r3, [r0, #20]
   19070:	cmp	r2, r3
   19074:	blt	19068 <_obstack_memory_used@@Base+0x1c34>
   19078:	bl	18f58 <_obstack_memory_used@@Base+0x1b24>
   1907c:	subs	r4, r0, #0
   19080:	moveq	r4, #1
   19084:	mov	r0, r4
   19088:	add	sp, sp, #8
   1908c:	pop	{r4, r5, r6, r7, r8, pc}
   19090:	bge	190b4 <_obstack_memory_used@@Base+0x1c80>
   19094:	ldr	r1, [r1, #12]
   19098:	ldr	r2, [r1, #20]
   1909c:	cmp	r3, r2
   190a0:	blt	19094 <_obstack_memory_used@@Base+0x1c60>
   190a4:	bl	18f58 <_obstack_memory_used@@Base+0x1b24>
   190a8:	subs	r4, r0, #0
   190ac:	mvneq	r4, #0
   190b0:	b	19084 <_obstack_memory_used@@Base+0x1c50>
   190b4:	bl	18f58 <_obstack_memory_used@@Base+0x1b24>
   190b8:	subs	r4, r0, #0
   190bc:	bne	19084 <_obstack_memory_used@@Base+0x1c50>
   190c0:	ldr	r4, [r5, #12]
   190c4:	ldr	r0, [r6, #12]
   190c8:	mvn	r3, r4
   190cc:	lsr	r3, r3, #31
   190d0:	cmp	r3, r0, lsr #31
   190d4:	subne	r4, r0, r4
   190d8:	subeq	r4, r4, r0
   190dc:	cmp	r4, #0
   190e0:	bne	19084 <_obstack_memory_used@@Base+0x1c50>
   190e4:	mov	r0, r6
   190e8:	bl	18008 <_obstack_memory_used@@Base+0xbd4>
   190ec:	mov	r7, r0
   190f0:	mov	r0, r5
   190f4:	str	r7, [sp]
   190f8:	bl	18008 <_obstack_memory_used@@Base+0xbd4>
   190fc:	ldr	r3, [r6]
   19100:	adds	r7, r7, #0
   19104:	movne	r7, #1
   19108:	str	r0, [sp, #4]
   1910c:	ldr	r3, [r3, #12]
   19110:	ands	r3, r7, r3, lsr #3
   19114:	beq	19128 <_obstack_memory_used@@Base+0x1cf4>
   19118:	mov	r0, sp
   1911c:	bl	184a4 <_obstack_memory_used@@Base+0x1070>
   19120:	adds	r4, r0, #0
   19124:	movne	r4, #1
   19128:	ldr	r3, [r5]
   1912c:	ldr	r0, [r3, #12]
   19130:	ands	r0, r0, #8
   19134:	beq	19154 <_obstack_memory_used@@Base+0x1d20>
   19138:	ldr	r0, [sp, #4]
   1913c:	cmp	r0, #0
   19140:	beq	19154 <_obstack_memory_used@@Base+0x1d20>
   19144:	add	r0, sp, #4
   19148:	bl	184a4 <_obstack_memory_used@@Base+0x1070>
   1914c:	adds	r0, r0, #0
   19150:	movne	r0, #1
   19154:	subs	r4, r4, r0
   19158:	bne	19084 <_obstack_memory_used@@Base+0x1c50>
   1915c:	ldr	r2, [r6, #20]
   19160:	mov	r3, r4
   19164:	mov	r0, r6
   19168:	ldr	r1, [pc, #220]	; 1924c <_obstack_memory_used@@Base+0x1e18>
   1916c:	ldr	r2, [r2, #24]
   19170:	bl	17f5c <_obstack_memory_used@@Base+0xb28>
   19174:	ldr	r2, [r5, #20]
   19178:	uxtb	r6, r0
   1917c:	mov	r3, r4
   19180:	mov	r0, r5
   19184:	ldr	r1, [pc, #192]	; 1924c <_obstack_memory_used@@Base+0x1e18>
   19188:	ldr	r2, [r2, #24]
   1918c:	bl	17f5c <_obstack_memory_used@@Base+0xb28>
   19190:	cmp	r6, #0
   19194:	uxtb	r5, r0
   19198:	beq	191a4 <_obstack_memory_used@@Base+0x1d70>
   1919c:	mov	r7, r6
   191a0:	b	191b4 <_obstack_memory_used@@Base+0x1d80>
   191a4:	ldr	r3, [sp]
   191a8:	cmp	r3, #0
   191ac:	ldrbne	r7, [r3]
   191b0:	beq	1919c <_obstack_memory_used@@Base+0x1d68>
   191b4:	cmp	r5, #0
   191b8:	beq	191c4 <_obstack_memory_used@@Base+0x1d90>
   191bc:	mov	r8, r5
   191c0:	b	191d4 <_obstack_memory_used@@Base+0x1da0>
   191c4:	ldr	r3, [sp, #4]
   191c8:	cmp	r3, #0
   191cc:	ldrbne	r8, [r3]
   191d0:	beq	191bc <_obstack_memory_used@@Base+0x1d88>
   191d4:	bl	1150c <__ctype_tolower_loc@plt>
   191d8:	ldr	r3, [r0]
   191dc:	ldr	r4, [r3, r7, lsl #2]
   191e0:	ldr	r0, [r3, r8, lsl #2]
   191e4:	subs	r4, r4, r0
   191e8:	bne	19084 <_obstack_memory_used@@Base+0x1c50>
   191ec:	subs	r4, r8, r7
   191f0:	bne	19084 <_obstack_memory_used@@Base+0x1c50>
   191f4:	adds	r4, r5, #0
   191f8:	movne	r4, #1
   191fc:	cmp	r6, #0
   19200:	rsbeq	r4, r4, #0
   19204:	rsbne	r4, r4, #1
   19208:	cmp	r4, #0
   1920c:	bne	19084 <_obstack_memory_used@@Base+0x1c50>
   19210:	cmp	r6, #0
   19214:	bne	19084 <_obstack_memory_used@@Base+0x1c50>
   19218:	ldrd	r0, [sp]
   1921c:	adds	r4, r1, #0
   19220:	movne	r4, #1
   19224:	cmp	r0, #0
   19228:	rsbeq	r4, r4, #0
   1922c:	rsbne	r4, r4, #1
   19230:	cmp	r4, #0
   19234:	bne	19084 <_obstack_memory_used@@Base+0x1c50>
   19238:	cmp	r0, #0
   1923c:	beq	19084 <_obstack_memory_used@@Base+0x1c50>
   19240:	bl	1147c <strcasecmp@plt>
   19244:	mov	r4, r0
   19248:	b	19084 <_obstack_memory_used@@Base+0x1c50>
   1924c:	strdeq	r7, [r1], -r0

00019250 <argp_failure@@Base>:
   19250:	push	{r3}		; (str r3, [sp, #-4]!)
   19254:	push	{r4, r5, r6, r7, r8, lr}
   19258:	subs	r5, r0, #0
   1925c:	sub	sp, sp, #204	; 0xcc
   19260:	ldr	r8, [sp, #228]	; 0xe4
   19264:	beq	19288 <argp_failure@@Base+0x38>
   19268:	ldr	r3, [r5, #16]
   1926c:	tst	r3, #2
   19270:	ldreq	r4, [r5, #44]	; 0x2c
   19274:	beq	19290 <argp_failure@@Base+0x40>
   19278:	add	sp, sp, #204	; 0xcc
   1927c:	pop	{r4, r5, r6, r7, r8, lr}
   19280:	add	sp, sp, #4
   19284:	bx	lr
   19288:	ldr	r3, [pc, #244]	; 19384 <argp_failure@@Base+0x134>
   1928c:	ldr	r4, [r3]
   19290:	cmp	r4, #0
   19294:	beq	19278 <argp_failure@@Base+0x28>
   19298:	mov	r0, r4
   1929c:	mov	r6, r2
   192a0:	mov	r7, r1
   192a4:	bl	11650 <flockfile@plt>
   192a8:	cmp	r5, #0
   192ac:	mov	r1, r4
   192b0:	ldreq	r3, [pc, #208]	; 19388 <argp_failure@@Base+0x138>
   192b4:	ldrne	r0, [r5, #40]	; 0x28
   192b8:	ldreq	r0, [r3]
   192bc:	bl	11398 <fputs_unlocked@plt>
   192c0:	cmp	r8, #0
   192c4:	beq	192f8 <argp_failure@@Base+0xa8>
   192c8:	add	r3, sp, #232	; 0xe8
   192cc:	mov	r1, r4
   192d0:	mov	r0, #58	; 0x3a
   192d4:	str	r3, [sp]
   192d8:	bl	11710 <putc_unlocked@plt>
   192dc:	mov	r1, r4
   192e0:	mov	r0, #32
   192e4:	bl	11710 <putc_unlocked@plt>
   192e8:	mov	r1, r8
   192ec:	mov	r0, r4
   192f0:	ldr	r2, [sp]
   192f4:	bl	11620 <vfprintf@plt>
   192f8:	cmp	r6, #0
   192fc:	beq	1934c <argp_failure@@Base+0xfc>
   19300:	mov	r1, r4
   19304:	mov	r0, #58	; 0x3a
   19308:	bl	11710 <putc_unlocked@plt>
   1930c:	mov	r1, r4
   19310:	mov	r0, #32
   19314:	bl	11710 <putc_unlocked@plt>
   19318:	mov	r2, #200	; 0xc8
   1931c:	mov	r1, sp
   19320:	mov	r0, r6
   19324:	bl	1159c <strerror_r@plt>
   19328:	cmp	r0, #0
   1932c:	bne	19344 <argp_failure@@Base+0xf4>
   19330:	mov	r0, r6
   19334:	bl	11500 <strerror@plt>
   19338:	ldr	r3, [pc, #76]	; 1938c <argp_failure@@Base+0x13c>
   1933c:	cmp	r0, #0
   19340:	moveq	r0, r3
   19344:	mov	r1, r4
   19348:	bl	11398 <fputs_unlocked@plt>
   1934c:	mov	r1, r4
   19350:	mov	r0, #10
   19354:	bl	11710 <putc_unlocked@plt>
   19358:	mov	r0, r4
   1935c:	bl	11488 <funlockfile@plt>
   19360:	cmp	r7, #0
   19364:	beq	19278 <argp_failure@@Base+0x28>
   19368:	cmp	r5, #0
   1936c:	beq	1937c <argp_failure@@Base+0x12c>
   19370:	ldr	r3, [r5, #16]
   19374:	tst	r3, #32
   19378:	bne	19278 <argp_failure@@Base+0x28>
   1937c:	mov	r0, r7
   19380:	bl	11548 <exit@plt>
   19384:	andeq	pc, r2, r8, asr #22
   19388:	andeq	pc, r2, r0, asr #22
   1938c:	andeq	lr, r1, fp, asr #1
   19390:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19394:	add	fp, sp, #32
   19398:	sub	sp, sp, #108	; 0x6c
   1939c:	str	r0, [fp, #-104]	; 0xffffff98
   193a0:	str	r3, [fp, #-100]	; 0xffffff9c
   193a4:	subs	r3, r2, #0
   193a8:	str	r3, [fp, #-108]	; 0xffffff94
   193ac:	str	r1, [fp, #-96]	; 0xffffffa0
   193b0:	beq	196f0 <argp_failure@@Base+0x4a0>
   193b4:	ldr	r5, [pc, #2580]	; 19dd0 <argp_failure@@Base+0xb80>
   193b8:	mov	r0, r3
   193bc:	bl	11650 <flockfile@plt>
   193c0:	ldr	r3, [r5, #36]	; 0x24
   193c4:	cmp	r3, #0
   193c8:	bne	196cc <argp_failure@@Base+0x47c>
   193cc:	ldr	r0, [pc, #2560]	; 19dd4 <argp_failure@@Base+0xb84>
   193d0:	bl	114d0 <getenv@plt>
   193d4:	mov	lr, r5
   193d8:	mov	r6, r0
   193dc:	ldm	lr!, {r0, r1, r2, r3}
   193e0:	sub	ip, fp, #76	; 0x4c
   193e4:	cmp	r6, #0
   193e8:	stmia	ip!, {r0, r1, r2, r3}
   193ec:	ldm	lr!, {r0, r1, r2, r3}
   193f0:	stmia	ip!, {r0, r1, r2, r3}
   193f4:	ldm	lr, {r0, r1}
   193f8:	stm	ip, {r0, r1}
   193fc:	beq	196cc <argp_failure@@Base+0x47c>
   19400:	ldrb	r3, [r6]
   19404:	cmp	r3, #0
   19408:	beq	19638 <argp_failure@@Base+0x3e8>
   1940c:	bl	1153c <__ctype_b_loc@plt>
   19410:	mov	r1, r6
   19414:	ldr	r8, [r0]
   19418:	b	19420 <argp_failure@@Base+0x1d0>
   1941c:	mov	r1, r3
   19420:	mov	r3, r1
   19424:	mov	r7, r1
   19428:	ldrb	r0, [r3], #1
   1942c:	lsl	r2, r0, #1
   19430:	ldrh	r2, [r8, r2]
   19434:	tst	r2, #8192	; 0x2000
   19438:	bne	1941c <argp_failure@@Base+0x1cc>
   1943c:	ands	r2, r2, #1024	; 0x400
   19440:	beq	1961c <argp_failure@@Base+0x3cc>
   19444:	mov	ip, r1
   19448:	ldrb	r3, [ip], #1
   1944c:	lsl	r2, r3, #1
   19450:	cmp	r3, #45	; 0x2d
   19454:	cmpne	r3, #95	; 0x5f
   19458:	moveq	r3, #1
   1945c:	movne	r3, #0
   19460:	ldrh	r2, [r8, r2]
   19464:	ubfx	r2, r2, #3, #1
   19468:	orrs	r3, r2, r3
   1946c:	bne	19514 <argp_failure@@Base+0x2c4>
   19470:	sub	r9, r1, r7
   19474:	mov	r6, r1
   19478:	ldrb	r2, [r1], #1
   1947c:	lsl	r3, r2, #1
   19480:	ldrh	r3, [r8, r3]
   19484:	ands	r3, r3, #8192	; 0x2000
   19488:	bne	19474 <argp_failure@@Base+0x224>
   1948c:	cmp	r2, #44	; 0x2c
   19490:	cmpne	r2, #0
   19494:	beq	1951c <argp_failure@@Base+0x2cc>
   19498:	cmp	r2, #61	; 0x3d
   1949c:	bne	194c0 <argp_failure@@Base+0x270>
   194a0:	mov	r2, r1
   194a4:	mov	r6, r2
   194a8:	add	r2, r2, #1
   194ac:	ldrb	r3, [r6]
   194b0:	lsl	r3, r3, #1
   194b4:	ldrh	r3, [r8, r3]
   194b8:	tst	r3, #8192	; 0x2000
   194bc:	bne	194a4 <argp_failure@@Base+0x254>
   194c0:	ldrb	r3, [r6]
   194c4:	lsl	r3, r3, #1
   194c8:	ldrh	r4, [r8, r3]
   194cc:	ands	r4, r4, #2048	; 0x800
   194d0:	beq	195e8 <argp_failure@@Base+0x398>
   194d4:	mov	r0, r6
   194d8:	bl	11668 <atoi@plt>
   194dc:	mov	sl, r0
   194e0:	ldrb	r2, [r6, #1]!
   194e4:	lsl	r2, r2, #1
   194e8:	ldrh	r2, [r8, r2]
   194ec:	tst	r2, #2048	; 0x800
   194f0:	bne	194e0 <argp_failure@@Base+0x290>
   194f4:	mov	r2, r6
   194f8:	mov	r6, r2
   194fc:	ldrb	r1, [r2], #1
   19500:	lsl	r1, r1, #1
   19504:	ldrh	r4, [r8, r1]
   19508:	ands	r4, r4, #8192	; 0x2000
   1950c:	bne	194f8 <argp_failure@@Base+0x2a8>
   19510:	b	1954c <argp_failure@@Base+0x2fc>
   19514:	mov	r1, ip
   19518:	b	19444 <argp_failure@@Base+0x1f4>
   1951c:	cmp	r0, #110	; 0x6e
   19520:	bne	195e4 <argp_failure@@Base+0x394>
   19524:	ldrb	r2, [r7, #1]
   19528:	cmp	r2, #111	; 0x6f
   1952c:	bne	195e4 <argp_failure@@Base+0x394>
   19530:	ldrb	r2, [r7, #2]
   19534:	cmp	r2, #45	; 0x2d
   19538:	bne	195e4 <argp_failure@@Base+0x394>
   1953c:	add	r7, r7, #3
   19540:	sub	r9, r9, #3
   19544:	mov	sl, r3
   19548:	mov	r4, #1
   1954c:	ldr	r8, [pc, #2180]	; 19dd8 <argp_failure@@Base+0xb88>
   19550:	mov	r3, #9
   19554:	str	r3, [fp, #-112]	; 0xffffff90
   19558:	mov	r0, r8
   1955c:	bl	11560 <strlen@plt>
   19560:	cmp	r0, r9
   19564:	bne	19604 <argp_failure@@Base+0x3b4>
   19568:	mov	r2, r9
   1956c:	mov	r1, r8
   19570:	mov	r0, r7
   19574:	bl	116e0 <strncmp@plt>
   19578:	cmp	r0, #0
   1957c:	bne	19604 <argp_failure@@Base+0x3b4>
   19580:	cmp	r4, #0
   19584:	beq	195f0 <argp_failure@@Base+0x3a0>
   19588:	ldrb	r2, [r8, #14]
   1958c:	cmp	r2, #0
   19590:	bne	195f0 <argp_failure@@Base+0x3a0>
   19594:	ldr	r3, [pc, #2112]	; 19ddc <argp_failure@@Base+0xb8c>
   19598:	mov	r1, r2
   1959c:	str	r9, [sp]
   195a0:	str	r7, [sp, #4]
   195a4:	ldr	r0, [fp, #-96]	; 0xffffffa0
   195a8:	bl	19250 <argp_failure@@Base>
   195ac:	ldr	r3, [pc, #2092]	; 19de0 <argp_failure@@Base+0xb90>
   195b0:	cmp	r8, r3
   195b4:	bne	195d4 <argp_failure@@Base+0x384>
   195b8:	mov	r2, #0
   195bc:	ldr	r3, [pc, #2080]	; 19de4 <argp_failure@@Base+0xb94>
   195c0:	mov	r1, r2
   195c4:	str	r9, [sp]
   195c8:	str	r7, [sp, #4]
   195cc:	ldr	r0, [fp, #-96]	; 0xffffffa0
   195d0:	bl	19250 <argp_failure@@Base>
   195d4:	ldrb	r3, [r6]
   195d8:	cmp	r3, #44	; 0x2c
   195dc:	addeq	r6, r6, #1
   195e0:	b	19400 <argp_failure@@Base+0x1b0>
   195e4:	mov	r4, #1
   195e8:	mov	sl, r4
   195ec:	b	1954c <argp_failure@@Base+0x2fc>
   195f0:	ldrb	r2, [r8, #15]
   195f4:	sub	r3, fp, #36	; 0x24
   195f8:	add	r2, r3, r2
   195fc:	str	sl, [r2, #-40]	; 0xffffffd8
   19600:	b	195ac <argp_failure@@Base+0x35c>
   19604:	ldr	r3, [fp, #-112]	; 0xffffff90
   19608:	add	r8, r8, #16
   1960c:	subs	r3, r3, #1
   19610:	str	r3, [fp, #-112]	; 0xffffff90
   19614:	bne	19558 <argp_failure@@Base+0x308>
   19618:	b	195ac <argp_failure@@Base+0x35c>
   1961c:	cmp	r0, #0
   19620:	beq	1967c <argp_failure@@Base+0x42c>
   19624:	ldr	r3, [pc, #1980]	; 19de8 <argp_failure@@Base+0xb98>
   19628:	str	r1, [sp]
   1962c:	mov	r1, r2
   19630:	ldr	r0, [fp, #-96]	; 0xffffffa0
   19634:	bl	19250 <argp_failure@@Base>
   19638:	ldr	r3, [pc, #1944]	; 19dd8 <argp_failure@@Base+0xb88>
   1963c:	mov	r0, #9
   19640:	ldr	ip, [fp, #-44]	; 0xffffffd4
   19644:	subs	r0, r0, #1
   19648:	add	r3, r3, #16
   1964c:	bne	19684 <argp_failure@@Base+0x434>
   19650:	sub	lr, fp, #76	; 0x4c
   19654:	ldr	ip, [pc, #1908]	; 19dd0 <argp_failure@@Base+0xb80>
   19658:	ldm	lr!, {r0, r1, r2, r3}
   1965c:	stmia	ip!, {r0, r1, r2, r3}
   19660:	ldm	lr!, {r0, r1, r2, r3}
   19664:	stmia	ip!, {r0, r1, r2, r3}
   19668:	mov	r3, #1
   1966c:	ldm	lr, {r0, r1}
   19670:	stm	ip, {r0, r1}
   19674:	str	r3, [r5, #36]	; 0x24
   19678:	b	196cc <argp_failure@@Base+0x47c>
   1967c:	mov	r6, r1
   19680:	b	19400 <argp_failure@@Base+0x1b0>
   19684:	ldrb	r2, [r3, #14]
   19688:	cmp	r2, #0
   1968c:	bne	19644 <argp_failure@@Base+0x3f4>
   19690:	ldrb	r1, [r3, #15]
   19694:	cmp	r1, #32
   19698:	beq	19644 <argp_failure@@Base+0x3f4>
   1969c:	sub	lr, fp, #36	; 0x24
   196a0:	add	r1, lr, r1
   196a4:	ldr	r1, [r1, #-40]	; 0xffffffd8
   196a8:	cmp	r1, ip
   196ac:	blt	19644 <argp_failure@@Base+0x3f4>
   196b0:	str	r3, [sp, #4]
   196b4:	mov	r1, r2
   196b8:	ldr	r3, [pc, #1836]	; 19dec <argp_failure@@Base+0xb9c>
   196bc:	ldr	r0, [fp, #-96]	; 0xffffffa0
   196c0:	str	r3, [sp]
   196c4:	ldr	r3, [pc, #1828]	; 19df0 <argp_failure@@Base+0xba0>
   196c8:	bl	19250 <argp_failure@@Base>
   196cc:	mov	r3, #0
   196d0:	ldr	r0, [fp, #-108]	; 0xffffff94
   196d4:	mov	r1, r3
   196d8:	ldr	r2, [r5, #32]
   196dc:	bl	1aaa8 <argp_error@@Base+0xba8>
   196e0:	subs	r4, r0, #0
   196e4:	bne	196f8 <argp_failure@@Base+0x4a8>
   196e8:	ldr	r0, [fp, #-108]	; 0xffffff94
   196ec:	bl	11488 <funlockfile@plt>
   196f0:	sub	sp, fp, #32
   196f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   196f8:	ldr	r3, [fp, #-100]	; 0xffffff9c
   196fc:	ands	r3, r3, #11
   19700:	moveq	sl, r3
   19704:	beq	19764 <argp_failure@@Base+0x514>
   19708:	mov	r1, #0
   1970c:	ldr	r0, [fp, #-104]	; 0xffffff98
   19710:	bl	18a6c <_obstack_memory_used@@Base+0x1638>
   19714:	mov	sl, r0
   19718:	ldr	r1, [pc, #1748]	; 19df4 <argp_failure@@Base+0xba4>
   1971c:	bl	18878 <_obstack_memory_used@@Base+0x1444>
   19720:	ldr	r1, [pc, #1744]	; 19df8 <argp_failure@@Base+0xba8>
   19724:	mov	r0, sl
   19728:	bl	18878 <_obstack_memory_used@@Base+0x1444>
   1972c:	ldr	r1, [sl, #4]
   19730:	cmp	r1, #0
   19734:	beq	19764 <argp_failure@@Base+0x514>
   19738:	ldr	r0, [sl]
   1973c:	mov	r3, #0
   19740:	mov	r2, r0
   19744:	str	r3, [r2, #24]
   19748:	add	r3, r3, #1
   1974c:	add	r2, r2, #28
   19750:	cmp	r1, r3
   19754:	bne	19744 <argp_failure@@Base+0x4f4>
   19758:	ldr	r3, [pc, #1692]	; 19dfc <argp_failure@@Base+0xbac>
   1975c:	mov	r2, #28
   19760:	bl	11680 <qsort@plt>
   19764:	ldr	r3, [fp, #-100]	; 0xffffff9c
   19768:	ands	r3, r3, #3
   1976c:	moveq	r5, r3
   19770:	beq	19860 <argp_failure@@Base+0x610>
   19774:	ldr	r0, [fp, #-104]	; 0xffffff98
   19778:	mov	r8, #1
   1977c:	bl	18178 <_obstack_memory_used@@Base+0xd44>
   19780:	add	r3, r0, #7
   19784:	mov	r2, r0
   19788:	ldr	r7, [pc, #1648]	; 19e00 <argp_failure@@Base+0xbb0>
   1978c:	bic	r3, r3, #7
   19790:	mov	r1, #0
   19794:	sub	sp, sp, r3
   19798:	add	r6, sp, #8
   1979c:	mov	r0, r6
   197a0:	bl	115b4 <memset@plt>
   197a4:	mov	r0, r4
   197a8:	ldr	r1, [r5, #28]
   197ac:	bl	1b204 <argp_error@@Base+0x1304>
   197b0:	cmp	r8, #0
   197b4:	mov	r1, r7
   197b8:	ldr	r3, [fp, #4]
   197bc:	mov	r9, r0
   197c0:	mov	r0, r4
   197c4:	str	r6, [fp, #-76]	; 0xffffffb4
   197c8:	ldrne	r2, [pc, #1588]	; 19e04 <argp_failure@@Base+0xbb4>
   197cc:	ldreq	r2, [pc, #1588]	; 19e08 <argp_failure@@Base+0xbb8>
   197d0:	bl	1b048 <argp_error@@Base+0x1148>
   197d4:	mov	r0, r4
   197d8:	ldr	r1, [r5, #28]
   197dc:	bl	1b1a4 <argp_error@@Base+0x12a4>
   197e0:	ldr	r3, [fp, #-100]	; 0xffffff9c
   197e4:	mov	r8, r0
   197e8:	tst	r3, #2
   197ec:	beq	19a28 <argp_failure@@Base+0x7d8>
   197f0:	ldr	r3, [sl, #4]
   197f4:	cmp	r3, #0
   197f8:	beq	19808 <argp_failure@@Base+0x5b8>
   197fc:	ldr	r1, [pc, #1544]	; 19e0c <argp_failure@@Base+0xbbc>
   19800:	mov	r0, r4
   19804:	bl	1b11c <argp_error@@Base+0x121c>
   19808:	sub	r2, fp, #76	; 0x4c
   1980c:	mov	r3, #1
   19810:	str	r4, [sp]
   19814:	ldr	r0, [fp, #-104]	; 0xffffff98
   19818:	ldr	r1, [fp, #-96]	; 0xffffffa0
   1981c:	bl	18550 <_obstack_memory_used@@Base+0x111c>
   19820:	mov	r3, r0
   19824:	mov	r1, r9
   19828:	mov	r0, r4
   1982c:	str	r3, [fp, #-112]	; 0xffffff90
   19830:	bl	1b204 <argp_error@@Base+0x1304>
   19834:	mov	r1, r8
   19838:	mov	r0, r4
   1983c:	bl	1b1a4 <argp_error@@Base+0x12a4>
   19840:	mov	r1, #10
   19844:	mov	r0, r4
   19848:	bl	1b15c <argp_error@@Base+0x125c>
   1984c:	ldr	r3, [fp, #-112]	; 0xffffff90
   19850:	mov	r8, #0
   19854:	cmp	r3, r8
   19858:	bne	197a4 <argp_failure@@Base+0x554>
   1985c:	mov	r5, #1
   19860:	ldr	r3, [fp, #-100]	; 0xffffff9c
   19864:	tst	r3, #16
   19868:	beq	1988c <argp_failure@@Base+0x63c>
   1986c:	mov	r3, #1
   19870:	ldr	r0, [fp, #-104]	; 0xffffff98
   19874:	stm	sp, {r3, r4}
   19878:	mov	r3, #0
   1987c:	mov	r2, r3
   19880:	ldr	r1, [fp, #-96]	; 0xffffffa0
   19884:	bl	181d0 <_obstack_memory_used@@Base+0xd9c>
   19888:	orr	r5, r5, r0
   1988c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   19890:	tst	r3, #4
   19894:	beq	198b0 <argp_failure@@Base+0x660>
   19898:	ldr	r3, [fp, #4]
   1989c:	mov	r0, r4
   198a0:	mov	r5, #1
   198a4:	ldr	r1, [pc, #1380]	; 19e10 <argp_failure@@Base+0xbc0>
   198a8:	mov	r2, r3
   198ac:	bl	1b048 <argp_error@@Base+0x1148>
   198b0:	ldr	r3, [fp, #-100]	; 0xffffff9c
   198b4:	tst	r3, #8
   198b8:	beq	19994 <argp_failure@@Base+0x744>
   198bc:	ldr	r3, [sl, #4]
   198c0:	cmp	r3, #0
   198c4:	beq	19994 <argp_failure@@Base+0x744>
   198c8:	cmp	r5, #0
   198cc:	beq	198dc <argp_failure@@Base+0x68c>
   198d0:	mov	r1, #10
   198d4:	mov	r0, r4
   198d8:	bl	1b15c <argp_error@@Base+0x125c>
   198dc:	mov	r3, #0
   198e0:	ldr	r7, [pc, #1256]	; 19dd0 <argp_failure@@Base+0xb80>
   198e4:	ldr	r6, [sl]
   198e8:	str	r3, [fp, #-88]	; 0xffffffa8
   198ec:	str	r3, [fp, #-84]	; 0xffffffac
   198f0:	str	r3, [fp, #-80]	; 0xffffffb0
   198f4:	ldr	r3, [sl, #4]
   198f8:	str	r3, [fp, #-112]	; 0xffffff90
   198fc:	ldr	r3, [fp, #-112]	; 0xffffff90
   19900:	cmp	r3, #0
   19904:	bne	19a44 <argp_failure@@Base+0x7f4>
   19908:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1990c:	cmp	r3, #0
   19910:	beq	19990 <argp_failure@@Base+0x740>
   19914:	ldr	r3, [pc, #1204]	; 19dd0 <argp_failure@@Base+0xb80>
   19918:	ldr	r3, [r3, #4]
   1991c:	cmp	r3, #0
   19920:	beq	19990 <argp_failure@@Base+0x740>
   19924:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19928:	ldr	r1, [pc, #1252]	; 19e14 <argp_failure@@Base+0xbc4>
   1992c:	ldr	r0, [pc, #1252]	; 19e18 <argp_failure@@Base+0xbc8>
   19930:	cmp	r3, #0
   19934:	ldrne	r2, [r3]
   19938:	ldreq	r2, [fp, #-96]	; 0xffffffa0
   1993c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19940:	bl	1850c <_obstack_memory_used@@Base+0x10d8>
   19944:	subs	r5, r0, #0
   19948:	beq	19990 <argp_failure@@Base+0x740>
   1994c:	ldrb	r3, [r5]
   19950:	cmp	r3, #0
   19954:	beq	1997c <argp_failure@@Base+0x72c>
   19958:	mov	r1, #10
   1995c:	mov	r0, r4
   19960:	bl	1b15c <argp_error@@Base+0x125c>
   19964:	mov	r1, r5
   19968:	mov	r0, r4
   1996c:	bl	1b11c <argp_error@@Base+0x121c>
   19970:	mov	r1, #10
   19974:	mov	r0, r4
   19978:	bl	1b15c <argp_error@@Base+0x125c>
   1997c:	ldr	r3, [pc, #1172]	; 19e18 <argp_failure@@Base+0xbc8>
   19980:	cmp	r5, r3
   19984:	beq	19990 <argp_failure@@Base+0x740>
   19988:	mov	r0, r5
   1998c:	bl	17030 <argp_usage@@Base+0x170>
   19990:	mov	r5, #1
   19994:	ldr	r3, [fp, #-100]	; 0xffffff9c
   19998:	tst	r3, #32
   1999c:	beq	199c0 <argp_failure@@Base+0x770>
   199a0:	mov	r3, #0
   199a4:	mov	r2, #1
   199a8:	ldr	r0, [fp, #-104]	; 0xffffff98
   199ac:	stm	sp, {r3, r4}
   199b0:	mov	r3, r5
   199b4:	ldr	r1, [fp, #-96]	; 0xffffffa0
   199b8:	bl	181d0 <_obstack_memory_used@@Base+0xd9c>
   199bc:	orr	r5, r5, r0
   199c0:	ldr	r3, [fp, #-100]	; 0xffffff9c
   199c4:	tst	r3, #64	; 0x40
   199c8:	beq	19a04 <argp_failure@@Base+0x7b4>
   199cc:	ldr	r3, [pc, #1096]	; 19e1c <argp_failure@@Base+0xbcc>
   199d0:	ldr	r2, [r3]
   199d4:	mov	r6, r3
   199d8:	cmp	r2, #0
   199dc:	beq	19a04 <argp_failure@@Base+0x7b4>
   199e0:	cmp	r5, #0
   199e4:	beq	199f4 <argp_failure@@Base+0x7a4>
   199e8:	mov	r1, #10
   199ec:	mov	r0, r4
   199f0:	bl	1b15c <argp_error@@Base+0x125c>
   199f4:	ldr	r1, [pc, #1060]	; 19e20 <argp_failure@@Base+0xbd0>
   199f8:	mov	r0, r4
   199fc:	ldr	r2, [r6]
   19a00:	bl	1b048 <argp_error@@Base+0x1148>
   19a04:	ldr	r0, [fp, #-108]	; 0xffffff94
   19a08:	bl	11488 <funlockfile@plt>
   19a0c:	cmp	sl, #0
   19a10:	beq	19a1c <argp_failure@@Base+0x7cc>
   19a14:	mov	r0, sl
   19a18:	bl	1812c <_obstack_memory_used@@Base+0xcf8>
   19a1c:	mov	r0, r4
   19a20:	bl	1af28 <argp_error@@Base+0x1028>
   19a24:	b	196f0 <argp_failure@@Base+0x4a0>
   19a28:	mov	r1, r4
   19a2c:	mov	r0, sl
   19a30:	bl	188e4 <_obstack_memory_used@@Base+0x14b0>
   19a34:	ldr	r3, [fp, #-100]	; 0xffffff9c
   19a38:	orr	r3, r3, #2
   19a3c:	str	r3, [fp, #-100]	; 0xffffff9c
   19a40:	b	19808 <argp_failure@@Base+0x5b8>
   19a44:	mov	r1, #0
   19a48:	mov	r0, r4
   19a4c:	ldr	r5, [r6]
   19a50:	ldr	r9, [r6, #8]
   19a54:	bl	1b1a4 <argp_error@@Base+0x12a4>
   19a58:	ldr	r3, [r4, #12]
   19a5c:	str	r3, [fp, #-128]	; 0xffffff80
   19a60:	sub	r3, fp, #88	; 0x58
   19a64:	str	r0, [fp, #-124]	; 0xffffff84
   19a68:	str	r6, [fp, #-76]	; 0xffffffb4
   19a6c:	str	r3, [fp, #-68]	; 0xffffffbc
   19a70:	mov	r3, #1
   19a74:	str	r4, [fp, #-72]	; 0xffffffb8
   19a78:	str	r3, [fp, #-64]	; 0xffffffc0
   19a7c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19a80:	str	r3, [fp, #-60]	; 0xffffffc4
   19a84:	ldr	r3, [r5, #12]
   19a88:	ands	r3, r3, #8
   19a8c:	ldreq	r2, [r6, #4]
   19a90:	str	r3, [fp, #-116]	; 0xffffff8c
   19a94:	addeq	r3, r5, #24
   19a98:	beq	19ac8 <argp_failure@@Base+0x878>
   19a9c:	mov	r3, #0
   19aa0:	str	r3, [fp, #-116]	; 0xffffff8c
   19aa4:	b	19ad0 <argp_failure@@Base+0x880>
   19aa8:	ldr	r1, [r3, #-24]	; 0xffffffe8
   19aac:	cmp	r1, #0
   19ab0:	beq	19ac0 <argp_failure@@Base+0x870>
   19ab4:	ldr	r1, [r3, #-12]
   19ab8:	tst	r1, #2
   19abc:	beq	19bd8 <argp_failure@@Base+0x988>
   19ac0:	sub	r2, r2, #1
   19ac4:	add	r3, r3, #24
   19ac8:	cmp	r2, #0
   19acc:	bne	19aa8 <argp_failure@@Base+0x858>
   19ad0:	mov	r0, r4
   19ad4:	ldr	r1, [r7, #8]
   19ad8:	mov	r8, r5
   19adc:	bl	1b204 <argp_error@@Base+0x1304>
   19ae0:	ldr	r3, [r6, #4]
   19ae4:	str	r3, [fp, #-120]	; 0xffffff88
   19ae8:	ldr	r3, [fp, #-120]	; 0xffffff88
   19aec:	cmp	r3, #0
   19af0:	bne	19be0 <argp_failure@@Base+0x990>
   19af4:	ldr	r3, [r5, #12]
   19af8:	tst	r3, #8
   19afc:	beq	19cd0 <argp_failure@@Base+0xa80>
   19b00:	mov	r0, r4
   19b04:	ldr	r1, [r7, #16]
   19b08:	add	r8, r5, #24
   19b0c:	bl	1b204 <argp_error@@Base+0x1304>
   19b10:	ldr	r9, [r6, #4]
   19b14:	cmp	r9, #0
   19b18:	bne	19c94 <argp_failure@@Base+0xa44>
   19b1c:	mov	r1, #0
   19b20:	mov	r0, r4
   19b24:	bl	1b1a4 <argp_error@@Base+0x12a4>
   19b28:	ldr	r3, [fp, #-64]	; 0xffffffc0
   19b2c:	cmp	r3, #0
   19b30:	bne	19d50 <argp_failure@@Base+0xb00>
   19b34:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19b38:	ldr	r8, [r5, #16]
   19b3c:	ldr	r1, [r5, #4]
   19b40:	ldr	r2, [r6, #20]
   19b44:	mov	r0, r8
   19b48:	bl	1850c <_obstack_memory_used@@Base+0x10d8>
   19b4c:	subs	r5, r0, #0
   19b50:	beq	19bbc <argp_failure@@Base+0x96c>
   19b54:	ldrb	r3, [r5]
   19b58:	cmp	r3, #0
   19b5c:	beq	19bac <argp_failure@@Base+0x95c>
   19b60:	mov	r0, r4
   19b64:	bl	1b234 <argp_error@@Base+0x1334>
   19b68:	mov	r9, r0
   19b6c:	mov	r0, r4
   19b70:	ldr	r1, [r7, #20]
   19b74:	bl	1b1a4 <argp_error@@Base+0x12a4>
   19b78:	mov	r0, r4
   19b7c:	ldr	r1, [r7, #20]
   19b80:	bl	1b204 <argp_error@@Base+0x1304>
   19b84:	ldr	r1, [r7, #20]
   19b88:	add	r3, r1, #3
   19b8c:	cmp	r9, r3
   19b90:	bls	19dac <argp_failure@@Base+0xb5c>
   19b94:	mov	r1, #10
   19b98:	mov	r0, r4
   19b9c:	bl	1b15c <argp_error@@Base+0x125c>
   19ba0:	mov	r1, r5
   19ba4:	mov	r0, r4
   19ba8:	bl	1b11c <argp_error@@Base+0x121c>
   19bac:	cmp	r8, r5
   19bb0:	beq	19bbc <argp_failure@@Base+0x96c>
   19bb4:	mov	r0, r5
   19bb8:	bl	17030 <argp_usage@@Base+0x170>
   19bbc:	mov	r1, #0
   19bc0:	mov	r0, r4
   19bc4:	bl	1b1a4 <argp_error@@Base+0x12a4>
   19bc8:	mov	r1, #10
   19bcc:	mov	r0, r4
   19bd0:	bl	1b15c <argp_error@@Base+0x125c>
   19bd4:	b	19d7c <argp_failure@@Base+0xb2c>
   19bd8:	mov	r3, #1
   19bdc:	b	19aa0 <argp_failure@@Base+0x850>
   19be0:	mov	r0, r8
   19be4:	bl	16ed4 <argp_usage@@Base+0x14>
   19be8:	cmp	r0, #0
   19bec:	beq	19c70 <argp_failure@@Base+0xa20>
   19bf0:	ldrb	r2, [r9]
   19bf4:	ldr	r1, [r8, #4]
   19bf8:	cmp	r1, r2
   19bfc:	bne	19c70 <argp_failure@@Base+0xa20>
   19c00:	ldr	r2, [r8, #12]
   19c04:	tst	r2, #2
   19c08:	bne	19c6c <argp_failure@@Base+0xa1c>
   19c0c:	sub	r1, fp, #76	; 0x4c
   19c10:	ldr	r0, [r7, #8]
   19c14:	bl	1878c <_obstack_memory_used@@Base+0x1358>
   19c18:	mov	r1, #45	; 0x2d
   19c1c:	mov	r0, r4
   19c20:	bl	1b15c <argp_error@@Base+0x125c>
   19c24:	ldrb	r1, [r9]
   19c28:	mov	r0, r4
   19c2c:	bl	1b15c <argp_error@@Base+0x125c>
   19c30:	ldr	r3, [fp, #-116]	; 0xffffff8c
   19c34:	ldr	r2, [r5, #8]
   19c38:	cmp	r3, #0
   19c3c:	beq	19c4c <argp_failure@@Base+0x9fc>
   19c40:	ldr	r1, [r7]
   19c44:	cmp	r1, #0
   19c48:	beq	19c84 <argp_failure@@Base+0xa34>
   19c4c:	cmp	r2, #0
   19c50:	beq	19c6c <argp_failure@@Base+0xa1c>
   19c54:	ldr	r1, [r5, #12]
   19c58:	mov	r0, r4
   19c5c:	tst	r1, #1
   19c60:	ldrne	r1, [pc, #444]	; 19e24 <argp_failure@@Base+0xbd4>
   19c64:	ldreq	r1, [pc, #444]	; 19e28 <argp_failure@@Base+0xbd8>
   19c68:	bl	1b048 <argp_error@@Base+0x1148>
   19c6c:	add	r9, r9, #1
   19c70:	ldr	r3, [fp, #-120]	; 0xffffff88
   19c74:	add	r8, r8, #24
   19c78:	sub	r3, r3, #1
   19c7c:	str	r3, [fp, #-120]	; 0xffffff88
   19c80:	b	19ae8 <argp_failure@@Base+0x898>
   19c84:	cmp	r2, #0
   19c88:	movne	r2, #1
   19c8c:	strne	r2, [fp, #-80]	; 0xffffffb0
   19c90:	b	19c6c <argp_failure@@Base+0xa1c>
   19c94:	ldr	r3, [r8, #-24]	; 0xffffffe8
   19c98:	cmp	r3, #0
   19c9c:	beq	19cc4 <argp_failure@@Base+0xa74>
   19ca0:	ldr	r3, [r8, #-12]
   19ca4:	tst	r3, #2
   19ca8:	bne	19cc4 <argp_failure@@Base+0xa74>
   19cac:	sub	r1, fp, #76	; 0x4c
   19cb0:	ldr	r0, [r7, #16]
   19cb4:	bl	1878c <_obstack_memory_used@@Base+0x1358>
   19cb8:	mov	r0, r4
   19cbc:	ldr	r1, [r8, #-24]	; 0xffffffe8
   19cc0:	bl	1b11c <argp_error@@Base+0x121c>
   19cc4:	sub	r9, r9, #1
   19cc8:	add	r8, r8, #24
   19ccc:	b	19b14 <argp_failure@@Base+0x8c4>
   19cd0:	mov	r0, r4
   19cd4:	ldr	r1, [r7, #12]
   19cd8:	add	r9, r5, #24
   19cdc:	bl	1b204 <argp_error@@Base+0x1304>
   19ce0:	ldr	r8, [r6, #4]
   19ce4:	cmp	r8, #0
   19ce8:	beq	19b1c <argp_failure@@Base+0x8cc>
   19cec:	ldr	r2, [r9, #-24]	; 0xffffffe8
   19cf0:	cmp	r2, #0
   19cf4:	beq	19d44 <argp_failure@@Base+0xaf4>
   19cf8:	ldr	r2, [r9, #-12]
   19cfc:	tst	r2, #2
   19d00:	bne	19d44 <argp_failure@@Base+0xaf4>
   19d04:	sub	r1, fp, #76	; 0x4c
   19d08:	ldr	r0, [r7, #12]
   19d0c:	bl	1878c <_obstack_memory_used@@Base+0x1358>
   19d10:	ldr	r1, [pc, #276]	; 19e2c <argp_failure@@Base+0xbdc>
   19d14:	mov	r0, r4
   19d18:	ldr	r2, [r9, #-24]	; 0xffffffe8
   19d1c:	bl	1b048 <argp_error@@Base+0x1148>
   19d20:	ldr	r2, [r5, #8]
   19d24:	cmp	r2, #0
   19d28:	beq	19d44 <argp_failure@@Base+0xaf4>
   19d2c:	ldr	r1, [r5, #12]
   19d30:	mov	r0, r4
   19d34:	tst	r1, #1
   19d38:	ldrne	r1, [pc, #240]	; 19e30 <argp_failure@@Base+0xbe0>
   19d3c:	ldreq	r1, [pc, #240]	; 19e34 <argp_failure@@Base+0xbe4>
   19d40:	bl	1b048 <argp_error@@Base+0x1148>
   19d44:	sub	r8, r8, #1
   19d48:	add	r9, r9, #24
   19d4c:	b	19ce4 <argp_failure@@Base+0xa94>
   19d50:	mov	r0, r5
   19d54:	bl	16ed4 <argp_usage@@Base+0x14>
   19d58:	cmp	r0, #0
   19d5c:	bne	19d80 <argp_failure@@Base+0xb30>
   19d60:	ldr	r3, [r5]
   19d64:	cmp	r3, #0
   19d68:	bne	19d80 <argp_failure@@Base+0xb30>
   19d6c:	sub	r2, fp, #76	; 0x4c
   19d70:	ldr	r0, [r5, #16]
   19d74:	ldr	r1, [r6, #20]
   19d78:	bl	186cc <_obstack_memory_used@@Base+0x1298>
   19d7c:	str	r6, [fp, #-88]	; 0xffffffa8
   19d80:	mov	r0, r4
   19d84:	ldr	r1, [fp, #-124]	; 0xffffff84
   19d88:	add	r6, r6, #28
   19d8c:	bl	1b1a4 <argp_error@@Base+0x12a4>
   19d90:	mov	r0, r4
   19d94:	ldr	r1, [fp, #-128]	; 0xffffff80
   19d98:	bl	1b204 <argp_error@@Base+0x1304>
   19d9c:	ldr	r3, [fp, #-112]	; 0xffffff90
   19da0:	sub	r3, r3, #1
   19da4:	str	r3, [fp, #-112]	; 0xffffff90
   19da8:	b	198fc <argp_failure@@Base+0x6ac>
   19dac:	cmp	r9, r1
   19db0:	bcc	19dc4 <argp_failure@@Base+0xb74>
   19db4:	ldr	r1, [pc, #124]	; 19e38 <argp_failure@@Base+0xbe8>
   19db8:	mov	r0, r4
   19dbc:	bl	1b11c <argp_error@@Base+0x121c>
   19dc0:	b	19ba0 <argp_failure@@Base+0x950>
   19dc4:	mov	r0, r4
   19dc8:	bl	18044 <_obstack_memory_used@@Base+0xc10>
   19dcc:	b	19ba0 <argp_failure@@Base+0x950>
   19dd0:	andeq	pc, r2, r4, lsl #22
   19dd4:	andeq	lr, r1, r0, ror #1
   19dd8:	andeq	sp, r1, r8, ror #30
   19ddc:	andeq	lr, r1, lr, ror #1
   19de0:	strdeq	sp, [r1], -r8
   19de4:	andeq	lr, r1, sp, lsl r1
   19de8:	andeq	lr, r1, r3, asr #2
   19dec:	muleq	r1, r4, r1
   19df0:	andeq	lr, r1, r0, ror #2
   19df4:	andeq	ip, r1, r0, ror #22
   19df8:	andeq	sp, r1, fp, lsl fp
   19dfc:			; <UNDEFINED> instruction: 0x00018fb4
   19e00:	andeq	lr, r1, r3, lsr #3
   19e04:	muleq	r1, ip, r1
   19e08:	andeq	lr, r1, r9, lsr #3
   19e0c:			; <UNDEFINED> instruction: 0x0001e1b0
   19e10:			; <UNDEFINED> instruction: 0x0001e1bd
   19e14:	andeq	r0, r0, #5
   19e18:	andeq	lr, r1, ip, lsl #4
   19e1c:	andeq	pc, r2, r0, lsr #24
   19e20:	andeq	lr, r1, r0, lsl #5
   19e24:	strdeq	lr, [r1], -r4
   19e28:	andeq	fp, r1, pc, lsr #7
   19e2c:	strdeq	lr, [r1], -r9
   19e30:	strdeq	lr, [r1], -lr	; <UNPREDICTABLE>
   19e34:	andeq	lr, r1, r4, lsl #4
   19e38:	andeq	lr, r1, r8, lsl #4

00019e3c <argp_help@@Base>:
   19e3c:	push	{r0, r1, r2, lr}
   19e40:	str	r3, [sp]
   19e44:	mov	r3, r2
   19e48:	mov	r2, r1
   19e4c:	mov	r1, #0
   19e50:	bl	19390 <argp_failure@@Base+0x140>
   19e54:	add	sp, sp, #12
   19e58:	pop	{pc}		; (ldr pc, [sp], #4)

00019e5c <argp_state_help@@Base>:
   19e5c:	push	{r0, r1, r2, r4, r5, lr}
   19e60:	subs	r4, r0, #0
   19e64:	mov	r5, r2
   19e68:	beq	19ee8 <argp_state_help@@Base+0x8c>
   19e6c:	adds	r2, r1, #0
   19e70:	ldr	r3, [r4, #16]
   19e74:	movne	r2, #1
   19e78:	eor	r0, r3, #2
   19e7c:	ands	r2, r2, r0, lsr #1
   19e80:	beq	19ef0 <argp_state_help@@Base+0x94>
   19e84:	tst	r3, #64	; 0x40
   19e88:	ldr	r0, [r4]
   19e8c:	orrne	r5, r5, #128	; 0x80
   19e90:	ldr	r3, [r4, #40]	; 0x28
   19e94:	mov	r2, r1
   19e98:	mov	r1, r4
   19e9c:	str	r3, [sp]
   19ea0:	mov	r3, r5
   19ea4:	bl	19390 <argp_failure@@Base+0x140>
   19ea8:	cmp	r4, #0
   19eac:	beq	19ebc <argp_state_help@@Base+0x60>
   19eb0:	ldr	r3, [r4, #16]
   19eb4:	tst	r3, #32
   19eb8:	bne	19ef0 <argp_state_help@@Base+0x94>
   19ebc:	ands	r0, r5, #256	; 0x100
   19ec0:	ldrne	r3, [pc, #48]	; 19ef8 <argp_state_help@@Base+0x9c>
   19ec4:	ldrne	r0, [r3]
   19ec8:	bne	19ed4 <argp_state_help@@Base+0x78>
   19ecc:	tst	r5, #512	; 0x200
   19ed0:	beq	19ef0 <argp_state_help@@Base+0x94>
   19ed4:	bl	11548 <exit@plt>
   19ed8:	ldr	r3, [pc, #28]	; 19efc <argp_state_help@@Base+0xa0>
   19edc:	mov	r0, r4
   19ee0:	ldr	r3, [r3]
   19ee4:	b	19e94 <argp_state_help@@Base+0x38>
   19ee8:	cmp	r1, #0
   19eec:	bne	19ed8 <argp_state_help@@Base+0x7c>
   19ef0:	add	sp, sp, #12
   19ef4:	pop	{r4, r5, pc}
   19ef8:	andeq	pc, r2, ip, lsr fp	; <UNPREDICTABLE>
   19efc:	andeq	pc, r2, r0, asr #22

00019f00 <argp_error@@Base>:
   19f00:	push	{r1, r2, r3}
   19f04:	push	{r0, r1, r4, r5, lr}
   19f08:	subs	r5, r0, #0
   19f0c:	beq	19f30 <argp_error@@Base+0x30>
   19f10:	ldr	r3, [r5, #16]
   19f14:	tst	r3, #2
   19f18:	ldreq	r4, [r5, #44]	; 0x2c
   19f1c:	beq	19f38 <argp_error@@Base+0x38>
   19f20:	add	sp, sp, #8
   19f24:	pop	{r4, r5, lr}
   19f28:	add	sp, sp, #12
   19f2c:	bx	lr
   19f30:	ldr	r3, [pc, #128]	; 19fb8 <argp_error@@Base+0xb8>
   19f34:	ldr	r4, [r3]
   19f38:	cmp	r4, #0
   19f3c:	beq	19f20 <argp_error@@Base+0x20>
   19f40:	mov	r0, r4
   19f44:	bl	11650 <flockfile@plt>
   19f48:	add	r3, sp, #24
   19f4c:	cmp	r5, #0
   19f50:	ldrne	r0, [r5, #40]	; 0x28
   19f54:	mov	r1, r4
   19f58:	str	r3, [sp, #4]
   19f5c:	ldreq	r3, [pc, #88]	; 19fbc <argp_error@@Base+0xbc>
   19f60:	ldreq	r0, [r3]
   19f64:	bl	11398 <fputs_unlocked@plt>
   19f68:	mov	r1, r4
   19f6c:	mov	r0, #58	; 0x3a
   19f70:	bl	11710 <putc_unlocked@plt>
   19f74:	mov	r1, r4
   19f78:	mov	r0, #32
   19f7c:	bl	11710 <putc_unlocked@plt>
   19f80:	mov	r0, r4
   19f84:	ldr	r2, [sp, #4]
   19f88:	ldr	r1, [sp, #20]
   19f8c:	bl	11620 <vfprintf@plt>
   19f90:	mov	r1, r4
   19f94:	mov	r0, #10
   19f98:	bl	11710 <putc_unlocked@plt>
   19f9c:	mov	r0, r5
   19fa0:	mov	r2, #260	; 0x104
   19fa4:	mov	r1, r4
   19fa8:	bl	19e5c <argp_state_help@@Base>
   19fac:	mov	r0, r4
   19fb0:	bl	11488 <funlockfile@plt>
   19fb4:	b	19f20 <argp_error@@Base+0x20>
   19fb8:	andeq	pc, r2, r8, asr #22
   19fbc:	andeq	pc, r2, r0, asr #22
   19fc0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19fc4:	ldr	r7, [r1]
   19fc8:	ldr	lr, [r1, #32]
   19fcc:	ldr	r8, [r1, #28]
   19fd0:	mov	r4, r7
   19fd4:	add	r9, r0, lr, lsl #2
   19fd8:	mov	r5, r8
   19fdc:	cmp	r4, lr
   19fe0:	movle	r3, #0
   19fe4:	movgt	r3, #1
   19fe8:	cmp	r5, lr
   19fec:	movge	r3, #0
   19ff0:	cmp	r3, #0
   19ff4:	bne	1a00c <argp_error@@Base+0x10c>
   19ff8:	sub	r3, r7, lr
   19ffc:	str	r7, [r1, #32]
   1a000:	add	r3, r3, r8
   1a004:	str	r3, [r1, #28]
   1a008:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a00c:	sub	r6, r4, lr
   1a010:	sub	r2, lr, r5
   1a014:	lsl	ip, r5, #2
   1a018:	cmp	r6, r2
   1a01c:	ble	1a050 <argp_error@@Base+0x150>
   1a020:	sub	r2, r4, r2
   1a024:	add	r4, r0, r4, lsl #2
   1a028:	add	ip, r0, ip
   1a02c:	add	r6, r0, r2, lsl #2
   1a030:	ldr	sl, [r6]
   1a034:	ldr	r3, [ip]
   1a038:	str	sl, [ip], #4
   1a03c:	str	r3, [r6], #4
   1a040:	cmp	r4, r6
   1a044:	bne	1a030 <argp_error@@Base+0x130>
   1a048:	mov	r4, r2
   1a04c:	b	19fdc <argp_error@@Base+0xdc>
   1a050:	add	r2, r6, r5
   1a054:	add	r3, r0, ip
   1a058:	add	r2, r0, r2, lsl #2
   1a05c:	mov	ip, r9
   1a060:	ldr	fp, [ip]
   1a064:	ldr	sl, [r3]
   1a068:	str	fp, [r3], #4
   1a06c:	cmp	r3, r2
   1a070:	str	sl, [ip], #4
   1a074:	bne	1a060 <argp_error@@Base+0x160>
   1a078:	add	r5, r5, r6
   1a07c:	mov	r2, r4
   1a080:	b	1a048 <argp_error@@Base+0x148>
   1a084:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a088:	sub	sp, sp, #44	; 0x2c
   1a08c:	mov	sl, r1
   1a090:	ldr	r4, [sp, #88]	; 0x58
   1a094:	str	r3, [sp, #20]
   1a098:	str	r2, [sp, #32]
   1a09c:	str	r0, [sp, #36]	; 0x24
   1a0a0:	ldr	r8, [r4, #20]
   1a0a4:	mov	r2, r8
   1a0a8:	ldrb	r3, [r2]
   1a0ac:	mov	r9, r2
   1a0b0:	add	r2, r2, #1
   1a0b4:	subs	r7, r3, #61	; 0x3d
   1a0b8:	movne	r7, #1
   1a0bc:	cmp	r3, #0
   1a0c0:	moveq	r7, #0
   1a0c4:	cmp	r7, #0
   1a0c8:	bne	1a0a8 <argp_error@@Base+0x1a8>
   1a0cc:	sub	r3, r9, r8
   1a0d0:	str	r3, [sp, #24]
   1a0d4:	ldr	r3, [sp, #20]
   1a0d8:	ldr	r5, [r3, r7, lsl #4]
   1a0dc:	add	r6, r3, r7, lsl #4
   1a0e0:	cmp	r5, #0
   1a0e4:	bne	1a18c <argp_error@@Base+0x28c>
   1a0e8:	mov	fp, r3
   1a0ec:	mov	r6, r5
   1a0f0:	str	r5, [sp, #12]
   1a0f4:	mvn	r3, #0
   1a0f8:	mov	r8, r5
   1a0fc:	str	r3, [sp, #16]
   1a100:	str	r5, [sp, #28]
   1a104:	ldr	r0, [fp]
   1a108:	cmp	r0, #0
   1a10c:	bne	1a1c0 <argp_error@@Base+0x2c0>
   1a110:	orrs	r3, r5, r8
   1a114:	beq	1a2f4 <argp_error@@Base+0x3f4>
   1a118:	ldr	r3, [sp, #92]	; 0x5c
   1a11c:	cmp	r3, #0
   1a120:	beq	1a14c <argp_error@@Base+0x24c>
   1a124:	ldr	r6, [pc, #900]	; 1a4b0 <argp_error@@Base+0x5b0>
   1a128:	cmp	r8, #0
   1a12c:	ldr	r0, [r6]
   1a130:	beq	1a284 <argp_error@@Base+0x384>
   1a134:	ldr	r3, [r4, #20]
   1a138:	ldr	r1, [pc, #884]	; 1a4b4 <argp_error@@Base+0x5b4>
   1a13c:	ldr	r2, [sl]
   1a140:	str	r3, [sp]
   1a144:	ldr	r3, [sp, #96]	; 0x60
   1a148:	bl	11578 <fprintf@plt>
   1a14c:	ldr	r3, [sp, #28]
   1a150:	cmp	r3, #0
   1a154:	beq	1a160 <argp_error@@Base+0x260>
   1a158:	mov	r0, r5
   1a15c:	bl	17030 <argp_usage@@Base+0x170>
   1a160:	ldr	r5, [r4, #20]
   1a164:	mov	r0, r5
   1a168:	bl	11560 <strlen@plt>
   1a16c:	ldr	r3, [r4]
   1a170:	add	r0, r5, r0
   1a174:	str	r0, [r4, #20]
   1a178:	add	r3, r3, #1
   1a17c:	str	r3, [r4]
   1a180:	mov	r3, #0
   1a184:	str	r3, [r4, #8]
   1a188:	b	1a37c <argp_error@@Base+0x47c>
   1a18c:	mov	r1, r8
   1a190:	mov	r0, r5
   1a194:	ldr	r2, [sp, #24]
   1a198:	bl	116e0 <strncmp@plt>
   1a19c:	cmp	r0, #0
   1a1a0:	bne	1a1b8 <argp_error@@Base+0x2b8>
   1a1a4:	mov	r0, r5
   1a1a8:	bl	11560 <strlen@plt>
   1a1ac:	ldr	r3, [sp, #24]
   1a1b0:	cmp	r0, r3
   1a1b4:	beq	1a388 <argp_error@@Base+0x488>
   1a1b8:	add	r7, r7, #1
   1a1bc:	b	1a0d4 <argp_error@@Base+0x1d4>
   1a1c0:	ldr	r1, [r4, #20]
   1a1c4:	ldr	r2, [sp, #24]
   1a1c8:	bl	116e0 <strncmp@plt>
   1a1cc:	cmp	r0, #0
   1a1d0:	bne	1a270 <argp_error@@Base+0x370>
   1a1d4:	cmp	r6, #0
   1a1d8:	ldreq	r3, [sp, #12]
   1a1dc:	moveq	r6, fp
   1a1e0:	streq	r3, [sp, #16]
   1a1e4:	beq	1a270 <argp_error@@Base+0x370>
   1a1e8:	ldr	r3, [sp, #84]	; 0x54
   1a1ec:	cmp	r3, #0
   1a1f0:	bne	1a224 <argp_error@@Base+0x324>
   1a1f4:	ldr	r1, [r6, #4]
   1a1f8:	ldr	r2, [fp, #4]
   1a1fc:	cmp	r1, r2
   1a200:	bne	1a224 <argp_error@@Base+0x324>
   1a204:	ldr	r1, [r6, #8]
   1a208:	ldr	r2, [fp, #8]
   1a20c:	cmp	r1, r2
   1a210:	bne	1a224 <argp_error@@Base+0x324>
   1a214:	ldr	r1, [r6, #12]
   1a218:	ldr	r2, [fp, #12]
   1a21c:	cmp	r1, r2
   1a220:	beq	1a270 <argp_error@@Base+0x370>
   1a224:	cmp	r8, #0
   1a228:	bne	1a270 <argp_error@@Base+0x370>
   1a22c:	ldr	r3, [sp, #92]	; 0x5c
   1a230:	cmp	r3, #0
   1a234:	beq	1a258 <argp_error@@Base+0x358>
   1a238:	cmp	r5, #0
   1a23c:	bne	1a264 <argp_error@@Base+0x364>
   1a240:	mov	r0, r7
   1a244:	bl	17eec <_obstack_memory_used@@Base+0xab8>
   1a248:	subs	r5, r0, #0
   1a24c:	bne	1a48c <argp_error@@Base+0x58c>
   1a250:	mov	r8, #1
   1a254:	b	1a270 <argp_error@@Base+0x370>
   1a258:	cmp	r5, #0
   1a25c:	mov	r8, #1
   1a260:	beq	1a270 <argp_error@@Base+0x370>
   1a264:	ldr	r3, [sp, #12]
   1a268:	mov	r2, #1
   1a26c:	strb	r2, [r5, r3]
   1a270:	ldr	r3, [sp, #12]
   1a274:	add	fp, fp, #16
   1a278:	add	r3, r3, #1
   1a27c:	str	r3, [sp, #12]
   1a280:	b	1a104 <argp_error@@Base+0x204>
   1a284:	bl	11650 <flockfile@plt>
   1a288:	ldr	r3, [r4, #20]
   1a28c:	ldr	r1, [pc, #548]	; 1a4b8 <argp_error@@Base+0x5b8>
   1a290:	ldr	r2, [sl]
   1a294:	str	r3, [sp]
   1a298:	ldr	r0, [r6]
   1a29c:	ldr	r3, [sp, #96]	; 0x60
   1a2a0:	ldr	r9, [pc, #532]	; 1a4bc <argp_error@@Base+0x5bc>
   1a2a4:	bl	11578 <fprintf@plt>
   1a2a8:	cmp	r7, r8
   1a2ac:	ldr	r0, [r6]
   1a2b0:	bne	1a2cc <argp_error@@Base+0x3cc>
   1a2b4:	mov	r1, r0
   1a2b8:	mov	r0, #10
   1a2bc:	bl	1162c <fputc@plt>
   1a2c0:	ldr	r0, [r6]
   1a2c4:	bl	11488 <funlockfile@plt>
   1a2c8:	b	1a14c <argp_error@@Base+0x24c>
   1a2cc:	ldrb	r3, [r5, r8]
   1a2d0:	cmp	r3, #0
   1a2d4:	beq	1a2ec <argp_error@@Base+0x3ec>
   1a2d8:	ldr	r3, [sp, #20]
   1a2dc:	mov	r1, r9
   1a2e0:	ldr	r2, [sp, #96]	; 0x60
   1a2e4:	ldr	r3, [r3, r8, lsl #4]
   1a2e8:	bl	11578 <fprintf@plt>
   1a2ec:	add	r8, r8, #1
   1a2f0:	b	1a2a8 <argp_error@@Base+0x3a8>
   1a2f4:	cmp	r6, #0
   1a2f8:	bne	1a38c <argp_error@@Base+0x48c>
   1a2fc:	ldr	r3, [sp, #84]	; 0x54
   1a300:	cmp	r3, #0
   1a304:	beq	1a338 <argp_error@@Base+0x438>
   1a308:	ldr	r3, [r4]
   1a30c:	ldr	r3, [sl, r3, lsl #2]
   1a310:	ldrb	r3, [r3, #1]
   1a314:	cmp	r3, #45	; 0x2d
   1a318:	beq	1a338 <argp_error@@Base+0x438>
   1a31c:	ldr	r3, [r4, #20]
   1a320:	ldr	r0, [sp, #32]
   1a324:	ldrb	r1, [r3]
   1a328:	bl	1156c <strchr@plt>
   1a32c:	cmp	r0, #0
   1a330:	mvnne	r0, #0
   1a334:	bne	1a380 <argp_error@@Base+0x480>
   1a338:	ldr	r3, [sp, #92]	; 0x5c
   1a33c:	cmp	r3, #0
   1a340:	beq	1a364 <argp_error@@Base+0x464>
   1a344:	ldr	r0, [pc, #356]	; 1a4b0 <argp_error@@Base+0x5b0>
   1a348:	ldr	r3, [r4, #20]
   1a34c:	ldr	r1, [pc, #364]	; 1a4c0 <argp_error@@Base+0x5c0>
   1a350:	ldr	r2, [sl]
   1a354:	str	r3, [sp]
   1a358:	ldr	r0, [r0]
   1a35c:	ldr	r3, [sp, #96]	; 0x60
   1a360:	bl	11578 <fprintf@plt>
   1a364:	ldr	r3, [r4]
   1a368:	mov	r2, #0
   1a36c:	str	r2, [r4, #8]
   1a370:	str	r2, [r4, #20]
   1a374:	add	r3, r3, #1
   1a378:	str	r3, [r4]
   1a37c:	mov	r0, #63	; 0x3f
   1a380:	add	sp, sp, #44	; 0x2c
   1a384:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a388:	str	r7, [sp, #16]
   1a38c:	ldr	r3, [r4]
   1a390:	mov	r1, #0
   1a394:	str	r1, [r4, #20]
   1a398:	ldr	r1, [r6, #4]
   1a39c:	add	r2, r3, #1
   1a3a0:	str	r2, [r4]
   1a3a4:	ldrb	r0, [r9]
   1a3a8:	cmp	r0, #0
   1a3ac:	beq	1a3f4 <argp_error@@Base+0x4f4>
   1a3b0:	cmp	r1, #0
   1a3b4:	addne	r9, r9, #1
   1a3b8:	strne	r9, [r4, #12]
   1a3bc:	bne	1a418 <argp_error@@Base+0x518>
   1a3c0:	ldr	r3, [sp, #92]	; 0x5c
   1a3c4:	cmp	r3, #0
   1a3c8:	beq	1a3ec <argp_error@@Base+0x4ec>
   1a3cc:	ldr	r0, [pc, #220]	; 1a4b0 <argp_error@@Base+0x5b0>
   1a3d0:	ldr	r3, [r6]
   1a3d4:	ldr	r1, [pc, #232]	; 1a4c4 <argp_error@@Base+0x5c4>
   1a3d8:	ldr	r2, [sl]
   1a3dc:	str	r3, [sp]
   1a3e0:	ldr	r0, [r0]
   1a3e4:	ldr	r3, [sp, #96]	; 0x60
   1a3e8:	bl	11578 <fprintf@plt>
   1a3ec:	ldr	r3, [r6, #12]
   1a3f0:	b	1a184 <argp_error@@Base+0x284>
   1a3f4:	cmp	r1, #1
   1a3f8:	bne	1a418 <argp_error@@Base+0x518>
   1a3fc:	ldr	r1, [sp, #36]	; 0x24
   1a400:	cmp	r2, r1
   1a404:	bge	1a440 <argp_error@@Base+0x540>
   1a408:	add	r3, r3, #2
   1a40c:	str	r3, [r4]
   1a410:	ldr	r3, [sl, r2, lsl #2]
   1a414:	str	r3, [r4, #12]
   1a418:	ldr	r3, [sp, #80]	; 0x50
   1a41c:	cmp	r3, #0
   1a420:	ldrne	r2, [sp, #16]
   1a424:	strne	r2, [r3]
   1a428:	ldr	r3, [r6, #8]
   1a42c:	ldr	r0, [r6, #12]
   1a430:	cmp	r3, #0
   1a434:	strne	r0, [r3]
   1a438:	movne	r0, #0
   1a43c:	b	1a380 <argp_error@@Base+0x480>
   1a440:	ldr	r3, [sp, #92]	; 0x5c
   1a444:	cmp	r3, #0
   1a448:	beq	1a46c <argp_error@@Base+0x56c>
   1a44c:	ldr	r0, [pc, #92]	; 1a4b0 <argp_error@@Base+0x5b0>
   1a450:	ldr	r3, [r6]
   1a454:	ldr	r1, [pc, #108]	; 1a4c8 <argp_error@@Base+0x5c8>
   1a458:	ldr	r2, [sl]
   1a45c:	str	r3, [sp]
   1a460:	ldr	r0, [r0]
   1a464:	ldr	r3, [sp, #96]	; 0x60
   1a468:	bl	11578 <fprintf@plt>
   1a46c:	ldr	r3, [r6, #12]
   1a470:	str	r3, [r4, #8]
   1a474:	ldr	r3, [sp, #32]
   1a478:	ldrb	r3, [r3]
   1a47c:	cmp	r3, #58	; 0x3a
   1a480:	moveq	r0, #58	; 0x3a
   1a484:	movne	r0, #63	; 0x3f
   1a488:	b	1a380 <argp_error@@Base+0x480>
   1a48c:	mov	r2, r7
   1a490:	mov	r1, r8
   1a494:	bl	115b4 <memset@plt>
   1a498:	ldr	r3, [sp, #16]
   1a49c:	mov	r2, #1
   1a4a0:	strb	r2, [r5, r3]
   1a4a4:	mov	r3, #1
   1a4a8:	str	r3, [sp, #28]
   1a4ac:	b	1a264 <argp_error@@Base+0x364>
   1a4b0:	andeq	pc, r2, r8, asr #22
   1a4b4:	muleq	r1, r4, r2
   1a4b8:			; <UNDEFINED> instruction: 0x0001e2b4
   1a4bc:	andeq	lr, r1, r3, ror #5
   1a4c0:	andeq	lr, r1, fp, ror #5
   1a4c4:	andeq	lr, r1, fp, lsl #6
   1a4c8:	andeq	lr, r1, r8, lsr r3
   1a4cc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a4d0:	sub	sp, sp, #36	; 0x24
   1a4d4:	subs	r8, r0, #0
   1a4d8:	ldr	fp, [sp, #72]	; 0x48
   1a4dc:	ldr	r4, [sp, #80]	; 0x50
   1a4e0:	ldr	r5, [sp, #76]	; 0x4c
   1a4e4:	ldr	r9, [r4, #4]
   1a4e8:	bgt	1a4f8 <argp_error@@Base+0x5f8>
   1a4ec:	mvn	r0, #0
   1a4f0:	add	sp, sp, #36	; 0x24
   1a4f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a4f8:	mov	sl, r3
   1a4fc:	mov	r3, #0
   1a500:	mov	r7, r1
   1a504:	mov	r6, r2
   1a508:	str	r3, [r4, #12]
   1a50c:	ldr	r3, [r4]
   1a510:	cmp	r3, #0
   1a514:	beq	1a538 <argp_error@@Base+0x638>
   1a518:	ldr	r3, [r4, #16]
   1a51c:	cmp	r3, #0
   1a520:	beq	1a540 <argp_error@@Base+0x640>
   1a524:	ldrb	r3, [r2]
   1a528:	sub	r3, r3, #43	; 0x2b
   1a52c:	tst	r3, #253	; 0xfd
   1a530:	addeq	r6, r2, #1
   1a534:	b	1a57c <argp_error@@Base+0x67c>
   1a538:	mov	r3, #1
   1a53c:	str	r3, [r4]
   1a540:	ldr	r3, [r4]
   1a544:	str	r3, [r4, #28]
   1a548:	str	r3, [r4, #32]
   1a54c:	mov	r3, #0
   1a550:	str	r3, [r4, #20]
   1a554:	ldrb	r2, [r6]
   1a558:	cmp	r2, #45	; 0x2d
   1a55c:	moveq	r3, #2
   1a560:	beq	1a56c <argp_error@@Base+0x66c>
   1a564:	cmp	r2, #43	; 0x2b
   1a568:	bne	1a698 <argp_error@@Base+0x798>
   1a56c:	add	r6, r6, #1
   1a570:	str	r3, [r4, #24]
   1a574:	mov	r3, #1
   1a578:	str	r3, [r4, #16]
   1a57c:	ldrb	r3, [r6]
   1a580:	cmp	r3, #58	; 0x3a
   1a584:	ldr	r3, [r4, #20]
   1a588:	moveq	r9, #0
   1a58c:	cmp	r3, #0
   1a590:	beq	1a5a0 <argp_error@@Base+0x6a0>
   1a594:	ldrb	r3, [r3]
   1a598:	cmp	r3, #0
   1a59c:	bne	1a734 <argp_error@@Base+0x834>
   1a5a0:	ldr	r3, [r4]
   1a5a4:	ldr	r2, [r4, #32]
   1a5a8:	cmp	r2, r3
   1a5ac:	ldr	r2, [r4, #28]
   1a5b0:	strgt	r3, [r4, #32]
   1a5b4:	cmp	r3, r2
   1a5b8:	ldr	r2, [r4, #24]
   1a5bc:	strlt	r3, [r4, #28]
   1a5c0:	cmp	r2, #1
   1a5c4:	bne	1a618 <argp_error@@Base+0x718>
   1a5c8:	ldr	r2, [r4, #28]
   1a5cc:	ldr	r1, [r4, #32]
   1a5d0:	cmp	r2, r1
   1a5d4:	beq	1a6c8 <argp_error@@Base+0x7c8>
   1a5d8:	cmp	r3, r1
   1a5dc:	beq	1a5ec <argp_error@@Base+0x6ec>
   1a5e0:	mov	r1, r4
   1a5e4:	mov	r0, r7
   1a5e8:	bl	19fc0 <argp_error@@Base+0xc0>
   1a5ec:	ldr	r3, [r4]
   1a5f0:	cmp	r3, r8
   1a5f4:	bge	1a614 <argp_error@@Base+0x714>
   1a5f8:	ldr	r2, [r7, r3, lsl #2]
   1a5fc:	ldrb	r1, [r2]
   1a600:	cmp	r1, #45	; 0x2d
   1a604:	bne	1a6d4 <argp_error@@Base+0x7d4>
   1a608:	ldrb	r2, [r2, #1]
   1a60c:	cmp	r2, #0
   1a610:	beq	1a6d4 <argp_error@@Base+0x7d4>
   1a614:	str	r3, [r4, #32]
   1a618:	ldr	r3, [r4]
   1a61c:	cmp	r3, r8
   1a620:	beq	1a678 <argp_error@@Base+0x778>
   1a624:	ldr	r1, [pc, #888]	; 1a9a4 <argp_error@@Base+0xaa4>
   1a628:	str	r3, [sp, #24]
   1a62c:	ldr	r0, [r7, r3, lsl #2]
   1a630:	bl	113c8 <strcmp@plt>
   1a634:	cmp	r0, #0
   1a638:	bne	1a678 <argp_error@@Base+0x778>
   1a63c:	ldr	r3, [sp, #24]
   1a640:	ldr	r1, [r4, #28]
   1a644:	ldr	r2, [r4, #32]
   1a648:	add	r3, r3, #1
   1a64c:	str	r3, [r4]
   1a650:	cmp	r1, r2
   1a654:	streq	r3, [r4, #28]
   1a658:	beq	1a670 <argp_error@@Base+0x770>
   1a65c:	cmp	r3, r2
   1a660:	beq	1a670 <argp_error@@Base+0x770>
   1a664:	mov	r1, r4
   1a668:	mov	r0, r7
   1a66c:	bl	19fc0 <argp_error@@Base+0xc0>
   1a670:	str	r8, [r4]
   1a674:	str	r8, [r4, #32]
   1a678:	ldr	r2, [r4]
   1a67c:	cmp	r2, r8
   1a680:	bne	1a6e0 <argp_error@@Base+0x7e0>
   1a684:	ldr	r3, [r4, #28]
   1a688:	ldr	r2, [r4, #32]
   1a68c:	cmp	r3, r2
   1a690:	strne	r3, [r4]
   1a694:	b	1a4ec <argp_error@@Base+0x5ec>
   1a698:	ldr	r3, [sp, #84]	; 0x54
   1a69c:	cmp	r3, #0
   1a6a0:	beq	1a6b0 <argp_error@@Base+0x7b0>
   1a6a4:	mov	r3, #0
   1a6a8:	str	r3, [r4, #24]
   1a6ac:	b	1a574 <argp_error@@Base+0x674>
   1a6b0:	ldr	r0, [pc, #752]	; 1a9a8 <argp_error@@Base+0xaa8>
   1a6b4:	bl	114d0 <getenv@plt>
   1a6b8:	cmp	r0, #0
   1a6bc:	bne	1a6a4 <argp_error@@Base+0x7a4>
   1a6c0:	mov	r3, #1
   1a6c4:	b	1a6a8 <argp_error@@Base+0x7a8>
   1a6c8:	cmp	r3, r2
   1a6cc:	strne	r3, [r4, #28]
   1a6d0:	b	1a5ec <argp_error@@Base+0x6ec>
   1a6d4:	add	r3, r3, #1
   1a6d8:	str	r3, [r4]
   1a6dc:	b	1a5ec <argp_error@@Base+0x6ec>
   1a6e0:	ldr	r3, [r7, r2, lsl #2]
   1a6e4:	ldrb	r1, [r3]
   1a6e8:	cmp	r1, #45	; 0x2d
   1a6ec:	bne	1a6fc <argp_error@@Base+0x7fc>
   1a6f0:	ldrb	r1, [r3, #1]
   1a6f4:	cmp	r1, #0
   1a6f8:	bne	1a71c <argp_error@@Base+0x81c>
   1a6fc:	ldr	r1, [r4, #24]
   1a700:	cmp	r1, #0
   1a704:	beq	1a4ec <argp_error@@Base+0x5ec>
   1a708:	add	r2, r2, #1
   1a70c:	mov	r0, #1
   1a710:	str	r2, [r4]
   1a714:	str	r3, [r4, #12]
   1a718:	b	1a4f0 <argp_error@@Base+0x5f0>
   1a71c:	cmp	sl, #0
   1a720:	bne	1a7b0 <argp_error@@Base+0x8b0>
   1a724:	ldr	r3, [r4]
   1a728:	ldr	r3, [r7, r3, lsl #2]
   1a72c:	add	r3, r3, #1
   1a730:	str	r3, [r4, #20]
   1a734:	ldr	r3, [r4, #20]
   1a738:	mov	r0, r6
   1a73c:	add	r2, r3, #1
   1a740:	str	r3, [sp, #24]
   1a744:	str	r2, [r4, #20]
   1a748:	ldrb	r5, [r3]
   1a74c:	str	r2, [sp, #28]
   1a750:	mov	r1, r5
   1a754:	bl	1156c <strchr@plt>
   1a758:	ldr	r3, [sp, #24]
   1a75c:	ldr	r2, [sp, #28]
   1a760:	ldrb	r1, [r3, #1]
   1a764:	cmp	r1, #0
   1a768:	ldreq	r1, [r4]
   1a76c:	addeq	r1, r1, #1
   1a770:	streq	r1, [r4]
   1a774:	sub	r1, r5, #58	; 0x3a
   1a778:	cmp	r0, #0
   1a77c:	cmpne	r1, #1
   1a780:	bhi	1a85c <argp_error@@Base+0x95c>
   1a784:	cmp	r9, #0
   1a788:	beq	1a7a4 <argp_error@@Base+0x8a4>
   1a78c:	ldr	r0, [pc, #536]	; 1a9ac <argp_error@@Base+0xaac>
   1a790:	mov	r3, r5
   1a794:	ldr	r1, [pc, #532]	; 1a9b0 <argp_error@@Base+0xab0>
   1a798:	ldr	r2, [r7]
   1a79c:	ldr	r0, [r0]
   1a7a0:	bl	11578 <fprintf@plt>
   1a7a4:	mov	r0, #63	; 0x3f
   1a7a8:	str	r5, [r4, #8]
   1a7ac:	b	1a4f0 <argp_error@@Base+0x5f0>
   1a7b0:	cmp	r1, #45	; 0x2d
   1a7b4:	bne	1a7f0 <argp_error@@Base+0x8f0>
   1a7b8:	add	r3, r3, #2
   1a7bc:	str	r3, [r4, #20]
   1a7c0:	ldr	r3, [pc, #476]	; 1a9a4 <argp_error@@Base+0xaa4>
   1a7c4:	str	r5, [sp, #4]
   1a7c8:	str	r4, [sp, #8]
   1a7cc:	str	r9, [sp, #12]
   1a7d0:	str	r3, [sp, #16]
   1a7d4:	mov	r3, sl
   1a7d8:	mov	r2, r6
   1a7dc:	str	fp, [sp]
   1a7e0:	mov	r1, r7
   1a7e4:	mov	r0, r8
   1a7e8:	bl	1a084 <argp_error@@Base+0x184>
   1a7ec:	b	1a4f0 <argp_error@@Base+0x5f0>
   1a7f0:	cmp	r5, #0
   1a7f4:	beq	1a724 <argp_error@@Base+0x824>
   1a7f8:	ldrb	r2, [r3, #2]
   1a7fc:	cmp	r2, #0
   1a800:	bne	1a81c <argp_error@@Base+0x91c>
   1a804:	mov	r0, r6
   1a808:	str	r3, [sp, #24]
   1a80c:	bl	1156c <strchr@plt>
   1a810:	cmp	r0, #0
   1a814:	ldr	r3, [sp, #24]
   1a818:	bne	1a724 <argp_error@@Base+0x824>
   1a81c:	add	r3, r3, #1
   1a820:	mov	r2, r6
   1a824:	mov	r1, r7
   1a828:	mov	r0, r8
   1a82c:	str	r3, [r4, #20]
   1a830:	ldr	r3, [pc, #380]	; 1a9b4 <argp_error@@Base+0xab4>
   1a834:	str	fp, [sp]
   1a838:	str	r5, [sp, #4]
   1a83c:	str	r4, [sp, #8]
   1a840:	str	r9, [sp, #12]
   1a844:	str	r3, [sp, #16]
   1a848:	mov	r3, sl
   1a84c:	bl	1a084 <argp_error@@Base+0x184>
   1a850:	cmn	r0, #1
   1a854:	bne	1a4f0 <argp_error@@Base+0x5f0>
   1a858:	b	1a724 <argp_error@@Base+0x824>
   1a85c:	ldrb	r1, [r0]
   1a860:	ldrb	ip, [r0, #1]
   1a864:	cmp	r1, #87	; 0x57
   1a868:	bne	1a900 <argp_error@@Base+0xa00>
   1a86c:	sub	r1, ip, #59	; 0x3b
   1a870:	cmp	sl, #0
   1a874:	clz	r1, r1
   1a878:	lsr	r1, r1, #5
   1a87c:	moveq	r1, #0
   1a880:	cmp	r1, #0
   1a884:	beq	1a900 <argp_error@@Base+0xa00>
   1a888:	ldrb	r3, [r3, #1]
   1a88c:	cmp	r3, #0
   1a890:	strne	r2, [r4, #12]
   1a894:	bne	1a8e0 <argp_error@@Base+0x9e0>
   1a898:	ldr	r3, [r4]
   1a89c:	cmp	r3, r8
   1a8a0:	ldrne	r3, [r7, r3, lsl #2]
   1a8a4:	strne	r3, [r4, #12]
   1a8a8:	bne	1a8e0 <argp_error@@Base+0x9e0>
   1a8ac:	cmp	r9, #0
   1a8b0:	beq	1a8cc <argp_error@@Base+0x9cc>
   1a8b4:	ldr	r0, [pc, #240]	; 1a9ac <argp_error@@Base+0xaac>
   1a8b8:	mov	r3, r5
   1a8bc:	ldr	r1, [pc, #244]	; 1a9b8 <argp_error@@Base+0xab8>
   1a8c0:	ldr	r2, [r7]
   1a8c4:	ldr	r0, [r0]
   1a8c8:	bl	11578 <fprintf@plt>
   1a8cc:	str	r5, [r4, #8]
   1a8d0:	ldrb	r0, [r6]
   1a8d4:	cmp	r0, #58	; 0x3a
   1a8d8:	movne	r0, #63	; 0x3f
   1a8dc:	b	1a4f0 <argp_error@@Base+0x5f0>
   1a8e0:	ldr	r3, [r4, #12]
   1a8e4:	ldr	r2, [pc, #208]	; 1a9bc <argp_error@@Base+0xabc>
   1a8e8:	str	r3, [r4, #20]
   1a8ec:	mov	r3, #0
   1a8f0:	str	r3, [r4, #12]
   1a8f4:	stmib	sp, {r3, r4, r9}
   1a8f8:	str	r2, [sp, #16]
   1a8fc:	b	1a7d4 <argp_error@@Base+0x8d4>
   1a900:	cmp	ip, #58	; 0x3a
   1a904:	bne	1a93c <argp_error@@Base+0xa3c>
   1a908:	ldrb	r1, [r3, #1]
   1a90c:	ldrb	r3, [r0, #2]
   1a910:	cmp	r3, #58	; 0x3a
   1a914:	bne	1a944 <argp_error@@Base+0xa44>
   1a918:	cmp	r1, #0
   1a91c:	ldrne	r3, [r4]
   1a920:	strne	r2, [r4, #12]
   1a924:	streq	r1, [r4, #12]
   1a928:	beq	1a934 <argp_error@@Base+0xa34>
   1a92c:	add	r3, r3, #1
   1a930:	str	r3, [r4]
   1a934:	mov	r3, #0
   1a938:	str	r3, [r4, #20]
   1a93c:	mov	r0, r5
   1a940:	b	1a4f0 <argp_error@@Base+0x5f0>
   1a944:	cmp	r1, #0
   1a948:	ldr	r3, [r4]
   1a94c:	strne	r2, [r4, #12]
   1a950:	bne	1a92c <argp_error@@Base+0xa2c>
   1a954:	cmp	r8, r3
   1a958:	bne	1a990 <argp_error@@Base+0xa90>
   1a95c:	cmp	r9, #0
   1a960:	beq	1a97c <argp_error@@Base+0xa7c>
   1a964:	ldr	r0, [pc, #64]	; 1a9ac <argp_error@@Base+0xaac>
   1a968:	mov	r3, r5
   1a96c:	ldr	r1, [pc, #68]	; 1a9b8 <argp_error@@Base+0xab8>
   1a970:	ldr	r2, [r7]
   1a974:	ldr	r0, [r0]
   1a978:	bl	11578 <fprintf@plt>
   1a97c:	str	r5, [r4, #8]
   1a980:	ldrb	r5, [r6]
   1a984:	cmp	r5, #58	; 0x3a
   1a988:	movne	r5, #63	; 0x3f
   1a98c:	b	1a934 <argp_error@@Base+0xa34>
   1a990:	add	r2, r3, #1
   1a994:	ldr	r3, [r7, r3, lsl #2]
   1a998:	str	r2, [r4]
   1a99c:	str	r3, [r4, #12]
   1a9a0:	b	1a934 <argp_error@@Base+0xa34>
   1a9a4:	ldrdeq	sp, [r1], -ip
   1a9a8:	andeq	lr, r1, r0, ror #6
   1a9ac:	andeq	pc, r2, r8, asr #22
   1a9b0:	andeq	lr, r1, r0, ror r3
   1a9b4:	ldrdeq	sp, [r1], -sp	; <UNPREDICTABLE>
   1a9b8:	andeq	lr, r1, ip, lsl #7
   1a9bc:			; <UNDEFINED> instruction: 0x0001e3b5
   1a9c0:	push	{r4, r5, lr}
   1a9c4:	sub	sp, sp, #20
   1a9c8:	ldr	r5, [pc, #84]	; 1aa24 <argp_error@@Base+0xb24>
   1a9cc:	ldr	r4, [pc, #84]	; 1aa28 <argp_error@@Base+0xb28>
   1a9d0:	ldr	ip, [r5]
   1a9d4:	str	r4, [sp, #8]
   1a9d8:	str	ip, [r4]
   1a9dc:	ldr	ip, [r5, #4]
   1a9e0:	str	ip, [r4, #4]
   1a9e4:	ldr	ip, [sp, #40]	; 0x28
   1a9e8:	str	ip, [sp, #12]
   1a9ec:	ldr	ip, [sp, #36]	; 0x24
   1a9f0:	str	ip, [sp, #4]
   1a9f4:	ldr	ip, [sp, #32]
   1a9f8:	str	ip, [sp]
   1a9fc:	bl	1a4cc <argp_error@@Base+0x5cc>
   1aa00:	ldr	r3, [r4]
   1aa04:	ldr	r2, [r4, #12]
   1aa08:	str	r3, [r5]
   1aa0c:	ldr	r3, [pc, #24]	; 1aa2c <argp_error@@Base+0xb2c>
   1aa10:	str	r2, [r3]
   1aa14:	ldr	r3, [r4, #8]
   1aa18:	str	r3, [r5, #8]
   1aa1c:	add	sp, sp, #20
   1aa20:	pop	{r4, r5, pc}
   1aa24:	andeq	pc, r2, r0, lsr fp	; <UNPREDICTABLE>
   1aa28:	andeq	pc, r2, r8, asr #23
   1aa2c:	andeq	pc, r2, r8, lsr #24
   1aa30:	push	{r0, r1, r2, r3, r4, lr}
   1aa34:	mov	r3, #1
   1aa38:	str	r3, [sp, #8]
   1aa3c:	mov	r3, #0
   1aa40:	str	r3, [sp]
   1aa44:	str	r3, [sp, #4]
   1aa48:	bl	1a9c0 <argp_error@@Base+0xac0>
   1aa4c:	add	sp, sp, #20
   1aa50:	pop	{pc}		; (ldr pc, [sp], #4)
   1aa54:	b	17eec <_obstack_memory_used@@Base+0xab8>
   1aa58:	cmp	r1, #0
   1aa5c:	orreq	r1, r1, #1
   1aa60:	b	17f18 <_obstack_memory_used@@Base+0xae4>
   1aa64:	b	17e98 <_obstack_memory_used@@Base+0xa64>
   1aa68:	cmp	r2, #0
   1aa6c:	cmpne	r1, #0
   1aa70:	moveq	r2, #1
   1aa74:	moveq	r1, r2
   1aa78:	b	1aa7c <argp_error@@Base+0xb7c>
   1aa7c:	umull	r2, r3, r1, r2
   1aa80:	cmp	r3, #0
   1aa84:	bne	1aa90 <argp_error@@Base+0xb90>
   1aa88:	mov	r1, r2
   1aa8c:	b	17f18 <_obstack_memory_used@@Base+0xae4>
   1aa90:	push	{r4, lr}
   1aa94:	bl	11584 <__errno_location@plt>
   1aa98:	mov	r3, #12
   1aa9c:	str	r3, [r0]
   1aaa0:	mov	r0, #0
   1aaa4:	pop	{r4, pc}
   1aaa8:	push	{r4, r5, r6, r7, r8, lr}
   1aaac:	mov	r8, r0
   1aab0:	mov	r0, #36	; 0x24
   1aab4:	mov	r7, r1
   1aab8:	mov	r6, r2
   1aabc:	mov	r5, r3
   1aac0:	bl	17eec <_obstack_memory_used@@Base+0xab8>
   1aac4:	subs	r4, r0, #0
   1aac8:	beq	1ab18 <argp_error@@Base+0xc18>
   1aacc:	mov	r3, #0
   1aad0:	mov	r0, #200	; 0xc8
   1aad4:	str	r8, [r4]
   1aad8:	str	r7, [r4, #4]
   1aadc:	str	r6, [r4, #8]
   1aae0:	str	r5, [r4, #12]
   1aae4:	str	r3, [r4, #16]
   1aae8:	str	r3, [r4, #20]
   1aaec:	bl	17eec <_obstack_memory_used@@Base+0xab8>
   1aaf0:	cmp	r0, #0
   1aaf4:	mov	r5, r0
   1aaf8:	str	r0, [r4, #24]
   1aafc:	addne	r5, r0, #200	; 0xc8
   1ab00:	strne	r0, [r4, #28]
   1ab04:	strne	r5, [r4, #32]
   1ab08:	bne	1ab18 <argp_error@@Base+0xc18>
   1ab0c:	mov	r0, r4
   1ab10:	mov	r4, r5
   1ab14:	bl	17030 <argp_usage@@Base+0x170>
   1ab18:	mov	r0, r4
   1ab1c:	pop	{r4, r5, r6, r7, r8, pc}
   1ab20:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ab24:	mov	r4, r0
   1ab28:	ldr	r3, [r0, #16]
   1ab2c:	ldr	r6, [r0, #24]
   1ab30:	add	r6, r6, r3
   1ab34:	ldr	r2, [r4, #28]
   1ab38:	cmp	r2, r6
   1ab3c:	bls	1abec <argp_error@@Base+0xcec>
   1ab40:	ldr	r7, [r4, #20]
   1ab44:	cmp	r7, #0
   1ab48:	bne	1aba0 <argp_error@@Base+0xca0>
   1ab4c:	ldr	r5, [r4, #4]
   1ab50:	cmp	r5, #0
   1ab54:	beq	1aba0 <argp_error@@Base+0xca0>
   1ab58:	ldr	r1, [r4, #32]
   1ab5c:	add	r3, r2, r5
   1ab60:	cmp	r1, r3
   1ab64:	bls	1ac00 <argp_error@@Base+0xd00>
   1ab68:	add	r7, r6, r5
   1ab6c:	sub	r2, r2, r6
   1ab70:	mov	r1, r6
   1ab74:	mov	r0, r7
   1ab78:	bl	113ec <memmove@plt>
   1ab7c:	ldr	r3, [r4, #28]
   1ab80:	mov	r0, r6
   1ab84:	mov	r2, r5
   1ab88:	mov	r1, #32
   1ab8c:	mov	r6, r7
   1ab90:	add	r3, r3, r5
   1ab94:	str	r3, [r4, #28]
   1ab98:	bl	115b4 <memset@plt>
   1ab9c:	str	r5, [r4, #20]
   1aba0:	ldr	r9, [r4, #28]
   1aba4:	mov	r1, #10
   1aba8:	mov	r0, r6
   1abac:	sub	r8, r9, r6
   1abb0:	mov	r2, r8
   1abb4:	bl	115e4 <memchr@plt>
   1abb8:	mov	fp, r0
   1abbc:	ldr	r5, [r4, #8]
   1abc0:	ldr	r2, [r4, #20]
   1abc4:	cmp	r2, #0
   1abc8:	movlt	r3, #0
   1abcc:	strlt	r3, [r4, #20]
   1abd0:	cmp	r0, #0
   1abd4:	ldr	r0, [r4, #20]
   1abd8:	bne	1ac1c <argp_error@@Base+0xd1c>
   1abdc:	add	r3, r0, r8
   1abe0:	cmp	r3, r5
   1abe4:	bcs	1ac3c <argp_error@@Base+0xd3c>
   1abe8:	str	r3, [r4, #20]
   1abec:	ldrd	r2, [r4, #24]
   1abf0:	sub	r3, r3, r2
   1abf4:	str	r3, [r4, #16]
   1abf8:	add	sp, sp, #12
   1abfc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ac00:	mov	r0, #32
   1ac04:	add	r7, r7, #1
   1ac08:	ldr	r1, [r4]
   1ac0c:	bl	11710 <putc_unlocked@plt>
   1ac10:	cmp	r5, r7
   1ac14:	bne	1ac00 <argp_error@@Base+0xd00>
   1ac18:	b	1ab9c <argp_error@@Base+0xc9c>
   1ac1c:	sub	r2, fp, r6
   1ac20:	add	r2, r2, r0
   1ac24:	cmp	r2, r5
   1ac28:	bge	1ac40 <argp_error@@Base+0xd40>
   1ac2c:	mov	r3, #0
   1ac30:	str	r3, [r4, #20]
   1ac34:	add	r3, fp, #1
   1ac38:	b	1ac94 <argp_error@@Base+0xd94>
   1ac3c:	mov	fp, r9
   1ac40:	ldr	sl, [r4, #12]
   1ac44:	cmp	sl, #0
   1ac48:	bge	1acb4 <argp_error@@Base+0xdb4>
   1ac4c:	cmp	r9, fp
   1ac50:	sub	sl, r5, #1
   1ac54:	bls	1ac9c <argp_error@@Base+0xd9c>
   1ac58:	sub	r0, sl, r0
   1ac5c:	sub	r2, r9, fp
   1ac60:	mov	r1, fp
   1ac64:	add	r0, r6, r0
   1ac68:	bl	113ec <memmove@plt>
   1ac6c:	ldr	r8, [r4, #20]
   1ac70:	sub	sl, sl, r8
   1ac74:	add	sl, r6, sl
   1ac78:	sub	r3, sl, fp
   1ac7c:	ldr	sl, [r4, #28]
   1ac80:	sub	r3, sl, r3
   1ac84:	str	r3, [r4, #28]
   1ac88:	mov	r3, #0
   1ac8c:	str	r3, [r4, #20]
   1ac90:	add	r3, r6, r5
   1ac94:	mov	r6, r3
   1ac98:	b	1ab34 <argp_error@@Base+0xc34>
   1ac9c:	add	r0, r8, r0
   1aca0:	str	r0, [r4, #20]
   1aca4:	sub	r0, sl, r0
   1aca8:	add	r9, r9, r0
   1acac:	str	r9, [r4, #28]
   1acb0:	b	1abec <argp_error@@Base+0xcec>
   1acb4:	sub	r5, r5, r0
   1acb8:	add	r5, r6, r5
   1acbc:	mov	r7, r5
   1acc0:	cmp	r6, r7
   1acc4:	mov	r2, r7
   1acc8:	bhi	1acf4 <argp_error@@Base+0xdf4>
   1accc:	str	r2, [sp, #4]
   1acd0:	sub	r7, r7, #1
   1acd4:	bl	1153c <__ctype_b_loc@plt>
   1acd8:	ldr	r2, [sp, #4]
   1acdc:	ldr	r0, [r0]
   1ace0:	ldrb	r1, [r2]
   1ace4:	lsl	r1, r1, #1
   1ace8:	ldrh	r1, [r0, r1]
   1acec:	tst	r1, #1
   1acf0:	beq	1acc0 <argp_error@@Base+0xdc0>
   1acf4:	add	r7, r2, #1
   1acf8:	cmp	r6, r7
   1acfc:	bcs	1ad70 <argp_error@@Base+0xe70>
   1ad00:	cmp	r6, r2
   1ad04:	bhi	1ad40 <argp_error@@Base+0xe40>
   1ad08:	sub	r5, r2, #1
   1ad0c:	cmp	r6, r5
   1ad10:	mov	r2, r5
   1ad14:	bhi	1ad40 <argp_error@@Base+0xe40>
   1ad18:	str	r2, [sp, #4]
   1ad1c:	sub	r5, r5, #1
   1ad20:	bl	1153c <__ctype_b_loc@plt>
   1ad24:	ldr	r2, [sp, #4]
   1ad28:	ldr	r1, [r0]
   1ad2c:	ldrb	r3, [r2]
   1ad30:	lsl	r3, r3, #1
   1ad34:	ldrh	r3, [r1, r3]
   1ad38:	tst	r3, #1
   1ad3c:	bne	1ad0c <argp_error@@Base+0xe0c>
   1ad40:	add	r5, r2, #1
   1ad44:	add	r3, r8, #1
   1ad48:	add	r3, r6, r3
   1ad4c:	cmp	r7, r3
   1ad50:	bne	1add8 <argp_error@@Base+0xed8>
   1ad54:	ldr	r3, [r4, #32]
   1ad58:	sub	r3, r3, r5
   1ad5c:	cmp	sl, r3
   1ad60:	bge	1ade8 <argp_error@@Base+0xee8>
   1ad64:	mov	r3, #10
   1ad68:	strb	r3, [r5], #1
   1ad6c:	b	1ae68 <argp_error@@Base+0xf68>
   1ad70:	cmp	fp, r5
   1ad74:	bls	1adcc <argp_error@@Base+0xecc>
   1ad78:	add	r7, r5, #1
   1ad7c:	cmp	fp, r7
   1ad80:	mov	r5, r7
   1ad84:	beq	1adcc <argp_error@@Base+0xecc>
   1ad88:	bl	1153c <__ctype_b_loc@plt>
   1ad8c:	ldrb	r2, [r5]
   1ad90:	add	r7, r7, #1
   1ad94:	ldr	r1, [r0]
   1ad98:	lsl	r2, r2, #1
   1ad9c:	ldrh	r2, [r1, r2]
   1ada0:	tst	r2, #1
   1ada4:	beq	1ad7c <argp_error@@Base+0xe7c>
   1ada8:	bl	1153c <__ctype_b_loc@plt>
   1adac:	ldr	r2, [r0]
   1adb0:	mov	r7, r5
   1adb4:	ldrb	r3, [r7, #1]!
   1adb8:	lsl	r3, r3, #1
   1adbc:	ldrh	r3, [r2, r3]
   1adc0:	tst	r3, #1
   1adc4:	bne	1adb4 <argp_error@@Base+0xeb4>
   1adc8:	b	1ad44 <argp_error@@Base+0xe44>
   1adcc:	cmp	fp, r5
   1add0:	bne	1ada8 <argp_error@@Base+0xea8>
   1add4:	b	1ac2c <argp_error@@Base+0xd2c>
   1add8:	add	r3, r5, #1
   1addc:	sub	r3, r7, r3
   1ade0:	cmp	sl, r3
   1ade4:	ble	1ad64 <argp_error@@Base+0xe64>
   1ade8:	cmp	r9, r7
   1adec:	bls	1ad64 <argp_error@@Base+0xe64>
   1adf0:	ldr	r3, [r4, #32]
   1adf4:	add	r0, sl, #1
   1adf8:	sub	r3, r3, r9
   1adfc:	cmp	r3, r0
   1ae00:	ble	1ae30 <argp_error@@Base+0xf30>
   1ae04:	sub	r9, r9, r7
   1ae08:	mov	r1, r7
   1ae0c:	mov	r2, r9
   1ae10:	add	r0, r5, r0
   1ae14:	bl	113ec <memmove@plt>
   1ae18:	ldr	r7, [r4, #12]
   1ae1c:	add	r7, r7, #1
   1ae20:	add	r7, r5, r7
   1ae24:	add	r9, r7, r9
   1ae28:	sub	r8, r9, r6
   1ae2c:	b	1ad64 <argp_error@@Base+0xe64>
   1ae30:	ldr	r0, [r4, #24]
   1ae34:	cmp	r0, r5
   1ae38:	bcs	1ae4c <argp_error@@Base+0xf4c>
   1ae3c:	sub	r2, r5, r0
   1ae40:	mov	r1, #1
   1ae44:	ldr	r3, [r4]
   1ae48:	bl	11440 <fwrite_unlocked@plt>
   1ae4c:	mov	r0, #10
   1ae50:	ldr	r1, [r4]
   1ae54:	bl	11710 <putc_unlocked@plt>
   1ae58:	ldr	r5, [r4, #24]
   1ae5c:	sub	r6, r6, r5
   1ae60:	add	r8, r8, r6
   1ae64:	mov	r6, r5
   1ae68:	ldr	r2, [r4, #12]
   1ae6c:	sub	r3, r7, r5
   1ae70:	cmp	r3, r2
   1ae74:	bge	1aefc <argp_error@@Base+0xffc>
   1ae78:	add	r3, r8, #1
   1ae7c:	add	r3, r6, r3
   1ae80:	cmp	r7, r3
   1ae84:	bne	1ae98 <argp_error@@Base+0xf98>
   1ae88:	ldr	r3, [r4, #32]
   1ae8c:	sub	r3, r3, r7
   1ae90:	cmp	r2, r3
   1ae94:	ble	1aefc <argp_error@@Base+0xffc>
   1ae98:	mov	r9, #0
   1ae9c:	b	1af14 <argp_error@@Base+0x1014>
   1aea0:	mov	r2, #32
   1aea4:	strb	r2, [r3], #1
   1aea8:	ldr	r1, [r4, #12]
   1aeac:	sub	r2, r3, r5
   1aeb0:	cmp	r1, r2
   1aeb4:	bgt	1aea0 <argp_error@@Base+0xfa0>
   1aeb8:	cmp	r3, r7
   1aebc:	bcs	1aed8 <argp_error@@Base+0xfd8>
   1aec0:	add	r2, r6, r8
   1aec4:	mov	r0, r3
   1aec8:	sub	r2, r2, r7
   1aecc:	mov	r1, r7
   1aed0:	bl	113ec <memmove@plt>
   1aed4:	mov	r3, r0
   1aed8:	ldr	r2, [r4, #12]
   1aedc:	sub	r6, r7, r6
   1aee0:	sub	r6, r8, r6
   1aee4:	add	r6, r3, r6
   1aee8:	str	r6, [r4, #28]
   1aeec:	cmp	r2, #0
   1aef0:	mvneq	r2, #0
   1aef4:	str	r2, [r4, #20]
   1aef8:	b	1ac94 <argp_error@@Base+0xd94>
   1aefc:	mov	r3, r5
   1af00:	b	1aea8 <argp_error@@Base+0xfa8>
   1af04:	mov	r0, #32
   1af08:	ldr	r1, [r4]
   1af0c:	add	r9, r9, #1
   1af10:	bl	11710 <putc_unlocked@plt>
   1af14:	ldr	r3, [r4, #12]
   1af18:	cmp	r3, r9
   1af1c:	bgt	1af04 <argp_error@@Base+0x1004>
   1af20:	mov	r3, r5
   1af24:	b	1aeb8 <argp_error@@Base+0xfb8>
   1af28:	push	{r4, lr}
   1af2c:	mov	r4, r0
   1af30:	bl	1ab20 <argp_error@@Base+0xc20>
   1af34:	ldr	r0, [r4, #24]
   1af38:	ldr	r2, [r4, #28]
   1af3c:	cmp	r2, r0
   1af40:	bls	1af54 <argp_error@@Base+0x1054>
   1af44:	sub	r2, r2, r0
   1af48:	mov	r1, #1
   1af4c:	ldr	r3, [r4]
   1af50:	bl	11440 <fwrite_unlocked@plt>
   1af54:	ldr	r0, [r4, #24]
   1af58:	bl	17030 <argp_usage@@Base+0x170>
   1af5c:	mov	r0, r4
   1af60:	pop	{r4, lr}
   1af64:	b	17030 <argp_usage@@Base+0x170>
   1af68:	ldrd	r2, [r0, #28]
   1af6c:	sub	r3, r3, r2
   1af70:	cmp	r3, r1
   1af74:	bcc	1af80 <argp_error@@Base+0x1080>
   1af78:	mov	r0, #1
   1af7c:	bx	lr
   1af80:	push	{r4, r5, r6, lr}
   1af84:	mov	r4, r0
   1af88:	mov	r5, r1
   1af8c:	bl	1ab20 <argp_error@@Base+0xc20>
   1af90:	mov	r1, #1
   1af94:	ldr	r3, [r4]
   1af98:	ldr	r0, [r4, #24]
   1af9c:	ldr	r2, [r4, #28]
   1afa0:	sub	r2, r2, r0
   1afa4:	bl	11440 <fwrite_unlocked@plt>
   1afa8:	mov	r1, r0
   1afac:	ldr	r0, [r4, #24]
   1afb0:	ldr	r2, [r4, #28]
   1afb4:	sub	r3, r2, r0
   1afb8:	cmp	r1, r3
   1afbc:	bne	1afe4 <argp_error@@Base+0x10e4>
   1afc0:	ldr	r1, [r4, #32]
   1afc4:	mov	r3, #0
   1afc8:	str	r3, [r4, #16]
   1afcc:	str	r0, [r4, #28]
   1afd0:	sub	r1, r1, r0
   1afd4:	cmp	r5, r1
   1afd8:	bhi	1b00c <argp_error@@Base+0x110c>
   1afdc:	mov	r0, #1
   1afe0:	pop	{r4, r5, r6, pc}
   1afe4:	ldr	r3, [r4, #16]
   1afe8:	sub	r2, r2, r1
   1afec:	str	r2, [r4, #28]
   1aff0:	sub	r2, r2, r0
   1aff4:	sub	r3, r3, r1
   1aff8:	add	r1, r0, r1
   1affc:	str	r3, [r4, #16]
   1b000:	bl	113ec <memmove@plt>
   1b004:	mov	r0, #0
   1b008:	pop	{r4, r5, r6, pc}
   1b00c:	adds	r5, r5, r1
   1b010:	bcs	1b024 <argp_error@@Base+0x1124>
   1b014:	mov	r1, r5
   1b018:	bl	17f18 <_obstack_memory_used@@Base+0xae4>
   1b01c:	cmp	r0, #0
   1b020:	bne	1b034 <argp_error@@Base+0x1134>
   1b024:	bl	11584 <__errno_location@plt>
   1b028:	mov	r3, #12
   1b02c:	str	r3, [r0]
   1b030:	b	1b004 <argp_error@@Base+0x1104>
   1b034:	add	r5, r0, r5
   1b038:	str	r0, [r4, #24]
   1b03c:	str	r0, [r4, #28]
   1b040:	str	r5, [r4, #32]
   1b044:	b	1afdc <argp_error@@Base+0x10dc>
   1b048:	push	{r1, r2, r3}
   1b04c:	push	{r0, r1, r2, r4, r5, r6, lr}
   1b050:	mov	r4, r0
   1b054:	mov	r1, #150	; 0x96
   1b058:	add	r6, sp, #32
   1b05c:	mov	r0, r4
   1b060:	bl	1af68 <argp_error@@Base+0x1068>
   1b064:	cmp	r0, #0
   1b068:	bne	1b080 <argp_error@@Base+0x1180>
   1b06c:	mvn	r0, #0
   1b070:	add	sp, sp, #12
   1b074:	pop	{r4, r5, r6, lr}
   1b078:	add	sp, sp, #12
   1b07c:	bx	lr
   1b080:	ldr	r0, [r4, #28]
   1b084:	mov	r3, r6
   1b088:	str	r6, [sp, #4]
   1b08c:	ldr	r5, [r4, #32]
   1b090:	ldr	r2, [sp, #28]
   1b094:	sub	r5, r5, r0
   1b098:	mov	r1, r5
   1b09c:	bl	1165c <vsnprintf@plt>
   1b0a0:	cmp	r0, r5
   1b0a4:	addcs	r1, r0, #1
   1b0a8:	bcs	1b05c <argp_error@@Base+0x115c>
   1b0ac:	ldr	r3, [r4, #28]
   1b0b0:	add	r3, r3, r0
   1b0b4:	str	r3, [r4, #28]
   1b0b8:	b	1b070 <argp_error@@Base+0x1170>
   1b0bc:	ldr	r3, [r0, #28]
   1b0c0:	push	{r4, r5, r6, lr}
   1b0c4:	mov	r4, r2
   1b0c8:	mov	r5, r0
   1b0cc:	mov	r6, r1
   1b0d0:	add	r3, r3, r2
   1b0d4:	ldr	r2, [r0, #32]
   1b0d8:	cmp	r2, r3
   1b0dc:	bcc	1b104 <argp_error@@Base+0x1204>
   1b0e0:	mov	r2, r4
   1b0e4:	mov	r1, r6
   1b0e8:	ldr	r0, [r5, #28]
   1b0ec:	bl	11434 <memcpy@plt>
   1b0f0:	ldr	r3, [r5, #28]
   1b0f4:	add	r3, r3, r4
   1b0f8:	str	r3, [r5, #28]
   1b0fc:	mov	r0, r4
   1b100:	pop	{r4, r5, r6, pc}
   1b104:	mov	r1, r4
   1b108:	bl	1af68 <argp_error@@Base+0x1068>
   1b10c:	cmp	r0, #0
   1b110:	bne	1b0e0 <argp_error@@Base+0x11e0>
   1b114:	mov	r4, r0
   1b118:	b	1b0fc <argp_error@@Base+0x11fc>
   1b11c:	push	{r4, r5, r6, lr}
   1b120:	mov	r6, r0
   1b124:	mov	r0, r1
   1b128:	mov	r5, r1
   1b12c:	bl	11560 <strlen@plt>
   1b130:	subs	r4, r0, #0
   1b134:	beq	1b154 <argp_error@@Base+0x1254>
   1b138:	mov	r2, r4
   1b13c:	mov	r1, r5
   1b140:	mov	r0, r6
   1b144:	bl	1b0bc <argp_error@@Base+0x11bc>
   1b148:	subs	r0, r4, r0
   1b14c:	mvnne	r0, #0
   1b150:	pop	{r4, r5, r6, pc}
   1b154:	mov	r0, r4
   1b158:	pop	{r4, r5, r6, pc}
   1b15c:	ldrd	r2, [r0, #28]
   1b160:	push	{r4, r5, r6, lr}
   1b164:	mov	r5, r0
   1b168:	mov	r4, r1
   1b16c:	cmp	r2, r3
   1b170:	bcs	1b18c <argp_error@@Base+0x128c>
   1b174:	ldr	r3, [r5, #28]
   1b178:	uxtb	r0, r4
   1b17c:	add	r2, r3, #1
   1b180:	str	r2, [r5, #28]
   1b184:	strb	r4, [r3]
   1b188:	pop	{r4, r5, r6, pc}
   1b18c:	mov	r1, #1
   1b190:	bl	1af68 <argp_error@@Base+0x1068>
   1b194:	cmp	r0, #0
   1b198:	bne	1b174 <argp_error@@Base+0x1274>
   1b19c:	mvn	r0, #0
   1b1a0:	pop	{r4, r5, r6, pc}
   1b1a4:	ldrd	r2, [r0, #24]
   1b1a8:	push	{r4, r5, r6, lr}
   1b1ac:	mov	r4, r0
   1b1b0:	mov	r5, r1
   1b1b4:	sub	r3, r3, r2
   1b1b8:	ldr	r2, [r0, #16]
   1b1bc:	cmp	r3, r2
   1b1c0:	bls	1b1c8 <argp_error@@Base+0x12c8>
   1b1c4:	bl	1ab20 <argp_error@@Base+0xc20>
   1b1c8:	ldr	r0, [r4, #4]
   1b1cc:	str	r5, [r4, #4]
   1b1d0:	pop	{r4, r5, r6, pc}
   1b1d4:	ldrd	r2, [r0, #24]
   1b1d8:	push	{r4, r5, r6, lr}
   1b1dc:	mov	r4, r0
   1b1e0:	mov	r5, r1
   1b1e4:	sub	r3, r3, r2
   1b1e8:	ldr	r2, [r0, #16]
   1b1ec:	cmp	r3, r2
   1b1f0:	bls	1b1f8 <argp_error@@Base+0x12f8>
   1b1f4:	bl	1ab20 <argp_error@@Base+0xc20>
   1b1f8:	ldr	r0, [r4, #8]
   1b1fc:	str	r5, [r4, #8]
   1b200:	pop	{r4, r5, r6, pc}
   1b204:	ldrd	r2, [r0, #24]
   1b208:	push	{r4, r5, r6, lr}
   1b20c:	mov	r4, r0
   1b210:	mov	r5, r1
   1b214:	sub	r3, r3, r2
   1b218:	ldr	r2, [r0, #16]
   1b21c:	cmp	r3, r2
   1b220:	bls	1b228 <argp_error@@Base+0x1328>
   1b224:	bl	1ab20 <argp_error@@Base+0xc20>
   1b228:	ldr	r0, [r4, #12]
   1b22c:	str	r5, [r4, #12]
   1b230:	pop	{r4, r5, r6, pc}
   1b234:	ldrd	r2, [r0, #24]
   1b238:	push	{r4, lr}
   1b23c:	mov	r4, r0
   1b240:	sub	r3, r3, r2
   1b244:	ldr	r2, [r0, #16]
   1b248:	cmp	r3, r2
   1b24c:	bls	1b254 <argp_error@@Base+0x1354>
   1b250:	bl	1ab20 <argp_error@@Base+0xc20>
   1b254:	ldr	r0, [r4, #20]
   1b258:	bic	r0, r0, r0, asr #31
   1b25c:	pop	{r4, pc}
   1b260:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1b264:	mov	r7, r0
   1b268:	ldr	r6, [pc, #72]	; 1b2b8 <argp_error@@Base+0x13b8>
   1b26c:	ldr	r5, [pc, #72]	; 1b2bc <argp_error@@Base+0x13bc>
   1b270:	add	r6, pc, r6
   1b274:	add	r5, pc, r5
   1b278:	sub	r6, r6, r5
   1b27c:	mov	r8, r1
   1b280:	mov	r9, r2
   1b284:	bl	1136c <calloc@plt-0x20>
   1b288:	asrs	r6, r6, #2
   1b28c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1b290:	mov	r4, #0
   1b294:	add	r4, r4, #1
   1b298:	ldr	r3, [r5], #4
   1b29c:	mov	r2, r9
   1b2a0:	mov	r1, r8
   1b2a4:	mov	r0, r7
   1b2a8:	blx	r3
   1b2ac:	cmp	r6, r4
   1b2b0:	bne	1b294 <argp_error@@Base+0x1394>
   1b2b4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1b2b8:	muleq	r1, ip, ip
   1b2bc:	muleq	r1, r4, ip
   1b2c0:	bx	lr
   1b2c4:	mov	r2, r1
   1b2c8:	mov	r1, r0
   1b2cc:	mov	r0, #3
   1b2d0:	b	11494 <__fxstat64@plt>

Disassembly of section .fini:

0001b2d4 <.fini>:
   1b2d4:	push	{r3, lr}
   1b2d8:	pop	{r3, pc}
