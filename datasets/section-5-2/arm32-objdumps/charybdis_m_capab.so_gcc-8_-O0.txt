
../repos/charybdis/modules/.libs/m_capab.so:     file format elf32-littlearm


Disassembly of section .init:

0000053c <_init>:
 53c:	push	{r3, lr}
 540:	bl	5d4 <call_weak_fn>
 544:	pop	{r3, pc}

Disassembly of section .plt:

00000548 <.plt>:
 548:	push	{lr}		; (str lr, [sp, #-4]!)
 54c:	ldr	lr, [pc, #4]	; 558 <.plt+0x10>
 550:	add	lr, pc, lr
 554:	ldr	pc, [lr, #8]!
 558:	.word	0x00010aa8

0000055c <__cxa_finalize@plt>:
 55c:	add	ip, pc, #0, 12
 560:	add	ip, ip, #16, 20	; 0x10000
 564:	ldr	pc, [ip, #2728]!	; 0xaa8

00000568 <free@plt>:
 568:	add	ip, pc, #0, 12
 56c:	add	ip, ip, #16, 20	; 0x10000
 570:	ldr	pc, [ip, #2720]!	; 0xaa0

00000574 <rb_outofmemory@plt>:
 574:	add	ip, pc, #0, 12
 578:	add	ip, ip, #16, 20	; 0x10000
 57c:	ldr	pc, [ip, #2712]!	; 0xa98

00000580 <strcpy@plt>:
 580:	add	ip, pc, #0, 12
 584:	add	ip, ip, #16, 20	; 0x10000
 588:	ldr	pc, [ip, #2704]!	; 0xa90

0000058c <malloc@plt>:
 58c:	add	ip, pc, #0, 12
 590:	add	ip, ip, #16, 20	; 0x10000
 594:	ldr	pc, [ip, #2696]!	; 0xa88

00000598 <__gmon_start__@plt>:
 598:	add	ip, pc, #0, 12
 59c:	add	ip, ip, #16, 20	; 0x10000
 5a0:	ldr	pc, [ip, #2688]!	; 0xa80

000005a4 <strlen@plt>:
 5a4:	add	ip, pc, #0, 12
 5a8:	add	ip, ip, #16, 20	; 0x10000
 5ac:	ldr	pc, [ip, #2680]!	; 0xa78

000005b0 <capability_get@plt>:
 5b0:	add	ip, pc, #0, 12
 5b4:	add	ip, ip, #16, 20	; 0x10000
 5b8:	ldr	pc, [ip, #2672]!	; 0xa70

000005bc <rb_strtok_r@plt>:
 5bc:	add	ip, pc, #0, 12
 5c0:	add	ip, ip, #16, 20	; 0x10000
 5c4:	ldr	pc, [ip, #2664]!	; 0xa68

000005c8 <exit_client@plt>:
 5c8:	add	ip, pc, #0, 12
 5cc:	add	ip, ip, #16, 20	; 0x10000
 5d0:	ldr	pc, [ip, #2656]!	; 0xa60

Disassembly of section .text:

000005d4 <call_weak_fn>:
 5d4:	ldr	r3, [pc, #20]	; 5f0 <call_weak_fn+0x1c>
 5d8:	ldr	r2, [pc, #20]	; 5f4 <call_weak_fn+0x20>
 5dc:	add	r3, pc, r3
 5e0:	ldr	r2, [r3, r2]
 5e4:	cmp	r2, #0
 5e8:	bxeq	lr
 5ec:	b	598 <__gmon_start__@plt>
 5f0:	.word	0x00010a1c
 5f4:	.word	0x00000048

000005f8 <deregister_tm_clones>:
 5f8:	ldr	r0, [pc, #44]	; 62c <deregister_tm_clones+0x34>
 5fc:	ldr	r3, [pc, #44]	; 630 <deregister_tm_clones+0x38>
 600:	add	r0, pc, r0
 604:	add	r3, pc, r3
 608:	cmp	r3, r0
 60c:	ldr	r3, [pc, #32]	; 634 <deregister_tm_clones+0x3c>
 610:	add	r3, pc, r3
 614:	bxeq	lr
 618:	ldr	r2, [pc, #24]	; 638 <deregister_tm_clones+0x40>
 61c:	ldr	r3, [r3, r2]
 620:	cmp	r3, #0
 624:	bxeq	lr
 628:	bx	r3
 62c:	.word	0x00010b08
 630:	.word	0x00010b04
 634:	.word	0x000109e8
 638:	.word	0x00000040

0000063c <register_tm_clones>:
 63c:	ldr	r0, [pc, #56]	; 67c <register_tm_clones+0x40>
 640:	ldr	r3, [pc, #56]	; 680 <register_tm_clones+0x44>
 644:	add	r0, pc, r0
 648:	add	r3, pc, r3
 64c:	sub	r1, r3, r0
 650:	ldr	r3, [pc, #44]	; 684 <register_tm_clones+0x48>
 654:	asr	r1, r1, #2
 658:	add	r3, pc, r3
 65c:	add	r1, r1, r1, lsr #31
 660:	asrs	r1, r1, #1
 664:	bxeq	lr
 668:	ldr	r2, [pc, #24]	; 688 <register_tm_clones+0x4c>
 66c:	ldr	r3, [r3, r2]
 670:	cmp	r3, #0
 674:	bxeq	lr
 678:	bx	r3
 67c:	.word	0x00010ac4
 680:	.word	0x00010ac0
 684:	.word	0x000109a0
 688:	.word	0x0000004c

0000068c <__do_global_dtors_aux>:
 68c:	ldr	r3, [pc, #76]	; 6e0 <__do_global_dtors_aux+0x54>
 690:	ldr	r2, [pc, #76]	; 6e4 <__do_global_dtors_aux+0x58>
 694:	add	r3, pc, r3
 698:	add	r2, pc, r2
 69c:	ldrb	r3, [r3]
 6a0:	cmp	r3, #0
 6a4:	bxne	lr
 6a8:	ldr	r3, [pc, #56]	; 6e8 <__do_global_dtors_aux+0x5c>
 6ac:	push	{r4, lr}
 6b0:	ldr	r3, [r2, r3]
 6b4:	cmp	r3, #0
 6b8:	beq	6c8 <__do_global_dtors_aux+0x3c>
 6bc:	ldr	r3, [pc, #40]	; 6ec <__do_global_dtors_aux+0x60>
 6c0:	ldr	r0, [pc, r3]
 6c4:	bl	55c <__cxa_finalize@plt>
 6c8:	bl	5f8 <deregister_tm_clones>
 6cc:	ldr	r3, [pc, #28]	; 6f0 <__do_global_dtors_aux+0x64>
 6d0:	mov	r2, #1
 6d4:	add	r3, pc, r3
 6d8:	strb	r2, [r3]
 6dc:	pop	{r4, pc}
 6e0:	.word	0x00010a74
 6e4:	.word	0x00010960
 6e8:	.word	0x00000038
 6ec:	.word	0x00010988
 6f0:	.word	0x00010a34

000006f4 <frame_dummy>:
 6f4:	b	63c <register_tm_clones>

000006f8 <rb_strdup>:
 6f8:	str	fp, [sp, #-8]!
 6fc:	str	lr, [sp, #4]
 700:	add	fp, sp, #4
 704:	sub	sp, sp, #16
 708:	str	r0, [fp, #-16]
 70c:	ldr	r0, [fp, #-16]
 710:	bl	5a4 <strlen@plt>
 714:	mov	r3, r0
 718:	add	r3, r3, #1
 71c:	mov	r0, r3
 720:	bl	58c <malloc@plt>
 724:	mov	r3, r0
 728:	str	r3, [fp, #-8]
 72c:	ldr	r3, [fp, #-8]
 730:	cmp	r3, #0
 734:	moveq	r3, #1
 738:	movne	r3, #0
 73c:	uxtb	r3, r3
 740:	cmp	r3, #0
 744:	beq	74c <rb_strdup+0x54>
 748:	bl	574 <rb_outofmemory@plt>
 74c:	ldr	r1, [fp, #-16]
 750:	ldr	r0, [fp, #-8]
 754:	bl	580 <strcpy@plt>
 758:	ldr	r3, [fp, #-8]
 75c:	mov	r0, r3
 760:	sub	sp, fp, #4
 764:	ldr	fp, [sp]
 768:	add	sp, sp, #4
 76c:	pop	{pc}		; (ldr pc, [sp], #4)

00000770 <rb_free>:
 770:	str	fp, [sp, #-8]!
 774:	str	lr, [sp, #4]
 778:	add	fp, sp, #4
 77c:	sub	sp, sp, #8
 780:	str	r0, [fp, #-8]
 784:	ldr	r3, [fp, #-8]
 788:	cmp	r3, #0
 78c:	movne	r3, #1
 790:	moveq	r3, #0
 794:	uxtb	r3, r3
 798:	cmp	r3, #0
 79c:	beq	7a8 <rb_free+0x38>
 7a0:	ldr	r0, [fp, #-8]
 7a4:	bl	568 <free@plt>
 7a8:	nop	{0}
 7ac:	sub	sp, fp, #4
 7b0:	ldr	fp, [sp]
 7b4:	add	sp, sp, #4
 7b8:	pop	{pc}		; (ldr pc, [sp], #4)

000007bc <mr_capab>:
 7bc:	strd	r4, [sp, #-16]!
 7c0:	str	fp, [sp, #8]
 7c4:	str	lr, [sp, #12]
 7c8:	add	fp, sp, #12
 7cc:	sub	sp, sp, #40	; 0x28
 7d0:	str	r0, [fp, #-40]	; 0xffffffd8
 7d4:	str	r1, [fp, #-44]	; 0xffffffd4
 7d8:	str	r2, [fp, #-48]	; 0xffffffd0
 7dc:	str	r3, [fp, #-52]	; 0xffffffcc
 7e0:	ldr	r4, [pc, #532]	; 9fc <mr_capab+0x240>
 7e4:	add	r4, pc, r4
 7e8:	ldr	r3, [fp, #-44]	; 0xffffffd4
 7ec:	ldr	r3, [r3, #432]	; 0x1b0
 7f0:	cmp	r3, #0
 7f4:	beq	9dc <mr_capab+0x220>
 7f8:	ldr	r3, [fp, #-44]	; 0xffffffd4
 7fc:	ldr	r3, [r3, #24]
 800:	cmp	r3, #0
 804:	bne	9e4 <mr_capab+0x228>
 808:	ldr	r3, [fp, #-44]	; 0xffffffd4
 80c:	ldr	r3, [r3, #432]	; 0x1b0
 810:	ldr	r3, [r3, #296]	; 0x128
 814:	mov	r2, r3
 818:	ldr	r3, [pc, #480]	; a00 <mr_capab+0x244>
 81c:	ldr	r3, [r4, r3]
 820:	ldr	r3, [r3]
 824:	mvn	r3, r3
 828:	and	r3, r3, r2
 82c:	cmp	r3, #0
 830:	beq	850 <mr_capab+0x94>
 834:	ldr	r3, [pc, #456]	; a04 <mr_capab+0x248>
 838:	add	r3, pc, r3
 83c:	ldr	r2, [fp, #-44]	; 0xffffffd4
 840:	ldr	r1, [fp, #-44]	; 0xffffffd4
 844:	ldr	r0, [fp, #-44]	; 0xffffffd4
 848:	bl	5c8 <exit_client@plt>
 84c:	b	9e8 <mr_capab+0x22c>
 850:	ldr	r3, [fp, #-44]	; 0xffffffd4
 854:	ldr	r3, [r3, #432]	; 0x1b0
 858:	ldr	r3, [r3, #296]	; 0x128
 85c:	mov	r2, r3
 860:	ldr	r3, [pc, #416]	; a08 <mr_capab+0x24c>
 864:	ldr	r3, [r4, r3]
 868:	ldr	r3, [r3]
 86c:	orr	r2, r2, r3
 870:	ldr	r3, [fp, #-44]	; 0xffffffd4
 874:	ldr	r3, [r3, #432]	; 0x1b0
 878:	str	r2, [r3, #296]	; 0x128
 87c:	ldr	r3, [fp, #-44]	; 0xffffffd4
 880:	ldr	r3, [r3, #432]	; 0x1b0
 884:	ldr	r3, [r3, #288]	; 0x120
 888:	mov	r0, r3
 88c:	bl	770 <rb_free>
 890:	ldr	r3, [fp, #4]
 894:	add	r3, r3, #4
 898:	ldr	r2, [r3]
 89c:	ldr	r3, [fp, #-44]	; 0xffffffd4
 8a0:	ldr	r5, [r3, #432]	; 0x1b0
 8a4:	mov	r0, r2
 8a8:	bl	6f8 <rb_strdup>
 8ac:	mov	r3, r0
 8b0:	str	r3, [r5, #288]	; 0x120
 8b4:	mov	r3, #1
 8b8:	str	r3, [fp, #-16]
 8bc:	b	9c8 <mr_capab+0x20c>
 8c0:	ldr	r3, [fp, #-16]
 8c4:	lsl	r3, r3, #2
 8c8:	ldr	r2, [fp, #4]
 8cc:	add	r3, r2, r3
 8d0:	ldr	r3, [r3]
 8d4:	mov	r0, r3
 8d8:	bl	5a4 <strlen@plt>
 8dc:	mov	r3, r0
 8e0:	add	r3, r3, #1
 8e4:	add	r3, r3, #7
 8e8:	lsr	r3, r3, #3
 8ec:	lsl	r3, r3, #3
 8f0:	sub	sp, sp, r3
 8f4:	mov	r3, sp
 8f8:	add	r3, r3, #7
 8fc:	lsr	r3, r3, #3
 900:	lsl	r3, r3, #3
 904:	str	r3, [fp, #-24]	; 0xffffffe8
 908:	ldr	r3, [fp, #-16]
 90c:	lsl	r3, r3, #2
 910:	ldr	r2, [fp, #4]
 914:	add	r3, r2, r3
 918:	ldr	r3, [r3]
 91c:	mov	r1, r3
 920:	ldr	r0, [fp, #-24]	; 0xffffffe8
 924:	bl	580 <strcpy@plt>
 928:	ldr	r3, [fp, #-24]	; 0xffffffe8
 92c:	str	r3, [fp, #-28]	; 0xffffffe4
 930:	sub	r3, fp, #32
 934:	mov	r2, r3
 938:	ldr	r3, [pc, #204]	; a0c <mr_capab+0x250>
 93c:	add	r3, pc, r3
 940:	mov	r1, r3
 944:	ldr	r0, [fp, #-28]	; 0xffffffe4
 948:	bl	5bc <rb_strtok_r@plt>
 94c:	str	r0, [fp, #-20]	; 0xffffffec
 950:	b	9b0 <mr_capab+0x1f4>
 954:	ldr	r3, [pc, #180]	; a10 <mr_capab+0x254>
 958:	ldr	r3, [r4, r3]
 95c:	ldr	r3, [r3]
 960:	mov	r2, #0
 964:	ldr	r1, [fp, #-20]	; 0xffffffec
 968:	mov	r0, r3
 96c:	bl	5b0 <capability_get@plt>
 970:	mov	r2, r0
 974:	ldr	r3, [fp, #-44]	; 0xffffffd4
 978:	ldr	r3, [r3, #432]	; 0x1b0
 97c:	ldr	r3, [r3, #296]	; 0x128
 980:	orr	r2, r2, r3
 984:	ldr	r3, [fp, #-44]	; 0xffffffd4
 988:	ldr	r3, [r3, #432]	; 0x1b0
 98c:	str	r2, [r3, #296]	; 0x128
 990:	sub	r3, fp, #32
 994:	mov	r2, r3
 998:	ldr	r3, [pc, #116]	; a14 <mr_capab+0x258>
 99c:	add	r3, pc, r3
 9a0:	mov	r1, r3
 9a4:	mov	r0, #0
 9a8:	bl	5bc <rb_strtok_r@plt>
 9ac:	str	r0, [fp, #-20]	; 0xffffffec
 9b0:	ldr	r3, [fp, #-20]	; 0xffffffec
 9b4:	cmp	r3, #0
 9b8:	bne	954 <mr_capab+0x198>
 9bc:	ldr	r3, [fp, #-16]
 9c0:	add	r3, r3, #1
 9c4:	str	r3, [fp, #-16]
 9c8:	ldr	r2, [fp, #-16]
 9cc:	ldr	r3, [fp, #-52]	; 0xffffffcc
 9d0:	cmp	r2, r3
 9d4:	blt	8c0 <mr_capab+0x104>
 9d8:	b	9e8 <mr_capab+0x22c>
 9dc:	nop	{0}
 9e0:	b	9e8 <mr_capab+0x22c>
 9e4:	nop	{0}
 9e8:	sub	sp, fp, #12
 9ec:	ldrd	r4, [sp]
 9f0:	ldr	fp, [sp, #8]
 9f4:	add	sp, sp, #12
 9f8:	pop	{pc}		; (ldr pc, [sp], #4)
 9fc:	.word	0x00010814
 a00:	.word	0x00000044
 a04:	.word	0x00000400
 a08:	.word	0x00000034
 a0c:	.word	0x00000314
 a10:	.word	0x0000003c
 a14:	.word	0x000002b4

00000a18 <me_gcap>:
 a18:	strd	r4, [sp, #-16]!
 a1c:	str	fp, [sp, #8]
 a20:	str	lr, [sp, #12]
 a24:	add	fp, sp, #12
 a28:	sub	sp, sp, #32
 a2c:	str	r0, [fp, #-32]	; 0xffffffe0
 a30:	str	r1, [fp, #-36]	; 0xffffffdc
 a34:	str	r2, [fp, #-40]	; 0xffffffd8
 a38:	str	r3, [fp, #-44]	; 0xffffffd4
 a3c:	ldr	r4, [pc, #396]	; bd0 <me_gcap+0x1b8>
 a40:	add	r4, pc, r4
 a44:	ldr	r3, [fp, #4]
 a48:	add	r3, r3, #4
 a4c:	ldr	r3, [r3]
 a50:	mov	r0, r3
 a54:	bl	5a4 <strlen@plt>
 a58:	mov	r3, r0
 a5c:	add	r3, r3, #1
 a60:	add	r3, r3, #7
 a64:	lsr	r3, r3, #3
 a68:	lsl	r3, r3, #3
 a6c:	sub	sp, sp, r3
 a70:	mov	r3, sp
 a74:	add	r3, r3, #7
 a78:	lsr	r3, r3, #3
 a7c:	lsl	r3, r3, #3
 a80:	str	r3, [fp, #-20]	; 0xffffffec
 a84:	ldr	r3, [fp, #4]
 a88:	add	r3, r3, #4
 a8c:	ldr	r3, [r3]
 a90:	mov	r1, r3
 a94:	ldr	r0, [fp, #-20]	; 0xffffffec
 a98:	bl	580 <strcpy@plt>
 a9c:	ldr	r3, [fp, #-20]	; 0xffffffec
 aa0:	str	r3, [fp, #-24]	; 0xffffffe8
 aa4:	ldr	r3, [fp, #-40]	; 0xffffffd8
 aa8:	ldrh	r3, [r3, #80]	; 0x50
 aac:	cmp	r3, #32
 ab0:	bne	bb8 <me_gcap+0x1a0>
 ab4:	ldr	r3, [fp, #-40]	; 0xffffffd8
 ab8:	ldr	r3, [r3, #28]
 abc:	ldr	r3, [r3, #64]	; 0x40
 ac0:	cmp	r3, #0
 ac4:	beq	b04 <me_gcap+0xec>
 ac8:	ldr	r3, [fp, #-40]	; 0xffffffd8
 acc:	ldr	r3, [r3, #28]
 ad0:	ldr	r3, [r3, #64]	; 0x40
 ad4:	ldrb	r3, [r3]
 ad8:	cmp	r3, #0
 adc:	beq	b04 <me_gcap+0xec>
 ae0:	ldr	r3, [fp, #-40]	; 0xffffffd8
 ae4:	ldr	r3, [r3, #28]
 ae8:	mov	r2, #0
 aec:	str	r2, [r3, #60]	; 0x3c
 af0:	ldr	r3, [fp, #-40]	; 0xffffffd8
 af4:	ldr	r3, [r3, #28]
 af8:	ldr	r3, [r3, #64]	; 0x40
 afc:	mov	r0, r3
 b00:	bl	770 <rb_free>
 b04:	ldr	r3, [fp, #4]
 b08:	add	r3, r3, #4
 b0c:	ldr	r2, [r3]
 b10:	ldr	r3, [fp, #-40]	; 0xffffffd8
 b14:	ldr	r5, [r3, #28]
 b18:	mov	r0, r2
 b1c:	bl	6f8 <rb_strdup>
 b20:	mov	r3, r0
 b24:	str	r3, [r5, #64]	; 0x40
 b28:	sub	r3, fp, #28
 b2c:	mov	r2, r3
 b30:	ldr	r3, [pc, #156]	; bd4 <me_gcap+0x1bc>
 b34:	add	r3, pc, r3
 b38:	mov	r1, r3
 b3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
 b40:	bl	5bc <rb_strtok_r@plt>
 b44:	str	r0, [fp, #-16]
 b48:	b	ba8 <me_gcap+0x190>
 b4c:	ldr	r3, [pc, #132]	; bd8 <me_gcap+0x1c0>
 b50:	ldr	r3, [r4, r3]
 b54:	ldr	r3, [r3]
 b58:	mov	r2, #0
 b5c:	ldr	r1, [fp, #-16]
 b60:	mov	r0, r3
 b64:	bl	5b0 <capability_get@plt>
 b68:	mov	r2, r0
 b6c:	ldr	r3, [fp, #-40]	; 0xffffffd8
 b70:	ldr	r3, [r3, #28]
 b74:	ldr	r3, [r3, #60]	; 0x3c
 b78:	orr	r2, r2, r3
 b7c:	ldr	r3, [fp, #-40]	; 0xffffffd8
 b80:	ldr	r3, [r3, #28]
 b84:	str	r2, [r3, #60]	; 0x3c
 b88:	sub	r3, fp, #28
 b8c:	mov	r2, r3
 b90:	ldr	r3, [pc, #68]	; bdc <me_gcap+0x1c4>
 b94:	add	r3, pc, r3
 b98:	mov	r1, r3
 b9c:	mov	r0, #0
 ba0:	bl	5bc <rb_strtok_r@plt>
 ba4:	str	r0, [fp, #-16]
 ba8:	ldr	r3, [fp, #-16]
 bac:	cmp	r3, #0
 bb0:	bne	b4c <me_gcap+0x134>
 bb4:	b	bbc <me_gcap+0x1a4>
 bb8:	nop	{0}
 bbc:	sub	sp, fp, #12
 bc0:	ldrd	r4, [sp]
 bc4:	ldr	fp, [sp, #8]
 bc8:	add	sp, sp, #12
 bcc:	pop	{pc}		; (ldr pc, [sp], #4)
 bd0:	.word	0x000105b8
 bd4:	.word	0x0000011c
 bd8:	.word	0x0000003c
 bdc:	.word	0x000000bc

Disassembly of section .fini:

00000be0 <_fini>:
 be0:	push	{r3, lr}
 be4:	pop	{r3, pc}
