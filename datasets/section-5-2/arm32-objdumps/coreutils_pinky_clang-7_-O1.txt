
../repos/coreutils/src/pinky:     file format elf32-littlearm


Disassembly of section .init:

00011100 <.init>:
   11100:	push	{r3, lr}
   11104:	bl	11474 <putchar_unlocked@plt+0x48>
   11108:	pop	{r3, pc}

Disassembly of section .plt:

0001110c <calloc@plt-0x14>:
   1110c:	push	{lr}		; (str lr, [sp, #-4]!)
   11110:	ldr	lr, [pc, #4]	; 1111c <calloc@plt-0x4>
   11114:	add	lr, pc, lr
   11118:	ldr	pc, [lr, #8]!
   1111c:	andeq	r5, r1, r4, ror #29

00011120 <calloc@plt>:
   11120:	add	ip, pc, #0, 12
   11124:	add	ip, ip, #86016	; 0x15000
   11128:	ldr	pc, [ip, #3812]!	; 0xee4

0001112c <fputs_unlocked@plt>:
   1112c:	add	ip, pc, #0, 12
   11130:	add	ip, ip, #86016	; 0x15000
   11134:	ldr	pc, [ip, #3804]!	; 0xedc

00011138 <raise@plt>:
   11138:	add	ip, pc, #0, 12
   1113c:	add	ip, ip, #86016	; 0x15000
   11140:	ldr	pc, [ip, #3796]!	; 0xed4

00011144 <getpwnam@plt>:
   11144:	add	ip, pc, #0, 12
   11148:	add	ip, ip, #86016	; 0x15000
   1114c:	ldr	pc, [ip, #3788]!	; 0xecc

00011150 <strcmp@plt>:
   11150:	add	ip, pc, #0, 12
   11154:	add	ip, ip, #86016	; 0x15000
   11158:	ldr	pc, [ip, #3780]!	; 0xec4

0001115c <fflush@plt>:
   1115c:	add	ip, pc, #0, 12
   11160:	add	ip, ip, #86016	; 0x15000
   11164:	ldr	pc, [ip, #3772]!	; 0xebc

00011168 <utmpxname@plt>:
   11168:	add	ip, pc, #0, 12
   1116c:	add	ip, ip, #86016	; 0x15000
   11170:	ldr	pc, [ip, #3764]!	; 0xeb4

00011174 <free@plt>:
   11174:	add	ip, pc, #0, 12
   11178:	add	ip, ip, #86016	; 0x15000
   1117c:	ldr	pc, [ip, #3756]!	; 0xeac

00011180 <gai_strerror@plt>:
   11180:	add	ip, pc, #0, 12
   11184:	add	ip, ip, #86016	; 0x15000
   11188:	ldr	pc, [ip, #3748]!	; 0xea4

0001118c <_exit@plt>:
   1118c:	add	ip, pc, #0, 12
   11190:	add	ip, ip, #86016	; 0x15000
   11194:	ldr	pc, [ip, #3740]!	; 0xe9c

00011198 <memcpy@plt>:
   11198:	add	ip, pc, #0, 12
   1119c:	add	ip, ip, #86016	; 0x15000
   111a0:	ldr	pc, [ip, #3732]!	; 0xe94

000111a4 <mbsinit@plt>:
   111a4:	add	ip, pc, #0, 12
   111a8:	add	ip, ip, #86016	; 0x15000
   111ac:	ldr	pc, [ip, #3724]!	; 0xe8c

000111b0 <time@plt>:
   111b0:	add	ip, pc, #0, 12
   111b4:	add	ip, ip, #86016	; 0x15000
   111b8:	ldr	pc, [ip, #3716]!	; 0xe84

000111bc <fwrite_unlocked@plt>:
   111bc:	add	ip, pc, #0, 12
   111c0:	add	ip, ip, #86016	; 0x15000
   111c4:	ldr	pc, [ip, #3708]!	; 0xe7c

000111c8 <memcmp@plt>:
   111c8:	add	ip, pc, #0, 12
   111cc:	add	ip, ip, #86016	; 0x15000
   111d0:	ldr	pc, [ip, #3700]!	; 0xe74

000111d4 <stpcpy@plt>:
   111d4:	add	ip, pc, #0, 12
   111d8:	add	ip, ip, #86016	; 0x15000
   111dc:	ldr	pc, [ip, #3692]!	; 0xe6c

000111e0 <dcgettext@plt>:
   111e0:	add	ip, pc, #0, 12
   111e4:	add	ip, ip, #86016	; 0x15000
   111e8:	ldr	pc, [ip, #3684]!	; 0xe64

000111ec <strdup@plt>:
   111ec:	add	ip, pc, #0, 12
   111f0:	add	ip, ip, #86016	; 0x15000
   111f4:	ldr	pc, [ip, #3676]!	; 0xe5c

000111f8 <setutxent@plt>:
   111f8:	add	ip, pc, #0, 12
   111fc:	add	ip, ip, #86016	; 0x15000
   11200:	ldr	pc, [ip, #3668]!	; 0xe54

00011204 <realloc@plt>:
   11204:	add	ip, pc, #0, 12
   11208:	add	ip, ip, #86016	; 0x15000
   1120c:	ldr	pc, [ip, #3660]!	; 0xe4c

00011210 <textdomain@plt>:
   11210:	add	ip, pc, #0, 12
   11214:	add	ip, ip, #86016	; 0x15000
   11218:	ldr	pc, [ip, #3652]!	; 0xe44

0001121c <iswprint@plt>:
   1121c:	add	ip, pc, #0, 12
   11220:	add	ip, ip, #86016	; 0x15000
   11224:	ldr	pc, [ip, #3644]!	; 0xe3c

00011228 <fwrite@plt>:
   11228:	add	ip, pc, #0, 12
   1122c:	add	ip, ip, #86016	; 0x15000
   11230:	ldr	pc, [ip, #3636]!	; 0xe34

00011234 <lseek64@plt>:
   11234:	add	ip, pc, #0, 12
   11238:	add	ip, ip, #86016	; 0x15000
   1123c:	ldr	pc, [ip, #3628]!	; 0xe2c

00011240 <__ctype_get_mb_cur_max@plt>:
   11240:	add	ip, pc, #0, 12
   11244:	add	ip, ip, #86016	; 0x15000
   11248:	ldr	pc, [ip, #3620]!	; 0xe24

0001124c <__fpending@plt>:
   1124c:	add	ip, pc, #0, 12
   11250:	add	ip, ip, #86016	; 0x15000
   11254:	ldr	pc, [ip, #3612]!	; 0xe1c

00011258 <ferror_unlocked@plt>:
   11258:	add	ip, pc, #0, 12
   1125c:	add	ip, ip, #86016	; 0x15000
   11260:	ldr	pc, [ip, #3604]!	; 0xe14

00011264 <mbrtowc@plt>:
   11264:	add	ip, pc, #0, 12
   11268:	add	ip, ip, #86016	; 0x15000
   1126c:	ldr	pc, [ip, #3596]!	; 0xe0c

00011270 <error@plt>:
   11270:	add	ip, pc, #0, 12
   11274:	add	ip, ip, #86016	; 0x15000
   11278:	ldr	pc, [ip, #3588]!	; 0xe04

0001127c <malloc@plt>:
   1127c:	add	ip, pc, #0, 12
   11280:	add	ip, ip, #86016	; 0x15000
   11284:	ldr	pc, [ip, #3580]!	; 0xdfc

00011288 <__libc_start_main@plt>:
   11288:	add	ip, pc, #0, 12
   1128c:	add	ip, ip, #86016	; 0x15000
   11290:	ldr	pc, [ip, #3572]!	; 0xdf4

00011294 <strftime@plt>:
   11294:	add	ip, pc, #0, 12
   11298:	add	ip, ip, #86016	; 0x15000
   1129c:	ldr	pc, [ip, #3564]!	; 0xdec

000112a0 <__freading@plt>:
   112a0:	add	ip, pc, #0, 12
   112a4:	add	ip, ip, #86016	; 0x15000
   112a8:	ldr	pc, [ip, #3556]!	; 0xde4

000112ac <localtime@plt>:
   112ac:	add	ip, pc, #0, 12
   112b0:	add	ip, ip, #86016	; 0x15000
   112b4:	ldr	pc, [ip, #3548]!	; 0xddc

000112b8 <__ctype_toupper_loc@plt>:
   112b8:	add	ip, pc, #0, 12
   112bc:	add	ip, ip, #86016	; 0x15000
   112c0:	ldr	pc, [ip, #3540]!	; 0xdd4

000112c4 <__gmon_start__@plt>:
   112c4:	add	ip, pc, #0, 12
   112c8:	add	ip, ip, #86016	; 0x15000
   112cc:	ldr	pc, [ip, #3532]!	; 0xdcc

000112d0 <getopt_long@plt>:
   112d0:	add	ip, pc, #0, 12
   112d4:	add	ip, ip, #86016	; 0x15000
   112d8:	ldr	pc, [ip, #3524]!	; 0xdc4

000112dc <kill@plt>:
   112dc:	add	ip, pc, #0, 12
   112e0:	add	ip, ip, #86016	; 0x15000
   112e4:	ldr	pc, [ip, #3516]!	; 0xdbc

000112e8 <__ctype_b_loc@plt>:
   112e8:	add	ip, pc, #0, 12
   112ec:	add	ip, ip, #86016	; 0x15000
   112f0:	ldr	pc, [ip, #3508]!	; 0xdb4

000112f4 <exit@plt>:
   112f4:	add	ip, pc, #0, 12
   112f8:	add	ip, ip, #86016	; 0x15000
   112fc:	ldr	pc, [ip, #3500]!	; 0xdac

00011300 <strlen@plt>:
   11300:	add	ip, pc, #0, 12
   11304:	add	ip, ip, #86016	; 0x15000
   11308:	ldr	pc, [ip, #3492]!	; 0xda4

0001130c <strchr@plt>:
   1130c:	add	ip, pc, #0, 12
   11310:	add	ip, ip, #86016	; 0x15000
   11314:	ldr	pc, [ip, #3484]!	; 0xd9c

00011318 <__errno_location@plt>:
   11318:	add	ip, pc, #0, 12
   1131c:	add	ip, ip, #86016	; 0x15000
   11320:	ldr	pc, [ip, #3476]!	; 0xd94

00011324 <__sprintf_chk@plt>:
   11324:	add	ip, pc, #0, 12
   11328:	add	ip, ip, #86016	; 0x15000
   1132c:	ldr	pc, [ip, #3468]!	; 0xd8c

00011330 <__cxa_atexit@plt>:
   11330:	add	ip, pc, #0, 12
   11334:	add	ip, ip, #86016	; 0x15000
   11338:	ldr	pc, [ip, #3460]!	; 0xd84

0001133c <memset@plt>:
   1133c:	add	ip, pc, #0, 12
   11340:	add	ip, ip, #86016	; 0x15000
   11344:	ldr	pc, [ip, #3452]!	; 0xd7c

00011348 <strncpy@plt>:
   11348:	add	ip, pc, #0, 12
   1134c:	add	ip, ip, #86016	; 0x15000
   11350:	ldr	pc, [ip, #3444]!	; 0xd74

00011354 <__printf_chk@plt>:
   11354:	add	ip, pc, #0, 12
   11358:	add	ip, ip, #86016	; 0x15000
   1135c:	ldr	pc, [ip, #3436]!	; 0xd6c

00011360 <fileno@plt>:
   11360:	add	ip, pc, #0, 12
   11364:	add	ip, ip, #86016	; 0x15000
   11368:	ldr	pc, [ip, #3428]!	; 0xd64

0001136c <__fprintf_chk@plt>:
   1136c:	add	ip, pc, #0, 12
   11370:	add	ip, ip, #86016	; 0x15000
   11374:	ldr	pc, [ip, #3420]!	; 0xd5c

00011378 <fclose@plt>:
   11378:	add	ip, pc, #0, 12
   1137c:	add	ip, ip, #86016	; 0x15000
   11380:	ldr	pc, [ip, #3412]!	; 0xd54

00011384 <fseeko64@plt>:
   11384:	add	ip, pc, #0, 12
   11388:	add	ip, ip, #86016	; 0x15000
   1138c:	ldr	pc, [ip, #3404]!	; 0xd4c

00011390 <endutxent@plt>:
   11390:	add	ip, pc, #0, 12
   11394:	add	ip, ip, #86016	; 0x15000
   11398:	ldr	pc, [ip, #3396]!	; 0xd44

0001139c <setlocale@plt>:
   1139c:	add	ip, pc, #0, 12
   113a0:	add	ip, ip, #86016	; 0x15000
   113a4:	ldr	pc, [ip, #3388]!	; 0xd3c

000113a8 <strrchr@plt>:
   113a8:	add	ip, pc, #0, 12
   113ac:	add	ip, ip, #86016	; 0x15000
   113b0:	ldr	pc, [ip, #3380]!	; 0xd34

000113b4 <nl_langinfo@plt>:
   113b4:	add	ip, pc, #0, 12
   113b8:	add	ip, ip, #86016	; 0x15000
   113bc:	ldr	pc, [ip, #3372]!	; 0xd2c

000113c0 <fopen64@plt>:
   113c0:	add	ip, pc, #0, 12
   113c4:	add	ip, ip, #86016	; 0x15000
   113c8:	ldr	pc, [ip, #3364]!	; 0xd24

000113cc <freeaddrinfo@plt>:
   113cc:	add	ip, pc, #0, 12
   113d0:	add	ip, ip, #86016	; 0x15000
   113d4:	ldr	pc, [ip, #3356]!	; 0xd1c

000113d8 <getaddrinfo@plt>:
   113d8:	add	ip, pc, #0, 12
   113dc:	add	ip, ip, #86016	; 0x15000
   113e0:	ldr	pc, [ip, #3348]!	; 0xd14

000113e4 <bindtextdomain@plt>:
   113e4:	add	ip, pc, #0, 12
   113e8:	add	ip, ip, #86016	; 0x15000
   113ec:	ldr	pc, [ip, #3340]!	; 0xd0c

000113f0 <fread_unlocked@plt>:
   113f0:	add	ip, pc, #0, 12
   113f4:	add	ip, ip, #86016	; 0x15000
   113f8:	ldr	pc, [ip, #3332]!	; 0xd04

000113fc <__xstat64@plt>:
   113fc:	add	ip, pc, #0, 12
   11400:	add	ip, ip, #86016	; 0x15000
   11404:	ldr	pc, [ip, #3324]!	; 0xcfc

00011408 <strncmp@plt>:
   11408:	add	ip, pc, #0, 12
   1140c:	add	ip, ip, #86016	; 0x15000
   11410:	ldr	pc, [ip, #3316]!	; 0xcf4

00011414 <abort@plt>:
   11414:	add	ip, pc, #0, 12
   11418:	add	ip, ip, #86016	; 0x15000
   1141c:	ldr	pc, [ip, #3308]!	; 0xcec

00011420 <getutxent@plt>:
   11420:	add	ip, pc, #0, 12
   11424:	add	ip, ip, #86016	; 0x15000
   11428:	ldr	pc, [ip, #3300]!	; 0xce4

0001142c <putchar_unlocked@plt>:
   1142c:	add	ip, pc, #0, 12
   11430:	add	ip, ip, #86016	; 0x15000
   11434:	ldr	pc, [ip, #3292]!	; 0xcdc

Disassembly of section .text:

00011438 <.text>:
   11438:	mov	fp, #0
   1143c:	mov	lr, #0
   11440:	pop	{r1}		; (ldr r1, [sp], #4)
   11444:	mov	r2, sp
   11448:	push	{r2}		; (str r2, [sp, #-4]!)
   1144c:	push	{r0}		; (str r0, [sp, #-4]!)
   11450:	ldr	ip, [pc, #16]	; 11468 <putchar_unlocked@plt+0x3c>
   11454:	push	{ip}		; (str ip, [sp, #-4]!)
   11458:	ldr	r0, [pc, #12]	; 1146c <putchar_unlocked@plt+0x40>
   1145c:	ldr	r3, [pc, #12]	; 11470 <putchar_unlocked@plt+0x44>
   11460:	bl	11288 <__libc_start_main@plt>
   11464:	bl	11414 <abort@plt>
   11468:	andeq	r5, r1, r0, ror sl
   1146c:	ldrdeq	r1, [r1], -ip
   11470:	andeq	r5, r1, r0, lsl sl
   11474:	ldr	r3, [pc, #20]	; 11490 <putchar_unlocked@plt+0x64>
   11478:	ldr	r2, [pc, #20]	; 11494 <putchar_unlocked@plt+0x68>
   1147c:	add	r3, pc, r3
   11480:	ldr	r2, [r3, r2]
   11484:	cmp	r2, #0
   11488:	bxeq	lr
   1148c:	b	112c4 <__gmon_start__@plt>
   11490:	andeq	r5, r1, ip, ror fp
   11494:	andeq	r0, r0, r4, lsl r1
   11498:	ldr	r0, [pc, #24]	; 114b8 <putchar_unlocked@plt+0x8c>
   1149c:	ldr	r3, [pc, #24]	; 114bc <putchar_unlocked@plt+0x90>
   114a0:	cmp	r3, r0
   114a4:	bxeq	lr
   114a8:	ldr	r3, [pc, #16]	; 114c0 <putchar_unlocked@plt+0x94>
   114ac:	cmp	r3, #0
   114b0:	bxeq	lr
   114b4:	bx	r3
   114b8:	andeq	r7, r2, r8, ror #2
   114bc:	andeq	r7, r2, r8, ror #2
   114c0:	andeq	r0, r0, r0
   114c4:	ldr	r0, [pc, #36]	; 114f0 <putchar_unlocked@plt+0xc4>
   114c8:	ldr	r1, [pc, #36]	; 114f4 <putchar_unlocked@plt+0xc8>
   114cc:	sub	r1, r1, r0
   114d0:	asr	r1, r1, #2
   114d4:	add	r1, r1, r1, lsr #31
   114d8:	asrs	r1, r1, #1
   114dc:	bxeq	lr
   114e0:	ldr	r3, [pc, #16]	; 114f8 <putchar_unlocked@plt+0xcc>
   114e4:	cmp	r3, #0
   114e8:	bxeq	lr
   114ec:	bx	r3
   114f0:	andeq	r7, r2, r8, ror #2
   114f4:	andeq	r7, r2, r8, ror #2
   114f8:	andeq	r0, r0, r0
   114fc:	push	{r4, lr}
   11500:	ldr	r4, [pc, #24]	; 11520 <putchar_unlocked@plt+0xf4>
   11504:	ldrb	r3, [r4]
   11508:	cmp	r3, #0
   1150c:	popne	{r4, pc}
   11510:	bl	11498 <putchar_unlocked@plt+0x6c>
   11514:	mov	r3, #1
   11518:	strb	r3, [r4]
   1151c:	pop	{r4, pc}
   11520:	andeq	r7, r2, r0, lsl #3
   11524:	b	114c4 <putchar_unlocked@plt+0x98>
   11528:	push	{fp, lr}
   1152c:	mov	fp, sp
   11530:	mov	r4, r0
   11534:	cmp	r0, #0
   11538:	bne	11614 <putchar_unlocked@plt+0x1e8>
   1153c:	movw	r1, #23251	; 0x5ad3
   11540:	movt	r1, #1
   11544:	mov	r0, #0
   11548:	mov	r2, #5
   1154c:	bl	111e0 <dcgettext@plt>
   11550:	mov	r1, r0
   11554:	movw	r0, #29172	; 0x71f4
   11558:	movt	r0, #2
   1155c:	ldr	r2, [r0]
   11560:	mov	r0, #1
   11564:	bl	11354 <__printf_chk@plt>
   11568:	movw	r1, #23284	; 0x5af4
   1156c:	movt	r1, #1
   11570:	mov	r0, #0
   11574:	mov	r2, #5
   11578:	bl	111e0 <dcgettext@plt>
   1157c:	movw	r5, #29052	; 0x717c
   11580:	movt	r5, #2
   11584:	ldr	r1, [r5]
   11588:	bl	1112c <fputs_unlocked@plt>
   1158c:	movw	r1, #23612	; 0x5c3c
   11590:	movt	r1, #1
   11594:	mov	r0, #0
   11598:	mov	r2, #5
   1159c:	bl	111e0 <dcgettext@plt>
   115a0:	ldr	r1, [r5]
   115a4:	bl	1112c <fputs_unlocked@plt>
   115a8:	movw	r1, #23921	; 0x5d71
   115ac:	movt	r1, #1
   115b0:	mov	r0, #0
   115b4:	mov	r2, #5
   115b8:	bl	111e0 <dcgettext@plt>
   115bc:	ldr	r1, [r5]
   115c0:	bl	1112c <fputs_unlocked@plt>
   115c4:	movw	r1, #23966	; 0x5d9e
   115c8:	movt	r1, #1
   115cc:	mov	r0, #0
   115d0:	mov	r2, #5
   115d4:	bl	111e0 <dcgettext@plt>
   115d8:	ldr	r1, [r5]
   115dc:	bl	1112c <fputs_unlocked@plt>
   115e0:	movw	r1, #24020	; 0x5dd4
   115e4:	movt	r1, #1
   115e8:	mov	r0, #0
   115ec:	mov	r2, #5
   115f0:	bl	111e0 <dcgettext@plt>
   115f4:	mov	r1, r0
   115f8:	movw	r2, #24105	; 0x5e29
   115fc:	movt	r2, #1
   11600:	mov	r0, #1
   11604:	bl	11354 <__printf_chk@plt>
   11608:	bl	11658 <putchar_unlocked@plt+0x22c>
   1160c:	mov	r0, r4
   11610:	bl	112f4 <exit@plt>
   11614:	movw	r0, #29048	; 0x7178
   11618:	movt	r0, #2
   1161c:	ldr	r5, [r0]
   11620:	movw	r1, #23212	; 0x5aac
   11624:	movt	r1, #1
   11628:	mov	r0, #0
   1162c:	mov	r2, #5
   11630:	bl	111e0 <dcgettext@plt>
   11634:	mov	r2, r0
   11638:	movw	r0, #29172	; 0x71f4
   1163c:	movt	r0, #2
   11640:	ldr	r3, [r0]
   11644:	mov	r0, r5
   11648:	mov	r1, #1
   1164c:	bl	1136c <__fprintf_chk@plt>
   11650:	mov	r0, r4
   11654:	bl	112f4 <exit@plt>
   11658:	push	{r4, r5, fp, lr}
   1165c:	add	fp, sp, #8
   11660:	sub	sp, sp, #56	; 0x38
   11664:	movw	r0, #24920	; 0x6158
   11668:	movt	r0, #1
   1166c:	add	r1, r0, #32
   11670:	mov	r5, sp
   11674:	mov	r2, #48	; 0x30
   11678:	vld1.64	{d16-d17}, [r1]
   1167c:	add	r1, r5, #32
   11680:	add	r3, r0, #16
   11684:	vld1.64	{d18-d19}, [r0], r2
   11688:	vld1.64	{d20-d21}, [r3]
   1168c:	vldr	d22, [r0]
   11690:	vst1.64	{d16-d17}, [r1]
   11694:	add	r0, r5, #16
   11698:	vst1.64	{d20-d21}, [r0]
   1169c:	mov	r0, r5
   116a0:	vst1.64	{d18-d19}, [r0], r2
   116a4:	vstr	d22, [r0]
   116a8:	ldr	r1, [sp]
   116ac:	cmp	r1, #0
   116b0:	beq	116d8 <putchar_unlocked@plt+0x2ac>
   116b4:	mov	r5, sp
   116b8:	movw	r4, #24119	; 0x5e37
   116bc:	movt	r4, #1
   116c0:	mov	r0, r4
   116c4:	bl	11150 <strcmp@plt>
   116c8:	cmp	r0, #0
   116cc:	ldrne	r1, [r5, #8]!
   116d0:	cmpne	r1, #0
   116d4:	bne	116c0 <putchar_unlocked@plt+0x294>
   116d8:	ldr	r4, [r5, #4]
   116dc:	movw	r1, #24381	; 0x5f3d
   116e0:	movt	r1, #1
   116e4:	mov	r0, #0
   116e8:	mov	r2, #5
   116ec:	bl	111e0 <dcgettext@plt>
   116f0:	mov	r1, r0
   116f4:	movw	r2, #24159	; 0x5e5f
   116f8:	movt	r2, #1
   116fc:	movw	r3, #24404	; 0x5f54
   11700:	movt	r3, #1
   11704:	mov	r0, #1
   11708:	bl	11354 <__printf_chk@plt>
   1170c:	movw	r5, #24119	; 0x5e37
   11710:	movt	r5, #1
   11714:	cmp	r4, #0
   11718:	moveq	r4, r5
   1171c:	mov	r0, #5
   11720:	mov	r1, #0
   11724:	bl	1139c <setlocale@plt>
   11728:	cmp	r0, #0
   1172c:	beq	1176c <putchar_unlocked@plt+0x340>
   11730:	movw	r1, #24444	; 0x5f7c
   11734:	movt	r1, #1
   11738:	mov	r2, #3
   1173c:	bl	11408 <strncmp@plt>
   11740:	cmp	r0, #0
   11744:	beq	1176c <putchar_unlocked@plt+0x340>
   11748:	movw	r1, #24448	; 0x5f80
   1174c:	movt	r1, #1
   11750:	mov	r0, #0
   11754:	mov	r2, #5
   11758:	bl	111e0 <dcgettext@plt>
   1175c:	movw	r1, #29052	; 0x717c
   11760:	movt	r1, #2
   11764:	ldr	r1, [r1]
   11768:	bl	1112c <fputs_unlocked@plt>
   1176c:	movw	r1, #24519	; 0x5fc7
   11770:	movt	r1, #1
   11774:	mov	r0, #0
   11778:	mov	r2, #5
   1177c:	bl	111e0 <dcgettext@plt>
   11780:	mov	r1, r0
   11784:	movw	r2, #24404	; 0x5f54
   11788:	movt	r2, #1
   1178c:	mov	r0, #1
   11790:	mov	r3, r5
   11794:	bl	11354 <__printf_chk@plt>
   11798:	movw	r1, #24546	; 0x5fe2
   1179c:	movt	r1, #1
   117a0:	mov	r0, #0
   117a4:	mov	r2, #5
   117a8:	bl	111e0 <dcgettext@plt>
   117ac:	mov	r1, r0
   117b0:	movw	r0, #24314	; 0x5efa
   117b4:	movt	r0, #1
   117b8:	movw	r3, #24596	; 0x6014
   117bc:	movt	r3, #1
   117c0:	cmp	r4, r5
   117c4:	moveq	r3, r0
   117c8:	mov	r0, #1
   117cc:	mov	r2, r4
   117d0:	bl	11354 <__printf_chk@plt>
   117d4:	sub	sp, fp, #8
   117d8:	pop	{r4, r5, fp, pc}
   117dc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   117e0:	add	fp, sp, #28
   117e4:	sub	sp, sp, #20
   117e8:	mov	r4, r1
   117ec:	mov	r5, r0
   117f0:	ldr	r0, [r1]
   117f4:	bl	12ae4 <putchar_unlocked@plt+0x16b8>
   117f8:	movw	r1, #24596	; 0x6014
   117fc:	movt	r1, #1
   11800:	mov	r0, #6
   11804:	bl	1139c <setlocale@plt>
   11808:	movw	r6, #24163	; 0x5e63
   1180c:	movt	r6, #1
   11810:	movw	r1, #24125	; 0x5e3d
   11814:	movt	r1, #1
   11818:	mov	r0, r6
   1181c:	bl	113e4 <bindtextdomain@plt>
   11820:	mov	r0, r6
   11824:	bl	11210 <textdomain@plt>
   11828:	movw	r0, #9988	; 0x2704
   1182c:	movt	r0, #1
   11830:	bl	15a74 <putchar_unlocked@plt+0x4648>
   11834:	mov	r6, #0
   11838:	movw	r8, #24149	; 0x5e55
   1183c:	movt	r8, #1
   11840:	movw	r7, #24872	; 0x6128
   11844:	movt	r7, #1
   11848:	mov	sl, #1
   1184c:	movw	r9, #29062	; 0x7186
   11850:	movt	r9, #2
   11854:	b	11864 <putchar_unlocked@plt+0x438>
   11858:	movw	r0, #29065	; 0x7189
   1185c:	movt	r0, #2
   11860:	strb	sl, [r0]
   11864:	str	r6, [sp]
   11868:	mov	r0, r5
   1186c:	mov	r1, r4
   11870:	mov	r2, r8
   11874:	mov	r3, r7
   11878:	bl	112d0 <getopt_long@plt>
   1187c:	cmp	r0, #97	; 0x61
   11880:	ble	1197c <putchar_unlocked@plt+0x550>
   11884:	sub	r0, r0, #98	; 0x62
   11888:	cmp	r0, #21
   1188c:	bhi	11a3c <putchar_unlocked@plt+0x610>
   11890:	add	r1, pc, #0
   11894:	ldr	pc, [r1, r0, lsl #2]
   11898:	strdeq	r1, [r1], -r0
   1189c:	andeq	r1, r1, ip, lsr sl
   118a0:	andeq	r1, r1, ip, lsr sl
   118a4:	andeq	r1, r1, ip, lsr sl
   118a8:	andeq	r1, r1, r0, lsl r9
   118ac:	andeq	r1, r1, ip, lsr sl
   118b0:	andeq	r1, r1, r8, asr r8
   118b4:	andeq	r1, r1, r8, ror #18
   118b8:	andeq	r1, r1, ip, lsr sl
   118bc:	andeq	r1, r1, ip, lsr sl
   118c0:	andeq	r1, r1, r0, asr r9
   118c4:	andeq	r1, r1, ip, lsr sl
   118c8:	andeq	r1, r1, ip, lsr sl
   118cc:	andeq	r1, r1, ip, lsr sl
   118d0:	andeq	r1, r1, r0, lsr #18
   118d4:	andeq	r1, r1, r0, lsr r9
   118d8:	andeq	r1, r1, ip, lsr sl
   118dc:	andeq	r1, r1, r0, lsl #18
   118e0:	andeq	r1, r1, ip, lsr sl
   118e4:	andeq	r1, r1, ip, lsr sl
   118e8:	andeq	r1, r1, ip, lsr sl
   118ec:	andeq	r1, r1, r0, ror #18
   118f0:	movw	r0, #29067	; 0x718b
   118f4:	movt	r0, #2
   118f8:	strb	sl, [r0]
   118fc:	b	11864 <putchar_unlocked@plt+0x438>
   11900:	movw	r0, #29060	; 0x7184
   11904:	movt	r0, #2
   11908:	strb	r6, [r0]
   1190c:	b	11864 <putchar_unlocked@plt+0x438>
   11910:	movw	r0, #29061	; 0x7185
   11914:	movt	r0, #2
   11918:	strb	sl, [r0]
   1191c:	b	11864 <putchar_unlocked@plt+0x438>
   11920:	movw	r0, #29066	; 0x718a
   11924:	movt	r0, #2
   11928:	strb	sl, [r0]
   1192c:	b	11864 <putchar_unlocked@plt+0x438>
   11930:	movw	r0, #29063	; 0x7187
   11934:	movt	r0, #2
   11938:	strb	sl, [r0]
   1193c:	strb	sl, [r9]
   11940:	movw	r0, #29064	; 0x7188
   11944:	movt	r0, #2
   11948:	strb	sl, [r0]
   1194c:	b	11864 <putchar_unlocked@plt+0x438>
   11950:	movw	r0, #29060	; 0x7184
   11954:	movt	r0, #2
   11958:	strb	sl, [r0]
   1195c:	b	11864 <putchar_unlocked@plt+0x438>
   11960:	strb	sl, [r9]
   11964:	b	11864 <putchar_unlocked@plt+0x438>
   11968:	movw	r0, #29063	; 0x7187
   1196c:	movt	r0, #2
   11970:	strb	sl, [r0]
   11974:	strb	sl, [r9]
   11978:	b	11864 <putchar_unlocked@plt+0x438>
   1197c:	cmn	r0, #1
   11980:	bne	119c8 <putchar_unlocked@plt+0x59c>
   11984:	movw	r0, #29040	; 0x7170
   11988:	movt	r0, #2
   1198c:	ldr	r1, [r0]
   11990:	sub	r0, r5, r1
   11994:	movw	r2, #29060	; 0x7184
   11998:	movt	r2, #2
   1199c:	ldrb	r2, [r2]
   119a0:	cmp	r2, #1
   119a4:	cmpeq	r0, #0
   119a8:	beq	11a44 <putchar_unlocked@plt+0x618>
   119ac:	add	r1, r4, r1, lsl #2
   119b0:	cmp	r2, #0
   119b4:	beq	11a70 <putchar_unlocked@plt+0x644>
   119b8:	bl	11b00 <putchar_unlocked@plt+0x6d4>
   119bc:	mov	r0, #0
   119c0:	sub	sp, fp, #28
   119c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   119c8:	cmn	r0, #3
   119cc:	bne	11a2c <putchar_unlocked@plt+0x600>
   119d0:	movw	r0, #28960	; 0x7120
   119d4:	movt	r0, #2
   119d8:	ldr	r3, [r0]
   119dc:	movw	r0, #29052	; 0x717c
   119e0:	movt	r0, #2
   119e4:	ldr	r0, [r0]
   119e8:	mov	r1, #0
   119ec:	movw	r2, #24206	; 0x5e8e
   119f0:	movt	r2, #1
   119f4:	movw	r7, #24190	; 0x5e7e
   119f8:	movt	r7, #1
   119fc:	movw	r6, #24173	; 0x5e6d
   11a00:	movt	r6, #1
   11a04:	stm	sp, {r6, r7}
   11a08:	str	r2, [sp, #8]
   11a0c:	str	r1, [sp, #12]
   11a10:	movw	r1, #24119	; 0x5e37
   11a14:	movt	r1, #1
   11a18:	movw	r2, #24159	; 0x5e5f
   11a1c:	movt	r2, #1
   11a20:	bl	14d60 <putchar_unlocked@plt+0x3934>
   11a24:	mov	r0, #0
   11a28:	bl	112f4 <exit@plt>
   11a2c:	cmn	r0, #2
   11a30:	bne	11a3c <putchar_unlocked@plt+0x610>
   11a34:	mov	r0, #0
   11a38:	bl	11528 <putchar_unlocked@plt+0xfc>
   11a3c:	mov	r0, #1
   11a40:	bl	11528 <putchar_unlocked@plt+0xfc>
   11a44:	movw	r1, #24218	; 0x5e9a
   11a48:	movt	r1, #1
   11a4c:	mov	r0, #0
   11a50:	mov	r2, #5
   11a54:	bl	111e0 <dcgettext@plt>
   11a58:	mov	r2, r0
   11a5c:	mov	r0, #0
   11a60:	mov	r1, #0
   11a64:	bl	11270 <error@plt>
   11a68:	mov	r0, #1
   11a6c:	bl	11528 <putchar_unlocked@plt+0xfc>
   11a70:	bl	11a74 <putchar_unlocked@plt+0x648>
   11a74:	push	{fp, lr}
   11a78:	mov	fp, sp
   11a7c:	sub	sp, sp, #8
   11a80:	mov	r4, r1
   11a84:	mov	r5, r0
   11a88:	mov	r0, #0
   11a8c:	str	r0, [sp]
   11a90:	movw	r0, #24105	; 0x5e29
   11a94:	movt	r0, #1
   11a98:	add	r1, sp, #4
   11a9c:	mov	r2, sp
   11aa0:	mov	r3, #0
   11aa4:	bl	14798 <putchar_unlocked@plt+0x336c>
   11aa8:	cmp	r0, #0
   11aac:	bne	11acc <putchar_unlocked@plt+0x6a0>
   11ab0:	ldr	r1, [sp]
   11ab4:	ldr	r0, [sp, #4]
   11ab8:	mov	r2, r5
   11abc:	mov	r3, r4
   11ac0:	bl	11b2c <putchar_unlocked@plt+0x700>
   11ac4:	mov	r0, #0
   11ac8:	bl	112f4 <exit@plt>
   11acc:	bl	11318 <__errno_location@plt>
   11ad0:	ldr	r4, [r0]
   11ad4:	movw	r2, #24105	; 0x5e29
   11ad8:	movt	r2, #1
   11adc:	mov	r0, #0
   11ae0:	mov	r1, #3
   11ae4:	bl	141dc <putchar_unlocked@plt+0x2db0>
   11ae8:	mov	r3, r0
   11aec:	movw	r2, #25023	; 0x61bf
   11af0:	movt	r2, #1
   11af4:	mov	r0, #1
   11af8:	mov	r1, r4
   11afc:	bl	11270 <error@plt>
   11b00:	push	{r4, r5, fp, lr}
   11b04:	add	fp, sp, #8
   11b08:	cmp	r0, #1
   11b0c:	poplt	{r4, r5, fp, pc}
   11b10:	mov	r4, r1
   11b14:	mov	r5, r0
   11b18:	ldr	r0, [r4], #4
   11b1c:	bl	122cc <putchar_unlocked@plt+0xea0>
   11b20:	subs	r5, r5, #1
   11b24:	bne	11b18 <putchar_unlocked@plt+0x6ec>
   11b28:	pop	{r4, r5, fp, pc}
   11b2c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   11b30:	add	fp, sp, #24
   11b34:	mov	r8, r3
   11b38:	mov	r9, r2
   11b3c:	mov	r4, r1
   11b40:	mov	r7, r0
   11b44:	mov	r0, #2
   11b48:	bl	129c0 <putchar_unlocked@plt+0x1594>
   11b4c:	movw	r1, #24610	; 0x6022
   11b50:	movt	r1, #1
   11b54:	movw	r2, #24625	; 0x6031
   11b58:	movt	r2, #1
   11b5c:	cmp	r0, #0
   11b60:	movne	r2, r1
   11b64:	movw	r0, #29068	; 0x718c
   11b68:	movt	r0, #2
   11b6c:	str	r2, [r0]
   11b70:	mov	r0, #12
   11b74:	movwne	r0, #16
   11b78:	movw	r1, #29072	; 0x7190
   11b7c:	movt	r1, #2
   11b80:	str	r0, [r1]
   11b84:	movw	r0, #29061	; 0x7185
   11b88:	movt	r0, #2
   11b8c:	ldrb	r0, [r0]
   11b90:	cmp	r0, #0
   11b94:	bleq	11c10 <putchar_unlocked@plt+0x7e4>
   11b98:	b	11ba0 <putchar_unlocked@plt+0x774>
   11b9c:	add	r4, r4, #384	; 0x180
   11ba0:	cmp	r7, #0
   11ba4:	popeq	{r4, r5, r6, r7, r8, r9, fp, pc}
   11ba8:	sub	r7, r7, #1
   11bac:	mov	r6, r4
   11bb0:	ldrb	r0, [r6, #44]!	; 0x2c
   11bb4:	cmp	r0, #0
   11bb8:	beq	11b9c <putchar_unlocked@plt+0x770>
   11bbc:	ldrh	r0, [r4]
   11bc0:	cmp	r0, #7
   11bc4:	bne	11b9c <putchar_unlocked@plt+0x770>
   11bc8:	cmp	r9, #0
   11bcc:	beq	11c04 <putchar_unlocked@plt+0x7d8>
   11bd0:	cmp	r9, #1
   11bd4:	blt	11b9c <putchar_unlocked@plt+0x770>
   11bd8:	mov	r5, #0
   11bdc:	ldr	r1, [r8, r5, lsl #2]
   11be0:	mov	r0, r6
   11be4:	mov	r2, #32
   11be8:	bl	11408 <strncmp@plt>
   11bec:	cmp	r0, #0
   11bf0:	beq	11c04 <putchar_unlocked@plt+0x7d8>
   11bf4:	add	r5, r5, #1
   11bf8:	cmp	r5, r9
   11bfc:	blt	11bdc <putchar_unlocked@plt+0x7b0>
   11c00:	b	11b9c <putchar_unlocked@plt+0x770>
   11c04:	mov	r0, r4
   11c08:	bl	11d60 <putchar_unlocked@plt+0x934>
   11c0c:	b	11b9c <putchar_unlocked@plt+0x770>
   11c10:	push	{r4, sl, fp, lr}
   11c14:	add	fp, sp, #8
   11c18:	movw	r1, #24642	; 0x6042
   11c1c:	movt	r1, #1
   11c20:	mov	r0, #0
   11c24:	mov	r2, #5
   11c28:	bl	111e0 <dcgettext@plt>
   11c2c:	mov	r2, r0
   11c30:	movw	r1, #24637	; 0x603d
   11c34:	movt	r1, #1
   11c38:	mov	r0, #1
   11c3c:	bl	11354 <__printf_chk@plt>
   11c40:	movw	r0, #29062	; 0x7186
   11c44:	movt	r0, #2
   11c48:	ldrb	r0, [r0]
   11c4c:	cmp	r0, #0
   11c50:	bne	11c7c <putchar_unlocked@plt+0x850>
   11c54:	movw	r1, #24655	; 0x604f
   11c58:	movt	r1, #1
   11c5c:	mov	r0, #0
   11c60:	mov	r2, #5
   11c64:	bl	111e0 <dcgettext@plt>
   11c68:	mov	r2, r0
   11c6c:	movw	r1, #24648	; 0x6048
   11c70:	movt	r1, #1
   11c74:	mov	r0, #1
   11c78:	bl	11354 <__printf_chk@plt>
   11c7c:	movw	r1, #24666	; 0x605a
   11c80:	movt	r1, #1
   11c84:	mov	r0, #0
   11c88:	mov	r2, #5
   11c8c:	bl	111e0 <dcgettext@plt>
   11c90:	mov	r2, r0
   11c94:	movw	r1, #24660	; 0x6054
   11c98:	movt	r1, #1
   11c9c:	mov	r0, #1
   11ca0:	bl	11354 <__printf_chk@plt>
   11ca4:	movw	r0, #29064	; 0x7188
   11ca8:	movt	r0, #2
   11cac:	ldrb	r0, [r0]
   11cb0:	cmp	r0, #0
   11cb4:	bne	11ce0 <putchar_unlocked@plt+0x8b4>
   11cb8:	movw	r1, #24677	; 0x6065
   11cbc:	movt	r1, #1
   11cc0:	mov	r0, #0
   11cc4:	mov	r2, #5
   11cc8:	bl	111e0 <dcgettext@plt>
   11ccc:	mov	r2, r0
   11cd0:	movw	r1, #24671	; 0x605f
   11cd4:	movt	r1, #1
   11cd8:	mov	r0, #1
   11cdc:	bl	11354 <__printf_chk@plt>
   11ce0:	movw	r0, #29072	; 0x7190
   11ce4:	movt	r0, #2
   11ce8:	ldr	r4, [r0]
   11cec:	movw	r1, #24688	; 0x6070
   11cf0:	movt	r1, #1
   11cf4:	mov	r0, #0
   11cf8:	mov	r2, #5
   11cfc:	bl	111e0 <dcgettext@plt>
   11d00:	mov	r3, r0
   11d04:	movw	r1, #24682	; 0x606a
   11d08:	movt	r1, #1
   11d0c:	mov	r0, #1
   11d10:	mov	r2, r4
   11d14:	bl	11354 <__printf_chk@plt>
   11d18:	movw	r0, #29063	; 0x7187
   11d1c:	movt	r0, #2
   11d20:	ldrb	r0, [r0]
   11d24:	cmp	r0, #0
   11d28:	bne	11d54 <putchar_unlocked@plt+0x928>
   11d2c:	movw	r1, #24693	; 0x6075
   11d30:	movt	r1, #1
   11d34:	mov	r0, #0
   11d38:	mov	r2, #5
   11d3c:	bl	111e0 <dcgettext@plt>
   11d40:	mov	r2, r0
   11d44:	movw	r1, #25022	; 0x61be
   11d48:	movt	r1, #1
   11d4c:	mov	r0, #1
   11d50:	bl	11354 <__printf_chk@plt>
   11d54:	mov	r0, #10
   11d58:	pop	{r4, sl, fp, lr}
   11d5c:	b	1142c <putchar_unlocked@plt>
   11d60:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   11d64:	add	fp, sp, #24
   11d68:	sub	sp, sp, #416	; 0x1a0
   11d6c:	mov	r9, r0
   11d70:	mov	r5, r0
   11d74:	ldrb	r0, [r5, #8]!
   11d78:	cmp	r0, #47	; 0x2f
   11d7c:	bne	11d88 <putchar_unlocked@plt+0x95c>
   11d80:	sub	r0, fp, #176	; 0xb0
   11d84:	b	11da4 <putchar_unlocked@plt+0x978>
   11d88:	mov	r0, #47	; 0x2f
   11d8c:	strh	r0, [fp, #-172]	; 0xffffff54
   11d90:	movw	r0, #25647	; 0x642f
   11d94:	movt	r0, #30309	; 0x7665
   11d98:	str	r0, [fp, #-176]	; 0xffffff50
   11d9c:	sub	r0, fp, #176	; 0xb0
   11da0:	orr	r0, r0, #5
   11da4:	mov	r6, #32
   11da8:	mov	r1, r5
   11dac:	mov	r2, #32
   11db0:	bl	1200c <putchar_unlocked@plt+0xbe0>
   11db4:	sub	r0, fp, #176	; 0xb0
   11db8:	sub	r1, fp, #136	; 0x88
   11dbc:	bl	15a8c <putchar_unlocked@plt+0x4660>
   11dc0:	cmp	r0, #0
   11dc4:	beq	11dd4 <putchar_unlocked@plt+0x9a8>
   11dc8:	mov	r8, #0
   11dcc:	mov	r6, #63	; 0x3f
   11dd0:	b	11de4 <putchar_unlocked@plt+0x9b8>
   11dd4:	ldrb	r0, [fp, #-120]	; 0xffffff88
   11dd8:	tst	r0, #16
   11ddc:	movweq	r6, #42	; 0x2a
   11de0:	ldr	r8, [fp, #-64]	; 0xffffffc0
   11de4:	add	r7, r9, #44	; 0x2c
   11de8:	movw	r1, #24736	; 0x60a0
   11dec:	movt	r1, #1
   11df0:	mov	r0, #1
   11df4:	mov	r2, #32
   11df8:	mov	r3, r7
   11dfc:	bl	11354 <__printf_chk@plt>
   11e00:	movw	r0, #29062	; 0x7186
   11e04:	movt	r0, #2
   11e08:	ldrb	r0, [r0]
   11e0c:	cmp	r0, #0
   11e10:	bne	11eac <putchar_unlocked@plt+0xa80>
   11e14:	add	r4, sp, #7
   11e18:	mov	r0, r4
   11e1c:	mov	r1, r7
   11e20:	mov	r2, #32
   11e24:	bl	1200c <putchar_unlocked@plt+0xbe0>
   11e28:	mov	r0, r4
   11e2c:	bl	11144 <getpwnam@plt>
   11e30:	cmp	r0, #0
   11e34:	beq	11e84 <putchar_unlocked@plt+0xa58>
   11e38:	mov	r7, r0
   11e3c:	ldr	r0, [r0, #16]
   11e40:	mov	r1, #44	; 0x2c
   11e44:	bl	1130c <strchr@plt>
   11e48:	cmp	r0, #0
   11e4c:	movne	r1, #0
   11e50:	strbne	r1, [r0]
   11e54:	ldr	r1, [r7]
   11e58:	ldr	r0, [r7, #16]
   11e5c:	bl	12040 <putchar_unlocked@plt+0xc14>
   11e60:	mov	r4, r0
   11e64:	movw	r1, #24723	; 0x6093
   11e68:	movt	r1, #1
   11e6c:	mov	r0, #1
   11e70:	mov	r2, r4
   11e74:	bl	11354 <__printf_chk@plt>
   11e78:	mov	r0, r4
   11e7c:	bl	128f4 <putchar_unlocked@plt+0x14c8>
   11e80:	b	11eac <putchar_unlocked@plt+0xa80>
   11e84:	movw	r1, #24711	; 0x6087
   11e88:	movt	r1, #1
   11e8c:	mov	r0, #0
   11e90:	mov	r2, #5
   11e94:	bl	111e0 <dcgettext@plt>
   11e98:	mov	r2, r0
   11e9c:	movw	r1, #24705	; 0x6081
   11ea0:	movt	r1, #1
   11ea4:	mov	r0, #1
   11ea8:	bl	11354 <__printf_chk@plt>
   11eac:	str	r5, [sp]
   11eb0:	movw	r1, #24733	; 0x609d
   11eb4:	movt	r1, #1
   11eb8:	mov	r0, #1
   11ebc:	mov	r2, r6
   11ec0:	mov	r3, #32
   11ec4:	bl	11354 <__printf_chk@plt>
   11ec8:	movw	r0, #29064	; 0x7188
   11ecc:	movt	r0, #2
   11ed0:	ldrb	r0, [r0]
   11ed4:	cmp	r0, #0
   11ed8:	bne	11f18 <putchar_unlocked@plt+0xaec>
   11edc:	cmp	r8, #0
   11ee0:	beq	11ef0 <putchar_unlocked@plt+0xac4>
   11ee4:	mov	r0, r8
   11ee8:	bl	12154 <putchar_unlocked@plt+0xd28>
   11eec:	b	11f04 <putchar_unlocked@plt+0xad8>
   11ef0:	movw	r1, #24743	; 0x60a7
   11ef4:	movt	r1, #1
   11ef8:	mov	r0, #0
   11efc:	mov	r2, #5
   11f00:	bl	111e0 <dcgettext@plt>
   11f04:	mov	r2, r0
   11f08:	movw	r1, #24671	; 0x605f
   11f0c:	movt	r1, #1
   11f10:	mov	r0, #1
   11f14:	bl	11354 <__printf_chk@plt>
   11f18:	mov	r0, r9
   11f1c:	bl	12234 <putchar_unlocked@plt+0xe08>
   11f20:	mov	r2, r0
   11f24:	movw	r1, #25022	; 0x61be
   11f28:	movt	r1, #1
   11f2c:	mov	r0, #1
   11f30:	bl	11354 <__printf_chk@plt>
   11f34:	movw	r0, #29063	; 0x7187
   11f38:	movt	r0, #2
   11f3c:	ldrb	r0, [r0]
   11f40:	cmp	r0, #0
   11f44:	bne	11fdc <putchar_unlocked@plt+0xbb0>
   11f48:	ldrb	r0, [r9, #76]!	; 0x4c
   11f4c:	cmp	r0, #0
   11f50:	beq	11fdc <putchar_unlocked@plt+0xbb0>
   11f54:	add	r5, sp, #7
   11f58:	mov	r0, r5
   11f5c:	mov	r1, r9
   11f60:	mov	r2, #256	; 0x100
   11f64:	bl	1200c <putchar_unlocked@plt+0xbe0>
   11f68:	mov	r0, r5
   11f6c:	mov	r1, #58	; 0x3a
   11f70:	bl	1130c <strchr@plt>
   11f74:	mov	r4, #0
   11f78:	cmp	r0, #0
   11f7c:	mov	r6, #0
   11f80:	movne	r1, #0
   11f84:	strbne	r1, [r0], #1
   11f88:	movne	r6, r0
   11f8c:	ldrb	r0, [sp, #7]
   11f90:	cmp	r0, #0
   11f94:	beq	11fa4 <putchar_unlocked@plt+0xb78>
   11f98:	add	r0, sp, #7
   11f9c:	bl	12634 <putchar_unlocked@plt+0x1208>
   11fa0:	mov	r4, r0
   11fa4:	cmp	r4, #0
   11fa8:	movne	r5, r4
   11fac:	cmp	r6, #0
   11fb0:	beq	11fec <putchar_unlocked@plt+0xbc0>
   11fb4:	movw	r1, #24749	; 0x60ad
   11fb8:	movt	r1, #1
   11fbc:	mov	r0, #1
   11fc0:	mov	r2, r5
   11fc4:	mov	r3, r6
   11fc8:	bl	11354 <__printf_chk@plt>
   11fcc:	cmp	r4, #0
   11fd0:	beq	11fdc <putchar_unlocked@plt+0xbb0>
   11fd4:	mov	r0, r5
   11fd8:	bl	128f4 <putchar_unlocked@plt+0x14c8>
   11fdc:	mov	r0, #10
   11fe0:	bl	1142c <putchar_unlocked@plt>
   11fe4:	sub	sp, fp, #24
   11fe8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   11fec:	movw	r1, #25022	; 0x61be
   11ff0:	movt	r1, #1
   11ff4:	mov	r0, #1
   11ff8:	mov	r2, r5
   11ffc:	bl	11354 <__printf_chk@plt>
   12000:	cmp	r4, #0
   12004:	bne	11fd4 <putchar_unlocked@plt+0xba8>
   12008:	b	11fdc <putchar_unlocked@plt+0xbb0>
   1200c:	cmp	r2, #1
   12010:	blt	12034 <putchar_unlocked@plt+0xc08>
   12014:	add	r2, r1, r2
   12018:	ldrb	r3, [r1]
   1201c:	cmp	r3, #0
   12020:	beq	12034 <putchar_unlocked@plt+0xc08>
   12024:	strb	r3, [r0], #1
   12028:	add	r1, r1, #1
   1202c:	cmp	r1, r2
   12030:	bcc	12018 <putchar_unlocked@plt+0xbec>
   12034:	mov	r1, #0
   12038:	strb	r1, [r0]
   1203c:	bx	lr
   12040:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12044:	add	fp, sp, #28
   12048:	sub	sp, sp, #4
   1204c:	mov	sl, r1
   12050:	mov	r5, r0
   12054:	bl	11300 <strlen@plt>
   12058:	add	r6, r0, #1
   1205c:	mov	r0, r5
   12060:	bl	12298 <putchar_unlocked@plt+0xe6c>
   12064:	cmp	r0, #0
   12068:	beq	1209c <putchar_unlocked@plt+0xc70>
   1206c:	mov	r7, r0
   12070:	mov	r0, sl
   12074:	bl	11300 <strlen@plt>
   12078:	subs	r1, r7, #1
   1207c:	beq	12090 <putchar_unlocked@plt+0xc64>
   12080:	mvn	r2, #0
   12084:	udiv	r2, r2, r1
   12088:	cmp	r2, r0
   1208c:	bcc	12150 <putchar_unlocked@plt+0xd24>
   12090:	mul	r0, r0, r1
   12094:	adds	r6, r6, r0
   12098:	bcs	12150 <putchar_unlocked@plt+0xd24>
   1209c:	mov	r0, r6
   120a0:	bl	14e68 <putchar_unlocked@plt+0x3a3c>
   120a4:	mov	r8, r0
   120a8:	add	r9, sl, #1
   120ac:	mov	r6, r0
   120b0:	b	120bc <putchar_unlocked@plt+0xc90>
   120b4:	strb	r0, [r6], #1
   120b8:	add	r5, r5, #1
   120bc:	ldrb	r0, [r5]
   120c0:	cmp	r0, #38	; 0x26
   120c4:	beq	120d4 <putchar_unlocked@plt+0xca8>
   120c8:	cmp	r0, #0
   120cc:	bne	120b4 <putchar_unlocked@plt+0xc88>
   120d0:	b	1213c <putchar_unlocked@plt+0xd10>
   120d4:	bl	112e8 <__ctype_b_loc@plt>
   120d8:	ldr	r4, [r0]
   120dc:	ldrb	r7, [sl]
   120e0:	mov	r0, r7
   120e4:	bl	122b8 <putchar_unlocked@plt+0xe8c>
   120e8:	add	r0, r4, r7, lsl #1
   120ec:	ldrb	r0, [r0, #1]
   120f0:	tst	r0, #2
   120f4:	bne	12100 <putchar_unlocked@plt+0xcd4>
   120f8:	mov	r1, sl
   120fc:	b	12114 <putchar_unlocked@plt+0xce8>
   12100:	bl	112b8 <__ctype_toupper_loc@plt>
   12104:	ldr	r0, [r0]
   12108:	ldr	r0, [r0, r7, lsl #2]
   1210c:	strb	r0, [r6], #1
   12110:	mov	r1, r9
   12114:	ldrb	r0, [r1]
   12118:	cmp	r0, #0
   1211c:	beq	12134 <putchar_unlocked@plt+0xd08>
   12120:	add	r1, r1, #1
   12124:	strb	r0, [r6], #1
   12128:	ldrb	r0, [r1], #1
   1212c:	cmp	r0, #0
   12130:	bne	12124 <putchar_unlocked@plt+0xcf8>
   12134:	add	r5, r5, #1
   12138:	b	120bc <putchar_unlocked@plt+0xc90>
   1213c:	mov	r0, #0
   12140:	strb	r0, [r6]
   12144:	mov	r0, r8
   12148:	sub	sp, fp, #28
   1214c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12150:	bl	15218 <putchar_unlocked@plt+0x3dec>
   12154:	push	{r4, r5, fp, lr}
   12158:	add	fp, sp, #8
   1215c:	sub	sp, sp, #8
   12160:	mov	r4, r0
   12164:	movw	r5, #29076	; 0x7194
   12168:	movt	r5, #2
   1216c:	ldr	r0, [r5]
   12170:	cmp	r0, #0
   12174:	bne	12184 <putchar_unlocked@plt+0xd58>
   12178:	movw	r0, #29076	; 0x7194
   1217c:	movt	r0, #2
   12180:	bl	111b0 <time@plt>
   12184:	ldr	r0, [r5]
   12188:	sub	r0, r0, r4
   1218c:	cmp	r0, #60	; 0x3c
   12190:	bge	121a0 <putchar_unlocked@plt+0xd74>
   12194:	movw	r4, #24756	; 0x60b4
   12198:	movt	r4, #1
   1219c:	b	12228 <putchar_unlocked@plt+0xdfc>
   121a0:	movw	r1, #20863	; 0x517f
   121a4:	movt	r1, #1
   121a8:	cmp	r0, r1
   121ac:	bgt	121f4 <putchar_unlocked@plt+0xdc8>
   121b0:	movw	r1, #46021	; 0xb3c5
   121b4:	movt	r1, #37282	; 0x91a2
   121b8:	umull	r1, r2, r0, r1
   121bc:	lsr	r1, r2, #11
   121c0:	mov	r2, #3600	; 0xe10
   121c4:	mls	r0, r1, r2, r0
   121c8:	movw	r2, #34953	; 0x8889
   121cc:	movt	r2, #34952	; 0x8888
   121d0:	umull	r0, r2, r0, r2
   121d4:	lsr	r0, r2, #5
   121d8:	str	r1, [sp]
   121dc:	str	r0, [sp, #4]
   121e0:	movw	r4, #29080	; 0x7198
   121e4:	movt	r4, #2
   121e8:	movw	r3, #24762	; 0x60ba
   121ec:	movt	r3, #1
   121f0:	b	12218 <putchar_unlocked@plt+0xdec>
   121f4:	movw	r1, #17671	; 0x4507
   121f8:	movt	r1, #49710	; 0xc22e
   121fc:	umull	r0, r1, r0, r1
   12200:	lsr	r0, r1, #16
   12204:	str	r0, [sp]
   12208:	movw	r4, #29080	; 0x7198
   1220c:	movt	r4, #2
   12210:	movw	r3, #24772	; 0x60c4
   12214:	movt	r3, #1
   12218:	mov	r0, r4
   1221c:	mov	r1, #1
   12220:	mov	r2, #13
   12224:	bl	11324 <__sprintf_chk@plt>
   12228:	mov	r0, r4
   1222c:	sub	sp, fp, #8
   12230:	pop	{r4, r5, fp, pc}
   12234:	push	{r4, sl, fp, lr}
   12238:	add	fp, sp, #8
   1223c:	sub	sp, sp, #8
   12240:	ldr	r0, [r0, #340]	; 0x154
   12244:	str	r0, [sp, #4]
   12248:	add	r0, sp, #4
   1224c:	bl	112ac <localtime@plt>
   12250:	cmp	r0, #0
   12254:	beq	12280 <putchar_unlocked@plt+0xe54>
   12258:	mov	r3, r0
   1225c:	movw	r0, #29068	; 0x718c
   12260:	movt	r0, #2
   12264:	ldr	r2, [r0]
   12268:	movw	r4, #29093	; 0x71a5
   1226c:	movt	r4, #2
   12270:	mov	r0, r4
   12274:	mov	r1, #33	; 0x21
   12278:	bl	11294 <strftime@plt>
   1227c:	b	1228c <putchar_unlocked@plt+0xe60>
   12280:	ldr	r0, [sp, #4]
   12284:	bl	122bc <putchar_unlocked@plt+0xe90>
   12288:	mov	r4, r0
   1228c:	mov	r0, r4
   12290:	sub	sp, fp, #8
   12294:	pop	{r4, sl, fp, pc}
   12298:	mov	r1, r0
   1229c:	mov	r0, #0
   122a0:	ldrb	r2, [r1], #1
   122a4:	cmp	r2, #38	; 0x26
   122a8:	addeq	r0, r0, #1
   122ac:	cmp	r2, #0
   122b0:	bne	122a0 <putchar_unlocked@plt+0xe74>
   122b4:	bx	lr
   122b8:	bx	lr
   122bc:	asr	r1, r0, #31
   122c0:	movw	r2, #29093	; 0x71a5
   122c4:	movt	r2, #2
   122c8:	b	12a24 <putchar_unlocked@plt+0x15f8>
   122cc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   122d0:	add	fp, sp, #24
   122d4:	sub	sp, sp, #1024	; 0x400
   122d8:	mov	r5, r0
   122dc:	bl	11144 <getpwnam@plt>
   122e0:	mov	r4, r0
   122e4:	movw	r1, #24777	; 0x60c9
   122e8:	movt	r1, #1
   122ec:	mov	r0, #0
   122f0:	mov	r2, #5
   122f4:	bl	111e0 <dcgettext@plt>
   122f8:	mov	r1, r0
   122fc:	mov	r0, #1
   12300:	bl	11354 <__printf_chk@plt>
   12304:	movw	r1, #24790	; 0x60d6
   12308:	movt	r1, #1
   1230c:	mov	r0, #1
   12310:	mov	r2, r5
   12314:	bl	11354 <__printf_chk@plt>
   12318:	movw	r1, #24796	; 0x60dc
   1231c:	movt	r1, #1
   12320:	mov	r0, #0
   12324:	mov	r2, #5
   12328:	bl	111e0 <dcgettext@plt>
   1232c:	mov	r1, r0
   12330:	mov	r0, #1
   12334:	bl	11354 <__printf_chk@plt>
   12338:	cmp	r4, #0
   1233c:	beq	12604 <putchar_unlocked@plt+0x11d8>
   12340:	ldr	r0, [r4, #16]
   12344:	mov	r1, #44	; 0x2c
   12348:	bl	1130c <strchr@plt>
   1234c:	cmp	r0, #0
   12350:	movne	r1, #0
   12354:	strbne	r1, [r0]
   12358:	ldr	r1, [r4]
   1235c:	ldr	r0, [r4, #16]
   12360:	bl	12040 <putchar_unlocked@plt+0xc14>
   12364:	mov	r5, r0
   12368:	movw	r1, #25022	; 0x61be
   1236c:	movt	r1, #1
   12370:	mov	r0, #1
   12374:	mov	r2, r5
   12378:	bl	11354 <__printf_chk@plt>
   1237c:	mov	r0, r5
   12380:	bl	128f4 <putchar_unlocked@plt+0x14c8>
   12384:	mov	r0, #10
   12388:	bl	1142c <putchar_unlocked@plt>
   1238c:	movw	r0, #29067	; 0x718b
   12390:	movt	r0, #2
   12394:	ldrb	r0, [r0]
   12398:	cmp	r0, #0
   1239c:	bne	12410 <putchar_unlocked@plt+0xfe4>
   123a0:	movw	r1, #24816	; 0x60f0
   123a4:	movt	r1, #1
   123a8:	mov	r0, #0
   123ac:	mov	r2, #5
   123b0:	bl	111e0 <dcgettext@plt>
   123b4:	mov	r1, r0
   123b8:	mov	r0, #1
   123bc:	bl	11354 <__printf_chk@plt>
   123c0:	ldr	r2, [r4, #20]
   123c4:	movw	r1, #24828	; 0x60fc
   123c8:	movt	r1, #1
   123cc:	mov	r0, #1
   123d0:	bl	11354 <__printf_chk@plt>
   123d4:	movw	r1, #24834	; 0x6102
   123d8:	movt	r1, #1
   123dc:	mov	r0, #0
   123e0:	mov	r2, #5
   123e4:	bl	111e0 <dcgettext@plt>
   123e8:	mov	r1, r0
   123ec:	mov	r0, #1
   123f0:	bl	11354 <__printf_chk@plt>
   123f4:	ldr	r2, [r4, #24]
   123f8:	movw	r1, #25022	; 0x61be
   123fc:	movt	r1, #1
   12400:	mov	r0, #1
   12404:	bl	11354 <__printf_chk@plt>
   12408:	mov	r0, #10
   1240c:	bl	1142c <putchar_unlocked@plt>
   12410:	movw	r0, #29065	; 0x7189
   12414:	movt	r0, #2
   12418:	ldrb	r0, [r0]
   1241c:	cmp	r0, #0
   12420:	bne	12500 <putchar_unlocked@plt+0x10d4>
   12424:	ldr	r0, [r4, #20]
   12428:	bl	11300 <strlen@plt>
   1242c:	add	r0, r0, #10
   12430:	bl	14e68 <putchar_unlocked@plt+0x3a3c>
   12434:	mov	r8, r0
   12438:	ldr	r1, [r4, #20]
   1243c:	bl	111d4 <stpcpy@plt>
   12440:	movw	r1, #24976	; 0x6190
   12444:	movt	r1, #1
   12448:	vldr	d16, [r1]
   1244c:	mov	r1, #116	; 0x74
   12450:	strh	r1, [r0, #8]
   12454:	vst1.8	{d16}, [r0]
   12458:	movw	r1, #25017	; 0x61b9
   1245c:	movt	r1, #1
   12460:	mov	r0, r8
   12464:	bl	113c0 <fopen64@plt>
   12468:	cmp	r0, #0
   1246c:	beq	124f8 <putchar_unlocked@plt+0x10cc>
   12470:	mov	r6, r0
   12474:	movw	r1, #24842	; 0x610a
   12478:	movt	r1, #1
   1247c:	mov	r0, #0
   12480:	mov	r2, #5
   12484:	bl	111e0 <dcgettext@plt>
   12488:	mov	r1, r0
   1248c:	mov	r0, #1
   12490:	bl	11354 <__printf_chk@plt>
   12494:	mov	r0, sp
   12498:	mov	r1, #1
   1249c:	mov	r2, #1024	; 0x400
   124a0:	mov	r3, r6
   124a4:	bl	113f0 <fread_unlocked@plt>
   124a8:	cmp	r0, #0
   124ac:	beq	124f0 <putchar_unlocked@plt+0x10c4>
   124b0:	mov	r2, r0
   124b4:	movw	r5, #29052	; 0x717c
   124b8:	movt	r5, #2
   124bc:	mov	r7, sp
   124c0:	ldr	r3, [r5]
   124c4:	mov	r0, r7
   124c8:	mov	r1, #1
   124cc:	bl	111bc <fwrite_unlocked@plt>
   124d0:	mov	r0, r7
   124d4:	mov	r1, #1
   124d8:	mov	r2, #1024	; 0x400
   124dc:	mov	r3, r6
   124e0:	bl	113f0 <fread_unlocked@plt>
   124e4:	mov	r2, r0
   124e8:	cmp	r0, #0
   124ec:	bne	124c0 <putchar_unlocked@plt+0x1094>
   124f0:	mov	r0, r6
   124f4:	bl	127ec <putchar_unlocked@plt+0x13c0>
   124f8:	mov	r0, r8
   124fc:	bl	128f4 <putchar_unlocked@plt+0x14c8>
   12500:	movw	r0, #29066	; 0x718a
   12504:	movt	r0, #2
   12508:	ldrb	r0, [r0]
   1250c:	cmp	r0, #0
   12510:	bne	125f4 <putchar_unlocked@plt+0x11c8>
   12514:	ldr	r0, [r4, #20]
   12518:	bl	11300 <strlen@plt>
   1251c:	add	r0, r0, #7
   12520:	bl	14e68 <putchar_unlocked@plt+0x3a3c>
   12524:	mov	r5, r0
   12528:	ldr	r1, [r4, #20]
   1252c:	bl	111d4 <stpcpy@plt>
   12530:	mov	r1, #0
   12534:	strb	r1, [r0, #6]
   12538:	movw	r1, #28257	; 0x6e61
   1253c:	strh	r1, [r0, #4]
   12540:	movw	r1, #11823	; 0x2e2f
   12544:	movt	r1, #27760	; 0x6c70
   12548:	str	r1, [r0]
   1254c:	movw	r1, #25017	; 0x61b9
   12550:	movt	r1, #1
   12554:	mov	r0, r5
   12558:	bl	113c0 <fopen64@plt>
   1255c:	cmp	r0, #0
   12560:	beq	125ec <putchar_unlocked@plt+0x11c0>
   12564:	mov	r4, r0
   12568:	movw	r1, #24859	; 0x611b
   1256c:	movt	r1, #1
   12570:	mov	r0, #0
   12574:	mov	r2, #5
   12578:	bl	111e0 <dcgettext@plt>
   1257c:	mov	r1, r0
   12580:	mov	r0, #1
   12584:	bl	11354 <__printf_chk@plt>
   12588:	mov	r0, sp
   1258c:	mov	r1, #1
   12590:	mov	r2, #1024	; 0x400
   12594:	mov	r3, r4
   12598:	bl	113f0 <fread_unlocked@plt>
   1259c:	cmp	r0, #0
   125a0:	beq	125e4 <putchar_unlocked@plt+0x11b8>
   125a4:	mov	r2, r0
   125a8:	movw	r7, #29052	; 0x717c
   125ac:	movt	r7, #2
   125b0:	mov	r6, sp
   125b4:	ldr	r3, [r7]
   125b8:	mov	r0, r6
   125bc:	mov	r1, #1
   125c0:	bl	111bc <fwrite_unlocked@plt>
   125c4:	mov	r0, r6
   125c8:	mov	r1, #1
   125cc:	mov	r2, #1024	; 0x400
   125d0:	mov	r3, r4
   125d4:	bl	113f0 <fread_unlocked@plt>
   125d8:	mov	r2, r0
   125dc:	cmp	r0, #0
   125e0:	bne	125b4 <putchar_unlocked@plt+0x1188>
   125e4:	mov	r0, r4
   125e8:	bl	127ec <putchar_unlocked@plt+0x13c0>
   125ec:	mov	r0, r5
   125f0:	bl	128f4 <putchar_unlocked@plt+0x14c8>
   125f4:	mov	r0, #10
   125f8:	sub	sp, fp, #24
   125fc:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   12600:	b	1142c <putchar_unlocked@plt>
   12604:	movw	r1, #24811	; 0x60eb
   12608:	movt	r1, #1
   1260c:	mov	r0, #0
   12610:	mov	r2, #5
   12614:	bl	111e0 <dcgettext@plt>
   12618:	mov	r2, r0
   1261c:	movw	r1, #25022	; 0x61be
   12620:	movt	r1, #1
   12624:	mov	r0, #1
   12628:	sub	sp, fp, #24
   1262c:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   12630:	b	11354 <__printf_chk@plt>
   12634:	movw	r1, #29128	; 0x71c8
   12638:	movt	r1, #2
   1263c:	b	12640 <putchar_unlocked@plt+0x1214>
   12640:	push	{r4, r5, r6, sl, fp, lr}
   12644:	add	fp, sp, #16
   12648:	sub	sp, sp, #8
   1264c:	mov	r5, r1
   12650:	mov	r6, r0
   12654:	movw	r2, #29132	; 0x71cc
   12658:	movt	r2, #2
   1265c:	mov	r0, #2
   12660:	str	r0, [r2]
   12664:	mov	r4, #0
   12668:	str	r4, [sp, #4]
   1266c:	add	r3, sp, #4
   12670:	mov	r0, r6
   12674:	mov	r1, #0
   12678:	bl	113d8 <getaddrinfo@plt>
   1267c:	cmp	r0, #0
   12680:	beq	12690 <putchar_unlocked@plt+0x1264>
   12684:	cmp	r5, #0
   12688:	strne	r0, [r5]
   1268c:	b	126c8 <putchar_unlocked@plt+0x129c>
   12690:	ldr	r0, [sp, #4]
   12694:	ldr	r0, [r0, #24]
   12698:	cmp	r0, #0
   1269c:	movne	r6, r0
   126a0:	mov	r0, r6
   126a4:	bl	111ec <strdup@plt>
   126a8:	mov	r4, r0
   126ac:	cmp	r5, #0
   126b0:	beq	126c0 <putchar_unlocked@plt+0x1294>
   126b4:	cmp	r4, #0
   126b8:	mvneq	r0, #9
   126bc:	streq	r0, [r5]
   126c0:	ldr	r0, [sp, #4]
   126c4:	bl	113cc <freeaddrinfo@plt>
   126c8:	mov	r0, r4
   126cc:	sub	sp, fp, #16
   126d0:	pop	{r4, r5, r6, sl, fp, pc}
   126d4:	movw	r0, #29128	; 0x71c8
   126d8:	movt	r0, #2
   126dc:	ldr	r0, [r0]
   126e0:	b	11180 <gai_strerror@plt>
   126e4:	movw	r1, #29164	; 0x71ec
   126e8:	movt	r1, #2
   126ec:	str	r0, [r1]
   126f0:	bx	lr
   126f4:	movw	r1, #29168	; 0x71f0
   126f8:	movt	r1, #2
   126fc:	strb	r0, [r1]
   12700:	bx	lr
   12704:	push	{r4, r5, r6, sl, fp, lr}
   12708:	add	fp, sp, #16
   1270c:	sub	sp, sp, #8
   12710:	movw	r0, #29052	; 0x717c
   12714:	movt	r0, #2
   12718:	ldr	r0, [r0]
   1271c:	bl	15658 <putchar_unlocked@plt+0x422c>
   12720:	cmp	r0, #0
   12724:	beq	1274c <putchar_unlocked@plt+0x1320>
   12728:	movw	r0, #29168	; 0x71f0
   1272c:	movt	r0, #2
   12730:	ldrb	r0, [r0]
   12734:	cmp	r0, #0
   12738:	beq	1276c <putchar_unlocked@plt+0x1340>
   1273c:	bl	11318 <__errno_location@plt>
   12740:	ldr	r0, [r0]
   12744:	cmp	r0, #32
   12748:	bne	1276c <putchar_unlocked@plt+0x1340>
   1274c:	movw	r0, #29048	; 0x7178
   12750:	movt	r0, #2
   12754:	ldr	r0, [r0]
   12758:	bl	15658 <putchar_unlocked@plt+0x422c>
   1275c:	cmp	r0, #0
   12760:	subeq	sp, fp, #16
   12764:	popeq	{r4, r5, r6, sl, fp, pc}
   12768:	b	127dc <putchar_unlocked@plt+0x13b0>
   1276c:	movw	r1, #25007	; 0x61af
   12770:	movt	r1, #1
   12774:	mov	r0, #0
   12778:	mov	r2, #5
   1277c:	bl	111e0 <dcgettext@plt>
   12780:	mov	r4, r0
   12784:	movw	r0, #29164	; 0x71ec
   12788:	movt	r0, #2
   1278c:	ldr	r6, [r0]
   12790:	bl	11318 <__errno_location@plt>
   12794:	ldr	r5, [r0]
   12798:	cmp	r6, #0
   1279c:	bne	127b8 <putchar_unlocked@plt+0x138c>
   127a0:	movw	r2, #25023	; 0x61bf
   127a4:	movt	r2, #1
   127a8:	mov	r0, #0
   127ac:	mov	r1, r5
   127b0:	mov	r3, r4
   127b4:	b	127d8 <putchar_unlocked@plt+0x13ac>
   127b8:	mov	r0, r6
   127bc:	bl	141cc <putchar_unlocked@plt+0x2da0>
   127c0:	mov	r3, r0
   127c4:	str	r4, [sp]
   127c8:	movw	r2, #25019	; 0x61bb
   127cc:	movt	r2, #1
   127d0:	mov	r0, #0
   127d4:	mov	r1, r5
   127d8:	bl	11270 <error@plt>
   127dc:	movw	r0, #28964	; 0x7124
   127e0:	movt	r0, #2
   127e4:	ldr	r0, [r0]
   127e8:	bl	1118c <_exit@plt>
   127ec:	push	{r4, r5, fp, lr}
   127f0:	add	fp, sp, #8
   127f4:	sub	sp, sp, #8
   127f8:	mov	r4, r0
   127fc:	bl	11360 <fileno@plt>
   12800:	cmn	r0, #1
   12804:	ble	1287c <putchar_unlocked@plt+0x1450>
   12808:	mov	r0, r4
   1280c:	bl	112a0 <__freading@plt>
   12810:	cmp	r0, #0
   12814:	beq	12840 <putchar_unlocked@plt+0x1414>
   12818:	mov	r0, r4
   1281c:	bl	11360 <fileno@plt>
   12820:	mov	r1, #1
   12824:	str	r1, [sp]
   12828:	mov	r2, #0
   1282c:	mov	r3, #0
   12830:	bl	11234 <lseek64@plt>
   12834:	and	r0, r0, r1
   12838:	cmn	r0, #1
   1283c:	beq	1287c <putchar_unlocked@plt+0x1450>
   12840:	mov	r0, r4
   12844:	bl	1288c <putchar_unlocked@plt+0x1460>
   12848:	cmp	r0, #0
   1284c:	beq	1287c <putchar_unlocked@plt+0x1450>
   12850:	bl	11318 <__errno_location@plt>
   12854:	ldr	r5, [r0]
   12858:	mov	r0, r4
   1285c:	bl	11378 <fclose@plt>
   12860:	cmp	r5, #0
   12864:	beq	12874 <putchar_unlocked@plt+0x1448>
   12868:	bl	11318 <__errno_location@plt>
   1286c:	str	r5, [r0]
   12870:	mvn	r0, #0
   12874:	sub	sp, fp, #8
   12878:	pop	{r4, r5, fp, pc}
   1287c:	mov	r0, r4
   12880:	sub	sp, fp, #8
   12884:	pop	{r4, r5, fp, lr}
   12888:	b	11378 <fclose@plt>
   1288c:	push	{r4, sl, fp, lr}
   12890:	add	fp, sp, #8
   12894:	mov	r4, r0
   12898:	cmp	r0, #0
   1289c:	beq	128b4 <putchar_unlocked@plt+0x1488>
   128a0:	mov	r0, r4
   128a4:	bl	112a0 <__freading@plt>
   128a8:	cmp	r0, #0
   128ac:	movne	r0, r4
   128b0:	blne	128c0 <putchar_unlocked@plt+0x1494>
   128b4:	mov	r0, r4
   128b8:	pop	{r4, sl, fp, lr}
   128bc:	b	1115c <fflush@plt>
   128c0:	ldrb	r1, [r0, #1]
   128c4:	tst	r1, #1
   128c8:	bxeq	lr
   128cc:	push	{fp, lr}
   128d0:	mov	fp, sp
   128d4:	sub	sp, sp, #8
   128d8:	mov	r1, #1
   128dc:	str	r1, [sp]
   128e0:	mov	r2, #0
   128e4:	mov	r3, #0
   128e8:	bl	1291c <putchar_unlocked@plt+0x14f0>
   128ec:	mov	sp, fp
   128f0:	pop	{fp, pc}
   128f4:	push	{r4, r5, r6, sl, fp, lr}
   128f8:	add	fp, sp, #16
   128fc:	mov	r4, r0
   12900:	bl	11318 <__errno_location@plt>
   12904:	mov	r5, r0
   12908:	ldr	r6, [r0]
   1290c:	mov	r0, r4
   12910:	bl	11174 <free@plt>
   12914:	str	r6, [r5]
   12918:	pop	{r4, r5, r6, sl, fp, pc}
   1291c:	push	{r4, r5, r6, r7, fp, lr}
   12920:	add	fp, sp, #16
   12924:	sub	sp, sp, #8
   12928:	mov	r5, r3
   1292c:	mov	r6, r2
   12930:	mov	r4, r0
   12934:	ldr	r0, [r0, #4]
   12938:	ldr	r1, [r4, #8]
   1293c:	cmp	r1, r0
   12940:	bne	1295c <putchar_unlocked@plt+0x1530>
   12944:	ldrd	r0, [r4, #16]
   12948:	cmp	r1, r0
   1294c:	bne	1295c <putchar_unlocked@plt+0x1530>
   12950:	ldr	r0, [r4, #36]	; 0x24
   12954:	cmp	r0, #0
   12958:	beq	12974 <putchar_unlocked@plt+0x1548>
   1295c:	mov	r0, r4
   12960:	mov	r2, r6
   12964:	mov	r3, r5
   12968:	sub	sp, fp, #16
   1296c:	pop	{r4, r5, r6, r7, fp, lr}
   12970:	b	11384 <fseeko64@plt>
   12974:	ldr	r7, [fp, #8]
   12978:	mov	r0, r4
   1297c:	bl	11360 <fileno@plt>
   12980:	str	r7, [sp]
   12984:	mov	r2, r6
   12988:	mov	r3, r5
   1298c:	bl	11234 <lseek64@plt>
   12990:	and	r2, r0, r1
   12994:	cmn	r2, #1
   12998:	mvneq	r0, #0
   1299c:	subeq	sp, fp, #16
   129a0:	popeq	{r4, r5, r6, r7, fp, pc}
   129a4:	strd	r0, [r4, #80]	; 0x50
   129a8:	ldr	r0, [r4]
   129ac:	bic	r0, r0, #16
   129b0:	str	r0, [r4]
   129b4:	mov	r0, #0
   129b8:	sub	sp, fp, #16
   129bc:	pop	{r4, r5, r6, r7, fp, pc}
   129c0:	push	{r4, sl, fp, lr}
   129c4:	add	fp, sp, #8
   129c8:	sub	sp, sp, #264	; 0x108
   129cc:	add	r1, sp, #7
   129d0:	movw	r2, #257	; 0x101
   129d4:	bl	148fc <putchar_unlocked@plt+0x34d0>
   129d8:	mov	r4, #0
   129dc:	cmp	r0, #0
   129e0:	bne	12a18 <putchar_unlocked@plt+0x15ec>
   129e4:	add	r0, sp, #7
   129e8:	movw	r1, #25026	; 0x61c2
   129ec:	movt	r1, #1
   129f0:	bl	11150 <strcmp@plt>
   129f4:	cmp	r0, #0
   129f8:	beq	12a18 <putchar_unlocked@plt+0x15ec>
   129fc:	add	r0, sp, #7
   12a00:	movw	r1, #25028	; 0x61c4
   12a04:	movt	r1, #1
   12a08:	bl	11150 <strcmp@plt>
   12a0c:	mov	r4, r0
   12a10:	cmp	r0, #0
   12a14:	movwne	r4, #1
   12a18:	mov	r0, r4
   12a1c:	sub	sp, fp, #8
   12a20:	pop	{r4, sl, fp, pc}
   12a24:	push	{r4, r5, r6, sl, fp, lr}
   12a28:	add	fp, sp, #16
   12a2c:	mov	r4, r1
   12a30:	mov	r5, r0
   12a34:	mov	r0, #0
   12a38:	strb	r0, [r2, #20]
   12a3c:	add	r6, r2, #19
   12a40:	cmp	r1, #0
   12a44:	blt	12a94 <putchar_unlocked@plt+0x1668>
   12a48:	mov	r0, r5
   12a4c:	mov	r1, r4
   12a50:	mov	r2, #10
   12a54:	mov	r3, #0
   12a58:	bl	15804 <putchar_unlocked@plt+0x43d8>
   12a5c:	add	r2, r0, r0, lsl #2
   12a60:	sub	r2, r5, r2, lsl #1
   12a64:	add	r2, r2, #48	; 0x30
   12a68:	strb	r2, [r6], #-1
   12a6c:	adds	r2, r5, #9
   12a70:	adc	r3, r4, #0
   12a74:	rsbs	r2, r2, #18
   12a78:	rscs	r2, r3, #0
   12a7c:	mov	r5, r0
   12a80:	mov	r4, r1
   12a84:	bcc	12a48 <putchar_unlocked@plt+0x161c>
   12a88:	add	r6, r6, #1
   12a8c:	mov	r0, r6
   12a90:	pop	{r4, r5, r6, sl, fp, pc}
   12a94:	mov	r0, r5
   12a98:	mov	r1, r4
   12a9c:	mov	r2, #10
   12aa0:	mov	r3, #0
   12aa4:	bl	15804 <putchar_unlocked@plt+0x43d8>
   12aa8:	add	r2, r0, r0, lsl #2
   12aac:	rsb	r2, r5, r2, lsl #1
   12ab0:	add	r2, r2, #48	; 0x30
   12ab4:	strb	r2, [r6], #-1
   12ab8:	adds	r2, r5, #9
   12abc:	adc	r3, r4, #0
   12ac0:	rsbs	r2, r2, #18
   12ac4:	rscs	r2, r3, #0
   12ac8:	mov	r5, r0
   12acc:	mov	r4, r1
   12ad0:	bcc	12a94 <putchar_unlocked@plt+0x1668>
   12ad4:	mov	r0, #45	; 0x2d
   12ad8:	strb	r0, [r6]
   12adc:	mov	r0, r6
   12ae0:	pop	{r4, r5, r6, sl, fp, pc}
   12ae4:	push	{r4, r5, fp, lr}
   12ae8:	add	fp, sp, #8
   12aec:	cmp	r0, #0
   12af0:	beq	12b84 <putchar_unlocked@plt+0x1758>
   12af4:	mov	r4, r0
   12af8:	mov	r1, #47	; 0x2f
   12afc:	bl	113a8 <strrchr@plt>
   12b00:	cmp	r0, #0
   12b04:	mov	r5, r4
   12b08:	addne	r5, r0, #1
   12b0c:	sub	r0, r5, r4
   12b10:	cmp	r0, #7
   12b14:	blt	12b68 <putchar_unlocked@plt+0x173c>
   12b18:	sub	r0, r5, #7
   12b1c:	movw	r1, #25090	; 0x6202
   12b20:	movt	r1, #1
   12b24:	mov	r2, #7
   12b28:	bl	11408 <strncmp@plt>
   12b2c:	cmp	r0, #0
   12b30:	bne	12b68 <putchar_unlocked@plt+0x173c>
   12b34:	movw	r1, #25098	; 0x620a
   12b38:	movt	r1, #1
   12b3c:	mov	r0, r5
   12b40:	mov	r2, #3
   12b44:	bl	11408 <strncmp@plt>
   12b48:	cmp	r0, #0
   12b4c:	beq	12b58 <putchar_unlocked@plt+0x172c>
   12b50:	mov	r4, r5
   12b54:	b	12b68 <putchar_unlocked@plt+0x173c>
   12b58:	add	r4, r5, #3
   12b5c:	movw	r0, #29032	; 0x7168
   12b60:	movt	r0, #2
   12b64:	str	r4, [r0]
   12b68:	movw	r0, #29036	; 0x716c
   12b6c:	movt	r0, #2
   12b70:	str	r4, [r0]
   12b74:	movw	r0, #29172	; 0x71f4
   12b78:	movt	r0, #2
   12b7c:	str	r4, [r0]
   12b80:	pop	{r4, r5, fp, pc}
   12b84:	movw	r0, #29048	; 0x7178
   12b88:	movt	r0, #2
   12b8c:	ldr	r3, [r0]
   12b90:	movw	r0, #25034	; 0x61ca
   12b94:	movt	r0, #1
   12b98:	mov	r1, #55	; 0x37
   12b9c:	mov	r2, #1
   12ba0:	bl	11228 <fwrite@plt>
   12ba4:	bl	11414 <abort@plt>
   12ba8:	push	{r4, r5, r6, sl, fp, lr}
   12bac:	add	fp, sp, #16
   12bb0:	mov	r4, r0
   12bb4:	movw	r0, #29176	; 0x71f8
   12bb8:	movt	r0, #2
   12bbc:	cmp	r4, #0
   12bc0:	moveq	r4, r0
   12bc4:	bl	11318 <__errno_location@plt>
   12bc8:	mov	r5, r0
   12bcc:	ldr	r6, [r0]
   12bd0:	mov	r0, r4
   12bd4:	mov	r1, #48	; 0x30
   12bd8:	bl	1515c <putchar_unlocked@plt+0x3d30>
   12bdc:	str	r6, [r5]
   12be0:	pop	{r4, r5, r6, sl, fp, pc}
   12be4:	movw	r1, #29176	; 0x71f8
   12be8:	movt	r1, #2
   12bec:	cmp	r0, #0
   12bf0:	movne	r1, r0
   12bf4:	ldr	r0, [r1]
   12bf8:	bx	lr
   12bfc:	movw	r2, #29176	; 0x71f8
   12c00:	movt	r2, #2
   12c04:	cmp	r0, #0
   12c08:	movne	r2, r0
   12c0c:	str	r1, [r2]
   12c10:	bx	lr
   12c14:	movw	r3, #29176	; 0x71f8
   12c18:	movt	r3, #2
   12c1c:	cmp	r0, #0
   12c20:	movne	r3, r0
   12c24:	ubfx	r0, r1, #5, #3
   12c28:	add	r0, r3, r0, lsl #2
   12c2c:	ldr	r3, [r0, #8]
   12c30:	and	r1, r1, #31
   12c34:	eor	r2, r2, r3, lsr r1
   12c38:	and	r2, r2, #1
   12c3c:	eor	r2, r3, r2, lsl r1
   12c40:	str	r2, [r0, #8]
   12c44:	mov	r0, #1
   12c48:	and	r0, r0, r3, lsr r1
   12c4c:	bx	lr
   12c50:	movw	r2, #29176	; 0x71f8
   12c54:	movt	r2, #2
   12c58:	cmp	r0, #0
   12c5c:	movne	r2, r0
   12c60:	ldr	r0, [r2, #4]
   12c64:	str	r1, [r2, #4]
   12c68:	bx	lr
   12c6c:	movw	r3, #29176	; 0x71f8
   12c70:	movt	r3, #2
   12c74:	cmp	r0, #0
   12c78:	movne	r3, r0
   12c7c:	mov	r0, #10
   12c80:	str	r0, [r3]
   12c84:	cmp	r1, #0
   12c88:	cmpne	r2, #0
   12c8c:	bne	12c9c <putchar_unlocked@plt+0x1870>
   12c90:	push	{fp, lr}
   12c94:	mov	fp, sp
   12c98:	bl	11414 <abort@plt>
   12c9c:	str	r1, [r3, #40]	; 0x28
   12ca0:	str	r2, [r3, #44]	; 0x2c
   12ca4:	bx	lr
   12ca8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12cac:	add	fp, sp, #28
   12cb0:	sub	sp, sp, #20
   12cb4:	mov	r8, r3
   12cb8:	mov	r9, r2
   12cbc:	mov	sl, r1
   12cc0:	mov	r7, r0
   12cc4:	ldr	r0, [fp, #8]
   12cc8:	movw	r5, #29176	; 0x71f8
   12ccc:	movt	r5, #2
   12cd0:	cmp	r0, #0
   12cd4:	movne	r5, r0
   12cd8:	bl	11318 <__errno_location@plt>
   12cdc:	mov	r4, r0
   12ce0:	ldm	r5, {r0, r1}
   12ce4:	ldr	r2, [r5, #40]	; 0x28
   12ce8:	ldr	r3, [r5, #44]	; 0x2c
   12cec:	ldr	r6, [r4]
   12cf0:	add	r5, r5, #8
   12cf4:	stm	sp, {r0, r1, r5}
   12cf8:	str	r2, [sp, #12]
   12cfc:	str	r3, [sp, #16]
   12d00:	mov	r0, r7
   12d04:	mov	r1, sl
   12d08:	mov	r2, r9
   12d0c:	mov	r3, r8
   12d10:	bl	12d20 <putchar_unlocked@plt+0x18f4>
   12d14:	str	r6, [r4]
   12d18:	sub	sp, fp, #28
   12d1c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12d20:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12d24:	add	fp, sp, #28
   12d28:	sub	sp, sp, #156	; 0x9c
   12d2c:	mov	r9, r3
   12d30:	str	r2, [fp, #-84]	; 0xffffffac
   12d34:	mov	r6, r1
   12d38:	mov	r7, r0
   12d3c:	ldr	r0, [fp, #12]
   12d40:	and	r1, r0, #4
   12d44:	str	r1, [sp, #32]
   12d48:	and	r1, r0, #1
   12d4c:	str	r1, [sp, #36]	; 0x24
   12d50:	ubfx	sl, r0, #1, #1
   12d54:	bl	11240 <__ctype_get_mb_cur_max@plt>
   12d58:	str	r0, [sp, #40]	; 0x28
   12d5c:	ldr	r0, [fp, #24]
   12d60:	str	r0, [sp, #76]	; 0x4c
   12d64:	ldr	r0, [fp, #20]
   12d68:	str	r0, [sp, #68]	; 0x44
   12d6c:	ldr	r0, [fp, #8]
   12d70:	str	r0, [fp, #-60]	; 0xffffffc4
   12d74:	mov	r0, #0
   12d78:	str	r0, [sp, #72]	; 0x48
   12d7c:	mov	r0, #0
   12d80:	str	r0, [sp, #92]	; 0x5c
   12d84:	mov	r0, #0
   12d88:	str	r0, [fp, #-72]	; 0xffffffb8
   12d8c:	mov	r0, #0
   12d90:	mov	r1, #0
   12d94:	str	r1, [fp, #-56]	; 0xffffffc8
   12d98:	mov	r1, #0
   12d9c:	str	r1, [sp, #56]	; 0x38
   12da0:	mov	r5, #1
   12da4:	str	r7, [sp, #80]	; 0x50
   12da8:	mov	r4, r6
   12dac:	ldr	r6, [fp, #-60]	; 0xffffffc4
   12db0:	cmp	r6, #10
   12db4:	bhi	13d1c <putchar_unlocked@plt+0x28f0>
   12db8:	add	r1, pc, #20
   12dbc:	mov	r8, #0
   12dc0:	mov	r2, #1
   12dc4:	mov	r3, #0
   12dc8:	ldr	ip, [fp, #-84]	; 0xffffffac
   12dcc:	mov	lr, r9
   12dd0:	ldr	pc, [r1, r6, lsl #2]
   12dd4:	andeq	r2, r1, ip, lsr #29
   12dd8:	ldrdeq	r2, [r1], -ip
   12ddc:	muleq	r1, ip, lr
   12de0:	muleq	r1, r4, lr
   12de4:	ldrdeq	r2, [r1], -r0
   12de8:	andeq	r2, r1, r0, lsr pc
   12dec:			; <UNDEFINED> instruction: 0x00012ebc
   12df0:	andeq	r2, r1, ip, lsl #31
   12df4:	andeq	r2, r1, r0, lsl #28
   12df8:	andeq	r2, r1, r0, lsl #28
   12dfc:	andeq	r2, r1, r8, lsr #28
   12e00:	movw	r0, #25182	; 0x625e
   12e04:	movt	r0, #1
   12e08:	mov	r1, r6
   12e0c:	bl	14328 <putchar_unlocked@plt+0x2efc>
   12e10:	str	r0, [sp, #68]	; 0x44
   12e14:	movw	r0, #25184	; 0x6260
   12e18:	movt	r0, #1
   12e1c:	mov	r1, r6
   12e20:	bl	14328 <putchar_unlocked@plt+0x2efc>
   12e24:	str	r0, [sp, #76]	; 0x4c
   12e28:	mov	r8, #0
   12e2c:	tst	sl, #1
   12e30:	bne	12e68 <putchar_unlocked@plt+0x1a3c>
   12e34:	ldr	r0, [sp, #68]	; 0x44
   12e38:	ldrb	r0, [r0]
   12e3c:	cmp	r0, #0
   12e40:	beq	12e68 <putchar_unlocked@plt+0x1a3c>
   12e44:	ldr	r1, [sp, #68]	; 0x44
   12e48:	add	r1, r1, #1
   12e4c:	mov	r8, #0
   12e50:	cmp	r8, r4
   12e54:	strbcc	r0, [r7, r8]
   12e58:	ldrb	r0, [r1, r8]
   12e5c:	add	r8, r8, #1
   12e60:	cmp	r0, #0
   12e64:	bne	12e50 <putchar_unlocked@plt+0x1a24>
   12e68:	ldr	r6, [sp, #76]	; 0x4c
   12e6c:	mov	r0, r6
   12e70:	bl	11300 <strlen@plt>
   12e74:	str	r0, [fp, #-72]	; 0xffffffb8
   12e78:	str	r6, [sp, #92]	; 0x5c
   12e7c:	mov	r2, #1
   12e80:	mov	r3, sl
   12e84:	ldr	ip, [fp, #-84]	; 0xffffffac
   12e88:	mov	lr, r9
   12e8c:	ldr	r6, [fp, #-60]	; 0xffffffc4
   12e90:	b	12f8c <putchar_unlocked@plt+0x1b60>
   12e94:	mov	r0, #1
   12e98:	b	12edc <putchar_unlocked@plt+0x1ab0>
   12e9c:	tst	sl, #1
   12ea0:	bne	12edc <putchar_unlocked@plt+0x1ab0>
   12ea4:	mov	r2, r0
   12ea8:	b	12f04 <putchar_unlocked@plt+0x1ad8>
   12eac:	mov	r6, #0
   12eb0:	mov	r8, #0
   12eb4:	mov	r2, r0
   12eb8:	b	12f88 <putchar_unlocked@plt+0x1b5c>
   12ebc:	mov	r0, #1
   12ec0:	str	r0, [fp, #-72]	; 0xffffffb8
   12ec4:	mov	r8, #0
   12ec8:	mov	r6, #5
   12ecc:	b	12f48 <putchar_unlocked@plt+0x1b1c>
   12ed0:	mov	r2, #1
   12ed4:	tst	sl, #1
   12ed8:	beq	12f04 <putchar_unlocked@plt+0x1ad8>
   12edc:	mov	r1, #1
   12ee0:	str	r1, [fp, #-72]	; 0xffffffb8
   12ee4:	mov	r8, #0
   12ee8:	mov	r6, #2
   12eec:	movw	r1, #25184	; 0x6260
   12ef0:	movt	r1, #1
   12ef4:	str	r1, [sp, #92]	; 0x5c
   12ef8:	mov	r2, r0
   12efc:	mov	r3, #1
   12f00:	b	12f8c <putchar_unlocked@plt+0x1b60>
   12f04:	mov	r8, #1
   12f08:	mov	r6, #2
   12f0c:	cmp	r4, #0
   12f10:	movne	r0, #39	; 0x27
   12f14:	strbne	r0, [r7]
   12f18:	movw	r0, #25184	; 0x6260
   12f1c:	movt	r0, #1
   12f20:	str	r0, [sp, #92]	; 0x5c
   12f24:	mov	r0, #1
   12f28:	str	r0, [fp, #-72]	; 0xffffffb8
   12f2c:	b	12f88 <putchar_unlocked@plt+0x1b5c>
   12f30:	mov	r6, #5
   12f34:	tst	sl, #1
   12f38:	beq	12f60 <putchar_unlocked@plt+0x1b34>
   12f3c:	mov	r0, #1
   12f40:	str	r0, [fp, #-72]	; 0xffffffb8
   12f44:	mov	r8, #0
   12f48:	movw	r0, #25180	; 0x625c
   12f4c:	movt	r0, #1
   12f50:	str	r0, [sp, #92]	; 0x5c
   12f54:	mov	r2, #1
   12f58:	mov	r3, #1
   12f5c:	b	12f8c <putchar_unlocked@plt+0x1b60>
   12f60:	cmp	r4, #0
   12f64:	movne	r0, #34	; 0x22
   12f68:	strbne	r0, [r7]
   12f6c:	mov	r8, #1
   12f70:	movw	r0, #25180	; 0x625c
   12f74:	movt	r0, #1
   12f78:	str	r0, [sp, #92]	; 0x5c
   12f7c:	mov	r0, #1
   12f80:	str	r0, [fp, #-72]	; 0xffffffb8
   12f84:	mov	r2, #1
   12f88:	mov	r3, #0
   12f8c:	ldr	r0, [fp, #16]
   12f90:	cmp	r0, #0
   12f94:	movwne	r0, #1
   12f98:	and	r0, r0, r3
   12f9c:	str	r0, [fp, #-88]	; 0xffffffa8
   12fa0:	ldr	r0, [fp, #-72]	; 0xffffffb8
   12fa4:	cmp	r0, #0
   12fa8:	movwne	r0, #1
   12fac:	and	r1, r0, r3
   12fb0:	and	r1, r2, r1
   12fb4:	str	r1, [sp, #48]	; 0x30
   12fb8:	str	r6, [fp, #-60]	; 0xffffffc4
   12fbc:	subs	r6, r6, #2
   12fc0:	clz	r1, r6
   12fc4:	lsr	r1, r1, #5
   12fc8:	and	r1, r1, r3
   12fcc:	str	r1, [sp, #60]	; 0x3c
   12fd0:	str	r6, [fp, #-80]	; 0xffffffb0
   12fd4:	mov	r1, r6
   12fd8:	movwne	r1, #1
   12fdc:	str	r3, [fp, #-76]	; 0xffffffb4
   12fe0:	eor	r3, r3, #1
   12fe4:	str	r3, [sp, #88]	; 0x58
   12fe8:	orr	r3, r1, r3
   12fec:	str	r3, [sp, #64]	; 0x40
   12ff0:	and	r1, r1, r2
   12ff4:	str	r1, [fp, #-68]	; 0xffffffbc
   12ff8:	and	r0, r0, r1
   12ffc:	str	r0, [fp, #-64]	; 0xffffffc0
   13000:	str	r2, [sp, #84]	; 0x54
   13004:	eor	r0, r2, #1
   13008:	str	r0, [sp, #52]	; 0x34
   1300c:	mov	r6, #0
   13010:	cmn	lr, #1
   13014:	beq	13024 <putchar_unlocked@plt+0x1bf8>
   13018:	cmp	r6, lr
   1301c:	bne	13030 <putchar_unlocked@plt+0x1c04>
   13020:	b	13b9c <putchar_unlocked@plt+0x2770>
   13024:	ldrb	r0, [ip, r6]
   13028:	cmp	r0, #0
   1302c:	beq	13b9c <putchar_unlocked@plt+0x2770>
   13030:	str	r5, [fp, #-48]	; 0xffffffd0
   13034:	mov	sl, #0
   13038:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1303c:	cmp	r0, #0
   13040:	beq	13074 <putchar_unlocked@plt+0x1c48>
   13044:	ldr	r0, [fp, #-72]	; 0xffffffb8
   13048:	add	r5, r6, r0
   1304c:	cmp	r0, #2
   13050:	bcc	1306c <putchar_unlocked@plt+0x1c40>
   13054:	cmn	lr, #1
   13058:	bne	1306c <putchar_unlocked@plt+0x1c40>
   1305c:	mov	r0, ip
   13060:	bl	11300 <strlen@plt>
   13064:	ldr	ip, [fp, #-84]	; 0xffffffac
   13068:	mov	lr, r0
   1306c:	cmp	r5, lr
   13070:	bls	13080 <putchar_unlocked@plt+0x1c54>
   13074:	mov	r0, #0
   13078:	str	r0, [fp, #-52]	; 0xffffffcc
   1307c:	b	130cc <putchar_unlocked@plt+0x1ca0>
   13080:	mov	r5, r4
   13084:	mov	r4, lr
   13088:	add	r0, ip, r6
   1308c:	ldr	r1, [sp, #92]	; 0x5c
   13090:	ldr	r2, [fp, #-72]	; 0xffffffb8
   13094:	bl	111c8 <memcmp@plt>
   13098:	cmp	r0, #0
   1309c:	mov	r1, r0
   130a0:	movwne	r1, #1
   130a4:	ldr	r2, [sp, #88]	; 0x58
   130a8:	orr	r1, r1, r2
   130ac:	tst	r1, #1
   130b0:	beq	13c60 <putchar_unlocked@plt+0x2834>
   130b4:	clz	r0, r0
   130b8:	lsr	r0, r0, #5
   130bc:	str	r0, [fp, #-52]	; 0xffffffcc
   130c0:	ldr	ip, [fp, #-84]	; 0xffffffac
   130c4:	mov	lr, r4
   130c8:	mov	r4, r5
   130cc:	ldrb	r5, [ip, r6]
   130d0:	cmp	r5, #126	; 0x7e
   130d4:	bhi	13490 <putchar_unlocked@plt+0x2064>
   130d8:	mov	r9, #1
   130dc:	mov	r2, #110	; 0x6e
   130e0:	mov	r0, #97	; 0x61
   130e4:	add	r3, pc, #4
   130e8:	mov	r1, #0
   130ec:	ldr	pc, [r3, r5, lsl #2]
   130f0:	andeq	r3, r1, r8, lsl #7
   130f4:	muleq	r1, r0, r4
   130f8:	muleq	r1, r0, r4
   130fc:	muleq	r1, r0, r4
   13100:	muleq	r1, r0, r4
   13104:	muleq	r1, r0, r4
   13108:	muleq	r1, r0, r4
   1310c:	andeq	r3, r1, r4, asr r5
   13110:	andeq	r3, r1, r8, ror #6
   13114:	andeq	r3, r1, r0, ror #6
   13118:	andeq	r3, r1, r4, ror r3
   1311c:	strdeq	r3, [r1], -r8
   13120:	andeq	r3, r1, r8, asr r3
   13124:	andeq	r3, r1, r0, ror r3
   13128:	muleq	r1, r0, r4
   1312c:	muleq	r1, r0, r4
   13130:	muleq	r1, r0, r4
   13134:	muleq	r1, r0, r4
   13138:	muleq	r1, r0, r4
   1313c:	muleq	r1, r0, r4
   13140:	muleq	r1, r0, r4
   13144:	muleq	r1, r0, r4
   13148:	muleq	r1, r0, r4
   1314c:	muleq	r1, r0, r4
   13150:	muleq	r1, r0, r4
   13154:	muleq	r1, r0, r4
   13158:	muleq	r1, r0, r4
   1315c:	muleq	r1, r0, r4
   13160:	muleq	r1, r0, r4
   13164:	muleq	r1, r0, r4
   13168:	muleq	r1, r0, r4
   1316c:	muleq	r1, r0, r4
   13170:	andeq	r3, r1, r4, lsl #10
   13174:	andeq	r3, r1, r8, lsl #10
   13178:	andeq	r3, r1, r8, lsl #10
   1317c:	andeq	r3, r1, r0, lsl #6
   13180:	andeq	r3, r1, r8, lsl #10
   13184:	andeq	r3, r1, ip, ror #5
   13188:	andeq	r3, r1, r8, lsl #10
   1318c:	andeq	r3, r1, r0, lsl #8
   13190:	andeq	r3, r1, r8, lsl #10
   13194:	andeq	r3, r1, r8, lsl #10
   13198:	andeq	r3, r1, r8, lsl #10
   1319c:	andeq	r3, r1, ip, ror #5
   131a0:	andeq	r3, r1, ip, ror #5
   131a4:	andeq	r3, r1, ip, ror #5
   131a8:	andeq	r3, r1, ip, ror #5
   131ac:	andeq	r3, r1, ip, ror #5
   131b0:	andeq	r3, r1, ip, ror #5
   131b4:	andeq	r3, r1, ip, ror #5
   131b8:	andeq	r3, r1, ip, ror #5
   131bc:	andeq	r3, r1, ip, ror #5
   131c0:	andeq	r3, r1, ip, ror #5
   131c4:	andeq	r3, r1, ip, ror #5
   131c8:	andeq	r3, r1, ip, ror #5
   131cc:	andeq	r3, r1, ip, ror #5
   131d0:	andeq	r3, r1, ip, ror #5
   131d4:	andeq	r3, r1, ip, ror #5
   131d8:	andeq	r3, r1, ip, ror #5
   131dc:	andeq	r3, r1, r8, lsl #10
   131e0:	andeq	r3, r1, r8, lsl #10
   131e4:	andeq	r3, r1, r8, lsl #10
   131e8:	andeq	r3, r1, r8, lsl #10
   131ec:	andeq	r3, r1, r8, asr #7
   131f0:	muleq	r1, r0, r4
   131f4:	andeq	r3, r1, ip, ror #5
   131f8:	andeq	r3, r1, ip, ror #5
   131fc:	andeq	r3, r1, ip, ror #5
   13200:	andeq	r3, r1, ip, ror #5
   13204:	andeq	r3, r1, ip, ror #5
   13208:	andeq	r3, r1, ip, ror #5
   1320c:	andeq	r3, r1, ip, ror #5
   13210:	andeq	r3, r1, ip, ror #5
   13214:	andeq	r3, r1, ip, ror #5
   13218:	andeq	r3, r1, ip, ror #5
   1321c:	andeq	r3, r1, ip, ror #5
   13220:	andeq	r3, r1, ip, ror #5
   13224:	andeq	r3, r1, ip, ror #5
   13228:	andeq	r3, r1, ip, ror #5
   1322c:	andeq	r3, r1, ip, ror #5
   13230:	andeq	r3, r1, ip, ror #5
   13234:	andeq	r3, r1, ip, ror #5
   13238:	andeq	r3, r1, ip, ror #5
   1323c:	andeq	r3, r1, ip, ror #5
   13240:	andeq	r3, r1, ip, ror #5
   13244:	andeq	r3, r1, ip, ror #5
   13248:	andeq	r3, r1, ip, ror #5
   1324c:	andeq	r3, r1, ip, ror #5
   13250:	andeq	r3, r1, ip, ror #5
   13254:	andeq	r3, r1, ip, ror #5
   13258:	andeq	r3, r1, ip, ror #5
   1325c:	andeq	r3, r1, r8, lsl #10
   13260:	andeq	r3, r1, r4, lsr r3
   13264:	andeq	r3, r1, ip, ror #5
   13268:	andeq	r3, r1, r8, lsl #10
   1326c:	andeq	r3, r1, ip, ror #5
   13270:	andeq	r3, r1, r8, lsl #10
   13274:	andeq	r3, r1, ip, ror #5
   13278:	andeq	r3, r1, ip, ror #5
   1327c:	andeq	r3, r1, ip, ror #5
   13280:	andeq	r3, r1, ip, ror #5
   13284:	andeq	r3, r1, ip, ror #5
   13288:	andeq	r3, r1, ip, ror #5
   1328c:	andeq	r3, r1, ip, ror #5
   13290:	andeq	r3, r1, ip, ror #5
   13294:	andeq	r3, r1, ip, ror #5
   13298:	andeq	r3, r1, ip, ror #5
   1329c:	andeq	r3, r1, ip, ror #5
   132a0:	andeq	r3, r1, ip, ror #5
   132a4:	andeq	r3, r1, ip, ror #5
   132a8:	andeq	r3, r1, ip, ror #5
   132ac:	andeq	r3, r1, ip, ror #5
   132b0:	andeq	r3, r1, ip, ror #5
   132b4:	andeq	r3, r1, ip, ror #5
   132b8:	andeq	r3, r1, ip, ror #5
   132bc:	andeq	r3, r1, ip, ror #5
   132c0:	andeq	r3, r1, ip, ror #5
   132c4:	andeq	r3, r1, ip, ror #5
   132c8:	andeq	r3, r1, ip, ror #5
   132cc:	andeq	r3, r1, ip, ror #5
   132d0:	andeq	r3, r1, ip, ror #5
   132d4:	andeq	r3, r1, ip, ror #5
   132d8:	andeq	r3, r1, ip, ror #5
   132dc:	andeq	r3, r1, r4, lsl r3
   132e0:	andeq	r3, r1, r8, lsl #10
   132e4:	andeq	r3, r1, r4, lsl r3
   132e8:	andeq	r3, r1, r0, lsl #6
   132ec:	ldr	r0, [fp, #-68]	; 0xffffffbc
   132f0:	cmp	r0, #0
   132f4:	beq	13568 <putchar_unlocked@plt+0x213c>
   132f8:	ldr	r0, [fp, #16]
   132fc:	b	1356c <putchar_unlocked@plt+0x2140>
   13300:	mov	r9, #0
   13304:	cmp	r6, #0
   13308:	beq	13504 <putchar_unlocked@plt+0x20d8>
   1330c:	mov	sl, #0
   13310:	b	132ec <putchar_unlocked@plt+0x1ec0>
   13314:	mov	r9, #0
   13318:	cmn	lr, #1
   1331c:	beq	134e8 <putchar_unlocked@plt+0x20bc>
   13320:	cmp	r6, #0
   13324:	bne	1330c <putchar_unlocked@plt+0x1ee0>
   13328:	cmp	lr, #1
   1332c:	beq	13504 <putchar_unlocked@plt+0x20d8>
   13330:	b	1330c <putchar_unlocked@plt+0x1ee0>
   13334:	ldr	r0, [fp, #-60]	; 0xffffffc4
   13338:	cmp	r0, #2
   1333c:	bne	13530 <putchar_unlocked@plt+0x2104>
   13340:	ldr	r0, [fp, #-76]	; 0xffffffb4
   13344:	tst	r0, #1
   13348:	bne	13c78 <putchar_unlocked@plt+0x284c>
   1334c:	mov	sl, #0
   13350:	mov	r0, #92	; 0x5c
   13354:	b	13544 <putchar_unlocked@plt+0x2118>
   13358:	mov	r0, #102	; 0x66
   1335c:	b	13554 <putchar_unlocked@plt+0x2128>
   13360:	mov	r2, #116	; 0x74
   13364:	b	13374 <putchar_unlocked@plt+0x1f48>
   13368:	mov	r0, #98	; 0x62
   1336c:	b	13554 <putchar_unlocked@plt+0x2128>
   13370:	mov	r2, #114	; 0x72
   13374:	ldr	r0, [sp, #64]	; 0x40
   13378:	tst	r0, #1
   1337c:	mov	r0, r2
   13380:	bne	13554 <putchar_unlocked@plt+0x2128>
   13384:	b	13c78 <putchar_unlocked@plt+0x284c>
   13388:	ldr	r0, [sp, #84]	; 0x54
   1338c:	tst	r0, #1
   13390:	beq	13644 <putchar_unlocked@plt+0x2218>
   13394:	ldr	r0, [fp, #-76]	; 0xffffffb4
   13398:	tst	r0, #1
   1339c:	bne	13c78 <putchar_unlocked@plt+0x284c>
   133a0:	ldr	r0, [fp, #-60]	; 0xffffffc4
   133a4:	cmp	r0, #2
   133a8:	ldr	r0, [fp, #-80]	; 0xffffffb0
   133ac:	movwne	r0, #1
   133b0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   133b4:	orr	r0, r0, r2
   133b8:	tst	r0, #1
   133bc:	beq	13a38 <putchar_unlocked@plt+0x260c>
   133c0:	mov	r0, r8
   133c4:	b	13a6c <putchar_unlocked@plt+0x2640>
   133c8:	mov	sl, #0
   133cc:	mov	r5, #63	; 0x3f
   133d0:	ldr	r0, [fp, #-60]	; 0xffffffc4
   133d4:	cmp	r0, #5
   133d8:	beq	137f8 <putchar_unlocked@plt+0x23cc>
   133dc:	cmp	r0, #2
   133e0:	bne	13898 <putchar_unlocked@plt+0x246c>
   133e4:	ldr	r0, [fp, #-76]	; 0xffffffb4
   133e8:	tst	r0, #1
   133ec:	mov	r9, #0
   133f0:	beq	132ec <putchar_unlocked@plt+0x1ec0>
   133f4:	b	13c78 <putchar_unlocked@plt+0x284c>
   133f8:	mov	r0, #118	; 0x76
   133fc:	b	13554 <putchar_unlocked@plt+0x2128>
   13400:	mov	r5, #39	; 0x27
   13404:	mov	r0, #1
   13408:	str	r0, [sp, #56]	; 0x38
   1340c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   13410:	cmp	r0, #2
   13414:	bne	13664 <putchar_unlocked@plt+0x2238>
   13418:	ldr	r0, [fp, #-76]	; 0xffffffb4
   1341c:	tst	r0, #1
   13420:	bne	13c78 <putchar_unlocked@plt+0x284c>
   13424:	ldr	r2, [sp, #72]	; 0x48
   13428:	cmp	r2, #0
   1342c:	mov	r0, r2
   13430:	movwne	r0, #1
   13434:	clz	r1, r4
   13438:	lsr	r1, r1, #5
   1343c:	orrs	r0, r0, r1
   13440:	moveq	r2, r4
   13444:	str	r2, [sp, #72]	; 0x48
   13448:	moveq	r4, r0
   1344c:	cmp	r8, r4
   13450:	movcc	r0, #39	; 0x27
   13454:	strbcc	r0, [r7, r8]
   13458:	add	r0, r8, #1
   1345c:	cmp	r0, r4
   13460:	movcc	r1, #92	; 0x5c
   13464:	strbcc	r1, [r7, r0]
   13468:	add	r0, r8, #2
   1346c:	cmp	r0, r4
   13470:	movcc	r1, #39	; 0x27
   13474:	strbcc	r1, [r7, r0]
   13478:	add	r8, r8, #3
   1347c:	mov	r0, #0
   13480:	str	r0, [fp, #-56]	; 0xffffffc8
   13484:	mov	sl, #0
   13488:	mov	r9, #1
   1348c:	b	132ec <putchar_unlocked@plt+0x1ec0>
   13490:	str	r4, [sp, #24]
   13494:	ldr	r0, [sp, #40]	; 0x28
   13498:	cmp	r0, #1
   1349c:	bne	1366c <putchar_unlocked@plt+0x2240>
   134a0:	str	lr, [sp, #28]
   134a4:	bl	112e8 <__ctype_b_loc@plt>
   134a8:	ldr	ip, [fp, #-84]	; 0xffffffac
   134ac:	ldr	r0, [r0]
   134b0:	add	r0, r0, r5, lsl #1
   134b4:	ldrb	r0, [r0, #1]
   134b8:	ubfx	r9, r0, #6, #1
   134bc:	mov	r1, #1
   134c0:	ldr	r4, [sp, #24]
   134c4:	ldr	r0, [sp, #52]	; 0x34
   134c8:	orr	r0, r9, r0
   134cc:	mov	r2, r1
   134d0:	cmp	r1, #1
   134d4:	bhi	138a0 <putchar_unlocked@plt+0x2474>
   134d8:	tst	r0, #1
   134dc:	beq	138a0 <putchar_unlocked@plt+0x2474>
   134e0:	ldr	lr, [sp, #28]
   134e4:	b	132ec <putchar_unlocked@plt+0x1ec0>
   134e8:	cmp	r6, #0
   134ec:	ldrbeq	r0, [ip, #1]
   134f0:	cmpeq	r0, #0
   134f4:	beq	13504 <putchar_unlocked@plt+0x20d8>
   134f8:	mvn	lr, #0
   134fc:	mov	sl, #0
   13500:	b	132ec <putchar_unlocked@plt+0x1ec0>
   13504:	mov	r1, #1
   13508:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1350c:	cmp	r0, #2
   13510:	bne	13528 <putchar_unlocked@plt+0x20fc>
   13514:	ldr	r0, [fp, #-76]	; 0xffffffb4
   13518:	tst	r0, #1
   1351c:	mov	r9, r1
   13520:	beq	132ec <putchar_unlocked@plt+0x1ec0>
   13524:	b	13c78 <putchar_unlocked@plt+0x284c>
   13528:	mov	r9, r1
   1352c:	b	132ec <putchar_unlocked@plt+0x1ec0>
   13530:	mov	sl, #0
   13534:	mov	r0, #92	; 0x5c
   13538:	ldr	r1, [sp, #48]	; 0x30
   1353c:	cmp	r1, #0
   13540:	beq	13554 <putchar_unlocked@plt+0x2128>
   13544:	mov	r9, #0
   13548:	cmp	sl, #0
   1354c:	beq	13b04 <putchar_unlocked@plt+0x26d8>
   13550:	b	13b40 <putchar_unlocked@plt+0x2714>
   13554:	mov	r9, #0
   13558:	ldr	r1, [sp, #84]	; 0x54
   1355c:	tst	r1, #1
   13560:	mov	sl, #0
   13564:	bne	135a4 <putchar_unlocked@plt+0x2178>
   13568:	ldr	r0, [fp, #-88]	; 0xffffffa8
   1356c:	cmp	r0, #0
   13570:	mov	r0, r5
   13574:	beq	13598 <putchar_unlocked@plt+0x216c>
   13578:	ubfx	r0, r5, #5, #3
   1357c:	ldr	r1, [fp, #16]
   13580:	ldr	r0, [r1, r0, lsl #2]
   13584:	and	r1, r5, #31
   13588:	mov	r2, #1
   1358c:	tst	r0, r2, lsl r1
   13590:	mov	r0, r5
   13594:	bne	135a4 <putchar_unlocked@plt+0x2178>
   13598:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1359c:	cmp	r1, #0
   135a0:	beq	13afc <putchar_unlocked@plt+0x26d0>
   135a4:	ldr	r1, [fp, #-76]	; 0xffffffb4
   135a8:	tst	r1, #1
   135ac:	bne	13c78 <putchar_unlocked@plt+0x284c>
   135b0:	ldr	r1, [fp, #-60]	; 0xffffffc4
   135b4:	cmp	r1, #2
   135b8:	ldr	r1, [fp, #-80]	; 0xffffffb0
   135bc:	movwne	r1, #1
   135c0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   135c4:	orr	r1, r1, r2
   135c8:	tst	r1, #1
   135cc:	beq	135d8 <putchar_unlocked@plt+0x21ac>
   135d0:	ldr	r5, [fp, #-48]	; 0xffffffd0
   135d4:	b	13614 <putchar_unlocked@plt+0x21e8>
   135d8:	cmp	r8, r4
   135dc:	movcc	r1, #39	; 0x27
   135e0:	strbcc	r1, [r7, r8]
   135e4:	add	r1, r8, #1
   135e8:	cmp	r1, r4
   135ec:	ldr	r5, [fp, #-48]	; 0xffffffd0
   135f0:	movcc	r2, #36	; 0x24
   135f4:	strbcc	r2, [r7, r1]
   135f8:	add	r1, r8, #2
   135fc:	cmp	r1, r4
   13600:	movcc	r2, #39	; 0x27
   13604:	strbcc	r2, [r7, r1]
   13608:	add	r8, r8, #3
   1360c:	mov	r1, #1
   13610:	str	r1, [fp, #-56]	; 0xffffffc8
   13614:	cmp	r8, r4
   13618:	movcc	r1, #92	; 0x5c
   1361c:	strbcc	r1, [r7, r8]
   13620:	add	r8, r8, #1
   13624:	cmp	r8, r4
   13628:	strbcc	r0, [r7, r8]
   1362c:	and	r5, r5, r9
   13630:	add	r8, r8, #1
   13634:	add	r6, r6, #1
   13638:	cmn	lr, #1
   1363c:	bne	13018 <putchar_unlocked@plt+0x1bec>
   13640:	b	13024 <putchar_unlocked@plt+0x1bf8>
   13644:	mov	r9, #0
   13648:	ldr	r0, [sp, #36]	; 0x24
   1364c:	cmp	r0, #0
   13650:	mov	sl, #0
   13654:	mov	r5, #0
   13658:	beq	13568 <putchar_unlocked@plt+0x213c>
   1365c:	ldr	r5, [fp, #-48]	; 0xffffffd0
   13660:	b	13634 <putchar_unlocked@plt+0x2208>
   13664:	mov	r9, #1
   13668:	b	132ec <putchar_unlocked@plt+0x1ec0>
   1366c:	mov	r0, #0
   13670:	str	r0, [fp, #-36]	; 0xffffffdc
   13674:	str	r0, [fp, #-40]	; 0xffffffd8
   13678:	cmn	lr, #1
   1367c:	bne	13690 <putchar_unlocked@plt+0x2264>
   13680:	mov	r0, ip
   13684:	bl	11300 <strlen@plt>
   13688:	ldr	ip, [fp, #-84]	; 0xffffffac
   1368c:	mov	lr, r0
   13690:	add	r0, ip, r6
   13694:	str	r0, [sp, #20]
   13698:	mov	r9, #1
   1369c:	mov	r7, #0
   136a0:	sub	r4, fp, #40	; 0x28
   136a4:	str	lr, [sp, #28]
   136a8:	str	r7, [sp, #44]	; 0x2c
   136ac:	add	r7, r7, r6
   136b0:	add	r1, ip, r7
   136b4:	sub	r2, lr, r7
   136b8:	sub	r0, fp, #44	; 0x2c
   136bc:	mov	r3, r4
   136c0:	bl	15768 <putchar_unlocked@plt+0x433c>
   136c4:	cmp	r0, #0
   136c8:	beq	13b88 <putchar_unlocked@plt+0x275c>
   136cc:	cmn	r0, #1
   136d0:	beq	13b48 <putchar_unlocked@plt+0x271c>
   136d4:	cmn	r0, #2
   136d8:	ldr	lr, [sp, #28]
   136dc:	beq	13b50 <putchar_unlocked@plt+0x2724>
   136e0:	cmp	r0, #2
   136e4:	mov	r1, #0
   136e8:	movwcc	r1, #1
   136ec:	ldr	r2, [sp, #60]	; 0x3c
   136f0:	eor	r2, r2, #1
   136f4:	orrs	r1, r2, r1
   136f8:	ldr	r4, [sp, #24]
   136fc:	bne	137bc <putchar_unlocked@plt+0x2390>
   13700:	ldr	r1, [sp, #44]	; 0x2c
   13704:	ldr	r2, [sp, #20]
   13708:	add	r1, r2, r1
   1370c:	mov	r2, #1
   13710:	ldrb	r3, [r1, r2]
   13714:	sub	r3, r3, #91	; 0x5b
   13718:	cmp	r3, #33	; 0x21
   1371c:	bhi	137b0 <putchar_unlocked@plt+0x2384>
   13720:	add	r7, pc, #0
   13724:	ldr	pc, [r7, r3, lsl #2]
   13728:	andeq	r3, r1, r0, ror ip
   1372c:	andeq	r3, r1, r0, ror ip
   13730:			; <UNDEFINED> instruction: 0x000137b0
   13734:	andeq	r3, r1, r0, ror ip
   13738:			; <UNDEFINED> instruction: 0x000137b0
   1373c:	andeq	r3, r1, r0, ror ip
   13740:			; <UNDEFINED> instruction: 0x000137b0
   13744:			; <UNDEFINED> instruction: 0x000137b0
   13748:			; <UNDEFINED> instruction: 0x000137b0
   1374c:			; <UNDEFINED> instruction: 0x000137b0
   13750:			; <UNDEFINED> instruction: 0x000137b0
   13754:			; <UNDEFINED> instruction: 0x000137b0
   13758:			; <UNDEFINED> instruction: 0x000137b0
   1375c:			; <UNDEFINED> instruction: 0x000137b0
   13760:			; <UNDEFINED> instruction: 0x000137b0
   13764:			; <UNDEFINED> instruction: 0x000137b0
   13768:			; <UNDEFINED> instruction: 0x000137b0
   1376c:			; <UNDEFINED> instruction: 0x000137b0
   13770:			; <UNDEFINED> instruction: 0x000137b0
   13774:			; <UNDEFINED> instruction: 0x000137b0
   13778:			; <UNDEFINED> instruction: 0x000137b0
   1377c:			; <UNDEFINED> instruction: 0x000137b0
   13780:			; <UNDEFINED> instruction: 0x000137b0
   13784:			; <UNDEFINED> instruction: 0x000137b0
   13788:			; <UNDEFINED> instruction: 0x000137b0
   1378c:			; <UNDEFINED> instruction: 0x000137b0
   13790:			; <UNDEFINED> instruction: 0x000137b0
   13794:			; <UNDEFINED> instruction: 0x000137b0
   13798:			; <UNDEFINED> instruction: 0x000137b0
   1379c:			; <UNDEFINED> instruction: 0x000137b0
   137a0:			; <UNDEFINED> instruction: 0x000137b0
   137a4:			; <UNDEFINED> instruction: 0x000137b0
   137a8:			; <UNDEFINED> instruction: 0x000137b0
   137ac:	andeq	r3, r1, r0, ror ip
   137b0:	add	r2, r2, #1
   137b4:	cmp	r2, r0
   137b8:	bcc	13710 <putchar_unlocked@plt+0x22e4>
   137bc:	ldr	r7, [sp, #44]	; 0x2c
   137c0:	add	r7, r0, r7
   137c4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   137c8:	bl	1121c <iswprint@plt>
   137cc:	cmp	r0, #0
   137d0:	movwne	r0, #1
   137d4:	and	r9, r9, r0
   137d8:	sub	r4, fp, #40	; 0x28
   137dc:	mov	r0, r4
   137e0:	bl	111a4 <mbsinit@plt>
   137e4:	ldr	lr, [sp, #28]
   137e8:	cmp	r0, #0
   137ec:	ldr	ip, [fp, #-84]	; 0xffffffac
   137f0:	beq	136a8 <putchar_unlocked@plt+0x227c>
   137f4:	b	13b90 <putchar_unlocked@plt+0x2764>
   137f8:	ldr	r0, [sp, #32]
   137fc:	cmp	r0, #0
   13800:	beq	13898 <putchar_unlocked@plt+0x246c>
   13804:	add	r0, r6, #2
   13808:	cmp	r0, lr
   1380c:	bcs	13898 <putchar_unlocked@plt+0x246c>
   13810:	add	r1, ip, r6
   13814:	ldrb	r1, [r1, #1]
   13818:	cmp	r1, #63	; 0x3f
   1381c:	bne	13898 <putchar_unlocked@plt+0x246c>
   13820:	ldrb	r9, [ip, r0]
   13824:	sub	r2, r9, #33	; 0x21
   13828:	cmp	r2, #29
   1382c:	bhi	13898 <putchar_unlocked@plt+0x246c>
   13830:	mov	r3, #1
   13834:	movw	r1, #20929	; 0x51c1
   13838:	movt	r1, #14336	; 0x3800
   1383c:	tst	r1, r3, lsl r2
   13840:	beq	13898 <putchar_unlocked@plt+0x246c>
   13844:	ldr	r1, [fp, #-76]	; 0xffffffb4
   13848:	tst	r1, #1
   1384c:	bne	13c78 <putchar_unlocked@plt+0x284c>
   13850:	cmp	r8, r4
   13854:	movcc	r1, #63	; 0x3f
   13858:	strbcc	r1, [r7, r8]
   1385c:	add	r2, r8, #1
   13860:	cmp	r2, r4
   13864:	movcc	r1, #34	; 0x22
   13868:	strbcc	r1, [r7, r2]
   1386c:	add	r2, r8, #2
   13870:	cmp	r2, r4
   13874:	movcc	r1, #34	; 0x22
   13878:	strbcc	r1, [r7, r2]
   1387c:	add	r2, r8, #3
   13880:	cmp	r2, r4
   13884:	movcc	r1, #63	; 0x3f
   13888:	strbcc	r1, [r7, r2]
   1388c:	add	r8, r8, #4
   13890:	mov	r6, r0
   13894:	mov	r5, r9
   13898:	mov	r9, #0
   1389c:	b	132ec <putchar_unlocked@plt+0x1ec0>
   138a0:	add	r1, r2, r6
   138a4:	str	r1, [sp, #44]	; 0x2c
   138a8:	add	r1, r6, #1
   138ac:	mov	r3, #0
   138b0:	ldr	lr, [sp, #28]
   138b4:	ldr	r6, [fp, #-60]	; 0xffffffc4
   138b8:	tst	r0, #1
   138bc:	bne	139b0 <putchar_unlocked@plt+0x2584>
   138c0:	ldr	r2, [fp, #-76]	; 0xffffffb4
   138c4:	tst	r2, #1
   138c8:	bne	13c78 <putchar_unlocked@plt+0x284c>
   138cc:	cmp	r6, #2
   138d0:	ldr	r3, [fp, #-80]	; 0xffffffb0
   138d4:	movwne	r3, #1
   138d8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   138dc:	orr	r3, r3, r2
   138e0:	tst	r3, #1
   138e4:	bne	13920 <putchar_unlocked@plt+0x24f4>
   138e8:	cmp	r8, r4
   138ec:	movcc	r2, #39	; 0x27
   138f0:	strbcc	r2, [r7, r8]
   138f4:	add	r3, r8, #1
   138f8:	cmp	r3, r4
   138fc:	movcc	r2, #36	; 0x24
   13900:	strbcc	r2, [r7, r3]
   13904:	add	r3, r8, #2
   13908:	cmp	r3, r4
   1390c:	movcc	r2, #39	; 0x27
   13910:	strbcc	r2, [r7, r3]
   13914:	add	r8, r8, #3
   13918:	mov	r2, #1
   1391c:	str	r2, [fp, #-56]	; 0xffffffc8
   13920:	cmp	r8, r4
   13924:	movcc	r2, #92	; 0x5c
   13928:	strbcc	r2, [r7, r8]
   1392c:	add	r3, r8, #1
   13930:	cmp	r3, r4
   13934:	bcs	13954 <putchar_unlocked@plt+0x2528>
   13938:	and	r7, r5, #192	; 0xc0
   1393c:	mov	r2, #48	; 0x30
   13940:	orr	r7, r2, r7, lsr #6
   13944:	ldr	r6, [sp, #80]	; 0x50
   13948:	strb	r7, [r6, r3]
   1394c:	ldr	r6, [fp, #-60]	; 0xffffffc4
   13950:	ldr	r7, [sp, #80]	; 0x50
   13954:	add	r3, r8, #2
   13958:	cmp	r3, r4
   1395c:	bcs	1397c <putchar_unlocked@plt+0x2550>
   13960:	lsr	r7, r5, #3
   13964:	mov	r2, #6
   13968:	bfi	r7, r2, #3, #29
   1396c:	ldr	r6, [sp, #80]	; 0x50
   13970:	strb	r7, [r6, r3]
   13974:	ldr	r6, [fp, #-60]	; 0xffffffc4
   13978:	ldr	r7, [sp, #80]	; 0x50
   1397c:	mov	r2, #6
   13980:	bfi	r5, r2, #3, #29
   13984:	add	r8, r8, #3
   13988:	mov	r3, #1
   1398c:	b	139d4 <putchar_unlocked@plt+0x25a8>
   13990:	ldr	r7, [sp, #80]	; 0x50
   13994:	cmp	r8, r4
   13998:	strbcc	r5, [r7, r8]
   1399c:	ldrb	r5, [ip, r1]
   139a0:	add	r1, r1, #1
   139a4:	add	r8, r8, #1
   139a8:	tst	r0, #1
   139ac:	beq	138c0 <putchar_unlocked@plt+0x2494>
   139b0:	ldr	r2, [fp, #-52]	; 0xffffffcc
   139b4:	tst	r2, #1
   139b8:	beq	139cc <putchar_unlocked@plt+0x25a0>
   139bc:	cmp	r8, r4
   139c0:	movcc	r2, #92	; 0x5c
   139c4:	strbcc	r2, [r7, r8]
   139c8:	add	r8, r8, #1
   139cc:	mov	r2, #0
   139d0:	str	r2, [fp, #-52]	; 0xffffffcc
   139d4:	and	sl, r3, #1
   139d8:	ldr	r2, [sp, #44]	; 0x2c
   139dc:	cmp	r2, r1
   139e0:	bls	13aec <putchar_unlocked@plt+0x26c0>
   139e4:	cmp	sl, #0
   139e8:	movwne	sl, #1
   139ec:	ldr	r2, [fp, #-56]	; 0xffffffc8
   139f0:	mvn	r7, r2
   139f4:	orr	r7, r7, sl
   139f8:	tst	r7, #1
   139fc:	bne	13990 <putchar_unlocked@plt+0x2564>
   13a00:	cmp	r8, r4
   13a04:	ldrcc	r7, [sp, #80]	; 0x50
   13a08:	movcc	r2, #39	; 0x27
   13a0c:	strbcc	r2, [r7, r8]
   13a10:	add	r7, r8, #1
   13a14:	cmp	r7, r4
   13a18:	ldrcc	r6, [sp, #80]	; 0x50
   13a1c:	movcc	r2, #39	; 0x27
   13a20:	strbcc	r2, [r6, r7]
   13a24:	ldrcc	r6, [fp, #-60]	; 0xffffffc4
   13a28:	add	r8, r8, #2
   13a2c:	mov	r2, #0
   13a30:	str	r2, [fp, #-56]	; 0xffffffc8
   13a34:	b	13990 <putchar_unlocked@plt+0x2564>
   13a38:	cmp	r8, r4
   13a3c:	movcc	r0, #39	; 0x27
   13a40:	strbcc	r0, [r7, r8]
   13a44:	add	r0, r8, #1
   13a48:	cmp	r0, r4
   13a4c:	movcc	r1, #36	; 0x24
   13a50:	strbcc	r1, [r7, r0]
   13a54:	add	r0, r8, #2
   13a58:	cmp	r0, r4
   13a5c:	movcc	r1, #39	; 0x27
   13a60:	strbcc	r1, [r7, r0]
   13a64:	add	r0, r8, #3
   13a68:	mov	r2, #1
   13a6c:	cmp	r0, r4
   13a70:	movcc	r1, #92	; 0x5c
   13a74:	strbcc	r1, [r7, r0]
   13a78:	str	r2, [fp, #-56]	; 0xffffffc8
   13a7c:	add	r8, r0, #1
   13a80:	ldr	r1, [fp, #-60]	; 0xffffffc4
   13a84:	cmp	r1, #2
   13a88:	beq	13adc <putchar_unlocked@plt+0x26b0>
   13a8c:	add	r1, r6, #1
   13a90:	mov	r9, #0
   13a94:	mov	sl, #1
   13a98:	mov	r5, #48	; 0x30
   13a9c:	cmp	r1, lr
   13aa0:	bcs	132ec <putchar_unlocked@plt+0x1ec0>
   13aa4:	ldrb	r1, [ip, r1]
   13aa8:	sub	r1, r1, #48	; 0x30
   13aac:	uxtb	r1, r1
   13ab0:	cmp	r1, #9
   13ab4:	bhi	132ec <putchar_unlocked@plt+0x1ec0>
   13ab8:	cmp	r8, r4
   13abc:	movcc	r1, #48	; 0x30
   13ac0:	strbcc	r1, [r7, r8]
   13ac4:	add	r1, r0, #2
   13ac8:	cmp	r1, r4
   13acc:	movcc	r2, #48	; 0x30
   13ad0:	strbcc	r2, [r7, r1]
   13ad4:	add	r8, r0, #3
   13ad8:	b	132ec <putchar_unlocked@plt+0x1ec0>
   13adc:	mov	r0, #48	; 0x30
   13ae0:	mov	sl, #1
   13ae4:	mov	r9, #0
   13ae8:	b	13598 <putchar_unlocked@plt+0x216c>
   13aec:	sub	r6, r1, #1
   13af0:	cmp	sl, #0
   13af4:	movwne	sl, #1
   13af8:	mov	r0, r5
   13afc:	cmp	sl, #0
   13b00:	bne	13b40 <putchar_unlocked@plt+0x2714>
   13b04:	ldr	r1, [fp, #-56]	; 0xffffffc8
   13b08:	tst	r1, #1
   13b0c:	beq	13b40 <putchar_unlocked@plt+0x2714>
   13b10:	cmp	r8, r4
   13b14:	ldr	r5, [fp, #-48]	; 0xffffffd0
   13b18:	movcc	r1, #39	; 0x27
   13b1c:	strbcc	r1, [r7, r8]
   13b20:	add	r1, r8, #1
   13b24:	cmp	r1, r4
   13b28:	movcc	r2, #39	; 0x27
   13b2c:	strbcc	r2, [r7, r1]
   13b30:	add	r8, r8, #2
   13b34:	mov	r1, #0
   13b38:	str	r1, [fp, #-56]	; 0xffffffc8
   13b3c:	b	13624 <putchar_unlocked@plt+0x21f8>
   13b40:	ldr	r5, [fp, #-48]	; 0xffffffd0
   13b44:	b	13624 <putchar_unlocked@plt+0x21f8>
   13b48:	mov	r9, #0
   13b4c:	b	13b88 <putchar_unlocked@plt+0x275c>
   13b50:	mov	r9, #0
   13b54:	cmp	r7, lr
   13b58:	bcs	13b88 <putchar_unlocked@plt+0x275c>
   13b5c:	ldr	ip, [fp, #-84]	; 0xffffffac
   13b60:	ldr	r7, [sp, #44]	; 0x2c
   13b64:	ldr	r0, [sp, #20]
   13b68:	ldrb	r0, [r0, r7]
   13b6c:	cmp	r0, #0
   13b70:	beq	13b90 <putchar_unlocked@plt+0x2764>
   13b74:	add	r7, r7, #1
   13b78:	add	r0, r6, r7
   13b7c:	cmp	r0, lr
   13b80:	bcc	13b64 <putchar_unlocked@plt+0x2738>
   13b84:	b	13b90 <putchar_unlocked@plt+0x2764>
   13b88:	ldr	ip, [fp, #-84]	; 0xffffffac
   13b8c:	ldr	r7, [sp, #44]	; 0x2c
   13b90:	mov	r1, r7
   13b94:	ldr	r7, [sp, #80]	; 0x50
   13b98:	b	134c0 <putchar_unlocked@plt+0x2094>
   13b9c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   13ba0:	eor	r0, r1, #2
   13ba4:	orr	r0, r0, r8
   13ba8:	clz	r0, r0
   13bac:	lsr	r0, r0, #5
   13bb0:	ldr	r2, [fp, #-76]	; 0xffffffb4
   13bb4:	tst	r2, r0
   13bb8:	bne	13c78 <putchar_unlocked@plt+0x284c>
   13bbc:	cmp	r1, #2
   13bc0:	ldr	r0, [fp, #-80]	; 0xffffffb0
   13bc4:	movwne	r0, #1
   13bc8:	orr	r0, r2, r0
   13bcc:	tst	r0, #1
   13bd0:	ldreq	r0, [sp, #56]	; 0x38
   13bd4:	eoreq	r0, r0, #1
   13bd8:	tsteq	r0, #1
   13bdc:	bne	13c10 <putchar_unlocked@plt+0x27e4>
   13be0:	mov	r9, lr
   13be4:	tst	r5, #1
   13be8:	bne	13ce0 <putchar_unlocked@plt+0x28b4>
   13bec:	ldr	r0, [sp, #72]	; 0x48
   13bf0:	cmp	r0, #0
   13bf4:	beq	13c10 <putchar_unlocked@plt+0x27e4>
   13bf8:	mov	r5, #0
   13bfc:	cmp	r4, #0
   13c00:	ldr	r0, [sp, #84]	; 0x54
   13c04:	mov	sl, r2
   13c08:	ldr	r6, [sp, #72]	; 0x48
   13c0c:	beq	12da8 <putchar_unlocked@plt+0x197c>
   13c10:	ldr	r1, [sp, #92]	; 0x5c
   13c14:	clz	r0, r1
   13c18:	lsr	r0, r0, #5
   13c1c:	orr	r0, r0, r2
   13c20:	tst	r0, #1
   13c24:	bne	13c50 <putchar_unlocked@plt+0x2824>
   13c28:	ldrb	r0, [r1]
   13c2c:	cmp	r0, #0
   13c30:	beq	13c50 <putchar_unlocked@plt+0x2824>
   13c34:	add	r1, r1, #1
   13c38:	cmp	r8, r4
   13c3c:	strbcc	r0, [r7, r8]
   13c40:	add	r8, r8, #1
   13c44:	ldrb	r0, [r1], #1
   13c48:	cmp	r0, #0
   13c4c:	bne	13c38 <putchar_unlocked@plt+0x280c>
   13c50:	cmp	r8, r4
   13c54:	movcc	r0, #0
   13c58:	strbcc	r0, [r7, r8]
   13c5c:	b	13cd4 <putchar_unlocked@plt+0x28a8>
   13c60:	ldr	ip, [fp, #-84]	; 0xffffffac
   13c64:	mov	lr, r4
   13c68:	mov	r4, r5
   13c6c:	b	13c78 <putchar_unlocked@plt+0x284c>
   13c70:	ldr	r7, [sp, #80]	; 0x50
   13c74:	ldr	ip, [fp, #-84]	; 0xffffffac
   13c78:	mov	r0, #0
   13c7c:	ldr	r1, [fp, #12]
   13c80:	bic	r1, r1, #2
   13c84:	ldr	r2, [sp, #84]	; 0x54
   13c88:	tst	r2, #1
   13c8c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   13c90:	mov	r2, r3
   13c94:	movwne	r2, #4
   13c98:	cmp	r3, #2
   13c9c:	movne	r2, r3
   13ca0:	str	r2, [sp]
   13ca4:	str	r1, [sp, #4]
   13ca8:	str	r0, [sp, #8]
   13cac:	ldr	r0, [sp, #68]	; 0x44
   13cb0:	str	r0, [sp, #12]
   13cb4:	ldr	r0, [sp, #76]	; 0x4c
   13cb8:	str	r0, [sp, #16]
   13cbc:	mov	r0, r7
   13cc0:	mov	r1, r4
   13cc4:	mov	r2, ip
   13cc8:	mov	r3, lr
   13ccc:	bl	12d20 <putchar_unlocked@plt+0x18f4>
   13cd0:	mov	r8, r0
   13cd4:	mov	r0, r8
   13cd8:	sub	sp, fp, #28
   13cdc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13ce0:	mov	r0, #5
   13ce4:	str	r0, [sp]
   13ce8:	ldr	r0, [fp, #12]
   13cec:	str	r0, [sp, #4]
   13cf0:	ldr	r0, [fp, #16]
   13cf4:	str	r0, [sp, #8]
   13cf8:	ldr	r0, [sp, #68]	; 0x44
   13cfc:	str	r0, [sp, #12]
   13d00:	ldr	r0, [sp, #76]	; 0x4c
   13d04:	str	r0, [sp, #16]
   13d08:	mov	r0, r7
   13d0c:	ldr	r1, [sp, #72]	; 0x48
   13d10:	ldr	r2, [fp, #-84]	; 0xffffffac
   13d14:	mov	r3, r9
   13d18:	b	13ccc <putchar_unlocked@plt+0x28a0>
   13d1c:	bl	11414 <abort@plt>
   13d20:	mov	r3, r2
   13d24:	mov	r2, #0
   13d28:	b	13d2c <putchar_unlocked@plt+0x2900>
   13d2c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13d30:	add	fp, sp, #28
   13d34:	sub	sp, sp, #36	; 0x24
   13d38:	mov	r4, r2
   13d3c:	str	r2, [sp, #24]
   13d40:	mov	r5, r1
   13d44:	mov	r6, r0
   13d48:	str	r0, [sp, #20]
   13d4c:	movw	r8, #29176	; 0x71f8
   13d50:	movt	r8, #2
   13d54:	cmp	r3, #0
   13d58:	movne	r8, r3
   13d5c:	bl	11318 <__errno_location@plt>
   13d60:	str	r0, [sp, #28]
   13d64:	ldm	r8, {r3, r9}
   13d68:	ldr	r1, [r8, #40]	; 0x28
   13d6c:	ldr	r2, [r8, #44]	; 0x2c
   13d70:	ldr	r7, [r0]
   13d74:	str	r7, [sp, #32]
   13d78:	add	sl, r8, #8
   13d7c:	cmp	r4, #0
   13d80:	orreq	r9, r9, #1
   13d84:	stm	sp, {r3, r9, sl}
   13d88:	str	r1, [sp, #12]
   13d8c:	str	r2, [sp, #16]
   13d90:	mov	r0, #0
   13d94:	mov	r1, #0
   13d98:	mov	r2, r6
   13d9c:	mov	r3, r5
   13da0:	mov	r7, r5
   13da4:	bl	12d20 <putchar_unlocked@plt+0x18f4>
   13da8:	mov	r5, r0
   13dac:	add	r4, r0, #1
   13db0:	mov	r0, r4
   13db4:	bl	14ea4 <putchar_unlocked@plt+0x3a78>
   13db8:	mov	r6, r0
   13dbc:	ldr	r0, [r8]
   13dc0:	ldr	r1, [r8, #40]	; 0x28
   13dc4:	ldr	r2, [r8, #44]	; 0x2c
   13dc8:	stm	sp, {r0, r9, sl}
   13dcc:	str	r1, [sp, #12]
   13dd0:	str	r2, [sp, #16]
   13dd4:	mov	r0, r6
   13dd8:	mov	r1, r4
   13ddc:	ldr	r2, [sp, #20]
   13de0:	mov	r3, r7
   13de4:	bl	12d20 <putchar_unlocked@plt+0x18f4>
   13de8:	ldr	r0, [sp, #24]
   13dec:	ldr	r1, [sp, #32]
   13df0:	ldr	r2, [sp, #28]
   13df4:	str	r1, [r2]
   13df8:	cmp	r0, #0
   13dfc:	strne	r5, [r0]
   13e00:	mov	r0, r6
   13e04:	sub	sp, fp, #28
   13e08:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13e0c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13e10:	add	fp, sp, #24
   13e14:	movw	r8, #28968	; 0x7128
   13e18:	movt	r8, #2
   13e1c:	ldr	r4, [r8]
   13e20:	movw	r5, #28972	; 0x712c
   13e24:	movt	r5, #2
   13e28:	ldr	r0, [r5]
   13e2c:	cmp	r0, #2
   13e30:	blt	13e5c <putchar_unlocked@plt+0x2a30>
   13e34:	add	r7, r4, #12
   13e38:	mov	r6, #0
   13e3c:	ldr	r0, [r7, r6, lsl #3]
   13e40:	bl	128f4 <putchar_unlocked@plt+0x14c8>
   13e44:	add	r0, r6, #1
   13e48:	ldr	r1, [r5]
   13e4c:	add	r2, r6, #2
   13e50:	cmp	r2, r1
   13e54:	mov	r6, r0
   13e58:	blt	13e3c <putchar_unlocked@plt+0x2a10>
   13e5c:	ldr	r0, [r4, #4]
   13e60:	movw	r7, #29224	; 0x7228
   13e64:	movt	r7, #2
   13e68:	cmp	r0, r7
   13e6c:	beq	13e84 <putchar_unlocked@plt+0x2a58>
   13e70:	bl	128f4 <putchar_unlocked@plt+0x14c8>
   13e74:	movw	r0, #28976	; 0x7130
   13e78:	movt	r0, #2
   13e7c:	mov	r6, #256	; 0x100
   13e80:	strd	r6, [r0]
   13e84:	movw	r6, #28976	; 0x7130
   13e88:	movt	r6, #2
   13e8c:	cmp	r4, r6
   13e90:	beq	13ea0 <putchar_unlocked@plt+0x2a74>
   13e94:	mov	r0, r4
   13e98:	bl	128f4 <putchar_unlocked@plt+0x14c8>
   13e9c:	str	r6, [r8]
   13ea0:	mov	r0, #1
   13ea4:	str	r0, [r5]
   13ea8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13eac:	movw	r3, #29176	; 0x71f8
   13eb0:	movt	r3, #2
   13eb4:	mvn	r2, #0
   13eb8:	b	13ebc <putchar_unlocked@plt+0x2a90>
   13ebc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13ec0:	add	fp, sp, #28
   13ec4:	sub	sp, sp, #44	; 0x2c
   13ec8:	mov	r7, r3
   13ecc:	str	r2, [sp, #36]	; 0x24
   13ed0:	str	r1, [sp, #32]
   13ed4:	mov	r5, r0
   13ed8:	bl	11318 <__errno_location@plt>
   13edc:	cmp	r5, #0
   13ee0:	blt	1404c <putchar_unlocked@plt+0x2c20>
   13ee4:	cmn	r5, #-2147483647	; 0x80000001
   13ee8:	beq	1404c <putchar_unlocked@plt+0x2c20>
   13eec:	movw	r4, #28968	; 0x7128
   13ef0:	movt	r4, #2
   13ef4:	ldr	r6, [r4]
   13ef8:	str	r0, [sp, #28]
   13efc:	ldr	r0, [r0]
   13f00:	str	r0, [sp, #24]
   13f04:	movw	r8, #28972	; 0x712c
   13f08:	movt	r8, #2
   13f0c:	ldr	r1, [r8]
   13f10:	cmp	r1, r5
   13f14:	ble	13f20 <putchar_unlocked@plt+0x2af4>
   13f18:	mov	sl, r6
   13f1c:	b	13f88 <putchar_unlocked@plt+0x2b5c>
   13f20:	str	r1, [fp, #-32]	; 0xffffffe0
   13f24:	mov	r0, #8
   13f28:	str	r0, [sp]
   13f2c:	movw	r9, #28976	; 0x7130
   13f30:	movt	r9, #2
   13f34:	subs	r0, r6, r9
   13f38:	movne	r0, r6
   13f3c:	add	r2, r5, #1
   13f40:	sub	r2, r2, r1
   13f44:	sub	r1, fp, #32
   13f48:	mvn	r3, #-2147483648	; 0x80000000
   13f4c:	bl	14f8c <putchar_unlocked@plt+0x3b60>
   13f50:	mov	sl, r0
   13f54:	str	r0, [r4]
   13f58:	cmp	r6, r9
   13f5c:	ldrdeq	r0, [r9]
   13f60:	stmeq	sl, {r0, r1}
   13f64:	ldr	r1, [r8]
   13f68:	add	r0, sl, r1, lsl #3
   13f6c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13f70:	sub	r1, r2, r1
   13f74:	lsl	r2, r1, #3
   13f78:	mov	r1, #0
   13f7c:	bl	1133c <memset@plt>
   13f80:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13f84:	str	r0, [r8]
   13f88:	mov	r9, sl
   13f8c:	ldr	r6, [r9, r5, lsl #3]!
   13f90:	ldr	r4, [r9, #4]!
   13f94:	ldm	r7, {r0, r1}
   13f98:	ldr	r2, [r7, #40]	; 0x28
   13f9c:	ldr	r3, [r7, #44]	; 0x2c
   13fa0:	orr	r8, r1, #1
   13fa4:	add	r1, r7, #8
   13fa8:	stm	sp, {r0, r8}
   13fac:	str	r1, [sp, #20]
   13fb0:	add	r0, sp, #8
   13fb4:	stm	r0, {r1, r2, r3}
   13fb8:	mov	r0, r4
   13fbc:	mov	r1, r6
   13fc0:	ldr	r2, [sp, #32]
   13fc4:	ldr	r3, [sp, #36]	; 0x24
   13fc8:	bl	12d20 <putchar_unlocked@plt+0x18f4>
   13fcc:	cmp	r6, r0
   13fd0:	bhi	14034 <putchar_unlocked@plt+0x2c08>
   13fd4:	add	r6, r0, #1
   13fd8:	str	r6, [sl, r5, lsl #3]
   13fdc:	movw	r0, #29224	; 0x7228
   13fe0:	movt	r0, #2
   13fe4:	cmp	r4, r0
   13fe8:	beq	13ff4 <putchar_unlocked@plt+0x2bc8>
   13fec:	mov	r0, r4
   13ff0:	bl	128f4 <putchar_unlocked@plt+0x14c8>
   13ff4:	mov	r0, r6
   13ff8:	bl	14ea4 <putchar_unlocked@plt+0x3a78>
   13ffc:	mov	r4, r0
   14000:	str	r0, [r9]
   14004:	ldr	r0, [r7]
   14008:	ldr	r1, [r7, #40]	; 0x28
   1400c:	ldr	r2, [r7, #44]	; 0x2c
   14010:	stm	sp, {r0, r8}
   14014:	ldr	r0, [sp, #20]
   14018:	add	r3, sp, #8
   1401c:	stm	r3, {r0, r1, r2}
   14020:	mov	r0, r4
   14024:	mov	r1, r6
   14028:	ldr	r2, [sp, #32]
   1402c:	ldr	r3, [sp, #36]	; 0x24
   14030:	bl	12d20 <putchar_unlocked@plt+0x18f4>
   14034:	ldr	r0, [sp, #28]
   14038:	ldr	r1, [sp, #24]
   1403c:	str	r1, [r0]
   14040:	mov	r0, r4
   14044:	sub	sp, fp, #28
   14048:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1404c:	bl	11414 <abort@plt>
   14050:	movw	r3, #29176	; 0x71f8
   14054:	movt	r3, #2
   14058:	b	13ebc <putchar_unlocked@plt+0x2a90>
   1405c:	mov	r1, r0
   14060:	mov	r0, #0
   14064:	b	13eac <putchar_unlocked@plt+0x2a80>
   14068:	mov	r2, r1
   1406c:	mov	r1, r0
   14070:	mov	r0, #0
   14074:	b	14050 <putchar_unlocked@plt+0x2c24>
   14078:	push	{r4, r5, r6, sl, fp, lr}
   1407c:	add	fp, sp, #16
   14080:	sub	sp, sp, #48	; 0x30
   14084:	mov	r4, r2
   14088:	mov	r5, r0
   1408c:	mov	r6, sp
   14090:	mov	r0, r6
   14094:	bl	140b4 <putchar_unlocked@plt+0x2c88>
   14098:	mov	r0, r5
   1409c:	mov	r1, r4
   140a0:	mvn	r2, #0
   140a4:	mov	r3, r6
   140a8:	bl	13ebc <putchar_unlocked@plt+0x2a90>
   140ac:	sub	sp, fp, #16
   140b0:	pop	{r4, r5, r6, sl, fp, pc}
   140b4:	vmov.i32	q8, #0	; 0x00000000
   140b8:	mov	r2, #32
   140bc:	mov	r3, r0
   140c0:	vst1.32	{d16-d17}, [r3], r2
   140c4:	vst1.32	{d16-d17}, [r3]
   140c8:	add	r2, r0, #16
   140cc:	vst1.32	{d16-d17}, [r2]
   140d0:	cmp	r1, #10
   140d4:	strne	r1, [r0]
   140d8:	bxne	lr
   140dc:	push	{fp, lr}
   140e0:	mov	fp, sp
   140e4:	bl	11414 <abort@plt>
   140e8:	push	{r4, r5, r6, r7, fp, lr}
   140ec:	add	fp, sp, #16
   140f0:	sub	sp, sp, #48	; 0x30
   140f4:	mov	r4, r3
   140f8:	mov	r5, r2
   140fc:	mov	r6, r0
   14100:	mov	r7, sp
   14104:	mov	r0, r7
   14108:	bl	140b4 <putchar_unlocked@plt+0x2c88>
   1410c:	mov	r0, r6
   14110:	mov	r1, r5
   14114:	mov	r2, r4
   14118:	mov	r3, r7
   1411c:	bl	13ebc <putchar_unlocked@plt+0x2a90>
   14120:	sub	sp, fp, #16
   14124:	pop	{r4, r5, r6, r7, fp, pc}
   14128:	mov	r2, r1
   1412c:	mov	r1, r0
   14130:	mov	r0, #0
   14134:	b	14078 <putchar_unlocked@plt+0x2c4c>
   14138:	mov	r3, r2
   1413c:	mov	r2, r1
   14140:	mov	r1, r0
   14144:	mov	r0, #0
   14148:	b	140e8 <putchar_unlocked@plt+0x2cbc>
   1414c:	push	{r4, r5, r6, sl, fp, lr}
   14150:	add	fp, sp, #16
   14154:	sub	sp, sp, #48	; 0x30
   14158:	mov	r4, r1
   1415c:	mov	r5, r0
   14160:	mov	r0, #32
   14164:	movw	r1, #29176	; 0x71f8
   14168:	movt	r1, #2
   1416c:	add	r3, r1, #16
   14170:	vld1.64	{d16-d17}, [r1], r0
   14174:	mov	r6, sp
   14178:	vld1.64	{d18-d19}, [r3]
   1417c:	add	r3, r6, #16
   14180:	vld1.64	{d20-d21}, [r1]
   14184:	vst1.64	{d18-d19}, [r3]
   14188:	mov	r1, r6
   1418c:	vst1.64	{d16-d17}, [r1], r0
   14190:	vst1.64	{d20-d21}, [r1]
   14194:	mov	r0, r6
   14198:	mov	r1, r2
   1419c:	mov	r2, #1
   141a0:	bl	12c14 <putchar_unlocked@plt+0x17e8>
   141a4:	mov	r0, #0
   141a8:	mov	r1, r5
   141ac:	mov	r2, r4
   141b0:	mov	r3, r6
   141b4:	bl	13ebc <putchar_unlocked@plt+0x2a90>
   141b8:	sub	sp, fp, #16
   141bc:	pop	{r4, r5, r6, sl, fp, pc}
   141c0:	mov	r2, r1
   141c4:	mvn	r1, #0
   141c8:	b	1414c <putchar_unlocked@plt+0x2d20>
   141cc:	mov	r1, #58	; 0x3a
   141d0:	b	141c0 <putchar_unlocked@plt+0x2d94>
   141d4:	mov	r2, #58	; 0x3a
   141d8:	b	1414c <putchar_unlocked@plt+0x2d20>
   141dc:	push	{r4, r5, r6, sl, fp, lr}
   141e0:	add	fp, sp, #16
   141e4:	sub	sp, sp, #48	; 0x30
   141e8:	mov	r4, r2
   141ec:	mov	r5, r0
   141f0:	mov	r6, sp
   141f4:	mov	r0, r6
   141f8:	bl	140b4 <putchar_unlocked@plt+0x2c88>
   141fc:	mov	r0, r6
   14200:	mov	r1, #58	; 0x3a
   14204:	mov	r2, #1
   14208:	bl	12c14 <putchar_unlocked@plt+0x17e8>
   1420c:	mov	r0, r5
   14210:	mov	r1, r4
   14214:	mvn	r2, #0
   14218:	mov	r3, r6
   1421c:	bl	13ebc <putchar_unlocked@plt+0x2a90>
   14220:	sub	sp, fp, #16
   14224:	pop	{r4, r5, r6, sl, fp, pc}
   14228:	push	{fp, lr}
   1422c:	mov	fp, sp
   14230:	sub	sp, sp, #8
   14234:	mvn	ip, #0
   14238:	str	ip, [sp]
   1423c:	bl	14248 <putchar_unlocked@plt+0x2e1c>
   14240:	mov	sp, fp
   14244:	pop	{fp, pc}
   14248:	push	{r4, r5, r6, r7, fp, lr}
   1424c:	add	fp, sp, #16
   14250:	sub	sp, sp, #48	; 0x30
   14254:	mov	r7, r3
   14258:	mov	r5, r0
   1425c:	mov	r0, #32
   14260:	movw	r3, #29176	; 0x71f8
   14264:	movt	r3, #2
   14268:	add	r4, r3, #16
   1426c:	vld1.64	{d16-d17}, [r3], r0
   14270:	mov	r6, sp
   14274:	vld1.64	{d18-d19}, [r4]
   14278:	add	r4, r6, #16
   1427c:	vld1.64	{d20-d21}, [r3]
   14280:	vst1.64	{d18-d19}, [r4]
   14284:	mov	r3, r6
   14288:	vst1.64	{d16-d17}, [r3], r0
   1428c:	vst1.64	{d20-d21}, [r3]
   14290:	mov	r0, r6
   14294:	bl	12c6c <putchar_unlocked@plt+0x1840>
   14298:	ldr	r2, [fp, #8]
   1429c:	mov	r0, r5
   142a0:	mov	r1, r7
   142a4:	mov	r3, r6
   142a8:	bl	13ebc <putchar_unlocked@plt+0x2a90>
   142ac:	sub	sp, fp, #16
   142b0:	pop	{r4, r5, r6, r7, fp, pc}
   142b4:	mov	r3, r2
   142b8:	mov	r2, r1
   142bc:	mov	r1, r0
   142c0:	mov	r0, #0
   142c4:	b	14228 <putchar_unlocked@plt+0x2dfc>
   142c8:	push	{fp, lr}
   142cc:	mov	fp, sp
   142d0:	sub	sp, sp, #8
   142d4:	mov	ip, r2
   142d8:	mov	r2, r1
   142dc:	mov	r1, r0
   142e0:	str	r3, [sp]
   142e4:	mov	r0, #0
   142e8:	mov	r3, ip
   142ec:	bl	14248 <putchar_unlocked@plt+0x2e1c>
   142f0:	mov	sp, fp
   142f4:	pop	{fp, pc}
   142f8:	movw	r3, #28984	; 0x7138
   142fc:	movt	r3, #2
   14300:	b	13ebc <putchar_unlocked@plt+0x2a90>
   14304:	mov	r2, r1
   14308:	mov	r1, r0
   1430c:	mov	r0, #0
   14310:	b	142f8 <putchar_unlocked@plt+0x2ecc>
   14314:	mvn	r2, #0
   14318:	b	142f8 <putchar_unlocked@plt+0x2ecc>
   1431c:	mov	r1, r0
   14320:	mov	r0, #0
   14324:	b	14314 <putchar_unlocked@plt+0x2ee8>
   14328:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1432c:	add	fp, sp, #24
   14330:	sub	sp, sp, #16
   14334:	mov	r4, r1
   14338:	mov	r5, r0
   1433c:	mov	r7, #0
   14340:	mov	r0, #0
   14344:	mov	r1, r5
   14348:	mov	r2, #5
   1434c:	bl	111e0 <dcgettext@plt>
   14350:	cmp	r0, r5
   14354:	beq	14360 <putchar_unlocked@plt+0x2f34>
   14358:	sub	sp, fp, #24
   1435c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14360:	bl	15730 <putchar_unlocked@plt+0x4304>
   14364:	mov	r6, r0
   14368:	mov	r8, #56	; 0x38
   1436c:	mov	r0, #45	; 0x2d
   14370:	stm	sp, {r0, r8}
   14374:	str	r7, [sp, #8]
   14378:	str	r7, [sp, #12]
   1437c:	mov	r0, r6
   14380:	mov	r1, #85	; 0x55
   14384:	mov	r2, #84	; 0x54
   14388:	mov	r3, #70	; 0x46
   1438c:	bl	14424 <putchar_unlocked@plt+0x2ff8>
   14390:	cmp	r0, #0
   14394:	beq	143b0 <putchar_unlocked@plt+0x2f84>
   14398:	ldrb	r1, [r5]
   1439c:	movw	r2, #25186	; 0x6262
   143a0:	movt	r2, #1
   143a4:	movw	r0, #25190	; 0x6266
   143a8:	movt	r0, #1
   143ac:	b	143f4 <putchar_unlocked@plt+0x2fc8>
   143b0:	mov	r0, #48	; 0x30
   143b4:	mov	r1, #51	; 0x33
   143b8:	str	r8, [sp]
   143bc:	stmib	sp, {r0, r1}
   143c0:	str	r0, [sp, #12]
   143c4:	mov	r0, r6
   143c8:	mov	r1, #71	; 0x47
   143cc:	mov	r2, #66	; 0x42
   143d0:	mov	r3, #49	; 0x31
   143d4:	bl	14424 <putchar_unlocked@plt+0x2ff8>
   143d8:	cmp	r0, #0
   143dc:	beq	14404 <putchar_unlocked@plt+0x2fd8>
   143e0:	ldrb	r1, [r5]
   143e4:	movw	r2, #25194	; 0x626a
   143e8:	movt	r2, #1
   143ec:	movw	r0, #25198	; 0x626e
   143f0:	movt	r0, #1
   143f4:	cmp	r1, #96	; 0x60
   143f8:	moveq	r0, r2
   143fc:	sub	sp, fp, #24
   14400:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14404:	movw	r1, #25180	; 0x625c
   14408:	movt	r1, #1
   1440c:	movw	r0, #25184	; 0x6260
   14410:	movt	r0, #1
   14414:	cmp	r4, #9
   14418:	moveq	r0, r1
   1441c:	sub	sp, fp, #24
   14420:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14424:	push	{r4, r5, r6, r7, fp, lr}
   14428:	add	fp, sp, #16
   1442c:	sub	sp, sp, #16
   14430:	mov	r4, r3
   14434:	mov	r5, r2
   14438:	mov	r7, r1
   1443c:	mov	r6, r0
   14440:	mov	r0, r1
   14444:	bl	155e8 <putchar_unlocked@plt+0x41bc>
   14448:	ldrb	r1, [r6]
   1444c:	cmp	r0, #0
   14450:	andne	r1, r1, #223	; 0xdf
   14454:	mov	r0, #0
   14458:	cmp	r1, r7
   1445c:	bne	1449c <putchar_unlocked@plt+0x3070>
   14460:	cmp	r7, #0
   14464:	moveq	r0, #1
   14468:	subeq	sp, fp, #16
   1446c:	popeq	{r4, r5, r6, r7, fp, pc}
   14470:	ldr	r0, [fp, #20]
   14474:	ldr	r1, [fp, #16]
   14478:	ldr	r2, [fp, #12]
   1447c:	ldr	r3, [fp, #8]
   14480:	str	r2, [sp]
   14484:	str	r1, [sp, #4]
   14488:	str	r0, [sp, #8]
   1448c:	mov	r0, r6
   14490:	mov	r1, r5
   14494:	mov	r2, r4
   14498:	bl	144a4 <putchar_unlocked@plt+0x3078>
   1449c:	sub	sp, fp, #16
   144a0:	pop	{r4, r5, r6, r7, fp, pc}
   144a4:	push	{r4, r5, r6, r7, fp, lr}
   144a8:	add	fp, sp, #16
   144ac:	sub	sp, sp, #8
   144b0:	mov	r4, r3
   144b4:	mov	r5, r2
   144b8:	mov	r7, r1
   144bc:	mov	r6, r0
   144c0:	mov	r0, r1
   144c4:	bl	155e8 <putchar_unlocked@plt+0x41bc>
   144c8:	ldrb	r1, [r6, #1]
   144cc:	cmp	r0, #0
   144d0:	andne	r1, r1, #223	; 0xdf
   144d4:	mov	r0, #0
   144d8:	cmp	r1, r7
   144dc:	bne	14514 <putchar_unlocked@plt+0x30e8>
   144e0:	cmp	r7, #0
   144e4:	moveq	r0, #1
   144e8:	subeq	sp, fp, #16
   144ec:	popeq	{r4, r5, r6, r7, fp, pc}
   144f0:	ldr	r0, [fp, #16]
   144f4:	ldr	r1, [fp, #12]
   144f8:	ldr	r3, [fp, #8]
   144fc:	str	r1, [sp]
   14500:	str	r0, [sp, #4]
   14504:	mov	r0, r6
   14508:	mov	r1, r5
   1450c:	mov	r2, r4
   14510:	bl	1451c <putchar_unlocked@plt+0x30f0>
   14514:	sub	sp, fp, #16
   14518:	pop	{r4, r5, r6, r7, fp, pc}
   1451c:	push	{r4, r5, r6, r7, fp, lr}
   14520:	add	fp, sp, #16
   14524:	sub	sp, sp, #8
   14528:	mov	r4, r3
   1452c:	mov	r5, r2
   14530:	mov	r7, r1
   14534:	mov	r6, r0
   14538:	mov	r0, r1
   1453c:	bl	155e8 <putchar_unlocked@plt+0x41bc>
   14540:	ldrb	r1, [r6, #2]
   14544:	cmp	r0, #0
   14548:	andne	r1, r1, #223	; 0xdf
   1454c:	mov	r0, #0
   14550:	cmp	r1, r7
   14554:	bne	14584 <putchar_unlocked@plt+0x3158>
   14558:	cmp	r7, #0
   1455c:	moveq	r0, #1
   14560:	subeq	sp, fp, #16
   14564:	popeq	{r4, r5, r6, r7, fp, pc}
   14568:	ldr	r0, [fp, #12]
   1456c:	ldr	r3, [fp, #8]
   14570:	str	r0, [sp]
   14574:	mov	r0, r6
   14578:	mov	r1, r5
   1457c:	mov	r2, r4
   14580:	bl	1458c <putchar_unlocked@plt+0x3160>
   14584:	sub	sp, fp, #16
   14588:	pop	{r4, r5, r6, r7, fp, pc}
   1458c:	push	{r4, r5, r6, r7, fp, lr}
   14590:	add	fp, sp, #16
   14594:	mov	r4, r3
   14598:	mov	r5, r2
   1459c:	mov	r7, r1
   145a0:	mov	r6, r0
   145a4:	mov	r0, r1
   145a8:	bl	155e8 <putchar_unlocked@plt+0x41bc>
   145ac:	ldrb	r1, [r6, #3]
   145b0:	ldr	r3, [fp, #8]
   145b4:	cmp	r0, #0
   145b8:	andne	r1, r1, #223	; 0xdf
   145bc:	mov	r0, #0
   145c0:	cmp	r1, r7
   145c4:	popne	{r4, r5, r6, r7, fp, pc}
   145c8:	cmp	r7, #0
   145cc:	beq	145e4 <putchar_unlocked@plt+0x31b8>
   145d0:	mov	r0, r6
   145d4:	mov	r1, r5
   145d8:	mov	r2, r4
   145dc:	pop	{r4, r5, r6, r7, fp, lr}
   145e0:	b	145ec <putchar_unlocked@plt+0x31c0>
   145e4:	mov	r0, #1
   145e8:	pop	{r4, r5, r6, r7, fp, pc}
   145ec:	push	{r4, r5, r6, r7, fp, lr}
   145f0:	add	fp, sp, #16
   145f4:	mov	r4, r3
   145f8:	mov	r5, r2
   145fc:	mov	r7, r1
   14600:	mov	r6, r0
   14604:	mov	r0, r1
   14608:	bl	155e8 <putchar_unlocked@plt+0x41bc>
   1460c:	ldrb	r1, [r6, #4]
   14610:	cmp	r0, #0
   14614:	andne	r1, r1, #223	; 0xdf
   14618:	mov	r0, #0
   1461c:	cmp	r1, r7
   14620:	popne	{r4, r5, r6, r7, fp, pc}
   14624:	cmp	r7, #0
   14628:	beq	14640 <putchar_unlocked@plt+0x3214>
   1462c:	mov	r0, r6
   14630:	mov	r1, r5
   14634:	mov	r2, r4
   14638:	pop	{r4, r5, r6, r7, fp, lr}
   1463c:	b	14648 <putchar_unlocked@plt+0x321c>
   14640:	mov	r0, #1
   14644:	pop	{r4, r5, r6, r7, fp, pc}
   14648:	push	{r4, r5, r6, sl, fp, lr}
   1464c:	add	fp, sp, #16
   14650:	mov	r4, r2
   14654:	mov	r6, r1
   14658:	mov	r5, r0
   1465c:	mov	r0, r1
   14660:	bl	155e8 <putchar_unlocked@plt+0x41bc>
   14664:	ldrb	r1, [r5, #5]
   14668:	cmp	r0, #0
   1466c:	andne	r1, r1, #223	; 0xdf
   14670:	mov	r0, #0
   14674:	cmp	r1, r6
   14678:	popne	{r4, r5, r6, sl, fp, pc}
   1467c:	cmp	r6, #0
   14680:	beq	14694 <putchar_unlocked@plt+0x3268>
   14684:	mov	r0, r5
   14688:	mov	r1, r4
   1468c:	pop	{r4, r5, r6, sl, fp, lr}
   14690:	b	1469c <putchar_unlocked@plt+0x3270>
   14694:	mov	r0, #1
   14698:	pop	{r4, r5, r6, sl, fp, pc}
   1469c:	push	{r4, r5, fp, lr}
   146a0:	add	fp, sp, #8
   146a4:	mov	r5, r1
   146a8:	mov	r4, r0
   146ac:	mov	r0, r1
   146b0:	bl	155e8 <putchar_unlocked@plt+0x41bc>
   146b4:	ldrb	r1, [r4, #6]
   146b8:	cmp	r0, #0
   146bc:	andne	r1, r1, #223	; 0xdf
   146c0:	mov	r0, #0
   146c4:	cmp	r1, r5
   146c8:	popne	{r4, r5, fp, pc}
   146cc:	cmp	r5, #0
   146d0:	beq	146e0 <putchar_unlocked@plt+0x32b4>
   146d4:	mov	r0, r4
   146d8:	pop	{r4, r5, fp, lr}
   146dc:	b	146e8 <putchar_unlocked@plt+0x32bc>
   146e0:	mov	r0, #1
   146e4:	pop	{r4, r5, fp, pc}
   146e8:	push	{r4, sl, fp, lr}
   146ec:	add	fp, sp, #8
   146f0:	mov	r4, r0
   146f4:	mov	r0, #0
   146f8:	bl	155e8 <putchar_unlocked@plt+0x41bc>
   146fc:	ldrb	r1, [r4, #7]
   14700:	cmp	r0, #0
   14704:	beq	1471c <putchar_unlocked@plt+0x32f0>
   14708:	tst	r1, #223	; 0xdf
   1470c:	moveq	r0, #1
   14710:	popeq	{r4, sl, fp, pc}
   14714:	mov	r0, #0
   14718:	pop	{r4, sl, fp, pc}
   1471c:	cmp	r1, #0
   14720:	moveq	r0, #1
   14724:	popeq	{r4, sl, fp, pc}
   14728:	mov	r0, #0
   1472c:	pop	{r4, sl, fp, pc}
   14730:	push	{r4, r5, fp, lr}
   14734:	add	fp, sp, #8
   14738:	mov	r5, r0
   1473c:	mov	r0, #33	; 0x21
   14740:	bl	14e68 <putchar_unlocked@plt+0x3a3c>
   14744:	mov	r4, r0
   14748:	add	r1, r5, #44	; 0x2c
   1474c:	mov	r2, #32
   14750:	bl	11348 <strncpy@plt>
   14754:	mov	r5, #0
   14758:	strb	r5, [r4, #32]
   1475c:	mov	r0, r4
   14760:	bl	11300 <strlen@plt>
   14764:	cmp	r0, #1
   14768:	blt	14790 <putchar_unlocked@plt+0x3364>
   1476c:	add	r1, r4, r0
   14770:	mov	r0, r1
   14774:	ldrb	r2, [r0, #-1]!
   14778:	cmp	r2, #32
   1477c:	bne	14790 <putchar_unlocked@plt+0x3364>
   14780:	strb	r5, [r1, #-1]
   14784:	cmp	r4, r0
   14788:	mov	r1, r0
   1478c:	bcc	14774 <putchar_unlocked@plt+0x3348>
   14790:	mov	r0, r4
   14794:	pop	{r4, r5, fp, pc}
   14798:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1479c:	add	fp, sp, #28
   147a0:	sub	sp, sp, #12
   147a4:	mov	r6, r3
   147a8:	str	r2, [sp, #4]
   147ac:	mov	r9, r1
   147b0:	mov	r7, #0
   147b4:	str	r7, [sp, #8]
   147b8:	bl	11168 <utmpxname@plt>
   147bc:	bl	111f8 <setutxent@plt>
   147c0:	bl	11420 <getutxent@plt>
   147c4:	cmp	r0, #0
   147c8:	beq	14848 <putchar_unlocked@plt+0x341c>
   147cc:	mov	r5, r0
   147d0:	mov	r4, #0
   147d4:	mov	r8, #384	; 0x180
   147d8:	add	sl, sp, #8
   147dc:	mov	r7, #0
   147e0:	mov	r0, r5
   147e4:	mov	r1, r6
   147e8:	bl	14868 <putchar_unlocked@plt+0x343c>
   147ec:	cmp	r0, #0
   147f0:	beq	14834 <putchar_unlocked@plt+0x3408>
   147f4:	ldr	r0, [sp, #8]
   147f8:	cmp	r4, r0
   147fc:	bne	1481c <putchar_unlocked@plt+0x33f0>
   14800:	str	r8, [sp]
   14804:	mov	r0, r7
   14808:	mov	r1, sl
   1480c:	mov	r2, #1
   14810:	mvn	r3, #0
   14814:	bl	14f8c <putchar_unlocked@plt+0x3b60>
   14818:	mov	r7, r0
   1481c:	add	r0, r4, r4, lsl #1
   14820:	add	r0, r7, r0, lsl #7
   14824:	mov	r1, r5
   14828:	mov	r2, #384	; 0x180
   1482c:	bl	11198 <memcpy@plt>
   14830:	add	r4, r4, #1
   14834:	bl	11420 <getutxent@plt>
   14838:	mov	r5, r0
   1483c:	cmp	r0, #0
   14840:	bne	147e0 <putchar_unlocked@plt+0x33b4>
   14844:	b	1484c <putchar_unlocked@plt+0x3420>
   14848:	mov	r4, #0
   1484c:	bl	11390 <endutxent@plt>
   14850:	str	r4, [r9]
   14854:	ldr	r0, [sp, #4]
   14858:	str	r7, [r0]
   1485c:	mov	r0, #0
   14860:	sub	sp, fp, #28
   14864:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14868:	push	{r4, sl, fp, lr}
   1486c:	add	fp, sp, #8
   14870:	ldrb	r2, [r0, #44]	; 0x2c
   14874:	mov	r4, #0
   14878:	cmp	r2, #0
   1487c:	mov	r2, #0
   14880:	ldrhne	r2, [r0]
   14884:	subne	r2, r2, #7
   14888:	clzne	r2, r2
   1488c:	lsrne	r2, r2, #5
   14890:	tst	r1, #2
   14894:	beq	148a8 <putchar_unlocked@plt+0x347c>
   14898:	cmp	r2, #0
   1489c:	bne	148a8 <putchar_unlocked@plt+0x347c>
   148a0:	mov	r0, r4
   148a4:	pop	{r4, sl, fp, pc}
   148a8:	tst	r1, #1
   148ac:	beq	148d8 <putchar_unlocked@plt+0x34ac>
   148b0:	eors	r1, r2, #1
   148b4:	bne	148d8 <putchar_unlocked@plt+0x34ac>
   148b8:	ldr	r0, [r0, #4]
   148bc:	cmp	r0, #1
   148c0:	blt	148d8 <putchar_unlocked@plt+0x34ac>
   148c4:	mov	r4, #0
   148c8:	mov	r1, #0
   148cc:	bl	112dc <kill@plt>
   148d0:	cmn	r0, #1
   148d4:	ble	148e4 <putchar_unlocked@plt+0x34b8>
   148d8:	mov	r4, #1
   148dc:	mov	r0, r4
   148e0:	pop	{r4, sl, fp, pc}
   148e4:	bl	11318 <__errno_location@plt>
   148e8:	ldr	r0, [r0]
   148ec:	cmp	r0, #3
   148f0:	movne	r4, #1
   148f4:	mov	r0, r4
   148f8:	pop	{r4, sl, fp, pc}
   148fc:	b	14900 <putchar_unlocked@plt+0x34d4>
   14900:	push	{r4, r5, r6, r7, fp, lr}
   14904:	add	fp, sp, #16
   14908:	mov	r6, r2
   1490c:	mov	r4, r1
   14910:	bl	1499c <putchar_unlocked@plt+0x3570>
   14914:	cmp	r0, #0
   14918:	beq	14948 <putchar_unlocked@plt+0x351c>
   1491c:	mov	r7, r0
   14920:	bl	11300 <strlen@plt>
   14924:	cmp	r0, r6
   14928:	bcs	14968 <putchar_unlocked@plt+0x353c>
   1492c:	add	r2, r0, #1
   14930:	mov	r0, r4
   14934:	mov	r1, r7
   14938:	bl	11198 <memcpy@plt>
   1493c:	mov	r5, #0
   14940:	mov	r0, r5
   14944:	pop	{r4, r5, r6, r7, fp, pc}
   14948:	mov	r5, #22
   1494c:	cmp	r6, #0
   14950:	movne	r0, #0
   14954:	strbne	r0, [r4]
   14958:	movne	r0, r5
   1495c:	popne	{r4, r5, r6, r7, fp, pc}
   14960:	mov	r0, r5
   14964:	pop	{r4, r5, r6, r7, fp, pc}
   14968:	mov	r5, #34	; 0x22
   1496c:	cmp	r6, #0
   14970:	beq	14990 <putchar_unlocked@plt+0x3564>
   14974:	sub	r6, r6, #1
   14978:	mov	r0, r4
   1497c:	mov	r1, r7
   14980:	mov	r2, r6
   14984:	bl	11198 <memcpy@plt>
   14988:	mov	r0, #0
   1498c:	strb	r0, [r4, r6]
   14990:	mov	r0, r5
   14994:	pop	{r4, r5, r6, r7, fp, pc}
   14998:	b	1499c <putchar_unlocked@plt+0x3570>
   1499c:	mov	r1, #0
   149a0:	b	1139c <setlocale@plt>
   149a4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   149a8:	add	fp, sp, #24
   149ac:	sub	sp, sp, #32
   149b0:	mov	r4, r2
   149b4:	mov	r8, r0
   149b8:	ldr	r6, [fp, #12]
   149bc:	ldr	r7, [fp, #8]
   149c0:	cmp	r1, #0
   149c4:	beq	149ec <putchar_unlocked@plt+0x35c0>
   149c8:	mov	r5, r1
   149cc:	str	r4, [sp]
   149d0:	str	r3, [sp, #4]
   149d4:	movw	r2, #25288	; 0x62c8
   149d8:	movt	r2, #1
   149dc:	mov	r0, r8
   149e0:	mov	r1, #1
   149e4:	mov	r3, r5
   149e8:	b	14a04 <putchar_unlocked@plt+0x35d8>
   149ec:	str	r3, [sp]
   149f0:	movw	r2, #25300	; 0x62d4
   149f4:	movt	r2, #1
   149f8:	mov	r0, r8
   149fc:	mov	r1, #1
   14a00:	mov	r3, r4
   14a04:	bl	1136c <__fprintf_chk@plt>
   14a08:	movw	r1, #25307	; 0x62db
   14a0c:	movt	r1, #1
   14a10:	mov	r0, #0
   14a14:	mov	r2, #5
   14a18:	bl	111e0 <dcgettext@plt>
   14a1c:	mov	r3, r0
   14a20:	movw	r0, #2022	; 0x7e6
   14a24:	str	r0, [sp]
   14a28:	movw	r2, #26025	; 0x65a9
   14a2c:	movt	r2, #1
   14a30:	mov	r0, r8
   14a34:	mov	r1, #1
   14a38:	bl	1136c <__fprintf_chk@plt>
   14a3c:	movw	r4, #24595	; 0x6013
   14a40:	movt	r4, #1
   14a44:	mov	r0, r4
   14a48:	mov	r1, r8
   14a4c:	bl	1112c <fputs_unlocked@plt>
   14a50:	movw	r1, #25311	; 0x62df
   14a54:	movt	r1, #1
   14a58:	mov	r0, #0
   14a5c:	mov	r2, #5
   14a60:	bl	111e0 <dcgettext@plt>
   14a64:	mov	r2, r0
   14a68:	movw	r3, #25482	; 0x638a
   14a6c:	movt	r3, #1
   14a70:	mov	r0, r8
   14a74:	mov	r1, #1
   14a78:	bl	1136c <__fprintf_chk@plt>
   14a7c:	mov	r0, r4
   14a80:	mov	r1, r8
   14a84:	bl	1112c <fputs_unlocked@plt>
   14a88:	cmp	r6, #9
   14a8c:	bhi	14ac8 <putchar_unlocked@plt+0x369c>
   14a90:	add	r0, pc, #0
   14a94:	ldr	pc, [r0, r6, lsl #2]
   14a98:	andeq	r4, r1, r0, asr #21
   14a9c:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14aa0:	andeq	r4, r1, r4, lsl #22
   14aa4:	andeq	r4, r1, ip, lsr #22
   14aa8:	andeq	r4, r1, r4, asr fp
   14aac:	andeq	r4, r1, ip, ror fp
   14ab0:	andeq	r4, r1, r4, lsr #23
   14ab4:	ldrdeq	r4, [r1], -ip
   14ab8:	andeq	r4, r1, ip, ror ip
   14abc:	andeq	r4, r1, r4, lsr #24
   14ac0:	sub	sp, fp, #24
   14ac4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14ac8:	movw	r1, #25835	; 0x64eb
   14acc:	movt	r1, #1
   14ad0:	b	14c2c <putchar_unlocked@plt+0x3800>
   14ad4:	movw	r1, #25516	; 0x63ac
   14ad8:	movt	r1, #1
   14adc:	mov	r0, #0
   14ae0:	mov	r2, #5
   14ae4:	bl	111e0 <dcgettext@plt>
   14ae8:	mov	r2, r0
   14aec:	ldr	r3, [r7]
   14af0:	mov	r0, r8
   14af4:	mov	r1, #1
   14af8:	sub	sp, fp, #24
   14afc:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   14b00:	b	1136c <__fprintf_chk@plt>
   14b04:	movw	r1, #25532	; 0x63bc
   14b08:	movt	r1, #1
   14b0c:	mov	r0, #0
   14b10:	mov	r2, #5
   14b14:	bl	111e0 <dcgettext@plt>
   14b18:	mov	r2, r0
   14b1c:	ldr	r3, [r7]
   14b20:	ldr	r0, [r7, #4]
   14b24:	str	r0, [sp]
   14b28:	b	14c18 <putchar_unlocked@plt+0x37ec>
   14b2c:	movw	r1, #25555	; 0x63d3
   14b30:	movt	r1, #1
   14b34:	mov	r0, #0
   14b38:	mov	r2, #5
   14b3c:	bl	111e0 <dcgettext@plt>
   14b40:	mov	r2, r0
   14b44:	ldr	r3, [r7]
   14b48:	ldmib	r7, {r0, r1}
   14b4c:	stm	sp, {r0, r1}
   14b50:	b	14c18 <putchar_unlocked@plt+0x37ec>
   14b54:	movw	r1, #25583	; 0x63ef
   14b58:	movt	r1, #1
   14b5c:	mov	r0, #0
   14b60:	mov	r2, #5
   14b64:	bl	111e0 <dcgettext@plt>
   14b68:	mov	r2, r0
   14b6c:	ldr	r3, [r7]
   14b70:	ldmib	r7, {r0, r1, r7}
   14b74:	stm	sp, {r0, r1, r7}
   14b78:	b	14c18 <putchar_unlocked@plt+0x37ec>
   14b7c:	movw	r1, #25615	; 0x640f
   14b80:	movt	r1, #1
   14b84:	mov	r0, #0
   14b88:	mov	r2, #5
   14b8c:	bl	111e0 <dcgettext@plt>
   14b90:	mov	r2, r0
   14b94:	ldr	r3, [r7]
   14b98:	ldmib	r7, {r0, r1, r6, r7}
   14b9c:	stm	sp, {r0, r1, r6, r7}
   14ba0:	b	14c18 <putchar_unlocked@plt+0x37ec>
   14ba4:	movw	r1, #25651	; 0x6433
   14ba8:	movt	r1, #1
   14bac:	mov	r0, #0
   14bb0:	mov	r2, #5
   14bb4:	bl	111e0 <dcgettext@plt>
   14bb8:	mov	r2, r0
   14bbc:	ldr	r3, [r7]
   14bc0:	ldmib	r7, {r0, r1, r6}
   14bc4:	ldr	r5, [r7, #16]
   14bc8:	ldr	r7, [r7, #20]
   14bcc:	stm	sp, {r0, r1, r6}
   14bd0:	str	r5, [sp, #12]
   14bd4:	str	r7, [sp, #16]
   14bd8:	b	14c18 <putchar_unlocked@plt+0x37ec>
   14bdc:	movw	r1, #25691	; 0x645b
   14be0:	movt	r1, #1
   14be4:	mov	r0, #0
   14be8:	mov	r2, #5
   14bec:	bl	111e0 <dcgettext@plt>
   14bf0:	mov	r2, r0
   14bf4:	ldr	r3, [r7]
   14bf8:	ldmib	r7, {r0, r1, r6}
   14bfc:	ldr	r5, [r7, #16]
   14c00:	ldr	r4, [r7, #20]
   14c04:	ldr	r7, [r7, #24]
   14c08:	stm	sp, {r0, r1, r6}
   14c0c:	str	r5, [sp, #12]
   14c10:	str	r4, [sp, #16]
   14c14:	str	r7, [sp, #20]
   14c18:	mov	r0, r8
   14c1c:	mov	r1, #1
   14c20:	b	14ccc <putchar_unlocked@plt+0x38a0>
   14c24:	movw	r1, #25783	; 0x64b7
   14c28:	movt	r1, #1
   14c2c:	mov	r0, #0
   14c30:	mov	r2, #5
   14c34:	bl	111e0 <dcgettext@plt>
   14c38:	mov	ip, r0
   14c3c:	ldr	r3, [r7]
   14c40:	ldr	r0, [r7, #4]
   14c44:	ldr	r1, [r7, #8]
   14c48:	ldr	r6, [r7, #12]
   14c4c:	ldr	r5, [r7, #16]
   14c50:	ldr	r4, [r7, #20]
   14c54:	ldr	r2, [r7, #24]
   14c58:	ldr	lr, [r7, #28]
   14c5c:	ldr	r7, [r7, #32]
   14c60:	stm	sp, {r0, r1, r6}
   14c64:	str	r5, [sp, #12]
   14c68:	str	r4, [sp, #16]
   14c6c:	str	r2, [sp, #20]
   14c70:	str	lr, [sp, #24]
   14c74:	str	r7, [sp, #28]
   14c78:	b	14cc0 <putchar_unlocked@plt+0x3894>
   14c7c:	movw	r1, #25735	; 0x6487
   14c80:	movt	r1, #1
   14c84:	mov	r0, #0
   14c88:	mov	r2, #5
   14c8c:	bl	111e0 <dcgettext@plt>
   14c90:	mov	ip, r0
   14c94:	ldr	r3, [r7]
   14c98:	ldmib	r7, {r0, r1, r6}
   14c9c:	ldr	r5, [r7, #16]
   14ca0:	ldr	r4, [r7, #20]
   14ca4:	ldr	r2, [r7, #24]
   14ca8:	ldr	r7, [r7, #28]
   14cac:	stm	sp, {r0, r1, r6}
   14cb0:	str	r5, [sp, #12]
   14cb4:	str	r4, [sp, #16]
   14cb8:	str	r2, [sp, #20]
   14cbc:	str	r7, [sp, #24]
   14cc0:	mov	r0, r8
   14cc4:	mov	r1, #1
   14cc8:	mov	r2, ip
   14ccc:	bl	1136c <__fprintf_chk@plt>
   14cd0:	sub	sp, fp, #24
   14cd4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14cd8:	push	{r4, sl, fp, lr}
   14cdc:	add	fp, sp, #8
   14ce0:	sub	sp, sp, #8
   14ce4:	mov	lr, #0
   14ce8:	ldr	ip, [fp, #8]
   14cec:	ldr	r4, [ip, lr, lsl #2]
   14cf0:	add	lr, lr, #1
   14cf4:	cmp	r4, #0
   14cf8:	bne	14cec <putchar_unlocked@plt+0x38c0>
   14cfc:	sub	r4, lr, #1
   14d00:	str	ip, [sp]
   14d04:	str	r4, [sp, #4]
   14d08:	bl	149a4 <putchar_unlocked@plt+0x3578>
   14d0c:	sub	sp, fp, #8
   14d10:	pop	{r4, sl, fp, pc}
   14d14:	push	{r4, r5, fp, lr}
   14d18:	add	fp, sp, #8
   14d1c:	sub	sp, sp, #48	; 0x30
   14d20:	mov	ip, #0
   14d24:	ldr	r4, [fp, #8]
   14d28:	add	lr, sp, #8
   14d2c:	ldr	r5, [r4]
   14d30:	str	r5, [lr, ip, lsl #2]
   14d34:	cmp	r5, #0
   14d38:	beq	14d4c <putchar_unlocked@plt+0x3920>
   14d3c:	add	ip, ip, #1
   14d40:	add	r4, r4, #4
   14d44:	cmp	ip, #10
   14d48:	bcc	14d2c <putchar_unlocked@plt+0x3900>
   14d4c:	str	lr, [sp]
   14d50:	str	ip, [sp, #4]
   14d54:	bl	149a4 <putchar_unlocked@plt+0x3578>
   14d58:	sub	sp, fp, #8
   14d5c:	pop	{r4, r5, fp, pc}
   14d60:	push	{fp, lr}
   14d64:	mov	fp, sp
   14d68:	sub	sp, sp, #8
   14d6c:	add	ip, fp, #8
   14d70:	str	ip, [sp, #4]
   14d74:	str	ip, [sp]
   14d78:	bl	14d14 <putchar_unlocked@plt+0x38e8>
   14d7c:	mov	sp, fp
   14d80:	pop	{fp, pc}
   14d84:	push	{fp, lr}
   14d88:	mov	fp, sp
   14d8c:	movw	r0, #29052	; 0x717c
   14d90:	movt	r0, #2
   14d94:	ldr	r1, [r0]
   14d98:	movw	r0, #24595	; 0x6013
   14d9c:	movt	r0, #1
   14da0:	bl	1112c <fputs_unlocked@plt>
   14da4:	movw	r1, #25895	; 0x6527
   14da8:	movt	r1, #1
   14dac:	mov	r0, #0
   14db0:	mov	r2, #5
   14db4:	bl	111e0 <dcgettext@plt>
   14db8:	mov	r1, r0
   14dbc:	movw	r2, #25915	; 0x653b
   14dc0:	movt	r2, #1
   14dc4:	mov	r0, #1
   14dc8:	bl	11354 <__printf_chk@plt>
   14dcc:	movw	r1, #25937	; 0x6551
   14dd0:	movt	r1, #1
   14dd4:	mov	r0, #0
   14dd8:	mov	r2, #5
   14ddc:	bl	111e0 <dcgettext@plt>
   14de0:	mov	r1, r0
   14de4:	movw	r2, #24159	; 0x5e5f
   14de8:	movt	r2, #1
   14dec:	movw	r3, #24404	; 0x5f54
   14df0:	movt	r3, #1
   14df4:	mov	r0, #1
   14df8:	bl	11354 <__printf_chk@plt>
   14dfc:	movw	r1, #25957	; 0x6565
   14e00:	movt	r1, #1
   14e04:	mov	r0, #0
   14e08:	mov	r2, #5
   14e0c:	bl	111e0 <dcgettext@plt>
   14e10:	mov	r1, r0
   14e14:	movw	r2, #25996	; 0x658c
   14e18:	movt	r2, #1
   14e1c:	mov	r0, #1
   14e20:	pop	{fp, lr}
   14e24:	b	11354 <__printf_chk@plt>
   14e28:	b	14e2c <putchar_unlocked@plt+0x3a00>
   14e2c:	push	{r4, r5, r6, sl, fp, lr}
   14e30:	add	fp, sp, #16
   14e34:	mov	r4, r2
   14e38:	mov	r5, r1
   14e3c:	mov	r6, r0
   14e40:	bl	157c8 <putchar_unlocked@plt+0x439c>
   14e44:	cmp	r0, #0
   14e48:	popne	{r4, r5, r6, sl, fp, pc}
   14e4c:	cmp	r6, #0
   14e50:	beq	14e64 <putchar_unlocked@plt+0x3a38>
   14e54:	cmp	r5, #0
   14e58:	cmpne	r4, #0
   14e5c:	bne	14e64 <putchar_unlocked@plt+0x3a38>
   14e60:	pop	{r4, r5, r6, sl, fp, pc}
   14e64:	bl	15218 <putchar_unlocked@plt+0x3dec>
   14e68:	push	{fp, lr}
   14e6c:	mov	fp, sp
   14e70:	bl	152b0 <putchar_unlocked@plt+0x3e84>
   14e74:	bl	14e7c <putchar_unlocked@plt+0x3a50>
   14e78:	pop	{fp, pc}
   14e7c:	cmp	r0, #0
   14e80:	bxne	lr
   14e84:	push	{fp, lr}
   14e88:	mov	fp, sp
   14e8c:	bl	15218 <putchar_unlocked@plt+0x3dec>
   14e90:	push	{fp, lr}
   14e94:	mov	fp, sp
   14e98:	bl	156fc <putchar_unlocked@plt+0x42d0>
   14e9c:	bl	14e7c <putchar_unlocked@plt+0x3a50>
   14ea0:	pop	{fp, pc}
   14ea4:	b	14e68 <putchar_unlocked@plt+0x3a3c>
   14ea8:	push	{r4, r5, fp, lr}
   14eac:	add	fp, sp, #8
   14eb0:	mov	r4, r1
   14eb4:	mov	r5, r0
   14eb8:	bl	152e0 <putchar_unlocked@plt+0x3eb4>
   14ebc:	cmp	r0, #0
   14ec0:	popne	{r4, r5, fp, pc}
   14ec4:	cmp	r5, #0
   14ec8:	beq	14ed8 <putchar_unlocked@plt+0x3aac>
   14ecc:	cmp	r4, #0
   14ed0:	bne	14ed8 <putchar_unlocked@plt+0x3aac>
   14ed4:	pop	{r4, r5, fp, pc}
   14ed8:	bl	15218 <putchar_unlocked@plt+0x3dec>
   14edc:	push	{fp, lr}
   14ee0:	mov	fp, sp
   14ee4:	bl	15700 <putchar_unlocked@plt+0x42d4>
   14ee8:	bl	14e7c <putchar_unlocked@plt+0x3a50>
   14eec:	pop	{fp, pc}
   14ef0:	push	{fp, lr}
   14ef4:	mov	fp, sp
   14ef8:	bl	15710 <putchar_unlocked@plt+0x42e4>
   14efc:	bl	14e7c <putchar_unlocked@plt+0x3a50>
   14f00:	pop	{fp, pc}
   14f04:	push	{fp, lr}
   14f08:	mov	fp, sp
   14f0c:	mov	r2, r1
   14f10:	mov	r1, r0
   14f14:	mov	r0, #0
   14f18:	bl	14e2c <putchar_unlocked@plt+0x3a00>
   14f1c:	pop	{fp, pc}
   14f20:	mov	r2, r1
   14f24:	mov	r1, r0
   14f28:	mov	r0, #0
   14f2c:	b	14ef0 <putchar_unlocked@plt+0x3ac4>
   14f30:	mov	r2, #1
   14f34:	b	14f38 <putchar_unlocked@plt+0x3b0c>
   14f38:	push	{r4, r5, fp, lr}
   14f3c:	add	fp, sp, #8
   14f40:	mov	r4, r1
   14f44:	ldr	r5, [r1]
   14f48:	cmp	r0, #0
   14f4c:	beq	14f64 <putchar_unlocked@plt+0x3b38>
   14f50:	mov	r1, #1
   14f54:	add	r1, r1, r5, lsr #1
   14f58:	adds	r5, r5, r1
   14f5c:	bcc	14f7c <putchar_unlocked@plt+0x3b50>
   14f60:	bl	15218 <putchar_unlocked@plt+0x3dec>
   14f64:	cmp	r5, #0
   14f68:	bne	14f7c <putchar_unlocked@plt+0x3b50>
   14f6c:	mov	r1, #64	; 0x40
   14f70:	udiv	r5, r1, r2
   14f74:	cmp	r2, #64	; 0x40
   14f78:	addhi	r5, r5, #1
   14f7c:	mov	r1, r5
   14f80:	bl	14e2c <putchar_unlocked@plt+0x3a00>
   14f84:	str	r5, [r4]
   14f88:	pop	{r4, r5, fp, pc}
   14f8c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14f90:	add	fp, sp, #24
   14f94:	mov	r8, r1
   14f98:	ldr	r6, [r1]
   14f9c:	add	r1, r6, r6, asr #1
   14fa0:	cmp	r1, r6
   14fa4:	mvnvs	r1, #-2147483648	; 0x80000000
   14fa8:	cmp	r1, r3
   14fac:	mov	r5, r1
   14fb0:	movgt	r5, r3
   14fb4:	cmn	r3, #1
   14fb8:	movle	r5, r1
   14fbc:	ldr	r4, [fp, #8]
   14fc0:	cmn	r4, #1
   14fc4:	ble	14fec <putchar_unlocked@plt+0x3bc0>
   14fc8:	cmp	r4, #0
   14fcc:	beq	15040 <putchar_unlocked@plt+0x3c14>
   14fd0:	cmn	r5, #1
   14fd4:	ble	15014 <putchar_unlocked@plt+0x3be8>
   14fd8:	mvn	r7, #-2147483648	; 0x80000000
   14fdc:	udiv	r1, r7, r4
   14fe0:	cmp	r1, r5
   14fe4:	bge	15040 <putchar_unlocked@plt+0x3c14>
   14fe8:	b	15050 <putchar_unlocked@plt+0x3c24>
   14fec:	cmn	r5, #1
   14ff0:	ble	15030 <putchar_unlocked@plt+0x3c04>
   14ff4:	cmn	r4, #1
   14ff8:	beq	15040 <putchar_unlocked@plt+0x3c14>
   14ffc:	mov	r1, #-2147483648	; 0x80000000
   15000:	sdiv	r1, r1, r4
   15004:	mvn	r7, #-2147483648	; 0x80000000
   15008:	cmp	r1, r5
   1500c:	bge	15040 <putchar_unlocked@plt+0x3c14>
   15010:	b	15050 <putchar_unlocked@plt+0x3c24>
   15014:	beq	15040 <putchar_unlocked@plt+0x3c14>
   15018:	mov	r1, #-2147483648	; 0x80000000
   1501c:	sdiv	r1, r1, r5
   15020:	mvn	r7, #-2147483648	; 0x80000000
   15024:	cmp	r1, r4
   15028:	bge	15040 <putchar_unlocked@plt+0x3c14>
   1502c:	b	15050 <putchar_unlocked@plt+0x3c24>
   15030:	mvn	r7, #-2147483648	; 0x80000000
   15034:	sdiv	r1, r7, r4
   15038:	cmp	r5, r1
   1503c:	blt	15050 <putchar_unlocked@plt+0x3c24>
   15040:	mul	r1, r5, r4
   15044:	mov	r7, #64	; 0x40
   15048:	cmp	r1, #63	; 0x3f
   1504c:	bgt	15058 <putchar_unlocked@plt+0x3c2c>
   15050:	sdiv	r5, r7, r4
   15054:	mul	r1, r5, r4
   15058:	cmp	r0, #0
   1505c:	moveq	r7, #0
   15060:	streq	r7, [r8]
   15064:	sub	r7, r5, r6
   15068:	cmp	r7, r2
   1506c:	bge	15118 <putchar_unlocked@plt+0x3cec>
   15070:	add	r5, r6, r2
   15074:	mov	r1, #0
   15078:	cmp	r5, r3
   1507c:	mov	r2, #0
   15080:	movwgt	r2, #1
   15084:	cmn	r3, #1
   15088:	movwgt	r1, #1
   1508c:	cmp	r5, r6
   15090:	bvs	15100 <putchar_unlocked@plt+0x3cd4>
   15094:	ands	r1, r1, r2
   15098:	bne	15100 <putchar_unlocked@plt+0x3cd4>
   1509c:	cmn	r4, #1
   150a0:	ble	150c8 <putchar_unlocked@plt+0x3c9c>
   150a4:	cmp	r4, #0
   150a8:	beq	15114 <putchar_unlocked@plt+0x3ce8>
   150ac:	cmn	r5, #1
   150b0:	ble	150ec <putchar_unlocked@plt+0x3cc0>
   150b4:	mvn	r1, #-2147483648	; 0x80000000
   150b8:	udiv	r1, r1, r4
   150bc:	cmp	r1, r5
   150c0:	bge	15114 <putchar_unlocked@plt+0x3ce8>
   150c4:	b	15100 <putchar_unlocked@plt+0x3cd4>
   150c8:	cmn	r5, #1
   150cc:	ble	15104 <putchar_unlocked@plt+0x3cd8>
   150d0:	cmn	r4, #1
   150d4:	beq	15114 <putchar_unlocked@plt+0x3ce8>
   150d8:	mov	r1, #-2147483648	; 0x80000000
   150dc:	sdiv	r1, r1, r4
   150e0:	cmp	r1, r5
   150e4:	bge	15114 <putchar_unlocked@plt+0x3ce8>
   150e8:	b	15100 <putchar_unlocked@plt+0x3cd4>
   150ec:	beq	15114 <putchar_unlocked@plt+0x3ce8>
   150f0:	mov	r1, #-2147483648	; 0x80000000
   150f4:	sdiv	r1, r1, r5
   150f8:	cmp	r1, r4
   150fc:	bge	15114 <putchar_unlocked@plt+0x3ce8>
   15100:	bl	15218 <putchar_unlocked@plt+0x3dec>
   15104:	mvn	r1, #-2147483648	; 0x80000000
   15108:	sdiv	r1, r1, r4
   1510c:	cmp	r5, r1
   15110:	blt	15100 <putchar_unlocked@plt+0x3cd4>
   15114:	mul	r1, r5, r4
   15118:	bl	14ea8 <putchar_unlocked@plt+0x3a7c>
   1511c:	str	r5, [r8]
   15120:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15124:	mov	r1, #1
   15128:	b	1512c <putchar_unlocked@plt+0x3d00>
   1512c:	push	{fp, lr}
   15130:	mov	fp, sp
   15134:	bl	1525c <putchar_unlocked@plt+0x3e30>
   15138:	bl	14e7c <putchar_unlocked@plt+0x3a50>
   1513c:	pop	{fp, pc}
   15140:	mov	r1, #1
   15144:	b	15148 <putchar_unlocked@plt+0x3d1c>
   15148:	push	{fp, lr}
   1514c:	mov	fp, sp
   15150:	bl	1570c <putchar_unlocked@plt+0x42e0>
   15154:	bl	14e7c <putchar_unlocked@plt+0x3a50>
   15158:	pop	{fp, pc}
   1515c:	push	{r4, r5, r6, sl, fp, lr}
   15160:	add	fp, sp, #16
   15164:	mov	r4, r1
   15168:	mov	r5, r0
   1516c:	mov	r0, r1
   15170:	bl	14e68 <putchar_unlocked@plt+0x3a3c>
   15174:	mov	r6, r0
   15178:	mov	r1, r5
   1517c:	mov	r2, r4
   15180:	bl	11198 <memcpy@plt>
   15184:	mov	r0, r6
   15188:	pop	{r4, r5, r6, sl, fp, pc}
   1518c:	push	{r4, r5, r6, sl, fp, lr}
   15190:	add	fp, sp, #16
   15194:	mov	r4, r1
   15198:	mov	r5, r0
   1519c:	mov	r0, r1
   151a0:	bl	14e90 <putchar_unlocked@plt+0x3a64>
   151a4:	mov	r6, r0
   151a8:	mov	r1, r5
   151ac:	mov	r2, r4
   151b0:	bl	11198 <memcpy@plt>
   151b4:	mov	r0, r6
   151b8:	pop	{r4, r5, r6, sl, fp, pc}
   151bc:	push	{r4, r5, r6, sl, fp, lr}
   151c0:	add	fp, sp, #16
   151c4:	mov	r4, r1
   151c8:	mov	r5, r0
   151cc:	add	r0, r1, #1
   151d0:	bl	14e90 <putchar_unlocked@plt+0x3a64>
   151d4:	mov	r6, r0
   151d8:	mov	r0, #0
   151dc:	strb	r0, [r6, r4]
   151e0:	mov	r0, r6
   151e4:	mov	r1, r5
   151e8:	mov	r2, r4
   151ec:	bl	11198 <memcpy@plt>
   151f0:	mov	r0, r6
   151f4:	pop	{r4, r5, r6, sl, fp, pc}
   151f8:	push	{r4, sl, fp, lr}
   151fc:	add	fp, sp, #8
   15200:	mov	r4, r0
   15204:	bl	11300 <strlen@plt>
   15208:	add	r1, r0, #1
   1520c:	mov	r0, r4
   15210:	pop	{r4, sl, fp, lr}
   15214:	b	1515c <putchar_unlocked@plt+0x3d30>
   15218:	push	{fp, lr}
   1521c:	mov	fp, sp
   15220:	movw	r0, #28964	; 0x7124
   15224:	movt	r0, #2
   15228:	ldr	r4, [r0]
   1522c:	movw	r1, #26072	; 0x65d8
   15230:	movt	r1, #1
   15234:	mov	r0, #0
   15238:	mov	r2, #5
   1523c:	bl	111e0 <dcgettext@plt>
   15240:	mov	r3, r0
   15244:	movw	r2, #25023	; 0x61bf
   15248:	movt	r2, #1
   1524c:	mov	r0, r4
   15250:	mov	r1, #0
   15254:	bl	11270 <error@plt>
   15258:	bl	11414 <abort@plt>
   1525c:	clz	r2, r1
   15260:	lsr	r2, r2, #5
   15264:	clz	r3, r0
   15268:	lsr	r3, r3, #5
   1526c:	orrs	r2, r3, r2
   15270:	movwne	r1, #1
   15274:	movwne	r0, #1
   15278:	cmp	r1, #0
   1527c:	beq	152ac <putchar_unlocked@plt+0x3e80>
   15280:	mvn	r2, #-2147483648	; 0x80000000
   15284:	udiv	r2, r2, r1
   15288:	cmp	r2, r0
   1528c:	bcs	152ac <putchar_unlocked@plt+0x3e80>
   15290:	push	{fp, lr}
   15294:	mov	fp, sp
   15298:	bl	11318 <__errno_location@plt>
   1529c:	mov	r1, #12
   152a0:	str	r1, [r0]
   152a4:	mov	r0, #0
   152a8:	pop	{fp, pc}
   152ac:	b	11120 <calloc@plt>
   152b0:	cmp	r0, #0
   152b4:	movweq	r0, #1
   152b8:	cmn	r0, #1
   152bc:	ble	152c4 <putchar_unlocked@plt+0x3e98>
   152c0:	b	1127c <malloc@plt>
   152c4:	push	{fp, lr}
   152c8:	mov	fp, sp
   152cc:	bl	11318 <__errno_location@plt>
   152d0:	mov	r1, #12
   152d4:	str	r1, [r0]
   152d8:	mov	r0, #0
   152dc:	pop	{fp, pc}
   152e0:	push	{fp, lr}
   152e4:	mov	fp, sp
   152e8:	cmp	r0, #0
   152ec:	beq	15308 <putchar_unlocked@plt+0x3edc>
   152f0:	cmp	r1, #0
   152f4:	beq	15314 <putchar_unlocked@plt+0x3ee8>
   152f8:	cmn	r1, #1
   152fc:	ble	15320 <putchar_unlocked@plt+0x3ef4>
   15300:	pop	{fp, lr}
   15304:	b	11204 <realloc@plt>
   15308:	mov	r0, r1
   1530c:	pop	{fp, lr}
   15310:	b	152b0 <putchar_unlocked@plt+0x3e84>
   15314:	bl	128f4 <putchar_unlocked@plt+0x14c8>
   15318:	mov	r0, #0
   1531c:	pop	{fp, pc}
   15320:	bl	11318 <__errno_location@plt>
   15324:	mov	r1, #12
   15328:	str	r1, [r0]
   1532c:	mov	r0, #0
   15330:	pop	{fp, pc}
   15334:	mov	r1, r0
   15338:	sub	r2, r0, #65	; 0x41
   1533c:	mov	r0, #1
   15340:	cmp	r2, #26
   15344:	subcs	r2, r1, #97	; 0x61
   15348:	cmpcs	r2, #26
   1534c:	bcs	15354 <putchar_unlocked@plt+0x3f28>
   15350:	bx	lr
   15354:	sub	r1, r1, #48	; 0x30
   15358:	cmp	r1, #10
   1535c:	movcs	r0, #0
   15360:	bx	lr
   15364:	mov	r1, r0
   15368:	sub	r2, r0, #65	; 0x41
   1536c:	mov	r0, #1
   15370:	cmp	r2, #26
   15374:	subcs	r1, r1, #97	; 0x61
   15378:	cmpcs	r1, #26
   1537c:	movcs	r0, #0
   15380:	bx	lr
   15384:	mov	r1, #0
   15388:	cmp	r0, #128	; 0x80
   1538c:	movwcc	r1, #1
   15390:	mov	r0, r1
   15394:	bx	lr
   15398:	sub	r1, r0, #9
   1539c:	clz	r1, r1
   153a0:	lsr	r1, r1, #5
   153a4:	sub	r0, r0, #32
   153a8:	clz	r0, r0
   153ac:	lsr	r0, r0, #5
   153b0:	orr	r0, r0, r1
   153b4:	bx	lr
   153b8:	mov	r1, r0
   153bc:	mov	r0, #1
   153c0:	cmp	r1, #32
   153c4:	bxcc	lr
   153c8:	cmp	r1, #127	; 0x7f
   153cc:	movne	r0, #0
   153d0:	bx	lr
   153d4:	sub	r1, r0, #48	; 0x30
   153d8:	mov	r0, #0
   153dc:	cmp	r1, #10
   153e0:	movwcc	r0, #1
   153e4:	bx	lr
   153e8:	sub	r1, r0, #33	; 0x21
   153ec:	mov	r0, #0
   153f0:	cmp	r1, #94	; 0x5e
   153f4:	movwcc	r0, #1
   153f8:	bx	lr
   153fc:	sub	r1, r0, #97	; 0x61
   15400:	mov	r0, #0
   15404:	cmp	r1, #26
   15408:	movwcc	r0, #1
   1540c:	bx	lr
   15410:	sub	r1, r0, #32
   15414:	mov	r0, #0
   15418:	cmp	r1, #95	; 0x5f
   1541c:	movwcc	r0, #1
   15420:	bx	lr
   15424:	sub	r1, r0, #33	; 0x21
   15428:	cmp	r1, #93	; 0x5d
   1542c:	bhi	155b8 <putchar_unlocked@plt+0x418c>
   15430:	mov	r0, #1
   15434:	add	r2, pc, #0
   15438:	ldr	pc, [r2, r1, lsl #2]
   1543c:			; <UNDEFINED> instruction: 0x000155b4
   15440:			; <UNDEFINED> instruction: 0x000155b4
   15444:			; <UNDEFINED> instruction: 0x000155b4
   15448:			; <UNDEFINED> instruction: 0x000155b4
   1544c:			; <UNDEFINED> instruction: 0x000155b4
   15450:			; <UNDEFINED> instruction: 0x000155b4
   15454:			; <UNDEFINED> instruction: 0x000155b4
   15458:			; <UNDEFINED> instruction: 0x000155b4
   1545c:			; <UNDEFINED> instruction: 0x000155b4
   15460:			; <UNDEFINED> instruction: 0x000155b4
   15464:			; <UNDEFINED> instruction: 0x000155b4
   15468:			; <UNDEFINED> instruction: 0x000155b4
   1546c:			; <UNDEFINED> instruction: 0x000155b4
   15470:			; <UNDEFINED> instruction: 0x000155b4
   15474:			; <UNDEFINED> instruction: 0x000155b4
   15478:			; <UNDEFINED> instruction: 0x000155b8
   1547c:			; <UNDEFINED> instruction: 0x000155b8
   15480:			; <UNDEFINED> instruction: 0x000155b8
   15484:			; <UNDEFINED> instruction: 0x000155b8
   15488:			; <UNDEFINED> instruction: 0x000155b8
   1548c:			; <UNDEFINED> instruction: 0x000155b8
   15490:			; <UNDEFINED> instruction: 0x000155b8
   15494:			; <UNDEFINED> instruction: 0x000155b8
   15498:			; <UNDEFINED> instruction: 0x000155b8
   1549c:			; <UNDEFINED> instruction: 0x000155b8
   154a0:			; <UNDEFINED> instruction: 0x000155b4
   154a4:			; <UNDEFINED> instruction: 0x000155b4
   154a8:			; <UNDEFINED> instruction: 0x000155b4
   154ac:			; <UNDEFINED> instruction: 0x000155b4
   154b0:			; <UNDEFINED> instruction: 0x000155b4
   154b4:			; <UNDEFINED> instruction: 0x000155b4
   154b8:			; <UNDEFINED> instruction: 0x000155b4
   154bc:			; <UNDEFINED> instruction: 0x000155b8
   154c0:			; <UNDEFINED> instruction: 0x000155b8
   154c4:			; <UNDEFINED> instruction: 0x000155b8
   154c8:			; <UNDEFINED> instruction: 0x000155b8
   154cc:			; <UNDEFINED> instruction: 0x000155b8
   154d0:			; <UNDEFINED> instruction: 0x000155b8
   154d4:			; <UNDEFINED> instruction: 0x000155b8
   154d8:			; <UNDEFINED> instruction: 0x000155b8
   154dc:			; <UNDEFINED> instruction: 0x000155b8
   154e0:			; <UNDEFINED> instruction: 0x000155b8
   154e4:			; <UNDEFINED> instruction: 0x000155b8
   154e8:			; <UNDEFINED> instruction: 0x000155b8
   154ec:			; <UNDEFINED> instruction: 0x000155b8
   154f0:			; <UNDEFINED> instruction: 0x000155b8
   154f4:			; <UNDEFINED> instruction: 0x000155b8
   154f8:			; <UNDEFINED> instruction: 0x000155b8
   154fc:			; <UNDEFINED> instruction: 0x000155b8
   15500:			; <UNDEFINED> instruction: 0x000155b8
   15504:			; <UNDEFINED> instruction: 0x000155b8
   15508:			; <UNDEFINED> instruction: 0x000155b8
   1550c:			; <UNDEFINED> instruction: 0x000155b8
   15510:			; <UNDEFINED> instruction: 0x000155b8
   15514:			; <UNDEFINED> instruction: 0x000155b8
   15518:			; <UNDEFINED> instruction: 0x000155b8
   1551c:			; <UNDEFINED> instruction: 0x000155b8
   15520:			; <UNDEFINED> instruction: 0x000155b8
   15524:			; <UNDEFINED> instruction: 0x000155b4
   15528:			; <UNDEFINED> instruction: 0x000155b4
   1552c:			; <UNDEFINED> instruction: 0x000155b4
   15530:			; <UNDEFINED> instruction: 0x000155b4
   15534:			; <UNDEFINED> instruction: 0x000155b4
   15538:			; <UNDEFINED> instruction: 0x000155b4
   1553c:			; <UNDEFINED> instruction: 0x000155b8
   15540:			; <UNDEFINED> instruction: 0x000155b8
   15544:			; <UNDEFINED> instruction: 0x000155b8
   15548:			; <UNDEFINED> instruction: 0x000155b8
   1554c:			; <UNDEFINED> instruction: 0x000155b8
   15550:			; <UNDEFINED> instruction: 0x000155b8
   15554:			; <UNDEFINED> instruction: 0x000155b8
   15558:			; <UNDEFINED> instruction: 0x000155b8
   1555c:			; <UNDEFINED> instruction: 0x000155b8
   15560:			; <UNDEFINED> instruction: 0x000155b8
   15564:			; <UNDEFINED> instruction: 0x000155b8
   15568:			; <UNDEFINED> instruction: 0x000155b8
   1556c:			; <UNDEFINED> instruction: 0x000155b8
   15570:			; <UNDEFINED> instruction: 0x000155b8
   15574:			; <UNDEFINED> instruction: 0x000155b8
   15578:			; <UNDEFINED> instruction: 0x000155b8
   1557c:			; <UNDEFINED> instruction: 0x000155b8
   15580:			; <UNDEFINED> instruction: 0x000155b8
   15584:			; <UNDEFINED> instruction: 0x000155b8
   15588:			; <UNDEFINED> instruction: 0x000155b8
   1558c:			; <UNDEFINED> instruction: 0x000155b8
   15590:			; <UNDEFINED> instruction: 0x000155b8
   15594:			; <UNDEFINED> instruction: 0x000155b8
   15598:			; <UNDEFINED> instruction: 0x000155b8
   1559c:			; <UNDEFINED> instruction: 0x000155b8
   155a0:			; <UNDEFINED> instruction: 0x000155b8
   155a4:			; <UNDEFINED> instruction: 0x000155b4
   155a8:			; <UNDEFINED> instruction: 0x000155b4
   155ac:			; <UNDEFINED> instruction: 0x000155b4
   155b0:			; <UNDEFINED> instruction: 0x000155b4
   155b4:	bx	lr
   155b8:	mov	r0, #0
   155bc:	bx	lr
   155c0:	sub	r0, r0, #9
   155c4:	cmp	r0, #23
   155c8:	movhi	r0, #0
   155cc:	bxhi	lr
   155d0:	bic	r0, r0, #-16777216	; 0xff000000
   155d4:	movw	r1, #31
   155d8:	movt	r1, #128	; 0x80
   155dc:	mov	r2, #1
   155e0:	and	r0, r2, r1, lsr r0
   155e4:	bx	lr
   155e8:	sub	r1, r0, #65	; 0x41
   155ec:	mov	r0, #0
   155f0:	cmp	r1, #26
   155f4:	movwcc	r0, #1
   155f8:	bx	lr
   155fc:	mov	r1, r0
   15600:	sub	r2, r0, #48	; 0x30
   15604:	mov	r0, #1
   15608:	cmp	r2, #22
   1560c:	bhi	15624 <putchar_unlocked@plt+0x41f8>
   15610:	mov	ip, #1
   15614:	movw	r3, #1023	; 0x3ff
   15618:	movt	r3, #126	; 0x7e
   1561c:	tst	r3, ip, lsl r2
   15620:	bxne	lr
   15624:	sub	r1, r1, #97	; 0x61
   15628:	cmp	r1, #6
   1562c:	movcs	r0, #0
   15630:	bxcs	lr
   15634:	bx	lr
   15638:	sub	r1, r0, #65	; 0x41
   1563c:	cmp	r1, #26
   15640:	addcc	r0, r0, #32
   15644:	bx	lr
   15648:	sub	r1, r0, #97	; 0x61
   1564c:	cmp	r1, #26
   15650:	subcc	r0, r0, #32
   15654:	bx	lr
   15658:	push	{r4, r5, r6, sl, fp, lr}
   1565c:	add	fp, sp, #16
   15660:	mov	r4, r0
   15664:	bl	1124c <__fpending@plt>
   15668:	mov	r5, r0
   1566c:	mov	r0, r4
   15670:	bl	11258 <ferror_unlocked@plt>
   15674:	mov	r6, r0
   15678:	mov	r0, r4
   1567c:	bl	127ec <putchar_unlocked@plt+0x13c0>
   15680:	cmp	r6, #0
   15684:	beq	156a4 <putchar_unlocked@plt+0x4278>
   15688:	mvn	r4, #0
   1568c:	cmp	r0, #0
   15690:	bne	156d8 <putchar_unlocked@plt+0x42ac>
   15694:	bl	11318 <__errno_location@plt>
   15698:	mov	r1, #0
   1569c:	str	r1, [r0]
   156a0:	b	156d8 <putchar_unlocked@plt+0x42ac>
   156a4:	cmp	r0, #0
   156a8:	mov	r4, r0
   156ac:	mvnne	r4, #0
   156b0:	cmp	r5, #0
   156b4:	bne	156d8 <putchar_unlocked@plt+0x42ac>
   156b8:	cmp	r0, #0
   156bc:	beq	156d8 <putchar_unlocked@plt+0x42ac>
   156c0:	bl	11318 <__errno_location@plt>
   156c4:	ldr	r0, [r0]
   156c8:	subs	r4, r0, #9
   156cc:	mvnne	r4, #0
   156d0:	mov	r0, r4
   156d4:	pop	{r4, r5, r6, sl, fp, pc}
   156d8:	mov	r0, r4
   156dc:	pop	{r4, r5, r6, sl, fp, pc}
   156e0:	push	{fp, lr}
   156e4:	mov	fp, sp
   156e8:	bl	11318 <__errno_location@plt>
   156ec:	mov	r1, #12
   156f0:	str	r1, [r0]
   156f4:	mov	r0, #0
   156f8:	pop	{fp, pc}
   156fc:	b	152b0 <putchar_unlocked@plt+0x3e84>
   15700:	cmp	r1, #0
   15704:	orreq	r1, r1, #1
   15708:	b	152e0 <putchar_unlocked@plt+0x3eb4>
   1570c:	b	1525c <putchar_unlocked@plt+0x3e30>
   15710:	clz	r3, r2
   15714:	lsr	ip, r3, #5
   15718:	clz	r3, r1
   1571c:	lsr	r3, r3, #5
   15720:	orrs	r3, r3, ip
   15724:	movwne	r1, #1
   15728:	movwne	r2, #1
   1572c:	b	157c8 <putchar_unlocked@plt+0x439c>
   15730:	push	{fp, lr}
   15734:	mov	fp, sp
   15738:	mov	r0, #14
   1573c:	bl	113b4 <nl_langinfo@plt>
   15740:	movw	r1, #24596	; 0x6014
   15744:	movt	r1, #1
   15748:	cmp	r0, #0
   1574c:	movne	r1, r0
   15750:	ldrb	r2, [r1]
   15754:	movw	r0, #26089	; 0x65e9
   15758:	movt	r0, #1
   1575c:	cmp	r2, #0
   15760:	movne	r0, r1
   15764:	pop	{fp, pc}
   15768:	push	{r4, r5, r6, r7, fp, lr}
   1576c:	add	fp, sp, #16
   15770:	sub	sp, sp, #8
   15774:	mov	r7, r2
   15778:	mov	r4, r1
   1577c:	add	r5, sp, #4
   15780:	cmp	r0, #0
   15784:	movne	r5, r0
   15788:	mov	r0, r5
   1578c:	bl	11264 <mbrtowc@plt>
   15790:	mov	r6, r0
   15794:	cmp	r7, #0
   15798:	beq	157bc <putchar_unlocked@plt+0x4390>
   1579c:	cmn	r6, #2
   157a0:	bcc	157bc <putchar_unlocked@plt+0x4390>
   157a4:	mov	r0, #0
   157a8:	bl	129c0 <putchar_unlocked@plt+0x1594>
   157ac:	cmp	r0, #0
   157b0:	ldrbeq	r0, [r4]
   157b4:	streq	r0, [r5]
   157b8:	moveq	r6, #1
   157bc:	mov	r0, r6
   157c0:	sub	sp, fp, #16
   157c4:	pop	{r4, r5, r6, r7, fp, pc}
   157c8:	cmp	r2, #0
   157cc:	beq	157fc <putchar_unlocked@plt+0x43d0>
   157d0:	mvn	r3, #0
   157d4:	udiv	r3, r3, r2
   157d8:	cmp	r3, r1
   157dc:	bcs	157fc <putchar_unlocked@plt+0x43d0>
   157e0:	push	{fp, lr}
   157e4:	mov	fp, sp
   157e8:	bl	11318 <__errno_location@plt>
   157ec:	mov	r1, #12
   157f0:	str	r1, [r0]
   157f4:	mov	r0, #0
   157f8:	pop	{fp, pc}
   157fc:	mul	r1, r2, r1
   15800:	b	152e0 <putchar_unlocked@plt+0x3eb4>
   15804:	cmp	r3, #0
   15808:	cmpeq	r2, #0
   1580c:	bne	15830 <putchar_unlocked@plt+0x4404>
   15810:	cmp	r1, #0
   15814:	movlt	r1, #-2147483648	; 0x80000000
   15818:	movlt	r0, #0
   1581c:	blt	1582c <putchar_unlocked@plt+0x4400>
   15820:	cmpeq	r0, #0
   15824:	mvnne	r1, #-2147483648	; 0x80000000
   15828:	mvnne	r0, #0
   1582c:	b	158d8 <putchar_unlocked@plt+0x44ac>
   15830:	sub	sp, sp, #8
   15834:	push	{sp, lr}
   15838:	cmp	r1, #0
   1583c:	blt	1585c <putchar_unlocked@plt+0x4430>
   15840:	cmp	r3, #0
   15844:	blt	15890 <putchar_unlocked@plt+0x4464>
   15848:	bl	158e8 <putchar_unlocked@plt+0x44bc>
   1584c:	ldr	lr, [sp, #4]
   15850:	add	sp, sp, #8
   15854:	pop	{r2, r3}
   15858:	bx	lr
   1585c:	rsbs	r0, r0, #0
   15860:	sbc	r1, r1, r1, lsl #1
   15864:	cmp	r3, #0
   15868:	blt	158b4 <putchar_unlocked@plt+0x4488>
   1586c:	bl	158e8 <putchar_unlocked@plt+0x44bc>
   15870:	ldr	lr, [sp, #4]
   15874:	add	sp, sp, #8
   15878:	pop	{r2, r3}
   1587c:	rsbs	r0, r0, #0
   15880:	sbc	r1, r1, r1, lsl #1
   15884:	rsbs	r2, r2, #0
   15888:	sbc	r3, r3, r3, lsl #1
   1588c:	bx	lr
   15890:	rsbs	r2, r2, #0
   15894:	sbc	r3, r3, r3, lsl #1
   15898:	bl	158e8 <putchar_unlocked@plt+0x44bc>
   1589c:	ldr	lr, [sp, #4]
   158a0:	add	sp, sp, #8
   158a4:	pop	{r2, r3}
   158a8:	rsbs	r0, r0, #0
   158ac:	sbc	r1, r1, r1, lsl #1
   158b0:	bx	lr
   158b4:	rsbs	r2, r2, #0
   158b8:	sbc	r3, r3, r3, lsl #1
   158bc:	bl	158e8 <putchar_unlocked@plt+0x44bc>
   158c0:	ldr	lr, [sp, #4]
   158c4:	add	sp, sp, #8
   158c8:	pop	{r2, r3}
   158cc:	rsbs	r2, r2, #0
   158d0:	sbc	r3, r3, r3, lsl #1
   158d4:	bx	lr
   158d8:	push	{r1, lr}
   158dc:	mov	r0, #8
   158e0:	bl	11138 <raise@plt>
   158e4:	pop	{r1, pc}
   158e8:	cmp	r1, r3
   158ec:	cmpeq	r0, r2
   158f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   158f4:	mov	r4, r0
   158f8:	movcc	r0, #0
   158fc:	mov	r5, r1
   15900:	ldr	lr, [sp, #36]	; 0x24
   15904:	movcc	r1, r0
   15908:	bcc	15a04 <putchar_unlocked@plt+0x45d8>
   1590c:	cmp	r3, #0
   15910:	clzeq	ip, r2
   15914:	clzne	ip, r3
   15918:	addeq	ip, ip, #32
   1591c:	cmp	r5, #0
   15920:	clzeq	r1, r4
   15924:	addeq	r1, r1, #32
   15928:	clzne	r1, r5
   1592c:	sub	ip, ip, r1
   15930:	sub	sl, ip, #32
   15934:	lsl	r9, r3, ip
   15938:	rsb	fp, ip, #32
   1593c:	orr	r9, r9, r2, lsl sl
   15940:	orr	r9, r9, r2, lsr fp
   15944:	lsl	r8, r2, ip
   15948:	cmp	r5, r9
   1594c:	cmpeq	r4, r8
   15950:	movcc	r0, #0
   15954:	movcc	r1, r0
   15958:	bcc	15974 <putchar_unlocked@plt+0x4548>
   1595c:	mov	r0, #1
   15960:	subs	r4, r4, r8
   15964:	lsl	r1, r0, sl
   15968:	orr	r1, r1, r0, lsr fp
   1596c:	lsl	r0, r0, ip
   15970:	sbc	r5, r5, r9
   15974:	cmp	ip, #0
   15978:	beq	15a04 <putchar_unlocked@plt+0x45d8>
   1597c:	lsr	r6, r8, #1
   15980:	orr	r6, r6, r9, lsl #31
   15984:	lsr	r7, r9, #1
   15988:	mov	r2, ip
   1598c:	b	159b0 <putchar_unlocked@plt+0x4584>
   15990:	subs	r3, r4, r6
   15994:	sbc	r8, r5, r7
   15998:	adds	r3, r3, r3
   1599c:	adc	r8, r8, r8
   159a0:	adds	r4, r3, #1
   159a4:	adc	r5, r8, #0
   159a8:	subs	r2, r2, #1
   159ac:	beq	159cc <putchar_unlocked@plt+0x45a0>
   159b0:	cmp	r5, r7
   159b4:	cmpeq	r4, r6
   159b8:	bcs	15990 <putchar_unlocked@plt+0x4564>
   159bc:	adds	r4, r4, r4
   159c0:	adc	r5, r5, r5
   159c4:	subs	r2, r2, #1
   159c8:	bne	159b0 <putchar_unlocked@plt+0x4584>
   159cc:	lsr	r3, r4, ip
   159d0:	orr	r3, r3, r5, lsl fp
   159d4:	lsr	r2, r5, ip
   159d8:	orr	r3, r3, r5, lsr sl
   159dc:	adds	r0, r0, r4
   159e0:	mov	r4, r3
   159e4:	lsl	r3, r2, ip
   159e8:	orr	r3, r3, r4, lsl sl
   159ec:	lsl	ip, r4, ip
   159f0:	orr	r3, r3, r4, lsr fp
   159f4:	adc	r1, r1, r5
   159f8:	subs	r0, r0, ip
   159fc:	mov	r5, r2
   15a00:	sbc	r1, r1, r3
   15a04:	cmp	lr, #0
   15a08:	strdne	r4, [lr]
   15a0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15a10:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15a14:	mov	r7, r0
   15a18:	ldr	r6, [pc, #72]	; 15a68 <putchar_unlocked@plt+0x463c>
   15a1c:	ldr	r5, [pc, #72]	; 15a6c <putchar_unlocked@plt+0x4640>
   15a20:	add	r6, pc, r6
   15a24:	add	r5, pc, r5
   15a28:	sub	r6, r6, r5
   15a2c:	mov	r8, r1
   15a30:	mov	r9, r2
   15a34:	bl	11100 <calloc@plt-0x20>
   15a38:	asrs	r6, r6, #2
   15a3c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   15a40:	mov	r4, #0
   15a44:	add	r4, r4, #1
   15a48:	ldr	r3, [r5], #4
   15a4c:	mov	r2, r9
   15a50:	mov	r1, r8
   15a54:	mov	r0, r7
   15a58:	blx	r3
   15a5c:	cmp	r6, r4
   15a60:	bne	15a44 <putchar_unlocked@plt+0x4618>
   15a64:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15a68:	andeq	r1, r1, r4, ror #9
   15a6c:	ldrdeq	r1, [r1], -ip
   15a70:	bx	lr
   15a74:	ldr	r3, [pc, #12]	; 15a88 <putchar_unlocked@plt+0x465c>
   15a78:	mov	r1, #0
   15a7c:	add	r3, pc, r3
   15a80:	ldr	r2, [r3]
   15a84:	b	11330 <__cxa_atexit@plt>
   15a88:	muleq	r1, r8, r6
   15a8c:	mov	r2, r1
   15a90:	mov	r1, r0
   15a94:	mov	r0, #3
   15a98:	b	113fc <__xstat64@plt>

Disassembly of section .fini:

00015a9c <.fini>:
   15a9c:	push	{r3, lr}
   15aa0:	pop	{r3, pc}
