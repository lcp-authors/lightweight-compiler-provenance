
../repos/prog2/MT1E1-2.2:     file format elf32-littlearm


Disassembly of section .init:

000106fc <.init>:
   106fc:	push	{r3, lr}
   10700:	bl	10800 <_start@@Base+0x3c>
   10704:	pop	{r3, pc}

Disassembly of section .plt:

00010708 <strcmp@plt-0x14>:
   10708:	push	{lr}		; (str lr, [sp, #-4]!)
   1070c:	ldr	lr, [pc, #4]	; 10718 <strcmp@plt-0x4>
   10710:	add	lr, pc, lr
   10714:	ldr	pc, [lr, #8]!
   10718:	andeq	r0, r1, r8, ror #17

0001071c <strcmp@plt>:
   1071c:	add	ip, pc, #0, 12
   10720:	add	ip, ip, #16, 20	; 0x10000
   10724:	ldr	pc, [ip, #2280]!	; 0x8e8

00010728 <__isoc99_fscanf@plt>:
   10728:	add	ip, pc, #0, 12
   1072c:	add	ip, ip, #16, 20	; 0x10000
   10730:	ldr	pc, [ip, #2272]!	; 0x8e0

00010734 <fopen@plt>:
   10734:	add	ip, pc, #0, 12
   10738:	add	ip, ip, #16, 20	; 0x10000
   1073c:	ldr	pc, [ip, #2264]!	; 0x8d8

00010740 <free@plt>:
   10740:	add	ip, pc, #0, 12
   10744:	add	ip, ip, #16, 20	; 0x10000
   10748:	ldr	pc, [ip, #2256]!	; 0x8d0

0001074c <realloc@plt>:
   1074c:	add	ip, pc, #0, 12
   10750:	add	ip, ip, #16, 20	; 0x10000
   10754:	ldr	pc, [ip, #2248]!	; 0x8c8

00010758 <fwrite@plt>:
   10758:	add	ip, pc, #0, 12
   1075c:	add	ip, ip, #16, 20	; 0x10000
   10760:	ldr	pc, [ip, #2240]!	; 0x8c0

00010764 <strcpy@plt>:
   10764:	add	ip, pc, #0, 12
   10768:	add	ip, ip, #16, 20	; 0x10000
   1076c:	ldr	pc, [ip, #2232]!	; 0x8b8

00010770 <malloc@plt>:
   10770:	add	ip, pc, #0, 12
   10774:	add	ip, ip, #16, 20	; 0x10000
   10778:	ldr	pc, [ip, #2224]!	; 0x8b0

0001077c <__libc_start_main@plt>:
   1077c:	add	ip, pc, #0, 12
   10780:	add	ip, ip, #16, 20	; 0x10000
   10784:	ldr	pc, [ip, #2216]!	; 0x8a8

00010788 <__gmon_start__@plt>:
   10788:	add	ip, pc, #0, 12
   1078c:	add	ip, ip, #16, 20	; 0x10000
   10790:	ldr	pc, [ip, #2208]!	; 0x8a0

00010794 <strlen@plt>:
   10794:	add	ip, pc, #0, 12
   10798:	add	ip, ip, #16, 20	; 0x10000
   1079c:	ldr	pc, [ip, #2200]!	; 0x898

000107a0 <fprintf@plt>:
   107a0:	add	ip, pc, #0, 12
   107a4:	add	ip, ip, #16, 20	; 0x10000
   107a8:	ldr	pc, [ip, #2192]!	; 0x890

000107ac <fclose@plt>:
   107ac:	add	ip, pc, #0, 12
   107b0:	add	ip, ip, #16, 20	; 0x10000
   107b4:	ldr	pc, [ip, #2184]!	; 0x888

000107b8 <abort@plt>:
   107b8:	add	ip, pc, #0, 12
   107bc:	add	ip, ip, #16, 20	; 0x10000
   107c0:	ldr	pc, [ip, #2176]!	; 0x880

Disassembly of section .text:

000107c4 <_start@@Base>:
   107c4:	mov	fp, #0
   107c8:	mov	lr, #0
   107cc:	pop	{r1}		; (ldr r1, [sp], #4)
   107d0:	mov	r2, sp
   107d4:	push	{r2}		; (str r2, [sp, #-4]!)
   107d8:	push	{r0}		; (str r0, [sp, #-4]!)
   107dc:	ldr	ip, [pc, #16]	; 107f4 <_start@@Base+0x30>
   107e0:	push	{ip}		; (str ip, [sp, #-4]!)
   107e4:	ldr	r0, [pc, #12]	; 107f8 <_start@@Base+0x34>
   107e8:	ldr	r3, [pc, #12]	; 107fc <_start@@Base+0x38>
   107ec:	bl	1077c <__libc_start_main@plt>
   107f0:	bl	107b8 <abort@plt>
   107f4:	strdeq	r0, [r1], -ip
   107f8:			; <UNDEFINED> instruction: 0x00010abc
   107fc:	muleq	r1, ip, fp
   10800:	ldr	r3, [pc, #20]	; 1081c <_start@@Base+0x58>
   10804:	ldr	r2, [pc, #20]	; 10820 <_start@@Base+0x5c>
   10808:	add	r3, pc, r3
   1080c:	ldr	r2, [r3, r2]
   10810:	cmp	r2, #0
   10814:	bxeq	lr
   10818:	b	10788 <__gmon_start__@plt>
   1081c:	strdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   10820:	andeq	r0, r0, r4, asr #32
   10824:	ldr	r0, [pc, #24]	; 10844 <_start@@Base+0x80>
   10828:	ldr	r3, [pc, #24]	; 10848 <_start@@Base+0x84>
   1082c:	cmp	r3, r0
   10830:	bxeq	lr
   10834:	ldr	r3, [pc, #16]	; 1084c <_start@@Base+0x88>
   10838:	cmp	r3, #0
   1083c:	bxeq	lr
   10840:	bx	r3
   10844:	andeq	r1, r2, r0, asr r0
   10848:	andeq	r1, r2, r0, asr r0
   1084c:	andeq	r0, r0, r0
   10850:	ldr	r0, [pc, #36]	; 1087c <_start@@Base+0xb8>
   10854:	ldr	r1, [pc, #36]	; 10880 <_start@@Base+0xbc>
   10858:	sub	r1, r1, r0
   1085c:	asr	r1, r1, #2
   10860:	add	r1, r1, r1, lsr #31
   10864:	asrs	r1, r1, #1
   10868:	bxeq	lr
   1086c:	ldr	r3, [pc, #16]	; 10884 <_start@@Base+0xc0>
   10870:	cmp	r3, #0
   10874:	bxeq	lr
   10878:	bx	r3
   1087c:	andeq	r1, r2, r0, asr r0
   10880:	andeq	r1, r2, r0, asr r0
   10884:	andeq	r0, r0, r0
   10888:	push	{r4, lr}
   1088c:	ldr	r4, [pc, #24]	; 108ac <_start@@Base+0xe8>
   10890:	ldrb	r3, [r4]
   10894:	cmp	r3, #0
   10898:	popne	{r4, pc}
   1089c:	bl	10824 <_start@@Base+0x60>
   108a0:	mov	r3, #1
   108a4:	strb	r3, [r4]
   108a8:	pop	{r4, pc}
   108ac:	andeq	r1, r2, r4, asr r0
   108b0:	b	10850 <_start@@Base+0x8c>

000108b4 <conta_vitorias@@Base>:
   108b4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   108b8:	strd	r6, [sp, #8]
   108bc:	strd	r8, [sp, #16]
   108c0:	strd	sl, [sp, #24]
   108c4:	str	lr, [sp, #32]
   108c8:	sub	sp, sp, #52	; 0x34
   108cc:	str	r0, [sp, #4]
   108d0:	mov	r9, r1
   108d4:	mov	r0, #20
   108d8:	bl	10770 <malloc@plt>
   108dc:	subs	r8, r0, #0
   108e0:	beq	10a9c <conta_vitorias@@Base+0x1e8>
   108e4:	mov	r3, #0
   108e8:	str	r3, [r9]
   108ec:	movw	sl, #3084	; 0xc0c
   108f0:	movt	sl, #1
   108f4:	mov	fp, r3
   108f8:	b	10908 <conta_vitorias@@Base+0x54>
   108fc:	ldr	r3, [r4, #16]
   10900:	add	r3, r3, #1
   10904:	str	r3, [r4, #16]
   10908:	add	r2, sp, #32
   1090c:	mov	r1, sl
   10910:	ldr	r0, [sp, #4]
   10914:	bl	10728 <__isoc99_fscanf@plt>
   10918:	cmp	r0, #1
   1091c:	bne	109c0 <conta_vitorias@@Base+0x10c>
   10920:	add	r0, sp, #32
   10924:	bl	10794 <strlen@plt>
   10928:	add	r3, sp, #48	; 0x30
   1092c:	add	r0, r3, r0
   10930:	strb	fp, [r0, #-16]
   10934:	ldr	r6, [r9]
   10938:	cmp	r6, #0
   1093c:	ble	109b8 <conta_vitorias@@Base+0x104>
   10940:	mov	r4, r8
   10944:	mov	r5, #0
   10948:	mov	r1, r4
   1094c:	add	r0, sp, #32
   10950:	bl	1071c <strcmp@plt>
   10954:	cmp	r0, #0
   10958:	beq	108fc <conta_vitorias@@Base+0x48>
   1095c:	add	r5, r5, #1
   10960:	add	r4, r4, #20
   10964:	cmp	r5, r6
   10968:	bne	10948 <conta_vitorias@@Base+0x94>
   1096c:	mov	r4, r6
   10970:	add	r6, r6, #1
   10974:	add	r6, r6, r6, lsl #2
   10978:	lsl	r1, r6, #2
   1097c:	mov	r0, r8
   10980:	bl	1074c <realloc@plt>
   10984:	subs	r8, r0, #0
   10988:	beq	10a9c <conta_vitorias@@Base+0x1e8>
   1098c:	add	r4, r4, r4, lsl #2
   10990:	add	r4, r8, r4, lsl #2
   10994:	add	r1, sp, #32
   10998:	mov	r0, r4
   1099c:	bl	10764 <strcpy@plt>
   109a0:	mov	r3, #1
   109a4:	str	r3, [r4, #16]
   109a8:	ldr	r3, [r9]
   109ac:	add	r3, r3, #1
   109b0:	str	r3, [r9]
   109b4:	b	10908 <conta_vitorias@@Base+0x54>
   109b8:	mov	r4, fp
   109bc:	b	10970 <conta_vitorias@@Base+0xbc>
   109c0:	ldr	fp, [r9]
   109c4:	cmp	fp, #1
   109c8:	ble	10a9c <conta_vitorias@@Base+0x1e8>
   109cc:	add	r6, r8, #16
   109d0:	add	r9, r8, #20
   109d4:	mov	sl, #1
   109d8:	b	10a18 <conta_vitorias@@Base+0x164>
   109dc:	mov	r2, sl
   109e0:	add	r2, r2, r2, lsl #2
   109e4:	lsl	r2, r2, #2
   109e8:	add	ip, r8, r2
   109ec:	ldrd	r0, [sp, #12]
   109f0:	strd	r0, [r8, r2]
   109f4:	ldrd	r2, [sp, #20]
   109f8:	strd	r2, [ip, #8]
   109fc:	ldr	r3, [sp, #28]
   10a00:	str	r3, [ip, #16]
   10a04:	add	sl, sl, #1
   10a08:	add	r6, r6, #20
   10a0c:	add	r9, r9, #20
   10a10:	cmp	sl, fp
   10a14:	beq	10a9c <conta_vitorias@@Base+0x1e8>
   10a18:	mov	r4, r9
   10a1c:	ldrd	r2, [r9]
   10a20:	strd	r2, [sp, #12]
   10a24:	ldrd	r2, [r9, #8]
   10a28:	strd	r2, [sp, #20]
   10a2c:	ldr	r3, [r9, #16]
   10a30:	str	r3, [sp, #28]
   10a34:	mov	r7, r3
   10a38:	cmp	sl, #0
   10a3c:	ble	109dc <conta_vitorias@@Base+0x128>
   10a40:	sub	r5, r9, #20
   10a44:	ldr	r2, [r9, #-4]
   10a48:	cmp	r3, r2
   10a4c:	ble	10a94 <conta_vitorias@@Base+0x1e0>
   10a50:	mov	r2, sl
   10a54:	mov	r3, #0
   10a58:	add	ip, r4, r3
   10a5c:	add	lr, r5, r3
   10a60:	ldrd	r0, [r5, r3]
   10a64:	strd	r0, [r4, r3]
   10a68:	ldrd	r0, [lr, #8]
   10a6c:	strd	r0, [ip, #8]
   10a70:	ldr	r1, [lr, #16]
   10a74:	str	r1, [ip, #16]
   10a78:	subs	r2, r2, #1
   10a7c:	beq	109e0 <conta_vitorias@@Base+0x12c>
   10a80:	sub	r3, r3, #20
   10a84:	ldr	r1, [r6, r3]
   10a88:	cmp	r1, r7
   10a8c:	blt	10a58 <conta_vitorias@@Base+0x1a4>
   10a90:	b	109e0 <conta_vitorias@@Base+0x12c>
   10a94:	mov	r2, sl
   10a98:	b	109e0 <conta_vitorias@@Base+0x12c>
   10a9c:	mov	r0, r8
   10aa0:	add	sp, sp, #52	; 0x34
   10aa4:	ldrd	r4, [sp]
   10aa8:	ldrd	r6, [sp, #8]
   10aac:	ldrd	r8, [sp, #16]
   10ab0:	ldrd	sl, [sp, #24]
   10ab4:	add	sp, sp, #32
   10ab8:	pop	{pc}		; (ldr pc, [sp], #4)

00010abc <main@@Base>:
   10abc:	strd	r4, [sp, #-28]!	; 0xffffffe4
   10ac0:	strd	r6, [sp, #8]
   10ac4:	strd	r8, [sp, #16]
   10ac8:	str	lr, [sp, #24]
   10acc:	sub	sp, sp, #12
   10ad0:	movw	r1, #3088	; 0xc10
   10ad4:	movt	r1, #1
   10ad8:	movw	r0, #3092	; 0xc14
   10adc:	movt	r0, #1
   10ae0:	bl	10734 <fopen@plt>
   10ae4:	mov	r9, r0
   10ae8:	mov	r3, #0
   10aec:	str	r3, [sp, #4]
   10af0:	add	r1, sp, #4
   10af4:	bl	108b4 <conta_vitorias@@Base>
   10af8:	mov	r8, r0
   10afc:	movw	r3, #4176	; 0x1050
   10b00:	movt	r3, #2
   10b04:	ldr	r3, [r3]
   10b08:	mov	r2, #12
   10b0c:	mov	r1, #1
   10b10:	movw	r0, #3100	; 0xc1c
   10b14:	movt	r0, #1
   10b18:	bl	10758 <fwrite@plt>
   10b1c:	cmp	r8, #0
   10b20:	beq	10b70 <main@@Base+0xb4>
   10b24:	ldr	r3, [sp, #4]
   10b28:	cmp	r3, #0
   10b2c:	ble	10b70 <main@@Base+0xb4>
   10b30:	mov	r4, r8
   10b34:	mov	r5, #0
   10b38:	movw	r7, #3116	; 0xc2c
   10b3c:	movt	r7, #1
   10b40:	movw	r6, #4176	; 0x1050
   10b44:	movt	r6, #2
   10b48:	ldr	r3, [r4, #16]
   10b4c:	mov	r2, r4
   10b50:	mov	r1, r7
   10b54:	ldr	r0, [r6]
   10b58:	bl	107a0 <fprintf@plt>
   10b5c:	add	r5, r5, #1
   10b60:	add	r4, r4, #20
   10b64:	ldr	r3, [sp, #4]
   10b68:	cmp	r3, r5
   10b6c:	bgt	10b48 <main@@Base+0x8c>
   10b70:	mov	r0, r8
   10b74:	bl	10740 <free@plt>
   10b78:	mov	r0, r9
   10b7c:	bl	107ac <fclose@plt>
   10b80:	mov	r0, #0
   10b84:	add	sp, sp, #12
   10b88:	ldrd	r4, [sp]
   10b8c:	ldrd	r6, [sp, #8]
   10b90:	ldrd	r8, [sp, #16]
   10b94:	add	sp, sp, #24
   10b98:	pop	{pc}		; (ldr pc, [sp], #4)

00010b9c <__libc_csu_init@@Base>:
   10b9c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10ba0:	mov	r7, r0
   10ba4:	ldr	r6, [pc, #72]	; 10bf4 <__libc_csu_init@@Base+0x58>
   10ba8:	ldr	r5, [pc, #72]	; 10bf8 <__libc_csu_init@@Base+0x5c>
   10bac:	add	r6, pc, r6
   10bb0:	add	r5, pc, r5
   10bb4:	sub	r6, r6, r5
   10bb8:	mov	r8, r1
   10bbc:	mov	r9, r2
   10bc0:	bl	106fc <strcmp@plt-0x20>
   10bc4:	asrs	r6, r6, #2
   10bc8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10bcc:	mov	r4, #0
   10bd0:	add	r4, r4, #1
   10bd4:	ldr	r3, [r5], #4
   10bd8:	mov	r2, r9
   10bdc:	mov	r1, r8
   10be0:	mov	r0, r7
   10be4:	blx	r3
   10be8:	cmp	r6, r4
   10bec:	bne	10bd0 <__libc_csu_init@@Base+0x34>
   10bf0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10bf4:	andeq	r0, r1, r0, ror #6
   10bf8:	andeq	r0, r1, r8, asr r3

00010bfc <__libc_csu_fini@@Base>:
   10bfc:	bx	lr

Disassembly of section .fini:

00010c00 <.fini>:
   10c00:	push	{r3, lr}
   10c04:	pop	{r3, pc}
