
../repos/charybdis/modules/.libs/m_alias.so:     file format elf32-littlearm


Disassembly of section .init:

00000780 <_init>:
 780:	push	{r3, lr}
 784:	bl	8c0 <call_weak_fn>
 788:	pop	{r3, pc}

Disassembly of section .plt:

0000078c <.plt>:
 78c:	push	{lr}		; (str lr, [sp, #-4]!)
 790:	ldr	lr, [pc, #4]	; 79c <.plt+0x10>
 794:	add	lr, pc, lr
 798:	ldr	pc, [lr, #8]!
 79c:	.word	0x00011864

000007a0 <calloc@plt>:
 7a0:	add	ip, pc, #0, 12
 7a4:	add	ip, ip, #69632	; 0x11000
 7a8:	ldr	pc, [ip, #2148]!	; 0x864

000007ac <mod_del_cmd@plt>:
 7ac:	add	ip, pc, #0, 12
 7b0:	add	ip, ip, #69632	; 0x11000
 7b4:	ldr	pc, [ip, #2140]!	; 0x85c

000007b8 <__cxa_finalize@plt>:
 7b8:	add	ip, pc, #0, 12
 7bc:	add	ip, ip, #69632	; 0x11000
 7c0:	ldr	pc, [ip, #2132]!	; 0x854

000007c4 <sendto_one@plt>:
 7c4:	add	ip, pc, #0, 12
 7c8:	add	ip, ip, #69632	; 0x11000
 7cc:	ldr	pc, [ip, #2124]!	; 0x84c

000007d0 <free@plt>:
 7d0:	add	ip, pc, #0, 12
 7d4:	add	ip, ip, #69632	; 0x11000
 7d8:	ldr	pc, [ip, #2116]!	; 0x844

000007dc <memcpy@plt>:
 7dc:	add	ip, pc, #0, 12
 7e0:	add	ip, ip, #69632	; 0x11000
 7e4:	ldr	pc, [ip, #2108]!	; 0x83c

000007e8 <rb_outofmemory@plt>:
 7e8:	add	ip, pc, #0, 12
 7ec:	add	ip, ip, #69632	; 0x11000
 7f0:	ldr	pc, [ip, #2100]!	; 0x834

000007f4 <rb_free_rb_dlink_node@plt>:
 7f4:	add	ip, pc, #0, 12
 7f8:	add	ip, ip, #69632	; 0x11000
 7fc:	ldr	pc, [ip, #2092]!	; 0x82c

00000800 <strcpy@plt>:
 800:	add	ip, pc, #0, 12
 804:	add	ip, ip, #69632	; 0x11000
 808:	ldr	pc, [ip, #2084]!	; 0x824

0000080c <rb_dictionary_foreach_start@plt>:
 80c:	add	ip, pc, #0, 12
 810:	add	ip, ip, #69632	; 0x11000
 814:	ldr	pc, [ip, #2076]!	; 0x81c

00000818 <msgbuf_reconstruct_tail@plt>:
 818:	add	ip, pc, #0, 12
 81c:	add	ip, ip, #69632	; 0x11000
 820:	ldr	pc, [ip, #2068]!	; 0x814

00000824 <__gmon_start__@plt>:
 824:	add	ip, pc, #0, 12
 828:	add	ip, ip, #69632	; 0x11000
 82c:	ldr	pc, [ip, #2060]!	; 0x80c

00000830 <rb_make_rb_dlink_node@plt>:
 830:	add	ip, pc, #0, 12
 834:	add	ip, ip, #69632	; 0x11000
 838:	ldr	pc, [ip, #2052]!	; 0x804

0000083c <sendto_one_numeric@plt>:
 83c:	add	ip, pc, #0, 12
 840:	add	ip, ip, #69632	; 0x11000
 844:	ldr	pc, [ip, #2044]!	; 0x7fc

00000848 <strlen@plt>:
 848:	add	ip, pc, #0, 12
 84c:	add	ip, ip, #69632	; 0x11000
 850:	ldr	pc, [ip, #2036]!	; 0x7f4

00000854 <strchr@plt>:
 854:	add	ip, pc, #0, 12
 858:	add	ip, ip, #69632	; 0x11000
 85c:	ldr	pc, [ip, #2028]!	; 0x7ec

00000860 <find_server@plt>:
 860:	add	ip, pc, #0, 12
 864:	add	ip, ip, #69632	; 0x11000
 868:	ldr	pc, [ip, #2020]!	; 0x7e4

0000086c <rb_dictionary_foreach_cur@plt>:
 86c:	add	ip, pc, #0, 12
 870:	add	ip, ip, #69632	; 0x11000
 874:	ldr	pc, [ip, #2012]!	; 0x7dc

00000878 <find_named_person@plt>:
 878:	add	ip, pc, #0, 12
 87c:	add	ip, ip, #69632	; 0x11000
 880:	ldr	pc, [ip, #2004]!	; 0x7d4

00000884 <flood_endgrace@plt>:
 884:	add	ip, pc, #0, 12
 888:	add	ip, ip, #69632	; 0x11000
 88c:	ldr	pc, [ip, #1996]!	; 0x7cc

00000890 <rb_dictionary_foreach_next@plt>:
 890:	add	ip, pc, #0, 12
 894:	add	ip, ip, #69632	; 0x11000
 898:	ldr	pc, [ip, #1988]!	; 0x7c4

0000089c <mod_add_cmd@plt>:
 89c:	add	ip, pc, #0, 12
 8a0:	add	ip, ip, #69632	; 0x11000
 8a4:	ldr	pc, [ip, #1980]!	; 0x7bc

000008a8 <rb_dictionary_retrieve@plt>:
 8a8:	add	ip, pc, #0, 12
 8ac:	add	ip, ip, #69632	; 0x11000
 8b0:	ldr	pc, [ip, #1972]!	; 0x7b4

000008b4 <__assert_fail@plt>:
 8b4:	add	ip, pc, #0, 12
 8b8:	add	ip, ip, #69632	; 0x11000
 8bc:	ldr	pc, [ip, #1964]!	; 0x7ac

Disassembly of section .text:

000008c0 <call_weak_fn>:
     8c0:	ldr	r3, [pc, #20]	; 8dc <call_weak_fn+0x1c>
     8c4:	ldr	r2, [pc, #20]	; 8e0 <call_weak_fn+0x20>
     8c8:	add	r3, pc, r3
     8cc:	ldr	r2, [r3, r2]
     8d0:	cmp	r2, #0
     8d4:	bxeq	lr
     8d8:	b	824 <__gmon_start__@plt>
     8dc:	.word	0x00011730
     8e0:	.word	0x00000078

000008e4 <deregister_tm_clones>:
     8e4:	ldr	r3, [pc, #52]	; 920 <deregister_tm_clones+0x3c>
     8e8:	ldr	r0, [pc, #52]	; 924 <deregister_tm_clones+0x40>
     8ec:	add	r3, pc, r3
     8f0:	add	r0, pc, r0
     8f4:	add	r3, r3, #3
     8f8:	sub	r3, r3, r0
     8fc:	cmp	r3, #6
     900:	ldr	r3, [pc, #32]	; 928 <deregister_tm_clones+0x44>
     904:	add	r3, pc, r3
     908:	bxls	lr
     90c:	ldr	r2, [pc, #24]	; 92c <deregister_tm_clones+0x48>
     910:	ldr	r3, [r3, r2]
     914:	cmp	r3, #0
     918:	bxeq	lr
     91c:	bx	r3
     920:	.word	0x000117d8
     924:	.word	0x000117d4
     928:	.word	0x000116f4
     92c:	.word	0x00000070

00000930 <register_tm_clones>:
     930:	ldr	r1, [pc, #56]	; 970 <register_tm_clones+0x40>
     934:	ldr	r0, [pc, #56]	; 974 <register_tm_clones+0x44>
     938:	add	r1, pc, r1
     93c:	add	r0, pc, r0
     940:	sub	r1, r1, r0
     944:	ldr	r3, [pc, #44]	; 978 <register_tm_clones+0x48>
     948:	asr	r1, r1, #2
     94c:	add	r3, pc, r3
     950:	add	r1, r1, r1, lsr #31
     954:	asrs	r1, r1, #1
     958:	bxeq	lr
     95c:	ldr	r2, [pc, #24]	; 97c <register_tm_clones+0x4c>
     960:	ldr	r3, [r3, r2]
     964:	cmp	r3, #0
     968:	bxeq	lr
     96c:	bx	r3
     970:	.word	0x0001178c
     974:	.word	0x00011788
     978:	.word	0x000116ac
     97c:	.word	0x00000080

00000980 <__do_global_dtors_aux>:
     980:	ldr	r3, [pc, #76]	; 9d4 <__do_global_dtors_aux+0x54>
     984:	ldr	r2, [pc, #76]	; 9d8 <__do_global_dtors_aux+0x58>
     988:	add	r3, pc, r3
     98c:	add	r2, pc, r2
     990:	ldrb	r3, [r3]
     994:	cmp	r3, #0
     998:	bxne	lr
     99c:	ldr	r3, [pc, #56]	; 9dc <__do_global_dtors_aux+0x5c>
     9a0:	push	{r4, lr}
     9a4:	ldr	r3, [r2, r3]
     9a8:	cmp	r3, #0
     9ac:	beq	9bc <__do_global_dtors_aux+0x3c>
     9b0:	ldr	r3, [pc, #40]	; 9e0 <__do_global_dtors_aux+0x60>
     9b4:	ldr	r0, [pc, r3]
     9b8:	bl	7b8 <__cxa_finalize@plt>
     9bc:	bl	8e4 <deregister_tm_clones>
     9c0:	ldr	r3, [pc, #28]	; 9e4 <__do_global_dtors_aux+0x64>
     9c4:	mov	r2, #1
     9c8:	add	r3, pc, r3
     9cc:	strb	r2, [r3]
     9d0:	pop	{r4, pc}
     9d4:	.word	0x0001173c
     9d8:	.word	0x0001166c
     9dc:	.word	0x0000006c
     9e0:	.word	0x000116cc
     9e4:	.word	0x000116fc

000009e8 <frame_dummy>:
     9e8:	ldr	r0, [pc, #56]	; a28 <frame_dummy+0x40>
     9ec:	ldr	r3, [pc, #56]	; a2c <frame_dummy+0x44>
     9f0:	add	r0, pc, r0
     9f4:	ldr	r2, [r0]
     9f8:	add	r3, pc, r3
     9fc:	cmp	r2, #0
     a00:	bne	a08 <frame_dummy+0x20>
     a04:	b	930 <register_tm_clones>
     a08:	ldr	r2, [pc, #32]	; a30 <frame_dummy+0x48>
     a0c:	ldr	r3, [r3, r2]
     a10:	cmp	r3, #0
     a14:	beq	a04 <frame_dummy+0x1c>
     a18:	push	{r4, lr}
     a1c:	blx	r3
     a20:	pop	{r4, lr}
     a24:	b	930 <register_tm_clones>
     a28:	.word	0x000114d4
     a2c:	.word	0x00011600
     a30:	.word	0x0000007c

00000a34 <rb_dlinkAdd>:
     a34:	push	{fp, lr}
     a38:	add	fp, sp, #4
     a3c:	sub	sp, sp, #16
     a40:	str	r0, [fp, #-8]
     a44:	str	r1, [fp, #-12]
     a48:	str	r2, [fp, #-16]
     a4c:	ldr	r3, [fp, #-8]
     a50:	cmp	r3, #0
     a54:	bne	a78 <rb_dlinkAdd+0x44>
     a58:	ldr	r3, [pc, #260]	; b64 <rb_dlinkAdd+0x130>
     a5c:	add	r3, pc, r3
     a60:	mov	r2, #143	; 0x8f
     a64:	ldr	r1, [pc, #252]	; b68 <rb_dlinkAdd+0x134>
     a68:	add	r1, pc, r1
     a6c:	ldr	r0, [pc, #248]	; b6c <rb_dlinkAdd+0x138>
     a70:	add	r0, pc, r0
     a74:	bl	8b4 <__assert_fail@plt>
     a78:	ldr	r3, [fp, #-12]
     a7c:	cmp	r3, #0
     a80:	bne	aa4 <rb_dlinkAdd+0x70>
     a84:	ldr	r3, [pc, #228]	; b70 <rb_dlinkAdd+0x13c>
     a88:	add	r3, pc, r3
     a8c:	mov	r2, #144	; 0x90
     a90:	ldr	r1, [pc, #220]	; b74 <rb_dlinkAdd+0x140>
     a94:	add	r1, pc, r1
     a98:	ldr	r0, [pc, #216]	; b78 <rb_dlinkAdd+0x144>
     a9c:	add	r0, pc, r0
     aa0:	bl	8b4 <__assert_fail@plt>
     aa4:	ldr	r3, [fp, #-16]
     aa8:	cmp	r3, #0
     aac:	bne	ad0 <rb_dlinkAdd+0x9c>
     ab0:	ldr	r3, [pc, #196]	; b7c <rb_dlinkAdd+0x148>
     ab4:	add	r3, pc, r3
     ab8:	mov	r2, #145	; 0x91
     abc:	ldr	r1, [pc, #188]	; b80 <rb_dlinkAdd+0x14c>
     ac0:	add	r1, pc, r1
     ac4:	ldr	r0, [pc, #184]	; b84 <rb_dlinkAdd+0x150>
     ac8:	add	r0, pc, r0
     acc:	bl	8b4 <__assert_fail@plt>
     ad0:	ldr	r3, [fp, #-12]
     ad4:	ldr	r2, [fp, #-8]
     ad8:	str	r2, [r3]
     adc:	ldr	r3, [fp, #-12]
     ae0:	mov	r2, #0
     ae4:	str	r2, [r3, #4]
     ae8:	ldr	r3, [fp, #-16]
     aec:	ldr	r2, [r3]
     af0:	ldr	r3, [fp, #-12]
     af4:	str	r2, [r3, #8]
     af8:	ldr	r3, [fp, #-16]
     afc:	ldr	r3, [r3]
     b00:	cmp	r3, #0
     b04:	beq	b1c <rb_dlinkAdd+0xe8>
     b08:	ldr	r3, [fp, #-16]
     b0c:	ldr	r3, [r3]
     b10:	ldr	r2, [fp, #-12]
     b14:	str	r2, [r3, #4]
     b18:	b	b38 <rb_dlinkAdd+0x104>
     b1c:	ldr	r3, [fp, #-16]
     b20:	ldr	r3, [r3, #4]
     b24:	cmp	r3, #0
     b28:	bne	b38 <rb_dlinkAdd+0x104>
     b2c:	ldr	r3, [fp, #-16]
     b30:	ldr	r2, [fp, #-12]
     b34:	str	r2, [r3, #4]
     b38:	ldr	r3, [fp, #-16]
     b3c:	ldr	r2, [fp, #-12]
     b40:	str	r2, [r3]
     b44:	ldr	r3, [fp, #-16]
     b48:	ldr	r3, [r3, #8]
     b4c:	add	r2, r3, #1
     b50:	ldr	r3, [fp, #-16]
     b54:	str	r2, [r3, #8]
     b58:	nop			; (mov r0, r0)
     b5c:	sub	sp, fp, #4
     b60:	pop	{fp, pc}
     b64:	.word	0x0000094c
     b68:	.word	0x0000084c
     b6c:	.word	0x00000860
     b70:	.word	0x00000920
     b74:	.word	0x00000820
     b78:	.word	0x00000844
     b7c:	.word	0x000008f4
     b80:	.word	0x000007f4
     b84:	.word	0x00000824

00000b88 <rb_dlinkDelete>:
     b88:	push	{fp, lr}
     b8c:	add	fp, sp, #4
     b90:	sub	sp, sp, #8
     b94:	str	r0, [fp, #-8]
     b98:	str	r1, [fp, #-12]
     b9c:	ldr	r3, [fp, #-8]
     ba0:	cmp	r3, #0
     ba4:	bne	bc8 <rb_dlinkDelete+0x40>
     ba8:	ldr	r3, [pc, #240]	; ca0 <rb_dlinkDelete+0x118>
     bac:	add	r3, pc, r3
     bb0:	mov	r2, #235	; 0xeb
     bb4:	ldr	r1, [pc, #232]	; ca4 <rb_dlinkDelete+0x11c>
     bb8:	add	r1, pc, r1
     bbc:	ldr	r0, [pc, #228]	; ca8 <rb_dlinkDelete+0x120>
     bc0:	add	r0, pc, r0
     bc4:	bl	8b4 <__assert_fail@plt>
     bc8:	ldr	r3, [fp, #-12]
     bcc:	cmp	r3, #0
     bd0:	bne	bf4 <rb_dlinkDelete+0x6c>
     bd4:	ldr	r3, [pc, #208]	; cac <rb_dlinkDelete+0x124>
     bd8:	add	r3, pc, r3
     bdc:	mov	r2, #236	; 0xec
     be0:	ldr	r1, [pc, #200]	; cb0 <rb_dlinkDelete+0x128>
     be4:	add	r1, pc, r1
     be8:	ldr	r0, [pc, #196]	; cb4 <rb_dlinkDelete+0x12c>
     bec:	add	r0, pc, r0
     bf0:	bl	8b4 <__assert_fail@plt>
     bf4:	ldr	r3, [fp, #-8]
     bf8:	ldr	r3, [r3, #8]
     bfc:	cmp	r3, #0
     c00:	beq	c1c <rb_dlinkDelete+0x94>
     c04:	ldr	r3, [fp, #-8]
     c08:	ldr	r3, [r3, #8]
     c0c:	ldr	r2, [fp, #-8]
     c10:	ldr	r2, [r2, #4]
     c14:	str	r2, [r3, #4]
     c18:	b	c2c <rb_dlinkDelete+0xa4>
     c1c:	ldr	r3, [fp, #-8]
     c20:	ldr	r2, [r3, #4]
     c24:	ldr	r3, [fp, #-12]
     c28:	str	r2, [r3, #4]
     c2c:	ldr	r3, [fp, #-8]
     c30:	ldr	r3, [r3, #4]
     c34:	cmp	r3, #0
     c38:	beq	c54 <rb_dlinkDelete+0xcc>
     c3c:	ldr	r3, [fp, #-8]
     c40:	ldr	r3, [r3, #4]
     c44:	ldr	r2, [fp, #-8]
     c48:	ldr	r2, [r2, #8]
     c4c:	str	r2, [r3, #8]
     c50:	b	c64 <rb_dlinkDelete+0xdc>
     c54:	ldr	r3, [fp, #-8]
     c58:	ldr	r2, [r3, #8]
     c5c:	ldr	r3, [fp, #-12]
     c60:	str	r2, [r3]
     c64:	ldr	r3, [fp, #-8]
     c68:	mov	r2, #0
     c6c:	str	r2, [r3, #4]
     c70:	ldr	r3, [fp, #-8]
     c74:	ldr	r2, [r3, #4]
     c78:	ldr	r3, [fp, #-8]
     c7c:	str	r2, [r3, #8]
     c80:	ldr	r3, [fp, #-12]
     c84:	ldr	r3, [r3, #8]
     c88:	sub	r2, r3, #1
     c8c:	ldr	r3, [fp, #-12]
     c90:	str	r2, [r3, #8]
     c94:	nop			; (mov r0, r0)
     c98:	sub	sp, fp, #4
     c9c:	pop	{fp, pc}
     ca0:	.word	0x00000808
     ca4:	.word	0x000006fc
     ca8:	.word	0x00000720
     cac:	.word	0x000007dc
     cb0:	.word	0x000006d0
     cb4:	.word	0x00000700

00000cb8 <rb_malloc>:
     cb8:	push	{fp, lr}
     cbc:	add	fp, sp, #4
     cc0:	sub	sp, sp, #16
     cc4:	str	r0, [fp, #-16]
     cc8:	ldr	r1, [fp, #-16]
     ccc:	mov	r0, #1
     cd0:	bl	7a0 <calloc@plt>
     cd4:	mov	r3, r0
     cd8:	str	r3, [fp, #-8]
     cdc:	ldr	r3, [fp, #-8]
     ce0:	cmp	r3, #0
     ce4:	moveq	r3, #1
     ce8:	movne	r3, #0
     cec:	uxtb	r3, r3
     cf0:	cmp	r3, #0
     cf4:	beq	cfc <rb_malloc+0x44>
     cf8:	bl	7e8 <rb_outofmemory@plt>
     cfc:	ldr	r3, [fp, #-8]
     d00:	mov	r0, r3
     d04:	sub	sp, fp, #4
     d08:	pop	{fp, pc}

00000d0c <rb_free>:
     d0c:	push	{fp, lr}
     d10:	add	fp, sp, #4
     d14:	sub	sp, sp, #8
     d18:	str	r0, [fp, #-8]
     d1c:	ldr	r3, [fp, #-8]
     d20:	cmp	r3, #0
     d24:	movne	r3, #1
     d28:	moveq	r3, #0
     d2c:	uxtb	r3, r3
     d30:	cmp	r3, #0
     d34:	beq	d40 <rb_free+0x34>
     d38:	ldr	r0, [fp, #-8]
     d3c:	bl	7d0 <free@plt>
     d40:	nop			; (mov r0, r0)
     d44:	sub	sp, fp, #4
     d48:	pop	{fp, pc}

00000d4c <create_aliases>:
     d4c:	push	{r4, fp, lr}
     d50:	add	fp, sp, #8
     d54:	sub	sp, sp, #28
     d58:	ldr	r4, [pc, #260]	; e64 <create_aliases+0x118>
     d5c:	add	r4, pc, r4
     d60:	ldr	r3, [pc, #256]	; e68 <create_aliases+0x11c>
     d64:	ldr	r3, [r4, r3]
     d68:	ldr	r3, [r3]
     d6c:	sub	r2, fp, #32
     d70:	mov	r1, r2
     d74:	mov	r0, r3
     d78:	bl	80c <rb_dictionary_foreach_start@plt>
     d7c:	b	e2c <create_aliases+0xe0>
     d80:	ldr	r3, [fp, #-16]
     d84:	ldr	r3, [r3]
     d88:	mov	r0, r3
     d8c:	bl	848 <strlen@plt>
     d90:	mov	r3, r0
     d94:	add	r3, r3, #69	; 0x45
     d98:	mov	r0, r3
     d9c:	bl	cb8 <rb_malloc>
     da0:	str	r0, [fp, #-20]	; 0xffffffec
     da4:	ldr	r3, [fp, #-20]	; 0xffffffec
     da8:	add	r3, r3, #68	; 0x44
     dac:	str	r3, [fp, #-24]	; 0xffffffe8
     db0:	ldr	r3, [fp, #-16]
     db4:	ldr	r3, [r3]
     db8:	mov	r1, r3
     dbc:	ldr	r0, [fp, #-24]	; 0xffffffe8
     dc0:	bl	800 <strcpy@plt>
     dc4:	ldr	r3, [fp, #-20]	; 0xffffffec
     dc8:	ldr	r2, [fp, #-24]	; 0xffffffe8
     dcc:	str	r2, [r3]
     dd0:	ldr	r3, [fp, #-20]	; 0xffffffec
     dd4:	add	r3, r3, #20
     dd8:	mov	r2, #48	; 0x30
     ddc:	ldr	r1, [pc, #136]	; e6c <create_aliases+0x120>
     de0:	add	r1, pc, r1
     de4:	mov	r0, r3
     de8:	bl	7dc <memcpy@plt>
     dec:	ldr	r0, [fp, #-20]	; 0xffffffec
     df0:	bl	89c <mod_add_cmd@plt>
     df4:	bl	830 <rb_make_rb_dlink_node@plt>
     df8:	mov	r1, r0
     dfc:	ldr	r3, [pc, #108]	; e70 <create_aliases+0x124>
     e00:	add	r3, pc, r3
     e04:	mov	r2, r3
     e08:	ldr	r0, [fp, #-20]	; 0xffffffec
     e0c:	bl	a34 <rb_dlinkAdd>
     e10:	ldr	r3, [pc, #80]	; e68 <create_aliases+0x11c>
     e14:	ldr	r3, [r4, r3]
     e18:	ldr	r3, [r3]
     e1c:	sub	r2, fp, #32
     e20:	mov	r1, r2
     e24:	mov	r0, r3
     e28:	bl	890 <rb_dictionary_foreach_next@plt>
     e2c:	ldr	r3, [pc, #52]	; e68 <create_aliases+0x11c>
     e30:	ldr	r3, [r4, r3]
     e34:	ldr	r3, [r3]
     e38:	sub	r2, fp, #32
     e3c:	mov	r1, r2
     e40:	mov	r0, r3
     e44:	bl	86c <rb_dictionary_foreach_cur@plt>
     e48:	str	r0, [fp, #-16]
     e4c:	ldr	r3, [fp, #-16]
     e50:	cmp	r3, #0
     e54:	bne	d80 <create_aliases+0x34>
     e58:	nop			; (mov r0, r0)
     e5c:	sub	sp, fp, #8
     e60:	pop	{r4, fp, pc}
     e64:	.word	0x0001129c
     e68:	.word	0x00000074
     e6c:	.word	0x000110e8
     e70:	.word	0x000112c8

00000e74 <destroy_aliases>:
     e74:	push	{fp, lr}
     e78:	add	fp, sp, #4
     e7c:	sub	sp, sp, #8
     e80:	ldr	r3, [pc, #168]	; f30 <destroy_aliases+0xbc>
     e84:	add	r3, pc, r3
     e88:	ldr	r3, [r3]
     e8c:	str	r3, [fp, #-8]
     e90:	ldr	r3, [fp, #-8]
     e94:	cmp	r3, #0
     e98:	beq	ea8 <destroy_aliases+0x34>
     e9c:	ldr	r3, [fp, #-8]
     ea0:	ldr	r3, [r3, #8]
     ea4:	b	eac <destroy_aliases+0x38>
     ea8:	mov	r3, #0
     eac:	str	r3, [fp, #-12]
     eb0:	b	f18 <destroy_aliases+0xa4>
     eb4:	ldr	r3, [fp, #-8]
     eb8:	ldr	r3, [r3]
     ebc:	mov	r0, r3
     ec0:	bl	7ac <mod_del_cmd@plt>
     ec4:	ldr	r3, [fp, #-8]
     ec8:	ldr	r3, [r3]
     ecc:	mov	r0, r3
     ed0:	bl	d0c <rb_free>
     ed4:	ldr	r3, [pc, #88]	; f34 <destroy_aliases+0xc0>
     ed8:	add	r3, pc, r3
     edc:	mov	r1, r3
     ee0:	ldr	r0, [fp, #-8]
     ee4:	bl	b88 <rb_dlinkDelete>
     ee8:	ldr	r0, [fp, #-8]
     eec:	bl	7f4 <rb_free_rb_dlink_node@plt>
     ef0:	ldr	r3, [fp, #-12]
     ef4:	str	r3, [fp, #-8]
     ef8:	ldr	r3, [fp, #-8]
     efc:	cmp	r3, #0
     f00:	beq	f10 <destroy_aliases+0x9c>
     f04:	ldr	r3, [fp, #-8]
     f08:	ldr	r3, [r3, #8]
     f0c:	b	f14 <destroy_aliases+0xa0>
     f10:	mov	r3, #0
     f14:	str	r3, [fp, #-12]
     f18:	ldr	r3, [fp, #-8]
     f1c:	cmp	r3, #0
     f20:	bne	eb4 <destroy_aliases+0x40>
     f24:	nop			; (mov r0, r0)
     f28:	sub	sp, fp, #4
     f2c:	pop	{fp, pc}
     f30:	.word	0x00011244
     f34:	.word	0x000111f0

00000f38 <_modinit>:
     f38:	push	{fp, lr}
     f3c:	add	fp, sp, #4
     f40:	bl	d4c <create_aliases>
     f44:	mov	r3, #0
     f48:	mov	r0, r3
     f4c:	pop	{fp, pc}

00000f50 <_moddeinit>:
     f50:	push	{fp, lr}
     f54:	add	fp, sp, #4
     f58:	bl	e74 <destroy_aliases>
     f5c:	nop			; (mov r0, r0)
     f60:	pop	{fp, pc}

00000f64 <reload_aliases>:
     f64:	push	{fp, lr}
     f68:	add	fp, sp, #4
     f6c:	sub	sp, sp, #8
     f70:	str	r0, [fp, #-8]
     f74:	bl	e74 <destroy_aliases>
     f78:	bl	d4c <create_aliases>
     f7c:	mov	r3, #0
     f80:	mov	r0, r3
     f84:	sub	sp, fp, #4
     f88:	pop	{fp, pc}

00000f8c <m_alias>:
     f8c:	push	{r4, fp, lr}
     f90:	add	fp, sp, #8
     f94:	sub	sp, sp, #44	; 0x2c
     f98:	str	r0, [fp, #-32]	; 0xffffffe0
     f9c:	str	r1, [fp, #-36]	; 0xffffffdc
     fa0:	str	r2, [fp, #-40]	; 0xffffffd8
     fa4:	str	r3, [fp, #-44]	; 0xffffffd4
     fa8:	ldr	r4, [pc, #744]	; 1298 <m_alias+0x30c>
     fac:	add	r4, pc, r4
     fb0:	ldr	r3, [pc, #740]	; 129c <m_alias+0x310>
     fb4:	ldr	r3, [r4, r3]
     fb8:	ldr	r2, [r3]
     fbc:	ldr	r3, [fp, #-32]	; 0xffffffe0
     fc0:	ldr	r3, [r3, #192]	; 0xc0
     fc4:	mov	r1, r3
     fc8:	mov	r0, r2
     fcc:	bl	8a8 <rb_dictionary_retrieve@plt>
     fd0:	str	r0, [fp, #-20]	; 0xffffffec
     fd4:	ldr	r3, [fp, #-20]	; 0xffffffec
     fd8:	cmp	r3, #0
     fdc:	bne	1038 <m_alias+0xac>
     fe0:	ldr	r3, [fp, #-36]	; 0xffffffdc
     fe4:	ldrh	r3, [r3, #80]	; 0x50
     fe8:	cmp	r3, #64	; 0x40
     fec:	bne	128c <m_alias+0x300>
     ff0:	ldr	r3, [fp, #-36]	; 0xffffffdc
     ff4:	ldr	r3, [r3, #24]
     ff8:	cmp	r3, #0
     ffc:	beq	128c <m_alias+0x300>
    1000:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1004:	add	r2, r3, #88	; 0x58
    1008:	ldr	r3, [fp, #-32]	; 0xffffffe0
    100c:	ldr	r3, [r3, #192]	; 0xc0
    1010:	str	r3, [sp]
    1014:	mov	r3, r2
    1018:	ldr	r2, [pc, #640]	; 12a0 <m_alias+0x314>
    101c:	ldr	r2, [r4, r2]
    1020:	add	r2, r2, #88	; 0x58
    1024:	ldr	r1, [pc, #632]	; 12a4 <m_alias+0x318>
    1028:	add	r1, pc, r1
    102c:	ldr	r0, [fp, #-36]	; 0xffffffdc
    1030:	bl	7c4 <sendto_one@plt>
    1034:	b	128c <m_alias+0x300>
    1038:	ldr	r3, [fp, #-36]	; 0xffffffdc
    103c:	ldrd	r2, [r3, #64]	; 0x40
    1040:	mov	r0, #256	; 0x100
    1044:	mov	r1, #0
    1048:	and	r2, r2, r0
    104c:	and	r3, r3, r1
    1050:	orrs	r3, r2, r3
    1054:	bne	1074 <m_alias+0xe8>
    1058:	ldr	r3, [fp, #-36]	; 0xffffffdc
    105c:	ldr	r3, [r3, #432]	; 0x1b0
    1060:	ldr	r3, [r3, #116]	; 0x74
    1064:	cmp	r3, #20
    1068:	bls	1074 <m_alias+0xe8>
    106c:	ldr	r0, [fp, #-36]	; 0xffffffdc
    1070:	bl	884 <flood_endgrace@plt>
    1074:	ldr	r3, [fp, #-20]	; 0xffffffec
    1078:	ldr	r3, [r3, #4]
    107c:	mov	r1, #64	; 0x40
    1080:	mov	r0, r3
    1084:	bl	854 <strchr@plt>
    1088:	str	r0, [fp, #-24]	; 0xffffffe8
    108c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1090:	cmp	r3, #0
    1094:	beq	10d8 <m_alias+0x14c>
    1098:	ldr	r3, [fp, #-24]	; 0xffffffe8
    109c:	add	r3, r3, #1
    10a0:	mov	r1, r3
    10a4:	mov	r0, #0
    10a8:	bl	860 <find_server@plt>
    10ac:	str	r0, [fp, #-16]
    10b0:	ldr	r3, [fp, #-16]
    10b4:	cmp	r3, #0
    10b8:	beq	1114 <m_alias+0x188>
    10bc:	ldr	r3, [fp, #-16]
    10c0:	ldrh	r3, [r3, #80]	; 0x50
    10c4:	cmp	r3, #4
    10c8:	bne	1114 <m_alias+0x188>
    10cc:	mov	r3, #0
    10d0:	str	r3, [fp, #-16]
    10d4:	b	1114 <m_alias+0x188>
    10d8:	ldr	r3, [fp, #-20]	; 0xffffffec
    10dc:	ldr	r3, [r3, #4]
    10e0:	mov	r0, r3
    10e4:	bl	878 <find_named_person@plt>
    10e8:	str	r0, [fp, #-16]
    10ec:	ldr	r3, [fp, #-16]
    10f0:	cmp	r3, #0
    10f4:	beq	1114 <m_alias+0x188>
    10f8:	ldr	r3, [fp, #-16]
    10fc:	ldr	r3, [r3, #56]	; 0x38
    1100:	and	r3, r3, #64	; 0x40
    1104:	cmp	r3, #0
    1108:	bne	1114 <m_alias+0x188>
    110c:	mov	r3, #0
    1110:	str	r3, [fp, #-16]
    1114:	ldr	r3, [fp, #-16]
    1118:	cmp	r3, #0
    111c:	bne	1140 <m_alias+0x1b4>
    1120:	ldr	r3, [fp, #-20]	; 0xffffffec
    1124:	ldr	r3, [r3, #4]
    1128:	ldr	r2, [pc, #376]	; 12a8 <m_alias+0x31c>
    112c:	add	r2, pc, r2
    1130:	mov	r1, #440	; 0x1b8
    1134:	ldr	r0, [fp, #-36]	; 0xffffffdc
    1138:	bl	83c <sendto_one_numeric@plt>
    113c:	b	1290 <m_alias+0x304>
    1140:	mov	r1, #1
    1144:	ldr	r0, [fp, #-32]	; 0xffffffe0
    1148:	bl	818 <msgbuf_reconstruct_tail@plt>
    114c:	ldr	r3, [fp, #4]
    1150:	add	r3, r3, #4
    1154:	ldr	r3, [r3]
    1158:	cmp	r3, #0
    115c:	beq	1178 <m_alias+0x1ec>
    1160:	ldr	r3, [fp, #4]
    1164:	add	r3, r3, #4
    1168:	ldr	r3, [r3]
    116c:	ldrb	r3, [r3]
    1170:	cmp	r3, #0
    1174:	bne	11a0 <m_alias+0x214>
    1178:	ldr	r3, [fp, #-16]
    117c:	add	r3, r3, #88	; 0x58
    1180:	ldr	r2, [pc, #280]	; 12a0 <m_alias+0x314>
    1184:	ldr	r2, [r4, r2]
    1188:	add	r2, r2, #88	; 0x58
    118c:	ldr	r1, [pc, #280]	; 12ac <m_alias+0x320>
    1190:	add	r1, pc, r1
    1194:	ldr	r0, [fp, #-36]	; 0xffffffdc
    1198:	bl	7c4 <sendto_one@plt>
    119c:	b	1290 <m_alias+0x304>
    11a0:	ldr	r3, [fp, #-16]
    11a4:	ldr	r3, [r3, #36]	; 0x24
    11a8:	ldrh	r3, [r3, #80]	; 0x50
    11ac:	cmp	r3, #32
    11b0:	bne	11f0 <m_alias+0x264>
    11b4:	ldr	r3, [fp, #-16]
    11b8:	ldr	r3, [r3, #36]	; 0x24
    11bc:	ldrb	r3, [r3, #396]	; 0x18c
    11c0:	cmp	r3, #0
    11c4:	beq	11f0 <m_alias+0x264>
    11c8:	ldr	r3, [fp, #-36]	; 0xffffffdc
    11cc:	ldrb	r3, [r3, #396]	; 0x18c
    11d0:	cmp	r3, #0
    11d4:	beq	11e4 <m_alias+0x258>
    11d8:	ldr	r3, [fp, #-36]	; 0xffffffdc
    11dc:	add	r2, r3, #396	; 0x18c
    11e0:	b	11f8 <m_alias+0x26c>
    11e4:	ldr	r3, [fp, #-36]	; 0xffffffdc
    11e8:	add	r2, r3, #88	; 0x58
    11ec:	b	11f8 <m_alias+0x26c>
    11f0:	ldr	r3, [fp, #-36]	; 0xffffffdc
    11f4:	add	r2, r3, #88	; 0x58
    11f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    11fc:	cmp	r3, #0
    1200:	beq	1210 <m_alias+0x284>
    1204:	ldr	r3, [fp, #-20]	; 0xffffffec
    1208:	ldr	r3, [r3, #4]
    120c:	b	1268 <m_alias+0x2dc>
    1210:	ldr	r3, [fp, #-16]
    1214:	ldr	r3, [r3, #36]	; 0x24
    1218:	ldrh	r3, [r3, #80]	; 0x50
    121c:	cmp	r3, #32
    1220:	bne	1260 <m_alias+0x2d4>
    1224:	ldr	r3, [fp, #-16]
    1228:	ldr	r3, [r3, #36]	; 0x24
    122c:	ldrb	r3, [r3, #396]	; 0x18c
    1230:	cmp	r3, #0
    1234:	beq	1260 <m_alias+0x2d4>
    1238:	ldr	r3, [fp, #-16]
    123c:	ldrb	r3, [r3, #396]	; 0x18c
    1240:	cmp	r3, #0
    1244:	beq	1254 <m_alias+0x2c8>
    1248:	ldr	r3, [fp, #-16]
    124c:	add	r3, r3, #396	; 0x18c
    1250:	b	1268 <m_alias+0x2dc>
    1254:	ldr	r3, [fp, #-16]
    1258:	add	r3, r3, #88	; 0x58
    125c:	b	1268 <m_alias+0x2dc>
    1260:	ldr	r3, [fp, #-16]
    1264:	add	r3, r3, #88	; 0x58
    1268:	ldr	r1, [fp, #4]
    126c:	add	r1, r1, #4
    1270:	ldr	r1, [r1]
    1274:	str	r1, [sp]
    1278:	ldr	r1, [pc, #48]	; 12b0 <m_alias+0x324>
    127c:	add	r1, pc, r1
    1280:	ldr	r0, [fp, #-16]
    1284:	bl	7c4 <sendto_one@plt>
    1288:	b	1290 <m_alias+0x304>
    128c:	nop			; (mov r0, r0)
    1290:	sub	sp, fp, #8
    1294:	pop	{r4, fp, pc}
    1298:	.word	0x0001104c
    129c:	.word	0x00000074
    12a0:	.word	0x00000084
    12a4:	.word	0x00000308
    12a8:	.word	0x00000224
    12ac:	.word	0x000001e8
    12b0:	.word	0x00000118

Disassembly of section .fini:

000012b4 <_fini>:
    12b4:	push	{r3, lr}
    12b8:	pop	{r3, pc}
