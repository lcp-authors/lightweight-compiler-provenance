
../repos/eddieantonio-ocreval-3ab279a/wordaccci/wordaccci:     file format elf32-littlearm


Disassembly of section .init:

0001075c <.init>:
   1075c:	push	{r3, lr}
   10760:	bl	10940 <abort@plt+0xa4>
   10764:	pop	{r3, pc}

Disassembly of section .plt:

00010768 <calloc@plt-0x14>:
   10768:	push	{lr}		; (str lr, [sp, #-4]!)
   1076c:	ldr	lr, [pc, #4]	; 10778 <calloc@plt-0x4>
   10770:	add	lr, pc, lr
   10774:	ldr	pc, [lr, #8]!
   10778:	andeq	r2, r1, r8, lsl #17

0001077c <calloc@plt>:
   1077c:	add	ip, pc, #0, 12
   10780:	add	ip, ip, #73728	; 0x12000
   10784:	ldr	pc, [ip, #2184]!	; 0x888

00010788 <strcmp@plt>:
   10788:	add	ip, pc, #0, 12
   1078c:	add	ip, ip, #73728	; 0x12000
   10790:	ldr	pc, [ip, #2176]!	; 0x880

00010794 <printf@plt>:
   10794:	add	ip, pc, #0, 12
   10798:	add	ip, ip, #73728	; 0x12000
   1079c:	ldr	pc, [ip, #2168]!	; 0x878

000107a0 <fopen@plt>:
   107a0:	add	ip, pc, #0, 12
   107a4:	add	ip, ip, #73728	; 0x12000
   107a8:	ldr	pc, [ip, #2160]!	; 0x870

000107ac <free@plt>:
   107ac:	add	ip, pc, #0, 12
   107b0:	add	ip, ip, #73728	; 0x12000
   107b4:	ldr	pc, [ip, #2152]!	; 0x868

000107b8 <fgets@plt>:
   107b8:	add	ip, pc, #0, 12
   107bc:	add	ip, ip, #73728	; 0x12000
   107c0:	ldr	pc, [ip, #2144]!	; 0x860

000107c4 <strdup@plt>:
   107c4:	add	ip, pc, #0, 12
   107c8:	add	ip, ip, #73728	; 0x12000
   107cc:	ldr	pc, [ip, #2136]!	; 0x858

000107d0 <unlink@plt>:
   107d0:	add	ip, pc, #0, 12
   107d4:	add	ip, ip, #73728	; 0x12000
   107d8:	ldr	pc, [ip, #2128]!	; 0x850

000107dc <__xstat@plt>:
   107dc:	add	ip, pc, #0, 12
   107e0:	add	ip, ip, #73728	; 0x12000
   107e4:	ldr	pc, [ip, #2120]!	; 0x848

000107e8 <__libc_start_main@plt>:
   107e8:	add	ip, pc, #0, 12
   107ec:	add	ip, ip, #73728	; 0x12000
   107f0:	ldr	pc, [ip, #2112]!	; 0x840

000107f4 <__sysv_signal@plt>:
   107f4:	add	ip, pc, #0, 12
   107f8:	add	ip, ip, #73728	; 0x12000
   107fc:	ldr	pc, [ip, #2104]!	; 0x838

00010800 <__gmon_start__@plt>:
   10800:	add	ip, pc, #0, 12
   10804:	add	ip, ip, #73728	; 0x12000
   10808:	ldr	pc, [ip, #2096]!	; 0x830

0001080c <getpid@plt>:
   1080c:	add	ip, pc, #0, 12
   10810:	add	ip, ip, #73728	; 0x12000
   10814:	ldr	pc, [ip, #2088]!	; 0x828

00010818 <exit@plt>:
   10818:	add	ip, pc, #0, 12
   1081c:	add	ip, ip, #73728	; 0x12000
   10820:	ldr	pc, [ip, #2080]!	; 0x820

00010824 <strlen@plt>:
   10824:	add	ip, pc, #0, 12
   10828:	add	ip, ip, #73728	; 0x12000
   1082c:	ldr	pc, [ip, #2072]!	; 0x818

00010830 <fprintf@plt>:
   10830:	add	ip, pc, #0, 12
   10834:	add	ip, ip, #73728	; 0x12000
   10838:	ldr	pc, [ip, #2064]!	; 0x810

0001083c <sqrt@plt>:
   1083c:	add	ip, pc, #0, 12
   10840:	add	ip, ip, #73728	; 0x12000
   10844:	ldr	pc, [ip, #2056]!	; 0x808

00010848 <__isoc99_sscanf@plt>:
   10848:	add	ip, pc, #0, 12
   1084c:	add	ip, ip, #73728	; 0x12000
   10850:	ldr	pc, [ip, #2048]!	; 0x800

00010854 <fclose@plt>:
   10854:	add	ip, pc, #0, 12
   10858:	add	ip, ip, #73728	; 0x12000
   1085c:	ldr	pc, [ip, #2040]!	; 0x7f8

00010860 <fputc@plt>:
   10860:	add	ip, pc, #0, 12
   10864:	add	ip, ip, #73728	; 0x12000
   10868:	ldr	pc, [ip, #2032]!	; 0x7f0

0001086c <sprintf@plt>:
   1086c:	add	ip, pc, #0, 12
   10870:	add	ip, ip, #73728	; 0x12000
   10874:	ldr	pc, [ip, #2024]!	; 0x7e8

00010878 <atoi@plt>:
   10878:	add	ip, pc, #0, 12
   1087c:	add	ip, ip, #73728	; 0x12000
   10880:	ldr	pc, [ip, #2016]!	; 0x7e0

00010884 <fputs@plt>:
   10884:	add	ip, pc, #0, 12
   10888:	add	ip, ip, #73728	; 0x12000
   1088c:	ldr	pc, [ip, #2008]!	; 0x7d8

00010890 <strncmp@plt>:
   10890:	add	ip, pc, #0, 12
   10894:	add	ip, ip, #73728	; 0x12000
   10898:	ldr	pc, [ip, #2000]!	; 0x7d0

0001089c <abort@plt>:
   1089c:	add	ip, pc, #0, 12
   108a0:	add	ip, ip, #73728	; 0x12000
   108a4:	ldr	pc, [ip, #1992]!	; 0x7c8

Disassembly of section .text:

000108a8 <error@@Base-0xfb4>:
   108a8:	push	{r0, r1, r2, r4, r5, lr}
   108ac:	mov	r3, #0
   108b0:	mov	r5, r1
   108b4:	ldr	r2, [pc, #64]	; 108fc <abort@plt+0x60>
   108b8:	str	r0, [sp, #4]
   108bc:	add	r0, sp, #4
   108c0:	bl	1197c <error@@Base+0x120>
   108c4:	ldr	r3, [sp, #4]
   108c8:	cmp	r3, #1
   108cc:	movgt	r4, #0
   108d0:	bgt	108dc <abort@plt+0x40>
   108d4:	ldr	r0, [pc, #36]	; 10900 <abort@plt+0x64>
   108d8:	bl	1185c <error@@Base>
   108dc:	ldr	r0, [r5, r4, lsl #2]
   108e0:	add	r4, r4, #1
   108e4:	bl	109f8 <abort@plt+0x15c>
   108e8:	ldr	r3, [sp, #4]
   108ec:	cmp	r3, r4
   108f0:	bgt	108dc <abort@plt+0x40>
   108f4:	bl	10a30 <abort@plt+0x194>
   108f8:	bl	11804 <abort@plt+0xf68>
   108fc:	andeq	r1, r1, r6, lsr pc
   10900:	andeq	r1, r1, r6, ror #30
   10904:	mov	fp, #0
   10908:	mov	lr, #0
   1090c:	pop	{r1}		; (ldr r1, [sp], #4)
   10910:	mov	r2, sp
   10914:	push	{r2}		; (str r2, [sp, #-4]!)
   10918:	push	{r0}		; (str r0, [sp, #-4]!)
   1091c:	ldr	ip, [pc, #16]	; 10934 <abort@plt+0x98>
   10920:	push	{ip}		; (str ip, [sp, #-4]!)
   10924:	ldr	r0, [pc, #12]	; 10938 <abort@plt+0x9c>
   10928:	ldr	r3, [pc, #12]	; 1093c <abort@plt+0xa0>
   1092c:	bl	107e8 <__libc_start_main@plt>
   10930:	bl	1089c <abort@plt>
   10934:	andeq	r1, r1, r0, lsl #29
   10938:	andeq	r0, r1, r8, lsr #17
   1093c:	andeq	r1, r1, r0, lsr #28
   10940:	ldr	r3, [pc, #20]	; 1095c <abort@plt+0xc0>
   10944:	ldr	r2, [pc, #20]	; 10960 <abort@plt+0xc4>
   10948:	add	r3, pc, r3
   1094c:	ldr	r2, [r3, r2]
   10950:	cmp	r2, #0
   10954:	bxeq	lr
   10958:	b	10800 <__gmon_start__@plt>
   1095c:			; <UNDEFINED> instruction: 0x000126b0
   10960:	andeq	r0, r0, r0, ror r0
   10964:	ldr	r0, [pc, #24]	; 10984 <abort@plt+0xe8>
   10968:	ldr	r3, [pc, #24]	; 10988 <abort@plt+0xec>
   1096c:	cmp	r3, r0
   10970:	bxeq	lr
   10974:	ldr	r3, [pc, #16]	; 1098c <abort@plt+0xf0>
   10978:	cmp	r3, #0
   1097c:	bxeq	lr
   10980:	bx	r3
   10984:	andeq	r3, r2, r4, lsl #1
   10988:	andeq	r3, r2, r4, lsl #1
   1098c:	andeq	r0, r0, r0
   10990:	ldr	r0, [pc, #36]	; 109bc <abort@plt+0x120>
   10994:	ldr	r1, [pc, #36]	; 109c0 <abort@plt+0x124>
   10998:	sub	r1, r1, r0
   1099c:	asr	r1, r1, #2
   109a0:	add	r1, r1, r1, lsr #31
   109a4:	asrs	r1, r1, #1
   109a8:	bxeq	lr
   109ac:	ldr	r3, [pc, #16]	; 109c4 <abort@plt+0x128>
   109b0:	cmp	r3, #0
   109b4:	bxeq	lr
   109b8:	bx	r3
   109bc:	andeq	r3, r2, r4, lsl #1
   109c0:	andeq	r3, r2, r4, lsl #1
   109c4:	andeq	r0, r0, r0
   109c8:	push	{r4, lr}
   109cc:	ldr	r4, [pc, #24]	; 109ec <abort@plt+0x150>
   109d0:	ldrb	r3, [r4]
   109d4:	cmp	r3, #0
   109d8:	popne	{r4, pc}
   109dc:	bl	10964 <abort@plt+0xc8>
   109e0:	mov	r3, #1
   109e4:	strb	r3, [r4]
   109e8:	pop	{r4, pc}
   109ec:	muleq	r2, r8, r0
   109f0:	b	10990 <abort@plt+0xf4>
   109f4:	andeq	r0, r0, r0
   109f8:	push	{r4, r5, r6, lr}
   109fc:	mov	r1, r0
   10a00:	ldr	r4, [pc, #32]	; 10a28 <abort@plt+0x18c>
   10a04:	mov	r0, r4
   10a08:	ldm	r4, {r5, r6}
   10a0c:	bl	1118c <abort@plt+0x8f0>
   10a10:	ldm	r4, {r1, r2}
   10a14:	ldr	r0, [pc, #16]	; 10a2c <abort@plt+0x190>
   10a18:	sub	r2, r2, r6
   10a1c:	sub	r1, r1, r5
   10a20:	pop	{r4, r5, r6, lr}
   10a24:	b	10af0 <abort@plt+0x254>
   10a28:	andeq	r3, r2, r0, lsl r1
   10a2c:	andeq	r7, r2, r0, ror #7
   10a30:	push	{r4, lr}
   10a34:	sub	sp, sp, #32
   10a38:	add	r2, sp, #24
   10a3c:	add	r1, sp, #16
   10a40:	ldr	r4, [pc, #136]	; 10ad0 <abort@plt+0x234>
   10a44:	mov	r0, r4
   10a48:	bl	10b3c <abort@plt+0x2a0>
   10a4c:	ldr	r1, [r4, #12]
   10a50:	ldr	r4, [pc, #124]	; 10ad4 <abort@plt+0x238>
   10a54:	ldr	r0, [pc, #124]	; 10ad8 <abort@plt+0x23c>
   10a58:	bl	10794 <printf@plt>
   10a5c:	ldr	r0, [pc, #120]	; 10adc <abort@plt+0x240>
   10a60:	ldr	r1, [r4]
   10a64:	bl	10794 <printf@plt>
   10a68:	ldr	r0, [pc, #112]	; 10ae0 <abort@plt+0x244>
   10a6c:	ldr	r1, [r4, #4]
   10a70:	bl	10794 <printf@plt>
   10a74:	ldrd	r2, [r4]
   10a78:	vldr	d6, [pc, #72]	; 10ac8 <abort@plt+0x22c>
   10a7c:	ldr	r0, [pc, #96]	; 10ae4 <abort@plt+0x248>
   10a80:	sub	r3, r2, r3
   10a84:	vmov	s14, r3
   10a88:	vcvt.f64.s32	d7, s14
   10a8c:	vmul.f64	d7, d7, d6
   10a90:	vmov	s13, r2
   10a94:	vcvt.f64.s32	d6, s13
   10a98:	vdiv.f64	d7, d7, d6
   10a9c:	vmov	r2, r3, d7
   10aa0:	bl	10794 <printf@plt>
   10aa4:	ldr	r3, [pc, #60]	; 10ae8 <abort@plt+0x24c>
   10aa8:	ldr	r0, [pc, #60]	; 10aec <abort@plt+0x250>
   10aac:	str	r3, [sp, #8]
   10ab0:	ldrd	r2, [sp, #24]
   10ab4:	strd	r2, [sp]
   10ab8:	ldrd	r2, [sp, #16]
   10abc:	bl	10794 <printf@plt>
   10ac0:	add	sp, sp, #32
   10ac4:	pop	{r4, pc}
   10ac8:	andeq	r0, r0, r0
   10acc:	subsmi	r0, r9, r0
   10ad0:	andeq	r7, r2, r0, ror #7
   10ad4:	andeq	r3, r2, r0, lsl r1
   10ad8:	andeq	r1, r1, r0, lsr #29
   10adc:			; <UNDEFINED> instruction: 0x00011eb6
   10ae0:	andeq	r1, r1, r5, asr #29
   10ae4:	ldrdeq	r1, [r1], -ip
   10ae8:	andeq	r1, r1, r5, lsl #30
   10aec:	strdeq	r1, [r1], -r0
   10af0:	push	{r4, r5, r6, lr}
   10af4:	mov	r4, r0
   10af8:	mov	r6, r1
   10afc:	mov	r5, r2
   10b00:	mov	r1, #32
   10b04:	mov	r0, #1
   10b08:	bl	11898 <error@@Base+0x3c>
   10b0c:	str	r6, [r0, #8]
   10b10:	str	r5, [r0, #12]
   10b14:	ldr	r1, [r4, #24]
   10b18:	ldr	r3, [r4, #28]
   10b1c:	add	r1, r1, r6
   10b20:	add	r3, r3, r5
   10b24:	str	r1, [r4, #24]
   10b28:	mov	r1, r0
   10b2c:	mov	r0, r4
   10b30:	str	r3, [r4, #28]
   10b34:	pop	{r4, r5, r6, lr}
   10b38:	b	11bf0 <error@@Base+0x394>
   10b3c:	ldr	ip, [r0]
   10b40:	push	{r4, r5, r6, lr}
   10b44:	mov	r6, r2
   10b48:	mov	r4, r0
   10b4c:	mov	r5, r1
   10b50:	mov	r2, #0
   10b54:	vpush	{d8}
   10b58:	mov	r3, ip
   10b5c:	cmp	r3, #0
   10b60:	bne	10b74 <abort@plt+0x2d8>
   10b64:	cmp	r2, #1
   10b68:	bgt	10b88 <abort@plt+0x2ec>
   10b6c:	ldr	r0, [pc, #364]	; 10ce0 <abort@plt+0x444>
   10b70:	bl	1185c <error@@Base>
   10b74:	ldr	r1, [r3, #8]
   10b78:	ldr	r3, [r3, #4]
   10b7c:	cmp	r1, #0
   10b80:	addgt	r2, r2, #1
   10b84:	b	10b5c <abort@plt+0x2c0>
   10b88:	ldr	r2, [r4, #24]
   10b8c:	mov	r0, ip
   10b90:	ldr	r1, [r4, #28]
   10b94:	vldr	d8, [pc, #300]	; 10cc8 <abort@plt+0x42c>
   10b98:	vmov	s15, r2
   10b9c:	vldr	d3, [pc, #300]	; 10cd0 <abort@plt+0x434>
   10ba0:	sub	r3, r2, r1
   10ba4:	vmov	s12, r3
   10ba8:	vcvt.f64.s32	d5, s15
   10bac:	vldr	s15, [r4, #12]
   10bb0:	vcvt.f64.s32	d6, s12
   10bb4:	vmov	r3, s15
   10bb8:	vcvt.f64.s32	d2, s15
   10bbc:	vmul.f64	d6, d6, d8
   10bc0:	sub	r3, r3, #1
   10bc4:	vdiv.f64	d4, d6, d5
   10bc8:	vmov	s12, r3
   10bcc:	vcvt.f64.s32	d6, s12
   10bd0:	vstr	d4, [r4, #32]
   10bd4:	vmul.f64	d4, d2, d4
   10bd8:	cmp	r0, #0
   10bdc:	bne	10c68 <abort@plt+0x3cc>
   10be0:	vmul.f64	d3, d3, d6
   10be4:	vdiv.f64	d7, d3, d2
   10be8:	vsub.f64	d7, d4, d7
   10bec:	vldr	d4, [pc, #220]	; 10cd0 <abort@plt+0x434>
   10bf0:	vstr	d7, [r4, #40]	; 0x28
   10bf4:	cmp	ip, #0
   10bf8:	bne	10cb0 <abort@plt+0x414>
   10bfc:	vdiv.f64	d0, d4, d6
   10c00:	vdiv.f64	d0, d0, d2
   10c04:	bl	1083c <sqrt@plt>
   10c08:	vldr	d7, [pc, #200]	; 10cd8 <abort@plt+0x43c>
   10c0c:	vmul.f64	d0, d0, d7
   10c10:	vldr	d7, [r4, #40]	; 0x28
   10c14:	vsub.f64	d7, d7, d0
   10c18:	vcmpe.f64	d7, d8
   10c1c:	vmrs	APSR_nzcv, fpscr
   10c20:	vldrgt	d7, [pc, #160]	; 10cc8 <abort@plt+0x42c>
   10c24:	bgt	10c34 <abort@plt+0x398>
   10c28:	vcmpe.f64	d7, #0.0
   10c2c:	vmrs	APSR_nzcv, fpscr
   10c30:	vldrmi	d7, [pc, #152]	; 10cd0 <abort@plt+0x434>
   10c34:	vstr	d7, [r5]
   10c38:	vldr	d7, [r4, #40]	; 0x28
   10c3c:	vadd.f64	d0, d0, d7
   10c40:	vcmpe.f64	d0, d8
   10c44:	vmrs	APSR_nzcv, fpscr
   10c48:	vldrgt	d0, [pc, #120]	; 10cc8 <abort@plt+0x42c>
   10c4c:	bgt	10c5c <abort@plt+0x3c0>
   10c50:	vcmpe.f64	d0, #0.0
   10c54:	vmrs	APSR_nzcv, fpscr
   10c58:	vldrmi	d0, [pc, #112]	; 10cd0 <abort@plt+0x434>
   10c5c:	vpop	{d8}
   10c60:	vstr	d0, [r6]
   10c64:	pop	{r4, r5, r6, pc}
   10c68:	ldr	lr, [r0, #8]
   10c6c:	ldr	r3, [r0, #12]
   10c70:	sub	lr, r2, lr
   10c74:	sub	r3, r1, r3
   10c78:	vmov	s11, lr
   10c7c:	sub	r3, lr, r3
   10c80:	vmov	s14, r3
   10c84:	vcvt.f64.s32	d5, s11
   10c88:	vcvt.f64.s32	d7, s14
   10c8c:	vmul.f64	d7, d7, d8
   10c90:	vdiv.f64	d1, d7, d5
   10c94:	vmov.f64	d7, d4
   10c98:	vmls.f64	d7, d6, d1
   10c9c:	vadd.f64	d3, d3, d1
   10ca0:	vstr	d1, [r0, #16]
   10ca4:	vstr	d7, [r0, #24]
   10ca8:	ldr	r0, [r0, #4]
   10cac:	b	10bd8 <abort@plt+0x33c>
   10cb0:	vldr	d5, [ip, #24]
   10cb4:	ldr	ip, [ip, #4]
   10cb8:	vsub.f64	d5, d5, d7
   10cbc:	vmla.f64	d4, d5, d5
   10cc0:	b	10bf4 <abort@plt+0x358>
   10cc4:	nop	{0}
   10cc8:	andeq	r0, r0, r0
   10ccc:	subsmi	r0, r9, r0
	...
   10cd8:			; <UNDEFINED> instruction: 0xf5c28f5c
   10cdc:	svccc	0x00ff5c28
   10ce0:	andeq	r1, r1, sp, ror pc
   10ce4:	andeq	r0, r0, r0
   10ce8:	mov	r2, r0
   10cec:	push	{r4, lr}
   10cf0:	mov	r1, #99	; 0x63
   10cf4:	ldr	r0, [pc, #12]	; 10d08 <abort@plt+0x46c>
   10cf8:	bl	107b8 <fgets@plt>
   10cfc:	adds	r0, r0, #0
   10d00:	movne	r0, #1
   10d04:	pop	{r4, pc}
   10d08:	muleq	r2, r9, r0
   10d0c:	push	{r4, lr}
   10d10:	mov	r4, r1
   10d14:	bl	10ce8 <abort@plt+0x44c>
   10d18:	cmp	r0, #0
   10d1c:	popeq	{r4, pc}
   10d20:	mov	r2, r4
   10d24:	ldr	r1, [pc, #20]	; 10d40 <abort@plt+0x4a4>
   10d28:	ldr	r0, [pc, #20]	; 10d44 <abort@plt+0x4a8>
   10d2c:	bl	10848 <__isoc99_sscanf@plt>
   10d30:	sub	r0, r0, #1
   10d34:	clz	r0, r0
   10d38:	lsr	r0, r0, #5
   10d3c:	pop	{r4, pc}
   10d40:	strdeq	r1, [r1], -pc	; <UNPREDICTABLE>
   10d44:	muleq	r2, r9, r0
   10d48:	ldr	r2, [r1]
   10d4c:	cmp	r2, #0
   10d50:	bne	10d60 <abort@plt+0x4c4>
   10d54:	mov	r1, r0
   10d58:	ldr	r0, [pc, #56]	; 10d98 <abort@plt+0x4fc>
   10d5c:	b	10884 <fputs@plt>
   10d60:	ldr	r3, [r1, #4]
   10d64:	vldr	d6, [pc, #36]	; 10d90 <abort@plt+0x4f4>
   10d68:	ldr	r1, [pc, #44]	; 10d9c <abort@plt+0x500>
   10d6c:	sub	r3, r2, r3
   10d70:	vmov	s14, r3
   10d74:	vcvt.f64.s32	d7, s14
   10d78:	vmul.f64	d7, d7, d6
   10d7c:	vmov	s13, r2
   10d80:	vcvt.f64.s32	d6, s13
   10d84:	vdiv.f64	d7, d7, d6
   10d88:	vmov	r2, r3, d7
   10d8c:	b	10830 <fprintf@plt>
   10d90:	andeq	r0, r0, r0
   10d94:	subsmi	r0, r9, r0
   10d98:	muleq	r1, r5, pc	; <UNPREDICTABLE>
   10d9c:	muleq	r1, lr, pc	; <UNPREDICTABLE>
   10da0:	push	{r4, r5, r6, lr}
   10da4:	subs	r5, r1, #0
   10da8:	mov	r4, r0
   10dac:	beq	10dd8 <abort@plt+0x53c>
   10db0:	ldr	r1, [pc, #48]	; 10de8 <abort@plt+0x54c>
   10db4:	ldrd	r2, [r5]
   10db8:	bl	10830 <fprintf@plt>
   10dbc:	mov	r1, r5
   10dc0:	mov	r0, r4
   10dc4:	bl	10d48 <abort@plt+0x4ac>
   10dc8:	mov	r1, r4
   10dcc:	ldr	r0, [pc, #24]	; 10dec <abort@plt+0x550>
   10dd0:	pop	{r4, r5, r6, lr}
   10dd4:	b	10884 <fputs@plt>
   10dd8:	mov	r1, r0
   10ddc:	ldr	r0, [pc, #12]	; 10df0 <abort@plt+0x554>
   10de0:	bl	10884 <fputs@plt>
   10de4:	b	10dc8 <abort@plt+0x52c>
   10de8:	andeq	r1, r1, r4, lsr #31
   10dec:	andeq	r1, r1, sl, asr #31
   10df0:	andeq	r1, r1, pc, lsr #31
   10df4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10df8:	mov	r4, r0
   10dfc:	mov	r6, r1
   10e00:	mov	r7, r2
   10e04:	mov	r2, r3
   10e08:	mov	r5, #1
   10e0c:	ldr	r1, [pc, #196]	; 10ed8 <abort@plt+0x63c>
   10e10:	ldrb	r8, [sp, #32]
   10e14:	ldrb	r9, [sp, #36]	; 0x24
   10e18:	bl	10830 <fprintf@plt>
   10e1c:	mov	r1, #0
   10e20:	mov	r0, r4
   10e24:	ldr	sl, [pc, #176]	; 10edc <abort@plt+0x640>
   10e28:	bl	10da0 <abort@plt+0x504>
   10e2c:	ldr	r3, [pc, #172]	; 10ee0 <abort@plt+0x644>
   10e30:	cmp	r8, #0
   10e34:	mov	r0, r4
   10e38:	ldr	r2, [pc, #164]	; 10ee4 <abort@plt+0x648>
   10e3c:	ldr	r1, [pc, #164]	; 10ee8 <abort@plt+0x64c>
   10e40:	moveq	r2, r3
   10e44:	bl	10830 <fprintf@plt>
   10e48:	ldr	r3, [r6, r5, lsl #3]
   10e4c:	add	r1, r6, r5, lsl #3
   10e50:	cmp	r3, #0
   10e54:	ble	10e70 <abort@plt+0x5d4>
   10e58:	mov	r0, r4
   10e5c:	bl	10da0 <abort@plt+0x504>
   10e60:	mov	r2, r5
   10e64:	mov	r1, sl
   10e68:	mov	r0, r4
   10e6c:	bl	10830 <fprintf@plt>
   10e70:	add	r5, r5, #1
   10e74:	sxth	r3, r5
   10e78:	cmp	r7, r3
   10e7c:	bge	10e48 <abort@plt+0x5ac>
   10e80:	cmp	r8, #0
   10e84:	beq	10eb4 <abort@plt+0x618>
   10e88:	add	r3, r7, #1
   10e8c:	add	r1, r6, r3, lsl #3
   10e90:	ldr	r3, [r6, r3, lsl #3]
   10e94:	cmp	r3, #0
   10e98:	ble	10eb4 <abort@plt+0x618>
   10e9c:	mov	r0, r4
   10ea0:	bl	10da0 <abort@plt+0x504>
   10ea4:	mov	r2, r7
   10ea8:	ldr	r1, [pc, #60]	; 10eec <abort@plt+0x650>
   10eac:	mov	r0, r4
   10eb0:	bl	10830 <fprintf@plt>
   10eb4:	cmp	r9, #0
   10eb8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10ebc:	mov	r1, r6
   10ec0:	mov	r0, r4
   10ec4:	bl	10da0 <abort@plt+0x504>
   10ec8:	mov	r1, r4
   10ecc:	ldr	r0, [pc, #28]	; 10ef0 <abort@plt+0x654>
   10ed0:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   10ed4:	b	10884 <fputs@plt>
   10ed8:	ldrdeq	r1, [r1], -ip
   10edc:	andeq	r1, r1, r1, ror #31
   10ee0:	ldrdeq	r1, [r1], -r5
   10ee4:	andeq	r1, r1, lr, asr #31
   10ee8:	ldrdeq	r1, [r1], -sp
   10eec:	andeq	r1, r1, sl, ror #31
   10ef0:	strdeq	r1, [r1], -r3
   10ef4:	push	{r4, r5, r6, r7, r8, lr}
   10ef8:	mov	r4, r1
   10efc:	mov	r6, r0
   10f00:	add	r4, r4, #4096	; 0x1000
   10f04:	mov	r0, r1
   10f08:	mov	r5, r2
   10f0c:	ldr	r7, [pc, #124]	; 10f90 <abort@plt+0x6f4>
   10f10:	bl	11590 <abort@plt+0xcf4>
   10f14:	ldr	r2, [pc, #120]	; 10f94 <abort@plt+0x6f8>
   10f18:	ldr	r1, [r4, #3952]	; 0xf70
   10f1c:	ldr	r0, [r4, #3956]	; 0xf74
   10f20:	bl	11e00 <error@@Base+0x5a4>
   10f24:	mov	r2, r5
   10f28:	ldr	r1, [pc, #104]	; 10f98 <abort@plt+0x6fc>
   10f2c:	mov	r0, r6
   10f30:	bl	10830 <fprintf@plt>
   10f34:	mov	r1, #0
   10f38:	mov	r0, r6
   10f3c:	bl	10da0 <abort@plt+0x504>
   10f40:	mov	r5, #0
   10f44:	mov	r1, r6
   10f48:	mov	r0, #10
   10f4c:	bl	10860 <fputc@plt>
   10f50:	ldr	r3, [r4, #3956]	; 0xf74
   10f54:	cmp	r3, r5
   10f58:	pople	{r4, r5, r6, r7, r8, pc}
   10f5c:	mov	r0, r6
   10f60:	ldr	r3, [r4, #3952]	; 0xf70
   10f64:	ldr	r1, [r3, r5, lsl #2]
   10f68:	add	r1, r1, #12
   10f6c:	bl	10da0 <abort@plt+0x504>
   10f70:	ldr	r3, [r4, #3952]	; 0xf70
   10f74:	mov	r1, r7
   10f78:	mov	r0, r6
   10f7c:	ldr	r3, [r3, r5, lsl #2]
   10f80:	add	r5, r5, #1
   10f84:	ldr	r2, [r3, #8]
   10f88:	bl	10830 <fprintf@plt>
   10f8c:	b	10f50 <abort@plt+0x6b4>
   10f90:	ldrdeq	r1, [r1], -sp
   10f94:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   10f98:	ldrdeq	r1, [r1], -ip
   10f9c:	ldr	r0, [r0, #8]
   10fa0:	ldr	r1, [r1, #8]
   10fa4:	b	11708 <abort@plt+0xe6c>
   10fa8:	push	{r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
   10fac:	mov	r7, r0
   10fb0:	mov	r5, r1
   10fb4:	bl	10ce8 <abort@plt+0x44c>
   10fb8:	cmp	r0, #0
   10fbc:	bne	10fd0 <abort@plt+0x734>
   10fc0:	mov	r4, #0
   10fc4:	mov	r0, r4
   10fc8:	add	sp, sp, #8
   10fcc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10fd0:	mov	r0, r7
   10fd4:	bl	10ce8 <abort@plt+0x44c>
   10fd8:	cmp	r0, #0
   10fdc:	beq	10fc0 <abort@plt+0x724>
   10fe0:	ldr	r6, [pc, #136]	; 11070 <abort@plt+0x7d4>
   10fe4:	mov	r4, #0
   10fe8:	ldr	r9, [pc, #132]	; 11074 <abort@plt+0x7d8>
   10fec:	add	r8, r6, #29
   10ff0:	b	11040 <abort@plt+0x7a4>
   10ff4:	mov	r0, r8
   10ff8:	bl	10878 <atoi@plt>
   10ffc:	subs	r3, r0, #0
   11000:	ldr	sl, [sp]
   11004:	bne	11020 <abort@plt+0x784>
   11008:	ldr	r1, [pc, #104]	; 11078 <abort@plt+0x7dc>
   1100c:	mov	r0, r8
   11010:	bl	10788 <strcmp@plt>
   11014:	subs	r3, r0, #0
   11018:	moveq	r4, sl
   1101c:	movne	r3, #11
   11020:	ldr	r2, [r5, r3, lsl #3]
   11024:	add	r1, r5, r3, lsl #3
   11028:	add	r2, r2, sl
   1102c:	str	r2, [r5, r3, lsl #3]
   11030:	ldr	r3, [r1, #4]
   11034:	ldr	r2, [sp, #4]
   11038:	add	r3, r3, r2
   1103c:	str	r3, [r1, #4]
   11040:	mov	r0, r7
   11044:	bl	10ce8 <abort@plt+0x44c>
   11048:	cmp	r0, #0
   1104c:	beq	10fc4 <abort@plt+0x728>
   11050:	add	r3, sp, #4
   11054:	mov	r2, sp
   11058:	mov	r1, r9
   1105c:	mov	r0, r6
   11060:	bl	10848 <__isoc99_sscanf@plt>
   11064:	cmp	r0, #2
   11068:	beq	10ff4 <abort@plt+0x758>
   1106c:	b	10fc4 <abort@plt+0x728>
   11070:	muleq	r2, r9, r0
   11074:	strdeq	r1, [r1], -fp
   11078:	strdeq	r1, [r1], -r3
   1107c:	ldr	r3, [r0]
   11080:	add	r1, r3, r1
   11084:	ldr	r3, [r0, #4]
   11088:	add	r2, r3, r2
   1108c:	stm	r0, {r1, r2}
   11090:	bx	lr
   11094:	push	{r4, r5, r6, r7, r8, lr}
   11098:	mov	r7, r0
   1109c:	mov	r8, r1
   110a0:	mov	r6, r2
   110a4:	mov	r5, r3
   110a8:	bl	114c4 <abort@plt+0xc28>
   110ac:	subs	r4, r0, #0
   110b0:	bne	110dc <abort@plt+0x840>
   110b4:	mov	r1, #20
   110b8:	mov	r0, #1
   110bc:	bl	11898 <error@@Base+0x3c>
   110c0:	mov	r4, r0
   110c4:	mov	r0, r8
   110c8:	bl	107c4 <strdup@plt>
   110cc:	mov	r1, r4
   110d0:	str	r0, [r4, #8]
   110d4:	mov	r0, r7
   110d8:	bl	11508 <abort@plt+0xc6c>
   110dc:	ldrd	r2, [r4, #12]
   110e0:	add	r2, r2, r6
   110e4:	add	r3, r3, r5
   110e8:	strd	r2, [r4, #12]
   110ec:	pop	{r4, r5, r6, r7, r8, pc}
   110f0:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
   110f4:	mov	r5, r0
   110f8:	mov	r7, r1
   110fc:	bl	10ce8 <abort@plt+0x44c>
   11100:	cmp	r0, #0
   11104:	beq	11150 <abort@plt+0x8b4>
   11108:	mov	r0, r5
   1110c:	bl	10ce8 <abort@plt+0x44c>
   11110:	cmp	r0, #0
   11114:	beq	11150 <abort@plt+0x8b4>
   11118:	ldr	r4, [pc, #100]	; 11184 <abort@plt+0x8e8>
   1111c:	ldr	r6, [pc, #100]	; 11188 <abort@plt+0x8ec>
   11120:	add	r8, r4, #29
   11124:	mov	r0, r5
   11128:	bl	10ce8 <abort@plt+0x44c>
   1112c:	cmp	r0, #0
   11130:	beq	11150 <abort@plt+0x8b4>
   11134:	add	r3, sp, #4
   11138:	mov	r2, sp
   1113c:	ldr	r0, [pc, #64]	; 11184 <abort@plt+0x8e8>
   11140:	mov	r1, r6
   11144:	bl	10848 <__isoc99_sscanf@plt>
   11148:	cmp	r0, #2
   1114c:	beq	11158 <abort@plt+0x8bc>
   11150:	add	sp, sp, #8
   11154:	pop	{r4, r5, r6, r7, r8, pc}
   11158:	mov	r0, r4
   1115c:	bl	10824 <strlen@plt>
   11160:	add	r0, r4, r0
   11164:	mov	r3, #0
   11168:	ldr	r2, [sp]
   1116c:	mov	r1, r8
   11170:	strb	r3, [r0, #-1]
   11174:	mov	r0, r7
   11178:	ldr	r3, [sp, #4]
   1117c:	bl	11094 <abort@plt+0x7f8>
   11180:	b	11124 <abort@plt+0x888>
   11184:	muleq	r2, r9, r0
   11188:	strdeq	r1, [r1], -fp
   1118c:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   11190:	mov	r6, r1
   11194:	mov	r5, r0
   11198:	mov	r0, r6
   1119c:	ldr	r1, [pc, #328]	; 112ec <abort@plt+0xa50>
   111a0:	bl	11920 <error@@Base+0xc4>
   111a4:	mov	r4, r0
   111a8:	bl	10ce8 <abort@plt+0x44c>
   111ac:	cmp	r0, #0
   111b0:	beq	112d8 <abort@plt+0xa3c>
   111b4:	mov	r2, #45	; 0x2d
   111b8:	ldr	r1, [pc, #304]	; 112f0 <abort@plt+0xa54>
   111bc:	ldr	r0, [pc, #304]	; 112f4 <abort@plt+0xa58>
   111c0:	bl	10890 <strncmp@plt>
   111c4:	cmp	r0, #0
   111c8:	bne	112d8 <abort@plt+0xa3c>
   111cc:	mov	r0, r4
   111d0:	bl	10ce8 <abort@plt+0x44c>
   111d4:	cmp	r0, #0
   111d8:	beq	112d8 <abort@plt+0xa3c>
   111dc:	ldr	r1, [pc, #276]	; 112f8 <abort@plt+0xa5c>
   111e0:	ldr	r0, [pc, #268]	; 112f4 <abort@plt+0xa58>
   111e4:	bl	10788 <strcmp@plt>
   111e8:	cmp	r0, #0
   111ec:	bne	112d8 <abort@plt+0xa3c>
   111f0:	mov	r1, sp
   111f4:	mov	r0, r4
   111f8:	bl	10d0c <abort@plt+0x470>
   111fc:	cmp	r0, #0
   11200:	beq	112d8 <abort@plt+0xa3c>
   11204:	add	r1, sp, #4
   11208:	mov	r0, r4
   1120c:	bl	10d0c <abort@plt+0x470>
   11210:	cmp	r0, #0
   11214:	beq	112d8 <abort@plt+0xa3c>
   11218:	mov	r0, r4
   1121c:	bl	10ce8 <abort@plt+0x44c>
   11220:	cmp	r0, #0
   11224:	beq	112d8 <abort@plt+0xa3c>
   11228:	mov	r0, r4
   1122c:	bl	10ce8 <abort@plt+0x44c>
   11230:	cmp	r0, #0
   11234:	beq	112d8 <abort@plt+0xa3c>
   11238:	ldr	r3, [r5]
   1123c:	add	r1, r5, #8
   11240:	mov	r0, r4
   11244:	ldr	r2, [sp]
   11248:	add	r3, r3, r2
   1124c:	ldr	r2, [sp, #4]
   11250:	str	r3, [r5]
   11254:	ldr	r3, [r5, #4]
   11258:	add	r3, r3, r2
   1125c:	str	r3, [r5, #4]
   11260:	bl	10fa8 <abort@plt+0x70c>
   11264:	mov	r7, r0
   11268:	add	r1, r5, #416	; 0x1a0
   1126c:	mov	r0, r4
   11270:	bl	10fa8 <abort@plt+0x70c>
   11274:	mov	r6, r0
   11278:	add	r1, r5, #824	; 0x338
   1127c:	mov	r0, r4
   11280:	bl	10fa8 <abort@plt+0x70c>
   11284:	ldr	r3, [sp]
   11288:	cmp	r3, #0
   1128c:	ble	112c8 <abort@plt+0xa2c>
   11290:	add	r1, r5, #920	; 0x398
   11294:	mov	r0, r4
   11298:	bl	10fa8 <abort@plt+0x70c>
   1129c:	cmp	r7, #0
   112a0:	ble	112b0 <abort@plt+0xa14>
   112a4:	add	r1, r5, #992	; 0x3e0
   112a8:	mov	r0, r4
   112ac:	bl	110f0 <abort@plt+0x854>
   112b0:	cmp	r6, #0
   112b4:	ble	112c8 <abort@plt+0xa2c>
   112b8:	add	r1, r5, #9024	; 0x2340
   112bc:	mov	r0, r4
   112c0:	add	r1, r1, #24
   112c4:	bl	110f0 <abort@plt+0x854>
   112c8:	mov	r0, r4
   112cc:	bl	11744 <abort@plt+0xea8>
   112d0:	add	sp, sp, #12
   112d4:	pop	{r4, r5, r6, r7, pc}
   112d8:	cmp	r6, #0
   112dc:	ldr	r1, [pc, #24]	; 112fc <abort@plt+0xa60>
   112e0:	movne	r1, r6
   112e4:	ldr	r0, [pc, #20]	; 11300 <abort@plt+0xa64>
   112e8:	bl	118e0 <error@@Base+0x84>
   112ec:	andeq	r2, r1, r9
   112f0:	andeq	r2, r1, fp
   112f4:	muleq	r2, r9, r0
   112f8:	andeq	r2, r1, fp, lsr r0
   112fc:	andeq	r2, r1, r3
   11300:	andeq	r2, r1, fp, rrx
   11304:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   11308:	mov	r4, r0
   1130c:	mov	r0, r1
   11310:	mov	r7, #1
   11314:	mov	r6, #0
   11318:	ldr	r1, [pc, #268]	; 1142c <abort@plt+0xb90>
   1131c:	bl	11920 <error@@Base+0xc4>
   11320:	mov	r5, r0
   11324:	ldr	r3, [pc, #260]	; 11430 <abort@plt+0xb94>
   11328:	ldr	r2, [pc, #260]	; 11434 <abort@plt+0xb98>
   1132c:	ldr	r1, [pc, #260]	; 11438 <abort@plt+0xb9c>
   11330:	bl	10830 <fprintf@plt>
   11334:	ldr	r1, [pc, #256]	; 1143c <abort@plt+0xba0>
   11338:	mov	r0, r5
   1133c:	ldr	r2, [r4]
   11340:	bl	10830 <fprintf@plt>
   11344:	ldr	r1, [pc, #244]	; 11440 <abort@plt+0xba4>
   11348:	mov	r0, r5
   1134c:	ldr	r2, [r4, #4]
   11350:	bl	10830 <fprintf@plt>
   11354:	mov	r1, r4
   11358:	mov	r0, r5
   1135c:	bl	10d48 <abort@plt+0x4ac>
   11360:	mov	r1, r5
   11364:	ldr	r0, [pc, #216]	; 11444 <abort@plt+0xba8>
   11368:	bl	10884 <fputs@plt>
   1136c:	ldr	r3, [pc, #212]	; 11448 <abort@plt+0xbac>
   11370:	mov	r2, #50	; 0x32
   11374:	add	r1, r4, #8
   11378:	mov	r0, r5
   1137c:	strd	r6, [sp]
   11380:	bl	10df4 <abort@plt+0x558>
   11384:	ldr	r3, [pc, #192]	; 1144c <abort@plt+0xbb0>
   11388:	mov	r2, #50	; 0x32
   1138c:	add	r1, r4, #416	; 0x1a0
   11390:	mov	r0, r5
   11394:	strd	r6, [sp]
   11398:	bl	10df4 <abort@plt+0x558>
   1139c:	ldr	r3, [pc, #172]	; 11450 <abort@plt+0xbb4>
   113a0:	mov	r2, #10
   113a4:	add	r1, r4, #824	; 0x338
   113a8:	mov	r0, r5
   113ac:	str	r7, [sp]
   113b0:	str	r7, [sp, #4]
   113b4:	bl	10df4 <abort@plt+0x558>
   113b8:	ldr	r3, [r4]
   113bc:	cmp	r3, r6
   113c0:	ble	1141c <abort@plt+0xb80>
   113c4:	ldr	r3, [pc, #136]	; 11454 <abort@plt+0xbb8>
   113c8:	mov	r2, #8
   113cc:	add	r1, r4, #920	; 0x398
   113d0:	mov	r0, r5
   113d4:	str	r6, [sp]
   113d8:	str	r6, [sp, #4]
   113dc:	bl	10df4 <abort@plt+0x558>
   113e0:	ldr	r3, [r4, #8]
   113e4:	cmp	r3, r6
   113e8:	ble	113fc <abort@plt+0xb60>
   113ec:	ldr	r2, [pc, #84]	; 11448 <abort@plt+0xbac>
   113f0:	add	r1, r4, #992	; 0x3e0
   113f4:	mov	r0, r5
   113f8:	bl	10ef4 <abort@plt+0x658>
   113fc:	ldr	r3, [r4, #416]	; 0x1a0
   11400:	cmp	r3, #0
   11404:	ble	1141c <abort@plt+0xb80>
   11408:	add	r1, r4, #9024	; 0x2340
   1140c:	ldr	r2, [pc, #56]	; 1144c <abort@plt+0xbb0>
   11410:	mov	r0, r5
   11414:	add	r1, r1, #24
   11418:	bl	10ef4 <abort@plt+0x658>
   1141c:	mov	r0, r5
   11420:	add	sp, sp, #12
   11424:	pop	{r4, r5, r6, r7, lr}
   11428:	b	11744 <abort@plt+0xea8>
   1142c:	andeq	r2, r1, sp, ror r0
   11430:	andeq	r2, r1, fp, lsr r0
   11434:	andeq	r2, r1, fp
   11438:	andeq	r2, r1, pc, ror r0
   1143c:	andeq	r2, r1, r4, lsl #1
   11440:	muleq	r1, r2, r0
   11444:	andeq	r1, r1, r3, ror #29
   11448:	andeq	r2, r1, r8, lsr #1
   1144c:	strheq	r2, [r1], -fp
   11450:	strheq	r2, [r1], -r2	; <UNPREDICTABLE>
   11454:	andeq	r2, r1, r9, asr #1
   11458:	sub	r0, r0, #1
   1145c:	mov	r3, #0
   11460:	ldrb	r2, [r0, #1]!
   11464:	cmp	r2, #0
   11468:	bne	11480 <abort@plt+0xbe4>
   1146c:	movw	r2, #503	; 0x1f7
   11470:	udiv	r0, r3, r2
   11474:	mls	r0, r2, r0, r3
   11478:	sxth	r0, r0
   1147c:	bx	lr
   11480:	add	r3, r3, r2
   11484:	b	11460 <abort@plt+0xbc4>
   11488:	push	{r4, r5, r6, lr}
   1148c:	add	r6, r0, #8000	; 0x1f40
   11490:	mov	r4, r0
   11494:	mov	r5, r0
   11498:	add	r6, r6, #48	; 0x30
   1149c:	mov	r0, r5
   114a0:	add	r5, r5, #16
   114a4:	bl	11bc8 <error@@Base+0x36c>
   114a8:	cmp	r5, r6
   114ac:	bne	1149c <abort@plt+0xc00>
   114b0:	add	r4, r4, #4096	; 0x1000
   114b4:	mov	r3, #0
   114b8:	str	r3, [r4, #3952]	; 0xf70
   114bc:	str	r3, [r4, #3956]	; 0xf74
   114c0:	pop	{r4, r5, r6, pc}
   114c4:	push	{r4, r5, r6, lr}
   114c8:	mov	r4, r0
   114cc:	mov	r0, r1
   114d0:	mov	r5, r1
   114d4:	bl	11458 <abort@plt+0xbbc>
   114d8:	ldr	r4, [r4, r0, lsl #4]
   114dc:	cmp	r4, #0
   114e0:	beq	114f8 <abort@plt+0xc5c>
   114e4:	mov	r0, r5
   114e8:	ldr	r1, [r4, #8]
   114ec:	bl	10788 <strcmp@plt>
   114f0:	cmp	r0, #0
   114f4:	bne	11500 <abort@plt+0xc64>
   114f8:	mov	r0, r4
   114fc:	pop	{r4, r5, r6, pc}
   11500:	ldr	r4, [r4, #4]
   11504:	b	114dc <abort@plt+0xc40>
   11508:	push	{r4, lr}
   1150c:	mov	r4, r0
   11510:	ldr	r0, [r1, #8]
   11514:	bl	11458 <abort@plt+0xbbc>
   11518:	add	r0, r4, r0, lsl #4
   1151c:	add	r4, r4, #4096	; 0x1000
   11520:	bl	11be0 <error@@Base+0x384>
   11524:	ldr	r0, [r4, #3952]	; 0xf70
   11528:	cmp	r0, #0
   1152c:	beq	1153c <abort@plt+0xca0>
   11530:	bl	107ac <free@plt>
   11534:	mov	r3, #0
   11538:	str	r3, [r4, #3952]	; 0xf70
   1153c:	ldr	r3, [r4, #3956]	; 0xf74
   11540:	add	r3, r3, #1
   11544:	str	r3, [r4, #3956]	; 0xf74
   11548:	pop	{r4, pc}
   1154c:	push	{r4, lr}
   11550:	mov	r4, r0
   11554:	ldr	r0, [r1, #8]
   11558:	bl	11458 <abort@plt+0xbbc>
   1155c:	add	r0, r4, r0, lsl #4
   11560:	add	r4, r4, #4096	; 0x1000
   11564:	bl	11c18 <error@@Base+0x3bc>
   11568:	ldr	r0, [r4, #3952]	; 0xf70
   1156c:	cmp	r0, #0
   11570:	beq	11580 <abort@plt+0xce4>
   11574:	bl	107ac <free@plt>
   11578:	mov	r3, #0
   1157c:	str	r3, [r4, #3952]	; 0xf70
   11580:	ldr	r3, [r4, #3956]	; 0xf74
   11584:	sub	r3, r3, #1
   11588:	str	r3, [r4, #3956]	; 0xf74
   1158c:	pop	{r4, pc}
   11590:	push	{r4, r5, r6, lr}
   11594:	add	r6, r0, #4096	; 0x1000
   11598:	ldr	r4, [r6, #3952]	; 0xf70
   1159c:	cmp	r4, #0
   115a0:	popne	{r4, r5, r6, pc}
   115a4:	ldr	r3, [r6, #3956]	; 0xf74
   115a8:	cmp	r3, #0
   115ac:	popeq	{r4, r5, r6, pc}
   115b0:	mov	r5, r0
   115b4:	mov	r1, #4
   115b8:	mov	r0, r3
   115bc:	bl	11898 <error@@Base+0x3c>
   115c0:	mov	r3, r4
   115c4:	mov	r2, r4
   115c8:	str	r0, [r6, #3952]	; 0xf70
   115cc:	movw	lr, #503	; 0x1f7
   115d0:	ldr	r1, [r5, r2, lsl #4]
   115d4:	mov	ip, r3
   115d8:	cmp	r1, #0
   115dc:	mov	r3, ip
   115e0:	bne	115f4 <abort@plt+0xd58>
   115e4:	add	r2, r2, #1
   115e8:	cmp	r2, lr
   115ec:	bne	115d0 <abort@plt+0xd34>
   115f0:	pop	{r4, r5, r6, pc}
   115f4:	str	r1, [r0, ip, lsl #2]
   115f8:	add	ip, ip, #1
   115fc:	ldr	r1, [r1, #4]
   11600:	b	115d8 <abort@plt+0xd3c>
   11604:	push	{r4, r5, r6, r7, r8, lr}
   11608:	add	r6, r0, #8000	; 0x1f40
   1160c:	mov	r4, r0
   11610:	mov	r7, r1
   11614:	mov	r5, r0
   11618:	add	r6, r6, #48	; 0x30
   1161c:	mov	r0, r5
   11620:	mov	r1, r7
   11624:	add	r5, r5, #16
   11628:	bl	11cc0 <error@@Base+0x464>
   1162c:	cmp	r5, r6
   11630:	bne	1161c <abort@plt+0xd80>
   11634:	add	r4, r4, #4096	; 0x1000
   11638:	ldr	r0, [r4, #3952]	; 0xf70
   1163c:	cmp	r0, #0
   11640:	beq	11650 <abort@plt+0xdb4>
   11644:	bl	107ac <free@plt>
   11648:	mov	r3, #0
   1164c:	str	r3, [r4, #3952]	; 0xf70
   11650:	mov	r3, #0
   11654:	str	r3, [r4, #3956]	; 0xf74
   11658:	pop	{r4, r5, r6, r7, r8, pc}
   1165c:	ldr	r3, [pc, #56]	; 1169c <abort@plt+0xe00>
   11660:	push	{r4, r5, lr}
   11664:	sub	sp, sp, #116	; 0x74
   11668:	mov	r5, r0
   1166c:	ldr	r4, [r3]
   11670:	bl	1080c <getpid@plt>
   11674:	ldr	r1, [pc, #36]	; 116a0 <abort@plt+0xe04>
   11678:	mov	r3, r0
   1167c:	add	r0, sp, #12
   11680:	str	r5, [sp]
   11684:	mov	r2, r4
   11688:	bl	1086c <sprintf@plt>
   1168c:	add	r0, sp, #12
   11690:	bl	107c4 <strdup@plt>
   11694:	add	sp, sp, #116	; 0x74
   11698:	pop	{r4, r5, pc}
   1169c:	andeq	r7, r2, r4, lsl r4
   116a0:	ldrdeq	r2, [r1], -r1
   116a4:	ldr	r3, [pc, #84]	; 11700 <abort@plt+0xe64>
   116a8:	mov	r5, r0
   116ac:	push	{r7, lr}
   116b0:	ldr	r3, [r3]
   116b4:	cmp	r3, #0
   116b8:	beq	116c0 <abort@plt+0xe24>
   116bc:	blx	r3
   116c0:	ldr	r6, [pc, #60]	; 11704 <abort@plt+0xe68>
   116c4:	mov	r4, #1
   116c8:	ldrsh	r3, [r6]
   116cc:	cmp	r3, r4
   116d0:	bge	116dc <abort@plt+0xe40>
   116d4:	mov	r0, r5
   116d8:	bl	10818 <exit@plt>
   116dc:	mov	r0, r4
   116e0:	add	r4, r4, #1
   116e4:	bl	1165c <abort@plt+0xdc0>
   116e8:	mov	r7, r0
   116ec:	sxth	r4, r4
   116f0:	bl	107d0 <unlink@plt>
   116f4:	mov	r0, r7
   116f8:	bl	107ac <free@plt>
   116fc:	b	116c8 <abort@plt+0xe2c>
   11700:	andeq	r7, r2, r8, lsl r4
   11704:	strdeq	r3, [r2], -lr
   11708:	sub	r2, r0, #1
   1170c:	sub	r1, r1, #1
   11710:	ldrb	r3, [r2, #1]!
   11714:	ldrb	r0, [r1, #1]!
   11718:	cmp	r3, #0
   1171c:	beq	11738 <abort@plt+0xe9c>
   11720:	cmp	r3, r0
   11724:	beq	11710 <abort@plt+0xe74>
   11728:	cmp	r3, r0
   1172c:	mvncc	r0, #0
   11730:	movcs	r0, #1
   11734:	bx	lr
   11738:	cmp	r0, #0
   1173c:	bxeq	lr
   11740:	b	11728 <abort@plt+0xe8c>
   11744:	ldr	r2, [pc, #28]	; 11768 <abort@plt+0xecc>
   11748:	ldr	r2, [r2]
   1174c:	cmp	r2, r0
   11750:	bxeq	lr
   11754:	ldr	r2, [pc, #16]	; 1176c <abort@plt+0xed0>
   11758:	ldr	r2, [r2]
   1175c:	cmp	r2, r0
   11760:	bxeq	lr
   11764:	b	10854 <fclose@plt>
   11768:	muleq	r2, r0, r0
   1176c:	muleq	r2, r4, r0
   11770:	push	{lr}		; (str lr, [sp, #-4]!)
   11774:	sub	sp, sp, #92	; 0x5c
   11778:	mov	r1, sp
   1177c:	bl	11e84 <error@@Base+0x628>
   11780:	clz	r0, r0
   11784:	lsr	r0, r0, #5
   11788:	add	sp, sp, #92	; 0x5c
   1178c:	pop	{pc}		; (ldr pc, [sp], #4)
   11790:	ldr	r3, [pc, #36]	; 117bc <abort@plt+0xf20>
   11794:	push	{r4, lr}
   11798:	ldrh	r0, [r3]
   1179c:	add	r0, r0, #1
   117a0:	sxth	r0, r0
   117a4:	strh	r0, [r3]
   117a8:	bl	1165c <abort@plt+0xdc0>
   117ac:	mov	r4, r0
   117b0:	bl	107d0 <unlink@plt>
   117b4:	mov	r0, r4
   117b8:	pop	{r4, pc}
   117bc:	strdeq	r3, [r2], -lr
   117c0:	push	{r4, lr}
   117c4:	mov	r4, r0
   117c8:	bl	10824 <strlen@plt>
   117cc:	sub	r0, r0, #1
   117d0:	add	r1, r4, #1
   117d4:	sxth	r0, r0
   117d8:	tst	r0, #32768	; 0x8000
   117dc:	bne	117f0 <abort@plt+0xf54>
   117e0:	sub	r3, r0, #1
   117e4:	ldrb	r2, [r1, r3]
   117e8:	cmp	r2, #47	; 0x2f
   117ec:	bne	117fc <abort@plt+0xf60>
   117f0:	add	r0, r0, #1
   117f4:	add	r0, r4, r0
   117f8:	pop	{r4, pc}
   117fc:	mov	r0, r3
   11800:	b	117d8 <abort@plt+0xf3c>
   11804:	push	{r4, lr}
   11808:	mov	r0, #0
   1180c:	bl	116a4 <abort@plt+0xe08>
   11810:	ldr	r2, [pc, #52]	; 1184c <abort@plt+0xfb0>
   11814:	push	{r4, lr}
   11818:	ldr	r2, [r2]
   1181c:	cmp	r2, #0
   11820:	beq	1182c <abort@plt+0xf90>
   11824:	blx	r2
   11828:	bl	11804 <abort@plt+0xf68>
   1182c:	mov	r3, r0
   11830:	ldr	r2, [pc, #24]	; 11850 <abort@plt+0xfb4>
   11834:	ldr	r0, [pc, #24]	; 11854 <abort@plt+0xfb8>
   11838:	ldr	r1, [pc, #24]	; 11858 <abort@plt+0xfbc>
   1183c:	ldr	r2, [r2]
   11840:	ldr	r0, [r0]
   11844:	bl	10830 <fprintf@plt>
   11848:	b	11828 <abort@plt+0xf8c>
   1184c:	andeq	r7, r2, r0, lsl r4
   11850:	andeq	r7, r2, r4, lsl r4
   11854:	andeq	r3, r2, r8, lsl #1
   11858:	ldrdeq	r2, [r1], -pc	; <UNPREDICTABLE>

0001185c <error@@Base>:
   1185c:	mov	r3, r0
   11860:	ldr	r2, [pc, #32]	; 11888 <error@@Base+0x2c>
   11864:	push	{r4, lr}
   11868:	ldr	r0, [pc, #28]	; 1188c <error@@Base+0x30>
   1186c:	ldr	r1, [pc, #28]	; 11890 <error@@Base+0x34>
   11870:	ldr	r2, [r2]
   11874:	ldr	r0, [r0]
   11878:	bl	10830 <fprintf@plt>
   1187c:	ldr	r3, [pc, #16]	; 11894 <error@@Base+0x38>
   11880:	ldr	r0, [r3]
   11884:	bl	116a4 <abort@plt+0xe08>
   11888:	andeq	r7, r2, r4, lsl r4
   1188c:	andeq	r3, r2, r8, lsl #1
   11890:	andeq	r2, r1, lr, ror #1
   11894:	andeq	r3, r2, ip, ror r0
   11898:	push	{r4, lr}
   1189c:	bl	1077c <calloc@plt>
   118a0:	cmp	r0, #0
   118a4:	popne	{r4, pc}
   118a8:	ldr	r0, [pc]	; 118b0 <error@@Base+0x54>
   118ac:	bl	1185c <error@@Base>
   118b0:	strdeq	r2, [r1], -r6
   118b4:	ldr	r3, [pc, #28]	; 118d8 <error@@Base+0x7c>
   118b8:	ldrb	r2, [r3, #2]
   118bc:	cmp	r2, #0
   118c0:	bxne	lr
   118c4:	mov	r2, #1
   118c8:	push	{r4, lr}
   118cc:	ldr	r0, [pc, #8]	; 118dc <error@@Base+0x80>
   118d0:	strb	r2, [r3, #2]
   118d4:	bl	1185c <error@@Base>
   118d8:	strdeq	r3, [r2], -lr
   118dc:	andeq	r2, r1, r0, lsl r1
   118e0:	push	{r0, r1, r2, lr}
   118e4:	mov	r3, r0
   118e8:	ldr	r2, [pc, #32]	; 11910 <error@@Base+0xb4>
   118ec:	str	r1, [sp]
   118f0:	ldr	r0, [pc, #28]	; 11914 <error@@Base+0xb8>
   118f4:	ldr	r1, [pc, #28]	; 11918 <error@@Base+0xbc>
   118f8:	ldr	r2, [r2]
   118fc:	ldr	r0, [r0]
   11900:	bl	10830 <fprintf@plt>
   11904:	ldr	r3, [pc, #16]	; 1191c <error@@Base+0xc0>
   11908:	ldr	r0, [r3]
   1190c:	bl	116a4 <abort@plt+0xe08>
   11910:	andeq	r7, r2, r4, lsl r4
   11914:	andeq	r3, r2, r8, lsl #1
   11918:	andeq	r2, r1, pc, lsl r1
   1191c:	andeq	r3, r2, ip, ror r0
   11920:	push	{r4, r5, r6, lr}
   11924:	subs	r4, r0, #0
   11928:	mov	r5, r1
   1192c:	bne	11948 <error@@Base+0xec>
   11930:	ldrb	r3, [r1]
   11934:	cmp	r3, #114	; 0x72
   11938:	ldreq	r3, [pc, #44]	; 1196c <error@@Base+0x110>
   1193c:	ldrne	r3, [pc, #44]	; 11970 <error@@Base+0x114>
   11940:	ldr	r0, [r3]
   11944:	pop	{r4, r5, r6, pc}
   11948:	bl	107a0 <fopen@plt>
   1194c:	cmp	r0, #0
   11950:	popne	{r4, r5, r6, pc}
   11954:	mov	r1, r4
   11958:	ldrb	r3, [r5]
   1195c:	cmp	r3, #119	; 0x77
   11960:	ldreq	r0, [pc, #12]	; 11974 <error@@Base+0x118>
   11964:	ldrne	r0, [pc, #12]	; 11978 <error@@Base+0x11c>
   11968:	bl	118e0 <error@@Base+0x84>
   1196c:	muleq	r2, r0, r0
   11970:	muleq	r2, r4, r0
   11974:	andeq	r2, r1, ip, lsr #2
   11978:	andeq	r2, r1, r2, asr #2
   1197c:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11980:	mov	r8, r0
   11984:	mov	r7, r1
   11988:	mov	r9, r3
   1198c:	ldr	r0, [r1]
   11990:	str	r2, [sp]
   11994:	bl	117c0 <abort@plt+0xf24>
   11998:	ldr	r3, [pc, #396]	; 11b2c <error@@Base+0x2d0>
   1199c:	ldr	r1, [pc, #396]	; 11b30 <error@@Base+0x2d4>
   119a0:	str	r0, [r3]
   119a4:	mov	r0, #2
   119a8:	bl	107f4 <__sysv_signal@plt>
   119ac:	ldr	r1, [pc, #380]	; 11b30 <error@@Base+0x2d4>
   119b0:	mov	r0, #15
   119b4:	bl	107f4 <__sysv_signal@plt>
   119b8:	ldr	r4, [r8]
   119bc:	cmp	r4, #1
   119c0:	movne	r6, #0
   119c4:	movne	r4, #1
   119c8:	bne	11aec <error@@Base+0x290>
   119cc:	ldr	r3, [pc, #352]	; 11b34 <error@@Base+0x2d8>
   119d0:	ldrb	r6, [r3, #4]
   119d4:	cmp	r6, #0
   119d8:	beq	11aec <error@@Base+0x290>
   119dc:	ldr	r0, [sp]
   119e0:	bl	11810 <abort@plt+0xf74>
   119e4:	ldr	r5, [r7, r4, lsl #2]
   119e8:	lsl	sl, r4, #2
   119ec:	ldrb	r3, [r5]
   119f0:	cmp	r3, #45	; 0x2d
   119f4:	bne	11b1c <error@@Base+0x2c0>
   119f8:	ldrb	r3, [r5, #1]
   119fc:	cmp	r3, #0
   11a00:	str	r3, [sp, #4]
   11a04:	beq	11b1c <error@@Base+0x2c0>
   11a08:	mov	r0, r5
   11a0c:	bl	10824 <strlen@plt>
   11a10:	mov	r2, r0
   11a14:	mov	r1, r5
   11a18:	ldr	r0, [pc, #280]	; 11b38 <error@@Base+0x2dc>
   11a1c:	bl	10890 <strncmp@plt>
   11a20:	cmp	r0, #0
   11a24:	beq	119dc <error@@Base+0x180>
   11a28:	add	r0, r4, #1
   11a2c:	ldr	r3, [sp, #4]
   11a30:	cmp	r0, fp
   11a34:	addlt	sl, r7, sl
   11a38:	movge	r1, #0
   11a3c:	ldrlt	r1, [sl, #4]
   11a40:	cmp	r9, #0
   11a44:	beq	11b04 <error@@Base+0x2a8>
   11a48:	mov	ip, #0
   11a4c:	sxth	r2, ip
   11a50:	add	r2, r2, r2, lsl #1
   11a54:	add	lr, r9, r2, lsl #2
   11a58:	ldrb	r2, [r9, r2, lsl #2]
   11a5c:	cmp	r2, #0
   11a60:	beq	11b04 <error@@Base+0x2a8>
   11a64:	cmp	r3, r2
   11a68:	add	ip, ip, #1
   11a6c:	bne	11a4c <error@@Base+0x1f0>
   11a70:	ldr	r3, [lr, #4]
   11a74:	cmp	r3, #0
   11a78:	bne	11aac <error@@Base+0x250>
   11a7c:	ldr	r3, [lr, #8]
   11a80:	cmp	r3, #0
   11a84:	beq	11b04 <error@@Base+0x2a8>
   11a88:	ldrb	r2, [r5, #2]
   11a8c:	cmp	r2, #0
   11a90:	bne	11b04 <error@@Base+0x2a8>
   11a94:	ldrb	r2, [r3]
   11a98:	cmp	r2, #0
   11a9c:	bne	11b10 <error@@Base+0x2b4>
   11aa0:	mov	r2, #1
   11aa4:	strb	r2, [r3]
   11aa8:	b	11ae4 <error@@Base+0x288>
   11aac:	ldrb	r2, [r5, #2]
   11ab0:	cmp	r1, #0
   11ab4:	cmpeq	r2, #0
   11ab8:	beq	11a7c <error@@Base+0x220>
   11abc:	ldr	ip, [r3]
   11ac0:	cmp	ip, #0
   11ac4:	bne	11b10 <error@@Base+0x2b4>
   11ac8:	cmp	r2, #0
   11acc:	sxth	r0, r0
   11ad0:	addne	r1, r5, #2
   11ad4:	str	r1, [r3]
   11ad8:	ldrb	r3, [r5, #2]
   11adc:	cmp	r3, #0
   11ae0:	moveq	r4, r0
   11ae4:	add	r4, r4, #1
   11ae8:	sxth	r4, r4
   11aec:	ldr	fp, [r8]
   11af0:	cmp	r4, fp
   11af4:	blt	119e4 <error@@Base+0x188>
   11af8:	str	r6, [r8]
   11afc:	add	sp, sp, #12
   11b00:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11b04:	ldr	r0, [pc, #48]	; 11b3c <error@@Base+0x2e0>
   11b08:	mov	r1, r5
   11b0c:	bl	118e0 <error@@Base+0x84>
   11b10:	mov	r1, r5
   11b14:	ldr	r0, [pc, #36]	; 11b40 <error@@Base+0x2e4>
   11b18:	b	11b0c <error@@Base+0x2b0>
   11b1c:	add	r3, r6, #1
   11b20:	str	r5, [r7, r6, lsl #2]
   11b24:	sxth	r6, r3
   11b28:	b	11ae4 <error@@Base+0x288>
   11b2c:	andeq	r7, r2, r4, lsl r4
   11b30:			; <UNDEFINED> instruction: 0x000118b4
   11b34:	andeq	r3, r2, ip, ror r0
   11b38:	andeq	r2, r1, r6, asr r1
   11b3c:	andeq	r2, r1, ip, asr r1
   11b40:	andeq	r2, r1, fp, ror #2
   11b44:	push	{r0, r1, r2, lr}
   11b48:	mov	r3, r0
   11b4c:	ldr	r2, [pc, #28]	; 11b70 <error@@Base+0x314>
   11b50:	str	r1, [sp]
   11b54:	ldr	r0, [pc, #24]	; 11b74 <error@@Base+0x318>
   11b58:	ldr	r1, [pc, #24]	; 11b78 <error@@Base+0x31c>
   11b5c:	ldr	r2, [r2]
   11b60:	ldr	r0, [r0]
   11b64:	bl	10830 <fprintf@plt>
   11b68:	add	sp, sp, #12
   11b6c:	pop	{pc}		; (ldr pc, [sp], #4)
   11b70:	andeq	r7, r2, r4, lsl r4
   11b74:	andeq	r3, r2, r8, lsl #1
   11b78:	andeq	r2, r1, pc, lsl r1
   11b7c:	cmp	r1, #0
   11b80:	push	{r4, lr}
   11b84:	mov	r4, r0
   11b88:	stm	r2, {r1, r3}
   11b8c:	strne	r2, [r1, #4]
   11b90:	streq	r2, [r0]
   11b94:	cmp	r3, #0
   11b98:	streq	r2, [r0, #4]
   11b9c:	ldr	r0, [r0, #8]
   11ba0:	strne	r2, [r3]
   11ba4:	cmp	r0, #0
   11ba8:	beq	11bb8 <error@@Base+0x35c>
   11bac:	bl	107ac <free@plt>
   11bb0:	mov	r3, #0
   11bb4:	str	r3, [r4, #8]
   11bb8:	ldr	r3, [r4, #12]
   11bbc:	add	r3, r3, #1
   11bc0:	str	r3, [r4, #12]
   11bc4:	pop	{r4, pc}
   11bc8:	mov	r3, #0
   11bcc:	str	r3, [r0]
   11bd0:	str	r3, [r0, #4]
   11bd4:	str	r3, [r0, #8]
   11bd8:	str	r3, [r0, #12]
   11bdc:	bx	lr
   11be0:	mov	r2, r1
   11be4:	mov	r1, #0
   11be8:	ldr	r3, [r0]
   11bec:	b	11b7c <error@@Base+0x320>
   11bf0:	mov	r2, r1
   11bf4:	mov	r3, #0
   11bf8:	ldr	r1, [r0, #4]
   11bfc:	b	11b7c <error@@Base+0x320>
   11c00:	mov	r3, r2
   11c04:	mov	r2, r1
   11c08:	ldr	r1, [r3]
   11c0c:	b	11b7c <error@@Base+0x320>
   11c10:	ldr	r3, [r1, #4]
   11c14:	b	11b7c <error@@Base+0x320>
   11c18:	ldr	r3, [r1]
   11c1c:	push	{r4, r5, r6, lr}
   11c20:	mov	r4, r0
   11c24:	mov	r5, #0
   11c28:	ldr	r2, [r1, #4]
   11c2c:	cmp	r3, #0
   11c30:	strne	r2, [r3, #4]
   11c34:	streq	r2, [r0]
   11c38:	ldr	r2, [r1, #4]
   11c3c:	cmp	r2, #0
   11c40:	streq	r3, [r0, #4]
   11c44:	ldr	r0, [r0, #8]
   11c48:	strne	r3, [r2]
   11c4c:	str	r5, [r1]
   11c50:	str	r5, [r1, #4]
   11c54:	cmp	r0, r5
   11c58:	beq	11c64 <error@@Base+0x408>
   11c5c:	bl	107ac <free@plt>
   11c60:	str	r5, [r4, #8]
   11c64:	ldr	r3, [r4, #12]
   11c68:	sub	r3, r3, #1
   11c6c:	str	r3, [r4, #12]
   11c70:	pop	{r4, r5, r6, pc}
   11c74:	ldr	r3, [r0, #8]
   11c78:	cmp	r3, #0
   11c7c:	bxne	lr
   11c80:	ldr	r3, [r0, #12]
   11c84:	cmp	r3, #0
   11c88:	bxeq	lr
   11c8c:	push	{r4, lr}
   11c90:	mov	r1, #4
   11c94:	mov	r4, r0
   11c98:	mov	r0, r3
   11c9c:	bl	11898 <error@@Base+0x3c>
   11ca0:	ldr	r3, [r4]
   11ca4:	str	r0, [r4, #8]
   11ca8:	sub	r0, r0, #4
   11cac:	cmp	r3, #0
   11cb0:	popeq	{r4, pc}
   11cb4:	str	r3, [r0, #4]!
   11cb8:	ldr	r3, [r3, #4]
   11cbc:	b	11cac <error@@Base+0x450>
   11cc0:	push	{r4, r5, r6, lr}
   11cc4:	mov	r5, r0
   11cc8:	mov	r6, r1
   11ccc:	ldr	r4, [r5]
   11cd0:	cmp	r4, #0
   11cd4:	popeq	{r4, r5, r6, pc}
   11cd8:	mov	r0, r5
   11cdc:	mov	r1, r4
   11ce0:	bl	11c18 <error@@Base+0x3bc>
   11ce4:	mov	r0, r4
   11ce8:	blx	r6
   11cec:	b	11ccc <error@@Base+0x470>
   11cf0:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11cf4:	mov	r8, r0
   11cf8:	mov	r9, r1
   11cfc:	ldr	sl, [pc, #248]	; 11dfc <error@@Base+0x5a0>
   11d00:	mov	r7, sl
   11d04:	ldr	r3, [sl]
   11d08:	mov	r4, r9
   11d0c:	mov	r5, r8
   11d10:	ldr	fp, [r3, r8, lsl #2]
   11d14:	cmp	r5, r4
   11d18:	blt	11d58 <error@@Base+0x4fc>
   11d1c:	ldr	r3, [r7]
   11d20:	sub	r1, r4, #1
   11d24:	cmp	r8, r1
   11d28:	str	fp, [r3, r4, lsl #2]
   11d2c:	bge	11d38 <error@@Base+0x4dc>
   11d30:	mov	r0, r8
   11d34:	bl	11cf0 <error@@Base+0x494>
   11d38:	add	r8, r5, #1
   11d3c:	cmp	r8, r9
   11d40:	blt	11d04 <error@@Base+0x4a8>
   11d44:	add	sp, sp, #12
   11d48:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11d4c:	sub	r4, r4, #1
   11d50:	cmp	r5, r4
   11d54:	beq	11df4 <error@@Base+0x598>
   11d58:	ldrd	r2, [r7]
   11d5c:	mov	r0, fp
   11d60:	ldr	r1, [r2, r4, lsl #2]
   11d64:	blx	r3
   11d68:	cmp	r0, #0
   11d6c:	blt	11d4c <error@@Base+0x4f0>
   11d70:	cmp	r5, r4
   11d74:	beq	11df4 <error@@Base+0x598>
   11d78:	ldr	r2, [r7]
   11d7c:	lsl	r3, r4, #2
   11d80:	add	r6, r5, #1
   11d84:	ldr	r1, [r2, r4, lsl #2]
   11d88:	str	r1, [r2, r5, lsl #2]
   11d8c:	cmp	r6, r4
   11d90:	lsl	r2, r6, #2
   11d94:	ldr	r1, [r7]
   11d98:	bge	11de8 <error@@Base+0x58c>
   11d9c:	mov	r0, fp
   11da0:	ldr	r1, [r1, r6, lsl #2]
   11da4:	str	r3, [sp]
   11da8:	ldr	r5, [r7, #4]
   11dac:	str	r2, [sp, #4]
   11db0:	blx	r5
   11db4:	cmp	r0, #0
   11db8:	ldr	r3, [sp]
   11dbc:	ldr	r2, [sp, #4]
   11dc0:	bgt	11de0 <error@@Base+0x584>
   11dc4:	ldr	r1, [r7]
   11dc8:	sub	r5, r4, #1
   11dcc:	ldr	r2, [r1, r2]
   11dd0:	str	r2, [r1, r3]
   11dd4:	mov	r4, r5
   11dd8:	mov	r5, r6
   11ddc:	b	11d14 <error@@Base+0x4b8>
   11de0:	add	r6, r6, #1
   11de4:	b	11d8c <error@@Base+0x530>
   11de8:	moveq	r5, r6
   11dec:	bne	11dc4 <error@@Base+0x568>
   11df0:	b	11dd4 <error@@Base+0x578>
   11df4:	mov	r6, r5
   11df8:	b	11dd4 <error@@Base+0x578>
   11dfc:	andeq	r3, r2, r4, lsl #2
   11e00:	cmp	r0, #1
   11e04:	bxle	lr
   11e08:	ldr	r3, [pc, #12]	; 11e1c <error@@Base+0x5c0>
   11e0c:	stm	r3, {r1, r2}
   11e10:	sub	r1, r0, #1
   11e14:	mov	r0, #0
   11e18:	b	11cf0 <error@@Base+0x494>
   11e1c:	andeq	r3, r2, r4, lsl #2
   11e20:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11e24:	mov	r7, r0
   11e28:	ldr	r6, [pc, #72]	; 11e78 <error@@Base+0x61c>
   11e2c:	ldr	r5, [pc, #72]	; 11e7c <error@@Base+0x620>
   11e30:	add	r6, pc, r6
   11e34:	add	r5, pc, r5
   11e38:	sub	r6, r6, r5
   11e3c:	mov	r8, r1
   11e40:	mov	r9, r2
   11e44:	bl	1075c <calloc@plt-0x20>
   11e48:	asrs	r6, r6, #2
   11e4c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11e50:	mov	r4, #0
   11e54:	add	r4, r4, #1
   11e58:	ldr	r3, [r5], #4
   11e5c:	mov	r2, r9
   11e60:	mov	r1, r8
   11e64:	mov	r0, r7
   11e68:	blx	r3
   11e6c:	cmp	r6, r4
   11e70:	bne	11e54 <error@@Base+0x5f8>
   11e74:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11e78:	andeq	r1, r1, ip, asr #1
   11e7c:	andeq	r1, r1, r4, asr #1
   11e80:	bx	lr
   11e84:	mov	r2, r1
   11e88:	mov	r1, r0
   11e8c:	mov	r0, #3
   11e90:	b	107dc <__xstat@plt>

Disassembly of section .fini:

00011e94 <.fini>:
   11e94:	push	{r3, lr}
   11e98:	pop	{r3, pc}
